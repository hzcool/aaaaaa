[
    {
        "content": "\u7ffb\u8bd1\uff1a\u7ed9\u5b9a $n,m$ \u548c\u5ea6\u6570\u6570\u7ec4 $\\{d_i\\}$\uff0c\u518d\u7ed9\u4f60 $m$ \u6761\u8fb9\uff0c\u8bf7\u6784\u9020\u4e00\u68f5 $n$ \u70b9\u7684\u6811\u5305\u542b\u8fd9 $m$ \u6761\u8fb9\uff0c\u4e14\u7b2c $i$ \u4e2a\u70b9\u7684\u5ea6\u6570\u4e3a $d_i$\uff0c\u6216\u8005\u5224\u65ad\u65e0\u89e3\u3002\n\n---\n\n\u663e\u7136\uff0c\u82e5 $\\sum d_i\\ne 2(n-1)$\uff0c\u5219\u65e0\u89e3\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u8f93\u5165\u7684\u6bcf\u6761\u8fb9\uff0c\u4f7f\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\uff0c\u518d\u6c42\u51fa\u5728\u8fd9 $m$ \u6761\u8fb9\u7684\u57fa\u7840\u4e0a\u6bcf\u4e2a\u70b9\u8fd8\u9700\u8981\u591a\u5c11\u5ea6\u6570\uff08\u8bb0\u4f5c $d_i$\uff0c\u6ce8\u610f\u4e0b\u6587 $d_i$ \u7684\u610f\u4e49\u4e0e\u8f93\u5165\u4e0d\u540c\uff09\u3002\n\n\u5982\u679c\u5b58\u5728 $d_i < 0$\uff0c\u5219\u65e0\u89e3\u3002\n\n\u7136\u540e\u8003\u8651\u6bcf\u4e2a\u8fde\u901a\u5757\uff0c\u7ef4\u62a4\u4e00\u4e2a vector \u8868\u793a\u8fd9\u4e2a\u8fde\u901a\u5757\u4e2d\u6bcf\u4e2a\u70b9\u8fd8\u9700\u8981\u591a\u5c11\u5ea6\u6570\uff0c\u82e5 $u$ \u9700\u8981 $k$ \u7684\u5ea6\u6570\u5c31\u5b58 $k$ \u4e2a $u$\u3002\n\n\u5c06\u6240\u6709\u8fde\u901a\u5757\u5206\u4e3a\u4e24\u7c7b\uff1a\u9700\u8981\u5ea6\u6570 $1$\u3001\u9700\u8981\u5ea6\u6570 $\\ge 2$\uff0c\u4e0b\u6587\u5206\u522b\u79f0\u4e3a\u201c\u7b2c\u4e00\u7c7b\u201d\u201c\u7b2c\u4e8c\u7c7b\u201d\u3002\n\n\u7b2c\u4e00\u7c7b\u8fde\u901a\u5757\u663e\u7136\u8981\u4f18\u5148\u8ddf\u7b2c\u4e8c\u7c7b\u8fde\u901a\u5757\u8fde\uff08\u4e0d\u7136\u5c31\u4e0d\u8fde\u901a\u4e86\uff09\u3002\u6211\u4eec\u679a\u4e3e\u6bcf\u4e2a\u7b2c\u4e8c\u7c7b\u8fde\u901a\u5757\uff0c\u5047\u8bbe\u8fd9\u4e2a\u8fde\u901a\u5757\u8fd8\u9700\u8981 $d$ \u7684\u5ea6\u6570\uff0c\u90a3\u4e48\u62ff\u51fa $d-1$ \u7684\u5ea6\u6570\u8fde\u7b2c\u4e00\u7c7b\u8fde\u901a\u5757\uff0c\u5269\u4e0b $1$ \u7684\u5ea6\u6570\u4f1a\u4f7f\u5f97\u8fd9\u4e2a\u8fde\u901a\u5757\u88ab\u5f52\u5165\u7b2c\u4e00\u7c7b\u4e2d\u3002\n\n\u5982\u679c\u67d0\u4e00\u65f6\u523b\u7b2c\u4e00\u7c7b\u8fde\u901a\u5757\u4e0d\u591f\u4e86\uff0c\u5c31\u65e0\u89e3\u3002\u5982\u679c\u6240\u6709\u7b2c\u4e8c\u7c7b\u8fde\u901a\u5757\u90fd\u7528\u5b8c\u4e86\uff0c\u6b64\u65f6\u5269\u4e0b\u8d85\u8fc7 $2$ \u4e2a\u7b2c\u4e00\u7c7b\u8fde\u901a\u5757\uff0c\u5c31\u4e5f\u65e0\u89e3\u3002\u5426\u5219\uff0c\u6b64\u65f6\u4f1a\u6070\u597d\u5269\u4e0b\u4e24\u4e2a\u7b2c\u4e00\u7c7b\u8fde\u901a\u5757\uff0c\u8fde\u8d77\u6765\u5373\u53ef\u3002\u6700\u540e\u5224\u4e00\u4e0b\u6574\u4e2a\u56fe\u662f\u5426\u8fde\u901a\uff0c\u4e0d\u8fde\u901a\u8fd8\u65e0\u89e3\u3002\u5426\u5219\u8f93\u51fa\u5373\u53ef\u3002\n\n\u8fd9\u9898\u65e0\u89e3\u60c5\u51b5\u633a\u591a\u7684\uff0c\u5bb9\u6613\u6f0f\u60c5\u51b5\uff0c\u5199\u4ee3\u7801\u4e4b\u524d\u8981\u60f3\u6e05\u695a\u3002\n\n```cpp\n//By: OIer rui_er\n#include <bits/stdc++.h>\n#define rep(x,y,z) for(int x=(y);x<=(z);x++)\n#define per(x,y,z) for(int x=(y);x>=(z);x--)\n#define debug(format...) fprintf(stderr, format)\n#define fileIO(s) do{freopen(s\".in\",\"r\",stdin);freopen(s\".out\",\"w\",stdout);}while(false)\nusing namespace std;\ntypedef long long ll;\n\nmt19937 rnd(std::chrono::duration_cast<std::chrono::nanoseconds>(std::chrono::system_clock::now().time_since_epoch()).count());\nint randint(int L, int R) {\n\tuniform_int_distribution<int> dist(L, R);\n\treturn dist(rnd);\n}\n\ntemplate<typename T> void chkmin(T& x, T y) {if(x > y) x = y;}\ntemplate<typename T> void chkmax(T& x, T y) {if(x < y) x = y;}\n\nconst int N = 2e5+5;\n\nint n, m, deg[N];\nvector<int> nds[N], nd1;\nvector<vector<int>> nd2;\nvector<tuple<int, int>> ans;\n\nstruct Dsu {\n    int fa[N];\n    void init(int x) {rep(i, 1, x) fa[i] = i;}\n    int find(int x) {return x == fa[x] ? x : fa[x] = find(fa[x]);}\n    bool same(int x, int y) {return find(x) == find(y);}\n    bool merge(int x, int y) {\n        if(same(x, y)) return false;\n        x = find(x); y = find(y);\n        fa[x] = y;\n        return true;\n    }\n}dsu;\n\nint main() {\n\tscanf(\"%d%d\", &n, &m);\n    rep(i, 1, n) scanf(\"%d\", &deg[i]);\n    if(accumulate(deg+1, deg+1+n, 0) != 2 * (n - 1)) return puts(\"-1\")&0;\n    dsu.init(n);\n    rep(i, 1, m) {\n        int u, v;\n        scanf(\"%d%d\", &u, &v);\n        dsu.merge(u, v);\n        --deg[u]; --deg[v];\n        if(deg[u] < 0 || deg[v] < 0) return puts(\"-1\")&0;\n    }\n    rep(i, 1, n) rep(j, 1, deg[i]) nds[dsu.find(i)].push_back(i);\n    rep(i, 1, n) {\n        if((int)nds[i].size() == 1) nd1.push_back(nds[i][0]);\n        if((int)nds[i].size() > 1) nd2.push_back(nds[i]);\n    }\n    for(auto&& i : nd2) {\n        for(int j = 1; j < (int)i.size(); j++) {\n            if(nd1.empty()) return puts(\"-1\")&0;\n            dsu.merge(i[j], nd1.back());\n            ans.emplace_back(i[j], nd1.back());\n            nd1.pop_back();\n        }\n        nd1.push_back(i[0]);\n    }\n    if((int)nd1.size() > 2) return puts(\"-1\")&0;\n    dsu.merge(nd1[0], nd1[1]);\n    ans.emplace_back(nd1[0], nd1[1]);\n    rep(i, 1, n) if(!dsu.same(i, 1)) return puts(\"-1\")&0;\n    for(auto&& [u, v] : ans) printf(\"%d %d\\n\", u, v);\n\treturn 0;\n}\n```",
        "postTime": 1683899704,
        "uid": 122461,
        "name": "rui_er",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 ABC239F\u3010Construct Highway\u3011"
    }
]