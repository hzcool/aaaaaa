[
    {
        "content": "## \u9898\u76ee\u5927\u610f\n$n$ \u4e2a\u57ce\u5e02 $m$ \u6761\u9053\u8def\uff0c\u6bcf\u6761\u8def $a_i$\uff0c$b_i$\uff0c$c_i$\uff0c\u8868\u793a $a_i$ \u5230 $b_i$ \u7684\u5355\u5411\u8def\uff0c\u9700\u8981\u82b1\u8d39 c_i \u5206\u949f\u8d70\u5230\uff0c\u53ef\u80fd\u4f1a\u6709\u91cd\u8fb9\u548c\u81ea\u73af\u3002\u95ee\u80fd\u5426\u4ece\u7b2c $i$ \u4e2a\u57ce\u5e02\u51fa\u53d1\u7136\u540e\u56de\u5230\u8be5\u57ce\u5e02\u5f62\u6210\u4e00\u4e2a\u73af\uff1f\u53ef\u4ee5\u8f93\u51fa\u6700\u77ed\u65f6\u95f4\uff0c\u5426\u5219 $-1$\u3002\n## \u601d\u8def\n\u5f88\u5bb9\u6613\u60f3\u5230\u672c\u9898\u8003\u5bdf\u7684\u662f\u6700\u77ed\u8def\u3002\n\n**\u5bf9\u4e8e\u4e00\u4e2a\u70b9 $i$ \u6211\u4eec\u53ef\u4ee5\u5148\u6c42\u51fa\u5176\u5230\u5176\u4ed6\u6240\u6709\u70b9\u7684\u6700\u77ed\u8def $dis(i,j)$\u3002**  \n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9 $j$ \u770b\u4e00\u4e0b\u6709\u6ca1\u6709\u5230\u70b9 $i$ \u7684\u8fb9\uff0c\u82e5\u6709\u5c31\u7528 $dis(i,j)+v(j,i)$ \u66f4\u65b0\u70b9 $i$ \u7684\u7b54\u6848\u3002\n\n\u7531\u4e8e**\u8bf4\u660e/\u63d0\u793a**\u4e2d\u6709\uff1a\n> $1\\le C_i\\le 10^{5} $\n\n\u5219\u53ef\u4ee5\u76f4\u63a5\u7528 Dijkstra \u53bb\u6c42\u6700\u77ed\u8def\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $nm\\log m$\u3002",
        "postTime": 1676903010,
        "uid": 367677,
        "name": "lyt_awa",
        "ccfLevel": 5,
        "title": "AT_abc191_e [ABC191E] Come Back Quickly\u9898\u89e3"
    },
    {
        "content": "\n# \u9898\u76ee\u5927\u610f\n$n$ \u4e2a\u57ce\u5e02 $m$ \u6761\u9053\u8def\uff0c\u6bcf\u6761\u8def $a_i,b_i,c_i$\uff0c\u8868\u793a $a_i$ \u5230 $b_i$ \u7684\u5355\u5411\u8def\uff0c\u9700\u8981\u82b1\u8d39 $c_i$ \u5206\u949f\u8d70\u5230\uff0c\u53ef\u80fd\u4f1a\u6709\u91cd\u8fb9\u548c\u81ea\u73af\u3002\n\n\u95ee\u80fd\u5426\u4ece\u7b2c $i$ \u4e2a\u57ce\u5e02\u51fa\u53d1\u7136\u540e\u56de\u5230\u8be5\u57ce\u5e02\u5f62\u6210\u4e00\u4e2a\u73af\uff1f\u53ef\u4ee5\u8f93\u51fa\u6700\u77ed\u65f6\u95f4\uff0c\u5426\u5219 -1\u3002\n\n---\n\n# \u9898\u76ee\u5206\u6790\n\n\u4e0d\u770b\u73af\u7684\u8bdd\uff0c\u663e\u7136\u662f\u4e2a\u5f88\u660e\u663e\u7684\u6700\u77ed\u8def\u95ee\u9898\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5982\u4f55\u5c06\u73af\u7684\u95ee\u9898\u89e3\u51b3\uff1f\u8fd9\u91cc\u8003\u8651\u5230\u4e00\u79cd\u62c6\u70b9\u7684\u505a\u6cd5\u3002\n\n\u6211\u4eec\u5c06\u4e00\u4e2a\u70b9\u62c6\u5206\u4e3a\u5165\u70b9\u548c\u51fa\u70b9\u5206\u522b\u5b58\u5165\u8fb9\u548c\u51fa\u8fb9\uff0c\u7136\u540e\u5c06\u51fa\u8fb9\u5f80\u5165\u8fb9\u8fde\u4e00\u6761\u5355\u5411\u8fb9\u6765\u4fdd\u8bc1\u56fe\u662f\u8fde\u901a\u7684\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff1a\n\n```\n4 4\n1 2\n1 3\n4 1\n3 1\n```\n\n\u9996\u5148\u628a\u70b9 1 \u62c6\u5206\u6210\u70b9 1 \u548c \u70b9 3\uff0c\u70b9 2 \u62c6\u5206\u6210\u70b9 2 \u548c\u70b9 4\u3002\n\n\u8fd9\u6837\u6211\u4eec\u7684\u8fde\u8fb9\u5c31\u662f\u8fd9\u6837\u4e86\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/7rzmuolv.png)\n\n\u5f88\u663e\u7136\u53d1\u73b0\u662f\u4e0d\u8fde\u901a\u7684\uff0c\u4f46\u7531\u4e8e\u6211\u4eec\u8dd1\u6700\u77ed\u8def\u7684\u65f6\u5019\u8981\u4ece\u5b58\u51fa\u8fb9\u7684\u70b9\u5f00\u59cb\uff0c\u6240\u4ee5\u53ea\u80fd\u5c06\u5b58\u5165\u8fb9\u7684\u70b9\u4e0e\u5b58\u51fa\u8fb9\u7684\u70b9\u8fde\u4e00\u6761\u8fb9\uff0c\u5c31\u53d8\u6210\u4e86\u8fd9\u6837\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/b8dyzju8.png)\n\n\n\n\n\u5c31\u53d8\u6210\u4e86\u6211\u4eec\u60f3\u8981\u7684\u5f62\u72b6\uff0c\u8fd9\u65f6\u5019\u518d\u5bf9\u6bcf\u4e2a\u5b58\u51fa\u8fb9\u7684\u70b9\u8dd1\u4e00\u6b21\u6700\u77ed\u8def\u5224\u65ad\u5b83\u80fd\u5426\u5230\u8fbe\u5b58\u5165\u8fb9\u7684\u70b9\u5c31\u884c\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define mi(...) <% __VA_ARGS__ %>\nusing namespace std;\nconst int N=4010;\ninline int read(){\n\tint x;\n\tscanf(\"%d\",&x);\n\treturn x;\n}\n\nmap<int,bool>mp;\n\nint in[N];\nint n,m;\n\nstruct edge {\n\tint v, w;\n};\n\nstruct nde {\n\tint dis,u;\n\tbool operator>(const nde& a) const {\n\t\treturn dis > a.dis;\n\t}\n};\nvector<edge>e[N<<1];\nint dis[N][N<<1];\nbool vis[N<<1];\ninline void dijkstra() {\n    for(int i=1;i<=n+n;++i){\n    \tfor(int j=1;j<=n+n;++j) dis[i][j]=1e9+7;\n\t}\n\t\n    priority_queue<nde,vector<nde>,greater<nde> > q;\n    for(int i=1;i<=n;++i){\n    \tq.push(mi(0,i));\n\t\tdis[i][i]=dis[i+n][i]=0;\n\t\tfor(int i=1;i<=n+n;++i)vis[i]=0; \n\t    while(!q.empty()) {\n\t        int u = q.top().u;\n\t        q.pop();\n\t        if(vis[u])continue;\n\t        vis[u]=1;\n\t        for (auto ed:e[u]) {\n\t            int v = ed.v, w = ed.w;\n\t            if (dis[i][v] > dis[i][u] + w) {\n\t                dis[i][v] = dis[i][u] + w;\n\t                q.push({ dis[i][v], v });\n\t            }\n\t        }\n\t    }\n\t}\n   \n    return;\n}\n\nsigned main(){\n\tn=read(),m=read();\n\tfor(int i=1;i<=m;++i){\n\t\tint x(read()),y(read()),z(read());\n\t\t++in[y];\n\t\te[x].push_back(mi(y+n,z));\n\t}\n\tfor(int i=1;i<=n;++i)\n\t\te[i+n].push_back(mi(i,0));;\n\tdijkstra();\n\tfor(int i=1;i<=n;++i)cout<<(dis[i][i+n]>=1e9+7?-1:dis[i][i+n])<<endl;\n\t\n\treturn(0-0);\n}\n```",
        "postTime": 1676902855,
        "uid": 388414,
        "name": "comcopy",
        "ccfLevel": 0,
        "title": "AT_abc191_e \u9898\u89e3"
    }
]