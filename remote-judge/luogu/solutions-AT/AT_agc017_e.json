[
    {
        "content": "\u9898\u9762\u4e0d\u592a\u7b80\u6d01\uff0c\u4e0d\u662f\u5f88\u597d\u89e3\u91ca\uff0c\u7ffb\u8bd1\u6015\u51fa\u9505\uff0c\u8fd8\u662f\u81ea\u5df1\u770b\u539f\u6587\u5427\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u62fc\u56fe\u7684\u8fc7\u7a0b\u7c7b\u4f3c\u63d2\u5934\u5339\u914d\u4ec0\u4e48\u7684\uff0c\u6240\u4ee5\u5176\u5b9e\u62fc\u56fe\u7684\u5de6\u53f3\u90fd\u53ef\u4ee5\u770b\u4f5c\u63a5\u53e3\u3002\u5bf9\u4e8e\u5de6\u63a5\u53e3\uff0c\u82e5C\u4e3a\u96f6\uff0c\u5219\u63a5\u53e3\u503c\u4e3aA\uff0c\u5426\u5219\u63a5\u53e3\u503c\u4e3a-C\uff1b\u5bf9\u4e8e\u53f3\u63a5\u53e3\uff0c\u82e5D\u4e3a\u96f6\uff0c\u5219\u63a5\u53e3\u503c\u4e3a-B\uff0c\u5426\u5219\u63a5\u53e3\u503c\u4e3aD\n\n\u8fd9\u6837\u5efa\u6a21\u4e4b\u540e\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u4e24\u4e2a\u63a5\u53e3\u80fd\u8fde\u63a5\uff0c\u5f53\u4e14\u4ec5\u5f53\u63a5\u53e3\u503c\u76f8\u7b49\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u4e0d\u540c\u7684\u63a5\u53e3\u503c\u89c6\u4f5c\u70b9\uff0c\u62fc\u56fe\u89c6\u4f5c\u6709\u5411\u8fb9 \uff0c\u8fde\u63a5\u5de6\u53f3\u63a5\u53e3\u5bf9\u5e94\u7684\u70b9\n\n\u73b0\u5728\u6211\u4eec\u7684\u4efb\u52a1\u662f\uff0c\u5c06\u56fe\u4e0a\u7684\u6240\u6709\u8fb9\u5212\u5206\u6210\u82e5\u5e72\u6761\u4e92\u4e0d\u76f8\u4ea4\u7684\u8def\u5f84\uff0c\u8981\u6c42\u8def\u5f84\u8d77\u70b9\u4e3a\u6b63\u6743\uff0c\u7ec8\u70b9\u4e3a\u8d1f\u6743\uff0c\u8fd9\u5bf9\u5e94\u4e86\u4e00\u8fde\u4e32\u7684\u62fc\u56fe\u5de6\u8fb9\u63a5\u5730\u3001\u53f3\u8fb9\u63a5\u5730\u3001\u4e2d\u95f4\u4e92\u63a5\u7684\u8fd9\u79cd\u60c5\u51b5\n\n\u90a3\u53ef\u4ee5\u76f4\u63a5\u6839\u636e\u70b9\u7684\u5ea6\u6570\u6765\u5224\u65ad\u3002\u5bf9\u4e8e\u4e00\u4e2a\u6b63\u6743\u70b9\uff0c\u51fa\u5ea6\u5fc5\u987b\u8981\u5927\u4e8e\u7b49\u4e8e\u5165\u5ea6\uff1b\u5bf9\u4e8e\u4e00\u4e2a\u8d1f\u6743\u70b9\uff0c\u5165\u8bfb\u5fc5\u987b\u8981\u5927\u4e8e\u7b49\u4e8e\u51fa\u5ea6\u3002\u6b64\u5916\uff0c\u4e3a\u4e86\u9632\u6b62 \u201c\u6211 \u63d2 \u6211 \u81ea \u5df1\u201d \u8fd9\u79cd\u60c5\u51b5\u7684\u53d1\u751f\uff0c\u9700\u8981\u7279\u5224\u73af\uff0c\u5373\u5bf9\u4e8e\u4e00\u4e2a\u5f31\u8054\u901a\u5206\u91cf\uff0c\u81f3\u5c11\u8981\u5b58\u5728\u4e00\u4e2a\u51fa\u5165\u5ea6\u4e0d\u76f8\u7b49\u7684\u70b9\uff0c\u76f4\u63a5\u7528\u5e76\u67e5\u96c6\u641e\u4e00\u641e\u5373\u53ef\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int S=(1<<20)+5;\nchar buf[S],*H,*T;\ninline char Get()\n{\n    if(H==T) T=(H=buf)+fread(buf,1,S,stdin);\n    if(H==T) return -1;return *H++;\n}\ninline int read()\n{\n    int x=0;char c=Get();\n    while(!isdigit(c)) c=Get();\n    while(isdigit(c)) x=x*10+c-'0',c=Get();\n    return x;\n}\n\nconst int N=410;\nint n,h,in[N],out[N];\nint fa[N];\nbool ok[N];\n\nint find(const int &x){return fa[x]==x?x:fa[x]=find(fa[x]);}\n\nint main()\n{\n    n=read();h=read();\n    for(int i=1;i<=(h<<1);i++) fa[i]=i;\n    for(int i=1;i<=n;i++)\n    {\n        int A=read(),B=read(),C=read(),D=read();\n        int x=C?C+h:A,y=D?D:B+h;\n        out[x]++;in[y]++;\n        x=find(x);y=find(y);\n        if(x!=y) fa[x]=y;\n    }\n    for(int i=1;i<=h;i++) if(in[i]>out[i]) return !puts(\"NO\");\n    for(int i=h+1;i<=(h<<1);i++) if(in[i]<out[i]) return !puts(\"NO\");\n    for(int i=1;i<=(h<<1);i++) if(in[i]!=out[i]||!in[i]&&!out[i]) ok[find(i)]=1;\n    for(int i=1;i<=(h<<1);i++) if(fa[i]==i&&!ok[i]) return !puts(\"NO\");\n    return !puts(\"YES\");\n}\n```",
        "postTime": 1539851121,
        "uid": 20158,
        "name": "Ebola",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 AT2668 \u3010Jigsaw\u3011"
    },
    {
        "content": "[\u9898\u76ee\u7ffb\u8bd1\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/AT2668)\n\n\u53c2\u8003\u4e86\u7b2c\u4e00\u7bc7\u9898\u89e3\uff0c\u4f46\u66f4\u8be6\u7ec6\u5730\u8bb2\u89e3\u4e86\u3002\n\n\u8fd9\u9898\u5176\u5b9e\u5341\u5206\u7684\u5999\uff0c\u5c3d\u7ba1\u4ee3\u7801\u5f88\u77ed\uff0c\u4f46\u786e\u5b9e\u5bf9\u5f97\u8d77\u5b83\u7d2b\u9898\u7684\u96be\u5ea6\u3002\n\n\u770b\u5230\u8fd9\u6837\u7684\u4e00\u9053\u9898\uff0c\u9996\u5148\u4e00\u4e2a\u5f88\u81ea\u7136\u7684\u60f3\u6cd5\u5c31\u662f\u6309\u7167\u80fd\u62fc\u4e0a\u7684\u5173\u7cfb\u5efa\u56fe\uff0c\u7136\u540e\u901a\u8fc7\u4e00\u4e2a\u795e\u5947\u7684\u65b9\u5f0f\u627e\u5230\u4e00\u6761\u8def\u5f84\u3002\n\n\u4f46\u8fd9\u6837\u4e00\u6765\u5149\u5efa\u56fe\u5c31\u9700\u8981 $\\mathcal O(n^2)$ \u7684\u65f6\u95f4\uff0c\u6ca1\u6709\u529e\u6cd5\u6ee1\u8db3\u9898\u76ee\u7684\u9700\u8981\u3002\u7136\u540e\u53d1\u73b0\u867d\u7136 $n$ \u5f88\u5927\uff0c\u4f46\u662f $H$ \u662f\u5f88\u5c0f\u7684\uff0c\u90a3\u4e48\u4e0b\u4e00\u4e2a\u60f3\u6cd5\u662f\uff0c\u80fd\u4e0d\u80fd\u4f7f\u7528 $H$ \u8fdb\u884c\u5efa\u56fe\u3002\n\n\u7136\u540e\u5c31\u6709\u4e00\u4e2a\u5f88\u5999\u7684\u8f6c\u6362\u65b9\u5f0f\uff0c\u5176\u5b83\u9898\u89e3\u91cc\u8bb2\u4e86\u4e00\u4e9b\u8f6c\u6362\u4e3a\u8d1f\u7684\u65b9\u6cd5\uff0c\u5f88\u5999\uff0c\u5176\u5b9e\u4e0d\u7528\u8fd9\u6837\uff0c\u8fd8\u5f97\u53bb\u5904\u7406\u8d1f\u4e0b\u6807\u7684\u95ee\u9898\uff0c\u53ea\u9700\u8981\u786e\u4fdd\u4e24\u79cd\u4f1a\u88ab\u6620\u5c04\u5230\u4e0d\u76f8\u4ea4\u7684\u533a\u95f4\u91cc\u5c31\u53ef\u4ee5\u4e86\uff0c\u6240\u4ee5\u8fd9\u6837\u8f6c\u5316\u5c31\u53ef\u4ee5\u4e86\uff1a\n\n- \u82e5 $d > 0$, \u5219 $r = d$, \u5426\u5219 $r = b+h$\u3002\n- \u82e5 $c > 0$, \u5219 $l = c+h$ \u5426\u5219 $l = a$\u3002\n\n\u7ecf\u8fc7\u8fd9\u6837\u7684\u8f6c\u6362\uff0c\u53f3\u8fb9\u7684\u82e5\u548c\u5de6\u8fb9\u53ef\u4ee5\u76f8\u63a5\uff0c\u5b83\u4eec\u5c31\u4f1a\u53d8\u6210\u4e00\u4e2a\u4e00\u6837\u7684\u503c\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u7528\u4e00\u6761\u8fb9\u6765\u8868\u793a\u4e00\u5757\u79ef\u6728\uff0c\u8fd9\u6837\u8fb9\u6570\u548c\u70b9\u6570\u90fd\u5728\u4e00\u4e2a\u53ef\u63a5\u53d7\u7684\u8303\u56f4\u5185\u3002\n\n\u7136\u540e\u5c31\u662f\u8981\u5230\u82e5\u5e72\u6761\u8def\u5f84\u4ece\u5c0f\u4e8e $h$ \u7684\u70b9\u5230\u5927\u4e8e $h$ \u7684\u70b9\u5e76\u7ecf\u8fc7\u6240\u6709\u8fb9\u7684\u95ee\u9898\u4e86\uff0c\u627e\u5230\u7ecf\u8fc7\u6bcf\u4e00\u6761\u8fb9\u7684\u8def\u5f84\u90a3\u4e48\u76f4\u63a5\u5c31\u53ef\u4ee5\u60f3\u5230\u6b27\u62c9\u56de\u8def\uff0c\u4f46\u8fd9\u9898\u76ee\u4e2d\u4e0d\u8981\u6c42\u56de\u5230\u539f\u70b9\uff0c\u4e5f\u4e0d\u4e00\u5b9a\u662f\u5168\u90e8\u8fde\u901a\u7684\uff08\u5bf9\u5e94\u539f\u6765\u7684\u79ef\u6728\u4e2d\u4e0d\u4e00\u5b9a\u5168\u90e8\u662f\u4ee5\u51f9\u51f8\u7684\u65b9\u5f0f\u62fc\u63a5\u7684\uff09\uff0c\u6240\u4ee5\u53c8\u6709\u4e86\u4e00\u4e2a\u5f88\u5de7\u5999\u7684\u6784\u9020\u65b9\u5f0f\u3002\n\n\u5efa\u7acb\u4e00\u4e2a\u65b0\u7684\u70b9\uff0c\u5bf9\u4e8e\u8981\u6784\u9020\u7684\u6bcf\u4e00\u6bb5\u8def\u5f84\u5c06\u8fd9\u4e2a\u65b0\u70b9\u548c\u5b83\u8d77\u70b9\u76f8\u8fde\uff0c\u5728\u628a\u7ec8\u70b9\u4e0e\u65b0\u70b9\u76f8\u8fde\uff0c\u7136\u540e\u627e\u5230\u4e00\u6761\u6b27\u62c9\u56de\u8def\uff0c\u5728\u628a\u8fd9\u65b0\u8138\u4e0a\u7684\u8fb9\u548c\u70b9\u7ed9\u53bb\u6389\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u6839\u636e\u6b27\u62c9\u56de\u8def\u8981\u6c42\u6ee1\u8db3\u7684\u6761\u4ef6\u6765\u5224\u65ad\u662f\u5426\u80fd\u6784\u9020\u6210\u529f\u3002\u6709\u5411\u56fe\u6709\u6b27\u62c9\u56de\u8def\u7684\u6761\u4ef6\u662f\u6bcf\u4e2a\u70b9\u5165\u5ea6\u7b49\u4e8e\u51fa\u5ea6\u3002\n\n1. \u5bf9\u4e8e\u5c0f\u4e8e $h$ \u7684\u70b9\uff0c \u5165\u5ea6\u8981\u5c0f\u4e8e\u7b49\u4e8e\u51fa\u5ea6\uff0c\u56e0\u4e3a\u6784\u9020\u7684\u65f6\u5019\u8fd8\u8981\u548c\u65b0\u70b9\u8fde\u8fb9\uff0c \u4f46\u4e0d\u4e00\u5b9a\u662f\u6700\u591a\u53ea\u80fd\u5c0f $1$ \u56e0\u4e3a\u6211\u4eec\u8981\u627e\u51fa\u82e5\u5e72\u6761\u8def\u5f84\u800c\u4e0d\u4e00\u5b9a\u53ea\u6709\u4e00\u6761\u3002\n2. \u5bf9\u4e8e\u5927\u4e8e $h$ \u7684\u70b9\u540c\u7406\u3002\n3. \u6bcf\u4e00\u5757\u81f3\u5c11\u5f97\u6709\u4e00\u4e2a\u70b9\u5165\u5ea6\u51fa\u5ea6\u4e0d\u76f8\u7b49\uff0c\u56e0\u4e3a\u5168\u76f8\u7b49\u4e86\u518d\u548c\u65b0\u70b9\u8fde\u8fb9\u5c31\u6ca1\u6709\u6b27\u62c9\u56de\u8def\u4e86\u3002\n\n\u6ee1\u8db3\u4ee5\u4e0a\u6761\u4ef6\u7684\u5c31\u53ef\u4ee5\u6309\u4e0a\u9762\u6570\u7684\u6784\u9020\u51fa\u6765\uff0c\u4e0d\u6ee1\u8db3\u7684\u5c31\u80af\u5b9a `No` \u4e86\u3002\n\n\u4ee3\u7801\u3002\n\n```cpp\n#include <cstdio>\nconst int H = 405;\nint n, h, fa[H], a, b, c, d, l, r, in[H], out[H], ok[H];\nint find(int x) {\n\tif(x != fa[x]) fa[x] = find(fa[x]);\n\treturn fa[x];\n}\nint main() {\n\tscanf(\"%d%d\", &n, &h);\n\tfor(int i = 1; i <= 2*h; i++) fa[i] = i;\n\tfor(int i = 1; i <= n; i++) {\n\t\tscanf(\"%d%d%d%d\", &a, &b, &c, &d);\n\t\tif(d) r = d; else r = b+h;\n\t\tif(c) l = c+h; else l = a;\n\t\tout[l] ++, in[r] ++;\n\t\tint fx = find(l), fy = find(r);\n\t\tif(fx == fy) continue;\n\t\tfa[fx] = fy;\n\t}\n\tfor(int i = 1; i <= h; i++) if(in[i] > out[i]) return puts(\"NO\"), 0;\n\tfor(int i = h+1; i <= 2*h; i++) if(in[i] < out[i]) return puts(\"NO\"), 0;\n\tfor(int i = 1; i <= 2*h; i++) if(in[i] != out[i] || !in[i] && !out[i]) ok[find(i)] = 1;\n\tfor(int i = 1; i <= 2*h; i++) if(fa[i] == i && !ok[i]) return puts(\"NO\"), 0;\n\tputs(\"YES\");\n\treturn 0;\n}\n```",
        "postTime": 1618467895,
        "uid": 40318,
        "name": "Acfboy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 [AGC017E] Jigsaw"
    },
    {
        "content": "\u5728\u535a\u5ba2\u56ed\u98df\u7528\u66f4\u4f73\uff1a[https://www.cnblogs.com/PinkRabbit/p/AGC017.html](https://www.cnblogs.com/PinkRabbit/p/AGC017.html)\u3002\n\n\u6ce8\u610f\u5230\uff0c\u5982\u679c $C_i \\ne 0$\uff0c\u5219 $A_i$ \u6beb\u65e0\u610f\u4e49\uff0c\u540c\u7406\u5982\u679c $D_i \\ne 0$\uff0c\u5219 $B_i$ \u4e5f\u662f\u6beb\u65e0\u610f\u4e49\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e2a\u62fc\u56fe\u62bd\u8c61\u6210\u4e00\u4e2a\u6570\u5bf9\uff1a$(l_i, r_i)$\u3002\u9700\u8981\u6ee1\u8db3\uff1a\n\n\u5bf9\u4e8e\u4e24\u5757\u62fc\u56fe $(l_i, r_i)$ \u548c $(l_j, r_j)$\uff0c\u60f3\u8ba9 $i$ \u62fc\u56fe\u80fd\u62fc\u5728 $j$ \u62fc\u56fe\u7684\u5de6\u8fb9\uff0c\u5f53\u4e14\u4ec5\u5f53 $r_i = l_j$ \u7684\u65f6\u5019\u624d\u6210\u7acb\u3002\n\n\u628a\u6240\u6709 $l, r$ \u770b\u6210\u56fe\u4e2d\u7684\u8282\u70b9\uff0c\u5bf9\u4e8e\u6bcf\u5757\u62fc\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece $l_i$ \u5411 $r_i$ \u8fde\u4e00\u6761\u8fb9\u3002\n\n\u5219\u9898\u76ee\u5373\u662f\u8981\u6c42\uff1a\u628a\u8fd9\u5f20\u56fe\u5206\u6210\u82e5\u5e72\u6761\u8def\u5f84\uff0c\u6bcf\u6761\u8fb9\u88ab\u6070\u597d\u7ecf\u8fc7\u4e00\u6b21\uff0c\u4e14\u8def\u5f84\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\u8282\u70b9\u6709\u7279\u6b8a\u8981\u6c42\uff08\u8981\u8d34\u5408\u684c\u6cbf\uff09\u3002\n\n\u5b9e\u9645\u4e0a\u5c31\u53ea\u6709\u4e24\u7c7b\u70b9\uff0c\u5fc5\u987b\u4ece\u5de6\u4fa7\u70b9\u51fa\u53d1\u5230\u8fbe\u53f3\u4fa7\u70b9\uff08\u4f46\u662f\u8fd9\u5f20\u56fe\u4e0d\u662f\u4e8c\u5206\u56fe\uff09\u3002\n\n\u8981\u5982\u4f55\u5224\u65ad\u662f\u5426\u53ef\u884c\u5462\uff1f\u6211\u7684\u60f3\u6cd5\u662f\uff1a\u53cd\u6b63\u5df2\u77e5\u9700\u8981\u82b1\u8d39\u7684\u8def\u5f84\u6570\u76ee\uff08\u901a\u8fc7\u5ea6\u6570\u786e\u5b9a\uff09\uff0c\u90a3\u4e48\u8dd1\u4e00\u4e0b\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u5c31\u884c\u3002\n\n\u8fd9\u6837\u597d\u50cf\u786e\u5b9e\u662f\u53ef\u884c\u7684\uff0c\u6bd5\u7adf $H$ \u624d $200$\uff0c\u800c\u4e14\u56fe\u4e2d\u90fd\u662f\u5355\u4f4d\u8fb9\u6743\u5355\u4f4d\u8d39\u7528\uff0c\u4e5f\u8bb8\u6709\u4e9b\u7384\u5b66\u6027\u8d28\u4fdd\u8bc1\u590d\u6742\u5ea6\u3002\n\n\u4e0d\u8fc7\u9898\u89e3\u7ed9\u51fa\u4e86\u66f4\u4f18\u79c0\u7684\u5224\u5b9a\u65b9\u6cd5\uff1a\n\n1. \u9996\u5148\u8981\u4fdd\u8bc1\u6bcf\u4e2a\u5de6\u4fa7\u70b9\u7684\u51fa\u5ea6\u4e0d\u6bd4\u5165\u5ea6\u5c11\uff0c\u53f3\u4fa7\u70b9\u5165\u5ea6\u4e0d\u6bd4\u51fa\u5ea6\u5c11\u3002\n\n2. \u5bf9\u4e8e\u6bcf\u4e2a\u5f31\u8fde\u901a\u5206\u91cf\uff0c\u5176\u4e2d\u5de6\u4fa7\u70b9\u4e2d\u81f3\u5c11\u8981\u6709\u4e00\u4e2a\u80fd\u4f5c\u4e3a\u8d77\u70b9\u7684\u70b9\uff1a\u4e5f\u5c31\u662f\u51fa\u5ea6\u6bd4\u5165\u5ea6\u591a\u3002\n\n\u53ea\u8981\u6ee1\u8db3\u8fd9\u4e24\u4e2a\u6761\u4ef6\u5c31\u4e00\u5b9a\u53ef\u4ee5\u7ed9\u51fa\u65b9\u6848\u4e86\uff0c\u4e0d\u96be\u8bc1\u660e\u662f\u6b63\u786e\u7684\uff08\u6b27\u62c9\u56de\u8def\u90a3\u5957\u7406\u8bba\uff09\u3002\n\n```cpp\n#include <cstdio>\n#include <vector>\n\nconst int MH = 405;\n\nint N, H, deg[MH];\nstd::vector<int> G[MH];\n\nint ok, vis[MH];\nvoid DFS(int u) {\n\tvis[u] = 1;\n\tif (deg[u]) ok = 1;\n\tfor (int v : G[u]) if (!vis[v]) DFS(v);\n}\n\nint main() {\n\tscanf(\"%d%d\", &N, &H);\n\tfor (int i = 1; i <= N; ++i) {\n\t\tint a, b, c, d, x, y;\n\t\tscanf(\"%d%d%d%d\", &a, &b, &c, &d);\n\t\tif (!c) x = a;\n\t\telse x = c + H;\n\t\tif (!d) y = b + H;\n\t\telse y = d;\n\t\t++deg[x], --deg[y];\n\t\tG[x].push_back(y), G[y].push_back(x);\n\t}\n\tfor (int i = 1; i <= H; ++i)\n\t\tif (deg[i] < 0 || deg[i + H] > 0) return puts(\"NO\"), 0;\n\tfor (int i = 1; i <= 2 * H; ++i) if (!G[i].empty() && !vis[i]) {\n\t\tok = 0, DFS(i);\n\t\tif (!ok) return puts(\"NO\"), 0;\n\t}\n\tputs(\"YES\");\n\treturn 0;\n}\n```",
        "postTime": 1596809443,
        "uid": 10703,
        "name": "\u5c0f\u7c89\u5154",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 AT2668 \u3010[AGC017E] Jigsaw\u3011"
    },
    {
        "content": "## [Jigsaw](https://www.luogu.com.cn/problem/AT2668)\n\n> \u4e00\u5757\u62fc\u56fe\u4e2d\u95f4\u5f88\u9ad8\uff0c\u9ad8\u4e3a $H$\uff0c\u5de6\u53f3\u6709\u4e24\u5757\u53ef\u80fd\u60ac\u7a7a\u7684\u90e8\u5206\uff0c\u9ad8\u5ea6\u5747\u4e0d\u8d85\u8fc7 $H$\u3002\u5171 $n$ \u5757\u8fd9\u6837\u7684\u62fc\u56fe\uff0c\u8981\u5c06\u5b83\u4eec\u62fc\u4e00\u5757\uff0c\u4f7f\u5f97\u4e0d\u5b58\u5728\u201c\u60ac\u7a7a\u201d\u7684\u90e8\u5206\uff08\u5177\u4f53\u89c1\u539f\u9898\u9762\u914d\u56fe\uff09\n>\n> $1 \\le n \\le 10^5,1 \\le H \\le 200$\n\n\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u6bd4\u8f83\u76f4\u89c2\u597d\u60f3\u7684\u65b9\u6cd5\uff0c\u4e0d\u8fc7\u5b9e\u73b0\u6bd4\u8f83\u9ebb\u70e6\uff0c\u4ec5\u4f9b\u53c2\u8003\u3002\n\n\u4e3b\u8981\u662f\u5de6\u53f3\u201c\u60ac\u7a7a\u201d\u7684\u90e8\u5206\u4e0d\u597d\u641e\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u6bcf\u4e2a\u60ac\u7a7a\u90e8\u5206\u627e\u5230\u4e00\u4e2a\u53cd\u5411\u7684\u5bf9\u5e94\u9ad8\u5ea6\u7684\u4e0d\u60ac\u7a7a\u90e8\u5206\u3002\u4e00\u79cd\u65b9\u6cd5\u662f\u5bf9\u6bcf\u4e2a\u60ac\u7a7a\u90e8\u5206\u4efb\u610f\u9009\uff0c\u663e\u7136\u5982\u679c\u627e\u4e0d\u5230\u7684\u8bdd\u5c31\u4e00\u5b9a\u65e0\u89e3\u3002\n\n\u4f46\u662f\u53ef\u80fd\u4f1a\u51fa\u73b0\u8fde\u6210\u73af\u7684\u60c5\u51b5\uff0c\u5982\u4e0b\u56fe\uff1a\n\n![\u73af](https://cdn.luogu.com.cn/upload/image_hosting/ft0ynmr0.png)\n\n\u5982\u4f55\u5904\u7406\u8fd9\u79cd\u60c5\u51b5\u5462\uff1f\n\n\u53d1\u73b0\u8fd9\u79cd\u56fe\u5176\u5b9e\u53ef\u4ee5\u4ece\u4e2d\u95f4\u62c6\u5f00\uff0c\u5de6\u53f3\u6362\u4e2a\u4f4d\u7f6e\u62fc\u4e00\u5757\uff0c\u62fc\u5b8c\u4e4b\u540e\u8fd8\u662f\u7c7b\u4f3c\u8fd9\u79cd\u60c5\u51b5\u3002\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u4e00\u79cd\u62c6\u6cd5\uff0c\u91cd\u65b0\u62fc\u5b8c\u540e\u5c06\u4e00\u4e2a\u5176\u5b83\u7684\u5757\u62c6\u5f00\uff0c\u5c06\u8fd9\u4e2a\u5757\u63d2\u8fdb\u53bb\uff0c\u5177\u4f53\u89c1\u4e0b\u56fe\uff1a\n\n![solution](https://cdn.luogu.com.cn/upload/image_hosting/c5zllt7z.png)\n\n\u6bcf\u6b21\u6210\u73af\u66b4\u529b\u8bd5\u770b\u8d77\u6765\u590d\u6742\u5ea6\u5f88\u9ad8\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u53ea\u5269\u4e0b\u81ea\u5df1\u5757\u5bf9\u9762\u7684\u90a3\u4e2a\u80fd\u8ddf\u81ea\u5df1\u62fc\u7684\u65f6\u5019\u5728\u53bb\u8fd9\u4e48\u679a\u4e3e\uff0c\u8fd9\u6837\u6bcf\u79cd\u65b9\u5411\u6bcf\u79cd\u9ad8\u5ea6\u6700\u591a\u53ea\u4f1a\u53d1\u751f\u4e00\u6b21\u8fd9\u79cd\u60c5\u51b5\uff0c\u4e8e\u662f\u6700\u591a\u53ea\u4f1a\u53d1\u751f $2H$ \u6b21\u3002\u5e76\u4e14\u8fd9\u4e48\u505a\u7684\u8bdd\u5982\u679c\u62c6\u73af\u5931\u8d25\u5c31\u53ef\u4ee5\u76f4\u63a5\u8f93\u51fa `NO` \u4e86\u3002\n\n\u5b9e\u73b0\u7684\u8bdd\u6bd4\u8f83\u9ebb\u70e6\uff0c\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u6bcf\u4e2a\u5757\uff1b\u7531\u4e8e\u6211\u4eec\u9700\u8981\u5feb\u901f\u77e5\u9053\u67d0\u4e2a\u5757\u5916\u662f\u5426\u5b58\u5728\u5185\u90e8\u7684\u67d0\u79cd\u7279\u5b9a\u7684\u62fc\u6cd5\uff0c\u4ee5\u5224\u65ad\u662f\u5426\u80fd\u5c06\u90a3\u4e2a\u5757\u62c6\u5f00\u628a\u73b0\u5728\u8fd9\u4e2a\u5757\u585e\u8fdb\u53bb\uff0c\u53ef\u80fd\u9700\u8981\u5bf9\u6bcf\u79cd\u62fc\u6cd5\u5f00\u4e2a `set`\uff0c\u5e76\u67e5\u96c6\u5408\u5e76\u7684\u65f6\u5019\u5bf9 `set` \u4e5f\u8fdb\u884c\u542f\u53d1\u5f0f\u5408\u5e76\u3002\u4e8e\u662f\u603b\u590d\u6742\u5ea6\u4e3a $O(nH + n \\log^2 n)$\u3002\n\n\u5177\u4f53\u7ec6\u8282\u770b\u4ee3\u7801\u5427\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <cctype>\n#include <vector>\n#include <set>\n#include <cstdlib>\n#define N 101000\n#define MP make_pair\n#define PII pair<int, int>\ntemplate<typename T> inline void read(T &x) {\n\tx = 0; char c = getchar(); bool flag = false;\n\twhile (!isdigit(c)) { if (c == '-') flag = true; c = getchar(); }\n\twhile (isdigit(c)) x = x * 10 + (c ^ 48), c = getchar();\n\tif (flag)\tx = -x;\n}\nusing namespace std;\nint n, H;\nvector<int> vec[2][233];//vec[t][h] : \u5b58\u50a8\u5728\u5916\u90e8\u7684\u4e0d\u60ac\u7a7a\u7684\u9ad8\u5ea6\u4e3a h \u7684\u5411\u53f3/\u5de6\u7684\u90e8\u5206\u7684\u4f4d\u7f6e\u7f16\u53f7\nint A[N], B[N], C[N], D[N];\n\nmultiset<int> st[2][233];//st[t][h] : \u5b58\u50a8\u5728\u5185\u90e8\u7684\u4e0d\u60ac\u7a7a\u7684\u9ad8\u5ea6\u4e3a h \u7684\u5411\u53f3/\u5de6\u7684\u90e8\u5206\u6240\u5728\u5757\nint fath[N], siz[N];\nint find(int cur) {\n\treturn fath[cur] == cur ? cur : fath[cur] = find(fath[cur]);\n}\n\ninline void Failed() {\n\tputs(\"NO\");\n\texit(0);\n}\n\nvector<PII> ve[N];//\u5b58\u6bcf\u4e2a\u5757\u5185\u90e8\u7684\u6240\u6709\u62fc\u6cd5\ninline void merge(int x, int y, int tp, int h) {//\u5c06 x \u6240\u5728\u5757\u548c y \u6240\u5728\u5757\u5408\u5e76\uff0c\u5e76\u5728\u5185\u90e8\u591a\u4e00\u4e2a tp, h \u7684\u62fc\u6cd5\n\tx =find(x), y = find(y);\n\tif (siz[x] < siz[y])\tswap(x, y);\n\tfath[y] = x; siz[x] += siz[y];\n\tfor (unsigned int i = 0; i < ve[y].size(); ++i) {//\u542f\u53d1\u5f0f\u5408\u5e76\n\t\tint t = ve[y][i].first, tmph = ve[y][i].second;\n\t\tst[t][tmph].erase(st[t][tmph].find(y));\n\t\tst[t][tmph].insert(x);\n\t\tve[x].push_back(MP(t, tmph));\n\t}\n\tve[x].push_back(MP(tp, h));\n\tst[tp][h].insert(x);\n}\n\ninline void Try(int notanc, int h, int t) {//\u5c1d\u8bd5\u5c06\u73af\u62c6\u5f00\u585e\u5230\u5176\u4ed6\u5757\u5185\u90e8\n\tif (st[t][h].size() && *st[t][h].begin() != notanc) {//\u5c1d\u8bd5\u76f4\u63a5\u585e\n\t\tint p = *st[t][h].begin();\n\t\tmerge(notanc, p, t, h);\n\t} else if (st[t][h].size() && *st[t][h].rbegin() != notanc) {\n\t\tint p = *st[t][h].rbegin();\n\t\tmerge(notanc, p, t, h);\n\t} else {\n\t\tfor (unsigned int i = 0; i < ve[notanc].size(); ++i) {//\u679a\u4e3e\u6240\u6709\u62c6\u6cd5\uff0c\u518d\u5c1d\u8bd5\u585e\n\t\t\tint tmpt = ve[notanc][i].first, tmph = ve[notanc][i].second;\n\t\t\tif (tmpt == t && tmph == h)\tcontinue;\n\t\t\tif (vec[tmpt][tmph].size()) {\n\t\t\t\tint p = vec[tmpt][tmph].back(); vec[tmpt][tmph].pop_back();\n\t\t\t\tmerge(notanc, p, t, h);\n\t\t\t\treturn ;\n\t\t\t} else {\n\t\t\t\tif (st[tmpt][tmph].size() && *st[tmpt][tmph].begin() != notanc) {\n\t\t\t\t\tint p = *st[tmpt][tmph].begin();\n\t\t\t\t\tmerge(notanc, p, t, h);\n\t\t\t\t\treturn ;\n\t\t\t\t} else if (st[tmpt][tmph].size() && *st[tmpt][tmph].rbegin() != notanc) {\n\t\t\t\t\tint p = *st[tmpt][tmph].rbegin();\n\t\t\t\t\tmerge(notanc, p, t, h);\n\t\t\t\t\treturn ;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tFailed();\n\t}\n}\n\nint main() {\n\tread(n), read(H);\n\tfor (int i = 1; i <= n; ++i) {\n\t\tread(A[i]), read(B[i]), read(C[i]), read(D[i]),\n\t\t\tA[i] += C[i], B[i] += D[i];\n\t\tif (!C[i])\tvec[1][A[i]].push_back(i);\n\t\tif (!D[i])\tvec[0][B[i]].push_back(i);\n\t}\n\tfor (int i = 1; i <= n; ++i)\tfath[i] = i, siz[i] = 1;\n\tfor (int i = 1; i <= n; ++i) {\n\t\tif (C[i]) {\n\t\t\tif (!vec[0][C[i]].size()) Failed();\n\t\t\tint p = vec[0][C[i]].back(); vec[0][C[i]].pop_back();\n\t\t\tif (find(p) == find(i)) {//\u80fd\u4e0d\u62fc\u6210\u73af\uff0c\u5c31\u5c3d\u91cf\u4e0d\u62fc\u6210\u73af\n\t\t\t\tif (!vec[0][C[i]].size())\tTry(find(i), C[i], 0);\n\t\t\t\telse {\n\t\t\t\t\tint q = vec[0][C[i]].back(); vec[0][C[i]].pop_back();\n\t\t\t\t\tmerge(i, q, 0, C[i]);\n\t\t\t\t\tvec[0][C[i]].push_back(p);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmerge(i, p, 0, C[i]);\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 1; i <= n; ++i) {\n\t\tif (D[i]) {\n\t\t\tif (!vec[1][D[i]].size()) Failed();\n\t\t\tint p = vec[1][D[i]].back(); vec[1][D[i]].pop_back();\n\t\t\tif (find(p) == find(i)) {\n\t\t\t\tif (!vec[1][D[i]].size())\tTry(find(i), D[i], 1);\n\t\t\t\telse {\n\t\t\t\t\tint q = vec[1][D[i]].back(); vec[1][D[i]].pop_back();\n\t\t\t\t\tmerge(i, q, 1, D[i]);\n\t\t\t\t\tvec[1][D[i]].push_back(p);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmerge(i, p, 1, D[i]);\n\t\t\t}\t\n\t\t}\n\t}\n\tputs(\"YES\");\n\treturn 0;\n}\n```\n\n",
        "postTime": 1614516933,
        "uid": 221897,
        "name": "jiazhaopeng",
        "ccfLevel": 0,
        "title": "Jigsaw"
    }
]