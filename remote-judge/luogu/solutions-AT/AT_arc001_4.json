[
    {
        "content": "\u611f\u89c9\u53e6\u4e00\u7bc7\u9898\u89e3\u5565\u90fd\u6ca1\u8bb2\uff0c\uff0c\uff0c\u6837\u4f8b\u7684\u8def\u5f84\u8fd8\u753b\u9519\u4e86\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\n\n\u5927\u81f4\u601d\u8def\u662f\u7528\u4e24\u6761\u76f4\u7ebf\u7ef4\u62a4\u5f53\u524d\u70b9\u80fd\u4e0d\u62d0\u5f2f\u76f4\u63a5\u5230\u8fbe\u7684\u6700\u5de6\u548c\u6700\u53f3\u8fb9\u754c\uff08\u5de6\u8fb9\u754c\u7684\u76f4\u7ebf\u53ea\u5f80\u53f3\u8f6c\uff0c\u53f3\u8fb9\u754c\u7684\u76f4\u7ebf\u53ea\u5f80\u5de6\u8f6c\uff09\u3002\n\n\u5c06\u7eb5\u5750\u6807\u76f8\u540c\u79f0\u4e3a\"\u5728\u540c\u4e00\u5c42\"\uff0c\u679a\u4e3e\u6240\u6709\u53ef\u80fd\u62d0\u5f2f\u7684\u697c\u5c42\u3002\u4ece\u5f53\u524d\u5c42\u5f00\u59cb\u5411\u4e0a\u8d70\uff0c\u5982\u679c\u67d0\u4e00\u5c42\u66f4\u65b0\u4e24\u6761\u76f4\u7ebf\u540e \u201c\u5de6\u8fb9\u754c\u7684\u76f4\u7ebf\u201d \u5728 \u201c\u53f3\u8fb9\u754c\u7684\u76f4\u7ebf\u201d \u5de6\u4fa7\uff08\u53ea\u6709\u5728\u5f53\u524d\u5c42\u7684\u533a\u95f4\u5b8c\u5168\u5728\u80fd\u76f4\u63a5\u5230\u8fbe\u7684\u533a\u95f4\u5de6/\u53f3\u4fa7\u624d\u4f1a\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\uff09\uff0c\u5982\u679c\u5f53\u524d\u5c42\u533a\u95f4\u5b8c\u5168\u5728\u5de6\u8fb9\uff0c\u5c31\u628a\u201c\u5f53\u524d\u70b9\u201d\u79fb\u5230\u5f53\u524d\u5c42\u7684\u5de6\u7aef\u70b9\uff0c\u5426\u5219\u79fb\u5230\u53f3\u7aef\u70b9\u3002\n\n\u53ef\u4ee5\u8bc1\u660e\u8fd9\u6837\u662f\u6700\u4f18\u7684\u3002\n\n\u62ff\u6837\u4f8b\u6765\u8bf4\uff0c $O$ \u662f \u201c\u5f53\u524d\u70b9\u201d\uff08 $O$ \u5728\u7b2c $0$ \u5c42\uff09\uff0c $OA,OB$ \u662f\u7ef4\u62a4\u53ef\u8fbe\u533a\u95f4\u7684\u4e24\u6761\u76f4\u7ebf\u3002\u5728\u904d\u5386\u5230\u7b2c\u4e8c\u5c42\u65f6\uff0c\u53d1\u73b0 \u7b2c\u4e8c\u5c42\u7684\u5408\u6cd5\u533a\u95f4 \u5b8c\u5168\u5728 $OA, OB$ \u4e0e\u7b2c\u4e8c\u5c42\u4ea4\u70b9\u7684\u533a\u95f4 \u5de6\u4fa7\uff0c\u53ef\u4ee5\u53d1\u73b0\u5bf9\u4e8e\u7b2c\u4e8c\u5c42\u7684\u4efb\u610f\u5408\u6cd5\u70b9 $C$ \u548c\u4efb\u610f\u70b9 $D\\in AB$ \uff0c$OD+DC \\leq OA + AC$ , \u5373\u4e0d\u7ba1\u60f3\u8981\u5230\u8fbe\u7b2c\u4e8c\u5c42\u7684\u54ea\u4e00\u4e2a\u70b9\uff0c\u7b2c\u4e00\u5c42\u7684\u62d0\u70b9\u9009 $A$ \u90fd\u662f\u6700\u4f18\u7684\u3002\n\n\u57fa\u4e8e\u8fd9\u4e2a\u8d2a\u5fc3\u7b56\u7565\u5c31\u53ef\u4ee5 $O(n)$ \u901a\u8fc7\u6b64\u9898\u4e86\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/prvjg461.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n**\u770b\u4ee3\u7801\u524d\u8bf7\u719f\u6089\u6700\u57fa\u672c\u7684\u5411\u91cf\u8fd0\u7b97\u3002**\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2e5 + 7;\ndouble ans;\nint s, t, n;\nstruct Vec {\n  int x, y;\n  Vec(int xx, int yy) : x(xx), y(yy) {}\n  Vec() {}\n  Vec operator - (Vec rhs) const {\n    return Vec(x - rhs.x, y - rhs.y);\n  }\n  void operator += (Vec rhs) {x += rhs.x, y += rhs.y;}\n  long long operator * (Vec rhs) const {\n    return x * 1ll * rhs.y - y * 1ll * rhs.x;\n  }\n  double d() {\n    return sqrt(x * 1ll * x + y * 1ll * y);\n  }\n} l[N], r[N];\n\nint main() {\n  scanf(\"%d%d%d\", &n, &s, &t);\n  for (int i = 0; i <= n; ++i) {\n    scanf(\"%d%d\", &l[i].x, &r[i].x);\n    l[i].y = r[i].y = i;\n  }\n  l[0].x = r[0].x = s, l[n].x = r[n].x = t;\n  Vec cur(s, 0), le, ri;\n  int i, j = 0;\n  while (j <= n) {\n    i = cur.y + 1, j = i + 1;\n    le = l[i] - cur, ri = r[i] - cur;\n    while (j <= n) {\n      bool f = 0, f1 = 0;\n      if (ri * (r[j] - cur) > 0) ri = r[j] - cur, f = 1;\n      if (le * (l[j] - cur) < 0) le = l[j] - cur, f1 = 1;\n      if (le * ri > 0) {\n        if (f) ans += le.d(), cur += le;\n        else ans += ri.d(), cur += ri;\n        break;\n      }\n      ++j;\n    }\n  }\n  ans += (r[n] - cur).d();\n  printf(\"%.15f\", ans);\n  return 0;\n}\n```",
        "postTime": 1570788386,
        "uid": 29089,
        "name": "qqvq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT48 \u3010\u30ec\u30fc\u30b9\u30b2\u30fc\u30e0\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898 \u4e00\u9053\u5927\u6982\u66b4\u529b\u80fd\u8fc7\u7684\u6837\u5b50  \n\u5177\u4f53\u601d\u8def\u5c31\u662f\u5411\u4e0a\u8d70\uff0c\u7136\u540e\u5728\u6bcf\u4e2a\u70b9\u627e\u5230\u80fd\u5230\u8fbe\u7684\u503e\u659c\u89d2 \u6700\u5c0f \u548c \u6700\u5927 \u7684\u70b9  \n\u7136\u540e\u5224\u65ad\u54ea\u4e00\u4e2a\u70b9\u66f4\u4f18  \n\u7136\u540e\u8bb0\u5f55\u7b54\u6848  \n\u7136\u540e\u8fd9\u6837\u4e00\u76f4\u5230\u7ec8\u70b9  \n\u6700\u540e\u7684\u8def\u5f84\u5927\u6982\u5c31\u50cf\u8fd9\u6837\uff08\u56fe\u4e2d\u7ea2\u7ebf\uff09  \n![AT48\u9898\u89e3\u56fe](https://cdn.luogu.com.cn/upload/pic/61694.png)   \n\u7136\u540e\u518d\u4ecb\u7ecd\u4e00\u4e0bhypot()\u51fd\u6570  \n\u8fd9\u4e2a\u51fd\u6570\u662f\u7b97\u4e24\u70b9\u6b27\u5f0f\u51e0\u4f55\u8ddd\u79bb\u54d2  \n\u5927\u6982\u5c31\u548c\u4ee3\u7801\u4e2d\u7684getdis()\u6548\u679c\u76f8\u540c  \n\u4e0d\u591a\u8bf4\u4e0b\u9762\u8d34\u4ee3\u7801\u2193  \n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst double dis_max = 1e17;\nconst int maxn = 2e5 + 5;\nint n, s, e;\nint l[maxn], r[maxn];\ndouble ans = 0;\ndouble getdis(double a, double b)\n{\n    return sqrt(a * a + b * b);\n}\nvoid solve()\n{\n    l[n] = r[n] = e;\n    int nowy = 0;\n    double nowx = s;\n    while (nowy < n)\n    {\n        double zuoarc = -dis_max, youarc = dis_max;\n        int ly = nowy, ry = nowy;\n        for (int y = nowy + 1; y <= n; y++)\n        {\n            double larc = (l[y] - nowx) / (y - nowy), rarc = (r[y] - nowx) / (y - nowy);\n            if (larc > zuoarc)\n            {\n                zuoarc = larc;\n                ly = y;\n            }\n            if (rarc < youarc)\n            {\n                youarc = rarc;\n                ry = y;\n            }\n            if (zuoarc >= youarc)\n            {\n                if (ly < ry)\n                {\n                    ans += hypot/*getdis*/(l[ly] - nowx, ly - nowy);\n                    nowy = ly;\n                    nowx = l[ly];\n                }\n                else\n                {\n                    ans += hypot/*getdis*/(r[ry] - nowx, ry - nowy);\n                    nowy = ry;\n                    nowx = r[ry];\n                }\n                break;\n            }\n        }\n    }\n    return;\n}\n\nsigned main()\n{\n    scanf(\"%d%d%d\", &n, &s, &e);\n    for (int i = 0; i <= n; i++)\n        scanf(\"%d%d\", &l[i], &r[i]);\n    solve();\n    printf(\"%0.14lf\", ans);\n    return 0;\n}\n\n```\n\n",
        "postTime": 1561853597,
        "uid": 127191,
        "name": "Doveqise",
        "ccfLevel": 6,
        "title": "AT48 \u30ec\u30fc\u30b9\u30b2\u30fc\u30e0 \u9898\u89e3"
    }
]