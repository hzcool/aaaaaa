[
    {
        "content": "\u672c\u9898\u6709\u4e24\u79cd\u505a\u6cd5\uff0c\u6b63\u89e3\u663e\u7136\u662f\u641c\u7d22\uff0c\u4e0d\u8fc7\u8d2a\u5fc3\u4e5f\u53ef\u4ee5\u505a\uff0c\u800c\u4e14\u66f4\u7b80\u5355\uff0c\u6240\u4ee5\u6211\u4e24\u79cd\u65b9\u6cd5\u90fd\u8bb2\u4e00\u4e0b\u3002\n\n\u9996\u5148\u662f\u641c\u7d22\uff0c\u7531\u4e8e\u6570\u636e\u8303\u56f4\u8f83\u5c0f\uff08\u5c0f\u5f97\u4e0d\u80fd\u518d\u5c0f\u4e86\uff09\uff0c\u901a\u8fc7\u526a\u679d\u540e\u662f\u53ef\u4ee5AC\u7684\uff0c\u7531\u4e8e\u6709\u516d\u79cd\u8c03\u6cd5\uff0c\u6240\u4ee5\u6211\u5148\u6bd4\u8f83\u5f53\u524d\u6e29\u5ea6\u4e0e\u76ee\u6807\u6e29\u5ea6\u7684\u5927\u5c0f\u518d\u8fdb\u884c\u641c\u7d22\uff0c\u82e5\u5927\u4e8e\u76ee\u6807\u6e29\u5ea6\u5c31\u5f80\u4e0b\u641c\uff0c\u5426\u5219\u5c31\u5f80\u4e0a\u641c\u3002\n\n _\u4ee5\u4e0b\u662f\u4ee3\u7801\uff1a_ \n\n------------\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,k,t=123456;//t\u8bb0\u5f55\u6700\u5c0f\u6b21\u6570\nvoid dd(int x,int s)//x\u8868\u793a\u5f53\u524d\u6e29\u5ea6\uff0cs\u8868\u793a\u8c03\u8282\u6b21\u6570\n{if(s>=t) return;//\u526a\u679d\uff0c\u5927\u4e8e\u6700\u5c0f\u6b21\u6570\u5c31\u9000\u51fa\nif(x==n) {t=min(t,s);//\u9009\u62e9\u6700\u5c0f\u6b21\u6570\n          return;}//\u8c03\u6574\u5b8c\u6210\u5c31\u8fd4\u56de\nif(x>n) {dd(x-1,s+1);\n         dd(x-10,s+1);\n         dd(x-5,s+1);}//\u5927\u4e8e\u76ee\u6807\u6e29\u5ea6\u5c31\u5f80\u4e0b\u641c\nelse {dd(x+1,s+1);\n      dd(x+10,s+1);\n      dd(x+5,s+1);}//\u53cd\u4e4b\u5c31\u5f80\u4e0a\u641c\n}\nint main()\n{cin>>k>>n;//\u8bfb\u5165\u5f53\u524d\u6e29\u5ea6k\u4e0e\u76ee\u6807\u6e29\u5ea6n\n dd(k,0);//\u5f00\u59cb\u641c\u7d22\n cout<<t<<endl;//\u8f93\u51fa\u6700\u5c0f\u6b21\u6570\uff0c\u522b\u5fd8\u4e86\u6362\u884c\uff01\uff01\uff01\n return 0;\n}\n```\n\n------------\n\n\n\u5f53\u7136\u8fd9\u9898\u5982\u679c\u7528\u8d2a\u5fc3\u4f1a\u66f4\u7b80\u5355\uff0c\u4e3a\u4e86\u4f7f\u8c03\u8282\u6b21\u6570\u5c3d\u53ef\u80fd\u5c0f\uff0c\u5c31\u5e94\u8be5\u5728\u5f53\u524d\u6e29\u5ea6\u4e0e\u76ee\u6807\u6e29\u5ea6\u5dee\u8ddd\u8f83\u5927\u65f6\u4e00\u6b21\u8c03\u5341\u5ea6\u5feb\u901f\u7f29\u5c0f\u5dee\u8ddd\uff0c\u5f53\u5dee\u8ddd\u8db3\u591f\u5c0f\u65f6\u518d\u8c03\u4e00\u5ea6\u6216\u4e94\u5ea6\u3002\u63a5\u4e0b\u6765\u5f00\u59cb\u627e\u89c4\u5f8b\uff1a\n\n    \u6e29\u5deek\uff1a  1   2   3    4    5    6    7    8    9    10\n\n    \u6700\u4f4e\u6b21\u6570\uff1a1   2   3    2    1    2    3    3    2    1\n    \n\u53ef\u4ee5\u53d1\u73b0\u6240\u9700\u6b65\u6570\u4e0e\u6e29\u5dee\u4e0e0\u30015\u300110\u95f4\u7684\u5dee\u8ddd\u6709\u5173\uff0c\u4e14\u6e29\u5dee\u5927\u4e8e\u7b49\u4e8e8\u65f6\u8c03\u5341\u5ea6\u4f1a\u66f4\u5feb\uff1b\u53cd\u4e4b\uff0c\u5982\u679c\u4e00\u5ea6\u4e00\u5ea6\u8c03\uff0c\u6240\u9700\u6b21\u6570\u7b49\u4e8ek\uff0c\u5982\u679c\u8c03\u4e94\u5ea6\uff0c\u518d\u4e00\u5ea6\u4e00\u5ea6\u8c03\uff0c\u6240\u9700\u6b21\u6570\u4e3aabs(5-k)+1\u3002\uff08\u8c03\u4e94\u5ea6\u4e5f\u7b97\u4e00\u6b21\u6240\u4ee5\u8981\u52a0\u4e00\uff09\u6700\u540e\uff0c\u53d6\u4e24\u8005\u4e2d\u7684\u8f83\u5c0f\u503c\u52a0\u4e0a\u8c03\u5341\u5ea6\u7684\u6b21\u6570\u5373\u4e3a\u6240\u6c42\u3002\n\n _\u4ee5\u4e0b\u662f\u4ee3\u7801\uff1a_ \n\n------------\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,k,t=0;//t\u8bb0\u5f55\u6b21\u6570\nint main()\n{cin>>k>>n;//\u8bfb\u5165\n k=abs(n-k);//\u7b97\u6e29\u5dee\n while(k>=8)//\u6e29\u5dee\u5927\u4e8e\u7b49\u4e8e8\u65f6\n   {k=abs(k-10);//\u8ba1\u7b97\u5f53\u524d\u6e29\u5dee\n    t++;//\u7d2f\u52a0\u6b21\u6570\n   }\n cout<<t+min(k,abs(5-k)+1)<<endl;//\u52a0\u4e0a\u4e24\u8005\u4e2d\u7684\u8f83\u5c0f\u503c\u5373\u4e3a\u603b\u6b21\u6570\n return 0;\n}\n```",
        "postTime": 1547793391,
        "uid": 171250,
        "name": "sxtm12138",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT46 \u3010\u30ea\u30e2\u30b3\u30f3\u3011"
    },
    {
        "content": "\u5f00\u59cb\u60f3\u7528\u679a\u4e3e\u53d6\u6700\u5c0f\u503c\uff0c\u534a\u5929\u6ca1\u6709\u505a\u51fa\u6765\uff08\u9119\u4eba\u849f\u84bb\u4e00\u679a\uff09\n\n\u5f53\u7136\u5c31\u60f3\u5230if\u5566\n\n\u7ecf\u6211\u8ba4\u771f\u7684\u4e00\u756a\u63a8\u7b97~~\uff08\u5176\u5b9e\u662f\u624b\u52a8\u679a\u4e3e\uff08huaji\uff09\uff09~~\u540e\uff0c\n\u7ec8\u4e8e\u627e\u5230\u4e86\u89c4\u5f8b\n\n### :\u4ee5\u5341\u4e3a\u533a\u95f4\uff0c\u6bcf\u4e2a\u533a\u95f4\u7684\u503c\u7b49\u4e8e\u4e0a\u4e00\u4e2a\u533a\u95f4\u7684\u503c+1\n\n\u5176\u5b9e\u975e\u5e38\u597d\u7406\u89e3\uff0c\u5c31\u662f\u521d\u503c\u52a0\u4e0a\u8fd9\u4e2a\u6570%10\n\n\u521d\u503c\u624b\u7b97\u4e00\u4e0b\uff0c\u4e5f\u4e0d\u9ebb\u70e6\n```cpp\n#include<iostream>\nusing namespace std;\nint main()\n{\n\tint a,b;\n\tcin>>a>>b;//\u8f93\u5165\n\tb-=a;\n\tif(b<0) b=-b;//\u5904\u7406\u4e00\u4e0bb<a\u7684\u60c5\u51b5\n\tif(b%10==1) cout<<b/10+1<<endl;\n\tif(b%10==6) cout<<b/10+1+1<<endl;\n    if(b%10==2) cout<<b/10+2<<endl;\n    if(b%10==7) cout<<b/10+2+1<<endl;\n\tif(b%10==3 || b%10==8) cout<<b/10+3<<endl;//3\u30018\u76f8\u540c\uff0c\u61d2\u5f97\u518d\u5199\u4e00\u4e2aif\uff0c\u4e0b\u540c\n\tif(b%10==4 || b%10==9) cout<<b/10+2<<endl;\n\tif(b%10==5) cout<<b/10+b%10/5<<endl;\n    if(b%10==0) cout<<b/10<<endl;\n    //\u8bb0\u4f4f\u6240\u6709\u7684\u8f93\u51fa\u4e00\u5b9a\u8981\u6362\u884c\uff01\u6362\u884c\uff01\u6362\u884c\uff01~~\u6211\u4e0d\u4f1a\u544a\u8bc9\u4f60ATCoder\u5c31\u8fd9\u6837\u5751\u4e86\u6211\u4e0d\u4e0b\u5341\u6b21~~\n\treturn 0;//\u597d\u4e60\u60ef\n}\n```",
        "postTime": 1523866120,
        "uid": 56653,
        "name": "\u73c5\u8090",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 AT46 \u3010\u30ea\u30e2\u30b3\u30f3\u3011"
    },
    {
        "content": "## \u4e00\u9053\u6bd4\u8f83\u6c34\u7684\u6df1\u641c\n#### \u770b\u5230\u522b\u7684\u5927\u4f6c\u90fd\u5728\u7528\u5e7f\u641c\uff0c\u6253\u8868\uff0c\u6211\u7a81\u53d1\u5947\u60f3\uff0c\u8fd9\u9898\u53ef\u4ee5\u7528\u6df1\u641c\u554a\uff01\n\u4e0b\u9762\u662f\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>//\u4e07\u80fd\u5934\nusing namespace std;\nint a,b,tot=100,v[100];//v\u6570\u7ec4\u7528\u6765\u5224\u91cd\uff0ctot\u8bb0\u5f55\u6700\u7ec8\u7b54\u6848\uff0ctot\u5fc5\u987b\u8d4b\u5927\u503c\uff0c\u5426\u5219\u6c38\u8fdc\u4e3a0\ninline void dfs(int n,int t){\n\tif(n>40||n<0||v[n]==1)return ;//\u5224\u65ad\u8fb9\u754c\uff0c\u5e76\u53bb\u91cd\n\tif(t>tot)return ;//\u82e5\u5f53\u524d\u6b21\u6570\u5df2\u7ecf\u5927\u4e8etot\u4e86\uff0c\u5219\u53bb\u6389\n\tif(n==b){tot=min(tot,t);return ;}//\u5982\u679c\u8c03\u5230b\u4e86\uff0c\u5219\u53d6tot\u4e0e\u5f53\u524d\u6b21\u6570\u7684\u8f83\u5c0f\u503c\n\tv[n]=1;//\u628av\u6570\u7ec4\u8bbe\u4e3a\u5df2\u7ecf\u6709\u6570\u4e86\n\tdfs(n+1,t+1);\n\tdfs(n-1,t+1);\n\tdfs(n+5,t+1);\n\tdfs(n-5,t+1);\n\tdfs(n+10,t+1);\n\tdfs(n-10,t+1);//\u6709\u516b\u79cd\u65b9\u5f0f\n\tv[n]=0;//\u56de\u6eaf\n}\nint main(){\n\tscanf(\"%d%d\",&a,&b);//\u8f93\u5165\n\tdfs(a,0);//\u8c03\u7528\u51fd\u6570\n\tprintf(\"%d\",tot);//\u8f93\u51fa\n\treturn 0;\n}\n//wdcxz\n```",
        "postTime": 1533124544,
        "uid": 97643,
        "name": "wdcxz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT46 \u3010\u30ea\u30e2\u30b3\u30f3\u3011"
    },
    {
        "content": "## \u6838\u5fc3\u601d\u60f3\uff1a\u6700\u77ed\u8def\n\n### 1.\u5efa\u6a21\n\n\u628a\u6e29\u5ea6\u4f5c\u4e3a\u70b9\uff0c\u628a\u6309\u4e00\u6b21\u9065\u63a7\u5668\u80fd\u5207\u6362\u7684\u6e29\u5ea6\u4e2d\u95f4\u8fde\u8fb9\uff0c\u8fb9\u6743\u4e3a1\uff0c\u8868\u793a\u6309\u4e86\u4e00\u6b21\u3002\n\n\u4ee5\u6e29\u5ea6A\u4e3a\u8d77\u70b9\uff0c\u6e29\u5ea6B\u4e3a\u7ec8\u70b9\u8dd1\u6700\u77ed\u8def\u3002A\u5230B\u7684\u6700\u77ed\u8ddd\u79bb\u5373\u4e3a\u6700\u5c11\u6b21\u6570\u3002\n\n### 2.\u7b97\u6cd5\n\n\u672c\u9898\u6570\u636e\u91cf\u5c0f\uff0cA\u4e0eB\u7684\u8303\u56f4\u90fd\u662f40\uff0c\u53ef\u4ee5\u4f7f\u7528Floyd\u548cJohnson\uff0c\u4e5f\u53ef\u4ee5Dijkstra\u548cSPFA\u7b49\u7b49\u3002\n\n\u6211\u4e2a\u4eba\u79c9\u627f\u4e00\u8d2f\u7684\u7406\u5ff5\uff1a\u53ea\u8981\u662f\u5355\u6e90\u6700\u77ed\u8def\uff0c\u6ca1\u6709\u8d1f\u8fb9\u6743\uff0c\u90a3\u4e48\u5c31\u7528Dijkstra+\u5806\u4f18\u5316\u3002\n\n### 3.\u7ec6\u8282\n\n#### \u600e\u4e48\u5efa\u56fe\uff1f\n\n\u7531\u4e8e\u6570\u636e\u91cf\u5c0f\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u8f93\u5165\u524d\u628a\u56fe\u9884\u5904\u7406\u51fa\u6765\u3002\n\n\u679a\u4e3e40\u4e2a\u6e29\u5ea6\u70b9\uff0c\u628a\u4e0e\u5f53\u524d\u6e29\u5ea6\u76f8\u90bb\u76846\u4e2a\u6e29\u5ea6\u8fde\u8fb9\uff0c\u5373\n\n`x+1 , x-1 , x+5 , x-5 , x+10 , x-10`\n\n\u5728\u5efa\u8fb9\u7684\u65f6\u5019\u6ce8\u610f\u4e0d\u8981\u8d8a\u754c\u3002\n\n### 4.\u4ee3\u7801\n\n~~\u5176\u5b9e\u5c31\u662f\u6a21\u677f\uff0c\u611f\u89c9\u4e5f\u4e0d\u7528\u4e0a\u4ee3\u7801\u4e86~~\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<algorithm>\n#include<queue>\n#define INF 0x7fffffff\n#define pii pair<int,int>\nusing namespace std;\nstruct Node\n{\n    int head;\n    int dis;\n}node[100005];\nstruct Edge\n{\n    int next,to,len;\n}edge[1000005];\nint cnt;\nvoid addEdge(int u,int v,int w)\n{\n    edge[++cnt]={node[u].head,v,w};\n    node[u].head=cnt;\n}\n//\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\nint A,B;\nvoid Dijkstra()\n{\n    for(int i=0;i<=40;i++)\n    {\n        node[i].dis=INF;\n    }\n    //\u5207\u8bb0\u521d\u59cb\u5316\n    \n    priority_queue<pii,vector<pii>,greater<pii> >q;\n    //STL\u5c0f\u6839\u5806\n    q.push({0,A});\n    node[A].dis=0;\n    while(q.size())\n    {\n        pii tmp=q.top();\n        q.pop();\n        int d=tmp.first,u=tmp.second;\n        if(d!=node[u].dis)continue;\n        for(int e=node[u].head;e;e=edge[e].next)\n        {\n            int v=edge[e].to;\n            if(node[v].dis>d+edge[e].len)\n            {\n                node[v].dis=d+edge[e].len;\n                q.push({node[v].dis,v});\n            }\n        }\n    }\n}\n//\u4ee5\u4e0a\u4e3a\u6a21\u677f\uff0c\u4e0d\u8fc7\u591a\u4ecb\u7ecd\n\nint main()\n{\n    for(int i=0;i<=40;i++)\n    {\n        if(i+1<=40)   addEdge(i,i+1,1);\n        if(i-1>=0)    addEdge(i,i-1,1);\n        if(i+5<=40)   addEdge(i,i+5,1);\n        if(i-5>=0)    addEdge(i,i-5,1);\n        if(i+10<=40)  addEdge(i,i+10,1);\n        if(i-10>=0)   addEdge(i,i-10,1);\n        //\u6ce8\u610f\u5224\u65ad\u8d8a\u754c\n    }\n    //\u9884\u5904\u7406\u56fe\n    \n    scanf(\"%d%d\",&A,&B);\n    Dijkstra();\n    printf(\"%d\\n\",node[B].dis);\n    return 0;\n}\n```\n\nOK!\n\n### \u4e0d\u8fc7\u4f60\u4ee5\u4e3a\u5230\u8fd9\u5c31\u7ed3\u675f\u4e86\uff1f\n\n\u8003\u8651\u5230\u672c\u9898\u6570\u636e\u8303\u56f4\u9887\u5c0f\uff0c\u4e3a\u4e86\u6709\u66f4\u4f18\u7684\u89e3\uff0c\u6211\u4eec\u53ef\u4ee5\u6253\u8868\u3002\n\n\uff08\u5176\u5b9e\u4ee5\u4e0a\u4ee3\u7801\u5df2\u7ecf\u591f\u7528\u4e86\uff09\n\n\u679a\u4e3e\u6bcf\u4e2aA\u4e0eB\u7684\u60c5\u51b5\uff0c\u8f93\u51fa\u5230\u6570\u7ec4\u91cc\u3002\n\n\u6ce8\u610f\u7ec6\u8282\u7684\u5904\u7406\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<algorithm>\n#include<queue>\n#define INF 0x7fffffff\n#define pii pair<int,int>\nusing namespace std;\nstruct Node\n{\n    int head;\n    int dis;\n}node[100005];\nstruct Edge\n{\n    int next,to,len;\n}edge[1000005];\nint cnt;\nvoid addEdge(int u,int v,int w)\n{\n    edge[++cnt]={node[u].head,v,w};\n    node[u].head=cnt;\n}\nvoid Dijkstra(int A)\n{\n    for(int i=0;i<=40;i++)\n    {\n        node[i].dis=INF;\n    }\n    priority_queue<pii,vector<pii>,greater<pii> >q;\n    q.push({0,A});\n    node[A].dis=0;\n    while(q.size())\n    {\n        pii tmp=q.top();\n        q.pop();\n        int d=tmp.first,u=tmp.second;\n        if(d!=node[u].dis)continue;\n        for(int e=node[u].head;e;e=edge[e].next)\n        {\n            int v=edge[e].to;\n            if(node[v].dis>d+edge[e].len)\n            {\n                node[v].dis=d+edge[e].len;\n                q.push({node[v].dis,v});\n            }\n        }\n    }\n}\nint main()\n{\n\tfreopen(\"AT46\u6253\u8868.txt\",\"w\",stdout);\n\t//\u8f93\u51fa\u5230\u6587\u4ef6\u91cc\uff0c\u65b9\u4fbf\u590d\u5236 \n    for(int i=0;i<=40;i++)\n    {\n        if(i+1<=40)   addEdge(i,i+1,1);\n        if(i-1>=0)    addEdge(i,i-1,1);\n        if(i+5<=40)   addEdge(i,i+5,1);\n        if(i-5>=0)    addEdge(i,i-5,1);\n        if(i+10<=40)  addEdge(i,i+10,1);\n        if(i-10>=0)   addEdge(i,i-10,1);\n    }\n    puts(\"int ans[45][45]={\");\n    for(int A=0;A<=40;A++)\n    {\n    \tprintf(\"{\");\n\t\tDijkstra(A);\n    \tfor(int B=0;B<=39;B++)\n    \t{\n    \t\tprintf(\"%d,\",node[B].dis);\n\t\t}\n    \tprintf(\"%d\",node[40].dis);\n\t\tif(A!=40)puts(\"},\");\n\t\telse puts(\"}\");\n\t}\n\tputs(\"};\");\n    return 0;\n}\n```\n\u8fd9\u5c31\u662f\u751f\u6210\u7a0b\u5e8f\u3002\n\n\u7136\u540e\u628a\u6253\u51fa\u7684\u8868\u653e\u5230\u4ee3\u7801\u91cc\uff0c\u8f93\u5165A\u548cB\u540e\u76f4\u63a5\u8f93\u51fa\u5373\u53ef\u3002\n\n```cpp\n#include<cstdio>\nusing namespace std;\nint ans[45][45]={\n{0,1,2,3,2,1,2,3,3,2,1,2,3,4,3,2,3,4,4,3,2,3,4,5,4,3,4,5,5,4,3,4,5,6,5,4,5,6,6,5,4},\n{1,0,1,2,3,2,1,2,3,3,2,1,2,3,4,3,2,3,4,4,3,2,3,4,5,4,3,4,5,5,4,3,4,5,6,5,4,5,6,6,5},\n{2,1,0,1,2,3,2,1,2,3,3,2,1,2,3,4,3,2,3,4,4,3,2,3,4,5,4,3,4,5,5,4,3,4,5,6,5,4,5,6,6},\n{3,2,1,0,1,2,3,2,1,2,3,3,2,1,2,3,4,3,2,3,4,4,3,2,3,4,5,4,3,4,5,5,4,3,4,5,6,5,4,5,6},\n{2,3,2,1,0,1,2,3,2,1,2,3,3,2,1,2,3,4,3,2,3,4,4,3,2,3,4,5,4,3,4,5,5,4,3,4,5,6,5,4,5},\n{1,2,3,2,1,0,1,2,3,2,1,2,3,3,2,1,2,3,4,3,2,3,4,4,3,2,3,4,5,4,3,4,5,5,4,3,4,5,6,5,4},\n{2,1,2,3,2,1,0,1,2,3,2,1,2,3,3,2,1,2,3,4,3,2,3,4,4,3,2,3,4,5,4,3,4,5,5,4,3,4,5,6,5},\n{3,2,1,2,3,2,1,0,1,2,3,2,1,2,3,3,2,1,2,3,4,3,2,3,4,4,3,2,3,4,5,4,3,4,5,5,4,3,4,5,6},\n{3,3,2,1,2,3,2,1,0,1,2,3,2,1,2,3,3,2,1,2,3,4,3,2,3,4,4,3,2,3,4,5,4,3,4,5,5,4,3,4,5},\n{2,3,3,2,1,2,3,2,1,0,1,2,3,2,1,2,3,3,2,1,2,3,4,3,2,3,4,4,3,2,3,4,5,4,3,4,5,5,4,3,4},\n{1,2,3,3,2,1,2,3,2,1,0,1,2,3,2,1,2,3,3,2,1,2,3,4,3,2,3,4,4,3,2,3,4,5,4,3,4,5,5,4,3},\n{2,1,2,3,3,2,1,2,3,2,1,0,1,2,3,2,1,2,3,3,2,1,2,3,4,3,2,3,4,4,3,2,3,4,5,4,3,4,5,5,4},\n{3,2,1,2,3,3,2,1,2,3,2,1,0,1,2,3,2,1,2,3,3,2,1,2,3,4,3,2,3,4,4,3,2,3,4,5,4,3,4,5,5},\n{4,3,2,1,2,3,3,2,1,2,3,2,1,0,1,2,3,2,1,2,3,3,2,1,2,3,4,3,2,3,4,4,3,2,3,4,5,4,3,4,5},\n{3,4,3,2,1,2,3,3,2,1,2,3,2,1,0,1,2,3,2,1,2,3,3,2,1,2,3,4,3,2,3,4,4,3,2,3,4,5,4,3,4},\n{2,3,4,3,2,1,2,3,3,2,1,2,3,2,1,0,1,2,3,2,1,2,3,3,2,1,2,3,4,3,2,3,4,4,3,2,3,4,5,4,3},\n{3,2,3,4,3,2,1,2,3,3,2,1,2,3,2,1,0,1,2,3,2,1,2,3,3,2,1,2,3,4,3,2,3,4,4,3,2,3,4,5,4},\n{4,3,2,3,4,3,2,1,2,3,3,2,1,2,3,2,1,0,1,2,3,2,1,2,3,3,2,1,2,3,4,3,2,3,4,4,3,2,3,4,5},\n{4,4,3,2,3,4,3,2,1,2,3,3,2,1,2,3,2,1,0,1,2,3,2,1,2,3,3,2,1,2,3,4,3,2,3,4,4,3,2,3,4},\n{3,4,4,3,2,3,4,3,2,1,2,3,3,2,1,2,3,2,1,0,1,2,3,2,1,2,3,3,2,1,2,3,4,3,2,3,4,4,3,2,3},\n{2,3,4,4,3,2,3,4,3,2,1,2,3,3,2,1,2,3,2,1,0,1,2,3,2,1,2,3,3,2,1,2,3,4,3,2,3,4,4,3,2},\n{3,2,3,4,4,3,2,3,4,3,2,1,2,3,3,2,1,2,3,2,1,0,1,2,3,2,1,2,3,3,2,1,2,3,4,3,2,3,4,4,3},\n{4,3,2,3,4,4,3,2,3,4,3,2,1,2,3,3,2,1,2,3,2,1,0,1,2,3,2,1,2,3,3,2,1,2,3,4,3,2,3,4,4},\n{5,4,3,2,3,4,4,3,2,3,4,3,2,1,2,3,3,2,1,2,3,2,1,0,1,2,3,2,1,2,3,3,2,1,2,3,4,3,2,3,4},\n{4,5,4,3,2,3,4,4,3,2,3,4,3,2,1,2,3,3,2,1,2,3,2,1,0,1,2,3,2,1,2,3,3,2,1,2,3,4,3,2,3},\n{3,4,5,4,3,2,3,4,4,3,2,3,4,3,2,1,2,3,3,2,1,2,3,2,1,0,1,2,3,2,1,2,3,3,2,1,2,3,4,3,2},\n{4,3,4,5,4,3,2,3,4,4,3,2,3,4,3,2,1,2,3,3,2,1,2,3,2,1,0,1,2,3,2,1,2,3,3,2,1,2,3,4,3},\n{5,4,3,4,5,4,3,2,3,4,4,3,2,3,4,3,2,1,2,3,3,2,1,2,3,2,1,0,1,2,3,2,1,2,3,3,2,1,2,3,4},\n{5,5,4,3,4,5,4,3,2,3,4,4,3,2,3,4,3,2,1,2,3,3,2,1,2,3,2,1,0,1,2,3,2,1,2,3,3,2,1,2,3},\n{4,5,5,4,3,4,5,4,3,2,3,4,4,3,2,3,4,3,2,1,2,3,3,2,1,2,3,2,1,0,1,2,3,2,1,2,3,3,2,1,2},\n{3,4,5,5,4,3,4,5,4,3,2,3,4,4,3,2,3,4,3,2,1,2,3,3,2,1,2,3,2,1,0,1,2,3,2,1,2,3,3,2,1},\n{4,3,4,5,5,4,3,4,5,4,3,2,3,4,4,3,2,3,4,3,2,1,2,3,3,2,1,2,3,2,1,0,1,2,3,2,1,2,3,3,2},\n{5,4,3,4,5,5,4,3,4,5,4,3,2,3,4,4,3,2,3,4,3,2,1,2,3,3,2,1,2,3,2,1,0,1,2,3,2,1,2,3,3},\n{6,5,4,3,4,5,5,4,3,4,5,4,3,2,3,4,4,3,2,3,4,3,2,1,2,3,3,2,1,2,3,2,1,0,1,2,3,2,1,2,3},\n{5,6,5,4,3,4,5,5,4,3,4,5,4,3,2,3,4,4,3,2,3,4,3,2,1,2,3,3,2,1,2,3,2,1,0,1,2,3,2,1,2},\n{4,5,6,5,4,3,4,5,5,4,3,4,5,4,3,2,3,4,4,3,2,3,4,3,2,1,2,3,3,2,1,2,3,2,1,0,1,2,3,2,1},\n{5,4,5,6,5,4,3,4,5,5,4,3,4,5,4,3,2,3,4,4,3,2,3,4,3,2,1,2,3,3,2,1,2,3,2,1,0,1,2,3,2},\n{6,5,4,5,6,5,4,3,4,5,5,4,3,4,5,4,3,2,3,4,4,3,2,3,4,3,2,1,2,3,3,2,1,2,3,2,1,0,1,2,3},\n{6,6,5,4,5,6,5,4,3,4,5,5,4,3,4,5,4,3,2,3,4,4,3,2,3,4,3,2,1,2,3,3,2,1,2,3,2,1,0,1,2},\n{5,6,6,5,4,5,6,5,4,3,4,5,5,4,3,4,5,4,3,2,3,4,4,3,2,3,4,3,2,1,2,3,3,2,1,2,3,2,1,0,1},\n{4,5,6,6,5,4,5,6,5,4,3,4,5,5,4,3,4,5,4,3,2,3,4,4,3,2,3,4,3,2,1,2,3,3,2,1,2,3,2,1,0}\n};\nint A,B;\nint main()\n{\n    scanf(\"%d%d\",&A,&B);\n    printf(\"%d\\n\",ans[A][B]);\n    return 0;\n}\n```\n\u7ed3\u675f\uff01",
        "postTime": 1586255124,
        "uid": 203102,
        "name": "Diamiko",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 AT46 \u3010\u30ea\u30e2\u30b3\u30f3\u3011"
    },
    {
        "content": "\u4e00\u4e2a\u849f\u84bb\u7684\u6b6a\u95e8\u90aa\u9053\u7684BFS\n\n\u4ee3\u7801\u91ccu\u548cs\u7684\u7528\u6cd5\u5c31\u5199\u5728\u8fd9\u91cc\uff1a\u4ee5\u6837\u4f8b\u4e00\u4e3a\u4f8b\uff0c\u538b\u51657\u540e\u538b\u51656 8 2 12 -3 17\u518d\u5f39\u51fa7\uff0c\u6b64\u65f6\u961f\u5185\u67096\u4e2a\u5143\u7d20\uff0cs=6,\u4ee5\u8fd9\u516d\u4e2a\u5143\u7d20\u54116\u4e2a\u65b9\u5411\u641c\u7d22\u540eu=6\uff0c\u5219\u7b2c\u4e00\u6279\u641c\u7d22\u76846\u4e2a\u5143\u7d20\u90fd\u88ab\u4f7f\u7528\u4e86\uff0c\u5219\u5747\u5f39\u51fa\u540e\u961f\u5185\u5269\u4e0b\u7684\u662f\u7b2c\u4e8c\u6279\u641c\u7d22\u540e\u7684\u5143\u7d20\uff0cu\u6e05\u96f6\uff0cs=\u7b2c\u4e8c\u6279\u641c\u7d22\u540e\u5143\u7d20\u4e2a\u6570\uff0c\u4e00\u76f4\u64cd\u4f5c\u5230\u627e\u5230\u7b54\u6848\n\n\u6e29\u99a8\u63d0\u793a\uff1a\u8f93\u51fa\u7b54\u6848\u540e\u4e00\u5b9a\u8981\u6362\u884c\uff01\uff01\uff08\u5f53\u6211\u6ca1\u6362\u884c\u65f6\u542c\u5230WA\u58f0\u4e00\u7247\u662f\u9707\u60ca\u7684\uff09\n\n\n\n------------\n \n \nAC\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\u597d\uff01\uff08\u5176\u5b9e\u662f\u6211\u61d2\u5f97\u8bb0\u90a3\u4e48\u591a\u5934\u6587\u4ef6\uff09\nusing namespace std;\nint main()\n{\n  queue<int> q;     //\u4f7f\u7528\u961f\u5217\n  int a,b;     //a\u4e3a\u521d\u59cb\u6e29\u5ea6\uff0cb\u4e3a\u76ee\u6807\u6e29\u5ea6\n  int t[7]={0,-1,1,-5,5,10,-10};     //\u516d\u4e2a\u8c03\u6e29\u65b9\u5f0f\n  int u=0,s;     //u\u548cs\u642d\u914d\u4f7f\u7528\uff0c\u4e0a\u9762\u6709\u89e3\u91ca\n  int bj[100];     //bj\u5c31\u662f\u6807\u8bb0\uff08\u63a5\u5730\u6c14\uff09\n  int ans=1;     //\u6700\u77ed\u6b65\u6570\n  memset(bj,0,sizeof(bj));     //\u6570\u7ec4\u521d\u59cb\u5316\u4e3a0\uff0c\u4e2a\u4eba\u4e60\u60ef\n  cin>>a>>b;\n  if(a==b){     //\u7279\u5224\uff0c\u4e07\u4e00\u78b0\u5230a=b\uff08\u771f\u7684\u6709\u4e00\u4e2a\u6d4b\u8bd5\u70b9\uff09\n    cout<<\"0\"<<endl;\n    return 0;\n   } \n  bj[a+50]=1;    //a+50\u662f\u56e0\u4e3a\u6570\u7ec4\u4e0b\u6807\u4e0d\u80fd\u4e3a\u8d1f\uff0c\u90a3\u5c31\u4ee550\u4e3a0\u5ea6\n  q.push(a);    //\u538b\u5165a\n  for(int i=1;i<=6;i++){    //\u516d\u4e2a\u8c03\u6e29\u65b9\u5f0f\n    q.push(a+t[i]);    //\u538b\u5165\u65b0\u6e29\u5ea6\n    bj[a+t[i]+50]=1;    //\u505a\u6807\u8bb0\n   }\n  q.pop();    //\u5f39\u51faa\n  s=q.size();    //\u5f97\u5230\u961f\u5217\u5143\u7d20\u4e2a\u6570\n  while(q.front()!=b){\n    u++;\n    for(int i=1;i<=6;i++){   //\u4ee5\u961f\u5934\u5143\u7d20\u5411\u516d\u4e2a\u65b9\u5411\uff08\u5c31\u90a3\u610f\u601d\uff09\u641c\u7d22\n      if(bj[q.front()+t[i]+50]==0)    //\u5982\u679c\u6807\u8bb0\u4e3a1\u5219\u4e0d\u7528\u518d\u641c\u7d22\u4e86\n      q.push(q.front()+t[i]);\n    }\n    q.pop();     //\u5f39\u51fa\u961f\u5934\u5143\u7d20\n    if(u==s){\n      ans++;     //\u8fd8\u6ca1\u627e\u5230\u7b54\u6848\uff0c\u6b65\u6570\uff0b1\n      u=0;\n      s=q.size();\n     }\n   }\n  cout<<ans<<endl;     //\u8f93\u51fa\u7b54\u6848\u5e76\u6362\u884c\n  return 0;\n}\n```\n\n\n------------\n\n\u554a\u54c8\uff0c\u8fd9\u662f\u672c\u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\uff0c\u6709\u4e9b\u5c0f\u6fc0\u52a8\uff08\u6392\u7248\u5728\u4e0b\u5df2\u7ecf\u5c3d\u529b\u4e86...\uff09\n",
        "postTime": 1563243826,
        "uid": 189438,
        "name": "\u5149\u9634\u4e14\u542b\u7b11",
        "ccfLevel": 0,
        "title": "\u9898\u89e3AT46"
    },
    {
        "content": "\u9996\u5148\uff0c\u5f88\u663e\u7136\uff0c\u6211\u4eec\u5e94\u8be5\u5c06\u7a7a\u8c03\u7684\u6e29\u5ea6\u6bcf\u6b21\u8c03\u9ad8\\\u4f4e $10^{\\circ}\\text{C}$\uff0c\u76f4\u5230\u8fd8\u9700\u8981\u8c03\u7684\u6e29\u5ea6\u5c0f\u4e8e $10^{\\circ}\\text{C}$\u3002\n\n\u90a3\u4e48\uff0c\u5982\u4f55\u5904\u7406\u5269\u4e0b\u7684\u8fd9\u51e0\u6444\u6c0f\u5ea6\u5462\uff1f\n\n\u5b9e\u9645\u4e0a\uff0c\u56e0\u4e3a\u53ea\u6709 $\\{0,1,2,3,4,5,6,7,8,9,10\\}$ \u8fd9\u5341\u79cd\u53ef\u80fd......\n\n### \u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u66b4\u529b\u679a\u4e3e\u554a\uff01\n\n\u4e0b\u9762\u7684\u8868\u683c\u4e2d\uff0c\u7b26\u53f7 $+$ \u8868\u793a\u201c\u8c03\u9ad8\u201d\uff0c\u7b26\u53f7 $-$ \u8868\u793a\u201c\u8c03\u4f4e\u201d\n\n$\\begin{matrix}\\small\\text{\u8fd8\u9700\u8981\u8c03\u7684\u5ea6\u6570}&\\small\\text{\u8fd8\u9700\u8981\u8c03\u7684\u6b21\u6570}&\\small\\text{\u65b9\u6cd5}\\\\0&0&\\small\\textrm{\u4e0d\u7528\u52a8}\\\\1&1&+1\\\\2&2&+1+1\\\\3&3&+1+1+1\\\\4&2&+5-1\\\\5&1&+5\\\\6&2&+5+1\\\\7&3&+5+1+1\\\\8&3&+10-1-1\\\\9&2&+10-1\\\\10&1&+10\\end{matrix}$\n\n\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u6570\u7ec4\u6765\u5b58\u50a8\u8fd9$11$\u79cd\u60c5\u51b5\u5206\u522b\u9700\u8981\u7684\u6b65\u6570\n\n`int a[11]={0,1,2,3,2,1,2,3,3,2,1};`\n***\n\u4e00\u4e9b\u9700\u8981\u6ce8\u610f\u7684\u4e8b\u60c5\uff1a\n\n* At\u7684\u9898\u76ee\u6700\u540e\u5fc5\u987b\u6362\u884c\uff01\n* \u6709\u8d1f\u6570\uff01\uff08\u6211\u624d\u4e0d\u4f1a\u544a\u8bc9\u4f60\u6211\u56e0\u4e3a\u8fd9\u4e2a\u4e1c\u897fWA\u4e86\u4e00\u6b21\uff09\n\n***\n\u63a5\u4e0b\u6765\uff0c\u5f00\u5199\u4ee3\u7801\uff01\n\n**\u4ee3\u7801\u5df2\u7ecf\u8fc7\u9632\u4f2a\u5904\u7406\uff0c\u52ff\u6284**\n\n```cpp\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\u68d2\u68d2\u54d2\nusing namespace std;\nint main(){\n\tint a[11]={0,1,2,3,2,1,2,3,3,2,1},A,B,C,x,y;//\u6570\u7ec4a\u7684\u542b\u4e49\u4e0a\u9762\u89e3\u91ca\u8fc7\u4e86\uff0cA,B\u540c\u9898\u610f\uff0cC\u662fA\u4e0eB\u7684\u5dee\uff0cx,y\u540e\u9762\u4f1a\u89e3\u91ca\u3002\n\tcin>>A>>B;//\u8f93\u5165\u76ee\u524d\u7684\u6e29\u5ea6\u4e0e\u9700\u8981\u8c03\u7684\u6e29\u5ea6\u3002\n\tC=abs(B-A);//\u5c06\u9700\u8981\u8c03\u6574\u7684\u6e29\u5ea6\u8d4b\u503c\u7ed9C\uff0c\u8bb0\u5f97\u5f00\u7edd\u5bf9\u503c\uff01\n\ty=C/10;//y\u662f\u9700\u8981\u52a0\uff0f\u51cf\u5341\u7684\u6b21\u6570\u3002\n\tx=C%10;//x\u662f\u5728\u52a0\uff0f\u51cfy\u4e2a\u5341\u4e4b\u540e\u8fd8\u9700\u8981\u8c03\u7684\u6e29\u5ea6\u3002\n\tcout<<a[x]+y<<endl;//\u5c06\u8c03x\u5ea6\u6240\u9700\u7684\u6b65\u6570\u4e0ey\u76f8\u52a0\u5e76\u8f93\u51fa\uff0c\u8bb0\u5f97\u6362\u884c\u3002\n\treturn 0;//\u5b8c\u7ed3\u6492\u82b1\n}\n```\n~~\u8c8c\u4f3c\u662f\u6700\u77ed\u4ee3\u7801\u54e6~~",
        "postTime": 1585216814,
        "uid": 307453,
        "name": "\u4e91\u6d45\u77e5\u5904",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 AT46 \u3010\u30ea\u30e2\u30b3\u30f3\u3011"
    },
    {
        "content": "# BFS\u5927\u6cd5\u597d\u554a\n\u597d\u660e\u663e\u7684\u5e7f\u641c\u554a\u3002\u51e0\u4e4e\u6a21\u677f\u9898\uff0c\u503c\u5f97\u62ff\u6765\u7ec3\u7ec3\u624b\u3002\u8bf4\u8bdd\u5b9e\u8bdd\u5176\u5b9e **\u5c9b\u56fd** \u9898\u8fd8\u662f~~\u6bd4\u8f83\u6c34\u7684\u5427\uff1f~~\n\n------------\n\u521a\u770b\u5230\u5c31\u77e5\u9053\u662f\u5e7f\u641c\u4e86\uff0c\u6bd5\u7adf\u4eba\u5bb6\u8ba9\u4f60\u6c42\u6700\u5c11\u64cd\u4f5c\u6b21\u6570\uff0c\u5f88\u660e\u663e\u561b\uff0c\u4e00\u6ce2BFS\u76f4\u63a5\u5e26\u8d70\n\n------------\n\n\u4ee3\u7801  QAQ\uff1a\n\n------------\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint dir[8]={1,-1,5,-5,10,-10};//\u6a21\u62df6\u79cd\u8c03\u6e29\u5ea6\u7684\u53ef\u80fd;\nstruct ss{\n    int x,y;//\u7ed3\u6784\u4f53\u65b9\u4fbf\u5904\u7406\u5f53\u524d\u6e29\u5ea6\uff0c\u4ee5\u53ca\u5f53\u524d\u64cd\u4f5c\u6b21\u6570;\n};\nint n,m;\nqueue<ss> q;//\u961f\u5217\uff0c\u5b58\u50a8\u6269\u5c55\u72b6\u6001;\nint bfs(int x,int y)\n{\n    ss s;//\u521d\u59cb\u70b9;\n    s.x=x;\n    s.y=y;\n    q.push(s);//\u5b58\u5165\u961f\u5217;\n    while(!q.empty())//\u961f\u5217\u4e0d\u4e3a\u7a7a\uff08\u53cd\u6b63\u5c31\u662f\u6ca1\u6709\u53ef\u4ee5\u6269\u5c55\u7684\u72b6\u6001\u5c31\u4f1a\u505c\u4e0b\uff0c\u90a3\u4e48\u6b64\u65f6\u961f\u5217\u4e3a\u7a7a\uff09;\n    {\n        ss now=q.front();//\u53d6\u51fa\u5f53\u524d\u961f\u9996;\n        q.pop();//\u5f39\u51fa\u961f\u9996;\n        if(now.x==m)//\u6ee1\u8db3\u6e29\u5ea6\u6761\u4ef6;\n        {\n            return now.y;\n        }\n        for(int i=0;i<6;i++)//\u6269\u5c55\u6e29\u5ea6;\n        {\n            int tx=now.x+dir[i];//\u5b58\u50a8;\n            ss s;\n            s.x=tx;\n            s.y=now.y+1;\n            q.push(s);//\u653e\u5165\u961f\u5217;\n        }\n    }\n}\nint main()\n{\n    cin>>n>>m;\n    cout<<bfs(n,0)<<endl;\n    return 0;\n}\n```\n------------\n\u771f\u7684 ~~\u7b80\u5355~~ \n\n------------\n## \u503c\u5f97\u5b66\u4e60\u554a",
        "postTime": 1565178942,
        "uid": 179486,
        "name": "\u54c8\u54c8\u54c8\u54c8\u3002",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT46 \u3010\u30ea\u30e2\u30b3\u30f3\u3011"
    },
    {
        "content": "\u8fd9\u9898\u53ef\u4ee5\u7528\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\n\n\u5f53\u7136\u4e00\u4f4d\u6570\u7ec4\u7528\u8fd9\u4e2a\u53ef\u80fd\u6bd4\u8f83\u591a\u6b64\u4e00\u4e3e\u5427\uff0c\u8fd9\u4e2a\u4e3b\u8981\u4e8c\u7ef4\u4e09\u7ef4\u4e4b\u7c7b\u7684\n\n\u4e3b\u8981\u7684\u610f\u601d\u662f\u4ece\u7b2c\u4e00\u4e2a(\u4e5f\u5c31\u662f\u521d\u59cb\u6e29\u5ea6\u5f00\u59cb)\u7528\u4e00\u4e2a\u961f\u5217\u8bb0\u5f55\u4ed6\u80fd\u591f\u8d70\u5230\u7684\u6570\uff0c\u518d\u53bb\u770b\u4ed6\u80fd\u591f\u8bbf\u95ee\u7684\u90a3\u4e2a\u6570\u80fd\u591f\u8d70\u5230\u7684\u6570\uff0c\u56e0\u4e3a\u7b2c\u4e00\u6b21\u8bbf\u95ee\u5c31\u662f\u6700\u77ed\u8def\uff0c\u6240\u4ee5vis\u8bb0\u5f55\u4ed6\u524d\u9762\u8d70\u8fc7\u7684\u6570\u4e0d\u518d\u8bbf\u95ee\uff0c\n\u5f53\u7136\u770b\u4e0d\u5230\u53ef\u4ee5\u5148\u53bb\u5b66\u5b66\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff0c\u6216\u8005\u770b\u770b\u524d\u9762\u7684\u9898\u89e3\n\n\u6211\u6709\u4e00\u4e2a\u5730\u65b9\u5199\u9519\u4e86\uff0c\u5c31\u662ftail\u548chead\u5199\u53cd\u4e86\uff0c\u4e0d\u723d\u7684\u8bdd\u53ef\u4ee5\u81ea\u5df1\u6539\n\n\u867d\u7136\u957f\u8fd8\u662f\u5199\u4e00\u4e0b\u6ce8\u91ca\u5427\n\n```\n#include<iostream>\nusing namespace std;\n\nint a[100010],vis[100010],b[100010];//a\u8bb0\u5f55\u6700\u77ed\u8def\uff0cvis\u8bb0\u5f55\u662f\u5426\u8bbf\u95ee\u8fc7\uff0cb\u8bb0\u5f55\u4e0b\u4e00\u4e2a\u641c\u7d22\u7684\u70b9\nint n,k,d[10]={1,-1,5,-5,10,-10},tail,head;//d\u662f\u4ed6\u53ef\u4ee5\u524d\u540e\u5de6\u53f3\u8d70\u7684\u70b9\n\nint main(){\n\tcin>>n>>k;\n\ta[n]=0,vis[n]=1,b[0]=n;\n\ttail=head=0;\n\twhile(tail<=head){\n\t\tint no=b[tail];\n\t\tif(b[tail]==k) break;\n\t\ttail++;\n\t\tfor(int i=0;i<6;i++){\n\t\t\tint x=no+d[i];\n\t\t\tif(x<100010&&x>-1&&vis[x]!=1){\n\t\t\t\thead++;\n\t\t\t\tvis[x]=1;\n\t\t\t\tb[head]=x;\n\t\t\t\ta[x]=a[no]+1;\n\t\t\t}\n\t\t}\n\t}\n\tcout<<a[k]<<\"\u62d2\u7edd\u6284\u88ad\uff0c\u5171\u5efa\u548c\u8c10\u6d1b\u8c37\";\n\treturn 0;\n}\n```",
        "postTime": 1524923394,
        "uid": 39654,
        "name": "LW_h_FP",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT46 \u3010\u30ea\u30e2\u30b3\u30f3\u3011"
    },
    {
        "content": "\u770b\u5230\u9898\u9762\uff0c\u4e00\u4e0b\u5c31\u60f3\u5230\u7528\u8d2a\u5fc3\u3002\n\n\u521d\u8d2a\u5fc3\uff1a\n\t\u5c3d\u53ef\u80fd\u7528\u5927\u7684\u5e45\u5ea6\u8c03\u6574\u6e29\u5ea6\u3002\u5373\u4ee3\u7801\u4e2d\u53ea\u6709\u5bf910,5,1\u7684\u64cd\u4f5c\u3002\n    \n\n------------\n\n \u4f46wa\u4e86\u4e00\u4e2a\u70b9\uff0c\u540e\u6765\u60f3\u52309=10-1\uff0c\u53ea\u7528\u4e24\u6b21\uff0c\u800c\u4e0d\u662f9=5+1+1+1+1\u7528\u4e94\u6b21\u3002\n \n \u6240\u4ee5\u5bf9\u5341\u4ee5\u5185\u7684\u6570\u5b57\u8fdb\u884c\u5224\u65ad\n \n \u672b\u8d2a\u5fc3\uff1a\n \n 9=10-1 \u6700\u5c11\u4e24\u6b21\n \n 8=10-1-1 \u6700\u5c11\u4e09\u6b21\n \n 7=5+1+1 \u6700\u5c11\u4e09\u6b21\n \n 6=5+1 \u6700\u5c11\u4e24\u6b21\n \n 4=5-1 \u6700\u5c11\u4e24\u6b21\n \n 3=5-1-1=1+1+1 \u6700\u5c11\u4e09\u6b21\n \n 2=1+1 \u6700\u5c11\u4e24\u6b21\n \n \u4e8e\u662f\u5c31\u6709\u4e86\u5982\u4e0b\u4ee3\u7801\n ```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint a,b,box,cnt;\n\nint main()\n{\n\tcin>>a>>b;\n\tbox=abs(a-b);\n\t\n\tif(box>=10)\n\t{\n\t\tcnt+=box/10;\n\t\tbox%=10;\n\t}\n\tif(box>=9)\n\t{\n\t\tcnt+=2*(box/9);\n\t\tbox%=9;\n\t}\n\tif(box>=8)\n\t{\n\t\tcnt+=3*(box/8);\n\t\tbox%=8;\n\t}\n\tif(box>=5)\n\t{\n\t\tcnt+=box/5;\n\t\tbox%=5;\n\t}\n\tif(box>=4)\n\t{\n\t\tcnt+=2*(box/4);\n\t\tbox%=4;\n\t}\n\tcnt+=box;\n\tcout<<cnt<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1541504052,
        "uid": 29691,
        "name": "ALGOBAKE__YE",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT46 \u3010\u30ea\u30e2\u30b3\u30f3\u3011"
    },
    {
        "content": "\u6ca1\u6709\u6700\u77ed\u8def\u5440~\n\n~~\u8d76\u7d27\u8fc7\u6765\u9a97\u4e00\u70b9\u5495\u503c~~\n\n\u7531\u4e8e$a,b\u226440$\uff0c\u6240\u4ee5\u53ef\u4ee5\u653e\u5fc3\u7684\u9884\u5904\u7406\u4e00\u904d\uff0c\u7136\u540e\u8dd1$Dijkstra$\n\n### \u8981\u5c0f\u5fc3\u8d8a\u754c\uff0c\u6240\u4ee5\u9884\u5904\u7406\u8981\u7279\u5224\n\n```cpp\n#include<iostream>\n#include<vector>\n#include<queue>\nusing namespace std;\nstruct edge\n{\n    int node,weight;\n    edge(int node_,int weight_):\n        node(node_),weight(weight_){}//\u6784\u9020\u51fd\u6570\n};\nstruct element\n{\n    int node,value;\n    element(int node_,int value_):\n        node(node_),value(value_){}//\u6784\u9020\u51fd\u6570\n    bool operator <(const element &other) const//\u91cd\u8f7d\uff0c\u4e3a\u4f18\u5148\u961f\u5217\u63d0\u4f9b\u6bd4\u8f83\u65b9\u5f0f\n    {\n        return value>other.value;\n    }\n};\nvector<edge> v[41];//\u90bb\u63a5\u8868\nint dis[41],a,b;\nbool vis[41];\ninline void dijkstra()//\u677f\u5b50\uff0c\u4e0d\u89e3\u91ca\n{\n    priority_queue<element> q;\n    q.push(element(a,0));\n    while(!q.empty())\n    {\n        element k=q.top();\n        q.pop();\n        if(vis[k.node])\n            continue;\n        vis[k.node]=1;\n        dis[k.node]=k.value;\n        if(k.node==b)//\u5982\u679c\u641c\u5230\u4e86\u76f4\u63a5\u8df3\u51fa\u53bb\n            return;\n        for(vector<edge>::iterator it=v[k.node].begin();it!=v[k.node].end();++it)\n            q.push(element(it->node,it->weight+k.value));\n    }\n}\nint main()\n{\n    cin>>a>>b;\n    for(int i=1;i<=40;++i)//\u9884\u5904\u7406\n    {\n        if(i>=1)//\u7279\u5224\n        {\n            v[i-1].push_back(edge(i,1));//\u5efa\u53cc\u5411\u8fb9\n            v[i].push_back(edge(i-1,1));\n        }\n        if(i>=5)//\u7279\u5224\n        {\n            v[i-5].push_back(edge(i,1));\n            v[i].push_back(edge(i-5,1));\n        }\n        if(i>=10)//\u7279\u5224\n        {\n            v[i-10].push_back(edge(i,1));\n            v[i].push_back(edge(i-10,1));\n        }\n    }\n    dijkstra();\n    cout<<dis[b]<<endl;//\u8f93\u51fa\n    return 0;\n}\n```\n",
        "postTime": 1553944287,
        "uid": 85682,
        "name": "\u7edd\u9876\u6211\u4e3a\u5cf0",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 AT46 \u3010\u30ea\u30e2\u30b3\u30f3\u3011"
    },
    {
        "content": "\u672c\u9898\u7b2c\u4e00\u7bc7python\u9898\u89e3\uff0c\u6fc0\u52a8~\n\n\u8fd9\u9053\u9898\u6211\u662f\u641cBFS\u770b\u5230\u7684\uff0c\u7ed3\u679c\u4e00\u770b\u53d1\u73b0\u8d2a\u5fc3\u4e0d\u662f\u66f4\u7b80\u5355\u4e48...\n\n\u53ea\u8981\u6bcf\u6b21\u5224\u65ad\u8c03\u51e0\u5ea6\u6700\u4f18\u5c31\u884c\u4e86\uff0c\u8fd9\u79cd\u6570\u5b66\u5e94\u8be5\u5c0f\u5b66\u5c31\u4f1a\u4e86\u5427\uff0c\u8d2a\u5fc3\u6613\u8bc1\n\n\u4e0a\u4ee3\u7801\n\n```python\ns = input().split()#\u8bfb\u4e00\u884c\na, b = int(s[0]), int(s[1])#\u8d4b\u7ed9a\u548cb\nans = 0#\u521d\u59cb\u53d8\u52a8\u6b21\u6570\u4e3a0\nwhile a != b:#\u4e00\u76f4\u5faa\u73af\u5230\u8c03\u5230b\u5ea6\n    if abs(b - a) <= 3:#\u5982\u679c\u57283\u5ea6\u4ee5\u5185\uff08\u8fd9\u6837\u4e00\u5ea6\u4e00\u5ea6\u8c03\u6700\u4f18\n        if b > a:#\u5982\u679c\u662fb\u5927\n            a += 1#a\u5f80\u4e0a\u8c03\u4e00\u5ea6\n        else:\n            a -= 1#\u4e0d\u7136\u5f80\u4e0b\u8c03\u4e00\u5ea6\n    elif abs(b - a) <= 7:#<=3<=7\u5ea6\uff0c\u8fd9\u91cc\u7528elif\u5ffd\u7565\u6389<=3\u7684\u60c5\u51b5\uff0c\u8fd9\u6837\u7684\u8bdd\u8c035\u5ea6\u6700\u4f18\n        if b > a:#b\u5927\n            a += 5#\u5411\u4e0a\u8c035\u5ea6\n        else:\n            a -= 5#\u4e0d\u7136\u5f80\u4e0b5\u5ea6\n    else:#\u9664\u6b64\u4e4b\u5916\uff0c\u80af\u5b9a\u662f\u8c0310\u5ea6\u6700\u4f18\u7684\u4e86\n        if b > a:#\u5982\u679cb\u5927\n            a += 10#\u8c03\u9ad810\u5ea6\n        else:\n            a -= 10#\u4e0d\u7136\u8c03\u4f4e10\u5ea6\n    ans += 1#\u6b21\u6570+1\nprint(ans)#\u8f93\u51fa\u53d8\u52a8\u6b21\u6570\n```\n\u603b\u7528\u65f6540ms\uff0c\u8dd1\u5f97\u98de\u5feb",
        "postTime": 1587894784,
        "uid": 220426,
        "name": "\u8840\u8272\u9ec4\u660f",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 AT46 \u3010\u30ea\u30e2\u30b3\u30f3\u3011"
    },
    {
        "content": "# 0.\u9898\u5916\u8bddqwq\n\n\u770b\u5927\u5bb6\u90fd\u6ca1\u6709\u4f7f\u7528\u53cc\u5411BFS\u7684\u89e3\u6cd5\uff0c\u672c\u849f\u84bb\u5c31\u53d1\u4e00\u53d1\u5427qwq\u3002\n\n# 1.\u4e3b\u8981\u601d\u8def\n\n\u56e0\u4e3a\u6211\u4eec\u77e5\u9053\u9898\u76ee\u7ed9\u51fa\u4e86 $s$ \u548c $t$ \uff0c\u7ed9\u51fa\u4e86\u8d77\u59cb\u6761\u4ef6\u548c\u7ec8\u6b62\u6761\u4ef6\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u5728**\u7ed9\u5b9a\u8d77\u70b9\u548c\u7ec8\u70b9**\u7684\u60c5\u51b5\u4e0b\uff0c\u8fdb\u884c\u53cc\u5411BFS\u3002\n\n\u800c\u4e14\uff0c\u8fd8\u6709\u4e00\u7cfb\u5217\u7684\u53d8\u6362\u6761\u4ef6\uff0c\u8fd9\u90fd\u53ef\u4ee5\u5199\u6210**\u6bcf\u6b21\u6269\u5c55\u65b0\u7ed3\u70b9**\u7684\u5f62\u5f0f\uff0c\u4ece\u800cBFS\u3002\n\n# 2.\u53cc\u5411BFS\u662f\u4ec0\u4e48\uff1f\n\n\u53cc\u5411BFS\uff0c\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u8fd9\u662f\u4ee5**\u4e24\u4e2a\u65b9\u5411BFS\u7684**\u3002\u4e00\u822c\u4ece\u8d77\u70b9\u548c\u7ec8\u70b9\u5f00\u59cb\u904d\u5386\uff0c\u4f7f\u7528**\u4e24\u4e2a**\u961f\u5217\u6269\u5c55\uff0c\u5982\u679c\u6709\u4e00\u68f5\u641c\u7d22\u6811\u91cc\u51fa\u73b0\u4e86\u53e6\u4e00\u68f5\u641c\u7d22\u6811\u7684\u7ed3\u70b9\uff0c\u5c31\u4ee3\u8868**\u6709\u4e00\u79cd\u65b9\u6848**\u4f7f\u5f97\u53ef\u4ee5\u627e\u5230\u7b54\u6848\uff0c\u4e14\u662f**\u6700\u4f18\u89e3**\uff0c\u5373\u8fd9\u4e2a**\u4ea4\u70b9**\u6240\u5728\u7684**\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u8fd9\u4e48\u4e00\u6761\u8def\u5f84**\u5c31\u662f**\u6700\u4f18\u89e3**\u3002\n\n\u653e\u5f20\u56fe\u8bc1\u660e\u53cc\u5411BFS\u662f\u600e\u4e48\u4e2a\u53cc\u5411\u641c\u7d22\u7684\uff1a\n\n![image.png](https://i.loli.net/2020/04/19/Mb3GsaFo9v2ewQJ.png)\n\n\u8fd9\u6837\u53ef\u4ee5\u628a\u65f6\u95f4\u538b\u7f29\u5230\u539f\u6765\u7684 $\\frac{1}{2}$ \uff0c\u751a\u81f3\u66f4\u4f18\uff01\n\n\u4ee3\u7801\u53ef\u4ee5\u8fd9\u4e48\u5b9e\u73b0\uff1a\n\n```cpp\n\u5efa\u7acb\u5e76\u521d\u59cb\u5316\u4e24\u4e2aBFS\u961f\u5217q1,q2;\n\u5efa\u7acb\u4e24\u4e2a\u6807\u8bb0\u6570\u7ec4b1,b2;\nwhile(!q1.empty()&&!q2.empty())\n \u6269\u5c55q1\n  \u5982\u679cq1\u7684\u5408\u6cd5\u6269\u5c55\u6709q2\u7684\u8282\u70b9\n   \u8f93\u51fa\u8d77\u70b9\u5230\u8fd9\u4e2a\u70b9\u7684\u8ddd\u79bb\u548c\u7ec8\u70b9\u5230\u8fd9\u4e2a\u70b9\u7684\u8ddd\u79bb\uff1b\n \u6269\u5c55q2\n  \u5982\u679cq2\u7684\u5408\u6cd5\u6269\u5c55\u6709q1\u7684\u8282\u70b9\n   \u8f93\u51fa\u8d77\u70b9\u5230\u8fd9\u4e2a\u70b9\u7684\u8ddd\u79bb\u548c\u7ec8\u70b9\u5230\u8fd9\u4e2a\u70b9\u7684\u8ddd\u79bb\uff1b\n```\n\n\u8fd9\u6837\u4f1a\u5927\u5927\u51cf\u5c11\u7a0b\u5e8f\u7684\u65f6\u95f4\u3002\n\n# 3.\u6709\u4e00\u4e9b\u95ee\u9898\n\nQ1\uff1a\u6211\u7684BFS\u5982\u4f55\u6269\u5c55\uff1f\n\nA1\uff1a\u53ef\u4ee5\u5faa\u73af $6$ \u6b21\uff0c\u6bcf\u6b21\u5bf9\u5e94\u4e00\u4e2a\u503c\u2014\u2014\u5982 $i=1$ \u65f6\u65b0\u6269\u5c55\u7684\u8282\u70b9\u5c31\u589e\u52a0 $1$\uff0c$i=2$ \u65f6\u65b0\u6269\u5c55\u7684\u8282\u70b9\u5c31\u589e\u52a0 $2$ \u7b49\u3002\n\nQ2\uff1a\u5982\u4f55\u5224\u91cd\uff1f\n\nA2\uff1a\u53ef\u4ee5\u7ed9\u6bcf\u4e00\u4e2a\u8d77\u59cb\u503c/\u7ec8\u6b62\u503c\u52a0\u4e0a\u4e00\u4e2a\u56fa\u5b9a\u7684\u6570\uff0c\u6bd4\u5982 $50$ \uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u51fa\u73b0\u8d1f\u6570\u5224\u91cd\u7b49\u95ee\u9898\u3002\n\n# 4.\u90e8\u5206\u4ee3\u7801\n\n```cpp\nFu(i,1,6)\n{\n\tFu(j,0,1)\n\t{\n\t\tint nxy=q[j].front();\n\t\tif(i==1)++nxy;\n\t\telse if(i==2)nxy+=5;\n\t\telse if(i==3)nxy+=10;\n\t\telse if(i==4)--nxy;\n\t\telse if(i==5)nxy-=5;\n\t\telse if(i==6)nxy-=10;\n\t\tif(nxy>100||nxy<0)continue;\n\t\tif(b[j][nxy])continue;\n\t\tq[j].push(nxy);\n//\t\tprintf(\"%d %d %d\\n\",i,j,nxy);\n\t\tb[j][nxy]=1;\n\t\tst[j][nxy]=st[j][q[j].front()]+1;\n\t\tif(b[!j][nxy])return st[j][nxy]+st[!j][nxy];\n\t}\n}\n```\n\n\u7136\u540e\u5c31\u662f\u6ce8\u610f\u7ec6\u8282\u65b9\u9762\u7684\u95ee\u9898\uff0c\u5c31A\u4e86\u3002",
        "postTime": 1587307255,
        "uid": 121995,
        "name": "SmallTualatin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT46 \u3010\u30ea\u30e2\u30b3\u30f3\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5176\u5b9e\u662f\u4e00\u9053\u6700\u77ed\u8def\u7684 ~~\uff08\u6c34\uff09~~ \u88f8\u9898\u3002\n\n\u6211\u4eec\u628a\u6bcf\u4e00\u4e2a\u6e29\u5ea6\u770b\u6210\u4e00\u4e2a\u7ed3\u70b9\u3002\u5047\u8bbe\u4e00\u4e2a\u7ed3\u70b9\u4e3a $a$ , \u6211\u4eec\u53ea\u8981\u8003\u8651\u8fde $a+1 , a-1 , a+5 , a-5 , a+10 , a-10$ \u8fd9\u516d\u4e2a\u7ed3\u70b9\u5c31\u884c\u4e86\u3002\n\n\u8fde\u5b8c\u8fb9\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u8dd1\u4e00\u904d SPFA \u89e3\u51b3\u95ee\u9898\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint d[1001];\nint s,t;\nqueue<int> q;\n\ninline void Question(int x,int y)\n{\n\tif(x<0 || x>1000) return;\n\tif(d[y]+1<d[x])\n\t{\n\t\td[x]=d[y]+1;\n\t\tq.push(x);\n\t}\n}\n\nvoid SPFA(int x)\n{\n\tQuestion(x+1,x);\n\tQuestion(x-1,x);\n\tQuestion(x+5,x);\n\tQuestion(x-5,x);\n\tQuestion(x+10,x);\n\tQuestion(x-10,x);\n\tif(!q.empty())\n\t{\n\t\tint num=q.front();\n\t\tq.pop();\n\t\tSPFA(num);\n\t}\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&s,&t);\n\tmemset(d,127,sizeof(d));\n\td[s]=0;\n\tSPFA(s);\n\tprintf(\"%d\",d[t]);\n    return 0;\n}\n\n```\n",
        "postTime": 1584025101,
        "uid": 148913,
        "name": "Graphcity",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 AT46 \u3010\u30ea\u30e2\u30b3\u30f3\u3011"
    },
    {
        "content": "#### \u9898\u76ee\u63cf\u8ff0\uff1a\n\n\u641c\u7d22\u7684\u88f8\u9898\uff0c\u53ea\u4e0d\u8fc7\u64cd\u4f5c\u6709\u70b9\u591a\uff0c\u7565\u70e6\u3002\n\n#### \u601d\u8def\uff1a\n\n\u770b\u5230\u5176\u4ed6\u5927\u4f6c\u90fd\u5728\u7528dfs\uff0c\u8fed\u4ee3\u52a0\u6df1\uff0c\u6253\u8868\uff0c\u8d2a\u5fc3\u7b49\u795e\u5947\u7b97\u6cd5\uff0c\u849f\u84bb\u53ea\u5f97\u7ed9\u51fa\u4e00\u4e2a\u6807\u51c6\u6a21\u677f\uff08\u600e\u4e48\u8fd8\u6709\u7528\u7ed3\u6784\u4f53\u7684\u2026\u2026\u5b8c\u5168\u4e0d\u7528\u554a\uff09\n\n\u4f7f\u7528bfs\u6c42\u6700\u77ed\u8def\u5f84\uff0c\u56e0\u4e3a\u6570\u636e\u5c0f\u53ef\u4ee5\u901a\u8fc7\uff0c\u53ea\u4e0d\u8fc7\u5728push\u7684\u65f6\u5019\u8981\u51996\u4e2aif\uff0c\u70e6\u3002\n\n\u6700\u540e\u6ce8\u610f\u4e0b\u8f93\u51fa\u8981\u6362\u884c\u3002\n\n#### \u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nqueue<ll> q;\nbool vis[41];\nll a,b,dis[41];\nint main(){\n\tscanf(\"%lld%lld\",&a,&b);\n\tq.push(a);\n\tvis[a]=1;\n\tdis[a]=0;\n\twhile(!q.empty()){\n\t\tint now=q.front();\n\t\tif(now==b) {\n\t\t\tprintf(\"%lld\\n\",dis[now]);\n\t\t\treturn 0;\n\t\t}\n\t\tif(!vis[now-1]&&now-1>=0) vis[now-1]=1,q.push(now-1),dis[now-1]=dis[now]+1;\n\t\tif(!vis[now+1]&&now+1<=40) vis[now+1]=1,q.push(now+1),dis[now+1]=dis[now]+1;\n\t\tif(!vis[now-5]&&now-5>=0) vis[now-5]=1,q.push(now-5),dis[now-5]=dis[now]+1;\n\t\tif(!vis[now+5]&&now+5<=40) vis[now+5]=1,q.push(now+5),dis[now+5]=dis[now]+1;\n\t\tif(!vis[now-10]&&now-10>=0) vis[now-10]=1,q.push(now-10),dis[now-10]=dis[now]+1;\n\t\tif(!vis[now+10]&&now+10<=40) vis[now+10]=1,q.push(now+10),dis[now+10]=dis[now]+1;\n\t\tq.pop();\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1570116257,
        "uid": 149872,
        "name": "\u5c0f\u5c0f\u5c0f\u670b\u53cb",
        "ccfLevel": 5,
        "title": "AT46 \u30ea\u30e2\u30b3\u30f3"
    },
    {
        "content": "\u51e0\u4e4e\u662fbfs\u6a21\u677f\u9898\uff0c\u62ff\u6765\u7ec3\u7ec3\u624b\uff0c\u987a\u4fbf\u53d1\u4e2a\u9898\u89e3\u3002\n\n\u548c\u4e00\u822c\u7684bfs\u9898\u4e00\u6837\uff0c\u53ea\u8981\u627e\u6e05\u695a\u641c\u7d22\u8fb9\u754c\u548c\u8c03\u6574\u7684\u5e45\u5ea6\u5c31\u597d\u5566\u3002\n\n\u9996\u5148\u641c\u7d22\u7684\u8fb9\u754c\uff0c\u6211\u4eec\u8bbe\u5b9a\u8c03\u6574\u6e29\u5ea6\u4e0d\u4f4e\u4e8e0\u5ea6\uff0c\u4e0d\u9ad8\u4e8e40\u5ea6\u3002\u7136\u540e\u662f\u8c03\u6574\u7684\u5e45\u5ea6\uff0c\u5728\u9898\u76ee\u4e2d\u4e5f\u6709\u6240\u63cf\u8ff0\uff0c\u6211\u5c31\u4e0d\u8d58\u8ff0\u4e86\u3002\n\n\u4e0b\u9762\u8d34\u4ee3\u7801\u5427\uff0c\u8bb2\u89e3\u90fd\u653e\u5728\u6ce8\u91ca\u91cc\u9762\u5566~\n\n```cpp\n#include<iostream>\nusing namespace std;\n\nstruct node{\n    int dep;  //\u8bb0\u5f55\u5f53\u524d\u6e29\u5ea6\n    int step;  //\u8bb0\u5f55\u8c03\u6574\u5df2\u7ecf\u7ecf\u8fc7\u7684\u6b65\u6570\n}que[41];\n\nint a,b,vis[41],dir[6]={1,5,10,-1,-5,-10},head=1,tail=1,flag=0;\n//vis\u7528\u6765\u6807\u6ce8\u5f53\u524d\u7684\u6e29\u5ea6\u6709\u6ca1\u6709\u88ab\u8c03\u8fc7\n//dir\u662f\u8c03\u6574\u7684\u516d\u79cd\u65b9\u6cd5\uff0c\u4e0a\u4e0b\u8c031,5,10\u5ea6\n\nvoid bfs(){\n\n    int nd;  //\u8fd9\u4e2a\u4e5f\u662f\u5f53\u524d\u6e29\u5ea6\n    que[tail].dep=a;  //\u5c06\u5f00\u59cb\u7684\u6e29\u5ea6\u8bbe\u7f6e\u4e3aa\n    que[tail].step=0;  //\u5c06\u7ecf\u8fc7\u7684\u6b65\u6570\u8bbe\u5b9a\u4e3a0\n    vis[a]=1;  //\u5f53\u524d\u6e29\u5ea6\u5df2\u7ecf\u88ab\"\u7528\"\u8fc7\u4e86\n    tail++;  //\u5c3e++\n    \n    while(head<tail){  //\u5f53\u5934\u5728\u5c3e\u524d\u9762\u65f6\u624d\u80fd\u5faa\u73af\n        for(int i=0;i<6;i++){  //\u516d\u79cd\u8c03\u6574\u65b9\u5f0f\n            nd=que[head].dep+dir[i];  //\u8bbe\u5b9a\u76ee\u524d\u6e29\u5ea6\n            if(nd>0&&nd<41&&!vis[nd]){  //\u5982\u679c\u6ca1\u6709\u51fa\u754c\u4e14\u5f53\u524d\u6e29\u5ea6\u6ca1\u6709\u88ab\"\u7528\"\u8fc7\n                vis[nd]=1;  //\u6807\u6ce8\u4e00\u4e0b\n                que[tail].dep=nd;\n                que[tail].step=que[head].step+1;\n                //\u5bf9\u5e94\u7684\u6e29\u5ea6\u548c\u6b65\u6570\u66f4\u6539\u4e00\u4e0b\n                tail++;  //\u5c3e++\n            }\n            \n            if(nd==b){\n                flag=1;\n                break;  //\u5982\u679c\u5df2\u7ecfok\u4e86\uff0c\u90a3\u5c31\u6807\u8bb0\u4e00\u4e0b\uff0c\u9000\u51fa\u672c\u6b21\u5faa\u73af\n            }\n        }\n        \n        if(flag){\n            break;  //\u5982\u679c\u5b8c\u6210\u4e86\uff0c\u90a3\u5c31\u65e0\u9700\u518d\u5faa\u73af\u4e86\n        }\n        head++;  //\u4e0d\u7136\u5c31\u5934++\n    }\n    return;\n}\n\nint main(){\n    cin>>a>>b;  //\u8f93\u5165\n    \n    if(a==b){\n        cout<<0<<endl;  //\u7279\u5224-\u5982\u679ca\u7b49\u4e8eb\u5c31\u65e0\u9700\u6539\u52a8\n        return 0;  //\u4e0d\u7528\u518d\u8fd0\u884c\u4e86\n    }\n    \n    bfs();  //\u8c03\u7528\u51fd\u6570\uff0c\u51fd\u6570\u90e8\u5206\u4e5f\u53ef\u4ee5\u653e\u5230\u8fd9\u91cc\u6765\n    cout<<que[tail-1].step<<endl;  //\u8f93\u51fa\u6700\u7ec8\u6b65\u6570\n    return 0;  //\u597d\u4e60\u60ef\n}\n```\n\u611f\u8c22\u9605\u8bfb\uff0c\u795d\u4f60AC\uff01",
        "postTime": 1559571605,
        "uid": 185527,
        "name": "Raw_Aya9285",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT46 \u3010\u30ea\u30e2\u30b3\u30f3\u3011"
    },
    {
        "content": "\u63a8\u8350\u4e00\u4e2a\u505a\u6cd5\uff1a\u8fed\u4ee3\u52a0\u6df1\u641c\u7d22\n\n\u611f\u89c9\u6bd4\u5e7f\u641c\u8981\u597d\u5199\u4e00\u4e9b\uff0c\u5176\u5b9e\u5c31\u662f\u52a0\u4e86\u4e00\u70b9\u522b\u7684\u4e1c\u897f\u7684`DFS`\n![\u8fed\u4ee3\u52a0\u6df1](https://cdn.luogu.com.cn/upload/pic/51128.png)\n\n\u8fd9\u91cc\u662fluogu\u7f51\u6821\u63d0\u9ad8\u7ec4\u8bb2\u4e49\u91cc\u7684\u4e00\u6bb5\u8bdd\uff0c\u4f9b\u53c2\u8003\u3002\n\n\u5177\u4f53\u6765\u770b\u4e0b\u4ee3\u7801\u3002\n\n\u5e0c\u671b\u901a\u8fc7\u6b64\u9898\uff0c\u5927\u5bb6\u80fd\u4e86\u89e3\u5230\u8fd9\u4e2a\u6bd4\u8f83\u51b7\u95e8\u7684\u7b97\u6cd5\uff0c\u81ea\u6211\u611f\u89c9\u633a\u597d\u7528\u3002\u3002\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nint A,B;\nbool haveAns=false;//\u7528\u9014\u5982\u540d\uff0c\u5224\u65ad\u662f\u5426\u5df2\u7ecf\u627e\u5230\u89e3\nvoid DFS(int x,int deep,const int maxDeep)\n//x\u662f\u5f53\u524d\u5df2\u7ecf\u8c03\u5230\u7684\u503c\uff1bdeep\u662f\u8fed\u4ee3\u6df1\u5ea6\uff1bmaxDeep\u662f\u89c4\u5b9a\u7684\u6700\u5927\u8fed\u4ee3\u6df1\u5ea6\uff0c\u76ee\u7684\u5c31\u662f\u6211\u4eec\u4e0d\u4f1a\u8ba9dfs\u6cbf\u7740\u89e3\u7b54\u6811\u7684\u4e00\u8fb9\u4e00\u5934\u624e\u4e0b\u53bb\u3002\n{\n    if(haveAns)return;\n    if(x==B){//\u627e\u5230\u89e3\n        haveAns=true;//\u66f4\u65b0\u72b6\u6001\n        return;\n    }\n    if(deep>maxDeep)return;//\u9650\u5236\u6700\u5927\u8fed\u4ee3\u6df1\u5ea6\n    DFS(x+5,deep+1,maxDeep);\n    DFS(x+1,deep+1,maxDeep);\n    DFS(x+10,deep+1,maxDeep);\n    DFS(x-1,deep+1,maxDeep);\n    DFS(x-5,deep+1,maxDeep);\n    DFS(x-10,deep+1,maxDeep);\n}\nint main()\n{\n    scanf(\"%d%d\",&A,&B);\n    if(A==B){cout<<0<<endl;return 0;}//\u4e4b\u524d\u7684\u6e29\u5ea6\u548c\u8c03\u5b8c\u7684\u6e29\u5ea6\u4e00\u6837\u90a3\u8fd8\u8c03\u5565\uff0c\u76f4\u63a5\u8f93\u51fa0\u6b65\u3002\n    int deep=abs(A-B)+5;//\u6211\u4eec\u89c4\u5b9a\u4e00\u4e2a\u6700\u5927\u7684\u6df1\u5ea6\uff08\u5373\u6bcf\u6b21\u8c03\u9ad8\u6216\u8005\u8c03\u4f4e\u4e00\u5ea6\uff0c\u6700\u5927\u9700\u8981\u8c03\u8282abs\uff08A-B\uff09\u6b21\uff09\n    //\u81f3\u4e8e+5.\u3002\u3002\u8fd9\u4e2a\u662f\u7384\u5b66\uff0c\u53cd\u6b63\u5927\u4e00\u70b9\u603b\u662f\u597d\u7684\u3002\u3002+1\u5c31\u53ef\u4ee5\u5176\u5b9e\uff0c\u4f46\u662f\u65f6\u95f4\u5145\u8db3\uff0c\u4e0d\u5dee\u94b1\uff08\u65f6\u95f4\uff09\u3002\u3002\n    int i;\n    for(i=1;i<=deep&&!haveAns;i++)//\u5faa\u73af\u6761\u4ef6\uff0c\u5c31\u662f\u6ca1\u6709\u8d85\u8fc7\u6700\u5927\u6df1\u5ea6\uff0c\u800c\u4e14\u6ca1\u627e\u5230\u89e3\u3002\n        DFS(A,1,i);\n    //\u8fd9\u6837\u7b54\u6848\u5c31\u662fi-1\u3002\u6211\u4eec\u6765\u8003\u8651\u4e00\u4e0b\u8fd9\u4e1c\u897f\u7684\u6d41\u7a0b\u3002\n    //\u6211\u5148\u7528dfs\u5224\u65ad\uff0c\u5982\u679c\u8c031\u6b65\u884c\u4e0d\u884c\uff1b\n    //\u5982\u679c\u4e0d\u884c\uff0c\u90a3\u5c31\u8c03\u4e24\u6b65\u884c\u4e0d\u884c\uff1b\n    //\u5982\u679c\u8fd8\u4e0d\u884c\uff0c\u90a3\u5c31\u8c03\u4e09\u6b65\u884c\u4e0d\u884c\n    //\u5982\u679c\u8fd8\u4e0d\u884c\uff0c\u90a3\u5c31\u8c03\u56db\u6b65\u884c\u4e0d\u884c\n    //\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\n    //\u6700\u540e\u603b\u6709\u4e00\u79cd\u6b65\u6570\u662f\u53ef\u4ee5\u7684\uff0c\u8fd9\u65f6\u5019\u8df3\u51fa\u5faa\u73af\uff0c\u7136\u540e\u8f93\u51fa\u7ed3\u679c\u3002\n    cout<<--i<<endl;\n    return 0;\n}\n//\u5176\u5b9e\u4ee3\u7801\u7092\u9e21\u77ed\u3002\u3002\u53bb\u6389\u6ce8\u91ca\u5927\u698230\u884c\u5de6\u53f3\u3002\uff08\u5f53\u7136\u8fd8\u80fd\u66f4\u77ed\uff09\n```",
        "postTime": 1549567560,
        "uid": 44615,
        "name": "ShuYuMo",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 AT46 \u3010\u30ea\u30e2\u30b3\u30f3\u3011"
    },
    {
        "content": "```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint t=123456789;//\u5c3d\u91cf\u628at\u5f00\u7684\u5927\u4e00\u70b9\nint n,m;\nvoid dd(int x,int s)\n{ \n  if(s>=t) return;//\u8003\u8651\u4ec0\u4e48\u65f6\u5019\u505c\u6b62\u641c\u7d22\uff08\u8fb9\u754c\u6761\u4ef6\uff09\n  if(x==n) \n  { \n     t=min(t,s);\n     return;\n  }\n  if(x>n)\n  {\n\t dd(x-1,s+1);\n     dd(x-10,s+1);\n     dd(x-5,s+1);//\u6309\u7167\u9898\u610f\uff08\u8fdb\u884c\u641c\u7d22\uff09\u4e0a\u8c031\u5ea6,\u4e0a\u8c035\u5ea6,\u4e0a\u8c0310\u5ea6\n  }\n    else\n    {\n\t  dd(x+1,s+1);\n\t  dd(x+10,s+1);\n\t  dd(x+5,s+1);//\u540c\u4e0a\uff0c\u4e0b\u8c031\u5ea6\uff0c\u4e0b\u8c035\u5ea6\uff0c\u4e0b\u8c0310\u5ea6\n    }\n}\nint main()\n{ \n  cin>>m>>n;//m\u4e3a\u521d\u59cb\u6e29\u5ea6\n\tdd(m,0);\n\tcout<<t<<endl;//\u8f93\u51fa\n\treturn 0;\n}\n \n\n```",
        "postTime": 1547790502,
        "uid": 172612,
        "name": "\u7c73\u5947\u5947\u7c73",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT46 \u3010\u30ea\u30e2\u30b3\u30f3\u3011"
    }
]