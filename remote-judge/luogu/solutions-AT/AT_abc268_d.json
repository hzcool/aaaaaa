[
    {
        "content": "\u8d5b\u65f6\u505a\u51fa\u4e86 D \u5374\u6ca1\u505a\u51fa C\uff0c\u8fd9\u662f\u4ec0\u4e48\u539f\u56e0\u3002\u3002\u3002\n\n\u672c\u9898\u53ef\u4ee5\u4f7f\u7528\u6df1\u5ea6\u4f18\u5148\u641c\u7d22 dfs\u3002\n\n\u641c\u7d22\u8fc7\u7a0b\u5982\u4e0b\uff1a\n\n1. \u9996\u5148\uff0c\u679a\u4e3e\u4f5c\u4e3a\u5f00\u7aef\u7684\u5b57\u7b26\u4e32\uff1b\n\n2. \u5176\u6b21\uff0c\u679a\u4e3e\u4e0b\u4e00\u4e2a\u5b57\u7b26\u4e32\uff1b\n\n3. \u63a5\u7740\uff0c\u679a\u4e3e\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e4b\u95f4\u4e0b\u5212\u7ebf\u7684\u6570\u91cf\uff1b\n\n4. \u5c06\u76ee\u524d\u7684\u5b57\u7b26\u4e32\u5f53\u4f5c\u7b2c\u4e00\u6b65\u201c\u5f00\u7aef\u7684\u201d\u5b57\u7b26\u4e32\u5e76\u5c06\u5f53\u524d\u641c\u7d22\u8fc7\u7684\u5b57\u7b26\u4e32\u6253\u4e0a\u6807\u8bb0\uff0c\u8fd4\u56de\u7b2c\u4e8c\u6b65\u7ee7\u7eed\u641c\u7d22\uff1b\n\n\u5728\u7b2c 2 \u6b65\u4e2d\u5982\u679c\u7528\u5b8c\u4e86\u6240\u6709\u7684\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u5c31\u5224\u65ad\u4e00\u4e0b\u641c\u5230\u7684\u5b57\u7b26\u4e32\u662f\u5426\u5408\u6cd5\uff0c\u5982\u679c\u5408\u6cd5\u90a3\u4e48\u5c31\u8f93\u51fa\u8fd9\u4e2a\u7b54\u6848\u3002\n\n\u7528\u4e00\u4e2a `std::set` \u5b58\u653e\u6240\u6709\u4e0d\u80fd\u4f7f\u7528\u7684\u7528\u6237\u540d\uff0c\u6700\u7ec8\u641c\u5230\u7b54\u6848\u65f6\u7528 `find` \u51fd\u6570\u5224\u65ad\u7b54\u6848\u662f\u5426\u5408\u6cd5\u5373\u53ef\u3002\n\n\u6ce8\u610f\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u5751\u70b9\uff0c\u5c31\u662f\u6700\u7ec8\u641c\u5230\u7684\u7b54\u6848**\u957f\u5ea6\u5fc5\u987b\u4e0d\u5c0f\u4e8e $3$**\uff0c\u8d5b\u65f6\u88ab\u8fd9\u73a9\u610f\u5751\u4e86 2 \u6b21 WA\u3002\u9519\u5728\u8fd9\u4e2a\u5730\u65b9\u7684\u7a0b\u5e8f\u53ef\u4ee5\u7528\u5982\u4e0b\u7684\u4e00\u7ec4\u6570\u636e hack \u6389\uff1a\n\n```\n1 1\na\nx\n```\n\n\u6b63\u786e\u7b54\u6848\u5e94\u8be5\u662f `-1`\uff0c\u800c\u9519\u8bef\u7684\u7a0b\u5e8f\u4f1a\u8f93\u51fa `a`\u3002\n\n\u653e\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstring a[9];\nset<string> b;\nbool x[9]; int n,m;\nbool dfs(int t,string s){\n    if(s.length()>=3&&t>=n&&b.find(s)!=b.end()){\n        cout<<s<<endl;\n        return true;\n    }\n    for(int i=1;i<=n;i++)\n        if(!x[i]){\n            for(int j=1;j<=16;j++){\n                string tt=s; for(int k=1;k<=j;k++)tt+=\"_\"; tt+=a[i];\n                if(tt.length()>16)break; x[i]=true;\n                if(tt.length()>=3&&dfs(t+1,tt))return true; x[i]=false;\n            }\n        }\n    return false;\n}\nint main(){\n    ios::sync_with_stdio(false);\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)cin>>a[i];\n    for(int i=1;i<=m;i++){\n        string s; cin>>s;\n        b.emplace(s);\n    }\n    for(int i=1;i<=n;i++){x[i]=true; if(dfs(1,a[i]))return 0; x[i]=false;}\n    cout<<\"-1\\n\";\n    return 0;\n}\n```",
        "postTime": 1667384704,
        "uid": 556366,
        "name": "zyc212303",
        "ccfLevel": 5,
        "title": "[ABC268D] Unique Username \u9898\u89e3"
    },
    {
        "content": "~~\u4e3a\u4ec0\u4e48\u6a21\u62df\u8d5b\u8981\u51fa\u8fd9\u79cd\u6076\u5fc3\u4eba\u7684\u9898~~\n\n\u7531\u4e8e $N\\le8$\uff0c\u53ef\u4ee5\u76f4\u63a5\u8003\u8651\u641c\u7d22\u7b97\u6cd5\u3002\u95ee\u9898\u5728\u4e8e $M\\le10^5$\uff0c\u56e0\u6b64\u8981\u5feb\u901f\u5224\u65ad\u91cd\u590d\uff0c\u5e76\u6dfb\u52a0\u6709\u6548\u526a\u679d\u3002\n\n\u5982\u4f55\u5224\u91cd\uff1f\u5c06\u6240\u6709\u4e32\u63d2\u5165\u5b57\u5178\u6811\u4e2d\uff0c\u5728\u62fc\u63a5\u65f6\u66f4\u65b0\u5bf9\u5e94\u8282\u70b9\u3002\u5982\u679c\u62fc\u63a5\u5b8c\u6210\u540e\uff0c\u6307\u9488\u6070\u597d\u5728\u8bcd\u5c3e\uff0c\u90a3\u4e48\u8bf4\u660e\u8fd9\u4e00\u5206\u652f\u641c\u7d22\u5931\u8d25\u3002\n\n\u6b64\u5916\uff0c\u8fd8\u6709\u4e00\u4e9b\u526a\u679d\u4f18\u5316\uff1a\n\n1. \u5f53\u641c\u7d22\u8fc7\u7a0b\u4e2d\uff0c\u6307\u9488\u5df2\u7ecf\u5728\u5b57\u5178\u6811\u5916\uff0c\u53ef\u76f4\u63a5\u62fc\u63a5\u5e76\u8f93\u51fa\u3002\n2. \u5f53\u540e\u7eed\u4e32\u4f7f\u7528\u6700\u4f18\u7b56\u7565\u62fc\u63a5\u4ecd\u65e0\u6cd5\u6ee1\u8db3\u957f\u5ea6\u8981\u6c42\uff0c\u76f4\u63a5\u8fd4\u56de\u3002\n3. \u8fd4\u56de\u503c\u4f7f\u7528 `bool` \u7c7b\u578b\uff0c\u641c\u5230\u4e00\u4e2a\u89e3\u540e\u76f4\u63a5\u7ed3\u675f\u641c\u7d22\u3002\n\n\u6700\u540e\u8981\u6ce8\u610f\uff0c\u7b54\u6848\u4e32\u7684\u957f\u5ea6\u9700\u8981\u5927\u4e8e\u7b49\u4e8e $3$\uff0c\u6240\u4ee5\u9700\u8981\u6dfb\u52a0\u7279\u5224\u3002\n\n\u6700\u5927\u70b9\u53ef\u4ee5\u8dd1\u5230 $89\\ \\text{ms}$\u3002\n\n# AC \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int MAXN = 1e5 + 10;\nconst int mod = 998244353;\n\nint c[MAXN << 4][27], tot = 1; bool e[MAXN << 4]; \n\ninline \nvoid insert(char *s) {\n\tint k = 1;\n\tfor (int i = 0, t; s[i]; i++) {\n\t\tt = s[i] == '_' ? 26 : s[i] - 'a';\n\t\tif (!c[k][t]) c[k][t] = ++tot; k = c[k][t];\n\t}\n\te[k] = 1;\n}\n\nint n, m, l[10];\n\nchar s[10][17], t[17];\n\nbool vis[10]; \n\nbool dfs(int k, int p, int x) {\n\tint len = -1;\n\tfor (int i = 1; i <= n; i++) if (!vis[i]) len += l[i] + 1;\n\tif (x + len > 16) return 0;\n\tif (!p || k > n && !e[p]) {\n\t\tt[x] = 0, printf(\"%s\", t);\n\t\tfor (int i = 1, f = 0; i <= n; i++) {\n\t\t\tif (!vis[i]) f && (putchar('_'), 0), printf(\"%s\", s[i]), f = 1;\n\t\t}\n\t\treturn 1;\n\t}\n\tif (k > n) return 0;\n\tfor (int i = 1, q; i <= n; i++) {\n\t\tif (vis[i]) continue; vis[i] = 1, q = p;\n\t\tfor (int j = 0; j < l[i]; j++) q = c[q][s[i][j] - 'a'], t[x + j] = s[i][j];\n\t\tif (k == n) { if (dfs(k + 1, q, x + l[i])) return 1; }\n\t\telse for (int j = 0; j + x + len <= 16; j++) {\n\t\t\tt[x + l[i] + j] = '_', q = c[q][26];\n\t\t\tif (dfs(k + 1, q, x + l[i] + j + 1)) return 1;\n\t\t}\n\t\tvis[i] = 0;\n\t}\n\treturn 0;\n}\n\nint main() {\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i <= n; i++) scanf(\"%s\", s[i]), l[i] = strlen(s[i]);\n\tif (n == 1 && l[1] < 3) return puts(\"-1\"), 0;\n\tfor (int i = 1; i <= m; i++) scanf(\"%s\", t), insert(t);\n\tif (!dfs(1, 1, 0)) puts(\"-1\");\n}\n```",
        "postTime": 1682906655,
        "uid": 406941,
        "name": "Register_int",
        "ccfLevel": 6,
        "title": "ABC268D \u9898\u89e3"
    },
    {
        "content": "# [[ABC268D] Unique Username](https://www.luogu.com.cn/problem/AT_abc268_d) Solution\n\n[TOC]\n\n## [\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u6233\u6b64\u8fdb\u5165](http://blog.tsawke.com?t=ABC268D)\n\n## \u9898\u9762\n\n\u7ed9\u5b9a $ n $ \u5404\u5b57\u7b26\u4e32\uff0c\u53e6\u5916\u7ed9\u5b9a $ m $ \u4e2a\u5b57\u7b26\u4e32\u3002\u4f60\u9700\u8981\u5bf9 $ n $ \u4e2a\u5b57\u7b26\u4e32\u8fdb\u884c\u6392\u5217\uff0c\u5e76\u5728\u6bcf\u76f8\u90bb\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u95f4\u63d2\u5165\u81f3\u5c11\u4e00\u4e2a\u4e0b\u5212\u7ebf\uff0c\u5e76\u4e14\u6700\u7ec8\u5b57\u7b26\u4e32\u4e0e\u7ed9\u5b9a\u7684 $ m $ \u4e2a\u5b57\u7b26\u4e32\u5747\u4e0d\u540c\u3002\u8f93\u51fa\u4efb\u610f\u4e00\u4e2a\u957f\u5ea6\u5728 $ [3, 16] $ \u7684\u65b9\u6848\u3002\n\n## Solution\n\n\u7b2c\u4e00\u773c\u6ca1\u4ec0\u4e48\u60f3\u6cd5\uff0c\u770b\u4e86\u4e00\u773c\u6570\u636e\u8303\u56f4\u624d\u53cd\u5e94\u8fc7\u6765\u8fd9\u4f3c\u4e4e\u5c31\u662f\u4e2a\u66b4\u529b\uff0c\u6211\u4eec\u5c1d\u8bd5\u5206\u6790\u4e00\u4e0b\uff1a\n\n\u4ee4 $ n $ \u4e2a\u5b57\u7b26\u4e32\u603b\u957f\u5ea6\u548c\u4e3a $ s $\uff0c\u6211\u4eec\u8fd8\u8981\u81f3\u5c11\u63d2\u5165 $ n - 1 $ \u4e2a\u4e0b\u5212\u7ebf\uff0c\u90a3\u4e48\u5269\u4e0b\u7684\u53ef\u80fd\u957f\u5ea6\u5c31\u53ea\u6709 $ 16 - s - (n - 1) = 17 - n - s $\uff0c\u540c\u65f6\u663e\u7136 $ s \\ge n $\u3002\u5bf9\u4e8e\u5269\u4e0b\u7684\u957f\u5ea6\u4e0d\u96be\u53d1\u73b0\u53ef\u4ee5\u8ba4\u4e3a\u5176\u662f\u5c06\u4e0b\u5212\u7ebf\u53ef\u7a7a\u5730\u653e\u5165 $ n - 1 $ \u4e2a\u4e0d\u540c\u76d2\u5b50\u91cc\uff0c\u663e\u7136\u8fd9\u5c31\u662f $ 17 - n - s $ \u4e2a\u53ef\u7a7a\u7684\u4e0d\u540c\u7403\u76d2\u95ee\u9898\u3002\u5173\u4e8e\u7403\u76d2\u95ee\u9898\u53ef\u4ee5\u53bb\u770b\u6211\u7684 Blog\uff1a[\u6d45\u6790\u6392\u5217\u7ec4\u5408\u3001\u65af\u7279\u6797\u6570\u3001\u8d1d\u5c14\u6570\u3001\u4e8c\u9879\u5f0f\u5b9a\u7406\u4e0e\u63a8\u8bba\u53ca\u5176\u53cd\u6f14\u3001\u5b50\u96c6\u53cd\u6f14\u3001\u5e7f\u4e49\u5bb9\u65a5](http://blog.tsawke.com?t=Permutation-Combination)\u3002\u518d\u52a0\u4e0a\u679a\u4e3e\u5168\u6392\u5217\u7684 $ n! $\uff0c\u6700\u7ec8\u7684\u590d\u6742\u5ea6\u5927\u7ea6\u662f\uff1a\n$$\nO(n! \\sum_{i = 0}^{17 - n - s} \\dfrac{(i - 1 + n - 1)!}{(n - 2)!(i - 1 + n - 1 - (n - 2))!})\n$$\n\u5316\u7b80\u4e00\u4e0b\uff1a\n$$\nO(n! \\sum_{i = 0}^{17 - n - s} \\dfrac{(i + n - 2)!}{(n - 2)!i!})\n$$\n\u8fd9\u4e00\u5927\u5768\u4e1c\u897f\u6211\u4e0d\u77e5\u9053\u6211\u662f\u5426\u5206\u6790\u9519\u4e86\uff0c\u4e0d\u8fc7\u5927\u6982\u4e5f\u516b\u4e5d\u4e0d\u79bb\u5341\uff0c\u603b\u4e4b\u8fd9\u4e2a\u4e1c\u897f\u6211\u4eec\u968f\u4fbf\u5e26\u5165\u51e0\u4e2a $ n $ \u7b97\u4e00\u4e0b\uff0c\u6216\u8005\u611f\u6027\u7406\u89e3\u4e00\u4e0b\u53d1\u73b0\u663e\u7136\u662f\u8fdc\u5c0f\u4e8e $ 1e8 $ \u7684\uff0c\u6240\u4ee5\u66b4\u529b\u5373\u53ef\u901a\u8fc7\u3002\n\n\u505a\u6cd5\u7684\u8bdd\u5148\u901a\u8fc7\u8c03\u7528 $ n! $ \u6b21 `next_permutation()` \u51fd\u6570\u679a\u4e3e\u5168\u6392\u5217\uff0c\u6b64\u65f6\u8fd8\u4f1a\u591a\u4e00\u4e2a $ O(n) $ \u7684\u5e38\u6570\uff0c\u4e0d\u8fc7\u533a\u522b\u4e0d\u5927\u3002\n\n\u7136\u540e\u6bcf\u6b21\u8dd1\u4e00\u904d\u6df1\u641c\uff0c\u7528 `string` \u7684\u672c\u8d28\u662f `basic_string`\uff0c\u4e14 `basic_string` \u652f\u6301 `+` \u548c `+=` \u7b49\u7684\u7279\u6027\uff0c\u5373\u53ef\u5341\u5206\u4fbf\u6377\u5730\u5b9e\u73b0\u4e00\u822c\u7684\u6df1\u641c\u601d\u8def\uff0c\u6ce8\u610f\u6bcf\u4e24\u4e2a\u4e4b\u95f4\u81f3\u5c11\u63d2\u5165\u4e00\u4e2a\u4e0b\u5212\u7ebf\uff0c\u4e14\u6ce8\u610f\u9700\u8981\u9650\u5236\u6700\u591a\u989d\u5916\u6dfb\u52a0 $ 17 - n - s $ \u4e2a\u4e0b\u5212\u7ebf\uff0c\u5426\u5219\u590d\u6742\u5ea6\u662f\u4e0d\u6b63\u786e\u7684\u3002\n\n## Code\n\n```cpp\n#define _USE_MATH_DEFINES\n#include <bits/stdc++.h>\n\n#define PI M_PI\n#define E M_E\n#define npt nullptr\n#define SON i->to\n#define OPNEW void* operator new(size_t)\n#define ROPNEW void* Edge::operator new(size_t){static Edge* P = ed; return P++;}\n\nusing namespace std;\n\nmt19937 rnd(random_device{}());\nint rndd(int l, int r){return rnd() % (r - l + 1) + l;}\nbool rnddd(int x){return rndd(1, 100) <= x;}\n\ntypedef unsigned int uint;\ntypedef unsigned long long unll;\ntypedef long long ll;\ntypedef long double ld;\n\ntemplate < typename T = int >\ninline T read(void);\n\nint N, M;\nint mx(-1);\nstring S[10];\nunordered_set < string > block;\nstring ans;\n\nvoid dfs(int dep = 1, int lft = mx, string cur = string()){\n    if(dep > N){\n        if(3 <= (int)cur.length() && (int)cur.length() <= 16 && block.find(cur) == block.end())ans = cur;\n        return;\n    }\n    if(dep == 1)return dfs(dep + 1, lft, cur + S[dep]);\n    dfs(dep + 1, lft, cur + \"_\" + S[dep]);\n    for(int i = 1; i <= lft; ++i)\n        cur += \"_\", dfs(dep + 1, lft - i, cur + \"_\" + S[dep]);\n}\n\nint main(){\n    N = read(), M = read();\n    int slen(0);\n    for(int i = 1; i <= N; ++i)cin >> S[i], slen += S[i].length();\n    for(int i = 1; i <= M; ++i){string T; cin >> T; block.insert(T);}\n    mx = 16 - slen - N + 1;\n    if(mx < 0)printf(\"-1\\n\"), exit(0);\n    int tot(1); for(int i = 1; i <= N; ++i)tot *= i;\n    for(int i = 1; i <= tot; ++i)dfs(), next_permutation(S + 1, S + N + 1);\n    if(ans.empty())printf(\"-1\\n\"), exit(0);\n    cout << ans << endl;\n    fprintf(stderr, \"Time: %.6lf\\n\", (double)clock() / CLOCKS_PER_SEC);\n    return 0;\n}\n\ntemplate < typename T >\ninline T read(void){\n    T ret(0);\n    int flag(1);\n    char c = getchar();\n    while(c != '-' && !isdigit(c))c = getchar();\n    if(c == '-')flag = -1, c = getchar();\n    while(isdigit(c)){\n        ret *= 10;\n        ret += int(c - '0');\n        c = getchar();\n    }\n    ret *= flag;\n    return ret;\n}\n```\n\n## UPD\n\nupdate-2023_01_18 \u521d\u7a3f",
        "postTime": 1674026574,
        "uid": 362938,
        "name": "Tsawke",
        "ccfLevel": 6,
        "title": "[ABC268D] Unique Username \u9898\u89e3"
    }
]