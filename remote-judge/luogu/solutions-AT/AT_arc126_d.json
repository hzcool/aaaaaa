[
    {
        "content": "\u72b6\u538b dp + \u8d39\u7528\u63d0\u524d\u8ba1\u7b97\u3002\n\n\u8003\u8651\u5047\u5982\u5df2\u7ecf\u786e\u5b9a\u597d\u4e86\u9009\u51fa\u90a3\u4e9b\u6570\uff08\u79f0\u4f5c\u6807\u8bb0\u70b9\uff09\uff0c\u8ba1\u7b97\u4e00\u4e0b\u4ee3\u4ef7\u3002\n\n\u6bdb\u4f30\u4f30\u8d2a\u5fc3\u5c31\u662f\u5148\u8ba9\u5b83\u4eec\u5c3d\u91cf\u9760\u4e2d\u95f4\u805a\u5728\u4e00\u8d77\uff0c\u7136\u540e\u5185\u90e8\u518d\u7b97\u7b97\u9006\u5e8f\u5bf9\u3002\n\n\u5c1d\u8bd5\u628a\u8fd9\u4e2a\u4e1c\u897f\u5747\u644a\u5230\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\uff0c\u9996\u5148\u662f\u8ba9\u5b83\u4eec\u805a\u5728\u6807\u8bb0\u70b9\u7684\u4e2d\u4f4d\u6570\u9644\u8fd1\uff0c\u90a3\u4e48\u6bcf\u4e00\u4e2a\u975e\u6807\u8bb0\u70b9\u7684\u4ee3\u4ef7\u5c31\u662f\u5de6\u53f3\u4e24\u4fa7\u6807\u8bb0\u70b9\u4e2a\u6570\u7684 $\\min$\uff08\u6709\u8fd9\u4e48\u591a\u6807\u8bb0\u70b9\u8981\u8de8\u8fc7\u5b83\uff09\u3002\n\n\u5bf9\u4e8e\u6807\u8bb0\u70b9\u5185\u90e8\u7684\u4ea4\u6362\uff0c\u90a3\u5c31\u662f\u7b97\u4e0b\u9006\u5e8f\u5bf9\u3002\n\n\u8fd9\u91cc\u8981\u5c06\u4ee3\u4ef7\u5747\u644a\u5230\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u662f\u4e3a\u4e86\u65b9\u4fbf dp \u7684\u8fc7\u7a0b\u4e2d\u6bcf\u52a0\u5165\u4e00\u4e2a\u70b9\u6765\u8ba1\u7b97\u4ee3\u4ef7\uff0c\u6bd4\u8f83\u7c7b\u4f3c\u8d39\u7528\u63d0\u524d\u8ba1\u7b97\u7684\u601d\u60f3\u3002\n\n\u4ece\u524d\u5f80\u540e\u679a\u4e3e $i$\uff0c\u8bbe $f_S$ \u4e3a\u8003\u8651\u6807\u8bb0\u70b9\u96c6\u5408\u662f $S$ \u7684\u4ee3\u4ef7\uff0c\u8f6c\u79fb\u7684\u65f6\u5019\u679a\u4e3e\u5f53\u524d\u8fd9\u4e2a\u662f\u5426\u662f\u6807\u8bb0\u70b9\uff1a\n\n- \u6807\u8bb0\u70b9\uff1a\u4ee3\u4ef7\u4e3a\u4ee5\u5b83\u4e3a\u7ed3\u5c3e\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\uff1b\n- \u975e\u6807\u8bb0\u70b9\uff1a$\\min(\\operatorname{popcount}(S),k-\\operatorname{popcount}(S))$\uff0c\u5de6\u53f3\u4e24\u4fa7\u6807\u8bb0\u70b9\u4e2a\u6570\u7684 $\\min$\uff0e\n\n\n[Code](https://atcoder.jp/contests/arc126/submissions/26044778)",
        "postTime": 1667613706,
        "uid": 223298,
        "name": "do_while_true",
        "ccfLevel": 8,
        "title": "\u300c\u9898\u89e3\u300dARC126D Pure Straight"
    },
    {
        "content": "# \u601d\u8def\n\n\u9996\u5148\u6211\u4eec\u770b\u770b\u5047\u8bbe\u9009\u4e2d $m$ \u4e2a\u6570\u540e\u7684\u7b54\u6848\u3002\n\n\u6211\u4eec\u9996\u5148\u73b0\u5c06 $m$ \u4e2a\u6570\u79fb\u52a8\u5230\u4e00\u8d77\uff0c\u5728\u5c06\u4ed6\u4eec\u91cd\u65b0\u6392\u5e8f\u3002\n\n\u6211\u4eec\u77e5\u9053\uff0c$m$ \u4e2a\u6570\u79fb\u5728\u4e00\u8d77\u65f6\uff0c\u5f53\u4f4d\u4e8e\u4e2d\u95f4\u7684\u90a3\u4e2a\u6570\u4e0d\u52a8\u65f6\u4ea4\u6362\u6b21\u6570\u6700\u5c11\uff0c\u4e8e\u662f\u53ef\u4ee5\u5217\u51fa\u5f0f\u5b50\uff08$c_i$ \u662f\u70b9 $i$ \u7684\u4f4d\u7f6e\uff09\uff1a\n\n$$\n\\sum_{i = 1}^m |c_{mid} + mid - c_i + i|\n$$\n\n\u6211\u4eec\u53ef\u4ee5\u5c06\u4e0a\u9762\u7684\u5f0f\u5b50\u6539\u6210\u5982\u4e0b\u5f62\u5f0f\uff1a\n\n$$\n-\\dfrac{2}{m}\\cdot mid + (m \\bmod 2) \\cdot c_{mid} + \\sum_{i = 1}^m c_i^{-1^{i \\leq mid}}\n$$\n\n\u6b64\u65f6\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u72b6\u538b DP \u6765\u505a\u4e86\u3002\n\n\u6211\u4eec\u9996\u5148\u679a\u4e3e\u6bcf\u4e2a\u6570\uff0c\u5728\u679a\u4e3e\u9009\u4e0a\u8fd9\u4e2a\u6570\u540e\u7684\u60c5\u51b5\uff0c\u5728 DP \u7684\u8fc7\u7a0b\u4e2d\u8ba1\u7b97\u51fa\u4e0b\u9762\u7684\u5f0f\u5b50\u7684\u6c42\u548c\u516c\u5f0f\u91cc\u9762\u7684\u503c\uff0c\u524d\u9762\u7684\u4e3a\u5e38\u6570\uff0c\u5e76\u4e14\u5728\u52a0\u4e0a\u9006\u5e8f\u5bf9\u4e2a\u6570\u5c31\u53ef\u4ee5\u4e86\u3002\n\n# \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n, m, mid, a[205], f[205][1 << 18], INF = 1e9;\nint solve(int state, int i) {\n    int sum = 0, t = 0, t1 = 0;\n    //t\u662f\u76ee\u524d\u9009\u4e86\u591a\u5c11\u4e2a\u6570\uff0ct1\u9009\u4e86\u7684\u6811\u4e2d\u6bd4\u8fd9\u4e2a\u6570\u8981\u5c0f\u7684\u6570\u3002\n    for (int j = 0; j < m; j++) {\n        if (state & (1 << j))\n            t++;\n        if (a[i] - 1 == j)\n            t1 = t;\n    }\n    return i * (t <= mid ? -1 : 1) + i * (m & 1) * (mid == t) + (t - t1);\n    //\u6b64\u65f6\u7684i\u5c31\u662fc\u503c\uff0c\u4e8e\u662f\u6211\u4eec\u628a\u4ed6\u5e26\u8fdb\u53bb\u5f0f\u5b50\u5c31\u53ef\u4ee5\u4e86\u3002\n}\nint main() {\n    scanf(\"%d%d\", &n, &m), mid = (m + 1) / 2;\n    for (int i = 1; i <= n; i++) scanf(\"%d\", &a[i]);\n    memset(f, 36, sizeof(f));\n    for (int i = 0; i <= n; i++) f[i][0] = 0;\n    for (int i = 1; i <= n; i++)\n        for (int j = 0; j < 1 << m; j++)\n            f[i][j] = min(j & (1 << (a[i] - 1)) ? f[i - 1][j ^ (1 << (a[i] - 1))] + solve(j, i) : INF, f[i - 1][j]);\n    printf(\"%d\", f[n][(1 << m) - 1] - m / 2 * mid);\n    return 0;\n}\n```\n",
        "postTime": 1682991831,
        "uid": 363139,
        "name": "konjac_HZX",
        "ccfLevel": 7,
        "title": "Atcoder ARC 126 D - Pure Straight \u9898\u89e3"
    },
    {
        "content": "# Description\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a$\uff0c\u5176\u4e2d $a_i \\in [1,k]$\uff0c\u6bcf\u6b21\u53ef\u4ee5\u4ea4\u6362\u76f8\u90bb\u6570\uff0c\u6c42\u6700\u5c0f\u7684\u64cd\u4f5c\u6b21\u6570\u4f7f\u5f97\u5e8f\u5217\u5b58\u5728\u5b50\u533a\u95f4 $[1, \\cdots ,k]$\u3002\n\n$n \\le 200, k \\le 16$\uff0c\u65f6\u9650 2s\u3002\n\n# Solution\n\n\u6211\u4eec\u8003\u8651\u5047\u5982\u5df2\u7ecf\u94a6\u5b9a\u4e86\u533a\u95f4\u8303\u56f4\u548c\u8981\u9009\u7684\u6570\u7684\u4e0b\u6807\u5e8f\u5217\uff08\u5355\u589e\uff09\u3002\u5219\u7b54\u6848\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff0c\u9996\u5148\u662f\u79fb\u5230\u5bf9\u5e94\u4f4d\u7f6e\u7684\u8ddd\u79bb\uff0c\u5176\u6b21\u662f\u9006\u5e8f\u5bf9\u7684\u8d21\u732e\u3002\n\n\u73b0\u5728\u6211\u4eec\u8bbe $f_{i,S}$ \u8868\u793a\u5df2\u7ecf\u8003\u8651\u5230\u4e86\u7b2c $i$ \u4e2a\u6570\uff0c\u76ee\u524d\u5df2\u7ecf\u94a6\u5b9a\u4e86\u96c6\u5408 $S$ \u4e2d\u7684\u6570\u7684\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\u3002\n\n\u8f6c\u79fb\u7684\u8bdd\u540c\u6837\u5206\u4e24\u90e8\u5206\uff1a\n\n- \u52a0\u5165 $a_i$\uff0c\u5219\u6211\u4eec\u9700\u8981\u52a0\u4e0a\u6bd4 $a_i$ \u5927\u7684\u6570\u7684\u9006\u5e8f\u5bf9\u8d21\u732e\u3002\n\n- \u4e0d\u52a0\u5165 $a_i$\uff0c\u5219\u6211\u4eec\u53ef\u4ee5\u5c06 $S$ \u4e2d\u7684\u6570\u6574\u4f53\u53f3\u79fb\u6216\u672a\u5728 $S$ \u4e2d\u7684\u6570\u6574\u4f53\u5de6\u79fb\uff0c\u53d6 $\\min$ \u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n 2^k)$\u3002\n\n# Code\n\n```cpp\nconst int S=(1<<16)+5,inf=1e9;\nint n,m,f[S];\nint main() {\n\tmes(f,0x3f);\n\tscanf(\"%d%d\",&n,&m);\n\tf[0]=0;\n\tfor (int i=0;i<n;i++) {\n\t\tint x;\n\t\tscanf(\"%d\",&x);\n\t\tx--;\n\t\tfor (int j=(1<<m)-1;j>=0;j--) {\n\t\t\tif (f[j]>=inf) continue;\n\t\t\tif (!(j>>x&1)) cmn(f[j|(1<<x)],f[j]+btc(j&(~((1<<x)-1))));\n\t\t\tf[j]+=min(btc(j),btc(j^((1<<m)-1)));\n\t\t}\n\t}\n\tprintf(\"%d\",f[(1<<m)-1]);\n\treturn 0;\n}\n```",
        "postTime": 1667203336,
        "uid": 283913,
        "name": "ZillionX",
        "ccfLevel": 6,
        "title": "\u3010\u72b6\u538b DP\uff0c\u7ed3\u8bba\uff0c\u89c2\u5bdf\u3011[ARC126D] Pure Straight"
    },
    {
        "content": "\u53c8\u6765\u7ed9 [do_while_true](https://www.luogu.com.cn/user/223298) \u5927\u4f6c\u4ea4\u4f5c\u4e1a\u4e86\uff0c\u6240\u4ee5\u672c\u7bc7\u9898\u89e3\u4ec5\u4ec5\u662f\u5bf9 [\u8be5\u7bc7\u9898\u89e3](https://www.luogu.com.cn/blog/dowhiletrue/solution-at-arc126-d) \u8fdb\u884c\u8865\u5145\u8bf4\u660e\u7684\u3002\n\n\u672c\u7bc7\u9898\u89e3\u9002\u7528\u4e8e\u50cf\u6211\u8fd9\u6837\u7684\u5c0f\u840c\u65b0\uff0c\u90a3\u7bc7\u9898\u89e3\u9002\u5408\u5927\u4f6c\u98df\u7528\u3002\n\nPart 1\uff1a\n\n\u4e3a\u4ec0\u4e48\u6211\u4eec\u8981\u7528\u72b6\u538b dp\uff1f\n\n~~\u56e0\u4e3a\u9898\u89e3\u91cc\u9762\u5199\u4e86\u8981\u7528\u3002~~\n\n\u56e0\u4e3a\u6211\u4eec\u8981\u8fdb\u884c\u5bf9\u7b54\u6848\u96c6\u5408\u5185\u7684\u60c5\u51b5\u53d6\u6700\u5c0f\u503c\u7684\u64cd\u4f5c\uff0c\u53ef\u4ee5\u4f7f\u7528 dp\u3002\u5e76\u4e14 $K \\le 16$ \u4f46 $N \\le 200$\u3002\u6240\u4ee5\u80af\u5b9a\u662f\u4f7f\u7528\u72b6\u538b dp \u6216\u8005\u500d\u589e\u4f18\u5316 dp\u3002\u53c8\u53d1\u73b0\u662f\u5bf9\u4e00\u4e2a\u96c6\u5408\u91cc\u9762\u7684\u6570\u8fdb\u884c\u7684\u64cd\u4f5c\uff0c\u4e14 $2^K$ \u7684\u6570\u7ec4\u80fd\u5f00\u4e0b\uff0c\u6240\u4ee5\u5e94\u8be5\u662f\u72b6\u538b dp\u3002\n\nPart 2\uff1a\n\n\u72b6\u6001\u7684\u8bbe\u8ba1\u548c\u8f6c\u79fb\u3002\n\n~~\u8ddf\u7740\u9898\u89e3\u8bbe\u8ba1\u5c31\u884c\u3002~~\n\n\u6211\u4eec\u8bbe $f_S$ \u8868\u793a\u5df2\u7ecf\u5c06 $S$ \u8fd9\u4e2a\u96c6\u5408\u91cc\u7684\u6570\u5b57\u5c06\u9898\u76ee\u8981\u6c42\u7684\u987a\u5e8f\u6392\u597d\u7684\u4ee3\u4ef7\u3002\u6211\u4eec\u63d2\u5165\u4e00\u4e2a\u65b0\u7684\u6570\uff0c\u5979\u65e2\u53ef\u80fd\u53bb\u524d\u9762\u4f5c\u4e3a\u524d\u9762\u7684\u6392\u5217\u4e2d\u7684\u4e00\u4e2a\u6570\uff0c\u4e5f\u6709\u53ef\u80fd\u53bb\u540e\u9762\u4f5c\u4e3a\u540e\u9762\u7684\u6392\u5217\u4e2d\u7684\u8fd9\u4e2a\u6570\u3002\u5bf9\u4e8e\u96c6\u5408\u6574\u4f53\uff0c\u65e2\u53ef\u4ee5\u5c06\u5728\u8fd9\u4e2a\u96c6\u5408\u91cc\u7684\u6570\u6c47\u603b\u8d77\u6765\uff0c\u4e5f\u53ef\u4ee5\u5c06\u4e0d\u5728\u8fd9\u4e2a\u96c6\u5408\u7684\u6570\u4ea4\u6362\u51fa\u53bb\u3002\n\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u8fd9\u6837\u7684\u5f0f\u5b50\uff1a\n\n$f(S \\operatorname{or} 2^x) = \\min\\{f(S \\operatorname{or} 2^x),f(S) + \\operatorname{popcount}(s \\operatorname{and} (\\operatorname{not}(2^x - 1)))\\}$\n\n$f(S) = f(S) + \\min\\{\\operatorname{popcount}(S),k - \\operatorname{popcount}(S)\\}$\n\nPart 3\uff1a\n\n\u4e0a\u4ee3\u7801\uff01\uff01\uff01\uff01\n\n```cpp\n#include <bits/stdc++.h>\n\nnamespace hello_world_djh {\n    template <typename T>\n    T read() {\n        T x = 0, f = 1;\n        char ch = getchar();\n        for (; ch < '0' || ch > '9'; ch = getchar())\n            if (ch == '-')\n                f = ~f + 1;\n        for (; ch >= '0' && ch <= '9'; ch = getchar())\n            x = (x << 3) + (x << 1) + (ch ^ '0');\n        return x * f;\n    }\n\n    const int N = 210, K = 16, INF = 0x3f3f3f3f;\n    int n = read<int>(), k = read<int>();\n    int f[(1 << K) + 10];\n    #define sum __builtin_popcount\n\n    int main() {\n        for (int i = 1; i <= (1 << k) - 1; i++)\n            f[i] = INF;\n        for (int i = 1; i <= n; i++) {\n            int x = read<int>() - 1;\n            for (int j = (1 << k) - 1; ~j; j--)\n                if (f[j] != INF) {\n                    if (!(j & (1 << x)))\n                        f[j | (1 << x)] = std::min(f[j | (1 << x)], f[j] + sum(j & (~((1 << x) - 1))));\n                    f[j] += std::min(sum(j), k - sum(j));\n                }\n        }\n        printf(\"%d\\n\", f[(1 << k) - 1]);\n        return 0;\n    }\n};\n\nint main() {\n    hello_world_djh::main();\n    return 0;\n}\n```",
        "postTime": 1669016711,
        "uid": 450700,
        "name": "hello_world_djh",
        "ccfLevel": 0,
        "title": "AT_arc126_d [ARC126D] Pure Straight \u9898\u89e3"
    }
]