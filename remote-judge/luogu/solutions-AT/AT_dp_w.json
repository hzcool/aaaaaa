[
    {
        "content": "\u636e\u8bf4\u662f\u5957\u8def\u9898\u3002\u5957\u8def\u5728\u4e8e\u5728\u53f3\u7aef\u70b9\u5904\u8ba1\u7b97\u8d21\u732e\uff0c\u8fd9\u6837\u4e0d\u91cd\u4e0d\u6f0f\u3002\n\n\u8bbe $dp_{i,j}$ \u4e3a\u524d $i$ \u4e2a\u4f4d\u7f6e\u4e2d\uff0c\u4e0a\u4e00\u4e2a $1$ \u653e\u7f6e\u5728 $j$ \u5904\u7684\u6700\u5927\u7b54\u6848\u3002\n\u9996\u5148\u6709\uff1a\n$$dp_{i,i}=\\max_{j=1}^{i-1}\\{dp_{i-1,j}\\}$$\n\u540c\u65f6\u5b58\u5728 $i$ \u662f\u7b2c\u4e00\u4e2a\u4e3a $1$ \u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5\u8981\u548c $0$ \u53d6 $\\max$\uff0c\u6392\u9664\u8d1f\u8d21\u732e\u7684\u60c5\u51b5\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u666e\u901a\u7684\u8f6c\u79fb\uff0c\u679a\u4e3e\u5230\u53f3\u7aef\u70b9 $i$ \u65f6\uff0c\u5bf9\u4e8e\u6240\u6709\u7684 $k,r_k=i$\uff0c\u82e5 $l_k\\ge j$\uff0c\u5c31\u4f1a\u4ea7\u751f\u8d21\u732e\u3002\u4e8e\u662f\u8f6c\u79fb\u65b9\u7a0b\uff1a\n$$dp_{i,j}=dp_{i-1,j}+\\sum_{l_k\\ge j,r_k=i} a_k$$\n\u5f53\u7136\u5bf9\u4e8e $dp_{i,i}$\uff0c\u8f6c\u79fb\u5e94\u5f53\u662f\u4ece\u5176\u672c\u8eab\u5f97\u6765\u7684\u3002\n\n\u590d\u6742\u5ea6\u662f $O(n^2)$ \u7684\u3002\n\n\u53d1\u73b0\u540e\u9762\u7684\u90e8\u5206\u6bcf\u6761\u89c4\u5219\u53ea\u88ab\u8ba1\u7b97\u4e00\u6b21\uff0c\u7b97\u4e0a\u533a\u95f4\u52a0\u5e94\u5f53\u548c\u679a\u4e3e\u72b6\u6001\u540c\u7ea7\uff0c\u8003\u8651\u5982\u4f55\u628a\u679a\u4e3e\u72b6\u6001\u4ee5\u53ca\u533a\u95f4\u4fee\u6539\u4f18\u5316\u3002\n\n\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\uff0c\u8fd9\u6837\u4fbf\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $k$\uff0c\u6279\u91cf\u4fee\u6539\u6240\u6709\u4ea7\u751f\u8d21\u732e\u7684 $dp_{i,j}$\u3002\n\n```cpp\nint n,m;\nstruct node{\n    int l,r;\n    ll w;\n    node()=default;\n    node(int l_,int r_,ll w_):l(l_),r(r_),w(w_){}\n}a[maxn];\nvector<node> gr[maxn];\nstruct SegmentTree{\n    #define mid ((l+r)>>1)\n    #define lson rt<<1,l,mid\n    #define rson rt<<1|1,mid+1,r\n    ll mx[maxn<<2],tag[maxn<<2];\n    void build(int rt,int l,int r){\n        mx[rt]=0,tag[rt]=0;\n        if(l==r) return;\n        build(lson),build(rson);\n    } \n    void push_down(int rt){\n        if(tag[rt]){\n            tag[rt<<1]+=tag[rt],tag[rt<<1|1]+=tag[rt];\n            mx[rt<<1]+=tag[rt],mx[rt<<1|1]+=tag[rt];\n            tag[rt]=0;\n        }\n    }\n    void update(int rt,int l,int r,int pl,int pr,ll k){\n        if(pl<=l&&r<=pr){\n            mx[rt]+=k,tag[rt]+=k;\n            return;\n        }\n        push_down(rt);\n        if(pl<=mid) update(lson,pl,pr,k);\n        if(pr>mid) update(rson,pl,pr,k);\n        mx[rt]=max(mx[rt<<1],mx[rt<<1|1]);\n    }\n    #undef mid\n    #undef lson\n    #undef rson\n}S;\nint main(){\n    n=read(),m=read();\n    for(int i=1;i<=m;++i){\n        int l=read(),r=read(),w=read();\n        a[i]=node(l,r,w);\n        gr[r].push_back(a[i]);\n    }\n    S.build(1,1,n);\n    for(int r=1;r<=n;++r){\n        S.update(1,1,n,r,r,max(S.mx[1],0ll));\n        for(int j=0;j<gr[r].size();++j){\n            int l=gr[r][j].l;\n            ll w=gr[r][j].w;\n            S.update(1,1,n,l,r,w);\n        }\n    }\n    printf(\"%lld\\n\",max(S.mx[1],0ll));\n    return 0;\n}\n```",
        "postTime": 1660448504,
        "uid": 321177,
        "name": "SoyTony",
        "ccfLevel": 6,
        "title": "AT\u9898\u89e3\u2014\u2014AT4544 Intervals"
    },
    {
        "content": "## AT4544\n\n### \u9898\u610f:\n\n\u7ed9\u5b9a $m$ \u4e2a\u5f62\u5982 $(l,r,a)$ \u7684\u6761\u4ef6\uff0c\u4f60\u9700\u8981\u786e\u5b9a\u4e00\u4e2a $01$ \u4e32 $s$\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u6761\u4ef6\uff0c\u5982\u679c $s[l,r]$ \u4e2d\u6709\u4e00\u4e2a  $1$ \uff0c\u90a3\u4e48\u5206\u6570\u52a0 $a$ \uff0c\u6c42\u6700\u5927\u5206\u6570\u3002\n\n$n,m\\leq 2 * 10^5,|a|\\leq 10^9$\n\n### \u601d\u8def\uff1a\n\n\u8003\u8651\u5230\u6761\u4ef6\u662f\u5e8f\u5217\uff0c\u4e0d\u6613\u7edf\u8ba1\u8d21\u732e\uff0c\u6211\u4eec\u5148\u5bf9\u6761\u4ef6\u6309 $r$ \u6392\u5e8f\uff0c\u7ea6\u5b9a\u5728\u8003\u8651\u5230 $r$ \u65f6\u7edf\u8ba1\u8fd9\u4e2a\u4e1c\u897f\u7684\u8d21\u732e\u3002\n\n**\u8fd9\u662f\u4e2a\u5e38\u89c1\u7684\u5957\u8def**\n\n\u4e8e\u662f $\\text{DP}$ \u7684\u72b6\u6001\u548c\u8f6c\u79fb\u90fd\u4e0d\u96be\u60f3\u5230\uff1a\n\n\u56e0\u4e3a\u6bcf\u6b21\u7edf\u8ba1\u8d21\u732e\uff0c\u5173\u5fc3\u7684\u4ec5\u4ec5\u662f**\u6700\u8fd1\u7684 $0$ **\u7684\u4f4d\u7f6e\u3002\n\n$dp[i][j]$ \u8868\u793a\u8003\u8651\u5230\u7b2c $i$ \u4e2a\u4f4d\u7f6e\uff0c\u4e0a\u4e00\u4e2a $0$ \u5728 $j$ \u5904\u7684\u6700\u5927\u5206\u6570\u3002\n\n$dp[i][i]=\\min\\limits_{j<i}(dp[i-1][j])$\n\n$dp[i][j]=dp[i][j]+\\sum\\limits_{r[x]=i,l[x]\\leq j}^{}a[x]$\n\n\u5148\u505a\u4e0a\u9762\u7684\u90a3\u4e2a\u8f6c\u79fb\u3002\n\n\u663e\u7136\u8fd9\u6837\u662f $O(n^2)$ \u7684\uff0c\u8ba4\u771f\u5206\u6790\u4e00\u4e0b\u53d1\u73b0\u4e0b\u9762\u7684\u5f0f\u5b50\u662f $O(n^2)$ \u7684\u800c\u4e0d\u662f $O(n^3)$ \u7684\u3002\n\n\u8fc7\u4e0d\u4e86\u3002\n\n\u72b6\u6001\u8fd8\u53ef\u4ee5\u6eda\u52a8\u4e00\u4e0b\uff0c\u7a7a\u95f4 $O(n)$ \uff0c\u7136\u540e\u53d1\u73b0\u597d\u50cf\u5df2\u7ecf\u6ca1\u6709\u529e\u6cd5\u7ee7\u7eed\u4f18\u5316\u72b6\u6001\u4e86\uff0c\u4e8e\u662f\u8003\u8651\u4f18\u5316\u8f6c\u79fb\u3002\n\n\u5148\u8003\u8651\u7b2c\u4e8c\u4e2a\u8f6c\u79fb\uff0c\u53d1\u73b0\u5b83\u5c31\u662f\u4e00\u4e2a\u533a\u95f4\u52a0\uff0c\u7b2c\u4e00\u4e2a\u8f6c\u79fb\u5c31\u662f\u533a\u95f4\u67e5\u6700\u5c0f\u503c\u548c\u5355\u70b9\u4fee\u6539\uff0c\u679c\u65ad\u7ebf\u6bb5\u6811\u3002\u8f6c\u79fb $O(log_2n)$\u3002\n\n\u6536\u5de5\uff01\n\n### \u5177\u4f53\u5b9e\u73b0\u548c\u53c2\u8003\u4ee3\u7801\uff1a\n\n\u600e\u4e48\u7ebf\u6bb5\u6811\u5462\uff1f\n\n\u5bf9 $\\text{DP}$ \u503c\u533a\u95f4\u52a0\uff0c\u628a $dp$ \u6570\u7ec4\u6254\u5230\u7ebf\u6bb5\u6811\u4e0a\u554a\uff0c\u7136\u540e\u76f4\u63a5\u50cf\u6a21\u677f\u4e00\u6837\u7ef4\u62a4\u5c31\u884c\u4e86\uff0c\u518d\u5177\u4f53\u7684\u770b\u4ee3\u7801\u5427\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define y1 y3647\n#define earse erase\n#define LNF 1000000000000000000ll\n#define int long long\n//\u4e0d\u5f00 long long \u89c1\u7956\u5b97\nusing namespace std;\ninline void read(int &x)\n{\n\tx=0;int f=1;\n\tchar ch=getchar();\n\twhile(ch!=45&&(ch>'9'||ch<'0'))ch=getchar();\n\tif(ch==45){f=-1,ch=getchar();}\n\twhile(ch<='9'&&ch>='0'){x=x*10+ch-48;ch=getchar();}\n\tx*=f;\n}\nconst int N=2e5+10;\nint i,j,k,n,s,t,m;\nstruct Segment_Tree{\n\tint a[N<<2],lazy[N<<2];\n\tSegment_Tree()\n\t{\n\t\tfor(int i=0;i<N<<2;i++)\n\t\ta[i]=-LNF;\n\t}\n\tvoid push_up(int rt)\n\t{\n\t\ta[rt]=max(a[rt<<1],a[rt<<1|1]);\n\t}\n\tvoid push_down(int rt)\n\t{\n\t\tif(lazy[rt]==0)return;\n\t\ta[rt<<1]+=lazy[rt],a[rt<<1|1]+=lazy[rt];\n\t\tlazy[rt<<1]+=lazy[rt],lazy[rt<<1|1]+=lazy[rt];\n\t\tlazy[rt]=0;\n\t}\n\tvoid updata(int l,int r,int rt,int x,int y,int c,int op)\n\t{\n\t\tif(x<=l&&y>=r)\n\t\t{\n\t\t\tif(op==1)\n\t\t\ta[rt]+=c,lazy[rt]+=c;\n\t\t\telse\n\t\t\ta[rt]=c;\n\t\t\treturn;\n\t\t}\n\t\tpush_down(rt);\n\t\tint mid=(l+r)/2;\n\t\tif(x<=mid)\n\t\tupdata(l,mid,rt<<1,x,y,c,op);\n\t\tif(y>mid)\n\t\tupdata(mid+1,r,rt<<1|1,x,y,c,op);\n\t\tpush_up(rt);\n\t}\n}T;\nstruct line{\n\tint l,r,val;\n\tfriend bool operator <(line aa,line bb)\n\t{\n\t\treturn aa.r<bb.r;\n\t}\n}a[N];\nsigned main()\n{\n\t//freopen(\".in\",\"r\",stdin);\n\t//freopen(\".out\",\"w\",stdout);\n\t//freopen(\".ans\",\"w\",sdtout);\n\tread(n),read(m);\n\tfor(i=1;i<=m;i++)\n\tread(a[i].l),read(a[i].r),read(a[i].val);\n\n\tsort(a+1,a+m+1);\n\tint now=1;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tint val=max(T.a[1],0ll);\n\t\tT.updata(1,n,1,i,i,val,0);\n\t\twhile(a[now].r==i)\n\t\tT.updata(1,n,1,a[now].l,i,a[now].val,1),now++;\n\t}\n\tint ans=0;\n\tans=max(ans,T.a[1]);\n\tcout<<ans;\n\treturn 0;\n}\n```\n\n### \u603b\u7ed3\uff1a\n\n\u6709\u4e00\u8bf4\u4e00\uff0c\u8fd9\u79cd\u76f4\u63a5\u628a $\\text{DP}$ \u503c\u6254\u5728\u6570\u636e\u7ed3\u6784\u4e0a\u7684\u9898\u6bd4\u8f83\u5c11\u89c1\uff0c\u4e0d\u8fc7\u89c1\u8fc7\u4e86\u5c31\u975e\u5e38 $\\text{Trival} $ \u4e86\uff0c\u8fd9\u9053\u9898\u7684\u96be\u70b9\u8fd8\u662f\u5728\u4e8e\u60f3\u5230 $\\text{DP}$ \u7684\u72b6\u6001\u5427\u3002\n\n\u5982\u679c\u6709\u7591\u95ee\u79c1\u4fe1\u5427\u3002\u3002\u3002",
        "postTime": 1624541748,
        "uid": 177535,
        "name": "CDFLS_mao_zx",
        "ccfLevel": 7,
        "title": "\u3010\u9898\u89e3\u3011AT4544"
    },
    {
        "content": "\u770b\u5230\u9898\u89e3\u91cc\u591a\u591a\u5c11\u5c11\u90fd\u6709\u9519\u8bef\uff0c\u6211\u6765\u8865\u4e00\u7bc7\uff0c\u987a\u4fbf\u7eaa\u5ff5 700AC\u3002\n\n## \u9898\u610f\u7b80\u8ff0\n\u7ed9\u5b9a $m$ \u4e2a\u5f62\u5982 $l_i,r_i,v_i$ \u7684\u547d\u4ee4\uff0c\u82e5\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684 01 \u4e32\u4e2d\uff0c\u7b2c $l_i\\sim r_i$ \u4e2a\u4f4d\u7f6e\u81f3\u5c11\u6709\u4e00\u4e2a $1$\uff0c\u5219\u5206\u6570\u53ef\u4ee5\u589e\u52a0 $v_i$\u3002\u95ee\u6240\u6709 01 \u4e32\u4e2d\u7684\u6700\u5927\u5206\u6570\u3002\n\n$1\\leq n,m\\leq 2\\times 10^5,1\\le a_i\\leq 10^9$\u3002\n\n## \u505a\u6cd5\n\u5bf9\u4e8e\u8fd9\u79cd\u533a\u95f4\u7684\u547d\u4ee4\uff0c\u4e00\u79cd\u5e38\u89c1\u7684\u505a\u6cd5\u662f\u5316\u533a\u95f4\u4e3a\u70b9\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5c31\u662f\u6309\u7167\u53f3\u7aef\u70b9\u6392\u5e8f\uff0c\u5f53\u8bbf\u95ee\u5230\u67d0\u4e2a\u533a\u95f4\u7684\u53f3\u8fb9\u754c\u65f6\u624d\u8ba1\u7b97\u5176\u8d21\u732e\u3002\n\n\u663e\u7136\uff0c\u5206\u6570\u7684\u8ba1\u7b97\u53ea\u8ddf $1$ \u7684\u4f4d\u7f6e\u6709\u5173\u7cfb\uff0c\u6240\u4ee5\u72b6\u6001\u80af\u5b9a\u662f $f_{i,j}$ \u8868\u793a\u524d $i$ \u4e2a\u4f4d\u7f6e\u6700\u540e\u4e00\u4e2a $1$ \u5728 $j$ \u4f4d\u7f6e\u7684\u6700\u5927\u5206\u6570\u3002\n\n\u8f6c\u79fb\u65f6\uff0c\u4e00\u5f00\u59cb\u6211\u60f3\u7740\u5148\u679a\u4e3e\u5012\u6570\u7b2c\u4e8c\u4e2a\u51fa\u73b0 $1$ \u7684\u4f4d\u7f6e $k$\uff0c$f_{i,j}=f_{j-1,k}+\\sum_{k<l_x\\leq i,r_x=j}v_x$\u3002\u4f46\u8fd9\u6837\u4e0d\u4ec5\u6b63\u786e\u6027\u4e0d\u4fdd\u8bc1\uff0c\u5373\u4f7f\u52a0\u4e0a\u4e3b\u5e2d\u6811\u4f18\u5316\uff0c\u5feb\u901f\u7b97\u51fa\u540e\u9762\u7684 $\\sum$\uff0c\u65f6\u95f4\u4e5f\u53bb\u5230 $O(n^3\\log m)$\uff0c\u80af\u5b9a\u8fc7\u4e0d\u4e86\u3002\n\n\u8003\u8651\u6362\u4e00\u79cd\u8f6c\u79fb\u3002\u521a\u521a\u679a\u4e3e\u5012\u6570\u7b2c\u4e8c\u4e2a $1$ \u51fa\u73b0\u7684\u4f4d\u7f6e\u662f\u4e0d\u5fc5\u8981\u7684\u3002\u56e0\u4e3a\u6211\u4eec\u7684 $j\\leq i$\uff0c\u6240\u4ee5\u524d $i-1$ \u4e2a\u4f4d\u7f6e\u7684\u6700\u540e\u4e00\u4e2a $1$ \u80af\u5b9a\u4e5f\u662f $j$\uff08$j=i$ \u65f6\u518d\u53e6\u8bf4\uff09\u3002\n\n\u800c $f_{i,j}$ \u6bd4 $f_{i-1,j}$ \u591a\u7684\u5c31\u662f\u53f3\u7aef\u70b9\u5728 $i$\uff0c\u5de6\u7aef\u70b9\u5305\u542b $j$ \u4f4d\u7f6e\u7684\u6240\u6709\u547d\u4ee4\u7684\u5206\u6570\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5f97\u5230 $f_{i,j}=f_{i-1,j}+\\sum_{l_k\\leq j,r_k=i}v_k,j<i$\u3002\n\n\u5f53 $j=i$ \u65f6\uff0c\u524d $i-1$ \u4e2a\u4f4d\u7f6e\u7684\u6700\u540e\u4e00\u4e2a $1$ \u53ef\u4ee5\u662f\u4efb\u610f\u4f4d\u7f6e\uff0c\u6240\u4ee5\u5728 $1\\sim i-1$ \u4e2d\u53d6\u6700\u5927\u503c\uff0c\u5373 $f_{i,i}=\\max_{j=1}^{i-1}f_{i-1,j}$\u3002\n\n\u5f53\u7136\uff0c\u4e3a\u4e86\u9632\u6b62\u5206\u6570\u5168\u8d1f\uff0c\u6211\u4eec\u8fd8\u8981\u5bf9 $0$ \u53d6\u4e2a $\\max$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^3)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n^2)$\uff0c\u80af\u5b9a\u8fc7\u4e0d\u4e86\u3002\n\n\u7a7a\u95f4\u4f18\u5316\u6bd4\u8f83\u723d\uff0c\u8f6c\u79fb\u53ea\u4e0e\u4e0a\u4e00\u7ef4\u6709\u5173\uff0c\u76f4\u63a5\u7701\u53bb $i$ \u7ef4\u5373\u53ef\u3002\n\n\u65f6\u95f4\u5c31\u6bd4\u8f83\u9ebb\u70e6\u4e86\u3002\u56e0\u4e3a\u8fd9\u4e2a\u8f6c\u79fb\u5f88\u96be\u4f18\u5316\u5176\u4e2d\u7684 $\\sum$ \u90e8\u5206\u3002\n\n\u6240\u4ee5\u6362\u79cd\u89d2\u5ea6\u601d\u8003\u3002\u6ce8\u610f\u5230\u65b9\u7a0b\u4e2d\u7684 $l_k\\leq j$\uff0c\u8bc1\u660e\u6709\u5f88\u591a $f$ \u503c\u7684\u66f4\u65b0\u90fd\u7528\u5230\u4e86\u540c\u4e00\u4e2a\u547d\u4ee4\u3002\u6211\u4eec\u80fd\u4e0d\u80fd\u679a\u4e3e\u7ed3\u5c3e\uff08\u5373 $i$\uff09\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u547d\u4ee4\uff0c\u4e00\u6b21\u591a\u4e2a $f$ \u503c\u6765\u51cf\u5c11\u590d\u6742\u5ea6\u5462\uff1f\n\n\u7b54\u6848\u662f\u80af\u5b9a\u7684\u3002\u4e00\u4e2a\u547d\u4ee4\u5f71\u54cd\u7684\u7684\u662f\u4e00\u4e2a\u8fde\u7eed\u7684\u533a\u95f4\u3002\u6211\u4eec\u628a $f$ \u6570\u7ec4\u6254\u5230\u7ebf\u6bb5\u6811\u4e0a\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u7684\u533a\u95f4\u66f4\u65b0\u6765\u5feb\u901f\u5904\u7406\u4e86\u3002\n\n\u7ebf\u6bb5\u6811\u7684\u6bcf\u4e2a\u5355\u70b9\u5c31\u8868\u793a $f$ \u6570\u7ec4\u7684\u503c\uff0c\u4e00\u6bb5\u533a\u95f4\u5c31\u8868\u793a $f$ \u6570\u7ec4\u4e00\u6bb5\u533a\u95f4\u7684\u6700\u5927\u503c\u3002\n\n\u5bf9\u4e8e\u7b26\u5408 $r_j=i$ \u7684\u6240\u6709\u547d\u4ee4\uff0c\u6bcf\u6b21\u5c06 $[l_j,r_j]$ \u8fd9\u4e2a\u533a\u95f4 $+v_j$\uff0c\u76f8\u5f53\u4e8e\u5c06\u6240\u6709 $f_k(l_j\\leq k)$ \u5168\u90e8\u52a0\u4e0a\u5f53\u524d\u547d\u4ee4\u7684\u5206\u6570\u3002\n\n\u67e5\u8be2\u65f6\u76f4\u63a5\u8f93\u51fa $1\\sim n$ \u7684\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\u6ce8\u610f\uff0c$f_{i,i}$ \u7684\u66f4\u65b0\u662f\u5728 $1\\sim i-1$ \u4e2d\u53d6\u6700\u5927\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u989d\u5916\u505a\u4e00\u6b21\u5355\u70b9\u66f4\u65b0\uff0c\u6bcf\u4e00\u6b21\u5c06 $i$ \u8fd9\u4e2a\u4f4d\u7f6e\u52a0\u4e0a $\\max_{j=1}^{i-1}\\{f_j\\}$\u3002\u800c\u56e0\u4e3a $i$ \u540e\u9762\u7684\u503c\u8fd8\u6ca1\u66f4\u65b0\uff0c\u6240\u4ee5\u76f4\u63a5\u8c03\u7528 $val_1$ \u5c31\u662f $1\\sim i-1$ \u6700\u5927\u503c\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(4n)$\uff0c\u53ef\u4ee5 AC\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\n\nconst int N = 2e5 + 10;\nint n, m;\nstruct order{\n\tint l, r;\n\tll v;\n\tbool operator < (const order &p) const {\n\t\treturn r < p.r;\n\t}\n} a[N];\nll val[N << 2], tag[N << 2];\n\n#define ls(o) (o << 1)\n#define rs(o) (o << 1 | 1)\n\nvoid pushdown(int o){\n\tval[ls(o)] += tag[o];\n\tval[rs(o)] += tag[o];\n\ttag[ls(o)] += tag[o];\n\ttag[rs(o)] += tag[o];\n\ttag[o] = 0;\n}\n\nvoid update(int o, int l, int r, int s, int t, ll x){\n\tif(l >= s && r <= t){\n\t\tval[o] += x;\n\t\ttag[o] += x;\n\t\treturn ;\n\t}\n\tint mid = (l + r) >> 1;\n\tpushdown(o);\n\tif(s <= mid)\n\t\tupdate(ls(o), l, mid, s, t, x);\n\tif(t > mid)\n\t\tupdate(rs(o), mid + 1, r, s, t, x);\n\tval[o] = max(val[ls(o)], val[rs(o)]);\n}//\u4e00\u8bfe\u53ea\u6709\u66f4\u65b0\u7684\u7ebf\u6bb5\u6811\n\nint main(){\n\tscanf(\"%d%d\", &n, &m);\n\tfor(int i=1;i<=m;i++)\n\t\tscanf(\"%d%d%lld\", &a[i].l, &a[i].r, &a[i].v);\n\tsort(a + 1, a + 1 + m);//\u6392\u5e8f\uff0c\u6ce8\u610f\u4e0d\u662f n \u6761\u547d\u4ee4\n\tfor(int i=1,j=1;i<=n;i++){\n\t\tupdate(1, 1, n, i, i, max(0ll, val[1]));//\u66f4\u65b0 i \u4f4d\u7f6e\n\t\twhile(a[j].r == i && j <= m)\n            update(1, 1, n, a[j].l, a[j].r, a[j].v), j++;//\u66f4\u65b0\u7ebf\u6bb5\n        //\u8fd0\u7528\u53cc\u6307\u9488\u601d\u60f3\uff0c\u5747\u644a O(1)\n\t}\n\tprintf(\"%lld\\n\", max(0ll, val[1]));//\u4e0e 0 \u53d6 max\n\treturn 0;\n}\n```\n",
        "postTime": 1666598259,
        "uid": 363036,
        "name": "chlchl",
        "ccfLevel": 5,
        "title": "AT_dp_w Intervals \u9898\u89e3"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f\uff1a\u4f60\u8981\u6784\u9020\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684 `01` \u4e32\uff0c\u5b83\u7684\u4ef7\u503c\u7531 $m$ \u6761\u89c4\u5219\u7ec4\u6210\uff0c\u6bcf\u6761\u89c4\u5219\u5982\u4e0b\uff1a\n+ \u82e5\u5728\u533a\u95f4 $[l_i,r_i]$ \u4e2d\u6709 `1`\uff0c\u5219\u4f1a\u83b7\u5f97 $a_i$ \u7684\u4ef7\u503c\uff08\u6ce8\u610f\uff1a$a_i$ \u53ef\u80fd\u4e3a\u8d1f\u6570\uff09\u3002\n\n\u6c42\u53ef\u80fd\u7684\u6700\u5927\u4ef7\u503c\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a$n\\leq 10^5$\u3002\n\n\u6309 $r_i$ \u6392\u5e8f\uff0c\u5bf9\u4e8e\u6bcf\u4e2a $r_i$ \u5206\u522b\u8ba1\u7b97\u5230 $l_i$ \u7684\u8d21\u732e\u3002\n\n\u8fd9\u9053\u9898\u7684\u601d\u8def\u662f **\u5148\u8bbe\u8ba1\u51fa $O(N^2)$ \u7684\u72b6\u6001\u518d\u4f18\u5316**\uff0c\u4f18\u5316\u5c31\u6bd4\u8f83\u5957\u8def\u4e86\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u53ef\u4ee5\u8bbe $f(i,j)$ \u8868\u793a\u5230\u7b2c $i$ \u4e2a\u5b57\u7b26\u5e76\u4e14\u4e0a\u4e00\u4e2a\u9009\u7684\u5b57\u7b26\u662f $j$\uff08$j=i$ \u8868\u793a\u9009\u4e86\u7b2c $i$ \u4e2a\u5b57\u7b26\uff09\u7684\u6700\u5927\u4ef7\u503c\u3002\n\n\u8f6c\u79fb\u5982\u4e0b\uff1a\n\n$$\n\\begin{cases}\nf(i,i)=\\max_{j<i}f(i-1,j)\\\\\nf(i,j)=f(i-1,j)+\\sum_{r_k=i,l_k\\leq j}a_k\n\\end{cases}\n$$\n\n\u8fd9\u4e2a\u4e1c\u897f\u7528\u7ebf\u6bb5\u6811\u641e\u4e00\u4e0b\u5c31\u884c\u4e86\u3002\n\n**[\u4ee3\u7801](https://atcoder.jp/contests/dp/submissions/33892793)**",
        "postTime": 1661840068,
        "uid": 229669,
        "name": "Jerry__Jiang",
        "ccfLevel": 7,
        "title": "AT4544 Intervals"
    },
    {
        "content": "\u4e00\u4e2a\u975e\u5e38\u5957\u8def\u7684\u505a\u6cd5\u662f\u5728\u53f3\u7aef\u70b9\u5904\u8ba1\u7b97\u8d21\u732e\uff0c\u4ee5\u505a\u5230\u4e0d\u91cd\u4e0d\u6f0f\u3002\n\n\u8bbe $f_{i, j}$ \u8868\u793a\u5230\u7b2c $i$ \u4e2a\u5b57\u7b26\uff0c\u4e0a\u4e00\u4e2a\u9009 $1$ \u7684\u4f4d\u7f6e\u662f $j$ \u7684\u6700\u5927\u4ef7\u503c\uff0c\u6613\u5f97\uff1a\n\n$$\nf_{i, j} =\n\\begin{cases}\n \\max_{k < i}\\{f_{i - 1, k}\\} &j = i\\\\\n f_{i - 1, j} + \\sum_{r_k = i, l_k \\le j} a_k & j < i\n\\end{cases}\n$$\n\n\u518d\u538b\u6389\u4e00\u7ef4\uff0c\u7a7a\u95f4 $O(n)$\uff0c\u65f6\u95f4 $O(n ^ 2)$\u3002\n\n\u8003\u8651\u4f18\u5316\u8f6c\u79fb\uff1a\n\n- \u5bf9\u4e8e $j = i$\uff0c\u533a\u95f4\u53d6 max\uff1b\n\n- \u5bf9\u4e8e $\\sum a_k$\uff0c\u76f8\u5f53\u4e8e\u5bf9 $l_k \\sim r_k$ \u533a\u95f4\u52a0 $w_k$\uff1b\n\n\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n)$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long llt;\n\nconst int maxn = 2e5+5;\n\nstruct rules {\n    int l, r, w;\n    \n    bool friend operator < (rules a, rules b) {\n        return a.r < b.r;\n    }\n} rl[maxn];\n\nstruct tre {\n    tre *ls, *rs;\n    int l, r; llt val, tag;\n    \n    tre(int tl, int tr) {\n        ls = rs = nullptr;\n        l = tl, r = tr;\n        val = tag = 0;\n    }\n} *rt;\n\nvoid push_up(tre *t) {\n    t -> val = max(t -> ls -> val, t -> rs -> val);\n}\n\nvoid push_down(tre *t) {\n    if (t -> l == t -> r) return;\n    t -> ls -> val += t -> tag;\n    t -> rs -> val += t -> tag;\n    t -> ls -> tag += t -> tag;\n    t -> rs -> tag += t -> tag;\n    t -> tag = 0;\n}\n\nvoid build(int l, int r, tre *&t) {\n    t = new tre(l, r);\n    if (l == r) return;\n    int mid = (l + r) >> 1;\n    build(l,  mid, t -> ls);\n    build(mid+1,r, t -> rs);\n}\n\nvoid modity(int l, int r, llt k, tre *t) {\n    if (l <= t -> l && t -> r <= r) {\n        t -> val += k;\n        t -> tag += k;\n        return;\n    }\n    push_down(t);\n    if (l <= t -> ls -> r) modity(l, r, k, t -> ls);\n    if (r >= t -> rs -> l) modity(l, r, k, t -> rs);\n    push_up(t);\n}\n\nllt query() {\n    return max(rt -> val, 0ll);\n}\n\nint main() {\n    int n, m; cin >> n >> m, build(1, n, rt);\n    for (int i = 1; i <= m; i++) {\n        cin >> rl[i].l >> rl[i].r >> rl[i].w;\n    }\n    sort(rl + 1, rl + m + 1);\n    for (int i = 1, k = 1; i <= n; i++) {\n        modity(i, i, query(), rt);\n        while (rl[k].r == i) {\n            modity(rl[k].l, rl[k].r, rl[k].w, rt), k++;\n        }\n    }\n    cout << query() << '\\n';\n}\n```\n\n\u6ce8\u610f `long long`\u3002",
        "postTime": 1665584189,
        "uid": 581312,
        "name": "zerc",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 AT4544 Intervals"
    }
]