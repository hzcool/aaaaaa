[
    {
        "content": "**\u9898\u76ee\u5927\u610f**\n\n\u4ece\u5de6\u5230\u53f3\u6709\u7f16\u53f7\u4e3a $1$ \u5230 $n$ \u7684\u6b63\u65b9\u5f62\uff0c\u6bcf\u4e2a\u6b63\u65b9\u5f62\u4e0a\u6709\u4e00\u4e2a\u5b57\u6bcd $s_i$ \uff0c\u8fd8\u6709\u4e00\u4e2a\u9b54\u50cf\u3002\n\n\u6709 $Q$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u6709\u4e24\u4e2a\u5b57\u6bcd $a_i$ \u548c $b_i$ \uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u4e0a\u9762\u5b57\u6bcd\u662f $a_i$ \u7684\u6b63\u65b9\u5f62\uff0c\u5982\u679c $b_i$ \u7b49\u4e8e ```L``` \uff0c\u90a3\u4e48\u4e0a\u9762\u7684\u9b54\u50cf\u4f1a\u5411\u5de6\u79fb\uff0c\u5982\u679c\u7b49\u4e8e ```R``` \uff0c\u90a3\u4e48\u4e0a\u9762\u7684\u9b54\u50cf\u4f1a\u5411\u53f3\u79fb\uff0c\u5982\u679c\u7b2c\u4e00\u4e2a\u6b63\u65b9\u5f62\u4e0a\u7684\u9b54\u50cf\u5411\u5de6\u79fb\u6216\u8005\u7b2c $n$ \u4e2a\u6b63\u65b9\u5f62\u4e0a\u9762\u7684\u9b54\u50cf\u5411\u53f3\u79fb\uff0c\u90a3\u4e48\u5b83\u4f1a\u6d88\u5931\u3002\n\n\u95ee\u4f60\u6700\u540e\u8fd8\u5269\u51e0\u4e2a\u9b54\u50cf\u3002\n\n**\u5206\u6790**\n\n\u8ba1\u7b97\u8fd8\u5269\u51e0\u4e2a\u9b54\u50cf\uff0c\u53ef\u4ee5\u8ba1\u7b97\u6709\u51e0\u4e2a\u9b54\u50cf\u6ca1\u6709\u5230\u8fbe $0$ \u6216 $n+1$ \u65b9\u683c\uff0c\u7531\u4e8e\u79fb\u52a8\u7684\u65f6\u5019\u9b54\u50cf\u6ca1\u6709\u8df3\u8fc7\u53e6\u4e00\u4e2a\u9b54\u50cf\uff0c\u6240\u4ee5\u8bf4\u5f53\u4e00\u4e2a\u9b54\u50cf\u5230\u8fbe $0$ \u65b9\u683c\u5e76\u6d88\u5931\u65f6\u539f\u5148\u5b83\u5de6\u8fb9\u7684\u6240\u6709\u9b54\u50cf\u4e5f\u4f1a\u6d88\u5931\u3002\u800c\u5f53\u4e00\u4e2a\u9b54\u50cf\u5230\u8fbe $n+1$ \u65b9\u683c\u5e76\u6d88\u5931\u65f6\u539f\u5148\u5b83\u53f3\u8fb9\u7684\u6240\u6709\u9b54\u50cf\u4e5f\u4f1a\u6d88\u5931\u3002\n\n\u6240\u4ee5\u8bf4\u53ea\u9700\u8981\u77e5\u9053\u6700\u53f3\u8fb9\u521d\u59cb\u4f4d\u7f6e\u5230\u8fbe\u6b63\u65b9\u5f62 $0$ \u7684\u9b54\u50cf\u4e2a\u6570\u548c\u521d\u59cb\u4f4d\u7f6e\u6700\u5de6\u8fb9\u5230\u8fbe\u6b63\u65b9\u5f62 $n+1$ \u7684\u9b54\u50cf\u4e2a\u6570\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u4e24\u6b21\u4e8c\u5206\u89e3\u51b3\u3002\u53ea\u9700\u8981\u5224\u65ad\u4e8c\u5206\u7684\u4f4d\u7f6e\u662f\u5426\u6700\u7ec8\u4f1a\u6d88\u5931\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(q \\log n)$ \uff0c\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n\u6ce8\u610f\uff1a\u5c9b\u56fd\u9898\u8981\u6362\u884c\n\n**\u4ee3\u7801**\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,l,r,mid,ansl,ansr;\nchar a[2333333],b[2333333];\nstring st;\nint check(int x)\n{\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tif(st[x-1]==a[i])\n\t\t{\n\t\t\tif(b[i]=='R') x++;\n\t\t\telse x--;\n\t\t}\n\t\tif(x>n) return -1;\n\t\tif(x<1) return 1;\n\t}\n\treturn 0;\n}\nint main()\n{\n\tcin>>n>>m>>st;\n\tfor(int i=1;i<=m;i++) cin>>a[i]>>b[i];\n\tl=1;r=n;ansr=n+1;\n\twhile(l<=r)\n\t{\n\t\tmid=(l+r)/2;\n\t\tif(check(mid)==1) {ansl=mid;l=mid+1;}\n\t\telse r=mid-1;\n\t}\n\tl=1;r=n;\n\twhile(l<=r)\n\t{\n\t\tmid=(l+r)/2;\n\t\tif(check(mid)==-1) {ansr=mid;r=mid-1;}\n\t\telse l=mid+1;\n\t}\n\tcout<<ansr-ansl-1<<endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1652962623,
        "uid": 332299,
        "name": "Khvicha",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 AT4704"
    }
]