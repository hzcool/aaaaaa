[
    {
        "content": "\u5982\u679c\u5f00\u59cb\u7684\u5e8f\u5217\u662f\u4e24\u6bb5\u4e2d\u95f4\u9694\u5f00\u4e14\u957f\u5ea6\u4e00\u6837\u7684\u90e8\u5206\uff0c\u663e\u7136\u540e\u624b\u5fc5\u80dc\u3002\n\n\u5fc5\u80dc\u7b56\u7565\u5c31\u662f\u5728\u5148\u624b\u6ca1\u64cd\u4f5c\u7684\u90a3\u4e00\u534a\u90e8\u5206\u6a21\u4eff\u5148\u624b\u7684\u64cd\u4f5c\u3002\n\n\u4f46\u662f\u73b0\u5728\u7684\u5e8f\u5217\u662f\u8fde\u7eed\u7684\u4e00\u6bb5\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u5148\u624b\u5e76\u5c06\u5176\u5206\u5272\u5f00\uff0c\u9700\u8981\u6ee1\u8db3 $L < R ~\\lor ~ (n-L)=2k(k \\in \\mathbb{N})$\uff0c\u5373\u5982\u679c\u53ef\u9009\u7684\u64cd\u4f5c\u957f\u5ea6\u5947\u5076\u5747\u6709\uff0c\u6216\u8005\u53ea\u6709\u4e00\u79cd\u4f46\u662f\u548c\u5e8f\u5217\u957f\u5ea6\u5947\u5076\u6027\u76f8\u540c\uff0c\u90fd\u53ef\u4ee5\u505a\u5230\u5728\u7b2c\u4e00\u6b65\u5c06\u5176\u5206\u4e3a\u76f8\u540c\u957f\u5ea6\u7684\u4e24\u6bb5\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\u8fd8\u5269\u4e0b $L=R~\\land~(n-L)=2k+1(k \\in\\mathbb{N})$ \u7684\u60c5\u51b5\u6ca1\u6709\u89e3\u51b3\u3002\u4f46\u662f\u6b64\u65f6\u7b97\u51fa\u6240\u6709\u957f\u5ea6\u7684 SG \u51fd\u6570\u7684\u590d\u6742\u5ea6\u662f $O(n^2)$ \u53ef\u4ee5\u63a5\u53d7\uff0c\u6240\u4ee5\u5c31\u89e3\u51b3\u4e86\u3002\n\n\u5982\u679c ${\\rm SG}(n)=0$ \u540e\u624b\u5fc5\u80dc\uff0c\u53cd\u4e4b\u5148\u624b\u5fc5\u80dc\uff0c\u8f93\u51fa\u65b9\u6848\u53ea\u9700\u8981\u4fdd\u8bc1\u5f53\u524d\u5c40\u9762\u7684 ${\\rm SG}$ \u51fd\u6570\u7684\u5f02\u6216\u548c\u4e3a\u96f6\u5373\u53ef\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntemplate <class T> inline void read(T &x) {\n\tx = 0; int f = 0; char ch = getchar();\n\twhile(!isdigit(ch))\n\t\tf |= ch == '-', ch = getchar();\n\twhile(isdigit(ch))\n\t\tx = x * 10 + ch - 48, ch = getchar();\n\tx = f ? -x : x; return;\n}\n#define inf 0x3f3f3f3f\n#define ll long long\n#define fir first\n#define sec second\n#define N 2005\nint n, L, R, a, b;\nint f[N];\nint dfs(int len) {\n\tif(~f[len]) return f[len];\n\tif(len < L) return f[len] = 0;\n\tint cnt[N] = {0};\n\tfor(int i = 0; i + L <= len && i <= len - L - i; i++) {\n\t\tcnt[dfs(i) ^ dfs(len - L - i)]++;\n\t}\n\tint re = 0; while(cnt[re]) re++;\n\treturn f[len] = re;\n}\nint st[N];\ninline void modify(int p, int l) {\n\tfor(int i = p; i <= p + l - 1; i++) st[i] = 0;\n\treturn;\n}\ninline bool work() {\n\tint nv = 0;\n\tfor(int i = 1; i <= n; i++) {\n\t\tif(st[i]) {\n\t\t\tint p = i; while(st[p]) p++; p--;\n\t\t\tnv ^= dfs(p - i + 1); i = p;\n\t\t}\n\t}\n//\tassert(nv);\n\tfor(int i = 1; i <= n; i++) {\n\t\tif(st[i]) {\n\t\t\tint p = i; while(st[p]) p++; p--;\n\t\t\tif(p - i + 1 >= L) {\n\t\t\t\tfor(int dv = 0; dv + L <= p - i + 1; dv++) {\n\t\t\t\t\tif((dfs(p - i + 1) ^ dfs(dv) ^ dfs(p - i + 1 - L - dv)) == nv) {\n\t\t\t\t\t\tcout << i + dv << \" \" << L << endl;\n\t\t\t\t\t\tmodify(i + dv, L); return 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ti = p;\n\t\t}\n\t}\n\tcout << \"0 0\" << endl;\n//\tassert(0);\n\treturn 0;\n}\nsigned main() {\n\tread(n), read(L), read(R);\n\tif(L < R || !((n - L) & 1)) {\n\t\tcout << \"First\" << endl;\n\t\tint v = L + ((n - L) & 1);\n\t\tcout << (n - v) / 2 + 1 << \" \" << v << endl;\n\t\tn -= v;\n\t\twhile(1) {\n\t\t\tread(a), read(b);\n\t\t\tif(!a && !b) break;\n\t\t\tif(a <= n / 2) {\n\t\t\t\tcout << a + n / 2 + v << \" \" << b << endl;\n\t\t\t}\n\t\t\telse cout << a - n / 2 - v << \" \" << b << endl;\n\t\t}\n\t\treturn 0;\n\t}\n\tmemset(f, -1, sizeof(f));\n\tdfs(n); fill(st + 1, st + n + 1, 1);\n\tif(f[n]) {\n\t\tcout << \"First\" << endl;\n\t\twork();\n\t}\n\telse cout << \"Second\" << endl;\n\twhile(1) {\n\t\tread(a), read(b);\n\t\tif(a <= 0 || b <= 0) break;\n\t\tmodify(a, b); work();\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1669291437,
        "uid": 90027,
        "name": "GG_jok_er",
        "ccfLevel": 0,
        "title": "ABC278G Sol."
    },
    {
        "content": "[ABC278G](https://www.luogu.com.cn/problem/AT_abc278_g)\n\n## \u524d\u7f6e\u77e5\u8bc6\n\n$\\text{nim}$ \u6e38\u620f\uff0c$\\text{sg}$ \u51fd\u6570\u3002\n\n## \u601d\u8def\n\n### $\\text{Step 1}$\n\n\u5728\u535a\u5f08\u5bfb\u627e\u5fc5\u80dc\u7b56\u7565\u65f6\u6709\u4e00\u79cd\u7ecf\u5178\u601d\u8def\u2014\u2014\u5c06\u81ea\u5df1\u7684\u64cd\u4f5c\u548c\u5bf9\u624b\u7684\u64cd\u4f5c\u4e00\u4e00\u5bf9\u5e94\uff0c\u53ea\u8981\u5bf9\u624b\u80fd\u591f\u64cd\u4f5c\uff0c\u81ea\u5df1\u5c31\u80fd\u591f\u64cd\u4f5c\u3002\n\n\u4e00\u4e2a\u5178\u4f8b\u5c31\u662f\uff1a\u8f6e\u6d41\u53d6\u77f3\u5b50\uff0c\u6bcf\u6b21\u53ef\u4ee5\u53d6 $1$ \u4e2a\u5230 $3$ \u4e2a\uff0c\u53d6\u5230\u6700\u540e\u4e00\u4e2a\u77f3\u5b50\u7684\u80dc\u5229\u3002\u82e5\u77f3\u5b50\u603b\u6570\u4e3a $4$ \u7684\u500d\u6570\uff0c\u6709\u540e\u624b\u5fc5\u80dc\u7b56\u7565\uff1a\u5bf9\u624b\u53d6 $x$ \u4e2a\u77f3\u5b50\uff0c\u81ea\u5df1\u5c31\u53d6 $4-x$ \u4e2a\u77f3\u5b50\uff1b\u5426\u5219\u6709\u5148\u624b\u5fc5\u80dc\u7b56\u7565\uff1a\u5148\u4e00\u6b65\u53d6\u8d70\u9664\u4ee5 $4$ \u7684\u4f59\u6570\u4e2a\u77f3\u5b50\uff0c\u7136\u540e\u6309\u7167\u540e\u624b\u5fc5\u80dc\u7b56\u7565\u505a\u3002\n\n\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u4e5f\u5e0c\u671b\u80fd\u627e\u5230\u8fd9\u6837\u7684\u4e00\u79cd\u201c\u5bf9\u5e94\u7b56\u7565\u201d\u3002\n\n\u5177\u4f53\u5730\uff0c\u6211\u4eec\u5148\u624b\u5c06\u201c\u6b63\u4e2d\u5fc3\u201d\u53d6\u8d70\u4e00\u6bb5 $[l,r]$ \u3002\u7136\u540e\u82e5\u5bf9\u65b9\u9009 $[1,l)$ \u4e2d\u7684\u4e00\u6bb5\uff0c\u6211\u4eec\u5c31\u9009 $(r,n]$ \u4e2d\u5bf9\u5e94\u4f4d\u7f6e\u4e0a\u7684\u4e00\u6bb5\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\n\n\u8fd9\u79cd\u7b56\u7565\u5728\u7edd\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u90fd\u9002\u7528\uff0c\u4f46\u6709\u4e00\u4e2a $\\text{bug}$\u2014\u2014\u5f53 $L=R$ \u4e14\u4e0e $n$ \u5947\u5076\u6027\u76f8\u53cd\u65f6\uff0c\u65e0\u6cd5\u53d6\u8d70\u201c\u6b63\u4e2d\u5fc3\u201d\u3002\n\n### $\\text{Step 2}$\n\n\u5bf9\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u9700\u8981\u5bfb\u627e\u53e6\u5916\u7684\u601d\u8def\u3002\n\n\u8003\u8651\u4e00\u4e2a\u6e38\u620f\u5c40\u9762\u2014\u2014\u7531\u82e5\u5e72\u4e0d\u4ea4\u533a\u95f4\u7ec4\u6210\u3002\u8fd9\u76f8\u5f53\u4e8e\u4e00\u4e2a $\\text{nim}$ \u6e38\u620f\uff1a\u6bcf\u4e00\u4e2a\u533a\u95f4\u90fd\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u516c\u5e73\u535a\u5f08\u6e38\u620f\uff0c\u6bcf\u6b21\u64cd\u4f5c\u53ea\u80fd\u9009\u62e9\u4e14\u4e00\u5b9a\u8981\u9009\u62e9\u4e00\u4e2a\u533a\u95f4\u8fdb\u884c\u6e38\u620f\u3002\n\n\u4e8e\u662f\uff0c\u9884\u5904\u7406\u51fa $sg_i$ \u8868\u793a\u957f\u5ea6\u4e3a $i$ \u7684\u533a\u95f4\u7684 $sg$ \u51fd\u6570\u503c\u540e\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7 $\\text{xor}$ \u8868\u793a\u51fa\u4efb\u610f\u5c40\u9762\u7684 $sg$ \u51fd\u6570\u503c\u3002\uff08$\\text{nim}$ \u6e38\u620f\u7684\u7ed3\u8bba\uff09\n\n\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u957f\u5ea6 $i$\uff0c\u6c42 $sg_i$ \u65f6\u679a\u4e3e\u8fdb\u884c\u4e00\u6b21\u53d6\u8d70\u64cd\u4f5c\u80fd\u5230\u7684\u540e\u7ee7\u72b6\u6001\u2014\u2014\u679a\u4e3e $j$ \u8868\u793a\u53d6\u8d70 $[j+1,j+L]$\uff0c\u5219 $sg_i=\\text{mex}\\{sg_{j}\\oplus sg_{i-j-L}\\}$\u3002\u590d\u6742\u5ea6 $O(n^2)$\u3002\n\n\u521d\u59cb\u65f6\u7684\u5c40\u9762\u5c31\u662f $sg_n$\uff0c\u82e5 $sg_n>0$ \u6709\u5148\u624b\u5fc5\u80dc\u7b56\u7565\uff0c\u5426\u5219\u6709\u540e\u624b\u5fc5\u80dc\u7b56\u7565\u3002\n\n\u5982\u4f55\u6784\u9020\u65b9\u6848\u5462\uff1f\n\n\u5df2\u77e5\u5f53\u524d\u5c40\u9762\u662f\u5fc5\u80dc\u6001\uff0c\u8981\u6c42\u627e\u5230\u4e00\u79cd\u5f53\u524d\u72b6\u6001\u7684\u540e\u7ee7\u5fc5\u8d25\u72b6\u6001\u3002\n\n\u8bbe\u5f53\u524d\u5171\u6709 $k$ \u6761\u7ebf\u6bb5\uff0c\u957f\u5ea6\u5206\u522b\u4e3a $a_1$ \u5230 $a_k$\u3002\n\n\u5219 $sg_{now}=sg_{a_1}\\oplus sg_{a_2}\\oplus\\cdots\\oplus sg_{a_k}$\u3002\n\n\u76ee\u6807\u662f\u627e\u5230\u4e00\u4e2a\u533a\u95f4 $i$\uff0c\u5c06\u5176\u53d6\u8d70\u957f\u4e3a $L$ \u7684\u4e00\u6bb5\uff0c\u5269\u4e0b\u4e24\u6bb5\u957f\u5ea6\u5206\u522b\u4e3a $j$ \u548c $a_i-j-L$\uff0c\u4f7f\u5f97 $sg_{now}\\oplus sg_{a_i}\\oplus sg_{j}\\oplus sg_{a_i-j-L}=0$\u3002\n\n\u5373 $sg_{now}\\oplus sg_{a_i}=sg_{j}\\oplus sg_{a_i-j-L}$\u3002\n\n\u679a\u4e3e $i$\uff0c\u5de6\u534a\u90e8\u5206\u662f\u597d\u6c42\u7684\uff0c\u53f3\u534a\u90e8\u5206\u5728\u9884\u5904\u7406 $sg$ \u65f6\u5728 $\\text{xor}$ \u7684\u503c\u57df\u4e0a\u5f00\u4e2a\u6876\u987a\u4fbf\u8bb0\u5f55\u4e00\u4e0b\uff0c\u76f4\u63a5\u67e5\u5373\u53ef\u3002\u5355\u6b21\u64cd\u4f5c\u590d\u6742\u5ea6 $O(n)$\u3002\n\n\u603b\u590d\u6742\u5ea6 $O(n^2)$\u3002\n\n## \u4ee3\u7801\n\n[\u63d0\u4ea4\u8bb0\u5f55](https://atcoder.jp/contests/abc278/submissions/36702819)\n\n\n",
        "postTime": 1669034115,
        "uid": 372162,
        "name": "jrxxx",
        "ccfLevel": 7,
        "title": "ABC278G \u535a\u5f08"
    },
    {
        "content": "[\u53ef\u80fd\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://atcoder-for-chinese-developers.github.io/atcoder-for-chinese/index.html?page=Sabc278.abc278_g.mf25ic)\r\n\r\n\r\n\u9996\u5148\u53d1\u73b0\u8fd9\u4e2a\u95ee\u9898\u662f\u4e00\u4e2a\u516c\u5e73\u7ec4\u5408\u6e38\u620f\uff0c\u90a3\u4e48\u8003\u8651\u5b83\u4e00\u4e2a\u72b6\u6001\u7684 SG \u51fd\u6570\u662f\u600e\u4e48\u6837\u7684\u3002\r\n\r\n\u6211\u4eec\u628a\u8fd9\u4e2a\u6e38\u620f\u770b\u6210\u82e5\u5e72\u4e2a\u6ee1\u8db3\u5361\u724c\u8fde\u7eed\u7684\u6e38\u620f\u7684\u7ec4\u5408\uff0c\u8fd9\u6837\u6211\u4eec\u53ea\u8981\u5904\u7406\u51fa\u6bcf\u4e2a\u957f\u5ea6\u5bf9\u5e94\u7684\u6e38\u620f\u7684 SG \u51fd\u6570\u5c31\u53ef\u4ee5\u4e86\u3002  \r\n\r\n\u4e8e\u662f\u5c31\u6709\u4e86\u4e00\u4e2a\u6734\u7d20\u7684\u505a\u6cd5\uff0c\u679a\u4e3e\u4e00\u4e2a\u957f\u5ea6\uff0c\u518d\u679a\u4e3e $x, y$\uff0c\u6700\u540e\u5bf9\u6240\u6709\u6267\u884c\u4e86 $(x, y)$ \u64cd\u4f5c\u5269\u4e0b\u7684\u4e24\u6bb5\u7684\u5f02\u6216\u548c\u6c42 $\\operatorname{mex}$\uff0c\u8fd9\u6837\u5c31\u5904\u7406\u51fa\u6765\u4e86\u6211\u4eec\u9700\u8981\u7684 SG \u51fd\u6570\u3002\u8fdb\u884c\u6e38\u620f\u65f6\u53ea\u8981\u679a\u4e3e\u64cd\u4f5c\u5c06\u5f53\u524d\u72b6\u6001\u53d8\u6210 SG \u51fd\u6570\u503c\u4e3a $0$ \u7684\u72b6\u6001\u5373\u53ef\u3002  \r\n\r\n\u4f46\u662f\u8fd9\u6837\u590d\u6742\u5ea6\u592a\u9ad8\u4e86\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c$L \\le y \\le R$ \u7684\u9650\u5236\u5b9e\u9645\u4e0a\u662f\u9650\u5236\u4e86\u64cd\u4f5c\u540e\u5269\u4e0b\u7684\u4e24\u6bb5\u7684\u548c\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e2a\u957f\u5ea6\uff0c\u628a\u5b83\u6240\u6709\u7684\u5206\u6210\u4e24\u6bb5\u548c\u76f8\u540c\u7684\u4f5c\u4e3a\u4e00\u7ec4\u3002\u8fd9\u6837\u679a\u4e3e $(x, y)$ \u663e\u7136\u6d6a\u8d39\u4e86\uff0c\u8003\u8651\u76f4\u63a5\u679a\u4e3e\u4e24\u6bb5\u5f02\u6216\u503c $x$\uff0c\u5e76\u5224\u65ad\u5426\u53ef\u4ee5\u88ab\u8fbe\u5230\u3002  \r\n\r\n\u5177\u4f53\u5730\uff0c\u5f00\u4e00\u4e2a `std::map` \u7684\u6570\u7ec4\uff0c\u628a\u5f02\u6216\u548c\u4e3a $x$\uff0c\u957f\u5ea6\u548c\u4e3a $y$ \u7684\u4e24\u6bb5\u957f\u5ea6\u653e\u8fdb `map[x][y]` \u91cc\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u5728\u76f8\u5e94\u7684\u5f02\u6216\u548c\u5bf9\u5e94\u7684\u5bb9\u5668\u91cc `lower_bound` \u5373\u53ef\u3002\u540c\u65f6\u5bf9\u4e8e\u4e00\u4e2a\u957f\u5ea6\u8bb0\u4e0b\u8981\u8fbe\u6210\u6bcf\u4e2a\u5f02\u6216\u548c\u7684\u65b9\u6848\u3002\u6ce8\u610f\u5230\u53ea\u52a0\u5165\u4e86 $n$ \u4e2a SG \u51fd\u6570\u503c\uff0c\u6240\u4ee5\u53ef\u4ee5\u5355\u6b21\u52a0\u5165\u7684\u65f6\u5019\u679a\u4e3e\u5b83\u548c\u524d\u9762\u6bcf\u4e00\u4e2a\u957f\u5ea6\u7684\u7ec4\u5408\uff0c\u5b58\u5230\u76f8\u5e94\u7684 `std::map` \u91cc\u3002\r\n\r\n\u8fd9\u6837\u5904\u7406\u51fa\u6240\u6709 `SG` \u7684\u590d\u6742\u5ea6\u964d\u5230\u4e86 $O(n^2 \\log n)$\u3002\r\n\r\n\u7136\u540e\u8003\u8651\u600e\u4e48\u53bb\u8fdb\u884c\u6e38\u620f\u3002  \r\n\r\n\u8fd9\u4e00\u6b65\u5176\u5b9e\u5f88\u597d\u505a\uff0c\u7528\u4e00\u4e2a `std::set` \u5b58\u4e0b\u6bcf\u4e00\u6bb5\uff0c\u5bf9\u4e8e\u6211\u4eec\u7684\u56de\u5408\uff0c\u679a\u4e3e\u6bcf\u4e00\u6bb5\u53ef\u5426\u901a\u8fc7\u6539\u53d8\u4f7f\u5f97\u6240\u6709\u6bb5\u7684 SG \u51fd\u6570\u4e3a $0$ \u5373\u53ef\u3002\u7531 SG \u51fd\u6570\u77e5\u8bc6\u53ef\u4ee5\u77e5\u9053\uff0c\u8fd9\u662f\u4e00\u5b9a\u6709\u89e3\u7684\u3002\u5f97\u5230\u4efb\u610f\u4e00\u7ec4\u7b54\u6848\u540e\u8fdb\u884c\u76f8\u5e94\u7684\u4fee\u6539\u5e76\u5904\u7406\u4ea4\u4e92\u5e93\u7684\u64cd\u4f5c\u5373\u53ef\u3002  \r\n\r\n\u8fd9\u4e00\u6bb5\u7684\u590d\u6742\u5ea6\u4e5f\u662f $O(n^2 \\log n)$ \u7684\u3002\r\n\r\n```cpp\r\nvoid doit(int x, int y) {\r\n\tauto c = *std::prev(s.upper_bound({x, n}));\r\n\ts.erase(c);\r\n\tcur ^= SG[c.second];\r\n\tif (x - c.first > 0) s.insert({c.first, x - c.first}), cur ^= SG[x - c.first];\r\n\tif (c.second - (x - c.first) - y > 0) {\r\n\t    s.insert({x + y, c.second - (x - c.first) - y});\r\n\t    cur ^= SG[c.second - (x - c.first) - y];\r\n\t}\r\n}\r\n\r\nvoid insert(int x) {\r\n\tfor (int i = 0; i <= x; i++)\t\r\n\t\tmap[SG[i] ^ SG[x]][i + x] = {i, x};\r\n}\r\n\r\nvoid main() {\r\n\tstd::cin >> n >> L >> R;\r\n\t\r\n\tfor (int i = 0; i <= n; i++) \r\n\t\tfor (int j = 0; j <= n; j++)    \r\n\t\t\tmtd[i][j] = {-1, -1};\r\n\tfor (int i = 0; i < L; i++) SG[i] = 0, insert(i);\r\n\tfor (int i = L; i <= n; i++) {\r\n\t\tfor (int j = 0; j <= n; j++) {\r\n\t\t\tint l = std::max(i - R, 0), r = std::max(i - L, l);\r\n\t\t\tauto it = map[j].lower_bound(l);\r\n\t\t\tif (it == map[j].end() || it -> first > r) {\r\n\t\t\t\tSG[i] = j;\r\n\t\t\t\tbreak;\r\n\t\t\t} \r\n\t\t\tmtd[i][j] = it -> second;\r\n\t\t}\r\n\t\tinsert(i);\r\n\t}\r\n\t\r\n\ts.insert({1, n}), cur = SG[n];\r\n\tif (SG[n]) std::cout << \"First\" << std::endl;\r\n\telse { \r\n\t\tstd::cout << \"Second\" << std::endl;\r\n\t\tint x, y;\r\n\t\tstd::cin >> x >> y;\r\n\t\tdoit(x, y);\r\n\t}\r\n\t\r\n\twhile (\"2500!\"[0]) {\r\n\t\tstd::pair<int, int> res = {-1, -1};\r\n\t\tint b = 0, l = 0;\r\n\t\tfor (auto c : s) \r\n\t\t\tif (mtd[c.second][SG[c.second] ^ cur] != std::make_pair(-1, -1)) \r\n\t\t\t\tres = mtd[c.second][SG[c.second] ^ cur], l = c.second, b = c.first;\r\n\t\tint x = res.first + b, y = l - res.second - res.first;\r\n\t\tstd::cout << x << ' ' << y << std::endl;\r\n\t\tdoit(x, y);\r\n\t\tstd::cin >> x >> y;\r\n\t\tif (x == 0 && y == 0) return;\r\n\t\tdoit(x, y);\r\n\t}\r\n}\r\n```\r\n\r\n\u7b2c\u4e00\u6b21\u5728\u6bd4\u8d5b\u4e2d\u60f3\u51fa AT \u96be\u5ea6 2500 \u7684\u9898\u505a\u6cd5\u8036\uff01",
        "postTime": 1669027351,
        "uid": 499996,
        "name": "Qiaoqia",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 ABC278G"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n - \u7ed9\u5b9a $n$\uff0c$l$\uff0c$r$ \u4e09\u4e2a\u6570\uff0c\u4f60\u9700\u8981\u548c\u4ea4\u4e92\u5668\u535a\u5f08\u3002\n - \u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u533a\u95f4\uff0c\u4f60\u548c\u4ea4\u4e92\u5668\u8f6e\u6d41\u64cd\u4f5c\u3002\n - \u6bcf\u6b21\u64cd\u4f5c\uff0c\u64cd\u4f5c\u7684\u4e00\u65b9\u9009\u62e9\u4e00\u4e2a\u6ca1\u6709\u88ab\u67d3\u9ed1\u5e76\u4e14\u957f\u5ea6\u5728 $l$ \u548c $r$ \u4e4b\u95f4\u7684\u533a\u95f4\uff0c\u628a\u5b83\u67d3\u9ed1\u3002\n - \u65e0\u6cd5\u64cd\u4f5c\u7684\u4e00\u65b9\u5bc4\u4e86\uff0c\u53e6\u4e00\u65b9\u83b7\u80dc\u3002\n - \u6bcf\u6b21\u4f60\u64cd\u4f5c\u8981\u8f93\u51fa\u4e24\u4e2a\u6570 $a$ \u548c $b$\uff0c\u8868\u793a\u4f60\u9009\u62e9\u4e86\u533a\u95f4 $[a,a+b-1]$\u3002\n - \u6bcf\u6b21\u4ea4\u4e92\u5668\u64cd\u4f5c\u4f1a\u7ed9\u4f60\u4e24\u4e2a\u6570 $a$ \u548c $b$\uff0c\u8868\u793a\u4ea4\u4e92\u5668\u9009\u62e9\u4e86 $[a,a+b-1]$\uff0c\u82e5  $a=b=0$ \u5219\u8868\u793a\u4f60\u83b7\u80dc\uff0c\u5982\u679c $a=b=-1$ \u5219\u8868\u793a\u4f60\u5bc4\u4e86\u3002\n\n## \u89e3\u9898\u601d\u8def\n### \u60c5\u51b51\n - \u5148\u8003\u8651\u80fd\u5426\u6a21\u4eff\u5bf9\u65b9\uff0c\u53d1\u73b0\u552f\u4e00\u7684\u95ee\u9898\u5c31\u662f\u5982\u679c\u4ed6\u628a\u533a\u95f4\u653e\u5728\uff0c\u4e2d\u95f4\u4f60\u6a21\u4eff\u4e0d\u4e86\u3002\n - \u6240\u4ee5\u4f60\u8003\u8651\u5148\u624b\uff0c\u5148\u628a\u4e2d\u95f4\u7684\u5360\u4e86\uff0c\u8ba9\u5de6\u53f3\u7684\u957f\u5ea6\u76f8\u540c\u3002\n - \u6b64\u65f6\u53ea\u8981\u6ee1\u8db3 $l\\neq r$ \u6216\u8005 $l \\equiv n \\pmod 2$ \u5373\u53ef\u3002\n\n### \u60c5\u51b52\n - $l = r$\uff0c\u8fd9\u4e2a\u65f6\u5019\u4f60\u53ea\u80fd\u6d82\u9ed1\u56fa\u5b9a\u957f\u5ea6\u7684\u533a\u95f4\u3002\n - \u8003\u8651\u8ba1\u7b97 $\\text{SG}$ \u51fd\u6570\uff0c\u4e0d\u77e5\u9053\u4ec0\u4e48\u662f $\\text{SG}$ \u51fd\u6570\u7684\u53ef\u4ee5\u770b[\u8fd9\u91cc](https://oi-wiki.org/math/game-theory/impartial-game/)\u3002 \n - \u4ee4 $SG_i$ \u8868\u793a\u957f\u5ea6\u4e3a $i$ \u7684 $\\text{SG}$ \u51fd\u6570\u503c\u3002\n - \u90a3\u4e48\u5f53 $i<l$ \u65f6\uff0c$SG_i=0$\u3002\n - \u90a3\u4e48\u6211\u4eec\u8981\u8ba1\u7b97\u5bf9\u4e8e $i\\ge l$ \u7684 $SG_i$\uff0c\u5c31\u8981\u679a\u4e3e\u4f60\u8fd9\u4e2a\u533a\u95f4\u653e\u5728\u54ea\u91cc\u3002\n - \u6240\u4ee5 $SG_i=\\operatorname{mex}_{j=1}^{i-l+1}\\{SG_{j-1} \\operatorname{xor} SG_{i-j-l+1}\\}$\u3002\n - \u5982\u679c $SG_n = 0$ \u90a3\u4e48\u5148\u624b\u5fc5\u8d25\uff0c\u4f60\u8981\u9009\u62e9\u540e\u624b\uff0c\u5426\u5219\u9009\u62e9\u5148\u624b\u3002\n - \u4f60\u53ef\u4ee5\u7528 `set` \u7ef4\u62a4\u73b0\u5728\u8fd8\u5269\u54ea\u4e9b\u8fde\u7eed\u7684\u7a7a\u767d\u6bb5\u3002\n - \u6bcf\u6b21\u8f6e\u5230\u4f60\u64cd\u4f5c\u7684\u65f6\u5019\u5c31\u679a\u4e3e\u4f60\u9009\u62e9\u54ea\u4e2a\u533a\u95f4\uff0c\u4f7f\u5f97\u5220\u53bb\u8fd9\u4e2a\u533a\u95f4\u65f6\u5269\u4e0b\u7684\u5c40\u9762\u5148\u624b\u5fc5\u8d25\uff0c\u4e5f\u5c31\u662f\u5269\u4e0b\u7684 $\\text{SG}$ \u51fd\u6570\u503c\u5f02\u6216\u4e3a $0$\u3002\n\n## \u4ee3\u7801\u793a\u4f8b\n\u573a\u4e0a\u6ca1\u8fc7\uff0c\u540e\u6765\u624d\u8c03\u51fa\u6765\u3002\n\n```cpp\n/*\n* @Author: ftt2333\n* @Email: ftt2333@126.com\n* @LastEditTime: 2022-11-19 23:41:43\n*/\n\n#include <bits/stdc++.h>\nusing namespace std;\n#define off ios::sync_with_stdio(0), cin.tie(0), cout.tie(0)\n#define fin(s) freopen(s, \"r\", stdin)\n#define fout(s) freopen(s, \"w\", stdout)\n#define fio(s) fin(s\".in\"), fout(s\".out\")\nusing ll = long long; using ull = uint64_t;\nusing db = double; using ldb = long double;\nusing pii = pair<int, int>; using pll = pair<ll, ll>;\nusing vi = vector<int>; using vl = vector<ll>;\ntemplate <class T> using uid = uniform_int_distribution<T>;\ntemplate <class T> using urd = uniform_real_distribution<T>;\n#define rep(i, a, b) for(auto i = (a); i <= (b); ++i)\n#define per(i, a, b) for(auto i = (a); i >= (b); --i)\n#define go(i, h, e, x) for(int i = h[x]; i; i = e[i].nxt)\n#define pb push_back\n#define fi first\n#define se second\n#define all(a) (a).begin(), (a).end()\n#define szof(a) int((a).size())\n#define mem(a, b) memset(a, b, sizeof(a))\n#define mcpy(a, b) memcpy(a, b, sizeof(a))\n#define int ll\n\nmt19937 rnd(random_device{}());\nconst int mod = 998244353, N = 2114;\n\nint n, l, r;\nint f[N], tax[N];\n\nvoid solve1() {\n  cout << \"First\\n\";\n  int e = l + (l % 2 != n % 2);\n  int pos = (n - e) / 2 + 1;\n  cout << pos << ' ' << e << '\\n';\n  cout.flush();\n  int x, y;\n  for (; ; ) {\n    cin >> x >> y;\n    if (!x && !y) break;\n    y = x + y - 1;\n    swap(x, y);\n    x = n + 1 - x, y = n + 1 - y;\n    cout << x << ' ' << y - x + 1 << '\\n';\n    cout.flush();\n  }\n}\n\nint mex(vi v) {\n  for (int x : v) tax[x]++;\n  int res = 0;\n  rep(i, 0, N - 1) if (!tax[i]) {\n    res = i;\n    break;\n  }\n  for (int x : v) tax[x]--;\n  return res;\n}\n\nset<pii> rng;\n\nvoid split(int l, int r) {\n  auto it = prev(rng.upper_bound({l, n}));\n  auto e = *it;\n  rng.erase(it);\n  if (e.fi < l) rng.insert({e.fi, l - 1});\n  if (e.se > r) rng.insert({r + 1, e.se});\n}\n\nint base = 0;\nbool check(int l, int r) {\n  auto it = rng.upper_bound({l, n});\n  if (it == rng.begin()) return 0;\n  it--; auto e = *it;\n  if (e.fi > l || e.se < r) return 0;\n  if (base ^ f[e.se - e.fi + 1] ^ f[l - e.fi] ^ f[e.se - r]) return 0;\n  return 1;\n}\n\nvoid getnext() {\n  base = 0;\n  for (auto e : rng) base ^= f[e.se - e.fi + 1];\n  rep(i, 1, n - l + 1) if (check(i, i + l - 1)) {\n    cout << i << ' ' << l << '\\n';\n    cout.flush();\n    split(i, i + l - 1);\n    break;\n  }\n}\n\nvoid solve2() {\n  rep(i, l, n) {\n    vi v;\n    rep(j, 1, i - l + 1) {\n      v.pb(f[j - 1] ^ f[i - j - l + 1]);\n    }\n    f[i] = mex(v);\n  }\n  rng.insert({1, n});\n  if (f[n]) {\n    cout << \"First\\n\";\n    getnext();\n  }\n  else cout << \"Second\\n\";\n  int x, y;\n  for (; ; ) {\n    cin >> x >> y;\n    if (!x && !y) return;\n    y = x + y - 1;\n    split(x, y);\n    getnext();\n  }\n}\n\nsigned main() {\n  cin >> n >> l >> r;\n  if (l != r) solve1();\n  else solve2();\n}\n```",
        "postTime": 1669022688,
        "uid": 34225,
        "name": "ftt2333",
        "ccfLevel": 7,
        "title": "ABC278G"
    },
    {
        "content": "# [ABC278G] Generalized Subtraction Game \u9898\u89e3\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/AT_abc278_g)\n\n$\\text{sto}\\ \\text{lg\\_choumingzhaozhu}$ \u4e00\u773c\u79d2\u4e86\u8fd9\u9053\u9898\u3002\n\n\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u535a\u5f08\u5982\u679c\u76f4\u63a5 $\\text{SG}$ \u51fd\u6570\u662f $O(n^3)$ \u7684\u3002\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u535a\u5f08\u6e38\u620f\u6709\u4e00\u4e2a\u5f88\u597d\u7684\u65b9\u6848\uff0c\u53eb\u505a\u6a21\u4eff\u5bf9\u624b\uff0c\u56e0\u6b64\u6211\u4eec\u628a\u95ee\u9898\u5206\u4e3a\u4e24\u7c7b\uff1a\n\n----\n\n\u7b2c\u4e00\u7c7b\uff0c$l \\not = r$\u3002\n\n\u6211\u4eec\u53d1\u73b0\u8fd9\u7c7b\u95ee\u9898\u53ef\u4ee5\u9009\u62e9\u5148\u624b\uff0c\u7136\u540e\u76f4\u63a5\u53d6\u6b63\u4e2d\u95f4\u7684\u4e00\u6bb5\uff08\u56e0\u4e3a $l,l+1$ \u4e4b\u4e2d\u4e00\u5b9a\u6709\u4e00\u4e2a\u548c $n$ \u540c\u5947\u5076\uff09\uff0c\u8fd9\u6837\u5e8f\u5217\u5c31\u5212\u5206\u6210\u4e86\u5b8c\u5168\u76f8\u540c\u7684 $2$ \u6bb5\uff0c\u53ef\u4ee5\u5bf9\u5bf9\u65b9\u7684\u64cd\u4f5c\u8fdb\u884c **\u6a21\u4eff** \u6765\u83b7\u53d6\u80dc\u5229\u3002\n\n\u7b80\u8981\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nputs(\"First\");\nprintf(\"%d %d\\n\", (n >> 1) - (l >> 1) + 1, l);\nfflush(stdout);\nint l = (n >> 1) - (l >> 1) + 1, k = l + l;\nint L, R;\nwhile (scanf(\"%d %d\", &L, &R), L && L != -1) {\n    if (L < l)\n        printf(\"%d %d\\n\", L + k - 1, R);\n    else\n        printf(\"%d %d\\n\", L - k + 1, R);\n    fflush(stdout);\n}\n```\n\n-----\n\n\u7b2c\u4e8c\u7c7b\uff0c$l=r$\u3002\n\n\u6211\u4eec\u53d1\u73b0\u8fd9\u6837\u60c5\u51b5\u4e0b $\\text{SG}$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n^2)$ \u9884\u5904\u7406 $O(n^2\\log n)$ \u67e5\u8be2\u7684\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u9996\u5148\uff0c\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u533a\u95f4\u53ef\u4ee5\u5206\u88c2\u6210\u957f\u5ea6\u4e3a $x$ \u548c $n - x - l$ \u8fd9\u6837 $2$ \u4e2a\u533a\u95f4\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u51fa $SG(x) = \\operatorname{mex}_{i=1}^{n-l+1}\\{SG(i - 1) \\operatorname{xor} SG(n - i - l - 1)\\}$\uff0c\u5373\u53ef $O(n^2)$ \u8ba1\u7b97 $\\text{SG}$ \u51fd\u6570\u3002\n\n\u7136\u540e\u8003\u8651\u5982\u4f55\u8f93\u51fa\u64cd\u4f5c\u3002\u8d77\u521d\uff0c\u4f60\u8981\u6309\u7167 $\\text{SG}$ \u51fd\u6570\u662f\u5426\u4e3a $0$ \u6765\u5224\u65ad\u5148\u540e\u624b\uff0c\u7136\u540e\u7528\u4e00\u4e2a\u7c7b\u4f3c `old driver tree` \u7684\u65b9\u6cd5\uff0c\u7528\u4e00\u4e2a `set` \u6765\u7ef4\u62a4\uff0c`set` \u4e2d\u5b58\u7684\u662f\u8bb8\u591a\u4e8c\u5143\u7ec4 $(l,r)$\u3002\n\n\u5904\u7406\u5bf9\u624b\u7684\u8f93\u5165\u7684\u65b9\u6cd5\u5c31\u662f\u6bcf\u6b21\u627e\u5230\u5bf9\u624b\u8f93\u5165\u7684\u533a\u95f4\u5728 `set` \u4e2d\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u5206\u88c2\u8fd9\u4e2a\u533a\u95f4\uff0c\u4f8b\u5982\u5bf9\u624b\u8f93\u5165\u4e86 $[l,r]$\uff0c\u4f60\u627e\u5230\u4e86 $[L,R]$\uff0c\u90a3\u4e48\u4f60\u5c31\u5206\u88c2\u6210 $[L,l-1],[r + 1,R]$\uff0c\u6ce8\u610f\u5224\u65ad\u5206\u88c2\u540e\u533a\u95f4\u5927\u5c0f\u662f\u5426\u5927\u4e8e $0$\u3002\n\n\u81ea\u5df1\u64cd\u4f5c\u5c31\u66b4\u529b\u679a\u4e3e\u4ece\u54ea\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u64cd\u4f5c\uff0c\u7136\u540e\u7528 `set` \u9a8c\u8bc1\u64cd\u4f5c\u662f\u5426\u5408\u6cd5\uff0c $\\text{SG}$ \u51fd\u6570\u9a8c\u8bc1\u8fd9\u6837\u64cd\u4f5c\u662f\u5426\u6b63\u786e\uff0c\u6700\u540e\u518d\u7528\u5904\u7406\u5bf9\u624b\u8f93\u5165\u7684\u65b9\u6cd5\u6765\u5220\u9664\u533a\u95f4\u5373\u53ef\u3002\n\n\u5b9e\u9645\u4e0a\u4f60\u8fd9\u4e2a `set` \u53ef\u4ee5\u7528 `list` \u4f18\u5316\u5230 $O(n^2)$\uff0c\u4f46\u662f\u6ca1\u6709\u5fc5\u8981\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\nusing namespace std;\nint n, l, r;\nconst int N = 2222;\nint mp[N];\nvoid wudaoshi_idea(int x) {\n    puts(\"First\");\n    printf(\"%d %d\\n\", (n >> 1) - (x >> 1) + 1, x);\n    fflush(stdout);\n    int l = (n >> 1) - (x >> 1) + 1, k = l + x;\n    int L, R;\n    while (scanf(\"%d %d\", &L, &R), L && L != -1) {\n        if (L < l)\n            printf(\"%d %d\\n\", L + k - 1, R);\n        else\n            printf(\"%d %d\\n\", L - k + 1, R);\n        fflush(stdout);\n    }\n    exit(0);\n}\nset<pair<int, int> > odt;\nint base;\ninline bool check(int l, int r) {\n    set<pair<int, int> >::iterator it = odt.upper_bound({l, n});\n    if (it == odt.begin()) return 0;\n    --it;\n    if (it->first > l || it->second < r) return 0;\n    return !(base ^ mp[it->second - it->first + 1] ^ mp[l - it->first] ^ mp[it->second - r]);\n}\ninline void split(int l, int r) {\n    set<pair<int, int> >::iterator it = odt.upper_bound({l, n});\n    --it;\n    int L = it->first, R = it->second;\n    odt.erase(it);\n    if (R > r) odt.insert({r + 1, R});\n    if (L < l) odt.insert({L, l - 1});\n}\ninline void solve() {\n    base = 0;\n    for (set<pair<int, int> >::iterator it = odt.begin(); it != odt.end(); it++) base ^= mp[it->second - it->first + 1];\n    for (int i = 1; i <= n - l + 1; i++)\n        if (check(i, i + l - 1)) {\n            printf(\"%d %d\\n\", i, l), fflush(stdout);\n            split(i, i + l - 1);\n            return;\n        }\n}\nbool vis[N];\ninline int mex(vector<int> &vec) {\n    memset(vis, 0, sizeof(vis));\n    for (int v : vec) vis[v] = 1;\n    int ans = 0;\n    while (vis[ans]) ++ans;\n    return ans;\n}\nint main() {\n    cin >> n >> l >> r;\n    if (l != r) wudaoshi_idea(((l ^ n) & 1) + l);\n    if (!((l ^ n) & 1)) wudaoshi_idea(l);\n    vector<int> s;\n    for (int x = 1; x <= n; x++) {\n        int ans = 0;\n        for (int i = 1; i <= x - l + 1; i++) s.push_back(mp[i - 1] ^ mp[x - i - l + 1]);\n        mp[x] = mex(s);\n        s.clear();\n    }\n    odt.insert({1, n});\n    if (mp[n])\n        puts(\"First\"), solve();\n    else\n        puts(\"Second\");\n    fflush(stdout);\n    int L, R;\n    while (scanf(\"%d %d\", &L, &R), L && L != -1) {\n        split(L, L + R - 1);\n        solve();\n    }\n    return 0;\n}\n```",
        "postTime": 1669028185,
        "uid": 615348,
        "name": "zhouershan",
        "ccfLevel": 7,
        "title": "[ABC278G] Generalized Subtraction Game \u9898\u89e3"
    },
    {
        "content": "\u840c\u840c\u535a\u5f08\u634f\u3002\n\n\u8003\u8651\u66b4\u529b `dp` \u51fa `SG` \u51fd\u6570\uff0c\u6709 $\\text{SG}_n=\\text{mex}_{1\\leq i \\leq j \\leq n,l\\leq j-i+1 \\leq r}\\text{SG}_{i-1}\\oplus\\text{SG}_{n-j}$\u3002\u8f6c\u79fb\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta(n^2(r-l))$\uff0c\u65e0\u6cd5\u901a\u8fc7\u3002\n\n\u4f46\u8003\u8651\u5982\u679c $\\exists l\\leq i \\leq r$\uff0c\u6ee1\u8db3 $n-i$ \u4e3a\u5076\u6570\uff0c\u5219\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u4e2d\u95f4\u957f\u5ea6\u4e3a $i$ \u7684\u4e00\u6bb5\uff0c\u5c06\u5de6\u53f3\u5206\u6210\u5747\u5300\u7684\u4e24\u6bb5\uff0c\u4e0e\u5bf9\u624b\u4e0b\u6a21\u4eff\u68cb\u3002\u5177\u4f53\u7684\uff0c\u6211\u4eec\u7b2c\u4e00\u6b65\u9009\u62e9\u4e86 $l,r$\uff0c\u5982\u679c\u5bf9\u624b\u4e0b $l_1,r_1 < l$\uff0c\u5219\u6211\u4eec\u4e0b $r+(l-r_1),r+(l-l_1)$\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\u6b64\u65f6\u662f\u5148\u624b\u5fc5\u80dc\u7684\u3002\n\n\u7279\u5224\u6389 $n < l$ \u548c $l \\leq n \\leq r$ \u540e\uff0c\u7531\u4e8e\u5947\u5076\u6027\u7684\u539f\u56e0\uff0c\u5bf9\u4e8e\u6240\u6709\u7684 $l <r$\uff0c\u5747\u53ef\u627e\u5230 $i$ \u6ee1\u8db3\u4e0a\u9762\u7684\u6761\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0a\u9762\u7684\u505a\u6cd5\u3002\u5426\u5219\u4f7f\u7528\u66b4\u529b `dp`\u3002\u56e0\u4e3a $l=r$\uff0c`dp` \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta(n^2)$\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002",
        "postTime": 1668870467,
        "uid": 414210,
        "name": "Iam1789",
        "ccfLevel": 0,
        "title": "ABC278G Generalized Subtraction Game \u9898\u89e3"
    }
]