[
    {
        "content": "\u8fd9\u9053\u9898\u7684\u601d\u8def\u662f\u6bd4\u8f83\u5de7\u5999\u7684\u3002\n\n\u82e5\u6b63\u5411\u8003\u8651\uff0c\u8981\u6c42\u51fa\u6bcf\u4e2a\u5927\u5c0f\u4e3ak\u7684\u70b9\u96c6\u7684\u8d21\u732e\uff0c\u590d\u6742\u5ea6\u52bf\u5fc5\u662f\u6307\u6570\u7ea7\u522b\u7684\u3002\u6240\u4ee5\u6211\u4eec\u53cd\u5411\u8003\u8651\u95ee\u9898\uff0c\u8003\u8651\u6bcf\u4e2a\u70b9\u5bf9$ans_k$\u7684\u8d21\u732e\u3002\n\n\u6211\u4eec\u77e5\u9053\uff0c\u5927\u5c0f\u4e3ak\u7684\u70b9\u96c6\u6709$C(n,k)$\u4e2a\u3002\u80fd\u4f7f\u4e00\u4e2a\u70b9i\u4e0d\u5bf9$ans_k$\u4ea7\u751f\u8d21\u732e\u7684\u70b9\u96c6\u5f53\u4e14\u4ec5\u5f53\u4ee5\u4e0b\u4e24\u79cd\u60c5\u51b5\u4e4b\u4e00\u6210\u7acb\uff1a\n\n(1)\u8fd9\u4e2a\u96c6\u5408\u4e2d\u6240\u6709\u70b9\u90fd\u5728\u4ee5i\u7684\u67d0\u4e2a\u513f\u5b50\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff1b\n\n(2)\u8fd9\u4e2a\u96c6\u5408\u4e2d\u6240\u6709\u70b9\u90fd\u4e0d\u5728\u4ee5i\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u3002\n\n\u4e8e\u662f\u6211\u4eec\u8bbe$siz_x$\u8868\u793a\u4ee5x\u4e3a\u6839\u7684\u5b50\u6811\u5927\u5c0f\uff0c\u8bbe$contrib_{i,j}$\u8868\u793ai\u5bf9$ans_j$\u7684\u8d21\u732e\u3002\u5219\u6709\uff1a\n\n$contrib_{i,j}=C(n,j)-(\\sum_{v=son_i} C(v,j))-C(n-siz_i,j)$\n\n$ans_j=\\sum_{i=1 \\to n} contrib_{i,j}$\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u76f4\u63a5\u66b4\u529b\u8ba1\u7b97\u662f$O(n^2)$\u7684\u3002\n\n\u8fd8\u662f\u8fd0\u7528\u6b63\u96be\u5219\u53cd\u7684\u601d\u60f3\uff0c\u8bbe$cnt_k$\u8868\u793a\u6709\u591a\u5c11\u4e2a\u70b9i\u6ee1\u8db3$siz_i=k$\uff0c\u7279\u522b\u5730\uff0c\u8bbe$siz_{i+n}=n-siz_{i}$\u3002\n\n\u4e8e\u662f$ans_j=C(n,j)*n-\\sum_{i=j \\to n} cnt_i*C(i,j)$\n\n\u5c55\u5f00\u7ec4\u5408\u6570\uff0c\u5f97\u5230\uff1a\n\n$ans_j=C(n,j)*n-\\sum_{i=j \\to n} cnt_i*\\frac{i!}{j!(i-j)!}$\n\n$ans_j=C(n,j)*n-\\frac{1}{j!}\\sum_{i=j \\to n} cnt_i*\\frac{i!}{(i-j)!}$\n\n\u8bbe$a_i=cnt_i*i!$\uff0c$b_i=\\frac{1}{i!}$\uff0c\n\n\u5219$ans_j=C(n,j)*n-\\frac{1}{j!}\\sum_{i=j \\to n}a_ib_{i-j}$\n\n\u73b0\u5728\u7684\u4e3b\u8981\u95ee\u9898\u662f\u5982\u4f55\u52a0\u901f\u8ba1\u7b97$tmp_j=\\sum_{i=j \\to n}a_ib_{i-j}$\n\n\u8bbe$brev_i=b_{n-i}$\n\n\u6784\u9020\u751f\u6210\u51fd\u6570$A=a_0x^0+...+a_nx^n$\n\n$B=brev_0x^0+...+brev_nx^n$\n\n\u8bbeC=AB\uff0c\u5219$C_{j+n}$\u662f\n\n$\\sum_{i=j \\to n}a_ibrev_{n+j-i}$\n=$\\sum_{i=j \\to n}a_ib_{i-j}$\uff0c\u521a\u597d\u5c31\u662f$tmp_i$\u3002\n\n\u7528NTT\u5377\u79ef\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(nlogn)$\n\n**\u5212\u91cd\u70b9\uff01\u672c\u9898\u7684\u539f\u6839\u662f5\uff01\u4e0d\u662f3\uff01**\n\n\u8fd9\u662f\u672c\u4eba\u7528markdown\u5199\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\u3002\u770b\u5728\u52aa\u529b\u80cc\u8bf5markdown\u516c\u5f0f\u7684\u4efd\u4e0a\uff0c\u7ed9\u4e2a\u8d5e\u5566\u3010\u53ef\u601c\u3011\uff0c\u8c22\u8c22\uff01\n\n\u4ee3\u7801\uff1a\n\n```\n\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<string>\n#include<algorithm>\n#include<math.h>\nusing namespace std;\n\nconst int N=2e5+5;\nconst int M=5e5+5;\nconst int T=1e6+5;\nconst int mod=924844033;\nconst int sqr=5;\nconst int sqrinv=554906420;\n\nint n,u,v,siz[N],limit,lg;\nint E,ot[M],ne[M],g[N];\nint fac[N],inv[N],infac[N];\nint a[T],b[T],r[T];\n\nint F_p(int x,int y)\n{\n\tint bas=x,ret=1;\n\twhile(y)\n\t{\n\t\tif(y&1) ret=1LL*ret*bas%mod;\n\t\tbas=1LL*bas*bas%mod;\n\t\ty>>=1;\n\t}\n\treturn ret;\n}\n\nvoid add(int u,int v)\n{\n\tot[++E]=v;\n\tne[E]=g[u];\n\tg[u]=E;\n}\n\nvoid init()\n{\n\tint i;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<n;++i)\n\t{\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tadd(u,v),add(v,u);\n\t}\n}\n\nvoid dfs(int x,int fath)\n{\n\tsiz[x]=1;\n\tint p,to;\n\tfor(p=g[x];p;p=ne[p])\n\t{\n\t\tto=ot[p];\n\t\tif(to==fath) continue;\n\t\tdfs(to,x);\n\t\tsiz[x]+=siz[to];\n\t\t++a[siz[to]];\n\t}\n\t++a[n-siz[x]];\n}\n\nint solve_complex(int x,int tp)\n{\n\tif(~tp) return F_p(sqr,x);\n\telse return F_p(sqrinv,x);\n}\n\nvoid DFT(int *A,int tp)\n{\n\tint i;\n\tfor(i=0;i<limit;++i)\n\t\tif(i<r[i])\n\t\t\tswap(A[i],A[r[i]]);\n\t\n\tint len,j,k;\n\tfor(len=1;len<limit;len<<=1)\n\t{\n\t\tint wn=solve_complex((mod-1)/(2*len),tp);\n\t\tfor(j=0;j<limit;j+=len<<1)\n\t\t{\n\t\t\tint w=1;\n\t\t\tfor(k=0;k<len;++k,w=1LL*w*wn%mod)\n\t\t\t{\n\t\t\t\tint x=A[j+k];\n\t\t\t\tint y=1LL*w*A[j+k+len]%mod;\n\t\t\t\tA[j+k]=x+y,A[j+k+len]=x-y;\n\t\t\t\tif(A[j+k]>=mod) A[j+k]-=mod;\n\t\t\t\tif(A[j+k+len]<0) A[j+k+len]+=mod;\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid prework()\n{\n\tint i;dfs(1,0);\n\tfac[0]=1;for(i=1;i<=n;++i) fac[i]=1LL*fac[i-1]*i%mod;\n\tinv[1]=1;for(i=2;i<=n;++i) inv[i]=1LL*inv[mod%i]*(mod-mod/i)%mod;\n\tinfac[0]=1;for(i=1;i<=n;++i) infac[i]=1LL*infac[i-1]*inv[i]%mod;\n}\n\nvoid work()\n{\n\tint i;a[0]=0;\n\tfor(i=0;i<=n;++i) a[i]=1LL*a[i]*fac[i]%mod;\n\tfor(i=0;i<=n;++i) b[i]=infac[n-i];\n\t\n\tlimit=1;\n\twhile(limit<=2*n) limit<<=1,++lg;\n\tfor(i=1;i<limit;++i) r[i]=(r[i>>1]>>1)|((i&1)<<(lg-1));\n\t\n\tDFT(a,1),DFT(b,1);\n\tfor(i=0;i<limit;++i) a[i]=1LL*a[i]*b[i]%mod;\n\tDFT(a,-1);\n\t\n\tint INV=F_p(limit,mod-2);\n\tfor(i=1;i<=n;++i) a[i+n]=1LL*a[i+n]*INV%mod*infac[i]%mod;\n\tfor(i=1;i<=n;++i) a[i]=1LL*fac[n]*infac[i]%mod*infac[n-i]%mod*n%mod;\n\tfor(i=1;i<=n;++i)\n\t{\n\t\ta[i]-=a[i+n];\n\t\tif(a[i]<0) a[i]+=mod;\n\t}\n\tfor(i=1;i<=n;++i) printf(\"%d\\n\",a[i]);\n}\n\nint main()\n{\n\tinit();prework();work();\n\treturn 0;\n}\n\n```",
        "postTime": 1544099825,
        "uid": 31435,
        "name": "hwk0518",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT2064 \u3010Many Easy Problems\u3011"
    },
    {
        "content": "[\u53ef\u80fd\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](http://m-sea-blog.com/archives/4576/)\n\n---\n\n\u8bbe\u8981\u6c42\u7684\u4e1c\u897f\u662f $f_i$\uff0c\u8003\u8651\u600e\u4e48\u6c42\u8fd9\u4e2a\u4e1c\u897f\u3002\n\n\u53ef\u4ee5\u60f3\u5230\u8ba1\u7b97\u6bcf\u4e2a\u70b9\u5728\u591a\u5c11\u79cd\u65b9\u6848\u4e2d\uff0c\u8fdb\u800c\u60f3\u5230\u8ba1\u7b97\u6bcf\u4e2a\u70b9\u4e0d\u5728\u591a\u5c11\u79cd\u65b9\u6848\u4e2d\u3002\u4e8e\u662f\u5bb9\u6613\u5f97\u5230\u5305\u542b $u$ \u7684\u65b9\u6848\u6570\u4e3a\n\n$${n\\choose i}-\\sum_{v\\in son_u}{sz_v\\choose i}$$\n\n\u4e8e\u662f\n\n$$\\begin{aligned}f_i&=\\sum_{u=1}^n\\left({n\\choose i}-\\sum_{v\\in son_u}{sz_v\\choose i}\\right)\\\\&=n{n\\choose i}-\\sum_{u=1}^n\\sum_{v\\in son_u}{sz_v\\choose i}\\end{aligned}$$\n\n\u540e\u9762\u7684\u90e8\u5206\u53ef\u4ee5\u8003\u8651\u4e00\u4e2a\u8f6c\u5316\u3002\u8bbe $cnt_i$ \u8868\u793a\u5927\u5c0f\u4e3a $i$ \u7684\u5b50\u6811\u6570\u91cf\uff0c\u4e8e\u662f\n\n$$\\begin{aligned}f_i&=n{n\\choose i}-\\sum_{j=i}^ncnt_j{j\\choose i}\\\\&=n{n\\choose i}-\\sum_{j=i}^ncnt_j\\frac{j!}{i!(j-i)!}\\\\&=n{n\\choose i}-\\frac{1}{i!}\\sum_{j=i}^n\\frac{cnt_j\\times j!}{(j-i)!}\\end{aligned}$$\n\n\u4ee4 $F_i=cnt_i\\times i!$\uff0c$G_i=\\frac{1}{i!}$\uff0c\u4e8e\u662f\n\n$$\\begin{aligned}f_i&=n{n\\choose i}-\\frac{1}{i!}\\sum_{j=i}^nF_j\\times G_{j-i}\\\\&=n{n\\choose i}-\\frac{1}{i!}\\sum_{j=0}^{n-i}F_{i+j}\\times G_j\\end{aligned}$$\n\n\u4ee4 $FR\\!_i=F_{n-i}$\uff0c\u4e8e\u662f\n\n$$\\begin{aligned}f_i&=n{n\\choose i}-\\frac{1}{i!}\\sum_{j=0}^{n-i}FR_{n-i-j}\\times G_j\\end{aligned}$$\n\n\u53ef\u4ee5\u53d1\u73b0\u540e\u9762\u5df2\u7ecf\u662f\u5377\u79ef\u7684\u5f62\u5f0f\u4e86\uff0c\u4e8e\u662f\u76f4\u63a5 NTT \u5373\u53ef\u3002~~\u867d\u7136\u8fd9\u4e2a\u6a21\u6570\u5f88\u5947\u602a\uff0c\u4f46\u662f\u5b83\u786e\u5b9e\u662f NTT \u6a21\u6570\u3002~~\n\n```cpp\n// ===================================\n//   author: M_sea\n//   website: http://m-sea-blog.com/\n// ===================================\n#include <algorithm>\n#include <iostream>\n#include <cstdlib>\n#include <cstring>\n#include <cstdio>\n#include <vector>\n#include <cmath>\n#define re register\nusing namespace std;\n\ninline int read() {\n    int X=0,w=1; char c=getchar();\n    while (c<'0'||c>'9') { if (c=='-') w=-1; c=getchar(); }\n    while (c>='0'&&c<='9') X=X*10+c-'0',c=getchar();\n    return X*w;\n}\n\nconst int N=300000+10;\nconst int mod=924844033;\ninline int qpow(int a,int b) { int c=1;\n    for (;b;b>>=1,a=1ll*a*a%mod) if (b&1) c=1ll*c*a%mod;\n    return c;\n}\n\nint n;\n\nstruct edge { int v,nxt; } e[N<<1];\nint head[N];\ninline void addEdge(int u,int v) {\n    static int c=0;\n    e[++c]=(edge){v,head[u]},head[u]=c;\n}\n\nint fac[N],ifac[N];\ninline void init(int n) {\n    fac[0]=1;\n    for (re int i=1;i<=n;++i) fac[i]=1ll*fac[i-1]*i%mod;\n    ifac[n]=qpow(fac[n],mod-2);\n    for (re int i=n;i;--i) ifac[i-1]=1ll*ifac[i]*i%mod;\n}\ninline int C(int n,int m) {\n    return 1ll*fac[n]*ifac[m]%mod*ifac[n-m]%mod;\n}\n\nint cnt[N],sz[N];\ninline void dfs(int u,int fa) {\n    sz[u]=1;\n    for (re int i=head[u];i;i=e[i].nxt) {\n        int v=e[i].v; if (v==fa) continue;\n        dfs(v,u),sz[u]+=sz[v],++cnt[sz[v]];\n    }\n    ++cnt[n-sz[u]];\n}\n\nint r[N],F[N],G[N];\ninline void NTT(int* A,int n,int op) {\n    for (re int i=0;i<n;++i) if (i<r[i]) swap(A[i],A[r[i]]);\n    for (re int i=1;i<n;i<<=1) {\n        int rot=qpow(op==1?5:554906420,(mod-1)/(i<<1));\n        for (re int j=0;j<n;j+=i<<1)\n            for (re int k=0,w=1;k<i;++k,w=1ll*w*rot%mod) {\n                int x=A[j+k],y=1ll*w*A[j+k+i]%mod;\n                A[j+k]=(x+y)%mod,A[j+k+i]=(x-y+mod)%mod;\n            }\n    }\n    if (op==-1) { int inv=qpow(n,mod-2);\n        for (re int i=0;i<n;++i) A[i]=1ll*A[i]*inv%mod;\n    }\n}\n\nint main() {\n    n=read();\n    for (re int i=1;i<n;++i) {\n        int u=read(),v=read();\n        addEdge(u,v),addEdge(v,u);\n    }\n    dfs(1,0); init(n);\n    for (re int i=1;i<=n;++i) F[i]=1ll*cnt[i]*fac[i]%mod;\n    reverse(F,F+n+1);\n    for (re int i=0;i<=n;++i) G[i]=ifac[i];\n    int lim=1,l=0;\n    for (;lim<=n<<1;lim<<=1,++l);\n    for (re int i=0;i<lim;++i) r[i]=(r[i>>1]>>1)|((i&1)<<(l-1));\n    NTT(F,lim,1),NTT(G,lim,1);\n    for (re int i=0;i<lim;++i) F[i]=1ll*F[i]*G[i]%mod;\n    NTT(F,lim,-1);\n    reverse(F,F+n+1);\n    for (re int i=1;i<=n;++i)\n        printf(\"%lld\\n\",(1ll*n*C(n,i)%mod\n                        -1ll*ifac[i]*F[i]%mod+mod)%mod);\n    return 0;\n}\n```",
        "postTime": 1578751734,
        "uid": 38370,
        "name": "M_sea",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 AT2064 \u3010Many Easy Problems\u3011"
    },
    {
        "content": "- \u9898\u610f\uff1a\n\n\u7ed9\u5b9a\u4e00\u68f5\u65e0\u6839\u6811\uff0c\u5b9a\u4e49 $f(i)$\uff0c\u5bf9\u4e8e\u6240\u6709\u5927\u5c0f\u4e3a $i$ \u7684\u70b9\u96c6\uff0c\u6c42\u51fa\u80fd\u591f\u5305\u542b\u5b83\u7684\u6700\u5c0f\u8fde\u901a\u5757\u5927\u5c0f\u4e4b\u548c\u3002\u5bf9\u4e8e $i=1 \\to n$ \u7684\u6240\u6709 $i$\uff0c\u6c42\u51fa $f(i)$\u3002\n\n$N \\le2\\times 10^5$\u3002\n\n- \u505a\u6cd5\uff1a\n\n\u96be\u4ee5\u5bf9\u70b9\u96c6\u7684\u6240\u6709\u60c5\u51b5\u8fdb\u884c\u7edf\u8ba1\uff0c\u8f6c\u800c\u8ba1\u7b97\u6bcf\u4e2a\u70b9 $u$ \u5bf9\u7b54\u6848\u7684\u8d21\u732e\u3002\n\n\u4ece\u53cd\u9762\u8003\u8651\uff0c\u8ba1\u7b97 $u$ \u4e0d\u88ab\u653e\u8fdb\u70b9\u96c6\u7684\u65b9\u6848\u6570\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u5f53\u4e14\u4ec5\u5f53**\u70b9\u96c6\u5185\u6240\u6709\u70b9\u90fd\u5728 $u$ \u67d0\u4e2a\u513f\u5b50\u7684\u5b50\u6811\u5185\u6216\u4e0d\u5728 $u$ \u7684\u5b50\u6811\u5185**\u65f6\uff0c$u$ \u6ca1\u6709\u88ab\u653e\u8fdb\u70b9\u96c6\u3002\u8fd9\u6837\u7684\u65b9\u6848\u6570\u4e3a $\\sum\\limits_{v\\in son(u)}\\dbinom{sz_v}{i}$\u3002\uff08\u6ce8\u610f\uff1a\u8fd9\u91cc\u7684 $son,sz$ \u6307 $u$ \u4e3a\u6574\u68f5\u6811\u7684\u6839\u65f6\u7684\u60c5\u51b5\uff0c\u4e5f\u5c31\u662f\u8bf4\u5176\u4ed6\u60c5\u51b5\u4e0b $u$ \u7684\u7236\u4eb2\u5728\u6b64\u65f6\u4e5f\u6709\u53ef\u80fd\u662f $u$ \u7684\u513f\u5b50\uff0c\u5f53\u521d\u7406\u89e3\u8fd9\u4e00\u6b65\u7528\u4e86\u5f88\u4e45\uff09\u3002\n\n\u56e0\u4e3a\u603b\u65b9\u6848\u6570\u4e3a\u5728 $n$ \u4e2a\u70b9\u4e2d\u9009 $i$ \u4e2a\uff0c\u4e8e\u662f $u$ \u7684\u603b\u8d21\u732e\u4e3a $\\dbinom{n}{i}-\\sum\\limits_{v\\in son(u)}\\dbinom{sz_v}{i}$,\u5f97\u5230 $f(i)=\\sum\\limits_{u}\\left(\\dbinom{n}{i}-\\sum\\limits_{v\\in son(u)}\\dbinom{sz_v}{i}\\right)=n\\dbinom{n}{i}-\\sum\\limits_{u}\\sum\\limits_{v\\in son(u)}\\dbinom{sz_v}{i}$\u3002\n\n\u679a\u4e3e $sz_v$\uff0c\u8bb0 $c_i$ \u4e3a\u5b50\u6811\u5927\u5c0f\u4e3a $i$ \u7684\u65b9\u6848\u6570\uff08\u540c\u524d\u9762\u7684 $son,sz$\uff0c\u8fd9\u91cc\u8bf4\u7684\u5b50\u6811**\u540c\u6837\u8ba1\u7b97 $u$ \u4ee5\u4e0a\u4e0d\u5c5e\u4e8e $u$ \u5b50\u6811\u7684\u90e8\u5206**\uff09\uff0c$f(i)=n\\dbinom{n}{i}-\\sum\\limits_{k=i}^{n}c_k\\dbinom{k}{i}$\u3002\n\n\u628a\u7ec4\u5408\u6570\u62c6\u5f00\uff1a\n\n$$\\begin{aligned}f(i)&=n\\dbinom{n}{i}-\\sum\\limits_{k=i}^{n}c_k\\dbinom{k}{i}\\\\&=n\\dbinom{n}{i}-\\sum\\limits_{k=i}^{n}c_k\\dfrac{k!}{i!(k-i)!}\\\\&=n\\dbinom{n}{i}-\\dfrac{1}{i!}\\sum\\limits_{k=0}^{n-i}\\dfrac{1}{k!}\\times (k+i)!\\times c_{k+i}\\end{aligned}$$\n\n\u4ee4 $g(x)=\\dfrac{1}{x!},f(x)=(n-x)!c_{n-x}$\uff1a\n\n$$\\begin{aligned}f(i)&=n\\dbinom{n}{i}-\\dfrac{1}{i!}\\sum\\limits_{k=0}^{n-i}\\dfrac{1}{k!}\\times (k+i)!\\times c_{k+i}\\\\&=n\\dbinom{n}{i}-\\dfrac{1}{i!}\\sum\\limits_{k=0}^{n-i}g(k)f(n-i-k)\\end{aligned}$$\n\n\u53f3\u8fb9\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u52a0\u6cd5\u5377\u79ef\u7684\u5f62\u5f0f\uff0c\u9884\u5904\u7406\u9636\u4e58\uff0c$\\mathtt{NTT}$ \u8ba1\u7b97\u5373\u53ef\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\nnamespace mystd {\n    inline int read() {\n        char c = getchar();\n        int x = 0, f = 1;\n        while (c < '0' || c > '9') f = (c == '-') ? -1 : f, c = getchar();\n        while (c >= '0' && c <= '9') x = (x << 1) + (x << 3) + c - '0', c = getchar();\n        return x * f;\n    }\n    inline void write(int x) {\n        if (x < 0) x = ~(x - 1), putchar('-');\n        if (x > 9) write(x / 10);\n        putchar(x % 10 + '0');\n    }\n}\nusing namespace std;\nusing namespace mystd;\n\nconst int gn = 5;\nconst int gi = 554906420;\nconst int mod = 924844033;\nconst int maxn = 2e5 + 200;\nstruct edge { int to, nxt; } e[maxn << 1];\nint n, tot, sz[maxn], cnt[maxn], head[maxn], fac[maxn], inv[maxn], ifac[maxn];\nint len, lim, liv, f[maxn << 2], g[maxn << 2], rev[maxn << 2];\n\nvoid add_edge(int u, int v) {\n    e[++tot] = (edge) { v, head[u] };\n    head[u] = tot;\n}\n\nvoid dfs(int u, int fa) {\n    sz[u] = 1;\n    for (int i = head[u]; i; i = e[i].nxt) {\n        int v = e[i].to;\n        if (v == fa) continue;\n        dfs(v, u), sz[u] += sz[v], cnt[sz[v]]++;\n    }\n    cnt[n - sz[u]]++;\n}\n\nint C(int n, int m) { return fac[n] * ifac[m] % mod * ifac[n - m] % mod; }\nint ksm(int p, int q) {\n    int res = 1;\n    while (q) {\n        if (q & 1) res = res * p % mod;\n        p = p * p % mod;\n        q >>= 1;\n    }\n    return res;\n}\n\nvoid ntt(int *f, int flg) {\n    for (int i = 0; i < lim; i++) if (i < rev[i]) swap(f[i], f[rev[i]]);\n    for (int i = 1; i < lim; i <<= 1) {\n        int tg = ksm(flg ? gn : gi, (mod - 1) / (i * 2));\n        for (int j = 0, w = 1; j < lim; j += i * 2, w = 1) {\n            for (int k = 0; k < i; k++, w = w * tg % mod) {\n                int x = f[j + k], y = f[i + j + k] * w % mod;\n                f[j + k] = (x + y) % mod, f[i + j + k] = (x - y + mod) % mod;\n            }\n        }\n    }\n}\n\nsigned main() {\n    n = read();\n    for (int i = 1, u, v; i <= n - 1; i++) {\n        u = read(), v = read();\n        add_edge(u, v), add_edge(v, u);\n    }\n    dfs(1, 0);\n    fac[0] = inv[1] = ifac[0] = 1;\n    for (int i = 2; i <= n; i++) inv[i] = (mod - mod / i) * inv[mod % i] % mod;\n    for (int i = 1; i <= n; i++) fac[i] = fac[i - 1] * i % mod, ifac[i] = ifac[i - 1] * inv[i] % mod;\n    for (int i = 1; i <= n; i++) f[n - i] = cnt[i] * fac[i] % mod;\n    for (int i = 0; i <= n; i++) g[i] = ifac[i];\n    for (lim = 1; lim <= 2 * n; lim <<= 1, len++) {}\n    liv = ksm(lim, mod - 2);\n    for (int i = 0; i < lim; i++) rev[i] = (rev[i >> 1] >> 1) | ((i & 1) << (len - 1));\n    ntt(f, 1), ntt(g, 1);\n    for (int i = 0; i < lim; i++) f[i] = f[i] * g[i] % mod;\n    ntt(f, 0), reverse(f, f + n + 1);\n    for (int i = 1; i <= n; i++) write(((n * C(n, i) % mod - ifac[i] * f[i] % mod * liv % mod) + mod) % mod), puts(\"\");\n    return 0;\n}\n```",
        "postTime": 1643198586,
        "uid": 306573,
        "name": "Ender32k",
        "ccfLevel": 0,
        "title": "AT2064 [AGC005F] Many Easy Problems \u9898\u89e3"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u79cd\u4e0d\u540c\u7684\u63a8\u67ff\u65b9\u6cd5\uff0c\u867d\u7136\u5341\u5206\u5e9f\u7269\u3002\n\n\u8bb0\u4e00\u4e2a\u8fde\u901a\u5757\u7684\u4e00\u7ec4\u8fb9\u754c\u70b9\u4e3a $a_{1..k}$\uff0c\u6309 dfs \u5e8f\u6392\u5e8f\u540e\uff0c\u6709\uff1a\n$$V=1+\\sum_{i=1}^kdep_{a_i}-\\sum_{i=1}^{k-1}dep_{lca(a_i,a_{i+1})}-dep_{lca(a_1...a_k)}$$\n\n\u5176\u4e2d $V$ \u4e3a\u8be5\u8fde\u901a\u5757\u4e2d\u7684\u70b9\u6570\u3002\n\n\u8003\u8651\u6bcf\u4e2a\u70b9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u7b2c\u4e00\u90e8\u5206\u5bf9 $ans_k$ \u7684\u8d21\u732e\u663e\u7136\u4e3a $\\dbinom nk+\\dbinom {n-1}{k-1}\\sum dep_i$\u3002\n\n\u7b2c\u4e8c\u90e8\u5206\u5bf9 $ans_k$ \u7684\u8d21\u732e\u5982\u4e0b\uff1a\n$$\\begin{aligned}&\\sum_idep_i\\sum_{x<y}[lca(x,y)=i]\\dbinom{n-j+i-1}{k-2}\\\\=&\\sum_idep_i\\sum_{t=1}^{sz_i-1}\\dbinom{n-t-1}{k-2}\\sum_{x=1}^{n-t}[lca(x,x+t)=i]\\end{aligned}$$\n\n\u540e\u9762\u90a3\u4e2a\u4e1c\u897f\uff0c\u53ef\u4ee5\u5148\u5047\u88c5\u5b50\u6811\u5185\u6bcf\u5bf9 dfn \u76f8\u8ddd $t$ \u7684\u70b9\u90fd\u53ef\u884c\uff0c\u7136\u540e\u628a\u5728\u540c\u4e00\u68f5\u5b50\u6811\u5185\u7684\u8d21\u732e\u51cf\u6389\u3002\n\n$$\\begin{aligned}=&\\sum_idep_i\\sum_{t=1}^{sz_i-1}\\dbinom{n-t-1}{k-2}(\\max\\{sz_i-t\\}-\\sum_{y\\in son_i}\\max\\{sz_y-t,0\\})\\\\=&\\sum_{t=1}^{n-1}\\dbinom{n-t-1}{k-2}\\sum_i\\max\\{sz_i-t,0\\}\\end{aligned}$$\n\n\u6b64\u5904\u6839\u7684\u6df1\u5ea6\u4e3a $1$\uff0c\u540e\u9762\u7684\u53ef\u4ee5\u4e24\u6b21\u5dee\u5206\u540e\u524d\u7f00\u548c\u505a\u51fa\u6765\uff0c\u8bbe\u4e3a $f(t)$\u3002\n\n$$\\begin{aligned}=&\\sum_{t=1}^{n-1}\\dbinom{n-t-1}{k-2}f(t)\\\\=&\\sum_{t=1}^{n-1}\\dfrac{f(t)(n-t-1)!}{(k-2)!(n-t+1-k)!}\\end{aligned}$$\n\n\u662f\u5dee\u5377\u79ef\u7684\u5f62\u5f0f\uff0c\u76f4\u63a5\u53cd\u8f6c\u5176\u4e2d\u4e00\u4e2a\u5377\u8d77\u6765\u5c31\u884c\u4e86\u3002\n\n\u7b2c\u4e09\u90e8\u5206\u7684\u8d21\u732e\u6bd4\u8f83\u663e\u7136\uff1a\n$$\\sum_i\\dbinom{sz_i}k$$\n\n\u7528\u4e8c\u9879\u5f0f\u5b9a\u7406\u641e\u51fa\u751f\u6210\u51fd\u6570\uff0c\u53d1\u73b0\u662f\u4e00\u4e2a\u7b80\u5355\u591a\u9879\u5f0f\u5411\u5de6\u5e73\u79fb\u4e00\u5355\u4f4d\u5f97\u5230\u7684\uff0c\u4f7f\u7528\u591a\u9879\u5f0f\u5e73\u79fb\uff0c\u4e5f\u662f\u5dee\u5377\u79ef\u7684\u5f62\u5f0f\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1.1e6+5,P=924844033;\nint n,k,r[N],fact[N],invf[N],invp[N],g[N],Lim,h[N],cnt[N],ff[N],gg[N],hh[N];\nint dep[N],sd,sz[N],f[N],hd[N],nxt[N<<1],to[N<<1],tot;\nvoid add(int x,int y){to[++tot]=y,nxt[tot]=hd[x],hd[x]=tot;}\ninline int add_mod(int x,int y){return (x+=y)>=P?x-P:x;}\nvoid dfs(int x,int Fa){\n\tsd=add_mod(dep[x]=dep[Fa]+1,sd),sz[x]=1;\n\tfor(int i=hd[x],y;i;i=nxt[i])\n\t\tif((y=to[i])!=Fa)dfs(y,x),sz[x]+=sz[y];\n}\nint qpow(int x,int y){\n\tint res=1;\n\tfor(;y;x=1ll*x*x%P,y>>=1)\n\t\tif(y&1)res=1ll*res*x%P;\n\treturn res;\n}\nvoid ntt(int *a,int lim,bool flag){\n\tfor(int i=1;i<lim;i++)if(i<(r[i]=(r[i>>1]>>1)|((i&1)*lim>>1)))swap(a[i],a[r[i]]);\n\tfor(int i=1;i<lim;i<<=1){\n\t\tint wn=qpow(flag?5:(P*3ll+1)/5,(P-1)/(i<<1));\n\t\tfor(int j=0;j<lim;j+=i<<1)\n\t\t\tfor(int k=0,w=1,x,y;k<i;w=1ll*w*wn%P,k++)\n\t\t\t\tx=a[j+k],y=1ll*w*a[i+j+k]%P,a[j+k]=add_mod(x,y),a[i+j+k]=add_mod(x,P-y);\n\t}\n\tif(flag)return;\n\tfor(int i=0,invn=qpow(lim,P-2);i<lim;i++)a[i]=1ll*a[i]*invn%P;\n}\nvoid mul(int *a,int *b,int *c,int lim,int w){\n\tfor(int i=0;i<lim;i++)ff[i]=a[i],gg[i]=b[i];\n\tntt(ff,lim,1),ntt(gg,lim,1);\n\tfor(int i=0;i<lim;i++)ff[i]=1ll*ff[i]*gg[i]%P;\n\tntt(ff,lim,0);\n\tfor(int i=0;i<=w;i++)c[i]=ff[i];\n\tfor(int i=0;i<lim;i++)ff[i]=gg[i]=0;\n}\nvoid trans(int *a,int *b,int lim){\n\tfor(int i=0;i<lim;i++)ff[i]=1ll*fact[lim-i-1]*a[lim-i-1]%P,gg[i]=invf[i];\n\tmul(ff,gg,hh,lim<<1,lim);\n\tfor(int i=0;i<lim;i++)b[i]=1ll*hh[lim-i-1]*invf[i]%P,hh[lim-i-1]=0;\n}\nint main(){\n\tscanf(\"%d\",&n);Lim=1<<(int)ceil(log2(n*3));\n\tfact[1]=fact[0]=invf[1]=invf[0]=invp[1]=1;\n\tfor(int i=2;i<=Lim;i++)fact[i]=1ll*fact[i-1]*i%P,invp[i]=1ll*(P-P/i)*invp[P%i]%P,invf[i]=1ll*invf[i-1]*invp[i]%P;\n\tfor(int i=1,x,y;i<n;i++)scanf(\"%d%d\",&x,&y),add(x,y),add(y,x);\n\tdfs(1,0);\n\tfor(int i=1;i<=n;i++)f[sz[i]-1]++,cnt[sz[i]]++;\n\tfor(int i=n-1;~i;i--)f[i]+=f[i+1];\n\tfor(int i=n-1;~i;i--)f[i]=add_mod(f[i],f[i+1]);\n\tfor(int i=0;i<=(n-1>>1);i++)swap(f[i],f[n-1-i]);\n\tfor(int i=0;i<n;i++)f[i]=1ll*fact[i]*f[i]%P,g[n-i]=invf[i];\n\tmul(f,g,f,Lim,Lim),trans(cnt,h,1<<(int)ceil(log2(n))+1);\n\tprintf(\"%d\\n\",n);\n\tfor(int i=2;i<=n;i++)\n\t\tprintf(\"%d\\n\",((1ll*fact[n]*invf[i-1]%P*invf[n-i+1]%P*(sd+1ll*invp[i]*(n-i+1)%P)%P-1ll*invf[i-2]*f[n+i-2]%P-h[i])%P+P)%P);\n\treturn 0;\n}\n```",
        "postTime": 1619256118,
        "uid": 77174,
        "name": "FunnyCreatress",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 AT2064\u3010 [AGC005F] Many Easy Problems\u3011"
    },
    {
        "content": "~~1900 \u5206 AGC F \u795e\u9898\uff0c\u4e00\u770b\u5c31\u662f\u6211\u4e0d\u4f1a\u505a\u7684\u4e9a\u5b50\u554a/kk~~\n\n\u8003\u8651\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u96c6\u5408 $S$ \u600e\u6837\u6c42 $f(S)$\uff0c\u4e00\u4e2a\u70b9 $u$ \u4f1a\u5bf9 $f(S)$ \u4ea7\u751f $1$ \u7684\u8d21\u732e\u5f53\u4e14\u4ec5\u5f53 $u\\in S$ \u6216\u8005 $u$ \u6709\u4e24\u4e2a\u5b50\u6811\u4e2d\u5305\u542b $S$ \u5185\u7684\u8282\u70b9\u3002\n\n\u53cd\u8fc7\u6765\u8bf4\uff0c\u4e00\u4e2a\u70b9 $u$ \u4e0d\u4f1a\u5bf9 $f(S)$ \u4ea7\u751f\u8d21\u732e\u5f53\u4e14\u4ec5\u5f53 $S$ \u4e2d\u7684\u70b9\u5168\u5728 $u$ \u7684\u67d0\u4e2a\u5b50\u6811\u4e2d\u3002\n\n\u5047\u8bbe\u6211\u4eec\u89c4\u5b9a\u7684\u96c6\u5408 $S$ \u7684\u5927\u5c0f\u4e3a $k$\uff0c\u5bf9\u4e8e\u67d0\u4e2a\u70b9 $u$\uff0c\u6709 $m$ \u4e2a\u5927\u5c0f\u5206\u522b\u4e3a $s_1,s_2,\\dots,s_m$ \u7684\u5b50\u6811\uff0c\u90a3\u4e48\u5171\u6709 $\\dbinom{s_1}{k}+\\dbinom{s_2}{k}+\\dots+\\dbinom{s_m}{k}$ \u4e2a\u96c6\u5408 $S$ \u6ee1\u8db3 $u$ \u4e0d\u4f1a\u5bf9 $f(S)$ \u4ea7\u751f\u8d21\u732e\u3002\n\n\u4ece\u53cd\u9762\u8003\u8651\uff0c\u62ff\u603b\u8d21\u732e $n\\times\\dbinom{n}{k}$ \u51cf\u53bb\u4e0d\u4f1a\u4ea7\u751f\u7684\u8d21\u732e\u3002i.e\uff0c$ans_k=n\\times\\dbinom{n}{k}-\\sum\\limits_{u=1}^n\\sum\\limits_{j=1}^{m_u}\\dbinom{s_{u,j}}{k}$\uff0c\u5176\u4e2d $m_u$ \u4e3a\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\u4e2a\u6570\uff0c$s_{u,1},s_{u,2},\\dots,s_{u,m_u}$ \u5206\u522b\u4e3a\u8fd9 $m_u$ \u4e2a\u5b50\u6811\u7684\u5927\u5c0f\u3002\n\n\u663e\u7136\u6211\u4eec\u5e76\u4e0d\u7528\u8003\u8651\u8fd9 $u_m$ \u4e2a\u5b50\u6811\u5177\u4f53\u662f\u4ec0\u4e48\uff0c\u53ea\u7528\u5173\u5fc3\u5b83\u7684\u5927\u5c0f\u3002\u6545\u6211\u4eec\u53ef\u4ee5\u6c42\u51fa\u5927\u5c0f\u4e3a $s$ \u7684\u5b50\u6811\u7684\u4e2a\u6570 $c_s$\uff0c\u539f\u5f0f\u53d8\u4e3a $ans_k=n\\times\\dbinom{n}{k}-\\sum\\limits_{s=1}^nc_s\\times\\dbinom{s}{k}$\u3002\n\n\u62c6\u7ec4\u5408\u6570\uff0c\u5f97\u5230 $ans_k=n\\times\\dbinom{n}{k}-\\sum\\limits_{s=1}^nc_s\\times\\dfrac{s!}{k!(s-k)!}$\n\n\u628a $\\dfrac{1}{k!}$ \u63d0\u5230\u5916\u9762\u53bb\u53ef\u4ee5\u5f97\u5230\uff1a$ans_k=n\\times\\dbinom{n}{k}-\\dfrac{1}{k!}\\times\\sum\\limits_{s=1}^nc_s\\times\\dfrac{s!}{(s-k)!}$\n\n\u4ee4 $a_i=c_i\\times i!,b_i=\\dfrac{1}{i!}$\uff0c\u90a3\u4e48\u539f\u5f0f\u53d8\u4e3a $ans_k=n\\times\\dbinom{n}{k}-\\dfrac{1}{k!}\\times\\sum\\limits_{s=1}^na_sb_{s-k}$\n\n\u53d1\u73b0\u53c8\u662f $\\sum\\limits_{x-y=i}f_xg_y$ \u7684\u5f62\u5f0f\uff0c\u7acb\u9a6c\u5c06\u5176\u4e2d\u67d0\u4e2a\u6570\u7ec4\u7ffb\u8f6c\u4e00\u4e0b\u3002\u6211\u662f\u4ee4 $b'_i=b_{n-i+1}$\uff0c\u6c42\u4e00\u4e0b $a$ \u548c $b'$ \u7684\u5377\u79ef\u5c31\u884c\u4e86\u3002\n\n\u8fd8\u6709\u8fd9\u9898\u6a21\u6570\u662f $924844033$\uff0c\u5176\u539f\u6839\u662f $5$\u2026\u2026\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define fi first\n#define se second\n#define fz(i,a,b) for(int i=a;i<=b;i++)\n#define fd(i,a,b) for(int i=a;i>=b;i--)\n#define ffe(it,v) for(__typeof(v.begin()) it=v.begin();it!=v.end();it++)\n#define fill0(a) memset(a,0,sizeof(a))\n#define fill1(a) memset(a,-1,sizeof(a))\n#define fillbig(a) memset(a,63,sizeof(a))\n#define pb push_back\n#define ppb pop_back\n#define mp make_pair\ntemplate<typename T1,typename T2> void chkmin(T1 &x,T2 y){if(x>y) x=y;}\ntemplate<typename T1,typename T2> void chkmax(T1 &x,T2 y){if(x<y) x=y;}\ntypedef pair<int,int> pii;\ntypedef long long ll;\ntemplate<typename T> void read(T &x){\n\tx=0;char c=getchar();T neg=1;\n\twhile(!isdigit(c)){if(c=='-') neg=-1;c=getchar();}\n\twhile(isdigit(c)) x=x*10+c-'0',c=getchar();\n\tx*=neg;\n}\nconst int pr=5;\nconst int MOD=924844033;\nconst int MAXN=2e5;\nconst int MAXT=1<<19;\nint n,hd[MAXN+5],nxt[MAXN*2+5],to[MAXN*2+5],ec=0;\nvoid adde(int u,int v){to[++ec]=v;nxt[ec]=hd[u];hd[u]=ec;}\nint c[MAXN+5],sz[MAXN+5];\nvoid dfs(int x,int f){\n\tsz[x]=1;\n\tfor(int e=hd[x];e;e=nxt[e]){\n\t\tint y=to[e];if(y==f) continue;\n\t\tdfs(y,x);sz[x]+=sz[y];c[sz[y]]++;\n\t} if(x!=1) c[n-sz[x]]++;\n}\nint qpow(int x,int e){int ret=1;for(;e;e>>=1,x=1ll*x*x%MOD) if(e&1) ret=1ll*ret*x%MOD;return ret;}\nint f[MAXN+5],ff[MAXN+5];\nint calc(int x,int y){return 1ll*f[x]*ff[y]%MOD*ff[x-y]%MOD;}\nint LEN=1,LOG=0,a[MAXT+5],b[MAXT+5],h[MAXT+5],ipr,rev[MAXT+5],prs[MAXT+5][2],inv[MAXT+5];\nvoid NTT(int *a,int len,int type){\n\tint lg=log2(len);\n\tfor(int i=0;i<len;i++) rev[i]=(rev[i>>1]>>1)|((i&1)<<(lg-1));\n\tfor(int i=0;i<len;i++) if(i<rev[i]) swap(a[i],a[rev[i]]);\n\tfor(int i=2;i<=len;i<<=1){\n\t\tint W=prs[i][type<0];\n\t\tfor(int j=0;j<len;j+=i){\n\t\t\tint w=1;\n\t\t\tfor(int k=0;k<(i>>1);k++,w=1ll*w*W%MOD){\n\t\t\t\tint X=a[j+k],Y=1ll*a[(i>>1)+j+k]*w%MOD;\n\t\t\t\ta[j+k]=(X+Y)%MOD;a[(i>>1)+j+k]=(X-Y+MOD)%MOD;\n\t\t\t}\n\t\t}\n\t}\n\tif(type==-1) for(int i=0;i<len;i++) a[i]=1ll*a[i]*inv[len]%MOD;\n}\nint main(){\n\tscanf(\"%d\",&n);ipr=qpow(pr,MOD-2);\n\tfor(int i=1;i<n;i++){\n\t\tint u,v;scanf(\"%d%d\",&u,&v);\n\t\tadde(u,v);adde(v,u);\n\t} dfs(1,0);\n//\tfor(int i=1;i<=n;i++) printf(\"%d\\n\",c[i]);\n\tf[0]=1;for(int i=1;i<=n;i++) f[i]=1ll*f[i-1]*i%MOD;\n\tff[n]=qpow(f[n],MOD-2);for(int i=n-1;~i;i--) ff[i]=1ll*ff[i+1]*(i+1)%MOD;\n\twhile(LEN<=n+n) LEN<<=1,LOG++;\n\tfor(int i=1;i<=LEN;i<<=1){\n\t\tinv[i]=qpow(i,MOD-2);\n\t\tprs[i][0]=qpow(pr,(MOD-1)/i);\n\t\tprs[i][1]=qpow(ipr,(MOD-1)/i);\n\t}\n\tfor(int i=1;i<=n;i++) a[i]=1ll*c[i]*f[i]%MOD;\n\tfor(int i=0;i<=n;i++) b[i]=ff[n-i];\n\tNTT(a,LEN,1);NTT(b,LEN,1);\n\tfor(int i=0;i<LEN;i++) h[i]=1ll*a[i]*b[i]%MOD;\n\tNTT(h,LEN,-1);\n\tfor(int i=1;i<=n;i++){\n\t\tprintf(\"%d\\n\",(1ll*n*calc(n,i)%MOD-1ll*ff[i]*h[n+i]%MOD+MOD)%MOD);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1609642728,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 AT2064 \u3010[AGC005F] Many Easy Problems\u3011"
    },
    {
        "content": "\u795e\u5947\u9898\u76ee\uff0c\u6ca1\u60f3\u5230\u7b97\u8d21\u732e\u7684\u6211\u745f\u745f\u53d1\u6296...\n\n\u53d1\u73b0\u8fd9\u79cd\u7ec4\u5408\u9898\u770b\u522b\u4eba\u7684\u63a8\u5bfc\u8fc7\u7a0b\u5f88\u8f7b\u677e\uff0c\u4f46\u8003\u573a\u4e0a\u5374\u5f88\u96be\u60f3\u5230...\n\n------------\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u8fd9\u4e48\u505a\uff1a\n\n#### \u5bf9\u4e8e\u8981\u6c42\u7684\u6bcf\u4e00\u4e2a$f(k)$\uff0c\u679a\u4e3e\u6240\u6709\u70b9\u5bf9\u5b83\u7684\u8d21\u732e\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u70b9$i$\uff0c\u9996\u5148\u6211\u4eec\u77e5\u9053\uff0c\u5927\u5c0f\u4e3a$k$\u7684\u70b9\u96c6\u4e0d\u5305\u542b$i$\u70b9\u7684\u5145\u8981\u6761\u4ef6\u662f\uff1a\n\n\u6240\u6709$k$\u4e2a\u70b9\u90fd\u5728**\u4ee5$i$\u7684\u513f\u5b50\u4e3a\u6839**\u7684\u5b50\u6811\u5185\uff08**\u4ee5$i$\u4e3a\u6811\u6839**\uff09\u3002\n\n\u7136\u540e\u6211\u4eec\u5bb9\u65a5\u4e00\u4e0b\uff0c\u5c31\u53ef\u4ee5\u63a8\u51fa\u5f0f\u5b50\uff1a\n\n\u5176\u4e2d$\\text{size}$\u8868\u793a\u5b50\u6811\u5927\u5c0f\uff08\u4ee5$i$\u4e3a\u6839\u7684\u60c5\u51b5\u4e0b\uff09\u3002\n\n$$f(k)=\\sum_{i=1}^n(C_n^k-\\sum_{u\\in \\text{son}_i}C_{\\text{size}_u}^k)$$\n\n\u524d\u9762\u7684\u4e1c\u897f\u5f88\u597d\u6c42\uff0c\u6211\u4eec\u770b\u770b\u540e\u9762\u7684\uff0c\u8bbe\n\n$$g(k)=\\sum_{i=1}^n\\sum_{u\\in \\text{son}_i}C_{\\text{size}_u}^k$$\n\n\u73b0\u5728\u6bd4\u8f83\u9ebb\u70e6\uff0c\u8fd9\u4e2a\u4e1c\u897f\u975e\u5e38\u7684\u70e6\u4eba\uff0c\u56e0\u4e3a\u6709$2$\u4e2a$\\sum$\u3002\u6211\u4eec\u8003\u8651\u4f7f\u7528\u5957\u8def\uff1a\n\n\u8bbe$\\lambda(j)$\u4e3a\n\n\u5bf9\u4e8e$1\\sim i$\u4e2d**\u6240\u6709\u7684$u$**\uff0c\u5b83\u6240\u6709\u513f\u5b50$v$\uff0c$\\text{size}_v=j$\u7684\u65b9\u6848\u6570\u3002\n\n$$\\therefore g(k)=\\sum_{j=1}^{n}C_j^k\\lambda(j)$$\n\n$$\\therefore g(k)=\\sum_{j=k}^{n}\\frac {j!}{k!(j-k)!}\\lambda(j)$$\n\n$$\\therefore g(k)k!=\\sum_{j=k}^{n}{\\lambda(j)j!}\\frac 1{(j-k)!}$$\n\n\u5f88\u597d\uff0c\u5f97\u5230\u4e86\u6211\u4eec\u559c\u95fb\u4e50\u89c1\u7684\u5377\u79ef\u5f62\u5f0f\u3002\n\n\u8fd9\u9053\u9898\u5c31\u505a\u5b8c\u4e86\u3002\n\n\u7ffb\u8f6c\u7cfb\u6570\u540e\u6c42\u5377\u79ef\u5373\u53ef\u3002\n\n------------\n\n\u5173\u4e8e$\\lambda$\u600e\u4e48\u6c42\uff1f\u6362\u6839 dp \u4e00\u4e0b\u4e0d\u5c31\u597d\u4e86\uff1f\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define ljc 924844033\nusing namespace std;\n#ifdef Fading\n#define gc getchar\n#endif\n#ifndef Fading\ninline char gc(){\n    static char now[1<<16],*S,*T;\n    if (T==S){T=(S=now)+fread(now,1,1<<16,stdin);if (T==S) return EOF;}\n    return *S++;\n}\n#endif\ninline ll read(){\n    register ll x=0,f=1;char ch=gc();\n    while (!isdigit(ch)){if(ch=='-')f=-1;ch=gc();}\n    while (isdigit(ch)){x=(x<<3)+(x<<1)+ch-'0';ch=gc();}\n    return (f==1)?x:-x;\n}\nstruct edge{\n    int to,nxt;\n}e[400001];\nll sz[400001],tot,head[2200001];\ninline void made(int from,int to){\n    e[++tot].to=to;e[tot].nxt=head[from];head[from]=tot;\n}\nll n,w[2200001],C[1000001],inv[1000001],fac[1000001],r[2200001],f[2200001],g[2200001];\ninline ll fast_pow(ll a,ll b,ll p){\n    ll t=1;a%=p;\n    while (b){\n        if (b&1LL) t=t*a%p;\n        b>>=1LL;a=a*a%p;\n    }\n    return t;\n}\ninline void NTT(ll *f,ll lim,ll id){\n    w[0]=1;\n    for (int i=0;i<lim;i++){\n        if (i>r[i]) swap(f[i],f[r[i]]);\n    }\n    for (int len=1;len<lim;len<<=1){\n        ll gen=fast_pow(5,(ljc-1)/(len<<1)*id+ljc-1,ljc);\n        for (int i=1;i<len;i++) w[i]=w[i-1]*gen%ljc;\n        for (int i=0;i<lim;i+=len<<1){\n            ll *f1=f+i,*f2=f1+len;\n            for (int j=0;j<len;j++){\n                ll x=f1[j],y=f2[j]*w[j]%ljc;\n                f1[j]=(x+y)%ljc;\n                f2[j]=(x-y+ljc)%ljc;\n            }\n        }\n    }\n    if (id==1) return;\n    ll INV=fast_pow(lim,ljc-2,ljc);\n    for (int i=0;i<lim;i++) f[i]=f[i]*INV%ljc;\n}\nvoid dfs(int u,int fa){\n    sz[u]=1;\n    for (int i=head[u];i;i=e[i].nxt){\n        int v=e[i].to;\n        if (v==fa) continue;\n        dfs(v,u);sz[u]+=sz[v];g[sz[v]]++;\n    }\n    g[n-sz[u]]++;\n}\ninline ll getC(ll n,ll m){\n    return fac[n]*inv[m]%ljc*inv[n-m]%ljc;\n}\nsigned main(){\n    n=read();\n    fac[0]=inv[0]=inv[1]=1;\n    for (ll i=1;i<=n;i++) fac[i]=fac[i-1]*i%ljc;\n    for (ll i=2;i<=n;i++) inv[i]=(ljc-(ljc/i)*inv[ljc%i]%ljc)%ljc;\n    for (ll i=1;i<=n;i++) inv[i]=inv[i-1]*inv[i]%ljc;\n    for (int i=1;i<n;i++){\n    \tint x=read(),y=read();\n    \tmade(x,y);made(y,x);\n    }\n    dfs(1,0);\n    g[0]=0;\n    for (int i=1;i<=n;i++) C[i]=n*getC(n,i)%ljc;\n    for (int i=1;i<=n;i++) g[i]=g[i]*fac[i]%ljc;\n    for (int i=0;i<=n;i++) f[i]=inv[i];\n    reverse(g,g+1+n);\n    ll lim=1,len=0;\n    n++;\n    while (lim<=(n<<1)) lim<<=1,len++;\n    for (int i=0;i<lim;i++) r[i]=(r[i>>1]>>1)|((i&1)<<(len-1));\n    NTT(f,lim,1);NTT(g,lim,1);\n    for (int i=0;i<lim;i++) f[i]=f[i]*g[i]%ljc;\n    NTT(f,lim,-1);\n    n--;\n    for (int i=1;i<=n;i++) f[i]=f[i]*inv[n-i]%ljc;\n    for (int i=1;i<=n;i++) printf(\"%lld\\n\",(C[i]-f[n-i]+ljc)%ljc);\n    return 0;\n}\n\n\n```\n\n\u987a\u624b$rank2$\uff08\u9003",
        "postTime": 1563075831,
        "uid": 20309,
        "name": "Fading",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 AT2064 \u3010Many Easy Problems\u3011"
    },
    {
        "content": "\u8003\u8651\u6bcf\u4e2a\u70b9 $x$ \u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u5373\u603b\u65b9\u6848\u6570\u51cf\u53bb\u4e0d\u5408\u6cd5\u65b9\u6848\u6570\uff0c\u5f97\uff1a\n$$\n\\large\\begin{aligned}\n\nf_i&=\\sum_{x=1}^n\\left(\\binom{n}{i}-\\sum_{\\exists e(x,y)} \\binom{size_y}{i}\\right) \\\\\n\n&=n\\binom{n}{i}-\\sum_{x=1}^n\\sum_{\\exists e(x,y)} \\binom{size_y}{i} \\\\\n\n\\end{aligned}\n$$\n\u8bbe $cnt_i$ \u4e3a\u5b50\u6811\u5927\u5c0f\u4e3a $i$ \u7684\u5b50\u6811\u4e2a\u6570\uff0c\u5f97\uff1a\n$$\n\\large\\begin{aligned}\n\nf_i&=n\\binom{n}{i}-\\sum_{j=i}^n cnt_j\\binom{j}{i} \\\\\n\n&=n\\binom{n}{i}-\\sum_{j=i}^n cnt_j\\frac{j!}{i!(j-i)!} \\\\\n\n&=n\\binom{n}{i}-\\frac{1}{i!}\\sum_{j=i}^n \\frac{cnt_jj!}{(j-i)!} \\\\\n\n&=n\\binom{n}{i}-\\frac{1}{i!}\\sum_{j=0}^{n-i} \\frac{cnt_{i+j}(i+j)!}{j!} \\\\\n\n\\end{aligned}\n$$\n\u53d1\u73b0\u7b2c\u4e8c\u9879\u662f\u4e00\u4e2a\u51cf\u6cd5\u5377\u79ef\u7684\u5f62\u5f0f\uff0c\u7528 $NTT$ \u5373\u53ef\u6c42\u89e3\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 800010\n#define P 924844033\n#define G 5\nusing namespace std;\ntypedef long long ll;\ntemplate<typename T> inline void read(T &x)\n{\n    x=0;char c=getchar();bool flag=false;\n    while(!isdigit(c)){if(c=='-')flag=true;c=getchar();}\n    while(isdigit(c)){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n    if(flag)x=-x;\n}\nll n;\nll rev[maxn],f[maxn],g[maxn],fac[maxn],ifac[maxn],siz[maxn],cnt[maxn];\nstruct edge\n{\n    int to,nxt;\n}e[maxn];\nint head[maxn],edge_cnt;\nvoid add(int from,int to)\n{\n    e[++edge_cnt]={to,head[from]},head[from]=edge_cnt;\n}\nll qp(ll x,ll y)\n{\n    ll v=1;\n    while(y)\n    {\n        if(y&1) v=v*x%P;\n        x=x*x%P,y>>=1;\n    }\n    return v;\n}\nint calc(int n)\n{\n    int lim=1;\n    while(lim<=n) lim<<=1;\n    for(int i=0;i<lim;++i)\n        rev[i]=(rev[i>>1]>>1)|((i&1)?lim>>1:0);\n    return lim;\n}\nvoid NTT(ll *a,int lim,int type)\n{\n    for(int i=0;i<lim;++i)\n        if(i<rev[i])\n            swap(a[i],a[rev[i]]);\n    for(int len=1;len<lim;len<<=1)\n    {\n        ll wn=qp(G,(P-1)/(len<<1));\n        for(int i=0;i<lim;i+=len<<1)\n        {\n            ll w=1;\n            for(int j=i;j<i+len;++j,w=w*wn%P)\n            {\n                ll x=a[j],y=w*a[j+len]%P;\n                a[j]=(x+y)%P,a[j+len]=(x-y+P)%P;\n            }\n        }\n    }\n    if(type==1) return;\n    ll inv=qp(lim,P-2);\n    for(int i=0;i<lim;++i) a[i]=a[i]*inv%P;\n    reverse(a+1,a+lim);\n}\nvoid mul(ll *f,ll *g)\n{\n    int lim=calc(n<<1);\n    NTT(f,lim,1),NTT(g,lim,1);\n    for(int i=0;i<lim;++i) f[i]=f[i]*g[i]%P;\n    NTT(f,lim,-1);\n}\nvoid dfs(int x,int fa)\n{\n    siz[x]=1;\n    for(int i=head[x];i;i=e[i].nxt)\n    {\n        int y=e[i].to;\n        if(y==fa) continue;\n        dfs(y,x),siz[x]+=siz[y];\n    }\n    cnt[siz[x]]++,cnt[n-siz[x]]++;\n}\nll C(ll n,ll m)\n{\n    return fac[n]*ifac[m]%P*ifac[n-m]%P;\n}\nvoid init()\n{\n    fac[0]=ifac[0]=1;\n    for(int i=1;i<=n;++i) fac[i]=fac[i-1]*i%P;\n    ifac[n]=qp(fac[n],P-2);\n    for(int i=n-1;i;--i) ifac[i]=ifac[i+1]*(i+1)%P;\n}\nint main()\n{\n    read(n),init();\n    for(int i=1;i<n;++i)\n    {\n        int x,y;\n        read(x),read(y);\n        add(x,y),add(y,x);\n    }\n    dfs(1,0),g[0]=1;\n    for(int i=1;i<=n;++i) f[i]=cnt[n-i]*fac[n-i]%P,g[i]=ifac[i];\n    mul(f,g),reverse(f,f+n+1);\n    for(int i=1;i<=n;++i) printf(\"%lld\\n\",(n*C(n,i)%P-ifac[i]*f[i]%P+P)%P);\n    return 0;\n}\n```",
        "postTime": 1600518732,
        "uid": 172489,
        "name": "lhm_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 AT2064 \u3010[AGC005F] Many Easy Problems\u3011"
    },
    {
        "content": "\u6807\u7b7e: NTT, \u751f\u6210\u51fd\u6570.\n\n$S_T$ \u8868\u793a\u5305\u542b\u70b9\u96c6 $T$ \u6240\u6709\u70b9\u7684\u6700\u5c0f\u8fde\u901a\u5757.\n\n#### Part1\n\n\u8003\u8651\u6c42 $f(k)$, \u70b9 $u$ \u8981\u662f\u5728\u67d0\u79cd\u9009\u62e9\u65b9\u6848 $T$ \u4e2d\u6ca1\u6709\u8d21\u732e(\u5373 $u\\notin S_T$) ,  \u5219\u9009\u62e9\u7684\u6240\u6709\u70b9\u90fd\u5728 \u4ee5 $u$ \u4e3a\u6839, $u$ \u7684\u67d0**\u4e00\u4e2a**\u513f\u5b50 $v$ \u7684\u5b50\u6811\u5185, \u6240\u4ee5 $u$ \u7684\u8d21\u732e\u5373\u4e3a ${n\\choose k}-\\sum_v{sz_v\\choose k}$ , \u6211\u4eec\u53ef\u4ee5\u5c06\u51cf\u53bb\u90e8\u5206\u7684\u8d21\u732e\u653e\u5728\u8fb9\u4e0a. \u4ee5\u4efb\u610f\u7684\u70b9\u4e3a\u6839, \u51cf\u53bb\u7684\u90e8\u5206\u5373\u4e3a $g(k)=\\sum_{u\\neq root} {sz_u\\choose k}+{n-sz_u\\choose k}$.\n\n\u6240\u4ee5 $f(k)=n{n\\choose k}-\\sum_{u\\neq root} {sz_u\\choose k}+{n-sz_u\\choose k}$ , \u9884\u5904\u7406\u9636\u4e58\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a $\\mathcal  O(n^2)$ \u7684\u7b97\u6cd5, \u8fd8\u4e0d\u591f\u4f18\u79c0.\n\n#### Part2\n\n\u53d1\u73b0\u74f6\u9888\u5728\u4e8e\u51cf\u53bb\u7684\u90a3\u4e00\u90e8\u5206, \u89c2\u5bdf\u51cf\u53bb\u7684\u90e8\u5206, \u51cf\u53bb\u7684\u8d21\u732e\u90fd\u662f $x\\choose k$ \u7684\u5f62\u5f0f, \u4ece\u8fd9\u91cc\u5165\u624b\u8fdb\u884c\u4f18\u5316.\n\n\u5b9a\u4e49 $cnt_x$ \u8868\u793a $x\\choose k$ \u88ab\u51cf\u53bb\u4e86\u591a\u5c11\u6b21, \u5219 $g(k)=\\sum_{x=1}^{n-1}cnt_x{x\\choose k} = \\frac{1}{k!}\\sum_{x=1}^{n-1}cnt_xx!\\frac{1}{(x-k)!}$ , \u8fd9\u4e2a\u5f0f\u5b50\u5f88\u5bb9\u6613\u5316\u4e3a\u5377\u79ef\u7684\u5f62\u5f0f\u6c42\u89e3.\n\n\u5177\u4f53\u7684, \u8bbe $a_x=cnt_xx!,b_{n-x-1}=\\frac{1}{x!}$ , \u5219 $g(k)=\\frac{1}{k!}\\sum_{x=1}^{n-1}a_xb_{n-x+k-1}$.\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n\\log n)$ .(\u9ed1\u9898\u4e4b\u803b\u5c31\u662f\u4f60\u54d2)\n\n```cpp\n#include <bits/stdc++.h>\n#define mod 924844033\nusing namespace std;\nint read();\nint M(int x) { return x >= mod ? x - mod : x; }\nint fsp(int bs, int p) {\n    int rt = 1;\n    while (p) {\n        if (p & 1) rt = 1ll * rt * bs % mod;\n        bs = 1ll * bs * bs % mod, p >>= 1;\n    }\n    return rt;\n}\n\nint n;\n\nint fac[200005], caf[200005];\nvoid init() {\n    int lim = 200000;\n    fac[0] = 1;\n    for (int i = 1; i <= lim; ++i) fac[i] = 1ll * fac[i - 1] * i % mod;\n    caf[lim] = fsp(fac[lim], mod - 2);\n    for (int i = lim; i >= 1; --i) caf[i - 1] = 1ll * caf[i] * i % mod;\n}\nint C(int x, int y) { return 1ll * fac[x] * caf[y] % mod * caf[x - y] % mod; }\n\nvector<int> e[200005];\nvoid add(int u, int v) { e[u].push_back(v), e[v].push_back(u); }\nint cnt[200005];\nint dfs(int u, int fa) {\n    int sz = 1;\n    for (int i = 0, v, t; i < e[u].size(); ++i)\n        if ((v = e[u][i]) != fa) ++cnt[t = dfs(v, u)], ++cnt[n - t], sz += t;\n    return sz;\n}\nint rtt[600005];\nvoid getrtt(int len, int w) {\n    for (int i = 1; i < len; ++i) rtt[i] = (rtt[i >> 1] >> 1) | ((i & 1) << w);\n}\nstruct Poly {\n    int x[600005];\n    int &operator[](int p) { return x[p]; }\n    void ntt(int len) {\n        for (int i = 1; i < len; ++i)\n            if (rtt[i] > i) swap(x[i], x[rtt[i]]);\n        for (int l = 2; l <= len; l <<= 1) {\n            int m = l >> 1, O = fsp(5, (mod - 1) / l);\n            for (int i = 0; i < len; i += l)\n                for (int j = i, tO = 1, t; j < i + m; ++j) {\n                    t = 1ll * x[j + m] * tO % mod;\n                    x[j + m] = M(x[j] - t + mod), x[j] = M(x[j] + t);\n                    tO = 1ll * tO * O % mod;\n                }\n        }\n    }\n\n    void idft(int len) {\n        ntt(len), reverse(x + 1, x + len);\n        int ny = fsp(len, mod - 2);\n        for (int i = 0; i < len; ++i) x[i] = 1ll * x[i] * ny % mod;\n    }\n} a, b;\n\nint main() {\n    n = read(), init();\n    for (int i = 1, u, v; i < n; ++i) u = read(), v = read(), add(u, v);\n    dfs(1, 0);\n    for (int i = 1; i < n; ++i) a[i] = 1ll * cnt[i] * fac[i] % mod;\n    for (int i = 0; i < n; ++i) b[n - i - 1] = caf[i];\n\n    int len = 2, w = 1;\n    while (len < (n << 1)) len <<= 1, ++w;\n    getrtt(len, w - 1), a.ntt(len), b.ntt(len);\n    for (int i = 0; i < len; ++i) a[i] = 1ll * a[i] * b[i] % mod;\n    a.idft(len);\n\n    for (int i = 1; i <= n; ++i) {\n        printf(\"%d\\n\", M(1ll * n * C(n, i) % mod -\n                         1ll * a[n + i - 1] * caf[i] % mod + mod));\n    }\n    return 0;\n}\n\nint read() {\n    int x = 0, f = 1;\n    char c = getchar();\n    while (c < '0' || c > '9') f = (c == '-') ? -1 : f, c = getchar();\n    while (c >= '0' && c <= '9') x = x * 10 + c - '0', c = getchar();\n    return x * f;\n}\n```\n\n",
        "postTime": 1576556248,
        "uid": 51237,
        "name": "Kinandra",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT2064 \u3010Many Easy Problems\u3011"
    },
    {
        "content": "~~\u6ce8\u610f\u5230\u6a21\u6570\u4e3a$441\\cdot 2^{21}+1$\uff0c\u563f\u563f~~\n\n\u9996\u5148\u8981\u60f3\u5230\u8003\u8651\u8d21\u732e\uff0c\u7136\u540e\u8fd9\u9898\u5c31\u7b80\u5355\u4e86\u3002\n\n\u8bbe\u5f53\u524d\u8981\u7b97\u7684\u4e3a$f(i)$\uff0c\u6211\u4eec\u8003\u8651\u7b2c$x$\u4e2a\u70b9\u7684\u8d21\u732e\uff0c\u663e\u7136\u53ef\u4ee5\u5f97\u5230\u8d21\u732e\u4e3a\uff1a\n$$\\binom{n}{i}-\\sum_{v\\in son_{x}}\\binom{sz_v}{i}$$\n\u5c31\u662f\u6240\u6709\u7684\u65b9\u6848\u51cf\u53bb\u8fd9\u4e2a\u70b9\u9009\u4e0d\u5230\u7684\u65b9\u6848\uff0c\u5176\u4e2d$sz_v$\u8868\u793a\u4ee5$x$\u4e3a\u6839$v$\u7684$\\rm size$\u3002\n\n\u7136\u540e\u7d2f\u548c\uff1a\n$$f(i)=\\sum_{x=1}^{n}\\left(\\binom{n}{i}-\\sum_{v\\in son_{x}}\\binom{sz_v}{i}\\right)$$\n$$=n\\binom{n}{i}-\\sum_{x=1}^{n}\\sum_{v\\in son_x}\\binom{sz_v}{i}$$\n\u540e\u9762\u90a3\u5757\u4e0d\u597d\u5904\u7406\uff0c\u6211\u4eec\u53ef\u4ee5\u8bb0\u4e2a\u6876$cnt(s)$\u8868\u793a\u5927\u5c0f\u4e3a$s$\u7684\u5b50\u6811\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\uff0c\u8fd9\u4e2a\u4e00\u904d$\\rm dfs$\u5c31\u53ef\u4ee5\u7b97\u51fa\u6765\u3002\n\n\u90a3\u4e48\u628a\u5f0f\u5b50\u5316\u4e00\u4e0b\uff1a\n$$f(i)=n\\binom{n}{i}-\\sum_{j=1}^{n}cnt(j)\\binom{j}{i}$$\n$$=n\\binom{n}{i}-\\frac{1}{i!}\\sum_{j=i}^{n}\\frac{cnt(j)j!}{(j-i)!}$$\n\u6ce8\u610f\u5230\u540e\u9762\u53ef\u4ee5\u8f6c\u5316\u4e3a\u5377\u79ef\u7684\u5f62\u5f0f\uff0c\u8bbe\uff1a\n$$g(i)=cnt(i)i!,h(i)=\\frac{1}{i!}$$\n\u540e\u9762\u7684$\\sum$\u5c31\u662f\uff1a\n$$\\sum_{j=i}^{n}g(j)h(j-i)=\\sum_{j=0}^{n-i}g(j-i)h(j)$$\n\u6211\u4eec$\\rm reverse$\u4e00\u4e0b$g$\uff1a\n$$\\sum_{j=0}^{n-i}g_R((n-i)-j)h(j)$$\n$NTT$\u4f18\u5316\u5c31\u597d\u4e86\uff0c\u590d\u6742\u5ea6$O(n\\log n)$\u3002\n\n\u6ce8\u610f\u8fd9\u4e2a\u795e\u5947\u7684\u6a21\u6570\u539f\u6839\u662f$5$\uff0c\u6211\u4e00\u5f00\u59cb\u5199\u6210$3$\u8fd8\u4ee5\u4e3a\u662f$NTT$\u6302\u4e86...\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nvoid read(int &x) {\n    x=0;int f=1;char ch=getchar();\n    for(;!isdigit(ch);ch=getchar()) if(ch=='-') f=-f;\n    for(;isdigit(ch);ch=getchar()) x=x*10+ch-'0';x*=f;\n}\n\nvoid print(int x) {\n    if(x<0) putchar('-'),x=-x;\n    if(!x) return ;print(x/10),putchar(x%10+48);\n}\nvoid write(int x) {if(!x) putchar('0');else print(x);putchar('\\n');}\n\n#define lf double\n#define ll long long\n#define end puts(\"NO\"),exit(0)\n\nconst int maxn = 1e6+10;\nconst int inf = 1e9;\nconst lf eps = 1e-8;\nconst int mod = 924844033;\n\nint add(int x,int y) {return x+y>mod?x+y-mod:x+y;}\nint del(int x,int y) {return x-y<0?x-y+mod:x-y;}\nint mul(int x,int y) {return 1ll*x*y-1ll*x*y/mod*mod;}\n\nint qpow(int a,int x) {\n    int res=1;\n    for(;x;x>>=1,a=mul(a,a)) if(x&1) res=mul(a,res);\n    return res;\n}\n\nint fac[maxn],ifac[maxn],inv[maxn],pos[maxn],N,mxn,bit,n;\nint w[maxn],rw[maxn],f[maxn],g[maxn],h[maxn],head[maxn],tot,sz[maxn];\nstruct edge{int to,nxt;}e[maxn<<1];\n\nvoid ins(int u,int v) {e[++tot]=(edge){v,head[u]},head[u]=tot;}\n\nvoid dfs(int x,int fa) {\n    sz[x]=1;\n    for(int i=head[x];i;i=e[i].nxt) \n        if(e[i].to!=fa) dfs(e[i].to,x),sz[x]+=sz[e[i].to],g[sz[e[i].to]]++;\n    g[n-sz[x]]++;\n}\n\nvoid ntt_init() {\n    w[0]=rw[0]=1,w[1]=qpow(5,(mod-1)/mxn);\n    for(int i=2;i<=mxn;i++) w[i]=mul(w[i-1],w[1]);\n    rw[1]=qpow(w[1],mod-2);\n    for(int i=2;i<=mxn;i++) rw[i]=mul(rw[i-1],rw[1]);\n}\n\nvoid ntt_get(int len) {\n    for(bit=0,N=1;N<=len;N<<=1,bit++);\n    for(int i=0;i<N;i++) pos[i]=pos[i>>1]>>1|((i&1)<<(bit-1));\n}\n\nvoid ntt(int *r,int op) {\n    for(int i=1;i<N;i++) if(pos[i]>i) swap(r[i],r[pos[i]]);\n    for(int i=1,d=mxn>>1;i<N;i<<=1,d>>=1) \n        for(int j=0;j<N;j+=i<<1) \n            for(int k=0;k<i;k++) {\n                int x=r[j+k],y=mul((op==-1?rw:w)[k*d],r[i+j+k]);\n                r[j+k]=add(x,y),r[i+j+k]=del(x,y);\n            }\n    if(op==-1) {int d=qpow(N,mod-2);for(int i=0;i<N;i++) r[i]=mul(r[i],d);}\n}\n\nint main() {\n    read(n);for(int x,y,i=1;i<n;i++) read(x),read(y),ins(x,y),ins(y,x);\n    dfs(1,0);fac[0]=ifac[0]=inv[0]=inv[1]=1;\n    for(int i=1;i<=n;i++) fac[i]=mul(fac[i-1],i);\n    for(int i=2;i<=n;i++) inv[i]=mul(mod-mod/i,inv[mod%i]);\n    for(int i=1;i<=n;i++) ifac[i]=mul(ifac[i-1],inv[i]);\n    for(int i=0;i<=n;i++) h[i]=ifac[i],g[i]=mul(g[i],fac[i]);\n    g[0]=0;\n    \n    reverse(g,g+n+1);for(mxn=1;mxn<=n<<1;mxn<<=1);\n    ntt_init(),ntt_get(n<<1),ntt(g,1),ntt(h,1);\n    for(int i=0;i<N;i++) f[i]=mul(g[i],h[i]);\n    ntt(f,-1);\n    for(int i=1;i<=n;i++) write(del(mul(n,mul(fac[n],mul(ifac[i],ifac[n-i]))),mul(ifac[i],f[n-i])));\n    return 0;\n}\n```",
        "postTime": 1555380200,
        "uid": 50777,
        "name": "Hyscere",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT2064 \u3010Many Easy Problems\u3011"
    },
    {
        "content": "\u7ed9\u5b9a\u4e00\u68f5\u65e0\u6839\u6811\uff0c\u5b9a\u4e49 $f(i)$\uff0c\u5bf9\u4e8e\u6240\u6709\u5927\u5c0f\u4e3a $i$ \u7684\u70b9\u96c6\uff0c\u6c42\u51fa\u80fd\u591f\u5305\u542b\u5b83\u7684\u6700\u5c0f\u8fde\u901a\u5757\u5927\u5c0f\u4e4b\u548c\u3002\u5bf9\u4e8e $i=1 \\to n$ \u7684\u6240\u6709 $i$\uff0c\u6c42\u51fa $$f(i)$$\u3002\n\n---------------\n\n\u5b9a\u4e49 $s_i$ \u8868\u793a $i$ \u53f7\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u5927\u5c0f\u3002\n\n\u5f53\u6211\u4eec\u7edf\u8ba1\u6811\u4e0a\u8def\u5f84\u957f\u5ea6\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u5bf9\u6bcf\u4e00\u6761\u8fb9\u8003\u8651\u5b83\u88ab\u7ecf\u8fc7\u4e86\u591a\u5c11\u6b21\u3002\n\n\u540c\u6837\u7684\uff0c\u7edf\u8ba1\u8fde\u901a\u5757\u5927\u5c0f\uff0c\u6211\u4eec\u5c31\u5bf9\u6bcf\u4e00\u4e2a\u70b9\u8003\u8651\u5b83\u88ab\u7ecf\u8fc7\u4e86\u591a\u5c11\u6b21\u3002\n\n\u5728\u4e00\u68f5 $n$ \u4e2a\u70b9\u7684\u6811\u4e0a\uff0c\u9009\u51fa $k$ \u4e2a\u70b9\uff0c\u603b\u5171\u6709 $C(n,k)$ \u79cd\u65b9\u6848\u3002\u4f46\u662f\u6709\u4e24\u79cd\u60c5\u51b5\u9700\u8981\u820d\u53bb\uff1a\u70b9\u5728\u4e0a\u9762\u9009\u548c\u5728\u4e0b\u9762\u9009\u3002\uff08\u6ce8\u610f\u9009\u81ea\u5df1\u8fd9\u4e2a\u70b9\u4e5f\u7b97\u662f\u5728\u4e0b\u9762\uff09\n\n\u5728\u4e0a\u9762\u9009\u7684\u65b9\u6848\u6570\u4e3a $C(n,n-s_x)$\n\n\u5728\u4e0b\u9762\u9009\u7684\u65b9\u6848\u6570\u4e3a\n\n$$\\sum_ {y \\in x}C(n,s_y)$$\n\n\u4e5f\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u5b50\u6811\u90fd\u8981\u8ba1\u7b97\u7b54\u6848\u3002\u8981\u4e0d\u7136\u4f1a\u7b97\u6f0f\u3002\n\n\u90a3\u4e48\u4e00\u4e2a\u8282\u70b9 $x$ \u5728 $i=k$ \u7684\u65f6\u5019\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a\uff1a\n$$\nC(n,k) - \\sum_{y \\in x}C(n,s_y)- C(n,n-s_x)\n$$\n\u8003\u8651 $C(n,k)$ \u8fd9\u4e00\u9879\uff0c\u5728\u7b54\u6848\u91cc\u4f1a\u5e26\u4e2a\u7cfb\u6570 $a_i$\u3002\n\n\u6ce8\u610f\u5230\u65e0\u8bba $k$ \u600e\u4e48\u6539\u53d8\uff0c\u7cfb\u6570\u662f\u4e0d\u4f1a\u53d8\u7684\u3002\u56e0\u4e3a\u8d21\u732e\u5f0f\u5bf9\u7cfb\u6570\u7684\u8ba1\u7b97\u4e0e $k$ \u65e0\u5173\u3002\u8be5\u679a\u4e3e\u7684\u8fd8\u662f\u8981\u679a\u4e3e\u3002\n\n\u8fd9\u6837\u628a\u4e00\u4e2a\u70b9\u7684\u8d21\u732e\u62c6\u6210\u82e5\u5e72\u4e2a\u7ec4\u5408\u6570\u4e4b\u548c\u3002\u90a3\u4e48\u5bf9\u4e8e $i=k$\uff0c\u5b83\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5c31\u662f\uff1a\n$$\n\\sum_{x=k}^n a_x \\times C(n,x)\n$$\n\u4e5f\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5927\u5c0f\u5927\u4e8e $k$ \u7684\u6811\u90fd\u8981\u8ba1\u7b97\u7b54\u6848\u3002\n\n\u53d1\u73b0\u8fd9\u6837\u5b50\u8ba1\u7b97\u662f $n^2$ \u7684\u3002\u8003\u8651\u5316\u7b80\u8fd9\u4e2a\u5f0f\u5b50\u3002\n$$\n\\sum_{x=k}^na_x \\times \\frac{x!}{k!(x-k)!} \n$$\n\n$$\n\\frac{1}{k!}\\sum_{x=k}^n (a_x \\times x!) \\times \\frac{1}{(x-k)!}\n$$\n\n\u8bb0 $F(x)=a_x \\times x!$\uff0c$G(x)=\\frac{1}{(x-k)!}$ (\u6ce8\u610f\u8fd9\u91cc\u662f\u6570\u7ec4\u7ffb\u8f6c\u540e\u5f97\u5230\u7684\u7ed3\u679c\u3002)\n\n\u628a $G(x)$ \u7ffb\u8f6c\u4e00\u4e0b\uff0c\u5f97\u5230 $G(n-x)$\uff0c\u8fd9\u6837\u5c31\u80fd\u5377\u79ef\u4e86\u3002\n\n\u8fd9\u662f\u4e00\u4e2a\u5377\u79ef\u7684\u5f62\u5f0f\uff0c\u53ef\u4ee5\u76f4\u63a5\u8ba1\u7b97\u3002\u8bb0\u7b54\u6848\u4e3a $A(x)\u200b$\n\n\u4e5f\u5c31\u662f\uff1a\n$$\nA(k)=\\sum_{x+y=k}F(x)*G(y)\n$$\n\n\u5206\u6790\u4e00\u4e0b\u6307\u6570\uff1a $F(x)$ \u7684\u6307\u6570\u4e3a $x$\uff0c$G(n-x)$ \u7684\u6307\u6570\u4e3a $n-x+k$\n\n\u76f8\u52a0\u540e\u5f97\u5230 $n+k$\n\n\u90a3\u4e48 $i=k$ \u65f6\u6211\u4eec\u8981\u8ba1\u7b97\u5165\u7b54\u6848\u7684\u7cfb\u6570\u4e3a $A(n+k)$\n\n\u8fd9\u6837\u5f97\u5230 $f(i)$ \u7684\u8ba1\u7b97\u5f0f\uff1a\n$$\nf(i)=\\frac{1}{i!} \\times A(i+k)\n$$\n\n-----------------\n\n\u8fd8\u6709\u4e00\u4e9b\u5c0f\u95ee\u9898\u3002\u6bd4\u5982\u6a21\u6570\u662f $924844033$\n\n\u539f\u6839\u4e0d\u662f $3$\u3002\u7b80\u6613\u63a8\u5bfc\u4e00\u4e0b\uff1a\n\n> $g^{k} = 1 \\pmod p$ \u5f53\u4e14\u4ec5\u5f53 $k=p-1$ \u65f6\u6210\u7acb\uff0c\u5219\u79f0 $g$ \u662f $p$ \u7684\u539f\u6839\u3002 \n\n\u6839\u636e\u539f\u6839\u7684\u9a8c\u8bc1\u65b9\u6cd5\uff0c\u6211\u4eec\u679a\u4e3e $g=2,3,4,5,6$ \u6765\u9a8c\u8bc1\u3002\n\n$g=2$\u3002\u5199\u7a0b\u5e8f\u9a8c\u8bc1\u5f97\u5f53 $k=77070336$ \u65f6\u539f\u5f0f\u4e5f\u6210\u7acb\uff0c\u6240\u4ee5\u4e0d\u662f\u539f\u6839\u3002\n\n$g=3$\u3002\u5199\u7a0b\u5e8f\u9a8c\u8bc1\u5f97\u5f53 $k=7340032$ \u65f6\u539f\u5f0f\u4e5f\u6210\u7acb\uff0c\u6240\u4ee5\u4e0d\u662f\u539f\u6839\u3002\n\n$g=4$\u3002\u5199\u7a0b\u5e8f\u9a8c\u8bc1\u5f97\u5f53 $k= 38535168$ \u65f6\u539f\u5f0f\u4e5f\u6210\u7acb\uff0c\u6240\u4ee5\u4e0d\u662f\u539f\u6839\u3002\n\n$g=5$\uff0c\u53d1\u73b0\u53ea\u6709\u5f53 $k=p-1$ \u624d\u6210\u7acb\uff0c\u6240\u4ee5\u8fd9\u9053\u9898\u7684\u539f\u6839\u8bbe\u7f6e\u4e3a $5$\n\n~~\u5199\u7a0b\u5e8f\u679a\u4e3e\u539f\u6839\u7684\u662f\u4e0d\u662f\u5c31\u6211\u4e00\u4e2a\u4eba\u554aqwq\uff0c\u5e94\u8be5\u6709\u66f4\u5feb\u6377\u7684\u65b9\u6cd5\u5427~~\n\n```\n#include <bits/stdc++.h>\n\n#define int long long\n\nconst int Mod = 924844033;\nconst int G = 5;\nconst int MaxN = 3e6 + 10;\n\nstruct Edge {\n    int To, Next;\n}Road[MaxN];\n\nint N, M;\nint Cnt = 0, Last[MaxN];\n\nvoid Add(int U, int V) {\n    Road[++Cnt] = (Edge) {V, Last[U]};\n    Last[U] = Cnt; \n}\n\nint Size[MaxN];\nint Coe[MaxN];\nusing namespace std;\n\nvoid Dfs(int Now, int Pa) {\n    Coe[N] += 1; Size[Now] = 1;\n    for(int i = Last[Now]; i; i = Road[i].Next) {\n        int To = Road[i].To;\n        if(To ^ Pa) {\n            Dfs(To, Now); \n            Coe[Size[To]] -= 1;\n            if(Coe[Size[To]] < 0) \n                Coe[Size[To]] = (Coe[Size[To]] + Mod) % Mod;\n            Size[Now] += Size[To]; \n        }\n    }\n    Coe[N - Size[Now]] -= 1;\n    if(Coe[N - Size[Now]] < 0) \n        Coe[N - Size[Now]] = (Coe[N - Size[Now]] + Mod) % Mod;\n}\n\nint Kasumi(int A, int B) {\n    int Ans = 1, Base = A;\n    B = (B + (Mod - 1)) % (Mod - 1);\n    while(B) {\n        if(B & 1) Ans = Base * Ans % Mod;\n        Base = Base * Base % Mod;\n        B >>= 1;\n    }\n    return Ans;\n} \n\nint Fac[MaxN], Inv[MaxN];\n\nvoid Init() {\n    Fac[0] = 1; Inv[0] = 1;\n    for(int i = 1; i <= N << 1; i++) Fac[i] = Fac[i - 1] * i % Mod;\n    for(int i = 1; i <= N << 1; i++) Inv[i] = Kasumi(Fac[i], Mod - 2);\n}\n\nint C(int A, int B) {\n    return Fac[A] % Mod * Inv[B] % Mod * Inv[A - B] % Mod;\n} \n\nint Rev[MaxN];\n\n#define Swap(A, B) A ^= B ^= A ^= B\n\nvoid Ntt(int *A, int N, int Flag) {\n    for(int i = 0; i < N; i++) \n        if(i < Rev[i]) Swap(A[i], A[Rev[i]]);\n    for(int i = 1; i < N; i <<= 1) {\n        int W = Kasumi(G, Flag * (Mod - 1) / (i << 1));\n        for(int j = 0; j < N; j += (i << 1)) {\n            int Wn = 1;\n            for(int k = 0; k < i; k++, Wn = Wn * W % Mod) {\n                int x = A[j + k], y = A[i + j + k] * Wn % Mod;\n                A[j + k] = (x + y) % Mod;\n                A[i + j + k] = (x - y + Mod) % Mod;\n            }\n        }\n    }\n    if(!~Flag) {\n        int T = Kasumi(N, Mod - 2);\n        for(int i = 0; i < N; i++) A[i] = A[i] * T % Mod;\n    }\n}\n\nint Ans[MaxN];\nint A[MaxN], B[MaxN];\n\nmain() {\n    scanf(\"%lld\", &N);\n    for(int i = 1, A, B; i <= N - 1; i++) \n        scanf(\"%lld%lld\", &A, &B), Add(A, B), Add(B, A);\n    Init(); Dfs(1, 0);\n    for(int i = 0; i <= N; i++) A[i] = Coe[i] * Fac[i] % Mod, B[i] = Inv[i];\n    std::reverse(B, B + N + 1);\n    int Len = 1, Log = 0;\n    while(Len <= (N << 1)) Len <<= 1, Log += 1;\n    for(int i = 0; i < Len; i++)\n        Rev[i] = (Rev[i >> 1] >> 1) | ((i & 1) << (Log - 1));\n    Ntt(A, Len, 1); Ntt(B, Len, 1);\n    for(int i = 0; i < Len; i++) A[i] = A[i] * B[i] % Mod;\n    Ntt(A, Len, -1);\n    for(int i = 0; i < Len; i++) Ans[i] = A[i];\n    for(int i = 1; i <= N; i++) {\n        int P = Ans[N + i] * Inv[i] % Mod;\n        P = (P + Mod) % Mod;\n        printf(\"%lld\\n\", P % Mod);\n    }\n} \n```\n\n#### \u9644\u5f55\n\n[\u6d1b\u8c37 AT2064 Many Easy Problems](https://www.luogu.org/problemnew/show/AT2064)",
        "postTime": 1555038663,
        "uid": 17757,
        "name": "WhiteEurya",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT2064 \u3010Many Easy Problems\u3011"
    },
    {
        "content": "\u6211\u4e0d\u77e5\u9053\u53d1\u751f\u4e86\u4ec0\u4e48\uff0c\u53ea\u6709\u7b2c\u4e00\u6b21\u63d0\u4ea4\u80fd\u8fc7\uff0c\u4e4b\u540e\u5c31TLE\u4e86\u2026\u2026\n\n\u8003\u8651\u8d21\u732e\uff0c\u5047\u8bbe\u4e00\u5171\u9009\u62e9 $k$ \u4e2a\n\n### \u9009\u4e86\n\n$$\\sum_{i=1}^{n} {n-1 \\choose k-1}$$\n\n### \u6ca1\u9009\n\n$$\\sum_{i=1}^{n}\\sum_{x=1}^{k}{a_i-1 \\choose x}{n-a_i \\choose k-x}$$\n\n### \u7b97\u603b\u8d26\n\n$$\\begin{aligned} f_k =&\\sum_{i=1}^{n} {n-1 \\choose k-1}+\\sum_{i=1}^{n}\\sum_{x=1}^{k}{a_i-1 \\choose x}{n-a_i \\choose k-x}-\\sum_{i \\to j} {a_j \\choose k} \\\\ =&n{n-1 \\choose k-1}+\\sum_{i=1}^{n} {n-1 \\choose k}-{n-a_i \\choose k} -\\sum_{i=2}^{n} {a_i \\choose k} \\\\ =&n \\left({n-1 \\choose k-1}+{n-1 \\choose k}\\right)-\\sum_{i=1}^{n} {n-a_i \\choose k}+ {a_i \\choose k}[i \\ge 2] \\\\ =&n {n \\choose k}-\\sum_{i=1}^{n} {n-a_i \\choose k} + {a_i \\choose k} [i \\ge 2] \\\\ \\end{aligned}$$\n\n\u81f3\u6b64\u53ef\u4ee5\u53d1\u73b0\u53ea\u9700\u8981\u8ba1\u7b97\u4e0b\u9762\u8fd9\u4e2a\u4e1c\u897f\u5c31\u884c\u4e86\uff1a\n\n$$ \\begin{aligned} p_k =&\\sum_{i=1}^{n}{a_i \\choose k} \\\\ \\end{aligned} $$\n\n\u8bbe $c_k=\\sum_{i=1}^{n}[a_i=k]$\n\n$$ \\begin{aligned} p_k = &\\sum_{i \\in V} {v \\choose k}c_v \\\\ = &\\sum_{i \\in V} \\frac{v!}{k!(v-k)!}c_v \\end{aligned} $$\n\n\u6ce8\u610f\u5230\u53ef\u884c\u7684 $a_i$ \u8303\u56f4\u662f $0 \\le a_i \\le 2n$\uff0c\u4e5f\u5c31\u662f\u8bf4\uff1a\n\n$$ \\begin{aligned} k!p_k =&\\sum_{i=0}^{2n}i!c_i\\frac{1}{(i-k)!} \\\\ =&\\sum_{i=0}^{2n}i!c_i\\frac{1}{(i-k)!} \\end{aligned} $$\n\n\u8bbe $X_i=i!c_i,Y_i=(2n-i)!,Z_k=k!p_k$\uff0c\u5219\uff1a\n\n$$Z_k=\\sum_{i=0}^{2n}X_iY_{2n-i+k}$$\n\n\u4ee4 $\\forall t > 2n,X_{t}=0$\uff0c\u5219\u6709\uff1a\n\n$$ \\begin{aligned} Z_{2n+k} =&\\sum_{i=0}^{2n+k}X_iY_{2n-i+k} \\\\ =&\\sum_{i+j=2n+k}X_iY_{j} \\\\ \\end{aligned} $$\n\n\u4e8e\u662f\u5c31\u662f\u4e00\u4e2a\u666e\u901a\u7684\u5377\u79ef\u5f62\u5f0f\u4e86\n\n```\n#include \"bits/stdc++.h\"\nusing namespace std;\ntypedef long long ll;\n\nconst int N = 4e5 + 10, mod = 924844033;\n\nint n, m;\nll f[N], fac[N], invfac[N], a[N], b[N], c[N], d[N], e[N];\nll pw(ll a, ll b) {\n    ll r = 1;\n    for( ; b ; b >>= 1, a = a * a % mod)\n        if(b & 1)\n            r = r * a % mod;\n    return r;\n}\n\nvector<int> g[N]; int fa[N];\n\nvoid dfs(int u, int fa) {\n    :: fa[u] = fa;\n    a[u] = 1;\n    for(int v: g[u]) {\n        if(v == fa) continue;\n        dfs(v, u);\n        a[u] += a[v];\n    }\n}\n\nll C(int n, int m) {\n    return m < 0 || n < m ? 0 : fac[n] * invfac[m] % mod * invfac[n - m] % mod;\n}\n\nll Cn_1k[N];\n\nnamespace CALC {\n    ll p[N], X[N * 10], Y[N * 10], f[N * 10];\n    int a[N], len, inv;\n    const int g[2] = { 5, pw(5, mod - 2) };\n    ll pw(ll a, ll b) {\n        ll r = 1;\n        for( ; b ; b >>= 1, a = a * a % mod)\n            if(b & 1)\n                r = r * a % mod;\n        return r;\n    }\n    int rev(int x, int n) {\n        int res = 0;\n        for(int i = 0 ; (1 << i) < n ; ++ i) {\n            res = (res << 1) | ((x >> i) & 1);\n        }\n        return res;\n    }\n    void ntt(ll *a, int ty, int n) {\n        for(int i = 0 ; i < n ; ++ i) f[rev(i, n)] = a[i];\n        for(int i = 2 ; i <= n ; i <<= 1) {\n            ll wn = pw(g[ty], (mod - 1) / i);\n            for(int j = 0 ; j < n ; j += i) {\n                ll w = 1;\n                for(int k = j ; k < j + i / 2 ; ++ k) {\n                    ll u = f[k], v = w * f[k + i / 2] % mod;\n                    f[k] = (u + v) % mod;\n                    f[k + i / 2] = (u - v) % mod;\n                    w = w * wn % mod;\n                }\n            }\n        }\n        for(int i = 0 ; i < n ; ++ i) {\n            a[i] = f[i];\n            if(ty) a[i] = a[i] * inv % mod;\n        }\n    }\n\n    void init() {\n        len = 1; while(len < 4 * n) len <<= 1;\n        for(int i = 0 ; i <= 2 * n ; ++ i) Y[i] = invfac[2 * n - i];\n        inv = pw(len, mod - 2);\n        ntt(Y, 0, len);\n    }\n    void sol() {\n        int mx = 0;\n        for(int i = 0 ; i < len ; ++ i) X[i] = 0;\n        for(int i = 1 ; i <= n ; ++ i) if(a[i] >= 0) ++ X[a[i]], mx = max(mx, a[i]);\n        for(int i = 0 ; i <= mx ; ++ i) if(X[i]) (X[i] *= fac[i]) %= mod;\n        ntt(X, 0, len);\n        for(int i = 0 ; i < len ; ++ i) (X[i] *= Y[i]) %= mod;\n        ntt(X, 1, len);\n        for(int k = 1 ; k <= m ; ++ k) p[k] = X[2 * n + k] * invfac[k] % mod;\n    }\n}\n\nvoid solf() {\n    CALC :: a[1] = -1;\n    for(int i = 2 ; i <= n ; ++ i) {\n        CALC :: a[i] = a[i];\n    }\n    CALC :: sol();\n    for(int k = 1 ; k <= m ; ++ k) {\n        (f[k] -= CALC :: p[k]) %= mod;\n    }\n    \n    for(int i = 1 ; i <= n ; ++ i) {\n        CALC :: a[i] = n - a[i];\n    }\n    CALC :: sol();\n    for(int k = 1 ; k <= m ; ++ k) {\n        (f[k] -= CALC :: p[k]) %= mod;\n    }\n}\n\nint main() {\n    scanf(\"%d\", &n), m = n;\n    for(int i = 1, u, v ; i < n ; ++ i) {\n        scanf(\"%d%d\", &u, &v);\n        g[u].push_back(v);\n        g[v].push_back(u);\n    }\n    fac[0] = invfac[0] = 1;\n    for(int i = 1 ; i <= n ; ++ i) {\n        fac[i] = fac[i - 1] * i % mod;\n    }\n    invfac[n] = pw(fac[n], mod - 2);\n    for(int i = n - 1 ; i ; -- i) {\n        invfac[i] = invfac[i + 1] * (i + 1) % mod;\n    }\n    dfs(1, 0);\n\n    CALC :: init();\n    solf();\n\n    for(int k = 1 ; k <= m ; ++ k) {\n        (f[k] += n * C(n, k) % mod) %= mod;\n        printf(\"%lld\\n\", (f[k] + mod) % mod);\n    }\n}\n```",
        "postTime": 1549887135,
        "uid": 47111,
        "name": "nekko",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 AT2064 \u3010Many Easy Problems\u3011"
    }
]