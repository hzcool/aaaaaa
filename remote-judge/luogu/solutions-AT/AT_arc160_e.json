[
    {
        "content": "## \u9898\u89e3\n\n\u9996\u5148\uff0c\u6240\u6709\u53f6\u5b50\u8282\u70b9\u4e00\u5b9a\u9700\u8981\u9009\u81f3\u5c11\u4e00\u6b21\uff0c\u56e0\u4e3a\u5982\u679c\u6709\u67d0\u4e2a\u53f6\u5b50\u6ca1\u88ab\u9009\uff0c\u90a3\u4e48\u4e0e\u5b83\u76f8\u8fde\u7684\u90a3\u4e2a\u70b9\u5c31\u4e00\u5b9a\u662f\u5272\u70b9\u3002\u8bbe\u53f6\u5b50\u4e2a\u6570\u4e3a $k$\uff0c\u5bf9 $k$ \u7684\u5947\u5076\u6027\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n- \u6709\u5076\u6570\u4e2a\u53f6\u5b50\uff1a\u4e00\u5b9a\u80fd\u627e\u5230\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9 $u$\uff0c\u4f7f\u5f97\u4ee5 $u$ \u4e3a\u6839\u65f6\uff0c$u$ \u7684\u6240\u6709\u513f\u5b50\u7684\u5b50\u6811\u4e2d\u53f6\u5b50\u8282\u70b9\u7684\u4e2a\u6570\u90fd\u4e0d\u8d85\u8fc7 $\\frac{k}{2}$\u3002\u8fd9\u6837\u5c31\u4e00\u5b9a\u80fd\u7ed9\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9 $x$ \u627e\u5230\u4e00\u4e2a\u4e0e\u5b83\u914d\u5bf9\u7684\u53f6\u5b50 $y$\uff0c\u4f7f\u5f97 $\\operatorname{LCA}(x,y)=u$\u3002\n- \u6709\u5947\u6570\u4e2a\u53f6\u5b50\uff1a\u679a\u4e3e\u4e00\u4e2a\u53f6\u5b50 $x$\uff0c\u5bf9\u4e8e\u5269\u4e0b\u7684 $k-1$ \u4e2a\u53f6\u5b50\u7528\u4e0a\u8ff0\u65b9\u6cd5\u914d\u5bf9\u3002\u8003\u8651\u627e\u5230 $x$ \u5f80\u4e0a\u7684\u7b2c\u4e00\u4e2a\u4e09\u5ea6\u70b9 $v$\uff0c\u90a3\u4e48 $x$ \u80fd\u548c\u9664\u4e86 $x\\leadsto v$ \u8def\u5f84\u4e0a\u7684\u70b9\u4ee5\u5916\u7684\u6240\u6709\u70b9\u914d\u5bf9\u3002\u9009\u53d6\u5176\u4e2d\u70b9\u6743\u6700\u5c0f\u7684\u5373\u53ef\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define For(Ti,Ta,Tb) for(int Ti=(Ta);Ti<=(Tb);++Ti)\n#define Dec(Ti,Ta,Tb) for(int Ti=(Ta);Ti>=(Tb);--Ti)\n#define Debug(...) fprintf(stderr,__VA_ARGS__)\n#define range(Tx) begin(Tx),end(Tx)\nusing ll = long long;\nconst int N = 2e5 + 5;\nint T, n, w[N], siz[N], mxsiz[N];\nvector<int> e[N];\nvoid DFS(int u, int fa) {\n\tsiz[u] = (e[u].size() == 1);\n\tfor (int v : e[u]) if (v != fa) {\n\t\tDFS(v, u);\n\t\tsiz[u] += siz[v];\n\t\tmxsiz[u] = max(mxsiz[u], siz[v]);\n\t}\n}\nvoid GetLeaf(int u, int fa, vector<int>& leaf) {\n\tif (e[u].size() == 1) leaf.push_back(u);\n\tfor (int v : e[u]) if (v != fa) GetLeaf(v, u, leaf);\n}\nint Min(int u, int v) {\n\tif (!u || !v) return u | v;\n\treturn w[u] < w[v] ? u : v;\n}\nint mn[N];\nvoid GetMin(int u, int fa) {\n\tmn[u] = u;\n\tfor (int v : e[u]) if (v != fa) {\n\t\tGetMin(v, u);\n\t\tmn[u] = Min(mn[u], mn[v]);\n\t}\n}\nvector<int> cur{0};\nint ansu, ansv;\nll ansval = 1e18;\nvoid GetAns(int u, int fa, int dep, int mnu, int deep) {\n\tif (e[u].size() == 1) {\n\t\tll val = w[Min(mnu, cur[deep - 1])];\n\t\tif (val < ansval) ansval = val, ansu = u, ansv = Min(mnu, cur[deep - 1]);\n\t}\n\tcur.push_back(Min(u, cur.back()));\n\tfor (int v : e[u]) if (v != fa) {\n\t\tint mnv = mnu;\n\t\tfor (int x : e[u]) if (x != v && x != fa) mnv = Min(mnv, mn[x]);\n\t\tGetAns(v, u, dep + 1, mnv, e[v].size() == 3 ? dep + 1 : deep);\n\t}\n\tcur.pop_back();\n}\nint main() {\n\tcin.tie(nullptr)->sync_with_stdio(false);\n\tcin >> T;\n\twhile (T--) {\n\t\tcin >> n;\n\t\tFor(i, 1, n) cin >> w[i];\n\t\tFor(i, 1, n - 1) {\n\t\t\tint u, v;\n\t\t\tcin >> u >> v;\n\t\t\te[u].push_back(v), e[v].push_back(u);\n\t\t}\n\t\tDFS(1, 0);\n\t\tint rt = 0;\n\t\tFor(i, 1, n) {\n\t\t\tmxsiz[i] = max(mxsiz[i], siz[1] - siz[i]);\n\t\t\tif (e[i].size() == 3 && mxsiz[i] <= siz[1] / 2) rt = i;\n\t\t}\n\t\tif (!rt) {\n\t\t\tFor(i, 1, n) if (e[i].size() == 2 && mxsiz[i] <= siz[1] / 2) rt = i;\n\t\t}\n\t\tif (siz[1] % 2) {\n\t\t\tGetMin(rt, 0);\n\t\t\tGetAns(rt, 0, 1, 0, 1);\n\t\t}\n\t\tcout << (siz[1] + 1) / 2 << '\\n';\n\t\tvector<vector<int>> leaf;\n\t\tfor (int u : e[rt]) {\n\t\t\tvector<int> vec;\n\t\t\tGetLeaf(u, rt, vec);\n\t\t\tif (siz[1] % 2) {\n\t\t\t\tauto it = find(range(vec), ansu);\n\t\t\t\tif (it != vec.end()) vec.erase(it);\n\t\t\t}\n\t\t\tleaf.push_back(vec);\n\t\t}\n\t\tif (siz[1] % 2) cout << ansu << ' ' << ansv << '\\n';\n\t\tauto Comp = [&](int x, int y) {\n\t\t\treturn leaf[x].size() < leaf[y].size();\n\t\t};\n\t\tpriority_queue<int, vector<int>, decltype(Comp)> q(Comp);\n\t\tFor(i, 0, int(leaf.size()) - 1) q.push(i);\n\t\twhile (1) {\n\t\t\tint i = q.top(); q.pop();\n\t\t\tint j = q.top(); q.pop();\n\t\t\tif (!leaf[i].size() && !leaf[j].size()) break;\n\t\t\tcout << leaf[i].back() << ' ' << leaf[j].back() << '\\n';\n\t\t\tleaf[i].pop_back(), leaf[j].pop_back();\n\t\t\tq.push(i), q.push(j);\n\t\t}\n\t\tFor(i, 1, n) e[i].clear(), mxsiz[i] = siz[i] = 0;\n\t\tansval = 1e18, ansu = ansv = 0;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1684759221,
        "uid": 225625,
        "name": "Alan_Zhao",
        "ccfLevel": 8,
        "title": "ARC160E Make Biconnected \u9898\u89e3"
    },
    {
        "content": "### \u9898\u610f\u7b80\u8ff0 \n\n\u7ed9\u51fa\u4e00\u68f5\u65e0\u5411\u8054\u901a\u6811\uff0c\u4fdd\u8bc1\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570 $\\le3$\uff0c\u70b9\u6709\u70b9\u6743\uff0c\u8981\u6c42\u4f60\u52a0\u5165\u82e5\u5e72\u6761\u8fb9\uff0c\u52a0\u5165\u4e00\u6761\u8fb9\u7684\u82b1\u8d39\u662f\u5176\u8fde\u63a5\u7684\u4e24\u4e2a\u70b9\u7684\u70b9\u6743\u4e4b\u548c\u3002\u6c42\u6700\u5c0f\u82b1\u8d39\uff0c\u4f7f\u5f97\u52a0\u5b8c\u8fb9\u540e\u7684\u6574\u5f20\u56fe\u662f\u70b9\u53cc\u8fde\u901a\u7684\u3002\n\n### \u601d\u8def\u5206\u6790\n\n\u79f0\u5ea6\u6570\u4e3a $1$ \u7684\u7ed3\u70b9\u4e3a\u53f6\u5b50\u7ed3\u70b9\uff0c\u90a3\u4e48\u6240\u6709\u53f6\u5b50\u90fd\u5e94\u8be5\u81f3\u5c11\u88ab\u8fde\u8fb9\u4e00\u6b21\uff0c\u6545\u7b54\u6848\u4e0b\u754c\u5e94\u4e3a\u6240\u6709\u53f6\u5b50\u7684\u70b9\u6743\u4e4b\u548c\u3002\u5bf9\u4e8e\u53f6\u5b50\u4e2a\u6570 $k$ \u4e3a\u5076\u6570\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u4e00\u79cd\u65b9\u6848\u6765\u8fbe\u5230\u6b64\u4e0b\u754c\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u9996\u5148\u5c06\u6240\u6709\u53f6\u5b50\u6309\u7167 dfs \u5e8f\u6392\u5217\uff0c\u5206\u522b\u79f0\u5176\u4e3a $v_1,v_2,\u2026,v_k$\u3002$\\forall i\\in [1,\\frac{k}{2}]$\uff0c\u5728 $v_i$ \u4e0e $v_{i+\\frac{k}{2}}$ \u4e4b\u95f4\u8fde\u8fb9\u3002 \n\n\u6b63\u786e\u6027\u8bc1\u660e\uff1a\u7531\u4e8e\u6211\u4eec\u5c06\u53f6\u5b50\u6309\u7167 $dfs$ \u5e8f\u6392\u5217\uff0c\u90a3\u4e48\u5f53\u6211\u4eec\u5220\u53bb\u56fe\u4e2d\u67d0\u4e00\u70b9\u65f6\uff0c\u539f\u6811\u4f1a\u88ab\u5212\u5206\u6210 $d$ \u68f5\u5b50\u6811\uff08$ d\\le3$\uff09\uff0c\u5e76\u4e14\u6bcf\u68f5\u5b50\u6811\u6240\u5305\u542b\u7684\u53f6\u5b50\u7ed3\u70b9\u7f16\u53f7\u4e00\u5b9a\u662f\u8fde\u7eed\u7684\u4e00\u6bb5\u3002\n\n- $d=1$\uff1a\u663e\u7136\u6210\u7acb\uff1b\n- $d=2$\uff1a$(v_1,v_{1+\\frac{k}{2}}),(v_{\\frac{k}{2}},v_{k})$ \u65e0\u6cd5\u540c\u65f6\u88ab\u5272\u65ad\uff0c\u6240\u4ee5\u4e5f\u6210\u7acb\uff1b\n- $d=3$\uff1a\n  - \u7b2c\u4e8c\u6bb5\u548c\u7b2c\u4e09\u6bb5\u4e4b\u95f4\u6709\u8fde\u8fb9\uff1a\u8bf4\u660e\u7b2c\u4e8c\u6bb5\u7684\u5de6\u7aef\u70b9 $\\le \\frac{k}{2}$\u3002\u6b64\u65f6 $(v_1,v_{1+\\frac{k}{2}}),(v_{\\frac{k}{2}},v_{k})$ \u4e00\u5b9a\u5c06\u7b2c\u4e00\u6bb5\u548c\u7b2c\u4e8c\u3001\u4e09\u6bb5\u8fde\u63a5\u8d77\u6765\uff1b\n  - \u7b2c\u4e8c\u6bb5\u548c\u7b2c\u4e09\u6bb5\u4e4b\u95f4\u6ca1\u6709\u8fde\u8fb9\uff1a\u8bf4\u660e\u7b2c\u4e8c\u6bb5\u7684\u5de6\u7aef\u70b9 $> \\frac{k}{2}$\u3002\u6b64\u65f6\u7b2c\u4e00\u6bb5\u4e2d\u5305\u542b\u6240\u6709\u5339\u914d\u5bf9\u4e2d\u7684\u81f3\u5c11\u4e00\u4e2a\u5143\u7d20\uff0c\u6545\u7b2c\u4e00\u6bb5\u4e0e\u6240\u6709\u53f6\u5b50\u8054\u901a\u3002\n\n\u8bc1\u6bd5\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651 $k$ \u4e3a\u5947\u6570\u7684\u60c5\u51b5\u3002\u8fd9\u610f\u5473\u7740\uff0c\u9664\u4e86\u6240\u6709\u53f6\u5b50\u7684\u70b9\u6743\u4e4b\u5916\uff0c\u6211\u4eec\u4e00\u5b9a\u4f1a\u81f3\u5c11\u518d\u591a\u82b1\u8d39\u4e00\u4e2a\u70b9\u7684\u70b9\u6743\u3002\u6b64\u65f6\uff0c\u8003\u5bdf\u5168\u5c40\u70b9\u6743\u6700\u5c0f\u7684\u70b9\uff0c\u8bbe\u5176\u6743\u503c\u4e3a $w$\uff0c\u90a3\u4e48\u5f53\u524d\u7684\u4e0b\u754c\u5c31\u662f\u6240\u6709\u53f6\u5b50\u6743\u503c\u548c\u52a0\u4e0a $w$\u3002\n\n\u9996\u5148\uff0c\u5148\u629b\u5f00\u539f\u95ee\u9898\uff0c\u6211\u4eec\u8003\u8651\u5982\u4f55\u8fde\u4e00\u6761\u8fb9\uff0c\u8ba9\u4e00\u4e2a\u53f6\u5b50\u4e0e\u5176\u5212\u5206\u540e\u5f62\u6210\u7684\u5b50\u6811\u4e4b\u5916\u7684\u90e8\u5206\u76f8\u8fde\u3002\u6211\u4eec\u4ece\u8fd9\u4e2a\u53f6\u5b50\u51fa\u53d1\uff0c\u6bcf\u6b21\u5411\u4e00\u4e2a\u6ca1\u6709\u88ab\u7ecf\u8fc7\u8fc7\u7684\u70b9\u8d70\u53bb\uff0c\u76f4\u5230\u6211\u4eec\u53d1\u73b0\u63a5\u4e0b\u6765\u7684\u4e00\u6b65\u6709\u591a\u4e2a\u70b9\u53ef\u4ee5\u8d70\u3002\u90a3\u4e48\uff0c\u5982\u679c\u6211\u4eec\u8fde\u7684\u8fd9\u6761\u8fb9\u6240\u6307\u5411\u7684\u7ed3\u70b9\u662f\u4e0a\u8ff0\u8fc7\u7a0b\u9014\u7ecf\u7684\u70b9\u4e4b\u4e00\uff0c\u5c06\u5220\u53bb\u7684\u70b9\u9009\u62e9\u5728\u8fd9\u6761\u8fb9\u6240\u6307\u5411\u7684\u7ed3\u70b9\u5c31\u53ef\u4ee5\u5272\u65ad\u8fd9\u4e2a\u53f6\u5b50\uff1b\u4f46\u662f\u5982\u679c\u6307\u5411\u7684\u7ed3\u70b9\u4e0d\u662f\u8fd9\u4e9b\u70b9\u4e4b\u4e00\uff0c\u6211\u4eec\u53d1\u73b0\u65e0\u8bba\u5982\u4f55\uff0c\u8fd9\u4e2a\u53f6\u5b50\u90fd\u4e0d\u4f1a\u88ab\u5272\u65ad\u3002\n\n\u5f88\u81ea\u7136\u5730\u60f3\u5230\uff0c\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u53f6\u5b50\uff0c\u5168\u5c40\u70b9\u6743\u6700\u5c0f\u70b9\u4f4d\u4e8e\u4e0a\u8ff0\u8def\u5f84\u4e4b\u5916\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u4e0e\u5168\u5c40\u70b9\u6743\u6700\u5c0f\u70b9\u8fde\u8fb9\uff0c\u5176\u4f59\u70b9\u5957\u7528\u4e0a\u8ff0 $k$ \u4e3a\u5076\u6570\u7684\u89e3\u6cd5\u5373\u53ef\u3002\u7531\u4e8e\u8fd9\u4e2a\u53f6\u5b50\u65e0\u8bba\u5982\u4f55\u90fd\u4e0d\u4f1a\u88ab\u5272\u65ad\uff0c\u800c\u5269\u4e0b\u7684\u90e8\u5206\u53c8\u662f\u8fde\u901a\u7684\uff0c\u6700\u7ec8\u7ed3\u679c\u5c31\u4e00\u5b9a\u662f\u5408\u6cd5\u7684\u3002\n\n\u8003\u8651\u4ec0\u4e48\u60c5\u51b5\u4e0b\uff0c\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u4e00\u4e2a\u53f6\u5b50\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5168\u5c40\u70b9\u6743\u6700\u5c0f\u70b9\u4f4d\u4e8e\u6240\u6709\u53f6\u5b50\u7684\u4e0a\u8ff0\u8def\u5f84\u4e4b\u4e0a\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6574\u5f20\u56fe\u5f62\u6210\u4e00\u4e2a\u7c7b\u4f3c\u83ca\u82b1\u56fe\u7684\u7ed3\u6784\uff0c\u7531\u81f3\u591a $3$ \u6761\u94fe\u7684\u4e00\u7aef\u4ea4\u4e8e\u540c\u4e00\u70b9\uff08\u8fd9\u4e00\u70b9\u4e3a\u5168\u5c40\u70b9\u6743\u6700\u5c0f\u70b9\uff09\u6784\u6210\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53d1\u73b0\u53cd\u590d\u82b1\u8d39 $w$ \u4e14\u4e0d\u4f7f\u7528\u5176\u4ed6\u70b9\u65e0\u6cd5\u53d8\u6210\u5408\u6cd5\uff0c\u4e14\u5168\u5c40\u70b9\u6743\u6b21\u5c0f\u70b9\u4e00\u5b9a\u53ef\u4ee5\u4e0e\u67d0\u4e2a\u53f6\u5b50\u76f8\u8fde\uff0c\u56e0\u6b64\u6b64\u65f6\u501f\u52a9\u5168\u5c40\u70b9\u6743\u6b21\u5c0f\u70b9\u4e00\u5b9a\u662f\u6700\u4f18\u89e3\u3002\u5bf9\u4e8e\u5176\u4f59\u53f6\u5b50\uff0c\u518d\u5957\u7528\u4e0a\u8ff0 $k$ \u4e3a\u5076\u6570\u7684\u89e3\u6cd5\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nvector<int>edge[200005];\nint w[200005];\nint deg[200005];\nint cnt[15];\nint k=0,l[200005];\nvoid dfs(int x,int f){\n\tif(edge[x].size()==1) l[++k]=x;\n\tfor(int i=0;i<edge[x].size();i++){\n\t\tint v=edge[x][i];\n\t\tif(v==f) continue;\n\t\tdfs(v,x);\n\t}\n}\nbool dfs2(int x,int f,int p){\n\tif(deg[x]==3) return x==p;\n\tbool ret=(x==p);\n\tfor(int i=0;i<edge[x].size();i++){\n\t\tint v=edge[x][i];\n\t\tif(v==f) continue;\n\t\tret|=dfs2(v,x,p);\n\t}\n\treturn ret;\n}\nint main(){\n\tint t,n,u,v;\n\tcin>>t;\n\twhile(t--){\n\t\tscanf(\"%d\",&n);\n\t\tk=0;\n\t\tfor(int i=1;i<=n;i++) edge[i].clear();\n\t\tfor(int i=1;i<=n;i++) deg[i]=0;\n\t\tmemset(cnt,0,sizeof cnt);\n\t\tfor(int i=1;i<=n;i++) scanf(\"%d\",&w[i]);\n\t\tfor(int i=1;i<n;i++){\n\t\t\tscanf(\"%d%d\",&u,&v);\n\t\t\tedge[u].push_back(v);\n\t\t\tedge[v].push_back(u);\n\t\t\tdeg[u]++;\n\t\t\tdeg[v]++;\n\t\t}\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif(deg[i]!=1){\n\t\t\t\tdfs(i,0);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tfor(int i=1;i<=n;i++) cnt[deg[i]]++;\n\t\tif(k%2==0){\n\t\t\tprintf(\"%d\\n\",k>>1);\n\t\t\tfor(int i=1;i<=k>>1;i++) printf(\"%d %d\\n\",l[i],l[i+(k>>1)]);\n\t\t}\n\t\telse{\n\t\t\tint mn1=1000000001,mn2=1000000002,pos1=0,pos2=0;\n\t\t\tfor(int i=1;i<=n;i++){\n\t\t\t\tif(w[i]<mn1) mn2=mn1,pos2=pos1,mn1=w[i],pos1=i;\n\t\t\t\telse if(w[i]<mn2) mn2=w[i],pos2=i;\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",(k+1)>>1);\n\t\t\tif(cnt[3]==1&&cnt[1]==3&&deg[pos1]==3){\n\t\t\t\tfor(int i=1;i<=k;i++){\n\t\t\t\t\tif(!dfs2(l[i],0,pos2)){\n\t\t\t\t\t\tprintf(\"%d %d\\n\",l[i],pos2);\n\t\t\t\t\t\tfor(int j=i;j<k;j++) l[j]=l[j+1];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tfor(int i=1;i<=k;i++){\n\t\t\t\t\tif(!dfs2(l[i],0,pos1)){\n\t\t\t\t\t\tprintf(\"%d %d\\n\",l[i],pos1);\n\t\t\t\t\t\tfor(int j=i;j<k;j++) l[j]=l[j+1];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i=1;i<=k>>1;i++) printf(\"%d %d\\n\",l[i],l[i+(k>>1)]);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1684753628,
        "uid": 455093,
        "name": "Schi2oid",
        "ccfLevel": 7,
        "title": "[ARC160E] Make Biconnected"
    },
    {
        "content": "> \u5fc3\u6001\u7206\u70b8\uff0c\u8d5b\u540e\u5728 AT \u4e0a\u4e00\u9898\u4ea4\u4e86\u4e24\u9762\u591a\u2026\u2026\n\n#### \u9898\u610f\n\n\u7ed9\u4e00\u68f5\u6811\uff0c\u6bcf\u4e2a\u70b9\u6709\u70b9\u6743\uff0c\u8981\u8fde\u4e00\u4e9b\u8fb9\uff0c\u4f7f\u5f97\u6574\u68f5\u6811\u53d8\u6210\u4e00\u4e2a\u70b9\u53cc\uff0c\u6bcf\u6b21\u8fde\u8fb9\u7684\u4ee3\u4ef7\u4e3a\u4e24\u4e2a\u7aef\u70b9\u7684\u6743\u503c\u548c\uff0c\u6c42\u6700\u5c0f\u7684\u603b\u4ee3\u4ef7\uff0c\u5e76\u8f93\u51fa\u65b9\u6848\u3002\n\n#### \u6b63\u6587\n\n\u5982\u679c\u4e0d\u95ee\u65b9\u6848\u800c\u53ea\u95ee\u6700\u5c0f\u4ee3\u4ef7\u7684\u8bdd\u90a3\u7b80\u76f4\u4e0d\u8981\u592a\u5bb9\u6613\uff0c\u4e22\u5230 ABC \u53bb\u90fd\u884c\u2026\u2026\n\n\u5148\u8003\u8651\u6700\u5c0f\u4ee3\u4ef7\u7684\u503c\u3002\n\n\u9996\u5148\uff0c\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u90fd\u8981\u548c\u5176\u4ed6\u70b9\u8fde\u8fb9\uff0c\u4e5f\u5c31\u662f\u8bf4\u5bf9\u4e8e\u6700\u5c0f\u4ee3\u4ef7\uff0c\u5176\u503c\u81f3\u5c11\u4e3a\u6811\u4e0a\u53f6\u5b50\u8282\u70b9\u6743\u503c\u548c\u3002\n\n\u63a5\u4e0b\u6765\u662f\u6784\u9020\u51fa\u5c3d\u91cf\u63a5\u8fd1\u6700\u5c0f\u503c\u7684\u8fde\u8fb9\u65b9\u6848\uff0c\u4e0d\u96be\u53d1\u73b0\u6709\u4ee5\u4e0b\u4e24\u79cd\u60c5\u51b5\u3002\n\n\u4ee4\u53f6\u5b50\u8282\u70b9\u4e2a\u6570\u4e3a $cnt$\uff0c\n\n- \u5f53 $cnt$ \u4e3a\u5076\u6570\u65f6\uff0c\u5c06\u53f6\u5b50\u4e24\u4e24\u914d\u5bf9\u5373\u53ef\uff1b\n- \u5426\u5219\uff0c\u5728\u4e24\u4e24\u914d\u5bf9\u4e4b\u540e\uff0c\u5c06\u5269\u4e0b\u7684\u4e00\u4e2a\u53f6\u5b50\u4e0e\u6743\u503c\u5c3d\u91cf\u5c0f\u7684\u5e97\u8fde\u8fb9\u3002\n\n\u8003\u8651\u5230\u8fde\u8fb9\u4e4b\u540e\u6574\u68f5\u6811\u8981\u53d8\u6210\u70b9\u53cc\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u82e5\u5b9a\u4e49\u4e00\u6761\u65b0\u8fde\u7684\u8fb9\uff0c\u5176\u7aef\u70b9\u5728\u539f\u6811\u4e0a\u7684\u6700\u77ed\u8def\u5f84\u79f0\u4e4b\u4e3a\u8fd9\u6761\u8fb9\u7684\u539f\u8def\u5f84\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6240\u6709\u7684\u81f3\u5c11 $\\displaystyle\\frac{cnt}{2}$ \u6761\u539f\u8def\u5f84\uff0c\u4e0d\u80fd\u5b58\u5728\u67d0\u6761\u539f\u8def\u5f84\u548c\u5176\u4ed6\u539f\u8def\u5f84\u90fd\u6ca1\u6709\u4ea4\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u6784\u9020\u8def\u5f84\u3002\n\n- \u5f53 $cnt$ \u4e3a\u5076\u6570\u65f6\uff0c\u53ea\u8981\u4fdd\u8bc1\u6240\u6709\u7684\u914d\u5bf9\u7684\u70b9\u7684 LCA \u5fc5\u5b9a\u88ab\u5176\u4ed6\u539f\u8def\u5f84\u7ecf\u8fc7\u5373\u53ef\uff0c\u4e0d\u96be\u53d1\u73b0\u53ea\u9700\u8981\u4f7f\u76f8\u914d\u5bf9\u7684\u70b9\u7684\u6b27\u62c9\u5e8f\u5dee\u503c\u5c3d\u91cf\u5927\u5c31\u884c\u4e86\u3002\u90a3\u4e48\u6309\u7167\u6b27\u62c9\u5e8f\u5c06\u53f6\u5b50\u8282\u70b9\u5b58\u50a8\u5230\u4e00\u4e2a $Leave$ \u6570\u7ec4\u91cc\uff0c\u7136\u540e\u4f7f $Leave_i$ \u4e0e $\\displaystyle Leave_{i+\\frac{cnt}{2}}$ \u914d\u5bf9\u5c31\u884c\u4e86\uff1b\n- \u5f53 $cnt$ \u4e3a\u5947\u6570\u65f6\uff0c\u5c1d\u8bd5\u5c06\u591a\u51fa\u6765\u7684\u53f6\u8282\u70b9\u4e0e\u6743\u503c\u6700\u5c0f\u7684\u5e97\u8fde\u8fb9\u3002\u8bbe\u6743\u503c\u6700\u5c0f\u7684\u70b9\u662f $v$\uff0c\u7b2c\u4e8c\u5c0f\u7684\u662f $k$\u3002\n  - \u5982\u679c $v$ \u672c\u8eab\u5c31\u662f\u53f6\u8282\u70b9\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u8ba9 $v$ \u88ab\u8fde\u4e24\u6b21\u5c31\u884c\u4e86\u3002\u4efb\u9009\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9 $l$\uff0c\u4ee5 $l$ \u4e3a\u6839\u4ee5\u540e\u5f53\u4f5c\u5076\u6570\u7684\u60c5\u51b5\u8fde\u8fb9\uff0c\u7136\u540e\u8fde\u63a5 $l$ \u548c $v$ \u5373\u53ef\u3002\n  - \u5982\u679c $v$ \u4e0d\u662f\u53f6\u8282\u70b9\uff0c\u90a3\u5c31\u627e\u4e00\u68f5 $v$ \u7684\u5b50\u6811\uff0c\u5982\u679c\u5b50\u6811\u5185\u53f6\u5b50\u6570\u91cf\u5927\u4e8e $1$\uff0c\u90a3\u4e48\u6811\u5185\u4efb\u610f\u4e00\u4e2a\u70b9\u4e0e $v$ \u76f8\u8fde\uff0c\u5269\u4e0b\u7684\u6309\u7167\u5076\u6570\u7684\u65b9\u6cd5\u8fde\u8fb9\u5373\u53ef\u3002\n  - \u540c\u65f6\uff0c\u5982\u679c\u53ea\u6709\u4e09\u4e2a\u53f6\u5b50\u5e76\u4e14\u4e24\u4e24\u7684 LCA \u5747\u4e3a $v$\uff0c\u6b64\u65f6\u662f\u4e0d\u80fd\u7528 $v$ \u8fde\u8fb9\u7684\u90a3\u4e48\u5c31\u7528\u8282\u70b9 $k$ \u4ee3\u66ff $v$ \u5b9e\u73b0\u4e0a\u8ff0\u64cd\u4f5c\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(N)$\u3002\n\n#### \u90e8\u5206 Code\n```cpp\n...\nvoid dfs(int nw,int fa)\n{\n    if(go[nw].size()<2&&fa) leaf[++onl]=nw;\n    for(auto &u:go[nw])\n    {\n        if(fa==u) continue;\n        dfs(u,nw);\n    }\n}\n...\nif(~ctt&1)\n{\n    onl=0; dfs(v,0); ctt>>=1; cout<<ctt<<endl;\n    for(int i=1;i<=ctt;++i) cout<<leaf[i]<<' '<<leaf[i+ctt]<<endl;\n    continue;\n}\n...\nif(go[v].size()<2)\n{\n    for(int i=1;i<=n;++i) if(go[i].size()==1&&i!=v) k=i;\n    onl=0; dfs(k,0); ctt>>=1; cout<<ctt+1<<endl<<k<<' '<<v<<endl;\n    for(int i=1;i<=ctt;++i) cout<<leaf[i]<<' '<<leaf[i+ctt]<<endl;\n}\nelse\n{\n    onl=0; ctt>>=1; cout<<ctt+1<<endl; bool ok=1;\n    for(auto &u:go[v])\n    {\n        int on=onl;\n        dfs(u,v);\n        if(onl>on+1&&ok) ok=0,cout<<v<<' '<<leaf[onl--]<<endl;\n    }\n    for(int i=1;i<=ctt;++i) cout<<leaf[i]<<' '<<leaf[i+ctt]<<endl;\n}\n```",
        "postTime": 1684749897,
        "uid": 532102,
        "name": "_FyFive_",
        "ccfLevel": 6,
        "title": "ARC160E \u9898\u89e3"
    }
]