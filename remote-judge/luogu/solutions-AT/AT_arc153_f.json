[
    {
        "content": "\u8003\u8651\u5c06\u201c\u7528\u4e09\u79cd\u989c\u8272\u67d3\u8272\u201d\u7684\u65b9\u6848\u6570\u51cf\u53bb\u201c\u7528\u4e86\u4e09\u79cd\u989c\u8272\uff0c\u7136\u800c\u4e0d\u5b58\u5728\u4efb\u4f55\u4e00\u6761\u6709\u4e09\u79cd\u989c\u8272\u7684\u8def\u5f84\u201d\u7684\u65b9\u6848\u6570\u4ee5\u5f97\u51fa\u7b54\u6848\u3002\n\n1. \u8003\u8651\u67d0\u4e2a\u73af\u6709\u4e09\u79cd\u989c\u8272\u7684\u60c5\u51b5\uff1a\n\n\t1. \u73af\u7684\u5927\u5c0f $\\ge 4$\u3002\u6b64\u65f6\u4e00\u5b9a\u53ef\u4ee5\u627e\u51fa\u4e00\u6761\u81f3\u5c11\u51fa\u73b0\u4e86\u4e24\u6b21\u7684\u8fb9\uff0c\u5269\u4e0b\u7684\u8fb9\u53ef\u4ee5\u7ec4\u6210\u4e00\u6761\u8def\u5f84\u4e14\u5305\u542b\u4e86\u4e09\u79cd\u989c\u8272\u3002\n\t\n\t1. \u8be5\u73af\u4e3a\u4e09\u5143\u73af\uff08\u4ee4\u8fd9\u4e09\u4e2a\u70b9\u4e3a $u,v,w$\uff09\u3002\u8003\u8651\u5176\u5411\u5176\u4ed6\u70b9\u8fde\u7684\u8fb9\u7684\u60c5\u51b5\u3002\n\t\n\t\t1. \u5982\u679c\u73af\u4e0a\u5b58\u5728\u4e24\u4e2a\u70b9 $u,v$ \u5747\u5411\u5176\u4ed6\u70b9\u8fde\u8fb9\u3002\u5982\u679c $u$ \u548c $v$ \u5747\u8fde\u5411\u4e86\u540c\u4e00\u4e2a\u70b9 $x$\uff1b\u5219\u7531\u8def\u5f84 $x-u-w-v$ \u548c $x-u-v-w$ \u5b58\u5728\u53ef\u5f97 $x-u$ \u8fb9\u989c\u8272\u4e00\u5b9a\u548c $v-w$ \u76f8\u540c\uff0c\u540c\u7406 $x-v$ \u8fb9\u7684\u989c\u8272\u4e00\u5b9a\u548c $u-w$ \u76f8\u540c\uff1b\u6b64\u65f6 $x$ \u4e0d\u80fd\u5411\u73af\u5916\u7b2c\u4e8c\u4e2a\u70b9\u8fde\u8fb9\uff0c$n=4$ \u53ef\u4ee5\u7206\u641c\u89e3\u51b3\uff08\u540c\u7406\u53ef\u4ee5\u7206\u641c $n$ \u66f4\u5c0f\u7684\u60c5\u51b5\uff0c\u65b9\u4fbf\u4e4b\u540e\u7684\u5904\u7406\uff09\u3002\u5982\u679c $u$ \u8fde\u5411\u4e86 $x$\uff0c$v$ \u8fde\u5411\u4e86 $y$\uff1b\u5219\u7531\u4e8e $x-u-v-y$ \u548c $x-u-w-v-y$ \u53ef\u5f97 $x-u,v-y$ \u9009\u62e9\u4efb\u610f\u4e00\u79cd\u989c\u8272\u90fd\u4f1a\u4e0d\u5408\u6cd5\u3002\n\t\t\n\t\t1. \u5426\u5219\u73af\u4e0a\u53ea\u6709\u4e00\u4e2a\u70b9 $u$ \u80fd\u548c\u73af\u5916\u8fde\u8fb9\uff0c\u6b64\u65f6\u73af\u5916\u9762\u7684\u8fb9\u53ea\u80fd\u90fd\u548c $v-w$ \u8fb9\u540c\u8272\u3002\u679a\u4e3e $v-w$ \u8fb9\u4ee5\u627e\u51fa\u6240\u6709\u8fd9\u6837\u7684\u73af\u7684\u6570\u91cf $c$ \u4e4b\u540e\uff0c\u5176\u5bf9\u65b9\u6848\u6570\u7684\u8d21\u732e\u4e3a $6c$\u3002\n\t\t\n1. \u8003\u8651\u67d0\u4e2a\u73af\u6709\u4e24\u79cd\u989c\u8272\u7684\u60c5\u51b5\uff08\u6b64\u65f6\u73af\u4e0a\u6709\u4e09\u79cd\u989c\u8272\u7684\u65b9\u6848\u53ef\u4ee5\u76f4\u63a5\u89c6\u4e3a\u975e\u6cd5\uff09\u3002\u6b64\u65f6\u4e00\u5b9a\u5b58\u5728\u7b2c\u4e09\u79cd\u989c\u8272\u7684\u8fb9 $u-v$\uff0c\u4ee4 $u$ \u53ef\u4ee5\u4e0d\u901a\u8fc7 $u-v$ \u8fde\u5411\u73af\u4e0a\u7684\u67d0\u4e2a\u70b9 $w$\uff0c$w$ \u5728\u73af\u4e0a\u76f8\u90bb\u7684\u70b9\u4e3a $x,y$\uff1b\u5219 $w-x,w-y$ \u4e2d\u4e00\u5b9a\u6709\u4e00\u79cd\u989c\u8272\u5728\u73af\u4e0a\u51fa\u73b0\u4e86\u4e24\u6b21\uff0c\u53bb\u6389\u4e00\u6761\u51fa\u73b0\u4e86\u4e24\u6b21\u7684\u989c\u8272\u7684\u8fb9\u4e4b\u540e\u4e00\u5b9a\u4f1a\u5f62\u6210\u4e00\u6761\u6709\u4e09\u79cd\u989c\u8272\u7684\u8def\u5f84\u3002\n\n\u7efc\u4e0a\uff0c\u6bcf\u4e2a\u73af\u53ea\u80fd\u6709\u4e00\u79cd\u989c\u8272\uff0c\u4ece\u800c\u6bcf\u4e2a\u70b9\u53cc\u5185\u90e8\u7684\u8fb9\u53ea\u80fd\u6709\u4e00\u79cd\u989c\u8272\u3002\u8003\u8651\u5efa\u51fa\u5706\u65b9\u6811\uff0c\u5219\u6240\u6709\u65b9\u70b9\u4e00\u5b9a\u9700\u8981\u51d1\u9f50\u4e09\u79cd\u989c\u8272\uff0c\u5219\u4e00\u5b9a\u5b58\u5728\u67d0\u4e2a\u5706\u70b9\u6ee1\u8db3\u6bcf\u4e2a\u513f\u5b50\u7684\u5b50\u6811\u5185\u7684\u65b9\u70b9\u53ea\u6709\u4e00\u79cd\u989c\u8272\uff0c\u8ba1\u7b97\u6bcf\u4e2a\u5706\u70b9\u7684\u51fa\u8fb9\u6570\u91cf\u5373\u53ef\u3002\n\n### \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn=200010;\nconst int md=998244353;\nint n,m,i,j,u,v,w,a,t=1,tim,top;\nint h[maxn],f[maxn],d[maxn],T[3];\nint dfn[maxn],low[maxn],stk[maxn];\nint p2[maxn],p3[maxn]; bool vis[maxn];\nstruct edge{int to,nxt;}E[maxn<<1];\nbool dfs(int p){\n\tvis[p]=1; int lp,to;\n\tfor(lp=h[p];lp;lp=E[lp].nxt){\n\t\tif(vis[to=E[lp].to]) continue;\n\t\tw+=(!(T[f[lp>>1]]++));\n\t\tif(w==3||dfs(to)) return 1;\n\t\tw-=(!(--T[f[lp>>1]]));\n\t}\n\treturn vis[p]=0;\n}\nvoid color(int p){\n\tif(p>m){\n\t\tfor(i=1,w=0;i<=n;++i){\n\t\t\tif(dfs(i)){\n\t\t\t\tmemset(T,0,12);\n\t\t\t\tmemset(vis+1,0,n);\n\t\t\t\t++a; break;\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\tf[p]=0; color(p+1);\n\tf[p]=1; color(p+1);\n\tf[p]=2; color(p+1);\n}\ninline void Add(int &x,int y){x-=((x+=y)>=md)*md;}\nvoid tarjan(int p){\n\tdfn[p]=low[p]=++tim;\n\tstk[++top]=p; int lp,to;\n\tfor(lp=h[p];lp;lp=E[lp].nxt){\n\t\tto=E[lp].to;\n\t\tif(!dfn[to]){\n\t\t\ttarjan(to);\n\t\t\tif(low[to]==dfn[p]){\n\t\t\t\tfor(u=0;u!=p;++f[u=stk[top--]]);\n\t\t\t\tstk[++top]=p;\n\t\t\t}\n\t\t\telse low[p]=min(low[p],low[to]);\n\t\t}\n\t\telse low[p]=min(low[p],dfn[to]);\n\t}\n}\nint main(){\n\tp2[0]=p3[0]=1;\n\tfor(i=1;i<maxn;++i){\n\t\tAdd(p2[i]=p2[i-1],p2[i-1]);\n\t\tp3[i]=(3LL*p3[i-1])%md;\n\t}\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i=1;i<=m;++i){\n\t\tscanf(\"%d%d\",&u,&v); \n\t\t++d[u]; ++d[v];\n\t\tE[++t]={v,h[u]}; h[u]=t;\n\t\tE[++t]={u,h[v]}; h[v]=t;\n\t}\n\tif(n<=4){\n\t\tcolor(1);\n\t\tprintf(\"%d\\n\",a);\n\t\treturn 0;\n\t}\n\ta=((p3[m]+3-3LL*p2[m])%md+md)%md;\n\tfor(i=2;i<=t;i+=2){\n\t\tu=E[i].to; v=E[i|1].to;\n\t\tif(d[u]==2&&d[v]==2){\n\t\t\tif(E[j=h[u]].to==v) j=E[j].nxt; w=E[j].to; \n\t\t\tif(E[j=h[v]].to==u) j=E[j].nxt; if(w==E[j].to) Add(a,md-6);\n\t\t}\n\t} \n\ttarjan(1);\n\tfor(i=1;i<=n;++i)\n\t\tAdd(a,((3LL*p2[f[i]]-p3[f[i]]-3)%md+md)%md);\n\tprintf(\"%d\\n\",a);\n\treturn 0;\n}\n```",
        "postTime": 1675174389,
        "uid": 546086,
        "name": "Francais_Drake",
        "ccfLevel": 7,
        "title": "AT_arc153_f \u9898\u89e3"
    }
]