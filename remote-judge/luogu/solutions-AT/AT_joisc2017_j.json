[
    {
        "content": "\u5bf9\u4e8e\u4e00\u4e2a\u77e9\u5f62\uff0c\u5df2\u77e5\u5176\u56db\u8fb9\u4e0a**\u4e0d\u8003\u8651\u5176\u5185\u90e8\u9053\u8def**\u7684\u6240\u6709\u7b54\u6848\uff0c\u8003\u8651\u5176\u4e2d\u8f66\u6d41\u6307\u6570\u6700\u5927\u7684\u9053\u8def\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/q9y7cl4x.png)\n\n\u5982\u56fe\uff0c\u7ea2\u7ebf\u4e3a\u77e9\u5f62\u4e2d\u8f66\u6d41\u6307\u6570\u6700\u5927\u7684\u9053\u8def\uff0c\n\n\u4e24\u7aef\u70b9 $(k,s),(k,t)$ **\u4e0d\u8003\u8651\u77e9\u5f62\u4e2d\u5185\u90e8\u9053\u8def**\u7684\u7b54\u6848\u5206\u522b\u4e3a $x,y$\uff0c\n\n\u5219 $\\forall i\\in[s,t]$\uff0c\u53ef\u4ee5\u786e\u5b9a $(k,i)$ \u7684\u7b54\u6848\u4e3a $\\max\\{x+i-s,y+t-i\\}$\u3002\n\n\u82e5\u6240\u8be2\u95ee\u7684\u70b9\u5728\u7ea2\u7ebf\u4e0a\uff0c\u5219\u53ef\u4ee5\u8fd4\u56de\u7b54\u6848\uff0c\u5426\u5219\u5411\u6240\u8be2\u95ee\u7684\u70b9\u6240\u5728\u7684\u5b50\u77e9\u5f62\u9012\u5f52\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/a5hn2ps9.png)\n\n\u8bbe\u6240\u8be2\u95ee\u7684\u70b9\u5728\u4e0a\u534a\u4e2a\u5b50\u77e9\u5f62\u4e2d\u3002\n\n\u5982\u56fe\uff0c\u84dd\u7ebf\u4e3a\u5b50\u77e9\u5f62\u4e2d\u8f66\u6d41\u6307\u6570\u6700\u5927\u7684\u9053\u8def\uff0c\n\n\u7aef\u70b9 $(s',k')$ \u5728\u9ed1\u7ebf\u4e0a\uff0c\u5df2\u77e5**\u4e0d\u8003\u8651\u5b50\u77e9\u5f62\u4e2d\u5185\u90e8\u9053\u8def**\u7684\u7b54\u6848\uff0c\n\n\u7aef\u70b9 $(t',k')$ \u5728\u7ea2\u7ebf\u4e0a\uff0c**\u4e0d\u8003\u8651\u5b50\u77e9\u5f62\u4e2d\u5185\u90e8\u9053\u8def**\u7684\u7b54\u6848\u4e3a $\\max\\{x+t'-s,y+t-t'\\}$\u3002\n\n\u82e5\u6240\u8be2\u95ee\u7684\u70b9\u5728\u84dd\u7ebf\u4e0a\uff0c\u5219\u53ef\u4ee5\u8fd4\u56de\u7b54\u6848\uff0c\u5426\u5219\u5411\u6240\u8be2\u95ee\u7684\u70b9\u6240\u5728\u7684\u5b50\u77e9\u5f62\u9012\u5f52\u3002\n\n\u7279\u522b\u5730\uff0c\u6700\u521d\u6574\u4e2a\u77e9\u5f62\u56db\u8fb9\u4e0a**\u4e0d\u8003\u8651\u5176\u5185\u90e8\u9053\u8def**\u7684\u6240\u6709\u7b54\u6848\u4e3a $0$\u3002\n\n\u800c\u4e14\u9898\u76ee\u4e2d\u6709\uff1a\n\n>\u79fb\u52a8\u5f00\u59cb\u65f6\uff0c\u53ef\u4ee5\u4efb\u610f\u9009\u62e9\u65b9\u5411\u3002\n\n\u6240\u4ee5\u9700\u8981\u8003\u8651\u5f00\u59cb\u65f6\u7684\u79fb\u52a8\u65b9\u5411\uff0c\u9012\u5f52\u7ec8\u6b62\u65f6\u5982\u679c\u4e0d\u6ee1\u8db3\u6b64\u65f6\u679a\u4e3e\u7684\u65b9\u5411\u9700\u8981\u7ee7\u7eed\u9012\u5f52\u3002\n\n\u7528 ST \u8868\u7ef4\u62a4\u5b50\u77e9\u5f62\u4e2d\u8f66\u6d41\u6307\u6570\u6700\u5927\u7684\u9053\u8def\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u6700\u574f\u60c5\u51b5\u4e0b\u6700\u591a\u9012\u5f52 $H+W$ \u5c42\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u4e3a $O(Q(H+W))$\u3002\n\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nstruct S\n{\n    int s, t;\n    long long x, y;\n    bool v;\n} a[50050], b[50050];\nint n, m, q, x, y;\nlong long s;\nstruct T\n{\n    int n;\n    pair<int, int> a[20][50050];\n    void B(int _)\n    {\n        n = _;\n        for (int i = 1; i <= n; ++i)\n            scanf(\"%d\", &a[0][i].first), a[0][i].second = i;\n        for (int i = 1; 1 << i <= n; ++i)\n            for (int j = 1; j + (1 << i) - 1 <= n; ++j)\n                a[i][j] = max(a[i - 1][j], a[i - 1][j + (1 << i - 1)]);\n    }\n    pair<int, int> Q(int x, int y)\n    {\n        if (x > y)\n            return {0, 0};\n        int k = __lg(y - x + 1);\n        return max(a[k][x], a[k][y - (1 << k) + 1]);\n    }\n} X, Y;\nlong long D(int s1, int s2, int t1, int t2, int k1, int k2, int f, int g)\n{\n    auto P = X.Q(s1 + (f >> 0 & 1), t1 - (f >> 1 & 1)),\n         Q = Y.Q(s2 + (f >> 2 & 1), t2 - (f >> 3 & 1));\n    int x = P.second, y = Q.second;\n    if (P > Q)\n    {\n        a[x] =\n            {s2, t2,\n             b[s2].v ? max(b[s2].x + x - b[s2].s, b[s2].y + b[s2].t - x) : 0,\n             b[t2].v ? max(b[t2].x + x - b[t2].s, b[t2].y + b[t2].t - x) : 0,\n             1};\n        if (k1 == x)\n        {\n            if (g == 0)\n                return D(s1, s2, x, t2, k1, k2, f | 2, g);\n            if (g == 1)\n                return D(x, s2, t1, t2, k1, k2, f | 1, g);\n            if (g == 2)\n                return a[x].x + k2 - s2;\n            if (g == 3)\n                return a[x].y + t2 - k2;\n        }\n        if (k1 > x)\n            return D(x, s2, t1, t2, k1, k2, f | 1, g);\n        if (k1 < x)\n            return D(s1, s2, x, t2, k1, k2, f | 2, g);\n    }\n    if (P < Q)\n    {\n        b[y] =\n            {s1, t1,\n             a[s1].v ? max(a[s1].x + y - a[s1].s, a[s1].y + a[s1].t - y) : 0,\n             a[t1].v ? max(a[t1].x + y - a[t1].s, a[t1].y + a[t1].t - y) : 0,\n             1};\n        if (k2 == y)\n        {\n            if (g == 0)\n                return b[y].x + k1 - s1;\n            if (g == 1)\n                return b[y].y + t1 - k1;\n            if (g == 2)\n                return D(s1, s2, t1, y, k1, k2, f | 8, g);\n            if (g == 3)\n                return D(s1, y, t1, t2, k1, k2, f | 4, g);\n        }\n        if (k2 > y)\n            return D(s1, y, t1, t2, k1, k2, f | 4, g);\n        if (k2 < y)\n            return D(s1, s2, t1, y, k1, k2, f | 8, g);\n    }\n}\nvoid F(int x, int y, int g)\n{\n    for (int i = 1; i <= n; ++i)\n        a[i].v = 0;\n    for (int i = 1; i <= m; ++i)\n        b[i].v = 0;\n    s = max(s, D(1, 1, n, m, x, y, 0, g));\n}\nsigned main()\n{\n    scanf(\"%d%d%d\", &n, &m, &q);\n    X.B(n);\n    Y.B(m);\n    while (q--)\n    {\n        scanf(\"%d%d\", &x, &y);\n        s = 0;\n        if (x != 1)\n            F(x, y, 0);\n        if (x != n)\n            F(x, y, 1);\n        if (y != 1)\n            F(x, y, 2);\n        if (y != m)\n            F(x, y, 3);\n        printf(\"%lld\\n\", s);\n    }\n    return 0;\n}\n```\n",
        "postTime": 1671010791,
        "uid": 388651,
        "name": "5k_sync_closer",
        "ccfLevel": 7,
        "title": "AT_joisc2017_j \u8a98\u62d0 2 (Abduction 2) \u9898\u89e3"
    },
    {
        "content": "### AT2542 \u8a98\u62d0 2 (Abduction 2)  \n#### \u9898\u610f  \n$\\ \\ \\ \\ $\u7ed9\u51fa\u4e00\u4e2a\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\uff0c\u89c4\u5b9a\u6bcf\u6761\u6a2a\u5411\u548c\u7eb5\u5411\u7684\u7ebf\u90fd\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684\u6570\u503c\uff0c\u7ed9\u51fa\u82e5\u5e72\u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u4ece\u67d0\u4e2a\u70b9\u5f00\u59cb\u4ee5\u4efb\u610f\u65b9\u5411\u51fa\u53d1\uff0c\u6bcf\u5230\u4e00\u4e2a\u4ea4\u70b9\u5c31\u9009\u62e9\u7ecf\u8fc7\u8be5\u70b9\u7684\u4e24\u6761\u76f4\u7ebf\u4e2d\u5bf9\u5e94\u6570\u503c\u8f83\u5927\u7684\u90a3\u6761\u7ebf\u8d70\uff0c\u5982\u679c\u9700\u8981\u6539\u53d8\u65b9\u5411\u53ef\u4ee5\u4efb\u610f\u9009\u62e9\u5de6\u8f6c\u6216\u8005\u53f3\u8f6c\uff0c\u6c42\u6309\u7167\u8fd9\u6837\u7684\u89c4\u5219\u8d70\u4e0b\u53bb\u6700\u5927\u80fd\u7ecf\u8fc7\u591a\u5c11\u8fb9\u3002  \n\n------------\n#### \u9898\u89e3  \n$\\ \\ \\ \\ $\u62ff\u5230\u8fd9\u9053\u9898\u5148\u662f\u6ca1\u6709\u601d\u8def\uff0c\u4f46\u6211\u4eec\u770b\u770b\u6570\u636e\u8303\u56f4\uff0c\u8bf4\u4e0d\u5b9a\u5bf9\u89e3\u9898\u4f1a\u6709\u5e2e\u52a9\u3002  \n\n$\\ \\ \\ \\ $\u7b2c\u4e00\u4e2a\u5b50\u4efb\u52a1 $H,W \\le 8,Q=1$ \u65f6\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7528DFS\u66b4\u529b\u8fc7\u53bb\uff0c\u56e0\u6b64\uff1a \n\n$\\texttt{Algorithm 1 \u66b4\u529b\u641c\u7d22}$  \n$\\ \\ \\ \\ $\u5373\u4ece\u8d77\u70b9\u5f00\u59cb\u641c\u7d22\uff0c\u6bcf\u5230\u4e00\u4e2a\u70b9\u5224\u65ad\u76f4\u8d70\u6216\u8005\u8f6c\u5f2f\uff0c\u76f4\u8d70\u5c31\u76f4\u63a5\u66f4\u6539\u5bf9\u5e94\u6a2a\u6216\u7eb5\u5750\u6807\uff0c\u8f6c\u5f2f\u5219\u5206\u4e24\u7c7b\u8ba8\u8bba\u5e76\u53d6\u6700\u5927\u503c\u5373\u53ef\uff0c\u4ee3\u7801\u5e94\u8be5\u4e0d\u662f\u5f88\u96be\u5199\uff0c\u5728\u6b64\u4e0d\uff08lan\uff09\u7ed9\uff08de\uff09\u51fa\uff08xie\uff09\u3002  \n$\\ \\ \\ \\ $\u901a\u8fc7\u6784\u9020\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u8def\u5f84\u6700\u957f\u662f $2\\times \\max\\{H,W\\}$ \uff0c\u56e0\u6b64\u6700\u5927\u5171\u6709 $2\\times \\max\\{H,W\\}!$ \u7684\u641c\u7d22\u6b21\u6570(\u5f53\u7136\u8fd9\u8dd1\u4e0d\u6ee1)\u3002\u5e76\u4e14\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e\u8fd9\u6761\u8def\u7ebf\u4e0d\u4f1a\u91cd\u53e0\uff0c\u56e0\u6b64\u4e0d\u7528\u62c5\u5fc3\u91cd\u590d\u8ba1\u7b97\u3002\u6b64\u65f6\u7406\u8bba\u4e0a\u53ef\u4ee5\u901a\u8fc7\u7b2c\u4e00\u4e2a\u5b50\u4efb\u52a1\u3002  \n\n$\\texttt{Algorithm 2 \u7ebf\u6bb5\u6811\u4f18\u5316/ST\u8868}$  \n$\\ \\ \\ \\ $\u6253\u5b8c\u66b4\u529b\u7b2c\u4e00\u4ef6\u4e8b\u662f\u4ec0\u4e48\uff1f\u8003\u8651\u4f18\u5316\u66b4\u529b\u3002\u6211\u4eec\u53d1\u73b0\u5176\u5b9e\u76f4\u8d70\u7684\u8fc7\u7a0b\u662f\u5355\u7eaf\u4e00\u6b65\u6b65\u8d70\u7684\uff0c\u4f46\u662f\u8fd9\u79cd\u76f4\u8d70\u5176\u5b9e\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u5982\u679c\u6211\u4eec\u77e5\u9053\u4e0b\u4e00\u4e2a\u5728\u5de6\u8fb9\u7684\u8f6c\u70b9\u548c\u5728\u53f3\u8fb9\u7684\u8f6c\u70b9\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5feb\u901f\u5730\u5ffd\u7565\u6389\u76f4\u8d70\u3002  \n\n$\\ \\ \\ \\ $\u800c\u5bfb\u627e\u7684\u8fc7\u7a0b\u62bd\u8c61\u51fa\u6765\uff0c\u5c31\u662f\u7ed9\u51fa\u4e00\u4e2a\u6570\u5217\u548c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5206\u522b\u6c42\u5728\u8be5\u4f4d\u7f6e\u4e24\u8fb9\u7b2c\u4e00\u4e2a\u5927\u4e8e\u8fd9\u4e2a\u6570\u7684\u4f4d\u7f6e\u3002  \n$\\ \\ \\ \\ $\u8fd9\u53ef\u4ee5\u60f3\u5230\u7ebf\u6bb5\u6811\uff0c\u7ef4\u62a4\u6700\u5927\u503c\uff0c\u4ee5\u627e\u5de6\u8fb9\u4e3a\u4f8b\uff1a\u8fdb\u5165\u51fd\u6570\u7684\u65f6\u5019\u5148\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u4e24\u4e2a\u6761\u4ef6\uff08\u5728\u5de6\u8fb9\u548c\u6700\u5927\u503c\u5927\u4e8e\u7ed9\u5b9a\u503c\uff09\uff0c\u6ee1\u8db3\u5219\u4f18\u5148\u5728\u53f3\u8fb9\u8fd4\u56de\u67e5\u8be2\u7ed3\u679c\uff0c\u53f3\u8fb9\u65e0\u679c\u518d\u8fd4\u56de\u5de6\u8fb9\uff1b\u67e5\u8be2\u53f3\u8fb9\u65f6\u540c\u7406\u3002  \n$\\ \\ \\ \\ $\u56e0\u6b64\u6211\u4eec\u5206\u522b\u7ef4\u62a4\u884c\u548c\u5217\u7684\u6570\u5217\u6700\u5927\u503c\uff0c\u5728\u641c\u7d22\u65f6\u76f4\u63a5\u901a\u8fc7\u7ebf\u6bb5\u6811 $\\log n$ \u5730\u627e\u5230\u4e0b\u4e00\u4e2a\u8f6c\u5411\u7684\u5750\u6807\u5373\u53ef\u3002\u5f53\u7136\u7531\u4e8e\u6211\u4eec\u662f\u65e0\u4fee\u6539\u67e5\u8be2\u6700\u5927\u503c\uff0c\u4e5f\u53ef\u4ee5\u7528 ST \u8868\uff0c\u65b9\u6cd5\u540c\u4e0a\u3002\n\n$\\ \\ \\ \\ $\u8fd9\u6837\u6211\u4eec\u5e94\u8be5\u5c31\u80fd\u901a\u8fc7\u524d\u4e09\u4e2a\u5b50\u4efb\u52a1\u4e86\u3002  \n\n$\\texttt{Algorithm 3 \u8bb0\u5fc6\u5316} $  \n$\\ \\ \\ \\ $\u4f46\u662f\u6211\u4eec\u6765\u770b\u540e\u9762\u4e24\u4e2a\u5b50\u4efb\u52a1\uff0c\u5b83\u4eec\u7684\u4e0d\u540c\u70b9\u5728\u4e8e\u8be2\u95ee\u7684\u70b9\u53d8\u591a\u4e86\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u4f1a\u53d1\u73b0\u4e00\u4e2a\u95ee\u9898\uff1a\u6709\u53ef\u80fd\u4f1a\u5728\u641c\u7d22\u5176\u4ed6\u70b9\u65f6\u4ea7\u751f\u91cd\u590d\u8ba1\u7b97\u3002  \n\n$\\ \\ \\ \\ $\u89e3\u51b3\u91cd\u590d\u8ba1\u7b97\u90a3\u80af\u5b9a\u4f1a\u7528\u5230\u8bb0\u5fc6\u5316\uff0c\u4f46\u662f\u6211\u4eec\u662f\u5f00\u4e0d\u4e0b $H\\times W$\u7684\u6570\u7ec4\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u5f97\u53e6\u5bfb\u51fa\u8def\u3002  \n\n$\\ \\ \\ \\ $\u8003\u8651\u5728\u52a0\u5165\u4e86\u7ebf\u6bb5\u6811\u8fd9\u4e2a\u4f18\u5316\u540e\uff0c\u6211\u4eec\u5728\u6bcf\u4e2a\u70b9\u4f1a\u6709\u70b9\u5750\u6807\u4e0e\u5230\u8fbe\u8fd9\u4e2a\u70b9\u662f\u7eb5\u5411\u8fd8\u662f\u6a2a\u5411\u5230\u8fbe\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u4ee5\u65b9\u5411\u548c\u6a2a\u5750\u6807 $\\texttt{or}$ \u7eb5\u5750\u6807\u4f5c\u4e3a\u4e0b\u6807\u5f00 $map$\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u4e0b\u6570\u7ec4\u4e86\u3002 ~~\uff08STL\u5927\u6cd5\u543c\uff09~~  \n\n$\\ \\ \\ \\ $\u81f3\u6b64,\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5168\u90e8\u5b50\u4efb\u52a1\u3002  \n\n------------\n#### \u4ee3\u7801 \n```cpp\n#include <map>\n#include <cstdio>\n#include <algorithm>\n#define ls p<<1//\u4e2a\u4eba\u7684\u5b8f\u5b9a\u4e49\u4e60\u60ef\uff0c\u4f46\u5bb9\u6613\u62d6\u6162\u901f\u5ea6\uff0c\u4e0d\u5efa\u8bae\u4f7f\u7528\n#define rs p<<1|1\n#define lson ls,l,mid\n#define rson rs,mid+1,r\n#define ll long long\nusing namespace std;\nint NS[500005],EW[500005];\nint a[500005];\nint n,m,q;\nstruct Seg{\n\tint tr[2000005];\n\tvoid push_up(int p){tr[p]=max(tr[ls],tr[rs]);}\n\tvoid build(int p,int l,int r,int arr[])\n\t{\n\t\tif(l==r)\n\t\t{\n\t\t\ttr[p]=arr[l];\n\t\t\treturn;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tbuild(lson,arr);build(rson,arr);\n\t\tpush_up(p);\n\t}\n\tint queryL(int p,int l,int r,int k,int v)//\u5728k\u5de6\u8fb9\u4e14\u503c\u5927\u4e8ev\u7684\u7b2c\u4e00\u4e2a\u4e0b\u6807 \n\t{\n\t\tif(l>=k||tr[p]<=v) return 0;\n\t\tif(l==r) return l;\n\t\tint mid=(l+r)>>1;\n\t\tint index=queryL(rson,k,v);\n\t\tif(index) return index;\n\t\telse return queryL(lson,k,v);\n\t}\n\tint queryR(int p,int l,int r,int k,int v)//\u5728k\u53f3\u8fb9\u4e14\u503c\u5927\u4e8ev\u7684\u7b2c\u4e00\u4e2a\u4e0b\u6807 \n\t{\n\t\tif(r<=k||tr[p]<=v) return 0;\n\t\tif(l==r) return l;\n\t\tint mid=(l+r)>>1;\n\t\tint index=queryR(lson,k,v);\n\t\tif(index) return index;\n\t\telse return queryR(rson,k,v);\n\t}\n}h,z;\nmap <int,ll> M[2][50005];\nll dfs(int x,int y,int dir)//dir=1\u4ee3\u8868\u4ece\u5357\u5317\u5230\u8fbe\u8fd9\u4e2a\u8def\u53e3\u4e14\u5f80\u4e1c\u897f\u8d70\uff0c\u5426\u5219\u662f\u4ece\u4e1c\u897f\u5230\u8fbe\u8fd9\u4e2a\u8def\u53e3\u4e14\u5f80\u5357\u5317\u8d70\n{\n\tif(M[dir][x][y]) return M[dir][x][y];\n\tll tmp=0;\n\tif(!dir)\n\t{\n\t\tint L=z.queryL(1,1,n,x,NS[y]),R=z.queryR(1,1,n,x,NS[y]);\n\t\tif(L) tmp=max(tmp,(ll)x-L+dfs(L,y,1));\n\t\telse tmp=max(tmp,(ll)x-1);\n\t\tif(R) tmp=max(tmp,(ll)R-x+dfs(R,y,1));\n\t\telse tmp=max(tmp,(ll)n-x);\n\t}\n\telse\n\t{\n\t\tint D=h.queryL(1,1,m,y,EW[x]),U=h.queryR(1,1,m,y,EW[x]);\n\t\tif(D) tmp=max(tmp,(ll)y-D+dfs(x,D,0));\n\t\telse tmp=max(tmp,(ll)y-1);\n\t\tif(U) tmp=max(tmp,(ll)U-y+dfs(x,U,0));\n\t\telse tmp=max(tmp,(ll)m-y);\n\t}\n\treturn M[dir][x][y]=tmp;\n}\nint main() {\n\tscanf(\"%d %d %d\",&n,&m,&q);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&EW[i]);\n\tfor(int i=1;i<=m;i++) scanf(\"%d\",&NS[i]);\n\th.build(1,1,m,NS);z.build(1,1,n,EW);\n\tfor(int i=1,x,y;i<=q;i++)\n\t{\n\t\tscanf(\"%d %d\",&x,&y);\n\t\tprintf(\"%lld\\n\",max(dfs(x,y,1),dfs(x,y,0)));//\u8d77\u59cb\u70b9\u6240\u6709\u65b9\u5411\u90fd\u53ef\u4ee5\n\t}\n\treturn 0;\n}\n```  \n----\n#### \u6700\u540e  \n$\\ \\ \\ \\ $\u4f60\u8c37\u73b0\u5728\u4ea4\u4e0d\u4e86 AT\uff0c\u56e0\u6b64\u4ee3\u7801\u6ca1\u6709\u5728\u6d1b\u8c37\u4e0a\u7684\u901a\u8fc7\u8bb0\u5f55\uff0c\u4f46\u4e00\u5b9a\u662f\u53ef\u4ee5\u901a\u8fc7\u7684\u3002  \n$\\ \\ \\ \\ $~~\u53e6\u5916\u540c\u673a\u623f\u6709\u4e00\u4f4d\u5927\u4f6c\u786c\u751f\u751f\u6bcf\u6b21\u67e5\u8be2\u90fd\u6e05\u7a7a\u4e86map\uff0c\u7adf\u7136\u80fd\u8dd1\u8fc7\uff0c\u4f46\u662f\u635e\u4e86\u4e2a\u6700\u52a3\u89e3\uff0c\u5177\u4f53\u54ea\u4e2aOJ\u5c31\u4e0d\u8bf4\u4e86\u3002awa~~",
        "postTime": 1593528913,
        "uid": 160701,
        "name": "Azaz\u0435l",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT2542 \u3010\u8a98\u62d0 2 (Abduction 2)\u3011"
    }
]