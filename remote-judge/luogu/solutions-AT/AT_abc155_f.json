[
    {
        "content": "\u6628\u5929ABC\u53ea\u505a\u51fa\u67654\u9898\u2026\u2026\u5e9f\u4e86\u5e9f\u4e86\u2026\u2026\n\n\u8fd9\u9898\u5efa\u56fe\u65b9\u6cd5\u597d\u795e\u4ed9\u7684\u4e9a\u5b50\u3002\n\n\u9996\u5148\uff0c\u672c\u9898\u7684\u7b2c\u4e00\u4e2a\u96be\u70b9\uff08\uff1f\uff09\u662f\u8981\u60f3\u51fa\u5728\u5f02\u6216\u610f\u4e49\u4e0b\u8fdb\u884c**\u5dee\u5206**\u3002\u5728\u5dee\u5206\u540e\uff0c\u539f\u672c\u662f\u5bf9\u4e00\u6bb5\u533a\u95f4\u7684\u64cd\u4f5c\uff0c\u5c31\u53ef\u4ee5\u88ab\u8f6c\u6362\u6210\u70b9\u5bf9\u4e4b\u95f4\u7684\u64cd\u4f5c\u3002\n\n\u5728\u5dee\u5206\u540e\uff0c\u6211\u4eec\u7684\u95ee\u9898\u53d8\u6210\u4e86\uff1a\u7ed9\u4f60\u4e00\u4e2a$0/1$\u6570\u5217\u548c\u4e00\u4e9b\u70b9\u5bf9\uff0c\u4f60\u53ef\u4ee5\u5c06\u540c\u4e00\u5bf9\u6570\u5f02\u6216$1$\uff0c\u4f7f\u5f97\u6700\u7ec8\u5f97\u5230\u4e00\u4e2a\u5168$0$\u7684\u6570\u5217\u3002\n\n\u4e00\u63d0\u5230**\u70b9\u5bf9**\uff0c\u6211\u4eec\u7acb\u9a6c\u5c31\u60f3\u5230\u65e0\u5411\u8fb9\u3002\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u5c06\u95ee\u9898\u8f6c\u6362\u6210\u4e86\uff1a\u5728\u4e00\u5f20\u65e0\u5411\u56fe\u4e2d\uff0c\u9009\u62e9\u4e00\u4e9b\u8fb9\uff0c\u5c06\u8fb9\u7684\u7aef\u70b9\u4e0a\u7684\u6570\u5f02\u6216\u4e0a$1$\uff0c\u95ee\u80fd\u5426\u5f97\u5230\u4e00\u5f20\u5168$0$\u56fe\u3002\n\n\u7a0d\u7b49\uff0c\u6211\u4eec\u770b\u770b\u8fd9\u4e2a\u6a21\u578b\u80fd\u5426\u7b80\u5316\u3002\u6bd4\u5982\u8bf4\uff0c\u5b83\u80fd\u5426\u662f\u4e00\u9897\u6811\u5462\uff1f\n\n\u663e\u7136\u53ef\u4ee5\u3002\u5982\u679c\u4f60\u9009\u62e9\u4e86\u4e00\u4e2a\u73af\u4e0a\u6240\u6709\u7684\u8fb9\uff0c\u5c31\u8ddf\u6ca1\u6709\u9009\u62e9\u4efb\u4f55\u8fb9\u6ca1\u6709\u533a\u522b\uff08\u6bcf\u4e2a\u70b9\u90fd\u88ab\u5f02\u6216\u4e86\u4e24\u6b21\uff09\u3002\u6211\u4eec\u53ef\u4ee5\u6c42\u51fa\u8be5\u56fe\u7684\u4efb\u610f\u4e00\u9897\u751f\u6210\u68ee\u6797\uff0c\u4e00\u6837\u53ef\u4ee5\u3002\u5728\u4ee3\u7801\u4e2d\uff0c\u8fd0\u7528\u4e86~~\u51b0\u8336\u59ec~~\u5e76\u67e5\u96c6\u6765\u6c42\u751f\u6210\u68ee\u6797\u3002\n\n\u662f\u68ee\u6797\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8fdb\u884c\u6811\u5f62DP\u4e86\u3002\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u5982\u4e0b\u7684\u6811\u5f62DP\uff1a\n\n\u53f6\u5b50\u8282\u70b9\u7684\u56de\u6eaf\u503c\u5373\u4e3a\u5b83\u81ea\u5df1\u7684\u503c\u3002\n\n\u5728\u8003\u8651\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u65f6\uff1a\n\n\u5982\u679c\u5b83\u7684\u4e00\u4e2a\u513f\u5b50\u56de\u6eaf\u4e0a\u6765\u4e86$1$\uff0c\u5c31\u610f\u5473\u7740\u5b83\u9700\u8981\u88ab\u5f02\u6216\u4e00\u4e0b\uff0c\u5c31\u610f\u5473\u7740\u8fde\u63a5\u5b83\u548c\u5f53\u524d\u513f\u5b50\u7684\u8fd9\u6761\u8fb9\u662f\u5e94\u8be5\u9009\u62e9\u7684\u3002\u5426\u5219\uff0c\u5c31\u610f\u5473\u7740\u4e0d\u5e94\u8be5\u9009\u62e9\u8fd9\u6761\u8fb9\u3002\n\n\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u7684\u56de\u6eaf\u503c\u5373\u4e3a\u5b83\u672c\u8eab\u7684\u503c\u5f02\u6216\u4e0a\u6240\u6709\u513f\u5b50\u7684\u56de\u6eaf\u503c\u7684\u5f02\u6216\u548c\u3002\u56e0\u4e3a\u6bcf\u6709\u4e00\u4e2a$1$\u7684\u513f\u5b50\u8282\u70b9\uff0c\u4e0d\u4ec5\u8fd9\u4e2a\u513f\u5b50\u4f1a\u88ab\u4fee\u6539\uff0c\u5b83\u81ea\u5df1\u4e5f\u4f1a\u88ab\u4fee\u6539\u3002\n\n\u90a3\u4e48\uff0c\u5bf9\u4e8e\u6839\u8282\u70b9\uff0c\u5982\u679c\u5b83\u8fd4\u56de\u4e0a$1$\uff0c\u5c31\u8bf4\u660e\u6709\u4e0d\u5408\u6cd5\u7684\u5730\u65b9\uff0c\u6ca1\u6709\u4e00\u7ec4\u5408\u7406\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\n\u5f53\u7136\uff0c\u5982\u679c\u5b83\u8fd4\u56de$0$\uff0c\u5c31\u8bf4\u660e\u5f53\u524d\u8fd9\u68f5\u6811\u662f\u5408\u6cd5\u7684\u3002\n\n\u7a0d\u7b49\uff0c\u6211\u4eec\u597d\u50cf\u5ffd\u7565\u4e86$n+1$\u8fd9\u4e2a\u8282\u70b9\uff01\u5728\u5dee\u5206\u5e76\u5c06\u533a\u95f4\u8be2\u95ee\u8f6c\u6210\u5355\u70b9\u8be2\u95ee\u65f6\uff0c\u662f\u6709\u53ef\u80fd\u51fa\u73b0$n+1$\u7684\uff01\n\n\u6211\u4eec\u5c31\u7279\u5224\u4e00\u4e0b\uff0c\u56e0\u4e3a$n+1$\u65e0\u8bba\u8fd4\u56de$0$\u8fd8\u662f$1$\u90fd\u662f\u5408\u6cd5\u7684\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,head[100100],cnt,dsu[100100],pos[100100];\nbool sta[100100],vis[100100];\npair<int,bool>p[100100];\nstruct edge{\n\tint to,next,id;\n}edge[1001000];\nvoid ae(int u,int v,int w){\n\tedge[cnt].id=w,edge[cnt].next=head[u],edge[cnt].to=v,head[u]=cnt++;\n\tedge[cnt].id=w,edge[cnt].next=head[v],edge[cnt].to=u,head[v]=cnt++;\n}\nvector<int>v;\nint fd(int x){return dsu[x]==x?x:dsu[x]=fd(dsu[x]);}\nbool mg(int x,int y){\n\tx=fd(x),y=fd(y);\n\tif(x==y)return false;\n\tdsu[x]=y;\n\treturn true;\n}\nbool dfs(int x){\n\tbool res=sta[x];\n\tvis[x]=true;\n\tfor(int i=head[x];i!=-1;i=edge[i].next){\n\t\tif(vis[edge[i].to])continue;\n\t\tbool now=dfs(edge[i].to);\n\t\tif(now)v.push_back(edge[i].id);\n\t\tres^=now;\n\t}\n\treturn res;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m),memset(head,-1,sizeof(head));\n\tfor(int i=1;i<=n+1;i++)dsu[i]=i;\n\tfor(int i=1;i<=n;i++)scanf(\"%d%d\",&p[i].first,&p[i].second);\n\tsort(p+1,p+n+1);\n\tfor(int i=1;i<=n;i++)pos[i]=p[i].first,sta[i]=p[i].second;\n\tfor(int i=n;i;i--)sta[i]^=sta[i-1];\n\tfor(int i=1,l,r;i<=m;i++){\n\t\tscanf(\"%d%d\",&l,&r),l=lower_bound(pos+1,pos+n+1,l)-pos,r=upper_bound(pos+1,pos+n+1,r)-pos;\n\t\tif(mg(l,r))ae(l,r,i);\n\t}\n\tdfs(n+1);\n\tfor(int i=1;i<=n;i++){\n\t\tif(vis[i])continue;\n\t\tif(dfs(i)){puts(\"-1\");return 0;}\n\t}\n\tsort(v.begin(),v.end());\n\tprintf(\"%d\\n\",v.size());\n\tfor(int i=0;i<v.size();i++)printf(\"%d \",v[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1581949195,
        "uid": 123369,
        "name": "xtx1092515503",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT4831 \u3010[ABC155F] Perils in Parallel\u3011"
    },
    {
        "content": "### \u9898\u610f\n\n\u6570\u8f74\u4e0a\u6709 $n$ \u4e2a\u70b8\u5f39\uff0c\u7b2c $i$ \u4e2a\u70b8\u5f39\u5728\u5750\u6807 $A_i$\uff0c\u72b6\u6001\u4e3a $B_i$\uff08$B_i=1$ \u8868\u660e\u6fc0\u6d3b\u4e86\uff0c\u53cd\u4e4b\u8868\u660e\u6ca1\u6709\uff09\u3002\n\n\u8fd8\u6709 $m$ \u6839\u7ef3\u5b50\uff0c\u5982\u679c\u5272\u65ad\u7b2c $i$ \u6839\u7ef3\u5b50\uff0c\u90a3\u4e48\u5750\u6807\u5904\u4e8e $L_i$ \u548c $R_i$ \u4e4b\u95f4\u7684\u70b8\u5f39\u7684\u72b6\u6001\u4f1a\u53cd\u8f6c\u3002\n\n\u4f60\u9700\u8981\u56de\u7b54\u662f\u5426\u6709\u4e00\u79cd\u5207\u65ad\u7ef3\u5b50\u7684\u65b9\u5f0f\u4f7f\u5f97\u6240\u6709\u70b8\u5f39\u6700\u7ec8\u5904\u4e8e\u672a\u6fc0\u6d3b\u72b6\u6001\uff0c\u5982\u679c\u6709\uff0c\u8f93\u51fa\u65b9\u6848\u3002\n\n$\\texttt{Data Range:}1\\leq n\\leq 10^5,1\\leq m\\leq 2\\times 10^5,1\\leq A_i\\leq 10^9,1\\leq L_i\\leq R_i\\leq 10^9$\n\n### \u9898\u89e3\n\n\u597d\u9898\uff0c\u4f46\u662f\u573a\u4e0a\u53ea\u60f3\u51fa\u4e86\u4e00\u534a\uff0c\u6211\u8fd8\u662f\u592a\u83dc\u4e86\u3002\n\n\u611f\u8c22 Mital \u795e\u4ed9\u544a\u8bc9\u6211\u505a\u53e6\u4e00\u534a\uff01\n\n\u5982\u679c\u4f60\u505a\u8fc7[\u300c\u96c5\u793c\u96c6\u8bad 2018 Day2\u300d\u64cd\u4f5c](https://loj.ac/problem/6500) \u7684\u8bdd\uff0c\u90a3\u4e48\u8fd9\u4e2a\u9898\u4e00\u5f00\u59cb\u5e94\u8be5\u4e0d\u4f1a\u5f88\u96be\u3002\n\n\u6ce8\u610f\u5230\u8bb0\u5f55\u5750\u6807\u662f\u6ca1\u6709\u7528\u7684\uff0c\u8003\u8651\u9996\u5148\u5bf9\u70b8\u5f39\u548c\u7ef3\u5b50\u7684\u5750\u6807\u8fdb\u884c\u79bb\u6563\u5316\u3002\n\n\u73b0\u5728\uff0c\u6211\u4eec\u91cd\u65b0\u5b9a\u4e49 $L_i$ \u548c $R_i$\uff1a\u5982\u679c\u5272\u65ad\u7b2c $i$ \u6839\u7ef3\u5b50\uff0c\u90a3\u4e48\u4ecb\u4e8e\u7b2c $L_i$ \u4e2a\u70b8\u5f39\u548c\u7b2c $R_i$ \u4e2a\u70b8\u5f39\u7684\u72b6\u6001\u4f1a\u53cd\u8f6c\u3002\n\n\u63a5\u7740\uff0c\u5c31\u50cf $\\texttt{yali}$ \u96c6\u8bad\u7684\u90a3\u9053\u9898\u76ee\u4e00\u6837\uff0c\u6211\u4eec\u8003\u8651\u5dee\u5206\u3002\u8fd9\u6837\u5b50\uff0c\u53cd\u8f6c\u72b6\u6001\u4ece\u6539\u53d8\u4e00\u4e2a\u533a\u95f4\u53d8\u6210\u53ea\u9700\u8981\u5c06 $L_i$ \u548c $R_i+1$ \u5f02\u6216\u4e00\u4e0b\u3002\n\n\u7136\u540e\u6211\u4eec\u8fde\u4e00\u6761\u8fde\u63a5 $L_i$ \u548c $R_i+1$ \u7684\u65e0\u5411\u8fb9\u3002\u6240\u4ee5\u95ee\u9898\u53d8\u6210\u7ed9\u4e00\u5f20\u56fe\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570\u6ee1\u8db3\u5947\u5076\u6027\u4e0e $c_i\\operatorname{xor} c_{i-1}$ \u76f8\u540c\u3002\n\n\u4f46\u662f $R+1$ \u53ef\u80fd\u7b49\u4e8e $n+1$\uff0c\u4f46\u662f $n+1$ \u8fd9\u4e2a\u70b9\u662f\u6ca1\u6709\u5ea6\u6570\u5947\u5076\u6027\u9650\u5236\u7684\uff0c\u6240\u4ee5\u8981\u5148\u641e\u5b9a\u4ed6\uff0c\u518d\u6765\u641e\u5b9a\u540e\u9762\u7684\u6709\u5ea6\u6570\u5947\u5076\u6027\u9650\u5236\u7684\u5176\u4ed6\u70b9\u3002\n\n\u8fd9\u4e2a\u968f\u4fbf $\\texttt{dfs}$ \u4e00\u904d\u5c31\u6ca1\u4e86\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef int ll;\nconst ll MAXN=2e5+51;\nstruct Node{\n\tll x,y;\n\tinline bool operator <(const Node &rhs)const\n\t{\n\t\treturn this->x<rhs.x;\n\t}\n};\nstruct Segment{\n\tll l,r,id;\n};\nstruct Edge{\n\tll to,prev,id;\n};\nNode nd[MAXN];\nSegment seg[MAXN];\nEdge ed[MAXN<<1];\nll n,m,tot,cnt,l,r,lx,rx,flg,rr;\nll last[MAXN],res[MAXN],w[MAXN],c[MAXN],diff[MAXN],vis[MAXN];\ninline ll read()\n{\n    register ll num=0,neg=1;\n    register char ch=getchar();\n    while(!isdigit(ch)&&ch!='-')\n    {\n        ch=getchar();\n    }\n    if(ch=='-')\n    {\n        neg=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch))\n    {\n        num=(num<<3)+(num<<1)+(ch-'0');\n        ch=getchar();\n    }\n    return num*neg;\n} \ninline void addEdge(ll from,ll to,ll id)\n{\n\ted[++tot].prev=last[from];\n\ted[tot].to=to;\n\ted[tot].id=id;\n\tlast[from]=tot;\n}\ninline ll discrete(ll x)\n{\n\tll l=1,r=n+1,res=0,mid;\n\twhile(l<=r)\n\t{\n\t\tmid=(l+r)>>1;\n\t\tw[mid]>=x?res=mid,r=mid-1:l=mid+1;\n\t}\n\treturn res;\n}\ninline ll discrete2(ll x)\n{\n\tll l=1,r=n,res=0,mid;\n\twhile(l<=r)\n\t{\n\t\tmid=(l+r)>>1;\n\t\tw[mid]<=x?res=mid,l=mid+1:r=mid-1;\n\t}\n\treturn res;\n}\ninline ll dfs(ll node,ll fa,ll x)\n{\n\tll t=0;\n\tvis[node]=1;\n\tfor(register int i=last[node];i;i=ed[i].prev)\n\t{\n\t\tif(!vis[ed[i].to])\n\t\t{\n\t\t\tt^=dfs(ed[i].to,node,i);\n\t\t}\n\t}\n\tif(node==fa)\n\t{\n\t\treturn t;\n\t}\n\tif(diff[node]^t)\n\t{\n\t\tres[++rr]=ed[x].id;\n\t\treturn 1;\n\t}\n\treturn 0;\n}\nint main()\n{\n\tn=read(),m=read();\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tnd[i].x=read(),nd[i].y=read();\n\t}\n\tsort(nd+1,nd+n+1);\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tc[i]=nd[i].y,w[i]=nd[i].x;\n\t}\n\tfor(register int i=1;i<=m;i++)\n\t{\n\t\tl=discrete(lx=read()),r=discrete2(rx=read());\n\t\tif(rx<lx)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tseg[++cnt]=(Segment){l,r,i};\n\t}\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tdiff[i]=c[i]^c[i-1];\n\t}\n\tfor(register int i=1;i<=cnt;i++)\n\t{\n\t\taddEdge(seg[i].l,seg[i].r+1,seg[i].id);\n\t\taddEdge(seg[i].r+1,seg[i].l,seg[i].id);\n\t}\n\tdfs(n+1,n+1,0);\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tif(vis[i])\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tif(dfs(i,i,0)!=diff[i])\n\t\t{\n\t\t\treturn puts(\"-1\"),0;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",rr),sort(res+1,res+rr+1);\n\tfor(register int i=1;i<=rr;i++)\n\t{\n\t\tprintf(\"%d \",res[i]);\n\t}\n}\n```",
        "postTime": 1581906458,
        "uid": 60990,
        "name": "Karry5307",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 AT4831 \u3010[ABC155F] Perils in Parallel\u3011"
    },
    {
        "content": "## AT4831 [ABC155F] Perils in Parallel \u9898\u89e3\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/AT4831)\n\n### \u601d\u8def\n\u7528 $a_i$ \u8868\u793a\u70b8\u5f39\u4f4d\u7f6e,$b_i$ \u8868\u793a\u70b8\u5f39\u72b6\u6001\uff0c\u5148\u5bf9 $n$ \u4e2a\u70b8\u5f39\u79bb\u6563\u5316\u3002\u7136\u540e\u7c7b\u4f3c\u524d\u7f00\u548c\u7684\u601d\u60f3\uff0c\u505a\u4e00\u904d\u524d\u7f00\u5f02\u6216\uff0c\u5373\u5bf9 $l_i$ \u5230 $r_i$ \u7684\u53cd\u8f6c\u88ab\u7b80\u5316\u6210\u4e86 $l_i$ \u548c $r_i+1$ \u7684\u4fee\u6539\uff0c\u6211\u4eec\u7528 $p_i$ \u6765\u8868\u793a $p_1 \\oplus p_2 \\oplus p_3 \\oplus \\cdots \\oplus p_i$\u3002\u8003\u8651\u76f4\u63a5\u628a $l_i$ \u4e0e $r_i+1$ \u8fde\u65e0\u5411\u8fb9\uff0c\u95ee\u9898\u5c31\u88ab\u62bd\u8c61\u6210\u4e86\u4e00\u5f20\u65e0\u5411\u56fe\u3002\u63a5\u4e0b\u6765\u5728\u56fe\u4e0a\u505a `dfs`\uff0c\u5982\u679c\u8fd9\u4e2a\u70b9\u7684 $p_i$ \u4e3a $0$\uff0c\u5c31\u628a\u5b83\u7684\u4e0b\u6807\u8bb0\u5f55\u4e0b\u6765\uff0c\u5e76\u628a\u7236\u4eb2\u5f02\u6216\u4e0a\uff0c\u5982\u679c\u4e00\u6b21 `dfs` \u4e0b\u6765\uff0c\u8fd9\u4e2a\u70b9\u7684 $p_i$ \u4f9d\u7136\u662f $1$\uff0c\u5219\u65e0\u89e3\u3002\n\n___\n### \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct E{\n\tint u,v,id,next;\n}e[400001];\nstruct B{\n\tint idx,state;\n}bom[400002];\nint n,m,p[400002],b[400002],en,h[400001];\nbool vis[400002];\nset<int>ans;\nbool cmp(B a,B b){\n\treturn a.idx<b.idx; \n}\nvoid add(int u,int v,int id){\n\te[++en].u=u;\n\te[en].v=v;\n\te[en].id=id;\n\te[en].next=h[u];\n\th[u]=en;\n}\nvoid dfs(int x){\n\tvis[x]=1;\n\tfor(int i=h[x];i>0;i=e[i].next){\n\t\tint v=e[i].v;\n\t\tif(!vis[v]){\n\t\t\tdfs(v);\n\t\t\tif(p[v]==1){\n\t\t\t\tans.insert(e[i].id);//\u8bb0\u5f55\u7b54\u6848\n\t\t\t\tp[v]=0;\n\t\t\t\tp[x]^=1;\n\t\t\t}\t\n\t\t}\n\t}\n}\nint main(){\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\tcout.tie(0);\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;++i)\n\t\tcin>>bom[i].idx>>bom[i].state;\n\tsort(bom+1,bom+1+n,cmp);\n\tp[0]=0;\n\tfor(int i=1;i<=n+1;++i){\n\t\tp[i]=bom[i].state^bom[i-1].state;\n\t\tb[i]=bom[i].idx;\n\t}\n\tfor(int i=1;i<=m;++i){\n\t\tint L,R;\n\t\tcin>>L>>R;\n\t\tint l=lower_bound(b+1,b+1+n,L)-b;\n\t\tint r=upper_bound(b+1,b+1+n,R)-b;//\u79bb\u6563\u5316,upper_bound\u76f4\u63a5\u5b9a\u4f4d\u5230\u53f3\u7aef\u70b9+1\n\t\tif(l==r)\n\t\t\tcontinue;\n\t\tadd(l,r,i);\n\t\tadd(r,l,i);\n\t}\n\tfor(int i=1;i<=n+1;++i)\n\t\tif(!vis[i]){\n\t\t\tdfs(i);\n\t\t\tif(p[i]==1){\n\t\t\t\tcout<<-1;//\u65e0\u89e3\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\tcout<<ans.size()<<endl;\n\tfor(int x:ans)\n\t\tcout<<x<<' ';\n\treturn 0;\n}\n```\n",
        "postTime": 1647652985,
        "uid": 371848,
        "name": "\u5434\u601d\u8bda",
        "ccfLevel": 6,
        "title": "AT4831 [ABC155F] Perils in Parallel \u9898\u89e3"
    },
    {
        "content": "- [AT4831 [ABC155F] Perils in Parallel](https://www.luogu.com.cn/problem/AT4831)\n\n### \u9898\u76ee\u63cf\u8ff0\n\n\u5e73\u9762\u4e0a\u6709 $n$ \u4e2a\u70b9\uff0c\u6bcf\u4e2a\u70b9\u6709\u4e00\u4e2a\u4f4d\u7f6e\u662f $p_i$ \u548c\u4e00\u4e2a\u72b6\u6001 0 / 1\u3002\n\n\u6709 $m$ \u4e2a\u64cd\u4f5c\uff0c\u6bcf\u4e2a\u64cd\u4f5c\u5c06 $l_i \\to r_i$ \u7684\u70b9\u5168\u90e8\u7ffb\u8f6c\u3002\n\n\u95ee\u53ef\u4e0d\u53ef\u4ee5\u5c06\u6240\u6709\u70b9\u90fd\u7ffb\u6210 0\uff0c\u5982\u679c\u53ef\u884c\u8f93\u51fa\u65b9\u6848\u3002\n\n### \u6b63\u89e3\n\n\u4e00\u6b21\u64cd\u4f5c\u5c06 $l \\to r$ \u5168\u90e8\u7ffb\u8f6c\uff0c\u7ffb\u8f6c\u7684\u70b9\u592a\u591a\u4e86\uff0c\u53ef\u4e0d\u53ef\u4ee5\u8ba9\u7ffb\u8f6c\u7684\u70b9\u5c11\u4e00\u4e9b\uff1f\n\n\u8003\u8651\u201d\u505a\u5dee\u201c\uff0c\u4ee4\u6392\u5e8f\u540e\u7b2c $i$ \u4e2a\u70b9\u7684\u72b6\u6001\u4e3a $s_i \\operatorname{xor} s_{i - 1}$\uff0c\u8fd9\u6837\u6bcf\u6b21\u7ffb\u8f6c\u53ea\u4f1a\u53d8\u52a8\u4e24\u4e2a\u4f4d\u7f6e $l_i$ \u548c $r_{i + 1}$\u3002\n\n\u5c06\u6240\u6709\u64cd\u4f5c\u7684 $l_i$ \u548c $r_i$ \u8fde\u8fb9\uff0c\u53d1\u73b0\u4e00\u4e2a\u8054\u901a\u5757\u91cc\u9762\u6bcf\u6b21\u53ef\u4ee5\u9009\u4e24\u4e2a\u72b6\u6001\u4e3a 1 \u7684\u70b9\u8fdb\u884c\u4e00\u6b21\u6d88\u9664\u3002\n\n\u90a3\u4e48\u6bcf\u4e2a\u8054\u901a\u5757\u53ea\u8981\u5224\u65ad\u4e00\u4e0b 1 \u7684\u5947\u5076\u6027\u5c31\u53ef\u4ee5\u786e\u5b9a\u662f\u5426\u6709\u7b54\u6848\u4e86\u3002\n\n\u8003\u8651\u600e\u4e48\u6784\u9020\u4e00\u7ec4\u89e3\uff0c\u72b6\u6001\u4e3a 1 \u7684\u70b9\u53ef\u4ee5\u901a\u8fc7\u4e00\u6761\u8fb9\u7684\u64cd\u4f5c\u5230\u8fbe\u53e6\u4e00\u4e2a\u7aef\u70b9\uff0c\u90a3\u4e48\u6211\u5c31\u8ba9\u4e00\u4e2a\u8054\u901a\u5757\u5185\u72b6\u6001\u4e3a 1 \u7684\u70b9\u90fd\u5230 $dfs$ \u6811\u7684\u6839\u8282\u70b9\u5c31\u597d\u4e86\u3002\n\n\u4ece\u5f53\u524d\u8282\u70b9\u5230\u6839\u8282\u70b9\u8def\u5f84\u7684\u8fb9\u5168\u90e8 + 1 \u64cd\u4f5c\uff0c\u6811\u5dee\u5206\u53ef\u4ee5\u89e3\u51b3\uff0c\u6700\u540e\u8f93\u51fa\u64cd\u4f5c\u6570\u4e3a\u5947\u6570\u7684\u8fb9\u5373\u53ef\u3002\n\n$\\color{DeepSkyBlue} {Code}$\n\n```cpp\n#include <bits/stdc++.h>\n#define N 200005\n\nusing namespace std;\n\nint n, m;\nint head[N], nex[N << 1], to[N << 1], eid[N << 1], ecnt;\nint p[N], s[N];\n\nstruct light {\n\tint pos, state;\n}lig[N];\n\nbool cmpLight(const light &lhs, const light &rhs) { return lhs.pos < rhs.pos; }\n\ninline int read() {\n\tint x = 0; char ch = getchar();\n\twhile(!isdigit(ch)) ch = getchar();\n\twhile(isdigit(ch)) x = x * 10 + ch - '0', ch = getchar();\n\treturn x;\n}\ninline void addE(int u, int v, int id) {\n\tto[++ecnt] = v, eid[ecnt] = id;\n\tnex[ecnt] = head[u], head[u] = ecnt;\n}\n\nint cntOne;\nint dif[N], fa[N], fe[N];\nbool vis[N];\n\nvoid dfs(int u) {\n\tif(s[u]) ++dif[u], ++cntOne;\n\tfor(int i = head[u], v; i; i = nex[i]) {\n\t\tv = to[i];\n\t\tif(fa[v]) continue;\n\t\tfa[v] = u, fe[v] = eid[i], dfs(v);\n\t\tdif[u] += dif[v];\n\t}\n}\n\nint main() {\n\tn = read(), m = read();\n\tfor(int i = 1; i <= n; ++i)\n\t\tlig[i].pos = read(), lig[i].state = read();\n\t\n\tsort(lig + 1, lig + n + 1, cmpLight);\n\tfor(int i = 1; i <= n; ++i)\n\t\tp[i] = lig[i].pos, s[i] = lig[i].state;\n\tfor(int i = n + 1; i >= 1; --i)\n\t\ts[i] = s[i] ^ s[i - 1];\n\t\t\n\tfor(int i = 1, l, r; i <= m; ++i) {\n\t\tl = read(), r = read();\n\t\tl = lower_bound(p + 1, p + n + 1, l) - p;\n\t\tr = upper_bound(p + 1, p + n + 1, r) - p - 1;\n\t\tif(l <= r) {\n\t\t\taddE(l, r + 1, i), addE(r + 1, l, i);\n\t\t}\n\t}\n\t\n\tfor(int i = 1; i <= n + 1; ++i)\n\t\tif(!fa[i]) {\n\t\t\tfa[i] = i;\n\t\t\tdfs(i);\n\t\t\tif(cntOne & 1) {\n\t\t\t\tputs(\"-1\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\n\tint cnt = 0;\n\tfor(int i = 1; i <= n + 1; ++i)\n\t\tif(dif[i] & 1)\n\t\t\tvis[fe[i]] = true, ++cnt;\n\t\n\tprintf(\"%d\\n\", cnt);\n\tfor(int i = 1; i <= m; ++i)\n\t\tif(vis[i])\n\t\t\tprintf(\"%d \", i);\n\tputchar('\\n');\n\treturn 0;\n}\n```",
        "postTime": 1585137133,
        "uid": 88471,
        "name": "Lskkkno1",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 [ABC155F] Perils in Parallel"
    },
    {
        "content": "## ABC 155 F - Perils in Parallel\n\n[\u9898\u76ee\u94fe\u63a5](https://atcoder.jp/contests/abc155/tasks/abc155_f)\n\n## \u9898\u76ee\u53d9\u8ff0\n\n\u7ed9\u4f60\u4e00\u4e2a01\u6570\u5217\u548c$n$\u4e2a\u533a\u95f4$[l_i,r_i]$\uff0c\u6bcf\u4e2a\u533a\u95f4$[l_i,r_i]$\u4ee3\u8868\u4f60\u53ef\u4ee5\u5bf9\u8fd9\u4e2a\u533a\u95f4\u91cc\u7684\u6240\u6709\u6570\u5f02\u6216$1$\uff0c\u8bf7\u95ee\u6700\u540e\u80fd\u4e0d\u80fd\u628a\u6240\u6709\u6570\u5f02\u6216\u6210$0$\u3002\n\n## \u9898\u89e3\n\n+ \u5bf9\u95ee\u9898\u8fdb\u884c\u8f6c\u5316\uff0c\u5bf9\u4e00\u4e2a\u533a\u95f4$[l,r]$\u8fdb\u884c\u5f02\u6216\u53ef\u4ee5\u8f6c\u5316\u4e3a\u5bf9\u4e00\u4e2a\u524d\u7f00\u5f02\u6216\u7684\u4e24\u4e2a\u70b9$l$\u548c$r+1$\u8fdb\u884c\u5f02\u6216\u3002\n+ \u7ed9\u6bcf\u4e2a\u533a\u95f4\u7684$l,r+1$\u8fd9\u4e24\u4e2a\u70b9\u8fdb\u884c\u8fde\u8fb9\uff0c\u95ee\u9898\u518d\u6b21\u8f6c\u5316\u4e3a\u662f\u5426\u53ef\u4ee5\u5728\u4e00\u4e2a\u56fe\u4e0a\u5220\u6389\u4e00\u4e9b\u8fb9\u4f7f\u5f97\u6bcf\u4e2a\u70b9\u6ee1\u8db3\u4ed6\u5e94\u8be5\u6ee1\u8db3\u7684\u5947\u5076\u6027\u3002\n+ \u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u5462\uff1f\u53ef\u4ee5\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\u641e\u4e00\u4e2a\u751f\u6210\u6811\uff0c\u6bcf\u6b21\u6bcf\u4e2a\u70b9\u5982\u679c\u4e0d\u7b26\u5408\u8981\u6c42\u5c31\u5220\u6389\u7236\u4eb2\u8fb9\uff0c\u8fd9\u6837\u53ea\u4f1a\u5269\u4e0b\u6839\u8282\u70b9\u6709\u53ef\u80fd\u4e0d\u7b26\u5408\u8981\u6c42\uff0c\u5982\u679c\u7b26\u5408\u8981\u6c42\u5c31\u884c\uff0c\u4e0d\u7b26\u5408\u8981\u6c42\u5c31\u4e0d\u884c\u3002\n+ \u5176\u5b9e\u5982\u679c\u5355\u7eaf\u5224\u65ad\n\n## \u77e5\u8bc6\u70b9\n\n+ \u64cd\u4f5c\u9898\uff0c\u5c3d\u91cf\u628a\u5bf9\u4e00\u4e2a\u533a\u95f4\u7684\u64cd\u4f5c\u8f6c\u5316\u4e3a\u5bf9\u51e0\u4e2a\u70b9\u7684\u64cd\u4f5c\u3002\u6bd4\u5982\u8fd9\u9053\u9898\u7684\u8f6c\u5316\u65b9\u6cd5\u662f\u5229\u7528\u524d\u7f00\u5f02\u6216\u7c7b\u4f3c\u7684\u4e1c\u897f\u3002\n+ \u4e24\u4e2a\u6570\u5f02\u6216\u4e0a\u540c\u4e00\u4e2a\u6570\u662f\u53cc\u5411\u7684\u95ee\u9898\uff0c\u6240\u4ee5\u7ed9\u8fd9\u4e24\u4e2a\u6570\u8fde\u8fb9\u3002\n+ \u627e\u4e0d\u53d8\u91cf\uff08\u867d\u7136\u8fd9\u9053\u9898\u91cc\u6ca1\u4ec0\u4e48\u7528\uff09\uff0c\u4f46\u662f\u53ef\u4ee5\u53d1\u73b0\u4e00\u6761\u8fb9\u5220\u6389\u53ef\u4ee5\u4f7f\u5f97\u4e24\u4e2a\u70b9\u7684\u5ea6\u6570\u540c\u65f6\u51cf\u5c11\uff0c\u6240\u4ee5\u5ea6\u6570\u603b\u548c\u7684\u5947\u5076\u6027\u4e0d\u53d8\u3002",
        "postTime": 1581871333,
        "uid": 75715,
        "name": "KokiNiwa",
        "ccfLevel": 0,
        "title": "ABC 155 F\uff08\u5f02\u6216\uff0c\u64cd\u4f5c\uff09"
    },
    {
        "content": "## \u601d\u8def\r\n\u9996\u5148\uff0c\u6211\u4eec\u6ce8\u610f\u5230 $l \\leq r\\leq 10^9 $ \u4e14 $a \\leq 10^9$\uff0c\u5982\u679c\u6211\u4eec\u76f4\u63a5\u5b58\uff0c\u4e00\u5b9a\u4f1a\u7206\u7a7a\u95f4\uff0c\u6240\u4ee5\u5728\u4f7f\u7528\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u79bb\u6563\u5316\u3002\r\n```cpp\r\n\tF(i,1,n) {\r\n\t\tcin>>a[i].num>>a[i].nd;\r\n\t}\r\n\tsort(a+1,a+n+1,cmp);\r\n\tfor(int i=1; i<=n; i++) p[i]=a[i].num,cf[i]=a[i].nd;\r\n\tfor(int i=n; i>=1; i--) cf[i]^=cf[i-1];\r\n```\r\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u6b65\u5165\u6b63\u9898\u3002\u8003\u8651\u5230\u6211\u4eec\u9700\u8981\u64cd\u4f5c\u7684\u662f\u4e00\u4e2a\u533a\u95f4\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u96be\u641e\u7684\u4e8b\u60c5\uff0c\u4e0d\u59a8\u8003\u8651\u4f7f\u7528\u5dee\u5206\uff0c\u628a\u533a\u95f4\u64cd\u4f5c\u641e\u5230\u70b9\u5bf9\u4e0a\uff0c\u8fd9\u6837\u5c31\u7a0d\u5fae\u597d\u64cd\u4f5c\u4e00\u70b9\u4e86\u3002\u6211\u4eec\u4f1a\u795e\u5947\u7684\u53d1\u73b0\uff0c\u8fd9\u662f\u53ef\u4ee5\u653e\u5728\u6811\u4e0a\u7684\uff0c\u90a3\u4e48\uff0c\u8fdb\u4e00\u6b65\u5ef6\u4f38\uff0c\u6211\u4eec\u53ef\u4ee5\u653e\u5728\u4e00\u4e2a\u56fe\u7684\u751f\u6210\u6811\u4e0a\u3002\u7136\u540e\u8fd9\u9053\u9898\u5176\u5b9e\u5c31\u975e\u5e38\u597d\u64cd\u4f5c\u4e86\uff0c\u6211\u4eec\u76f4\u63a5\u7528\u4e00\u4e2a\u641c\u7d22\u8fdb\u884c\u64cd\u4f5c\uff0c\u7528\u6240\u6709\u548c\u4ed6\u6709\u5173\u7cfb\u7684\u70b9\u5bf9\u548c\u4ed6\u8fdb\u884c\u4fee\u6539\uff0c\u53c8\u7531\u4e8e\u6bcf\u6b21\u64cd\u4f5c\u5947\u5076\u6027\u4e0d\u53d8\uff0c\u6240\u4ee5\u5982\u679c\u5f02\u6216\u503c\u4e0d\u4e3a\u96f6\u5219\u8bf4\u660e\u65e0\u89e3\u3002\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\u5dee\u5206\u540e $n+1$ \u5bf9\u7b54\u6848\u662f\u6ca1\u6709\u5f71\u54cd\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5148\u8dd1\u4e00\u4e2a $n+1$ \u7684\u60c5\u51b5\u3002\r\n\r\n```cpp\r\n#include<bits/stdc++.h>\r\n\r\nusing namespace std;\r\n//#define int long long\r\n#define F(i,a,b) for(int i=(a);i<=(b);i++)\r\nvoid Debug() {\r\n\tcerr<<\"-------------\"<<endl;\r\n}\r\nconst int Maxn=2e6+5;\r\nstruct node {\r\n\tint num;\r\n\tbool nd;\r\n} a[Maxn];\r\nint n,m,cf[Maxn],f[Maxn],p[Maxn],l,r,head[Maxn],tot,w[Maxn],nxt[Maxn],to[Maxn];\r\nbool cnt[Maxn];\r\nbool cmp(node a,node b) {\r\n\treturn a.num<b.num;\r\n}\r\nvoid AddEdge(int u,int v,int w1) {\r\n\tto[++tot]=v;\r\n\tw[tot]=w1;\r\n\tnxt[tot]=head[u];\r\n\thead[u]=tot;\r\n\treturn;\r\n}\r\nint find(int u) {\r\n\tif(u==f[u])return u;\r\n\telse  f[u]=find(f[u]);\r\n\treturn f[u];\r\n}\r\nbool Check(int u,int v) {\r\n\tif(find(u)==find(v)) return false;\r\n\telse f[find(u)]=find(v);\r\n\treturn true;\r\n}\r\nbool vis[Maxn];\r\nvector<int> v;\r\nbool Dfs(int u) {\r\n//\tDebug();\r\n//\tcout<<u<<endl;\r\n\tbool falg=cf[u];\r\n\tvis[u]=1;\r\n\tfor(int i=head[u]; i; i=nxt[i]) {\r\n\t\t//cout<<to[i]<<\" \";\r\n\t\tif(vis[to[i]]) continue;\r\n\t\t//\tcout<<to[i]<<\" \";\r\n\t\tbool Ans=Dfs(to[i]);\r\n\t\tif(Ans) v.push_back(w[i]);\r\n\t\tfalg^=Ans;\r\n\t\t//\tcout<<endl;\r\n\t}\r\n\treturn falg;\r\n}\r\nsigned main() {\r\n\tcin>>n>>m;\r\n\tF(i,1,n+1) f[i]=i;\r\n\tF(i,1,n) {\r\n\t\tcin>>a[i].num>>a[i].nd;\r\n\t}\r\n\tsort(a+1,a+n+1,cmp);\r\n\tfor(int i=1; i<=n; i++) p[i]=a[i].num,cf[i]=a[i].nd;\r\n\tfor(int i=n; i>=1; i--) cf[i]^=cf[i-1];\r\n\tF(i,1,m) {\r\n\t\tcin>>l>>r;\r\n\t\tl=lower_bound(p+1,p+n+1,l)-p,r=upper_bound(p+1,p+n+1,r)-p;\r\n\t\t//cout<<l<<\" \"<<r<<endl;\r\n\t\tif(Check(l,r)) AddEdge(l,r,i),AddEdge(r,l,i);\r\n\t}\r\n\tDfs(n+1);\r\n\t//vis[n+1]=1;\r\n\tfor(int i=1; i<=n; i++) {\r\n\t\tif(vis[i]) continue;\r\n\t\telse if(Dfs(i)) {\r\n\t\t\tcout<<-1;\t\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\tsort(v.begin(),v.end());\r\n\t//cout<<v.size();\r\n\tcout<<v.size()<<endl;\r\n\tfor(int i=0; i<v.size(); i++) cout<<v[i]<<\" \";\r\n\treturn 0;\r\n}\r\n```\r\n",
        "postTime": 1679489384,
        "uid": 754856,
        "name": "_zexal_",
        "ccfLevel": 3,
        "title": "Abc155\u9898\u89e3"
    }
]