[
    {
        "content": "## \u9898\u89e3\n\u5982\u679c\u53ea\u662f\u4e00\u7ef4\u5e73\u9762\u4e0a\u7684\u60c5\u51b5\uff0c\u6211\u76f8\u4fe1\u5927\u5bb6\u90fd\u5f88\u5bb9\u6613\u60f3\u5230\u901a\u8fc7 FFT \u6765\u89e3\u51b3\uff0c\u4f46\u5bf9\u4e8e\u4e8c\u7ef4\u5e73\u9762\u4e0a\u7684\u60c5\u51b5\uff0cFFT \u5c31\u4e0d\u662f\u90a3\u4e48\u5bb9\u6613\u89e3\u51b3\u4e86\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u91cd\u70b9\u5173\u6ce8\u4e00\u4e0b\u540c\u4e00\u70b9\u96c6\u5185\u7684\u70b9\u90fd\u5728\u540c\u610f\u76f4\u7ebf\u4e0a\u7684\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u8bb0\u8fd9\u4e09\u6761\u76f4\u7ebf\u4e3a $A,B,C$\u3002\n\n\u4e8b\u5b9e\u4e0a\u5bf9\u4e8e\u76f4\u7ebf $A$ \u4e0e\u76f4\u7ebf $B$\u7684\u4f4d\u7f6e\u5173\u7cfb\uff0c\u6211\u4eec\u9700\u8981\u5206\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\u3002\n\n\u82e5\u76f4\u7ebf $A$ \u5e73\u884c\u4e0e\u76f4\u7ebf $B$\uff0c\u663e\u7136\uff0c\u76f4\u7ebf $A$ \u4e0e\u76f4\u7ebf $B$ \u7684\u4e2d\u70b9\u5fc5\u7136\u5728\u4e24\u6761\u76f4\u7ebf\u7684\u4e2d\u95f4\u6784\u6210\u4e00\u6761\u76f4\u7ebf\uff0c\u5728\u8fd9\u6761\u76f4\u7ebf\u4e0a\u3002\n\n\u5982\u679c $C$ \u8fd9\u6761\u76f4\u7ebf\u76f8\u4ea4\uff0c\u90a3\u6211\u4eec\u5c31\u53ea\u9700\u8981\u770b\u4e00\u4e0b\u5b83\u4eec\u7684\u4ea4\u70b9\u662f\u591a\u5c11\u6761\u7ebf\u6bb5\u7684\u4e2d\u70b9\u3002\n \n\u5982\u679c $C$ \u4e0e\u8be5\u76f4\u7ebf\u91cd\u5408\uff0c\u663e\u7136\uff0c$A,B,C$ \u76f4\u7ebf\u7684\u659c\u7387\u90fd\u662f\u4e00\u6837\u7684\uff0c\u800c $C$ \u53ef\u4ee5\u8bf4\u662f $A,B$ \u7684\u4e2d\u7ebf\uff0c\u8fd9\u6837\u7684\u8bdd $A,B$ \u4e0a\u70b9\u7684\u52a0\u548c\u5c31\u5e94\u8be5\u4e0e $C$ \u4e0a\u7684\u70b9\u6ee1\u8db3\u540c\u6837\u7684\u5173\u7cfb\u5f0f\uff0c\u5373 $(\\frac{Ax+Bx}{2},\\frac{Ay+By}{2})$ \u5fc5\u5b9a\u5728 $C$ \u4e0a\uff0c\u53ea\u9700\u8981\u770b\u4e00\u4e2a\u5750\u6807\u76f8\u7b49\u5c31\u884c\u4e86\u3002\n\n\u76f8\u5f53\u4e8e\u8fd9\u79cd\u60c5\u51b5\u53c8\u88ab\u6620\u5c04\u5230\u6211\u4eec\u4e00\u7ef4\u7684\u60c5\u51b5\u4e0a\u4e86\u3002\u6211\u4eec\u53ea\u9700\u8981\u6c42  $\\sum_{i=1}^{L}\\sum_{j=1}^{M}\\sum_{k=1}^{N}[A_{i}+B_{j}=2C_{k}]$\uff0c\u663e\u7136\u53ef\u4ee5\u76f4\u63a5 FFT\u3002\n\n\u82e5\u76f4\u7ebf $A$ \u4e0e\u76f4\u7ebf $B$ \u76f8\u4ea4\uff0c\u90a3\u4e48\u663e\u7136\u5bf9\u4e8e $C$ \u4e2d\u7684\u70b9\uff0c\u5bf9\u5e94\u7684 $A,B$ \u4e0a\u7684\u70b9\u5e94\u8be5\u662f\u56fa\u5b9a\u7684\uff0c\u53ea\u6709\u4e00\u4e2a\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5c06\u5176\u6c42\u51fa\u6765\u3002\n\n\u4e8b\u5b9e\u4e0a\u7528\u521d\u4e2d\u51e0\u4f55\u7684\u4e2d\u4f4d\u7ebf\u5c31\u80fd\u77e5\u9053\uff0c![image](https://cdn.luogu.com.cn/upload/image_hosting/0t70zv84.png)\n\n\u53ea\u9700\u8981\u8fc7\u70b9 $C_{i}$\uff0c\u5206\u522b\u505a $A$ \u4e0e $B$ \u7684\u5e73\u884c\u7ebf\uff0c\u5176\u4ea4\u70b9\u5173\u4e8e $A$ \u4e0e $B$ \u7684\u4ea4\u70b9\u500d\u957f\u5c31\u80fd\u591f\u5f97\u5230\u6211\u4eec\u7684 $A_i,B_j$ \u4e86\u3002\n\n\u518d\u770b\u770b\u6211\u4eec\u5f97\u5230\u7684 $A_i$ \u548c $B_j$ \u5728\u539f\u96c6\u5408\u4e2d\u662f\u5426\u5b58\u5728\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6ce8\u610f\u7531\u4e8e\u662f\u53ef\u91cd\u70b9\u96c6\uff0c\u5f97\u5148\u53bb\u91cd\u4e00\u4e0b\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O\\left((N+M+L)\\log{N+M}+X\\log\\,X\\right)$\u3002\n## \u4ee3\u7801\n~~\u8c03\u4e86\u597d\u4e45\u3002~~\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define MAXN 100005\n#define MAXM 2000005\n#define lowbit(x) (x&-x)\n#define reg register\n#define pb push_back\n#define mkpr make_pair\n#define fir first\n#define sec second\ntypedef long long LL;\ntypedef unsigned long long uLL; \ntypedef long double ld;\ntypedef pair<int,int> pii;\nconst int INF=0x3f3f3f3f;\nconst int mo=998244353;\nconst int mod=1e5+7;\nconst int inv2=5e8+4;\nconst int jzm=2333;\nconst int zero=100000;\nconst int n1=1000;\nconst int lim=100000000;\nconst int orG=3,ivG=332748118;\nconst double Pi=acos(-1.0);\nconst double eps=1e-6;\ntemplate<typename _T>\n_T Fabs(_T x){return x<0?-x:x;}\ntemplate<typename _T>\nvoid read(_T &x){\n\t_T f=1;x=0;char s=getchar();\n\twhile(s>'9'||s<'0'){if(s=='-')f=-1;s=getchar();}\n\twhile('0'<=s&&s<='9'){x=(x<<3)+(x<<1)+(s^48);s=getchar();}\n\tx*=f;\n}\ntemplate<typename _T>\nvoid print(_T x){if(x<0){x=(~x)+1;putchar('-');}if(x>9)print(x/10);putchar(x%10+'0');}\nint gcd(int a,int b){return !b?a:gcd(b,a%b);}\nint add(int x,int y,int p){return x+y<p?x+y:x+y-p;}\nvoid Add(int &x,int y,int p){x=add(x,y,p);}\nint qkpow(int a,int s,int p){int t=1;while(s){if(s&1)t=1ll*t*a%p;a=1ll*a*a%p;s>>=1;}return t;}\nint L,M,N,rev[MAXM];LL ans,d[MAXN];bool flag=0;\nstruct complx{\n\tdouble x,y;complx(){x=y=0;}\n\tcomplx(double X,double Y){x=X;y=Y;}\n\tcomplx operator + (const complx &rhs)const{return complx(x+rhs.x,y+rhs.y);}\n\tcomplx operator - (const complx &rhs)const{return complx(x-rhs.x,y-rhs.y);}\n\tcomplx operator * (const complx &rhs)const{return complx(x*rhs.x-y*rhs.y,x*rhs.y+y*rhs.x);}\n}f[MAXM],g[MAXM];\nvoid FFT(complx *A,int lim,int typ){\n\tfor(int i=0;i<lim;i++)if(i<rev[i])swap(A[i],A[rev[i]]);\n\tfor(int mid=1;mid<lim;mid<<=1){\n\t\tconst complx W(cos(Pi/mid),1.0*typ*sin(Pi/mid));\n\t\tfor(int i=mid<<1,j=0;j<lim;j+=i){\n\t\t\tcomplx Wn(1,0);\n\t\t\tfor(int k=j;k<j+mid;k++,Wn=Wn*W){\n\t\t\t\tcomplx x=A[k],y=Wn*A[k+mid];\n\t\t\t\tA[k]=x+y;A[k+mid]=x-y;\n\t\t\t}\n\t\t}\n\t}\n}\nstruct ming{\n\tint x,y,val;ming(){x=y=0;}ming(int X,int Y){x=X;y=Y;}\n\tbool operator < (const ming &rhs)const{return x==rhs.x?y<rhs.y:x<rhs.x;}\n\tbool operator == (const ming &rhs)const{return x==rhs.x&&y==rhs.y;}\n}a[MAXN],b[MAXN],c[MAXN];\ndouble sqr(double x){return x*x;}\nstruct point{\n\tdouble x,y;point(){x=y=0;}\n\tpoint(double X,double Y){x=X;y=Y;}\n\tpoint operator + (const point &rhs)const{return point(x+rhs.x,y+rhs.y);}\n\tpoint operator - (const point &rhs)const{return point(x-rhs.x,y-rhs.y);}\n\tdouble operator * (const point &rhs)const{return x*rhs.x+y*rhs.y;}\n\tdouble operator ^ (const point &rhs)const{return x*rhs.y-y*rhs.x;}\n\tpoint operator * (const double &rhs)const{return point(x*rhs,y*rhs);}\n\tpoint operator / (const double &rhs)const{return point(x/rhs,y/rhs);}\n\tbool operator == (const point &rhs)const{return Fabs(x-rhs.x)<eps&&Fabs(y-rhs.y)<eps;}\n\tbool operator != (const point &rhs)const{return Fabs(x-rhs.x)>eps||Fabs(y-rhs.y)>eps;}\n\tbool operator < (const point &rhs)const{return Fabs(x-rhs.x)<eps?y<rhs.y:x<rhs.x;} \n\tdouble length(){return sqrt(sqr(x)+sqr(y));}\n\tpoint rev(){return point(y,-x);}\n}ap[MAXN],bp[MAXN],cp[MAXN];\ndouble dist(point x,point y){return (x-y).length();}\nstruct line{\n\tpoint s,t,v;double ag;line(){}\n\tline(point S,point T){s=S;t=T;v=t-s;ag=atan2(v.y,v.x);}\n\tdouble slope(){return v.y/v.x;}\n\tdouble length(){return dist(s,t);}\n\tbool operator < (const line &rhs)const{return ag<rhs.ag;}\n\tbool judge(point rhs){return (v^(rhs-s))<-eps;}\n};\nint work(double x){if(Fabs(x)<eps)return 0;return x>0?1:-1;}\nbool LineCross(line x,line y){return work((x. s-y.s)^(x.t-y.s))*work((x.s-y.t)^(x.t-y.t))<=0;}\npoint askCross(line x,line y){return x.s+x.v*((y.v^(y.s-x.s))/(y.v^x.v));}\nstruct HashMap{\n\tint head[MAXN],nxt[MAXN],tot;pii val[MAXN];LL sum[MAXN];\n\tvoid insert(pii x,LL aw){\n\t\tint tp=(1ll*x.fir+1ll*jzm*x.sec)%mod,now=head[tp];\n\t\twhile(now&&(val[now].fir!=x.fir||val[now].sec!=x.sec))now=nxt[now];\n\t\tif(!now)now=++tot,nxt[now]=head[tp],head[tp]=now,val[now]=x;\n\t\tsum[now]+=aw;\n\t}\n\tLL query(pii x){\n\t\tint tp=(1ll*x.fir+1ll*jzm*x.sec)%mod,now=head[tp];\n\t\twhile(now&&(val[now].fir!=x.fir||val[now].sec!=x.sec))now=nxt[now];\n\t\treturn sum[now];\n\t}\n}mp;\nsigned main(){\n\tread(L);read(M);read(N);\n\tfor(int i=1;i<=L;i++)read(a[i].x),read(a[i].y),a[i].x+=zero,a[i].y+=zero;\n\tfor(int i=1;i<=M;i++)read(b[i].x),read(b[i].y),b[i].x+=zero,b[i].y+=zero;\n\tfor(int i=1;i<=N;i++)read(c[i].x),read(c[i].y),c[i].x+=zero,c[i].y+=zero;\n\tsort(a+1,a+L+1);sort(b+1,b+M+1);sort(c+1,c+N+1);int stak;\n\tstak=0;for(int i=1;i<=L;i++)if(stak&&a[i]==a[stak])a[stak].val++;else a[++stak]=a[i],a[stak].val=1;L=stak;\n\tstak=0;for(int i=1;i<=M;i++)if(stak&&b[i]==b[stak])b[stak].val++;else b[++stak]=b[i],b[stak].val=1;M=stak;\n\tstak=0;for(int i=1;i<=N;i++)if(stak&&c[i]==c[stak])c[stak].val++;else c[++stak]=c[i],c[stak].val=1;N=stak;\n\tif(L*M<=100000&&N<=10000){\n\t\tfor(int i=1;i<=L;i++)for(int j=1;j<=M;j++)\n\t\t\tmp.insert(mkpr(a[i].x+b[j].x,a[i].y+b[j].y),1ll*a[i].val*b[j].val);\n\t\tfor(int i=1;i<=N;i++)\n\t\t\tans+=1ll*c[i].val*mp.query(mkpr(c[i].x+c[i].x,c[i].y+c[i].y));\n\t\tprintf(\"%lld\\n\",ans);return 0;\n\t}\n\tif(1ll*(a[L].x-a[1].x)*(b[M].y-b[1].y)==1ll*(a[L].y-a[1].y)*(b[M].x-b[1].x)){\n\t\tint lim=1,len=0;while(lim<=9*zero)lim<<=1,len++;\n\t\tfor(int i=0;i<lim;i++)rev[i]=(rev[i>>1]>>1)|((i&1)<<len-1);\n\t\tfor(int i=1;i<=L;i++)f[a[i].x+a[i].y].x+=1.0*a[i].val;FFT(f,lim,1);\n\t\tfor(int i=1;i<=M;i++)g[b[i].x+b[i].y].x+=1.0*b[i].val;FFT(g,lim,1);\n\t\tfor(int i=0;i<lim;i++)f[i]=f[i]*g[i];FFT(f,lim,-1);\n\t\tming st=ming(a[L].x+b[M].x,a[L].y+b[M].y);\n\t\tfor(int i=1;i<=N;i++){\n\t\t\tLL tmp1=1ll*(c[i].x+c[i].x-st.x)*(b[M].y-b[1].y);\n\t\t\tLL tmp2=1ll*(c[i].y+c[i].y-st.y)*(b[M].x-b[1].x);\n\t\t\tif(tmp1^tmp2)continue;LL tmp=(LL)(f[2*(c[i].x+c[i].y)].x/(1.0*lim)+0.5);\n\t\t\tans+=1ll*c[i].val*tmp;\n\t\t}\n\t\tprintf(\"%lld\\n\",ans);return 0;\n\t}\n\tfor(int i=1;i<=L;i++)ap[i]=point(1.0*a[i].x,1.0*a[i].y);\n\tfor(int i=1;i<=M;i++)bp[i]=point(1.0*b[i].x,1.0*b[i].y);\n\tfor(int i=1;i<=N;i++)cp[i]=point(1.0*c[i].x,1.0*c[i].y);\n\tline A=line(ap[1],ap[L]),B=line(bp[1],bp[M]);point A_B=askCross(A,B);\n\tfor(int i=1;i<=N;i++){\n\t\tline tmp1=line(cp[i],cp[i]+B.v);point A_C=askCross(A,tmp1);\n\t\tline tmp2=line(cp[i],cp[i]+A.v);point B_C=askCross(B,tmp2);\n\t\tpoint Ad=A_C+A_C-A_B,Bd=B_C+B_C-A_B;\n\t\tint At=lower_bound(ap+1,ap+L+1,Ad)-ap;\n\t\tint Bt=lower_bound(bp+1,bp+M+1,Bd)-bp;\n\t\tfor(int j=max(At-1,1);j<=min(At+1,L);j++)\n\t\t\tfor(int k=max(Bt-1,1);k<=min(Bt+1,M);k++)\n\t\t\t\tif(a[j].x+b[k].x==c[i].x+c[i].x&&a[j].y+b[k].y==c[i].y+c[i].y)\n\t\t\t\t\tans+=1ll*a[j].val*b[k].val*c[i].val;\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1641799497,
        "uid": 105141,
        "name": "StaroForgin",
        "ccfLevel": 9,
        "title": "\u9898\u89e3[AT1293]Midpoint"
    }
]