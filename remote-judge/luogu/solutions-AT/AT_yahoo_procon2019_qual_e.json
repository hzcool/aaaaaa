[
    {
        "content": "### Problem\n\n\u7ed9\u51fa $n\\times m$ \u7684 $\\verb!01!$ \u77e9\u9635\uff0c\u9009\u62e9\u82e5\u5e72\u884c\u548c\u82e5\u5e72\u5217\uff0c\u6c42\u6709\u591a\u5c11\u79cd\u9009\u6cd5\u6ee1\u8db3\u9009\u62e9\u7684\u884c\u5217\u4ea4\u70b9\u7684\u5f02\u6216\u548c\u4e3a $1$\u3002\n\n$1 \\leq n, m \\leq 300$\u3002\n\n### Solution\n\n\u770b\u5230\u5f02\u6216\u60f3\u5230[\u7ebf\u6027\u57fa](https://www.luogu.com.cn/problem/P3812)\u3002\n\n\u6211\u4eec\u4e0d\u59a8\u8003\u8651\u4e00\u4e2a\u7ecf\u5178\u95ee\u9898\uff1a\u7ed9\u5b9a $n$ \u4e2a\u6570\uff0c\u95ee\u4f60\u6709\u591a\u5c11\u4e2a\u5b50\u96c6\u6ee1\u8db3\u5f02\u6216\u548c\u4e3a $0$\u3002\n\n\u8fd9\u4e2a\u9898\u6211\u4eec\u662f\u8fd9\u4e48\u505a\u7684\uff1a\u5148\u7ed9\u8fd9 $n$ \u4e2a\u6570\u5efa\u7ebf\u6027\u57fa\uff0c\u7136\u540e\u7b54\u6848\u5c31\u662f $2^{n-\\text{\u7ebf\u6027\u57fa\u7684\u5927\u5c0f}}$\u3002\u8bc1\u660e\uff1a\u7ebf\u6027\u57fa\u5916\u7684\u5143\u7d20\u4efb\u9009\uff0c\u9009\u62e9\u4e00\u4e9b\u7ebf\u6027\u57fa\u5185\u7684\u5143\u7d20\u8c03\u6574\u6210 $0$\u3002\u8fd9\u662f\u6839\u636e\u7ebf\u6027\u57fa\u548c\u5f02\u6216\u7684\u5b9a\u4e49\u6765\u7684\u3002\n\n\u8fd9\u4e2a $0$ \u5f53\u7136\u53ef\u4ee5\u6362\u6210\u4efb\u4f55\u6570\uff0c\u53ea\u8981\u80fd\u88ab\u5f02\u6216\u51fa\u6765\u5c31\u884c\u3002\n\n---\n\n\u56de\u5230\u672c\u9898\u3002\n\n\u6211\u4eec\u5148\u4ece\u9009\u62e9\u82e5\u5e72\u884c\u4e0b\u624b\u3002\u7b54\u6848\u53ea\u53ef\u80fd\u548c\u6bcf\u4e00\u5217\u5206\u522b\u5f02\u6216\u8d77\u6765\u6709\u5173\u3002\u90a3\u4e48\u6211\u4eec\u770b\u5f02\u6216\u540e\u7684\u7ed3\u679c\u3002\u56e0\u4e3a\u5f02\u6216\u5b8c\u4e5f\u53ea\u6709 $0, 1$\uff0c\u6240\u4ee5\u7ebf\u6027\u57fa\u7684\u5927\u5c0f\u80af\u5b9a\u662f $1$\u3002\u90a3\u4e48\u770b $1$ \u80fd\u5426\u88ab\u7ebf\u6027\u57fa\u8868\u793a\uff0c\u5c31\u662f\u95ee\u8fd9\u4e2a\u7ebf\u6027\u57fa\u91cc\u9762\u5143\u7d20\u662f $0$ \u8fd8\u662f $1$\u3002\n\n\u4f60\u4e00\u62cd\u5927\u817f\uff0c\u662f $0$ \u4e0d\u5c31\u76f8\u5f53\u4e8e\u8fd9\u5806\u6570\u5168 $0$ \u5417\uff01\u5269\u4e0b\u7684\u5176\u4ed6\u6240\u6709\u7ec4\u5408\u90fd\u6709 $2^{m-1}$ \u79cd\u9009\u6cd5\uff08\u5217\u7684\u7ebf\u6027\u57fa\u7684\u5927\u5c0f $=1$\uff09\u3002\n\n\u81f3\u4e8e\u5f02\u6216\u8d77\u6765\u5168 $0$ \u884c\u7684\u4e2a\u6570......\u7b49\u7b49\u6211\u4eec\u600e\u4e48\u53c8\u56de\u5230\u8fd9\u4e2a\u95ee\u9898\u4e86\uff1f\n\n\u6240\u4ee5\u505a\u5b8c\u4e86\uff0c\u7b54\u6848\u662f $(2^n - 2^{cnt})\\times 2^{m-1}$\uff0c\u5176\u4e2d $cnt$ \u662f**\u628a\u6bcf\u4e00\u884c\u770b\u505a\u4e00\u4e2a $m$ \u4f4d\u4e8c\u8fdb\u5236\u6570**\u5f97\u5230\u7684\u7ebf\u6027\u57fa\u5927\u5c0f\u3002\n\n\u4ee3\u7801\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(\\dfrac{n^2m}{w})$\u3002\n\n### Code\n\nbitset \u624b\u5199\u7684\uff0c\u6709\u9505\u4f46\u662f\u6211\u4e0d\u77e5\u9053\u5177\u4f53\u600e\u4e48\u8868\u73b0\uff0c\u56e0\u4e3a\u6211 CSP-S 2022 T1 \u5199\u4e86\u8fd9\u4e2a\u7136\u540e [\u7ed3\u679c](https://www.luogu.com.cn/record/93322781)\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nconst int V = 5, B = 64, R = 63, S = 6;\n\ninline int ctz64(unsigned long long x) {\n\treturn (x & ((1ll << 32) - 1)) ? __builtin_ctzll(x & ((1ll << 32) - 1)) : 32 + __builtin_ctzll(x >> 32);\n}\ninline int pop64(unsigned long long x) {\n\treturn __builtin_popcountll(x & ((1ll << 32) - 1)) + __builtin_popcountll(x >> 32);\n}\n\n#define MAXN 301\nclass Bitset {\n\tprivate :\n\t\tunsigned long long a[V];\n\t\tconst bool __bit(int f) const { return (a[f >> S] >> (f & R)) & 1; }\n\t\tconst unsigned long long __llbits(int f) const { return a[f]; }\n\t\tvoid __fix(int f, unsigned long long v) { a[f] = v; }\n\t\tvoid __fixbit(int f, bool t) {\n\t\t\tif (__bit(f) ^ t) a[f / B] ^= 1ull << f % B;\n\t\t}\n\t\tvoid __clear() { memset(a, 0, sizeof(a)); }\n\tpublic :\n\t\tconst int operator[] (int f) const { return __bit(f); }\n\t\tconst unsigned long long gtb(int f) const { return __llbits(f); }\n\t\tconst void fix(int f, unsigned long long v) { __fix(f, v); }\n\t\tconst void fixbit(int f, bool v) { __fixbit(f, v); }\n\t\tconst void clear() { __clear(); }\n\t\tBitset () { clear(); }\n\t\tBitset(const std::string S) {\n\t\t\tclear();\n\t\t\tfor (int i = 0; i < (int)S.size(); ++i) fixbit(i, S[i] ^ '0');\n\t\t}\n\t\tconst std::vector<int> count1() const {\n\t\t\tstd::vector<int> p;\n\t\t\tfor (int i = 0; i < V; ++i) {\n\t\t\t\tunsigned long long t = gtb(i), q;\n\t\t\t\twhile (t) {\n\t\t\t\t\tq = t & (t - 1);\n\t\t\t\t\tp.push_back(i * B + ctz64(t ^ q) + 1);\n\t\t\t\t\tt = q;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn p;\n\t\t}\n\t\tconst bool all(int N) {\n\t\t\tfor (int i = 0; i < N / B; ++i) \n\t\t\t\tif (gtb(i) + 1ull != 0ull) return false;\n\t\t\treturn gtb(N / B) + 1ull == (1ull << (N % B));\n\t\t}\n\t\tconst void print(int N = 5) {\n\t\t\tfor (int i = 0; i < N; ++i) \n\t\t\t\tstd::cout << ((*this)[i]);\n\t\t\tputs(\"\");\n\t\t}\n} a[MAXN];\nBitset operator & (const Bitset& a, const Bitset& b) {\n\tBitset k;\n\tfor (int i = 0; i < V; ++i) k.fix(i, a.gtb(i) & b.gtb(i));\n\treturn k;\n}\nBitset operator | (const Bitset& a, const Bitset& b) {\n\tBitset k;\n\tfor (int i = 0; i < V; ++i) k.fix(i, a.gtb(i) | b.gtb(i));\n\treturn k;\n}\nBitset operator ^ (const Bitset& a, const Bitset& b) {\n\tBitset k;\n\tfor (int i = 0; i < V; ++i) k.fix(i, a.gtb(i) ^ b.gtb(i));\n\treturn k;\n}\n\nconst int LG = 300;\nBitset f[LG + 1];\nint cnt = 0;\nvoid insert(Bitset k) {\n\tfor (int i = LG; i + 1; --i) if (k[i]) {\n\t\tif (f[i][i]) k = k ^ f[i];\n\t\telse return (void)(++cnt, f[i] = k);\n\t}\n}\n\nconstexpr long long MOD = 998244353;\nlong long qpow(long long a, long long x) {\n\tlong long ans = 1;\n\twhile (x) (x & 1) && (ans = ans * a % MOD), a = a * a % MOD, x >>= 1;\n\treturn ans;\n}\nint main() {\n\tstd::ios::sync_with_stdio(false);\n\tstd::cin.tie(nullptr), std::cout.tie(nullptr);\n\tint N, M; std::cin >> N >> M;\n\tfor (int i = 1, x; i <= N; ++i) \n\t\tfor (int j = 1; j <= M; ++j) \n\t\t\tstd::cin >> x, a[i].fixbit(j, x);\n\tfor (int i = 1; i <= N; ++i) insert(a[i]);\n\treturn std::cout << (qpow(2, N) - qpow(2, N - cnt) + MOD) % MOD * qpow(2, M - 1) % MOD, 0;\n}\n```",
        "postTime": 1672536175,
        "uid": 419487,
        "name": "irris",
        "ccfLevel": 7,
        "title": "AT_yahoo_procon2019_qual_e Solution"
    },
    {
        "content": "\u6ce8\u610f\u5230\u4e00\u4ef6\u4e8b\uff0c\u6211\u4eec\u9009\u53d6\u4e00\u4e9b\u884c\u5f02\u6216\u8d77\u6765\u540e\u5f97\u5230\u4e00\u4e2a\u7ed3\u679c\uff0c\u5982\u679c\u8fd9\u4e2a\u7ed3\u679c\u4e0d\u662f\u6bcf\u5217\u90fd\u662f $0$ \u7684\u8bdd\u6211\u4eec\u53ef\u4ee5\u6311\u51fa\u4efb\u610f\u4e00\u4e2a\u4e3a $1$ \u7684\u5217\u5148\u4e0d\u53bb\u9009\u5b83\uff0c\u7136\u540e\u522b\u7684\u5217\u968f\u4fbf\u9009 $2^{m-1}$ \u79cd\u65b9\u6848\uff0c\u6700\u540e\u7528\u8fd9\u4e00\u5217\u6765\u8c03\u6574\u6210\u5947\u6570\u3002\n\n\u6240\u4ee5\u8bf4\u73b0\u5728\u53ea\u8981\u6c42\u5f02\u6216\u51fa\u6765\u4e3a\u5168 $0$ \u7684\u65b9\u6848\u6570\u5c31\u884c\u4e86\u3002\u5178\u4e2d\u5178\u95ee\u9898\u4e86\uff0c\u76f4\u63a5\u7ebf\u6027\u57fa\u5c31\u884c\u4e86\u3002\n\n\u590d\u6742\u5ea6 $O(\\frac{n^3}{w})$\u3002\n\n```c++\n// Lynkcat.\n// Problem: E - Odd Subrectangles\n// URL: https://atcoder.jp/contests/yahoo-procon2019-qual/tasks/yahoo_procon2019_qual_e\n// Memory Limit: 1024 MB\n// Time Limit: 2000 ms\n// -----------------------------------------------\n\n//\u6211\u8033\u6735\u778e\u6389\u62c9~~\n#include<bits/stdc++.h>\n#define poly vector<int>\n#define IOS ios::sync_with_stdio(false)\n#define ll long long\n#define mp make_pair\n#define mt make_tuple\n#define pa pair < int,int >\n#define fi first\n#define se second\n#define inf 1e18\n#define mod 998244353\n#define int ll\n#define N 305\nusing namespace std;\nint n,m;\nbitset<305>b[N],f[N];\nint cnt;\nint quickPower(int x,int y)\n{\n\tint res=1;\n\twhile (y)\n\t{\n\t\tif(y&1)res=res*x%mod;\n\t\tx=x*x%mod;\n\t\ty>>=1;\n\t}\n\treturn res;\n}\nvoid BellaKira()\n{\n\tcin>>n>>m;\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tfor (int j=0;j<m;j++)\n\t\t{\n\t\t\tint x;\n\t\t\tcin>>x;\n\t\t\tb[i][j]=x;\n\t\t}\n\t}\n\tfor (int i=1;i<=n;i++)\n\t\tfor (int j=m-1;j>=0;j--)\n\t\t\tif (b[i][j])\n\t\t\t{\n\t\t\t\tif (f[j][j])\n\t\t\t\t{\n\t\t\t\t\tb[i]^=f[j];\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tf[j][j]=b[i][j];\n\t\t\t\tcnt++;\n\t\t\t\tbreak;\n\t\t\t}\n\tcout<<(quickPower(2,n)-quickPower(2,n-cnt)+mod)%mod*quickPower(2,m-1)%mod<<endl;\n\t\t\t\n}\nsigned main()\n{\n\tint T=1;\n\twhile (T--)\n\t{\n\t\tBellaKira();\n\t}\n}\n```\n\n",
        "postTime": 1652741991,
        "uid": 120911,
        "name": "Lynkcat",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 AT4638 Odd Subrectangles"
    },
    {
        "content": "\u849f\u84bb\u7b2c\u4e00\u9053\u81ea\u5df1\u60f3\u51fa\u6765\u7684\u7701\u9009\u9898\u3002\n\n\u8fd9\u9898\u7684\u65b9\u6cd5\u5341\u5206\u5de7\u5999\u3002\n\n\u8fd9\u9898\u662f\u4e00\u4e2a\u77e9\u9635\uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06\u548c\u7684\u5947\u5076\u6027\u770b\u6210\u662f\u5f02\u6216\u548c\uff0c\u662f $1$ \u7684\u5c31\u9009\u51fa\u3002\u901a\u8fc7\u6768\u8f89\u4e09\u89d2\u7684\u6027\u8d28\uff0c\u9009\u5947\u6570\u884c\u4e0e\u5076\u6570\u884c\u786e\u5b9a\u7684\u65b9\u6848\u6570\u662f\u80fd\u6c42\u51fa\u6765\u7684\uff0c\u663e\u7136 $2^{m-1}$ \u662f\u6700\u5408\u7406\u7684\uff0c\u4f46\u662f\u5982\u679c $a$ \u4e0d\u662f\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u90a3\u4e48\u5c31\u4e0d\u5408\u6cd5\u4e86\uff0c\u5230\u4e86\u8fd9\u91cc\uff0c\u6211\u4eec\u81ea\u7136\u800c\u7136\u5c31\u60f3\u5230\u4e86[\u7ebf\u6027\u57fa](https://oi-wiki.org/math/linear-algebra/basis/)\uff0c\u6211\u4eec\u76f4\u63a5\u9009\u53d6\u7ebf\u6027\u57fa\u7684\u7ed3\u8bba\uff0c\u5728\u7ebf\u6027\u57fa\u91cc\u9009\u53d6\u4efb\u610f\u5b50\u96c6\u7684\u5f02\u6216\u548c\uff0c\u90fd\u662f\u4e3a $0$ \u7684\uff0c\u6700\u540e\u4e8c\u8fdb\u5236\u8fd8\u53ef\u4ee5\u4f18\u5316\u4e00\u4e0b\uff0c\u8be6\u7ec6\u770b\u4ee3\u7801\uff1a\n```\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MaXN = 305;\nconst int MOD = 998244353\nint n, m;\nbitset < MaXN + 10 > a[MaXN + 10], b[MaXN + 10];//\u4e8c\u8fdb\u5236\u4f18\u5316\n\nint read() {//\u5feb\u8bfb\u6a21\u677f\n\tint x = 0, f = 1;\n\tchar c = getchar();\n\twhile (c < '0' || c > '9') {\n\t\tif (c == '-')\n\t\t\tf = -1;\n\t\tc = getchar();\n\t}\n\twhile (c >= '0' && c <= '9') {\n\t\tx = x * 10 + c - '0';\n\t\tc = getchar();\n\t}\n\treturn x * f;\n}\n\nint pow_(int a, int b) {//\u5feb\u901f\u5e42\n\tint res = 1;\n\twhile (b) {\n\t\tif (b & 1)\n\t\t\tres = (1LL * res * a) % MOD;\n\t\ta = (1LL * a * a) % MOD;\n\t\tb >>= 1;\n\t}\n\treturn res;\n}\nint res;\nint main() {\n\tcin >> n >> m;\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= m; j++)\n\t\t\ta[i][j] = (read() == 1);//01\u77e9\u9635\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= m; j++)\n\t\t\tif (a[i][j]) {//\u5076\u6570\u5217\n\t\t\t\tif (b[j][j])\n\t\t\t\t\ta[i] ^= b[j];\n\t\t\t\telse {//\u5947\u6570\u5217\n\t\t\t\t\tb[j] = a[i];\n\t\t\t\t\tr++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\tcout<<(pow_(2, n + m - 1) - pow_(2, n - r + m - 1) + MOD) % MOD<<endl;//\u6839\u636e\u6768\u8f89\u4e09\u89d2\uff0c\u63a8\u51fa\u516c\u5f0f\uff0c\u7528\u5feb\u901f\u5e42\u7ef4\u62a4\u4e00\u4e0b\n}\n\n```",
        "postTime": 1681823575,
        "uid": 741139,
        "name": "yexc",
        "ccfLevel": 0,
        "title": "Odd Subrectangles"
    }
]