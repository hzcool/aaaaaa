[
    {
        "content": "\u8fd9\u9053\u4f8b\u9898\u770b\u5230\u65f6\u6beb\u65e0\u5934\u7eea\uff0c\u56e0\u4e3a\u8bfe\u7a0b\u662f\u4e8c\u5206\uff0c\u6240\u4ee5\u5f80\u4e8c\u5206\u7684\u65b9\u5411\u60f3\uff0c\u731c\u5230\u662f\u4e8c\u5206\u679a\u4e3e\u6700\u4e0a\u9762\u7684\u90a3\u4e2a\u6570\u662f\u591a\u5c11\uff0c\u4f46\u4f9d\u7136\u4e0d\u4f1a\u505a\u3002\n\n\u4e8b\u5b9e\u4e0a\uff0c\u56e0\u4e3a\u6211\u4eec\u6c42\u5f97\u662f\u4e2d\u4f4d\u6570\uff0c\u6240\u4ee5\u6bcf\u4e2a\u6570\u5bf9\u6211\u4eec\u6765\u8bf4\u53ea\u6709\u4e0e\u679a\u4e3e\u7684\u6570\u7684\u5927\u5c0f\u5173\u7cfb\u9700\u8981\u6211\u4eec\u8003\u8651\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u5927\u4e8e\u8fd9\u4e2a\u6570\u7684\u6570\u4e3a1\uff0c\u5176\u4f59\u7684\u4e3a0\u3002\n\n\u5982\u6b64\u5c06\u5176\u8f6c\u5316\u6210\u4e00\u4e2a01\u4e32\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u8ba8\u8bba\u8fd9\u4e2a01\u4e32\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u53ef\u4ee5\u5c0f\u5c0f\u7684\u63a8\u4e00\u4e0b\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5f53\u6709\u4e24\u4e2a\u90fd\u4e3a0\u7684\u6570\u6216\u8005\u90fd\u4e3a1\u7684\u6570\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u4e00\u76f4\u5f80\u4e0a\u8d70\u3002\n\n\u7b80\u5355\u5730\u8868\u793a\u4e00\u4e0b\u3002\n\n\u6211\u4eec\u6709\u8fd9\u6837\u4e00\u4e2a 0 1 \u6570\u5217\n\n                              0  1  1  0  1\n\n\u7136\u540e\u6211\u4eec\u7ee7\u7eed\u63a8\uff0c\u4f1a\u53d8\u6210\u8fd9\u6837\n\n\t\t\t\t\t\t\t\t    1 \n                                \n                                 1  1  1  \n                              \n                              0  1  1  0  1\n                              \n\u53ef\u4ee5\u770b\u5230\u5982\u679c\u6709\u4e24\u4e2a\u4e00\u6837\u7684\u6570\u6328\u5728\u4e00\u8d77\uff0c\u4ed6\u4eec\u5c31\u4f1a\u4e00\u76f4\u5f80\u4e0a\u8d70\u3002\n\n\u4f3c\u4e4e\u6211\u4eec\u53ea\u8981\u627e\u5230\u76f8\u90bb\u4e00\u6837\u7684\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u8fd8\u662f\u7ed9\u4e00\u5f20 Atcoder \u9898\u89e3\u7684\u4f8b\u56fe\u5427\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/28097.png)\n\n\u5927\u6982\u5c31\u662f\u8fd9\u4e2a\u610f\u601d\u5427\u3002\n\n\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230\u79bb\u4e2d\u95f4\u6700\u8fd1\u7684\u4e00\u7ec4\u76f8\u90bb\u4e00\u6837\u7684\u4e24\u4e2a\u6570\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u6700\u4e0a\u9762\u662f\u4ec0\u4e48\u6570\u3002\n\n\u90a3\u4e48\u5c31\u6709\u4eba\u95ee\u4e86\uff0c\u5982\u679c\u6709\u4e24\u4e2a\u4e0d\u540c\u7684\u76f8\u90bb\u7684\u79bb\u4e2d\u95f4\u4e00\u6837\u8fdc\u5462\uff1f\n\n......\n\n\u6211\u5efa\u8bae\u4f60\u518d\u60f3\u4e00\u60f3\u3002\n\n\u56e0\u4e3a\u4e00\u5171\u53ea\u6709\u4e24\u79cd\u6570\uff0c\u53c8\u662f\u5947\u6570\u4e2a\uff0c\u6240\u4ee5\u8fd9\u79cd\u53ef\u80fd\u4e0d\u5b58\u5728\u3002\n\n\u6700\u540e\u8fd8\u6709\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\u3002\u5c31\u662f\u6ca1\u6709\u4efb\u4f55\u4e24\u4e2a\u76f8\u90bb\u7684\u3002\n\n\u5927\u6982\u957f\u8fd9\u6837\u3002\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/28098.png)\n\n\u6211\u4eec\u53ea\u9700\u8981\u7279\u5224\u4e00\u4e0b\u5c31\u884c\u4e86\u3002\n\n\u5927\u6982\u5c31\u662f\u8fd9\u6837\u3002\n\n\u8bf4\u4e86\u8fd9\u4e48\u591a\uff0c\u522b\u5fd8\u4e86\u8fd8\u6709\u4e8c\u5206\u7684\u3002\n\n\u4ee3\u7801\uff08\u90e8\u5206\u501f\u9274\u4e8e\u535a\u5ba2\uff09\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\ninline int read(){\n\tchar ch=getchar();int x=0,f=1;\n\twhile(ch>'9' || ch<'0'){\n        if(ch=='-') f=-1;\n\t    ch=getchar();\n\t}\n\twhile(ch>='0' && ch<='9'){\n\t\tx=x*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn x*f;\n}\n\nint n,a[20000010];\n\nint small(int i,int j,int k) {//\u6c42\u662f\u5426\u90fd\u5c0f\u4e8e\u7b49\u4e8e\n\treturn a[i]<=k && a[j]<=k;\n}\n\nint big(int i,int j,int k){//\u6c42\u662f\u5426\u90fd\u5927\u4e8e\n\treturn a[i]>k && a[j]>k;\n} \n\nint check(int k){\n\tfor(int i=0;i<n-1;i++){//\u679a\u4e3e\u8ddd\u79bb\u5224\u65ad\n\t\tif(big(n+i,n+i+1,k) || big(n-i,n-i-1,k)) return 0;\n\t\tif(small(n+i,n+i+1,k) || small(n-i,n-i-1,k)) return 1;\n\t}\n\treturn small(1,1,k);//\u6ca1\u6709\u91cd\u5408\u7684\u7279\u5224\n}\n\nint main(){\n\tn=read();\n\tfor(int i=1;i<=2*n-1;i++){\n\t\ta[i]=read();\n\t}\n\tint l=1,r=2*n-1,ans;\n\twhile(l<r){//\u4e8c\u5206\u5224\u65ad\n\t\tint mid=l+r>>1;\n\t\tif(check(mid)) {\n\t\t\tr=mid;\n\t\t}\n\t\telse l=mid+1;\n\t}\n\tcout<<r;\n\treturn 0; \n}\n\n```\n\n\u603b\u7ed3\uff0c\u4e00\u9053\u4e8c\u5206\u8d2a\u5fc3\u9898\uff0c\u9700\u8981\u4e00\u5b9a\u7684\u624b\u63a8\u8fc7\u7a0b\u627e\u5230\u89c4\u5f8b\u3002",
        "postTime": 1534055665,
        "uid": 60136,
        "name": "chengni",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT2165 \u3010Median Pyramid Hard\u3011"
    },
    {
        "content": "- \u6709\u6bd4\u6b63\u89e3\u65f6\u95f4\u590d\u6742\u5ea6\u66f4\u4f18\u7684\u7ebf\u6027\u89e3\u6cd5\uff01\u503c\u5f97\u4e00\u770b\uff01\n\n**\u9898\u610f**\n- [\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/AT2165)\u3002\n- \u7ed9\u5b9a\u4e00\u4e2a\u6570\u5b57\u91d1\u5b57\u5854\uff0c\u5e95\u5c42\u6709 $2n-1$ \u4e2a\u6570\uff0c\u5206\u522b\u662f $1$ \u5230 $2n-1$ \u7684\u4e00\u4e2a\u6392\u5217\uff0c\u9010\u6b21\u51cf $2$\uff0c\u9876\u5c42\u6709 $1$ \u4e2a\u6570\u3002\n- \u6bcf\u4e2a\u65b9\u683c\u5185\u7684\u6570\u662f\u6b63\u4e0b\uff0c\u5de6\u4e0b\uff0c\u53f3\u4e0b\u7684\u4e09\u4e2a\u6570\u7684\u4e2d\u4f4d\u6570\u3002\n- \u6c42\u6700\u4e0a\u9762\u65b9\u683c\u7684\u6570\u5b57\u3002\n\n**\u5206\u6790**\n- \u9996\u5148\u53ef\u4ee5\u4e8c\u5206\u7b54\u6848\uff0c\u7136\u540e\u95ee\u9898\u53d8\u6210\u53ea\u6709 $0,1$ \u7684\u60c5\u51b5\uff0c\u7136\u540e\u6211\u4eec\u5c31\u5199\u4e2a\u5173\u4e8e $0,1$ \u7684 $O(n^2)$ \u66b4\u529b\u6c42\u89e3\u627e\u89c4\u5f8b\u3002\n- [\u5b9e\u9a8c\u7a0b\u5e8f\u548c\u63a2\u7a76\u7ed3\u8bba](https://www.luogu.com.cn/paste/h75767rv)\u3002\n- \u901a\u8fc7\u8fd9\u4e2a\u5b9e\u9a8c\u7a0b\u5e8f\u7684\u8f85\u52a9\uff0c\u6211\u4eec\u627e\u5230\u4e86 $O(n)$ \u5224\u5b9a $01$ \u60c5\u51b5\u7684\u505a\u6cd5\uff0c\u90a3\u4e48\u901a\u8fc7\u4e8c\u5206\uff0c\u6211\u4eec\u4e5f\u627e\u5230\u4e86 $O(n\\log n)$ \u5224\u5b9a\u4e00\u822c\u60c5\u51b5\u7684\u505a\u6cd5\uff0c\u4ee3\u7801\u5b9e\u73b0\u4e0d\u7b97\u56f0\u96be\u3002\n- [\u4ee3\u7801\u5b9e\u73b0](https://www.luogu.com.cn/paste/uxlxi68l)\u3002\n\n**\u62d3\u5c55**\n- \u5b66\u8fc7\u4e8c\u5206\u7684\u90fd\u77e5\u9053\u4e8c\u5206\u7b54\u6848\u6709\u4e2a\u91cd\u8981\u7684\u601d\u60f3\uff1a\u53bb\u4e8c\u5206\u5316\u3002\n- \u5176\u5927\u6982\u610f\u601d\u5c31\u662f\u4e8c\u5206\u867d\u597d\uff0c\u53ef\u4ee5\u5927\u5927\u7b80\u5316\u95ee\u9898\uff0c\u65b9\u4fbf\u6027\u8d28\u7684\u53d1\u73b0\uff0c\u4f46\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u4f1a\u589e\u52a0\u4e00\u4e2a $\\log$\uff0c\u6709\u7684\u65f6\u5019\u8dd1\u4e00\u4e2a $\\log$ \u672a\u5fc5\u8f7b\u677e\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5148\u7528\u4e8c\u5206\u627e\u5230\u4e00\u4e2a\u95ee\u9898\u7684\u8f83\u597d\u89e3\u6cd5\uff0c\u7136\u540e\u6839\u636e\u8fd9\u4e2a\u6027\u8d28\uff0c\u5c06\u4e8c\u5206\u6539\u4e3a\u626b\u63cf\uff0c\u5c1d\u8bd5\u7528\u53e6\u4e00\u79cd\u65b9\u6cd5\u52a8\u6001\u7ef4\u62a4\u8fd9\u4e2a\u6027\u8d28\uff0c\u590d\u6742\u5ea6\u5c31\u4f1a\u964d\u4f4e\u4e00\u4e2a $\\log$\u3002\n- \u6211\u4eec\u9996\u5148\u5bf9\u8f93\u5165\u8fdb\u884c\u8ba1\u6570\u6392\u5e8f\uff0c\u7136\u540e\u9010\u4e2a\u4ece\u5c0f\u5230\u5927\u52a0\u5165\uff0c\u60c5\u51b5\u4e0e $01$ \u7c7b\u4f3c\uff08\u53ef\u4ee5\u7406\u89e3\u6210\u4e00\u5806 $1$\uff0c\u6309\u7167\u987a\u5e8f\u9010\u4e2a\u628a\u5b83\u4eec\u53d8\u6210 $0$\uff09\u3002\n- \u6839\u636e\u6211\u4eec\u4e4b\u524d\u53d1\u73b0\u7684\u6027\u8d28\uff0c\u5982\u679c\u52a0\u5165\u8fd9\u4e2a\u6570\u5b57\u4f4d\u7f6e\u7684 $0$ \u4e4b\u540e\uff0c\u7b2c\u4e00\u6b21\u4f7f\u5f97\u6240\u6709\u5947\u6570\u4f4d\u7f6e\u4e0a\u5168\u90fd\u662f $0$\uff0c\u6216\u8005\u4f7f\u5f97\u6709\u4e24\u6bb5\u8fde\u7eed\u7684 $0$ \u6bd4\u4e24\u6bb5\u8fde\u7eed\u7684 $1$ \u66f4\u9760\u8fd1\u4e2d\u95f4\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u5b57\u5c31\u662f\u7b54\u6848\u3002\n- \u8fd9\u663e\u7136\u662f\u53ef\u4ee5\u5747\u644a $O(1)$ \u7ef4\u62a4\u7684\uff0c\u53cc\u6307\u9488\u7ef4\u62a4\u6700\u9760\u8fd1\u4e2d\u5fc3\u7684\u8fde\u7eed $1$ \u7684\u4f4d\u7f6e\u5747\u644a\u590d\u6742\u5ea6\u662f\u5bf9\u7684\uff0c\u5f00\u4e2a\u6570\u7ec4\u7ef4\u62a4\u5947\u6570\u4f4d\u7f6e\u4e0a\u7684 $1$ \u7684\u4e2a\u6570\uff0c\u6bcf\u6b21\u7b54\u6848\u7684\u65f6\u5019\u90fd $O(1)$ \u66f4\u65b0\u6700\u8fd1\u7684\u8fde\u7eed $0$ \u7684\u4e2a\u6570\u2026\u2026\u603b\u4e4b\u90fd\u662f\u57fa\u7840\u7684\u666e\u53ca\u96be\u5ea6\u7684\u64cd\u4f5c\u3002\n- \u8bf4\u53e5\u5b9e\u8bdd\uff0c\u8fd9\u4e48\u7b80\u5355\u7684\u7ebf\u6027\u65b9\u6cd5\uff0c\u4ee5\u5404\u4f4d\u7684\u667a\u5546\uff0c\u60f3\u5230\u662f\u4e0d\u56f0\u96be\u7684\uff0c\u4f46\u533a\u522b\u5c31\u5728\u4e8e\u613f\u610f\u4e0d\u613f\u610f\uff0c\u867d\u7136\u5404\u4f4d\u6216\u8bb8\u90fd\u6bd4\u6211\u5f3a\uff0c\u4f46\u6211\u4ecd\u7136\u5e0c\u671b\u5404\u4f4d\u591a\u601d\u8003\uff0c\u6216\u8bb8\u4e5f\u6709\u4e0d\u4e00\u6837\u7684\u6536\u83b7\u5462\u3002\n- [\u4ee3\u7801\u5b9e\u73b0](https://www.luogu.com.cn/paste/67ng1tqu)\uff0c\u4ee3\u7801\u5b9e\u73b0\u4e5f\u5f88\u7b80\u5355\u3002\n\n**\u518d\u62d3\u5c55**\n- [\u8fd9\u7bc7](https://www.luogu.com.cn/discuss/332142)\u63d0\u5230\u7684\u95ee\u9898\uff0c\u4e3a\u4ec0\u4e48\u6709\u7684\u4e8c\u5206\u4e0d\u80fd\u5904\u7406\u4e00\u822c\u60c5\u51b5\uff1f\u9898\u89e3\u4f3c\u4e4e\u5e76\u6ca1\u6709\u7528\u5230\u6392\u5217\u7684\u6027\u8d28\u3002\n- \u6211\u7ed9\u51fa\u7684\u56de\u7b54\u662f\uff1a\u9519\u8bef\u7684\u539f\u56e0\u662f\u56e0\u4e3a\u6570\u636e\u503c\u57df\u4e0d\u8fde\u7eed\uff0c\u5c06\u6570\u636e\u79bb\u6563\u5316\u5c31\u53ef\u4ee5\u4e86\uff0c\u4e3a\u4ec0\u4e48\uff1f",
        "postTime": 1644904475,
        "uid": 260884,
        "name": "WeLikeStudying",
        "ccfLevel": 0,
        "title": "\u3010\u4e8c\u5206\u3011AT2165 Median Pyramid Hard"
    },
    {
        "content": "## \u9898\u89e3\uff1a\n\n\u6211\u8fd8\u662f\u592a\u849f\u4e86\uff0c\u6ca1\u6709\u60f3\u5230\u80fd\u4e8c\u5206\u7b54\u6848\u2026\u2026\n\n\u6211\u4eec\u4e8c\u5206\u5854\u9876\u7684\u503c\uff0c\u628a\u5c0f\u4e8e\u7b49\u4e8e\u8fd9\u4e2a\u503c\u7684\u53d8\u4e3a1\uff0c\u5927\u4e8e\u53d8\u4e3a0\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5982\u679c\u6709\u591a\u4e2a\u4e2a1\u62160\u8fde\u5728\u4e00\u8d77\uff0c\u90a3\u4e48\u4ed6\u4eec\u5c31\u65e0\u6cd5\u88ab\u5206\u5f00\uff0c\u4ed6\u4f1a\u4e00\u76f4\u5f80\u4e0a\u8d70\u3002\n\n\u90a3\u4e5f\u5c31\u662f\u8bf4\uff0c\u6700\u540e\u90a3\u7ec4\u5148\u8d70\u5230\u9876\u90a3\u7ec4\u5c31\u8d62\u4e86\uff0c\u90a3\u5c31\u8981\u770b\u90a3\u7ec4\u79bb\u4e2d\u5fc3\u66f4\u8fd1\u3002\n\n\u90a3\u4f1a\u4e0d\u4f1a\u5b58\u5728\u4e24\u4e2a\u4e0d\u540c\u9635\u8425\u7684\u7ec4\u8ddd\u79bb\u4e00\u6837\u8fdc\u80fd\uff0c\u4f60\u4f1a\u53d1\u73b0\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\u3002\n\n\u56e0\u4e3a\uff0c\u5982\u679c\u8ddd\u79bb\u76f8\u7b49\uff0c\u90a3\u4e48\u4e2d\u95f4\u4e00\u5b9a\u662f\u5947\u6570\u4e2a\u4f4d\u7f6e\uff0c\u6211\u4eec\u75281\u548c0,\u4ea4\u66ff\u9694\u5f00\u4e24\u7ec4\uff0c\u90a3\u4e48\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u80af\u5b9a\u4f1a\u548c\u5de6\u8fb9\u6216\u8005\u53f3\u8fb9\u4e00\u6837\uff0c\u53c8\u5f62\u6210\u4e00\u4e2a\u7ec4\uff0c\u6240\u8fd9\u4e24\u4e2a\u7ec4\u8981\u4e48\u90fd\u662f1\uff0c\u8981\u4e48\u90fd\u662f0\u3002\n\n\u89e3\u51b3\u4e86\u8fd9\u4e9b\u95ee\u9898\u5c31\u80fd\u6109\u5feb\u7684\u5224\u65ad\u4e86\uff01\n\n## CODE\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\n\nint n,a[200005];\n\ninline bool check(const int &k){\n\tif((a[n-1]<=k&&a[n]<=k)||(a[n]<=k&&a[n+1]<=k))return 1;\n\tif((a[n-1]> k&&a[n]> k)||(a[n]> k&&a[n+1]> k))return 0;\n\tfor(int i=1;i<n-1;i++){\n\t\tif((a[n+i]<=k&&a[n+i+1]<=k)||(a[n-i]<=k&&a[n-i-1]<=k))return 1;\n\t\tif((a[n+i]> k&&a[n+i+1]> k)||(a[n-i]> k&&a[n-i-1]> k))return 0;\n\t}\n\treturn a[1]<=k;\n}\n\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<n<<1;i++)scanf(\"%d\",a+i);\n\tint l=1,r=(n<<1)-1;\n\twhile(l<r){\n\t\tint mid=l+r>>1;\n\t\tif(check(mid))r=mid;\n\t\telse l=mid+1;\n\t}\n\tprintf(\"%d\",l);\n}\n```\n\u633a\u77ed\u7684\u628a\u2026\u2026",
        "postTime": 1534316424,
        "uid": 48147,
        "name": "2016gdgzoiLZH",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT2165 \u3010Median Pyramid Hard\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/AT2165)\n\n------------\n\n### solution\n\n\u6211\u4eec\u9700\u8981\u6c42\u7684\u662f\u6bcf\u7ec4\u7684\u4e2d\u4f4d\u6570\uff0c\u6240\u4ee5\u8bb0\u5f55\u5927\u5c0f\u5173\u7cfb\u662f\u5f88\u91cd\u8981\u7684\uff08~~\u5e9f\u8bdd~~\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u6570\u5b57 $x$\uff0c\u8bb0\u5f55\u5728\u5854\u5e95\u7684\u6570\u5217\u4e2d\uff0c\u6bcf\u4e00\u4e2a $a_i$ \u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e $x$\uff0c\u5982\u679c\u5c0f\u4e8e\u7b49\u4e8e $x$ \u5219\u4e3a $0$\uff0c\u5927\u4e8e $x$ \u5219\u4e3a $1$\uff0c\u8fd9\u6837\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a $01$ \u5e8f\u5217\u3002\n\n\u4ee5\u6837\u4f8b\u4e3a\u4f8b\uff0c\u5f53 $x$ \u4e3a $3$ \u65f6\u5e8f\u5217\u662f $0,1,0,1,1,1,0$\u3002\u5f88\u660e\u663e\u4e0b\u9762\u7684\u4e09\u4e2a\u6570\u6709 $110$\uff0c$001$\uff0c$111$\uff0c$000$\u7684\u53ef\u80fd\u3002\u53d6\u4e2d\u4f4d\u6570\u65f6\uff0c\u4e00\u5b9a\u5f97\u5230\u7684\u662f\u51fa\u73b0\u5f97\u591a\u7684\u6570\uff0c\u7136\u540e\u5728 $110$ \u4e2d\u53d6\u5230 $1$\uff0c$001$ \u4e2d\u53d6\u5230 $0$\u3002\n\n\u628a\u8fd9\u4e2a\u6027\u8d28\u5411\u4e0a\u63a8\uff0c\u5c31\u6709\u4e00\u79cd\u60c5\u51b5\uff1a\u5f53 $a_i$\uff0c$a_{i+1}$ \u4e3a $1$\uff0c\u4e0a\u4e00\u884c\u7684 $i$\uff0c$i+1$ \u4e5f\u4e3a $1$\u3002\n \n\u53ef\u4ee5\u77e5\u9053\u53ea\u8981\u4e00\u76f4\u5f80\u4e0a\u63a8\uff0c\u76f4\u5230\u5854\u5c16\uff0c\u8fd9\u4e2a\u6027\u8d28\u4f9d\u7136\u9002\u7528\u3002\u90a3\u4e48\u6709\u8fd9\u4e48\u591a\u7684 $11$\uff0c$00$\uff0c\u53ea\u8981\u8c01\u79bb\u4e2d\u95f4\u70b9\u6700\u8fd1\uff0c\u5b83\u5c31\u53ef\u4ee5\"\u8d70\"\u5230\u5854\u5c16\uff0c\u5854\u5c16\u7684 $01$ \u503c\u4e0e\u5b83\u76f8\u7b49\u3002\n\n\u90a3\u600e\u6837\u627e\u5230\u8fd9\u4e2a $x$ \u5462\uff1f\u53ef\u4ee5\u679a\u4e3e\u3002\u60f3\u5230\u679a\u4e3e\uff0c\u5c31\u53ef\u4ee5\u60f3\u5230\u4e8c\u5206\u3002\u6ce8\u610f\uff0c\u6211\u4eec\u5e94\u8be5\u7528\u7528\u6570\u7ec4\u4e0b\u6807\uff08\u5373\u6570\u5b57\u7ec4\u5408\uff09\u6765\u4e8c\u5206\u624d\u5bf9\u3002\n\n------------\n\n### code\n\n\n```cpp\n#include <cstdio>\n#include <cstring>\nint N, Ans, A[200001], B[200001];\n\nnamespace S {\n\tinline bool Min(int w1, int w2, int d) {\n\t\treturn A[w1] <= d && A[w2] <= d;\n\t\t//\u4e24\u4e2a\u662f\u5426\u90fd\u662f\u5c0f\u4e8e\u7b49\u4e8e\u5f53\u524d\u503c \n\t} \n\n\tinline bool Max(int w1, int w2, int d) {\n\t\treturn A[w1] > d && A[w2] > d;\n\t\t//\u4e24\u4e2a\u662f\u5426\u90fd\u662f\u5927\u4e8e\u5f53\u524d\u503c \n\t}\n\n\tinline int check(int x) {\n\t\tint Mid = N / 2 + 1; //\u4e2d\u95f4\u70b9\uff08\u5854\u9876\u5bf9\u4e8e\u5854\u5e95\u6570\u5217\u662f\u7b2c\u51e0\u4e2a\uff09\n\t\tfor(int i = 0; i < Mid - 1; i ++) {\n\t\t\t/*\n\t\t\t   \u5236\u4f5c 01 \u5e8f\u5217\uff1a\u4ece\u4e2d\u95f4\u5f80\u8fb9\u4e0a\u627e\u6709\u6ca1\u6709 00 \u6216 11\n\t\t\t   \u5c31\u53ef\u4ee5\u627e\u5230\u6700\u9760\u4e2d\u95f4\u7684\u4e24\u4e2a\u76f8\u540c\u7684\uff0c\u50cf\u89e3\u91ca\u4e2d\u90a3\u6837\n\t\t\t*/\n\t\t\tif(Max(Mid - i, Mid - i - 1, x) || Max(Mid + i, Mid + i + 1, x)) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif(Min(Mid - i, Mid - i - 1, x) || Min(Mid + i, Mid + i + 1, x)) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\treturn !(A[1] <= x);\n\t\t//\u7279\u5224\u6ca1\u6709 00 , 11 \u65f6\u7684\u60c5\u51b5\uff0c\u6b64\u65f6\u6613\u5f97\u5854\u9876\u5e94\u4e3a\u7b2c\u4e00\u4e2a\u6216\u6700\u540e\u4e00\u4e2a 0 \u6216 1\n\t}\n\n\tinline int read() { //\u8bfb\u5165\u4f18\u5316 \n\t\tint cnt = 1, res = 0;\n\t\tchar ch = getchar();\n\t\twhile(ch < '0' || ch > '9') {\n\t\t\tcnt = ch == '-' ? -1 : 1, ch = getchar();\n\t\t}\n\t\twhile(ch >= '0' && ch <= '9') {\n\t\t\tres = res * 10 + (ch ^ 48), ch = getchar();\n\t\t}\n\t\treturn res * cnt;\n\t}\n\n\tinline void print(int x) {\n\t\tif(x < 0) putchar('-'), x = -x;\n\t\tx > 9 ? print(x / 10), putchar((x % 10) ^ 48) : putchar((x % 10) ^ 48);\n\t}\n\n\tinline void Erfen() { //\u4e8c\u5206\u5bfb\u627e x \u4f5c\u4e3a\u5019\u9009\u7b54\u6848\n\t\tint l = 1, r = N; //\u56e0\u4e3a N \u5df2\u662f N * 2 - 1\uff0c\u6240\u4ee5 r \u76f4\u63a5\u8d4b\u503c\u4e3a N\n\t\twhile(l < r) { //\u56e0\u4e3a\u8981\u6c42\u7684\u662f\u6700\u540e\u4e00\u4e2a\u5c0f\u4e8e\u7b49\u4e8e\u7684\uff0c\u6240\u4ee5\u662f\u7528\u53f3\u6807\u8bb0\u67e5\u627e\n\t\t\tint Mid = (l + r) / 2; //\u4e8c\u5206\u67e5\u627e\u4e2d\u7684\u4e2d\u95f4\u503c\n\t\t\tint p = check(Mid); //\u5224\u65ad\u5854\u9876\u7b54\u6848\u662f\u5426\u6bd4 x \u5927\n\t\t\tif(p == 0) {\n\t\t\t\tr = Mid;\n\t\t\t} else {\n\t\t\t\tl = Mid + 1;\n\t\t\t}\n\t\t}\n\t\tprint(r); //\u627e\u5230\u7b54\u6848\uff0c\u8f93\u51fa\n\t}\n}\nusing namespace S;\n\nint main(int argc, char const * argv[]) {\n\tmemset(B, 127, sizeof(B)); //\u8d4b\u503c\u4e3a\u65e0\u7a77\u5927\n\tN = read() * 2 - 1; //\u8bfb\u5165 N \u7684\u503c  \n\tfor(int i = 1; i <= N; i ++) {\n\t\tA[i] = read();\n\t}\n\tErfen(); //\u76f4\u63a5\u4e8c\u5206 \n\treturn 0; //\u5b8c\u7f8e\u7684\u7ed3\u675f \n} \n```\n\n------------\n\n\n### tips\n\n\u5982\u679c\u4e00\u4e2a $11$\uff0c$00$ \u90fd\u6ca1\u6709\u51fa\u73b0\uff0c\u8981\u7279\u5224\u5854\u5c16\u5e94\u6539\u4e3a\u6700\u5de6\u8fb9\uff0c\u8fd8\u662f\u6700\u53f3\u8fb9\u90a3\u4e2a\u503c\uff1f~~\uff08\u60f3\u4e00\u60f3~~\u3002",
        "postTime": 1659496166,
        "uid": 705117,
        "name": "yixinxiangxue172",
        "ccfLevel": 0,
        "title": "AT2165 \u4e2d\u4f4d\u6570\u91d1\u5b57\u5854 \u7b14\u8bb0"
    },
    {
        "content": "[Atcoder \u9898\u9762\u4f20\u9001\u95e8](https://atcoder.jp/contests/agc006/tasks/agc006_d) & [\u6d1b\u8c37\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/AT2165)\n\n~~u1s1 Atcoder \u4e0d\u5c11\u601d\u7ef4\u9898\u662f\u771f\u7684\u60f3\u4e0d\u51fa\u6765\uff0c\u5c3d\u7ba1\u5728 Atcoder \u4e0a\u96be\u5ea6\u5e76\u4e0d\u9ad8~~\n\n\u4e8c\u5206\u7b54\u6848\uff08\u8fd9\u6211\u5012\u662f\u60f3\u5230\u4e86\uff09\uff0c\u68c0\u9a8c\u6700\u4e0a\u9762\u4e00\u5c42\u7684\u6570\u662f\u5426 $\\ge x$\u3002\n\n\u6211\u4eec\u5c06\u6700\u5e95\u4e0b\u4e00\u5c42\u7684\u6570\u4e2d $\\ge x$ \u7684 $a_i$ \u8bbe\u4e3a $1$\uff0c$<x$ \u7684\u8bbe\u4e3a $0$\uff0c\u90a3\u4e48\u539f\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a\u6bcf\u6b21\u64cd\u4f5c\u5bf9\u4e8e\u76f8\u90bb\u4e09\u4e2a\u6570\uff0c\u5982\u679c $1$ \u7684\u4e2a\u6570 $\\ge 2$\uff0c\u5c31\u5728\u8be5\u4f4d\u4e0a\u586b\u4e00\u4e2a $1$\uff0c\u5426\u5219\u5728\u8be5\u4f4d\u4e0a\u586b\u4e00\u4e2a $0$\uff0c\u6c42\u6700\u7ec8\u9876\u4e0a\u7684\u6570\u662f $0$ \u8fd8\u662f $1$\u3002\n\n\u4e0d\u96be\u53d1\u73b0\u7ecf\u8fc7\u4e8c\u5206\u7b54\u6848\u8fd9\u4e2a\u8f6c\u5316\uff0c\u6211\u4eec\u5c06\u539f\u6765\u503c\u57df\u5728 $[1,2n-1]$ \u8303\u56f4\u5185\u7684\u95ee\u9898\u7f29\u5c0f\u4e3a\u503c\u57df\u5728 $[0,1]$ \u8303\u56f4\u5185\u7684\u95ee\u9898\uff0c\u53ef\u76f4\u63a5\u505a\u4f3c\u4e4e\u8fd8\u662f\u6709\u4e9b\u68d8\u624b\uff0c\u6211\u4eec\u4e0d\u59a8\u8fdb\u4e00\u6b65\u63a2\u7a76\u8fd9\u91cc\u9762\u7684\u89c4\u5f8b\u3002\n\n\u6211\u4eec\u624b\u73a9\u51e0\u7ec4\u6570\u636e\u5373\u53ef\u53d1\u73b0\u4e00\u4e2a\u6027\u8d28\uff0c\u5982\u679c\u76f8\u90bb\u4e24\u4e2a\u6570\u90fd\u662f $1$\uff0c\u90a3\u4e48\u5b83\u4e0a\u9762\u6240\u6709\u6570\u90fd\u662f $1$\uff0c\u53cd\u6b63\u5982\u679c\u76f8\u90bb\u4e24\u4e2a\u6570\u90fd\u662f $0$\uff0c\u90a3\u4e48\u5b83\u4e0a\u9762\u6240\u6709\u6570\u90fd\u662f $0$\uff0c\u5e76\u4e14\u5982\u679c $i$ \u6ee1\u8db3 $a_{i}=a_{i+1}=a_{i-2}=1$\uff0c\u90a3\u4e48\u5230\u4e86\u4e0a\u4e00\u5c42\u7b2c $i-1$ \u5217\u4e5f\u4f1a\u53d8\u6210 $1$\uff0c\u53ef\u4ee5\u770b\u4f5c\u8fd9\u4e2a $1$ \u201c\u8513\u5ef6\u201d\u5230\u4e86\u7b2c $i-1$ \u5217\uff0c\u4e8e\u662f\u6211\u4eec\u731c\u6d4b\uff0c\u7b2c $n$ \u5c42\u7684\u6570\u4e00\u5b9a\u4e0e\u8ddd\u79bb\u4e2d\u5fc3\u70b9\u6700\u8fd1\u7684 $a_{i}=a_{i+1}$ \u7684 $i$ \u6709\u5173\uff0c\u56e0\u4e3a\u5b83\u80fd\u6700\u5feb\u201c\u8513\u5ef6\u201d\u5230\u7b2c $n$ \u5217\u3002\n\n\u4e8b\u5b9e\u679c\u771f\u5982\u6b64\u3002\n\n\u8fd9\u91cc\u7a0d\u5fae\u8bc1\u660e\u4e00\u4e0b\u3002\u8bb0 $i=n+p$ \u4e3a\u8ddd\u79bb\u4e2d\u5fc3\u70b9\u6700\u8fd1\u7684\u6ee1\u8db3 $a_i=a_{i+1}$ \u7684 $i$\uff0c\u5176\u4e2d $p\\ge 0$\uff08$p<0$ \u4e5f\u540c\u7406\uff0c\u7ffb\u8f6c\u4e00\u4e0b\u5c31\u884c\u4e86\uff09\uff0c\u5982\u679c $p=0$ \u90a3\u663e\u7136\u6839\u636e\u4e4b\u524d\u7684\u7ed3\u8bba\uff0c\u7b2c $n$ \u5217\u7684\u6570\u5c31\u662f $a_n$\uff0c\u7b26\u5408\u9898\u610f\u3002\u5426\u5219\uff0c\u7531\u4e8e $i=n+p$ \u4e3a\u6700\u8fd1\u7684\u6ee1\u8db3 $a_i=a_{i+1}$ \u7684 $i$\uff0c\u5fc5\u7136\u6709 $[n-p,n+p]$ \u90e8\u5206\u7684 $a_i$ \u4e3a $01$ \u95f4\u9694\u5206\u5e03\uff0c\u5373 $a_{n+p-2}=a_{n+p-4}=a_{n+p-6}=\\cdots=a_{n-p+2}=a_{n-p}=a_{n+p}$\uff0c$a_{n+p-1}=a_{n+p-3}=a_{n+p-5}=\\cdots=a_{n-p+1}=1-a_{n+p}$\uff0c\u7531 $a_{n+p-2}=a_{n+p}=a_{n+p+1}$ \u53ef\u77e5\u4ece\u4e0b\u5f80\u4e0a\u6570\u7b2c\u4e8c\u884c\u7b2c $n+p-1$ \u4f4d\u7f6e\u4e0a\u7684\u503c\u4e5f\u662f $a_{n+p}$\uff0c\u76f8\u5f53\u4e8e $a_{n+p}$ \u5411\u5de6\u8513\u5ef6\u4e86\u4e00\u683c\u3002\u800c\u663e\u7136\u5bf9\u4e8e $01$ \u5206\u5e03\u7684\u5e8f\u5217\uff0c\u8fdb\u884c\u4e00\u904d\u53d6\u4e2d\u4f4d\u6570\u64cd\u4f5c\u4e4b\u540e\u8fd8\u662f $01$ \u95f4\u9694\u5206\u5e03\u7684\uff0c\u56e0\u6b64\u5230\u7b2c\u4e8c\u884c\u53ef\u4ee5\u770b\u4f5c $p'=p-1$ \u7684\u7248\u672c\u7ee7\u7eed\u9012\u5f52\u4e0b\u53bb\uff0c\u5f52\u7eb3\u53ef\u5f97\u6700\u7ec8\u7684\u6570\u5c31\u662f $a_{n+p}$\u3002\n\n\u6709\u4eba\u53ef\u80fd\u4f1a\u95ee\uff1a\u5982\u679c\u5b58\u5728 $p$ \u4f7f\u5f97 $i=n+p$ \u4e3a\u8ddd\u79bb\u4e2d\u5fc3\u70b9\u6700\u8fd1\u7684\u6ee1\u8db3 $a_i=a_{i+1}$ \u7684 $i$\uff0c\u6ee1\u8db3 $a_{n+p}=a_{n+p+1}\\ne a_{n-p}=a_{n-p-1}$ \u600e\u4e48\u529e\u5462\uff1f\u7a0d\u5fae\u52a8\u70b9\u8111\u5b50\u5373\u53ef\u77e5\u9053\u8fd9\u79cd\u60c5\u51b5\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u56e0\u4e3a\u6839\u636e\u4e0a\u9762\u7684\u8bc1\u660e\u8fc7\u7a0b\u53ef\u77e5 $[n-p,n+p]$ \u662f $01$ \u95f4\u9694\u5206\u5e03\u7684\uff0c\u56e0\u6b64 $\\forall x,y\\in[n-p,n+p]$\uff0c\u82e5 $|x-y|$ \u4e3a\u5076\u6570\uff0c\u5219 $a_x=a_y$\uff0c\u53cd\u4e4b $a_x\\ne a_y$\uff0c\u800c $n-p\\equiv n+p\\pmod{2}$\uff0c\u6545 $a_{n-p}=a_{n+p}$\uff0c\u56e0\u6b64\u4e0d\u4f1a\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u3002\n\n\u6700\u540e\u7279\u5224\u6574\u4e2a $a$ \u6570\u7ec4\u5c31\u662f $01$ \u95f4\u9694\u5206\u5e03\u7684\u60c5\u51b5\uff0c\u6b64\u65f6\u6700\u4e0a\u9762\u4e00\u5c42\u7684\u6570\u5c31\u662f $a_{2n-1}$\u3002\n\n```cpp\nconst int MAXN=1e5;\nint n,a[MAXN*2+5],b[MAXN*2+5];\nbool check(int x){\n\tfor(int i=1;i<(n<<1);i++) b[i]=(a[i]>=x);\n\tfor(int i=0;i<n-1;i++){\n\t\tif(b[n+i]==b[n+i+1]) return b[n+i];\n\t\tif(b[n-i]==b[n-i-1]) return b[n-i];\n\t} return b[1];\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<(n<<1);i++) scanf(\"%d\",&a[i]);\n\tint l=1,r=(n<<1)-1,mid,x=-114514;\n\twhile(l<=r) (check(mid=l+r>>1))?(x=mid,l=mid+1):(r=mid-1);\n\tprintf(\"%d\\n\",x);return 0;\n}\n```\n\n",
        "postTime": 1616571174,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 AT2165 [AGC006D] Median Pyramid Hard"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u79cd\u4e0d\u540c\u7684\u7406\u89e3\u65b9\u6cd5\n\n\u540c\u6837\u662f\u4e8c\u5206\u7b54\u6848\uff0c\u5c06\u6240\u6709\u5927\u4e8e\u7b49\u4e8e\u8be5\u6570\u7684\u8bbe\u4e3a1\uff0c\u5176\u4f59\u8bbe\u4e3a0\uff0c\u4e4b\u540e\u5c31\u53d8\u6210\u4e86\u53ea\u6709\u96f6\u548c\u4e00\u7684\u4e00\u4e2a\u5e8f\u5217\u3002\n\n\u5bf9\u4e8e\u4e00\u822c\u60c5\u51b5\uff0c\u5373\u6ca1\u6709\u6570\u7684\u76f8\u90bb\u4e24\u4e2a\u90fd\u4e0e\u81ea\u5df1\u4e0d\u4e00\u6837\uff0c\u5b83\u7684\u7ed3\u679c\u4f1a\u5982\u4e0b\u9762\uff1a\n\n```\n    1\n   111\n  01111\n 0011111\n000111111\n```\n\u6240\u6709\u7684\u6570\u5b57\u90fd\u4e0d\u4f1a\u53d1\u751f\u6539\u53d8\uff0c\u6240\u4ee5\u552f\u4e00\u9700\u8981\u8003\u8651\u7684\u4ec5\u4e3a\u76f8\u90bb\u4e24\u4e2a\u90fd\u548c\u81ea\u5df1\u4e0d\u540c\u7684\u60c5\u51b5\uff0c\u7136\u540e\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e\u4e00\u6574\u4e2a\u76f8\u90bb\u4e24\u4e2a\u90fd\u548c\u81ea\u5df1\u4e0d\u540c\u7684\u533a\u95f4\uff0c\u5b83\u7684\u8fc7\u7a0b\u90fd\u662f\u5c06\u8fd9\u6574\u4e2a\u533a\u95f4\u5f02\u62161\uff0c\u4e4b\u540e\u8fd9\u4e2a\u533a\u95f4\u7684\u5de6\u53f3\u7aef\u70b9\u90fd\u5411\u5185\u79fb\u4e00\u4f4d\uff0c\u4e8e\u662f\u5c31\u6709\u4e86\u5982\u4e0b\u53d1\u73b0\uff1a\n\n- 1.\u957f\u5ea6\u4e3a\u5947\u6570\n\n```\n     0\n    000          <-\u6ca1\u4e86\n   00100         <-5~5  \n 0 01010 0       <-4~6\n00 10101 00      <-3~7\n\n```\n\u6bd4\u5982\u8fd9\u7ec4\u6570\u636e\u7b2c\u4e09\u5230\u7b2c\u4e03\u4e2a\u6570\u5b57\u5747\u4e0e\u5176\u76f8\u90bb\u4e0d\u540c\uff0c\u7136\u540e\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u533a\u95f4\u6700\u540e\u90fd\u4f1a\u53d8\u62100\uff0c\u800c\u5b83\u6b63\u662f\u8fd9\u4e2a\u533a\u95f4\u7684\u7b2c\u4e00\u4e2a\u6570\u5f02\u62161\u3002\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u79cd\u957f\u5ea6\u4e3a\u5947\u6570\u7684\u8fd9\u6837\u7684\u533a\u95f4\u6211\u4eec\u90fd\u53ef\u4ee5\u5c06\u5176\u53d8\u4e3a\u533a\u95f4\u7b2c\u4e00\u4e2a\u6570\u5f02\u62161\u6765\u4ee3\u8868\u4ed6\u4eec\u7684\u6700\u7ec8\u72b6\u6001\u3002\n\n- 2.\u957f\u5ea6\u4e3a\u5076\u6570\n\n```\n     1\n    110\n  1 1100         <-\u6ca1\u4e86\n 11 1010 0       <-5~6\n111 0101 00      <-4~7\n\n```\n\u6bd4\u5982\u8fd9\u7ec4\u6570\u636e\u7b2c\u56db\u5230\u7b2c\u4e03\u4e2a\u6570\u5b57\u5747\u4e0e\u5176\u76f8\u90bb\u4e0d\u540c\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u533a\u95f4\u7684\u5de6\u534a\u8fb9\u6700\u540e\u53d8\u6210\u4e861\uff0c\u53f3\u534a\u8fb9\u6700\u540e\u53d8\u6210\u4e860\uff0c\u6240\u4ee5\u5bf9\u4e8e\u957f\u5ea6\u4e3a\u5076\u6570\u7684\u533a\u95f4\u6211\u4eec\u5c06\u5de6\u534a\u8fb9\u8bbe\u4e3a\u5f00\u5934\u7684\u6570\u5f02\u62161\uff0c\u540e\u534a\u8fb9\u8bbe\u4e3a\u7ed3\u5c3e\u7684\u6570\u5f02\u62161\uff0c\u6765\u4ee3\u8868\u4ed6\u4eec\u7684\u6700\u7ec8\u72b6\u6001\u3002\n\n\u5982\u679c\u4e0d\u61c2\u53ef\u4ee5\u624b\u73a9\u4e00\u4e0b\uff0c~~\u6216\u8005\u95ee\u4e0b\u6211~~\u3002\n\n\u7136\u540e\u6211\u4eec\u5c31\u6c42\u51fa\u4e86\u6240\u6709\u4f4d\u7f6e\u7684\u6700\u7ec8\u72b6\u6001\uff0c\u6b64\u65f6\u9876\u4e0a\u7684\u6570\u5c31\u662f\u6700\u4e2d\u95f4\u7684\u6570\u4e86\n\n```\n#include <iostream>\n#include <cstdio>\nusing namespace std;\nconst int N = 1e5 + 10;\nint n;\nint a[N << 1];\nint vis[N << 1];\nbool check(int x)\n{\n    for (int i = 1; i <= 2 * n - 1; ++ i)\n    vis[i] = (a[i] >= x);\n    int be = 0;\n    for (int i = 2; i < 2 * n - 1; ++ i)\n    {\n        if(vis[i - 1] != vis[i] && vis[i + 1] != vis[i])\n        {\n            if(be == 0)\n            {\n                be = i;\n            }\n        }\n        else\n        {\n            if(be != 0)\n            {\n                int tot = 0, len = i - be, op = vis[be] ^ 1;\n                if(len & 1)\n                for (int j = be; j < i; ++ j)\n                vis[j] = op;\n                else\n                for (int j = be; j < i; ++ j)\n                {\n                    ++ tot;\n                    vis[j] = op;\n                    if(tot == (len + 1) >> 1)\n                    op ^= 1;\n                }\n                be = 0;\n            }\n        }\n    }\n    if(be != 0)\n    {\n        int i = 2 * n - 1;\n        int tot = 0, len = i - be, op = vis[be] ^ 1;\n        if(len & 1)\n        for (int j = be; j < i; ++ j)\n        vis[j] = op;\n        else\n        for (int j = be; j < i; ++ j)\n        {\n            ++ tot;\n            vis[j] = op;\n            if(tot == (len + 1) >> 1)\n            op ^= 1;\n        }\n        be = 0;\n    }\n    return vis[n];\n}\nint main()\n{\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= 2 * n - 1; ++ i)\n    {\n        scanf(\"%d\", &a[i]);\n    }\n    int ans = 1;\n    int l = 1, r = 2 * n - 1;\n    for(int mid = (l + r) >> 1; l <= r; mid = (l + r) >> 1)\n    {\n        if(check(mid))\n        ans = mid, l = mid + 1;\n        else r = mid - 1;\n    }\n    printf(\"%d\\n\", ans);\n}\n\n```\n",
        "postTime": 1608200610,
        "uid": 111728,
        "name": "\u5e7b\u5f71\u661f\u575a\u5f3a",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 AT2165 \u3010[AGC006D] Median Pyramid Hard\u3011"
    },
    {
        "content": "\u8003\u8651\u4f7f\u7528\u4e8c\u5206\u4f18\u5316\u9009\u6570\u8fc7\u7a0b\u3002\n\n\u8bb0 $x\\le mid$ \u4e3a 0\uff0c$x>mid$ \u4e3a 1.\n\n\u6700\u7ec8\u5f97\u5230\u7684\u6570\u5217\u5f62\u5982\n\n$$\\color{blue}01010\\color{red}11\\color{blue}0101$$\n\n\u8003\u8651\u627e\u5230\u6700\u9760\u4e2d\u95f4\u7684\u201c\u4e00\u5bf9\u201d 0 \u6216\u8005 1.\n\n\u5b83\u4eec\u7684\u5373\u662f\u6700\u540e\u5728\u9876\u4e0a\u65b9\u7684\u90a3\u4e2a\u6570\u5b57\u3002\n\n\u8003\u8651\u8bc1\u660e\u4e00\u4e0b\uff1a\n\n\u6211\u4eec\u9009\u62e9\u4e2d\u4f4d\u6570\u7684\u65f6\u5019\uff0c\u65e0\u975e\u56db\u79cd\u60c5\u51b5\uff1a\n\n- `0 0 0`\n- `0 0 1`\n- `0 1 1`\n- `1 1 1`\n\n\u800c\u8fd9\u56db\u79cd\u60c5\u51b5\u4e2d\uff0c\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u6570\u7801\u4e00\u5b9a\u88ab\u9009\u51fa\u6765\u3002\n\n\u90a3\u4e48\u8003\u8651\u76f8\u90bb\u7684\u201c\u4e00\u5bf9\u201d 0 \u6216\u8005 1\uff0c\u76f8\u5f53\u4e8e\u6295\u7968\uff0c\u6211\u7ed9\u4f60\u6295\u4e00\u7968\uff0c\u4f60\u4e5f\u7ed9\u6211\u6295\u4e00\u7968\uff0c\u54b1\u4eec\u4fe9\u624b\u7275\u7740\u624b\u5c31\u4e0a\u53bb\u4e86\u3002\n\n\u4f46\u662f\u6709\u591a\u5bf9\u76f8\u540c\u7684\u6570\u7684\u65f6\u5019\uff0c\u8fb9\u4e0a\u7684\u6570\u6709\u65f6\u5019\u88ab\u5f3a\u884c\u5408\u5e76\u4e0a\u53bb\uff0c\u4e0d\u80fd\u518d\u63a5\u7740\u5e2e\u5fd9\u6295\u7968\u3002\n\n\u6240\u4ee5\u6700\u9760\u8fd1\u4e2d\u95f4\u7684\u4f4d\u7f6e\u6700\u4f73\u4e5f\u5c31\u4e0d\u96be\u8bc1\u3002\n\n\u672c\u7bc7\u9898\u89e3\u4e3b\u8981\u662f\u628a\u4e8c\u5206\u4e4b\u540e\u68c0\u9a8c\u7684\u8fc7\u7a0b\u8bf4\u660e\u767d\u4e00\u70b9\uff0c\u4ee3\u7801\u548c\u5916\u9762\u7684\u4e8c\u5206\u53c2\u89c1\u5176\u4ed6\u5df2\u6709\u9898\u89e3\u5373\u53ef\u3002",
        "postTime": 1634734984,
        "uid": 50606,
        "name": "\u8a00\u7422\u10d3",
        "ccfLevel": 6,
        "title": "\u3010\u9898\u89e3\u3011AT2165 [AGC006D] Median Pyramid Hard"
    },
    {
        "content": "\u8fd9\u9053\u9898\u601d\u8def\u975e\u5e38\u7684\u5de7\uff0c\u8981\u4e0d\u662f\u770b\u4e86\u6807\u7b7e\u662f\u4e8c\u5206\u7b54\u6848\u53ef\u80fd\u8fd8\u771f\u60f3\u4e0d\u5230\n\n\u9996\u5148\uff0c\u7531\u4e8e\u6211\u4eec\u6c42\u5f97\u662f\u4e2d\u4f4d\u6570\uff0c\u4e2d\u4f4d\u6570\u56e0\u4e3a\u5b83\u6c42\u5f97\u662f\u6570\u503c\u5728\u4e2d\u95f4\u7684\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u5fc5\u8bb0\u5f55\u6bcf\u4e2a\u6570\u7684\u5927\u5c0f\uff0c\u53ea\u9700\u8bb0\u5f55\u5b83\u4eec\u7684**\u76f8\u5bf9\u5927\u5c0f**\u3002 \n\n\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u7b54\u6848\u5e76\u5728\u6bcf\u6b21$check$\u65f6\u5c06\u6570\u7ec4\u5904\u7406\u4e3a$01$\u4e32 \uff0c\u5c0f\u4e8e\u7b49\u4e8e\u8fd9\u4e2a\u6570\u7684\u8bbe\u4e3a$0$\uff0c\u5927\u4e8e\u7b49\u4e8e\u8fd9\u4e2a\u6570\u7684\u8bbe\u4e3a$1$\u3002\n\n\u6211\u4eec\u5728\u8003\u8651\u600e\u4e48\u5728$O$($n$)\u5185\u8fdb\u884c$check$\uff0c\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\uff0c\u5f53\u6709\u8fde\u7eed\u7684\u4e24\u4e2a$0$\u6216\u8fde\u7eed\u7684\u4e24\u4e2a$1$\u65f6**\u53ea\u8981\u5b83\u4e0d\u8d34\u7740\u8fb9\u7f18**\u5c31\u4e00\u5b9a\u80fd\u4f20\u5230\u4e0a\u9762\u53bb\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\n\n```\n    1 \n  0 1 1\n0 0 1 1 0\n```\n\u8fd9\u91cc\u7684 \u4e24\u4e2a$1$\u8fde\u7eed\u4e14\u4e0d\u6328\u7740\u8fb9\uff0c\u5c31\u6709\u4e24\u4e2a$1$\u4f20\u4e86\u4e0a\u53bb\uff0c\u4f46\u8fd9\u91cc\u8fde\u7740\u7684\u4e24\u4e2a$0$\u867d\u7136\u8fde\u7eed\uff0c\u4f46\u8d34\u7740\u8fb9\uff0c\u5c31\u53ea\u80fd\u4f20$1$\u4e2a$0$\u4e0a\u53bb\n\n\u90a3\u600e\u4e48\u4fdd\u8bc1\u6709\u4e00\u7ec4$0$\u6216$1$\u4e00\u8def\u4e0d\u78b0\u8fb9\u5230\u6700\u4e0a\u5c42\u5462\u3002\n\n\u7b54\u6848\u662f\uff1a\u6700\u9760\u8fd1\u4e2d\u95f4\u7684\u90a3\u4e00\u7ec4\u3002\n\n\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u51fa\u7ed3\u8bba\uff0c\u53ea\u8981\u6709\u4e24\u4e2a\u8fde\u7eed\u7684$1$\u6216$0$\uff0c\u5b83\u4eec\u4e14\u6700\u9760\u8fd1\u4e2d\u95f4\u90a3\u4e48\u6700\u4e0a\u9762\u7684\u6570\u4e00\u5b9a\u662f\u5b83\u3002\n\n\u4f46\u662f\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u4f1a\u4e0d\u4f1a\u6709\u4e24\u7ec4\u4e0d\u76f8\u540c\u7684$0$ $1$\u91cc\u4e2d\u95f4\u4e00\u6837\u8fdc\u3002\n\n\u7b54\u6848\u662f\uff1a\u4e0d\u53ef\u80fd\n\n\u6211\u4eec\u5047\u8bbe\u6709\u8fd9\u79cd\u60c5\u51b5\n\n\u56e0\u4e3a\u5982\u679c\u4f60\u641c\u5230\u8fd9\u91cc\u4e86\uff0c\u4e2d\u95f4\u4e00\u5b9a\u662f$01$\u4ea4\u66ff\u7684\u4e32\u7ec4\u6210\n\n\u8fd9\u662f\u5982\u679c\u6709\u4e24\u7ec4\u8fde\u7eed\u7684$0$\u6216$1$\uff0c\u91cc\u4e2d\u95f4\u4e00\u6837\u8fdc\uff0c\u90a3\u4e48\u5176\u4e2d\u4e00\u4e2a**\u4e00\u5b9a\u5728\u4e0a\u4e00\u4e2a\u4f4d\u7f6e\u5c31\u641c\u5230\u4e86**\uff0c\u6240\u4ee5\u8fd9\u79cd\u60c5\u51b5\u4e0d\u5b58\u5728\n\n\u4e3e\u4e2a\u4f8b\u5b50\n```\n0 0 1 0 1 1 1 \n0 0 0 1 0 1 1 \n```\n\u8fd9\u91cc\u7684\u6709\u4e24\u7ec4\u8fde\u7eed\u7684$0$\uff0c$1$\u79bb\u4e2d\u95f4\u4e00\u6837\u8fdc\uff0c\u4f46\u56e0\u4e3a\u4e2d\u95f4\u662f$101$\u6216$010$\n\n\u5c31\u6709\u4e00\u7ec4\u5728\u4e0a\u4e00\u4f4d\u5c31\u88ab\u641c\u5230\uff0c\u6240\u4ee5\u4e0d\u53ef\u80fd\u5b58\u5728\u3002\n\n\u6700\u540e\u56e0\u4e3a\u6709\u53ef\u80fd\u4f1a\u6709\u5168\u7a0b$01$\u4ea4\u66ff\u7684\u5b58\u5728\u6545\u9700\u8981\u7279\u5224\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint a[400005],n;\nint small(int i,int k)\n{\n\treturn a[i+1]<=k&&a[i]<=k;//\u5224\u65ad\u5c0f\u4e8e\u7b49\u4e8e \n}\nint big(int i,int k)\n{\n\treturn a[i+1]>k&&a[i]>k;//\u5224\u65ad\u5927\u4e8e\n}\nint check(int k)\n{\n\tfor(int i=0;i<=n-1;i++)//\u4ece\u4e2d\u5fc3\u5f00\u59cb\u770b\u662f\u5426\u6709\u4e24\u4e2a\u8fde\u7eed\u76841\u62160\n\t{\n\t\tif(small(n+i,k)==1||small(n-i-1,k)==1)//\u5982\u679c\u5c0f\u4e8e\u7b49\u4e8ek\u7684\u6570\u5728\u6700\u4e0a\u9762\n\t\t{\n\t\t\treturn 1;\n\t\t}\n\t\tif(big(n+i,k)==1||big(n-i-1,k)==1)\u5982\u679c\u5927\u4e8ek\u7684\u6570\u5728\u6700\u4e0a\u9762\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t}\n   //\u7279\u5224 \u5168\u662f01\u4ea4\u66ff\u7684\u60c5\u51b5 \n\tif(a[1]<=k)\n\t{\n\t\treturn 1;\n\t}else\n\t{\n\t\treturn 0;\n\t}\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=2*n-1;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tint l=1,r=2*n-1;//\u8fd9\u91ccr\u662f2*n-1\n\twhile(l<r)//\u4e8c\u5206\u7b54\u6848\n\t{\n\t\tint mid=(l+r)>>1;\n\t\tif(check(mid)==1)\n\t\t{\n\t\t\tr=mid;\n\t\t}else\n\t\t{\n\t\t\tl=mid+1;\n\t\t}\n\t}\n\tcout<<r;\n\treturn 0;\n}\n```\n",
        "postTime": 1564298704,
        "uid": 53852,
        "name": "\u5f26\u5dfb\u3053\u3053\u308d",
        "ccfLevel": 0,
        "title": "AT2165 Median Pyramid Hard"
    }
]