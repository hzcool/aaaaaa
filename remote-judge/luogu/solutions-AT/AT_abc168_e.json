[
    {
        "content": "\u8fd8\u662f\u633a\u7b80\u5355\u7684\u4e00\u9053\u9898\u3002\n\n\u9898\u76ee\u5c31\u662f\u7ed9\u5b9a\u82e5\u5e72\u4e8c\u5143\u7ec4 $(a_i,b_i)$\uff0c\u7136\u540e\u9009\u51fa\u4e00\u4e2a\u96c6\u5408\u4f7f\u5f97 $a_i \\times a_j + b_i \\times b_j=0$ \u8fd9\u6837\u7684 $i$ \u548c $j$ \u4e0d\u5b58\u5728\uff0c\u5e76\u4e14 $i \\not = j$\u3002\n\n\u5148\u5904\u7406\u67ff\u5b50 $a_i \\times a_j = - b_i \\times b_j$\uff0c\u7136\u540e\u53d8\u6210\u4e86 $\\dfrac{a_i}{b_i} = - \\dfrac{b_j}{a_j}$\uff0c\u7136\u540e\u6211\u4eec\u628a\u4e00\u4e2a\u6570\u53d8\u6210\u4e86\u4e00\u4e2a\u4e8c\u5143\u7ec4 $(\\dfrac{a_i}{b_i},-\\dfrac{b_i}{a_i})=(A_i,B_i)$\uff0c\u4e24\u4e2a\u6570\u4e0d\u80fd\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u91cc\u9762\u5f53\u4e14\u4ec5\u5f53 $A_i \\not = B_j$ \u5e76\u4e14 $A_j \\not = B_i$\uff0c\u7136\u540e\u6211\u4eec\u518d\u628a\u4e8c\u5143\u7ec4\u76f8\u540c\u7684\u6570\u5f53\u6210\u672c\u8d28\u76f8\u540c\u7684\u6570\u5b57\u3002\n\n\u7136\u540e\u4f1a\u53d1\u73b0\uff0c\u5982\u679c\u628a\u4e8c\u5143\u7ec4\u770b\u6210\u70b9\uff0c\u8fd9\u5f20\u56fe\u5bf9\u4e8e\u4e0d\u80fd\u5728\u4e00\u4e2a\u96c6\u5408\u7684\u8fde\u8fb9\uff0c\u4f1a\u4ea7\u751f\u5f88\u591a\u7684\u8fde\u901a\u5757\uff0c\u8fde\u901a\u5757\u70b9\u6570\u662f $2$ \u6216\u8005 $1$\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u70b9\u6570\u4e3a $2$ \u7684\u8fde\u901a\u5757\u5c31\u5728\u4e24\u4e2a\u70b9\u968f\u4fbf\u9009\u4e00\u4e2a\u8981\u9009\u7684\uff0c\u7136\u540e\u90a3\u4e2a\u70b9\u91cc\u9762\u6bcf\u4e2a\u70b9\u90fd\u6709\u4e24\u79cd\u51b3\u7b56\u3002\n\n\u8bbe\u7b2c\u4e00\u4e2a\u70b9\u7684\u4e2a\u6570\u662f $d$ \u4e2a\uff0c\u7136\u540e\u7b2c\u4e8c\u4e2a\u70b9\u7684\u4e2a\u6570\u662f $c$ \u4e2a\uff0c\u7136\u540e\u5c31\u53d8\u6210\u4e86 $2^{c}+2^{d}-1$\uff0c\u5177\u4f53\u7684\uff0c\u5c31\u662f\u4e24\u4e2a\u90fd\u4e0d\u9009\u7684\u60c5\u51b5\u88ab\u7b97\u4e86\u4e24\u6b21\u7136\u540e\u51cf\u53bb\u4e86\u4e00\u4e2a\u3002\n\n\u7136\u540e\u6211\u4eec\u5bf9\u4e8e\u4e00\u4e2a\u4e8c\u5143\u7ec4\u6254\u5230\u4e00\u4e2a map \u91cc\u9762\uff0c\u7136\u540e\u6211\u4eec\u628a\u8fde\u901a\u5757\u7684\u7ed9\u62ff\u51fa\u6765\uff0c\u8ba1\u7b97\u7b54\u6848\u5373\u53ef\u3002\n\n\u7136\u540e\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u7a0d\u5fae\u6709\u70b9\u5c0f\u95ee\u9898\uff0cdouble \u7c7b\u578b\u4f1a\u88ab\u5361\u7cbe\u5ea6\uff0c\u4e8e\u662f\u6211\u4eec\u5b58\u7684\u662f\u5206\u6570\uff0c\u7136\u540e\u6211\u4eec\u5f3a\u884c\u628a\u8d1f\u6570\u79fb\u5230\u7b2c\u4e00\u4e2a\uff0c\u8fd9\u4e2a\u5404\u4f4d\u5904\u7406\u7684\u65f6\u5019\u7a0d\u5fae\u6ce8\u610f\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u7136\u540e\u8fd8\u6709\u4e00\u4e2a\u5751\u70b9\u662f $(0,0)$\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u53ea\u80fd\u53d6\u8fd9\u4e2a\u6570\u4e00\u4e2a\uff0c\u7279\u5224\u4e00\u4e0b\u5373\u53ef\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long \nusing namespace std;\nconst int INF=5e5+5;\nconst int Mod=1e9+7;\nint n,X[INF],Y[INF];\nmap <int , map <int,map<int,map<int,int> > > >Map;\nint ksm(int x,int y) {\n    int ba=x%Mod,ans=1;\n    while (y) {\n        if (y&1) ans=(ans*ba)%Mod;\n        ba=(ba*ba)%Mod;y>>=1;\n    } \n    return ans;\n}\nvoid solve(int x,int y) {\n    int kkx=x,kky=y;\n    int g=__gcd(kkx,kky);\n    kkx/=g;kky/=g;\n    if (kky<0) kkx=-kkx,kky=-kky;\n\n    int kkx1=-y,kky1=x;\n    g=__gcd(kkx1,kky1);\n    kkx1/=g;kky1/=g;\n    if (kky1<0) kkx1=-kkx1,kky1=-kky1;\n\n    Map[kkx][kky][kkx1][kky1]++;\n}\nsigned main()\n{\n    // freopen(\"sub1_15.txt\",\"r\",stdin);\n    ios::sync_with_stdio(false);\n    cin>>n;int K=0,cnt=0;\n    for (int i=1;i<=n;i++) {\n        int x=0,y=0;\n        cin>>x>>y;X[i]=x;Y[i]=y;\n        if (x==0 || y==0) \n            K++;    \n        if (x==0 && y==0) cnt++,K--;\n        // long double xx=(long double)(1.0)*x/y;\n        // long double yy=-(long double)(1.0)*y/x;\n        solve(x,y);\n    }\n    int ans=1;\n    for (int i=1;i<=n;i++) {\n        int x=X[i],y=Y[i];\n        // long double xx=(long double)(1.0)*x/y;\n        // long double yy=-(long double)(1.0)*y/x ; 2333123\n        if (x==0 && y==0) continue;\n        int kkx=x,kky=y;\n        int g=__gcd(kkx,kky);\n        kkx/=g;kky/=g;\n        if (kky<0) kkx=-kkx,kky=-kky;\n\n        int kkx1=-y,kky1=x;\n        g=__gcd(kkx1,kky1);\n        kkx1/=g;kky1/=g;\n        if (kky1<0) kkx1=-kkx1,kky1=-kky1;\n\n        ans*=(ksm(2,Map[kkx][kky][kkx1][kky1])%Mod+ksm(2,Map[kkx1][kky1][kkx][kky])-1);\n        Map[kkx][kky][kkx1][kky1]=Map[kkx1][kky1][kkx][kky]=0;ans%=Mod;\n    }\n    // cout<<ans<<\" \"<<K<<\" \"<<cnt<<\" ?\\n\";\n    ans%=Mod;\n    cout<<((ans-1+cnt)%Mod+Mod)%Mod<<\"\\n\";\n    return 0;\n}\n```\n",
        "postTime": 1667549843,
        "uid": 128754,
        "name": "\u65b9123456",
        "ccfLevel": 0,
        "title": "[ABC168E] \u2219 (Bullet)"
    }
]