[
    {
        "content": "\u672c\u9898\u7684\u6570\u636e\u8303\u56f4\u4e3a$1 \\leq N \\leq 10^6$\n\n\u6240\u4ee5\u8981\u7528$O(nlogn)$\u7b97\u6cd5\n\n\u4e0d\u7136\u4f1a\u8d85\u65f6 && \u7206\u7a7a\u95f4\n\n\u7b97\u6cd5\u8bf4\u660e\uff1a\n\n\u6211\u4eec\u7528DP\u601d\u60f3\u6765\u7ef4\u62a4\u4e00\u4e2a\u6808\u3002\u5982\u679c$a[i] > a[i-1]$,\u5219\u5c06$a[i]$\u653e\u5165\u6808$s$\u4e2d\u3002\u5426\u5219\uff0c\u4e8c\u5206\u67e5\u627e$s$\u4e2d\u5927\u4e8e\u7b49\u4e8e$a[i]$\u7684\u6700\u5c0f\u7684\u6570\uff0c\u5e76\u5c06\u5b83\u66ff\u6362\u3002\n\n<algorithm>\u5e93\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4e8c\u5206\u67e5\u627e\u7684\u51fd\u6570\uff1alower_bound\n  \u7528\u5b83\u53ef\u4ee5\u5b9e\u73b0\u4e8c\u5206\u67e5\u627e\u4e00\u4e2a\u6570\u7ec4\u4e2d\u5927\u4e8e\u7b49\u4e8e$key$\u7684\u6700\u5c0f\u7684\u6570\u3002\n\n\u4e0b\u9762\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>//\u4e0d\u89e3\u91ca\u7684\u5934\u6587\u4ef6\n#include<cstring>\n#include<algorithm>\nusing namespace std;\ninline int read(){//\u795e\u5947\u7684\u8bfb\u4f18\n    int f=1,d=0;char t=getchar();\n    while(t<'0' || t>'9'){if(t=='-')f=-1;t=getchar();}\n    while(t>='0' && t<='9'){d=d*10+t-'0';t=getchar();}return f*d;\n}\nint n,a[100010];\nint s[100010],tot;//s\u4e3a\u6808\nint tmp;\nint main(){\n    n=read();\n    for(int i=1;i<=n;i++)\n        a[i]=read();\n    s[++tot]=a[1];//\u5148\u5c06a[1]\u653e\u5165\u6808\u4e2d\n    for(int i=2;i<=n;i++){\n        if(a[i]>s[tot])s[++tot]=a[i];//\u5982\u679ca[i]>a[i-1],\u5219\u5c06a[i]\u653e\u5165\u6808\u4e2d\n        else{\n            tmp=lower_bound(s+1,s+tot+1,a[i])-s;//\u4e8c\u5206\u67e5\u627es\u4e2d\u5927\u4e8e\u7b49\u4e8ea[i]\u7684\u6700\u5c0f\u7684\u6570\n            s[tmp]=a[i];//\u66ff\u6362\n        }\n    }\n    printf(\"%d\\n\",tot);//\u6700\u540e\u6808\u4e2d\u5143\u7d20\u7684\u6570\u91cf\u5373\u4e3a\u7b54\u6848\n    return 0;\n}\n```",
        "postTime": 1525867588,
        "uid": 79017,
        "name": "\u82b1\u91cc\u5fc3\u7231",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT2827 \u3010LIS\u3011"
    },
    {
        "content": "## \u9898\u76ee[AT2827 LIS](https://www.luogu.org/problemnew/show/AT2827)\n#### \u5927\u5bb6\u90fd\u7528dp\u5199\u7684\n#### \u4f46\u662f\u6211dp\u592a\u83dc\n#### \u4e8e\u662f\u5199\u4e86\u4e2a\u6811\u72b6\u6570\u7ec4\n#### ~~\u4ee3\u7801\u90fd\u5728\u6ce8\u91ca\u91cc~~ \u6ce8\u91ca\u90fd\u5728\u4ee3\u7801\u91cc\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ninline int rd(){\n\tint x=0,fl=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')fl=-fl;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n\treturn x*fl;\n}\nint n,b[100100],a[100100];\nll c[100100],f[100100];\nvoid upd(int x,ll v){\n\tfor(;x<=n;x+=x&-x)\n\t\tc[x]=max(c[x],v);                          //\u524dx\u4e2a\u6570\u4e2d\u7684\u7ef4\u62a4\u6700\u5927\u503c\n}\nll ask(int x){\n\tll cnt=0;\n\tfor(;x>=1;x-=x&-x)\n\t\tcnt=max(cnt,c[x]);\n\treturn cnt;\n}\nvoid init(){\n\tn=rd();ll ans=0;\n\tmemset(c,0,sizeof(c));\n\tfor(int i=1;i<=n;i++)b[i]=a[i]=rd();\n\tsort(b+1,b+n+1);\n\tunique(b+1,b+n+1);\n\tfor(int i=1;i<=n;i++)\n\t\ta[i]=lower_bound(b+1,b+n+1,a[i])-b;//\u79bb\u6563\u5316\uff0c\u8fd9\u9898\u597d\u50cf\u7528\u4e0d\u5230...\n}\nvoid work(){\n\tfor(int i=1;i<=n;i++){\n\t\tf[i]=ask(a[i])+1;                             //\u6bcf\u6b21\u66f4\u65b0\u6700\u5927\u503c\n\t\tupd(a[i],f[i]);\n\t}\n}\nvoid outt(){\n\tll ans=1;\n\tfor(int i=1;i<=n;i++)\n\t\tans=max(ans,f[i]);\n\tprintf(\"%lld\",ans);\n}\nint main(){\n\tinit();\n\twork();\n\toutt();\n\treturn 0;\n}\n```\n\u662f\u4e0d\u662f\u611f\u89c9\u6709\u70b9\u7384\u5b66\n\n\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2a\u8bc1\u660e ~~\u53ef\u60dcLougu\u592a\u5c0f\u6211\u5199\u4e0d\u4e0b~~\n\n\u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u6817\u5b50\uff1a\n\n\u5bf9\u4e8e 1 4 2 3 5\u8fd9\u4e2a\u5e8f\u5217\n\n\u663e\u7136\u4ed6\u7684LIS\u662f4\u4e5f\u5c31\u662f 1 2 3 5\n\n#### \u7136\u540e\u6211\u4eec\u8bbe f[i]\u8868\u793a\u4ee5a[i]\u7ed3\u5c3e\u7684LIS\n### \u6709f[i]=max{f[j]+1 | j<i&&a[i]<a[j]};(\u8fd9\u4e2a\u5199\u6210\u96c6\u5408\u7684\u5f62\u5f0f\u5e94\u8be5\u80fd\u61c2\u5427\n\n~~\u5f88\u663e\u7136~~\u53ef\u4ee5\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u4f18\u5316\n\n\u7531\u4e8e\u63d2\u5165n\u6b21\uff0c\u6bcf\u6b21\u8be2\u95ee\u4ee3\u4ef7\u662flogn\n\n\u603b\u590d\u6742\u7684\u5c31\u662fO(nlogn).\n\nemmm...\n\n\u8fd8\u6ca1\u770b\u61c2\uff1f\n\n# \u4e0a\u56fe\uff01\n\n\n#### \u9996\u5148\u6211\u4eec\u5148\u628a**1**\u653e\u5165\u6811\u72b6\u6570\u7ec4\n\n\u53d1\u73b0**1**\u524d\u5e76\u65e0\u6570\u6216\u8005\u8bf4f[0]=0;\n\n\u5219\u5c06f[1]\u8d4b\u503c\u4e3a**f[0]+1=1**\uff0c\u4e14\u6811\u72b6\u6570\u7ec4\u4e2d1\u4f4d\u7f6e\u8d4b\u503c\u4e3a1\uff1b\n![](https://s1.ax1x.com/2018/10/27/i6jgb9.png)\n\n#### \u7136\u540e\u63d2\u5165**4**\n\n\u53d1\u73b0**4**\u524dfmax=f[1]=1;\n\n\u5219\u5c06f[4]\u8d4b\u503c\u4e3a**f[1]+1=2**\uff0c\u4e14\u6811\u72b6\u6570\u7ec4\u4e2d4\u4f4d\u7f6e\u8d4b\u503c\u4e3a2\uff1b\n![](https://s1.ax1x.com/2018/10/27/i6j4C6.png)\uff1a\n\n#### \u7136\u540e\u63d2\u5165**2**\n\n\u53d1\u73b0**2**\u524dfmax=f[1]=1;\n\n\u5219\u5c06f[2]\u8d4b\u503c\u4e3a**f[1]+1=2**\uff0c\u4e14\u6811\u72b6\u6570\u7ec4\u4e2d2\u4f4d\u7f6e\u8d4b\u503c\u4e3a2\uff1b\n![](https://s1.ax1x.com/2018/10/27/i6j58K.png)\n\n#### \u7136\u540e\u63d2\u5165**3**\n\n\u53d1\u73b0**3**\u524dfmax=f[2]=2;\n\n\u5219\u5c06f[3]\u8d4b\u503c\u4e3a**f[2]+1=3**\uff0c\u4e14\u6811\u72b6\u6570\u7ec4\u4e2d3\u4f4d\u7f6e\u8d4b\u503c\u4e3a3\uff1b\n![](https://s1.ax1x.com/2018/10/27/i6jIgO.png)\n\n#### \u7136\u540e\u63d2\u5165**5**\n\n\u53d1\u73b0**5**\u524dfmax=f[3]=3;\n\n\u5219\u5c06f[5]\u8d4b\u503c\u4e3a**f[3]+1=4**\uff0c\u4e14\u6811\u72b6\u6570\u7ec4\u4e2d5\u4f4d\u7f6e\u8d4b\u503c\u4e3a4\uff1b\n\n![](https://s1.ax1x.com/2018/10/27/i6jovD.png)\n\nemmmm\n\n\u5dee\u4e0d\u591a\u4e86\u5427\n\u9644\u4e0a\u7cbe\u7b80\u7248\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nint n,x,b[100100],a[100100];\nll c[100100],f[100100];\nvoid upd(int x,ll v){\n\tfor(;x<=n;x+=x&-x)\n\t\tc[x]=max(c[x],v);\n}\nll ask(int x){\n\tll cnt=0;\n\tfor(;x>=1;x-=x&-x)\n\t\tcnt=max(cnt,c[x]);\n\treturn cnt;\n}\n\nint main(){\n\tscanf(\"%d\",&n);\n\tll ans=0;\n\tmemset(c,0,sizeof(c));\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&x);\n\t\tf[i]=ask(x)+1;\n\t\tupd(x,f[i]);\n\t}\n\t\n\tfor(int i=1;i<=n;i++)\n\t\tans=max(ans,f[i]);\n\tprintf(\"%lld\",ans);\n\t\n\treturn 0;\n}\n```",
        "postTime": 1540623622,
        "uid": 35360,
        "name": "\u661f\u7235",
        "ccfLevel": 4,
        "title": "\u6811\u72b6\u6570\u7ec4\u6c42LIS"
    },
    {
        "content": "## \u6c42\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u4e09\u79cd\u7ecf\u5178\u65b9\u6848\uff1a\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $N$ \u7684\u6570\u5217\uff0c\u6c42\u5b83\u6570\u503c\u5355\u8c03\u9012\u589e\u7684\u5b50\u5e8f\u5217\u957f\u5ea6\u6700\u5927\u4e3a\u591a\u5c11\u3002\u5373\u5df2\u77e5\u6709\u6570\u5217 $A$ \uff0c $A=\\{A_1,A_2....A_n\\}$ \uff0c\u6c42 $A$  \u7684\u4efb\u610f\u5b50\u5e8f\u5217 $B$ \uff08 $B=\\{A_{k_1},A_{k_2}....A_{k_p}\\}$ \uff09\uff0c\u4f7f $B$ \u6ee1\u8db3 $k_1<k_2<....<k_p$ \u4e14 $B=\\{A_{k_1}<A_{k_2}<....<A_{k_p}\\}$ \u3002\u6c42 $p$ \u7684\u6700\u5927\u503c\u3002 \n\n\n\n------\n\n------\n\n### $solution\\quad 1:$\n\n\u5148\u8bf4\u4e00\u79cd\u6700\u666e\u904d\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u8fd9\u9053\u9898\u5f88\u5bb9\u6613\u60f3\u5230\u4e00\u79cd\u52a8\u6001\u89c4\u5212\u3002\u6211\u4eec\u8981\u6c42\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\uff0c\u800c\u5982\u679c\u6211\u4eec\u8981\u5c06\u8fd9\u4e2a\u95ee\u9898\u5206\u9636\u6bb5\uff0c\u90a3\u4e48\u6211\u4eec\u80af\u5b9a\u8981\u77e5\u9053\u6211\u4eec\u5f53\u524d\u9636\u6bb5\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e3a\u591a\u5c11\uff0c\u8fd8\u6709\u5f53\u524d\u6211\u4eec\u7684\u5e8f\u5217\u6709\u591a\u957f\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u524d\u8005\u6765\u5145\u5f53\u7b2c\u4e00\u7ef4\u63cf\u8ff0\uff1a\u8bbe $F[i]$ \u8868\u793a\u4ee5 $A[i]$ \u4e3a\u7ed3\u5c3e\u7684\u6700\u957f\u4e0a\u8eab\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u800c\u6211\u4eec\u80af\u5b9a\u53ea\u80fd\u4ece $i$ \u524d\u9762\u7684\u4e14\u672b\u5c3e\u5143\u7d20\u6bd4 $A[i]$ \u5c0f\u7684\u72b6\u6001\u8f6c\u79fb\u8fc7\u6765\uff1a\n\n### $F[i]=^{max}_{0\\leq j<i,A[j]<a[i]}\\{F[j]+1\\}$\n\n\u521d\u59cb\u503c\u4e3a $F[0]=0$ \uff0c\u800c\u7b54\u6848\u53ef\u4ee5\u662f\u4efb\u4f55\u9636\u6bb5\u4e2d\u53ea\u8981\u957f\u5ea6\u6700\u957f\u7684\u90a3\u4e00\u4e2a\uff0c\u6240\u4ee5\u6211\u4eec\u8fb9\u8f6c\u79fb\u8fb9\u7edf\u8ba1\u7b54\u6848\u3002 \n\n\u590d\u6742\u5ea6\uff1a $O(n^2)$ \n\n### $code\\quad 1:$\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#define ll long long\n#define rg register int\nusing namespace std;\n\nint n,ans;\nint a[10005];\nint f[10005];\n\nint main(){ cin>>n;\n\tfor(rg i=1;i<=n;++i) cin>>a[i];\n\tfor(rg i=1;i<=n;++i){\n\t\tfor(rg j=1;j<i;++j)\n\t\t\tif(a[j]<a[i])f[i]=max(f[i],f[j]);\n\t\t++f[i]; ans=max(ans,f[i]);\n\t}cout<<ans<<endl;\n\treturn 0;\n}\n```\n\n\n\n------\n\n\n\n### $solution\\quad 2:$\n\n\u7136\u540e\u6211\u4eec\u5148\u5bf9\u4e0a\u4e00\u79cd\u65b9\u6cd5\u8fdb\u884c\u4f18\u5316\uff0c\u6211\u4eec\u5c06\u8f6c\u79fb\u65b9\u7a0b\u5217\u4e00\u4e0b\uff1a\n\n### $F[i]=^{max}_{0\\leq j<i,A[j]<a[i]}\\{F[j]+1\\}$\n\n\u6211\u4eec\u53d1\u73b0\u5927\u62ec\u53f7\u4e2d\u76841\u4e0e $j$ \u4f3c\u4e4e\u6ca1\u6709\u534a\u6bdb\u94b1\u5173\u7cfb\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u5b83\u63d0\u53d6\u51fa\u6765\uff1a\n\n### $F[i]=^{max}_{0\\leq j<i,A[j]<a[i]}\\{F[j]\\}+1$\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u53ea\u9700\u8981\u5c06\u6bd4 $i$ \u5c0f\u7684\u6240\u6709\u7684\u7b26\u5408 $A[j]<A[i]$ \u7684 $F[j]$ \u7684\u6700\u5927\u503c\u6c42\u51fa\u6765\uff0c\u4f46\u662f\u8fd9\u4e2a\u6761\u4ef6 $A[j]<A[i]$ \u5b9e\u5728\u662f\u592a\u9ebb\u70e6\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u6362\u4e00\u79cd\u65b9\u6cd5\uff1a\u6211\u4eec\u5c06 $A$ \u6570\u7ec4\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u5148\u8bb0\u4e0b\u4ed6\u73b0\u5728\u7684\u6807\u53f7\uff0c\u7136\u540e\u6309\u7167\u6743\u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u63a5\u7740\u6211\u4eec\u6309\u4ece\u5927\u5230\u5c0f\u7684\u987a\u5e8f\u679a\u4e3e $A$ \u6570\u7ec4\uff0c\u8fd9\u65f6\u6211\u4eec\u9700\u8981\u4ece\u4e4b\u524d\u7684\u6807\u53f7\u6bd4\u5b83\u5c0f\u7684\u72b6\u6001\u8f6c\u79fb\u8fc7\u6765\uff0c\u8fd9\u4e2a\u6211\u4eec\u53ea\u9700\u8981\u5efa\u7acb\u4e00\u4e2a\u4e0e\u7f16\u53f7\u4e3a\u4e0b\u6807\u7ef4\u62a4\u957f\u5ea6\u7684\u6700\u5927\u503c\u7684\u6811\u6869\u6570\u7ec4\u5373\u53ef\uff0c\u679a\u4e3e $A$ \u6570\u7ec4\u65f6\u6309\u5143\u7d20\u7684\u5e8f\u53f7\u627e\u5230\u5b83\u4e4b\u524d\u5e8f\u53f7\u6bd4\u4ed6\u5c0f\u7684\u957f\u5ea6\u6700\u5927\u7684\u72b6\u6001\u66f4\u65b0\uff0c\u7136\u540e\u5c06\u5b83\u4e5f\u52a0\u5165\u6811\u72b6\u6570\u7ec4\u4e2d\u3002 \u590d\u6742\u5ea6\uff1a $O(nlog(n))$ \n\n### $code\\quad 2:$\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#define ll long long\n#define rg register int\nusing namespace std;\n\nint n;\nint s[200005];\n\nstruct su{\n    int v,id;\n    inline bool operator <(su x){return v<x.v;}\n}a[200005];\n\ninline void add(int x,int y){\n    for(;x<=n;x+=x&-x) s[x]=max(s[x],y);\n}\n\ninline int ask(int x){\n    rg res=0;\n    for(;x>=1;x-=x&-x) res=max(s[x],res);\n    return res;\n}\n\nint main(){\n    cin>>n;\n    for(rg i=1;i<=n;++i)\n        cin>>a[i].v,a[i].id=i;\n    sort(a+1,a+n+1);\n    for(rg i=1;i<=n;++i)\n        if(i==1||a[i].v!=a[i-1].v)// \u8fd9\u4e00\u6b65\u662f\u53bb\u91cd\uff0c\u5982\u679c\u6ca1\u6709\u8fd9\u4e2aif\u5c31\u662f\u6c42\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\uff01\n            add(a[i].id,ask(a[i].id)+1);\n    cout<<ask(n)<<endl; \n    return 0;\n}\n\n```\n\n\n\n------\n\n\n\n### $solution\\quad 3:$\n\n\u8fd9\u662f\u6700\u5feb\u7684\u65b9\u6cd5\uff1a\u8d2a\u5fc3\u52a0\u4e8c\u5206\u67e5\u627e\n\n\u6211\u4eec\u4e4b\u524d\u8bf4\u8fc7\uff1a\u6211\u4eec\u80af\u5b9a\u8981\u77e5\u9053\u6211\u4eec\u5f53\u524d\u9636\u6bb5\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e3a\u591a\u5c11\uff0c\u8fd8\u6709\u5f53\u524d\u6211\u4eec\u7684\u5e8f\u5217\u6709\u591a\u957f\u3002\u524d\u4e24\u79cd\u65b9\u6cd5\u90fd\u662f\u7528\u524d\u8005\u505a\u72b6\u6001\uff0c\u6211\u4eec\u4e3a\u4ec0\u4e48\u4e0d\u53ef\u4ee5\u7528\u540e\u505a\u72b6\u6001\u5462\uff1f\uff1a\u8bbe $F[i]$ \u8868\u793a\u957f\u5ea6\u4e3a $i$ \u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u672b\u5c3e\u5143\u7d20\u7684\u6700\u5c0f\u503c\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u6570\u7ec4\u7684\u6743\u503c\u4e00\u5b9a\u5355\u8c03\u4e0d\u964d\uff08\u4ed4\u7ec6\u60f3\u4e00\u60f3\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u8d2a\u5fc3\u7684\u6765\u7531\uff09\u3002\u4e8e\u662f\u6211\u4eec\u6309\u987a\u5e8f\u679a\u4e3e\u6570\u7ec4 $ A$ \uff0c\u6bcf\u4e00\u6b21\u5bf9 $F[]$ \u6570\u7ec4\u4e8c\u5206\u67e5\u627e\uff0c\u627e\u5230\u5c0f\u4e8e $A[i]$ \u7684\u6700\u5927\u7684 $F[j] $ \uff0c\u5e76\u7528\u5b83\u5c06 $F[j+1]$\u66f4\u65b0\u3002    \n\n\u590d\u6742\u5ea6\uff1a $O(nlogn)$ \n\n### $code\\quad 3:$\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#define ll long long\n#define rg register int\nusing namespace std;\n\nint n;\nint a[200005];\nint f[200005];\n\nint main(){\n\tcin>>n;\n\tfor(rg i=1;i<=n;++i) cin>>a[i];\n\trg ans=1; f[1]=a[1];\n\tfor(rg i=2;i<=n;++i){\n\t\trg l=1,r=ans,mid;\n\t\twhile(l<=r){\n\t\t\tmid=(l+r)>>1;\n\t\t\tif(a[i]<=f[mid])r=mid-1;\n\t\t\telse l=mid+1;\n\t\t}f[l]=a[i];\n\t\tif(l>ans)++ans;\n\t}cout<<ans<<endl;\n\treturn 0;\n}\n```\n\n\n\n------\n\n",
        "postTime": 1560044917,
        "uid": 111334,
        "name": "\u706f\u82af\u7cd5",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT2827 \u3010LIS\u3011"
    },
    {
        "content": "hello\uff0c\u5927\u5bb6\u597d\n~~\uff0c\u6211\u662f\u5e93\u91cc\u7684\u7403\u8ff7~~\n\nEmm..\u522b\u95f9\u4e86\uff0c\u5f00\u59cb\u8bf4\u6b63\u9898\u5427\n\n\u5217\u4f4d\u770b\u5b98\u7559\u610f\uff0cLIS\uff08Longest  Increasing Subsequence\uff0c\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\uff09\u662fdp\uff08\u4e5f\u5c31\u662f\u52a8\u6001\u89c4\u5212\uff09\u7b97\u6cd5\u7684\u975e\u5e38\u7ecf\u5178\u4e5f\u975e\u5e38\u5e38\u89c1\uff0c\u5e38\u8003\u7684\u5e94\u7528\u3002\n\n\u4e0b\u9762\u6211\u4eec\u6765\u4e86\u89e3\u4e00\u4e0bLIS\uff1a\n> \u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\uff08Longest\u00a0 Increasing Subsequence\uff09\uff0c\u7b80\u79f0LIS\uff0c\u4e5f\u6709\u4e9b\u60c5\u51b5\u6c42\u7684\u662f\u6700\u957f\u975e\u964d\u5e8f\u5b50\u5e8f\u5217\uff0c\u4e8c\u8005\u533a\u522b\u5c31\u662f\u5e8f\u5217\u4e2d\u662f\u5426\u53ef\u4ee5\u6709\u76f8\u7b49\u7684\u6570\u3002\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u5e8f\u5217 b i\uff0c\u5f53b1 < b2 < \u2026 < bS\u7684\u65f6\u5019\uff0c\u6211\u4eec\u79f0\u8fd9\u4e2a\u5e8f\u5217\u662f\u4e0a\u5347\u7684\u3002\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u4e00\u4e2a\u5e8f\u5217(a1, a2, \u2026, aN)\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4ece\u4e2d\u5f97\u5230\u4e00\u4e9b\u4e0a\u5347\u7684\u5b50\u5e8f\u5217(ai1, ai2, \u2026, aiK)\uff0c\u8fd9\u91cc1 <= i1 < i2 < \u2026 < iK <= N\uff0c\u4f46\u5fc5\u987b\u6309\u7167\u4ece\u524d\u5230\u540e\u7684\u987a\u5e8f\u3002\u6bd4\u5982\uff0c\u5bf9\u4e8e\u5e8f\u5217(1, 7, 3, 5, 9, 4, 8)\uff0c\u6211\u4eec\u5c31\u4f1a\u5f97\u5230\u4e00\u4e9b\u4e0a\u5347\u7684\u5b50\u5e8f\u5217\uff0c\u5982(1, 7, 9), (3, 4, 8), (1, 3, 5, 8)\u7b49\u7b49\uff0c\u800c\u8fd9\u4e9b\u5b50\u5e8f\u5217\u4e2d\u6700\u957f\u7684\uff08\u5982\u5b50\u5e8f\u5217(1, 3, 5, 8) \uff09\uff0c\u5b83\u7684\u957f\u5ea6\u4e3a4\uff0c\u56e0\u6b64\u8be5\u5e8f\u5217\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6\u4e3a4\u3002\n\n\u989d\uff0c\u771f\u62bd\u8c61\uff0c\u6211\u7ed9\u4f60\u4eec\u89e3\u91ca\u4e00\u4e0b\n\n\u9996\u5148\u9700\u8981\u77e5\u9053\uff0c**\u5b50\u4e32**\u548c**\u5b50\u5e8f\u5217**\u7684\u6982\u5ff5\uff0c\u6211\u4eec\u4ee5\u5b57\u7b26\u5b50\u4e32\u548c\u5b57\u7b26\u5b50\u5e8f\u5217\u4e3a\u4f8b\uff0c\u66f4\u4e3a\u5f62\u8c61\uff0c\u4e5f\u80fd\u987a\u5e26\u7740\u7406\u89e3\u5b57\u7b26\u7684\u5b50\u4e32\u548c\u5b50\u5e8f\u5217\uff1a\n\n1. \u5b57\u7b26\u5b50\u4e32\u6307\u7684\u662f\u5b57\u7b26\u4e32\u4e2d\u8fde\u7eed\u7684n\u4e2a\u5b57\u7b26\uff0c\u5982abcdefg\u4e2d\uff0cab\uff0ccde\uff0cfg\u7b49\u90fd\u5c5e\u4e8e\u5b83\u7684\u5b57\u4e32\u3002\n1. \u5b57\u7b26\u5b50\u5e8f\u5217\u6307\u7684\u662f\u5b57\u7b26\u4e32\u4e2d\u4e0d\u4e00\u5b9a\u8fde\u7eed\u4f46\u5148\u540e\u987a\u5e8f\u4e00\u81f4\u7684n\u4e2a\u5b57\u7b26\uff0c\u5373\u53ef\u4ee5\u53bb\u6389\u5b57\u7b26\u4e32\u4e2d\u7684\u90e8\u5206\u5b57\u7b26\uff0c\u4f46\u4e0d\u53ef\u6539\u53d8\u5176\u524d\u540e\u987a\u5e8f\u3002\u5982abcdefg\u4e2d\uff0cacdg\uff0cbdf\u5c5e\u4e8e\u5b83\u7684\u5b50\u5e8f\u5217\uff0c\u800cbac\uff0cdbfg\u5219\u4e0d\u662f\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0e\u5b57\u7b26\u4e32\u7684\u5b57\u7b26\u987a\u5e8f\u4e0d\u4e00\u81f4\u3002\n\n\u77e5\u9053\u4e86\u8fd9\u4e2a\uff0c\u6570\u503c\u7684\u5b50\u5e8f\u5217\u5c31\u5f88\u597d\u660e\u767d\u4e86\uff0c\u5373\u7528\u6570\u7ec4\u6210\u7684\u5b50\u5e8f\u5217\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u4e5f\u5f88\u5bb9\u6613\u660e\u767d\u4e86\uff0c\u5f52\u6839\u7ed3\u5e95\u8fd8\u662f\u5b50\u5e8f\u5217\uff0c\u7136\u540e\u5b50\u5e8f\u5217\u4e2d\uff0c\u6309\u7167\u4e0a\u5347\u987a\u5e8f\u6392\u5217\u7684\u6700\u957f\u7684\u5c31\u662f\u6211\u4eec\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u4e86\uff0c\u8fd9\u6837\u542c\u6765\u662f\u4e0d\u662f\u5c31\u5f88\u5bb9\u6613\u660e\u767d\u5566\uff5e\n\n\u00a0\u8fd8\u6709\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u95ee\u9898\uff1a\u8bf7\u5927\u5bb6\u7528\u96c6\u5408\u7684\u89c2\u70b9\u6765\u7406\u89e3\u8fd9\u4e9b\u6982\u5ff5\uff0c\u5b50\u5e8f\u5217\u3001\u516c\u5171\u5b50\u5e8f\u5217\u4ee5\u53ca\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\u90fd\u4e0d\u552f\u4e00\uff0c\u4f46\u5f88\u663e\u7136\uff0c\u5bf9\u4e8e\u56fa\u5b9a\u7684\u6570\u7ec4\uff0c\u867d\u7136LIS\u5e8f\u5217\u4e0d\u4e00\u5b9a\u552f\u4e00\uff0c\u4f46LIS\u7684\u957f\u5ea6\u662f\u552f\u4e00\u7684\u3002\u518d\u62ff\u6211\u4eec\u521a\u521a\u4e3e\u7684\u6817\u5b50\u6765\u8bb2\uff0c\u7ed9\u51fa\u5e8f\u5217 ( 1, 7, 3, 5, 9, 4, 8)\uff0c\u6613\u5f97\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6\u4e3a4,\u8fd9\u662f\u786e\u5b9a\u7684\uff0c\u4f46\u5e8f\u5217\u53ef\u4ee5\u4e3a ( 1, 3, 5, 8 ), \u4e5f\u53ef\u4ee5\u4e3a ( 1, 3, 5, 9 )\u3002\n \n> \u8bf4\u4e86\u534a\u5929\uff0c\u5230\u5e95\u5e94\u8be5\u600e\u4e48\u6c42LIS\u7684\u957f\u5ea6\u5462\uff1f\n \n\u8fd9\u91cc\u8be6\u7ec6\u4ecb\u7ecd\u4e00\u4e0b\u6c42LIS\u7684\u4e09\u79cd\u65b9\u6cd5\uff0c\u5206\u522b\u662fO(n^2)\u7684DP\uff0cO(nlogn)\u7684\u4e8c\u5206+\u8d2a\u5fc3\u6cd5\uff0c\u4ee5\u53caO(nlogn)\u7684\u6811\u72b6\u6570\u7ec4\u4f18\u5316\u7684DP\u3002\n\n\u4e00\u3001\u7b97\u6cd5\u4e00\u3010\u52a8\u6001\u89c4\u5212\u3011\n\n\u6211\u4eec\u90fd\u77e5\u9053\uff0c\u52a8\u6001\u89c4\u5212\u7684\u4e00\u4e2a\u7279\u70b9\u5c31\u662f\u5f53\u524d\u89e3\u53ef\u4ee5\u7531\u4e0a\u4e00\u4e2a\u9636\u6bb5\u7684\u89e3\u63a8\u51fa\uff0c \u7531\u6b64\uff0c\u628a\u6211\u4eec\u8981\u6c42\u7684\u95ee\u9898\u7b80\u5316\u6210\u4e00\u4e2a\u66f4\u5c0f\u7684\u5b50\u95ee\u9898\u3002\u5b50\u95ee\u9898\u5177\u6709\u76f8\u540c\u7684\u6c42\u89e3\u65b9\u5f0f\uff0c\u53ea\u4e0d\u8fc7\u662f\u89c4\u6a21\u5c0f\u4e86\u800c\u5df2\u3002\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u5c31\u7b26\u5408\u8fd9\u4e00\u7279\u6027\u3002\u6211\u4eec\u8981\u6c42n\u4e2a\u6570\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\uff0c\u53ef\u4ee5\u6c42\u524dn-1\u4e2a\u6570\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\uff0c\u518d\u8ddf\u7b2cn\u4e2a\u6570\u8fdb\u884c\u5224\u65ad\u3002\u6c42\u524dn-1\u4e2a\u6570\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\uff0c\u53ef\u4ee5\u901a\u8fc7\u6c42\u524dn-2\u4e2a\u6570\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u2026\u2026\u76f4\u5230\u6c42\u524d1\u4e2a\u6570\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\uff0c\u6b64\u65f6LIS\u5f53\u7136\u4e3a1\u3002\n\n\u8ba9\u6211\u4eec\u4e3e\u4e2a\u4f8b\u5b50\uff1a\u6c42 2 7 1 5 6 4 3 8 9 \u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u3002\u6211\u4eec\u5b9a\u4e49d(i) (i\u2208[1,n])\u6765\u8868\u793a\u524di\u4e2a\u6570\u4ee5A[i]\u7ed3\u5c3e\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6\u3002\n\n- \u524d1\u4e2a\u6570 d(1)=1 \u5b50\u5e8f\u5217\u4e3a2\uff1b\n\n- \u524d2\u4e2a\u6570 7\u524d\u9762\u67092\u5c0f\u4e8e7 d(2)=d(1)+1=2 \u5b50\u5e8f\u5217\u4e3a2 7\n- \u524d3\u4e2a\u6570 \u57281\u524d\u9762\u6ca1\u6709\u6bd41\u66f4\u5c0f\u7684\uff0c1\u81ea\u8eab\u7ec4\u6210\u957f\u5ea6\u4e3a1\u7684\u5b50\u5e8f\u5217 d(3)=1 \u5b50\u5e8f\u5217\u4e3a1\n- \u524d4\u4e2a\u6570 5\u524d\u9762\u67092\u5c0f\u4e8e5 d(4)=d(1)+1=2 \u5b50\u5e8f\u5217\u4e3a2 5\n\n- \u524d5\u4e2a\u6570 6\u524d\u9762\u67092 5\u5c0f\u4e8e6 d(5)=d(4)+1=3 \u5b50\u5e8f\u5217\u4e3a2 5 6\n\n- \u524d6\u4e2a\u6570 4\u524d\u9762\u67092\u5c0f\u4e8e4 d(6)=d(1)+1=2 \u5b50\u5e8f\u5217\u4e3a2 4\n\n- \u524d7\u4e2a\u6570 3\u524d\u9762\u67092\u5c0f\u4e8e3 d(3)=d(1)+1=2 \u5b50\u5e8f\u5217\u4e3a2 3\n\n- \u524d8\u4e2a\u6570 8\u524d\u9762\u67092 5 6\u5c0f\u4e8e8 d(8)=d(5)+1=4 \u5b50\u5e8f\u5217\u4e3a2 5 6 8\n\n- \u524d9\u4e2a\u6570 9\u524d\u9762\u67092 5 6 8\u5c0f\u4e8e9 d(9)=d(8)+1=5 \u5b50\u5e8f\u5217\u4e3a2 5 6 8 9\n\n> d(i)=max{d(1),d(2),\u2026\u2026,d(i)}\n\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\u8fd99\u4e2a\u6570\u7684LIS\u4e3ad(9)=5\n\n\u603b\u7ed3\u4e00\u4e0b\uff0cd(i)\u5c31\u662f\u627e\u4ee5A[i]\u7ed3\u5c3e\u7684\uff0c\u5728A[i]\u4e4b\u524d\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217+1\uff0c\u5f53A[i]\u4e4b\u524d\u6ca1\u6709\u6bd4A[i]\u66f4\u5c0f\u7684\u6570\u65f6\uff0cd(i)=1\u3002\u6240\u6709\u7684d(i)\u91cc\u9762\u6700\u5927**\u7684\u90a3\u4e2a\u5c31\u662f\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u3002\u5176\u5b9e\u8bf4\u7684\u901a\u4fd7\u70b9\uff0c\u5c31\u662f\u6bcf\u6b21\u90fd\u5411\u524d\u627e\u6bd4\u5b83\u5c0f\u7684\u6570\u548c\u6bd4\u5b83\u5927\u7684\u6570\u7684\u4f4d\u7f6e\uff0c\u5c06\u7b2c\u4e00\u4e2a\u6bd4\u5b83\u5927\u7684\u66ff\u6362\u6389\uff0c\u8fd9\u6837\u64cd\u4f5c\u867d\u7136LIS\u5e8f\u5217\u7684\u5177\u4f53\u6570\u5b57\u53ef\u80fd\u4f1a\u53d8\uff0c\u4f46\u662f\u5f88\u660e\u663eLIS\u957f\u5ea6\u8fd8\u662f\u4e0d\u53d8\u7684**\uff0c\u56e0\u4e3a\u53ea\u662f\u628a\u6570\u66ff\u6362\u6389\u4e86\uff0c\u5e76\u6ca1\u6709\u6539\u53d8\u589e\u52a0\u6216\u8005\u51cf\u5c11\u957f\u5ea6\u3002\u4f46\u662f\u6211\u4eec\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u662f\u65e0\u6cd5\u6c42\u51fa\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u5177\u4f53\u662f\u4ec0\u4e48\u7684\uff0c\u8fd9\u70b9\u548c\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\u4e0d\u540c\u3002\n\n\u660e\u767d\u4e86\uff1f\u5c1d\u8bd5\u7a0b\u5e8f\u8868\u8fbe\u4e00\u4e0b\u5427\uff0c\u8981\u6ce8\u610f\u521d\u59cb\u5316\u3002\n> \u601d\u8003\u5b8c\u540e\u518d\u770b\u5466\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n,ans;\nint a[200010],dp[200010]={1}; //\u521d\u59cb\u5316\nint main() {\n\tcin>>n;\n\tfor(int i=1; i<=n; i++) cin>>a[i];\n\tfor(int i=1; i<=n; i++) {\n\t\tdp[i]=1;\n\t\tfor(int j=1; j<i; j++)\n\t\t\tif(a[i]>a[j] && dp[i]<dp[j]+1)  //\u5224\u65ad\n\t\t\t\tdp[i]=dp[j]+1;\n\t\tans=max(ans,dp[i]);\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```\nO(n^2),\u592a\u5927\uff0c100000\u6570\u636e\u6709\u70b9\u5403\u529b\u3002\u3002\u3002\n\n\u4e8c\u3001\u3010\u7b97\u6cd5\u4e8c\u3011 \u8d2a\u5fc3+\u4e8c\u5206\n\n\u65b0\u5efa\u4e00\u4e2a low \u6570\u7ec4\uff0clow [ i ]\u8868\u793a\u957f\u5ea6\u4e3ai\u7684LIS\u7ed3\u5c3e\u5143\u7d20\u7684\u6700\u5c0f\u503c\u3002**\u5bf9\u4e8e\u4e00\u4e2a\u4e0a\u5347\u5b50\u5e8f\u5217\uff0c\u663e\u7136\u5176\u7ed3\u5c3e\u5143\u7d20\u8d8a\u5c0f\uff0c\u8d8a\u6709\u5229\u4e8e\u5728\u540e\u9762\u63a5\u5176\u4ed6\u7684\u5143\u7d20\uff0c\u4e5f\u5c31\u8d8a\u53ef\u80fd\u53d8\u5f97\u66f4\u957f\u3002** \u56e0\u6b64\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4 low \u6570\u7ec4\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2aa[ i ]\uff0c\u5982\u679ca[ i ]\u00a0> low [\u5f53\u524d\u6700\u957f\u7684LIS\u957f\u5ea6]\uff0c\u5c31\u628a a [ i ]\u63a5\u5230\u5f53\u524d\u6700\u957f\u7684LIS\u540e\u9762\uff0c\u5373low [++\u5f53\u524d\u6700\u957f\u7684LIS\u957f\u5ea6] = a [ i ]\u3002\u00a0\n\n\u90a3\u4e48\uff0c\u600e\u4e48\u7ef4\u62a4 low \u6570\u7ec4\u5462\uff1f\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2aa [ i ]\uff0c\u5982\u679ca [ i ]\u80fd\u63a5\u5230 LIS \u540e\u9762\uff0c\u5c31\u63a5\u4e0a\u53bb\uff1b\u5426\u5219\uff0c\u5c31\u7528 a [ i ] \u53d6\u66f4\u65b0 low \u6570\u7ec4\u3002\u5177\u4f53\u65b9\u6cd5\u662f\uff0c\u5728low\u6570\u7ec4\u4e2d\u627e\u5230\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8ea [ i ]\u7684\u5143\u7d20low [ j ]\uff0c\u7528a [ i ]\u53bb\u66f4\u65b0 low [ j ]\u3002\u5982\u679c\u4ece\u5934\u5230\u5c3e\u626b\u4e00\u904d low \u6570\u7ec4\u7684\u8bdd\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4ecd\u662fO(n^2)\u3002\u6211\u4eec\u6ce8\u610f\u5230 low \u6570\u7ec4\u5185\u90e8\u4e00\u5b9a\u662f\u5355\u8c03\u4e0d\u964d\u7684\uff0c\u6240\u6709\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206 low \u6570\u7ec4\uff0c\u627e\u51fa\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8ea[ i ]\u7684\u5143\u7d20\u3002\u4e8c\u5206\u4e00\u6b21 low \u6570\u7ec4\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u7684O(lgn)\uff0c\u6240\u4ee5\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(nlogn)\u3002\n\n> \u6211\u4eec\u518d\u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff1a\u6709\u4ee5\u4e0b\u5e8f\u5217A[ ] = 3 1 2 6 4 5 10 7\uff0c\u6c42LIS\u957f\u5ea6\u3002\n\n\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2aB[ i ]\u6765\u50a8\u5b58\u53ef\u80fd\u7684\u6392\u5e8f\u5e8f\u5217\uff0clen \u4e3aLIS\u957f\u5ea6\u3002\u6211\u4eec\u4f9d\u6b21\u628aA[ i ]\u6709\u5e8f\u5730\u653e\u8fdbB[ i ]\u91cc\u3002\n\n\uff08\u4e3a\u4e86\u65b9\u4fbf\uff0ci\u7684\u8303\u56f4\u5c31\u4ece1~n\u8868\u793a\u7b2ci\u4e2a\u6570\uff09\n\n- A[1] = 3\uff0c\u628a3\u653e\u8fdbB[1]\uff0c\u6b64\u65f6B[1] = 3\uff0c\u6b64\u65f6len = 1\uff0c\u6700\u5c0f\u672b\u5c3e\u662f3\n\n- A[2] = 1\uff0c\u56e0\u4e3a1\u6bd43\u5c0f\uff0c\u6240\u4ee5\u53ef\u4ee5\u628aB[1]\u4e2d\u76843\u66ff\u6362\u4e3a1\uff0c\u6b64\u65f6B[1] = 1\uff0c\u6b64\u65f6len = 1\uff0c\u6700\u5c0f\u672b\u5c3e\u662f1\n\n- A[3] = 2\uff0c2\u5927\u4e8e1\uff0c\u5c31\u628a2\u653e\u8fdbB[2] = 2\uff0c\u6b64\u65f6B[ ]={1,2}\uff0clen = 2\n\n- A[4]=6\uff0c\u628a6\u653e\u8fdbB[3] = 6\uff0cB[ ]={1,2,6}\uff0clen = 3\n\n- A[5]=4\uff0c4\u57282\u548c6\u4e4b\u95f4\uff0c\u6bd46\u5c0f\uff0c\u53ef\u4ee5\u628aB[3]\u66ff\u6362\u4e3a4\uff0cB[ ] = {1,2,4}\uff0clen = 3\n\n- A[6] = 5\uff0cB[4] = 5\uff0cB[ ] = {1,2,4,5}\uff0clen = 4\u00a0\n\n- A[7] = 10\uff0cB[5] = 10\uff0cB[ ] = {1,2,4,5,10}\uff0clen = 5\n\n- A[8] = 7\uff0c7\u57285\u548c10\u4e4b\u95f4\uff0c\u6bd410\u5c0f\uff0c\u53ef\u4ee5\u628aB[5]\u66ff\u6362\u4e3a7\uff0cB[ ] = {1,2,4,5,7}\uff0clen = 5\n\n\u6700\u7ec8\u6211\u4eec\u5f97\u51faLIS\u957f\u5ea6\u4e3a5\uff0c**\u4f46\u662f\uff0c\u4f46\u662f\uff01\uff01\uff01B[ ] \u4e2d\u7684\u5e8f\u5217\u5e76\u4e0d\u4e00\u5b9a\u662f\u6b63\u786e\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u3002** \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5f97\u5230\u76841 2 4 5 7 \u6070\u597d\u662f\u6b63\u786e\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\uff0c\u4e0b\u9762\u6211\u4eec\u518d\u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff1a\n> \u6709\u4ee5\u4e0b\u5e8f\u5217A[ ] = 1 4 7 2 5 9 10 3\uff0c\u6c42LIS\u957f\u5ea6\u3002\n\n- A[1] = 1\uff0c\u628a1\u653e\u8fdbB[1]\uff0c\u6b64\u65f6B[1] = 1\uff0cB[ ] = {1}\uff0clen = 1\n\n- A[2] = 4\uff0c\u628a4\u653e\u8fdbB[2]\uff0c\u6b64\u65f6B[2] = 4\uff0cB[ ] = {1,4}\uff0clen = 2\n\n- A[3] = 7\uff0c\u628a7\u653e\u8fdbB[3]\uff0c\u6b64\u65f6B[3] = 7\uff0cB[ ] = {1,4,7}\uff0clen = 3\n\n- A[4] = 2\uff0c\u56e0\u4e3a2\u6bd44\u5c0f\uff0c\u6240\u4ee5\u628aB[2]\u4e2d\u76844\u66ff\u6362\u4e3a2\uff0c\u6b64\u65f6B[ ] = {1,2,7}\uff0clen = 3\n\n- A[5] = 5\uff0c\u56e0\u4e3a5\u6bd47\u5c0f\uff0c\u6240\u4ee5\u628aB[3]\u4e2d\u76847\u66ff\u6362\u4e3a5\uff0c\u6b64\u65f6B[ ] = {1,2,5}\uff0clen = 3\n\n- A[6] = 9\uff0c\u628a9\u653e\u8fdbB[4]\uff0c\u6b64\u65f6B[4] = 9\uff0cB[ ] = {1,2,5,9}\uff0clen = 4\n\n- A[7] = 10\uff0c\u628a10\u653e\u8fdbB[5]\uff0c\u6b64\u65f6B[5] = 10\uff0cB[ ] = {1,2,5,9,10}\uff0clen = 5\n\n- A[8] = 3\uff0c\u56e0\u4e3a3\u6bd45\u5c0f\uff0c\u6240\u4ee5\u628aB[3]\u4e2d\u76845\u66ff\u6362\u4e3a3\uff0c\u6b64\u65f6B[ ] = {1,2,3,9,10}\uff0clen = 5\n\n\u6700\u7ec8\u6211\u4eec\u5f97\u51faLIS\u957f\u5ea6\u4e3a5\u3002\u4f46\u662f\uff0c\u4f46\u662f\uff01\uff01\u8fd9\u91cc\u76841 2 3 9 10\u5f88\u660e\u663e\u5e76\u4e0d\u662f\u6b63\u786e\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u3002\u56e0\u6b64\uff0cB\u5e8f\u5217\u5e76\u4e0d\u4e00\u5b9a\u8868\u793a\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\uff0c\u5b83\u53ea\u8868\u793a\u76f8\u5e94\u6700\u957f\u5b50\u5e8f\u5217\u957f\u5ea6\u7684\u6392\u597d\u5e8f\u7684\u6700\u5c0f\u5e8f\u5217\u3002\u8fd9\u6709\u4ec0\u4e48\u7528\u5462\uff1f\u6211\u4eec\u6700\u540e\u4e00\u6b653\u66ff\u63625\u5e76\u6ca1\u6709\u589e\u52a0\u6700\u957f\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u800c\u8fd9\u4e00\u6b65\u7684\u610f\u4e49\uff0c\u5728\u4e8e\u8bb0\u5f55\u6700\u5c0f\u5e8f\u5217\uff0c\u4ee3\u8868\u4e86\u4e00\u79cd\u201c\u6700\u53ef\u80fd\u6027\u201d\uff0c\u53ea\u662f\u6b64\u79cd\u7b97\u6cd5\u4e3a\u8ba1\u7b97LIS\u800c\u8fdb\u884c\u7684\u4e00\u79cd\u66ff\u6362\u3002\u5047\u5982\u540e\u9762\u8fd8\u6709\u4e24\u4e2a\u6570\u636e12\u548c15\uff0c\u90a3\u4e48B[ ]\u5c06\u7ee7\u7eed\u66f4\u65b0\u3002\n\n\u56e0\u4e3a\u5728B\u4e2d\u63d2\u5165\u7684\u6570\u636e\u662f\u6709\u5e8f\u7684\uff0c\u4e0d\u9700\u8981\u79fb\u52a8\uff0c\u53ea\u9700\u8981\u66ff\u6362\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u4e8c\u5206\u67e5\u627e\u63d2\u5165\u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\u63d2\u5165n\u4e2a\u6570\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u3007(logn)\uff0c\u8fd9\u6837\u6211\u4eec\u4f1a\u628a\u8fd9\u4e2a\u6c42LIS\u957f\u5ea6\u7684\u7b97\u6cd5\u590d\u6742\u5ea6\u964d\u4e3a\u4e86\u3007(nlogn)\u3002\n\n\u5982\u679c\u8fd8\u6709\u4e9b\u8ff7\u8ff7\u7cca\u7cca\uff0c\u4e00\u8d77\u6765\u770b\u4ee3\u7801\u5427\uff01\n```cpp\n\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n \nconst int maxn =100010, INF = 0x7f7f7f7f;\nint low[maxn], a[maxn];\nint n, ans;\n \nint binary_search(int *a, int R, int x)\n//\u4e8c\u5206\u67e5\u627e\uff0c\u8fd4\u56dea\u6570\u7ec4\u4e2d\u7b2c\u4e00\u4e2a>=x\u7684\u4f4d\u7f6e \n{\n    int L = 1, mid;\n    while(L <= R){\n        mid = (L+R) >> 1;\n        if(a[mid] <= x)\n            L = mid + 1;\n        else \n            R = mid - 1;\n    }\n    return L;\n}\n \nint main()\n{\n    scanf(\"%d\", &n);\n    for(int i=1; i<=n; i++) \n    {\n        scanf(\"%d\", &a[i]); \n        low[i] = INF;   //\u7531\u4e8elow\u4e2d\u5b58\u7684\u662f\u6700\u5c0f\u503c\uff0c\u6240\u4ee5low\u521d\u59cb\u5316\u4e3aINF \n    }\n    low[1] = a[1]; \n    ans = 1;   //\u521d\u59cb\u65f6LIS\u957f\u5ea6\u4e3a1 \n    for(int i=2; i<=n; i++)\n    {\n        if(a[i] > low[ans])    //\u82e5a[i]>=low[ans]\uff0c\u76f4\u63a5\u628aa[i]\u63a5\u5230\u540e\u9762 \n            low[++ans] = a[i];\n        else       //\u5426\u5219\uff0c\u627e\u5230low\u4e2d\u7b2c\u4e00\u4e2a>=a[i]\u7684\u4f4d\u7f6elow[j]\uff0c\u7528a[i]\u66f4\u65b0low[j] \n            low[binary_search(low, ans, a[i])] = a[i];\n    }\n    printf(\"%d\\n\", ans);   //\u8f93\u51fa\u7b54\u6848 \n    return 0;\n}\n```\n\u8fd9\u5176\u4e2d\u7528\u5230\u4e86\u4e8c\u5206\u67e5\u627e\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e\u7684\uff0c\u5176\u5b9eC++\u91cc\u9762\u7684\u6709\u4e00\u4e2a\u51fd\u6570\u53ef\u7528\u4ee3\u66ff\u4e8c\u5206\uff0c\u90a3\u5c31\u662f \u2014\u2014 low_bound( )\u51fd\u6570\u3002\n\n\u4e0b\u9762\u662f\u4f7f\u7528lower_bound\u4f18\u5316\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u3002\u7531\u4e8e\u957f\u5ea6\u76f8\u540c\u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u53ea\u9700\u8981\u4fdd\u5b58\u7ed3\u5c3e\u6700\u5c0f\u7684\u90a3\u4e2a\uff0c\u800c\u957f\u5ea6\u9012\u589e\u65f6\uff0c\u7ed3\u5c3e\u6570\u5b57\u7684\u5927\u5c0f\u4e5f\u662f\u9012\u589e\u7684\u3002\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u5c31\u662f\u627e\u51fa\u6bd4\u4ed6\u5927\u7684\u7b2c\u4e00\u4e2a\u6570\u3002\u524d\u9762\u7684\u6570\u90fd\u6bd4\u4ed6\u5c0f\uff0c\u6240\u4ee5\u4ed6\u548c\u8fd9\u4e2a\u6570\u7684\u957f\u5ea6\u76f8\u540c\u3002\u7136\u540e\u7531\u4e8e\u4ed6\u6bd4\u8f83\u7136\u540e\u5c0f\uff0c\u66f4\u65b0\u627e\u5230\u7684\u90a3\u4e2a\u503c\u3002\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n, ans;\nint a[200010];\nint f[200010]={-0x7f7f7f7f};\n\nint main() {\n\tcin>>n;\n\tfor(int i=1;i<=n;i++) cin>>a[i];\n\tfor(int i=1;i<=n;i++) {\n\t\tint temp=lower_bound(f,f+ans+1,a[i])-f;\n\t\tf[temp]=a[i];\n\t\tif(ans<temp) ans=temp;\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n  \n/*\u8fd9\u4e2a\u7b97\u6cd5\u5176\u5b9e\u5df2\u7ecf\u4e0d\u662fDP\u4e86\uff0c\u6709\u70b9\u50cf\u8d2a\u5fc3\u3002\u81f3\u4e8e\u590d\u6742\u5ea6\u964d\u4f4e\u5176\u5b9e\u662f\u56e0\u4e3a\u8fd9\u4e2a\u7b97\u6cd5\u91cc\u9762\u7528\u5230\u4e86\u4e8c\u5206\u641c\u7d22\u3002\n\u672c\u6765\u6709N\u4e2a\u6570\u8981\u5904\u7406\u662fO(n)\uff0c\u6bcf\u6b21\u8ba1\u7b97\u8981\u67e5\u627eN\u6b21\u8fd8\u662fO(n)\uff0c\u4e00\u5171\u5c31\u662fO(n^2)\uff1b\n\u73b0\u5728\u641c\u7d22\u6362\u6210\u4e86O(logn)\u7684\u4e8c\u5206\u641c\u7d22\uff0c\u603b\u7684\u590d\u6742\u5ea6\u5c31\u53d8\u4e3aO(nlogn)\u4e86\u3002\n\u8fd9\u91cc\u4e3b\u8981\u6ce8\u610f\u4e00\u4e0blower_bound\u51fd\u6570\u7684\u5e94\u7528\uff0c\u6ce8\u610f\u51cf\u53bb\u7684g\u662f\u5730\u5740\u3002\n\u5730\u5740 - \u5730\u5740 = \u4e0b\u6807 \u3002*/\n```\n\u4e09\u3001\u3010\u7b97\u6cd5\u4e09\u3011 \u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\n\u6211\u4eec\u518d\u6765\u56de\u987eO(n^2)DP\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n> F [ i ] = max { F [ j ] + 1 \uff0cF [ i ] }  (1 <= j <  i\uff0cA[ j ] < A[ i ])\n\n\u6211\u4eec\u5728\u9012\u63a8F\u6570\u7ec4\u7684\u65f6\u5019\uff0c\u6bcf\u6b21\u90fd\u8981\u628aF\u6570\u7ec4\u626b\u4e00\u904d\u6c42F[ j ]\u7684\u6700\u5927\u503c\uff0c\u65f6\u95f4\u5f00\u9500\u6bd4\u8f83\u5927\u3002\u6211\u4eec\u53ef\u4ee5\u501f\u52a9\u6570\u636e\u7ed3\u6784\u6765\u4f18\u5316\u8fd9\u4e2a\u8fc7\u7a0b\u3002\u7528\u6811\u72b6\u6570\u7ec4\u6765\u7ef4\u62a4F\u6570\u7ec4\uff08\u636e\u8bf4\u5206\u5757\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u4f46\u662f\u5206\u5757\u662fO(n*sqrt(n)\uff09\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u4e0d\u5982\u6811\u72b6\u6570\u7ec4\u8dd1\u5f97\u5feb\uff09\uff0c\u9996\u5148\u628aA\u6570\u7ec4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u540c\u65f6\u628aA[ i ]\u5728\u6392\u5e8f\u4e4b\u524d\u7684\u5e8f\u53f7\u8bb0\u5f55\u4e0b\u6765\u3002\u7136\u540e\u4ece\u5c0f\u5230\u5927\u679a\u4e3eA[ i ]\uff0c\u6bcf\u6b21\u7528\u7f16\u53f7\u5c0f\u4e8e\u7b49\u4e8eA[i]\u7f16\u53f7\u7684\u5143\u7d20\u7684LIS\u957f\u5ea6+1\u6765\u66f4\u65b0\u7b54\u6848\uff0c\u540c\u65f6\u628a\u7f16\u53f7\u5c0f\u4e8e\u7b49\u4e8eA[ i ]\u7f16\u53f7\u5143\u7d20\u7684LIS\u957f\u5ea6+1\u3002\u56e0\u4e3aA\u6570\u7ec4\u5df2\u7ecf\u662f\u6709\u5e8f\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u66f4\u65b0\u3002\u6709\u70b9\u7ed5\uff0c\u5177\u4f53\u770b\u4ee3\u7801\u3002\n\n**\u8fd8\u6709\u4e00\u70b9\u9700\u8981\u6ce8\u610f\uff1a\u6811\u72b6\u6570\u7ec4\u6c42LIS\u4e0d\u53bb\u91cd\u7684\u8bdd\u5c31\u53d8\u6210\u4e86\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u4e86\u3002**\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\nusing namespace std;\nconst int maxn =103,INF=0x7f7f7f7f;\nstruct Node{\n    int val,num;\n}z[maxn]; \nint T[maxn];\nint n;\nbool cmp(Node a,Node b)\n{\n    return a.val==b.val?a.num<b.num:a.val<b.val;\n}\nvoid modify(int x,int y)//\u628aval[x]\u66ff\u6362\u4e3aval[x]\u548cy\u4e2d\u8f83\u5927\u7684\u6570 \n{\n    for(;x<=n;x+=x&(-x)) T[x]=max(T[x],y);\n}\nint query(int x)//\u8fd4\u56deval[1]~val[x]\u4e2d\u7684\u6700\u5927\u503c \n{\n    int res=-INF;\n    for(;x;x-=x&(-x)) res=max(res,T[x]);\n    return res;\n}\nint main()\n{\n    int ans=0;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&z[i].val);\n        z[i].num=i;//\u8bb0\u4f4fval[i]\u7684\u7f16\u53f7\uff0c\u6709\u70b9\u7c7b\u4f3c\u4e8e\u79bb\u6563\u5316\u7684\u5904\u7406\uff0c\u4f46\u6ca1\u6709\u53bb\u91cd \n    }\n    sort(z+1,z+n+1,cmp);//\u4ee5\u6743\u503c\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\u4ece\u5c0f\u5230\u5927\u6392\u5e8f \n    for(int i=1;i<=n;i++)//\u6309\u6743\u503c\u4ece\u5c0f\u5230\u5927\u679a\u4e3e \n    {\n        int maxx=query(z[i].num);//\u67e5\u8be2\u7f16\u53f7\u5c0f\u4e8e\u7b49\u4e8enum[i]\u7684LIS\u6700\u5927\u957f\u5ea6\n        modify(z[i].num,++maxx);//\u628a\u957f\u5ea6+1\uff0c\u518d\u53bb\u66f4\u65b0\u524d\u9762\u7684LIS\u957f\u5ea6\n        ans=max(ans,maxx);//\u66f4\u65b0\u7b54\u6848\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```\n**\u6ce8\u610f\uff0c\u4e0d\u8981\u590d\u5236\uff0c\u6211\u53ea\u662f\u8ba9\u5927\u5bb6\u770b\u4e00\u4e0b\u601d\u8def\uff0c\u63d0\u4ea4\u4e0a\u53bb\u4f1aRE\u7684\uff01\uff01\u4f60\u53ef\u4ee5\u8bd5\u8bd5\u770b**\n\n\u597d\u4e86\uff0c\u8bb2\u4e86\u8fd9\u4e48\u591a\uff0cLIS\u4e5f\u8bb2\u900f\u4e86\uff0c\u5982\u679c\u559c\u6b22\u7684\u8bdd\u70b9\u4e2a\u8d5e\u5427\uff01",
        "postTime": 1585461718,
        "uid": 238000,
        "name": "GossWandering",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 AT2827 \u3010LIS\u3011"
    },
    {
        "content": "## 1.$LIS$\n\n$LIS$ ($Longest$ $Increasing$ $Subsequence)$\u5373\u662f\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217 ~~\u610f\u601d\u81ea\u5df1\u767e\u5ea6~~ \u5b50\u5e8f\u5217\u5176\u5b9e\u662f\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u4e00\u4e2a\u6570\u5217\uff0c\u6311\u51fa\u5176\u4e2d\u4efb\u610f\u4e2a\uff0c\u8981\u6c42\u6309\u7167\u5728\u539f\u6570\u5217\u7684\u987a\u5e8f\u6392\u5217 \u6700\u957f\u4e0a\u5347\u5c31\u662f\u5bf9\u4e8e\u8fd9\u6837\u4e00\u4e2a\u5b50\u5e8f\u5217\uff0c\u8981\u6c42\u5355\u8c03\u9012\u589e\uff0c\u7136\u540e\u6700\u957f\n~~\uff08\u600e\u4e48\u611f\u89c9\u5728\u8bf4\u5e9f\u8bdd\uff08\u9003~~\n\n$LIS$\u5728\u674e\u715c\u4e1c\u7684\u300a\u7b97\u6cd5\u7ade\u8d5b\u8fdb\u9636\u6307\u5357\u300b\u4e2d\u6709\u6982\u8ff0\uff0c\u7136\u800c\u4e66\u4e2d\u5c06\u5176\u79f0\u4e3a$DP$\u7684\u5165\u95e8\u9898\uff0c\u5374\u5728\u8bb2\u89e3\u4e2d\u4ec5\u4ec5\u63d0\u5230$O(n^2)$\u7684\u7b97\u6cd5\uff0c\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f\u4e0d\u80fd\u88ab\u63a5\u53d7\u7684\n\n$O(n^2)$\u7b97\u6cd5\uff1a\u66b4\u529b$DP$ \n\n- \u72b6\u6001\u5b9a\u4e49\uff1a$f[i]$ \u8868\u793a\u7b2c$i$\u4e2a\u6570(\u7b2c$i$\u4e2a\u6570\u8bb0\u4e3a$a_i$)\u7ed3\u5c3e\u7684$LIS$\u7684\u957f\u5ea6\n- \u521d\u72b6\u6001\uff1a$f[0] = 0$\n- \u672b\u72b6\u6001\uff1a$max \\{ f[i] \\} (1 \\le i \\le n)$\n- \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a $f[i] = max \\{ f[j]\\} +1  (0 \\le j < i,a_j < a_i)$\n\n~~\uff08\u662f\u4e0d\u662f\u975e\u5e38\u597d\u7406\u89e3\u5462\uff09~~\n\n\u521d\u72b6\u6001\u662f\u663e\u7136\u7684\uff1b\u672b\u72b6\u6001\u662f\u4efb\u610f\u6570\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u7ed3\u5c3e\uff0c\u53ea\u6bd4\u8f83\u957f\u5ea6\uff1b\u8f6c\u79fb\u65b9\u7a0b\u6bcf\u4e00\u4e2a\u72b6\u6001\u662f\u4ece\u6240\u6709\u524d\u4e00\u4e2a\u72b6\u6001\u4e2d\u6700\u5927\u503c\u52a0\u4e0a$a_i$\n\n~~\u4ee3\u7801\u5495\u5495\u5495\uff08\u5927\u96fe~~\n\n\n\u663e\u7136\uff0c\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f\u4e0d\u591f\u4f18\u79c0\u7684\uff0c\u6240\u4ee5\u5c31\u6709\u4e86\u4e00\u90e8\u5206\u7684\u4f18\u5316\u3002\u6211\u4eec\u89c2\u5bdf\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u53d1\u73b0\u9700\u8981\u6211\u4eec\u8ba1\u7b97\u524d$i - 1$\u9879\u7684\u6700\u5927\u503c\uff0c\u800c\u8fd9\u53ef\u4ee5\u7528\u4e00\u4e9b\u5947\u5947\u602a\u602a\u7684\u6570\u636e\u7ed3\u6784\u6765\u7ef4\u62a4\uff0c\u8fd9\u91cc\u5c31\u4e0d\u591a\u4ecb\u7ecd\u4e86 ~~\uff08\u6211\u624d\u4e0d\u4f1a\u8bf4\u662f\u6211\u4e0d\u4f1a\uff09~~\n\n\u7136\u800c\u4e8b\u5b9e\u4e0a\u8fd8\u6709\u66f4\u4f18\u7684\u505a\u6cd5\uff0c\u7528\u4e8c\u5206\uff08$lowerbound$\uff09$+$\u8d2a\u5fc3\u7684\u505a\u6cd5\n\u663e\u7136\u5bf9\u4e8e\u540c\u6837\u4f4d\u7f6e\uff0c\u7ed3\u5c3e\u6570\u5b57\u8d8a\u5c0f\uff0c\u7ed3\u679c\u8d8a\u4f18\u3002\n\u9996\u5148\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a$b$\u6570\u7ec4\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a$a_i$ \u6211\u4eec\u5224\u65ad\u5982\u679c$a_i$\u5927\u4e8e\u5f53\u524d\u7684\u6570\u7ec4\u5c3e\u7aef\u7684\u6570\uff0c\u5c31\u628a$a_i$\u52a0\u5230\u6570\u7ec4\u672b\u7aef\uff0c\u5982\u679c\u5c0f\u4e8e\uff0c\u5c31\u7528$a_i$\u66ff\u6362\u5f53\u524d$b$\u6570\u7ec4\u4e2d\u7b2c\u4e00\u4e2a\u6bd4$a_i$\u5927\u7684\u6570\u3002\n\n\u8fd9\u4e2a\u505a\u6cd5\u663e\u7136\u5982\u679c\u66b4\u529b\u67e5\u627e\uff0c\u590d\u6742\u5ea6\u4ecd\u7136\u662f$O(n^2)$ \u4f46\u662f$b$\u6570\u7ec4\u662f\u4e00\u4e2a\u5355\u8c03\u9012\u589e\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e8c\u5206\u67e5\u627e\u6216\u8005$STL$\u5e93\u4e2d\u7684$lowerbound$~~(\u8fd9\u4e2a\u540c\u6837\u81ea\u884c\u767e\u5ea6233)~~ \u590d\u6742\u5ea6\u53ef\u4ee5\u964d\u4f4e\u5230$O(nlogn)$\n\n\u4f46\u662f\u5982\u679c\u6709\u5174\u8da3\u81ea\u884c\u4e3e\u4f8b\uff0c\u53ef\u4ee5\u53d1\u73b0$b$\u6570\u7ec4\u4e2d\u5b58\u7684\u5e76\u4e0d\u662f\u6211\u4eec\u6c42\u7684$LIS$,\u53ea\u662f\u53ef\u4ee5\u786e\u4fdd\u81ea\u5b66\u5217\u7684\u957f\u5ea6\u76f8\u540c\n~~\uff08\u6b63\u786e\u6027\u81ea\u884c\u8bc1\u660e\u5427\uff09~~\n\n\n~~\u5495\u5495\u5495~~\u7684\u4ee3\u7801\u5982\u4e0b\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 100010;\nint N;\nint a[MAXN],b[MAXN];\nint p;\n\nint main() {\n\tscanf(\"%d\",&N);\n\tfor (register int i = 1; i <= N; i++) {\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor (register int i = 1; i <= N; i++) {\n\t\tif (a[i] > b[p]) {\n\t\t\tb[++p] = a[i];\n\t\t}\n\t\telse {\n\t\t\tb[lower_bound(b + 1,b + p + 1,a[i]) - b] = a[i];\n\t\t}\n\t}\n\tprintf(\"%d\",p);\n\treturn 0;\n}\n```\n[\u4f8b\u9898\uff08\u6a21\u677f\uff09](https://www.luogu.org/problem/AT2827)\n## 2.$LCS$\n~~\u5495\u5495\u5495\u5495\u5495\u5495\u5495\u5495\u5495\u5495\u5495~~\n\n$LCS$ ($Longest$ $Common$ $Subsequence$)\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\uff0c\u987e\u540d\u601d\u4e49\uff0c\u4e5f\u5c31\u662f\u4e24\u4e2a\u5e8f\u5217\u7684\u6700\u957f\u7684\u516c\u5171\u7684\u5b50\u5e8f\u5217 ~~\uff08\u53c8\u662f\u5e9f\u8bdd\uff08\u9003\uff09\uff09~~\n\n\u90a3\u4e48\u8ba9\u6211\u4eec\u518d\u6b21\u5eb7\u4e00\u5eb7\u674e\u715c\u4e1c\u300a\u7b97\u6cd5\u7ade\u8d5b\u8fdb\u9636\u6307\u5357\u300b\u540c\u6837\u662f$DP$\u5165\u95e8\u9898\uff0c\u4f46\u540c\u6837\u53ea\u6709$O(n^2)$\u590d\u6742\u5ea6\u7684\u7b97\u6cd5\uff0c\u5b9e\u5728\u662f\u8ba9\u50cf\u6211\u8fd9\u6837\u7684$DP$\u840c\u65b0\u96be\u4ee5\u63a5\u53d7\u54c7\u3002\n\n\u66b4\u529b$DP$\n\n- \u72b6\u6001\u5b9a\u4e49\uff1a$f[i][j]$ \u8868\u793a$a_1$\u5230$a_i$\u548c$b_1$\u5230$b_j$\u7684$LCS$\n- \u521d\u72b6\u6001\uff1a$f[i][0]=f[0][j] =0(0 \\le i \\le |a|,0 \\le j \\le |b|)$ \u5176\u4e2d$|a|,|b|$\u8868\u793a$a,b$\u6570\u7ec4\u7684\u957f\u5ea6\n- \u672b\u72b6\u6001\uff1a$f[|a|][|b|]$\n- \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a$f[i][j] = max \\{ f[i][j - 1],f[i -1][j],f[i-1][j-1] +1(a_i = b_j)\\}$\n\n~~\u540c\u6837\u975e\u5e38\u597d\u7406\u89e3\u5427$QWQ$~~\n\u6ce8\u610f\u4e00\u4e0b$a_i=b_j$\u53ea\u662f\u7b2c\u4e09\u4e2a\u9009\u9879\u7684\u6761\u4ef6\uff0c\u5176\u4ed6\u7684\u771f\u7684\u633a\u597d\u7406\u89e3\u7684\u54c7\u3002\n\n\n\u6b63\u5982\u521a\u624d\u6240\u8bf4$O(n^2)$\u7684\u590d\u6742\u5ea6\u662f\u4e0d\u591f\u4f18\u79c0\u7684\uff0c\u800c\u66f4\u4f18\u79c0\u7684\u505a\u6cd5\u5c31\u8981\u8054\u7cfb\u5f53\u6211\u4eec\u4e4b\u524d\u6240\u7528\u7684$LIS$\u4e86\n\u6211\u4eec\u4e3e\u4e2a\u4f8b\u5b50\n\n```\n3 1 2 4 5\n1 4 5 2 3\n```\n\u6211\u4eec\u5bf9\u7740\u4e0a\u9762\u4e00\u884c\u5bf9\u4e0b\u9762\u8fdb\u884c\u79bb\u6563\u5316\uff08\u4e0d\u4f1a\u7684\u53bb~~\u9762\u58c1~~\u767e\u5ea6\uff09\n\u5f97\u5230\n```\n2 4 5 3 1\n```\n\u4e5f\u5c31\u662f\u6bcf\u4e00\u4f4d\u5b58\u7684\u662f\u7b2c\u4e8c\u884c\u8fd9\u4e00\u4f4d\u5728\u7b2c\u4e00\u884c\u5bf9\u5e94\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u6211\u4eec\u901a\u8fc7\u6211\u4eec\u67d0\u79cd\u5de7\u5999\u7684\u7384\u5b66\u65b9\u6cd5\u770b\u51fa\u6765\uff0c\u8fd9\u91cc\u76f8\u5f53\u4e8e\u6c42\u4e00\u4e2a$LIS$\u561b\uff08\u8fd9\u91cc\u611f\u6027\u7406\u89e3\u4e00\u4e0b\uff0c~~\u56e0\u4e3a\u6211\u4e0d\u4f1a\u8bc1\u660e\uff0c\u53cd\u6b63$OI$\u4e0d\u9700\u8981\u8bc1\u660e~~\uff09\n\u7136\u540e\u6211\u4eec\u505a\u4e00\u904d$LIS$\u5c31\u505a\u5b8c\u5566\uff01\uff01\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 100010;\nint N;\nint a[MAXN],b[MAXN],c[MAXN],d[MAXN];\nint f[MAXN],p = 0;\n\nint main() {\n\tscanf(\"%d\",&N);\n\tfor (register int i = 1; i <= N; i++) {\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor (register int i = 1; i <= N; i++) {\n\t\tscanf(\"%d\",&b[i]);\n\t}\n\tfor (register int i = 1; i <= N; i++) {\n\t\tc[a[i]] = i;\n\t}\n\tfor (register int i = 1; i <= N; i++) {\n\t\td[i] = c[b[i]];\n\t}\n\tfor (register int i = 1; i <= N; i++) {\n\t\tif (d[i] > f[p]) {\n\t\t\tf[++p] = d[i];\n\t\t}\n\t\telse{\n\t\t\tf[lower_bound(f + 1,f + p + 1,d[i]) - f] = d[i];\n\t\t}\n\t}\n\tprintf(\"%d\",p);\n\treturn 0;\n}\n\n```\n\n\n[\u4f8b\u9898\u6a21\u677f](https://www.luogu.org/problem/P1439)\n\n\u5b8c\u7ed3\u6492\u82b1\uff01\uff01\n\n\n\n\n",
        "postTime": 1565487994,
        "uid": 121369,
        "name": "\u54e6\u54df\u7b77\u5b50",
        "ccfLevel": 0,
        "title": "\u7b97\u6cd5\u5b66\u4e60\uff1aLIS\u4e0eLCS"
    },
    {
        "content": ">\u2235\u672c\u9898\u7684\u6570\u636e\u8303\u56f4\u4e3a1 <= N <= 10^6 \n\n>\u2234\u663e\u7136\u4e0d\u80fd\u4f7f\u7528O(N^2)\u7684\u7b97\u6cd5\uff0c\u8981\u4f7f\u7528O(N log N)\u7684\u7b97\u6cd5\n \n\u5927\u5bb6\u5e94\u8be5\u90fd\u4f1an log n\u7684lis\n\n\u4f46\u662f\u672c\u4eba\u53d1\u73b0\u6ca1\u6709\u4eba\u624b\u5199\u4e8c\u5206\u3002\u3002\u3002\n\n\u6240\u4ee5\u5c31\u6765\u4e00\u4e2a\u624b\u5199\u7684\u4e8c\u5206\u7684\u4ee3\u7801\u5427\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read()//\u8bfb\u5165\u4f18\u5316\n{\n    int r=0,s,c;\n    for(;!isdigit(c=getchar());s=c);\n    for(r=c^48;isdigit(c=getchar());(r*=10)+=c^48);\n    return s^45?r:-r;\n}\nconst int N=110000;\nint n,len,l,r,mid;\nint a[N],b[N];\nint main()\n{\n    n=read();\n    for(int i=1;i<=n;i++)\n        a[i]=read();\n    b[++len]=a[1];\n    for(int i=2;i<=n;i++)\n    {\n        if(a[i]>b[len])\n            b[++len]=a[i];\n        else\n        {\n            l=1,r=len;\n            while(l<r)\n            {\n                mid=l+r>>1;\n                if(b[mid]<a[i])//\u4e8c\u5206\u67e5\u627es\u4e2d\u5927\u4e8e\u7b49\u4e8ea[i]\u7684\u6700\u5c0f\u7684\u6570\n                    l=mid+1;\n                else\n                    r=mid;\n            }\n            b[l]=a[i];\n        }\n    }\n    printf(\"%d\\n\",len);\n    return 0;\n}\n```",
        "postTime": 1536808215,
        "uid": 25030,
        "name": "zsc2003",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 AT2827 \u3010LIS\u3011"
    },
    {
        "content": "## **\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\uff1f\u524d\u5f80 [My Blog](https://www.cnblogs.com/baoyihan/p/luogu-at2827.html)**\n\n\u8fd9\u9053\u9898\u5927\u5bb6\u90fd\u662f\u7528 $O(nlogn)$ \u7684\u65b9\u6cd5\u505a\u7684\uff0c\u7136\u800c\u9898\u89e3\u533a\u597d\u50cf\u5e76\u6ca1\u6709\u8bb2\u8ff0\u8fd9\u4e2a\u7b97\u6cd5\u662f\u600e\u4e48\u5f97\u5230\u7684\uff0c\u7136\u540e\u849f\u84bb\u5c31\u6765\u8bb2\u4e00\u4e0b\u63a8\u5bfc\u8fc7\u7a0b\u3002\n\n## \u5c1d\u8bd5\u4e00\u4e0b\u66b4\u529b\u679a\u4e3e\uff1f\n\n\u9996\u5148\u5f88\u5bb9\u6613\u60f3\u5230\u7528\u4e8c\u8fdb\u5236\u66b4\u529b\u6765\u505a\u3002\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u75280\u62161\u6765\u8868\u793a\u4e0d\u53d6\u6216\u53d6\uff0c\u518d\u8fdb\u884c\u4e00\u904d\u9a8c\u8bc1\uff0c\u6700\u540e\u8bb0\u5f55\u7b54\u6848\u3002\u5219\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(2^n\u00b7n)$\uff0c\u663e\u7136\uff0c\u7f8e\u4e3d\u7684OJ\u4f1a\u7ed9\u4f60\u4e00\u4e2a\u65e0\u60c5\u7684TLE\u3002\n\n## O(n^2) \u52a8\u6001\u89c4\u5212\u65b9\u6cd5\n\n\u8fd9\u91cc\u6458\u81ea $Xuanwo$ \u7684\u535a\u5ba2\u3002\u5730\u5740\uff1a[https://xuanwo.io/2015/07/31/dp-lis/](https://xuanwo.io/2015/07/31/dp-lis/)\n\n$dp[i]$ \u8868\u793a\u4ee5 $i$ \u7ed3\u5c3e\u7684\u5b50\u5e8f\u5217\u4e2d $LIS$ \u7684\u957f\u5ea6\u3002\u7136\u540e\u6211\u7528   $dp[j] $ $(0<=j<i)$ \u6765\u8868\u793a\u5728 $i$ \u4e4b\u524d\u7684 $LIS$ \u7684\u957f\u5ea6\u3002\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u53ea\u6709\u5f53 $a[i]>a[j]$ \u7684\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u884c\u5224\u65ad\uff0c\u662f\u5426\u5c06 $a[i]$ \u52a0\u5165\u5230 $dp[j]$ \u5f53\u4e2d\u3002\u4e3a\u4e86\u4fdd\u8bc1\u6211\u4eec\u6bcf\u6b21\u52a0\u5165\u90fd\u662f\u5f97\u5230\u4e00\u4e2a\u6700\u4f18\u7684 $LIS$ \uff0c\u6709\u4e24\u70b9\u9700\u8981\u6ce8\u610f\uff1a\u7b2c\u4e00\uff0c\u6bcf\u4e00\u6b21\uff0c $a[i]$ \u90fd\u5e94\u5f53\u52a0\u5165\u6700\u5927\u7684\u90a3\u4e2a $dp[j]$ \uff0c\u4fdd\u8bc1\u5c40\u90e8\u6027\u8d28\u6700\u4f18\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u9700\u8981\u627e\u5230 $max(dp[j](0<=j<i))$ \uff1b\u7b2c\u4e8c\uff0c\u6bcf\u4e00\u6b21\u52a0\u5165\u4e4b\u540e\uff0c\u6211\u4eec\u90fd\u5e94\u5f53\u66f4\u65b0 $dp[j]$ \u7684\u503c\uff0c\u663e\u7136\uff0c $dp[i]=dp[j]+1$ \u3002 \u5982\u679c\u5199\u6210\u9012\u63a8\u516c\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230 $dp[i]=max(dp[j](0<=j<i))+(a[i]>a[j]?1:0)$ \u3002 \u4e8e\u662f\u6211\u4eec\u5c31\u80fd\u591f\u5f97\u5230 $O(n^2)$ \u7684\u52a8\u6001\u89c4\u5212\u65b9\u6cd5\u7684\u5b9e\u73b0\uff1a\n\n```cpp\nconst int MAXN = 1010;\nint n;\nint a[MAXN];\nint dp[MAXN];\n\nint LIS()\n{\n    memset(dp, 0, sizeof(dp));\n    int Max;\n    for (int i = 0; i < n; ++i)\n    {\n        Max = 0;\n        for (int j = 0; j < i; ++j)\n        {\n            if (a[i] > a[j])\n            {\n                Max = max(Max, dp[j]);\n            }\n        }\n        dp[i] = Max + 1;\n    }\n    Max = 0;\n    for (int i = 0; i < n; ++i)\n    {\n        if (dp[i] > Max)    Max = dp[i];\n    }\n    return Max;\n}\n```\n\n## \u4e0a\u63a8\u5bfc\u8fc7\u7a0b\n\nemm\u6211\u5efa\u8bae\u4f60\u5148\u601d\u8003\u4e00\u4e0b\u5566~\n\n\u6211\u4eec\u5728 $O(n^2)$ \u7684dp\u7b97\u6cd5\u7684\u57fa\u7840\u4e0a\u4f18\u5316\uff08\u62ff\u51fa\u6211\u53ef\u601c\u7684Excel\uff09\n\n![](https://ae01.alicdn.com/kf/H51bc061ef71748ce9e4648626230da40Y.jpg)\n\n**\u4ee5\u4e0a\uff0cCORE IDEA\uff0c\u5efa\u8bae\u5927\u56fe\u6d88\u5316\uff01**\n\n**\u5efa\u8bae\uff0c\u5728\u7eb8\u4e0a\u4e00\u6b65\u6b65\u6a21\u62dfs\u7684\u503c\uff0c\u6df1\u5165\u7406\u89e3\u8fd9\u4e2a\u7b97\u6cd5\u7684\u7cbe\u9ad3\u6240\u5728\uff01\uff01\uff01\u5426\u5219\uff0c\u4f60\u4e5f\u4e0d\u4f1a\u5199\u51fa\u4ee3\u7801\u3001\u7406\u89e3\u4ee3\u7801**\n\n## \u6700\u540e\u662f\u53ef\u7231\u7684\u4ee3\u7801\n\n\u8fd9\u91cc\u7ed9\u51fa\u6838\u5fc3\u4ee3\u7801\u3002\n\n```cpp\n    tot = 0;\n    s[++tot] = a[1]; //\u8fb9\u754c\u6761\u4ef6\uff0ca[1]\u80af\u5b9a\u80fd\u6784\u6210\u957f\u5ea6\u4e3a1\u7684LIS\uff0c\u6240\u4ee5\u5b58\u5165s[1]\u3002\n    for (int i = 2; i <= n; i++) {\n        if (a[i] <= s[tot])  //\u5982\u679ca[i]\u5c0f\u4e8es\u7684\u6700\u540e\u4e00\u4e2a\u503c\uff0c\u90a3\u4e48\u8bf4\u660ea[i]\u53ef\u4ee5\u66ff\u6362\u6389s\u6570\u7ec4\u7684\u67d0\u4e00\u4e2a\u503c\n            *lower_bound(s + 1, s + 1 + tot, a[i]) = a[i]; //\u6307\u9488\u5199\u6cd5\uff0c\u66ff\u6362s[i]\uff0clower_bound \u662f STL \u7684\u4e8c\u5206\u67e5\u627e\u51fd\u6570\uff0c\u4e0d\u61c2\u7684\u53ef\u4ee5 Google \u641c\u7d22\u4e00\u4e0b\u3002\n        else s[++tot] = a[i]; //\u5426\u5219\uff0ctot++\uff0c\u5c06a[i]\u5199\u5165\n    }\n```\n\n\u6700\u540e\u7684ans\u81ea\u7136\u662ftot\u3002\n\n**\u4e00\u5b9a\u8981\u6a21\u62df\uff01\u6a21\u62df\uff01\u6a21\u62df\uff01\u52a8\u6001\u89c4\u5212\u7684\u7cbe\u9ad3\u5c31\u662f\u586b\u8868\uff0c\u5728\u7eb8\u4e0a\u6a21\u62df\u8fc7\u4e86\uff0c\u624d\u6709\u4fe1\u5fc3\u4e00\u904d\u5199\u51fa AC \u4ee3\u7801\uff01**",
        "postTime": 1564712529,
        "uid": 101855,
        "name": "WOWHandsome",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 AT2827 \u3010LIS\u3011"
    },
    {
        "content": "\u6811\u72b6\u6570\u7ec4\u3002   \n\u3000\u867d\u7136\u5f88\u591a\u5927\u4f6c\u4e5f\u7528\u6811\u72b6\u6570\u7ec4\uff0c\u4f46\u4e0d\u77e5\u662f\u4e0d\u662f\u6211\u592a\u83dc\uff0c\u770b\u4e0d\u61c2\u4ed6\u4eec\u7684\u9898\u89e3\uff0c\u6240\u4ee5\u6211\u51b3\u5b9a\u89e3\u91ca\u5f97\u8be6\u7ec6\u4e00\u70b9\u3002  \n\u3000\u3000//\u505a\u5b8c\u8fd9\u9053\u9898\u5c31\u53ef\u4ee5\u53bb\u505a\u5bfc\u5f39\u62e6\u622a\u4e86\u3002  \n\u5047\u8bbe\u7ed9\u7684\u6570\u5b57\u4ee3\u8868\u9ad8\u5ea6\uff0c\u6211\u4eec\u5c31\u662f\u8981\u5f80\u4e0a\u722c\u6700\u957f\u7684\u683c\u5b50\u3002  \n\u6211\u4eec\u7528\u4e0b\u6807\u8868\u793a\u9ad8\u5ea6\uff0cf(i)\u8868\u793a\u4e0d\u8d85\u8fc7\u9ad8\u5ea6i\u7684LIS\u3002  \n\u6211\u5148\u4e0a\u4ee3\u7801\uff0c\u4e0b\u9762\u89e3\u91ca\uff1a\uff08\u4e3a\u9632\u6b62\u6284\u88ad\uff0c\u4e5f\u4e3a\u786e\u4fdd\u4f60\u80fd\u66f4\u597d\u5730\u7406\u89e3LIS\uff0c\u6211\u653e\u7684\u662f\u5bfc\u5f39\u62e6\u622a\u7b2c\u4e00\u95ee\u7684\u4ee3\u7801\uff09\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n\nusing namespace std;\n\nconst int MAXH = 100000;\nconst int MAXN = 1e5 + 5;\nint f[MAXH], l[MAXN], maxh, ans;\nint n;\n\ninline int max(int a,int b){\n    if(a>b) return a;\n    return b;\n}\n\ninline int lowbit (int k){\n    return ((k)&(-k));\n}\n\ninline void add(int x, int newh){\t\t\t//\u4ee5p\u4fee\u6539\u3001\u7ef4\u62a4\u6570\u7ec4 \n    for (int i = x; i <= maxh; i +=lowbit(i) ){\n        f[i] = max(f[i],newh);\n    }\n    return ;\n}\n\ninline int ask (int x){\t\t\t\t//\u67e5\u6700\u957f \n    int ret = 0;\n    for (int i = x; i >= 1; i -= lowbit(i) ){\n        ret = max(ret, f[i]);\t//\u8bb0\u5f97\u6c42\u533a\u95f4\u548c\u7684\u6811\u72b6\u6570\u7ec4\u5417\uff1f\n    }\n    return ret;\n}\n\ninline int quest(int x)\n{\n    int r=0;\n    for(int i=x;i<=maxh;i+=lowbit(i))\n        r=max(r,f[i]);\t\t\t//\u8fd9\u91cc\u53ea\u662f\u628a+= \u6362\u6210\u4e86 max()\u800c\u5df2\n    return r;\n}\ninline void push(int x,int v)\n{\n    for(int i=x;i>0;i-=lowbit(i))\n        f[i]=max(f[i],v);\n}\n\nint main(){\t\n    cin >> n;\n    \n    for(int i = 1; i <= n; ++i){\n        cin >> l[i];\n        maxh = max(maxh, l[i]);\n    }\n//\tfor(int i=1;i<=n;i++)\n//    {\n//        int x=quest(l[i])+1;\n//        ans=max(ans,x);\n//        push(l[i],x);\n//    }\n//\t\n//\tcout << ans <<endl;\n//\tmemset ( f, 0 , sizeof(f));\t\n//\tans = 0;\n    \n    for(int i = 1; i <= n; ++ i){\n        int x = ask(l[i]) + 1;\t//\u627e\u51fa\u5f53\u524dLIS\n        ans = max(ans, x);\n        add(l[i] + 1, x); \t//\u4e25\u683c\u4e0a\u5347\uff0c\u6240\u4ee5\u52a0\u4e00\n    }\n    \n    cout << ans <<endl;\n\n    return 0;\n}\n```",
        "postTime": 1548159067,
        "uid": 140377,
        "name": "\u7ef4\u8fed\u751f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT2827 \u3010LIS\u3011"
    },
    {
        "content": "\u4e00\u9053\u6bd4\u8f83\u7b80\u5355\u7684LIS\u677f\u5b50\u9898\n\n~~\u867d\u7136\u6211\u662f\u5728\u67e5\u9605\u5404\u79cd\u8d44\u6599\u540e\u5199\u51fa\u6765\u7684~~\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2alow\u6570\u7ec4\uff0c\u8bb0\u5f55\u8fd9\u4e2a\u6570\u7ec4\u5230\u7b2ci\u4f4d\u6700\u5927\u7684\u503c\u3002\n\n\u5982\u6837\u4f8b\uff1a\n\n5\n\n3 1 5 4 2\n\n\u8bb0\u5f55\u51fa\u6765\u7684low\u6570\u7ec4\u5982\u4e0b\uff1a\n\n1 2\n\n\u8fd9\u91cc\u7684low\u6570\u7ec4\u662f\u8bb0\u5f55\u8fd9\u4e2a\u6570\u7ec4\u5f53\u524d\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6\u4e3ai\u65f6\uff0c\u6700\u5c0f\u7684\u90a3\u4e2a\u6570\u503c\u3002\n\n\uff08\u4ed4\u7ec6\u7406\u89e3\u4e0a\u9762\u8fd9\u53e5\u8bdd\uff0c\u6211\u601d\u8003\u4e86\u534a\u5929\u624d\u5199\u51fa\u8fd9\u53e5\u8bdd\uff0c~~\u53ef\u80fd\u63cf\u8ff0\u6709\u95ee\u9898\u5624\u5624\u5624~~\uff09\n\n\u6240\u4ee5\uff0clow\u6570\u7ec4\u7684\u957f\u5ea6\u5c31\u662f\u6574\u4e2a\u6570\u7ec4\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\n\n\u4e0b\u9762\u9644\u4e0a~~\u5624\u5624\u5624~~\u4ee3\u7801\n\n\n\n```cpp\n/*The Bone Of My Sword*/\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <algorithm>\n#define MAXN 100005\n#define inf 9999999\nusing namespace std;\nint n;\nint a[MAXN],b[MAXN];\nint low[MAXN];\nint find(int r,int x){\n    int l = 1;\n    while(l <= r){\n        int mid = (l+r) >> 1;\n        if(low[mid] <= x)\n            l = mid+1;\n        else\n            r = mid-1;\n    }\n    return l;\n}\nint main(void){\n    cin >> n;\n    for(int i = 1;i <= n;i ++)\n        scanf(\"%d\",&a[i]),low[i] = inf;\n    int k = 1;\n    low[1] = a[1];\n    for(int i = 2;i <= n;++ i){\n        if(a[i] >= low[k])\n            low[++k] = a[i];\n        else{\n            low[find(k,a[i])] = a[i];\n        }\n    } \n    cout << k << endl;\n    /*for(int i = 1;i <= k;i ++)\n\t\tcout << low[i] <<\" \"; */\n    return 0;\n} \n```\n\n\u5bf9\u4e86\uff0c\u4e0a\u9762\u7528\u5230\u4e8c\u5206\u63d2\u5165\u66ff\u6362\u503c\u3002\u3002\u3002\u3002\n\n\n",
        "postTime": 1539783595,
        "uid": 48850,
        "name": "Sparda",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 AT2827 \u3010LIS\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u662f\u9053LIS\u7684\u677f\u5b50\u9898\u6ca1\u6709\u4ec0\u4e48\u53ef\u591a\u8bf4\u7684\uff0c\u4e0d\u4f1aLIS\u7684\u53ef\u4ee5\u770b\u6211\u535a\u5ba2[\u4f20\u9001\u95e8](https://54520.blog.luogu.org/lis-hu-lcs)\u540e\u671f\u8fd8\u4f1a\u66f4\u65b0\uff0c\u8fd8\u671b\u5927\u5bb6\u591a\u591a\u5173\u6ce8\u54af~~\u5356\u840c~~\n\n\u4e0aAC\u4ee3\u7801~~\u7531\u4e8eLIS\u7684\u77e5\u8bc6\u6211\u90fd\u5728blog\u91cc\u8bb2\u4e86\u6240\u4ee5\u6ca1\u6ce8\u91ca~~\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<string>\n#include<queue>\n#include<cmath>\nusing namespace std;\nconst int inf=1000000;\nint a[100010],f[100010],c[100010];\nint upper_bound(int l,int r,int key)//\u7528STl\u5e93\u4e5f\u53ef\u4ee5\u54e6\n{\n\twhile(l!=r)\n\t{\n\t\tint mid=(l+r)>>1;\n\t\tif(c[mid]<=key)l=mid+1;\n\t\telse r=mid;\n\t}\n\treturn l;\n}\nint main()\n{\n\tint n,i;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++)scanf(\"%d\",&a[i]);\n\tfor(i=1;i<=n;i++)\n\t\tc[i]=inf;\n\tf[1]=1;\n\tc[1]=a[1];\n\tint maxn=0;\n\tfor(i=2;i<=n;i++)\n\t{\n\t\tint u=upper_bound(1,i,a[i]);\n\t\tf[i]=u;\n\t\tif(c[f[i]]>a[i])c[f[i]]=a[i];\n\t\tmaxn=max(f[i],maxn);\n\t}\n\tcout<<maxn<<endl; \n\treturn 0;\n}\n```",
        "postTime": 1537784283,
        "uid": 54520,
        "name": "___I_AK_IOI",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT2827 \u3010LIS\u3011"
    },
    {
        "content": "\u8fd9\u9898\u539f\u6765\u4e00\u76f4\u7528\u7684~~\u7ebf\u6bb5\u6811~~\uff0c \u539f\u56e0\u662f\u6211\u4e0d\u4f1a\u6811\u72b6\u6570\u7ec4\u6c42\u6700\u503c\uff0c \u6211\u4e5f\u4e0d\u4f1a\u4e8c\u5206\u89e3\u8fd9\u9053\u9898...\n\n```cpp\n//RoRoyyy\n#include <cstdio>\n#include <iostream>\n#include <cmath>\nusing namespace std;\nconst int N = 1e5 + 5;\nint n = 0;\nint a[N];\nstruct smt {\n    int l, r, maxn;\n    #define ls p << 1\n    #define rs p << 1 | 1\n}t[N << 2];\nvoid pushup(int p) {\n    t[p].maxn = max(t[ls].maxn, t[rs].maxn);\n}\nvoid build(int p, int l, int r) {\n    t[p].l = l, t[p].r = r;\n    if(l == r) {t[p].maxn = 0; return;}\n    int mid = l + r >> 1;\n    build(ls, l, mid);\n    build(rs, mid + 1, r);\n    pushup(p);\n}\nvoid add(int p, int pos, int k) {\n    if(t[p].l == t[p].r) {t[p].maxn = k; return;}\n    int mid = t[p].l + t[p].r >> 1;\n    if(pos <= mid) add(ls, pos, k);\n    else add(rs, pos, k);\n    pushup(p);\n}\nint ask(int p, int l, int r) {\n    if(t[p].l >= l && t[p].r <= r) return t[p].maxn;\n    int mid  = t[p].l + t[p].r >> 1;\n    int val = 0;\n    if(l <= mid) val = max(val, ask(ls, l, r));\n    if(r > mid) val = max(val, ask(rs, l, r));\n    return val; \n}\nint main() {\n    while(scanf(\"%d\", &a[++n]) != EOF);\n    n--;\n    build(1, 1, N);\n    int ans1 = 0, ans2 = 0;\n    for(int i = 1; i <= n; i++) {//\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217 \u9700\u8981\u627ei\u4e4b\u524d\u5927\u4e8e\u7b49\u4e8ea[i] \u7684dp\u7684\u6700\u5927\u503c\n        int tep = ask(1, a[i], N) + 1;\n        add(1, a[i], tep);\n        ans1 = max(ans1, tep);\n    }\n    build(1, 1, N);\n    for(int i = 1; i <= n; i++) {//\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217 \u9700\u8981\u627ei\u4e4b\u524d\u5c0f\u4e8ea[i]\u7684dp\u7684\u6700\u5927\u503c\n        int tep = ask(1, 1, a[i] - 1) + 1;\n        add(1, a[i], tep);\n        ans2 = max(ans2, tep);\n    }\n    printf(\"%d\\n%d\\n\", ans1, ans2);\n    return 0;\n}\n```\n\n\u8fd9\u91cc\u628a\u4e24\u79cd\u5e8f\u5217\u7684\u7ebf\u6bb5\u6811\u4ee3\u7801\u90fd\u96c6\u5408\u4e86\u3002\n\n\n\u8fd9\u6b21\u6211\u5b66\u4e60\u4e86\u4e00\u4e0b\u4e8c\u5206\u600e\u4e48\u4f18\u5316\u8fd9\u9053\u9898\u3002\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e\uff1a\u5bf9\u4e8e\u539f\u5e8f\u5217\u4e24\u4e2a\u6570$a[i],a[j]$ ,$dp[i] == dp[j]$\uff0c\u5373\u7ed3\u5c3e\u7684\u7b54\u6848\u76f8\u7b49\uff0c \u800c\u4e14$a[i] > a[j]$\uff0c \u90a3\u4e48\u8fd9\u65f6\u5019\u9009$i$\u4e00\u5b9a\u4e0d\u4f1a\u6bd4\u9009$j$\u66f4\u4f18\u3002\uff08\u8fd9\u4e2a\u662f\u663e\u7136\u7684\n\u90a3\u4e48\u6211\u4eec\u8bbe$s[i]$\u8868\u793a\u4ee5$i$\u4f5c\u4e3a\u7b54\u6848\u7684\u6700\u5c0f\u7ed3\u5c3e\u3002\n\n\u90a3\u4e48\u6839\u636e\u4e0a\u9762\u7684\u8bc1\u660e\uff0c \u6211\u4eec\u77e5\u9053$s[i]$\u4e00\u5b9a\u662f\u5355\u8c03\u9012\u589e\u7684\uff0c \u800c\u4e14\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u6765\u9012\u63a8\uff1a\n\n\u5982\u679c$a[i]$\u5927\u4e8e$s[tot]$\uff0c \u90a3\u4e48\u663e\u7136\u6b64\u65f6$a[i]$\u4f1a\u4f7f\u7b54\u6848\u589e\u52a0\uff0c \u540c\u65f6\u6211\u4eec\u5df2\u7ecf\u4fdd\u8bc1$s[tot]$\u662f\u5230\u76ee\u524d\u4e3a\u6b62\u7b54\u6848\u4e3a$tot$\u7684\u6700\u5c0f\u7ed3\u5c3e\uff0c \u800c\u4e14\u6211\u4eec\u5f53\u524d\u7684$a[i]$\u4e5f\u53ea\u80fd\u63a5$i$\u4e4b\u524d\u7684\u6570\uff0c \u6240\u4ee5\u6211\u4eec\u5c31\u66f4\u65b0\u5f53\u524d\u7b54\u6848\u3002\n\n\u5982\u679c\u5c0f\u4e8e\u4e86\uff0c \u5c31\u4e0d\u80fd\u66f4\u65b0\u7b54\u6848\u4e86\uff0c \u4f46\u6211\u4eec\u4e3a\u4e86\u7ef4\u62a4\u6700\u4f18\u6027\u8d28\uff0c \u6211\u4eec\u9700\u8981\u5728$s$\u5e8f\u5217\u67e5\u8be2\u5927\u4e8e$a[i]$\u7684\u6700\u5c0f\u6570\uff0c \u66ff\u6362\u5c31\u884c\u4e86\uff0c \u56e0\u4e3a\u5982\u679c\u5927\u4e8e$a[i]$\u7684\u6700\u5c0f\u6570$a[k]$\u80fd\u6ee1\u8db3\u5f53\u524d\u7b54\u6848\uff0c \u800c\u4e14$a[k]$\u7684\u7b54\u6848\u4e00\u5b9a\u5728$k$\u4e4b\u524d\u5c31\u8ba1\u7b97\u5b8c\u6bd5\uff0c \u4e0d\u9700\u8981\u7528\u5230$k$\u4e4b\u540e\u7684\u6570\u4e86\uff0c \u6240\u4ee5\u6211\u7528$i$\u53bb\u66ff\u6362\u4e5f\u4e00\u5b9a\u80fd\u4fdd\u8bc1\u6b64\u65f6\u7684\u7b54\u6848\u548c$k$\u662f\u4e00\u6837\u7684\uff0c \u56e0\u4e3a$k-1$\u7684\u6570\u4e00\u5b9a\u5c0f\u4e8e$i$\u7684\u6570\u3002\n\u56e0\u4e3a$s$\u662f\u6709\u5e8f\u7684\uff0c \u90a3\u4e48\u4e8c\u5206\u67e5\u627e\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n\nusing namespace std;\nconst int N = 1e5 + 5;\nint a[N], tot = 0, s[N];//\u6808\u4e2d\u5b58\u653e\u7684\u662f\u4ee5i\u4e3a\u7b54\u6848\u7684\u6700\u5c0f\u6570\u662f\u591a\u5c11 \nint main() {\n    int n;\n    scanf(\"%d\", &n);\n    for(int i = 1; i <= n; i++) scanf(\"%d\", &a[i]);\n    s[++tot] = a[1];\n    for(int i = 2; i <= n; i++) {\n        if(a[i] > s[tot]) s[++tot] = a[i];//\u5982\u679c\u7b54\u6848\u80fd\u7ee7\u7eed\u5f80\u4e0a\u7d2f\u52a0\uff0c\u5c31\u7d2f\u52a0\n        else {\n            //\u6b64\u5904\u67e5\u627e\u5927\u4e8ea[i]\u7684\u6700\u5c0f\u6570\u7684\u4e0b\u6807\u5373\u7b54\u6848 \u7528\u66f4\u4f18\u7684\u9009\u9879\u66ff\u6362\u539f\u6765\u8f83\u5927\u7684\u6570\n            int tep = lower_bound(s + 1, s + 1 + tot, a[i]) -  s;\n            s[tep] = a[i];\n        }\n    }\n    printf(\"%d\\n\", tot);\n    return 0;\n}\n```\n\n",
        "postTime": 1572444540,
        "uid": 111617,
        "name": "RoRoyyy",
        "ccfLevel": 0,
        "title": "AT2827"
    },
    {
        "content": "## \u524d\u8a00\uff1a\u8fd9\u662f\u9053LIS\u6a21\u677f\u9898\uff0c\u8fd9\u91cc\u4ecb\u7ecdO(NlogN)\u7b97\u6cd5\n### \u4e00.\u7b97\u6cd5\u601d\u60f3\n**\u6211\u4eec\u5f00\u4e00\u4e2aans[]\u6570\u7ec4\uff0cans[i]\u8868\u793a\u957f\u5ea6\u4e3ai\u7684LIS\u4e2d\u7684\u6700\u5c0f\u672b\u5c3e,\u7528\u4e00\u4e2a\u53d8\u91cflen\u6765\u8bb0\u5f55\u73b0\u5728LIS\u7684\u6700\u957f\u957f\u5ea6**\n\n\u4e0b\u9762\u6211\u4eec\u770b\u4e00\u7ec4\u6837\u4f8b\uff1a\n\na[8]=1,9,2,6,0,8,1,7\n\n1. \u5904\u7406a[1]\uff0c\u4ee4ans[1]=a[1]=1,\u5c31\u662f\u8bf4\u5f53\u53ea\u6709a[1]\u8fd9\u4e2a\u6570\u5b571\u7684\u65f6\u5019\uff0c\u957f\u5ea6\u4e3a1\u7684LIS\u7684\u6700\u5c0f\u672b\u5c3e\u662f1,\u8fd9\u65f6len=1;\n         \n      ans[1]=1; len=1;\n2. \u5904\u7406a[2]\uff0c\u56e0a[2]>ans[len=1],\u5219ans[++len]=ans[2]=9;\n\n      ans[1,2]=1,9; len=2;\n3. \u5904\u7406a[3]\uff0cans[1]<a[3]=2<ans[2]\u3002\n   \n      - \u73b0\u5728\u6211\u4eec\u60f3\u4e00\u4e0bans[1]\u8868\u793a\u7684\u662fLIS\u957f\u5ea6\u4e3a1\u7684\u6700\u5c0f\u672b\u5c3e\u662f1\uff0c\u800ca[3]=2>1,\u6545\u4e0d\u80fd\u7528a[3]\u5237\u65b0ans[1]\u3002     \n     - \u90a3\u4e48\u4f55\u65f6\u624d\u80fd\u7528a[3]\u53bb\u5237\u65b0ans[]\u5462\n     - \u7b54\u6848\u662f\uff1a**\u5728ans[]\u4e2d\u627e\u5230\u7b2c\u4e00\u4e2a>=a[3]\u7684\u6570ans[pos]\uff0c\u56e0ans[pos]>a[3]\u5e76\u4e14a[3]>ans[1~pos-1]**,\u5219\u6b64\u65f6\u957f\u5ea6\u4e3apos\u7684LIS\u6700\u5c0f\u7ed3\u5c3e\u5e94\u8be5\u662fmin(ans[pos],a[3])=a[3];\n     \n      ans[1,2]=1,2; len=2;   \n4. \u5904\u7406a[4],\u56e0a[4]=6>ans[len=2],\u5219ans[++len]=ans[3]=6;\n    \n      ans[1,2,3]=1,2,6; len=3;\n5. \u5904\u7406a[5]\uff0c\u5728ans\u4e2d\u627e\u7b2c\u4e00\u4e2a>=a[5]\u7684\u6570ans[1],\u6240\u4ee5ans[1]=a[5]=0;\n    \n      ans[1,2,3]=0,2,6; len=3;\n6. \u5904\u7406a[6]\uff0c\u56e0a[6]=8>ans[len=3]=6,\u6240\u4ee5ans[++len]=a[6]=8;\n\n      ans[1,2,3,4]=0,2,6,8; len=4;\n7. \u5904\u7406a[7]\uff0c\u5728ans\u4e2d\u627e\u7b2c\u4e00\u4e2a>=a[7]\u7684\u6570ans[2],\u6240\u4ee5ans[2]=a[7]=1;\n\n      ans[1,2,3,4]=0,1,6,8; len=4;\n8. \u5904\u7406a[8], \u5728ans\u4e2d\u627e\u7b2c\u4e00\u4e2a>=a[8]\u7684\u6570ans[4],\u6240\u4ee5ans[4]=a[7]=1;\n    \n      ans[1,2,3,4]=0,1,6,7; len=4;\n\n\u6700\u540e\u8f93\u51falen\u5373\u53ef\u3002     \n\u5728\u6b64\u8fc7\u7a0b\u4e2dans\u4e00\u76f4\u662f\u6709\u5e8f\u7684(\u4ece\u5b9a\u4e49\u4e5f\u53ef\u63a8\u77e5)\uff0c\u6240\u4ee5\u5355\u6b21\u67e5\u627e\u53ef\u9009\u7528\u4e8c\u5206\uff0c\u6216STL\u91cc\u7684lower_bound(),\u5c06\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u4e3aO(logN),\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(NlogN)\u3002\n\n### \u4e8c.\u5206\u4eab\u6e90\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int maxn=1e6;\nint n,a[maxn],ans[maxn],len;\n\nint lbound(int x[],int lenx,int goal){\n\tint l=1,r=lenx;\n\twhile(l<r){\n\t\tint mid=(l+r)>>1;\n\t\tif(x[mid]>=goal) r=mid;\n\t\telse l=mid+1;\n\t}\n\treturn l;\n}\n\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n\tans[len=1]=a[1];\n\tfor(int i=2;i<=n;i++){\n\t\tif(a[i]>ans[len]) ans[++len]=a[i];\n\t\telse {\n\t\t\tint pos=lbound(ans,len,a[i]);\n\t\t\tans[pos]=a[i];\n\t\t} \n\t}\n\tprintf(\"%d\",len);\n\t\n\treturn 0;\n} \n```\n\n      \n\n\n\n",
        "postTime": 1572328051,
        "uid": 104308,
        "name": "Capitalism_Gao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT2827 \u3010LIS\u3011"
    },
    {
        "content": "# \u9898\u76ee\u5927\u610f\n\n## \u3010\u9898\u76ee\u63cf\u8ff0\u3011\n\u4e00\u4e2a\u6570\u7684\u5e8f\u5217bi\uff0c\u5f53b1<b2<...<bS\u7684\u65f6\u5019\uff0c\u6211\u4eec\u79f0\u8fd9\u4e2a\u5e8f\u5217\u662f\u4e0a\u5347\u7684\u3002\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u4e00\u4e2a\u5e8f\u5217(a1,a2,...,aN)\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e9b\u4e0a\u5347\u7684\u5b50\u5e8f\u5217(ai1,ai2,...,aiK)\uff0c\u8fd9\u91cc1\u2264i1<i2<...<iK\u2264N\u3002\u6bd4\u5982\uff0c\u5bf9\u4e8e\u5e8f\u5217(1,7,3,5,9,4,8)\uff0c\u6709\u5b83\u7684\u4e00\u4e9b\u4e0a\u5347\u5b50\u5e8f\u5217\uff0c\u5982(1,7),(3,4,8)\u7b49\u7b49\u3002\u8fd9\u4e9b\u5b50\u5e8f\u5217\u4e2d\u6700\u957f\u7684\u957f\u5ea6\u662f4\uff0c\u6bd4\u5982\u5b50\u5e8f\u5217(1,3,5,8)\u3002\n\n\u4f60\u7684\u4efb\u52a1\uff0c\u5c31\u662f\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u5e8f\u5217\uff0c\u6c42\u51fa\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u3002\n\n## \u3010\u8f93\u5165\u3011\n\u8f93\u5165\u7684\u7b2c\u4e00\u884c\u662f\u5e8f\u5217\u7684\u957f\u5ea6N(1\u2264N\u22641000)\u3002\u7b2c\u4e8c\u884c\u7ed9\u51fa\u5e8f\u5217\u4e2d\u7684N\u4e2a\u6574\u6570\uff0c\u8fd9\u4e9b\u6574\u6570\u7684\u53d6\u503c\u8303\u56f4\u90fd\u57280\u523010000\u3002\n\n## \u3010\u8f93\u51fa\u3011\n\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u3002\n\n\n\n# \u601d\u8003\n\n\u6211\u4eec\u7684\u76ee\u6807\u662f\u6c42\u51fa\u6700\u957f\u7684\u4e0d\u8fde\u7eed\u7684\u4e0a\u5347\u6570\u5217,\u90a3\u4e48\u6211\u4eec\u5f00\u4e00\u4e2a\u6570\u7ec4f[i],\u5b58\u4ee5i\u7ed3\u5c3e\u7684\u6570\u5217\u957f\u5ea6;\n\n\u90a3\u4e48,\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570i,\u6211\u4eec\u4ece\u5979\u524d\u9762\u627e\u4e00\u4e2a\u6bd4\u5979\u5c0f\u7684\u6570\u5b57j,\u5224\u65ad\u548c\u5979\u8fde\u63a5\u540e\u957f\u5ea6\u662f\u5426\u6bd4\u5f53\u524d\u957f\u5ea6\u957f,\u662f\u7684\u8bdd\u5219\u66ff\u6362fi\u7684\u503c.\n\n\u65b9\u7a0b\u5f0f\u5927\u81f4\u5982\u4e0b\n\nfi = max(fj+1,fi) | fi > fj\n\n# code \uff08TLE 15\u4e2a\u70b9\uff09\n\n```cpp\n\n#include <iostream>\n#include <algorithm>\n#define maxn 100005\nusing namespace std;\n\nint n, a[maxn] = {};\n\nint f[maxn] = {};\n\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    cin >> n;\n    for (int i = 1; i <= n; i++)\n    {\n        cin >> a[i];\n        f[i] = 1;\n    }\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j < i; j++)\n        {\n            if (a[i] > a[j])\n            {\n                f[i] = max(f[j] + 1, f[i]);\n            }\n        }\n    cout << *std::max_element(f + 1, f + n + 1) << endl;\n    return 0;\n}\n\n\n```\n\n# \u4f18\u5316\n\nLIS\u5176\u5b9e\u53ef\u4ee5\u4f18\u5316\u5230O(nlogn)\n\n\u6709\u8fd9\u4e48\u4e00\u4e2a\u4e32\uff1a\n\n3 1 5 2 7 6\n\n\u6211\u4eec\u8003\u8651\u5f00\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u6700\u957f\u5b50\u4e32\u800c\u4e0d\u662f\u8bb0\u5f55\u4ee5i\u7ed3\u5c3e\u7684\u4e32\u957f\u5ea6\u3002\n\n```cpp\nfor (register int i = 1; i <= n; i++)\n{\n    if(....)\n        .....\n    else\n        .....\n}\n```\n\n\u6211\u4eec\u6bcf\u6dfb\u52a0\u4e00\u4e2a\u6570\uff0c\u6bd4\u8f83\u4ed6\u4e0e\u6211\u4eec\u8bb0\u5f55\u6700\u957f\u5b50\u4e32\u7684\u6570\u7ec4\u6700\u540e\u4e00\u4e2a\u6570\u5927\u8fd8\u662f\u5c0f\uff0c\u5982\u679c\u5927\u5c31\u76f4\u63a5\u52a0\u5165\u6570\u7ec4\u672b\u5c3e\u3002\n\n```cpp\nfor (register int i = 1; i <= n; i++)\n{\n    if(a[i] > s[len])\n        s[++len] = a[i];\n    else\n        .....\n}\n```\n\n\u4e0d\u7136\u6211\u4eec\u5c31\u4e8c\u5206\u627e\u4e00\u4e2a\u6bd4a[i]\u5927\u7684\u6700\u5c0f\u5143\u7d20\uff0c\u7136\u540e\u66ff\u6362\uff0c\u5982\u679c\u5b83\u4e0d\u4f1a\u66f4\u65b0\u7b54\u6848\uff0c\u90a3\u4e48\u5b83\u4e5f\u5c31\u4e0d\u4f1a\u66f4\u65b0\u5230\u672b\u5c3e\uff0c\u4e5f\u5c31\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\u3002\u8fd8\u6709\u6211\u4eec\u6c42\u7684\u662f\u957f\u5ea6\uff0c\u548c\u91cc\u9762\u7684\u5143\u7d20\u65e0\u5173\u3002\n\n```cpp\nint lower_bound(int x)\n{\n    int l = 1, r = len;\n    while (l < r)\n    {\n        int mid = (l + r) >> 1;\n        if (s[mid] < x)\n            l = mid + 1;\n        else\n            r = mid;\n    }\n    return l;\n}\n\nfor (register int i = 1; i <= n; i++)\n{\n    if(a[i] > s[len])\n        s[++len] = a[i];\n    else\n        s[lower_bound(a[i])] = a[i];\n}\n\ncout << len;\n```\n\n# AC\u4ee3\u7801\n\n```cpp\n#include <iostream>\n\nusing namespace std;\n\nconst int maxn = 100005;\nint n, a[maxn], f[maxn], s[maxn], len;\n\nint lower_bound(int x)\n{\n    int l = 1, r = len;\n    while (l < r)\n    {\n        int mid = (l + r) >> 1;\n        if (s[mid] < x)\n            l = mid + 1;\n        else\n            r = mid;\n    }\n    return l;\n}\n\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n\n    cin >> n;\n    for (register int i = 1; i <= n; i++)\n        cin >> a[i];\n\n    for (register int i = 1; i <= n; i++)\n    {\n        if (s[len] < a[i])\n            s[++len] = a[i];\n        else\n            s[lower_bound(a[i])] = a[i];\n    }\n    cout << len << endl;\n    return 0;\n}\n```",
        "postTime": 1570413161,
        "uid": 87057,
        "name": "lukzia",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT2827 \u3010LIS\u3011"
    },
    {
        "content": "\u90a3\u4e48\u591a\u5927\u4f6c\u90fd\u662f\u5355\u8c03\u6808+\u4e8c\u5206\u6216\u8005\u6811\u72b6\u6570\u7ec4\uff0c\u800c\u672c\u849f\u84bb\u592a\u83dc\u4e86\uff0c\u53ea\u4f1a\u5199\u6743\u503c\u7ebf\u6bb5\u6811\u4e86Orz\u3002\u5173\u4e8e\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u5c31\u662f\u628a\u6240\u6709\u7684\u6570\u5168\u90e8\u79bb\u6563\u5316\uff0c\u7136\u540e\u51b3\u7b56\u5b8c\u6210\u4ee5\u540e\uff0c\u5c31\u628a\u5f53\u524d\u70b9\u7684\u503c\u52a0\u5165\u5230\u7ebf\u6bb5\u6811\u91cc\u9762\u53bb\u3002\u8fd9\u6837\u7ebf\u6bb5\u6811\u91cc\u9762\u7684\u503c\u4e00\u5b9a\u90fd\u662f\u5f53\u524d\u51fa\u73b0\u8fc7\u7684\u70b9\u3002\n\u4ee3\u7801\u5f88\u4e11\uff1a\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <queue>\nusing namespace std;\nconst int MAXN = (int)1e5+10;\nint dp[MAXN],a[MAXN];\ndeque<int> q;\nstruct SGT {\n\tstruct node {\n\t\tint mx;\n\t} tree[MAXN<<2];\n\tvoid pushup(int k) {\n\t\ttree[k].mx = max(tree[k<<1].mx,tree[k<<1|1].mx);\n\t}\n\tint query(int k,int l,int r,int x,int y) {\n\t\tif(l>=x&&r<=y)return tree[k].mx;\n\t\tint mid = l+r>>1,ret = 0;\n\t\tif(x<=mid)ret = query(k<<1,l,mid,x,y);\n\t\tif(y>mid)ret = max(ret,query(k<<1|1,mid+1,r,x,y));\n\t\treturn ret;\n\t}\n\tvoid modify(int k,int l,int r,int pos,int v) {\n\t\tif(l==r) {\n\t\t\ttree[k].mx = v;\n\t\t\treturn;\n\t\t}\n\t\tint mid = l+r>>1;\n\t\tif(pos<=mid)modify(k<<1,l,mid,pos,v);\n\t\telse modify(k<<1|1,mid+1,r,pos,v);\n\t\tpushup(k);\n\t}\n}T;\nint HASH[MAXN];\nint len;\ninline int getid(int x){return lower_bound(HASH+1,HASH+len+1,x)-HASH;}\nint main() {\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor(int i = 1; i<=n; i++)scanf(\"%d\",&a[i]);\n\tint tot = n;\n\tfor(int i = 1;i<=tot;i++)HASH[i] = a[i];\n\tsort(HASH+1,HASH+n+1);\n\tlen = unique(HASH+1,HASH+1+n)-HASH;\n\tdp[1] = 1;\n\tT.modify(1,1,n,getid(a[1]),1);\n\tfor(int i = 2; i<=tot; i++) {\n\t\tint id = getid(a[i]);\n\t\tif(id==1) {\n\t\t\tdp[i] = 1;\n\t\t\tT.modify(1,1,n,id,1);\n\t\t\tcontinue;\n\t\t}\n\t\tdp[i] = T.query(1,1,n,1,id-1)+1;\n\t\tT.modify(1,1,n,id,dp[i]);\n\t}\n\tint ans = 0;\n\tfor(int i = 1; i<=tot; i++) {\n\t\tans = max(ans,dp[i]);\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n~~\u8fd8\u6709\u5c31\u662f\u4f17\u6240\u5468\u77e5\uff0c\u7ebf\u6bb5\u6811\u7684\u590d\u6742\u5ea6\u662f$O(nlog^2n)$\uff0c\u5176\u4e2d$O(nlogn)$\u662f\u6e10\u8fdb\u590d\u6742\u5ea6\uff0c$O(logn)$\u662f\u8fd9\u73a9\u610f\u5929\u751f\u7684\u5e38\u6570~~",
        "postTime": 1569803050,
        "uid": 61493,
        "name": "BeyondStars",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT2827 \u3010LIS\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u8f83\u7b80\u5355\u7684LIS\u7684\u9898\uff0c\u6c42\u7684\u5c31\u662f\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u3002~~\uff08\u867d\u7136\u6211\u7528\u4e86\u5f88\u4e45\u624d\u5199\u7c97\u6765\uff09~~\n\n\u672c\u9898\u6709\u4e09\u79cd\u89e3\u6cd5\uff09\uff1aDP\uff0c\u79bb\u6563\u5316+\u6811\u72b6\u6570\u7ec4\uff0c\u79bb\u6563\u5316+\u7ebf\u6bb5\u6811 \uff0c\u4e0b\u9762\u6211\u4e00\u4e00\u4e3a\u60a8\u8bb2\u89e3\u3002\n\n## **DP\u5927\u6cd5\uff08AC\u56db\u4e2a\u70b9\uff09\uff1a**\n\u9996\u5148\uff0c\u8fd9\u662f\u4e00\u9053\u6c42\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u9898\uff08zzj\u5927\u4f6c\uff1a\u5e9f\u8bdd\uff01\uff09\u6240\u4ee5\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u7528DP\u6765\u505a\u3002\u6211\u4eec\u53ef\u4ee5\u8bbef[i]\u4e3a\u4ee5a[i]\u4e3a\u7ed3\u5c3e\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u5f88\u5bb9\u6613\u5c31\u5217\u51fa\uff1a\nf[i]=max(f[j]+1,f[i])**\uff08\u5f53a[i]>a[j]\u65f6)**\u5426\u5219f[i]=1\n\n\u4e0a\u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\nusing namespace std;\nint n;\nint a[100010],f[100010];//a[i]\u662f\nint main()\n{\n\tmemset(f,0,sizeof(f));\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tf[1]=1;\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=i;j++)\n\t\t\tif(a[i]>a[j])f[i]=max(f[j]+1,f[i]);\n\t\tif(!f[i])f[i]=1;\n\t}\n\tint ans=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tans=max(ans,f[i]);\n\t } \n\t printf(\"%d\",ans);\n} \n```\n## **\u79bb\u6563\u5316+\u6811\u72b6\u6570\u7ec4**\n\u76f8\u4fe1\u5f88\u591a\u5c0f\u4f19\u4f34\u4eec\u90fd\u542c\u8fc7\u79bb\u6563\u5316\u8fd9\u4e00\u9ad8\uff08di\uff09\u7aef\uff08ji\uff09\u7684\u8bcd\u6c47\uff0c\u90a3\u8fd9\u5230\u5e95\u6307\u4ec0\u4e48\u5462\uff1f\n\n\u79bb\u6563\u5316\u672c\u8d28\u4e0a\u53ef\u4ee5\u770b\u6210\u662f\u4e00\u79cd\u54c8\u5e0c\uff0c\u5176\u4fdd\u8bc1\u6570\u636e\u5728\u54c8\u5e0c\u4ee5\u540e\u4ecd\u7136\u4fdd\u6301\u539f\u6765\u7684\u5168/\u504f\u5e8f\u5173\u7cfb\u3002\n\n\u901a\u4fd7\u5730\u8bb2\u5c31\u662f\u5f53\u6709\u4e9b\u6570\u636e\u56e0\u4e3a\u672c\u8eab\u5f88\u5927\u6216\u8005\u7c7b\u578b\u4e0d\u652f\u6301\uff0c\u81ea\u8eab\u65e0\u6cd5\u4f5c\u4e3a\u6570\u7ec4\u7684\u4e0b\u6807\u6765\u65b9\u4fbf\u5730\u5904\u7406\uff0c\u800c\u5f71\u54cd\u6700\u7ec8\u7ed3\u679c\u7684\u53ea\u6709\u5143\u7d20\u4e4b\u95f4\u7684\u76f8\u5bf9\u5927\u5c0f\u5173\u7cfb\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u539f\u6765\u7684\u6570\u636e\u6309\u7167\u4ece\u5927\u5230\u5c0f\u7f16\u53f7\u6765\u5904\u7406\u95ee\u9898\uff0c\u5373\u79bb\u6563\u5316\u3002\n\n\u7528\u6765\u79bb\u6563\u5316\u7684\u53ef\u4ee5\u662f\u5927\u6574\u6570\u3001\u6d6e\u70b9\u6570\u3001\u5b57\u7b26\u4e32\u2026\u2026\u7b49\u7b49\u3002\n\n\u65e0\uff08du\uff09\u826f\uff08liu\uff09\u7684\u6570\u636e\u544a\u8bc9\u6211\u4eec\uff1a\u8fd9\u67e0\uff08ti\uff09\u6aac\uff08mu\uff09\u8981\u7528\u79bb\u6563\u5316\uff01\n\u9996\u5148\uff0c\u5f00\u4e00\u4e2a\u7ed3\u6784\u4f53\uff1a\n```cpp\n\tstruct nod1{int x,t;}a[100010];\n```\n\u5176\u4e2d\uff0ca[i].x\u5b58\u8f93\u5165\uff0ca[i].t\u8868\u793a\u8fd9\u4e2a\u6570\u662f\u5728\u90a3\u4e00\u4e2a\u4f4d\u7f6e\u3002\n\u8f93\u5165\u5b8c\u4e86\u4ee5\u540e\uff0csort\u4e00\u4e0b\uff08\u6ce8\u610f\uff1a\u4ece\u5c0f\u5230\u5927\u6392\uff09\n```cpp\nbool cmp(nod1 x,nod1 y)\n{\n\treturn x.x<y.x;\n}\nsort(a+1,a+1+n,cmp);\n```\n\u518d\u5f00\u4e00\u4e2a\u6570\u7ec4b[i],\u7528\u6765\u5b58\u79bb\u6563\u5316\u4ee5\u540e\u7684\u6570\u7ec4\u3002\n\u4e8e\u662f\n```cpp\n   int h=1;//\u81ea\u884c\u7406\u89e3\u4e00\u4e0b\uff0c\u4e0d\u7136\u5c31\u5e9f\u4e86\n\tfor(int i=1;i<=n;i++)\n\t{\n        if(a[i].x!=a[i-1].x&&i!=1)h++;\n\t\tb[a[i].t]=h;\n\t}\n```\n\u968f\u540e\uff0c\u5c31\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u505a\u5566\uff01\uff08[\u4e0d\u4f1a\u6811\u72b6\u6570\u7ec4\u7684\uff0c\u51fa\u95e8\u5de6\u8f6c](https://www.luogu.org/problem/P3374)\uff09\n\u6811\u72b6\u6570\u7ec4\u6838\u5fc3\u4ee3\u7801\uff1a\n```cpp\nint lowbit(int k)\n{\n    return k & (-k);\n}\nvoid add(int x,int k)\n{\n    while(x<=n){tree[x]=max(k,tree[x]);x+=lowbit(x);}\n    return ;\n}\n\nint sum(int x)\n{\n    int ans=0;\n    while(x)\n    {\n        ans=max(tree[x],ans);//\u6ce8\u610f\uff0c\u8fd9\u4e2atree\u6570\u7ec4\u5b58\u7684\u5c31\u662f\u4ee5a[i]\u4e3a\u7ed3\u5c3e\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u6240\u4ee5\u8981\u6c42max\n        x-=lowbit(x);\n    }\n    return ans;\n}\n```\n\u4e0a\u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nstruct nod1{int x,t;}a[100010];\nbool cmp(nod1 x,nod1 y)\n{\n\treturn x.x<y.x;\n}\nint n,m,tree[2000010]//\u6811\u72b6\u6570\u7ec4;\nint b[100010];  \nint lowbit(int k)\n{\n    return k & (-k);\n}\nvoid add(int x,int k)\n{\n    while(x<=n){tree[x]=max(k,tree[x]);x+=lowbit(x);}\n    return ;\n}\nint sum(int x)\n{\n    int ans=0;\n    while(x)\n    {\n        ans=max(tree[x],ans);\n        x-=lowbit(x);\n    }\n    return ans;\n}\nint main()\n{\n\t//freopen(\"in.txt\",\"r\",stdin);\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i].x);\n\t\ta[i].t=i;\n\t}\n\tsort(a+1,a+1+n,cmp);\n    int h=1;\n\tfor(int i=1;i<=n;i++)\n\t{\n        if(a[i].x!=a[i-1].x&&i!=1)h++;\n\t\tb[a[i].t]=h;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint t=sum(b[i]-1)+1;//\u6c42\u51fa\u524d\u4e00\u4e2af[i]\u7684\u6700\u5927\u503c\uff0c\u518d\u52a0\u4e0a\u81ea\u5df1\n\t\tadd(b[i],t);//\u52a0\u5165\u6811\u72b6\u6570\u7ec4\u4e2d\n\t}\n\tint ans=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tans=max(ans,tree[i]);\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n## **\u7ebf\u6bb5\u6811+\u79bb\u6563\u5316**\n\u5f53\u6211\u8fd8\u662f\u516d\u5e74\u7ea7\u65f6\uff0c\u6211\u5750\u5728\u5e08\u5144\u4eec\u7684\u4e2d\u95f4\uff0c\u542c\u4ed6\u4eec\u8bb2\u89e3\u7ebf\u6bb5\u6811\uff0c\u5f53\u7136\uff0c\u6211\u5565\u4e5f\u6ca1\u542c\u61c2\u3002\n\n\u73b0\u5728\uff0c\u6211\u77e5\u9053\u8fd9\u662f\u4ec0\u4e48\u4e1c\u897f\u4e86\uff0c\u5c31\u662f\u5728\u8fd9\u4e2a\u4e1c\u897f\u4e0a\u8fdb\u884c\u5220\u6539\u548c\u8be2\u95ee\uff08\u5f88\u7ecf\u5178\u7684\u4e00\u4e2a\u4e8c\u5206\uff09![\u9009\u81ealuogu\u65e5\u62a5\u7b2c46\u671f](https://cdn.luogu.com.cn/upload/pic/65968.png)\n\u5c31\u662f\u4e0d\u505c\u7684\u4e8c\u5206\uff0c\u4e8c\u5206\uff0c\u518d\u4e8c\u5206\uff01\uff01\uff01\uff01(\u5982\u4e0d\u61c2\uff0c\u51fa\u95e8\u53f3\u8f6c\uff09\uff0c\u968f\u540e\uff0c\u601d\u8def\u548c\u6811\u72b6\u6570\u7ec4\u4e00\u6837\uff0c\u5c31\u4e0d\u7ec6\u8bf4\u4e86\u3002\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nstruct nod2{int v,t;}b[1000010];\nint c[1000010];\nstruct nod1{int l,r,ls,rs,c=0;}a[1000010];\nint len,n,m;\nbool cmp(nod2 x,nod2 y)\n{\n\treturn x.v<y.v;\n}\nvoid bt(int l,int r)\n{\n\tlen++;int x=len;\n\ta[x].l=l;a[x].r=r;\n\tint m=(r+l)/2;\n\tif(l!=r)\n\t{\n\t\ta[x].ls=len+1;bt(l,m);\n\t\ta[x].rs=len+1;bt(m+1,r);\n\t}\n}\nvoid change(int x,int k,int c)\n{\n\ta[x].c=max(a[x].c,c);\n\tif(a[x].l==a[x].r&&a[x].l==k)return ;\n\tint m=(a[x].l+a[x].r)/2;\n\tif(k<=m)change(a[x].ls,k,c);\n\telse change(a[x].rs,k,c);\n}\nint find1(int x,int l,int r)\n{\n\tif(l>r)return 0;\n\tif(a[x].l==l&&a[x].r==r)return a[x].c;\n\tint m=(a[x].l+a[x].r)/2;\n\tif(l>m)return find1(a[x].rs,l,r);\n\telse if(r<=m)return find1(a[x].ls,l,r);\n\telse return max(find1(a[x].ls,l,m),find1(a[x].rs,m+1,r));\n}\nint main()\n{\n\t//freopen(\"in.txt\",\"r\",stdin);\n\tscanf(\"%lld\",&n);\n\tbt(1,n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%lld\",&b[i].v);\n\t\tb[i].t=i; \n\t\t//change(1,i,x);\n\t}\n\tsort(b+1,b+n+1,cmp);\n\tint h=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(b[i].v!=b[i-1].v)h++;\n\t\tc[b[i].t]=h;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint t=find1(1,1,c[i]-1)+1;\n\t\tchange(1,c[i],t);\n\t}\n\tprintf(\"%lld\",find1(1,1,n));\n}\n```\n",
        "postTime": 1564130077,
        "uid": 49368,
        "name": "Corrine",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT2827 \u3010LIS\u3011"
    },
    {
        "content": "## \u8fd9\u9053\u9898\u6b63\u89e3\u662f$DP$\uff0c\u601d\u8def\u662f\u8d2a\u5fc3\n\u65b0\u5efa\u4e00\u4e2a\u5e8f\u5217\uff0c\u6bcf\u6b21\u8bfb\u5165\u4e00\u4e2a\u6570\uff0c\u5927\u4e8e\u5e8f\u5217\u9876\u5219\u52a0\u5165\u5e8f\u5217\uff0c\u5c0f\u4e8e\u5219\u5728\u5e8f\u5217\u4e2d\u627e\u5230\u4e00\u4e2a\u6bd4\u81ea\u5df1\u5c0f\u7684\u6570\uff0c\u7531\u4e8e\u5e8f\u5217\u80af\u5b9a\u662f\u6709\u5e8f\u7684\uff0c\u90a3\u4e48\u66ff\u6362\u7684\u590d\u6742\u5ea6\u5c31\u662f$ \\log(n) $\uff0c\u6211\u4eec\u53ef\u4ee5\u7528$ lover \\_bound() \\ STL$\uff0c\u8fd9\u6837\u5c31\u65b9\u4fbf\u4e86\u540e\u9762\u7684\u6570\u8fdb\u6765\u3002\u7b54\u6848\u5c31\u662f\u5e8f\u5217\u7684\u957f\u5ea6\u3002\n### \u771f\u6b63\u7684\u8d2a\u5fc3\u662f\u6709$ \\log $\u7684\uff0c\u8d34\u4e0a14\u884c\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,x,f[100010],cnt;\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n    \tscanf(\"%d\",&x);\n    \tif(x>f[cnt])f[++cnt]=x;\n    \telse *lower_bound(f+1,f+cnt+1,x)=x;\n\t}\n\tprintf(\"%d\",cnt);\n}\n```\n",
        "postTime": 1571399872,
        "uid": 100325,
        "name": "peterwuyihong",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 AT2827 \u3010LIS\u3011"
    },
    {
        "content": "\u6b63\u5728\u8865cf gym 101915\u7684I\uff0c\u53d1\u73b0\u8981\u7528\u6811\u72b6\u6570\u7ec4\u6c42LIS\uff0c\u7136\u800c\u672c\u83dc\u9e21\u6811\u72b6\u6570\u7ec4\u5b66\u5f97\u4e00\u584c\u7cca\u6d82\uff0cLIS\u4e5f\u53ea\u5199\u8fc7$\\mathcal{O}(n^2)$\u7684\u6807\u51c6dp\u89e3...\u672c\u7740\u4e00\u6b65\u6b65\u8e0f\u5b9e\u524d\u8fdb\u7684\u539f\u5219\uff0c\u8fd8\u662f\u5148\u6765\u628a\u8fd9\u9898\u8fc7\u4e86\u518d\u53bb\u5207\u90a3\u9898\u3002\n\n\u7ffb\u4e86\u4e00\u5708\u9898\u89e3\u8c8c\u4f3c\u6ca1\u6709\u4eba\u62ff\u975e\u9012\u5f52\u7ebf\u6bb5\u6811\u8fc7\uff0c\u5c31\u8d34\u4e00\u4e0b\u81ea\u5df1\u5199\u7684\u7248\u672c:\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nstruct SegmentTree {\n    vector<int> tree;\n    int len;\n\n    explicit SegmentTree(): len(0) {}\n\n    void pushup(int i) {\n        tree[i] = tree[i << 1] + tree[i << 1 | 1];\n    }\n\n    void build(int n) {\n        len = n;\n        tree.assign(len << 1, 0);\n        for (int i = len - 1; i; --i) pushup(i);\n    }\n    \n    void update(int pos, int val) {\n        for (pos += len - 1; pos; pos >>= 1) tree[pos] = max(tree[pos], val);\n    }\n\n    int query(int l, int r) const {\n        int ans = 0;\n        for (l += len - 1, r += len; l < r; l >>= 1, r >>= 1) {\n            if (l & 1) ans = max(tree[l++], ans);\n            if (r & 1) ans = max(tree[--r], ans);\n        }\n        return ans;\n    }\n\n    void debug() const {\n        for (auto it : tree) printf(\"%d \", it);\n        putchar('\\n');\n    }\n};\n\nint main() {\n    int n, temp, res;\n    int ans = 0;\n    SegmentTree st;\n    scanf(\"%d\", &n);\n    st.build(n);\n    for (int i = 0; i < n; ++i) {\n        scanf(\"%d\", &temp);\n        res = st.query(1, temp - 1) + 1;\n        st.update(temp, res);\n        ans = max(ans, res);\n        // st.debug();\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```\n\n\u53d6\u6d88`st.debug()`\u7684\u6ce8\u91ca\uff0c\u8f93\u5165`5 1 2 3 4 5`\u53ef\u4ee5\u83b7\u5f97\u4ee5\u4e0b\u8f93\u51fa:\n\n```\n5\n1 4 2 3 5\n0 1 1 0 0 1 0 0 0 0\n0 2 2 0 2 1 0 0 2 0\n0 2 2 2 2 1 2 0 2 0\n0 3 2 3 2 1 2 3 2 0\n0 4 4 3 4 1 2 3 2 4\n4\n```\n\n\u7531\u4e8e\u975e\u9012\u5f52\u7ebf\u6bb5\u6811\u7684\u5b9e\u73b0\u4e00\u5171\u9700\u8981\u539f\u6570\u7ec4\u7684\u4e24\u500d\u5927\u5c0f\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u6240\u4ee5\u6700\u540en\u4f4d\u5176\u5b9e\u5c31\u662f\u539f\u6570\u7ec4\u7684\u53d8\u5316\u8fc7\u7a0b\u3002\n\n\u5177\u4f53\u601d\u60f3\u7684\u8bdd\u9898\u89e3\u91cc\u9762\u5176\u4ed6\u8001\u54e5\u5df2\u7ecf\u5199\u7684\u5f88\u660e\u767d\u4e86\uff0c\u5176\u5b9e\u6211\u4e0a\u9762\u7528\u7684\u6837\u4f8b\u4e5f\u662f\u67d0\u4e2a\u8001\u54e5\u7528\u6765\u4e3e\u4f8b\u7684\u4f8b\u5b50\uff0c\u8fd9\u6837\u53ef\u80fd\u770b\u8d77\u6765\u66f4\u597d\u7406\u89e3\u4e00\u70b9\u3002\n\n\u4e5f\u7b97\u662f\u9664\u53bb`lower_bound`\u7684\u53e6\u4e00\u79cd$\\mathcal{O}(n\\log n)$\u7684\u5b9e\u73b0\u65b9\u6cd5\u4e86\uff0c\u552f\u4e00\u7684\u7f3a\u70b9\u53ef\u80fd\u5c31\u662f\u6709\u65f6\u9700\u8981\u79bb\u6563\u5316\u3002",
        "postTime": 1555074205,
        "uid": 68936,
        "name": "__DICS",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT2827 \u3010LIS\u3011"
    },
    {
        "content": "### LIS\uff08Longest Increasing Subsequence\uff09\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217 \u6216\u8005 \u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u3002\n#### \u5f88\u57fa\u7840\u7684\u9898\u76ee\uff0c\u6709\u4e24\u79cd\u7b97\u6cd5\uff0c\u590d\u6742\u5ea6\u5206\u522b\u4e3aO(n*logn)\u548cO(n^2) \u3002\n\n#### \u5b89\u5229\u539f\u5730\u5740[https://blog.csdn.net/zhangyx_xyz/article/details/50949957](https://blog.csdn.net/zhangyx_xyz/article/details/50949957)\n\n\n\u5148\u56de\u987e\u7ecf\u5178\u7684\n\n\nO(n^2)\n\u7684\u52a8\u6001\u89c4\u5212\u7b97\u6cd5:\n\n\u8bbea[t]\u8868\u793a\u5e8f\u5217\u4e2d\u7684\u7b2ct\u4e2a\u6570\uff0cdp[t]\u8868\u793a\u4ece1\u5230t\u8fd9\u4e00\u6bb5\u4e2d\u4ee5t\u7ed3\u5c3e\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u521d\u59cb\u65f6\u8bbedp[t] = 0(t = 1, 2, ..., len(A))\u3002\u5219\u6709\u52a8\u6001\u89c4\u5212\u65b9\u7a0b\uff1adp[t] = max{1, dp[j] + 1} (j = 1, 2, ..., t - 1, \u4e14a[j] < a[t])\u3002\n\n\u4e00\u822c\u82e5\u4ecea[t]\u5f00\u59cb\uff0c\u6b64\u65f6\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u5e94\u8be5\u662f\u6309\u4e0b\u5217\u65b9\u6cd5\u6c42\u51fa\u7684\uff1a \u5728a[t+1],a[t+2],...a[n]\u4e2d\uff0c\u627e\u51fa\u4e00\u4e2a\u6bd4a[t]\u5927\u7684\u4e14\u6700\u957f\u7684\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\uff0c\u4f5c\u4e3a\u5b83\u7684\u540e\u7ee7\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\uff1a\n```\n\n#include<iostream>\nusing namespace std;\n#define max(a,b) a>b?a:b\nint main()\n{\n    int n, i, j, dp[101], x[101], max_len;\n    while (cin >> n)\n    {\n        for (i = 0; i < n; i++)\n            cin >> x[i];\n        dp[0] = 1;//\u8868\u793a\u4ee5x[0]\u4e3a\u5b50\u5e8f\u5217\u6700\u53f3\u8fb9\u7684\u957f\u5ea6\u4f4d1\n        for (i = 1; i < n; i++)\n        {\n            dp[i] = 1;//\u521d\u59cb\u5316\u6bcf\u79cd\u60c5\u51b5\u6700\u5c0f\u503c\u4e3a1\n            for (j = 0; j < i; j++)\n            {\n                if (x[i]>x[j] && dp[j] + 1>dp[i])//\u4ece0-i\u8fdb\u884c\u626b\u63cf,\u67e5\u627e\u8fb9\u754c\u5c0f\u4e8e\u5f53\u524d\u6700\u4f18\u89e3\u957f\u5ea6\u76f8\u7b49\u7684\u89e3\u4f18\u5316\u6700\u4f18\u89e3\n                    dp[i] = dp[j] + 1;//\u5982\u679c\u5141\u8bb8\u5b50\u5e8f\u5217\u76f8\u90bb\u5143\u7d20\u76f8\u540c  x[i]>=x[j]&&dp[j]+1>dp[i];\n            }\n        }\n        for (i = max_len = 0; i < n; i++)\n            max_len = max(max_len, dp[i]);//\u7b49\u5230\u6700\u5927\u5b50\u5e8f\u5217\u957f\u5ea6\n        cout << max_len << endl;\n    }\n    return 0;\n}\n```\n\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\n\nO(nlogn)\n\u89e3\u6cd5\n\n\u5728\u4e00\u5217\u6570\u4e2d\u5bfb\u627e\u4e00\u4e9b\u6570\uff0c\u8fd9\u4e9b\u6570\u6ee1\u8db3\uff1a\u4efb\u610f\u4e24\u4e2a\u6570a[i]\u548ca[j]\uff0c\u82e5i<j\uff0c\u5fc5\u6709a[i]<a[j]\uff0c\u8fd9\u6837\u6700\u957f\u7684\u5b50\u5e8f\u5217\u79f0\u4e3a\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u3002\n\n\u8bbedp[i]\u8868\u793a\u4ee5i\u4e3a\u7ed3\u5c3e\u7684\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u5219\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a\n\ndp[i] = max{dp[j]+1}, 1<=j<i,a[j]<a[i].\n\n\u8003\u8651\u4e24\u4e2a\u6570a[x]\u548ca[y]\uff0cx<y\u4e14a[x]<a[y],\u4e14dp[x]=dp[y]\uff0c\u5f53a[t]\u8981\u9009\u62e9\u65f6\uff0c\u5230\u5e95\u53d6\u54ea\u4e00\u4e2a\u6784\u6210\u6700\u4f18\u7684\u5462\uff1f\u663e\u7136\u9009\u53d6a[x]\u66f4\u6709\u6f5c\u529b\uff0c\u56e0\u4e3a\u53ef\u80fd\u5b58\u5728a[x]<a[z]<a[y]\uff0c\u8fd9\u6837a[t]\u53ef\u4ee5\u83b7\u5f97\u66f4\u4f18\u7684\u503c\u3002\u5728\u8fd9\u91cc\u7ed9\u6211\u4eec\u4e00\u4e2a\u542f\u793a\uff0c\u5f53dp[t]\u4e00\u6837\u65f6\uff0c\u5c3d\u91cf\u9009\u62e9\u66f4\u5c0f\u7684a[x].\n\n\u6309dp[t]=k\u6765\u5206\u7c7b\uff0c\u53ea\u9700\u4fdd\u7559dp[t]=k\u7684\u6240\u6709a[t]\u4e2d\u7684\u6700\u5c0f\u503c\uff0c\u8bbeg[k]\u8bb0\u5f55\u8fd9\u4e2a\u503c\uff0cg[k]=min{a[t],dp[t]=k}\u3002\n\n\u8fd9\u65f6\u6ce8\u610f\u5230g\u7684\u4e24\u4e2a\u7279\u70b9\uff08\u91cd\u70b9\uff09\uff1a\n\ng[k]\u5728\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u5355\u8c03\u4e0d\u5347\uff1b\n\ng\u6570\u7ec4\u662f\u6709\u5e8f\u7684\uff0cg[1]<g[2]<..g[n]\u3002\n\n\u5229\u7528\u8fd9\u4e24\u4e2a\u6027\u8d28\uff0c\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u6c42\u89e3\uff1a\n\n(1).\u8bbe\u5f53\u524d\u5df2\u6c42\u51fa\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u4e3alen\uff08\u521d\u59cb\u65f6\u4e3a1\uff09\uff0c\u6bcf\u6b21\u8bfb\u5165\u4e00\u4e2a\u65b0\u5143\u7d20x\uff1a\n\n(2).\u82e5x>g[len]\uff0c\u5219\u76f4\u63a5\u52a0\u5165\u5230d\u7684\u672b\u5c3e\uff0c\u4e14len++\uff1b\uff08\u5229\u7528\u6027\u8d282\uff09\n\n\u5426\u5219\uff0c\u5728g\u4e2d\u4e8c\u5206\u67e5\u627e\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u6bd4x\u5c0f\u7684\u6570g[k]\uff0c\u5e76g[k+1]=x\uff0c\u5728\u8fd9\u91ccx<=g[k+1]\u4e00\u5b9a\u6210\u7acb\uff08\u6027\u8d281,2\uff09\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\uff1a\n```\n#include<iostream>\n#include<cstring>\nusing namespace std;\nconst int maxn = 50001;\nint binary_search(int key, int *g, int low, int high)\n{\n    while (low < high)\n    {\n        int mid = (low + high) >> 1;\n        if (key >= g[mid])\n            low = mid + 1;\n        else\n            high = mid;\n    }\n    return low;\n}\nint main()\n{\n    int i, j, a[maxn], g[maxn], n, len;\n    while (cin >> n)\n    {\n        memset(g, 0, sizeof(g));\n        for (i = 0; i < n; i++)\n            cin >> a[i];\n        g[1] = a[0], len = 1;//\u521d\u59cb\u5316\u5b50\u5e8f\u5217\u957f\u5ea6\u4e3a1\uff0c\u6700\u5c0f\u53f3\u8fb9\u754c\n        for (i = 1; i < n; i++)\n        {\n            if (g[len] < a[i])//(\u5982\u679c\u5141\u8bb8\u5b50\u5e8f\u5217\u76f8\u90bb\u5143\u7d20\u76f8\u540c g[len]<=a[i],\u9ed8\u8ba4\u4e3a\u4e0d\u7b49\uff09\n                j = ++len; //a[i]>g[len],\u76f4\u63a5\u52a0\u5165\u5230g\u7684\u672b\u5c3e,\u4e14len++\n            else\n                j = binary_search(a[i], g, 1, len + 1);\n            g[j] = a[i];//\u4e8c\u5206\u67e5\u627e,\u627e\u5230\u7b2c\u4e00\u4e2a\u6bd4a[i]\u5c0f\u7684\u6570g[k],\u5e76g[k+1]=a[i]\n        }\n        cout << len << endl;\n    }\n    return 0;\n}\n  ```\n\u4f8b\u9898[https://www.luogu.org/problemnew/show/P1108](https://www.luogu.org/problemnew/show/P1108)",
        "postTime": 1551526097,
        "uid": 54465,
        "name": "JackcreaM",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT2827 \u3010LIS\u3011"
    },
    {
        "content": "\u4f18\u5316\u7b97\u6cd5\uff1a\u7528\u7684\u662f\u8d2a\u5fc3\u7b56\u7565\n       \u6570\u7ec4up[i]\u7684\u610f\u4e49\u662f\uff0c up[i]\u4e2d\u4fdd\u5b58\u7684\u662f\u957f\u5ea6\u4e3ai\u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u4e2d\u7ed3\u675f\u5143\u7d20\u6700\u5c0f\u7684\u90a3\u4e2a\u5143\u7d20\u7684\u503c\uff0c\u6bd4\u5982\u957f\u5ea6\u4e3a3\u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u67092\u4e2a\uff0c\u4e00\u4e2a\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e3a800\uff0c\u53e6\u4e00\u4e2a\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e3a799\uff0c\u90a3\u4e48up[3]=799\u3002up[i]\u4e2d\u7684\u5143\u7d20\u90fd\u5c3d\u53ef\u80fd\u7684\u5c0f\uff0c\u8fd9\u6837\u624d\u6709\u6f5c\u529b\u63a5\u4e0a\u66f4\u591a\u5927\u7684\u6570\u3002\n      \u8d2a\u5fc3\u7b56\u7565\uff1a\u6211\u4eec\u603b\u662f\u5e0c\u671b\u65b0\u7684\u5143\u7d20\u80fd\u52a0\u5165\u5230\u957f\u5ea6\u6700\u957f\u4e14\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u6700\u5c0f\u7684\u5e8f\u5217\u4e2d\uff0c\u8fd9\u6837\u6784\u6210\u7684\u4e0a\u5347\u5e8f\u5217\u624d\u4f1a\u66f4\u6709\u201c\u6f5c\u529b\u201d\u63a5\u4e0a\u66f4\u591a\u7684\u5143\u7d20\u3002\n       up[ ]\u6570\u7ec4\u7684\u957f\u5ea6\u4e3a\u6240\u6c42\n   ```c\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint a[100010],up[100010];\nint main()\n{\n\tint m;\n\tcin>>m;\n\tfor(int i=1;i<=m;i++)\n\tcin>>a[i];\n\tup[1]=a[1];\n\tint ans=1;\n\tfor(int i=2;i<=m;i++)\n\t{\n\t\tint pos=lower_bound(up+1,up+ans+1,a[i])-(up+1)+1;//lower_bound() \u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u6307\u5411\u952e\u503c<= a[i]\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\n\t\tup[pos]=a[i];\n\t\tans=max(ans,pos);\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n\n```   \n",
        "postTime": 1545461210,
        "uid": 150747,
        "name": "MSM2004",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT2827 \u3010LIS\u3011"
    }
]