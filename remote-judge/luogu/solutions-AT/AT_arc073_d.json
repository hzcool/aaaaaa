[
    {
        "content": "**\u9898\u76ee\u7b80\u5316**\n\n- \u7ed9\u51fa\u4e24\u4e2a\u4f4d\u7f6e\uff0c\u5e76\u7ed9\u51fa $Q$ \u4e2a\u8be2\u95ee\uff0c\u8981\u6c42\u4efb\u610f\u79fb\u52a8\u5176\u4e2d\u4e00\u4e2a\u7684\u4f4d\u7f6e\u5230\u6307\u5b9a\u4f4d\u7f6e\uff0c\u65f6\u95f4\u6d88\u8017\u5c31\u662f\u79fb\u52a8\u7684\u8ddd\u79bb\uff0c\u95ee\u6700\u5c0f\u7684\u5b8c\u6210\u95ee\u9898\u7684\u65f6\u95f4\n\n\u6734\u7d20\u7684DP $i$ \u8bb0\u5f55\u6b21\u6570\uff0c\u5176\u4e2d\u6709\u4e00\u4e2a\u68cb\u5b50\u4e00\u5b9a\u5728 $x_i$ \u7684\u4f4d\u7f6e\u4e0a\uff0c \u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u8bb0\u5f55\u53e6\u4e00\u4e2a\u4f4d\u7f6e\u5728\u54ea\n$$\nf_{i,j}+abs(x_i-x_{i+1})\\to f_{i+1,j}\n\\\\ \\min\\{f_{i,j}+abs(j-x_{i+1})\\}\\to f_{i+1,x_i}\n$$\n\u6ce8\u610f\u4e0a\u9762\u6700\u540e\u4e00\u4e2a\u662f $x_i$ \u800c\u4e0d\u662f $x_{i+1}$ \u56e0\u4e3a\u7b2c\u4e8c\u7ef4\u8bb0\u5f55\u7684\u662f\u4e0d\u662f\u5f53\u524d\u4f4d\u7f6e\u7684\u4f4d\u7f6e\u3002\n\n\u9996\u5148**\u6df7\u52a8\u6570\u7ec4\u4f18\u5316\u7a7a\u95f4**\uff0c\u7136\u540e\u518d\u89c2\u5bdf\u67ff\u5b50\u7684\u6027\u8d28\uff1a\n\n\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u8f6c\u79fb\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u6df7\u52a8\u540e\uff0c\u662f\u5bf9\u6574\u4e2a\u533a\u95f4\u4fee\u6539\u540c\u4e00\u4e2a\u5b9a\u503c\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u8f6c\u79fb\uff0c\u65e0\u8bba $j$ \u7684\u4f4d\u7f6e\uff0c\u6539\u53d8\u7684\u53ea\u6709 $x_{i+1}$\uff0c\u4e5f\u5c31\u662f\u5feb\u901f\u7ef4\u62a4\u8fd9\u4e2a\u7684\u6700\u5c0f\u503c\u3002\n\n\u6211\u4eec\u7528\u626b\u63cf\u7ebf\u7684\u601d\u60f3\uff0c\u7ebf\u6bb5\u6811\u8bb0\u5f55 $j$ \uff0c$i$ \u505a\u65f6\u95f4\u7ebf\u3002\n\n- \u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u64cd\u4f5c\uff0c\u533a\u95f4\u4fee\u6539\u5c31\u597d\u3002\n- \u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\uff0c\u627e\u5230\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u5355\u70b9\u4fee\u6539\u5c31\u597d\u3002\n\n\u6240\u4ee5\u8c8c\u4f3c\u662f\u533a\u95f4\u4fee\u6539\u548c\u5355\u70b9\u4fee\u6539\uff1f\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u7c7b\u64cd\u4f5c\u6c42\u6700\u503c\uff0c\u53ef\u4ee5\u628a\u7edd\u5bf9\u503c\u62c6\u5f00\uff0c\u7136\u540e\u6c42\u4e24\u4e2a\u533a\u95f4\u7684\u6700\u5c0f\u503c\uff0c\u6700\u540e\u5408\u5e76\u5c31\u597d\u3002    \n\n\u6ce8\u610f\u5f00 `ll`\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n+Q\\log n)$\n\n**\u51e0\u4e2a\u5751\u70b9**\n\n- \u56e0\u4e3a\u6eda\u6389\u4e86\u4e00\u7ef4\uff0c\u6240\u4ee5\u5fc5\u987b\u4fdd\u8bc1\u8f6c\u79fb\u7684 $dp$ \u6570\u7ec4\u662f\u4e0a\u4e00\u7ef4\u7684\u3002\n- \u6839\u636e\u8f6c\u79fb\u65b9\u7a0b\u53ef\u77e5\uff0c\u5728\u4e00\u6b21\u8f6c\u79fb\u65f6\uff0c\u53ef\u80fd\u66f4\u6539\u4e00\u4e2a\u4f4d\u7f6e\u4e24\u6b21\uff0c\u8fd9\u65f6\u9700\u8981\u4fdd\u7559\u6700\u5c0f\u503c\uff0c\u5177\u4f53\u5b9e\u73b0\u662f\u5728\u7ebf\u6bb5\u6811\u4fee\u6539\u65f6\u53d6 `min`\n\n\u7b2c\u4e00\u6b21\u505a\u5230\u7ebf\u6bb5\u6811\u4f18\u5316 dp\uff0c\u8f6c\u79fb\u4e0a\u8c03\u4e86\u597d\u4e45\u3002\n\n```c\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <string>\nusing namespace std;\n#define int long long\n#define root 1,n,1\n#define lson l,m,rt<<1\n#define rson m+1,r,rt<<1|1\nconst int B=2e5+10;\nconst int inf=0x3f3f3f3f;\nint read()\n{\n\tint x=0,ch=getchar();\n\twhile (!isdigit(ch)) ch=getchar();\n\twhile (isdigit(ch)) x=x*10+ch-'0',ch=getchar();\n\treturn x;\n} \nstruct node\n{\n\tint l,r,sum,col;\n\tint minx1,minx2;\n\tnode() {l=r=sum=col=0,minx1=minx2=inf;}\n\tvoid init(int l_,int r_) {l=l_,r=r_,sum=0,minx1=inf,minx2=inf;}\n}z[B<<2];\nint n,M,s,t;\nnode operator +(const node &l,const node &r)\n{\n\tnode p;\n\tp.l=l.l,p.r=r.r,p.minx1=min(l.minx1,r.minx1), p.minx2=min(l.minx2,r.minx2);\n\tp.col=0;\n\treturn p; \n} \nvoid update(int rt) { z[rt]=z[rt<<1]+z[rt<<1|1];}\nvoid color(int rt,int v) {z[rt].col+=v;z[rt].minx1+=v, z[rt].minx2+=v; return;}\nvoid push(int rt) {if (z[rt].col) {color(rt<<1,z[rt].col); color(rt<<1|1,z[rt].col); z[rt].col=0;} }\nvoid build(int l,int r,int rt) \n{\n\tif (l==r) {z[rt].init(l,r);return;} \n\tint m=l+r>>1; \n\tbuild(lson); build(rson); \n\tupdate(rt);\n}\nvoid modify(int l,int r,int rt,int nowl,int nowr,int v)\t\n{\n\tif (nowl<=l && r<=nowr) {color(rt,v);return;}\n}//\u533a\u95f4\u64cd\u4f5c\nvoid one_modify(int l,int r,int rt,int x,int v)\n{\n\tif (l==r) {z[rt].minx1=min(z[rt].minx1,v+x); z[rt].minx2=min(z[rt].minx2,v-x);return;}\n\tint m=l+r>>1; push(rt); \n\tif (x<=m) one_modify(lson,x,v);\n\telse if (m<x) one_modify(rson,x,v);\n\tupdate(rt); \n} \nnode query(int l,int r,int rt,int nowl,int nowr)\n{\n\tif (nowl<=l && r<=nowr) return z[rt];\n\tint m=l+r>>1;\n\tpush(rt);\n\tif (nowl<=m)\n\t{\n\t\tif (m<nowr) return query(lson,nowl,nowr)+query(rson,nowl,nowr);\n\t\treturn query(lson,nowl,nowr); \n\t}\n\treturn query(rson,nowl,nowr);\n} \nint All_query(int l,int r,int rt,int nowl,int nowr)\n{\n\tif (l==r) return z[rt].minx1-z[rt].l;\n\tint m=l+r>>1;\n\tpush(rt);\n\tif (nowl<=m)\n\t{\n\t\tif (m<nowr) return min(All_query(lson,nowl,nowr),All_query(rson,nowl,nowr));\n\t\treturn All_query(lson,nowl,nowr); \n\t}\n\treturn All_query(rson,nowl,nowr);\n}\nint m;\nint x[B];\nsigned main()\n{\n\tn=read(),M=read(),s=read(),t=read();\n\tbuild(root);\n\tx[0]=s; one_modify(root,t,0);\n\tfor (int i=1;i<=M;i++)\n\t{\n\t\tx[i]=read();\n\t\tint fail=query(root,x[i],n).minx1-x[i];\n\t\tint bef\t=query(root,1,x[i]).minx2+x[i];//\u5f97\u5230\u4e24\u4e2a\u7684\u6700\u5c0f\u503c\n\t\tfail=min(fail,bef);\n\t\tmodify(root,1,n,abs(x[i]-x[i-1]));\n\t\tone_modify(root,x[i-1],fail); \n\t}\n\tprintf(\"%lld\\n\",All_query(root,1,n));\n\t\n}\n```\n\u5e0c\u671b\u901a\u8fc7\uff0c\u87f9\u87f9\u3002",
        "postTime": 1628301262,
        "uid": 230808,
        "name": "Zxsoul",
        "ccfLevel": 4,
        "title": "AT2558 [ARC073D] Many Moves \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u91cc\u7684dp\u72b6\u6001\u548c\u53e6\u4e00\u7bc7\u9898\u89e3\u7684\u4f3c\u4e4e\u4e0d\u592a\u4e00\u6837\uff0c\u4f46\u662f\u90fd\u7528\u4e86\u7ebf\u6bb5\u6811\u4f18\u5316dp\u2026\u2026\n\n\u9996\u5148\u6700\u65e0\u8111\u7684\u66b4\u529b\u5c31\u662f$dp[i][a][b]$\u8868\u793a\u5904\u7406\u5b8ci\u4e2a\u64cd\u4f5c\u4e4b\u540e\u8fd9\u4e24\u4e2a\u68cb\u5b50\u7684\u4f4d\u7f6e\u5206\u522b\u5728a\u548cb\u7684\u6700\u5c0f\u4ee3\u4ef7\uff0c\u8fd9\u4e2a\u5927\u6982\u662f$O(n^3)$~$O(n^4)$\u7684\u3002\n\n\u7136\u540e\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u4f18\u5316\u5c31\u662f\u8fdb\u884c\u5b8ci\u64cd\u4f5c\u4e4b\u540e**\u4e00\u5b9a\u4f1a\u6709\u4e00\u4e2a\u68cb\u5b50\u5728$x_i$\u4f4d\u7f6e**\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e2a\u72b6\u6001\u6539\u4e3a$dp[i][j]$\u8868\u793a\u524di\u4e2a\u64cd\u4f5c\uff0c\u4e0d\u5728$x_i$\u7684\u90a3\u4e2a\u68cb\u5b50\u5728$j$\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\n\n\u7136\u540e\u6211\u60f3\u5230\u8fd9\u4e86\u4e4b\u540e\u89c9\u5f97\u8fd9\u4e5f\u662f\u66b4\u529b\u5c31\u6254\u5230\u4e00\u8fb9\u4e86\uff0c\u4f46\u662f\u6211\u4eec\u4ed4\u7ec6\u8ba8\u8bba\u4e00\u4e0b\u8fd9\u4e2a\u7684\u8f6c\u79fb\u60c5\u51b5\u4e4b\u540e\u5c31\u4f1a\u2014\u2014\n\n\u2460$j\\not=x_{i-1}$\uff0c\u90a3\u4e48\u663e\u7136\u8fd9\u4e2a\u5728j\u7684\u68cb\u5b50\u5728\u4e0a\u4e00\u6b65\u4e5f\u6ca1\u6709\u79fb\u52a8\uff0c\u8fd9\u4e00\u6b65\u79fb\u52a8\u5230$x_i$\u7684\u68cb\u5b50\u5728\u4e0a\u4e00\u6b65\u7684\u65f6\u5019\u4e00\u5b9a\u5728$x_{i-1}$\uff0c\u6240\u4ee5\u5c31\u662f$dp[i-1][j]+|x_i-x_{i-1}|$\u3002\n\n\u2461$j=x_{i-1}$\uff0c\u5f53\u7136\u8fd9\u4e2a\u4e5f\u53ef\u4ee5\u7528\u2460\u7684\u8f6c\u79fb\uff0c\u4f46\u662f\u8fd9\u5c31\u591a\u4e86\u4e00\u79cd\u60c5\u51b5\u5373\u4e0a\u4e00\u6b65\u4e0d\u662f$x_{i-1}$\u7684\u68cb\u5b50\u5728\u8fd9\u4e00\u6b65\u79fb\u5230\u4e86$x_i$\uff0c\u6211\u4eec\u679a\u4e3e\u8fd9\u4e2a\u68cb\u5b50\u4e0a\u4e00\u6b65\u5728\u4ec0\u4e48\u4f4d\u7f6e\u5373$min\\{dp[i-1][k]+|x_i-k|\\}$\uff0c\u7136\u540e\u6839\u636e\u5957\u8def\u6211\u4eec\u8ba8\u8bbak\u628a\u8fd9\u4e2a\u7edd\u5bf9\u503c\u62c6\u5f00\uff0c\u5373$k<=x_i$\u65f6\u4e3a$min\\{dp[i-1][k]-k\\}+x_i$\uff0c$k>=x_i$\u65f6\u4e3a$min\\{dp[i-1][k]+k\\}-x_i$\u3002\n\n\u4e8e\u662f\u4e00\u5207\u5c31\u90fd\u5f88\u663e\u7136\u4e86\uff0c\u6211\u4eec\u628a\u8fd9\u4e2a\u4e8c\u7ef4\u72b6\u6001\u7684dp\u653e\u5230\u7ebf\u6bb5\u6811\u4e0a\u50cf\u6eda\u52a8\u6570\u7ec4\u4e00\u6837\u6eda\u52a8\u5c31\u884c\u4e86\uff0c\u90a3\u4e48\u8f6c\u79fb\u2461\u5c31\u5728\u7ebf\u6bb5\u6811\u4e0a\u7ef4\u62a4\u533a\u95f4\u5185\u6700\u5c0f\u7684$dp[k]+k$\u4e0e$dp[k]-k$\uff08\u8fd9\u91cc\u7684dp\u628a\u7b2c\u4e00\u7ef4\u7701\u7565\u4e86\uff0c\u7b2c\u4e8c\u7ef4\u662f\u7ebf\u6bb5\u6811\u7684\u4e0b\u6807\uff09\u7136\u540e\u5728\u533a\u95f4\u4e0a\u67e5\uff0c\u8f6c\u79fb\u2460\u5728\u7ebf\u6bb5\u6811\u4e0a\u6253\u6807\u8bb0\u5373\u53ef\u3002\n\n\u4e0a\u4ee3\u7801~\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#define ll long long\n#define ls(_o) (_o << 1)\n#define rs(_o) ((_o << 1) | 1)\n#define abs(_o) ((_o < 0) ? -(_o) : _o)\nusing namespace std;\nnamespace ywy {\n\tinline int get() {\n\t    int n = 0;\n\t    char c;\n\t    while ((c = getchar()) || 23333) {\n\t        if (c >= '0' && c <= '9')\n\t            break;\n\t        if (c == '-')\n\t            goto s;\n\t    }\n\t    n = c - '0';\n\t    while ((c = getchar()) || 23333) {\n\t        if (c >= '0' && c <= '9')\n\t            n = n * 10 + c - '0';\n\t        else\n\t            return (n);\n\t    }\n\ts:\n\t    while ((c = getchar()) || 23333) {\n\t        if (c >= '0' && c <= '9')\n\t            n = n * 10 - c + '0';\n\t        else\n\t            return (n);\n\t    }\n\t}\n\tll min1[1000001], min2[1000001], adds[1000001];\n\tint x[200001];\n\tinline void down(int tree) {\n\t    if (!adds[tree])\n\t        return;\n\t    ll c = adds[tree];\n\t    adds[tree] = 0;\n\t    adds[ls(tree)] += c;\n\t    adds[rs(tree)] += c;\n\t    min1[ls(tree)] += c;\n\t    min2[ls(tree)] += c;\n\t    min1[rs(tree)] += c;\n\t    min2[rs(tree)] += c;\n\t}\n\tinline void up(int tree) {\n\t    min1[tree] = min(min1[ls(tree)], min1[rs(tree)]);\n\t    min2[tree] = min(min2[ls(tree)], min2[rs(tree)]);\n\t}\n\tvoid setpt(int l, int r, int tree, int pt, ll num) {\n\t    if (l == r) {\n\t        min1[tree] = min(min1[tree], num - l);\n\t        min2[tree] = min(min2[tree], num + l);\n\t        return;\n\t    }\n\t    int mid = (l + r) >> 1;\n\t    down(tree);\n\t    if (pt <= mid)\n\t        setpt(l, mid, ls(tree), pt, num);\n\t    else\n\t        setpt(mid + 1, r, rs(tree), pt, num);\n\t    up(tree);\n\t}\n\tll query1(int rl, int rr, int l, int r, int tree) {\n\t    if (rl == l && rr == r)\n\t        return (min1[tree]);\n\t    int mid = (l + r) >> 1;\n\t    down(tree);\n\t    if (rl > mid)\n\t        return (query1(rl, rr, mid + 1, r, rs(tree)));\n\t    if (rr <= mid)\n\t        return (query1(rl, rr, l, mid, ls(tree)));\n\t    return (min(query1(rl, mid, l, mid, ls(tree)), query1(mid + 1, rr, mid + 1, r, rs(tree))));\n\t}\n\tll query2(int rl, int rr, int l, int r, int tree) {\n\t    if (rl == l && rr == r)\n\t        return (min2[tree]);\n\t    int mid = (l + r) >> 1;\n\t    down(tree);\n\t    if (rl > mid)\n\t        return (query2(rl, rr, mid + 1, r, rs(tree)));\n\t    if (rr <= mid)\n\t        return (query2(rl, rr, l, mid, ls(tree)));\n\t    return (min(query2(rl, mid, l, mid, ls(tree)), query2(mid + 1, rr, mid + 1, r, rs(tree))));\n\t}\n\tll query(int l, int r, int tree) {\n\t    if (l == r)\n\t        return (min1[tree] + l);\n\t    int mid = (l + r) >> 1;\n\t    down(tree);\n\t    return (min(query(l, mid, ls(tree)), query(mid + 1, r, rs(tree))));\n\t}\n\tvoid ywymain() {\n\t    int n = get(), q = get(), a = get(), b = get();\n\t    x[0] = a;\n\t    memset(min1, 0x3f, sizeof(min1));\n\t    memset(min2, 0x3f, sizeof(min2));\n\t    setpt(1, n, 1, b, 0);\n\t    for (register int i = 1; i <= q; i++) {\n\t        x[i] = get();\n\t        ll cjr = min(query1(1, x[i], 1, n, 1) + x[i], query2(x[i], n, 1, n, 1) - x[i]);\n\t        adds[1] += abs(x[i] - x[i - 1]);\n\t        min1[1] += abs(x[i] - x[i - 1]);\n\t        min2[1] += abs(x[i] - x[i - 1]);\n\t        setpt(1, n, 1, x[i - 1], cjr);\n\t    }\n\t    cout << query(1, n, 1) << endl;\n\t}\n}\nint main() {\n    ywy::ywymain();\n    return (0);\n}\n\n```",
        "postTime": 1552208450,
        "uid": 125124,
        "name": "ywy_c_asm",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 AT2558 \u3010Many Moves\u3011"
    },
    {
        "content": "\u8003\u8651dp\u3002\u8bbef\\[i\\]\u8868\u793a\u4e00\u4e2a\u68cb\u5b50\u4f4d\u4e8ei\uff0c\u53e6\u4e00\u4e2a\u68cb\u5b50\u4f4d\u4e8ei-1\u65f6\u7684\u6700\u5c0f\u4ee3\u4ef7\uff0c\u7136\u540e\u4e0d\u96be\u5217\u51fan\u00b2\u7684dp\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$$f_{i}=\\min\\limits_{j=1}^{i-1}\\left(f_j+\\sum\\limits_{k=j+1}^{i-1}\\Delta_k+|x_i-x_{j-1}|\\right)$$\n\n\u5176\u4e2d$\\Delta_k=|x_k-x_{k-1}|$\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u6c42\u51fa$\\Delta_k$\u7684\u524d\u7f00\u548c$sum$\uff0c\u7136\u540e\u5f0f\u5b50\u53ef\u4ee5\u5316\u4e3a\uff1a\n\n$$f_{i}=\\min\\limits_{j=1}^{i-1}\\left(f_j-sum_j+|x_i-x_{j-1}|\\right)+sum_{i-1}$$\n\n\u533a\u95f4\u6700\u5c0f\u503c\u8fd9\u79cd\u4e1c\u897f\uff0c\u7528\u7ebf\u6bb5\u6811\u641e\u641e\u5c31\u597d\u4e86\u3002\u4f46\u6709\u4e2a\u7edd\u5bf9\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u7ef4\u62a4\u4e24\u9897\u7ebf\u6bb5\u6811\uff0c\u4e00\u68f5\u5b58$f_j-sum_j-x_{j-1}$\uff0c\u53e6\u4e00\u68f5\u5b58$f_j-sum_j+x_{j-1}$\uff0c\u7136\u540e\u4ee5x\u7684\u503c\u4e3a\u4e0b\u6807\uff0c\u8fd9\u6837\u5bf9\u4e8e\u6bcf\u4e2ai\uff0c\u6211\u4eec\u53ea\u8981\u5728\u7ebf\u6bb5\u6811\u4e00\u7684\\[1, xi\\]\u4e2d\u67e5\u627e\u6700\u5c0f\u503c\uff0c\u627e\u5230\u6700\u5c0f\u503c\u52a0\u4e0axi+sum\\[i-1\\]\uff0c\u5728\u7ebf\u6bb5\u6811\u4e8c\u4e2d\u7684\u67e5\u627e\u4e5f\u662f\u7c7b\u4f3c\u7684\n\n\u7136\u540e\u521d\u503c\u6709\u70b9\u9ebb\u70e6\uff0c\u6211\u7684\u505a\u6cd5\u662f\u8bbex0=a\uff0c\u7136\u540ef\\[1\\]=|b-x1|\uff0c\u518d\u6309\u4e0a\u9762\u8bf4\u7684\u53bb\u505a\u3002\u4f46\u8fd9\u6837\u6d89\u53ca\u5230a\u548cb\u9009\u54ea\u4e2a\u7684\u95ee\u9898\uff0c\u6240\u4ee5\u8981\u8dd1\u5b8c\u4e00\u904d\u540e\u4ea4\u6362a\u548cb\u518d\u8dd1\u4e00\u904d\u53d6\u6700\u5c0f\u503c\u624d\u884c\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int S=(1<<20)+5;\nchar buf[S],*H,*T;\ninline char Get()\n{\n    if(H==T) T=(H=buf)+fread(buf,1,S,stdin);\n    if(H==T) return -1;return *H++;\n}\ninline int read()\n{\n    int x=0;char c=Get();\n    while(!isdigit(c)) c=Get();\n    while(isdigit(c)) x=x*10+c-'0',c=Get();\n    return x;\n}\n\ntypedef long long LL;\nconst int N=200010;\nint n,q,a,b,X[N];\nint delta[N];\nLL sumd[N],f[N];\n\nstruct SegmentTree\n{\n    LL mnv[N<<2];int leaf;\n    void build()\n    {\n        for(leaf=1;leaf<=(n+2);leaf<<=1);\n        for(int i=1;i<=leaf+n;i++) mnv[i]=INT64_MAX/3;\n    }\n    void modify(int k,LL x)\n    {\n        mnv[leaf+k]=min(mnv[leaf+k],x);\n        for(int i=(leaf+k)>>1;i;i>>=1)\n            mnv[i]=min(mnv[i<<1],mnv[i<<1|1]);\n    }\n    LL qmin(int l,int r)\n    {\n        LL res=INT64_MAX/3;\n        for(l=leaf+l-1,r=leaf+r+1;l^r^1;l>>=1,r>>=1)\n        {\n            if(~l&1) res=min(res,mnv[l^1]);\n            if(r&1) res=min(res,mnv[r^1]);\n        }\n        return res;\n    }\n}t1,t2;\n\nLL solve(int a,int b)\n{\n    X[0]=a;\n    for(int i=1;i<=q;i++)\n    {\n        delta[i]=abs(X[i]-X[i-1]);\n        sumd[i]=sumd[i-1]+delta[i];\n    }\n    f[1]=abs(b-X[1]);\n    t1.build();t2.build();\n    t1.modify(X[0],f[1]-sumd[1]-X[0]);\n    t2.modify(X[0],f[1]-sumd[1]+X[0]);\n    for(int i=2;i<=q;i++)\n    {\n        f[i]=t1.qmin(1,X[i])+X[i]+sumd[i-1];\n        f[i]=min(f[i],t2.qmin(X[i],n)-X[i]+sumd[i-1]);\n        t1.modify(X[i-1],f[i]-sumd[i]-X[i-1]);\n        t2.modify(X[i-1],f[i]-sumd[i]+X[i-1]);\n    }\n    LL ans=INT64_MAX/3;\n    for(int i=0;i<=q;i++) ans=min(ans,f[i]+sumd[q]-sumd[i]);\n    return ans;\n}\n\nint main()\n{\n    n=read();q=read();a=read();b=read();\n    for(int i=1;i<=q;i++) X[i]=read();\n    LL ans=min(solve(a,b),solve(b,a));\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```\n\n",
        "postTime": 1540108977,
        "uid": 20158,
        "name": "Ebola",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 AT2558 \u3010Many Moves\u3011"
    },
    {
        "content": "\u5947\u602a\u7684\u505a\u6cd5\u3002\n\n\u8bbe $dp_{i,j}$ \u8868\u793a\u6ee1\u8db3\u524d $i$ \u4e2a\u9650\u5236\u8fc7\u540e\uff0c\u4e00\u4e2a\u5728 $x_i$\uff0c\u53e6\u4e00\u4e2a\u5728 $j$ \u7684\u7b54\u6848\u3002\n\n\u8f6c\u79fb\uff1a$dp_{i,j} = \\min(dp_{i-1,j}+|x_{i-1}-x_i|,\\min_k(dp_{i-1,k}+|k-x_{i}|)+|j-x_{i-1}|)$\u3002\n\n\u5c06 $dp_{i,j}$ \u8003\u8651\u4e3a\u5173\u4e8e $j$ \u7684\u51fd\u6570\uff0c\u5219\u8f6c\u79fb\u5bf9\u5e94\u4e24\u4e2a\u64cd\u4f5c\uff1a\n\n- \u539f\u56fe\u50cf\u5411\u4e0a\u5e73\u79fb $|x_{i-1}-x_i|$ \u4e2a\u5355\u4f4d\uff1b\n- \u5c06\u56fe\u50cf\u4e0e\u4ee5 $(x_{i-1},\\min_k(dp_{i-1,k}+|k-x_{i}|))$ \u4e3a\u9876\u70b9\u7684 V \u5f62\u7edd\u5bf9\u503c\u51fd\u6570\u5bf9\u4f4d\u53d6 min\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u6837\u8f6c\u79fb\u5f97\u5230\u7684\u4efb\u610f $dp_{i}$ \u90fd\u662f\u4e00\u6761\u659c\u7387\u4ea4\u66ff\u4e3a $\\pm 1$ \u7684\u6298\u7ebf\u3002\n\n\u8003\u8651 $\\min_k(dp_{i-1,k}+|k-x_{i}|)$ \u5982\u4f55\u5feb\u901f\u6c42\u89e3\u3002\u56e0\u4e3a $dp_i$ \u7684\u659c\u7387\u7684\u7edd\u5bf9\u503c\u4e3a 1\uff0c\u56e0\u6b64\u4f7f\u5f97 $k$ \u5411 $x_{i-1}$ \u9760\u8fd1\u5fc5\u7136\u4e0d\u52a3\uff0c\u5373 $\\min_k(dp_{i-1,k}+|k-x_{i}|) = dp_{i-1,x_{i}}$\u3002\n\n\u6211\u4eec\u91c7\u7528 `std::set` \u7ef4\u62a4\u8fd9\u4e2a\u6298\u7ebf\u7684\u6240\u6709 \"\u8c37\"\uff0c\u6240\u6709\u64cd\u4f5c\u90fd\u53ef\u4ee5\u5b8c\u6210\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u5747\u644a $O(n\\log n)$\u3002\n\n```cpp\n#include <set>\n#include <cstdio>\nnamespace HyjMh{\n\tconst int maxn = 2e5+5;\n\ttypedef long long ll;\n\tint abs(int x){return x<0?-x:x;}\n\tll min(ll a,ll b){return a<b?a:b;}\n\tstruct pt{int x;ll y;bool operator <(pt b)const{return x<b.x;}};\n\ttypedef std::set<pt>::iterator it; \n\tint pipidashik,n,A,B,x[maxn];ll tgy;std :: set<pt> zzg;//zigzag\n\tll Val(int p){\n\t\tit i = zzg.lower_bound({p,0});ll r = 1e18;\n\t\tif(i != zzg.end())r = min(r,i->y+i->x-p);\n\t\tif(i != zzg.begin())--i,r = min(r,i->y+p-i->x);\n\t\treturn r+tgy;\n\t}\n\tvoid Ins(pt p){\n\t\tp.y -= tgy;\n\t\tit i = zzg.lower_bound(p),l,r;r = l = i;\n\t\tif(l != zzg.begin()){\n\t\t\t--l;while(l->y>=p.y+abs(l->x-p.x))\n\t\t\t\t{i = l;if(l == zzg.begin()){zzg.erase(i);break;}else --l,zzg.erase(i);}\n\t\t}\n\t\twhile(r != zzg.end() && r->y>=p.y+abs(r->x-p.x))i = r,++r,zzg.erase(i);\n\t\tzzg.insert(p);\n\t}\n\tint main(){\n\t\tscanf(\"%d %d %d %d\",&pipidashik,&n,&A,&B);\n\t\tfor(int i=1;i<=n;++i)scanf(\"%d\",&x[i]);\n\t\tzzg.insert({B,abs(A-x[1])});Ins({A,abs(B-x[1])});\n\t\tfor(int i=2,dlt;i<=n;++i)\n\t\t\tif(x[i] != x[i-1])dlt = abs(x[i]-x[i-1]),tgy += dlt,Ins({x[i-1],Val(x[i])-dlt});\n\t\tll ans = 1e18;for(pt p:zzg)ans = min(ans,p.y);\n\t\treturn printf(\"%lld\\n\",ans+tgy),0;\n\t}\n}\nint main(){return HyjMh::main();}\n```",
        "postTime": 1660204604,
        "uid": 114153,
        "name": "Sali\u0435ri",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 ARC073F"
    },
    {
        "content": "[\u9898\u9762](https://www.luogu.com.cn/problem/AT2558)\n\n\u7ebf\u6bb5\u6811\u4f18\u5316 dp \u8f6c\u79fb\u3002\n\n**solution**\n\ndp \u72b6\u6001\u80af\u5b9a\u662f\u8981\u8bbe\u4e24\u4e2a\u70b9\u7684\u4f4d\u7f6e\n\n\u56e0\u4e3a\u5728\u7b2c $i$ \u6b21\u64cd\u4f5c\u4e4b\u540e\uff0c\u4e00\u5b9a\u6709\u4e00\u4e2a\u70b9\u4f1a\u5728 $x_i$\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u8bbe\u53e6\u4e00\u4e2a\u70b9\u7684\u4f4d\u7f6e\u5c31\u597d\u3002\n\n$f_{i,j}$ \u8868\u793a\u6267\u884c\u4e86 $i$ \u6b21\u64cd\u4f5c\uff0c\u4e24\u4e2a\u70b9\u7684\u5206\u522b\u5728 $x_i$  \u548c $j$ \u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\n\n**\u8f6c\u79fb\uff1a**\n\n$f_{i, j} = f_{i - 1, j} + |x_i - x_{i - 1}|$ \n\n$f_{i, x_{i - 1}} = \\min\\{f_{i - 1, j} + |j - x_{i}|\\}$\n\n**\u4f18\u5316\uff1a**\n\n\u628a\u4e8c\u7ef4\u72b6\u6001\u653e\u5728\u7ebf\u6bb5\u6811\u4e0a\u6eda\u6389\u4e00\u7ef4\u3002\n\n\u4ee5 $j$ \u4e3a\u4e0b\u6807\uff0c$f_j$ \u4e3a\u6743\u503c\u5efa\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u5c31\u662f\u5168\u5c40\u52a0 $|x_i - x_{i + 1}|$\u3002 \n\n\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\uff0c\u9996\u5148\u5b83\u4e5f\u53ef\u4ee5\u6309\u7167\u7b2c\u4e00\u4e2a\u5f0f\u5b50\u8f6c\u79fb\uff0c\u5e94\u8be5\u5f88\u663e\u7136\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u5f0f\u5b50\uff0c\u6211\u4eec\u5206\u7c7b\u8ba8\u8bba\u628a\u7edd\u5bf9\u503c\u62c6\u5f00\uff0c\u5c31\u6210\u4e86\uff1a\n\n$j > x_{i}:~~ f_{i, x_i} = \\min(f_{i - 1, j} + j) - x_{i}$\n\n$j < x_{i}: ~~ f_{i, x_i} = \\min(f_{i - 1, j} - j) - x_{i}$\n\n\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u67e5\u8be2\u533a\u95f4 $[x_i, n]$ \u4e2d\u7684 $f_{j} + j$ \u548c\u67e5\u8be2 $[1, x_i]$ \u4e2d $f_{j} - j$ \u7684\u6700\u5c0f\u503c\u4e86\u3002 \n\n\u6240\u4ee5\u5728\u7ebf\u6bb5\u6811\u4e0a\u53ea\u9700\u8981\u7ef4\u62a4 $f_{j} + j$ \u548c $f_j - j$ \u5c31\u597d\u4e86\u3002\n\n\u590d\u6742\u5ea6\uff1a$O(n + Q \\log n)$\u3002\n\n**code**\n\n```c++\n/*\nwork by:Ariel_\n*/\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <queue>\n\n#include <algorithm>\n#define lson rt << 1\n#define rson rt << 1|1 \n#define int long long\n#define ll long long\n#define rg register\nusing namespace std;\nconst int MAXN = 200500;\nint read(){\n    int x = 0,f = 1; char c = getchar();\n    while(c < '0'||c > '9') {if(c == '-') f = -1; c = getchar();}\n    while(c >= '0' && c <= '9') {x = x*10 + c - '0'; c = getchar();}\n    return x*f;\n}\nint n, a, b, last, cur, tmp, T;\nll ret1, ret2, ret3;\nnamespace Tree{\n   struct Node{\n      ll val[3], tag;\n      Node(){memset(val, 63, sizeof val);}\n   }tree[MAXN << 2];\n   void push_up(int rt) {\n   \t  tree[rt].val[0] = min(tree[lson].val[0], tree[rson].val[0]);\n   \t  tree[rt].val[1] = min(tree[lson].val[1], tree[rson].val[1]);\n   \t  tree[rt].val[2] = min(tree[lson].val[2], tree[rson].val[2]);\n   }\n   void push_down(int rt) {\n   \t  if (!tree[rt].tag) return;\n   \t  tree[lson].val[0] += tree[rt].tag, tree[lson].val[1] += tree[rt].tag;\n\t  tree[lson].val[2] += tree[rt].tag, tree[lson].tag += tree[rt].tag;\n   \t  tree[rson].val[0] += tree[rt].tag, tree[rson].val[1] += tree[rt].tag;\n\t  tree[rson].val[2] += tree[rt].tag, tree[rson].tag += tree[rt].tag;\n\t  tree[rt].tag = 0;\n   } \n   void modify(int rt, int l, int r, int p, int v) {\n   \t    if (l == r){\n   \t      tree[rt].val[0] = v;\n\t\t  tree[rt].val[1] = v - p, tree[rt].val[2] = v + p;\n\t\t  return ;\n\t\t}\n\t\tpush_down(rt);\n\t\tint mid = l + r >> 1;\n\t\tif (p <= mid) modify(lson, l, mid, p, v);\n\t\telse modify(rson, mid + 1, r, p, v);\n\t\tpush_up(rt);\n   } \n   void add(ll v) {\n   \t  tree[1].tag += v;\n\t  tree[1].val[0] += v, tree[1].val[1] += v, tree[1].val[2] += v; \n   }\n   ll query(int rt, int l, int r, int L, int R, int id) {\n   \t   if (L <= l && r <= R){return tree[rt].val[id];}\n   \t   push_down(rt);\n   \t   int mid = l + r >> 1; ll ret = LONG_LONG_MAX;\n   \t   if (L <= mid) ret = min(ret, query(lson, l, mid, L, R, id));\n   \t   if (R > mid) ret = min(ret, query(rson, mid + 1, r, L, R, id));\n   \t   return ret;\n   }\n}\nusing namespace Tree;\nsigned main(){\n   n = read(), T = read(), a = read(), b = read();\n   last = read();\n   modify(1, 1, n, b, abs(a - last));\n   modify(1, 1, n, a, abs(b - last));\n   for(int i = 1; i < T; i++){\n   \t  cur = read(), tmp = abs(cur - last);\n   \t  ret1 = query(1, 1, n, cur, cur, 0) + tmp;\n   \t  ret2 = query(1, 1, n, 1, cur, 1) + cur;\n   \t  ret3 = query(1, 1, n, cur + 1, n, 2) - cur;\n   \t  ret1 = min(ret1, min(ret2, ret3));\n   \t  add(tmp);\n   \t  modify(1, 1, n, last, ret1);\n   \t  last = cur;\n   }\n   printf(\"%lld\", tree[1].val[0]);\n   puts(\"\");\n   return 0;\n}\n\n```\n\n",
        "postTime": 1629554068,
        "uid": 285235,
        "name": "Dita",
        "ccfLevel": 0,
        "title": "AT2558 [ARC073D] Many Moves"
    },
    {
        "content": "### \u66b4\u529b\uff1a\n\n\u8bbe $f_{i,j}$ $(i>j)$ \u8868\u793a\u4e00\u4e2a\u68cb\u5b50\u5728\u7b2c $i$ \u6b21\u8981\u6c42\u7684\u4f4d\u7f6e\uff0c \u53e6\u4e00\u4e2a\u68cb\u5b50\u5728 \u4f4d\u7f6e $j$ \u3002\n\n\u6709\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b \u3002\n\n\n$$\nf_{i,j}=f_{i-1,j}+|wz_i-wz_{i-1}|\n\n$$\n\n\u7279\u522b\u7684\uff0c\u5f53 $j=wz_{i-1}$ \u65f6\uff0c\u6709 \uff1a\n\n$$\nf_{i,j}=\\min{f_{i-1,k}+|wz_i-k|} \n$$\n\n\u6211\u4eec\u66b4\u529b $dp$ \uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2)$ \u3002\n\n### \u6b63\u89e3\uff1a\n\n\u89c2\u5bdf\u524d\u9762\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u7b2c\u4e00\u4e2a\u5f0f\u5b50\u5f88\u7b80\u5355\uff0c\u7b2c\u4e8c\u4e2a\u5f0f\u5b50\u53ea\u6709 $n$ \u4e2a $f$ \u4f1a\u8fd9\u4e48\u66f4\u65b0\uff0c\u6240\u4ee5\uff1a\n\n\u6211\u4eec\u5f00\u4e00\u4e2a\u7ebf\u6bb5\u6811\uff0c\u4fdd\u5b58\u5f53\u524d $f_i$ \uff0c\n\n\u6bcf\u6b21\u5230\u7b2c $i$ \u6b21\u79fb\u52a8\uff0c\n\n \u7b2c $wz_{i-1}$ \u4e2a\u4f4d\u7f6e\u5e94\u8be5\u66f4\u65b0\u5230 $ \\min{f_{i-1,k}+|wz_i-k|} $  \u3002\n \n\u7edd\u5bf9\u503c\u6211\u4eec\u53ef\u4ee5\u5206\u7c7b\u8ba8\u8bba\uff0c\u5206\u6210 $wz_i$ \u524d\u9762\u7684 \u548c \u540e\u9762\u7684 \u3002\n\n\u5176\u4ed6\u6240\u6709\u4f4d\u7f6e $+ |wz_i-wz_{i-1}| $ \u3002\n\n\n\u6211\u4eec\u5199\u4e2a\u533a\u95f4\u52a0\u533a\u95f4\u6c42\u6700\u5c0f\u503c\uff0c\u8fd9\u91cc\u6211\u5199\u4e86\u4e2a $f_{i,j}+j$ \u548c $f_{i,j}+n-j$\u7684\u4e24\u4e2a\u6700\u5c0f\u503c\uff08\u56e0\u4e3a\u524d\u9762\u7edd\u5bf9\u503c\u7684\u5206\u7c7b\u8ba8\u8bba\uff09\u3002\n\n\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(nlogn)$ \u3002\n\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst long long int N=200010,inf=1e12;\nlong long int n,Q,A,B,x[N];\nlong long int ans1[N<<2],ans2[N<<2],tag[N<<2];\nlong long int ls(long long int x){return x<<1;}\nlong long int rs(long long int x){return x<<1|1;}\nvoid push_up(long long int p){\n\tans1[p]=min(ans1[ls(p)],ans1[rs(p)]);\n\tans2[p]=min(ans2[ls(p)],ans2[rs(p)]);\n}\nvoid f(long long int p,long long int l,long long int r,long long int k){\n\tans1[p]+=k;\n\tans2[p]+=k;\n\ttag[p]+=k;\n}\nvoid push_down(long long int p,long long int l,long long int r){\n\tlong long int mid=(l+r)>>1;\n\tf(ls(p),l,mid,tag[p]);\n\tf(rs(p),mid+1,r,tag[p]);\n\ttag[p]=0;\n}\nvoid build(long long int p,long long int l,long long int r){\n\tif(l==r){\n\t\tans1[p]=ans2[p]=inf;\n\t\tif(l==B){\n\t\t\tans1[p]=l;ans2[p]=n-l;\n\t\t}\n\t\treturn ;\n\t}\n\tlong long int mid=(l+r)>>1;\n\tbuild(ls(p),l,mid);\n\tbuild(rs(p),mid+1,r);\n\tpush_up(p);\n}\nvoid update(long long int p,long long int nl,long long int nr,long long int l,long long int r,long long int k){\n\tif(nl>nr)return ;\n\tif(nl<=l&&r<=nr){\n\t\tf(p,l,r,k);\n\t\treturn ;\n\t}\n\tpush_down(p,l,r);\n\tlong long int mid=(l+r)>>1;\n\tif(nl<=mid)update(ls(p),nl,nr,l,mid,k);\n\tif(mid+1<=nr)update(rs(p),nl,nr,mid+1,r,k);\n\tpush_up(p);\n}\nvoid update2(long long int p,long long int nn,long long int l,long long int r,long long int k){\n\tif(l==r){\n\t\tans1[p]=k+l;ans2[p]=k+n-l;\n\t\treturn ;\n\t}\n\tpush_down(p,l,r);\n\tlong long int mid=(l+r)>>1;\n\tif(nn<=mid)update2(ls(p),nn,l,mid,k);\n\tif(mid+1<=nn)update2(rs(p),nn,mid+1,r,k);\n\tpush_up(p);\n}\nlong long int query(long long int p,long long int nl,long long int nr,long long int l,long long int r,long long int flag){\n\tif(nl>nr)return inf;\n\tlong long int ans=inf;\n\tif(nl<=l&&r<=nr){\n\t\tif(flag==1)return ans1[p];\n\t\telse return ans2[p];\n\t}\n\tpush_down(p,l,r);\n\tlong long int mid=(l+r)>>1;\n\tif(nl<=mid)ans=min(ans,query(ls(p),nl,nr,l,mid,flag));\n\tif(mid+1<=nr)ans=min(ans,query(rs(p),nl,nr,mid+1,r,flag));\n\tpush_up(p);\n\treturn ans;\n}\nlong long int findans(long long int p,long long int l,long long int r){\n\tif(l==r)return ans1[p]-l;\n\tlong long int mid=(l+r)>>1;\n\tpush_down(p,l,r);\n\treturn min(findans(ls(p),l,mid),findans(rs(p),mid+1,r));\n}\nint main(){\n\tscanf(\"%lld%lld%lld%lld\",&n,&Q,&A,&B);\n\tfor(long long int i=1;i<=Q;i++){\n\t\tscanf(\"%lld\",&x[i]);\n\t}\n\tbuild(1,1,n);\n\tx[0]=A;\n\tfor(long long int i=1;i<=Q;i++){\n\t\tlong long int min1=query(1,1,x[i],1,n,2)-(n-x[i]);\n\t\tlong long int min2=query(1,x[i],n,1,n,1)-x[i];\n\t\tupdate(1,1,n,1,n,abs(x[i]-x[i-1]));\n\t\tupdate2(1,x[i-1],1,n,min(min1,min2));\n\t}\n\tprintf(\"%lld\\n\",findans(1,1,n));\n}\n```\n\n\n\n~~\u4f60\u4eec\u77e5\u9053\u6211\u5feb\u7701\u9009\u4e86\uff0c\u7ebf\u6bb5\u6811\u5230\u73b0\u5728\u8fd8\u5fd8\u5f00\u56db\u500d\u6570\u7ec4\u7684\u7edd\u671b\u5417~~\n\n\n\n\n",
        "postTime": 1615383176,
        "uid": 104319,
        "name": "Why_not_use_longlong",
        "ccfLevel": 0,
        "title": "AT2558 [ARC073D] Many Moves \u9898\u89e3"
    }
]