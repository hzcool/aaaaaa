[
    {
        "content": "\u8bb0\u4e00\u6761\u8fb9\u7684\u8986\u76d6\u6570\u4e3a\u6709\u591a\u5c11\u6761\u8def\u5f84\u7ecf\u8fc7\u4e86\u8fd9\u6761\u8fb9\u3002\u5982\u679c\u6bcf\u4e00\u6761\u8fb9\u7684\u8986\u76d6\u6570\u4e3a\u5076\u6570\u6b21\uff0c\u5bb9\u6613\u53d1\u73b0\u6bcf\u4e00\u4e2a\u8282\u70b9\u5728\u8def\u5f84\u4e2d\u4f5c\u4e3a\u7aef\u70b9\u51fa\u73b0\u7684\u6b21\u6570\u90fd\u662f\u5076\u6570\u6b21\u3002\n\n\u65e2\u7136\u8fd9\u6837\uff0c\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u6761\u8def\u5f84\uff0c\u6211\u4eec\u5c06\u8fd9\u6761\u8def\u5f84\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\u8fde\u4e00\u6761\u65e0\u5411\u8fb9\u3002\u663e\u7136\u6240\u6709\u7684\u70b9\u7684\u5ea6\u6570\u90fd\u662f\u5076\u6570\u6b21\u3002\u4e8e\u662f\u6211\u4eec\u5bf9\u6bcf\u4e2a\u8054\u901a\u5b50\u56fe\u8dd1\u6b27\u62c9\u56de\u8def\u6765\u5bf9\u8fd9\u4e2a\u65e0\u5411\u56fe\u5b9a\u5411\uff0c\u5373\u53ef\u6784\u9020\u51fa\u4e00\u79cd\u65b9\u6848\u4f7f\u5f97\u8def\u5f84\u4e0a\u7684\u8fb9\u4e24\u79cd\u65b9\u5411\u90fd\u88ab\u8986\u76d6\u3002\n\n\u800c\u4e14\u7531\u4e8e\u6b27\u62c9\u8def\u5f84\u6ee1\u8db3\u6bcf\u4e2a\u8282\u70b9\u51fa\u5ea6\u5165\u5ea6\u76f8\u540c\uff0c\u6240\u4ee5\u8fd9\u6837\u6784\u9020\u51fa\u6765\u7684\u65b9\u6848\u8fd8\u6ee1\u8db3\u4e24\u79cd\u65b9\u5411\u8986\u76d6\u7684 **\u6b21\u6570\u76f8\u540c**\uff01\n\n\u7136\u800c\u66f4\u591a\u7684\u60c5\u51b5\u662f\u5b58\u5728\u4e00\u4e9b\u8fb9\uff0c\u5b83\u7684\u8986\u76d6\u6570\u4e3a\u5947\u6570\uff0c\u600e\u4e48\u529e\u5462\uff1f\u9898\u76ee\u5e0c\u671b\u8ba9\u6bcf\u4e00\u6761\u8fb9\u4e24\u79cd\u65b9\u5411\u7684\u90fd\u5b58\u5728\u8986\u76d6\u3002\u4e8e\u662f\u5bf9\u4e8e\u8fd9\u4e9b\u8986\u76d6\u6570\u4e3a\u5947\u6570\u7684\u8fb9\uff0c\u6211\u4eec\u5e0c\u671b\u8fd9\u6761\u8fb9\u4e24\u79cd\u65b9\u5411\u7684\u8986\u76d6\u6570\u7684\u5dee **\u4e0d\u8d85\u8fc7 $1$** \uff0c\u5982\u679c\u6ee1\u8db3\u4e86\u8fd9\u4e2a\u66f4\u4e25\u5389\u7684\u6761\u4ef6\uff0c\u90a3\u9898\u76ee\u7684\u9650\u5236\u4e5f\u80fd\u6ee1\u8db3\u3002\n\n\u8003\u8651\u5982\u4f55\u8f6c\u5316\u4e3a\u6240\u6709\u8fb9\u7684\u8986\u76d6\u6570\u5747\u4e3a\u5076\u6570\u7684\u60c5\u51b5\u3002\u6211\u4eec\u53ef\u4ee5\u4eba\u4e3a\u5730\u52a0\u4e00\u4e9b\u8fb9\u3002\u6309\u7167\u6df1\u5ea6\u4ece\u4e0b\u5f80\u4e0a\u8003\u8651\uff0c\u5bf9\u4e8e\u70b9 $u$ \u7684\u4e00\u4e2a\u513f\u5b50 $v$\uff0c\u5982\u679c $v$ \u7684\u5ea6\u6570\u4e3a\u5947\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u5c06 $u,v$ \u8fde\u4e00\u6761\u65e0\u5411\u8fb9\uff0c\u8ba9 $v$ \u53d8\u6210\u5076\u6570\u5ea6\u3002\n\n\u8fd9\u91cc\u6709\u4e2a\u5c0f\u95ee\u9898\uff0c\u4f1a\u4e0d\u4f1a\u5230\u6700\u540e\u53ea\u5269\u4e0b\u6839\u662f\u5947\u6570\u5ea6\u5ea6\u5462\uff1f\u7b54\u6848\u662f\u4e0d\u4f1a\uff0c\u56e0\u4e3a\u4e00\u4e2a\u56fe\u7684\u5947\u6570\u5ea6\u70b9\u53ea\u6709\u5076\u6570\u4e2a\u3002\u6240\u4ee5\u603b\u80fd\u628a\u5b83\u4eec\u6d88\u9664\u3002\n\n\u5efa\u5b8c\u56fe\u540e\u8dd1\u6b27\u62c9\u56de\u8def\uff0c\u8bb0\u5f55\u6bcf\u6761\u8def\u5f84\u5bf9\u5e94\u7684\u65e0\u5411\u8fb9\u5b9a\u7684\u662f\u4ec0\u4e48\u5411\u5373\u53ef\u3002\n\n\u6700\u540e\u8fd8\u8981\u8f93\u51fa\u6bcf\u6761\u8fb9\u6743\u503c\u603b\u548c\uff0c\u5bf9\u4e8e\u6bcf\u6761\u8def\u5f84\u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u5b83\u7684\u65b9\u5411\uff0c\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u4e86\u8def\u5f84 $+1$\uff0c\u6c42\u4e00\u4e0b $\\texttt{lca}$\uff0c\u5728\u6811\u4e0a\u5dee\u5206\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u74f6\u9888\u5728 $\\texttt{lca}$ \u4e0a\u3002\u6811\u5256/\u500d\u589e\u590d\u6742\u5ea6 $O(n\\log n)$\uff0c\u56db\u6bdb\u5b50\u6811\u590d\u6742\u5ea6 $O(n)$\u3002~~\u5982\u679c\u60a8\u95f2\u7684\u8bdd~~\n\n\u4e0d\u8fc7\u672c\u9898 $n\\le 2000$\u3002~~\u5f3a\u70c8\u8c34\u8d23\u51fa\u9898\u4eba\u4e0d\u5f00\u6ee1\u8303\u56f4\u7684\u884c\u4e3a\uff0c\u5bb9\u6613\u8ba9\u4eba\u6000\u7591\u81ea\u5df1\u662f\u5047\u505a\u6cd5\u3002~~\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint N,M;\nconst int MAXN=2e3+10;\nvector<int> e[MAXN];\nstruct EDGE {\n\tint v,id;\n\tbool flag;\n\tEDGE *nxt,*rev;\n} *head[MAXN],*cur[MAXN];\nbool d[MAXN];\nvoid add(int u,int v,int id) {\n\tEDGE *A=new EDGE,*B=new EDGE;\n\t(*A)=(EDGE){v,id,0,head[u],B};\n\t(*B)=(EDGE){u,id,0,head[v],A};\n\thead[u]=A; head[v]=B;\n\td[u]^=1; d[v]^=1;\n}\nint x[MAXN],y[MAXN];\nbool ans[MAXN];\nint fa[MAXN],dep[MAXN],sze[MAXN],hvyson[MAXN],hvytop[MAXN];\nint c[MAXN][2];\nvoid dfs1(int x) {\n\tdep[x]=dep[fa[x]]+1;\n\tsze[x]=1;\n\tfor(int v : e[x]) {\n\t\tif(v!=fa[x]) {\n\t\t\tfa[v]=x;\n\t\t\tdfs1(v);\n\t\t\tsze[x]+=sze[v];\n\t\t\tif(sze[v]>sze[hvyson[x]]) hvyson[x]=v;\n\t\t\tif(d[v]) add(x,v,-1);\n\t\t}\n\t}\n}\nvoid dfs2(int x) {\n\tif(hvyson[fa[x]]==x) hvytop[x]=hvytop[fa[x]];\n\telse hvytop[x]=x;\n\tfor(int v : e[x])\n\t\tif(v!=fa[x]) dfs2(v);\n}\nvoid dfs3(int x) {\n\tfor(int vert; cur[x]; )\n\t\tif(!cur[x]->flag) {\n\t\t\tif(~(cur[x]->id)) ans[cur[x]->id]=(cur[x]->v==y[cur[x]->id]);\n\t\t\tcur[x]->flag=cur[x]->rev->flag=1;\n\t\t\tvert=cur[x]->v;\n\t\t\tcur[x]=cur[x]->nxt;\n\t\t\tdfs3(vert);\n\t\t} else cur[x]=cur[x]->nxt;\n}\nint getlca(int a,int b) {\n\twhile(hvytop[a]!=hvytop[b])\n\t\tif(dep[hvytop[a]]<dep[hvytop[b]])\n\t\t\tb=fa[hvytop[b]];\n\t\telse a=fa[hvytop[a]];\n\tif(dep[a]<dep[b]) return a;\n\treturn b;\n}\nint Ans;\nvoid dfs4(int x) {\n\tfor(int v : e[x])\n\t\tif(v!=fa[x]) {\n\t\t\tdfs4(v);\n\t\t\tAns+=(c[v][0]>0) + (c[v][1]>0);\n\t\t\tc[x][0]+=c[v][0];\n\t\t\tc[x][1]+=c[v][1];\n\t\t}\n}\nint main() {\n\tscanf(\"%d%d\",&N,&M);\n\tfor(int i=1,u,v; i<N; i++) {\n\t\tscanf(\"%d%d\",&u,&v);\n\t\te[u].push_back(v);\n\t\te[v].push_back(u);\n\t}\n\tfor(int i=1; i<=M; i++) {\n\t\tscanf(\"%d%d\",&x[i],&y[i]);\n\t\tadd(x[i],y[i],i);\n\t}\n\tdfs1(1);\n\tdfs2(1);\n\tfor(int i=1; i<=N; i++)\n\t\tcur[i]=head[i];\n\tfor(int i=1; i<=N; i++)\n\t\tif(cur[i]) dfs3(i);\n\tfor(int i=1,lca; i<=M; i++) {\n\t\tlca=getlca(x[i],y[i]);\n\t\tif(ans[i]) ++c[x[i]][0],++c[y[i]][1];\n\t\telse ++c[x[i]][1],++c[y[i]][0];\n\t\t--c[lca][0]; --c[lca][1];\n\t}\n\tdfs4(1);\n\tprintf(\"%d\\n\",Ans);\n\tfor(int i=1; i<=M; i++)\n\t\tif(ans[i]) printf(\"%d %d\\n\",x[i],y[i]);\n\t\telse printf(\"%d %d\\n\",y[i],x[i]);\n\treturn 0;\n}\n```",
        "postTime": 1635940850,
        "uid": 53118,
        "name": "gzw2005",
        "ccfLevel": 7,
        "title": "AGC025E Walking on a Tree"
    },
    {
        "content": "\u6807\u7b7e: \u6784\u9020\n\n\u8bb0 $c_e$ \u8868\u793a\u8fb9 $e$ \u88ab\u8def\u5f84\u7ecf\u8fc7\u4e86\u591a\u5c11\u6b21, \u7b54\u6848\u7684\u4e0a\u754c\u663e\u7136\u662f: $\\sum_{e\\in E} \\min\\{2,c_e\\}$.\n\n\u4e0b\u9762\u5c06\u8fde\u63a5 $u,v$ \u7684\u8fb9\u8bb0\u4e3a $(u,v)$ , \u7aef\u70b9\u4e3a $u,v$ \u7684\u8def\u5f84\u8bb0\u4e3a $[u,v]$ (\u4e2d\u62ec\u53f7\u5185\u987a\u5e8f\u4e0d\u4f53\u73b0\u65b9\u5411).\n\n\u8003\u8651\u4e0b\u8ff0\u6784\u9020\u65b9\u6cd5: \n\n\u4efb\u53d6\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9 $u$ , \u8bb0 $u$ \u7684\u7236\u4eb2\u8282\u70b9\u4e3a $v$ .\n\n- \u82e5 $c_{(u,v)}=0$ , \u76f4\u63a5\u5220\u9664 $u$ \u548c $(u,v)$ \u5bf9\u7b54\u6848\u6ca1\u6709\u5f71\u54cd.\n\n- \u82e5 $c_{(u,v)}>0$ , \u8986\u76d6 $(u,v)$ \u7684\u8def\u5f84\u5fc5\u7136\u662f $[u,a]$ \u7684\u5f62\u5f0f(\u6709\u4e00\u7aef\u4e3a $u$ ).\n  -  \u82e5 $c_{(u,v)}=1$ , $(u,v)$ \u7684\u8d21\u732e\u4e0e $[u,a]$ \u65b9\u5411\u65e0\u5173, \u628a $[u,a]$ \u6539\u6210 $[v,a]$ \u540e\u5220\u9664 $u$ \u548c $(u,v)$ , \u663e\u7136\u5bf9\u7b54\u6848\u6ca1\u6709\u5f71\u54cd.\n  - \u82e5 $c_{(u,v)}>1$ , \u6211\u4eec\u4efb\u53d6\u4e24\u6761\u7ecf\u8fc7 $(u,v)$ \u7684\u8def\u5f84 $[u,a],[u,b]$ \u5206\u522b\u5b9a\u5411\u4e3a $u\\to a,b\\to u$ , \u8bbe $[u,a],[u,b]$ \u7684\u5206\u53c9\u70b9\u4e3a $d$ , \u5219 $u$ \u5230 $d$ \u7684\u6240\u6709\u8fb9\u7684\u8d21\u732e\u90fd\u4e3a $2$ , \u4e24\u8def\u5f84\u5206\u53c9\u540e\u7684\u90e8\u5206\u53ef\u4ee5\u7b49\u4ef7\u4e0e\u4e00\u6761\u8def\u5f84 $[a,b]$ ( $[a,b]$ \u8d70\u5411\u5236\u7ea6 $[u,a],[u,b]$ \u8d70\u5411) . \u5269\u4e0b\u7684\u8def\u5f84\u7528\u4e0e $c=1$ \u76f8\u540c\u7684\u65b9\u5f0f\u4f20\u9012\u7ed9 $v$ \u5373\u53ef.\n\n\u4e0d\u65ad\u6267\u884c\u76f4\u5230\u53ea\u5269\u4e0b\u4e00\u4e2a\u70b9. \n\n\u4e0d\u96be\u53d1\u73b0\u901a\u8fc7\u4e0a\u8ff0\u65b9\u6cd5\u6784\u9020\u7684\u65b9\u6848\u6ee1\u8db3\u8fb9\u7684\u8d21\u732e\u90fd\u4e3a $\\min\\{2,c\\}$ , \u6743\u503c\u548c\u8fbe\u5230\u4e86\u4e0a\u754c, \u6545\u6700\u4f18.\n\n\u5bf9\u6bcf\u4e2a\u70b9, \u7528 `set` \u7ef4\u62a4\u4e00\u4e0b\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u7aef\u70b9\u7684\u8def\u5f84\u5373\u53ef\u5f88\u5bb9\u6613\u5730\u6a21\u62df\u4e0a\u8ff0\u64cd\u4f5c.\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n(n+m)\\log m)$ .\n\n\u4ee3\u7801\u5199\u7684\u5f88\u70c2.\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint read();\nint n, m;\nint deg[2003], hd[2003], nx[4003], to[4003], cnt;\nvoid add(int u, int v) {\n    nx[++cnt] = hd[u], hd[u] = cnt, to[cnt] = v, ++deg[u];\n    nx[++cnt] = hd[v], hd[v] = cnt, to[cnt] = u, ++deg[v];\n}\n\nset<int> s[2003];\nstruct E {\n    int iu, iv, nu, nv, fa, res;\n    void init(int id) {\n        iu = nu = read(), iv = nv = read(), s[nu].insert(id), s[nv].insert(id);\n    }\n    void trans(int u, int v) { (nu == u ? nu : nv) = v; }\n} e[2003];\n\nqueue<int> q;\n\nint tag[2003];\nint Tag(int u, int fa, int t1, int t2) {\n    if (u == t1) return 1;\n    if (u == t2) return 2;\n    int rt = 0;\n    for (int i = hd[u], v, t; i; i = nx[i])\n        if ((v = to[i]) != fa) {\n            if ((t = Tag(v, u, t1, t2)) == 3) return tag[i >> 1] = 1, 3;\n            rt |= t;\n        }\n    return rt;\n}\nvoid work() {\n    for (int u = 1; u <= n; ++u)\n        if (deg[u] == 1) q.push(u);\n    for (int u, v, a, b; !q.empty();) {\n        u = q.front(), v = a = 0, q.pop();\n        for (int i = hd[u]; i; i = nx[i])\n            if (deg[v = to[i]] > 1) {\n                a = i >> 1;\n                break;\n            }\n        if (!v) continue;\n        if ((--deg[v]) == 1) q.push(v);\n        if (!s[u].size()) continue;\n\n        if (tag[a] || s[u].size() == 1) {\n            for (; s[u].size(); s[u].erase(a)) {\n                a = *s[u].begin(), e[a].trans(u, v);\n                e[a].nu != e[a].nv ? (s[v].insert(a), void())\n                                   : (s[e[a].nu].erase(a), void());\n            }\n        } else {\n            a = *s[u].begin(), s[u].erase(s[u].begin());\n            b = *s[u].begin(), s[u].erase(s[u].begin());\n            e[a].nv == u ? (e[a].res ^= 1, swap(e[a].nu, e[a].nv)) : void();\n            e[b].nv == u ? (e[b].res ^= 1, swap(e[b].nu, e[b].nv)) : void();\n            s[e[a].nv].erase(a), s[e[b].nv].erase(b), e[a].nu = e[b].nv;\n            if (e[a].nu != e[a].nv) s[e[a].nu].insert(a), s[e[a].nv].insert(a);\n            e[b].fa = a, e[b].res ^= 1 ^ e[a].res;\n            Tag(u, 0, e[a].nu, e[a].nv);\n            for (; s[u].size(); s[u].erase(a)) {\n                a = *s[u].begin(), e[a].trans(u, v);\n                e[a].nu != e[a].nv ? (s[v].insert(a), void())\n                                   : (s[e[a].nu].erase(a), void());\n            }\n        }\n    }\n}\n\nint vis[2003];\nint get(int i) {\n    if (!i) return 0;\n    if (vis[i]) return e[i].res;\n    vis[i] = 1;\n    return e[i].res ^= get(e[i].fa);\n}\n\nint res;\nint sum[2003];\nbool ins(int u, int fa, int t) {\n    if (u == t) return 1;\n    for (int i = hd[u], v; i; i = nx[i])\n        if ((v = to[i]) != fa)\n            if (ins(v, u, t)) return ++sum[i >> 1], 1;\n    return 0;\n}\nvoid solve() {\n    for (int i = 1; i <= m; ++i) ins(e[i].iu, 0, e[i].iv);\n    for (int i = 1; i < n; ++i) res += (sum[i] > 0) + (sum[i] > 1);\n}\n\nint main() {\n    n = read(), m = read(), cnt = 1;\n    for (int i = 1; i < n; ++i) add(read(), read());\n    for (int i = 1; i <= m; ++i) e[i].init(i);\n    work(), solve(), printf(\"%d\\n\", res);\n    for (int i = 1; i <= m; ++i) {\n        get(i) ? swap(e[i].iu, e[i].iv) : void();\n        printf(\"%d %d\\n\", e[i].iu, e[i].iv);\n    }\n    return 0;\n}\nint read() {\n    int x = 0, f = 1;\n    char c = getchar();\n    while (!isdigit(c)) f = (c == '-') ? -1 : f, c = getchar();\n    while (isdigit(c)) x = x * 10 + c - '0', c = getchar();\n    return x * f;\n}\n```\n\n",
        "postTime": 1584348405,
        "uid": 51237,
        "name": "Kinandra",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT3968 \u3010[AGC025E] Walking on a Tree\u3011"
    },
    {
        "content": "\u7ec6\u8282\u9898\uff0c\u4f46\u6211\u597d\u50cf\u6ca1\u6302\u4ec0\u4e48\u7ec6\u8282\uff0c\u81ea\u5df1 yy \u4e86\u4e00\u5806\u5904\u7406\u65b9\u6cd5\u7adf\u7136\u662f\u5bf9\u7684\u3002\n\n\u8fd9\u91cc\u63d0\u4f9b\u7684\u662f\u6bd4\u4e0a\u9762\u9898\u89e3\u4f18\u7684 $O(nm)$ \u505a\u6cd5\uff0c\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u7528\u7ec6\u8282\u6362\u590d\u6742\u5ea6\u3002\n\n\u601d\u8def\u5c31\u662f\u6bcf\u6b21\u628a\u53f6\u5b50\u4e22\u6389\uff0c\u8003\u8651\u53f6\u5b50\u5f80\u7236\u4eb2\u90a3\u6761\u8fb9\u7684\u6700\u4f18\u7b56\u7565\uff1a\n\n- \u6ca1\u6709\u8def\u5f84\u4ece\u53f6\u5b50\u51fa\u53d1\uff0c\u4e0d\u7ba1\u3002\n\n- \u6070\u6709\u4e00\u6761\u8def\u5f84\u51fa\u53d1\uff0c\u600e\u4e48\u5b9a\u5411\u90fd\u53ef\uff0c\u76f4\u63a5\u6539\u4e3a\u4ece\u7236\u4eb2\u51fa\u53d1\u3002\n\n- \u8d77\u7801\u6709\u4e24\u8def\u5f84\u4ece\u6b64\u51fa\u53d1\uff0c\u968f\u4fbf\u9009\u4e24\u6761\u8def\u5f84\uff0c\u5047\u8bbe $1$ \u4e3a\u53f6\u5b50\uff0c$3$ \u548c $4$ \u5206\u522b\u4e3a\u8def\u5f84\u7684\u53e6\u5916\u4e00\u7aef\uff0c$2$ \u4e3a\u4e24\u6761\u8def\u5f84\u6070\u76f8\u4ea4\u5904\uff0c\u6b64\u5904 $1\\to2,2\\to3,3\\to4$ \u4e2d\u95f4\u7684\u70b9\u7701\u7565\uff1a\n\n  ![](https://cdn.luogu.com.cn/upload/image_hosting/lsdaa706.png)\n\n  \u6700\u4f18\u7b56\u7565\u663e\u7136\u662f\u4e00\u6761\u4e0a\u4e00\u6761\u4e0b\uff0c$1$ \u5230\u7236\u4eb2\u7684\u8d21\u732e\u5c31\u7b97\u6ee1\u4e86\uff0c\u4e0d\u96be\u53d1\u73b0 $1$ \u5230 $2$ \u4e4b\u95f4\u7684\u8d21\u732e\u4e5f\u5fc5\u5b9a\u7b97\u6ee1\uff0c\u800c $3$ \u5230 $4$ \u4e4b\u95f4\u7684\u8d21\u732e\u518d\u7b97\u5373\u53ef\u3002\n\n  \u5177\u4f53\u6765\u8bf4\uff0c\u628a $(1,3),(1,4)$ \u4e24\u8def\u5f84\u5220\u6389\uff0c\u76f4\u63a5\u6539\u4e3a $(3,4)$\u3002\n\n  \u9664\u8fd9\u4e24\u8def\u5f84\u7684\u5176\u4ed6\u8def\u5f84\u4e0e\u8d21\u732e\u65e0\u5173\uff0c\u76f4\u63a5\u6539\u4e3a\u4ece\u7236\u4eb2\u51fa\u53d1\u3002\n\n\u7b56\u7565\u5c31\u662f\u8fd9\u6837\uff0c\u4f46\u8fd9\u9053\u9898\u8981\u6c42\u6700\u5927\u8d21\u732e\u8fd8\u8981\u7ed9\u8def\u5f84\u5b9a\u5411\uff0c\u663e\u7136\u53ea\u8981\u6211\u4eec\u7ed9\u8def\u5f84\u5b9a\u4e86\u5411\uff0c\u53ef\u4ee5\u6700\u540e\u518d\u66b4\u529b\u904d\u5386\u7edf\u8ba1\u8d21\u732e $O(n^2)$\u3002\n\n\u90a3\u4e48\u5c31\u53ea\u7528\u8003\u8651\u5b9a\u5411\u7684\u95ee\u9898\uff0c\u53d1\u73b0\u6574\u4e2a\u8fc7\u7a0b\uff0c\u6539\u4e3a\u4ece\u7236\u4eb2\u51fa\u53d1\u7684\u8def\u5f84\u4eec\u4e0e\u5b9a\u5411\u65e0\u5173\uff0c\u53ea\u6709\u5408\u5e76\u4e24\u6761\u8def\u5f84\u65f6\u8981\u6c42\u4e00\u4e0a\u4e00\u4e0b\u3002\n\n\u7531\u4e8e\u4e24\u6761\u5408\u6210\u4e00\u6761\uff0c\u6700\u591a\u5408 $m$ \u6b21\uff0c\u4e0d\u96be\u60f3\u5230\u5efa\u65b0\u8def\u5f84\uff0c\u5e76\u5236\u7ea6\u524d\u4e24\u6761\u8def\u5f84\u7684\u65b9\u5411\u3002\n\n\u8fd9\u91cc\u5efa\u8bae\u6bcf\u6761\u8def\u5f84\u90fd\u4e3a $(x,y)$ \u7684\u5f62\u5f0f\uff0c\u56fa\u5b9a\u8fd9\u4e2a\u4e8c\u5143\u7ec4\uff0c\u7136\u540e\u7ed9\u8fd9\u4e2a\u4e8c\u5143\u7ec4\u6253\u6807\u8bb0\u8868\u793a\u662f\u5426\u7ffb\u8f6c\u3002\n\n\u4e8e\u662f\u5236\u7ea6\u8f6c\u5316\u4e3a\u6807\u8bb0\u4e0a\u7684\u5236\u7ea6\uff0c\u5982\u679c $1$ \u4ee3\u8868\u6b63\u5411\uff0c$2$ \u4ee3\u8868\u53cd\u5411\uff0c\u5904\u7406\u4e00\u4e0b\u539f\u6765\u4e24\u6761\u8def\u5f84\u548c\u65b0\u8def\u5f84\u7684\u5173\u7cfb\uff0c\u5373\u662f\u5426\u9700\u8981\u5f02\u6216 $3$\u3002\n\n\u7531\u4e8e\u524d\u4e24\u6761\u8def\u5f84\u5df2\u88ab\u5220\u53bb\uff0c\u90a3\u4e48\u53ea\u4f1a\u7531\u65b0\u8def\u5f84\u5236\u7ea6\uff0c\u6700\u540e\u7684\u5173\u7cfb\u4e00\u5b9a\u5f62\u5982\u4e00\u68f5\u5916\u5411\u6811\u6216\u5916\u5411\u6811\u68ee\u6797\u3002\n\n\u4ece\u6839\u5f80\u4e0b\u4f20\u9012\u5173\u7cfb\u5373\u53ef\uff0c\u7531\u4e8e\u5efa\u65b0\u8def\u5f84\u7684\u987a\u5e8f\u6211\u4eec\u53ef\u4ee5\u5012\u7740\u904d\u5386\uff0c\u5f88\u65b9\u4fbf\u3002\n\n\u8fd9\u91cc\u53ef\u80fd\u6709\u65b0\u8def\u5f84\u5236\u7ea6\u65b0\u8def\u5f84\uff0c\u53ea\u662f\u7406\u89e3\u4e0a\u7684\u95ee\u9898\uff0c\u987a\u4fbf\u63d0\u4e00\u4e0b\u3002\n\n\u6ce8\u610f\u5224\u8def\u5f84\u662f\u5426\u88ab\u7f29\u5b8c\uff0c\u5373\u4e00\u6761\u53f6\u5b50\u5230\u7236\u4eb2\u7684\u8def\u5f84\u4e22\u7ed9\u7236\u4eb2\u5c31\u662f\u4ece\u7236\u4eb2\u5230\u7236\u4eb2\u7684\u8def\u5f84\u3002\n\n\u518d\u6ce8\u610f\u4e00\u4e0b\u8def\u5f84\u662f\u5426\u5728\u53e6\u4e00\u7aef\u88ab\u5408\u6210\u4e86\u65b0\u8def\u5f84\uff0c\u5408\u4e86\u5c31\u4e0d\u80fd\u8981\u3002\n\n\u622a\u6b62\u672c\u6587\u90fd\u662f rk1 \u7684[\u4ee3\u7801](https://www.luogu.com.cn/paste/t90b3al2)\uff0c\u5176\u5b9e\u601d\u8def\u61c2\u4e86\u90fd\u6ca1\u5fc5\u8981\u770b\uff0c~~\u6240\u4ee5\u6211\u5c31\u61d2\u5f97\u5220\u8c03\u8bd5\u4e86~~\u3002",
        "postTime": 1627546245,
        "uid": 158948,
        "name": "\u7ea6\u745f\u592b\u7528\u8111\u73a9",
        "ccfLevel": 0,
        "title": "AT3968 [AGC025E] Walking on a Tree"
    }
]