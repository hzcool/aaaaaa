[
    {
        "content": "\u9898\u610f\u7b80\u8ff0\uff1a\u5bf9\u4e8e\u4e00\u68f5\u6811\u52a8\u6001\u52a0\u70b9\uff0c\u6c42\u5f53\u524d\u4ee5 $1$ \u4e3a\u6839\u7684\u6ee1\u4e8c\u53c9\u6811\u4e2a\u6570\uff0c\u5bf9 $998244353$ \u53d6\u6a21\u3002\n\n---\n\u53d1\u73b0\u8fd9\u662f\u4e00\u4e2a\u5341\u5206\u6a21\u677f\u7684\u6811\u5f62 dp\uff0c\u4e0e\u52a8\u6001 dp \u76f8\u7c7b\u4f3c\uff0c\u4f46\u66f4\u7b80\u5355\u3002\n\n\u53d1\u73b0\u4e00\u68f5\u6ee1\u4e8c\u53c9\u6811\u7684\u9ad8\u5ea6\u6700\u591a\u4e3a $\\log_2n$\uff0c\u4e8e\u662f\u53ea\u9700\u8981\u8003\u8651\u9ad8\u5ea6\u5c11\u4e8e $\\log_2n$ \u7684\u8282\u70b9\u5373\u53ef\u3002\n\n\u8bbe $dp_{x,dep,1}$ \u8868\u793a\u4ee5 $x$ \u4e3a\u6839\uff0c\u6700\u6df1\u8282\u70b9\u5230 $1$ \u8ddd\u79bb\u4e3a $dep$ \u7684\u6ee1\u4e8c\u53c9\u6811\u4e2a\u6570\uff0c\u540c\u65f6\u4e3a\u4e86\u65b9\u4fbf\u8f6c\u79fb\uff0c\u8bbe $dp_{x,dep,0}$ \u8868\u793a $x$ \u53ea\u6709\u4e00\u4e2a\u513f\u5b50\uff0c\u800c\u90a3\u4e2a\u513f\u5b50\u662f\u6ee1\u4e8c\u53c9\u6811\u7684\u65b9\u6848\u6570\u3002\n\n\u8f6c\u79fb\u65f6\uff1a\n\n$dp_{x,dep,1}=dp_{x,dep,1}+dp_{x,dep,0}\\times dp_{y,dep,1}$\uff1b\n\n$dp_{x,dep,0}=dp_{x,dep,0}+dp_{y,dep,1}$\u3002\n\n\u5f53\u4e00\u4e2a\u8282\u70b9\u6df1\u5ea6\u8fc7\u5927\uff0c\u8d85\u8fc7 $\\log_2n$ \u65f6\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u8df3\u8fc7\u3002\n\nAC \u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=3e5+5,M=998244353;\nusing ll=long long;\nint qp(int a,int x=M-2){\n    int res=1;for(;x;x>>=1,a=ll(a)*a%M)\n        if(x&1)res=ll(res)*a%M;return res;\n}\nvoid add(int &x,int y){\n    if((x+=y)>=M)x-=M;\n}\nint f[N],n,d[N],dp[N][22][2],ans;\nint main(){\n    ios::sync_with_stdio(false);\n    cin>>n;int x,y,_d,nw,p,pr,dat;\n    for(x=1;x<=n;++x){\n        if(x>1)cin>>f[x];\n        d[x]=d[f[x]]+1,_d=d[x];\n        if(_d<=20){\n            dp[x][_d][1]=nw=1,pr=0;\n            for(y=f[x];y;y=f[y]){\n                dat=nw;\n                nw=(ll(dp[y][_d][0]+M-pr)*nw)%M;\n                add(dp[y][_d][0],dat);\n                pr=dp[y][_d][1],add(dp[y][_d][1],nw);\n            }\n        }\n        for(p=1,ans=0;p<=20;++p)\n            add(ans,dp[1][p][1]);\n        printf(\"%d\\n\",ans);\n    }return 0;\n}\n```",
        "postTime": 1667359881,
        "uid": 502410,
        "name": "EnofTaiPeople",
        "ccfLevel": 0,
        "title": "\u6811\u5f62 dp \u5c0f\u6e05\u65b0"
    },
    {
        "content": "# [[ABC264Ex] Perfect Binary Tree](https://www.luogu.com.cn/problem/AT_abc264_h) Solution\n\n[TOC]\n\n## [\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u6233\u6b64\u8fdb\u5165](http://blog.tsawke.com?t=ABC264Ex)\n\n## \u9898\u9762\n\n\u5b58\u5728\u4e00\u68f5\u4ee5 $ 1 $ \u4e3a\u6839\u8282\u70b9\u7684 $ n $ \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u7ed9\u5b9a\u5e8f\u5217 $ P_{n - 1} $ \u8868\u793a $ [2, n] $ \u8282\u70b9\u7684\u7236\u4eb2\u3002\u7ed9\u5b9a $ k $\uff0c\u4f60\u9700\u8981\u4ece $ [1, k] $ \u4e2d\u9009\u62e9\u4e00\u4e9b\u70b9\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $ k $ \u4e00\u6b21\u8be2\u95ee\uff0c\u6c42\u6709\u591a\u5c11\u79cd\u9009\u6cd5\u4f7f\u5f97\u9009\u51fa\u7684\u70b9\u4e3a\u4e00\u68f5\u4ee5 $ 1 $ \u4e3a\u6839\u8282\u70b9\u7684\u6ee1\u4e8c\u53c9\u6811\u3002\u8f93\u51fa $ k \\in [1, n] $ \u7684\u7b54\u6848\uff0c\u7b54\u6848\u5bf9 $ 998244353 $ \u53d6\u6a21\u3002\n\n## Solution\n\n\u9996\u5148\u4e00\u4e2a\u6bd4\u8f83\u91cd\u8981\u7684\u6027\u8d28\u5c31\u662f $ n $ \u4e2a\u8282\u70b9\u7684\u6ee1\u4e8c\u53c9\u6811\u5c42\u9ad8\u4e3a $ \\log_2^n $\uff0c\u6240\u4ee5\u5728\u539f\u6811\u91cc\u5c42\u9ad8\u8d85\u8fc7 $ \\log_2^n $ \u7684\u8282\u70b9\u5c31\u53ef\u4ee5\u76f4\u63a5\u5ffd\u7565\u4e86\u3002\n\n\u4e0d\u96be\u60f3\u5230 DP\uff0c\u4ee4 $ dp(p, i) $ \u8868\u793a\u4ee5 $ p $ \u4e3a\u6839\u8282\u70b9\u5c42\u9ad8\u4e3a $ i $ \u7684\u6ee1\u4e8c\u53c9\u6811\u65b9\u6848\u6570\u3002\n\n\u6734\u7d20\u7684\u8f6c\u79fb\u5341\u5206\u663e\u7136\uff0c\u5373\u5728\u5176\u513f\u5b50\u91cc\u627e\u5230\u4e24\u4e2a\u5c42\u9ad8\u4e3a $ i - 1 $ \u7684\u6ee1\u4e8c\u53c9\u6811\u62fc\u8d77\u6765\u5373\u53ef\uff0c\u5373\u8f6c\u79fb\u4e3a\uff1a\n$$\ndp(p, i) = \\sum_{u \\lt v, u, v \\in son_p} dp(u, i - 1) \\times dp(v, i - 1)\n$$\n\u8003\u8651\u5230\u6211\u4eec\u6bcf\u6b21\u8be2\u95ee\u90fd\u662f\u589e\u52a0\u4e00\u4e2a\u8282\u70b9\uff0c\u5982\u6b64\u7684\u8f6c\u79fb\u65b9\u5f0f\u590d\u6742\u5ea6\u663e\u7136\u662f\u4e0d\u6b63\u786e\u7684\uff0c\u8003\u8651\u4f18\u5316\u3002\u4e0d\u96be\u60f3\u5230\u8fd9\u4e2a\u5f0f\u5b50\u53ef\u4ee5\u8f6c\u5316\u4e3a\u4ece\u548c\u5e73\u65b9\u91cc\u53bb\u9664\u5e73\u65b9\u548c\uff0c\u5373\uff1a\n$$\ndp(p, i) = \\dfrac{1}{2}((\\sum_{u \\in son_p}dp(u, i - 1))^2 - \\sum_{u \\in son_p}dp(u, i - 1)^2)\n$$\n\u4e8e\u662f\u8fd9\u4e2a\u4e1c\u897f\u5c31\u53ef\u4ee5\u652f\u6301 $ O(1) $ \u4fee\u6539\u4e86\uff0c\u7ef4\u62a4\u4e00\u4e0b\u548c\u4ee5\u53ca\u5e73\u65b9\u548c\u5373\u53ef\u3002\u6ce8\u610f\u9700\u8981\u8bb0\u5f55\u4e0a\u4e00\u6b21\u7684\u503c\u548c\u65b0\u7684\u503c\uff0c\u51cf\u53bb\u65e7\u7684\u52a0\u4e0a\u65b0\u7684\u3002\u540c\u65f6\u8003\u8651\u53d1\u73b0\u6bcf\u6b21\u589e\u52a0\u4e00\u4e2a\u70b9\uff0c\u5c06\u4f1a\u6539\u53d8\u8be5\u70b9\u5230 $ 1 $ \u8282\u70b9\u7684\u6574\u6761\u94fe\uff0c\u5e76\u4e14\u53ea\u4f1a\u6539\u53d8\u8fd9\u4e9b\u70b9\uff0c\u540c\u65f6\u82e5\u53d8\u5316\u7684\u8282\u70b9\u8d85\u8fc7 $ \\log_2^n $ \u5c42\u4e86\u90a3\u4e48\u53ef\u4ee5\u76f4\u63a5\u5ffd\u7565\u3002\n\n\u6700\u7ec8\u7684\u7b54\u6848\u5373\u4e3a $ \\sum_{i = 1}^{\\lfloor \\log_2^n \\rfloor}dp(1, i) $\u3002\n\n\u6240\u4ee5\u6bcf\u6b21\u4fee\u6539\u90fd\u662f $ O(\\log n) $ \u7684\uff0c\u6700\u7ec8\u7b54\u6848\u7684\u67e5\u8be2\u4e5f\u662f $ O(\\log n) $ \u7684\uff0c\u6700\u7ec8\u590d\u6742\u5ea6 $ O(n \\log n) $\u3002\n\n## Code\n\n```cpp\n#define _USE_MATH_DEFINES\n#include <bits/stdc++.h>\n\n#define PI M_PI\n#define E M_E\n#define npt nullptr\n#define SON i->to\n#define OPNEW void* operator new(size_t)\n#define ROPNEW(arr) void* Edge::operator new(size_t){static Edge* P = arr; return P++;}\n\nusing namespace std;\n\nmt19937 rnd(random_device{}());\nint rndd(int l, int r){return rnd() % (r - l + 1) + l;}\nbool rnddd(int x){return rndd(1, 100) <= x;}\n\ntypedef unsigned int uint;\ntypedef unsigned long long unll;\ntypedef long long ll;\ntypedef long double ld;\n\n#define MOD (998244353ll)\n\ntemplate < typename T = int >\ninline T read(void);\n\nstruct Edge{\n    Edge* nxt;\n    int to;\n    OPNEW;\n}ed[610000];\nROPNEW(ed);\nEdge* head[310000];\n\nll qpow(ll a, ll b){\n    ll ret(1), mul(a);\n    while(b){\n        if(b & 1)ret = ret * mul % MOD;\n        b >>= 1;\n        mul = mul * mul % MOD;\n    }return ret;\n}\n\nint N;\nint mxdep;\nint inv2;\nint dep[310000];\nint fa[310000];\nll ans(0);\nll sum[310000][21], sum2[310000][21];\n\nll DP(int p, int i){\n    if(i == 1)return 1;\n    return ((sum[p][i] * sum[p][i] % MOD - sum2[p][i]) % MOD + MOD) % MOD * inv2 % MOD;\n}\nvoid dfs(int p = 1, int fa = 0){\n    dep[p] = dep[fa] + 1;\n    for(auto i = head[p]; i; i = i->nxt)\n        if(SON != fa)dfs(SON, p);\n}\n\nint main(){\n    // freopen(\"in.txt\", \"r\", stdin);\n    // freopen(\"out.txt\", \"w\", stdout);\n    inv2 = qpow(2, MOD - 2);\n    N = read();\n    if(N == 1)printf(\"1\\n\"), exit(0);\n    mxdep = (int)log2(N);\n    for(int i = 2; i <= N; ++i){\n        fa[i] = read();\n        head[i] = new Edge{head[i], fa[i]};\n        head[fa[i]] = new Edge{head[fa[i]], i};\n    }dfs();\n    for(int cp = 1; cp <= N; ++cp){\n        if(dep[cp] <= mxdep){\n            sum[cp][1] = sum2[cp][1] = 1;\n            ll cnt(1), cur(cp), lst(-1), lstDP(0);\n            while(cur != 1){\n                lst = cur;\n                cur = fa[cur], ++cnt;\n                ll tmp = DP(cur, cnt);\n                (((sum[cur][cnt] -= lstDP) %= MOD) += MOD) %= MOD;\n                (((sum2[cur][cnt] -= lstDP * lstDP % MOD) %= MOD) += MOD) %= MOD;\n                lstDP = tmp;\n                (sum[cur][cnt] += DP(lst, cnt - 1)) %= MOD;\n                (sum2[cur][cnt] += DP(lst, cnt - 1) * DP(lst, cnt - 1) % MOD) %= MOD;\n            }\n        }ans = 0;\n        for(int i = 1; i <= mxdep; ++i)(ans += DP(1, i)) %= MOD;\n        printf(\"%lld\\n\", ans);\n    }\n    fprintf(stderr, \"Time: %.6lf\\n\", (double)clock() / CLOCKS_PER_SEC);\n    return 0;\n}\n\ntemplate < typename T >\ninline T read(void){\n    T ret(0);\n    int flag(1);\n    char c = getchar();\n    while(c != '-' && !isdigit(c))c = getchar();\n    if(c == '-')flag = -1, c = getchar();\n    while(isdigit(c)){\n        ret *= 10;\n        ret += int(c - '0');\n        c = getchar();\n    }\n    ret *= flag;\n    return ret;\n}\n```\n\n## UPD\n\nupdate-2023_01_03 \u521d\u7a3f",
        "postTime": 1672745890,
        "uid": 362938,
        "name": "Tsawke",
        "ccfLevel": 6,
        "title": "[ABC264Ex] Perfect Binary Tree \u9898\u89e3"
    }
]