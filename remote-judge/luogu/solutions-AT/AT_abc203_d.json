[
    {
        "content": "\u9898\u610f\uff1a\u6c42 $N\\times N$ \u7684\u77e9\u9635\u4e2d\u7684\u6240\u6709 $K\\times K$ \u7684\u5c0f\u77e9\u9635\u7684\u4e2d\u4f4d\u6570\u7684**\u6700\u5c0f\u503c**\u3002\n\n\u6b64\u5904\uff0c\u9898\u76ee\u5b9a\u4e49\u201c\u4e2d\u4f4d\u6570\u201d\u4e3a\u5c0f\u77e9\u9635\u4e2d\u6240\u6709 $K^2$ \u4e2a\u6570\u7684\u7b2c $\\lfloor \\frac{K^2}{2}\\rfloor+1$ \u5927\u7684\u6570\u3002\u8b6c\u5982\uff0c\u5bf9\u4e8e\u77e9\u9635 $\\begin{array}{c} 8 & 11 \\\\ 4 & 2 \\end{array}$\uff0c\u5176\u4e2d\u4f4d\u6570\u4e3a $4$\u3002\n\n\u6b63\u89e3\uff1a**\u4e8c\u5206\u7b54\u6848**\u540e\u7528**\u4e8c\u7ef4\u524d\u7f00\u548c**\u5224\u65ad\u6bcf\u4e2a\u5c0f\u77e9\u9635\u5185\u5927\u4e8e\u7b54\u6848\u7684\u6570\u6709\u51e0\u4e2a\uff1b\u53e6\u4e00\u7bc7\u9898\u89e3\u4e0d\u4f1a\uff08$\\text{Ta}$ \u7cca\u4e86\u4e2a\u66b4\u529b\uff09\uff0c\u4f46\u662f\u6211\u4f1a\u3002\n\n\u770b\u5230\u8fd9\u91cc\u8bf7\u5148\u53bb\u624b\u6253\u4e00\u904d\uff0c\u7136\u540e\u4f60\u4f1a\u5728\u4e8c\u5206\u7edf\u8ba1\u7b54\u6848\u548c\u786e\u5b9a\u533a\u95f4\u7684\u65f6\u5019\u9047\u5230\u95ee\u9898\uff0c\u7136\u540e\u4f60\u518d\u6765\u770b\u6211\u7684\u65b9\u6cd5\u3002\n\n---\n\n\u4e8c\u5206\u7684\u65f6\u5019\uff0c\u6211\u4eec\u7edf\u8ba1\u7684\u662f**\u6bcf\u4e2a\u77e9\u9635\u5185\u5927\u4e8e\u7b54\u6848\u7684\u6570\u6709\u591a\u5c11\u4e2a**\uff0c$\\text{Thus}$\uff1a\n\n- \u5982\u679c\u8fd9\u4e2a\u7b54\u6848\u5408\u6cd5\uff0c\u90a3\u4e48\u5e94\u8be5\u81f3\u5c11\u6709\u4e00\u4e2a\u77e9\u9635\u5185\uff0c\u8fd9\u4e2a\u6570\u5b57\u662f $\\lfloor\\frac{K^2}{2}\\rfloor$\uff0c\u8fd9\u65f6\u7edf\u8ba1\u7b54\u6848\u3002\n- \u5982\u679c\u5bf9\u4e8e\u6240\u6709\u77e9\u9635\uff0c\u8fd9\u4e2a\u6570\u5b57\u90fd\u5927\u4e8e $\\lfloor\\frac{K^2}{2}\\rfloor$\uff0c\u90a3\u4e48\u7b54\u6848\u592a\u5c0f\u4e86\uff0c\u518d\u5c0f\u4e00\u4e9b\u4e0d\u4f1a\u6709\u89e3\u3002\n- \u5426\u5219\uff0c\u5c31\u6709\u4e00\u4e9b\u77e9\u9635\u4e2d\uff0c\u8fd9\u4e2a\u6570\u5b57\u5c0f\u4e8e $\\lfloor\\frac{K^2}{2}\\rfloor$\uff0c\u90a3\u4e48\u7b54\u6848\u8fd8\u6709\u66f4\u5c0f\u7684\u53ef\u80fd\u3002\n\n\u5c31\u8fd9\u6837\u53bb\u7edf\u8ba1\u7b54\u6848\u5e76\u786e\u5b9a\u533a\u95f4\u3002\n\nCode:\n\n```cpp\n#include <iostream>\n#include <cstdio>\nusing namespace std;\n\nint k, n;\nint mp[801][801];\nint pre[801][801];\nint minv = 1e9, maxv;\n\nint main() {\n\tscanf(\"%d%d\", &n, &k);\n\tfor(int i = 1 ; i<= n ; i++) {\n\t\tfor(int j = 1 ; j<= n ; j++) {\n\t\t\tscanf(\"%d\", &mp[i][j]);\n\t\t\tminv = min(mp[i][j], minv);\n\t\t\tmaxv = max(mp[i][j], maxv);\n\t\t}\n\t}\n\tint l = minv, r = maxv, ans = maxv;\n\twhile(l <= r) {\n\t\tint mid = (l+r) >> 1;\n\t\tfor(int i = 1 ; i <= n ; i++) {\n\t\t\tfor(int j = 1 ; j<= n ; j++) {\n\t\t\t\tpre[i][j] = 0;\n\t\t\t\tif(mp[i][j] > mid) pre[i][j] = 1;\n\t\t\t\tpre[i][j] = pre[i][j]+pre[i-1][j]+pre[i][j-1]-pre[i-1][j-1];\n\t\t\t}\n\t\t}\n\t\tmaxv = 0, minv = 1e9;\n\t\tbool F = false;\n\t\tfor(int i = 1 ; i+k-1 <= n ; i++) {\n\t\t\tfor(int j = 1 ; j+k-1 <= n ; j++) {\n\t\t\t\tint o = i+k-1;\n\t\t\t\tint p = j+k-1;\n\t\t\t\tint num = pre[o][p]-pre[o][j-1]-pre[i-1][p]+pre[i-1][j-1];\n\t\t\t\tif(num == k*k/2) F = true;\n\t\t\t\tmaxv = max(maxv, num);\n\t\t\t\tminv = min(minv, num);\n\t\t\t}\n\t\t}\n\t\tif(F) ans = mid, r = mid-1;\n\t\telse if(minv > k*k/2) l = mid+1;\n\t\telse r = mid-1;\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1685070058,
        "uid": 524906,
        "name": "\u5218\u8fb0\u96e8",
        "ccfLevel": 5,
        "title": "AT_abc203_d [ABC203D] Pond \u9898\u89e3"
    },
    {
        "content": "\u9898\u610f\uff1a\u7ed9\u5b9a $ N,K $\uff0c\u6c42 $ N \\times N $ \u7684\u77e9\u9635\u5185\u6240\u6709 $ K \\times K $ \u7684\u5b50\u77e9\u9635\u7684\u4e2d\u4f4d\u6570\u7684\u6700\u5c0f\u503c\u3002\n\n\u6b63\u89e3\u662f\u4e8c\u5206\u7b54\u6848\u4e4b\u540e\u4e8c\u7ef4\u524d\u7f00\u548c\u5224\u65ad\u77e9\u9635\u5185\u5927\u4e8e\u7b54\u6848\u7684\u6570\u6709\u51e0\u4e2a\uff0c\u4f46\u662f\u6211\u4e0d\u4f1a\uff0c\u4e8e\u662f\u53c2\u8003 [\u8fd9\u9898](https://www.luogu.com.cn/problem/P1527) \u7684\u601d\u8def\uff0c\u66b4\u529b\u7b97\u51fa\u6240\u6709\u77e9\u9635\u5185\u7684\u7b54\u6848\u4e4b\u540e\u53d6\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n\u5b9e\u9645\u4e0a\u8fd9\u662f\u533a\u95f4\u7b2c $ K $ \u5927\u7684\u4e8c\u7ef4\u60c5\u51b5\uff0c\u5957\u7528\u7c7b\u4f3c\u7684\u6574\u4f53\u4e8c\u5206\u601d\u8def\uff0c\u8003\u8651\u5bf9\u6bcf\u4e2a\u8be2\u95ee\u4e8c\u5206\u7b54\u6848\uff0c\u7edf\u8ba1\u6bd4\u4e00\u4e2a\u8be2\u95ee\u7684\u6570\u5927\u7684\u6570\u7684\u6570\u91cf\uff0c\u5982\u679c\u8f83\u5c0f\u5219\u9012\u5f52\u53f3\u533a\u95f4\uff0c\u5426\u5219\u9012\u5f52\u5de6\u533a\u95f4\u3002\u73b0\u5728\u95ee\u9898\u662f\u5982\u4f55\u7edf\u8ba1\u8fd9\u4e2a\u6570\uff0c\u53ef\u4ee5\u52a8\u6001\u7ef4\u62a4\u4e8c\u7ef4\u524d\u7f00\u548c\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528\u6734\u7d20\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\u5b9e\u73b0\u3002\u81f3\u4e8e\u5177\u4f53\u7684\u5b9e\u73b0\u8fc7\u7a0b\u548c\u66f4\u8be6\u7ec6\u7684\u8bb2\u89e3\u53ef\u4ee5\u7ffb\u90a3\u9898\u9898\u89e3\u3002\u7406\u8bba\u4e0a\u8fd9\u9898\u7684\u6570\u636e\u8303\u56f4\u8f83\u5927\u662f\u8fc7\u4e0d\u53bb\u7684\uff0c\u4f46\u662f\u6811\u72b6\u6570\u7ec4\u5e38\u6570\u8f83\u5c0f\u53ef\u4ee5\u901a\u8fc7\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $ \\mathcal{O}(N^2\\log{N}^3) $\uff0c\u5361\u4e86\u597d\u51e0\u53d1\u624d\u538b\u7ebf\u8fc7\uff0c\u559c\u63d0\u6700\u52a3\u89e3\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#import <bits/stdc++.h>\nusing namespace std;\nconst int N = 815;\nint n, Q;\nint a[N][N];\nlong long tr[N][N];\nint ans[2000101];\nstruct group \n{\n\tint x, y, value;\n}g[N * N]; \nint siz = 0;\nstruct queries\n {\n\tint id, _X1, _Y1, _X2, _Y2, k;\n}q[N * N], tmp[N * N];\nint le = 0;\nint lowbit(int x) \n{\n\treturn x & (-x);\n}\nint query(int x, int y) \n{\n\tint s = 0;\n\tfor(int i = x; i > 0; i -= lowbit(i))\n\t\tfor(int j = y; j > 0; j -= lowbit(j))\n\t\t\ts += tr[i][j];\n\treturn s;\n}\nvoid update(int x, int y, int v) \n{\n\tfor(int i = x; i < N; i += lowbit(i))\n\t\tfor(int j = y; j < N; j += lowbit(j))\n\t\t\ttr[i][j] += v;\n\treturn;\n}\nint range(queries A) \n{\n\treturn query(A._X2, A._Y2) - query(A._X1 - 1, A._Y2) - query(A._X2, A._Y1 - 1) + query(A._X1 - 1, A._Y1 - 1);\n}\nvoid work(int left, int right, int L, int R) \n{ \n\tif(L > R)\n\t\treturn;\n\tif(L == R) \n    {\n\t\tfor(int i = left; i <= right; i++)\n\t\t\tans[q[i].id] = g[L].value;\n\t\treturn;\n\t}\n\tint mid = (L + R) >> 1;\n\tif(le < mid) \n    {\n\t\tfor(int i = le + 1; i <= mid; i++)\n\t\t\tupdate(g[i].x, g[i].y, 1);\n\t}\n\telse if(le > mid) \n    {\n\t\tfor(int i = le; i > mid; i--)\n\t\t\tupdate(g[i].x, g[i].y, -1);\n\t}\n\tle = mid;\n\tint l = left, r = right;\n\tfor(int i = left; i <= right; i++) \n    {\n\t\tif(range(q[i]) >= q[i].k) \n        {\n\t\t\ttmp[l++] = q[i];\n\t\t}\n\t\telse \n        {\n\t\t\ttmp[r--] = q[i];\n\t\t}\n\t}\n\tl--;\n\tfor(int i = left; i <= right; i++)\n\t\tq[i] = tmp[i];\n\twork(left, l, L, mid);\n\twork(l + 1, right, mid + 1, R);\n}\nbool cmp(group a, group b) \n{\n\treturn a.value < b.value;\n}\nint main() \n{\n\tscanf(\"%d\", &n);\n    int kk;\n    cin>>kk;\n\tfor(int i = 1; i <= n; i++) \n    {\n\t\tfor(int j = 1; j <= n; j++) \n        {\n\t\t\tscanf(\"%d\", &a[i][j]);\n\t\t\tg[++siz].value = a[i][j], g[siz].x = i, g[siz].y = j;\n\t\t}\n\t}\n\tstable_sort(g + 1, g + siz + 1, cmp);\n    int now=0;\n    int BLOCK=kk*kk-kk*kk/2;\n\tfor(int i = 1; i+kk-1<=n; i++)\n    for(int j=1;j+kk-1<=n;j++)\n    Q++,q[Q]._X1=i, q[Q]._Y1=j, q[Q]._X2=i+kk-1, q[Q]._Y2=j+kk-1, q[Q].k=BLOCK,q[Q].id = Q;\n\twork(1, Q, 1, siz);\n    int minn=2e9;\n\tfor(int i = 1; i <= Q; i++)\n\tminn=min(minn,ans[i]);\n    cout<<minn;\n}\n```\n",
        "postTime": 1669295831,
        "uid": 714821,
        "name": "loser_seele",
        "ccfLevel": 4,
        "title": "ABC203D\u9898\u89e3"
    }
]