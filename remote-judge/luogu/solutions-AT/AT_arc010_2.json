[
    {
        "content": "\u9996\u5148\u5410\u69fd\u4e00\u4e0b\u8fd9\u4e2a\u7ffb\u8bd1\uff0c\u8fd9\u662f\u4ec0\u4e48\u9b3c\u3002\n\n\u5176\u5b9e\u9898\u610f\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u8bf4\u5c9b\u56fd\u4eba\u6c11\u641e\u4e86\u4e2a\u65b0\u653f\u7b56\uff0c\u4ed6\u4eec\u73b0\u5728\u6709 $n$ \u4e2a\u8282\u65e5\uff0c\u4e5f\u6709\u53cc\u4f11\u65e5\uff08\u300c\u571f\u66dc\u65e5\u300d\u300c\u65e5\u66dc\u65e5\u300d\u5c31\u662f\u4eba\u5bb6\u7684\u5468\u516d\u65e5\uff09\uff0c\u7136\u540e\u8fd8\u6709\u300c\u8865\u4f11\u65e5\u300d\uff0c\u8ddf\u8c03\u4f11\u6b63\u597d\u76f8\u53cd\uff0c\u5c31\u662f\u300c\u516c\u4f11\u65e5\u300d\u662f\u53cc\u4f11\u65e5\u7684\u8bdd\uff0c\u5c31\u8bbe\u4e0b\u9762\u7b2c\u4e00\u4e2a\u975e\u8282\u65e5\u7684\u5de5\u4f5c\u65e5\u4e3a\u300c\u8865\u4f11\u65e5\u300d\u3002\n\n~~\u4f60\u8981\u8fd9\u6837\u6211\u4e50\u5f00\u82b1\u4e86\uff0c\u4e2d\u79cb\u4e94\u4e00\u597d\u51e0\u5e74\u5168\u662f\u6db5\u76d6\u5468\u672b\uff0c\u5982\u679c\u6211\u6ca1\u8bb0\u9519\u7684\u8bdd\u3002~~\n\n\u4e0b\u9762\u6211\u6765\u8bf4\u4e00\u4e0b\u5751\u3002\n\n1. \u672c\u9898\u662f $2012$\uff08$2011$\uff1f\uff09\u5e74\u7684\u9898\uff0c$2012$ \u662f\u4e2a\u95f0\u5e74\uff0c\u6709 $366$ \u5929\u3002\n2. \u7b80\u5355\u53bb\u770b\u4e00\u4e0b\u4e07\u5e74\u5386\uff0c$2012.1.1$ \u662f\u4e2a\u5468\u65e5\u3002\n\n\u4ee3\u7801\u5927\u81f4\u5206\u4e3a\u4e09\u4e2a\u90e8\u5206\u3002\n\n1. \u9884\u5904\u7406\u3002\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u6c42 $x$ \u6708 $y$ \u65e5\u662f\u4e00\u5e74\u7b2c\u591a\u5c11\u5929\uff08\u5373\u524d $x-1$ \u4e2a\u6708\u7684\u5929\u6570\u548c\u518d\u52a0 $y$ \u5929\uff09\uff0c\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u6708\u7684\u524d\u7f00\u548c\u3002\u6211\u4eec\u8fd8\u8981\u5b9a\u4e49\u4e00\u4e2a\u5e03\u5c14\u6570\u7ec4\u6807\u8bb0\u4f11\u5047\u65e5\u3002\n2. \u201c\u65e5\u5f0f\u8c03\u4f11\u201d\uff0c\u5982\u679c\u8fd9\u4e2a\u8282\u65e5\u662f\u53cc\u4f11\u65e5\uff0c\u5219\u8bbe\u7f6e\u8865\u4f11\uff08\u5229\u7528\u5faa\u73af\uff09\uff0c\u5426\u5219\u8bbe\u4e3a\u4f11\u5047\u65e5\u3002\n3. \u7edf\u8ba1\uff0c\u4f7f\u7528\u64c2\u53f0\u6cd5\u3002\n\n\u4e0b\u9762\u770b\u4ee3\u7801\uff1a\uff08\u53ef\u4ee5\u81ea\u884c\u8fc7\u6ee4\u5f88\u591a\u6ce8\u91ca\uff09\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint n;\nbool rest[114514];\nint mouth[13]={0, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}, month[13];\n// \u5976\u5976\u7684\uff0c2012\u5e74\u662f\u4e2a\u95f0\u5e74\uff0c\u8349\nvoid meow(){\n    cin>>n;\n    // \u524d\u7f00\u548c\uff0c\u4e0d\u7136\u4e0d\u597d\u7b97\uff0c\u8fd9\u6837\u8ba1\u7b97\u662f\u4e00\u5e74\u7b2c\u591a\u5c11\u5929\u53ea\u9700\u8981\u52a0\u4e0a\u524d\u9762\u90a3\u4e9b\u6708\u7684\u548c\u518d\u52a0\u65e5\u671f\u5373\u53ef\n    for (int i=1; i<=12; i++) month[i]=month[i-1]+mouth[i]; // \u90fd\u61d2\u5f97\u6362\u4e00\u4e2a\u5bb9\u6613\u533a\u5206\u7684\u53d8\u91cf\u540d\uff0c\u5c31\u662f\u73a9\n\n    // \u6807\u8bb0\u53cc\u4f11\u65e5\n    for (int i=1; i<=366; i++)\n        if (!(i%7) || i%7==1) rest[i]=true; // 366\uff0c366\uff0c\u95f0\u5e74\u5929\u6570366\uff01\n}\n\nvoid woof(){\n    while (n--){\n        int m, d;\n        scanf(\"%d/%d\", &m, &d); // \u90fd\u4e00\u6837\n        int kth_date=month[m-1]+d; // \u4e00\u5e74\u7b2c\u591a\u5c11\u5929\uff0c\u8ba1\u7b97\u65b9\u6cd5\u5728\u4e0a\u4e00\u4e2a\u51fd\u6570\u7684\u6ce8\u91ca\u4e2d\n    \n        if (rest[kth_date]){ // \u5982\u679c\u662f\u8282\u5047\u65e5\u4e5f\u662f\u53cc\u4f11\u65e5\uff0c\u5f80\u4e0b\u627e\u5230\u7b2c\u4e00\u4e2a\u975e\u8282\u5047\u65e5\u6539\u4e3a\u8282\u5047\u65e5\n            for (int i=kth_date+1; i<=366; i++)\n                if (!rest[i]){ rest[i]=true; break; }\n        }\n        else rest[kth_date]=true; // \u5426\u5219\u6539\u6210\u8282\u5047\u65e5\n    }\n}\n\nvoid oink(){\n    int maxd=0, real=0; // \u64c2\u53f0\u8ba1\u6570\u5668\uff0c\u6700\u7ec8\u8f93\u51fa\u7684\u6570\n    for (int i=1; i<=366; i++){ // \u6700\u957f\u8fde\u4f11\u65e5\uff08\u8d85\u5927\u578b\u9023\u4f11\uff09\n        if (rest[i]) maxd++; // \u662f\u8282\u5047\u65e5\uff0c\u6700\u957f\u8fde\u7eed\u8ba1\u6570\u52a0\u4e00\n        else real=max(real, maxd), maxd=0; // \u4e0d\u662f\u4e86\uff0c\u8ba1\u7b97\u76ee\u524d\u7684\u6700\u957f\u8fde\u4f11\n    }\n    cout<<max(maxd, real)<<endl; // \u628a\u6700\u540e\u53ef\u80fd\u843d\u4e0b\u7684\u8fde\u4f11\u8bb0\u5f55\u4e0b\u6765\n}\n\nint main(){\n    meow(); // \u9884\u5904\u7406\n    woof(); // \u8c03\u4f11\uff1f\u65e5\u5f0f\u8c03\u4f11\uff08\u786e\u4fe1\n    oink(); // \u7edf\u8ba1\n    return 0;\n}\n/*\nEste es el zoo!\n*/\n```\n\n\u5c31\u662f\u8fd9\u6837\uff0c\u8c22\u8c22\u5927\u5bb6\u3002",
        "postTime": 1664788362,
        "uid": 341353,
        "name": "_6872_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 #38 AT370\u3010\u8d85\u5927\u578b\u9023\u4f11\u3011"
    },
    {
        "content": "\u4e00\u9053~~\u7b80\u5355~~\u7684\u6a21\u62df\u9898\u3002\n### \u9898\u76ee\u5927\u610f\n\u7ed9\u5b9a ${n}$ \u4e2a\u8282\u5047\u65e5\uff0c\u5468\u516d\u5468\u65e5\u4e5f\u7b97\u8282\u5047\u65e5\uff0c\u6c42\u6700\u957f\u7684\u8fde\u4f11\u65e5\u3002\n### \u601d\u8def\u5206\u6790\n\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u505a\u4e00\u4e9b\u9884\u5904\u7406\uff0c\u628a\u6240\u6709\u6708\u4efd\u7528\u524d\u7f00\u548c\u8ba1\u7b97\u4e00\u904d\uff0c\u65b9\u4fbf\u7528\u4e00\u7ef4\u6570\u7ec4\uff0c\u5e76\u5c06\u5468\u516d\u65e5\u7ed9\u8bb0\u5f55\u4e0b\u6765\uff0c\u5c06\u4ed6\u4eec\u5f52\u4e3a\u8282\u5047\u65e5\u3002\u6ce8\u610f\uff1a\u8fd9\u91cc\u6709\u4e24\u4e2a\u5751\u3002\n#### \u5751\u4e00\uff1a2012 \u5e74\u662f\u95f0\u5e74\uff0c\u5faa\u73af\u4ece 1~366\u3002\n#### \u5751\u4e8c\uff1a2012 \u5e74 1 \u6708 1 \u65e5\u662f\u5468\u65e5\uff0c\u800c\u975e2012 \u5e74 1 \u6708 11 \u65e5\u3002\n\u6240\u4ee5\uff0c\u6211\u4eec\u5c31\u6709\u4ee5\u4e0b\u4ee3\u7801\uff1a\n``` cpp\nfor(int i=1;i<=12;++i)\n\t\tsum[i]=sum[i-1]+MonthDay[i];//\u524d\u7f00\u548c \n\tfor(int i=1;i<=366;++i)//\u628a\u5468\u516d\u65e5\u7528u\u6570\u7ec4\u8bb0\u5f55\u4e0b\u6765 \n\t\tif(i%7==0||i%7==1)\n\t\t\tu[i]=1;\n```\n\u5176\u6b21\uff0c\u5c31\u662f\u8f93\u5165\u3002\u53ef\u4ee5\u8fb9\u8f93\u5165\uff0c\u8fb9\u7edf\u8ba1\u3002\u5982\u679c\u8282\u5047\u65e5\u672c\u6765\u5c31\u662f\u5468\u516d\u65e5\uff0c\u5c31\u627e\u5230\u5176\u540e\u7b2c\u4e00\u4e2a\u975e\u8282\u5047\u65e5\uff0c\u5c06\u5b83\u6539\u4e3a\u8282\u5047\u65e5\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n``` cpp\nfor(int i=1;i<=n;++i)\n\t{\n\t\tscanf(\"%d/%d\",&m,&d);//scanf\u8f93\u5165\u65b9\u4fbf\u4e00\u4e9b \n\t\tif(u[sum[m-1]+d]==1)//\u5982\u679c\u672c\u6765\u5c31\u662f\u5468\u516d\u65e5 \n\t\t{\n\t\t\tfor(int j=sum[m-1]+d+1;j<=366;++j)//\u627e\u7b2c\u4e00\u4e2a\u4e0d\u662f\u8282\u5047\u65e5\u7684 \n\t\t\t\tif(!u[j])\n\t\t\t\t{\n\t\t\t\t\tu[j]=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t}\n\t\telse\n\t\t\tu[sum[m-1]+d]=1;//\u6807\u8bb0\u6210\u4e3a\u8282\u5047\u65e5 \n\t}\n```\n\u6700\u540e\uff0c\u5c31\u662f\u7edf\u8ba1\u3002\u5177\u4f53\u5c31\u770b\u6ce8\u91ca\u5427\u3002\n``` cpp\nfor(int i=1;i<=366;++i)//\u7edf\u8ba1\u6700\u957f\u8fde\u4f11 \n\t{\n\t\tif(u[i])//\u662f\u8282\u5047\u65e5++now \n\t\t\t++now;\n\t\telse//\u4e0d\u662f\u7edf\u8ba1\u6700\u5927\u503c \n\t\t{\n\t\t\tans=max(ans,now);\n\t\t\tnow=0;\n\t\t}\n\t}\n    ans=max(ans,now);//\u53ef\u80fd\u5728\u6700\u540e\u6709\u8fde\u4f11 \n```\n\u5168\u90e8\u4ee3\u7801\u5982\u4e0b\uff1a\uff08\u65e0\u6ce8\u91ca\uff09\n``` cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,d,ans,now;\nint MonthDay[]={0,31,29,31,30,31,30,31,31,30,31,30,31},sum[15];\nchar ch;\nbool u[370];\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=12;++i)\n\t\tsum[i]=sum[i-1]+MonthDay[i];\n\tfor(int i=1;i<=366;++i)\n\t\tif(i%7==0||i%7==1)\n\t\t\tu[i]=1;\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tscanf(\"%d/%d\",&m,&d);\n\t\tif(u[sum[m-1]+d]==1)\n\t\t{\n\t\t\tfor(int j=sum[m-1]+d+1;j<=366;++j)\n\t\t\t\tif(!u[j])\n\t\t\t\t{\n\t\t\t\t\tu[j]=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t}\n\t\telse\n\t\t\tu[sum[m-1]+d]=1;\n\t}\n\tfor(int i=1;i<=366;++i)\n\t{\n\t\tif(u[i])\n\t\t\t++now;\n\t\telse\n\t\t{\n\t\t\tans=max(ans,now);\n\t\t\tnow=0;\n\t\t}\n\t}\n\tans=max(ans,now);\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1653898153,
        "uid": 541069,
        "name": "_CowHorse_",
        "ccfLevel": 0,
        "title": "AT370"
    },
    {
        "content": "\u4e00\u9053\u6a21\u62df\u9898\u3002\n\n\u53ef\u4ee5\u7528\u4e00\u4e2a bool \u7c7b\u578b\u6570\u7ec4\u8868\u793a\u6bcf\u4e00\u5929\u662f\u5426\u662f\u4f11\u606f\u65e5\uff08\u95f0\u5e74\u6709 366 \u5929\uff0c2012 \u5e74\u662f\u95f0\u5e74\uff09\u3002\u53ea\u8981\u8ba1\u7b97\u51fa\u5468\u516d\u5468\u65e5\u5728\u90a3\u4e00\u5929\uff0c\u7136\u540e\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u65b0\u589e\u7684\u4f11\u606f\u65e5\u5728\u90a3\u4e00\u5929\uff08\u5982\u679c\u8fd9\u4e00\u5929\u4e5f\u662f\u4f11\u606f\u65e5\u4e86\uff0c\u627e\u540e\u9762\u7b2c\u4e00\u4e2a\u4e0d\u662f\u4f11\u606f\u65e5\u7684\u5929\u6570\uff0c\u53d8\u6210\u4f11\u606f\u65e5\uff09\uff0c\u6700\u540e\u7edf\u8ba1\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6ce8\u610f\uff0c\u5e94\u8be5\u662f $2012$ \u5e74 $1$ \u6708 $1$ \u65e5\u662f\u5468\u65e5\u624d\u5bf9\uff0c\u9898\u76ee\u7ffb\u8bd1\u9519\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n\n\n#include<iostream>\n\nusing namespace std;\n\nbool jia[367];\nint monthDay[13] = {0, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}; \nint N = 0;\nint cnt = 0;\nint res = 0;\n\nint main () {\n\tcin >> N;\n\tint curM = 0;\n\tint curD = 0;\n\tjia[1] = true;\n\tfor(int i = 1; i <= 12; i ++){\n\t\tmonthDay[i] = monthDay[i - 1] + monthDay[i];//\u7edf\u8ba1\u6bcf\u4e2a\u6708\u7ed3\u675f\u65f6\u7684\u5929\u6570\u3002\n\t}\n\tfor(int i = 1; i <= 366; i ++){\n\t\tif(i % 7 == 0){//1 \u6708 1 \u65e5\u662f\u5468\u65e5\uff0c\u90a3\u4e48\u4ee5\u540e\u7684\u5929\u6570\u5982\u679c\u6a21 7 \u7b49\u4e8e 0,\u5c31\u662f\u5468\u516d\u3002\n\t\t\tjia[i] = true;\n\t\t\tjia[i + 1] = true;\n\t\t}\n\t}\n\tchar op;\n\tfor(int i = 1; i <= N; i ++){\n\t\tcin >> curM >> op >> curD;\n\t\tif(jia[monthDay[curM - 1] + curD] == true){//\u4e0a\u4e00\u4e2a\u6708\u7ed3\u675f\u7684\u5929\u6570\u52a0\u4e0a\u8fd9\u4e2a\u6708\u8fc7\u7684\u5929\u6570\u3002\n\t\t\tfor(int j = monthDay[curM - 1] + curD + 1; j <= 366; j ++){//\u5982\u679c\u8fd9\u4e00\u5929\u5df2\u7ecf\u662f\u4f11\u606f\u65e5\u4e86\uff0c\u90a3\u4e48\u4ece\u540e\u9762\u627e\u5230\u7b2c\u4e00\u4e2a\u6ca1\u6709\u4f11\u606f\u7684\u65e5\u5b50\u3002\n\t\t\t\tif(jia[j] == false){\n\t\t\t\t\tjia[j] = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tjia[monthDay[curM - 1] + curD] = true;\n\t\t}\n\t}\n\tfor(int i = 1; i <= 366; i ++){\n\t\tif(jia[i] == false){\n\t\t\tres = max(res, cnt);\n\t\t\tcnt = 0;\n\t\t}\n\t\telse{\n\t\t\tcnt ++;\n\t\t}\n\t}\n\tcout << max(res, cnt) << endl;//\u6700\u540e\u7684\u4e00\u6bb5\u8fde\u4f11\u6ca1\u6709\u7edf\u8ba1\u4e0a\u3002\n\treturn 0;\n}",
        "postTime": 1637670729,
        "uid": 422647,
        "name": "zchqwq",
        "ccfLevel": 4,
        "title": "AT370\u9898\u89e3"
    }
]