[
    {
        "content": "\n\n### solution\n\n\u6211\u4eec\u5148\u8003\u8651\u66b4\u529b\uff0c\u628a $K$ \u7684\u500d\u6570\u679a\u4e3e\uff0c\u6bcf\u679a\u4e3e\u4e00\u4e2a\u53d6\u6bcf\u4f4d\u6c42\u548c\u3002  \n\n\u8fd9\u80af\u5b9a\u8d85\u65f6\uff0c\u5173\u952e\u662f\u5faa\u73af\u53d6\u6bcf\u4f4d\u7206\u70b8\uff0c\u90a3\u4e48\u6211\u4eec\u4e0d\u59a8\u60f3\uff0c\u4e00\u4e2a\u6570\u7684\u5404\u4e2a\u4f4d\u6570\u548c\u662f\u5982\u4f55\u6c42\u51fa\u7684\u3002\n\n\n\n\u5148\u770b\u4e2a\u4f4d\uff0c$1$ \u7684\u4f4d\u548c\u4e3a $1$\uff0c$2$ \u5c31\u5728 $1$ \u7684\u524d\u63d0\u4e0b $+1$ \u4ee5\u6b64\u7c7b\u63a8\uff0c\u5c31\u80fd\u6c42\u51fa\u4e2a\u4f4d\u4f4d\u548c\u3002  \n\n\u518d\u770b\u5176\u4ed6\u4f4d\uff0c\u65e0\u975e\u5c31\u662f $n$ \u4e2a $10$ \u52a0\u4e0a\u82e5\u5e72 $1$\uff0c\u601d\u8003 $10$\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 $1 \\times 10$ \u6765\u8868\u793a\uff0c\u90a3\u5404\u4f4d\u548c\u4ecd\u4e3a $1$\u3002\n\n\n\n\u7efc\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u6574\u7406\u51fa\u4e24\u79cd\u72b6\u6001\uff1a$+1$ \u4e0e $\\times 10$\uff0c\u90a3\u4e48 $+1$ \u662f\u5404\u4f4d\u548c $+1$\uff0c\u53ef $\\times 10$ \u5404\u4f4d\u548c\u5374\u4e0d\u4fbf\uff0c\u6545\u53ef\u4ee5\u8f6c\u6362\u4e3a **01 bfs**\uff0c\u5982\u56fe\n\n\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/qhejrx3s.png)\n\n\n\n\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u90a3\u5c31\u662f\u8fd9\u79cd\u65b9\u6cd5\u662f\u4f1a\u8d85 $\\sf long~long$ \u7684\uff0c\u96be\u9053\u6211\u4eec\u8fd8\u8981\u7528\u9ad8\u7cbe\u5417\uff1f  \n\n\u5f53\u7136\u4e0d\uff0c\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u6b32\u6c42 $K$ \u7684\u500d\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u5728\u6bcf\u6b21 $\\times 10$ \u662f $\\% K$ \u5c31\u884c\u4e86\uff0c\u56e0\u4e3a\u8fd9\u6837\u4f59\u6570\u4e0d\u53d8\uff0c\u4e0d\u5f71\u54cd\u7ed3\u679c\u3002\n\n\n\n\u8bb2\u5b8c\u57fa\u672c\u601d\u8def\uff0c\u8bb2\u4e00\u4e0b\u5982\u4f55\u5b9e\u73b0\u3002\n\n\n\n\u6211\u4eec\u77e5\u9053 bfs \u4e00\u822c\u4f1a\u7528\u961f\u5217\uff0c\u90a3\u4e48\u5728 01 bfs \u4e2d\uff0c\u6211\u4eec\u4f1a\u7528\u5230\u53cc\u5411\u961f\u5217 $\\rm deque$\u3002  \n\n`#include <queue>` \u4e0e `#include <deque>` \u5747\u5305\u542b $\\rm deque$\uff0c\u53ef\u4ee5\u7528\u4efb\u610f\u4e00\u4e2a\u5e93\u3002\n\n\n\n### Code\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <deque>\nusing namespace std;\n\nconst int NR = 1e6 + 5;\nint k;\nint ans;\nbool vis[NR];\nstruct node {\n\tint num, w;\n};\ndeque<node> d;\n\nvoid bfs() {\n\td.push_front(node{1, 1});\n\tvis[1] = true;\n\twhile (!d.empty()) {\n\t\tint num = d.front().num, w = d.front().w;\n\t\td.pop_front();\n\t\tif (num == 0) {\n\t\t\tcout << w << endl;\n\t\t\treturn;\n\t\t}\n\t\tif (!vis[10 * num % k]) {\n\t\t\td.push_front(node{10 * num % k, w});\n\t\t\tvis[10 * num % k] = true;\n\t\t}\n\t\tif (!vis[num + 1]) {\n\t\t\td.push_back(node{num + 1, w + 1});\n\t\t}\n\t}\n\treturn;\n}\n\nint main() {\n\tcin >> k;\n\tbfs();\n\treturn 0;\n}\n```\n\n\n\n",
        "postTime": 1610542872,
        "uid": 128369,
        "name": "AgrumeStly",
        "ccfLevel": 0,
        "title": "[AT3621][ARC084B] Small Multiple"
    },
    {
        "content": "\u8003\u8651\u6781\u7aef\u60c5\u51b5\u6570\u5b57\u662f\u53ef\u80fd\u7206`long long`\u751a\u81f3`__int128`\u8fd9\u79cd\u4e1c\u897f\u7684\n\n\u6240\u4ee5\u601d\u8003\u7684\u65b9\u5411\u662f\u5bf9\u4e8e\u6570\u4f4d\u8fdb\u884c\u5904\u7406\n\n\u8003\u8651\u6bcf\u4e00\u4e2a\u6570\u90fd\u80fd\u4ece$1$\u901a\u8fc7\u4ee5\u4e0b\u4e24\u79cd\u64cd\u4f5c\u6765\u5f97\u5230\uff1a\n\n - \u4e58$10$\uff0c\u6570\u4f4d\u548c\u4e0d\u53d8\n - \u52a0$1$\uff0c\u5e76\u4e14\u6570\u4f4d\u548c$+1$\n \n\u5728$\\text{mod}\\ k$\u7684\u610f\u4e49\u4e0b\u8fdb\u884c\u8ba1\u7b97\uff0c\u628a$0 \\sim k-1$\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6570\u770b\u6210\u4e00\u4e2a\u70b9\uff0c$i$\u5411$i+1$\u8fde\u4e00\u6761\u6743\u503c\u4e3a$1$\u7684\u8fb9\uff0c$i$\u5411$10i$\u8fde\u4e00\u6761\u6743\u503c\u4e3a$0$\u7684\u8fb9\uff0c\u4ece$1$\u5230$0$\u8dd1\u6700\u77ed\u8def\u5373\u53ef\n\n\u8fd9\u65f6\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u4e0a\u9762\u8bf4\u4e86\uff0c$+1$\u7684\u65f6\u5019\u5fc5\u987b\u4fdd\u8bc1\u6570\u4f4d\u548c$+1$\uff0c\u6240\u4ee5\u8fde\u7eed\u8d70$10$\u6b21\u53ca\u4ee5\u4e0a\u6743\u503c\u4e3a$1$\u7684\u8fb9\u662f\u4e0d\u5408\u6cd5\u7684\u3002\u4f46\u53ef\u4ee5\u53d1\u73b0\u8fd9\u6837\u8d70\u4e00\u5b9a\u4e0d\u662f\u6700\u77ed\u8def\uff08\u53ef\u4ee5\u5728\u4e58$10$\u4e4b\u524d\u8d70$1$\u6b65\u7136\u540e\u518d\u4e58$10$\uff09\uff0c\u6240\u4ee5\u4e0d\u5f71\u54cd\u7b54\u6848\u3002\n\n\u6211\u4eec\u5176\u5b9e\u4e5f\u53ef\u4ee5\u5f97\u5230\u4e00\u79cd\u7b49\u4ef7\u7684\u505a\u6cd5\uff1a\n\n$k$\u4e2a\u70b9\u8868\u793a$\\text{mod}\\ k=0\\sim k-1$\u7684\u6700\u5c0f\u6570\u5b57\u548c\uff0c\u8d77\u70b9\u662f$1\\sim k-1(d_i=i)$\uff0c\u7ec8\u70b9\u4e3a$0$\uff0c$x$\u5411$(10x+0 \\sim 9) \\text{mod}\\ k$\u8fde\u8fb9\u6743\u4e3a$0\\sim 9$\u7684\u8fb9\uff0c\u8dd1\u6700\u77ed\u8def\u3002\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <iostream>\n#include <queue>\nusing namespace std;\n\nconst int MAXN = 1e5 + 10;\nint n, m, first[MAXN], tot, d[MAXN], s, t;\n\nstruct edge { int from, v, w; } e[20 * MAXN];\nstruct Node\n{\n\tint x, d;\n\tbool operator <(const Node &b)const\n\t{\n\t\treturn d > b.d;\n\t}\n}cyc;\npriority_queue<Node> q;\ninline void insert(int u, int v, int w)\n{\n\ttot++; e[tot].v = v; e[tot].w = w; e[tot].from = first[u]; first[u] = tot;\n}\nint main()\n{\n\tios::sync_with_stdio(false); cin.tie(0);\n\tcin >> n;\n\tfor (register int i = 1; i <= n; i++)\n\t\tfor (register int j = 0; j <= 9; j++)insert(i, ((i - 1) * 10 + j) % n + 1, j);\n\tfor (register int j = 1; j <= 9; j++) insert(0, j + 1, j);\n\ts = 0; t = 1;\n\tmemset(d, 0x3f, sizeof d);\n\td[s] = 0; q.push((Node) { s, d[s] });\n\twhile (!q.empty())\n\t{\n\t\tcyc = q.top(); q.pop();\n\t\tif (cyc.d != d[cyc.x])continue;\n\t\tregister int x = cyc.x;\n\t\tfor (register int i = first[x]; i; i = e[i].from)\n\t\t\tif (d[e[i].v] > d[x] + e[i].w)\n\t\t\t{\n\t\t\t\td[e[i].v] = d[x] + e[i].w;\n\t\t\t\tq.push((Node) { e[i].v, d[e[i].v] });\n\t\t\t}\n\t}\n\treturn cout << d[t], 0;\n}\n```",
        "postTime": 1558600639,
        "uid": 13290,
        "name": "sky_of_war",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT3621 \u3010Small Multiple\u3011"
    },
    {
        "content": "\u6211\u7b2c\u4e00\u6b21\u62ff\u5230\u8fd9\u4e2a\u9898\u7684\u65f6\u5019\u60f3\u6cd5\u662f\u66b4\u529b\u679a\u4e3e\uff0c\u7ed3\u679c\u53d1\u73b0\n\n$k\\leq10^5$ \u800c\u4e14\u8fd9\u662f\u4e00\u9053\u7701\u9009\u9898\uff0c\u5c31\u77e5\u9053\u51c9\u51c9\u3002\n\n\u5148\u5f15\u7528\u4e00\u4e2a\u5c0f\u516c\u5f0f\uff1a\n\n$\\overline{ab}=10*a+b $ \n\n\u8fd9\u662f\u4e00\u9053 bfs \u7684\u9898\uff0c\u5148\u5b9a\u4e49\u4e00\u4e2a $f_i$ \u6570\u7ec4\u8868\u793a\u4f59\u6570\u4e3a $i$ \u7684\u6570\u5b57\u548c\u6700\u5c0f\u503c\uff0c\u521d\u59cb\u5316\u65f6\u8bbe\u4e3a\u65e0\u7a77\u5927\u3002\n\n\u518d\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53 num \u5b58\u5165\u4e00\u4e2a\u6570\u7684\u6570\u5b57\u548c\u548c\u4f59\u6570\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u6b21\uff0c\u5148\u8ba9\u4e00\u4f4d\u6570\u548c\u4ed6\u7684\u4f59\u6570\u4e00\u8d77\u5165\u961f\uff0c\u6bcf\u4e00\u6b21\u53ea\u8981\u961f\u5217\u8fd8\u6709\u5143\u7d20\uff0c\u5c31\u53d6\u51fa\u961f\u9996\uff0c\u7136\u540e\u5728\u6700\u540e\u52a0\u4e0a $1,2,3...,9$\uff0c\u7b97\u51fa\u4f59\u6570\u518d\u5165\u961f\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nfor(int i=0;i<=9;i++){//\u679a\u4e3e\u4e0b\u4e00\u4f4d\n\tds.r=(10*dy.r+i)%k;\n\tds.s=dy.s+i;\n\tq.push(ds);\n}\n```\n\n\u7279\u522b\u7684\uff0c\u5982\u679c\u961f\u9996\u90fd\u5df2\u7ecf\u4e0d\u662f\u6700\u4f18\u89e3\u4e86\uff0c\u5c31\u7ee7\u7eed\u4e0b\u4e00\u4e2a\u56de\u5408\uff0c\u4e0d\u7136\u66f4\u65b0 $f_i$\u3002\n\n## _Code_\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<queue>\n#include<cmath>\nusing namespace std;\n#define ll long long\nconst int MAXN=1e5+5;\nint f[MAXN];//f[i]\u8868\u793a\u4f59\u6570\u4e3ai\u6570\u5b57\u548c\u6700\u5c0f\u503c\nstruct num{\n\tint r=0;//\u4f59\u6570\n\tint s;//\u6570\u5b57\u548c\n}ds,dy;\nqueue <num> q;\nint k;\nint main(){\n\tfor(int i=0;i<MAXN;i++)\n\t\tf[i]=1e9;\n\tcin>>k;\n\tfor(int i=1;i<=9;i++){\n\t\tds.r=i%k;\n\t\tds.s=i;\n\t\tq.push(ds);\n\t}\n\twhile(!q.empty()){\n\t\tdy=q.front();\n\t\tq.pop();\n\t\tif(f[dy.r]<=dy.s)\n\t\t\tcontinue;\n\t\tf[dy.r]=dy.s;\n\t\tfor(int i=0;i<=9;i++){//\u679a\u4e3e\u4e0b\u4e00\u4f4d\n\t\t\tds.r=(10*dy.r+i)%k;\n\t\t\tds.s=dy.s+i;\n\t\t\tq.push(ds);\n\t\t}\n\t}\n\tcout<<f[0];\n}\n```\n\n\n\n\n\n",
        "postTime": 1619132443,
        "uid": 248400,
        "name": "Inaba_Meguru",
        "ccfLevel": 7,
        "title": "AT3621 [ARC084B] Small Multiple \u9898\u89e3"
    },
    {
        "content": "$AT3621$ $ $ [ARC084B] $Small\\ Multiple$\n\n[link](https://www.luogu.com.cn/problem/AT3621)\n\n\u96be\u5ea6\u865a\u9ad8\uff0c\u5927\u6982\u7eff\u9898\u3002\n\n\u8bbe $f(s)$ \u4e3a $s$ \u5404\u4e2a\u4f4d\u6570\u4e0a\u7684\u548c\n\n\u6211\u4eec\u8981\u6c42\u7684 $ans$ \u6ee1\u8db3 $ans\\equiv 0\\ $ $\\pmod k\\ $ \u4e14 $\\ f(ans)$ \u6700\u5c0f\n\n\u8003\u8651 $dp[i]$ \u8868\u793a $\\min {f(x)}\\ $ $(\\ x \\equiv i\\pmod k)$ \n\n\u600e\u4e48\u8f6c\u79fb\uff0c\n\n\u8003\u8651\u5728$\\ x$ $(\\ x \\equiv i\\pmod k)$  \u540e\u52a0\u4e0a\u4e00\u4e2a\u6570 $y(y \\in [0,9]),$ \u90a3\u4e48\u6613\u5f97\u52a0\u4e0a\u540e\u7684\u4f59\u6570\u4e3a\n$$(x\\times 10+y) \\mod k$$\n\u5373\n$$(i\\times 10+y) \\mod k$$\n\n\u6240\u4ee5\n$$dp[(i\\times 10+y)\\mod k] = \\min (dp[i]+y)$$\n\n$ $\n\n\u6709\u6728\u6709\u611f\u89c9\u548c\u677e\u5f1b\u64cd\u4f5c\u7684\u65b9\u7a0b\u5f88\u50cf\uff1f\n\n\u63a5\u4e0b\u53bb\u5c31\u5efa\u56fe\u786e\u5b9a\u8f6c\u79fb\u987a\u5e8f\uff0c\u518d\u8dd1\u4e00\u904d\u5355\u6e90\u6700\u77ed\u8def\u5f84\u677f\u5b50\u5373\u53ef\uff0c\u7b54\u6848\u5373 $dis[0]$\n\n\u8fb9\u662f $k$ \u7684 $10$ \u500d\uff0c\u590d\u6742\u5ea6\u5e26\u53ea $\\log$\n\n$\\mathcal{O(k\\log_{2} k)}$\n\n$code:($ \u5927\u534a\u90e8\u5206\u90fd\u662f dijkstra \u677f\u5b50\uff0c\u6838\u5fc3\u5c31\u51e0\u884c $)$\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long LL;\ntemplate <typename T>\ninline void read(T &x) {\n    char c = getchar(); int w = 1; x = 0;\n    while (!isdigit(c))\n        (c == '-') && (w = -w), c = getchar();\n    while (isdigit(c))\n        x = (x << 1) + (x << 3) + (c ^ '0'), c = getchar();\n    x *= w;\n}\n\nconst int N = 100005;\nint k, cnt = 0, dis[N], head[N];\nstruct edge {\n    int dis, to, nxt;\n} e[N<<4];//k\u768410\u500d\uff0c\u8fd9\u91cc\u5f00\u4e8616\u500d\nstruct node {\n    int u, d;\n    node(int x, int y) : u(x), d(y) { }\n    inline bool operator < (const node & a) const {\n        return d > a.d;\n    }\n} ;\ninline void add(int u, int v, int w) {\n    e[++ cnt].dis = w; e[cnt].to = v; e[cnt].nxt = head[u]; head[u] = cnt;\n}\ninline void Dijkstra(int s) {\n    memset(dis, 0x3f, sizeof(dis));\n    dis[s] = 0;\n    priority_queue<node> q;\n    q.push(node(s, 0));\n    while (!q.empty()) {\n        node h = q.top(); q.pop();\n        int u = h.u, d = h.d;\n        if (d != dis[u]) continue;\n        for (register int i=head[u]; i; i=e[i].nxt) {\n            int to = e[i].to;\n            if (dis[u] + e[i].dis < dis[to]) {\n                dis[to] = dis[u] + e[i].dis;\n                q.push(node(to, dis[to]));\n            }\n        }\n    }\n    return;\n}         //\u677f\u5b50\nsigned main() {\n    read(k);\n    for (register int i=0; i<k; ++i)\n        for (register int j=0; j<10; ++j) {\n            add(i, (i*10+j)%k, j);\n        }\n    for (register int i=1; i<10; ++i)\n        add(k, i%k, i);//\u5efa\u865a\u70b9,\u7b2c\u4e00\u4f4d\u4e0d\u80fd\u4e3a0\n    Dijkstra(k);\n    cout << dis[0];\n    return 0;\n}\n```\n",
        "postTime": 1610111971,
        "uid": 75762,
        "name": "zjh111111",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 AT3621 \u3010[ARC084B] Small Multiple\u3011"
    },
    {
        "content": "# AT3621\u3010Small Multiple\u3011 \u9898\u89e3  \n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/AT3621)\n\n\u867d\u7136\u8bf4\u4ee3\u7801\u5f88\u77ed\uff0c\u4f46\u662f\u5361\u4e86\u6211\u5f88\u4e45\u2026\u2026**~~\u8bf4\u597d\u7684\u6c34\u9898\u5462\uff1f~~**\n\n\u597d\u4e86\uff0c\u8fd9\u4e2a\u9898\u76ee\u5176\u5b9e\u8fd8\u662f\u5f88~~\u6c34~~\u7684\u3002\n\n------------\n\n**\u9898\u610f\u89e3\u8bfb**\uff1a\n\n\u9898\u76ee\u5c31\u662f\u8ba9\u4f60\u628a\u6574\u6570$K$\u7ffb$n$\u500d\uff0c\u4f7f\u5f97\u5404\u6570\u4f4d\u4e4b\u548c\u6700\u5c0f\u3002\n\n------------\n\n**\u89e3\u9898\u601d\u8def**\uff1a\n\n\u9996\u5148\u6211\u4eec\u5047\u8bbe\u6ee1\u8db3$XmodK=0$\uff0c\u4e14$X$\u4e3a\u6211\u4eec\u8981\u6c42\u7684\u90a3\u4e2a\u6570\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5bf9$X=1$\u6709\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n1. $X*=10$\uff0c\u90a3\u4e48\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u8fd9\u4e2a\u6570\u7684**\u5404\u4f4d\u6570\u4e4b\u548c\u6ca1\u53d8**\uff0c\u5176\u4ee3\u4ef7\u4e3a$0$\uff1b\n\n1. $X+=1$\uff0c\u540c\u4e0a\uff0c$X$\u6bd4\u4e0a\u6b21\u591a\u4e86$1$\uff0c\u5c31\u662f\u4e2a\u4f4d\u6570\u5b57\u591a\u4e86$1$\uff0c\u90a3\u4e48\u8fd9\u6b21\u64cd\u4f5c\u7684\u4ee3\u4ef7\u4e3a$1$\uff1b\n\n\u7136\u540e\u6211\u4eec**\u53ea\u8981\u5224\u65ad\u662f\u4e0d\u662f\u500d\u6570\u5c31\u884c\u4e86**\uff0c\u53d6\u6a21\u64cd\u4f5c\u5c31\u4e0d\u7528\u89e3\u91ca\u4e86\u3002\n\n~~\u81f3\u4e8e\u90a3\u4e9b\u540c\u4f59\u548c\u6700\u77ed\u8def\uff0c\u672c\u849f\u84bb\u8868\u793a\u4e00\u7a8d\u4e0d\u901a~~\n\n\u6240\u4ee5**\u66b4\u529b\u6253\u4e2a$BFS$\uff0c\u53cd\u6b63$BFS$\u5e94\u8be5\u662f\u6b63\u89e3\u5427\uff1f**\n\n\u7136\u540e\u5177\u4f53\u5b9e\u73b0\u5c31\u662f\u4f7f\u7528\u4e00\u4e2a\u53cc\u7aef\u961f\u5217\uff0c\u628a\u4ee3\u4ef7\u4e3a$0$\u7684\u64cd\u4f5c\u653e\u961f\u9996\uff0c\u4ee3\u4ef7\u4e3a$1$\u7684\u653e\u961f\u5c3e\uff0c\u540c\u65f6\u7528\u4e2a$pair$\u5b58\u4e00\u4e0b\u5f53\u524d$X$\u548c\u6570\u4f4d\u4e4b\u548c\u3002\n\n~~\u7531\u4e8e\u4e0a\u9762\u89e3\u91ca\u7684\u5f88\u6e05\u695a\u4e86\uff0c\u90a3\u6211\u4e0b\u9762\u5c31\u53ea\u653e\u4ee3\u7801\u4e86\u3002~~\n\n$Code$|~~\u6b63\u89e3~~\n------------\n```cpp\n    #include<cstdio>\n    #include<queue>\n    #define put(x,y) make_pair(x,y)\n    using namespace std;\n    const int SIZE=1e6;\n    deque< pair<int,int> > p;\n    bool vis[SIZE];\n    int k;\n    void bfs() {\n        while(p.size()) {\n            pair<int,int> now=p.front(); p.pop_front();\n            if(vis[now.first]) continue;\n            vis[now.first]=true;\n            if(!now.first) {\n                printf(\"%d\\n\",now.second);\n                return;\n            }\n            p.push_front(put(now.first*10%k,now.second));\n            p.push_back(put((now.first+1)%k,now.second+1));\n        }\n    }\n    int main() {\n        scanf(\"%d\",&k);\n        p.push_front(put(1,1));\n        bfs();\n        return 0;\n    }\n```\n\n\n\n",
        "postTime": 1558022105,
        "uid": 196649,
        "name": "xiejinhao",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 AT3621 \u3010Small Multiple\u3011"
    },
    {
        "content": "\u7b2c\u4e00\u6b21\u505a\u8fd9\u6837\u7684\u9898\n\n\u9898\u610f\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570$K$.\u6c42\u4e00\u4e2a$K$\u7684\u6574\u6570\u500d$SUM$,\u4f7f\u5f97$SUM$\u7684\u6570\u4f4d\u7d2f\u52a0\u548c\u6700\u5c0f\n\n\u7eaa\u5ff5$ATcoder$ \u795e\u9898$Orz$\n\n\u8003\u8651\u6570\u4f4d\u53d6\u6a21\u5957\u8def\uff0c$*10$\u5bf9\u7b54\u6848\u8d21\u732e\u4e3a$0$\uff0c$+1$\u8d21\u732e\u4e3a$1$\u3002\n\n\u8dd1\u4e00\u4e2a\u540c\u4f59\u6700\u77ed\u8def\uff0c\u5728$(\\mod K)$\u610f\u4e49\u4e0b\u5efa\u56fe\uff0c$i$\u5411$i+1$\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a$1$\u7684\u8fb9\uff0c$i$\u5411$10i$\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a$0$\u7684\u8fb9\uff0c\n\n\u6700\u77ed\u8def\u7684\u610f\u4e49\u5c31\u662f\u4ea7\u751f\u4e00\u4e2a\u80fd\u6574\u9664$K$\u7684\u6b63\u6574\u6570\u5728\u6570\u4f4d\u4e0a\u6240\u9700\u7684\u6700\u5c0f\u4ee3\u4ef7\n\n\u8fb9\u6743\u53ea\u6709$0$\u548c$1$       $01BFS$\n\n\u6ce8\u610f\u4f18\u5148\u628a\u8d21\u732e\u4e3a$0$\u6254\u5230\u961f\u5934\uff0c\u4fdd\u8bc1\u6bcf\u6b21\u4ece\u961f\u9996\u53d6\u51fa\u6765\u7684\u662f\u5f53\u524d\u961f\u4e2d\u8ddd\u79bb\u6e90\u70b9\u6700\u77ed\u7684\u8282\u70b9\n\n$O(n+m)$\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\nusing namespace std;\nconst int N = 1e5 + 5;\nstruct node{int num,w;};\ndeque<node>q; int K;\nbool v[N];\nvoid bfs(){\n    while(!q.empty()){\n        node x = q.front(); q.pop_front();\n        if(v[x.num]) continue;\n        v[x.num] = 1;\n        if(!x.num){ printf(\"%d\",x.w); return ; }\n        q.push_front((node){x.num*10 % K,x.w});\n        q.push_back((node){(x.num+1) % K,x.w + 1});\n    }\n}\nint main(){\n    scanf(\"%d\",&K);\n    q.push_front((node){1,1});\n    bfs();\n}\n```\n\n",
        "postTime": 1602746224,
        "uid": 262212,
        "name": "\u662f\u4e2a\u59b9\u5b50\u5566",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT3621 \u3010[ARC084B] Small Multiple\u3011"
    },
    {
        "content": "# **\u6b63\u6587\uff1a**\n## \u9898\u610f:\n\u6bcf\u4e00\u4e2a\u6570\u90fd\u53ef\u4ee5\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c\uff1a\n1. \u5c06\u5176 $\\times 10$ \uff0c\u4f4d\u6570\u4e4b\u548c\u4e0d\u53d8\uff0c\u6240\u4ee5\u6b64\u8fb9\u5bf9\u5e94\u6743\u91cd\u4e3a $0$\u3002\n2. \u5c06\u5176 $+1$ \uff0c\u4f4d\u6570\u4e4b\u548c\u4e5f\u968f\u4e4b $+1$ \u5176\u5bf9\u5e94\u6743\u91cd\u4e3a $1$\u3002\n\n\u5982\u679c\u4fdd\u5b58\u90a3\u4e2a\u6570\u5b83\u672c\u8eab\u53ef\u80fd\u4f1a\u7206long long\uff0c\u6240\u4ee5\u6211\u4eec\u6bcf\u4e00\u6b21\u53ea\u5b58\u50a8\u5176\u6743\u91cd\uff0c\u5c06\u5176\u539f\u503c $\\mod k$ \u5373\u53ef\u3002\n\n\u4f7f\u7528 0-1 $bfs$ \u8fdb\u884c\u641c\u7d22\uff0c\u4ece $1$ \u5f00\u59cb\u8fdb\u884c\u641c\u7d22\uff0c\u5c06\u6743\u91cd\u4e3a $0$ \u7684\u7ed3\u70b9\u63a8\u5165\u961f\u9996\uff0c\u6743\u91cd\u4e3a $1$ \u7684\u7ed3\u70b9\u63a8\u5165\u961f\u5c3e\uff0c\u4ece\u961f\u9996\u81f3\u961f\u5c3e\u904d\u5386\uff0c\u5f53\u5224\u65ad\u5230 $k$ \u7684\u500d\u6570\u65f6\u8fdb\u884c\u8f93\u51fa\u5373\u53ef\u3002\n## \u7a0b\u5e8f\u5982\u4e0b:\n```cpp\n#include<cstdio>\n#include<deque>\nusing namespace std;\n\nint k;\nbool vis[100005];              //\u7528\u6765\u5b58\u5df2\u8bbf\u95ee\u7684\u7ed3\u70b9\n\nstruct node{\n\tint num,w;                 //w\u5b58\u5230\u6b64\u7ed3\u70b9\u7684\u4ee3\u4ef7\u548c\n};\n\ndeque<node> d;                 //\u5b9a\u4e49\u4e00\u4e2a\u53cc\u7aef\u961f\u5217\n\nvoid bfs(){\n\td.push_front(node{1,1});   //\u4ece1\u5f00\u59cb\uff0c1\u7684\u4ee3\u4ef7\u4e3a1\n\tvis[1]=true;\n\twhile(!d.empty()){\n\t\tint num=d.front().num,w=d.front().w;\n\t\td.pop_front();\n\t\tif(num==0){\n\t\t\tprintf(\"%d\\n\",w);  //ATcoder\u9898\u90fd\u9700\u8981\u6362\u884c\n\t\t\treturn;\n\t\t}\n\t\tif(!vis[num*10%k]){\n\t\t\td.push_front(node{num*10%k,w});\n\t\t\tvis[num*10%k]=true;\n\t\t}\n\t\tif(!vis[(num+1)%k])d.push_back(node{(num+1)%k,w+1});\n\t\t//\u961f\u5c3e\u4e0d\u9700\u8981\u6807\u8bb0\u5df2\u8bbf\u95ee\n\t}\n\treturn;\n}\n\nint main(){\n\tscanf(\"%d\",&k);\n\tbfs();\n\treturn 0;\n}\n```\n# **THE END**",
        "postTime": 1610103433,
        "uid": 299883,
        "name": "HYdroKomide",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 AT3621 \u3010[ARC084B] Small Multiple\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7684\u89e3\u6cd5\u662f $01bfs$ + $deque$\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u6bcf\u4e00\u4e2a\u6570\u90fd\u53ef\u4ee5\u4ece $1$ \u901a\u8fc7\u4ee5\u4e0b\u4e24\u79cd\u9014\u5f84\u5f97\u5230\n\n- $+1$\n\n- $*10$\n\n\u800c\u8fd9\u4e24\u79cd\u9014\u5f84\u6240\u589e\u52a0\u7684\u6743\u91cd\uff08\u6570\u5b57\u548c\uff09\u5206\u522b\u4e3a\uff1a\n\n- $1$\n\n- $0$\n\n\u6211\u4eec\u53ef\u4ee5\u5229\u7528 $deque$ \u7684\u7279\u6027:\u4e24\u7aef\u90fd\u80fd $push$ \u6570\u5b57\n\n\u4f46\u662f\u5982\u679c\u628a\u6bcf\u79cd\u6570\u5b57\u90fd\u5b58\u4e0b\u6765\uff0c\u7206 $long\\ long$ \u4e5f\u662f\u6709\u53ef\u80fd\u7684\u3002\u800c\u6211\u4eec\u5224\u65ad\u4ed6\u662f\u4e0d\u662f\u4e00\u4e2a\u6570\u7684\u500d\u6570\uff0c\u53ea\u9700\u8981\u77e5\u9053 $n \\mod k$ \u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5c06\u6743\u91cd\u4e3a $0$ \u7684\u7ed3\u70b9 $push$ \u5165\u53cc\u7aef\u961f\u5217\u7684\u961f\u9996\uff0c\u5c06\u6743\u91cd\u4e3a $1$ \u7684\u7ed3\u70b9 $push$ \u5165\u53cc\u7aef\u961f\u5217\u7684\u961f\u5c3e\uff0c\u7136\u540e\u4ece\u961f\u9996\u5230\u961f\u5c3e\u904d\u5386\u5373\u53ef\u3002\n\n```\n// syx AK IOI\n#include <iostream>\n#include <cstdio>\n#include <deque>\n#include <cstring>\nusing namespace std;\n\nconst int COL = 1e5 + 5;\n\nstruct node {\n\tint x, res;\n\t// num ans\n};\n\ndeque <node> d;\nint k;\nbool vis[COL];\n\nvoid bfs() {\n\tmemset(vis, 0, sizeof(vis));\n\td.push_front((node){1, 1});\n\tvis[1] = 1;\n\twhile (!d.empty()) {\n\t\tint x = d.front().x, res = d.front().res;\n\t\td.pop_front();\n\t\tif (x == 0) { // x % k == 0 -> \u662f k \u306e\u500d\u6570\n\t\t\tcout << res << endl;\n\t\t\treturn ;\n\t\t}\n\t\t// * 10\n\t\tif (!vis[x*10%k]) { // didn't found\n\t\t\td.push_front((node){x * 10 % k, res}); // \u4e0d\u53d8\n\t\t\tvis[x*10%k] = 1;\n\t\t}\n\t\t// + 1\n\t\tif (!vis[(x+1)%k]) { // didn't found\n\t\t\td.push_back((node){(x + 1) % k, res + 1}); // changed\n\t\t}\n\t}\n\treturn ;\n}\n\nint main() {\n\tscanf(\"%d\", &k);\n\tbfs();\n\treturn 0;\n}\n```",
        "postTime": 1610108745,
        "uid": 317198,
        "name": "MilkyCoffee",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT3621 \u3010[ARC084B] Small Multiple\u3011"
    },
    {
        "content": "\u4e00\u4e2a\u6570$x ->x+1$\u4f7f\u6570\u4f4d\u548c$+1$\uff0c$x->10\\times x$\u548c\u4e0d\u53d8\u3002\n\n\u90a3\u8003\u8651\u5728$\\mod k$\u610f\u4e49\u4e0b\u7684\u6bcf\u4e2a\u6570\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u53ef\u4ee5\u5efa\u51fa\u4e00\u4e2a$k$\u4e2a\u70b9\u7684\u56fe\uff0c\u7f16\u53f7\u4e3a$0$~$(k-1)$\uff0c\u5176\u4e2d$0$~$(k-1)$\u7684\u70b9\u5411$(10 \\times i) \\bmod k$ \uff0c$(10 \\times i+1) \\bmod k$ \uff0c$(10 \\times i+2) \\bmod k$ $\u2026\u2026$ $(10 \\times i +9) \\bmod k$ \uff0c\u8fb9\u6743\u5206\u522b\u4e3a$0,1,2\u2026\u20269$\u3002\n\n\n\u800c$dis[x]$\u8868\u793a\u5230\u6570$x$\u6240\u9700\u8981\u7684\u4ee3\u4ef7\n\n\u56e0\u4e3a\u6240\u6c42\u4e3a$k$\u7684\u6574\u6570\u500d\u7684\u6700\u5c0f\u6570\u4f4d\u548c\uff0c\u6240\u4ee5\u53ef\u4ee5\u5206\u522b\u4ece$1$~$9$\u5206\u522b\u8dd1\u6700\u77ed\u8def\uff0c\u7b54\u6848\u4e3a$min(dis[0])$\n\n```\n#include<bits/stdc++.h>\n#define ld long double\n#define tset puts(\"qwq\");\n#define test puts(\"QAQ\");\n#define pb(a) push_back(a)\n#define pii pair<int,int> \n#define mkp make_pair\n#define bg begin()\n#define ed end()\n#define FR(i,a,b) for(int i=(a),i##E=(b);i<i##E;i++)\n#define FL(i,a,b) for(int i=(b)-1,i##E=(a-1);i>i##E;i--)\n#define R(i,a,b) for(int i=(a),i##E=(b);i<=i##E;i++)\n#define L(i,a,b) for(int i=(b),i##E=(a);i>=i##E;i--)\n#define sz(a) int((a).size())\n#define us unsigned \n#define int long long\n#define Swap(x,y) (x^=y^=x^=y)\nusing namespace std;\nconst int inf=0x7f7f7f7f7f7f;\nconst int mod=19930726;\nconst ld eps=1e-8;\ninline int add(int x) {return x >= mod ? x - mod : x;}\ninline int sub(int x) {return x < 0 ? x + mod : x;}\ninline void Add(int &x, int y) {if ((x += y) >= mod) x -= mod;}\ninline void Sub(int &x, int y) {if ((x -= y) < 0) x += mod;}\n//#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\n//char buf[1<<21], *p1 = buf, *p2 = buf;\nint read()\n{\n    int x=0,f=1;\n    char c=getchar();\n    while(!isdigit(c)){if(c=='-')f=-1;c=getchar();}\n    while(isdigit(c)){x=(x<<3)+(x<<1)+(c^48);c=getchar();}\n    return x*f;\n}\nconst int N=1e5+10;\nint n,res=inf;\nint dis[N],vis[N];\nstruct edge\n{\n\tint to,val;\n};\nstd::vector<edge>e[N];\nint spfa(int s=1)\n{\n\tdeque<int>q;\n\tfill(dis,dis+n+1,inf);dis[s]=0;\n\tq.push_back(s);\n\tvis[s]=1;\n\twhile(q.size()>0)\n\t{\n\t\tint u=q.front();\n\t\tq.pop_front();\n\t\tvis[u]=0;\n\t\tfor(auto vv:e[u])\n\t\t{\n\t\t\tint v=vv.to,val=vv.val;\n\t\t\tif(dis[v]>dis[u]+val)\n\t\t\t{\n\t\t\t\tdis[v]=dis[u]+val;\n\t\t\t\tif(!vis[v]) {\n\t\t\t\t\tvis[v]=1;\n\t\t\t\t\tq.push_back(v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn dis[0]+s;\n}\n\nsigned main()\n{\n\tn=read();\n\tfor(int i=1;i<n;i++) for(int j=0;j<=9;j++) e[i].push_back((edge){(10*i+j)%n,j});\n\tR(i,1,9) res=min(res,spfa(i));\n    printf(\"%lld\\n\",res);\n}\t\n```\n\n",
        "postTime": 1610098924,
        "uid": 115779,
        "name": "\u6781\u5bd2\u795e\u51b0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT3621 \u3010[ARC084B] Small Multiple\u3011"
    },
    {
        "content": "~~\u849f\u84bb\u7684\u89e3\u6cd5\u548c\u6b63\u89e3\u672c\u8d28\u4e0a\u5dee\u4e0d\u591a\uff0c\u4f46\u96be\u5199INF\u500d~~\n\n\u8bbe\u4e58\u7684\u500d\u6570\u4e3a$x$\uff0c\u5148\u5c06$x$\u62c6\u4f4d\uff0c\u90a3\u4e48$K\\times x$\u5c31\u662f\u7531\u82e5\u5e72\u4e2a$(0 - 9) \\times x$\u52a0\u8d77\u6765\u7684\uff0c\u50cf\u5217\u7ad6\u5f0f\u90a3\u6837\n\n\u8fd9\u4e2a\u65f6\u5019\u5f00\u59cbdp\uff0c\u8bbe$f_i$\u8868\u793a\u5f53\u524d\u6700\u540e\u82e5\u5e72\u4f4d\u662f$i$\uff0c\u4e4b\u524d\u7684\u6700\u5c0f\u7684\u4f4d\u6570\u548c\uff0c\u8f6c\u79fb\u7684\u65f6\u5019\u679a\u4e3e$x$\u7684\u65b0\u7684\u6700\u4f4e\u4f4d\uff0c\u53ea\u67099\u79cd\n\n\u56e0\u6b64\u8003\u8651\u5efa\u56fe\uff0c\u5728\u56fe\u4e0a\u8dd1\u6700\u77ed\u8def\u5373\u53ef\uff08$i$\u8282\u70b9\u7684\u6700\u7ec8\u7b54\u6848\u9700\u8981\u52a0\u4e0a$i$\uff09",
        "postTime": 1609241987,
        "uid": 46817,
        "name": "xcyle",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 AT3621 \u3010[ARC084B] Small Multiple\u3011"
    },
    {
        "content": "01bfs\u505a\u6cd5\n```\n# include <cstdio>\n# include <queue>\n# include <cstring>\n# include <iostream>\nusing namespace std;\n\nint k;\nbool vis[100005];//\u4f59\u6570\u4e3aj\u6709\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\nstruct node{\n\tint num, w;//\u4f59\u6570\uff0c\u6570\u7801\u548c\n};\ndeque<node> q;\nvoid bfs()\n{\n\tq.push_front(node{1, 1});\n\tvis[1] = true;\n\twhile(!q.empty()){\n\t\tnode temp = q.front();\n\t\tq.pop_front();\n\t\tif(temp.num == 0){\n\t\t\tcout << temp.w << endl;\n\t\t\treturn;\n\t\t}\n\t\tif(!vis[(temp.num * 10) % k]){\n\t\t\tq.push_front(node{(temp.num * 10) % k, temp.w});\n\t\t\tvis[(temp.num * 10) % k] = 1;\n\t\t}\n\t\tq.push_back(node{(temp.num + 1) % k, temp.w + 1});\n\t}\n\treturn;\n}\nint main()\n{\n\tcin >> k;\n\tbfs();\n\treturn 0;\n}\n```\n",
        "postTime": 1610161804,
        "uid": 191756,
        "name": "zzq_AC",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 AT3621 \u3010[ARC084B] Small Multiple\u3011"
    },
    {
        "content": "\u505a\u6cd5\u5f88\u7b80\u5355\uff0c\u4f46\u662f\u4e0d\u592a\u597d\u7406\u89e3\uff08~~\u4e3b\u8981\u662f\u6211\u592a\u83dc\u4e86~~\uff09\n\n\u601d\u8def\uff1a\n\n\u7b2c\u4e00\u6b65\uff1a\n\n\u9996\u5148\u770b\u8fd9\u4e2a\u6570\u636e\u8303\u56f4\uff0c\u5982\u679c\u5148\u6c42\u51fa\u6765**k\u7684\u6574\u6570\u500d**\u518d**\u628a\u6bcf\u4e00\u4f4d\u76f8\u52a0**\u7684\u8bdd\uff0c\u80af\u5b9a\u4f1a\u70b8\u3002\n\n\u6240\u4ee5\u8003\u8651\u600e\u6837\u8f6c\u5316\u4e00\u4e0b\uff0c**\u76f4\u63a5\u6c42\u4f4d\u6570\u548c**\u3002\n\n\u5efa\u56fe\uff0c\u6bcf\u4e2a\u6570x\u5411x+1\u8fde\u8fb9\u6743\u4e3a1\u7684\u8fb9\uff0c\u5411x * 10\u8fde\u8fb9\u6743\u4e3a0\u7684\u8fb9\uff0cdis[1]=1\uff0c\u8dd101bfs\uff0c\u6bcf\u4e2a\u70b9\u7684dis\u503c\u5c31\u662f\u4f4d\u6570\u548c\u3002\uff08\u8fd9\u4e2a\u6bd4\u8f83\u597d\u7406\u89e3\uff09\n\n\u7b2c\u4e8c\u6b65\uff1a\n\n\u4f46\u662fk\u7684\u500d\u6570\u53c8\u6ca1\u6709\u4e0a\u9650\uff0c\u80af\u5b9a\u4e0d\u80fd\u76f4\u63a5\u8fd9\u6837\u5efa\u3002\u6240\u4ee5\u5c31\u4fee\u6539\u4e00\u4e0b\u6bcf\u4e2a\u8282\u70b9\u7684\u542b\u4e49\uff0c\u8282\u70b9x\u8868\u793a**\u6a21k\u4e3ax**\u3002\n\n\u6613\u77e5\uff0c\u5bf9\u4e8e\u4e00\u4e2ax(x<k),\u5982\u679c\n\n(x+1)%k==y\uff0c\u4e14 (x * 10)%k==z\n\n\u90a3\u4e48\n\n\u5bf9\u4e8e**\u6240\u6709\u6a21k\u7b49\u4e8ex\u7684\u6570a**\uff0c\u90fd\u6709\n\n(a+1)%k==y\uff0c(a * 10)%k==z\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u7684\u56fe\u5c31\u662f\u6709\u9650\u7684\u4e86\uff0c\u5171k\u4e2a\u70b9\uff0c\u5206\u522b\u662f0~k-1\u3002\n\n\u5efa\u56fe\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u70b9x\uff0c\u5411(x+1)%k\u8fde\u8fb9\u6743\u4e3a1\u7684\u8fb9\uff0c\u5411(x * 10)%k\u8fde\u8fb9\u6743\u4e3a0\u7684\u8fb9\u3002\n\n\u521d\u59cb\u5316\u4f9d\u7136\u662fdis[1]=1\uff0c\u6c42\u51fadis[0]\u5373\u4e3a\u7b54\u6848\u3002\n\n~~\u4e3a\u4ec0\u4e48\u5462~~\n\n\u9996\u5148\u8fd9\u6837\u6c42\u51fa\u6765\u7684dis[0]\u4e00\u5b9a\u6ee1\u8db3\u8fd9\u4e2a\u542b\u4e49\uff1a\n\n**\u4ece\u4e00\u4e2a%k==1\u7684\u6570\u53d8\u6210k\u7684\u500d\u6570\uff0c\u4f4d\u6570\u548c\u81f3\u5c11\u8981\u589e\u52a0\u591a\u5c11\u3002**\n\n\u7136\u540e\u6211\u4eec\u80af\u5b9a\u60f3\u8ba9dis[1]\u5c3d\u91cf\u5c0f\uff0c\u5c31\u53ea\u80fd\u662f1\u4e86\uff0c\u6240\u4ee5\u521d\u59cb\u5316dis[1]=1\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8282\u70b91\u7684\u610f\u4e49\u5c31\u662f1\uff0c\u800c\u4e0d\u662f\u6240\u6709%k==1\u7684\u6570\u3002\n\n\u90a3\u4e3a\u4ec0\u4e48\u5176\u4ed6\u8282\u70b9x\u7684\u610f\u4e49\u662f\u6240\u6709%k==x\u7684\u6570\uff0c\u800c\u4e0d\u662fx\u5462\uff1f\n\n\u56e0\u4e3a\u4ece\u8282\u70b91\u8d70\u5230x\u7684\u8fc7\u7a0b\u4e2d\uff0c\u53ef\u80fd\u7ecf\u8fc7\u4e86\u82e5\u5e72\u6b21 * 10\uff0c\u6240\u4ee5\u8282\u70b9x\u4e0d\u4e00\u5b9a\u662fk\u7684\u591a\u5c11\u500d+x\u3002\n\n\u5177\u4f53\u5b9e\u73b0\uff1a\n\n\u6211\u624b\u5199\u7684\u961f\u5217\uff0c\u5927\u6982\u5c31\u662f\u8fb9\u6743\u4e3a0\u7684\u52a0\u5230q1\u4e2d\uff08\u76f8\u5f53\u4e8e\u53cc\u5411\u961f\u5217\u52a0\u5165\u961f\u9996\uff09\uff0c\u8fb9\u6743\u4e3a1\u7684\u52a0\u5230q2\u4e2d\uff0c\u6bcf\u6b21\u628aq1\u6e05\u7a7a\u540e\u518d\u4eceq2\u53d6\u51fa\u961f\u9996\u3002\n\n\u4e0d\u8fc7\u624b\u5199\u7684\u6709\u5f88\u591a\u5bb9\u6613\u5ffd\u7565\u7684\u7ec6\u8282\uff0c\u5f3a\u70c8\u5efa\u8bae\u5927\u5bb6\u7528STL\u7684\u53cc\u5411\u961f\u5217\u3002\n\n\u4e0a\u4ee3\u7801~\n\n```cpp\n#include <cstdio>\nusing namespace std;\nconst int N=100005;\nint p,dis[N],q1[N],l1,r1,q2[N],l2,r2;\nbool vi[N][2],flag;\n//vi[x][0]\u8868\u793a\u8282\u70b9x\u662f\u5426\u52a0\u5165\u8fc7q1\n//vi[x][1]\u8868\u793a\u8282\u70b9x\u662f\u5426\u52a0\u5165\u8fc7q2\nint read()\n{\tchar x=getchar();\n\twhile(x<48||x>57) x=getchar();\n\tint ans=0;\n\twhile(x>=48&&x<=57)\n\t{\tans=(ans<<1)+(ans<<3)+(x^48);\n\t\tx=getchar();\n\t}\n\treturn ans;\n}\nvoid add(int num)\n{\tint x;\n\tx=(num+1)%p;\n\tif(!vi[x][1]&&!vi[x][0])\n\t{\tvi[x][1]=true;dis[x]=dis[num]+1;\n\t\tq2[r2]=x;r2++;\n\t}\n\tx=(num*10)%p;\n\tif(!vi[x][0])\n\t{\tvi[x][0]=true;dis[x]=dis[num];\n\t\tq1[r1]=x;r1++;\n\t\tif(x==0) { flag=true;return;}\n\t}\n}\nvoid solve()\n{\tl1=1;r1=2;l2=r2=1;\n\tq1[1]=1;dis[1]=1;vi[1][0]=true;\n\twhile(r1>l1||r2>l2)\n\t{\twhile(r1>l1)\n\t\t{\tadd(q1[l1]);l1++;\n\t\t\tif(flag) return;\n\t\t}\n\t\twhile(r2>l2)\n\t\t{\tif(vi[q2[l2]][0]) {l2++;continue;}\n\t\t\tvi[q2[l2]][0]=true;add(q2[l2]);l2++;\n\t\t\tif(flag) return;\n\t\t\tbreak;\n\t\t}\n\t}\n}\nint main()\n{\tp=read();\n\tsolve();\n\tprintf(\"%d\\n\",dis[0]);\n\treturn 0;\n}\n```\n",
        "postTime": 1583928516,
        "uid": 125270,
        "name": "flyfree",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT3621 \u3010[ARC084B] Small Multiple\u3011"
    }
]