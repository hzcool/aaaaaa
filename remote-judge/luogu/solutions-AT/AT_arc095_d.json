[
    {
        "content": "\u9898\u610f\uff1a\n\n> \u7ed9\u5b9a\u4e00\u68f5\u6811 $\\rm T$, \u8981\u6c42\u6784\u9020\u4e00\u4e2a\u6392\u5217 $p$ .\n>\n> \u5bf9\u4e8e\u6bcf\u4e00\u4e2a $p_i$ \uff0c\u627e\u5230\u6700\u5927\u7684 $j$ \u4f7f\u5f97 $p_j<p_i$\uff0c\u7136\u540e\u5728 $i,j$ \u95f4\u8fde\u8fb9\u3002\n>\n> \u95ee\u662f\u5426\u53ef\u4ee5\u6784\u9020\u51fa\u4e0e $\\rm T$ \u540c\u6784\u7684\u6811\u3002\n>\n> \u5982\u679c\u53ef\u4ee5\uff0c\u5219\u7ed9\u51fa\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u6392\u5217\u3002\n>\n> $n\\leq 100,000$\n\n\u7ec8\u4e8e\u53ef\u4ee5\u4ece `atcoder` \u722c\u9898\u4e86QAQ\n\n\u8003\u8651\u5982\u679c\u7ed9\u5b9a\u4e00\u4e2a\u6392\u5217\uff0c\u5982\u4f55\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u751f\u6210\u4e00\u68f5\u6811\u3002\u90a3\u80af\u5b9a\u662f\u6309\u7167\u6743\u503c\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u6bcf\u4e2a\u6743\u503c\u6240\u5728\u7684\u4f4d\u7f6e\uff0c\u6bcf\u6b21\u5728 $\\max\\_right$ \u548c\u679a\u4e3e\u7684 $i$ \u4e4b\u95f4\u8fde\u8fb9\uff0c\u5e76\u66f4\u65b0 $\\max\\_right$\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u7531\u4e8e\u7ed9\u5b9a\u7684\u662f\u6392\u5217\uff0c\u5c40\u90e8\u6700\u5927\u503c\u552f\u4e00\uff0c\u90a3\u4e48\u53ea\u4f1a\u51fa\u73b0\u300c\u975e\u5c40\u90e8\u6700\u5927\u503c\u5411\u5c40\u90e8\u6700\u5927\u503c\u8fde\u8fb9\u300d\u548c\u300c\u4e0a\u4e00\u4e2a\u7248\u672c\u7684\u5c40\u90e8\u6700\u5927\u503c\u548c\u5f53\u524d\u5c40\u90e8\u6700\u5927\u503c\u8fde\u8fb9\u300d\u4e24\u79cd\u8fde\u8fb9\u65b9\u5f0f\u3002\u6240\u4ee5\u4e0d\u96be\u770b\u51fa\u6700\u540e\u7684\u6811\u7684\u5f62\u6001\u5c31\u662f\u4e00\u4e2a\u4e00\u9636\u6bdb\u6bdb\u866b\u2014\u2014\u76f4\u5f84\u65c1\u8fb9\u6302\u7740\u4e00\u5806\u70b9\uff0c\u6bcf\u4e2a\u70b9\u4e0e\u76f4\u5f84\u7684\u8ddd\u79bb\u5747\u4e3a $1$ \u3002\u6240\u4ee5\u662f\u5426\u5408\u6cd5\u6c42\u4e00\u4e0b\u76f4\u5f84\u7136\u540echeck\u5373\u53ef\u3002\n\n\u8003\u8651\u5982\u4f55\u6784\u9020\u3002\u53d1\u73b0\u53ea\u8981\u6c42\u540c\u6784\uff0c\u90a3\u4e48\u80af\u5b9a\u662f\u4ece $1$ \u5f00\u59cb\u91cd\u65b0\u7f16\u53f7\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u76f4\u5f84\u4e0a\u7684 $x$\uff0c\u8bbe**\u4e0e\u5176\u76f8\u8fde\u4e14\u4e0d\u5728\u76f4\u5f84\u4e0a**\u7684\u70b9\u7684\u4e2a\u6570\u4e3a $\\deg_x$\uff0c\u8fc4\u4eca\u4e3a\u6b62\u4e00\u5171\u6709 $s$ \u4e2a\u70b9\u5df2\u7ecf\u7f16\u5b8c\u53f7\u4e86\uff0c\u90a3\u4e48\u53ea\u8981\u8ba9 $x=s+\\deg_x+1$\uff0c\u5269\u4e0b\u7684\u70b9\u4f9d\u6b21\u8d4b\u503c\u4e3a $s+1,s+2,s+3\\cdots s+\\deg_x$ \u5c31\u5b8c\u4e86\u3002\u53ef\u4ee5\u77e5\u9053\u8fd9\u6837\u4e00\u5b9a\u662f\u6700\u4f18\u7684\u65b9\u6848\u3002\n\n\u4ece\u76f4\u5f84\u4e24\u7aef\u5206\u522b\u5904\u7406\u4e00\u4e0b\u53d6\u4e2a\u5b57\u5178\u5e8f\u6700\u5c0f\u5373\u53ef\u3002\u590d\u6742\u5ea6 $O(n)$\u3002\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n\n#define to(k) E[k].to\n#define next(k) E[k].next\n\nusing namespace std ;\n\nconst int N = 200010 ;\n\nstruct Edge{\n    int to, next ;\n}E[N * 2] ;\nint n ;\nint tot ;\nint cnt ;\nint q[N] ;\nint p[N] ;\nint d[N] ;\nint fa[N] ;\nint vis[N] ;\nint dep[N] ;\nint deg[N] ;\nint head[N] ;\n\nvoid add(int u, int v){\n    to(++ cnt) = v, next(cnt) = head[u], head[u] = cnt ;\n    to(++ cnt) = u, next(cnt) = head[v], head[v] = cnt ;\n}\nint dfs(int u, int faa){\n    int ret = u, s ;\n    fa[u] = faa, dep[u] = dep[faa] + 1 ;\n    for (int k = head[u] ; k ; k = next(k)){\n        if (to(k) != faa){\n            s = dfs(to(k), u) ;\n            if (dep[ret] < dep[s]) ret = s ;\n        }\n    }\n    return ret ;\n}\nint main(){\n    cin >> n ;\n    int rt1, rt2, num, u, v ;\n    for (int i = 1 ; i < n ; ++ i)\n        scanf(\"%d%d\", &u, &v), add(u, v) ;\n    rt1 = dfs(1, 0) ; fa[rt1] = 0 ;\n    dep[rt1] = 0 ; rt2 = dfs(rt1, 0) ;\n    //cout << rt1 << \" \" << rt2 << endl ;\n    for ( ; rt2 ; rt2 = fa[rt2])\n        vis[rt2] = 1, d[++ tot] = rt2 ;\n    //cout << tot << endl ;\n    for (int i = 1 ; i <= n ; ++ i){\n        if (vis[i]) continue ; bool ans = 0 ;\n        for (int k = head[i] ; k ; k = next(k))\n            if (vis[to(k)]) { deg[to(k)] ++, ans = 1 ; break ; }\n        if (!ans) return puts(\"-1\"), 0 ;\n    }\n    num = 0 ;\n    for (int i = 1 ; i <= tot ; ++ i){\n        for (int j = 1 ; j <= deg[d[i]] ; ++ j)\n            p[num + j] = num + j + 1 ;\n        p[num + deg[d[i]] + 1] = num + 1 ; num += deg[d[i]] + 1 ;\n    }\n    num = 0 ;\n    for (int i = tot ; i >= 1 ; -- i){\n        for (int j = 1 ; j <= deg[d[i]] ; ++ j)\n            q[num + j] = num + j + 1 ;\n        q[num + deg[d[i]] + 1] = num + 1 ; num += deg[d[i]] + 1 ;\n    }\n    for (int i = 1 ; i <= n ; ++ i)\n        if (p[i] != q[i]){\n            if (p[i] < q[i]){\n                for (int j = 1 ; j <= n ; ++ j)\n                    printf(\"%d \", p[j]) ; puts(\"\") ;\n                return 0 ;\n            }\n            else {\n                for (int j = 1 ; j <= n ; ++ j)\n                    printf(\"%d \", q[j]) ; puts(\"\") ;\n                return 0 ;\n            }\n        }\n    for (int j = 1 ; j <= n ; ++ j)\n        printf(\"%d \", p[j]) ; puts(\"\") ;\n    return 0 ; \n}\n\n```",
        "postTime": 1581477869,
        "uid": 28313,
        "name": "\u768e\u6708\u534a\u6d12\u82b1",
        "ccfLevel": 7,
        "title": "\u9898\u89e3[ARC095D] Permutation Tree"
    },
    {
        "content": "\u8003\u8651\u8f6c\u6362 $p$ \u7684\u4e0b\u6807\u548c\u503c\uff0c\u5373\u6784\u9020\u65b0\u7684\u5e8f\u5217 $q$\uff0c\u6ee1\u8db3 $q_{p_i}=i$\uff0c\u5219\u6784\u9020\u8fd9\u9897\u6811\u7684\u8fc7\u7a0b\u53ef\u4ee5\u770b\u4f5c\u4ece\u5de6\u5230\u53f3\u626b $q$\uff0c\u5230 $q_i$ \u65f6\uff0c\u627e\u5230\u524d\u7f00\u6700\u5927\u503c $q_j=\\max_{k=1}^{i-1}{q_k}$\uff0c\u7136\u540e\u8fde\u8fb9 $(q_j,q_i)$\u3002\n\n\u82e5\u65b0\u626b\u5230\u7684\u6570 $q_i$ \u662f\u65b0\u7684\u524d\u7f00\u6700\u5927\u503c\uff0c\u90a3\u4e48\u540e\u9762\u7684\u4e00\u4e9b\u6570\u4f1a\u8fde\u5411 $q_i$\uff0c\u5426\u5219\u540e\u9762\u7684\u4e00\u4e9b\u6570\u8fd8\u4f1a\u8fde\u5411 $q_j$\uff08\u76f4\u5230\u51fa\u73b0\u65b0\u7684\u524d\u7f00\u6700\u5927\u503c\uff09\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u53d1\u73b0\uff0c\u6811\u7684\u5f62\u6001\u4e00\u5b9a\u662f\u4e00\u6761\u94fe\u4e0a\u6302\u4e86\u4e00\u4e9b\u70b9\uff0c\u4e14\u94fe\u4e0a\u7684\u70b9\u4e00\u5b9a\u662f $q$ \u5e8f\u5217\u7684\u524d\u7f00\u6700\u5927\u503c\u3002\n\n\u4e8e\u662f\u7edf\u8ba1\u4e3b\u94fe\u4e0a\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570 $d$\uff0c\u8bbe\u5f53\u524d\u7f16\u53f7\u5206\u914d\u5230\u4e86 $s$\uff0c\u5219\u628a\u6302\u5728\u5f53\u524d\u70b9\u4e0a\u7684\u70b9\u5206\u914d $s+1\\sim s+d$\uff0c\u5f53\u524d\u70b9\u4e3a $s+d+1$ \u5373\u53ef\uff08\u7531\u4e8e\u8981\u6c42\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u6545\u8fd9\u6837\u4e00\u5b9a\u662f\u66f4\u4f18\u7684\uff09\u3002\n\n\u4e3b\u94fe\u7684\u4e24\u4e2a\u65b9\u5411\u90fd\u505a\u4e00\u6b21\uff0c\u8f93\u51fa\u5b57\u5178\u5e8f\u8f83\u5c0f\u7684\u5373\u53ef\u3002",
        "postTime": 1611920645,
        "uid": 63951,
        "name": "\u9003\u79bb\u5730\u7403",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 AT4114 \u3010[ARC095D] Permutation Tree\u3011"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u51fa $T$ \u6784\u9020 $p$ \u6ee1\u8db3\uff1a\u5bf9\u6bcf\u4e00\u4e2a $p_i\\ne 1$\uff0c\u627e\u5230\u6700\u5927\u7684 $p_j<p_i$ \u7136\u540e $i,j$ \u4e4b\u95f4\u8fde\u8fb9\u5f97\u5230\u7684\u6811\u548c $T$ \u540c\u6784\u3002\n## \u9898\u89e3\n\u9996\u5148\u8003\u8651 $p$ \u7684\u9006\u6392\u5217 $q$\uff0c\u5373 $q_{p_i}=i$\uff0c\u90a3\u4e48 $i\\ge2$ \u5b9e\u9645\u4e0a\u662f\u5411 $q_{1,\\dots,i-1}$ \u6700\u5927\u503c\u6240\u5728\u7684\u4f4d\u7f6e\u8fde\u8fb9\u3002\n\n\u4e8e\u662f\u5982\u679c $i-1$ \u662f\u524d\u7f00\u6700\u5927\u503c\uff0c\u5219 $fa_i=i-1$ \u5426\u5219 $fa_i=fa_{i-1}$ \uff0c\u4e8e\u662f\u6811\u7684\u5f62\u6001\u5e94\u8be5\u662f\u8fd9\u6837\u7684\uff1a\n\n```sto\n  o\n/|||\\\n     o\n   /|||\\\n        o\n      /|||\\\n```\n\n\u5982\u679c\u80fd\u591f\u753b\u51fa\u8fd9\u68f5\u6811\u5c31\u80fd\u5f97\u5230\u90a3\u4e9b\u4f4d\u7f6e\u662f\u524d\u7f00\u6700\u5927\u503c\u3002\u524d\u7f00\u6700\u5927\u503c\u8fd9\u4e2a\u5173\u7cfb\u6211\u4eec\u53ef\u4ee5\u7528\u4e0d\u7b49\u5f0f\u6765\u7ea6\u675f\uff0c\u4e5f\u5c31\u662f\u5982\u679c $i,j$ \u662f\u76f8\u90bb\u7684\u524d\u7f00\u6700\u5927\u503c\uff0c\u90a3\u4e48 $i+1,\\dots,j-1$ \u8fd9\u4e9b\u70b9\u5411 $i$ \u8fde\u8fb9\uff0c$i$ \u5411 $j$ \u8fde\u8fb9\u3002\u8fd8\u6709\u4e00\u4e2a\u5c31\u662f\u6211\u4eec\u5bf9 $q_n$ \u662f\u4e0d\u662f\u524d\u7f00\u6700\u5927\u503c\u6ca1\u6709\u7ea6\u675f\u9700\u8981\u6ce8\u610f\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u7528\u62d3\u6251\u6392\u5e8f\u5f97\u5230\u6700\u4f18\u89e3\u4e86\u3002\n\n\u6240\u4ee5\u6211\u4eec\u73b0\u5728\u7684\u76ee\u7684\u5c31\u662f\u628a\u6811\u53d8\u6210\u4e0a\u9762\u7684\u7ed3\u6784\u3002\n\n\u628a\u6240\u6709\u7684\u53f6\u5b50\u5220\u6389\u5e94\u8be5\u662f\u4e00\u6761\u94fe\uff0c\u94fe\u4e24\u7aef\u4ee5\u53ca\u4e24\u7aef\u7684\u53f6\u5b50\u53ef\u80fd\u662f\u4e0a\u9762\u8fd9\u4e2a\u7ed3\u6784\u7684\u6839\uff0c\u56e0\u4e3a\u540c\u4e00\u4e2a\u70b9\u7684\u53f6\u5b50\u662f\u7b49\u4ef7\u7684\u6240\u4ee5\u53ea\u8981\u5bf9 $4$ \u4e2a\u70b9\u5206\u522b\u5f53\u505a\u6839\u6c42\u89e3\u5c31\u80fd\u5f97\u5230\u7b54\u6848\u4e86\u3002\n\n\u590d\u6742\u5ea6 $\\mathcal O(n\\log n)$\u3002\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define mp make_pair\n#define mt make_tuple\n#define eb emplace_back\n#define pb push_back\n#define pc putchar\n#define chkmx(a,b) (a)=max((a),(b))\n#define chkmn(a,b) (a)=min((a),(b))\n#define fi first\n#define se second\n#define orz puts(\"-1\"),exit(0);\nusing namespace std;\ntemplate<class T>\nvoid read(T&x){x=0;char c=getchar();bool f=0;for(;!isdigit(c);c=getchar())f^=c=='-';for(;isdigit(c);c=getchar())x=x*10+c-'0';if(f)x=-x;}\ntemplate<class T,class ...ARK>void read(T&x,ARK&...ark){read(x);read(ark...);}\ntemplate<class T>void write(T x){if(x<0)pc('-'),x=-x;if(x>=10)write(x/10);pc(x%10+'0');}\ntemplate<class T,class ...ARK>void write(T x,ARK...ark){write(x);pc(' ');write(ark...);}\ntemplate<class ...ARK>void writeln(ARK...ark){write(ark...);pc('\\n');}\ntypedef long long ll;\nconst int mod=998244353;\nstruct mint{\n\tint x;mint(int o=0){x=o;}mint&operator+=(mint a){return(x+=a.x)%=mod,*this;}mint&operator-=(mint a){return(x+=mod-a.x)%=mod,*this;}\n\tmint&operator*=(mint a){return(x=1ll*x*a.x%mod),*this;}mint&operator^=( int b){mint a=*this;x=1;while(b)(b&1)&&(*this*=a,1),a*=a,b>>=1;return*this;}\n\tmint&operator/=(mint a){return*this*=(a^=mod-2);}friend mint operator+(mint a,mint b){return a+=b;}friend mint operator-(mint a,mint b){return a-=b;}\n\tfriend mint operator*(mint a,mint b){return a*=b;}friend mint operator/(mint a,mint b){return a/=b;}friend mint operator^(mint a, int b){return a^=b;}\n};\n#define lowbit(x) ((x)&-(x))\n#define mid ((l+r)>>1)\n#define lc (x<<1)\n#define rc (x<<1|1)\nconst int N=1e5+100;\nint n,deg[N];vector<int>e[N];\nint Ans[N];bool vis[N];\nnamespace solve{\n\tint dep[N];int cnt[N],has[N];\n\tvoid dfs(int u,int fa){\n\t\tdep[u]=dep[fa]+1;bool flag=0;\n\t\tfor(auto v:e[u])if(v!=fa)dfs(v,u),flag=1;\n\t\tcnt[dep[u]]++;if(flag)has[dep[u]]++;\n\t}\n\tvector<int>e[N];int deg[N],ans[N];priority_queue<int,vector<int>,greater<int>>q;\n\tvoid add(int u,int v){\n\t\tif(!u||!v)return;\n\t\tif(u==n||v==n)return;\n\t\t//writeln(u,v);\n\t\te[u].pb(v);deg[v]++;\n\t}\n\tint premx[N],top;\n\tvoid work(int rt){\n\t\tfor(int i=1;i<=n;i++)e[i].clear();\n\t\tmemset(deg,0,sizeof deg);\n\t\tmemset(cnt,0,sizeof cnt);\n\t\tmemset(has,0,sizeof has);\n\t\ttop=0;\n\t\tdfs(rt,0);\n\t\tfor(int i=1;i<=n;i++)if(has[i]>1)return;\n\t\tfor(int i=1,now=cnt[1];has[i];i++,now+=cnt[i])\n\t\t\tpremx[++top]=now;\n\t\tpremx[++top]=n;\n\t\tfor(int i=2;i<=top;i++){\n\t\t\tadd(premx[i-1],premx[i]);\n\t\t\tfor(int j=premx[i-1]+1;j<premx[i];j++)\n\t\t\t\tadd(j,premx[i-1]);\n\t\t}\n\t\tfor(int i=1;i<=n;i++)if(!deg[i])q.push(i);\n\t\tint tot=0;\n\t\twhile(q.size()){\n\t\t\tint u=q.top();q.pop();ans[++tot]=u;\n\t\t\tfor(auto v:e[u]){\n\t\t\t\tdeg[v]--;\n\t\t\t\tif(deg[v]==0)q.push(v);\n\t\t\t}\n\t\t}\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif(ans[i]==Ans[i])continue;\n\t\t\tif(ans[i]>Ans[i])return;\n\t\t\telse break;\n\t\t}\n\t\tfor(int i=1;i<=n;i++)Ans[i]=ans[i];\n\t}\n}\nsigned main(){\n\tread(n);\n\tif(n==1)return puts(\"1 2\"),0;\n\tfor(int i=1,u,v;i<n;i++)read(u,v),e[u].pb(v),e[v].pb(u),deg[u]++,deg[v]++;\n\tfor(int i=1;i<=n;i++)if(deg[i]==1)vis[i]=1;\n\tfor(int i=1;i<=n;i++)if(vis[i])deg[e[i][0]]--;\n\tvector<int>kk;\n\tfor(int i=1;i<=n;i++)if(!vis[i]){\n\t\tif(deg[i]<=1)kk.pb(i);\n\t\telse if(deg[i]!=2)orz;\n\t}\n\tAns[1]=n+1;\n\tfor(auto x:kk){\n\t\tsolve::work(x);\n\t\tfor(auto y:e[x])if(vis[y]){solve::work(y);break;}\n\t}\n\tfor(int i=1;i<=n;i++)write(Ans[i]),pc(' ');\n}\n```",
        "postTime": 1649920681,
        "uid": 174304,
        "name": "jun\u5934\u5409\u5409",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 AT4114 \u3010[ARC095D] Permutation Tree\u3011"
    },
    {
        "content": "\u5bb9\u6613\u53d1\u73b0\u5982\u679c\u6709\u89e3\uff0c\u90a3\u4e48\u7b54\u6848\u662f\u4e00\u6761\u94fe\u6302\u4e0a\u4e00\u5806\u70b9\u3002\n\n\n\u7136\u540e\u5177\u4f53\u600e\u4e48\u6c42\u4e00\u7ec4\u89e3:\n\n\u6293\u51fa\u6700\u957f\u94fe\uff0c\u7136\u540e\u4f9d\u6b21\u904d\u5386\u94fe\u4e0a\u7684\u70b9 $u$\n\n\uff08\u9898\u76ee\u8bf4\u7684\u662f $i, j$ \u5982\u679c\u6709\u8fb9\uff0c\u4ec5\u5f53 $j$ \u662f\u6700\u5927\u7684\u6ee1\u8db3 $p_j < p_i$\uff09\u3002\n\n\u6211\u4eec\u5f53\u524d\u5728\u679a\u4e3e\u94fe\uff0c\u94fe\u4e0a\u6302\u4e86\u4e00\u5806\u70b9\u7684\u60c5\u51b5\u4e0b\uff0c\u94fe\u70b9\u53ea\u80fd\u8fde\u4e00\u6761\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u6ee1\u8db3 $p_u < p_v$\u3002\uff08\u8ba9 v \u8fde\u5411 u\uff09\u3002\n\n\u90a3\u4e48\u6b64\u65f6\u8fd8\u9700\u8981\uff0c$p_u$ \u662f\u540e\u9762\u6700\u540e\u4e00\u4e2a\u5c0f\u4e8e $p_v$ \u7684\u3002\n\n\u7136\u800c\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\uff0c\u4e0d\u5982\u5c06\u8fd9\u4e2a $p_u$ \u4f5c\u4e3a\u552f\u4e00\u4e00\u4e2a\u5c0f\u4e8e $p_v$ \u7684\u3002\uff08\u4e14\u5728 v \u7684\u540e\u9762\u3002\uff09\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u7b26\u5408\u5bf9\u4e8e\u94fe\u5411\u6bcf\u4e2a\u6563\u70b9\u7684\u6761\u4ef6\u3002\n\n\u63a5\u4e0b\u6765\u662f\u94fe\u7684\u95ee\u9898:\n\n\u9700\u8981\u5c06 $u1 \\to u2$\u3002\n\n\u90a3\u4e48 $p_{u1} < p_{u2}$\uff0c\u5e76\u4e14\uff0c$p_{u1}$ \u662f\u6700\u540e\u9762\u7684\u5c0f\u4e8e $p_{u2}$ \u7684\u3002\n\n\n\u90a3\u6211\u4eec\u53ea\u9700\u8981\u987a\u5e8f\u6784\u9020\u94fe\u548c\u6563\u70b9\u4e4b\u95f4\u7684\u8fb9\uff0c\u5c31\u521a\u597d\u7b26\u5408\u8fd9\u4e00\u6761\u4ef6\u3002\n\n\u94fe\u6709\u4e24\u7aef\uff0c\u4ece\u4e24\u8fb9\u5206\u522b\u8dd1\u4e00\u904d\uff0c\u53d6\u4e00\u4e2a\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u5373\u53ef\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n ios::sync_with_stdio(false);\n cin.tie(NULL);\n int n;\n cin >> n;\n vector<vector<int>> e(n);\n for (int i = 1; i < n; i++) {\n  int u, v;\n  cin >> u >> v;\n  --u;\n  --v;\n  e[u].push_back(v);\n  e[v].push_back(u);\n }\n queue<int> q;\n vector<int> w1(n, -1);\n w1[0] = 0;\n q.push(0);\n while (!q.empty()) {\n  int u = q.front();\n  q.pop();\n  for (auto v : e[u]) {\n   if (w1[v] == -1) {\n    w1[v] = w1[u] + 1;\n    q.push(v);\n   }\n  }\n }\n int p1 = 0;\n for (int i = 1; i < n; i++) {\n  if (w1[p1] < w1[i]) {\n   p1 = i;\n  }\n }\n vector<int> w2(n, -1);\n w2[p1] = 0;\n q.push(p1);\n while (!q.empty()) {\n  int u = q.front();\n  q.pop();\n  for (auto v : e[u]) {\n   if (w2[v] == -1) {\n    w2[v] = w2[u] + 1;\n    q.push(v);\n   }\n  }\n }\n int p2 = 0;\n for (int i = 1; i < n; i++) {\n  if (w2[p2] < w2[i]) {\n   p2 = i;\n  }\n }\n vector<int> path = {p2};\n while (path.back() != p1) {\n  int u = path.back();\n  for (auto v : e[u]) {\n   if (w2[v] == w2[u] - 1) {\n    path.push_back(v);\n    break;\n   }\n  }\n }\n auto d = path;\n sort(d.begin(), d.end());\n vector<int> ans[2];\n for (int k = 0; k < 2; k++) {\n  int c = 0;\n  for (auto u : path) {\n   int c1 = ++c;\n   for (auto v : e[u]) {\n    if (!binary_search(d.begin(), d.end(), v)) {\n     ans[k].push_back(++c);\n    }\n   }\n   ans[k].push_back(c1);\n  }\n  reverse(path.begin(), path.end());\n }\n vector<int> w = min(ans[0], ans[1]);\n if (w.size() != n) {\n  cout << -1 << \"\\n\";\n } else {\n  for (auto i : w) {\n   cout << i << \" \";\n  }\n }\n return 0;\n}",
        "postTime": 1636898152,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "AT4114 [ARC095D] Permutation Tree"
    }
]