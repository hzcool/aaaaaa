[
    {
        "content": "[\u4f20\u9001\u95e8](https://atcoder.jp/contests/tdpc/tasks/tdpc_tree)\n\n\u597d\u6c34\u554a\uff08\uff09\n\n\u8fd9\u4e2a\u601d\u8def\u5b8c\u5168\u6765\u81ea\u4e8e CF1540B Tree Arrays \u8d5b\u573a\u65f6\u7684\u9519\u8bef DP \u60f3\u6cd5\uff08\uff09\n\n\u8003\u8651\u679a\u4e3e\u7b2c\u4e00\u6761\u67d3\u8272\u8fb9 $<u,v>$\uff0c\u5219\u6811\u5f62\u5982\uff1a\n$$\nsubtree(u) \\leftrightarrow u \\leftrightarrow v \\leftrightarrow subtree(v)\n$$\n~~\u83ab\u540d\u60f3\u5230\u5272\u8fb9 qwq~~\n\n\u90a3\u4e48\u8003\u8651\u5982\u679c\u7b97\u51fa $subtree(u)$ \u548c $subtree(v)$ \u5185\u6240\u6709\u8fb9\u7684\u67d3\u8272\u65b9\u6848\uff0c\u5219\u7531\u4e8e $<u,v>$ \u8fb9\u7b2c\u4e00\u4e2a\u52a0\u5165\uff0c\u7ec4\u5408\u7b54\u6848\u5373\u53ef\u3002\u8fd9\u91cc\u7684\u7ec4\u5408\u548c\u7b49\u4f1a dp \u91cc\u7684\u7ec4\u5408\u7b54\u6848\u4e00\u6837\u6240\u4ee5\u5148\u4e0d\u8bb2\u3002\n\n\u8003\u8651\u8bbe $f(u)$ \u4e3a $subtree(u)$ \u67d3\u8272\u7684\u7b54\u6848\uff0c$sz(u)$ \u4e3a $subtree(u)$ \u5185\u7684\u8fb9\u6570\u3002\u6ce8\u610f\u8fd9\u91cc $u,v$ \u548c\u4e0a\u9762\u6ca1\u6709\u5173\u7cfb\u3002\n\n\u5219 $f(u)$ \u5c31\u662f $f(v) (v \\in son(u))$ \u7684\u7b54\u6848\u7ec4\u5408\u5728\u4e00\u8d77\u3002\u8003\u8651\u5404\u4e2a $v$ \u4e4b\u95f4\u76f8\u4e92\u72ec\u7acb\uff0c\u5982\u679c\u52a0\u5165\u5f53\u524d $v$ \u540e\u5171\u52a0\u5165\u4e86 $sum$ \u6761\u8fb9\uff0c\u5219\u6211\u4eec\u6709  $\\dbinom{sum}{sz[v]+1}$ \u79cd\uff08\u6ce8\u610f\u8fd8\u6709\u52a0\u4e0a $v$ \u5230\u7236\u4eb2 $u$ \u7684\u8fde\u8fb9\uff09\u65b9\u6848\u9009\u62e9\u8fd9\u9897 $subtree(v)$ \u5185\u7684\u8fb9\u8fd8\u6709\u8fb9 $v\\leftrightarrow u$ \u7684\u4f4d\u7f6e\u3002\u6240\u4ee5\u521d\u59cb\u4ee4 $sum=0,f(u)=1$\uff0c\u6bcf\u6b21\u52a0\u5165\u4e00\u4e2a\u513f\u5b50 $v$\uff0c\u5c31\n$$\nsum \\leftarrow sum+sz[v]+1\n$$\n\u7136\u540e\n$$\nf(u) \\leftarrow  f(u) \\,\\cdot \\dbinom{sum}{sz[v]+1}\\,\\cdot f(v)\n$$\n\u6700\u540e\u7ec4\u5408\u679a\u4e3e\u8fb9\u4e24\u7aef\u70b9 $u,v$ \u7684\u7b54\u6848\u540c\u7406\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002\n\n```C++\n#include<bits/stdc++.h>\n#define rep(i,a,b) for(ll i=(a);i<=(b);i++)\n#define per(i,a,b) for(ll i=(a);i>=(b);i--)\n#define op(x) ((x&1)?x+1:x-1)\n#define odd(x) (x&1)\n#define even(x) (!odd(x))\n#define lc(x) (x<<1)\n#define rc(x) (lc(x)|1)\n#define lowbit(x) (x&-x)\n#define Max(a,b) (a>b?a:b)\n#define Min(a,b) (a<b?a:b)\n#define next Cry_For_theMoon\n#define il inline\n#define pb(x) push_back(x)\n#define is(x) insert(x)\n#define sit set<int>::iterator\n#define mapit map<int,int>::iterator\n#define pi pair<int,int>\n#define ppi pair<int,pi>\n#define pp pair<pi,pi>\n#define fr first\n#define se second\n#define vit vector<int>::iterator\n#define mp(x,y) make_pair(x,y)\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef unsigned int uint;\ntypedef double db;\nusing namespace std;\nconst int MAXN=1010,mod=1e9+7;\nint n,u[MAXN],v[MAXN];\nvector<int>E[MAXN];\nll C[MAXN][MAXN],f[MAXN],sz[MAXN];\nll vis[MAXN],ans,ret;\nvoid dfs(int u){\n\tsz[u]=0;vis[u]=f[u]=1;\n\tfor(vit it=E[u].begin();it!=E[u].end();it++){int v=*it;\n\t\tif(vis[v])continue;\n\t\tdfs(v);\n\t\tsz[u]=(sz[u]+sz[v]+1);\n\t}\n}\nvoid dp(int u){\n\tvis[u]=1;\n\tll sum=0; //\u603b\u8fb9\u6570 \n\tfor(vit it=E[u].begin();it!=E[u].end();it++){int v=*it;\n\t\tif(vis[v])continue;\n\t\tdp(v);\n\t\tsum=(sum+sz[v]+1); \n\t\tf[u]=f[u]*C[sum][sz[v]+1]%mod*f[v]%mod;  \n\t}\n}\nint main(){\n\tcin>>n;\n\trep(i,1,n-1){\n\t\tcin>>u[i]>>v[i];\n\t\tE[u[i]].pb(v[i]);E[v[i]].pb(u[i]);\n\t}\n\tC[0][0]=1;\n\trep(i,1,n){\n\t\tC[i][0]=1;\n\t\trep(j,1,i){\n\t\t\tC[i][j]=(C[i-1][j]+C[i-1][j-1])%mod;\t\n\t\t}\n\t}\n\trep(i,1,n-1){\n\t\tint x=u[i],y=v[i]; //\u7b2c\u4e00\u6761\u67d3(x,y)\u8fb9\n\t\tmemset(vis,0,sizeof vis);\n\t\tvis[x]=vis[y]=1;\n\t\tdfs(x);dfs(y);\n\t\tmemset(vis,0,sizeof vis);\n\t\tvis[x]=vis[y]=1;\n\t\tdp(x);dp(y);\n\t\t//\u7ec4\u5408x,y\u7b54\u6848\n\t\tret=f[x]*C[n-2][sz[x]]%mod*f[y]%mod;\n\t\tans=(ans+ret)%mod;\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n\n\n\n",
        "postTime": 1625627392,
        "uid": 340632,
        "name": "Cry_For_theMoon",
        "ccfLevel": 8,
        "title": "\u3010AT690\u3011\u6728"
    },
    {
        "content": "\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u7b2c\u4e00\u6b21\u52a0\u7684\u662f\u90a3\u6761\u8fb9\uff0c\u8bb0\u4e3a $(xx,yy)$\uff0c\u8fd9\u6837\u5c31\u628a\u539f\u6811\u62c6\u6210\u4e24\u4e2a\u4ee5 $xx$ \u548c $yy$ \u4e3a\u6839\u7684\u4e0d\u76f8\u4ea4\u7684\u5b50\u6811\uff0c\u5728\u8fd9\u4e24\u4e2a\u5b50\u6811\u4e2d\uff0c\u7236\u8282\u70b9\u7684\u8fb9\u5fc5\u987b\u5728\u5b50\u8282\u70b9\u7684\u8fb9\u4e4b\u524d\u52a0\u5165\u3002\n\n\u6211\u4eec\u8bbe $f(x)$ \u4e3a\u4ee5 $x$ \u4e3a\u6839\u7684\u5b50\u6811\u5185\u7684\u8fb9\u5168\u90e8\u8fde\u597d\u7684\u65b9\u6848\u6570\u3002\u8003\u8651\u5408\u5e76\u4e24\u4e2a\u5b50\u6811\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/w38ihsyt.png)\n\n\u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u6c42\u51fa\u4e86 $f(y_1),f(y_2)$\uff0c\u8981\u6c42 $f(x)$\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u53ea\u8981\u4e24\u4e2a\u7ea2\u8272\u5708\u5185\u7684\u8fb9\u6309\u987a\u5e8f\u5c31\u884c\uff0c\u4e24\u4e2a\u7ea2\u8272\u5708\u4e4b\u95f4\u5e76\u6ca1\u6709\u987a\u5e8f\u7684\u8981\u6c42\u3002\u5de6\u8fb9\u6709 $siz_{y_1}$ \u6761\u8fb9\uff0c\u53f3\u8fb9\u6709 $siz_{y_2}$ \u6761\u8fb9\uff0c\u8fd9\u4e9b\u8fb9\u53ef\u4ee5\u4e92\u76f8\u63d2\u5165\uff0c\u6240\u4ee5\u6211\u4eec\u73b0\u5728\u8981\u6c42\u8fd9\u6837\u7684\u95ee\u9898\uff1a\n\n**\u00b7** \u5de6\u53f3\u4e24\u8fb9\u5404\u53d6\u4e00\u79cd\u65b9\u5f0f\uff0c\u628a\u4e24\u8fb9\u5408\u5e76\u8d77\u6765\u7684\u65b9\u6848\u6570\u3002\n\n\u8fd9\u4e2a\u95ee\u9898\u53c8\u53ef\u4ee5\u8f6c\u5316\u6210\u5982\u4e0b\u95ee\u9898\uff1a\n\n**\u00b7** \u7ed9\u4f60 $n$ \u4e2a\u7403\u548c $m$ \u4e2a\u7b50\uff0c\u8981\u628a\u8fd9 $n$ \u4e2a\u7403\u653e\u8fdb\u8fd9\u4e9b\u7b50\u4e2d\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u7403\u8fdb\u7684\u7b50\u4e0d\u524d\u4e8e\u4e0a\u4e00\u4e2a\u7403\u8fdb\u7684\u7b50\uff0c\u6c42\u65b9\u6848\u6570\uff0c\u8bb0\u4e3a $g(n,m)$\u3002\n\n\u4e3a\u4ec0\u4e48\u8fd9\u4e24\u4e2a\u95ee\u9898\u662f\u7b49\u4ef7\u7684\u5462\uff1f\u6211\u4eec\u628a\u5de6\u8fb9\u7ea2\u5708\u5185\u7684\u8fb9\u60f3\u8c61\u6210\u7403\uff0c\u53f3\u8fb9\u7ea2\u5708\u5185\u7684\u8fb9\u60f3\u8c61\u6210\u5728\u8fd9\u4e9b\u7b50\u4e4b\u95f4\uff0c\u800c\u6211\u4eec\u6309\u7167\u4ece\u5de6\u5230\u53f3\u6309 \u201c\u7b50\u2014\u2014\u7a7a\u683c\u2014\u2014\u7b50...\u201d \u8fd9\u6837\u7684\u987a\u5e8f\u52a0\u8fb9\u5c31\u53ef\u4ee5\u6ee1\u8db3\u6761\u4ef6\uff0c\u6240\u4ee5\u539f\u95ee\u9898\u7684\u7b54\u6848\u5c31\u662f $g(siz_{y_1},siz_{y_2}+1)$\u3002\n\n\u73b0\u5728\u6211\u4eec\u8003\u8651\u6c42 $g(n,m)$\u3002\u56e0\u4e3a\u5e76\u4e0d\u9700\u8981\u628a\u6bcf\u4e2a\u7b50\u90fd\u653e\u8fdb\u7403\uff0c\u6240\u4ee5\u4e0d\u597d\u76f4\u63a5\u8ba1\u7b97\u3002\u6211\u4eec\u53ef\u4ee5\u518d\u8bbe $g2(n,m)$ \u8868\u793a $n$ \u4e2a\u7403 $m$ \u4e2a\u7b50\uff0c\u6309\u7167 $g(n,m)$ \u7684\u8981\u6c42\u653e\u5165\u7403\uff0c\u4f46\u6700\u540e\u4e00\u4e2a\u7b50\u5fc5\u987b\u653e\u7403\u7684\u65b9\u6848\u6570\u3002\u8fd9\u6837 $g2(n,m)=g2(n-1,m)+g2(n,m-1)$\uff0c\u5c31\u5bb9\u6613\u8ba1\u7b97\u4e86\u3002\n\n\u6c42\u51fa $g2$ \u540e\uff0c$g(n,m)=\\sum\\limits_{j=1}^m g2(i,j)$\u3002\u5e26\u56de\u539f\u95ee\u9898\uff0c$f(x)=f(y_1)\\times f(y_2)\\times g(siz_{y_1},siz_{y_2}+1)$\uff0c\u5c31\u53ef\u4ee5\u6c42\u89e3\u51fa\u7b54\u6848\u3002\n\n\u8fd9\u6837\uff0c\u9884\u5904\u7406 $g2$ \u548c $g$ \u7684\u590d\u6742\u5ea6\u662f $O(n^2)$ \u7684\uff0c\u679a\u4e3e\u6700\u5148\u52a0\u7684\u8fb9\uff0c\u518d\u8ba1\u7b97 $f$\uff0c\u4e5f\u662f $O(n^2)$ \u7684\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^2)$\u3002\n\n\u4e0b\u9762\u662f AC \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define int long long\n\nconst int M = 1e9+7ll;\n\nint n,ans,g[1005][1005],g2[1005][1005];\nint ee,h[1005],nex[1005<<1],to[1005<<1];\nint siz[1005],f[1005];\nint fa[1005],xx,yy;\n\nvoid addedge(int x,int y)\n{\n\tnex[++ee] = h[x], to[ee] = y, h[x] = ee;\n}\n\nvoid getfa(int x,int pre)\n{\n\tfa[x] = pre;\n\tfor(int i=h[x];i;i=nex[i])\n\t\tif(to[i]!=pre)\n\t\t\tgetfa(to[i],x);\n}\n\nvoid dfs(int x,int pre)\n{\n\tsiz[x] = f[x] = 1;\n\tint cnt=0;\n\tfor(int i=h[x];i;i=nex[i])\n\t\tif(to[i]!=pre && to[i]!=xx && to[i]!=yy)\n\t\t{\n\t\t\tcnt++;\n\t\t\tdfs(to[i],x);\n\t\t\tif(cnt==1)\n\t\t\t\tf[x] = f[to[i]];\n\t\t\telse\n\t\t\t\tf[x] = f[x]*f[to[i]]%M*g[siz[x]-1][siz[to[i]]+1]%M;\n\t\t\tsiz[x] += siz[to[i]];\n\t\t}\n}\n\nsigned main()\n{\n\tcin>>n;\n\tfor(int i=1,x,y;i<n&&cin>>x>>y;i++)\n\t\taddedge(x,y), addedge(y,x);\n\tfor(int i=1;i<=n;i++)\n\t\tg2[1][i] = g2[i][1] = 1;\n\tfor(int i=2;i<=n;i++)\n\t\tfor(int j=2;j<=n;j++)\n\t\t\tg2[i][j] = (g2[i-1][j]+g2[i][j-1])%M;\n\tfor(int i=1;i<=n;i++)\n\t\tg[0][i] = 1;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tg[i][j] = (g[i][j-1]+g2[i][j])%M;\n//\tfor(int i=1;i<=n;puts(\"\"),i++)for(int j=1;j<=n;j++)cout<<g[i][j]<<' ';\n\tgetfa(1,0);\n\tfor(int k=2;k<=n;k++)\n\t{\n\t\txx = k, yy = fa[k];\n\t\tdfs(xx,0), dfs(yy,0);\n\t\tans = (ans+f[xx]*f[yy]%M*g[siz[xx]-1][siz[yy]]%M)%M;\n//\t\tcout<<xx<<' '<<yy<<endl;for(int i=1;i<=n;i++)cout<<f[i]<<' ';cout<<endl;\n\t}\n\tcout<<ans<<endl;\n\t\n\treturn 0;\n   \n}\n```\n\n\u795d\u5927\u5bb6 AC \u6109\u5feb\uff01",
        "postTime": 1625624281,
        "uid": 123298,
        "name": "kouylty",
        "ccfLevel": 7,
        "title": "\u9898\u89e3\u3010AT690 \u6728\u3011"
    },
    {
        "content": "### Description\n\n\u7ed9\u5b9a\u4e00\u68f5\u5927\u5c0f\u4e3a $n$ \u7684\u6811\uff0c\u7528\u53e6\u5916 $n$ \u4e2a\u70b9\u52a0\u8fb9\u6784\u9020\u51fa\u8fd9\u68f5\u6811\uff0c\u8981\u6c42\u6784\u9020\u65f6\u6240\u88ab\u8fb9\u8fde\u5230\u7684\u70b9\u8054\u901a\uff0c\u6c42\u6709\u591a\u5c11\u8fde\u8fb9\u987a\u5e8f\u3002\n\n$1 \\leq n \\leq 1000$\u3002\n\n### Solution\n\n![](https://i.loli.net/2020/02/01/dOch6MFrGLkZyEo.png)\n\n\u8fde\u8fb9\u5927\u81f4\u6709\u4ece\u4e0a\u5411\u4e0b\u548c\u4ece\u4e0b\u5411\u4e0a\u4e24\u4e2a\u987a\u5e8f\u3002\u7531\u4e8e\u662f\u65e0\u6839\u6811\uff0c\u53ef\u4ee5\u679a\u4e3e\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u6839\u8282\u70b9\uff0c\u8ba9\u6240\u6709\u7684\u8fb9\u53ea\u80fd\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u5f80\u4e0b\u8fde\uff0c\u5373\u4e3a\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u751f\u957f\u5230\u53f6\u5b50\u8282\u70b9\u3002\n\n\u8bbe $f_x$ \u4e3a $x$ \u5b50\u6811\u7684\u65b9\u6848\u6570\uff0c$sz_x$ \u4e3a\u5b50\u6811 $x$ \u6709\u591a\u5c11\u6761\u8fb9\u3002\n\n\u521d\u59cb\u4ee4 $f_x = 1$\u3002\u5047\u8bbe\u5904\u7406\u5230\u4e86 $x$ \u7684\u513f\u5b50 $y$\uff0c\u6839\u636e\u4e58\u6cd5\u539f\u7406\uff0c$f_x = f_x \\times f_y$\u3002\u4f46\u662f\u513f\u5b50\u5b50\u6811\u7684\u52a0\u8fb9\u987a\u5e8f\u5408\u5e76\u5230\u7236\u4eb2\u5b50\u6811\u65f6\uff0c\u5e76\u4e0d\u662f\u72ec\u7acb\u7684\uff0c\u53ea\u8981\u4fdd\u8bc1\u6bcf\u4e2a\u513f\u5b50\u52a0\u8fb9\u7684\u76f8\u5bf9\u987a\u5e8f\u76f8\u5bf9\u4e0d\u53d8\uff0c\u5c31\u53ef\u4ee5\u6df7\u5408\u642d\u914d\u3002 \u4e3e\u4e2a\u6817\u5b50\uff0c\u70b9 $x$ \u6709 $k$ \u4e2a\u513f\u5b50$y_1 \\sim y_k$\uff0c\u73b0\u5728\u5904\u7406\u5230\u91cc $x$ \u7684\u7b2c $i$ \u4e2a\u513f\u5b50 $y_i$\uff0c\u5176\u4e2d $y_1 \\sim y_{i-1}$ \u7684\u52a0\u8fb9\u987a\u5e8f\u4e4b\u4e00\u4e3a ${1,2}$\uff0c\u800c $y_i$ \u5b50\u6811\u7684\u52a0\u8fb9\u987a\u5e8f\u4e4b\u4e00\u4e3a $3,4$\u3002\u90a3\u4e48\u6709\u4ee5\u4e0b\u6df7\u5408\u65b9\u5f0f\n\n\n$1 \\quad 2 \\quad \\color{red}{3 \\quad 4}$\n\n$\\color{red}{3 \\quad 4} \\color{black}{\\quad 1 \\quad 2}$\n\n$1 \\color{red}{\\quad 3} \\color{black}{\\quad 2} \\color{red}{\\quad 4}$\n\n$\\color{red}{3} \\color{black}{\\quad 1} \\color{red}{\\quad 4} \\color{black}{\\quad 2}$\n\n$\\color{red}{3} \\color{black}{\\quad 1 \\quad 2} \\quad \\color{red}{4}$\n\n$1 \\quad \\color{red}{3 \\quad 4} \\color{black}{\\quad 2}$\n\n\n\n\u5728\u5904\u7406\u5230 $y$ \u65f6\uff0c$f_x$ \u5df2\u7ecf\u662f\u82e5\u5e72\u4e2a\u513f\u5b50\u5b50\u6811\u7684\u6240\u6709\u52a0\u8fb9\u987a\u5e8f\u4e86\u3002\u6240\u4ee5\u518d\u4e58\u4e0a\u4e00\u4e2a\u6570\uff0c\u8be5\u6570\u4e3a\u5c06 $y$ \u4e0e\u4e4b\u524d\u82e5\u5e72\u4e2a\u513f\u5b50\u5b50\u6811\u7684\u52a0\u8fb9\u987a\u5e8f\u5408\u5e76\uff0c\u4fdd\u8bc1 $y$ \u5b50\u6811\u52a0\u8fb9\u76f8\u5bf9\u4f4d\u7f6e\u4e0d\u53d8\u7684\u65b9\u6848\u6570\u3002\n\n\u82e5\u5904\u7406\u5230\u513f\u5b50 $y$ \u65f6\uff0c$x$ \u5b50\u6811\u7684\u8fb9\u6570\u4e3a $sz_x$\uff0c\u8fd9\u91cc\u7684 $sz_x$ \u4e0d\u662f\u5904\u7406\u5b8c $x$ \u6240\u6709\u513f\u5b50\u540e\u7684\u8fb9\u6570\uff0c\u800c\u662f\u5904\u7406\u5230\u513f\u5b50 $y$ \u65f6\u7684\u8fb9\u6570\u3002\u95ee\u9898\u53ef\u4ee5\u8f6c\u6362\u6210\u5728 $sz_y$ \u4e2a\u4e0d\u540c\u76d2\u5b50\u91cc\u9762\u653e $sz_x - sz_y$ \u4e2a\u76f8\u540c\u7403\uff0c\u53ef\u4ee5\u4e0d\u653e\uff0c\u6c42\u65b9\u6848\u6570\u3002\u6839\u636e\u63d2\u677f\u6cd5\uff0c\u65b9\u6848\u6570\u4e3a $C_{sz_y}^{sz_x}$\uff0c\u8fd9\u4e2a\u4e1c\u4e1c\u9884\u5904\u7406\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u6700\u540e $ans$ \u8981\u9664\u4ee5\u4e8c\uff0c\u56e0\u4e3a\u6bcf\u4e00\u6761\u8fb9\u4f1a\u5728\u5b83\u4e24\u4e2a\u7aef\u70b9\u4f5c\u4e3a\u7236\u4eb2\u65f6\u7b2c\u4e00\u4e2a\u52a0\u5165\u3002\u56e0\u4e3a $ans$ \u662f\u5c06\u6240\u6709\u70b9\u4e3a\u6839\u7684\u7b54\u6848\u52a0\u8d77\u6765\uff0c\u6240\u4ee5\u9664\u4ee5\u4e8c\u8981\u7528\u9006\u5143\u3002\n\n\u65f6\u7a7a\u590d\u6742\u5ea6\u4e3a $O(n^2)$\u3002\n\n### Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\nconst int N  = 2000 + 5, p = 1e9 + 7;\ninline int read() {\n    int X = 0,w = 0; char ch = 0;\n    while(!isdigit(ch)) {w |= ch == '-';ch = getchar();}\n    while(isdigit(ch)) X = (X << 3) + (X << 1) + (ch ^ 48),ch = getchar();\n    return w ? -X : X;\n}\nstruct edge{\n\tint to, nxt;\n}e[N];\nint head[N], tot; \nvoid addedge(int x, int y) {\n\te[++tot].to = y, e[tot].nxt = head[x], head[x] = tot;\n}\nint c[N][N], f[N], sz[N], n, ans;\nvoid dfs(int x, int fa) {\n\tf[x] = 1, sz[x] = 0;\n\tfor (int i = head[x]; i; i = e[i].nxt) {\n\t\tint y = e[i].to;\n\t\tif (y != fa) {\n\t\t\tdfs(y, x); sz[x] += sz[y];\n\t\t\tf[x] = f[x] * f[y] % p * c[sz[x]][sz[y]] % p;\n\t\t}\n\t}\n\tsz[x]++;\n}\nint ksm(int a, int k) {\n    int res = 1;\n    while (k) {\n        if (k & 1) res = res * a % p;\n        a = a * a % p;\n        k >>= 1;\n    }\n    return res % p;\n}\nsigned main() {\n\tn = read();\n\tfor (int i = 1; i < n; i++) {\n\t\tint x = read(), y = read();\n\t\taddedge(x, y), addedge(y, x);\n\t}\n\tfor (int i = 0; i <= n; i++) {\n\t\tc[i][0] = c[i][i] = 1;\n\t\tfor (int j = 1; j < i; j++) c[i][j] = (c[i - 1][j - 1] + c[i - 1][j]) % p;\n\t}\n\tfor (int i = 1; i <= n; i++) {\n\t\tdfs(i, -1); ans = (ans + f[i]) % p;\n\t}\n\tprintf(\"%lld\\n\", ans * ksm(2, p - 2) % p);\n\treturn 0;\t\n}\n\n```",
        "postTime": 1580526569,
        "uid": 92112,
        "name": "ylxmf2005",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 AT690 \u3010\u6728\u3011"
    },
    {
        "content": "### \u9898\u610f\uff1a\u753b\u4e2d\u63cf\u7ed8\u4e86\u4ece\u9876\u70b91\u5230\u9876\u70b9N\u7684\u7eb8\u3002\u4ed6\u5728\u9876\u70b9bi\u548c\u9876\u70b9bi\u4e4b\u95f4\u753b\u4e86\u4e00\u4e2a\u8fb9\uff0c\u53d8\u6210\u4e86\u6811\u3002\u5728\u5199\u6811\u7684\u9014\u4e2d\uff0c\u60f3\u4e00\u76f4\u4fdd\u6301\u8fb9\u4e0a\u7684\u65f6\u5019\uff0c\u8981\u60f3\u4ec0\u4e48\u6837\u7684\u987a\u5e8f\uff0c\u6c42mod1000000007\u540e\u7684\u503c\n\n```\n#include <iostream>\n#include <vector>\n#include <map>\n#include <unordered_map>\n#include <queue>\n#include <set>\n#include <algorithm>\n#include <string>\n#include <math.h>\n#include <limits.h>\n#include <stack>\n#include <complex>\n \nusing namespace std;\n \ntypedef long long ll;\ntypedef pair<ll, ll> P;\n \nconst ll mod = 1000000007;\nll fact[200200];\nll invfact[200200];\n \ninline ll take_mod(ll a){\n    return (a % mod + mod) % mod;\n}\n \ninline ll add(ll a, ll b){\n    return take_mod(a+b);\n}\n \ninline ll sub(ll a, ll b){\n    return take_mod(a-b);\n}\n \n \ninline ll mul(ll a, ll b){\n    return take_mod(a * b);\n}\n \ninline ll pow(ll x, ll n){\n    ll res = 1LL;\n    while(n > 0){\n        if(n & 1) res = mul(res, x);\n        x = mul(x, x);\n        n >>= 1;\n    }\n    return res;\n}\n \nll mod_inv(ll x){\n    return pow(x, mod-2);\n}\n \n\nvoid make_fact(ll n){\n    fact[0] = 1;\n    ll res = 1;\n    for(int i = 1; i <= n; i++){\n        fact[i] = res;\n        res = mul(res, i+1);\n    }\n}\n \n\nvoid make_invfact(ll n){\n    invfact[0] = 1;\n    invfact[n] = mod_inv(fact[n]);\n    for(int i = n-1; i >= 1; i--){\n        invfact[i] = mul(invfact[i + 1], i + 1);\n    }\n}\n \nll perm(ll n, ll k){\n    return mul(fact[n], invfact[n-k]);\n}\n \nll comb(ll n, ll k){\n    return mul(mul(fact[n], invfact[n-k]), invfact[k]);\n}\n \nint N;\nvector<int> v[1010];\n \nP solve(int s, int bef){\n    vector<P> res_list;\n    for(int i = 0; i < v[s].size(); i++){\n        if(v[s][i] == bef){\n            continue;\n        }\n        P x = solve(v[s][i], s);\n        res_list.push_back(x);\n    }\n \n    ll res = 1, y_sum = 0;\n    for(int i = 0; i < res_list.size(); i++){\n        y_sum = add(y_sum, res_list[i].second);\n    }\n    if(y_sum == 0){\n        P ret = P(1LL, 1LL);\n        return ret;\n    }\n    else{\n        res = fact[y_sum];\n        for(int i = 0; i < res_list.size(); i++){\n            res = mul(res, invfact[res_list[i].second]);\n            res = mul(res, res_list[i].first);\n        }\n        P ret = P(res, add(y_sum, 1LL));\n        return ret;\n    }\n}\n \n \nint main(){\n    cin >> N;\n    for(int i = 0; i < N-1; i++){\n        int a, b;\n        cin >> a >> b;\n        a--; b--;\n        v[a].push_back(b);\n        v[b].push_back(a);\n    }\n \n    make_fact(10000);\n    make_invfact(10000);\n \n    ll res = 0;\n    for(int i = 0; i < N; i++){\n        res = add(res, solve(i, -1).first);\n        /*if(i == 0){\n            cout << res << endl;\n        }\n        cout << solve(i, -1).second << endl;*/\n \n    }\n \n    cout << mul(res, invfact[2]) << endl;\n \n    return 0;\n \n}\n```\n",
        "postTime": 1545468226,
        "uid": 113077,
        "name": "\u30a4\u30f3\u30c7\u30c3\u30af\u30b9",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT690 \u3010\u6728\u3011"
    }
]