[
    {
        "content": "\u8fd9\u4e0b\u8fd9\u4e0b\u4e86\uff0c\u9996\u5148\u4e8c\u9879\u5f0f\u53cd\u6f14\uff0c\u4ee4 $f_n$ \u4e3a\u94a6\u5b9a $n$ \u4e2a\u4f4d\u7f6e\u7684\u65b9\u6848\u6570\uff0c\u90a3\u4e48\u8003\u8651\u4f9d\u6b21\u52a0\u5165\u6bcf\u4e2a\u5b57\u6bcd\u3002\n\n\u90a3\u4e48\u6574\u4e2a\u5b57\u7b26\u4e32\u5c31\u88ab\u5206\u6210 $\\sum w_c-n$ \u4e2a\u8fde\u7eed\u6bb5\uff0c\u679a\u4e3e\u94a6\u5b9a\u4f4d\u7f6e\u6570\u540e\u5206\u6210\u82e5\u5e72\u8fde\u7eed\u6bb5\uff0c\u5206\u5272\u65b9\u6848\u6570\u53ef\u4ee5\u7528\u7ec4\u5408\u6570\u63cf\u8ff0\uff0c\u90a3\u4e48\u53ef\u4ee5\u5f97\u5230\u8f6c\u79fb\uff1a\n$$f'_n=\\sum_{i=1}^n\\dbinom ni\\dbinom{w_c-1}{w_c-i}f_{n-i}$$\n\u90a3\u4e48\u7b54\u6848\u5373\u4e3a\uff1a\n$$\\mathrm{ans}=\\sum_{i\\ge1}(-1)^if_i$$\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O((\\sum w_c)^2S)$\uff0c\u5176\u4e2d $S$ \u662f\u5b57\u7b26\u96c6\u5927\u5c0f\u3002\u5e94\u8be5\u53ef\u4ee5\u7c7b\u4f3c\u5206\u6cbb FFT \u5206\u6790\u7684\u66f4\u5c0f\u70b9\uff08\u6211\u6ca1\u8bd5\u8fc7\uff09\u3002\n\n[Submission](https://atcoder.jp/contests/tdpc/submissions/41667602)\u3002",
        "postTime": 1684922354,
        "uid": 227514,
        "name": "jijidawang",
        "ccfLevel": 0,
        "title": "AT693"
    },
    {
        "content": "[AT_tdpc_string \u6587\u5b57\u5217](https://www.luogu.com.cn/problem/AT_tdpc_string)\n\n> \u6784\u9020\u4e00\u4e2a\u5c0f\u5199\u5b57\u6bcd\u6784\u6210\u7684\u5b57\u7b26\u4e32\uff0c\u4f7f\u5c0f\u5199\u5b57\u6bcd $i$ \u51fa\u73b0\u4e86 $h_i$ \u6b21\uff0c\u4e14\u76f8\u540c\u5b57\u6bcd\u4e0d\u80fd\u76f8\u90bb\uff0c\u6c42\u65b9\u6848\u6570\u5e76\u5bf9 $10^9 + 7$ \u53d6\u6a21\u3002 \n> \n> $0 \\leq h_i \\leq10$\u3002\n\nPS\uff1a\u76ee\u524d\u5df2\u77e5\u6700\u4f18\u89e3\n\n\u9996\u5148\u6709\u4e00\u4e2a\u6700\u66b4\u529b\u7684\u641c\u7d22\uff0c\u8003\u8651\u4e00\u4e2a\u4e00\u4e2a\u52a0\u5165\u5b57\u6bcd\uff0c\u8bb0\u4e0b\u6bcf\u4e2a\u5b57\u6bcd\u90fd\u8fd8\u5269\u4e0b\u591a\u5c11\u4e2a\uff0c\u4e0a\u4e00\u6b21\u52a0\u4e86\u4ec0\u4e48\u5b57\u6bcd\u3002\u3002\u590d\u6742\u5ea6 $\\mathcal{O(sum!)}$\u3002\n\n\u5728\u8fd9\u4e2a\u66b4\u529b\u4e2d\uff0c\u5bb9\u6613\u53d1\u73b0\u5176\u4e2d\u5f88\u591a\u8fc7\u7a0b\u90fd\u662f\u4e0d\u9700\u8981\u7684\uff0c\u6b63\u6240\u8c13\u201c\u8a00\u7b80\u610f\u8d45\u201d\uff0c\u6211\u4eec\u8981\u7528\u66f4\u5c11\u7684\u72b6\u6001\u4ee3\u66ff\u4e0a\u9762\u7684\u7d2f\u8d58\u3002\n\n\u540c\u6837\u7684\u5b57\u6bcd\u6ca1\u6709\u4efb\u4f55\u533a\u522b\uff0c\u90a3\u4e48\u4e0d\u80fd\u591f\u5c06\u4ed6\u4eec\u5206\u5f00\u5904\u7406\uff0c\u8003\u8651**\u4e00\u79cd\u4e00\u79cd\u5b57\u6bcd\u52a0\u5165**\u3002\u90a3\u4e48\u5728\u52a0\u5165\u4e00\u79cd\u65b0\u7684\u5b57\u6bcd\u65f6\uff0c\u53ef\u4ee5\u5c06\u4ed6\u4eec\u653e\u5230\u4e32\u7684\u5404\u4e2a\u4f4d\u7f6e\u3002\u7531\u4e8e\u9898\u76ee\u8981\u6c42\u76f8\u90bb\u5b57\u7b26\u4e0d\u80fd\u76f8\u540c\uff0c\u5f71\u54cd\u4e86\u6bcf\u6b21\u52a0\u5165\u4f4d\u7f6e\u7684\u9650\u5236\uff0c\u4e0d\u59a8\u8bb0\u4e0b\u5f53\u524d**\u6709\u591a\u5c11\u76f8\u90bb\u5b57\u7b26\u662f\u76f8\u540c\u7684**\u3002\n\n\u8bbe $f_{i,k}$ \u8868\u793a\u52a0\u5b8c\u524d $i$ \u4e2a\u5b57\u7b26\u540e\uff0c\u5b57\u7b26\u4e32\u4e2d\u6709 $k(k\\le sum_{i-1})$ \u4e2a\u76f8\u90bb\u7684\u4f4d\u7f6e\u5b57\u7b26\u76f8\u540c\u7684\u65b9\u6848\u6570\u3002\n\n\u8003\u8651\u8f6c\u79fb\uff0c\u65b0\u7684\u5b57\u7b26\u53ef\u4ee5\u505a\u4e09\u4ef6\u4e8b\u60c5\uff1a\n\n+ \u5c06\u539f\u6765\u76f8\u90bb\u76f8\u540c\u7684\u201c\u597d\u57fa\u53cb\u201d\u62c6\u6563\uff0c\u8bbe\u6709 $p$ \u4e2a\u8fd9\u6837\u7684\u5b57\u7b26\uff0c\u65b9\u6848\u6570\n    $$\n    \\dbinom{k}{p}\n    $$\n\n+ \u81ea\u5df1\u7ec4\u6210\u4e00\u5bf9\u201c\u597d\u57fa\u53cb\u201d\uff0c\u8bbe\u7ec4\u6210\u4e86 $q$ \u5bf9\uff0c\u65b9\u6848\u6570\uff08\u9694\u677f\u6cd5\uff0c\u539f\u672c\u6709 $f_i-1$ \u5757\u677f\uff0c\u53bb\u6389\u4e00\u5757\u589e\u52a0\u4e00\u5bf9\u57fa\u53cb\uff09\n    $$\n    \\dbinom{f_i-1}{q}\n    $$\n\n+ \u4ec0\u4e48\u4e8b\u4e5f\u4e0d\u5e72\uff0c\u6709 $o$ \u4e2a\u8fd9\u6837\u7684\u5b57\u7b26\uff0c\u65b9\u6848\u6570\uff08\u9694\u677f\u6cd5\uff0c\u539f\u672c\u6709 $sum_{i-1}+1$ \u4e2a\u7a7a\u9699\uff0c\u53bb\u6389 $k$ \u4e2a\u662f\u76f8\u90bb\u76f8\u540c\u7684\uff09\n    $$\n    \\dbinom{sum_{i-1}+1-k}{o}\n    $$\n\n\u4e0a\u9762 $p,q,o$ \u5fc5\u987b\u4fdd\u8bc1 $p\\le k,q\\le \\max(f_i-1,0),f_i-q=p+o$\uff0c\u7ed3\u5408\u5176\u610f\u4e49\u663e\u7136\u3002\n\n\u90a3\u4e48\u679a\u4e3e $i,k,p,q,o$ \u8f6c\u79fb\u5373\u53ef\uff0c\u590d\u6742\u5ea6 $\\mathcal{O(n\\times sum\\times f^2)}$\uff0c\u5927\u7ea6 $10^5$ \u7ea7\u522b\u3002\n\n```cpp\n// Author:A weak man named EricQian\n// Attention:Check your code while coding!\n#include<bits/stdc++.h>\nusing namespace std;\n#define infll 0x3f3f3f3f3f3f3f3f\n#define inf 0x3f3f3f3f\n#define pb push_back\n#define eb emplace_back\n#define pa pair<int,int>\n#define fi first\n#define se second\ntypedef long long ll;\n#define Maxc 30\n#define Maxsumn 305\n#define mod 1000000007\ninline int rd()\n{\n\tint x=0;\n\tchar ch,t=0;\n\twhile(!isdigit(ch = getchar())) t|=ch=='-';\n\twhile(isdigit(ch)) x=x*10+(ch^48),ch=getchar();\n\treturn x=t?-x:x;\n}\nint st;\nint hav[Maxc],sum[Maxc];\nint C[Maxsumn][Maxsumn],dp[Maxc][Maxsumn];\nint main()\n{\n\t//ios::sync_with_stdio(false); cin.tie(0);\n\t//freopen(\".in\",\"r\",stdin);\n\t//freopen(\".out\",\"w\",stdout);\n\tC[0][0]=1;\n\tfor(int i=1;i<=26;i++)\n\t{\n\t\thav[i]=rd();\n\t\tif(!st && hav[i]) st=i;\n\t\tsum[i]=sum[i-1]+hav[i];\n\t}\n\tif(sum[26]==0) { printf(\"0\\n\"); return 0; }\n\tfor(int i=1;i<=300;i++)\n\t{\n\t\tC[i][0]=1;\n\t\tfor(int j=1;j<=i;j++) C[i][j]=(C[i-1][j]+C[i-1][j-1])%mod;\n\t}\n\tdp[st][hav[st]-1]=1;\n\tfor(int i=st+1;i<=26;i++) for(int k=0;k<sum[i-1];k++)\n\t\tfor(int q=0;q<max(hav[i],1);q++) for(int p=0;p<=k && p+q<=hav[i];p++)\n\t\t{\n\t\t\tint o=hav[i]-p-q;\n\t\t\tdp[i][k-p+q]=(dp[i][k-p+q]+1ll*dp[i-1][k]*\n\t\t\t\tC[max(hav[i]-1,0)][q]%mod*C[k][p]%mod*C[sum[i-1]+1-k][o]%mod)%mod;\n\t\t}\n\tprintf(\"%d\\n\",dp[26][0]);\n\t//fclose(stdin);\n\t//fclose(stdout);\n\treturn 0;\n}\n```",
        "postTime": 1667735729,
        "uid": 113073,
        "name": "EricQian",
        "ccfLevel": 7,
        "title": "\u3010\u9898\u89e3\u3011AT_tdpc_string \u6587\u5b57\u5217"
    },
    {
        "content": "\u8bbe $s_i=\\sum_{j=1}^ifreq_j$\uff0c$f_{i,j,k,l}$ \u8868\u793a\u5df2\u7ecf\u653e\u5b8c\u4e86 $i-1$ \u79cd\u5b57\u6bcd\uff0c\u7b2c $i$ \u79cd\u5b57\u6bcd\u5df2\u7ecf\u653e\u4e86 $j$ \u4e2a\uff0c\u524d $i-1$ \u79cd\u5b57\u6bcd\u5171\u6709 $k$ \u5bf9\u76f8\u90bb\uff0c\u7b2c $i$ \u79cd\u5b57\u6bcd\u6709 $l$ \u5bf9\u76f8\u90bb\u7684\u60c5\u51b5\u6570\u3002\n\n\u521d\u59cb\u65f6 $f_{1,0,0,0}=1$\uff0c\u8003\u8651\u5982\u4f55\u4ece $f_{i,j,k,l}$ \u8f6c\u79fb\u3002\n\n1. $j<freq_i$\uff0c\u90a3\u4e48\u4e0b\u4e00\u4f4d\u653e\u7684\u8fd8\u662f\u5f53\u524d\u5b57\u6bcd\uff1a\n\n> 1. \u65b0\u653e\u7684\u5b57\u6bcd\u51cf\u5c11\u4e86\u524d $i-1$ \u79cd\u5b57\u6bcd\u7684\u76f8\u90bb\u5bf9\u6570\uff0c\u5373\u8f6c\u79fb\u5230 $f_{i,j+1,k-1,l}$\uff0c\u653e\u5728\u4efb\u610f\u4e00\u5bf9\u76f8\u90bb\u5b57\u6bcd\u4e4b\u95f4\u5373\u53ef\uff0c\u5171\u6709 $k$ \u79cd\u653e\u6cd5\u3002\n> \n> 2. \u65b0\u653e\u7684\u5b57\u6bcd\u65b0\u589e\u4e86\u7b2c $i$ \u79cd\u5b57\u6bcd\u7684\u76f8\u90bb\u5bf9\u6570\uff0c\u5373\u8f6c\u79fb\u5230 $f_{i,j+1,k,l+1}$\uff0c\u653e\u5728\u4efb\u610f\u4e00\u4e2a\u540c\u79cd\u5b57\u6bcd\u65c1\u8fb9\u5373\u53ef\uff0c\u7531\u4e8e\u6bcf\u5bf9\u76f8\u90bb\u5b57\u6bcd\u516c\u7528\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u6545\u5171\u6709 $2\\times j-l$ \u79cd\u653e\u6cd5\u3002\n>\n>3. \u65b0\u653e\u7684\u5b57\u6bcd\u6ca1\u6709\u6539\u53d8\u76f8\u90bb\u5bf9\u6570\uff0c\u5373\u8f6c\u79fb\u5230 $f_{i,j+1,k,l}$\uff0c\u6b64\u65f6\u653e\u5728\u9664\u4e0a\u8ff0\u4ee5\u5916\u7684\u4efb\u4f55\u4f4d\u7f6e\u5373\u53ef\uff0c\u5171\u6709 $s_{i-1}+j+1-k-(2\\times j-l)=s_{i-1}-j-k+l+1$ \u79cd\u653e\u6cd5\u3002\n\n2. $j=freq_i$\uff0c\u8f6c\u79fb\u5230 $f_{i+1,0,k+l,0}$\uff0c\u5728 $i+1$ \u5904\u8fdb\u884c\u5904\u7406\u3002\n\n\u4f46\u662f\u540c\u79cd\u5b57\u6bcd\u95f4\u662f\u65e0\u5e8f\u7684\uff0c\u8fd9\u79cd\u505a\u6cd5\u8003\u8651\u4e86\u76f8\u5bf9\u987a\u5e8f\uff0c\u9700\u8981\u6700\u540e\u9664\u4ee5 $\\prod freq_i!$\u3002\n\n```cpp\nconst int N=30,P=1e9+7;\nll a[N],s[N],f[N][12][N*12][N],inv[N],d=1;\n\ninline void Add(ll &x,ll y){x=(x+y)%P;}\n\nsigned main(){\n    for(int i=1;i<=26;++i) s[i]=s[i-1]+(a[i]=read());\n    f[1][0][0][0]=1;\n    for(int i=1;i<=26;++i){\n        for(int j=0;j<=a[i];++j)\n            for(int k=0;k<=(i-1)*10;++k)\n                for(int l=0;l<10;++l){\n                    if(j<a[i]){\n                        if(k) Add(f[i][j+1][k-1][l],f[i][j][k][l]*k);\n                        Add(f[i][j+1][k][l+1],f[i][j][k][l]*(2*j-l));\n                        Add(f[i][j+1][k][l],f[i][j][k][l]*(s[i-1]-k-j+l+1));\n                    }\n                    else Add(f[i+1][0][k+l][0],f[i][j][k][l]);\n                }\n    }\n    inv[0]=inv[1]=1;\n    for(int i=2;i<=10;++i) inv[i]=(P-P/i)*inv[P%i]%P;\n    for(int i=2;i<=10;++i) inv[i]=inv[i-1]*inv[i]%P;\n    for(int i=1;i<=26;++i) d=d*inv[a[i]]%P;\n    printf(\"%lld\\n\",f[27][0][0][0]*d%P);\n    return 0;\n}\n```",
        "postTime": 1661956925,
        "uid": 336653,
        "name": "include_BM",
        "ccfLevel": 0,
        "title": "AT693 \u6587\u5b57\u5217"
    },
    {
        "content": "## Solution\n\n\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u9694\u677f\u6cd5\u7684\u601d\u60f3\uff0c\u5047\u8bbe $ f[i][j] $ \u8868\u793a\u622a\u6b62\u5230\u524d $ i $ \u4e2a\u4e0d\u540c\u7684\u6570\uff0c\u6709 $ j $ \u4e2a\u4e0d\u5408\u6cd5\u7684\u7a7a\u4f4d\uff0c\u6700\u7ec8\u7b54\u6848\u4e3a $ f[len][0] $\uff0c\u5176\u4e2d $ len $ \u4e3a\u4e0d\u540c\u7684\u6570\u7684\u4e2a\u6570\u3002\n\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u65b0\u52a0\u8fdb\u6765 $ fre $ \u4e2a\u76f8\u540c\u7684\u6570\uff0c\u524d\u9762\u603b\u5171\u6709 $ sum $ \u4e2a\u6570\uff0c\u90a3\u4e48\u603b\u5171\u6709 $ sum+1 $ \u4e2a\u7a7a\u4f4d\uff0c\u6211\u4eec\u9700\u8981\u77e5\u9053\u7684\u6709\uff1a\n\n$ lst1 $ \u8868\u793a\u524d\u9762\u4e0d\u5408\u6cd5\u7684\u7a7a\u4f4d\u7684\u6570\u91cf\u3002\n\n$ now $ \u8868\u793a\u5f53\u524d\u8fd9 $ fre $ \u4e2a\u6570\u4f1a\u62b5\u6d88\u591a\u5c11\u4e2a\u4e0d\u5408\u6cd5\u7684\u7a7a\u4f4d\u3002\n\n$ add $ \u8868\u793a\u5f53\u524d\u8fd9 $ fre $ \u4e2a\u6570\u4f1a\u589e\u52a0\u51e0\u4e2a\u4e0d\u5408\u6cd5\u7684\u7a7a\u4f4d\u3002\n\n\u73b0\u5728\u6211\u4eec\u8fd8\u8981\u8003\u8651\u7684\u662f\u5982\u679c\u589e\u52a0\u4e86 $ add $ \u4e2a\u4e0d\u5408\u6cd5\u7684\u7a7a\u4f4d\u4f1a\u5bf9\u8fd9\u65b0\u52a0\u8fdb\u6765\u7684 $ fre $ \u7684\u6570\u4ea7\u751f\u4ec0\u4e48\u5f71\u54cd\uff0c\u6211\u4eec\u5047\u8bbe\u4f1a\u5206\u6210 $ x $ \u6bb5\uff0c\u90a3\u4e48 $ \\sum_{i=1}^x len[x]-1=add $\uff0c\u5c31\u662f $ fre-x=add $\uff0c\u5c31\u662f $ x=fre-add $,\u5c31\u662f\u5982\u679c\u6211\u4eec\u8981\u589e\u52a0 $ add $ \u4e2a\u7a7a\u4f4d\u52bf\u5fc5\u8981\u5206\u6210 $ fre-add $ \u6bb5\uff0c\u800c\u6211\u4eec\u53d1\u73b0\u5982\u679c\u679a\u4e3e\u6709\u591a\u5c11\u4e2a\u7a7a\u4f4d\u4e0d\u597d\u505a\uff0c\u6211\u4eec\u8003\u8651\u679a\u4e3e\u5206\u6210\u51e0\u6bb5\u3002\n\n\u90a3\u4e48\u6709\u5982\u4e0b\u8f6c\u79fb\uff1a\n$$\nf[i][lst1-now+fre-x]+=f[i-1][lst]\\times C(fre-1,fre-x)\\times C(lst1,now)\\times C(sum+1-lst1,x-now)\n$$\n\u7406\u8bba\u4e0a\u4f1a $ \\text{T} $\uff0c\u4f46\u5b9e\u9645\u4e0d\u77e5\u9053\uff0c\u5f85\u6211\u5199\u5b8c\u518d\u8bf4\u3002\n\n## Code\n\n```c++\n#include <bits/stdc++.h>\nusing namespace std;\nlong long len,MOD,lsh[1001010],fac[1001010],sum,dif,lst1,x,c[1010][1010],up,fre[100101],f[1010][1010],a[100100],n,i,j,now,ans;\nint main() {\n    ios::sync_with_stdio(0);cin.tie();cout.tie();\n    cin>>n;MOD=1e9+7;\n    for (i=1;i<=n;i++) \n         {\n         \tcin>>a[i];\n         \tfor (j=2,up=sqrt(a[i]);j<=up;j++)\n         \t     while (a[i] % (j*j)==0) \n         \t          a[i]/=(j*j);\n         \tlsh[i]=a[i];\n\t\t }\n\tc[0][0]=1;fac[0]=1;\n\tfor (i=1;i<=500;i++)\n\t    {\n\t    \tc[i][0]=1;c[i][i]=1;\n\t    \tfor (j=1;j<i;j++)\n\t    \t   c[i][j]=(c[i-1][j-1]+c[i-1][j]) % MOD;\n\t    \tfac[i]=fac[i-1]*i % MOD;\n\t\t}\n\tsort(lsh+1,lsh+n+1);len=unique(lsh+1,lsh+n+1)-lsh-1;\n\tfor (i=1;i<=n;i++) a[i]=lower_bound(lsh+1,lsh+len+1,a[i])-lsh,fre[a[i]]++;\n\tf[1][fre[1]-1]=1;sum=fre[1];\n\tfor (i=1,dif=1;i<=len;i++) dif=dif*fac[fre[i]] % MOD;\n\tfor (i=2;i<=len;sum+=fre[i],i++)\n\t   for (lst1=0;lst1<=sum+1;lst1++)\n\t        if (f[i-1][lst1]!=0)\n\t            for (x=1;x<=fre[i];x++)\n\t                for (now=0;now<=min(lst1,x);now++)\n\t                    { \n\t                    f[i][lst1-now+fre[i]-x]+=f[i-1][lst1]*c[fre[i]-1][fre[i]-x] % MOD*c[lst1][now] % MOD*c[sum+1-lst1][x-now] % MOD;\n\t                    f[i][lst1-now+fre[i]-x]%=MOD;\n\t\t\t\t\t\t}\n    cout<<f[len][0]*dif % MOD<<endl;\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1632831271,
        "uid": 77615,
        "name": "OIerAlbedo",
        "ccfLevel": 0,
        "title": "AT693 \u6587\u5b57\u5217"
    },
    {
        "content": "### Description\n\n\u6784\u9020\u4e00\u4e2a\u5c0f\u5199\u5b57\u6bcd\u6784\u6210\u7684\u5b57\u7b26\u4e32\uff0c\u4f7f\u5c0f\u5199\u5b57\u6bcd $i$ \u51fa\u73b0\u4e86 $freq_i$ \u6b21\uff0c\u4e14\u76f8\u540c\u5b57\u6bcd\u4e0d\u80fd\u76f8\u90bb\uff0c\u6c42\u65b9\u6848\u6570\u5e76\u5bf9 $10^9 + 7$ \u53d6\u6a21\u3002 \n\n$1 \\leq freq_i \\leq10$\u3002\n\n### Solution\n\n\u8ba1\u6570 dp\uff0c\u5148\u627e\u51fa\u6240\u6709 $freq_i > 0$ \u7684\u5c0f\u5199\u5b57\u6bcd\uff0c\u4e00\u4e2a\u4e2a\u63d2\u5165\u5b57\u7b26\u4e32\u4e2d\u3002\u56e0\u4e3a\u7b54\u6848\u4e0e\u63d2\u5165\u987a\u5e8f\u65e0\u5173\uff0c\u6240\u4ee5\u6211\u4eec\u6309 `aabbbccddddeeefgg` \u8fd9\u6837\u7684\u987a\u5e8f\u63d2\u5165\u3002\u5728\u63d2\u5165\u7684\u8fc7\u7a0b\u4e2d\uff0c\u96be\u514d\u4f1a\u51fa\u73b0\u4e0d\u5408\u6cd5\u7684\u60c5\u51b5\u3002\u4e3e\u4e2a\u6817\u5b50\uff0c\u5982 `*a a*c*b*d d d*b b*`\uff0c\u4e0d\u5408\u6cd5\u7684\u4f4d\u7f6e\u6709 $4$ \u4e2a\uff0c\u5373\u4e3a\u7a7a\u683c\u3002\u5408\u6cd5\u4f4d\u7f6e\u6709 $6$ \u4e2a\uff0c\u5373\u4e3a `*`\u3002\u53ef\u4ee5\u53d1\u73b0\u4e09\u4e2a\u6027\u8d28\uff1a\n\n1. $S$ \u7684\u5408\u6cd5\u4f4d\u7f6e\u6570\u4e0e\u4e0d\u548c\u6cd5\u4f4d\u7f6e\u6570\u4e4b\u548c\u4e3a $|S| + 1$\n2. \u6ca1\u6709\u4e24\u4e2a\u5408\u6cd5\u4f4d\u7f6e\u6216\u4e0d\u5408\u6cd5\u4f4d\u7f6e\u662f\u76f8\u90bb\u7684\u3002\n3. \u6bcf\u4e00\u4e2a\u5408\u6cd5\u4f4d\u7f6e\u53ef\u4ee5\u63d2\u5165\u4efb\u610f\u4e2a\u5b57\u6bcd\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u63d2\u3002\n\n\u53ef\u4ee5\u60f3\u5230\u72b6\u6001\uff0c\u4ee4 $f_{i,j}$ \u4e3a\u63d2\u5165\u4e86\u6240\u6709\u7684\u5c0f\u5199\u5b57\u6bcd $i$ \u540e\uff0c\u6709 $j$ \u4e2a\u4e0d\u5408\u6cd5\u4f4d\u7f6e\u7684\u65b9\u6848\u6570\u3002\u8d4b\u521d\u503c\uff0c\u5c06\u7b2c\u4e00\u6bb5 $freq_i > 0$ \u7684\u5c0f\u5199\u5b57\u6bcd\u5168\u90e8\u63d2\u5165\u540e\u7684 $f_{i,j} = 1$\u3002\u5982 `bbbccddddeeefgg` \u4e2d `bbb` \u662f\u7b2c\u4e00\u6bb5\uff0c\u4e8e\u662f $f_{b - a = 1, 2} = 1$\u3002\n\n\n\u679a\u4e3e $i$\uff0c\u548c $f_{i-1,k}$ \u4e2d\u7684 $k$\uff0c\u610f\u5473\u7740 $f_{i,j}$ \u4f1a\u4ece $f_{i-1,k}$ \u8f6c\u79fb\u3002\u8003\u8651\u5c06\u6240\u6709\u7684\u5c0f\u5199\u5b57\u6bcd $i$ \u63d2\u5165\u5230\u5b57\u7b26\u4e32\u4e2d\uff0c\u65e0\u975e\u662f\u63d2\u5165\u5230\u5408\u6cd5\u7684\u4f4d\u7f6e\u6216\u4e0d\u5408\u6cd5\u7684\u4f4d\u7f6e\u3002\u6240\u4ee5\u518d\u679a\u4e3e\u4e00\u4e2a $good$ \u548c $bad$\uff0c\u5982\u5b57\u9762\u610f\u601d\uff0c$good$ \u4e3a\u63d2\u5165\u5230\u5408\u6cd5\u4f4d\u7f6e\u7684**\u6bb5\u6570**\uff0c$bad$ \u4e3a\u63d2\u5165\u5230\u4e0d\u5408\u6cd5\u4f4d\u7f6e\u7684\u6bb5\u6570\u3002\u5728\u679a\u4e3e\u7684\u8fc7\u7a0b\u4e2d\uff0c\u540c\u65f6\u7ef4\u62a4\u4e00\u4e2a\u5728\u52a0\u5165\u5b57\u6bcd\u524d\u7684\u5b57\u7b26\u4e32\u957f\u5ea6 $sum$\uff0c\u7528\u4e8e\u786e\u5b9a\u679a\u4e3e\u8303\u56f4\u3002 \n\n\n\u8003\u8651\u4e00\u4e2a\u95ee\u9898\uff1a\u5c06\u6240\u6709\u5c0f\u5199\u5b57\u6bcd $i$ \u52a0\u5165\u5b57\u7b26\u4e32\uff0c\u6709 $good$ \u6bb5\u5b57\u6bcd\u63d2\u5165\u4e86\u5408\u6cd5\u4f4d\u7f6e\uff0c\u6709 $bad$ \u6bb5\u5b57\u6bcd\u63d2\u5165\u4e86\u4e0d\u5408\u6cd5\u4f4d\u7f6e\u3002\u90a3\u4e48\u65b0\u4ea7\u751f\u4e86\u591a\u5c11\u4e0d\u5408\u6cd5\u7684\u4f4d\u7f6e\uff0c\u53c8\u51cf\u5c11\u4e86\u591a\u5c11\u4e0d\u5408\u6cd5\u7684\u4f4d\u7f6e\uff1f\n\n\u51cf\u5c11\u7684\u5c31\u662f $good$ \u4e2a\u3002\u56e0\u4e3a\u63d2\u5165\u7684\u5b57\u6bcd\u5206\u6210\u4e86 $good + bad$ \u6bb5\uff0c\u90a3\u4e48\u65b0\u4ea7\u751f\u4e86 $good + bad - 1$ \u4e2a\u95f4\u9694\u3002\u5982\u679c $good+bad=1$\uff0c\u90a3\u4e48\u6210\u4e3a\u4e0d\u5408\u6cd5\u4f4d\u7f6e\u7684\u4f4d\u7f6e\u4e00\u5171\u6709 $freq_i - 1$ \u4e2a\uff0c\u6240\u4ee5\u589e\u52a0\u4e86 $freq_i - 1 - good - bad + 1 = freq_i - good - bad$ \u4e2a\u4e0d\u5408\u6cd5\u4f4d\u7f6e\u3002\n\n\u6240\u4ee5\uff0c$j = k - bad + freq_i - good - bad$\u3002\n\n\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b\uff0c\u5176\u4e2d $sum + 1 - k$ \u4e3a\u6839\u636e\u6027\u8d28\u4e00\u6c42\u51fa\u7684\u5408\u6cd5\u4f4d\u7f6e\u4e2a\u6570\uff0c$n \\choose m$ \u4e3a\u7ec4\u5408\u6570\u53ef\u4ee5\u9884\u5904\u7406\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c\u8f6c\u79fb\u65b9\u7a0b\u662f\u6839\u636e\u4e58\u6cd5\u539f\u7406\u5c06\u6bcf\u4e00\u90e8\u5206\u76f8\u4e58\uff0c\u5176\u4e2d\u7684 ${freq_i - good - bad} \\choose {f_i - 1}$ \u662f\u4ec0\u4e48\u5462\uff1f\u56e0\u4e3a\u6211\u4eec\u662f\u628a\u4e00\u6bb5\u6bb5\u76f8\u540c\u7684\u5b57\u6bcd\u63d2\u5165\u5408\u6cd5\u7684\u4f4d\u7f6e\u6216\u4e0d\u5408\u6cd5\u7684\u4f4d\u7f6e\uff0c\u4e0d\u4ec5\u8981\u4e58\u4e0a\u51e0\u6bb5\u5b57\u6bcd\u63d2\u5165\u5230\u54ea\u51e0\u4e2a\u4f4d\u7f6e\u7684\u65b9\u6848\u6570\uff0c\u8fd8\u8981\u4e58\u4e0a\u6240\u6709\u7684\u5b57\u6bcd $i$ \u662f\u5982\u4f55\u5206\u6210\u4e86\u51e0\u6bb5\u5b57\u6bcd\u7684\u65b9\u6848\u6570\u3002\u628a\u4e00\u6bb5\u5b57\u6bcd\u770b\u6210\u4e00\u4e2a\u76d2\u5b50\uff0c\u6bcf\u4e2a\u5b57\u6bcd\u770b\u6210\u4e00\u4e2a\u7403\uff0c\u4e00\u5171 $good + bad$ \u4e2a\u76d2\u5b50\uff0c$freq_i$ \u4e2a\u7403\uff0c\u95ee\u9898\u8f6c\u6362\u6210\u6c42\u6bcf\u4e2a\u76d2\u5b50\u81f3\u5c11\u4e00\u4e2a\u7403\u7684\u65b9\u6848\u6570\u3002\u5957\u4e0a[\u63d2\u677f\u6cd5](http://baidu.apphb.com/?q=%E6%8F%92%E6%9D%BF%E6%B3%95)\u516c\u5f0f\u5373\u53ef\u3002\n\n$$f_{i,j} = f_{i,j} + f_{i - 1,k} \\times {{bad}\\choose{k}} \\times {{good}\\choose{sum + 1 - k}}  \\times  {{good + bad -1} \\choose{freq_i - 1}} $$\n$$ans = f_{n-1,0}$$\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^3)$\uff0c\u5176\u4e2d $n  = \\sum_{i=0}^{25} freq_i$\u3002\n\n\n### Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\nconst int N = 500 + 5, p = 1e9 + 7;\ninline int read() {\n    int X = 0,w = 0; char ch = 0;\n    while(!isdigit(ch)) {w |= ch == '-';ch = getchar();}\n    while(isdigit(ch)) X = (X << 3) + (X << 1) + (ch ^ 48),ch = getchar();\n    return w ? -X : X;\n}\nint f[26][N], C[N][N], freq[N], sum, fir, n;\nsigned main() {\n\tfor (int i = 0; i < 26; i++) {\n\t\tfreq[n] = read();\n\t\tif (freq[n]) n++;\n\t}\n\tfor (int i = 0; i <= 300; i++) {\n        C[i][0] = C[i][i] = 1;\n        for (int j = 1; j < i; j++) C[i][j] = (C[i - 1][j - 1] + C[i - 1][j]) % p;\n\t}\n    f[0][freq[0] - 1] = 1, sum = freq[0];\n    for (int i = 1; i < n; i++) {\n    \tfor (int k = 0; k <= sum; k++) \n\t\t\tfor (int bad = 0; bad <= min(freq[i], k); bad++)\n\t\t\t\tfor (int good = 0; good + bad <= freq[i] && good <= sum + 1 - k; good++) {\n\t\t\t\t\tint j = k - bad + freq[i] - good - bad;\n\t\t\t\t\tf[i][j] = (f[i][j] + f[i - 1][k] * C[k][bad] % p * C[sum + 1 - k][good] % p \n\t\t\t\t\t* C[freq[i] - 1][good + bad - 1] % p) % p;\n\t\t\t\t}\n\t\tsum += freq[i]; \n    }\t\n\tprintf(\"%lld\\n\", f[n - 1][0]);\n\treturn 0;\n}  \n```",
        "postTime": 1580557772,
        "uid": 92112,
        "name": "ylxmf2005",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 AT693 \u3010\u6587\u5b57\u5217\u3011"
    },
    {
        "content": "\u5148\u6765\u8003\u8651 \u201c\u76f8\u540c\u5b57\u6bcd\u4e0d\u80fd\u76f8\u90bb\u201d \u8fd9\u4e2a\u6761\u4ef6\u3002\u6709\u4e00\u4e2a\u7ecf\u5178\u7684\u95ee\u9898\uff1a\n\n- \u4ece $1\\sim n$ \u4e2d\u9009\u51fa $k$ \u4e2a\u6570\uff0c\u5e76\u4e14 $k$ \u4e2a\u6570\u4e0d\u76f8\u90bb\u7684\u65b9\u6848\u6570\u3002\n\n\u8fd9\u4e2a\u95ee\u9898\u7684\u89e3\u6cd5\u5c31\u662f\u5728 $k$ \u4e2a\u6570\u7684\u7a7a\u9699\u4e2d\u63d2\u5165 $n-k$ \u4e2a\u6570\uff0c\u4e14\u6bcf\u4e2a\u7a7a\u9699\u81f3\u5c11\u63d2\u5165\u4e00\u4e2a\u6570\u3002\u5229\u7528\u63d2\u677f\u6cd5\u53ef\u77e5\u7b54\u6848\u4e3a $\\dbinom{n-k+1}{k}$\u3002\n\n\u501f\u7528\u8fd9\u9053\u9898\u76ee\u7684\u601d\u8def\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u60f3\uff1a\u4e00\u4e2a\u5b57\u6bcd\u4e00\u4e2a\u5b57\u6bcd\u5730\u8003\u8651\uff0c\u6bcf\u6b21\u8003\u8651\u5230\u4e00\u4e2a\u65b0\u5b57\u6bcd\u65f6\u5c31\u8ba9\u5b83\u63d2\u8fdb\u524d\u9762\u5b57\u6bcd\u7684\u7a7a\u9699\u4e2d\u3002\u663e\u7136\u8fd9\u6837\u7684\u63d2\u5165\u65b9\u5f0f\u548c\u6700\u7ec8\u5f62\u6210\u7684\u5b57\u7b26\u4e32\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u3002\n\n\u8bbe $f_{i,j}$ \u8868\u793a\u5df2\u7ecf\u8003\u8651\u5b8c\u524d $i$ \u79cd\u5b57\u6bcd\uff0c\u4e14\u6709 $j$ \u4e2a\u76f8\u540c\u5b57\u6bcd\u662f\u76f8\u90bb\u7684\u3002\u53d1\u73b0 $freq_i$ \u4e0d\u5927\uff0c\u8003\u8651\u66b4\u529b\u679a\u4e3e\u7b2c $i$ \u79cd\u5b57\u6bcd\u7684\u63d2\u5165\u65b9\u5f0f\u3002\u8fd9\u53ef\u4ee5\u7528\u4e00\u4e2a $freq_i-1$ \u4f4d\u7684\u4e8c\u8fdb\u5236\u6570\u6765\u8868\u793a\uff0c\u5176\u4e2d\u7b2c $k$ \u4f4d\u8868\u793a\u8981\u5206\u5f00\u7b2c $k$ \u4e2a\u548c\u7b2c $k+1$ \u4e2a\u5b57\u6bcd\u3002\n\n\u518d\u8bbe $pop(k)$ \u8868\u793a $k$ \u7684\u4e8c\u8fdb\u5236\u4e2d $1$ \u7684\u4e2a\u6570\u3002\u90a3\u4e48\u5212\u5206\u65b9\u5f0f\u4e3a $k$ \u5c31\u5bf9\u5e94\u8981\u5206\u6210 $pop(k)+1$ \u6bb5\uff0c\u4e14\u65b0\u589e\u4e86 $freq_i-1-pop(k)$ \u5bf9\u76f8\u540c\u76f8\u90bb\u5b57\u6bcd\u3002\u8bbe\u8fd9 $k+1$ \u6bb5\u5171\u8981\u586b\u8865 $l$ \u4e2a\u76f8\u540c\u5b57\u6bcd\u95f4\u7684\u7a7a\u9699\uff0c\u90a3\u4e48\u5c31\u6709\uff1a\n\n$$\nf_{i-1,j}\\times\\binom{j}{l}\\times\\binom{sum_{i-1}+1-j}{pop(k)+1-l} \\to f_{i,j-l+freq_i-1-pop(k)}\n$$\n\n\u5176\u4e2d $sum_i=\\sum_{j=1}^i freq_j$\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(nsum_nk2^k)$\uff0c\u5176\u4e2d $k=\\max_{i=1}^n freq_i$\u3002\u6ce8\u610f\u7279\u5224 $freq_i=0$ \u7684\u60c5\u51b5\uff0c\u6b64\u65f6\u8f6c\u79fb\u6570\u7ec4\u4e0d\u53d8\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define pop(x) __builtin_popcount(x)\n#define For(i,a,b) for(int i=(a);i<=(b);++i)\n#define Rof(i,a,b) for(int i=(a);i>=(b);--i)\nusing namespace std;\nconst int Maxn=26,Maxm=260,Mod=1e9+7;\n\ninline int Pow(int x,int y)\n{\n    int res=1;\n    while(y)\n    {\n        if(y&1) res=1ll*res*x%Mod;\n        x=1ll*x*x%Mod,y>>=1;\n    }\n    return res;\n}\n\nint val[Maxn+5],sum,f[Maxn+5][Maxm+5];\nint fac[Maxm+5],inv[Maxm+5];\ninline int C(int x,int y) {return 1ll*fac[x]*inv[x-y]%Mod*inv[y]%Mod;}\n\nint main()\n{\n    fac[0]=inv[0]=1;\n    For(i,1,Maxm) fac[i]=1ll*fac[i-1]*i%Mod;\n    inv[Maxm]=Pow(fac[Maxm],Mod-2);\n    Rof(i,Maxm-1,1) inv[i]=1ll*inv[i+1]*(i+1)%Mod;\n    For(i,1,26) cin>>val[i];\n    f[1][max(0,val[1]-1)]=1,sum=val[1];\n    For(i,2,26)\n    {\n        if(!val[i])\n        {\n            For(j,0,sum) f[i][j]=f[i-1][j];\n            continue;\n        }\n        int lim=(1<<val[i]-1)-1;\n        For(j,0,lim)\n        {\n            int res=val[i]-1-pop(j);\n            int cnt=pop(j)+1;\n            For(k,0,sum) if(f[i-1][k])\n            {\n                int now=f[i-1][k];\n                For(l,0,min(k,cnt)) if(sum+1-k>=cnt-l)\n                    f[i][k-l+res]=(f[i][k-l+res]+1ll*now*C(k,l)%Mod*C(sum+1-k,cnt-l)%Mod)%Mod;\n            }\n        }\n        sum+=val[i];\n    }\n    printf(\"%d\\n\",f[26][0]);\n    return 0;\n}\n```",
        "postTime": 1667269138,
        "uid": 148913,
        "name": "Graphcity",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 AT_tdpc_string\u3010\u6587\u5b57\u5217\u3011"
    },
    {
        "content": "\u6765\u4e00\u53d1\u4e8c\u9879\u5f0f\u53cd\u6f14\u505a\u6cd5\u3002\n\n\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u5728\u539f\u5e8f\u5217\u4e2d\u94a6\u5b9a $t$ \u4e2a\u4f4d\u7f6e $i$ \u6ee1\u8db3 $s_i=s_{i+1}$\uff0c\u90a3\u4e48\u53ef\u4ee5\u628a\u8fd9\u4e9b\u76f8\u7b49\u7684\u6bb5\u5408\u5e76\u6210\u4e00\u4e2a\u4e8c\u5143\u7ec4 $(c,x)$\uff0c\u8868\u793a\u8fd9\u91cc\u6709 $x$ \u4e2a\u5b57\u7b26 $c$\u3002\u5bb9\u6613\u53d1\u73b0\u6b64\u65f6\u7684\u5b57\u7b26\u4e32\u53d8\u6210\u4e86\u7531 $\\sum \\text{freq}_i-t$ \u4e2a\u4e8c\u5143\u7ec4\u7ec4\u6210\u7684\u5e8f\u5217\uff0c\u8003\u8651\u5982\u4f55\u786e\u5b9a\u8fd9\u4e2a\u5e8f\u5217\u3002\n\n\u6211\u4eec\u7684\u6784\u9020\u5206\u4e3a\u4e24\u6b65\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u5b57\u7b26 $c$\uff0c\u5c06\u5176\u62c6\u6210\u82e5\u5e72\u4e2a\u4e8c\u5143\u7ec4 $(c,x_i)$ \u6ee1\u8db3 $\\sum x_i=\\text{freq}_c$\uff1b\u5c06\u5f97\u5230\u7684\u4e8c\u5143\u7ec4\u96c6\u5408\u7ec4\u6210\u4e00\u4e2a\u5e8f\u5217\u3002\u5bf9\u4e8e\u7b2c\u4e00\u6b65\uff0c\u53ef\u4ee5\u679a\u4e3e $\\text{freq}_c$ \u7684\u5206\u62c6\u6570\u3002\u5bf9\u4e8e\u7b2c\u4e8c\u6b65\uff0c\u5c06\u76f8\u540c\u7684\u4e8c\u5143\u7ec4\u5408\u5e76\u6210\u4e00\u4e2a\u591a\u91cd\u96c6\u540e\uff0c\u5bb9\u6613\u4f7f\u7528\u591a\u91cd\u96c6\u7ec4\u5408\u6570\u5f97\u5230\u7b54\u6848\u3002\n\n\u4e3a\u4e86\u6574\u5408\u8fd9\u4e9b\u4fe1\u606f\uff0c\u6211\u4eec\u5728\u5916\u5c42\u8bb0\u5f55\u4e00\u4e2a DP \u6570\u7ec4 $f_{i,j}$ \u8868\u793a\u8003\u8651\u524d $i$ \u4e2a\u5b57\u7b26\uff0c\u5df2\u7ecf\u94a6\u5b9a\u4e86 $j$ \u4e2a\u4f4d\u7f6e\u7684\u65b9\u6848\u6570\u3002\u8003\u8651\u8f6c\u79fb\u5230 $i+1$\uff0c\u6211\u4eec\u679a\u4e3e\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u94a6\u5b9a\u4f4d\u7f6e\u6570 $t$\uff0c\u5c06\u5176\u62c6\u6210 $\\text{freq}_{i+1}-t$ \u4e2a\u4e8c\u5143\u7ec4\uff0c\u5e76\u4e58\u4e0a\u591a\u91cd\u96c6\u7ec4\u5408\u6570\u4e2d\u7684\u9636\u4e58\u9006\u5143\u3002\u5c06\u8fd9\u4e2a\u72b6\u6001\u548c $f_{i,j}$ \u5408\u5e76\u4e4b\u540e\u4fbf\u53ef\u5f97\u5230\u72b6\u6001 $f_{i+1,j+t}$\u3002\n\n\u6839\u636e\u4e8c\u9879\u5f0f\u53cd\u6f14\u76f8\u5173\u77e5\u8bc6\uff0c\u6700\u540e\u7684\u7b54\u6848\u5c31\u662f $\\sum\\limits_i f_{26,i}(-1)^i$\u3002\u4e0d\u96be\u53d1\u73b0\u4e0a\u8ff0\u6784\u9020\u53ef\u4ee5\u552f\u4e00\u5bf9\u5e94\u5230\u4e00\u4e2a\u539f\u5e8f\u5217\u4e0a\u7684\u94a6\u5b9a\u65b9\u6848\u3002 \n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define ull unsigned long long\n#define db double\n#define ldb long double\n#define pb push_back\n#define mp make_pair\n#define pii pair<int, int>\n#define FR first\n#define SE second\nusing namespace std;\ninline int read() {\n    int x = 0; bool op = 0;\n    char c = getchar();\n    while(!isdigit(c))op |= (c == '-'), c = getchar();\n    while(isdigit(c))x = (x << 1) + (x << 3) + (c ^ 48), c = getchar();\n    return op ? -x : x;\n}\nconst int N = 2e3 + 10;\nconst int P = 1e9 + 7;\nvoid add(int &a, int b) {a = (a + b) % P;}\nvoid sub(int &a, int b) {a = (a - b + P) % P;}\nint ksm(int x, int k) {\n    int res = 1;\n    for(int pw = x; k; (k & 1) ? res = 1ll * res * pw % P : 0, pw = 1ll * pw * pw % P, k >>= 1);\n    return res;\n}\nint f[N], g[N], fac[N], ifac[N];\nvoid init() {\n    fac[0] = ifac[0] = 1;\n    for(int i = 1; i < N; i++)fac[i] = 1ll * fac[i - 1] * i % P;\n    ifac[N - 1] = ksm(fac[N - 1], P - 2);\n    for(int i = N - 2; i; i--)ifac[i] = 1ll * ifac[i + 1] * (i + 1) % P;\n    return ;\n}\nint dfs(int x, int y, int lst, int cnt) {\n    if(y == 0)return (x == 0) * ifac[cnt];\n    int res = 0;\n    for(int i = lst; i <= x; i++) {\n        if(lst == i)add(res, dfs(x - i, y - 1, i, cnt + 1));\n        else add(res, 1ll * ifac[cnt] * dfs(x - i, y - 1, i, 1) % P);\n    }\n    return res;\n}\nint main() { \n    freopen(\"in.txt\", \"r\", stdin);\n    freopen(\"out.txt\", \"w\", stdout);\n    init();\n    int sum = 0;\n    f[0] = 1;\n    for(int i = 0; i < 26; i++) {\n        int x = read(); sum += x;\n        if(x == 0)continue;\n        swap(f, g);\n        memset(f, 0, sizeof(f));\n        for(int i = 0; i <= sum; i++) {\n            for(int j = 0; j < x; j++) {\n                add(f[i + j], 1ll * g[i] * dfs(x, x - j, 1, 0) % P);\n            }\n        }\n    }\n    int ans = 0;\n    for(int i = 0; i < N; i++) {\n        int w = 1ll * f[i] * fac[sum - i] % P;\n        ((i & 1) ? sub(ans, w) : add(ans, w));\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```",
        "postTime": 1667205611,
        "uid": 682934,
        "name": "yllcm",
        "ccfLevel": 0,
        "title": "Solution-AT693"
    }
]