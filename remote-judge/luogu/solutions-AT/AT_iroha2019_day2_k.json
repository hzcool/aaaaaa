[
    {
        "content": "\u672c\u9898\u540c\u6b65\u6536\u5f55\u5728 [Atcoder \u9898\u76ee\u8865\u5168\u8ba1\u5212](https://www.luogu.com.cn/training/256520) \u4e2d\uff0c\u6b22\u8fce\u652f\u6301\u3002\n\n${\\color{red} \\texttt {\u6ce8\u610f\uff1a}} \\texttt {\u672c\u9898\u6bcf\u6b21\u8f93\u51fa\u90fd\u8981\u6e05\u7a7a\u7f13\u51b2\u533a\uff0c\u5426\u5219\u5c31\u4f1a\u72e0\u72e0\u7684\u8d85\u65f6\u3002}$\n\n### \u9898\u76ee\u5206\u6790\uff1a\n\n\u840c\u840c\u5c0f\u6811\u5256\uff0c\u9898\u76ee\u6709\u4e09\u79cd\u64cd\u4f5c\uff0c\u5206\u522b\u662f\u5b50\u6811\u52a0\uff0c\u67e5\u8be2\u4e24\u70b9\u4e4b\u95f4\u6743\u503c\u548c\u548c\u63a8\u5e73\u3002\n\n\u9996\u5148\uff0c\u8bf7\u60a8\u6536\u8d77\u60f3\u5199\u73c2\u6735\u8389\u6811\u7684\u60f3\u6cd5\uff0c\u9996\u5148\u8fd9\u9898\u5199\u500d\u589e\u90fd\u5361\u5e38\uff0c\u5176\u6b21\u73c2\u6735\u8389\u6811\u642d\u914d\u6811\u5256\u5929\u7136\u52a3\u52bf\uff0c\u4e0d\u8981\u518d\u6323\u624e\u4e86\u3002\n\n\u6211\u4eec\u7684\u7ebf\u6bb5\u6811\u8981\u914d\u5408\u4e24\u4e2a\u61d2\u6807\u8bb0\uff0c\u5206\u522b\u662f\u533a\u95f4\u52a0\u548c\u63a8\u5e73\u7684\uff0c\u6211\u4eec pushdown \u66f4\u65b0\u5b83\u4eec\u7684\u987a\u5e8f\u6c38\u8fdc\u662f\u63a8\u5e73\u5728\u533a\u95f4\u52a0\u4e4b\u524d\uff0c\u8fd9\u662f\u9700\u8981\u6ce8\u610f\u7684\u7ec6\u8282\u3002\u5b9e\u73b0\u7684\u65f6\u5019\u53ef\u4ee5\u5c06\u6240\u6709\u70b9\u7edf\u4e00\u52a0 $1$\uff0c\u5c06 $0$ \u7a7a\u51fa\u6765\uff0c\u9632\u6b62\u5728\u7b2c\u4e00\u904d dfs \u65f6\u9519\u8bef\u7684\u6807\u8bb0\u91cd\u513f\u5b50\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u7ebf\u6bb5\u6811\u677f\u5b50\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u5355\u6b21\u67e5\u8be2\uff0c\u533a\u95f4\u63a8\u5e73 $O(\\log^2 n)$\uff0c\u5b50\u6811\u52a0 $O(\\log n)$\uff0c\u603b\u4f53\u6765\u770b $O(n \\log^2 n)$\uff0c\u5e38\u6570\u5c0f\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\n\n\n### Code.\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\ninline int read()\n{\n\tint x=0;char c=getchar(); bool f=0;\n\tfor(;c<'0'||c>'9';c=getchar()) f|=(c=='-');\n\tfor(;c>='0'&&c<='9';c=getchar()) x=(x<<1)+(x<<3)+(c^48);\n\treturn x=f ? -x : x;\n}\nusing namespace std;\nconst int N=2e5+10; bitset< N<<2 > st; ll tr[N<<2],lz[N<<2];\nint h[N],ne[N<<1],e[N<<1],idx,n,m,id[N],cnt,top[N],sz[N],fa[N],dep[N],son[N],lt=1;\nvoid add(int u,int v) {ne[++idx]=h[u],e[idx]=v,h[u]=idx;} \nvoid dfs(int u,int father,int depth)\n{\n\tdep[u]=depth; fa[u]=father; sz[u]=1;\n\tfor(int i=h[u];~i;i=ne[i])\n\t{\n\t\tint j=e[i]; if(j == father) continue ;\n\t\tdfs(j,u,depth+1); sz[u]+=sz[j];\n\t\tif(sz[son[u]] < sz[j]) son[u]=j;\n\t}\n}\nvoid dfs2(int u,int t)\n{\n\tid[u]=++cnt; top[u]=t; \n\tif(! son[u]) return ; dfs2(son[u],t);\n\tfor(int i=h[u];~i;i=ne[i])\n\t{\n\t\tint j=e[i]; \n\t\tif(j == fa[u] || j == son[u]) continue ;\n\t\tdfs2(j,j);\n\t}\n}\nvoid pushdown(int u,int l,int r)\n{\n\tint mid = (l + r) >> 1;\n\tif(st[u])\n\t{\n\t\tst[u<<1]=st[u<<1|1]=1;\n\t\tlz[u<<1]=lz[u<<1|1]=tr[u<<1]=tr[u<<1|1]=0;\n\t\tst[u]=0;\n\t}\n\tif(lz[u])\n\t{\n\t\tlz[u<<1]+=lz[u]; lz[u<<1|1]+=lz[u];\n\t\ttr[u<<1]+=(mid-l+1)*lz[u]; tr[u<<1|1]+=(r-mid)*lz[u];\n\t\tlz[u]=0;\n\t}\n}\nvoid modify_set(int u,int l,int r,int L,int R)\n{\n\tif(L <= l && r <= R) return lz[u]=0,st[u]=1,tr[u]=0,void();\n\tpushdown(u,l,r); int mid = (l + r) >> 1;\n\tif(L <= mid) modify_set(u<<1,l,mid,L,R);\n\tif(mid < R) modify_set(u<<1|1,mid+1,r,L,R);\n\ttr[u]=tr[u<<1]+tr[u<<1|1];\n}\nvoid modify_add(int u,int l,int r,int L,int R,int k)\n{\n\tif(L <= l && r <= R) return lz[u]+=k,tr[u]+=(r-l+1)*k,void();\n\tpushdown(u,l,r); int mid = (l + r) >> 1;\n\tif(L <= mid) modify_add(u<<1,l,mid,L,R,k);\n\tif(mid < R) modify_add(u<<1|1,mid+1,r,L,R,k);\n\ttr[u]=tr[u<<1]+tr[u<<1|1];\n}\nll query(int u,int l,int r,int L,int R)\n{\n\tif(L <= l && r <= R) return tr[u];\n\tpushdown(u,l,r); int mid = (l + r) >> 1; ll res=0;\n\tif(L <= mid) res=query(u<<1,l,mid,L,R);\n\tif(mid < R) res+=query(u<<1|1,mid+1,r,L,R);\n\treturn res;\n}\nll query_t(int u,int v)\n{\n\tll sum=0;\n\twhile(top[u] != top[v])\n\t{\n\t\tif(dep[top[u]] < dep[top[v]]) swap(u,v);\n\t\tsum+=query(1,1,n,id[top[u]],id[u]); u=fa[top[u]];\n\t}\n\tif(dep[u] < dep[v]) swap(u,v); sum+=query(1,1,n,id[v],id[u]);\n\treturn sum;\n}\nvoid modify_t(int u,int v)\n{\n\twhile(top[u] != top[v])\n\t{\n\t\tif(dep[top[u]] < dep[top[v]]) swap(u,v);\n\t\tmodify_set(1,1,n,id[top[u]],id[u]); u=fa[top[u]];\n\t}\n\tif(dep[u] < dep[v]) swap(u,v); modify_set(1,1,n,id[v],id[u]);\n}\nint main()\n{\n\tmemset(h,-1,sizeof h); n=read(); m=read();\n\tfor(int i=1,u,v;i<n;i++) {u=read()+1; v=read()+1; add(u,v); add(v,u);}\n\tdfs(1,0,1); dfs2(1,1);\n\twhile(m -- )\n\t{\n\t\tint op=read(),u=read()+1,k; \n\t\tif(! op) {k=read(); modify_add(1,1,n,id[u],id[u]+sz[u]-1,k/sz[u]);}\n\t\telse {printf(\"%lld\",query_t(lt,u)); modify_t(lt,u); lt=u; cout<<endl;}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1669907877,
        "uid": 897035,
        "name": "Shiina_Mahiru",
        "ccfLevel": 0,
        "title": "[IROHA2019D2 K] \u866b\u53d6\u308a \u9898\u89e3"
    }
]