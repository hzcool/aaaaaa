[
    {
        "content": "\u524d\u8a00\uff1a\u73b0\u6709\u7684\u4e24\u7bc7\u9898\u89e3\u672c\u849f\u84bb\u6709\u70b9\u96be\u61c2\uff0c\u5728[ezoiHQM](https://www.luogu.com.cn/user/49097)\u5927\u4f6c\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u8865\u5145\uff0c\u5e0c\u671b\u80fd\u5e2e\u52a9\u6211\u8fd9\u6837\u7684\u849f\u84bb\u3002\u5982\u6709\u9519\u8bef\uff0c\u8bf7\u6307\u51fa\u3002\n\n[AT2142 [ARC062C]](https://www.luogu.com.cn/problem/AT2142)\n\n## \u9898\u610f\n\n\u7ed9\u4f60$n$\u4e2a\u6b63\u65b9\u5f62\uff0c\u6bcf\u4e2a\u6b63\u65b9\u5f62\u7684\u4e2d\u592e\u90fd\u5199\u7740\u81ea\u5df1\u7684\u7f16\u53f7$i$\uff0c\u56db\u4e2a\u89d2\u4e0a\u5404\u6709\u4e00\u79cd\u989c\u8272$c_{i,0},c_{i,1},c_{i,2},c_{i,3}$\uff08\u5de6\u4e0a\u3001\u53f3\u4e0a\u3001\u53f3\u4e0b\u3001\u5de6\u4e0b\uff09\u3002\n\n\u9009\u4e0d\u540c\u7684$6$\u4e2a\u6b63\u65b9\u5f62\u62fc\u6210\u4e00\u4e2a**\u672c\u8d28\u4e0d\u540c\u7684\u5408\u6cd5**\u7684\u7acb\u65b9\u4f53\u3002\u7acb\u65b9\u4f53\u6bcf\u4e2a**\u9876\u70b9**\u5904\u7684\u4e09\u5757\u989c\u8272\u90fd\u76f8\u540c\uff0c\u4e14\u6bcf\u4e2a\u6b63\u65b9\u5f62\u5199\u7740\u6570\u7684\u4e00\u9762\u90fd\u671d\u5916\u624d\u662f\u5408\u6cd5\u7684\u3002\uff08\u6ce8\u610f\uff0c\u6b63\u65b9\u5f62\u662f\u53ef\u4ee5**\u65cb\u8f6c**\u7684)\u3002\n\n\u672c\u8d28\u76f8\u540c\u7684\u6b63\u65b9\u4f53\uff1a\u5982\u679c\u4ee5\u67d0\u79cd\u65b9\u5f0f\u65cb\u8f6c\u4e00\u4e2a\u6b63\u65b9\u4f53\u540e\uff0c\u4e24\u4e2a\u6b63\u65b9\u4f53\u5bf9\u5e94\u9762\u4e0a\u7684\u6570\u5b57\u548c\u65b9\u5411\u90fd\u76f8\u540c\u3002\n\n\u6c42\u7ec4\u6210\u672c\u8d28\u4e0d\u540c\u7684\u5408\u6cd5\u7684\u7acb\u65b9\u4f53\u7684\u65b9\u6848\u6570\u3002\n\n## \u5206\u6790\n\n\n\u9996\u5148\uff0c\u6211\u4eec\u6765\u8ba8\u8bba\u4e00\u4e0b$c_i$\u90fd\u76f8\u7b49\u7684\u60c5\u51b5\uff0c\u4e5f\u5c31\u662f\u53ef\u4ee5\u4e0d\u7528\u7ba1\u9876\u70b9\u7684\u989c\u8272\u76f8\u540c\uff0c\u8fd9\u6837\u53ef\u4ee5\u968f\u610f\u9009\u65cb\u8f6c\u8fc7\u540e\u7684\u6b63\u65b9\u5f62\u3002\n\n\u65b9\u6848\u6570\uff1a\n\n$$\\dfrac{n(n-1)*4*A_{n-2}^4*4^4}{6}$$\n\n$n:$\u679a\u4e3e\u4e0a\u9762\u7684\u6b63\u65b9\u5f62\uff0c$n-1:$\u679a\u4e3e\u4e0b\u9762\u7684\u6b63\u65b9\u5f62\uff0c$4:$\u4e0b\u9762\u7684\u6b63\u65b9\u5f62\u65cb\u8f6c4\u4e0b\uff0c$A_{n-2}^4:$\u679a\u4e3e4\u4e2a\u4fa7\u9762(\u6709\u987a\u5e8f)\uff0c$4^4:$\u6bcf\u4e2a\u65cb\u8f6c4\u4e0b\uff0c$\\dfrac{1}{6}:$\u53bb\u91cd\u3002\n\n\n\n------------\n\n\n\u4ece\u8fd9\u4e2a\u7279\u6b8a\u60c5\u51b5\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u53ea\u8981\u786e\u5b9a\u4e0a\u4e0b\u4e24\u4e2a\u9762\uff0c8\u4e2a\u9876\u70b9\u7684\u989c\u8272\u5c31\u786e\u5b9a\u4e86\uff0c\u7136\u540e\u53ea\u8981\u7edf\u8ba14\u4e2a\u4fa7\u9762\u6ee1\u8db3\u60c5\u51b5\u7684\u4e2a\u6570\u3002\n\n\u90a3\u4e48\u6211\u4eec\u679a\u4e3e\u4e24\u4e2a\u5bf9\u2faf\u53ca\u2f45\u5411\uff0c\u90a3\u4e48\u5269\u4e0b$n-2$\u4e2a\u2faf\u53ef\u4ee5\u5728\u6ee1\u2f9c\u6761\u4ef6\u7684\u4e2d\u4efb\u610f\u9009\u3002\n\n\u628a\u6bcf\u4e2a\u6b63\u65b9\u5f62\u56db\u4e2a\u2ec6\u4e0a\u7684\u989c\u2f8a\u54c8\u5e0c\u2f00\u4e0b\uff0c\u7136\u540e\u5b58\u5230$map$\u2fa5\uff0c\u6bcf\u6b21\u7b97\u7684\u65f6\u5019\u67e5\u2f00\u4e0b\u5373\u53ef\u3002\n\n\u9700\u8981\u6ce8\u610f\u2f00\u4e9b\u7ec6\u8282\u907f\u514d\u7b97\u91cd\uff0c\u5177\u4f53\u5b9e\u73b0\u770b\u4ee3\u7801\u3002\n\n## code\n\n```cpp\n#include<bits/stdc++.h>\n#define LL long long\nusing namespace std;\ninline int read(){\n\tint w=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9') ch=getchar();\n\twhile(ch<='9'&&ch>='0'){\n\t\tw=(w<<3)+(w<<1)+(ch^48);\n\t\tch=getchar();\n\t}\n\treturn w;\n}\nint n,c[410][4],tmp[5];\nLL h[410],side[5],ans;\nmap<LL,int> cnt;\ninline LL Hash(int a[]){//\u7b97\u6bcf\u4e2a\u6b63\u65b9\u5f62\u7684hash\n\tLL sum=0;\n\tfor(int i=0;i<4;i++)//\u56e0\u4e3a\u989c\u8272\u6570<=999<2^10\n\t\tsum|=(LL)a[i]<<(i*10ll);//\u6240\u4ee5\u4e8c\u8fdb\u5236\u4e0b\u5de6\u79fbi*10\u4f4d\u5c31\u53ef\u4ee5\u907f\u514d\u91cd\u590d\n\treturn sum;//\u8bb0\u5f97\u8981\u5f3a\u8f6clong long\n}\ninline void change(LL x,int d){//\u4fee\u6539\u51fa\u73b0\u6b21\u6570\uff0c\n\tfor(int i=0;i<4;i++){//\u6b63\u65b9\u5f62\u65cb\u8f6c\n\t\tcnt[x]+=d;\n\t\tx=(x>>10ll)|((x&1023ll)<<30ll);\n        //\u53d6\u51fa3,2,1\u989c\u8272\u7684hash\uff0c\u53d6\u51fa0\u989c\u8272\u7684hash\u5e76\u653e\u5230\u524d\u9762\u3002\n\t}\n/*eg:\n0 1     1 2     2 3     3 0\n    -->     -->     -->\n3 2     0 3     1 0     2 1\n\n3210-->0321-->1032-->2103\n*/\n}\nint main(){\n\tn=read();\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=0;j<4;j++)\n\t\t\tc[i][j]=read();\n\t\th[i]=Hash(c[i]);//\u6c42hash\n\t\tchange(h[i],1);//\u51fa\u73b0\u6b21\u6570+1\n\t}\n\tfor(int i=1;i<=n-5;i++){//\u679a\u4e3e\u4e0a\u9762\n\t\tchange(h[i],-1);//\u53bb\u91cd\uff0c\u907f\u514d\u679a\u4e3e\u4fa7\u9762\u65f6\u91cd\u590d\u7edf\u8ba1\n\t\tfor(int j=i+1;j<=n;j++){//\u679a\u4e3e\u4e0b\u9762\n\t\t\tchange(h[j],-1);//\u540c\u4e0a\n\t\t\tfor(int p=0;p<4;p++){//\u65cb\u8f6c\u4e0b\u9762\n\t\t\t\tLL s=1;\n\t\t\t\tfor(int q=0;q<4;q++){//\u679a\u4e3e\u4fa7\u9762\uff1a\u6b63->\u5de6->\u540e->\u53f3\u9762\n\t\t\t\t\ttmp[0]=c[i][3-q];//\u6b63\u65b9\u5f624\u4e2a\u989c\u8272\u7531\u4e0a\u4e0b\u9762\u6b63\u65b9\u5f62\u7684\u90a3\u4e2a\u89d2\u7684\u989c\u8272\u786e\u5b9a\n\t\t\t\t\ttmp[1]=c[i][(6-q)%4];//\u5efa\u8bae\u7ed3\u5408\u6837\u4f8b\u4e00\u597d\u597d\u770b\u770b\n\t\t\t\t\ttmp[2]=c[j][(3+q+p)%4];//\u4e0b\u9762\u8981\u65cb\u8f6c\n\t\t\t\t\ttmp[3]=c[j][(2+q+p)%4];\n\t\t\t\t\tside[q]=Hash(tmp);//\u5bf9\u6ee1\u8db3\u989c\u8272\u51d1\u51fa\u6765\u7684\u6b63\u65b9\u5f62\u6c42hash\n\t\t\t\t\tif(cnt[side[q]]==0){//\u5224\u65ad\u8fd9\u4e2a\u6b63\u65b9\u5f62\u662f\u5426\u5b58\u5728\n\t\t\t\t\t\ts=0;\n\t\t\t\t\t\tbreak;//\u5927\u91cf\u4f18\u5316\u65f6\u95f4\uff0c\u5426\u5219\u4f1aT\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!s) continue;\n\t\t\t\tfor(int q=0;q<4;q++){\n\t\t\t\t\ts*=cnt[side[q]];//\u4e58\u6cd5\u539f\u7406\n\t\t\t\t\tchange(side[q],-1);//\u53bb\u91cd\n\t\t\t\t}\n\t\t\t\tfor(int q=0;q<4;q++)\n\t\t\t\t\tchange(side[q],1);//\u52a0\u56de\u6765,\u4e0b\u6b21\u7edf\u8ba1\u8981\u7528\n\t\t\t\tans+=s;//\u52a0\u6cd5\u539f\u7406\n\t\t\t}\n\t\t\tchange(h[j],1);//\u540c\u4e0a\n\t\t}\n\t}\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```\n\u9644\u6837\u4f8b\u4e00\u7ec4\u6210\u5408\u6cd5\u7acb\u65b9\u4f53\u7684\u56fe\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/o8n5fet1.png?x-oss-process=image/resize,m_lfit,h_170,w_225)",
        "postTime": 1606384554,
        "uid": 56835,
        "name": "CJzjy",
        "ccfLevel": 0,
        "title": "AT2142 [ARC062C]"
    },
    {
        "content": "\u8fd9\u9053\u9898\u771f\u7684\u5c31\u662f\u66b4\u529b......\t\n\u9996\u5148\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u53ea\t\u8981\u786e\u5b9a\u7acb\u65b9\u4f53\u7684\u4e24\u4e2a\u5bf9\u9762\uff0c\u5c31\u53ef\u4ee5\u786e\u5b9a\u8fd9\u4e00\u6574\u4e2a\u7acb\u65b9\u4f53\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5c06\u6bcf\u4e00\u4e2a\u74f7\u7816\u65cb\u8f6c\u540e\u7684\u6bcf\u4e00\u79cd\u989c\u8272\u54c8\u5e0c\u540e\u5b58\u8fdb\u4e00\u4e2amap\u91cc\u9762\uff0c\u66b4\u529b\u679a\u4e3e\u4e24\u4e2a\u5bf9\u9762\uff0c\u7136\u540e\u5229\u7528map\u7edf\u8ba1\u4e00\u4e0b\u7b54\u6848\u5c31\u597d\u4e86\u3002\u5177\u4f53\u600e\u4e48\u7edf\u8ba1\u4e0d\u96be\u7406\u89e3\uff0c\u5982\u679c\u4e0d\u4f1a\u5c31\u770b\u770b\u4ee3\u7801\u5427:\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<unordered_map>\nusing namespace std;\ntypedef long long ll;\nint n;\nll ans,c[410][4],h[410],v[4],tmp[4];\nunordered_map<ll,int>mp;\nvoid upd(ll x,int d){\n\tfor(int i=0;i<4;i++,x=((x&1023ll)<<30ll)|(x>>10ll))\n\t\tmp[x]+=d;\n\treturn;\n}\nll Hash(ll *a){\n\tll ret=0;\n\tfor(int i=0;i<4;i++)\n\t\tret|=(a[i]<<(i*10ll));\n\treturn ret;\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%lld%lld%lld%lld\",c[i],c[i]+1,c[i]+2,c[i]+3);\n\t\th[i]=Hash(c[i]);\n\t\tupd(h[i],1);\n\t}\n\tfor(int i=1;i<=n-5;i++){\n\t\tupd(h[i],-1);\n\t\tfor(int j=i+1;j<=n;j++){\n\t\t\tupd(h[j],-1);\n\t\t\tfor(int k=0;k<4;k++){\n\t\t\t\tll res=1;\n\t\t\t\tfor(int l=0;l<4;l++){\n\t\t\t\t\tll tmp[]={c[i][(l+1)&3],c[i][l],c[j][(3-l+k)&3],c[j][(6-l+k)&3]};\n\t\t\t\t\tv[l]=Hash(tmp);\n\t\t\t\t\tif(!mp.count(v[l]))\n\t\t\t\t\t\tgoto to;\n\t\t\t\t}\n\t\t\t\tfor(int l=0;l<4;l++){\n\t\t\t\t\tres*=mp[v[l]];\n\t\t\t\t\tupd(v[l],-1);\n\t\t\t\t}\n\t\t\t\tans+=res;\n\t\t\t\tfor(int l=0;l<4;l++)\n\t\t\t\t\tupd(v[l],1);\n\t\t\t\tto: ;\n\t\t\t}\n\t\t\tupd(h[j],1);\n\t\t}\n\t}\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1535014638,
        "uid": 49097,
        "name": "ezoiHQM",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT2142 \u3010AtCoDeer\u304f\u3093\u3068\u7acb\u65b9\u4f53\u3065\u304f\u308a / Building Cubes with AtCoDeer\u3011"
    },
    {
        "content": "**\u9ad8\u8d28\u91cf\u597d\u9898**\uff08\u6307\u7ec3\u4e60\u54c8\u5e0c  \n\n\n------------\n\n\u9996\u5148\u53ef\u4ee5\u53d1\u73b0\u53ea\u8981\u786e\u5b9a\u4e86\u4e00\u4e2a\u7acb\u65b9\u4f53\u76f8\u5bf9\u7684\u4e24\u4e2a\u9762\uff0c\u5c31\u76f8\u5f53\u4e8e\u786e\u5b9a\u4e86\u8fd9\u4e2a\u7acb\u65b9\u4f53\u7684\u516b\u4e2a\u89d2\u4e0a\u7684\u989c\u8272\uff0c\u4e5f\u5c31\u662f\u610f\u5473\u7740\u80fd**\u786e\u5b9a\u8fd9\u4e2a\u7acb\u65b9\u4f53**\uff0c\u7136\u540e\u53ea\u8981\u53bb\u7edf\u8ba1\u5269\u4e0b\u56db\u4e2a\u9762\u6709\u591a\u5c11\u4e2a\u53ef\u4ee5\u62fc\u63a5\u4e0a\u53bb\u5c31\u597d\u4e86      \n  \n\u4f46\u662f\uff0c\u8fd9\u9053\u9898\u96be\u7684\u5730\u65b9~~\u5176\u5b9e\u4e0d\u662f\u5f88\u96be~~\u5c31\u5728\u4e8e\u5982\u4f55\u53bb\u7edf\u8ba1  \n\u9996\u5148\u80fd\u60f3\u5230\u7684\u80af\u5b9a\u662f\u8981\u7528\u5230\u54c8\u5e0c  \n\u7136\u540e\u6211\u4eec\u8003\u8651\u5230\u8fd9\u6837\u4e00\u4e2a\u74f7\u7816  $C_1,C_2,C_3,C_4$,\u5b83\u548c$C_2,C_3,C_4,C_1$...\u4e4b\u7c7b\u90fd\u662f\u5c5e\u4e8e\u540c\u4e00\u79cd\u74f7\u7816\uff0c\u7edf\u8ba1\u7684\u65f6\u5019\u5e94\u8be5\u628a\u5b83\u4eec\u5f52\u4e3a\u4e00\u79cd  \n\u540c\u65f6\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u65cb\u8f6c\u4e86\u4e4b\u540e\u989c\u8272\u8ddf\u539f\u6765\u4e00\u6837\u7684\u60c5\u51b5(\u6bd4\u5982{1,1,1,1})\uff0c\u90a3\u4e48\u5e94\u8be5\u8bb0\u5f55\u4e00\u4e0b\uff0c\u5230\u65f6\u5019\u5728\u62fc\u63a5\u7684\u65f6\u5019\u5b83\u7684\u8d21\u732e\u5e94\u8be5\u662f\u8981\u4e58\u4ee5\u5b83\u6709\u591a\u5c11\u79cd\u65cb\u8f6c\u4e4b\u540e\u8ddf\u539f\u6765\u4e00\u6837\u7684\u60c5\u51b5(\u5982\u4e0a\u9762\u7ed9\u7684{1,1,1,1}\u5c31\u5e94\u8be5\u6709\u56db\u79cd\u65cb\u8f6c\u4e4b\u540e\u989c\u8272\u4e00\u6837)  \n\u4e8e\u662f\u8003\u8651\u628a\u6bcf\u4e00\u5757\u74f7\u7816\u7528\u4e00\u4e2a\u957f\u5ea6\u4e3a8\u7684\u6570\u7ec4\u5b58\u50a8\u4e0b\u6765$C_1,C_2,C_3,C_4,C_1,C_2,C_3,C_4$\uff0c\u518d\u5206\u522b\u4ece\u7b2c1,2,3,4\u5f80\u540e4\u4e2a\u54c8\u5e0c\u4e00\u904d   \n\u8fd9\u6837\u8fd8\u53ef\u4ee5\u6839\u636e\u5f97\u5230\u7684\u56db\u4e2a\u54c8\u5e0c\u503c\u6765\u5224\u65ad\u4e00\u4e0b\u6709\u591a\u5c11\u79cd\u65cb\u8f6c\u4e4b\u540e\u4e00\u6837\u7684\u60c5\u51b5  \n\n\u6700\u540e\u518d\u628a\u5f97\u5230\u7684\u56db\u4e2a\u54c8\u5e0c\u503c\u7ed9\"\u6346\u7ed1\u5728\u4e00\u8d77\"(\u663e\u7136\u6709\u5f88\u591a\u9ad8\u5999\u7684\u505a\u6cd5)\uff0c\u8fd9\u91cc\u6211\u9009\u62e9\u6392\u5e8f\u4e4b\u540e\u518d\u54c8\u5e0c\u4e00\u904d\uff0c\u5f97\u5230\u7684\u5c31\u662f\u6700\u540e\u7684\u54c8\u5e0c\u503c$va[i]$  \n\u4ee5\u4e0b\u662f\u7b14\u8005\u7684\u4ee3\u7801  \n```cpp\nll zz[4];\nll getHash(int x){//\u6ca1\u6709\u5fc5\u8981\u53cc\u54c8\uff0c\u4f46\u662f\u4fdd\u9669\u4e00\u70b9\u8fd8\u662f\u597d\u7684\n    ll ans=0;\n    map<ll,int> chk;\n    chk.clear();\n    for(ri i=0;i<4;++i){\n        ll nowI=0;\n        ll nowII=0;\n        for(ri j=0;j<4;++j){\n            nowI=(nowI*has+c[x][i+j]*j)%mod;\n            nowII=(nowII*Has+c[x][i+j]*j)%Mod;            \n        }\n        nowI=(nowI+nowII)%Mod;\n        chk[nowI]++;\n        siz[x]=max(siz[x],chk[nowI]);\n        zz[i]=nowI;\n    }\n    sort(zz,zz+4);\n    for(ri i=0;i<4;++i) ans=(ans*has+zz[i])%Mod;\n    return ans;\n}\n```\n\u7edf\u8ba1\u5b8c\u4e4b\u540e\u53ea\u8981\u7167\u7740\u4e00\u5f00\u59cb\u8bf4\u7684\u65b9\u6cd5\u7edf\u8ba1\u4ee5\u4e0b\u65b9\u6848\u5c31\u597d\u4e86  \n\u8fd9\u91cc\u6709\u4e00\u4e2a\u5c0f\u6280\u5de7\u53ef\u4ee5\u9632\u6b62\u91cd\u590d\u8ba1\u7b97\uff0c\u6bcf\u9009\u62e9\u4e00\u4e2a\u74f7\u7816\u5c31\u5148\u628a\u5b83\"\u6254\u6389\"\uff0c\u7b49\u7edf\u8ba1\u5b8c\u4e4b\u540e\u518d\u628a\u5b83\"\u6361\"\u56de\u6765  \n\n\n------------\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define il inline\n#define ri register int\n#define ll long long\nil ll read(){\n    bool f=true;ll x=0;\n    register char ch=getchar();\n    while(ch<'0'||ch>'9') {if(ch=='-') f=false;ch=getchar();}\n    while(ch>='0'&&ch<='9') x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\n    if(f) return x;\n    return ~(--x);\n}\nil void write(const ll &x){if(x>9) write(x/10);putchar(x%10+'0');}\nil void print(const ll &x) {x<0?putchar('-'),write(~(x-1)):write(x);putchar('\\n');}\nil int max(const int &a,const int &b){return a>b?a:b;}\nil int min(const int &a,const int &b){return a<b?a:b;}\n/*\n\u5148\u8003\u8651\u4e00\u4e0b\u600e\u4e48\u5224\u65ad\u672c\u8d28\u4e0d\u540c\u7684\u7acb\u65b9\u4f53\u7684\u4e2a\u6570  \n\u7528\u56db\u4e2a\u89d2\u8dd1\u4e00\u6b21\u54c8\u5e0c\uff0c\u518da+b+c+d%mod\n*/\n// #define node pair<int,int>\nconst int MAXN=1000;\nconst ll mod=19260817,Mod=1e9+7;\nconst ll has=1009,Has=131;\nll c[MAXN][8];\nll siz[MAXN];\nmap<ll,int> block,which;\nll zz[4];\nll getHash(int x){//\u6ca1\u6709\u5fc5\u8981\u53cc\u54c8\uff0c\u4f46\u662f\u4fdd\u9669\u4e00\u70b9\u8fd8\u662f\u597d\u7684\n    ll ans=0;\n    map<ll,int> chk;\n    chk.clear();\n    for(ri i=0;i<4;++i){\n        ll nowI=0;\n        ll nowII=0;\n        for(ri j=0;j<4;++j){\n            nowI=(nowI*has+c[x][i+j]*j)%mod;\n            nowII=(nowII*Has+c[x][i+j]*j)%Mod;            \n        }\n        nowI=(nowI+nowII)%Mod;\n        chk[nowI]++;\n        siz[x]=max(siz[x],chk[nowI]);\n        zz[i]=nowI;\n    }\n    sort(zz,zz+4);\n    for(ri i=0;i<4;++i) ans=(ans*has+zz[i])%Mod;\n    return ans;\n}\nint n;  \nll id[MAXN],cnt;\nll va[MAXN];\nll use[2][4];\nll ans;\nint main(){\n    // freopen(\"rand.in\",\"r\",stdin);\n    // freopen(\"1.out\",\"w\",stdout);\n    n=read();\n    for(ri i=1;i<=n;++i){\n        for(ri j=0;j<4;++j){\n            c[i][j]=c[i][j+4]=read();\n        }\n        ll val=getHash(i);\n        va[i]=val;\n        if(!block[val]){\n            which[val]=i;//\u9009\u4e00\u4e2a\u4ee3\u8868\u5143\u7d20  \n        }\n        ++block[val];\n    }\n    //\u4e07\u4e00\u65cb\u8f6c\u4e4b\u540e\u8fd8\u662f\u80fd\u62fc\u4e0a\u600e\u4e48\u529e\u5462\uff1f\n    //\u7528siz[i]\u6765\u8868\u793a\u6709\u591a\u5c11\u79cd\u672c\u8d28\u4e0d\u540c\u7684\u9009\u6cd5\n    for(ri i=1;i<=n;++i){//\u53ea\u4f1a\u53bb\u9009\u53d6\u6bd4i\u5c0f\u7684\u5143\u7d20,\u56e0\u4e3a\u5982\u679c\u5b58\u5728\u67d0\u4e2a\u5143\u7d20\u6bd4i\u5c0f\uff0c\u90a3\u4e48\u5b83\u5728\u524d\u9762\u7684\u65f6\u5019\u4e00\u5b9a\u88ab\u679a\u4e3e\u5230\u8fc7,\u6240\u4ee5\u53ea\u9700\u8981\u628a\u6240\u6709\u51fa\u73b0\u8fc7\u7684\u5143\u7d20delete\u6389\u5c31\u597d\u4e86\n        block[va[i]]--;\n        for(ri j=i+1;j<=n;++j){\n            block[va[j]]--;\n            for (ri O=0;O<4;++O){\n                ll now=1;\n                for(ri z=0;z<4;++z){\n                    use[0][z]=c[i][z+O];\n                    use[1][z]=c[j][z];\n                }\n                c[n+1][0]=c[n+1][4]=use[0][0];\n                c[n+1][1]=c[n+1][5]=use[1][1];\n                c[n+1][2]=c[n+1][6]=use[1][0];\n                c[n+1][3]=c[n+1][7]=use[0][1];\n                ll ha1=getHash(n+1);\n                now*=siz[which[ha1]]*block[ha1]%mod;\n                block[ha1]--;\n                c[n+2][0]=c[n+2][4]=use[0][1];\n                c[n+2][1]=c[n+2][5]=use[1][0];\n                c[n+2][2]=c[n+2][6]=use[1][3];\n                c[n+2][3]=c[n+2][7]=use[0][2];\n                ll ha2=getHash(n+2);\n                now*=siz[which[ha2]]*block[ha2]%mod;\n                block[ha2]--;\n                c[n+3][0]=c[n+3][4]=use[0][2];\n                c[n+3][1]=c[n+3][5]=use[1][3];\n                c[n+3][2]=c[n+3][6]=use[1][2];\n                c[n+3][3]=c[n+3][7]=use[0][3];\n                ll ha3=getHash(n+3);\n                now*=siz[which[ha3]]*block[ha3]%mod;\n                block[ha3]--;\n                c[n+4][0]=c[n+4][4]=use[0][3];\n                c[n+4][1]=c[n+4][5]=use[1][2];\n                c[n+4][2]=c[n+4][6]=use[1][1];\n                c[n+4][3]=c[n+4][7]=use[0][0];\n                ll ha4=getHash(n+4);\n                now*=siz[which[ha4]]*block[ha4]%mod;\n                block[ha4]--;\n                if(now>0) ans+=now;\n                block[ha1]++;\n                block[ha2]++;\n                block[ha3]++;\n                block[ha4]++;\n                if(!block[ha1]) block.erase(ha1);\n                if(!block[ha2]) block.erase(ha2);\n                if(!block[ha3]) block.erase(ha3);\n                if(!block[ha4]) block.erase(ha4);                \n                if(!which[ha1]) which.erase(ha1);\n                if(!which[ha2]) which.erase(ha2);\n                if(!which[ha3]) which.erase(ha3);\n                if(!which[ha4]) which.erase(ha4);\n\n            }\n            block[va[j]]++;\n        }\n    }\n    print(ans);\n    return 0;\n}\n```\n",
        "postTime": 1605843948,
        "uid": 206998,
        "name": "Krimson",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT2142 \u3010[ARC062C] AtCoDeer\u304f\u3093\u3068\u7acb\u65b9\u4f53\u3065\u304f\u308a / Building Cubes with AtCoDeer\u3011"
    }
]