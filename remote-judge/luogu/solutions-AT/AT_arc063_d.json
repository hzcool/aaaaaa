[
    {
        "content": "\u600e\u4e48\u90fd\u662f\u7ebf\u6bb5\u6811\u505a\u6cd5\u554a\uff0c\u76f4\u63a5\u5206\u6cbb\u4e0d\u597d\u5417\u3002\n\n----\n\n\u9898\u610f\u5c31\u662f\u6c42\u4e00\u4e2a\u5468\u957f\u6700\u5927\u7684\u77e9\u5f62\uff0c\u6ee1\u8db3\u77e9\u5f62\u5185\u6ca1\u6709\u7279\u6b8a\u70b9\u3002\n\n\u9996\u5148\u8003\u8651\u5927\u529b\u5206\u6cbb\u3002\u7b2c\u4e00\u5c42\u5206\u6cbb\u679a\u4e3e $x$ \u8f74\u4e0a\u7684\u4e2d\u7ebf\uff0c\u7136\u540e\u7b2c\u4e8c\u5c42\u679a\u4e3e $y$ \u8f74\u7684\u4e2d\u7ebf\uff0c\u95ee\u9898\u5c31\u4f1a\u8f6c\u5316\u4e3a\n\n![](https://z3.ax1x.com/2021/04/17/c5UP76.png)\n\n\u8fd9\u6837\u7684\u9650\u5236\u91cc\u9762\u627e\u5468\u957f\u6700\u5927\u7684\u77e9\u5f62\u3002\u8fd9\u91cc\u9762\u6709\u5f88\u591a\u5355\u8c03\u6027\u53ef\u4ee5\u5229\u7528\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u5230\u4e00\u4e2a\u6027\u8d28\uff1a\u7b54\u6848\u77e9\u5f62\u4e0a\u65b9\u4e0b\u65b9\u90fd\u81f3\u5c11\u6709\u4e00\u4e2a\u9876\u70b9\u5728\u56fe\u4e2d\u84dd\u8272\u8fb9\u6846\u7684\u9876\u70b9\u4e0a\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53bb\u679a\u4e3e\u77e9\u5f62\u7684\u53f3\u4e0a\u89d2\u9876\u70b9\uff0c\u5bf9\u4e8e\u77e9\u5f62\u5de6\u4e0b\u89d2\u5728\u84dd\u8272\u9876\u70b9\u7684\u60c5\u51b5\uff0c\u7528\u4e00\u4e2a\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u5de6\u4fa7\u6700\u4f18\u70b9\uff1b\u540c\u65f6\u4e0d\u8981\u5fd8\u8bb0\u77e9\u5f62\u5de6\u4e0b\u89d2\u5728\u84dd\u8272\u9876\u70b9\u7684\u60c5\u51b5\u3002\u5177\u4f53\u7684\u53ef\u4ee5\u770b\u4ee3\u7801\u3002\n\n\u679a\u4e3e\u77e9\u5f62\u5de6\u4e0a\u89d2\u9876\u70b9\u540c\u7406\uff0c\u4e3a\u4e86\u5077\u61d2\u53ef\u4ee5\u76f4\u63a5\u7ffb\u8f6c\u8fc7\u6765\u518d\u505a\u4e00\u904d\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u505a\u5230 $\\mathcal O(n\\log^2 n)$ \u4e86\u3002\n\n\u7136\u540e\u8fd8\u6709\u4e00\u4e2a\u91cd\u8981\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u8f7b\u677e\u627e\u5230\u4e00\u4e2a $1\\times H$ \u6216 $W\\times 1$ \u7684\u5408\u6cd5\u77e9\u5f62\uff0c\u6240\u4ee5\u7b54\u6848\u77e9\u5f62\u5468\u957f\u4e00\u5b9a\u5927\u4e8e $2\\max(W,H)+2$\u3002\u8fd9\u6837\u7684\u8bdd\u8be5\u77e9\u5f62\u5c31\u4e00\u5b9a\u4f1a\u8de8\u8fc7 $x=\\frac W 2$ \u548c $y=\\frac H 2$ \u4e24\u6761\u76f4\u7ebf\u4e2d\u7684\u4e00\u6761\u3002\u7b2c\u4e00\u5c42\u5206\u6cbb\u53ea\u9700\u8981\u5904\u7406\u8fd9\u4e24\u6761\u76f4\u7ebf\u4f5c\u4e3a\u4e2d\u7ebf\u5c31\u597d\u4e86\uff0c\u590d\u6742\u5ea6\u964d\u81f3 $\\mathcal O(n\\log n)$\u3002\n\n\n**code**\n\n```cpp\ntypedef long long LL;\n\nconst int N = 3e5 + 5;\n\nstruct Point {\n\tint x, y;\n\tPoint(int _x = 0, int _y = 0): x(_x), y(_y) {}\n\tfriend bool operator <(const Point &a, const Point &b) {\n\t\tif (a.x == b.x) return a.y < b.y;\n\t\treturn a.x < b.x;\n\t}\n};\n\nint n, W, H, M, ans;\nint up[N], dn[N], que[N];\nPoint a[N];\n\nvoid solve(int l, int r) {\n\tif (l == r) return;\n\tint mid = (l + r) >> 1;\n\t// up,dn \u5206\u522b\u8868\u793a\u4e0a\u4e0b\u8fb9\u754c\n\tint u = H, d = 0;\n\tfor (int i = mid; i >= l; --i) {\n\t\tup[i] = u, dn[i] = d;\n\t\tif (a[i].y <= M) d = max(d, a[i].y);\n\t\telse u = min(u, a[i].y);\n\t}\n\tu = H, d = 0;\n\tfor (int i = mid + 1; i <= r; ++i) {\n\t\tup[i] = u, dn[i] = d;\n\t\tif (a[i].y <= M) d = max(d, a[i].y);\n\t\telse u = min(u, a[i].y);\n\t}\n#define val(_) (a[_].x + dn[_])\n\tint j = mid, sav = W;\n\tint ql = 1, qr = 0;\n\tfor (int i = mid + 1; i <= r; ++i) {\n\t\twhile (j >= l && up[j] >= up[i]) {\n\t\t\twhile (ql <= qr && val(que[qr]) >= val(j)) --qr;\n\t\t\tque[++qr] = j;\n\t\t\t--j;\n\t\t}\n\t\twhile (ql <= qr && dn[que[ql]] <= dn[i]) {\n\t\t\tsav = min(sav, a[que[ql]].x);\n\t\t\t++ql;\n\t\t}\n\t\tans = max(ans, a[i].x - sav + up[i] - dn[i]);\n\t\tif (ql <= qr) ans = max(ans, a[i].x + up[i] - val(que[ql]));\n\t}\n\tsolve(l, mid), solve(mid + 1, r);\n}\n\ninline void main() {\n\tcin >> W >> H >> n;\n\tfor (int i = 1; i <= n; ++i) cin >> a[i].x >> a[i].y;\n\tsort(a+1, a+n+1);\n\tans = max(W, H) + 1;\n\t\n\tM = H / 2;\n\ta[0] = Point(0, 0);\n\ta[n + 1] = Point(W, 0);\n\tsolve(0, n + 1);\n\treverse(a+1, a+n+1);\n\tfor (int i = 1; i <= n; ++i) a[i].x = W - a[i].x;\n\tsolve(0, n + 1);\n\t\n\t// \u7ffb\u8f6c\n\tswap(W, H);\n\tfor (int i = 1; i <= n; ++i) swap(a[i].x, a[i].y);\n\tsort(a+1, a+n+1); // bug\n\tM = H / 2;\n\ta[0] = Point(0, 0);\n\ta[n + 1] = Point(W, 0);\n\tsolve(0, n + 1);\n\treverse(a+1, a+n+1);\n\tfor (int i = 1; i <= n; ++i) a[i].x = W - a[i].x;\n\tsolve(0, n + 1);\n\n\tcout << ans * 2 << '\\n';\n}\n```\n",
        "postTime": 1618824844,
        "uid": 52243,
        "name": "RenaMoe",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 AT2149 [ARC063D] \u3059\u306c\u3051\u541b\u306e\u5857\u308a\u7d75 2 / Snuke's Coloring 2"
    },
    {
        "content": "\u53c2\u89c2\u9000\u5f79\u9009\u624b\u6545\u5c45 $\\to$ [`George1123`](https://www.cnblogs.com/George1123/p/14173975.html)\n\n---\n\n## \u9898\u9762\n\n> [ARC063D Snuke's Coloring 2](https://www.luogu.com.cn/problem/AT2149)\n\n> \u7ed9\u4e00\u4e2a $W\\times H$ \u7684\u77e9\u5f62\u548c $n$ \u4e2a\u70b9 $(x_i,y_i)$\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u90fd\u5fc5\u987b\u628a\u5b83\u56db\u4e2a\u65b9\u5411\u4e4b\u4e00\u7684\u533a\u57df\u5168\u6d82\u9ed1\u3002\u6700\u540e\u7559\u4e0b\u4e00\u4e2a\u767d\u8272\u77e9\u5f62\uff0c\u6c42\u5b83\u7684\u5468\u957f\u6700\u5927\u503c\u3002\n\n> \u6570\u636e\u8303\u56f4\uff1a$1\\le W,H\\le 10^8$\uff0c$1\\le N\\le 3\\times 10^5$\u3002\n\n---\n\n## \u9898\u89e3\n\n\u9898\u76ee\u5c31\u662f\u8981\u6c42\u4e00\u4e2a\u5468\u957f\u6700\u5927\u7684\u77e9\u5f62\uff0c\u5728\u7ed9\u5b9a\u77e9\u5f62\u5185\uff0c\u4e14\u4e0d\u5305\u542b\u7ed9\u5b9a\u7684\u70b9\u3002\n\n\u7b54\u6848\u81f3\u5c11\u662f $2\\max(W,H)$\uff0c\u628a\u77e9\u5f62\u9009\u6210\u957f\u6761\u5f62\u7684\u5373\u53ef\u3002\n\n\u6240\u4ee5 $x,y$ \u4e2d\u81f3\u5c11\u6709\u4e00\u7ef4\uff0c\u7b54\u6848\u77e9\u5f62\u8d8a\u8fc7\u7ed9\u5b9a\u77e9\u5f62\u4e2d\u7ebf\u3002\n\n---\n\n\u5047\u8bbe\u8d8a\u8fc7 $y$ \u8f74\u4e2d\u7ebf\uff08\u5426\u5219\u540c\u7406\uff09\u3002\n\n\u5bf9\u7ed9\u5b9a\u7684\u70b9\u6309 $x$ \u8f74\u6392\u5e8f\u3002\u679a\u4e3e\u77e9\u5f62\u7684\u53f3\u7aef\u70b9\u5728\u7b2c\u51e0\u4e2a\u70b9\uff0c\u8bbe\u4e3a $i+1$\u3002\n\n\u5982\u679c\u5f53\u524d\u7684\u70b9 $i$ \u6ee1\u8db3 $y_i<\\frac H2$\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u53ef\u4ee5\u770b\u6210\u9650\u5236\u533a\u95f4 $[y_i,H]$\u3002\n\n\u5426\u5219\u53ef\u4ee5\u770b\u6210\u9650\u5236\u533a\u95f4 $[0,y_i]$\u3002\n\n\u7528\u4e00\u68f5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5f53\u5de6\u7aef\u70b9\u5728\u7b2c $j$ \u4e2a\u70b9\u65f6\u7684 $ans-x_{i+1}$ \u6700\u5927\u503c\u3002\n\n\u7ebf\u6bb5\u6811\u652f\u6301\u533a\u95f4\u52a0\u51cf\u548c\u5168\u5c40\u6700\u5927\u503c\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u7ef4\u62a4\u4e24\u4e2a~~\u5e74\u8f7b~~\u6808\uff0c\u4e00\u4e2a\u5728 $\\frac H2$ \u4e0b\u7aef\uff0c\u4e00\u4e2a\u5728 $\\frac H2$ \u4e0a\u7aef\u3002\n\n\u6808\u4e2d\u7684\u5143\u7d20\u662f\u4e4b\u524d\u7684\u70b9\uff0c\u7528\u4e8c\u5143\u7ec4 $(j,y)$ \u8868\u793a\u3002\n\n\u8868\u793a\u4ece $j$ \u5230 $i+1$ \u77e9\u9635\u7684\u4e0a\u8fb9\u6700\u5927/\u4e0b\u8fb9\u6700\u5c0f\u4e3a $y$\u3002\n\n---\n\n\u5047\u8bbe $y_i<\\frac H2$\uff08\u5426\u5219\u540c\u7406\uff09\uff0c\u5c31\u7528 $y_i$ \u628a\u4e0b\u7aef\u6808\u7684\u6808\u9876 $<y_i$ \u7684 `pop` \u6389\u3002\n\n\u6bcf `pop` \u4e00\u6b21\uff0c\u8c61\u5f81\u7740\u5de6\u7aef\u70b9\u5728\u88ab `pop` \u6389\u7684\u533a\u57df\u7684\u4e0b\u8fb9\u88ab\u62ac\u5347\u4e86\uff0c\u5728\u7ebf\u6bb5\u6811\u4e0a\u4fee\u6539\u3002\n\n\u5728\u6700\u540e\u88ab `pop` \u7684\u5730\u65b9 $r$ \u4e4b\u53f3\uff0c\u8fd9\u4e9b\u5730\u65b9\u4f5c\u4e3a\u5de6\u7aef\u70b9\u7684\u4e0b\u8fb9\u90fd\u662f $y_i$\u3002\n\n\u6240\u4ee5\u5f80\u4e0b\u7aef\u6808\u4e2d\u52a0\u5165\u5143\u7d20 $(r,y_i)$\u3002\n\n---\n\n\u5047\u8bbe\u7b2c $i$ \u4e2a\u70b9\u548c $i+1$ \u4e2a\u70b9\u4e2d\u6709\u4e2a\u865a\u62df\u70b9\u5728\u6700\u9876\u4e0a/\u5e95\u4e0b\u3002\n\n\u6240\u4ee5\u5728 $i$ \u8fd9\u4e2a\u5730\u65b9\u7684\u7ebf\u6bb5\u6811\u4e0a\u5355\u70b9\u4fee\u6539 $+H$\u3002\n\n\u8fd8\u8981 $-x_i$\uff0c\u4e3a\u4e86\u5230\u65f6\u5019\u53ef\u4ee5\u8ba1\u7b97\u6a2a\u5411\u533a\u95f4\u957f\u5ea6\u3002\n\n\u540c\u65f6\u5728\u4e0a\u7aef\u6808\u52a0\u5165 $(i,H)$\uff0c\u4e0b\u7aef\u52a0\u5165 $(i,0)$\u3002\n\n\u7136\u540e\u7edf\u8ba1\u53f3\u7aef\u70b9\u5728 $i+1$ \u70b9\u7684\u8d21\u732e\uff1a\u7ebf\u6bb5\u6811\u5168\u5c40\u6700\u5927\u503c $+x_{i+1}$\u3002\n\n---\n\n\u6700\u540e\u8981\u8f93\u51fa\u6c42\u51fa\u6765\u7684\u7b54\u6848 $\\times 2$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(n\\log n)$\u3002\n\n---\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef double db;\n#define x first\n#define y second\n#define bg begin()\n#define ed end()\n#define pb push_back\n#define mp make_pair\n#define sz(a) int((a).size())\n#define R(i,n) for(int i(0);i<(n);++i)\n#define L(i,n) for(int i((n)-1);i>=0;--i)\nconst int iinf=0x3f3f3f3f;\nconst ll linf=0x3f3f3f3f3f3f3f3f;\n\n//Data\nconst int N=3e5+4;\nint n,W,H,ns;\nstack<pair<int,int>> us,ds;\npair<int,int> a[N];\n\n//SegmentTree\nconst int sN=N<<2;\n#define mid ((l+r)>>1)\nint mx[sN],tag[sN];\nvoid pushup(int u){mx[u]=max(mx[u*2+1],mx[u*2+2]);}\nvoid down(int u,int v){mx[u]+=v,tag[u]+=v;}\nvoid pushdown(int u){if(tag[u]) down(u*2+1,\n    tag[u]),down(u*2+2,tag[u]),tag[u]=0;}\nvoid add(int x,int y,int v,int u=0,int l=0,int r=n){\n    // if(u==0) cout<<x<<' '<<y<<' '<<v<<'\\n';\n    if(y<=l||r<=x) return;\n    if(x<=l&&r<=y) return down(u,v);\n    pushdown(u),add(x,y,v,u*2+1,l,mid),\n    add(x,y,v,u*2+2,mid,r),pushup(u);\n}\n#undef mid\n\n//Function\nvoid solve(){\n    // cout<<\"solving\\n\";\n    sort(a,a+n);\n    R(i,n-1){\n        if(a[i].y<(H>>1)){\n            int r=i;\n            while(sz(ds)&&ds.top().y<a[i].y){\n                const int l=ds.top().x;\n                add(l,r,ds.top().y-a[i].y),r=l,ds.pop();\n            }\n            ds.push(mp(r,a[i].y));\n        } else {\n            int r=i;\n            while(sz(us)&&us.top().y>a[i].y){\n                const int l=us.top().x;\n                add(l,r,a[i].y-us.top().y),r=l,us.pop();\n            }\n            us.push(mp(r,a[i].y));\n        }\n        us.push(mp(i,H)),ds.push(mp(i,0));\n        add(i,i+1,H-a[i].x),ns=max(ns,mx[0]+a[i+1].x);\n    }\n    while(sz(ds)) ds.pop();\n    while(sz(us)) us.pop();\n    R(u,n<<2) mx[u]=tag[u]=0;\n}\n\n//Main\nint main(){\n    ios::sync_with_stdio(false);\n    cin.tie(0),cout.tie(0);\n    cin>>W>>H>>n; //,ns=max(W,H);\n    R(i,n) cin>>a[i].x>>a[i].y;\n    a[n++]=mp(0,0),a[n++]=mp(W,H);\n    solve(),swap(W,H);\n    R(i,n) swap(a[i].x,a[i].y);\n    solve(),cout<<(ns<<1)<<'\\n';\n    return 0;\n}\n```\n\n---\n\n**\u795d\u5927\u5bb6\u5b66\u4e60\u6109\u5feb\uff01**",
        "postTime": 1608627615,
        "uid": 118365,
        "name": "George1123",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 AT2149 \u3010[ARC063D] \u3059\u306c\u3051\u541b\u306e\u5857\u308a\u7d75 2 / Snuke's Coloring 2\u3011"
    },
    {
        "content": "\u95ee\u9898\u7b49\u4ef7\u4e8e\u6c42\u4e00\u4e2a\u4e0d\u5305\u542b\u7ed9\u5b9a\u70b9\uff08\u5728\u8fb9\u754c\u4e0a\u4e0d\u7b97\uff09\u7684\u77e9\u5f62\uff0c\u6700\u5927\u5316\u5176\u5468\u957f\u3002  \n\u7531\u4e8e\u70b9\u5168\u662f\u6574\u70b9\uff0c\u9996\u5148\u7b54\u6848\u81f3\u5c11\u662f max(W + 1, H + 1) * 2 \u3002  \n\u7136\u540e\u53ef\u4ee5\u53d1\u73b0\u8981\u8fbe\u5230\u8fd9\u4e2a\u4e0b\u754c\uff0c\u77e9\u5f62\u4e00\u5b9a\u81f3\u5c11\u7ecf\u8fc7 W*H \u8303\u56f4\u77e9\u5f62\u7684\u4e24\u4e2a\u76f4\u7684\u5bf9\u79f0\u8f74\u4e4b\u4e00\u3002  \n\u90a3\u4e48\u73b0\u5728\u53ea\u8003\u8651\u7ecf\u8fc7 y = W / 2 \u7684\u77e9\u5f62\uff0c\u5bf9\u4e8e x = H / 2 \u505a\u6cd5\u7c7b\u4f3c\uff0c\u5148\u4e0d\u7ba1\u3002\n\n\u6cbf\u7740 y = W / 2 \u8fd9\u6761\u4e2d\u7ebf\u4ece\u5de6\u5411\u53f3\u626b\uff0c\u7b97\u51fa\u6bcf\u4e2a\u70b9\u5411\u4e0a\u5411\u4e0b\u6700\u8fdc\u80fd\u5ef6\u4f38\u5230\u591a\u8fdc\u3002  \n\u7136\u540e\u7ee7\u7eed\u6cbf\u7740\u8fd9\u4e2a\u65b9\u5411\u7ef4\u62a4\u4e00\u6761\u626b\u63cf\u7ebf\uff0c\u4ee5\u8fd9\u6761\u626b\u63cf\u7ebf\u4f5c\u4e3a\u77e9\u5f62\u7684\u53f3\u8fb9\u7b97\u6700\u4f18\u7b54\u6848\u3002  \n\u5047\u8bbe\u8fd8\u77e5\u9053\u5de6\u8fb9\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5de6\u53f3\u8fb9\u754c\u786e\u5b9a\u540e\u53ef\u4ee5\u8d2a\u5fc3\u6c42\u51fa\u6700\u4f18\u7684\u4e0a\u4e0b\u8fb9\u754c\uff0c  \n\u5bf9\u4e8e\u4e4b\u524d\u7684\u5ef6\u4f38\u8ddd\u79bb\u4e0a\u4e0b\u5206\u522b\u53d6 min \u5373\u53ef\u3002\n\n\u4f46\u662f\u679a\u4e3e\u5de6\u8fb9\u65f6\u95f4\u662f\u4e0d\u5141\u8bb8\u7684\uff0c\u8003\u8651\u8d2a\u5fc3\u7b97\u7684\u662f\u4ec0\u4e48\uff0c\u5b9e\u9645\u5c31\u662f\u4e00\u6bb5\u540e\u7f00\u6700\u5c0f\u503c\uff08\u4ee5\u5f53\u524d\u626b\u63cf\u7ebf\u4e3a\u6700\u53f3\u8fb9\uff09\u3002  \n\u90a3\u4e48\u8981\u6c42\u51fa\u6700\u4f18\u7684\u5de6\u8fb9\u754c\uff0c\u5c31\u662f\u628a\u5de6\u53f3\u8fb9\u754c\u957f\u5ea6\u7b97\u4e0a\u540e\u5bf9\u626b\u63cf\u7ebf\u5de6\u8fb9\u7684\u6240\u6709\u70b9\u53d6 max \u3002  \n\u800c\u968f\u7740\u626b\u63cf\u7ebf\u7684\u79fb\u52a8\uff0c\u6bcf\u4e2a\u70b9\u4e3a\u5de6\u8fb9\u754c\u65f6\u7684\u5de6\u53f3\u8fb9\u754c\u957f\u90fd\u52a0\u4e0a\u540c\u4e00\u4e2a\u503c\u3002  \n\u8fd9\u4e9b\u90fd\u5f88\u597d\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u3002\n\n\u5177\u4f53\u5730\uff0c\u7528\u5355\u8c03\u6808\u7ef4\u62a4\u540e\u7f00\u6700\u5c0f\u503c\uff0c\u5355\u8c03\u6808\u4ece\u5de6\u5230\u53f3\u9012\u589e\uff0c  \n\u91cc\u9762\u4e24\u4e2a\u76f8\u90bb\u70b9 x, y \u6ee1\u8db3 x ~ y \u7684\u6700\u5c0f\u503c\u90fd\u662f y \u3002  \n\u90a3\u4e48\u626b\u63cf\u7ebf\u79fb\u52a8\u65f6\u64cd\u4f5c\u5355\u8c03\u6808\uff0c\u4f1a\u6709\u4e00\u4e9b\u70b9\u7684\u540e\u7f00\u6700\u5c0f\u503c\u6539\u53d8\uff0c  \n\u800c\u8fd9\u4e9b\u70b9\u5bf9\u5e94\u82e5\u5e72\u6bb5\u533a\u95f4\uff0c\u7528\u7ebf\u6bb5\u6811\u533a\u95f4\u52a0\u51cf\u5373\u53ef\u5b9e\u73b0\u4fee\u6539\u3002\n\n\u6ce8\uff1a\u7ebf\u6bb5\u6811\u4e0a\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9 x \u7684\u503c\u7ef4\u62a4\u7684\u5c31\u662f\u4ee5 x \u4e3a\u5de6\u8fb9\u754c\uff0c\u626b\u63cf\u7ebf\u4e3a\u53f3\u8fb9\u754c\u7684\u6700\u5927\u5468\u957f\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <stack>\n#define debug(...) // fprintf(stderr, __VA_ARGS__)\n\ninline int input() { int x; scanf(\"%d\", &x); return x; }\n\nstruct Tree {\n\tint L, R;\n\tTree *lt, *rt;\n\tint max, lazy;\n\n\tinline void update() {\n\t\tmax = std::max(lt -> max, rt -> max);\n\t}\n\n\tinline void push_down() {\n\t\tlt -> max += lazy;\n\t\tlt -> lazy += lazy;\n\t\trt -> max += lazy;\n\t\trt -> lazy += lazy;\n\t\tlazy = 0;\n\t}\n\n\tvoid add(int l, int r, int x) {\n\t\tif(r < L or l > R)\n\t\t\treturn;\n\t\tif(l <= L and R <= r) {\n\t\t\tmax += x;\n\t\t\tlazy += x;\n\t\t} else {\n\t\t\tpush_down();\n\t\t\tlt -> add(l, r, x);\n\t\t\trt -> add(l, r, x);\n\t\t\tupdate();\n\t\t}\n\t}\n\n\tint query(int l, int r) {\n\t\tif(r < L or l > R)\n\t\t\treturn 0;\n\t\tif(l <= L and R <= r)\n\t\t\treturn max;\n\t\tpush_down();\n\t\treturn std::max(lt -> query(l, r), rt -> query(l, r));\n\t}\n\n\tTree(int l, int r): L(l), R(r), max(0), lazy(0) {\n\t\tif(l == r)\n\t\t\treturn;\n\t\tint mid = (l + r) >> 1;\n\t\tlt = new Tree(l, mid);\n\t\trt = new Tree(mid + 1, r);\n\t}\n};\n\nstruct Dot {\n\tint x, y;\n};\n\nconst int maxn = 300005;\nDot dot[maxn];\nint x[maxn], up[maxn], down[maxn];\n\ninline bool cmp(Dot x, Dot y) {\n\treturn x.x < y.x;\n}\n\nint solve(int n, int w, int h) {\n\tif(not n) return 0;\n\tfor(int i = 1; i <= n; i ++)\n\t\tdebug(\"%d, %d\\n\", dot[i].x, dot[i].y);\n\n\tint mid = h >> 1;\n\tint i = 1, p = 0;\n\tint res = 0;\n\tstd::stack<int> stup, stdown;\n\tTree T(1, n);\n\n\tstup.push(0);\n\tstdown.push(0);\n\n\twhile(i <= n) {\n\t\t++ p;\n\t\tx[p] = dot[i].x;\n\t\tup[p] = h - mid;\n\t\tdown[p] = mid;\n\n\t\twhile(i <= n and dot[i].x == x[p]) {\n\t\t\tif(dot[i].y >= mid)\n\t\t\t\tup[p] = std::min(up[p], dot[i].y - mid);\n\t\t\tif(dot[i].y <= mid)\n\t\t\t\tdown[p] = std::min(down[p], mid - dot[i].y);\n\t\t\ti ++;\n\t\t}\n\n\t\twhile(up[stup.top()] > up[p]) {\n\t\t\tint tmp = stup.top();\n\t\t\tstup.pop();\n\t\t\tT.add(stup.top() + 1, tmp, up[p] - up[tmp]);\n\t\t\tdebug(\"%d-%d add %d\\n\", stup.top() + 1, tmp, up[p] - up[tmp]);\n\t\t}\n\n\t\twhile(down[stdown.top()] > down[p]) {\n\t\t\tint tmp = stdown.top();\n\t\t\tstdown.pop();\n\t\t\tT.add(stdown.top() + 1, tmp, down[p] - down[tmp]);\n\t\t\tdebug(\"%d-%d add %d\\n\", stdown.top() + 1, tmp, down[p] - down[tmp]);\n\t\t}\n\n\t\tstup.push(p);\n\t\tstdown.push(p);\n\t\tT.add(p, p, w - x[p - 1] + up[p] + down[p]);\n\t\tdebug(\"%d-%d add %d\\n\", p, p, w - x[p - 1] + up[p] + down[p]);\n\t\tres = std::max(res, T.query(1, p) - (w - dot[i].x));\n\n\t\tdebug(\"%d: %d, %d ans=%d\\n\", x[p], up[p], down[p], T.query(1, p) - (w - dot[i].x));\n\t}\n\n\treturn res;\n}\n\nint main() {\n\tint w = input(), h = input(), n = input(), ans = 0;\n\n\tfor(int i = 1; i <= n; i ++) {\n\t\tdot[i].x = input();\n\t\tdot[i].y = input();\n\t\tif(dot[i].x == 0 or dot[i].x == w or dot[i].y == 0 or dot[i].y == h) {\n\t\t\tn --;\n\t\t\ti --;\n\t\t}\n\t}\n\n\tstd::sort(dot + 1, dot + n + 1, cmp);\n\tdot[0].x = 0;\n\tdot[n + 1].x = w;\n\tfor(int i = 1; i <= n + 1; i ++)\n\t\tans = std::max(ans, h + dot[i].x - dot[i - 1].x);\n\tans = std::max(ans, solve(n, w, h));\n\n\tfor(int i = 1; i <= n; i ++)\n\t\tstd::swap(dot[i].x, dot[i].y);\n\n\tstd::sort(dot + 1, dot + n + 1, cmp);\n\tdot[0].x = 0;\n\tdot[n + 1].x = h;\n\tfor(int i = 1; i <= n + 1; i ++)\n\t\tans = std::max(ans, w + dot[i].x - dot[i - 1].x);\n\tans = std::max(ans, solve(n, h, w));\n\n\tprintf(\"%d\\n\", ans << 1);\n}\n```",
        "postTime": 1565765965,
        "uid": 52232,
        "name": "Kewth",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 AT2149 \u3010\u3059\u306c\u3051\u541b\u306e\u5857\u308a\u7d75 2 / Snuke&#039;s Coloring 2\u3011"
    },
    {
        "content": "[\u6d1b\u8c37\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/AT2149) & [Atcoder \u9898\u9762\u4f20\u9001\u95e8](https://atcoder.jp/contests/arc063/tasks/arc063_d)\n\n\u597d\u9898\u4e00\u9053\u3002\n\n\u4e00\u4e2a\u5f88 trivial \u7684\u53d1\u73b0\u662f\u7b54\u6848\u7b49\u4ef7\u4e8e\u6c42\u4e00\u4e2a\u5468\u957f\u6700\u5927\u7684\u77e9\u5f62\uff0c\u6ee1\u8db3\u8fd9\u4e2a\u77e9\u5f62\u5185\u90e8\uff08\u4e0d\u542b\u8fb9\u754c\uff09\u6ca1\u6709\u5176\u4ed6\u70b9\u3002\n\n\u9996\u5148\u6ce8\u610f\u5230\u4e00\u4e2a\u6027\u8d28\uff1a\u7b54\u6848\u80af\u5b9a\u4e0d\u5c0f\u4e8e $2\\max(H,W)+2$\uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u80af\u5b9a\u53ef\u4ee5\u6846\u51fa\u4e00\u4e2a $1\\times\\max(H,W)$ \u7684\u77e9\u5f62\uff0c\u5176\u5185\u90e8\u80af\u5b9a\u4e0d\u4f1a\u542b\u5176\u4ed6\u70b9\u3002\u8003\u8651\u901a\u8fc7\u8fd9\u4e2a\u7b80\u5355\u7684\u6027\u8d28\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4ec0\u4e48\u3002\u6211\u4eec\u8003\u8651\u5c06\u77e9\u5f62\u4ece $x=\\dfrac{W}{2},y=\\dfrac{H}{2}$ \u5904\u5288\u6210\u56db\u4e2a\u90e8\u5206\uff0c\u90a3\u4e48\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u5b8c\u5168\u5305\u542b\u5728\u56db\u4e2a\u90e8\u5206\u4e4b\u4e00\u7684\u77e9\u5f62\uff0c\u5176\u5468\u957f\u6700\u5927\u4e0d\u4f1a\u8d85\u8fc7 $2(\\dfrac{W}{2}+\\dfrac{H}{2})=W+H<2\\max(H,W)+2$\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u6700\u4f18\u51b3\u7b56\u65b9\u6848\u4e2d\uff0c$x$ \u8f74\u548c $y$ \u8f74\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u65b9\u5411\u662f\u8de8\u8fc7\u4e2d\u7ebf\u7684\uff0c\u8fd9\u91cc\u6211\u4eec\u4e0d\u59a8\u5047\u8bbe $y$ \u8f74\u8de8\u8fc7\u4e2d\u7ebf\uff0c$x$ \u8f74\u8de8\u8fc7\u4e2d\u7ebf\u7684\u60c5\u51b5\u7528\u7c7b\u4f3c\u65b9\u6cd5\u6c42\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u6211\u4eec\u8003\u8651\u5c06\u6240\u6709\u70b9\u6309 $x$\u200b \u5750\u6807\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u7136\u540e\u679a\u4e3e\u6700\u7ec8\u77e9\u5f62\u7684\u5de6\u53f3\u7aef\u70b9\uff0c\u6216\u8005\u8bf4\uff0c\u6a2a\u5750\u6807\u7b49\u4e8e\u5de6\u8fb9\u754c\u7684\u70b9 $i$\u200b \u548c\u6a2a\u5750\u6807\u7b49\u4e8e\u53f3\u8fb9\u754c\u7684\u70b9 $j$\u200b\uff08\u7531\u4e8e\u6211\u4eec\u5df2\u7ecf\u5c06\u6240\u6709\u70b9\u6309\u6a2a\u5750\u6807\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u56e0\u6b64\u5fc5\u7136\u6709 $i<j$\u200b\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u8003\u8651\u7eb5\u5750\u6807\u7684\u8303\u56f4\uff0c\u5982\u679c $j=i+1$\u200b \u90a3\u4e48\u663e\u7136\u7eb5\u5750\u6807\u7684\u8303\u56f4\u53ef\u4ee5\u662f $[0,H]$\u200b\uff0c\u8be5\u77e9\u5f62\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5c31\u662f\u5176\u5468\u957f $2(H+x_j-x_i)$\u200b\uff0c\u5426\u5219\uff0c\u6211\u4eec\u8003\u8651 $[i+1,j-1]$ \u4e2d\u7684\u4e00\u4e2a\u70b9 $k$\uff0c\u5982\u679c $2y_k\\le H$\uff0c\u90a3\u4e48\u7531\u4e8e\u6211\u4eec\u5f3a\u5236\u8981\u6c42\u5176\u8de8\u8fc7\u4e2d\u7ebf\uff0c\u8be5\u77e9\u5f62\u7684\u4e0b\u8fb9\u754c\u5fc5\u987b\u9ad8\u4e8e $y_k$\uff0c\u5426\u5219 $2y_k>H$\uff0c\u8be5\u77e9\u5f62\u7684\u4e0b\u8fb9\u754c\u4e5f\u5c31\u5e94\u4f4e\u4e8e $y_k$\u3002\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u77e9\u5f62\u7684\u4e0a\u4e0b\u8fb9\u754c\uff0c\u7136\u540e\u4ee4\u7b54\u6848\u5bf9\u5176\u53d6 $\\max$ \u5373\u53ef\u3002\n\n\u76f4\u63a5\u679a\u4e3e\u662f\u5e73\u65b9\u7684\uff0c\u8003\u8651\u4f18\u5316\u3002\u6211\u4eec\u8bb0 $l_i,r_i$ \u8868\u793a\u70b9 $i$ \u5bf9\u77e9\u5f62\u7eb5\u5750\u6807\u8303\u56f4\u7684\u9650\u5236\uff0c\u5177\u4f53\u6765\u8bf4\u5982\u679c $2y_i\\le H$ \u90a3\u4e48 $l_i=y_i,r_i=H$\uff0c\u5426\u5219 $l_i=0,r_i=y_i$\uff0c\u90a3\u4e48\u4e00\u7ec4 $i,j(i\\le j-2)$ \u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5373\u4e3a $2(x_j-x_i+(\\max\\limits_{k=i+1}^{j-1}r_k)-(\\min\\limits_{k=i+1}^{j-1}l_k))$\u200b\uff0c\u5bf9 $l,r$ \u5206\u522b\u5efa\u4e00\u4e2a\u5355\u8c03\u6808\u5904\u7406\u6389\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $n\\log n$\u3002\n\n```cpp\nusing namespace fastio;\nconst int MAXN = 1e6;\nconst ll INFll = 0x3f3f3f3f3f3f3f3fll;\nint W, H, n;\nstruct point {\n\tint x, y;\n\tfriend bool operator < (point lhs, point rhs) {\n\t\treturn lhs.x < rhs.x;\n\t}\n} p[MAXN + 5];\nstruct node {int l, r; ll mx, lz;} s[MAXN * 4 + 5];\nvoid pushup(int k) {s[k].mx = max(s[k << 1].mx, s[k << 1 | 1].mx);}\nvoid build(int k, int l, int r) {\n\ts[k].l = l; s[k].r = r; s[k].mx = s[k].lz = 0; if (l == r) return;\n\tint mid = l + r >> 1; build(k << 1, l, mid); build(k << 1 | 1, mid + 1, r);\n}\nvoid tag(int k, ll v) {s[k].mx += v; s[k].lz += v;}\nvoid pushdown(int k) {if (s[k].lz) tag(k << 1, s[k].lz), tag(k << 1 | 1, s[k].lz), s[k].lz = 0;}\nvoid modify(int k, int l, int r, int v) {\n\tif (l > r) return;\n\tif (l <= s[k].l && s[k].r <= r) return tag(k, v), void();\n\tpushdown(k); int mid = s[k].l + s[k].r >> 1;\n\tif (r <= mid) modify(k << 1, l, r, v);\n\telse if (l > mid) modify(k << 1 | 1, l, r, v);\n\telse modify(k << 1, l, mid, v), modify(k << 1 | 1, mid + 1, r, v);\n\tpushup(k);\n}\nll query(int k, int l, int r) {\n\tif (l > r) return -INFll;\n\tif (l <= s[k].l && s[k].r <= r) return s[k].mx;\n\tpushdown(k); int mid = s[k].l + s[k].r >> 1;\n\tif (r <= mid) return query(k << 1, l, r);\n\telse if (l > mid) return query(k << 1 | 1, l, r);\n\telse return max(query(k << 1, l, mid), query(k << 1 | 1, mid + 1, r));\n}\nstack<pii> up, dw;\nvoid insup(int x, int p) {\n\twhile (up.size() > 1 && up.top().fi > p) {\n\t\tpii pp = up.top(); up.pop();\n\t\tmodify(1, up.top().se, pp.se - 1, -pp.fi);\n\t}\n\tmodify(1, up.top().se, x - 1, p);\n\tup.push(mp(p, x));\n}\nvoid insdw(int x, int p) {\n\twhile (dw.size() > 1 && dw.top().fi < p) {\n\t\tpii pp = dw.top(); dw.pop();\n\t\tmodify(1, dw.top().se, pp.se - 1, pp.fi);\n\t}\n\tmodify(1, dw.top().se, x - 1, -p);\n\tdw.push(mp(p, x));\n}\nll calc() {\n\tsort(p + 1, p + n + 1);\n\tbuild(1, 0, n + 1); ll mx = 0;\n\tup.push(mp(0, 0)); dw.push(mp(0, 0));\n\tfor (int i = 1; i <= n + 1; i++) {\n\t\tif (p[i - 1].y < H / 2) {\n\t\t\tinsup(i - 1, H);\n\t\t\tinsdw(i - 1, p[i - 1].y);\n\t\t} else {\n\t\t\tinsup(i - 1, p[i - 1].y);\n\t\t\tinsdw(i - 1, 0);\n\t\t}\n\t\tmodify(1, i - 1, i - 1, -p[i - 1].x);\n\t\tchkmax(mx, query(1, 0, i - 2) + p[i].x);\n\t\tchkmax(mx, p[i].x - p[i - 1].x + H);\n\t}\n\twhile (!up.empty()) up.pop();\n\twhile (!dw.empty()) dw.pop();\n\treturn mx;\n}\nint main() {\n//\tfreopen(\"4-etzoob-244.in\", \"r\", stdin);\n//\tfreopen(\"4-etzoob-244.out\", \"w\", stdout);\n\tread(n); read(W); read(H);\n\tfor (int i = 1; i <= n; i++) read(p[i].x), read(p[i].y);\n\tp[n + 1] = {W, H}; ll res = calc();\n\tfor (int i = 1; i <= n + 1; i++) swap(p[i].x, p[i].y);\n\tswap(W, H); chkmax(res, calc());\n\tprintf(\"%lld\\n\", res << 1);\n\treturn 0;\n}\n```",
        "postTime": 1640876176,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 AT2149 [ARC063D] \u3059\u306c\u3051\u541b\u306e\u5857\u308a\u7d75 2 / Snuke's Coloring 2"
    },
    {
        "content": "- \u5f88\u4e45\u4ee5\u524d\u7684[\u5751](https://www.luogu.com.cn/blog/luo1gu1zui1bang1/solution-at2149)\uff0c\u73b0\u5728\u597d\u6b79\u662f\u6709\u673a\u4f1a\u8865\u4e0a\u3002\n- \u8fd9\u9898\u4e2a\u4eba\u8ba4\u4e3a\u9aa8\u5b50\u91cc\u6d41\u7740\u5206\u6cbb\u7684\u8840\u3002\uff08\u867d\u7136\u4f60\u53ef\u4ee5\u770b\u5230\u6700\u540e\u5206\u6cbb\u51e0\u4e4e\u6ca1\u6389\u4e86\uff09\n\n**\u9898\u610f**\n- [\u9898\u76ee](https://www.luogu.com.cn/problem/AT2149)\u3002\n- \u7ed9\u5b9a\u4e00\u4e2a $W\\times H$ \u7684\u5e73\u9762\uff0c\u6c42\u5468\u957f\u6700\u5927\u7684\u4e00\u4e2a\u77e9\u5f62\uff0c\u4e0d\u7ecf\u8fc7\u6240\u6709\u7684 $n$ \u4e2a\u6574\u70b9\u3002\n- $n\\le 3\\times10^5$\uff0c$W,H\\le 10^8$\u3002\n\n**\u505a\u6cd5\u4e00**\n- \u505a\u6cd5\u4e00:\uff08\u5206\u6cbb+\uff09\u626b\u63cf\u7ebf\u3002\n- \u8003\u8651\u7ecf\u8fc7\u5206\u6cbb\u4e2d\u5fc3\u7684\u77e9\u5f62\uff0c\u7528\u626b\u63cf\u7ebf\u7ef4\u62a4\uff0c\u5b83\u5927\u6982\u957f\u8fd9\u6837\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/5g4hfirm.png)\n- \u7ef4\u62a4\u5355\u8c03\u4e0a\u5347\u6216\u4e0b\u964d\u7684\u70b9\u53ef\u4ee5\u4f7f\u7528\u5355\u8c03\u6808\uff0c\u66f4\u65b0\u9700\u8981\u652f\u6301\u533a\u95f4\u52a0\u548c\u5168\u5c40\u6700\u5927\u503c\u7684\u67e5\u8be2\uff0c\u8fd9\u4e2a\u7528\u7ebf\u6bb5\u6811\u5373\u53ef\u65b9\u4fbf\u7ef4\u62a4\u3002\n- \u603b\u590d\u6742\u5ea6 $O(n\\log^2n)$\u3002\n- \u5f53\u7136\uff0c\u7531\u4e8e\u8fd9\u9053\u9898\u76ee\u7684\u7279\u6b8a\u6027\uff0c\u6211\u4eec\u53d1\u73b0\u7b54\u6848\u6709\u4e2a\u4e0b\u754c $2(\\max(W,H)+1)$\uff0c\u8fd9\u540c\u6837\u8bf4\u660e\u4e86\u5408\u6cd5\u77e9\u5f62\u5fc5\u987b\u7ecf\u8fc7 $x=\\frac W2$ \u6216 $y=\\frac H2$\uff0c\u6240\u4ee5\u6211\u4eec\u5176\u5b9e\u4e0d\u9700\u8981\u5206\u6cbb\uff0c\u590d\u6742\u5ea6\u662f $O(n\\log n)$\u3002\n- \u53e3\u80e1\u4e94\u5206\u949f\uff0c\u4ee3\u7801\u4e24\u5c0f\u65f6\u3002\uff08\n- \u8fd9\u9898\u5982\u679c\u4f60\u662f\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u5b9e\u73b0\u5b83\u7684\u4ee3\u7801\u4f1a\u76f8\u5f53\u4e0d\u65b9\u4fbf\uff0c\u8fd9\u4e3b\u8981\u662f\u56e0\u4e3a\u52a8\u6001\u5f00\u70b9\u5bf9\u4e0b\u4f20\u548c\u7279\u6b8a\u5904\u7406\u7684\u64cd\u4f5c\u662f\u6bd4\u8f83\u8106\u5f31\u7684\u3002\n- \u4e00\u5f00\u59cb\u79bb\u6563\u5316\u5417\uff1f\u6ce8\u610f\u5b83\u4e0d\u5141\u8bb8\u54b1\u4eec\u5728\u6bcf\u4e2a\u95ee\u9898\u4e0a\u90fd\u6765\u4e00\u6b21\u7ebf\u6027\u7684\u5efa\u6811\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5728\u6bcf\u6b21\u5206\u6cbb\u7684\u65f6\u5019\u5355\u72ec\u79bb\u6563\u5316\u3002\n- $O(n\\log^2n)$ [\u4ee3\u7801\u5b9e\u73b0](https://www.luogu.com.cn/paste/xxke5mqd)\u3002\n- $O(n\\log n)$ [\u4ee3\u7801\u5b9e\u73b0](https://www.luogu.com.cn/paste/zz7zdimt)\u3002\n\n**\u505a\u6cd5\u4e8c**\n- \u505a\u6cd5\u4e8c\uff1a\uff08\u5206\u6cbb+\uff09\u5206\u6cbb\u3002\n- \u8003\u8651\u7ecf\u8fc7\u5206\u6cbb\u4e2d\u5fc3\u7684\u77e9\u5f62\uff0c$x$ \u7ef4\u641e\u4e00\u4e2a\u5206\u6cbb\uff0c$y$ \u7ef4\u4e5f\u641e\u4e00\u4e2a\u5206\u6cbb\uff0c\u7ed3\u679c\u5982\u4f55\uff1f\n![](https://cdn.luogu.com.cn/upload/image_hosting/smkbn3rl.png)\n- \u4f7f\u7528\u5355\u8c03\u961f\u5217\u548c\u53cc\u6307\u9488\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u5173\u4e8e\u5206\u6cbb\u5757\u5185\u7684\u70b9\u6570\u7684\u7ebf\u6027\u65f6\u95f4\u5185\u6c42\u89e3\u95ee\u9898\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u662f $O(n\\log^2 n)$\uff08\u8fd9\u4e2a\u505a\u6cd5\u4f3c\u4e4e\u66f4\u5177\u6709\u5e7f\u6cdb\u7684\u9002\u7528\u6027\uff0c\u5b83\u663e\u7136\u53ef\u4ee5\u7c7b\u4f3c\u5730\u5904\u7406\u6700\u5927\u9762\u79ef\u7684\u95ee\u9898\uff09\u3002\n- \u7b80\u5355\u7c97\u66b4\u5730\u5229\u7528\u4e4b\u524d\u7684\u90a3\u4e2a\u7ed3\u8bba\uff0c\u53ef\u4ee5\u6d88\u6389\u4e00\u7ef4\u5206\u6cbb\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n- \u5b9e\u73b0\u5bf9\u6211\u6765\u8bf4\u4f1a\u7a0d\u5fae\u6709\u4e9b\u590d\u6742\uff0c\u6211\u7684\u4ee3\u7801\u80fd\u529b\u8fd8\u662f\u6709\u5f85\u63d0\u9ad8\uff0c\u89e3\u51b3\u4ee3\u7801\u5b9e\u73b0\u56f0\u96be\u7684\u95ee\u9898\u4ecd\u7136\u4efb\u91cd\u800c\u9053\u8fdc\u3002\n- \u5728\u5b9e\u73b0\u4e2d\u4e00\u4e2a\u76f8\u5f53\u91cd\u8981\u7684\u7ec6\u8282\u5c31\u662f\uff1a\u6700\u540e\u8ba1\u7b97\u7684\u65f6\u5019\u6211\u4eec\u5e0c\u671b\u6240\u6709\u7684\u70b9\u90fd\u5173\u4e8e\u67d0\u4e2a\u4f4d\u7f6e\u6709\u5e8f\uff0c\u4f46\u76f4\u63a5\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u4e0d\u53ef\u4ee5\u627f\u53d7\u7684\uff0c\u9700\u8981\u6ce8\u610f\u3002",
        "postTime": 1645842224,
        "uid": 260884,
        "name": "WeLikeStudying",
        "ccfLevel": 0,
        "title": "\u3010\u5206\u6cbb\u3011\u4f60\u7684\u6c34\u58a8\u753b"
    },
    {
        "content": "\u5728\u5176\u4ed6\u9898\u89e3\u4e2d\u83b7\u5f97\u4e86\u8bb8\u591a\u6559\u76ca\uff0c\u7ec8\u4e8e\u770b\u61c2\u4e86\u8fd9\u9898\uff0c\u4e8e\u662f\u5199\u4e00\u4e9b\u5176\u4ed6\u9898\u89e3\u4e2d\u8ba4\u4e3a\u8fc7\u4e8e\u57fa\u7840\u800c\u7565\u53bb\u7684\u7ec6\u8282\u6765\u5e2e\u52a9\u50cf\u6211\u8fd9\u6837\u7684\u840c\u65b0\u3002\n\n\u611f\u8c22[\u5946\u4f6c](https://www.luogu.com.cn/user/260884)\u548c[\u5946\u4f6c](https://www.luogu.com.cn/user/115194)\u3002\n\n\u9996\u5148\u662f\u8fd9\u9898\u7684\u9898\u610f\u8f6c\u5316\uff1a\u5728\u6240\u6709\u5b50\u77e9\u5f62\u4e2d\u627e\u5230\u4e0d\u5305\u542b\u7ed9\u51fa\u7684\u4efb\u4f55\u4e00\u4e2a\u7279\u6b8a\u70b9\u4e14\u5468\u957f\u6700\u5927\u7684\u4e00\u4e2a\uff0c\u8f93\u51fa\u5176\u5468\u957f\u3002\n\n\u8fd9\u9898\u7684 $n^2$ \u505a\u6cd5\u662f\u8f83\u4e3a\u5bb9\u6613\u7406\u89e3\u7684\uff1a  \n\n\u6211\u4eec\u4e00\u5b9a\u6709\u4e00\u79cd\u6784\u9020\u65b9\u6848\uff0c\u4f7f\u5f97\u7b54\u6848\u4e3a $2 \\times (\\max(w,h)+1)$\uff0c\u5177\u4f53\u5c31\u662f\u957f\u4e3a $\\max(w,h)$\uff0c\u5bbd\u4e3a $1$ \u7684\u7ec6\u957f\u6761\u3002\n\n\u4e8e\u662f\u6700\u4f18\u7684\u7b54\u6848\u77e9\u5f62\u5468\u957f\u4e0d\u5c0f\u4e8e\u8fd9\u4e2a\u503c\uff0c\u90a3\u4e48\u5b83\u4e0d\u53ef\u80fd\u9f9f\u7f29\u5728\u6574\u4e2a\u5927\u77e9\u5f62\u7684\u67d0\u4e2a\u56db\u5206\u4e4b\u4e00\u7684\u89d2\u91cc\u3002\n\n\u4e8e\u662f\u5b83\u4e00\u5b9a\u81f3\u5c11\u7ecf\u8fc7\u6a2a\u5750\u6807\u7684\u4e2d\u4f4d\u7ebf\uff0c\u6216\u7eb5\u5750\u6807\u7684\u4e2d\u4f4d\u7ebf\u3002\n\n\u6211\u4eec\u8ba8\u8bba\u8fd9\u4e24\u79cd\u60c5\u51b5\uff0c\u7b54\u6848\u53d6 $\\max$ \u5373\u53ef\u3002\u8fd9\u91cc\u4e0d\u59a8\u53ea\u8ba8\u8bba\u7ecf\u8fc7\u7eb5\u5750\u6807\u4e2d\u4f4d\u7ebf\u7684\u60c5\u51b5\u3002\n\n\u6211\u4eec\u5728\u6240\u6709\u7684\u70b9\u4e2d\u53d6\u4e24\u4e2a\u70b9\u6765\u9650\u5b9a\u5b50\u77e9\u5f62\u7684\u5de6\u53f3\u8fb9\u754c\uff0c\u8bbe\u4e3a $i,j$\uff0c\u4e0d\u59a8\u8bbe $i < j$\u3002\n\n\u5f53 $j=i+1$ \u65f6\uff0c\u8fd9\u4e24\u4e2a\u70b9\u76f8\u90bb\uff0c\u90a3\u4e48\u4e2d\u95f4\u6ca1\u6709\u4e0a\u4e0b\u754c\u7684\u9650\u5236\uff0c\u53ef\u4ee5\u9876\u6ee1\uff0c\u7b54\u6848\u5c31\u662f $2 \\times (x_j - x_i + h)$\u3002\n\n\u5426\u5219\u8fd9\u4e24\u4e2a\u70b9\u4e2d\u95f4\u8fd8\u6709\u5176\u4ed6\u70b9\uff0c\u7531\u4e8e\u8fd9\u4e24\u4e2a\u70b9\u88ab\u94a6\u5b9a\u4e3a\u5de6\u53f3\u8fb9\u754c\uff0c\u5176\u4ed6\u70b9\u5c31\u53ea\u80fd\u505a\u6a2a\u5411\u7684\u5206\u5272\u3002\u5e76\u4e14\u8fd9\u91cc\u6211\u4eec\u8ba8\u8bba\u7684\u662f\u8d8a\u8fc7\u7eb5\u5750\u6807\u4e2d\u4f4d\u7ebf\u7684\u65b9\u6cd5\uff0c\u4e8e\u662f\u53ef\u4ee5\u77e5\u9053\u7eb5\u5750\u6807\u5728\u4e2d\u4f4d\u7ebf\u4ee5\u4e0a\u7684\u70b9\uff0c\u6211\u4eec\u5c06\u5b83\u7684\u4e0a\u534a\u90e8\u5206\u67d3\u6210\u9ed1\u8272\uff0c\u5426\u5219\u5c06\u5b83\u7684\u4e0b\u534a\u90e8\u5206\u67d3\u6210\u9ed1\u8272\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u5de6\u53f3\u8fb9\u754c $i,j$ \uff0c\u6211\u4eec\u7684\u7b54\u6848\u5c31\u5e94\u8be5\u662f $2 \\times (x_j - x_i + \\min_{i < k < j,2 \\times y_k > h}y_k - \\max_{i < k < j,2 \\times y_k < h}y_k)$\u3002\n\n\u4e8e\u662f\u6211\u4eec\u679a\u4e3e\u5de6\u53f3\u7aef\u70b9\uff0c\u679a\u4e3e\u540c\u65f6\u5904\u7406\u8fd9\u4e2a\u4e0a\u4e0b\u8fb9\u754c\uff0c\u5bb9\u6613\u5f97\u5230\u4e00\u4e2a $O(n^2)$ \u7684\u505a\u6cd5\u3002\n\n\u7136\u540e\u8003\u8651\u5982\u4f55\u4f18\u5316\u8fd9\u4e2a\u505a\u6cd5\u3002\n\n\u6211\u4eec\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a\u53f3\u8fb9\u754c\uff0c\u5982\u4f55\u9009\u62e9\u5176\u5de6\u8fb9\u754c\u3002\n\n\u89c2\u5bdf\u4e0a\u8fb9\u7edf\u8ba1\u7b54\u6848\u7684\u5f0f\u5b50\uff0c\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u53ef\u4ee5\u628a\u5de6\u8fb9\u754c\u62bd\u8c61\u6210\u4e00\u4e2a\u6a2a\u5750\u6807\u4e3a $i$,\u7eb5\u5750\u6807\u4e3a $\\max_{i < k < j,2 \\times y_k < h}y_k) \\sim \\min_{i < k < j,2 \\times y_k > h}y_k$ \u7684\u7ebf\u6bb5\u3002\n\n\u8003\u5bdf\u8fd9\u4e2a\u7ebf\u6bb5\u7684\u53d8\u5316\u8d8b\u52bf\uff0c\u53d1\u73b0\u968f\u7740 $i$ \u5355\u8c03\u9012\u589e\uff0c\u7ebf\u6bb5\u7684\u4e0a\u7aef\u70b9\u5355\u8c03\u5347\u9ad8\uff0c\u4e0b\u7aef\u70b9\u5355\u8c03\u964d\u4f4e\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u5355\u8c03\u6808\u6765\u7ef4\u62a4\u5176\u4e0a\u4e0b\u7aef\u70b9\u7684\u53d8\u5316\u3002\n\n\u7136\u540e\u53d1\u73b0\u8fd9\u65f6\u7684\u7b54\u6848\u5c31\u662f $2 \\times \\max(x_j - x_i + len_i)$\uff0c\u5176\u4e2d $len_i$ \u8868\u793a\u5728\u7b2c $i$ \u4e2a\u7279\u6b8a\u70b9\u4f4d\u7f6e\u7684\u5de6\u8fb9\u754c\u7ebf\u6bb5\u3002\n\n$x_j$ \u7684\u53d6\u503c\u662f\u4e0d\u53d8\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4 $len_i - x_i$ \u7684\u6700\u5927\u503c\uff0c\u4e8e\u662f\u53ef\u4ee5\u8fdb\u884c\u7b80\u5355\u7684\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u503c\uff0c\u8981\u6c42\u80fd\u8fdb\u884c\u533a\u95f4\u52a0\uff0c\u539f\u56e0\u662f\u7edf\u8ba1 $len_i$ \u65f6\u6211\u4eec\u9009\u62e9\u5148\u5bf9\u8fd9\u4e00\u6bb5\u533a\u95f4\u52a0\u4e0a\u4e0a\u7aef\u70b9\uff0c\u518d\u51cf\u53bb\u4e0b\u7aef\u70b9\uff0c\u8fd9\u6837\u53ef\u4ee5\u66f4\u4e3a\u7b80\u4fbf\u5730\u5904\u7406\u4e0a\u4e0b\u7aef\u70b9\u3002\n\n\u5230\u8fd9\u91cc\u5c31\u8bf4\u5b8c\u4e86\u6574\u9053\u9898\u7684\u601d\u8def\uff0c\u4f46\u662f\u5b9e\u73b0\u65f6\u7684\u4e00\u4e9b\u7ec6\u8282\u5374\u4e0d\u4fbf\u4e8e\u53e3\u8ff0\uff0c\u4e8e\u662f\u653e\u5728\u4ee3\u7801\u6ce8\u91ca\u4e2d\u3002\n\n[\u4ee3\u7801](https://www.luogu.com.cn/paste/yia2xxf9)",
        "postTime": 1667210142,
        "uid": 581564,
        "name": "Pozhu",
        "ccfLevel": 0,
        "title": "[ARC063F] \u3059\u306c\u3051\u541b\u306e\u5857\u308a\u7d75 2"
    },
    {
        "content": "## \u5206\u6790\n\n\u76f8\u5f53\u4e8e\u6c42\u4e2d\u95f4\u6ca1\u6709\u70b9\u7684\u77e9\u5f62\u7684\u6700\u5927\u5468\u957f\u3002\n\n\u8003\u8651\u5206\u6cbb\uff0c\u6c42\u8de8\u8d8a\u4e2d\u7ebf\u7684\u8d21\u732e\u3002\u5047\u8bbe\u6211\u4eec\u8981\u6c42\u5de6\u53f3\u8de8\u8d8a $x=m$ \u7684\u8d21\u732e\uff0c\u8003\u8651\u679a\u4e3e\u77e9\u5f62\u7684\u4e0b\u8fb9\u754c $y_d$ \u548c\u4e0a\u8fb9\u754c $y_u$\uff0c\u90a3\u4e48\u53ea\u6709 $y_u\\in[y_d,y_u]$ \u7684\u70b9\u7684 $u$ \u53ef\u80fd\u6210\u4e3a\u8be5\u77e9\u5f62\u7684\u5de6\u53f3\u7aef\u70b9\u3002\n\n\u663e\u7136\uff0c\u8fd9\u6837\u7684\u5de6\u53f3\u7aef\u70b9\u5206\u522b\u662f $x=m$ \u5de6\u4fa7\u6700\u9760\u8fd1\u4e2d\u7ebf\u7684\u70b9\u548c\u5176\u53f3\u4fa7\u6700\u9760\u8fd1\u4e2d\u7ebf\u7684\u70b9\u3002\u4e8e\u662f\u6211\u4eec\u6709\u4e86 $\\mathcal O(n^2)$ \u7684\u66b4\u529b\u505a\u6cd5\uff0c\u518d\u8003\u8651\u56fa\u5b9a $y_d$\uff0c\u5219\u968f\u7740 $y_u$ \u7684\u589e\u5927\uff0c\u5408\u6cd5\u7684\u5de6\u53f3\u7aef\u70b9\u5b9e\u9645\u4e0a\u662f\u4e00\u7cfb\u5217\u540e\u7f00\u6a2a\u5750\u6807\u6700\u5c0f / \u5927\u503c\u3002\n\n\u4e8e\u662f\u5728\u679a\u4e3e $y_d$ \u7684\u8fc7\u7a0b\u4e2d\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u4e0b\u6807 $i$ \u8868\u793a\u5f53 $y_u$ \u53d6\u5230 $i$ \u65f6\uff0c\u5408\u6cd5\u7684\u77e9\u5f62\u7684\u5468\u957f\u3002\u7136\u540e\u518d\u5bf9\u5de6\u53f3\u4e24\u4fa7\u5206\u522b\u5f00\u4e00\u4e2a\u5355\u8c03\u6808\u6765\u7ef4\u62a4\u540e\u7f00\u6700\u5c0f / \u5927\u503c\uff0c\u6bcf\u6b21\u52a0\u5165\u7684\u65f6\u5019\u5f39\u6808\uff0c\u6ce8\u610f\u5230\u8d21\u732e\u7684\u53d8\u5316\u5b9e\u9645\u4e0a\u76f8\u5f53\u4e8e\u533a\u95f4\u51cf\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u79bb\u6563\u5316\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u505a\u5230 $\\mathcal O(n\\log^2 n)$\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u5230\u5b58\u5728\u4e00\u4e2a\u5fc5\u7136\u53ef\u884c\u7684\u65b9\u6848\u662f\u653e\u4e00\u4e2a $1\\times w$ \u6216 $h\\times 1$ \u7684\u77e9\u5f62\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230\u6240\u6709\u5468\u957f\u5927\u4e8e $2\\max(w,h)+2$ \u7684\u7b54\u6848\u5c31\u597d\u4e86\u3002\n\n\u7136\u540e\u518d\u6ce8\u610f\u5230\u8fd9\u6837\u7684\u77e9\u5f62\u5fc5\u7136\u8de8\u8fc7 $y=h/2$ \u548c $x=w/2$ \u4e2d\u7684\u4efb\u610f\u4e00\u6761\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u679a\u4e3e\u8fd9\u4e24\u6761\u4e2d\u7ebf\u518d\u505a\u4ee5\u4e0a\u64cd\u4f5c\uff0c\u5c31\u53ef\u4ee5\u5728 $\\mathcal O(n\\log n)$ \u7684\u590d\u6742\u5ea6\u5185\u5b8c\u6210\u672c\u9898\u3002\n\n## \u4ee3\u7801\n\n```cpp\nconst int N = 6e5 + 5;\n\nint w, h, n, c, d[N]; pii P[N];\n\nstruct Seg {\n\tint seg[N << 3], tag[N << 3];\n\tvoid Init() { memset(seg, 0, sizeof(seg)); memset(tag, 0, sizeof(tag)); }\n\tvoid Update(int o) { seg[o] = std::max(seg[o << 1], seg[o << 1 | 1]); }\n\tvoid PushTag(int o) {\n\t\tif(tag[o]) {\n\t\t\tseg[o << 1] += tag[o]; seg[o << 1 | 1] += tag[o];\n\t\t\ttag[o << 1] += tag[o]; tag[o << 1 | 1] += tag[o];\n\t\t\ttag[o] = 0;\n\t\t}\n\t}\n\tvoid Modify(int o, int l, int r, int ql, int qr, int v) {\n\t\tif(ql <= l && r <= qr) tag[o] += v, seg[o] += v;\n\t\telse {\n\t\t\tint mid = (l + r) >> 1;\n\t\t\tPushTag(o);\n\t\t\tif(ql <= mid) Modify(o << 1, l, mid, ql, qr, v);\n\t\t\tif(qr > mid) Modify(o << 1 | 1, mid + 1, r, ql, qr, v);\n\t\t\tUpdate(o);\n\t\t}\n\t}\n\tint Query(int o, int l, int r, int ql, int qr) {\n\t\tif(ql <= l && r <= qr) return seg[o];\n\t\tint mid = (l + r) >> 1, ret = 0;\n\t\tPushTag(o);\n\t\tif(ql <= mid) ret = std::max(ret, Query(o << 1, l, mid, ql, qr));\n\t\tif(qr > mid) ret = std::max(ret, Query(o << 1 | 1, mid + 1, r, ql, qr));\n\t\treturn ret;\n\t}\n} S;\n\nint top_l, top_r; pii st_l[N], st_r[N];\nint Calc() {\n\tS.Init(); top_l = top_r = 0;\n\tstd::sort(P + 1, P + n + 1, [](const pii &x, const pii &y) {\n\t\treturn x.se > y.se;\n\t});\n\tint ret = 0;\n\tS.Modify(1, 1, c, 1, h, d[w]); P[0].se = h;\n\tst_l[++top_l] = mkp(1, h); st_r[++top_r] = mkp(w, h);\n\tfor(int i = 1; i <= n; ++i) {\n\t\tint X = P[i].fi, Y = P[i].se;\n\t\tS.Modify(1, 1, c, Y + 1, h, d[P[i - 1].se] - d[Y]);\n\t\tret = std::max(ret, S.Query(1, 1, c, Y + 1, h));\n\t\tif(d[X] <= d[w] / 2) {\n\t\t\tS.Modify(1, 1, c, Y + 1, top_l ? st_l[top_l].se : h, -d[X]);\n\t\t\tfor(; top_l && st_l[top_l].fi < X; --top_l) {\n\t\t\t\tint o_X = st_l[top_l].fi, o_Y = st_l[top_l].se;\n\t\t\t\tS.Modify(1, 1, c, o_Y + 1, top_l > 1 ? st_l[top_l - 1].se : h, d[o_X] - d[X]);\n\t\t\t}\n\t\t\tst_l[++top_l] = P[i];\n\t\t} else {\n\t\t\tS.Modify(1, 1, c, Y + 1, top_r ? st_r[top_r].se : h, d[X] - d[w]);\n\t\t\tfor(; top_r && st_r[top_r].fi > X; --top_r) {\n\t\t\t\tint o_X = st_r[top_r].fi, o_Y = st_r[top_r].se;\n\t\t\t\tS.Modify(1, 1, c, o_Y + 1, top_r > 1 ? st_r[top_r - 1].se : h, d[X] - d[o_X]);\n\t\t\t}\n\t\t\tst_r[++top_r] = P[i];\n\t\t}\n\t}\n\tS.Modify(1, 1, c, 2, h, d[P[n].se]);\n\tret = std::max(ret, S.Query(1, 1, c, 2, h));\n\treturn ret;\n}\n\nint main() {\n\trd(w, h, n);\n\tfor(int i = 1; i <= n; ++i) {\n\t\tint x, y; rd(x, y);\n\t\tP[i] = mkp(x, y);\n\t\td[++c] = x; d[++c] = y;\n\t}\n\td[++c] = 0; d[++c] = w; d[++c] = h;\n\tstd::sort(d + 1, d + c + 1);\n\tc = std::unique(d + 1, d + c + 1) - d - 1;\n\tfor(int i = 1; i <= n; ++i) {\n\t\tP[i].fi = std::lower_bound(d + 1, d + c + 1, P[i].fi) - d;\n\t\tP[i].se = std::lower_bound(d + 1, d + c + 1, P[i].se) - d;\n\t}\n\tw = std::lower_bound(d + 1, d + c + 1, w) - d;\n\th = std::lower_bound(d + 1, d + c + 1, h) - d;\n\tint ans = 0;\n\tans = std::max(ans, Calc());\n\tstd::swap(w, h);\n\tfor(int i = 1; i <= n; ++i)\n\t\tstd::swap(P[i].fi, P[i].se);\n\tans = std::max(ans, Calc());\n\tprintf(\"%d\\n\", ans << 1);\n\treturn 0;\n}\n```\n",
        "postTime": 1617027539,
        "uid": 34238,
        "name": "zhylj",
        "ccfLevel": 9,
        "title": "\u300cARC 063D\u300dSnuke's Coloring 2"
    },
    {
        "content": "\u7b54\u6848\u7684\u4e0b\u9650\u662f $2\\times \\max(W,H)$\uff08\u5728\u67d0\u4e2a\u4f4d\u7f6e\u9009\u6210\u957f\u6761\u7684\u5373\u53ef\uff09\u3002\u6240\u4ee5\u82e5\u77e9\u5f62\u4e0d\u8fc7\u67d0\u4e2a\u4e2d\u7ebf\uff0c\u90a3\u4e48\u6240\u5f97\u7ed3\u679c $<W+H\\le 2\\times \\max(W,H)$\u3002\u6240\u4ee5\u77e9\u5f62\u4e00\u5b9a\u8fc7 $x$ \u8f74\u6216 $y$ \u8f74\u7684\u4e2d\u7ebf\u3002\n\n\u7136\u540e\uff0c\u6211\u4eec\u5047\u8bbe\u662f\u8fc7 $x$ \u8f74\u4e2d\u7ebf\uff0c\u4e8e\u662f\u6bcf\u4e2a\u70b9\u5c31\u53ef\u4ee5\u56fa\u5b9a\u6210\u4e00\u4e2a $y$ \u7684\u9650\u5236\uff08\u6bd4\u5982\u82e5 $x<\\frac{W}{2}$ \u5c31\u7b49\u4ef7\u4e8e\u9650\u5236\u533a\u95f4 $[x,H]$\uff09\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u5bf9 $y$ \u6392\u5e8f\u540e\u8fdb\u884c\u626b\u63cf\u7ebf\u3002\n\n\uff08\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u6362\u4e00\u4e0b $x,y$\uff09\u6cbf\u7740 $y=H/2$ \u4ece\u5de6\u5f80\u53f3\u626b\u63cf\u7ebf\uff0c\u5e0c\u671b\u80fd\u7b97\u51fa\u6bcf\u4e2a\u70b9\u5728 $y$ \u4e0a\u7684\u6700\u5927\u957f\u5ea6\uff0c\u5e76\u4e14\u6c42\u51fa\u4ee5\u5176\u4f5c\u4e3a\u77e9\u5f62\u7684\u53f3\u8fb9\u7684\u7b54\u6848\u3002\u6b64\u65f6\u771f\u6b63\u53f3\u8fb9\u957f\u5ea6\u7684\u7b54\u6848\u5e94\u8be5\u662f\u5de6\u8fb9\u5230\u53f3\u8fb9\u8fd9\u6bb5\u533a\u95f4\u4e2d\u7684\u4e00\u4e2a\u533a\u95f4\u6700\u5c0f\u503c\uff08\u4e5f\u5c31\u662f\u5f53\u524d\u65f6\u95f4\u7684\u540e\u7f00\u6700\u5c0f\u503c\uff09\u3002\u4e8e\u662f\u7528\u4e00\u4e2a\u5355\u8c03\u6808\u5957\u7ebf\u6bb5\u6811\uff1a\u5355\u8c03\u6808\u7ef4\u62a4\u8fd9\u4e2a\u6700\u5c0f\u503c\uff0c\u7136\u540e\u5355\u8c03\u6808\u6bcf\u6b21\u6539\u52a8\u7684\u65f6\u5019\u4f1a\u5b58\u5728\u4e00\u4e2a\u533a\u95f4\u4f7f\u5f97\u5176\u4f5c\u4e3a\u5de6\u8fb9\u7684\u7b54\u6848\u53d1\u751f\u53d8\u5316\uff0c\u8fd9\u4e2a\u7528\u7ebf\u6bb5\u6811\u64cd\u4f5c\uff0c\u6700\u540e\u67e5\u8be2\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u505a\u4e24\u6b21\u7684\u8bdd\uff0c\u6bcf\u4e2a\u70b9\u4ea4\u6362\u6a2a\u7eb5\u5750\u6807\u5373\u53ef\u8c03\u7528\u76f8\u540c\u51fd\u6570\u3002\n\n\u8981\u6ce8\u610f\u7279\u5224\u4e0a\u8ff0\u201c\u4e00\u6761\u7ebf\u201d\u7684\u7279\u6b8a\u60c5\u51b5\uff08\u5373\u5bf9\u4e8e\u76f8\u90bb\u4e24\u4e2a\u70b9\uff0c\u5bbd\u5ea6\u4e3a\u4e24\u4e2a\u70b9\u95f4 $x_i-x_{i-1}$\uff0c\u957f\u4e3a $H$ \u8fd9\u79cd\u7684\u60c5\u51b5\uff09\u3002\n\n```cpp\nconst int N=1e6+9;\nint n,w,h,ans;\npii a[N];\n\nnamespace SegT {\n    int ls[N],rs[N],tot=1,mx[N],tg[N];\n    void build(int p,int l,int r) {\n        if(l==r) {mx[p]=tg[p]=0; return;} int mid=l+r>>1;\n        build(ls[p]=++tot,l,mid), build(rs[p]=++tot,mid+1,r);\n        mx[p]=tg[p]=0;\n    }\n    void pushdown(int p) {\n        mx[ls[p]]+=tg[p], mx[rs[p]]+=tg[p];\n        tg[ls[p]]+=tg[p], tg[rs[p]]+=tg[p];\n        tg[p]=0;\n    }\n    void add(int p,int l,int r,int x,int y,int k) {\n        if(x>y) return;\n        if(l==x&&r==y) {mx[p]+=k, tg[p]+=k; return;}\n        int mid=l+r>>1; if(tg[p]) pushdown(p);\n        if(y<=mid) add(ls[p],l,mid,x,y,k);\n        else if(x>mid) add(rs[p],mid+1,r,x,y,k);\n        else add(ls[p],l,mid,x,mid,k), add(rs[p],mid+1,r,mid+1,y,k);\n        mx[p]=max(mx[ls[p]],mx[rs[p]]);\n    }\n    int qry(int p,int l,int r,int x,int y) {\n        if(l==x&&r==y) return mx[p];\n        int mid=l+r>>1; if(tg[p]) pushdown(p);\n        if(y<=mid) return qry(ls[p],l,mid,x,y);\n        else if(x>mid) return qry(rs[p],mid+1,r,x,y);\n        else return max(qry(ls[p],l,mid,x,mid),qry(rs[p],mid+1,r,mid+1,y));\n    }\n}\n\nint st1[N],st2[N],top1,top2,cnt,pos[N],w1[N],w2[N];\n\nvoid mdf(int *st,int &top,int *w,int c) {\n    while(top>0&&w[st[top]]>w[c]) {\n        SegT::add(1,1,n,st[top-1]+1,st[top],w[c]-w[st[top]]);\n        top--;\n    }\n    st[++top]=c;\n}\nint work(int res=0) {\n    SegT::tot=1; SegT::build(1,1,n); cnt=0;\n    sort(a+1,a+n+1); top1=top2=0;\n    rep(i,1,n) res=max(res,h+a[i].fi-a[i-1].fi);\n    for(int i=1,j;i<=n;i++) {\n        ++cnt; pos[cnt]=a[i].fi, w1[cnt]=h-h/2, w2[cnt]=h/2;\n        SegT::add(1,1,n,1,cnt,pos[cnt]-pos[cnt-1]);\n        for(j=i;j<=n&&a[j].fi==a[i].fi;j++) {\n            if(a[j].se>h/2) w1[cnt]=min(w1[cnt],a[j].se-h/2);\n            else w2[cnt]=min(w2[cnt],h/2-a[j].se);\n        }\n        i=j-1;\n        SegT::add(1,1,n,cnt,cnt,w1[cnt]+w2[cnt]);\n        res=max(res,SegT::qry(1,1,n,1,cnt));\n        mdf(st1,top1,w1,cnt), mdf(st2,top2,w2,cnt); \n        res=max(res,SegT::qry(1,1,n,1,cnt));\n    } return res;\n}\n\nint main() {\n    w=read(), h=read(), n=read();\n    rep(i,1,n) a[i].fi=read(), a[i].se=read();\n    a[++n]=pii(0,0), a[++n]=pii(0,h), a[++n]=pii(w,0), a[++n]=pii(w,h); \n    ans=work();\n    swap(w,h);  \n    rep(i,1,n) swap(a[i].fi,a[i].se);\n    ans=max(ans,work());\n    printf(\"%d\\n\",ans*2);\n    return 0;\n}\n```",
        "postTime": 1643200813,
        "uid": 180652,
        "name": "_lgswdn",
        "ccfLevel": 0,
        "title": "ARC063D"
    },
    {
        "content": "\u8fd9\u9053\u9898emmm\u662f\u4e0d\u662f\u53eb\u4e8c\u5206\uff1f\uff1f\uff1f  \n\uff08\u53cd\u6b63\u4e8c\u7ef4\u6c34\u4e00\u6c34\u5c31\u8fc7\u53bb\u4e86\uff09  \n\u5206\u6210\u56db\u4e2a\u5757\u5b89\u6392\u4e00\u4e0b\u5c31\u597d\u4e86  \n\uff08\u8bed\u8a00&\u53d9\u8ff0\u53ef\u80fd\u6709\u70b9\u7cdf\uff09  \n\u8be6\u89c1\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=300005;\nint a[N],b[N],q[N],n,w,h,Y,ans;\nstruct node{int x,y;}p[N];\nbool cmp(node a,node b){return a.x<b.x;}\nvoid solve(int l,int r){\n\tif (l==r) return;\n\tint mid=(l+r)>>1;\n\tfor (int i=mid,y1=0,y2=h;i>=l;i--){\n\t\ta[i]=y1;b[i]=y2;\n\t\tif (p[i].y>=Y) y2=min(y2,p[i].y);\n\t\tif (p[i].y<=Y) y1=max(y1,p[i].y);\n\t}\n\tfor (int i=mid+1,y1=0,y2=h;i<=r;i++){\n\t\ta[i]=y1;b[i]=y2;\n\t\tif (p[i].y>=Y) y2=min(y2,p[i].y);\n\t\tif (p[i].y<=Y) y1=max(y1,p[i].y);\n\t}\n\tfor (int i=mid,j=mid+1,h=1,t=0;i>=l;i--){\n\t\tfor (;j<=r && a[j]<=a[i];j++){\n\t\t\tfor (;h<=t && b[q[t]]+p[q[t]].x<=b[j]+p[j].x;t--);\n\t\t\tq[++t]=j;\n\t\t}\n\t\tfor (;h<t && b[i]+p[q[h]].x<=b[q[h+1]]+p[q[h+1]].x;h++);\n\t\tans=max(ans,(p[q[h]].x-p[i].x+min(b[i],b[q[h]])-a[i])*2);\n\t}\n\tfor (int i=mid+1,j=mid,h=1,t=0;i<=r;i++){\n\t\tfor (;j>=l && a[j]<=a[i];j--){\n\t\t\tfor (;h<=t && b[q[t]]-p[q[t]].x<=b[j]-p[j].x;t--);\n\t\t\tq[++t]=j;\n\t\t}\n\t\tfor (;h<t && b[i]-p[q[h]].x<=b[q[h+1]]-p[q[h+1]].x;h++);\n\t\tans=max(ans,(p[i].x-p[q[h]].x+min(b[i],b[q[h]])-a[i])*2);\n\t}\n\tsolve(l,mid);solve(mid+1,r);\n}\nvoid work(){\n\tsort(p+1,p+n+1,cmp);\n\tY=h/2;\n\tp[0].x=0;p[n+1].x=w;\n\tp[0].y=p[n+1].y=Y;\n\tsolve(0,n+1);\n}\nint main(){\n\tscanf(\"%d%d%d\",&w,&h,&n);\n\tfor (int i=1;i<=n;i++) scanf(\"%d%d\",&p[i].x,&p[i].y);\n\tans=max(h,w)*2+2;\n\twork();\n\tswap(w,h);\n\tfor (int i=1;i<=n;i++) swap(p[i].x,p[i].y);\n\twork();\n\tprintf(\"%d\\n\",ans);\n}\n\n```\n",
        "postTime": 1552311285,
        "uid": 127191,
        "name": "Doveqise",
        "ccfLevel": 6,
        "title": "AT2149 \u6211\u7684\u79c1\u4eba\u7ed8\u753b\u4e662 \u9898\u89e3"
    }
]