[
    {
        "content": "## \u7ed9\u5927\u5bb6\u63d0\u4f9b\u4e00\u79cdDFS\u5224\u8d1f\u73af\u7684\u65b9\u5f0f\n\n##### \u5dee\u5206\u7ea6\u675f\u5efa\u56fe\u7684\u8fc7\u7a0b\u89c1\u697c\u4e0b\u5927\u4f6c\uff0c\u8fd9\u91cc\u4e3b\u8981\u662fdfs\n\n#### \u6211\u4eec\u5148\u7ed9\u8d77\u70b9\u6253\u4e00\u4e2avis\u6807\u8bb0\uff0c\u8868\u793a\u5728\u672c\u6b21DFS\u4e2d\u5b83\u5df2\u7ecf\u88ab\u8bbf\u95ee\u8fc7\uff0c\u5982\u679c\u513f\u5b50\u8282\u70b9\u7684\u6700\u77ed\u8def\u7684\u503c(\u4e0b\u9762\u7684d\u6570\u7ec4)\u5c0f\u4e8e\u7236\u8282\u70b9\u7684\u503c\u52a0\u8fb9\u6743\uff0c\u66f4\u65b0\u8282\u70b9\u3002\n\n#### \u5982\u679c\u65b0\u8282\u70b9\u6ca1\u6709\u8bbf\u95ee\u5230\u5df2\u7ecfvis\u7684\u70b9\uff0c\u90a3\u4e48\u66f4\u65b0\u70b9\u7684\u6700\u77ed\u8def\u6743\u503c\uff0c\u7ee7\u7eedDFS\u3002\u5426\u5219\u8fd4\u56detrue(\u6709\u8d1f\u73af)\u3002\n\n#### \u5982\u679c\u5728\u7ee7\u7eed\u4e0b\u4e00\u5c42DFS\u65f6\u8fd4\u56de\u503c\u4e3atrue\uff0c\u90a3\u4e48\u8fd9\u4e00\u5c42\u4e5f\u8fd4\u56detrue\u3002\n\n#### \u5982\u679c\u6ca1\u6709\u8d1f\u73af\uff0c\u90a3\u4e48\u5728\u51fd\u6570\u7684\u6700\u540e\u628avis\u6807\u8bb0\u64a4\u9664\u5e76\u8fd4\u56defalse(\u6ca1\u6709\u8d1f\u73af)\n\n## \u9700\u8981\u6ce8\u610f\u7684\u662f\n\n#### \u56fe\u53ef\u80fd\u4f1a\u5b58\u5728\u591a\u4e2a\u8054\u901a\u5757\uff0c\u56e0\u6b64\u8981\u7528\u4e00\u4e2ause\u6570\u7ec4\u6765\u6807\u8bb0\u662f\u5426\u8d70\u8fc7\uff0c\u4e0d\u540c\u4e8evis\uff0cuse\u4e0d\u80fd\u64a4\u9664\uff0c\u7528\u4e00\u6b21\u5faa\u73af\uff0c\u6ca1\u6709use\u6807\u8bb0\u5c31\u4ee5\u5b83\u4e3a\u8d77\u70b9dfs\n\n##### code:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nlong long d[100005];\nint n,m;\nbool vis[100005],use[100005];\nvector<int>v[100005];\nvector<int>e[100005];\nvoid read(int& x)\n{\n\tchar c=getchar();\n\tx=0;\n\twhile(c<'0'||c>'9')c=getchar();\n\twhile(c>='0'&&c<='9')\n\t{\n\t\tx=x*10+c-'0';\n\t\tc=getchar();\n\t}\n}//\u5feb\u8bfb\nbool dfs(int fa)\n{\n\tvis[fa]=1;\n\tuse[fa]=1;\n\tfor(int i=0;i<v[fa].size();i++)\n\t{\n\t\tint y=v[fa][i];\n\t\tint z=e[fa][i];\n\t\tif(d[y]>d[fa]+z)//\u5982\u679c\u53ef\u4ee5\u66f4\u65b0\n\t\t{\n\t\t\tif(vis[y])return 1;//\u5982\u679c\u65b0\u70b9\u5df2\u7ecf\u88ab\u8bbf\u95ee\uff0c\u8fd4\u56de1\n\t\t\td[y]=d[fa]+z;//\u66f4\u65b0\u70b9\u6743\n\t\t\tif(dfs(y))return 1;//\u5982\u679c\u5728\u7ee7\u7eed\u4e0b\u4e00\u5c42dfs\u65f6\u8fd4\u56de\u4e860,\u8fd9\u4e00\u5c42\u4e5f\u8fd4\u56de0\n\t\t}\n\t}\n\tvis[fa]=0;\u64a4\u9664vis\u6807\u8bb0\n\treturn 0;\n}\nint main()\n{\n\tread(n);\n\tread(m);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\td[i]=200000000000ll;\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x,y,z;\n\t\tread(x);\n\t\tread(y);\n\t\tread(z);\n\t\tv[x].push_back(y);\n\t\te[x].push_back(z);\n\t\tv[y].push_back(x);\n\t\te[y].push_back(-z);\n\t}\n\tbool ok=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(!use[i])//\u6ca1\u8d70\u8fc7\u5c31\u8d70\n\t\t{\n\t\t\td[i]=0;\n\t\t\tif(dfs(i))\n\t\t\t{\n\t\t\t\tok=1;\n\t\t\t}\n\t\t}\n\t}\n\tif(ok)printf(\"No\\n\");\n\telse printf(\"Yes\\n\");\n\treturn 0;\n}\n```",
        "postTime": 1533858799,
        "uid": 68207,
        "name": "CreeperLordVader",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 AT3882 \u3010People on a Line\u3011"
    },
    {
        "content": "\u5dee\u5206\u7ea6\u675f\uff0c\u88f8\u7684\u6a21\u677f\u3002\n\n\u4f7f\u7528SPFA\u8dd1\u4e00\u904d\u6700\u77ed\u8def\uff0c\u5982\u679c\u6ca1\u6709\u8bbf\u95ee\u8fc7\u4e00\u4e2a\u8282\u70b9\uff0c\u5219\u8bbf\u95ee\u8be5\u8282\u70b9\uff0c\u8bb0\u5f55\u8ddd\u79bb\u5e76\u4e14\u5c06\u8282\u70b9\u5165\u961f\u3002\n\n\u5f53\u8bbf\u95ee\u5230\u4e00\u4e2a\u8bbf\u95ee\u8fc7\u7684\u8282\u70b9\u65f6\uff0c\u82e5\u5f53\u524d\u8ddd\u79bb\u4e0d\u7b26\u5408\u4e0a\u6b21\u7684\u8ddd\u79bb\uff0c\u5219\u4e0d\u5408\u6cd5return false\uff0c\u5426\u5219\u7ee7\u7eed\u8bbf\u95ee\u3002\n\n\u82e5\u80fd\u987a\u5229\u8bbf\u95ee\u6240\u6709\u8282\u70b9\uff0c\u5219\u8fd4\u56detrue.\n\n\u56e0\u4e3a\u6ca1\u6709\u9650\u5236\u7684\u8303\u56f4\uff0c\u751a\u81f3\u5dee\u5206\u7ea6\u675f\u90fd\u4e0d\u9700\u8981\uff0c\u66b4\u529b\u641c\u7d22\u5373\u53ef\u3002\n\n\u8fd9\u91cc\u5224\u4e86\u4e00\u4e0b\u5982\u679c\u5750\u6807\u4e4b\u5dee > $10^9$ \u5219\u4e0d\u5408\u6cd5\uff0c\u7136\u800c\u5e76\u6ca1\u6709\u8fd9\u79cd\u6570\u636e\u3002\n\n\u8fd9\u91cc\u53ea\u7ed9\u51fa\u5dee\u5206\u7ea6\u675f\u7684\u5199\u6cd5\uff1a\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <queue>\n \nusing namespace std;\n \nstruct edge\n{\n    int v,w,nxt;\n}e[400050];\n \nint head[100050],ecnt;\n \nvoid adde(int u,int v,int w)\n{\n    e[++ecnt].v = v;\n    e[ecnt].w = w;\n    e[ecnt].nxt = head[u];\n    head[u] = ecnt;\n}\n \nint N,M;\nint l[200050],r[200050];\nint d[200050];\nlong long dist[100005];\nqueue<int> que;\nbool vis[100050],inq[100050];\n \nbool spfa(int st)\n{\n    que.push(st);\n    inq[st] = true;\n    dist[st] = 0;\n    long long curmax = 0,curmin = 0;\n    while(!que.empty())\n    {\n        int u = que.front();\n        que.pop();\n        for(int i = head[u];i;i = e[i].nxt)\n        {\n            int v = e[i].v;\n            if(dist[v] == 12345678987654321)\n            {\n                dist[v] = dist[u] + e[i].w;\n                curmax = max(curmax,dist[v]);\n                curmin = min(curmin,dist[v]);\n                if(curmax - curmin > 1000000000)\n                    return false;\n                vis[v] = 1;\n                if(!inq[v])\n                    que.push(v);\n            }\n            else if(dist[v] != dist[u] + e[i].w)\n                return false;\n        }\n        inq[u] = false;\n    }\n    return true;\n}\n \nint main()\n{\n    for(int i = 1;i <= 100000; ++ i)\n        dist[i] = 12345678987654321;\n    scanf(\"%d%d\",&N,&M);\n    for(int i = 1;i <= M; ++ i)\n    {\n        scanf(\"%d%d%d\",&l[i],&r[i],&d[i]);\n        adde(l[i],r[i],d[i]);\n        adde(r[i],l[i],-d[i]);\n    }\n    for(int i = 1;i <= N; ++ i)\n    {\n        if(!vis[i])\n        {\n            vis[i] = 1;bool l = spfa(i);\n            if(!l)\n            {\n                printf(\"No\\n\");\n                return 0;\n            }\n        }\n    }\n    printf(\"Yes\\n\");\n    return 0;\n}\n```",
        "postTime": 1521168991,
        "uid": 25308,
        "name": "Wen_kr",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 AT3882 \u3010People on a Line\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5176\u5b9e\u53ea\u662f\u4e00\u9053\u57fa\u7840\u7684\u5e26\u6743\u5e76\u67e5\u96c6\uff0c\u7528\u4e0d\u7740\u5dee\u5206\u7ea6\u675f\n\n\u540c\u4e00\u822c\u5e76\u67e5\u96c6\u4e00\u6837\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a$find(x)$\u51fd\u6570\uff0c\u4f46\u4e0d\u540c\u7684\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u8bb0\u5f55$fa[x]$\u7684\u540c\u65f6\u518d\u8bb0\u5f55\u4e00\u4e2a$dis[x]$\u6570\u7ec4\uff0c\u8868\u793ax\u81f3\u5176\u7956\u5148\u7684\u8ddd\u79bb\u3002\n\n$find(x)$ \u5199\u6cd5\u5982\u4e0b\n\n```\nint find(int x){\n    if(fa[x]!=x){\n        int nf=fa[x];\n        fa[x]=find(fa[x]);\n        dis[x]+=dis[nf];\n    }\n    return fa[x];\n}\n```\n\n\u5f53\u8bfb\u5165\u4e00\u7ec4$(l,r,d)$\u65f6\uff0c\u4e5f\u8981\u66f4\u65b0\u5176\u81f3\u7956\u5148\u7684\u503c\uff0c\u5e76\u8fdb\u884c\u5224\u65ad\u3002($ok==0$\u8868\u793a\u4e0d\u884c)\n\u4ee3\u7801\uff1a\n\n```\nint rl=find(l),rr=find(r);\n        if(rl==rr&&dis[l]-dis[r]!=d)\n            ok=0;\n        if(rl!=rr){\n            fa[rl]=rr;\n            dis[rl]=d+dis[r]-dis[l];\n        }\n```\n        \n\u7efc\u5408\u8d77\u6765\uff0c\u5373\u53efAC\n\n```\n#include<cstdio>\nint n,m,fa[100005],dis[100005];\nbool ok=1;\nint find(int x){\n    if(fa[x]!=x){\n        int nf=fa[x];\n        fa[x]=find(fa[x]);\n        dis[x]+=dis[nf];\n    }\n    return fa[x];\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n        fa[i]=i;\n    for(int i=1;i<=m;i++){\n        int l,r,d;\n        scanf(\"%d%d%d\",&l,&r,&d);\n        int rl=find(l),rr=find(r);\n        if(rl==rr&&dis[l]-dis[r]!=d)\n            ok=0;\n        if(rl!=rr){\n            fa[rl]=rr;\n            dis[rl]=d+dis[r]-dis[l];\n        }\n    }\n    if(ok)printf(\"Yes\");\n    else printf(\"No\");\n    return 0;\n} \n```",
        "postTime": 1558360258,
        "uid": 87899,
        "name": "Doraven",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT3882 \u3010People on a Line\u3011"
    },
    {
        "content": "### [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/solution/AT3882)\n___\n### \u601d\u8def\n\n\u8fd9\u9053\u9898\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u7eaf Dfs\u3002\n\n\u5148\u5efa\u56fe\uff0c\u8868\u793a $l$ \u5728 $r$ \u7684\u5de6\u8fb9\uff0c\u8ddd\u79bb\u4e3a $d$\uff0c$r$ \u5728 $l$ \u7684\u53f3\u8fb9\uff0c\u8ddd\u79bb\u4e3a $-d$\u3002\n\n\u518d\u5f00\u4e00\u4e2a $f$ \u6570\u7ec4\uff0c\u53ea\u8981\u8fd9\u4e2a\u70b9\u6ca1\u6709\u8bbf\u95ee\u8fc7\uff0c\u5c31\u8dd1\u4e00\u904d Dfs\u3002\n\n\u5982\u679c\u53d1\u73b0\u7ed3\u679c\u4e00\u4e2a\u70b9\u6709\u4e24\u4e2a\u4e0d\u540c\u7684\u5750\u6807\uff0c\u8f93\u51fa `No`\uff0c\u5426\u5219\u5c31\u8f93\u51fa `Yes`\uff0c\n___\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <bits/stdc++.h> \n\nusing namespace std;\n\nconst int N = 2e7 + 10;\n\nvoid add (int x, int y, int z) ;\nvoid Ios () ;\nvoid dfs (int x) ;\n\nbool f[N];\n\nint n, m;\nint tot;\nint pre[N], now[N], son[N], val[N];\nint l[N], r[N], d[N];\nint deep[N];\n\nmain () {\n\tIos () ;\n\t\n\tcin >> n >> m;\n\tfor (int i = 1; i <= m; ++ i) {\n\t\tcin >> l[i] >> r[i] >> d[i];\n\t\t\n        // \u8fde\u8fb9\uff0c\u8868\u793a l \u5728 r \u7684\u5de6\u8fb9\uff0c\u8ddd\u79bb\u4e3a d\uff0cr \u5728 l \u7684\u53f3\u8fb9\uff0c\u8ddd\u79bb\u4e3a -d\u3002\n\t\tadd (l[i], r[i], -d[i]) ;\n\t\tadd (r[i], l[i], d[i]) ;\n\t}\n\t\n    // \u53ea\u8981\u8fd9\u4e2a\u70b9\u6ca1\u6709\u8bbf\u95ee\u8fc7\uff0c\u5c31\u8dd1\u4e00\u904d Dfs\u3002\n\tfor (int i = 1; i <= n; ++ i)\n\t\tif (f[i] == 0)\n\t\t\tdfs (i) ;\n\t\n    // \u5224\u65ad\u662f\u5426\u5408\u6cd5\u3002\n\tfor (int i = 1; i <= m; ++ i) \n\t\tif (deep[r[i]] - deep[l[i]] != d[i]) {\n\t\t\tcout << \"No\\n\" ;\n\t\t\treturn 0; \n\t\t}\n\t\n\tcout << \"Yes \\n\" ;\n}\n\nvoid add (int x, int y, int z) { // \u5efa\u56fe\u3002\n\tpre[++ tot] = now[x];\n\tson[tot] =y;\n\tnow[x] = tot;\n\tval[tot] = z;\n}\n\nvoid Ios () { // cin \u52a0\u901f\u3002\n\tios :: sync_with_stdio (0) ;\n\tcin.tie () ;\n\tcout.tie () ;\n}\n\nvoid dfs (int x) { // dfs\n\tf[x] = 1;\n\t\n\tfor (int i = now[x]; i; i = pre[i]) {\n\t\tint y = son[i];\n\t\tif (f[y] == 0) {\n\t\t\tdeep[y] = deep[x] - val[i];\n\t\t\tdfs (y) ;\n\t\t}\n\t}\n}\n```\n\n### \u5b8c\u7ed3\u6492\u82b1 $\\sim\\sim\\sim$",
        "postTime": 1659075121,
        "uid": 661638,
        "name": "liukejie",
        "ccfLevel": 0,
        "title": "AT3882 [ARC090B] People on a Line \u9898\u89e3"
    },
    {
        "content": "[\u70b9\u6211\u4f20\u9001\u81f3\u539f\u9898](https://www.luogu.com.cn/problem/AT3882)\n\n[\u70b9\u6211\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.luogu.com.cn/blog/includebits/solution-at3882)\n\n\u8ba9\u6211\u4eec\u5148\u7ffb\u8bd1\u7ffb\u8bd1\u9898\u610f\uff1a\n\n- \u7ed9\u5b9a\u4e00\u4e9b\u4eba\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u5176\u4e2d\u53ef\u80fd\u6709\u4e00\u4e9b\u5173\u7cfb\u76f8\u77db\u76fe\uff0c\u5224\u65ad\u662f\u5426\u6709\u5b58\u5728\u77db\u76fe\u3002\n\n\u662f\u4e0d\u662f\u8fd8\u6709\u70b9\u95f7\uff0c\u8ba9\u6211\u4eec\u770b\u4e0b\u9762\u4e00\u7ec4\u6837\u4f8b\uff1a\n\n```\n3 3\n1 2 1\n2 3 1\n1 3 5\n```\n\u56fe\u753b\u51fa\u6765\u5c31\u662f\u4e0b\u9762\u7684\u6837\u5b50\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ewsfgsah.png)\n\n\u53ef\u4ee5\u770b\u5230\uff0c$1$ \u5230 $3$ \u6709\u4e24\u79cd\u8d70\u6cd5\uff0c\u4e00\u79cd\u662f\u7ecf\u8fc7 $2$ \u5230 $3$\uff0c\u8fd8\u6709\u4e00\u79cd\u662f\u76f4\u63a5\u8d70\u5230 $3$ ,\u8fd9\u4e24\u79cd\u8d70\u6cd5\u7684\u8def\u5f84\u957f\u5ea6\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u4f46\u6839\u636e\u9898\u610f\uff0c\u4e24\u4e2a\u4eba\u5728\u6570\u8f74\u4e0a\u7684\u8ddd\u79bb\u662f\u552f\u4e00\u7684\uff0c\u6240\u4ee5\u5b58\u5728\u77db\u76fe\uff0c\u8fd9\u7ec4\u6837\u4f8b\u8f93\u51fa\u7684\u662f No.\n\n\u73b0\u5728\u7406\u89e3\u9898\u610f\u4e86\uff0c\u8ba9\u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\u8fd9\u9053\u9898\u3002\n\n\u9996\u5148\u6211\u4eec\u901a\u8fc7\u4e0a\u8ff0\u6837\u4f8b\u53ef\u4ee5\u5f97\u77e5\uff0c\u8fd9\u9053\u9898\u662f\u6c42\u662f\u5426\u5b58\u5728\u77db\u76fe\uff0c\u6211\u4eec\u5728\u8dd1 Spfa \u65f6\uff0c\u662f\u4e0d\u662f\u4f1a\u968f\u65f6\u66f4\u65b0\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u4f46\u6211\u4eec\u8981\u770b\u4ed6\u662f\u4e0d\u662f\u77db\u76fe\uff0c\u53ea\u8981\u6211\u4eec\u5728\u66f4\u65b0\u8ddd\u79bb\u65f6\uff0c\u5b58\u5728\u4e00\u6761\u9053\u8def\u4e0e\u539f\u6709\u7684\u9053\u8def\u957f\u4e0d\u540c\uff0c\u90a3\u4e48\u5c31\u4e00\u5b9a\u5b58\u5728\u77db\u76fe\u3002\n\n\u4f46\u7528\u7ed9\u5b9a\u6211\u4eec\u7684\u6761\u4ef6\u5efa\u56fe\uff0c\u4e0d\u4e00\u5b9a\u8054\u901a\uff0c\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u628a\u6bcf\u4e2a\u70b9\u90fd\u626b\u4e00\u904d\uff0c\u5982\u679c\u8fd9\u4e2a\u70b9\u5728\u524d\u9762\u6ca1\u8dd1\uff0c\u90a3\u4e48\u5c31\u8dd1\u4e00\u904d Spfa.\n\n\u6700\u540e\u653e\u4e0a AC \u4ee3\u7801\uff08\u4ec5\u4f9b\u53c2\u8003\uff09\uff1a\n```\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int Maxm=400050;\nconst int Maxn=100050;\nint n,m;\nstruct node {\n\tll v,nxt,w;\n} edge[Maxm];\nint tot,head[Maxn];\nll dis[Maxn];\nqueue<int> q;\nbool vis[Maxn],in[Maxn];\n\ninline void Add_edge(ll u,ll v,ll w) {\n\tedge[++tot]=(node) {v,head[u],w};\n\thead[u]=tot;\n}\n\ninline bool Spfa(ll s) {\n\tq.push(s);\n\tdis[s]=0;\n\tin[s]=true;\n\twhile(!q.empty()) {\n\t\tint now=q.front();\n\t\tq.pop();\n\t\tfor(int i=head[now]; i; i=edge[i].nxt) {\n\t\t\tint v=edge[i].v;\n\t\t\tif(dis[v]>=0x7fffffff) {\n\t\t\t\tdis[v]=dis[now]+edge[i].w;\n\t\t\t\tvis[v]=true;\n\t\t\t\tif(!in[v]) q.push(v);\n\t\t\t} \n\t\t\telse if(dis[v]!=dis[now]+edge[i].w)\n\t\t\t\treturn false;\n\t\t}\n\t\tin[now]=false;\n\t}\n\treturn true;\n}\n\nint main() {\n\tfor(int i=1; i<=100005; ++i)\n\t\tdis[i]=12345678987654321;\n\tcin>>n>>m;\n\tfor(int i=1,u,v,w; i<=m; ++i) {\n\t\tcin>>u>>v>>w;\n\t\tAdd_edge(u,v,w);\n\t\tAdd_edge(v,u,-w);\n\t}\n\tfor(int i=1; i<=n; ++i) {\n\t\tif(!vis[i]) {\n\t\t\tvis[i]=true;\n\t\t\tif(!Spfa(i)) {\n\t\t\t\tputs(\"No\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\tputs(\"Yes\");\n\treturn 0;\n}\n```",
        "postTime": 1632554454,
        "uid": 470194,
        "name": "VectorChange",
        "ccfLevel": 0,
        "title": "AT3882\u9898\u89e3"
    },
    {
        "content": "- \u4eca\u5929\u4e00\u5929\u90fd\u662f\u5237\u7740\u5dee\u5206\u7ea6\u675f\u7684\u9898\u6765\u7740\n\n- \u8fd9\u4e00\u9898\uff0c\u70b9\u8fdb\u6765\uff0c\u4e4d\u4e00\u770b\uff0c\u597d\u50cf\u662f\u5dee\u5206\u7ea6\u675f\n\n- \u5176\u5b9e\u7684\u786e\u662f\u5dee\u5206\u7ea6\u675f\n\n- \u4f46\u6211\u89c9\u5f97\u7eafDfs\u53ef\u884c\uff0c\u4e8e\u662f\u6572\u4e86\u4e00\u53d1\u4e0a\u53bb\u5c31A\u6389\u4e86\n\n- \u7eafDfs\u7684\u601d\u8def\u5f88\u7b80\u5355\u3002\u5c31\u662f\u5148\u5efa\u56fe\u3002add(a, b, c), add(b, a, -c)\u3002\u8868\u793ab\u5728a\u7684\u53f3\u8fb9\uff0ca\u5728b\u7684\u5de6\u8fb9\u3002\u7136\u540e\u53ea\u8981\u6ca1\u6709\u8bbf\u95ee\u8fc7\u7684\u70b9\u5c31\u4ee5\u5b83\u4e3a**\u57fa\u51c6\u70b9**\u53bb\u6269\u5c55Dfs\u3002\u5982\u679c\u5728Dfs\u7684\u8fc7\u7a0b\u4e2d\u53d1\u73b0\u4e00\u4e2a\u70b9\u6709\u4e24\u4e2a**\u4e0d\u540c**\u7684\u5750\u6807\u3002\u5c31\u76f4\u63a5\u8f93\u51faNo\u3002\n\n- \u4ee3\u7801\u2193\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#define N 400005\n#define inf 0x7fffffff\nusing namespace std;\n\nstruct E {int next, to, dis;} e[N];\nint n, m, num, flag, cnt;\nint h[N], a[N], pos[N], obj[N];\nbool vis[N];\n\nint read()\n{\n\tint x = 0; char c = getchar();\n\twhile(c < '0' || c > '9') c = getchar();\n\twhile(c >= '0' && c <= '9') {x = x * 10 + c - '0'; c = getchar();}\n\treturn x;\n}\n\nvoid add(int u, int v, int w)\n{\n\te[++num].next = h[u];\n\te[num].to = v;\n\te[num].dis = w;\n\th[u] = num;\n}\n\nvoid dfs(int x)\n{\n\tif(flag) return;\n\tvis[x] = 1;\n\tfor(int i = h[x]; i != 0; i = e[i].next)\n\t{\n\t\tint t = pos[x] + e[i].dis;\n\t\tif(pos[e[i].to] == inf) pos[e[i].to] = t, dfs(e[i].to);\n\t\telse if(t != pos[e[i].to]) {flag = 1; return;}\n\t}\n}\n\nint main()\n{\n\tcin >> n >> m;\n\tfor(int i = 1; i <= m; i++)\n\t{\n\t\tint a = read(), b = read(), c = read();\n\t\tadd(a, b, c), add(b, a, -c);\n\t\tpos[a] = pos[b] = inf;\n\t\tobj[++cnt] = a, obj[++cnt] = b;\n\t}\n\tsort(obj + 1, obj + 1 + cnt);\n\tcnt = unique(obj + 1, obj + 1 + cnt) - obj - 1;\n\tfor(int i = 1; i <= cnt; i++)\n\t\tif(!vis[obj[i]])\n\t\t{\n\t\t\tflag = 0;\n\t\t\tpos[obj[i]] = 0;\n\t\t\tdfs(obj[i]);\n\t\t\tif(flag) {cout << \"No\"; return 0;}\n\t\t}\n\tcout << \"Yes\";\n\treturn 0;\n}\n```\n",
        "postTime": 1563876376,
        "uid": 91681,
        "name": "Error_666",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 AT3882 \u3010People on a Line\u3011"
    }
]