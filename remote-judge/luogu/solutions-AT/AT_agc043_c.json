[
    {
        "content": "\u4e00\u4e2a\u70b9 $(x, y, z)$ \u7684\u6743\u503c\u4e3a $K^{x+y+z}$ \uff0c\u8fd9\u4e2a $K$ \u8db3\u591f\u5927\uff0c\u53ef\u4ee5\u770b\u505a\u6b63\u65e0\u7a77\uff0c\u4e5f\u5c31\u662f\u8bf4\u6c42\u8fd9\u5f20\u56fe\u7684\u6700\u5927\u6743\u72ec\u7acb\u96c6\u8981\u5c3d\u91cf\u628a $x+y+z$ \u6700\u5927\u7684\u9009\u6ee1\u3002\n\n\u90a3\u4e48\u4e00\u4e2a\u66b4\u529b\u7684 $O(n^3)$ \u8d2a\u5fc3\u505a\u6cd5\u5c31\u547c\u4e4b\u6b32\u51fa\u4e86\uff1a\u4ece\u5927\u5230\u5c0f\u679a\u4e3e $S = x + y + z$ \uff0c\u7136\u540e\u5bf9\u4e8e\u6240\u6709\u548c\u4e3a $S$ \u7684 $(x, y, z)$ \uff0c\u5982\u679c\u4e4b\u524d\u6ca1\u6709\u4e0e\u4e4b\u8fde\u8fb9\u7684\u70b9\u88ab\u9009\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u4e00\u5b9a\u8981\u51fa\u73b0\u5728\u6700\u4f18\u89e3\u4e2d\u3002\n\n\u53ef\u4ee5\u7ed9\u8fb9\u5b9a\u5411\uff0c\u8fb9\u4ece\u5c0f\u8fde\u5230\u5927\uff0c\u90a3\u4e48\u6574\u4e2a\u56fe\u5c31\u662f DAG \uff0c\u5728 DAG \u4e2d\u62bd\u8c61\u8fd9\u4e2a\u8d2a\u5fc3\uff1a\u6bcf\u6b21\u9009\u62e9\u4e00\u4e2a\u672a\u786e\u5b9a\u7684\u70b9\u6ee1\u8db3\u5176\u51fa\u8fb9\u8fde\u63a5\u5230\u7684\u70b9\u90fd\u5df2\u7ecf\u786e\u5b9a\u4e0d\u5728\u6700\u4f18\u89e3\uff08\u6216\u8005\u6ca1\u6709\u51fa\u8fb9\uff09\uff0c\u7136\u540e\u628a\u8be5\u70b9\u52a0\u5165\u6700\u4f18\u89e3\u96c6\u5408\uff0c\u628a\u8be5\u70b9\u5165\u8fb9\u8fde\u63a5\u7684\u70b9\u786e\u5b9a\u4e3a\u4e0d\u5728\u6700\u4f18\u89e3\u3002\n\n\u90a3\u4e48\u4e00\u4e2a\u70b9\u5728\u6700\u4f18\u89e3\u5f53\u4e14\u4ec5\u5f53\u5176\u51fa\u8fb9\u8fde\u63a5\u5230\u7684\u70b9\u90fd\u4e0d\u5728\u6700\u4f18\u89e3\uff0c\u4e00\u4e2a\u70b9\u4e0d\u5728\u6700\u4f18\u89e3\u5f53\u4e14\u4ec5\u5f53\u5176\u51fa\u8fb9\u8fde\u63a5\u5230\u7684\u70b9\u5b58\u5728\u4e00\u4e2a\u5728\u6700\u4f18\u89e3\u7684\u70b9\uff08\u6216\u6ca1\u6709\u51fa\u5ea6\uff09\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a\u5173\u7cfb\u5b8c\u5168\u53ef\u4ee5\u5bf9\u5e94\u5230\u535a\u5f08\u4e2d\u7684\u5fc5\u80dc\u5fc5\u8d25\u6001\uff0c\u8fd9\u4e2a DAG \u53ef\u4ee5\u770b\u505a\u535a\u5f08\u8f6c\u79fb\u56fe\uff0c\u7b54\u6848\u5c31\u662f\u6240\u6709\u5fc5\u8d25\u6001\u7684\u6743\u503c\u548c\u3002\n\n\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a $(x, y, z)$ \uff0c\u5982\u4f55\u5feb\u901f\u6c42\u51fa\u5176\u5fc5\u80dc\u5fc5\u8d25\u6001\u3002\u7531\u4e8e\u6bcf\u6b21\u79fb\u52a8\u53ea\u80fd\u79fb\u52a8\u4e00\u7ef4\uff0c\u6240\u4ee5\u8fd9\u4e2a\u535a\u5f08\u4e09\u7ef4\u72ec\u7acb\uff0c\u5c31\u76f8\u5f53\u4e8e\u6bcf\u4e2a\u7ef4\u5ea6\u6709\u4e00\u4e2a\u5b50\u6e38\u620f\u3002\u5bf9\u4e8e\u6bcf\u4e00\u7ef4\u7684 DAG \u5206\u522b\u6c42\u51fa SG \u503c $f(x), g(y), h(z)$ \uff0c\u4e09\u8005\u5f02\u6216\u548c\u5c31\u662f $(x, y, z)$ \u7684 SG \u503c\u3002\n\n\u81f3\u6b64\uff0c\u95ee\u9898\u8f6c\u6362\u4e3a\u6c42 $\\sum_{f(x) \\oplus g(y) \\oplus h(z) = 0} K^{x+y+z}$ \uff0c\u5176\u4e2d $\\oplus$ \u662f\u5f02\u6216\u3002\n\n\u53ef\u4ee5\u7528 FWT \u53ef\u4ee5\u76f4\u63a5\u6c42\u51fa $f, g, h$ \u7684\u5f02\u6216\u5377\u79ef\u3002\n\n\u4f46\u662f\u4e5f\u6709\u66f4\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u535a\u5f08\u8f6c\u79fb\u56fe\uff0c\u4efb\u610f\u4e00\u4e2a\u70b9\u7684 SG \u503c\u4e0a\u754c\u662f $O(\\sqrt{m})$ \u7684\u3002\u6240\u4ee5\u53ef\u4ee5 $O(m\\sqrt{m})$ \u6216 $O(m)$ \u76f4\u63a5\u679a\u4e3e $f(x), g(y), h(z)$ \u7edf\u8ba1\u7b54\u6848\u3002\n\n~~\u8fd9\u4e2a\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u906d\u53d7\u964d\u667a\u6253\u51fb\u540e FWT \u5bb9\u6613\u6253\u6302~~\n\n\u53c2\u8003\u5b9e\u73b0\uff1a\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <vector>\n#include <set>\n#define debug(...) fprintf(stderr, __VA_ARGS__)\n\ntypedef long long ll;\n\nstruct {\n\tinline operator int () { int x; return scanf(\"%d\", &x), x; }\n} read;\n\nconst int maxn = 200005, mod = 998244353;\nstd::vector<int> G[maxn];\nint sg[3][maxn];\nll f[3][maxn];\nll po[maxn * 3];\n\nint main () {\n\tint n = read, len = 1;\n\twhile (len < n)\n\t\tlen <<= 1;\n\n\tpo[0] = 1;\n\tll bs = 1000000000000000000ll % mod;\n\tfor (int i = 1; i <= n * 3; i ++)\n\t\tpo[i] = po[i - 1] * bs % mod;\n\n\tfor (int o = 0; o < 3; o ++) {\n\t\tint m = read;\n\t\tfor (int i = 1; i <= n; i ++)\n\t\t\tG[i].clear();\n\t\tfor (int i = 1; i <= m; i ++) {\n\t\t\tint u = read, v = read;\n\t\t\tif (u < v) G[u].push_back(v);\n\t\t\tif (v < u) G[v].push_back(u);\n\t\t}\n\t\tfor (int i = n; i; i --) {\n\t\t\tstd::set<int> mex;\n\t\t\tfor (int j : G[i])\n\t\t\t\tmex.insert(sg[o][j]);\n\t\t\twhile (mex.count(sg[o][i]))\n\t\t\t\t++ sg[o][i];\n\t\t}\n\t\tfor (int i = 1; i <= n; i ++)\n\t\t\t(f[o][sg[o][i]] += po[i]) %= mod;\n\t}\n\n\tll ans = 0;\n\tfor (int i = 0; i < 500; i ++)\n\t\tfor (int j = 0; j < 500; j ++)\n\t\t\t(ans += f[0][i] * f[1][j] % mod * f[2][i ^ j]) %= mod;\n\tprintf(\"%lld\\n\", ans);\n}\n```\n\n\u5c0f\u5f69\u86cb\uff1a![](https://cdn.luogu.com.cn/upload/image_hosting/qaj8x83v.png)\n\n",
        "postTime": 1584860127,
        "uid": 52232,
        "name": "Kewth",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 AT5800 \u3010[AGC043C] Giant Graph\u3011"
    },
    {
        "content": "\u4ee5\u4e0b\u8bbe $n,m$ \u540c\u9636\u3002\n\n\u7531\u4e8e $10^{18}$ \u975e\u5e38\u5927\uff0c\u56e0\u6b64\u6c42\u6700\u5927\u72ec\u7acb\u96c6\uff0c\u76f8\u5f53\u4e8e\u8d2a\u5fc3\u5730\u4ece\u6743\u503c\u5927\u7684\u5f80\u5c0f\u7684\u9009\uff0c\u80fd\u9009\u5219\u9009\u3002\n\n\u8003\u8651 dp\uff0c\u8bbe $f_{x,y,z}$ \u8868\u793a\u70b9 $(x,y,z)$ \u662f\u5426\u8981\u88ab\u9009\u3002\n\n\u8f6c\u79fb\u65b9\u7a0b\u4e3a $f_{x,y,z} = \\prod_{(x^\\prime,y^\\prime,z^\\prime) \\to (x,y,z)} [f_{x^\\prime,y^\\prime,z^\\prime} = 0]$\uff0c\u5176\u4e2d $(x^\\prime,y^\\prime,z^\\prime) \\to (x,y,z)$ \u8868\u793a $(x^\\prime,y^\\prime,z^\\prime), (x,y,z)$ \u4e4b\u95f4\u6709\u8fb9\u4e14 $x^\\prime + y^\\prime + z^\\prime \\ge x + y + z$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n^3)$\uff0c\u663e\u7136\u8fc7\u4e0d\u4e86\u3002\n\n\u8003\u8651\u5982\u4e0b\u8fd9\u6837\u4e00\u4e2a\u535a\u5f08\u95ee\u9898\uff1a\n\n> \u6709\u4e09\u5f20 $n$ \u4e2a\u70b9\u7684\u6709\u5411\u56fe\uff0c\u6bcf\u5f20\u56fe\u5728\u67d0\u4e2a\u70b9\u4e0a\u90fd\u6709\u4e00\u4e2a\u6807\u8bb0\u3002\n>\n> \u6709\u4e24\u4e2a\u4eba\u8f6e\u6d41\u8fdb\u884c\u79fb\u52a8\uff0c\u6bcf\u6b21\u79fb\u52a8\u53ef\u4ee5\u5c06\u4e00\u4e2a\u6807\u8bb0\u4ece\u4e00\u6761\u51fa\u8fb9\u79fb\u52a8\u8fc7\u53bb\u3002\n>\n> \u8c01\u4e0d\u80fd\u79fb\u52a8\u4e86\u8c01\u5c31\u8f93\u4e86\u3002\n\n\u5bf9\u4e8e\u8fd9\u6837\u4e00\u4e2a\u535a\u5f08\u95ee\u9898\uff0c\u7528 $\\operatorname{SG}$ \u51fd\u6570\u53ef\u4ee5\u89e3\u51b3\u3002\n\n\u7136\u540e\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u4e2a\u535a\u5f08\u95ee\u9898\u7684 $\\operatorname{SG}$ \u51fd\u6570\u548c\u4e0a\u9762\u90a3\u4e2a dp \u7684\u72b6\u6001\u662f\u4e00\u6837\u7684\u3002\n\n\u800c\u8fd9\u4e2a\u535a\u5f08\u95ee\u9898\u4e2d\uff0c\u4e09\u5f20\u56fe\u4e4b\u95f4\u76f8\u4e92\u72ec\u7acb\u3002\n\n\u8fd9\u8ba9\u6211\u4eec\u60f3\u5230\u4e86 $\\operatorname{Nim}$ \u6e38\u620f\uff0c\u5373\u6211\u4eec\u53ef\u4ee5\u5c06\u4e09\u5f20\u56fe\u7684 $\\operatorname{SG}$ \u51fd\u6570\u5206\u5f00\u7b97\uff0c\u6700\u540e $\\operatorname{xor}$ \u8d77\u6765\u5f97\u5230\u539f\u6765\u7684 $\\operatorname{SG}$ \u51fd\u6570\u3002$\\operatorname{SG}$ \u51fd\u6570\u4e3a $0$ \u7684\u70b9\uff0c\u5373\u4e3a\u539f\u95ee\u9898\u4e2d\u8981\u9009\u62e9\u7684\u70b9\u3002\n\n\u6ce8\u610f\u5230\uff0c\u5bf9\u4e8e\u4e00\u4e2a DAG \u535a\u5f08\u8f6c\u79fb\u56fe\uff0c$\\operatorname{SG}$ \u51fd\u6570\u503c\u7684\u4e0a\u754c\u662f $\\mathcal O(\\sqrt n)$ \u7684\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5 $\\mathcal O(n)$ \u6c42\u51fa\u7b54\u6848\u3002\n\n```cpp\nconst int N = 1e5 + 7;\nconst modint K = 1000000000000000000ll % P;\nint n;\nmodint ans;\nstruct Graph {\n\tint n, m, sg[N], k;\n\tmodint c[N];\n\tvi e[N];\n\tinline Graph() {}\n\tinline Graph(int n) : n(n) {}\n\tint SG(int x) {\n\t\tif (~sg[x]) return sg[x];\n\t\tmap<int, bool> p;\n\t\tfor (int y : e[x]) p[SG(y)] = 1;\n\t\twhile (p[++sg[x]]);\n\t\treturn sg[x];\n\t}\n\tinline void main() {\n\t\trd(m);\n\t\tfor (int i = 1; i <= n; i++) sg[i] = -1;\n\t\tfor (int i = 1, x, y; i <= m; i++) {\n\t\t\trd(x), rd(y);\n\t\t\tif (x > y) swap(x, y);\n\t\t\te[x].pb(y);\n\t\t}\n\t\tfor (int i = 1; i <= n; i++) if (!~sg[i]) SG(i);\n\t\tfor (int i = 1; i <= n; i++) k = max(k, sg[i]), c[sg[i]] += K ^ i;\n\t}\n} G[3];\n\nint main() {\n\trd(n);\n\tfor (int i = 0; i < 3; i++) G[i] = Graph(n), G[i].main();\n\tfor (int i = 0; i <= G[0].k; i++)\n\t\tfor (int j = 0; j <= G[1].k; j++)\n\t\t\tans += G[0].c[i] * G[1].c[j] * G[2].c[i^j];\n\tprint(ans);\n\treturn 0;\n}\n```",
        "postTime": 1584872303,
        "uid": 100544,
        "name": "xht",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 AT5800 \u3010[AGC043C] Giant Graph\u3011"
    },
    {
        "content": "\u9996\u5148\u4e0a\u6765\u7b2c\u4e00\u773c\u770b\u5230\u7684\u60f3\u5fc5\u662f\u8fd9\u4e2a\u7565\u663e\u5938\u5f20\u7684\u8d21\u732e\u5f62\u5f0f\u3002\u4e0d\u8fc7\u53ea\u8981\u7a0d\u52a0\u601d\u7d22\u4fbf\u4f1a\u53d1\u73b0\uff0c\u8fd9\u4e2a $10^{18}$ \u7684\u8d21\u732e\u5f62\u5f0f\u5176\u5b9e\u5c31\u662f\u5728\u6700\u5927\uff08\u6743\uff09\u72ec\u7acb\u96c6\u4e2d\u94a6\u5b9a\u4e86 $x+y+z$ \u5927\u7684\u8981\u5c3d\u91cf\u591a\u52a0\uff0c\u4ec5\u6b64\u800c\u5df2\u2026\u2026\n\n\u4e8e\u662f\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u8d2a\u5fc3\u7b97\u6cd5\uff1a\u628a\u6240\u6709\u70b9\u6309\u7167 $x+y+z$ \u5206\u5c42\uff0c\u6bcf\u6761\u8fb9\u4ece\u9ad8\u5c42\u8fde\u5411\u4f4e\u5c42\u3002\u4ece\u9ad8\u5230\u4f4e\u904d\u5386\u6bcf\u4e00\u5c42\uff0c\u5bf9\u4e8e\u5176\u4e2d\u7684\u6bcf\u4e00\u4e2a\u70b9\uff0c\u82e5\u5176\u4e0d\u4e0e\u4efb\u610f\u4e00\u4e2a\u5df2\u53d6\u70b9\uff08\u5bb9\u6613\u53d1\u73b0\u8fd9\u6837\u7684\u70b9\u4e00\u5b9a\u6bd4\u5f53\u524d\u8003\u8651\u7684\u8fd9\u4e2a\u70b9\u5c42\u66f4\u9ad8\uff09\u76f8\u90bb\uff0c\u5219\u53d6\u4e4b\u3002\n\n\u63a5\u4e0b\u6765\u51fa\u73b0\u4e86\u4e00\u6b65\u6bd4\u8f83\u62bd\u8c61\u7684\u4e8b\u60c5\u3002\u6211\u4eec\u4ece\u9694\u58c1\u535a\u5f08\u8bba\u4e13\u9898\u91cc\u628a Alice \u548c Bob \u62c9\u8fc7\u6765\uff0c\u5e76\u5b9a\u4e0b\u8fd9\u6837\u4e00\u4e2a\u6e38\u620f\uff1a\u521d\u59cb\u65f6\u6709\u4e00\u679a\u68cb\u5b50\u5728\u7ed9\u5b9a\u70b9\u4e0a\uff0c\u4e8c\u4eba\u8f6e\u6d41\u884c\u52a8\uff0c\u6bcf\u6b21\u53ef\u4ee5\u6cbf\u7740\u8fb9\u628a\u68cb\u5b50\u5411\u76f8\u90bb\u7684\u66f4\u9ad8\u5c42\u70b9\u79fb\u52a8\u4e00\u6b65\uff0c\u4e0d\u80fd\u79fb\u52a8\u8005\u8d25\u3002\u5982\u6b64\u4e00\u6765\uff0c\u6211\u4eec\u9010\u5c42\u8003\u8651\uff0c\u53ef\u4ee5\u89c2\u5bdf\u5230\uff0c\u68cb\u5b50\u521d\u59cb\u5728\u4e00\u4e2a\u70b9\u4e0a\u65f6\u5148\u624b\u5fc5\u8d25\uff0c\u5f53\u4e14\u4ec5\u5f53\u8fd9\u4e2a\u70b9\u5728\u6700\u540e\u7684\u6700\u5927\u72ec\u7acb\u96c6\u4e2d\u3002\u5177\u4f53\u5730\uff0c\u6bcf\u4e2a\u6700\u5927\u72ec\u7acb\u96c6\u4e2d\u7684\u70b9\u90fd\u53ea\u80fd\u79fb\u52a8\u5230\u975e\u6700\u5927\u72ec\u7acb\u96c6\u4e2d\u70b9\uff0c\u800c\u6bcf\u4e2a\u975e\u6700\u5927\u72ec\u7acb\u96c6\u4e2d\u70b9\u90fd\u80fd\u79fb\u52a8\u5230\u6700\u5927\u72ec\u7acb\u96c6\u4e2d\u70b9\u3002\u540c\u65f6\u6211\u4eec\u610f\u8bc6\u5230\uff0c\u5728\u8fd9\u4e2a\u89c6\u89d2\u4e0b\uff0c\u4e09\u4e2a\u7ef4\u5ea6\u662f\u72ec\u7acb\u7684\uff0c\u7b49\u4e8e\u662f\u4e09\u573a\u540c\u65f6\u8fdb\u884c\u7684\u6e38\u620f\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u6c42\u51fa\u4e09\u4e2a sg\u3002\n\n\u6700\u540e\u662f\u7b54\u6848\u7684\u8ba1\u7b97\uff0c\u6211\u4eec\u6ce8\u610f\u5230\u8fd9\u4e2a\u5f62\u5f0f\u662f\u591a\u5c11\u53ef\u4ee5\u7528\u5206\u914d\u5f8b\u8fdb\u884c\u4e00\u4e9b\u5408\u5e76\u7684\u3002\u7531\u4e8e sg \u7684\u4e0a\u754c\u662f\u6839\u53f7\u89c4\u6a21\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u679a\u4e3e\u4e24\u4e2a sg\uff0c\u5229\u7528\u5f02\u6216\u7b49\u4e8e\u96f6\u7b97\u51fa\u7b2c\u4e09\u4e2a sg\uff0c\u7136\u540e\u628a\u8d21\u732e\u4e58\u8d77\u6765\u5373\u53ef\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\n#include <atcoder/modint>\nusing namespace std;\ntypedef atcoder::modint998244353 mint;\nconstexpr int N = 2e5 + 9, B = 1 << 9;\nint n, m, vst[B], sg[N];\nmint pw[N], kv[3][N], ans;\nvector<int> es[N];\nsigned main() {\n  cin.tie(nullptr)->sync_with_stdio(false);\n  cin >> n, pw[0] = 1;\n  mint k = mint(10).pow(18);\n  for (int i = 1; i <= n; ++i) pw[i] = pw[i - 1] * k;\n  for (int T = 0; T < 3; ++T) {\n    cin >> m, memset(vst, 0, sizeof vst);\n    for (int i = 1; i <= n; ++i) es[i].clear();\n    for (int u, v; m; --m) {\n      if (cin >> u >> v, u > v) swap(u, v);\n      if (u < v) es[u].push_back(v);\n    }\n    for (int i = n; i; --i) {\n      for (int j : es[i]) vst[sg[j]] = i;\n      sg[i] = 0;\n      while (vst[sg[i]] == i) ++sg[i];\n      kv[T][sg[i]] += pw[i];\n    }\n  }\n  for (int i = 0; i < B; ++i)\n    for (int j = 0; j < B; ++j) ans += kv[0][i] * kv[1][j] * kv[2][i ^ j];\n  return cout << ans.val() << endl, 0;\n}\n```",
        "postTime": 1682593334,
        "uid": 250637,
        "name": "UnyieldingTrilobite",
        "ccfLevel": 9,
        "title": "\u8fd9\u5565\u554a\u8fd9"
    },
    {
        "content": "- \u4ece\u7279\u6b8a\u72b6\u6001\u8f6c\u79fb\u65b9\u5f0f\u8f6c\u6362\u5230\u535a\u5f08\uff0c\u4ece\u800c\u89e3\u51b3\u95ee\u9898\u3002\n\n\u89c2\u5bdf\u7b54\u6848\u8d21\u732e\u7684\u5f62\u5f0f\uff1a $10^{{18(x+y+z)}}$ \uff0c$10^{18}$ \u8fdc\u6bd4 $n$ \u5927\uff0c\u6240\u4ee5\u4e0d\u53ef\u80fd\u51fa\u73b0\u51e0\u4e2a\u7f16\u53f7\u5c0f\u7684\u6570\u52a0\u8d77\u6765\u7684\u8d21\u732e\u5927\u4e8e\u9009\u7f16\u53f7\u5927\u7684\u6570\u3002\n\n\u56e0\u6b64\u53ef\u4ee5\u8003\u8651\u8d2a\u5fc3\uff0c\u4f18\u5148\u4ece\u5927\u7684\u5f80\u5c0f\u9009\uff0c\u53ef\u4ee5\u505a\u5230 $O(n^3)$\uff0c\u5e76\u4e0d\u80fd\u901a\u8fc7\u6b64\u9898\u3002\n\n\u601d\u8003\u4e00\u4e0b\u8d2a\u5fc3\u7684\u8fc7\u7a0b\uff0c\u5373\u4ece\u6700\u5927\u7684\u70b9\u5f00\u59cb\uff0c\u5982\u679c\u5f53\u524d\u70b9\u7684\u6240\u6709\u51fa\u8fb9\u5747\u4e3a\u4e0d\u9009\u6216\u65e0\u51fa\u8fb9\uff0c\u5219\u9009\u8fd9\u4e2a\u70b9\uff0c\u5426\u5219\u4e0d\u9009\u8fd9\u4e2a\u70b9\u3002\n\n\u53d1\u73b0\u8fd9\u4e2a\u8fc7\u7a0b\u7c7b\u4f3c\u535a\u5f08\u95ee\u9898\u5fc5\u80dc\u5fc5\u8d25\u6001\u7684\u5bf9\u5e94\u5173\u7cfb\uff0c\u9009\u4e3a\u5fc5\u8d25\uff0c\u4e0d\u9009\u4e3a\u5fc5\u80dc\u3002\n\n\u8003\u8651\u7528 SG \u51fd\u6570\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u70b9\u6709\u4e09\u7ef4\uff0c\u4e0d\u662f\u5f88\u597d\u5904\u7406\uff0c\u4f46\u662f\u53d1\u73b0\u6bcf\u6b21\u53ea\u4f1a\u52a8\u4e00\u7ef4\u5750\u6807\uff0c\u6240\u4ee5\u4e09\u7ef4\u5b9e\u9645\u4e0a\u662f\u72ec\u7acb\u7684\uff0c\u662f\u539f\u95ee\u9898\u7684\u4e09\u4e2a\u5b50\u95ee\u9898\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u597d\u529e\u4e86\uff0c\u6bcf\u4e2a\u56fe\u5206\u5f00\u6c42 SG \u51fd\u6570\uff0c\u5168\u90e8\u5f02\u6216\u8d77\u6765\u5c31\u662f\u603b\u95ee\u9898\u7684 SG \u51fd\u6570\u3002\n\n\u4fdd\u8bc1\u603b\u95ee\u9898 SG \u51fd\u6570\u4e3a $0$ \u5373\u53ef\u3002\n\n\u5408\u5e76\u7b54\u6848\u7684\u65f6\u5019\uff0c\u4f3c\u4e4e\u9700\u8981 FWT \u5f02\u6216\u5377\u79ef\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u77e5\u9053\uff0c\u5bf9\u4e8e\u4e00\u4e2a DAG \u535a\u5f08\u8f6c\u79fb\u56fe\uff0cSG \u51fd\u6570\u7684\u4e0a\u9650 $\\sqrt{m}$ \u7684\uff0c\u5373\u53ef\u5728 $O(m)$ \u65f6\u95f4\u5185\u89e3\u51b3\u672c\u95ee\u9898\u3002\n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<cmath>\n#include<set>\n#define int long long\nusing namespace std;\nconst int mo=998244353;\nint n,m,x,y,mi[100010],sg[100010],f[3][100010],ans,mx;\nvector<int> e[100010];\nsigned main()\n{\n    scanf(\"%lld\",&n);\n    mi[0]=1;mi[1]=(long long)1e18%mo;\n    for (int i=2;i<=n;i++)\n        mi[i]=1ll*mi[i-1]*mi[1]%mo;\n    for (int t=0;t<=2;t++)\n    {\n        for (int i=1;i<=n;i++) e[i].clear(),sg[i]=0;\n        scanf(\"%lld\",&m);mx=max(mx,m);\n        for (int i=1;i<=m;i++)\n        {\n            scanf(\"%lld%lld\",&x,&y);\n            if (x>y) swap(x,y);\n            e[x].push_back(y);\n        }\n        set<int> mex;\n        for (int i=n;i>=1;i--)\n        {\n            mex.clear();\n            for (auto v:e[i])\n                mex.insert(sg[v]);\n            while (mex.count(sg[i]))\n                sg[i]++;\n        }\n        for (int i=1;i<=n;i++)\n            f[t][sg[i]]=(f[t][sg[i]]+mi[i])%mo;\n    }\n    mx=sqrt(mx);\n    for (int i=0;i<=500;i++)\n        for (int j=0;j<=500;j++)\n            ans=(ans+1ll*f[0][i]*f[1][j]%mo*f[2][i^j]%mo)%mo;\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```\n",
        "postTime": 1660377885,
        "uid": 157857,
        "name": "ImmortalWatcher",
        "ccfLevel": 6,
        "title": "AT5800 [AGC043C] Giant Graph"
    }
]