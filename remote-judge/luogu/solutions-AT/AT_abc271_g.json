[
    {
        "content": "#  [[ABC271G] Access Counter](https://www.luogu.com.cn/problem/AT_abc271_g) Solution\n\n[TOC]\n\n## [\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u6233\u6b64\u8fdb\u5165](http://blog.tsawke.com?t=ABC271G)\n\n## \u9898\u9762\n\n\u6bcf\u5929\u5b58\u5728 $ 24 $ \u4e2a\u65f6\u95f4\u70b9\uff0c\u4e24\u4eba\u8981\u8bbf\u95ee\u4e00\u4e2a\u7f51\u7ad9\uff0c\u7ed9\u5b9a\u4e00\u4e2a `A` \u548c `T` \u7ec4\u6210\u7684\u957f\u5ea6\u4e3a $ 24 $ \u7684\u5b57\u7b26\u4e32\uff0c\u82e5\u4e3a `T` \u5219 Taka \u6709 $ X\\% $ \u7684\u6982\u7387\u6210\u529f\u8bbf\u95ee\uff0c\u82e5\u4e3a `A` \u5219 Aoki \u6709 $ Y\\% $ \u7684\u6982\u7387\u6210\u529f\u8bbf\u95ee\uff0c\u6c42\u8be5\u7f51\u7ad9\u7b2c $ n $ \u6b21\u88ab\u8bbf\u95ee\u65f6\u662f\u88ab Aoki \u8bbf\u95ee\u7684\u6982\u7387\uff0c\u5bf9 $ 998244353 $ \u53d6\u6a21\u3002\n\n## Solution\n\n\u9996\u5148\u770b\u4e00\u773c\u8fd9\u4e2a\u9898\u9762\u4e0e $ n $ \u7684\u8303\u56f4\uff0c\u5c31\u4e0d\u96be\u8054\u60f3\u5230\u77e9\u9635\u5feb\u901f\u5e42\uff0c\u4f46\u662f\u8fd9\u9898\u7684\u96be\u70b9\u6211\u8ba4\u4e3a\u4e3b\u8981\u8fd8\u662f\u5728\u72b6\u6001\u7684\u8bbe\u8ba1\u4e0e\u8f6c\u79fb\u4e0a\u3002\n\n\u4e00\u4e2a\u663e\u800c\u6613\u89c1\u4f46\u8f83\u4e3a\u91cd\u8981\u7684\u6027\u8d28\uff0c\u5373\u4e24\u6b21\u8bbf\u95ee\u4e4b\u95f4\u95f4\u9694\u7684\u5929\u6570\u662f\u6613\u4e8e\u7edf\u8ba1\u7684\uff0c\u91cd\u8981\u7684\u5728\u4e8e\u4e24\u6b21\u8bbf\u95ee\u7684\u65f6\u95f4\u70b9 $ i, j $ \u4e4b\u95f4\u7684\u4f4d\u7f6e\u5173\u7cfb\u3002\n\n\u4ee4\u5bf9\u5e94\u65f6\u95f4\u70b9\u7684\u8bbf\u95ee\u6210\u529f\u6982\u7387\u4e3a $ p_i $\uff0c\u4ee4\u4e00\u5929\u4e2d\u672a\u53d1\u751f\u4efb\u4f55\u8bbf\u95ee\u7684\u6982\u7387\u4e3a $ P = \\prod_{i = 1}^{24}(1 - p_i) $\uff0c\u8003\u8651\u9884\u5904\u7406 $ dp(i, j) $ \u8868\u793a\u4e0a\u6b21\u5728 $ i $ \u8bbf\u95ee\u672c\u6b21\u5728 $ j $ \u8bbf\u95ee\u7684\u6982\u7387\uff0c\u5982\u679c\u4e24\u8005\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e0d\u8d85\u8fc7\u4e00\u5929\uff0c\u663e\u7136\u53ef\u4ee5\u9884\u5904\u7406\uff0c\u4ee4 $ R $ \u4e3a\u4ece $ i + 1 $ \u5230 $ j - 1 $ \u7684\u6240\u6709 $ 1 - p $ \u4e4b\u79ef\uff0c\u5219\u8f6c\u79fb\u663e\u7136\uff0c\u5373\uff1a\n$$\ndp(i, j) = \\sum_{k = 0}^{+\\infty}P^k \\times R \\times p_j\n$$\n\u663e\u7136\u548c\u5f0f\u4e3a\u7b49\u6bd4\u6570\u5217\u6c42\u548c\uff0c\u4e14\u7531\u9898\u610f\u53ef\u77e5\u516c\u6bd4 $ P \\lt 0 $\uff0c\u5219\u7ee7\u7eed\u63a8\u5f0f\u5b50\u53ef\u4ee5\u5f97\u5230\uff1a\n$$\n\\lim\\limits_{n \\to +\\infty}\\dfrac{1 - P^n}{1 - P} \\times R \\times p_j\n$$\n\u663e\u7136 $ n \\to +\\infty $ \u65f6 $ P^n \\to 0 $\uff0c\u5219\u8f6c\u5316\u4e3a\uff1a\n$$\n\\dfrac{R \\times p_j}{1 - P}\n$$\n\u4e8e\u662f\u6211\u4eec\u5b8c\u6210\u4e86 $ dp(i, j) $ \u7684\u9884\u5904\u7406\u3002\n\n---\n\n\u4ee4 $ f(i, j) $ \u8868\u793a\u7b2c $ i $ \u6b21\u8bbf\u95ee\u53d1\u751f\u5728 $ j $ \u65f6\u523b\u7684\u6982\u7387\uff0c\u6709\uff1a\n$$\nf(i, j) = \\sum_{k = 1}^{24} f(i - 1, k) \\times dp(k, j)\n$$\n\u6309\u7167\u6211\u4eec\u4e4b\u524d\u7684\u60f3\u6cd5\u6302\u5230\u77e9\u9635\u4e0a\uff1a\n$$\n\\begin{bmatrix}\nf(i, 1) & f(i, 2) & \\cdots & f(i, 24) \\\\\n\\end{bmatrix}\n=\n\\begin{bmatrix}\nf(i - 1, 1) & f(i - 1, 2) & \\cdots & f(i - 1, 24) \\\\\n\\end{bmatrix}\n\\begin{bmatrix}\ndp(1, 1) & dp(1, 2) & \\cdots & dp(1, 24) \\\\\ndp(2, 1) & dp(2, 2) & \\cdots & dp(2, 24) \\\\\n\\vdots & \\vdots & \\ddots & \\vdots \\\\\ndp(24, 1) & dp(24, 2) & \\cdots & dp(24, 24)\n\\end{bmatrix}\n$$\n\u663e\u7136 $ f(0, i) = [i = 24] $\uff0c\u521d\u59cb\u65f6\u6211\u4eec\u9ed8\u8ba4\u5176\u6700\u7ec8\u9009\u62e9\u7684\u53ea\u80fd\u662f $ 24 $\uff0c\u7b49\u4ef7\u4e8e\u4ece $ 0 $ \u5f00\u59cb\uff0c\u8fd9\u6837\u4e0d\u4f1a\u5bf9\u6211\u4eec\u7684\u7ed3\u679c\u9020\u6210\u5f71\u54cd\uff0c\u90a3\u4e48\u6700\u7ec8\u5f62\u5f0f\uff1a\n$$\n\\begin{bmatrix}\nf(n, 1) & f(n, 2) & \\cdots & f(n, 24) \\\\\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n0 & 0 & \\cdots & 1 \\\\\n\\end{bmatrix}\n\\begin{bmatrix}\ndp(1, 1) & dp(1, 2) & \\cdots & dp(1, 24) \\\\\ndp(2, 1) & dp(2, 2) & \\cdots & dp(2, 24) \\\\\n\\vdots & \\vdots & \\ddots & \\vdots \\\\\ndp(24, 1) & dp(24, 2) & \\cdots & dp(24, 24)\n\\end{bmatrix}^n\n$$\n\u7b54\u6848\u7edf\u8ba1\u4e00\u4e0b\u6240\u6709 $ i $ \u5904\u662f Aoki \u7684 $ f(n, i) $ \u4e4b\u548c\u5373\u53ef\uff0c\u53ef\u4ee5\u77e9\u9635\u5feb\u901f\u5e42\u4f18\u5316\uff0c\u4ee4 $ d = 24 $\uff0c\u5219\u590d\u6742\u5ea6 $ O(d^3 \\log n) $\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\n\n## Code\n\n```cpp\n#define _USE_MATH_DEFINES\n#include <bits/stdc++.h>\n\n#define PI M_PI\n#define E M_E\n#define npt nullptr\n#define SON i->to\n#define OPNEW void* operator new(size_t)\n#define ROPNEW void* Edge::operator new(size_t){static Edge* P = ed; return P++;}\n#define ROPNEW_NODE void* Node::operator new(size_t){static Node* P = nd; return P++;}\n\nusing namespace std;\n\nmt19937 rnd(random_device{}());\nint rndd(int l, int r){return rnd() % (r - l + 1) + l;}\nbool rnddd(int x){return rndd(1, 100) <= x;}\n\ntypedef unsigned int uint;\ntypedef unsigned long long unll;\ntypedef long long ll;\ntypedef long double ld;\n\n#define MOD (998244353ll)\n\ntemplate < typename T = int >\ninline T read(void);\n\nll N;\nll Taka, Aoki;\nll p[30];\nll P(1);\nll ansv(0);\nll inv100;\nll dp[30][30];\nbitset < 30 > belong;\n\nll qpow(ll a, ll b){\n    ll ret(1), mul(a);\n    while(b){\n        if(b & 1)ret = ret * mul % MOD;\n        b >>= 1;\n        mul = mul * mul % MOD;\n    }return ret;\n}\n\nclass Matrix{\nprivate:\n    int siz;\n    ll v[30][30];\npublic:\n    Matrix(int len = 24, int pat = 0){\n        siz = len;\n        for(int i = 0; i < siz; ++i)\n            for(int j = 0; j < siz; ++j)\n                v[i][j] = 0;\n        switch(pat){\n            case 1:{\n                for(int i = 0; i < siz; ++i)v[i][i] = 1;\n                break;\n            }\n            case 2:{\n                v[0][siz - 1] = 1;\n                break;\n            }\n            case 3:{\n                for(int i = 1; i <= siz; ++i)\n                    for(int j = 1; j <= siz; ++j)\n                        v[i - 1][j - 1] = dp[i][j];\n                break;\n            }\n            default: break;\n        }\n    }\n    friend Matrix operator * (const Matrix &a, const Matrix &b){\n        Matrix ret(24);\n        for(int i = 0; i < 24; ++i)\n            for(int j = 0; j < 24; ++j)\n                for(int k = 0; k < 24; ++k)\n                    (ret.v[i][j] += a.v[i][k] * b.v[k][j] % MOD) %= MOD;\n        return ret;\n    }\n    void SetAns(void){\n        for(int i = 0; i < 24; ++i)\n            if(belong[i + 1])(ansv += v[0][i]) %= MOD;\n    }\n    void Print(void){\n        printf(\"##########\\n\");\n        for(int i = 0; i < siz; ++i)\n            for(int j = 0; j < siz; ++j)\n                printf(\"%lld%c\", v[i][j], j == siz - 1 ? '\\n' : ' ');\n        printf(\"##########\\n\");\n    }\n}ans(24, 2);\n\nMatrix qpow(Matrix a, ll b){\n    Matrix ret(24, 1), mul(a);\n    while(b){\n        if(b & 1)ret = ret * mul;\n        b >>= 1;\n        mul = mul * mul;\n    }return ret;\n}\n\nint main(){\n    inv100 = qpow(100, MOD - 2);\n    N = read < ll >(), Taka = read(), Aoki = read();\n    for(int i = 1; i <= 24; ++i){\n        char c = getchar(); while(!isalpha(c))c = getchar();\n        p[i] = c == 'T' ? Taka : Aoki, belong[i] = c == 'T' ? false : true;\n        (P *= (100 - p[i]) * inv100 % MOD) %= MOD;\n    }\n    for(int i = 1; i <= 24; ++i){\n        for(int j = 1; j <= 24; ++j){\n            ll R(1);\n            if(i < j)for(int k = i + 1; k <= j - 1; ++k)(R *= (100 - p[k]) * inv100 % MOD) %= MOD;\n            else{\n                for(int k = i + 1; k <= 24; ++k)(R *= (100 - p[k]) * inv100 % MOD) %= MOD;\n                for(int k = 1; k <= j - 1; ++k)(R *= (100 - p[k]) * inv100 % MOD) %= MOD;\n            }\n            dp[i][j] = R * (p[j] * inv100 % MOD) % MOD * qpow((1 - P + MOD) % MOD, MOD - 2) % MOD;\n        }\n    }\n    Matrix base(24, 3);\n    (ans * qpow(base, N)).SetAns();\n    printf(\"%lld\\n\", ansv);\n    fprintf(stderr, \"Time: %.6lf\\n\", (double)clock() / CLOCKS_PER_SEC);\n    return 0;\n}\n\ntemplate < typename T >\ninline T read(void){\n    T ret(0);\n    int flag(1);\n    char c = getchar();\n    while(c != '-' && !isdigit(c))c = getchar();\n    if(c == '-')flag = -1, c = getchar();\n    while(isdigit(c)){\n        ret *= 10;\n        ret += int(c - '0');\n        c = getchar();\n    }\n    ret *= flag;\n    return ret;\n}\n```\n\n## UPD\n\nupdate-2023_02_09 \u521d\u7a3f",
        "postTime": 1675931946,
        "uid": 362938,
        "name": "Tsawke",
        "ccfLevel": 6,
        "title": "[ABC271G] Access Counter \u9898\u89e3"
    },
    {
        "content": "\u4e00\u773c\u77e9\u9635\u52a0\u901f\uff0c\u4f46\u662f\u8865\u9898\u7684\u65f6\u5019\u5bf9\u4e8e\u8f6c\u79fb\u65b9\u7a0b\u7684\u6784\u9020\u60f3\u4e86\u597d\u4e45\u3002\n\n\u6ce8\u610f\u5230\u6211\u4eec\u8f6c\u79fb\u7684\u65f6\u5019\u5176\u5b9e\u53ea\u5173\u6ce8\u4e24\u70b9\uff1a\u5f53\u524d\u6240\u5728\u7684\u5c0f\u65f6\uff0c\u4ee5\u53ca\u5f53\u524d access \u4e86\u51e0\u6b21\u3002\n\n\u6240\u4ee5\u6211\u4eec\u4e0d\u59a8\u8bbe $dp_{i,j}$ \u8868\u793a\u5f53\u524d access \u4e86 $i$ \u6b21\uff0c\u4e14\u6700\u540e\u4e00\u6b21 access \u662f\u5728\u7b2c $j$ \u4e2a\u5c0f\u65f6\u8fdb\u884c\u7684\u3002\u800c $i$ \u8fd9\u4e00\u7ef4\u6211\u4eec\u662f\u8981\u77e9\u9635\u52a0\u901f\u8f6c\u79fb\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651 $j$ \u8fd9\u4e00\u7ef4\u600e\u4e48\u8f6c\u79fb\u3002\u4e5f\u5c31\u662f\uff0c\u5982\u679c\u4ece\u7b2c $i$ \u4e2a\u5c0f\u65f6 access \u4e4b\u540e\uff0c\u4e00\u76f4\u4e0d access\uff0c\u76f4\u5230\u4e0d\u77e5\u9053\u591a\u5c11\u5929\u4e4b\u540e\u53c8\u5728\u7b2c $j$ \u4e2a\u5c0f\u65f6 access \u4e86\u7684\u6982\u7387\u662f\u591a\u5c11\u3002\n\n\u6211\u4eec\u4e0d\u59a8\u8bbe $p_i$ \u4e3a\u7b2c $i$ \u4e2a\u5c0f\u65f6 access \u7684\u6982\u7387\uff0c$s_{i,j}$ \u4e3a\u4ece\u7b2c $i$ \u4e2a\u5c0f\u65f6\u8f6c\u79fb\u5230\u7b2c $j$ \u4e2a\u5c0f\u65f6\u7684\u6982\u7387\uff0c$n$ \u4e3a\u8fc7\u53bb\u7684\u6574\u6570\u5929\u6570\uff0c$sum_{i,j}$ \u4e3a\u4ece\u7b2c $i$ \u4e2a\u5c0f\u65f6\u5230\u7b2c $j$ \u4e2a\u5c0f\u65f6\u90fd\u4e0d access \u7684\u6982\u7387\u3002\u5219\u6709\u65b9\u7a0b\uff1a\n$$\ns_{i,j}=\\sum_{n=0}^{+\\infty}sum_{i+1,j-1}p_i\\times sum_{1,24}^n\n$$\n\u4e8e\u662f\u5c31\u662f\u4e00\u4e2a\u7b49\u6bd4\u6570\u5217\u6c42\u548c\u7684\u5f62\u5f0f\uff0c\u8f6c\u5316\u4e00\u4e0b\u5c31\u662f\uff1a\n$$\ns_{i,j}=\\dfrac{sum_{i+1,j-1}p_i}{1-sum_{1,n}}\n$$\n\u4e8e\u662f\u628a\u5b83\u6254\u8fdb\u77e9\u9635\uff0c\u5957\u8def\u77e9\u9635\u52a0\u901f\u5373\u53ef\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n#define int long long\nconst int N=24;\nconst int mod=998244353;\nconst int hun=828542813;\nint n,q,p,s=1;\nchar in[N+1];\nstruct node{\n\tint a[N][N];\n\tnode(){\n\t\tmemset(a,0,sizeof(a));\n\t}\n\tvoid init(){\n\t\tfor (int i=0;i<N;i++)\n\t\t\ta[i][i]=1;\n\t}\n}S,Z;\nnode operator *(const node&x,const node&y){\n\tnode z;\n\tfor (int k=0;k<N;k++)\n\t\tfor (int i=0;i<N;i++)\n\t\t\tfor (int j=0;j<N;j++)\n\t\t\t\tz.a[i][j]=(z.a[i][j]+x.a[i][k]*y.a[k][j]%mod)%mod;\n\treturn z;\n}\nll read(){\n\tll w=0,f=1;\n\tchar c=getchar();\n\twhile (c>'9'||c<'0'){\n\t\tif (c=='-') f=-1;\n\t\tc=getchar();\n\t}\n\twhile (c>='0'&&c<='9'){\n\t\tw=(w<<3)+(w<<1)+(c^48);\n\t\tc=getchar();\n\t}\n\treturn w*f;\n}\nll ksm(ll x,ll y){\n\tll ans=1;\n\twhile (y){\n\t\tif (y&1) ans=ans*x%mod;\n\t\tx=x*x%mod;\n\t\ty>>=1;\n\t}\n\treturn ans;\n}\nll inv(ll x){\n\tx=(x%mod+mod)%mod;\n\treturn ksm(x,mod-2);\n}\nll chan(int pos,bool flag){\n\tif (!flag){\n\t\tif (in[pos]=='T') return q*hun%mod;\n\t\treturn p*hun%mod;\t\t\n\t}else{\n\t\tif (in[pos]=='T') return (100-q)*hun%mod;\n\t\treturn (100-p)*hun%mod;\n\t}\n}\nnode ksm_(node x,int y){\n\tnode ans;\n\tans.init();\n\twhile (y){\n\t\tif (y&1) ans=ans*x;\n\t\tx=x*x;\n\t\ty>>=1;\n\t}\n\treturn ans;\n}\nsigned main(){\n\tn=read(),q=read(),p=read();\n\tscanf(\"%s\",in);\n\tfor (int i=0;i<N;i++){\n\t\ts=s*chan(i,1)%mod;\n\t}\n\tfor (int i=0;i<N;i++){\n\t\tfor (int j=0;j<N;j++){\n\t\t\tif (i<j){\n\t\t\t\tint now=1;\n\t\t\t\tfor (int k=i+1;k<j;k++) now=now*chan(k,1)%mod;\n\t\t\t\tnow=now*chan(j,0)%mod;\n\t\t\t\tZ.a[i][j]=now*inv(1-s)%mod;\n\t\t\t}else{\n\t\t\t\tint now=1;\n\t\t\t\tfor (int k=i+1;k<N;k++) now=now*chan(k,1)%mod;\n\t\t\t\tfor (int k=0;k<j;k++) now=now*chan(k,1)%mod;\n\t\t\t\tnow=now*chan(j,0)%mod;\n\t\t\t\tZ.a[i][j]=now*inv(1-s)%mod;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i=0;i<N;i++)\n\t\tS.a[0][i]=Z.a[N-1][i];\n\tZ=ksm_(Z,n-1);\n\tS=S*Z;\n\tint ans=0;\n\tfor (int i=0;i<N;i++){\n\t\tif (in[i]=='A') ans=(ans+S.a[0][i])%mod;\n\t}\n\tcout<<ans<<'\\n';\n\treturn 0;\n}\n```",
        "postTime": 1667518114,
        "uid": 257621,
        "name": "\u7ffc\u5fb7\u5929\u5c0a",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 [ABC271G] Access Counter"
    }
]