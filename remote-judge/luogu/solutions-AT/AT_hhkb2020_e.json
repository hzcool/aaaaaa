[
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/AT_hhkb2020_e)\n\n[\u53ef\u80fd\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://chenyu-w.github.io/2022/11/05/AT-HHKB2020-E%20Lamps/)\n\n## \u524d\u8a00\n\n\u6691\u5047\u96c6\u8bad\u7684\u4e00\u4e2a\u9898\uff0c\u73b0\u5728\u770b\u6765\u975e\u5e38\u4e00\u773c\u5f53\u65f6\u7adf\u7136\u4e0d\u4f1a\u505a\uff0c\u6211\u592a\u83dc\u4e86\u3002\n\n### \u524d\u7f6e\u829d\u58eb\n\n\u6839\u672c\u6ca1\u6709\u3002\n\n\n## \u5206\u6790\n\n\u679a\u4e3e\u6240\u6709 $2^k$ \u79cd\u65b9\u6848\u663e\u7136\u662f\u56f0\u96be\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u6bcf\u4e2a\u4f4d\u7f6e $(i, j)$ \u5bf9\u7b54\u6848\u7684\u8d21\u732e\u3002\n\n\u6839\u636e\u9898\u610f\uff0c$(i, j)$ \u8fd9\u4e2a\u4f4d\u7f6e\u5728\u67d0\u79cd\u6446\u653e\u65b9\u6848\u4e0b\u80fd\u5bf9\u7b54\u6848\u9020\u6210\u8d21\u732e\u5f53\u4e14\u4ec5\u5f53 $(i, j)$ \u88ab\u81f3\u5c11\u4e00\u76cf\u706f\u7167\u5230\uff0c\u8fd9\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u60f3\u5230\u4e00\u4e2a\u7ecf\u5178\u7684\u5bb9\u65a5\u6a21\u578b\uff0c\u5c31\u662f **\u81f3\u5c11\u4e00\u4e2a = \u5168\u96c6 - \u4e00\u4e2a\u90fd\u6ca1\u6709**\uff0c\u5728\u8fd9\u9898\u4e2d\uff0c\u6211\u4eec\u8bbe $f(i, j)$ \u4e3a $(i, j)$ \u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u6839\u636e\u5bb9\u65a5\uff0c\u6211\u4eec\u6709\n$$\nf(i, j) = 2^k - g(i, j)\n$$\n\u5176\u4e2d $g(i, j)$ \u4e3a $(i, j)$ \u4e0d\u80fd\u88ab\u7167\u5230\u7684\u65b9\u6848\u6570\uff0c\u7136\u540e\u6211\u4eec\u8f6c\u800c\u6c42 $g(i, j)$\u3002\n\n\u6211\u4eec\u9884\u5904\u7406 $l_{i, j}, r_{i, j}, u_{i, j}, d_{i, j}$\uff0c\u5206\u522b\u8868\u793a\u5de6\u4fa7\u79bb $(i, j)$ \u7684\u6700\u8fd1\u5899\u7684\u7eb5\u5750\u6807\uff0c\u53f3\u4fa7\u79bb $(i, j)$ \u7684\u6700\u8fd1\u5899\u7684\u7eb5\u5750\u6807\uff0c\u4e0a\u65b9\u79bb $(i, j)$ \u6700\u8fd1\u5899\u7684\u6a2a\u5750\u6807\uff0c\u4e0b\u65b9\u79bb $(i, j)$ \u6700\u8fd1\u5899\u7684\u6a2a\u5750\u6807\uff0c\u4e0d\u96be\u53d1\u73b0\u56db\u4e2a\u4e1c\u897f\u6211\u4eec\u90fd\u53ef\u4ee5 $O(nm)$ \u9884\u5904\u7406\uff0c\u5904\u7406\u5b8c\u540e\uff0c\u6211\u4eec\u5f97\u5230\u80fd\u628a $(i, j)$ \u7684\u7167\u4eae\u7684\u683c\u5b50\u6570\u91cf\u4e3a\n$$\np_{i, j} = (j - l_{i, j} - 1) + (r_{i, j} - j - 1) + (i - u_{i, j} - 1) + (d_{i, j} - i - 1) + 1\n$$\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230 $g(i, j) = 2^{k - p_{i, j}}$\uff0c\u90a3\u4e48\u6700\u7ec8\u6211\u4eec\u5c31\u53ef\u4ee5\u6c42\u51fa $f(i, j)$ \u4e86\uff0c\u6700\u540e\u5bf9\u6240\u6709\u5408\u6cd5\u7684 $f(i, j)$ \u6c42\u548c\u5373\u53ef\u3002\n\n## \u4ee3\u7801\n\n```c++\n#include <bits/stdc++.h>\n\nusing namespace std;\nconst int N = 2010, mod = 1e9 + 7;\nchar a[N][N];\nint l[N][N], r[N][N], u[N][N], d[N][N];\n\ninline int read()\n{\n    int x = 0, y = 1; char c = getchar();\n    while (c < '0' || c > '9') {if (c == '-') y = -1; c = getchar();}\n    while (c >= '0' && c <= '9') x = x * 10 + c - '0', c = getchar();\n    return x * y;\n}\n\ninline int qpow(int a, int b)\n{\n    int res = 1;\n    while (b)\n    {\n        if (b & 1) res = 1ll * res * a % mod;\n        a = 1ll * a * a % mod;\n        b >>= 1;\n    }\n    return res;\n}\n\ninline int get_mod(int x)\n{\n    return (x % mod + mod) % mod;\n}\n\nint main()\n{\n    int n = read(), m = read();\n    int k = 0;\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= m; j++)    \n            cin >> a[i][j], k += a[i][j] == '.';\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= m; j++)\n            l[i][j] = a[i][j] == '#' ? j : l[i][j - 1];\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= m; j++)\n            u[i][j] = a[i][j] == '#' ? i : u[i - 1][j];\n    for (int i = 1; i <= n; i++) r[i][m + 1] = m + 1;\n    for (int i = n; i >= 1; i--)\n        for (int j = m; j >= 1; j--)\n            r[i][j] = a[i][j] == '#' ? j : r[i][j + 1];\n    for (int i = 1; i <= m; i++) d[n + 1][i] = n + 1;\n    for (int i = n; i >= 1; i--)\n        for (int j = m; j >= 1; j--)\n            d[i][j] = a[i][j] == '#' ? i : d[i + 1][j];\n    int res = 0;\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= m; j++)\n        {\n            if (a[i][j] == '#') continue;\n            int p = (j - l[i][j] - 1) + (r[i][j] - j - 1) + (i - u[i][j] - 1) + (d[i][j] - i - 1) + 1;\n            res = (res + get_mod(qpow(2, k) - qpow(2, k - p))) % mod;\n        }\n    printf(\"%d\\n\", res);\n    return 0;\n}\n```\n\n\n\n\n\n",
        "postTime": 1667638687,
        "uid": 587248,
        "name": "wcywcywcywcy",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011AT_HHKB2020_E"
    }
]