[
    {
        "content": "\u8003\u8651\u7ffb\u8f6c $u \\rightarrow v$ \u8fd9\u6761\u8fb9\u5bf9\u4e8e\u5f3a\u8fde\u901a\u5206\u91cf\u6570\u91cf\u7684\u5f71\u54cd\uff0c\u53ea\u9700\u8981\u8003\u8651\u4e0b\u9762\u4e24\u4e2a\u56e0\u7d20\u5c31\u884c\u4e86\uff1a\n\n1. \u539f\u56fe\u4e2d\u5b58\u5728\u4e00\u6761 $v \\rightarrow u$ \u7684\u8def\u5f84\u3002\n2. \u539f\u56fe\u4e2d\u5b58\u5728\u4e00\u6761 $u \\rightarrow v$ \u7684\u8def\u5f84\uff0c\u4e14\u4e0d\u542b\u4e0a\u9762\u7684\u90a3\u6761\u8fb9\u3002\n\n\u82e5\u4e0a\u8ff0\u4e24\u4e2a\u56e0\u7d20\u4e2d\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u6ee1\u8db3\uff0c\u5219\u5f3a\u8fde\u901a\u5206\u91cf\u6570\u91cf\u4f1a\u53d8\u5316\u3002\n\n\u8003\u8651\u539f\u56e0\uff1a\n\n1. \u82e5\u4e24\u4e2a\u6761\u4ef6\u5747\u4e0d\u6ee1\u8db3\uff1a\u5219\u8bf4\u660e\u8fd9\u4e2a\u70b9\u4e0d\u7ba1\u6b63\u7740\u8fd8\u662f\u53cd\u7740\uff0c\u90fd\u4e0d\u4f1a\u6709\u5f3a\u8fde\u901a\u5206\u91cf\u4ea7\u751f\uff0c\u5219\u4e0d\u4f1a\u53d8\u5316\u3002\n2. \u82e5\u4e24\u4e2a\u6761\u4ef6\u5747\u6ee1\u8db3\uff1a\u5219\u8fd9\u4e24\u6761\u8def\u5f84\u62fc\u8d77\u6765\u5c31\u662f\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u7f29\u70b9\u4e4b\u540e\u548c $u \\rightarrow v$ \u8fd9\u6761\u8fb9\u7684\u65b9\u5411\u6ca1\u6709\u5173\u7cfb\u4e86\uff0c\u6240\u4ee5\u4e5f\u4e0d\u4f1a\u53d8\u5316\u3002\n3. \u82e5\u4ec5\u6709\u4e00\u4e2a\u6761\u4ef6\u6ee1\u8db3\uff0c\u5219\u8bf4\u660e\uff0c\u5982\u679c\u6ca1\u6709 $u \\rightarrow v$ \u8fd9\u6761\u8fb9\uff0c\u5219\u539f\u56fe\u4e2d $u$ \u548c $v$ \u4e00\u5b9a\u4e0d\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u3002\u800c\u5982\u679c\u6709\u4e86 $u \\rightarrow v$ \u6216\u8005 $v \\rightarrow u$ \u8fd9\u6761\u8fb9\uff0c\u5219\u5206\u522b\u7ed3\u5408\u6761\u4ef6 $1$ \u548c\u6761\u4ef6 $2$\uff0c\u5c31\u80fd\u8ba9 $u$ \u548c $v$ \u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\uff0c\u5219\u8bf4\u660e\u7ffb\u8f6c\u8fb9\u4e00\u5b9a\u4f1a\u8ba9\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6570\u91cf\u6539\u53d8\u3002\n\n\u7136\u540e\u8003\u8651\u5982\u4f55\u7edf\u8ba1\u3002\n\n\u9996\u5148\u7b2c\u4e00\u4e2a\u6761\u4ef6\u76f4\u63a5 $O(NM)$ \u7206\u641c\u7edf\u8ba1\u5c31\u884c\u4e86\u3002\n\n\u7b2c\u4e8c\u4e2a\u6761\u4ef6\u4e4d\u4e00\u770b\u6709\u70b9\u8fa3\u624b\uff0c\u4f46\u662f\u4ed4\u7ec6\u60f3\u60f3\u5c31\u4f1a\u53d1\u73b0\uff0c\u5b83\u672c\u8d28\u4e0a\u5c31\u53ea\u662f\u6c42\uff1a$u \\rightarrow v$ \u7684\u8def\u5f84\u4e2d\uff0c\u8fd9\u6761\u8fb9\u662f\u4e0d\u662f\u5fc5\u7ecf\u8fb9\u3002\u4f60\u5c31\u8003\u8651\u4ece $x$ \u5f00\u59cb DFS\uff0c\u8bb0\u5f55 $x$ \u7ecf\u8fc7\u7684\u70b9\uff0c\u88ab\u904d\u5386\u5230\u7684\u65f6\u5019 $x$ \u7684\u51fa\u8fb9\u7684\u6807\u53f7\u3002\u7136\u540e\u8003\u8651\u5c06 $x$ \u7684\u51fa\u8fb9\u987a\u5e8f\u53cd\u8fc7\u6765\u518d DFS \u4e00\u904d\u3002\u5982\u679c\u4e24\u6b21\u904d\u5386\u5230\u7684\u65f6\u5019\u8bb0\u5f55\u4e0b\u6765\u7684\u6807\u53f7\u4e0d\u540c\uff0c\u5219\u8bf4\u660e $u \\rightarrow v$ \u5e76\u4e0d\u662f\u5fc5\u7ecf\u8fb9\u3002\u53cd\u4e4b\u5219\u4e00\u5b9a\u662f\u5fc5\u7ecf\u8fb9\u3002\n\n\u7136\u540e\u5c31\u679a\u4e3e\u6bcf\u6761\u8fb9\u778e\u5224\u5224\u5c31\u884c\u4e86\u3002\n\n${\\rm Code}$\uff1a\n\n```cpp\nconst int MAXN = 1010;\nconst int MAXM = 200010;\n\nstruct Edge {\n\tint u, v;\n\n\tEdge() {}\n\tEdge(int u, int v):u(u), v(v) {}\n}E[MAXM];\n\nvector<int>to[MAXN];\n\nint Mark[MAXN];\nbitset<MAXN>vis;\nbool G1[MAXN][MAXN];\nbool G2[MAXN][MAXN];\n\ninline void dfs1(int x, int st) {\n\tG1[st][x] = 1, vis.set(x);\n\tfor(auto u : to[x]) if(!vis[u]) dfs1(u, st);\n}\n\ninline void dfs2(int x, int col, int k, int st) {\n\tif(k) G2[st][x] = Mark[x] != col;\n\telse Mark[x] = col; vis.set(x);\n\tfor(auto u : to[x]) if(!vis[u]) dfs2(u, col, k, st);\n}\n\nint main() {\n\tint n = ri, m = ri;\n\tfor(int i = 1; i <= m; i++) {\n\t\tint u = ri, v = ri;\n\t\tto[u].push_back(v);\n\t\tE[i] = Edge(u, v);\n\t}\n\tfor(int i = 1; i <= n; i++) vis.reset(), dfs1(i, i);\n\tfor(int i = 1; i <= n; i++) {\n\t\tvis.reset(), vis.set(i);\n\t\tmemset(Mark, 0, sizeof(Mark));\n\t\tint d = to[i].size();\n\t\tfor(int j = 0; j < d; j++) if(!vis[to[i][j]]) dfs2(to[i][j], j + 1, 0, i);\n\t\tvis.reset(), vis.set(i);\n\t\tfor(int j = d - 1; ~j; --j) if(!vis[to[i][j]]) dfs2(to[i][j], j + 1, 1, i);\n\t}\n\tfor(int i = 1; i <= m; i++)\n\t\tputs(G1[E[i].v][E[i].u] ^ G2[E[i].u][E[i].v] ? \"diff\" : \"same\");\n\treturn 0;\n}\n```",
        "postTime": 1582903036,
        "uid": 20782,
        "name": "CYJian",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 AT3945 \u3010[ARC092D] Two Faced Edges\u3011"
    },
    {
        "content": "\u4e00\u79cd\u590d\u6742\u5ea6 $O(\\dfrac{n^3}{\\omega}+m)$ \u7684\u590d\u6742\u5ea6\u66f4\u4f18\u79c0\u7684\u505a\u6cd5\u3002\u76ee\u524d rank 1\u3002\n\n------\n\n\u9996\u5148\uff0c\u6211\u4eec\u4e0d\u59a8\u8003\u8651 `DAG` \u60c5\u5f62\u7684\u505a\u6cd5\uff1a\u82e5\u539f\u56fe\u662f `DAG` \uff0c\u7ffb\u8f6c\u4e00\u6761\u8fb9\u663e\u7136\u4e0d\u4f1a\u589e\u52a0\u65b0\u7684\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u53ea\u6709\u53ef\u80fd\u51cf\u5c11\u5f3a\u8fde\u901a\u5206\u91cf\u6570\u91cf\u3002\n\n\u5047\u5982\u6211\u4eec\u7ffb\u8f6c\u4e86\u8fb9 $u\\rightarrow v$\uff0c\u8fd9\u65f6\uff0c\u6211\u4eec\u660e\u663e\u53ef\u4ee5\u53d1\u73b0\uff0c\u5f53\u4e14\u4ec5\u5f53\u5728\u5220\u53bb\u8fb9 $u\\rightarrow v$ \u540e\u5f97\u5230\u7684\u56fe\u4e0a $u$ \u4ecd\u53ef\u8fbe $v$\uff08\u628a\u8fd9\u79cd\u5173\u7cfb\u8bb0\u4f5c $u\\rightsquigarrow v$\uff09\u65f6\uff0c\u7ffb\u8f6c\u540e\u51fa\u73b0\u4e86\u8fb9 $v\\rightarrow u$ \uff0c\u5219 $u\\rightsquigarrow v,v\\rightarrow u$ \uff0c\u4e8c\u8005\u6210\u73af\uff0c\u589e\u52a0\u4e86\u5f3a\u8fde\u901a\u5206\u91cf\u3002\n\n\u4e0b\u9762\u6211\u4eec\u8003\u8651\u975e `DAG` \u60c5\u5f62\u3002\u5219\u6b64\u65f6\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u60f3\u6cd5\u662f\u8dd1 `Tarjan` \u6c42\u5f3a\u8fde\u901a\u3002\u5219\u5982\u679c $u\\rightarrow v$ \u8fd9\u6761\u8fb9\u662f\u8fde\u63a5\u4e24\u4e2a\u4e0d\u540c\u5206\u91cf\u95f4\u7684\u8fb9\uff0c\u663e\u7136\u6211\u4eec `DAG` \u65f6\u5206\u6790\u4ecd\u7136\u9002\u7528\u3002\u4e8e\u662f\u6211\u4eec\u4ec5\u9700\u8003\u8651\u540c\u4e00\u4e2a\u5206\u91cf\u5185\u90e8\u7684\u8fb9\u3002\n\n\u5f15\u74061. \u7ffb\u8f6c\u8fd9\u6837\u7684\u8fb9 $u\\rightarrow v$ \u4e0d\u4f1a\u51fa\u73b0\u65b0\u5206\u91cf\u3002\n\n\u6211\u4eec\u8003\u8651\u5728\u539f\u5206\u91cf\u5185\u90e8\uff0c\u56e0\u4e3a\u5176\u5f3a\u8fde\u901a\uff0c\u6545\u5fc5\u5b58\u5728\u4e00\u6761\u5b8c\u5168\u5728\u5206\u91cf\u5185\u90e8\u7684\u8def\u5f84 $v\\rightsquigarrow u$\u3002\u540c\u65f6\uff0c\u56e0\u4e3a\u5176\u51fa\u73b0\u4e86\u65b0\u5206\u91cf\uff0c\u6545\u5728\u5206\u91cf\u5916\u8fd8\u5f97\u5b58\u5728\u4e00\u6761\u8def\u5f84 $u\\rightsquigarrow v$\uff0c\u4e8e\u662f\u8fd9\u6837\u7684\u8bdd\uff0c$v\\rightsquigarrow u$ \u4e0e $u\\rightsquigarrow v$ \u8fd9\u4e24\u6761\u8def\u5f84\u6240\u5904\u7684\u5206\u91cf\u5b8c\u5168\u53ef\u4ee5\u5e76\u4f5c\u4e00\u4e2a\u5927\u5206\u91cf\uff0c\u4e0e\u5b83\u4eec\u4e0d\u5728\u540c\u4e00\u4e2a\u5206\u91cf\u5185\u7684\u524d\u63d0\u76f8\u6096\u3002\n\n\u4e8e\u662f\u6211\u4eec\u4ec5\u9700\u8003\u8651\u5206\u91cf\u5185\u90e8\u7684\u60c5\u5f62\u3002\u663e\u7136\uff0c\u82e5\u6709 $u\\not\\rightsquigarrow v$\uff0c\u5373 $u$ \u65e0\u6cd5\u4e0d\u901a\u8fc7 $u\\rightarrow v$ \u800c\u5230\u8fbe $v$\uff0c\u5219\u7ffb\u8f6c\u540e\u8be5\u5927\u5206\u91cf\u4e00\u5b9a\u4f1a\u5206\u88c2\uff0c\u4e5f\u5373\u5206\u91cf\u6570\u4e00\u5b9a\u4f1a\u589e\u591a\uff1b\u5426\u5219\uff0c\u5219\u8be5\u5927\u5206\u91cf\u4e00\u5b9a\u4e0d\u4f1a\u5206\u88c2\uff0c\u56e0\u4e3a\u51fa\u73b0\u4e86\u65b0\u7684\u73af\u5c06\u6574\u4e2a\u5206\u91cf\u8054\u7cfb\u5728\u4e00\u8d77\u3002\n\n\u4e8e\u662f\u6211\u4eec\u73b0\u5728\u53ea\u9700\u77e5\u9053\u6bcf\u6761\u8fb9\u662f\u5426\u6709 $u\\rightsquigarrow v$ \u5173\u7cfb\uff0c\u4ee5\u53ca\u8be5\u8fb9\u4e24\u7aef\u662f\u5426\u4f4d\u4e8e\u540c\u4e00\u4e2a `SCC` \u91cc\uff0c\u5c31\u80fd\u5224\u65ad\u51fa\u5176\u662f\u5426\u7ffb\u8f6c\u540e\u5206\u91cf\u6570\u4f1a\u53d8\u5316\u3002\n\n\u8003\u8651\u6211\u4eec\u4e00\u6b21\u6027\u6c42\u51fa\u4ece\u4e00\u4e2a\u56fa\u5b9a\u70b9 $u$ \u51fa\u53d1\u7684\u6240\u6709 $u\\rightarrow v$ \u7684 $u\\rightsquigarrow v$ \u5173\u7cfb\u662f\u5426\u6210\u7acb\u3002\n\n\u6211\u4eec\u8003\u8651\u5c06\u6240\u6709\u7684 $v$ \u4f9d\u6b21\u7f16\u53f7\u4e3a $v_1,v_2,\\dots,v_k$\u3002\u5219\u5bf9\u4e8e\u67d0\u4e2a $v_i$\uff0c$u\\rightsquigarrow v_i$\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728\u4e00\u4e2a $j\\neq i$ \u4e14 $v_j\\rightsquigarrow v_i$\u3002\n\n\u8003\u8651\u987a\u6b21\u4ece\u6bcf\u4e2a $v_i$ \u51fa\u53d1\uff0c\u904d\u5386\u6574\u5f20\u56fe\u3002\u663e\u7136\uff0c\u82e5\u904d\u5386\u5230\u67d0\u4e2a $v_i$ \u65f6\u53d1\u73b0\u5b83\u5df2\u7ecf\u88ab\u8bbf\u95ee\u8fc7\u4e86\uff0c\u5219\u8bc1\u660e\u5b58\u5728\u4e0a\u8ff0\u7684 $v_j\\rightsquigarrow v_i$\u3002\u5426\u5219\uff0c\u5c31\u76f4\u63a5bfs\u904d\u5386\u5373\u53ef\u3002\n\n\u4e0a\u8ff0\u8fc7\u7a0b\u53ea\u5904\u7406\u4e86 $j<i$\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u8981\u5012\u5e8f\u518d\u904d\u5386\u4e00\u6b21\u3002\n\n\u663e\u7136\uff0c\u5355\u6b21\u5904\u7406\u67d0\u4e2a $u$ \u65f6\uff0c\u4e0a\u8ff0\u7b97\u6cd5\u590d\u6742\u5ea6\u4e3a $O(n+m)$\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u6bcf\u6761\u8fb9\u90fd\u6700\u591a\u88ab\u8bbf\u95ee $1$ \u6b21\u3002\u800c\u8981\u5904\u7406\u5168\u90e8 $u$\uff0c\u56e0\u6b64\u590d\u6742\u5ea6 $O(nm)$\u3002\n\n\u867d\u7136\u6b64\u65f6\u5df2\u7ecf\u53ef\u4ee5\u901a\u8fc7\uff0c\u4f46\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f18\u5316\uff01\u8003\u8651 `bitset` \u4f18\u5316\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u4e0a\u8ff0\u7b97\u6cd5\u7684\u74f6\u9888\u5728\u4e8e `bfs` \u65f6\uff0c\u4ece\u67d0\u4e2a\u8282\u70b9\u51fa\u53d1\u8981\u8bbf\u95ee\u5176\u6240\u6709\u51fa\u8fb9\uff0c\u4e0d\u7ba1\u5176\u53e6\u4e00\u7aef\u70b9\u8bbf\u95ee\u4e0e\u5426\u3002\n\n\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u8bbf\u95ee\uff0c\u6211\u4eec\u4ee4\u4e00\u4e2a `bitset` $S$ \u8868\u793a\u5f53\u524d\u6240\u6709\u70b9\u662f\u5426\u88ab\u8bbf\u95ee\u8fc7\uff0c\u662f\u5219\u4e3a $0$\uff0c\u5426\u5219\u4e3a $1$\u3002\n\n\u82e5\u6211\u4eec\u5f53\u524d\u4ece $x$ \u51fa\u53d1\u60f3\u904d\u5386\u5176\u51fa\u8fb9\uff0c\u4e0d\u59a8\u4ee4\u5176\u51fa\u8fb9\u7684 `bitset` \u662f $g_x$\uff0c\u5219\u6211\u4eec\u53ea\u9700\u904d\u5386 $g_x\\cap S$ \u4e2d\u7684\u6240\u6709\u5143\u7d20\u5373\u53ef\u3002\n\n\u904d\u5386 `bitset` \u4e2d\u6240\u6709\u5143\u7d20\u662f\u6709 $O(\\dfrac{n}{\\omega})$ \u7684\u505a\u6cd5\u7684\uff1a\n\n```cpp\nfor(int i=T._Find_first();i!=T.size();i=T._Find_next(i))\n```\n\n\u4e8e\u662f\u8fd9\u6837\uff0c\u6211\u4eec\u5728 `bfs` \u8fc7\u7a0b\u4e2d\u5c31\u4ec5\u904d\u5386\u4e86\u6240\u6709\u8fde\u63a5\u7740\u672a\u5230\u8fbe\u8282\u70b9\u7684\u8fb9\uff0c\u4e8e\u662f\u5355\u6b21\u590d\u6742\u5ea6\u5c31\u4ece $m$ \u53d8\u6210\u4e86 $\\dfrac{n^2}{\\omega}$\u3002\u904d\u5386 $n$ \u6b21\uff0c\u590d\u6742\u5ea6 $O(\\dfrac{n^3}{\\omega})$\u3002\n\n\u53e6\u5916\u518d\u52a0\u4e0a `Tarjan` \u7684 $O(n+m)$\uff0c\u590d\u6742\u5ea6 $O(\\dfrac{n^3}{\\omega}+m)$\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef bitset<1010> bs;\nint n,m,id[1010][1010],dfn[1010],low[1010],col[1010],c,tot,X[200100],Y[200100];\nbs g[1010];\nvector<int>v[1010];\nstack<int>s;\nbool ok[200100];\nvoid Tarjan(int x){\n\tdfn[x]=low[x]=tot++,s.push(x);\n\tfor(auto y:v[x]){\n\t\tif(dfn[y]==-1)Tarjan(y),low[x]=min(low[x],low[y]);\n\t\telse if(col[y]==-1)low[x]=min(low[x],dfn[y]);\n\t}\n\tif(low[x]!=dfn[x])return;\n\twhile(s.top()!=x)col[s.top()]=c,s.pop();\n\tcol[s.top()]=c,s.pop();\n\tc++;\n}\nbs S;\nqueue<int>q;\nvoid bfs(){\n\twhile(!q.empty()){\n\t\tint x=q.front();q.pop();\n\t\tbs T=S&g[x];\n\t\tfor(int i=T._Find_first();i!=T.size();i=T._Find_next(i))S.reset(i),q.push(i);\n\t}\n}\nvoid func(int x){\n\tS.set(),S.reset(x);\n\tfor(int y=0;y<n;y++){\n\t\tif(!id[x][y])continue;\n\t\tif(!S.test(y)){ok[id[x][y]]=true;continue;}\n\t\tS.reset(y),q.push(y);bfs();\n\t}\n\tS.set(),S.reset(x);\n\tfor(int y=n-1;y>=0;y--){\n\t\tif(!id[x][y])continue;\n\t\tif(!S.test(y)){ok[id[x][y]]=true;continue;}\n\t\tS.reset(y),q.push(y);bfs();\n\t}\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m),memset(dfn,-1,sizeof(dfn)),memset(low,-1,sizeof(low)),memset(col,-1,sizeof(col));\n\tfor(int i=1,x,y;i<=m;i++)scanf(\"%d%d\",&x,&y),x--,y--,id[x][y]=i,g[x].set(y),v[x].push_back(y),X[i]=x,Y[i]=y;\n\tfor(int i=0;i<n;i++)if(dfn[i]==-1)Tarjan(i);\n\tfor(int i=0;i<n;i++)func(i);\n\tfor(int i=1;i<=m;i++)puts((col[X[i]]==col[Y[i]])^ok[i]?\"diff\":\"same\");\n\treturn 0;\n}\n```\n\n",
        "postTime": 1614525412,
        "uid": 123369,
        "name": "xtx1092515503",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT3945 \u3010[ARC092D] Two Faced Edges\u3011"
    },
    {
        "content": "[link](https://www.luogu.com.cn/problem/AT3945)\n## \u9898\u89e3\n\u5047\u8bbe\u73b0\u5728\u9700\u8981\u5904\u7406 $u\\to v$ \u8fd9\u6761\u8fb9.\n\n\u5982\u679c $u$ \u672c\u8eab\u4e0d\u9700\u8981\u7ecf\u8fc7\u6b64\u8fb9\u5c31\u80fd\u5230\u8fbe $v$ \uff0c\u90a3\u4e48 $u\\to v$ \u8fd9\u6761\u8fb9\u4f3c\u4e4e\u5c31\u6ca1\u6709\u4ec0\u4e48\u4ef7\u503c\uff0c\u6362\u6210 $v\\rightarrow u$ \u540e\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u6570\u91cf\u53ea\u80fd\u5927\u4e8e\u539f\u6765\u7684\u6570\u91cf\u3002\n\n\u5982\u679c\u539f\u56fe\u5b58\u5728 $v \\to u$ \u7684\u8def\u5f84\uff0c\u6b64\u65f6\u53cd\u8fb9\u4f3c\u4e4e\u6ca1\u6709\u4ec0\u4e48\u7528\u4e86\uff0c\u5f3a\u8fde\u901a\u5206\u91cf\u6570\u91cf\u53ea\u80fd\u5c0f\u4e8e\u7b49\u4e8e\u539f\u6765\u7684\u6570\u91cf\u3002\n\n\u6240\u4ee5\u5bf9\u4e8e\u66fe\u7ecf\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6570\u91cf $s$ \u4e0e\u6539\u53d8\u4e00\u4e2a\u8fb9\u540e\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6570\u91cf $s'$ \u7684\u5173\u7cfb\uff0c\u6211\u4eec\u4f3c\u4e4e\u5f97\u5230\u4e86\u4e00\u4e2a\u7275\u5f3a\u7684\u6761\u4ef6\u4e0d\u7b49\u5f0f\u7ec4\u3002\n\n\u5f53\u6ee1\u8db3 $v \\to u$ \u7684\u8def\u5f84\u65f6\uff08\u6761\u4ef6 $1$ \uff09\uff0c\u6709 $s\\ge s' $ \uff1b\n\n\u5f53\u6ee1\u8db3\u5220\u53bb $u \\to v$ \u65f6\u4ecd\u5b58\u5728 $u \\to v$ \u7684\u8def\u5f84\u65f6\uff08\u6761\u4ef6 $2$ \uff09\uff0c\u6709 $s\\le s'$ \u3002\n\n\u663e\u7136\uff0c\u5f53\u540c\u65f6\u6ee1\u8db3\u6216\u540c\u65f6\u4e0d\u6ee1\u8db3\u6761\u4ef6 $1$ \u4e0e\u6761\u4ef6 $2$ \u65f6\uff0c\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6570\u91cf\u4e0d\u53d8\u3002\n\n\u5bf9\u4e8e\u6761\u4ef6 $1$ \u5f88\u597d\u5904\u7406\uff0c\u6bcf\u4e2a\u70b9 dfs \u4e00\u8fb9\u53ef\u4ee5\u5230\u8fbe\u7684\u70b9\u5373\u53ef\u3002\n\n\u6761\u4ef6 $2$ \u7a0d\u52a0\u601d\u8003\u4e5f\u80fd\u60f3\u5230\uff1a\n\n\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9\uff0c\u6309\u7167\u67d0\u79cd\u7279\u5b9a\u987a\u5e8f dfs \u5b83\u7684\u76f8\u90bb\u8282\u70b9\uff0c\n\n\u5982\u679c\u53d1\u73b0\u67d0\u4e2a\u76f8\u90bb\u8282\u70b9 $v$ \u5728\u7531 $u$ \u8fdb\u884c\u904d\u5386\u524d\u5df2\u7ecf\u88ab\u8bbf\u95ee\u8fc7\u4e86\uff0c\u5c31\u8bf4\u660e $u$ \u53ef\u4ee5\u901a\u8fc7\u53e6\u4e00\u6761\u7ed5\u8fc7 $u \\to v$ \u7684\u8def\u5f84\u5230\u8fbe $v$ \u3002\n\n\u4e3a\u4e86\u4f7f\u7b2c\u4e00\u6b21\u6309\u7167\u67d0\u79cd\u7279\u5b9a\u987a\u5e8f dfs \u65f6\u7b2c\u4e00\u4e2a\u88ab\u904d\u5386\u7684\u8282\u70b9\u6ca1\u6709\u88ab\u5224\u65ad\u8fc7\u7684\u60c5\u51b5\uff0c\u9700\u8981\u6309\u7167\u8fd9\u79cd\u7279\u5b9a\u987a\u5e8f\u7684\u9006\u5e8f\u987a\u5e8f\u518d\u6b21 dfs \u3002\n\n\u6838\u5fc3\u4ee3\u7801\uff1a\n\n```cpp\nvoid dfs2(int u,int rt)//\u987a\u5e8f\u904d\u5386 \n{\n\tvis[u] = 1;\n\tfor(auto v : G[u])\n\t{\n\t\tif(vis[v] and u == rt)\n\t\t\tdne[rt][v] = 1;\n\t\tif(!vis[v])\n\t\t\tdfs2(v,rt);\n\t}\n}\n\nvoid dfs3(int u,int rt)//\u9006\u5e8f\u904d\u5386 \n{\n\tvis[u] = 1;\n\tfor(int i = G[u].size() - 1;i >= 0;i--)\n\t{\n\t\tint v = G[u][i];\n\t\tif(vis[v] and u == rt)\n\t\t\tdne[rt][v] = 1;\n\t\tif(!vis[v])\n\t\t\tdfs3(v,rt);\n\t}\n}\n```\n\n## Code\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int _ = 1010;\nconst int maxm = 2e5 + 5;\n\nint n,m;\nvector <int> G[_];\nint u[maxm],v[maxm];\nbool arr[_][_];\nbool dne[_][_];\nbitset <_> vis;\n\nvoid dfs1(int u)\n{\n\tvis[u] = 1;\n\tfor(auto v : G[u])\n\t{\n\t\tif(!vis[v])\n\t\t\tdfs1(v);\n\t}\n}\n\nvoid dfs2(int u,int rt)//\u987a\u5e8f\u904d\u5386 \n{\n\tvis[u] = 1;\n\tfor(auto v : G[u])\n\t{\n\t\tif(vis[v] and u == rt)\n\t\t\tdne[rt][v] = 1;\n\t\tif(!vis[v])\n\t\t\tdfs2(v,rt);\n\t}\n}\n\nvoid dfs3(int u,int rt)//\u9006\u5e8f\u904d\u5386 \n{\n\tvis[u] = 1;\n\tfor(int i = G[u].size() - 1;i >= 0;i--)\n\t{\n\t\tint v = G[u][i];\n\t\tif(vis[v] and u == rt)\n\t\t\tdne[rt][v] = 1;\n\t\tif(!vis[v])\n\t\t\tdfs3(v,rt);\n\t}\n}\n\nint main()\n{\n\tcin >> n >> m;\n\tfor(int i = 1;i <= m;i++)\n\t{\n\t\tcin >> u[i] >> v[i];\n\t\tG[u[i]].push_back(v[i]);\n//\t\tv[i] = G[u[i]].size() - 1;\n\t}\n\tfor(int i = 1;i <= n;i++)\n\t{\n\t\tvis = 0;\n\t\tdfs1(i);\n\t\tfor(int j = 1;j <= n;j++)\n\t\t\tarr[i][j] = vis[j];\n\t\tvis = 0;\n\t\tdfs2(i,i);\n\t\tvis = 0;\n\t\tdfs3(i,i);\n\t}\n\tfor(int i = 1;i <= m;i++)\n\t{\n\t\tbool t = (arr[v[i]][u[i]] + dne[u[i]][v[i]]) & 1;\n\t\tif(!t)\n\t\t\tcout << \"same\\n\";\n\t\telse\n\t\t\tcout << \"diff\\n\";\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1658496957,
        "uid": 413301,
        "name": "Digital_Sunrise",
        "ccfLevel": 7,
        "title": "Two Faced Edges \u9898\u89e3"
    },
    {
        "content": "**\u9898\u76ee\u5927\u610f**\uff1a\u7ed9\u4e00\u4e2a $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u6709\u5411\u56fe\uff0c\u5bf9\u6bcf\u4e00\u6761\u8fb9\uff0c\u6c42\u53cd\u5411\u8fd9\u6761\u8fb9\u540e\uff0c\u56fe\u4e0a\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u4e2a\u6570\u662f\u5426\u6539\u53d8\u3002\n\n\u8ba9\u6211\u4eec\u9996\u5148\u4ece\u4e00\u4e2a\u4f8b\u5b50\u51fa\u53d1\u601d\u8003\u8fd9\u4e2a\u95ee\u9898\uff0c\u4e3a\u6b64\u8003\u8651\u4e0b\u9762\u8fd9\u4e2a\u56fe\n\n![](https://s1.ax1x.com/2022/07/22/jOm2Sx.png)\n\n\u8fd9\u4e2a\u56fe\u672c\u8eab\u62e5\u6709\u4e24\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\uff08SCC\uff09\uff1a\n\n![](https://s1.ax1x.com/2022/07/22/jOmO6f.png)\n\n\u6211\u4eec\u4e0d\u59a8\u9996\u5148\u8003\u8651\u4e0d\u5c5e\u4e8e\u4efb\u4f55SCC\u7684\u8fb9\u3002\u5f53\u6211\u4eec\u5c06\u4e0b\u56fe\u4e2d\u6a59\u8272\u8fb9\u53cd\u5411\u65f6\uff0c\u5b83\u4e0e\u84dd\u8272\u8fb9\u914d\u5408\uff0c\u4f7f\u5f97\u4e24\u4e2aSCC\u5408\u5e76\u4e3a\u4e00\u4e2a\uff0c\u56e0\u6b64\u7b54\u6848\u4e3a `diff`\uff1a\n\n![](https://s1.ax1x.com/2022/07/22/jOne74.png)\n\n\u4e8e\u662f\u6211\u4eec\u5f97\u5230\u4e0b\u9762\u7ed3\u8bba\uff1a\n\n- \u5728\u539f\u6765\u7684\u56fe\u4e0a\uff0c\u5b58\u5728\u4e00\u79cd\u4e0d\u7ecf\u8fc7\u6a59\u8272\u8fb9\u7684\u65b9\u6848\uff0c\u4f7f\u5f97\u6d45\u9ec4\u8272\u70b9\u80fd\u591f\u5230\u8fbe\u9752\u8272\u70b9\uff0c\u4f46\u662f\u4e0d\u5b58\u5728\u4e00\u79cd\u4ece\u9752\u8272\u5230\u8fbe\u6d45\u9ec4\u8272\u7684\u8def\u5f84\u65f6\uff0cSCC\u6570\u91cf\u51cf\u5c11\u3002\n\n\u53e6\u4e00\u65b9\u9762\uff0c\u6ca1\u6709\u84dd\u8272\u8fb9\u7684\u914d\u5408\uff0c\u8fd9\u79cd\u201c\u5408\u4e8c\u4e3a\u4e00\u201d\u662f\u4e0d\u53ef\u80fd\u505a\u5230\u7684\uff0c\u5373\n\n- \u5728\u539f\u6765\u7684\u56fe\u4e0a\uff0c\u5982\u679c\u6211\u4eec\u53bb\u6389\u84dd\u8272\u8fb9\uff0c\u6b64\u65f6\u5b58\u5728\u4e00\u79cd\u4e0d\u7ecf\u8fc7\u6a59\u8272\u8fb9\u7684\u65b9\u6848\uff0c\u4f7f\u5f97\u6d45\u9ec4\u8272\u70b9\u80fd\u591f\u5230\u8fbe\u9752\u8272\u70b9\uff0c\u4e5f\u4e0d\u5b58\u5728\u4e00\u79cd\u4ece\u9752\u8272\u5230\u8fbe\u6d45\u9ec4\u8272\u7684\u8def\u5f84\uff0cSCC\u6570\u91cf\u4e0d\u53d8\u3002\n\n\u8ba9\u6211\u4eec\u518d\u6765\u8003\u8651\u53e6\u4e00\u79cd\u60c5\u51b5\uff0c\u53cd\u8f6c\u539f\u6765\u7684SCC\u4e2d\u7684\u4e00\u6761\u8fb9\uff08\u4e0b\u56fe\u4e2d\u6a59\u8272\u8fb9\uff09\u3002\u8fd9\u79cd\u60c5\u51b5\u539f\u6709\u7684SCC\u7684\u7ed3\u6784\u88ab\u7834\u574f\uff0c\u4f7f\u5f97\u5de6\u8fb9\u7684\u4e09\u4e2a\u8282\u70b9\u4e0d\u518d\u6784\u6210\u4e00\u4e2aSCC\uff0c\u56e0\u6b64\u7b54\u6848\u4e3a `diff`\uff1a\n\n![](https://s1.ax1x.com/2022/07/22/jOnh3q.png)\n\n\u4e8e\u662f\u6211\u4eec\u5f97\u5230\u4e0b\u9762\u7ed3\u8bba\uff1a\n\n- \u5728\u539f\u6765\u7684\u56fe\u4e0a\uff0c\u5b58\u5728\u4e00\u79cd\u4e0d\u7ecf\u8fc7\u6a59\u8272\u8fb9\u7684\u65b9\u6848\uff0c\u4f7f\u5f97\u9752\u8272\u70b9\u80fd\u591f\u5230\u8fbe\u6d45\u9ec4\u8272\u70b9\uff0c\u4f46\u662f\u4e0d\u5b58\u5728\u4e00\u79cd\u4ece\u6d45\u9ec4\u8272\u5230\u8fbe\u9752\u8272\u7684\u8def\u5f84\u65f6\uff0cSCC\u6570\u91cf\u589e\u52a0\u3002\n\n\u4f46\u662fSCC\u5185\u90e8\u8fd8\uff08\u53ef\u80fd\uff09\u62e5\u6709\u4e00\u79cd\u4e0d\u90a3\u4e48\u91cd\u8981\u7684\u8fb9\uff0c\u628a\u4e0b\u56fe\u4e2d\u7684\u6a59\u8272\u8fb9\u53cd\u8f6c\u540e\uff0c\u53f3\u8fb9SCC\u7684\u7ed3\u6784\u6ca1\u6709\u53d8\u5316\uff0c\u56e0\u6b64\u7b54\u6848\u4e3a `same`\uff1a\n\n![](https://s1.ax1x.com/2022/07/22/jOuZxP.png)\n\u4e8e\u662f\u6211\u4eec\u5f97\u5230\u4e0b\u9762\u7ed3\u8bba\uff1a\n\n- \u5728\u539f\u6765\u7684\u56fe\u4e0a\uff0c\u5b58\u5728\u4e00\u79cd\u4e0d\u7ecf\u8fc7\u6a59\u8272\u8fb9\u7684\u65b9\u6848\uff0c\u4f7f\u5f97\u9752\u8272\u70b9\u80fd\u591f\u5230\u8fbe\u6d45\u9ec4\u8272\u70b9\uff0c\u4e5f\u5b58\u5728\u4e00\u79cd\u4ece\u6d45\u9ec4\u8272\u5230\u8fbe\u9752\u8272\u7684\u8def\u5f84\u65f6\uff0cSCC\u6570\u91cf\u4e0d\u53d8\u3002\n\n\u597d\u4e86\uff0c\u6211\u4eec\u5df2\u7ecf\u5145\u5206\u5206\u6790\u4e86\u8fd9\u4e2a\u56fe\u7684\u7ed3\u6784\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e2a\u4f8b\u5b50\u662f\u5c31\u6709\u6307\u5bfc\u6027\u610f\u4e49\u7684\uff1a\u6211\u4eec\u5f97\u5230\u4e86\u51e0\u4e2a\u57fa\u672c\u7ed3\u8bba\uff0c\u5bf9\u4e8e\u4e00\u6761\u9009\u5b9a\u7684\u8fb9 $u\\to v$\n\n1. \u5982\u679c\u5728\u53bb\u6389\u9009\u5b9a\u8fb9\u7684\u56fe\u4e0a\uff0c\u5982\u679c $u\\rightsquigarrow v$\uff0c\u4f46\u662f $v\\not\\rightsquigarrow u$ \u65f6\uff0cSCC\u6570\u91cf\u51cf\u5c11\u3002\n2. \u5982\u679c\u5728\u53bb\u6389\u9009\u5b9a\u8fb9\u7684\u56fe\u4e0a\uff0c\u5982\u679c $u\\not\\rightsquigarrow v$\uff0c\u540c\u65f6 $v\\not\\rightsquigarrow u$ \u65f6\uff0cSCC\u6570\u91cf\u4e0d\u53d8\u3002\n3. \u5982\u679c\u5728\u53bb\u6389\u9009\u5b9a\u8fb9\u7684\u56fe\u4e0a\uff0c\u5982\u679c $u\\not\\rightsquigarrow v$\uff0c\u4f46\u662f $v\\rightsquigarrow u$ \u65f6\uff0cSCC\u6570\u91cf\u589e\u52a0\u3002\n4. \u5982\u679c\u5728\u53bb\u6389\u9009\u5b9a\u8fb9\u7684\u56fe\u4e0a\uff0c\u5982\u679c $u\\rightsquigarrow v$\uff0c\u540c\u65f6 $v\\rightsquigarrow u$ \u65f6\uff0cSCC\u6570\u91cf\u4e0d\u53d8\u3002\n\n\u679a\u4e3e\u6bcf\u6761\u8fb9\u66b4\u529bDFS\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(nm)$\uff0c\u8db3\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n",
        "postTime": 1658474177,
        "uid": 108422,
        "name": "szTom",
        "ccfLevel": 7,
        "title": "[ARC092F] Two Faced Edges\u9898\u89e3"
    },
    {
        "content": "# \u9898\u89e3\n\n- \u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u5c06\u4e00\u6761\u8fb9 $u\\to v$ \u53cd\u5411\uff0c\u5982\u679c\u4f1a\u5f71\u54cd\u5230\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6570\u91cf\uff0c\u4ec5\u6709\u53ef\u80fd\u8fd9\u4e00\u6761\u8fb9\u6ee1\u8db3\u4e00\u4e0b\u4e24\u79cd\u60c5\u51b5\u4e4b\u4e00\uff1a\n\n1. $v\\to u$ \u5b58\u5728\u8def\u5f84\u3002\n\n1. $u$ \u5230 $v$ \u4e4b\u95f4\u53e6\u5916\u5b58\u5728\u4e00\u6761\u8def\u5f84\u3002\n\n- \u539f\u56e0\u5341\u5206\u7b80\u5355\uff0c\u5982\u679c\u4e24\u6761\u90fd\u4e0d\u6ee1\u8db3\uff0c\u8fd9\u6761\u8fb9\u5c31\u65e0\u6cd5\u4ea7\u751f\u5f3a\u8fde\u901a\u5206\u91cf\uff1b\u5982\u679c\u4e24\u6761\u90fd\u6ee1\u8db3\uff0c\u8fd9\u6761\u8fb9\u7684\u6b63\u53cd\u5bf9\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6784\u6210\u6ca1\u6709\u5f71\u54cd\u3002\n\n- \u7531\u4e8e\u9898\u76ee\u53ea\u8981\u6c42\u6015\u5224\u65ad\u6570\u91cf\u662f\u5426\u6539\u53d8\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5224\u65ad\u4e0a\u8ff0\u4e24\u4e2a\u6761\u4ef6\u662f\u5426\u4ec5\u6709\u4e00\u4e2a\u6210\u7acb\u3002\n\n- \u7b2c\u4e00\u4e2a\u8be2\u95ee\u66b4\u529b `dfs` \u5373\u53ef\u3002\n\n- \u7b2c\u4e8c\u4e2a\u8be2\u95ee\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $u$\uff0c\u6211\u4eec\u679a\u4e3e\u76f8\u4e34\u8fb9\uff0c\u5982\u679c\u5df2\u7ecf\u88ab\u8bbf\u95ee\u8fc7\u4e86\uff0c\u90a3\u4e48\u7b2c\u4e8c\u95ee\u5c31\u663e\u7136\u6ee1\u8db3\u3002\u6b63\u53cd\u5404\u505a\u4e00\u904d\u5373\u53ef\u3002\n\n# \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint n, m, mark[1005];\nvector<int> G[1005];\npair<int, int> E[200005];\nbool vis[1005], G1[1005][1005], G2[1005][1005];\n\nvoid dfs1(int u, int st)\n{\n\tG1[st][u] = 1;\n\tvis[u] = 1;\n\tfor (int i = 0 ; i < G[u].size() ; i ++)\n\t{\n\t\tint v = G[u][i];\n\t\tif (!vis[v])\n\t\t{\n\t\t\tdfs1(v, st);\n\t\t}\n\t}\n}\n\nvoid dfs2(int u, int col, int k, int st)\n{\n\tif (k)\n\t{\n\t\tif (mark[u] != col)\n\t\t{\n\t\t\tG2[st][u] = 1;\n\t\t}\n\t}\n\telse\n\t{\n\t\tmark[u] = col;\n\t}\n\tvis[u] = 1;\n\tfor (int i = 0 ; i < G[u].size() ; i ++)\n\t{\n\t\tint v = G[u][i];\n\t\tif (!vis[v])\n\t\t{\n\t\t\tdfs2(v, col, k, st);\n\t\t}\n\t}\n}\n\nint main()\n{\n\tcin >> n >> m;\n\tfor (int i = 1 ; i <= m ; i ++)\n\t{\n\t\tint u, v;\n\t\tcin >> u >> v;\n\t\tG[u].push_back(v);\n\t\tE[i] = make_pair(u, v);\n\t}\n\tfor (int i = 1 ; i <= n ; i ++)\n\t{\n\t\tmemset(vis, 0, sizeof(vis));\n\t\tdfs1(i, i);\n\t}\n\tfor (int i = 1 ; i <= n ; i ++)\n\t{\n\t\tmemset(vis, 0, sizeof(vis));\n\t\tvis[i] = 1;\n\t\tmemset(mark, 0, sizeof(mark));\n\t\tfor (int j = 0 ; j < G[i].size() ; j ++)\n\t\t{\n\t\t\tint v = G[i][j];\n\t\t\tif (!vis[v])\n\t\t\t{\n\t\t\t\tdfs2(v, j + 1, 0, i);\n\t\t\t}\n\t\t}\n\t\tmemset(vis, 0, sizeof(vis));\n\t\tvis[i] = 1;\n\t\tfor (int j = G[i].size() - 1 ; j >= 0 ; j --)\n\t\t{\n\t\t\tint v = G[i][j];\n\t\t\tif (!vis[v])\n\t\t\t{\n\t\t\t\tdfs2(v, j + 1, 1, i);\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 1 ; i <= m ; i ++)\n\t{\n\t\tint u = E[i].first, v = E[i].second;\n\t\tif (G1[v][u] != G2[u][v])\n\t\t{\n\t\t\tputs(\"diff\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tputs(\"same\");\n\t\t}\n\t}\n}\n```\n",
        "postTime": 1658494084,
        "uid": 342868,
        "name": "Ted_hjl",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 AT3945\u3010[ARC092D] Two Faced Edges\u3011"
    },
    {
        "content": "> [AT3945 [ARC092D] Two Faced Edges](https://www.luogu.com.cn/problem/AT3945)\n\n\u5f3a\u8fde\u901a\u6027\u76f8\u5173\u9996\u5148\u8003\u8651\u7f29\u70b9\u5efa\u51fa DAG\u3002\n\n\u5bf9\u4e8e\u8fde\u63a5 SCC $(S_1, S_2)$ \u4e4b\u95f4\u7684\u8fb9\uff0c\u53cd\u5411\u540e\u4f7f\u5f97 SCC \u6570\u91cf\u51cf\u5c11\u5f53\u4e14\u4ec5\u5f53 $S_1$ \u5728 DAG \u4e0a\u80fd\u591f\u4e0d\u7ecf\u8fc7\u8be5\u8fb9\u5230\u8fbe $S_2$\u3002\u53ef\u4ee5 $\\mathcal{O}(nm)$ \u6c42\u51fa\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\u6570\u5bf9 $2$ \u53d6 $\\min$ \u5224\u65ad\u3002\u6216\u8005\u76f4\u63a5\u6c42\u8def\u5f84\u6570\u53d6\u6a21\uff0c\u51fa\u9519\u7684\u6982\u7387\u8f83\u5c0f\u3002\n\n\u4f46\u662f SCC \u5185\u90e8\u7684\u8fb9\u5c31\u4e0d\u597d\u529e\u4e86\u3002\u5982\u679c\u53cd\u5411 $u\\to v$\uff0c\u6211\u4eec\u65ad\u8a00\u5982\u679c $u$ \u8fd8\u80fd\u5230\u8fbe $v$ \u90a3\u4e48\u8fde\u901a\u6027\u4e0d\u53d8\u3002\n\n\u9996\u5148\uff0c\u5bf9\u4e8e\u6240\u6709 SCC \u5185\u90e8\u7684\u70b9\u5bf9 $(x, y)$\uff0c\u4ece $x$ \u5230 $y$ \u8981\u4e48\u5fc5\u7ecf $u\\to v$ \u8fd9\u6761\u8fb9\uff0c\u8981\u4e48\u975e\u5fc5\u7ecf\u3002\u5bf9\u4e8e\u540e\u8005\uff0c\u53cd\u5411 $u\\to v$ \u4e0d\u5f71\u54cd $x, y$ \u7684\u8fde\u901a\u6027\u3002\u5bf9\u4e8e\u524d\u8005\uff0c\u82e5 $u$ \u4ecd\u80fd\u5230\u8fbe $v$ \u5219 $x$ \u4ecd\u80fd\u5230\u8fbe $y$\uff0c\u5426\u5219\u53cd\u5411\u8fb9 $v\\to u$ \u4e0d\u4f1a\u4ea7\u751f\u4efb\u4f55\u5f71\u54cd\u3002\u56e0\u4e3a\u5fc5\u7ecf $u\\to v$ \u6240\u4ee5 $x$ \u6ca1\u6709\u5176\u5b83\u8def\u5f84\u5230\u8fbe $v$\uff0c\u53cd\u5411\u540e $x, v$ \u4e0d\u8fde\u901a\u81ea\u7136\u5f15\u51fa $v\\to u$ \u65e0\u7528\u3002\n\n\u7efc\u4e0a\u6211\u4eec\u5f97\u5230\u4e86\u5224\u65ad SCC \u5185\u90e8\u8fb9 $u\\to v$ \u53cd\u5411\u540e\u5f3a\u8fde\u901a\u6027\u4e0d\u53d8\u7684\u5145\u8981\u6761\u4ef6\uff1a\u53bb\u6389 $u\\to v$ \u540e $u$ \u4ecd\u80fd\u5230\u8fbe $v$\u3002\u8fd9\u76f8\u5f53\u4e8e\u5bf9\u4e8e\u4e00\u4e2a\u70b9\u7684\u6bcf\u6761\u51fa\u8fb9 $u\\to v_1, v_2, \\cdots, v_i$\uff0c\u6211\u4eec\u90fd\u9700\u6c42\u51fa $u$ \u5728\u4e0d\u7ecf\u8fc7 $u\\to v_j$ \u7684\u60c5\u51b5\u4e0b\u80fd\u5230\u8fbe\u54ea\u4e9b\u70b9\u3002\n\n\u8003\u8651\u8fd9\u662f\u4e00\u4e2a\u524d\u7f00 $v_1 \\sim v_{j - 1}$ \u548c\u540e\u7f00 $v_{j + 1} \\sim v_i$ \u7684\u5f62\u5f0f\uff0c\u56e0\u6b64\u6b63\u53cd\u5404\u626b\u4e00\u904d\uff0c\u5728\u626b\u6bcf\u6761\u51fa\u8fb9\u65f6\u8bb0\u5f55\u65f6\u523b\u6bcf\u4e2a\u70b9\u7684\u53ef\u8fbe\u6027\uff0c\u5e76\u4e14\u5728\u626b\u5f53\u524d\u51fa\u8fb9 $u\\to v$ \u65f6\u82e5 $v$ \u5df2\u7ecf\u53ef\u8fbe\u5219\u5c06 $u\\to v$ \u6807\u8bb0\u4e3a\u53bb\u6389\u540e\u4ecd\u53ef\u8fbe\u3002\u7531\u4e8e\u6211\u4eec\u4f9d\u6b21\u52a0\u5165\u6240\u6709\u51fa\u8fb9\u65f6 SCC \u5185\u6bcf\u4e2a\u70b9\u53ea\u4f1a\u88ab\u904d\u5386\u4e00\u6b21\uff0c\u6545\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(nm)$\u3002\n\n- \u6ce8\u610f\u6211\u4eec\u8003\u8651\u7684\u662f\u4fdd\u7559\u4ece $u$ \u51fa\u53d1\u7684\u4e00\u6bb5\u524d\u7f00\u6216\u540e\u7f00\u7684\u8fb9\u65f6\u4ece $u$ \u51fa\u53d1\u6bcf\u4e2a\u70b9\u7684\u53ef\u8fbe\u60c5\u51b5\uff0c\u56e0\u6b64\u5f53\u518d\u6b21 `dfs` \u5230 $u$ \u65f6\u9700\u53ca\u65f6\u8fd4\u56de\uff0c\u5426\u5219\u4f1a\u904d\u5386\u5230\u4ece $u$ \u51fa\u53d1\u7684\u4e0d\u5c5e\u4e8e\u5f53\u524d\u524d\u7f00\u6216\u540e\u7f00\u7684\u8fb9\u3002\n\n\u66f4\u8fdb\u4e00\u6b65\u5730\uff0c\u53d1\u73b0\u5bf9\u4e8e\u8fde\u63a5 SCC \u4e4b\u95f4\u7684\u8fb9 $u\\to v$\uff0c\u6211\u4eec\u4e5f\u5e0c\u671b\u5224\u65ad\u53bb\u6389\u8be5\u8fb9\u540e $u$ \u80fd\u5426\u5230\u8fbe $v$\u3002\u8fd9\u548c SCC \u5185\u90e8\u7684\u8fb9\u6240\u9700\u8981\u6c42\u89e3\u7684\u4e1c\u897f\u662f\u4e00\u81f4\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06\u6240\u6709\u8fb9\u7b49\u4ef7\u8003\u8651\u3002\u53ea\u4e0d\u8fc7\u5bf9\u4e8e\u4e0d\u540c SCC \u4e4b\u95f4\u7684\u8fb9\uff0c\u82e5 $u\\not\\rightsquigarrow v$ \u5219\u53cd\u8f6c $u\\to v$ \u4e0d\u4f1a\u6539\u53d8 SCC \u4e2a\u6570\uff0c\u53cd\u4e4b\u5219\u6539\u53d8\u3002\u8fd9\u548c SCC \u5185\u90e8\u7684\u8fb9\u6070\u597d\u76f8\u53cd\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u4e0d\u9700\u8981\u663e\u5f0f\u5730\u5efa\u51fa DAG \u4e86\u3002\n\n\u5bf9\u6574\u5f20\u56fe\u8fdb\u884c $\\mathcal{O}(nm)$ \u7684\u6df1\u641c\u4f1a [T \u98de\u6389](https://atcoder.jp/contests/arc092/submissions/31940423)\uff0c\u6211\u4eec\u9700\u8981\u66f4\u52a0\u9ad8\u6548\u7684\u7b97\u6cd5\u3002\u8003\u8651\u6bcf\u6b21\u627e\u5230 $u$ \u7684\u6240\u6709\u51fa\u8fb9\u4e2d\u6ca1\u6709\u88ab\u8bbf\u95ee\u7684\u7b2c\u4e00\u4e2a\u70b9\uff0c\u53ef\u4ee5\u4f7f\u7528 `bitset` \u7684 `_Find_first()` \u5b9e\u73b0\u3002\n\n\u5177\u4f53\u800c\u8a00\uff0c\u8bbe `vis` \u8868\u793a\u5404\u4e2a\u8282\u70b9\u662f\u5426\u88ab\u8bbf\u95ee\uff0c`e[u]` \u8868\u793a $u$ \u7684\u6240\u6709\u51fa\u70b9\uff0c\u5219 `(~vis & e[u])._Find_first()` \u5373\u4e3a\u6240\u6c42\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}\\left(\\dfrac {n ^ 3}{w}\\right)$\u3002\n\n\u542f\u793a\uff1a\u5e8f\u5217\u53bb\u6389\u4e00\u4e2a\u4f4d\u7f6e\u7684\u4fe1\u606f\u53ef\u7531\u524d\u7f00\u548c\u540e\u7f00\u5408\u5e76\u5f97\u5230\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e3 + 5;\nconst int M = 2e5 + 5;\nint n, m;\nint cnt, hd[N], nxt[M], to[M], ans[M];\nvoid add(int u, int v) {nxt[++cnt] = hd[u], hd[u] = cnt, to[cnt] = v;}\nint dn, dfn[N], low[N], cn, col[N], top, stc[N];\nbitset<N> e[N], vis;\nvoid tarjan(int id) {\n  low[id] = dfn[id] = ++dn, stc[++top] = id, vis[id] = 1;\n  for(int i = hd[id]; i; i = nxt[i]) {\n    int it = to[i];\n    if(!dfn[it]) tarjan(it), low[id] = min(low[id], low[it]);\n    else if(vis[it]) low[id] = min(low[id], dfn[it]);\n  }\n  if(dfn[id] == low[id]) {\n    col[id] = ++cn;\n    while(stc[top] != id) vis[stc[top]] = 0, col[stc[top--]] = cn;\n    vis[id] = 0, top--;\n  }\n}\nint mark;\nvoid dfs(int id) {\n  vis[id] = 1;\n  if(id == mark) return; // add this line\n  while(1) {\n    bitset<N> out = ~vis & e[id];\n    int p = out._Find_first();\n    if(p == N) break;\n    dfs(p);\n  }\n}\nint main() {\n#ifdef ALEX_WEI\n  freopen(\"1.in\", \"r\", stdin);\n  freopen(\"1.out\", \"w\", stdout);\n#endif\n  cin >> n >> m;\n  for(int i = 1; i <= m; i++) {\n    int u, v;\n    scanf(\"%d%d\", &u, &v);\n    add(u, v), e[u][v] = 1;\n  }\n  for(int i = 1; i <= n; i++) if(!dfn[i]) tarjan(i);\n  for(int i = 1; i <= n; i++) {\n    mark = i;\n    static int lst[N], len;\n    len = 0, vis.reset();\n    for(int j = hd[i]; j; j = nxt[j]) {\n      if(vis[to[j]]) ans[j] = 1;\n      else dfs(to[j]);\n      lst[++len] = j; \n    }\n    vis.reset();\n    for(int p = len; p; p--) {\n      int j = lst[p];\n      if(vis[to[j]]) ans[j] = 1;\n      else dfs(to[j]);\n    }\n  }\n  for(int i = 1; i <= n; i++)\n    for(int j = hd[i]; j; j = nxt[j])\n      if(col[i] ^ col[to[j]])\n        ans[j] ^= 1;\n  for(int i = 1; i <= m; i++) puts(ans[i] ? \"same\" : \"diff\");\n  return cerr << \"Time: \" << clock() << endl, 0;\n}\n```",
        "postTime": 1653438309,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "AT3945 [ARC092D] Two Faced Edges"
    },
    {
        "content": "[Atcoder \u9898\u9762\u4f20\u9001\u95e8](https://atcoder.jp/contests/arc092/tasks/arc092_d) & [\u6d1b\u8c37\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/AT3945)\n\n~~orz ymx\uff0cymx ddw %%%~~\n\n\u9996\u5148\u65e2\u7136\u9898\u76ee\u8981\u6211\u4eec\u5224\u65ad\u5f3a\u8fde\u901a\u5206\u91cf\u4e2a\u6570\u662f\u5426\u6539\u53d8\uff0c\u6211\u4eec\u9996\u5148\u5c31\u5c06\u539f\u56fe SCC \u7f29\u4e2a\u70b9\u5457\uff0c\u7f29\u5b8c\u70b9\u540e\u6211\u4eec\u5f88\u81ea\u7136\u5730\u5c06\u56fe\u4e2d\u7684\u8fb9\u5206\u4e3a\u4e24\u7c7b\uff1a\u5728\u67d0\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\uff0c\u548c\u4e0d\u5728\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\uff0c\u6211\u4eec\u5bf9\u8fd9\u4e24\u4e2a\u60c5\u51b5\u5206\u522b\u8fdb\u884c\u8ba8\u8bba\u3002\n\n\u4e0b\u9762\u53c8\u5230\u4e86\u559c\u95fb\u4e50\u89c1\u7684\u627e\u6027\u8d28\u7684\u65f6\u95f4\u4e86\u3002\u9996\u5148\uff0c\u5bf9\u4e8e\u4e0d\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u7684\u8fb9\uff0c\u628a\u5b83\u7ffb\u8f6c\u4e4b\u540e\u4e0d\u4f1a\u5f71\u54cd\u5f3a\u8fde\u901a\u5206\u91cf\u4e2a\u6570\uff0c\u56e0\u4e3a\u8fd9\u6761\u8fb9\u4e0d\u5728\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\u9762\uff0c\u5373\u4fbf\u628a\u5b83\u65ad\u6389\u4e5f\u4e0d\u5f71\u54cd\u5f3a\u8fde\u901a\u5206\u91cf\u5185\u90e8\u7684\u70b9\u7684\u53ef\u8fbe\u6027\uff0c\u56e0\u6b64\u628a\u5b83\u7ffb\u8f6c\u53ea\u53ef\u80fd\u63a5\u94fe\u6210\u73af\uff0c\u51cf\u5c11\u5f3a\u8fde\u901a\u5206\u91cf\u4e2a\u6570\uff0c\u800c\u628a $u\\to v$ \u7ffb\u8f6c\u540e\uff0c\u5f3a\u8fde\u901a\u5206\u91cf\u4e2a\u6570\u51cf\u5c11\u5f53\u4e14\u4ec5\u5f53\u53bb\u6389\u8fd9\u6761\u8fb9\u540e\u4ecd\u5b58\u5728 $u\\to v$ \u7684\u8def\u5f84\uff0c\u56e0\u4e3a\u8fd9\u6837\u4f1a\u51fa\u73b0 $u\\to v\\to u$ \u7684\u73af\u3002\u5176\u6b21\uff0c\u5bf9\u4e8e\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u7684\u8fb9\uff0c\u628a\u5b83\u7ffb\u8f6c\u4e4b\u540e\uff0c\u672c\u6765\u4e0d\u80fd\u5230\u8fbe\u7684\u70b9\u4f9d\u7136\u4e0d\u80fd\u5230\u8fbe\uff08\u8bc1\u660e\u53ef\u8003\u8651\u53cd\u8bc1\u6cd5\uff0c\u5bf9\u4e8e\u4e24\u4e2a\u8282\u70b9 $x,y$\uff0c\u5982\u679c\u672c\u6765\u4e0d\u5b58\u5728 $x\\to y$\uff0c\u7ffb\u8f6c $u\\to v$ \u540e\u5c31\u5b58\u5728\u4e86\uff0c\u90a3\u4e48\u5fc5\u7136\u662f\u56e0\u4e3a\u5b58\u5728 $x\\to v\\to u\\to y$ \u7684\u8def\u5f84\uff0c\u800c\u6839\u636e $u,v$ \u5728\u540c\u4e00\u4e2a SCC \u4e2d\u53ef\u77e5\u672c\u6765\u5c31\u5b58\u5728 $v\\to u$ \u7684\u8def\u5f84 $P$\uff08\u6211\u4eec\u8bb0\u5176\u4e3a $x\\xrightarrow{P}y$\uff09\uff0c\u90a3\u4e48\u5fc5\u7136\u5b58\u5728\u4e0d\u7ecf\u8fc7\u8fb9 $v\\to u$ \u7684 $x\\to y$ \u7684\u8def\u5f84 $x\\to v\\xrightarrow{P}u\\to y$\uff0c\u77db\u76fe\uff09\uff0c\u800c\u5bf9\u4e8e\u539f\u6765\u53ef\u4ee5\u5230\u8fbe\u7684\u4e24\u4e2a\u70b9 $x,y$\uff0c\u5982\u679c\u7ffb\u8f6c\u540e $x$ \u4e0d\u80fd\u5230\u8fbe $y$\uff0c\u90a3\u5fc5\u7136\u6709 $x,y$ \u5728\u540c\u4e00\u4e2a\u8fde\u901a\u5206\u91cf\u4e2d\uff0c\u6b64\u65f6\u8fde\u901a\u5206\u91cf\u7684\u4e2a\u6570\u5c31\u4f1a\u6539\u53d8\u3002\u6211\u4eec~~\u60ca\u5947\u5730~~\u53d1\u73b0\uff0c\u5728\u4e24\u79cd\u60c5\u51b5\u4e2d\uff0c\u867d\u7136\u60c5\u51b5\u7ec6\u5206\u8d77\u6765\u4e0d\u4e00\u6837\uff0c\u4f46\u6bcf\u79cd\u60c5\u51b5\u6211\u4eec\u8981\u6c42\u7684\u76ee\u6807\u662f\u4e00\u6837\u7684\uff0c\u5373**\u53bb\u6389\u67d0\u6761\u8fb9 $u\\to v$ \u540e**\uff0c$u$ \u662f\u5426\u8fd8\u80fd\u5230\u8fbe $v$\u3002\u5bf9\u4e8e $u,v$ \u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u7684\u8fb9 $(u,v)$\uff0c\u5982\u679c\u4e0a\u8ff0\u56de\u7b54\u4e3a\u80af\u5b9a\u7684\u90a3\u4e48\u7b54\u6848\u5373\u4e3a `same`\uff0c\u5426\u5219\u7b54\u6848\u4e3a `diff`\uff0c\u5982\u679c $u,v$ \u4e0d\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u5219\u53cd\u8fc7\u6765\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u600e\u6837\u6c42\u8fd9\u4e2a\u4e1c\u897f\uff0c\u8003\u8651\u679a\u4e3e $u$ \u5e76\u6c42\u51fa\u4ee5 $u$ \u4e3a\u8d77\u70b9\u7684\u6240\u6709\u8fb9\u7684\u7b54\u6848\uff0c\u6211\u4eec\u5c06\u4ee5 $u$ \u4e3a\u8d77\u70b9\u7684\u8fb9\u6309\u7167\u7f16\u53f7\uff08\u5176\u5b9e\u4e0d\u4e00\u5b9a\u8981\u6309\u7f16\u53f7\uff0c\u54ea\u6015 `random_shuffle` \u4e00\u4e0b\u90fd\u884c\uff0c\u53ea\u8981\u94a6\u5b9a\u4e00\u4e2a\u987a\u5e8f\u5373\u53ef\uff09\u6392\u5e8f\u5206\u522b\u4e3a $e_1,e_2,\\cdots,e_k$\uff0c\u5b83\u4eec\u7684\u53e6\u4e00\u4e2a\u7aef\u70b9\u5206\u522b\u4e3a $v_1,v_2,\\cdots,v_k$\u3002\u6211\u4eec\u4ece\u5c0f\u5230\u5927\u4f9d\u6b21\u679a\u4e3e\u8fd9\u4e9b\u8fb9\u5e76\u5b9e\u65f6\u7ef4\u62a4\u4e00\u4e2a $vis_x$ \u8868\u793a $x$ \u7684\u53ef\u8fbe\u6027\uff0c\u5bf9\u4e8e\u67d0\u4e2a $e_i$\uff0c\u5982\u679c\u6211\u4eec\u53d1\u73b0\uff0c\u679a\u4e3e\u5230 $e_i$ \u65f6\u5019\uff0c\u5df2\u7ecf\u6709 $vis_{v_i}=1$\uff0c\u90a3\u4e48\u8bf4\u660e\u80af\u5b9a\u5b58\u5728\u4e00\u4e2a $v_j$ \u6ee1\u8db3\u5b58\u5728 $u\\to v_j\\to v_i$ \u7684\u8def\u5f84\uff0c\u5373\u53bb\u6389\u8fd9\u6761\u8fb9\u540e $u$ \u8fd8\u80fd\u5230\u8fbe $v_i$\uff0c\u5426\u5219\u6211\u4eec\u5c31\u4ee5 $v_i$ \u4e3a\u8d77\u70b9 BFS \u4e00\u904d\u6574\u5f20\u56fe\uff0c\u627e\u5230\u6240\u6709\u53ef\u8fbe\u7684\u70b9\uff0c\u6ce8\u610f\u4e0d\u80fd\u7ecf\u8fc7 $u$\uff0c\u5426\u5219\u5c31\u65e0\u6cd5\u8bf4\u660e\u662f\u5426\u7ecf\u8fc7 $u\\to v_i$ \u7684\u8fb9\u4e86\u3002\uff08\u5177\u4f53\u5b9e\u73b0\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u5c06 $vis_u$ \u8bbe\u4e3a $1$\uff0c\u7136\u540e BFS \u6240\u6709 $vis_v\\ne 1$ \u7684\u70b9\uff09\u8fd9\u6837\u6211\u4eec\u53ea\u8003\u8651\u4e86 $e_j$ \u5bf9 $e_i$\uff0c$j<i$ \u7684\u8d21\u732e\uff0c\u56e0\u6b64\u8fd8\u9700\u53cd\u8fc7\u6765\u518d\u64cd\u4f5c\u4e00\u6b21\uff0c\u8fd9\u6837\u5373\u53ef\u8003\u8651\u6240\u6709\u8fb9\u5bf9 $v_i$ \u7684\u8d21\u732e\uff0c\u6b63\u786e\u6027\u663e\u7136\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $nm$\uff0c\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\uff0c\u4e8e\u662f\u8fd9\u9898\u5c31\u505a\u5b8c\u4e86\u3002\n\n\u4ec0\u4e48\uff1f\u4f60\u8bf4\u505a\u5b8c\u4e86\uff1f\u5982\u679c $m$ \u589e\u5927\u5230 $10^6$ \u6050\u6015\u4f60\u5c31\u675f\u624b\u65e0\u7b56\u4e86\u5427\u2026\u2026\u56e0\u6b64\u6211\u4eec\u8fd8\u9700\u63a2\u7a76\u590d\u6742\u5ea6\u66f4\u4f18\u7684\u505a\u6cd5\uff0c\u6ce8\u610f\u5230\u4e0a\u8ff0\u505a\u6cd5\u7684\u74f6\u9888\u5728\u4e8e\u6bcf\u6b21 BFS \u90fd\u679a\u4e3e\u4e86\u6bcf\u6761\u8fb9\uff0c\u4f7f\u5f97 BFS \u7684\u590d\u6742\u5ea6\u9ad8\u8fbe $\\mathcal O(m)$\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u5f53\u6211\u4eec BFS \u5230\u67d0\u4e2a\u70b9 $u$ \u65f6\uff0c\u53ea\u7ee7\u7eed BFS \u5b83\u7684\u90bb\u5c45\u4e2d\u6ee1\u8db3 $vis_v=0$ \u7684\u70b9 $v$\uff0c\u8fd9\u6837 BFS \u590d\u6742\u5ea6\u53ef\u4ee5\u964d\u5230 $\\mathcal O(n)$\u3002\u90a3\u4e48\u600e\u4e48\u5feb\u901f\u627e\u51fa\u8fd9\u4e9b\u70b9\u5462\uff1f\u6ce8\u610f $vis_v$ \u7684\u53d6\u503c\u53ea\u53ef\u80fd\u662f $0/1$\uff0c\u56e0\u6b64\u53ef\u4ee5\u8054\u60f3\u5230\u5e38\u6570\u5de8\u5c0f\u65e0\u6bd4\u7684\u2026\u2026`bitset`\uff01\u6211\u4eec\u5efa\u4e00\u4e2a `bitset` $t$\uff0c\u5982\u679c $vis_v=1$\uff0c\u90a3\u4e48 `bitset` \u4e0a\u5bf9\u5e94\u4f4d\u4e3a $0$\uff0c\u5426\u5219\u4e3a $1$\uff0c\u518d\u5bf9\u6bcf\u4e2a\u70b9\u7ef4\u62a4\u5b83\u4e0e\u6bcf\u4e2a\u70b9\u4e4b\u95f4\u662f\u5426\u6709\u76f4\u63a5\u8fb9\u76f8\u8fde\uff0c\u8bb0\u4f5c $has_x$\uff0c\u90a3\u4e48\u5f53\u6211\u4eec BFS $u$ \u65f6\uff0c\u53ea\u9700\u904d\u5386 $has_u\\&t$ \u4e0a\u4e3a $1$ \u7684\u4f4d\u5373\u53ef\u3002\u4e8b\u5b9e\u4e0a\uff0c`bitset` \u627e\u51fa\u6240\u6709 $1$ \u7684\u590d\u6742\u5ea6\u662f $\\mathcal O(\\dfrac{n}{\\omega})$ \u7684\uff0c\u53ef\u4ee5\u8fd9\u6837\u5b9e\u73b0\uff1a\n\n```cpp\nfor(int y=b._Find_first();y^b.size();y=b._Find_next(y))\n```\n\n\u4e8e\u662f\u8fd9\u9898\u5c31\u771f\u7684\u505a\u5b8c\u4e86\uff0c\u590d\u6742\u5ea6 $\\dfrac{n^3}{\\omega}+w$\uff0c\u74f6\u9888\u5728\u4e8e `bitset` \u7684\u904d\u5386\u3002\n\n```cpp\nconst int MAXN=1e3;\nconst int MAXM=2e5;\nint n,m,hd[MAXN+5],to[MAXM+5],nxt[MAXM+5],ec=0;\nint U[MAXM+5],V[MAXM+5];\nvoid adde(int u,int v){to[++ec]=v;nxt[ec]=hd[u];hd[u]=ec;}\nbool vis[MAXN+5];\nint dfn[MAXN+5],low[MAXN+5],tim=0,bel[MAXN+5],stk[MAXN+5],tp=0,cmp=0;\nbitset<MAXN+5> has[MAXN+5];\nvoid tarjan(int x){\n\tdfn[x]=low[x]=++tim;vis[x]=1;stk[++tp]=x;\n\tfor(int e=hd[x];e;e=nxt[e]){\n\t\tint y=to[e];\n\t\tif(!dfn[y]) tarjan(y),low[x]=min(low[x],low[y]);\n\t\telse if(vis[y]) low[x]=min(low[x],dfn[y]);\n\t} if(!(dfn[x]^low[x])){\n\t\t++cmp;int o;do{\n\t\t\to=stk[tp--];vis[o]=0;bel[o]=cmp;\n\t\t} while(o^x);\n\t}\n}\nbool can[MAXM+5];\nbitset<MAXN+5> alive;\nvoid bfs(int s){\n\tqueue<int> q;q.push(s);alive.reset(s);\n\twhile(!q.empty()){\n\t\tint x=q.front();q.pop();bitset<MAXN+5> to=has[x]&alive;\n\t\tfor(int y=to._Find_first();y^to.size();y=to._Find_next(y))\n\t\t\talive.reset(y),q.push(y);\n\t}\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d\",&U[i],&V[i]);adde(U[i],V[i]);\n\t\thas[U[i]].set(V[i]);\n\t}\n\tfor(int i=1;i<=n;i++) if(!dfn[i]) tarjan(i);\n//\tfor(int i=1;i<=n;i++) printf(\"%d\\n\",bel[i]);\n\tfor(int i=1;i<=n;i++){\n\t\talive.set();alive.reset(i);stack<pii> stk;\n\t\tfor(int e=hd[i];e;e=nxt[e]){\n\t\t\tstk.push(mp(to[e],e));\n\t\t\tif(!alive.test(to[e])){can[e]=1;continue;}\n\t\t\tbfs(to[e]);\n\t\t} alive.set();alive.reset(i);\n\t\twhile(!stk.empty()){\n\t\t\tpii x=stk.top();stk.pop();\n\t\t\tif(!alive.test(x.fi)){can[x.se]=1;continue;}\n\t\t\tbfs(x.fi);\n\t\t}\n\t}\n\tfor(int i=1;i<=m;i++) printf(\"%s\\n\",((bel[U[i]]==bel[V[i]])^can[i])?\"diff\":\"same\");\n\treturn 0;\n}\n```\n\n",
        "postTime": 1624959988,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 AT3945 [ARC092D] Two Faced Edges"
    },
    {
        "content": "\u8fd9\u9898\u6b63\u89e3\u662f\u633a\u5999\u7684\uff0c\u6211\u8fd9\u4e2a\u505a\u6cd5\u5c31\u6bd4\u8f83\u4e11\u3002\n\n\u9996\u5148\u95ee\u9898\u7684\u5173\u952e\u5728\u4e8e\u6c42\u51fa\uff0c\u5bf9\u6bcf\u6761\u8fb9 $(u\\to v)$\uff0c\u5b83\u5220\u6389\u540e\uff0c $u$ \u662f\u5426\u8fd8\u80fd\u5230\u8fbe $v$\u3002\u81f3\u4e8e\u4e3a\u4ec0\u4e48\uff0c\u5176\u4ed6\u9898\u89e3\u5df2\u7ecf\u8bf4\u5f97\u5f88\u6e05\u695a\u4e86\u3002\n\n\u6211\u7684\u5224\u65ad\u65b9\u6cd5\u5927\u6982\u662f\u8fd9\u6837\uff1a\n1. \u679a\u4e3e\u8d77\u70b9 $u$\uff1b\n2. \u5bf9\u4e8e $u$\uff0c\u8003\u8651\u628a $u$ \u7684\u5165\u8fb9\u5220\u6389\u540e\u7684\u65b0\u56fe\uff0c\u628a\u5b83\u7f29\u70b9\u5f97\u5230\u62d3\u6251\u56fe\uff1b\n3. \u5bf9\u4e8e\u539f\u56fe\u4e2d\u7684\u8fb9 $(u\\to v)$\uff0c\u5b83\u5220\u6389\u540e $u$ \u4ecd\u80fd\u5230\u8fbe $v$\uff0c\u5f53\u4e14\u4ec5\u5f53\u6ee1\u8db3\u4e0b\u5217\u6761\u4ef6\u4e4b\u4e00\n \n\t* $(u\\to v)$ \u5728\u62d3\u6251\u56fe\u4e2d\u6240\u5bf9\u5e94\u7684\u8fb9\u5b58\u5728\u91cd\u8fb9\uff1b\n   * \u62d3\u6251\u56fe\u4e2d\u5b58\u5728\u8fb9 $(w'\\to v')$\uff0c\u5176\u4e2d $w'$ \u4e0d\u662f $u$ \u5bf9\u5e94\u7684\u70b9\u4f46\u662f\u80fd\u4ece $u$ \u5bf9\u5e94\u7684\u70b9\u5230\u8fbe\uff0c\u800c $v'$ \u662f $v$ \u5bf9\u5e94\u7684\u70b9\u3002\n\n\u81f3\u4e8e\u4e3a\u4ec0\u4e48\uff0c\u62d3\u6251\u56fe\u4e2d\u5b58\u5728\u91cd\u8fb9\u7684\u90a3\u79cd\u60c5\u51b5\u663e\u7136\uff1b\u5bf9\u4e8e\u53e6\u4e00\u79cd\u60c5\u51b5\uff0c\u7531\u4e8e\u62d3\u6251\u56fe\u4e2d\u5b58\u5728\u8fb9 $(w'\\to v')$\uff0c\u5219\u539f\u56fe\u4e2d $w$ \u80fd\u5230 $v$ \u4f46 $v$ \u5230\u4e0d\u4e86 $w$\uff0c\u6240\u4ee5 $u$ \u60f3\u8981\u5230\u8fbe $w$ \u5c31\u4e0d\u80fd\u5f80 $(u\\to v)$ \u8d70\uff0c\u800c $u$ \u80fd\u5230\u8fbe $w$\uff0c\u6240\u4ee5\u8def\u5f84 $u\\to\\cdots\\to w\\to\\cdots\\to v$ \u5fc5\u7136\u53ef\u4ee5\u4e0d\u7ecf\u8fc7\u8fb9 $(u\\to v)$\u3002\n\n\u8fd9\u662f $O(nm)$ \u7684\uff0c\u7528 `vector` \u5b58\u8fb9\u5c31\u53ef\u4ee5 AC\u3002\n\n```cpp\n#include<cstdio>\n#include<vector>\nconst int N=1003,M=2e5+3;\nstd::vector<int>g[N],gr[N],ps[N];\nint n,m,ans[M],x[M],y[M],head[N+N],p[N],ord[N],dfc,used[N],d[N],f[N];\nvoid Dfs0(int u,int w){\n\tint v;\n\tused[u]=1;\n\tfor(int i=0;i<g[u].size();i++)if((v=g[u][i])!=w&&!used[v])\n\t  Dfs0(v,w);\n\tord[++dfc]=u;\n}\nvoid Dfs1(int u,int r,int w){\n\tint v;\n\tp[u]=r;\n\tused[u]=1;\n\tfor(int i=0;i<gr[u].size();i++)if((v=gr[u][i])!=w&&!used[v])\n\t  Dfs1(v,r,w);\n}\nvoid Scc(int w){\n\tint u;\n\tdfc=0;for(u=1;u<=n;u++)used[u]=0;\n\tfor(u=1;u<=n;u++)if(u!=w&&!used[u])Dfs0(u,w);\n\tfor(u=1;u<=n;u++)used[u]=0;\n\tfor(int i=dfc;i;i--)if(!used[ord[i]])Dfs1(ord[i],ord[i],w);\n}\nint main(){\n\tint u,v,w;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++){\n\t  scanf(\"%d%d\",&u,&v);\n\t  g[u].push_back(v);\n\t  ps[u].push_back(i);\n\t  gr[v].push_back(u);\n\t  x[i]=u,y[i]=v;\n\t}\n\tfor(w=1;w<=n;w++){\n\t  Scc(w);\n\t  for(u=1;u<=n;u++)f[u]=d[u]=0;\n\t  for(int i=0;i<g[w].size();i++)++f[p[g[w][i]]];\n\t  for(int i=dfc;i;i--)if(f[p[u=ord[i]]]){\n\t\tfor(int i=0;i<g[u].size();i++)if((v=g[u][i])!=w&&p[v]!=p[u])\n\t\t  f[p[v]]=1,d[p[v]]=1;\n\t  }\n\t  for(int i=0;i<g[w].size();i++)\n\t\tans[ps[w][i]]=d[p[g[w][i]]]||f[p[g[w][i]]]>1;\n\t}\n\tScc(0);\n\tfor(int i=1;i<=m;i++)puts(ans[i]^(p[x[i]]==p[y[i]])?\"diff\":\"same\");\n\treturn 0;\n}\n```",
        "postTime": 1606230940,
        "uid": 72487,
        "name": "Dreamunk",
        "ccfLevel": 9,
        "title": "ARC092F Two Faced Edges"
    },
    {
        "content": "### [ARC092D] Two Faced Edges\n\n\u8003\u8651\u5f3a\u8054\u901a\u5206\u91cf\u7684\u672c\u8d28\uff0c\u5373\u5176\u4e2d\u4efb\u610f\u4e24\u70b9 $u,v$ \u90fd\u6709\u4e00\u6761 $u\\to v$ \u7684\u8def\u5f84\uff0c\u540c\u65f6\u4e5f\u6709\u4e00\u6761 $v\\to u$ \u7684\u8def\u5f84\u3002\n\n\u8003\u8651\u8f6c\u8fb9\u5f3a\u8054\u901a\u5206\u91cf\u4e2a\u6570\u6539\u53d8\u7684\u60c5\u51b5\uff0c\u8bbe\u6709\u5411\u8fb9\u4e3a $(u,v)$\uff1a\n\n* **\u6709**\u4e00\u6761\u53cd\u5411\u8fb9 $(v,u)$ \u4e14\u9664\u4e86 $(u,v)$ \u5916**\u65e0**\u4e00\u6761\u4ece $u$ \u5230 $v$ \u7684\u8def\u5f84\uff0c\u5f3a\u8054\u901a\u5206\u91cf\u4e2a\u6570\u51cf\u5c11\u3002\n* **\u65e0**\u53cd\u5411\u8fb9 $(v,u)$ \u4e14\u9664\u4e86 $(u,v)$ \u5916**\u6709**\u4e00\u6761\u4ece $u$ \u5230 $v$ \u7684\u8def\u5f84\uff0c\u5f3a\u8054\u901a\u5206\u91cf\u4e2a\u6570\u589e\u52a0\u3002\n\n\u4e2a\u6570\u4e0d\u6539\u53d8\u7684\u60c5\u51b5\u5373\u4e3a\uff1a\n\n* **\u6709**\u4e00\u6761\u53cd\u5411\u8fb9 $(v,u)$ \u4e14\u9664\u4e86 $(u,v)$ \u5916**\u6709**\u4e00\u6761\u4ece $u$ \u5230 $v$ \u7684\u8def\u5f84\uff0c\u5f3a\u8054\u901a\u5206\u91cf\u4e2a\u6570\u51cf\u5c11\u3002\n* **\u65e0**\u4e00\u6761\u53cd\u5411\u8fb9 $(v,u)$ \u4e14\u9664\u4e86 $(u,v)$ **\u65e0**\u4e00\u6761\u4ece $u$ \u5230 $v$ \u7684\u8def\u5f84\uff0c\u5f3a\u8054\u901a\u5206\u91cf\u4e2a\u6570\u51cf\u5c11\u3002\n\n\u603b\u7ed3\u4e00\u4e0b\uff0c\u5c31\u662f\u8003\u8651\u4ee5\u4e0b\u51e0\u4e2a\u56e0\u7d20\uff1a\n\n* \u5f53\u524d\u8fb9\u662f\u5426\u6709\u53cd\u5411\u8fb9\uff0c\u7ef4\u62a4\u65b9\u6cd5\u6bd4\u8f83\u7b80\u5355\u3002\n* \u9664\u5f53\u524d\u8fb9\u5916\u662f\u5426\u6709\u4e00\u6761\u4ece $u$ \u5230 $v$ \u7684\u8def\u5f84\uff0c\u8003\u8651\u67d3\u8272\u5224\u65ad\uff0c\u65b9\u6cd5\u4e0d\u8bb2\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(nm)$\uff0c\u53ef\u4f18\u5316\u3002\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\n//#define int long long\ntypedef long long ll;\n#define ha putchar(' ')\n#define he putchar('\\n')\n\ninline int read()\n{\n\tint x = 0, f = 1;\n\tchar c = getchar();\n\twhile (c < '0' || c > '9')\n\t{\n\t\tif (c == '-')\n\t\t\tf = -1;\n\t\tc = getchar();\n\t}\n\twhile (c >= '0' && c <= '9')\n\t\tx = x * 10 + c - '0', c = getchar();\n\treturn x * f;\n}\n\ninline void write(int x)\n{\n\tif(x < 0)\n\t{\n\t\tputchar('-');\n\t\tx = -x;\n\t}\n\tif(x > 9)\n\t\twrite(x / 10);\n\tputchar(x % 10 + '0');\n}\n\nconst int _ = 1010, M = 2e5 + 10;\n\nint n, m, rt, u[M], v[M], flg[_];\n\nbool f1[_][_], f2[_][_];\n\nbitset<_> vis;\n\nvector<int> d[_];\n\nvoid dfs1(int u)\n{\n\tvis.set(u);\n\tf1[rt][u] = 1;\n\tfor(int v : d[u])\n\t\tif(!vis[v]) dfs1(v);\n}\n\nvoid dfs2(int u, int cxr, bool t)\n{\n\tif(t) flg[u] = cxr;\n\telse f2[rt][u] = (flg[u] != cxr);\n\tvis.set(u);\n\tfor(int v : d[u])\n\t\tif(!vis[v]) dfs2(v, cxr, t); \n} \n\nsigned main()\n{\n\tn = read(), m = read();\n\tfor(int i = 1; i <= m; ++i)\n\t{\n\t\tu[i] = read(), v[i] = read();\n\t\td[u[i]].push_back(v[i]);\n\t}\n\tfor(int i = 1; i <= n; ++i)\n\t{\n\t\tvis.reset();\n\t\trt = i;\n\t\tdfs1(i); \n\t}\n\tfor(int i = 1; i <= n; ++i)\n\t{\n\t\tvis.reset(), vis.set(i);\n\t\tmemset(flg, 0, sizeof flg);\n\t\tint nw = d[i].size();\n\t\trt = i;\n\t\tfor(int j = 0; j < nw; ++j)\n\t\t\tif(!vis[d[i][j]]) dfs2(d[i][j], j + 1, 1);\n\t\tvis.reset(), vis.set(i);\n\t\tfor(int j = nw - 1; j >= 0; --j)\n\t\t\tif(!vis[d[i][j]]) dfs2(d[i][j], j + 1, 0);\n\t}\n\t//\tfor(int i = 1; i <= n; ++i)\n\t//\t{\n\t//\t\tfor(int j = 1; j <= n; ++j) cout << f1[i][j] << \" \";\n\t//\t\tcout << \"\\n\";\n\t//\t}\n\t//\tcout << \"\\n\";\n\t\tfor(int i = 1; i <= n; ++i)\n\t\t{\n\t\t\tfor(int j = 1; j <= n; ++j) cout << f2[i][j] << \" \";\n\t\t\tcout << \"\\n\";\n\t\t}\n\tfor(int i = 1; i <= m; ++i)\n\t\tputs(f1[v[i]][u[i]] ^ f2[u[i]][v[i]] ? \"diff\" : \"same\");\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1658472718,
        "uid": 257146,
        "name": "orz_z",
        "ccfLevel": 0,
        "title": "[ARC092D] Two Faced Edges"
    }
]