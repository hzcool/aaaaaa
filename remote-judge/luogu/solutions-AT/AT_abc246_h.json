[
    {
        "content": "# [ABC246Ex 01? Queries](https://www.luogu.com.cn/problem/AT_abc246_h) Solution\n\n[TOC]\n\n## [\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u6233\u6b64\u8fdb\u5165](http://blog.monkey-hyx.tech?t=ABC246Ex)\n\n\u8fd9\u9898\u7684\u9898\u89e3\u662f\u4ece\u6211\u5199\u7684 Blog \u4e2d\u622a\u51fa\u6765\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5\u53bb\u770b\u539f Blog\u3002\n\n## [\u6d45\u8c08 DDP \u4e0e \u5e7f\u4e49\u77e9\u9635\u4e58\u6cd5\uff08\u6233\u6b64\u8fdb\u5165\uff09](http://blog.monkey-hyx.tech?t=DDP)\n\n## \u5f15\u5165\n\n### \u4f8b\u9898 #1\n\n\u9898\u76ee [SP1043 GSS1 - Can you answer these queries I](https://www.luogu.com.cn/problem/SP1043)\u3002\n\n\u9898\u9762\uff1a\u5bf9\u4e8e\u5e8f\u5217 $ a_n $\uff0c$ q $ \u6b21\u8be2\u95ee\u6c42 $ \\left[ l_i, r_i \\right] $ \u7684\u533a\u95f4\u6700\u5927\u5b50\u6bb5\u548c\u3002\n\n$ 1 \\le n \\le 5 \\times 10^4, a_i \\le 15007 $\u3002$ q $ \u5728 `int` \u8303\u56f4\u5185\u3002\n\n\u6709\u663e\u7136\u7684 DP\uff0c\u4ee4 $ dp(i) $ \u8868\u793a\u4ee5 $ a_i $ \u7ed3\u5c3e\u7684\u533a\u95f4 $ \\left[ 1, i \\right] $ \u7684\u6700\u5927\u5b50\u6bb5\u548c\u3002\n\n\u4e00\u822c\u7684\u533a\u95f4\u6700\u5927\u5b50\u6bb5\u548c\u8f6c\u79fb\u4e3a $ dp(i) = \\max(dp(i - 1) + a_i, a_i) $\uff0c\u5bf9\u4e8e\u672c\u9898\u5219\u4e3a\uff1a\n$$\ndp(i) = \\left\\{\n\\begin{array}{ll}\n\ta_i &\\quad i = l \\\\\n\t\\max(dp(i - 1) + a_i, a_i) &\\quad l \\lt i \\le r\n\\end{array}\n\\right.\n$$\n\u4f46\u662f\u6bcf\u6b21\u8be2\u95ee\u90fd\u91cd\u65b0\u7ef4\u62a4\u4e00\u904d\u663e\u7136\u4f1a\u5bc4\uff0c\u6240\u4ee5\u8003\u8651\u4e00\u4e9b\u4eba\u7c7b\u667a\u6167\u3002\n\n## \u5e7f\u4e49\u77e9\u9635\u4e58\u6cd5\n\n\u9996\u5148\u5bf9\u4e8e\u666e\u901a\u7684\u77e9\u9635\u4e58\u6cd5\uff0c\u6211\u4eec\u968f\u4fbf\u4e3e\u4e2a\u4f8b\u5b50\uff1a\n$$\n\\begin{bmatrix}\na & b \\\\\nc & d\n\\end{bmatrix}\n\\begin{bmatrix}\ne \\\\\nf\n\\end{bmatrix}\n=\n\\begin{bmatrix}\nae + bf \\\\\nce + df\n\\end{bmatrix}\n$$\n\n\u6211\u4eec\u8003\u8651\u628a\u8fd9\u73a9\u610f\u7701\u7565\u7684\u4e1c\u897f\u5199\u5168\u4e00\u70b9\uff1a\n$$\n\\begin{bmatrix}\na & b \\\\\nc & d\n\\end{bmatrix}\n\\begin{bmatrix}\ne \\\\\nf\n\\end{bmatrix}\n=\n\\begin{bmatrix}\na \\times e + b \\times f \\\\\nc \\times e + d \\times f\n\\end{bmatrix}\n$$\n\u6211\u4eec\u53d1\u73b0\u8fd9\u91cc\u4e00\u5171\u6709\u4e24\u79cd\u7b26\u53f7\uff0c$ + $ \u548c $ \\times $\uff0c\u8003\u8651\u66ff\u6362\u8fd9\u4e24\u4e2a\u7b26\u53f7\uff0c\u5047\u8bbe\u6211\u4eec\u5b58\u5728\u4e24\u4e2a\u4e8c\u5143\u8fd0\u7b97\u7b26 $ \\oplus $ \u548c $ \\otimes $\uff0c\u66ff\u6362\u4e00\u4e0b\u5c31\u662f\uff1a\n$$\n\\begin{bmatrix}\na & b \\\\\nc & d\n\\end{bmatrix}\n\\begin{bmatrix}\ne \\\\\nf\n\\end{bmatrix}\n=\n\\begin{bmatrix}\na \\otimes e \\oplus b \\otimes f \\\\\nc \\otimes e \\oplus d \\otimes f\n\\end{bmatrix}\n$$\n\u8fd9\u5c31\u662f\u5e7f\u4e49\u77e9\u9635\u4e58\u6cd5\u4e86\u3002\n\n\u7136\u540e\u4e3a\u4e86\u8ba9\u8fd9\u4e1c\u897f\u80fd\u6709\u70b9\u7528\uff0c\u6240\u4ee5\u73b0\u5728\u6211\u4eec\u8fd8\u9700\u8981\u8ba9\u5e7f\u4e49\u77e9\u9635\u4e58\u6cd5\u5177\u6709\u7ed3\u5408\u5f8b\uff0c\u4e5f\u5c31\u662f\uff1a\n$$\nA(BC) = (AB)C\n$$\n\u6216\u8005\u5199\u6210\uff1a\n$$\n(A(BC))_{i, j} = ((AB)C)_{i, j}\n$$\n\u5c55\u5f00\u4e00\u4e0b\u6709\uff1a\n$$\n\\begin{aligned}\n(A(BC))_{i, j}\n\t&= \\bigoplus_{k = 1}^{p} A_{i, p} \\otimes (BC)_{p, j} \\\\\n\t&= \\bigoplus_{k = 1}^{p} \\left( A_{i, p} \\otimes \\left( \\bigoplus_{s = 1}^{q}B_{p, s} \\otimes C_{s, j} \\right) \\right)\n\\end{aligned}\n$$\n\n$$\n\\begin{aligned}\n((AB)C)_{i, j}\n\t&= \\bigoplus_{s = 1}^{q} (AB)_{i, s} \\otimes C_{s, j} \\\\\n\t&= \\bigoplus_{s = 1}^{q} \\left( \\left( \\bigoplus_{k = 1}^{p}A_{i, k} \\otimes B_{k, p} \\right) \\otimes C_{s, j} \\right)\n\\end{aligned}\n$$\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u5982\u679c $ \\otimes $ \u5bf9 $ \\oplus $ \u5b58\u5728\u5206\u914d\u5f8b\uff0c\u6216\u8005\u8bf4\u6ee1\u8db3 $ (a \\oplus b) \\otimes c = (a \\otimes c) \\oplus (b \\otimes c) $\uff0c\u90a3\u4e48\u628a\u4e0a\u9762\u7684\u4e24\u4e2a\u5f0f\u5b50\u62c6\u5f00\u4e4b\u540e\uff0c\u6700\u540e\u5c31\u4f1a\u53d1\u73b0\u5b9e\u9645\u4e0a\u662f\u76f8\u540c\u7684\u3002\n\n\u6240\u4ee5\u6211\u4eec\u4fbf\u53ef\u5f97\u51fa\u8fd9\u4e2a\u7ed3\u8bba\u2014\u2014\u5982\u679c $ \\otimes $ \u5bf9 $ \\oplus $ \u5b58\u5728\u5206\u914d\u5f8b\uff0c\u90a3\u4e48\u5f62\u6210\u7684\u5e7f\u4e49\u77e9\u9635\u4e58\u6cd5\u77e9\u9635\u4e4b\u95f4\u5c31\u6ee1\u8db3\u7ed3\u5408\u5f8b\u3002\n\n## DDP\n\n\u4e3a\u4e86\u4fbf\u4e8e\u7406\u89e3\uff0c\u6211\u4eec\u5148\u5f15\u5165\u4e00\u4e2a\u66f4\u7b80\u5355\u7684\u4f8b\u5b50\u3002\n\n### \u4f8b\u9898 #0\n\n\u9898\u9762\uff1a\u6c42\u6590\u6ce2\u90a3\u5951\u6570\u5217\u3002\n\n\u5341\u5206\u663e\u7136\u7684 $ dp(i) = dp(i - 1) + dp(i - 2) $\u3002\n\n\u6211\u4eec\u8003\u8651\u4e00\u4e9b~~\u8ba9\u590d\u6742\u5ea6\u66f4\u9ad8~~\u5947\u5999\u7684\u65b9\u6cd5\u3002\n\n\u6211\u4eec\u8003\u8651\u628a\u8fd9\u4e2a\u8f6c\u79fb\u77e9\u9635\u8bb0\u4f5c $ X $\uff0c\u8f6c\u79fb\u7684\u8d77\u59cb\u548c\u7ec8\u70b9\u5206\u522b\u5199\u6210\u4e00\u4e2a\u77e9\u9635\uff0c\u4e3a\u4e86\u51d1\u9f50\u77e9\u9635\uff0c\u53ef\u4ee5\u628a\u7ec8\u70b9\u585e\u4e00\u4e2a $ 0 $\uff0c\u6216\u8005 $ dp(i - 1) $ \u8fd9\u79cd\u65e0\u5173\u7684\u503c\uff0c\u5982\u66ff\u6362\u4e3a $ 0 $\uff0c\u5219\u6709\uff1a\n$$\nX\n\\begin{bmatrix}\ndp(i - 1)\\\\\ndp(i - 2)\n\\end{bmatrix}\n=\n\\begin{bmatrix}\ndp(i) \\\\\n0\n\\end{bmatrix}\n$$\n\u6b64\u65f6\u7684 $ \\otimes $ \u5c31\u662f $ \\times $\uff0c$ \\oplus $ \u5c31\u662f $ + $\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u8fd9\u4e2a\u77e9\u9635\u4e4b\u95f4\u7684\u4e58\u6cd5\u5c31\u662f\u7ecf\u5178\u7684\u77e9\u9635\u4e58\u6cd5\uff0c\u5219\u4e0d\u96be\u7b97\u51fa\u6211\u4eec\u9700\u8981\u7684\u77e9\u9635 $ X $ \u4e3a\uff1a\n$$\nX = \n\\begin{bmatrix}\n1 & 1 \\\\\n0 & 0\n\\end{bmatrix}\n$$\n\u4e5f\u5c31\u662f\u8bf4\uff1a\n$$\n\\begin{bmatrix}\n1 & 1 \\\\\n0 & 0\n\\end{bmatrix}\n\\begin{bmatrix}\ndp(i - 1)\\\\\ndp(i - 2)\n\\end{bmatrix}\n=\n\\begin{bmatrix}\ndp(i) \\\\\n0\n\\end{bmatrix}\n$$\n\u4e8e\u662f\u6211\u4eec\u4e0d\u5982\u7ee7\u7eed\u5c1d\u8bd5\u628a $ \\texttt{LHS} $ \u7684\u5e26\u6709 $ dp $ \u7684\u5f0f\u5b50\u63a5\u7740\u62c6\u4e0b\u53bb\uff1a\n$$\nX\n\\begin{bmatrix}\ndp(i - 2)\\\\\ndp(i - 3)\n\\end{bmatrix}\n=\n\\begin{bmatrix}\ndp(i - 1) \\\\\ndp(i - 2)\n\\end{bmatrix}\n$$\n\u8fd9\u4e1c\u897f\u867d\u7136\u53ef\u4ee5\u8f6c\u79fb\u7684\uff0c\u4f46\u662f\u81ea\u5df1\u89c2\u5bdf\u4e00\u4e0b\uff0c\u8fd9\u4e1c\u897f\u7684\u5f62\u5f0f\u548c\u6700\u5f00\u59cb\u7684\u67ff\u5b50\u597d\u50cf\u5f62\u5f0f\u5f88\u76f8\u4f3c\uff0c\u4e8e\u662f\u6211\u4eec\u8003\u8651\u5982\u679c\u4e0d\u53bb\u9009\u62e9 $ 0 $ \u800c\u53bb\u9009\u62e9 $ dp(i - 1) $ \u53ef\u80fd\u4f1a\u66f4\u65b9\u4fbf\u4e00\u4e9b\uff08\u5f53\u7136\u9009\u62e9 $ 0 $ \u4e5f\u662f\u53ef\u4ee5\u8f6c\u79fb\u7684\uff0c\u53ea\u662f\u4f1a\u66f4\u590d\u6742\u4e00\u4e9b\uff09\u3002\u6240\u4ee5\u6211\u4eec\u6700\u5f00\u59cb\u7684\u5f0f\u5b50\u5c31\u53d8\u6210\u4e86\uff1a\n$$\nX\n\\begin{bmatrix}\ndp(i - 1)\\\\\ndp(i - 2)\n\\end{bmatrix}\n=\n\\begin{bmatrix}\ndp(i) \\\\\ndp(i - 1)\n\\end{bmatrix}\n$$\n\u7136\u540e\u8fd9\u6837\u4e5f\u5f88\u7b80\u5355\u5c31\u80fd\u6c42\u51fa\u6765 $ X $ \u4e86\uff1a\n$$\n\\begin{bmatrix}\n1 & 1 \\\\\n1 & 0\n\\end{bmatrix}\n\\begin{bmatrix}\ndp(i - 1)\\\\\ndp(i - 2)\n\\end{bmatrix}\n=\n\\begin{bmatrix}\ndp(i) \\\\\ndp(i - 1)\n\\end{bmatrix}\n$$\n\u7136\u540e\u6211\u4eec\u7ee7\u7eed\u5f80\u4e0b\u8f6c\u79fb\uff1a\n$$\n\\begin{bmatrix}\n1 & 1 \\\\\n1 & 0\n\\end{bmatrix}\n\\begin{bmatrix}\n1 & 1 \\\\\n1 & 0\n\\end{bmatrix}\n\\begin{bmatrix}\ndp(i - 2)\\\\\ndp(i - 3)\n\\end{bmatrix}\n=\n\\begin{bmatrix}\ndp(i) \\\\\ndp(i - 1)\n\\end{bmatrix}\n$$\n\u6b64\u65f6\u6211\u4eec\u4fbf\u80fd\u53d1\u73b0\u4e00\u4e9b\u5947\u5999\u7684\u63a8\u5bfc\uff1a\n$$\n\\begin{bmatrix}\n1 & 1 \\\\\n1 & 0\n\\end{bmatrix}^{i - 3}\n\\begin{bmatrix}\ndp(2)\\\\\ndp(1)\n\\end{bmatrix}\n=\n\\begin{bmatrix}\ndp(i) \\\\\ndp(i - 1)\n\\end{bmatrix}\n$$\n\u4e8e\u662f\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u4fbf\u53ef\u4ee5\u77e9\u9635\u5feb\u901f\u5e42\uff08\u56e0\u6b64\u6211\u4eec\u624d\u9700\u8981\u4f7f\u5e7f\u4e49\u77e9\u9635\u4e4b\u95f4\u6ee1\u8db3\u7ed3\u5408\u5f8b\uff0c\u5426\u5219\u7528\u4e0d\u4e86\u77e9\u9635\u5feb\u901f\u5e42\u6216\u8005\u7ebf\u6bb5\u6811\u732b\u6811\u4e4b\u7c7b\u7684\uff09\u628a\u539f\u6765\u7684\u7ebf\u6027\u6c42\uff0c\u53d8\u6210\u73b0\u5728\u7684 $ \\log $ \u6c42\u4e86\uff08\u867d\u7136\u5e38\u6570\u5927\u4e86\u70b9\uff09\u3002\n\n\u5f53\u7136\u8fd9\u53ea\u662f\u6700\u6700\u57fa\u7840\u7684 DDP\u3002\n\n## \u4f8b\u9898 #0.5\n\n\u9898\u76ee\uff1a[LG-P1115 \u6700\u5927\u5b50\u6bb5\u548c](https://www.luogu.com.cn/problem/P1115)\u3002\n\n\u6700\u5927\u5b57\u6bb5\u548c\u6a21\u677f\u9898\uff0c\u56e0\u4e3a\u6bd4\u8f83\u6c34\u6240\u4ee5\u8fd9\u91cc\u5c31\u4e0d\u53d9\u8ff0\u7684\u592a\u8be6\u7ec6\u4e86\uff0c\u4ee4 $ dp(i) $ \u8868\u793a\u4ee5 $ a_i $ \u7ed3\u5c3e\u7684\u533a\u95f4 $ \\left[ 1, i \\right] $ \u7684\u6700\u5927\u5b50\u6bb5\u548c\uff0c\u6709\u8f6c\u79fb $ dp(i) = \\max(dp(i - 1) + a_i, a_i) $\uff0c\u4f46\u662f\u8fd9\u6837\u6c42\u5b8c\u662f\u8fd8\u9700\u8981\u518d\u626b\u4e00\u904d\u53d6 $ \\max $\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u4e0d\u592a\u597d\u7528\u77e9\u9635\u8f6c\u79fb\uff0c\u4e8e\u662f\u8003\u8651\u518d\u4ee4 $ ans(i) = \\max(dp(i), ans(i - 1)) $\u3002\u4e8e\u662f\u6211\u4eec\u4e0d\u96be\u63a8\u51fa\u5982\u4e0b\u8f6c\u79fb\uff1a\n$$\n\\begin{bmatrix}\nans(i - 1) & dp(i - 1) & 0\n\\end{bmatrix}\n\\begin{bmatrix}\n0 & -\\infty & -\\infty \\\\\na_i & a_i & -\\infty \\\\\na_i & a_i & 0\n\\end{bmatrix}\n=\n\\begin{bmatrix}\nans(i) & dp(i) & 0\n\\end{bmatrix}\n$$\n\u540c\u65f6\u6ce8\u610f\u8fd9\u91cc\u7684\u77e9\u9635\u662f\u5e7f\u4e49\u77e9\u9635\u4e58\u6cd5\uff0c$ \\otimes $ \u4e3a $ + $\uff0c$ \\oplus $ \u4e3a $ \\max $\uff0c\u663e\u7136 $ + $ \u5bf9 $ \\max $ \u6709\u5206\u914d\u5f8b\uff0c\u5219\u77e9\u9635\u6709\u7ed3\u5408\u5f8b\u3002\n\n\u7136\u540e\u50cf\u4e4b\u524d\u4e00\u6837\u62c6\u4e0b\u53bb\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u5927\u4e32\u77e9\u9635\u76f8\u4e58\uff0c~~\u6210\u529f\u5927\u5e45\u589e\u52a0\u5e38\u6570~~\u6210\u529f\u63d0\u9ad8\u4e86\u8f6c\u79fb\u7684\u6269\u5c55\u6027\u3002\n\n## \u4f8b\u9898 #1\n\n\u73b0\u5728\u8ba9\u6211\u4eec\u56de\u5230\u6587\u7ae0\u4f0a\u59cb\u63d0\u5230\u7684\u4f8b\u9898\uff0c\u8fd9\u91cc\u6211\u4eec\u518d\u56de\u987e\u4e00\u4e0b\uff1a\n\n\u9898\u76ee [SP1043 GSS1 - Can you answer these queries I](https://www.luogu.com.cn/problem/SP1043)\u3002\n\n\u9898\u9762\uff1a\u5bf9\u4e8e\u5e8f\u5217 $ a_n $\uff0c$ q $ \u6b21\u8be2\u95ee\u6c42 $ \\left[ l_i, r_i \\right] $ \u7684\u533a\u95f4\u6700\u5927\u5b50\u6bb5\u548c\u3002\n\n$ 1 \\le n \\le 5 \\times 10^4, a_i \\le 15007 $\u3002$ q $ \u5728 `int` \u8303\u56f4\u5185\u3002\n\n\u6709\u663e\u7136\u7684 DP\uff0c\u4ee4 $ dp(i) $ \u8868\u793a\u4ee5 $ a_i $ \u7ed3\u5c3e\u7684\u533a\u95f4 $ \\left[ 1, i \\right] $ \u7684\u6700\u5927\u5b50\u6bb5\u548c\u3002\n\n\u4e00\u822c\u7684\u533a\u95f4\u6700\u5927\u5b50\u6bb5\u548c\u8f6c\u79fb\u4e3a $ dp(i) = \\max(dp(i - 1) + a_i, a_i) $\uff0c\u5bf9\u4e8e\u672c\u9898\u5219\u4e3a\uff1a\n$$\ndp(i) = \\left\\{\n\\begin{array}{ll}\n\ta_i &\\quad i = l \\\\\n\t\\max(dp(i - 1) + a_i, a_i) &\\quad l \\lt i \\le r\n\\end{array}\n\\right.\n$$\n\u548c\u4e0a\u4e00\u9898\u4e00\u6837\uff0c\u6211\u4eec\u8fd8\u662f\u8003\u8651\u4ee4\uff1a\n$$\nans(i) = \\left\\{\n\\begin{array}{ll}\n\tdp(i) &\\quad i = l \\\\\n\t\\max(ans(i - 1), dp(i)) &\\quad l \\lt i \\le r\n\\end{array}\n\\right.\n$$\n$ i = l $ \u5c31\u662f\u4e2a\u7279\u5224\u53ef\u4ee5\u4e0d\u7528\u8003\u8651\uff0c\u8003\u8651\u628a $ l \\lt i \\le r $ \u7684\u5f0f\u5b50\u53d8\u6210\u5e7f\u4e49\u77e9\u4e58\uff1a\n$$\n\\begin{bmatrix}\nans(i - 1) & dp(i - 1) & 0\n\\end{bmatrix}\n\\begin{bmatrix}\n0 & -\\infty & -\\infty \\\\\na_i & a_i & -\\infty \\\\\na_i & a_i & 0\n\\end{bmatrix}\n=\n\\begin{bmatrix}\nans(i) & dp(i) & 0\n\\end{bmatrix}\n$$\n\u7136\u540e\u7ee7\u7eed\u5f80\u4e0b\u62c6\uff1a\n$$\n\\begin{bmatrix}\nans(i - 2) & dp(i - 2) & 0\n\\end{bmatrix}\n\\begin{bmatrix}\n0 & -\\infty & -\\infty \\\\\na_{i - 1} & a_{i - 1} & -\\infty \\\\\na_{i - 1} & a_{i - 1} & 0\n\\end{bmatrix}\n\\begin{bmatrix}\n0 & -\\infty & -\\infty \\\\\na_i & a_i & -\\infty \\\\\na_i & a_i & 0\n\\end{bmatrix}\n=\n\\begin{bmatrix}\nans(i) & dp(i) & 0\n\\end{bmatrix}\n$$\n\u4e00\u76f4\u62c6\u5230\u8fb9\u754c\uff0c\u5c31\u662f\uff1a\n$$\n\\begin{bmatrix}\nans(l) & dp(l) & 0\n\\end{bmatrix}\n\\begin{bmatrix}\n0 & -\\infty & -\\infty \\\\\na_{l + 1} & a_{l + 1} & -\\infty \\\\\na_{l + 1} & a_{l + 1} & 0\n\\end{bmatrix}\n\\cdots\n\\begin{bmatrix}\n0 & -\\infty & -\\infty \\\\\na_{i - 1} & a_{i - 1} & -\\infty \\\\\na_{i - 1} & a_{i - 1} & 0\n\\end{bmatrix}\n\\begin{bmatrix}\n0 & -\\infty & -\\infty \\\\\na_i & a_i & -\\infty \\\\\na_i & a_i & 0\n\\end{bmatrix}\n=\n\\begin{bmatrix}\nans(i) & dp(i) & 0\n\\end{bmatrix}\n$$\n\u56e0\u4e3a\u6211\u4eec\u8981\u7684\u7b54\u6848\u4e3a $ ans(r) $\uff0c\u6240\u4ee5\u628a $ i $ \u6362\u6210 $ r $\u3002\u5e76\u4e14\u663e\u7136\u6709 $ ans(l) = dp(l) = a_l $\uff0c\u5219\u539f\u5f0f\u5316\u4e3a\uff1a\n$$\n\\begin{bmatrix}\na_l & a_l & 0\n\\end{bmatrix}\n\\begin{bmatrix}\n0 & -\\infty & -\\infty \\\\\na_{l + 1} & a_{l + 1} & -\\infty \\\\\na_{l + 1} & a_{l + 1} & 0\n\\end{bmatrix}\n\\cdots\n\\begin{bmatrix}\n0 & -\\infty & -\\infty \\\\\na_{r - 1} & a_{r - 1} & -\\infty \\\\\na_{r - 1} & a_{r - 1} & 0\n\\end{bmatrix}\n\\begin{bmatrix}\n0 & -\\infty & -\\infty \\\\\na_r & a_r & -\\infty \\\\\na_r & a_r & 0\n\\end{bmatrix}\n=\n\\begin{bmatrix}\nans(r) & dp(r) & 0\n\\end{bmatrix}\n$$\n\u53ef\u4ee5\u53d1\u73b0\u6211\u4eec\u60f3\u8981\u5f97\u5230 $ ans(r) $\uff0c\u53ea\u9700\u8981\u4ece\u5df2\u77e5\u5177\u4f53\u503c\u7684 $ \\begin{bmatrix} a_l & a_l & 0 \\end{bmatrix} $\uff0c\u4e58\u4e0a\u4e00\u5927\u5806\u77e9\u9635\u3002\n\n\u4e3a\u4e86\u4fbf\u4e8e\u4e66\u5199\uff0c\u6211\u4eec\u8bb0\uff1a\n$$\nA_i =\n\\begin{bmatrix}\n0 & -\\infty & -\\infty \\\\\na_i & a_i & -\\infty \\\\\na_i & a_i & 0\n\\end{bmatrix}\n$$\n\u5219\uff1a\n$$\n\\begin{bmatrix}\nans(r) & dp(r) & 0\n\\end{bmatrix}\n=\n\\begin{bmatrix}\na_l & a_l & 0\n\\end{bmatrix}\nA_{l + 1} A_{l + 2} \\cdots A_{r - 1} A_r\n$$\n**\u800c\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\u6211\u4eec\u8fd8\u6709\u5f88\u591a\u5c0f\u6280\u5de7\u4e0e\u8f6c\u5316\u6765\u8ba9\u6211\u4eec\u5b9e\u73b0\u8d77\u6765\u66f4\u7b80\u5355**\uff1a\n\n\u5982\u5bf9\u4e8e\u77e9\u9635\u6211\u4eec\u4e00\u822c\u901a\u8fc7\u65b0\u5f00\u4e00\u4e2a\u7ed3\u6784\u4f53\u7136\u540e\u91cd\u8f7d `*` \u5b9e\u73b0\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u628a\u521d\u59cb\u77e9\u9635\u8865\u9f50\u6210 $ 3 \\times 3 $ \u7684\uff0c\u8fd9\u6837\u6700\u7ec8\u7b54\u6848\u4e5f\u4f1a\u53d8\u6210 $ 3 \\times 3 $\uff0c\u6211\u4eec\u4fbf\u53ea\u9700\u8981\u7ef4\u62a4\u957f\u5bbd\u5747\u4e3a $ 3 $ \u7684\u5b9a\u5927\u5c0f\u7684\u77e9\u9635\u5373\u53ef\uff0c\u81f3\u4e8e\u8865\u9f50\u7684\u503c\u662f\u4ec0\u4e48\u8fd9\u4e2a\u5b9e\u9645\u4e0a\u662f\u4efb\u610f\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u9700\u8981\u8fd9\u4e9b\u8865\u9f50\u7684\u503c\u7b97\u51fa\u6765\u7684\u7b54\u6848\uff0c\u6240\u4ee5\u6700\u7ec8\u8ba1\u7b97\u51fa\u4ec0\u4e48\u4e5f\u662f\u65e0\u5173\u7d27\u8981\u7684\uff0c\u8ba1\u7b97\u540e\u76f4\u63a5\u8f93\u51fa\u7b54\u6848\u77e9\u9635\u7684 $ (0, 0) $ \u4f4d\u7f6e\uff0c\u4e5f\u5c31\u662f $ ans(r) $ \u5373\u53ef\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff1a\n$$\n\\begin{bmatrix}\na_l & a_l & 0 \\\\\n-\\infty & -\\infty & -\\infty \\\\\n-\\infty & -\\infty & -\\infty\n\\end{bmatrix}\n$$\n\u7136\u540e\u5728\u91cd\u8f7d\u77e9\u9635\u7684\u4e58\u6cd5\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5e94\u8be5\u6ce8\u610f\uff0c\u662f\u5426\u6709\u53ef\u80fd\u4f1a\u8d85\u51fa `int` \u6216 `long long` \u7b49\uff0c\u6240\u4ee5\u5728\u6211\u4eec\u53d6 $ \\max $ \u7684\u65f6\u5019\u53ef\u4ee5\u8003\u8651\u989d\u5916\u52a0\u4e00\u4e2a $ -\\infty $\uff0c\u4e5f\u5c31\u662f\u5f53\u6709\u4e24\u4e2a\u6570\u76f8\u52a0\u6bd4 $ -\\infty $ \u66f4\u5c0f\u7684\u65f6\u5019\u90a3\u4e48\u5176\u4e2d\u4e00\u5b9a\u81f3\u5c11\u6709\u4e00\u4e2a\u6570\u4e3a $ -\\infty $\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u76f4\u63a5\u5c06\u7b54\u6848\u53d8\u6210 $ -\\infty $ \u5373\u53ef\u3002\n\n\u7136\u540e\u5982\u679c\u4e25\u683c\u6309\u7167\u4e0a\u9762\u7684\u7b97\u6cd5\u5b9e\u73b0\u51fa\u6765\u540e\uff0c\u4f1a\u53d1\u73b0\u4e00\u4e2a\u95ee\u9898\uff0c\u5728\u67d0\u4e9b\u7279\u6b8a\u7684\u65f6\u5019\u7b54\u6848\u4f1a\u9519\u8bef\uff0c\u7ecf\u8fc7 debug \u6211\u4eec\u53d1\u73b0\u5f53 $ l = r $ \u7684\u65f6\u5019\uff0c\u672c\u6765\u5e94\u8be5\u53ea\u6709\u6700\u521d\u7684\u521d\u59cb\u77e9\u9635\uff0c\u4f46\u662f\u6309\u7167\u6211\u4eec\u7684\u7b97\u6cd5\u4f1a\u591a\u51fa\u6765\u4e00\u4e2a $ \\left[ l + 1, r \\right] $ \u7684\u67e5\u8be2\uff0c\u4f46\u6b64\u65f6 $ l + 1 \\gt r $\uff0c\u6211\u4eec\u5f53\u7136\u53ef\u4ee5\u8003\u8651\u7279\u5224\u8fd9\u4e2a\u60c5\u51b5\uff0c\u4f46\u662f\u6211\u4eec\u5b9e\u9645\u4e0a\u8fd8\u53ef\u4ee5\u518d\u6b21\u8f6c\u6362\u4e00\u4e0b\u601d\u8def\uff0c\u8ba9\u8fd9\u4e2a\u4e1c\u897f\u66f4\u6cdb\u7528\uff0c\u66f4\u7f8e\u89c2\u3002\n\n\u6211\u4eec\u8003\u8651\u80fd\u5426\u5c06\u521d\u59cb\u77e9\u9635 $ \\begin{bmatrix}a_l & a_l & 0\\end{bmatrix} $ \u4e5f\u5199\u6210 $ A_l $\uff0c\u7136\u540e\u5728\u6700\u524d\u9762\u518d\u5f04\u4e00\u4e2a\u65b0\u7684**\u521d\u59cb\u77e9\u9635** $ T $\uff0c\u8ba9\u5b83\u548c $ A_l $ \u8fd0\u7b97\u540e\u4f1a\u53d8\u6210\u6211\u4eec\u60f3\u8981\u7684 $ \\begin{bmatrix}a_l & a_l & 0\\end{bmatrix} $\uff0c\u4e8e\u662f\u5f88\u5bb9\u6613\u5199\u51fa\uff1a\n$$\nT\n\\begin{bmatrix}\n0 & -\\infty & -\\infty \\\\\na_{l} & a_{l} & -\\infty \\\\\na_{l} & a_{l} & 0\n\\end{bmatrix}\n=\n\\begin{bmatrix}\na_l & a_l & 0 \\\\\n-\\infty & -\\infty & -\\infty \\\\\n-\\infty & -\\infty & -\\infty\n\\end{bmatrix}\n$$\n\u4e0d\u96be\u7b97\u51fa\uff1a\n$$\nT\n=\n\\begin{bmatrix}\n-\\infty & 0 & 0 \\\\\n-\\infty & -\\infty & -\\infty \\\\\n-\\infty & -\\infty & -\\infty \\\\\n\\end{bmatrix}\n$$\n\u6240\u4ee5\u6211\u4eec\u7684\u5f0f\u5b50\u5c31\u6700\u7ec8\u53d8\u6210\u4e86\uff1a\n$$\n\\begin{bmatrix}\nans(r) & dp(r) & 0 \\\\\n-\\infty & -\\infty & -\\infty \\\\\n-\\infty & -\\infty & -\\infty\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n-\\infty & 0 & 0 \\\\\n-\\infty & -\\infty & -\\infty \\\\\n-\\infty & -\\infty & -\\infty \\\\\n\\end{bmatrix}\nA_{l} A_{l + 1} \\cdots A_{r - 1} A_r\n$$\n\u73b0\u5728\u8fd9\u4e2a\u5f0f\u5b50\u5c31\u5f88\u597d\u7ef4\u62a4\u4e86\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u89c2\u5bdf\u90a3\u4e00\u5927\u4e32 $ A $\uff0c\u4e0d\u96be\u53d1\u73b0\u8fd9\u73a9\u610f\u597d\u50cf\u5c31\u662f\u628a $ \\left[ l, r \\right] $ \u7684 $ A $ \u4e58\u5230\u4e00\u8d77\u4e86\uff0c\u800c\u4e14\u6bcf\u6b21\u8be2\u95ee\u4f1a\u6709\u4e0d\u540c\u7684 $ l, r $\uff0c\u8fd9\u4e0d\u5c31\u662f\u533a\u95f4\u67e5\u8be2\u5417\uff0c\u6211\u4eec\u4e8e\u662f\u53ef\u4ee5\u8003\u8651\u7528\u4e00\u4e9b\u5999\u5999\u6570\u636e\u7ed3\u6784\u53bb\u7ef4\u62a4\u8fd9\u73a9\u610f\u3002\n\n\u6b64\u65f6\u6211\u4eec\u53ef\u80fd\u4f1a\u60f3\u5230\u6811\u72b6\u6570\u7ec4\uff0c\u4f46\u662f\u4ed4\u7ec6\u601d\u8003\u4e00\u4e0b\u5c31\u4f1a\u53d1\u73b0\u662f\u4e0d\u884c\u7684\u3002\u4f17\u6240\u5468\u77e5\u6811\u72b6\u6570\u7ec4\u5728\u8fd0\u7b97\u4e0a\u6709\u4e00\u4e2a\u7c7b\u4f3c\u5dee\u5206\u7684\u8fc7\u7a0b\uff0c\u4e5f\u5c31\u662f\u8bf4\u9700\u8981\u6709\u9006\u5143\u7684\u5b58\u5728\uff0c\u4f46\u662f\u5728\u6211\u4eec\u5b9a\u4e49\u7684\u77e9\u9635\u548c\u77e9\u9635\u4e4b\u95f4\u7684\u5e7f\u4e49\u77e9\u4e58\u6784\u6210\u7684\u7fa4\u4e2d\u662f\u5426\u5b58\u5728\u9006\u5143\u5462\uff1f\u663e\u7136\u6211\u4eec\u90fd\u77e5\u9053\u77e9\u9635\u6c42\u9006\u7684\u4e00\u4e2a\u5fc5\u8981\u6761\u4ef6\u662f\u884c\u5217\u5f0f\u4e0d\u4e3a $ 0 $\uff0c\u8fd9\u4e1c\u897f\u662f\u5426\u4e0d\u4e3a $ 0 $ \u662f\u65e0\u6cd5\u786e\u5b9a\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e0d\u4e00\u5b9a\u4f1a\u5b58\u5728\u9006\u5143\uff0c\u6240\u4ee5\u4e0d\u80fd\u7528\u6811\u72b6\u6570\u7ec4\u6216\u8005\u524d\u7f00\u79ef\u4e4b\u7c7b\u7684\u4e1c\u897f\u533a\u95f4\u67e5\u8be2\u3002\n\n\u4e00\u4e2a\u6bd4\u8f83\u663e\u7136\u7684\u4e1c\u897f\u5c31\u662f**\u7ebf\u6bb5\u6811**\uff0c\u6bcf\u4e2a\u8282\u70b9\u5b58\u7684\u662f\u4e00\u4e2a\u77e9\u9635\uff0c\u6216\u8005\u8bf4\u5bf9\u5e94\u533a\u95f4\u7684\u77e9\u9635\u4e58\u8d77\u6765\uff08\u770b\u5230\u8fd9\u91cc\u5927\u6982\u5c31\u53c8\u80fd\u610f\u8bc6\u5230\u8ba9\u77e9\u9635\u6ee1\u8db3\u7ed3\u5408\u5f8b\u7684\u91cd\u8981\u6027\u4e86\uff09\u3002\u5f53\u7136\u8fd9\u91cc\u7684\u4e58\u4ecd\u7136\u6307\u7684\u662f $ \\otimes $ \u4e3a $ + $\uff0c$ \\oplus $ \u4e3a $ \\max $ \u7684\u5e7f\u4e49\u77e9\u4e58\u3002\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u8bdd\u6700\u540e\u7684\u590d\u6742\u5ea6\u5927\u6982\u662f $ O(\\xi^3 (n + q)) $\uff0c\u5176\u4e2d $ \\xi $ \u4e3a\u77e9\u9635\u7684\u884c\u6570\u6216\u5217\u6570\uff0c\u8fd9\u91cc $ \\xi = 3 $\u3002\n\n\u5bf9\u4e8e\u672c\u9898\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u662f\u591a\u6b21\u67e5\u8be2\u6ca1\u6709\u4fee\u6539\uff0c\u6240\u4ee5\u4e5f\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u732b\u6811\uff0c\u4f7f\u67e5\u8be2\u590d\u6742\u5ea6\u53d8\u4e3a $ O(1) $\uff0c\u8fd9\u6837\u603b\u590d\u6742\u5ea6\u5c31\u53d8\u6210\u4e86 $ O(\\xi^3(n \\log n + q)) $\uff0c\u5177\u4f53\u4ecb\u7ecd\u53ef\u4ee5\u770b\u5495\u5495\u65e5\u62a5 [\u4e00\u79cd\u795e\u5947\u7684\u6570\u636e\u7ed3\u6784\u2014\u2014\u732b\u6811](https://www.luogu.com.cn/blog/yestoday/mao-shu)\u3002\n\n\u5f53\u7136\u7528\u5e73\u8861\u6811\uff0c\u5206\u5757\u4e4b\u7c7b\u7684\u4e5f\u80fd\u505a\uff0c\u8fd9\u91cc\u4e0d\u518d\u8fc7\u591a\u8d58\u8ff0\u3002\n\n\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e2a DDP + \u732b\u6811 \u5b9e\u73b0\u7684 GSS1\u3002\uff08\u6ce8\u610f\u732b\u6811\u8282\u70b9\u6570\u9700\u8981\u8865\u9f50\u5230 $ 2^t $\uff0c\u4e14\u8981\u5f00\u597d\u6570\u7ec4\u8303\u56f4\u7684\u5927\u5c0f\uff0c\u5426\u5219\u5f88\u5bb9\u6613 RE\uff09\n\n\uff08\u7bc7\u5e45\u539f\u56e0\u8fd9\u91cc\u7684\u4ee3\u7801\u7701\u7565\u4e86\uff0c\u53ef\u4ee5\u4ece\u6587\u7ae0\u5934\u7684\u94fe\u63a5\u5230\u539f Blog \u8bbf\u95ee\u67e5\u770b\uff09\n\n## \u4f8b\u9898 #2\n\n\u9898\u76ee\uff1a[[ABC246Ex] 01? Queries](https://www.luogu.com.cn/problem/AT_abc246_h)\u3002\n\n\u9898\u9762\uff1a\u7ed9\u5b9a\u957f\u5ea6\u4e3a $ N $ \u7684\u4ec5\u5305\u542b `0`\uff0c`1`\uff0c`?` \u7684\u5b57\u7b26\u4e32 $ S $\uff0c\u7ed9\u5b9a $ Q $ \u7ec4\u8be2\u95ee $ (x_1, c_1), (x_2, c_2), \\cdots, (x_q, c_q) $\uff0c\u6bcf\u6b21\u5c06\u539f\u5b57\u7b26\u4e32\u4e2d $ x_i $ \u4f4d\u7f6e\u7684\u5b57\u7b26\u6539\u4e3a $ c_i $\uff0c\u7136\u540e\u8f93\u51fa $ S $ \u6709\u591a\u5c11\u79cd\u975e\u7a7a\u5b50\u4e32\uff0c`?` \u9700\u4efb\u610f\u66ff\u6362\u4e3a `0` \u6216 `1`\u3002\n\n$ 1 \\le N, Q \\le 10^5, 1 \\le x_i \\le N $\u3002\n\n\u6211\u4eec\u5148\u4e0d\u8003\u8651\u4fee\u6539\uff0c\u601d\u8003\u5bf9\u4e8e\u8fd9\u6837\u4e00\u4e2a\u5b57\u7b26\u4e32\u80fd\u6709\u591a\u5c11\u79cd\u5b50\u4e32\uff0c\u663e\u7136\u8fd9\u4e2a\u4e1c\u897f\u662f\u4e2a DP\u3002\n\n\u4ee4 $ dp(i, 0 / 1) $ \u8868\u793a\u8003\u8651\u524d $ i $ \u4f4d\u4ee5 $ 0 $ \u6216 $ 1 $ \u7ed3\u5c3e\u7684\u65b9\u6848\u6570\uff0c\u663e\u7136\u6709\u5982\u4e0b\u8f6c\u79fb\uff1a\n\n\u82e5 $ S_i = 1 $\uff0c\u6709\uff1a\n$$\ndp(i, 0) = dp(i - 1, 0)\n$$\n\n$$\ndp(i, 1) = dp(i - 1, 0) + dp(i - 1, 1) + 1\n$$\n\n\u82e5 $ S_i = 0 $\uff0c\u6709\uff1a\n$$\ndp(i, 0) = dp(i - 1, 0) + dp(i - 1, 1) + 1\n$$\n\n$$\ndp(i, 1) = dp(i - 1, 1)\n$$\n\n\u82e5 $ S_i = \\texttt{?} $\uff0c\u6709\uff1a\n$$\ndp(i, 0) = dp(i - 1, 0) + dp(i - 1, 1) + 1\n$$\n\n$$\ndp(i, 1) = dp(i - 1, 0) + dp(i - 1, 1) + 1\n$$\n\n\u5e94\u8be5\u4e0d\u96be\u7406\u89e3\u5427\uff1f\u5982\u679c\u72b6\u6001\u91cc\u662f\u5f53\u524d\u8fd9\u4e00\u4f4d\uff0c\u90a3\u4e48\u53ef\u4ee5\u63a5\u5230\u4e0a\u4e00\u4e2a\u72b6\u6001\u4efb\u610f\u7684\u7ed3\u5c3e\uff0c\u63a5\u4e0a\u8fd9\u4e00\u4f4d\u4e4b\u540e\u90fd\u4f1a\u662f\u4e00\u4e2a\u7b26\u5408\u8981\u6c42\u7684\u65b0\u4e32\uff0c\u6216\u8005\u4e22\u5f03\u4ee5\u524d\u7684\u76f4\u63a5\u8ba9\u8fd9\u4e00\u4f4d\u6210\u4e3a\u4e00\u4e2a\u65b0\u4e32\u3002\u53cd\u4e4b\u5c31\u76f4\u63a5\u7531\u4e0a\u4e00\u6b21\u7684\u8f6c\u79fb\u800c\u6765\uff0c\u628a\u8fd9\u4e00\u4f4d\u4e22\u5f03\uff0c\u800c $ \\texttt{?} $ \u53ef\u4ee5\u8ba4\u4e3a\u662f\u4efb\u610f\u4e00\u4e2a\uff0c\u6240\u4ee5\u53ef\u4ee5\u63a5\u5728\u4efb\u610f\u4e00\u4e2a\u7684\u540e\u9762\u3002\n\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u7ec6\u8282\u53ef\u4ee5\u89e3\u91ca\u4e00\u4e0b\uff0c\u5728\u8fd9\u4e00\u4f4d\u548c\u72b6\u6001\u76f8\u540c\u7684\u65f6\u5019\u6211\u4eec\u4f1a $ +1 $\uff0c\u4f46\u662f\u5982\u679c\u4e4b\u524d\u5c31\u6709\u4e00\u4e2a\u5b64\u7acb\u7684\uff08\u8fd9\u65f6\u5f88\u663e\u7136\u4f1a\u6709\u7684\uff09\uff0c\u6bd4\u5982 $ 0 $\uff0c\u90a3\u4e48\u6211\u4eec\u8fd9\u4e00\u4f4d\u53c8\u4e00\u4e2a\u65b0\u7684 $ 0 $ \u96be\u9053\u4e0d\u4f1a\u91cd\u5417\uff1f\u8fd9\u663e\u7136\u662f\u4e0d\u4f1a\u7684\uff0c\u56e0\u4e3a\u4e0a\u4e00\u4e2a\u72b6\u6001\u7684 $ 0 $ \u5728\u8fd9\u4e00\u6b21\u7684\u8ba8\u8bba\u4e2d\u5df2\u7ecf\u53d8\u6210 $ 00 $ \u4e86\uff0c\u53ea\u6709\u5728\u8ba8\u8bba\u5230\u4e0a\u754c\u7684\u65f6\u5019\u624d\u4f1a\u5b58\u5728\u771f\u6b63\u7684\u5b64\u7acb\u7684 $ 0 $ \u6216 $ 1 $\uff0c\u4e8e\u662f\u663e\u7136\u53ef\u4ee5\u4fdd\u8bc1\u4e0d\u91cd\u4e0d\u6f0f\u3002\n\n\u8fd9\u4e48\u4e00\u5927\u5768\u5206\u7c7b\u8ba8\u8bba\u663e\u7136\u5f88\u96be\u7ef4\u62a4\uff0c\u90a3\u4e48\u6211\u4eec\u5c1d\u8bd5\u628a\u8fd9\u4e9b\u7f29\u5230\u4e00\u8d77\uff1a\n$$\ndp(i, 0) = dp(i - 1, 0) + \\left[ S_i \\neq 1 \\right](dp(i - 1, 1) + 1)\n$$\n\n$$\ndp(i, 1) = dp(i - 1, 1) + \\left[ S_i \\neq 0 \\right](dp(i - 1, 0) + 1)\n$$\n\n> \u5173\u4e8e\u5f0f\u5b50\u4e2d\u7684\u65b9\u62ec\u53f7\u62ec\u8d77\u6765\u7684\u8868\u8fbe\u5f0f\uff0c\u8fd9\u4e2a\u4e00\u822c\u7528\u6765\u8868\u793a\u5982\u679c\u91cc\u9762\u7684\u8868\u8fbe\u5f0f\u4e3a $ \\texttt{true} $\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4e1c\u897f\u503c\u4e3a $ 1 $\uff0c\u53cd\u4e4b\u4e3a $ 0 $\u3002\n\n\u73b0\u5728\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5bf9\u8fd9\u4e2a\u7b80\u6d01\u7684\u5f0f\u5b50\u641e\u4e8b\u60c5\u4e86\uff0c\u56e0\u4e3a\u6211\u4eec\u540e\u9762\u8981\u6709\u5f88\u591a\u6b21\u4fee\u6539\uff0c\u8fd9\u6837\u7684\u8bdd\u663e\u7136\u53ef\u4ee5\u8003\u8651 DDP\u3002\n\n\u6211\u4eec\u518d\u6b21\u5c1d\u8bd5\u8bbe\u8ba1\u51fa\u8f6c\u79fb\u7684\u77e9\u9635\uff1a\n$$\n\\begin{bmatrix}\ndp(i - 1, 0) & dp(i - 1, 1) \\\\\n0 & 0\n\\end{bmatrix}\nT\n=\n\\begin{bmatrix}\ndp(i, 0) & dp(i, 1) \\\\\n0 & 0\n\\end{bmatrix}\n$$\n~~\u4e0d\u96be\u7b97\u51fa~~\uff1a\u4e0d\u96be\u7b97\u51fa\u6211\u4eec\u7b97\u4e0d\u51fa\u6765\u3002\n\n\u4e8e\u662f\u8003\u8651\u518d\u52a0\u4e00\u7ef4\n$$\n\\begin{bmatrix}\ndp(i - 1, 0) & dp(i - 1, 1) & 1 \\\\\n0 & 0 & 0 \\\\\n0 & 0 & 0\n\\end{bmatrix}\nT\n=\n\\begin{bmatrix}\ndp(i, 0) & dp(i, 1) & 1\\\\\n0 & 0 & 0 \\\\\n0 & 0 & 0\n\\end{bmatrix}\n$$\n\u7136\u540e\u5c1d\u8bd5\u63a8\u4e00\u4e0b $ T $\uff0c\u8fd9\u4e1c\u897f\u4e2a\u4eba\u8ba4\u4e3a\u5b9e\u9645\u4e0a\u5c31\u662f\u4e2a\u8499\u731c\u51d1\uff0c\u603b\u4e4b\u6700\u540e\u5f04\u4e00\u4e0b\u5c31\u80fd\u51fa\u6765\u8fd9\u4e2a\uff08\u6ce8\u610f\u8fd9\u91cc\u6211\u4eec\u7528\u7684\u662f\u666e\u901a\u77e9\u4e58\u89c4\u5219\uff0c\u975e\u5e7f\u4e49\uff09\uff1a\n$$\n\\begin{bmatrix}\ndp(i - 1, 0) & dp(i - 1, 1) & 1 \\\\\n0 & 0 & 0 \\\\\n0 & 0 & 0\n\\end{bmatrix}\n\\begin{bmatrix}\n1 & \\left[ S_i \\neq 0 \\right] & 0 \\\\\n\\left[ S_i \\neq 1 \\right] & 1 & 0 \\\\\n\\left[ S_i \\neq 1 \\right] & \\left[ S_i \\neq 0 \\right] & 1\n\\end{bmatrix}\n=\n\\begin{bmatrix}\ndp(i, 0) & dp(i, 1) & 1 \\\\\n0 & 0 & 0 \\\\\n0 & 0 & 0\n\\end{bmatrix}\n$$\n\uff08\u4e0d\u8981\u95ee\u6211\u4e3a\u4ec0\u4e48\u8fd9\u9898\u7528\u4e0d\u5230\u5e7f\u4e49\u77e9\u4e58\u8fd8\u8981\u5728\u524d\u9762\u8bf4\u4e00\u5927\u5806\u5e7f\u4e49\u77e9\u4e58\u7684\u5185\u5bb9\uff0c~~\u6211\u8bb0\u9519\u4e86~~\uff0c\u6280\u591a\u4e0d\u538b\u8eab\uff09\n\n\u7136\u540e\u7c7b\u6bd4\u4e4b\u524d\u7684\u8fc7\u7a0b\uff0c\u4ee4\uff1a\n$$\nA_i\n=\n\\begin{bmatrix}\n1 & \\left[ S_i \\neq 0 \\right] & 0 \\\\\n\\left[ S_i \\neq 1 \\right] & 1 & 0 \\\\\n\\left[ S_i \\neq 1 \\right] & \\left[ S_i \\neq 0 \\right] & 1\n\\end{bmatrix}\n$$\n\u90a3\u4e48\u4e00\u76f4\u62c6\u4e0b\u53bb\uff0c\u4e00\u5b9a\u6709\uff1a\n$$\n\\begin{bmatrix}\ndp(1, 0) & dp(1, 1) & 1 \\\\\n0 & 0 & 0 \\\\\n0 & 0 & 0\n\\end{bmatrix}\nA_2\nA_3\n\\cdots\nA_n\n=\n\\begin{bmatrix}\ndp(n, 0) & dp(n, 1) & 1 \\\\\n0 & 0 & 0 \\\\\n0 & 0 & 0\n\\end{bmatrix}\n$$\n\u4f9d\u7136\u5c1d\u8bd5\u627e\u5230\u4e00\u4e2a\u8fd9\u6837\u7684\u7b49\u5f0f\uff1a\n$$\n\\begin{bmatrix}\n0 & 0 & 1 \\\\\n0 & 0 & 0 \\\\\n0 & 0 & 0\n\\end{bmatrix}\n\\begin{bmatrix}\n1 & \\left[ S_1 \\neq 0 \\right] & 0 \\\\\n\\left[ S_1 \\neq 1 \\right] & 1 & 0 \\\\\n\\left[ S_1 \\neq 1 \\right] & \\left[ S_1 \\neq 0 \\right] & 1\n\\end{bmatrix}\n=\n\\begin{bmatrix}\ndp(n, 0) & dp(n, 1) & 1 \\\\\n0 & 0 & 0 \\\\\n0 & 0 & 0\n\\end{bmatrix}\n$$\n\u6240\u4ee5\u53ef\u4ee5\u6700\u7ec8\u5316\u4e3a\uff1a\n$$\n\\begin{bmatrix}\n0 & 0 & 1 \\\\\n0 & 0 & 0 \\\\\n0 & 0 & 0\n\\end{bmatrix}\nA_1\nA_2\n\\cdots\nA_n\n=\n\\begin{bmatrix}\ndp(n, 0) & dp(n, 1) & 1 \\\\\n0 & 0 & 0 \\\\\n0 & 0 & 0\n\\end{bmatrix}\n$$\n\u7ec8\u4e8e\u63a8\u5b8c\u4e86\uff0c\u4e0d\u96be\u53d1\u73b0\u6211\u4eec\u6bcf\u6b21\u7684\u4fee\u6539\u5c31\u662f $ A_i $ \u7684\u503c\uff0c\u7136\u540e\u67e5\u8be2\u6574\u4e2a\u533a\u95f4\u3002\n\n\u8fd9\u73a9\u610f\u6709\u4fee\u6539\u663e\u7136\u7528\u4e0d\u4e86\u732b\u6811\u4e86\uff0c\u8001\u8001\u5b9e\u5b9e\u5199\u7ebf\u6bb5\u6811\u5427\u3002\u3002\n\n\u590d\u6742\u5ea6\u5927\u6982\u662f $ O(\\xi^3(n + q \\log n)) $\uff0c\u5176\u4e2d $ \\xi = 3 $\u3002\n\n```cpp\n#define _USE_MATH_DEFINES\n#include <bits/extc++.h>\n\n#define PI M_PI\n#define E M_E\n#define npt nullptr\n#define SON i->to\n#define OPNEW void* operator new(size_t)\n#define ROPNEW(arr) void* Edge::operator new(size_t){static Edge* P = arr; return P++;}\n\nusing namespace std;\nusing namespace __gnu_pbds;\n\nmt19937 rnd(random_device{}());\nint rndd(int l, int r){return rnd() % (r - l + 1) + l;}\nbool rnddd(int x){return rndd(1, 100) <= x;}\n\ntypedef unsigned int uint;\ntypedef unsigned long long unll;\ntypedef long long ll;\ntypedef long double ld;\n\n#define MAXN (int)(1e5 + 100)\n#define MOD (int)(998244353)\n\ntemplate< typename T = int >\ninline T read(void);\n\nint N, Q;\nint S[MAXN];\n\nstruct Matrix3{\n    int val[3][3];\n    Matrix3(int v00, int v01, int v02, int v10, int v11, int v12, int v20, int v21, int v22):\n        val{\n            {v00, v01, v02},\n            {v10, v11, v12},\n            {v20, v21, v22}\n        }{;}\n    Matrix3(int S):\n        val{\n            {1, S != 0, 0},\n            {S != 1, 1, 0},\n            {S != 1, S != 0, 1}\n        }{;}\n    Matrix3(int val[][3]){for(int i = 0; i <= 2; ++i)for(int j = 0; j <= 2; ++j)this->val[i][j] = val[i][j];}\n    Matrix3(void) = default;\n    friend const Matrix3 operator * (const Matrix3 &x, const Matrix3 &y){\n        int val[3][3]; memset(val, 0, sizeof val);\n        for(int i = 0; i <= 2; ++i)for(int j = 0; j <= 2; ++j)for(int p = 0; p <= 2; ++p)\n            val[i][j] = ((ll)val[i][j] + (ll)x.val[i][p] * y.val[p][j] % MOD) % MOD;\n        return Matrix3(val);\n    }\n    void Print(void){\n        for(int i = 0; i <= 2; ++i)for(int j = 0; j <= 2; ++j)\n            printf(\"%d%c\", val[i][j], j == 2 ? '\\n' : ' ');\n    }\n}mt[MAXN];\n\nclass SegTree{\nprivate:\n    Matrix3 tr[MAXN << 2];\n    #define LS (p << 1)\n    #define RS (LS | 1)\n    #define MID ((gl + gr) >> 1)\npublic:\n    void Pushup(int p){tr[p] = tr[LS] * tr[RS];}\n    void Build(int p = 1, int gl = 1, int gr = N){\n        if(gl == gr)return tr[p] = mt[gl = gr], void();\n        Build(LS, gl, MID);\n        Build(RS, MID + 1, gr);\n        Pushup(p);\n    }\n    void Modify(int idx, Matrix3 v, int p = 1, int gl = 1, int gr = N){\n        if(gl == gr)return tr[p] = v, void();\n        if(idx <= MID)Modify(idx, v, LS, gl, MID);\n        else Modify(idx, v, RS, MID + 1, gr);\n        Pushup(p);\n    }\n    Matrix3 Query(void){return tr[1];}\n}st;\n\nint main(){\n    N = read(), Q = read();\n    string s; cin >> s;\n    for(int i = 1; i <= (int)s.size(); ++i)\n        S[i] = s.at(i - 1) == '?' ? -1 : int(s.at(i - 1) - '0'),\n        mt[i] = Matrix3(S[i]);\n    st.Build();\n    Matrix3 origin(0, 0, 1, 0, 0, 0, 0, 0, 0);\n    while(Q--){\n        int p = read();\n        char c = getchar(); while(c != '0' && c != '1' && c != '?')c = getchar();\n        int flag = c == '?' ? -1 : int(c - '0');\n        st.Modify(p, Matrix3(flag));\n        auto ans = origin * st.Query();\n        printf(\"%d\\n\", (int)((ll)(ans.val[0][0] + ans.val[0][1]) % MOD));\n    }\n    fprintf(stderr, \"Time: %.6lf\\n\", (double)clock() / CLOCKS_PER_SEC);\n    return 0;\n}\n\ntemplate < typename T >\ninline T read(void){\n    T ret(0);\n    short flag(1);\n    char c = getchar();\n    while(c != '-' && !isdigit(c))c = getchar();\n    if(c == '-')flag = -1, c = getchar();\n    while(isdigit(c)){\n        ret *= 10;\n        ret += int(c - '0');\n        c = getchar();\n    }\n    ret *= flag;\n    return ret;\n}\n```\n\n## \u4f8b\u9898 #3\n\n\u540e\u9762\u5bf9\u4e8e DDP \u66f4\u8be6\u5c3d\u7684\u8bb2\u89e3\u53ef\u4ee5 [\u6233\u6b64\u8fdb\u5165](http://blog.monkey-hyx.tech?t=DDP)\u3002\n\n## UPD\n\nupdate-2022_10_22 \u521d\u7a3f",
        "postTime": 1666430960,
        "uid": 362938,
        "name": "Tsawke",
        "ccfLevel": 6,
        "title": "ABC246Ex 01? Queries \u9898\u89e3"
    },
    {
        "content": "[[ABC246Ex] 01? Queries](https://atcoder.jp/contests/abc246/tasks/abc246_h)\n\n\u9898\u76ee\u5927\u610f\uff1a\u7ed9\u4e00\u4e2a\u957f\u5ea6\u4e3a $N$ \u4e14\u53ea\u5305\u542b ```?```\uff0c```1```\uff0c```0``` \u7684\u5b57\u7b26\u4e32 $a$\u3002\u5171 $Q$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u4f1a\u4fee\u6539\u5b57\u7b26\u4e32\u4e2d\u7684\u4e00\u4e2a\u5b57\u7b26\uff0c\u5e76\u6c42\u51fa\u6b64\u65f6\u6574\u4e2a\u5b57\u7b26\u4e32\u4e2d**\u672c\u8d28\u4e0d\u540c\u7684\u5b50\u5e8f\u5217**\u4e2a\u6570\u3002\n\n\u4f17\u6240\u5468\u77e5\uff0c\u52a8\u6001 DP \u4f9d\u7136\u662f DP \u7684\u4e00\u79cd\u3002\n\n\u5148\u8003\u8651\u6ca1\u6709\u4fee\u6539\u64cd\u4f5c\uff0c\u90a3\u4e48\u672c\u9898\u53d8\u4e3a\u4e00\u4e2a\u666e\u901a\u7684DP\uff0c\u6211\u4eec\u8bbe $dp_{i,0/1}$ \u5206\u522b\u8868\u793a\u5230\u7b2c $i$ \u4f4d\uff0c\u4ee5 $0/1$ \u7ed3\u5c3e\u7684\u672c\u8d28\u4e0d\u540c\u7684\u5b50\u5e8f\u5217\u4e2a\u6570\u3002\n\n\u8003\u8651\u8f6c\u79fb\uff0c\u4ee5 $a_i = $ ```0``` \u4e3a\u4f8b\uff0c\u90a3\u4e48\u5728 $1$ \u5230 $i-1$ \u4e4b\u95f4\u7684\u6240\u6709\u672c\u8d28\u4e0d\u540c\u7684\u5b50\u5e8f\u5217\u540e\u90fd\u53ef\u4ee5\u52a0\u7b2c $i$ \u4f4d\u7684\u8fd9\u4e2a ```0```\uff0c\u8fd9\u4e9b\u4e32\u4f9d\u65e7\u672c\u8d28\u4e0d\u540c\u4e14\u957f\u5ea6\u4e0d\u4f4e\u4e8e 2\uff0c\u518d\u52a0\u4e0a ```0``` \u81ea\u5df1\u672c\u8eab\uff0c\u56e0\u6b64 $dp_{i,0}=dp_{i-1,1}+dp_{i-1,0}+1$\u3002\n\n\u53c8\u56e0\u4e3a $a_i$ \u4e3a ```0```\uff0c\u4e0d\u53ef\u80fd\u5f62\u6210\u66f4\u591a\u7684\u4ee5 ```1``` \u7ed3\u5c3e\u7684\u672c\u8d28\u4e0d\u540c\u5b50\u5e8f\u5217\uff0c\u6240\u4ee5 $dp_{i,1}=dp_{i-1,1}$\u3002\n\n$a_i$ \u4e3a ```1``` \u548c ```?``` \u7684\u8f6c\u79fb\u540c\u7406\uff0c\u56e0\u6b64\uff1a\n\n\n\u5f53 $a_i$ \u4e3a ```0``` \u65f6\uff0c\n\n$\\ \\ \\ \\ \\bullet\\ dp_{i,0}=dp_{i-1,0}+(dp_{i-1,1}+1)$ \n\n$\\ \\ \\ \\ \\bullet\\ dp_{i,1}=dp_{i-1,1}$\n\n\u5f53 $a_i$ \u4e3a ```1``` \u65f6\uff0c\n\n$\\ \\ \\ \\ \\bullet\\ dp_{i,0}=dp_{i-1,0}$ \n\n$\\ \\ \\ \\ \\bullet\\ dp_{i,1}=dp_{i-1,1}+(dp_{i-1,0}+1)$\n\n\u5f53 $a_i$ \u4e3a ```?``` \u65f6\uff0c\n\n$\\ \\ \\ \\ \\bullet\\ dp_{i,0}=dp_{i-1,0}+(dp_{i-1,1}+1)$ \n\n$\\ \\ \\ \\ \\bullet\\ dp_{i,1}=dp_{i-1,1}+(dp_{i-1,0}+1)$\n\n\u6700\u7ec8\u7b54\u6848\u4e3a $dp_{n,0}+dp_{n,1}$\u3002\n\n\u5982\u679c\u5bf9\u4e8e\u6bcf\u6b21\u4fee\u6539\uff0c\u91cd\u65b0\u505a\u4e00\u904d DP\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u53d8\u4e3a $O(NQ)$\uff0c\u65e0\u6cd5\u901a\u8fc7\uff0c\u6ce8\u610f\u5230\u65b9\u7a0b\u7684\u8f6c\u79fb\u662f\u4e00\u4e2a\u7ebf\u6027\u9012\u63a8\u5f0f\uff0c\u8fd9\u542f\u793a\u6211\u4eec\u7528**\u77e9\u9635\u4f18\u5316\u8f6c\u79fb**\u3002\n\n\u6211\u4eec\u628a\u9012\u63a8\u5f0f\u5199\u6210\u77e9\u9635\u7684\u5f62\u5f0f\uff0c\u53ef\u4ee5\u7528\u4ee5\u4e0b\u7684\u5f0f\u5b50\u63cf\u8ff0:\n\n$$S_{a_i}\\begin{bmatrix} dp_{i-1,0} \\\\ dp_{i-1,1} \\\\ 1\\end{bmatrix}=\\begin{bmatrix} dp_{i,0} \\\\ dp_{i,1} \\\\ 1\\end{bmatrix}$$\n\n\u4e0d\u96be\u5199\u51fa\uff1a\n\n$$S_{0}=\\begin{bmatrix} 1&1&1 \\\\ 0&1&0 \\\\ 0&0&1\\end{bmatrix},S_{1}=\\begin{bmatrix} 1&0&0 \\\\ 1&1&1 \\\\ 0&0&1\\end{bmatrix},S_{?}=\\begin{bmatrix} 1&1&1 \\\\ 1&1&1 \\\\ 0&0&1\\end{bmatrix}$$\n\n\u90a3\u4e48\u6574\u4e2a\u5b57\u7b26\u4e32\u7684\u8f6c\u79fb\u53ef\u4ee5\u7528\u4ee5\u4e0b\u5f0f\u5b50\u8868\u793a\uff1a\n\n$$\\prod_{i=1}^n S_{a_i} \\times \\begin{bmatrix}0\\\\0\\\\1\\end{bmatrix} = \\begin{bmatrix} dp_{n,0} \\\\ dp_{n,1} \\\\ 1\\end{bmatrix}$$\n\n\u672c\u8d28\u4e0a\uff0c\u4e00\u6b21\u4fee\u6539\u5b57\u7b26\u7684\u64cd\u4f5c\u5c31\u662f\u4fee\u6539\u4e00\u4e2a\u5b57\u7b26\u7684\u8f6c\u79fb\u77e9\u9635\u3002\u53c8\u7531\u4e0a\u9762\u7684\u5f0f\u5b50\u53ef\u77e5\u8981\u7ef4\u62a4\u7684\u4fe1\u606f\u662f\u6574\u4e2a\u5b57\u7b26\u4e32\u7684 $S_{a_i}$ \u7684\u4e58\u79ef\u3002\n\n\u7531\u4e8e\u77e9\u9635\u5177\u6709\u7ed3\u5408\u5f8b\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(N + Q \\log N)$\uff0c\u5e38\u6570\u5de8\u5927\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define L p<<1\n#define R p<<1|1\n#define mid ((l+r)>>1)\nusing namespace std;\nconst int INF=0x3f3f3f3f;\nconst int MOD=998244353;\nconst int N=100005;\nint tot=0;\nchar a[N];\ninline int read(){\n    int w=0,f=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){\n        if(ch=='-') f=-1;\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9'){\n        w=(w<<1)+(w<<3)+(ch-48);\n        ch=getchar();\n    }\n    return w*f;\n}\nstruct Matrix{\n    int x,y,val[5][5];\n    inline void clear(int a,int b){\n        x=a; y=b;\n        for(int i=1;i<=x;i++)\n            for(int j=1;j<=y;j++) val[i][j]=0;\n    }\n    inline void unit(int a,int b){\n        assert(a==b);\n        x=a; y=b;\n        for(int i=1;i<=x;i++) \n            for(int j=1;j<=y;j++) val[i][j]=(i==j);\n    } \n};\ninline Matrix mult(Matrix a,Matrix b){\n    Matrix ans;\n    assert(a.y==b.x);\n    ans.clear(a.x,b.y);\n    for(int i=1;i<=a.x;i++){\n        for(int k=1;k<=a.y;k++){\n            if(!a.val[i][k]) continue;\n            for(int j=1;j<=b.y;j++){\n                ans.val[i][j]+=a.val[i][k]*b.val[k][j]%MOD;\n                ans.val[i][j]=(ans.val[i][j]%MOD+MOD)%MOD;\n            }\n        }\n    }\n    return ans;\n} //\u77e9\u9635\u4e58\u6cd5\nMatrix S1,S2,S3,res;\nstruct Segnode{\n    Matrix val;\n}tr[N<<2];\ninline void Pushup(int p){\n    tr[p].val=mult(tr[L].val,tr[R].val);\n}\ninline void Build(int p,int l,int r){\n    if(l==r){\n        if(a[l]=='0') tr[p].val=S1;\n        else if(a[l]=='1') tr[p].val=S2;\n        else tr[p].val=S3;\n        return ;\n    }\n    Build(L,l,mid);\n    Build(R,mid+1,r);\n    Pushup(p);\n}\ninline void Modify(int p,int l,int r,int x,Matrix d){\n    if(l==r){\n        tr[p].val=d;\n        return ;\n    }\n    if(x<=mid) Modify(L,l,mid,x,d);\n    else Modify(R,mid+1,r,x,d);\n    Pushup(p);\n} //\u7ebf\u6bb5\u6811\ninline void Prework(){\n    S1.unit(3,3);\n    S1.val[1][2]=S1.val[1][3]=1;\n    S2.unit(3,3);\n    S2.val[2][1]=S2.val[2][3]=1;\n    S3.unit(3,3);\n    S3.val[1][2]=S3.val[1][3]=S3.val[2][1]=S3.val[2][3]=1;\n}\nsigned main(){\n    int n,Q;\n    n=read();Q=read();\n    scanf(\"%s\",a+1);\n    Prework();\n    Build(1,1,n);\n    while(Q--){\n        int x=read();\n        char c[2];\n        scanf(\"%s\",c+1);\n        if(c[1]=='0') Modify(1,1,n,x,S1);\n        else if(c[1]=='1') Modify(1,1,n,x,S2);\n        else Modify(1,1,n,x,S3);\n        res.clear(3,1);\n        res.val[3][1]=1;\n        res=mult(tr[1].val,res);\n        printf(\"%lld\\n\",(res.val[1][1]+res.val[2][1])%MOD);\n    }\n    return 0;\n}\n```\n",
        "postTime": 1667568185,
        "uid": 353112,
        "name": "WTR2007",
        "ccfLevel": 5,
        "title": "Sol. [ABC246Ex] 01? Queries"
    },
    {
        "content": "## AtCoder Beginner Contest 246\n\n[ABC246Ex](https://atcoder.jp/contests/abc246/tasks/abc246_h)\n\n$\\text{Difficulty : 2677}$\u3002\n\n\u4ee5\u6b64\u6765\u6d45\u6d45\u7eaa\u5ff5\u4e0b\u6211\u7684\u7b2c\u4e00\u9053 Ex\uff0c~~\u867d\u7136\u4e5f\u662f\u770b\u4e86\u9898\u89e3\u624d\u4f1a\u7684~~\u3002\n\n\u7ed9\u5b9a\u957f\u5ea6\u4e3a $n$ \u7684\u4ec5\u5305\u542b `0`\uff0c`1`\uff0c`?` \u7684\u5b57\u7b26\u4e32 $s$\uff0c\u7ed9\u5b9a $q$ \u7ec4\u8be2\u95ee $(x_i,c_i)$\uff0c\u6bcf\u6b21\u5c06\u539f\u5b57\u7b26\u4e32\u4e2d $x_i$ \u4f4d\u7f6e\u7684\u5b57\u7b26\u6539\u4e3a $c_i$\uff0c\u7136\u540e\u8f93\u51fa $s$ \u6709\u591a\u5c11\u79cd\u975e\u7a7a\u5b50\u5e8f\u5217\uff0c`?` \u9700\u4efb\u610f\u66ff\u6362\u4e3a `0` \u6216 `1`\u3002\n\n\u8bb0 $f_{i,0/1}$ \u4e3a\u8003\u8651\u5230\u524d $i$ \u4e2a\u5b57\u7b26\uff0c\u4ee5 $0/1$ \u7ed3\u5c3e\u7684\u5b50\u5e8f\u5217\u79cd\u6570\u3002\n- \u5f53 $s_i$ \u4e3a `1` \u65f6\uff0c$f_{i,1} = f_{i-1,1}+f_{i-1,0}+1,f_{i,0}=f_{i-1,0}$\uff0c\u8003\u8651\u5c06\u4e4b\u524d\u6240\u6709\u4e0d\u540c\u7684\u5b50\u5e8f\u5217\u672b\u5c3e\u90fd\u52a0\u4e0a `1`\uff0c\u5f62\u6210\u4e86 $f_{i-1,1}+f_{i-1,0}$ \u79cd\u4e0d\u540c\u7684\u5b50\u5e8f\u5217\uff0c\u518d\u52a0\u4e0a\u4e00\u4e2a\u5355\u72ec\u7684 `1`\u3002\u540e\u9762\u7684\u8f6c\u79fb\u540c\u7406\u3002\n- \u5f53 $s_i$ \u4e3a `0` \u65f6\uff0c$f_{i,1}=f_{i-1,1},f_{i,0} = f_{i-1,1}+f_{i-1,0}+1$\u3002\n- \u5f53 $s_i$ \u4e3a `?` \u65f6\uff0c$f_{i,1} = f_{i-1,1}+f_{i-1,0}+1,f_{i,0} = f_{i-1,1}+f_{i-1,0}+1$\u3002\n\n\u7136\u540e\u8fd9\u4e2a\u4e1c\u897f\u663e\u7136\u53ef\u4ee5\u5199\u6210\u77e9\u9635\u7684\u5f62\u5f0f\u3002\n\n\u5b9a\u4e49\u7b54\u6848\u77e9\u9635\uff1a\n\n$$\\begin{bmatrix}f_{i,1}\\\\f_{i,0}\\\\1\\end{bmatrix}$$\n\n\u5b9a\u4e49\u8f6c\u79fb\u77e9\u9635 $A$\uff1a\n\n$$\\begin{bmatrix}f_{i,1}\\\\f_{i,0}\\\\1\\end{bmatrix} = A \\times\\begin{bmatrix}f_{i-1,1}\\\\f_{i-1,0}\\\\1\\end{bmatrix}$$\n\n- \u5f53 $s_i$ \u4e3a `1` \u65f6\uff1a\n\n$$A = \\begin{bmatrix}1&1&1\\\\0&1&0\\\\0&0&1\\end{bmatrix}$$\n\n- \u5f53 $s_i$ \u4e3a `0` \u65f6\uff1a\n\n$$A = \\begin{bmatrix}1&0&0\\\\1&1&1\\\\0&0&1\\end{bmatrix}$$\n\n- \u5f53 $s_i$ \u4e3a `?` \u65f6\uff1a\n\n$$A = \\begin{bmatrix}1&1&1\\\\1&1&1\\\\0&0&1\\end{bmatrix}$$\n\n\u7136\u540e\u7ebf\u6bb5\u6811\u7ef4\u62a4\u77e9\u9635\u94fe\u4e58\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(m^3q\\log n)$\uff0c\u5176\u4e2d $m = 3$\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e5 + 5;\nconst int m = 3;\nconst int mod = 998244353;\nlong long n,q,x;\nchar s[maxn],ch;\nstruct matrix\n{\n\tlong long val[5][5];\n\tmatrix()\n\t{\n\t\tmemset(val,0,sizeof(val));\n\t}\n\tmatrix operator * (const matrix a) const\n\t{\n\t\tmatrix res;\n\t\tfor(int k = 1;k <= m;k++)\n\t\t\tfor(int i = 1;i <= m;i++)\n\t\t\t\tfor(int j = 1;j <= m;j++)\n\t\t\t\t\tres.val[i][j] = (res.val[i][j] + val[i][k] * a.val[k][j] % mod) % mod;\n\t\treturn res;\n\t}\n}a1,a2,a3,t[maxn << 2];\nvoid input()\n{\n\tscanf(\"%lld%lld\",&n,&q);\n\tscanf(\"%s\",s + 1);\n}\nvoid prefix()\n{\n\ta1.val[1][1] = 1,a1.val[1][2] = 1,a1.val[1][3] = 1,a1.val[2][2] = 1,a1.val[3][3] = 1;\n\ta2.val[2][1] = 1,a2.val[2][2] = 1,a2.val[2][3] = 1,a2.val[1][1] = 1,a2.val[3][3] = 1;\n\ta3 = a1,a3.val[2][1] = 1,a3.val[2][3] = 1;\n}\nvoid update(int pos)\n{\n\tt[pos] = t[pos << 1] * t[pos << 1 | 1];\n}\nvoid build(int l,int r,int pos)\n{\n\tif(l == r)\n\t{\n\t\tif(s[l] == '1')\n\t\t\tt[pos] = a1;\n\t\telse if(s[l] == '0')\n\t\t\tt[pos] = a2;\n\t\telse \n\t\t\tt[pos] = a3;\n\t\treturn ;\n\t}\n\tint mid = (l + r) >> 1;\n\tbuild(l,mid,pos << 1);\n\tbuild(mid + 1,r,pos << 1 | 1);\n\tupdate(pos);\n}\nvoid change(int L,int R,int l,int r,int pos)\n{\n\tif(L > R)\n\t\treturn ;\n\tif(R < l||L > r)\n\t\treturn ;\n\tif(R <= l&&L >= r)\n\t{\n\t\tif(s[l] == '1')\n\t\t\tt[pos] = a1;\n\t\telse if(s[l] == '0')\n\t\t\tt[pos] = a2;\n\t\telse \n\t\t\tt[pos] = a3;\n\t\treturn ;\t\t\n\t}\n\tint mid = (L + R) >> 1;\n\tchange(L,mid,l,r,pos << 1);\n\tchange(mid + 1,R,l,r,pos << 1 | 1);\n\tupdate(pos);\n}\nvoid solve()\n{\n\twhile(q--)\n\t{\n\t\tscanf(\"%lld %c\",&x,&ch);\n\t\ts[x] = ch;\n\t\tchange(1,n,x,x,1);\n\t\tprintf(\"%lld\\n\",(t[1].val[1][3] + t[1].val[2][3]) % mod);\n\t}\n}\nint main()\n{\n\tinput();\n\tprefix();\n\tbuild(1,n,1);\n\tsolve();\n\treturn 0;\n}\n```",
        "postTime": 1667300301,
        "uid": 302636,
        "name": "zhaoyp",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 AT_abc246_h\u3010[ABC246Ex] 01? Queries\u3011"
    }
]