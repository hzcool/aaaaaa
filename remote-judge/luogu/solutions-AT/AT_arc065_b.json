[
    {
        "content": "\u539f\u9898\u94fe\u63a5\uff1a\n\n[\u6d1b\u8c37](https://www.luogu.org/problemnew/show/AT2159)\n\n[AT](https://abc049.contest.atcoder.jp/tasks/arc065_b)\n### \u9898\u610f\u7b80\u8ff0 &\u6570\u636e\n\u8fd9\u9898\u5728\u6d1b\u5495\u4e0a\u7684\u7ffb\u8bd1\u662f\u6211\u4ea4\u7684\u3002\u4f46\u662f\u6211\u8981\u8bf4\u660e\u4e00\u70b9\uff0c\u9898\u9762\u91cc\u8bf7\u628a\"\u6216\"\u6539\u6210\"\u548c\"\u7406\u89e3\u3002\uff08\u5171\u6709\u4e24\u5904\u3002\u5982\u679c\u5df2\u7ecf\u66f4\u65b0\u8fc7\u4e86\uff0c\u90a3\u4e48\u8bf7\u5ffd\u7565\u3002\u6211\u5728\u8ba8\u8bba\u533a\u91cc@\u7ba1\u7406\u4e86\u3002\u3002\u3002\uff09\n\n### \u601d\u8def\n\u8fd9\u9898\u662fSTL\u7684\u5e94\u7528\u9898\uff0c\u4e5f\u662f\u975e\u5e38\u8003\u601d\u7ef4\u7684\u4e00\u4e2a\u9898\u76ee\u3002\u9996\u5148\uff0c\u5982\u679c\u53ea\u6709\u4e00\u79cd\u7ebf\u8def\u7684\u8bdd\uff0c\u5c31\u975e\u5e38\u6c34\u4e86\uff0c\u5e76\u67e5\u96c6\u7ef4\u62a4\u96c6\u5408\u5927\u5c0f\u5c31\u73c2\u4ee5\u505a\u4e86\u3002\n\n\u90a3\u4e48\u6211\u4eec\u6709\u4e24\u6761\u7ebf\u8def\uff0c\u8fd8\u8981\u53d6\u4ea4\u96c6\uff0c\u600e\u4e48\u529e\u5462\u3002\u3002\u3002\n\n\u6211\u4eec\u77e5\u9053\uff0c\u5e76\u67e5\u96c6\u91cc\u9762\u5224\u5b9a\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u7684\u65b9\u6cd5\u662f\u6839\u636e\u7956\u5148\u5224\u65ad\u3002\u5982\u679c\u7956\u5148\u76f8\u540c\uff0c\u90a3\u5c31\u5728\u4e00\u4e2a\u96c6\u5408\u91cc\u9762\uff0c\u5426\u5219\u5c31\u4e0d\u5728\u3002\u6b64\u65f6\u6211\u4eec\u73c2\u80fd\u4f1a\u95ea\u8fc7\u4e00\u4e2a\u5ff5\u5934\uff1a\u7528\u4e00\u4e2a\u6570\u7ec4\uff08\u4e0d\u59a8\u53eb$R$\uff09\u8bb0\u5f55\u4e24\u4e2a\u7ebf\u8def\u7684\u7956\u5148\u3002\u5177\u4f53\u7684\u8bf4\uff0c\u8bbe\u7ef4\u62a4\u5730\u94c1\u7ebf\u8def\u7684\u5e76\u67e5\u96c6\u53eb$D1$\uff0c\u7ef4\u62a4\u5730\u9762\u8def\u5f84\u7684\u5e76\u67e5\u96c6\u53eb$D2$\uff0c\u6b64\u65f6$R[i][j]$\u8868\u793a\uff1a\u6709\u591a\u5c11\u4e2a\u70b9\u6ee1\u8db3\u5728$D1$\u4e2d\u7684\u7956\u5148\u662f$i$\uff0c\u5728$D2$\u4e2d\u7684\u7956\u5148\u662f$j$\u3002\u90a3\u4e48\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u70b9$u$\uff0c\u5b83\u8d70\u4e24\u6761\u7ebf\u8def\u90fd\u80fd\u5230\u7684\u70b9\u6570\u91cf\u5c31\u662f```R[D1.find(i)][D2.find(i)]```\uff08\u5176\u4e2d$find$\u662f\u67e5\u627e\u7956\u5148\u7684\u51fd\u6570\uff09\u3002\u8bb0\u5f55\u8fd9\u4e2a\u6570\u7ec4\u7684\u65b9\u6cd5\u4e5f\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c```R[D1.find(i)][D2.find(i)]++```\u3002\n\n\u8fd9\u4e2a\u65b9\u6cd5\u770b\u8d77\u6765\u5f88\u5b8c\u7f8e\uff0c\u73c2\u662f\u3002\u3002\u3002\u7a7a\u95f4\uff1f\n\n$BOOM\uff01\uff01\uff01$\n\n\u5982\u4f55\u4f18\u5316\uff1f\n\n```map<pair<int,int>,int>```\u3002\u89c2\u5bdf\u5230\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u6211\u4eec\u53ea\u4f1a\u628a\u8fd9\u4e2a\u6570\u7ec4\u7684\u4e00\u4e2a\u4f4d\u7f6e$+1$\u3002\u6240\u4ee5\u8bf4\uff0c\u771f\u6b63\u6709\u7528\u7684\u4f4d\u7f6e\uff0c\u9876\u591a\u53ea\u6709$n$\u4e2a\u3002\u90a3\u4e48\u6211\u4eec\u7528```map<pair<int,int>,int>```\u4ee3\u66ff\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u5c31\u73c2\u4ee5\u7701\u4e0b\u5f88\u591a\u7a7a\u95f4\u3002\u5982\u679c\u60a8\u4e0d\u4f1a\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u8bf7\u770b\u5f15\u7528\u90e8\u5206\u7684\u8bf4\u660e\u3002\n\n> \u8bf4\u660e\uff1a\n> \u6211\u4eec\u8fd8\u662f\u8bbe\u8fd9\u4e2a\u4e1c\u897f\u53eb$R$\u3002\u4e5f\u5c31\u662f\u6211\u4eec\u5b9a\u4e49```map<pair<int,int>,int> R```\u3002\n> \u7136\u540e\uff0c\u5bf9\u4e8e$(x,y)$\u4f4d\u7f6e\u52a0\u4e0a$v$\u7684\u64cd\u4f5c\u5c31\u662f\uff1a```R[make_pair(x,y)]+=v```\n> \u5bf9\u4e8e\u4f4d\u7f6e$(x,y)$\u7684\u503c\u5c31\u662f\uff1a```R[make_pair(x,y)]```\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nnamespace Flandle_Scarlet\n{\n    #define N 200100\n    class DSU\n    {\n        public:\n            int Father[N],Cnt[N];\n            void Init()\n            {\n                for(int i=0;i<N;i++)\n                {\n                    Father[i]=i;\n                    Cnt[i]=1;\n                }\n            }\n            int Find(int x)\n            {\n                return (x==Father[x])?x:(Father[x]=Find(Father[x]));\n            }\n            void Merge(int x,int y)\n            {\n                int ax=Find(x),ay=Find(y);\n                if (Cnt[ax]<Cnt[ay])\n                {\n                    Cnt[ay]+=Cnt[ax];\n                    Father[ax]=ay;\n                }\n                else\n                {\n                    Cnt[ax]+=Cnt[ay];\n                    Father[ay]=ax;\n                }\n            }\n    }D1,D2;\n    int n,k,l;\n    void R1(int &x)\n    {\n        x=0;char c=getchar();int f=1;\n        while(c<'0' or c>'9') f=(c=='-')?-1:1,c=getchar();\n        while(c>='0' and c<='9') x=(x<<1)+(x<<3)+(c^48),c=getchar();\n        x=(f==1)?x:-x;\n    }\n    void Input()\n    {\n        R1(n),R1(k),R1(l);\n        D1.Init();\n        D2.Init();\n        for(int i=1;i<=k;++i)\n        {\n            int a,b;\n            R1(a),R1(b);\n            D1.Merge(a,b);\n        }\n        for(int i=1;i<=l;++i)\n        {\n            int a,b;\n            R1(a),R1(b);\n            D2.Merge(a,b);\n        }\n    }\n    #define pii pair<int,int>\n    #define _1 first\n    #define _2 second\n    map<pii,int> rec;\n    void Soviet()\n    {\n        for(int i=1;i<=n;++i)\n        {\n            int an1=D1.Find(i),an2=D2.Find(i);\n            rec[make_pair(an1,an2)]++;\n        }\n        for(int i=1;i<=n;++i)\n        {\n            int an1=D1.Find(i),an2=D2.Find(i);\n            printf(\"%d \",rec[make_pair(an1,an2)]);\n        }\n    }\n    void IsMyWife()\n    {\n        if (0)\n        {\n            freopen(\"\",\"r\",stdin);\n            freopen(\"\",\"w\",stdout);\n        }\n        Input();\n        Soviet();\n    }\n};\nint main()\n{\n    Flandle_Scarlet::IsMyWife();\n    return 0;\n}\n```",
        "postTime": 1563368559,
        "uid": 106252,
        "name": "LightningUZ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT2159 \u3010\u9023\u7d50 / Connectivity\u3011"
    },
    {
        "content": "\u5e76\u67e5\u96c6\u7684\u677f\u5b50\uff0c\u518d\u52a0\u4e0amap\u548cpair\u4f18\u5316\u4e00\u4e0b\u5c31\u8f7b\u677e\u6c34\u8fc7\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=200000+10;\nconst int INF=10000000;\nint p1[N],p2[N];\nmap<pair<int,int>,int>m;\nint find(int x,int *p)\n{\n    return p[x]==x?p[x]:p[x]=find(p[x],p);\n}\nvoid cha(int x,int y,int *p)\n{\n    int px=find(x,p);\n    int py=find(y,p);\n    if(px!=py)\n    {\n        p[px]=py;\n    }\n}\nint main()\n{\n    int n,k,l;\n    cin>>n>>k>>l;\n    for(int i=1;i<=n;i++)\n        p1[i]=i,p2[i]=i;\n    for(int i=1;i<=k;i++)\n    {\n        int x,y;\n        scanf(\"%d%d,\",&x,&y);\n        cha(x,y,p1);\n    }\n    for(int i=1;i<=l;i++)\n    {\n        int x,y;\n        scanf(\"%d%d,\",&x,&y);\n        cha(x,y,p2);\n    }\n    for(int i=1;i<=n;i++)\n    {\n        find(i,p1);\n        find(i,p2);\n    }\n    for(int i=1;i<=n;i++)\n        m[make_pair(p1[i],p2[i])]++;\n    for(int i=1;i<=n;i++)\n        printf(\"%d \",m[make_pair(p1[i],p2[i])]);\n    return 0;\n}\n```",
        "postTime": 1538703909,
        "uid": 112568,
        "name": "sprinkles",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT2159 \u3010\u9023\u7d50 / Connectivity\u3011"
    },
    {
        "content": "[\u9898\u9762](https://atcoder.jp/contests/abc049/tasks/arc065_b)\n\n[\u6ca1\u8bf4\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/1358id/p/16267895.html)\n\nDescription:\n\n\u6709 $n$ \u4e2a\u70b9\uff0c\u4e24\u5f20\u65e0\u5411\u56fe\u3002\u7b2c\u4e00\u5f20\u56fe\u4e2d\u6709 $k$ \u6761\u8fb9\uff0c\u7b2c\u4e8c\u5f20\u56fe\u4e2d\u6709 $l$ \u6761\u8fb9\u3002\u95ee\u5bf9\u4e8e\u6bcf\u4e2a $i$\uff0c\u5728\u4e24\u5f20\u56fe\u4e2d\u5747\u53ef\u8fbe\u7684\u70b9\u5bf9 $(i,j)$ \u7684\u6570\u91cf\u3002\n\n-----\n\u4e0d\u7528 map \u7684\u505a\u6cd5\u3002\n\n\u9996\u5148\u56e0\u4e3a\u8981\u505a\u8fde\u901a\u6027\uff0c\u660e\u663e\u8981\u7528\u5e76\u67e5\u96c6\u3002\u6211\u4eec\u53ef\u4ee5\u8bb0\u5f55\u4e00\u4e0b\u5728\u7b2c\u4e00\u5f20\u56fe\u4e2d\u6bcf\u4e2a\u70b9\u5c5e\u4e8e\u54ea\u4e2a\u96c6\u5408\u3002\n\n\u56e0\u4e3a\u4e24\u70b9\u5728\u4e24\u5f20\u56fe\u4e2d\u5747\u53ef\u8fbe\uff0c\u7b49\u4ef7\u4e8e\u4e24\u4e2a\u70b9\u5728\u4e24\u5f20\u56fe\u4e2d\u6240\u5728\u7684\u96c6\u5408\u76f8\u540c\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u5df2\u77e5\u7b2c\u4e00\u5f20\u56fe\u7684\u60c5\u51b5\u4e0b\uff0c\u8ba1\u7b97\u7b2c\u4e8c\u5f20\u56fe\u4e2d\u6bcf\u4e2a\u70b9\u7684\u5f52\u5c5e\u3002\u63a5\u4e0b\u6765\uff0c\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u56fe\u4e2d\u7684\u6bcf\u4e2a\u96c6\u5408\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00\u4e2a\u6876\u8ba1\u7b97\u51fa\u5728\u5b83\u4e4b\u4e2d\u6240\u6709\u70b9\u5728\u7b2c\u4e00\u4e2a\u56fe\u4e2d\u7684\u5f52\u5c5e\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u8ba1\u7b97\u51fa\u4e86\u8be5\u96c6\u5408\u4e2d\u54ea\u4e9b\u70b9\u5728\u7b2c\u4e00\u5f20\u56fe\u4e2d\u4e5f\u5c5e\u4e8e\u540c\u4e00\u96c6\u5408\u3002\u90a3\u4e48\u8fd9\u4e2a\u9898\u5c31\u505a\u5b8c\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$\u3002\n\n[\u4ee3\u7801](https://paste.ubuntu.com/p/z6yJKBHWht/)",
        "postTime": 1652442207,
        "uid": 222865,
        "name": "\u8fdf\u66ae\u5929\u590d\u660e",
        "ccfLevel": 6,
        "title": "ARC065B"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/AT2159)\n\n**\u601d\u8def**\n\n\u8fd9\u9898\u662f\u4e00\u9053\u5e76\u67e5\u96c6\u7684\u88f8\u9898\u3002\u4f46\u662f\u9898\u76ee\u8981\u6c42\u7684\u8fd9\u4e2a\u4e1c\u897f\u8ba9\u4eba\u5f88\u8d39\u89e3\u3002 $\\therefore$ \u6211\u4eec\u8981\u60f3\u529e\u6cd5\u628a\u4e24\u79cd\u8def\u7ebf\u8054\u7cfb\u5728\u4e00\u8d77\u3002\u4e8e\u662f\u4e0d\u96be\u60f3\u5230\u8bbe\u4e00\u4e2a\u6570\u7ec4 $f_{i,j}$ \u8868\u793a\u5728\u4e24\u79cd\u65b9\u5f0f\u4e0b\u4e0e $i$ \u548c $j$ \u5206\u522b\u8054\u901a\u7684\u57ce\u5e02\u5171\u6709\u591a\u5c11\u4e2a\u3002\u90a3\u4e48\u67e5\u627e\u64cd\u4f5c\u4e0d\u53d8\uff0c\u5408\u5e76 $u$ \u548c $v$ \u7684\u64cd\u4f5c\u5c31\u662f $f_{find1(u),find2(u)} \\gets f_{find1(u),find2(u)}+f_{find1(v),find2(v)}$\u3002\u5bf9\u4e8e\u57ce\u5e02 $u$ \u6765\u8bb2\uff0c\u6700\u7ec8\u7b54\u6848\u5c31\u662f $f_{find1(u),find2(u)}$\u3002\u5982\u6b64\u4e00\u6765\uff0c\u95ee\u9898\u5c31\u5f97\u5230\u4e86\u89e3\u51b3\u3002\n\n\u7136\u540e\u4f60\u5c31\u4f1a\u53d1\u73b0\u7a7a\u95f4\u590d\u6742\u5ea6\u662f $O(n^2)$\uff0c\u76f4\u63a5\u70b8\u6389\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53c8\u9700\u8981\u4f18\u5316\u4e86\u3002\n\n\u9996\u5148\u4f60\u8981\u77e5\u9053\u4e0b\u9762\u8fd9 $2$ \u4e2a\u597d\u4e1c\u897f\u3002\n\n[pair](https://blog.csdn.net/zycxnanwang/article/details/52403330)\n[map](https://blog.csdn.net/weixin_43699840/article/details/105392453)\n\n\u65e2\u7136\u77e5\u9053\u4e86\u8fd9 $2$ \u4e2a\u597d\u4e1c\u897f\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5f3a\u884c\u628a $f$ \u6570\u7ec4\u53d8\u6210\u4e00\u4e2a\u5f62\u5982\n```cpp\nmap<pair<int,int>,int>\n```\n\u7684\u7ed3\u6784\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u628a\u7a7a\u95f4\u590d\u6742\u5ea6\u53d8\u6210 $O(n)$ \u4e86\u3002\u6b64\u65f6\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log{n})$ \u4e58\u4e0a\u4e00\u4e2a\u5f88\u5947\u602a\u7684\u4e14\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u770b\u505a $O(1)$ \u7684\u51fd\u6570\u3002\u5177\u4f53\u53ef\u4ee5\u53c2\u8003\u4e0b\u9762\u8fd9\u4e2a\u4e1c\u897f\u3002\n\n[\u5e76\u67e5\u96c6\u7684\u65f6\u95f4\u590d\u6742\u5ea6](https://blog.csdn.net/yuzhiqiang666/article/details/80721436)\n\n**CODE**\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n,k,l,f1[200005],f2[200005],p,q;\nmap<pair<int,int>,int> mp;//\u5176\u5b9e\u5c31\u662f f\nint find(int x,int *f){\n    return f[x]==x?x:f[x]=find(f[x],f);\n} \nvoid hb(int x,int y,int *f){\n    f[find(x,f)]=f[find(y,f)];\n}\n//\u5e76\u67e5\u96c6\u7684\u57fa\u672c\u64cd\u4f5c\nint main(){\n    scanf(\"%d%d%d\",&n,&k,&l);\n    for(int i=1;i<=n;i++)\n        f1[i]=i,f2[i]=i;\n    for(int i=1;i<=k;i++){\n        scanf(\"%d%d\",&p,&q);\n        hb(p,q,f1);\n    }\n    for(int i=1;i<=l;i++){\n        scanf(\"%d%d\",&p,&q);\n        hb(p,q,f2);\n    }\n    for(int i=1;i<=n;i++)\n        mp[make_pair(find(i,f1),find(i,f2))]++;\n    for(int i=1;i<=n;i++)\n        printf(\"%d \",mp[make_pair(find(i,f1),find(i,f2))]);\n    putchar(10);\n\treturn 0;\n}\n```\n\n\u603b\u7684\u6765\u8bf4\u8fd9\u662f\u4e00\u9053\u8003\u5bdf STL \u4ee5\u53ca\u5e76\u67e5\u96c6\u7684\u9898\u3002",
        "postTime": 1647507135,
        "uid": 324666,
        "name": "diqiuyi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3AT2159"
    }
]