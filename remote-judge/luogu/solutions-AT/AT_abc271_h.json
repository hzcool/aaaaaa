[
    {
        "content": "#  [[ABC271Ex] General General](https://www.luogu.com.cn/problem/AT_abc271_h) Solution\n\n[TOC]\n\n## [\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u6233\u6b64\u8fdb\u5165](http://blog.tsawke.com?t=ABC271Ex)\n\n## \u9898\u9762\n\n\u7ed9\u5b9a\u7ec8\u70b9 $ (A, B) $\uff0c\u5b58\u5728\u5411\u91cf\u96c6\u5408 $ S = \\{ (1, 0), (1, 1), (0, 1), (-1, 1), (-1, 0), (-1, -1), (0, -1), (1, -1) \\} $\uff0c\u6bcf\u6b21\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $ 8 $ \u7684 $ 01 $ \u4e32\u8868\u793a\u5bf9\u5e94\u7684\u5411\u91cf\u662f\u5426\u53ef\u4ee5\u88ab\u4f7f\u7528\u4e14\u65e0\u9650\u6b21\u4f7f\u7528\uff0c\u4f60\u9700\u8981\u7528\u53ef\u4ee5\u4f7f\u7528\u7684\u5411\u91cf\u4ece\u8d77\u70b9 $ (0, 0) $ \u5230\u8fbe\u7ec8\u70b9 $ (A, B) $\uff0c\u6700\u5c0f\u5316\u4f7f\u7528\u7684\u5411\u91cf\u7684\u4e2a\u6570\uff0c\u8f93\u51fa\u6700\u5c0f\u503c\uff0c\u65e0\u89e3\u8f93\u51fa `-1`\u3002\n\n## Solution\n\n\u9996\u5148\u8fd9\u9053\u9898\u5e94\u8be5\u5f88\u660e\u663e\u662f\u5206\u7c7b\u8ba8\u8bba\uff0c\u4f46\u662f\u627e\u5230\u7684\u6027\u8d28\u7684\u591a\u5c11\u4e5f\u5c31\u51b3\u5b9a\u4e86\u5f0f\u5b50\u6700\u7ec8\u7684\u590d\u6742\u7a0b\u5ea6\u3002\n\n\u9996\u5148\u8fd9\u516b\u4e2a\u5411\u91cf\u5206\u522b\u5bf9\u5e94\u4e86\u53f3\u3001\u53f3\u4e0a\u3001\u4e0a\u3001$ \\cdots $\u3001\u53f3\u4e0b\uff0c\u4e5f\u5c31\u662f\u9006\u65f6\u9488\u987a\u5e8f\u7684\u516b\u5411\u79fb\u52a8\uff0c\u8fd9\u91cc\u6211\u4eec\u79f0\u53f3\u3001\u4e0a\u3001\u5de6\u3001\u4e0b\u4e3a\u56db\u5411\u5411\u91cf\uff0c\u53f3\u4e0a\u3001\u5de6\u4e0a\u3001\u5de6\u4e0b\u3001\u53f3\u4e0b\u4e3a\u516b\u5411\u5411\u91cf\u3002\n\n\u9996\u5148\u6211\u4eec\u60f3\u5230\uff0c\u82e5\u7ec8\u70b9\u53ef\u4ee5\u88ab\u4e00\u4e2a\u5411\u91cf\u8868\u793a\uff0c\u90a3\u4e48\u4e00\u5b9a\u53ef\u4ee5\u53ea\u7528\u8fd9\u4e2a\u5411\u91cf\u8868\u793a\uff08\u5e9f\u8bdd\uff09\u3002\n\n\u5176\u6b21\u4e00\u4e2a\u663e\u800c\u6613\u89c1\u7684\u6027\u8d28\uff0c\u663e\u7136\u4e24\u4e2a\u76f8\u90bb\u7684\u56db\u5411\u5411\u91cf\u53ef\u4ee5\u8868\u793a\u51fa\u5176\u5939\u7740\u7684\u516b\u5411\u5411\u91cf\uff08\u4f46\u8d21\u732e\u4f1a\u591a $ 1 $\uff09\u4e24\u4e2a\u516b\u5411\u5411\u91cf\u53ef\u4ee5\u8868\u793a\u51fa\u5176\u5939\u7740\u7684\u56db\u5411\u5411\u91cf\uff08\u8d21\u732e\u4e0d\u53d8\uff09\uff0c\u800c\u8fd9\u4e2a\u6027\u8d28\u666e\u904d\u5730\u8bb2\u53ef\u4ee5\u8ba4\u4e3a\u5c31\u662f\u5e73\u9762\u5411\u91cf\u57fa\u672c\u5b9a\u7406\uff0c\u4e5f\u5c31\u662f\u5e73\u9762\u4efb\u610f\u5411\u91cf\u90fd\u53ef\u4ee5\u7528\u4e24\u4e2a\u4e0d\u5171\u7ebf\u5411\u91cf\u7684 $ a\\vec{x} + b\\vec{y} $ \u8868\u793a\uff0c\u4f46\u662f\u8fd9\u91cc\u663e\u7136\u6211\u4eec\u9700\u8981\u8981\u6c42 $ a, b $ \u975e\u8d1f\u4e14\u4e3a\u6574\u6570\uff0c\u5bf9\u4e8e\u975e\u8d1f\u53ef\u4ee5\u8f6c\u5316\u4e3a\u5411\u91cf\u53ea\u80fd\u8868\u793a\u51fa\u5176\u5939\u89d2\u5185\u7684\u6240\u6709\u5411\u91cf\uff0c\u6574\u6570\u5219\u9700\u8981\u5177\u4f53\u8ba8\u8bba\u4e00\u4e0b\u4e86\u3002\n\n\u6240\u4ee5\u4e0d\u96be\u60f3\u5230\uff0c\u5982\u679c\u4e00\u4e2a\u5411\u91cf\u53ef\u4ee5\u88ab\u4efb\u610f\u4e24\u4e2a\u5411\u91cf\u8868\u793a\uff0c\u90a3\u4e48\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u89e3\u65b9\u7a0b\u7684\u95ee\u9898\uff0c\u800c\u82e5\u89e3\u51fa\u6765\u7684\u89e3\u5168\u90fd\u4e0d\u5408\u6cd5\uff08\u6709\u8d1f\u6570\u6216\u8005\u4e0d\u4e3a\u6574\u6570\uff09\uff0c\u5c31\u8bf4\u660e\u8fd9\u4e2a\u5411\u91cf\u65e0\u6cd5\u88ab\u4ec5\u7528\u4e24\u4e2a\u5411\u91cf\u8868\u793a\u3002\n\n\u800c\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u601d\u8003\u4e00\u4e0b\uff0c\u5bf9\u4e8e\u67d0\u4e2a\u8c61\u9650\u5185\u7684\u7ec8\u70b9\uff0c\u82e5\u6211\u4eec\u53ef\u4ee5\u7528\u5176\u5bf9\u5e94\u7684\u4e24\u4e2a\u56db\u5411\u5411\u91cf\uff0c\u90a3\u4e48\u662f\u4e00\u5b9a\u53ef\u4ee5\u8868\u793a\u51fa\u6765\u7684\uff0c\u6240\u4ee5\u65e0\u6cd5\u8868\u793a\u5c31\u8bf4\u660e\u6211\u4eec\u4e00\u5b9a\u4e0d\u662f\u6709\u5bf9\u5e94\u7684\u4e24\u4e2a\u56db\u5411\u5411\u91cf\u7684\u60c5\u51b5\u3002\n\n\u800c\u5982\u679c\u662f\u9009\u62e9\u7684\u4e00\u4e2a\u56db\u5411\u5411\u91cf\u548c\u4e00\u4e2a\u516b\u5411\u5411\u91cf\uff0c\u90a3\u4e48\u6211\u4eec\u518d\u9009\u4e00\u4e2a\u56db\u5411\u5411\u91cf\u4e0a\u53bb\u662f\u6ca1\u610f\u4e49\u7684\uff0c\u56e0\u4e3a\u90fd\u53ef\u4ee5\u66f4\u4f18\u5730\u88ab\u4e4b\u524d\u7684\u4e00\u4e2a\u56db\u5411\u5411\u91cf\u548c\u4e00\u4e2a\u516b\u5411\u5411\u91cf\u8868\u793a\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e00\u4e0b\u518d\u9009\u4e00\u4e2a\u516b\u5411\u5411\u91cf\u7684\u60c5\u51b5\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53d1\u73b0\uff0c\u82e5\u8fd9\u4e2a\u56db\u5411\u5411\u91cf\u7528\u4e86\u8fbe\u5230\u4e24\u6b21\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5728\u4e0d\u589e\u52a0\u8d21\u732e\u7684\u60c5\u51b5\u4e0b\u7528\u53e6\u5916\u4e24\u4e2a\u516b\u5411\u5411\u91cf\u8868\u793a\uff0c\u6240\u4ee5\u5bf9\u4e8e\u8fd9\u4e2a\u60c5\u51b5\u6211\u4eec\u53ef\u4ee5\u8f6c\u5316\u4e3a\u4f7f\u7528\u4e00\u4e2a\u56db\u5411\u5411\u91cf\u540e\u518d\u7528\u53e6\u5916\u4e24\u4e2a\u516b\u5411\u5411\u91cf\u89e3\u65b9\u7a0b\u3002\n\n\u800c\u5bf9\u4e8e\u521d\u59cb\u9009\u62e9\u4e24\u4e2a\u516b\u5411\u5411\u91cf\u5728\u9009\u62e9\u4e00\u4e2a\u56db\u5411\u5411\u91cf\u7684\u60c5\u51b5\u4e0e\u4e0a\u4e00\u79cd\u60c5\u51b5\u672c\u8d28\u76f8\u540c\u3002\n\n\u540c\u65f6\u6211\u4eec\u7ee7\u7eed\u601d\u8003\u5c31\u4f1a\u53d1\u73b0\u518d\u6ca1\u6709\u66f4\u591a\u60c5\u51b5\u4e86\u3002\n\n\u4e8e\u662f\u6211\u4eec\u73b0\u5728\u68b3\u7406\u4e00\u4e0b\u5171\u6709\u54ea\u4e9b\u53ef\u80fd\uff1a\n\n1. \u7528\u4e00\u4e2a\u5411\u91cf\u8868\u793a\u3002\n2. \u7528\u4e24\u4e2a\u5411\u91cf\u8868\u793a\uff08\u5e94\u8be5\u662f\u4e24\u4e2a\u4e0d\u5171\u7ebf\u7684\u5411\u91cf\uff0c\u4f46\u662f\u8303\u56f4\u8f83\u5c0f\u8fd9\u91cc\u65e0\u9700\u526a\u679d\uff0c\u53ef\u4ee5\u5f3a\u884c\u679a\u4e3e\uff09\u3002\n3. \u7528\u4e00\u4e2a\u56db\u5411\u5411\u91cf\u4e14\u53ea\u4f7f\u7528\u4e00\u6b21\uff0c\u548c**\u4efb\u610f**\u4e24\u4e2a\u76f8\u90bb\u7684\u516b\u5411\u5411\u91cf\u8868\u793a\u3002\n\n\u4ee4\u79cd\u7c7b\u6570 $ d = 8 $\uff0c\u590d\u6742\u5ea6\u5927\u6982\u662f $ O(d^2T) $ \u7684\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\n\nTips\uff1a\u4e0a\u6587\u5f88\u591a\u90e8\u5206\u7684**\u518d\u9009\u4e00\u4e2a**\u7b49\u8bed\u8a00\u53ef\u80fd\u5df2\u7ecf\u9ed8\u8ba4\u4e86\u989d\u5916\u9009\u62e9\u7684\u662f\u76f8\u90bb\u7684\u6216\u5939\u7740\u7684\uff0c\u56e0\u4e3a\u5176\u5b83\u90e8\u5206\u60c5\u51b5\u7684\u9519\u8bef\u6027\u8fc7\u4e8e\u663e\u7136\uff0c\u6545\u4e0d\u8d58\u8ff0\u4e86\u3002\n\n## Code\n\n```cpp\n#define _USE_MATH_DEFINES\n#include <bits/stdc++.h>\n\n#define PI M_PI\n#define E M_E\n#define npt nullptr\n#define SON i->to\n#define OPNEW void* operator new(size_t)\n#define ROPNEW void* Edge::operator new(size_t){static Edge* P = ed; return P++;}\n#define ROPNEW_NODE void* Node::operator new(size_t){static Node* P = nd; return P++;}\n\nusing namespace std;\n\nmt19937 rnd(random_device{}());\nint rndd(int l, int r){return rnd() % (r - l + 1) + l;}\nbool rnddd(int x){return rndd(1, 100) <= x;}\n\ntypedef unsigned int uint;\ntypedef unsigned long long unll;\ntypedef long long ll;\ntypedef long double ld;\n\n#define EPS (1e-10)\n#define INFLL (0x3f3f3f3f3f3f3f3fll)\n\ntemplate < typename T = int >\ninline T read(void);\n\nll A, B;\nll ans(INFLL);\nll dx[10] = {0,  1, 1, 0, -1, -1, -1, 0, 1};\nll dy[10] = {0,  0, 1, 1, 1, 0, -1, -1, -1};\nbitset < 10 > exists;\n\nbool isInteger(ld v){\n    return fabs(ld(ll(v)) - v) < EPS;\n}\nvoid Check(int i, int j, int base = 0){\n    if(dx[i] * dy[j] - dx[j] * dy[i] == 0)return;\n    ld v1 = (ld)(B * dx[i] - A * dy[i]) / (dx[i] * dy[j] - dx[j] * dy[i]);\n    if(v1 <= -EPS || !isInteger(v1))return;\n    ld v2 = (ld)(B * dx[j] - A * dy[j]) / (dx[j] * dy[i] - dx[i] * dy[j]);\n    if(v2 <= -EPS || !isInteger(v2))return;\n    ans = min(ans, ll(v1) + ll(v2) + base);\n}\n\nint main(){\n    // freopen(\"in.txt\", \"r\", stdin);\n    // freopen(\"out.txt\", \"w\", stdout);\n    int T = read();\n    while(T--){\n        A = read(), B = read();\n        for(int i = 1; i <= 8; ++i){\n            char c = getchar(); while(!isdigit(c))c = getchar();\n            exists[i] = c == '1';\n        }ans = INFLL;\n        if(!A && !B){printf(\"0\\n\"); continue;}\n        for(int i = 1; i <= 8; ++i)\n            if(exists[i]){\n                if(A * dx[i] < 0 || B * dy[i] < 0)continue;\n                if((!dx[i] && (A || !isInteger((ld)B / dy[i]))) || (!dy[i] && (B || !isInteger((ld)A / dx[i]))))continue;\n                if(!dx[i])ans = min(ans, B / dy[i]);\n                if(!dy[i])ans = min(ans, A / dx[i]);\n                ld v1 = (ld)A / dx[i], v2 = (ld)B / dy[i];\n                if(!isInteger(v1) || !isInteger(v2) || (ll)v1 != (ll)v2)continue;\n                ans = min(ans, (ll)v1);\n            }\n        for(int i = 1; i <= 8; ++i)for(int j = i + 1; j <= 8; ++j)\n            if(exists[i] && exists[j])Check(i, j);\n        for(int i = 2; i <= 8; i += 2){\n            if(!exists[i] || !exists[i == 2 ? 8 : i - 2])continue;\n            for(int j = 1; j <= 8; j += 2){\n                if(!exists[j])continue;\n                A -= dx[j], B -= dy[j];\n                Check(i == 2 ? 8 : i - 2, i, 1);\n                A += dx[j], B += dy[j];\n            }\n        }\n        printf(\"%lld\\n\", ans == INFLL ? -1ll : ans);\n    }\n    fprintf(stderr, \"Time: %.6lf\\n\", (double)clock() / CLOCKS_PER_SEC);\n    return 0;\n}\n\ntemplate < typename T >\ninline T read(void){\n    T ret(0);\n    int flag(1);\n    char c = getchar();\n    while(c != '-' && !isdigit(c))c = getchar();\n    if(c == '-')flag = -1, c = getchar();\n    while(isdigit(c)){\n        ret *= 10;\n        ret += int(c - '0');\n        c = getchar();\n    }\n    ret *= flag;\n    return ret;\n}\n```\n\n## UPD\n\nupdate-2023_02_09 \u521d\u7a3f",
        "postTime": 1675941035,
        "uid": 362938,
        "name": "Tsawke",
        "ccfLevel": 6,
        "title": "[ABC271Ex] General General \u9898\u89e3"
    }
]