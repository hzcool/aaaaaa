[
    {
        "content": "[\u8fd9\u7bc7\u535a\u5ba2\u7684\u6458\u8981\u597d\u6709\u610f\u601d](https://www.cnblogs.com/LittleTwoawa/p/17232451.html)\n\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/AT_arc112_c)\n\n\u9898\u76ee\u91cc\u9762\u7684\u6ce8\u610f\u70b9\u8fd8\u662f\u5f88\u591a\u7684\uff0c\u5982\u679c\u8bfb\u9519\u4e86\u9898\u6574\u4e2a\u601d\u8def\u53ef\u80fd\u4f1a\u4e00\u70b9\u90fd\u4e0d\u5bf9\u3002\u9996\u5148\u662f\u79fb\u52a8\u548c\u9009\u53d6\u786c\u5e01\u7684\u64cd\u4f5c\u662f\u5206\u5f00\u7684\uff0c\u6240\u4ee5\u4f60\u79fb\u52a8\u5230\u4e86\u4e00\u4e2a\u6709\u786c\u5e01\u7684\u8282\u70b9\uff0c\u5c06\u662f\u4f60\u7684\u5bf9\u624b\u83b7\u5f97\u786c\u5e01\u3002\u7136\u540e\u79fb\u52a8\u548c\u62ff\u53d6\u90fd\u662f\u5355\u6b21\u64cd\u4f5c\u7684\uff0c\u8fdb\u884c\u540e\u5c31\u6362\u4eba\u4e86\u3002\n\n\u5982\u679c\u8981\u4f7f\u603b\u7b54\u6848\u6700\u4f18\uff0c\u90a3\u6bcf\u4e2a\u8282\u70b9\u7684\u51b3\u7b56\u90fd\u8981\u6700\u4f18\u3002\u9009\u62e9\u4e86\u4e00\u4e2a\u8282\u70b9\u5c31\u8981\u51b3\u7b56\u5b8c\u4ed6\u7684\u6574\u4e2a\u5b50\u6811\u3002\u56e0\u6b64\u8003\u8651\u6811\u5f62DP\uff0c\u6211\u4eec\u7528\u513f\u5b50\u6765\u63a8\u7236\u4eb2\uff0c\u5f53\u51b3\u7b56\u4e00\u4e2a\u8282\u70b9\u7684\u65f6\u5019\uff0c\u4ed6\u7684\u5b50\u8282\u70b9\u4fe1\u606f\u6211\u4eec\u90fd\u5df2\u7ecf\u77e5\u9053\u3002\n\n\u8bbe $g_i$ \u8868\u793a\u70b9 $i$ \u7684\u5b50\u6811\u5927\u5c0f\uff0c$f_i$ \u8868\u793a\u5728\u5f53\u524d\u8282\u70b9\u5148\u624b\u80fd\u591f\u5f97\u5230\u7684\u6700\u591a\u786c\u5e01\uff0c\u90a3\u4e48\u540e\u624b\u80fd\u591f\u5f97\u5230\u7684\u6700\u591a\u786c\u5e01\u6211\u4eec\u8bb0\u4e3a $h_i = g_i - f_i$\u3002\n\n\u6a21\u62df\u51e0\u4e2a\u5c0f\u6570\u636e\uff0c\u5047\u8bbe\u4e00\u4e2a\u4eba\u9009\u62e9\u4e86\u5f53\u524d\u7684\u4e00\u4e2a\u5b50\u8282\u70b9 $i$ \u8fdb\u5165\uff0c\u80fd\u591f\u53d1\u73b0\u5f53 $g_i$ \u4e3a\u5947\u6570\u65f6\uff0c\u56de\u5230 $i$ \u7684\u7236\u4eb2\u540e\u53d8\u6210\u4ed6\u7684\u5bf9\u624b\u8fdb\u884c\u5b50\u8282\u70b9\u7684\u9009\u62e9\uff1b\u5f53 $g_i$ \u4e3a\u5076\u6570\u65f6\uff0c\u56de\u5230 $i$ \u7684\u7236\u4eb2\u540e\u4ecd\u4e3a\u4ed6\u81ea\u5df1\u9009\u62e9\u4e0b\u4e00\u4e2a\u8fdb\u5165\u7684\u5b50\u8282\u70b9\u3002\n\n\u6240\u4ee5\u4e00\u4e2a\u8282\u70b9\u5982\u679c\u6709\u5947\u6570\u4e2a $g$ \u4e3a\u5947\u6570\u7684\u5b50\u8282\u70b9\uff0c\u6700\u540e\u4f1a\u4ea4\u6362\u51b3\u7b56\u6743\uff1b\u5076\u6570\u4e2a $g$ \u4e3a\u5947\u6570\u7684\u5b50\u8282\u70b9\uff0c\u51b3\u7b56\u6743\u4e0d\u53d8\u3002\n\n\u6211\u4eec\u5bf9\u5b50\u8282\u70b9\u7684\u72b6\u6001\u5206\u7c7b\u8ba8\u8bba\uff0c\u5747\u5047\u8bbe\u4e3a\u5148\u624b\u62ff\u53d6\u4e86\u8be5\u8282\u70b9 $i$ \u7684\u786c\u5e01\uff0c\u63a5\u4e0b\u6765\u8be5\u7531\u540e\u624b\u51b3\u7b56\u8fdb\u5165\u54ea\u4e2a\u5b50\u8282\u70b9 $j \\in son_i$\uff1a\n\n1. $g_j$ \u4e3a\u5076\u6570\u4e14 $f_j < h_j$\uff0c\u90a3\u4e48\u5bf9\u4e8e\u540e\u624b\u6765\u8bf4\u8fd9\u4e2a\u8282\u70b9\u80af\u5b9a\u662f\u6709\u5229\u7684\uff0c\u56e0\u4e3a\u4ed6\u80fd\u62ff\u5f97\u591a\uff0c\u8fd8\u80fd\u56de\u6765\u540e\u7ee7\u7eed\u64cd\u63a7\u5c40\u9762\uff0c\u6240\u4ee5\u53ea\u8981\u6709\u8fd9\u7c7b\u8282\u70b9\uff0c\u540e\u624b\u5fc5\u5b9a\u4f1a\u9009\uff0c\u6b64\u7c7b\u8282\u70b9\u7684\u8f6c\u79fb\u65b9\u7a0b\u4e3a $f_i = f_i + f_j$\u3002\n2. $g_j$ \u4e3a\u5076\u6570\u4e14 $f_j \\ge h_j$\uff0c\u90a3\u4e48\u5bf9\u4e8e\u540e\u624b\u6765\u8bf4\u8fd9\u4e2a\u8282\u70b9\u4e0d\u662f\u4e8f\u7684\u5c31\u662f\u6ca1\u6709\u8d21\u732e\uff0c\u6240\u4ee5\u4f1a\u5c3d\u91cf\u907f\u514d\u9009\u8fd9\u7c7b\u8282\u70b9\uff0c\u6b64\u7c7b\u8282\u70b9\u7684\u8f6c\u79fb\u4e3a $f_i = f_i + h_j$\u3002\n3. $g_j$ \u4e3a\u5947\u6570\uff0c\u6ce8\u610f\u5230\u9009\u62e9\u4e86\u8fd9\u7c7b\u8282\u70b9\u540e\u4f1a\u4ea4\u6362\u51b3\u7b56\u6743\uff0c\u6240\u4ee5\u540e\u624b\u4f1a\u5c3d\u91cf\u9009\u62e9\u4f18\u79c0\u7684\u8282\u70b9\u2014\u2014\u80fd\u8ba9\u4ed6\u6bd4\u5bf9\u624b\u62ff\u5f97\u66f4\u591a\u7684\u8282\u70b9\uff0c\u5373 $h_i - f_i$ \u5c3d\u53ef\u80fd\u5927\u7684\u8282\u70b9\u3002\n\n\u6240\u4ee5\u6574\u4e2a\u6e38\u620f\u7684\u6d41\u7a0b\u81f3\u6b64\u6211\u4eec\u80fd\u591f\u786e\u5b9a\u4e0b\u6765\u4e86\uff1a\u5148\u62ff\u7b2c\u4e00\u7c7b\u8282\u70b9\uff0c\u7136\u540e\u62ff\u7b2c\u4e09\u7c7b\u8282\u70b9\u3002\u5224\u65ad\u4e00\u4e0b\u7b2c\u4e09\u7c7b\u8282\u70b9\u603b\u6570\u7684\u5947\u5076\u6027\uff0c\u770b\u9009\u5b8c\u7b2c\u4e09\u7c7b\u8282\u70b9\u540e\u4f1a\u4e0d\u4f1a\u4ea4\u6362\u51b3\u7b56\u6743\uff0c\u4ece\u800c\u770b\u7b2c\u4e8c\u7c7b\u8282\u70b9\u7684\u8d21\u732e\u5230\u5e95\u662f\u7ed9\u5148\u624b\u8fd8\u662f\u540e\u624b\u3002\n\n\u6574\u4e2a\u904d\u5386\u6d41\u7a0b\u662f $\\mathcal O(n)$ \u7684\u590d\u6742\u5ea6\uff0c\u7531\u4e8e\u9700\u8981\u6211\u4eec\u51b3\u7b56\u5177\u4f53\u54ea\u4e2a\u7b2c\u4e09\u7c7b\u8282\u70b9\u66f4\u4f18\uff0c\u8fd9\u91cc\u9009\u62e9\u4f7f\u7528\u4f18\u5148\u961f\u5217\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n \\log n)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define mp make_pair\nusing namespace std;\n\ninline int read()\n{\n\tint s=0,w=1;\n\tchar c=getchar();\n\twhile(!isdigit(c)) {if(c=='-') w=-1; c=getchar();}\n\twhile(isdigit(c)) s=(s<<1)+(s<<3)+(c^48),c=getchar();\n\treturn s*w;\n}\n\nbool Mbe;\n\nnamespace LgxTpre\n{\n\tstatic const int MAX=100010;\n\tstatic const int INF=2007070707;\n\tstatic const int mod=998244353;\n\t\n\tint n,x;\n\t\n\tstruct edge\n\t{\n\t\tint nex,to;\n\t}e[MAX<<1];\n\tint head[MAX],cnt;\n\tinline void add(int x,int y)\n\t{\n\t\te[++cnt].nex=head[x],head[x]=cnt,e[cnt].to=y;\n\t\treturn;\n\t}\n\n\t#define to e[i].to\n\tint siz[MAX],dp[MAX];\n\tpriority_queue<pair<int,int> > q;\n\tvoid dfs(int now)\n\t{\n\t\tint tot=0,con=0;\n\t\tsiz[now]=1;\n\t\tfor(int i=head[now];i;i=e[i].nex) \n\t\t\tdfs(to),siz[now]+=siz[to],tot^=siz[to]&1;\n\t\tdp[now]=1;\n\t\tfor(int i=head[now];i;i=e[i].nex)\n\t\t{\n\t\t\tif(siz[to]&1)\n\t\t\t\tq.push(mp(siz[to]-2*dp[to],dp[to]));\n\t\t\telse \n\t\t\t{\n\t\t\t\tif(dp[to]<siz[to]-dp[to]||(dp[to]>=siz[to]-dp[to]&&(!tot))) \n\t\t\t\t\tdp[now]+=dp[to]; \n\t\t\t\telse\n\t\t\t\t\tdp[now]+=siz[to]-dp[to];\n\t\t\t}\n\t\t}\n\t\twhile(!q.empty())\n\t\t{\n\t\t\t++con;\n\t\t\tauto it=q.top(); q.pop();\n\t\t\tif(con&1) dp[now]+=it.second;\n\t\t\telse dp[now]+=it.first+it.second;\n\t\t}\n\t\treturn;\n\t} \n\t#undef to\n\t\n\tinline void mian()\n\t{\n\t\tn=read();\n\t\tfor(int i=2;i<=n;++i)\n\t\t\tx=read(),add(x,i);\n\t\tdfs(1);\n\t\tprintf(\"%lld\",dp[1]);\n\t\treturn;\n\t}\n}\n\nbool Med;\n\nsigned main()\n{\n//\tfprintf(stderr,\"%.3lf MB\\n\",(&Mbe-&Med)/1048576.0);\n\tLgxTpre::mian();\n\treturn (0-0);\n}\n```",
        "postTime": 1679187883,
        "uid": 739297,
        "name": "forqprever",
        "ccfLevel": 0,
        "title": "\u9898\u89e3\uff1a\u3010ARC112C\u3011 DFS Game"
    }
]