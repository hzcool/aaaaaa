[
    {
        "content": "# ABC285G \u9898\u89e3\n\n\n\n## \u601d\u8def\u5206\u6790\n\n\u7528 $1\\times 2$ \u9aa8\u724c\u8986\u76d6\u7f51\u683c\u56fe\u7acb\u523b\u60f3\u5230\u9ed1\u767d\u67d3\u8272\u5efa\u7acb\u4e8c\u5206\u56fe\uff0c\u5bf9\u4e8e\u5df2\u7ecf\u88ab $1\\times 1$ \u8986\u76d6\u7684\u65b9\u683c\u5148\u5220\u9664\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4e3a\u6240\u6709 $c_{i,j}=2$ \u7684\u4f4d\u7f6e\u627e\u5230\u5339\u914d\u5373\u53ef\uff0c\u5269\u4e0b\u7684\u4f4d\u7f6e\u7528 $1\\times 1$ \u586b\u8865\u3002\n\n\u6b63\u89e3\u597d\u50cf\u662f\u7f51\u7edc\u6d41\uff0c\u8fd9\u91cc\u53ea\u63d0\u4f9b\u4e00\u79cd\u4e71\u641e\u505a\u6cd5\uff1a\n\n\u5bf9\u4e8e\u6bcf\u4e2a $c_{i,j}=2$ \u7684\u6ca1\u6709\u5339\u914d\u7684\u70b9\uff0c\u76f4\u63a5\u5728\u4e8c\u5206\u56fe\u4e0a\u66b4\u529b\u641c\u51fa\u589e\u5e7f\u8def\uff0c\u5982\u679c\u641c\u4e0d\u51fa\u6765\u589e\u5e7f\u8def\u5219\u8f93\u51fa `No`\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(h^2w^2)$\u3002\n\n\u6ce8\u610f\u5230\u5b9e\u9645\u4e0a\u5f88\u96be\u5361\u6ee1\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u56e0\u6b64\u6ce8\u610f\u4e00\u4e0b\u5b9e\u73b0\u7684\u5e38\u6570\uff08\u4f8b\u5982\u7528\u65f6\u95f4\u6233\u6807\u8bb0 `vis[]` \u6570\u7ec4\u907f\u514d\u8fc7\u591a\u7684 `memset` \u64cd\u4f5c\uff09\u5373\u53ef\u901a\u8fc7\u672c\u9898\u3002\n\n## \u4ee3\u7801\u5448\u73b0\n\n```cpp\n#include<bits/stdc++.h> \nusing namespace std;\nconst int MAXN=301,MAXV=1e5+1;\nvector <int> G[MAXV];\nint tar[MAXV],vis[MAXV];\ninline bool dfs(int x,int t) {\n\tif(vis[x]==t) return false;\n\tvis[x]=t;\n\tfor(int p:G[x]) {\n\t\tif(vis[p]==t) continue;\n\t\tvis[p]=t;\n\t\tif(tar[p]==-1||dfs(tar[p],t)) {\n\t\t\ttar[p]=x,tar[x]=p;\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nconst int dx[]={0,0,1,-1},dy[]={1,-1,0,0};\nchar a[MAXN][MAXN];\nint id[MAXN][MAXN]; \nsigned main() {\n\tint n,m;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;++i) scanf(\"%s\",a[i]+1);\n\tfor(int i=1,cnt=0;i<=n;++i) {\n\t\tfor(int j=1;j<=m;++j) {\n\t\t\tid[i][j]=++cnt;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;++i) {\n\t\tfor(int j=1;j<=m;++j) {\n\t\t\tif(a[i][j]=='1'||(i+j)%2==0) continue;\n\t\t\tfor(int k:{0,1,2,3}) {\n\t\t\t\tint x=i+dx[k],y=j+dy[k];\n\t\t\t\tif(x<1||x>n||y<1||y>m) continue;\n\t\t\t\tif(a[x][y]=='1') continue;\n\t\t\t\tG[id[i][j]].push_back(id[x][y]);\n\t\t\t\tG[id[x][y]].push_back(id[i][j]);\n\t\t\t}\n\t\t}\n\t}\n\tmemset(tar,-1,sizeof(tar));\n\tfor(int i=1;i<=n;++i) {\n\t\tfor(int j=1;j<=m;++j){\n\t\t\tif(a[i][j]=='2') {\n\t\t\t\tif(tar[id[i][j]]!=-1) continue;\n\t\t\t\tif(!dfs(id[i][j],id[i][j])) {\n\t\t\t\t\tputs(\"No\");\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tputs(\"Yes\");\n\treturn 0;\n}\n```",
        "postTime": 1673837764,
        "uid": 539618,
        "name": "DaiRuiChen007",
        "ccfLevel": 6,
        "title": "ABC285G \u9898\u89e3"
    },
    {
        "content": "# ABC 285 G - Tatami\n\n## Solution \u7f51\u7edc\u6d41\n\n\u7f51\u683c\u56fe\u662f\u4e00\u4e2a\u5929\u7136\u4e8c\u5206\u56fe\uff0c \u53ef\u4ee5\u6309 \u6a2a\u7eb5\u5750\u6807\u4e4b\u548c \u7684\u5947\u5076\u6027\u5c06\u76f8\u90bb\u4e24\u683c\u5206\u5c5e\u4e8e\u5de6\u90e8\u548c\u53f3\u90e8\u3002\n\n\u8bb0 `?` \u6216 $2$ \u7684\u683c\u5b50\u4e3a\u5f85\u5339\u914d\u70b9\uff0c \u8bb0\u6a2a\u7eb5\u5750\u6807\u4e4b\u548c\u4e3a\u5947\u6570\u7684\u4e3a\u5947\u5f85\u5339\u914d\u70b9\uff0c \u5373 $(i + j)$ \u4e3a $odd$\u3002\n\n\u5c06\u5339\u914d\u70b9\u5411\u76f8\u90bb\u5339\u914d\u70b9\u8fde\u8fb9\uff0c\u5efa $S$ \u548c $T$ \u8d85\u7ea7\u6e90\u6c47\uff0c \u5c06 $S$ \u4e0e\u5947\u5f85\u5339\u914d\u70b9\u8fde\u8fb9\uff0c \u5076\u5f85\u5339\u914d\u70b9\u4e0e $T$ \u8fde\u8fb9\u3002\n\n\u5bb9\u91cf\u7686\u4e3a $1$\uff0c\u8dd1\u4e00\u8fb9\u6700\u5927\u6d41\uff0c\u6700\u540e\u68c0\u67e5\u4e0e $S$, $T$ \u76f8\u8fde\u7684 $2$ \u8fb9\u662f\u5426\u90fd\u4e3a\u96f6\u5373\u53ef\u3002\n\n\u53ef\u60dc\u7684\u662f\uff0c\u8fd9\u79cd\u601d\u8def\u53ea\u80fd\u8fc7\u8d5b\u65f6\u6570\u636e\uff0c\u88ab after-contest hack \u6389\u4e86\uff0c \u8fd9\u91cc\u63d0\u4f9b\u4e00\u7ec4\u6570\u636e\uff1a\n\nInput\n\n```\n4 4\n11?1\n?222\n1211\n1?11\n```\n\nOutput\n\n```\nYes\n```\n\n\u53ef\u4ee5\u770b\u51fa\uff0c \u6700\u5927\u6d41\u6709\u591a\u79cd\u60c5\u51b5\uff0c$2$ \u4e0e $2$ \u7684\u65b9\u683c\u4e0d\u4e00\u5b9a\u80fd\u8fde\u8fb9\u3002\n\n\u6240\u4ee5\u53ea\u80fd\u8dd1\u4e00\u904d\u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41\u4e86\u3002\n\n[\u5173\u4e8e\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41\u53ef\u4ee5\u770b\u8fd9\u7bc7Blog](https://zhuanlan.zhihu.com/p/324507636)\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define for_(i,a,b) for (ll i = (a); i < (b); i++)\n#define rep_(i,a,b) for (ll i = (a); i <= (b); i++)\n#define fi first \n#define se second\n#define sz(a) a.size()\nusing namespace std;\nconst int maxn = 1e6 + 10, mod = 1e9 + 7;// mod = 1949777;\nconst double EPS = 1e-3;\ntypedef unsigned long long ull;\ntypedef long long ll;\ntypedef pair<int, int> pii;\nint n, m; \nchar c[505][505];\nint inf = 1 << 29;\nint id[505][505];\nint dx[5] = {0, 0, 1, -1};\nint dy[5] = {1, -1, 0, 0}; \nint d[maxn]; \nint tot = 1, maxflow;\nint nxt[maxn], head[maxn], v[maxn], e[maxn], tag[maxn];\nint now[maxn];// \u5f53\u524d\u5f27\u4f18\u5316\nint Vin[maxn], Vout[maxn];\nvoid add(int x, int y, int c) {\n    v[++tot] = y, e[tot] = c, nxt[tot] = head[x]; head[x] = tot;\n    v[++tot] = x, e[tot] = 0, nxt[tot] = head[y], head[y] = tot;\n}\nint s, t;\nbool bfs(){\n    memset(d, 0, sizeof(d));\n    queue<int> q;\n    q.push(s);\n    d[s] = 1; now[s] = head[s];\n    while(q.size()) {\n        int x = q.front(); q.pop();\n        for (int i = head[x]; i; i = nxt[i]) {\n            if (e[i] && !d[v[i]]) {\n                d[v[i]] = d[x] + 1;\n                now[v[i]] = head[v[i]];\n                q.push(v[i]);\n                if (v[i] == t) return 1;\n            }\n        }\n    }\n    return 0;\n}\nint dinic(int x, int flow){\n    if (x == t) return flow;\n    int res = flow, k;\n    for (int i = now[x]; i && res; i = nxt[i]) {\n        now[x] = i;\n        if (e[i] && d[v[i]] == d[x] + 1) {\n            k = dinic(v[i], min(res, e[i]));\n            if (!k) d[v[i]] = 0;\n            e[i] -= k;\n            e[i^1] += k;\n            res -= k;\n        }\n    }\n    return flow - res;\n}\nint cnt = 0;\nsigned main() {\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    cin >> n >> m;\n    for (int i = 1; i <= n; i++) {\n        for(int j = 1; j <= m; j++) {\n            cin >> c[i][j];\n            id[i][j] = ++cnt; // \u6807\u53f7 \u9884\u5904\u7406\u6bd4\u8f83\u65b9\u4fbf... \n        }\n    }\n    s = 0, t = n * m + 1;\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= m; j++) {\n            if (c[i][j] == '1') continue;\n            if ((i + j) & 1) { // \u5947\u5e26\u5339\u914d\u70b9 \n                if (c[i][j] == '2') {\n                    add(s, id[i][j], 0); // \u8fde\u4e00\u6761upper\u51cf\u53bblower\u7684\u8fb9 \u6b64\u5904\u4e0a\u754c\u4e3a1\uff0c \u4e0b\u754c\u4e3a1 \uff0c 1 - 1 = 0 \n                    // \u4e5f\u53ef\u4ee5\u4e0d\u8fde\uff0c \u6b64\u5904\u5199\u51fa\u662f\u4e3a\u4e86\u6e05\u695a \n                    Vin[id[i][j]]++; // \u5904\u4e8e\u7ef4\u62a4\u6d41\u91cf\u5e73\u8861, \u9700\u8981\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u7684\u6d41\u5165\u91cf&\u6d41\u51fa\u91cf \n                    Vout[s]++;  \n                } else add(s, id[i][j], 1);\n                for (int k = 0; k < 4; k++) {\n                    int nx = i + dx[k], ny = j + dy[k];\n                    if (nx >= 1 && ny >= 1 && nx <= n && ny <= m) {\n                        add(id[i][j], id[nx][ny], 1); //\u5e26\u5339\u914d\u70b9\u8fde\u8fb9 \n                    }\n                }\n            } else {\n                if (c[i][j] == '2') { //\u540c\u4e0a \n                    Vin[t]++;\n                    Vout[id[i][j]]++;\n                    add(id[i][j], t, 0);\n                } else add(id[i][j], t, 1);\n            }\n        }\n    }\n    add(t, s, 1e9); // \u539f\u56fe\u7684\u6c47\u5411\u6e90\u8fde\u4e00\u6761inf\u8fb9\uff0c\u4ee5\u4e0b\u7686\u662f\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41\u7684\u5e38\u89c4\u64cd\u4f5c\u3002 \n    s = n * m + 2, t = n * m + 3; // \u65b0\u5efa\u6e90\u6c47 \n    for (int i = 0; i <= n * m + 1; i++) {\n        if (Vin[i] > Vout[i]) {\n            add(s, i, Vin[i] - Vout[i]);\n        } else if (Vin[i] < Vout[i]){\n            add(i, t, Vout[i] - Vin[i]);\n        }\n    }\n    int flow, maxflow = 0;\n    // \u5728\u5dee\u7f51\u7edc\u4e0a\u8dd1\u6700\u5927\u6d41 \n    while(bfs()) {\n        while(flow = dinic(s, inf)) maxflow += flow;\n    }\n    int ok = 1;\n    for (int i = head[s]; i; i = nxt[i]) {\n        if (e[i]) ok = 0; //\u5224\u65ad\u6709\u65e0\u89e3 \n    }\n    if (ok) cout << \"Yes\" << endl;\n    else cout << \"No\" <<endl;\n     return 0; \n} \n\n\n```\n\n## Solution \u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\n\n\u539f\u5148\u7684\u6700\u5927\u6d41\u601d\u8def\u771f\u7684\u4e0d\u884c\u5417?\n\n\u5982\u679c\u6211\u4eec\u8df3\u51fa\u7f51\u7edc\u6d41\u662f\u4e2a\u5929\u7136\u4e8c\u5206\u56fe\u8fd9\u4e2a\u601d\u8def\uff0c \u91cd\u65b0\u5efa\u56fe\uff0c\u53e6\u8f9f\u8e4a\u5f84\uff0c\u5373\u662f\u67f3\u6697\u82b1\u660e\u3002\n\n\u6211\u4eec\u77e5\u9053\uff0c\u539f\u5148\u7684\u60f3\u6cd5\u53ea\u662f\u5361\u5728\u8fbe\u5230\u6700\u5927\u5339\u914d\u6570\u4f46\u662f\u4e0d\u662f\u6240\u6709\u7684 $2$ \u90fd\u88ab\u5339\u914d\u3002\u6211\u4eec\u662f\u4e0d\u662f\u53ef\u4ee5\u4ea4\u6362\u4e00\u4e9b `?` \u4e0e $2$ \u7684\u5339\u914d\uff0c \u8f6c\u800c\u53d8\u6210 $2$ \u4e0e $2$ \u7684\u5339\u914d\uff0c\u6211\u770b\u5230\u6d1b\u8c37\u4e0a\u6709\u5927\u795e\u5df2\u7ecf\u600e\u4e48\u5199\u7684\u4e86\uff0c\u4ed6\u662f\u4e0d\u65ad\u5bfb\u627e\u589e\u5e7f\u8def\uff0c\u4f7f\u5f97\u6bcf\u4e00\u4e2a $2$ \u90fd\u5c3d\u53ef\u80fd\u88ab\u5339\u914d\uff0c\u5728\u6b64 %%%\u3002\n\n\u4e5f\u53ef\u4ee5\u91cd\u65b0\u5efa\u56fe\uff0c\u6c42\u51fa\u6700\u5927\u5339\u914d\uff0c \u7136\u540e\u770b\u5339\u914d\u6570\u662f\u5426\u7b49\u4e8e $2$ \u7684\u4e2a\u6570\u5373\u53ef\u3002\n\n\n\n```cpp\n#include <bits/stdc++.h>\n#define for_(i,a,b) for (ll i = (a); i < (b); i++)\n#define rep_(i,a,b) for (ll i = (a); i <= (b); i++)\n#define fi first \n#define se second\n#define sz(a) a.size()\n#define int long long\n#define pb push_back\n#define CE cout << endl;\n#define CO cout << \"OK\" << endl;\nusing namespace std;\nconst int maxn = 2e6 + 10, mod = 1e9 + 7;// mod = 1949777;\nconst double EPS = 1e-3;\ntypedef unsigned long long ull;\ntypedef long long ll;\ntypedef pair<int, int> pii;\nint n, m; \nchar c[505][505];\nint inf = 1 << 29;\nint id[505][505];\nint dx[5] = {0, 0, 1, -1};\nint dy[5] = {1, -1, 0, 0}; \nint d[maxn]; \nint tot = 1, maxflow;\nint nxt[maxn], head[maxn], v[maxn], e[maxn], tag[maxn];\nint now[maxn];// \u5f53\u524d\u5f27\u4f18\u5316\nint Vin[maxn], Vout[maxn];\nvoid add(int x, int y, int c) {\n    v[++tot] = y, e[tot] = c, nxt[tot] = head[x]; head[x] = tot;\n    v[++tot] = x, e[tot] = 0, nxt[tot] = head[y], head[y] = tot;\n}\nint s, t;\nbool bfs(){\n    memset(d, 0, sizeof(d));\n    queue<int> q;\n    q.push(s);\n    d[s] = 1; now[s] = head[s];\n    while(q.size()) {\n        int x = q.front(); q.pop();\n        for (int i = head[x]; i; i = nxt[i]) {\n            if (e[i] && !d[v[i]]) {\n                d[v[i]] = d[x] + 1;\n                now[v[i]] = head[v[i]];\n                q.push(v[i]);\n                if (v[i] == t) return 1;\n            }\n        }\n    }\n    return 0;\n}\nint dinic(int x, int flow){\n    if (x == t) return flow;\n    int res = flow, k;\n    for (int i = now[x]; i && res; i = nxt[i]) {\n        now[x] = i;\n        if (e[i] && d[v[i]] == d[x] + 1) {\n            k = dinic(v[i], min(res, e[i]));\n            if (!k) d[v[i]] = 0;\n            e[i] -= k;\n            e[i^1] += k;\n            res -= k;\n        }\n    }\n    return flow - res;\n}\nint cnt = 0;\nsigned main() { \n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    cin>> n >> m;\n    int K = 0;\n    for (int i = 1; i <= n; i++) {\n        for(int j = 1; j <= m; j++) {\n            cin >> c[i][j];\n            if (c[i][j] == '2') K++;\n            id[i][j] = ++cnt;\n        }\n    }\n    s = 0, t = 3 * n * m + 1;\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= m; j++) {\n            if (c[i][j] == '1') continue;\n            if (c[i][j] == '2') {\n                add(s, id[i][j], 1);\n                for (int k = 0; k < 4; k++) {\n                    int nx = i + dx[k], ny = j + dy[k];\n                    if (nx >= 1 && ny >= 1 && nx <= n && ny <= m) {\n                        if (c[nx][ny] != '1') add(id[i][j], id[nx][ny] + n * m, 1);\n                    }\n                }\n            }\n            add(id[i][j] + n * m, t, 1);\n        }\n    }\n    int flow, maxflow = 0;\n    while(bfs()) {\n        while(flow = dinic(s, inf)) maxflow += flow;\n    }\n    if (maxflow == K) cout << \"Yes\" << endl;\n    else cout << \"No\" <<endl;\n     return 0; \n} \n\n```\n",
        "postTime": 1678958011,
        "uid": 525216,
        "name": "Crane_w",
        "ccfLevel": 5,
        "title": "abc285G\uff0c \u7f51\u7edc\u6d41\uff0c\u4e8c\u5206\u56fe"
    },
    {
        "content": "[A-G\u9898\u89e3](https://www.cnblogs.com/SkyRainWind/p/17060088.html)\n\n\u8003\u8651\u4e86\u4e00\u4e0b\u666e\u901a\u7684\u56fe\u8bba\u505a\u6cd5\u597d\u50cf\u6ca1\u6cd5\u505a\uff0c\u60f3\u5230\u7f51\u7edc\u6d41\u3002\n\n\u6ce8\u610f\u7f51\u683c\u56fe\u662f\u4e2a\u5929\u7136\u7684\u4e8c\u5206\u56fe\uff08\u53ea\u6709 $i+j$ \u5947\u5076\u6027\u4e0d\u540c\u7684\u70b9\u624d\u80fd\u8fde\u8fb9\uff09\u3002\n\n$(i,j)$ \u80fd\u5411 $(i,j+1)$ \u6216 $(i+1,j)$ \u8fde\u8fb9 \u5f53\u4e14\u4ec5\u5f53 \u4e24\u4e2a\u70b9\u90fd\u6ca1\u6709 1\u3002\n\n\u663e\u7136\u6211\u4eec\u53ea\u9700\u8981\u5173\u5fc3\u6240\u6709\u7684 2 \u662f\u5426\u6709\u5730\u65b9\u653e\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u5339\u914d\u95ee\u9898\uff01\n\n\u56e0\u4e3a\u6211\u4eec\u8981\u6c42\u6240\u6709\u7684 2 \u5fc5\u987b\u5339\u914d\uff0c\u56e0\u6b64\u53ef\u4ee5\u8003\u8651\u5c06 $(S,i)$ \u6216\u8005 $(i,T)$\uff08$i$ \u4e3a\u8fd9\u4e2a\u70b9\uff09\u7684\u5bb9\u91cf\u4e0b\u9650\u8bbe\u4e3a 1\uff0c\u7136\u540e\u5bf9\u4e8e\u6240\u6709\u7684\u8fb9\u7684\u5bb9\u91cf\u4e0a\u9650\u5747\u8bbe\u4e3a 1 \uff0c\u8dd1\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41\u3002\n\n```cpp\n// by SkyRainWind\n#include <bits/stdc++.h>\n#define mpr make_pair\n#define debug() cerr<<\"Yoshino\\n\"\n#define rep(i,a,b) for(int (i)=(a);(i)<=(b);(i)++)\n#define pii pair<int,int>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long long LL;\n\nconst int inf = 1e9, INF = 0x3f3f3f3f, maxn = 2e5+5;\n\nint n,m;\nstruct ed{\n\tLL from,to,cap,flow,rev;\n\ted(){}\n\ted(LL from,LL to,LL cap,LL flow,LL rev):from(from),to(to),cap(cap),flow(flow),rev(rev){}\n};\nvector<ed>g[maxn];\n\nstruct netflow{\n\tint cur[maxn]; \n\tint d[maxn], q[maxn], hd, tl;\n\tint in[maxn], out[maxn];\n\tint s, t;\t// \u6e90 \u6c47 \n\t\n\tnetflow(){s=t=-1;}\n\t\n\tvoid clear(){\n\t\ts = t = -1;\n\t\tfor(int i=1;i<=n+m+10;i++)g[i].clear(), in[i] = out[i] = 0;\n\t}\n\t\n\tvoid init(int s0,int t0){\n\t\ts = s0, t = t0;\n\t}\n\n\tvoid add(int x,int y,LL v){\n\t\tg[x].push_back(ed(x,y,v,0,g[y].size()));\n\t\tg[y].push_back(ed(y,x,0,0,g[x].size() - 1));\n\t}\n\t\n\tvoid adde(int x,int y,int l,int r){\t// x->y [l,r]\n\t\tadd(x, y, r-l);\n\t\tout[x] += l; in[y] += l;\n\t}\n\t\n\tint bfs(){\n\t\tmemset(d,0, sizeof d);\n\t\thd = tl = 0;\n\t\tq[tl ++] = s;\n\t\td[s] = 1;\n\t\twhile(hd != tl){\n\t\t\tint now = q[hd ++];\n\t\t\tfor(int i = 0;i<g[now].size();i++){\n\t\t\t\ted &e = g[now][i];\n\t\t\t\tif(!d[e.to] && e.cap > e.flow)d[e.to] = d[now] + 1, q[tl ++] = e.to;\n\t\t\t}\n\t\t}\n\t\treturn d[t];\n\t}\n\t\n\tLL dfs(int now,LL rem){\t// rem \u5f53\u524d\u6d41\u91cf \n\t\tif(now == t || !rem)return rem;\n\t\tLL flow = 0;\n\t\tfor(int &i = cur[now]; i < g[now].size();i ++){\n\t\t\ted &e = g[now][i];\n\t\t\t\t// \u5206\u5c42\u56fe & \u6b8b\u91cf\u4e0d\u4e3a0 \n\t\t\tif(d[e.to] == d[now] + 1 && e.cap > e.flow){\n\t\t\t\tLL f = dfs(e.to, min(rem, e.cap - e.flow));\n\t\t\t\trem -= f, flow += f, e.flow += f, g[e.to][e.rev].flow -= f;\n\t\t\t}\n\t\t\tif(!rem)break;\n\t\t}\n\t\tif(rem)d[now] = -1;\n\t\treturn flow;\n\t}\n\t\n\tLL dinic(){\n\t\tassert(s!=-1);\n\t\tLL flow = 0;\n\t\twhile(bfs()){\n\t\t\tmemset(cur, 0, sizeof cur);\n\t\t\tflow += dfs(s, 1ll << 62);\n\t\t}\n\t\treturn flow;\n\t}\n\t\n\tLL pflow(int S0, int T0, int S, int T, int point){\t// possible flow\n\t\t// S0 T0 \u6e90\u70b9\u6c47\u70b9 ST \u8d85\u6e90\u8d85\u6c47 point \u6709\u591a\u5c11\u70b9 \n\t\tLL lim = 0;\n\t\tfor(int i=1;i<=point;i++){\n\t\t\tint cur = in[i] - out[i];\n\t\t\tif(in[i] == out[i] && in[i] == 0)continue;\n\t\t\tif(cur > 0)add(S, i, cur), lim += cur;\n\t\t\telse add(i, T, -cur);\n\t\t}\n\t\tadd(T0, S0, inf);\n\t\tinit(S, T);\n\t\tLL res = dinic();\n\t\tif(res < lim)return -1;\n\t\tinit(S0, T0);\n\t\treturn dinic();\n\t}\n}nf;\nint S0, T0, S, T;\nint h,w;\nchar s[305][305];\n\nint ind(int x,int y){return (x-1) * w + y;}\nint rnd(int x,int y){\n\tif(s[x][y] == '2')return 1;\n\treturn 0;\n}\nsigned main(){\n\tscanf(\"%d%d\",&h,&w);\n\tS0 = h*w+1, T0 = h*w+2, S = h*w+3, T = h*w+4;\n\tfor(int i=1;i<=h;i++)scanf(\"%s\",s[i] + 1);\n\tfor(int i=1;i<=h;i++)\n\t\tfor(int j=1;j<=w;j++)if(s[i][j] != '1'){\n\t\t\tif((i+j) & 1){\n\t\t\t\tint le = rnd(i, j);\n\t\t\t\tnf.adde(ind(i, j), T0, le, 1);\n\t\t\t}else{\n\t\t\t\tint le = rnd(i, j);\n\t\t\t\tnf.adde(S0, ind(i, j), le, 1);\n\t\t\t}\n\t\t}\n\tfor(int i=1;i<=h;i++)\n\t\tfor(int j=1;j<=w;j++)if(s[i][j] != '1'){\n\t\t\tif(i+1<=h && s[i+1][j] != '1'){\n\t\t\t\tint x1 = ind(i,j),x2 = ind(i+1,j);\n\t\t\t\tif((i+j)&1)swap(x1, x2); \n\t\t\t\tnf.adde(x1, x2, 0, 1);\n\t\t\t}\n\t\t\tif(j+1<=w && s[i][j+1] != '1'){\n\t\t\t\tint x1 = ind(i,j), x2 = ind(i, j+1);\n\t\t\t\tif((i+j)&1)swap(x1, x2);\n\t\t\t\tnf.adde(x1, x2, 0, 1);\n\t\t\t}\n\t\t}\n\tll res = nf.pflow(S0, T0, S, T, h*w+2);\n\tputs(~res ? \"Yes\" : \"No\");\n\n\treturn 0;\n}\n```",
        "postTime": 1674029562,
        "uid": 84042,
        "name": "SkyRainWind",
        "ccfLevel": 7,
        "title": "ABC285G \u9898\u89e3"
    },
    {
        "content": "## [ABC285 G-Tatami](https://atcoder.jp/contests/abc285/tasks/abc285_g)\n\n\u9898\u610f\uff1a$n\\times m$ \u7684\u77e9\u9635\uff0c\u4f7f\u7528 $1\\times 1$ \u6216\u8005 $1\\times 2$ \u7684\u5c0f\u77e9\u5f62\u586b\u6ee1\u3002$1\\le n,m\\le 300$\n\n\u5df2\u77e5\u4e00\u4e9b\u70b9\u88ab $1\\times 1$ \u6216\u8005 $1\\times 2$ \u7684\u5c0f\u77e9\u5f62\u8986\u76d6\u4e86\u3002\u6c42\u4f7f\u7528\u8fd9\u4e24\u79cd\u77e9\u5f62\u586b\u6ee1\u77e9\u9635\u7684\u53ef\u884c\u6027\u3002\n\n\u5206\u6790\uff1a\u5176\u5b9e\u5c31\u662f\u8981\u6c42\u6240\u6709\u6807\u8bb0 $2$ \u6570\u5b57\u7684\u4f4d\u7f6e\u80fd\u591f\u5339\u914d\u5230\u76f8\u90bb\u56db\u8054\u901a\u7684\u77e9\u5f62\u3002\n\n\u4e8e\u662f\u6211\u4eec\u9ed1\u767d\u67d3\u8272\u8fd9\u5f20\u56fe\uff0c\u7136\u540e\u6240\u6709\u8d77\u70b9\u8fde\u63a5\u6240\u6709\u767d\u70b9\uff0c\u6240\u6709\u9ed1\u70b9\u8fde\u63a5\u7ec8\u70b9\uff0c\u6240\u6709\u6d41\u91cf\u90fd\u662f $1$\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u5de6\u4fa7\u7684\u767d\u70b9\uff0c\u5982\u679c\u53f3\u4fa7\u6709\u76f8\u90bb\u4e14\u53ef\u884c\u7684\u9ed1\u70b9\uff0c\u90a3\u4e48\u5c31\u8fde\u63a5\u4e00\u6761\u8fb9\u5230\u9ed1\u70b9\uff0c\u6d41\u91cf\u4e3a $1$\u3002\n\n\u5224\u65ad\u53ef\u884c\u6027\u5c31\u5224\u65ad\u6b8b\u91cf\u7f51\u7edc\uff1a\u6bcf\u4e2a\u6807\u8bb0 $2$ \u7684\u8282\u70b9\u5de6\u7aef\u6216\u8005\u53f3\u7aef\u6709 $1$ \u7684\u6d41\u5373\u53ef\u3002\n\n\u4f46\u662f\uff0c\u8be5\u505a\u6cd5\u5728\u8003\u573a\u4e0a WA \u4e86 $11$ \u4e2a\u70b9\uff0c\u6240\u4ee5\u9700\u8981\u8bc1\u4f2a\u6216\u8005\u6539\u8fdb\u3002\n\n---\n\n\u8fd9\u4e2a\u505a\u6cd5\u4e3a\u4ec0\u4e48\u662f\u9519\u7684\u5462\uff1f\u56e0\u4e3a\u5728\u8fd9\u5f20\u4e8c\u5206\u56fe\u4e0a\u9762\u6700\u5927\u6d41\u8dd1\u51fa\u6765\u5f80\u5f80\u4e0d\u662f\u5b8c\u7f8e\u5339\u914d\uff0c\u800c\u6700\u5927\u6d41\u4e0d\u80fd\u4fdd\u8bc1\u7ecf\u8fc7\u6240\u6709\u7684\u6807\u8bb0 $2$ \u7684\u8282\u70b9\uff0c\u5b83\u53ea\u80fd\u4fdd\u8bc1\u6700\u5927\u6d41\uff0c\u5982\u679c\u7ecf\u8fc7\u6807\u8bb0 $2$ \u8282\u70b9\u65f6\u5019\u5360\u7528\u4e86\u4e00\u4e9b\u8282\u70b9\u4f7f\u5f97\u65e0\u6cd5\u8dd1\u6ee1\u6700\u5927\u6d41\uff0c\u5b83\u5c31\u4f1a\u6beb\u4e0d\u72b9\u8c6b\u5730\u653e\u5f03\u6807\u8bb0 $2$ \u8282\u70b9\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u53ef\u4ee5\u727a\u7272\u6700\u5927\u6d41\u800c\u6ee1\u8db3\u6240\u6709 $2$ \u7684\u6761\u4ef6\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5f3a\u5236\u9650\u5b9a\u6807\u8bb0 $2$ \u8282\u70b9\u5230 $T$ \u6216\u8005\u4ece $S$ \u5230\u5b83\u7684\u6240\u6709\u8fb9\u7684\u6700\u5c0f\u6d41\u91cf\u4e3a $1$\uff0c\u6700\u5927\u6d41\u91cf\u4e5f\u4e3a $1$\uff1b\u5176\u4ed6\u8fb9\u7684\u6700\u5c0f\u6d41\u91cf\u4e3a $0$\uff0c\u6700\u5927\u6d41\u91cf\u4e3a $1$ \u5373\u53ef\u3002\u5373\u53ef\u4f7f\u7528\u4e0a\u4e0b\u754c\u6709\u6e90\u6c47\u53ef\u884c\u6d41\u89e3\u51b3\u95ee\u9898\u3002\n\n---\n\n\u6709\u6e90\u6c47\u901a\u5e38\u8f6c\u6210\u65e0\u6e90\u6c47\u53ef\u884c\u6d41\uff0c\u5373\u4ece $T$ \u5411 $S$ \u8fde\u63a5\u4e00\u6761\u4e0a\u9650\u6d41\u91cf\u4e3a\u65e0\u7a77\u5927\u3001\u4e0b\u9650\u6d41\u91cf\u4e3a $0$ \u7684\u8fb9\u5373\u53ef\u3002\n\n\u5047\u8bbe\u6bcf\u6761\u8fb9\u7684\u4e0a\u9650\u6d41\u91cf\u662f $u(i,j)$\uff0c\u4e0b\u9650\u6d41\u91cf\u4e3a $d(i,j)$\uff0c\u6211\u4eec\u9700\u8981\u7ed9\u6bcf\u6761\u8fb9\u5b9a\u4e00\u4e2a\u6d41\u91cf $f(i,j)$\uff0c\u4f7f\u5f97\u6d41\u91cf\u5e73\u8861\u4e14\u5728\u9650\u5236\u5185\u3002\n\n\u90a3\u4e48\u4e0d\u59a8\u8003\u8651\u6bcf\u6761\u8fb9\u5df2\u7ecf\u6d41\u4e86 $d(i,j)$ \u7684\u6d41\u91cf\uff0c\u6240\u4ee5\u53ea\u80fd\u591a\u6d41 $u(i,j)-d(i,j)$ \u7684\u6d41\u91cf\u3002\n\n\u8bbe\u4e00\u4e2a\u8282\u70b9 $x$ \u521d\u59cb\u5165\u6d41\u6d41\u91cf\u51cf\u53bb\u521d\u59cb\u51fa\u6d41\u6d41\u91cf\u7684\u6d41\u91cf\u5dee $W$\u3002\n\n\u5982\u679c $W=0$\uff0c\u5c31\u4ec0\u4e48\u4e5f\u65e0\u9700\u4fee\u6539\u3002\n\n\u5982\u679c $W<0$\uff0c\u8bf4\u660e\u51fa\u6d41\u91cf\u8fc7\u5927\u3002\u4e3a\u4e86\u7ef4\u62a4\u56fe\u7684\u6b63\u786e\u6027\uff0c\u9700\u8981\u628a $x$ \u8fde\u63a5\u4e00\u4e2a\u9644\u52a0\u7684\u6c47\u70b9 $T'$\uff0c\u6d41\u91cf\u4e3a $-W$\u3002\u8fd9\u6837\u7684\u610f\u4e49\u662f\u4e3a\u4e86\u63d0\u9ad8 $x$ \u7684\u5165\u6d41\u91cf\uff1a\u4ece $x$ \u8d70\u5230 $T'$ \u663e\u7136\u6bd4\u7ed5\u522b\u7684\u5f2f\u8def\u8981\u5bb9\u6613\uff0c\u6240\u4ee5\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u60c5\u51b5\u4e4b\u4e0b\uff0c\u8dd1\u6700\u5927\u6d41\u7684\u65f6\u5019\u5c31\u4e00\u5b9a\u4f1a\u7ed9\u5165\u6d41\u6d41\u91cf\u63d0\u9ad8 $-W$\uff0c\u6362\u800c\u8a00\u4e4b\uff0c\u8ba9 $x$ \u6d41\u6b63\u786e\u7684\u6d41\u4e0d\u662f\u5b83\u7f3a\u4ec0\u4e48\u5c31\u7ed9\u4ec0\u4e48\uff0c\u800c\u662f\u63d0\u9ad8\u5bf9\u5b83\u7684\u8981\u6c42\u3002\n\n\u5982\u679c $W>0$\uff0c\u8bf4\u660e\u5165\u6d41\u91cf\u8fc7\u5927\u3002\u4e3a\u4e86\u7ef4\u62a4\u56fe\u7684\u6b63\u786e\u6027\uff0c\u9700\u8981\u628a\u65b0\u5efa\u7684\u6e90\u70b9 $S'$ \u8fde\u63a5 $x$\uff0c\u6d41\u91cf\u4e3a $W$\u3002\u8fd9\u6837\u7684\u610f\u4e49\u5c31\u662f\u4e3a\u4e86\u6269\u5927 $x$ \u7684\u51fa\u6d41\u91cf\uff1a\u8bc1\u660e\u540c\u7406\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5bf9\u4e8e $S'$ \u5230 $T'$ \u8dd1\u6700\u5927\u6d41\uff0c\u679a\u4e3e $S'$ \u7684\u6240\u6709\u51fa\u8fb9\uff0c\u89c2\u5bdf\u5230\u5982\u679c\u8fd9\u51e0\u6761\u8fb9\u90fd\u4e0d\u80fd\u8dd1\u6ee1\uff0c\u90a3\u4e48\u5c31\u662f\u5931\u8d25\uff1b\u5bf9\u4e8e $T'$ \u4e5f\u662f\u540c\u7406\u3002\u4e3a\u4ec0\u4e48\u8fde\u6ca1\u6709\u8dd1\u6ee1\u5c31\u7b97\u5931\u8d25\u5462\uff1f\u56e0\u4e3a\u5b83\u8fde\u57fa\u7840\u7684\u6e90\u6c47\u70b9\u8d4b\u4e88\u5b83\u7684\u4f7f\u547d\u2014\u2014\u6d41\u91cf\u5e73\u8861\u90fd\u65e0\u6cd5\u6ee1\u8db3\uff0c\u53ea\u80fd\u9000\u800c\u6c42\u5176\u6b21\uff0c\u8fd9\u79cd\u56fe\uff0c\u600e\u4e48\u80fd\u8bf4\u5b83\u662f\u53ef\u884c\u7684\u5462\uff1f\n\n---\n\n\u672c\u9898\u4e4b\u4e2d\uff0c\u9700\u8981\u6539\u53d8\u4e00\u4e9b\u5efa\u56fe\u65b9\u5f0f\u3002\n\n\u53ea\u6709 $S$ \u5230\u6240\u6709\u767d\u70b9\u7684\u8fb9\u624d\u6709\u53ef\u80fd\u6709\u4e0b\u754c $d$\uff0c\u6240\u4ee5\u679a\u4e3e\u6807\u8bb0\u4e3a $2$ \u7684\u767d\u70b9\uff0c$W$ \u503c\u5c31\u662f $1$\uff0c\u6240\u4ee5 $S'$ \u5411\u5b83\u8fde\u63a5\u4e00\u6761\u5bb9\u91cf\u4e3a $1$ \u7684\u8fb9\uff1b\n\n\u53ea\u6709\u6240\u6709\u9ed1\u70b9\u5230 $T$ \u7684\u8fb9\u624d\u6709\u53ef\u80fd\u6709\u4e0b\u754c $d$\uff0c\u6240\u4ee5\u679a\u4e3e\u6807\u8bb0\u4e3a $2$ \u7684\u9ed1\u70b9\uff0c$W$ \u503c\u662f $-1$\uff0c\u6240\u4ee5\u5b83\u5411 $T'$ \u8fde\u63a5\u4e00\u6761\u5bb9\u91cf\u4e3a $1$ \u7684\u8fb9\uff1b\n\n\u5176\u4ed6\u8fb9\u7684\u8fde\u63a5\u72b6\u51b5\u548c\u6d41\u91cf\u72b6\u51b5\u90fd\u4e0d\u53d8\u3002\n\n\u6700\u540e\u8fde\u63a5 $T$ \u548c $S$ \u5bb9\u91cf\u4e3a\u65e0\u7a77\u5927\uff0c$T$ \u7684 $W$ \u503c\u4e3a\u6240\u6709\u6807\u8bb0\u4e3a $2$ \u7684\u9ed1\u70b9\u6570\u91cf\uff08\u8bbe\u4e4b\u4e3a $sum2$\uff09\uff0c\u90a3\u4e48\u8fde\u63a5 $S'$ \u548c $T$ \u70b9\uff0c\u5bb9\u91cf\u4e3a $sum2$\u3002\n\n\u5bf9\u4e8e $S$ \u70b9\u7684 $W$ \u503c\u5c31\u662f\u6240\u6709\u6807\u8bb0\u4e3a $2$ \u7684\u767d\u70b9\u6570\u91cf\u7684\u76f8\u53cd\u6570\uff08\u8bbe\u4e4b\u4e3a $sum1$\uff0c\u4e14 $sum2-sum1=$\u77e9\u9635\u4e2d $2$ \u7684\u4e2a\u6570\uff09\uff0c\u5bb9\u91cf\u4e3a $-sum1$\u3002\n\n\u5bf9 $S'$ \u5230 $T'$ \u8dd1\u6700\u5927\u6d41\uff0c\u7136\u540e\u5bf9\u4e8e $S'$ \u6d41\u51fa\u7684\u3001$T'$ \u6d41\u5165\u7684\uff0c\u770b\u770b\u6709\u6ca1\u6709\u6d41\u6ee1\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O((HW)^{1.5})$\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\n\n---\n\n```cpp\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include<bits/stdc++.h>\n#include<atcoder/maxflow>\nusing namespace std;typedef int I;const I inf=1073741824;typedef long long LL;I FL,CH;template<typename T>bool in(T&a){for(FL=1;!isdigit(CH)&&CH!=EOF;CH=getchar())if(CH=='-')FL=-1;for(a=0;isdigit(CH);CH=getchar())a=a*10+CH-'0';return a*=FL,CH==EOF?0:1;}template<typename T,typename...Args>I in(T&a,Args&...args){return in(a)+in(args...);}\nconst I N=1e5+10,M=1e7+10;\nI n,m,id;\nI s,t;\nconst I dx[4]={0,1,0,-1},dy[4]={1,0,-1,0};\nI r,c,cntb,cntw,s0,t0;\nI g(I x,I y){\n\treturn (x-1)*c+y;}\nI a[301][301];\n#define cconn G.add_edge\nint main(){\n\tin(r,c);\n\tfor(I i=1;i<=r;++i){\n\t\tfor(I j=1;j<=c;++j){\n\t\t\twhile(!isgraph(CH))CH=getchar();\n\t\t\ta[i][j]=CH;CH=getchar();}}\n\ts0=r*c+1;t0=r*c+2;s=r*c+3;t=n=r*c+4;\n\tatcoder::mf_graph<I>G(n+1);\n\tfor(I i=1;i<=r;++i)\n\t\tfor(I j=1;j<=c;++j){\n\t\t\tif((i+j)&1)continue;\n\t\t\tif(a[i][j]=='1')continue; \n\t\t\tfor(I k=0,x,y;k<=3;++k){\n\t\t\t\tx=i+dx[k];\n\t\t\t\ty=j+dy[k];\n\t\t\t\tif(x<1||x>r||y<1||y>c)continue;\n\t\t\t\tif(a[x][y]=='1')continue;\n\t\t\t\tcconn(g(i,j),g(x,y),1);\n\t\t\t}\n\t\t}\n\tfor(I i=1;i<=r;++i)for(I j=1;j<=c;++j){\n\t\tif(a[i][j]=='2'){\n\t\t\tif((i+j)&1)cconn(g(i,j),t,1),++cntb;\n\t\t\telse cconn(s,g(i,j),1),++cntw;\n\t\t}else if(a[i][j]=='?'){\n\t\t\tif((i+j)&1)cconn(g(i,j),t0,1);\n\t\t\telse cconn(s0,g(i,j),1);\n\t\t}}\n\tcconn(s,t0,cntb);\n\t//\u8c03\u4e00\u4e0b bug \n\tcconn(s0,t,cntw);\n\tcconn(t0,s0,inf);\n\tI res=G.flow(s,t);\n\tif(res!=cntb+cntw)return puts(\"No\"),0;\n\tputs(\"Yes\"); \n\treturn 0;\n}\n```\n\n\u505a\u8fd9\u9053\u9898\u7684\u65f6\u5019\u8fd8\u662f\u5f88\u8270\u8f9b\u7684\uff0c\u5148\u662f\u6539\u4e86\u4e24\u4e2a bug \uff0c\u7136\u540e\u53d1\u73b0 TLE \u4e86\uff0c\u4e8e\u662f\u6539\u6210\u4e86\u9898\u89e3\u7684\u6784\u9020\uff0c\u53d1\u73b0 WA \u4e86\uff0c\u4e8e\u662f\u6539\u56de\u4e86\u539f\u6765\u7684\u6784\u9020\uff0c\u82e6\u601d\u51a5\u60f3\uff0c\u4f30\u8ba1\u662f\u6211\u81ea\u5df1 dinic \u5e38\u6570\u7684\u95ee\u9898\uff0c\u4e8e\u662f\u6539\u6210\u4e86 ATcoder Library \u7684\u7f51\u7edc\u6d41\uff0c\u6700\u7ec8 AC \u4e86\u3002\n\n~~\u4eba\u50bb\u5e38\u6570\u5927\u5b9e\u9524\u4e86\u3002~~",
        "postTime": 1673833911,
        "uid": 121995,
        "name": "SmallTualatin",
        "ccfLevel": 0,
        "title": "ABC285 G-Tatami"
    },
    {
        "content": "# \u9898\u610f\n\n\u7ed9\u5b9a $n \\times m$ \u7684\u7f51\u683c\u3002\n\n\u5b58\u5728 $1 \\times 1$ \u548c $1\\times 2$ \u4e24\u79cd\u68cb\u724c\u3002\n\n\u683c\u5b50\u4e0a\u6709 `1 2 ?` \u4e09\u79cd\u7b26\u53f7\u3002\u8868\u610f\u5982\u4e0b\uff1a\n\n- `1` \u8868\u793a\u8be5\u683c\u5b50\u5fc5\u987b\u7528 $1\\times 1$ \u7684\u68cb\u724c\u8986\u76d6\uff1b\n- `2` \u8868\u793a\u8be5\u683c\u5b50\u5fc5\u987b\u7528 $1\\times 2$ \u7684\u68cb\u724c\u8986\u76d6\uff1b\n- `?` \u8868\u793a\u4efb\u610f\u4e00\u79cd\u68cb\u724c\u8986\u76d6\u5747\u53ef\u3002\n\n\u95ee\u662f\u5426\u5b58\u5728\u5408\u6cd5\u7684\u8986\u76d6\u65b9\u6848\u3002\n\n## \u89e3\u9898\u601d\u8def\n\n\u628a\u73a9\u6837\u4f8b\u53d1\u73b0\uff0c\u8fd9\u662f\u4e00\u4e2a\u7c7b\u4f3c\u5339\u914d\u7684\u95ee\u9898\u3002\u5927\u81f4\u5982\u4e0b\uff1a\n\n- \u5339\u914d\u4efb\u610f\u7684\u4e24\u4e2a\u53ef\u4ee5\u7528 $1\\times 2$ \u68cb\u724c\u8986\u76d6\u7684\u683c\u5b50\uff1b\n- \u5269\u4f59\u683c\u5b50\u7528 $1\\times 1$ \u8986\u76d6\u3002\n\n\u6211\u4eec\u4e0d\u59a8\u628a\u7f51\u683c\u8f6c\u6362\u4e3a\u56fe\u3002\n\n\u6211\u4eec\u5c06\u7f51\u683c\u4e0a\u6bcf\u4e00\u4e2a\u9876\u70b9\u90fd\u8f6c\u6362\u4e3a\u56fe\u4e0a\u7684\u4e00\u4e2a\u8282\u70b9\u3002\n\n\u8003\u8651\u5982\u4e0b\u65b9\u5f0f\u5efa\u56fe\uff1a\n\n- \u5bf9\u4e8e\u4efb\u610f\u7684\u4e24\u4e2a\u76f8\u90bb\u9876\u70b9\uff0c\u82e5\u4e24\u70b9\u5747\u4e0d\u4e3a `1`\uff0c\u5219\u6dfb\u52a0\u4e00\u6761\u8fb9\u3002\n\n\u4e0a\u6587\u4e2d\uff0c`\u9876\u70b9`\u7279\u6307\u7f51\u683c\u4e2d\u7684\u70b9\uff0c`\u8282\u70b9`\u7279\u6307\u56fe\u4e2d\u7684\u70b9\u3002\n\n\u518d\u6b21\u628a\u73a9\u6837\u4f8b\uff0c\u6309\u7167\u4e0a\u8ff0\u65b9\u6cd5\u5efa\u56fe\u5982\u4e0b\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ht9up0qt.png)\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u6b64\u56fe\u4ec5\u6709\u4e00\u4e2a\u5076\u73af\uff0c\u6ee1\u8db3\u4e8c\u5206\u56fe\u3002\u6545\u6837\u4f8b\u4e00\u53ef\u4ee5\u5b8c\u6210\u5339\u914d\u3002\n\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u6211\u4eec\u5728\u5efa\u56fe\u4ee5\u540e\u4ece\u6bcf\u4e2a\u4e3a `2` \u7684\u5b9a\u70b9\u641c\u589e\u5e7f\u8def\u3002\n\n\u5f53\u6700\u5927\u5339\u914d\u4e3a\u8282\u70b9\u6570\u65f6\u5219\u5b58\u5728\u5408\u6cd5\u8986\u76d6\u65b9\u6848\uff0c\u5426\u5219\u4e0d\u80fd\u3002\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n\u4f7f\u7528\u5308\u7259\u5229\u7b97\u6cd5\u8dd1\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\u3002\n\n\u8282\u70b9\u6700\u591a $nm$ \u4e2a\uff0c\u6700\u591a $nm$ \u6761\u8fb9\uff0c\u6545\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n^2m^2)$\u3002\n\n\u6570\u636e $n,m\\le 300$\uff0c\u65f6\u95f4\u6233\u4f18\u5316\u53ef\u8fc7\u3002\n\n```cpp\n#include <iostream>\n#include <vector>\n#define int long long\nusing namespace std;\n// struct Edge{\n//     int v, nxt;\n// }edge[4000010];\nvector<int> g[200010];\nint n, m;\n// int edge_cnt;\nint cnt;\nchar a[500][500];\nint match[200000], book[200000], rnk[500][500];\n// int head[4000010];\nint dx[4] = {0, 0, -1, 1}, dy[4] = {1, -1, 0, 0};\n// void add(int u, int v) {\n//     edge[++edge_cnt].v = v;\n//     edge[edge_cnt].nxt = head[u];\n//     head[u] = edge_cnt;\n// }\nbool dfs(int u) {\n    if (book[u] == cnt) return false;\n    book[u] = cnt;\n    // for (int i = head[u]; i; i = edge[i].nxt) {\n    for (auto &v : g[u]) {\n        // int v = edge[i].v;\n        if (book[v] == cnt) continue;\n        book[v] = cnt;\n        if (!match[v] || dfs(match[v])) {\n            match[u] = v;\n            match[v] = u;\n            return true;\n        }\n    }\n    return false;\n}\nsigned main() {\n    ios :: sync_with_stdio(false);\n    cin.tie(nullptr);\n    cout.tie(nullptr);\n    // freopen(\".in\", \"r\", stdin);\n    // freopen(\".out\", \"w\", stdout);\n\n    cin >> n >> m;\n    for (int i = 1; i <= n; i++) {\n        cin >> (a[i] + 1);\n    }\n    int rnk_cnt = 0;\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= m; j++) {\n            rnk[i][j] = ++rnk_cnt;\n        }\n    }\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= m; j++) {\n            if (a[i][j] == '1' || (i + j) % 2 == 0) continue;\n            for (int k = 0; k < 4; k++) {\n                int nx = dx[k] + i;\n                int ny = dy[k] + j;\n                if (a[nx][ny] == '1') continue;\n                if (nx < 1 || ny < 1 || nx > n || ny > m) continue;\n                g[rnk[i][j]].push_back(rnk[nx][ny]);\n                g[rnk[nx][ny]].push_back(rnk[i][j]);\n            }\n        }\n    }\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= m; j++) {\n            if (a[i][j] == '2') {\n                if (!match[rnk[i][j]]) {\n                    cnt++;\n                    if (!dfs(rnk[i][j])) {\n                        cout << \"No\" << endl;\n                        return 0;\n                    }\n                }\n            }\n        }\n    }\n    cout << \"Yes\" << endl;\n\n    return 0;\n}\n//\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\u4f1a\u88ab AfterContest hack\u6389\uff1f\uff1f\uff1f\uff1f\n```",
        "postTime": 1673871519,
        "uid": 638717,
        "name": "Lyu_echo",
        "ccfLevel": 5,
        "title": "AtCoder Beginner Contest 285 G-Tatami Solution"
    }
]