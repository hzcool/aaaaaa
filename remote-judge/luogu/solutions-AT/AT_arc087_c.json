[
    {
        "content": "\n**\u9898\u610f**  \n\n\u6709\u4e00\u4e2a `01` \u4e32\u96c6\u5408 $S$\uff0c\u4f7f\u5f97\u91cc\u9762\u7684\u4efb\u610f\u4e24\u4e2a `01` \u4e32\u6ca1\u6709\u524d\u7f00\u5173\u7cfb\u3002\u73b0\u5728\u4e24\u4e2a\u4eba\u8f6e\u6d41\u5f80\u91cc\u9762\u52a0 `01` \u4e32\uff0c\u4f7f\u5f97\u64cd\u4f5c\u5b8c\u4e4b\u540e $S$ \u4ecd\u7136\u6ee1\u8db3\u4e0a\u8ff0\u5173\u7cfb\uff0c\u5148\u4e0d\u80fd\u64cd\u4f5c\u8005\u8f93\u3002\n\n**\u9898\u89e3**\n\n\u9996\u5148\u6211\u4eec\u5efa\u51fa\u4e00\u4e2a 01-trie\uff0c\u5bb9\u6613\u53d1\u73b0\u9009\u62e9\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e4b\u540e\uff0c\u5b83\u7684\u5b50\u6811\u548c\u5230\u6839\u8282\u70b9\u7684\u94fe\u4e0a\u7684\u8282\u70b9\u90fd\u4e0d\u80fd\u518d\u9009\u4e86\u3002  \n\n\u4ed4\u7ec6\u89c2\u5bdf\u4e00\u4e0b\uff0c\u53d1\u73b0\u5269\u4e0b\u7684\u6811\u5b9e\u9645\u4e0a\u662f\u82e5\u5e72\u4e2a\u6ee1\u4e8c\u53c9\u6811\uff0c\u90a3\u4e48\u6211\u4eec\u8981\u6c42\u8fd9\u4e9b\u6ee1\u4e8c\u53c9\u6811\u7684 sg \u51fd\u6570\u3002  \n\u5bf9\u4e8e\u4e00\u68f5\u6df1\u5ea6\u4e3a $x$ \u7684\u6ee1\u4e8c\u53c9\u6811\uff0c\u5927\u773c\u89c2\u5bdf\u4e00\u4e0b\uff0c\u6211\u4eec\u53d1\u73b0\uff1a  \n- \u5982\u679c\u9009\u62e9\u6839\u8282\u70b9\uff0c\u90a3\u4e48\u64cd\u4f5c\u5b8c\u540e\u7684\u6811\u6ca1\u4e86\uff0c\u5373\u53d8\u6210\u5148\u624b\u5fc5\u8d25\u3002  \n- \u5982\u679c\u9009\u62e9\u6df1\u5ea6\u4e3a $1$ \u7684\u8282\u70b9\uff0c\u90a3\u4e48\u8fd8\u5269\u4e0b\u4e00\u68f5\u6df1\u5ea6\u4e3a $x-1$ \u7684\u6ee1\u4e8c\u53c9\u6811\u3002  \n- \u5982\u679c\u9009\u62e9\u6df1\u5ea6\u4e3a $2$ \u7684\u8282\u70b9\uff0c\u90a3\u4e48\u8fd8\u5269\u4e0b\u6df1\u5ea6\u5206\u522b\u4e3a $x-1$ \u548c $x-2$ \u7684\u4e24\u68f5\u6ee1\u4e8c\u53c9\u6811\u3002  \n- \u2026\u2026  \n- \u5982\u679c\u9009\u62e9\u6df1\u5ea6\u4e3a $x$ \u7684\u8282\u70b9\uff0c\u90a3\u4e48\u8fd8\u5269\u4e0b\u6df1\u5ea6\u4e3a $1,2,3 \\cdots x-1$ \u7684 $x-1$ \u68f5\u6ee1\u4e8c\u53c9\u6811\u3002  \n\n\u4e8e\u662f\u6211\u4eec\u5217\u51fa\u5f0f\u5b50\uff1a  \n$$sg(x)=\\mathop{\\operatorname{mex}} \\limits_{i=1}^x [\\mathop{\\bigoplus} \\limits_{j=i}^{x-1} sg(j)] $$\n\n\u7136\u540e\u6211\u4eec\u7a0d\u5fae\u624b\u73a9\u4e00\u4e0b\uff1a  \n$sg(0)=0$\u3002   \n$sg(1)=\\operatorname{mex}\\{0\\}=1$\u3002  \n$sg(2)=\\operatorname{mex}\\{0,1\\}=2$\u3002  \n$sg(3)=\\operatorname{mex}\\{0,2,3\\}=1$\u3002  \n$sg(4)=\\operatorname{mex}\\{0,1,3,2\\}=4$\u3002  \n$sg(5)=\\operatorname{mex}\\{0,4,5,7,6\\}=1$\u3002  \n$sg(6)=\\operatorname{mex}\\{0,1,5,4,6,7\\}=2$\u3002    \n\u6211\u4eec\u53d1\u73b0\uff0c\u6709 $sg(x)=\\operatorname{lowbit}(x)$\u3002  \n\u8bc1\u660e\u53ef\u4ee5\u7528\u5f52\u7eb3\u6cd5\u3002  \n\n**\u4ee3\u7801**  \n```cpp\n#include<bits/stdc++.h>\n#define int long long\n//#pragma GCC optimize(\"Ofast\")\n//#pragma GCC optimize(\"unroll-loops\")\n//#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native\")\n#define rd(x) x=read()\n#define wt(x) write(x)\n#define pos(x) (((x)-1)/SZ+1)\nusing namespace std;\nconst int N=1e7+5;\nconst int M=70;\nconst int SZ=450;\nconst int mod=998244353;\nconst int inf=0x3f3f3f3f3f3f3f3f;\nint read(){int x=0,f=1;char ch=getchar();while(ch>'9'||ch<'0'){if (ch=='-')f=-1;ch=getchar();}while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}return x*f;}\nvoid write(int x){if(x<0){putchar('-');x=-x;}if(x>=10)write(x/10);putchar(x%10+'0');}\nint ksm(int x,int y=mod-2,int z=mod){int ret=1;while (y){if (y&1) ret=(ret*x)%z;x=(x*x)%z;y>>=1;}return ret;}\nint inv[N],fac[N],ifc[N]; \nvoid Init(int n)\n{\n    inv[1]=1;for (int i=2;i<=n;i++) inv[i]=inv[mod%i]*(mod-mod/i)%mod;\n    fac[0]=1;for (int i=1;i<=n;i++) fac[i]=fac[i-1]*i%mod;\n    ifc[0]=1;for (int i=1;i<=n;i++) ifc[i]=ifc[i-1]*inv[i]%mod;\n}\nint C(int n,int m){if (m<0 || m>n) return 0;return fac[n]*ifc[m]%mod*ifc[n-m]%mod;}\nvoid add(int &x,int y) {x+=y;if (x>=mod) x-=mod;}\nint n,k,ans,l,idx=1;\nchar s[N];\nint son[N][2],dep[N],vis[N];\nvoid insert()\n{\n    k=strlen(s+1);int u=1;\n    for (int i=1;i<=k;i++)\n    {\n        int x=s[i]-'0';\n        if (!son[u][0]) son[u][0]=++idx,dep[idx]=dep[u]+1;\n        if (!son[u][1]) son[u][1]=++idx,dep[idx]=dep[u]+1;\n        u=son[u][x];\n        vis[u]=1;\n    }\n}\nint sg(int x){return x&-x;}\nsigned main()\n{\n    rd(n);rd(l);vis[1]=1;\n    for (int i=1;i<=n;i++) scanf(\"%s\",s+1),insert();\n    for (int i=1;i<=idx;i++) if (!vis[i]) ans^=sg(l-dep[i]+1);\n    if (ans==0) puts(\"Bob\");else puts(\"Alice\");\n\n}\n```",
        "postTime": 1626786245,
        "uid": 70132,
        "name": "AsunderSquall",
        "ccfLevel": 7,
        "title": "ARC087C"
    },
    {
        "content": "\u770b\u5230\u524d\u7f00\u5173\u7cfb  \u6211\u4eec\u5148\u5efa\u4e00\u9897\u5b57\u5178\u6811 \n\n\u53ef\u4ee5\u53d1\u73b0 \u5f53\u4e00\u4e2a\u70b9\u88ab\u9009\u8fc7\uff08\u4ee3\u8868\u6709\u4e00\u4e2a\u5b57\u7b26\u4e32\uff09 \n\n\u90a3\u4e48\u5b83\u6807\u8bb0\u4e86\u4ece\u5b83\u5230\u6839\u7684\u8def\u5f84 \u548c\u5b83\u7684\u5b50\u6811 \n\n\u90a3\u4e48\u5269\u4e0b\u7684\u53ef\u4ee5\u9009\u7684\u5b57\u7b26\u4e32 \n\n\u6784\u6210\u4e86\u9ad8\u5ea6\u4e0d\u7b49\u7684\u7684\u6ee1\u4e8c\u53c9\u6811 \n\n\u800c\u4e14\u8fd9\u4e9b\u4e8c\u53c9\u6811\u662f\u4e92\u4e0d\u5e72\u6270\u7684 \u6211\u4eec\u53ef\u4ee5\u642c\u51faSG\u51fd\u6570 \n\n\u90a3\u4e48\u95ee\u9898\u5c31\u662f\u6c42\u6811\u9ad8\u4e3a$L$ \u7684\u4e8c\u53c9\u6811\u7684SG\u51fd\u6570 \n\n$ SG(L) = mex { 0 , SG(L-1) , SG(L-1)xorSG(L-2) ....  }  $ \n\n\u5b9e\u9645\u4e0a\u5c31\u662f\u9009\u4e00\u4e2a\u6df1\u5ea6\u4e3ax\u70b9 \u540e \u4f1a\u628a\u539f\u6811\u5206\u6210$L-1$\u5230$x$\u7684\u6ee1\u4e8c\u53c9\u6811\u5404\u4e00\u68f5 \n\n\u6253\u8868  ~~\u6284\u9898\u89e3~~ \u53ef\u53d1\u73b0\u8fd9\u4e2a$SG(L)=lowbit(L)$ \n\n\u4e4b\u540e\u5c31\u6ca1\u4e8b\u4e86 \n\n```cpp\n#include<bits/stdc++.h>  \n#define rg register \n#define int long long \n#define i60 long long \n#define fp( i , x , y ) for( rg int i=(x); i<=(y); ++i ) \n#define fq( i , x , y ) for( rg int i=(y); i>=(x); --i )\nusing namespace std ; \nconst int N = 3e5+10 ; \nstring s ; i60 ans , L ;  \nint tot , ch[N][2] , tg[N] ;  \nvoid ins( ) { \n  int n = s.length() , nw = 1 ; \n  fp( i , 1 , n ) { \n    if( !ch[nw][s[i-1]-'0'] ) ch[nw][s[i-1]-'0'] = ++tot ; \n\tnw = ch[nw][s[i-1]-'0'] ;  \n  } \n  tg[nw] = 1 ; \n} \ni60 sg( i60 x ) { return x&(-x) ; } \nvoid dfs( int x , int len ) { \n  if( tg[x] ) return ; \n  if( ch[x][0] ) dfs( ch[x][0] , len+1 ) ; else ans ^= sg( L-len ) ;  \n  if( ch[x][1] ) dfs( ch[x][1] , len+1 ) ; else ans ^= sg( L-len ) ;   \n} \nsigned main( ) { \n  ios::sync_with_stdio(false) ; \n  cin.tie(0) ; \n  int n ; tot = 1 ; \n  cin >> n >> L ; \n  fp( i , 1 , n ) cin >> s , ins( ) ; \n  dfs( 1 , 0 ) ; \n  cout << ( ans ? \"Alice\" : \"Bob\" ) << '\\n' ;   \n  return 0 ; \n} \n  \n```\n\n",
        "postTime": 1608342984,
        "uid": 100114,
        "name": "hater",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT3727 \u3010[ARC087C] Prefix-free Game\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u6ce8\u610f\u5230\u8fd9\u9053\u9898\u4e2d\u586b\u5165\u65b0 01 \u5b57\u7b26\u4e32\u7684\u9650\u5236\u8ddf\u524d\u540e\u7f00\u6709\u5173\uff0c\u8003\u8651\u6293\u51fa\u4e00\u68f5\u9ad8\u5ea6\u4e3a $l + 1$ \u7684\u5b8c\u5168 01-Trie\uff08\u56e0\u4e3a\u8fd8\u6709\u6839\u8fd9\u4e2a\u8868\u793a\u7a7a\u5b57\u7b26\u4e32\u7684\u4e1c\u897f\uff09\u3002\n\n\u73b0\u5728\u6211\u4eec\u6709 01-Trie \u4e0a\u7684 $n$ \u4e2a**\u88ab\u6807\u8bb0\u7684**\u8282\u70b9\uff0c\u5206\u522b\u5bf9\u5e94\u8f93\u5165\u7684 $n$ \u4e2a\u5b57\u7b26\u4e32\u3002\n\n\u6bcf\u6b21\u6211\u4eec\u65b0\u6dfb\u52a0\u7684\u5b57\u7b26\u4e32\u8981\u6ee1\u8db3\u4ec0\u4e48\u5462\uff1f\n\n- \u4e0d\u5728\u4efb\u610f\u4e00\u4e2a\u88ab\u6807\u8bb0\u8282\u70b9\u5230\u6839\u7684\u94fe\u4e0a\u3002\n- \u4e0d\u5728\u4efb\u610f\u4e00\u4e2a\u88ab\u6807\u8bb0\u8282\u70b9\u7684\u5b50\u6811\u5185\u3002\n\n\u6bcf\u6b21\u6211\u4eec\u9009\u51fa\u8fd9\u6837\u4e00\u4e2a\u5b57\u7b26\u4e32\u540e\u5c31\u5728 01-Trie \u4e0a**\u6807\u8bb0**\u5bf9\u5e94\u8282\u70b9\u3002\n\n\u4e0d\u59a8\u8003\u8651\u4e00\u4e0b\u5bf9\u4e8e\u6bcf\u4e2a\u72b6\u6001\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 01-Trie \u4e0a\u7684\u54ea\u4e9b\u4f4d\u7f6e\u586b\u5b57\u7b26\u4e32\uff1f\n\n- \u6240\u6709\u5230\u94fe\u7684\u8def\u5f84\u4e0a\u6ca1\u6709\u6807\u8bb0\u4e14\u5b50\u6811\u5185\u6ca1\u6709\u6807\u8bb0\u7684\u70b9\u3002\n\n\u7136\u540e\u4f60\u6ce8\u610f\u5230\u8fd9\u73a9\u610f\u5176\u5b9e\u5c31\u662f 01-Trie \u4e0a\u7684\u82e5\u5e72\u5b8c\u5168\u4e8c\u53c9\u5b50\u6811\uff01\n\n\u8bbe $SG(x)$ \u8868\u793a\u6df1\u5ea6\u4e3a $x$ \u7684\u5b8c\u5168 01-Trie \u7684 SG \u503c\uff0c\u6211\u4eec\u53ea\u9700\u8981 dfs \u4e00\u904d\u6c42\u51fa\u6240\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u5b50\u6811\u7684 SG \u503c\u7684\u5f02\u6216\u5373\u53ef\u5224\u65ad\u8c01\u5fc5\u80dc\u3002\n\n\u8003\u8651\u679a\u4e3e\u5f53\u524d\u9009\u7684\u5b50\u6811\u6df1\u5ea6\uff0c\u6709\uff1a$SG(x) = \\operatorname{mex}_{i = 1}^x \\operatorname{xor}_{j = i}^{x - 1} SG(j)$\u3002\n\n\u6253\u8868\u53ef\u77e5 $SG(x) = \\text{lowbit}(x)$\u3002\u8bc1\u660e\u7684\u8bdd\u53ef\u4ee5\u76f4\u63a5\u5f52\u7eb3\u3002\n\n\u7136\u540e\u5c31\u505a\u5b8c\u4e86\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\sum |s_i|)$\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <stdio.h>\n#include <string.h>\n\ntypedef long long ll;\n\ntypedef struct {\n\tint nxt[7];\n} Node;\n\nint cnt = 1;\nchar s[100007];\nNode tree[100007];\n\ninline void insert(char s[]){\n\tint len = strlen(&s[1]);\n\tfor (int i = 1, j = 1; i <= len; i++){\n\t\tint ch = s[i] - '0';\n\t\tif (tree[j].nxt[ch] == 0) tree[j].nxt[ch] = ++cnt;\n\t\tj = tree[j].nxt[ch];\n\t}\n}\n\ninline ll lowbit(ll x){\n\treturn x & (-x);\n}\n\nll dfs(int u, ll depth){\n\tif (depth == 0) return 0;\n\tif (u == 0) return lowbit(depth);\n\treturn dfs(tree[u].nxt[0], depth - 1) ^ dfs(tree[u].nxt[1], depth - 1);\n}\n\nint main(){\n\tint n;\n\tll l;\n\tscanf(\"%d %lld\", &n, &l);\n\tfor (int i = 1; i <= n; i++){\n\t\tscanf(\"%s\", &s[1]);\n\t\tinsert(s);\n\t}\n\tif (dfs(1, l + 1) != 0){\n\t\tprintf(\"Alice\");\n\t} else {\n\t\tprintf(\"Bob\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1669649618,
        "uid": 201007,
        "name": "Leasier",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 ARC087E \u3010Prefix-free Game\u3011"
    }
]