[
    {
        "content": "\u663e\u7136\u8fd9\u9898\u7684\u7b54\u6848\u6ee1\u8db3\u53ef\u4e8c\u5206\u6027\u3002\n\n\u95ee\u9898\u53d8\u6210\u5224\u65ad\u662f\u5426\u5b58\u5728\u4e00\u79cd\u65b9\u6848\uff0c\u80fd\u4f7f\u6240\u6709\u7684\u53f6\u5b50\u8282\u70b9\u95f4\u7684\u8def\u5f84\u8d39\u7528\u5c0f\u4e8e\u7b49\u4e8e\u4e00\u4e2a\u5b9a\u503c $Value$ \u4e14\u6ee1\u8db3\u9898\u76ee\u4e2d\u7684\u9650\u5236\u3002\n\n\u53d1\u73b0\u4e00\u6761\u8fb9\u4e0d\u80fd\u7ecf\u8fc7\u4e24\u6b21\uff0c\u663e\u7136\u5f53\u6211\u4eec\u8fdb\u5165\u4e00\u68f5\u5b50\u6811\u65f6\uff0c\u5fc5\u987b\u8981\u628a\u5b50\u6811\u4e2d\u6240\u6709\u7684\u53f6\u5b50\u8282\u70b9\u5168\u90e8\u904d\u5386\u540e\u624d\u80fd\u79bb\u5f00\u8fd9\u68f5\u5b50\u6811\u3002\n\n\u8003\u8651\u5224\u5b9a\u6027\u76f8\u5173\u7684 dp \uff0c\u8bbe $f_u(a,b)$ \u8868\u793a\u5f53\u524d\u8282\u70b9 $u$ \u7684\u5b50\u6811\u4e2d\u662f\u5426\u5b58\u5728\u4e00\u79cd\u65b9\u6848\uff1a\n\n- \u4ece $u$ \u51fa\u53d1\u5230\u7b2c\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u8def\u5f84\u957f\u5ea6\u4e3a $a$ \uff0c\u4ece $u$ \u51fa\u53d1\u5230\u6700\u540e\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u8def\u5f84\u957f\u5ea6\u4e3a $b$\u3002\n\n- \u6240\u6709\u7684\u8def\u5f84\u957f\u5ea6\u90fd\u4e0d\u5927\u4e8e $Value$\u3002\n\n- \u5728\u6ee1\u8db3\u6240\u6709\u4ee5\u4e0a\u9650\u5236\u7684\u60c5\u51b5\u4e0b\uff0c\u904d\u5386\u5b8c $u$ \u7684\u6574\u68f5\u5b50\u6811\u3002\n\n\u5bf9\u4e8e\u8fd9\u4e2a dp\uff0c\u53ef\u4ee5\u8003\u8651\u4ece $u$ \u7684\u5de6\u513f\u5b50\u548c\u53f3\u513f\u5b50\u5904\u8fdb\u884c\u8f6c\u79fb\u3002\n\n\u8bbe $u$ \u7684\u5de6\u513f\u5b50\u4e3a $lson_u$\uff0c$u$ \u5230\u5de6\u513f\u5b50\u7684\u8ddd\u79bb\u4e3a $val_l$\uff0c\u53f3\u513f\u5b50\u4e3a $rson_u$ \uff0c$u$ \u5230\u53f3\u513f\u5b50\u7684\u8ddd\u79bb\u4e3a $val_r$\u3002\n\n\u6709\u8f6c\u79fb\u5f0f $f_u(a,b)=f_{lson_u}(a,i)  \\ \\& \\ f_{rson_u}(j,b) \\ (i+j+val_l+val_r \\le Value)$\n\n\uff08\u5bf9\u8f6c\u79fb\u5f0f\u7684\u89e3\u91ca\uff1a\u4ece $u$ \u51fa\u53d1\u5230 $lson_u$ \u7684\u7b2c\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\uff0c\u4ece\u8be5\u53f6\u5b50\u8282\u70b9\u5230 $lson_u$ \u7684\u6700\u540e\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\uff0c\u4ece\u8be5\u53f6\u5b50\u8282\u70b9\u51fa\u53d1\u5230 $rson_u$ \u7684\u7b2c\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\uff09\n\n\u590d\u6742\u5ea6\u7206\u70b8\uff0c\u8003\u8651\u600e\u4e48\u4f18\u5316\u8fd9\u4e2a dp\u3002\n\n\u53d1\u73b0\u5f53 $f_u(a_1,b_1)$ \u548c $f_u(a_2,b_2)$ \u6ee1\u8db3 $a_1\\le a_2,b_1\\le b_2$ \u7684\u65f6\u5019\uff0c$f_u(a_2,b_2)$ \u662f\u663e\u7136\u4e0d\u5fc5\u8981\u5b58\u5728\u7684\u3002\n\n\u8003\u8651\u628a $f_u$ \u7684\u72b6\u6001\u6309 $a$ \u6392\u5e8f\uff0c\u6839\u636e\u4e0a\u9762\u7684\u6027\u8d28\uff0c\u6392\u5e8f\u540e\u7684 $f_u$ \u72b6\u6001\u5728 $b$ \u9012\u51cf\u65f6\u662f\u6700\u5c11\u7684\u3002\n\n\u663e\u7136\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $f_{lson_u}(a_1,b_1)$ \u90fd\u53ea\u9700\u8981\u8003\u8651\u4e00\u4e2a\u4ee4 $b_2$ \u6700\u5c0f\u4e14\u6ee1\u8db3\u8f6c\u79fb\u5f0f\u7684 $f_{rson_u}(a_2,b_2)$\u3002\u6240\u4ee5\uff0c\u6bcf\u4e00\u4e2a $f_{lson_u}$ \u5bf9\u5e94\u7684\u72b6\u6001\u53ea\u9700\u8981\u4e0e\u4e00\u4e2a\u5bf9\u5e94\u7684 $f_{rson_u}$ \u7684\u72b6\u6001\u8f6c\u79fb\u5230 $f_u$ \u4e0a\uff0c\u6bcf\u6b21\u8f6c\u79fb\u589e\u52a0\u7684\u72b6\u6001\u6570\u662f $2\\times \\min(x,y)$ \uff08$x$ \u662f $f_{lson_u}$ \u7684\u72b6\u6001\u6570\uff0c$y$ \u662f $f_{rson_u}$ \u7684\u72b6\u6001\u6570\uff0c\u6ce8\u610f $lson_u$ \u548c $rson_u$ \u662f\u53ef\u4ee5\u53cd\u8fc7\u6765\u518d\u8f6c\u79fb\u4e00\u6b21\u7684\uff09\uff0c\u663e\u7136\u72b6\u6001\u603b\u6570\u662f $n \\log n$ \u7684\u3002\n\n\u81f3\u4e8e\u5982\u4f55\u627e\u5230\u8fd9\u4e2a\u6700\u5c0f\u7684 $b_2$\uff0c\u76f4\u63a5 `two-points` \u5373\u53ef\u3002\uff08\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u53ef\u4ee5 `two-points` \u662f\u56e0\u4e3a $a$ \u9012\u589e\u800c $b$ \u9012\u51cf\uff09\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n \\log n \\log v)$\uff0c\u5176\u4e2d $v$ \u662f\u4e8c\u5206\u7b54\u6848\u4e2d $r$ \u7684\u6743\u503c\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define pb push_back\n#define pii pair<ll,ll>\n#define fi first\n#define se second\ntypedef long long ll;\nconst int N=2e5+5;\nint ch[N][2],val[N][2];\nvector<pii> v[N];\nvoid dfs(int x,ll Value){\n\tv[x].clear();\n\tif(!ch[x][0]) return (void)(v[x].pb({0,0}));\n\tfor(int i=0;i<2;++i)\n\t\tif(ch[x][i]) dfs(ch[x][i],Value);\n\tvector<pii> vec;\n\tfor(int dy=0;dy<2;++dy){\n\t\tint ls=ch[x][0^dy],rs=ch[x][1^dy];\n\t\tll tmp=Value-val[x][0]-val[x][1];\n\t\tfor(int i=0,j=0;i<v[ls].size();++i){\n\t\t\twhile(j+1<v[rs].size() && v[rs][j+1].fi<=tmp-v[ls][i].se) ++j;\n\t\t\tif(j>=v[rs].size() || v[rs][j].fi>tmp-v[ls][i].se) continue;\n\t\t\tvec.pb({v[ls][i].fi+val[x][0^dy],v[rs][j].se+val[x][1^dy]});\n\t\t}\n\t}\n\tsort(vec.begin(),vec.end());\n\tfor(int i=0;i<vec.size();++i){\n\t\tif(!v[x].empty() && v[x].back().se<=vec[i].se) continue;\n\t\tv[x].pb(vec[i]);\n\t}\n}\nbool check(ll mid){\n\tdfs(1,mid);\n\treturn v[1].size()>=1;\n}\nsigned main(){\n\tfreopen(\"eight.in\",\"r\",stdin);\n\tfreopen(\"eight.out\",\"w\",stdout);\n\tint n,fa,Val;\n\tcin>>n;\n\tll l=0,r=0,ans=0,mid;\n\tfor(int i=2;i<=n;++i){\n\t\tcin>>fa>>Val;\n\t\tr+=Val;\n\t\tif(ch[fa][0]) ch[fa][1]=i,val[fa][1]=Val;\n\t\telse ch[fa][0]=i,val[fa][0]=Val;\n\t}\n\twhile(l<=r){\n\t\tmid=(l+r)/2;\n\t\tif(check(mid)) r=mid-1,ans=mid;\n\t\telse l=mid+1;\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```\n",
        "postTime": 1606305569,
        "uid": 344016,
        "name": "wurzang",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 AT2172 \u3010[AGC007E] Shik and Travel\u3011"
    },
    {
        "content": "## AGC 007 E\n\n\u8fd9\u9898\u4e5f\u7b97\u662f\u6bd4\u8f83\u7b80\u5355\u7684\u9898\u76ee\u5427\u3002\n\n\u9996\u5148\u6309\u7167\u9898\u76ee\u7684\u8fd9\u4e2a\u8d70\u6cd5\uff0c\u6211\u4eec\u6bcf\u6b21\u5230\u8fbe\u4e00\u4e2a\u70b9\u4e4b\u540e\uff0c\u53ea\u80fd\u5148\u628a\u5176\u4e00\u4e2a\u5b50\u6811\u904d\u5386\u5b8c\u4e4b\u540e\u624d\u80fd\u904d\u5386\u53e6\u4e00\u4e2a\u5b50\u6811\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u975e\u5e38\u663e\u7136\u800c\u66b4\u529b\u7684 $dp$\uff1a\n\n\u8bbe $f_{x,l,r,v}$ \u8868\u793a $x$ \u53f7\u70b9\uff0c\u5176\u5b50\u6811\u5185\u7b2c\u4e00\u4e2a\u88ab\u904d\u5386\u7684\u53f6\u5b50\u8282\u70b9\u5230 $x$ \u7684\u8ddd\u79bb\u4e3a $l$\uff0c\u6700\u540e\u4e00\u4e2a\u88ab\u904d\u5386\u7684\u53f6\u5b50\u8282\u70b9\u5230 $x$ \u7684\u8ddd\u79bb\u4e3a $r$\uff0c\u6b64\u65f6\u7684\u6700\u5c0f\u503c\u4e3a $v$ \u662f\u5426\u53ef\u884c\u3002\n\n\u8f6c\u79fb\u975e\u5e38\u663e\u7136\uff0c\u5c31\u53ea\u9700\u8981\u6bcf\u6b21\u679a\u4e3e $x$ \u7684\u5de6\u513f\u5b50\u7684\u6240\u6709\u72b6\u6001\uff0c\u53f3\u513f\u5b50\u7684\u6240\u6709\u72b6\u6001\uff0c\u7136\u540e\u679a\u4e3e\u5148\u904d\u5386\u5de6\u513f\u5b50\u8fd8\u662f\u53f3\u513f\u5b50\uff0c\u7136\u540e\u628a\u4e2d\u95f4\u4e24\u4e2a\u8ddd\u79bb\u52a0\u8d77\u6765\u5408\u5e76\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\n\n\u7136\u540e\u8fd9\u79cd\u505a\u6cd5\u7406\u8bba\u4e0a\u80af\u5b9a\u65e0\u6cd5\u901a\u8fc7\u6b64\u9898\uff0c\u8003\u8651\u4f18\u5316\uff1a\n\n\u9996\u5148\u6700\u540e\u4e00\u7ef4\u6211\u4eec\u53ef\u4ee5\u5728\u5916\u5c42\u5957\u4e00\u4e2a\u4e8c\u5206\u7b54\u6848\uff0c\u7136\u540e\u7701\u53bb\u8fd9\u4e00\u7ef4\uff0c\u53ea\u9700\u8981\u68c0\u67e5\u6839\u8282\u70b9\u662f\u5426\u6709\u53ef\u884c\u72b6\u6001\u5c31\u884c\u4e86\u3002\n\n\u7136\u540e\u73b0\u5728\u7684\u95ee\u9898\u5c31\u5728\u4e8e\u5982\u4f55\u7f29\u51cf\u72b6\u6001\u6570\u4ee5\u53ca\u5feb\u901f\u8f6c\u79fb\u3002\n\n\u9996\u5148\u5bf9\u4e8e\u4e24\u4e2a\u72b6\u6001\uff1a $f_{x,l_1,r_1}$ \u548c $f_{x,l_2,r_2}$ \uff0c\u5982\u679c\u6709\uff1a $l_1 \\leq l_2$ \u5e76\u4e14 $r_1 \\leq r_2$ \uff0c\u90a3\u4e48 $f_{x,l_2,r_2}$ \u8fd9\u4e2a\u72b6\u6001\u662f\u5b8c\u5168\u4e0d\u5fc5\u8981\u7684\u4e86\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u6709\u4e86\u5355\u8c03\u6027\u3002\u8003\u8651\u5728\u8f6c\u79fb\u7684\u65f6\u5019\u5229\u7528\u8fd9\u79cd\u5355\u8c03\u6027\uff1a\n\n\u6211\u4eec\u8003\u8651\u4e24\u4e2a\u5b50\u6811\u90fd\u6309\u7167 $l$ \u5347\u5e8f\u6392\u597d\u5e8f\u4e4b\u540e\uff0c$r$ \u4e00\u5b9a\u662f\u964d\u5e8f\u6392\u7684\u3002\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u72b6\u6001 $f_{x,l_1,r_1}$\uff0c\u5176\u5728\u53e6\u4e00\u68f5\u5b50\u6811\u4e2d\u7684\u53ef\u5408\u5e76\u8f6c\u79fb\u7684\u72b6\u6001\u4e00\u5b9a\u662f\u4e00\u4e2a\u524d\u7f00\u3002\u90a3\u4e48\u6211\u4eec\u6bcf\u6b21\u53ea\u9700\u8981\u53d6\u8fd9\u4e2a\u524d\u7f00\u4e2d $l$ \u6700\u5927\u7684\u90a3\u4e2a $r$ \u5c31\u884c\u4e86\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u7531\u4e8e\u4e8b\u5148\u5df2\u7ecf\u6392\u597d\u5e8f\u4e86\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528 ${\\rm two-points}$ \u505a\u5230 $O(\\text{\u72b6\u6001\u6570})$\u3002\u4f46\u662f\u72b6\u6001\u6570\u662f\u591a\u5c11\u5462\uff1f\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u5982\u679c\u4e00\u4e2a\u70b9 $x$ \u6240\u8fde\u63a5\u7684\u4e24\u4e2a\u513f\u5b50\u7684\u5b50\u6811\u5185\u7684\u72b6\u6001\u6570\u5206\u522b\u4e3a $L$ \u548c $R$\uff0c\u90a3\u4e48 $x$ \u7684\u72b6\u6001\u6570\u6700\u574f\u662f $2 \\times \\min(L,R)$ \u7684\u3002\u90a3\u4e48\u6570\u91cf\u7ea7\u7684\u8bc1\u660e\u5c31\u53ef\u4ee5\u7c7b\u4f3c\u542f\u53d1\u5f0f\u5408\u5e76\u7684\u590d\u6742\u5ea6\u5206\u6790\u65b9\u6cd5\uff0c\u5f97\u5230\u72b6\u6001\u6570\u662f $O(n \\log n)$ \u7684\u3002\u90a3\u4e48\u52a0\u4e0a\u5916\u5c42\u7684\u4e8c\u5206\u7b54\u6848\u5c31\u662f $O(n \\log^2 n)$ \u7684\u4e86\u3002\n\n${\\rm Code}$\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int __SIZE = 1 << 18;\nchar ibuf[__SIZE], *iS, *iT;\n\n#define ge (iS == iT ? (iT = (iS = ibuf) + fread(ibuf, 1, __SIZE, stdin), (iS == iT ? EOF : *iS++)) : *iS++)\n#define ri read_int()\n#define rl read_ll()\n#define FILE(s) freopen(s\"in\", \"r\", stdin), freopen(s\"out\", \"w\", stdout)\n\ntemplate<typename T>\ninline void read(T &x) {\n\t\tchar ch, t = 0; x = 0;\n\t\twhile(!isdigit(ch = ge)) t |= ch == '-';\n\t\twhile(isdigit(ch)) x = x * 10 + (ch ^ 48), ch = ge;\n\t\tx = t ? -x : x;\n}\ninline int read_int() { int x; return read(x), x; }\ninline ll read_ll() { ll x; return read(x), x; }\n\ntemplate<typename T>\ninline void chkmin(T&a, T b) { a = a < b ? a : b; }\n\nconst int MAXN = 132000;\n\nint tot;\nint fi[MAXN];\nint ne[MAXN << 1];\nint to[MAXN << 1];\nint vl[MAXN << 1];\n\ninline void Link(int u, int v, int w) {\n\ttot++;\n\tto[tot] = v;\n\tvl[tot] = w;\n\tne[tot] = fi[u];\n\tfi[u] = tot;\n}\n\nstruct Node {\n\tll a, b;\n\n\tNode() {}\n\tNode(ll a, ll b):a(a), b(b) {}\n\n\tfriend bool operator < (Node a, Node b) {\n\t\treturn a.a < b.a;\n\t}\n}A[MAXN * 20], tmp[MAXN * 20];\n\nint L[MAXN];\nint R[MAXN];\nint n;\nint cnt;\n\ninline void gb_Merge(int l1, int r1, int l2, int r2) {\n\tint l = l1, r = r2, k = l1;\n\twhile(l1 <= r1 && l2 <= r2) {\n\t\tif(A[l1] < A[l2]) tmp[k++] = A[l1++];\n\t\telse tmp[k++] = A[l2++];\n\t}\n\twhile(l1 <= r1) tmp[k++] = A[l1++];\n\twhile(l2 <= r2) tmp[k++] = A[l2++];\n\twhile(k > l) --k, A[k] = tmp[k];\n}\n\ninline void Merge(int x, int l, int r, ll lim) {\n\tint pl1 = cnt + 1, pr1 = cnt;\n\tll mi = 1LL << 61;\n\tfor(int i = L[l], j = L[r] - 1; i <= R[l]; ++i) {\n\t\twhile(j < R[r] && A[i].b + A[j + 1].a <= lim) ++j, mi = mi < A[j].b ? mi : A[j].b;\n\t\tif(j < L[r]) continue;\n\t\tA[++pr1] = Node(A[i].a, mi);\n\t} cnt = pr1;\n\tint pl2 = cnt + 1, pr2 = cnt;\n\tmi = 1LL << 61, swap(l, r);\n\tfor(int i = L[l], j = L[r] - 1; i <= R[l]; ++i) {\n\t\twhile(j < R[r] && A[i].b + A[j + 1].a <= lim) ++j, mi = mi < A[j].b ? mi : A[j].b;\n\t\tif(j < L[r]) continue;\n\t\tA[++pr2] = Node(A[i].a, A[j].b);\n\t} cnt = pr2, L[x] = pl1, R[x] = pr2;\n\tif(L[x] > R[x]) return ;\n\tgb_Merge(pl1, pr1, pl2, pr2);\n\tint Sum = 0;\n\tfor(int i = L[x] + 1; i <= R[x]; ++i) {\n\t\tif(A[i].b >= A[L[x] + Sum].b) continue;\n\t\telse ++Sum, A[L[x] + Sum] = A[i];\n\t} cnt = R[x] = L[x] + Sum;\n}\n\ninline void dfs(int x, ll lim) {\n\tif(!fi[x]) {\n\t\tL[x] = R[x] = ++cnt;\n\t\tA[cnt] = Node(0, 0);\n\t}\n\telse {\n\t\tL[x] = cnt + 1, R[x] = cnt;\n\t\tint val, Ls = to[fi[x]], Rs = to[ne[fi[x]]];\n\t\t\n\t\tdfs(Ls, lim), val = vl[fi[x]];\n\t\tif(L[Ls] > R[Ls]) return;\n\t\tfor(int i = L[Ls]; i <= R[Ls]; i++) A[i].a += val, A[i].b += val; \n\n\t\tdfs(Rs, lim), val = vl[ne[fi[x]]];\n\t\tif(L[Rs] > R[Rs]) return ;\n\t\tfor(int i = L[Rs]; i <= R[Rs]; i++) A[i].a += val, A[i].b += val; \n\t\t\n\t\tMerge(x, Ls, Rs, lim);\n\t}\n}\n\ninline bool chk(ll lim) {\n\tcnt = 0, dfs(1, lim);\n\treturn L[1] <= R[1];\n}\n\nint main() {\n#ifndef ONLINE_JUDGE\n\tFILE(\"\");\n#endif\n\tn = ri;\n\tll mx = 0;\n\tfor(int i = 2; i <= n; i++) {\n\t\tint f = ri, v = ri;\n\t\tLink(f, i, v);\n\t\tmx += v;\n\t} ll l = 0, r = mx, res;\n\twhile(l <= r) {\n\t\tll mid = (l + r) >> 1;\n\t\tif(chk(mid)) r = mid - 1, res = mid;\n\t\telse l = mid + 1;\n\t} printf(\"%lld\\n\", res);\n\treturn 0;\n}\n```",
        "postTime": 1575551049,
        "uid": 20782,
        "name": "CYJian",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 AT2172 \u3010Shik and Travel\u3011"
    },
    {
        "content": "\u53ef\u80fd\u5199\u5f97\u6709\u70b9\u7e41\u7410X\n\n\u611f\u89c9\u4e3b\u8981\u9700\u8981\u6ce8\u610f\u7684\u7ec6\u8282\u662f\u5c1d\u8bd5\u7ebf\u6027\u5408\u5e76\u4ece\u5b50\u6811\u5f97\u5230\u7684\u72b6\u6001\u5e8f\u5217\u65f6\u7684\u8ba8\u8bba\n\n## \u89e3\u6790\n\n### Part 0\n\n\u7b80\u5355\u5730\u53ef\u4ee5\u60f3\u5230\u4e09\u4e2a\u72b6\u6001\u7684 dp\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u53d1\u73b0\u6bcf\u4e2a\u5b50\u6811\u4f1a\u4e14\u4ec5\u4f1a\u8fdb\u51fa\u5404\u4e00\u6b21\uff0c\u4e8e\u662f\u679a\u4e3e\u6bcf\u4e2a\u5b50\u6811\u8fdb\u51fa\u7684\u7ed3\u70b9\uff0c\u6734\u7d20\u8f6c\u79fb\u5373\u53ef\n\n\u8fd8\u80fd\u53d1\u73b0\u7b54\u6848\u53ef\u4e8c\u5206\u3002\u4e8c\u5206\u7b54\u6848\u540e\uff0c\u56fa\u5b9a\u5b50\u6811\u5185\u8fdb\u5165\u7684\u7ed3\u70b9\uff0c\u4e0d\u96be\u53d1\u73b0\u51fa\u53bb\u7684\u7ed3\u70b9\u7684\u6df1\u5ea6\u4e00\u5b9a\u662f\u8d8a\u6d45\u8d8a\u5229\u4e8e\u8f6c\u79fb\uff1b\u8fd9\u6837\u5c31\u4f18\u5316\u6389\u4e86\u4e00\u7ef4\n\n\u8fd9\u6837\u6734\u7d20\u5730\u5b9e\u73b0\u662f $O(n^3\\log n)$ \u7684\u3002\u6ce8\u610f\u5230\u6bcf\u6b21\u8f6c\u79fb\u65f6\u6211\u4eec\u5b9e\u9645\u4e0a\u5c31\u662f\u60f3\u627e\u5230\u6240\u6709\u8fdb\u5165\u7684\u7ed3\u70b9 $s$ \u7684\u6df1\u5ea6\u6ee1\u8db3\u9650\u5236\u7684\u7ed3\u70b9\u5bf9 $(s, t)$ \u4e2d\uff0c\u51fa\u53bb\u7684\u7ed3\u70b9 $t$ \u7684\u6df1\u5ea6\u6700\u5c0f\u7684\u7ed3\u70b9\uff0c\u4e8e\u662f\u4e0d\u96be\u60f3\u5230\u6309 $s$ \u7684\u6df1\u5ea6\u4e3a\u5173\u952e\u5b57\u6392\u5e8f\u540e\uff0c\u5904\u7406\u4e00\u4e2a\u524d\u7f00 $t$ \u6df1\u5ea6\u6700\u6d45\u7684\u7ed3\u70b9\u7f16\u53f7\uff08\u5e72\u8106\u76f4\u63a5\u53eb \u201c\u524d\u7f00\u6700\u5c0f\u503c\u201d\uff09\uff0c\u6bcf\u79fb\u65f6\u53cc\u6307\u9488\u627e\u5230\u6700\u540e\u4e00\u4e2a\u4e0d\u6ee1\u8db3\u9650\u5236\u7684\u4f4d\u7f6e $i$\uff0c\u90a3\u4e48 $[0, i-1]$ \u7684\u5143\u7d20\u90fd\u662f\u53ef\u884c\uff08\u4f46\u4e0d\u4e00\u5b9a\u6700\u4f18\uff09\u7684\u8f6c\u79fb\uff0c\u8fd9\u65f6\u518d\u67e5\u4e00\u4e2a\u524d\u7f00\u6700\u5c0f\u503c\u5373\u53ef\u3002\u8fd9\u6837\u505a\u5c31\u662f $O(n^2\\log^2 n)$ \u7684\u4e86\n\n### Part 1\n\n\u4e3a\u4e86\u65b9\u4fbf\u63a5\u4e0b\u6765\u7684\u8ba8\u8bba\uff0c\u8fd9\u91cc\u4f18\u5316\u4e00\u4e9b\u5b9a\u4e49\u3002\u9996\u5148\u4e0d\u96be\u53d1\u73b0\uff0c\u82e5\u5b50\u6811\u6709\u4e00\u5bf9\u6ee1\u8db3\u4e8c\u5206\u65f6\u9650\u5236\u7684\u8fdb\u51fa\u7ed3\u70b9\u5bf9 $(s, t)$\uff0c\u90a3\u4e48 $(t, s)$ \u4e5f\u662f\u6ee1\u8db3\u9650\u5236\u7684\u3002\u63a5\u7740\u53ef\u4ee5\u53d1\u73b0\u8fc7\u7a0b\u4e2d\u6211\u4eec\u59cb\u7ec8\u53ea\u5173\u5fc3\u7ed3\u70b9\u5bf9\u5185\u4e24\u4e2a\u7ed3\u70b9\u7684\u6df1\u5ea6\uff0c\u56e0\u6b64\u5b9e\u9645\u4e0a\u6211\u4eec\u4e0d\u9700\u8981\u8bb0\u5177\u4f53\u8fdb\u51fa\u7684\u7ed3\u70b9\uff0c\u53ea\u9700\u8bb0\u5f55\u5b83\u4eec\u7684\u6df1\u5ea6\u5373\u53ef\u3002\u4e0b\u9762\u8bbe $(u, v)$ \u8868\u793a\u8fd9\u6837\u7684\u7ed3\u70b9\u5bf9\u7684\u6df1\u5ea6\n\n\u8003\u8651\u5230\u8d77\u70b9\u6216\u7ec8\u70b9\u5fc5\u987b\u5206\u522b\u5728\u4e24\u4e2a\u4e0d\u540c\u7684\u5b50\u6811\uff0c\u4e14\u6bcf\u4e2a\u7ed3\u70b9\u5bf9 $(u, v)$ \u76f8\u5bf9\u5e94\u7684\u72b6\u6001 $(v, u)$ \u53ef\u4ee5\u76f4\u63a5\u4ea4\u6362\u7ed3\u70b9\u987a\u5e8f\u5f97\u5230\uff0c\u56e0\u6b64\u8f6c\u79fb\u65f6\u5b9e\u9645\u4e0a\u53ea\u9700\u679a\u4e3e\u72b6\u6001\u6570\u91cf\u8f83\u5c0f\u7684\u5b50\u6811\u7684\u72b6\u6001\u5373\u53ef\u3002\u53c2\u7167\u542f\u53d1\u5f0f\u5408\u5e76\u7684\u590d\u6742\u5ea6\u5206\u6790\uff0c\u8fd9\u6837\u72b6\u6001\u7684\u5408\u5e76\u6b21\u6570\u5c31\u662f $n\\log n$ \u7684\uff1b\u4e8e\u662f $\\texttt{Part 0}$ \u7684\u7b97\u6cd5\u5c31\u88ab\u4f18\u5316\u5230\u4e86 $O(n\\log^3 n)$\n\n\u5173\u4e8e\u5177\u4f53\u5b9e\u73b0\uff0c\u53ea\u9700\u4ec5\u679a\u4e3e\u72b6\u6001\u6570\u91cf\u8f83\u5c0f\u7684\u5b50\u6811\u7684\u72b6\u6001\u5e76\u7528\u521a\u624d\u63d0\u5230\u7684\u53cc\u6307\u9488\u524d\u7f00\u6700\u5c0f\u503c\u7b49\u4e3a\u6bcf\u4e2a\u72b6\u6001\u5728\u53e6\u4e00\u9897\u5b50\u6811\u4e2d\u627e\u5230\u6700\u4f18\u7684\u72b6\u6001\u5408\u5e76\uff0c\u5e76\u4e14\u5728\u6bcf\u6b21\u6dfb\u52a0\u72b6\u6001 $(u, v)$ \u65f6\u4e00\u5e76\u6dfb\u52a0\u72b6\u6001 $(v, u)$ \u5373\u53ef\n\n### Part 2\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u82e5\u5bf9\u4e8e\u4e24\u4e2a\u7ed3\u70b9\u5bf9 $(u, v), (u', v')$ \u6ee1\u8db3 $u\\leq u', v\\leq v'$\uff0c\u90a3\u4e48 $(u, v)$ \u4e00\u5b9a\u6bd4 $(u', v')$ \u66f4\u4f18\u3002\u53bb\u6389\u6240\u6709\u53ef\u4ee5\u5224\u65ad\u4e3a\u4e0d\u4f18\u7684\u7ed3\u70b9\u5bf9\u540e\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u82e5\u5c06\u6240\u6709\u7ed3\u70b9\u5bf9\u6309 $u$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u6392\u5e8f\u7684 $v$ \u4e5f\u4e00\u5b9a\u662f\u4ece\u5927\u5230\u5c0f\u4e0d\u589e\u7684\u3002\u8bc1\u660e\u53ea\u9700\u8003\u8651\u53cd\u8bc1\u5373\u53ef\n\n\uff08\u4e0b\u9762\u4e3a\u4e86\u63cf\u8ff0\u65b9\u4fbf\uff0c\u7ef4\u62a4\u7684\u5b9e\u9645\u4e0a\u662f $u$ \u5355\u8c03\u4e0d\u51cf\uff0c$v$ \u5355\u8c03\u4e0d\u589e\uff1b\u5373\u4ec5\u53bb\u9664 $(u, v), (u', v')$ \u6ee1\u8db3 $u< u', v< v'$ \u7684\u7ed3\u70b9\u5bf9\u3002\u4e8b\u5b9e\u4e0a\u6539\u4e00\u6539\u4e5f\u53ef\u4ee5\u505a\u5230\u4e0a\u9762\u7684\u8981\u6c42\uff09\n\n\u7ee7\u7eed\u4f18\u5316 $\\texttt{Part 1}$ \u7684\u505a\u6cd5\u3002\u5047\u5b9a\u6bcf\u6b21\u6211\u4eec\u4ece\u5b50\u6811\u5f97\u5230\u7684\u72b6\u6001\u5e8f\u5217\u90fd\u662f\u53bb\u6389\u53ef\u5224\u65ad\u4e3a\u4e0d\u4f18\u7684\u72b6\u6001\u5e76\u4e14\u6392\u597d\u5e8f\u7684\uff0c\u8003\u8651\u63a5\u4e0b\u6765\u600e\u4e48\u505a\u3002\u7531\u4e8e $v$ \u4e5f\u6ee1\u8db3\u5355\u8c03\u6027\uff0c\u56e0\u6b64\u524d\u7f00\u6700\u5c0f\u503c\u8fd9\u4e2a\u5904\u7406\u53ef\u4ee5\u76f4\u63a5\u7565\u53bb\uff1b\u8003\u8651\u5c06\u6bcf\u6b21\u5f97\u5230\u7684 $(u, v), (v, u)$ \u653e\u5230\u4e24\u4e2a\u4e0d\u540c\u7684\u5e8f\u5217\u4e2d\uff08\u6309\u5f97\u5230\u5143\u7d20\u7684\u987a\u5e8f\u7684\u8bdd\uff0c\u5176\u4e2d\u4e00\u4e2a\u662f\u4ee5\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e3a\u5173\u952e\u8bcd\u6b63\u5e8f\uff0c\u53e6\u4e00\u4e2a\u5219\u662f\u5012\u53d9\u7684\uff1b\u4e0d\u8fc7\u8fd9\u65e0\u6240\u8c13\uff0c\u5bf9\u4e8e\u5012\u53d9\u7684\u5e8f\u5217\u6211\u4eec\u53ef\u4ee5\u53cd\u8f6c\u4e00\u4e0b\u6216\u5012\u7740\u626b\uff09\uff0c\u4e8e\u662f\u73b0\u5728\u7684\u95ee\u9898\u5c31\u662f\u5982\u4f55\u5728\u7ebf\u6027\u65f6\u95f4\u5185\u5408\u5e76\u4e24\u4e2a\u6ee1\u8db3\u7b2c\u4e00\u4e2a\u5173\u952e\u8bcd $x$ \u5355\u8c03\u4e0d\u51cf\uff0c\u7b2c\u4e8c\u4e2a\u5173\u952e\u8bcd $y$ \u5355\u8c03\u4e0d\u589e\u7684\u5e8f\u5217\uff0c\u4e14\u4f7f\u5b83\u4eec\u5728\u5408\u5e76\u540e\u4ecd\u7136\u6709\u5e8f\n\n\u8003\u8651\u8fd9\u6837\u4e00\u79cd\u505a\u6cd5\uff1a\u5148\u5f52\u5e76\u6392\u5e8f\u5f0f\u5730\u5408\u5e76\uff0c\u4f7f\u5f97\u6309\u987a\u5e8f\u6dfb\u52a0\u7684\u5143\u7d20\u7684 $x$\uff08\u7b2c\u4e00\u4e2a\u5173\u952e\u8bcd\uff09\u4e0d\u51cf\uff1b\u6bcf\u6b21\u6dfb\u52a0\u5143\u7d20\u65f6\uff0c\u82e5\u53d1\u73b0 $y$ \u4e0d\u6ee1\u8db3\u5355\u8c03\u4e0d\u589e\u4e86\uff0c\u5c31\u629b\u5f03\u65b0\u6dfb\u52a0\u7684\u5143\u7d20\uff1b\u7531\u4e8e\u4fdd\u8bc1\u6dfb\u52a0\u7684 $x$ \u4e0d\u51cf\uff0c\u56e0\u6b64\u629b\u5f03\u7684\u5143\u7d20\u4e00\u5b9a\u662f\u4e0d\u4f18\u7684\u3002\u4e8b\u5b9e\u4e0a\u8fd9\u79cd\u5408\u5e76\u65b9\u5f0f\u7684\u601d\u8def\u5c31\u6765\u6e90\u4e8e\u53bb\u9664\u4e0d\u4f18\u5143\u7d20\u540e\u5e8f\u5217\u6ee1\u8db3\u5355\u8c03\u6027\u7684\u8bc1\u660e\n\n\u6700\u7ec8\u5f97\u5230\u7684\u590d\u6742\u5ea6\u5c31\u662f $O(n\\log^2 n)$\n\n## CODE\n\n\u4ee3\u7801\u91cc\u5728\u5408\u5e76\u540e\u6ca1\u6709\u663e\u5f0f\u7684\u5b58\u4e0b\u6bcf\u4e2a\u72b6\u6001 $(u, v)$ \u5bf9\u5e94\u7684\u72b6\u6001 $(v, u)$\uff1b\u6bd5\u7adf\u8fd9\u4e24\u4e2a\u5e8f\u5217\u7684\u987a\u5e8f\u662f\u6070\u597d\u53cd\u8fc7\u6765\u7684\uff0c\u4ece\u4e24\u7aef\u7528\u4e24\u4e2a\u6307\u9488\u626b\u5c31\u884c\u4e86\u3002\u5177\u4f53\u53ef\u89c1\u4ee3\u7801\n\n\u6211\u8fd8\u4e0d\u592a\u786e\u5b9a\u4ee3\u7801\u4e2d\u7ef4\u62a4\u7684\u5e8f\u5217\u662f\u4e25\u683c\u5355\u8c03 \u9012\u589e/\u9012\u51cf \u7684\u8fd8\u662f \u4e0d\u51cf/\u4e0d\u589e \u7684\uff0c\u56e0\u4e3a\u5206\u6790\u5b9e\u5728\u6709\u70b9\u9ebb\u70e6 \\fad\uff1b\u4e0d\u8fc7\u8fd9\u5e76\u4e0d\u5f71\u54cd\u4ee3\u7801\u6b63\u786e\u6027\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <cstring>\n#include <algorithm>\n#define ll long long\nusing std::max;\nusing std::min;\nusing std::vector;\n\nconst int MAXN =1.5e5;\n\n/*------------------------------IO------------------------------*/\n\nint read(){\n\tint x =0; char c =getchar();\n\twhile(c < '0' || c > '9') c =getchar();\n\twhile(c >= '0' && c <= '9') x =(x<<1)+(x<<3)+(48^c), c =getchar();\n\treturn x;\n}\n\n/*------------------------------Arr------------------------------*/\n\nint n;\nint ch[2][MAXN], val[2][MAXN];\nll dep[MAXN];\n\n/*------------------------------Work------------------------------*/\n\nvoid dfs_pre(const int &u){\n\tif(ch[0][u]){\n\t\tdep[ch[0][u]] =dep[u]+val[0][u], dfs_pre(ch[0][u]);\n\t\tdep[ch[1][u]] =dep[u]+val[1][u], dfs_pre(ch[1][u]);\n\t}\n}\n\nstruct pad{\n\t// \u5230\u4e24\u4e2a\u7ed3\u70b9 ( \u8def\u5f84\u5411\u5b50\u6811\u5916\u7684\u4e24\u4e2a\u7ed3\u70b9 ) \u7684\u8ddd\u79bb //\n\tll u, v;\n\t\n\tpad(const ll &U, const ll &V):u(U), v(V){}\n\t\n\tbool operator < (const pad &B) const{\n\t\tif(u == B.u)\n\t\t\treturn v < B.v;\n\t\telse\n\t\t\treturn u < B.u;\n\t}\n\tbool operator > (const pad &B) const{\n\t\tif(u == B.u)\n\t\t\treturn v > B.v;\n\t\telse\n\t\t\treturn u > B.u;\n\t}\n};\nvector<pad> dp[MAXN];\n\ninline void free(vector<pad> &v){\n\tvector<pad> tmp;\n\ttmp.swap(v);\n}\n\nvoid dfs(const int &u, const ll &Limit){\n\t#define LS ch[0][u]\n\t#define RS ch[1][u]\n\tif(LS){\n\t\tdfs(LS, Limit);\n\t\tdfs(RS, Limit);\n\t\tif((int)dp[LS].size() > (int)dp[RS].size())\n\t\t\tdp[LS].swap(dp[RS]);\n\t\t\n\t\tvector<pad> tmp;\n\t\ttmp.reserve(dp[LS].size());\n\t\tfor(int i =0, j =(int)dp[RS].size()-1; i < (int)dp[LS].size() && j >= 0; ++i){\n\t\t\twhile(j >= 0 && dp[RS][j].u+dp[LS][i].u-2*dep[u] > Limit)\n\t\t\t\t--j;\n\t\t\tif(j >= 0 && (tmp.empty() || tmp.back().u != dp[RS][j].v))\n\t\t\t\ttmp.push_back(pad(dp[RS][j].v, dp[LS][i].v));\n\t\t\telse if(!tmp.empty() && tmp.back().u == dp[RS][j].v)\n\t\t\t\ttmp.back().v =dp[LS][i].v;/*\u53ef\u4ee5\u6ce8\u610f\u5230 dp[LS][i].v \u662f\u4e0d\u589e\u7684*/\n\t\t}\n\t\tfree(dp[LS]);\n\t\tfree(dp[RS]);\n\t\t\n\t\tdp[u].reserve(2*tmp.size());\n\t\tauto push =[&](const pad &elm){\n\t\t\tif(dp[u].empty() || dp[u].back().v >= elm.v)\n\t\t\t\tdp[u].push_back(elm);\n\t\t};\n\t\tfor(int i =0, j =(int)tmp.size()-1; i < (int)tmp.size() || j >= 0;){\n\t\t\tif(i < (int)tmp.size() && j >= 0){\n\t\t\t\t// V- \u8fd9\u91cc\u7684\u5224\u65ad\u53ef\u80fd\u4e0d\u4e00\u5b9a\u6709\u5fc5\u8981\uff1b\u4f46\u61d2\u5f97\u63a8\u4e86 \\fad //\n\t\t\t\tif(tmp[i].u == tmp[j].v){\n\t\t\t\t\tif(tmp[i].v < tmp[j].u)\n\t\t\t\t\t\tpush(tmp[i]);\n\t\t\t\t\telse\n\t\t\t\t\t\tpush(pad(tmp[j].v, tmp[j].u));\n\t\t\t\t\t++i, --j;\n\t\t\t\t}\n\t\t\t\telse if(tmp[i].u < tmp[j].v)\n\t\t\t\t\tpush(tmp[i++]);\n\t\t\t\telse\n\t\t\t\t\tpush(pad(tmp[j].v, tmp[j].u)), --j;\n\t\t\t}\n\t\t\telse if(i < (int)tmp.size())\n\t\t\t\tpush(tmp[i++]);\n\t\t\telse\n\t\t\t\tpush(pad(tmp[j].v, tmp[j].u)), --j;\n\t\t}\n\t}\n\telse\n\t\tdp[u].push_back(pad(dep[u], dep[u]));\n\t#undef LS\n\t#undef RS\n}\n\nbool check(const ll &mx){\n\tfree(dp[1]);\n\tdfs(1, mx);\n\treturn !dp[1].empty();\n}\n\n/*------------------------------Main------------------------------*/\n\nint main(){\n\tn =read();\n\tfor(int i =2; i <= n; ++i){\n\t\tint fa =read(), v =read();\n\t\tif(ch[0][fa])\n\t\t\tch[1][fa] =i, val[1][fa] =v;\n\t\telse\n\t\t\tch[0][fa] =i, val[0][fa] =v;\n\t}\n\tdfs_pre(1);\n\t\n\tll ans =0x3f3f3f3f3f3f3f3f;\n\tll l =0, r =2e10;\n\twhile(l <= r){\n\t\tll mid =(l+r)>>1;\n\t\tif(check(mid)){\n\t\t\tr =mid-1;\n\t\t\tans =min(ans, mid);\n\t\t}\n\t\telse\n\t\t\tl =mid+1;\n\t}\n\t\n\tprintf(\"%lld\", ans);\n}\n```",
        "postTime": 1606352049,
        "uid": 105254,
        "name": "Piwry",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 AT2172 \u3010[AGC007E] Shik and Travel\u3011"
    },
    {
        "content": "[AGC007E Shik and Travel](https://www.luogu.com.cn/problem/AT2172)\n\n\u9898\u76ee\u5927\u610f\uff1a$n$ \u4e2a\u70b9\u7684\u4e8c\u53c9\u6811\uff0c\u6bcf\u4e2a\u70b9\u8981\u4e48\u4e24\u4e2a\u513f\u5b50\uff0c\u8981\u4e48\u6ca1\u6709\u513f\u5b50\uff0c\u6bcf\u6761\u8fb9\u6709\u8fb9\u6743\u3002\n\n\u4f60\u4ece $1$ \u53f7\u8282\u70b9\u51fa\u53d1\uff0c\u8d70\u5230\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u3002\u7136\u540e\u6bcf\u4e00\u5929\uff0c\u4f60\u53ef\u4ee5\u4ece\u5f53\u524d\u70b9\u8d70\u5230\u53e6\u4e00\u4e2a\u53f6\u5b50\u3002\u6700\u540e\u56de\u5230 $1$ \u53f7\u8282\u70b9\uff0c\u8981\u6c42\u5230\u8fc7\u6240\u6709\u53f6\u5b50\u5e76\u4e14\u6bcf\u6761\u8fb9\u7ecf\u8fc7**\u6070\u597d\u4e24\u6b21**\u3002\u6c42\u4e00\u79cd\u904d\u5386\u987a\u5e8f\uff0c\u4f7f\u5f97\u6bcf\u76f8\u90bb\u4e24\u53f6\u5b50\u95f4\u7684\u8fb9\u6743\u548c\u7684\u6700\u5927\u503c\u6700\u5c0f\u3002\n\n### \u9898\u89e3\n\n\u8003\u8651\u4e8c\u5206\u6700\u5927\u503c\uff0c\u770b\u662f\u5426\u53ef\u884c\u3002\u8fd9\u4e2a\u70b9\u662f\u4e00\u79cd\u7c7b\u4f3c\u7b49\u53f7\u8f6c\u9650\u5236\u7684\u505a\u6cd5\u3002\n\n\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8003\u8651\u80fd\u5426\u5728\u4e0d\u7ecf\u8fc7\u6743\u503c\u548c\u5927\u4e8e $k$ \u7684\u53f6\u5b50\u95f4\u7684\u8def\u5f84\u5373\u53ef\u3002\u8fd9\u4e2a\u600e\u4e48\u505a\u5462\uff1f\u7531\u4e8e\u6211\u4eec\u53ea\u5173\u5fc3\u8ddd\u79bb\uff0c\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u53ef\u4ee5\u5f97\u5230\u4e00\u4e9b\u6570\u5bf9 $(a,b)$ \uff0c\u8868\u793a\u5f53\u524d\u70b9\u5b50\u6811\u4e2d\u53ef\u4ee5\u4ece\u8ddd\u79bb\u5f53\u524d\u70b9\u8ddd\u79bb\u4e3a $a$ \u7684\u53f6\u5b50\u8fdb\u5165\uff0c\u4ece\u8ddd\u79bb\u5f53\u524d\u70b9\u8ddd\u79bb\u4e3a $b$ \u7684\u53f6\u5b50\u9000\u51fa\u3002\u5e76\u4e14\u8bb0 $S_u$  \u4e3a\u5bf9\u4e8e $u$ \u8fd9\u4e2a\u70b9\u6765\u8bf4\u5f62\u5982 $(a,b)$ \u7684\u6570\u5bf9\u96c6\u5408\u3002\n\n\u5bf9\u4e8e\u6ca1\u6709\u513f\u5b50\u7684\u70b9\uff0c\u5b58\u5728\u6570\u5bf9 $(0,0)$ \u3002\u800c\u5bf9\u4e8e\u6709\u513f\u5b50\u7684\u70b9\uff0c\u7531\u9898\u76ee\u9650\u5236\u6bcf\u6761\u8fb9\u548c\u6bcf\u4e2a\u53f6\u5b50\u6070\u597d\u8fc7\u4e24\u6b21\uff0c\u53ef\u77e5\u4e00\u4e2a\u5b50\u6811\u5185\u7684\u53f6\u5b50\u80af\u5b9a\u5148\u4e92\u76f8\u5230\u8fbe\uff0c\u518d\u79bb\u5f00\u5f53\u524d\u5b50\u6811\uff0c\u53bb\u4e0e\u6700\u8fd1\u7684\u5b50\u6811\u4e2d\u7684\u53f6\u5b50\u4e92\u8fbe\u3002\u56e0\u6b64\u6211\u4eec\u5f97\u5230\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u7684\u6570\u5bf9\uff0c\u7b49\u4ef7\u4e8e\u6211\u4eec\u5c06\u5176\u5de6\u53f3\u5b50\u6811\u7684\u67d0\u4e24\u4e2a\u53f6\u5b50\u76f8\u8fde\u63a5\uff0c\u7528\u5de6\u53f3\u5b50\u6811\u7684\u6570\u5bf9\u8868\u793a\uff0c\u53ef\u4ee5\u5f97\u5230\u5bf9\u4e8e\u4e00\u4e2a\u5b50\u6811\u7684\u6570\u5bf9 $(a,b)$ \u548c\u53e6\u4e00\u4e2a\u5b50\u6811\u7684\u6570\u5bf9 $(c,d)$ \uff0c\u5f53 $b+c+val[u][0]+val[u][1]\\le k$ \u65f6\uff08$val[u][0/1]$ \u8868\u793a $u$ \u5411\u5de6\u53f3\u513f\u5b50\u7684\u8fb9\u6743\uff09\uff0c\u8fd9\u4e24\u4e2a\u6570\u5bf9\u53ef\u4ee5\u5408\u5e76\uff0c\u5f97\u5230\u6570\u5bf9 $(a+val[u][0],b+val[u][1])$ ,\u8fd9\u662f\u9ed8\u8ba4 $(a,b)$ \u4e3a\u5de6\u5b50\u6811\u6570\u5bf9\uff0c\u53cd\u8fc7\u6765\u7684\u8bdd $val$ \u6362\u4e00\u4e0b\u5c31\u597d\u3002\n\n\u4f46\u662f\u76f4\u63a5\u66b4\u529b\u5408\u5e76\u6570\u5bf9\u662f\u5bc4\u7684\u3002\u6211\u4eec\u8003\u8651\u4f18\u5316\uff0c\u663e\u7136\u5bf9\u4e8e\u4e24\u4e2a\u70b9\u5bf9 $(a,b)$ \u548c $(c,d)$ \uff0c\u5982\u679c $a\\le c,b\\le d$ \uff0c\u90a3\u4e48\u53ef\u4ee5\u77e5\u9053 $(c,d)$ \u662f\u65e0\u7528\u7684\u3002\u5176\u6b21\u7531\u4e8e\u6211\u4eec\u5e0c\u671b\u5408\u5e76\u51fa\u6765\u7684\u6570\u5bf9\u7684\u4e24\u4e2a\u503c\u90fd\u5c3d\u91cf\u5c0f\uff0c\u4e14\u6bcf\u4e2a\u6570\u5bf9 $(a,b)$ \u90fd\u6ee1\u8db3 $a+b\\le k$ \uff0c\u6211\u4eec\u5bf9\u4e8e\u4e00\u4e2a\u5b50\u6811\u4e2d\u7684\u6570\u5bf9\u80af\u5b9a\u6709\u552f\u4e00\u7684\u4e00\u4e2a\u53e6\u4e00\u4e2a\u5b50\u6811\u7684\u6570\u5bf9\u4e0e\u4e4b\u5bf9\u5e94\u6765\u5f97\u5230\u6700\u5c0f\u7684\u6570\u5bf9\u3002\n\n\u6211\u4eec\u5bf9\u4e8e\u6570\u5bf9\u6309\u7167 $a$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u90a3\u4e48\u7531\u4e8e $a+b\\le k$ \u663e\u7136 $b$ \u9012\u51cf\uff0c\u6211\u4eec\u8003\u8651\u51b3\u7b56\u5355\u8c03\u6027\u6765\u5408\u5e76\u5373\u53ef\u3002\n\n\u7136\u540e\u6211\u4eec\u6709\u51b3\u7b56\u5355\u8c03\u6027\u7684\u8bdd\uff0c\u663e\u7136\u590d\u6742\u5ea6\u5c31\u662f\u6570\u5bf9\u603b\u6570\u7684\uff0c\u7136\u540e\u7531\u4e8e\u662f\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u6613\u8bc1\u590d\u6742\u5ea6 $O(n\\log^2 n)$ \uff0c\u603b\u590d\u6742\u5ea6 $O(34n\\log^2 n)$\u3002\uff08$34$ \u662f\u4e8c\u5206\u590d\u6742\u5ea6\uff09\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define db double\n#define filein(a) freopen(#a\".in\",\"r\",stdin)\n#define fileot(a) freopen(#a\".out\",\"w\",stdout)\n#define sky fflush(stdout);\n#define gc getchar\n#define pc putchar\nnamespace IO{\n\tinline bool blank(const char &c){\n\t\treturn c==' ' or c=='\\n' or c=='\\t' or c=='\\r' or c==EOF;\n\t}\n\tinline void gs(char *s){\n\t\tchar ch=gc();\n\t\twhile(blank(ch) ) {ch=gc();}\n\t\twhile(!blank(ch) ) {*s++=ch;ch=gc();}\n\t\t*s=0;\n\t}\n\tinline void gs(std::string &s){\n\t\tchar ch=gc();s+='#';\n\t\twhile(blank(ch) ) {ch=gc();}\n\t\twhile(!blank(ch) ) {s+=ch;ch=gc();}\n\t}\n\tinline void ps(char *s){\n\t\twhile(*s!=0) pc(*s++);\n\t}\n\tinline void ps(const std::string &s){\n\t\tfor(auto it:s) \n\t\t\tif(it!='#') pc(it);\n\t}\n\ttemplate<class T>\n\tinline void read(T &s){\n\t\ts=0;char ch=gc();bool f=0;\n\t\twhile(ch<'0'||'9'<ch) {if(ch=='-') f=1;ch=gc();}\n\t\twhile('0'<=ch&&ch<='9') {s=s*10+(ch^48);ch=gc();}\n\t\tif(ch=='.'){\n\t\t\tdb p=0.1;ch=gc();\n\t\t\twhile('0'<=ch&&ch<='9') {s=s+p*(ch^48);p*=0.1;ch=gc();}\n\t\t}\n\t\ts=f?-s:s;\n\t}\n\ttemplate<class T,class ...A>\n\tinline void read(T &s,A &...a){\n\t\tread(s);read(a...);\n\t}\n};\nusing IO::read;\nusing IO::gs;\nusing IO::ps;\nconst int N=(1<<17)+3;\nint n;\nint ch[N][2],val[N][2];\nstruct node{\n\tint a,b;\n};\nstd::vector<node>S[N],psc;\nvoid dfs(int u,ll k){\n\tS[u].clear();\n\tif(!ch[u][0]){\n\t\tS[u].push_back({0,0});\n\t\treturn;\n\t}\n\tdfs(ch[u][0],k);\n\tdfs(ch[u][1],k);\n\tint lc=ch[u][0],rc=ch[u][1];\n\tpsc.clear();\n\tint j=-1;\n\tfor(auto it:S[lc]){\n\t\twhile(j+1<S[rc].size() and S[rc][j+1].a+it.b+val[u][1]+val[u][0]<=k){\n\t\t\t++j;\n\t\t}\n\t\tif(j>=S[rc].size() ) continue;\n\t\tif(S[rc][j].a+it.b+val[u][1]+val[u][0]>k) continue;\n\t\tpsc.push_back({it.a+val[u][0],S[rc][j].b+val[u][1]});\n\t}\n\tj=-1;\n\tfor(auto it:S[rc]){\n\t\twhile(j+1<S[lc].size() and S[lc][j+1].a+it.b+val[u][1]+val[u][0]<=k){\n\t\t\t++j;\n\t\t}\n\t\tif(j>=S[lc].size() ) continue;\n\t\tif(S[lc][j].a+it.b+val[u][1]+val[u][0]>k) continue;\n\t\tpsc.push_back({it.a+val[u][1],S[lc][j].b+val[u][0]});\n\t}\n\tint sz=psc.size();\n\tstd::sort(psc.begin(),psc.end(),[](node x,node y){\n\t\treturn x.a<y.a;\n\t});\n\tfor(int i=0;i<sz;++i){\n\t\tif(i!=0){\n\t\t\tif(psc[i-1].b<=psc[i].b){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\tS[u].push_back(psc[i]);\n\t}\n}\ninline bool check(int u,ll k){\n\tdfs(1,k);\n\treturn S[1].size();\n}\nint main(){\n\tfilein(a);fileot(a);\n\tread(n);\n\tfor(int u=2;u<=n;++u){\n\t\tint f,w; read(f,w);\n\t\tif(!ch[f][0]) ch[f][0]=u,val[f][0]=w;\n\t\telse ch[f][1]=u,val[f][1]=w;\n\t}\n\tll l=0,r=1ll*(1ll<<17)*(1ll<<17),hf=r;\n\twhile(l<=r){\n\t\tll mid=(l+r)>>1;\n\t\tif(check(1,mid) ){\n\t\t\tr=mid-1;hf=mid;\n\t\t}else{\n\t\t\tl=mid+1;\n\t\t}\n\t} \n\tprintf(\"%lld\\n\",hf);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1647422279,
        "uid": 132530,
        "name": "cbdsopa",
        "ccfLevel": 7,
        "title": "AGC007E Shik and Travel \u89e3\u9898\u62a5\u544a"
    },
    {
        "content": "\u6807\u7b7e: DP.\n\n#### Part1\n\n\u4e8c\u5206\u7b54\u6848 $ans$ , \u8bbe $f[u][x]$ \u8868\u793a $u$ \u5b50\u6811\u5185**\u7b2c\u4e00\u4e2a\u8d70\u5230\u7684\u53f6\u5b50\u8282\u70b9**\u5230 $u$ \u7684\u8ddd\u79bb\u4e0d\u5c0f\u4e8e $x$ \u4e14 \u6bcf\u5929\u7684\u8def\u5f84\u957f\u5ea6\u4e0d\u8d85\u8fc7 $ans$ \u65f6, **\u6700\u540e\u4e00\u4e2a\u8d70\u5230\u7684\u53f6\u5b50\u8282\u70b9**\u7684\u8ddd\u79bb $u$ \u7684\u6700\u5c0f\u503c. \u8f6c\u79fb\u5f88\u7b80\u5355:\n\n $f[u][x]=min(f[R][x-f[L][x-wl]-(wl+wr)], f[L][x-f[R][x-wr]-(wl+wr)])$, \u5176\u4e2d $L, R$ \u5206\u522b\u8868\u793a $u$ \u7684\u5de6\u53f3\u513f\u5b50, $wl,wr$ \u5206\u522b\u8868\u793a $u$ \u5230 $L,R$ \u7684\u8ddd\u79bb.\n\n\u5f53 $f[u][x]$ \u65e0\u6cd5\u4ece\u5176\u4ed6\u72b6\u6001\u8f6c\u79fb\u65f6\u65e0\u89e3, \u5bf9\u4e8e\u6bcf\u4e2a $u$ \u6709\u7528\u7684\u72b6\u6001\u6570(\u8bb0\u4e3a $g[u]$)\u4e3a\u5176\u5b50\u6811\u5185\u7684\u53f6\u5b50\u8282\u70b9\u4e2a\u6570.\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n^2\\log n)$.\n\n### Part 2\n\n\u6df1\u5165\u7814\u7a76\u53d1\u73b0\u5bf9\u4e8e\u6bcf\u4e2a $u$ , \u4e0d\u59a8\u4ee4$g[L]<g[R]$ , \u8981\u4e48**\u7b2c\u4e00\u4e2a\u8d70\u5230\u7684\u53f6\u5b50\u8282\u70b9**\u5728 $L$ \u5185, \u8981\u4e48**\u6700\u540e\u8d70\u5230\u7684\u53f6\u5b50\u8282\u70b9**\u5728 $L$ \u5185, \u5219\u6709\u7528\u7684\u72b6\u6001\u5728\u8fd9\u4e24\u7c7b\u4e2d\u53d6\u5230, \u5373 $g[u]=2g[L]$. \u7c7b\u4f3c\u4e8e\u542f\u53d1\u5f0f\u5408\u5e76, \u6211\u4eec\u5206\u6790\u51fa\u4e00\u6b21\u5224\u65ad\u7684\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n\\log n)$.\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n\\log^2n)$.\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint read();\n\nint fa[200005], ch[200005][2], w[200005][2], c[200005];\nstruct P {\n    long long l, r;\n};\nvector<P> p[200005], tmp;\n\nvoid ins(int u, long long l, long long r) {\n    if (!p[u].size() || r < (--p[u].end())->r) p[u].push_back((P){l, r});\n}\n\nbool dfs(int u, long long x) {\n    if (!c[u]) return p[u].clear(), p[u].push_back((P){0, 0}), 1;\n    int L, R, Wl = w[u][0], Wr = w[u][1];\n    if (!dfs(L = ch[u][0], x) || !dfs(R = ch[u][1], x)) return 0;\n    if (p[L].size() > p[R].size()) swap(L, R), swap(Wl, Wr);\n\n    tmp.clear(), p[u].clear();\n    int i, j;\n    for (i = 0, j = -1; i < p[L].size(); ++i) {\n        long long tl = p[L][i].l + Wl, tr = x - p[L][i].r - (Wl + Wr);\n        while (j + 1 < p[R].size() && p[R][j + 1].l <= tr) ++j;\n        if (j < 0) continue;\n        if (!tmp.size() || p[R][j].r + Wr < (--tmp.end())->r)\n            tmp.push_back((P){tl, p[R][j].r + Wr});\n    }\n\n    for (i = 0, j = tmp.size() - 1; i < tmp.size() && j >= 0;)\n        if (tmp[i].l < tmp[j].r)\n            ins(u, tmp[i].l, tmp[i].r), ++i;\n        else if (tmp[i].l > tmp[j].r)\n            ins(u, tmp[j].r, tmp[j].l), --j;\n        else {\n            tmp[i].r <= tmp[j].l ? ins(u, tmp[i].l, tmp[i].r)\n                                 : ins(u, tmp[j].r, tmp[j].l);\n            ++i, --j;\n        }\n    while (j >= 0) ins(u, tmp[j].r, tmp[j].l), --j;\n    while (i < tmp.size()) ins(u, tmp[i].l, tmp[i].r), ++i;\n\n    return p[u].size();\n}\nint main() {\n    int n = read();\n    for (int i = 2; i <= n; ++i)\n        fa[i] = read(), ch[fa[i]][c[fa[i]]] = i, w[fa[i]][c[fa[i]]++] = read();\n    long long l = 0, r = 40000000000, rs = r, m;\n    while (l <= r) dfs(1, m = l + r >> 1) ? r = m - 1, rs = m : l = m + 1;\n    printf(\"%lld\\n\", rs);\n    return 0;\n}\n\nint read() {\n    int x = 0, f = 1;\n    char c = getchar();\n    while (c < '0' || c > '9') f = (c == '-') ? -1 : f, c = getchar();\n    while (c >= '0' && c <= '9') x = x * 10 + c - '0', c = getchar();\n    return x * f;\n}\n\n```\n",
        "postTime": 1576483706,
        "uid": 51237,
        "name": "Kinandra",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT2172 \u3010Shik and Travel\u3011"
    },
    {
        "content": "## solution\n\u770b\u5230\u6700\u5927\u503c\u6700\u5c0f\uff0c\u5148\u6765\u4e2a\u4e8c\u5206\u7b54\u6848\u3002\n\n\u8f6c\u5316\u6210\u5224\u5b9a\u6027\u95ee\u9898\uff0c\u53d1\u73b0\u95ee\u9898\u7b80\u5316\u4e0d\u5c11\uff0c\u53ef\u4ee5\u6811\u5f62 dp\u3002\n\n\u56e0\u4e3a\u662f\u4e8c\u53c9\u6811\uff0c\u4e14\u6bcf\u6761\u8fb9\u53ea\u80fd\u7ecf\u8fc7\u4e24\u6b21\uff0c\u5fc5\u7136\u662f\u4e00\u8fdb\u4e00\u51fa\uff0c\u90a3\u4e48\u6bcf\u8d70\u5230\u4e00\u4e2a\u70b9\u5c31\u5fc5\u987b\u4e00\u6b21\u6027\u8d70\u5b8c\u5b83\u7684\u5b50\u6811\u4e2d\u6240\u6709\u53f6\u5b50\u3002\n\n\u6839\u636e\u4e00\u8fdb\u4e00\u51fa\uff0c\u6211\u4eec\u53ef\u4ee5\u5927\u529b\u8bbe dp \u72b6\u6001 $dp[x][l][r]$ \u8868\u793a\u662f\u5426\u5b58\u5728\u8fdb\u5165 x \u5b50\u6811\uff0c\u8d70\u5230\u7b2c\u4e00\u4e2a\u53f6\u5b50\u7ecf\u8fc7\u7684\u8ddd\u79bb\u4e3a l\uff0c\u4ece\u6700\u540e\u4e00\u4e2a\u53f6\u5b50\u56de\u5230 x \u7684\u8ddd\u79bb\u4e3a r\u3002\n\n\u663e\u7136\u5b58\u8fd9\u4e48\u591a $(l,r)$ \u5f88\u8822\uff0c\u53ea\u6bcf\u4e2a\u70b9\u5b58\u4e0b\u53ef\u80fd\u7684 $(l,r)$ \u5373\u53ef\u3002\n\n\u7136\u540e\u53d1\u73b0\u5982\u679c\u5b58\u5728 $(l_1,r_1),(l_2,r_2)$ \u4f7f\u5f97 $l_1<l_2$ \u4e14 $r_1<r_2$\uff0c\u90a3\u4e48 $(l_2,r_2)$ \u660e\u663e\u6ca1\u6709\u4efb\u4f55\u8d21\u732e\u3002\n\n\u901a\u8fc7\u8fd9\u79cd\u51b3\u7b56\u5355\u8c03\u6027\u5c31\u53ef\u4ee5\u5927\u5927\u51cf\u5c11\u6bcf\u4e2a\u70b9\u7684\u51b3\u7b56\u70b9\u6570\uff0c\u5177\u4f53\u8868\u73b0\u4e3a\u7ef4\u62a4\u4e00\u4e2a $l$ \u9012\u589e\u800c $r$ \u9012\u51cf\u7684\u5e8f\u5217\u3002\n\n\u5408\u5e76\u4e24\u4e2a\u513f\u5b50\u8f6c\u79fb\u65f6\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u513f\u5b50\u7684 $(l,r)$\uff0c\u80fd\u591f\u4e0e\u5176\u5408\u5e76\u7684\u5fc5\u7136\u662f\u53e6\u4e00\u4e2a\u513f\u5b50\u7684\u51b3\u7b56\u70b9\u5e8f\u5217\u7684\u524d\u7f00\u3002\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u9009\u62e9\u6700\u9760\u540e\u7684\u4e0e\u5176\u5408\u5e76\uff0c\u663e\u7136\u8fd9\u6837\u66f4\u4f18\u3002\n\n\u8bbe $siz[x]$ \u8868\u793a x \u7684\u51b3\u7b56\u70b9\u5e8f\u5217\u5927\u5c0f\u3002\u53ef\u77e5\u8fd9\u6837\u5408\u5e76\uff0cx \u7684\u51b3\u7b56\u70b9\u5e8f\u5217\u5927\u5c0f\u4e3a $2\\times \\min(siz[lson]+siz[rson])$\u3002\n\n\u7c7b\u4f3c\u4e8e\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u53ef\u4ee5\u7b80\u5355\u8bc1\u660e dp \u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n\\log n)$ \u7684\u3002\u6216\u662f\u8003\u8651\u6bcf\u4e2a\u53f6\u5b50\u51b3\u7b56\u70b9\u7684\u88ab\u7edf\u8ba1\u6b21\u6570\uff0c\u6839\u636e\u6811\u9ad8\u4e3a $\\log n$ \u4ea6\u53ef\u5f97\u51fa\u3002\n\n\u90a3\u4e48\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log n\\log V)$\uff0c\u5176\u4e2d $V=2n\\log n$\u3002\n\n---\n## code\n\n\u6b64\u5904\u4f7f\u7528\u6570\u7ec4\u5b9e\u73b0\u3002\u7531\u4e8e\u53d6\u5230\u7684\u51b3\u7b56\u70b9\u5e8f\u5217\u5927\u5c0f\u603b\u662f\u4e0d\u8d85\u8fc7\u4e24\u4e2a\u513f\u5b50\u7684\u5e8f\u5217\u5927\u5c0f\u4e4b\u548c\u4e14\u8fde\u7eed\uff0c\u4e8e\u662f\u53ef\u4ee5\u8bb0\u5f55\u5728\u540c\u4e00\u6bb5\u533a\u95f4\u4e0a\uff0c\u53cd\u590d\u5229\u7528\u7a7a\u95f4\u3002\n\n\u53e6\u5916\u4e00\u70b9\u662f vector \u7684 clear() \u5e76\u4e0d\u4f1a\u771f\u6b63\u91ca\u653e\u7a7a\u95f4\uff0c\u800c\u662f\u6807\u8bb0\u4e3a\u91ca\u653e\u8fc7\u3002\u4f46\u662f\u5b83\u4f1a\u91cd\u590d\u5229\u7528\u5176\u7a7a\u95f4\u3002\u5b9e\u9645\u4e0a\u4e0d\u91ca\u653e\u7a7a\u95f4\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u662f $O(n\\log n)$ \u7684\u3002\u611f\u89c9\u6bd4\u8f83\u4e0d\u723d\uff0c\u800c\u4e14\u6709\u5927\u5e38\u6570\u3002\n\n\u4e8e\u662f\u867d\u7136\u5224\u65ad\u8fb9\u754c\u6709\u70b9\u9ebb\u70e6\uff0c\u5e38\u6570\u6709\u70b9\u5927\uff0c\u4f46\u662f\u8fd8\u662f\u62ff\u4e0b rank1\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct Data{\n\tint l,r;\n\tData(int x=0,int y=0){\n\t\tl=x,r=y;\n\t}\n}a[140010];\nData q[140010][2];\nint son[140010][2];\nint val[140010][2];\nint bd[140010][2];\nint s[2];\nint n,tot,mx;\nvoid dfs(int x){\n\tif(son[x][0]==0){\n\t\ta[++tot]=Data(0,0);\n\t\tbd[x][0]=bd[x][1]=tot;\n\t\treturn;\n\t}\n\tdfs(son[x][0]);\n\tint y=son[x][0],z=val[x][0];\n\tfor(int i=bd[y][0];i<=bd[y][1];i++) a[i].l+=z,a[i].r+=z;\n\tif(son[x][1]==0){\n\t\tbd[x][0]=bd[y][0];\n\t\tbd[x][1]=bd[y][1];\n\t\treturn;\n\t}\n\tdfs(son[x][1]);\n\ty=son[x][1],z=val[x][1];\n\tfor(int i=bd[y][0];i<=bd[y][1];i++) a[i].l+=z,a[i].r+=z;\n\ts[0]=s[1]=0;\n\tfor(int i=0;i<2;i++){\n\t\ty=son[x][i],z=son[x][i^1];\n\t\tfor(int j=bd[y][0],k=bd[z][0];j<=bd[y][1];j++){\n\t\t\twhile(k<=bd[z][1]&&a[j].r+a[k].l<=mx) k++;\n\t\t\tif(k==bd[z][0]) continue;\n\t\t\tq[++s[i]][i]=Data(a[j].l,a[k-1].r); \n\t\t}\n\t}\n\ty=son[x][0],z=son[x][1];\n\tint i=1,j=1,k=bd[y][0]-1;\n\tfor(;i<=s[0];i++){\n\t\twhile(j<=s[1]&&q[j][1].l<=q[i][0].l){\n\t\t\tif(k<bd[y][0]||q[j][1].r<a[k].r) a[++k]=q[j][1];\n\t\t\tj++;\n\t\t}\n\t\tif(k>=bd[y][0]&&a[k].l==q[i][0].l) a[k].r=min(a[k].r,q[i][0].r);\n\t\telse if(k<bd[y][0]||q[i][0].r<a[k].r) a[++k]=q[i][0];\n\t}\n\tfor(;j<=s[1];j++) \n\tif(k<bd[y][0]||q[j][1].r<a[k].r) a[++k]=q[j][1];\n\tbd[x][0]=bd[y][0];\n\tbd[x][1]=k;\n}\nbool check(int mid){\n\ttot=0,mx=mid;\n\tdfs(1);\n\treturn bd[1][0]<=bd[1][1];\n}\ninline int read(){\n\tint x=0,f=1; \n\tchar c=getchar();\n\tfor(;isdigit(c);c=getchar()) x=x*10+c-'0';\n\treturn x*f;\n}\nint main(){\n\tint x,y;\n\tn=read();\n\tfor(int i=2;i<=n;i++){\n\t\tx=read(),y=read();\n\t\tif(son[x][0]==0) son[x][0]=i,val[x][0]=y;\n\t\telse son[x][1]=i,val[x][1]=y;\n\t}\n\tint l=-1,r=4200000;\n\twhile(l<r-1){\n\t\tint mid=(l+r)>>1;\n\t\tif(check(mid)) r=mid;\n\t\telse l=mid;\n\t}\n\tprintf(\"%d\",r);\n}\n```\n\n",
        "postTime": 1637159807,
        "uid": 90869,
        "name": "tylon2006",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 AT2172 [AGC007E] Shik and Travel"
    },
    {
        "content": "# \u601d\u8def\n\u6bcf\u6761\u8fb9\u53ea\u80fd\u7ecf\u8fc7\u4e00\u6b21\uff0c \u90a3\u4e48\u6211\u4eec\u8fdb\u5165\u4e00\u68f5\u5b50\u6811\u7684\u65f6\u5019\u5c31\u5fc5\u987b\u904d\u5386\u5b8c\u8fd9\u68f5\u5b50\u6811\u5185\u7684\u6240\u6709\u53f6\u8282\u70b9\u624d\u80fd\u518d\u9000\u51fa\u3002\n\n\u53c8\u56e0\u4e3a\u8fd9\u662f\u4e00\u9897\u4e8c\u53c9\u6811\uff0c \u6240\u4ee5\u6211\u4eec\u8fdb\u5165\u4e00\u68f5\u4ee5x\u4e3a\u6839\u7684\u5b50\u6811\u7684\u65f6\u5019\u4e00\u5b9a\u662f\u8fdb\u5165x\u7684\u4e00\u4e2a\u5b50\u6811\u7684\u53f6\u8282\u70b9\u8bbf\u95ee\u5230\u7b2c\u4e00\u4e2a\u5728x\u5b50\u6811\u4e2d\u88ab\u8bbf\u95ee\u5230\u7684\u70b9\uff0c \u6700\u540e\u4e00\u4e2a\u88ab\u8bbf\u95ee\u7684\u70b9\u4e00\u5b9a\u5728\u53e6\u4e00\u4e2a\u5b50\u6811\u5185\u3002\n#### \u89c1\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n\ntemplate <class T>\nIN void in(T &x)\n{\n\tx = 0; R char c = gc;\n\tfor (; !isdigit(c); c = gc);\n\tfor (;  isdigit(c); c = gc)\n\tx = (x << 1) + (x << 3) + c - 48;\n}\ntemplate <class T> IN T max(T a, T b) {return a > b ? a : b;}\ntemplate <class T> IN T min(T a, T b) {return a < b ? a : b;}\nFILE* fl;\nint n, cnt;\nll bd;\nstruct INFO {ll din, dout;};\nIN bool cmp1(const INFO &x, const INFO &y) {return x.dout < y.dout;}\nIN bool cmp2(const INFO &x, const INFO &y) {return x.din == y.din ? x.dout < y.dout : x.din < y.din;}\nstruct Edge {int to, len, nex;} edge[MX << 1];\nstd::vector <INFO> stat[MX];\nint head[MX], son[MX][2], dis[MX][2];\nll mn[MX];\nIN void add(R int from, R int to, R int len)\n{edge[++cnt] = {to, len, head[from]}, head[from] = cnt;}\nvoid DFS(R int now, R int fa)\n{\n\tfor (R int i = head[now]; i; i = edge[i].nex)\n\t{\n\t\tif (edge[i].to == fa) continue;\n\t\tif (!ls) DFS(ls = edge[i].to, now), dls = edge[i].len;\n\t\telse if (!rs) DFS(rs = edge[i].to, now), drs = edge[i].len;\n\t}\n}\nvoid solve(std::vector <INFO> &l, std::vector <INFO> &r, std::vector <INFO> &res, R int id)\n{\n\tif (l.size() > r.size()) std::swap(l, r);\n\tint lsiz = l.size(), rsiz = r.size(), cur;\n\tif (!lsiz) return;\n\tstd::sort(l.begin(), l.end(), cmp1);//dout inc\n\tstd::sort(r.begin(), r.end(), cmp2);//din inc\n\tmn[0] = r[0].dout; cur = rsiz - 1;\n\tfor (R int i = 1; i < rsiz; ++i) mn[i] = min(mn[i - 1], r[i].dout);\n\tfor (R int i = 0; i < lsiz; ++i)\n\t{\n\t\tW ((~cur) && l[i].dout + r[cur].din > bd) --cur;\n\t\tif (~cur) res.push_back({l[i].din, mn[cur]});\n\t}\n\tfor (R int i = 0; i < lsiz; ++i) std::swap(l[i].din, l[i].dout);\n\tfor (R int i = 0; i < rsiz; ++i) std::swap(r[i].din, r[i].dout);\n\tstd::sort(l.begin(), l.end(), cmp1);\n\tstd::sort(r.begin(), r.end(), cmp2);\n\tmn[0] = r[0].dout; cur = rsiz - 1;\n\tfor (R int i = 1; i < rsiz; ++i) mn[i] = min(mn[i - 1], r[i].dout);\n\tfor (R int i = 0; i < lsiz; ++i)\n\t{\n\t\tW ((~cur) && l[i].dout + r[cur].din > bd) --cur;\n\t\tif (~cur) res.push_back({mn[cur], l[i].din});\n\t}\n}\nvoid DFS(R int now)\n{\n\tstat[now].clear();\n\tif (!ls) return stat[now].push_back({0, 0}), void();\n\tDFS(ls); DFS(rs);\n\tfor (R int i = stat[ls].size() - 1; ~i; --i) stat[ls][i].din += dls, stat[ls][i].dout += dls;\n\tfor (R int i = stat[rs].size() - 1; ~i; --i) stat[rs][i].din += drs, stat[rs][i].dout += drs;\n\tsolve(stat[ls], stat[rs], stat[now], now);\n}\nIN bool check(R ll v)\n{\n\tbd = v; DFS(1);\n\treturn stat[1].size();\n}\nint main(void)\n{\n\tin(n); int foo, bar;\n\tll lef = 0, rig = 1e10, mid, ans;\n\tfor (R int i = 2; i <= n; ++i)\n\tin(foo), in(bar), add(foo, i, bar), add(i, foo, bar);\n\tDFS(1, 0);\n\tW (lef <= rig)\n\t{\n\t\tmid = lef + rig >> 1;\n\t\tif (check(mid)) ans = mid, rig = mid - 1;\n\t\telse lef = mid + 1;\n\t}\n\tprintf(\"%lld\", ans);\n}\n\n```\n### define\n```cpp\n R register\n IN inline\n W while\n gc getchar()\n ls son[now][0]\n rs son[now][1]\n dls dis[now][0]\n drs dis[now][1]\n MX 200500\n ll long long \n```",
        "postTime": 1566117790,
        "uid": 93598,
        "name": "\u548c\u5f26",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT2172 \u3010Shik and Travel\u3011"
    }
]