[
    {
        "content": "# [[ABC258E] Packing Potatoes](https://www.luogu.com.cn/problem/AT_abc258_e) Solution\n\n[TOC]\n\n## [\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u6233\u6b64\u8fdb\u5165](http://blog.tsawke.com?t=ABC258E)\n\n## \u9898\u9762\n\n\u7ed9\u5b9a\u5e8f\u5217 $ W $\uff0c\u4e0b\u6807\u8303\u56f4\u4e3a $ [0, n - 1] $\u3002\u5b58\u5728\u4e00\u4e2a\u957f\u5ea6\u4e3a $ 10^{100} $ \u7684\u571f\u8c46\u5e8f\u5217\uff0c\u5faa\u73af\u8282\u4e3a $ n $\uff0c\u7b2c $ i $ \u4e2a\u571f\u8c46\u7684\u91cd\u91cf\u4e3a $ W_{(i - 1) \\bmod{n}} $\u3002\u73b0\u5728\u4f60\u9700\u8981\u7528\u7bb1\u5b50\u88c5\u571f\u8c46\uff0c\u6bcf\u4e2a\u7bb1\u5b50\u88c5\u6ee1\u5219\u505c\u6b62\uff0c\u5373\u571f\u8c46\u91cd\u91cf\u6070\u597d\u5927\u4e8e\u7b49\u4e8e $ X $ \u65f6\u5219\u505c\u6b62\u3002$ Q $ \u7ec4\u8be2\u95ee\u6c42\u7b2c $ k_i $ \u4e2a\u7bb1\u5b50\u88c5\u4e86\u591a\u5c11\u4e2a\u571f\u8c46\u3002\n\n## Solution\n\n\u4e00\u9053\u7ec6\u8282\u4e0d\u5c11\u7684\u627e\u89c4\u5f8b\u9898\u3002\n\n\u9996\u5148\u4e0d\u96be\u53d1\u73b0\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u7bb1\u5b50\uff0c\u5f53\u4f60\u786e\u5b9a\u4e86\u4ece\u54ea\u91cc\u5f00\u59cb\u88c5\u540e\uff0c\u5176\u6700\u8fdc\u80fd\u88c5\u5230\u7684\u4f4d\u7f6e\u4e5f\u5c31\u786e\u5b9a\u4e86\u3002\u6211\u4eec\u8003\u8651\u5982\u4f55\u786e\u5b9a\u8fd9\u4e2a\u4e1c\u897f\uff0c\u4e0d\u96be\u60f3\u5230\u505a\u4e2a\u524d\u7f00\u548c\u7136\u540e\u4e8c\u5206\uff0c\u627e\u5230\u5bf9\u5e94\u70b9\u5f00\u59cb\u7684\u6700\u957f\u80fd\u53d6\u7684\u957f\u5ea6\uff0c\u7ec6\u8282\u8f83\u591a\uff0c\u5982\u9700\u8981\u6ce8\u610f\u82e5\u957f\u5ea6\u4ec5\u4e3a\u4e00\u521d\u503c\u9700\u8981\u5224\u65ad\u3002\u56e0\u4e3a\u53ef\u80fd\u8f6c\u56de\u53bb\u6240\u4ee5\u53ef\u4ee5\u5c06\u5e8f\u5217\u590d\u5236\u4e00\u4efd\u7136\u540e\u5728\u8fd9\u4e0a\u9762\u8dd1\u5373\u53ef\u3002\n\n\u6b64\u65f6\u4ecd\u9700\u8981\u6ce8\u610f $ X $ \u53ef\u80fd\u5f88\u5927\u4ee5\u81f3\u4e8e\u6a2a\u8de8\u591a\u6bb5\uff0c\u6b64\u5904\u9700\u8981\u8bb0\u5f55\u3002\u6b64\u65f6\u6211\u4eec\u5373\u6709 $ nxt $ \u6570\u7ec4\u8868\u793a\u4ece\u8be5\u70b9\u5f00\u59cb\u53d6\u5b8c\u571f\u8c46\u4e4b\u540e\u4e0b\u4e00\u6b21\u9700\u8981\u4ece\u54ea\u5f00\u59cb\u53d6\u3002\u4e0d\u96be\u53d1\u73b0\u6bcf\u4e2a\u70b9\u6709\u4e14\u4ec5\u6709\u4e00\u6761\u51fa\u8fb9\uff0c\u5219\u4e00\u5b9a\u4f1a\u6210\u73af\uff0c\u6211\u4eec\u627e\u5230\u4ece $ 1 $ \u5f00\u59cb\u591a\u5c11\u6b65\u540e\u8fdb\u5165\u73af\uff0c\u4ee5\u53ca\u73af\u957f\u548c\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u5143\u7d20\uff0c\u6700\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u8fdb\u5165\u73af\uff0c\u672a\u8fdb\u5165\u5219\u76f4\u63a5\u8c03\u7528\uff0c\u8fdb\u5165\u4e86\u5219\u6a21\u4e00\u4e0b\u627e\u5bf9\u5e94\u4f4d\u7f6e\u3002\u4e2d\u95f4\u7ec6\u8282\u5f88\u591a\uff0c\u8fd9\u9053\u9898\u672c\u8eab\u7684\u96be\u5ea6\u4e5f\u5c31\u5728\u7ec6\u8282\u4e0a\u4e86\uff0c\u5177\u4f53\u53ef\u4ee5\u770b\u4ee3\u7801\u3002\n\n\u590d\u6742\u5ea6\u5361\u5728\u9884\u5904\u7406\u4e0a\uff0c\u6700\u7ec8\u590d\u6742\u5ea6 $ O(n \\log n) $\u3002\n\n## Code\n\n```cpp\n#define _USE_MATH_DEFINES\n#include <bits/stdc++.h>\n\n#define PI M_PI\n#define E M_E\n#define npt nullptr\n#define SON i->to\n#define OPNEW void* operator new(size_t)\n#define ROPNEW(arr) void* Edge::operator new(size_t){static Edge* P = arr; return P++;}\n\nusing namespace std;\n\nmt19937 rnd(random_device{}());\nint rndd(int l, int r){return rnd() % (r - l + 1) + l;}\nbool rnddd(int x){return rndd(1, 100) <= x;}\n\ntypedef unsigned int uint;\ntypedef unsigned long long unll;\ntypedef long long ll;\ntypedef long double ld;\n\ntemplate < typename T = int >\ninline T read(void);\n\nint N, Q, X;\nint W[410000];\nll sum[410000];\nint nxt[210000];\nll siz[210000];\nll lftans(0);\nbitset < 210000 > vis;\nint pos[210000];\nint mark[210000];\nint pre[210000];\n\nint main(){\n    // freopen(\"in.txt\", \"r\", stdin);\n    N = read(), Q = read(), X = read();\n    for(int i = 1; i <= N; ++i)sum[i] = sum[i - 1] + (W[i] = read());\n    copy(W + 1, W + N + 1, W + N + 1);\n    for(int i = N + 1; i <= N << 1; ++i)sum[i] = sum[i - 1] + W[i];\n    ll tot = sum[N];\n    lftans += ll(X / tot) * N;\n    X %= tot;\n    if(!X)lftans -= N, X += tot;\n    for(int i = 1; i <= N; ++i){\n        int l = i, r = N << 1, ans(i - 1);\n        while(l <= r){\n            int mid = (l + r) >> 1;\n            if(sum[mid] - sum[i - 1] < X)ans = mid, l = mid + 1;\n            else r = mid - 1;\n        }nxt[i] = ans += 2;\n        siz[i] = lftans + (nxt[i] - i);\n        if(nxt[i] > N)nxt[i] -= N;\n    }\n    queue < int > path;\n    int cur = 1, len = 0;\n    while(!vis[cur]){\n        path.push(cur);\n        vis[cur] = true;\n        mark[++len] = cur;\n        cur = nxt[cur];\n    }int cnt(0);\n    while(path.front() != cur)pre[++cnt] = path.front(), path.pop();\n    len = 0;\n    while(!path.empty())pos[++len] = path.front(), path.pop();\n    pos[0] = pos[len];\n    while(Q--){\n        ll K = read < ll >();\n        if(K <= cnt)printf(\"%lld\\n\", siz[pre[K]]);\n        else printf(\"%lld\\n\", siz[pos[(K - cnt) % len]]);\n    }\n    fprintf(stderr, \"Time: %.6lf\\n\", (double)clock() / CLOCKS_PER_SEC);\n    return 0;\n}\n\ntemplate < typename T >\ninline T read(void){\n    T ret(0);\n    int flag(1);\n    char c = getchar();\n    while(c != '-' && !isdigit(c))c = getchar();\n    if(c == '-')flag = -1, c = getchar();\n    while(isdigit(c)){\n        ret *= 10;\n        ret += int(c - '0');\n        c = getchar();\n    }\n    ret *= flag;\n    return ret;\n}\n```\n\n## UPD\n\nupdate-2022_12_13 \u521d\u7a3f",
        "postTime": 1670929729,
        "uid": 362938,
        "name": "Tsawke",
        "ccfLevel": 6,
        "title": "[ABC258E] Packing Potatoes \u9898\u89e3"
    }
]