[
    {
        "content": "[Blog](https://autumnkite.github.io/atcoder-cfoo15G-sol/)\u98df\u7528\u6548\u679c\u66f4\u4f73\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://code-festival-2015-okinawa-open.contest.atcoder.jp/tasks/code_festival_2015_okinawa_g)\n\n## \u9898\u610f\n\n\u6709\u4e24\u4e2a\u6709\u5e8f\u4e8c\u5143\u7ec4 $(A,B),(C,D)$\uff0c$A,B$ \u7ed9\u5b9a\u4e14\u4fdd\u8bc1 $A\\ge B$\uff0c$C,D$ \u4e00\u5f00\u59cb\u4e3a $0$\u3002\u53e6\u5916\u7ed9\u5b9a $n$ \u4e2a\u6709\u5e8f\u4e8c\u5143\u7ec4 $(p_i,q_i)$\uff0c\u6709\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n1. $A\\gets A-1,C\\gets C+1$\n2. $B\\gets B-1,D\\gets D+1$\n\n\u4e0d\u65ad\u6267\u884c\u8fd9\u4e24\u79cd\u64cd\u4f5c\uff0c\u76f4\u5230\u4e8c\u5143\u7ec4\u53d8\u4e3a $(0,0),(A',B')$\uff0c\u5176\u4e2d $A',B'$ \u8868\u793a\u6700\u521d\u7684 $A,B$\u3002\u4f46**\u4efb\u610f\u65f6\u523b**\u90fd\u9700\u8981\u6ee1\u8db3\uff1a\n\n1. $A\\ge B,C\\ge D$\n2. $\\forall i\\in [1,n],(A,B)\\ne (p_i,q_i),(C,D)\\ne (p_i,q_i)$\u3002\n\n\u6c42\u65b9\u6848\u6570 $\\bmod (10^9+7)$ \u7684\u503c\u3002\n\n\u8bb0\u64cd\u4f5c\u5e8f\u5217\u4e3a\u7531\u6bcf\u6b21\u7684\u64cd\u4f5c\u7f16\u53f7\u7ec4\u6210\u7684\u957f\u5ea6\u4e3a $A'+B'$ \u7684\u5e8f\u5217\uff0c\u5219\u4e24\u4e2a\u65b9\u6848\u4e0d\u540c\u5f53\u4e14\u4ec5\u5f53\u4e24\u4e2a\u65b9\u6848\u7684\u64cd\u4f5c\u5e8f\u5217\u4e0d\u540c\u3002\n\n$1\\le B\\le A\\le 10^5,0\\le n\\le 20$\n\n## \u9898\u89e3\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u9898\u76ee\u53ef\u4ee5\u8f6c\u5316\u4e3a\uff1a\n\n> \u4ece $(0,0)$ \u8d70\u5230 $(A,B)$\uff0c\u6bcf\u6b21\u53ea\u80fd\u8d70 $(+1,0)$ \u6216 $(0,+1)$\uff08\u5373\u53ea\u80fd\u5411\u4e0a\u3001\u5411\u53f3\u8d70\uff09\uff0c\u6c42\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u7684\u65b9\u6848\u6570\uff1a\n> 1. \u5bf9\u4e8e\u6240\u6709\u7ecf\u8fc7\u7684\u70b9 $(x,y)$\uff0c$x\\ge y,A-x\\ge B-y$\n> 2. \u4e0d\u80fd\u7ecf\u8fc7\u70b9 $(p_i,q_i),(A-p_i,B-q_i)$\u3002\n\n\u628a $(A,B)$ \u548c\u6240\u6709\u4e0d\u80fd\u7ecf\u8fc7\u7684\u70b9\u79f0\u4e3a\u969c\u788d\u70b9\uff0c\u628a\u969c\u788d\u70b9\u6309\u4e00\u5b9a\u987a\u5e8f\u6392\u5e8f\u540e\uff0c\u53ef\u4ee5\u5f88\u8f7b\u677e\u5730\u5199\u51fa\u4e00\u4e2a DP\uff1a\n\n$dp_i$ \u8868\u793a\u5230\u8fbe\u969c\u788d\u70b9 $i$ \u7684\u65b9\u6848\u6570\uff0c\u5219 $dp_i=solve(0,i)-\\sum dp_j+solve(j,i)$\uff0c\u5176\u4e2d $j$ \u5728 $i$ \u7684\u5de6\u4e0b\u65b9\uff0c$solve(j,i)$ \u8868\u793a $j$ \u5230 $i$ \u7684\u65b9\u6848\u6570\uff0c$solve(0,i)$ \u8868\u793a $(0,0)$ \u5230 $i$ \u7684\u65b9\u6848\u6570\u3002\n\n\u53d1\u73b0\u5173\u952e\u5728\u4e8e\u5982\u4f55\u6c42 $solve(i,j)$ \u7684\u503c\u3002\u90a3\u4e48\u95ee\u9898\u53c8\u8f6c\u5316\u4e3a\uff1a\n\n> \u4ece $(x_1,y_1)$ \u8d70\u5230 $(x_2,y_2)$\uff0c\u53ea\u80fd\u5411\u4e0a\u3001\u5411\u53f3\u8d70\uff0c\u6ee1\u8db3\u6240\u6709\u7ecf\u8fc7\u7684\u70b9 $(x,y)$ \u5728\u76f4\u7ebf $y=x$ \u548c $y=x-(A-B)$ \u4e4b\u95f4\uff08\u5305\u62ec\u8fd9\u4e24\u6761\u76f4\u7ebf\u4e0a\u7684\u70b9\uff09\uff0c\u6c42\u65b9\u6848\u6570\u3002\n\n![\u56fe 1](https://autumnkite.github.io/files/at-cfoo15g-pic1.png)\n\n\u7c7b\u4f3c\u4e0a\u56fe\u4e2d\u7684\u60c5\u51b5\uff0c\u6c42 $(x_1,y_2)$ \u5230 $(x_2,y_2)$ \u7684\u65b9\u6848\u6570\u3002\n\n\u9996\u5148\uff0c\u4e3a\u65b9\u4fbf\u8d77\u89c1\uff0c\u628a\u4e24\u6761\u76f4\u7ebf\u5206\u522b\u5411\u4e0a\u3001\u5411\u4e0b\u79fb\u52a8\u4e00\u4e2a\u5355\u4f4d\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u4e0d\u80fd\u78b0\u5230\u8fd9\u4e24\u6761\u76f4\u7ebf\uff0c\u78b0\u5230\u5373\u7b97\u4e0d\u7b26\u5408\u3002\n\n\u8003\u8651\u6240\u6709\u60c5\u51b5\u51cf\u53bb\u4e0d\u7b26\u5408\u8981\u6c42\u7684\u60c5\u51b5\uff0c\u6240\u6709\u60c5\u51b5\u53ef\u4ee5\u7528\u7ec4\u5408\u6570\u76f4\u63a5\u8ba1\u7b97\uff0c\u90a3\u4e48\u6211\u4eec\u8981\u8ba1\u7b97\u4e0b\u56fe\u4e2d\u7684\u4e24\u79cd\u60c5\u51b5\u7684\u65b9\u6848\u6570\u3002\n\n![\u56fe 2](https://autumnkite.github.io/files/at-cfoo15g-pic2.png)\n\n\u6211\u4eec\u5148\u8003\u8651\u5de6\u56fe\u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u5de6\u56fe\u7684\u60c5\u51b5\u53ef\u4ee5\u628a\u5269\u4f59\u90e8\u5206\u6309\u76f4\u7ebf $y=x+1$ \u5bf9\u79f0\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a\n\n![\u56fe 3](https://autumnkite.github.io/files/at-cfoo15g-pic3.png)\n\n\u6b64\u65f6 $(x_1,y_1)$ \u5230 $(x_2,y_2)$ \u4e00\u5b9a\u4f1a\u78b0\u5230 $y=x+1$\uff0c\u5373\u56fe 2 \u4e2d\u5de6\u56fe\u7684\u60c5\u51b5\u3002\n\n\u53ef\u662f\u4f1a\u53d1\u73b0\uff0c\u5982\u679c\u4e00\u4e2a\u65b9\u6848\u7a7f\u8fc7\u4e86 $y=x+1$\uff0c\u7136\u540e\u53c8\u7a7f\u8fc7\u4e86 $y=x-(A-B)-1$\uff0c\u5219\u8fd9\u4e2a\u65b9\u6848\u4f1a\u88ab\u91cd\u590d\u8ba1\u7b97\uff0c\u9700\u8981\u51cf\u53bb\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u79f0\u540e\uff0c$y=x-(A-B)-1$ \u8fd9\u6761\u76f4\u7ebf\u5230\u4e86\u6700\u4e0a\u9762\uff0c\u5373\u6b64\u65f6\u7684\u60c5\u51b5\u4e3a\uff08\u4e0b\u56fe\u4e2d\u7684\u5de6\u56fe\uff09\uff1a\n\n![\u56fe 4](https://autumnkite.github.io/files/at-cfoo15g-pic4.png)\n\n\u90a3\u4e48\u540c\u6837\uff0c\u5bf9\u79f0\u540e\u8ba1\u7b97\uff08\u5982\u4e0a\u56fe\u53f3\u56fe\u6240\u793a\uff09\u3002\n\n\u5982\u679c\u8fd8\u6709\u91cd\u590d\u60c5\u51b5\uff08\u5373\u4e0a\u4e0b\u4e0a\u3001\u4e0a\u4e0b\u4e0a\u4e0b\u7b49\u60c5\u51b5\uff09\uff0c\u5219\u7ee7\u7eed\u5bf9\u79f0\u5373\u53ef\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u53ca\u7ec6\u8282\u89c1\u4ee3\u7801\u3002\n\n## \u4ee3\u7801\n\n\u6ce8\u610f\uff0c\u4ee3\u7801\u5e76\u4e0d\u662f\u6bcf\u6b21\u4f5c\u5bf9\u79f0\u7136\u540e\u5224\u65ad\u6b63\u8d1f\u7684\uff0c\u800c\u662f\u628a\u6240\u6709\u8d1f\u7684\u90fd\u51cf\u6389\uff0c\u518d\u628a\u6240\u6709\u6b63\u7684\u52a0\u4e0a\uff0c\u6240\u4ee5\u4e0e\u4e0a\u9762\u7684\u5206\u6790\u6709\u6240\u51fa\u5165\uff0c\u8bf7\u4ed4\u7ec6\u7406\u89e3\u3002\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#define P 1000000007\nint A, B, n, m, fac[200005], inv[200005], dp[50];\nstruct node{\n\tint x, y;\n\tbool operator < (const node &res) const {\n\t\treturn x < res.x || x == res.x && y < res.y;\n\t}\n\tbool operator == (const node &res) const {\n\t\treturn x == res.x && y == res.y;\n\t}\n}p[50];\nbool check(int m){\n\treturn p[m].y <= p[m].x && p[m].y >= p[m].x - A + B;\n}\nint qpow(int a, int b){\n\tint s = 1;\n\tfor (; b; b >>= 1, a = 1ll * a * a % P) if (b & 1) s = 1ll * s * a % P;\n\treturn s;\n}\nvoid pre(int n){\n\tfac[0] = 1;\n\tfor (register int i = 1; i <= n; ++i) fac[i] = 1ll * fac[i - 1] * i % P;\n\tinv[n] = qpow(fac[n], P - 2);\n\tfor (register int i = n; i; --i) inv[i - 1] = 1ll * inv[i] * i % P;\n}\nint F(node a, node b){\n\tif (a.x > b.x || a.y > b.y) return 0;\n\treturn 1ll * fac[b.x - a.x + b.y - a.y] * inv[b.x - a.x] % P * inv[b.y - a.y] % P;\n}\nvoid add(int &x, int y){ (x += y) >= P ? x -= P : 0; }\nvoid del(int &x, int y){ (x -= y) < 0 ? x += P : 0; }\nint calc(node a, node b){ // \u8ba1\u7b97 a \u5230 b \u7684\u65b9\u6848\u6570\uff0c\u4e3b\u8981\u96be\u5728\u8fd9\u4e2a\u51fd\u6570\n\tint res = F(a, b), w = A - B + 2;\n\tfor (register node c = (node){b.y - 1, b.x + 1}; c.x >= a.x; c.x -= w, c.y += w) del(res, F(a, c));\n\tfor (register node c = (node){b.x - w, b.y + w}; c.x >= a.x; c.x -= w, c.y += w) add(res, F(a, c));\n\tfor (register node c = (node){b.y + w - 1, b.x - w + 1}; c.y >= a.y; c.x += w, c.y -= w) del(res, F(a, c));\n\tfor (register node c = (node){b.x + w, b.y - w}; c.y >= a.y; c.x += w, c.y -= w) add(res, F(a, c));\n\treturn res;\n}\nint main(){\n\tscanf(\"%d%d%d\", &A, &B, &n), pre(A + B);\n\tif (A == B) return printf(\"0\\n\"), 0;\n\tfor (register int i = 1, x, y; i <= n; ++i){\n\t\tscanf(\"%d%d\", &x, &y);\n\t\tif (!x && !y) return printf(\"0\\n\"), 0;\n\t\tif (x == A && x == B) return printf(\"0\\n\"), 0;\n\t\tp[++m] = (node){x, y}, !check(m) ? --m : 0;\n\t\tp[++m] = (node){A - x, B - y}, !check(m) ? --m : 0;\n\t}\n\tp[0] = (node){0, 0}, p[++m] = (node){A, B};\n\tstd :: sort(p + 1, p + 1 + m);\n\tm = std :: unique(p + 1, p + 1 + m) - p - 1;\n\tfor (register int i = 1; i <= m; ++i){\n\t\tdp[i] = calc(p[0], p[i]);\n\t\tfor (register int j = 1; j < i; ++j)\n\t\t\t(dp[i] -= 1ll * dp[j] * calc(p[j], p[i]) % P) < 0 ? dp[i] += P : 0;\n\t}\n\tprintf(\"%d\\n\", dp[m]);\n}\n```\n",
        "postTime": 1550903093,
        "uid": 20561,
        "name": "AutumnKite",
        "ccfLevel": 10,
        "title": "\u300cAT1729\u300d\u300cCODE FESTIVAL 2015 OKINAWA OPEN\u300dGorgeous Vases"
    }
]