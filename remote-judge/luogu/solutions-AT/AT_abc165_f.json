[
    {
        "content": "## \u9898\u89e3\n\n\u9898\u610f\u7b80\u8ff0\uff1a\u6c42\u6811\u4e0a\u7684$\\text{LIS(Longest Increasing Sequence)}$\u3002\n\n\u6811\u4e0a\u5e8f\u5217\u7684\u9898\uff0c\u5148\u77e5\u9053\u5728\u4e00\u4e2a\u5e8f\u5217\u4e0a\u600e\u4e48\u6c42\u540e\uff0c\u76f4\u63a5\u5957\u6811\u4e0a\uff0c\u904d\u5386\u5b8c\u5b50\u6811\u65f6\u56de\u6eaf\u5373\u53ef\u3002\n\n\u6240\u4ee5\u6211\u5f00\u9898\u987a\u5e8f\u662f $ABFCD$\uff0c$E$ \u6ca1\u505a\u51fa\u6765\uff08\uff08\u3002\n\n\u6211\u7684\u65b9\u6cd5\u662f\u4e8c\u5206\u505a\u7684\u3002\n\n\u9996\u5148\u5148\u770b\u4e00\u4e2a\u5e8f\u5217 $a[]$ \u4e0a\u5904\u7406\u7684\u65b9\u5f0f\u3002\n\n\u5efa\u7acb\u4e00\u4e2a\u6570\u7ec4 $f[i]$\uff0c\u542b\u4e49\u662f\u957f\u5ea6\u4e3a $i$ \u7684 $\\text{LIS}$ \u7684\u7ed3\u5c3e\u662f $f[i]$ \u3002 $ans[i]$ \u8868\u793a $[1,n]$ \u4e2d $\\text{LIS}$ \u6700\u5927\u7684\u957f\u5ea6\u7684\u503c\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u6570\uff0c$ans[1]=1$\uff0c$f[1]=a[1]$\u3002\n\n\u5bf9\u4e8e\u4e4b\u540e\u7684\u6570\uff0c\u4e8c\u5206\u51fa\u6700\u5927\u7684 $f[j]$\uff0c\u4e14 $f[j]<a[i]$\u3002\u6240\u4ee5 $f[j+1]=a[i]$\u3002\u5982\u679c $j+1>ans[i-1]$\uff0c\u90a3\u4e48 $ans[i]=ans[i-1]+1$\uff0c\u5426\u5219 $ans[i]=ans[i-1]$\u3002\n\n\u90a3\u4e48\u8f6c\u79fb\u5230\u6811\u4e0a\u7684\u8bdd\uff0c\u663e\u7136\u56de\u6eaf\u65f6\u9700\u8981\u4fee\u6539\u7684\u662f $f[]$\u3002\n\n\u5982\u679c\u8fd8\u4e0d\u660e\u767d\uff0c\u5c31\u662f\u4f60\u60f3\u60f3 $dfs$ \u904d\u5386\u6811\u7684\u8fc7\u7a0b\uff0c\u7b2c\u4e00\u6b21\u4f1a\u4e00\u76f4\u6cbf\u5de6\u5b50\u8282\u70b9\u4e00\u76f4\u904d\u5386\u3002\u90a3\u4e48\u904d\u5386\u7684\u5c31\u662f\u4e00\u4e2a\u5e8f\u5217\uff0c\u4e2d\u95f4\u8ba1\u7b97\u5e76\u66f4\u65b0\u8fd9\u51e0\u4e2a\u8282\u70b9\u7684 $ans[]$\u3002\u5230\u4e86\u53f6\u8282\u70b9\u540e\u4e0b\u4e00\u4e2a\u5c31\u8981\u904d\u5386\u5f53\u524d\u8282\u70b9\u7684\u5144\u5f1f\u8282\u70b9\uff08\u8282\u70b9\u7684\u7236\u4eb2\u7684\u53f3\u8282\u70b9\uff09\uff0c\u6545\u4e4b\u524d\u66f4\u65b0\u7684 $f[]$ \u8981\u53d8\u56de\u539f\u6765\u7684\u6570\uff0c\u518d\u904d\u5386\u5f53\u524d\u8282\u70b9\u7684\u5144\u5f1f\u8282\u70b9\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n\n#define ll long long\n\nusing namespace std;\n\nconst int MAXN = 200010;\nconst int MAXM = 100010;\nconst int INF = 0x3f3f3f3f;\nconst int mod = 1e9 + 7;\n\nint n, m, k;\nint tot, cnt;\n\nint a[MAXN], f[MAXN], ans[MAXN];\nint head[MAXN];\n\nstruct edge {\n\tint to, next;\n}e[MAXN * 2];\n\nvoid add_edge(int x, int y) {\n\te[++tot].to = y;\n\te[tot].next = head[x];\n\thead[x] = tot;\n\treturn;\n}\n\nvoid Dfs(int x, int fa) {\n\tint last;\n\tint l = 1, r = ans[fa], mid;\n\tif (!fa) f[1] = a[x], ans[1] = 1;\n\telse {\n\t\twhile (l <= r) {\n\t\t\tmid = (l + r) >> 1;\n\t\t\tif (a[x] <= f[mid]) r = mid - 1;\n\t\t\telse l = mid + 1;\n\t\t}\n\t\tlast = f[l];\n\t\tf[l] = a[x];\n\t\tans[x] = ans[fa];\n\t\tif (l > ans[fa]) ++ans[x];\n\t}\n\tfor (int i = head[x]; i; i = e[i].next) {\n\t\tint v = e[i].to;\n\t\tif (v != fa) Dfs(v, x);\n\t}\n\tf[l] = last;\n\treturn;\n}\n\nint main(){\n\tint t;\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; i++) {\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\tfor (int i = 1, u, v; i < n; i++) {\n\t\tscanf(\"%d%d\", &u, &v);\n\t\tadd_edge(u, v);\n\t\tadd_edge(v, u);\n\t}\n\t\n\tDfs(1, 0);\n\t\n\tfor (int i = 1; i <= n; i++) {\n\t\tprintf(\"%d\\n\", ans[i]);\n\t}\n\treturn 0;\n}\n```\n\n\u7801\u98ce\u597d\u770b\u5427/cy\n",
        "postTime": 1588584914,
        "uid": 18673,
        "name": "ctq1999",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 AT5392 [ABC165F] LIS on Tree"
    },
    {
        "content": "\u535a\u5ba2\u5185\u9605\u8bfb\u6548\u679c\u66f4\u4f73\uff0c\u611f\u8c22\u60a8\u7684\u9605\u8bfb\u3002\n\n### \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u70b9\u7684\u6811\uff0c\u6bcf\u4e2a\u70b9\u4e0a\u90fd\u6709\u4e00\u4e2a\u503c\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u6811\u4e0a\u7684\u70b9 $k \\in [1,n]$\uff0c\u6c42\u51fa\u7531 $1$ \u5f84\u76f4\u8d70\u5230 $k$ \u6240\u7ecf\u8fc7\u7684\u503c\u5f62\u6210\u7684\u5e8f\u5217\u7684\u6700\u957f\u4e25\u683c\u4e0a\u5347\u5b50\u5e8f\u5217\u3002\n\n### \u89e3\u9898\n\n\u5982\u679c\u662f\u5728\u5e8f\u5217\u4e0a\u8dd1 LIS\uff0c\u60f3\u5fc5\u5927\u5bb6\u90fd\u5df2\u7ecf\u4e86\u89e3\u5176 $O(n \\log n)$ \u7684\u89e3\u6cd5\u3002\u53ef\u4ee5\u7528 \u6811\u72b6\u6570\u7ec4 / \u8d2a\u5fc3 + \u4e8c\u5206 \u7684\u65b9\u5f0f\u6765\u89e3\u51b3\u3002\u6ca1\u6709\u5b66\u8fc7 $O(n \\log n)$ \u6c42 LIS \u7684\u540c\u5b66\u53ef\u4ee5\u53c2\u89c1 [P1020 \u5bfc\u5f39\u62e6\u622a](https://www.luogu.com.cn/problem/P1020)\uff0c\u5728\u6b64\u5c31\u4e0d\u518d\u8d58\u8ff0\u3002\n\n\u60f3\u4e86\u60f3\u8fd9\u9053\u9898\u662f\u5728\u6811\u4e0a\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u4e0d\u662f\u5f88\u597d\u64cd\u4f5c\uff08\u5982\u679c\u60a8\u6709\u6811\u72b6\u6570\u7ec4\u89e3\u6cd5\u53ef\u4ee5\u8bc4\u8bba\uff09\uff0c\u4e8e\u662f\u8003\u8651\u7528\u540e\u4e00\u79cd\u65b9\u6cd5\u3002\n\n\u4ee4 $low_i$ \u8868\u793a\u4ece $1$ \u5230\u5f53\u524d\u4f4d\u7f6e\u6240\u5f62\u6210\u7684\u5e8f\u5217\u4e2d\u957f\u4e3a $i$ \u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u672b\u5c3e\u6240\u80fd\u8fbe\u5230\u7684\u6700\u5c0f\u6570\u5b57\u3002\n\n\u6211\u4eec dfs \u904d\u5386\u6b64\u6811\u3002\u73b0\u5728\u552f\u4e00\u7684\u95ee\u9898\u662f\uff0c\u7531\u4e8e\u6211\u4eec\u662f\u6309 dfs \u5e8f\u904d\u5386\uff0c\u6211\u4eec\u5728\u56de\u6eaf\u65f6\u9700\u8981\u64a4\u56de\u4e00\u4e9b\u64cd\u4f5c\u3002\n\n\u56de\u987e\u7ef4\u62a4 $low$ \u6570\u7ec4\u7684\u65b9\u6cd5\u2014\u2014\u6211\u4eec\u662f\u5982\u4f55\u7ef4\u62a4 $low$ \u6570\u7ec4\u7684\uff1f\n\n+ \u5f53 $val_u > low_{len}$\uff0c\u4ee4 `low[++len] = val[u]`\u3002\n\n+ \u5f53 $val_u \\leq low_{len}$\uff0c\u4e8c\u5206\u67e5\u627e\u6ee1\u8db3 $low_i < val_u \\leq low_{i+1}$ \u7684\u4f4d\u7f6e\uff0c\u628a $low_{i+1}$ \u66ff\u6362\u4e3a $val_u$\u3002\n\n\u663e\u7136\u6211\u4eec\u6bcf\u6b21\u7ecf\u8fc7\u4e00\u4e2a\u70b9\uff0c\u90fd\u53ea\u4f1a\u5bf9 $low$ \u6570\u7ec4\u4e2d $1$ \u4e2a\u4f4d\u7f6e\u8fdb\u884c\u4fee\u6539 \u2014\u2014 \u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u8bb0\u5f55\u4e0b $low$ \u6570\u7ec4\u4fee\u6539\u7684\u4f4d\u7f6e\u548c\u4fee\u6539\u524d\u8be5\u4f4d\u7f6e\u7684\u503c\uff0c\u5728\u56de\u6eaf\u65f6\u8fd8\u539f\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u7ec6\u8282\u8fd8\u8bf7\u79fb\u6b65\u4ee3\u7801\u3002\n\n### \u7a0b\u5e8f\n\n```cpp\n\nint n, f[Maxn], val[Maxn], low[Maxn];\n\nstruct Edge {\n    int next, to;\n}\nedge[Maxn * 2];\nint head[Maxn], edge_num = 1;\n\nvoid add_edge(int from, int to) {\n    edge[++edge_num].next = head[from];\n    edge[edge_num].to = to;\n    head[from] = edge_num;\n}\n\npair <int, int> update(int l, int r, int v) {\n    while(l < r) {\n        int mid = (l + r) >> 1;\n        if(low[mid] < v) l = mid + 1;\n        else r = mid;\n    }\n    int temp = low[l];\n    low[l] = v;\n    return make_pair(l, temp);\n} // \u4e8c\u5206 + \u8d2a\u5fc3 \u90e8\u5206\n\nvoid dfs(int u, int fa, int len) {\n    bool flag;\n    pair <int, int> info;\n    if(val[u] > low[len]) low[++len] = val[u], flag = 1;\n    else info = update(0, len, val[u]), flag = 0;\n    f[u] = len;\n    for(int i = head[u]; i; i = edge[i].next) {\n        int v = edge[i].to;\n        if(v == fa) continue;\n        dfs(v, u, len);\n    }\n    if(flag) low[len] = 0;\n    else low[info.first] = info.second;\n} // \u6309 dfs \u5e8f\u8fdb\u884c\u904d\u5386\n\nint main() {\n    n = read();\n    for(int i = 1; i <= n; ++i) val[i] = read();\n    int u, v;\n    for(int i = 1; i < n; ++i) {\n        u = read(); v = read();\n        add_edge(u, v);\n        add_edge(v, u);\n    }\n    dfs(1, 0, 0);\n    for(int i = 1; i <= n; ++i) printf(\"%d\\n\", f[i]);\n    return 0;\n}\n```\n",
        "postTime": 1588468975,
        "uid": 39278,
        "name": "Sqrtyz",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 AT5392 \u3010[ABC165F] LIS on Tree\u3011"
    },
    {
        "content": "\u65e2\u7136\u6ca1\u6709\u6811\u72b6\u6570\u7ec4\u9898\u89e3\u6211\u5c31\u6765\u6c34\u4e00\u7bc7\n\n---\n\n### \u9898\u89e3\uff1a\n\n\u65e2\u7136\u662f\u6b63\u5e38LIS\u7684\u6811\u4e0a\u7248\uff0c\u90a3\u6211\u4eec\u5c31\u5728\u539f\u505a\u6cd5\u2014\u2014\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4dp\u7684\u57fa\u7840\u4e0a\u5957\u4e2adfs\u6765\u904d\u5386\u8fd9\u68f5\u6811\n\n\u7531\u4e8e\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u7684\u662f\u524d\u7f00max\uff0c\u800cmax\u65e0\u6cd5\u76f4\u63a5\u56de\u64a4\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u4fee\u6539\u65f6\u53ef\u4ee5\u540c\u65f6\u4fdd\u5b58\u539f\u503c\uff0c\u6700\u540e\u518d\u7528\u539f\u503c\u8986\u76d6\u56de\u6765\u5c31\u597d\u4e86\n\n\u7531\u4e8e\u4e00\u4e2a\u70b9\u6700\u591a\u9700\u4fdd\u5b58log\u4e2a\u539f\u503c\uff0c\u6240\u4ee5\u7a7a\u95f4\u590d\u6742\u5ea6\u662f\u4e00\u53ealog\u7684\uff0c\u4e0e\u65f6\u95f4\u76f8\u540c\n\n\u8981\u6ce8\u610f\u7684\u662f\u9898\u76ee\u95ee\u7684\u662f\u94fe\u4e0a\u7684LIS\uff0c\u800c\u6211\u4eec\u5f97\u5230\u7684\u662f\u4ee5i\u7ed3\u5c3e\u7684LIS\uff0c\u6240\u4ee5\u6700\u540e\u8fd8\u8981\u505a\u4e00\u904d\u6811\u4e0a\u524d\u7f00max\uff0c\u5f97\u5230\u6700\u7ec8\u7b54\u6848\n\n---\n\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#ifdef ONLINE_JUDGE\n#define getchar gc\ninline char gc(){\n\tstatic char buf[1<<16],*p1=buf,*p2=buf;\n\tif(p1==p2){\n\t\tp2=(p1=buf)+fread(buf,1,1<<16,stdin);\n\t\tif(p2==p1) return EOF;\n\t}\n\treturn *p1++;\n}\n#endif\ntemplate<class t> inline t read(t &x){\n    char c=getchar();bool f=0;x=0;\n    while(!isdigit(c)) f|=c=='-',c=getchar();\n    while(isdigit(c)) x=(x<<1)+(x<<3)+(c^48),c=getchar();\n    if(f) x=-x;return x;\n}\ntemplate<class t> inline void write(t x){\n    if(x<0) putchar('-'),write(-x);\n    else{if(x>9) write(x/10);putchar('0'+x%10);}\n}\n\nconst int N=2e5+5;\nint num[N],n,un,a[N],tr[N],ans[N],tp[N][21],cur;\nvector<int> g[N];\n\n#define lowbit(x) (x&(-x))\n\nvoid up(int x,int v){\n\twhile(x<=un){\n\t\ttp[cur][++tp[cur][0]]=tr[x]; //\u4fdd\u5b58\u539f\u503c\n\t\ttr[x]=max(tr[x],v);\n\t\tx+=lowbit(x);\n\t}\n}\n\nint que(int x){\n\tint res=0;\n\twhile(x){\n\t\tres=max(res,tr[x]);\n\t\tx-=lowbit(x);\n\t}\n\treturn res;\n}\n\nvoid reset(int x){\n\tint n=0;\n\twhile(x<=un){\n\t\ttr[x]=tp[cur][++n]; //\u7528\u539f\u503c\u8986\u76d6\n\t\tx+=lowbit(x);\n\t}\n}\n\nvoid dfs(int x,int fa){\n\tans[x]=que(a[x]-1)+1;\n\tcur=x;\n\tup(a[x],ans[x]);\n\tfor(int y:g[x]) if(y^fa) dfs(y,x);\n\tcur=x;\n\treset(a[x]);\n}\n\nvoid pre(int x,int fa){ //\u53d6\u4e2a\u6811\u4e0a\u524d\u7f00max\n\tans[x]=max(ans[x],ans[fa]);\n\tfor(int y:g[x]) if(y^fa) pre(y,x);\n}\n\nsigned main(){\n\tread(n);\n\tfor(int i=1;i<=n;i++) num[i]=read(a[i]);\n\tsort(num+1,num+1+n);\n\tun=unique(num+1,num+1+n)-num-1;\n\tfor(int i=1;i<=n;i++) a[i]=lower_bound(num+1,num+1+un,a[i])-num;\n\tfor(int i=1,x,y;i<n;i++){\n\t\tread(x);read(y);\n\t\tg[x].push_back(y);\n\t\tg[y].push_back(x);\n\t}\n\tdfs(1,0);\n\tpre(1,0);\n\tfor(int i=1;i<=n;i++) write(ans[i]),puts(\"\");\n}\n```",
        "postTime": 1588907398,
        "uid": 65735,
        "name": "yuzhechuan",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 AT5392 \u3010[ABC165F] LIS on Tree\u3011"
    },
    {
        "content": "\u4e4b\u524d\u6211\u4eec\u6c42 LIS \u6709\u4e24\u79cd\u505a\u6cd5\uff0c\u4e8c\u5206\u6216\u6811\u72b6\u6570\u7ec4\u3002\n\n\u800c\u6811\u72b6\u6570\u7ec4\u53ef\u4ee5\u7531\u53e6\u4e00\u79cd\u6570\u636e\u7ed3\u6784\u4ee3\u66ff -> \u7ebf\u6bb5\u6811\u3002\n\n\u518d\u770b\u6811\u4e0a\u7684\u95ee\u9898\uff0c\u6211\u4eec\u5176\u5b9e\u662f\u4ee5\u7236\u4eb2\u7684\u72b6\u6001\u4e3a\u5386\u53f2\u72b6\u6001\u6765\u5efa\u7acb\u7ebf\u6bb5\u6811\u5e76\u63d2\u5165\u4e00\u4e2a\u70b9\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811/\u4e3b\u5e2d\u6811\u6765\u67e5\u627e\u533a\u95f4\u6700\u5927\u503c\u3002\n\n\u53ef\u4ee5\u76f4\u63a5\u53bb\u642c\u4e2a\u6a21\u677f\uff0c\u6240\u4ee5\u5176\u5b9e\u4e0d\u7528\u5199\u592a\u591a\u3002\n\n\u8fd9\u79cd\u65b9\u6cd5\u601d\u7ef4\u96be\u5ea6\u6781\u4f4e\uff0c\u57fa\u672c\u662f\u4e00\u773c\u770b\u51fa\u6765\uff0c\u4ee3\u7801\u96be\u5ea6\u4e5f\u4e0d\u7b97\u9ad8\uff0c\u53ef\u4ee5\u53bb\u642c\u6a21\u677f\u6216\u8005\u624b\u6253\u4e00\u904d\u3002\n\n\u6700\u540e\u8bb0\u5f97\u8981\u4e0e\u7236\u4eb2\u7684\u7b54\u6848\u53d6 $\\max$ \uff0c\u56e0\u4e3a\u5b83\u8be2\u95ee\u7684\u662f\u8def\u5f84\u7684 LIS \u800c\u4e0d\u662f\u4ee5\u67d0\u4e00\u4e2a\u70b9\u7ed3\u675f\u7684 LIS\uff0c\u56e0\u6b64\u6211\u8d5b\u65f6\u6ca1\u505a\u51fa\u6765\uff08\u8fd8\u662f\u592a\u83dc\u4e86\uff09\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define in inline\n#define re register\nusing namespace std;\nin int read() {\n\tre int t=0;\n\tre char v=getchar();\n\twhile(v<'0'||v>'9')v=getchar();\n\twhile(v>='0'&&v<='9') {\n\t\tt=(t<<3)+(t<<1)+(v^48);\n\t\tv=getchar();\n\t}\n\treturn t;\n}\nint n,m,rt[200002],head[200002],a[200002],ls[20000002],rs[20000002],ans[200002],u,v,cnt,tot,s[20000002],la,r[200002],val[20000002];\nstruct edge{\n\tint to,next;\n}e[400002];\ninline void bu(re int x,re int y){\n\te[++tot].to=y;\n\te[tot].next=head[x];\n\thead[x]=tot;\n}\ninline int insert(re int v,re int l,re int r,re int x,re int vv) {\n\tint y=++cnt;\n\ts[y]=s[x]+1;val[y]=max(val[x],vv);\n\tif(l==r)return y;\n\tls[y]=ls[x];rs[y]=rs[x];\n\tint mid=(l+r)>>1;\n\tif(v<=mid)ls[y]=insert(v,l,mid,ls[x],vv);\n\telse rs[y]=insert(v,mid+1,r,rs[x],vv);\n\treturn y;\n}\ninline int find(re int p,re int l,re int r,re int x){\n\tif(!p)return 0;\n\tif(r<=x)return val[p];\n\tre int mid=l+r>>1;\n\tif(x>mid)return max(find(ls[p],l,mid,x),find(rs[p],mid+1,r,x));\n\telse return find(ls[p],l,mid,x);\n}\ninline void dfs(re int x,re int y){\n\tans[x]=find(rt[y],1,1e9+1,a[x]);\n\trt[x]=insert(a[x]+1,1,1e9+1,rt[y],ans[x]+1);\n\tans[x]=max(ans[x],ans[y]);\n\tfor(re int i=head[x];i;i=e[i].next)\n\t\tif(e[i].to!=y)dfs(e[i].to,x);\n}\nint main(){\n\tn=read();\n\tfor(re int i=1;i<=n;++i)a[i]=read();\n\tfor(re int i=1;i<n;++i){\n\t\tu=read();v=read();\n\t\tbu(u,v);bu(v,u);\n\t}\n\tdfs(1,1);\n\tfor(re int i=1;i<=n;++i)printf(\"%d\\n\",ans[i]+1);\n}\n\n```\n",
        "postTime": 1588497782,
        "uid": 41476,
        "name": "gyh20",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 AT5392 \u3010[ABC165F] LIS on Tree\u3011"
    },
    {
        "content": "[\u9898\u9762](https://www.luogu.com.cn/problem/AT5392)\n\n\u672c\u9898\u662f\u4e00\u9053\u641c\u7d22\u9898\u3002\u6211\u4eec\u4ece\u6839\u8282\u70b9\u5f80\u4e0b\u904d\u5386\uff0c\u9009\u53d6\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u3002\u4f46\u662f\uff0c\u5982\u679c\u6211\u4eec\u76f4\u63a5\u6bcf\u4e00\u4e2a\u70b9\u90fd\u8dd1\u4e00\u904d DP \u7684\u8bdd\uff0c\u80af\u5b9a\u662f\u4f1a TLE \u7684\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u91c7\u53d6\u4e00\u4e9b\u63aa\u65bd\u3002\n\n\u6211\u4eec\u8bbe\u73b0\u5728\u904d\u5386\u5230\u4e86 $x$ \u8282\u70b9\uff0c\u5b83\u7684\u503c\u4e3a $a_x$\u3002\u53e6\u5916\uff0c\u6211\u4eec\u5f00\u4e00\u4e2a\u6570\u7ec4 $f$ \u6765\u5b58\u50a8\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\uff0c$len$ \u662f\u5b83\u7684\u957f\u5ea6\u3002\n\n\u5982\u679c $a_x>f_{len}$\uff0c\u90a3\u4e48\u8bf4\u660e $x$ \u53ef\u4ee5\u52a0\u5165\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\uff0c\u90a3\u5c31\u52a0\u5165\u3002\u5426\u5219\u6211\u4eec\u5c31\u7528 $a_x$ \u5c06\u7b2c 1 \u4e2a\u5927\u4e8e\u7b49\u4e8e $a_x$ \u7684\u503c\u7ed9\u6362\u4e0b\u6765\uff0c\u6709\u5229\u4e8e\u4e4b\u540e\u7684\u52a0\u5165\u5143\u7d20\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n  #include<bits/stdc++.h>\n  using namespace std;\n  int n,cnt,tot,a[200005],f[200005],ans[200005],h[200005];\n  bool vis[200005];\n  //\u524d\u9879\u661f\n  struct edge{\n      int v,nxt;\n  }e[400005];\n  void adde(int u,int v){\n      e[++cnt].nxt=h[u];\n      h[u]=cnt;\n      e[cnt].v=v;\n  }\n  //\u641c\u7d22\n  void dfs(int x){\n      if(vis[x])return;\n      vis[x]=1;\n      bool F=0;\n      int t,X;\n      if(a[x]>f[tot])f[++tot]=a[x],F=1;//\u76f4\u63a5\u52a0\u5165\n      else{\n          t=lower_bound(f+1,f+tot+1,a[x])-f;//\u66ff\u6362\n          X=f[t];\n          f[t]=a[x];\n      }\n      ans[x]=tot;\n      for(int j=h[x];j;j=e[j].nxt){\n          dfs(e[j].v);//\u5f80\u4e0b\u4e00\u5c42\u641c\u7d22\n      }\n      if(F)tot--;//\u56de\u6eaf\u8981\u5c06\u5176\u6062\u590d\u6210\u539f\u6765\u7684\u6837\u5b50\n      else f[t]=X;\n  }\n  int main()\n  {\n      scanf(\"%d\",&n);\n      for(int i=1;i<=n;i++)scanf(\"%d\",&a[i]);\n      for(int i=1,x,y;i<n;i++)scanf(\"%d%d\",&x,&y),adde(x,y),adde(y,x);//\u5efa\u8fb9\n      dfs(1);//\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u641c\u7d22\n      for(int i=1;i<=n;i++)printf(\"%d\\n\",ans[i]);\n      return 0;\n  }\n```",
        "postTime": 1643177837,
        "uid": 428358,
        "name": "cqbztzl",
        "ccfLevel": 5,
        "title": "AT5392\u9898\u89e3"
    },
    {
        "content": "## AT5392 \u9898\u89e3\n**\u524d\u7f6e\u77e5\u8bc6\uff1a\u6811\u5f62\u7ed3\u6784\u3001\u7ebf\u6027 DP**\n\n\u8003\u9a8c\u8bfb\u9898\u80fd\u529b\u7684\u4e00\u9053\u597d\u9898\u3002\u9898\u76ee\u5927\u610f\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u628a\u4e00\u4e2a\u7b80\u5355\u7684\u7ebf\u6027 DP \u79fb\u690d\u5230\u4e86\u6811\u4e0a\u3002\n\n\u4f46\u662f\u8fd9\u9053\u9898\u6709\u4e00\u4e2a\u96be\u70b9\uff1a\u5373\u7ed9\u5b9a\u7684\u6811\u662f\u4e00\u68f5\u65e0\u6839\u6811\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fb9\u662f\u65e0\u5411\u7684\u3002\u6240\u4ee5\u8bf4\u5728\u8f93\u5165\u65f6\u5e94\u8be5\u5efa\u7acb\u4e00\u6761\u53cc\u5411\u7684\u8fb9\u3002\n\n\u53c2\u8003\u4e0b\u9762\u7684\u4e00\u6bb5\u9519\u8bef\u4ee3\u7801\uff1a\n```cpp\nfor (int i = 1; i < n; i++) {\n        scanf(\"%d %d\", &x, &y);\n        G[x].push_back(y);\n    }\n/*\u53ef\u4ee5\u770b\u5230\u5728\u8f93\u5165\u65f6\u6ca1\u6709\u5728y->x\u65b9\u5411\u4e0a\u5efa\u8fb9*/\n```\n\n\u81f3\u4e8e\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\uff0c\u5728\u904d\u5386\u6811\u65f6\u6253\u4e00\u4e2a\u8bb0\u5fc6\u5316\u641c\u7d22\u5c31\u53ef\u4ee5\uff0c\u840c\u65b0\u53ef\u4ee5\u53c2\u8003\u4e0b\u9762\u7684DP\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n$$DP[i] = \\max(DP[j]+1)$$\n\u5176\u4e2d $j$ \u6ee1\u8db3 $a[j]<a[i]$\u3002\u76f4\u63a5\u679a\u4e3e\u7684\u66b4\u529b\u601d\u8def\u5728\u7b97\u6cd5\u7ade\u8d5b\u4e2d\u5f88\u5e38\u89c1\uff0c\u4f46\u662f\u5728\u8fd9\u9053\u9898\u4e2d\u663e\u7136\u4e0d\u9002\u7528\uff0c\u56e0\u4e3a $n \\leq 2 \\times 10^5$\uff0c\u540c\u65f6\u53c8\u6709\u6570\u636e\u7ed3\u6784\u7684\u9650\u5236\u3002\n\n\u56e0\u6b64\u6211\u4eec\u8981\u5728\u539f\u6765\u72b6\u6001\u7684\u57fa\u7840\u4e0a\u505a\u4e00\u4e2a\u4f18\u5316\u3002\u5f15\u5165 LIS \u95ee\u9898\u7684\u4f18\u5316\u7b97\u6cd5--\u4e8c\u5206\u6cd5\u3002\u8fd9\u79cd\u7b97\u6cd5\u521a\u5f00\u59cb\u53ef\u80fd\u5f88\u96be\u7406\u89e3\uff0c\u5b83\u5728\u539f\u5148\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u4e86\u6539\u52a8\u3002\u8003\u8651\u8d2a\u5fc3\u7684\u601d\u60f3\uff0c\u4f18\u5148\u9009\u62e9\u8f83\u5c0f\u7684\u6570\u53ef\u4ee5\u4f7f\u540e\u6765\u589e\u52a0\u7684\u6570\u7684\u53d6\u503c\u53d8\u5c0f\uff0c\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u66f4\u591a\u7684\u6570\uff0c\u53ef\u4ee5\u6784\u9020\u51fa\u4e00\u4e2a\u7b26\u5408\u6761\u4ef6\u7684\u5e8f\u5217\uff0c\u8ba9\u5e8f\u5217\u7684\u957f\u5ea6\u8868\u793a\u5f53\u524d LIS \u7684\u957f\u5ea6\u3002\u5f53\u4e00\u4e2a\u65b0\u6570\u52a0\u5165\u65f6\uff0c\u7528\u4e8c\u5206\u6cd5\u67e5\u770b\u5b83\u80fd\u591f\u5728\u539f\u5e8f\u5217\u4e2d\u66ff\u6362\u7684\u4f4d\u7f6e\uff0c\u8fd9\u91cc\u7684\u201c\u66ff\u6362\u201d\u662f\u6682\u65f6\u7684\uff0c\u5e76\u4e0d\u662f\u5f53\u524d\u7684\u5e8f\u5217\u3002\u771f\u6b63\u7684\u5e8f\u5217\u5e94\u8be5\u53d6\u51b3\u4e8e\u5f53\u524d\u5e8f\u5217\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u53ea\u6709\u8fd9\u4e2a\u6570\u6539\u52a8\uff0c\u624d\u610f\u5473\u7740\u5e8f\u5217\u53d1\u751f\u4e86\u53d8\u5316\u3002\n\n\u6700\u540e\u6211\u4eec\u6839\u636e\u6784\u9020\u597d\u7684\u6700\u7ec8\u201c\u5e8f\u5217\u201d\u7684\u957f\u5ea6\uff0c\u5224\u65ad\u51fa LIS \u7684\u957f\u5ea6\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n, x, y, a[200005], dp[200005], f[200005], tot, ans;\n//tot\u8868\u793a\u5f53\u524d\u5e8f\u5217\u7684\u957f\u5ea6\n//f[i]\u8868\u793a\u4ee5i\u4e3a\u4e00\u68f5\u5b50\u6811\u7684\u6839\u65f6\uff0c\u5e8f\u5217\u7684\u957f\u5ea6 \nvector<int> G[200005];\n//\u7528\u90bb\u63a5\u8868\u8868\u793a\u6811 \nbool vis[200005];\n//vis\u5224\u65ad\u662f\u5426\u8d70\u8fc7\uff0c\u56e0\u4e3a\u662f\u65e0\u5411\u8fb9 \nvoid dfs(int rt){//\u56e0\u4e3a\u6211\u4eec\u7684\u76ee\u7684\u662f\u627e\u4e00\u6761\u94fe\uff0c\u6240\u4ee5\u7528DFS\u904d\u5386\uff0c\u540c\u65f6\u65b9\u4fbf\u8bb0\u5fc6\u5316\u3002 \n\tvis[rt] = 1;\n\tans = max(ans, tot);\n\tint l, r, t, mid;\n\tbool flag = 0;\n\tif (!tot || a[rt] > dp[tot]) dp[++tot] = a[rt], flag = 1;\n\t//\u5224\u65ad\u80fd\u5426\u5728\u5e8f\u5217\u7684\u672b\u5c3e\u589e\u52a0\u65b0\u5143\u7d20\n\t//\u5982\u679c\u53ef\u4ee5\u5219\u52a0\u5165\uff0c\u5e76\u5c06\u5e8f\u5217\u957f\u5ea6\u589e\u52a0\u4e00 \n\telse{\n\t\tl = 1, r = tot;\n\t\twhile (l <= r) {\n            mid = (l + r) >> 1;\n            if (dp[mid] >= a[rt])\n                r = mid - 1;\n            else\n                l = mid + 1;\n        }\n        t = dp[l];\n        dp[l] = a[rt];\n        //\u5426\u5219\u5c31\u5728\u539f\u5e8f\u5217\u4e2d\u201c\u66ff\u6362\u201d\u4e00\u4e2a\u6570\n\t\t//\u6b64\u65f6\u201c\u5e8f\u5217\u201d\u957f\u5ea6\u4e0d\u53d8 \n\t}\n\tf[rt] = tot;\n\tfor (int i = 0; i < G[rt].size(); i++)\n\t\tif (!vis[G[rt][i]]) dfs(G[rt][i]);\n\t//\u5bf9\u4e0b\u4e00\u4e2a\u8282\u70b9\u8fdb\u884c\u904d\u5386 \n\tif (flag) dp[tot] = 0, tot--;\n\telse dp[l] = t; \n\t//\u5728\u56de\u6eaf\u65f6\u64a4\u56de\u5f53\u524d\u7684\u64cd\u4f5c \n}\nint main(){\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; i++)\n\t\tscanf(\"%d\", &a[i]);\n\tfor (int i = 1; i < n; i++){\n\t\tscanf(\"%d %d\", &x, &y);\n\t\tG[x].push_back(y);\n\t\tG[y].push_back(x);//\u6b63\u786e\u7684\u5efa\u6811\u65b9\u6cd5 \n\t}\n\tdfs(1);//dfs\u904d\u5386\u6811 \n\tfor (int i = 1; i <= n; i++)\n\t\tprintf(\"%d\\n\", f[i]);//\u6309\u8981\u6c42\u8f93\u51fa \n\treturn 0;\n}\n```",
        "postTime": 1643080321,
        "uid": 407225,
        "name": "BotYoung",
        "ccfLevel": 7,
        "title": "LIS on Tree\u9898\u89e3"
    },
    {
        "content": "### \u524d\u7f6e\u77e5\u8bc6\n[\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217](https://www.cnblogs.com/frankchenfu/p/7107019.html)\uff0c\u5728\u4e8c\u5206\u7684\u4f18\u5316\u4e0b\u53ef\u4ee5\u8fbe\u5230 $O(n\\log n)$\u3002\n### \u7b97\u6cd5\u5206\u6790\n\u5efa\u8fb9\u540e\uff0c\u6211\u4eec\u4ece\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u89d2\u5ea6\u51fa\u53d1\uff0c\u6211\u4eec\u7684\u7b54\u6848 $ans_i$ \u5c31\u662f dp \u6570\u7ec4\u7684\u5143\u7d20\u4e2a\u6570 top\uff0c\u7136\u540e $ans_i\\gets top$\uff0c\u6211\u4eec\u6ce8\u610f\u5206\u7c7b\u8ba8\u8bba\uff0c\u4e5f\u5c31\u662f\u56de\u6eaf\u6cd5\uff0c\u628a\u6bcf\u6b21\u66f4\u6539\u7684\u503c\u5728\u64cd\u4f5c\u540e\u6539\u56de\u53bb\uff0c\u6700\u540e\u8f93\u51fa\u7b54\u6848\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\uff0c\u53ef\u4ee5\u8fc7\uff0cAC\uff01\n### AC Code:\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=1e6+5;\nint n,a[maxn],dp[maxn],ans[maxn],top,len[maxn];\nbool vis[maxn];\nvector<int> son[maxn]; \nvoid dfs(int id){\n\tif(vis[id])\n\t\treturn;\n\tvis[id]=1;\n\tbool p=0;\n\tint f=0,k=0;\n\tif(a[id]>dp[top])\n\t\tdp[++top]=a[id],p=1;\n\telse{\n\t\tf=lower_bound(dp+1,dp+top+1,a[id])-dp,k=dp[f];\n\t\tdp[f]=a[id];\n\t}//\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\n\tans[id]=top;\n\tfor(int i=0;i<len[id];i++)\n\t\tdfs(son[id][i]);\n\tif(p)\n\t\tdp[top--]=0;\n\telse\n\t\tdp[f]=k;//\u56de\u6eaf\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i)\n\t\tscanf(\"%d\",&a[i]);\n\tfor(int u,v,i=1;i<n;++i){\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tson[u].push_back(v);\n\t\tson[v].push_back(u);\n\t}\n\tfor(int i=1;i<=n;++i)\n\t\tlen[i]=son[i].size();\n\tvis[1]=ans[1]=1;\n\tfor(int i=0;i<len[1];++i){\n\t\ttop=1,dp[1]=a[1];\n\t\tdfs(son[1][i]);\n\t}\n\tfor(int i=1;i<=n;++i)\n\t\tprintf(\"%d\\n\",ans[i]);\n\treturn 0;\n} \n```",
        "postTime": 1637055212,
        "uid": 556362,
        "name": "UnnamedOrNamed",
        "ccfLevel": 5,
        "title": "AT5392 [ABC165F] LIS on Tree \u9898\u89e3"
    },
    {
        "content": ">### [\u6d1b\u8c37\u9898\u76ee\u9875\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/AT5392) & [AtCoder\u9898\u76ee\u9875\u9762\u4f20\u9001\u95e8](https://atcoder.jp/contests/abc165/tasks/abc165_f)\n\n>\u7ed9\u5b9a\u4e00\u68f5\u5927\u5c0f\u4e3a$n$\u7684\u6811\uff0c\u6c42\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c$1$\u5230\u8fd9\u4e2a\u70b9\u7ec4\u6210\u7684\u5e8f\u5217\u7684LIS\u3002\n\n>$n\\in\\left[1,2\\times10^5\\right]$\u3002\n\n\uff08\u8fd9\u662f\u6211\u7b2c\u4e00\u4e2a\u505a\u51fa\u6765\u7684\u9898\uff09\n\n\u8003\u8651\u8ddf\u666e\u901a\u7684\u7ebf\u6027\u7ed3\u6784\u4e0a\u7684LIS\u8bbe\u7c7b\u4f3c\u7684\u72b6\u6001\uff0c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e5f\u7c7b\u4f3c\u3002\n\n\u666e\u901a\u7684\u7ebf\u6027LIS\u53ef\u4ee5\u7528BIT\u4f18\u5316\uff0c\u800c\u8fd9\u91cc\u6811\u4e0aDFS\u56de\u6eaf\u7684\u65f6\u5019\u9700\u8981\u64a4\u9500\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a\u79bb\u6563\u5316\u540e\u7684\u503c\u5f00\u4e00\u4e2a`multiset`\u6765\u64a4\u9500\uff0c\u6bcf\u6b21\u5c06`multiset`\u4e2d\u6700\u5927\u7684\u6570\u6254\u5230BIT\u91cc\u3002\u53ef\u662f\uff0c\u8fd9\u6837\u6709\u53ef\u80fd\u53d8\u5c0f\uff0cBIT\u662f\u5904\u7406\u4e0d\u4e86\u7684\uff0c\u4e8e\u662f\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define pb push_back\nconst int N=200000;\nint n;\nint a[N+1];\nvector<int> nums;\nvoid discrete(){//\u79bb\u6563\u5316 \n\tsort(nums.begin(),nums.end());\n\tnums.resize(unique(nums.begin(),nums.end())-nums.begin());\n\tfor(int i=1;i<=n;i++)a[i]=lower_bound(nums.begin(),nums.end(),a[i])-nums.begin();\n}\nvector<int> nei[N+1];\nmultiset<int> st[N];\nstruct segtree{//\u7ebf\u6bb5\u6811 \n\tstruct node{int l,r,mx;}nd[N<<2];\n\t#define l(p) nd[p].l\n\t#define r(p) nd[p].r\n\t#define mx(p) nd[p].mx\n\tvoid bld(int l=0,int r=nums.size()-1,int p=1){\n\t\tl(p)=l;r(p)=r;mx(p)=0;\n\t\tif(l==r)return;\n\t\tint mid=l+r>>1;\n\t\tbld(l,mid,p<<1);bld(mid+1,r,p<<1|1);\n\t}\n\tvoid init(){bld();}\n\tvoid sprup(int p){mx(p)=max(mx(p<<1),mx(p<<1|1));}\n\tvoid chg(int x,int v,int p=1){//\u5355\u70b9\u4fee\u6539 \n\t\tif(l(p)==r(p))return mx(p)=v,void();\n\t\tint mid=l(p)+r(p)>>1;\n\t\tchg(x,v,p<<1|(x>mid));\n\t\tsprup(p);\n\t}\n\tint _mx(int l,int r,int p=1){//\u533a\u95f4\u6700\u5927\u503c \n\t\tif(l>r)return 0;\n\t\tif(l<=l(p)&&r>=r(p))return mx(p);\n\t\tint mid=l(p)+r(p)>>1,res=0;\n\t\tif(l<=mid)res=max(res,_mx(l,r,p<<1));\n\t\tif(r>mid)res=max(res,_mx(l,r,p<<1|1));\n\t\treturn res;\n\t}\n}segt;\nint dp[N+1],ans[N+1];\nvoid dfs(int x=1,int fa=0){ \n\tdp[x]=segt._mx(0,a[x]-1)+1;//\u8f6c\u79fb\u65b9\u7a0b \n\tans[x]=max(ans[fa],dp[x]);\n\tst[a[x]].insert(dp[x]);\n\tsegt.chg(a[x],*--st[a[x]].end());\n\tfor(int i=0;i<nei[x].size();i++){\n\t\tint y=nei[x][i];\n\t\tif(y==fa)continue;\n\t\tdfs(y,x);\n\t}\n\tst[a[x]].erase(st[a[x]].find(dp[x]));//\u56de\u6eaf\u65f6\u64a4\u9500 \n\tsegt.chg(a[x],*--st[a[x]].end());//\u64a4\u9500 \n}\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)cin>>a[i],nums.pb(a[i]);\n\tdiscrete();\n\tfor(int i=1;i<n;i++){\n\t\tint x,y;\n\t\tcin>>x>>y;\n\t\tnei[x].pb(y);nei[y].pb(x);\n\t}\n\tfor(int i=0;i<nums.size();i++)st[i].insert(0);\n\tsegt.init();\n\tdfs();\n\tfor(int i=1;i<=n;i++)cout<<ans[i]<<\"\\n\";\n\treturn 0;\n}\n```",
        "postTime": 1595324262,
        "uid": 138400,
        "name": "chenxia25",
        "ccfLevel": 9,
        "title": "AtCoder abc165_f - LIS on Tree"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u5f88\u6c34\u7684\u9898\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n\n\u6811\u4e0a LIS\uff0c\u9996\u5148\u770b\u6811\u7684\u8282\u70b9\u4e2a\u6570\u662f $10^5$ \u7ea7\u522b\uff0c\u6240\u4ee5\u666e\u901a\u7684 dp \u7684 $O(n^2)$ \u662f\u8fc7\u4e0d\u4e86\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u8981\u641e\u4e00\u4e0b\u8fd9\u4e2a dp \u7684\u672c\u8d28\u4e86\uff0c\u8fd9\u6837\u624d\u80fd\u4f18\u5316\u3002\n\n\u6211\u4eec\u5c06 $dp_i$ \u7684\u5b9a\u4e49\u66f4\u6539\u4e3a\uff1a\u5f53\u524d\u7684 LIS \u7684\u6700\u4f18\u60c5\u51b5\u7684\u6570\u7ec4\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u6bcf\u6b21\u5c31\u5c06\u4e00\u4e2a\u5143\u7d20\u5904\u7406\u8fdb\u8fd9\u4e2a\u96c6\u5408\u5c31\u884c\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u60f3\u60f3\uff1a\u8fd9\u4e2a\u6700\u4f18\u60c5\u51b5\u6307\u7684\u662f\u6bcf\u4e2a\u5143\u7d20\u90fd\u5728\u5408\u7406\u8303\u56f4\u5185\u6700\u5c0f\uff08\u5408\u7406\u8303\u56f4\uff1a\u7b26\u5408 LIS \u7684\u5b9a\u4e49\uff09\uff0c\u8fd9\u6837\u5c31\u6709\u4e86\u4e00\u4e2a naive \u7684\u60f3\u6cd5\uff1a\u6211\u4eec\u5c31\u5c06\u5b83\u53ef\u4ee5\u66ff\u6362\u7684\u6bd4\u5b83\u5927\u7684\u6570\u6362\u6389\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u8ba9\u8fd9\u4e2a\u5e8f\u5217\u66f4\u4f18\u6216\u8005\u6ca1\u6709\u6539\u53d8\uff0c\u8fd9\u91cc\u5c31\u53ef\u4ee5\u4e8c\u5206\u4e86\u3002\n\n\u5728\u6811\u4e0a\u6c42\u5c31\u662f\u4e00\u4e2a dfs\uff0c\u5f88\u5e38\u89c4\uff0c\u8fd9\u91cc\u6253\u4e2a $vis_i$ \u6807\u8bb0\u4e00\u4e0b\uff0c\u5c31\u662f\u904d\u5386 $n$ \u6b21\u5c31\u5b8c\u4e86\uff0c\u7136\u540e\u6bcf\u6b21\u90fd\u662f\u4e00\u4e2a\u4e8c\u5206\uff0c\u4e5f\u5c31\u662f $O(n\\log n)$ \u7684\u590d\u6742\u5ea6\u5c31\u8f7b\u677e\u7684\u8fc7\u53bb\u4e86\uff0c\u6700\u540e\u8bb0\u5f97\u6253\u56de\u6eaf qwq\u3002\n\n**code**\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint head[200005],nxt[400006],to[400005],cnt,dp[200005],top,fa[200005],ans[200005],a[200005],p,q,n;\nvoid add(int u,int v){//\u52a0\u8fb9 \n\tnxt[++cnt]=head[u],head[u]=cnt,to[cnt]=v;\n}\nvoid dfs(int x){\n\tint tmp=lower_bound(dp+1,dp+top+1,a[x])-dp;//\u627e\u5230\u63d2\u8fdb\u53bb\u7684\u4f4d\u7f6e \n\tint Tmp=dp[tmp];//\u65b9\u4fbf\u56de\u6eaf \n\tdp[tmp]=a[x];//\u4fee\u6539 \n\tint flag=0;//\u770b\u4e0b\u4e00\u884c \n\tif(tmp==top+1) flag++,top++;//\u662f\u4e0d\u662f\u53ef\u4ee5\u5728\u5e8f\u5217\u540e\u9762\u518d\u52a0\u4e00\u4f4d \n\tans[x]=top;//\u5b58\u7b54\u6848 \n\tfor(int i=head[x];i;i=nxt[i]){//\u904d\u5386\u51fa\u8fb9 \n\t\tif(to[i]!=fa[x]){//\u5982\u679c\u4e0d\u662f\u7238\u7238 \n\t\t\tfa[to[i]]=x;//\u66f4\u65b0\u7236\u8282\u70b9 \n\t\t\tdfs(to[i]);//\u7ee7\u7eed dfs \n\t\t}\n\t}\n\tif(flag) top--;//\u56de\u6eaf 1 \n\tdp[tmp]=Tmp;//\u56de\u6eaf 2 \n\treturn;\n}\nint main() {\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor(int i=1;i<n;i++){\n\t\tscanf(\"%d%d\",&p,&q);\n\t\tadd(p,q),add(q,p);//\u6811\u4e0a\u7684\u662f\u6ca1\u8bf4\u65b9\u5411\u7684 \n\t}\n\tdfs(1);//\u641e\u7b54\u6848 \n\tfor(int i=1;i<=n;i++){//\u8f93\u51fa\u5c31\u5b8c\u4e8b\u4e86 \n\t\tprintf(\"%d\",ans[i]);\n\t\tif(i<n) putchar('\\n');\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1637065346,
        "uid": 383791,
        "name": "Others",
        "ccfLevel": 7,
        "title": "AT5392 \u9898\u89e3"
    }
]