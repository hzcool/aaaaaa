[
    {
        "content": "## $\\tt{Solution}$\n\n\u8003\u8651\u6811\u94fe\u5256\u5206\u3002\n\n~~\u6b64\u9898\u8f83\u88f8\u3002~~\n\n\u672c\u9898\u9700\u8981\u5b9e\u73b0\u6811\u5256\u7684\u4e24\u4e2a\u64cd\u4f5c\uff1a\n\n- \u5355\u70b9\u4fee\u6539\n\n- \u533a\u95f4\u67e5\u8be2\u603b\u548c\n\n\u6211\u4eec\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u603b\u548c\uff0c\u5176\u6b21\uff0c\u6b64\u9898\u7ed9\u5b9a\u7684\u662f\u6811\u7684**\u8fb9\u6743**\uff0c\u6211\u4eec\u9700\u8981\u8003\u8651\u5982\u4f55\u5c06\u8fb9\u6743\u8f6c\u79fb\u5230\u70b9\u6743\u4e0a\u6765\uff1a\u8bb0\u5f55\u7b2c $i$ \u8fb9\u8fde\u63a5\u7684\u4e24\u4e2a\u70b9 $pre_i$ \u548c $nxt_i$\uff0c\u6bcf\u6b21\u4fee\u6539\uff0c\u5148\u5c06 $i \\to i \\cdot 2 - 1$\uff08\u56e0\u4e3a\u662f\u6811\uff09\uff0c\u518d\u5c06\u8fb9\u6743\u7edf\u4e00\u8d4b\u503c\u5230**\u6df1\u5ea6\u66f4\u5927\u7684\u70b9**\u4e0a\u6765\uff0c\u8fdb\u884c\u4fee\u6539\u3002\n\n\u67e5\u8be2\u9700\u8981\u6ce8\u610f\u4e0d\u80fd\u5c06\u4e24\u70b9\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u7684\u503c\u7b97\u5165\u5176\u4e2d\u3002\n\n\u5269\u4e0b\u7684\u5c31\u662f\u6a21\u677f\u4e86\u3002\n\n## $\\tt{AC \\ Code \\ of}$ [$\\tt{ABC294G}$](https://www.luogu.com.cn/problem/AT_abc294_g)\n\n```cpp\n#include <bits/stdc++.h>\n\n#define int long long\n//#pragma G++ optimize(2) \n\nusing namespace std;\n\nconst int N = 2e6 + 10;\n\nint n,q;\nint a[N],wc[N],w[N];\nint h[N],e[N << 1],ne[N << 1],idx;\nint son[N],fa[N],siz[N],d[N],top[N],id[N],cnt = 0;\nint pre[N],nxt[N];\n\nstruct node {\n\tint l,r;\n\tint val;\n} tr[N << 2];\n\ninline int read() {\n\tint x = 0,f = 1;\n\tchar ch = getchar();\n\twhile (ch < '0' || ch > '9') {\n\t\tif (ch == '-') f = -1;\n\t\tch = getchar();\n\t}\n\twhile (ch >= '0' && ch <= '9') {\n\t\tx = x * 10 + ch - 48;\n\t\tch = getchar();\n\t}\n\treturn x * f;\n}\n\nvoid add(int a,int b,int c) {\n\tpre[idx] = a,nxt[idx] = b;\n\te[idx] = b;\n\tw[idx] = c;\n\tne[idx] = h[a];\n\th[a] = idx ++;\n}\n\nvoid pushup(int u) {\n\ttr[u].val = tr[u << 1].val + tr[u << 1 | 1].val;\n}\n\nvoid build(int u,int l,int r) {\n\ttr[u] = {l,r};\n\tif (l == r) {\n\t\ttr[u].val = wc[l];\n\t\treturn ;\n\t}\n\tint mid = l + r >> 1;\n\tbuild(u << 1,l,mid),build(u << 1 | 1,mid + 1,r);\n\tpushup(u);\n}\n\nvoid modify(int u,int x,int k) {\n\tif (tr[u].l == tr[u].r) {\n\t\ttr[u].val = k;\n\t\treturn ;\n\t}\n\tint mid = tr[u].l + tr[u].r >> 1;\n\tif (x <= mid) modify(u << 1,x,k);\n\telse modify(u << 1 | 1,x,k);\n\tpushup(u);\n}\n\nint query(int u,int l,int r) {\n\tif (l <= tr[u].l && tr[u].r <= r) return tr[u].val;\n\tint res = 0;\n\tint mid = tr[u].l + tr[u].r >> 1;\n\tif (l <= mid) res += query(u << 1,l,r);\n\tif (mid < r) res += query(u << 1 | 1,l,r);\n\treturn res;\n}\n\nvoid dfs1(int u,int f,int dep) {\n\td[u] = dep;\n\tfa[u] = f;\n\tsiz[u] = 1;\n\tint Max = 0;\n\tfor (int i = h[u]; ~i; i = ne[i] ) {\n\t\tint j = e[i];\n\t\tif (j == f) continue;\n\t\tdfs1(j,u,dep + 1);\n\t\tsiz[u] += siz[j];\n\t\ta[j] = w[i];\n\t\tif (siz[j] > Max) {\n\t\t\tMax = siz[j];\n\t\t\tson[u] = j;\n\t\t}\n\t}\n}\n\nvoid dfs2(int u,int t) {\n\tid[u] = ++ cnt;\n\twc[cnt] = a[u];\n\ttop[u] = t;\n\tif (!son[u]) return ;\n\tdfs2(son[u],t);\n\tfor (int i = h[u]; ~i; i = ne[i] ) {\n\t\tint j = e[i];\n\t\tif (j == fa[u] || j == son[u]) continue;\n\t\tdfs2(j,j);\n\t}\n}\n\nint query_Range(int x,int y) {\n\tint res = 0;\n\twhile (top[x] != top[y]) {\n\t\tif (d[top[x]] < d[top[y]]) swap(x,y);\n\t\tres += query(1,id[top[x]],id[x]);\n\t\tx = fa[top[x]];\n\t}\n\tif (d[x] > d[y]) swap(x,y);\n\tres += query(1,id[x] + 1,id[y]);\n\treturn res;\n}\n\nsigned main() {\n\tmemset(h,-1,sizeof h);\n\tn = read();\n\tfor (int i = 1; i < n; i ++ ) {\n\t\tint a,b,c;\n\t\ta = read(),b = read(),c = read();\n\t\tadd(a,b,c);\n\t\tadd(b,a,c);\n\t}\n\tdfs1(1,0,1);\n\tdfs2(1,1);\n\tbuild(1,1,n);\n\tq = read();\n\twhile (q -- ) {\n\t\tint op,x,y;\n\t\top = read(),x = read(),y = read();\n\t\tif (op == 1) {\n\t\t\tx <<= 1,x --;\n\t\t\tif (d[pre[x]] > d[nxt[x]]) x = pre[x];\n\t\t\telse x = nxt[x];\n\t\t\tmodify(1,id[x],y);\n\t\t} else cout << query_Range(x,y) << endl;\n\t}\n\treturn 0;\n} \n```",
        "postTime": 1684680576,
        "uid": 638084,
        "name": "songszh",
        "ccfLevel": 3,
        "title": "[ABC294G] Distance Queries on a Tree"
    },
    {
        "content": "# \u601d\u8def\n\u9996\u5148\u8fd9\u9053\u9898\u662f\u6811\u94fe\u5256\u5206\u554a\u3002\n\n\u9996\u5148\u4e86\u89e3\u4e00\u4e0b\u4ec0\u4e48\u53eb dfs \u5e8f\uff0c\u5176\u5b9e\u5c31\u662f\u5bf9\u4e8e\u4e00\u68f5\u6811\u7136\u540e\u7528 dfs \u53bb\u904d\u5386\u5b83\u6309\u987a\u5e8f\u8d70\u5230\u7684\u70b9\u8fde\u8d77\u6765\u5c31\u4f4d dfs \u5e8f\uff0c\u7136\u540e\u6211\u4eec\u8fd8\u8981\u77e5\u9053\u4e00\u4e9b\u4e1c\u897f\u3002\n\n$1$ \u91cd\u513f\u5b50\uff1a\u5c31\u662f\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9\u7684\u6240\u6709\u513f\u5b50\u4e2d\u5927\u5c0f\uff08\u5c31\u662f\u4ee5\u5b83\u4e3a\u6839\u8282\u70b9\u7684\u603b\u4e2a\u6570\u6700\u591a\uff09\u6700\u5927\u7684\u90a3\u4e2a\u3002\n\n$2$ \u8f7b\u513f\u5b50\uff1a\u65e2\u9664\u4e86\u91cd\u513f\u5b50\u4ee5\u5916\u7684\u6240\u6709\u8282\u70b9\uff08\u6839\u8282\u70b9\u4e5f\u662f\uff09\u3002\n\n$3$ \u91cd\u94fe\uff1a\u4ece\u4e00\u4e2a\u8f7b\u513f\u5b50\u5f00\u59cb\u4e00\u8def\u6cbf\u7740\u91cd\u513f\u5b50\u8d70\uff0c\u8d70\u51fa\u7684\u90a3\u6761\u94fe\u3002\n\n$4$ \u8f7b\u94fe\uff1a\u9664\u4e86\u91cd\u94fe\u4ee5\u5916\u7684\u6240\u6709\u94fe\u3002\n\n$5.$ \u65f6\u95f4\u6233\uff1a\u7b2c\u4e00\u6b21\u904d\u5386\u5230\u8fd9\u4e2a\u70b9\u7684\u65f6\u95f4\uff08\u4ece $1$ \u5f00\u59cb\u8ba1\uff09\u3002\n\n\u7136\u540e\u6211\u4eec\u5c06\u5256\u5206\u548c dfs \u5e8f\u7ed3\u5408\u4e00\u4e0b\uff08\u5148\u5f80\u91cd\u513f\u5b50\u8d70\uff09\u7136\u540e\u5728\u6807\u51fa\u65f6\u95f4\u6233\u90a3\u4e48\u5c31\u80fd\u53d1\u73b0\u4e00\u6761\u91cd\u94fe\u4e0a\u7684\u65f6\u95f4\u6233\u90fd\u662f\u8fde\u7eed\u7684\u3002\u90a3\u4e48\u6211\u4eec\u5982\u679c\u90fd\u4e0d\u77e5\u9053\u91cd\u513f\u5b50\u662f\u8c01\u90a3\u4e48\u600e\u4e48\u6c42\u51fa\u65f6\u95f4\u6233\u6240\u4ee5\u6211\u4eec\u8981\u4e24\u904d dfs \u7b2c\u4e00\u904d\u6c42\u51fa\u91cd\u513f\u5b50\u7b2c\u4e8c\u904d\u6c42\u51fa\u65f6\u95f4\u6233\u3002\n\n## \u7b2c\u4e00\u904ddfs\u4ee3\u7801\n```\nvoid dfs1(int x,int father){\n\tfa[x]=father;\n\tdep[x]=dep[father]+1; \n\tsiz[x]=1;//\u521d\u59cb\u5316 \n\tint zhongson=-1; //\u8bb0\u5f55\u91cd\u513f\u5b50 \n\tfor(int i=h[x];~i;i=edg[i].y){\n\t\tint to=edg[i].x;\n\t\tif(to==father) continue;\n\t\tdfs(to,x);\n\t\tsiz[x]+=siz[to];//\u66f4\u65b0\u603b\u4e2a\u6570 \n\t\tif(siz[to]>zhongson){//\u6c42\u51fax\u7684\u91cd\u513f\u5b50 \n\t\t\tzhongson=siz[to];//\u8bb0\u5f55\u7528\u4e8e\u6bd4\u8f83 \n\t\t\tbigson[x]=to;//\u76f4\u63a5\u6807\u8bb0\u82e5\u540e\u9762\u6709\u4f1a\u76f4\u63a5\u8986\u76d6 \n\t\t}\n\t}\n}\n```\n\n## \u7b2c\u4e8c\u904ddfs\u4ee3\u7801\n```\nvoid dfs2(int x,int head){\n\tdfn[x]=++cnt;//\u6dfb\u52a0\u65f6\u95f4\u6233\n\ttop[x]=head; \n\tw[cnt]=v[x];//\u5f53\u524d\u8282\u70b9\u6743\u503c \n\tif(!bigson[x]) return;\n\tdfs2(bigson[x],head);\n\tfor(int i=h[x];~i;i=edg[i].y) {\n\t\tint to=edg[i].x;\n\t\tif(to==fa[x]||to==bigson[x]) continue;\n\t\tdfs(to,to);//to\u4e3a\u5f00\u5934\u4e86 \n\t}\n}\n```\n\u8fd9\u91cc\u6211\u4eec\u6709\u4e00\u4e2a\u5f15\u7406\uff1a\u9664\u6839\u8282\u70b9\u4ee5\u5916\u7684\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u7684\u7236\u4eb2\u90fd\u4e00\u5b9a\u5728\u4e00\u6761\u91cd\u94fe\u4e0a\uff0c\u6211\u4eec\u8fd8\u662f\u5c06\u5934\u6df1\u5ea6\u5927\u7684\u5148\u5f80\u4e0a\u9762\u8df3\uff0c\u8fd9\u6837\u662f\u4e00\u5b9a\u6700\u5feb\u7684\uff0c\u76f8\u5f53\u4e8e\u5c31\u662f\u548c\u6c42\u6700\u8fd1\u516c\u5171\u7956\u5148\u5dee\u4e0d\u591a\uff0c\u5c31\u662f\u5148\u8ba9\u4e00\u6761\u91cd\u94fe\u7684\u5934\u7684\u6df1\u5ea6\u8f83\u5927\u7684\u5f80\u4e0a\u8df3\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u628a\u8981\u8df3\u7684\u90a3\u4e00\u6761\u94fe\u90fd\u4fee\u6539\u4e00\u4e0b\u7136\u540e\u5728\u6700\u540e\u90a3\u4e24\u4e2a\u6570\u4e00\u5b9a\u5728\u4e00\u6761\u94fe\u4e0a\u7136\u540e\u5c31\u53ef\u4ee5\u53bb\u4fee\u6539\u4e86\u3002\n\n## \u6c42\u7b54\u6848\u4ee3\u7801\n```\nint qmax(int x,int y) {\n\tint res=0;\n\twhile(top[x]!=top[y]) {\n\t\tif(dep[top[x]]<dep[top[y]]) swap(x,y);\n\t\tres+=qq(1,dfn[top[x]],dfn[x]);\n\t\tx=fa[top[x]];\n\t}\n\tif(dep[x]>dep[y]) swap(x,y);\n\treturn res+qq(1,dfn[x]+1,dfn[y]);//\u8fb9\u6743\u8f6c\u6362\u6210\u70b9\u6743\n}\n```\n\u7136\u540e\u603b\u4ee3\u5417\u5c31\u662f\u8fd9\u6837\n# \u4ee3\u7801\n\n```\n#include <bits/stdc++.h>\nusing namespace std ;\n#define int long long\n#define rep(i,x,y) for(int i=x;i<=y;i++)\n#define rep1(i,x,y) for(int i=x;i>=y;i--)\n#define fire signed\n#define ls u<<1\n#define rs u<<1|1\nconst int N=1e6+10;\nint n,head[N],cnt,m;\nint a,b,tot,v[N],w[N];\nint nx[N],pr[N];\nint dfn[N],fa[N],son[N],top[N],siz[N],dep[N];\nstruct node {\n\tint x,y,z,l,r,maxn;\n} tr[N],edg[N];\nvoid add(int x,int y,int z) {//\u5b58\u8fb9 \n\tedg[++tot]= {y,head[x],z};\n\tpr[tot]=x,nx[tot]=y;\n\thead[x]=tot;\n}\nvoid pushup(int u) {//\u7ebf\u6bb5\u6811\u6a21\u677f \n\ttr[u].maxn=tr[u<<1].maxn+tr[u<<1|1].maxn;\n}\nvoid build(int u,int l,int r) {//\u7ebf\u6bb5\u6811\u6a21\u677f \n\ttr[u]= {0,0,0,l,r};\n\tif(l==r) {\n\t\ttr[u].maxn=w[l];\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tbuild(u<<1,l,mid);\n\tbuild(u<<1|1,mid+1,r);\n\tpushup(u);\n}\nvoid modify(int u,int l,int r,int k) {//\u7ebf\u6bb5\u6811\u6a21\u677f \n\tif(tr[u].l==tr[u].r) {\n\t\ttr[u].maxn=k;\n\t\treturn;\n\t}\n\tint mid=tr[u].l+tr[u].r>>1;\n\tif(l<=mid) modify(u<<1,l,r,k);\n\telse modify(u<<1|1,l,r,k);\n\tpushup(u);\n}\nint qq(int u,int l,int r) { //\u7ebf\u6bb5\u6811\u6a21\u677f \n\tif(tr[u].l>=l&&tr[u].r<=r) {\n\t\treturn tr[u].maxn;\n\t}\n\tint mid=tr[u].l+tr[u].r>>1,res=0;\n\tif(l<=mid) res=qq(ls,l,r);\n\tif(r>mid) res+=qq(rs,l,r);\n\treturn res;\n}\nvoid dfs1(int x,int f) {//\u91cd\u513f\u5b50\u548c\u6df1\u5ea6\u8fd8\u6709\u5927\u5c0f \n\tfa[x]=f;\n\tdep[x]=dep[f]+1;\n\tsiz[x]=1;\n\tint big=0;\n\tfor(int i=head[x]; i; i=edg[i].y) {\n\t\tint j=edg[i].x;\n\t\tif(j==f) continue;\n\t\tdfs1(j,x);\n\t\tv[j]=edg[i].z;\n\t\tsiz[x]+=siz[j];\n\t\tif(siz[j]>big) {\n\t\t\tbig=siz[j];\n\t\t\tson[x]=j;\n\t\t}\n\t}\n}\nvoid dfs2(int x,int t) {//\u6c42\u51fa\u65f6\u95f4\u6233 \n\tdfn[x]=++cnt;\n\tw[cnt]=v[x];\n\ttop[x]=t;\n\tif(!son[x]) return;\n\tdfs2(son[x],t);\n\tfor(int i=head[x]; i; i=edg[i].y) {\n\t\tint j=edg[i].x;\n\t\tif(j==fa[x]||j==son[x]) continue;\n\t\tdfs2(j,j);\n\t}\n}\nint qmax(int x,int y) {\n\tint res=0;\n\twhile(top[x]!=top[y]) {\n\t\tif(dep[top[x]]<dep[top[y]]) swap(x,y);\n\t\tres+=qq(1,dfn[top[x]],dfn[x]);\n\t\tx=fa[top[x]];\n\t}\n\tif(dep[x]>dep[y]) swap(x,y);\n\treturn res+qq(1,dfn[x]+1,dfn[y]);\n}\nfire main() {\n\tcin>>n;\n\trep(i,1,n-1) {\n\t\tint c;\n\t\tcin>>a>>b>>c;\n\t\tadd(a,b,c);\n\t\tadd(b,a,c);\n\t}\n\tdfs1(1,0);\n\tdfs2(1,1);\n\tbuild(1,1,n);\n\tcin>>m;\n\twhile(m--) {\n\t\tint op;\n\t\tint u,v;\n\t\tcin>>op;\n\t\tcin>>u>>v;\n\t\tif(op==1) {\n\t\t\tu<<=1;\n\t\t\tu--;\n\t\t\tif(dep[pr[u]]>dep[nx[u]]) u=pr[u]; //\u8f6c\u6362 \n\t\t\telse u=nx[u];\n\t\t\tmodify(1,dfn[u],dfn[u],v);\n\t\t}else {\n\t\t\tcout<<qmax(u,v)<<endl;\n\t\t}\n\t}\n\treturn false;\n}\n```",
        "postTime": 1682062913,
        "uid": 381053,
        "name": "highkj",
        "ccfLevel": 4,
        "title": "AT_abc294_g"
    },
    {
        "content": "DFS \u5e8f\u6811\u72b6\u6570\u7ec4\u3002\n\n\u4e0d\u59a8\u4ee5 $1$ \u4e3a\u6839\uff0c\u8bbe $\\operatorname{dep}(u)$ \u8868\u793a $u$ \u5230\u6839\u8def\u5f84\u7684\u8fb9\u6743\u548c\uff0c$\\operatorname{dis}(u,v)$ \u8868\u793a $u,v$ \u95f4\u8def\u5f84\u7684\u8fb9\u6743\u548c\uff0c$\\operatorname{LCA}(u,v)$ \u8868\u793a $u,v$ \u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u3002\u5219\u663e\u7136\u6709\uff1a$\\operatorname{dis}(u,v)=\\operatorname{dep}(u)+\\operatorname{dep}(v)-2\\times\\operatorname{dep}(\\operatorname{LCA}(u,v))$\u3002\u53ea\u9700\u8981\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u7684 $\\operatorname{dep}$\u3002\n\n\u7ed9\u4e00\u6761\u8fb9\u91cd\u65b0\u8d4b\u6743\u503c\u7b49\u4ef7\u4e8e\u7ed9\u5b83\u7684\u8fb9\u6743\u52a0\u4e0a $\\Delta w$\uff0c\u8fd9\u4e00\u64cd\u4f5c\u4f1a\u5bfc\u81f4\u8fd9\u6761\u8fb9\u7684\u5b50\u8282\u70b9\u6240\u5728\u5b50\u6811\u5185\u6bcf\u4e2a\u70b9\u7684 $\\operatorname{dep}$ \u589e\u52a0 $\\Delta w$\u3002\u4f7f\u7528 DFS \u5e8f\u5373\u53ef\u5c06\u5b50\u6811\u8f6c\u5316\u4e3a\u533a\u95f4\uff0c\u533a\u95f4\u52a0\u3001\u5355\u70b9\u67e5\u53ea\u9700\u8981\u5dee\u5206\u540e\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O((n+q)\\log n)$\u3002\n\n```cpp\n// Problem: G - Distance Queries on a Tree\n// Contest: AtCoder - AtCoder Beginner Contest 294\n// URL: https://atcoder.jp/contests/abc294/tasks/abc294_g\n// Memory Limit: 1024 MB\n// Time Limit: 4000 ms\n// \n// Powered by CP Editor (https://cpeditor.org)\n\n//By: OIer rui_er\n#include <bits/stdc++.h>\n#define rep(x,y,z) for(ll x=(y);x<=(z);x++)\n#define per(x,y,z) for(ll x=(y);x>=(z);x--)\n#define debug(format...) fprintf(stderr, format)\n#define fileIO(s) do{freopen(s\".in\",\"r\",stdin);freopen(s\".out\",\"w\",stdout);}while(false)\n#define likely(exp) __builtin_expect(!!(exp), 1)\n#define unlikely(exp) __builtin_expect(!!(exp), 0)\nusing namespace std;\ntypedef long long ll;\n\nmt19937 rnd(std::chrono::duration_cast<std::chrono::nanoseconds>(std::chrono::system_clock::now().time_since_epoch()).count());\nll randint(ll L, ll R) {\n\tuniform_int_distribution<ll> dist(L, R);\n\treturn dist(rnd);\n}\n\ntemplate<typename T> void chkmin(T& x, T y) {if(x > y) x = y;}\ntemplate<typename T> void chkmax(T& x, T y) {if(x < y) x = y;}\n\nconst ll N = 2e5+5;\n\nll n, m, fa[N][19], dis[N], sz[N], bottom[N], dfn[N], tms, val[N];\nvector<tuple<ll, ll, ll>> e[N];\n\nstruct BIT {\n\tll c[N];\n\tll lowbit(ll x) {return x & (-x);}\n\tvoid add(ll x, ll k) {for(; x <= n; x += lowbit(x)) c[x] += k;}\n\tll ask(ll x) {ll k = 0; for(; x; x -= lowbit(x)) k += c[x]; return k;}\n}bit;\n\nvoid dfs(ll u, ll f) {\n\tfa[u][0] = f;\n\trep(i, 1, 18) fa[u][i] = fa[fa[u][i-1]][i-1];\n\tdis[u] = dis[f] + 1;\n\tdfn[u] = ++tms;\n\tsz[u] = 1;\n\tfor(auto i : e[u]) {\n\t\tll v, w, id;\n\t\ttie(v, w, id) = i;\n\t\tif(v != f) {\n\t\t\tdfs(v, u);\n\t\t\tsz[u] += sz[v];\n\t\t\tbottom[id] = v;\n\t\t\tbit.add(dfn[v], w);\n\t\t\tbit.add(dfn[v]+sz[v], -w);\n\t\t}\n\t}\n}\n\nll LCA(ll u, ll v) {\n\tif(dis[u] < dis[v]) swap(u, v);\n\tper(i, 18, 0) if(dis[fa[u][i]] >= dis[v]) u = fa[u][i];\n\tif(u == v) return u;\n\tper(i, 18, 0) if(fa[u][i] != fa[v][i]) u = fa[u][i], v = fa[v][i];\n\treturn fa[u][0];\n}\n\nint main() {\n\tscanf(\"%lld\", &n);\n\trep(i, 1, n-1) {\n\t\tll u, v, w;\n\t\tscanf(\"%lld%lld%lld\", &u, &v, &w);\n\t\te[u].emplace_back(v, w, i);\n\t\te[v].emplace_back(u, w, i);\n\t\tval[i] = w;\n\t}\n\tdfs(1, 0);\n\tfor(scanf(\"%lld\", &m); m; m--) {\n\t\tll op, u, v;\n\t\tscanf(\"%lld%lld%lld\", &op, &u, &v);\n\t\tif(op == 1) {\n\t\t\tll bot = bottom[u];\n\t\t\tbit.add(dfn[bot], v-val[u]);\n\t\t\tbit.add(dfn[bot]+sz[bot], val[u]-v);\n\t\t\tval[u] = v;\n\t\t}\n\t\telse {\n\t\t\tll lca = LCA(u, v);\n\t\t\tprintf(\"%lld\\n\", bit.ask(dfn[u])+bit.ask(dfn[v])-2*bit.ask(dfn[lca]));\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1679402996,
        "uid": 122461,
        "name": "rui_er",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 ABC294G\u3010Distance Queries on a Tree\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/AT_abc294_g)\n\n\u5373\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u8981\u6c42\u652f\u6301\u5b50\u6811\u52a0\u548c\u67e5\u8be2 $u, v$ \u95f4\u7684\u8def\u5f84\u3002\n\n\u53ef\u4ee5\u7ef4\u62a4 $\\texttt{dfs}$ \u5e8f\uff0c\u8fd9\u6837\u5c31\u53d8\u6210\u4e86\u5e8f\u5217\u4e0a\u7684\u533a\u95f4\u52a0\u3002\n\n\u6bcf\u6b21\u6c42\u51fa LCA \u540e\uff0c\u67e5\u8be2 $d_{dfn_u}, d_{dfn_v}, d_{dfn_{lca}}$ \u5373\u53ef\uff0c$d$ \u662f\u5f53\u524d $\\texttt{dfs}$ \u5e8f\u6240\u8868\u793a\u7684\u70b9\u7684\u6df1\u5ea6\uff0c\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u4e8e\u662f\u53ea\u9700\u8981\u7ebf\u6bb5\u6811\u548c\u6c42 LCA \u5373\u53ef\uff0c\u6211\u7528\u7684\u500d\u589e LCA\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$\\mathcal{O}({n\\log n+q\\log n)}$\n\n[\u8bc4\u6d4b\u8bb0\u5f55](https://www.luogu.com.cn/record/105362383)\n\n\u9c9c\u82b1\uff1a\u5e94\u8be5\u53ea\u6709\u6211\u5199\u4e86 3k\uff0c\u60f3\u77e5\u9053\u600e\u4e48\u505a\u5230 $60$ \u884c\u8fd8\u4e0d\u538b\u7684\u3002",
        "postTime": 1679322437,
        "uid": 678877,
        "name": "Pengzt",
        "ccfLevel": 0,
        "title": "ABC294G Distance Queries on a Tree \u9898\u89e3"
    },
    {
        "content": "~~G \u600e\u4e48\u53c8\u662f\u677f\u5b50\u554a\uff1f~~\n\n\u628a\u8fb9\u6743\u7b97\u5230\u70b9\u6743\uff08\u6211\u8003\u8651\u7b97\u5230\u4e00\u6761\u8fb9\u7684\u513f\u5b50\u8282\u70b9\uff09\u4e0a\uff0c\u8fd9\u4fbf\u662f\u4e00\u9053\u6811\u94fe\u67e5\u8be2\uff0c\u5355\u70b9\u4fee\u6539\u7684\u9898\u4e86\u3002\n\n\u53ef\u4ee5\u7528\u6811\u94fe\u5256\u5206\u548c dfs \u5e8f + \u6811\u4e0a\u5dee\u5206\u505a\uff0c\u6211\u9009\u540e\u8005\u56e0\u4e3a\u4ee3\u7801\u66f4\u77ed\u3002\n\n\u8003\u8651\u8282\u70b9 $u$ \u53ea\u5bf9\u4ed6\u7684\u513f\u5b50\u8282\u70b9\u6709\u8d21\u732e\uff0c\u4e5f\u5c31\u662f\u5f53\u513f\u5b50\u5f80\u4e0a\u7ecf\u8fc7 $u$ \u65f6\uff0c\u624d\u4f1a\u52a0\u4e0a $u$ \u7684\u6743\u503c\uff0c\u800c $u$ \u7684\u5b50\u6811\u5728 dfs \u5e8f\u4e2d\u53c8\u662f\u4e00\u6bb5\u8fde\u7eed\u7684\u533a\u95f4\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u4e00\u6761\u6811\u94fe $u-v$\uff0c\u6211\u4eec\u628a\u4ed6\u62c6\u6210 $1-u$\uff0c$1-v$ \u518d\u51cf\u53bb\u4e24\u6b21 $1-\\operatorname{lca(u,v)}$\uff0c\u56e0\u4e3a $1-\\operatorname{lca(u,v)}$ \u8fd9\u6761\u94fe\u88ab\u91cd\u590d\u7b97\u4e86\u4e24\u6b21\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define F(i,s,t) for(register int i=(s);i<=(t);++i)\n#define R(i,s,t) for(register int i=(s);i>=(t);--i)\n#define ll long long\nusing namespace std;\n\nconst int N=2e5+5;\nint n,m,u,v,w;\nint cnt,a[N],to[N],st[N],ed[N],f[N][25],dep[N];\n//to \u8bb0\u5f55\u4e00\u6761\u8fb9\u7684\u513f\u5b50\u8282\u70b9 \nll c[N];\nstruct node{int v,w,id;};\nvector<node>G[N];\n\ninline void update(int x,int k) {for(;x<=n;x+=x&-x) c[x]+=k;}\ninline ll sum(int x)\n{\n\tll res=0;\n\tfor(;x;x^=x&-x) res+=c[x];\n\treturn res;\n}\n\nvoid dfs(int u,int fa)\n{\n\tst[u]=++cnt,dep[u]=dep[fa]+1,f[u][0]=fa;\n\tF(i,1,20) f[u][i]=f[f[u][i-1]][i-1];\n\tfor(auto i:G[u])\n\t{\n\t\tif(i.v==fa) continue;\n\t\ta[i.v]=i.w,to[i.id]=i.v;\n\t\tdfs(i.v,u);\n\t}\n\ted[u]=cnt;\n}\n\ninline int LCA(int x,int y)//lca\u677f\u5b50 \n{\n\tif(dep[x]<dep[y]) swap(x,y);\n\tR(i,20,0) if(dep[f[x][i]]>=dep[y]) x=f[x][i];\n\tif(x==y) return x;\n\tR(i,20,0) if(f[x][i]!=f[y][i]) x=f[x][i],y=f[y][i];\n\treturn f[x][0];\n}\n\nint main()\n{\n\tios::sync_with_stdio(false);\n\tcin.tie(0),cout.tie(0);\n\tcin>>n;\n\tF(i,1,n-1)\n\t{\n\t\tcin>>u>>v>>w;\n\t\tG[u].push_back((node){v,w,i});\n\t\tG[v].push_back((node){u,w,i});\n\t}                              \n\tdfs(1,0);\n\tF(i,1,n) update(st[i],a[i]),update(ed[i]+1,-a[i]);//\u5bf9\u6bcf\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u5dee\u5206 \n\tcin>>m;\n\twhile(m--)\n\t{\n\t\tint op,u,v;cin>>op>>u>>v;\n\t\tif(op==1)//\u4fee\u6539\u4e00\u6761\u8fb9\uff0c\u4e5f\u5c31\u662f\u5220\u9664\u539f\u6765\u7684\u8fb9\u5728\u52a0\u4e0a\u73b0\u5728\u7684\u8fb9\uff0c\u8bb0\u5f97\u8981\u540c\u65f6\u66f4\u6539\u8fb9\u6743\uff08\u513f\u5b50\u8282\u70b9\u7684\u70b9\u6743\uff09 \n\t\t{\n\t\t\tint x=to[u];\n\t\t\tupdate(st[x],-a[x]),update(ed[x]+1,a[x]);\n\t\t\ta[x]=v;\n\t\t\tupdate(st[x],a[x]),update(ed[x]+1,-a[x]);\n\t\t}\n\t\telse//(1->u)+(1->v)-2*(1->lca(u,v)) \n\t\t{\n\t\t\tint lca=LCA(u,v);\n\t\t\tcout<<sum(st[u])+sum(st[v])-sum(st[lca])*2<<'\\n';\n\t\t}\n\t}\n}\n```\n",
        "postTime": 1679305865,
        "uid": 501028,
        "name": "spider_oyster",
        "ccfLevel": 5,
        "title": "[ABC294G] Distance Queries on a Tree"
    },
    {
        "content": "~~\u7ec8\u4e8e\u6709\u80fd\u5199\u7684 G \u9898\u4e86~~\uff08\u559c\n\n\u5b89\u5229\u4e0b\u81ea\u5df1\u7684\u535a\u5ba2\uff1a[\u8fd9\u91cc](https://www.luogu.com.cn/blog/lmzz/atabc294g-abc294g-distance-queries-on-a-tree-ti-xie)\n\n## \u9898\u76ee\u63cf\u8ff0\n\n\u7ed9\u5b9a\u4e00\u9897\u6709 $ n $ \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u5e26\u8fb9\u6743\uff0c\u8981\u8fdb\u884c $ Q $ \u6b21\u64cd\u4f5c\uff0c\u64cd\u4f5c\u6709\u4e24\u79cd\uff1a\n\n```1 i w ```\uff1a\u5c06\u7b2c $ i $ \u6761\u8fb9\u7684\u8fb9\u6743\u6539\u4e3a $ w $\u3002\n\n```2 u v```\uff1a\u8be2\u95ee $ u,v $ \u4e24\u70b9\u7684\u8ddd\u79bb\u3002\n\n## \u9898\u76ee\u5206\u6790\n\n\u591a\u4e48\u7b80\u6d01\u7684\u9898\u9762\uff0c~~\u7231\u4e0a\u51fa\u9898\u98ce\u683c~~\u3002\n\n\u5f88\u5178\u7684\u4e00\u9053\u9898\u3002\n\n\u6811\u4e0a\u8be2\u95ee\u533a\u95f4\u5e26\u4fee\uff0c\u6811\u5256\u677f\u5b50\u3002\n\n\u5148\u7528\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u6811\uff0c\u518d\u7528\u6811\u5256\u89e3\u51b3\u66f4\u65b0\u67e5\u8be2\u95ee\u9898\u3002\n\n\u53e6\u5916\u6ce8\u610f\u8fb9\u6743\u8f6c\u70b9\u6743\u7ec6\u8282\uff0c\u6811\u5256 + \u7ebf\u6bb5\u6811\u3002\n\n\u6570\u7ec4\u610f\u4e49\uff1a\n- top \u6570\u7ec4\u8868\u793a\u91cd\u94fe\u7684\u9876\u90e8\u8282\u70b9\u3002\n- dep \u6570\u7ec4\u8868\u793a\u8282\u70b9\u6df1\u5ea6\u3002\n- size \u6570\u7ec4\u8868\u793a\u91cd\u94fe\u5927\u5c0f\u3002\n- fa \u6570\u7ec4\u8868\u793a\u8282\u70b9\u7236\u4eb2\u3002\n- son \u6570\u7ec4\u8868\u793a\u8282\u70b9\u7684\u91cd\u513f\u5b50\u3002\n- id \u6570\u7ec4\u8868\u793a\u8282\u70b9\u7ebf\u6bb5\u6811\u4e2d\u7684\u7f16\u53f7\u3002\n- vl \u6570\u7ec4\u8868\u793a\u4ee5\u8282\u70b9\u4e3a\u7ed3\u5c3e\u7684\u8fb9\u7684\u8fb9\u6743\u3002\uff08\u8fd9\u91cc\u5c31\u662f\u8fb9\u6743\u70b9\u6743\u5566\n- w \u70b9\u6743\u5728\u7ebf\u6bb5\u6811\u4e2d\u7684\u6570\u7ec4\u3002\n\n\n\u5355\u70b9\u4fee\u6539\u751a\u81f3\u4e0d\u7528 lazy_tag\uff0c\u53ea\u662f\u8c03\u4ee3\u7801~~\u6709\u70b9~~\u5d29\u6e83\u3002\u3002\u3002\n\n\u4e0d\u4f1a\u8bf7\u53f3\u8f6c\uff1a[\u7ebf\u6bb5\u6811\u677f\u5b50](https://www.luogu.com.cn/problem/P3372) [\u6811\u5256\u677f\u5b50](https://www.luogu.com.cn/problem/P3384) [\u8fb9\u6743\u8f6c\u70b9\u6743](https://www.luogu.com.cn/blog/ShadderLeave/solution-p3038)\n\n## Code\n\n\u4e8e\u662f\u4e4e\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define maxn 200020\nstruct node1{\n\tll val,to,next,first;\n}e[maxn<<1];\nll n,head[maxn],cnt;\ninline void add(ll u,ll v,ll x){//\u94fe\u5f0f\u524d\u5411\u661f \n\te[++cnt].to=v;\n\te[cnt].next=head[u];\n\te[cnt].val=x;\n\te[cnt].first=u;\n\thead[u]=cnt;\n}\n//\u6811\u5256\u90e8\u5206 \nll top[maxn],dep[maxn],fa[maxn],Size[maxn],son[maxn],id[maxn],w[maxn],vl[maxn],idx;\nvoid dfs1(ll u,ll f){\n\tSize[u]=1;\n\tson[u]=0;\n\tfor(int i=head[u];i;i=e[i].next){\n\t\tll v=e[i].to;\n\t\tif(v==f) continue;\n\t\tdep[v]=dep[u]+1;\n\t\tfa[v]=u;\n\t\tvl[v]=e[i].val;\n\t\tdfs1(v,u);\n\t\tSize[u]+=Size[v];\n\t\tif(Size[son[u]]<Size[v]) son[u]=v;\n\t}\n}\nvoid dfs2(ll u,ll f){\n\tid[u]=++idx;\n\tw[idx]=vl[u];\n\ttop[u]=f;\n\tif(son[u]) dfs2(son[u],f);\n\tfor(int i=head[u];i;i=e[i].next){\n\t\tll v=e[i].to;\n\t\tif(v!=fa[u]&&v!=son[u]) dfs2(v,v);\n\t}\n}\n//\u7ebf\u6bb5\u6811\u90e8\u5206 \nll tree[maxn<<2];\ninline ll ls(ll x){\n\treturn x<<1;\n}\ninline ll rs(ll x){\n\treturn x<<1|1;\n}\ninline void push_up(ll p){//\u4e0a\u4f20 \n\ttree[p]=tree[ls(p)]+tree[rs(p)];\n} \nvoid build(ll p,ll l,ll r){//\u5efa\u6811 \n\tif(l==r){\n\t\ttree[p]=w[l];\n\t\treturn ;\n\t}\n\tll mid=(l+r)>>1;\n\tbuild(ls(p),l,mid);\n\tbuild(rs(p),mid+1,r);\n\tpush_up(p);\n}\nvoid update(ll p,ll l,ll r,ll x,ll k){//\u5355\u70b9\u4fee\u6539 \n\tif(l==r){\n\t\ttree[p]=k;\n\t\treturn ;\n\t}\n\tll mid=(l+r)>>1;\n\tif(mid>=x) update(ls(p),l,mid,x,k);\n\telse update(rs(p),mid+1,r,x,k);\n\tpush_up(p);\n}\nll query(ll p,ll l,ll r,ll x,ll y){//\u67e5\u8be2 \n\tll res=0;\n\tif(x<=l&&y>=r){\n\t\treturn tree[p];\n\t}\n\tll mid=(l+r)>>1;\n\tif(mid>=x) res+=query(ls(p),l,mid,x,y);\n\tif(y>mid) res+=query(rs(p),mid+1,r,x,y);\n\treturn res;\n}\nvoid modify(ll j,ll k){//\u6811\u5256\u5bf9\u5e94\u7684\u4fee\u6539\u64cd\u4f5c\n\tj<<=1;\n\tll u=e[j].first,v=e[j].to;\n\tif(dep[u]<dep[v]) swap(u,v);\n\tupdate(1,1,n,id[u],k);\n}\nll ask(ll u,ll v){//\u6811\u5256\u5bf9\u5e94\u7684\u67e5\u8be2\u8981\u6c42\n\tll res=0;\n\tif(u==v) return 0;\n\twhile(top[u]!=top[v]){\n\t\tif(dep[top[u]]<dep[top[v]]) swap(u,v);\n\t\tres+=query(1,1,n,id[top[u]],id[u]);\n\t\tu=fa[top[u]];\n\t}\n\tif(dep[v]<dep[u]) swap(u,v);\n\tres+=query(1,1,n,id[u]+1,id[v]);\n\treturn res;\n}\nint main(){\n\tscanf(\"%lld\",&n); \n\tll a,b,c;\n\tfor(int i=1;i<n;i++){\n\t\tscanf(\"%lld%lld%lld\",&a,&b,&c);\n\t\tadd(a,b,c);\n\t\tadd(b,a,c);\n\t}\n\tdfs1(1,0);\n\tdfs2(1,1);\n\tbuild(1,1,n);\n\tll q,op;\n\tscanf(\"%lld\",&q);\n\twhile(q--){\n\t\tscanf(\"%lld%lld%lld\",&op,&a,&b);\n\t\tif(op==1) modify(a,b); \n\t\telse{\n\t\t\tprintf(\"%lld\\n\",ask(a,b));\n\t\t}\n\t}\n\treturn 0;\n}\n```\n[AC code](https://www.luogu.com.cn/record/108295986)\n\n###### ~~\u4e00\u4e9b\u5e9f\u8bdd~~\n\n\u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\uff0c\u5927\u4f6c\u52ff\u55b7\u3002\u82e5\u9898\u89e3\u6709\u95ee\u9898\uff0c\u611f\u8c22\u5404\u4f4d\u795e\u7287\u6307\u5bfc\u3002~~\u7ba1\u7406\u5458\u5927\u5927\u6c42\u901a\u8fc7\u554aqwq~~\n\n~~\u6700\u540e\u4e0d\u8981\u8138\u6c42\u5173\u6ce8qwq.~~",
        "postTime": 1681632962,
        "uid": 688596,
        "name": "zhengzhi200937",
        "ccfLevel": 0,
        "title": "AT_abc294_g [ABC294G] Distance Queries on a Tree\u9898\u89e3"
    },
    {
        "content": "\u9898\u610f\u4e3b\u8981\u662f\u8ba9\u4f60\u5728\u6811\u4e0a\u6539\u4e00\u4e2a\u8fb9\u7684\u503c\u548c\u6c42\u4e00\u4e0b\u4e24\u7684\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\u3002\n\n\u90a3\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u6811\u94fe\u5256\u5206\u7684\u6a21\u7248\u9898\uff0c\u5206\u4e00\u4e0b\u8f7b\u91cd\u513f\u5b50\uff0c\u7136\u540e\u5c06\u6811\u5256\u6210\u82e5\u5e72\u6761\u94fe\uff0c\u53ea\u9700\u8981\u5c06\u8fb9\u5316\u6210\u70b9\uff0c$i$ \u5230 $i$ \u7684\u7236\u4eb2\u5e94\u79f0\u4e3a $i$ \u53f7\u8fb9\u3002\n\n\u67e5\u8be2\uff1a$O(\\log^2(n))$\u3002\n\n\n\u5355\u70b9\u4fee\u6539\uff1a$O(\\log_2(n))$\u3002 \n\n\u5f53\u7136\u4e5f\u53ef\u4ee5\u7528 LCT \u6765\u505a\u5230\u66f4\u4f18\u79c0\u7684 $O(\\log_2(n))$\uff0c\u4f46\u8fd9\u91cc\u91c7\u7528\u4e86\u597d\u8c03\u4e00\u4e9b\u7684\u6811\u94fe\u5256\u5206\u3002\n\n\u8fd8\u6709\u4e00\u79cd\u62ec\u53f7\u5e8f\u5dee\u5206\u7684\u7b97\u6cd5\uff0c\u867d\u7136\u5e38\u6570\u5c0f\u4e00\u4e9b\u4e0d\u8fc7\u6ca1\u6570\u636e\u7ed3\u6784\u597d\u60f3\u3002\n\n\n```cpp\n#include <bits/stdc++.h>\n// #include <ext/rope>\nusing namespace std;\n// using namespace __gnu_cxx;\nnamespace MAIN {\n\tconst int N = 2e5 + 5;\n\tint n, m, cnt, M;\n\tstruct edge {\n\t\tint nxt, to, val;\n\t} e[N * 2];\n\tint num, h[N];\n\tvoid addedge(int x, int y, int z) {\n\t\te[++num].nxt = h[x];\n\t\te[num].to = y;\n\t\te[num].val = z;\n\t\th[x] = num;\n\t}\n\tint son[N], dep[N], fa[N], sz[N];\n\tint id[N], top[N], dfn[N];\n\tint W[N], V[N], U[N], val[N];\n\tlong long sum[N << 2];\n\tvoid update(int p) {\n\t\tsum[p] = sum[p << 1] + sum[p << 1 | 1];\n\t}\n\tvoid change(int p, int l, int r, int x, int y) {\n\t\tif (l == r) {\n\t\t\tsum[p] = y;\n\t\t\treturn;\n\t\t}\n\t\tint mid = (l + r) >> 1;\n\t\tif (x <= mid) change(p << 1, l, mid, x, y);\n\t\telse change(p << 1 | 1, mid + 1, r, x, y);\n\t\tupdate(p); \n\t}\n\tlong long query(int p, int l, int r, int x, int y) {\n\t\tif (x <= l && r <= y) return sum[p];\n\t\tint mid = (l + r) >> 1;\n\t\tlong long ans = 0;\n\t\tif (x <= mid) ans += query(p << 1, l, mid, x, y);\n\t\tif (y > mid) ans += query(p << 1 | 1, mid + 1, r, x, y);\n\t\treturn ans; \n\t}\n\tvoid dfs1(int x, int f) {\n\t\tfa[x] = f;\n\t\tsz[x] = 1;\n\t\tdep[x] = dep[f] + 1;\n\t\tint t = -1;\n\t\tfor (int i = h[x]; i; i = e[i].nxt) {\n\t\t\tint y = e[i].to;\n\t\t\tif (y == f) continue;\n\t\t\tval[y] = e[i].val;\n\t\t\tdfs1(y, x);\n\t\t\tsz[x] += sz[y];\n\t\t\tif (sz[y] > t) {\n\t\t\t\tt = sz[y];\n\t\t\t\tson[x] = y;\n\t\t\t}\n\t\t}\n\t}\n\tvoid dfs2(int x, int f) {\n\t\ttop[x] = f;\n\t\tid[x] = ++cnt;\n\t\tdfn[cnt] = x;\n\t\tchange(1, 1, n, id[x], val[x]);\n\t\tif (son[x] == 0) return;\n\t\tdfs2(son[x], f);\n\t\tfor (int i = h[x]; i; i = e[i].nxt) {\n\t\t\tint y = e[i].to;\n\t\t\tif (y == fa[x] || y == son[x]) continue;\n\t\t\tdfs2(y, y);\n\t\t}\n\t}\n\tlong long querypath(int x, int y) {\n\t\tif (x == y) return 0;\n\t\tlong long ans = 0;\n\t\twhile (top[x] != top[y]) {\n\t\t\tif (dep[top[x]] < dep[top[y]]) {\n\t\t\t\tswap(x, y);\n\t\t\t}\n\t\t\tans += query(1, 1, n, id[top[x]], id[x]);\n\t//\t\tcout << query(id[top[x]], id[x]) << ' ';\n\t\t\tx = fa[top[x]];\n\t\t}\n\t//\tcout << '\\n';\n\t\tif (dep[x] > dep[y]) {\n\t\t\tswap(x, y);\n\t\t}\n\t//\tcout << id[x] + 1 << ' ' << id[y] << '\\n';\n\t\tans += query(1, 1, n, id[x] + 1, id[y]);\n\t\treturn ans;\n\t}\n\tint main() {\n\t\tios_base::sync_with_stdio(false);\n\t\tcin.tie(0), cout.tie(0);\n\t\tcin >> n;\n\t\tfor (int i = 1; i < n; ++i) {\n\t\t\tcin >> U[i] >> V[i] >> W[i];\n\t\t\taddedge(U[i], V[i], W[i]);\n\t\t\taddedge(V[i], U[i], W[i]);\n\t\t}\n\t\tdfs1(1, 0);\n\t\tdfs2(1, 1);\n\t\tint q;\n\t\tcin >> q;\n\t\tfor (int i = 1, x, y, s; i <= q; ++i) {\n\t\t\tcin >> s;\n\t\t\tcin >> x >> y;\n\t\t\tif (s == 2) {\n\t\t\t\tcout << querypath(x, y) << '\\n';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tint u = U[x], v = V[x];\n\t\t\t\tif (fa[v] == u) swap(u, v);\n\t\t\t\tchange(1, 1, n, id[u], y);\n\t\t\t}\n\t\t}\n\t\treturn 0; \n\t}\n}\nint main() {\n\treturn MAIN::main();\n}\n```",
        "postTime": 1679842073,
        "uid": 533915,
        "name": "_sublimetext_",
        "ccfLevel": 0,
        "title": "ABC294G"
    },
    {
        "content": "## Description\n\u6709\u4e00\u4e2a\u8282\u70b9\u6570\u4e3a $N$ \u7684\u6811\u3002\u8fb9 $i$ \u8fde\u63a5 $u_i$ \u548c $v_i$\uff0c\u8fb9\u7684\u6743\u503c\u4e3a $w_i$\u3002\n\n$Q$ \u6b21\u8be2\u95ee\uff0c\u8be2\u95ee\u4e00\u5171\u6709\u4e24\u79cd\u3002\n\n```1 i w``` \uff1a\u6539\u53d8\u7b2c $i$ \u6761\u8fb9\u7684\u6743\u503c\u4e3a $w$\u3002\n\n```2 u v``` \uff1a\u8f93\u51fa $u$ \u5230 $v$ \u7684\u8def\u5f84\u8ddd\u79bb\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a\n\n$1 \\leq N \\leq 2 \\times 10^5$\n\n$1 \\leq u_i,v_i \\leq N$\n\n$1 \\leq w_i \\leq 10^9$\n\n$1 \\leq Q \\leq 2 \\times 10^5$\n\n## Solution\n\u7ecf\u5178\u6811\u5256\u3002\u5982\u679c\u4e0d\u4f1a\u6811\u5256\uff0c\u79fb\u6b65[\u6a21\u677f\u9898](https://www.luogu.com.cn/problem/P3384)\uff0c\u8fd8\u6709[\u8fb9\u6743\u8f6c\u70b9\u6743trick](https://www.luogu.com.cn/blog/ShadderLeave/solution-p3038)\u3002\n\n\u5b66\u5b8c\u6811\u5256\u540e\uff0c\u8fd9\u4e2a\u9898\u5176\u5b9e\u5c31\u4e00\u773c\u4e86\u3002\u8fd9\u4e2a\u9898\u66f4\u6539\u6743\u503c\u65f6\u53ea\u66f4\u65b0\u4e00\u6761\u8fb9\uff0c\u4e0d\u9700\u8981\u61d2\u6807\u8bb0\uff0c\u7ed9\u4e2a\u6570\u7ec4\u5b58\u50a8\u4e00\u4e0b\u7b2c $i$ \u6761\u8fb9\u7684 $u_i,v_i$\uff0c\u66b4\u529b\u4fee\u6539\u5373\u53ef\u3002\n\n\u6c42\u8def\u5f84\u8ddd\u79bb\u7684\u65f6\u5019\u6ce8\u610f\u4e00\u4e0b LCA \u5904\u7684\u6743\u503c\u4e0d\u5c5e\u4e8e\u8def\u5f84\uff0c\u8981\u51cf\u53bb\u3002\n\n## Code\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define ll long long\n#define next nxt\n#define re register\n#define il inline\nconst int N = 2e5 + 5;\nconst int M = 2e5 + 5;\t\nusing namespace std;\nint max(int x,int y){return x > y ? x : y;}\nint min(int x,int y){return x < y ? x : y;}\n\nstruct node{\n\tint u,v,w,next;\n}edge[M<<1],e[M<<1]; int head[N],num_edge;\nint w[N],wt[N];\nint n,m,u,v,ww,x,y,k,op;\nint tree[N<<2];\nint son[N],id[N],fa[N],tot,dep[N],siz[N],top[N];\n\nil int read()\n{\n\tint f=0,s=0;\n\tchar ch=getchar();\n\tfor(;!isdigit(ch);ch=getchar()) f |= (ch=='-');\n\tfor(; isdigit(ch);ch=getchar()) s = (s<<1) + (s<<3) + (ch^48);\n\treturn f ? -s : s;\n}\n\nil void add(int from,int to,int dis)\n{\n\tedge[++num_edge] = (node){from,to,dis,head[from]};\n\thead[from] = num_edge;\n}\n\n#define lc p<<1\n#define rc p<<1|1\n\nil void build(int p,int l,int r)\n{\n\tif(l == r)\n\t{\n\t\ttree[p] = wt[l];\n\t\treturn ;\n\t}\n\tint mid = (l+r) >> 1;\n\tbuild(lc,l,mid);\n\tbuild(rc,mid+1,r);\n\ttree[p] = tree[lc] + tree[rc];\n}\n\nil void Modify(int nl,int nr,int l,int r,int p,int k)\n{\n\tif(l >= nl && r <= nr)\n\t{\n\t\ttree[p] = k;\n\t\treturn ;\n\t}\n\tint mid = (l+r) >> 1;\n\tif(nl <= mid) Modify(nl,nr,l,mid,lc,k);\n\tif(nr > mid) Modify(nl,nr,mid+1,r,rc,k);\n\ttree[p] = tree[lc] + tree[rc];\n}\n\nil int Query(int nl,int nr,int l,int r,int p)\n{\n\tint res = 0;\n\tif(l >= nl && r <= nr) return tree[p];\n\tint mid = (l+r) >> 1;\n\tif(nl <= mid) res += Query(nl,nr,l,mid,lc);\n\tif(nr > mid) res += Query(nl,nr,mid+1,r,rc);\n\treturn res;\n}\n\n/*------------------------------------------*/\n\nil void dfs1(int x,int f)\n{\n\tdep[x] = dep[f] + 1 , fa[x] = f , siz[x] = 1;\n\tfor(re int i=head[x];i;i=edge[i].next)\n\t{\n\t\tint y = edge[i].v , ww = edge[i].w;\n\t\tif(y == f) continue;\n\t\tdfs1(y,x);\n\t\tw[y] = ww;\n\t\tsiz[x] += siz[y];\n\t\tif(siz[son[x]] < siz[y]) son[x] = y;\n\t}\n}\n\nil void dfs2(int x,int topf)\n{\n\tid[x] = ++tot , wt[tot] = w[x] , top[x] = topf;\n\tif(!son[x]) return ;\n\tdfs2(son[x],topf);\n\tfor(re int i=head[x];i;i=edge[i].next)\n\t{\n\t\tint y = edge[i].v;\n\t\tif(y == fa[x] || y == son[x]) continue;\n\t\tdfs2(y,y);\n\t}\n}\n\nil void Modify_way(int x,int y,int k)\n{\n\twhile(top[x] != top[y])\n\t{\n\t\tif(dep[top[x]] < dep[top[y]]) swap(x,y);\n\t\tModify(id[top[x]],id[x],1,n,1,k);\n\t\tx = fa[top[x]];\n\t}\n\tif(dep[x] > dep[y]) swap(x,y);\n\tif(x == y) return ;\n\tModify(id[x]+1,id[y],1,n,1,k);\n}\n\nil int Query_way(int x,int y)\n{\n\tint res = 0;\n\twhile(top[x] != top[y])\n\t{\n\t\tif(dep[top[x]] < dep[top[y]]) swap(x,y);\n\t\tres += Query(id[top[x]],id[x],1,n,1);\n\t\tx = fa[top[x]];\n\t}\n\tif(dep[x] > dep[y]) swap(x,y);\n\tres += Query(id[x],id[y],1,n,1);\n\tres -= Query(id[x],id[x],1,n,1);\n\treturn res;\n}\n\nsigned main()\n{\n\tn = read();\n\tfor(re int i=1;i<=n-1;i++)\n\t{\n\t\tu = read() , v = read() , ww = read();\n\t\tadd(u,v,ww) , add(v,u,ww);\n\t\te[i] = (node){u,v,0,0};\n\t}\n\tdfs1(1,0);\n\tdfs2(1,1);\n\tbuild(1,1,n);\n\tm = read();\n\tfor(re int i=1;i<=m;i++)\n\t{\n\t\top = read() , x = read() , y = read();\n\t\tif(op == 1) Modify_way(e[x].u,e[x].v,y);\n\t\tif(op == 2) cout << Query_way(x,y) << \"\\n\";\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1679475356,
        "uid": 231543,
        "name": "bloodstalk",
        "ccfLevel": 4,
        "title": "[ABC294G] Distance Queries on a Tree \u9898\u89e3"
    },
    {
        "content": "\u9898\u610f\u5c31\u662f\u5355\u8fb9\u4fee\u6539\u6c42\u94fe\u548c\u3002\n\n\u6811\u5206\u5757\u53ef\u4ee5\u505a\u5230 $O(1)$ \u4fee\u6539\uff0c$O(\\sqrt n)$ \u67e5\u8be2\uff0c\u5f53\u7136\u76f4\u63a5\u91cd\u5256\u5e8f\u4e0a\u6bcf\u6761\u91cd\u94fe\u5355\u72ec\u5206\u5757\u4e5f\u80fd\u5f97\u5230\u540c\u6837\u7684\u6548\u679c\u3002\n\n\u81ea\u7136\u4e5f\u80fd $O(\\sqrt n)$ \u4fee\u6539\uff0c$O(1)$ \u67e5\u8be2\uff0c\u4e0d\u8fc7\u8fd9\u91cc\u6709\u4e00\u4e2a LCA \u7684\u74f6\u9888\uff0c\u6240\u4ee5\u9700\u8981 ST \u8868\u6216 Four Russian\u3002\n\n\u666e\u901a\u7684\u6811\u5256\u52a0\u6811\u72b6\u6570\u7ec4\u662f\u6700\u5e73\u51e1\u7684 $O(\\log n)$ \u4fee\u6539 $O(\\log^2n)$ \u67e5\u8be2\u3002\n\n\u4f7f\u7528 LCT \u6216\u201c\u5168\u5c40\u5e73\u8861\u4e8c\u53c9\u6811\u201d\u53ef\u4ee5\u505a\u5230 $O(\\log n)$ \u4fee\u6539\u67e5\u8be2\u3002\n\n\u4e0d\u8fc7\u6211\u8ba4\u4e3a\u5e38\u6570\u6700\u5c0f\u4e14\u6700\u4f18\u79c0\u7684\u65b9\u6cd5\u662f\u62ec\u53f7\u5e8f\u5dee\u5206\u548c\u6811\u72b6\u6570\u7ec4\uff0c\u540c\u6837\u662f $O(\\log n)$ \u4fee\u6539\u67e5\u8be2\u3002\n\n\u5f53\u7136\u8003\u573a\u4e0a\u8fd8\u662f LCT \u6700\u597d\uff0c\u6ce8\u610f\u4f7f\u7528\u4e86\u5316\u8fb9\u4e3a\u70b9\uff0c[\u8d5b\u65f6 AC \u8bb0\u5f55](https://atcoder.jp/contests/abc294/submissions/39863267)\u3002",
        "postTime": 1679360545,
        "uid": 502410,
        "name": "EnofTaiPeople",
        "ccfLevel": 0,
        "title": "\u5c0f\u6e05\u65b0\u4e00\u9898\u591a\u89e3"
    },
    {
        "content": "###  G\n\u9996\u5148\u8003\u8651\u8fd9\u5f20\u56fe\u7684 EulerTour,\u7b80\u5355\u70b9\u8bf4\uff0c\u5c31\u662f dfs \u4e00\u904d\uff0c\u628a\u6bcf\u4e2a\u70b9\u5165\u6808\u51fa\u6808\u987a\u5e8f\u5b58\u8d77\u6765\uff0c\u4e3e\u4e2a\u4f8b\u5b50\uff1a\n```\n2\n1 2\n2 3 \n```\n\n\n\u8fd9\u68f5\u6811\u7684 Euler Tour \u5c31\u662f `1 2 3 3 2 1`\u3002\n\n\u76f8\u5f53\u4e8e\u628a\u6811\u62cd\u6210\u5e8f\u5217\uff0c\u4e4b\u540e\u5728\u4e0a\u9762\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u5230\u6839\u7684\u8ddd\u79bb\u3002\n\n\u64cd\u4f5c\u4e00  \u6539\u53d8\u67d0\u6761\u8fb9\u6743\u503c\u4e3a $w$ \u76f8\u5f53\u4e8e\u628a\u8fd9\u6761\u8fb9\u4e0a\u5165\u6808\u987a\u5e8f**\u76f8\u5bf9\u9760\u540e**\u7684\u70b9\uff08son\uff09\u7684\u503c\u6539\u4e3a $w$\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4/\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u64cd\u4f5c\u4e8c \u7edf\u8ba1\u7b54\u6848 \u6811\u4e0a\u8282\u70b9 $u \\ v$  \u7684\u8ddd\u79bb\uff1a $\\operatorname{dis}(u, v) =\\operatorname{dis}(1, u) + \\operatorname{dis}(1, v) - 2 \\times \\operatorname{dis}(1, lca(u, v))$\n\n\u6240\u4ee5\u627e\u51fa $u\\ v $  \u7684 lca \u7edf\u8ba1\u5373\u53ef\u3002\n\n$Code$ \n\n```cpp\nvector<int> G[maxn];\n//LCA \nint p[maxn][21];\nint dep[maxn];\nint in[maxn], out[maxn];\nint T = 0;\nvoid dfs(int u, int fa, int depth) {\n    dep[u] = depth; p[u][0] = fa;\n    in[u] = ++T;\n    for (int i = 1; i <= 20; i++) p[u][i] = p[p[u][i - 1]][i - 1];\n    for (int i = 0; i < G[u].size(); i++) if (G[u][i] != fa) dfs(G[u][i], u, depth + 1);\n    out[u] = ++T;\n}\nint LCA(int x, int y) {\n    if (dep[x] < dep[y]) swap(x, y);\n    for (int i = 20; i >= 0; i--) if(dep[p[x][i]] >= dep[y]) x = p[x][i];\n    if (x == y) return x;\n    for (int i = 20; i >= 0; i--) if (p[x][i] != p[y][i]) x = p[x][i], y = p[y][i];\n    return p[x][0];\n}\nint lf[maxn], rf[maxn];\nint c[maxn], we[maxn];\nvoid add(int x, int y) {\n    for (int i = x; i <= T; i += i & (-i)) {\n        c[i] += y; \n    }\n    return;\n}\nint sum(int x) {\n    int res = 0;\n    for (int i = x; i; i -= i &-i) {\n        res += c[i];\n    }\n    return res;\n}\nsigned main() {\n    cin >> n;\n    rep_(i, 1, n - 1) {\n        int u, v, w;\n        cin >> u >> v >> w;\n        G[u].pb(v);\n        G[v].pb(u);\n        lf[i] = u, rf[i] = v, we[i] = w;\n    }\n    dfs(1, 0, 1);\n    for (int i = 1; i <= n - 1; i++) {\n        if (in[lf[i]] > in[rf[i]]) swap(lf[i], rf[i]);\n        add(in[rf[i]], we[i]);\n        add(out[rf[i]], -we[i]);    \n    }\n    int q; \n    cin >> q;\n    rep_(i, 1, q) {\n        int opt, x, y;\n        cin >> opt >> x >> y;\n        if (opt == 1) {\n            add(in[rf[x]], -we[x] + y);\n            add(out[rf[x]], we[x] - y);\n            we[x] = y;\n        } else {\n            cout << sum(in[x]) + sum(in[y]) - 2 * sum(in[LCA(x, y)]) << endl;\n        }\n    }\n```\n",
        "postTime": 1679306816,
        "uid": 525216,
        "name": "Crane_w",
        "ccfLevel": 5,
        "title": "abc294G"
    },
    {
        "content": "[\u6d1b\u8c37](https://www.luogu.com.cn/problem/AT_abc294_g)\n\n[Atcoder](https://www.luogu.com.cn/remoteJudgeRedirect/atcoder/abc294_g)\n\n## \u5206\u6790\n\u6811\u5256\u5728\u8fd9\u91cc\u5c31\u4e0d\u8be6\u7ec6\u8bb2\u4e86\uff0c[\u6a21\u677f\u9898](https://www.luogu.com.cn/problem/P3384)\u7684\u9898\u89e3\u6bd4\u6211\u8bb2\u5f97\u597d\u3002\n\n\u8fd9\u9053\u9898\u7ed9\u7684\u662f\u8fb9\u6743\uff0c\u6211\u4eec\u8003\u8651\u8f6c\u5316\u4e3a\u70b9\u6743\u3002\n\n\u7ecf\u5178\u8f6c\u5316\uff0c\u628a\u81ea\u5df1\u8fde\u5411\u7236\u4eb2\u7684\u8def\u5f84\u6743\u503c\u4f5c\u4e3a\u81ea\u5df1\u7684\u70b9\u6743\uff0c\u7136\u540e\u6c42\u8def\u5f84 $u,v$ \u7684\u6743\u503c\u548c\u5c31\u662f\u6c42 $u\\sim lca$ \u7684\u548c\u4e0e $v\\sim lca$ \u7684\u548c\u7684\u548c\u3002\n\n\u4f46\u662f\u8fd9\u6837\u8f6c\u5316\u5b8c\uff0c$lca$ \u7684\u6743\u503c\u5e76\u4e0d\u5bf9\u7b54\u6848\u4ea7\u751f\u8d21\u732e\uff0c\u9700\u8981\u51cf\u6389\u3002\n\n\u6ce8\u610f\u6570\u7ec4\u5f00\u5230 $2\\times 10^5$\u3002\n\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nint n,m,q,rt,w[300001],sum[8000001],tag[8000001],u[300001],v[300001],qqw[300001];\nstruct edge\n{\n\tint v,w;\n};\nvector<edge> g[300001];\nvoid addtag(int o,int l,int r,int v)\n{\n    tag[o]=v;\n    sum[o]=(r-l+1)*v;\n}\nvoid downtag(int o,int l,int r)\n{\n    if(tag[o]==0) return;\n    int mid=r+l>>1;\n    addtag((o<<1),l,mid,tag[o]);\n    addtag((o<<1)+1,mid+1,r,tag[o]);\n    tag[o]=0;\n}\nvoid uptag(int o)\n{\n    sum[o]=sum[o<<1]+sum[(o<<1)+1];\n}\nvoid add(int o,int l,int r,int x,int y,int v)\n{\n    if(l>y || r<x)\n    {\n        return;\n    }\n    if(x<=l && r<=y)\n    {\n        addtag(o,l,r,v);\n        return;\n    }\n    int mid=r+l>>1;\n    downtag(o,l,r);\n    add((o<<1),l,mid,x,y,v);\n    add((o<<1)+1,mid+1,r,x,y,v);\n    uptag(o);\n}\nint get(int o,int l,int r,int x,int y)\n{\n    if(l>y || r<x)\n    {\n        return 0;   \n    }\n    if(x<=l && r<=y)\n    {\n        return sum[o];\n    }\n    int mid=l+r>>1;\n    downtag(o,l,r);\n    return (get(o<<1,l,mid,x,y)+get((o<<1)+1,mid+1,r,x,y));\n}\nint fat[300001],siz[300001],dep[300001],hson[300001],top[300001],cnt,dfn[300001],dis[300001];\nvoid getdfsh(int u,int fa)\n{\n    fat[u]=fa;\n    dep[u]=dep[fa]+1;\n    int lll=0;\n    for(int i=0;i<g[u].size();i++)\n    {\n        int v=g[u][i].v;\n        if(v==fa) continue;\n        getdfsh(v,u);\n        if(siz[v]>lll)\n        {\n            hson[u]=v;\n            lll=siz[v];\n        }\n        siz[u]+=siz[v];\n    }\n    siz[u]++;\n}\nvoid gettd(int u,int fa)\n{\n    dfn[u] = ++cnt;\n    dis[u] = cnt;\n    if(hson[fat[u]]==u)\n    {\n        top[u]=top[fa];\n    }\n    else\n    {\n        top[u]=u;\n    }\n    if(hson[u]!=0) gettd(hson[u],u); \n    for(int i=0;i<g[u].size();i++)\n    {\n        int v=g[u][i].v;\n        if(v==fa||v==hson[u]) continue;\n        gettd(v,u);\n    }\n}\nint addlsum(int st,int ed,int v)\n{\n    if(dfn[st]<dfn[ed]) swap(st,ed);\n    int u=st,re=0;\n    while(1)\n    {\n        if(dfn[top[u]]<=dfn[ed])\n        {\n            add(1,1,n,dfn[ed],dfn[u],v);\n            break;\n        }\n        add(1,1,n,dfn[top[u]],dfn[u],v);\n        u=fat[top[u]];\n    }\n    return re;\n} \nint getlsum(int st,int ed)\n{\n    if(dfn[st]<dfn[ed]) swap(st,ed);\n    int u=st,re=0;\n    while(1)\n    {\n        if(dfn[top[u]]<=dfn[ed])\n        {\n            re+=get(1,1,n,dfn[ed],dfn[u]);\n            break;\n        }\n        re+=get(1,1,n,dfn[top[u]],dfn[u]);\n        u=fat[top[u]];\n    }\n    return re;\n} \n\nvoid getdis(int u, int fa) {\n    for (int i = 0; i < g[u].size(); i++) {\n        int v = g[u][i].v;\n        if (v == fa) continue;\n        getdis(v, u);\n        dis[u] = max(dis[u], dis[v]);\n    }\n}\nint father[500001][21];\nvoid getfather(int u,int fa)\n{\n    father[u][0]=fa;\n    for(int i=1;i<=20;i++)\n    {\n        father[u][i]=father[father[u][i-1]][i-1]; \n    }\n    for(int i=0;i<g[u].size();i++)\n    {\n        int v=g[u][i].v;\n        if(v==fa) continue;\n        getfather(v,u);\n    }\n}\n\nint getlca(int u,int v)\n{\n    if(dep[u]>dep[v]) swap(u,v); \n    int mul=dep[v]-dep[u],w=0;\n    while(mul)\n    {\n        if(mul&1) v=father[v][w];\n        mul>>=1;\n        w++;\n    }\n    if(u==v) return u;\n    for(int i=20;i>=0;i--)\n    {\n        if(father[u][i]!=father[v][i])\n        {\n            u=father[u][i];\n            v=father[v][i];\n        }\n    }\n    return father[u][0];\n}\nvoid dfs1(int u,int fa)\n{\n\tfor(int i=0;i<g[u].size();i++)\n\t{\n\t\tint v=g[u][i].v,www=g[u][i].w;\n\t\tif(v==fa) continue;\n\t\tw[v]=www;\n\t\tdfs1(v,u);\n\t}\n}\nsigned main()\n{\n    scanf(\"%lld\",&n);\n    rt=1;\n    for(int i=1;i<n;i++)\n    {\n        scanf(\"%lld%lld%lld\",&u[i],&v[i],&qqw[i]);\n        g[u[i]].push_back((edge){v[i],qqw[i]});\n        g[v[i]].push_back((edge){u[i],qqw[i]});\n    }\n    dfs1(rt,0);\n    getdfsh(rt,0);\n    gettd(rt,0);\n    getdis(rt,0);\n    getfather(rt,0);\n    for(int i=1;i<=n;i++)\n    {\n        add(1,1,n,dfn[i],dfn[i],w[i]);\n    }\n    scanf(\"%lld\",&q);\n    for(int i=1,opt,uu,vv,w;i<=q;i++)\n    {\n        scanf(\"%lld%lld\",&opt,&uu);\n        if(opt==2)\n        {\n            scanf(\"%lld\",&vv);\n            int lca=getlca(uu,vv);\n            printf(\"%lld\\n\",((getlsum(uu,lca)+getlsum(vv,lca)-2*get(1,1,n,dfn[lca],dfn[lca]))));\n        }\n        if(opt==1)\n        {\n        \tvv=v[uu];\n            uu=u[uu];\n            int lca=getlca(uu,vv);\n            scanf(\"%lld\",&w);\n\t\t\tif(uu==lca) add(1,1,n,dfn[vv],dfn[vv],w);\n\t\t\tif(vv==lca) add(1,1,n,dfn[uu],dfn[uu],w);\n        }\n    }\n}\n```",
        "postTime": 1679292811,
        "uid": 477954,
        "name": "lizhous",
        "ccfLevel": 0,
        "title": "Distance Queries on a Tree \u9898\u89e3"
    },
    {
        "content": "[\u6216\u8bb8\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\uff1f](https://zhuanlan.zhihu.com/p/615414755)\n### \u9898\u610f\u63cf\u8ff0\n\n\u7ed9\u4f60\u4e00\u4e2a\u8282\u70b9\u6570\u4e3a $n$ \u7684\u6811\uff0c\u6bcf\u6761\u8fb9\u7ed9\u5b9a\u4e00\u4e2a\u8fb9\u6743\u3002\n\n\u6709\u4ee5\u4e0b\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n- `1 x w` \u5c06\u7b2c $x$ \u6761\u8fb9\u7684\u8fb9\u6743\u6539\u4e3a $w$\u3002\n- `2 u v` \u8be2\u95ee\u70b9 $u$ \u5230 $v$ \u7684\u6700\u77ed\u8def\u5f84\u3002\n\n### \u7b80\u8981\u5206\u6790\n\n\u6211\u4eec\u4f7f\u7528 `dfs` \u5e8f\u5c06\u4e00\u68f5\u6811\u62cd\u6241\u6210\u4e00\u4e2a\u5e8f\u5217\uff0c\u968f\u540e\u5bf9\u4e8e\u8be5\u5e8f\u5217\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u6811\u4e0a\u4e24\u70b9\u7684\u8ddd\u79bb\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u6839\u5230\u70b9 $i$ \u7684\u8ddd\u79bb $dis_i$\uff0c\u90a3\u4e48 $u \\rightarrow v$ \u7684\u8ddd\u79bb\u4e3a $dis_u + dis_v - 2\\times dis_{LCA(u,v)}$\u3002\n\n\u8fd9\u91cc\u6c42 `LCA` \u4f7f\u7528\u6811\u94fe\u5256\u5206\uff0c\u500d\u589e\u90fd\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n)$\u3002 \n\n### \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\nvoid add(int u, int v, int w, int id) { es[++tot] = (edge) {hd[u], v, w, id}, hd[u] = tot; }\n\nvoid dfs(int u, int fa) {\n    tI[u] = ++timer, p[u][0] = fa;\n    for (int i = 1; i < S; i++)p[u][i] = p[p[u][i - 1]][i - 1];\n    for (int i = hd[u], v; i; i = es[i].nxt)\n        if ((v = es[i].v) != fa)\n            d[v] = d[u] + 1, dfs(v, u), rf[es[i].id] = v;\n    tO[u] = timer;\n}\n\nint LCA(int u, int v) {\n    if (d[u] < d[v])swap(u, v);\n    int dlt = d[u] - d[v];\n    for (int i = 0; i < S; i++)if ((dlt >> i) & 1)u = p[u][i];\n    if (u == v)return u;\n    for (int i = S - 1; i >= 0; i--)if (p[u][i] != p[v][i])u = p[u][i], v = p[v][i];\n    return p[u][0];\n}\n\nvoid upd(int x, int v) { while (x <= n)bit[x] += v, x += x & -x; }\n\nint qry(int x) {\n    int r = 0;\n    while (x)r += bit[x], x -= x & -x;\n    return r;\n};\n\nsigned main() {\n    cin >> n;\n    for (int i = 1, u, v, w; i < n; i++)cin >> u >> v >> w, ew[i] = w, add(u, v, w, i), add(v, u, w, i);\n    dfs(1, 0);\n    for (int i = 1; i < n; i++)upd(tI[rf[i]], ew[i]), upd(tO[rf[i]] + 1, -ew[i]);\n    cin >> q;\n    for (int qi = 1, op, x, y, u, v; qi <= q; qi++) {\n        cin >> op >> x >> y;\n        if (op == 1)u = rf[x], upd(tI[u], y - ew[x]), upd(tO[u] + 1, ew[x] - y), ew[x] = y;\n        else u = x, v = y, cout << qry(tI[u]) + qry(tI[v]) - 2 * qry(tI[LCA(u, v)]) << '\\n';\n    }\n    return 0;\n}\n\n```\n\n",
        "postTime": 1679284979,
        "uid": 378222,
        "name": "fakestd",
        "ccfLevel": 0,
        "title": "[ABC294G] Distance Queries on a Tree \u9898\u89e3"
    },
    {
        "content": "## \u9898\u610f\n- \u7ed9\u4f60\u4e00\u68f5\u6709 $n$ \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u8fb9\u6709\u8fb9\u6743\uff0c\u6709 $q$ \u4e2a\u64cd\u4f5c\u3002\n- \u64cd\u4f5c $1$ \u662f\u4fee\u6539\u67d0\u6761\u8fb9\u7684\u6743\u3002\n- \u64cd\u4f5c $2$ \u662f\u67e5\u8be2\u67d0\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff08\u5373\u4e24\u70b9\u95f4\u7b80\u5355\u8def\u5f84\u4e0a\u7684\u8fb9\u6743\u548c\uff09\u3002\n- $n \\leq 2 \\times 10^5,q\\leq 2 \\times 10^5$\n\n## \u9898\u89e3\n\n\u8fd9\u9053\u9898\u4e00\u9053\u662f\u6bd4\u8f83\u677f\u7684\u5355\u70b9\u4fee\u6539\u6811\u94fe\u67e5\u8be2\uff0c\u6211\u4eec\u8dd1\u4e00\u904d[ DFS \u5e8f](https://oi-wiki.org/graph/dfs/#dfs-%E5%BA%8F%E5%88%97)\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u6811\u4e0a\u524d\u7f00\u548c\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u628a\u6bcf\u6761\u8fb9\u7684\u6743\u503c\u5b58\u5230\u5bf9\u5e94\u7684\u5b50\u8282\u70b9\u4e0a\uff0c\u8fd9\u4e2a\u6743\u503c\u4f1a\u5bf9\u6574\u68f5\u5b50\u6811\u4ea7\u751f\u8d21\u732e\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u5dee\u5206\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u533a\u95f4\u64cd\u4f5c\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c $1$\uff0c\u6211\u4eec\u5148\u627e\u5230\u8fd9\u6761\u8fb9\u6307\u5411\u7684\u5b50\u8282\u70b9\uff0c\u56de\u9000\u539f\u6709\u7684\u5f71\u54cd\uff0c\u518d\u5bf9\u8fd9\u68f5\u5b50\u6811\u8fdb\u884c\u533a\u95f4\u52a0\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c $2$\uff0c\u6211\u4eec\u5148\u67e5\u8be2 $u$ \u5230\u8ddf\u8282\u70b9\u7684\u8ddd\u79bb $dist_u$\uff0c\u518d\u67e5\u8be2 $v$ \u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb $dist_v$\uff0c\u7531\u4e8e\u4e24\u70b9 $\\operatorname{lca}$ \u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\u88ab\u591a\u7b97\u4e86\u4e24\u904d\uff0c\u6211\u4eec\u518d\u51cf\u53bb $2\\cdot dist_{\\operatorname{lca}(u,v)}$ \u5c31\u53ef\u4ee5\u5566\u3002\n\n\u9884\u5904\u7406\u590d\u6742\u5ea6 $O(n\\log n)$\uff0c\u4fee\u6539\u67e5\u8be2\u590d\u6742\u5ea6\u5747\u4e3a $O(\\log n)$\uff0c\u968f\u4fbf\u8fc7\u3002\n\n\u5177\u4f53\u89c1\u4ee3\u7801\u3002\n\n## code\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<vector> \n#define int long long\n#define forup(i,s,e) for(register int i=(s);i<=(e);i++)\n#define fordown(i,s,e) for(register int i=(s);i>=(e);i--)\nusing namespace std;\n#define gc getchar()\ninline int read(){//\u5feb\u8bfb\n    int x=0,f=1;char c;\n    while(!isdigit(c=gc)) if(c=='-') f=-1;\n    while(isdigit(c)){x=(x<<3)+(x<<1)+(c^48);c=gc;}\n    return x*f;\n}\n#undef gc\nconst int N=2e5+5,inf=0x3f3f3f3f;\nstruct edge{\n\tint v,w,pos;//pos \u4e3a\u8fb9\u7684\u7f16\u53f7\n\tedge(int _v=0,int _w=0,int _pos=0):v(_v),w(_w),pos(_pos){};\n};\nint n,q,a[N],son[N],f[N][21],dpt[N];\nvector<edge> e[N];\nstruct Tree{\n\tint c[N];\n\tvoid upd(int x,int k){for(;x<=n;x+=x&-x)c[x]+=k;}\n\tint sum(int x){int res=0;for(;x>0;x-=x&-x)res+=c[x];return res;}\n}mt;\nint st[N],ed[N],TM;//DFS \u5e8f\u4e09\u4ef6\u5957\nvoid dfs(int x,int fa){\n\tst[x]=++TM;f[x][0]=fa;\n\tdpt[x]=dpt[fa]+1;\n\tforup(i,1,20){\n\t\tf[x][i]=f[f[x][i-1]][i-1];\n\t}\n\tfor(auto i:e[x]){\n\t\tif(i.v==fa) continue;\n\t\ta[i.v]=i.w;//\u628a\u8fb9\u6743\u5b58\u5230\u70b9\u91cc\n\t\tson[i.pos]=i.v;//\u5b58\u4e00\u4e0b\u6307\u5411\u7684\u5b50\u8282\u70b9\u65b9\u4fbf\u5904\u7406\n\t\tdfs(i.v,x);\n\t}\n\ted[x]=TM;\n\tmt.upd(st[x],a[x]);mt.upd(ed[x]+1,-a[x]);\n    //\u5dee\u5206\u6811\u72b6\u6570\u7ec4\u533a\u95f4\u64cd\u4f5c\n}\nint lca(int x,int y){\n\tif(dpt[x]>dpt[y]) swap(x,y);\n\tfor(int i=20;i>=0&&dpt[y]>dpt[x];i--){\n\t\tif(dpt[f[y][i]]>=dpt[x]) y=f[y][i];\n\t}\n\tif(x==y) return x;\n\tfor(int i=20;i>=0&&f[x][0]!=f[y][0];i--){\n\t\tif(f[y][i]!=f[x][i]){\n\t\t\tx=f[x][i];\n\t\t\ty=f[y][i];\n\t\t}\n\t}\n\treturn f[x][0];\n}\nsigned main(){\n\tn=read();\n\tforup(i,1,n-1){\n\t\tint u=read(),v=read(),w=read();\n\t\te[u].push_back(edge(v,w,i));\n\t\te[v].push_back(edge(u,w,i));\n\t}\n\tdfs(1,0);\n\tq=read();\n\twhile(q--){\n\t\tint op=read(),u=read(),v=read();\n\t\tif(op==1){\n\t\t\tint x=son[u];\n\t\t\tmt.upd(st[x],-a[x]);mt.upd(ed[x]+1,a[x]);//\u5148\u56de\u9000\u539f\u6709\u5f71\u54cd\n\t\t\ta[x]=v;\n\t\t\tmt.upd(st[x],a[x]);mt.upd(ed[x]+1,-a[x]);//\u518d\u533a\u95f4\u52a0\n\t\t}else{\n\t\t\tint LCA=lca(u,v);\n\t\t\tprintf(\"%lld\\n\",mt.sum(st[u])+mt.sum(st[v])-mt.sum(st[LCA])*2);\n\t\t}\n\t}\n}\n\n```\n",
        "postTime": 1679283560,
        "uid": 537230,
        "name": "\u516d\u697c\u6e9c\u5218",
        "ccfLevel": 5,
        "title": "[ABC294G] Distance Queries on a Tree \u9898\u89e3"
    },
    {
        "content": "# [ABC294G](https://www.luogu.com.cn/problem/AT_abc294_g)   \n\n\u611f\u89c9\u6700\u8fd1\u7684 G \u9898\u8d8a\u6765\u8d8a\u5178\u3002   \n\n\u9898\u76ee\u5927\u610f\u662f\u8981\u4f60\u7ef4\u62a4\u4e00\u68f5\u8fb9\u5e26\u6743\u7684\u6811\uff0c\u6bcf\u6b21\u4f1a\u8be2\u95ee\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u5e76\u4e14\u8981\u6c42\u652f\u6301\u4fee\u6539\u8fb9\u6743\u3002\u8303\u56f4\u5728 $2\\times 10^5$ \u5185\u3002   \n\n\u4e3a\u4e86\u65b9\u4fbf\u7814\u7a76\uff0c\u6211\u4eec\u4ee4 $1$ \u4e3a\u6839\u3002\n\n\u5148\u4e0d\u8003\u8651\u4fee\u6539\uff0c\u5982\u679c\u5355\u7eaf\u662f\u8981\u8be2\u95ee\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u8fd9\u65f6\u6709\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u66b4\u529b\uff0c\u4e24\u8005\u5f80\u4e0a\u56de\u6eaf\uff0c\u76f4\u5230\u56de\u6eaf\u5230\u4e8c\u8005\u7684 lca \u4e3a\u6b62\uff0c\u7b97\u51fa\u8d70\u8fc7\u7684\u8def\u7a0b\u3002\u8fd9\u6837\u80af\u5b9a\u662f\u4e0d\u884c\u7684\uff0c\u6211\u4eec\u8003\u8651\u4f18\u5316\u3002   \n\n\u4ee4 $dis_a$ \u8868\u793a\u4ece $1$ \u5230 $a$ \u7684\u8ddd\u79bb\uff0c\u5219 $ans(a,b)=dis(a)+dis(b)-2\\times dis(lca(a,b))$ \uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u77e5\u9053\u4e86\u6bcf\u4e2a\u70b9\u7684 dis \u503c\uff0c\u5e76\u4e14\u80fd\u591f\u5feb\u901f\u6c42 lca\uff0c\u6c42\u51fa\u7b54\u6848\u662f\u5e38\u6570\u7ea7\u7684\u3002lca \u53ef\u4ee5\u7528\u500d\u589e\u6765\u6c42\uff0c\u800c dis \u5219\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u6765\u3002\u603b\u590d\u6742\u5ea6 $\\Theta(n\\log n)$\u3002\n\n\u7136\u800c\u672c\u9898\u8981\u6c42\u652f\u6301\u4fee\u6539\uff0c\u4e8e\u662f\u8003\u8651\u4fee\u6539\u4e00\u6761\u8fb9\u6240\u9020\u6210\u7684\u5f71\u54cd\u3002\u5982\u679c\u4fee\u6539\u4e00\u6761\u4ece $u$ \u5230 $v$ \u7684\u8fb9\uff0c\u5219 dis \u53d1\u751f\u6539\u53d8\u7684\u533a\u57df\u5c31\u662f $v$ \u7684\u5b50\u6811\u3002\u8003\u8651\u4f7f\u7528 dfs \u5e8f\u6765\u7ef4\u62a4\uff0c\u56e0\u4e3a\u5728 dfs \u5e8f\u4e2d\uff0c$v$ \u7684\u5b50\u6811\u662f\u8fde\u7eed\u7684\u4e00\u6bb5\u3002\u90a3\u4e48\u5c31\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u533a\u95f4\u4fee\u6539\uff0c\u5355\u70b9\u67e5\u8be2\u4e86\u3002   \n\nCode\uff1a \n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nint n,q;\nint head[500003],k1,k2,k3,k4,k5;\nstruct Edge{\n\tint st;\n\tint ed;\n\tint val;\n\tint nxt;\n\tint cs;\n}E[500003];\nint totE=1;\nint stk[500003],tot;\nint l[500003],r[500003],dist[500003];\nint TreeAr[500003],wz[500003],dep[500003];\nint lowbit(int X){\n\treturn (X&(-X));\n}\nvoid add(int X,int Y,int val){\n\tfor(int i=X;i<=n;i+=lowbit(i))TreeAr[i]+=val;\n\tfor(int i=Y+1;i<=n;i+=lowbit(i))TreeAr[i]-=val;\n\treturn;\n}\nint getval(int X){\n\tint ret=0;\n\tfor(int i=X;i>0;i-=lowbit(i))ret+=TreeAr[i];\n\treturn ret;\n}\nvoid addEdge(int st,int ed,int val){\n\ttotE++;\n\tE[totE].st=st;\n\tE[totE].ed=ed;\n\tE[totE].val=val;\n\tE[totE].nxt=head[st];\n\thead[st]=totE;\n\treturn;\n}\nint F[500003][33];\nvoid dfs(int now,int f){\n\ttot++;\n\tstk[tot]=now;\n\tl[now]=tot;\n\twz[now]=tot;\n\tadd(wz[now],wz[now],dist[now]);\n\tfor(int i=1;;i++){\n\t\tif(F[F[now][i-1]][i-1]==0)break;\n\t\tF[now][i]=F[F[now][i-1]][i-1];\n\t}\n\tfor(int i=head[now];i!=0;i=E[i].nxt){\n\t\tif(E[i].ed==f)continue;\n\t\tE[i].cs=1;\n\t\tF[E[i].ed][0]=now;\n\t\tdist[E[i].ed]=dist[now]+E[i].val;\n\t\tdep[E[i].ed]=dep[now]+1;\n\t\tdfs(E[i].ed,now);\n\t}\n\tr[now]=tot;\n\treturn;\n}\nint lca(int X,int Y){\n\tif(dep[X]>dep[Y])swap(X,Y);\n\tint c=30;\n\twhile(c>=0&&dep[X]<dep[Y]){\n\t\twhile(c>=0&&(F[Y][c]==0||dep[F[Y][c]]<dep[X]))c--;\n\t\tif(c<0)break;\n\t\tY=F[Y][c];\n\t\tc--;\n\t}\n\tc=30;\n\twhile(c>=0&&X!=Y){\n\t\twhile(c>=0&&(F[Y][c]==0||F[Y][c]==F[X][c]))c--;\n\t\tif(c<0)break;\n\t\tY=F[Y][c];\n\t\tX=F[X][c];\n\t\tc--;\n\t}\n\twhile(X!=Y){\n\t\tY=F[Y][0];\n\t\tX=F[X][0];\n\t}\n\treturn X;\n}\nsigned main(){\n\tscanf(\"%lld\",&n);\n\tfor(int i=1;i<n;i++){\n\t\tscanf(\"%lld%lld%lld\",&k1,&k2,&k3);\n\t\taddEdge(k1,k2,k3);\n\t\taddEdge(k2,k1,k3);\n\t}\n\tdfs(1,-1);\n\tscanf(\"%lld\",&q);\n\twhile(q--){\n\t\tscanf(\"%lld%lld%lld\",&k1,&k2,&k3);\n\t\tif(k1==1){\n\t\t\tif(E[(k2*2)].cs){\n\t\t\t\tadd(l[E[(k2*2)].ed],r[E[(k2*2)].ed],k3-E[(k2*2)].val);\n\t\t\t\tE[(k2*2)].val=k3;\n\t\t\t\tE[(k2*2)+1].val=k3;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tadd(l[E[(k2*2+1)].ed],r[E[(k2*2+1)].ed],k3-E[(k2*2)].val);\n\t\t\t\tE[(k2*2)].val=k3;\n\t\t\t\tE[(k2*2)+1].val=k3;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tprintf(\"%lld\\n\",getval(wz[k2])+getval(wz[k3])-getval(wz[lca(k2,k3)])*2);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1679272227,
        "uid": 340819,
        "name": "cwfxlh",
        "ccfLevel": 5,
        "title": "AT_abc294_g"
    },
    {
        "content": "**[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/MnZnOIerLzy/articles/17447388.html)**\n\n~~\u552f\u4e00\u4f1a\u7684 G~~\u3002\n\n**[AtCoder \u94fe\u63a5](https://atcoder.jp/contests/abc294/tasks/abc294_g \"AtCoder \u94fe\u63a5\")**\n\n**[\u6d1b\u8c37\u94fe\u63a5](https://www.luogu.com.cn/problem/solution/AT_abc294_g \"\u6d1b\u8c37\u94fe\u63a5\")**\n\n> - \u7ed9 $n$ \u4e2a\u70b9\u7684\u6811\uff0c$Q$ \u6b21\u64cd\u4f5c\uff1a\n>\n>     - $\\texttt{1 }i\\texttt{ }w$\uff0c\u5c06\u7b2c $i$ \u6761\u8fb9\u8fb9\u6743\u6539\u4e3a $w$\u3002\n>\n>     - $\\texttt{2 }x\\texttt{ }y$\uff0c\u67e5\u8be2 $x,y$ \u4e4b\u95f4\u8def\u5f84\u7684\u6743\u503c\u548c\u3002\n>\n> - $n,Q\\le 2\\times 10^5$\u3002\n\n\u6811\u5256\u677f\u5b50\uff0c\u8fd0\u7528\u8fb9\u8f6c\u70b9\u6280\u5de7\uff0c\u7531\u4e8e\u53ea\u6709\u5355\u70b9\u4fee\u6539\uff0c\u5957\u4e0a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5373\u53ef\u3002\n\n[\u8be6\u89c1\u6211\u7684\u6811\u94fe\u5256\u5206\u8bb2\u89e3\u535a\u5ba2](https://www.cnblogs.com/MnZnOIerLzy/articles/17438805.html \"\u8be6\u89c1\u6211\u7684\u6811\u94fe\u5256\u5206\u8bb2\u89e3\u535a\u5ba2\")\u3002\n\n\u7b80\u5355\u6765\u8bf4\uff0c\u6211\u4eec\u5148\u968f\u4fbf\u4ece\u4e00\u4e2a\u70b9\u5f00\u59cb DFS\uff0c\u5c06\u8fb9\u6743\u8f6c\u5316\u4e3a\u5176\u6df1\u5ea6\u8f83\u5927\u7684\u8282\u70b9\u7684\u6743\u503c\uff0c\u7136\u540e\u5c31\u53d8\u6210\u4e86\u5bf9\u70b9\u7684\u64cd\u4f5c\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(Q\\log^2 n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(n)$\u3002\n\n**[\u8bc4\u6d4b\u8bb0\u5f55](https://atcoder.jp/contests/abc294/submissions/39870783 \"\u8bc4\u6d4b\u8bb0\u5f55\")**\n\n```CPP\n#include<bits/stdc++.h>\n#define N 200005\n#define int long long\nusing namespace std;\nint n,q,f[N],h[N],t[N],sz[N],dfn[N],to[N],d[N],bit[N],val[N];\nstruct edge{\n    int v,w,id;\n};\nvector<edge>g[N];\nvoid modify(int x,int k){\n    for(int i=x;i<=n;i+=i&(-i)){\n        bit[i]+=k;\n    }\n}\nint query(int x){\n    int ret=0;\n    for(int i=x;i;i-=i&(-i)){\n        ret+=bit[i];\n    }\n    return ret;\n}\nvoid dfs1(int u,int fa){\n    sz[u]=1;\n    for(auto[v,w,id]:g[u]){\n        if(v^fa){\n            f[v]=u;\n            to[id]=v;\n            val[v]=w;\n            d[v]=d[u]+1;\n            dfs1(v,u);\n            sz[u]+=sz[v];\n        }        \n    }\n}\nvoid dfs2(int u,int fa){\n    for(auto[v,w,id]:g[u]){\n        if(v^fa){\n            if((sz[v]<<1)>sz[u]){\n                t[v]=t[u];\n                h[u]=v;\n            }else{\n                t[v]=v;\n            }\n            dfs2(v,u);\n        }\n    }\n}\nvoid dfs3(int u,int fa){\n    ++dfn[0];\n    dfn[u]=dfn[0];\n    modify(dfn[u],val[u]);\n    if(h[u]){\n        dfs3(h[u],u);\n    }\n    for(auto[v,w,id]:g[u]){\n        if((v^fa)&&(v^h[u])){\n            dfs3(v,u);\n        }\n    }\n}\nint pathquery(int x,int y){\n    int ret=0;\n    while(t[x]^t[y]){\n        if(d[t[x]]<d[t[y]]){\n            swap(x,y);\n        }\n        ret+=query(dfn[x])-query(dfn[t[x]]-1);\n        x=f[t[x]];\n    }\n    if(x^y){\n        if(d[x]>d[y]){\n            swap(x,y);\n        }\n        ret+=query(dfn[y])-query(dfn[x]);\n    }\n    return ret;\n}\nsigned main(){\n    scanf(\"%lld\",&n);\n    for(int i=1,u,v,w;i^n;++i){\n        scanf(\"%lld%lld%lld\",&u,&v,&w);\n        g[u].push_back({v,w,i});\n        g[v].push_back({u,w,i});\n    }\n    dfs1(1,0);\n    t[1]=1;\n    dfs2(1,0);\n    dfs3(1,0);\n    scanf(\"%lld\",&q);\n    for(int op,x,y;q--;){\n        scanf(\"%lld%lld%lld\",&op,&x,&y);\n        if(op==1){\n            modify(dfn[to[x]],-val[to[x]]);//\u4fee\u6539\u76f8\u5f53\u4e8e\u51cf\u53bb\u539f\u503c\u518d\u52a0\u4e0a\u65b0\u503c\u3002\n            modify(dfn[to[x]],y);\n            val[to[x]]=y;\n        }else{\n            printf(\"%lld\\n\",pathquery(x,y));\n        }\n    }\n}\n```",
        "postTime": 1685539685,
        "uid": 539211,
        "name": "\u849f\u84bb\u00b7\u5ed6\u5b50\u9633",
        "ccfLevel": 5,
        "title": "ABC294G"
    },
    {
        "content": "\u4e0d\u96be\u53d1\u73b0\uff0c\u4fee\u6539\u64cd\u4f5c\u4ec5\u5f71\u54cd\u90a3\u6761\u8fb9\u8fde\u63a5\u7684\u4e24\u4e2a\u70b9\u4e2d\u6df1\u5ea6\u8f83\u5927\u7684\u90a3\u4e2a\u70b9\u7684\u5b50\u6811\u4e2d\u7684\u6240\u6709\u70b9\u3002\n\n\u6240\u4ee5\u8003\u8651\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u7684 dfs \u5e8f\uff0c\u5c31\u5c06\u4e00\u4e2a\u70b9\u7684\u5b50\u6811\u4e2d\u7684\u6240\u6709\u70b9\u653e\u5230\u4e86\u4e00\u4e2a\u53ef\u7ef4\u62a4\u7684\u533a\u95f4\u4e0a\u3002\n\n\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u5c31\u662f\u4e24\u4e2a\u70b9\u5230\u6839\u7684\u8ddd\u79bb\u4e4b\u548c\u51cf\u53bb\u4e8c\u500d\u7684\u4e24\u4e2a\u70b9\u7684 LCA \u5230\u6839\u7684\u8ddd\u79bb\u3002\n\n\u90a3\u4e48\uff0c\u4fee\u6539\u64cd\u4f5c\u5c31\u53ef\u4ee5\u89c6\u4f5c\u4fee\u6539\u4e86\u67d0\u4e2a\u70b9\u7684\u5b50\u6811\u4e2d\u6240\u6709\u7684\u70b9\uff0c\u533a\u95f4\u52a0\u4e0a\u4fee\u6539\u7684\u503c\u3002\n\n\u800c\u67e5\u8be2\u672c\u8d28\u4e0a\u5c31\u662f\u67e5\u8be2\u4e00\u4e2a\u70b9\u5230\u6839\u7684\u8ddd\u79bb\uff0c\u5c31\u662f\u5355\u70b9\u67e5\u8be2\u5f53\u524d\u70b9\u88ab\u52a0\u4e0a\u7684\u503c\u3002\n\n\u4e24\u4e2a\u64cd\u4f5c\u5bf9\u5e94\u533a\u95f4\u4fee\u6539\u548c\u5355\u70b9\u67e5\u8be2\uff0c\u53ef\u4ee5\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u3002\n\n\u5176\u5b9e\u8fd9\u9898\u5c31\u662f [P3384 \u3010\u6a21\u677f\u3011\u91cd\u94fe\u5256\u5206/\u6811\u94fe\u5256\u5206](https://www.luogu.com.cn/problem/P3384)\uff0c\u540c\u6837\u53ef\u4ee5\u6811\u5256\u89e3\u51b3\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define MAXN 200005\n#define int long long\n#define lowbit(x) ((x)&(-x))\n#define fi first\n#define se second \nusing namespace std;\nint n,q,cnt,c[MAXN],dfn[MAXN],nodel[MAXN],noder[MAXN],dist[MAXN],qu[MAXN],qv[MAXN],qw[MAXN],f[MAXN][30],lg[MAXN],depth[MAXN];\nvector<pair<int,int>> gv[MAXN];\nvoid basadd(int x,int v){\n\tfor(;x<MAXN;x+=lowbit(x)) c[x]+=v;\n}\nint query(int x){\n\tint sum=0;\n\tfor(;x;x-=lowbit(x)) sum+=c[x];\n\treturn sum;\n} \nvoid add(int l,int r,int v){\n\tbasadd(l,v);\n\tbasadd(r+1,-v);\n}\nvoid dfs(int now,int father){\n\tdfn[now]=++cnt;\n\tnodel[now]=cnt;\n\tdepth[now]=depth[father]+1;\n\tf[now][0]=father;\n\tfor(int i=1;i<=lg[depth[now]];i++) f[now][i]=f[f[now][i-1]][i-1];\n\tfor(int i=0;i<(int)gv[now].size();i++){\n\t\tif(gv[now][i].fi!=father){\n\t\t\tdist[gv[now][i].fi]=dist[now]+gv[now][i].se;\n\t\t\tdfs(gv[now][i].fi,now);\n\t\t}\n\t}\n\tnoder[now]=cnt;\n}\nint lca(int x,int y){\n\tif(depth[x]<depth[y]) swap(x,y);\n\twhile(depth[x]>depth[y]) x=f[x][lg[depth[x]-depth[y]]-1];\n\tif(x==y) return x;\n\tfor(int i=lg[depth[x]]-1;i>=0;i--) if(f[x][i]!=f[y][i]) x=f[x][i],y=f[y][i];\n\treturn f[x][0];\n}\nint getdis(int x,int y){\n\treturn query(dfn[x])+query(dfn[y])-2*query(dfn[lca(x,y)]);\n}\nsigned main(){\n\tcin>>n;\n\tfor(int i=1;i<n;i++){\n\t\tint u,v,w;\n\t\tcin>>u>>v>>w;\n\t\tgv[u].push_back({v,w});\n\t\tgv[v].push_back({u,w});\n\t\tqu[i]=u,qv[i]=v,qw[i]=w;\n\t}\n\tfor(int i=1;i<MAXN;i++) lg[i]=lg[i>>1]+1;\n\tdfs(1,0);\n\tfor(int i=1;i<=n;i++) add(dfn[i],dfn[i],dist[i]);\n\tcin>>q;\n\twhile(q--){\n\t\tint op,x,y;\n\t\tcin>>op>>x>>y;\n\t\tif(op==1){\n\t\t\tint diff=y-qw[x],u=qu[x],v=qv[x];\n\t\t\tif(dfn[u]<dfn[v]) swap(u,v);\n\t\t\tadd(nodel[u],noder[u],diff);\n            qw[x]=y;\n\t\t}\n\t\telse{\n\t\t\tcout<<getdis(x,y)<<'\\n'; \n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1679477245,
        "uid": 527598,
        "name": "FReQuenter",
        "ccfLevel": 0,
        "title": "[ABC294G] Distance Queries on a Tree \u9898\u89e3"
    },
    {
        "content": "## \u9898\u610f\n\u7ed9\u5b9a\u4e00\u9897 $n$ \u4e2a\u8282\u70b9\u7684**\u5e26\u6743\u65e0\u5411**\u6811\u3002\n\n\u7ed9\u51fa $q$ \u4e2a\u64cd\u4f5c\uff1a\n- `1 i w`\uff1a\u628a\u7b2c $i$ \u6761\u8fb9\u7684\u8fb9\u6743\u53d8\u6210 $w$\u3002\n- `2 u v`\uff1a\u6c42 $u\\to v$ \u7b80\u5355\u8def\u5f84\u7684\u8fb9\u6743\u548c\u3002\n\n## \u89e3\u6cd5\n\n\u6839\u636e\u6811\u4e0a\u5dee\u5206\u3002\n\t\t\n\u4ee4 $p\\to \\textrm{lca}(x, y)$\u3002\n\t\t\n\u5219 $u\\to v$ \u7b80\u5355\u8def\u5f84\u7684\u8fb9\u6743\u548c\u4e3a $d(u)+d(v)-2d(p)$\u3002\n\t\t\n\u8be6\u89c1 [oi-wiki](http://oi-wiki.com/basic/prefix-sum/)\u3002\n\n\u5176\u4e2d $d(i)$ \u8868\u793a $i\\to r$ \u8fb9\u6743\u548c\u7684\u5dee\u5206\u6570\u7ec4\uff0c$r$ \u4e3a\u6839\u8282\u70b9\u3002\n\n\u672c\u9898\u9700\u8981\u652f\u6301\u4fee\u6539\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4/\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4 $d$\u3002\n\t\t\n\u5177\u4f53\u7684\uff0c\u5bf9\u4e8e\u65e0\u5411\u8fb9 $(u, v)$ **\u4e14 $u$ \u4e3a $v$ \u7684\u513f\u5b50**\uff0c\u5219\u6211\u4eec\u53d1\u73b0\u53ea\u5bf9\u4ee5 $u$ \u4e3a\u6839\u7684\u8fd9\u9897\u5b50\u6811\u7684 $d$ \u6709\u5f71\u54cd\u3002\n\t\t\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5148\u6c42\u51fa dfs \u5e8f\uff0c\u7136\u540e\u5c31\u8f6c\u6362\u6210\u4e86\u533a\u95f4\u52a0\uff0c\u5355\u70b9\u67e5\u8be2\uff0c\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4/\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$\\mathcal O(n\\log n+q\\log n)$\u3002\n\n[\u4ee3\u7801\u3002](https://atcoder.jp/contests/abc294/submissions/39907482)",
        "postTime": 1679322578,
        "uid": 353330,
        "name": "hcywoi",
        "ccfLevel": 5,
        "title": "\u3010AT_abc294_g \u9898\u89e3\u3011"
    },
    {
        "content": "~~\u8bdd\u8bf4 g \u660e\u663e\u6bd4 f \u597d\u5199\u554a\uff01~~ \n# Solution:\n\u6811\u4e0a\u5e26\u4fee\u6539\u6c42\u4e24\u70b9\u95f4\u7684\u8ddd\u79bb\u3002\n\n\u56e0\u4e3a\u662f\u6811\u5f62\u7ed3\u6784,\u5373\u4e24\u70b9\u95f4\u7684\u8def\u5f84\u552f\u4e00\u786e\u5b9a,\u5c06\u5176\u8f6c\u6362\u4e3a\u94fe\u6765\u5904\u7406\u3002\n\n\u8bb0\u5f55\u4e00\u6761\u94fe\u7684 dfs \u5e8f,\u5373\u662f\u6211\u4eec\u9700\u5bf9\u5176\u7ef4\u62a4\u7684\u533a\u95f4\u7f16\u53f7\u3002\n\n\u56e0\u4e3a\u662f\u5355\u70b9\u4fee\u6539,\u6811\u72b6\u6570\u7ec4\u5373\u53ef\u3002\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define open(x) freopen(x \".in\", \"r\", stdin);freopen(x \".out\", \"w\", stdout);\n#define pb push_back\ninline int read(){int f=1;int x=0;char c=getchar();while(c<'0'||c>'9'){if(c=='-'){f=-f;}c=getchar();}while(c>='0'&&c<='9'){x=(x<<1)+(x<<3)+(c^48);c=getchar();}return x*f;}\ninline void wr(int x){if(x<0){putchar('-');x=-x;}if(x>9){wr(x/10);}putchar(x%10+'0');}\n#define int long long\nint f[1000050][25];\nint t[1000050];\nint ed[1000050];\nint clo = 0;\nint dep[1000050];\nint dfn[1000005];\nvector<int> a[1000050];\nint eu[1000005] ,ev[1000005] , ew[1000005];\nint n,m;\n\ninline void dfs(int x,int fa){\n\tdep[x] = dep[fa] + 1;\n\tf[x][0] = fa;\n\tdfn[x] = ++clo; \n\tfor (int i=1; i<=17; ++i) f[x][i] = f[f[x][i-1]][i-1];\n\tfor(auto v:a[x]){\n\t\tif(v == fa) continue;\n\t\tdfs(v,x);\n\t}\n\ted[x] = clo;\n\treturn;\n}\n\ninline void add(int x, int y){\n\tfor (; x<=n; x+=x&-x) t[x]+=y;\n}\n\ninline int ask(int x){\n\tint y=0;\n\tfor (; x; x-=x&-x) y+=t[x];\n\treturn y;\n}\n\ninline int lca(int x,int y){\n\tif(x == y) return x;\n\tif(dep[x] < dep[y]){\n\t\tswap(x,y);\n\t}\n\tint d = dep[x] - dep[y];\n\tfor(int i = 17 ;i >= 0 ; --i){\n\t\tif(d & (1 << i)) x = f[x][i];\n\t}\n\tif(x == y) return x;\n\tfor(int i = 17 ;i >= 0 ; --i){\n\t\tif(f[x][i] != f[y][i]){\n\t\t\tx = f[x][i];\n\t\t\ty = f[y][i];\n\t\t}\n\t}\n\treturn f[x][0];\n}\n\nsigned main(){\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\tcin >> n;\n\tfor(int i = 1; i < n; ++i){\n\t\tint x,y,z;\n\t\tcin >> x >> y >> z;\n\t\ta[x].pb(y);\n\t\ta[y].pb(x); \n\t\teu[i] = x;\n\t\tev[i] = y;\n\t\tew[i] = z;\n\t}\n\tcin >> m;\n\tdfs(1 , 0);\n\tfor(int i = 1 ;  i < n ; ++i){\n\t\tif (dep[eu[i]]>dep[ev[i]]) swap(eu[i],ev[i]);\n\t\tadd(dfn[ev[i]],ew[i]);\n\t\tadd(ed[ev[i]]+1,-ew[i]);\n\t}\n\tfor(int i = 1 ;i <= m ;++i){\n\t\tint x,y,z;\n\t\tcin >> x;\n\t\tif(x == 1){\n\t\t\tcin >> y >> z;\n\t\t\tadd(dfn[ev[y]] , z - ew[y]);\n\t\t\tadd(ed[ev[y]] + 1 , ew[y] - z);\n\t\t\tew[y] = z;\n\t\t}\n\t\telse{\n\t\t\tcin >> y >> z;\n\t\t\tcout << ask(dfn[y]) + ask(dfn[z]) - ask(dfn[lca(z,y)]) * 2 << \"\\n\";\n\t\t} \n\t}\n\treturn 0;\n} \n```\n",
        "postTime": 1679320195,
        "uid": 147761,
        "name": "qmh20061363",
        "ccfLevel": 0,
        "title": "AT_abc294_g"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\u7ed9\u5b9a $n$ \u4e2a\u70b9\u7684\u4e00\u68f5\u6811\uff0c\u6bcf\u6761\u6811\u8fb9\u6709\u4e00\u4e2a\u6743\u503c\uff0c\u73b0\u5728\u7ed9\u5b9a $q$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u6709\u4ee5\u4e0b\u4e24\u79cd\u7c7b\u578b\uff1a\n\n- `1 x y`\uff1a\u8868\u793a\u628a\u7f16\u53f7\u4e3a $x$ \u7684\u8fb9\u7684\u6743\u503c\u4fee\u6539\u4e3a $y$\u3002\n- `2 x y`\uff1a\u8f93\u51fa\u8282\u70b9 $x$ \u5230\u8282\u70b9 $y$ \u7684\u6700\u77ed\u8def\u5f84\u4e0a\u7684\u6240\u6709\u8fb9\u7684\u6743\u503c\u548c\u3002\n\n\n$1\\le n,q\\le 2\\times10^5,1\\le$ \u4efb\u610f\u65f6\u523b\u8fb9\u7684\u6743\u503c $\\le 10^9$\u3002\n\n### \u601d\u8def\n\n\u8003\u8651\u6700\u66b4\u529b\u7684\u6570\u636e\u7ed3\u6784\u2014\u2014\u6811\u5256\u3002\n\n\u4f17\u6240\u5468\u77e5\uff0c\u6811\u5256\u677f\u5b50\u6240\u80fd\u5904\u7406\u7684\u662f\u70b9\u6743\uff0c\u800c\u8fd9\u662f\u8fb9\u6743\u3002\u6240\u4ee5\u6211\u4eec\u8003\u8651\u5c06\u8fb9\u6743\u8f6c\u5316\u70b9\u6743\u3002\n\n\u5b9e\u9645\u4e0a\u53ea\u9700\u8981\u628a\u8fd9\u6761\u8fb9\u7684\u8fb9\u6743\u8d4b\u7ed9\u6df1\u5ea6\u8f83\u5927\u7684\u90a3\u4e2a\u70b9\u4e0a\u5373\u53ef\uff0c\u56e0\u4e3a\u6811\u4e0a\u4e00\u4e2a\u70b9\u53ea\u6709\u4e00\u4e2a\u7236\u4eb2\u3002\n\n\u7136\u540e\u5c31\u662f\u6811\u4e0a\u5355\u70b9\u4fee\u6539\uff0c\u94fe\u4e0a\u67e5\u8be2\u7684\u677f\u5b50\u4e86\u3002\n\n>\u6ce8\u610f\u67e5\u8be2\u7684\u65f6\u5019\u8981\u51cf\u53bb\u4e24\u70b9 LCA \u7684\u6743\u503c\uff0c\u56e0\u4e3a LCA \u6240\u4ee3\u8868\u7684\u6743\u503c\u7684\u6240\u5c5e\u8fb9\u4e0d\u5728\u4e24\u70b9\u6700\u77ed\u8def\u5f84\u4e0a\u3002\n\n~~\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u50cf\u6211\u4e00\u6837\u7528\u4e24\u70b9\u5230\u6839\u8282\u70b9\u7684\u6743\u503c\u548c\u51cf\u53bb LCA \u5230\u6839\u8282\u70b9\u7684\u6743\u503c\u548c\u7684\u4e24\u500d\u6765\u6c42\u7b54\u6848\uff0c\u8fd9\u6837\u5c31\u4e0d\u7528\u7279\u5224 LCA \u4e86\u3002~~\n\n### \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\ninline int R() {\n\tint x=0,f=1;\n\tint ch=getchar();\n\twhile(!isdigit(ch)) {\n\t\tif(ch=='-')f=-1;\n\t\tch=getchar();\n\t}\n\twhile(isdigit(ch)) {\n\t\tx=x*10+ch-48;\n\t\tch=getchar();\n\t}\n\treturn x*f;\n}\ninline void write(int x) {\n\tif(x<0) {\n\t\tx=-x;\n\t\tputchar('-');\n\t}\n\tint y=0;\n\tchar z[70];\n\twhile(x||!y) {\n\t\tz[y++]=x%10+48;\n\t\tx/=10;\n\t}\n\twhile(y--)putchar(z[y]);\n}\ninline void writesp(int x) {\n\twrite(x);\n\tputchar(32);\n}\n#define rep(a,b,c) for(int a=b;a<=c;a++)\n#define graph(i,j,l) for(int i=head[j];i;i=l[i].nxt)\nconst int N=2e5+5;\n//\u6811\u5256\u677f\u5b50\nnamespace shupou {//\u82f1\u8bed\u6c34\u5e73\u5b9e\u5728\u6709\u9650qwq\n\tstruct edge {\n\t\tint to, nxt;\n\t} a[N << 1];\n\tint head[N << 1], cnt;\n\tint n, m, w[N];\n\tint dep[N], fa[N], son[N], siz[N];\n\tint top[N], dfn[N], rk[N], val[N];\n\tvoid add(int x, int y) {\n\t\tcnt++;\n\t\ta[cnt].to = y;\n\t\ta[cnt].nxt = head[x];\n\t\thead[x] = cnt;\n\t}\n\tint d[N << 2], b[N << 2];\n\n\tint leftson(int x) {\n\t\treturn x << 1;\n\t}\n\tint rightson(int x) {\n\t\treturn x << 1 | 1;\n\t}\n\tvoid build(int l, int r, int p) {\n\t\tif (l == r) {\n\t\t\td[p] = val[l];\n\t\t\treturn;\n\t\t}\n\t\tint mid = (l + r) >> 1;\n\t\tbuild(l, mid, leftson(p));\n\t\tbuild(mid + 1, r, rightson(p));\n\t\td[p] = (d[leftson(p)] + d[rightson(p)]);\n\t}\n\n\tvoid change(int x, int l, int r, int p, int k) {\n\t\tif (l==r) {\n\t\t\td[p]=k;\n\t\t\treturn;\n\t\t}\n\t\tint mid = (l + r) >> 1;\n\t\tif (x <= mid)\n\t\t\tchange(x, l, mid, leftson(p), k);\n\t\telse\n\t\t\tchange(x, mid + 1, r, rightson(p), k);\n\t\td[p] = (d[leftson(p)] + d[rightson(p)]);\n\t}\n\n\tint getsum(int L, int R, int l, int r, int p) {\n\t\tif (L <= l && r <= R)\n\t\t\treturn d[p];\n\t\tint mid = (l + r) >> 1, res = 0;\n\t\tif (L <= mid)\n\t\t\tres = (res + getsum(L, R, l, mid, leftson(p)));\n\t\tif (R > mid)\n\t\t\tres = (res + getsum(L, R, mid + 1, r, rightson(p)));\n\t\treturn res;\n\t}\n\n\tvoid dfs1(int x, int y) {\n\t\tdep[x] = dep[y] + 1;\n\t\tfa[x] = y;\n\t\tsiz[x] = 1;\n\t\tint tmp = 0;\n\t\tfor (int i = head[x]; i; i = a[i].nxt) {\n\t\t\tint u = a[i].to;\n\t\t\tif (u == y)\n\t\t\t\tcontinue;\n\t\t\tdfs1(u, x);\n\t\t\tsiz[x] += siz[u];\n\t\t\tif (siz[u] > tmp) {\n\t\t\t\ttmp = siz[u];\n\t\t\t\tson[x] = u;\n\t\t\t}\n\t\t}\n\t}\n\n\tvoid dfs2(int x, int root) {\n\t\tdfn[x] = ++cnt;\n\t\tval[dfn[x]] = w[x];\n\t\ttop[x] = root;\n\t\tif (!son[x])\n\t\t\treturn;\n\t\tdfs2(son[x], root);\n\t\tfor (int i = head[x]; i; i = a[i].nxt) {\n\t\t\tint u = a[i].to;\n\t\t\tif (u == fa[x] || u == son[x])\n\t\t\t\tcontinue;\n\t\t\tdfs2(u, u);\n\t\t}\n\t}\n\n\tint query(int l, int r) {\n\t\tint res = 0;\n\t\twhile (top[l] != top[r]) {\n\t\t\tif (dep[top[l]] < dep[top[r]])\n\t\t\t\tswap(l, r);\n\t\t\tres = (res + getsum(dfn[top[l]], dfn[l], 1, n, 1));\n\t\t\tl = fa[top[l]];\n\t\t}\n\t\tif (dep[l] > dep[r])\n\t\t\tswap(l, r);\n\t\tres = (res + getsum(dfn[l], dfn[r], 1, n, 1));\n\t\treturn res;\n\t}\n}\nusing namespace shupou;\n//LCA\u677f\u5b50\nnamespace LCA {\n\tint lg[N],f[N][25];\n\tvoid dfs(int x,int y) {\n\t\tf[x][0]=y;\n\t\trep(i,1,lg[dep[x]]) f[x][i]=f[f[x][i-1]][i-1];\n\t\tgraph(i,x,a) {\n\t\t\tint u=a[i].to;\n\t\t\tif(u==y) continue;\n\t\t\tdfs(u,x);\n\t\t}\n\t}\n\tint lca(int x,int y) {\n\t\tif(dep[x]<dep[y]) swap(x,y);\n\t\twhile(dep[x]>dep[y]) x=f[x][lg[dep[x]-dep[y]]-1];\n\t\tif(x==y) return x;\n\t\tfor(int i=lg[dep[x]]-1; i>=0; i--)\n\t\t\tif(f[x][i]!=f[y][i])\n\t\t\t\tx=f[x][i],y=f[y][i];\n\t\treturn f[x][0];\n\t}\n\tvoid init() {\n\t\trep(i,1,n) lg[i]=lg[i-1]+((1<<lg[i-1])==i?1:0);\n\t\tdfs(1,0);\n\t}\n} using namespace LCA;\nint q,u[N],v[N],vv[N];\nvoid solve_the_problem() {\n\tn=R();\n\trep(i,1,n-1) {\n\t\tu[i]=R(),v[i]=R(),vv[i]=R();\n\t\tadd(u[i],v[i]);\n\t\tadd(v[i],u[i]);\n\t}\n\tcnt=0;\n\tdfs1(1,0);\n\trep(i,1,n-1) {\n\t\tint ret=(dep[u[i]]>dep[v[i]])?u[i]:v[i];\n\t\tw[ret]=vv[i];//\u8fd9\u91cc\u63d0\u524d\u8d4b\u70b9\u6743\uff0c\u4e3a\u4e86\u8fce\u5408\u6811\u5256\u677f\u5b50\n\t}\n\tdfs2(1,1);\n\tbuild(1,n,1);\n\tinit();\n\tq=R();\n\trep(_,1,q) {\n\t\tint op=R(),l=R(),r=R();\n\t\tif(op==1) {\n\t\t\tint ret=(dep[u[l]]>dep[v[l]])?u[l]:v[l];\n\t\t\tchange(dfn[ret],1,n,1,r);\n\t\t} else {\n\t\t\twriteln(query(1,l)+query(1,r)-query(1,lca(l,r))*2);\n\t\t}\n\t}\n}\nsigned main() {\n\tint _=1;\n\twhile(_--)solve_the_problem();\n}\n\n```\n",
        "postTime": 1679286708,
        "uid": 448884,
        "name": "\u5feb\u4e50\u7684\u5927\u7ae5",
        "ccfLevel": 4,
        "title": "ABC294G"
    }
]