[
    {
        "content": "\u5b98\u65b9\u9898\u89e3\u505a\u6cd5\u3002\n\n\u663e\u7136\u4e00\u4e2a\u4eba\u53ea\u4f1a\u79fb\u52a8\u4e00\u6b21\uff0c\u56e0\u4e3a\u591a\u6b21\u53cd\u590d\u6a2a\u8df3\u6ca1\u6709\u4ec0\u4e48\u610f\u4e49\u3002\n\n\u6211\u4eec\u8003\u8651\u90a3\u4e9b\u6ca1\u6709\u79fb\u52a8\u7684\u4eba\uff0c\u663e\u7136\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a\u3002\u8bc1\u660e\u53ea\u9700\u8003\u8651\u628a\u7f16\u53f7\u6700\u5927\u7684\u4e00\u4e2a\u5411\u5de6\u79fb\u52a8\u7684\u56fa\u5b9a\u4f4f\uff0c\u663e\u7136\u81f3\u5c11\u53ef\u4ee5\u51cf\u5c11\u8fd9\u4e00\u4e2a\u4eba\u7684\u4ee3\u4ef7\u3002\n\n\u90a3\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\uff0c\u4e0d\u79fb\u52a8\u7684\u4eba\u76f8\u5f53\u4e8e\u628a\u539f\u6765\u7684\u4eba\u6309\u7167\u7f16\u53f7\u5212\u5206\u6210\u4e86\u82e5\u5e72\u4e2a\u533a\u95f4\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u5728\u56fa\u5b9a\u7684\u4eba\u786e\u5b9a\u4e3a $S_1<S_2<\\cdots S_k$ \u540e\uff0c\u4f60\u7684\u7b56\u7565\u5e94\u8be5\u662f\uff1a\n\n* \u7f16\u53f7\u5c0f\u4e8e $S_1$ \u7684\u4ece\u5927\u5230\u5c0f\u653e\u5230\u5de6\u8fb9\uff0c\u4ee3\u4ef7\u4e3a $\\min(A_i,B_i)$\uff1b\n* \u7f16\u53f7\u5927\u4e8e $S_k$ \u7684\u4ece\u5c0f\u5230\u5927\u653e\u5230\u53f3\u8fb9\uff0c\u4ee3\u4ef7\u4e3a $\\min(A_i,C_i)$\uff1b\n* \u5176\u4f59\u7684\u653e\u5230\u5bf9\u5e94\u7684\u4f4d\u7f6e\u4e0a\uff0c\u4ee3\u4ef7\u4e3a $A_i$\u3002\n\n\u95ee\u9898\u53d8\u6210\u968f\u610f\u5b89\u6392\u4e00\u4e2a\u4eba\u662f\u5426\u4e0d\u52a8\uff0c\u6700\u5c0f\u5316\u4ee3\u4ef7\u548c\u3002\u56e0\u4e3a $S$ \u4e2d\u7684\u6570\u5728\u539f\u5e8f\u5217\u4e2d\u4e5f\u8981\u5347\u5e8f\uff0c\u6240i\u6709\u4ece\u5c0f\u5230\u5927\u8003\u8651\u7684\u8bdd\uff0c\u524d\u9762\u4eba\u7684\u5b89\u6392\u4e0d\u5f71\u54cd\u540e\u9762\u7684\u4eba\uff0c\u5373\u95ee\u9898\u6ca1\u6709\u540e\u6548\u6027\u3002\n\n\u56e0\u800c\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c dp\u3002\u8bbe $dp_i$ \u8868\u793a\u8003\u8651\u5230\u7f16\u53f7\u4e0d\u8d85\u8fc7 $i$ \u7684\u4eba\uff0c\u4e14\u6ee1\u8db3 $i\\in S$ \u7684\u6700\u5c0f\u4ee3\u4ef7\u548c\u3002\n\n\u4e0d\u96be\u5f97\u5230\u8f6c\u79fb\u65b9\u7a0b\uff1a\n$$\ndp_i = \\min \\left (\\sum_{j=1}^{i-1} \\min (A_j,B_j),\\min_{j<i,p'_{j}<p'_{i}}\\left(dp_j+\\sum_{k=j+1}^{i-1}A_k\\right)\\right )\n$$\n\n\n\u5176\u4e2d $p'$ \u662f\u539f\u6392\u5217\u7684\u9006\u3002\u524d\u534a\u90e8\u5206\u8868\u793a\u4ee4 $i$ \u4e3a\u7b2c\u4e00\u4e2a\u56fa\u5b9a\u4f4f\u7684\uff0c\u540e\u534a\u90e8\u5206\u8868\u793a\u679a\u4e3e\u524d\u4e00\u4e2a\u56fa\u5b9a\u7684\u4eba $j$\u3002\n\n\u6700\u540e\u7684\u7b54\u6848\u5e94\u8be5\u662f\uff1a\n$$\n\\min _{1\\le i\\le n} \\left(dp_i+\\sum_{j=i+1}^n \\min(A_j,C_j)\\right)\n$$\n\n\n\u4e24\u4e2a\u6c42\u548c\u90fd\u53ef\u4ee5\u901a\u8fc7\u524d\u7f00\u548c\u89e3\u51b3\uff0c\u4f46\u662f\u540e\u534a\u90e8\u5206\u56e0\u4e3a\u8981\u679a\u4e3e $j$\uff0c\u590d\u6742\u5ea6\u4e3a $O(n^2)$\uff0c\u65e0\u6cd5\u901a\u8fc7\u3002\u6211\u4eec\u8bd5\u56fe\u8fdb\u884c\u4f18\u5316\u3002\n\n\u8003\u8651\u5c06\u5e38\u6570\u5206\u79bb\u51fa\u6765\u3002\u6211\u4eec\u8bbe $sum_i = \\sum _{j=1}^i A_j$\uff0c\u5219\u6709\uff1a\n$$\ndp_j+\\sum_{k=j+1}^{i-1}A_k=dp_j+sum_{i-1}-sum_j\n$$\n\u6211\u4eec\u5c06 $dp_j-sum_j$ \u89c6\u4e3a\u4e00\u4e2a\u6574\u4f53\uff0c\u5c06 $sum_{i-1}$ \u79fb\u5230\u8fd9\u4e2a\u95ee\u9898\u7b49\u4ef7\u4e8e\u5728\u4e8c\u7ef4\u504f\u5e8f\u4e2d\u627e\u6700\u5c0f\u503c\u3002\u6211\u4eec\u5728\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u4e2d\u52a8\u6001\u5730\u5b9e\u73b0\u8fd9\u4e9b\u4e8b\u60c5\uff1a\n\n* \u67e5\u8be2 $p'_i$ \u524d\u7684\u524d\u7f00\u6700\u5c0f\u503c\uff1b\n* \u5c06 $p'_i$ \u7684\u503c\u8bbe\u4e3a $dp_i-sum_i$\u3002\n\n\u663e\u7136\u4e00\u4e2a\u7ebf\u6bb5\u6811\u53ef\u4ee5\u7ef4\u62a4\u8fd9\u4ef6\u4e8b\u60c5\u3002\u590d\u6742\u5ea6 $O(n \\log n)$\u3002\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n//\n// Problem: [ABC201F] Insertion Sort\n// Contest: Luogu\n// URL: https://www.luogu.com.cn/problem/AT_abc201_f\n// Memory Limit: 1 MB\n// Time Limit: 2000 ms\n\n#include <iostream>\n#define lson x * 2\n#define rson x * 2 + 1\nusing namespace std;\nint p[ 200010 ], pos[ 200010 ];\nint a[ 200010 ], b[ 200010 ], c[ 200010 ];\nlong long int tree[ 800010 ];\nvoid pushup( int x )\n{\n    tree[ x ] = min( tree[ lson ], tree[ rson ] );\n}\nvoid build( int x, int l, int r )\n{\n    if ( l == r )\n    {\n        tree[ x ] = 0x3f3f3f3f3f3f3f3f;\n    }\n    int mid = ( l + r ) / 2;\n    build( lson, l, mid );\n    build( rson, mid + 1, r );\n}\nvoid update( int x, int l, int r, int p, long long int v )\n{\n    if ( l == r )\n    {\n        tree[ x ] = min( tree[ x ], v );\n        return;\n    }\n    int mid = ( l + r ) / 2;\n    if ( p <= mid )\n    {\n        update( lson, l, mid, p, v );\n    }\n    else\n    {\n        update( rson, mid + 1, r, p, v );\n    }\n    pushup( x );\n}\nlong long int query( int x, int l, int r, int p )\n{\n    if ( r <= p )\n    {\n        return tree[ x ];\n    }\n    int mid = ( l + r ) / 2;\n    if ( p <= mid )\n    {\n        return query( lson, l, mid, p );\n    }\n    else\n    {\n        return min( tree[ lson ], query( rson, mid + 1, r, p ) );\n    }\n}\nvoid updatet( int x, int l, int r, int p, long long int v )\n{\n    tree[ p ] = v;\n}\nlong long int queryt( int x, int l, int r, int p )\n{\n    long long int ans = tree[ p ];\n    for ( int i = 1; i < p; i++ )\n    {\n        ans = min( ans, tree[ i ] );\n    }\n    return ans;\n}\nlong long int suma[ 200010 ], sumab[ 200010 ], sumac[ 200010 ];\nlong long int dp[ 200010 ];\nint main()\n{\n    int n;\n    cin >> n;\n    for ( int i = 1; i <= n; i++ )\n    {\n        cin >> p[ i ];\n        pos[ p[ i ] ] = i;\n    }\n    for ( int i = 1; i <= n; i++ )\n    {\n        cin >> a[ i ] >> b[ i ] >> c[ i ];\n        suma[ i ] = suma[ i - 1 ] + a[ i ];\n        sumab[ i ] = sumab[ i - 1 ] + min( a[ i ], b[ i ] );\n        sumac[ i ] = sumac[ i - 1 ] + min( a[ i ], c[ i ] );\n    }\n    for ( int i = 1; i <= n; i++ )\n    {\n        dp[ i ] = sumab[ i - 1 ];\n        dp[ i ] = min( dp[ i ], query( 1, 1, n, pos[ i ] ) + suma[ i - 1 ] );\n        update( 1, 1, n, pos[ i ], dp[ i ] - suma[ i ] );\n    }\n    long long int ans = 0x3f3f3f3f3f3f3f3f;\n    for ( int i = 1; i <= n; i++ )\n    {\n        ans = min( ans, dp[ i ] + sumac[ n ] - sumac[ i ] );\n    }\n    cout << ans << endl;\n}\n```\n\n",
        "postTime": 1679024557,
        "uid": 122079,
        "name": "songhongyi",
        "ccfLevel": 6,
        "title": "ABC201F \u9898\u89e3"
    }
]