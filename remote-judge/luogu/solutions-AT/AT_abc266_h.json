[
    {
        "content": "\u8003\u8651 dp\uff0c$f_i$ \u8bbe\u5728 $t_i$ \u65f6\u523b\u5230\u8fbe\u7b2c $i$ \u4e2a\u70b9\uff0c\u80fd\u83b7\u5f97\u7684\u6700\u5927\u6536\u76ca\u3002\n\n\u8f6c\u79fb\uff1a$f_i = f_j + a_i$\uff0c\u5176\u4e2d $j$ \u80fd\u8f6c\u79fb\u5230 $i$ \u7684\u5145\u8981\u6761\u4ef6\u6709\uff1a\n\n- $t_j \\le t_i$\n- $y_j \\le y_i$\n- $|x_i - x_j| + y_i - y_j \\le t_i - t_j$\n\n\u7b2c\u4e09\u4e2a\u6761\u4ef6\u8868\u793a\u4ece $j$ \u8d70\u5230 $i$ \u65f6\u95f4\u8981\u8db3\u591f\u3002\n\n\u62c6\u7b2c\u4e09\u4e2a\u6761\u4ef6\u7684\u7edd\u5bf9\u503c\uff0c\u5f97\uff1a\n\n- $x_i - x_j + y_i - y_j \\le t_i - t_j$\n- $x_j - x_i + y_i - y_j \\le t_i - t_j$\n\n\u79fb\u9879\uff0c\u5f97\uff1a\n\n- $t_j - x_j - y_j \\le t_i - x_i - y_i$\n- $t_j + x_j - y_j \\le t_i + x_i - y_i$\n\n\u8fd9\u6837\u4f60\u5c31\u5f97\u5230\u4e86\u56db\u4e2a\u6761\u4ef6\u3002\u4e4d\u4e00\u770b\u597d\u50cf\u662f\u56db\u7ef4\u504f\u5e8f\uff01\u4f46\u662f\u4f60\u53d1\u73b0\u82e5\u6ee1\u8db3 $|x_i - x_j| + y_i - y_j \\le t_i - t_j$\uff0c\u5219\u4e00\u5b9a\u6ee1\u8db3 $t_i - t_j \\ge 0$\uff0c\u56e0\u6b64\u53ef\u4ee5\u7701\u7565\u4e00\u4e2a\u6761\u4ef6\u3002\n\n\u63a5\u4e0b\u6765\u8dd1 cdq \u4f18\u5316 dp \u5373\u53ef\u3002\n\n[code](https://atcoder.jp/contests/abc266/submissions/35979406)",
        "postTime": 1666837765,
        "uid": 275273,
        "name": "zltqwq",
        "ccfLevel": 0,
        "title": "ABC266Ex \u9898\u89e3"
    },
    {
        "content": "> [ABC266 Ex - Snuke Panic (2D)](https://atcoder.jp/contests/abc266/tasks/abc266_h)\n\n\u633a\u597d\u7684\u4e00\u9053\u9898\uff08\u4e0d\u8fc7\u8c03\u4e86\u597d\u4e45QAQ\n\n# \u65b9\u6cd5\u4e00\n\n\u6bd4\u8f83\u66b4\u529b\u7684\u505a\u6cd5\u3002\n\n\u9996\u5148\uff0c\u4f60\u5bb9\u6613\u60f3\u5230\u4e00\u4e2a DP \u72b6\u6001\uff1a$f(t,x,y)$ \u8868\u793a\u5728 $t$ \u65f6\u523b\u5230\u8fbe $(x,y)$ \u7684\u6700\u5927\u6536\u76ca\u3002\n\n\u8f6c\u79fb\u4e3a\uff1a\n\n$$\nf(t,x,y)=\\max\\{f(t',x',y')|t'\\leq t,y'\\leq y,|x-x'|+y-y'\\leq t-t'\\}\n$$\n\n\u540e\u9762\u7684\u9650\u5236\u610f\u601d\u5c31\u662f\u8bf4\u4f60\u5fc5\u987b\u8981\u5728\u8fd9\u4e48\u591a\u65f6\u95f4\u91cc\u80fd\u591f\u8d70\u8fd9\u4e48\u591a\u8def\u7a0b\uff0c\u56e0\u4e3a\u5df2\u7ecf\u6709 $t'\\leq t,y'\\leq y$\uff0c\u6240\u4ee5\u5c31\u4e0d\u9700\u8981\u52a0\u7edd\u5bf9\u503c\u4e86\u3002\n\n\u4f46\u662f $x$ \u8fd8\u7559\u7740\u7edd\u5bf9\u503c\uff0c\u4e0d\u597d\u5904\u7406\uff0c\u6240\u4ee5\u5411\u628a\u8fd9\u4e2a\u7edd\u5bf9\u503c\u62c6\u5f00\u3002\n\n\u56e0\u4e3a $-|x-x'|\\leq |x-x'|$\uff0c\u6240\u4ee5\u81ea\u7136\u6709 $-|x-x'|+y-y'\\leq t-t'$\u3002\n\n\u8fd9\u6837\u5c31\u6210\u529f\u5730\u628a\u7edd\u5bf9\u503c\u62c6\u6210\u4e86\u4e24\u4e2a\u9650\u5236\uff1a\n+ $x-x'+y-y'\\leq t-t'$\n+ $x'-x+y-y'\\leq t-t'$\n\n\u5bf9\u5b83\u505a\u4e00\u4e2a\u53d8\u5f62\uff08\u5373\u79fb\u9879\u4f7f $x,y,t$ \u5728\u4e00\u8fb9\uff0c$x',y',t'$ \u5728\u4e00\u8fb9\uff09\uff0c\u5f97\u5230\uff1a\n+ $t'-x'-y'\\leq t-x-y$\n+ $t'+x'-y'\\leq t+x-y$\n\n\u90a3\u4e48\u4f60\u6309\u7167 $y$ \u5bf9\u5b83\u6392\u4e00\u4e0b\u5e8f\uff0c\u53ea\u7528\u8003\u8651\u6ee1\u8db3\u4e0a\u9762\u4e24\u4e2a\u6027\u8d28\u5730\u6700\u5927\u503c\uff0c\u7528\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\u505a\u5c31\u884c\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log^2 n)$\u3002\n\n# \u65b9\u6cd5\u4e8c\n\n\u524d\u9762\u7684\u8f6c\u5316\u8fd8\u662f\u8ddf\u4e0a\u9762\u4e00\u6837\u7684\u3002\n\n\u4f60\u6309 $y$ \u6392\u5b8c\u5e8f\u4ee5\u540e\u53ef\u4ee5\u8003\u8651\u7528 CDQ \u5206\u6cbb\u6765\u505a\u3002\n\n\u73b0\u5728\u8003\u8651\u95ee\u9898\u5df2\u7ecf\u77e5\u9053 $[l,mid]$ \u7684\u503c\uff0c\u5982\u4f55\u8ba1\u7b97\u51fa $[mid+1,r]$ \u7684\u503c\u3002\n\n\u9996\u5148\u9700\u8981\u660e\u786e\uff0c\u56e0\u4e3a\u5df2\u7ecf\u6309\u627e $y$ \u6392\u5e8f\u8fc7\u4e86\uff0c\u6240\u4ee5\u6240\u6709 $[l,mid]$ \u7684 $y$ \u5fc5\u7136\u4e0d\u5927\u4e8e $[mid+1,r]$ \u7684 $y$\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ea\u9700\u8981\u8003\u8651 $t'-x'-y'\\leq t-x-y$ \u548c $t'+x'-y'\\leq t+x-y$ \u7684\u9650\u5236\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u8fd9\u4e24\u4e2a\u9650\u5236\uff0c\u53ef\u4ee5\u5148\u5bf9 $t-x-y$ \u503c\u6392\u5e8f\uff0c\u8fd9\u6837\u5c31\u53ea\u5269\u4e00\u4e2a\u9650\u5236\u4e86\uff0c\u7136\u540e\u7528\u6811\u72b6\u6570\u7ec4\u5c31\u53ef\u4ee5\u505a\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log^2 n)$\uff0c\u4f46\u662f\u5e38\u6570\u6781\u5c0f\uff0c\u6bd4\u65b9\u6cd5\u4e00\u4e0d\u77e5\u9053\u5feb\u591a\u5c11\u500d\u3002\n\n**\u6ce8\u610f\uff1a\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u70b9 $(0,0,0,0)$\uff0c\u5e76\u4e14\u5728\u6811\u72b6\u6570\u7ec4\u8ba1\u7b97\u7684\u65f6\u5019\u9700\u8981\u5c06\u521d\u503c\u8bbe\u4e3a $-\\infty$\uff0c\u9632\u6b62\u8f6c\u79fb\u5176\u4ed6\u7684\u3002**\n\n# \u53cd\u601d\n\n\u7b2c\u4e00\u4e2a\u601d\u8def\u6bd4\u8f83\u7b80\u5355\uff0c\u53ea\u9700\u8981\u5c06\u8f6c\u79fb\u548c\u9650\u5236\u5728\u7eb8\u4e0a\u6e05\u6670\u5730\u5217\u4e0b\u6765\u5c31\u884c\u3002\n\n\u65b9\u6cd5\u4e8c\u5730 CDQ \u5206\u6cbb\u6bd4\u8f83\u5de7\u5999\uff0c\u9700\u8981\u7528\u5230\u4e00\u4e9b\u5947\u6280\u6deb\u5de7\u3002\n\n\u65b9\u6cd5\u4e00\u7684 code\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n//#define JERRY_JIANG\n#define fi first\n#define se second\n#define TIME 1e3 * clock() / CLOCKS_PER_SEC\nusing namespace std;\nusing ll = long long;\nusing pii = pair<int, int>;\nusing pll = pair<ll, ll>;\ninline int read() {\n\tint x = 0;\n\tbool f = 0;\n\tchar ch = getchar();\n\twhile(!isdigit(ch)) f |= ch == '-', ch = getchar();\n\twhile(isdigit(ch)) x = x * 10 + ch - '0', ch = getchar();\n\treturn f ? -x : x;\n}\ninline void print(int x) {\n\tif(x < 0) return putchar('-'), print(-x);\n\tif(x >= 10) print(x / 10);\n\tputchar(x % 10 + '0');\n}\ninline int lowbit(int x) {return x & -x;}\nbool Memst;\nint n;\nstruct Data {\n\tint y, a, b, sz;\n\tbool operator < (const Data &x) const {\n\t\tif(y != x.y) return y < x.y;\n\t\tif(a != x.a) return a < x.a;\n\t\tif(b != x.b) return b < x.b;\n\t\treturn sz < x.sz;\n\t}\n};\nvector<Data> datas;\nvector<int> va, vb;\nstruct FenwickTree1D {\n\tint Mxn;\n\tunordered_map<int, ll> tree;\n\tFenwickTree1D() : Mxn(0){};\n\tFenwickTree1D(int n) : Mxn(n){};\n\tvoid update(int x, ll v) {\n\t\twhile(x <= Mxn) {\n\t\t\ttree[x] = max(tree[x], v);\n\t\t\tx += lowbit(x);\n\t\t}\n\t}\n\tll query(int x) {\n\t\tll res = 0;\n\t\twhile(x > 0) {\n\t\t\tres = max(res, tree[x]);\n\t\t\tx -= lowbit(x);\n\t\t}\n\t\treturn res;\n\t}\n};\nstruct FenwickTree2D {\n\tint Mxn, Mxm;\n\tvector<FenwickTree1D> tree;\n\tFenwickTree2D(int n, int m) : Mxn(n), Mxm(m), tree(n, FenwickTree1D(m)){};\n\tvoid update(int x, int y, ll v) {\n\t\twhile(x <= Mxn) {\n\t\t\ttree[x].update(y, v);\n\t\t\tx += lowbit(x);\n\t\t}\n\t}\n\tll query(int x, int y) {\n\t\tll res = 0;\n\t\twhile(x > 0) {\n\t\t\tres = max(res, tree[x].query(y));\n\t\t\tx -= lowbit(x);\n\t\t}\n\t\treturn res;\n\t}\n};\nbool Memed;\nint main(){\n\tfprintf(stderr, \"%.3lf MB\\n\", (&Memst - &Memed) / 1048576.0);\n\t#ifdef JERRY_JIANG\n\t\tFILE *IN = freopen(\"input.in\", \"r\", stdin);\n\t\tFILE *OUT = freopen(\"output.out\", \"w\", stdout);\n\t#endif\n\tios::sync_with_stdio(false); cin.tie(0);\n\t/* - input - */\n\tn = read();\n\tfor(int i = 1; i <= n; i++) {\n\t\tint t = read(), x = read(), y = read(), sz = read();\n\t\tif(t - x - y >= 0 && t + x - y >= 0) {\n\t\t\tdatas.push_back({y, t - x - y, t + x - y, sz});\n\t\t\tva.push_back(t - x - y); vb.push_back(t + x - y);\n\t\t}\n\t}\n\tdouble Timst = TIME;\n\tsort(datas.begin(), datas.end());\n\tsort(va.begin(), va.end());\n\tva.resize(unique(va.begin(), va.end()) - va.begin());\n\tsort(vb.begin(), vb.end());\n\tvb.resize(unique(vb.begin(), vb.end()) - vb.begin());\n\tFenwickTree2D T((int)va.size() + 1, (int)vb.size() + 1);\n\tll ans = 0;\n\tfor(int i = 0; i < (int)datas.size(); i++) {\n\t\tint y = datas[i].y, a = datas[i].a, b = datas[i].b, sz = datas[i].sz;\n\t\ta = lower_bound(va.begin(), va.end(), a) - va.begin() + 1;\n\t\tb = lower_bound(vb.begin(), vb.end(), b) - vb.begin() + 1;\n\t\tll cur = T.query(a, b) + (ll)sz;\n\t\tans = max(ans, cur);\n\t\tT.update(a, b, cur);\n\t}\n\tcout << ans << '\\n';\n\tdouble Timed = TIME;\n\tfprintf(stderr, \"%.3lf ms\\n\", Timed - Timst);\n\treturn 0;\n}\n/*\nauthor: Jerry_Jiang\nstart coding at 30/08/22 08:51\nfinish debugging at 30/08/22 09:53\n*/\n```\n\n\u65b9\u6cd5\u4e8c\u7684 code\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n//#define JERRY_JIANG\n#define fi first\n#define se second\n#define TIME 1e3 * clock() / CLOCKS_PER_SEC\nusing namespace std;\nusing ll = long long;\nusing pii = pair<int, int>;\nusing pll = pair<ll, ll>;\ninline int read() {\n\tint x = 0;\n\tbool f = 0;\n\tchar ch = getchar();\n\twhile(!isdigit(ch)) f |= ch == '-', ch = getchar();\n\twhile(isdigit(ch)) x = x * 10 + ch - '0', ch = getchar();\n\treturn f ? -x : x;\n}\ninline void print(int x) {\n\tif(x < 0) return putchar('-'), print(-x);\n\tif(x >= 10) print(x / 10);\n\tputchar(x % 10 + '0');\n}\ninline int lowbit(int x) {return x & -x;}\nbool Memst;\nconstexpr int N = 1e5 + 10;\nint n;\npair<pii, pii> a[N];\npair<pii, int> b[N];\nll tree[N], dp[N];\nvoid update(int x, ll v) {\n\twhile(x < N) {\n\t\ttree[x] = max(tree[x], v);\n\t\tx += lowbit(x);\n\t}\n}\nll query(int x) {\n\tll res = -0x3f3f3f3f3f3f3f3f;\n\twhile(x > 0) {\n\t\tres = max(res, tree[x]);\n\t\tx -= lowbit(x);\n\t}\n\treturn res;\n}\nvoid solve(int l, int r) {\n\tif(l == r) {\n\t\tdp[l] += (ll)a[l].se.se;\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tsolve(l, mid);\n\tvector<int> v;\n\tint tot = 0;\n\tfor(int i = l; i <= r; i++) {\n\t\tint p = a[i].fi.se - a[i].fi.fi - a[i].se.fi, q = a[i].fi.se - a[i].fi.fi + a[i].se.fi;\n\t\tb[++tot] = make_pair(make_pair(p, q), i);\n\t\tv.push_back(q);\n\t}\n\tsort(b + 1, b + tot + 1);\n\tsort(v.begin(), v.end());\n\tv.resize(unique(v.begin(), v.end()) - v.begin());\n\tfor(int i = 1; i <= (int)v.size(); i++) tree[i] = -0x3f3f3f3f3f3f3f3f;\n\tfor(int i = 1; i <= tot; i++) {\n\t\tint pos = lower_bound(v.begin(), v.end(), b[i].fi.se) - v.begin() + 1, id = b[i].se;\n\t\tif(id <= mid) update(pos, dp[id]);\n\t\telse dp[id] = max(dp[id], query(pos));\n\t}\n\tsolve(mid + 1, r);\n}\nbool Memed;\nint main(){\n\tfprintf(stderr, \"%.3lf MB\\n\", (&Memst - &Memed) / 1048576.0);\n\t#ifdef JERRY_JIANG\n\t\tFILE *IN = freopen(\"input.in\", \"r\", stdin);\n\t\tFILE *OUT = freopen(\"output.out\", \"w\", stdout);\n\t#endif\n\tios::sync_with_stdio(false); cin.tie(0);\n\tcin >> n;\n\tfor(int i = 1; i <= n; i++) cin >> a[i].fi.se >> a[i].se.fi >> a[i].fi.fi >> a[i].se.se;\n\tsort(a + 1, a + n + 1);\n\ta[0].fi.fi = a[0].fi.se = a[0].se.fi = a[0].se.se = 0;\n\tmemset(dp, -0x3f, sizeof(dp));\n\tdp[0] = 0;\n\tsolve(0, n);\n\tll ans = 0;\n\tfor(int i = 1; i <= n; i++) ans = max(ans, dp[i]);\n\tcout << ans << endl;\n\tfprintf(stderr, \"%.3lf ms\\n\", TIME);\n\treturn 0;\n}\n/*\nauthor: Jerry_Jiang\n*/\n```",
        "postTime": 1661830456,
        "uid": 229669,
        "name": "Jerry__Jiang",
        "ccfLevel": 7,
        "title": "ABC266 Ex - Snuke Panic (2D)"
    }
]