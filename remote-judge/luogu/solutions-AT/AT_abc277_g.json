[
    {
        "content": "\u4e13\u95e8\u5f00\u4e2a\u535a\u5ba2\u6295\u4e2a\u9898\u89e3\u7f62\u4e86\u3002\n\n\u8003\u8651\u66b4\u529b\u662f $f_{i,j,k}$ \u8868\u793a\u7b2c $i$ \u6b65\u8d70\u5230\u70b9 $j$\uff0c\u4e14\u5f53\u524d\u7b49\u7ea7\u4e3a $k$ \u7684\u6982\u7387\u3002\u590d\u6742\u5ea6 $O(nmk)$\u3002\n\n\u8003\u8651\u628a $k$ \u538b\u5165 dp \u503c\uff0c\u53d1\u73b0 $k+1$ \u7684\u65f6\u5019\uff0c\u5e73\u65b9\u7684\u503c\u4f1a\u53d8\u6210 $(k+1)^2=k^2+2k+1$\uff0c\u6240\u4ee5\u4ee4 $f_{i,j,0/1/2}$ \u8868\u793a\u7b2c $i$ \u6b65\u8d70\u5230 $j$ \u65f6\u5f53\u524d\u7b49\u7ea7\u7684 0/1/2 \u6b21\u65b9\u7684\u671f\u671b\u503c\u5373\u53ef\uff0c\u7136\u540e\u66b4\u529b\u8f6c\u79fb\u3002\n\n\u590d\u6742\u5ea6 $O((n+m)k)$\u3002\n\nhttps://atcoder.jp/contests/abc277/submissions/36436795",
        "postTime": 1668330238,
        "uid": 115936,
        "name": "\u6cf7\u6cfd\u4e09\u6708",
        "ccfLevel": 0,
        "title": "ABC277G"
    },
    {
        "content": "# [ABC277G] \u9898\u89e3\n\n## Random Walk to Millionaire\n\n### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u5f20 $n$ \u4e2a\u70b9\uff0c$m$ \u6761\u8fb9\u7684\u6709\u5411\u56fe\uff0c\u6bcf\u4e2a\u70b9\u6709\u4e24\u79cd\u7c7b\u578b\uff1a\u7ecf\u9a8c\u6c60\u548c\u526f\u672c\u3002\u6709\u4e00\u4e2a\u4eba\u4e00\u5f00\u59cb\u5728 $1$ \u53f7\u8282\u70b9\uff0c\u7b49\u7ea7\u4e3a $0$ \u3002\u73b0\u5728\u4ed6\u8fdb\u884c\u6070\u597d $k$ \u6b21\u968f\u673a\u6e38\u8d70\u64cd\u4f5c\uff0c\u4e00\u6b21\u968f\u673a\u6e38\u8d70\u64cd\u4f5c\u5b9a\u4e49\u4e3a\uff1a\u4ece\u6240\u5728\u70b9\u7684\u6240\u6709\u51fa\u8fb9\u4e2d\u7b49\u6982\u7387\u9009\u62e9\u4e00\u6761\u51fa\u8fb9\u8d70\u51fa\u53bb\u3002\u5982\u679c\u76ee\u6807\u70b9\u662f\u7ecf\u9a8c\u6c60\uff0c\u5219\u7b49\u7ea7 $+1$ \uff0c\u5426\u5219\u82e5\u5f53\u524d\u7b49\u7ea7\u4e3a $X$ \uff0c\u83b7\u5f97 $X^2$ \u4e2a\u91d1\u5e01\u3002\u6c42\u6700\u540e\u7684\u91d1\u5e01\u671f\u671b\u503c\u3002$n,m,k \\leq3000$\u3002\n\n### \u9898\u76ee\u89e3\u6790\n\n\u89c2\u5bdf\u6570\u636e\u8303\u56f4\uff0c\u611f\u89c9\u5927\u6982\u662f\u4e00\u4e2a $O(n^2)$ \u7684\u505a\u6cd5\u3002\u633a\u5957\u8def\u7684\u4e00\u4e2a\u9898\u3002\u4e0d\u8fc7\u8fd9\u91cc\u53ef\u4e0d\u80fd\u4f7f\u7528\u6c42\u6240\u6709\u7684\u548c\uff0c\u518d\u9664\u65b9\u6848\u7684\u65b9\u5f0f\uff0c\u56e0\u4e3a\u6bcf\u4e00\u79cd\u8d70\u6cd5\u7684\u6982\u7387\u4e0d\u662f\u5e73\u5747\u7684\u3002\n\n\u770b\u4e00\u4e0b\u9898\u76ee\u4e2d\u7684\u91d1\u5e01\u83b7\u53d6\u65b9\u5f0f\uff0c\u662f\u4e00\u4e2a\u5e73\u65b9\uff0c\u611f\u89c9\u4e0d\u597d\u5904\u7406\uff0c\u4e0d\u96be\u60f3\u5230\u7c7b\u4f3c\u4e8e `OSU!` \u8fd9\u79cd\u9898\uff0c\u6211\u4eec\u62c6\u8d21\u732e\u3002\n\n\u5177\u4f53\u7684\uff0c\u6211\u4eec\u4ece\u540e\u5411\u524d\u8003\u8651\uff0c\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\u8fd9 $k$ \u6b21\u968f\u673a\u6e38\u8d70\u7684\u5177\u4f53\u65b9\u6848\uff0c\u6bcf\u6b21\u8003\u8651\u7ecf\u8fc7\u4e00\u4e2a\u7ecf\u9a8c\u6c60\u5347\u7ea7\u4e4b\u540e\u5e26\u6765\u7684\u5f71\u54cd\u3002\u8bbe\u6211\u4eec\u5728\u7ecf\u8fc7\u8fd9\u4e2a\u70b9\u4e4b\u540e\u7ecf\u8fc7\u7684\u6240\u6709\u526f\u672c\u70b9\u548c\u4e0d\u8003\u8651\u8fd9\u4e2a\u70b9\u548c\u4e4b\u524d\u7684\u6240\u6709\u7ecf\u9a8c\u70b9\u6240\u7684\u7b49\u7ea7\u6784\u6210\u7684\u6709\u5e8f\u5bf9 $(x,l)$ \u6784\u6210\u7684\u96c6\u5408\u4e3a $S=\\{(x_1,l_1),(x_2,l_2),\\cdots,(x_t,l_t)\\}$\uff0c\u5728\u4e0d\u8003\u8651\u5f53\u524d\u7ecf\u8fc7\u8fd9\u4e2a\u7ecf\u9a8c\u6c60\u7684\u65f6\u5019\uff0c\u8fd9\u4e9b\u526f\u672c\u70b9\u5f97\u5230\u7684\u91d1\u5e01\u603b\u548c\u4e3a\uff1a$\\sum\\limits_{i\\in[1,t]} l_i^2$ \uff0c\u800c\u5c06\u8fd9\u4e2a\u70b9\u7684\u7b49\u7ea7\u52a0\u4e0a\u4e4b\u540e\u5f97\u5230\u7684\u91d1\u5e01\u603b\u548c\u4e3a $\\sum\\limits_{i\\in[1,t]} (l_i+1)^2=\\sum\\limits_{i\\in[1,t]} l_i^2+\\sum\\limits_{i\\in[1,t]} 2l_i+t$ \uff0c\u6240\u4ee5\u6211\u4eec\u5bf9\u4e8e\u4e00\u79cd\u65b9\u6848\u53ea\u9700\u8981\u77e5\u9053\u6bcf\u4e00\u6b65\u7684 $\\sum\\limits_{i\\in[1,t]} l_i^2,\\sum\\limits_{i\\in[1,t]}l_i,t$ \u5373\u53ef\uff0c\u7531\u4e8e\u8fd9\u91cc\u4f7f\u7528\u7684\u662f\u52a0\u548c\uff0c\u6240\u4ee5\u671f\u671b\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8fd9\u4e48\u6c42\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u77e5\u9053\u7684\u662f\u4e09\u4ef6\uff1a\u6bcf\u4e2a\u70b9\u51fa\u53bb\u8d70 $k$ \u6b65\u7684\u671f\u671b\u91d1\u5e01\u6570\u91cf\uff0c\u671f\u671b\u526f\u672c\u7b49\u7ea7\u548c\uff0c\u671f\u671b\u526f\u672c\u6570\u91cf\u5373\u53ef\u3002\n\n\u6211\u4eec\u5206\u522b\u8bbe\u5176\u4e3a $dpsq_{u,k},dps_{u,k},dpc_{u,k}$\u3002\u5bf9\u4e8e\u7ecf\u9a8c\u70b9\uff0c\u6211\u4eec\u6709\uff1a\n\n$dpsq_{u,k}=\\frac{\\sum \\limits_{v\\in Son_u} dpsq_{v,k-1}+2\\times dps_{v,k-1}+dpc_{v,k-1}}{|Son_u|}$\n\n$dps_{u,k}=\\frac{\\sum \\limits_{v\\in Son_u} dps_{v,k-1}+dpc_{v,k-1}}{|Son_u|}$\n\n$dpc_{u,k}=\\frac{\\sum \\limits_{v\\in Son_u} dpc_{v,k-1}}{|Son_u|}$\n\n\n\u800c\u5bf9\u4e8e\u526f\u672c\u70b9\uff0c\u6211\u4eec\u6709\uff1a\n\n$dpsq_{u,k}=\\frac{\\sum \\limits_{v\\in Son_u} dpsq_{v,k-1}}{|Son_u|}$\n\n$dps_{u,k}=\\frac{\\sum \\limits_{v\\in Son_u} dps_{v,k-1}}{|Son_u|}$\n\n$dpc_{u,k}=\\frac{\\sum \\limits_{v\\in Son_u} (dpc_{v,k-1}+1)}{|Son_u|}$\n\n\n\u6700\u540e\u7684\u7b54\u6848\u5c31\u662f $dpsq_{1,k}$ \uff0c\u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u7b2c\u4e00\u4e2a\u70b9\u662f\u7ecf\u9a8c\u6c60\uff0c\u4ed6\u5e76\u4e0d\u4f1a\u5347\u7ea7\uff0c\u56e0\u4e3a\u5347\u7ea7\u548c\u6253\u526f\u672c\u53ea\u53d1\u751f\u5728\u968f\u673a\u8d70\u51fa\u8fb9\u4e4b\u540e\u3002\u8fd9\u90e8\u5206\u53ef\u4ee5\u8003\u8651\u628a\u7b2c\u4e00\u4e2a\u70b9\u5728 **\u521a\u5f00\u59cb\u7684\u65f6\u5019** \u89c6\u4e3a\u4e00\u4e2a\u526f\u672c\uff0c\u53cd\u6b63\u662f\u96f6\u7ea7\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\u3002\u4e0d\u8fc7\u540e\u9762\u7684\u65f6\u5019\u518d\u7ecf\u8fc7\u8981\u6b63\u5e38\u5347\u7ea7\u4e86\u3002\n\n### CODE\n\n\u592a\u96be\u770b\u4e86\uff0c\u800c\u4e14\u5b9a\u4e49\u5199\u7684\u5f88\u8be1\u5f02\uff0c\u4e0d\u8d34\u4e86\u3002\u611f\u89c9\u8bb2\u7684\u8fd8\u662f\u4e0d\u6a21\u7cca\u7684\u3002\n\n",
        "postTime": 1668414982,
        "uid": 455490,
        "name": "Jocker_CW",
        "ccfLevel": 8,
        "title": "[ABC277G] \u9898\u89e3"
    },
    {
        "content": "[\u53ef\u80fd\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://atcoder-for-chinese-developers.github.io/atcoder-for-chinese/index.html?page=Sabc277.abc277_g.twttwt)\n\n\u4e00\u4e2a\u663e\u7136\u7684 $\\Theta(n^3)$ \u505a\u6cd5\u662f\u5bf9\u6240\u6709 $i, j, k$ \u6c42\u8d70\u4e86 $i$ \u6b21\u5230\u8fbe $j$ \u7b49\u7ea7\u4e3a $k$ \u7684\u6982\u7387\u3002\u72b6\u6001\u6570 $n^3$ \u4e0d\u884c\uff0c\u8003\u8651\u600e\u4e48\u628a $k$ \u8fd9\u4e00\u7ef4\u53bb\u6389\u3002 \n\n\u8bbe\u67d0\u4e2a\u65f6\u523b\u5230\u8fbe\u67d0\u4e2a\u70b9\u7684\u7b49\u7ea7\u4e3a $1$ \u7684\u6982\u7387\u4e3a $a$\uff0c\u7b49\u7ea7\u4e3a $2$ \u7684\u6982\u7387\u4e3a $b$\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65f6\u523b\u8fd9\u4e2a\u70b9\u7684\u8d21\u732e\u662f $a + 4b + 9c + \\dots$\uff0c\u5982\u679c\u9047\u4e0a\u4e86\u4e00\u4e2a\u8ba9\u5176\u7b49\u7ea7\u63d0\u5347\u7684\u70b9\uff0c\u5219\u8d21\u732e\u53d8\u6210\u4e86 $4 a + 9b + 16c + \\dots$\uff0c\u518d\u52a0\u4e0a\u8fd9\u4e2a\u65f6\u523b\u8d70\u5230\u8fd9\u4e2a\u70b9\u7b49\u7ea7\u4e3a $0$ \u7684\u6982\u7387\u3002  \n\n\u8d21\u732e\u589e\u52a0\u4e86 $3a + 5b + 7c + \\dots$\uff08\u56e0\u4e3a $(i + 1)^2 - i^2 = 2i + 1$\uff09\uff0c\u5982\u679c\u80fd\u7ef4\u62a4\u8fd9\u4e2a\u4e1c\u897f\u5c31\u80fd\u7ef4\u62a4\u8d21\u732e\u4e86\u3002  \n\n\u63a5\u7740\u8003\u8651\u7b49\u7ea7\u63d0\u5347\u65f6\u8fd9\u4e2a\u4e1c\u897f\u600e\u4e48\u53d8\u5316\uff0c\u5373\u589e\u52a0\u4e86 $2(a + b + c + \\dots)$\u3002  \n\u90a3\u4e48\u7ef4\u62a4 $a + b + c + \\dots, a + 3b + 5c + \\dots, a + 4b + 9c + \\dots$ \u7684\u503c\u5c31\u884c\u4e86\u3002\n\n```cpp\nvoid main() {\n    std::cin >> n >> m >> k;\n    for (int i = 1, x, y; i <= m; i++) {\n        std::cin >> x >> y;\n        g[x].push_back(y), g[y].push_back(x);\n    }\n    for (int i = 1; i <= n; i++) std::cin >> c[i];\n    zro[0][1] = 1;\n    for (int i = 1; i <= n; i++) ind[i] = Pow(g[i].size(), P - 2);\n    for (int i = 1; i <= k; i++) \n        for (int u = 1; u <= n; u++)\n            for (int v : g[u]) \n                if (c[u] || (i == 1 && u == 1)) \n                    add(zro[i][v], 1ll * zro[i - 1][u] * ind[u] % P);\n    for (int i = 1; i <= k; i++) {\n        for (int u = 1; u <= n; u++)\n            for (int v : g[u]) {\n                add(sm[i][v], 1ll * sm[i - 1][u] * ind[u] % P);\n                add(ts[i][v], 1ll * ts[i - 1][u] * ind[u] % P);\n                add(sq[i][v], 1ll * sq[i - 1][u] * ind[u] % P);\n            }\n        for (int j = 1; j <= n; j++)\n            if (c[j]) add(ans, 1ll * sq[i][j] % P);\n            else {\n                add(ts[i][j], 2ll * sm[i][j] % P);\n                add(ts[i][j], zro[i][j]);\n                add(sq[i][j], ts[i][j]);\n                add(sm[i][j], zro[i][j]);\n            }\n    }\n    std::cout << ans;\n}\n```",
        "postTime": 1668326005,
        "uid": 499996,
        "name": "Qiaoqia",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 ABC277G"
    },
    {
        "content": "\u7834\u9632\u4e86\u7834\u9632\u4e86\uff0c\u5f7b\u5e95\u7834\u9632\u4e86\uff0c\u88ab\u81ea\u5df1\u5f31\u667a\u9519\u8bef\u7684\u591a\u6837\u6027\u6574\u7684\u7834\u5927\u9632\u3002\n\n\u5468\u65e5\u6a21\u62df\u8d5b\u6253\u8fc7\u76f8\u4f3c\u601d\u8def\u7684\u9898\u76ee\u3002\u8003\u8651\u5012\u5e8f dp\uff0c\u8bbe $dp_{i,j}$ \u4e3a**\u8fdb\u884c\u4e86\u7b2c $k-j+1$ \u5230\u7b2c $k$ \u6b21\u884c\u52a8**\uff0c\u4e14\u5f53\u524d\u5728\u8282\u70b9 $i$ \u65f6\u7684\u7b54\u6848\u671f\u671b\u3002\u601d\u8003\u4e24\u79cd\u64cd\u4f5c\u5206\u522b\u5bf9\u4e8e\u5f53\u524d\u7b54\u6848\u7684\u8d21\u732e\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c $1$\uff0c\u6211\u4eec\u4f1a\u8ba9\u4e4b\u524d\u7684\u82e5\u5e72\u4e2a $x^2$ \u53d8\u6210 $(x+1)^2$\uff0c\u76f4\u63a5\u8f6c\u79fb\u671f\u671b\u4e0d\u597d\u8f6c\u79fb\uff0c\u7531\u4e8e $(x+1)^2=x^2+2x+1$\uff0c\u4e8e\u662f\u8003\u8651\u7ef4\u62a4 $f_{i,j}$ \u8868\u793a\u5f53\u524d\u4e00\u6b21\u9879\u7684\u671f\u671b\uff0c$g_{i,j}$ \u8868\u793a\u5f53\u524d\u96f6\u6b21\u9879\u7684\u671f\u671b\uff0c\u4f9d\u6b21\u8f6c\u79fb\uff0c\u6709\u8f6c\u79fb\u65b9\u7a0b\uff1a\n$$dp_{u,i}=\\frac{1}{deg_u}\\sum_{v}(dp_{v,i-1}+2\\times f_{v,i-1}+g_{v,i-1})$$\n$$f_{u,i}=\\frac{1}{deg_u}\\sum_{v}f_{v,i-1}+g_{v,i-1}$$\n$$g_{u,i}=\\frac{1}{deg_u}\\sum_{v}g_{v,i-1}$$\n\u5bf9\u4e8e\u64cd\u4f5c $2$\uff0c\u6211\u4eec\u76f8\u5f53\u4e8e\u589e\u52a0\u4e86\u4e00\u4e0b $0$ \u6b21\u9879\uff0c\u6240\u4ee5\u5c06 $0$ \u6b21\u9879\u52a0 $1$ \u4e4b\u540e\u7b97\u671f\u671b\u5373\u53ef\u3002\n\n\u521d\u59cb\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9 $i$ \u5c06 $g_{i,1}=1$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(nk)$\u3002\u611f\u89c9\u7c7b\u4f3c\u8fd9\u79cd\u3010\u5e26\u6709\u4e00\u4e2a\u5f71\u54cd\u540e\u7eed\u8d21\u732e\u8ba1\u7b97\u7684\u5c5e\u6027\u3011\u7684 dp \u5927\u591a\u90fd\u53ef\u4ee5\u5012\u5e8f\u505a\uff0c\u4f1a\u7b80\u5355\u8bb8\u591a\u3002\n\n\u8d5b\u540e\u8111\u6b8b\u7528\u524d\u7f00\u79ef\u9884\u5904\u7406\u4f18\u5316\u6c42 inv \u7684\u8fc7\u7a0b\uff0c\u5fd8\u8bb0\u5c06\u524d\u7f00\u79ef\u5dee\u5206\u4e86\uff0c\u5e76\u4e14\u4e00\u70b9\u5f02\u5e38\u90fd\u6ca1\u6709\u53d1\u73b0\uff0c\u4e8e\u662f\u8c03\u4e86\u56db\u4e94\u4e2a\u5c0f\u65f6+\u91cd\u6784\u4ee3\u7801\u4e00\u6b21\uff0c\u5f7b\u5e95\u7834\u9632orz\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n#define int long long\nconst int N=3005;\nconst int M=6005;\nconst int mod=998244353;\nint n,m,k,a[N],dp[N][N],dp2[N][N],in[N],jc[N],inv[N],dp3[N][N];\nstruct node{\n\tint to[M],next[M],tot,head[N];\n\tvoid adde(int u,int v){\n\t\tto[++tot]=v,next[tot]=head[u],head[u]=tot;\n\t}\n}S;\nll read(){\n\tll w=0,f=1;\n\tchar c=getchar();\n\twhile (c>'9'||c<'0'){\n\t\tif (c=='-') f=-1;\n\t\tc=getchar();\n\t}\n\twhile (c>='0'&&c<='9'){\n\t\tw=(w<<3)+(w<<1)+(c^48);\n\t\tc=getchar();\n\t}\n\treturn w*f;\n}\nint ksm(int x,int y){\n\tint ans=1;\n\twhile (y){\n\t\tif (y&1) ans=ans*x%mod;\n\t\tx=x*x%mod;\n\t\ty>>=1;\n\t}\n\treturn ans;\n}\nvoid init(){\n\tinv[0]=jc[0]=1;\n\tfor (int i=1;i<=n;i++) jc[i]=jc[i-1]*i%mod;\n\tinv[n]=ksm(jc[n],mod-2);\n\tfor (int i=n-1;i>=1;i--) inv[i]=inv[i+1]*(i+1)%mod;\n\tfor (int i=1;i<=n;i++)\n\t\tinv[i]=inv[i]*jc[i-1]%mod;\n}\nsigned main(){\n\tn=read(),m=read(),k=read();\n\tinit();\n\tfor (int i=1;i<=m;i++){\n\t\tint u=read(),v=read();\n\t\tS.adde(u,v),S.adde(v,u);\n\t\tin[u]++,in[v]++;\n\t}\n\tfor (int i=1;i<=n;i++) a[i]=read();\n\tfor (int i=1;i<=n;i++)\n\t\tif (a[i]==1) dp3[i][1]=1;\n\tfor (int p=2;p<=k;p++){\n\t\tfor (int u=1;u<=n;u++){\n\t\t\tfor (int i=S.head[u];i;i=S.next[i]){\n\t\t\t\tint v=S.to[i];\n\t\t\t\tif (a[u]==1){\n\t\t\t\t\tdp[u][p]=(dp[u][p]+dp[v][p-1])%mod;\t\n\t\t\t\t\tdp2[u][p]=(dp2[u][p]+dp2[v][p-1])%mod;\t\n\t\t\t\t\tdp3[u][p]=(dp3[u][p]+dp3[v][p-1]+1)%mod;\n\t\t\t\t}else{\t\t\t\n\t\t\t\t\tdp[u][p]=(dp[u][p]+dp[v][p-1]+2ll*dp2[v][p-1]+dp3[v][p-1])%mod;\n\t\t\t\t\tdp2[u][p]=(dp2[u][p]+dp2[v][p-1]+dp3[v][p-1])%mod;\n\t\t\t\t\tdp3[u][p]=(dp3[u][p]+dp3[v][p-1])%mod;\n\t\t\t\t}\n\t\t\t}\n\t\t\tdp[u][p]=dp[u][p]*inv[in[u]]%mod;\n\t\t\tdp2[u][p]=dp2[u][p]*inv[in[u]]%mod;\n\t\t\tdp3[u][p]=dp3[u][p]*inv[in[u]]%mod;\n\t\t}\n\t}\n\tint ans=0;\n\tfor (int i=S.head[1];i;i=S.next[i]){\n\t\tint v=S.to[i];\n\t\tans=(ans+dp[v][k])%mod;\n\t}\n\tcout<<ans*inv[in[1]]%mod<<'\\n';\n\treturn 0;\n}\n```",
        "postTime": 1668434586,
        "uid": 257621,
        "name": "\u7ffc\u5fb7\u5929\u5c0a",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 [ABC277G] Random Walk to Millionaire"
    }
]