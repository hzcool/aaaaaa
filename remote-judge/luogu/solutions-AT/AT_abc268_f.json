[
    {
        "content": "\u672c\u9898\u53ef\u4ee5\u7528\u4e00\u79cd\u6bd4\u5b98\u65b9\u89e3\u6cd5\u8f83\u597d\u7406\u89e3\u7684\u505a\u6cd5\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570 $f(S)$ \u8868\u793a\u5b57\u7b26\u4e32 $S$ \u7684\u5f97\u5206\u3002\u6709\u4e86\u8fd9\u4e2a\u51fd\u6570\uff0c\u4e0b\u9762\u7684\u64cd\u4f5c\u5c31\u5341\u5206\u65b9\u4fbf\u3002\n\n\u5176\u6b21\uff0c\u672c\u9898\u7684\u5f97\u5206\u8ba1\u7b97\u6709\u4e00\u4e2a\u6027\u8d28\uff1a\n\n\u5bf9\u4e8e\u5b57\u7b26\u4e32 $S_1,S_2,S_3$\uff0c\u7528 $+$ \u8868\u793a\u5b57\u7b26\u4e32\u7684\u8fde\u63a5\u64cd\u4f5c\uff0c\u90a3\u4e48\n\n$$f(S_1+S_2+S_3)-f(S_2+S_1+S_3)=f(S_1+S_2)-f(S_2+S_1)$$\n\n\u8bc1\u660e\uff1a\n\n\u56e0\u4e3a $S_1+S_2$ \u548c $S_2+S_1$ \u4e2d\u5404\u79cd\u5b57\u7b26\u7684\u6570\u91cf\u76f8\u7b49\uff0c\u800c\u8fde\u63a5\u4e0a $S_3$ \u540e\uff0c\u5b83\u4eec\u7684\u987a\u5e8f\u5bf9 $S_3$ \u7684\u53c2\u4e0e\u8ba1\u7b97\u6ca1\u6709\u5f71\u54cd\u3002\u6240\u4ee5\uff0c\u80fd\u5bf9\u6700\u7ec8\u7b54\u6848\u4ea7\u751f\u5f71\u54cd\u7684\uff0c\u53ea\u6709 $S_1+S_2$ \u548c $S_2+S_1$ \u7684\u5927\u5c0f\u5173\u7cfb\u3002\n\n\u6240\u4ee5\uff0c\u5bf9\u4e8e\u6bcf\u4e24\u4e2a\u76f8\u90bb\u7684\u5b57\u7b26\u4e32 $S_1$ \u548c $S_2$\uff08\u53ef\u4ee5\u7528\u7c7b\u4f3c\u5192\u6ce1\u6392\u5e8f\u7684\u601d\u60f3\u53bb\u7406\u89e3\uff09\uff0c\u5982\u679c $f(S_1+S_2)<f(S_2+S_1)$\uff0c\u5c31\u53ef\u4ee5\u4ea4\u6362\u5b83\u4eec\u2014\u2014\u80fd\u4f7f\u7b54\u6848\u589e\u52a0\u4e14\u65e0\u540e\u6548\u6027\u3002\n\n\u53ef\u4ee5\u7528 `std::sort` \u4e2d\u7684 `cmp` \u51fd\u6570\u4f5c\u5de5\u5177\u4eba\uff0c\u6309\u4e0a\u9762\u7684\u65b9\u6cd5\u6392\u4e2a\u5e8f\u518d\u8fde\u63a5\u8d77\u6765\u5c31\u597d\u4e86\u3002\n\n\u653e\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nint f(string s){\n    int p=0,c=0;\n    for(auto &i:s){\n        if(i=='X')p++;\n        else c+=p*(i-48);\n    }\n    return c;\n}\nbool cmp(string s1,string s2){return f(s1+s2)>f(s2+s1);}\n// \u7528\u8fde\u63a5\u540e\u7684\u6743\u503c\u505a\u5224\u65ad\nsigned main(){\n    int n; string g; cin>>n;\n    vector<string> s(n);\n    for(auto &i:s)cin>>i;\n    sort(s.begin(),s.end(),cmp);\n    for(auto &i:s)g+=i; // \u8fde\u63a5\n    cout<<f(g)<<endl; // \u8ba1\u7b97\u6700\u7ec8\u7b54\u6848\n    return 0;\n}\n```",
        "postTime": 1666959328,
        "uid": 556366,
        "name": "zyc212303",
        "ccfLevel": 5,
        "title": "[ABC268F] Best Concatenation \u9898\u89e3"
    },
    {
        "content": "#  [[ABC268F] Best Concatenation](https://www.luogu.com.cn/problem/AT_abc268_f) Solution\n\n[TOC]\n\n## [\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u6233\u6b64\u8fdb\u5165](http://blog.tsawke.com?t=ABC268F)\n\n## \u9898\u9762\n\n\u7ed9\u5b9a $ n $ \u4e2a\u7531 `X` \u548c\u6570\u5b57\u6784\u6210\u7684\u5b57\u7b26\u4e32\uff0c\u4f60\u9700\u8981\u5bf9\u5176\u8fdb\u884c\u6392\u5217\u5e76\u62fc\u63a5\u6210\u65b0\u7684\u5b57\u7b26\u4e32 $ T $ \u4ee5\u6700\u5927\u5316\u5176\u5206\u6570\u3002\u5b9a\u4e49\u5176\u5206\u6570\u4e3a\u5bf9\u4e8e\u5b57\u7b26\u4e32\u4e2d\u6bcf\u4e00\u4e2a\u6570\u5b57\uff0c\u4f7f\u6570\u5b57\u5bf9\u5e94\u7684\u6570\u503c\u4e58\u4e0a\u5176\u4e4b\u524d `X` \u7684\u6570\u91cf\uff0c\u5e76\u6c42\u548c\u3002\u8f93\u51fa\u5206\u6570\u6700\u5927\u503c\u3002\n\n## Solution\n\n\u9996\u5148\u4e00\u4e2a\u663e\u7136\u7684\u7ed3\u8bba\u5373\u4e3a\u5bf9\u4e8e\u9898\u76ee\u5b9a\u4e49\u7684\u5206\u6570\uff0c\u540c\u4e00\u5b57\u7b26\u4e32\u5185\u90e8\u7684 `X` \u5bf9\u5176\u6570\u5b57\u7684\u8d21\u732e\uff0c\u4e0e\u5b57\u7b26\u4e32\u5728\u6392\u5217\u4e2d\u7684\u987a\u5e8f\u65e0\u5173\u3002\n\n\u4e8e\u662f\u6211\u4eec\u8003\u8651\u5176\u5b83\u5b57\u7b26\u4e32\u7684 `X` \u5bf9\u5b57\u7b26\u4e32\u6570\u5b57\u7684\u8d21\u732e\uff0c\u6211\u4eec\u8003\u8651\u5b57\u7b26\u4e32 $ S_i, S_j $\uff0c\u4ee4 $ cnt_i $ \u8868\u793a\u5b57\u7b26\u4e32 $ i $ \u4e2d `X` \u7684\u6570\u76ee\uff0c\u4ee4 $ sum_i $ \u8868\u793a\u5b57\u7b26\u4e32 $ i $ \u4e2d\u6240\u6709\u6570\u5b57\u6570\u503c\u4e4b\u548c\u3002\u663e\u7136\u82e5 $ S_i $ \u5728 $ S_j $ \u4e4b\u524d\uff0c$ j $ \u5bf9 $ i $ \u65e0\u8d21\u732e\uff0c$ i $ \u5bf9 $ j $ \u7684\u8d21\u732e\u4e3a $ cnt_i \\times sum_j $\u3002\u53cd\u4e4b\u5219\u4e3a $ cnt_j \\times sum_i $\u3002\n\n\u5219\u4e0d\u96be\u60f3\u5230\u82e5\u6211\u4eec\u8981\u5c06 $ S_i $ \u653e\u5728 $ S_j $ \u4e4b\u524d\uff0c\u90a3\u4e48\u4e00\u5b9a\u6709\u8fd9\u6837\u7684\u8d21\u732e\u66f4\u5927\u4e00\u4e9b\uff0c\u5373 $ cnt_i \\times sum_j \\gt cnt_j \\times sum_i $\u3002\n\n\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u8003\u8651\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u6392\u5e8f\uff0c\u6bd4\u8f83\u89c4\u5219\u5219\u6309\u7167\u521a\u624d\u7684\u5f0f\u5b50\u8dd1\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u540c\u65f6\u6211\u4eec\u4e5f\u53ef\u4ee5\u4ece\u610f\u4e49\u4e0a\u611f\u6027\u7406\u89e3\uff0c\u663e\u7136\u53ea\u6709\u524d\u9762\u7684 `X` \u5bf9\u540e\u9762\u7684\u6570\u5b57\u4ea7\u751f\u8d21\u732e\uff0c\u6240\u4ee5\u6211\u4eec\u5c06 `X` \u66f4\u591a\u6570\u5b57\u66f4\u5c11\u7684\u653e\u5728\u524d\u9762\uff0c\u5219 $ \\dfrac{cnt_i}{sum_i} $ \u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u7c7b\u4f3c\u4f30\u4ef7\u51fd\u6570\u7684\u4f5c\u7528\u8fdb\u884c\u6392\u5e8f\uff0c\u8f6c\u6362\u4e00\u4e0b\u5373\u6211\u4eec\u521a\u624d\u8bc1\u660e\u7684\u4e0a\u5f0f\u3002\n\n\u540c\u65f6\u5bf9\u4e8e\u6b64\u8d2a\u5fc3\u7684\u8bc1\u660e\uff0c\u8003\u8651\u82e5\u6ee1\u8db3\u504f\u5e8f\u5173\u7cfb $ S_1, S_2 $ \u548c $ S_2, S_3 $\uff0c\u90a3\u4e48\u4e00\u5b9a\u4e5f\u6709 $ cnt_1 \\times sum_3 \\gt cnt_3 \\times sum_1 $\uff0c\u6240\u4ee5\u4e5f\u6709\u504f\u5e8f\u5173\u7cfb $ S_1, S_3 $\uff0c\u4e5f\u5c31\u662f $ S_1, S_2, S_3 $\uff0c\u6269\u5c55\u5230\u6574\u4e2a\u5e8f\u5217\u4f9d\u7136\u6ee1\u8db3\u3002\n\n\u5b58\u5728\u53cc\u500d\u7ecf\u9a8c [LG-P1080 [NOIP2012 \u63d0\u9ad8\u7ec4] \u56fd\u738b\u6e38\u620f](https://www.luogu.com.cn/problem/P1080)\u3002\n\n## Code\n\n```cpp\n#define _USE_MATH_DEFINES\n#include <bits/stdc++.h>\n\n#define PI M_PI\n#define E M_E\n#define npt nullptr\n#define SON i->to\n#define OPNEW void* operator new(size_t)\n#define ROPNEW void* Edge::operator new(size_t){static Edge* P = ed; return P++;}\n\nusing namespace std;\n\nmt19937 rnd(random_device{}());\nint rndd(int l, int r){return rnd() % (r - l + 1) + l;}\nbool rnddd(int x){return rndd(1, 100) <= x;}\n\ntypedef unsigned int uint;\ntypedef unsigned long long unll;\ntypedef long long ll;\ntypedef long double ld;\n\ntemplate < typename T = int >\ninline T read(void);\n\nint N;\nstruct Node{string S; int sum, cnt;}d[210000];\nll ans(0);\n\nint main(){\n    N = read();\n    for(int i = 1; i <= N; ++i){\n        cin >> d[i].S;\n        for(auto c : d[i].S)\n            if(c == 'X')++d[i].cnt;\n            else d[i].sum += c - '0';\n    }sort(d + 1, d + N + 1, [](const Node &a, const Node &b)->bool{return (ll)a.sum * b.cnt < (ll)b.sum * a.cnt;});\n    ll cur(0);\n    for(int i = 1; i <= N; ++i)\n        for(auto c : d[i].S)\n            if(c == 'X')++cur;\n            else ans += cur * (c - '0');\n    printf(\"%lld\\n\", ans);\n    fprintf(stderr, \"Time: %.6lf\\n\", (double)clock() / CLOCKS_PER_SEC);\n    return 0;\n}\n\ntemplate < typename T >\ninline T read(void){\n    T ret(0);\n    int flag(1);\n    char c = getchar();\n    while(c != '-' && !isdigit(c))c = getchar();\n    if(c == '-')flag = -1, c = getchar();\n    while(isdigit(c)){\n        ret *= 10;\n        ret += int(c - '0');\n        c = getchar();\n    }\n    ret *= flag;\n    return ret;\n}\n```\n\n## UPD\n\nupdate-2023_01_18 \u521d\u7a3f",
        "postTime": 1674037922,
        "uid": 362938,
        "name": "Tsawke",
        "ccfLevel": 6,
        "title": "[ABC268F] Best Concatenation \u9898\u89e3"
    },
    {
        "content": "\u6ce8\u610f\u5230\u5bf9\u4e8e\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5176\u5185\u90e8\u7684\u5f97\u5206\u4e0d\u56e0\u6392\u5e8f\u800c\u6539\u53d8\uff0c\u6240\u4ee5\u63d0\u524d\u7b97\u51fa\uff0c\u63a5\u4e0b\u6765\u53ea\u9700\u8981\u770b\u5b57\u7b26\u4e32\u4e4b\u95f4\u7684\u5f97\u5206\u4e86\u3002\n\n\u6211\u4eec\u8003\u8651\u8d2a\u5fc3\u89e3\u51b3\u95ee\u9898\uff0c\u5982\u4f55\u6392\u5e8f\uff1f\n\n\u5047\u8bbe\u5f53\u524d\u662f\u6700\u4f18\u6392\u5e8f\uff0c\u6211\u4eec\u5c06\u67d0\u4e24\u4e2a\u76f8\u90bb\u7684\u5b57\u7b26\u4e32 $i$ \u548c $i+1$ \u8c03\u6362\u4f4d\u7f6e\uff0c\u663e\u7136\u4e0d\u4f1a\u5e72\u6270\u5230\u4e0e\u5176\u4ed6\u5b57\u7b26\u4e32\u4e4b\u95f4\u7684\u5f97\u5206\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u76ee\u5149\u805a\u7126\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u3002\n\n\u6700\u4f18\u6392\u5e8f\u7684\u5f97\u5206\u5e94\u8be5\u66f4\u9ad8\uff0c\u6240\u4ee5\u5e94\u8be5\u6709\uff1a\n\n$$\na_ib_{i+1} \\leq b_ia_{i+1}\n$$\n\n\u89e3\u91ca\u4ee5\u4e0b\uff0c$b_i$ \u8868\u793a\u7b2c $i$ \u4e2a\u5b57\u7b26\u4e32\u4e2d X \u7684\u6570\u91cf\uff0c $a_i$ \u8868\u793a\u7b2c $i$ \u4e2a\u5b57\u7b26\u4e32\u7684\u6570\u5b57\u4e4b\u548c\u3002\n\n\u5de6\u8fb9\u662f\u8c03\u6362\u540e\u7684\u5f97\u5206\uff0c\u53f3\u8fb9\u662f\u8c03\u6362\u524d\u7684\u5f97\u5206\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5f97\u5230\u4e86\u5b57\u7b26\u4e32\u7684\u6392\u5e8f\u65b9\u5f0f\u3002\n\n\u7136\u540e\u8ba1\u7b97\u5373\u53ef\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node\n{\n    long long a,b;\n}a[200005];\nlong long n,ans,t;\nstring s;\nbool cmp(node x,node y)\n{\n    return x.a*y.b<x.b*y.a;\n}\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>s;\n        for(auto j:s)\n        {\n            if(j=='X')\n            {\n                a[i].b++;\n            }\n            else\n            {\n                a[i].a+=j-'0';\n                ans+=a[i].b*(j-'0');\n            }\n        }\n    }\n    sort(a+1,a+n+1,cmp);\n    for(int i=1;i<=n;i++)\n    {\n        ans+=t*a[i].a;\n        t+=a[i].b;\n    }\n    cout<<ans<<endl;\n}\n```",
        "postTime": 1666356404,
        "uid": 501947,
        "name": "DengDuck",
        "ccfLevel": 6,
        "title": "ABC268F Best Concatenation \u9898\u89e3"
    }
]