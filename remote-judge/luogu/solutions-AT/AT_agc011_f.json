[
    {
        "content": "\u795e\u4ed9\u601d\u7ef4\u9898\u8fd8\u662f\u8981\u5199\u70b9\u4e1c\u897f\u624d\u597d\u3002\n\n## \u5efa\u7acb\u6570\u5b66\u6a21\u578b\n\n\u8fd9\u79cd\u5f88\u62bd\u8c61\u7684\u4e1c\u897f\u6ca1\u6709\u5f0f\u5b50\u63cf\u8ff0\u4e00\u4e0b\u663e\u7136\u662f\u4e0b\u4e0d\u4e86\u624b\u7684\u3002\n\n\u56e0\u4e3a\u4efb\u4f55\u4f4d\u7f6e\u90fd\u4ee5$k$\u4e3a\u5468\u671f\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u7528\u5173\u5fc3\u4e00\u4e2a\u5468\u671f\uff0c\u4e5f\u5c31\u662f\u4ee5\u4e0b\u6570\u90fd\u5728\u819c$k$\u610f\u4e49\u4e0b\u3002\n\n\u8bbe$a_i$\u8868\u793a$i$\u53f7\u533a\u95f4\u957f\u5ea6\uff1b\n\n\u5bf9\u4e8e\u4e0a\u884c\u5217\u8f66\uff08$0\\rightarrow n$\uff09\u8bbe$p_0$\u8868\u793a\u51fa\u53d1\u65f6\u523b\uff0c$p_i(i\\ge1)$\u8868\u793a\u5728$i$\u7ad9\u505c\u9760\u65f6\u95f4\uff1b\n\n\u5bf9\u4e8e\u4e0b\u884c\u5217\u8f66\uff08$0\\leftarrow n$\uff09\u8bbe$-q_0$\u8868\u793a\u5230\u7ad9\u65f6\u523b\uff0c$q_i(i\\ge1)$\u8868\u793a\u5728$i$\u7ad9\u505c\u9760\u65f6\u95f4\uff1b\n\n\uff08\u8f6c\u5316\u6210$-q_0$\u662f\u4e3a\u4e86\u540e\u9762\u8868\u793a\u65b9\u4fbf\uff09\n\n\u7528\u5927\u5199\u5b57\u6bcd$A,P,Q$\u5206\u522b\u8868\u793a\u5b83\u4eec\u7684\u524d\u7f00\u548c\u3002\n\n\u5982\u679c\u67d0\u533a\u95f4$b_i=1$\uff0c\u5219\u4e24\u5217\u8f66\u7684\u884c\u9a76\u65f6\u95f4\u533a\u95f4\u4e0d\u4ea4\uff0c\u5373\n$$(P_{i-1}+A_{i-1},P_{i-1}+A_i)\\cap(-Q_{i-1}-A_i,-Q_{i-1}-A_{i-1})=\\emptyset$$\n\n\u533a\u95f4\u4e0d\u4ea4\u5373\u7aef\u70b9\u4e0d\u88ab\u5305\u542b\uff0c\u53ef\u4ee5\u5217\u51fa\u4e0d\u7b49\u5f0f\uff08\u88ab\u53d6\u6a21\u4e86\u6240\u4ee5\u770b\u7740\u6bd4\u8f83\u5947\u602a\uff09\n$$\\begin{cases}P_{i-1}+A_i\\le-Q_{i-1}-A_i\\\\P_{i-1}+A_{i-1}\\ge-Q_{i-1}-A_{i-1}\\end{cases}$$\n\u8bb0$x=P_{i-1}+Q_{i-1}$\uff0c\u79fb\u9879\uff0c\u89e3\u5f97$x\\in[-2A_{i-1},-2A_i]$\n\n\u56e0\u4e3a$P,Q$\u662f\u9012\u589e\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u95ee\u9898\u53d8\u6210\u4e86\uff1a\n\n\u6709\u82e5\u5e72\u4e2a\u9650\u5236\u533a\u95f4$[l_i,r_i]$\uff0c\u4f60\u624b\u5934\u6709\u4e00\u4e2a\u6570$x$\uff0c\u521d\u503c\u4efb\u9009\uff0c\u6bcf\u6b21\u53ef\u4ee5\u52a0\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u4f7f\u5b83\u843d\u5728\u533a\u95f4\u5185\uff0c\u6c42\u6700\u5c11\u603b\u5171\u52a0\u591a\u5c11\u80fd\u6ee1\u8db3\u9650\u5236\u3002\n\n## \u4f18\u5316\u6c42\u89e3\n\n\u8003\u8651\u8fd9\u6837\u4e00\u4e2a\u8d2a\u5fc3\u7684\u51b3\u7b56\u8fc7\u7a0b\uff1a\n\n\u5047\u8bbe\u6211\u4eec\u77e5\u9053\u5f53\u524d\u7684$x$\uff0c\u6211\u4eec\u9700\u8981\u7edf\u8ba1\u5b83\u6700\u5c11\u603b\u5171\u88ab\u52a0\u4e86\u591a\u5c11\u3002\u6211\u4eec\u770b\u4e0a\u4e00\u4e2a\u9650\u5236\u533a\u95f4\u3002\n\n\u5982\u679c$x$\u88ab\u4e0a\u4e00\u4e2a\u533a\u95f4\u5305\u542b\uff0c\u90a3\u4e48\u6211\u4eec\u770b\u4e0a\u4e0a\u4e2a\u533a\u95f4\u3002\n\n\u5982\u679c$x$\u6ca1\u6709\u88ab\u4e0a\u4e00\u4e2a\u533a\u95f4\u5305\u542b\uff0c\u5219$x$\u4ece\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u52a0\u8fc7\u6765\u7684\u4ee3\u4ef7\u6700\u5c0f\uff0c\u6211\u4eec\u7ee7\u7eed\u5bf9\u4e0a\u4e0a\u4e2a\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u8fdb\u884c\u51b3\u7b56\u3002\n\n\u53d1\u73b0\u6211\u4eec\u51b3\u7b56\u7684\u4e2d\u95f4\u72b6\u6001\u53ea\u548c\u533a\u95f4\u53f3\u7aef\u70b9\u6709\u5173\uff0c\u6240\u4ee5\u6211\u4eec\u8bbe$f_i$\u8868\u793a\u51b3\u7b56\u5230\u7b2c$i$\u4e2a\u533a\u95f4\u65f6\uff0c$x=r_i$\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\n\n\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u503c\u7ef4\u62a4\u6700\u540e\u4e00\u4e2a\u6ca1\u6709\u5305\u542b\u8fd9\u4e2a\u503c\u7684\u533a\u95f4\u7f16\u53f7\uff0c\u6bcf\u6b21\u53d6\u51fa$r_i$\u5bf9\u5e94\u7684\u7f16\u53f7\uff08\u8bb0\u4e3a$j$\uff09\uff0c\u7528$f_j+r_i-r_j$\u66f4\u65b0$f_i$\uff0c\u5e76\u5c06$[r_i+1,l_i-1]$\u7684\u7f16\u53f7\u5168\u90e8\u8bbe\u4e3a$i$\u3002\n\n\u6700\u540e\u628a\u6240\u6709\u7684$l_i$\u4e22\u8fdb\u53bb\u67e5\u4e00\u4e0b\u53d6\u4e2a$\\min$\u52a0\u4e0a$2A_n$\u5c31\u662f\u7b54\u6848\u3002\n\n\u56e0\u4e3a\u662f\u533a\u95f4\u8bbe\u7f6e\u6240\u4ee5\u53ef\u4ee5\u73c2\u6735\u8389\u6811\u7ef4\u62a4\uff0c\u4e0d\u7528\u79bb\u6563\u5316\uff0c\u56e0\u4e3a\u968f\u673a\u6570\u636e\u7684\u7f16\u53f7\u6bb5\u6570\u4e0d\u4f1a\u592a\u5927\u6240\u4ee5\u5e73\u5747\u60c5\u51b5\u4e0b\u8dd1\u5f97\u6bd4\u7ebf\u6bb5\u6811\u8fd8\u5feb\u3002\n\n\u7279\u5224\uff1a\u5982\u679c$2a_i>k$\u90a3\u4e48`puts(\"-1\")`\n```cpp\n#include<bits/stdc++.h>\n#define LL long long\n#define R register int\n#define G if(++ip==ie)if(fread(ip=buf,1,SZ,stdin))\nusing namespace std;\nconst int SZ=1<<19,N=1e5+9;\nchar buf[SZ],*ie=buf+SZ,*ip=ie-1;\ninline int in(){\n\tG;while(*ip<'-')G;\n\tR x=*ip&15;G;\n\twhile(*ip>'-'){x*=10;x+=*ip&15;G;}\n\treturn x;\n}\nint k,l[N],r[N];LL f[N];bool b[N];\nstruct Node{\n\tint r;mutable int v;\n\tinline Node(R a,R b=0):r(a),v(b){}\n\tinline bool operator<(const Node&a)const{return r<a.r;}\n};\ntypedef set<Node>::iterator IT;\nset<Node>s;\ninline IT Split(R p){\n\tIT i=s.lower_bound(Node(p));\n\treturn i->r!=p?s.insert(Node(p,i->v)).first:i;\n}\ninline void Set(R l,R r,R v){\n\tif(l>r)return;\n\tIT il=Split(l-1),ir=Split(r);\n\tir->v=v;s.erase(++il,ir);\n}\ninline LL Calc(R p){\n\tR j=s.lower_bound(Node(p))->v;\n\treturn j?f[j]+(p-r[j]+k)%k:0;\n}\nint main(){\n\tR n=in();LL k=::k=in(),a=0,a1=0,ans=1e18;\n\ts.insert(Node(-1));\n\ts.insert(Node(k-1));\n\tfor(R i=1;i<=n;++i){\n\t\ta1=a;a+=in();\n\t\tif(!(b[i]=in()&1))continue;\n\t\tif(2*(a-a1)>k)return puts(\"-1\"),0;\n\t\tl[i]=(-2*a1%k+k)%k;r[i]=(-2*a%k+k)%k;\n\t\tf[i]=Calc(r[i]);\n\t\tif(l[i]>r[i])Set(r[i]+1,l[i]-1,i);\n\t\telse Set(0,l[i]-1,i),Set(r[i]+1,k-1,i);\n\t}\n\tfor(R i=1;i<=n;++i)\n\t\tif(b[i])ans=min(ans,Calc(l[i]));\n\tcout<<ans+2*a<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1549883525,
        "uid": 61325,
        "name": "FlashHu",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 AT2342 \u3010Train Service Planning\u3011"
    },
    {
        "content": "# \u5e7f\u544a\n\n[\u849f\u84bb\u306eBlog,\u6b64\u5904\u98df\u7528\u4f53\u9a8c\u66f4\u4f73](https://www.cnblogs.com/dedicatus545/p/9646722.html)\n\n# \u601d\u8def\n\n## \u6a21\u610f\u4e49\n\n\u8fd9\u9898\u771ftm\u6709\u610f\u601d\n\u6211\u4e0a\u4e0b\u697c\u68af\u4e86\u534a\u5929\u505a\u51fa\u6765\u7684qwq\n\n\u9996\u5148\uff0c\u8003\u8651\u5230\u6bcfK\u5206\u949f\u6709\u4e00\u8f86\u8f66\uff0c\u90a3\u4e48\u53ef\u4ee5\u628a\u6240\u6709\u7684\u64cd\u4f5c\u90fd\u653e\u5230\u6a21$K$\u610f\u4e49\u4e0b\u8fdb\u884c\n\n\u8fd9\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u4e24\u8fb9\u7684\u4e24\u8f86\u8f66\u5c31\u597d\u4e86\u3002\n\n#### \u5b9a\u4e49\u4e00\u4e9b\u79f0\u547c\uff1a\n\n**\u4e0a\u884c\uff1a**\u4ece$0$~$n$\u7684\u8f66\n\n**\u4e0b\u884c\uff1a**\u4ece$n$~$0$\u7684\u8f66\n\n#### \u5b9a\u4e49\u6570\u7ec4\uff1a\n\n$p[i](i=0...n)$\u8868\u793a\u4e0a\u884c\u8f66\u5728\u7ad9\u53f0$i$\u7684\u505c\u8f66\u65f6\u957f\n\n$q[i](i=0...n)$\u8868\u793a\u4e0b\u884c\u8f66\u5728\u7ad9\u53f0$i$\u7684\u505c\u8f66\u65f6\u957f\n\n$a[i](i=0...n-1)$\u8868\u793a\u7b2c$i$\u7684\u7ad9\u53f0\u4e0e\u7b2c$i+1$\u4e2a\u7ad9\u53f0\u4e2d\u95f4\u7684\u884c\u9a76\u65f6\u95f4\uff08\u4e5f\u5c31\u662f\u9898\u76ee\u7ed9\u5b9a\u7684\u6570\u7ec4\uff09\n\n\u6211\u4eec\u518d\u5b9a\u4e49$S(a,i)$\u8868\u793a\u6570\u7ec4$a$\u4ece\u96f6\u5f00\u59cb\u5230$i$\u7684\u524d\u7f00\u548c\u51fd\u6570\uff0c\u5373\uff1a\n\n$S(a,i)=\\sum_{j=0}^i a[j]$\n\n## \u533a\u95f4\u4e0d\u4ea4\n\n\u8003\u8651\u4e24\u8f86\u8f66\u5408\u6cd5\u7684\u60c5\u51b5\u3002\u663e\u7136\uff0c\u4ed6\u4eec\u4fe9\u5728\u6bcf\u4e00\u6bb5\u94c1\u8def\u4e0a\u884c\u9a76\u7684\u65f6\u95f4\u662f\u4e00\u4e2a\u533a\u95f4\u3002\u53cc\u5411\u94c1\u8def\u4e0d\u7528\u7ba1\uff0c\u4e00\u5b9a\u5408\u6cd5\uff0c\u6211\u4eec\u53d1\u73b0\u5982\u679c\u5355\u5411\u94c1\u8def\u4e0a\u5408\u6cd5\uff0c\u90a3\u4e48\u4e0a\u4e0b\u884c\u7684\u8f66\u5728\u67d0\u4e00\u6bb5\u5355\u5411\u94c1\u8def\u4e0a\u884c\u9a76\u7684\u533a\u95f4\u80af\u5b9a\u4e0d\u76f8\u4ea4\n\n\u6211\u4eec\u628a\u4e0a\u4e0b\u884c\u8f66\u8f86\u5728\u94c1\u8def$k$\u4e0a\u7684\u884c\u9a76\u65f6\u95f4\u533a\u95f4\u5199\u51fa\u6765\uff1a\n\n**\u4e0a\u884c\uff1a**$(S(a,i-1)+S(p,i),S(a,i)+S(p,i))$\n\n**\u4e0b\u884c\uff1a**$(-S(a,i-1)-S(q,i),-S(a,i)-S(q,i))$\n\n\u6ce8\u610f\u8fd9\u91cc\u7684\u4e0b\u884c\u90e8\u5206\u662f\u4e00\u4e2a\u5f88\u5de7\u5999\u7684\u8f6c\u5316\uff1a\u56e0\u4e3a\u6211\u4eec\u5728\u6a21\u610f\u4e49\u4e0b\u8fd0\u7b97\uff0c\u6240\u4ee5\u4e0b\u884c\u90e8\u5206\u672c\u6765\u5e94\u8be5\u662f\u7528\u4e24\u4e2a\u540e\u7f00\u548c\u52a0\u5728\u4e00\u8d77\u7684\uff0c\u4f46\u662f\u8fd9\u6837\u4e0a\u4e0b\u884c\u5f0f\u5b50\u4e0d\u7edf\u4e00\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u628a\u540e\u7f00\u548c\u770b\u505a\u603b\u548c\u51cf\u6389\u524d\u7f00\u548c\uff0c\u90a3\u4e48\u603b\u548c\u53ef\u4ee5\u8c03\u6574\u4e3a$K$\u7684\u500d\u6570\uff0c\u5c31\u6ca1\u6389\u4e86\uff0c\u6240\u4ee5\u5c31\u662f\u8d1f\u7684\u524d\u7f00\u548c\n\n\u8fd9\u4e24\u6bb5\u533a\u95f4\u5982\u679c\u4e0d\u4ea4\uff0c\u90a3\u4e48\u663e\u7136**\u4efb\u610f\u4e00\u4e2a\u7aef\u70b9\u4e0d\u5728\u53e6\u5916\u4e00\u4e2a\u533a\u95f4\u91cc\u9762**\n\n\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u6279\u4e0d\u7b49\u5f0f\uff0c\u5927\u6982\u7c7b\u4f3c\u4e8e\u8fd9\u4e2a\u5f62\u5f0f\uff1a\n\n$-2S(a,i-1)>S(p,i)+S(q,i)>-S(a,i-1)-S(a,i)$\n\n\u6700\u7ec8\u5316\u4e00\u4e0b\uff0c\u53ef\u4ee5\u5f97\u5230\u8fd9\u4e2a\u7ed3\u8bba\uff1a\n\n$S(p,i)+S(q,i) \\notin (-2\\ast S(a,i),-2\\ast S(a,i-1))$\n\n\u53ef\u4ee5\u770b\u5230\u5bf9\u4e8e\u6bcf\u4e2a$i$\uff0c**\u4e0d\u53ef\u9009\u7684\u533a\u95f4\u662f\u56fa\u5b9a\u7684**\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u5728\u6a21$K$\u7684\u610f\u4e49\u4e0b\uff0c\u53f3\u8fb9\u8fd9\u4e2a\u533a\u95f4\u7684\u8865\u96c6\uff0c\u6211\u4eec\u8bbe\u5b83\u4e3a$[L[i],R[i]]$\n\n$S(p,i)+S(q,i) \\in [L[i],R[i]]$\n\n## \u95ee\u9898\u53d8\u5316\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u672c\u9898\u7684\u7b54\u6848\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u6700\u5c0f\u5316\u7684$S(p,n)+S(q,n)+2\\ast S(a,n)$\uff0c\u7b49\u4ef7\u4e8e\u6700\u5c0f\u5316$S(p,n)+S(q,n)$\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u95ee\u9898\u8f6c\u5316\u4e3a\uff1a\n\n**\u7ed9\u5b9a$n$\u4e2a\u533a\u95f4\uff0c\u4efb\u9009\u8d77\u70b9\uff0c\u8d70$n$\u6b65\uff0c\u7b2c$i$\u6b65\u9700\u8981\u843d\u5728\u533a\u95f4$i$\u4e2d\uff0c\u6c42\u6700\u5c0f\u603b\u8def\u5f84\u957f\u5ea6**\n\n\u6ce8\u610f\u8fd9\u91cc\u7684\u201c\u8d70\u201d\u5b9e\u9645\u4e0a\uff0c\u4ece\u4e00\u4e2a\u5927\u7684\u8d70\u5411\u5c0f\u7684\uff0c\u662f\u8981\u8d70\u5230$K$\uff0c\u7136\u540e\u4ece$0$\u518d\u51fa\u6765\uff08\u56e0\u4e3a\u6211\u4eec\u662f\u6a21$K$\u610f\u4e49\u4e0b\u7684\uff09\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u53d8\u6210\u4e00\u4e2a$DP$\u95ee\u9898\u4e86\n\n## \u7ebf\u6bb5\u6811\u4f18\u5316$DP$\n\n\u6211\u4eec\u73b0\u5728\u8003\u8651\u65b0\u7684\u8fd9\u4e2a\u95ee\u9898\uff0c\u663e\u7136\u53ef\u4ee5\u4f7f\u7528$dp$\u6765\u505a\n\n\u9996\u5148\u6709\u4e00\u4e2a\u8d2a\u5fc3\u7ed3\u8bba\uff1a\u5982\u679c\u8d77\u70b9\u5df2\u7ecf\u786e\u5b9a\u4e86\uff0c\u90a3\u4e48\u6bcf\u6b21\u9700\u8981\u8d70\u7684\u65f6\u5019\uff0c\u8d70\u5230\u4e0b\u4e00\u4e2a\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u80af\u5b9a\u6700\u4f18\uff0c\u8bc1\u660e\u663e\u7136\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5148\u9884\u5904\u7406\u51fa\u6765\u5728\u6bcf\u4e2a\u8d77\u70b9\u51fa\u53d1\u540e\uff0c\u4e00\u76f4\u8d70\u5de6\u7aef\u70b9\u76f4\u5230\u8d70\u5b8c\uff0c\u6211\u9700\u8981\u7684\u6700\u5c0f\u8ddd\u79bb\n\n### \u9884\u5904\u7406\n\n\u5b9a\u4e49$dp[i]$\u8868\u793a\u5bf9\u4e8e\u533a\u95f4$[L[i],R[i]]$\u7684\u5de6\u7aef\u70b9$L[i]$\u800c\u8a00\uff0c\u4e00\u76f4\u8d70\u5de6\u7aef\u70b9\u5230$n$\u7684\u6700\u77ed\u8def\u5f84\n\n\u90a3\u4e48\u6211\u4eec\u5012\u7740\u4ece$n$\u5230$1$\u63a8\u8fd9\u4e2a$dp$\n\n\u6bcf\u63a8\u5b8c\u4e00\u4e2a$dp[i]$\uff0c\u6211\u4eec\u5c31\u628a\u533a\u95f4$[L[i],R[i]]$\u7684\u8865\u96c6\u5728\u7ebf\u6bb5\u6811\u4e0a\u7684\u503c\uff0c\u8986\u76d6\u4e3a$i$\n\n\u7136\u540e\u63a8$dp[i]$\u65f6\uff0c\u6bcf\u6b21\u67e5\u8be2$L[i]$\u4f4d\u7f6e\u7684\u7ebf\u6bb5\u6811\u4e0a\u7684\u503c\uff0c\u8bbe\u8fd9\u4e2a\u503c\u662f$j$\n\n\u90a3\u4e48\u663e\u7136\uff0c**\u7f16\u53f7\u5728\u533a\u95f4$[i,j-1]$\u4e2d\u7684\u6240\u6709\u533a\u95f4\u90fd\u8986\u76d6\u4e86$L[i]$\u8fd9\u4e2a\u70b9**\n\n\u6240\u4ee5\u76f4\u63a5\u5728\u8fd9\u91cc\u4e0d\u52a8\uff0c\u5c31\u53ef\u4ee5\u8d70\u5b8c\u8fd9\u4e9b\u533a\u95f4\u4e86\n\n\u90a3\u4e48\u6211\u4eec\u7528$dp[j]+dis(L[i],L[j])$\u6765\u66f4\u65b0$dp[i]$\n\n\u7136\u540e\u518d\u8986\u76d6\u533a\u95f4\uff0c\u5c31\u5b8c\u6210\u4e86$dp$\u9884\u5904\u7406\u8fc7\u7a0b\n\n### \u7edf\u8ba1\u7b54\u6848\uff01\n\n\u6700\u540e\u4e00\u6b65\uff0c\u6211\u4eec\u679a\u4e3e\u6240\u6709\u51fa\u73b0\u7684$L[i]$\u548c$R[i]$\uff0c\u5e76\u628a\u5b83\u4eec\u4f5c\u4e3a\u8d77\u70b9\uff0c\u6c42\u51fa\u7b54\u6848\u3002\n\n\u663e\u7136\u5982\u679c\u4e0d\u9009\u8fd9\u4e9b\u7aef\u70b9\u7684\u8bdd\uff0c\u7b54\u6848\u53ea\u4f1a\u66f4\u52a3\n\n\u7edf\u8ba1\u51fa\u7684\u7b54\u6848\uff0c\u5c31\u662f\u539f\u6765\u95ee\u9898\u4e2d\u7684$S(q,n)+$S(p,n)$\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u8981\u6700\u5c0f\u5316\u7684\u4e1c\u897f\n\n\u52a0\u4e0a$2S(a,n)$\u8f93\u51fa\u5373\u53ef\n\n### \u505a\u5b8c\u5566~\n\n# Code\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cassert>\n#define ll long long\nusing namespace std;\ninline ll read(){\n\u00a0\u00a0\u00a0\u00a0ll re=0,flag=1;char ch=getchar();\n\u00a0\u00a0\u00a0\u00a0while(ch>'9'||ch<'0'){\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if(ch=='-') flag=-1;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ch=getchar();\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0while(ch>='0'&&ch<='9') re=(re<<1)+(re<<3)+ch-'0',ch=getchar();\n\u00a0\u00a0\u00a0\u00a0return re*flag;\n}\nll n,K,cnt,a[200010],b[200010],tmp[500010],seg[500010],L[200010],R[200010],dp[200010],sum[200010];\nvoid push(ll num){\n\u00a0\u00a0\u00a0\u00a0if(!seg[num]) return;\n\u00a0\u00a0\u00a0\u00a0seg[num<<1]=seg[num<<1|1]=seg[num];\n\u00a0\u00a0\u00a0\u00a0seg[num]=0;\n}\nvoid change(ll l,ll r,ll ql,ll qr,ll num,ll val){\n\u00a0\u00a0\u00a0\u00a0if(ql>qr) return;\n\u00a0\u00a0\u00a0\u00a0if(l>=ql&&r<=qr){seg[num]=val;return;}\n\u00a0\u00a0\u00a0\u00a0push(num);\n\u00a0\u00a0\u00a0\u00a0ll mid=(l+r)>>1;\n\u00a0\u00a0\u00a0\u00a0if(mid>=ql) change(l,mid,ql,qr,num<<1,val);\n\u00a0\u00a0\u00a0\u00a0if(mid<qr) change(mid+1,r,ql,qr,num<<1|1,val);\n}\nll query(ll l,ll r,ll num,ll pos){\n\u00a0\u00a0\u00a0\u00a0if(l==r) return seg[num];\n\u00a0\u00a0\u00a0\u00a0push(num);\n\u00a0\u00a0\u00a0\u00a0ll mid=(l+r)>>1;\n\u00a0\u00a0\u00a0\u00a0if(mid>=pos) return query(l,mid,num<<1,pos);\n\u00a0\u00a0\u00a0\u00a0else return query(mid+1,r,num<<1|1,pos);\n}\nll ask(ll pos){\n\u00a0\u00a0\u00a0\u00a0ll choose=query(1,cnt,1,pos);\n\u00a0\u00a0\u00a0\u00a0if(!choose) return 0;\n\u00a0\u00a0\u00a0\u00a0return (dp[choose]+(tmp[L[choose]]-tmp[pos]+K)%K);\n}\nll erfen(ll val){\n\u00a0\u00a0\u00a0\u00a0ll l=1,r=cnt,mid;\n\u00a0\u00a0\u00a0\u00a0while(l<r){\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0mid=(l+r)>>1;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if(tmp[mid]>=val) r=mid;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0else l=mid+1;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0assert(val==tmp[l]);\n\u00a0\u00a0\u00a0\u00a0return l;\n}\nint main(){\n\u00a0\u00a0\u00a0\u00a0n=read();K=read();ll i;\n\u00a0\u00a0\u00a0\u00a0for(i=1;i<=n;i++) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0a[i]=read();b[i]=read();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0sum[i]=(sum[i-1]+a[i]);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if(b[i]==2) continue;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if(2*a[i]>K){\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0puts(\"-1\");return 0;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0for(i=n;i>=1;i--){\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if(b[i]==1){\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0L[i]=(-2ll*sum[i-1]%K+K)%K;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0R[i]=(-2ll*sum[i]%K+K)%K;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0else L[i]=0,R[i]=K-1;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0tmp[++cnt]=L[i],tmp[++cnt]=R[i];\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0sort(tmp+1,tmp+cnt+1);\n\u00a0\u00a0\u00a0\u00a0cnt=unique(tmp+1,tmp+cnt+1)-tmp-1;\n\u00a0\u00a0\u00a0\u00a0for(i=n;i>=1;i--){\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0L[i]=erfen(L[i]);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0R[i]=erfen(R[i]);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0dp[i]=ask(L[i]);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if(L[i]>R[i]) change(1,cnt,R[i]+1,L[i]-1,1,i);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0else change(1,cnt,1,L[i]-1,1,i),change(1,cnt,R[i]+1,cnt,1,i);\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0ll ans=dp[1];\n\u00a0\u00a0\u00a0\u00a0for(i=cnt;i>=1;i--) ans=min(ans,ask(i));\n\u00a0\u00a0\u00a0\u00a0printf(\"%lld\\n\",ans+sum[n]*2ll);\n}\n```",
        "postTime": 1536925725,
        "uid": 27753,
        "name": "Orion545",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 AT2342 \u3010Train Service Planning\u3011"
    },
    {
        "content": "### \u524d\u8a00\n\n\u60f3\u7761\u7740\u4e86.jpg\u3002\u9192\u4e86\u540e\u5c31\u5927\u6982\u4f1a\u4e86\u3002\n\n\u5f00\u59cb\u4ee5\u4e3a\u81ea\u5df1\u4f1a $O(n)$ \u505a\u6cd5\uff0c\u540e\u6765\u53d1\u73b0\u8bfb\u9519\u9898\u4e86\u2026\u2026\u4f46\u662f\u4e5f\u7b80\u5355\u3002\n\n### \u601d\u8def\n\n\u8003\u8651\u5230\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u5f62\u5982 $\\searrow\\rightarrow\\searrow\\rightarrow\\searrow\\rightarrow\\nearrow\\rightarrow\\nearrow\\rightarrow\\nearrow$ \u7684\u66f2\u7ebf\u6a2a\u5411\u8fde\u7eed\u5e73\u79fb\u65e0\u9650\u6b21\uff0c\u4f7f\u5f97\u5176\u5728\u67d0\u4e9b\u6bb5\u65e0\u4ea4\uff0c\u8981\u6c42\u6700\u5c0f\u5316\u6c34\u5e73\u8ddd\u79bb\uff08\u4e0d\u5305\u542b\u4e2d\u95f4\u7684\u6c34\u5e73\u6bb5\uff09\u3002\n\n\u6211\u4eec\u8003\u8651\u4ece\u4e0b\u5f80\u4e0a\u626b\u63cf\uff0c\u7136\u540e\u5bb9\u6613\u53d1\u73b0\uff0c\u6211\u4eec\u603b\u53ef\u4ee5\u5c06\u5de6\u534a\u9762\u7684 $\\rightarrow$ \u52a0\u5230\u53f3\u534a\u90e8\u5206\u53bb\uff0c\u4ece\u800c\u51cf\u5c11\u8ba8\u8bba\u3002\n\n\u8fd9\u6837\u6574\u4e2a\u7684\u5f62\u6001\u5c31\u53d8\u6210\u4e86 $\\searrow\\searrow\\searrow\\rightarrow\\nearrow\\rightarrow\\nearrow\\rightarrow\\nearrow$\u3002\n\n\u663e\u7136\u6bcf\u4e2a $\\rightarrow$ \u7684\u957f\u5ea6\u53ef\u4ee5\u4e0d\u8d85\u8fc7 $k-1$\u3002\n\n\u5728\u626b\u63cf\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u8ba1\u7b97\u51fa $\\rightarrow$ \u603b\u957f\u6a21 $k$ \u4e3a $0\\sim k-1$ \u65f6\u7684\u6700\u77ed\u603b\u957f\uff0c\u8bbe\u4e3a $g_t$\u3002\n\n\u5f53\u6b64\u6bb5\u5141\u8bb8\u53cc\u5411\u65f6\uff0c\u6211\u4eec\u603b\u662f\u4e0d\u59a8\u4ee4\u6b64 $\\rightarrow$ \u957f\u4e3a $0$\uff0c\u4e5f\u5373\u4e0d\u7528\u6539\u53d8\u3002\n\n\u5426\u5219\u4ec5\u53ef\u5355\u5411\uff0c\u5047\u8bbe\u524d\u9762\u90e8\u5206 $A$ \u603b\u548c\u4e3a $s$\uff0c\u5f53\u524d\u90e8\u5206 $A$ \u4e3a $a$\uff0c\u5219\u6709\n\n$$g_t'=\\begin{cases}+\\infty&(-a,0)\\cap(t+2s,t+2s+a)\\neq\\varnothing\\text{ \u5728\u6a21\u610f\u4e49\u4e0b}\\\\g_t&\\text{otherwise.}\\end{cases}$$\n\n$$g_t''=\\begin{cases}\\min_ss+g'_{(t+k-s)\\bmod k}&g'_t=+\\infty\\\\g'_t&\\text{otherwise.}\\end{cases}$$\n\n\u8003\u8651\u5230\u975e $+\\infty$ \u7684\u603b\u662f\u4e00\u6bb5\uff08\u6a21\u610f\u4e49\u4e0b\u7684\uff09\u533a\u95f4\uff0c\u6211\u4eec\u76f4\u63a5\u7ef4\u62a4\u6b64\u6bb5\u533a\u95f4\u662f\u600e\u6837\u7684\u5206\u6bb5\u51fd\u6570\u5373\u53ef\u3002\n\n\u6211\u4eec\u5148\u8ba1\u7b97\u51fa\u4e0d\u53d8\u7684 $t$\uff0c\u5bb9\u6613\u53d1\u73b0\uff0c\u5373\u4e3a $[-(2s\\bmod k),k-2a-(2s\\bmod k)]$\uff1b\u7279\u522b\u7684\uff0c\u5982\u679c $2a>k$\uff0c\u8bf4\u660e\u65e0\u89e3\u3002\n\n\u8003\u8651\u66b4\u529b\u7ef4\u62a4\u5206\u6bb5\u51fd\u6570\uff0c\u521d\u59cb $g_t=0$\u3002\n\n\u6bcf\u6b21\u64cd\u4f5c\u4e3a\u5355\u70b9\u67e5\u8be2\u3001\u533a\u95f4\u4fee\u6539\u4e3a\u516c\u5dee\u4e3a $1$ \u7684\u7b49\u5dee\u6570\u5217\u3002\u6700\u540e\u5168\u5c40\u53d6 $\\min$\u3002\n\n\u56e0\u4e3a\u6570\u636e\u89c4\u6a21\u8f83\u5c0f\uff0c\u4e0d\u7528\u8003\u8651\u4ec0\u4e48\u7ebf\u6027\u505a\u6cd5\u4e86\uff0c\u76f4\u63a5 ODT \u7ef4\u62a4\u5373\u53ef\u3002\n\n\u603b\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n### Code\n\nODT \u7ef4\u62a4\u7b97\u662f\u4e00\u80a1\u6e05\u6d41\u4e86\uff0c\u6838\u5fc3\u4ee3\u7801\u86ee\u77ed\u7684\u3002\n\n```cpp\nstruct node{\n    uint l,r;llt k,b;node(uint l):l(l){}\n    node(uint l,uint r,llt k,llt b):l(l),r(r),k(k),b(b){}\n    friend bol operator<(node a,node b){return a.l<b.l;}\n};\nstd::set<node>S;\nstd::set<node>::iterator split(uint p){\n    auto iter=--S.upper_bound(node(p));if(iter->l==p)return iter;\n    uint l=iter->l,r=iter->r;llt k=iter->k,b=iter->b;\n    return S.erase(iter),S.insert(node(l,p,k,b)),S.insert(node(p,r,k,b)).first;\n}\nullt find(uint p){auto iter=--S.upper_bound(node(p));return iter->k*p+iter->b;}\nullt A[100005];uint B[100005];\nint main()\n{\n#ifdef MYEE\n    freopen(\"QAQ.in\",\"r\",stdin);\n    // freopen(\"QAQ.out\",\"w\",stdout);\n#endif\n    uint n;ullt k,s=0;scanf(\"%u%llu\",&n,&k);\n    for(uint i=0;i<n;i++)scanf(\"%llu%u\",A+i,B+i);\n    S.insert(node(0,k,0,0));\n    for(uint i=n-1;~i;s+=A[i--])if(B[i]==1){\n        if(A[i]*2>k)return puts(\"-1\"),0;\n        ullt l=(k-(2*s)%k)%k;ullt r=(l+k-2*A[i])%k;ullt w=find(r);\n        if(l>r){\n            auto iterr=split(l);auto iterl=split(r+1);\n            S.erase(iterl,iterr),S.insert(node(r+1,l,1,w-r));\n        }\n        else{\n            if(r!=k-1)S.erase(split(r+1),S.end()),S.insert(node(r+1,k,1,w-r));\n            if(l)S.erase(S.begin(),split(l)),S.insert(node(0,l,1,w+k-r));\n        }\n    }\n    ullt t=-1;\n    for(auto s:S)_min(t,(ullt)(s.l*s.k+s.b));\n    printf(\"%llu\\n\",t+s*2);\n    return 0;\n}\n```\n",
        "postTime": 1676898011,
        "uid": 105050,
        "name": "myee",
        "ccfLevel": 7,
        "title": "agc011_f"
    },
    {
        "content": "**\u9898\u610f** \uff1a \u6709\u4e00\u6761\u94c1\u8def\uff0c\u88ab $n+1$ \u4e2a\u7ad9\u53f0\u5206\u4e3a $n$ \u6bb5\u3002\u7ad9\u53f0\u6807\u53f7\u4e3a  $0\\sim n$ \uff0c\u94c1\u8def\u6807\u53f7\u4e3a $1\\sim n$\u3002\n\n\u5217\u8f66\u901a\u8fc7\u7b2c $i$ \u6bb5\u6240\u9700\u65f6\u95f4\u4e3a $t_i$ \uff0c\u53ef\u80fd\u662f\u53cc\u5411\u7684\u6216\u5355\u5411\u7684\u3002\n\n\u73b0\u5728\u9700\u8981\u8bbe\u8ba1\u4e00\u5f20\u5217\u8f66\uff08\u5faa\u73af\uff09\u65f6\u523b\u8868\u3002\n\n\u5bf9\u4e8e\u6240\u6709\u7684\u5217\u8f66\uff0c\u8981\u4e48\u4ece\u7ad9\u53f0 $0$ \u524d\u5f80\u7ad9\u53f0 $n$ \uff0c\u8981\u4e48\u4ece\u7ad9\u53f0 $n$ \u524d\u5f80\u7ad9\u53f0 $0$ \u3002\n\n\u5728\u5355\u5411\u8f68\u9053\u5185\uff0c\u4e0d\u80fd\u6709\u4e24\u8f86\u76f8\u53cd\u65b9\u5411\u7684\u8f66\u4e92\u76f8\u7a7f\u8fc7\u3002\u5217\u8f66\u53ea\u80fd\u5728\u7ad9\u70b9\u505c\u8f66\u7b49\u5f85\u3002\n\n\u82e5\u6709\u4e00\u8f86\u5f00\u5f80 $n$ \u7684\u8f66\u5728\u65f6\u523b $s$ \u5230\u8fbe\u7ad9\u70b9 $i$ \uff0c\u5728\u65f6\u523b $t$ \u79bb\u5f00\u7ad9\u70b9 $i$ \uff0c\u5219\u4e0b\u4e00\u8f86\u8f66\u6070\u597d\u5728\u65f6\u523b $s+k$ \u5230\u8fbe\u7ad9\u70b9 $i$ \uff0c\u5728\u65f6\u523b $t+k$ \u79bb\u5f00\u7ad9\u70b9 $i$ \u3002\u5176\u4e2d $k$ \u662f\u7ed9\u5b9a\u5e38\u6570\u3002\n\n\u9700\u8981\u4f7f\u5f97\u65f6\u95f4\u8868\u4e2d $0\\rightarrow n$ \u4e0e $n\\rightarrow 0$ \u7684\u5217\u8f66\u7684\u6240\u9700\u65f6\u95f4\u548c\u6700\u77ed\u3002\u56de\u7b54\u8fd9\u4e2a\u6700\u5c0f\u503c\uff0c\u6216\u6307\u51fa\u65e0\u89e3\u3002\n\n$n\\leq 10^5$ \uff0c\u65f6\u9650$\\texttt{2s}$\u3002\n\n------------\n\n\u5e94\u7528\u9898\u554a\u2026\u2026\n\n\u5f53\u67d0\u4e2a $2t_i>k$ \u5219\u65e0\u89e3\uff0c\u5426\u5219\u5fc5\u5b9a\u6709\u89e3\u3002\n\n\u8bb0 $p_i$ \u8868\u793a $0\\rightarrow n$ \u7684\u8f66\u5728\u7ad9\u70b9 $i$ \u505c\u9760\u7b49\u5f85\u7684\u65f6\u95f4\u3002\n\n$q_i$ \u8868\u793a $n\\rightarrow 0$ \u7684\u8f66\u5728\u7ad9\u70b9 $i$ \u505c\u9760\u7b49\u5f85\u7684\u65f6\u95f4\u3002\n\n$St(i)=\\sum_{j=1}^it_j,\\quad Sp(i)=\\sum_{j=0}^{i-1}p_j,\\quad Sq(i)=\\sum_{j=0}^{i-1}q_j$\u3002\n\n\u67d0\u4e2a\u65b9\u5411\u7684\u8f66\u7ecf\u8fc7\u7b2c $i$ \u6bb5\u94c1\u8def\u7684\u65f6\u95f4\u4e3a\u4e00\u6bb5\u533a\u95f4\uff0c\u4e14\u6bcf $k$ \u5355\u4f4d\u65f6\u95f4\u91cd\u590d\u4e00\u6b21\u3002\n\n\u5177\u4f53\u5730\uff0c\u5728\u6a21 $k$ \u5faa\u73af\u610f\u4e49\u4e0b \uff1a\n\n\u4e0a\u884c\u8f66\u7684\u533a\u95f4\u4e3a $\\big(St(i-1)+Sp(i),St(i)+Sp(i)\\big)$\n\n\u4e0b\u884c\u8f66\u7684\u533a\u95f4\u4e3a $\\big(-St(i)-Sq(i),-St(i-1)-Sq(i)\\big)$\n\n\u5b9e\u9645\u4e0a\u4e0b\u884c\u8f66\u7684\u5f0f\u5b50\u662f\u5168\u4f53\u51cf\u53bb\u524d\u7f00\u5f97\u5230\u540e\u7f00\uff0c\u4f46\u662f\u8d70\u4e00\u6574\u6b21\u6240\u9700\u7684\u65f6\u95f4\u662f $k$ \u7684\u500d\u6570\uff0c\u6240\u4ee5\u5728\u6a21 $k$ \u610f\u4e49\u4e0b\u53ef\u4ee5\u5ffd\u7565\u3002\u8fd9\u6837\u5f62\u5f0f\u4e0a\u4f1a\u66f4\u7edf\u4e00\u3002\n\n\u82e5\u8fd9\u662f\u5355\u5411\u94c1\u8def\uff0c\u8981\u6c42\u4e24\u4e2a\u533a\u95f4\uff08\u5728\u6a21 $k$ \u610f\u4e49\u4e0b\uff09\u4e0d\u4ea4\u3002\n\n$$\\left\\{\n\\begin{aligned}\nSt(i-1)+Sp(i)+ck&\\notin \\big(-St(i)-Sq(i),-St(i-1)-Sq(i)\\big)\\\\\nSt(i)+Sp(i)+ck&\\notin \\big(-St(i)-Sq(i),-St(i-1)-Sq(i)\\big)\\\\\n-St(i)-Sq(i)+ck&\\notin \\big(St(i-1)+Sp(i),St(i)+Sp(i)\\big)\\\\\n-St(i-1)-Sq(i)+ck&\\notin \\big(St(i-1)+Sp(i),St(i)+Sp(i)\\big)\n\\end{aligned}\n\\right.$$\n\n$$\\left\\{\n\\begin{aligned}\nSp(i)+Sq(i)+ck&\\notin \\big(-St(i)-St(i-1),-2St(i-1)\\big)\\\\\nSp(i)+Sq(i)+ck&\\notin \\big(-2St(i),-St(i)-St(i-1)\\big)\\\\\n-Sp(i)-Sp(i)+ck&\\notin \\big(St(i-1)+St(i),2St(i)\\big)\\\\\n-Sp(i)-Sq(i)+ck&\\notin \\big(2St(i-1),St(i)+St(i-1)\\big)\n\\end{aligned}\n\\right.$$\n\n\u8bb0 $x_i=Sp(i)+Sq(i)$ \uff0c\u4e0a\u5f0f\u53ef\u4ee5\u7edf\u4e00\u4e3a \uff1a\n\n$$x_i+ck\\notin \\big(-2St(i-1),-2St(i)\\big)$$\n\n\u5bf9 $x_{0\\sim n}$ \u7684\u552f\u4e00\u7ea6\u675f\u662f \uff1a \u5355\u8c03\u4e0d\u51cf\u3002\n\n- \u4e8e\u662f\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a \uff1a\n\n  \u4f60\u6709\u4e00\u4e2a\u53d8\u91cf $x$ \uff0c\u521d\u59cb\u503c\u4efb\u610f\u3002\n  \n  \u6bcf\u6b21\u4f1a\u7ed9\u51fa\u4e00\u4e2a\u6a21 $k$ \u610f\u4e49\u4e0b\u7684\u533a\u95f4\uff0c\u8981\u6c42\u7ed9 $x$ \u52a0\u4e00\u5b9a\u503c\uff0c\u4f7f\u5f97 $x$ \u843d\u5728\u8fd9\u4e2a\u533a\u95f4\u5185\u3002\n  \n  \u6700\u5c0f\u5316\u52a0\u4e0a\u7684\u503c\u7684\u548c\u3002\n  \n  \uff08\u5728\u672c\u9898\u4e2d\uff0c\u8fd8\u9700\u52a0\u4e0a $2St(n)$ \u624d\u662f\u7b54\u6848\uff09\n  \n\u8003\u8651 $\\rm DP$\u3002\u8bb0 $dp_k[i]$ \u4e3a\u7b2c $k$ \u6b21\u64cd\u4f5c\u540e\u4f7f\u5f97 $x=i$ \u6240\u9700\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\n\n\u663e\u7136\u6211\u4eec\u9700\u8981\u5173\u5fc3\u7684 $i$ \u4e00\u5b9a\u4e3a\u7ed9\u51fa\u7684\u67d0\u4e2a\u7aef\u70b9\u3002\n\n\u8fb9\u754c \uff1a $dp_0[i]=0$\u3002\n\n\u6bcf\u6b21\u64cd\u4f5c\u65f6\uff0c\u8bbe\u7ed9\u51fa\u7684\u6a21\u610f\u4e49\u533a\u95f4\u4e3a $[l,r]$ \uff0c\u8ba9 $[l,r]$ \u4ee5\u5916\u7684\u4f4d\u7f6e\u8f6c\u79fb\u5230 $l$ \u4e0a\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u7f6e\u4e3a $\\inf$ \uff0c\u5176\u4f59\u4e0d\u53d8\u3002\n\n\u7ef4\u62a4 $dp_k[i]-i$ \u7684\u533a\u95f4 $\\min$ \u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n```cpp\n#include<algorithm>\n#include<cstdio>\n#define ll long long\n#define MaxN 100500\nusing namespace std;\nconst ll INF=1ll<<60;\nll x[MaxN<<1];int tn;\nstruct Node{\n  ll x;bool fl;\n  inline void ladd(){x=INF;fl=1;}\n}a[MaxN<<2];\ninline void up(int u)\n{a[u].x=min(a[u<<1].x,a[u<<1|1].x);}\nvoid build(int l=1,int r=tn,int u=1)\n{\n  if (l==r){a[u].x=-x[l];return ;}\n  int mid=(l+r)>>1;\n  build(l,mid,u<<1);\n  build(mid+1,r,u<<1|1);\n  up(u);\n}\ninline void ladd(int u){\n  if (a[u].fl){\n    a[u<<1].ladd();\n    a[u<<1|1].ladd();\n    a[u].fl=0;\n  }\n}\nint to,wfl,wfr;ll wfc,ret;\nvoid qry(int l=1,int r=tn,int u=1)\n{\n  if (wfl<=l&&r<=wfr){\n    ret=min(ret,a[u].x);\n    return ;\n  }int mid=(l+r)>>1;ladd(u);\n  if (wfl<=mid)qry(l,mid,u<<1);\n  if (mid<wfr)qry(mid+1,r,u<<1|1);\n}\nvoid clr(int l=1,int r=tn,int u=1)\n{\n  if (wfl<=l&&r<=wfr){a[u].ladd();return ;}\n  int mid=(l+r)>>1;ladd(u);\n  if (wfl<=mid)clr(l,mid,u<<1);\n  if (mid<wfr)clr(mid+1,r,u<<1|1);\n  up(u);\n}\nvoid chg(int l=1,int r=tn,int u=1)\n{\n  if (l==r){\n    a[u].x=min(a[u].x,wfc-x[l]);\n    return ;\n  }int mid=(l+r)>>1;ladd(u);\n  if (to<=mid)chg(l,mid,u<<1);\n  else chg(mid+1,r,u<<1|1);\n  up(u);\n}\nll dfs(int l=1,int r=tn,int u=1)\n{\n  if (l==r)return a[u].x+x[l];\n  int mid=(l+r)>>1;ladd(u);\n  return min(dfs(mid+1,r,u<<1|1),dfs(l,mid,u<<1));\n}\nint n,m,k;\nll t[MaxN];\nstruct Data{ll l,r;}b[MaxN];\nint main()\n{\n  scanf(\"%d%d\",&n,&k);\n  for (int i=1,op;i<=n;i++){\n    scanf(\"%lld%d\",&t[i],&op);\n    if (op==1&&2*t[i]>k){puts(\"-1\");return 0;}\n    t[i]+=t[i-1];\n    if (op==1)\n      b[++m]=(Data){(k-2*t[i-1]%k)%k,(k-2*t[i]%k)%k};\n  }\n  for (int i=1;i<=m;i++){\n    x[++tn]=b[i].l;\n    x[++tn]=b[i].r;\n  }x[++tn]=0;\n  sort(x+1,x+tn+1);\n  tn=unique(x+1,x+tn+1)-x-1;\n  build();\n  for (int i=1;i<=m;i++){\n    int tl=lower_bound(x+1,x+tn+1,b[i].l)-x,\n        tr=lower_bound(x+1,x+tn+1,b[i].r)-x;\n    wfc=INF;\n    if (tl<=tr){\n      wfl=1;wfr=tl-1;\n      if (wfl<=wfr){\n        ret=INF;qry();clr();\n        wfc=b[i].l+ret;\n      }\n      wfl=tr+1;wfr=tn;\n      if (wfl<=wfr){\n        ret=INF;qry();clr();\n        wfc=min(wfc,b[i].l+k+ret);\n      }\n    }else {\n      wfl=tr+1;wfr=tl-1;\n      if (wfl<=wfr){\n        ret=INF;qry();clr();\n        wfc=b[i].l+ret;\n      }\n    }to=tl;chg();\n  }printf(\"%lld\",2*t[n]+dfs());\n  return 0;\n}\n```",
        "postTime": 1619592064,
        "uid": 58705,
        "name": "command_block",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 \u3010AT2342 [AGC011F] Train Service Planning\u3011"
    }
]