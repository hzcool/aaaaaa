[
    {
        "content": "\u8fd9\u4e2a\u6570\u636e\u8303\u56f4\u4e0d\u592a\u80fd\u5206\u89e3\u8d28\u56e0\u6570\u3002\n\n\u4e8e\u662f\u8003\u8651\u679a\u4e3e $\\sqrt[3]{A_i}$ \u5185\u5f97\u8d28\u56e0\u5b50\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e2a\u6570\u5206\u89e3\u6210\u8d28\u6570\u6b21\u5e42\u4e0d\u8d85\u8fc7 $3$ \uff0c\u9ad8\u4e8e $3$ \u76f4\u63a5 $\\bmod 3$ \u5373\u53ef\u3002\u8fd9\u6837\u64cd\u4f5c\u540e\uff0c\u4e0d\u96be\u53d1\u73b0\u6bcf\u4e2a $A_i$ \u5bf9\u5e94\u7740\u552f\u4e00\u4e00\u79cd\u6570\uff0c\u4e5f\u5c31\u662f\u6bcf\u4e2a\u6b21\u5e42\u53d6\u53cd\u540e\u7684\u6570\uff0c\u5b83\u4eec\u4fe9\u4e58\u8d77\u6765\u4f1a\u5f97\u5230\u4e00\u4e2a\u7acb\u65b9\u6570\u3002\u4e8e\u662f\u4e00\u4e2a\u663e\u7136\u7684\u601d\u8def\u5c31\u662f\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u6570\u6c42\u51fa\u5b83\u5bf9\u5e94\u7684\u6570\uff0c\u7136\u540e\u770b\u8fd9\u4fe9\u6570\u54ea\u4e2a\u51fa\u73b0\u7684\u6b21\u6570\u5927\uff0c\u62ff\u51fa\u73b0\u7684\u591a\u7684\u3002\n\n\u4f46\u662f\u8fd9\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u600e\u4e48\u6c42\u51fa\u5728 $\\sqrt[3]{x}$ \u5230 $\\sqrt x$ \u4e4b\u95f4\u7684\u8d28\u56e0\u5b50\u4ee5\u53ca\u6b21\u6570\u5462\uff1f\n\n\u5982\u679c\u6211\u4eec\u628a\u4e00\u4e2a\u6570\u7684\u6240\u6709\u4e0d\u5230 $\\sqrt[3]{x}$ \u7684\u8d28\u56e0\u5b50\u5168\u90e8\u9664\u53bb\uff0c\u90a3\u4e48\u5269\u4e0b\u7684\u8fd9\u4e2a\u6570\u4e00\u5b9a\u957f\u6210 $pq,p^2,p$ \u8fd9\u4e09\u79cd\u5f62\u5f0f\u4e4b\u4e00\u3002\u5982\u679c\u8fd9\u4e2a\u6570\u4e0d\u5230 $10^5$ \uff0c\u663e\u7136\u8fd9\u4e2a\u6570\u4e0d\u53ef\u80fd\u662f $p^2,pq$ \u7684\u5f62\u5f0f\uff0c\u56e0\u4e3a\u5982\u679c\u8fd9\u6837\u5fc5\u7136\u5b58\u5728\u4e0d\u5230 $\\sqrt[3]{x}$ \u7684\u8d28\u56e0\u5b50\u3002\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u7ed9\u5b83\u7684\u5bf9\u5e94\u6570\u4e58\u4e0a $p^2$ \u5373\u53ef\u3002\n\n\u5269\u4e0b\u7684\u6570\u5927\u4e8e\u4e86 $10^5$ \u8003\u8651\u5982\u679c\u5269\u4e0b\u7684\u662f $p$ \uff0c\u90a3\u4e48\u660e\u663e\uff0c\u4e0d\u53ef\u80fd\u6709\u4e00\u4e2a\u6570\u548c\u8fd9\u4e2a\u6570\u5bf9\u5e94\u3002\u56e0\u4e3a\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u5bf9\u5e94\u7684\u6570\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u81f3\u5c11\u6709 $p^2$ \u8fd9\u4e2a\u56e0\u5b50\uff0c\u4f46\u662f\u5b83\u5df2\u7ecf\u7206\u6389 $10^{10}$ \u4e86\u3002\n\n\u5982\u679c\u5269\u4e0b\u7684\u662f $pq$ \uff0c\u90a3\u4e48\u5bf9\u5e94\u6570\u81f3\u5c11\u6709 $p^2q^2$ \uff0c\u5b83\u53c8\u7206\u6389 $10^{10}$ \u4e86\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ea\u9700\u8981\u5224\u4e00\u4e0b\u5269\u4e0b\u7684\u6570\u662f\u5426\u4e3a\u4e00\u4e2a\u5e73\u65b9\u6570\uff0c\u5982\u679c\u662f\uff0c\u6211\u4eec\u5c31\u7ed9\u5bf9\u5e94\u6570\u4e58\u4e0a $\\sqrt c$ \u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6 $O(n\\sqrt[3]{A_i} + n\\log n)$ \u3002\n\n```cpp\nint n;\nll A[MAXN];\nint pri[MAXN] , en , ee , isp[MAXN];\nvoid sieve( ) {\n\tfor( int i = 2 ; i < MAXN ; ++ i ) {\n\t\tif( !isp[i] ) pri[++ en] = i;\n\t\tif( !ee && i > 4000 ) ee = en;\n\t\tfor( int j = 1 ; j <= en && pri[j] * i < MAXN ; ++ j ) {\n\t\t\tisp[i * pri[j]] = 1;\n\t\t\tif( i % pri[j] == 0 ) break;\n\t\t}\n\t}\n}\n\nll Sqrt( ll x ) {\n\tint t = sqrt( 1. * x );\n\trep( i , max( 1 , t - 5 ) , t + 5 ) if( i * 1ll * i == x ) return i;\n\treturn -1;\n}\n\nmap<ll,ll> cn , to;\nvoid solve() {\n\tsieve( );\n\tcin >> n;\n\trep( i , 1 , n ) {\n\t\tscanf(\"%lld\",A + i);\n\t\tll rv = 1 , c = A[i];\n\t\trep( j , 1 , ee ) if( A[i] % pri[j] == 0 ) {\n\t\t\tll p3 = pri[j] * pri[j] * 1ll * pri[j] , p2 = pri[j] * pri[j];\n\t\t\twhile( A[i] % p3 == 0 ) A[i] /= p3 , c /= p3;\n\t\t\tif( A[i] % p2 == 0 ) \n\t\t\t\trv *= pri[j];\n\t\t\telse if( A[i] % pri[j] == 0 )\n\t\t\t\trv *= p2;\n\t\t\twhile( c % pri[j] == 0 ) c /= pri[j];\n\t\t}\n\t\tif( c > 100000 ) {\n\t\t\tll t = Sqrt( c );\n\t\t\tif( t == -1 ) rv = -1;\n\t\t\telse if( !isp[t] ) {\n\t\t\t\trv *= t;\n\t\t\t} else assert( 0 );\n\t\t} else if( c != 1 ) {\n\t\t\tif( !isp[c] ) rv *= c * 1ll * c;\n\t\t\telse rv = -1;\n\t\t}\n\t\tto[A[i]] = rv;\n\t\t++ cn[A[i]];\n\t}\n\tint as = 0;\n\tfor( auto [x , t] : cn ) {\n//        cout << x << ' ' << t << ' ' << to[x] << ' ' << as << endl;\n\t\tif( !cn.count( to[x] ) ) as += t;\n\t\telse if( x < to[x] ) {\n\t\t\tif( cn.count( to[x] ) ) if( x < to[x] ) as += max( t , cn[to[x]] );\n\t\t}\n\t}\n\tcout << as + cn.count( 1 ) << endl;\n}\n\nsigned main() {\n//    int T;cin &gt;&gt; T;while( T-- ) solve();\n    solve();\n}\n```",
        "postTime": 1604368549,
        "uid": 63398,
        "name": "yijan",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 AT2004 \u3010[AGC003D] Anticube\u3011"
    },
    {
        "content": "## AGC003D\n\n\u8fd9\u9053\u9898\u4e0d\u7b97\u5f88\u96be\uff0c\u4e0d\u8fc7\u6709\u9700\u8981\u6ce8\u610f\u7684\u5c0f\u7ec6\u8282\u3002\n\n\u9996\u5148\u7b2c\u4e00\u6b65\u662f\u975e\u5e38\u6e05\u6670\u7684\uff1a\u5148\u628a\u6240\u6709\u6570\u6309\u7167\u67d0\u79cd\u6761\u4ef6\u5206\u89e3\u3002\n\n\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u5982\u679c\u76f4\u63a5\u5206\u89e3\u51fa\u6240\u6709\u7684\u8d28\u56e0\u6570\uff0c\u590d\u6742\u5ea6\u5c31\u662f $O(n \\sqrt{s_{mx}})$ \u7684\uff0c\u59a5\u59a5 T \u98de\u3002\n\n\u8003\u8651\u4f18\u5316\uff1a\u6211\u4eec\u9996\u5148\u5148\u5254\u9664\u6389\u6bcf\u4e2a\u6570\u91cc\u5f62\u5982 $x^3$ \u7684\u56e0\u5b50\u3002\u6ce8\u610f\u5230 $x \\in [1, \\sqrt[3]{s_{mx}}]$ \uff0c\u5e76\u4e14\u53ea\u9700\u8981\u679a\u4e3e\u8fd9\u4e2a\u8303\u56f4\u5185\u7684\u8d28\u6570\uff0c\u6240\u4ee5\u53ef\u4ee5\u5f88\u5feb\u505a\u5b8c\u8fd9\u4e00\u6b65\u3002\n\n\u5220\u9664\u6389\u7acb\u65b9\u56e0\u5b50\u4e4b\u540e\uff0c\u5982\u679c\u6709\u5269\u4e0b $1$\uff0c\u90a3\u4e48\u7b54\u6848\u81f3\u5c11\u6709 $1$\u3002\n\n\u7136\u540e\u8003\u8651\u5176\u4ed6\u7684\u6570\uff1a\u6211\u4eec\u518d\u7528 $x \\in [1,\\sqrt[3]{s_{mx}}]$ \u7684\u6240\u6709\u8d28\u6570 $x$ \u6765\u5206\u89e3\u6389\u6240\u6709\u7684 $s_i$\u3002\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u65f6\u5019 $s_i$ \u81f3\u591a\u6709\u4e24\u4e2a\u8d28\u56e0\u5b50\u3002\u7136\u540e\u6211\u4eec\u6309\u4ee5\u4e0b\u51e0\u79cd\u60c5\u51b5\u8ba8\u8bba\u4ee5\u4e0b\uff1a\n\n- \u5982\u679c $s_i=1$\uff0c\u90a3\u5c31\u5c06\u5176\u4e0a\u4e00\u6b65\u5206\u89e3\u51fa\u6765\u7684 $x$ \u7684\u4e58\u79ef\u653e\u5165\u7b2c\u4e09\u7c7b\u6570\u4e2d\uff1b\n- \u5426\u5219\u5982\u679c\u8fd9\u4e2a $s_i$ \u662f\u5b8c\u5168\u5e73\u65b9\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u628a\u5b83\u4e0a\u4e00\u6b65\u5206\u89e3\u7684 $x$ \u7684\u4e58\u79ef\u5206\u5230\u7b2c\u4e00\u7c7b\u6570\u4e2d\uff1b\n- \u5426\u5219\u5982\u679c $s_i$ \u662f\u4e00\u4e2a\u5728 $\\sqrt{s_{mx}}$ \u8303\u56f4\u5185\u7684\u8d28\u6570\uff0c\u5219\u5206\u5230\u7b2c\u4e8c\u7c7b\u6570\u4e2d\uff1b\n- \u5426\u5219\u5c31\u4e00\u5b9a\u4e0d\u5b58\u5728\u4e00\u4e2a\u6570\u80fd\u548c\u5b83\u76f8\u4e58\u5f97\u5230\u4e00\u4e2a\u5b8c\u5168\u5e73\u65b9\u6570\uff0c\u5b83\u5c31\u53ef\u4ee5\u76f4\u63a5\u653e\u8fdb\u7b54\u6848\u3002\uff08\u82e5\u4e0d\u80fd\u76f4\u63a5\u9886\u4f1a\uff0c\u8bf7\u770b\u4e0b\u6587 \u8bc1\u660e \u90e8\u5206\u3002\uff09\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u8fd9\u65f6\u5019\u80fd\u901a\u8fc7\u76f8\u4e58\u53d8\u6210\u5b8c\u5168\u7acb\u65b9\u6570\u7684\u60c5\u51b5\uff0c\u53ea\u4f1a\u53d1\u751f\u5728 \u7b2c\u4e09\u7c7b\u6570 $\\times$ \u7b2c\u4e09\u7c7b\u6570 \uff1b \u7b2c\u4e00\u7c7b\u6570 $\\times$ \u7b2c\u4e8c\u7c7b\u6570 \u4e2d\u3002\n\n\u5148\u8003\u8651 \u7b2c\u4e09\u7c7b\u6570 $\\times$ \u7b2c\u4e09\u7c7b\u6570\u3002\u8fd9\u4e2a\u65f6\u5019\u7684\u4e58\u79ef\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u5173\u7cfb\uff08\u53bb\u9664\u6240\u6709\u7acb\u65b9\u56e0\u5b50\uff09\uff0c\u53ef\u4ee5\u627e\u5230\u5176\u5bf9\u5e94\u7684\u4e00\u4e2a\u6570\uff0c\u7136\u540e\u6254\u8fdb ${\\rm map}$ \u91cc\u5934\u76f4\u63a5\u8ba1\u6570\u53d6\u6700\u5927\u5c31\u597d\u4e86\u3002\n\n\u7136\u540e\u5c31\u662f \u7b2c\u4e00\u7c7b\u6570 $\\times$ \u7b2c\u4e8c\u7c7b\u6570\uff0c\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u5927\u4e8e $\\sqrt[3]{s_{mx}}$ \u7684\u6570\u7684\u9650\u5236\u3002\u4e0d\u8fc7\u53ef\u4ee5\u76f4\u63a5\u7528 ${\\rm vector}$ \u5f53\u6876\u76f4\u63a5\u88c5\u4e0b\uff0c\u7136\u540e\u5bf9\u4e8e \u7b2c\u4e00\u7c7b\u6570\uff0c\u653e\u8fdb\u5176\u5269\u4e0b\u7684 $\\sqrt{s_i}$ \u8fd9\u4e2a\u6876\u91cc\u5934\uff0c\u5bf9\u4e8e\u7b2c\u4e8c\u7c7b\u6570\uff0c\u76f4\u63a5\u653e\u8fdb\u5269\u4e0b\u7684 $s_i$ \u8fd9\u4e2a\u6876\u91cc\u5934\u3002\u7136\u540e\u5bf9\u4e8e\u4e24\u7c7b\u6570\u76f8\u540c\u7684\u6876\uff0c\u5c31\u53ef\u4ee5\u7c7b\u6bd4\u4e0a\u4e00\u79cd\u60c5\u51b5\uff0c\u76f4\u63a5\u7edf\u8ba1\u53d6\u6700\u5927\u5c31\u597d\u4e86\u3002\n\n\u590d\u6742\u5ea6 $O(n \\log n + n \\sqrt[3]{s_{mx}})$\uff0c\u5b9e\u6d4b\u6548\u7387\u633a\u9ad8\u7684\u3002\n\n---\n\n\u8bc1\u660e\uff1a\n\n\u9996\u5148\u663e\u7136\u7684\u662f\uff0c\u5982\u679c\u8fd9\u4e2a $s_i$ \u662f\u5927\u4e8e $\\sqrt{s_{mx}}$ \u7684\u8d28\u6570\uff0c\u90a3\u4e48\u4ee5\u5b83\u4e3a\u56e0\u5b50\u7684\u6700\u5c0f\u5b8c\u5168\u7acb\u65b9\u6570\u662f\u5927\u4e8e $s_{mx}^{\\frac{3}{2}}$ \u7684\u3002\u8d85\u51fa\u4e86\u6570\u636e\u8303\u56f4\uff0c\u4e0d\u5b58\u5728\u80fd\u6784\u6210\u5b8c\u5168\u7acb\u65b9\u6570\u7684\u60c5\u51b5\u3002\n\n\u5982\u679c\u7ecf\u8fc7 $x \\in [1, \\sqrt[3]{s_{mx}}]$ \u7684 $x$ \u7b5b\u8fc7 $s_i$ \u4e4b\u540e\uff0c$s_i$ \u65e2\u4e0d\u662f\u5b8c\u5168\u5e73\u65b9\u6570\uff0c\u4e5f\u4e0d\u662f\u4e00\u4e2a\u8d28\u6570\uff0c\u90a3\u4e48\u5176\u4e00\u5b9a\u662f\u901a\u8fc7\u4e24\u4e2a $p \\in [\\sqrt[3]{s_{mx}},\\sqrt{s_{mx}}]$ \u7684\u8d28\u6570 $p_1,p_2$ \u76f8\u4e58\u5f97\u5230\u3002\u6ce8\u610f\u5230\u5982\u679c\u8981\u6709\u53e6\u4e00\u4e2a\u6570\u80fd\u548c\u5176\u76f8\u4e58\u5f97\u5230\u4e00\u4e2a\u5b8c\u5168\u5e73\u65b9\u6570\uff0c\u5219\u5fc5\u987b\u81f3\u5c11\u5305\u542b $p_1^2p_2^2$ \u8fd9\u4e2a\u56e0\u5b50\u3002\u663e\u7136\u8fd9\u4e00\u9879\u7684\u8303\u56f4\u5728 $[s_{mx}^{\\frac{4}{3}},s_{mx}^2]$ \u5185\uff0c\u8d85\u51fa\u6570\u636e\u8303\u56f4\uff0c\u6240\u4ee5\u4e0d\u53ef\u80fd\u5b58\u5728\u6784\u6210\u5b8c\u5168\u7acb\u65b9\u6570\u7684\u60c5\u51b5\u3002\n\n---\n\n${\\rm Code}$\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int __SIZE = 1 << 18;\nchar ibuf[__SIZE], *iS, *iT;\n\n#define ge (iS == iT ? (iT = (iS = ibuf) + fread(ibuf, 1, __SIZE, stdin), (iS == iT ? EOF : *iS++)) : *iS++)\n#define ri read_int()\n#define rl read_ll()\n#define FILE(s) freopen(s\"in\", \"r\", stdin), freopen(s\"out\", \"w\", stdout)\n\ntemplate<typename T>\ninline void read(T &x) {\n\tchar ch, t = 0; x = 0;\n\twhile(!isdigit(ch = ge)) t |= ch == '-';\n\twhile(isdigit(ch)) x = x * 10 + (ch ^ 48), ch = ge;\n\tx = t ? -x : x;\n}\ninline int read_int() { int x; return read(x), x; }\ninline ll read_ll() { ll x; return read(x), x; }\n\ntemplate<typename T>\ninline void chkmin(T&a, T b) { a = a < b ? a : b; }\n\nconst int MAXN = 100010;\n\nll sq3[2200];\nll s[MAXN];\n\nint tot;\nint pri[2200];\nint chk[2200];\n\ninline void Get_Prime(int n) {\n\tfor(int i = 2; i <= n; i++) {\n\t\tif(!chk[i]) pri[++tot] = i;\n\t\tfor(int j = 1; j <= tot; j++) {\n\t\t\tif(i * pri[j] > n) break;\n\t\t\tchk[i * pri[j]] = 1;\n\t\t\tif(i % pri[j] == 0) break;\n\t\t}\n\t}\n}\n\ninline void init(int n) {\n\tfor(int i = 1; i <= n; i++)\n\t\tsq3[i] = 1LL * i * i * i;\n}\n\ninline ll work(ll x) {\n\tfor(int i = 1; i <= tot; i++)\n\t\twhile(x % sq3[pri[i]] == 0) x /= sq3[pri[i]];\n\treturn x;\n}\n\ninline ll doit(ll&s, ll&x, ll&r) {\n\tx = r = 1;\n\tfor(int i = 1; i <= tot; i++)\n\t\tif(s % pri[i] == 0) {\n\t\t\tif(s % (pri[i] * pri[i]) == 0) r *= pri[i], x *= pri[i] * pri[i];\n\t\t\telse x *= pri[i], r *= pri[i] * pri[i];\n\t\t\twhile(s % pri[i] == 0) s /= pri[i];\n\t\t}\n\treturn s;\n}\n\nstruct Node {\n\tll t, r;\n\n\tNode() {}\n\tNode(ll t, ll r):t(t), r(r) {}\n};\n\nvector<Node> c1[MAXN];\nvector<Node> c2[MAXN];\nmap<ll, int> mp1, mp2;\n\nint main() {\n#ifdef LOCAL\n\tFILE(\"\");\n#endif\n\n\tinit(2160), Get_Prime(2160);\n\n\tint n = ri;\n\tfor(int i = 1; i <= n; i++) s[i] = work(rl);\n\tsort(s + 1, s + 1 + n);\n\n\tint res = s[1] == 1;\n\tfor(int i = 1; i <= n; i++) {\n\t\tif(s[i] == 1) continue;\n\t\tll t, r;\n\t\tll v = sqrt(doit(s[i], t, r));\n\t\twhile(v * v > s[i]) --v;\n\t\twhile(v * v < s[i]) ++v;\n\t\tif(v * v == s[i]) c2[v].push_back(Node(t, r));\n\t\telse if(s[i] <= 100000) c1[s[i]].push_back(Node(t, r));\n\t\telse ++res;\n\t}\n\n\tfor(auto x : c2[1]) c1[1].push_back(x);\n\tfor(auto x : c1[1]) mp1[x.t]++;\n\tfor(auto x : c1[1]) res += max(mp1[x.t], mp1[x.r]), mp1[x.t] = mp1[x.r] = 0;\n\n\tfor(int i = 2; i <= 100000; i++)\n\t\tif(!c1[i].size() || !c2[i].size()) res += c1[i].size() + c2[i].size();\n\t\telse {\n\t\t\tmp1.clear(), mp2.clear();\n\t\t\tfor(auto x : c1[i]) mp1[x.t]++;\n\t\t\tfor(auto x : c2[i]) mp2[x.t]++;\n\t\t\tfor(auto x : c1[i]) res += max(mp1[x.t], mp2[x.r]), mp1[x.t] = mp2[x.r] = 0;\n\t\t\tfor(auto x : c2[i]) res += max(mp2[x.t], mp1[x.r]), mp2[x.t] = mp1[x.r] = 0;\n\t\t}\n\t\n\tcout << res << endl;\n\treturn 0;\n}\n```",
        "postTime": 1576565028,
        "uid": 20782,
        "name": "CYJian",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 AT2004 \u3010Anticube\u3011"
    },
    {
        "content": "\u4e00\u9053\u6bd4\u8f83\u597d\u7684\u6839\u53f7\u5206\u6cbb\u9898\u3002\n\n\n------------\n\n\n\u6211\u4eec\u4ee4 $s_i$ \u8868\u793a $s_i$ \u7684\u6700\u5927\u503c\u3002\n\n\u9996\u5148\u6211\u4eec\u53d1\u73b0\u4e24\u6570\u79ef\u662f\u5b8c\u5168\u7acb\u65b9\u6570\uff0c\u5f53\u4e14\u4ec5\u5f53\u4e24\u6570\u4e58\u8d77\u6765\u540e\u6240\u6709\u8d28\u56e0\u5b50\u90fd\u662f 3 \u7684\u5e42\u6b21\u65b9\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u628a\u6bcf\u4e2a\u6570\u7684\u5927\u4e8e\u4e09\u6b21\u65b9\u7684\u56e0\u5b50\uff0c\u6bcf\u6b21\u51cf\u4e09\uff0c\u76f4\u81f3\u5c0f\u4e8e\u4e09\u6b21\uff0c\u90a3\u4e48\u4e0a\u8ff0\u6761\u4ef6\u5c31\u53d8\u4e3a\uff1a\u4e24\u6570\u79ef\u662f\u5b8c\u5168\u7acb\u65b9\u6570\uff0c\u5f53\u4e14\u4ec5\u5f53\u4e24\u6570\u4e58\u8d77\u6765\u540e\u6240\u6709\u8d28\u56e0\u5b50\u7684\u6b21\u6570\u90fd\u662f 3\u3002\n\n\u800c\u4e14\u8fd9\u6837\u6bcf\u4e2a\u6570\u8d28\u56e0\u6570\u53ea\u53ef\u80fd\u662f 1 \u6b21\uff0c\u6216 2\u6b21\u3002\u6761\u4ef6\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5f3a\u5316\uff0c\u4e24\u6570\u79ef\u662f\u5b8c\u5168\u7acb\u65b9\u6570\uff0c\u5f53\u4e14\u4ec5\u5f53\u4e24\u6570\u62e5\u6709\u7684\u8d28\u56e0\u5b50\u76f8\u540c\uff0c\u4e14 1 \u4e2a\u6b21\u6570\u4e3a 1\uff0c1 \u4e2a\u6b21\u6570\u4e3a 2\u3002\n\n\n------------\n\n\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230 $n \\sqrt s_i $ \u7684\u505a\u6cd5\uff0c\u5373\u5bf9\u8d28\u6570\u662f\u5426\u5927\u4e8e $\\sqrt s_i$ \u8ba8\u8bba\u3002\u7136\u800c\uff0c$s_i$ \u975e\u5e38\u5927\uff0c\u7adf\u6709 $10^{10}$\u3002\u5f88\u660e\u663e\u8fd9\u6837\u505a\u662f\u4e0d\u884c\u7684\u3002\n\n\n------------\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u4f18\u5316\uff0c\u6211\u4eec\u867d\u7136\u4e0d\u80fd\u5206\u7c7b $\\sqrt s_i$ \uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u5206\u7c7b $\\sqrt[3] s_i$ \u7684\u8d28\u6570\u3002\n\n\u9996\u5148\u6211\u4eec\u7528 $n\\sqrt[3] s_i$ \u7684\u65f6\u95f4\uff0c\u628a\u6240\u6709\u5c0f\u4e8e $\\sqrt[3] s_i$ \u7684\u8d28\u56e0\u6570\u5168\u90e8\u626b\u51fa\u6765\uff0c\u7528 $z1$ \u8bb0\u5f55\u6240\u6709\u5c0f\u4e8e $\\sqrt[3] s_i$ \u8d28\u6570\u4e58\u79ef\uff0c $z2$ \u8bb0\u5f55\u80fd\u4e0e $z1$ \u5f62\u6210\u5b8c\u5168\u7acb\u65b9\u6570\u7684\u6700\u5c0f\u6570\u3002\u8fd9\u6837\u6bcf\u4e2a\u6570\u4f1a\u5269\u4e0b\u4e00\u4e2a\u6570 x\u3002\n\n\u6211\u4eec\u5bf9 $x$ \u8fdb\u884c\u8ba8\u8bba\uff1a\n\n1. \u5982\u679c $x = 1$ \uff0c\u90a3\u4e48\u80fd\u9009\u7684\u6570\u5c31\u662f\u540c\u4e3a $x=1$ \u6570\u4e2d $z1$ \u6570\u91cf\u4e0e $z2$ \u6570\u91cf\u7684\u8f83\u5927\u503c\u3002\n\n2. \u5982\u679c $x$ \u662f\u4e00\u4e2a\u5c0f\u4e8e $\\sqrt s_i$ \u7684\u8d28\u6570\u3002\u6211\u4eec\u53ea\u8981\u80fd\u9009\u7684\u6570\u5c31\u662f $x=x$ \u65f6 $z1$ \u7684\u6570\u91cf \u4e0e $x=x^2$ \u65f6 $z2$ \u7684\u6570\u91cf\u8f83\u5927\u503c\u3002\n\n3. \u5982\u679c $x$ \u662f\u4e00\u4e2a\u5c0f\u4e8e $\\sqrt s_i$ \u7684\u8d28\u6570\u7684\u5e73\u65b9\u3002\u4e0e\u7b2c\u4e8c\u7c7b\u7c7b\u4f3c\u3002\n4. \u5982\u679c $x$ \u662f\u5176\u4ed6\u6570\uff0c\u90a3\u8fd9\u4e2a\u6570\u80af\u5b9a\u80fd\u9009\uff0c\u56e0\u4e3a\u4ed6\u7684\u5e73\u65b9\u80af\u5b9a\u5927\u4e8e ${10}^{10}$\u3002\n\n\u6700\u540e\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $n \\sqrt[3] s_i$ \u3002\n\n------------\n\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n//static char buf[1000000],*p1=buf,*p2=buf;\n//#define getchar() p1==p2&&(p2=(p1=buf)+fread(buf,1,1000000,stdin),p1==p2)?EOF:*p1++\n#define re register\n#define int long long\nconst int maxn=2e5+5,M=1e10,t=1e5;\ninline int read()\n{\n\tchar ch=getchar();bool f=0;int x=0;\n\tfor(;!isdigit(ch);ch=getchar())if(ch=='-')f=1;\n\tfor(;isdigit(ch);ch=getchar())x=(x<<1)+(x<<3)+(ch^48);\n\tif(f==1)x=-x;return x;\n}\ninline void print(int x)\n{\n    static int a[55];int top=0;\n    if(x<0) putchar('-'),x=-x;\n    do{a[top++]=x%10,x/=10;}while(x);\n    while(top) putchar(a[--top]+48);\n}\nint n,m,a[maxn],q,p[maxn],vis[maxn],cnt,g,b[maxn],c[maxn],h[maxn],num,ans,f[maxn],o;\nmap<int,int>s[maxn][2];\nsigned main()\n{\n\t//freopen(\".in\",\"r\",stdin);\n\t//freopen(\".out\",\"w\",stdout);\n\tn=read(),q=2154;//3\u6b21\u6839\u53f7\u4e0b1e10\n\tfor(int i=1;i<=n;i++) a[i]=read();\n\tfor(int i=2;i<=t;i++)\n\t{\n\t\tif(!vis[i])vis[i]=1,p[++cnt]=i,h[i]=1;\n\t\tif(i<=q)g=cnt;\n\t\tfor(int j=1;j<=cnt&&p[j]*i<=t;j++)vis[p[j]*i]=1;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=g;j++)\n\t\t{\n\t\t\tif(a[i]<p[j]*p[j]*p[j])break;\n\t\t\tif(a[i]%(p[j]*p[j]*p[j])==0)a[i]=a[i]/p[j]/p[j]/p[j],j--;\n\t\t}int z=1,z2=1;\n\t\tif(a[i]==1){ans=1;continue;}\n\t\tfor(int j=1;j<=g;j++)\n\t\t\tif(a[i]%p[j]==0)\n\t\t\t{\n\t\t\t\ta[i]=a[i]/p[j];z=z*p[j];\n\t\t\t\tif(a[i]%p[j]==0)a[i]=a[i]/p[j],z=z*p[j],z2=z2*p[j];\n\t\t\t\telse z2=z2*p[j]*p[j];\n\t\t\t}\n\t\tb[i]=z,c[i]=z2;o=sqrt(a[i]);\n\t\tif(a[i]==1)\n\t\t{\n\t\t\ts[0][0][z]++;\n\t\t\tif(s[0][0][z]==1&&s[0][0][z2]==0)f[i]=1;\n\t\t}\n\t\telse if(a[i]<=t&&h[a[i]]==1)\n\t\t{\n\t\t\ts[a[i]][0][z]++;\n\t\t\tif(s[a[i]][0][z]==1&&s[a[i]][1][z2]==0)f[i]=1;\n\t\t}\n\t\telse if(o*o==a[i])\n\t\t{\n\t\t\ts[o][1][z]++;\n\t\t\tif(s[o][1][z]==1&&s[o][0][z2]==0)f[i]=1;\n\t\t}\n\t\telse num++;\n\t}\n\tans=ans+num;num=0;\n\tfor(int i=1;i<=n;i++)\n\t\tif(f[i]==1)\n\t\t{\n\t\t\tif(a[i]==1)ans=ans+max(s[0][0][b[i]],s[0][0][c[i]]);\n\t\t\telse if(a[i]<=t&&h[a[i]]==1)ans=ans+max(s[a[i]][0][b[i]],s[a[i]][1][c[i]]);\n\t\t\telse o=sqrt(a[i]),ans=ans+max(s[o][1][b[i]],s[o][0][c[i]]);\n\t\t}\n\tcout<<ans;\n \treturn 0;\n}\n\n```\n\n",
        "postTime": 1634268206,
        "uid": 343748,
        "name": "louhao088",
        "ccfLevel": 9,
        "title": "\u9898\u89e3AT2004 [AGC003D] Anticube"
    },
    {
        "content": "$$\\Large\\rm [AGC003D]Anticube$$\n\n$\\large\\rm Part1$\n\n$\\quad$\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u5c06\u6bcf\u4e2a\u6570\u8d28\u56e0\u6570\u5206\u89e3\uff0c\u90a3\u4e48\u4e24\u4e2a\u6570\u4e0d\u80fd\u540c\u65f6\u9009\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b83\u4eec\u6240\u6709\u8d28\u56e0\u6570\u7684\u6307\u6570\u4e4b\u548c\u90fd\u4e3a $3$ \u7684\u500d\u6570\u3002\u4e8e\u662f\u5982\u679c\u77e5\u9053\u4e00\u4e2a\u786e\u5b9a\u7684 $x$\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba1\u7b97\u51fa\u552f\u4e00\u7684 $y$\uff0c\u6ee1\u8db3 $xy=z^3,z\\in Z^+.$\n\n$\\quad$\u4e8e\u662f\u5bf9\u4e8e\u6bcf\u4e2a $x$ \u6c42\u51fa\u5176\u5bf9\u5e94\u7684 $y$\uff0c\u53d6\u6570\u91cf\u591a\u7684\u90a3\u4e2a\u5373\u53ef\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u672c\u6765\u5c31\u662f\u5b8c\u5168\u7acb\u65b9\u6570\u7684\u6570\u53ea\u80fd\u53d6\u4e00\u4e2a\u3002\n\n$\\quad$\u4e8e\u662f\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a $\\Theta[n(\\sqrt{w}+\\log n)]$ \u7684\u505a\u6cd5\u3002\u590d\u6742\u5ea6\u74f6\u9888\u5728\u5206\u89e3\u8d28\u56e0\u6570\uff0c\u5982\u679c\u4f7f\u7528 $\\rm Pollard-Rho$ \u7b97\u6cd5\u5206\u89e3\u8d28\u56e0\u6570\u5219\u53ef\u4ee5\u505a\u5230 $\\Theta(nw^{\\frac{1}{4}}+n\\log n)$\uff0c~~\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002~~\n\n$\\large\\rm Part2$\n\n$\\quad$\u8003\u8651\u9996\u5148\u5254\u9664\u6240\u6709\u6570\u4e2d\u7684\u7acb\u65b9\u56e0\u5b50\u3002\u6211\u4eec\u53d1\u73b0\u5b8c\u5168\u7acb\u65b9\u56e0\u5b50\u5f62\u5982 $k^3$\uff0c\u6709 $k\\leqslant \\sqrt[3]{w}$\uff0c\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u8981\u679a\u4e3e $[1,\\sqrt[3]{w}]$ \u4e2d\u7684\u8d28\u6570\u5373\u53ef\u3002\n\n$\\quad$\u5982\u679c\u5254\u9664\u7acb\u65b9\u56e0\u5b50\u540e\u5269\u4e0b\u4e86 $1$\uff0c\u90a3\u4e48\u8bf4\u660e\u8fd9\u4e2a\u6570\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u5b8c\u5168\u7acb\u65b9\u6570\uff0c\u5c06\u8fd9\u4e9b\u6570\u53bb\u6389\uff0c\u7b54\u6848\u7684\u521d\u503c\u8bbe\u4e3a $1.$\n\n$\\quad$\u8003\u8651\u8bb0 $a$ \u5728\u53bb\u9664\u7acb\u65b9\u56e0\u5b50\u540e\u5c0f\u4e8e $\\sqrt[3]{w}$ \u7684\u56e0\u5b50\u7684\u4e58\u79ef\u4e3a $x$\uff0c\u8bb0 $a$ \u5728\u53bb\u9664\u6240\u6709 $[1,\\sqrt[3]{w}]$ \u4e2d\u56e0\u5b50\u540e\u7684\u6570\u4e3a $s.$ \u6211\u4eec\u53d1\u73b0 $s$ \u6700\u591a\u6709\u4e24\u4e2a\u8d28\u56e0\u5b50\uff0c\u4e8e\u662f\u8003\u8651\u8fdb\u884c\u5206\u7c7b\u8ba8\u8bba \uff1a\n\n- \u82e5 $s=1$\uff0c\u5219\u8bf4\u660e\u8fd9\u4e2a\u6570\u53ea\u6709 $[1,\\sqrt[3]{w}]$ \u4e2d\u7684\u8d28\u56e0\u5b50\uff0c\u4e8e\u662f\u5c06 $x$ \u653e\u8fdb\u96c6\u5408 $S$ \u4e2d\u5e76\u66b4\u529b\u5206\u89e3\u8d28\u56e0\u6570\u3002\n- \u82e5 $s=p,p\\in [\\sqrt[3]{w},\\sqrt{w}]\\cup Prime$\uff0c\u5219\u5c06 $px$ \u653e\u8fdb $S$ \u4e2d\u5e76\u66b4\u529b\u5206\u89e3\u8d28\u56e0\u6570\u3002\n- \u82e5 $s=p^2,p\\in [\\sqrt[3]{w},\\sqrt{w}]\\cup Prime$\uff0c\u5219\u5c06 $p^2x$ \u653e\u8fdb $S$ \u4e2d\u5e76\u66b4\u529b\u5206\u89e3\u8d28\u56e0\u6570\u3002\n- \u5269\u4e0b\u7684\u60c5\u51b5\u4ec5\u6709\u4e24\u79cd\uff0c\u5373 $s=p',p'\\in [\\sqrt{w},w]\\cup Prime$ \u548c $s=pq,p,q\\in [\\sqrt[3]{w},\\sqrt{w}]\\cup Prime$\uff0c\u663e\u7136\u8fd9\u4e24\u79cd\u60c5\u51b5\u7684\u5bf9\u5e94\u6570\u90fd\u5927\u4e8e $w$\uff0c\u6545\u53ef\u4ee5\u76f4\u63a5\u52a0\u5165\u7b54\u6848\u3002\n\n$\\quad$\u5bf9\u4e8e $S$ \u4e2d\u7684\u6570\uff0c\u6211\u4eec\u5df2\u7ecf\u5c06\u5176\u8d28\u56e0\u6570\u5206\u89e3\uff0c\u4e8e\u662f\u53ef\u4ee5\u4f7f\u7528 `pbds` \u4e2d\u7684 `hash_table` \u5b58\u50a8\uff0c\u904d\u5386\u6240\u6709 $S$ \u4e2d\u7684\u5143\u7d20\uff0c\u5982\u679c\u5b83\u7684\u6570\u91cf\u5927\u4e0e\u5176\u5bf9\u5e94\u6570\u7684\u6570\u91cf\uff0c\u5219\u5c06\u5176\u6570\u91cf\u52a0\u5165\u7b54\u6848\u3002\n\n$\\quad$\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(n\\frac{\\sqrt[3]{w}}{\\log w}+n\\log n).$\n\n$\\large\\rm Code$\n\n```cpp\n#include<bits/stdc++.h>\n#include<bits/extc++.h>\nusing namespace std;\nusing namespace __gnu_pbds;\n\n#define int long long\n#define rep(i, l, r) for (int i = l; i <= r; i++)\n#define dep(i, r, l) for (int i = r; i >= l; i--)\n\nconst int N = 1e5 + 10, sqr3 = 2200;\n\nint n, a[N], x[N][20], cnt[N], num[N][20], ans;\nint notp[sqr3], pri[sqr3], tot, S[N], siz;\ngp_hash_table <int, int> Map;\n\nint SupSet (int i) {\n\tint A = a[S[i]], T = 1;\n\tif ((int)sqrt(A) * (int)sqrt(A) == A) T *= sqrt(A);\n\telse T *= A * A;\n\trep(j, 1, cnt[S[i]])\n\t\tif (num[S[i]][j] == 2) T *= x[S[i]][j];\n\t\telse T *= x[S[i]][j] * x[S[i]][j];\n\treturn T;\n}\n// \u5bfb\u627e\u8865\u96c6\n\nsigned main () {\n\n\t// freopen(\"sample.in\", \"r\", stdin);\n\n\tscanf(\"%lld\", &n);\n\trep(i, 1, n) scanf(\"%lld\", &a[i]);\n\t\n\tnotp[1] = true;\n\trep(i, 2, sqr3 - 1) {\n\t\tif (!notp[i]) pri[++tot] = i;\n\t\tfor (int j = 1; i * pri[j] < sqr3 && j <= tot; j++) {\n\t\t\tnotp[i * pri[j]] = true;\n\t\t\tif (i % pri[j] == 0) break;\n\t\t}\n\t}\n\t// \u7b5b sqrt{w} \u4ee5\u5185\u7684\u8d28\u6570\n\t\n\trep(i, 1, n) {\n\t\tx[i][0] = 1;\n\t\tfor (int j = 1; j <= tot; j++) if (a[i] % pri[j] == 0) {\n\t\t\tx[i][++cnt[i]] = pri[j];\n\t\t\twhile (a[i] % pri[j] == 0) a[i] /= pri[j], num[i][cnt[i]]++;\n\t\t\tnum[i][cnt[i]] %= 3;\n\t\t\tif (!num[i][cnt[i]]) cnt[i]--;\n\t\t\telse x[i][0] *= pow(pri[j], num[i][cnt[i]]);\n\t\t}\n\t\tif (!cnt[i] && a[i] == 1) ans = 1;\n\t}\n\t// \u5254\u9664\u7acb\u65b9\u56e0\u5b50\uff0c\u6c42\u51fa\u6bcf\u4e2a sqrt[3]{w} \u4ee5\u5185\u7684\u56e0\u5b50\u7684\u6570\u91cf\n\t\n\t/*\n\trep(i, 1, n) {\n\t\tprintf(\"now here is %lld :\\n\", i);\n\t\tprintf(\"a[i] = %lld\\n\", a[i]);\n\t\trep(j, 0, cnt[i]) printf(\"%lld %lld\\n\", x[i][j], num[i][j]);\n\t\tputs(\"\");\n\t}\n\t*/\n\n\trep(i, 1, n) {\n\t\tif (!cnt[i] && a[i] == 1) continue;\n\t\tif ((int)sqrt(a[i]) * (int)sqrt(a[i]) == a[i])\n\t\t\tS[++siz] = i, Map[a[i] * x[i][0]]++;\n\t\telse if (a[i] > N) ans++;\n\t\telse S[++siz] = i, Map[a[i] * x[i][0]]++;\n\t}\n\t// \u5206\u7c7b\u8ba8\u8bba\n\t\n\t/*\n\tputs(\"There are some number in the S :\");\n\trep(i, 1, siz) printf(\"%lld \", S[i]);\n\tputs(\"\\n\");\n\t*/\n\t\n\trep(i, 1, siz) {\n\t\tint T = SupSet(i);\n\t\t// printf(\"The subset of %lldth number is %lld\\n\", i, T);\n\t\tif (Map.find(T) == Map.end())\n\t\t\tans += Map[a[S[i]] * x[S[i]][0]], Map[a[S[i]] * x[S[i]][0]] = 0;\n\t\telse {\n\t\t\tans += max(Map[a[S[i]] * x[S[i]][0]], Map[T]);\n\t\t\tMap[a[S[i]] * x[S[i]][0]] = Map[T] = 0;\n\t\t}\n\t}\n\t// \u5bfb\u627e\u8865\u96c6\u5e76\u8ba1\u7b97\u7b54\u6848\n\t\n\tprintf(\"%lld\\n\", ans);\n\n\treturn 0;\n}\n```\n",
        "postTime": 1630930936,
        "uid": 78645,
        "name": "C\u3000C\u3000A",
        "ccfLevel": 6,
        "title": "[AGC003D]Anticube \u9898\u89e3"
    },
    {
        "content": "\u9898\u89e3\u533a\u6ca1\u6709\u7528\u7f51\u7edc\u6d41\u6c42\u7b54\u6848\u7684\uff0c\u849f\u84bb\u5c31\u6765\u53d1\u4e00\u53d1\u9898\u89e3\u3002\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u7528\u7f51\u7edc\u6d41\uff0c\u5f53\u7136\u662f\u6ca1\u6709\u60f3\u5230\u76f4\u63a5\u7b97\u7b54\u6848\u7684\u65b9\u6cd5\uff0c\u800c\u4e14\u7f51\u7edc\u6d41\u4e5f\u5bb9\u6613\u60f3\u5230\u3002\n\n\u672c\u9898\u89e3\u5206\u6210\u4e24\u90e8\u5206\uff1a\u5206\u89e3\u8d28\u56e0\u6570\u4e0e\u7b54\u6848\u6c42\u89e3\u3002\n\n\u5728\u8fd9\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u8003\u8651\u4ec0\u4e48\u60c5\u51b5\u4e0b\uff0c\u4e24\u4e2a\u6570\u4e0d\u80fd\u88ab\u540c\u65f6\u9009\u62e9\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u8bbe $x=\\sum\\limits_{i=1}p_i^{a_i},y=\\sum\\limits_{i=1}p_i^{b_i}$\uff0c\u5219 $xy=\\sum_{i=1}p_i^{a_i+b_i}$\u3002\u5982\u679c $xy$ \u662f\u4e00\u4e2a\u5b8c\u5168\u7acb\u65b9\u6570\uff0c\u90a3\u4e48\u4e00\u5b9a\u6ee1\u8db3 $\\forall i,a_i+b_i\\equiv 0 \\pmod{3}$\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u5c06\u6240\u6709\u7684\u6ee1\u8db3 $\\forall i,a_i\\equiv b_i \\pmod{3}$ \u7684 $x,y$ \u89c6\u4f5c\u76f8\u540c\u7684\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u62ff\u91cd\u65b0\u5b9a\u4e49\u7684\u8fd9\u4e9b\u6570\u53bb\u8fdb\u884c\u5339\u914d\u3002\n\n## part 1 \u5206\u89e3\u8d28\u56e0\u6570\n\n\u7531\u4e8e\u503c\u57df\u4e3a $10^{10}$\uff0c\u6211\u4eec\u4e0d\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u6839\u53f7\u7b97\u6cd5\u5206\u89e3\u8d28\u56e0\u6570\uff0c\u53ef\u4ee5\u8003\u8651\u5982\u4e0b\u7b97\u6cd5\uff1a\n\n\u5bf9\u4e8e\u5f53\u524d\u6570 $x$\uff0c\u9996\u5148\u5c06\u6240\u6709\u5c0f\u4e8e\u7b49\u4e8e $\\sqrt[3]{x}$ \u7684\u8d28\u56e0\u6570\u5206\u89e3\uff0c\u8bbe\u5206\u89e3\u540e\u7684\u6570\u4e3a $x'$\u3002\u6613\u77e5 $x'$ \u7684\u7ec4\u6210\u6709\u4e09\u79cd\uff1a$1$ \u6216\u4e24\u4e2a\u8d28\u6570\u76f8\u4e58\u6216\u4e00\u4e2a\u8d28\u6570\u3002\n\n\u5982\u679c $x'\\leq 10^5$\uff0c\u6211\u4eec\u5c31\u5c06\u5176\u5269\u4e0b\u7684\u8d28\u56e0\u6570\u5206\u89e3\u51fa\u6765\uff0c\u6216\u5224\u5b9a\u5176\u4e3a\u8d28\u6570\u3002\u73b0\u5728\u6211\u4eec\u7ed9 $x'^2$ \u6807\u8bb0\u4e3a $x'$ \u6240\u6709\u8d28\u56e0\u6570\u7684\u5e73\u65b9\uff0c\u53ea\u6709 $x'^2$ \u624d\u80fd\u4e0e $x'$ \u7ec4\u6210\u4e00\u4e2a\u5b8c\u5168\u7acb\u65b9\u6570\u3002\n\n\u5982\u679c $x'> 10^5$\uff0c\u6211\u4eec\u5c31\u770b\u5b83\u6709\u6ca1\u6709\u88ab\u6807\u8bb0\u8fc7\u5373\u53ef\u3002\n\n## part 2 \u7f51\u7edc\u6d41\u5efa\u8fb9\n\n\u7531\u4e8e\u6211\u4eec\u91cd\u65b0\u5b9a\u4e49\u4e86\u6570\u7684\u76f8\u7b49\uff0c\u6613\u77e5\u4e00\u4e2a\u6570\u4e0e\u53e6\u4e00\u4e2a\u6570\u76f8\u4e58\u80fd\u7ec4\u6210\u5b8c\u5168\u7acb\u65b9\u6570\u7684\u5339\u914d\u662f\u552f\u4e00\u7684\uff0c\u5982\u679c\u6211\u4eec\u5c06\u4e58\u8d77\u6765\u80fd\u591f\u7ec4\u6210\u5b8c\u5168\u7acb\u65b9\u6570\u7684\u6570\u5bf9\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a $\\infty$\uff0c\u7136\u540e\u5bf9\u539f\u56fe\u67d3\u8272\uff0c\u6e90\u70b9\u5411\u6bcf\u4e2a\u767d\u70b9\u8fde\u63a5\u4e00\u6761\u5bb9\u91cf\u7b49\u4e8e\u5176\u6570\u91cf\u7684\u8fb9\uff0c\u6bcf\u4e2a\u9ed1\u70b9\u5411\u6c47\u70b9\u8fde\u63a5\u4e00\u6761\u5bb9\u91cf\u7b49\u4e8e\u5176\u6570\u91cf\u7684\u8fb9\uff0c\u8dd1\u6700\u5c0f\u5272\u5373\u53ef\uff0c\u7531\u4e8e\u662f\u4e8c\u5206\u56fe\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u4e3a $\\Theta(n\\sqrt{m})$\u3002\n\n\u6ce8\u610f\uff0c\u539f\u672c\u5c31\u4e3a\u5b8c\u5168\u7acb\u65b9\u6570\u7684\u6570\u53ea\u80fd\u7b97\u4e00\u4e2a\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a $\\Theta(10^{\\frac{10}{3}}n+n\\sqrt{m})$\n\n\u4ee3\u7801\u8fd8\u662f\u6bd4\u8f83\u53ef\u8bfb\u7684\uff0c\u7ec6\u8282\u5728\u4ee3\u7801\u91cc\u4e86\u3002\n\n```cpp\n//Linkwish's code\n#include<bits/stdc++.h>\n#define int long long\n#define fi first\n#define se second\nusing namespace std;\ntypedef const int ci;\ntypedef long long ll;\ntypedef pair<int,int> pii;\nconst int iinf=0x7fffffff;\nconst ll linf=4e18;\nusing namespace std;\nci N=100005,s=0,t=N-1,lim=100000;\nstruct edge{\n\tint to,w,de;\n\tinline edge(int x,int y,int z){to=x,w=y,de=z;}\n};\nvector<edge> e[N];\ninline void add(int x,int y,int w){\n\te[x].emplace_back(y,w,e[y].size());\n\te[y].emplace_back(x,0,e[x].size()-1);\n}\nint cnt[N],fl[N],num,tot;\ninline int np(){\n\tnum++,tot++;\n\treturn num;\n}\nint isap(int x,int val){\n\tif(x==t||!val)return val;\n\tint now=val,res;\n\tfor(edge &i:e[x]){\n\t\tif(i.w>0&&fl[x]==fl[i.to]+1){\n\t\t\tres=isap(i.to,min(i.w,now));\n\t\t\ti.w-=res,e[i.to][i.de].w+=res,now-=res;\n\t\t\tif(!now)return val;\n\t\t}\n\t}\n\tcnt[fl[x]]--;\n\tif(!cnt[fl[x]])fl[s]=tot;\n\tcnt[++fl[x]]++;\n\treturn val-now;\n}\ninline int work(){\n\tcnt[0]=tot;\n\tint ans=0;\n\twhile(fl[s]<tot)ans+=isap(s,iinf);\n\treturn ans;\n}\nbool is[N];\nint p[N],amt;\ninline void init(){\n\tmemset(is,1,sizeof is);\n\tis[1]=0;\n\tfor(int i=2;i<=lim;i++){\n\t\tif(is[i])p[++amt]=i;\n\t\tfor(int j=1;j<=amt&&i*p[j]<=lim;j++){\n\t\t\tis[i*p[j]]=0;\n\t\t\tif(i%p[j]==0)break;\n\t\t}\n\t}\n}\nmap<vector<pii>,pii> q;\nmap<int,vector<pii>> vis;\nmap<int,pii> tag;\nmap<int,bool> did;\nbool flag[N];\ninline vector<pii> rev(vector<pii> x){\n\tfor(pii &i:x)i.se=3-i.se;\n\treturn x;\n}\nint cub;\ninline void f(int x){\n\tif(vis.count(x))return ;\n\tvector<pii> now;\n\tint org=x;\n\tfor(int i=1;i<=amt&&p[i]*p[i]*p[i]<=x;i++){\n\t\tif(x%p[i]==0){\n\t\t\tint pk=0;\n\t\t\twhile(x%p[i]==0)x/=p[i],pk++;\n\t\t\tif(pk%3)now.push_back({p[i],pk%3});\n\t\t}\n\t}\n\tif(x<=lim){\n\t\tfor(int i=1;i<=amt&&p[i]*p[i]<=x;i++){\n\t\t\tif(x%p[i]==0){\n\t\t\t\tif(p[i]*p[i]==x){\n\t\t\t\t\tnow.push_back({p[i],2});\n\t\t\t\t\ttag[x*x]={p[i],p[i]};\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tnow.push_back({p[i],1});\n\t\t\t\t\tnow.push_back({x/p[i],1});\n\t\t\t\t\ttag[x*x]={p[i],x/p[i]};\n\t\t\t\t}\n\t\t\t\tx=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(x>1){\n\t\t\tnow.push_back({x,1});\n\t\t\ttag[x*x]={x,-1};\n\t\t}\n\t}\n\telse if(x>1)now.push_back({x,1});\n\tvis[org]=now;\n}\ninline void push(int x){\n\tif(did[x])return ;\n\tvector<pii> &now=vis[x];\n\tif(now.empty())return ;\n\tx=now.back().fi;\n\tif(x>lim&&tag.count(x)&&now.back().se==1){\n\t\tnow.pop_back();\n\t\tif(tag[x].se==-1)now.push_back({tag[x].fi,2});\n\t\telse if(tag[x].fi==tag[x].se)now.push_back({tag[x].fi,1});\n\t\telse now.push_back({tag[x].fi,2}),now.push_back({tag[x].se,2});\n\t}\n\tsort(now.begin(),now.end());\n\tdid[x]=1;\n}\ninline void match(int x){\n\tvector<pii> now=vis[x];\n\tif(!q.count(now)){\n\t\tpii &it=q[now];\n\t\tit.fi++,it.se=np();\n\t\tif(q.count(rev(now))&&now.size()){\n\t\t\tpii lst=q[rev(now)];\n\t\t\tflag[it.se]=flag[lst.se]^1;\n\t\t\tif(flag[lst.se])add(it.se,lst.se,iinf);\n\t\t\telse add(lst.se,it.se,iinf);\n\t\t}\n\t\telse flag[it.se]=0;\n\t}\n\telse if(now.size())q[now].fi++;\n\telse cub++;\n}\nint n,a[N];\nsigned main(){\n\ttot=2;\n\tinit();\n\tios::sync_with_stdio(0);\n\tcin.tie(0),cout.tie(0);\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)cin>>a[i];\n\tsort(a+1,a+1+n);\n\tfor(int i=1;i<=n;i++)f(a[i]);\n\tfor(int i=1;i<=n;i++)push(a[i]);\n\tfor(int i=1;i<=n;i++)match(a[i]);\n\tfor(auto &[x,y]:q){\n\t\tif(flag[y.se])add(y.se,t,y.fi);\n\t\telse add(s,y.se,y.fi);\n\t}\n\tcout<<n-cub-work();\n\treturn 0;\n}\n```\n",
        "postTime": 1672891634,
        "uid": 408180,
        "name": "LinkWish",
        "ccfLevel": 7,
        "title": "AGC003D\u9898\u89e3"
    },
    {
        "content": "\u4e00\u9053\u6570\u8bba\u76f8\u5173\u7684\u5206\u8ba8\u597d\u9898\u3002\n\n\u9996\u5148\u7acb\u65b9\u6570\u5177\u6709\u7684\u4e00\u4e2a\u6027\u8d28\u662f\uff0c\u6bcf\u4e00\u79cd\u8d28\u56e0\u5b50\u7684\u4e2a\u6570\u4e00\u5b9a\u662f\u4e09\u7684\u500d\u6570\u3002\n\n\u5173\u4e8e\u8d28\u56e0\u5b50\u6709\u4e00\u4e2a\u5f88\u5e7f\u6cdb\u7684\u6027\u8d28\u662f\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u6570 $x$\uff0c\u6700\u591a\u53ea\u6709\u4e00\u4e2a\u5927\u4e8e $\\sqrt{x}$ \u7684\u8d28\u56e0\u5b50\u3002\n\n\u6240\u4ee5\u8bbe\u9898\u4e2d $s$ \u7684\u4e0a\u754c\u4e3a $S$\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u5206\u89e3\u6bcf\u4e00\u4e2a $s_i$ \u7136\u540e\u6bd4\u8f83\uff0c\u5982\u679c $s_i$ \u5b58\u5728\u4e00\u4e2a\u5927\u4e8e $\\sqrt{S}$ \u7684\u8d28\u56e0\u5b50\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u663e\u7136\u4e0d\u53ef\u80fd\u548c\u5176\u4ed6\u6570\u4e58\u79ef\u51d1\u6210\u7acb\u65b9\u6570\u2014\u2014\u56e0\u4e3a\u5176\u4ed6\u6570\u6700\u591a\u4e5f\u53ea\u6709\u4e00\u4e2a\u76f8\u540c\u7684\u8d28\u56e0\u5b50\uff0c\u4e0d\u53ef\u80fd\u51d1\u6210\u4e09\u4e2a\uff1b\u7136\u540e\u968f\u4fbf\u600e\u4e48\u641e\u4e00\u4e0b\u3002\n\n\u4f46\u662f\u8fd9\u6837\u5355\u5206\u89e3\u8d28\u56e0\u5b50\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f $O(n\\sqrt{S})$ \u4e86\uff0c\u663e\u7136\u662f\u4e0d\u5bf9\u7684\u3002\n\n\u53ef\u4ee5\u8003\u8651\u8fdb\u4e00\u6b65\u6269\u5c55\u8fd9\u4e2a\u6027\u8d28\u5417\uff1f\u5bf9\u4e8e\u4e00\u4e2a\u6570 $x$\uff0c\u6700\u591a\u53ea\u6709\u4e24\u4e2a\u5927\u4e8e $\\sqrt[3]{x}$ \u7684\u8d28\u56e0\u5b50\u3002\n\n\u5982\u679c\u6211\u4eec\u80fd\u5229\u7528\u8fd9\u4e2a\u6027\u8d28\u8ba9\u65f6\u95f4\u590d\u6742\u5ea6\u57fa\u4e8e $O(n\\sqrt[3]{S})$\uff0c\u663e\u7136\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u600e\u4e48\u5229\u7528\u8fd9\u4e2a\u6027\u8d28\u5462\uff1f\u9996\u5148\u8003\u8651\u7b80\u5316\u95ee\u9898\uff0c\u5148\u679a\u4e3e $[1,\\sqrt[3]{S}]$\uff0c\u5c06\u6bcf\u4e00\u4e2a $s_i$ \u7684\u7acb\u65b9\u6839\u56e0\u5b50\u5e72\u6389\uff0c\u4fdd\u8bc1\u6bcf\u4e00\u79cd\u8d28\u56e0\u6570\u7684\u4e2a\u6570\u90fd\u5728\u4e24\u4e2a\u4ee5\u5185\uff0c\u5e76\u627e\u5230\u6bcf\u4e00\u4e2a $s_i$ \u6bcf\u4e00\u4e2a\u7acb\u65b9\u6839\u56e0\u5b50\u5269\u4e0b\u7684\u5177\u4f53\u4e2a\u6570\u3002\n\n\u7136\u540e\u6211\u4eec\u5f00\u59cb\u8fdb\u884c\u5206\u7c7b\u8ba8\u8bba\u3002\n\n- \u5bf9\u4e8e\u4e00\u4e2a\u6570 $x$\uff0c\u5982\u679c\u5b83\u62e5\u6709\u4e00\u4e2a\u5927\u4e8e $\\sqrt{n}$ \u7684\u8d28\u56e0\u5b50\uff0c\u663e\u7136\u4e0d\u4f1a\u548c\u5176\u4ed6\u4efb\u4f55\u6570\u51b2\u7a81\u3002\n- \u9664\u6b64\u4e4b\u5916\uff0c\u5b83\u8fd8\u53ef\u80fd\u62e5\u6709\u4e00\u4e2a\u6216\u8005\u4e24\u4e2a\u5927\u5c0f\u5728 $\\sqrt[3]{n}$ \u548c $\\sqrt{n}$ \u4e4b\u95f4\u7684\u8d28\u56e0\u5b50\uff0c\u90a3\u4e48\u663e\u7136\uff0c\u53ea\u6709\u5728\u8fd9\u4e2a\u8303\u56f4\u5185\u8d28\u56e0\u5b50\u5927\u5c0f\u76f8\u540c\uff0c\u4e14\u4e2a\u6570\u5206\u522b\u4e3a $1$ \u4e2a\u548c $2$ \u4e2a\u7684\u6570\u624d\u53ef\u80fd\u4f1a\u51b2\u7a81\u3002\u6240\u4ee5\u5047\u8bbe $x$ \u542b\u6709\u7684\u4e24\u4e2a\u5728\u8fd9\u4e2a\u8303\u56f4\u5185\u7684\u8d28\u56e0\u5b50\u5927\u5c0f\u4e0d\u540c\uff0c\u663e\u7136\u65e0\u6cd5\u548c\u5176\u5b83\u6570\u51d1\u5bf9\uff1b\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u6216\u8005\u6709\u4e24\u4e2a\u5927\u5c0f\u76f8\u540c\u7684\u8d28\u56e0\u5b50\uff0c\u624d\u53ef\u80fd\u53ef\u4ee5\u51d1\u5bf9\u3002\n- \u5bf9\u4e8e\u4e0d\u5b58\u5728 $\\sqrt[3]{n}$ \u4ee5\u4e0a\u8d28\u56e0\u5b50\u7684 $s_i$\uff0c\u53ea\u4f1a\u4e92\u76f8\u51b2\u7a81\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u5c06\u4ed6\u4eec\u5206\u4e86\u4e2a\u7c7b\uff0c\u5e76\u4e14\u6ce8\u610f\u5230\uff0c\u5982\u679c\u5c06\u6bcf\u4e00\u4e2a\u8d28\u56e0\u5b50\u7684\u4e2a\u6570\u90fd\u53d6\u6a21 $3$ \u4ee5\u540e\uff0c\u4ea7\u751f\u51b2\u7a81\u7684\u6570\u5e94\u8be5\u662f\u4e24\u4e24\u5bf9\u5e94\u7684\uff0c\u5373\u5bf9\u4e8e\u4e00\u4e2a\u6570 $x$\uff0c\u5982\u679c\u6211\u4eec\u5c06\u5b83\u7684\u6bcf\u4e00\u4e2a\u8d28\u56e0\u5b50\u7684\u4e2a\u6570\u90fd\u5bf9\u4e8e $3$ \u53d6\u4e2a\u5dee\uff0c\u5c31\u662f\u4f1a\u548c\u5b83\u4ea7\u751f\u51b2\u7a81\u7684\u6570\u3002\n\n\u90a3\u4e48\u8ba1\u7b97\u8d21\u732e\u7684\u65b9\u6848\u5c31\u660e\u4e86\u8d77\u6765\u4e86\u3002\n\n- \u7b2c\u4e00\u79cd\u6570\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8ba1\u5165\u8d21\u732e\uff1b\n\n- \u7b2c\u4e09\u79cd\u5219\u53ef\u4ee5\u5f00\u4e00\u4e2a map\uff0c\u5bf9\u4e8e\u5f53\u524d\u7684 $s_i$\uff08\u5df2\u7ecf\u5c06\u8d28\u56e0\u5b50\u4e2a\u6570\u53d6\u6a21\u8fc7\u7684\uff09\uff0c\u8003\u8651\u627e\u5230\u4f1a\u548c\u5176\u4ea7\u751f\u51b2\u7a81\u7684\u6570 $x$\uff0c\u5c06 $s_i$ \u6240\u5728\u9879\u52a0 $1$ \u540e\u548c $x$ \u6240\u5728\u9879\u53d6\u6700\u5927\u503c\u5373\u4e3a\u8fd9\u4e00\u5bf9\u503c\u5bf9\u4e8e\u7b54\u6848\u7684\u8d21\u732e\uff1b\n\n- \u7b2c\u4e8c\u79cd\u5219\u7c7b\u4f3c\uff0c\u542b\u6709\u4e24\u4e2a\u4e0d\u540c\u5927\u8d28\u56e0\u5b50\u65f6\u53ef\u4ee5\u76f4\u63a5\u8ba1\u5165\u8d21\u732e\uff1b\u5426\u5219\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5927\u8d28\u56e0\u5b50\u5206\u522b\u5f00\u4e00\u4e2a map\uff0c\u6216\u8005\u7528\u4e24\u4e2a\u5173\u952e\u8bcd\u67e5\u8be2 map \u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\sqrt[3]{n}+n\\log n)$.\n\n\u6ce8\u610f\u5bf9\u4e8e\u672c\u6765\u5c31\u662f\u7acb\u65b9\u6570\u7684\u6570\uff0c\u53ea\u80fd\u5b58\u5728\u4e00\u4e2a\uff0c\u9700\u8981\u7279\u5224\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n#define int long long\nconst int N=1e5;\nconst int SQ2=1e5;\nconst int SQ3=2154;\nint n,s[N+5],zhi[N+5],ztot2,ztot3,maxn,g[400],ans;\nbool izhi[N+5];\nmap<int,int> m0;\nmap<pair<int,int>,int> m1,m2;\nint read(){\n\tint w=0,f=1;\n\tchar c=getchar();\n\twhile (c>'9'||c<'0'){\n\t\tif (c=='-') f=-1;\n\t\tc=getchar();\n\t}\n\twhile (c>='0'&&c<='9'){\n\t\tw=(w<<3)+(w<<1)+(c^48);\n\t\tc=getchar();\n\t}\n\treturn w*f;\n} \nvoid init(){\n\tfor (int i=2;i<=SQ2;i++){\n\t\tif (!izhi[i]) zhi[++ztot2]=i;\n\t\tif (i==SQ3) ztot3=ztot2;\n\t\tfor (int j=1;j<=ztot2&&i*zhi[j]<=SQ2;j++){\n\t\t\tizhi[i*zhi[j]]=1;\n\t\t\tif (i%zhi[j]==0) break;\n\t\t}\n\t}\n}\nvoid solve(int x){\n\tmemset(g,0,sizeof(g));\n\tint sum1=1,sum2=1;\n\tfor (int i=1;i<=ztot3;i++){\n\t//\twhile (x%(zhi[i]*zhi[i]*zhi[i])==0) x/=(zhi[i]*zhi[i]*zhi[i]);\n\t\twhile (x%zhi[i]==0) x/=zhi[i],g[i]++;\n\t\tg[i]%=3;\n\t\tif (g[i]==1) sum1*=zhi[i],sum2*=zhi[i]*zhi[i];\n\t\telse if (g[i]==2) sum1*=zhi[i]*zhi[i],sum2*=zhi[i];\n\t}\n\tint p=sqrt(x);\n\tif (x>SQ3&&x<=SQ2&&izhi[x]==0){\n\t\tint zc1=++m1[make_pair(x,sum1)];\n\t\tint zc2=m2[make_pair(x,sum2)];\n\t\tif (zc1>zc2) ++ans;\n\t}else if (x>SQ2&&p*p==x&&izhi[p]==0){\n\t\tint zc1=++m2[make_pair(p,sum1)];\n\t\tint zc2=m1[make_pair(p,sum2)];\n\t\tif (zc1>zc2) ++ans;\n\t}else if (x==1){\n\t\tif (sum1==1&&sum2==1){\n\t\t\tif (m0[sum2]==0) ++ans;\n\t\t\tm0[sum2]=1;\n\t\t\treturn;\n\t\t}\n\t\tint zc1=++m0[sum1];\n\t\tint zc2=m0[sum2];\n\t\tif (zc1>zc2) ++ans;\n\t}else ++ans;\n}\nsigned main(){\n\tinit();\n\tn=read(); \n\tfor (int i=1;i<=n;i++) s[i]=read();\n\tfor (int i=1;i<=n;i++){\n\t\tsolve(s[i]);\n\t}\n\tcout<<ans<<\"\\n\";\n\treturn 0;\n}\n```",
        "postTime": 1666926212,
        "uid": 257621,
        "name": "\u7ffc\u5fb7\u5929\u5c0a",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 [AGC003D] Anticube"
    },
    {
        "content": "[AGC003D - AtCoder](https://atcoder.jp/contests/agc003/tasks/agc003_d)\n\n[AGC003D - Luogu](https://www.luogu.com.cn/problem/AT2004)\n\n> \u7ed9\u4f60 $n$ \u4e2a\u6570 $s_i$\uff0c\u9009\u62e9\u6700\u591a\u7684\u6570\uff0c\u4f7f\u5f97\u4efb\u610f\u4e24\u4e2a\u6570\u7684\u79ef\u90fd\u4e0d\u662f\u5b8c\u5168\u7acb\u65b9\u6570\u3002\n$1\\leq n\\leq10^5,1\\leq s_i\\leq10^{10}$\u3002\n> \n\n\u9996\u5148\u5c06\u6bcf\u4e2a $s_i$ \u62c6\u6210 $s'_ix_i^3$ \u7684\u5f62\u5f0f\uff0c\u6211\u4eec\u53d1\u73b0 $s'_is'_j$ \u662f\u5426\u4e3a\u5b8c\u5168\u7acb\u65b9\u6570\u4e0e $s_is_j$ \u662f\u5426\u4e3a\u5b8c\u5168\u7acb\u65b9\u6570\u662f\u7b49\u4ef7\u7684\uff0c\u6240\u4ee5\u76f4\u63a5\u62ff $s'$ \u66ff\u6362 $s$\uff0c\u4ec5\u9700\u679a\u4e3e $\\sqrt[3]{\\max s}$ \u4ee5\u5185\u7684\u8d28\u6570\u5373\u53ef\u3002\u540c\u65f6\u6bcf\u4e2a\u6570\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684\u6570\u4f7f\u5f97\u5b83\u4e24\u4e58\u79ef\u4e3a\u5b8c\u5168\u7acb\u65b9\u6570\u3002\n\n\u4e00\u5f00\u59cb\u5148\u7279\u5224 $s=1$ \u7684\u60c5\u51b5\uff0c\u6b64\u65f6\u53ea\u80fd\u62ff\u4e00\u4e2a\u3002\n\n\u4ee4 $z_i$ \u4e3a $s_i$ \u4e2d\u5927\u4e8e $\\sqrt[3]{\\max s}$ \u7684\u8d28\u56e0\u6570\u7684\u4e58\u79ef\u3002\n\n\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\uff1a\n\n1. $z_i=1$\uff1a\u8bb0\u5f55\u4e00\u4e0b $s_i$\u3002\n2. $z_i=p,p\\in(\\sqrt[3]{\\max s},\\sqrt{\\max s}]$\uff1a\u8bb0\u5f55\u4e00\u4e0b $s_i$\u3002\n3. $z_i=p^2,p\\in(\\sqrt[3]{\\max s},\\sqrt{\\max s}]$\uff1a\u8bb0\u5f55\u4e00\u4e0b $s_i$\uff0c\u53ea\u9700\u8981\u5229\u7528 sqrt \u5c31\u80fd\u5224\u65ad\u3002\n4. $z_i=pq,p,q\\in(\\sqrt[3]{\\max s},\\sqrt{\\max s}]$\uff1a\u65e0\u6cd5\u6784\u6210\u5b8c\u5168\u7acb\u65b9\u6570\uff0c\u76f4\u63a5\u52a0\u5165\u7b54\u6848\u3002\n5. $z_i=p,p\\in(\\sqrt{\\max s},\\infty]$\uff1a\u76f4\u63a5\u52a0\u5165\u7b54\u6848\u3002\n\n\u7136\u540e\u5c06\u4e0a\u9762\u88ab\u8bb0\u5f55\u7684\u6570\u585e\u8fdb\u4e00\u4e2a map \u91cc\u9762\uff0c\u91cd\u65b0\u5224\u65ad\u4e00\u4e0b\uff0c\u5982\u679c\u6709\u5bf9 $s_i$ \u51b2\u7a81\u5219\u9009\u62e9\u4e2a\u6570\u8f83\u591a\u7684\u90a3\u65b9\u3002\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <map>\n#include <stack>\nusing namespace std;\nint primes[10005], ptot; bool tags[100005];\nvoid prime(int n) {\n\tfor (int i = 2; i <= n; i++) {\n\t\tif (tags[i] == 0) primes[++ptot] = i;\n\t\tfor (int j = 1; j <= ptot && i * primes[j] <= n; j++) {\n\t\t\ttags[i * primes[j]] = 1; if (i % primes[j] == 0) break;\n\t\t}\n\t} \n}\nlong long s[100005], z[100005]; int y[100005][330]; bool is1[100005];\nstack<long long> clist; map<long long, int> mp;\nint main() {\n\tint n; scanf(\"%d\", &n); long long maxs = 0;\n\tfor (int i = 1; i <= n; i++) scanf(\"%lld\", &s[i]), maxs = max(maxs, s[i]);\n\tint sqrt3s = (int)pow(maxs, 1. / 3), sqrts = (int)sqrt(maxs);\n\tprime(sqrts); int ans = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\ty[i][0] = 1;\n\t\tfor (int j = 1; j <= ptot && primes[j] <= sqrt3s; j++) {\n\t\t\twhile (s[i] % primes[j] == 0) y[i][j]++, s[i] /= primes[j];\n\t\t\ty[i][j] %= 3;\n\t\t\tif (y[i][j]) y[i][0] *= primes[j];\n\t\t\tif (y[i][j] == 2) y[i][0] *= primes[j];\n\t\t}\n\t\tz[i] = s[i]; s[i] *= y[i][0]; is1[i] = s[i] == 1; if (is1[i]) ans = 1;\n\t}\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (is1[i]) continue;\n\t\tif (z[i] == 1) clist.push(i), mp[s[i]]++;\n\t\telse if (z[i] <= sqrts && tags[z[i]] == 0) clist.push(i), mp[s[i]]++;\n\t\telse if ((long long)sqrt(z[i]) * (int)sqrt(z[i]) == z[i]) clist.push(i), mp[s[i]]++;\n\t\telse ans++;\n\t}\n\twhile (clist.empty() == 0) {\n\t\tint u = clist.top();\n\t\tclist.pop();\n\t\tlong long invnum = 1;\n\t\tif ((long long)sqrt(z[u]) * (int)sqrt(z[u]) == z[u]) invnum = sqrt(z[u]);\n\t\telse invnum = z[u] * z[u];\n\t\tfor (int j = 1; j <= ptot && primes[j] <= sqrt3s; j++) {\n\t\t\tif (y[u][j]) invnum *= primes[j];\n\t\t\tif (y[u][j] == 1) invnum *= primes[j];\n\t\t}\n\t\tif (mp[invnum]) {\n\t\t\tans += max(mp[s[u]], mp[invnum]);\n\t\t\tmp[s[u]] = 0; mp[invnum] = 0;\n\t\t}\n\t\telse {\n\t\t\tans += mp[s[u]]; mp[s[u]] = 0;\n\t\t}\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1660616951,
        "uid": 109114,
        "name": "_l_l_",
        "ccfLevel": 8,
        "title": "\u3010\u9898\u89e3\u3011\u3010\u6570\u5b66\u3011 AGC003D \u3010Anticube\u3011"
    },
    {
        "content": "## \u5206\u6790\n\n\u63d0\u4f9b\u4e00\u4e2a\u4ece\u5efa\u56fe\u5165\u624b\u7684\u505a\u6cd5\uff0c\u4e2a\u4eba\u611f\u89c9\u8fd9\u4e2a\u505a\u6cd5\u6bd4\u8f83\u63a5\u8fd1\u672c\u8d28\uff0c\u800c\u4e14\u8fc7\u7a0b\u5341\u5206\u7b80\u6d01\u3002\n\n\u8003\u8651\u5bf9\u6bcf\u4e2a\u6570\u8fdb\u884c\u8d28\u56e0\u6570\u5206\u89e3\uff0c\u5e76\u5bf9\u6240\u6709\u8d28\u56e0\u5b50\u7684\u6b21\u6570 $\\% 3$\u3002\n\n\u4e0b\u9762\u5f00\u59cb\u5efa\u56fe\uff1a\u5c06 $n$ \u4e2a\u6570\u770b\u4f5c $n$ \u4e2a\u70b9\uff0c\u8003\u8651\u5bf9\u4e8e\u4e24\u4e2a\u6570\uff0c\u5982\u679c\u79ef\u4e3a\u7acb\u65b9\u6570\uff0c\u90a3\u4e48\u5c31\u8fde\u8fb9\uff0c\u8bb0\u8fd9\u4e2a\u56fe\u4e3a $G$\u3002\u53d1\u73b0\u8fd9\u9898\u672c\u8d28\u4e0a\u5c31\u662f\u6c42 $G$ \u7684**\u6700\u5927\u72ec\u7acb\u96c6**\u3002\uff08\u4e5f\u5c31\u662f\u9009\u51fa\u6700\u5927\u7684\u70b9\u96c6\u4f7f\u4efb\u610f\u4e24\u70b9\u95f4\u6ca1\u6709\u8fde\u8fb9\uff09\n\n\u7136\u540e\u5bf9\u56fe $G$ \u8fdb\u884c\u62c6\u5206\uff1a\n\n1. \u5bf9\u4e8e\u6240\u6709\u7acb\u65b9\u6570\uff0c\u53ef\u4ee5\u53d1\u73b0\u4ed6\u4eec\u4e4b\u95f4\u6784\u6210\u4e86\u4e00\u4e2a\u5b8c\u5168\u56fe\uff0c\u56e0\u6b64\u6700\u591a\u53ea\u80fd\u9009\u4e00\u4e2a\u70b9\u3002\n\n2. \u800c\u5bf9\u4e8e\u5176\u5b83\u6570\u800c\u8a00\uff0c\u4ed6\u4eec\u4e4b\u95f4\u6784\u6210\u4e00\u4e2a\u4e8c\u5206\u56fe\uff0c\u800c\u4e14\u8fd9\u4e2a\u4e8c\u5206\u56fe\u6bd4\u8f83\u7279\u6b8a\uff1a\u8bbe\u6211\u4eec\u6709 $x$ \u4e2a\u70b9\u8d28\u56e0\u6570\u5206\u89e3\u5e76 $\\%3$ \u7ed3\u679c\u90fd\u662f $C = \\prod p_i ^ {c_i}$\uff0c\u90a3\u4e48\u8fd9 $x$ \u4e2a\u70b9\u80fd\u4e14\u4ec5\u80fd\u548c\u5206\u89e3\u7ed3\u679c\u4e3a $C' = \\prod p_i ^ {(3-c_i)\\% 3}$ \u7684\u70b9\uff08\u8bbe\u6709 $y$ \u4e2a\uff09\u8fde\u8fb9\uff08\u4e5f\u5c31\u662f $x \\times y$ \u6761\u8fb9\uff09\u3002\u56e0\u4e3a\u4e8c\u5206\u56fe**\u6700\u5927\u72ec\u7acb\u96c6\u5927\u5c0f**\u7b49\u4e8e\u70b9\u7684\u603b\u6570\u51cf\u53bb\u6700\u5927\u5339\u914d\u6570\u76ee\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u4e8c\u5206\u56fe\u800c\u8a00\uff0c\u6700\u5927\u5339\u914d\u663e\u7136\u662f $\\min(x, y)$\uff0c\u6545\u8fd9\u6837\u7684\u4e8c\u5206\u56fe\u7684\u6700\u5927\u72ec\u7acb\u96c6\u5927\u5c0f\u5c31\u662f $x+y-\\min(x, y) = \\max(x, y)$\u3002\n\n> \u4e3a\u4ec0\u4e48\u975e\u7acb\u65b9\u6570\u4e4b\u95f4\u4e00\u5b9a\u6784\u6210\u4e8c\u5206\u56fe\u5462\uff1f\n\u5047\u8bbe\u975e\u7acb\u65b9\u6570\u4e4b\u95f4\u5b58\u5728\u5947\u73af\uff0c\u90a3\u4e48\u6211\u4eec\u4ece\u73af\u4e0a\u627e\u5230\u4e00\u70b9 $u$\uff0c\u4e0d\u59a8\u8bbe\u5b83\u6709\u4e00\u4e2a\u8d28\u56e0\u5b50 $p$ \u6b21\u6570\u4e3a $1$\uff0c\u90a3\u4e48\u6cbf\u73af\u4ece $u$ \u51fa\u53d1\u7ecf\u8fc7\u7684\u6bcf\u4e2a\u70b9\u6b21\u6570\u4e00\u5b9a\u662f $1,2,1...$\uff0c\u53ef\u4ee5\u53d1\u73b0\u5947\u73af\u4f1a\u5bfc\u81f4\u4e0e $u$ \u8fde\u63a5\u7684\u70b9\u6b21\u6570\u4e5f\u4e3a $1$\uff0c\u90a3\u4e48\u4e0d\u80fd\u6784\u6210\u7acb\u65b9\u6570\uff0c\u77db\u76fe\u3002\n\n## \u5b9e\u73b0\n\u8d28\u56e0\u6570\u5206\u89e3\uff08\u91c7\u7528 $\\texttt{pollard-rho}$\uff09\uff0c\u7136\u540e\u5c06\u6bcf\u4e2a\u6570\u7684\u5206\u89e3\u7ed3\u679c\u5206\u7ec4\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u7ec4\u90fd\u50cf\u4e0a\u8ff0\u8fc7\u7a0b\u4e00\u6837\u627e\u5230 $\\max(x, y)$ \u5e76\u52a0\u5165\u7b54\u6848 $res$ \u4e2d\u5373\u53ef\uff0c\u5f53\u7136\u5982\u679c\u5b58\u5728\u7acb\u65b9\u6570\u90a3\u4e48\u7b54\u6848 $+1$\u3002\n\n```cpp\n// Problem: D - Anticube\n// Contest: AtCoder - AtCoder Grand Contest 003\n// URL: https://atcoder.jp/contests/agc003/tasks/agc003_d\n// Memory Limit: 256 MB\n// Time Limit: 5000 ms\n// \n// Powered by CP Editor (https://cpeditor.org)\n\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define debug(x) cerr << #x << \": \" << (x) << endl\n#define rep(i,a,b) for(int i=(a);i<=(b);i++)\n#define dwn(i,a,b) for(int i=(a);i>=(b);i--)\n#define pb push_back\n#define all(x) (x).begin(), (x).end()\n\n#define x first\n#define y second\n#define int long long\nusing pii = pair<int, int>;\nusing ll = long long;\n\ninline void read(int &x){\n    int s=0; x=1;\n    char ch=getchar();\n    while(ch<'0' || ch>'9') {if(ch=='-')x=-1;ch=getchar();}\n    while(ch>='0' && ch<='9') s=(s<<3)+(s<<1)+ch-'0',ch=getchar();\n    x*=s;\n}\n\nconst int N=2e5+5, s=20;\n\nmt19937_64 rd(time(NULL));\nint fac[N], cnt;\n\ninline int mul(int a, int b, int mod){\n\treturn (__int128)a*b%mod;\n}\n\ninline int fpow(int x, int p, int mod){\n\tint res=1;\n\tfor(; p; p>>=1, x=mul(x, x, mod)) if(p&1) res=mul(res, x, mod);\n\treturn res;\n}\n\ninline bool rabin(int n, int a){\n\tint d=n-1, ct=0; \n\twhile(~d&1) d>>=1, ct++;\n\tint x=fpow(a, d, n);\n\tif(x==1) return true;\n\trep(i,1,ct){\n\t\tif(x==n-1 || x==1) return true;\n\t\tx=mul(x, x, n); \n\t}\n\treturn false;\n}\n\n\ninline bool isp(int n){\n\tif(n<2) return false;\n\tstatic const int pri[] = {2, 3, 5, 7, 11, 13, 31, 61, 24251};\n\tfor(auto x: pri) {\n\t\tif(n==x) return true;\n\t\tif(!rabin(n, x)) return false;\n\t}\n\treturn true;\n}\n\ninline int f(int x, int c, int mod){\n\treturn (mul(x, x, mod)+c)%mod;\n}\n\ninline int pollard_rho(int n){\n\tint c=rd()%(n-1)+1; int v1=0;\n\tfor(int s=1, t=2; ; s<<=1, t<<=1){\n\t\tint pro=1, v2=v1, cnt=0;\n\t\trep(i,s+1,t){\n\t\t\tv2=f(v2, c, n), pro=mul(pro, abs(v1-v2), n), cnt++;\n\t\t\tif(cnt%127==0){\n\t\t\t\tcnt=0; int d=__gcd(pro, n);\n\t\t\t\tif(d>1) return d;\n\t\t\t}\n\t\t}\n\t\tint d=__gcd(pro, n);\n\t\tif(d>1) return d;\n\t\tv1=v2;\n\t}\n}\n\ninline void find(int n){\n\tif(isp(n)) return fac[++cnt]=n, void();\n\tint p;\n\twhile((p=pollard_rho(n))==n) ;\n\tfind(p), find(n/p);\n}\n\nmap<int, int> get(map<int, int> mp){\n\tfor(auto &[x, y]: mp) y=3-y;\n\treturn mp;\n}\n\nsigned main(){\n\tint n; read(n);\n\t\n\tmap<map<int, int>, int> c;\n\tint res=0;\n\trep(i,1,n){\n\t\tcnt=0;\n\t\tint x; read(x);\n\t\tmap<int, int> mp;\n\t\tif(x==1){\n\t\t\tres=1;\n\t\t\tcontinue;\n\t\t}\n\t\tfind(x);\n\t\trep(j,1,cnt){\n\t\t\tint f=fac[j];\n\t\t\tint p=0;\n\t\t\twhile(x%f==0) p++, x/=f;\n\t\t\tif(p%3) mp[f]=p%3;\n\t\t}\t\n\t\t\n\t\tif(!mp.size()){\n\t\t\tres=1;\n\t\t\tcontinue;\n\t\t}\n\t\tc[mp]++;\n\t}\n\n\tset<map<int, int>> st;\n\tfor(auto [x, y]: c) if(!st.count(x)){\n\t\tauto e=get(x);\n\t\tres+=max(c[e], y);\n\t\tst.insert(e);\n\t}\n\tcout<<res<<endl;\n\t\n\treturn 0;\n}\n```",
        "postTime": 1650432182,
        "uid": 138960,
        "name": "Tenshi",
        "ccfLevel": 0,
        "title": "AGC003D"
    },
    {
        "content": "\u6709\u4e00\u8bf4\u4e00\u8fd9\u9898\u6ca1\u5230\u9ed1\u9898\u96be\u5ea6\u5427\uff0c\u7b97\u662f\u6bd4\u8f83\u5e38\u89c4\u7684\u6570\u8bba\u9898\uff08\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u6b63\u6574\u6570 $x$ \u6211\u4eec\u8003\u8651\u4e24\u79cd\u6570\uff0c$Pair(x)$ \u8868\u793a\u4e0e $x$ \u76f8\u4e58\u4e3a\u7acb\u65b9\u6570\u7684\u6700\u5c0f\u6b63\u6574\u6570\uff0c\u800c $Norm(x)$ \u8868\u793a $x$ \u53bb\u6389\u6240\u6709\u7acb\u65b9\u56e0\u5b50\u540e\u7684\u6b63\u6574\u6570\u3002\u53ef\u4ee5\u53d1\u73b0\u4e24\u4e2a\u6570\u5982\u679c\u62e5\u6709\u540c\u6837\u7684 $Norm$ \uff0c\u90a3\u4e48\u4e5f\u4f1a\u6709\u540c\u6837\u7684 $Pair$ \uff0c\u4e5f\u5c31\u662f\u8fd9\u4e24\u4e2a\u6570\u672c\u8d28\u4e0a\u662f\u76f8\u540c\u7684\u3002\u800c\u5982\u679c\u4e00\u4e2a\u6570\u7684 $Norm$ \u662f\u53e6\u4e00\u4e2a\u6570\u7684 $Pair$ \uff0c\u90a3\u4e48\u8fd9\u4e24\u6570\u663e\u7136\u4e0d\u80fd\u540c\u65f6\u9009\u5165\u7b54\u6848\u3002\u4e8e\u662f\u7b54\u6848\u5c31\u662f\u5bf9\u4e8e $s[i]$ \u4e2d\u6240\u6709\u672c\u8d28\u4e0d\u540c\u7684 $x$ \uff0c\u6c42 $s[i]$ \u4e2d\u672c\u8d28\u4e3a $Norm(x)$ \u6216 $Pair(x)$ \u7684\u4e2a\u6570\u7684\u6700\u5927\u503c\u3002\n\n\u4e0b\u9762\u8003\u8651\u5982\u4f55\u6c42\u89e3 $Norm(x)$ \uff0c\u5176\u5b9e\u53ea\u9700\u8981\u7b5b\u6389\u6240\u6709\u7acb\u65b9\u56e0\u5b50\u5c31\u53ef\u4ee5\u4e86\uff0c\u4e5f\u5c31\u662f $\\le 10^\\frac{10}{3}\\approx 2160$ \u7684\u8d28\u6570\u7684\u7acb\u65b9\u3002\u7b5b\u5b8c\u4e4b\u540e\u628a\u8fd9\u4e9b\u8d28\u6570\u5269\u4e0b\u7684\u6b21\u5e42\u4e5f\u4ece $x$ \u4e2d\u7b5b\u6389\uff0c\u5e76\u8d21\u732e\u7ed9 $Pair(x)$ \u3002\u7531\u4e8e\u5269\u4e0b\u7684\u56e0\u5b50\u5927\u4e8e\u539f\u6765 $x^\\frac{1}{3}$ \uff0c\u63a8\u51fa\u6700\u540e\u5269\u4e0b\u7684 $x$ \u53ea\u6709\u51e0\u7c7b\uff1a\n\n- $x$ \u4e3a\u8d28\u6570\n- $x$ \u4e3a\u8d28\u6570\u7684\u5e73\u65b9\n- $x$ \u4e3a\u4e0d\u540c\u8d28\u6570\u7684\u79ef\n\n\u5bf9\u4e8e\u7b2c\u4e00\u7c7b\u548c\u7b2c\u4e09\u7c7b\uff0c\u5bb9\u6613\u5f97\u51fa $Pair(x)=x^2$ \u3002\u800c\u5bf9\u4e8e\u7b2c\u4e8c\u7c7b\uff0c$Pair(x)=\\sqrt x$ \u3002\u6700\u540e\u628a\u8fd9\u4e2a\u6570\u52a0\u5165 $Norm(x)$ \u7684\u6876\u91cc\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(N\\frac{(MAX s_i)^\\frac13}{\\log MAX s_i})+O(N\\log N)$\n\n```cpp\n#include <bits/stdc++.h>\n#define rep(i,a,b) for(int i=(a);i<=(b);++i)\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nconst int N=1e5+10;\nll n,pri[N],tot;\nll a[N],b[N],ans;\nbool vis[N];\nmap<ll,ll>mp;\nint main(){\n    n=read();\n    rep(i,2,2160){\n        if(!vis[i])pri[++tot]=i;\n        for(int j=1;j<=tot&&pri[j]*i<=2160;j++){\n            vis[i*pri[j]]=1;\n            if(i%pri[j]==0)break;\n        }\n    }\n    rep(i,1,n){\n        scanf(\"%lld\",&a[i]);\n        ll norm=1,pair=1;\n        rep(j,1,tot){\n            ll cube=pri[j]*pri[j]*pri[j];\n            while(a[i]%cube==0)a[i]/=cube;\n        }\n        ++mp[a[i]];norm=a[i];\n        rep(j,1,tot){\n            if(a[i]%pri[j]!=0)continue;\n            if(a[i]%(pri[j]*pri[j]))pair*=pri[j]*pri[j];\n            else pair*=pri[j];\n            while(a[i]%pri[j]==0)a[i]/=pri[j];\n        }\n        ll sqr=(ll)sqrt(a[i]);\n        if(sqr*sqr!=a[i])pair*=a[i]*a[i];\n        else pair*=sqr;\n        a[i]=norm;b[i]=pair;\n    }\n    rep(i,1,n){\n        if(a[i]==1)continue;\n        ans+=max(mp[a[i]],mp[b[i]]);\n        mp[a[i]]=mp[b[i]]=0;\n    }\n    printf(\"%lld\\n\",ans+!!mp[1]);\n    return 0;\n}\n```\n\n",
        "postTime": 1622001823,
        "uid": 218501,
        "name": "ETHANK",
        "ccfLevel": 0,
        "title": "[AGC003D] Anticube \u9898\u89e3"
    },
    {
        "content": "\u7ed9\u51fa\u4e00\u79cd\u590d\u6742\u5ea6\u66f4\u4f18\u7684 $\\text{Pollard-rho}$ \u505a\u6cd5\u3002\n\n\u9996\u5148\u5206\u89e3\u8d28\u56e0\u5b50\uff0c\u53ef\u4ee5\u53d1\u73b0\u5982\u679c\u4e24\u6570\u7684\u6240\u6709\u8d28\u56e0\u5b50\u6b21\u6570\u52a0\u8d77\u6765\u6a21 $3$ \u7b49\u4e8e $0$\uff0c\u5219\u4e24\u6570\u4e2d\u53ea\u80fd\u9009\u4e00\u4e2a\uff0c\u90a3\u4e48\u5c31\u9009\u6570\u91cf\u591a\u7684\u90a3\u4e2a\uff0c\u6ce8\u610f\u672c\u8eab\u662f\u5b8c\u5168\u7acb\u65b9\u6570\u7684\u6570\u6700\u591a\u9009\u4e00\u4e2a\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(ns^{\\frac{1}{4}}+n\\log n)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ldb;\n\nconst int N = 100005;\n\nll qmul(ll a, ll b, ll mod) {\n\treturn ((a * b - (ll)((ldb) a * b / mod + 0.5) * mod) % mod + mod) % mod;\n}\nll qpow(ll a, ll b, ll mod) {\n\tll t = 1;\n\twhile(b) {\n\t\tif(b & 1) t = qmul(t, a, mod);\n\t\ta = qmul(a, a, mod); b >>= 1;\n\t}\n\treturn t;\n}\nbool miller_rabin(ll n, int p) {\n\tll d = n - 1; int r = 0;\n\twhile((d & 1) == 0) {\n\t\td >>= 1; ++r;\n\t}\n\tll t = qpow(p, d, n);\n\tif(t == 1) return 1;\n\tfor(int i = 0; i < r; ++i) {\n\t\tif(t == n - 1) return 1;\n\t\tt = qmul(t, t, n);\n\t}\n\treturn 0;\n}\nbool is_prime(ll n) {\n\tconst int prime[8] = {2, 3, 5, 7, 11, 13, 17, 37};\n\tif(n <= 1) return 0;\n\tfor(int i = 0; i < 8; ++i) {\n\t\tif(n == prime[i]) return 1;\n\t\tif(n % prime[i] == 0) return 0;\n\t\tif(!miller_rabin(n, prime[i])) return 0;\n\t}\n\treturn 1;\n}\nll R(ll n) {\n\tstatic int _ = (srand(19260817), 1);\n\tll n1 = rand(), n2 = rand(), n3 = rand(), n4 = rand();\n\treturn (n1 | (n2 << 16) | (n3 << 32) | (n4 << 48)) % n;\n}\nll F(ll x, ll c, ll mod) {\n\treturn (qmul(x, x, mod) + c) % mod;\n}\nll gcd(ll a, ll b) {\n\tif(b == 0) return a;\n\treturn gcd(b, a % b);\n}\nll pollard_rho(ll n) {\n\tll c = R(n - 1) + 1, s = 0; int k = 1;\n\twhile(1) {\n\t\tll t = s, d = 1;\n\t\tfor(int i = 1; i <= k; ++i) {\n\t\t\tt = F(t, c, n);\n\t\t\td = qmul(d, abs(t - s), n);\n\t\t\tif(i % 127 == 0 && gcd(d, n) != 1) return gcd(d, n);\n\t\t}\n\t\tif(gcd(d, n) != 1) return gcd(d, n);\n\t\ts = t; k <<= 1;\n\t}\n}\nmap<ll, int> s;\nvoid decompose(ll n, int c) {\n\tif(n == 1 || c % 3 == 0) return;\n\tif(is_prime(n)) {\n\t\ts[n] += c; return;\n\t}\n\tll t = n;\n\twhile(t == n) t = pollard_rho(n);\n\tint k = 0;\n\twhile(n % t == 0) {\n\t\tn /= t; ++k;\n\t}\n\tdecompose(n, c);\n\tdecompose(t, c * k);\n}\n\npair<pair<ll, ll>, pair<ll, ll> > t[N];\nint main() {\n\tint n;\n\tscanf(\"%d\", &n);\n\tmap<pair<ll, ll>, int> cnt;\n\tfor(int i = 1; i <= n; ++i) {\n\t\tll a;\n\t\tscanf(\"%lld\", &a);\n\t\ts.clear();\n\t\tdecompose(a, 1);\n\t\tmap<ll, int>::iterator it = s.begin();\n\t\tll sum1 = 0, pro1 = 1, sum2 = 0, pro2 = 1;\n\t\twhile(it != s.end()) {\n\t\t\tif((*it).second % 3 == 1) {\n\t\t\t\tsum1 += (*it).first;\n\t\t\t\tpro1 *= (*it).first;\n\t\t\t\tsum2 += (*it).first * (*it).first;\n\t\t\t\tpro2 *= (*it).first * (*it).first;\n\t\t\t}\n\t\t\telse if((*it).second % 3 == 2) {\n\t\t\t\tsum1 += (*it).first * (*it).first;\n\t\t\t\tpro1 *= (*it).first * (*it).first;\n\t\t\t\tsum2 += (*it).first;\n\t\t\t\tpro2 *= (*it).first;\n\t\t\t}\n\t\t\tit++;\n\t\t}\n\t\tt[i] = make_pair(make_pair(sum1, pro1), make_pair(sum2, pro2));\n\t\tcnt[make_pair(sum1, pro1)]++;\n\t}\n\tint sum = 0;\n\tfor(int i = 1; i <= n; ++i) {\n\t\tif(t[i].first == t[i].second && cnt[t[i].first] > 0) {\n\t\t\tsum++; cnt[t[i].first] = 0;\n\t\t}\n\t\telse if(cnt[t[i].first] > cnt[t[i].second]) {\n\t\t\tsum += cnt[t[i].first]; cnt[t[i].first] = 0; cnt[t[i].second] = 0;\n\t\t}\n\t\telse {\n\t\t\tsum += cnt[t[i].second]; cnt[t[i].first] = 0; cnt[t[i].second] = 0;\n\t\t}\n\t}\n\tprintf(\"%d\\n\", sum);\n\treturn 0;\n}\n```",
        "postTime": 1617080959,
        "uid": 350079,
        "name": "\u98de\u91ce\u540c\u5b66",
        "ccfLevel": 0,
        "title": "[AGC003D] Anticube \u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8d28\u56e0\u6570\u7684\u6307\u6570\u6211\u4eec\u90fd\u53ef\u4ee5 $\\%3$ \uff0c\u56e0\u4e3a\u6210\u4e3a\u5b8c\u5168\u7acb\u65b9\u6570\u53ea\u8981\u6bcf\u4e2a\u6307\u6570\u90fd\u662f\u4e09\u7684\u500d\u6570\u3002\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u5904\u7406\u5b8c\u540e\u6570\uff0c\u6211\u4eec\u90fd\u8bb0\u5f55\u4e0b\u5b83\u7684\u4e2a\u6570\uff0c\u800c\u4e0d\u80fd\u4e0e\u5b83\u540c\u65f6\u9009\u7684\u6570\u53ea\u6709\u6bcf\u4e00\u9879\u4e0e\u5176\u6307\u6570\u548c\u5747\u4e3a $3$ \u7684\u6570\uff0c\u6211\u4eec\u53ea\u8981\u5bf9\u4e8e\u6bcf\u4e00\u7ec4\u4e0d\u80fd\u540c\u65f6\u9009\u7684\u6570\u90fd\u53ea\u9009\u62e9\u4e24\u9879\u4e2d\u4e2a\u6570\u8f83\u591a\u7684\u4e00\u7c7b\u5373\u53ef\uff0c\u800c\u5bf9\u4e8e $1$ \u663e\u7136\u80fd\u4e14\u53ea\u80fd\u9009\u4e00\u4e2a\u3002\n\n```\n#include <iostream>\n#include <cstdio>\n#include <map>\n#include <cmath>\nusing namespace std;\nconst int N = 1e5 + 10;\nint n;\nlong long s[N];\nint num;\nint sf[N];\nlong long pri[N];\nlong long a[N], b[N];\nmap<long long, long long>ma;\nint main()\n{\n\tscanf(\"%d\", &n);\n\tsf[0] = sf[1] = 1;\n\tfor (int i = 2; i < 5010; ++ i)\n\t{\n\t\tif(sf[i] == 0)\n\t\t{\n\t\t\tpri[++ num] = i;\n\t\t\tfor (int j = 2 * i; j < 5010; j += i)\n\t\t\t{\n\t\t\t\tsf[j] = 1;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 1; i <= n; ++ i)\n\t{\n\t\tlong long o;\n\t\tscanf(\"%lld\", &o);\n\t\tlong long now = 1, dy = 1;\n\t\tfor (int i = 1; i <= num; ++ i)\n\t\t{\n\t\t\tint tot = 0;\n\t\t\twhile(o % pri[i] == 0)\n\t\t\t{\n\t\t\t\to /= pri[i];\n\t\t\t\t++ tot;\n\t\t\t}\n\t\t\ttot %= 3;\n\t\t\tif(tot)\n\t\t\t{\n\t\t\t\tfor (int j = 1; j <= tot; ++ j)\n\t\t\t\tnow *= pri[i];\n\t\t\t\tfor (int j = tot + 1; j <= 3; ++ j)\n\t\t\t\tdy *= pri[i];\n\t\t\t}\n\t\t}\n\t\tnow *= o;\n\t\tif((long long)sqrt(o) * (long long)sqrt(o) != o)\n\t\tdy *= o * o;\n\t\telse\n\t\tdy *= sqrt(o);\n\t\t++ ma[now];\n\t\ta[i] = now;\n\t\tb[i] = dy;\n\t}\n\tlong long ans = 0;\n\tfor (int i = 1; i <= n; ++ i)\n\t{\n\t\tif(a[i] == 1)continue;\n\t\tans += max(ma[a[i]], ma[b[i]]);\n\t\tma[a[i]] = ma[b[i]] = 0;\n\t}\n\tans += ma[1] > 0;\n\tprintf(\"%lld\", ans);\n}\n```\n",
        "postTime": 1610776430,
        "uid": 111728,
        "name": "\u5e7b\u5f71\u661f\u575a\u5f3a",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 AT2004 \u3010[AGC003D] Anticube\u3011"
    },
    {
        "content": "\u795e\u4ed9\u9898\u3002\n\n\u7531\u4e8e\u65f6\u95f4\u9650\u5236 $5\\text s$\uff0c\u6211\u4eec\u53ef\u4ee5\u6574\u70b9\u602a\u7684\uff0c\u6bd4\u5982\u6839\u53f7\u5206\u89e3\u8d28\u56e0\u5b50\u3002\n\n\u4f46\u662f\u76f4\u63a5\u5206\u89e3\u662f $O(n\\sqrt w)$ \u7684\uff0c\u503c\u57df\u4e3a $w$ \u5373 $10^{10}$\uff0c\u80af\u5b9a\u4f1a\u70b8\u3002\n\n\u6bdb\u4f30\u4f30\u4e00\u4e0b\uff0c\u5982\u679c\u9700\u8981\u5206\u89e3\u8d28\u56e0\u6570\uff0c\u5927\u6982\u53ea\u80fd\u5206\u89e3\u5230 $O(\\sqrt[3]{w})$ \u7684\u8d28\u6570\u3002\n\n\u6211\u4eec\u628a\u5c0f\u4e8e $\\sqrt[3] w$ \u7684\u8d28\u6570\u8bb0\u4e3a $p_1,p_2,...,p_m$\uff0c\u663e\u7136 $s_i$ \u80fd\u591f\u8868\u793a\u4e3a $\\prod p_k^{q_k}\\times t$ \u7684\u5f62\u5f0f\u3002\u90a3\u4e48 $t$ **\u4e0d\u53ef\u80fd**\u6709\u6b21\u6570\u5927\u4e8e\u7b49\u4e8e $3\n$ \u7684\u8d28\u56e0\u5b50\u3002\n\n\u7531\u4e8e\u8981\u53d6\u51fa\u5c3d\u91cf\u591a\u7684\u6570\uff0c\u8003\u8651\u5efa\u7acb\u6620\u5c04\uff0c\u8bb0\u5f55\u5f62\u5982 $a_i=\\prod p_k^{q_k\\ \\text{mod}\\ 3}\\times t$  \u7684\u6570\u7684\u4e2a\u6570\u3002\u548c $a_i$ \u80fd\u7ec4\u6210\u7acb\u65b9\u6570\u7684 $b_i$ \u5c31\u4e00\u5b9a\u5f62\u5982 $b_i=\\prod p_k^{-q_k\\ \\text{mod}\\ 3}\\times t'$\uff0c\u5176\u4e2d $t\\times t'$ \u4e3a\u5b8c\u5168\u7acb\u65b9\u6570\u3002\n\n\u5047\u5982\u6211\u4eec\u77e5\u9053 $t'$ \u7684\u503c\uff0c\u5c06\u6240\u6709 $a_i$ \u6254\u8fdb map \u91cc\uff0c\u5411\u5bf9\u5e94\u7684 $b_i$ \u8fde\u53cc\u5411\u8fb9\uff0c\u4e24\u8fb9\u70b9\u6743\u5747\u4e3a\u51fa\u73b0\u6b21\u6570\uff0c\u7b54\u6848\u5c31\u662f\u5e26\u6743\u6700\u5927\u72ec\u7acb\u96c6\u3002\n\n\u6211\u4eec\u53d1\u73b0\u6bcf\u4e2a $a_i$ \u4e0e $b_i$ \u662f**\u4e00\u4e00\u5bf9\u5e94**\u7684\uff0c\u8fd9\u4e2a\u56fe\u5176\u5b9e\u662f\u4e2a\u4e8c\u5206\u56fe\uff0c\u6bcf\u4e2a\u8fde\u901a\u5757\u91cc\u9762\u53ea\u6709\u4e00\u6761\u8fb9\uff0c\u8d2a\u5fc3\u53d6\u4e24\u8fb9\u6743\u503c\u8f83\u5927\u7684\u5373\u53ef\u3002\u73b0\u5728\u7684\u95ee\u9898\u53d8\u6210\u4e86\u6839\u636e $t$ \u5982\u4f55\u6c42 $t'$\u3002\n\n\u7531\u4e8e $t$ \u7684\u8d28\u56e0\u5b50**\u5168\u90e8\u5927\u4e8e** $\\sqrt[3] w$\uff0c\u90a3\u4e48\u663e\u7136 $t$ **\u81f3\u591a\u5305\u542b** $2$ \u4e2a\u8d28\u56e0\u5b50\uff0c\u90a3\u4e48 $t$ \u5c31\u53ea\u6709\u4e09\u79cd\u8868\u793a\uff1a$t=p/pq/p^2$\uff0c$p,q$ \u5747\u4e3a\u8d28\u6570\u3002\n\n\u6211\u4eec\u5c06\u6839\u53f7\u7684\u7cbe\u795e **\u8d2f \u5f7b \u5230 \u5e95**\uff0c\u8003\u8651\u6839\u53f7\u5206\u6cbb\uff1a\n\n1. $t\\le \\sqrt w(t\\neq 1)$\uff1a\n\n\u663e\u7136 $t$ \u53ea\u80fd\u8868\u793a\u6210 $p$ \u7684\u5f62\u5f0f\uff0c\u6240\u4ee5 $t'=p^2$\u3002\n\n1. $t>\\sqrt w$\uff1a\n\n- \u82e5 $t=pq$\uff0c\u5219 $t'=p^2q^2$\uff0c\u8d85\u8fc7\u4e86 $w$\uff0c\u4e0d\u7528\u7ba1\u3002\n- \u82e5 $t=p$\uff0c\u5219 $t'=p^2$\uff0c\u4e5f\u8d85\u8fc7\u4e86 $w$\uff0c\u4e5f\u4e0d\u7528\u7ba1\u3002\n- \u82e5 $t=p^2$\uff0c\u5219 $t'=p$\uff0c\u7b26\u5408\u6761\u4ef6\u3002\n\n\u4e8e\u662f\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u5224\u65ad $t$ \u662f\u5426\u662f\u5e73\u65b9\u6570\u5373\u53ef\u3002\n\n\u7136\u540e\u5c31\u505a\u5b8c\u4e86\uff0c$1$ \u7684\u60c5\u51b5\u8981\u8ba8\u8bba\u4e00\u4e0b\u3002\n\n[\u8bc4\u6d4b\u8bb0\u5f55\u3002](https://atcoder.jp/contests/agc003/submissions/38875546)",
        "postTime": 1676337851,
        "uid": 306573,
        "name": "Ender32k",
        "ccfLevel": 0,
        "title": "AGC003D Anticube"
    },
    {
        "content": "\u9996\u5148\uff0c\u53ef\u4ee5\u628a\u5bf9\u7b54\u6848\u6ca1\u6709\u5f71\u54cd\u7684\u7acb\u65b9\u56e0\u5b50\u5168\u90e8\u7b5b\u6389\u3002\n\n\u5269\u4e0b\u7684\u6570\u53ef\u4ee5\u88ab\u8868\u793a\u6210 $a^2\\times b$ \u7684\u5f62\u5f0f\u3002\u8fd9\u91cc\uff0c$b$ \u4e0d\u542b\u5e73\u65b9\u56e0\u5b50\u3002\n\n\u663e\u7136\u7684\uff0c\u8fd9\u91cc\u7684 $\\min\\{a,b\\}\\leq a_i^{\\frac{1}{3}}$\u3002\u5176\u4e2d\uff0c\u8bb0 $a_i$ \u4e3a $s_i$ \u7b5b\u6389\u7acb\u65b9\u56e0\u5b50\u540e\u7684\u7ed3\u679c\u3002\n\n\u5728\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e $j=1\\sim a_i^{\\frac{1}{3}}$ \uff0c\u5bf9\u4e8e $j$ \u4f5c\u4e3a $a$ \u6216 $b$ \u5206\u5f00\u8ba8\u8bba\uff0c\u5176\u4e2d\uff0c\u82e5 $a_i\\not = 1$\uff0c\u6700\u540e\u53ea\u8981\u6ee1\u8db3\u6c42\u51fa\u7684 $a$ \u6700\u5927\uff0c\u5c31\u53ef\u4ee5\u4fdd\u8bc1 $b$ \u4e2d\u4e0d\u542b\u5e73\u65b9\u56e0\u5b50\uff0c\u56e0\u4e3a\u82e5 $b$ \u4e2d\u542b\u5e73\u65b9\u56e0\u5b50\uff0c\u90fd\u53ef\u4ee5\u6709\u4e00\u79cd\u65b9\u6848\uff0c\u4f7f\u5f97 $a$ \u6bd4\u539f\u6765\u7684\u66f4\u5927\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $a_i$ \u6240\u4ee3\u8868\u7684\u6570\u5bf9 $(a,b)$\uff0c\u53ea\u6709\u6570\u5bf9 $(b,a)$ \u4f1a\u4e0e\u4e4b\u51b2\u7a81\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528 map \u7edf\u8ba1\u6bcf\u4e2a\u6570\u5bf9\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u6700\u540e\u7b54\u6848\u7d2f\u52a0\u4e0a $\\max\\{cnt_{(a,b)},cnt_{(b,a)}\\}$ \u5373\u53ef\u3002\n\n\u8bb0\u5f97 $a=b=1$ \u7684\u60c5\u51b5\u8981\u5206\u5f00\u8ba8\u8bba\u3002\n\n[Code](https://atcoder.jp/contests/agc003/submissions/37924814)",
        "postTime": 1673353387,
        "uid": 482642,
        "name": "hank0402",
        "ccfLevel": 0,
        "title": "AGC003D Anticube"
    },
    {
        "content": "\n\u4ee5\u524d\u505a\u8fc7\u4e00\u4e2a\u5047\u7684Pollard-Rho\u7ec3\u4e60\u9898\uff0c\u597d\u50cf\u662fPOI2010\u7684\u4ec0\u4e48\u975e\u51e1\u56e0\u5b50\u5565\u7684\u9898\uff0c\u90a3\u9898\u7528Pollard-Rho\u5149\u8363T\u4e86\uff0c\u5f53\u65f6\u5b66\u4e60\u4e86\u4e00\u4e0b\u9898\u89e3\uff0c\u53d1\u73b0\u4e86\u4e00\u79cd\u5947\u5999\u5206\u89e3\u6cd5\u3002\u597d\u50cf\u8fd9\u9898\u521a\u597d\u80fd\u7528\n\n\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a\u6570a\uff0c\u6211\u4eec\u5c06\u5b83\u7684\u8d28\u56e0\u6570\u5206\u89e3\u51fa\u6765\uff0c\u7136\u540e\u6240\u6709\u8d28\u56e0\u5b50\u7684\u5e42\u6b21\u5bf93\u53d6\u6a21\uff0c\u518d\u4e58\u56de\u6765\u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u6570x\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u82e5\u89c4\u5b9a\u8d28\u56e0\u5b50\u5e42\u6b21\u5c0f\u4e8e\u7b49\u4e8e3\uff0c\u90a3\u4e48\u9009\u4e86x\u540e\u4e0d\u80fd\u9009\u7684\u6570\u5c31\u53ea\u6709\u552f\u4e00\u7684\u4e00\u4e2a\n\n\u82e5a\u6309\u4e0a\u8ff0\u7b97\u6cd5\u5f97\u5230x\uff0cb\u6309\u4e0a\u8ff0\u7b97\u6cd5\u5f97\u5230y\uff0c\u9009\u4e86x\u540e\u4e0d\u80fd\u9009y\uff0c\u90a3\u4e0d\u96be\u53d1\u73b0\u9009\u4e86a\u540e\u4e0d\u80fd\u9009b\u3002\u8be5\u7ed3\u8bba\u5bf9\u4efb\u610f\u80fd\u901a\u8fc7\u4e0a\u8ff0\u7b97\u6cd5\u7b97\u51fax\u3001y\u7684a\u3001b\u5747\u6210\u7acb\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u6240\u6709\u7684x\uff0c\u7edf\u8ba1\u51fa\u6309\u4e0a\u8ff0\u7b97\u6cd5\u80fd\u7b97\u51fa\u5b83\u7684a\u6709\u591a\u5c11\u4e2a\uff0c\u8bb0\u4f5c\u201cx\u7684\u6570\u91cf\u201d\uff0c\u7528map\u5b58\u50a8\u5373\u53ef\u3002\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2aa\uff0c\u6309\u4e0a\u8ff0\u7b97\u6cd5\u7b97\u51fax\uff0c\u518d\u7b97\u51fa\u9009\u4e86x\u4e4b\u540e\u4e0d\u80fd\u9009\u7684\u6570y\uff0c\u6211\u4eec\u5728x\u548cy\u4e2d\u9009\u4e00\u4e2a\u6570\u91cf\u66f4\u591a\u7684\uff0c\u518d\u6253\u4e0a\u5df2\u9009\u6807\u8bb0\u5c31\u884c\u4e86\u3002\u56e0\u4e3ax\u548cy\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\uff0c\u6240\u4ee5\u8fd9\u4e2a\u8d2a\u5fc3\u7b56\u7565\u7684\u6b63\u786e\u6027\u662f\u663e\u7136\u7684\n\n\u73b0\u5728\u95ee\u9898\u662f\u5982\u4f55\u5bf9\u4e8e\u4e00\u4e2a\u6570x\uff0c\u7b97\u51fa\u5b83\u5bf9\u5e94\u7684x\n\n\u8003\u8651\u6734\u7d20\u7684\u8d28\u56e0\u6570\u5206\u89e3\uff0c\u90a3\u975e\u5e38\u5bb9\u6613\u5b9e\u73b0\uff0c\u53ea\u8981\u4e8b\u5148\u628a1e5\u5185\u7684\u8d28\u6570\u7b5b\u51fa\u6765\u5c31\u884c\u4e86\u3002\u53ef\u662f\u90a3\u6837\u590d\u6742\u5ea6\u663e\u7136\u662f\u4e0d\u53ef\u63a5\u53d7\u7684\uff0c\u4e8e\u662f\u8003\u8651\u4e4b\u524d\u505a\u8fc7\u7684\u90a3\u9898\u7c7b\u4f3c\u7684\u65b9\u6cd5\n\n\u6211\u4eec\u53ea\u7b5b\u51fa\u4e09\u6b21\u6839\u7ea7\u522b\u7684\u8d28\u6570\uff0c\u7136\u540e\u5bf9\u8fd9\u4e9b\u8d28\u6570\u8dd1\u4e00\u904d\u5206\u89e3\u3002\u5206\u89e3a\u4e4b\u540e\u6709\u56db\u79cd\u60c5\u51b5\uff1a\n\n1. a\u53d8\u6210\u4e861\u3002\u6b64\u65f6\u5df2\u7ecf\u5206\u89e3\u5e72\u51c0\u4e86\uff0c\u76f4\u63a5\u7b97x\u5373\u53ef\n2. a\u662f\u4e00\u4e2a\u5927\u4e8e\u4e8c\u6b21\u6839\u7ea7\u522b\u7684\u8d28\u6570\u3002\u663e\u7136x\u76f4\u63a5\u7b49\u4e8ea\uff0c\u4e0d\u80fd\u9009\u7684\u5c31\u662fa\u5e73\u65b9\n3. a\u662f\u4e24\u4e2a\u4ecb\u4e8e\u4e09\u6b21\u6839\u4e0e\u4e8c\u6b21\u6839\u7ea7\u522b\u4e4b\u95f4\u7684\u4e0d\u540c\u8d28\u6570\u4e4b\u79ef\u3002\u5904\u7406\u65b9\u5f0f\u540c\u60c5\u51b52\n4. a\u662f\u4e00\u4e2a\u4ecb\u4e8e\u4e09\u6b21\u6839\u4e0e\u4e8c\u6b21\u6839\u7ea7\u522b\u4e4b\u95f4\u7684\u8d28\u6570\u5e73\u65b9\u3002\u663e\u7136x\u8fd8\u662fa\uff0c\u4f46\u662f\u9009\u4e86x\u4e4b\u540e\u4e0d\u80fd\u9009\u7684\u6570\u662fsqrt(x)\n\n\u5bf9\u4e8e\u60c5\u51b52\u548c\u60c5\u51b53\uff0c\u6211\u4eec\u6ca1\u5fc5\u8981\u53bb\u533a\u5206\u5b83\uff0c\u53ea\u8981\u5b83\u4e0d\u7b49\u4e8e1\uff0c\u53c8\u4e0d\u662f\u5b8c\u5168\u5e73\u65b9\u6570\uff0c\u90a3\u5c31\u6309\u90a3\u6837\u7684\u65b9\u5f0f\u53bb\u5904\u7406\u5c31\u884c\u4e86\n\n\u6b64\u5916\uff0c\u5728\u6240\u6709\u7acb\u65b9\u6570\u4e2d\uff0c\u81f3\u591a\u53ea\u80fd\u9009\u4e00\u4e2a\uff0c\u56e0\u6b64\u8d2a\u5fc3\u9009\u53d6\u65f6\u8981\u628ax=1\u7684\u60c5\u51b5\u7279\u5224\u6389\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\ntypedef long long LL;\nconst int S=(1<<20)+5;\nchar buf[S],*H,*T;\ninline char Get()\n{\n    if(H==T) T=(H=buf)+fread(buf,1,S,stdin);\n    if(H==T) return -1;return *H++;\n}\ninline LL read()\n{\n    LL x=0;char c=Get();\n    while(!isdigit(c)) c=Get();\n    while(isdigit(c)) x=x*10+c-'0',c=Get();\n    return x;\n}\n\nconst int N=100010;\nLL a[N],b[N][2];\nbool mask[3010];\nint prm[3010],tot=0,n;\nunordered_map<LL,int> cc;\nunordered_map<LL,bool> fucked;\n\nLL maxc(const LL &a,const LL &b){return cc[a]>cc[b]?a:b;}\n\nvoid preprework()\n{\n    for(int i=2;i<=2200;i++)\n    {\n        if(mask[i]) continue;\n        prm[++tot]=i;\n        for(int j=i;j<=2200;j+=i)\n            mask[j]=1;\n    }\n}\n\nvoid prework()\n{\n    for(int i=1;i<=n;i++)\n    {\n        LL x=1,y=1;\n        for(int j=1;j<=tot;j++)\n        {\n            if(a[i]%prm[j]) continue;\n            int cnt=0;\n            while(a[i]%prm[j]==0)\n                a[i]/=prm[j],cnt++;\n            if(!(cnt%=3)) continue;\n            for(int k=1;k<=cnt;k++) x=x*prm[j];\n            for(int k=cnt+1;k<=3;k++) y=y*prm[j];\n        }\n        LL t=(LL)sqrt(a[i]);\n        if(t*t==a[i]) x=x*t*t,y=y*t;\n        else x=x*a[i],y=y*a[i]*a[i];\n        b[i][0]=x;b[i][1]=y;\n        if(!cc.count(x)) cc[x]=1;\n        else cc[x]++;\n    }\n}\n\nint main()\n{\n    LL ans=0;n=read();\n    for(int i=1;i<=n;i++) a[i]=read();\n    preprework();prework();\n    for(int i=1;i<=n;i++)\n    {\n        LL c1=b[i][0],c2=b[i][1];\n        if(fucked[c1]||fucked[c2]) continue;\n        LL x=maxc(c1,c2);fucked[x]=1;\n        ans+=(x==1)?1:cc[x];\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n```\n\n",
        "postTime": 1540285894,
        "uid": 20158,
        "name": "Ebola",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 AT2004 \u3010Anticube\u3011"
    }
]