[
    {
        "content": "## \u601d\u8def\n\u524d\u7f6e\u77e5\u8bc6\uff1a\u5e76\u67e5\u96c6\u3002\n\n\u4e0d\u8fde\u901a\uff0c\u5373\u5168\u90e8\u4e0d\u518d\u4e00\u4e2a\u8054\u901a\u5757\u3002\u9898\u76ee\u8981\u8ba9 $k$ \u6700\u5c0f\uff0c\u8003\u8651\u4ece\u56fe\u4e2d\u7684\u8054\u901a\u5757\u4e0b\u624b\u3002\n\n\u5224\u8054\u901a\uff0c\u4ee5\u53ca\u8054\u901a\u5757\uff0c\u7b2c\u4e00\u4e2a\u60f3\u5230\u7684\u5c31\u662f\u5e76\u67e5\u96c6\uff0c\u5e76\u4e14\u5e76\u67e5\u96c6\u4e5f\u80fd\u8fc7\u3002\n\n\u5982\u4f55\u8ba9 $k$ \u6700\u5c0f\u5462\uff1f\u90a3\u4e48\u5c31\u8d2a\u5fc3\uff0c\u6bcf\u6b21\u5728\u6bcf\u4e2a\u8054\u901a\u5757\u4e2d\u9009\u4e00\u4e2a\u8282\u70b9\uff0c\u6784\u6210\u4e00\u4e2a\u6bcf\u4e2a\u8282\u70b9\u90fd\u4e0d\u8fde\u901a\u7684\u7ec4\u3002\n\n\u90a3\u4e48\u7ec4\u7684\u4e2a\u6570\u5c31\u662f\u6700\u5927\u7684\u8054\u901a\u5757\u7684\u8282\u70b9\u6570\u3002\n\n\u5982\u4f55\u5b58\u50a8\u8054\u901a\u5757\u7684\u8282\u70b9\u6570\u5462\uff1f\u7528\u4e00\u4e2a\u6570\u7ec4 $s$\uff0c\u6211\u4eec\u7528 $s_i$ \u8868\u793a\u5728\u8282\u70b9 $i$ \u6240\u5904\u8054\u901a\u5757\u7684\u8282\u70b9\u6570\uff0c\u5728\u5efa\u56fe\u7684\u540c\u65f6\u8ba1\u7b97\u5373\u53ef\u3002\n\n## code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=114514*2;\nint fa[N],num,n,m,x,y,data,s[N],ans;\n//fa[i]\u8868\u793a\u8282\u70b9i\u7684\u7956\u5148\uff0csize[i]\u8868\u793a\u8282\u70b9i\u6240\u5728\u8054\u901a\u5757\u7684\u8282\u70b9\u6570\u3002 \nint find(int x)\n{\n    return x==fa[x]?x:fa[x]=find(fa[x]);//\u5e76\u67e5\u96c6\u6a21\u677f \n}\nint main()\n{\n    for(int i=1;i<N;i++)\n    {\n        fa[i]=i;\n        s[i]=1;//\u5e76\u67e5\u96c6\u521d\u59cb\u5316\u3002\n    }\n    cin>>n>>m;\n    for(int i=1;i<=m;i++)\n    {\n        cin>>x>>y;\n        if(find(x)!=find(y))\n        {\n            s[find(y)]+=s[find(x)];//\u5efa\u56fe\u7684\u540c\u65f6\u8ba1\u7b97\u8054\u901a\u5757\u5927\u5c0f\u3002 \n        }\n        fa[find(x)]=find(y);\n    }\n    for(int i=1;i<=n;i++) ans=max(ans,s[i]);//\u5bfb\u627e\u7b54\u6848\u3002 \n    cout<<ans<<endl;\n    return 0;\n}\n```\n",
        "postTime": 1684485110,
        "uid": 809249,
        "name": "guyushikunkun",
        "ccfLevel": 0,
        "title": "[ABC177D] Friends \u9898\u89e3"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\u73b0\u5728\u6709 $n$ \u4e2a\u70b9\uff0c$m$ \u6761\u8fb9\u7684\u4e0d\u8fde\u901a\u56fe\uff0c\u73b0\u5728\u9700\u8981\u4f60\u628a\u8fd9\u4e2a\u4e0d\u8fde\u901a\u56fe\u5206\u6210 $k$ \u4e2a\u7ec4\uff0c\u4f7f\u5f97\u6bcf\u7ec4\u4e2d\u7684\u5143\u7d20\u4e92\u76f8\u4e0d\u8fde\u901a\uff0c\u5e76\u4e14\u4f7f\u5f97 $k$ \u7684\u503c\u6700\u5c0f\u3002\n## \u601d\u8def\n\u4e0d\u96be\u53d1\u73b0\uff0c\u5728\u672c\u9898\u4e2d\uff0c\u6700\u4f18\u89e3\u6cd5\u5c31\u662f\u628a\u6bcf\u4e00\u4e2a\u8fde\u901a\u56fe\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6570\u5408\u8d77\u6765\u5316\u6210\u4e00\u7ec4\uff0c\u8fd9\u6837\u4f7f\u5f97\u7b54\u6848\u4e3a\u6700\u5927\u8fde\u901a\u5757\u7684\u5927\u5c0f\uff0c\u8fd9\u6837\u4e5f\u662f\u6700\u4f18\u7684\u3002\u8003\u8651\u4f7f\u7528\u5e76\u67e5\u96c6\u628a\u8fde\u901a\u5757\u5b58\u50a8\u8d77\u6765\uff0c\u6bcf\u6b21\u5728\u8f93\u5165\u65f6\u5408\u5e76\u5b58\u50a8\u8fde\u901a\u5757\u5927\u5c0f\u5373\u53ef\u3002\n## Code\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=2e5+10;\nint n,m;\nint f[maxn],ans[maxn];\nint res;\nint find(int x){\n\tif(f[x]==x)return x;\n\treturn f[x]=find(f[x]);\n}\nsigned main(){\n\tcin >> n >> m;\n\tfor(int i=1;i<=n;++i){\n\t\tf[i]=i;\n\t\tans[i]=1;\n\t}\n\twhile(m--){\n\t\tint a,b;\n\t\tcin >> a >> b;\n\t\tint finda=find(a),findb=find(b);\n\t\tf[finda]=findb;\n\t\tif(finda!=findb){\n\t\t\tans[findb]+=ans[finda];\n\t\t}\n\t}\n\tfor(int i=1;i<=n;++i){\n\t\tres=max(res,ans[i]);\n\t}\n\tcout << res << endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1683106913,
        "uid": 525141,
        "name": "_shine_",
        "ccfLevel": 0,
        "title": "Friends"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/AT_abc177_d)\n\n\u5f88\u597d\u60f3\u5230\uff0c\u7ef4\u62a4\u4e24\u4e2a\u70b9\u662f\u5426\u8054\u901a\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\u91cc\u6709 $x$ \u4e2a\u70b9\uff0c\u5219\u8fd9 $x$ \u4e2a\u70b9\u81f3\u5c11\u8981\u5728 $x$ \u7ec4\u91cc\uff0c\u7531\u6b64\u53ef\u89c1\uff0c$k$ \u7684\u6700\u5c0f\u503c\u4e3a\u6700\u5927\u8fde\u901a\u5757\u7684\u5927\u5c0f\uff0c\u540c\u6837\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2e5 + 5;\nint fa[N], siz[N];\nint find(int x)\n{\n\tif (fa[x] == x) return x;\n\treturn fa[x] = find(fa[x]);\n}\nint main(){\n\tint n, m;\n\tcin >> n >> m;\n\tfor (int i = 1; i <= n; i++)\n\t\tfa[i] = i, siz[i] = 1;\n\twhile (m--)\n\t{\n\t\tint x, y;\n\t\tcin >> x >> y;\n\t\tint tx = find(x), ty = find(y);\n\t\tfa[tx] = ty;\n\t\tif (tx != ty) siz[ty] += siz[tx];\n\t}\n\tint ans = 0;\n\tfor (int i = 1; i <= n; i++)\n\t\tans = max(ans, siz[i]);\n\tcout << ans;\n\treturn 0;\n}\n\n```\n",
        "postTime": 1682143261,
        "uid": 731925,
        "name": "happy_zero",
        "ccfLevel": 0,
        "title": "AT_abc177_d \u9898\u89e3"
    },
    {
        "content": "- [\u6d1b\u8c37\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/AT_abc177_d)\n- [AtCoder \u9898\u76ee\u4f20\u9001\u95e8](https://atcoder.jp/contests/abc177/tasks/abc177_d)\n\n## \u601d\u8def\u5206\u6790\n\n\u5f88\u5bb9\u6613\u60f3\u5230\uff0c\u5982\u679c\u628a\u670b\u53cb\u5173\u7cfb\u770b\u6210\u56fe\u7684\u8fb9\u7684\u8bdd\uff0c\u7b54\u6848\u5c31\u662f\u6700\u5927\u7684\u8fde\u901a\u5757\u7684\u8282\u70b9\u6570\u91cf\u3002\n\n\u7ef4\u62a4\u8fde\u901a\u5757\uff0c\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u5e76\u67e5\u96c6\u3002\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n\u6ce8\u610f\u91cd\u8fb9\uff08\u4e0d\u8fc7\u597d\u50cf\u5e76\u4e0d\u9700\u8981\u50cf\u4ee3\u7801\u4e2d\u90a3\u6837\u5f00\u4e00\u4e2a `map`\uff0c\u5b9e\u9645\u4e0a `find_root` \u4e4b\u540e\u5982\u679c\u6839\u76f8\u7b49\u4e0d\u5408\u5e76\u5c31\u884c\u4e86\uff09\u3002\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<utility>\n#include<cstdio>\n#include<map>\n#define mkp(a,b) make_pair(a,b)\nusing namespace std;\nconst int maxn=2e5+2;\nint n,m,fa[maxn],cnt[maxn],mx=0;\nmap<pair<int,int>,int> mp;\nint find_root(int a){\n\tif(fa[a]==a) return a;\n\treturn fa[a]=find_root(fa[a]);\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;++i) fa[i]=i;\n\tfor(int i=1,a,b;i<=m;++i){\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tif(a>b) swap(a,b);\n\t\tif(mp[mkp(a,b)]==1) continue;//\u53bb\u91cd\u8fb9\n\t\tmp[mkp(a,b)]=1,fa[find_root(a)]=find_root(b);//\u5408\u5e76\n\t}\n\tfor(int i=1;i<=n;++i) ++cnt[find_root(i)],mx=max(cnt[find_root(i)],mx);//\u7edf\u8ba1\u7b54\u6848\n\tprintf(\"%d\\n\",mx);\n\treturn 0;\n}\n```",
        "postTime": 1673261203,
        "uid": 324350,
        "name": "xiaomuyun",
        "ccfLevel": 5,
        "title": "ABC177D Friends \u9898\u89e3"
    },
    {
        "content": "\u663e\u7136\u7b54\u6848\u5e94\u8be5\u4e3a\u6700\u5927\u8fde\u901a\u5757\u7684\u5927\u5c0f\u3002\n\n\u8bc1\u660e\uff1a\u663e\u7136\u81f3\u5c11\u9700\u8981\u6700\u5927\u8fde\u901a\u5757\u7684\u5927\u5c0f\u624d\u80fd\u4f7f\u5f97\u8fd9\u4e2a\u8fde\u901a\u5757\u88ab\u5212\u5206\uff0c\u5426\u5219\u6839\u636e\u62bd\u5c49\u539f\u7406\u4e0d\u53ef\u80fd\u4f7f\u5f97\u8fd9\u4e2a\u8fde\u901a\u5757\u5168\u90e8\u88ab\u5206\u5165\u4e0d\u540c\u7684\u7ec4\u3002\u800c\u8fd9\u4e2a\u7b54\u6848\u4e3a\u4e0a\u9650\u4e5f\u662f\u663e\u7136\u7684\uff0c\u4e00\u79cd\u6784\u9020\u65b9\u6848\u662f\u5c06\u7b2c $ i $ \u4e2a\u5143\u7d20\u4e22\u5165\u7b2c $ i $ \u4e2a\u7ec4\uff0c\u663e\u7136\u8fd9\u4e48\u505a\u4e24\u4e24\u5c31\u4e0d\u5b58\u5728\u8fde\u8fb9\u3002\n\n\u6240\u4ee5\u53ea\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u5e76\u67e5\u96c6\u5b9e\u73b0\u67e5\u8be2\u6700\u5927\u8fde\u901a\u5757\u5927\u5c0f\uff0c\u4e0d\u52a0\u6309\u79e9\u5408\u5e76\u4f18\u5316\u7684\u5355\u6b21\u5e76\u67e5\u96c6\u64cd\u4f5c\u662f $ \\mathcal{O}(\\log{n}) $ \u7684\uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $ \\mathcal{O}(m\\log{n}) $\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\u5f53\u7136\u6ce8\u610f\u4e0b\u9762\u7684\u4ee3\u7801\u4e3a\u4e86\u7701\u4e8b\u6ca1\u5199\u6b63\u5e38\u7684\u5e76\u67e5\u96c6\u3002\n\n\u5b9e\u73b0\u4e0a\u53ef\u4ee5\u6bcf\u6b21\u5408\u5e76\u7684\u65f6\u5019\u7ef4\u62a4\u5b50\u6811\u5927\u5c0f\uff0c\u7528\u5e26\u6743\u5e76\u67e5\u96c6\u5408\u5e76\uff0c\u4e5f\u53ef\u4ee5\u5168\u90e8\u5408\u5e76\u5b8c\u4e4b\u540e\u5c06\u76f8\u540c\u7236\u4eb2\u7684\u70b9\u585e\u8fdb\u6876\u91cc\uff0c\u7136\u540e\u7edf\u8ba1\u6876\u91cc\u7b54\u6848\u7684\u6700\u5927\u503c\uff0c\u8fd9\u91cc\u91c7\u7528\u7684\u662f\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\nconst int maxn=2e5+10;\nconst int mod=1e18;\nint n,q,u,v,c;\nchar op;\nstruct Splay\n{\n    int ch[maxn][2],fa[maxn],siz[maxn],val[maxn],sum[maxn],add[maxn],mul[maxn],rev[maxn];\n    void clear(int x)\n    {\n        ch[x][0]=ch[x][1]=fa[x]=siz[x]=val[x]=sum[x]=add[x]=rev[x]=0;\n        mul[x]=1;\n    }\n    int getch(int x)\n    {\n        return (ch[fa[x]][1]==x);\n    }\n    int isroot(int x)\n    {\n        clear(0);\n        return ch[fa[x]][0]!=x&&ch[fa[x]][1]!=x;\n    }\n    void maintain(int x)\n    {\n        clear(0);\n        siz[x]=(siz[ch[x][0]]+1+siz[ch[x][1]])%mod;\n        sum[x]=(sum[ch[x][0]]+val[x]+sum[ch[x][1]])%mod;\n    }\n    void pushdown(int x)\n    {\n        clear(0);\n        if(mul[x]!=1)\n        {\n            if(ch[x][0])\n            mul[ch[x][0]]=(mul[x]*mul[ch[x][0]])%mod,val[ch[x][0]]=(val[ch[x][0]]*mul[x])%mod,sum[ch[x][0]]=(sum[ch[x][0]]*mul[x])%mod,add[ch[x][0]]=(add[ch[x][0]]*mul[x])%mod;\n            if(ch[x][1])\n            mul[ch[x][1]]=(mul[x]*mul[ch[x][1]])%mod,val[ch[x][1]]=(val[ch[x][1]]*mul[x])%mod,sum[ch[x][1]]=(sum[ch[x][1]]*mul[x])%mod,add[ch[x][1]]=(add[ch[x][1]]*mul[x])%mod;\n            mul[x]=1;\n        }\n        if(add[x])\n        {\n            if(ch[x][0])\n            add[ch[x][0]]=(add[ch[x][0]]+add[x])%mod,val[ch[x][0]]=(val[ch[x][0]]+add[x])%mod,sum[ch[x][0]]=(sum[ch[x][0]]+add[x]*siz[ch[x][0]])%mod;\n            if(ch[x][1])\n            add[ch[x][1]]=(add[ch[x][1]]+add[x])%mod,val[ch[x][1]]=(val[ch[x][1]]+add[x])%mod,sum[ch[x][1]]=(sum[ch[x][1]]+add[x]*siz[ch[x][1]])%mod;\n            add[x]=0;\n        }\n        if(rev[x])\n        {\n            if(ch[x][0])\n            rev[ch[x][0]]^=1,swap(ch[ch[x][0]][0],ch[ch[x][0]][1]);\n            if(ch[x][1])\n            rev[ch[x][1]]^=1,swap(ch[ch[x][1]][0],ch[ch[x][1]][1]);\n            rev[x]=0;\n        }\n    }\n    void update(int x)\n    {\n        if(!isroot(x))\n        update(fa[x]);\n        pushdown(x);\n    }\n    void rotate(int x)\n    {\n        int y=fa[x],z=fa[y],chx=getch(x),chy=getch(y);\n        fa[x]=z;\n        if(!isroot(y))\n        ch[z][chy]=x;\n        ch[y][chx]=ch[x][chx^1];\n        fa[ch[x][chx^1]]=y;\n        ch[x][chx^1]=y;\n        fa[y]=x;\n        maintain(y);\n        maintain(x);\n        maintain(z);\n    }\n    void splay(int x)\n    {\n        update(x);\n        for(int f=fa[x];f=fa[x],!isroot(x);rotate(x))\n        if(!isroot(f))\n        rotate(getch(x)==getch(f)?f:x);\n    }\n    void access(int x)\n    {\n        for(int f=0;x;f=x,x=fa[x])\n        splay(x),ch[x][1]=f,maintain(x);\n    }\n    void makeroot(int x)\n    {\n        access(x);\n        splay(x);\n        swap(ch[x][0],ch[x][1]);\n        rev[x]^=1;\n    }\n    int find(int x)\n    {\n        access(x);\n        splay(x);\n        while(ch[x][0])\n        x=ch[x][0];\n        splay(x);\n        return x;\n    }\n    void final_mul(int u,int v,int c)\n    {\n    makeroot(u), access(v), splay(v);\n      val[v] = val[v] * c % mod;\n      sum[v] = sum[v] * c % mod;\n      mul[v] = mul[v] * c % mod;\n    }\n    void final_add(int u,int v,int c)\n    {\n    makeroot(u), access(v), splay(v);\n      val[v] = (val[v] + c) % mod;\n      sum[v] = (sum[v] + siz[v] * c % mod) % mod;\n      add[v] = (add[v] + c) % mod;\n    }\n    int query1(int u,int v)\n    {\n    makeroot(u), access(v), splay(v);\n    return sum[v];\n    }\n    void link(int u,int v)\n    {\n    if (find(u) != find(v)) \n    makeroot(u), fa[u] = v;\n    }\n    void cut(int u,int v)\n    {\n    makeroot(u);\n      access(v);\n      splay(v);\n      if (ch[v][0] == u && !ch[u][1]) \n      ch[v][0] = fa[u] = 0;\n    }\n    bool query2(int u,int v)\n    {\n    return find(u) == find(v);\n    }\n}st;\nint find(int x)\n{\nreturn st.find(x);\n}\nvoid merge(int u,int v)\n{\nst.link(u,v);\n}\nvoid clean(int n)\n{\nfor(int i=1;i<=n;i++)\nst.clear(i),st.maintain(i),st.splay(i);\n}//main\nunordered_map<int,int>p;\nsigned main()\n{\nint n,m;\ncin>>n>>m;\nclean(n);\nwhile(m--)\n{\nint u,v;\ncin>>u>>v;\nmerge(u,v);\n}\nfor(int i=1;i<=n;i++)\np[find(i)]++;\nint maxn=-1;\nfor(auto x:p)\nmaxn=max(maxn,x.second);\ncout<<maxn;\n}\n```\n",
        "postTime": 1671460477,
        "uid": 714821,
        "name": "loser_seele",
        "ccfLevel": 4,
        "title": "ABC177D\u9898\u89e3"
    }
]