[
    {
        "content": "\u6d1b\u8c37\u7684AtC\u63a5\u53e3\u8c8c\u4f3c\u574f\u6389\u4e86\uff0c\u6c34\u4e0d\u4e86\u8fd9\u9053\u7d2b\u9898\u4e86\uff0c\u4f46\u662f\u9898\u89e3\u8fd8\u662f\u53ef\u4ee5\u6c34\u7684\uff08\u5927\u96fe\n\n>### [\u6d1b\u8c37\u9898\u76ee\u9875\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/AT4569) & [AtC\u9898\u76ee\u9875\u9762\u4f20\u9001\u95e8](https://atcoder.jp/contests/keyence2019/tasks/keyence2019_e)\n\n>\u6709$n$\u4e2a\u70b9\uff0c\u7b2c$i$\u4e2a\u70b9\u7684\u6743\u503c\u4e3a$a_i$\u3002\u7ed9\u5b9a\u5e38\u6570$d$\uff0c\u5728\u70b9$i,j$\u4e4b\u95f4\u8fde\u8fb9\u7684\u4ee3\u4ef7\u662f$|i-j|d+a_i+a_j$\u3002\u6c42\u5c06\u5b83\u4eec\u8fde\u6210\u4e00\u68f5\u6811\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\n\n>$n\\in\\left[1,10^5\\right]$\u3002\n\n\u9996\u5148\u4e0d\u96be\u53d1\u73b0\uff0c\u539f\u9898\u76f8\u5f53\u4e8e\uff0c\u6c42\u5b8c\u5168\u56fe\u7684MST\u7684\u6743\uff0c\u5176\u4e2d\u70b9$i,j$\u4e4b\u95f4\u7684\u8fb9\u6743\u4e3a$|i-j|d+a_i+a_j$\u3002\u5982\u679c\u76f4\u63a5Kruskal\u7684\u8bdd\uff0c\u5efa\u56fe\u5c31\u8981\u7206\u70b8\uff0c\u8fb9\u6570\u662f$\\mathrm O\\!\\left(n^2\\right)$\u7684\u3002\u8003\u8651\u7528\u67d0\u4e9bMST\u7684\u5947\u6280\u6deb\u5de7\u3002\n\n\u6211\u4eec\u7684\u76ee\u7684\u662f\uff0c\u5c3d\u53ef\u80fd\u5220\u6389\u4e00\u4e9b\u8fb9\uff0c\u7559\u4e0b\u5c3d\u91cf\u5c11\u7684\u8fb9\uff0c\u4f7f\u5f97MST\u7684\u6743\u4e0d\u53d8\u3002\n\n\u6ce8\u610f\u5230\u8fd9\u6837\u4e00\u6761\u7ecf\u5178\u7684\u6027\u8d28\uff1aMST\u4e0d\u53ef\u80fd\u5305\u542b\u4e00\u4e2a\u73af\u4e0a\u6240\u6709\u7684\u6700\u5927\u8fb9\u3002\u8bc1\u660e\u5f88\u7b80\u5355\uff1a\u53cd\u8bc1\u6cd5\u3002\u82e5\u5305\u542b\uff0c\u5219\u968f\u610f\u53bb\u6389\u4e00\u4e2a\u73af\u4e0a\u7684\u6700\u5927\u8fb9$(x,y)$\uff0c\u6b64\u65f6\u6574\u68f5\u6811\u65ad\u6210\u4e24\u90e8\u5206\uff0c$x,y$\u5728\u4e0d\u540c\u7684\u90e8\u5206\u3002\u7531\u4e8e\u662f\u4e2a\u73af\uff0c\u90a3\u4e48\u73af\u4e0a\u4e00\u5b9a\u6709\u4e00\u6761\u53cd\u5411\u7684\u4e0d\u5305\u542b $(x,y)$\u7684$x\\to y$\u8def\u5f84\uff0c\u8fde\u63a5\u4e24\u4e2a\u90e8\u5206\uff0c\u8fd9\u6761\u8def\u5f84\u4e0a\u663e\u7136\u6709\u8fde\u63a5\u4e24\u90e8\u5206\u7684\u53e6\u4e00\u6761\u8fb9\uff0c\u9009\u4e0a\u5b83\u5f97\u5230\u53e6\u4e00\u68f5\u751f\u6210\u6811\u3002\u8fd9\u6761\u8fb9\u8fb9\u6743\u4e25\u683c\u5c0f\u4e8e$(x,y)$\u7684\u6743\uff0c\u6240\u4ee5\u539f\u6811\u4e0d\u53ef\u80fd\u662fMST\u3002\u5f97\u8bc1\u3002\n\n\u4e0d\u59a8\u7814\u7a76\u4e00\u4e9b\u73af\uff0c\u770b\u80fd\u4e0d\u80fd\u7528\u8fd9\u4e2a\u6027\u8d28\u5220\u8fb9\u3002\u4ece\u6700\u7b80\u5355\u7684\u4e09\u5143\u73af\u5165\u624b\u3002\n\n\u9996\u5148\uff0c$i<j$\u95f4\u8fb9\u6743\u53ef\u53d8\u5f62\u4e3a$a_i-id+a_j+jd$\u3002\u4ee4$A_i=a_i-id,B_i=a_i+id$\uff0c\u90a3\u4e48\u5c31\u662f$A_i+B_j$\u3002\u5bf9\u4e8e\u4e09\u5143\u73af$(i,j,k)$\uff0c\n\n1. \u5f53$i<j<k$\u65f6\uff0c$(i,j)$\u975e\u4e25\u683c\u6700\u5927\u5f53\u4e14\u4ec5\u5f53$B_j\\geq B_k,A_i+B_j\\geq A_j+B_k$\u3002\u6ce8\u610f\u5230$B_j\\geq B_k,A_i\\geq A_j$\u663e\u7136\u662f\u5b83\u7684\u5145\u5206\u6761\u4ef6\uff0c\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u53ea\u7528\u8fd9\u4e2a\uff0c\u6b63\u786e\u6027\u5065\u5728\uff1b\n1. \u5f53$i<k<j$\u65f6\uff0c$(i,j)$\u975e\u4e25\u683c\u6700\u5927\u5f53\u4e14\u4ec5\u5f53$B_j\\geq B_k,A_i\\geq A_k$\uff1b\n1. \u5f53$k<i<j$\u65f6\uff0c$(i,j)$\u975e\u4e25\u683c\u6700\u5927\u5f53\u4e14\u4ec5\u5f53$A_i+B_j\\geq A_k+B_i,A_i\\geq A_k$\u3002\u540c$1$\uff0c\u5145\u5206\u6761\u4ef6\u662f$B_j\\geq B_i,A_i\\geq A_k$\u3002\n\n\u628a$1,2$\u653e\u4e00\u8d77\u7814\u7a76\uff0c\u53ef\u4ee5\u5f97\u51fa\u5171\u540c\u70b9\uff1a$B_j\\geq B_k,A_i\\geq A_{\\text{\u4f4d\u7f6e\u5728\u7b2c2\u7684\u70b9}}$\u3002\u90a3\u4e48\u6211\u4eec\u60f3\uff0c\u5bf9\u4e8e\u4e00\u5806\u5728$i$\u53f3\u8fb9\u7684\u3001$A$\u503c$\\leq A_i$\u7684\u70b9\uff0c\u6211\u4eec\u4e00\u5b9a\u53ef\u4ee5\u628a\u5b83\u4eec\u8fde\u5411$i$\u7684\u8fb9\u4e92\u76f8\u6bd9\uff0c\u6bd9\u7684\u53ea\u5269\u4e00\u4e2a\uff0c\u5373\u90a3\u4e2a$B$\u503c\u6700\u5c0f\u7684\u3002\n\n\u8fd9\u770b\u8d77\u6765\u5f88\u6210\u7acb\uff0c\u4f46\u662f\u4f3c\u4e4e\u4ec5\u5728\u4e25\u683c\u7684\u65f6\u5019\u6210\u7acb\uff0c\u56e0\u4e3a\u6839\u636e\u4e0a\u8ff0\u6027\u8d28\uff0c\u53ea\u6709\u6700\u5927\u8fb9\u552f\u4e00\u7684\u65f6\u5019\uff0c\u624d\u53ef\u4ee5\u8086\u65e0\u5fcc\u60ee\u5730\u6bd9\u6389\u6700\u5927\u8fb9\uff0c\u5426\u5219\u4e00\u822c\u60c5\u51b5\u4e0b\u9700\u8981\u4fdd\u8bc1\u5176\u4ed6\u6700\u5927\u8fb9\u5efa\u5728\u3002\u4e0d\u8fc7\u5728\u8fd9\u91cc\u7684\u7279\u6b8a\u60c5\u51b5\uff0c\u5373\u4f7f\u975e\u4e25\u683c\u4e5f\u662f\u6210\u7acb\u7684\u3002\u8bc1\u660e\uff1a\u82e5\u4e0d\u5b58\u5728\u4efb\u610f\u4e00\u4e2aMST\u4f7f\u5f97\u5b83\u5305\u542b\u4efb\u610f\u4e00\u6761\u88ab\u6bd9\u6389\u7684\u8fb9\u5219\u5df2\uff0c\u5426\u5219\u9009\u62e9\u4e00\u4e2a\uff1a\u8bbe\u7559\u4e0b\u6765\u7684\u70b9\u662f$x$\u3002\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u88ab\u6bd9\u6389\u7684\u8fd8\u5728MST\u91cc\u7684\u8fb9$(i,y)$\uff0c\u82e5$(x,y)$\u4e0d\u5728MST\u91cc\u5373\u53ef\u76f4\u63a5\u6362\u6210$(x,y)$\uff0c\u5426\u5219$(i,x)$\u4e00\u5b9a\u4e0d\u5728\uff08\u56e0\u4e3a\u751f\u6210\u6811\u91cc\u4e0d\u53ef\u80fd\u6709\u73af\uff09\uff0c\u4f46\u662f\u4e0d\u80fd\u76f4\u63a5\u6362\u6210$(i,x)$\uff0c\u56e0\u4e3a\u5b83\u662f\u552f\u4e00\u7684\uff0c\u800c\u6709\u90a3\u4e48\u591a\u88ab\u6bd9\u6389\u7684\u8fb9\u7b49\u7740\u6362\u5462\u3002\u5982\u6b64\uff0c\u53ea\u8981\u8bc1\u6ee1\u8db3$(i,y),(x,y)$\u90fd\u5728MST\u91cc\u7684\u88ab\u6bd9\u6389\u7684\u8fb9$(i,y)$\u6700\u591a\u53ea\u6709\u4e00\u4e2a\u3002\u8fd9\u662f\u663e\u7136\u7684\uff0c\u56e0\u4e3a\u82e5\u6709\u4e24\u4e2a$y_0,y_1$\uff0c\u5219$(i,x,y_0,y_1)$\u6784\u6210\u56db\u5143\u73af\u3002\u5f97\u8bc1\u3002\n\n\u540c\u7406\uff0c\u4e00\u5806\u5728$i$\u5de6\u8fb9\u7684\u3001$B$\u503c$\\leq B_i$\u7684\u70b9\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u7559\u4e0b$A$\u503c\u6700\u5c0f\u7684\uff0c\u5176\u4ed6\u90fd\u6bd9\u6389\u3002\n\n\u4e0d\u8fc7\u8fd9\u6837\uff0c\u4e24\u4e2a\u6bd9\u6cd5\u4e00\u7efc\u5408\uff0c\u95ee\u9898\u53c8\u51fa\u73b0\u4e86\u3002\u3002\u6709\u7684\u70b9\u5bf9$(i,j)(i<j)$\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u8fb9\u53ef\u80fd\u4f1a\u88ab\u8003\u8651\u4e24\u6b21\uff08$j$\u5de6\u8fb9\u548c$i$\u53f3\u8fb9\uff09\uff0c\u8fd9\u6837\u5c31\u53ef\u80fd\u662f\u5373\u88ab\u5220\u6389\uff0c\u53c8\u88ab\u7559\u4e0b\u6765\u7684\u72b6\u6001\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u5de7\u5999\u7684\u5904\u7406\u65b9\u6cd5\uff1a\u89c2\u5bdf$A_i\\geq A_j$\uff0c\u5c55\u5f00\u5f97$a_i-id\\geq a_j-jd$\uff0c\u6ce8\u610f\u5230\u56e0\u4e3a$i<j$\uff0c\u6240\u4ee5$-id>-jd$\uff0c\u90a3\u4e48\u5145\u5206\u6761\u4ef6\u5c31\u662f$a_i\\geq a_j$\u3002\u540c\u7406\uff0c$B_j\\geq B_i$\u7684\u5145\u5206\u6761\u4ef6\u662f$a_j\\geq a_i$\u3002\u5728$a$\u503c\u4e92\u4e0d\u76f8\u540c\u7684\u65f6\u5019\uff0c\u4e24\u8005\u6070\u597d\u53ea\u80fd\u9009\u4e00\u4e2a\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b8c\u5168\u56fe\u91cc\u6bcf\u6761\u8fb9\u6070\u597d\u88ab\u8003\u8651\u4e86\u4e00\u904d\uff0c\u5c31\u4e0d\u5b58\u5728\u95ee\u9898\u4e86\u3002\u5982\u679c$a$\u503c\u6709\u76f8\u540c\u7684\u5462\uff1f\u53ea\u9700\u8981\u518d\u52a0\u7b2c\u4e8c\u4e2a\u5173\u952e\u5b57\uff1a\u4f4d\u7f6e\uff0c\u8fd9\u6837\u5c31\u4e00\u5b9a\u80fd\u6bd4\u51fa\u5927\u5c0f\u4e86\u3002\n\n\u5982\u6b64\uff0c\u6bcf\u4e2a\u70b9\u4e24\u4fa7\u6700\u591a\u5404\u6709\u4e00\u6761\u8fb9\u7559\u4e0b\u6765\uff0c\u8fb9\u6570\u590d\u6742\u5ea6$\\mathrm O(n)$\u3002\u518d\u7528BIT xjb\u968f\u4fbf\u7ef4\u62a4\u4e00\u4e0b\u5efa\u56fe\uff0c\u7136\u540eKruskal\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$\\mathrm O(n\\log n)$\u3002\n\n\u4ee3\u7801\u4e5f\u6ca1\u5565\u9700\u8981\u8bf4\u7684\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define mp make_pair\n#define X first\n#define Y second\n#define pb push_back\nconst int inf=0x3f3f3f3f3f3f3f3f;\nint lowbit(int x){return x&-x;}\nconst int N=200000;\nint n,d;\nint a[N+1];\npair<int,int> p[N+1];\nstruct bitree{\n\tpair<int,int> mn[N+1];\n\tvoid init(){\n\t\tfor(int i=1;i<=n;i++)mn[i]=mp(inf,0);\n\t}\n\tvoid chkmn(int x,pair<int,int> v){\n\t\twhile(x<=n)mn[x]=min(mn[x],v),x+=lowbit(x);\n\t}\n\tint Mn(int x){\n\t\tpair<int,int> res(inf,0);\n\t\twhile(x)res=min(res,mn[x]),x-=lowbit(x);\n\t\treturn res.Y;\n\t}\n}bit,bit_r;\nvector<pair<int,int> > eg;\nstruct ufset{//\u5e76\u67e5\u96c6 \n\tint fa[N+1];\n\tvoid init(){memset(fa,0,sizeof(fa));}\n\tint root(int x){return fa[x]?fa[x]=root(fa[x]):x;}\n\tbool mrg(int x,int y){\n\t\tx=root(x);y=root(y);\n\t\tif(x==y)return false;\n\t\treturn fa[x]=y,true;\n\t}\n}ufs;\nint cst(pair<int,int> x){//\u8fb9\u6743 \n\tif(x.X>x.Y)swap(x.X,x.Y);\n\treturn a[x.X]+a[x.Y]+(x.Y-x.X)*d;\n}\nbool cmp(pair<int,int> x,pair<int,int> y){\n\treturn cst(x)<cst(y);\n}\nint kruskal(){//Kruskal \n\tsort(eg.begin(),eg.end(),cmp);\n\tint ans=0;\n//\tfor(int i=0;i<eg.size();i++)printf(\"%lld %lld\\n\",eg[i].X,eg[i].Y);\n\tfor(int i=0;i<eg.size();i++)ans+=ufs.mrg(eg[i].X,eg[i].Y)*cst(eg[i]);\n\treturn ans;\n}\nsigned main(){\n\tcin>>n>>d;\n\tfor(int i=1;i<=n;i++)scanf(\"%lld\",a+i),p[i]=mp(a[i],i);\n\tsort(p+1,p+n+1);\n\tbit.init();bit_r.init();\n\tfor(int i=1;i<=n;i++){//BIT\u5efa\u56fe \n\t\tint mn1=bit.Mn(p[i].Y-1),mn2=bit_r.Mn(n-p[i].Y);\n\t\tif(mn1)eg.pb(mp(p[i].Y,mn1));\n\t\tif(mn2)eg.pb(mp(p[i].Y,mn2));\n\t\tbit.chkmn(p[i].Y,mp(p[i].X-p[i].Y*d,p[i].Y));bit_r.chkmn(n-p[i].Y+1,mp(p[i].X+p[i].Y*d,p[i].Y));\n\t} \n\tcout<<kruskal();\n\treturn 0;\n}\n```\n\n\u5b98\u65b9\u9898\u89e3\u8fd8\u7ed9\u51fa\u4e86\u53e6\u4e00\u79cd\u5206\u6cbb\u7684\u65b9\u6cd5\u3002\u5c31\u662f\u8bf4\uff0c\u628a\u8fb9\u5206\u6210\u5728\u5de6\u534a\u8fb9\u5185\u3001\u5728\u53f3\u534a\u8fb9\u5185\u3001\u6a2a\u8de8\u4e24\u534a\u8fb9\u4e09\u7c7b\uff0c\u5904\u7406\u6a2a\u8de8\u4e24\u534a\u8fb9\u7684\uff0c\u53e6\u5916\u4e24\u79cd\u9012\u5f52\u4e0b\u53bb\u3002\u8003\u8651\u5982\u4f55\u5904\u7406\u3002\u6211\u4eec\u9009\u62e9\u5de6\u534a\u8fb9$A$\u503c\u6700\u5c0f\u7684\u70b9$x$\u8fde\u6240\u6709\u53f3\u534a\u8fb9\u7684\u70b9\uff0c\u9009\u62e9\u53f3\u534a\u8fb9$B$\u503c\u6700\u5c0f\u7684\u70b9$y$\u8fde\u6240\u6709\u5de6\u534a\u8fb9\u7684\u70b9\uff0c\u8fd9\u6837\u4e00\u6765\u5176\u4ed6\u6240\u6709\u7684\u6a2a\u8de8\u4e24\u534a\u8fb9\u7684\u8fb9$(x',y')$\u90fd\u88ab\u6bd9\u6389\u4e86\uff0c\u56e0\u4e3a$(x,y),(x,y'),(x',y)$\u90fd\u5728\uff0c$(x',y')$\u6210\u4e86\u73af\u4e2d\u6700\u5927\u7684\u8fb9\u3002\u81f3\u4e8e\u4e25\u683c\u975e\u4e25\u683c\u7684\u95ee\u9898\uff0cxjb\u518d\u8bc1\u4e00\u4e0b\u5373\u53ef\u3002\u8fd9\u662f\u5728\u56db\u5143\u73af\u4e0a\u4f5c\u6587\u7ae0\u7684\u3002\u8fb9\u6570\u590d\u6742\u5ea6$\\mathrm O(n\\log n)$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$\\mathrm O\\!\\left(n\\log^2n\\right)$\u3002\n\n\u4ee3\u7801\u6ca1\u5199\u3002\u5e94\u8be5\u5f88\u597d\u5199\uff1f\n\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u4e0b\u6b21\u9047\u5230\u8fd9\u6837\u7684\u4eba\u7c7b\u667a\u6167\u9898\u6211\u8fd8\u662f\u505a\u4e0d\u51fa\u6765\u3002",
        "postTime": 1595230355,
        "uid": 138400,
        "name": "chenxia25",
        "ccfLevel": 9,
        "title": "AtCoder keyence2019_e - Connecting Cities"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/AT4569)\n\n---\n\u8003\u8651\u5982\u4f55\u53bb\u6389\u8fd9\u4e2a\u7edd\u5bf9\u503c\uff0c\n\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u4f55\u51cf\u5c11\u8fb9\u6570\u5e76\u4e14\u80fd\u5efa\u51fa MST\u3002\n\n\u5728\u6c42\u89e3\u504f\u5e8f\u95ee\u9898\u65f6\uff0c\u5f80\u5f80\u4f1a\u5206\u800c\u6cbb\u4e4b\uff0c\n\n\u8fd9\u6837\u539f\u6765 $O(n^2)$ \u7684\u505a\u6cd5\u5c31\u80fd\u591f\u88ab\u4f18\u5316\u3002\n\n\u8003\u8651\u5c06\u6240\u6709\u70b9\u5bf9\u534a\u6298\u5f00\uff0c\n\n\u5de6\u534a\u90e8\u5206\u548c\u53f3\u534a\u90e8\u5206\u7684\u5efa\u8fb9\u5206\u6cbb\u5904\u7406\uff0c\n\n\u53ea\u8003\u8651\u6a2a\u8de8\u4e24\u90e8\u5206\u7684\u5efa\u8fb9\uff0c\n\n\u82e5\u5de6\u534a\u90e8\u5206\u7684\u70b9\u4e3a $j$\uff0c\u53f3\u534a\u90e8\u5206\u7684\u70b9\u4e3a $i$\n\n\u8fb9\u6743\u5c31\u53ef\u4ee5\u8f6c\u6362\u6210\uff1a\n\n$$\n(A_i+i\\times d)+(A_j-j\\times d)\n$$\n\n\u65e2\u7136 $i$ \u548c $j$ \u72ec\u7acb\u51fa\u6765\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u9009\u51fa\n\n\u53f3\u534a\u90e8\u5206 $\\min\\{A_i+i\\times d\\}$ \u6240\u5bf9\u5e94\u7684 $i$\uff0c\n\n\u5de6\u534a\u90e8\u5206 $\\min\\{A_j-j\\times d\\}$ \u6240\u5bf9\u5e94\u7684 $j$\uff0c\n\n\u5c06 $j$ \u4e0e\u53f3\u534a\u90e8\u5206\u6240\u6709\u70b9\u8fde\u8fb9\uff0c$i$ \u540c\u7406\u3002\n\n\u90a3\u4e48\u8fd9\u6837\u5c31\u53ea\u6709 $O(n\\log n)$ \u6761\u8fb9\uff0c\n\n\u7528 Kruskal \u8dd1\u6700\u5c0f\u751f\u6210\u6811\u5c31\u53ef\u4ee5\u505a\u5230 $O(n\\log^2n)$\u3002\n\n---\n# Code\n```cpp\n#include <cstdio>\n#include <cctype>\n#include <algorithm>\n#define rr register\nusing namespace std;\nconst int N=200011; typedef long long lll;\nstruct node{int x,y; lll w;}e[N<<5];\nlll a[N],b[N],D,ans; int n,f[N],m;\ninline signed iut(){\n\trr int ans=0; rr char c=getchar();\n\twhile (!isdigit(c)) c=getchar();\n\twhile (isdigit(c)) ans=(ans<<3)+(ans<<1)+(c^48),c=getchar();\n\treturn ans; \n}\nbool cmp(node x,node y){return x.w<y.w;}\ninline signed getf(int u){return f[u]==u?u:f[u]=getf(f[u]);}\ninline void dfs(int l,int r){\n    if (l==r) return;\n    rr int mid=(l+r)>>1,t0=l,t1=r;\n    for (rr int i=l;i<=mid;++i)\n        if (a[t0]>a[i]) t0=i;\n    for (rr int i=r;i>mid;--i)\n        if (b[t1]>b[i]) t1=i;\n    for (rr int i=l;i<=mid;++i)\n\t    e[++m]=(node){i,t1,a[i]+b[t1]};\n    for (rr int i=r;i>mid;--i)\n\t    e[++m]=(node){t0,i,a[t0]+b[i]};\n    dfs(l,mid),dfs(mid+1,r);\n}\nsigned main(){\n\tn=iut(),D=iut();\n\tfor (rr int i=1;i<=n;++i){\n\t\trr int x=iut(); f[i]=i;\n\t\ta[i]=x-i*D,b[i]=x+i*D;\n\t}\n\tdfs(1,n),sort(e+1,e+1+m,cmp);\n\tfor (rr int i=1;i<=m;++i){\n\t\trr int fa=getf(e[i].x),fb=getf(e[i].y);\n\t\tif (fa!=fb) f[fa]=fb,ans+=e[i].w;\n\t}\n\treturn !printf(\"%lld\",ans);\n}\n```",
        "postTime": 1629788926,
        "uid": 37782,
        "name": "lemondinosaur",
        "ccfLevel": 0,
        "title": "AT4569 Connecting Cities"
    }
]