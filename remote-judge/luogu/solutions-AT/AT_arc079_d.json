[
    {
        "content": "[\u70b9\u51fb](https://www.cnblogs.com/Guts/p/14721700.html)\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u3002\n\n---------------------\n\n\n\u9996\u5148\u6839\u636e\u9898\u76ee\u53ef\u4ee5\u5f97\u5230\u4e24\u4e2a\u4fe1\u606f\uff1a\n\n- \u7ed9\u5b9a\u7684\u56fe\u662f\u4e00\u9897\u57fa\u73af\u5916\u5411\u6811\u3002\n\n- \u6bcf\u4e2a\u70b9\u7684\u6743\u503c\u662f\u5176\u6240\u6709\u51fa\u8fb9\u6307\u5411\u7684\u70b9 $v$ \u7684\u6743\u503c $a_{v}$ \u7684 $mex$ \u3002\n\n\u5176\u4e2d\u7b2c\u4e8c\u70b9\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u7684\u53cd\u8bc1\u6cd5\u5f97\u5230\u3002  \n\n\n\n1. \u975e\u73af\u90e8\u5206\n\n   \u53ef\u4ee5\u76f4\u63a5`dfs`\uff0c\u4ece\u53f6\u5b50\u7ed3\u70b9\u5f00\u59cb\u5f80\u4e0a\u786e\u5b9a\u6574\u68f5\u6811\u3002\n\n   \u8fd9\u6837\uff0c\u5c31\u5df2\u7ecf\u53ef\u4ee5\u5904\u7406\u975e\u73af\u90e8\u5206\u7684\u6bcf\u4e00\u9897\u5b50\u6811\u4e86\uff0c\u95ee\u9898\u5c31\u53ea\u5269\u4e0b\u4e86\u73af\u4e0a\u7684\u70b9\u3002  \n\n2. \u73af\u4e0a\u90e8\u5206\n\n   \u770b\u5230\u5927\u90e8\u5206\u4eba\u5bf9\u4e8e\u73af\u8fd9\u91cc\u90fd\u662f\u91c7\u7528\u4e86\u4e00\u4e9b\u6bd4\u8f83\u9ad8\u5999\u7684\u505a\u6cd5\u3002\n\n   \u4f46\u662f\u6211\u6bd4\u8f83\u83dc\uff0c\u60f3\u4e0d\u5230\uff0c\u4e8e\u662f\u76f4\u63a5\u6572\u4e86\u4e2a\u201c\u66b4\u529b\u201c\u3002  \n\n   \u53ef\u4ee5\u53d1\u73b0\u53ea\u8981\u786e\u5b9a\u4e86\u73af\u4e0a\u7684\u4efb\u610f\u4e00\u4e2a\u70b9\uff0c\u6574\u4e2a\u73af\u4e5f\u5c31\u88ab\u786e\u5b9a\u4e86\u3002\n\n   \u90a3\u4e48\u4e0d\u59a8\u968f\u4fbf\u9009\u4e00\u4e2a\u70b9 $u$\uff0c\u679a\u4e3e$a_u$\uff0c\u586b\u5b8c\u6574\u4e2a\u73af\u4e4b\u540e\u53cd\u8fc7\u6765check\u4e00\u4e0b $a_u$ \u662f\u4e0d\u662f $mex_u$\u3002\n\n   \u7531\u4e8e $a_{u}\\leq n$ \uff0c\u6240\u4ee5\u8fd9\u91cc\u5df2\u7ecf\u6709\u4e00\u4e2a $O(n^2)$ \u7684\u505a\u6cd5\u4e86\u3002\n\n   \n\n   \u4f46\u662f\u524d\u9762\u6240\u5f97\u7684\u8fd9\u4e2a $a_{u}$\u7684\u4e0a\u754c\u663e\u7136\u6bd4\u8f83\u7c97\u7565\uff0c\u5c1d\u8bd5\u505a\u4e00\u70b9\u4f18\u5316\u3002  \n\n   \u5bf9\u4e8e\u9009\u5b9a\u7684 $u$\uff0c\u628a\u5b83\u9664\u53bb\u73af\u4e0a\u7684\u70b9\u7684\u513f\u5b50\u7684\u70b9\u6743\u53bb\u91cd\u4e4b\u540e\u7684\u4e2a\u6570 $siz$ \u6c42\u51fa\u6765\uff0c\u663e\u7136\u6709 $a_{u}\\leq siz+1$\n\n   ~~\u7136\u540e\u4e00\u4ea4\u4e0a\u53bb\u53d1\u73b0\u8dd1\u5f97\u98de\u5feb~~  \n\n   \u5b9e\u9645\u4e0a\uff0c\u8fd9\u79cd\u505a\u6cd5\u7684\u590d\u6742\u5ea6\u662f\u6b63\u786e\u7684\u3002  \n\n   \u8003\u8651\u5230\u4e00\u4e2a\u975e\u73af\u70b9 $v$ \u7684\u70b9\u6743\u662f $a_v$ \uff0c\u8fd9\u610f\u5473\u7740\u5b83\u7684\u513f\u5b50\u7684\u6743\u503c\u81f3\u5c11\u6ee1\u8db3\u5206\u522b\u4e3a $1$~$a_{v}-1$\u3002  \n\n   \u8bbe $f(x)$ \u8868\u793a\u4e00\u4e2a\u6743\u503c\u4e3a $x$ \u7684\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u91cc\u6700\u5c11\u70b9\u7684\u6570\u91cf\uff0c\u90a3\u4e48\u53ef\u4ee5\u5f97\u5230:\n   $$\n   \\begin{aligned}\n   f(x)&=1+\\sum^{x-1}_{i=0}f(i)\\\\\n   f(0)&=1\n   \\end{aligned}\n   $$\n   \u6240\u4ee5\u6709 $f(x)=2^x$ \u3002\n\n   \u6240\u4ee5\u679a\u4e3e\u7684\u6b21\u6570\u662f $O(\\log n)$\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log n)$\u3002\n\n\n_Code_\n------------------------------\n\n\n ```cpp\n #include<cstdio>\n#include<vector>\n#include<algorithm>\nusing namespace std;\n#define il inline\n#define ri register int\n#define ll long long\n#define ui unsigned int\nil ll read(){\n    bool f=true;ll x=0;\n    register char ch=getchar();\n    while(ch<'0'||ch>'9') {if(ch=='-') f=false;ch=getchar();}\n    while(ch>='0'&&ch<='9') x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\n    if(f) return x;\n    return ~(--x);\n}\nil void write(const ll &x){if(x>9) write(x/10);putchar(x%10+'0');}\nil void print(const ll &x) {x<0?putchar('-'),write(~(x-1)):write(x);putchar('\\n');}\nil ll max(const ll &a,const ll &b){return a>b?a:b;}\nil ll min(const ll &a,const ll &b){return a<b?a:b;}\nconst int MAXN=2e5+7;\nint mark[MAXN],col[MAXN],n;\nint vec[MAXN],top;\nint a[MAXN];\nvector<int> g[MAXN];\nint mex(int u){\n    top=0;\n    for(ri i=0;i<g[u].size();++i){\n        int v=g[u][i];\n        vec[++top]=a[v];\n    }\n    sort(vec+1,vec+top+1);\n    int ans=0;\n    for(ri i=1;i<=top;++i){\n        if(vec[i]==ans) ++ans;\n        else if(vec[i]>ans) break;\n    }\n    return ans;\n}\nvoid get_circle(int u){    \n    for(ri i=0;i<g[u].size();++i){\n        int v=g[u][i];\n        if(!col[v]){\n            col[v]=col[u];\n            get_circle(v);\n            if(mark[v]) mark[u]=1;\n        }\n        else if(col[u]==col[v]){\n            mark[u]=1;\n            return;\n        }\n    }\n}\nvoid dfs(int u){\n    int now=0;\n    for(ri i=0;i<g[u].size();++i){\n        int v=g[u][i];\n        dfs(v);\n    }\n    a[u]=mex(u);\n}\nint root,tot=1e9;\nint vis[MAXN],fa[MAXN];\nint main(){\n    n=read();\n    for(ri i=1;i<=n;++i){\n        int u=read();\n        g[u].push_back(i);\n    }\n    for(ri i=1;i<=n;++i){\n        if(!col[i]) col[i]=i,get_circle(i);\n        if(mark[i]) break;\n    }\n    for(ri i=1;i<=n;++i){\n        if(mark[i]){\n            vector<int> revec;\n            int cnt=0;\n            for(ri j=0;j<g[i].size();++j){\n                int u=g[i][j];\n                if(mark[u]){\n                    fa[u]=i;\n                    continue;\n                }\n                dfs(u);\n                revec.push_back(a[u]);\n            }\n            sort(revec.begin(),revec.end());\n            revec.erase(unique(revec.begin(),revec.end()),revec.end());\n            cnt=revec.size()+1;\n            if(cnt<tot) root=i,tot=cnt;\n        }\n    }\n    vector<int> vec;\n    for(ri i=0;i<=tot+1;++i){\n        a[root]=i;\n        for(ri u=fa[root];u!=root;u=fa[u])\n            a[u]=mex(u);\n        if(mex(root)==i) return !puts(\"POSSIBLE\");\n    }\n    puts(\"IMPOSSIBLE\");\n    return 0;\n}\n ```\n\n\n\n",
        "postTime": 1619760424,
        "uid": 206998,
        "name": "Krimson",
        "ccfLevel": 0,
        "title": "AT2663 [ARC079D] Namori Grundy"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u54e6](https://www.cnblogs.com/wo-shi-zhen-de-cai/p/11598083.html)\n\n> \u9898\u610f\uff1a\u6709\u4e00\u4e2a\u5f31\u8054\u901a\u7684\u6709\u5411\u56fe\uff0c\u542b\u6709$n$\u4e2a\u7ed3\u70b9\u548c$n$\u6761\u8fb9\u3002\u8bd5\u95ee\u662f\u5426\u5b58\u5728\u65b9\u6848\uff0c\u8d4b\u7ed9\u6bcf\u4e2a\u7ed3\u70b9\u4e00\u4e2a\u81ea\u7136\u6570\u6743\u503c$val_i$\uff0c\u6ee1\u8db3\u5bf9\u4e8e\u6240\u6709\u7ed3\u70b9$u$,$val_u=mex\\{val_v|(u,v)\\in E\\}$\u3002\u4e00\u4e2a\u96c6\u5408\u7684$mex$\u662f\u6ca1\u6709\u5728\u8fd9\u4e2a\u96c6\u5408\u4e2d\u51fa\u73b0\u7684\u6700\u5c0f\u81ea\u7136\u6570\u3002\n\n\u663e\u7136\u662f\u4e2a\u57fa\u73af\u6811\uff0c\u5148\u8003\u8651\u5728\u6811\u4e0a\u7684\u60c5\u51b5\u3002\n\n\u5bf9\u4e8e\u4e00\u68f5\u6811\uff0c\u5b8c\u5168\u53ef\u4ee5\u5c06\u5176\u53f6\u5b50\u7684\u503c\u8d4b\u4e3a$0$\uff0c\u7136\u540e\u518d\u987a\u6b21\u5411\u4e0a\u505a\u5373\u53ef\uff0c\u4e00\u5b9a\u5b58\u5728\u8fd9\u6837\u7684\u65b9\u6848\u3002\n\n\u5728\u57fa\u73af\u6811\u4e0a\uff0c\u6700\u540e\u4f1a\u5316\u4e3a\u4e00\u4e2a\u73af\uff0c\u6bcf\u4e2a\u70b9\u6709\u6743\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u8003\u8651\u73af\u4e0a\u7684\u4e0d\u6ee1\u8db3\u60c5\u51b5\u5373\u53ef\u3002\n\n\u8003\u8651\u4e24\u4e2a\u5728\u73af\u4e0a\u76f8\u90bb\u7684\u8282\u70b9$u\\rightarrow v$\uff0c\u8bbe\u5b83\u4eec\u7684$val_u$\u548c$val_v$\n\n- $val_u>val_u$\uff0c\u90a3\u4e48\u4e0d\u9700\u8981\u4fee\u6539\u6743\u503c\u3002\n\n- $val_u=val_v$\uff0c\u90a3\u4e48\u628a$val_u$\u53d8\u6210$val_u+1$\n- $val_u<val_v$\uff0c\u90a3\u4e48\u4e0d\u9700\u8981\u4fee\u6539\u6743\u503c\u3002\n\n\u7efc\u4e0a\uff0c\u5f53\u4e14\u4ec5\u5f53\u73af\u4e0a\u70b9\u6743\u76f8\u540c\u4e14\u70b9\u6570\u4e3a\u5947\u6570\u65f6\u4e0d\u5b58\u5728\u65b9\u6848\uff08\u56e0\u4e3a$+1$\u65f6\u4f1a\u6b7b\u5faa\u73af\uff09\n\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u70b9\u8981\u5148\u8dd1\u5b8c\u6240\u6709\u5b50\u6811\u518d\u5c06\u5b50\u8282\u70b9\u6743\u503c\u52a0\u5165\u6876\u4e2d\uff0c\u8ba1\u7b97$mex$\u3002\u4e0d\u7136\u4f1a\u5728\u67d0\u4e2a\u5b50\u6811\u4e2d\u51fa\u73b0\u5176\u4ed6\u5b50\u6811\u7684\u7b54\u6848\u3002\u3002\u3002\n\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\ninline int read()\n{\n    int f=1,w=0;char x=0;\n    while(x<'0'||x>'9') {if(x=='-') f=-1; x=getchar();}\n    while(x!=EOF&&x>='0'&&x<='9') {w=(w<<3)+(w<<1)+(x^48);x=getchar();}\n    return w*f;\n}\nconst int N=200010;\nconst int INF=1e18;\nint num_edge,n,Cnt;\nint Cir[N],Vis[N],Val[N];\nint head[N<<1],fa[N],Jud[N];\nstruct Edge{int next,to;} edge[N<<1];\ninline void Add(int from,int to)\n{\n\tedge[++num_edge].next=head[from];\n\tedge[num_edge].to=to;\n\thead[from]=num_edge;\n}\ninline void Dfs(int pos)\n{\n\tfor(int i=head[pos];i;i=edge[i].next)\n\t\tif(!Cir[edge[i].to]) Dfs(edge[i].to);\n\tfor(int i=head[pos];i;i=edge[i].next)\n\t\tif(!Cir[edge[i].to]) Jud[Val[edge[i].to]]=1;\n\tfor(;Jud[Val[pos]];Val[pos]++);\n\tfor(int i=head[pos];i;i=edge[i].next)\n\t\tif(!Cir[edge[i].to]) Jud[Val[edge[i].to]]=0;\n}\nmain(){\n\tint pos=1;n=read();\n\tfor(int i=1;i<=n;i++) fa[i]=read(),Add(fa[i],i);\n\tfor(;!Vis[pos];pos=fa[pos]) Vis[pos]=1;\n\tfor(;!Cir[pos];pos=fa[pos]) Cir[pos]=1;\n\tint Max=-1,Min=INF;\n\tfor(int i=1;i<=n;i++)\n\t\tif(Cir[i]) Cnt++,Dfs(i),Max=max(Max,Val[i]),Min=min(Min,Val[i]);\n\tif(Max==Min&&Cnt&1) puts(\"IMPOSSIBLE\");\n\telse puts(\"POSSIBLE\");\n}\n```\n\n",
        "postTime": 1569568003,
        "uid": 92496,
        "name": "\u6587\u6b66\u6b66\u667a\u969c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT2663 \u3010Namori Grundy\u3011"
    },
    {
        "content": "### \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a$N$\u4e2a\u70b9\u7684\u57fa\u73af\u5916\u5411\u6811\uff0c\u4f60\u9700\u8981\u7ed9\u6240\u6709\u70b9\u8bbe\u7f6e\u6743\u503c\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u70b9$p$\uff0c\u9700\u8981\u6ee1\u8db3\uff1a\n\n1. $w_p$\u662f\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\n\n2. $[0,w_p)\\cap \\mathbb{Z}\\subseteq\\{w_{son_p}\\}$\n\n3. $w_p\\notin \\{w_{son_p}\\}$\n\n\u8bf7\u4f60\u5224\u65ad\u7ed9\u5b9a\u7684\u56fe\u662f\u5426\u5b58\u5728\u5408\u6cd5\u7684\u6743\u503c\u5206\u914d\u65b9\u6848\n\n### \u9898\u89e3\n\n\u9996\u5148\u8003\u8651\u4e00\u68f5\u6811\u3002\n\n\u6839\u636e\u7b2c\u4e8c\u6761\u9650\u5236\u6761\u4ef6\uff0c\u53f6\u5b50\u8282\u70b9\u6743\u503c\u5fc5\u7136\u662f0\uff0c\u7136\u540e\u4ece\u53f6\u5b50\u8282\u70b9\u5f80\u4e0a\u63a8\uff0c\u6574\u68f5\u6811\u7684\u6743\u503c\u5206\u914d\u6709\u4e14\u53ea\u6709\u4e00\u79cd\u65b9\u6848\u3002\u8fd9\u4e2a\u5728\u4ee3\u7801\u4e0a\u4e5f\u5f88\u597d\u5b9e\u73b0\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c\u5c06\u6240\u6709\u76f4\u63a5\u76f8\u8fde\u7684\u5b50\u8282\u70b9\u7684\u6743\u503c\u5bf9\u5e94\u7684$vis$\u503c\u8bbe\u4e3a$true$\uff0c\u7136\u540e\u4ece\u5c0f\u5230\u5927\u627e\u5230\u7b2c\u4e00\u4e2a$vis$\u503c\u4e3a$false$\u7684\u6743\u503c\uff0c\u8fd9\u4e2a\u6743\u503c\u5c31\u662f\u5f53\u524d\u8282\u70b9\u7684\u6743\u503c\n\n\u63a5\u4e0b\u6765\u8003\u8651\u4e00\u4e2a\u73af\u3002\u4e0d\u96be\u60f3\u5230\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u72ec\u7acb\u7684\u73af\uff0c\u5b83\u91cc\u9762\u70b9\u7684\u6743\u503c\u53ea\u80fd\u4e3a$0$\u6216$1$\uff0c\u5e76\u4e14\u4e24\u4e2a\u503c\u662f\u4ea4\u66ff\u5206\u5e03\u7684\uff0c\u5047\u5982\u8fd9\u662f\u4e00\u4e2a\u5947\u73af\uff0c\u90a3\u5c31\u4e0d\u5b58\u5728\u5408\u6cd5\u7684\u6743\u503c\u5206\u914d\u65b9\u6848\u4e86\n\n\u90a3\u4e48\u5c06\u4e24\u4e2a\u60c5\u51b5\u7efc\u5408\u5230\u4e00\u8d77\u6765\u770b\u3002\u57fa\u73af\u4e0a\u7684\u70b9\uff0c\u9664\u4e86\u81ea\u5df1\u7684\u5b50\u6811\u4ee5\u5916\uff0c\u6700\u591a\u518d\u6307\u5411\u73af\u4e2d\u7684\u4e00\u4e2a\u70b9\uff0c\u6240\u4ee5\u901a\u8fc7\u5b50\u6811\u8ba1\u7b97\u51fa\u5b83\u7684\u6743\u503c\u540e\uff0c\u6700\u591a\u8fd8\u6709$+1$\u7684\u8c03\u6574\u7a7a\u95f4\uff0c\u5e76\u4e14\u5f53\u4e14\u4ec5\u5f53\u5b83\u6240\u6307\u5411\u7684\u73af\u4e2d\u53e6\u4e00\u4e2a\u70b9\u6743\u503c\u6070\u597d\u4e0e\u5b83\u76f8\u540c\uff0c\u4ed6\u9700\u8981\u8fdb\u884c$+1$\u64cd\u4f5c\u3002\u5047\u5982\u5b83\u6240\u6307\u5411\u7684\u73af\u4e2d\u53e6\u4e00\u4e2a\u70b9\u6743\u503c\u4e0e\u5b83\u4e0d\u76f8\u7b49\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u7684\u6743\u503c\u4e0d\u9700\u8981\u4e5f\u4e0d\u80fd\u8fdb\u884c\u8c03\u6574\uff0c\u56e0\u4e3a\u5047\u8bbe\u5b83\u7684\u6743\u503c\u662f$x$\uff0c\u6b64\u65f6\u4ed6\u7684\u6743\u503c\u5982\u679c\u53d8\u5c0f\u4e00\u4e9b\uff0c\u4f1a\u5bfc\u81f4\u4e0d\u6ee1\u8db3\u6761\u4ef6\u4e09\uff1b\u5982\u679c\u5927\u4e00\u4e9b\uff0c\u4f1a\u5bfc\u81f4$x$\u4e0d\u5728\u5b50\u8282\u70b9\u6743\u503c\u96c6\u5408\u4e2d\u3002\n\n\u4ee5\u4e0a\u5206\u6790\u975e\u5e38\u660e\u663e\u5730\u6307\u5411\u4e86\u4e00\u4e2a\u7ed3\u8bba\uff1a**\u5f53\u4e14\u4ec5\u5f53\u57fa\u73af\u4e2d\u6240\u6709\u70b9\u6743\u503c\u76f8\u540c\uff0c\u5e76\u4e14\u8fd9\u4e2a\u57fa\u73af\u662f\u4e00\u4e2a\u5947\u73af\uff0c\u6b64\u65f6\u4e0d\u5b58\u5728\u6743\u503c\u5206\u914d\u65b9\u6848\uff0c\u5176\u5b83\u4efb\u4f55\u60c5\u51b5\u4e0b\u90fd\u662f\u5b58\u5728\u7684**\n\n\u4e5f\u8bb8\u6211\u7684\u5206\u6790\u8fc7\u7a0b\u4e0d\u662f\u975e\u5e38\u4e25\u8c28\uff0c\u601d\u7ef4\u53ef\u80fd\u4e5f\u6709\u70b9\u8df3\uff0c\u4e0d\u8fc7\u7a0d\u5faeYY\u4e00\u4e0b\uff0c\u6b63\u786e\u6027\u8fd8\u662f\u975e\u5e38\u663e\u7136\u7684\u3002\u4ee3\u7801\u5b9e\u73b0\u4e5f\u5f88\u7b80\u5355\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int S=(1<<20)+5;\nchar buf[S],*H,*T;\ninline char Get()\n{\n\tif(H==T) T=(H=buf)+fread(buf,1,S,stdin);\n\tif(H==T) return -1;return *H++;\n}\ninline int read()\n{\n\tint x=0;char c=Get();\n\twhile(!isdigit(c)) c=Get();\n\twhile(isdigit(c)) x=x*10+c-'0',c=Get();\n\treturn x;\n}\n\ninline void upmax(int &x,const int &y){if(y>x) x=y;}\ninline void upmin(int &x,const int &y){if(y<x) x=y;}\n\nconst int N=200010;\nstruct Edge{int to,next;} e[N];\nint h[N],sum=0,n;\nint fa[N],mex[N];\nbool vis[N],loop[N];\nbool have[N];\n\nvoid add_edge(int u,int v)\n{\n\te[++sum].to=v;\n\te[sum].next=h[u];\n\th[u]=sum;\n}\n\nvoid dfs(int u)\n{\n\tfor(int t=h[u];t;t=e[t].next)\n\t\tif(!loop[e[t].to]) dfs(e[t].to);\n\tfor(int t=h[u];t;t=e[t].next)\n\t\tif(!loop[e[t].to]) have[mex[e[t].to]]=1;\n\twhile(have[mex[u]]) mex[u]++;\n\tfor(int t=h[u];t;t=e[t].next)\n\t\tif(!loop[e[t].to]) have[mex[e[t].to]]=0;\n}\n\nint main()\n{\n\tint n,x=1;\n\tn=read();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfa[i]=read();\n\t\tadd_edge(fa[i],i);\n\t}\n\twhile(!vis[x]) vis[x]=1,x=fa[x];\n\twhile(!loop[x]) loop[x]=1,x=fa[x];\n\tint mx=-1,mn=n+1,cnt=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(!loop[i]) continue;\n\t\tdfs(i);cnt++;\n\t\tupmax(mx,mex[i]);\n\t\tupmin(mn,mex[i]);\n\t}\n\tputs(mx==mn&&(cnt&1)?\"IMPOSSIBLE\":\"POSSIBLE\");\n\treturn 0;\n}\n```\n\n",
        "postTime": 1534994732,
        "uid": 20158,
        "name": "Ebola",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 AT2663 \u3010Namori Grundy\u3011"
    },
    {
        "content": "# ARC079F - Namori Grundy\n[\u5b89\u5229\u535a\u5ba2](https://blog.csdn.net/xmr_pursue_dreams/article/details/111868414)\n## Solution\n\n\u9996\u5148\u8fd9\u662f\u4e00\u4e2a$N$\u4e2a\u70b9$N$\u6761\u8fb9\u7684\u6709\u5411\u56fe\uff0c\u6240\u4ee5\u5b83\u7684\u57fa\u56fe\u662f\u4e00\u68f5\u57fa\u73af\u6811\uff0c\u5176\u6b21\u8fd9\u4e2a\u56fe\u7684\u6240\u6709\u70b9\u5165\u5ea6\u4e3a$1$\uff0c\u56e0\u6b64\u8fd9\u662f\u4e00\u68f5\u57fa\u73af\u5916\u5411\u6811\u3002\n\n\u7136\u540e\u5bf9\u4e8e$a_i$\uff0c\u5047\u8bbe\u6211\u4eec\u6c42\u51fa$S=\\{a_j|(i,j)\\in E\\}$\uff0c\u5373$i$\u7684\u6240\u6709\u51fa\u8fb9\u7684$a$\u7684\u96c6\u5408\uff0c\u90a3\u4e48\u663e\u7136$a_i=mex\\;S$\uff0c$a_i$\u7684\u503c\u662f\u53ef\u4ee5\u901a\u8fc7\u5176\u51fa\u8fb9\u552f\u4e00\u786e\u5b9a\u7684\u3002\n\n\u6211\u4eec\u5148\u8003\u8651\u4e00\u68f5\u6811\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u53d1\u73b0\u53f6\u5b50\u7ed3\u70b9\u5fc5\u7136\u4e3a$0$\uff0c\u56e0\u6b64\u6bcf\u4e00\u4e2a\u7ed3\u70b9$i$\u7684$a_i$\u90fd\u53ef\u4ee5\u4ece\u4e0b\u5230\u4e0a\u901a\u8fc7\u5176\u513f\u5b50\u7ed3\u70b9\u9012\u63a8\u5f97\u5230\u3002\n\n\u73b0\u5728\u8003\u8651\u57fa\u73af\u6811\uff0c\u5bf9\u4e8e\u73af\u4e0a\u4e00\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5b83\u7684\u5b50\u6811\u552f\u4e00\u786e\u5b9a\u53bb\u6389\u73af\u65f6\u5b83\u7684$a$\uff0c\u7136\u540e\u53ef\u4ee5\u53d1\u73b0**\u5f53\u4e14\u4ec5\u5f53\u73af\u957f\u4e3a\u5947\u6570\u4e14\u73af\u4e0a\u7ed3\u70b9\u7684$a$\u90fd\u76f8\u7b49\u65f6\u65e0\u89e3**\u3002\n\n\u7136\u540e\u76f4\u63a5\u627e\u5230\u73af\uff0c\u9012\u63a8\u6c42\u51fa\u6bcf\u4e00\u4e2a$a$\uff0c\u5224\u4e00\u5224\u5c31\u884c\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n)$\u3002\n### Proof \n\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u628a\u5b50\u6811\u70b9\u90fd\u6254\u6389\uff0c\u53ea\u8003\u8651\u4e00\u4e2a$k$\u5143\u73af\u3002\n\u6211\u4eec\u8bbe\u73af\u4e0a\u70b9\u4f9d\u6b21\u4e3a$0,1,2...k-1$\uff0c$(i+1,i)\\in E$\uff0c\uff08\u4e4b\u540e\u7684\u4e0b\u6807\u90fd\u5728\u6a21$k$\u610f\u4e49\u4e0b\uff09\u3002\n1. \u82e5$a_{i+1}$\u8981\u52a0$1$\uff0c\u5f53\u4e14\u4ec5\u5f53$a_{i+1}=a_i$\u3002\n2. \u56e0\u4e3a\u73af\u4e0a\u70b9\u51fa\u5ea6\u4e3a$1$\uff0c\u4e00\u4e2a\u70b9\u6700\u591a\u52a0$1$\u3002\n\n\u9996\u5148\u6211\u4eec\u4e0d\u4f1a\u8ba9\u6240\u6709\u70b9\u90fd\u52a0$1$\uff0c\u56e0\u4e3a\u8fd9\u548c\u6240\u6709\u70b9\u4e0d\u53d8\u4e00\u6837\uff0c\u6240\u4ee5\u82e5**\u5b58\u5728\u65b9\u6848\uff0c\u4e00\u5b9a\u6709\u4e00\u79cd\u6709\u81f3\u5c11\u4e00\u4e2a\u70b9$p$\u4e0d\u52a8\u7684\u65b9\u6848**\u3002\n\n\u5982\u679c\u6211\u4eec\u77e5\u9053$p$\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4ece$p$\u5f00\u59cb\u5224\u65ad$a_p$\u662f\u5426\u7b49\u4e8e$a_{p+1}$\uff0c\u82e5\u76f8\u7b49\u5219$a_{p+1}+1$\u3002\n\n\u6211\u4eec\u4ee4\u4e00\u6bb5\u8fde\u7eed\u7684$+1$\u7684\u4e0b\u6807\u533a\u95f4\u4e3a$[l+1,r]$\uff0c\u663e\u7136\u6709$a_{l}=a_{l+1},a_{l+1}+1=a_{l+2},a_{l+2}+1=a_{l+3}...$\uff0c\u56e0\u6b64\u8fd9\u6bb5$a$\u4e00\u5b9a\u662f$a_l,a_l,a_l+1,a_l+2...a_l+(r-l-1)$\uff0c\u70b9$l$\u4e0d\u52a8\u4e14\u4e3a\u5176\u4e2d\u7684\u6700\u5c0f\u503c\u3002\n\n\u6240\u4ee5\u6211\u4eec\u6709\u7ed3\u8bba\uff1a**\u82e5\u80fd\u627e\u5230\u4e00\u4e2a$i$\uff0c\u4f7f\u5f97$a_i\\not = a_{i-1}$\u4e14$\\forall_j a_i\\leq a_j$\uff0c$i$\u53ef\u4ee5\u4f5c\u4e3a$p$\uff0c\u65b9\u6848\u5b58\u5728\u3002**\n\n\u90a3\u4e48\u6700\u540e\u8fd8\u5269\u4e0b\u627e\u4e0d\u5230$i$\u7684\u73af\uff0c\u5176\u4e0a\u7684\u70b9\u5fc5\u7136\u662f\u6240\u6709$a$\u76f8\u7b49\u7684\uff0c\u8fd9\u4e2a\u5c31\u5f88\u5bb9\u6613\u8003\u8651\u4e86\uff0c\u56e0\u4e3a\u6240\u6709\u70b9\u90fd\u7b49\u4ef7\uff0c\u6240\u4ee5\u53ef\u4ee5\u4efb\u53d6\u4e00\u4e2a\u4f5c\u4e3a$p$\uff0c\u6700\u540e\u7684\u5e8f\u5217\u4e00\u5b9a\u957f\u6210$a_p,a_p+1,a_p,a_p+1,a_p,a_{p}+1...$\u7684\u5f62\u5f0f\u3002\n\n**\u8fd9\u5c31\u76f8\u5f53\u4e8e\u4e00\u4e2a\u4e8c\u5206\u56fe\u67d3\u8272\uff0c\u53ea\u6709\u5f53$k$\u4e3a\u5947\u6570\u65f6\uff0c\u5b58\u5728\u76f8\u90bb\u4e24\u4e2a$a$\u76f8\u7b49\uff0c\u4e0d\u5408\u6cd5\uff1b\u5f53$a$\u4e3a\u5076\u6570\u65f6\u5b58\u5728\u5408\u6cd5\u65b9\u6848\u3002**\n\n\u7efc\u4e0a\uff0c\u5f53\u4e14\u5f53\u4e14\u4ec5\u5f53\u73af\u957f\u4e3a\u5947\u6570\u4e14\u73af\u4e0a\u7ed3\u70b9\u7684$a$\u90fd\u76f8\u7b49\u65f6\u65e0\u89e3\u3002\n## Code\n\n```cpp\nvector<int> e[MAXN];\nint fa[MAXN],vis[MAXN],instk[MAXN],flag[MAXN],tag[MAXN],f[MAXN],n;\nvoid dfs(int x)\n{\n\tvis[x]=1,instk[x]=1;\n\tfor (auto v:e[x])\n\t{\n\t\tif (instk[v]) \n\t\t{\n\t\t\tfor (int p=x;p!=v;p=fa[p]) flag[p]=1;\n\t\t\tflag[v]=1;\n\t\t}\n\t\telse fa[v]=x,dfs(v);\n\t}\n\tinstk[x]=0;\n}\n\nvoid tree_dp(int x,int father)\n{\n\tfor (auto v:e[x]) if (v!=father&&!flag[v]) tree_dp(v,x);\n\tfor (auto v:e[x]) if (v!=father&&!flag[v]) tag[f[v]]=x;\n\tfor (int i=0;i<n;i++) \n\t\tif (tag[i]!=x) { f[x]=i; return; }\n}\n\nsigned main()\n{\n\tn=read();\n\tfor (int i=1,x;i<=n;i++) x=read(),e[x].PB(i);\n\tfor (int i=1;i<=n;i++) if (!vis[i]) dfs(i);\n\tint p=0,num=0;\n\tfor (int i=1;i<=n;i++) \n\t\tif (flag[i]) tree_dp(i,0),p=f[i],num++;\n\tif (!(num&1)) { puts(\"POSSIBLE\"); return 0; } \n\tfor (int i=1;i<=n;i++)\n\t\tif (flag[i]&&p!=f[i]) { puts(\"POSSIBLE\"); return 0; }\n\tputs(\"IMPOSSIBLE\");\n\treturn 0;\n}\n\n\n```\n",
        "postTime": 1609144898,
        "uid": 32063,
        "name": "fade_away",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT2663 \u3010[ARC079D] Namori Grundy\u3011"
    }
]