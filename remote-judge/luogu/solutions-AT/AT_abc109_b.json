[
    {
        "content": "[\u9898\u9762](https://www.luogu.com.cn/problem/AT4252)\n\n\u672c\u9898\u53ea\u9700\u8981\u4e00\u4e2a\u6a21\u62df\u3002\u6211\u4eec\u7528\u4e00\u4e2a map \u5b58\u50a8\u662f\u5426\u51fa\u73b0\uff0c\u4e00\u4e2a\u5b57\u7b26\u53d8\u91cf\u5b58\u50a8\u4e0a\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5c3e\u5b57\u6bcd\uff0c\u5224\u65ad\u5373\u53ef\u3002\n\n\u4ee3\u7801\n```cpp\n  #include<bits/stdc++.h>\n  using namespace std;\n  int n;\n  char c;\n  string s;\n  map<string,bool>m;\n  int main()\n  {\n      scanf(\"%d\\n\",&n);n--;//\u5148\u5904\u7406\u7b2c\u4e00\u4e2a\n      cin>>s;\n      m[s]=1;\n      c=s[s.length()-1];\n      while(n--){//\u5728\u5904\u7406\u540e\u9762\u7684\n          cin>>s;\n          if(s[0]!=c){//\u9996\u5b57\u6bcd\u4e0d\u662f\u524d\u4e00\u4e2a\u7684\u5c3e\u5b57\u6bcd\n              printf(\"No\");\n              return 0;\n          }\n          if(m.count(s)==1){//\u91cd\u590d\u4e86\n              printf(\"No\");\n              return 0;\n          }\n          m[s]=1;\n          c=s[s.length()-1];\n      }\n      printf(\"Yes\");\n      return 0;\n  }\n```",
        "postTime": 1640399218,
        "uid": 428358,
        "name": "cqbztzl",
        "ccfLevel": 5,
        "title": "AT4252\u9898\u89e3"
    },
    {
        "content": "# \u7b97\u6cd5\n**\u6a21\u62df**\n# \u601d\u8def\n\u6211\u4eec\u770b\u4e00\u4e0b\u9898\uff0c\u77e5\u9053\u4e86\u4e00\u4e9b\u6761\u4ef6\uff1a\n1. \u7b2c $i$ \u4e2a\u5b57\u7b26\u4e32\u6ca1\u6709\u51fa\u73b0\u8fc7\n2. \u7b2c $i$ \u4e2a\u5b57\u7b26\u4e32\u7684**\u9996\u5b57\u6bcd**\u5fc5\u987b\u662f\u7b2c $i - 1$ \u4e2a\u5b57\u7b26\u4e32\u7684**\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd**\n\n\u6211\u4eec\u77e5\u9053\u4e86\u8fd9\u4e9b\u6761\u4ef6\u540e\uff0c\u4fbf\u53ef\u4f9d\u9760\u8fd9\u4e9b\u5df2\u77e5\u7684\u4e1c\u897f\u8fdb\u884c\u6a21\u62df\u4e86\n\n\u6211\u73b0\u5728\u5c31\u8fb9\u770b\u4ee3\u7801\u8fb9\u8bb2\u89e3\u4e00\u4e0b\u601d\u8def\n# code\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint n,len;\nstring s;\nstring arr[20005];\nchar t;\n\nbool f(){//\u7528\u6765\u5bfb\u627e\u5f53\u524d\u5b57\u7b26\u4e32\u662f\u5426\u662f\u7b2c\u4e00\u6b21\u51fa\u73b0 \n\tfor (int i = 1;i <= len;i++){//\u8fd0\u7528\u5faa\u73af\u67e5\u627e \n\t\tif (arr[i] == s){//\u5982\u679c\u627e\u5230\u4e86 \n\t\t\treturn false;//\u76f4\u63a5\u8fd4\u56de false\uff0c\u7ed3\u675f \n\t\t}\n\t}\n\tarr[++len] = s;//\u6ca1\u6709\u627e\u5230\uff0c\u5c06\u5f53\u524d\u5b57\u7b26\u4e32\u50a8\u5b58\u5728\u6570\u7ec4\u4e2d \n\treturn true;//\u5e76\u4e14\uff0c\u8fd4\u56de true \n}\n\nint main(){\n\tcin >> n;//\u8f93\u5165\u6b21\u6570 \n\tfor (int i = 1;i <= n;i++){//\u5faa\u73af \n\t\tcin >> s;//\u8f93\u5165\u5f53\u524d\u5b57\u7b26\u4e32 \n\t\tif (f()){//\u5229\u7528\u51fd\u6570\u5224\u65ad\u5f53\u524d\u5b57\u7b26\u4e32\u662f\u5426\u662f\u7b2c\u4e00\u6b21\u51fa\u73b0 \n\t\t\tif (!(arr[i][0] == t) && i != 1){//\u5982\u679c\u5f53\u524d\u5b57\u7b26\u4e32\u7684\u9996\u5b57\u6bcd\u4e0e\u524d\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\u4e0d\u76f8\u540c\uff0c\u5e76\u4e14\u5f53\u524d\u4e0d\u662f\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u8bdd \n\t\t\t\tcout << \"No\";//\u8f93\u51fa No \n\t\t\t\treturn 0;//\u63d0\u524d\u7ed3\u675f\u7a0b\u5e8f \n\t\t\t}\n\t\t\tt = s[s.length() - 1];//\u5c06 t \u91cd\u7f6e\u4e3a\u5f53\u524d\u5b57\u7b26\u4e32\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd \n\t\t}\n\t\telse{//\u5982\u679c\u4e0d\u662f\u7b2c\u4e00\u6b21\u51fa\u73b0 \n\t\t\tcout << \"No\";//\u8f93\u51fa No \n\t\t\treturn 0;//\u63d0\u524d\u7ed3\u675f\u7a0b\u5e8f \n\t\t}\n\t}\n\tcout << \"Yes\";//\u6ca1\u6709\u4e0d\u6ee1\u8db3\u60c5\u51b5\u7684\u5b57\u7b26\u4e32\uff0c\u8f93\u51faYes \n\treturn 0;\n}\n```",
        "postTime": 1644829685,
        "uid": 383395,
        "name": "WaterSun",
        "ccfLevel": 5,
        "title": "[\u9898\u89e3]AT4252 [ABC109B] Shiritori"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/AT4252)\n\n## \u524d\u7f6e\u77e5\u8bc6\n\n**Hash**\n\n## \u601d\u8def\n\n\u53d1\u73b0\u73b0\u5728\u9898\u89e3\u533a\u7684\u5927\u4f6c\u5728\u5904\u7406**\u7b2c i \u4e2a\u5b57\u7b26\u4e32\u6ca1\u6709\u51fa\u73b0\u8fc7**\u65f6\u90fd\u7528\u7684  Map \u89e3\u51b3\uff0c\u5176\u5b9e\u6211\u4eec\u53ef\u4ee5\u7528  Hash \u3002\n\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5bf9  Hash  \u7684\u5904\u7406\u4e3a **unsigned long long** \u81ea\u7136\u6ea2\u51fa\u5373\u53ef\u3002\n\n## \u4ee3\u7801\n\n```cpp\n  #include<bits/stdc++.h>\n  using namespace std;\n  int n,len;\n  string s;\n  char last;\n  string p;\n  bool f[100000005];\n  unsigned long long find(string s,int len){\n      unsigned long long hash[105];\n      for(int i=0;i<=len;i++){\n          hash[i]=(hash[i-1]*97+s[i]-'a')%50026939;\n      }\n      return hash[len];\n  }\n  signed main(){\n      cin>>n>>s;\n      len=s.length()-1;\n      last=s[len];\n      f[find(s,len)]=true;\n      for(int i=2;i<=n;i++){\n          cin>>s;\n          len=s.length()-1;\n          unsigned long long x=find(s,len);\n          if(f[x]==true){\n              cout<<\"No\";\n              return 0;\n          }\n          f[x]=true;\n          if(s[0]!=last){\n              cout<<\"No\";\n              return 0;\n          }\n          last=s[len];\n      }\n      cout<<\"Yes\";\n      return 0;\n  }\n```\n",
        "postTime": 1640397408,
        "uid": 493271,
        "name": "Shimmer_of_Cloud_gap",
        "ccfLevel": 0,
        "title": "AT4252 [ABC109B] Shiritori \u9898\u89e3"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/AT4252)\n\n## \u601d\u8def\n\n\u5bf9\u4e8e\u4e24\u79cd\u5224\u65ad\u60c5\u51b5\uff0c\u6211\u4eec\u5206\u5f00\u5904\u7406\uff1a\n\n> 1. \u6ee1\u8db3\u7b2c i \u4e2a\u5b57\u7b26\u4e32\u6ca1\u6709\u51fa\u73b0\u8fc7\n\n\u6211\u4eec\u53ef\u4ee5\u7528 $ Hash $ \u89e3\u51b3\uff0c\u4f46\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u4f7f\u7528 $ Map $\u3002\n\n> 2. \u7b2c i \u4e2a\u5b57\u7b26\u4e32\u7684\u9996\u5b57\u6bcd\u5fc5\u987b\u662f\u7b2c $ i - 1 $ \u4e2a\u5b57\u7b26\u4e32\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\n\n\u6211\u4eec\u7528\u4e00\u4e2a\u5b57\u7b26\u8bb0\u5f55\u4e0a\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\uff0c\u7136\u540e\u8fdb\u884c\u6bd4\u8f83\u5c31\u884c\u4e86\u3002\n\n## \u4ee3\u7801\n\n```cpp\n  #include<bits/stdc++.h>\n  using namespace std;\n  int n,len;\n  string s;\n  char last;\n  map<string,bool> m;\n  signed main(){\n      cin>>n;\n      cin>>s;\n      len=s.length()-1;\n      last=s[len];\n      m[s]=true;\n      for(int i=2;i<=n;i++){\n          cin>>s;\n          if(m[s]==true){\n              cout<<\"No\";\n              return 0;\n          }\n          m[s]=true;\n          len=s.length()-1;\n          if(s[0]!=last){\n              cout<<\"No\";\n              return 0;\n          }\n          last=s[len];\n      }\n      cout<<\"Yes\";\n      return 0;\n  }\n```\n",
        "postTime": 1640396677,
        "uid": 557117,
        "name": "I_love_JTL_forever",
        "ccfLevel": 0,
        "title": "AT4252 [ABC109B] Shiritori \u9898\u89e3"
    },
    {
        "content": "\u5bf9\u4e8e\u672c\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u6309\u7167\u9898\u76ee\u6a21\u62df\uff1a\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 `unordered_map` \u6765\u7ef4\u62a4\u6bcf\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u51fa\u73b0\u8fc7\u3002\u5bf9\u4e8e\u6536\u5c3e\u662f\u5426\u76f8\u540c\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7528\u5b57\u7b26\u8bb0\u5f55\u4e0b\u6765\uff0c\u7136\u540e\u5224\u65ad\u662f\u5426\u76f8\u7b49\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u672c\u9898\uff0c\u6211\u4eec\u80fd\u5f71\u54cd\u5230\u7b54\u6848\u7684\u53ea\u6709\u524d\u540e\u4e24\u4e2a\uff0c\u53ef\u4ee5\u8003\u8651\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\u3002\n### AC Code:\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nunordered_map<string,bool> vis;//\u6807\u8bb0\u6bcf\u4e2a\u5b57\u7b26\u662f\u5426\u51fa\u73b0\nstring s1,s2;\nint n;\nint main(){\n\tcin>>n>>s1;\n\tvis[s1]=1;//\u628a\u7b2c\u4e00\u4e2a\u6570\u6807\u8bb0\u4e3a\u51fa\u73b0\u8fc7\n\tfor(int i=1;i<n;++i){\n\t\tcin>>s2;\n\t\tif(vis[s2]){\n\t\t\tprintf(\"No\");//\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u51fa\u73b0\u8fc7\n\t\t\treturn 0;\n\t\t}\n\t\tvis[s2]=1;\n\t\tif(s1[s1.size()-1]!=s2[0]){//\u5224\u65ad\u4e24\u4e2a\u5b57\u7b26\u662f\u5426\u76f8\u7b49\n\t\t\tprintf(\"No\");\n\t\t\treturn 0;\n\t\t}\n\t\ts1=s2;//\u6eda\u52a8\n\t}\n\tprintf(\"Yes\");\n    return 0;\n}\n```",
        "postTime": 1640402626,
        "uid": 556362,
        "name": "UnnamedOrNamed",
        "ccfLevel": 5,
        "title": "AT4252 [ABC109B] Shiritori \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u76f4\u63a5\u4e0a map \u3002\n\n\u7528 $ds_s$ \u6765\u8bb0\u5f55\u5b57\u7b26\u4e32 $s$ \u662f\u5426\u51fa\u73b0\u8fc7\uff0c\u7528 $last$ \u8bb0\u5f55\u4e0a\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u5373\u53ef\u3002\n\n## _Code_\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<map>\nusing namespace std;\nmap <string,bool> ds;\nstring s;\nchar last;\nint n;\nint main(){\n\tcin>>n>>s;\n\tlast=s[s.length()-1];\n\tds[s]=1;\n\tfor(int i=1;i<n;i++){\n\t\tcin>>s;\n\t\tif(s[0]!=last||ds[s]){\n\t\t\tcout<<\"No\"<<endl;\n\t\t\treturn 0;\n\t\t}\n\t\tlast=s[s.length()-1];\n\t\tds[s]=1;\n\t}\n\tcout<<\"Yes\"<<endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1619304732,
        "uid": 248400,
        "name": "Inaba_Meguru",
        "ccfLevel": 7,
        "title": "AT4252 [ABC109B] Shiritori \u9898\u89e3"
    },
    {
        "content": "\u9898\u610f\uff1a\u6709$n$\u4e2a\u5b57\u7b26\u4e32\uff0c\u9700\u8981\u540c\u65f6\u6ee1\u8db3\u7b2c$i$\u4e2a\u5b57\u7b26\u4e32\u6ca1\u6709\u51fa\u73b0\u8fc7\u548c\u7b2c$i$\u4e2a\u5b57\u7b26\u4e32\u7684\u9996\u5b57\u6bcd\u5fc5\u987b\u662f\u7b2c$i-1$\u4e2a\u5b57\u7b26\u4e32\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\u3002\u53ea\u8981\u4e0d\u6ee1\u8db3\u5176\u4e2d\u4efb\u610f\u4e00\u4e2a\u8981\u6c42\u5c31\u8f93\u51fa`No`\uff0c\u5426\u5219\u8f93\u51fa`Yes`\uff0c\u9700\u8981\u6362\u884c\u3002\n****\n\u9996\u5148\u6211\u4eec\u9700\u8981\u5efa\u7acb\u4e00\u4e2a**map**\u6765\u7edf\u8ba1\u6bcf\u4e2a\u5355\u8bcd\u662f\u5426\u51fa\u73b0\uff0c\u7136\u540e\u5728\u8bfb\u5165\u65f6\u8bb0\u4e0b\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include <string> // std::string\n#include <map> // std::map\n#include <iostream> // std::cin, std::cout\n#include <cstdio> // puts\n#include <cstdlib> // EXIT_SUCCESS\n\nint n; // \u603b\u6570\nchar last; // \u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\nstd::string temp; // \u4e34\u65f6string\nstd::map<std::string,bool> M; // \u5efa\u7acbmap\n\nint main()\n{\n    std::cin>>n;\n    std::cin>>temp; // \u8bfb\u5165\u7b2c\u4e00\u4e2a\n    last = temp[temp.length()-1];\n    for (int i=1;i<n;i++)\n    {\n    \tstd::cin>>temp;\n        if (M[temp]==1 || temp[0]!=last)\n        {\n            puts(\"No\"); // puts\u81ea\u5e26\u6362\u884c\n            return EXIT_SUCCESS;\n        }\n        last = temp[temp.length()-1]; // \u8bb0\u5f97\u8981\u91cd\u65b0\u8bbe\u7f6elast\n    }\n    puts(\"Yes\");\n    return EXIT_SUCCESS;\n}\n```\n****\n\u603b\u7ed3\uff1a\u6211\u7684\u601d\u8def\u548c[leoair](https://www.luogu.com.cn/user/124527)\u5927\u4f6c\u7684\u601d\u8def\u5dee\u4e0d\u591a\uff0c\u5728\u4ed6\u4ee3\u7801\u7684\u57fa\u7840\u4e0a\u4f18\u5316\u4e86\u8bb8\u591a\uff0c\u51cf\u5c11\u4e86$for$\u5faa\u73af\u591a\u4f59\u7684\u6761\u4ef6\u5224\u65ad\u3002",
        "postTime": 1590886177,
        "uid": 312489,
        "name": "hero_brine",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT4252 \u3010[ABC109B] Shiritori\u3011"
    },
    {
        "content": "# Shiritori\n\n\u9898\u76ee\u5927\u610f:\u6709$n$\u4e2a\u5b57\u7b26\u4e32\uff0c\u9700\u8981\u540c\u65f6\u6ee1\u8db3\u7b2c$i$\u4e2a\u5b57\u7b26\u4e32\u6ca1\u6709\u51fa\u73b0\u8fc7\u548c\u7b2c$i$\u4e2a\u5b57\u7b26\u4e32\u7684\u9996\u5b57\u6bcd\u5fc5\u987b\u662f\u7b2c$i-1$\u4e2a\u5b57\u7b26\u4e32\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd(\u5f53\u7136\uff0c$i$\u8981\u5927\u4e8e$1$)\u3002\u53ea\u8981\u4e0d\u6ee1\u8db3\u5176\u4e2d\u4efb\u610f\u4e00\u4e2a\u8981\u6c42\u5c31\u8f93\u51fa$No$\uff0c\u5426\u5219\u8f93\u51fa$Yes$\u3002\n\n\u8fd9\u9053\u9898\u5982\u679c\u6ca1\u6709\u7b2c$2$\u4e2a\u8981\u6c42\u7684\u8bdd\uff0c\u5176\u5b9e\u5c31\u662f\u4e2a$map$\u7684\u6a21\u677f\u9898\u3002\u7b2c$2$\u4e2a\u8981\u6c42\u53ea\u9700\u8981\u518d\u5b9a\u4e49\u4e00\u4e2a\u5b57\u7b26\u8bb0\u5f55\u524d\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\u3002\n\n\u63a5\u4e0b\u6765\u770b\u770b\u5b9e\u73b0:\n\n### Code:\n\n```cpp\n#include <bits/stdc++.h>\n#define REP(i, a, b) for (long long i = a; i <= b; ++i)\n#define ll long long\nusing namespace std;\n\nll n;\nchar lst;\nstring s;\n\nmap < string, ll > a;\n\ninline ll read(){\t\t\t\t\t\t\t\t//\u5feb\u8bfb \n\tll s = 0, w = 1;\n\tchar ch = getchar();\n\twhile (ch < '0' || ch > '9'){\n\t\tif (ch == '-') w *= -1;\n\t\tch = getchar();\n\t}\n\twhile (ch >= '0' && ch <= '9'){\n\t\ts = s * 10 + ch - '0';\n\t\tch = getchar();\n\t}\n\treturn s * w;\n}\n\ninline void work(){\n\tn = read();\t\t\t\t\t\t\t\t\t//\u6709n\u4e2a\u5b57\u7b26\u4e32 \n\tREP(i, 1, n){\n\t\tcin >> s;\t\t\t\t\t\t\t\t//\u8f93\u5165\u5b57\u7b26\u4e32 \n\t\tif (a[s] > 0 || s[0] != lst && i > 1){\t//\u5982\u679c\u4e0d\u7b26\u5408\u8981\u6c42 \n\t\t\tputs(\"No\");\t\t\t\t\t\t\t//\u8f93\u51faNo \n\t\t\texit(0);\t\t\t\t\t\t\t//\u76f4\u63a5\u7ed3\u675f\u672c\u7a0b\u5e8f \n\t\t}\n\t\ta[s]++;\t\t\t\t\t\t\t\t\t//\u6253\u6807\u8bb0 \n\t\tlst = s[s.size() - 1];\t\t\t\t\t//\u8bb0\u5f55\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\uff0c\u5343\u4e07\u4e0d\u80fd\u5c11\uff01 \u5343\u4e07\u4e0d\u80fd\u5c11\uff01\u5343\u4e07\u4e0d\u80fd\u5c11\uff01\n\t}\n\tputs(\"Yes\");\t\t\t\t\t\t\t\t//\u8f93\u51faYes \n}\n\nint main(){\n\twork();\n\treturn 0;\n}\n```\n\n",
        "postTime": 1583320082,
        "uid": 124527,
        "name": "leoair",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT4252 \u3010[ABC109B] Shiritori\u3011"
    }
]