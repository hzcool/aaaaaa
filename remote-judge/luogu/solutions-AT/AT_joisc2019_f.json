[
    {
        "content": "~~\u53cc \u4eba d i j k s t r a \u6e38\u620f\u3002~~\n\n\u8003\u8651 dij \u7684\u8fc7\u7a0b\uff0c\u53ef\u4ee5\u8ba9\u4e24\u4eba\u5171\u4eab\u5f53\u524d\u5df2\u7ecf\u786e\u5b9a dis \u7684\u96c6\u5408 $S$\uff0c\u6bcf\u6b21\u6bcf\u4e2a\u4eba\u7ef4\u62a4 $S$ \u53ea\u7ecf\u8fc7\u81ea\u5df1\u7684\u67d0\u6761\u8fb9\u5230\u8fbe\u7684\u8ddd\u79bb\u6700\u5c0f\u7684\u70b9\uff0c\u90a3\u4e48\u5168\u5c40 dis \u6700\u5c0f\u7684\u70b9\u5c31\u662f\u4e24\u4e2a\u4eba\u6269\u5c55\u70b9\u4e4b\u4e00\u3002\n\n\u663e\u7136\u53ef\u4ee5\u76f4\u63a5\u4f20\u9012\uff0c\u4f46\u6b21\u6570\u6709\u70b9\u591a\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528 dij \u7684\u4e00\u4e9b\u6027\u8d28\u3002\u5177\u4f53\u7684\u7ec6\u8282\u5c31\u662f\u8bf4\u6bcf\u4e2a\u4eba\u544a\u8bc9\u5bf9\u65b9\u8ddd\u79bb\u4e0a\u4e00\u4e2a\u786e\u5b9a\u7684\u70b9 dis \u589e\u5927\u4e86\u591a\u5c11\uff0c\u663e\u7136\u8fd9\u662f $\\le 500$ \u7684\uff0c\u53ef\u4ee5\u7528 $9\\text{bit}$ \u4f20\u9012\u3002\n\n\u6bcf\u6b21\u4e24\u4e2a\u4eba\u4ea4\u6362\u4e0b\u4e00\u4e2a\u6269\u5c55\u70b9\u8ddd\u79bb\u4e0a\u4e00\u4e2a\u7684 dis \u5dee\uff0c\u82b1\u8d39 $18\\text{bit}$\uff0c\u7136\u540e\u7531 dis \u5c0f\u4eba\u7528 $11\\text{bit}$ \u544a\u8bc9\u53e6\u4e00\u4e2a\u4eba\u70b9\u7684\u7f16\u53f7\u3002\n\n\u8fd9\u6837\u786e\u5b9a\u4e00\u4e2a\u70b9\u9700\u8981 $29\\text{bit}$\uff0c\u6070\u597d\u53ef\u4ee5\u901a\u8fc7\u3002\n\nA.cpp\n\n```cpp\n#include \"Azer.h\"\n#include <vector>\n#include <climits>\n#include <cassert>\n#include <cstring>\n#include <iostream>\n\nusing namespace std;\n\ntypedef long long ll;\n#define fi first\n#define se second\n#define mp make_pair\n#define pb push_back\n#define pf push_front\n#define rep(i, s, t) for (int i = s; i <= t; ++i)\n#define per(i, s, t) for (int i = t; i >= s; --i)\n\nnamespace {\n\nconst int N = 2e3 + 5;\n\nint n;\nvector<pair<int, int>> adj[N];\nint stage;\n/*\n\tstage = 1: dis sent already, waiting to recieve dis\n\tstage = 2: waiting to recieve p\n */\nint c, cv;\nint dis[N], last, ddis;\nbool vis[N];\nbool comp;\n\nvoid send(int x, int b) {\n\tif(comp) return;\n\tper(i, 0, b-1) SendA(x >> i & 1);\n}\n\nvoid updstage() {\n\tcomp = 1;\n\trep(i, 0, n-1) comp &= !vis[i];\n\tint mi = INT_MAX, u = n;\n\trep(i, 0, n-1) if(!vis[i] && dis[i] < mi) mi = dis[i], u = i;\n\tif(ddis >= dis[u]) {\n\t\tsend(u, 11);\n\t\tddis = -1;\n\t\tlast = dis[u];\n\t\tvis[u] = 1;\n\t\tfor(auto [v, w] : adj[u]) dis[v] = min(dis[v], dis[u] + w);\n\t\tint mii = INT_MAX, uu = n;\n\t\trep(i, 0, n-1) if(!vis[i] && dis[i] < mii) mii = dis[i], uu = i;\n\t\tsend(min(501, dis[uu] - last), 9);\n\t\tstage = 1;\n\t\tc = 9;\n\t} else if(ddis != -1) {\n\t\tlast = ddis;\n\t\tstage = 2;\n\t\tc = 11;\n\t} else {\n\t\tstage = 1;\n\t\tc = 9;\n\t}\n}\n\nvoid senddis() {\n\tint mi = INT_MAX, u = n;\n\trep(i, 0, n-1) if(!vis[i] && dis[i] < mi) mi = dis[i], u = i;\n\tsend(min(501, dis[u] - last), 9);\n\tupdstage();\n}\n\nvoid recdis(int x) {\n\tddis = last + x;\n\tupdstage();\n}\n\nvoid recp(int u) {\n\tassert(ddis != -1);\n\tassert(stage == 2);\n\tdis[u] = ddis;\n\tvis[u] = 1;\n\tfor(auto [v, w] : adj[u]) dis[v] = min(dis[v], dis[u] + w);\n\tddis = -1;\n\tsenddis();\n}\n\nvoid rec(int x) {\n\tcv = 0;\n\tif(stage == 1) {\n\t\trecdis(x);\n\t} else { //recieve \n\t\trecp(x);\n\t}\n}\n\n}  // namespace\n\nvoid InitA(int N, int A, std::vector<int> U, std::vector<int> V, std::vector<int> C) {\n\t::n = N;\n\tfor (int i = 0; i < A; ++i) {\n\t\tadj[U[i]].emplace_back(V[i], C[i]);\n\t\tadj[V[i]].emplace_back(U[i], C[i]);\n\t}\n\tmemset(dis, 0x3f, sizeof dis);\n\tvis[0] = 1;\n\tdis[0] = 0;\n\tddis = -1;\n\tfor(auto [v, w] : adj[0]) dis[v] = min(dis[v], dis[0] + w);\n\tstage = 1, c = 9;\n\tsenddis();\n}\n\nvoid ReceiveA(bool x) {\n\tcv = cv << 1 | x;\n\tif(--c == 0) rec(cv);\n}\n\nstd::vector<int> Answer() {\n\treturn vector<int>(dis, dis + n);\n}\n\n```\n\nB.cpp\n\n```cpp\n#include \"Baijan.h\"\n#include <vector>\n#include <climits>\n#include <cassert>\n#include <cstring>\n#include <iostream>\n\nusing namespace std;\n\ntypedef long long ll;\n#define fi first\n#define se second\n#define mp make_pair\n#define pb push_back\n#define pf push_front\n#define rep(i, s, t) for (int i = s; i <= t; ++i)\n#define per(i, s, t) for (int i = t; i >= s; --i)\n\nnamespace {\n\nconst int N = 2e3 + 5;\n\nint n;\nvector<pair<int, int>> adj[N];\nint stage;\nint c, cv;\nbool vis[N];\nint dis[N], last, ddis;\nbool comp;\n\nvoid send(int x, int b) {\n\tif(comp) return;\n\tper(i, 0, b-1) SendB(x >> i & 1);\n}\n\nvoid updstage() {\n\tcomp = 1;\n\trep(i, 0, n-1) comp &= !vis[i];\n\tint mi = INT_MAX, u = n;\n\trep(i, 0, n-1) if(!vis[i] && dis[i] < mi) mi = dis[i], u = i;\n\tif(ddis > dis[u]) {\n\t\tsend(u, 11);\n\t\tddis = -1;\n\t\tlast = dis[u];\n\t\tvis[u] = 1;\n\t\tfor(auto [v, w] : adj[u]) dis[v] = min(dis[v], dis[u] + w);\n\t\tint mii = INT_MAX, uu = n;\n\t\trep(i, 0, n-1) if(!vis[i] && dis[i] < mii) mii = dis[i], uu = i;\n\t\tsend(min(501, mii  - last), 9);\n\t\tstage = 1;\n\t\tc = 9;\n\t} else if(ddis != -1) {\n\t\tlast = ddis;\n\t\tstage = 2;\n\t\tc = 11;\n\t} else {\n\t\tstage = 1;\n\t\tc = 9;\n\t}\n}\n\nvoid senddis() {\n\tint mi = INT_MAX, u = n;\n\trep(i, 0, n-1) if(!vis[i] && dis[i] < mi) mi = dis[i], u = i;\n\tsend(min(501, dis[u] - last), 9);\n\tupdstage();\n}\n\nvoid recdis(int x) {\n\tddis = last + x;\n\tupdstage();\n}\n\nvoid recp(int u) {\n\tassert(ddis != -1);\n\tassert(stage == 2);\n\tdis[u] = ddis;\n\tvis[u] = 1;\n\tfor(auto [v, w] : adj[u]) dis[v] = min(dis[v], dis[u] + w);\n\tddis = -1;\n\tsenddis();\n}\n\nvoid rec(int x) {\n\tcv = 0;\n\tif(stage == 1) {\n\t\trecdis(x);\n\t} else { //recieve \n\t\trecp(x);\n\t}\n}\n}  // namespace\n\nvoid InitB(int N, int B, std::vector<int> S, std::vector<int> T, std::vector<int> D) {\n\t::n = N;\n\tfor(int i = 0; i < B; ++i) {\n\t\tadj[S[i]].emplace_back(T[i], D[i]);\n\t\tadj[T[i]].emplace_back(S[i], D[i]);\n\t}\n\tmemset(dis, 0x3f, sizeof dis);\n\tvis[0] = 1;\n\tdis[0] = 0;\n\tddis = -1;\n\tfor(auto [v, w] : adj[0]) dis[v] = min(dis[v], dis[0] + w);\n\tstage = 1, c = 9;\n\tsenddis();\n}\n\nvoid ReceiveB(bool x) {\n\tcv = cv << 1 | x;\n\tif(--c == 0) rec(cv);\n}\n\n```",
        "postTime": 1685091689,
        "uid": 95103,
        "name": "KellyFrog",
        "ccfLevel": 9,
        "title": "\u9898\u89e3\u3010JOISC 2019 D2T3 Two Transportations\u3011"
    }
]