[
    {
        "content": "\u770b\u5230\u6b64\u9898\u7b2c\u4e00\u53cd\u5e94\uff1aDP\n\n\u4e00\u4f1a\u540e\uff1a\u600e\u4e48DP QAQ\uff08\u9677\u5165\u6050\u614c\uff09\n\n\u7ec6\u5fc3\u63a8\u7406\u4ee5\u4e0b\uff0c\u4fbf\u6709\u4e86\u601d\u8def\uff1a\n\n\u7531\u4e8e\u53ea\u80fd\u5411\u4e0a\u6216\u5411\u53f3\u79fb\u52a8\uff0c\u6240\u4ee5\u4ece\u5de6\u4e0b\u89d2\u5f00\u59cb\u5230\u53f3\u4e0a\u89d2\uff0c\u5bf9\u4e8e\u5fc5\u7ecf\u7684\u683c\u5b50\uff0c\u6211\u4eec\u53ea\u80fd\u4ece\u4e0a\u5230\u4e0b\uff0c\u4ece\u5de6\u5230\u53f3\u7ecf\u8fc7\uff0c\u6bd4\u5982\u8bf4\uff1a\n\n\u6211\u4eec\u53ef\u4ee5\u4ece(3,4) -> (5, 5)\n\n\u7136\u540e\u7531\u4e8e\u6bcf\u4e00\u4e2a\u683c\u5b50\u6709\u56db\u79cd\u60c5\u51b5\uff0c\u7a0d\u5fae\u5224\u65ad\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u7136\u540e\u4ece(x,y) -> (p,q)\u7684\u65b9\u6848\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u6765\uff08\u76f8\u5f53\u4e8e\u4ece(1,1) -> (p - x + 1, q - y + 1)\u4e14\u4e2d\u95f4\u6ca1\u6709\u4efb\u4f55\u8981\u6c42\uff09\n\n\u5c06\u8bfb\u5165\u7684\u70b9\u6392\u5e8f\uff08x\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0cy\u4e3a\u7b2c\u4e8c\uff0c\u4ece\u5de6\u5230\u53f3\u626b\u4e00\u904d\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u7edf\u8ba1\u7531\u4e0a\u4e00\u4e2a\u70b9\u8f6c\u79fb\u6765\u7684\u7b54\u6848\u5373\u53ef\uff09\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#pragma GCC optimize(\"Ofast\")\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n\ninline void read (int& s) {\n\ts = 0;\n\tstatic char c = getchar ();\n\twhile (c < '0' || c > '9') c = getchar ();\n\twhile (c >= '0' && c <= '9') s = (s << 3) + (s << 1) + (c & 15), c = getchar ();\n\treturn ;\n}\n\nconst int zh[4][2] = {\n\t{0, 0},\n\t{0, 1},\n\t{1, 0},\n\t{1, 1}\n};\n\nconst int N = 1003, MOD = 1000000007, K = 203;\nint n, m, k, f[N][N], g[N][N];\nstruct stu {\n\tint x, y;\n\tinline bool operator < (const stu& p) const {\n\t\tif (x == p.x) return y < p.y;\n\t\treturn x < p.x;\n\t}\n}s[K];\n\ninline int cal (const int a, const int b, const int c, const int d) {\n\tif (a > c || b > d) return 0;\n\treturn f[c - a + 1][d - b + 1];\n}\n\ninline void work (const int a, const int b, const int c, const int d) {\n\tint u, p, q, l, r;\n\tif (a == 1 && b == 1) {\n\t\tfor (u = 1; u < 3; ++u) {\n\t\t\tp = c + zh[u][0];\n\t\t\tq = d + zh[u][1];\n\t\t\tif (p > n || q > m) continue;\n\t\t\tg[p][q] += 1ll * g[1][1] * cal (1, 1, p, q) % MOD;\n\t\t\tg[p][q] = g[p][q] >= MOD ? g[p][q] - MOD : g[p][q];\n\t\t} \n\t}\n\telse {\n\t\tfor (u = 1; u < 3; ++u) {//\u8fd9\u662f\u4e3a\u4e86\u907f\u514d\u7b54\u6848\u7b97\u91cd\uff0c\u53ea\u4ece\u5de6\u4e0a&\u53f3\u4e0b\u70b9\u51fa\u53d1\n\t\t\tl = a + zh[u][0];\n\t\t\tr = b + zh[u][1];\n\t\t\tif (l > n || r > m) continue;\n\t\t\tfor (int o = 0; o < 4; ++o) {\n\t\t\t\tp = c + zh[o][0];\n\t\t\t\tq = d + zh[o][1];\n\t\t\t\tif (p > n || q > m) continue;\n\t\t\t\tg[p][q] += 1ll * g[l][r] * cal (l, r, p, q) % MOD;\n\t\t\t\tg[p][q] = g[p][q] >= MOD ? g[p][q] - MOD : g[p][q];\n\t\t\t}\n\t\t}\n\t}\n\treturn ;\n}\n\nint main () {\n\tread (n), read (m), read (k);\n\tint i, j; for (i = 1; i <= k; ++i) read (s[i].x), read (s[i].y);\n\tsort (s + 1, s + 1 + k);\n\tfor (i = 1; i <= 1000; ++i) f[1][i] = f[i][1] = 1;\n\tfor (i = 2; i <= 1000; ++i) {\n\t\tfor (j = 2; j <= 1000; ++j) {\n\t\t\tf[i][j] = f[i - 1][j] + f[i][j - 1];\n\t\t\tf[i][j] = f[i][j] >= MOD ? f[i][j] - MOD : f[i][j];\n\t\t}\n\t} //\u8fd9\u662f\u9884\u5904\u7406\n\tg[1][1] = 1;\n\tint nx = 1, ny = 1;\n\ts[++k] = (stu) {n, m};\n\tfor (i = 1; i <= k; ++i) {\n\t\tif (s[i].y + 1 < ny - 1) {\n\t\t\tputs (\"0\");\n\t\t\treturn 0;\n\t\t}\n\t\twork (nx, ny, s[i].x, s[i].y); //\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5fc5\u7ecf\u7684\u70b9\u7edf\u8ba1\u7b54\u6848\n\t\tnx = s[i].x;\n\t\tny = s[i].y;\n\t}\n\tprintf (\"%d\\n\", g[n][m]);\n\treturn 0;\n}\n```",
        "postTime": 1569559183,
        "uid": 31193,
        "name": "\u68a7\u6850\u706f",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 AT1761 \u3010square1001\u306e\u901a\u5b66\u7d4c\u8def (square1001&#039;s School Road)\u3011"
    },
    {
        "content": "# AT1761 square1001\u306e\u901a\u5b66\u7d4c\u8def (square1001's School Road)\n[\u66f4\u4f73\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/Shiina-Rikka/p/11593336.html)\n\n\u9898\u76ee\u94fe\u63a5\n\n[ATcoder](https://s8pc-1.contest.atcoder.jp/tasks/s8pc_1_d)\n\n[Luogu](https://www.luogu.org/problem/AT1761)\n\n\u554f\u984c\u6587\nsquare1001\u306f\u3001\u6bce\u65e5\u6b69\u3044\u3066\u4e2d\u5b66\u6821\u307e\u3067\u901a\u3063\u3066\u3044\u308b\u3002\n\n\u5f7c\u306f\u3001\u5de6\u4e0b\u306e\u4ea4\u5dee\u70b9 (1,1) \u306b\u4f4f\u3093\u3067\u304a\u308a\u3001 \u53f3\u4e0a\u306e\u4ea4\u5dee\u70b9 (W,H)\u306b\u3042\u308b\u5b66\u6821\u307e\u3067\u884c\u304f\u3002\n\n\u305f\u3060\u3057\u3001\u6b21\u306e\u3088\u3046\u306a\u6761\u4ef6\u304c\u3042\u308b\u3002\n\n\u5f7c\u306f\u6642\u9593\u77ed\u7e2e\u306e\u305f\u3081\u306b\u53f3\u304b\u4e0a\u306b\u3057\u304b\u9032\u307e\u306a\u3044\u3002\n\u5f7c\u306f\u305d\u306e\u65e5\u3001K \u500b\u306e\u30de\u30b9\u306b\u7528\u4e8b\u304c\u3042\u3063\u305f\u3002\n\u5de6\u4e0b \u304c(Xi,Yi) \u3067, \u53f3\u4e0a\u304c(Xi+1,Yi+1) \u306e\u30de\u30b9\u3067\u3042\u308b\u3002\n\u305d\u306e\u305f\u3081\u3001\u7528\u4e8b\u306e\u3042\u308b\u30de\u30b9\u305d\u308c\u305e\u308c\u306b\u3064\u3044\u3066\u3001\u305d\u306e\u5468\u308a\u306e\u4ea4\u5dee\u70b9\uff14\u3064\u306e\u3046\u3061\u5c11\u306a\u304f\u3068\u3082\uff11\u3064\u306f\u901a\u308b\u5fc5\u8981\u304c\u3042\u3063\u305f\u3002\n\n\u305d\u308c\u3089\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3059\u884c\u304d\u65b9\u306f\u4f55\u901a\u308a\u3042\u308b\u304b\u3002 mod 1,000,000,007\u3067\u6c42\u3081\u3088\u3002\n\u5165\u529b\u4f8b1\n```cpp\n4 4 1\n2 2\n```\n\u51fa\u529b\u4f8b1\n```cpp\n18\n```\n![](https://s8pc-1.contest.atcoder.jp/img/other/s8pc-1/3D60242BC3594620918CA1044AE12FBE.png)\n(1,1)\u2192(1,2)\u2192(1,3)\u2192(1,4)\u2192(2,4)\u2192(3,4)\u2192(4,4)\u3068\u3044\u3046\u884c\u304d\u65b9\u3068\u3001\n\n(1,1)\u2192(2,1)\u2192(3,1)\u2192(4,1)\u2192(4,2)\u2192(4,3)\u2192(4,4)\u3068\u3044\u3046\u884c\u304d\u65b9\u306f\u3067\u304d\u306a\u3044\u3002\n\n\u3088\u3063\u3066, 20\u22122=18\u3092\u51fa\u529b\u3059\u308b\u3002\n\n\u203b\u56f3\u306e\u5de6\u4e0a\u6570\u304c\u629c\u3051\u3066\u3044\u3066\u3059\u307f\u307e\u305b\u3093\u3002\n\n#### \u9898\u610f\u7ffb\u8bd1\n\nsquare1001\u6bcf\u5929\u6b65\u884c\u5230\u5b66\u6821\u3002\n\n\u4ed6\u4f4f\u5728\u5de6\u4e0b\u65b9\u7684\u5341\u5b57\u8def\u53e3(1\uff0c1)\uff0c\u53bb\u4f4d\u4e8e\u53f3\u4e0a\u89d2(W\uff0cH)\u7684\u5b66\u6821\u3002\n\n\u4f46\u662f\uff0c\u6709\u4e00\u4e9b\u6761\u4ef6\u3002\n\n\u4ed6\u4e3a\u4e86\u7f29\u77ed\u65f6\u95f4\u53ea\u80fd\u5f80\u53f3\u6216\u4e0a\u8d70\u3002 \u90a3\u5929\uff0c\u4ed6\u627e\u4e86\u6709K\u4e2a\u683c\u5b50\uff0c\u5de6\u4e0b\u89d2\u5750\u6807\u5206\u522b\u4e3a(Xi1\uff0cYi1)\uff0c(Xi2\uff0cYi2)\uff0c(Xi3\uff0cYi3) ......(XiK\uff0cYiK)\n\n\u800c\u4e14\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u7684\u683c\u5b50\uff0c\u5176\u5468\u56f4\u76844\u4e2a\u683c\u5b50\uff08\u6307\u5468\u56f4\u56db\u4e2a\u683c\u5b50\u4e2d\u56db\u4e2a\u9876\u70b9\u5750\u6807\u4e2d\u7684\u4e00\u4e2a\uff09\u4e2dsquare1001\u81f3\u5c11\u9700\u8981\u7ecf\u8fc71\u4e2a\u3002\n\n\u6ee1\u8db3\u8fd9\u4e9b\u6761\u4ef6\u7684\u8def\u5f84\u6709\u591a\u5c11\u6761\uff1f\n\n\u7b54\u6848mod 1,000,000,007\u540e\u8f93\u51fa \u3002\n\n## \u600e\u4e48\u505a\u5462\uff1f\n\n\u8fd9\u79cd\u9898\u76f4\u63a5\u8003\u8651DP\u8ba1\u6570\u5c31\u597d\u4e86\u3002\n\u6709\u4e00\u4e2a~~\u6bd4\u8f83\u7c7b\u4f3c~~\u7684\u9898\u5efa\u8bae\u505a\u4e00\u4e0b\u3002\n[CF559C Gerald and Giant Chess](https://www.luogu.org/problem/CF559C)\n\u8fd9\u9053\u9898\u7684\u8f6c\u79fb\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u53ef\u4ee5\u76f4\u63a5\u7531\u5b83\u7684\u5de6\u4e0b\u52a0\u53f3\u4e0b\u8f6c\u79fb\u8fc7\u6765\u3002\u81f3\u4e8e\u9650\u5236\u6761\u4ef6\u600e\u4e48\u8d70,\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u65b9\u5757\uff0c\u5fc5\u884c\u7684\u4e24\u4e2a\u70b9\u7684\u6a2a\u5750\u6807\u52a0\u7eb5\u5750\u6807\u662f\u4e00\u5b9a\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u6570\u7ec4\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b83\u4e0e\u5730\u56fe\u4e0a\u8bb0\u5f55\u7684\u70b9\u7684\u4fe1\u606f\u5bf9\u5e94\u65f6\u8fdb\u884c\u8f6c\u79fb\u3002\n```cpp\n//\u8bb0\u5f55\u70b9\u7684\u4fe1\u606f\n++mp[x + 1][y];++mp[x][y + 1];\n//\u5bf9\u6bcf\u4e2a\u6a2a\u7eb5\u5750\u6807\u7684\u5408\u7ef4\u62a4\u51fa\u73b0\u6b21\u6570\n++cnt[x + y + 1];\n//\u8f6c\u79fb\u65f6\u8fdb\u884c\u5224\u65ad\ncnt[i + j] == mp[i][j]\n```\n\u62ff\u6837\u4f8b\u8fdb\u884c\u8bf4\u660e\uff0c\u4f8b\u5982\u5728\uff081,4\uff09\u70b9\u65f6\uff08\u662f\u975e\u6cd5\u72b6\u6001\u4e0d\u80fd\u8f6c\u79fb\uff09\uff0c\u7531\u4e8ecnt[5] = 1,mp[1][4] = 0,\u4e0d\u80fd\u8fdb\u884c\u8f6c\u79fb\u3002\u7531\u6b64\u4fdd\u8bc1\u8def\u5f84\u4e00\u5b9a\u7ecf\u8fc7\u5fc5\u8fc7\u7684\u70b9\u3002\n\n\u8fd9\u4e2a\u662f\u6211\u770b\u4e86[snow39](https://s8pc-1.contest.atcoder.jp/users/snow39)\u7684\u4ee3\u7801\u53d1\u73b0\u7684\u597d\u6280\u5de7\u3002\n\n## \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nnamespace fdata\n{\ninline char nextchar()\n{\n    static const int BS = 1 << 21;\n    static char buf[BS], *st, *ed;\n    if (st == ed)\n        ed = buf + fread(st = buf, 1, BS, stdin);\n    return st == ed ? -1 : *st++;\n}\n#ifdef lky233\n#define nextchar getchar\n#endif\ntemplate <typename Y>\ninline void poread(Y &ret)\n{\n    ret = 0;\n    char ch;\n    while (!isdigit(ch = nextchar()))\n        ;\n    do\n        ret = ret * 10 + ch - '0';\n    while (isdigit(ch = nextchar()));\n}\n#undef nextcar\n} // namespace fdata\nusing fdata::poread;\nusing namespace std;\nconst int MAXN = 1005;\nconst int MOD = 1e9 + 7;\nint f[MAXN][MAXN];\nint mp[MAXN][MAXN];\nint cnt[MAXN];\nint h, w, k;\nint main()\n{\n    poread(h), poread(w), poread(k);\n    for (register int i = 1, x, y; i <= k; ++i)\n    {\n        poread(x), poread(y);\n        ++mp[x + 1][y];\n        ++mp[x][y + 1];\n        ++cnt[x + y + 1];\n    }\n    f[1][1] = 1;\n    for (register int i = 1; i <= h; ++i)\n    {\n        for (register int j = 1; j <= w; ++j)\n        {\n            if (i != 1 && cnt[i + j] == mp[i][j])\n                f[i][j] = (f[i][j] + f[i - 1][j]) % MOD;\n            if (j != 1 && cnt[i + j] == mp[i][j])\n                f[i][j] = (f[i][j] + f[i][j - 1]) % MOD;\n        }\n    }\n    cout << f[h][w] << endl;\n}\n```\n\u6211\u5728\u770b\u7684\u65f6\u5019\u770b\u5230\u4e86\u4e00\u4efdpython\u4ee3\u7801\uff0c\u4e8e\u662f\u642c\u8fc7\u6765\u4e86\u3002\n\n\u6765\u6e90[\u63d0\u4ea4\u8bb0\u5f55](https://s8pc-1.contest.atcoder.jp/submissions/4899562)\n```python\nfrom collections import defaultdict,deque\nimport sys,heapq,bisect,math,itertools,string,queue,datetime,random\nsys.setrecursionlimit(10**8)\nINF = float('inf')\nmod = 10**9+7\neps = 10**-7\ndef inpl(): return list(map(int, input().split()))\ndef inpls(): return list(input().split())\n \nH,W,K = inpl()\nXYs = [inpl() for _ in range(K)]\nXYs.sort()\n \nMAX = H+W\nfac = [1]*(MAX+1)\nfor i in range(1,MAX+1):\n\tfac[i] = (fac[i-1]*i)%mod\n \ngyakugen = [1]*(MAX+1)\ngyakugen[MAX] = pow(fac[MAX],mod-2,mod)\nfor i in range(MAX,0,-1):\n\tgyakugen[i-1] = (gyakugen[i]*i)%mod\n \ndef Comb (n,k):#nCk\n\treturn (fac[n]*gyakugen[k]*gyakugen[n-k])%mod\n \ndef calc(xys,xyt):\n    dx = xyt[0] - xys[0]\n    dy = xyt[1] - xys[1]\n    return Comb(dx+dy,dx)\n \ndef LU(xy):\n    x,y = xy\n    return([x,y+1])\n \ndef RD(xy):\n    x,y = xy\n    return([x+1,y])\n \ntmp0 = calc([1,1],LU(XYs[0]))\ntmp1 = calc([1,1],RD(XYs[0]))\nfor i in range(1,K):\n    tmp0ed,tmp1ed = tmp0,tmp1\n    tmp0 = tmp0ed * calc(LU(XYs[i-1]),LU(XYs[i])) + tmp1ed * calc(RD(XYs[i-1]),LU(XYs[i]))\n    tmp1 = tmp0ed * calc(LU(XYs[i-1]),RD(XYs[i])) + tmp1ed * calc(RD(XYs[i-1]),RD(XYs[i]))\n    tmp0 %= mod\n    tmp1 %= mod\n \nans = tmp0 * calc(LU(XYs[K-1]),[W,H]) + tmp1 * calc(RD(XYs[K-1]),[W,H])\nprint(ans%mod)\n```",
        "postTime": 1569491086,
        "uid": 143186,
        "name": "lky1433223",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 AT1761 \u3010square1001\u306e\u901a\u5b66\u7d4c\u8def (square1001&#039;s School Road)\u3011"
    }
]