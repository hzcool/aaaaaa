[
    {
        "content": "> \u7ed9\u5b9a $n$ \u4e2a\u70b9\u7684\u5750\u6807 $(x_i,y_i)$ \uff0c\u9009\u62e9\u4e24\u4e2a\u70b9\u6ee1\u8db3\u5176\u66fc\u54c8\u987f\u8ddd\u79bb\u7b49\u4e8e $d$ \uff0c\u6c42\u65b9\u6848\u6570\u3002\n\n~~\u5c0f\u58f0* [\u849f\u84bb\u7684\u535a\u5ba2](https://noone40404.github.io/2021/11/15/%E6%9B%BC%E5%93%88%E9%A1%BF%E8%B7%9D%E7%A6%BB%E4%B8%8E%E5%88%87%E6%AF%94%E9%9B%AA%E5%A4%AB%E8%B7%9D%E7%A6%BB/)\u91cc\u603b\u7ed3\u4e86\u4e00\u70b9\u66fc\u54c8\u987f\u8ddd\u79bb\u4e0e\u5207\u6bd4\u96ea\u592b\u8ddd\u79bb\u8f6c\u5316\u7684\u9898\u3002~~\n\n\u63d0\u4f9b\u4e00\u4e2a\u7801\u91cf\u8f83\u5c0f\u4e14\u8dd1\u5f97\u6bd4\u8f83\u5feb\u7684\u65b9\u6cd5\u3002\n\n\u5bf9\u4e8e\u6c42\u66fc\u54c8\u987f\u8ddd\u79bb\u7684\u9898\uff0c\u4e00\u4e2a\u601d\u8def\u662f\u8003\u8651\u8f6c\u5316\u4e3a\u5207\u6bd4\u96ea\u592b\u8ddd\u79bb\u3002\n\n\u5177\u4f53\u7684\uff0c\u5bf9\u4e8e $(x_O,y_O),(x_i,y_i)$ \u6709\u66fc\u54c8\u987f\u8ddd\u79bb\uff1a $\\text{abs}(x_O-x_i)+\\text{abs}(y_O,y_i)$\u3002\n\n\u4ee4 $x_i'=x_i+y_i\\ ,\\ y_i'=x_i-y_i$\u3002\n\n\u90a3\u4e48 $(x_O',y_O'),(x_i',y_i')$ \u7684\u5207\u6bd4\u96ea\u592b\u8ddd\u79bb\uff1a $\\max\\left(|x_O'-x_i'|,|y_O'-y_i'|\\right)$ \u5373\u662f\u539f\u56fe\u4e24\u70b9\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u3002\n\n\u8be5\u9898\u4e2d\u5982\u6b64\u8f6c\u5316\u66f4\u597d\u5904\u7406\uff0c\u90a3\u4e48\u8f6c\u5316\u540e\u7684\u5408\u6cd5\u70b9\u5bf9 $(x_1,y_1),(x_2,y_2)$ \u9700\u6ee1\u8db3\u7684\u6761\u4ef6\u5373\u4e3a\uff1a\n\n$$\\begin{cases} |x_1-x_2|=dis \\\\ |y_1-y_2|\\leq dis \\\\\\end{cases} $$\n\u6216\n$$\\begin{cases} |y_1-y_2|=dis \\\\ |x_1-x_2|\\leq dis \\\\\\end{cases} $$\n\n\u901a\u8fc7\u5bf9 $point$ \u8fdb\u884c\u6392\u5e8f\u540e\u4e8c\u5206\u67e5\u627e\uff0c\u4e0d\u96be\u5f97\u5230\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\u7684 $y_l\\sim y_r$ \u6216 $x_l\\sim x_r$\u3002\n\n\u8fd9\u91cc\u8981\u6ce8\u610f\u4e24\u6b21\u67e5\u627e\u4e2d\u4e0d\u80fd\u6709\u91cd\u590d\u60c5\u51b5\uff0c\u5177\u4f53\u89c1\u4ee3\u7801\u3002\n\n\u8003\u8651\u7edf\u8ba1\u7b54\u6848\uff1a\u5bf9\u4e8e\u5408\u6cd5\u7684\u70b9\u5bf9\u5c06\u4e24\u70b9\u8fde\u8fb9\u3002\n\n\u90a3\u4e48\u4e0a\u8ff0\u6761\u4ef6\u7ed9\u5b9a\u7684\u4e00\u4e2a\u5408\u6cd5\u533a\u95f4\uff0c\u8be5\u533a\u95f4\u5185\u7684\u70b9\u4e24\u4e24\u76f8\u8fde\u5e76\u5411 $(x_a,y_a)$ \u8fde\u8fb9\u3002\n\n\u7ef4\u62a4\u4e00\u4e0b\u6bcf\u4e2a\u70b9\u7684\u51fa\u5ea6\uff0c\u80fd\u4e0e\u521d\u59cb\u70b9 $a$ \u8fde\u901a\u7684\u5373\u4e3a\u5408\u6cd5\u65b9\u6848\uff0c\u6c42\u548c\u5373\u53ef\uff08\u663e\u7136\u4e0e $b$ \u8fde\u901a\u7684\u4e00\u5b9a\u4e5f\u4e0e $a$ \u8fde\u901a\uff09\u3002\n\n\n```cpp\n#include <bits/stdc++.h>\n#define rei register int\n#define ll long long\n#define PII pair<int,int>\n#define mk make_pair\nusing namespace std;\n\nconst int N=1e5+100;\nPII point[N],sorted_poi[N];\nint fa[N],cnt[N],delta[N],id[N];\nint x[N],y[N];\nint n,a,b,dis;\nll ans;\n\ninline int read(){ rei ans=0; char ch=getchar(); while(ch<'0' || ch>'9') ch=getchar(); while(ch>='0' && ch<='9'){ ans=(ans<<1)+(ans<<3)+(ch^48); ch=getchar();} return ans;}\ninline bool cmp(int x,int y){ return point[x]<point[y];}\nint get_fa(int x){ return fa[x]==x ? x : fa[x]=get_fa(fa[x]);}\ninline void merge(int x,int y){ fa[ get_fa(x) ]=get_fa(y);}\ninline void solve(int now){\n\tfor(rei i=1;i<=n;++i) id[i]=i;\n\tsort(id+1,id+1+n,cmp);\n\tmemset(delta,0,sizeof delta);\n\tfor(rei i=1;i<=n;++i) sorted_poi[i]=point[ id[i] ];\n\tfor(rei i=1;i<=n;++i){\n\t\trei l=lower_bound(sorted_poi+1,sorted_poi+1+n,mk(sorted_poi[i].first+dis,sorted_poi[i].second-dis+now))-sorted_poi;\n\t\trei r=upper_bound(sorted_poi+1,sorted_poi+1+n,mk(sorted_poi[i].first+dis,sorted_poi[i].second+dis-now))-sorted_poi-1;\n\t\tif(l<=r){\n\t\t\t++delta[l],--delta[r];\n\t\t\tmerge(id[i],id[l]);\n\t\t\tcnt[ id[i] ]+=r-l+1;\n\t\t}\n\t}\n\trei pre=0;\n\tfor(rei i=1;i<n;++i){\n\t\tpre+=delta[i];\n\t\tif(pre) merge(id[i],id[i+1]);\n\t}\n}\n\nint main(){\n    n=read(),a=read(),b=read();\n    for(rei i=1;i<=n;++i) fa[i]=i;\n\tfor(rei i=1;i<=n;++i) x[i]=read(),y[i]=read(),point[i].first=x[i]+y[i],point[i].second=x[i]-y[i];\n\tdis=abs(x[a]-x[b])+abs(y[a]-y[b]);\n\tsolve(0);\n\tfor(rei i=1;i<=n;++i) swap(point[i].first,point[i].second);\n\tsolve(1);\n\tfor(rei i=1;i<=n;++i) if(get_fa(i)==get_fa(a)) ans+=cnt[i];\n\tprintf(\"%lld\\n\",ans);\n\tgetchar(),getchar();\n\treturn 0;\n}\n```",
        "postTime": 1636978753,
        "uid": 403166,
        "name": "noone___",
        "ccfLevel": 0,
        "title": "AT2160 [ARC065C] \u3078\u3093\u306a\u30b3\u30f3\u30d1\u30b9 / Manhattan Compass"
    },
    {
        "content": "[\u70b9\u51fb](https://www.cnblogs.com/Guts/p/14703653.html)\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c  \n\n--------------\n\u66fc\u54c8\u987f\u8ddd\u79bb\u548c\u5207\u6bd4\u96ea\u592b\u8ddd\u79bb\uff0c\u4e00\u822c\u51fa\u73b0\u4e86\u5176\u4e2d\u4e00\u4e2a\u5c31\u8981\u53bb\u60f3\u60f3\u662f\u4e0d\u662f\u53ef\u4ee5\u8f6c\u6362\u6210\u53e6\u4e00\u4e2a\u3002 \n\u672c\u9898\u5c31\u662f\u4e00\u4e2a\u5178\u578b\u7684\u4f8b\u5b50\uff0c\u5728\u66fc\u54c8\u987f\u8ddd\u79bb\u4e0b\u4f1a\u6bd4\u8f83\u9ebb\u70e6\u2014\u2014\u6bcf\u6b21\u53ef\u4ee5\u8f6c\u79fb\u5230\u7684\u70b9\u90fd\u662f\u4e00\u4e2a\u659c\u7740\u7684\u6b63\u65b9\u5f62\uff0c\u4e0d\u65b9\u4fbf\u679a\u4e3e\u3002  \n\u800c\u8f6c\u6362\u6210\u4e86\u5207\u6bd4\u96ea\u592b\u8ddd\u79bb\u4e4b\u540e\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u6b63\u7740\u7684\u6b63\u65b9\u5f62\u4e86\u3002  \n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u65e0\u8bba\u600e\u4e48\u64cd\u4f5c\uff0c\u6bcf\u4e2a\u70b9\u5bf9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff08\u65e0\u8bba\u662f\u66fc\u54c8\u987f\u8fd8\u662f\u5207\u6bd4\u96ea\u592b\uff09\u90fd\u662f\u4e0d\u53d8\u7684\u3002\n\u56e0\u6b64\uff0c\u5728\u8f6c\u6362\u6210\u4e86\u5207\u6bd4\u96ea\u592b\u8ddd\u79bb\u4e4b\u540e\uff0c\u53ea\u8981\u77e5\u9053\u4e86\u6700\u7ec8\u53ef\u4ee5\u5230\u8fbe\u7684\u96c6\u5408 $p$ \u4e2d\u6709\u54ea\u4e9b\u70b9\uff0c\u7b54\u6848\u5c31\u662f\u6240\u6709\u4ee5\u8fd9\u4e9b\u70b9\u4e3a\u51e0\u4f55\u4e2d\u5fc3\uff0c\u8fb9\u957f\u4e3a $2dis$ \u7684\u6b63\u65b9\u5f62\u7684\u8fb9\u4e0a\u7684\u70b9\u7684\u4e2a\u6570\u4e4b\u548c\u3002  \n\u5f62\u5f0f\u5316\u5730\u8bf4\uff0c\u6709 $\n\\begin{aligned}\nans&=\\sum^{}_{i\\in p} \\sum^{n}_{j=1} ([x_{j}=x_{i}+dis,|y_{i}-y_{j}|\\leq dis]+[x_{j}=x_{i}+dis,|y_{i}-y_{j}|\\leq dis]+[x_{j}=x_{i}+dis,|y_{i}-y_{j}|\\leq dis]+[x_{j}=x_{i}+dis,|y_{i}-y_{j}|\\leq dis])\n\\end{aligned}\n$  \n\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u7528\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u53ea\u9700\u8981\u652f\u6301\u5355\u70b9\u63d2\u5165\u548c\u533a\u95f4\u8be2\u95ee\uff0c\u6bd4\u8f83\u597d\u5199\uff0c\u4e0d\u8fc7\u8981\u8bb0\u5f97\u7279\u5224\u4e00\u4e0b\u6b63\u65b9\u5f62\u7684\u56db\u4e2a\u89d2\uff0c\u5426\u5219\u4f1a\u88ab\u7b97\u4e24\u6b21\uff0c\u7279\u5224\u65b9\u6cd5\u53ef\u4ee5\u770b\u4ee3\u7801\u3002\n\u8fd9\u91cc\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n \\log n)$  \n\n\u63a5\u4e0b\u6765\u662f\u89e3\u51b3\u5982\u4f55\u5f97\u5230\u96c6\u5408 $p$ \u4e86\u3002\u5176\u5b9e\u8fd9\u4e2a\u4e5f\u4e0d\u96be\uff0c\u53ef\u4ee5\u79bb\u6563\u5316\uff0c\u5bf9\u6bcf\u4e00\u4e2a $x$ \u5f00\u4e00\u4e2a `set`\uff0c\u7136\u540e\u505a\u4e00\u6b21 `bfs` \uff0c\u76f4\u63a5\u66b4\u529b\u5730\u53bb\u6b63\u65b9\u5f62\u56db\u6761\u8fb9\u4e0a\u627e\uff0c\u628a\u904d\u5386\u5230\u7684\u70b9\u5168\u90e8\u5220\u6389\u3002\n\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u70b9\u53ea\u4f1a\u88ab\u5220\u9664\u4e00\u6b21\uff0c\u56e0\u6b64\u8fd9\u4e2a\u5730\u65b9\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u662f $O(n \\log n)$ \u3002\n\n\u6700\u540e\u8bb0\u5f97\u7b54\u6848\u8981\u9664\u4ee5\u4e8c\uff0c\u56e0\u4e3a\u70b9\u5bf9\u662f\u65e0\u5e8f\u7684\uff0c\u4e0a\u9762\u8ba1\u7b97\u7684\u8fc7\u7a0b\u4e2d\u6bcf\u4e00\u4e2a\u70b9\u5bf9\u90fd\u88ab\u7edf\u8ba1\u4e86\u4e24\u6b21\u3002\n\n\n_Code_\n------------\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define il inline\n#define ri register int\n#define ll long long\n#define ui unsigned int\nil ll read(){\n    bool f=true;ll x=0;\n    register char ch=getchar();\n    while(ch<'0'||ch>'9') {if(ch=='-') f=false;ch=getchar();}\n    while(ch>='0'&&ch<='9') x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\n    if(f) return x;\n    return ~(--x);\n}\nil void write(const ll &x){if(x>9) write(x/10);putchar(x%10+'0');}\nil void print(const ll &x) {x<0?putchar('-'),write(~(x-1)):write(x);putchar('\\n');}\nil ll max(const ll &a,const ll &b){return a>b?a:b;}\nil ll min(const ll &a,const ll &b){return a<b?a:b;}\nconst int MAXN=1e5+7;\nstruct node\n{\n    ll x,y;\n}p[MAXN];\n#define pll pair<ll,ll>  \nint n,a,b;\nint mark[MAXN];\nll dis,ans;\n#define IT set<pll>::iterator\nstruct seg\n{\n    struct T\n    {\n        int c[2],sum;\n    }t[MAXN<<8];\n    #define mid (L+R>>1)\n    #define lc t[u].c[0]\n    #define rc t[u].c[1]\n    int cnt;\n    void update(int u){\n        t[u].sum=0;\n        if(lc) t[u].sum+=t[lc].sum;\n        if(rc) t[u].sum+=t[rc].sum;\n    }\n    void insert(int &u,int pos,ll L=-2e9,ll R=2e9){\n        if(!u) u=++cnt;\n        if(L==pos&&R==pos){\n            t[u].sum=1;\n            return;\n        }\n        if(pos<=mid) insert(lc,pos,L,mid);\n        else insert(rc,pos,mid+1,R);\n        update(u);\n    }\n    ll query(int u,int l,int r,ll L=-2e9,ll R=2e9){\n        if(!u||l>r) return 0;\n        if(L==l&&R==r) return t[u].sum;\n        if(r<=mid) return query(lc,l,r,L,mid);\n        else if(l>mid) return query(rc,l,r,mid+1,R);\n        else return (query(lc,l,mid,L,mid)+query(rc,mid+1,r,mid+1,R));\n    }\n    #undef lc\n    #undef rc\n    #undef mid\n}T[2];\nint root[2][MAXN<<2];\nint cnt;\n#define pll pair<ll,ll>\n#define IT set<pll>::iterator\nset<pll> f[2][MAXN<<2];\nmap<int,int> id[2];\nint main(){\n    n=read(),a=read(),b=read();\n    for(ri i=1;i<=n;++i){\n        ll x=read(),y=read();\n        p[i].x=x+y,p[i].y=x-y;\n        if(!id[0].count(p[i].x)) id[0][p[i].x]=++cnt;\n        T[0].insert(root[0][id[0][p[i].x]],p[i].y);\n        f[0][id[0][p[i].x]].insert((pll){p[i].y,i});\n        if(!id[1].count(p[i].y)) id[1][p[i].y]=++cnt;\n        T[1].insert(root[1][id[1][p[i].y]],p[i].x);\n        f[1][id[1][p[i].y]].insert((pll){p[i].x,i});\n    }\n    dis=max(abs(p[a].x-p[b].x),abs(p[a].y-p[b].y));\n    queue<int> q;\n    q.push(a),q.push(b);\n    while(!q.empty()){\n        int u=q.front();q.pop();\n        if(mark[u]) continue;\n        mark[u]=1;\n        if(id[0].count(p[u].x+dis)){\n            int now=id[0][p[u].x+dis];\n            ans+=T[0].query(root[0][now],max(-2e9,p[u].y-dis),min(2e9,p[u].y+dis));\n            set<pll> &s=f[0][now];\n            for(IT it=s.lower_bound((pll){p[u].y-dis,0});it!=s.end()&&abs(it->first-p[u].y)<=dis;it=s.erase(it)) q.push(it->second);\n        }\n        if(id[0].count(p[u].x-dis)){\n            int now=id[0][p[u].x-dis];\n            ans+=T[0].query(root[0][now],max(-2e9,p[u].y-dis),min(2e9,p[u].y+dis));\n            set<pll> &s=f[0][now];\n            for(IT it=s.lower_bound((pll){p[u].y-dis,0});it!=s.end()&&abs(it->first-p[u].y)<=dis;it=s.erase(it)) q.push(it->second);\n        }\n        if(id[1].count(p[u].y+dis)){\n            int now=id[1][p[u].y+dis];\n            ans+=T[1].query(root[1][now],max(-2e9,p[u].x-dis+1),min(2e9,p[u].x+dis-1));\n            set<pll> &s=f[1][now];\n            for(IT it=s.lower_bound((pll){p[u].x-dis,0});it!=s.end()&&abs(it->first-p[u].x)<=dis;it=s.erase(it)) q.push(it->second);\n        }\n        if(id[1].count(p[u].y-dis)){\n            int now=id[1][p[u].y-dis];\n            ans+=T[1].query(root[1][now],max(-2e9,p[u].x-dis+1),min(2e9,p[u].x+dis-1));\n            set<pll> &s=f[1][now];\n            for(IT it=s.lower_bound((pll){p[u].x-dis,0});it!=s.end()&&abs(it->first-p[u].x)<=dis;it=s.erase(it)) q.push(it->second);\n        }\n    }\n    print(ans>>1);\n    return 0;\n}\n```\n",
        "postTime": 1619405557,
        "uid": 206998,
        "name": "Krimson",
        "ccfLevel": 0,
        "title": "AT2160 [ARC065C] \u3078\u3093\u306a\u30b3\u30f3\u30d1\u30b9 / Manhattan Compass"
    },
    {
        "content": "\u663e\u7136\u662f\u4e00\u4e2aBFS\uff0c\u4e3b\u8981\u95ee\u9898\u5728\u4e8eBFS\u8fc7\u7a0b\u4e2d\u5982\u4f55\u5feb\u901f\u89e3\u51b3\u4e00\u4e2a\u70b9\n\n\u6839\u636e\u54c8\u5bc6\u987f\u8ddd\u79bb\u6240\u5b9a\u4e49\u7684\u201c\u5706\u201d\uff0c\u662f\u4e00\u4e2a\u6bcf\u6761\u8fb9\u90fd\u4e0e\u5750\u6807\u8f74\u544845\u5ea6\u89d2\u7684\u77e9\u5f62\uff0c\u8fd9\u8ba9\u4eba\u5f88\u5934\u75bc\n\n\u4e0d\u5982\u6211\u4eec\u5c06\u5b83\u65cb\u8f6c45\u5ea6\uff0c\u4e0e\u5750\u6807\u8f74\u5e73\u884c\uff0c\u7136\u540e\u54c8\u5bc6\u987f\u8ddd\u79bb\u5c31\u53d8\u6210\u4e86\u5207\u6bd4\u96ea\u592b\u8ddd\u79bb\u3002\u5177\u4f53\u5730\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u70b9(x,y)\uff0c\u5c06\u5176\u65cb\u8f6c45\u5ea6\u5e76\u8fdb\u884c\u9002\u91cf\u7f29\u653e\u4e4b\u540e\uff0c\u5f97\u5230\u7684\u70b9\u4e3a(x+y,x-y)\u3002\u53ef\u4ee5\u8bc1\u660e\uff0c\u65cb\u8f6c\u540e\u7684\u70b9\u548c\u65cb\u8f6c\u524d\u7684\u70b9\u662f\u552f\u4e00\u5bf9\u5e94\u7684\n\n\u5c06\u65cb\u8f6c\u540e\u70b9\u7684\u6240\u6709\u6a2a\u5750\u6807\u79bb\u6563\u5316\uff0c\u7136\u540e\u5f00\u82e5\u5e72\u4e2aset\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3aSx[x]\uff0c\u5b58\u50a8\u79bb\u6563\u5316\u4e4b\u540e\u6a2a\u5750\u6807\u4e3ax\u7684\u6240\u6709\u70b9\uff0cset\u91cc\u9762\u7528pair\u5b58\u50a8\uff0cfirst\u57df\u662f**\u672a\u79bb\u6563\u7684**\u7eb5\u5750\u6807\uff0csecond\u57df\u662f\u70b9\u7684\u7f16\u53f7\u3002\u7eb5\u5750\u6807\u4e5f\u505a\u4e00\u6837\u7684\u5904\u7406\n\n\u8fd9\u6837\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u7b97\u51fa\u5b83\u77e9\u5f62\u76844\u4e2a\u9876\u70b9\uff0c\u7136\u540e\u7b97\u51fa\u5b83\u4eec\u65cb\u8f6c\u540e\u7684\u5750\u6807\u3002\u5bf9\u4e8e\u6bcf\u4e00\u6761\u8fb9\uff0c\u53d1\u73b0\u5b83\u4e00\u5b9a\u662f\u67d0\u4e2aset\u4e2d\u7684\u4e00\u6bb5\u8fde\u7eed\u533a\u95f4\uff0c\u8fd9\u6837\u53ea\u8981\u5728\u5bf9\u5e94\u7684set\u4e0a\u4e8c\u5206\u51fa\u8fd9\u6bb5\u533a\u95f4\uff0c\u7136\u540e\u679a\u4e3e\u6240\u6709\u70b9\u5c31\u53ef\u4ee5\u4e86\n\n\u4f46\u8fd9\u6837\u4f1aT\u98de\u3002\u975e\u5e38\u663e\u7136\uff0c\u4e00\u6761\u8fb9\u53ef\u4ee5\u5b58\u5728\u4e8e\u82e5\u5e72\u4e2a\u77e9\u5f62\u4e2d\u3002\u56e0\u4e3a\u4e00\u4e2a\u5df2\u7ecf\u5904\u7406\u8fc7\u7684\u70b9\u518d\u8ba9\u4ed6\u5165\u961f\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u4f46\u662f\u5728\u5904\u7406\u4e0d\u540c\u7684\u70b9\u65f6\u679a\u4e3e\u5230\u5b83\uff0c\u5374\u662f\u5bf9\u7b54\u6848\u6709\u8d21\u732e\u7684\uff0c\u6211\u4eec\u9700\u8981\u627e\u51fa\u4e00\u79cd\u4e0d\u904d\u5386\u5b83\u5374\u53c8\u80fd\u7edf\u8ba1\u5230\u5b83\u5bf9\u7b54\u6848\u8d21\u732e\u7684\u65b9\u6cd5\n\n\u6211\u4eec\u5f00\u82e5\u5e72\u4e2avector\uff0c\u4e00\u5f00\u59cb\u5b58\u50a8\u7684\u5185\u5bb9\u548cset\u5b8c\u5168\u4e00\u6837\u3002\u8bb0\u5f97\u5b58\u5b8c\u4e4b\u540e\u5bf9\u6240\u6709vector\u6392\u5e8f\u4e00\u4e0b\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5728\u5bf9\u5e94\u7684vector\u4e0a\u4e8c\u5206\u51fa\u8fd9\u6bb5\u533a\u95f4\uff0c\u7136\u540e\u533a\u95f4\u7aef\u70b9\u51cf\u4e00\u4e0b\u5c31\u662f\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e86\u3002set\u4e0a\u6211\u4eec\u7167\u6837\u679a\u4e3e\uff0c\u53ea\u4e0d\u8fc7\u679a\u4e3e\u5230\u4e00\u4e2a\u70b9\u4e4b\u540e\u6211\u4eec\u628a\u5b83erase\u6389\uff0c\u907f\u514d\u540e\u671f\u7684\u91cd\u590d\u904d\u5386\n\n\u6ce8\u610f\uff0c\u77e9\u5f62\u9876\u70b9\u82e5\u5bf9\u7b54\u6848\u5b58\u5728\u8d21\u732e\uff0c\u90a3\u5b83\u5728\u76f8\u90bb\u7684\u4e24\u6761\u8fb9\u4e2d\u90fd\u4f1a\u88ab\u7edf\u8ba1\u5230\u7b54\u6848\uff0c\u9700\u8981\u7279\u6b8a\u5904\u7406\u3002\u8fd8\u6709\u6700\u540e\u7b54\u6848\u8bb0\u5f97\u96642\n\n```cpp\n#include<bits/stdc++.h>\n#define MP make_pair\n#define FR first\n#define SE second\nusing namespace std;\n\nconst int S=(1<<20)+5;\nchar buf[S],*H,*T;\ninline char Get()\n{\n    if(H==T) T=(H=buf)+fread(buf,1,S,stdin);\n    if(H==T) return -1;return *H++;\n}\ninline int read()\n{\n    int x=0;char c=Get();\n    while(!isdigit(c)) c=Get();\n    while(isdigit(c)) x=x*10+c-'0',c=Get();\n    return x;\n}\n\ntypedef pair<int,int> pii;\ntypedef long long LL;\nconst int N=100010;\nstruct Point\n{\n    int x,y;\n    Point(int _x=0,int _y=0):x(_x),y(_y){}\n    Point rotate(){return Point(x+y,y-x);}\n    bool operator != (Point b){return x!=b.x||y!=b.y;}\n} org[N],rtg[N],prg[N];\nset<pii> sx[N],sy[N];\nvector<pii> vx[N],vy[N];\nqueue<int> q;\nbool vis[N];\nint Hx[N],Hy[N],mx,my;\nint n,A,B,d;\nLL ans=0;\n\nvoid prework()\n{\n    sort(Hx+1,Hx+1+n);sort(Hy+1,Hy+1+n);\n    mx=unique(Hx+1,Hx+1+n)-(Hx+1);\n    my=unique(Hy+1,Hy+1+n)-(Hy+1);\n    for(int i=1;i<=n;i++)\n    {\n        prg[i].x=lower_bound(Hx+1,Hx+1+mx,rtg[i].x)-Hx;\n        prg[i].y=lower_bound(Hy+1,Hy+1+my,rtg[i].y)-Hy;\n        sx[prg[i].x].insert(MP(rtg[i].y,i));\n        sy[prg[i].y].insert(MP(rtg[i].x,i));\n        vx[prg[i].x].push_back(MP(rtg[i].y,i));\n        vy[prg[i].y].push_back(MP(rtg[i].x,i));\n    }\n    for(int i=1;i<=mx;i++) sort(vx[i].begin(),vx[i].end());\n    for(int i=1;i<=my;i++) sort(vy[i].begin(),vy[i].end());\n}\n\npii gao(set<pii> &s,vector<pii> &v,int l,int r)\n{\n    ans+=upper_bound(v.begin(),v.end(),MP(r,n))-lower_bound(v.begin(),v.end(),MP(l,0));\n    auto pl=s.lower_bound(MP(l,0)),pr=s.upper_bound(MP(r,n));\n    for(auto it=pl;it!=pr;)\n    {\n        if(!vis[it->SE])\n        {\n            vis[it->SE]=1;\n            q.push(it->SE);\n        }\n        auto it2=it;it2++;\n        s.erase(it);it=it2;\n    }\n    auto ppl=lower_bound(v.begin(),v.end(),MP(l,0));\n    auto ppr=lower_bound(v.begin(),v.end(),MP(r,0));\n    return MP(ppl==v.end()?0:ppl->SE,ppr==v.end()?0:ppr->SE);\n}\n\nvoid BFS()\n{\n    vis[A]=1;q.push(A);\n    while(!q.empty())\n    {\n        int u=q.front();q.pop();\n        pii p1(0,0),p2(0,0),p3(0,0),p4(0,0);\n        Point pt=org[u];\n        Point pt1=Point(pt.x+d,pt.y).rotate();\n        Point pt2=Point(pt.x,pt.y+d).rotate();\n        Point pt3=Point(pt.x-d,pt.y).rotate();\n        Point pt4=Point(pt.x,pt.y-d).rotate();\n        int p=lower_bound(Hx+1,Hx+1+mx,pt1.x)-Hx;\n        if(Hx[p]==pt1.x) p1=gao(sx[p],vx[p],pt1.y,pt2.y);\n        p=lower_bound(Hx+1,Hx+1+mx,pt3.x)-Hx;\n        if(Hx[p]==pt3.x) p2=gao(sx[p],vx[p],pt4.y,pt3.y);\n        p=lower_bound(Hy+1,Hy+1+my,pt2.y)-Hy;\n        if(Hy[p]==pt2.y) p3=gao(sy[p],vy[p],pt3.x,pt2.x);\n        p=lower_bound(Hy+1,Hy+1+my,pt1.y)-Hy;\n        if(Hy[p]==pt1.y) p4=gao(sy[p],vy[p],pt4.x,pt1.x);\n        if(p1.SE&&p3.SE&&p1.SE==p3.SE) ans--;\n        if(p2.SE&&p3.FR&&p2.SE==p3.FR) ans--;\n        if(p2.FR&&p4.FR&&p2.FR==p4.FR) ans--;\n        if(p4.SE&&p1.FR&&p4.SE==p1.FR) ans--;\n    }\n}\n\nint main()\n{\n    n=read();A=read();B=read();\n    for(int i=1;i<=n;i++)\n    {\n        org[i].x=read();\n        org[i].y=read();\n        rtg[i]=org[i].rotate();\n        Hx[i]=rtg[i].x;\n        Hy[i]=rtg[i].y;\n    }\n    d=abs(org[A].x-org[B].x)+abs(org[A].y-org[B].y);\n    prework();BFS();\n    printf(\"%lld\\n\",ans/2);\n    return 0;\n}\n```\n\n",
        "postTime": 1537317601,
        "uid": 20158,
        "name": "Ebola",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 AT2160 \u3010\u3078\u3093\u306a\u30b3\u30f3\u30d1\u30b9 / Manhattan Compass\u3011"
    },
    {
        "content": "\u5176\u4ed6\u9898\u89e3\u90fd\u505a\u5f97\u6bd4\u8f83\u9ebb\u70e6\uff0c\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u53ea\u7528\u4e86\u57fa\u672c STL \u7684\u65b9\u6cd5\u3002\n\n\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u9ed1\u9898\uff0c\u611f\u89c9\u9664\u4e86\u7ec6\u8282\u6bd4\u8f83\u591a\u6ca1\u6709\u601d\u7ef4\u96be\u5ea6\n\n\u9996\u5148\u89c2\u5bdf $(x,y)$ \u8981\u6ee1\u8db3\u4ec0\u4e48\u6761\u4ef6\u624d\u80fd\u5230\u8fbe\u3002\u6ce8\u610f\u5230\u82e5 $(x,y)$ \u80fd\u5230\uff0c$dis(x,y)=dis(x,z)$ \u5219 $(x,z)$ \u4e5f\u80fd\u5230\uff08\u5e9f\u8bdd\uff0c\u4e0d\u5c31\u662f\u9898\u76ee\u4e2d\u5b9a\u4e49\u5417\uff09\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5047\u5982\u6709\u4e00\u4e2a\u5e8f\u5217 $(a_1,a_2,\\dots,a_n)$ \u6ee1\u8db3 $(a_1,a_2)$ \u80fd\u5230\u8fbe\u4e14 $\\forall i,dis(a_i,a_{i+1})=dis(a_1,a_2)$\uff0c\u5219 $\\forall i,x$ \u6ee1\u8db3 $dis(a_i,x)=dis(a_1,a_2)$ \u90fd\u80fd\u5230\u8fbe\u3002\u4e5f\u5c31\u662f\uff0c\u82e5\u5728 $dis(A,B)=dis(i,j)$ \u7684 $(A,B)$ \u4e4b\u95f4\u8fde\u8fb9\uff0c\u53ea\u8981 $(x,y)$ \u90fd\u548c $A,B$ \u5728\u4e00\u4e2a\u8fde\u901a\u5757\u4e2d\u4e14 $dis(x,y)=dis(A,B)$\uff0c$(x,y)$ \u5c31\u80fd\u5230\u8fbe\u3002\n\n\u73b0\u5728\u53ea\u9700\u8981\u89e3\u51b3\u4e24\u4e2a\u95ee\u9898\uff1a\n\n1. \u7ed9\u51fa\u4e00\u4e2a\u96c6\u5408\uff0c\u6c42\u51fa\u6709\u51e0\u5bf9\u70b9\u8ddd\u79bb\u4e3a $D=dis(A,B)$\u3002\n2. \u82e5\u5728 $dis(A,B)=dis(i,j)$ \u7684 $(A,B)$ \u4e4b\u95f4\u8fde\u8fb9\uff0c\u627e\u51fa\u8fde\u901a\u5757\u3002\n\n\u7b2c\u4e00\u4e2a\u95ee\u9898\u53ef\u4ee5\u7528 map \u89e3\u51b3\uff0c\u4ece\u5de6\u5f80\u53f3\u626b\u63cf\u6240\u6709\u70b9\uff0c\u90a3\u6ee1\u8db3\u6761\u4ef6\u7684\u70b9\u5728\u4e24\u6761\u659c\u7ebf\u4e0a\uff0c\u90fd\u5f62\u5982 $x\\pm y=k$\uff0c\u53ef\u4ee5\u76f4\u63a5\u7edf\u8ba1\u3002\n\n\u7b2c\u4e8c\u4e2a\u95ee\u9898\u91c7\u7528 BFS+set\uff0c\u628a $x+y=k$\uff08$-$ \u540c\u7406\uff09\u7684\u70b9\u5b58\u8fdb\u4e0b\u6807\u4e3a $k$ \u7684 set \u91cc\u9762\uff0c\u6bcf\u6b21\u80fd\u8bbf\u95ee\u5230\u7684\u662f\u4e00\u6bb5\u533a\u95f4\u3002set \u91cc\u9762\u66b4\u529b\u67e5\u8be2\uff0c\u4e00\u65e6\u8bbf\u95ee\u8fc7\u4e86\u5c31\u628a\u8fd9\u4e2a\u70b9\u5220\u6389\uff0c\u590d\u6742\u5ea6\u663e\u7136\u6b63\u786e\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nint n,m,used[100005],A,B,tot=0;\nll d;\nstruct P{\n\tll x,y,id;\n}a[100005],b[100005];\nconst bool operator <(const P x,const P y){\n\treturn x.x<y.x;\n}\nset<P> ssum[200005],sdiff[200005];\nmap<ll,ll> id;\nqueue<int> q;\nvoid U(int x){\n\tif(used[x])return ;\n\tq.push(x),used[x]=1;\n\tssum[id[a[x].x+a[x].y]].erase(a[x]);\n\tsdiff[id[a[x].x-a[x].y]].erase(a[x]);\n}\nll Calc(){\n\tmap<ll,ll> cnt1,cnt2;\n\tset<pair<ll,ll> > s;\n\tll sum=0;\n\tsort(a+1,a+n+1);\n\tfor(int i=1,j=1;i<=n;i++){\n\t\twhile(a[j].x<a[i].x-d)cnt1[a[j].x+a[j].y]--,cnt2[a[j].x-a[j].y]--,j++;\n\t\tsum+=cnt1[a[i].x+a[i].y-d],sum+=cnt2[a[i].x-a[i].y-d];\n\t\tif(s.count(make_pair(a[i].x-d,a[i].y)))sum--;\n\t\tcnt1[a[i].x+a[i].y]++,cnt2[a[i].x-a[i].y]++;\n\t\t//cout<<i<<' '<<a[i].x<<' '<<a[i].y<<' '<<sum<<'\\n';\n\t\ts.insert(make_pair(a[i].x,a[i].y));\n\t}\n\treturn sum;\n}\nint main(){\n\tcin>>n>>A>>B;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>a[i].x>>a[i].y,a[i].id=i;\n\t\tif(!id.count(a[i].x+a[i].y))id[a[i].x+a[i].y]=++tot;\n\t\tif(!id.count(a[i].x-a[i].y))id[a[i].x-a[i].y]=++tot;\n\t\tssum[id[a[i].x+a[i].y]].insert(a[i]);\n\t\tsdiff[id[a[i].x-a[i].y]].insert(a[i]);\n\t}\n\td=abs(a[A].x-a[B].x)+abs(a[A].y-a[B].y);\n\tU(A),U(B);\n\twhile(!q.empty()){\n\t\tint x=q.front();\n\t\tq.pop();\n\t\tvector<int> tmp;\n\t\tif(id.count(a[x].x+a[x].y+d)){\n\t\t\tauto it=ssum[id[a[x].x+a[x].y+d]].lower_bound({a[x].x,0,0});\n\t\t\twhile(it!=ssum[id[a[x].x+a[x].y+d]].end()&&(it->x)<=a[x].x+d){\n\t\t\t\ttmp.push_back(it->id);\n\t\t\t\t++it;\n\t\t\t}\n\t\t}\n\t\tif(id.count(a[x].x+a[x].y-d)){\n\t\t\tauto it=ssum[id[a[x].x+a[x].y-d]].lower_bound({a[x].x-d,0,0});\n\t\t\twhile(it!=ssum[id[a[x].x+a[x].y-d]].end()&&(it->x)<=a[x].x){\n\t\t\t\ttmp.push_back(it->id);\n\t\t\t\t++it;\n\t\t\t}\n\t\t}\n\t\tif(id.count(a[x].x-a[x].y+d)){\n\t\t\tauto it=sdiff[id[a[x].x-a[x].y+d]].lower_bound({a[x].x,0,0});\n\t\t\twhile(it!=sdiff[id[a[x].x-a[x].y+d]].end()&&(it->x)<=a[x].x+d){\n\t\t\t\ttmp.push_back(it->id);\n\t\t\t\t++it;\n\t\t\t}\n\t\t}\n\t\tif(id.count(a[x].x-a[x].y-d)){\n\t\t\tauto it=sdiff[id[a[x].x-a[x].y-d]].lower_bound({a[x].x-d,0,0});\n\t\t\twhile(it!=sdiff[id[a[x].x-a[x].y-d]].end()&&(it->x)<=a[x].x){\n\t\t\t\ttmp.push_back(it->id);\n\t\t\t\t++it;\n\t\t\t}\n\t\t}\n\t\tfor(int i:tmp)U(i);\n\t}\n\tll ans=Calc();\n\tfor(int i=1;i<=n;i++)if(!used[a[i].id])b[++m]=a[i];\n\tn=m;\n\tfor(int i=1;i<=n;i++)a[i]=b[i];\n\tans-=Calc();\n\tcout<<ans;\n}\n```",
        "postTime": 1626957616,
        "uid": 42156,
        "name": "feecle6418",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT2160 \u3010[ARC065C] Manhattan Compass\u3011"
    }
]