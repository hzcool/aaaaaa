[
    {
        "content": "\u8003\u8651\u679a\u4e3e GCD \u7684\u503c\u4e3a $t$\uff0c\u6c42\u51fa\u6bcf\u4e2a $t$ \u5bf9\u5e94\u7684\u65b9\u6848\u6570 $f_t$\u3002\r\n\r\n\u76f4\u63a5\u6c42\u51fa\u6709\u591a\u5c11\u8def\u5f84\u7684 GCD \u7b49\u4e8e\u5b83\u4e0d\u597d\u6c42\uff0c\u6211\u4eec\u8003\u8651\u5148\u6c42\u51fa\u6ee1\u8db3 GCD \u7684\u503c\u4e3a $t$ \u7684\u500d\u6570\u7684\u65b9\u6848\u6570 $g_t$\uff0c\u5219 $f_t=g_t-\\sum{f_{it}} (i>1)$\u3002\r\n\r\n\u5bf9\u4e8e $g_t$\uff0c\u6211\u4eec\u5148\u628a\u6240\u6709\u6ee1\u8db3 $t \\space | \\space a_i$ \u7684 $i$ \u62c9\u51fa\u6765\u5efa\u51fa\u4e00\u4e2a\u68ee\u6797\uff0c\u5728\u6bcf\u4e00\u68f5\u6811\u4e0a\u505a\u6811\u5f62 dp\uff1a\r\n\r\n$cnt_i$ \u8868\u793a $i$ \u7684\u5b50\u6811\u5185\uff0c\u6709\u4e00\u7aef\u70b9\u4e3a $i$ \u7684\u94fe\u7684\u4e2a\u6570\u3002\r\n\r\n$len_i$ \u8868\u793a $i$ \u7684\u5b50\u6811\u5185\uff0c\u6709\u4e00\u7aef\u70b9\u4e3a $i$ \u7684\u94fe\u7684\u94fe\u957f\u4e4b\u548c\uff08\u51c6\u786e\u7684\u8bf4\u5e94\u8be5\u662f\u5305\u62ec\u7684\u70b9\u4e2a\u6570\uff0c\u6ca1\u5565\u5dee\u522b\uff09\u3002\r\n\r\n$res_i$ \u8868\u793a $i$ \u7684\u5b50\u6811\u5185\uff0c\u7ecf\u8fc7 $i$ \u7684\u6240\u6709\u957f\u5ea6\u5927\u4e8e $1$ \u7684\u94fe\u7684\u957f\u5ea6\u4e4b\u548c\u3002\r\n\r\n\u90a3\u4e48 $g_t=\\sum{res_i}$\u3002\r\n\r\n\u5bf9\u4e8e\u8fb9 $(u,v)$\uff0c\u6709\u8f6c\u79fb\uff1a\r\n\r\n$res_u=res_u+cnt_u \\times len_v + cnt_v \\times len_u$\r\n\r\n\u524d\u9762\u7684 $res_u$ \u662f\u56e0\u4e3a $v$ \u5b50\u6811\u5185\u53ef\u4ee5\u4e0d\u9009\uff08\u4f46\u662f $u$ \u5fc5\u987b\u9009\uff09\uff0c\u540e\u9762\u662f\u8ba1\u7b97\u4e24\u68f5\u5b50\u6811\u5408\u5e76\uff0c\u5b50\u6811\u6839\u5904\u4e24\u6761\u94fe\u62fc\u8d77\u6765\u7684\u603b\u957f\u5ea6\u3002\r\n\r\n$len_u=len_u+len_v+cnt_v$\r\n\r\n$v$ \u5b50\u6811\u5185\u7684\u94fe\u4f1a\u548c $u$ \u63a5\u8d77\u6765\uff0c\u957f\u5ea6\u52a0 $1$\u3002\r\n\r\n$cnt_u=cnt_u+cnt_v$\r\n\r\n\u4e0e $len_u$ \u540c\u7406\u3002\r\n\r\n\u7136\u540e\u5c31\u505a\u5b8c\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(V \\log V +n \\sqrt V)$\u3002\r\n\r\n```cpp\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\ninline void dfs(int u,int tt){\r\n    cnt[u]=1; len[u]=1; res[u]=0; col[u]=0;\r\n    for(int i=head[u];i;i=e[i].nxt){\r\n        int v=e[i].to;\r\n        if(!col[v]) continue;\r\n        dfs(v,tt);\r\n        res[u]=(res[u]+(1ll*cnt[u]*len[v]%mod+1ll*cnt[v]*len[u]%mod)%mod)%mod;\r\n        len[u]=(len[u]+len[v]+cnt[v])%mod;\r\n        cnt[u]=cnt[u]+cnt[v];\r\n    }\r\n    (ans[tt]+=res[u])%=mod;\r\n}\r\nint main(){\r\n    n=read();\r\n    for(int i=1;i<=n;i++){\r\n        int x=read(); m=max(m,x);\r\n        for(int j=1;j*j<=x;j++)\r\n            if(x%j==0){\r\n                g[j].emplace_back(i);\r\n                if(j*j<x) g[x/j].emplace_back(i);\r\n            }\r\n    }\r\n    for(int i=1;i<n;i++){\r\n        int u=read(),v=read();\r\n        add(u,v); add(v,u);\r\n    }\r\n    for(int i=m;i;i--){\r\n        if(g[i].empty()) continue;\r\n        for(int j=0;j<g[i].size();j++) col[g[i][j]]=1;\r\n        for(int j=0;j<g[i].size();j++) if(col[g[i][j]]) dfs(g[i][j],i);\r\n        for(int j=i+i;j<=m;j+=i) (ans[i]+=mod-ans[j])%=mod;\r\n    }\r\n    for(int i=1;i<=m;i++) (sum+=1ll*ans[i]*i%mod)%=mod;\r\n    printf(\"%d\\n\",sum);\r\n    return 0;\r\n}\r\n```\r\n",
        "postTime": 1670654531,
        "uid": 236862,
        "name": "DitaMirika",
        "ccfLevel": 7,
        "title": "ABC248G"
    },
    {
        "content": "\u9000\u5f79\u5e7c\u7a1a\u9009\u624b\u95f2\u6687\u65f6\u95f4\u6765\u8d21\u732e\u793e\u4f1a\u4e86\u3002\n\n\u9996\u5148\u6211\u4eec\u8981\u77e5\u9053\u8fd9\u6837\u4e00\u4e2a\u6027\u8d28\uff1a$ x = \\sum \\limits_{d|x} \\varphi(d)$\n\n\u8fd9\u91cc\u6211\u4eec\u8bf4\u4e00\u4e9b\u522b\u7684\u4e8b\u60c5\uff1a\u672c\u8d28\u4e0a\uff0c\u5927\u529b\u5bb9\u65a5\u548c\u6211\u4eec\u7528\u7684 $\\varphi(x)$ \u548c $\\varepsilon(x) = \\sum \\limits_{d|x} \\mu(x)$ \u672c\u8d28\u4e0a\u5e72\u7684\u90fd\u662f\u4e00\u4ef6\u4e8b\u60c5\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5728\u5177\u4f53\u95ee\u9898\u7684\u65f6\u5019\u53ef\u80fd\u4f1a\u88ab\u5bb9\u65a5\u7ed5\u6655\n\n\u90a3\u4e48\u4e0d\u59a8\u4f7f\u7528\u4e0a\u9762\u7684\u4e24\u4e2a\u5f0f\u5b50\uff0c\u53ea\u9700\u8981\u7eaf\u7eaf\u7684\u4ee3\u6570\u8fd0\u7b97\u3002\n\n\u8bdd\u8bf4\u56de\u6765\uff0c\u6211\u4eec\u7528\u8fd9\u4e2a\u5f0f\u5b50\u4e00\u5957\u539f\u5f0f\uff08\u5b9a\u4e49 $\\text{g}(x,y)$ \u8868\u793a\u4e24\u70b9\u8def\u5f84\u4e4b\u95f4\u7684 $\\gcd$\uff09\uff1a\n\n$\\sum \\limits_{k=1}^{10^5} \\varphi(k) \\sum \\limits_{\\text{g}(u,v)|k}1$\n\n\u90a3\u4e48\u601d\u8003\u540e\u9762\u8fd9\u4e2a sigma \u7684\u81ea\u8eab\u542b\u4e49\uff0c\u662f\u4e0d\u662f\u770b\u7740\u633a\u597d\u6c42\u7684\uff1f\n\n\u6211\u4eec\u8003\u8651\u62a0\u51fa\u6240\u6709 $k | a_i$ \u7684\u70b9 $i$\uff0c\u518d\u62a0\u51fa\u5b83\u4eec\u4e4b\u95f4\u7684\u8fde\u901a\u5757\u5206\u522b\u8ba1\u7b97\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5168\u5c40\u5206\u6790\u590d\u6742\u5ea6\uff0c\u5176\u5b9e\u8fd9\u6837\u5df2\u7ecf\u53ef\u4ee5\u505a\u5230 $\\mathcal{O}(n\\text{d}(n))$\u4e86\u3002\n\n\u7136\u540e\u63d0\u4e00\u53e5\uff0c\u8fd9\u4e2a\u62a0\u8054\u901a\u5757\u7684\u8fc7\u7a0b\u770b\u4f3c\u8981\u679a\u4e3e\u5f88\u591a\u65e0\u7528\u8fb9\uff0c\u5b9e\u9645\u4e0a\u603b\u7684\u6765\u8bf4\u662f\u6bcf\u4e2a\u70b9\u7684\u6240\u6709\u51fa\u8fb9\u90fd\u88ab\u8bbf\u95ee $O(d(n))$ \u6b21\uff0c\u6240\u4ee5\u603b\u7684\u590d\u6742\u5ea6\u4ecd\u7136\u6b63\u786e\u3002\n\n\u5177\u4f53\u7684\u8fde\u901a\u5757\u5185\u8ba1\u6570\uff0c\u662f\u975e\u5e38\u7ecf\u5178\u7684\u95ee\u9898\uff0c\u8003\u8651\u6bcf\u4e2a\u70b9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5373\u53ef\u3002\n\n```cpp\n\nbool visp[200005];\nll cnt, prim[200005],phi[200005];\nvoid init(){\n    phi[1]=1;\n    for(ll i=2;i<=2e5;i++){\n        if(!visp[i]) prim[++cnt]=i, phi[i]=i-1;\n        for(ll j=1;j<=cnt && i*prim[j]<=2e5;j++){\n            visp[i*prim[j]]=1;\n            if(i%prim[j]==0) {phi[i*prim[j]] = phi[i] * prim[j]; break;}\n            phi[i*prim[j]] = phi[i] * phi[prim[j]];\n        }\n    }\n}\nll n,a[100005],has[100005],vis[100005];\nvector<ll>E[100005];\nvector<ll>lst[100005]; // \u679a\u4e3e\u56e0\u6570\u7684\u5217\u8868\nll cnts=0; vector<ll>temp;\nvoid dfs1(ll x){\n    vis[x]=1; temp.push_back(x);\n    for(auto y: E[x]){\n        if(!has[y]) continue;\n        if(vis[y]) continue;\n        dfs1(y);  \n    }\n}\nll dfs(ll x){\n    vis[x]=1;\n    ll sz=1;\n    ll n = temp.size();\n    ll all = (n-1)*(n-1), ans= 0;\n    for(auto y: E[x]){\n        if(!has[y]) continue;\n        if(vis[y]) continue;\n        ll tsz = dfs(y);\n        sz += tsz;\n        all -= tsz * tsz;\n    }\n    all -= (n-sz) * (n-sz);\n    all /= 2; all %= mod;\n    cnts = (cnts + all + (n-1)) % mod;\n    return sz;\n}\nvoid solve(){\n    n=read();\n    for(ll i=1;i<=n;i++){\n        a[i]=read();\n        for(ll j=1;j*j<=a[i];j++){\n            if(a[i]%j) continue;\n            lst[j].push_back(i);\n            if(j*j!=a[i]) lst[a[i]/j].push_back(i);\n        }\n    }\n    for(ll i=1;i<n;i++){\n        ll u=read(), v=read();\n        E[u].push_back(v);\n        E[v].push_back(u);\n    }\n    ll ans=0;\n    for(ll i=1;i<=1e5;i++){\n        ll anst = 0;\n        for(auto x: lst[i]){\n            has[x]=1; vis[x]=0;\n        }\n        for(auto x: lst[i]){\n            if(!vis[x]){\n                temp.clear();\n                dfs1(x);\n                for(auto y: temp) vis[y]=0;\n                cnts=0;\n                dfs(x);\n                anst = (anst + cnts) % mod;\n            }\n        }\n        ans = (ans + anst * phi[i]) % mod;\n        for(auto x: lst[i]){\n            has[x]=0; vis[x]=0;\n        }\n    }\n    printf(\"%lld\\n\", ans);\n}\nint main(){\n    #ifdef OIcontest\n        freopen(\".in\",\"r\",stdin);\n        freopen(\".out\",\"w\",stdout);\n    #endif\n    #ifdef FastIO\n        ios::sync_with_stdio(0); cin.tie(0), cout.tie(0);\n    #endif\n    init();\n    ll T=1;\n    while(T--) solve();\n    return 0;\n}\n```",
        "postTime": 1672487078,
        "uid": 334727,
        "name": "BreakPlus",
        "ccfLevel": 0,
        "title": "Solution ABC248G"
    },
    {
        "content": "\u8003\u8651\u5982\u4f55\u6c42\u51fa\u6240\u6709\u6ee1\u8db3 $\\gcd(i,j)=t$ \u7684\u8def\u5f84 $(i,j)$ \u8d21\u732e\u3002\u663e\u7136\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u5305\u542b\u56e0\u5b50 $t$ \u7684\u8282\u70b9\uff0c\u5728\u5f62\u6210\u7684\u82e5\u5e72\u8fde\u901a\u5757\u4e2d\u6267\u884c DP \u8ba1\u7b97\u603b\u957f\u5ea6\u3002\n\n\u4f46\u662f\u8fd9\u6837\u505a\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u8def\u5f84 $t=\\gcd(i,j)$\uff0c\u4ec5\u80fd\u4fdd\u8bc1 $t|\\gcd(i,j)$\u3002\u7531\u4e8e\u6211\u4eec\u7684\u76ee\u7684\u662f\u5bf9\u6240\u6709\u4e0d\u540c\u7684 $t$ \u7684\u8d21\u732e\u6c42\u548c\uff0c\u56e0\u6b64\u53ef\u4ee5\u8003\u8651\n\n$$t=\\sum_{d|t}\\phi(d)$$\n\n\u8fd9\u65f6\u5982\u679c\u679a\u4e3e $d$\uff0c\u7edf\u8ba1\u8def\u5f84 $(i,j)$ \u7684\u8d21\u732e\u65f6\uff0c\u6240\u9700\u6ee1\u8db3\u7684\u6761\u4ef6\u5c31\u4ec5\u4e3a $d|\\gcd(i,j)$\uff0c\u7b26\u5408\u4e0a\u8ff0\u505a\u6cd5\uff0c\u5373\u7edf\u8ba1\u6ee1\u8db3\u8fd9\u4e00\u6761\u4ef6\u7684\u6240\u6709\u8def\u5f84\u7684\u603b\u957f\u5ea6\u518d\u4e58\u4e0a $\\phi(d)$\u4e4b\u548c\u3002\n\n\u5229\u7528\u8c03\u548c\u7ea7\u6570\u601d\u60f3\u9884\u5904\u7406\uff0c\u53ef\u4ee5\u8fbe\u5230 $O(nd(n))$ \u65f6\u7a7a\u590d\u6742\u5ea6\uff0c\u5176\u4e2d $d(n)$ \u8868\u793a $[1,n]$ \u5185\u56e0\u6570\u6700\u591a\u7684\u6570\u7684\u56e0\u6570\u4e2a\u6570\uff0c\u6ee1\u8db3 $d(10^5)=128$\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define maxn 200005\nusing namespace std;\n\nconst int mod = 998244353;\nint n, m, d, x, y, j, a[maxn], b[maxn], c[maxn];\nvector<int> e[maxn], v[maxn];\nlong long ans, s, f[maxn], g[maxn], h[maxn];\n// f: \u7ecf\u8fc7i\u7684\u603b\u957f\u5ea6\n// g: \uff08\u524d\u82e5\u5e72\u4e2a\u5b50\u6811\u4e2d\uff09\u4e00\u7aef\u4e3ai\u7684\u603b\u957f\u5ea6\n// h: \uff08\u524d\u82e5\u5e72\u4e2a\u5b50\u6811\u4e2d\uff09\u4e00\u7aef\u4e3ai\u7684\u603b\u6570\nvoid dfs(int u) {\n    c[u] = 0, f[u] = 0, h[u] = g[u] = 1;\n    // \u6ce8\u610f\u6b64\u9898\u8def\u5f84\u957f\u5ea6\u4e3a\u7ed3\u70b9\u6570\u800c\u975e\u8fb9\u6570\n    for (int v : e[u]) {\n        if (!c[v]) continue;\n        dfs(v);\n        f[u] = (f[u] + g[u] * h[v] % mod + g[v] * h[u] % mod) % mod;\n        g[u] = (g[u] + g[v] + h[v]) % mod;\n        h[u] = h[u] + h[v];\n    }\n    (s += f[u]) %= mod;\n}\nint phi[maxn];\ninline void init() {\n    // \u57c3\u6c0f\u7b5b\n    for (int i = 1; i <= m; i++) phi[i] = i;\n    for (int i = 2; i <= m; i++)\n        if (phi[i] == i)\n            for (int j = i; j <= m; j += i) phi[j] = phi[j] / i * (i - 1);\n}\nsigned main() {\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; ++i) {\n        scanf(\"%d\", a + i), m = max(m, a[i]), v[a[i]].push_back(i);\n    }\n    init();\n    // \u9884\u5904\u7406\n    for (int i = 1; i <= m; ++i) {\n        for (int j = 2; i * j <= m; ++j) {\n            for (int k : v[i * j]) v[i].push_back(k);\n        }\n    }\n    for (int i = 1; i <= n; ++i) scanf(\"%d%d\", &x, &y), e[x].push_back(y), e[y].push_back(x);\n    for (d = 1; d <= m; ++d) {\n        s = 0;\n        for (int x : v[d]) c[x] = 1;\n        // \u5bf9\u8fde\u901a\u5757\u5185 DP \u6c42\u603b\u957f\u5ea6\n        for (int x : v[d])\n            if (!b[x]) dfs(x);\n        (ans += s * phi[d]) %= mod;\n    }\n    printf(\"%lld\", ans);\n    return 0;\n}\n```",
        "postTime": 1671264761,
        "uid": 62440,
        "name": "MuelsyseU",
        "ccfLevel": 0,
        "title": "[ABC248G] GCD cost on the tree \u9898\u89e3"
    },
    {
        "content": "- posted on 2022-10-13 First version\n- updated on 2022-11-22 \u4fee\u6b63\u4e86\u65b9\u6cd5\u4e8c\u7684\u4ee3\u7801\u5b9e\u73b0\u3002\n\n## problem\n$n$ \u4e2a\u70b9\u7684\u6811\u6709\u70b9\u6743 $a$\uff0c\u6c42\n\n$$\\sum_{\\text{\u8def\u5f84 P \u5728\u6811\u4e0a}}{\\gcd(a_{P_1},a_{P_2},\\cdots,a_{P_{|P|}})\\cdot |P|}.$$\n\n\uff08\u539f\u9898\u8981\u6c42\u8def\u5f84 $P$ \u7684\u957f\u5ea6\u81f3\u5c11\u4e3a $2$\uff0c\u8bf7\u6ce8\u610f\uff09\n\n## solution 1\n\u8003\u8651\u679a\u4e3e $\\operatorname{lca}=k$ \u600e\u4e48\u505a\u3002\n\n\u5728 $k$ \u7684\u5b50\u6811\u4e2d\uff0c\u7206\u641c\u6240\u6709\u8def\u5f84\uff0c\u5b58\u5230\u4e00\u4e2a `std::map` \u91cc\u3002\n\n\u8003\u8651\u5bf9\u4e8e\u5b50\u6811 $k$ \u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684 $\\gcd$\uff1f\u7531\u4e8e\u8fd9\u4e9b\u8def\u5f84\u4e2d\u542b\u6709 $a_k$\uff0c\u610f\u5473\u7740 $\\gcd|a_k$\uff0c\u90a3\u4e48\u4e00\u5171\u5e94\u8be5\u6709 $O(\\sigma(a_k))$ \u79cd $\\gcd$\uff1b$10^5$ \u4e2d\u6700\u5927\u7684 $\\sigma$ \u5927\u6982\u662f $90$ \u5de6\u53f3\uff08$2\\times 3\\times 5\\times 7\\times 11\\times 13\\times 17=510510$\uff09\u3002\n\n\u4e8e\u662f\u6709\u8fd9\u4e48\u4e00\u79cd\u60f3\u6cd5\uff1a\u7ef4\u62a4\u4e00\u4e2a\u5b50\u6811\u7684\u8def\u5f84\u7684\u524d\u7f00\u548c\uff0c\u6bcf\u6b21\u5bf9\u4e8e\u4e00\u4e2a\u5b50\u6811\u7b97\u51fa\u7684 `std::map` \u4e2d\u7684\u503c\u548c\u8fd9\u4e2a\u524d\u7f00\u548c\u5377\u8d77\u6765\uff08$O(90^2)$\uff09\uff0c\u7136\u540e\u6254\u8fdb\u53bb\u524d\u7f00\u548c\uff08$O(90)$\uff09\u3002\n\n\u70b9\u5206\u6cbb\u4f1a\u51ed\u7a7a\u591a\u51fa\u4e00\u53ea $\\log$\uff0c\u8fd9\u9053\u9898\u76f4\u63a5\u4e00\u904d dfs\uff0c\u6bcf\u6b21\u50cf\u4e0a\u9762\u8fd9\u6837\u66b4\u529b\u7b97\u4e00\u4e0b\u5373\u53ef\u3002\u590d\u6742\u5ea6 $O(90^2n\\log n)$\uff0c\u5305\u542b $\\gcd$ \u7684 $\\log$ \u548c `std::map` \u7684 $\\log\\log$\u3002\n\n## code\n\u6ca1\u6709\u8bb2\u5b8c\u3002\u8fd9\u6837\u5199\u7684\u7ec6\u8282\u5f88\u591a\u3002\n\n\u8003\u8651\u600e\u4e48\u628a\u4e24\u4e2a `std::map` \u5377\u8d77\u6765\uff1f\u4f60\u9700\u8981\u8bb0\u5f55\uff0c\u5f53 $\\gcd=d$ \u65f6\uff0c\u6709\u591a\u5c11\u6761\u8def\u5f84\uff0c\u5b83\u4eec\u7684\u8def\u5f84\u603b\u957f\u5ea6\u662f\u591a\u5c11\u3002\u7136\u540e\u4f7f\u7528\u4e58\u6cd5\u539f\u7406\u3002\n\n\u5728\u7ee7\u627f\u5230\u7236\u4eb2\u65f6\uff0c\u8fd8\u9700\u8981\u6ce8\u610f\u8def\u5f84\u603b\u957f\u5ea6\u5e94\u8be5\u52a0\u4e0a\u8def\u5f84\u6761\u6570\u3002\n\n```cpp\n#include <map>\n#include <cstdio>\n#include <cstring>\n#include <utility>\n#include <algorithm>\nusing namespace std;\ntypedef long long LL;\nconst int P=998244353;\ntypedef pair<int,int> node;\nint gcd(int x,int y){return !y?x:gcd(y,x%y);}\ntemplate<int N,int M,class T=int> struct graph{\n    int head[N+10],nxt[M*2+10],cnt;\n    struct edge{\n        int u,v;T w;\n        edge(int u=0,int v=0,T w=0):u(u),v(v),w(w){}\n    } e[M*2+10];\n    graph(){memset(head,cnt=0,sizeof head);}\n    edge operator[](int i){return e[i];}\n    void add(int u,int v,T w=0){e[++cnt]=edge(u,v,w),nxt[cnt]=head[u],head[u]=cnt;}\n    void link(int u,int v,T w=0){add(u,v,w),add(v,u,w);}\n};\nint n,a[100010],ans;\ngraph<100010,100010> g;\nnode o(node a,node b){return node((a.first+b.first)%P,(a.second+b.second)%P);}\nLL calc(map<int,node> &a,map<int,node> &b){\n\tLL res=0; \n//\tprintf(\"a:\");for(pair<int,node> x: a) printf(\"(%d,{%d,%d}),\",x.first,x.second.first,x.second.second);puts(\"\");\n//\tprintf(\"b:\");for(pair<int,node> x: b) printf(\"(%d,{%d,%d}),\",x.first,x.second.first,x.second.second);puts(\"\");\n\tfor(pair<int,node> x: a){\n\t\tfor(pair<int,node> y: b){\n\t\t\tres=(res+1ll*gcd(x.first,y.first)*(1ll*x.second.second*y.second.first%P+1ll*x.second.first*y.second.second%P+1ll*x.second.second*y.second.second%P)%P)%P;\n\t\t}\n\t}\n\treturn res;\n}\nvoid merge(map<int,node> &a,map<int,node> &b){for(pair<int,node> y: b) a[y.first]=o(a[y.first],y.second);}\nmap<int,node> add(map<int,node> a,int w){\n\tmap<int,node> r;\n\tfor(pair<int,node> x: a){\n\t\tr[gcd(x.first,w)]=o(r[gcd(x.first,w)],node(x.second.first+x.second.second,x.second.second));\n\t}\n\treturn r;\n}\nmap<int,node> dfs(int u,int fa=0){\n\tmap<int,node> tot={{a[u],{0,1}}};\n\tfor(int i=g.head[u];i;i=g.nxt[i]){\n\t\tint v=g[i].v; if(v==fa) continue;\n\t\tmap<int,node> res=add(dfs(v,u),a[u]);\n//\t\tprintf(\">u=%d,v=%d\\n\",u,v);\n\t\tans=(ans+calc(tot,res))%P;\n//\t\tprintf(\"%lld\\n\",ans);\n\t\tmerge(tot,res);\n\t}\n\treturn tot;\n}\nint main(){\n//\t#ifdef LOCAL\n//\t \tfreopen(\"input.in\",\"r\",stdin);\n//\t#endif\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n\tfor(int i=1,u,v;i<n;i++) scanf(\"%d%d\",&u,&v),g.link(u,v);\n\tdfs(1,0);\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n## solution 2\n\u679a\u4e3e $\\gcd=d$\u3002\n\n\u8003\u8651\u6c42\u51fa $g_i$ \u8868\u793a\u8def\u5f84 $\\gcd$ \u4e3a $i$ **\u7684\u500d\u6570**\u7684\u8def\u5f84\u957f\u5ea6\u548c\u3002\n\n\u8003\u8651\u7ecf\u8fc7\u4e00\u6761\u8fb9\uff0c\u82e5\u8981\u4fdd\u8bc1 $\\gcd$ \u4e3a $i$ \u7684\u500d\u6570\uff0c\u5fc5\u6709 $i|\\gcd(a_u,a_v)$\u3002\n\n\u5bf9\u6bcf\u4e2a\u56e0\u6570\u5efa\u4e00\u68f5\u6811\uff0c\u5728\u56e0\u6570 $d$ \u7684\u6811\u4e2d\u653e\u5165 $d|\\gcd(a_u,a_v)$ \u7684\u6240\u6709\u8fb9\uff0c\u5bf9\u6bcf\u4e2a\u56e0\u6570\u7684\u6811\u5355\u72ec dfs\uff0c\u6c42\u51fa\u5176\u8def\u5f84\u957f\u5ea6\u548c\u3002\n\n\u73b0\u5728\u6709 $g_i$\uff0c\u8003\u8651\u5bb9\u65a5\uff1a\n\n$$f_i=g_i-\\sum_{i|j,i\\neq j}f_j.$$\n\n\u5012\u5e8f\u7b97\u51fa $f_i$ \u5373\u4e3a $\\gcd$ \u6070\u597d\u4e3a $i$ \u7684\u8def\u5f84\u957f\u5ea6\u548c\u3002\n\n\u590d\u6742\u5ea6\uff1a\u65f6\u95f4 $O(nd+n\\log n)$\uff0c\u7a7a\u95f4 $O(nd)$\uff0c\u5176\u4e2d $d=\\max_{i\\leq 10^5}\\sigma(i)=128$\u3002\u679a\u4e3e\u56e0\u5b50\u90e8\u5206\u53ef\u4ee5\u9884\u5904\u7406\uff0c\u6216\u8005\u6839\u53f7\u4e5f\u884c\u3002\n## code\n```cpp\n#include <map>\n#include <vector>\n#include <cstdio>\n#include <cstring>\n#include <utility>\n#include <cassert>\n#include <algorithm>\nusing namespace std;\n#ifdef LOCAL\n#define debug(...) fprintf(stderr,##__VA_ARGS__)\n#else\n#define debug(...) void(0)\n#endif\ntypedef long long LL;\nconst int P=998244353;\ntemplate<int N> struct siever{\n\tvector<int> d[N+10];\n\tsiever(){\n\t\tfor(int i=1;i<=N;i++){\n\t\t\tfor(int j=i;j<=N;j+=i) d[j].push_back(i);\n\t\t}\n\t}\n};\ntemplate<int N,int M,class T=int> struct graph{\n    int head[N+10],nxt[M*2+10],cnt;\n    int vis[N+10],tag; \n    struct edge{\n        int u,v;T w;\n        edge(int u=0,int v=0,T w=0):u(u),v(v),w(w){}\n    } e[M*2+10];\n    graph(){memset(head,cnt=0,sizeof head),memset(vis,tag=0,sizeof vis);}\n    edge&operator[](int i){return e[i];}\n    void add(int u,int v,T w=0){\n\t\tif(vis[u]!=tag) vis[u]=tag,head[u]=0;\n\t\te[++cnt]=edge(u,v,w),nxt[cnt]=head[u],head[u]=cnt;\n\t}\n    void link(int u,int v,T w=0){add(u,v,w),add(v,u,w);}\n};\nint gcd(int x,int y){return !y?x:gcd(y,x%y);}\nint n,a[100010];\nLL ans,cnt,f[100010];\nint vis[100010];\ngraph<100010,100010> t,g;\nvector<int> e[100010];\nsiever<100010> s; \nLL calc(pair<LL,LL> a,pair<LL,LL> b){\n\treturn ((a.first*b.second+b.first*a.second-a.second*b.second%P+P))%P;\n}\npair<LL,LL> dfs(int u,int fa,LL &ans){\n\tvis[u]=g.tag;\n\tpair<LL,LL> tot={1,1};\n\tfor(int i=g.head[u];i;i=g.nxt[i]){\n\t\tint v=g[i].v; if(v==fa) continue;\n\t\tpair<LL,LL> res=dfs(v,u,ans);\n\t\tres={(res.first+res.second)%P,res.second};\n\t\tans=(ans+calc(tot,res))%P;\n\t\ttot={(tot.first+res.first)%P,(tot.second+res.second)%P};\n\t}\n\treturn tot;\n}\nvoid dp(int d){\n\tg.tag++,g.cnt=0;\n\tfor(int i:e[d]) g.link(t[i].u,t[i].v),debug(\"link (%d,%d)\\n\",t[i].u,t[i].v);\n\tfor(int i:e[d]) if(vis[t[i].u]!=g.tag) dfs(t[i].u,0,f[d]);\n\tfor(int i:e[d]) if(vis[t[i].v]!=g.tag) dfs(t[i].v,0,f[d]);\n\tif(f[d]) debug(\"f[%d]=%lld\\n\",d,f[d]);\n}\nint main(){\n//\t#ifdef LOCAL\n//\t \tfreopen(\"input.in\",\"r\",stdin);\n//\t#endif\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n\tfor(int i=1,u,v;i<n;i++){\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tt.add(u,v);\n\t\tfor(int d:s.d[gcd(a[u],a[v])]) e[d].push_back(i),debug(\"(%d,%d) belongs to tree %d\\n\",u,v,d); \n\t}\n\tfor(int i=1;i<=1e5;i++) dp(i);\n\tfor(int i=1e5;i>=1;i--){\n\t\tfor(int j=i+i;j<=1e5;j+=i) f[i]=(f[i]-f[j]+P)%P;\n\t\tans=(ans+f[i]*i)%P;\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1665673746,
        "uid": 509229,
        "name": "yukimianyan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 ABC248G\u3010GCD cost on the tree\u3011"
    }
]