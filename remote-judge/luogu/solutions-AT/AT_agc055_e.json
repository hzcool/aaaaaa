[
    {
        "content": "\u8865\u4e0d\u52a8 F \u5148\u6765\u5199\u4e2a E \u7684\u9898\u89e3\u3002\n\n\u9707\u64bc\u3002\n\n------------\n\u8003\u8651\u4e00\u6b65\u5916\u661f\u4eba\u667a\u6167\u8f6c\u5316\uff1a\u6784\u9020\u4e00\u4e2a\u6392\u5217 $p$ \u521d\u59cb\u4e3a $1$ \u5230 $n$\uff0c\u6bcf\u6b21\u5408\u5e76\u4e24\u4e2a\u96c6\u5408\u5219\u4ea4\u6362\u8fd9\u4e24\u4e2a\u4f4d\u7f6e\u7684\u6570\u3002\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\uff1a$S_i=[\\min\\limits_{j=i}^np_j,\\max\\limits_{j=1}^ip_j]$\u3002\n\n\u663e\u7136\u77e5\u9053\u8fd9\u4e2a\u7ed3\u8bba\u4e4b\u540e\u5f52\u7eb3\u8bc1\u660e\u662f\u5bb9\u6613\u7684\u3002\u7531\u4e8e fyk \u8bf4\u9700\u8981 hyk \u770b\u61c2\u6211\u5c31\u4e0d\u5199\u8bc1\u660e\u4e86\uff0c\u4f46\u662f\u7531\u4e8e fyk \u8bf4\u9700\u8981 xqz \u4e5f\u770b\u61c2\u6211\u8fd8\u662f\u5199\u4e00\u4e0b\u8bc1\u660e\uff1a\n\n\u9996\u5148\u6700\u5f00\u59cb\u6210\u7acb\u3002\u5047\u8bbe\u73b0\u5728\u6210\u7acb\uff0c\u6211\u4eec\u6b32\u8bc1\u660e\u4e00\u6b21\u64cd\u4f5c\u4e4b\u540e\u4e5f\u8981\u6210\u7acb\u3002\u5047\u8bbe\u6211\u4eec\u64cd\u4f5c $i$ \u548c $i+1$\u3002\n- \u82e5 $p_i>p_{i+1}$\uff0c\u5219 $S_i=S_{i+1}$\uff0c\u4ea4\u6362\u4e4b\u540e\u663e\u7136\u4e24\u4e2a max \u548c min \u7684\u503c\u4e0d\u4f1a\u6539\u53d8\uff1b\n- \u82e5 $p_i<p_{i+1}$\uff0c\u5219 $S_i\\cup S_{i+1}=[\\min\\limits_{j=i}^np_j,\\max\\limits_{j=1}^{i+1}p_j]$\uff0c\u800c\u53ef\u77e5\u64cd\u4f5c\u540e $\\min\\limits_{j=i+1}^np_j$ \u7b49\u4e8e\u73b0\u5728\u7684 $\\min\\limits_{j=i}^np_j$\uff0c$\\max\\limits_{j=1}^{i}p_j$ \u7b49\u4e8e\u73b0\u5728\u7684 $\\max\\limits_{j=1}^{i+1}p_j$\uff0c\u4e8e\u662f\u6210\u7acb\uff1b\n\n\u7efc\u4e0a\uff0c\u7ed3\u8bba\u5f97\u8bc1\u3002\n\n\uff08\u6211\u89c9\u5f97\u6211\u5176\u5b9e\u8fd8\u4e0d\u5982\u5199\u4e00\u53e5\u201c\u5f52\u7eb3\u663e\u7136\u201d\u5b8c\u4e8b\u2026\u2026\uff09\n\n\u540e\u9762\u7684\u4e00\u5207\u5c31\u987a\u7406\u6210\u7ae0\u4e86\u3002\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u4e2a\u80fd\u5bfc\u51fa\u76ee\u6807\u96c6\u5408\u5e8f\u5217\u7684\u6392\u5217 $p$\uff0c\u5e76\u4e14\u6700\u5c0f\u5316\u5176\u9006\u5e8f\u5bf9\u6570\u3002\u9996\u5148\uff0c\u82e5 $l$ \u6216 $r$ \u4e0d\u9012\u589e\u663e\u7136\u4e0d\u5408\u6cd5\u3002\n\n\u7136\u540e\uff0c\u82e5 $i=n$ \u6216 $l_i<l_{i+1}$\uff0c\u5219\u53ef\u77e5 $p_i=l_i$\uff0c$r$ \u540c\u7406\u3002\u8fd9\u6837\u6211\u4eec\u5df2\u7ecf\u786e\u5b9a\u4e86\u6392\u5217\u4e2d\u7684\u4e00\u90e8\u5206\u3002\u540c\u65f6\uff0c\u6211\u4eec\u5df2\u7ecf\u4fdd\u8bc1\u4e86\uff0c\u540e\u7f00 min \u4e0d\u4f1a\u5927\u4e8e $l$\uff08\u56e0\u4e3a\u540e\u9762\u80af\u5b9a\u5df2\u7ecf\u6709\u4e00\u4e2a $p$ \u7b49\u4e8e\u8fd9\u4e2a $l$\uff09\uff0c\u524d\u7f00 max \u4e0d\u4f1a\u5c0f\u4e8e $r$\u3002\n\n\u4e8e\u662f\uff0c\u60f3\u8ba9\u76ee\u6807\u6392\u5217\u5bfc\u51fa\u76ee\u6807\u96c6\u5408\u5e8f\u5217\uff0c\u5728\u4e0d\u8003\u8651\u9006\u5e8f\u5bf9\u4e2a\u6570\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u6700\u5927\u5316\u540e\u7f00 min \u5e76\u4e14\u6700\u5c0f\u5316\u524d\u7f00 max\u3002\u53ea\u9700\u987a\u7740\u586b\u6ca1\u6709\u88ab\u786e\u5b9a\u7684\u90e8\u5206\u5373\u53ef\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u800c\u8fd9\u6837\u586b\u4e5f\u540c\u65f6\u4fdd\u8bc1\u4e86\u9006\u5e8f\u5bf9\u6700\u5c11\uff01\u4e8e\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u786e\u5b9a\u76ee\u6807\u6392\u5217\uff0c\u7136\u540e\u6c42\u4e00\u6b21\u9006\u5e8f\u5bf9\u5373\u53ef\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ninline ll readint(){\n\tll x=0;\n\tbool f=0;\n\tchar c=getchar();\n\twhile(!isdigit(c)&&c!='-') c=getchar();\n\tif(c=='-'){\n\t\tf=1;\n\t\tc=getchar();\n\t}\n\twhile(isdigit(c)){\n\t\tx=x*10+c-'0';\n\t\tc=getchar();\n\t}\n\treturn f?-x:x;\n}\nconst int maxn=5e5+5;\nint n,l[maxn],r[maxn];\nvoid myassert(bool f){\n\tif(!f){\n\t\tprintf(\"-1\\n\");\n\t\texit(0);\n\t}\n}\nint p[maxn],p2[maxn];\ninline int lowbit(int x){\n\treturn x&-x;\n}\nint c[maxn];\nvoid modify(int x,int k){\n\twhile(x){\n\t\tc[x]+=k;\n\t\tx-=lowbit(x);\n\t}\n}\nint query(int x){\n\tint s=0;\n\twhile(x<=n){\n\t\ts+=c[x];\n\t\tx+=lowbit(x);\n\t}\n\treturn s;\n}\nint main(){\n\t#ifdef LOCAL\n\tfreopen(\"in.txt\",\"r\",stdin);\n\tfreopen(\"out.txt\",\"w\",stdout);\n\t#endif\n\tn=readint();\n\tfor(int i=1;i<=n;i++){\n\t\tl[i]=readint();\n\t\tr[i]=readint();\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(i<n) myassert(l[i]<=l[i+1]);\n\t\tif(i==n||l[i]<l[i+1]){\n\t\t\tp[i]=l[i];\n\t\t\tmyassert(!p2[l[i]]);\n\t\t\tp2[l[i]]=i;\n\t\t}\n\t\tif(i) myassert(r[i]>=r[i-1]);\n\t\tif(!i||r[i]>r[i-1]){\n\t\t\tmyassert(!p[i]||p[i]==r[i]);\n\t\t\tp[i]=r[i];\n\t\t\tmyassert(!p2[r[i]]||p2[r[i]]==i);\n\t\t\tp2[r[i]]=i;\n\t\t}\n\t}\n\tint cur=1;\n\tfor(int i=1;i<=n;i++) if(!p[i]){\n\t\twhile(p2[cur]) cur++;\n\t\tp[i]=cur++;\n\t}\n\tint mx=0;\n\tfor(int i=1;i<=n;i++){\n\t\tmx=max(mx,p[i]);\n\t\tmyassert(mx==r[i]);\n\t}\n\tint mn=n+1;\n\tfor(int i=n;i>0;i--){\n\t\tmn=min(mn,p[i]);\n\t\tmyassert(mn==l[i]);\n\t}\n\tll ans=0;\n\tfor(int i=1;i<=n;i++){\n\t\tans+=query(p[i]);\n\t\tmodify(p[i],1);\n\t}\n\tprintf(\"%lld\\n\",ans);\n\t#ifdef LOCAL\n\tfprintf(stderr,\"%d\\n\",(int)clock());\n\t#endif\n\treturn 0;\n}\n```",
        "postTime": 1636084365,
        "uid": 174045,
        "name": "FZzzz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AGC055E \u3010Set Merging\u3011"
    }
]