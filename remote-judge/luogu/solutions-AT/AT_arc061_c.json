[
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/AT2069)\n\n### \u5206\u6790\n\n\u8fd9\u9898\u7684\u5efa\u56fe\u975e\u5e38\u5de7\u5999\u3002\n\n\u53d1\u73b0\u9898\u76ee\u8981\u6c42\u4e24\u70b9\u4e4b\u95f4\u7684\u94b1\u6570\u6700\u5c0f\u503c\uff0c\u4e0d\u96be\u5f80\u6700\u77ed\u8def\u65b9\u9762\u60f3\u3002\n\n\u7531\u4e8e\u5207\u6362\u8fde\u901a\u5757\u4e00\u5b9a\u4f1a\u5bfc\u81f4\u7b54\u6848 $+1$\uff0c\u56e0\u6b64\u53ea\u8981\u7edf\u8ba1\u8fde\u901a\u5757\u7684\u4e2a\u6570\u5373\u53ef\u3002\u6700\u6734\u7d20\u7684\u5efa\u56fe\u65b9\u5f0f\u662f\uff1a\u628a\u8fde\u5728\u4e00\u8d77\u7684\u540c\u4e00\u57ce\u5e02\u7684\u9053\u8def\u4e24\u7aef\u7684\u70b9\u653e\u8fdb\u4e00\u4e2a\u8fde\u901a\u5757\u5185\uff0c\u5757\u5185\u6bcf\u4e2a\u70b9\u4e24\u4e24\u4e4b\u95f4\u8fde\u4e00\u6761\u6743\u503c\u4e3a $1$ \u7684\u8fb9\u3002\u4f46\u662f\uff0c\u8fd9\u6837\u5efa\u56fe\u8fb9\u6570\u6700\u591a\u53ef\u4ee5\u8fbe\u5230 $\\dfrac{n(n-1)}{2}$ \u6761\uff0c\u663e\u7136\u4f1a\u7206\u7a7a\u95f4\u3002\n\n\u8003\u8651\u4f18\u5316\u3002\n\n\u8fb9\u6570\u7206\u70b8\uff0c\u5219\u5c1d\u8bd5\u5efa\u7acb\u865a\u70b9\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u8fde\u901a\u5757\uff0c\u5efa\u7acb\u4e00\u4e2a\u865a\u70b9\u3002\u628a\u8fde\u901a\u5757\u5185\u6bcf\u4e2a\u70b9\u548c\u865a\u70b9\u8fde\u4e00\u6761\u6743\u503c\u4e3a $0.5$ \u7684\u8fb9\u3002\u8fd9\u6837\uff0c\u4efb\u610f\u4e24\u70b9\u90fd\u80fd\u4ee5\u865a\u70b9\u4e3a\u4e2d\u8f6c\u7ad9\u6765\u4fdd\u6301\u8ddd\u79bb\u4ecd\u4e3a $1$\u3002\u4f18\u5316\u540e\uff0c\u70b9\u7684\u6570\u91cf\u4e0d\u8d85\u8fc7 $n+m$\uff0c\u8fb9\u7684\u6570\u91cf\u4e0d\u8d85\u8fc7 $2m$\uff0c\u65f6\u95f4\u3001\u7a7a\u95f4\u590d\u6742\u5ea6\u90fd OK\u3002\n\n\u6837\u4f8b $2$ \u539f\u56fe\uff08\u8fb9\u4e0a\u7684\u6570\u662f\u57ce\u5e02\u7f16\u53f7\uff09\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/qq1u3kgk.png)\n\n\u4ee5\u672c\u6837\u4f8b\u4e2d\u57ce\u5e02 $1$ \u552f\u4e00\u7684\u8fde\u901a\u5757\u6765\u5bf9\u6bd4\u4f18\u5316\u524d\u540e\uff08\u8fb9\u4e0a\u7684\u6570\u662f\u8fb9\u6743\uff09\u3002\n\n\u4f18\u5316\u524d\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/r69qruet.png)\n\n\u4f18\u5316\u540e\uff08$9$ \u4e3a\u865a\u70b9\uff09\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/0ecclvlb.png)\n\n\u4e3a\u4e86\u65b9\u4fbf\u8ba1\u7b97\uff0c\u5c06\u5168\u90e8\u8fb9\u6743 $\\times 2$ \u6765\u53d8\u6210\u6574\u6570\uff0c\u6700\u540e\u7b54\u6848\u518d $\\div 2$ \u5373\u53ef\u3002\n\n\u5177\u4f53\u6d41\u7a0b\uff1a\n\n1. \u628a\u6bcf\u6761\u8fb9\u7684\u4e24\u7aef\u70b9\u6309\u57ce\u5e02\u4fdd\u5b58\u5728 vector \u91cc\u9762\uff08\u7701\u7a7a\u95f4\uff09\u3002\n2. \u5faa\u73af\u904d\u5386\u6bcf\u4e2a\u51fa\u73b0\u8fc7\u7684\u57ce\u5e02\uff0c\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u8fde\u901a\u5757\uff0c\u627e\u51fa\u8fde\u901a\u5757\u5185\u6240\u6709\u70b9\uff0c\u548c\u8be5\u8fde\u901a\u5757\u7684\u865a\u70b9\u8fde\u8fb9\u3002\n3. \u8dd1\u4e00\u904d\u6700\u77ed\u8def\uff0c\u5f97\u51fa\u7b54\u6848\u3002\n\n\u6ce8\u610f\uff1a\n\n- \u5bf9\u4e8e\u6bcf\u4e2a\u4e0d\u540c\u7684\u57ce\u5e02\uff0c\u5e76\u67e5\u96c6\u548c\u4fdd\u5b58\u865a\u70b9\u7f16\u53f7\u7684\u6570\u7ec4\u90fd\u8981\u521d\u59cb\u5316\u3002\n- \u5b58 vector \u65f6\uff0c\u53ef\u80fd\u4f1a\u628a\u540c\u4e00\u4e2a\u70b9\u653e\u5165\u540c\u4e00\u4e2a\u57ce\u5e02\u6240\u5bf9\u5e94\u7684 vector \u591a\u6b21\uff0c\u6240\u4ee5\u9700\u8981\u53bb\u91cd\u3002\n\n### \u4ee3\u7801\n\n[click](https://atcoder.jp/contests/arc061/submissions/28663640)",
        "postTime": 1642862627,
        "uid": 528351,
        "name": "\u5df2\u6ce8\u9500HDyr!RS",
        "ccfLevel": 0,
        "title": "AT2069 [ARC061C] Snuke's Subway Trip \u9898\u89e3"
    },
    {
        "content": "\u8bf4\u4e00\u79cd\u4e0d\u7528\u8f6c\u6362\u5efa\u56fe\u7684\u65b9\u6cd5\u3002\n\n\n\n------------\n\n\u6211\u4eec\u5148\u5efa\u51fa\u539f\u56fe\uff0c\u7136\u540e\u76f4\u63a5\u7ef4\u62a4\u4ece $1$ \u5f00\u59cb\u7684\u6700\u77ed\u8def\u3002\u7531\u4e8e\u6bcf\u4e2a\u70b9\u8fde\u5165\u5176\u8fb9\u7684\u7f16\u53f7\u5bf9\u5176\u7b54\u6848\u4f1a\u4ea7\u751f\u5f71\u54cd\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u4ee5\u7b2c $i$ \u79cd\u7f16\u53f7\u7684\u8fb9\u8fde\u5165\u5176\u4ee3\u4ef7\u6700\u5c0f\u4e3a\u591a\u5c11\u3002\u8fd9\u4e2a\u770b\u8d77\u6765\u5f88\u5927\uff0c\u4f46\u5b9e\u9645\u53ea\u6709\u8fb9\u6570\u79cd\u3002\u800c\u4e14\u7531\u4e8e\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u8fb9\u6743\u53ea\u6709 $0,1$ \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7528\u53cc\u7aef\u961f\u5217\u6765\u4f18\u5316\u3002\n\n\u4f46\u8fd9\u6837\u505a\u7684\u590d\u6742\u5ea6\u6700\u5927\u4e3a $O(m^2)$\uff0c\u56e0\u4e3a\u53ef\u80fd\u6bcf\u6b21\u90fd\u5230\u540c\u4e00\u4e2a\u70b9\uff0c\u4e14\u90a3\u4e2a\u70b9\u5ea6\u6570\u6781\u5927\u3002\n\n\n------------\n\n\u6211\u4eec\u8003\u8651\u4f18\u5316\uff0c\u6211\u4eec\u53d1\u73b0\u5176\u5b9e\u5982\u679c\u4e00\u4e2a\u70b9 $x$ \u4ee5\u4e00\u79cd\u7f16\u53f7\u4e3a $y$ \u7684\u8fb9\u8fde\u5165\u88ab\u8bbf\u95ee\u8fc7\u4e86\uff0c\u4e14\u8be5\u70b9 $x$ \u53c8\u4ee5\u4e00\u79cd\u65b0\u7684\u7f16\u53f7\u4e3a $z$ \u7684\u8fb9\u8fde\u5165\uff0c\u90a3\u4e48\u73b0\u5728\u8be5\u70b9\u80fd\u66f4\u65b0\u7684\u70b9\u53ea\u6709\u5176\u8fde\u51fa\u7f16\u53f7\u4e3a $z$ \u7684\u70b9\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u5176\u4ed6\u70b9\u6765\u8bf4\u4ee3\u4ef7\u4e0d\u4f1a\u6bd4\u4ee5 $y$ \u8fde\u5165\u66f4\u4f18\u3002\u8fd9\u6837\u6bcf\u4e2a\u70b9\u8fde\u51fa\u7684\u70b9\u53ea\u4f1a\u88ab\u8bbf\u95ee\u81f3\u591a $2$ \u6b21\u3002\n\n\u8fd9\u6837\u590d\u6742\u5ea6\u74f6\u9888\u5c31\u5728\u524d\u671f\u9884\u5904\u7406\u65f6\uff0c\u7528 map \u628a\u4e00\u4e2a\u70b9 $x$ \u4ee5\u4e00\u79cd\u7f16\u53f7\u4e3a $y$ \u7684\u8fb9\u8fde\u5165\u8fd9\u79cd\u60c5\u51b5\u538b\u6210\u4e00\u4e2a\u8f83\u5c0f\u7684\u6570\u4e0a\u3002\u8fd9\u4e2a\u5e94\u8be5\u4e5f\u80fd\u4f18\u5316\u6210\u7ebf\u6027\uff0c\u4f46\u662f\u6ca1\u5fc5\u8981\u3002\n\n\u590d\u6742\u5ea6\u4e3a $O(m\\log m+m)$\n\n\n------------\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n// Problem: AT2069 [ARC061C] \u3059\u306c\u3051\u541b\u306e\u5730\u4e0b\u9244\u65c5\u884c / Snuke's Subway Trip\n// Contest: Luogu\n// URL: https://www.luogu.com.cn/problem/AT2069\n// Memory Limit: 250 MB\n// Time Limit: 3000 ms\n// 2022-05-13 20:06:28\n// Author : louhao088\n\n#include<bits/stdc++.h>\nusing namespace std;\n//static char buf[1000000],*p1=buf,*p2=buf;\n//#define getchar() p1==p2&&(p2=(p1=buf)+fread(buf,1,1000000,stdin),p1==p2)?EOF:*p1++\n#define pi pair<int,int>\n#define mp make_pair\n#define fi first\n#define se second\n#define pb push_back\n#define ls (rt<<1)\n#define rs (rt<<1|1)\n#define mid (l+r>>1)\n#define lowbit(x) (x&-x)\nconst int maxn=4e5+5,M=34005;\ninline int read(){\n\tchar ch=getchar();bool f=0;int x=0;\n\tfor(;!isdigit(ch);ch=getchar())if(ch=='-')f=1;\n\tfor(;isdigit(ch);ch=getchar())x=(x<<1)+(x<<3)+(ch^48);\n\tif(f==1)x=-x;return x;\n}\ninline void print(int x){\n    static int a[55];int top=0;\n    if(x<0) putchar('-'),x=-x;\n    do{a[top++]=x%10,x/=10;}while(x);\n    while(top) putchar(a[--top]+48);\n}\nint n,m,x,y,z,tot=0,id[maxn];\nvector<pi>e[maxn];\nint f[maxn],vis[maxn],c[maxn],vis2[maxn],a[maxn];\nmap<int,int>h[maxn];\ndeque<pi>q;vector<pi>E[maxn];\nsigned main()\n{\n\t//freopen(\".in\",\"r\",stdin);\n\t//freopen(\".out\",\"w\",stdout);\n\tn=read(),m=read();\n\tfor(int i=1;i<=m;i++){\n\t\tx=read(),y=read(),z=read();\n\t\tif(!h[x][z])h[x][z]=++tot;\n\t\tif(!h[y][z])h[y][z]=++tot;\n\t\tE[h[x][z]].pb(mp(y,h[y][z]));\n\t\tE[h[y][z]].pb(mp(x,h[x][z]));\n\t\tc[h[x][z]]=z,c[h[y][z]]=z;\n\t\te[x].pb(mp(y,h[y][z])),e[y].pb(mp(x,h[x][z]));\n\t}\n\tfor(auto i:e[n])q.push_back(i),f[i.se]=1;\n\twhile(!q.empty()){\n\t\tpi p=q.front();q.pop_front();\n\t\tint x=p.fi,z=p.se;int g=f[z];\n\t\tif(vis[z])continue;vis[z]=1;\n\t\tif(x==1)cout<<g,exit(0);\n\t\tif(vis2[x]==1){\n\t\t\tfor(auto i:E[z])\n\t\t\t\tif(!vis[i.se])q.push_front(i),f[i.se]=g;\n\t\t\tcontinue;\n\t\t}vis2[x]=1;\n\t\tfor(auto i:e[x])\n\t\t\tif(c[i.se]==c[z]){\n\t\t\t\tif(!vis[i.se])q.push_front(i),f[i.se]=g;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(!f[i.se])q.push_back(i),f[i.se]=g+1;\n\t\t\t}\n\t}\n\tputs(\"-1\");\n \treturn 0;\n}\n\n\n\n\n```\n",
        "postTime": 1652483920,
        "uid": 343748,
        "name": "louhao088",
        "ccfLevel": 9,
        "title": "AT2069 [ARC061C] \u3059\u306c\u3051\u541b\u306e\u5730\u4e0b\u9244\u65c5\u884c / Snuke's Subway Trip"
    },
    {
        "content": "\u3059\u306c\u3051\u541b\u306e\u5730\u4e0b\u9244\u65c5\u884c / Snuke's Subway Trip AtCoder - 2069\n\n\u9898\u610f\u662f\u4ece1\u5230$N$\uff0c\u4e58\u591a\u6b21\u5730\u94c1\u3002\u6bcf\u4e2a\u5730\u94c1\u6709\u4e00\u4e2a\u8fd0\u8425\u516c\u53f8\u3002\u5982\u679c\u516c\u53f8\u4e0d\u540c\uff0c\u90a3\u4e48\u6362\u4e58\u9700\u89811\u7684\u8d39\u7528\u3002\n\n\u89e3\u6790\uff1a\n\n\u5f88\u81ea\u7136\u80fd\u591f\u60f3\u5230\u5e76\u67e5\u96c6\u3002\n\n\u6bcf\u4e2a\u5e76\u67e5\u96c6\u7ef4\u62a4\u6bcf\u4e2a\u516c\u53f8\u7684\u7ebf\u8def\uff0c\u7ad9\u70b9\u7b49\u4fe1\u606f\n\n\u9996\u5148\u8bfb\u5165\u4e4b\u540e\uff0c\u6211\u4eec\u628a\u540c\u516c\u53f8\u7684\u7ebf\u8def\u653e\u5165$G$\u4e2d\uff0c\n\n\u4e4b\u540e\uff0c\u73b0\u5c06\u6bcf\u4e2a\u516c\u53f8\u7684\u7ad9\u70b9\u5408\u5e76\u5230\u4e00\u4e2a\u5e76\u67e5\u96c6\u91cc\u53bb\n\n\u4e4b\u540e\uff0c\u65b0\u5efa\u4e00\u4e2a\u56fe\uff08\u7c7b\u4f3c$bipartite$ $graph$\uff09,\u5de6\u8fb9\u662f\u7ad9\uff0c\u53f3\u8fb9\u662f\u516c\u53f8\uff08\u65e0\u5411\u8fb9\uff09\n\n\u62ff\u7b2c\u4e8c\u4e2a\u6837\u4f8b\u4e3e\u4f8b\uff1a\n\n~~\u6b64\u56fe\u6765\u81ea\u672c\u4eba\u535a\u5ba2~~\n\n![\u8fd9\u91cc\u5199\u56fe\u7247\u63cf\u8ff0](https://cdn.luogu.com.cn/upload/pic/44643.png)\n\n\n\u4e4b\u540e\u901a\u8fc7$BFS$\u6c42\u51fa$DP$\u6570\u7ec4\uff08\u8868\u793a\u4ece1\u5230\u8fbeN\u6700\u5c11\u7684\u4ef7\u503c\u6570\uff09\n\n\u6ce8\u610f\uff1a\n\n\u6211\u4eec\u53d1\u73b0\u5f53\u8981\u5728\u67d0\u516c\u53f8\u7684\u67d0\u6761\u7ebf\u4e0a\u4ece\u8d77\u70b9\u5230\u8fbe\u7ec8\u70b9\u65f6\uff0c\u8981\u5728\u56fe\u4e2d\u8dd1\u4e24\u6bb5\u8def\uff0c2 $yen$\n\u4e0d\u540c\u516c\u53f84\u77ed\u8def 4 $yen$\n\n\u4e8e\u662f\u7b54\u6848\u5c31\u662f$BFS$\u540e\u7684$DP[N]/2$\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std ;\nconst int N = 1234567;\nvector <pair<int,int> > G[N] ;\nvector <int> newg[N] ;\nqueue <int> q ;\nint f[N],son[N],id[N],dp[N] ;\nbool use[N] ;\nint n,m ;\ninline void init(int i){\n\tf[i]=i;son[i]=0;id[i]=-1;use[i]=false ;\n}\nint find(int x){\n\treturn (x==f[x])?x:f[x]=find(f[x]) ; \n}\ninline void merge(int x,int y){\n\tint X=find(x),Y=find(y) ;\n\tif (X==Y) return ;\n\tif (son[X]<son[Y]) f[X]=Y ;//\u907f\u514dWA?RE? \u5c0f\u6280\u5de7 \n\telse {\n\t\tf[Y]=X ;\n\t\tif (son[X]==son[Y]) son[X]++ ;\n\t}\n} \ninline int read(){\n\tchar c;int f=1 ;\n\twhile ((c=getchar())<'0' || c>'9') if (c=='-') f=-1 ;\n\tint res=c-'0' ;\n\twhile ((c=getchar())>='0' && c<='9') res=res*10+c-'0' ;\n\treturn res*f ; \n}\nint main(){\n\tn=read();m=read() ;\n\tfor (int i=1;i<=m;i++){\n\t\tint a,b,c ;\n\t\ta=read();b=read();c=read() ;\n\t\tG[c].push_back(make_pair(a,b)) ;\n\t}\n\tint cnt=n; \n\tfor (int i=1;i<=N;i++){\n\t\tif (G[i].empty()) continue ; //\u65e0\u8be5\u516c\u53f8 \n\t\tfor (int j=0;j<G[i].size();j++){ //\u521d\u59cb \n\t\t\tinit(G[i][j].first) ;\n\t\t\tinit(G[i][j].second) ;\n\t\t}\n\t\tfor (int j=0;j<G[i].size();j++) merge(G[i][j].first,G[i][j].second) ;\n\t\tfor (int j=0;j<G[i].size();j++){\n\t\t\tif (!use[G[i][j].first]){\n\t\t\t\tuse[G[i][j].first]=true ;\n\t\t\t\tint X=find(G[i][j].first) ;\n\t\t\t\tif (id[X]==-1) id[X]=++cnt ;\n\t\t\t\tnewg[G[i][j].first].push_back(id[X]) ;//\u8be5\u7ad9\u70b9\u4e0e\u516c\u53f8\u5efa\u65e0\u5411\u8fb9 \n\t\t\t\tnewg[id[X]].push_back(G[i][j].first) ;\n\t\t\t}\n\t\t\tif (!use[G[i][j].second]){ //\u540c\u6837\u7684\u5de5\u4f5c\u5728second\u4e0a\u518d\u505a\u4e00\u904d \n\t\t\t\tuse[G[i][j].second]=true ;\n\t\t\t\tint X=find(G[i][j].second) ;\n\t\t\t\tif (id[X]==-1) id[X]=++cnt ;\n\t\t\t\tnewg[G[i][j].second].push_back(id[X]) ;\n\t\t\t\tnewg[id[X]].push_back(G[i][j].second) ;\n\t\t\t}\n\t\t}\n \t}\n \tq.push(1) ;\n \tmemset(dp,-1,sizeof(dp)) ;\n \tdp[1]=0; //\u521d\u59cb\u57280\u53f7\u8282\u70b9\n\twhile(!q.empty()){ //BFS \n\t\tint v=q.front();q.pop() ;\n\t\tfor (int i=0;i<newg[v].size();i++){\n\t\t\tint to=newg[v][i] ;\n\t\t\tif (dp[to]==-1){ //\u8fd8\u6ca1\u8bbf\u95ee \n\t\t\t\tdp[to]=dp[v]+1 ;\n\t\t\t\tq.push(to) ;\n\t\t\t}\n\t\t}\n\t}\n\tif (dp[n]==-1) cout<<-1 ;\n\telse cout<<dp[n]/2 ;\n}\n```\n\n\u5f53\u7136\u4e5f\u6709\u4e0d\u7528\u5e76\u67e5\u96c6\u7684\u65b9\u6cd5\uff08BFS)\uff0c\n\n```cpp\n#include <bits/stdc++.h>\n \nusing namespace std;\n \nconst int N = 1234567;\n \nint dist[N];\nvector < pair <int, int> > g[N];\nvector <int> new_g[N], all[N];\nint was[N];\nint x[N];\nint ptr[N];\n \nint main() {\n  int n, m;\n  scanf(\"%d %d\", &n, &m);\n  for (int i = 0; i < m; i++) {\n    int foo, bar, qwe;\n    scanf(\"%d %d %d\", &foo, &bar, &qwe);\n    foo--; bar--;\n    g[foo].push_back(make_pair(qwe, bar));\n    g[bar].push_back(make_pair(qwe, foo));\n    all[qwe].push_back(foo);\n    all[qwe].push_back(bar);\n  }\n  for (int i = 0; i < n; i++) {\n    sort(g[i].begin(), g[i].end());\n    ptr[i] = 0;\n  }\n  for (int i = 0; i < n; i++) {\n    was[i] = -1;\n  }\n  int new_n = n;\n  for (int i = 0; i < N; i++) {\n    new_g[i].clear();\n  }\n  for (int color = 0; color < N; color++) {\n    if (all[color].empty()) {\n      continue;\n    }\n    for (int it = 0; it < (int) all[color].size(); it++) {\n      int v = all[color][it];\n      if (was[v] == color) {\n        continue;\n      }\n      int b = 0, e = 1;\n      x[0] = v;\n      was[v] = color;\n      while (b < e) {\n        while (ptr[x[b]] < (int) g[x[b]].size()) {\n          int c = g[x[b]][ptr[x[b]]].first;\n          if (c != color) {\n            break;\n          }\n          int u = g[x[b]][ptr[x[b]]].second;\n          if (was[u] != color) {\n            was[u] = color;\n            x[e] = u;\n            e++;\n          }\n          ptr[x[b]]++;\n        }\n        b++;\n      }\n      for (int i = 0; i < e; i++) {\n        new_g[x[i]].push_back(new_n);\n        new_g[new_n].push_back(x[i]);\n      }\n      new_n++;\n    }\n  }\n  for (int i = 0; i < new_n; i++) {\n    dist[i] = -2;\n  }\n  int b = 0, e = 1;\n  x[0] = 0;\n  dist[0] = 0;\n  while (b < e) {\n    for (int j = 0; j < (int) new_g[x[b]].size(); j++) {\n      int u = new_g[x[b]][j];\n      if (dist[u] == -2) {\n        dist[u] = dist[x[b]] + 1;\n        x[e] = u;\n        e++;\n      }\n    }\n    b++;\n  }\n  printf(\"%d\\n\", dist[n - 1] / 2);\n  return 0;\n}\n```\n\n\u8fd8\u6709\u901a\u8fc7dijkstra\u89e3\u51b3\u7684\u65b9\u6cd5\n```cpp\n#include <bits/stdc++.h>\nusing namespace std ;\nconst int N = 1e5 +10 ;\nconst int inf = 0x3f3f3f3f ;\nstruct st{int p,b,c;};\nbool operator < (st a,st b){return a.c>b.c;}\ninline int read(){\n\tchar c;int f=1 ;\n\twhile ((c=getchar())<'0' || c>'9') if (c=='-') f=-1 ;\n\tint res=c-'0' ;\n\twhile ((c=getchar())>='0' && c<='9') res=res*10+c-'0' ;\n\treturn res*f ; \n}\nmap<int ,vector<int> > E[N] ; \nmap<int,int > d[N] ; \nvector <int> G[N];\npriority_queue <st> q ;\nint n,m;\nint main(){\n\tn=read();m=read() ;\n\tfor (int i=1;i<=m;i++){\n\t\tint a,b,c ;\n\t\ta=read();b=read();c=read();a--;b-- ;\n\t\tE[a][c].push_back(b) ;E[b][c].push_back(a) ;\n\t\tG[a].push_back(c) ;G[b].push_back(c) ; \n\t}\n\td[0][0]=0;q.push({0,0,0}) ;\n\twhile(!q.empty()){ //\u4e00\u6ce2Dijkstra \n\t\tst p=q.top();q.pop() ;\n\t\tif (d[p.p][p.b]!=p.c){\n\t\t\tcontinue ;\n\t\t}\n\t\tif (d[p.p].find(0)==d[p.p].end() || d[p.p][0]>p.c){\n\t\t\td[p.p][0]=p.c ;\n\t\t\tq.push({p.p,0,p.c}) ;\n \t\t}\n \t\tif (p.b==0){\n \t\t\tfor (int i=0;i<G[p.p].size();i++){\n \t\t\t\tint v=G[p.p][i] ;\n \t\t\t\tif (d[p.p].find(v)==d[p.p].end() || d[p.p][v]>p.c+1){\n \t\t\t\t\td[p.p][v]=p.c+1 ;\n \t\t\t\t\tq.push({p.p,v,p.c+1}) ;\n\t\t\t\t }\n\t\t\t }\n\t\t\tcontinue ; \n\t\t}\n\t\tfor (int i=0;i<E[p.p][p.b].size();i++){\n\t\t\tint v=E[p.p][p.b][i] ;\n\t\t\tif (d[v].find(p.b)==d[v].end() || d[v][p.b]>p.c){\n\t\t\t\td[v][p.b]=p.c ;\n\t\t\t\tq.push({v,p.b,p.c}) ;\n\t\t\t}\n\t\t}\n\t}\n\tint ans=inf ;\n\tfor (map<int,int>::iterator p=d[n-1].begin();p!=d[n-1].end();p++) ans=min(ans,p->second) ;\n\tif (ans==inf) printf(\"-1\\n\") ;\n\telse printf(\"%d\\n\",ans) ;\n}\n```",
        "postTime": 1543199656,
        "uid": 54900,
        "name": "__Hacheylight__",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT2069 \u3010\u3059\u306c\u3051\u541b\u306e\u5730\u4e0b\u9244\u65c5\u884c / Snuke&#039;s Subway Trip\u3011"
    },
    {
        "content": "### Preface  \n\u8fd9\u7bc7\u9898\u89e3\u4f1a\u662f\u9898\u89e3\u533a\u552f\u4e00\u4e00\u79cd\u9b54\u6539 dij \u7684\u505a\u6cd5\u3002\u505a\u5b8c\u540e\u770b\u4e86\u9898\u89e3\u624d\u77e5\u9053\u6709\u5efa\u56fe\u7684\u505a\u6cd5\u3002  \n### Problem  \n\u7ed9\u4f60\u4e00\u4e2a\u65e0\u5411\u56fe\uff0c\u6bcf\u6761\u8fb9\u6709\u989c\u8272\uff0c\u4ece\u4e00\u4e2a\u989c\u8272\u7684\u8fb9\u8d70\u5230\u53e6\u5916\u4e00\u4e2a\u989c\u8272\u7684\u8fb9\u9700\u8981\u82b1\u8d39 1 \u4ee3\u4ef7\uff0c\u95ee\u4f60\u6700\u77ed\u8def\u3002  \n### Solution  \n\u6211\u4eec\u53d1\u73b0\uff0c\u6bcf\u4e2a\u70b9\u53ef\u4ee5\u6709\u82e5\u5e72\u72b6\u6001\uff0c\u5373\u4e0a\u4e00\u4e2a\u8d70\u5230\u7684\u8fb9\u7684\u989c\u8272\uff0c\u5f88\u663e\u7136\u4e00\u4e2a\u70b9\u6700\u591a\u6709 $n$ \u4e2a\u72b6\u6001\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u5168\u5c40\u7684\u603b\u72b6\u6001\u91cf\u5e94\u4e3a $m$ \u91cf\u7ea7\u7684\uff0c\u56e0\u4e3a\u4e00\u4e2a\u70b9\u7684\u72b6\u6001\u4ec5\u4ec5\u4e0e\u5176\u5165\u5ea6\u6570\u91cf\u6709\u5173\uff0c\u663e\u7136\u5168\u5c40\u5165\u5ea6\u6570\u5c31\u662f\u8fb9\u6570\uff0c\u7531\u4e8e\u662f\u65e0\u5411\u56fe\u8fd8\u8981\u4e58\u4e0a\u4e00\u4e2a\u4e8c\u7684\u5e38\u6570\u3002  \n\n\u90a3\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u4e00\u4e2a\u70b9\u62c6\u5206\u6210\u82e5\u5e72\u72b6\u6001\uff0c\u4fe1\u606f\u7528 vector \u7ef4\u62a4\u3002\u7136\u540e\u6765\u8dd1 dij\u3002\u4f46\u662f\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u4e00\u4e2a\u70b9\u6709\u82e5\u5e72\u4e2a\u72b6\u6001\uff0c\u8fd9\u4e9b\u72b6\u6001\u8fd8\u8981\u8f6c\u79fb\u5230\u4e0b\u4e00\u4e2a\u70b9\uff0c\u90a3\u6bcf\u4e2a\u72b6\u6001\u53c8\u4f1a\u8d21\u732e\u8fd9\u4e2a\u70b9\u51fa\u5ea6\u6570\u7684\u8f6c\u79fb\u590d\u6742\u5ea6\uff0c\u8fd9\u4e2a\u590d\u6742\u5ea6\u6211\u4eec\u53ef\u627f\u62c5\u4e0d\u8d77\u3002  \n\n\u4f46\u662f\u6211\u4eec\u53d1\u73b0\uff0c\u4e00\u6761\u8fb9\u6700\u591a\u4e3a\u7b54\u6848 +1\u3002\u90a3\u8fd9\u4e2a\u5c31\u5f88\u6709\u610f\u601d\u4e86\u3002\u6211\u4eec\u77e5\u9053\uff0c\u4e00\u4e2a\u70b9\u7684\u6240\u6709\u72b6\u6001\u4f1a\u5bf9\u51fa\u5ea6\u4e2d\u4e0e\u5176\u72b6\u6001\u76f8\u7b49\u7684\u8fb9\u7ed9\u4e88\u4f18\u60e0\uff0c\u4e3a 0 \u8d21\u732e\uff0c\u5176\u5b83\u90e8\u5206\u90fd\u662f 1 \u8d21\u732e\u3002  \n\n\u6839\u636e dij \u5806\u4f18\u5316\u7684\u6027\u8d28\uff0c\u4e00\u4e2a\u70b9\u4e2d\u6700\u5148\u5230\u7684\u72b6\u6001\u662f\u5176\u6240\u6709\u72b6\u6001\u4e2d\u7b54\u6848\u6700\u5c0f\u7684\u3002  \n\u90a3\u4e48\u8fd9\u4e2a\u72b6\u6001\u66b4\u529b\u8f6c\u79fb\u5230\u4e0b\u4e00\u4e2a\u70b9\u540e\uff0c\u6240\u6709\u8be5\u70b9\u5176\u5b83\u72b6\u6001\u8f6c\u79fb\u5230\u4e0b\u4e00\u4e2a\u70b9\u5e76\u4e14\u4e0d\u5e26\u4f18\u60e0\u7684\u60c5\u51b5\u90fd\u4e0d\u4f1a\u6bd4\u73b0\u5728\u7684\u8f6c\u79fb\u66f4\u4f18\u3002\u4e8e\u662f\u6211\u4eec\u66b4\u529b\u8f6c\u79fb\u7b2c\u4e00\u4e2a\u5230\u8fbe\u7684\u72b6\u6001\uff0c\u540e\u9762\u7684\u72b6\u6001\u4ec5\u4ec5\u8f6c\u79fb\u4e0e\u5176\u989c\u8272\u76f8\u7b49\u7684\u51fa\u8fb9\u3002\u663e\u7136\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f\u5f88\u4f18\u79c0\u7684\uff0c\u56e0\u4e3a\u4e00\u4e2a\u70b9\u6240\u6709\u7684\u51fa\u8fb9\u90fd\u53ea\u4f1a\u88ab\u8f6c\u79fb\u7ebf\u6027\u6b21\u6570\u3002 \u5f53\u7136\uff0c\u8981\u6ce8\u610f\u72b6\u6001\u53bb\u91cd\uff0c\u5426\u5219\u590d\u6742\u5ea6\u5c31\u4e0d\u5bf9\u4e86\u3002 \n\n\u4e0a\u8ff0\u7684\u53bb\u91cd\u548c\u627e\u76f8\u540c\u989c\u8272\u51fa\u8fb9\u7684\u64cd\u4f5c\u90fd\u53ef\u4ee5\u901a\u8fc7\u5148\u5c06\u8fb9\u6392\u5e8f\u540e\u4e00\u4e2a\u4e2a\u52a0\u6765\u8fdb\u884c\u3002  \n\ncode\uff1a  \n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=6e5+10;\nstruct e{int u,v,w;}E[N];\nbool cmp(e a,e b){return a.w<b.w;}\nint n,m;int cnt;int head[N];\nstruct EDGE{int v,w,next,id;}edge[N];\nvector <int> col[N];int lst[N];\nvector <int> dis[N];int MIN[N];\nvector <int> vis[N];\nvector <int> p[N];int pin[N];\nvoid add(int u,int v,int w){\n\tedge[++cnt].next=head[u];\n\tif(edge[head[u]].w!=w)p[u].push_back(head[u]);\n\tedge[cnt].v=v;edge[cnt].w=w;\n\tif(col[v].size()==0)\n\t\tcol[v].push_back(w),dis[v].push_back(1e9),vis[v].push_back(0);\n\telse if(col[v][col[v].size()-1]!=w)\n\t\tcol[v].push_back(w),dis[v].push_back(1e9),vis[v].push_back(0);\n\thead[u]=cnt;\n\tedge[cnt].id=col[v].size()-1;\n}\nstruct node{\n\tint u,id,dis;\n\tbool operator <(const node &a)const{\n\t\treturn dis>a.dis;\n\t}\n};\npriority_queue <node> Q;\nvoid dijkstra(){\n\tdis[1].push_back(1);vis[1].push_back(0);col[1].push_back(-1);\n\tfor(int i=1;i<=n;i++)MIN[i]=1e9;MIN[1]=1;\n\tnode st=(node){1,col[1].size()-1,1};Q.push(st);\n\twhile(!Q.empty()){\n\t\tnode now=Q.top();Q.pop();\n\t\tint u=now.u;int id=now.id;\n\t\t//cout<<dis[u][id]<<endl;\n\t\tif(vis[u][id])continue;\n\t\tvis[u][id]=1;lst[u]++;\n\t\tif(dis[u][id]>MIN[u])continue;\n\t\tMIN[u]=min(MIN[u],dis[u][id]);\n\t\tif(head[u]==0)continue;\n\t\tif(lst[u]==1){\n\t\t\tfor(int i=head[u];i;i=edge[i].next){\n\t\t\t\tint v=edge[i].v;int w=edge[i].w;\n\t\t\t\tif(vis[v][edge[i].id])continue;\n\t\t\t\tif(dis[v][edge[i].id]>dis[u][id]+(w!=col[u][id]&&col[u][id]!=-1)){\n\t\t\t\t\tdis[v][edge[i].id]=dis[u][id]+(w!=col[u][id]&&col[u][id]!=-1);\n\t\t\t\t\tif(MIN[v]<dis[v][edge[i].id])continue;\n\t\t\t\t\tMIN[v]=min(MIN[v],dis[v][edge[i].id]);\n\t\t\t\t\tQ.push((node){v,edge[i].id,dis[v][edge[i].id]});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint l=0;int r=p[u].size()-1;\n\t\twhile(l<r){\n\t\t\tint mid=(l+r)/2;\n\t\t\tif(edge[p[u][mid]].w>=col[u][id])\n\t\t\t\tr=mid;\n\t\t\telse l=mid+1;\n\t\t}\n\t\tif(edge[p[u][l]].w!=col[u][id])continue;\n\t\tfor(int i=p[u][l];edge[i].w==col[u][id];i=edge[i].next){\n\t\t\tint v=edge[i].v;if(vis[v][edge[i].id])continue;\n\t\t\tif(dis[v][edge[i].id]>dis[u][id]){\n\t\t\t\tdis[v][edge[i].id]=dis[u][id];\n\t\t\t\tif(MIN[v]<dis[v][edge[i].id])continue;\n\t\t\t\tMIN[v]=min(MIN[v],dis[v][edge[i].id]);\n\t\t\t\tQ.push((node){v,edge[i].id,dis[v][edge[i].id]});\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;i++){\n\t\tcin>>E[i].u>>E[i].v>>E[i].w;\n\t}sort(E+1,E+1+m,cmp);\n\tfor(int i=1;i<=m;i++){\n\t\tadd(E[i].u,E[i].v,E[i].w);\n\t\tadd(E[i].v,E[i].u,E[i].w);\n\t}\n\tfor(int i=1;i<=n;i++)p[i].push_back(head[i]);\n\tdijkstra();int ans=1e9;\n\tfor(int i=0;i<dis[n].size();i++){\n\t\tans=min(ans,dis[n][i]);\n\t}\n\tif(ans>m)cout<<-1;\n\telse cout<<ans;\n\treturn 0;\n}\n```\n",
        "postTime": 1655866159,
        "uid": 213173,
        "name": "\u5c0f\u6728\u866b",
        "ccfLevel": 4,
        "title": "\u3010Atcoder\u601d\u7ef4\u8bad\u7ec3\u3011[ARC061C] \u3059\u306c\u3051\u541b\u306e\u5730\u4e0b\u9244\u65c5\u884c / Snuke's Subway Trip"
    },
    {
        "content": "\u9996\u5148\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u516c\u53f8\u5305\u7ba1\u7684\u7ebf\u8def\u53ef\u4ee5\u7ec4\u6210\u4e00\u4e9b\u8fde\u901a\u5757\uff0c\u4f46\u662f\u8fd9\u4e9b\u4e0d\u540c\u8fde\u901a\u5757\u4e4b\u95f4\u5b8c\u5168\u53ef\u4ee5\u8003\u8651\u6210\u4e0d\u540c\u516c\u53f8\u3002\u6240\u4ee5\u53ef\u4ee5\u5316\u7b80\u6210\u6bcf\u4e2a\u516c\u53f8\u53ea\u4f1a\u5305\u7ba1\u5f62\u6210\u4e00\u4e2a\u8fde\u901a\u5757\u7684\u5b50\u56fe\uff0c\u5373\u6bcf\u4e2a\u516c\u53f8\u5305\u7ba1\u7684\u70b9\u53ef\u4ee5\u4e92\u901a\u3002\u8fd9\u91cc\u4e00\u5b9a\u9700\u8981\u6ce8\u610f\u590d\u6742\u5ea6\u4e0d\u80fd\u5047\uff0c\u5fc5\u987b\u628a\u6240\u6709\u516c\u53f8\u62c6\u5f00\u6765\u8003\u8651\uff0c\u5bf9\u6bcf\u4e2a\u516c\u53f8\u5185\u90e8\u8fdb\u884c\u4e00\u4e2a\u518d\u62c6\u5206\u3002\u8fd9\u6837\u624d\u80fd\u4fdd\u8bc1\u6bcf\u4e2a\u70b9\u88ab\u8bbf\u95ee $O(\\deg )$ \u6b21\uff0c\u5373\u603b\u5171\uff08\u5982\u679c\u7528\u5e76\u67e5\u96c6\u7684\u8bdd\uff09\u590d\u6742\u5ea6\u4e3a $O(m\\alpha)$\u3002\uff08\u6211\u4ee3\u7801\u5b9e\u73b0\u4e2d\u4e3a\u4e86\u7b80\u4fbf\u505a\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u53bb\u91cd\u591a\u4e86\u4e2a $\\log$\uff0c\u5b9e\u9645\u4e0a\u53ef\u4ee5\u4e0d\u9700\u8981\uff0c\u800c\u4e14\u8fd9\u4e2a\u5e76\u67e5\u96c6\u4e5f\u662f\u53ef\u4ee5\u7528\u7ebf\u6027\u7684 dfs \u89e3\u51b3\u6389\u7684\uff0c\u4e0d\u8fc7\u4e0d\u5f71\u54cd\u5927\u5c40\uff09\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u6211\u4eec\u4e58\u8f66\u76f8\u5f53\u4e8e\u4e0d\u65ad\u5730\u6362\u4e58\uff0c\u6bcf\u6b21\u6362\u4e58\u6c38\u8fdc\u662f $1$ \u5143\u3002\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u5efa\u7acb\u4e00\u4e9b\u8f85\u52a9\u70b9\uff0c\u6bcf\u4e2a\u70b9\u4ee3\u8868\u4e00\u4e2a\u516c\u53f8\uff08\u7684\u8fde\u901a\u5757\uff09\uff0c\u7136\u540e\u6240\u6709\u5176\u8fde\u901a\u7684\u70b9\u4ee5 $\\frac{1}{2}$ \u7684\u8fb9\u6743\u4e0e\u5b83\u76f8\u8fde\uff0c\u7136\u540e\u8dd1\u4e00\u4e2a\u6700\u77ed\u8def\u5373\u53ef\uff08\u8fd9\u6837\u6bcf\u6b21\u51fa\u5165\u90fd\u662f $1/2$\uff0c\u6240\u4ee5\u8fdb\u884c\u4e00\u6b21\u6362\u4e58\u7684\u4ee3\u4ef7\u5c31\u662f $1$\uff09\u3002\n\n\u6bcf\u4e2a\u70b9\u8fde\u7684\u989d\u5916\u8fb9\u6700\u591a\u4e3a $\\deg(u)$\uff0c\u7136\u540e\u539f\u56fe\u4e0a\u7684\u539f\u8fb9\u662f\u53ef\u4ee5\u53bb\u6389\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u65b0\u56fe\u603b\u8fb9\u6570 $\\le \\sum \\deg(u)=2m$\uff0c\u603b\u70b9\u6570 $\\le m+n$\u3002\u8fd8\u6709\u5b9e\u9645\u64cd\u4f5c\u7684\u65f6\u5019\u7531\u4e8e\u8fb9\u6743\u5168\u662f $1/2$ \u6240\u4ee5\u5148\u5f53 $1$ \u6765\u505a\u6700\u540e\u5168\u90e8\u9664\u4ee5 $2$ \u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1ahttps://atcoder.jp/contests/arc061/submissions/28443592\n\np.s. \u611f\u8c22\u5154\u5154\u5bf9\u8fd9\u7bc7\u9898\u89e3\u7684\u7ec6\u81f4\u7ea0\u9519\u548c\u6cbb\u597d\u4e86\u6211\u7684\u773c\u775b\u3002",
        "postTime": 1641783445,
        "uid": 180652,
        "name": "_lgswdn",
        "ccfLevel": 0,
        "title": "ARC061C Snuke's Subway Trip"
    },
    {
        "content": "[ATCoder\u9898\u76ee\u4f20\u9001\u95e8](https://atcoder.jp/contests/arc061/tasks/arc061_c)\n\n[\u6d1b\u8c37\u4e2d\u6587\u7ffb\u8bd1\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/AT2069)\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/zzctommy/p/14134800.html)\n\n\u8fd9\u9898\u597d\u50cf\u6709\u597d\u591a\u79cd\u5efa\u56fe\u65b9\u6cd5\u3002\n\n\u4e00\u4e2a\u5957\u8def\u7684\u5efa\u56fe\u65b9\u6cd5\uff0c\u505a\u8fc7[\u8fd9\u9898](https://www.luogu.com.cn/problem/P6822)\u5c31\u5f88\u5bb9\u6613\u60f3\u5230\u3002\n\n\u611f\u89c9\u8fd9\u79cd\u9898\u89e3\u4e0d\u662f\u5f88\u597d\u5199\uff0c\u90a3\u5c31\u76f4\u63a5\u5199\u600e\u4e48\u5efa\u56fe\u7136\u540e\u8bb2\u6bcf\u4e00\u79cd\u8fb9\u7684\u610f\u4e49\u5427\u3002\n\n\u3010\u5efa\u70b9\u3011\u628a\u8fb9\u5f53\u6210\u70b9\uff0c\u6b63\u5411\u8fb9\u548c\u53cd\u5411\u8fb9\u5206\u522b\u5efa\u70b9\uff0c\u518d\u5efa\u7acb\u8d85\u7ea7\u6e90\u70b9 $S$ \uff0c\u8d85\u7ea7\u6c47\u70b9 $T$\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9 $u$ \u6309\u7167 $v$ \u989c\u8272\u7684\u989c\u8272\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff08\u6211\u4e60\u60ef\u628a\u8fb9\u8bbe\u6210 $u\\to v$\uff09\u3002\u8fd9\u6837\u6240\u6709\u8d77\u70b9\u4e3a $u$ \uff0c\u7ec8\u70b9\u989c\u8272\u76f8\u540c\u7684\u70b9\u4f1a\u76f8\u90bb\u3002\n\n\u3010\u8fb9\u4e00\u3011\u5982\u679c\u8fd9\u6761\u8fb9\u7684\u7ec8\u70b9\u662f $n$ \uff0c\u90a3\u4e48\u62c9\u8fb9 $(id,T,0)$ \uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u76f4\u63a5\u8fde\u5230 $n$\u3002\n\n\u3010\u8fb9\u4e8c\u3011\u5982\u679c\u8fd9\u6761\u8fb9\u7684\u8d77\u70b9\u662f $1$ \uff0c\u90a3\u4e48\u62c9\u8fb9 $(S,id,1)$\uff0c\u56e0\u4e3a\u5b83\u4ece $S$ \u51fa\u53d1\u5c31\u5df2\u7ecf\u76f8\u5f53\u4e8e\u201c\u6362\u201d\u4e86\u4e00\u6b21\u989c\u8272\u3002\n\n\u3010\u8fb9\u4e09\u3011\u5bf9\u4e8e $u$ \u76f8\u540c\u7684\u4e24\u4e2a**\u76f8\u90bb\u7684**\u51fa\u8fb9\u7ec8\u70b9 $v_1,v_2$ \uff08\u8fb9\u7684\u7f16\u53f7\u4e3a $id_1,id_2$\uff09\uff0c\u5982\u679c\u989c\u8272\u76f8\u540c\uff0c\u90a3\u4e48\u62c9\u8fb9 $(id_1,id_2,0),(id_2,id_1,0)$ \uff0c\u56e0\u4e3a\u8fd9\u4e24\u6761\u8fb9\u53ef\u4ee5\u514d\u8d39\u8d70\u3002\u3010\u8fb9\u4e94\u3011\u4f1a\u8bb2\u5982\u679c\u4e0d\u540c\u600e\u4e48\u62c9\u8fb9\u3002\n\n\u3010\u8fb9\u56db\u3011\u6b63\u5411\u8fb9\u5411\u53cd\u5411\u8fb9\u62c9\u8fb9\uff0c\u56e0\u4e3a\u8d70\u8fc7\u53bb\u518d\u8d70\u56de\u6765\u4e5f\u53ef\u4ee5\u3002\n\n\u6211\u611f\u89c9\u5269\u4e0b\u8fd9\u79cd\u8fb9\u662f\u8fd9\u79cd\u5efa\u56fe\u65b9\u6cd5\u552f\u4e00\u7684\u96be\u70b9\u3002\n\n\u3010\u8fb9\u4e94\u3011\u6211\u4eec\u73b0\u5728\u8fd8\u6ca1\u6709\u5904\u7406\u989c\u8272\u8f6c\u6362\u7684\u8fb9\u3002\u8fd9\u4e2a\u4e1c\u897f\u770b\u7740\u8d3c\u96be\u641e\uff0c\u4e0d\u540c\u989c\u8272\u66b4\u529b\u62c9\u8fb9\u7684\u8bdd\u590d\u6742\u5ea6\u5c31\u53c8\u53ef\u4ee5\u88ab\u5361\u6210\u5e73\u65b9\u4e86\u3002\n\n\u6362\u4e2a\u601d\u8def\uff0c\u65b0\u5efa\u4e00\u4e2a\u865a\u70b9\uff0c\u5bf9\u4e8e $u$ \u51fa\u53d1\u7684**\u6bcf\u79cd**\u989c\u8272\uff0c\u968f\u4fbf\u53d6\u4e00\u4e2a\u8fb9\u5bf9\u5e94\u7684\u70b9\u5f80\u865a\u70b9\u8fde\u957f\u5ea6\u4e3a $1$ \u7684\u8fb9\uff0c\u8fd9\u4e2a\u865a\u70b9\u5f80\u90a3\u4e2a\u70b9\u8fde\u957f\u5ea6\u4e3a $0$ \u7684\u8fb9\u3002\n\n\u5f80\u865a\u70b9\u8d70\u5c31\u610f\u5473\u7740\u8981\u6362\u989c\u8272\uff0c\u5426\u5219\u6839\u672c\u4e0d\u4f1a\u8d70\u957f\u5ea6\u4e3a $1$ \u7684\u8fb9\u3002\u800c\u6bcf\u4e00\u4e2a\u989c\u8272\u5185\u90e8\u662f\u53ef\u4ee5\u968f\u4fbf\u8d70\u7684\uff0c\u6240\u4ee5\u8fd9\u79cd\u5efa\u56fe\u65b9\u6cd5\u662f\u5bf9\u7684\u3002\n\n\u603b\u70b9\u6570\u4e3a $2m+n+2$ \uff0c\u6b63\u5411\u8fb9\u548c\u53cd\u5411\u8fb9\u603b\u5171 $2m$ \u4e2a\uff0c\u52a0\u4e0a $n$ \u4e2a\u865a\u70b9\uff0c\u518d\u52a0\u4e0a\u8d85\u6e90\u8d85\u6c47\uff0c\u4e0d\u8981\u5f00\u5c0f\u3002\u8fd8\u6709\u989c\u8272\u503c\u57df\u4e0a\u9650\u662f $10^6$ \uff0c\u4e0d\u8981\u5f00\u5c0f\u4e86\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u8fb9\u6743\u53ea\u6709 $0$ \u548c $1$ \uff0c\u76f4\u63a5bfs\u5c31\u53ef\u4ee5 $O(n)$ \uff0c\u6211\u5077\u61d2\u5199\u4e86dij\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define fi first\n#define se second\n#define mkp(x,y) make_pair(x,y)\n#define pb(x) push_back(x)\n#define sz(v) (int)v.size()\ntypedef long long LL;\ntypedef double db;\ntemplate<class T>bool ckmax(T&x,T y){return x<y?x=y,1:0;}\ntemplate<class T>bool ckmin(T&x,T y){return x>y?x=y,1:0;}\n#define rep(i,x,y) for(int i=x,i##end=y;i<=i##end;++i)\n#define per(i,x,y) for(int i=x,i##end=y;i>=i##end;--i)\ninline int read(){\n    int x=0,f=1;char ch=getchar();\n    while(!isdigit(ch)){if(ch=='-')f=0;ch=getchar();}\n    while(isdigit(ch))x=x*10+ch-'0',ch=getchar();\n    return f?x:-x;\n}\nconst int N = 500005;\nconst int C = 1000005;\nconst int inf=0x3f3f3f3f;\nint n, m, S, T, tot;\nint dis[N];\nbool vis[N];\nstruct node{\n\tint w, v, id;\n\tnode(){w = v = id = 0;}\n\tnode(int w_, int v_, int id_) {w = w_, v = v_, id = id_;}\n\tinline bool operator < (const node&t) const {return w < t.w;}\n};\nvector <node> E[N];\nvector <pair<int, int> > e[N];\nvoid Dij(){\n\tpriority_queue <pair<int,int> > pq;\n\tmemset(dis, 0x3f, sizeof(dis));\n\tpq.push(mkp(dis[S]=0, S));\n\twhile (!pq.empty()){\n\t\tint u = pq.top().se; pq.pop();\n\t\tif (vis[u]) continue;\n\t\tvis[u] = 1;\n\t\tfor (int i = 0, up = sz(e[u]); i < up; ++ i){\n\t\t\tint v = e[u][i].se;\n\t\t\tif (ckmin(dis[v] , dis[u] + e[u][i].fi))\n\t\t\t\tif(!vis[v]) pq.push(mkp(-dis[v], v));\n\t\t}\n\t}\n}\nsigned main() {\n\tn = read(), m = read(), S = m * 2 + 2, T = tot = S + 1;\n\trep(i, 1, m) {\n\t\tint x = read(), y = read(), z = read();\n\t\tE[x].pb(node(z, y, i << 1)),E[y].pb(node(z, x, i << 1 | 1));\n\t}\n\trep(i, 1, n){\n\t\tstatic int tag[C];\n\t\tsort(E[i].begin(), E[i].end()), ++tot;\n\t\tfor (int j = 0, up = sz(E[i]); j < up; ++ j){\n\t\t\tnode now = E[i][j];\n\t\t\tif(tag[now.w]!=i){\n\t\t\t\ttag[now.w]=i;\n\t\t\t\te[now.id].pb(mkp(1, tot));\n\t\t\t\te[tot].pb(mkp(0, now.id));\n\t\t\t}\n\t\t\te[now.id].pb(mkp(0,now.id ^ 1));\n\t\t\tif (i == 1) e[S].pb(mkp(1, now.id));\n\t\t\tif (now.v == n) e[now.id].pb(mkp(0, T));\n\t\t\tif (j && now.w == E[i][j-1].w) e[E[i][j-1].id].pb(mkp(0, now.id)), e[now.id].pb(mkp(0, E[i][j-1].id));\n\t\t}\n\t}\n\tDij(), printf(\"%d\\n\", dis[T] == inf ? -1 : dis[T]);\n\treturn 0;\n}\n\n``` ",
        "postTime": 1607942235,
        "uid": 123384,
        "name": "tommy0221",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT2069 \u3010[ARC061C] \u3059\u306c\u3051\u541b\u306e\u5730\u4e0b\u9244\u65c5\u884c / Snuke's Subway Trip\u3011"
    },
    {
        "content": "\u6700\u77ed\u8def\u53d8\u5f0f\u3002\n\n\u8fd9\u9898\u7279\u6b8a\u4e4b\u5904\u5728\u4e8e\uff0c\u82e5\u7ecf\u8fc7\u67d0\u4e2a\u70b9\u7684\u4e0a\u4e00\u6761\u8fb9\u548c\u5c06\u8981\u8d70\u7684\u4e0b\u4e00\u6761\u8fb9\u7684\u989c\u8272\u76f8\u540c\uff0c\u90a3\u4e48\u4e0b\u4e00\u6761\u8fb9\u5c06\u4f1a\u514d\u8d39\u3002\n\n\u8003\u8651\u5efa\u865a\u70b9\u3002\u5bf9\u4e8e\u76f8\u90bb\u70b9 $(u,v)$\uff0c\u5c06\u4e00\u4e2a\u865a\u70b9 $w$ \u63d2\u8fdb\u5b83\u4eec\u4e2d\u95f4\uff0c\u4ee4 $(u,w),(w,v)$ \u8fb9\u6743\u4e3a $0.5$\u3002\u5e76\u4e14\u7ed9\u8fd9\u4e2a\u865a\u70b9\u989c\u8272\u3002\n\n\u7136\u540e\u8003\u8651\u600e\u4e48\u5904\u7406\u514d\u8d39\u7684\u60c5\u51b5\u3002\u5bf9\u4e8e\u4e00\u4e2a\u771f\u5b9e\u70b9\uff0c\u76f8\u90bb\u7684\u5fc5\u5b9a\u90fd\u662f\u865a\u70b9\uff0c\u90a3\u4e48\u5c06\u989c\u8272\u76f8\u540c\u7684\u865a\u70b9\u90fd\u8fde\u63a5\u8d77\u6765\uff0c\u8fb9\u6743\u4e3a $0$\uff0c\u4f7f\u5176\u76f8\u4e92\u53ef\u5230\u8fbe\u3002\u8fd9\u6837\u5904\u7406\u4e4b\u540e\uff0c\u5c31\u80fd\u8df3\u8fc7\u5230\u8fd9\u4e2a\u771f\u5b9e\u70b9\u7684\u4e24\u6761\u8fb9\u4e86\uff0c\u5373\u8282\u7701\u4e86 $1$ \u82b1\u8d39\u3002\n\n\u56fe\u89e3\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/kgssmmqw.png)\n\n\u7136\u540e\u8dd1 Dijkstra \u5c31\u505a\u5b8c\u4e86\u3002\n\n\u590d\u6742\u5ea6\u8bc1\u660e\uff1a\n\n\u5bf9\u4e8e\u6bcf\u6761\u8fb9\u53ea\u5f00\u4e00\u4e2a\u865a\u70b9\uff0c\u4e00\u5171 $n+m$ \u4e2a\u8282\u70b9\u3002\u865a\u70b9\u4e4b\u95f4\u7684\u8fde\u8fb9\u6700\u574f\u60c5\u51b5\u4e0b\u662f\u83ca\u82b1\u56fe\u4e14\u6240\u6709\u8fb9\u989c\u8272\u76f8\u540c\uff0c\u6700\u591a $m-1$ \u6761\u3002\n\n```cpp\nint n,extra,m;\nstruct edge{int to,val,col,nxt;}e[N];\nint head[N],cnt_e;\nint last[N],del[N];\nvoid add(int u,int v,int val,int col)\n{\n\te[++cnt_e]=(edge){v,val,col,head[u]};\n\thead[u]=cnt_e;\n}\nstruct dataX\n{\n\tint p,dis;\n\tfriend bool operator<(dataX A,dataX B)\n\t{\n\t\treturn A.dis>B.dis;\n\t}\n};\npriority_queue<dataX> q; \nint dis[N],vis[N];\nvoid dijkstra()\n{\n\tmemset(dis,125,sizeof(dis));\n\tq.push((dataX){1,1});\n\tdis[1]=0;\n\twhile(!q.empty())\n\t{\n\t\tdataX h=q.top();\n\t\tq.pop();\n\t\tif(vis[h.p]) continue;\n\t\tvis[h.p]=1;\n\t\tfor(int i=head[h.p];i;i=e[i].nxt)\n\t\t{\n\t\t\tint to=e[i].to;\n\t\t\tif(dis[to]>e[i].val+dis[h.p])\n\t\t\t{\n\t\t\t\tdis[to]=e[i].val+dis[h.p];\n\t\t\t\tq.push((dataX){to,dis[to]});\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tcin>>n>>m;\n\textra=n;\n\tfor(int i=1,u,v,c;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&u,&v,&c);\n\t\tadd(u,++extra,1,c),add(extra,v,1,0);\n\t\tadd(v,extra,1,c),add(extra,u,1,0); \n\t} \n\tint cnt_del;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcnt_del=0;\n\t\tfor(int j=head[i];j;j=e[j].nxt)\n\t\t{\n\t\t\tint col=e[j].col;\n\t\t\tif(last[col]) add(e[j].to,last[col],0,col),add(last[col],e[j].to,0,col);\n\t\t\telse del[++cnt_del]=col;\n\t\t\tlast[col]=e[j].to;\n\t\t}\n\t\tfor(int j=1;j<=cnt_del;j++)\n\t\tlast[del[j]]=0;\n\t}\n\tdijkstra();\n\tif(dis[n]==dis[0]) cout<<-1;\n\telse cout<<dis[n]/2;\n\treturn 0;\n}\n```\n",
        "postTime": 1665542088,
        "uid": 227659,
        "name": "SMZX_LRJ",
        "ccfLevel": 0,
        "title": "AT2069 \u9898\u89e3"
    },
    {
        "content": "AT2069 [ARC061C] \u3059\u306c\u3051\u541b\u306e\u5730\u4e0b\u9244\u65c5\u884c / Snuke's Subway Trip \u9898\u89e3\u3002\n\n\u57fa\u672c\u601d\u8def\u2014\u2014\u8fb9\u4e0a\u5efa\u70b9\uff0c\u4f18\u5316\u5efa\u56fe\u3002\n\n\u8003\u8651\u8fd9\u6837\u8fde\u8fb9\u3002\n\n$(x_i,bel(E_i)) \\leftrightarrow E_i \\leftrightarrow (y_i,bel(E_i))$\uff0c\u5168\u90e8\u662f $0$\u3002\n\n$\\forall bel,(x,bel)$ \u4e4b\u95f4\u524d\u540e\u7f00\u8fde\u8fb9\uff08\u5176\u5b9e\u53ef\u4ee5\u76f4\u63a5\u8fde\u4e0a\u540c\u4e00\u865a\u70b9\uff0c\u56e0\u4e3a\u4e0d\u4f18\uff09\uff0c\u8868\u73b0\u51fa $1$ \u8d21\u732e\u3002\n\n\u7279\u5224\u8d77\u70b9\u7ec8\u70b9\u3002$O(n\\log)$\u3002\u5b9e\u73b0\u53ef\u80fd\u7a0d\u590d\u6742\u3002\n\n---\n\n\u8003\u8651\u66f4\u7b80\u5355\u7684\u5199\u6cd5\uff0c\u9690\u5f0f\u5efa\u56fe\u3002\n\n\u4f1a\u53d1\u73b0\u5982\u679c\u76f4\u63a5\u505a dij\uff0c\u95ee\u9898\u5728\u4e8e\u6240\u6709\u7684 $(x,fr)$ \u90fd\u4f1a\u66f4\u65b0\u4e00\u904d\u6240\u6709\u51fa\u8fb9\u3002\n\n\u8fd9\u662f\u4e0d\u4f18\u7684\uff0c\u56e0\u4e3a\u9664\u4e86\u7b2c\u4e00\u4e2a\uff0c\u5176\u4ed6\u7684 $(x,fr)$ \u6700\u591a\u66f4\u65b0\u540c $fr$ \u7684\u70b9\u3002\n\n\u4f18\u5316\u5230 $O(n\\log)$\uff0c\u5982\u679c\u8ba4\u4e3a $n$\u3001$m$ \u540c\u9636\u7684\u8bdd\u3002\n\n```cpp\nvoid m_dij() {\n\tpriority_queue<info>q;q.push((info){d[1][-1]=0,1,-1});\n\twhile(!q.empty()) {\n\t\tint x=q.top().y,fr=q.top().z;q.pop();\n\t\tif(x==n) cout<<d[x][fr]<<'\\n',exit(0);\n\t\tif(v[x][fr]) continue;v[x][fr]=1;\n\t\tfor(int y:mp[x][fr])\n\t\t\tif(!d[y].count(fr)||d[y][fr]>d[x][fr])\n\t\t\t\t\tq.push((info){d[y][fr]=d[x][fr],y,fr});\n\t\tmp[x][fr].clear();\n\t\tif(!un[x]) for(int i=h[x];i;i=a[i].next)\n\t\t\tif(!d[a[i].to].count(a[i].fr)||d[a[i].to][a[i].fr]>d[x][fr]+1)\n\t\t\t\tq.push((info){d[a[i].to][a[i].fr]=d[x][fr]+1,a[i].to,a[i].fr});\n\t\tun[x]=1;\n\t}cout<<-1<<'\\n';\n}\n```",
        "postTime": 1659947081,
        "uid": 106182,
        "name": "KaisuoShutong",
        "ccfLevel": 0,
        "title": "\u6211\u613f\u4e3a\u4f60\u7a7f\u4e0a\u6c38\u6052\u7684\u767d\u8272\u5a5a\u7eb1"
    },
    {
        "content": "\u8bdd\u8bf4\u8fd9\u9053\u9898\u8bc4\u7d2b\u662f\u4e0d\u662f\u6709\u4e00\u70b9\u9ad8\u4e86\u554a\u2026\u2026\n\n\u6309\u7167\u6211\u7684\u76f4\u89c9\u6765\u770b\uff0c\u8fd9\u4e00\u9053\u9898\u5e94\u8be5\u662f\u84dd\u7684\u6c34\u5e73\uff0c\u4f46\u662f\u505a\u5b8c\u4e4b\u540e\u53d1\u73b0\uff0c\u786e\u5b9e\u53ea\u6709\u84dd\u7684\u6c34\u5e73\u3002\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u9898\u76ee\u4e2d\u6709\u4e00\u4e2a $c_i$ \u516c\u53f8\u62e5\u6709\u7b2c $i$ \u53f7\u5730\u94c1\u7ebf\u7684\u6761\u4ef6\uff0c\u8fd9\u4e2a $c_i$ \u516b\u4e5d\u4e0d\u79bb\u5341\u90fd\u4f1a\u51fa\u73b0\u4e0d\u540c\u7684\uff0c\u6240\u4ee5\u5982\u679c\u76f8\u4e92\u8f6c\u6362\u5230\u4e0d\u540c\u516c\u53f8\u62e5\u6709\u7684\u5730\u94c1\u7ebf\uff0c\u90a3\u4e48\u6700\u77ed\u8def\u4e5f\u662f\u53c2\u5dee\u4e0d\u9f50\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u4e0d\u96be\u60f3\u5230\u62c6\u70b9\u4e86\uff08\u5206\u5c42\u56fe\uff09\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5206\u6210\u4e24\u5c42\u3002\u5bf9\u4e8e\u540c\u4e00\u5bb6\u516c\u53f8\u7684\u5730\u94c1\u7ebf\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5176\u6784\u6210\u7684\u56fe\u4e2d\u968f\u4fbf\u8d70\uff0c\u6ca1\u6709\u4efb\u4f55\u5f71\u54cd\uff0c\u5b83\u7684\u8fb9\u6743\u4e3a $0$\uff1b\u5bf9\u4e8e\u4e0d\u540c\u7684\u516c\u53f8\uff0c\u6211\u4eec\u9700\u8981\u82b1\u8d39 $1$\uff0c\u5373\u8fb9\u6743\u4e3a $1$\u3002\u8fd9\u6837\u975e\u5e38\u597d\u7406\u89e3\uff0c\u56e0\u4e3a\u6211\u4eec\u8fdb\u5165 $1$ \u53f7\u70b9\u7684\u65f6\u5019\u4e5f\u662f\u9700\u8981\u8fb9\u6743 $1$ \u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u8c61\u662f\u4e00\u5bb6\u516c\u53f8\u5230\u53e6\u4e00\u5bb6\u516c\u53f8\u7684\u5730\u94c1\uff0c\u5176\u8fb9\u6743\u4e3a $1$\u3002\u6240\u4ee5\u8fd9\u6837\u8bbe\u8fb9\u6743\u662f\u6ca1\u6709\u95ee\u9898\u7684\u3002\n\n\u4f46\u662f\u8fd9\u6837\u5efa\u7acb\u8fb9\u7684\u8bdd\u4f1a\u7206\u70b8\uff0c\u8fb9\u7684\u4e2a\u6570\u4f1a\u8fbe\u5230\u60ca\u4eba\u7684\u6570\u76ee\u3002\u6240\u4ee5\u6211\u4eec\u8fd8\u9700\u8981\u8fdb\u884c\u6539\u8fdb\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u5efa\u7acb\u865a\u70b9\u3002\u5047\u8bbe\u6211\u4eec\u5efa\u7acb\u53e6\u4e00\u4e2a\u5730\u94c1\u7ad9 $k$ \u8fde\u63a5\u6bcf\u4e00\u5c42\u7684\u70b9\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba9\u6bcf\u4e00\u4e2a\u70b9\u501f\u52a9 $k$ \u5230\u8fbe\u53e6\u4e00\u5c42\u7684\u70b9\u3002\u5982\u56fe\u6240\u793a\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/6t8cnp93.png)\n\n\u8bbe\u7b2c\u4e00\u5c42\u7684\u70b9\u6570\u4e3a $n_1$,\u7b2c\u4e8c\u5c42\u7684\u70b9\u6570\u4e3a $n_2$\uff0c\u5219\u539f\u56fe\u5efa\u7acb\u7684\u8fb9\u6570\u4e3a $n1\\times n2$\uff0c\u800c\u52a0\u5165\u70b9 $k$ \u540e\u5efa\u7acb\u7684\u8fb9\u6570\u4e3a $n1+n2$\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u5b58\u8fb9\u4e86\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u539f\u672c\u8d2f\u7a7f\u4e24\u5c42\u7684\u7ebf\u7684\u8fb9\u6743\u4e3a $1$\uff0c\u5982\u679c\u52a0\u5165\u70b9 $k$ \u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u6ee1\u8db3\u4e24\u6761\u8fb9\u7684\u8fb9\u6743\u548c\u662f $1$\uff0c\u6240\u4ee5\u4e0e $k$ \u8fde\u63a5\u7684\u70b9\u6784\u6210\u7684\u7ebf\u7684\u8fb9\u6743\u4e3a $0.5$\uff0c\u5728\u539f\u57fa\u7840\u4e0a\u9664\u4ee5 $2$ \u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int MAXN=2e6+5;\nint n,m;\nint to[MAXN],nxt[MAXN],val[MAXN],head[MAXN],tot;\nint dis[MAXN],vis[MAXN],cnt;\nmap<pair<int,int>,int> mp;\nvoid add(int x,int y,int z)\n{\n\tto[++tot]=y;\n\tval[tot]=z;\n\tnxt[tot]=head[x];\n\thead[x]=tot;\n}\npriority_queue<pair<int,int> > que;\nvoid Dijkstra()\n{\n\tfor(int i=0;i<=1000000;i++)\tdis[i]=1e15;\n\tdis[1]=0;\n\tque.push(make_pair(0,1));\n\twhile(!que.empty())\n\t{\n\t\tint t=que.top().second;que.pop();\n\t\tif(vis[t])\tcontinue;\n\t\tvis[t]=1;\n\t\tfor(int i=head[t];i;i=nxt[i])\n\t\t{\n\t\t\tif(dis[to[i]]>dis[t]+val[i])\n\t\t\t{\n\t\t\t\tdis[to[i]]=dis[t]+val[i];\n\t\t\t\tque.push(make_pair(-dis[to[i]],to[i]));\n\t\t\t}\n\t\t}\n\t}\n}\nint find(int x,int y)\n{\n\tif(mp.find(make_pair(x,y))!=mp.end())\treturn mp[make_pair(x,y)];\n\treturn mp[make_pair(x,y)]=++cnt;\n}\nsigned main()\n{\n\tcin>>n>>m;\n\tcnt=n;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint from,tog,id;\n\t\tcin>>from>>tog>>id;\n\t\tint u=find(from,id),v=find(tog,id);\n\t\tadd(u,v,0),add(v,u,0);\n\t\tadd(from,u,1),add(u,from,1);\n\t\tadd(tog,v,1),add(v,tog,1);\n\t}\n\tDijkstra();\n\tif(dis[n]==1e15)\tputs(\"-1\");\n\telse\tcout<<dis[n]/2<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1659966053,
        "uid": 439177,
        "name": "Super_Sheep",
        "ccfLevel": 0,
        "title": "AT2069\u9898\u89e3"
    }
]