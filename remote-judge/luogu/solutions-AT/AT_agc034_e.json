[
    {
        "content": "### $\\rm I.$ \u524d\u8a00\n\n\u542c\u51ac\u4ee4\u8425\u8bb2\u8bfe\uff0c\u53ea\u6709\u770b\u5230\u8fd9\u9898\u4e4b\u540e\u9a6c\u4e0a\u60f3\u51fa\u4e86\u4e00\u4e2a\u5927\u6982\u7684\u89e3\u6cd5\uff0c\u9042\u6ca1\u542c\u8bb2\u89e3\u6572\u4ee3\u7801\u3002\u4f46\u662f\u5f53\u65f6\u6ca1\u8fc7\uff0c\u4eca\u665a\u518d\u8c03\u4e86\u4e00\u4e0b\u5c31\u8fc7\u4e86\u3002\u8fd9\u662f\u6211 ```AC``` \u7684\u7b2c\u4e00\u9053\u96c6\u8bad\u961f\u4f5c\u4e1a\u9898\uff0c\u6545\u5199\u4e00\u7bc7\u9898\u89e3\u4ee5\u7eaa\u5ff5\u3002\n\n### $\\rm II.$ Solution\n\n\u770b $n$ \u7684\u8303\u56f4\uff0c\u50cf\u662f\u4e00\u4e2a $\\Theta(n ^ 2)$ \u7684\u505a\u6cd5\u3002\n\n\u8003\u8651\u5230\u6700\u540e\u7684\u70b9\u53ea\u6709\u4e00\u4e2a\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u5b83\u3002\u5047\u8bbe\u5df2\u7ecf\u56fa\u5b9a\u4e86\u8282\u70b9 $r$ \u4f5c\u4e3a\u7ec8\u70b9\uff0c\u4e0d\u59a8\u4ee5\u5b83\u4e3a\u6839\u3002\n\n\u8bbe $g(u) = \\sum\\limits_{v \\in S_u, col_v = 1} \\text{dist}(u, v)$\uff0c\u8fd9\u91cc $S_u$ \u8868\u793a\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\uff0c\u90a3\u4e48\u4e00\u6b21\u64cd\u4f5c\u540e $g(r)$ \u8981\u4e48\u4e0d\u53d8\uff0c\u8981\u4e48\u51cf\u5c11 $2$\u3002\u4e3a\u4e86\u6c42\u5f97\u6700\u5c11\u7684\u6b21\u6570\uff0c\u6211\u4eec\u5f53\u7136\u8981\u9009\u62e9\u540e\u8005\u3002\u540c\u65f6\u7ecf\u8fc7\u624b\u73a9\u53ef\u4ee5\u53d1\u73b0\uff0c\u4f7f $g(r)$ \u4e0d\u53d8\u7684\u64cd\u4f5c\u5bf9\u6700\u540e\u7684\u7ed3\u679c\u662f\u6ca1\u6709\u5f71\u54cd\u7684\u3002\u7ec6\u60f3\u4e00\u4e0b\uff0c\u4f7f $g(r)$ \u4e0d\u53d8\u7684\u64cd\u4f5c\u6240\u9009\u7684\u4e24\u4e2a\u70b9\u80af\u5b9a\u5728 $r$ \u7684\u540c\u4e00\u68f5\u5b50\u6811\u5185\uff0c\u800c\u6ca1\u6709\u5408\u6cd5\u65b9\u6848\u7684\u539f\u56e0\u80af\u5b9a\u662f $g(r)$ \u662f\u5947\u6570\u6216\u8005 $r$ \u7684\u5b50\u6811\u4e4b\u95f4\u7684\u9ed1\u70b9\u6570\u91cf\u592a\u4e0d\u5e73\u8861\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8003\u8651\u9012\u5f52\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u8bbe $f(u)$ \u4e3a\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\u5185\u901a\u8fc7\u4e00\u7cfb\u5217\u64cd\u4f5c $g(u)$ \u80fd\u591f\u8fbe\u5230\u7684\u6700\u5c0f\u503c\u3002\u7531\u4e0a\u8ba8\u8bba\u53ef\u77e5\u6bcf\u6b21 $g(u)$ \u51cf\u5c0f\u80af\u5b9a\u662f\u7531\u5176\u4e24\u68f5\u5b50\u6811\u7684\u8282\u70b9\u76f8\u62b5\u6d88\u7684\uff0c\u8fd9\u8981\u6c42 $f(v)$ \u4e0d\u80fd\u592a\u5927\uff08$v$ \u662f $u$ \u7684\u4e00\u4e2a\u513f\u5b50\uff09\u3002\n\n\u5177\u4f53\u5730\uff0c\u8bbe $sz_u$ \u8868\u793a\u4ee5 $u$ \u4e3a\u6839\u5b50\u6811\u5185\u68cb\u5b50\u7684\u4e2a\u6570\uff0c\u90a3\u4e48 $sz_u = [col_u = 1] + \\sum sz_v$\uff0c\u5176\u4e2d $v$ \u662f $u$ \u7684\u513f\u5b50\u3002\u7684\u5982\u679c\u5728\u64cd\u4f5c\u4e4b\u524d \u5bf9\u4e8e $\\forall v \\in S_u, f_v + sz_v < g_u - g_v - sz_v$\uff0c\u8fd9\u4ee3\u8868\u7740\u4efb\u610f\u4e00\u68f5\u5b50\u6811\u5728\u4e00\u7cfb\u5217\u64cd\u4f5c\u540e\u90fd\u80fd\u4e0d\u8d85\u8fc7\u603b\u548c\u7684\u4e00\u534a\uff0c\u6240\u4ee5\u53ef\u4ee5\u62b5\u6d88\u81f3\u4e0d\u80fd\u64cd\u4f5c\uff0c$f_u$ \u5373\u4e3a $g(u)$ \u7684\u5947\u5076\u6027\u3002\u53cd\u4e4b\uff0c$f_u$ \u5373\u4e3a $f_v + sz_v - (g_u - g_v - sz_v)$\uff0c\u56e0\u4e3a $v$ \u7684\u5b50\u6811\u5185 $g$ \u6700\u5c0f\u65f6 $u$ \u7684 $g$ \u624d\u80fd\u53d6\u5230\u6700\u5c0f\u3002\n\n\u679a\u4e3e $1, 2, \\cdots, n$ \u4e3a\u7ec8\u70b9\uff0c\u8fd9\u4e2a\u95ee\u9898\u5c31\u88ab\u6211\u4eec\u89e3\u51b3\u4e86\uff0c \u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(n^2)$\u3002\n\n### **\u80fd\u4e0d\u80fd\u518d\u7ed9\u529b\u4e00\u70b9\u554a\uff1f**\n\n\u5bf9\u4e8e\u8fd9\u79cd\u95ee\u9898\uff0c\u6709\u4e00\u79cd\u5947\u5999\u7684\u6280\u5de7\u53eb\u505a\u6362\u6839 ```dp```\uff0c\u6ca1\u5b66\u8fc7\u7684\u5efa\u8bae\u51fa\u95e8\u5de6\u8f6c[\u6362\u6839 dp \u677f\u5b50\u9898](https://www.luogu.com.cn/problem/P3478)\u3002\n\n\u6211\u4eec\u80fd\u5426\u628a\u5b83\u7528\u5728\u8fd9\u4e2a\u9898\u76ee\u4e0a\u5462\uff1f\n\n\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9 $u$\uff0c\u8bbe\u5b83\u539f\u6765\u7684\u7236\u4eb2\u4e3a $fa$\u3002\u5982\u679c\u4ee5\u5b83\u4e3a\u6839\uff0c\u5b83\u7684\u5b50\u6811\u5c31\u6bd4\u7b2c\u4e00\u6b21\u591a\u4e86\u4e00\u4e2a\uff0c\u90a3\u5c31\u662f\u4ee5 $fa$ \u4e3a\u6839\u7684\u4e0d\u5728 $S_u$ \u4e2d\u7684\u70b9\u7ec4\u6210\u7684\u5b50\u6811\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5904\u7406\u51fa\u8fd9\u68f5\u6811\u7684\u8ddd\u79bb\u7684\u6700\u5927\u548c\u6700\u5c0f\u503c\u3002\u800c\u8fd9\u68f5\u6811\u53c8\u53ef\u4ee5\u770b\u4f5c $S_{fa}$ \u88ab\u6316\u53bb\u4e86\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\u548c\u6dfb\u4e0a\u4e86\u9664\u53bb $S_{fa}$ \u7684\u5176\u4ed6\u70b9\u3002\u6240\u4ee5\u6211\u4eec\u8fd8\u9700\u8981\u5bf9\u4e8e\u6bcf\u4e2a\u70b9 $u$ \u9884\u5904\u7406 $f_v + g_v + 2sz_v$ \u7684\u6700\u5927\u503c\u548c\u6b21\u5927\u503c\u3002\u8fd9\u6837\u7684\u8bdd\u90a3\u4e48\u73b0\u5728\u8f6c\u79fb\u7684\u65b9\u7a0b\u5df2\u7ecf\u6bd4\u8f83\u663e\u7136\u4e86\uff0c\u53ea\u662f\u7ec6\u8282\u7531\u6709\u4ebf\u70b9\u591a\uff0c~~\u611f\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u63a8\u5bfc\u3002~~ \u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(n)$\u3002\n\n\u6211\u77e5\u9053\u6211\u8bb2\u7684\u4e0d\u6e05\u695a\uff0c\u6240\u4ee5\u8bfb\u8005\u53ef\u4ee5\u7ed3\u5408\u4ee3\u7801\u7406\u89e3\u3002\u6bd5\u7adf\u8fd9\u4e2a\u9898\u76ee\u4e5f\u662f\u6211\u76ee\u524d\u4e3a\u6b62\u8c03\u7684\u6700\u4e45\u7684\u9898\u76ee\u4e4b\u4e00\u4e86\u3002\u6211\u76f8\u4fe1\u53ea\u8981\u4f60\u81ea\u5df1\u60f3\u51fa\u4e86\u8fd9\u4e2a\u9898\u7684 $\\Theta(n)$ \u7684\u89e3\u6cd5\uff0c\u4f60\u5bf9\u6362\u6839 ```dp``` \u7684\u638c\u63e1\u7a0b\u5ea6\u4f1a\u4e0a\u4e00\u4e2a\u65b0\u53f0\u9636\u3002\n\n~~\u4ee3\u7801\u4e2d\u7684\u53d8\u91cf\u548c\u6570\u7ec4\u540d\u4e0e\u9898\u89e3\u4e2d\u6709\u4ebf\u70b9\u4e0d\u540c~~\uff0c\u9898\u89e3\u4e2d\u7684 $f$ \u6570\u7ec4\u662f\u4ee3\u7801\u4e2d\u7684 $downf$\uff0c\u9898\u89e3\u4e2d\u7684 $g$ \u662f\u4ee3\u7801\u4e2d\u7684 $down$\uff0c$up_u$ \u662f $\\sum\\limits_{v \\not\\in S_u, col_v = 1}\\text{dist}(u, v)$\uff0c$f$ \u6570\u7ec4\u53d8\u6210\u4e86\u6574\u68f5\u6811\u9664\u53bb $S_u$ \u4e2d\u975e $u$ \u7684\u8282\u70b9\u4ee5 $u$ \u4e3a\u6839\u65f6\u7684\u6700\u5c0f\u8ddd\u79bb\u548c\uff0c$Ans_u$ \u662f\u4ee5 $u$ \u4e3a\u6839\u65f6\u6700\u7ec8\u7684\u7b54\u6848\uff0c $sz_u$ \u662f\u521d\u59cb\u65f6 $S_u$ \u4e2d\u68cb\u5b50\u7684\u6570\u91cf\uff0c$g_u$ \u5219\u53d8\u6210\u4e86 $\\sum\\limits_{col_v = 1} \\text{dist}(u, v) = up_u + down_u$\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define il inline\n#define re register\n#define Rep(i, s, e) for (re int i = s; i <= e; ++i)\n#define Dep(i, s, e) for (re int i = s; i >= e; --i)\n#define file(a) freopen(#a\".in\", \"r\", stdin), freopen(#a\".out\", \"w\", stdout)\n\nconst int N = 2000010;\n\nil int read() {\n    int x = 0; bool f = true; char c = getchar();\n    while (!isdigit(c)) {if (c == '-') f = false; c = getchar();}\n    while (isdigit(c)) x = (x << 1) + (x << 3) + (c ^ 48), c = getchar();\n    return f ? x : -x;\n}\n\nint n;\nchar s[N];\nbool hav[N];\n\nint head[N], tot;\nstruct node {int nxt, to;} edge[N << 1];\nil void adde(int u, int v) {edge[++tot].nxt = head[u], edge[tot].to = v, head[u] = tot;}\n\nint dep[N], down[N], now, downf[N], sz[N], nmax[N][3], g[N], up[N], ans = 0x3f3f3f3f, f[N], Ans[N];\n\nil int upd(int u, int x) {\n\tif (x > nmax[u][1]) nmax[u][2] = nmax[u][1], nmax[u][1] = x;\n\telse if (x > nmax[u][2]) nmax[u][2] = x;\n}\n\nil int get(int u) {\n    return down[u] + downf[u] + 2 * sz[u];\n}\n\nvoid dfs_down(int u, int fa) {\n    dep[u] = dep[fa] + 1, sz[u] = hav[u]; int nowmax = 0;\n    for (re int e = head[u]; e; e = edge[e].nxt) {\n        int v = edge[e].to;\n        if (v == fa) continue;\n        dfs_down(v, u), down[u] += down[v] + sz[v], sz[u] += sz[v], upd(u, get(v));\n    }\n    downf[u] = nmax[u][1] > down[u] ? nmax[u][1] - down[u] : down[u] & 1;\n}\n\nvoid dp(int u, int fa) {\n    if (u != 1) {\n        up[u] = down[fa] - down[u] - sz[u] - sz[u] + up[fa] + sz[1], g[u] = up[u] + down[u];\n        int nowmax = max(get(u) == nmax[fa][1] ? nmax[fa][2] : nmax[fa][1], f[fa] + up[fa]), nowg = g[fa] - down[u] - sz[u];\n        f[u] = nowmax > nowg ? nowmax - nowg : nowg & 1;\n        f[u] += sz[1] - sz[u];\n        nowg = g[u], nowmax = max(nmax[u][1], up[u] + f[u]);\n        Ans[u] = nowmax > nowg ? nowmax - nowg : nowg & 1;\n    }\n    for (re int e = head[u]; e; e = edge[e].nxt) {\n        int v = edge[e].to;\n        if (v == fa) continue;\n        dp(v, u);\n    }\n}\n\nint main() {\n    n = read(), dep[0] = -1;\n    scanf(\"%s\", s + 1);\n    Rep(i, 1, n) hav[i] = (s[i] == '1');\n    Rep(i, 2, n) {\n        int u = read(), v = read();\n        adde(u, v), adde(v, u);\n    }\n    dfs_down(1, 0);\n    if (!downf[1]) ans = down[1] >> 1;\n\tg[1] = down[1];\n    dp(1, 0);\n\tRep(i, 2, n) {\n\t\tif (!Ans[i]) ans = min(ans, g[i] >> 1);\n\t} \n    printf(\"%d\\n\", ans == 0x3f3f3f3f ? -1 : ans);\n    return 0;\n}\n```",
        "postTime": 1612280116,
        "uid": 126582,
        "name": "Scintilla",
        "ccfLevel": 9,
        "title": "\u9898\u89e3  [AGC034E Complete Compress]"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\n\u6709\u4e00\u68f5\u6709$n$\u4e2a\u8282\u70b9\u7684\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u4e0a\u6709$0/1$\u679a\u68cb\u5b50\uff0c\u6bcf\u6b21\u53ef\u4ee5\u9009\u62e9\u4e24\u4e2a\u68cb\u5b50\u5e76\u79fb\u52a8\u5230\u5b83\u4eec\u7684\u8def\u5f84\u4e0a\u7684\u76f8\u90bb\u8282\u70b9\uff08\u6ee1\u8db3\u8def\u5f84\u957f\u5ea6\u81f3\u5c11\u4e3a$2$\uff09\uff0c\u6c42\u628a\u6240\u6709\u68cb\u5b50\u79fb\u5230\u540c\u4e00\u4e2a\u8282\u70b9\u7684\u6700\u5c0f\u82b1\u8d39\uff08\u65e0\u89e3\u8f93\u51fa$-1$\uff09\u3002\n\n$n \\leq 2 \\times 10 ^ 3$\n\n### \u5206\u6790\n\n\u679a\u4e3e\u6700\u540e\u6c47\u805a\u5230\u7684\u70b9$\\texttt{root}$\uff0c\u5e76\u4ee5$\\texttt{root}$\u4e3a\u6839\u5efa\u6811\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u5408\u6cd5\u7684\u65b9\u6848\uff0c\u5219\u5fc5\u7136\u662f\u6bcf\u6b21\u9009\u62e9\u4e0d\u5b58\u5728\u7956\u5148\u5173\u7cfb\u7684\u4e24\u679a\u68cb\u5b50\uff0c\u540c\u65f6\u5411\u7740\u4ed6\u4eec\u7684$\\texttt{lca}$\u5904\u8df3\u4e00\u683c\uff0c\u91cd\u590d\u82e5\u5e72\u6b65\uff0c\u76f4\u5230\u6240\u6709\u68cb\u5b50\u90fd\u5728$\\texttt{root}$\n\n\u7531\u6b64\u6211\u4eec\u8054\u60f3\u5230\u4e00\u4e2a\u7ecf\u5178\u6a21\u578b\uff1a\u6709$\\texttt{sum}$\u4e2a\u8282\u70b9\u88ab\u5206\u6210\u4e86\u82e5\u5e72\u4e2a\u96c6\u5408\uff0c\u6bcf\u6b21\u8981\u627e\u5230\u4e0d\u5728\u540c\u4e00\u96c6\u5408\u7684\u4e24\u4e2a\u8282\u70b9\u5339\u914d\u5e76\u62b5\u6d88\u3002\n\n\u8bbe$\\texttt{max}$\u4e3a\u6700\u5927\u7684\u96c6\u5408\u7684\u5927\u5c0f\uff0c\u5219\u5f53$sum - max \\geq max$\u65f6\uff0c\u521a\u597d\u53ef\u4ee5\u6d88\u53bb$\\lfloor \\frac{sum}{2} \\rfloor$\u5bf9\u8282\u70b9\n\n\u5426\u5219\u5269\u4e0b$2 \\times max - sum$\u4e2a\u6765\u81ea\u6700\u5927\u96c6\u5408\u7684\u8282\u70b9\uff0c\u6d88\u53bb\u4e86$sum - max$\u5bf9\n\n\u73b0\u5728\u6211\u4eec\u56de\u5230\u539f\u95ee\u9898\uff0c\u8003\u8651\u5728$u$\u5904\u505a\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u8bbe$f_u$\u8868\u793a\u5728$u$\u7684\u5b50\u6811\u91cc\u6700\u591a\u6d88\u53bb\u4e86\u591a\u5c11\u5bf9\u3002\n\n\u6211\u4eec\u628a\u6240\u6709$u$\u7684\u5b50\u6811\u5185\u7684\u6709\u68cb\u5b50\u7684\u8282\u70b9$v$\u62c6\u6210$dis(v, \\; u)$\u4e2a\u8282\u70b9\uff0c\u5219\u6211\u4eec\u6709\u5982\u4e0b\u8f6c\u79fb\uff08\u4ecd\u7136\u8bbe$\\texttt{sum}$\u4e3a\u603b\u7ed3\u70b9\u4e2a\u6570\uff0c$\\texttt{max}$\u4e3a\u6700\u5927\u7684\u96c6\u5408\u7684\u5927\u5c0f\uff09\n\n- $sum - max \\geq max$ \uff0c\u6b64\u65f6$f_u=\\lfloor \\frac{sum}{2} \\rfloor$\n\n- $sum - max < max$\uff0c\u6b64\u65f6\u9700\u8981\u6700\u5927\u5b50\u6811$v$\u5185\u7684\u8282\u70b9\u6765\u62b5\u6d88\uff0c\u6b64\u65f6$f_u=sum-max+ \\min (f_v, \\lfloor \\frac{2 \\times max - sum}{2} \\rfloor )$\n\n\u4ee5$\\texttt{root}$\u4e3a\u6839\u7684\u60c5\u51b5\u5408\u6cd5\u5f53\u4e14\u4ec5\u5f53$f_{root} = \\frac{\\Sigma_u dis(u, root)}{2}$\uff0c\u540c\u65f6\u8fd9\u4e5f\u662f\u4ee5$\\texttt{root}$\u4e3a\u6839\u7684\u7b54\u6848\n\n\u5bf9$\\texttt{root}=1 - n$\u91cd\u590d\u8fd9\u4e2a$\\texttt{dp}$\u8fc7\u7a0b\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$\\texttt{O(}n^2\\texttt{)}$\n\n### \u4ee3\u7801\n\n``` cpp\n#include <bits/stdc++.h>\n\n#define R register\n#define ll long long\n#define sum(a, b, mod) (((a) + (b)) % mod)\n\nconst int MaxN = 1e4 + 10;\nconst int inf = 0x3f3f3f3f;\n\nstruct edge\n{\n    int next, to;\n};\n\nchar s[MaxN];\nedge e[MaxN];\nint n, ans, cnt;\nint a[MaxN], head[MaxN], dis[MaxN], size[MaxN], f[MaxN];\n\nvoid init()\n{\n    for (int i = 1; i <= n; i++)\n        dis[i] = size[i] = f[i] = 0;\n}\n\nvoid add_edge(int u, int v)\n{\n    ++cnt;\n    e[cnt].to = v;\n    e[cnt].next = head[u];\n    head[u] = cnt;\n}\n\ninline int read()\n{\n    int x = 0;\n    char ch = getchar();\n    while (ch > '9' || ch < '0')\n        ch = getchar();\n    while (ch <= '9' && ch >= '0')\n        x = (x << 1) + (x << 3) + (ch ^ 48), ch = getchar();\n    return x;\n}\n\nvoid dfs(int u, int fa)\n{\n    size[u] = a[u];\n    int maxp = 0;\n    for (int i = head[u]; i; i = e[i].next)\n    {\n        int v = e[i].to;\n        if (v == fa) continue;\n        dfs(v, u), size[u] += size[v], dis[v] += size[v];\n        dis[u] += dis[v], maxp = ((dis[maxp] > dis[v]) ? maxp : v);\n    }    \n    if(!maxp) return (void) (f[u] = 0);\n    if(dis[u] >= 2 * (dis[maxp])) f[u] = (dis[u] / 2);\n    else f[u] = dis[u] - dis[maxp] + std::min(f[maxp], (2 * dis[maxp] - dis[u]) / 2);\n}\n\nint main()\n{\n    ans = inf;\n    n = read(), scanf(\"%s\", s + 1);\n    for (int i = 1; i <= n; i++)\n        a[i] = s[i] - '0';\n    for (int i = 1; i < n; i++)\n    {\n        int u = read(), v = read();\n        add_edge(u, v), add_edge(v, u);\n    }\n    for (int i = 1; i <= n; i++)\n    {\n        init(), dfs(i, 0);\n        if(dis[i] & 1) continue;\n        if (f[i] * 2 >= dis[i]) ans = std::min(ans, dis[i] / 2);\n    }\n    printf(\"%d\\n\", (ans == inf) ? -1 : ans);\n    return 0;\n}\n```",
        "postTime": 1583762612,
        "uid": 61966,
        "name": "little_sun",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 AT4995 \u3010[AGC034E] Complete Compress\u3011"
    },
    {
        "content": "_\u63a8\u9500\u535a\u5ba2\uff1ahttps://www.cnblogs.com/syc233/p/13603919.html_\n\n---\n\n\u6ce8\u610f\u5230\u6570\u636e\u8303\u56f4\u5f88\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u4e00\u4e2a\u6839\uff0c\u5c3d\u91cf\u8ba9\u6240\u6709\u70b9\u79fb\u52a8\u5230\u8fd9\u4e2a\u70b9\u4e0a\u3002\n\n\u5c06\u4e24\u9897\u8ddd\u79bb\u81f3\u5c11\u4e3a $2$ \u7684\u68cb\u5b50\u5411\u4e2d\u95f4\u79fb\u52a8\u4e00\u6b65\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e24\u79cd\u60c5\u51b5\uff1a\n\n* \u5b83\u4eec\u7684LCA\u4e3a\u5b83\u4eec\u5171\u540c\u7684\u7956\u5148\uff0c\u5219\u4e24\u9897\u68cb\u5b50\u4e00\u540c\u5411LCA\u79fb\u52a8\u4e00\u6b65\u3002\n* \u5176\u4e2d\u4e00\u9897\u68cb\u5b50\u4e3aLCA\uff0c\u5219\u6df1\u5ea6\u6d45\u7684\u68cb\u5b50\u5411\u4e0b\u79fb\u52a8\uff0c\u6df1\u5ea6\u6df1\u7684\u68cb\u5b50\u5411\u4e0a\u79fb\u52a8\u3002\n\n\u663e\u7136\u7b2c\u4e8c\u79cd\u60c5\u51b5\u5bf9\u4e8e\u5bfb\u627e\u6700\u4f18\u89e3\u662f\u4e0d\u5229\u7684\uff0c\u4e3a\u4e86\u8ba9\u6240\u6709\u70b9\u79fb\u52a8\u5230\u6839\u4e0a\uff0c\u6bcf\u4e2a\u70b9\u90fd\u5e94\u5411\u4e0a\u8df3\u3002\u6240\u4ee5\u6211\u4eec\u53ea\u8003\u8651\u4ee5\u7b2c\u4e00\u79cd\u60c5\u51b5\u64cd\u4f5c\u3002\n\n---\n\nzzy\uff1a\n\n> \u8fd9\u91cc\u5c31\u6d89\u53ca\u5230\u4e00\u4e2a\u7ecf\u5178\u7684\u6a21\u578b\uff1a\u6709\u82e5\u5e72\u4e2a\u5143\u7d20\u88ab\u5206\u6210\u4e86\u82e5\u5e72\u4e2a\u96c6\u5408\uff0c \u6bcf\u6b21\u8981\u627e\u4e24\u4e2a\u5728\u4e0d\u540c\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u5339\u914d\u7136\u540e\u6d88\u6389\u3002\n\n\u8bbe\u6240\u6709\u96c6\u5408\u7684\u603b\u5927\u5c0f\u4e3a $sum$ \uff0c\u6700\u5927\u96c6\u5408\u7684\u5927\u5c0f\u4e3a $max$ \uff0c\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n* $sum-max\\geq max$ \uff0c\u6bcf\u6b21\u9009\u62e9\u6700\u5927\u548c\u6b21\u5927\u7684\u4e24\u4e2a\u96c6\u5408\u5185\u4e24\u4e2a\u5143\u7d20\u6d88\u6389\uff0c\u6d88\u6389\u540e\u8fd8\u662f\u8fd9\u79cd\u60c5\u51b5\u3002\u6240\u4ee5\u6700\u591a\u80fd\u6d88\u6389 $\\lfloor\\frac{sum}{2}\\rfloor$ \u5bf9\u5143\u7d20\u3002\n* $sum-max<max$ \uff0c\u628a\u5176\u4ed6\u96c6\u5408\u7684\u5143\u7d20\u5168\u90e8\u7528\u6765\u6d88\u6700\u5927\u96c6\u5408\u4e2d\u7684\u5143\u7d20\uff0c\u6700\u591a\u80fd\u6d88\u6389 $sum-max$ \u5bf9\u5143\u7d20\uff0c\u6700\u540e\u6700\u5927\u96c6\u5408\u4e2d\u8fd8\u5269\u4f59 $max\\times 2-sum$ \u4e2a\u5143\u7d20\u3002\n\n---\n\n\u518d\u56de\u5230\u8fd9\u9053\u9898\u3002\n\n\u8003\u8651\u6811\u4e0a\u7684\u4e00\u4e2a\u70b9 $u$ \uff0c\u6211\u4eec\u5c06\u5b83\u7684\u5b50\u6811\u4e2d\u7684\u70b9\u79fb\u52a8\u5230 $u$ \u4e0a\u3002\u5bf9\u4e8e $u$ \u5b50\u6811\u4e2d\u4e00\u4e2a\u70b9 $v$ \uff0c\u6211\u4eec\u5fc5\u987b\u5bf9\u5b83\u8fdb\u884c $dis(u,v)$ \u6b21\u64cd\u4f5c\u624d\u80fd\u5c06\u5b83\u79fb\u52a8\u5230\u70b9 $u$ \u3002\u8fd9\u76f8\u5f53\u4e8e\u5c06 $u$ \u5b50\u6811\u4e2d\u6bcf\u4e2a\u6709\u68cb\u5b50\u7684\u70b9 $v$ \u62c6\u6210\u4e86\u4e00\u4e2a\u6709 $dis(u,v)$ \u4e2a\u5143\u7d20\u7684\u96c6\u5408\uff0c\u6bcf\u6b21\u5728\u4e24\u4e2a\u96c6\u5408\u4e2d\u5206\u522b\u9009\u62e9\u4e24\u4e2a\u5143\u7d20\u76f8\u6d88\uff0c\u5219\u95ee\u9898\u8f6c\u5316\u4e3a\u4e86\u7ecf\u5178\u6a21\u578b\u3002\n\n\u4f46\u662f\u7531\u4e8e\u6811\u7ed3\u6784\u7684\u9650\u5236\uff0c\u6709\u7956\u5b59\u5173\u7cfb\u7684\u4e24\u4e2a\u70b9\u5bf9\u5e94\u7684\u96c6\u5408\u4e0d\u80fd\u540c\u65f6\u9009\u62e9\u3002\u56e0\u6b64\u6211\u4eec\u8003\u8651\u6811\u5f62DP\uff0c\u5c06\u95ee\u9898\u8f6c\u5316\u4e3a**\u4e92\u4e0d\u76f8\u4ea4**\u7684\u5b50\u95ee\u9898\u6c42\u89e3\u3002\n\n\u4ee4 $f_u$ \u8868\u793a $u$ \u7684\u5b50\u6811\u5185\u6700\u591a\u80fd\u6d88\u53bb\u591a\u5c11\u5bf9\u5143\u7d20\uff0c$dis_u$ \u8868\u793a $u$ \u7684\u5b50\u6811\u4e2d\u68cb\u5b50\u62c6\u6210\u7684\u96c6\u5408\u7684\u603b\u5927\u5c0f\uff0c\u8bbe $max$ \u8868\u793a $u$ \u7684\u513f\u5b50\u5bf9\u5e94\u7684\u5b50\u6811\u4e2d\u68cb\u5b50\u62c6\u6210\u7684\u96c6\u5408\u7684\u6700\u5927\u7684\u603b\u5927\u5c0f\uff0c\u5373 ${\\rm{max}}\\{dis_v|v \\in son_v\\}$ \u3002\u5219\u6709\u8f6c\u79fb\uff1a\n\n* $dis_u-max\\geq max$ \uff0c\u6bcf\u6b21\u9009\u62e9\u4e24\u4e2a\u5904\u4e8e\u4e0d\u540c\u5b50\u6811\u7684\u4e24\u4e2a\u5143\u7d20\u76f8\u6d88\uff0c\u5219 $f_u=\\lfloor\\frac{sum}{2}\\rfloor$ \u3002\n* $dis_u-max<max$ \uff0c\u5148\u7528\u5176\u4ed6\u5b50\u6811\u4e2d\u7684\u5143\u7d20\u6d88\u6700\u5927\u5b50\u6811\u4e2d\u7684\u5143\u7d20\uff0c\u8fd9\u6837\u80fd\u6d88\u6389 $dis_u-max$ \u5bf9\u5143\u7d20\uff0c\u5269\u4e0b\u7684 $max\\times 2-dis_u$ \u4e2a\u5143\u7d20\u5168\u90e8\u5728\u6700\u5927\u5b50\u6811\u4e2d\u3002\u5728\u6700\u5927\u5b50\u6811 $v$ \u5185\u90e8\u6700\u591a\u80fd\u6d88 $f_v$ \u5bf9\u5143\u7d20\uff0c\u5219\u5269\u4e0b\u7684\u5143\u7d20\u5728\u6700\u5927\u5b50\u6811\u4e2d\u80fd\u6d88 $\\lfloor\\frac{{\\rm{min}}(f_v\\times 2,max\\times 2-dis_u)}{2}\\rfloor$ \u5bf9\u3002\u5219 $f_u=dis_u-max+\\lfloor\\frac{{\\rm{min}}(f_v\\times 2,max\\times 2-dis_u)}{2}\\rfloor$ \u3002\n\n\u4ee5 $root$ \u4e3a\u6839\u65f6\uff0c\u5f53\u4e14\u4ec5\u5f53 $f_{root}=\\frac{dis_{root}}{2}$ \uff0c\u5373\u6240\u6709\u5143\u7d20\u90fd\u6d88\u5b8c\u65f6\u5408\u6cd5\u3002\n\n---\n\n$\\text{Code}:$\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#define maxn 2005\n#define Rint register int\n#define INF 0x3f3f3f3f\nusing namespace std;\ntypedef long long lxl;\n\ntemplate <typename T>\ninline void read(T &x)\n{\n\tx=0;T f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9') {if(ch=='-') f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') {x=(x<<1)+(x<<3)+ch-'0';ch=getchar();}\n\tx*=f;\n}\n\nstruct edge\n{\n\tint u,v,next;\n}e[maxn<<1];\n\nint head[maxn],k;\n\ninline void add(int u,int v)\n{\n\te[k]=(edge){u,v,head[u]};\n\thead[u]=k++;\n}\n\nint n,a[maxn];\nint siz[maxn],dis[maxn],f[maxn];\n\ninline void dfs(int u,int fa)\n{\n\tsiz[u]=a[u];\n\tdis[u]=0;\n\tint son=-1;\n\tfor(int i=head[u];~i;i=e[i].next)\n\t{\n\t\tint v=e[i].v;\n\t\tif(v==fa) continue;\n\t\tdfs(v,u);\n\t\tsiz[u]+=siz[v];\n\t\tdis[u]+=(dis[v]+=siz[v]);\n\t\tif(!~son||dis[son]<dis[v]) son=v;\n\t}\n\tif(!~son) return void(f[u]=0);\n\tif(dis[u]-dis[son]>=dis[son]) f[u]=dis[u]/2;\n\telse f[u]=dis[u]-dis[son]+min(f[son]*2,2*dis[son]-dis[u])/2;\n}\n\nchar s[maxn];\n\nint main()\n{\n\t// freopen(\"AT4995.in\",\"r\",stdin);\n\tread(n);\n\tscanf(\" %s\",s+1);\n\tfor(int i=1;i<=n;++i) a[i]=s[i]-'0';\n\tmemset(head,-1,sizeof(head));\n\tfor(int i=1,u,v;i<n;++i)\n\t{\n\t\tread(u),read(v);\n\t\tadd(u,v);add(v,u);\n\t}\n\tint ans=-1;\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tdfs(i,0);\n\t\tif(f[i]*2==dis[i]) ans=(!~ans||ans>f[i])?f[i]:ans;\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1599049012,
        "uid": 224236,
        "name": "GoPoux4",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 AT4995 \u3010[AGC034E] Complete Compress\u3011"
    },
    {
        "content": "\u9996\u5148\u679a\u4e3e\u805a\u96c6\u70b9\uff0c\u7136\u540e\u8003\u8651\u5982\u4f55\u5224\u65ad\u5408\u6cd5\u3002\n\n\u8003\u8651\u8bbe$mx[i]$\u4e3a\u4ee5$i$\u4e3a\u6839\u7684\u5b50\u6811\u5185\u7684\u68cb\u5b50\u5230\u5b83\u7684\u8ddd\u79bb\u4e4b\u548c\uff0c\u8bbe$mn[i]$\u4e3a\u4ee5$i$\u4e3a\u6839\u7684\u5b50\u6811\u5185\u7684\u68cb\u5b50\u5230\u5b83\u7684\u8ddd\u79bb\u4e4b\u548c\u7684\u6700\u5c0f\u503c\uff08\u5c31\u662f\u8bf4\u5b50\u6811\u5185\u64cd\u4f5c\u540e\uff09\uff0c\u8bbe$size[i]$\u4e3a\u4ee5$i$\u4e3a\u6839\u7684\u5b50\u6811\u5185\u7684\u68cb\u5b50\u6570\u91cf\u3002\n\n$mx,size$\u90fd\u597d\u6c42\uff0c\u8003\u8651$mn$\u5982\u4f55\u6c42\u3002\n\n\u5047\u8bbe\u5f53\u524d\u8981\u6c42$mn[x]$\uff0c\u73b0\u5728\u627e\u5230\u4e86$mx$\u6700\u5927\u7684\u4e00\u4e2a\u70b9$p$\u3002\n\n\u90a3\u4e48\u5982\u679c$mx[p]\\leq mx[x]-mx[p]$\uff0c\u4e5f\u5c31\u662f\u8bf4\u5047\u8bbe\u6240\u6709\u7684\u5b50\u6811\u90fd\u53d6$mx$\uff0c\u6700\u5927\u7684\u90a3\u4e2a\u4e5f\u6ca1\u6709\u8d85\u8fc7$\\frac{1}{2}$\uff0c\u90a3\u4e48\u663e\u7136\u4f1a\u6709\u4e00\u79cd\u529e\u6cd5\u4f7f\u5f97$mn[x]=mx[x]\\%2$\u3002\n\n\u90a3\u4e48\u5982\u679c$mx[p]>mx[x]-mx[p]$\uff0c\u5c31\u8003\u8651\u8c03\u6574\u3002\n\n\u56e0\u4e3a\u5982\u679c$mx[p]>mx[x]-mx[p]$\u7684\u8bdd\uff0c\u5176\u5b83\u7684\u5b50\u6811\u82e5\u53d6$mx$\u5fc5\u7136\u4e0d\u4f1a\u8d85\u8fc7\u4e00\u534a\uff0c\u90a3\u4e48\u53ea\u6709\u53ef\u80fd\u662f$p$\u70b9\u8d85\u8fc7\u4e00\u534a\uff0c\u4e8e\u662f\u8003\u8651\u5c06$p$\u70b9\u7531$mx$\u53d8\u6210$mn$\uff0c\u90a3\u4e48\u5f0f\u5b50\u5c31\u4f1a\u53d8\u6210$mn[p]>(mx[x]-mx[p]+mn[p])-mn[p]=mx[x]-mx[p]$\uff0c\u5982\u679c\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u90a3\u4e48$p$\u70b9\u80af\u5b9a\u4f1a\u8d85\u8fc7\u4e00\u534a\uff0c\u4e8e\u662f\u8fd9\u4e2a\u65f6\u5019$mn[x]=mn[p]+mx[p]-mx[x]$\u3002\n\n\u5982\u679c$mx[p]\\leq mx[x]-mx[p]$\uff0c\u90a3\u4e48$mn[x]=mx[x]\\%2$\u3002\n\n\u7efc\u4e0a\u53ef\u77e5\uff0c\u5f53$mn[p]>mx[x]-mx[p]$\u65f6\uff0c$mn[x]=mn[p]+mx[p]-mx[x]$\uff0c\u5269\u4e0b\u7684\u60c5\u51b5$mn[x]=mx[x]\\%2$\u3002\n\n\u6700\u540e\u53ea\u9700\u8981\u5224\u65ad$mn[root]$\u662f\u5426\u4e3a$0$\u5373\u53ef\u3002\n\n\u6ce8\u610f\u8f6c\u79fb\u7684\u65f6\u5019$mn$\u4e0e$mx$\u5747\u8981\u52a0\u4e0a$size$\uff0c\u56e0\u4e3a\u8981\u4e0a\u4f20\u3002\n\n\u8fd9\u6837\u5c31\u505a\u5b8c\u4e86\uff0c\u590d\u6742\u5ea6$O(n^2)$\u3002\n\ncode\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define maxn 2010\nusing namespace std;\ntypedef long long ll;\nint read()\n{\n    int x=0,f=1;\n    char ch=getchar();\n    while(ch-'0'<0||ch-'0'>9){if(ch=='-') f=-1;ch=getchar();}\n    while(ch-'0'>=0&&ch-'0'<=9){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\nint n;\nint a[maxn];\nchar s[maxn];\nint head[maxn],nxt[maxn*2],to[maxn*2],tot;\nvoid add(int u,int v)\n{\n    tot++;\n    nxt[tot]=head[u];\n    head[u]=tot;\n    to[tot]=v;\n}\nll mn[maxn],mx[maxn];\nint g[maxn];\nint solve(int x,int las)\n{\n    mx[x]=mn[x]=0;g[x]=a[x];\n    int p=0;\n    for(int i=head[x];i;i=nxt[i])\n    {\n        if(to[i]==las)  continue;\n        solve(to[i],x);\n        g[x]+=g[to[i]];\n        mx[x]+=mx[to[i]];\n        if(mx[to[i]]>mx[p])  p=to[i];\n    }\n    if(mn[p]>mx[x]-mx[p])  mn[x]=mn[p]+mx[p]-mx[x]+g[x];\n    else                   mn[x]=(mx[x]&1)+g[x];\n    mx[x]+=g[x];\n    if(!las)  mn[x]-=g[x],mx[x]-=g[x];\n}\nll ans=inf;\nint main()\n{\n    n=read();\n    scanf(\"%s\",s+1);for(int i=1;i<=n;i++)  a[i]=s[i]-'0';\n    for(int i=1;i<n;i++)\n    {\n        int q=read(),w=read();\n        add(q,w);add(w,q);\n    }\n    for(int i=1;i<=n;i++)\n    {\n        solve(i,0);\n        if(!mn[i])  ans=min(ans,mx[i]/2);\n    }\n    if(ans==inf)  puts(\"-1\");\n    else          cout<<ans<<endl;\n    return 0;\n}\n```",
        "postTime": 1583155071,
        "uid": 46396,
        "name": "justin_cao",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 AT4995 \u3010[AGC034E] Complete Compress\u3011"
    },
    {
        "content": "### [\u5728\u535a\u5ba2\u98df\u7528\u6548\u679c\u66f4\u4f73](https://www.luogu.com.cn/blog/224229/solution-at4995)\n### [Atcoder\u9898\u76ee\u94fe\u63a5](https://atcoder.jp/contests/agc034/tasks/agc034_e)\n------------\n\u8003\u8651\u5230\u6570\u636e\u8303\u56f4 $N<=2,000$ \u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u679a\u4e3e\u6700\u7ec8\u4f1a\u6c47\u805a\u5230\u7684\u70b9\u3002\u540c\u65f6\uff0c\u5bf9\u4e8e\u5f53\u524d\u8282\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u6bcf\u6b21\u4e00\u5b9a\u9009\u62e9\u975e\u540c\u4e00\u94fe\u5230\u5f53\u524d\u8282\u70b9\u7684\u4e24\u9897\u68cb\u5b50\u8fdb\u884c\u4f4d\u79fb\n\n\u6b64\u65f6\u5982zzy\u6240\u8bf4\n\n> \u8fd9\u91cc\u5c31\u6d89\u53ca\u5230\u4e00\u4e2a\u7ecf\u5178\u7684\u6a21\u578b\uff1a\u6709\u82e5\u5e72\u4e2a\u70b9\u88ab\u5206\u6210\u4e86\u82e5\u5e72\u4e2a\u96c6\u5408\uff0c\u6bcf\u6b21\u8981\u627e\u4e24\u4e2a\u5728\u4e0d\u540c\u96c6\u5408\u4e2d\u7684\u70b9\u5339\u914d\u7136\u540e\u6d88\u6389\u3002\u5f53$sum-max>=max$ \u65f6,\u5373 $sum<=2 \u00d7 max$\uff0c\u5982\u679c\u603b\u5171\u6709\u5076\u6570\u4e2a\u70b9\u53ef\u4ee5\u6d88\u5b8c\u5426\u5219\u53ef\u4ee5\u5269\u4e0b\u6070\u597d1\u4e2a\uff0c\u6d88\u53bb\u4e86 $[\\frac{sum}{2}]$ \u5bf9\uff1b\u5426\u5219\u8fd8\u5269\u4e0b $max-(sum-max)$\u4e2a\u6765\u81ea\u6700\u5927\u96c6\u5408\u7684\u70b9\uff0c\u6d88\u53bb\u4e86 $sum-max$ \n\n\u6211\u4eec\u8003\u8651\u8ba9\u70b9\u80fd\u591f\u6d88\u6389\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5**\u8ba9\u6bcf\u4e00\u4e2a\u68cb\u5b50\u5206\u4e3a $dis(u,root)$ \u4e2a\u68cb\u5b50**\uff0c\u5206\u5e03\u5728 $u$ \u5230 $root$ \u7684\u8def\u5f84\u4e0a\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5**\u8bbe $f[x]$ \u8868\u793a:\u4ee5 $x$ \u4e3a\u6839\u7684\u5b50\u6811\u91cc\uff0c\u6700\u591a\u80fd\u6d88\u6389\u7684\u70b9\u7684\u5bf9\u6570**,\u540c\u65f6**\u8bbe $sum$ \u4e3a\u6811\u4e2d\u68cb\u5b50\u7684\u4e2a\u6570\uff0c$u$ \u4e3a\u6700\u5927\u5b50\u6811\u7684\u7f16\u53f7, $maxson$ \u4e3a\u6700\u5927\u5b50\u6811\u7684 $sum$** \uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\n$$\nf[x]=\n\\left\\{\n\\begin{array}{l}\n[\\frac{sum}{2}](sum-maxson>=maxson)\\\\\nsum-maxson+min(f[u],maxson-[\\frac{sum}{2}])(sum-maxson<maxson)\n\\end{array}\n\\right.\n$$\n\n\n\u5982\u679c\u6240\u6709\u68cb\u5b50\u90fd\u80fd\u88ab\u6d88\u6389\uff0c\u5176\u7b54\u6848\u5373\u4e3a$\\frac{sum_{root}}{2}$\uff0c\u5373\u53ea\u8981\u6ee1\u8db3 $f[root]\\times2=sum_{root}$ \uff0c\u5373\u4e3a\u4e00\u4e2a\u5408\u6cd5\u7b54\u6848\u3002\n\n$$\n\\color{red}{\\text{Talk is cheap , show you the code}}\n$$\n```cpp\n#include<touwenjian.h>\\\\\u4eceMMM\u5904\u5077\u6765\u7684\u4e07\u80fd\u5934\n#define ll long long\n#define maxn 2005\n#define inf 0x3f3f3f3f\nusing namespace std;\nint n,w[maxn],head[maxn],k,root;\nint f[maxn],si[maxn],sum[maxn];\nchar s[maxn];\nstruct  eage\n{\n\tint v,last;\n}e[maxn<<1];\n\nint read()\n{\n\tint num,sign=1;\n\tchar c;\n\twhile((c=getchar())<'0'||c>'9')\n\t\tif(c=='-')sign=-1;\n\tnum=c-'0';\n\twhile(((c=getchar())>='0'&&c<='9'))\n\t\tnum=(num<<1)+(num<<3)+c-'0';\n\treturn num*sign;\n}\n\ninline void addeage(int u,int v)\n{\n\te[++k].last=head[u];\n\te[k].v=v;\n\thead[u]=k;\n}\n\nvoid dfs(int u,int fa)\n{\n\tsi[u]=0;\n\tif(w[u])si[u]=1;\n\tsum[u]=0;\n\tint maxson=0,maxid;\n\tfor(register int i=head[u];i;i=e[i].last)\n\t{\n\t\tint v=e[i].v;\n\t\tif(v==fa)continue;\n\t\tdfs(v,u);\n\t\tsi[u]+=si[v];\n\t\tsum[u]+=(sum[v]+si[v]);\n\t\tif(sum[v]+si[v]>maxson)\n\t\t{\n\t\t\tmaxson=sum[v]+si[v];\n\t\t\tmaxid=v;\n\t\t}\n\t}\n\tif(sum[u]-maxson>=maxson)f[u]=sum[u]/2;\n\telse f[u]=sum[u]-maxson+min(f[maxid],maxson-sum[u]/2);\n}\n\nint main()\n{\n\tn=read();\n\tfor(register int i=1;i<=n;++i)\n\t{\n\t\tchar x=getchar();\n\t\tif(x=='1')w[i]=1;\n\t}\n\tfor(register int u,v,i=1;i<n;++i)\n\t{\n\t\tu=read(),v=read();\n\t\taddeage(u,v);\n\t\taddeage(v,u);\n\t}\n\tint ans=inf;\n\tfor(register int i=1;i<=n;++i)\n\t{\n\t\troot=i;\n\t\tdfs(root,0);\n\t\tif(!(sum[root]%2)&&f[root]==sum[root]/2)ans=min(ans,f[root]);\n\t}\n\tprintf(\"%d\\n\",ans==inf?ans=-1:ans);\n\treturn 0;\n}\n```",
        "postTime": 1592226263,
        "uid": 224229,
        "name": "Caicz",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 AT4995 \u3010[AGC034E] Complete Compress\u3011"
    },
    {
        "content": "\u9996\u5148\u679a\u4e3e\u4e00\u4e2a\u8282\u70b9\u4f5c\u4e3a\u6839\uff0c\u95ee\u9898\u5c31\u53d8\u6210\u4e86\uff1a\u6bcf\u6b21\u9009\u62e9\u4e0d\u662f\u7956\u5148-\u540e\u4ee3\u5173\u7cfb\u7684\u4e24\u4e2a\u70b9\u5411\u4e0a\u8df3\u8dc3\uff0c\u770b\u80fd\u4e0d\u80fd\u628a\u6240\u6709\u70b9\u8df3\u8dc3\u5230\u6839\u8282\u70b9\u3002\n\n\u8fd9\u91cc\u6d89\u53ca\u5230\u4e00\u4e2a\u7ecf\u5178\u7684\u6a21\u578b\uff1a\u6709\u5f88\u591a\u4e2a\u96c6\u5408\uff0c\u6bcf\u6b21\u9009\u62e9\u4e24\u4e2a\u4e0d\u540c\u7684\u96c6\u5408\uff0c\u5404\u81ea\u6d88\u6389\u4e00\u4e2a\u5143\u7d20\uff0c\u770b\u80fd\u4e0d\u80fd\u6d88\u5b8c\u3002\n\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u7ed3\u8bba\uff1a\u5f53$T$\u4e2d\u6700\u5927\u7684\u96c6\u5408\u4e3a$k$\u65f6\uff0c\u6709\n\n- \u5f53$size(k)\\leq \\sum _{i\\in T, i\\ne k}size(i)$\uff0c\u53ef\u4ee5\u5b8c\u5168\u6d88\u9664\uff08\u548c\u4e3a\u5076\u6570\u4e00\u4e2a\u4e0d\u5269\uff0c\u548c\u4e3a\u5947\u6570\u53ea\u7559\u4e00\u4e2a\uff09\u3002\n- \u5f53$size(k)> \\sum _{i\\in T, i\\ne k}size(i)$\uff0c\u4f1a\u5269\u4e0b$size(k)- \\sum _{i\\in T, i\\ne k}size(i)$\u4e2a\u65e0\u6cd5\u6d88\u9664\u3002\n\n\u8fd9\u4e2a\u7ed3\u8bba\u53ef\u4ee5\u8fd9\u6837\u8bc1\u660e\uff1a\n\n- \u51fa\u73b0\u7b2c\u4e00\u79cd\u60c5\u51b5\u65f6\uff0c\u62ff\u524d\u4e24\u5927\u7684\u6765\u6d88\uff0c\u6d88\u4e00\u6b21\u540e\u4f9d\u65e7\u662f\u7b2c\u4e00\u79cd\u60c5\u51b5\u3002\uff08\u6700\u5927\u7684\u548c\u9664\u6700\u5927\u7684\u4e4b\u5916\u7684\u548c\u5171\u540c\u51cf\u5c0f1\uff09\n- \u51fa\u73b0\u7b2c\u4e8c\u79cd\u60c5\u51b5\u65f6\uff0c\u62ff\u6700\u5927\u7684\u6d88\u6389\u5176\u4ed6\u6240\u6709\u7684\u5373\u53ef\u3002\n\n---\n\n\u90a3\u4e48\u6709\u4e86\u8fd9\u4e2a\u7ed3\u8bba\uff0c\u53c8\u6709\u4e86\u6839\u8282\u70b9\uff0c\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u5bf9\u5168\u6811\u8fdb\u884cDP\u3002\u56e0\u4e3a\u8fd9\u91cc\u7684\u201c\u6d88\u9664\u201d\u662f\u5e26\u6743\u503c\u7684\uff08\u4e00\u4e2a\u70b9\u8981\u88ab\u201c\u6d88\u201d\u591a\u6b21\u624d\u4f1a\u5230\u8fbe\u6839\u8282\u70b9\uff0c\u8fd9\u4e2a\u6b21\u6570\u5c31\u662f\u4ed6\u7684\u6df1\u5ea6\u3002\uff09\u540e\u6587\u8bf4\u7684\u201c\u70b9\u201d\u5747\u4e3a\u865a\u70b9\uff0c\u4e00\u4e2a\u70b9\u4ea7\u751f\u7684\u865a\u70b9\u4e2a\u6570\u4e3a\u4ed6\u8ddd\u79bb\u76ee\u6807\u7684\u957f\u5ea6\u3002\n\n\u4ee4$F[i]$\u4e3a\u5f53\u524d\u6811\u4e2d$i$\u7684\u5b50\u6811\u4e2d\uff0c\u6700\u591a\u80fd\u6d88\u6389\u591a\u5c11\u5bf9\u70b9\u3002\u6211\u4eec\u4ee4$T$\u4e3a$i$\u7684\u513f\u5b50\u96c6\u5408\uff0c\u4ee4$sum=\\sum _{j\\in T, j\\ne k}size(j)$\u3002\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u6839\u636e\u4e0a\u9762\u90a3\u4e2a\u7ed3\u8bba\u5f97\u5230\u8f6c\u79fb\u7684\u65b9\u7a0b\uff1a\n\n- \u5f53$size(k)\\leq sum$, $F[i]=\\lfloor \\frac{\\sum_{j\\in T}size(j)}{2}\\rfloor$\u3002\n- \u5f53$size(k)> sum$, $F[i]=sum+\\lfloor \\frac{min(size(k)-sum,2F[k])}{2}\\rfloor$\n\n\u5176\u5b9e\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5DP\uff0c\u4e5f\u53ef\u4ee5\u641c\u4e00\u904d\u3002\u90fd\u5dee\u4e0d\u591a\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nstring a;\nconst int inf=1e9+1000;\nconst int maxn=2050;\nint head[maxn],cnt;\nstruct gg {\n    int u,v,next;\n}side[maxn*2];\nint size[maxn],sum,f[maxn],F[maxn],depth[maxn],dep_sum[maxn];\nvoid insert(int u,int v) {\n    side[++cnt]=(gg){u,v,head[u]};head[u]=cnt;\n}\nint ans=inf;\nvoid init() {\n    memset(F,0,sizeof(F));\n    memset(size,0,sizeof(size));memset(f,0,sizeof(f));sum=0;\n    memset(dep_sum,0,sizeof(dep_sum));\n    for(int i=0;i<a.length();i++)size[i+1]=(a[i]=='1');\n}\nvoid dfs(int u,int fa,int d) {\n    int tot=0,k=0,mx=-1;depth[u]=d;\n    for(int i=head[u];i;i=side[i].next) {\n        int v=side[i].v;if(v==fa)continue;\n        dfs(v,u,d+1);\n        dep_sum[u]+=dep_sum[v]+size[v];\n        if(dep_sum[v]+size[v]>mx) {\n            mx=dep_sum[v]+size[v];k=v;\n        }\n        size[u]+=size[v];\n        tot+=dep_sum[v]+size[v];\n    }\n    int sum=tot-(dep_sum[k]+size[k]);\n    if(mx<=sum)F[u]=tot/2;\n    else F[u]=sum+min(mx-sum,2*F[k])/2;\n}\nint main() {\n    ios::sync_with_stdio(0);\n    int n;cin>>n>>a;\n    for(int i=1,u,v;i<n;i++) {\n        cin>>u>>v;\n        insert(u,v);insert(v,u);\n    }\n    for(int i=1;i<=n;i++) {\n        init();\n        dfs(i,0,0);\n        if(F[i]*2==dep_sum[i]) {\n            ans=min(ans,dep_sum[i]);\n        }\n    }\n    if(ans>=inf)printf(\"-1\");\n    else printf(\"%d\",ans/2);\n    return 0;\n}\n```\n\n",
        "postTime": 1583848584,
        "uid": 43420,
        "name": "GavinZheng",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 AT4995 \u3010[AGC034E] Complete Compress\u3011"
    }
]