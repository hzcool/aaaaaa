[
    {
        "content": "\u849f\u84bb\u7b2c\u4e00\u6b21\u5199\u9898\u89e3\n\n\u7b80\u5355\u8bf4\u4e00\u4e0b\u8fd0\u7528\u7684\u7b97\u6cd5\n\n\u8fd9\u9053\u9898\u4e3b\u8981\u5c31\u662f\u7528\u4e8c\u5206\uff0c\u5176\u4e2d\u6709lower_bound\u7684\u7b97\u6cd5\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\n\nlower_bound(a+1,a+n+1,key) \u4e0b\u754c \u627e\u5230\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8ekey\u7684\u5730\u5740\n\n\u518d\u8bf4\u4e00\u4e0b\u8fd9\u9053\u9898\u7684\u4e3b\u8981\u601d\u8def\uff1a\n\nfirst step\uff1a\u7528lower_bound\u627e\u51fa\u6700\u8fd1\u7684shrine\u548ctemple\n\nsecond\uff1a\u4f1a\u53d1\u73b0\u53ef\u4ee5\u627e\u51fa\u56db\u4e2a\uff0c\u5de6shrine\uff0c\u53f3 shrine\uff0c\u5de6temple\uff0c\u53f3temple\n\nthird\uff1a\u540c\u4fa7\u53d6max\uff0c\u4e0d\u540c\u4fa7\u8003\u8651\u5c31\u8981\u6765\u56de\n\nfinal\uff1a\u56db\u79cd\u60c5\u51b5\u53bbmin\uff0c\u5b8c\u7f8e\u7ed3\u675f\n\n\u4e0b\u9762\u6b63\u7247\u5f00\u59cb\uff1a\n\n```cpp\n#include<cstdio>\n  \n#include<cmath>\n  \n#include<algorithm>\n  \nusing namespace std;\n\nlong long a[100005],b[100005];//\u4e0d\u591a\u8bf4 \u4e00\u5b9a\u8981longlong\n\nint main() {\n\n\tint n,m,x,y,t;\n\tlong long k;\n\n\tscanf(\"%d%d%d\",&n,&m,&t);\n\n\tfor(int i=0;i<n;i++)//i\u4e00\u5b9a\u8981\u4ece0\u5f00\u59cb \u4e0d\u7136\u53ea\u8fc71\u4e2a\u70b9 ~~\u60e8\u75db\u7684\u6559\u8bad~~\n    \tscanf(\"%lld\",&a[i]);//\u8f93\u5165\u5efa\u8bae\u7528scanf cin\u4f1a\u6162\u4e00\u4e9b\n\tfor(int i=0;i<m;i++)\n    \tscanf(\"%lld\",&b[i]);\n\n\tlong long  ans;\n\n\twhile(t--)//t\u6b21\u67e5\u627e\n\t{\n    \tscanf(\"%d\",&k);\n\n    \tx=lower_bound(a,a+n,k)-a;//\u4e8c\u5206\u641c \u6ce8\u610f\u51cf\n    \ty=lower_bound(b,b+m,k)-b;\n    \tans=1e16;\n\n    //\u4ee5\u4e0b\u5206\u56db\u79cd\u60c5\u51b5\u8ba8\u8bba ~~\u81ea\u8ba4\u4e3a\u6bd4\u8f83\u7b80\u5355\uff1f~~\n    \tif(x<n&&y<m)//\u795e\u793e\u548c\u5bfa\u5e99\u90fd\u5728\u5de6\n    \t{\n        \tans=min(ans,max(a[x],b[y])-k);\n    \t}\n    \tif(x>0&&y>0)//\u795e\u793e\u5bfa\u5e99\u90fd\u5728\u53f3\n    \t{\n        \tans=min(ans,k-min(a[x-1],b[y-1]));\n    \t}\n    \tif(x>0&&y<m)//\u795e\u793e\u5de6\u5bfa\u5e99\u53f3\n    \t{\n        \tans=min(ans,b[y]-a[x-1]+min(k-a[x-1],b[y]-k));\n    \t}\n    \tif(y>0&&x<n)//\u5bfa\u5e99\u5de6\u795e\u793e\u53f3\n    \t{\n        \tans=min(ans,a[x]-b[y-1]+min(k-b[y-1],a[x]-k));\n    \t}\n    \tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n} //\u5b8c\u7f8e\u7ed3\u675f\n```\n\n\n\u5148\u522b\u8d70\uff01\n\n\u4e3a\u60a8\u4eec\u518d\u5949\u4e0a\u51e0\u4e2a\u6709\u5173\u4e8c\u5206\u67e5\u627e\u7684\u51fd\u6570\n```cpp\n//upper_bound(a+1,a+n+1,key) \u4e0a\u754c \u627e\u5230\u7b2c\u4e00\u4e2a\u5927\u4e8ekey\u7684\u5730\u5740\n```\n\n```cpp\nupper_bound(a+1,a+n+1,key)-lower_bound(a+1,a+n+1,key) \u6c42key\u5728\u6570\u7ec4\u4e2d\u7684\u4e2a\u6570\n```\n\n\u53e6\u5916\u8fd8\u6709\u4e2a\u81ea\u5df1\u5199\u7684\u4e8c\u5206\u67e5\u627e\u7684\u5c0f\u51fd\u6570\n\n```cpp\nint bs(long long a[],long long key)\n\n{\n\nint low=1,high=n;                  \nwhile(low<=high)\n    {\n        int mid=(low+high)/2;\n        if(a[mid]==key)\n            return mid;\n        else if(a[mid]<key)\n            low=mid+1;\n        else\n            high=mid-1;\n    }\nreturn -1;\n}\n```\n\u5c31\u8fd9\u6837\u4e86 \u4e0d\u59a8\u70b9\u4e2a\u8d5e\u518d\u8d70\uff08\u5351\u5fae\n\n\u7b2c4\u6b21\u63d0\u4ea4\uff0c\u6392\u7248\u5e94\u8be5\u6ca1\u95ee\u9898\u4e86\uff0c\u6c42\u8fc7.jpg",
        "postTime": 1605625272,
        "uid": 191799,
        "name": "c60521c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT4303 \u3010[ABC119D] Lazy Faith\u3011\uff08\u8fdb\u4e00\u6b65\u7684\u6539\u8fdb\uff09"
    },
    {
        "content": "AT4303 [ABC119D] Lazy Faith[\u9898\u89e3][\u4e8c\u5206]\n=\n\n> [AT4303](https://www.luogu.com.cn/problem/AT4303)\n\ntranslation\n-\n\n\u6709 $a$ \u4e2a\u70b9 $s$\uff0c\u6709 $b$ \u4e2a\u70b9 $t$\uff0c\u95ee\u4ece\u70b9 $x$ \u51fa\u53d1\u5230\u8fbe\u81f3\u5c11\u4e00\u4e2a $a$ \u548c\u4e00\u4e2a $b$ \u7684\u6700\u77ed\u8ddd\u79bb\u662f\u591a\u5c11\u3002\n\nsolution\n-\n\n\u6211\u4eec\u5148\u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u5047\u5982\u6211\u4eec\u6709 $2$ \u4e2a\u70b9 $s$ \u5206\u522b\u5728 $3,6$ \u548c $2$ \u4e2a\u70b9 $t$ \u5206\u522b\u5728 $2,5$\uff0c$x$ \u4ece $4$ \u51fa\u53d1\u3002\n\n\u5148\u753b\u4e00\u4e2a\u56fe\u66f4\u597d\u7684\u7406\u89e3\n\n![1](https://i.loli.net/2020/11/15/7spJN9YZVDUqKP6.png)\n\n\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u6709 $4$ \u79cd\u9009\u62e9\uff1a\n\n- \u9009\u62e9 $s_1$ \u548c $t_1$\n- \u9009\u62e9 $s_2$ \u548c $t_2$\n- \u9009\u62e9 $s_1$ \u548c $t_2$\n- \u9009\u62e9 $s_2$ \u548c $t_1$\n\n\u90a3\u4e48\u53ef\u4ee5\u60f3\u60f3\uff0c\u8fd8\u6709\u5176\u4ed6\u7684\u9009\u62e9\u5417\uff1f\u5e76\u6ca1\u6709\uff01\n\n\u56e0\u4e3a\u8981\u9009\u62e9\u6700\u77ed\u7684\u8def\u7ebf\uff0c\u5982\u679c\u5728 $t_1$ \u5de6\u8fb9\u6216 $s_2$ \u53f3\u8fb9\u8fd8\u6709\u70b9\u7684\u8bdd\uff0c\u82e5\u9009\u62e9\u5b83\u80af\u5b9a\u8ddd\u79bb\u957f\uff0c\u80af\u5b9a\u8981\u820d\u3002\n\n\u6240\u4ee5\u603b\u7ed3\uff0c\u53ea\u6709\u8fd9\u56db\u79cd\u9009\u6cd5\uff1a\n\n- \u5de6 $s$ \u5de6 $t$\n- \u53f3 $s$ \u53f3 $t$\n- \u5de6 $s$ \u53f3 $t$\n- \u53f3 $s$ \u5de6 $t$\n\n\u6240\u4ee5\u53ea\u8981\u5c06\u8fd9 $4$ \u79cd\u9009\u6cd5\u90fd\u7b97\u51fa\u6765\uff0c\u53d6 $\\min$ \u5373\u53ef\u3002\n\n\u90a3\u5982\u4f55\u7b97\uff1f\n\n\u7b2c\u4e00\u4e2a\u95ee\u9898\uff1a\n\n\u5982\u4f55\u627e\u5230\u5728 \u5de6/\u53f3 \u8fb9\u79bb $x$ \u6700\u8fd1\u7684 $s/t$\uff1f\n\n\u8fd9\u91cc\u6211\u4eec\u5c31\u8981\u7528\u5230 **\u4e8c\u5206**\n\n~~\u4f17\u6240\u5468\u77e5~~ \u7528\u4e8c\u5206\u53ef\u4ee5\u7528 `lower_bound` \u548c `upper_bound` \u51fd\u6570\u3002\n\n\u6211\u4eec\u5728\u8fd9\u91cc\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\u8fd9\u4e24\u79cd\u51fd\u6570\u3002\n\n- `lower_bound`  \n\t\u6b64\u51fd\u6570\u901a\u8fc7\u4e8c\u5206\u7684\u539f\u7406\uff0c\u5728 $a$ \u6570\u7ec4\u4e2d\u627e\u5230\u7b2c\u4e00\u4e2a $\\leq x$ \u7684\u6570\u3002  \n    \u4f7f\u7528\uff1a`lower_bound(a + 1, a + n + 1, x)`\n- `upper_bound`  \n\t\u4f7f\u7528\u65b9\u6cd5\u4e0e `lower_bound` \u7c7b\u4f3c\uff0c\u4f46\u662f\u627e\u5230\u7b2c\u4e00\u4e2a $\\le x$ \u7684\u6570\u3002\n    \n\u90a3\u4e48\u6211\u4eec\u627e\u5230\u5728 \u5de6/\u53f3 \u8fb9\u79bb $x$ \u6700\u8fd1\u7684 $s/t$ \u5c31\u5f88\u5bb9\u6613\u4e86\u3002\n\ncode\n-\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <string>\n#include <cstring>\n#define int long long\nusing namespace std;\n\nconst int NR = 1e5 + 5;\nint a, b, q;\nint s[NR], t[NR];\n\nvoid solve() {\n\tint x;\n\tcin >> x;\n\tint ss = lower_bound(s + 1, s + a + 1, x) - s;\n\tint sm = lower_bound(t + 1, t + b + 1, x) - t;\n\tint ans = 9e18;\n\t//\u5de6\u793e\u5de6\u5bfa\n\tif (ss > 1 && sm > 1) {\n\t\tans = min(ans, max(x - s[ss - 1], x - t[sm - 1]));\n\t}\n\t//\u53f3\u793e\u53f3\u5bfa\n\tif (ss <= a && sm <= b) {\n\t\tans = min(ans, max(s[ss] - x, t[sm] - x));\n\t}\n\t//\u5de6\u793e\u53f3\u5bfa\n\tif (ss > 1 && sm <= b) {\n\t\tif (x - s[ss - 1] <= t[sm] - x) //\u5982\u679c\u5de6\u6bd4\u53f3\u8fd1\u6216\u4e24\u8fb9\u8ddd\u79bb\u51fa\u53d1\u70b9\u76f8\u7b49\uff0c\u5c31\u5148\u8d70\u5de6\u8fb9\n\t\t\tans = min(ans, (x - s[ss - 1]) * 2 + (t[sm] - x));\n\t\telse\n\t\t\tans = min(ans, (t[sm] - x) * 2 + (x - s[ss - 1]));\n\t}\n\t//\u53f3\u793e\u5de6\u5bfa\n\tif (ss <= a && sm > 1) {\n\t\tif (s[ss] - x <= x - t[sm - 1]) //\u5982\u679c\u53f3\u6bd4\u5de6\u8fd1\uff0c\u5c31\u5148\u8d70\u53f3\u8fb9\n\t\t\tans = min(ans, (s[ss] - x) * 2 + (x - t[sm - 1]));\n\t\telse\n\t\t\tans = min(ans, (x - t[sm - 1]) * 2 + (s[ss] - x));\n\t}\n\tcout << ans << endl;\n\treturn;\n}\n\nsigned main() {\n\tcin >> a >> b >> q;\n\tfor (int i = 1; i <= a; i++) cin >> s[i];\n\tfor (int i = 1; i <= b; i++) cin >> t[i];\n\tsort(s + 1, s + a + 1);\n\tsort(t + 1, t + b + 1);\n\twhile (q--) solve();\n\treturn 0;\n}\n```",
        "postTime": 1605430083,
        "uid": 128369,
        "name": "AgrumeStly",
        "ccfLevel": 0,
        "title": "[AT4303][ABC119D] Lazy Faith"
    },
    {
        "content": "\u4e00\u9053\u4e8c\u5206\u7ec3\u4e60\u9898\uff0c\u601d\u7ef4\u96be\u5ea6\u8f83\u5927\u3002\n\n### \u601d\u8def\n\u5148\u628a\u6240\u6709\u7684\u5efa\u7b51\u7269\u6392\u5e8f\u4e00\u904d\uff0c\u4e00\u5171\u53ea\u6709\u56db\u79cd\u60c5\u51b5\uff1a\n\n1.\u53bb\u6700\u9760\u8fd1\u81ea\u5df1\u7684**\u5de6**\u8fb9\u7684\u795e\u793e\u548c\u5bfa\u5e99\uff08\u795e\u793e\uff0c\u5bfa\u5e99\u53ef\u4e92\u6362\uff09\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/em39w23u.png)\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u6700\u77ed\u8def\u7a0b\u662f**\u79bb\u4f60\u8fdc\u7684\u90a3\u4e00\u4e2a**\u5230\u4f60\u7684\u8ddd\u79bb\n\n2.\u53bb\u6700\u9760\u8fd1\u81ea\u5df1\u7684**\u53f3**\u8fb9\u7684\u795e\u793e\u548c\u5bfa\u5e99\uff08\u795e\u793e\uff0c\u5bfa\u5e99\u53ef\u4e92\u6362\uff09\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/tc94t0h8.png)\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u6700\u77ed\u8def\u7a0b\u8fd8\u662f**\u79bb\u4f60\u8fdc\u7684\u90a3\u4e00\u4e2a**\u5230\u4f60\u7684\u8ddd\u79bb\n\n\n3.\u53bb\u6700\u9760\u8fd1\u81ea\u5df1\u7684**\u5de6**\u8fb9\u7684\u795e\u793e\u548c\u6700\u9760\u8fd1\u81ea\u5df1\u7684**\u53f3**\u8fb9\u7684\u5bfa\u5e99\uff08\u795e\u793e\uff0c\u5bfa\u5e99**\u4e0d**\u53ef\u4e92\u6362\uff09\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/1r8jvl9d.png)\n\n\u8fd9\u65f6\u5019\u5c31\u6709\u610f\u601d\u4e86\uff0c\u4f60\u4f1a\u53d1\u73b0\u4f60\u603b\u4f1a\u8d70\u5bfa\u5e99\u548c\u795e\u793e\u4e4b\u95f4\u7684\u8def\u7a0b\uff0c\u4f46\u662f\u5148\u53bb\u79bb\u4f60\u8fd1\u7684\u4f1a\u8ba9\u603b\u8def\u7a0b\u66f4\u5c11\n\n\u6700\u77ed\u8def\u7a0b\u662f**\u79bb\u4f60\u8fd1\u7684\u90a3\u4e00\u4e2a**\u5230\u4f60\u7684\u8ddd\u79bb**\u52a0\u4e0a\u4e24\u8005\u4e4b\u95f4**\u7684\u8ddd\u79bb\n\n4.\u53bb\u6700\u9760\u8fd1\u81ea\u5df1\u7684**\u53f3**\u8fb9\u7684\u795e\u793e\u548c\u6700\u9760\u8fd1\u81ea\u5df1\u7684**\u5de6**\u8fb9\u7684\u5bfa\u5e99\uff08\u795e\u793e\uff0c\u5bfa\u5e99**\u4e0d**\u53ef\u4e92\u6362\uff09\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/yp847aog.png)\n\n\u8fd9\u65f6\u5019\u5c31\u53c8\u6709\u610f\u601d\u4e86\uff0c\u4f60\u4f1a\u53d1\u73b0\u4f60\u53c8\u603b\u4f1a\u8d70\u5bfa\u5e99\u548c\u795e\u793e\u4e4b\u95f4\u7684\u8def\u7a0b\uff0c\u4f46\u662f\u5148\u53bb\u79bb\u4f60\u8fd1\u7684\u53c8\u4f1a\u8ba9\u603b\u8def\u7a0b\u66f4\u5c11\n\n\u6700\u77ed\u8def\u7a0b\u8fd8\u662f**\u79bb\u4f60\u8fd1\u7684\u90a3\u4e00\u4e2a**\u5230\u4f60\u7684\u8ddd\u79bb**\u52a0\u4e0a\u4e24\u8005\u4e4b\u95f4**\u7684\u8ddd\u79bb\n\n### \u603b\u7ed3\n\n\u6700\u8fd1\u7684\u795e\u5e99\uff1a$s$ (shenmiao)\n\n\u6700\u8fd1\u7684\u795e\u5e99\uff1a$t$ (temple)\n\n\u4f60\u7684\u4f4d\u7f6e\uff1a$q$\n\n\u5de6\u795e\u793e\u5de6\u5bfa\u5e99\uff1a$max(q-s,q-t)$\n\n\u53f3\u795e\u793e\u53f3\u5bfa\u5e99\uff1a$max(s-q,t-q)$\n\n\u5de6\u795e\u793e\u53f3\u5bfa\u5e99\uff1a$max(q-s,t-q)$\n\n\u53f3\u795e\u793e\u5de6\u5bfa\u5e99\uff1a$max(s-q,q-t)$\n\n### \u5b9e\u73b0\n\nSTL\u4eba\uff0cSTL\u9b42\uff0cSTL\u90fd\u662f\u5927\u61d2\u4eba\uff01\n\n\u6211\u4eec\u5f53\u7136\u662f\u7528$lower\\_bound$\u6765\u5b9e\u73b0\uff08\u5077\u61d2\uff09\u5566\uff01\n\n$lower\\_bound(1, r, key)$\u4f1a\u8fd4\u56de\u8be5\u6570\u7ec4\u4e2d\u4e0b\u6807$l$\u4e0e$r$\u4e4b\u95f4\u7b2c\u4e00\u4e2a**\u5927\u4e8e\u7b49\u4e8e**$key$\u7684\u6570\u7684**\u4e0b\u6807**\uff0c\u5982\u679c\u6ca1\u6709\uff0c**\u8fd4\u56de\u7684\u4e0b\u6807\u4e0d\u5728$l$\u548c$r$\u4e4b\u95f4**\n\n\u5177\u4f53$l$\u548c$r$\u7684\u7528\u6cd5\u6709\u70b9\u50cf$sort$\uff0c\u8be6\u89c1\u4e0b\u65b9\u4ee3\u7801\n\n\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u6765\u627e\u51fa\u6700\u9760\u8fd1\u53f3\u8fb9\u7684\u5efa\u7b51\n\n\u5de6\u8fb9\u53ea\u9700\u8981\u4e0b\u6807$-1$\uff08\u7b2c\u4e00\u4e2a\u5c0f\u4e8e\u7b49\u4e8e$key$\u7684\u524d\u4e00\u4e2a\u6570\u5c31\u662f\u6700\u540e\u4e00\u4e2a\u5927\u4e8e$key$\u7684\uff09\n\n**\u6ce8\u610f\uff1a\u8be5\u51fd\u6570\u4e0d\u4f1a\u9ed8\u8ba4\u5c06\u6570\u7ec4\u6392\u5e8f**\uff0c\u6240\u4ee5\u9700\u8981\u624b\u52a8\u52a0\u4e0a$sort$\uff0c\u8fd8\u8981**\u7279\u5224**\u54e6\n\n\u8fd9\u91cc\u5c31\u4e0d\u5c55\u5f00\u5566~\u5982\u60f3\u4e86\u89e3\u66f4\u591a\u53bb\u7ffb\u522b\u4eba\u7684$blog$\u5427~\n\n-----\n\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n#define LL long long\n// lower_bound <= \u6ce8\u610f\uff0c\u662f\u5c0f\u4e8e\u7b49\u4e8e\n\nLL A, B, Q;\nLL a[100005], b[100005], q;\n\nint main()\n{\n\tscanf(\"%lld%lld%lld\", &A, &B, &Q);\n\tfor (int i = 1; i <= A; i++)\n\t\tscanf(\"%lld\", &a[i]);\n\tfor (int i = 1; i <= B; i++)\n\t\tscanf(\"%lld\", &b[i]);\n\t\t\n\tsort(a+1, a+A+1);// \u522b\u5fd8sort\n\tsort(b+1, b+B+1);\n\t\t\n\twhile (Q--)// \u67e5\u8be2\u6b21\u6570\n\t{\n\t\tscanf(\"%lld\", &q);// \u6bcf\u6b21\u7684\u4f4d\u7f6e\n\t\tLL sa = lower_bound(a+1, a+A+1, q) - a;// \u6700\u9760\u8fd1\u7684\u795e\u793e\n\t\tLL sb = lower_bound(b+1, b+B+1, q) - b;// \u6700\u9760\u8fd1\u7684\u5bfa\u5e99\n\t\tLL ans = 9223372036854775807;// \u9632\u88ab\u5361\uff08\u7b11\n\t\tif (sa <= A && sb <= B)// \u5de6\u795e\u793e\u5de6\u5bfa\u5e99\n\t\t\tans = min(ans, max(a[sa] - q, b[sb] - q));\n\t\tif (sa > 1 && sb > 1)// \u53f3\u795e\u793e\u53f3\u5bfa\u5e99\n\t\t\tans = min(ans, max(q - a[sa-1], q - b[sb-1]));\n\t\tif (sa <= A && sb > 1)// \u5de6\u795e\u793e\u53f3\u5bfa\u5e99\n\t\t\tans = min(ans, a[sa] - b[sb-1] + min(a[sa] - q, q - b[sb-1]));\n\t\tif (sa > 1 && sb <= B)// \u53f3\u795e\u793e\u5de6\u5bfa\u5e99\n\t\t\tans = min(ans, b[sb] - a[sa-1] + min(q - a[sa-1], b[sb] - q));\n\t\tprintf(\"%lld\\n\", ans);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1605450350,
        "uid": 191762,
        "name": "qss_",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 AT4303 \u3010[ABC119D] Lazy Faith\u3011"
    },
    {
        "content": "~~\u5728whk\u7684\u8ffd\u6740\u4e0b\u4ed3\u4fc3\u5199\u4e0b\u6b64\u9898\u89e3~~\n\n## \u89e3\u9898\u601d\u8def\uff1a\n\n\u6211\u8ba4\u4e3a\u672c\u9898\u7684\u5173\u952e\u6b65\u9aa4\u6709\u4e24\u4e2a\uff1a\n\n- \u5206\u522b\u67e5\u627e\u8d77\u70b9\u5de6\u8fb9\u548c\u53f3\u8fb9\u6700\u9760\u8fd1\u8d77\u70b9\u7684\u795e\u793e\u548c\u5bfa\u5e99\uff1b\n- \u5206\u7c7b\u8ba8\u8bba\u884c\u8d70\u7684\u60c5\u51b5\u3002\n\n\u7b2c\u4e00\u4e2a\u95ee\u9898\u5f88\u597d\u89e3\u51b3\u3002\u7531\u4e8e\u6b64\u9898\u7684\u6570\u636e\u53ef\u80fd\u5230\u8fbe $10^5$ \u6570\u91cf\u7ea7\uff0c\u6240\u4ee5\u663e\u7136\u6211\u4eec\u4e0d\u80fd\u4f7f\u7528 $O(n^2)$ \u7684\u7206\u529b\u67e5\u627e\uff0c\u800c\u5e94\u8be5\u8fd0\u7528\u4e8c\u5206\u67e5\u627e\uff0c\u4f7f\u7a0b\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u81f3 $O(n$ $logn)$ \u3002\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 $lower$_ $bound$ \u51fd\u6570\u67e5\u627e\u5230\u8d77\u70b9\u53f3\u4fa7\u6700\u9760\u8fd1\u5b83\u7684\u5bfa\u5e99 $x_i$ \u548c\u795e\u793e $y_j$\uff0c\u800c\u5de6\u4fa7\u6700\u9760\u8fd1\u5b83\u7684\u5bfa\u5e99\u548c\u795e\u793e\u81ea\u7136\u5c31\u662f $x_{i-1}$ \u548c$y_{j-1}$\u4e86\u3002\n\n\u7b2c\u4e8c\u4e2a\u95ee\u9898\u53ef\u4ee5\u5206\u56db\u79cd\u60c5\u51b5\u8ba8\u8bba\uff1a\u793e\u5de6\u5e99\u5de6\uff1b\u793e\u5de6\u5e99\u53f3\uff1b\u793e\u53f3\u5e99\u5de6\uff1b\u793e\u53f3\u5e99\u53f3\u3002\u6211\u4eec\u53ea\u9700\u4fdd\u8bc1\u5728\u8d77\u70b9\u5de6\u4fa7\u7684\u5bfa\u5e99\u6216\u8005\u795e\u793e\u7684\u4e0b\u6807\u5927\u4e8e $0$ \uff0c\u53f3\u4fa7\u7684\u5c0f\u4e8e\u7b49\u4e8e $a$ \u6216\u8005 $b$ \u5373\u53ef\u3002\u5177\u4f53\u5b9e\u73b0\u53ef\u53c2\u7167\u4ee3\u7801\u3002\n\n## \u4ee3\u7801\uff1a\n\n```\n#include <iostream>\n#include <algorithm>\n#include <cstdio>\n#include <cmath>\nusing namespace std;\nconst int N = 1e5 + 10;\n\nint a, b, q, maxx, maxy;\n\nlong long x[N], y[N];\n\nint main()\n{\n\tcin >> a >> b >> q;\n\tfor(int i = 1; i <= a; i++)\n\t\tcin >> x[i];\n\tfor(int i = 1; i <= b; i++)\n\t\tcin >> y[i];\n\tsort(x + 1, x + a + 1);\n\tsort(y + 1, y + b + 1); \n\tfor(int i = 1; i <= q; i++)\n\t{\n\t\tlong long k, ans = 9e18;\n\t\tcin >> k;\n\t\tint x1 = lower_bound(x + 1, x + a + 1, k) - x, y1 = lower_bound(y + 1, y + b + 1, k) - y;\n\t\t//l x l y\n\t\tif(x1 > 1 and y1 > 1)\n\t\tans = min(ans, k - min(x[x1 - 1], y[y1 - 1]));\n\t\t//l x r y\n\t\tif(y1 <= b and x1 > 1)\n\t\tans = min(ans, min(k - x[x1 - 1], y[y1] - k) + abs(x[x1 - 1] - y[y1]));\n\t\t//l y r x\n\t\tif(x1 <= a and y1 > 1)\n\t\tans = min(ans, min(x[x1] - k, k - y[y1 - 1]) + abs(x[x1] - y[y1 - 1]));\n\t\t//r x r y\n\t\tif(x1 <= a and y1 <= b)\n\t\tans = min(ans, max(x[x1] - k, y[y1] - k));\n\t\tcout << ans << endl;\n\t\t \n\t} \n\treturn 0;\n } ",
        "postTime": 1605434279,
        "uid": 200060,
        "name": "Magia",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 AT4303 \u3010[ABC119D] Lazy Faith\u3011"
    }
]