[
    {
        "content": "\u5728\u535a\u5ba2\u56ed\u98df\u7528\u66f4\u4f73\uff1a[https://www.cnblogs.com/PinkRabbit/p/10022225.html](https://www.cnblogs.com/PinkRabbit/p/10022225.html)\u3002\n\n### \u9898\u610f\u7b80\u8ff0\uff1a\n\n\u7ed9\u5b9a\u4e00\u5f20\u6709 $N$ \u4e2a\u70b9 $M$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe\u3002\u6bcf\u6761\u8fb9\u6709\u76f8\u5e94\u7684\u8fb9\u6743\uff0c\u8fb9\u6743\u662f\u6b63\u6574\u6570\u3002\n\n\u5c0f A \u8981\u4ece\u7ed3\u70b9 $S$ \u8d70\u5230\u7ed3\u70b9 $T$ \uff0c\u800c\u5c0f B \u5219\u76f8\u53cd\uff0c\u4ed6\u8981\u4ece\u7ed3\u70b9 $T$ \u8d70\u5230\u7ed3\u70b9 $S$ \u3002\n\n\u5c0f A \u548c\u5c0f B \u8d70\u4e00\u6761\u8fb9\u9700\u8981\u7684\u65f6\u95f4\u90fd\u662f\u8fd9\u6761\u8fb9\u7684\u8fb9\u6743\uff0c\u4e0d\u8bba\u65b9\u5411\u3002\n\n\u95ee\u6709\u591a\u5c11\u79cd\u8d70\u6cd5\uff0c\u4f7f\u5f97\u4ed6\u4eec\u4fe9\u90fd\u8d70\u4e86\u6700\u77ed\u8def\uff0c\u4f46\u662f\u4ed6\u4eec\u4e0d\u4f1a\u76f8\u9047\uff0c\u8fd9\u91cc\u76f8\u9047\u6307\u7684\u662f\u5728\u70b9\u4e0a\u6216\u8005\u5728\u8fb9\u4e0a\u76f8\u9047\u3002\n\n\u7b54\u6848\u5bf9 $10^9+7$ \u53d6\u6a21\u3002\n\n### \u9898\u89e3\uff1a\n\n\u7528 Dijkstra \u7b97\u6cd5\u6c42\u51fa\u4ee5\u7ed3\u70b9 $S$ \u548c\u7ed3\u70b9 $T$ \u51fa\u53d1\u5230\u6bcf\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u548c\u6700\u77ed\u8def\u6761\u6570\u3002\n\n\u628a\u4ece\u7ed3\u70b9 $S$ \u5230\u7ed3\u70b9 $i$ \u7684\u6700\u77ed\u8def\u8bb0\u4f5c $d1_i$ \uff0c\u6700\u77ed\u8def\u6761\u6570\u5bf9 $10^9+7$ \u53d6\u6a21\u7684\u7ed3\u679c\u8bb0\u4f5c $g1_i$\u3002\n\n\u628a\u4ece\u7ed3\u70b9 $T$ \u5230\u7ed3\u70b9 $i$ \u7684\u6700\u77ed\u8def\u8bb0\u4f5c $d2_i$ \uff0c\u6700\u77ed\u8def\u6761\u6570\u5bf9 $10^9+7$ \u53d6\u6a21\u7684\u7ed3\u679c\u8bb0\u4f5c $g2_i$\u3002\n\n\u628a\u4ece\u7ed3\u70b9 $S$ \u5230\u7ed3\u70b9 $T$ \u7684\u6700\u77ed\u8def\u8bb0\u4f5c $Dist$ \u3002\n\n\u8003\u8651\u7528\u5bb9\u65a5\u7684\u65b9\u6cd5\u8ba1\u7b97\u7b54\u6848\u3002\u7b54\u6848\u7b49\u4e8e\u603b\u65b9\u6848\u6570\u51cf\u53bb\u76f8\u9047\u7684\u65b9\u6848\u6570\u3002\u603b\u65b9\u6848\u6570\u4e3a $g1_T^2$ \u3002\n\n\u56e0\u4e3a\u8d70\u7684\u90fd\u662f\u6700\u77ed\u8def\uff0c\u800c\u4e14\u8fb9\u6743\u662f\u6b63\u7684\uff0c\u4e0d\u96be\u8bc1\u660e\u4e24\u4eba\u53ea\u4f1a\u76f8\u9047\u4e00\u6b21\u3002\n\n\u6240\u4ee5\u53ea\u8981\u7edf\u8ba1\u5728\u6bcf\u4e2a\u70b9\u6216\u8005\u6bcf\u6761\u8fb9\u7ecf\u8fc7\u7684\u65b9\u6848\u6570\u5373\u53ef\u3002\n\n\u8003\u8651\u7ecf\u8fc7\u7ed3\u70b9 $i$ \u7684\u65b9\u6848\u6570\uff1a  \n\u524d\u63d0\u662f $d1_i+d2_i=Dist$ \u4e14 $d1_i=d2_i$ \uff0c\u65b9\u6848\u6570\u4e3a $g1_i^2g2_i^2$ \u3002\n\n\u8003\u8651\u7ecf\u8fc7\u8fb9 $i\\overset{d}{\\Longleftrightarrow}j$ \uff08\u5176\u4e2d\u5c0f A \u4ece\u7ed3\u70b9 $i$ \u8d70\u5411\u7ed3\u70b9 $j$ \uff09\u7684\u65b9\u6848\u6570\uff1a  \n\u524d\u63d0\u662f $d1_i+d+d2_i=Dist$ \u4e14 $d1_i+d>d2_j$ \u4e14 $d1_i<d+d2_j$ \uff0c\u65b9\u6848\u6570\u4e3a $g1_i^2g2_j^2$ \u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define F(i,a,b) for(int i=(a);i<=(b);++i)\n#define eF(i,u) for(int i=h[u];i;i=nxt[i])\n#define Mod 1000000007\nusing namespace std;\ntypedef long long ll;\ntypedef pair<ll,int> pli;\n\nint n,m,S,T;\nll Ans;\nint U[200001],V[200001],D[200001];\nint h[100001],nxt[400001],to[400001],w[400001],tot;\nvoid ins(int x,int y,int z){nxt[++tot]=h[x];to[tot]=y;w[tot]=z;h[x]=tot;}\n\nll d1[100001],d2[100001],g1[100001],g2[100001];bool v1[100001],v2[100001];\npriority_queue<pli,vector<pli>,greater<pli> > pq;\n\nvoid Dij(ll*d,ll*g,bool*v,int s){\n\td[s]=0ll;\n\tpq.push(pli(0ll,s));\n\tg[s]=1;\n\twhile(!pq.empty()){\n\t\tpli P=pq.top(); pq.pop();\n\t\tint u=P.second; ll du=P.first;\n\t\tif(v[u]||d[u]<du) continue;\n\t\tv[u]=1;\n\t\teF(i,u){\n\t\t\tif(d[to[i]]==du+w[i])\n\t\t\t\tg[to[i]]=(g[to[i]]+g[u])%Mod;\n\t\t\tif(d[to[i]]>du+w[i])\n\t\t\t\tg[to[i]]=g[u],\n\t\t\t\td[to[i]]=du+w[i], pq.push(pli(d[to[i]],to[i]));\n\t\t}\n\t}\n}\n\nint main(){\n\tint x,y,z;\n\tscanf(\"%d%d\",&n,&m);\n\tscanf(\"%d%d\",&S,&T);\n\tF(i,1,m) scanf(\"%d%d%d\",&x,&y,&z), ins(x,y,z), ins(y,x,z), U[i]=x, V[i]=y, D[i]=z;\n\tmemset(d1,0x3f,sizeof d1);\n\tDij(d1,g1,v1,S);\n\tmemset(d2,0x3f,sizeof d2);\n\tDij(d2,g2,v2,T);\n\tll Dist=d1[T];\n\tAns=g1[T]*g1[T]%Mod;\n\tF(i,1,n){\n\t\tif(d1[i]+d2[i]==Dist&&d1[i]==d2[i])\n\t\t\tAns=(Ans-g1[i]*g1[i]%Mod*g2[i]%Mod*g2[i]%Mod)%Mod;\n\t}\n\tint u,v,d;\n\tF(i,1,m){\n\t\tu=U[i], v=V[i], d=D[i];\n\t\tif(d1[u]+d+d2[v]==Dist && d1[u]+d>d2[v] && d2[v]+d>d1[u]){\n\t\t\tAns=(Ans-g1[u]*g2[v]%Mod*g1[u]%Mod*g2[v]%Mod)%Mod;\n\t\t}\n\t\tu=V[i], v=U[i], d=D[i];\n\t\tif(d1[u]+d+d2[v]==Dist && d1[u]+d>d2[v] && d2[v]+d>d1[u]){\n\t\t\tAns=(Ans-g1[u]*g2[v]%Mod*g1[u]%Mod*g2[v]%Mod)%Mod;\n\t\t}\n\t}\n\tprintf(\"%lld\",(Ans%Mod+Mod)%Mod);\n\treturn 0;\n}\n```",
        "postTime": 1543230821,
        "uid": 10703,
        "name": "\u5c0f\u7c89\u5154",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 AT3883 \u3010Avoiding Collision\u3011"
    },
    {
        "content": "## Description\n\n[\u9898\u5e93\u94fe\u63a5](https://arc090.contest.atcoder.jp/tasks/arc090_c)\n\n\u7ed9\u51fa\u4e00\u5f20 $N$ \u4e2a\u8282\u70b9\uff0c $M$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u7ed9\u51fa\u8d77\u70b9 $S$ \u548c\u7ec8\u70b9 $T$ \u3002\u8be2\u95ee\u4e24\u4e2a\u4eba\u5206\u522b\u4ece $S$ \u548c $T$ \u51fa\u53d1\uff0c\u8d70\u6700\u77ed\u8def\u4e0d\u76f8\u9047\u7684\u65b9\u6848\u6570\u3002\n\n$1 \\leq N \\leq 100,000,1 \\leq M \\leq 200,000$\n\n## Solution\n\n\u8bb0\u6700\u77ed\u8def\u957f\u5ea6\u4e3a $D$ \uff0c\u4ece $S$ \u51fa\u53d1\u8d70\u8fc7\u7684\u8def\u7a0b\u4e3a $d_1$ \uff0c\u4ece $T$ \u51fa\u53d1\u7684\u8d70\u8fc7\u7684\u8def\u7a0b\u4e3a $d_2$ \u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\u8d70\u6700\u77ed\u8def\u76f8\u9047\u53ea\u4f1a\u51fa\u73b0\u4e24\u79cd\u60c5\u51b5\uff1a\n\n1. \u5728\u67d0\u4e2a\u8282\u70b9\u76f8\u9047\uff0c\u6b64\u65f6 $d_1=d_2=\\frac{D}{2}$ \uff1b\n2. \u5728\u67d0\u6761\u8fb9\u4e0a\u76f8\u9047\uff0c\u8bb0\u8fd9\u6761\u8fb9\u4e3a $e$ \uff0c\u8fb9\u6743\u4e3a $c$ \uff0c\u8fde\u63a5 $u,v$ \u4e24\u4e2a\u8282\u70b9\u3002\u6b64\u65f6 ${d_1}_u+{d_2}_v+c=D$ \uff0c\u4e14 ${d_1}_u < \\left\\lfloor\\frac{D}{2}\\right\\rfloor,{d_2}_v < \\left\\lfloor\\frac{D}{2}\\right\\rfloor$ \n\n\u90a3\u4e48\u6211\u4eec\u8dd1\u4e00\u904d\u6700\u77ed\u8def\u8ba1\u6570\uff0c\u7528\u603b\u65b9\u6848\u6570\u51cf\u53bb\u4e0a\u8ff0\u4e0d\u5408\u6cd5\u7684\u60c5\u51b5\u5373\u53ef\u3002\n\n## Code\n\n```cpp\n//It is made by Awson on 2018.2.2\n#include <bits/stdc++.h>\n#define LL long long\n#define dob complex<double>\n#define Abs(a) ((a) < 0 ? (-(a)) : (a))\n#define Max(a, b) ((a) > (b) ? (a) : (b))\n#define Min(a, b) ((a) < (b) ? (a) : (b))\n#define Swap(a, b) ((a) ^= (b), (b) ^= (a), (a) ^= (b))\n#define writeln(x) (write(x), putchar('\\n'))\n#define lowbit(x) ((x)&(-(x)))\nusing namespace std;\nconst int N = 100000;\nconst int yzd = 1e9+7;\nvoid read(int &x) {\n    char ch; bool flag = 0;\n    for (ch = getchar(); !isdigit(ch) && ((flag |= (ch == '-')) || 1); ch = getchar());\n    for (x = 0; isdigit(ch); x = (x<<1)+(x<<3)+ch-48, ch = getchar());\n    x *= 1-2*flag;\n}\nvoid print(int x) {if (x > 9) print(x/10); putchar(x%10+48); }\nvoid write(int x) {if (x < 0) putchar('-'); print(Abs(x)); }\n\nint n, m, s, t, u, v, c;\nstruct tt {int to, next, cost; }edge[(N<<2)+5];\nint path[N+5], top;\nint ans1[N+5], ans2[N+5], vis[N+5], in[N+5];\nLL dist1[N+5], dist2[N+5];\nqueue<int>Q;\nvector<int>to[N+5];\n\nvoid add(int u, int v, int c) {\n    edge[++top].to = v, edge[top].cost = c, edge[top].next = path[u], path[u] = top;\n}\nvoid SPFA(int s, LL *dist) {\n    dist[s] = 0; Q.push(s); vis[s] = 1;\n    while (!Q.empty()) {\n\tint u = Q.front(); Q.pop(); vis[u] = 0;\n\tfor (int i = path[u]; i; i = edge[i].next)\n\t    if (dist[edge[i].to] > dist[u]+edge[i].cost) {\n\t\tdist[edge[i].to] = dist[u]+edge[i].cost;\n\t\tif (!vis[edge[i].to]) {\n\t\t    vis[edge[i].to] = 1; Q.push(edge[i].to);\n\t\t}\n\t    }\n    }\n}\nvoid topsort(int s, LL *dist, int *ans) {\n    for (int u = 1; u <= n; u++) {\n\tto[u].clear();\n\tfor (int i = path[u]; i; i = edge[i].next)\n\t    if (dist[edge[i].to] == dist[u]+edge[i].cost) to[u].push_back(edge[i].to), ++in[edge[i].to];\n    }\n    ans[s] = 1; Q.push(s);\n    while (!Q.empty()) {\n\tint u = Q.front(), size = to[u].size(); Q.pop();\n\tfor (int i = 0; i < size; i++) {\n\t    if (--in[to[u][i]] == 0) Q.push(to[u][i]); (ans[to[u][i]] += ans[u]) %= yzd;\n\t}\n    }\n}\nvoid work() {\n    read(n), read(m), read(s), read(t);\n    for (int i = 1; i <= m; i++) {\n\tread(u), read(v), read(c); add(u, v, c); add(v, u, c);\n    }\n    memset(dist1, 127/3, sizeof(dist1));\n    SPFA(s, dist1); topsort(s, dist1, ans1);\n    memset(dist2, 127/3, sizeof(dist2));\n    SPFA(t, dist2); topsort(t, dist2, ans2);\n    int ans = 1ll*ans1[t]*ans1[t]%yzd;\n    for (int u = 1; u <= n; u++) {\n\tif (dist1[u] == dist2[u] && dist2[u]*2 == dist1[t]) (ans -= 1ll*ans1[u]*ans1[u]%yzd*ans2[u]%yzd*ans2[u]%yzd) %= yzd;\n\tfor (int i = path[u]; i; i = edge[i].next)\n\t    if (dist1[u]+edge[i].cost+dist2[edge[i].to] == dist1[t] && dist1[u]*2 < dist1[t] && dist2[edge[i].to]*2 < dist1[t])\n\t\t(ans -= 1ll*ans1[u]*ans1[u]%yzd*ans2[edge[i].to]%yzd*ans2[edge[i].to]%yzd) %= yzd;\n    }\n    writeln((ans+yzd)%yzd);\n}\nint main() {\n    work();\n    return 0;\n}\n```",
        "postTime": 1523520816,
        "uid": 11773,
        "name": "NaVi_Awson",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 AT3883 \u3010Avoiding Collision\u3011"
    },
    {
        "content": "### P.S.\n\u9e23\u8c22 @[zhouchenyuan005](https://www.luogu.com.cn/user/87416)\uff0c\u7b14\u8005\u5982\u679c\u6ca1\u6709\u548c\u4ed6\u8ba8\u8bba\u8fc7\u6ca1\u6cd5\u505a\u51fa\u6b64\u9898\u3002  \n### Discription.\n\u7ed9\u5b9a\u4e00\u4e2a**\u5e26\u6743\u65e0\u5411\u56fe**\uff0c\u4ee5\u53ca\u8d77\u70b9\u548c\u7ec8\u70b9\u3002  \n\u6709\u4e24\u4e2a\u4eba\u5728\u8d77\u70b9\u548c\u7ec8\u70b9\u51fa\u53d1\uff0c\u76f8\u5411\u800c\u884c\uff08  \n\u6c42\u4ed6\u4eec\u4e0d\u76f8\u9047\u7684\u65b9\u6848\u6570\u3002  \n\n### Solution.\n\u9996\u5148\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u7ed3\u8bba\uff1a\n> \u5982\u679c\u6709\u4e00\u6761\u8fb9 $\\{u,v\\}$ \u5728\u6700\u77ed\u8def\u4e0a\uff0c\u90a3 $dis_{s,u}+w_{u,v}=dis_{s,v}$\u3002\n\n\u7136\u540e\u6211\u4eec\u5c31\u628a\u9898\u76ee\u4e2d\u7684\u6700\u77ed\u8def\u8fd9\u4e2a\u9650\u5236\u53bb\u6389\u4e86\u3002  \n\u4e8e\u662f\u6211\u4eec\u628a\u9898\u76ee\u8f6c\u5316\u6210\u8981\u6c42\u4e00\u5f20\u56fe\u7684\u4e0d\u81ea\u4ea4\u7ecf\u8fc7\u4e24\u4e2a\u70b9\u7684\u73af\u6570\u3002  \n\u7136\u540e\u636e @[zhouchenyuan005](https://www.luogu.com.cn/user/87416)\u5de8\u4f6c \u8bf4\u8fd9\u662f\u4e2a NP \u95ee\u9898\uff0c\u5047\u4e86\uff08\u8fd9\u662f\u7b14\u8005\u539f\u6765\u7684\u601d\u8def\u3002  \n\n\u90a3\u4e48\u5f88\u663e\u7136\uff0c\u8fd9\u9898\u5f97\u7528\u6700\u77ed\u8def\u7684\u6027\u8d28\u3002  \n\u56e0\u4e3a\u8fb9\u6743\u4e3a\u6b63\uff0c\u6240\u4ee5\u5047\u8bbe\u6211\u4eec\u628a\u6240\u6709\u5728\u6700\u77ed\u8def\u4e0a\u7684\u8fb9\u8fde\u6210\u4e00\u5f20\u56fe\uff0c\u8fd9\u5f20\u56fe\u663e\u7136\u662f `Dag`\u3002  \n\u90a3\u4e48\u5728\u8fd9\u4e2a\u56fe\u4e0a\u8dd1\u4e24\u904d dp \u5c31\u597d\u4e86\uff0c\u53ef\u4ee5\u6c42\u51fa\u5230\u8fbe\u6bcf\u4e2a\u70b9\u7684\u8def\u5f84\u6570\u91cf\u3002  \n\u6700\u540e\u518d\u5f97\u5230\u4ece\u539f\u70b9\u5230\u6c47\u70b9\u7684\u8def\u5f84\u6570\uff0c\u5b83\u7684\u5e73\u65b9\u5c31\u662f\u7b54\u6848\u3002\u3002\u3002\u53ef\u60dc\u663e\u7136\u592a naive \u4e86\u3002  \n\n\u56e0\u4e3a\u539f\u56fe\u8981\u6c42\u8def\u5f84\u4e0d\u81ea\u4ea4\uff0c\u90a3\u4e48\u6211\u4eec\u65a5\u6389\u81ea\u4ea4\u7684\u90e8\u5206\u5c31\u597d\u4e86\u3002  \n\u56e0\u4e3a\u4e24\u4e2a\u4eba\u90fd\u5f97\u8d70\u6700\u77ed\u8def\uff0c\u6240\u4ee5\u4ed6\u4eec\u53ea\u4f1a\u76f8\u9047\u4e00\u6b21\u3002  \n\u90a3\u4e48\u6211\u4eec\u679a\u4e3e\u4ed6\u4eec\u76f8\u9047\u5728\u70b9\u6216\u8005\u8fb9\u4e0a\uff0c\u51cf\u53bb\u4eces\u5230\u5b83\u4ee5\u53ca\u5b83\u5230\u6c47\u70b9\u5e73\u65b9\u7684\u79ef\u5c31\u597d\u4e86\u3002  \n\n\u7136\u540e\u6b64\u9898\u5c31\u505a\u5b8c\u4e86\u3002\u3002\u3002\n\n\u4ece s \u5230\u4e00\u4e2a\u70b9\u53ea\u7ecf\u8fc7\u6700\u77ed\u8def\u7684\u8def\u5f84\u65b9\u6848\u6570\u8fd8\u53ef\u4ee5\u76f4\u63a5\u7528 dijkstra \u7b97\uff0c\u4e0b\u9762\u4ee3\u7801\u5c31\u662f\u7528\u8fd9\u79cd\u65b9\u6cd5\u7b97\u7684\u3002  \n### Coding.\n```cpp\n//\u613f\u4f60\u548c\u4f60\u91cd\u8981\u7684\u4eba\u80fd\u591f\u518d\u6b21\u91cd\u9022\uff01\n#include<bits/stdc++.h>\nusing namespace std;\ntemplate<typename T>inline void read(T &x)\n{\n\tx=0;char c=getchar(),f=0;\n\tfor(;c<'0'||c>'9';c=getchar()) if(!(c^45)) f=1;\n\tfor(;c>='0'&&c<='9';c=getchar()) x=(x<<1)+(x<<3)+(c^48);\n\tif(f) x=-x;\n}\ntypedef long long ll;const int P=1e9+7;\nstruct edge{int to,w,nxt;}e[400005];\nint n,m,s,t,et,head[200005],dp1[200005],dp2[200005];ll ds1[200005],ds2[200005];\ninline void adde(int x,int y,int w) {e[++et]=(edge){y,w,head[x]},head[x]=et;}\ninline void dijk(int s,int *dp,ll *ds)\n{\n\tpriority_queue<pair<ll,int>,vector<pair<ll,int> >,greater<pair<ll,int> > >p;\n\tds[s]=0,p.push(make_pair(0,s)),dp[s]=1;for(int i=1;i<=n;i++) if(i^s) ds[i]=1e18;\n\twhile(!p.empty())\n\t{\n\t\tint x=p.top().second;ll w=p.top().first;p.pop();if(w^ds[x]) continue;\n\t\tfor(int i=head[x];i;i=e[i].nxt)\n\t\t\tif(ds[e[i].to]>ds[x]+e[i].w) dp[e[i].to]=dp[x],ds[e[i].to]=ds[x]+e[i].w,p.push(make_pair(ds[e[i].to],e[i].to));\n\t\t\telse if(ds[e[i].to]==ds[x]+e[i].w) (dp[e[i].to]+=dp[x])%=P;\n\t}\n}\nsigned main()\n{\n\tread(n),read(m),read(s),read(t);\n\tfor(int i=1,x,y,w;i<=m;i++) read(x),read(y),read(w),adde(x,y,w),adde(y,x,w);\n\tdijk(t,dp2,ds2),dijk(s,dp1,ds1);long long res=dp1[t];res=res*res%P;\n\tfor(int i=1;i<=n;i++) if((ds1[i]<<1)==ds1[t]) res=(res-1ll*dp1[i]*dp2[i]%P*dp1[i]%P*dp2[i]%P+P)%P;\n\tfor(int x=1;x<=n;x++) for(int i=head[x];i;i=e[i].nxt)\n\t\tif(ds1[x]+ds2[e[i].to]+e[i].w==ds1[t]&&ds1[x]+e[i].w>ds2[e[i].to]&&ds2[e[i].to]+e[i].w>ds1[x])\n\t\t\tres=(res-1ll*dp1[x]*dp2[e[i].to]%P*dp1[x]%P*dp2[e[i].to]+P)%P;\n\treturn printf(\"%lld\\n\",(res%P+P)%P),0;\n}\n```",
        "postTime": 1606558138,
        "uid": 44805,
        "name": "Leap_Frog",
        "ccfLevel": 7,
        "title": "AT3883 [ARC090C] Avoiding Collision\uff08\u9898\u89e3\uff09"
    },
    {
        "content": "## \u9898\u610f\n\nS \u548c T \u4e24\u4e2a\u4eba\uff0cS \u8981\u8d70\u5230 T\uff0cT \u8981\u8d70\u5230 S\uff0c\u4e0d\u9047\u89c1\u7684\u65b9\u6848\u6570\u3002\n\n\u9047\u89c1\u7684\u5b9a\u4e49:\u8d70\u76f8\u540c\u7684\u8def\u7a0b\uff0c\u5728\u8fb9\u4e0a\u6216\u8005\u5728\u70b9\u4e0a\u76f8\u9047\u3002\n\n## \u9898\u89e3\n\n\u6b63\u96be\u5219\u53cd\uff0c\u6ca1\u4efb\u4f55\u9650\u5236\u7684\u6761\u4ef6\u4e0b\uff0c\u7b54\u6848\u663e\u7136\u662f $way_{s,t} \\times way_{s,t}$\u3002\n\n\u6211\u4eec\u53d1\u73b0\u4e24\u4e2a\u4eba **\u81f3\u591a** \u78b0\u5230\u4e00\u6b21\uff0c\u51cf\u6389\u5728\u8fb9\u4e0a\u9047\u5230\u7684\u65b9\u6848\u6570\u548c\u5728\u70b9\u4e0a\u9047\u89c1\u7684\u65b9\u6848\u6570\uff0c\u7136\u540e\u5c31\u6ca1\u4e86\u3002\n\n\n\u5728\u8fb9\u4e0a\u9047\u5230: $ds_x + w > dt_y$ \u5e76\u4e14 $dt_y + w > ds_x$\u3002\n\n\u6ce8\u610f\u5230\u662f\u53cc\u5411\u8fb9\uff0c\u8981\u7b97 $(x,y)$ \u548c $(y,x)$ \u4f46\u662f\u4e24\u4e2a\u6700\u591a\u88ab\u7edf\u8ba1\u4e00\u6b21\uff08\n\n\u5728\u70b9\u4e0a\u9047\u89c1\u663e\u7136\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define rep(i, x, y) for (int i = x; i < y; i++)\n#define all(v) begin(v), end(v)\nusing namespace std;\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\ntemplate<class T>\nistream &operator>> (istream &in, vector<T> &v) {\n for (auto &x : v) {\n  in >> x;\n }\n return in;\n}\nusing ll=long long;\nconst int P = 1e9 + 7;\nint main() {\n cin.tie(nullptr)->sync_with_stdio(false);\n int n,m,s,t;\n cin>>n>>m>>s>>t;--s;--t;\n vector<vector<pair<int,int>>>g(n);\n vector<tuple<int,int,int>>e(m);\n vector<int>ways(n),wayt(n);\n rep(i,0,m){\n  int x,y,w;cin>>x>>y>>w;--x,--y;e[i]=tie(x,y,w);\n  g[x].emplace_back(y,w),g[y].emplace_back(x,w);\n }\n vector<bool>vis(n,false);\n vector<ll>ds(n,1e18);\n priority_queue<pair<ll,int>,vector<pair<ll,int>>,greater<pair<ll,int>>>q;\n q.emplace(ds[s]=0,s),ways[s]=1;\n while(!q.empty()){\n  auto tmp=q.top();q.pop();ll d;int u;tie(d,u)=tmp;\n  if(vis[u])continue;vis[u]=1;\n  for(auto &t:g[u]){\n   int v,w;tie(v,w)=t;if(ds[v]>d+w)q.emplace(ds[v]=d+w,v),ways[v]=0;\n   if(ds[v]==d+w)ways[v]+=ways[u],ways[v]%=P;\n  }\n }\n vis.assign(n,false);vector<ll>dt(n,1e18);\n q.emplace(dt[t]=0,t),wayt[t]=1;\n while(!q.empty()){\n  auto tmp=q.top();q.pop();ll d;int u;tie(d,u)=tmp;\n  if(vis[u])continue;vis[u]=1;\n  for(auto&t:g[u]){\n   int v,w;tie(v,w)=t;if(dt[v]>d+w)q.emplace(dt[v]=d+w,v),wayt[v]=0;\n   if(dt[v]==d+w)wayt[v]+=wayt[u],wayt[v]%=P;\n  }\n }\n int ans=(long long)ways[t]*wayt[s]%P;ll dst=ds[t];\n rep(i,0,n)if(ds[i]==dt[i]&&ds[i]+dt[i]==dst)ans-=(long long)ways[i]*ways[i]%P*wayt[i]%P*wayt[i]%P,ans+=ans>>31&P;\n for(auto &t:e){\n  int x,y,w;tie(x,y,w)=t;\n  if(ds[x]+dt[y]+w==dst&&ds[x]+w>dt[y]&&dt[y]+w>ds[x]){ans-=(long long)ways[x]*wayt[y]%P*ways[x]%P*wayt[y]%P,ans+=ans>>31&P;}\n  swap(x,y);\n  if(ds[x]+dt[y]+w==dst&&ds[x]+w>dt[y]&&dt[y]+w>ds[x]){ans-=(long long)ways[x]*wayt[y]%P*ways[x]%P*wayt[y]%P,ans+=ans>>31&P;}\n }\n cout<<ans<<\"\\n\";\n}\n```",
        "postTime": 1630676474,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "AT3883 [ARC090C] Avoiding Collision"
    }
]