[
    {
        "content": "# \u57fa\u672c\u5206\u6790\n\n\u4e2d\u4f4d\u6570\u7684\u5b9a\u4e49\u4e0d\u518d\u8d58\u8ff0\u3002\n\n\u9996\u5148\u5206\u6790\u7b54\u6848\u7684\u6027\u8d28\uff0c\u82e5\u4e00\u4e2a\u5927\u5c0f\u4e3a $n$ \u7684\u96c6\u5408 $S$ \u7684\u4e2d\u4f4d\u6570\u662f $x$\uff0c\u5219 $x$ \u4e00\u5b9a\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a\n\n- $S$ \u4e2d\u81f3\u5c11\u5b58\u5728 $\\left\\lceil\\frac{n}{2}\\right\\rceil$ \u4e2a\u6570\u5927\u4e8e\u7b49\u4e8e $x$\u3002\n\n- $x$ \u662f\u6ee1\u8db3\u6761\u4ef6 $1$ \u4e2d\u6700\u5927\u7684\u6570\u3002\n\n\u56e0\u6b64\u7b54\u6848\u5177\u6709\u5355\u8c03\u6027\uff0c\u53ef\u4ee5\u91c7\u7528\u4e8c\u5206\u7b54\u6848\u7684\u65b9\u5f0f\u3002\n\n# \u5177\u4f53\u5b9e\u73b0\n\n\u5728\u4e8c\u5206\u7b54\u6848\u7684\u80cc\u666f\u4e0b\uff0c\u9898\u76ee\u53ef\u4ee5\u8f6c\u6362\u4e3a\uff1a\u5bf9\u4e8e\u6570\u7ec4 $a$\uff0c\u6c42\u4e2d\u4f4d\u6570\u5927\u4e8e\u7b49\u4e8e $x$ \u7684\u533a\u95f4 $(l,r)$ \u6570\u91cf\u3002\n\n\u8003\u8651\u8f85\u52a9\u6570\u7ec4 $b$\uff0c$b_i=\\begin{array}{l} \n  \\left\\{\\begin{matrix} \n  1 (a_i\\geq x) \\\\ \n  -1 (a_i<x) \\\\\n\\end{matrix}\\right.    \n\\end{array}$\uff0c\u5982\u679c\u533a\u95f4 $(l,r)$ \u7684\u4e2d\u4f4d\u6570\u5927\u4e8e\u7b49\u4e8e $x$\uff0c\u5219 \n$\\sum_{i=l}^{r}b_i\\geq0$\u3002\n\n\u4e8e\u662f\u9898\u76ee\u53c8\u8f6c\u6362\u4e3a\uff1a\u5bf9\u4e8e\u6570\u7ec4 $b$\uff0c\u6c42\u51fa\u533a\u95f4\u548c\u975e\u8d1f\u7684\u533a\u95f4\u6570\u3002\n\n\u4f7f\u7528\u524d\u7f00\u548c\u53ef\u7b80\u5316\u4e3a\u6c42\u6ee1\u8db3 $sum_r-sum_{l-1}\\geq0$ \u7684 $(l,r)$ \u6570\u91cf\u3002\n\n\u626b\u4e00\u904d\u524d\u7f00\u6570\u7ec4\uff0c\u5e76\u7528\u6811\u72b6\u6570\u7ec4\u7edf\u8ba1\u5c0f\u4e8e\u7b49\u4e8e $sum_i$ \u7684\u603b\u6570\u5373\u53ef\u3002\n\n\u6ce8\u610f\u7531\u4e8e $b$ \u6570\u7ec4\u53ef\u80fd\u4e3a\u8d1f\u6570\uff0c\u6240\u4ee5\u5728\u6811\u72b6\u6570\u7ec4\u7edf\u8ba1\u65f6\u9700\u8981\u52a0\u4e0a $n+1$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\log A_i)$ \u7684\u4e8c\u5206 $\\times O(N \\log N) $ \u7684 $ \\texttt{check}$ \u51fd\u6570 $=O(N\\log N\\log A_i)=10^5\\times17\\times27\\approx5\\times10^6$\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\n\n# \u4ee3\u7801\uff08\u8bf7\u52ff\u6284\u88ad\uff09\n\n```cpp\n#include<bits/stdc++.h>\n#define N 100005\n#define int long long //n^2 \u53ef\u80fd\u4f1a\u7206 int \n#define lb(x) (x&(-x))\nusing namespace std;\nint n,a[N],b[N],sum[N],c[N*2];//\u7531\u4e8e\u63d2\u5165\u65f6\u52a0\u4e86 N\uff0c\u6240\u4ee5\u8981\u5f00\u4e8c\u500d \nvoid add(int k,int x)\n{\n\tfor(;k<2*N;k+=lb(k)) c[k]+=x;\n}\nint ask(int k)\n{\n\tint s=0;\n\tfor(;k;k-=lb(k)) s+=c[k];\n\treturn s;\n}\nint check(int x)\n{\n\tint ans=0;\n\tmemset(c,0,sizeof(c));\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(a[i]>=x) b[i]=1;\n\t\telse b[i]=-1;\n\t\tsum[i]=sum[i-1]+b[i];\n\t}\n\tadd(N,1);//\u63d2\u5165 sum[0]\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tans+=ask(sum[i]+N);\n\t\tadd(sum[i]+N,1);\n\t}\n\tif(ans>=(n*(n+1)/2-1)/2+1) return 1;\n//\t(x-1)/2+1 \u662f\u5bf9 (x/2) \u5411\u4e0a\u53d6\u6574\u7684\u4e00\u79cd\u529e\u6cd5 \n//\t\u4e5f\u53ef\u4ee5\u5199\u6210 if(ans*2>=n*(n+1)/2) return 1;\n\treturn 0;\n}\nsigned main()\n{\n\tscanf(\"%lld\",&n);\n\tfor(int i=1;i<=n;i++) scanf(\"%lld\",&a[i]);\n\tint l=1,r=1e9,ans;\n\twhile(l<=r) //\u4e8c\u5206 \n\t{\n\t\tint mid=(l+r)/2;\n\t\tif(check(mid)) ans=mid,l=mid+1;\n\t\telse r=mid-1;\n\t}\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1664708187,
        "uid": 447493,
        "name": "bugmaker3243",
        "ccfLevel": 5,
        "title": "AT4351 [ARC101B] Median of Midians \u9898\u89e3"
    },
    {
        "content": "## ABC107D Median of Medians\n\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/AT_arc101_b)\n\n\u8003\u8651\u4e0b\u6b63\u5e38\u6c42\u4e2d\u4f4d\u6570\u4e8c\u5206\u7684\u65f6\u5019\u6211\u4eec\u662f\u600e\u4e48\u6c42\u7684\uff1a\u5047\u5982\u5f53\u524d\u4e8c\u5206\u7684\u503c\u4e3a $mid$\uff0c\u5c06\u539f\u5e8f\u5217\u4e2d\u5927\u4e8e\u7b49\u4e8e $mid$ \u7684\u6570\u8bbe\u4e3a $1$\uff0c\u5c0f\u4e8e $mid$ \u7684\u6570\u8bbe\u4e3a $-1$\uff0c\u82e5\u6b64\u65f6\u6574\u4e2a\u5e8f\u5217\u7684\u548c\u4e3a\u975e\u8d1f\u6570\uff0c\u5c31\u8bf4\u660e\u539f\u5e8f\u5217\u7684\u4e2d\u4f4d\u6570\u5927\u4e8e\u7b49\u4e8e $mid$\u3002\n\n\u90a3\u4e48\u518d\u770b\u5230\u8fd9\u4e00\u9898\uff0c\u5176\u5b9e\u5c31\u662f\u5728\u6c42\u5904\u7406\u4e4b\u540e\u662f\u5426\u6709\u81f3\u5c11\u4e00\u534a\u7684\u5b50\u6bb5\uff0c\u5176\u5b50\u6bb5\u548c\u5927\u4e8e\u7b49\u4e8e $0$\u3002\u8fd9\u662f\u4e2a\u7ecf\u5178\u95ee\u9898\u4e86\uff0c\u53ef\u4ee5\u4f7f\u7528\u524d\u7f00\u548c\u4e0e\u6811\u72b6\u6570\u7ec4\u6765\u7ef4\u62a4\u3002\u5177\u4f53\u5730\uff0c\u8bb0 $s$ \u4e3a\u5904\u7406\u540e\u7684\u5e8f\u5217\u7684\u524d\u7f00\u548c\uff0c\u90a3\u4e48\u4ee5\u5f53\u524d\u70b9 $i$ \u7ed3\u5c3e\u7684\u548c\u5927\u4e8e\u7b49\u4e8e $0$ \u7684\u5b50\u6bb5\u6570\u5176\u5b9e\u5c31\u662f\uff1a\n\n$$\n\\sum_{j=1}^{i} [s_i-s_{j-1}\\ge0]\n$$\n\n\u5728\u503c\u57df\u4e0a\u5f00\u4e2a\u6811\u72b6\u6570\u7ec4\u5c31\u884c\u4e86\u3002\u6ce8\u610f\u548c\u53ef\u80fd\u4e3a\u8d1f\u6570\uff0c\u56e0\u6b64\u5c06\u4e0b\u6807\u5411\u53f3\u5e73\u79fb $n$ \u4f4d\u3002\n\n```cpp\n#define ID(x) x+n\nint n,lmt,a[N],b[N],c[N],ss[N];\nvoid add(int x,int y){\n\twhile(x<=ID(n)){\n\t\tc[x]+=y;\n\t\tx+=lowbit(x);\n\t}\n}\nint query(int x){\n\tint res=0;\n\tfor(;x;x-=lowbit(x)) res+=c[x];\n\treturn res;\n}\nbool check(int mid){\n\tmemset(c,0,sizeof(c));\n\tfor(int i=1;i<=n;i++){\n\t\tif(a[i]>=mid) b[i]=1;\n\t\telse b[i]=-1;\n\t\tss[i]=ss[i-1]+b[i];\n\t}\n\tadd(ID(0),1);\n\tint cnt=0;\n\tfor(int i=1;i<=n;i++){\n\t\tcnt+=query(ID(ss[i]));\n\t\tadd(ID(ss[i]),1);\n\t}\n\tif((cnt<<1)>=(n*(n+1)>>1)) return 1;\n\treturn 0;\n}\nvoid Main(){\n\tn=read();\n\tfor(int i=1;i<=n;i++) a[i]=read(),lmt=max(lmt,a[i]);\n\tint l=1,r=lmt,ans=-1;\n\twhile(l<=r){\n\t\tint mid=(l+r)>>1;\n\t\tif(check(mid)) l=mid+1,ans=mid;\n\t\telse r=mid-1;\n\t}\n\tprintf(\"%lld\",ans);\n}\n```",
        "postTime": 1673332116,
        "uid": 530180,
        "name": "King_Powers2021",
        "ccfLevel": 4,
        "title": "ABC107D \u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u5b9a\u4e49\u4e2d\u4f4d\u6570\uff0c\u5c06 $n$ \u4e2a\u6570\u6392\u5e8f\u540e\uff0c\u5982\u679c\u6709\u5947\u6570\u4e2a\u6570\uff0c\u5219\u4e2d\u4f4d\u6570\u4e3a $a[\\frac{n}{2}]$\uff0c\u5426\u5219\u4e2d\u4f4d\u6570\u4e3a $a[\\frac{n}{2}+1]$\n\n\u8ba9\u4f60\u6c42\u51fa $\\frac{n(n+1)}{2}$ \u4e2a\u533a\u95f4\u4e2d\u4f4d\u6570\u7684\u4e2d\u4f4d\u6570\n\n\u9996\u5148\u8003\u8651\u4e00\u4e0b\u4e2d\u4f4d\u6570\u7684\u6027\u8d28\uff1a\n\n* \u5982\u679c $n$ \u4e3a\u5947\u6570\uff0c\u4e2d\u4f4d\u6570\u6ee1\u8db3 \n\n$$num_{a[i]\\geq a[mid]}=num_{a[i]\\leq a[mid]}$$\n\n* \u5982\u679c $n$ \u4e3a\u5076\u6570\uff0c\u4e2d\u4f4d\u6570\u6ee1\u8db3 \n\n$$num_{a[i]\\geq a[mid]}=num_{a[i]\\leq a[mid]}-1$$\n\n\u4e0d\u59a8\u6211\u4eec\u4e8c\u5206\u7b54\u6848 $x$\uff0c\u7136\u540e\u7528\u4e2d\u4f4d\u6570\u7684\u6027\u8d28 $check$ \u7b54\u6848\u662f\u5426\u6b63\u786e\uff0c\u73b0\u5728\u95ee\u9898\u662f\u5982\u4f55\u6c42\u51fa\u6709\u591a\u5c11\u4e2a\u533a\u95f4\u7684\u4e2d\u4f4d\u6570\u5927\u4e8e\u7b49\u4e8e $x$\uff0c\u6709\u591a\u5c11\u4e2a\u533a\u95f4\u7684\u4e2d\u4f4d\u6570\u5c0f\u4e8e\u7b49\u4e8e $x$\n\n\u6211\u4eec\u5c06 $\\geq x$ \u7684\u6570\u7f6e\u4e3a $1$\uff0c$< x$ \u7684\u6570\u7f6e\u4e3a $-1$\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u4e00\u4e2a\u533a\u95f4\u7684\u548c $\\geq 0$\uff0c\u8bf4\u660e\u8fd9\u4e2a\u533a\u95f4\u7684\u4e2d\u4f4d\u6570 $\\geq x$\uff0c\u5982\u679c\u8fd9\u4e2a\u548c $< 0$\uff0c\u8bf4\u660e\u8fd9\u4e2a\u533a\u95f4\u7684\u4e2d\u4f4d\u6570 $\\leq x$\n\n\u6839\u636e\u6c42\u533a\u95f4\u548c $sum[r]-sum[l-1]$ \u7684\u5f0f\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a\u53f3\u7aef\u70b9\u6c42\u51fa\u5de6\u8fb9\u6709\u591a\u5c11\u4e2a\u70b9\u7684 $sum[l] \\leq sum[r]$\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u6c42\u51fa $sum[l] > sum[r]$ \u7684\u4e2a\u6570\uff0c\u8fd9\u4e2a\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4e00\u4e0b\u5c31\u884c\u4e86\n\n\u6700\u540e\u590d\u6742\u5ea6\u662f\u4e8c\u5206\u5185\u5957\u4e00\u4e2a $\\mathcal{O}(n\\log n)$\uff0c\u6240\u4ee5\u662f $\\mathcal{O}(n\\log^2 n)$ \u7684\n\n$\\mathcal{Code}$\n\n```c++\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n\ntypedef long long ll;\n\nusing namespace std;\n\nconst int maxn = 2e5 + 50, INF = 0x3f3f3f3f, base = 1e5;\n\ninline int read () {\n\tregister int x = 0, w = 1;\n\tregister char ch = getchar ();\n\tfor (; ch < '0' || ch > '9'; ch = getchar ()) if (ch == '-') w = -1;\n\tfor (; ch >= '0' && ch <= '9'; ch = getchar ()) x = x * 10 + ch - '0';\n\treturn x * w;\n}\n\nint n, typ, a[maxn], b[maxn], c[maxn], tree[maxn];\n\ninline void Insert0 (register int x) {\n\tfor (; x <= maxn; x += x & -x) tree[x] ++;\n}\n\ninline int Query0 (register int x, register int ans = 0) {\n\tfor (; x; x -= x & -x) ans += tree[x];\n\treturn ans;\n}\n\ninline void Insert1 (register int x) {\n\tfor (; x; x -= x & -x) tree[x] ++;\n}\n\ninline int Query1 (register int x, register int ans = 0) {\n\tfor (; x <= maxn; x += x & -x) ans += tree[x];\n\treturn ans;\n}\n\ninline bool Check (register int x, register ll num0 = 0, register ll num1 = 0) {\n\tmemset (tree, 0, sizeof tree), Insert0 (0 + base);\n\tfor (register int i = 1; i <= n; i ++) c[i] = a[i] < x ? -1 : 1;\n\tfor (register int i = 1, res = 0; i <= n; i ++) \n\t\tres += c[i], num0 += Query0 (res + base), Insert0 (res + base);\n\tmemset (tree, 0, sizeof tree), Insert1 (0 + base);\n\tfor (register int i = 1, res = 0; i <= n; i ++) \n\t\tres += c[i], num1 += Query1 (res + base + 1), Insert1 (res + base);\n\treturn num0 >= num1 - typ;\n}\n\nint main () {\n\tn = read(), typ = 1ll * n * (n + 1) / 2 % 2 == 0;\n\tfor (register int i = 1; i <= n; i ++) a[i] = b[i] = read();\n\tsort (b + 1, b + n + 1);\n\tregister int L = 1, R = n;\n\twhile (L <= R) {\n\t\tregister int mid = (L + R) >> 1;\n\t\tif (Check (b[mid])) L = mid + 1;\n\t\telse R = mid - 1;\n\t}\n\treturn printf (\"%d\\n\", b[L - 1]), 0;\n}\n```",
        "postTime": 1624155211,
        "uid": 335193,
        "name": "Rubyonly",
        "ccfLevel": 8,
        "title": "ARC101B \u9898\u89e3"
    },
    {
        "content": "~~\u9898\u76ee\u7ffb\u8bd1\u7b80\u6d01\u660e\u4e86\uff0c\u597d\u8bc4\uff01~~\n\n\u7eaa\u5ff5atcoder\u63d0\u4ea4\u6062\u590d\uff0c\u5199\u4e00\u7bc7\u9898\u89e3\u3002\n\n\u8fd9\u9053\u9898\u662f\u6211\u8bfe\u4e0a\u7684\u4e00\u9053\u9898\uff0c\u7531\u4e8e\u5361\u4e00\u4e9b\u65f6\u95f4\uff08$n$\u6700\u5927$10^5$\uff0c\uff09\u8003\u8651\u7528\u4e8c\u5206\u3002\n\n\u5982\u679c\u4e00\u4e2a\u6570$x$\u6ee1\u8db3\u5c0f\u4e8e\u7b49\u4e8e$x$\u7684\u6570\u81f3\u5c11\u6709\u5e8f\u5217\u957f\u5ea6$L\\div2+1$\u4e2a\uff0c\u90a3\u4e48$x$\u5c31\u662f\u4e2d\u4f4d\u6570\u3002\n\n\u4e8e\u662f\u6211\u4eec\u628a\u95ee\u9898\u8f6c\u5316\u4e3a\u4e86\uff1a\u6709\u591a\u5c11\u4e2a\u533a\u95f4\u7684\u4e2d\u4f4d\u6570\u5c0f\u4e8e\u7b49\u4e8e$x$\u3002\n\n\u5728\u539f\u6570\u5217\u4e0a\u505a\u524d\u7f00\u548c\uff0c\u4ee3\u8868$[l,r]$\u7684\u548c$=sum_r-sum_{r-1}$\u3002\n\n\u4ee5\u4e0a\u603b\u4f53\u601d\u60f3\u53ef\u4ee5\u4f7f\u7528\u5f52\u5e76\u6392\u5e8f\u601d\u60f3\u89e3\u51b3\u3002\n\n~~\u590d\u6742\u5ea6\u542c\u8001\u5e08\u8bf4\u5e94\u8be5\u662f$O(nlog^2n)$\uff0c\u4e0d\u8fc7\u6211\u4e5f\u4e0d\u786e\u5b9a\u3002~~\n\n## \u4e3b\u9898\u601d\u8def\u4ee3\u7801\n\ncheck\u51fd\u6570\uff08\u5624\u8bed\u4e0d\u597d\u6211\u5c31\u8981\u5199\u6210chack\uff09\n\n```cpp\nbool chack(ll mid)\n{\n\ts[0]=0;\n\tfor(ll i=1; i<=n; i++)\n\t{\n\t\tif(a[i]>=mid) s[i]=s[i-1]+1;\n\t\telse s[i]=s[i-1]-1;\n\t}\n\tll ttmp=msort(0,n+1);\n\tif(ans-ttmp>=(ans+1)/2) return true;\n\telse return false;\n}\n```\n\n\u6392\u5e8f\u51fd\u6570\n\n```cpp\nll msort(ll l,ll r)\n{\n\tll ttmp=0;\n\tif(r>l+1)\n\t{\n\t\tll mid=(l+r)/2;\n\t\tttmp=msort(l,mid)+msort(mid,r);\n\t\tfor(ll i=l; i<r; i++)\n\t\t{\n\t\t\ttmp[i]=s[i];\n\t\t}\n\t\tll tmp1=l,tmp2=mid,tmp3=l;\n\t\twhile(tmp1<mid && tmp2<r)\n\t\t{\n\t\t\tif(tmp[tmp1]<=tmp[tmp2]) s[tmp3++]=tmp[tmp1++];\n\t\t\telse\n\t\t\t{\n\t\t\t\ts[tmp3++]=tmp[tmp2++];\n\t\t\t\tttmp+=mid-tmp1;\n\t\t\t}\n\t\t}\n\t\twhile(tmp1<mid) s[tmp3++]=tmp[tmp1++];\n\t\twhile(tmp2<r) s[tmp3++]=tmp[tmp2++];\n\t}\n\treturn ttmp;\n}\n```\n~~\u4e3b\u51fd\u6570\u5b9e\u9645\u4e0a\u5c31\u662f\u4e2a\u4e8c\u5206\u6a21\u677f\uff0c\u5c31\u4e0d\u5c55\u793a\u4e86\u3002~~",
        "postTime": 1603804659,
        "uid": 231358,
        "name": "gtl_caiji",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 AT4351 \u3010[ARC101B] Median of Medians\u3011"
    },
    {
        "content": "# D - Median of Medians  \n\n\u770b\u9898\u76ee\u5c31\u5e94\u8be5\u53ef\u4ee5\u731c\u51fa\u8fd9\u9053\u9898\u662f\u4e2d\u4f4d\u6570\u7684\u4e2d\u4f4d\u6570\u3002  \n\n\u5927\u6982\u5c31\u662f\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u5e8f\u5217,\u5bf9\u5b83\u7684\u6240\u6709\u8fde\u7eed\u5b50\u533a\u95f4\u62ff\u51fa\u6765\u6c42\u4e2d\u4f4d\u6570(\u5982\u679c\u662f\u5076\u6570\u957f\u5ea6\u5c31\u53d6\u8f83\u5927\u7684\u90a3\u4e2a),\u518d\u5c06\u8fd9\u4e9b\u4e2d\u4f4d\u6570\u6392\u8d77\u6765\u6c42\u4e2d\u4f4d\u6570,\u95ee\u8fd9\u4e2a\u4e2d\u4f4d\u6570\u662f\u4ec0\u4e48\u3002  \n\n\u8fd9\u9053\u9898\u662f\u4e00\u9053\u4e0d\u9519\u7684\u9898\u76ee\u5427\uff0c\u53cd\u6b63\u6211\u6ca1\u60f3\u51fa\u6765\uff0c\u633a\u83dc\u7684\u3002  \n\n\u76f4\u63a5\u8003\u8651\u4e8c\u5206\u7b54\u6848\uff0c\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u64cd\u4f5c\uff0c\u628a\u5c0f\u4e8e\u7b49\u4e8e mid \u7684\u8bbe\u4e3a -1\uff0c\u628a\u5927\u4e8e\u5b83\u7684\u8bbe\u4e3a 1\uff0c\u518d\u6c42\u51fa\u524d\u7f00\u548c\uff0c\u8fd9\u6837\u5982\u679c\u4e00\u4e2a\u533a\u95f4\u7684\u548c\u5927\u4e8e 0, \u90a3\u4e48\u5c31\u662f\u5408\u6cd5\u7684\u3002\n\u6ce8\u610f\u4e8c\u5206\u7b54\u6848\u7684\u662f\u533a\u95f4\u7684\u4e2d\u4f4d\u6570\u4e3a\u5c0f\u4e8e\u7b49\u4e8e mid \u7684\u533a\u95f4\u6709\u591a\u5c11\u4e2a\u3002  \n\u7136\u540e\u8003\u8651\u5982\u4f55\u7ef4\u62a4\uff0c\u5176\u5b9e\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5c31\u884c\u4e86\u3002  \n\n\u4ee3\u7801\u4e0d\u957f \n```cpp\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int N = 2e5 + 5;\ninline int read(int x = 0) { return scanf(\"%d\", &x), x; }\nint n, a[N], c[N], b[N], sum[N], d[N];\nll cnt, value;\ninline int lowbit(int x) { return x & -x; }\ninline void add(int p) {\n\twhile(p <= 2*n + 1) { c[p]++, p += lowbit(p); }\n}\ninline ll get(int p, ll tmp = 0) {\n\twhile(p) { tmp += c[p], p -= lowbit(p); }\n\treturn tmp;\n}\nbool pan(int mid) {\n\tcnt = 0;\n\tfor(register int i = 1; i <= n; ++i) \n\t\tb[i] = a[i] > mid ? -1 : 1, sum[i] = sum[i-1] + b[i];\n\tmemset(c, 0, sizeof(c));\n\tadd(n+1);\n\tfor(register int i = 1; i <= n; ++i) {\n\t\tcnt += get(sum[i] + n), add(sum[i] + n + 1);\n\t}\n\treturn cnt >= value;\n}\nint main() {\n\tn = read(), value = 1ll*n*(n+1)/4+1;\n\tfor(int i = 1; i <= n; ++i) d[i] = a[i] = read();\n\tsort(d + 1, d + n + 1);\n\tint l = 1, r = n, mid = 0;\n\twhile(l <= r) {\n\t\tmid = (l + r) / 2;\n\t\tif(pan(d[mid])) r = mid - 1;\n\t\telse l = mid + 1;\n\t}\n\tcout << d[l] << '\\n';\n\treturn 0;\n}\n```",
        "postTime": 1602507005,
        "uid": 330886,
        "name": "longdie",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 AT4351 \u3010[ARC101B] Median of Medians\u3011"
    }
]