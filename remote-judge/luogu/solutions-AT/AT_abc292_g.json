[
    {
        "content": "### Part1 \u524d\u8a00\n\n\u9898\u610f\uff1a\u7ed9\u5b9a $n$ \u4e2a $m$ \u4f4d\u6570 $a_i$\uff0c\u6709 `?` \u8868\u793a\u8be5\u4f4d\u4e0d\u786e\u5b9a\uff0c\u6211\u4eec\u9700\u8981\u6c42\u51fa\u5c06\u6bcf\u4e00\u4e2a `?` \u8f6c\u6362\u6210 $0\\sim9$ \u4f7f\u5f97 $a_i<a_{i+1}$ \u7684\u65b9\u6848\u6570\uff0c$n,m\\le40$\u3002\n\n\u8981\u662f $m\\le7$ \u5c31\u597d\u4e86\uff01\u4e0d\u8fc7\u600e\u4e48\u53ef\u80fd\uff1f\n\n\u5f53\u7136\u5982\u679c\u6bcf\u4e2a\u6570\u5b57\u7684 `?` \u90fd\u4e0d\u8d85\u8fc7 $7$ \u4e5f\u597d\u554a\uff01\u7136\u800c\u4e5f\u4e0d\u53ef\u80fd\u3002\n\n\u5f53\u7136\u8fd9\u9053\u9898\u8fd8\u662f\u5c0f\u6e05\u65b0\u7684\u3002\n\n### Part2 \u8bbe\u8ba1\u72b6\u6001\n\n\u8003\u8651\u6700\u9ad8\u4f4d\u7684\u5206\u5e03\uff0c\u9996\u5148\u4e00\u5b9a\u4e0d\u80fd\u5b58\u5728\u9006\u5e8f\u5bf9\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u8ba4\u4e3a\u662f\u4e00\u6bb5 $1$\uff0c\u4e00\u6bb5 $2$\uff0c\u4e00\u76f4\u5230\u4e00\u6bb5 $9$\uff0c\u5bf9\u4e8e\u4e00\u6bb5\u5185\u7684\u6570\u5b57\u5e76\u6ca1\u6709\u5f97\u5230\u4e25\u683c\u504f\u5e8f\u5173\u7cfb\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5b83\u4eec\u5728\u66f4\u4f4e\u7684\u4f4d\u4e2d\u5f97\u5230\u4e25\u683c\u504f\u5e8f\u3002\n\n\u6240\u4ee5\u6709\u5f88\u5bb9\u6613\u7684\u60f3\u5230\u4e86\u533a\u95f4\u52a8\u6001\u89c4\u5212\u7684\u5f62\u5f0f\uff1a\u8bbe $f_{i,l,r}$ \u8868\u793a\u8003\u8651\u4e86\u7b2c $i$ \u53ca\u4ee5\u540e\u7684\u4f4d\u6570\uff0c\u533a\u95f4 $[l,r]$ \u8fbe\u6210\u4e25\u683c\u504f\u5e8f\u7684\u65b9\u6848\u6570\u3002\n\n\u8fb9\u754c\u662f $f_{m,l,l}=\\begin{cases}1,S_{l,m}\\ne?\\\\10,S_{l,m}=?\\end{cases}$\uff0c$f_{1,1,n}$ \u662f\u7b54\u6848\u3002\n\n\u6211\u4eec\u9700\u8981\u4ece $f_{i+1,l,r}$ \u8f6c\u79fb\u5230 $f_{i,l,r}$\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\u3002\n\n1. \u533a\u95f4 $[l,r]$ \u5728\u7b2c $i$ \u4f4d\u5b8c\u5168\u76f8\u7b49\uff0c\u90a3\u4e48\u4e4b\u524d\u5c31\u4e00\u5b9a\u8981\u4fdd\u8bc1\u4e25\u683c\u504f\u5e8f\uff0c\u4ece $f_{i+1,l,r}$ \u8f6c\u79fb\u8fc7\u6765\uff0c\u9700\u8981\u8003\u8651\u51fa\u73b0\u7684\u975e\u95ee\u53f7\u6570\u5b57\u4e2a\u6570\u3002\n\n2. \u533a\u95f4 $[l,r]$ \u5728\u7b2c $i$ \u4f4d\u4e0d\u5b8c\u5168\u76f8\u7b49\uff0c\u53ef\u4ee5\u679a\u4e3e\u6700\u540e\u4e00\u4e2a\u5b8c\u5168\u76f8\u7b49\u533a\u95f4\u3002\n\n### Part3 \u5177\u4f53\u5b9e\u73b0\n\n\u60f3\u5230\u8fd9\u91cc\u5176\u5b9e\u5df2\u7ecf\u4e0d\u96be\u4e86\uff0c\u4e0d\u8fc7\u72b6\u6001\u662f\u771f\u7684\u795e\u79d8\uff0c\u8fd9\u91cc\u6211\u8bbe $h_{L,R,l,r}$ \u8868\u793a\u533a\u95f4 $[l,r]$ \u8be5\u4f4d\u4e3a $[L,R]$ \u5f62\u6210\u4e25\u683c\u504f\u5e8f\u7684\u65b9\u6848\u6570\uff0c\u7136\u540e\u5c31\u80fd $h_{L,R,l,r}\\leftarrow h_{L,R',l,k}h_{R,R,k+1,r}$\uff0c\u5176\u4e2d $R'<R$\uff0c$k$ \u5728 $[l,r)$ \u4e4b\u95f4\u3002\n\n\u4f7f\u7528\u4e86\u524d\u7f00\u548c\u4f18\u5316\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(c^2mn^3)$\uff0c\u4f46\u662f\u8dd1\u4e0d\u6ee1\uff0c\u6240\u4ee5\u98de\u5feb\uff0c\u7a7a\u95f4 $O(c^2n^2)$\uff0c\u5176\u4e2d $c$ \u4e3a\u6570\u5b57\u503c\u57df\uff0c\u672c\u9898 $c=10$\u3002\n\n\u8ddf\u540c\u5b66\u628a\u8fd9\u573a\u5199\u5b8c\u4e4b\u540e\uff0c\u4ed6\u544a\u8bc9\u6211\u8fd9\u9053\u9898\u5176\u5b9e\u53ea\u9700\u8981\u8bb0\u8be5\u4f4d\u6570\u5b57\u7684\u6700\u5927\u503c\uff0c\u4f46\u9700\u8981\u518d\u5f00\u4e00\u7ef4\u8868\u793a\u53ea\u4f7f\u7528\u67d0\u4e00\u4e2a\u6570\u5b57\u7684\u7b54\u6848\uff0c\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(cmn^3)$\uff0c\u7a7a\u95f4 $O(cn^2)$\uff0c\u5b9e\u9645\u4e0a\u6548\u7387\u5dee\u4e0d\u591a\u3002\n\n$O(c^2mn^3)$ \u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nusing ll=long long;\nusing ld=long double;\nusing pr=pair<int,int>;\nconst int N=45,M=998244353;\nint n,m,f[N][N],g[N][N],h[11][11][N][N],w;\nchar s[N][N];\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    int i,j,k,l,r,x,y,L,R;\n    for(x=1;x<=n;++x)\n        scanf(\"%s\",s[x]+1);\n    for(l=1;l<=n;++l)f[l][l]=1;\n    for(i=m;i;--i){\n        memcpy(g,f,sizeof(g));\n        memset(f,0,sizeof(f));\n        memset(h,0,sizeof(h));\n        for(int _k=1;_k<=n;++_k)\n            for(l=1,r=_k;r<=n;++l,++r){\n                for(k=l,w=0;k<=r;++k)\n                    if(s[k][i]!='?')w|=1<<(s[k][i]-'0');\n                if(!w){\n                    for(k=0;k<10;++k)\n                        h[k][k][l][r]=g[l][r];\n                }else if(w==(w&-w)){\n                    w=__builtin_ctz(w);\n                    h[w][w][l][r]=g[l][r];\n                }\n                for(k=l;k<r;++k){\n                    for(L=0;L<10;++L)\n                        for(R=L+1;R<10;++R)\n                            h[L][R][l][r]=(ll(h[L][R-1][l][k])*h[R][R][k+1][r]+h[L][R][l][r])%M;\n                }\n                for(L=0;L<10;++L){\n                    for(R=L+1;R<10;++R)\n                        ((h[L][R][l][r]+=h[L][R-1][l][r])>=M)&&(h[L][R][l][r]-=M);\n                    ((f[l][r]+=h[L][9][l][r])>=M)&&(f[l][r]-=M);\n                }\n            }\n    }printf(\"%d\\n\",f[1][n]);\n    return 0;\n}\n```",
        "postTime": 1677982355,
        "uid": 502410,
        "name": "EnofTaiPeople",
        "ccfLevel": 0,
        "title": "\u5c0f\u6e05\u65b0\u533a\u95f4\u52a8\u6001\u89c4\u5212"
    },
    {
        "content": "## [ABC292G-Count Strictly Increasing Sequences](https://atcoder.jp/contests/abc292/tasks/abc292_g) \u9898\u89e3\n\n\u9898\u610f\uff1a\u6c42\u786e\u5b9a\u6240\u6709\u95ee\u53f7\u4e3a\u5b57\u6bcd\u5e76\u4e14\u4f7f\u5f97\u8fd9\u4e9b\u5e8f\u5217\u5b57\u5178\u5e8f\u4e25\u683c\u9012\u589e\u7684\u65b9\u6848\u6570\u3002$n\\le 40$\u3002\n\n\u5957\u8def1\uff1a\u8fd9\u7c7b\u4fdd\u8bc1\u5b57\u5178\u5e8f\uff0c\u8981\u6c42\u8ba1\u6570\u7684\u9898\u76ee\u901a\u5e38\u662f\u8bbe\u7f6e\u4e00\u4e2a\u533a\u95f4DP+\u8bb0\u5fc6\u5316\u641c\u7d22\u89e3\u51b3\u95ee\u9898\u3002\n\n\u5206\u6790\uff1a\u5b57\u5178\u5e8f\u5177\u6709\u4e00\u4e9b\u7279\u6b8a\u6027\u8d28\uff0c\u6bd4\u5982\u51b3\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32\u5927\u5c0f\u7684\uff0c\u53ea\u6709\u4e00\u4e2a\u5b57\u7b26\uff1b\u5176\u524d\u9762\u7684\u6240\u6709\u5b57\u7b26\u5fc5\u987b\u76f8\u540c\uff0c\u540e\u9762\u7684\u6240\u6709\u5b57\u7b26\u65e0\u6240\u8c13\u3002\n\n\u8fd9\u5176\u5b9e\u5c31\u662f\u8fd9\u4e9b\u5e8f\u5217\u6240\u5f62\u6210\u7684\u5b57\u5178\u6811\u7684\u5f62\u6001\u8ba1\u6570\u3002\n\n\u4f46\u662f\u600e\u4e48\u8868\u8fbe\u4e00\u68f5\u5b57\u5178\u6811\u5462\uff1f\u89c2\u5bdf\u5230\u4e86\u5b57\u5178\u6811\u6bcf\u4e2a\u8282\u70b9\u5b83\u5b50\u6811\u4e4b\u4e2d\u6240\u8986\u76d6\u7684\u53f6\u5b50\u8282\u70b9\u5fc5\u7136\u662f\u4e00\u6bb5\u8fde\u7eed\u7684\u533a\u95f4\uff0c\u6240\u4ee5\u4f7f\u7528\u533a\u95f4DP\u5373\u53ef\u89e3\u51b3\u95ee\u9898\u3002\n\n\u5176\u5b9e\u7528\u533a\u95f4\u8868\u8fbe\u4e00\u68f5\u6811\u7684\u5f62\u5f0f\u4e5f\u662f\u7ebf\u6bb5\u6811\u7684\u601d\u60f3\uff0c\u4e0d\u8fc7\u672c\u9898\u4e0d\u662f\u5f88\u6d89\u53ca\u5230\u5b83\u7684\u7279\u6b8a\u7ed3\u6784\uff08\u6bd4\u5982\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u6027\u8d28\uff09\uff0c\u4e0d\u7ba1\u3002\n\n\u5957\u8def2\uff1a\u5982\u4f55\u8868\u8fbe\u4e00\u4e2a\u5b57\u5178\u6811\u4e0a\u7684\u8282\u70b9\u5462\uff1f\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u8bbe\u7f6e $f[l][r][k]$ \u8868\u793a\u5f53\u524d\u5df2\u7ecf\u6bd4\u8f83\u4e86\u524d $k$ \u4e2a\u5b57\u7b26\u5e76\u4e14\u5f53\u524d\u8282\u70b9\u7684\u5b50\u6811\u4e4b\u4e2d\u8986\u76d6\u4e86 $[l,r]$ \u533a\u95f4\u7684\u6240\u6709\u53f6\u5b50\u8282\u70b9\u7684\u603b\u65b9\u6848\u6570\u3002\n\n\u8fd9\u9898\u4e4b\u4e2d\u6709\u6d89\u53ca\u5230\u5b57\u6bcd\u7684\u53d8\u6362\uff0c\u53ef\u4ee5\u4e00\u4e2a\u4e2a\u679a\u4e3e\u5b57\u6bcd\uff0c\u7c7b\u4f3c\u4e8e\u80cc\u5305\u7684\u505a\u6cd5\u4ee3\u5165\u8fdb\u53bb\u4e00\u4e2a\u4e2a\u5904\u7406\u989c\u8272\uff0c\u4f46\u662f\u7801\u91cf\u6bd4\u8f83\u5927\u5212\u4e0d\u6765\u3002\n\n\u5957\u8def3\uff1a\u91cd\u8bbe\u72b6\u6001\uff0c\u8bbe $f[l][r][k][c]$ \u8868\u793a\u533a\u95f4 $[l,r]$ \u5f53\u524d\u524d $k$ \u4e2a\u5b57\u7b26\u76f8\u540c\uff0c\u800c\u5b83\u5e94\u8be5\u53d6\u7684\u6700\u5c0f\u503c\u662f $c$\uff0c\u7136\u540e\u5728 $[l,r]$ \u533a\u95f4\u4e5f\u662f\u4f7f\u7528\u80cc\u5305\u7684\u65b9\u6cd5\u4e00\u4e2a\u4e2a\u5904\u7406\uff0c\u8f6c\u79fb\u65f6\u5019\u4f7f\u7528\u4e00\u4e2a\u8f85\u52a9\u6570\u7ec4 $g[k][i]$ \u5f53\u4f5c\u80cc\u5305\u7684\u6570\u7ec4\u8868\u793a\u7528\u5230\u4e86\u7b2c $k$ \u79cd\u989c\u8272\u800c\u53f3\u7aef\u70b9\u4e3a $i$ \u7684\u65b9\u6848\u6570\u3002\n\n\u5224\u65ad\u65b9\u6848\u5408\u6cd5\u53ef\u4ee5\u9884\u5904\u7406\uff0c\u5373\u5224\u65ad $[l,r]$ \u533a\u95f4\u6709\u6ca1\u6709\u522b\u7684\u5b57\u6bcd\uff0c\u8fd9\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u662f\u74f6\u9888\uff0c\u6240\u4ee5\u5b9e\u73b0\u5f97\u66b4\u529b\u4e00\u70b9\u4e5f\u65e0\u6240\u8c13\u3002\u521d\u59cb\u503c\u663e\u7136\u3002\n\n\u4f46\u662f\u5199\u4e2a\u80cc\u5305\u4ecd\u7136\u5212\u4e0d\u6765\uff0c\u6bd5\u7adf\u6709\u4e00\u4e9b\u8fb9\u754c\u503c\u7684\u540e\u987e\u4e4b\u5fe7\uff0c\u7801\u91cf\u548c\u7f16\u7801\u96be\u5ea6\u4e5f\u6bd4\u8f83\u5927\u3002\n\n\u89c2\u5bdf\u5230\u80cc\u5305\u7684\u6574\u4e2a\u8fc7\u7a0b\u662f\u4e00\u4e2a\u8fd9\u4e2a $(l,r,k,c)$ \u8282\u70b9\u5206\u88c2\u6210\u591a\u4e2a\u513f\u5b50\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u8bb0\u5fc6\u5316\u641c\u7d22\u5c31\u662f\u5f80\u5b83\u7684\u5b50\u6811\u91cc\u9762\u641c\u7d22\u7136\u540e\u518d\u901a\u8fc7\u5e73\u7b49\u5c42\u7ea7\u7684\u5408\u5e76\u65b9\u6cd5\u5408\u5e76\u7b54\u6848\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u5f62\u5982\u4e00\u4e2a\u70b9\u5206\u591a\u4e2a\u513f\u5b50\u518d\u5c06\u5176\u7b54\u6848\u5408\u5e76\u8d77\u6765\uff0c\u800c\u6211\u4eec\u7684\u80cc\u5305\u8fc7\u7a0b\u662f\u679a\u4e3e\u5176\u5206\u7684\u5927\u5c0f\u7136\u540e\u4e00\u4e2a\u4e2a\u52a0\u8d77\u6765\u3002\n\n\u6240\u4ee5\u91c7\u7528\u201c\u5de6\u513f\u5b50\u53f3\u5144\u5f1f\u201d\u7684\u8bb0\u5f55\u6cd5\uff0c\u8fd9\u6837 DP \u5176\u5b9e\u53ea\u9700\u8981\u8f6c\u79fb\u4e24\u4e2a\u5f0f\u5b50\u5373\u53ef\u3002\n\n\u53ef\u4ee5\u9009\u4e00\u4e9b $c$ \u8fd9\u4e2a\u6570\u5b57\uff0c$f[l][r][k][c]=\\sum_{i=l}^{r-1} f[l][i][k+1][0]+f[i+1][r][k][c+1]$\u3002\n\n\u53ef\u4ee5\u5168\u9009 $c$ \u8fd9\u4e2a\u6570\u5b57\uff0c\u4e5f\u53ef\u4ee5\u5168\u4e0d\u9009 $c$ \u8fd9\u4e2a\u6570\u5b57\u3002\u8fd9\u65f6\u7684\u8f6c\u79fb\u663e\u7136\u3002\n\n\u8fd9\u4e2aDP\u7684\u8fc7\u7a0b\u663e\u7136\u91c7\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\uff0c\u56e0\u4e3a\u7b80\u6d01\u6709\u529b\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790\uff1a$O(N^3M|C|)$\uff08$|C|$ \u4e3a\u5b57\u7b26\u96c6\u5927\u5c0f\uff09\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;typedef int I;\nconst I N=42,M=42;\nI f[N][N][M][10],n,m;\nstring s[N];\nconst I mod=998244353;\nI mul(I x,I y){return 1ll*x*y%mod;}\nI dfs(I l,I r,I k,I c){\n\tif(c==10)return 0;\n\tif(k==m+1)return l==r;I&ans=f[l][r][k][c];\n\tif(ans^-1)return ans;\n\tans=dfs(l,r,k,c+1);\n\tfor(I i=l;i<=r;++i)\n\t\tif(s[i][k-1]=='0'+c||s[i][k-1]=='?')\n\t\t\tans=(ans+(1ll*dfs(l,i,k+1,0)*(i==r?1:dfs(i+1,r,k,c+1)%mod)))%mod;\n\t\telse break;\n\treturn ans;}\nI main(){\n\tcin>>n>>m;\n\tfor(I i=1;i<=n;++i)\n\t\tcin>>s[i];\n\tmemset(f,-1,sizeof(f));\n\tprintf(\"%d\\n\",dfs(1,n,1,0));\n\treturn 0;\n}\n```\n\n## ",
        "postTime": 1678105241,
        "uid": 121995,
        "name": "SmallTualatin",
        "ccfLevel": 0,
        "title": "ABC292G \u9898\u89e3"
    },
    {
        "content": "# ABC292\n\n## G - Count Strictly Increasing Sequences\n\n\u524d\u9762\u601d\u8def\u57fa\u672c\u76f8\u540c\uff0c\u6211\u4eec\u5148\u89c2\u5bdf\u6700\u9ad8\u4f4d\uff0c\u663e\u7136\u662f\u4e00\u6bb5 $0$\uff0c\u4e00\u6bb5 $1$\uff0c\u4e0d\u65ad\u5f80\u4e0b\u63a5\u2026\u2026\n\n\u90a3\u4e48\u5bf9\u4e8e\u6700\u9ad8\u4f4d\u76f8\u540c\u7684\u4e00\u6bb5\u6570\u5b57\uff0c\u6211\u4eec\u8981\u5728\u6b21\u9ad8\u4f4d\u53ca\u4e4b\u540e\u6ee1\u8db3\u4e25\u683c\u504f\u5e8f\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u4ece\u4f4e\u5f80\u9ad8\u533a\u95f4 dp\uff1a`f[i][l][r]` \u8868\u793a\u586b\u4e86\u7b2c $i$ \u4f4d\u53ca\u4e4b\u540e\uff0c$[l, r]$ \u533a\u95f4\u5185\u7684\u6570\u6784\u6210\u4e25\u683c\u504f\u5e8f\u7684\u65b9\u6848\u6570\u3002\n\n\u66f4\u65b0\u65f6\uff0c\u8003\u8651\u5237\u8868\u3002\u6211\u4eec\u679a\u4e3e\u4e00\u4e2a\u6570\u5b57 $j = 0,1,\\cdots,9$\uff0c\u7136\u540e\u5237 `f[i][l][r]`\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u679a\u4e3e\u4e00\u6bb5\u540e\u7f00 $(k, r]$ \u9009\u62e9\u4e86 $j$\uff0c\u4ece `f[i][l][k] * f[i + 1][k + 1][r]` \u8f6c\u79fb\u8fc7\u6765\u5373\u53ef\u3002\n\n\u6700\u540e\u4e00\u4e2a\u8fb9\u754c\u9700\u8981\u6ce8\u610f\u662f\uff0c\u4e0a\u9762\u7684\u8f6c\u79fb\u5f0f\u5c11\u8003\u8651\u4e86\u6574\u4e2a\u533a\u95f4\u5168\u9009 $j$\u3002\u8fd9\u4e2a\u7279\u5224\u5c31\u4e0d\u591a\u8bf4\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(mn^3\\times \\vert \\Sigma\\vert)$\u3002\n\n```cpp\n// Problem: G - Count Strictly Increasing Sequences\n// URL: https://atcoder.jp/contests/abc292/tasks/abc292_g\n// Group: AtCoder - AtCoder Beginner Contest 292\n// Time: 2023-03-04 20:00\n// Author: lingfunny\n\n#include <bits/stdc++.h>\nusing LL = long long;\nusing uint = unsigned;\nusing namespace std;\n\nconstexpr int mod = 998244353;\n// assume -mod <= x < 2mod\nint normZ(int x) {\n\tif (x < 0) x += mod;\n\tif (x >= mod) x -= mod;\n\treturn x;\n}\ntemplate <typename T> T qpow(T x, LL k) {\n\tT res = 1;\n\tfor (; k; k >>= 1, x *= x)\n\t\tif (k & 1) res *= x;\n\treturn res;\n}\n\nstruct Z {\n\tint x;\n\tZ(int x = 0) : x(normZ(x)) {}\n\tZ(LL x) : x(normZ(x % mod)) {}\n\tint val() const { return x; }\n\tZ operator-() const { return Z(normZ(mod - x)); }\n\tZ inv() const {\n\t\tassert(x != 0);\n\t\treturn qpow(*this, mod - 2);\n\t}\n\tZ &operator*=(const Z &rhs) {\n\t\tx = (LL)x * rhs.x % mod;\n\t\treturn *this;\n\t}\n\tZ &operator+=(const Z &rhs) {\n\t\tx = normZ(x + rhs.x);\n\t\treturn *this;\n\t}\n\tZ &operator-=(const Z &rhs) {\n\t\tx = normZ(x - rhs.x);\n\t\treturn *this;\n\t}\n\tZ &operator/=(const Z &rhs) { return *this *= rhs.inv(); }\n\tfriend Z operator*(const Z &lhs, const Z &rhs) {\n\t\tZ res = lhs;\n\t\tres *= rhs;\n\t\treturn res;\n\t}\n\tfriend Z operator+(const Z &lhs, const Z &rhs) {\n\t\tZ res = lhs;\n\t\tres += rhs;\n\t\treturn res;\n\t}\n\tfriend Z operator-(const Z &lhs, const Z &rhs) {\n\t\tZ res = lhs;\n\t\tres -= rhs;\n\t\treturn res;\n\t}\n\tfriend Z operator/(const Z &lhs, const Z &rhs) {\n\t\tZ res = lhs;\n\t\tres /= rhs;\n\t\treturn res;\n\t}\n};\n\nconst int mxn = 45;\nZ f[mxn][mxn][mxn], g[mxn][mxn][mxn];\nint n, m, c[mxn][mxn];\nchar s[mxn][mxn];\n\nsigned main() {\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i <= n; ++i) {\n\t\tscanf(\"%s\", s[i] + 1);\n\t\tfor (int j = m; j; --j) c[i][j] = c[i][j + 1] + (s[i][j] == '?');\n\t}\n\tfor (int i = 1; i <= n; ++i) f[m + 1][i][i] = 1;\n\t// 10 * m * n *n * n\n\tfor (int o = m; o >= 1; --o) {\n\t\tfor (int v = 0; v <= 9; ++v) {\n\t\t\tmemcpy(g[o], f[o], sizeof f[o]);\n\t\t\tfor (int len = 1; len <= n; ++len)\n\t\t\t\tfor (int l = 1, r; (r = l + len - 1) <= n; ++l) {\n\t\t\t\t\tbool check = true;\n\t\t\t\t\tfor (int k = r; (check &= (s[k][o] == '?' || s[k][o] == v + '0')) && --k >= l;)\n\t\t\t\t\t\tif (check) f[o][l][r] += g[o][l][k] * f[o + 1][k + 1][r];\n\t\t\t\t\tif (check) f[o][l][r] += f[o + 1][l][r];\n\t\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\", f[1][1][n].val());\n\treturn 0;\n}\n```",
        "postTime": 1678793919,
        "uid": 280800,
        "name": "lingfunny",
        "ccfLevel": 7,
        "title": "ABC292G \u9898\u89e3"
    }
]