[
    {
        "content": "\u672c\u849f\u84bb\u8ba4\u4e3a\uff1a\n\n\u8fd9\u9053\u9898\u6839\u672c\u4e0d\u7528\u5224\u65ad\u7d20\u6570\uff0c\u53ea\u8981\u5224\u65adn\u80fd\u5426\u4e0d\u88ab2\uff0c3\uff0c5\u6574\u9664\uff082\uff0c3\uff0c5\uff09(\u56e0\u4e3a\u6709\u7c7b\u4f3c\u7d20\u6570)\n\n\u4f46\u662f1,2,3,5\u9700\u8981\u7279\u5224\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<cstdio>\n#include<cmath>\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tif(n==1){\n\t\tprintf(\"Not Prime\\n\");\n\t\treturn 0;\n\t}\n\tif(n==2||n==3||n==5){\n\t\tprintf(\"Prime\\n\");\n\t\treturn 0;\n\t}\n\tif(n%2!=0&&n%3!=0&&n%5!=0){\n\t\tprintf(\"Prime\\n\");\n\t}\n\telse{\n\t\tprintf(\"Not Prime\\n\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1548840054,
        "uid": 179773,
        "name": "C20210404\u675c\u94d6\u660a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT1476 \u3010\u7d20\u6570\u5224\u5b9a\u3011"
    },
    {
        "content": "\u672c\u849f\u84bb\u53c8\u6765\u53d1\u9898\u89e3\u5566\uff01\n\n\u672c\u9898\u5176\u5b9e\u5c31\u662f\u8ba9\u6211\u4eec\u5224\u65ad\u7d20\u6570\uff0c\u4f46\u662f\u9898\u76ee\u4e2d\u8fd8\u8981\u6211\u4eec\u5224\u65ad\u7c7b\u4f3c\u7d20\u6570\uff0c\u90a3\u4e48\u7c7b\u4f3c\u7d20\u6570\u662f\u4ec0\u4e48\u5462\uff1f\n\n### \u662f\u7c7b\u4f3c\u7d20\u6570\u7684\u8981\u540c\u65f6\u6ee1\u8db3\u4e24\u4e2a\u6761\u4ef6\uff1a\u2460\u8fd9\u4e2a\u6570\u662f\u4e00\u4e2a\u5408\u6570\u4e14\u2461\u8fd9\u4e2a\u6570\u65e2\u4e0d\u662f\u5076\u6570\u4e5f\u4e0d\u662f5\u7684\u500d\u6570\uff0c\u5e76\u4e14\u5982\u679c\u6bcf\u4e2a\u6570\u5b57\u7684\u548c\u4e0d\u80fd\u88ab3\u6574\u9664\n\n\u90a3\u63a5\u4e0b\u6765\u5c31\u5f00\u59cb\u8bb2\u601d\u8def\u4e86\uff0c\u5176\u5b9e\u672c\u9898\u7684\u601d\u8def\u6709\u4e24\u79cd\uff0c\u6211\u4eec\u4e00\u4e00\u6765\u8bb2\uff1a\n\n## \u7b2c\u4e00\u79cd\n\n1.\u8f93\u5165n\n\n2.\u5148\u7279\u52241\uff0c\u56e0\u4e3a1\u65e2\u4e0d\u662f\u8d28\u6570\u4e5f\u4e0d\u662f\u5408\u6570\n\n3.\u5148\u5224\u65ad\u5b83\u662f\u5426\u4e3a\u7d20\u6570\uff0c\u5982\u679c\u662f\uff0c\u5219\u8f93\u51fa\u201cPrime\u201d\u5e76\u9000\u51fa\u7a0b\u5e8f\uff0c\u5426\u5219\u7ee7\u7eed\n\uff08PS:\u6211for\u5faa\u73af\u7684\u7ec8\u503c\u7528\u7684\u662fn\u7684\u5f00\u65b9\uff09\n\n4.\u5982\u679c\u5b83\u4e0d\u662f\u4e2a\u7d20\u6570\uff0c\u5219\u5224\u65ad\u5b83\u662f\u5426\u4e3a\u7c7b\u4f3c\u7d20\u6570\uff0c\u5982\u679c\u662f\uff0c\u5219\u8f93\u51fa\u201cPrime\u201d\uff0c\u5426\u5219\u8f93\u51fa\u201cNot Prime\u201d\n\n\u732e\u4e0a\u7b2c\u4e00\u79cd\u601d\u8def\u7684\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#include<string>\n#include<cstring>\n\nusing namespace std;\nlong long n,p,ans;\nint main()\n{\n scanf(\"%I64d\",&n);\n if(n==1)\n {\n  cout<<\"Not Prime\"<<endl;\n  return 0;\n }//\u7279\u52241\n  for(int i=2;i<=sqrt(n);i++)\n {\n    if(n%i==0) \n    {\n      p=1;\n      break;\n    }\n }\n if(p==0) \n {\n  cout<<\"Prime\"<<endl;\n  return 0;\n }//\u5224\u65ad\u5b83\u662f\u5426\u4e3a\u7d20\u6570\n else\n {\n  long long x=n,g;\n  while(x>0)\n  {\n   g=x%10;\n   ans+=g;\n   x=x/10;\n  }\n  if(ans%3!=0&&n%2!=0&&n%5!=0) cout<<\"Prime\"<<endl;//\u5982\u679c\u5b83\u4e0d\u662f\u7d20\u6570\uff0c\u5219\u5224\u65ad\u5b83\u662f\u5426\u4e3a\u7c7b\u4f3c\u7d20\u6570\n  else cout<<\"Not Prime\"<<endl;\n }\n return 0;\n}\n```\n\n## \u7b2c\u4e8c\u79cd\n\u7b2c\u4e8c\u79cd\u7684\u601d\u8def\u76f8\u5bf9\u5bf9\u4e00\u79cd\u662f\u7b80\u5355\u5f88\u591a\u7684\uff0c\u5c31\u662f\u76f4\u63a5\u5224\u65ad\u5b83\u662f\u5426\u7b26\u5408\u7c7b\u4f3c\u7d20\u6570\u5c31OK\u5566\uff01\uff08\u56e0\u4e3a\u53ea\u8981\u7d20\u6570\u5c31\u7b26\u5408\u7c7b\u4f3c\u7d20\u6570\u7684\u6761\u4ef6\uff0c\u4f46\u4e0d\u80fd\u8bf4\u7c7b\u4f3c\u7d20\u6570\u5c31\u662f\u7d20\u6570\uff09\n\n\u732e\u4e0a\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#include<string>\n#include<cstring>\n\nusing namespace std;\nlong long n;\nint main()\n{\n scanf(\"%I64d\",&n);\n if(n==1)\n { \n  cout<<\"Not Prime\"<<endl;\n  return 0;\n }//\u7279\u52241\n if(n==2||n==3||n==5) \n {\n  cout<<\"Prime\"<<endl;\n  return 0;\n }//\u7279\u52242\u30013\u30015\n if(n%2!=0&&n%3!=0&&n%5!=0)\n {\n  cout<<\"Prime\"<<endl;\n  return 0;\n }//\u5224\u65ad\u5b83\u662f\u5426\u4e3a2\u30013\u30015\u7684\u500d\u6570\n cout<<\"Not Prime\"<<endl;\n return 0;\n}\n\n\n```\n\n\u6700\u540e\uff0c\u8fd8\u8981\u63d0\u9192\u5927\u5bb6\u4e00\u70b9\u7684\u5c31\u662f\uff1a\n\n# \u8bb0\u5f97\u6362\u884c\uff01\n\n\u4ee5\u4e0a\u5c31\u662fAT1476 \u3010\u7d20\u6570\u5224\u5b9a\u3011\u7684\u9898\u89e3\uff0c\u5982\u6709\u4e0d\u8db3\uff0c\u8bf7\u5404\u4f4ddalao\u5728\u53f3\u8fb9\u2192\u8bc4\u8bba\u533a\u6307\u51fa\uff01",
        "postTime": 1575523925,
        "uid": 97173,
        "name": "Cinderella",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT1476 \u3010\u7d20\u6570\u5224\u5b9a\u3011"
    },
    {
        "content": "# \u89c1\u5230\u8fd9\u4e2a\u9898\uff0c\u5c11\u4e0d\u4e86\u7b5b\u7d20\u6570\u7684\u677f\u5b50\n------------\n## \u9996\u5148\u7ed9\u5927\u5bb6\u4ecb\u7ecd\u51e0\u4e2a\u7b5b\u7d20\u6570\u7684\u677f\u5b50\n### \u5f15\u7528\u4e8e[zybnxy\u7684\u7ebf\u6027\u7b5b\u7d20\u6570\u6a21\u677f](https://www.luogu.org/problemnew/solution/P3383)\n\u5728\u6b64\u819c\u62dc[zybnxy\u5927\u4f6c](https://www.luogu.org/space/show?uid=51645)\n------------\n1.    \u6839\u636e\u5b9a\u4e49\uff1a\u7d20\u6570\u5c31\u662f\u4e00\u4e2a\u6570\u9664\u4e861\u548c\u4ed6\u672c\u8eab\u6ca1\u6709\u5176\u4ed6\u56e0\u6570\u7684\u6570\u53eb\u505a\u8d28\u6570\u3002\n\u4e8e\u662f\u6211\u4eec\u5bf9\u4e8e\u4e00\u4e2an,\u53ef\u4ee5\u53ef\u4ee5\u4ece2\u679a\u4e3e\u5230n\u22121\uff0c\u4ece\u800c\u5224\u65ad\u8fd9\u4e2a\u6570\u662f\u4e0d\u662f\u8d28\u6570\u3002\n------------\n\u90a3\u8fd9\u4e2a\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f**O\uff08n\uff09**\n\u663e\u800c\u6613\u89c1\uff0c\u5f53n\u8db3\u591f\u5927\u65f6\uff0c\u6211\u4eec\u7684\u7a0b\u5e8f\u5c31\u4f1a\u7206\u6389\n------------\n```cpp\nbool prime1(int x)//O(n)\n{\n\tif(x<2) return false;\n\tif(x==2) return true;\n\tfor(int i=2;i<=x;i++)\n\t\tif(x%i==0) return false;\n\treturn true;\n}\n```\n#### \u4f18\u5316\u4e00\n\u6211\u4eec\u4e0d\u96be\u53d1\u73b0n\u7684\u56e0\u6570\u662f\u6210\u5bf9\u51fa\u73b0\u7684\uff0c\u6240\u4ee5\u5bf9\u4e8e\u4efb\u4f55\u4e00\u4e2a\u6574\u6570n\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4ece1\u679a\u4e3e\u5230\u6839\u53f7\u4e0bn\u5c31\u53ef\u4ee5\u4e86\u3002\n------------\n\u6240\u4ee5\u8fd9\u4e2a\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f**O\uff08\u6839\u53f7\u4e0bn\uff09**\n```cpp\nbool prime2(int x)//O(\u6839\u53f7\u4e0bn)\n{\n\tif(x<2) return false;\n\tif(x==2) return true;\n\tfor(int i=2;i<=sqrt(x);i++)\n\t\tif(x%i==0) return false;\n\treturn true;\n}\n```\n\u6839\u636e\u672c\u849f\u84bb\u591a\u5e74\u7684\u7ecf\u9a8c\uff0c**O(\u6839\u53f7\u4e0bn)**\n\u7684\u7b97\u6cd5\u5df2\u7ecf\u662f\u6700\u5feb\u7684\u4e86\uff0c\u76f4\u5230\u6709\u4e00\u5929\u770b\u5230\u4e86[\u8fd9\u7bc7\u6587\u7ae0](https://blog.csdn.net/huang_miao_xin/article/details/51331710)\n------------\n\u6b64\u65b9\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u5927\u5927\u51cf\u5c0f\uff0c\u4e3a**O\uff08\u4e09\u5206\u4e4b\u6839\u53f7\u4e0bn\uff09**\n```cpp\nbool quick_prime(int x)//O(\u4e09\u5206\u4e4b\u6839\u53f7\u4e0bn) \n{\n\tif(x==2||x==3) return true;\n\tif(x%6!=1&&x%6!=5) return false;\n\tfor(int i=5;i<=sqrt(x);i+=6)\n\t\tif(x%i==0||x%(i+2)==0) return false;\n\treturn true;\n}\n```\n##### \u5c0f\u7ed3\uff1a\u5728\u5bf9\u4e8e\u7d20\u6570\u7684\u5224\u65ad\u65f6\uff0c\u4e00\u822c\u7528\u7b2c\u4e00\u79cd\u7684\u4f18\u5316\u65b9\u6cd5\u5c31\u53ef\u4ee5\u4e86\uff0c\u4f46\u662f\u5982\u679c\u9047\u5230\u4e86\u6bd2\u7624\u51fa\u9898\u4eba\uff0c\u6700\u597d\u662f\u7528\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u3002\n-----\n### \u90a3\u672c\u9898\u7684\u601d\u8def\u5c31\u51fa\u6765\u4e86\uff0c\u5148\u5224\u65ad\u8fd9\u4e2a\u6570\u662f\u4e0d\u662f\u7d20\u6570\uff0c\n```cpp\null prime(ull x){\n\tif(x==2||x==3) return 1;\n\tif(x%6!=1&&x%6!=5) return 0;\n\tfor(int i=5;i<=sqrt(x);i+=6)\n\tif(x%i==0||x%(i+2)==0) return 0;\n\treturn 1;\n}\n```\n### \u518d\u5224\u65ad\u8fd9\u4e2a\u6570\u662f\u4e0d\u662f\u7c7b\u4f3c\u7d20\u6570\n```cpp\null simple_prime(ull k){\n\tif(!prime(k)){\n\tif(k%2!=0&&k%5!=0&&k%3!=0){\n\t\treturn 1;\n\t\t}\n\t}\n\treturn 0;\t\n}\n```\n\n\n------------\n\n### \u6700\u540e\u7279\u5224\u4e00\u4e0b\u201c1\u201d\u5373\u53ef\n```cpp\nif(prime(n)||simple_prime(n))\n\t{\n\t\tif(n==1) cout<<\"Not Prime\"<<endl;\n\t\telse cout<<\"Prime\"<<endl;\n\t} \n\telse cout<<\"Not Prime\"<<endl;\n```\n------------\n#### \u6700\u540e\u9012\u4ea4\u5b8c\u6574\u4ee3\u7801\uff08\u6709\u9632\u6284\u88adbug\uff0c\u5c0f\u5fc3\u63d0\u4ea4\u54e6\uff01twt\uff09\n```cpp\n#include<iostream>\n#include<bits/stdc++.h>\nuse nameplace std;\ntypedef unsigned long long ull;\null prime(ull x){\n\tif(x==2||x==3) return 1;\n\tif(x%6!=1&&x%6!=5) return 0;\n\tfor(int i=5;i<=sqrt(x);i+=6)\n\tif(x%i==0||x%(i+2)==0) return 0;\n\treturn 1;\n}\null simple_prime(ull k){\n\tif(!prime(k)){\n\tif(k%2!=0&&k%5!=0&&k%3!=0){\n\t\treturn 1;\n\t\t}\n\t}\n\treturn 0;\t\n}\nint main()\n{\n\tint n;\n\tcin>>n;\n\tif(prime(n)||simple_prime(n))\n\t{\n\t\tif(n==1) cout<<\"Not Prime\"<<endl;\n\t\telse cout<<\"Prime\"<<endl;\n\t} \n\telse cout<<\"Not Prime\"<<endl;\n\treturn 0;\n}\n```\n\u6c42\u7ba1\u7406\u5927\u5927\u901a\u8fc7qwq",
        "postTime": 1564649736,
        "uid": 114202,
        "name": "\u8fd8\u662f\u90a3\u53ea\u4e09\u6c34",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT1476 \u3010\u7d20\u6570\u5224\u5b9a\u3011"
    },
    {
        "content": "\u4ecb\u7ecd\u4e00\u79cd\u7d20\u6570\u5224\u5b9a\u7684\u65b9\u6cd5\uff1a\n## Miller-Rabbin\u7d20\u6570\u6d4b\u8bd5\n\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u8fbe\u5230O(slogn\uff09\u7ea7\u522b\uff0cs\u662f\u6d4b\u8bd5\u6b21\u6570\uff0c\u4e00\u822c\u53d6\u572830\u6b21\u5de6\u53f3\u4fbf\u5df2\u8db3\u591f\uff0c\u56e0\u6b64\u8fd9\u662f\u4e00\u4e2alogn\u7ea7\u522b\u7684\u7b97\u6cd5\n\n\u9996\u5148\u6839\u636e\u8d39\u9a6c\u5c0f\u5b9a\u7406\uff0c\u5f53p\u662f\u7d20\u6570\u65f6\u6709\uff1a\n\n$a^{p-1}\\equiv1(\\mod p)$\n\n\u5373\n\n$a^{p-1}\\mod p =1$\n\n\u90a3\u4e48\u5982\u679c\u6709\u6b64\u5f0f\u6210\u7acb\uff0c\u662f\u5426p\u4e00\u5b9a\u4e3a\u8d28\u6570\uff1f\u7b54\u6848\u662f\u5426\u5b9a\u7684\u3002\u4f46\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u591a\u6d4b\u8bd5\u51e0\u6b21\uff0c\u5373\u968f\u673a\u9009\u53d6a\u503c\u8fdb\u884c\u6d4b\u8bd5\uff0c\u63d0\u9ad8\u51c6\u786e\u7387\u3002\u6d4b\u8bd5\u6b21\u6570\u8d8a\u5927\uff0c\u6b63\u786e\u7387\u8d8a\u9ad8\u3002\uff08\u5f53\u7136\u4e5f\u5c31\u8d8a\u6162\uff09\n\n\u6d4b\u8bd5\u6b21\u6570\u4e00\u822c\u9009\u572830\u5de6\u53f3\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u5feb\u901f\u5e42\u6c42\u51fa$a^{p-1}\\mod p$\u7684\u503c\uff0c\u5224\u65ad\u5176\u662f\u5426\u4e3a1\u5373\u53ef\u3002\n\n\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\n\nll num;\n\nll qpow(ll a,ll b,ll mod)\n{\n    ll res=1;\n    while(b)\n    {\n        if(b&1)res=(res%mod*a)%mod;\n        a=(a%mod)*a%mod;\n        b>>=1;\n    }\n    return res;\n}\n\nbool MRT(ll x)\n{\n    if(x==2)return true;\n    if(x==1)return false;\n    for(int i=1;i<=30;i++)\n    {\n        ll base=rand()%(x-2)+2;\n        if(qpow(base,x-1,x)!=1)return false;\n    }\n    return true;\n}\n\nint main()\n{\n    scanf(\"%lld\",&num);\n    if(MRT(num)||(num%2!=0&&num%3!=0&&num%5!=0&&num!=1))printf(\"Prime\\n\");\n    else printf(\"Not Prime\\n\");\n    return 0;\n}\n\n```\n\n\n",
        "postTime": 1553422693,
        "uid": 116592,
        "name": "Black_Gzombie",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT1476 \u3010\u7d20\u6570\u5224\u5b9a\u3011"
    },
    {
        "content": "\u67d0\u849f\u84bb\u8ba4\u4e3a\u4e0d\u9700\u8981\u90a3\u4e48\u9ebb\u70e6\n```\n#include<iostream>\nusing namespace std;\nint main()\n{\n\tlong long n;\n\tcin>>n;\n\tif (n==2||n==3||n==5) \n    \t{cout<<\"Prime\"<<endl;return 0;}//\u7279\u5224\n\tif (n<=1) {cout<<\"Not Prime\"<<endl;return 0;}//\u540c\u4e0a\n\tif (n%2==0||n%5==0||n%3==0) \n  \t{cout<<\"Not Prime\"<<endl;return 0;}//\u5b8c\u5168\u4e0d\u9700\u8981\u5faa\u73af\n\telse cout<<\"Prime\"<<endl;//\u4e0d\u80fd\u88ab2\u30013\u30015\u6574\u9664\u5373\u53ef\n\treturn 0;\n}\n```\n\u662f\u6211\u592a\u83dc\u4e86\u5417\uff1f\u6ca1\u60f3\u5230\u5faa\u73af......\u4e00\u6b21\u8fc7\uff0c\u6ce8\u610f\u52a0endl\uff0c\u6240\u6709AT\u7684\u9898\u90fd\u8981\u52a0\uff01\uff01\uff01",
        "postTime": 1562129743,
        "uid": 183447,
        "name": "\u706b\u8349yu",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 AT1476 \u3010\u7d20\u6570\u5224\u5b9a\u3011"
    },
    {
        "content": "\u4e00\u8d77\u6765\uff01\n\n## \u76f4\u63a5\u4e0a\u4ee3\u7801\uff01\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nbool isprime(int x)//\u5224\u65ad\u662f\u5426\u662f\u8d28\u6570\n{\n    if(x<2)return false;//\u5c0f\u4e8e2\u7684\u6570\u90fd\u4e0d\u662f\n    double k=sqrt(x);//\u63d0\u524d\u5f00\u6839\uff0c\u5426\u5219\u53cd\u590d\u5f00\u6839\u6d6a\u8d39\u65f6\u95f4\n    for(int i=2;i<=k;i++)\n    if(x%i==0)return false;\n    return true;\n    //\u5224\u65ad2\u5230\u6839\u53f7\u4e0bx\u65e0\u7ea6\u6570\n}\nbool likeprime(int x)\n{//\u5224\u65ad\u7c7b\u4f3c\u8d28\u6570\u7684\u6570\n    if(x%2==0)return false;\n    if(x%3==0)return false;\n    if(x%5==0)return false;\n    //\u9898\u76ee\u4e2d\u8bf4\uff0c\u9664\u4ee52\u30013\u30015\u90fd\u5f97\u6709\u4f59\u6570\uff0c\u6362\u53e5\u8bdd\u8bf4\u5c31\u662f\u4e0d\u80fd\u88ab2\u30013\u30015\u6574\u9664\uff0c\u6240\u4ee5x\u5982\u679c\u88ab2\u30013\u30015\u6574\u9664\uff0c\u76f4\u63a5\u62dc\u62dc\n    return true;\n    //\u4e0d\u662f\u5047\u5c31\u662f\u771f\n}\nint main()\n{\n    int x;cin>>x;//\u8f93\u5165\n    if(isprime(x) || likeprime(x))cout<<\"Prime\"<<endl;\n    else cout<<\"Not Prime\"<<endl;\n    //\u5224\u65ad\uff08x\u662f\u8d28\u6570\u6216\u7c7b\u4f3c\u8d28\u6570\uff09\u7684\u771f\u5047\n    return 0;\n}\n```\n-------------\n# \u4f46\u662f\uff0c\u6d1b\u8c37\u7ed9\u4f60\u7684\u56de\u590d\uff1a\n## \u7b2c4\u4e2a\u6d4b\u8bd5\u70b9WA\u4e86\u3002\n### \u7a76\u7adf\u9519\u5728\u54ea\u91cc\u4e86\u5462\uff1f\n\u5982\u679c\u8f93\u8fdb\u53bb\u7684\u662f1\uff0c\u90a3\u4e48\uff1a\n\n\u5728\u4e3b\u51fd\u6570\u91cc\u7684\u5224\u65ad\u8bed\u53e5\u4e0a\uff0c\u867d\u7136x=1\u8fc7\u4e0d\u53bbisprime(x)\u8fd9\u9053\u574e\uff0c\u4f46\u662f\u6211\u4eec\u7684\u5173\u7cfb\u662f**\u6216**\uff0c\u5b83\u80fd\u8fc7\u53bblikeprime(x)\u8fd9\u9053\u574e\u3002\u6240\u4ee5\uff0c\u8ba9\u6211\u4eec\u8fdb\u884c**\u7279\u5224**\n\n## \u4e0b\u9762\u6765\u770b\u771f\u6b63\u7684AC\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nbool likeprime(int x)\n{\n    if(x%2==0)return false;\n    if(x%3==0)return false;\n    if(x%5==0)return false;\n    return true;\n}\nint main()\n{\n    int x;cin>>x;\n    if((isprime(x) || likeprime(x)) && x!=1)cout<<\"Prime\"<<endl;\n  //\u5982\u679cx\u4e0d\u662f1\uff0c\u6211\u4eec\u624d\u80fd\u7ed9\u8fc7\uff0c\u6ce8\u610f\u8fd9\u91cc\u7684\u903b\u8f91\n    else cout<<\"Not Prime\"<<endl;\n    return 0;\n}\n```\n-----------\n### \u73b0\u5728\uff0c\u6211\u4eec\u5df2\u7ecfA\u4e86\uff0c\u8fd9\u9053\u9898\u6709\u4e00\u4e9b\u7701\u65f6\u95f4\u7684\u529e\u6cd5\n1.\u5728isprime()\u7684\u51fd\u6570\u4e2d\uff0c\u7b2c\u4e00\u79cd\u80af\u5b9a\u6bd4\u7b2c\u4e8c\u79cd\u5feb\uff1a\n### \u7b2c\u4e00\u79cd\n```cpp\nbool isprime(int x)\n{\n    if(x<2)return false;\n    double k=sqrt(x);\n    for(int i=2;i<=k;i++)\n    if(x%i==0)return false;\n    return true;\n}\n```\n### \u7b2c\u4e8c\u79cd\n```cpp\nbool isprime(int x)\n{\n    if(x<2)return false;\n    for(int i=2;i<=sqrt(x);i++)\n    if(x%i==0)return false;\n    return true;\n}\n```\n## \u539f\u56e0\uff1a\u7b2c\u4e8c\u79cd\u4e2dfor\u5faa\u73af\u91cc\u53cd\u590d\u5f00\u6839\u53f7\u6d6a\u8d39\u65f6\u95f4\n2.\u4e3b\u51fd\u6570\u91ccif\u8bed\u53e5\u7684\u5224\u65ad\u987a\u5e8f\n```cpp\nif(isprime(x) || likeprime(x))//\u5feb\nif(likeprime(x) || isprime(x))//\u6162\n```\n## \u539f\u56e0\uff1a\u60f3\u8ba9\u5b83\u63d0\u901f\uff0c\u5224\u65ad\u6b21\u6570\u9700\u8981\u5c3d\u53ef\u80fd\u7684\u5c11\uff0c\u7b26\u5408isprime(x)\u7684\u6570\u6bd4\u7b26\u5408likeprime(x)\u7684\u6570\u5c11\u5f88\u591a\u3002\u6240\u4ee5\u6211\u4eec\u8fd8\u4e0d\u5982\u8ba9\u5b83\u5224\u65ad\u7684\u65f6\u5019\uff0c\u7b2c\u4e00\u6b21\u5c31\u6dd8\u6c70\u5927\u90e8\u5206\u6570\uff0c\u80fd\u8fdb\u884c\u7b2c\u4e8c\u6b21\u5224\u65ad\u7684\u6570\u5c31\u5c11\u4e86\uff0c\u5224\u65ad\u6b21\u6570\u5c31\u5c11\u4e86\uff0c\u901f\u5ea6\u5c31\u5feb\u4e86\u3002\n\n \u62dc\u62dc\uff0c\u795d\u60a8AC\uff0cNOIP2019 RP++",
        "postTime": 1559808605,
        "uid": 177916,
        "name": "OIerSuperTer",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 AT1476 \u3010\u7d20\u6570\u5224\u5b9a\u3011"
    },
    {
        "content": "\u8d39\u9a6c\u5c0f\u5b9a\u7406\uff1a\n\u5f53 n \u4e3a\u6574\u6570\uff0cp \u4e3a\u8d28\u6570\u65f6\uff0c\u6ee1\u8db3 n^(p\u22121)=1(mod p)\n\u53ef\u4ee5\u5316\u6210 n^p=n(mod p)\uff0c\u53ea\u4e0d\u8fc7\u56e0\u4e3a\u6709\u53ef\u80fd n>p \u800c\u901a\u5e38\u4e0d\u4f7f\u7528\u8fd9\u79cd\u5f62\u5f0f\u3002\n\n\u8d39\u9a6c\u5c0f\u5b9a\u7406\u7684\u9006\u547d\u9898\uff1a\n\u82e5 n^p =n(mod p) \uff0c\u5219 p\u4e3a\u8d28\u6570\n\u8fd9\u4e2a\u547d\u9898\u662f\u9519\u7684\uff0c\u4f46\u662f\u9519\u7684\u6982\u7387\u8f83\u5c0f\u3002\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u547d\u9898\u6765\u5224\u65ad pp \u662f\u5426\u4e3a\u8d28\u6570\u3002\n\u5177\u4f53\uff1a\n\n\u968f\u673a\u9009\u62e9n\uff0c\u82e5 np(mod p)\u2260n \u90a3\u4e48 p \u4e0d\u4e3a\u8d28\u6570\u3002\n\u4f46\u662f\u56e0\u4e3a\u6709\u53ef\u80fd\u51fa\u9519\uff0c\u6240\u4ee5\u6211\u4eec\u8bd5\u591a\u51e0\u6b21\u3002\u5982\u679c\u6bcf\u6b21\u7ed3\u679c\u90fd\u7b49\u4e8e n \uff0c\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a p \u662f\u4e00\u4e2a\u8d28\u6570\u3002\u6b21\u6570\u6309 n \u7684\u8303\u56f4\u5177\u4f53\u5b9a\u4e49\u3002\u8bd520\u6b21\u53ef\u4ee5\u4fdd\u8bc1\u5728int\u5185\u4e0d\u51fa\u9519\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\n\u7531\u4e8e\u6709\u5feb\u901f\u5e42\u8fd9\u73a9\u610f\u513f\uff0c\u6240\u4ee5\u6bcf\u6b21\u5224\u65ad\u7528\u65f6\u4e3a log(n)\u3002\u5c31\u7b97\u8981\u8bd5\u591a\u51e0\u6b21\uff0c\u4e5f\u6bd4\u539f\u6765\u7684 \u221an \u7b97\u6cd5\u597d\u4e0a\u4e0d\u5c11\u3002\u552f\u4e00\u7684\u7f3a\u61be\u662f\u8fd9\u662f\u4e00\u4e2a\u4f2a\u5224\u5b9a\u65b9\u6cd5\u3002",
        "postTime": 1548237002,
        "uid": 137157,
        "name": "\u7116\u7092\u5c0f\u571f\u8c46",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT1476 \u3010\u7d20\u6570\u5224\u5b9a\u3011"
    },
    {
        "content": "\u4ece 2 \u5230sqrt(n)\n\n\n```cpp\n#include <bits\\stdc++.h>\nusing namespace std;\nbool panduan(unsigned long long a) {\n    unsigned long long b = sqrt(a);\n    for(unsigned long long i = 2;i <= b;i++) {\n        if(a % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    unsigned long long n;\n    cin >> n;\n    for(int i =1;i <= n;i++) {\n        unsigned long long a;\n        cin >> a;\n        if(panduan(a)) {\n            cout << \"Yes\" << endl;\n        } else {\n            cout << \"No\" << endl;\n        }\n    }\n    return 0;\n} \n```",
        "postTime": 1540989607,
        "uid": 128775,
        "name": "\u9038\u5c11",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT1476 \u3010\u7d20\u6570\u5224\u5b9a\u3011"
    },
    {
        "content": "```cpp\n#include<iostream>\nusing namespace std;\nint main()\n{\t\n\tint i=2,n,sum=0;\n\tcin>>n;\n\tif(n==1)//\u7279\u52241 \n\t{\n\t\tcout<<\"Not Prime\"<<endl;\n\t\treturn 0;\n\t}\n\twhile(i<=n-1)//\u679a\u4e3ei\uff0c\u5224\u65adn\u662f\u5426\u4e3a\u8d28\u6570 \n\t{\n\t\tif(n%i==0&&(n%3==0||n%5==0||n%2==0))//\u7b5b\u6389\u7c7b\u8d28\u6570 \n\t\t{\t\n\t\t\tcout<<\"Not Prime\"<<endl;\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\tif(i==n||(n%3!=0&&n%5!=0&&n%2!=0))//\u5224\u65ad\u7c7b\u8d28\u6570\u548c\u8d28\u6570 \n\t{\n\t\tcout<<\"Prime\"<<endl;\n\t}\n\treturn 0;\n}     \n```",
        "postTime": 1531306717,
        "uid": 107297,
        "name": "\u674eMY",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 AT1476 \u3010\u7d20\u6570\u5224\u5b9a\u3011"
    },
    {
        "content": "### \u975e\u5e38\u51fa\u540d\u7684\u4e00\u9053\u9898\uff0c\u76f4\u63a5\u4e0a\u9898\u89e3\n```\n#include<iostream>\nusing namespace std;\nint main()\n{\n    int n;\n    cin>>n;\n    if(n==0||n==1){      //\u7279\u6b8a\u60c5\u51b5\n        cout<<\"No Prime\";\n        return 0;\n    }\n    if(n==2){\n        cout<<\"Yes\";   //\u7279\u6b8a\u60c5\u51b5\uff08\u5224\u5b9a2\u4e3a\u7d20\u6570\uff09\n        return 0;\n    }\n    for(int i=2;i*i<=n;i++){\n        if(n%i==0){     //\u8f97\u8f6c\u76f8\u9664\u6cd5\n            cout<<\"No Prime\";\n            return 0;\n        }\n    }\n    cout<<\"Prime\";\n}\n```\n#### \u849f\u84bb\u9898\u89e3\uff0c\u5927\u4f6c\u52ff\u55b7",
        "postTime": 1566973389,
        "uid": 209466,
        "name": "\u5728\u4e0b\u4e92\u8d28\u6570",
        "ccfLevel": 0,
        "title": "\u7d20\u6570\u5224\u5b9a"
    },
    {
        "content": "# AT1476 \u3010\u7d20\u6570\u5224\u5b9a\u3011\n\u8fd9\u9053\u9898\u9898\u610f\u5f88\u6e05\u695a\uff0c\u53ea\u9700\u5224\u65adn\u662f\u5426\u662f\u7d20\u6570\u6216\u76f8\u4f3c\u7d20\u6570\u5373\u53ef\u3002\u8fd9\u9053\u9898\u5f88\u7b80\u5355\uff0c\u8fd9\u91cc\u5c31\u4e0d\u8be6\u7ec6\u8bf4\u4e86\uff0c\u6ce8\u91ca\u770b\u4ee3\u7801\u3002\u2193\u2193\u2193\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```\n#include <bits/stdc++.h>//\u4e07\u80fd\u5934\u6587\u4ef6 \nusing namespace std;\nbool prime(int x)//\u5224\u65ad\u7d20\u6570 \n{\n\tint i;\n\tfor(int i=2;i*i<=x;i++)\n\t{\n\t\tif(x%i==0) return 0;//\u5982\u679cx\u80fd\u6574\u9664i\u5219\u4e0d\u662f\u7d20\u6570 \n\t}\n\tif(x<2) return 0;//\u5982\u679cx\u5c0f\u4e8e2\u5219\u4e0d\u662f\u7d20\u6570 \n\treturn 1;//\u5269\u4e0b\u7684\u90fd\u662f\u7d20\u6570 \n} \nint main()\n{\n\tlong long n;\n\tcin>>n;//\u8f93\u5165 \n\tif(n<2)//1\u4e0d\u662f\u5408\u6570 \n\t{\n\t\tcout<<\"Not Prime\"<<endl;//\u8f93\u51fa \n\t\treturn 0;//\u7ed3\u675f\u7a0b\u5e8f \n\t}\n\tif(prime(n)==1) cout<<\"Prime\"<<endl;//\u5982\u679c\u662f\u7d20\u6570\uff0c\u8f93\u51fa \n\telse\n\t{\n\t\tif(n%2!=0&&n%3!=0&&n%5!=0) cout<<\"Prime\"<<endl;//\u5982\u679c\u662f\u76f8\u4f3c\u7d20\u6570\uff0c\u8f93\u51fa \n\t\telse cout<<\"Not Prime\"<<endl;//\u90fd\u4e0d\u662f\uff0c\u8f93\u51fa \n\t}\n\treturn 0;//\u7ed3\u675f\u7a0b\u5e8f \n}\n```\n",
        "postTime": 1566884778,
        "uid": 106918,
        "name": "bym666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT1476 \u3010\u7d20\u6570\u5224\u5b9a\u3011"
    },
    {
        "content": "\u6574\u4e2a\u9898\u89e3\u533a\u7adf\u7136\u6ca1\u6709P\u515a\u9898\u89e3\uff01\uff01\uff08\u53ef\u601c\u5450~\uff09\n\n\u90a3\u672c\u849f\u84bb\u4e5f\u5c31\u6765\u53d1\u4e00\u7bc7\u5427\n\n\u8ba9\u5165\u95e8\u7684P\u515a\u53ef\u4ee5\u53c2\u8003\u4e00\u4e0b\n\n\u8fd9\u9053\u9898\u76ee\u5176\u5b9e\u5e76\u4e0d\u662f\u7eaf\u7cb9\u7684\u5224\u65ad\u7d20\u6570\n\n\u56e0\u4e3a\u5b83\u53ea\u8981\u4e0d\u88ab2\u30013\u30015\u6574\u9664\u5b83\u90fd\u53ef\u4ee5\u7b97\u4e3a\u76f8\u4f3c\u7d20\u6570\n\n\u8fd9\u6837\u5c31\u66f4\u7b80\u5355\u4e86\n\n\u66f4\u8be6\u7ec6\u7684\u89e3\u91ca\u8bf7\u770b\u4ee3\u7801\n\n```pascal\nvar n:longint;\nbegin\n  readln(n);//\u8bfb\u5165n\n  if n=1 then writeln('Not Prime')//\u5343\u4e07\u8981\u6ce8\u610f\u7279\u5224\uff0c1\u4e0d\u662f\u7d20\u6570\uff01\uff01\uff01\uff08\u7b2c\u4e00\u4e2a\u5751\u70b9\uff09\n  else//\u5426\u5219\u7684\u8bdd\u5c31\u7ee7\u7eed\u5224\u65ad\n  begin\n    if (n=2)or(n=3)or(n=5) then writeln('Prime')//\u8fd9\u91cc\u4e5f\u662f\u4e00\u4e2a\u7279\u5224\uff0c\u5982\u679c\u662f2\u30013\u30015\u5c31\u8f93\u51faPrrime\n    else \n    begin\n      if (n mod 2<>0)and(n mod 3<>0)and(n mod 5<>0) then//\u53ea\u8981n\u4e0d\u88ab2\u30013\u30015\u6574\u9664\u5c31\u8f93\u51faPrime \n      begin\n        writeln('Prime');\n      end\n      else\n      begin\n        writeln('Not Prime');//\u5426\u5219\u8f93\u51faNot Prime\n      end;\n    end;\n  end;\nend.\n```\n\n\u601d\u8def\u5c31\u662f\u8fd9\u6837\n\n\u5343\u4e07\u4e0d\u8981ctrl+c,ctrl+v\u54e6\uff01\n\n\u4e0d\u61c2\u5f97\u53ef\u4ee5\u5728\u8bc4\u8bba\u533a\u95ee\u6211\u54e6\uff01\n\n\uff08\u7ba1\u7406\u5458\uff0c\u5c31\u7ed9\u8fc7QAQ~\uff09",
        "postTime": 1557575773,
        "uid": 123725,
        "name": "sunchenyi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT1476 \u3010\u7d20\u6570\u5224\u5b9a\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9898\u5e76\u4e0d\u96be\uff0c\u9010\u4e2a\u8003\u8651\u5c31\u884c\u3002\n\n\u4fdd\u9669\u8d77\u89c1\uff0c\u5148\u7f16\u4e00\u4e2a\u51fd\u6570\uff0c\u8ba1\u7b97\u6570\u5b57\u548c\n```cpp\nlong long he(long long a){\n\tlong long s=0;\n\twhile(a!=0){\n\t\ts+=a%10;\n\t\ta/=10;\n\t}\n\treturn s;\n}\n```\n\u5982\u679cN\u662f1\uff0c\u76f4\u63a5\u8f93\u51fa\uff0c\u7ed3\u675f\n```cpp\n\tif(n==1){\n\t\tcout<<\"Not Prime\"<<endl;\n\t\treturn 0;\n\t}\n```\n\u7136\u540e\u5148\u5224\u65ad\u8d28\u6570\n```cpp\n\tbool x=true;\n\tfor(long long i=2;i<n;i++){\n\t\tif(n%i==0){\n\t\t\tx=false;\n\t\t\tbreak;\n\t\t}\n\t}\n```\n\u6700\u540e\u518d\u8003\u8651\u4e00\u4e0b\u7279\u6b8a\u60c5\u51b5\u5c31\u884c\u4e86\uff0c\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nlong long he(long long a){\n\tlong long s=0;\n\twhile(a!=0){\n\t\ts+=a%10;\n\t\ta/=10;\n\t}\n\treturn s;\n}\nint main(){\n\tlong long n;\n\tcin>>n;\n\tif(n==1){\n\t\tcout<<\"Not Prime\"<<endl;\n\t\treturn 0;\n\t}\n\tbool x=true;\n\tfor(long long i=2;i<n;i++){\n\t\tif(n%i==0){\n\t\t\tx=false;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(x) cout<<\"Prime\"<<endl;\n\telse {\n\t\tif(n%2!=0&&n%5!=0&&he(n)%3!=0){\n\t\t\tcout<<\"Prime\"<<endl;\n\t\t}\n\t\telse cout<<\"Not Prime\"<<endl;\n\t}\n\treturn 0;\n}\n```\n\u672c\u849f\u84bb\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\uff0c\u8bf7\u591a\u6307\u6559~",
        "postTime": 1556324368,
        "uid": 131256,
        "name": "\u771f\u00b7\u5ced\u5ca9\u4ed9\u9053",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT1476 \u3010\u7d20\u6570\u5224\u5b9a\u3011"
    },
    {
        "content": "//\u7eafc\u515a\u6765\u4e86\uff01\uff01  \n//\u8fd9\u9898\u672c\u610f\u4e0d\u9700\u8981\u7b5b\u6cd5\uff01\uff01\uff01   \n//\u4e0b\u9762\u7531\u6211\u6765\u4ecb\u7ecd\u4e00\u4e0b\u9ed1\u79d1\u6280QAQ~\n//\u52a0\u4e0a\u4e86\u4e00\u4e2a\u5c0f\u6539\u52a8QAQ\n```\n#include<stdio.h>\n//bool srx[100000001];\nint main()\n{\n    long long n//,i,j;\n    scanf(\"%lld\",&n);\n    if(n%2==0&&n!=2)//\u7279\u5224\u628a2,3,5\u53bb\u6389\u7684\u539f\u56e0\u662f\u5b83\u4eec\u662f\u7d20\u6570\n    {printf(\"Not Prime\\n\");\n    return 0;}\n    if(n%3==0&&n!=3)//\u5e76\u4e14\u5982\u679c\u6bcf\u4e2a\u6570\u5b57\u7684\u548c\u4e0d\u80fd\u88ab3\u6574\u9664\u7684\u610f\u601d\u5c31\u7b49\u540c\u4e8e\u4e0d\u662f3\u7684\u500d\u6570\n    {printf(\"Not Prime\\n\");\n    return 0;}\n    if(n%5==0&&n!=5)\n    {printf(\"Not Prime\\n\");\n    return 0;}\n    if(n==1)//\u60ef\u4f8b\uff1a\u53ea\u8981\u662f\u7d20\u65701\u90fd\u662f\u4f8b\u5916\n    {printf(\"Not Prime\\n\");\n    return 0;}\n    /*for(i=2;i*i<=10000000;i++)\n    {if(srx[i]==0)\n    for(j=i*2;j<=10000000;j+=i)\n    if(srx[j]==0)\n    srx[j]=1;}\n    if(srx[n]==0)*///\u8fd9\u6bb5\u5c31\u662f\u7b5b\u6cd5\u4e86\uff0c\u4e0d\u8fc7\u6ca1\u4ec0\u4e48\u7528\u5462\uff01\n    printf(\"Prime\\n\");//\u5728\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5269\u4e0b\u7684\u6570\u597d\u50cf\u2014\u2014\u2014\u2014\u90fd\u662f\u7d20\u6570\u6216\u7c7b\u7d20\u6570\u5462\uff01\n    //\u5176\u5b9e\u9053\u7406\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u56e0\u4e3a\u6839\u636e\u7d20\u6570\u7684\u5b9a\u4e49\uff0c\u7d20\u6570\u80af\u5b9a\u4e0d\u4f1a\u8fd8\u67092,3,5\u8fd9\u6837\u7684\u56e0\u6570\n    //\u5f53\u7136\u5b83\u672c\u8eab\u5c31\u662f\u9664\u5916QAQ~\uff0c\u6240\u4ee5\u624d\u4f1a\u6709\u524d\u9762\u7684\u7279\u5224\n    return 0;\n}\n```",
        "postTime": 1540700939,
        "uid": 47482,
        "name": "\u4e0d\u5230\u524d10\u4e0d\u6539\u540d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT1476 \u3010\u7d20\u6570\u5224\u5b9a\u3011"
    },
    {
        "content": "\u554a\uff0c~~$C++$\u515a\u7684\u9898\u89e3\u600e\u4e48\u8fd9\u4e48\u591a\u554a~~  \n~~$C$\u515a\u7684\u540c\u5b66\u4eec\u8981\u52a0\u6cb9\u4e86~~  \n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u4ee5\u4e0a\u662f\u5410\u69fd\u3002  \n\u9898\u76ee\u9700\u8981\u7528$3$\u4e2a$if$\u8bed\u53e5  \n\u7b2c\u4e00\u4e2a\uff1a\u5224\u65ad\u5b83\u662f\u5426\u7b49\u4e8e$1$\u3002\uff08$1$\u4e0d\u662f\u7d20\u6570\uff09  \n\u7b2c\u4e8c\u4e2a\uff1a\u5224\u65ad\u5b83\u662f\u5426\u662f\u7d20\u6570\u3002\uff08\u9700\u8981\u4e00\u4e2a\u5b50\u51fd\u6570\u6765\u5224\u65ad\uff09\n\u7b2c\u4e09\u4e2a\uff1a\u5224\u65ad\u5b83\u662f\u5426\u662f\u7c7b\u4f3c\u7d20\u6570\u3002  \n\u5982\u679c\u90fd\u4e0d\u6ee1\u8db3\u6761\u4ef6\u8f93\u51fa\u201c$Not Prime$\u201d\u3002  \n\u5206\u6790\u5b8c\u6bd5\uff0c\u63a5\u4e0b\u6765\u4e0a\u4ee3\u7801\uff1a  \n```\n#include <stdio.h>\nbool pd(int n)//\u5224\u65adn\u662f\u5426\u662f\u7d20\u6570\n{\n\tint i;\n\tif(i==2) return true;//2\u9700\u8981\u7279\u5224\n\tfor(i=2;i*i<=n;i++)//\u53ea\u8981\u679a\u4e3e\u5230sqrt(n)\u5c31\u591f\u4e86\n\t\tif(n%i==0) return false;//\u5982\u679c\u80fd\u88ab\u6574\u9664\uff0c\u5c31\u8bf4\u660en\u4e0d\u662f\u7d20\u6570\n\treturn true;//n\u662f\u7d20\u6570\n}\nint main()//\u6ce8\u610f\u5c9b\u56fd\u7684\u9898\u9700\u8981\u6362\u884c\n{\n\tint n;\n\tscanf(\"%d\",&n);//\u8bfb\u5165\n\tif(n==1) printf(\"Not Prime\\n\");//n\u662f\u5426\u7b49\u4e8e1\n\telse if(pd(n)) printf(\"Prime\\n\");//n\u662f\u5426\u662f\u7d20\u6570\n\telse if(n%3!=0&&n%5!=0&&n%2!=0) printf(\"Prime\\n\");//n\u662f\u7c7b\u4f3c\u7d20\u6570\n\telse printf(\"Not Prime\\n\");//\u90fd\u4e0d\u662f\n}\n```",
        "postTime": 1532933998,
        "uid": 86971,
        "name": "TRZ_2007",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 AT1476 \u3010\u7d20\u6570\u5224\u5b9a\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u53ea\u9700\u8981\u5224\u65ad\u7d20\u6570\u548c\u4f3c\u7d20\u6570\u3002\u53ef\u4ee5\u5199\u4e24\u4e2a\u5b50\u51fd\u6570\u6765\u5224\u65ad\u7d20\u6570\u548c\u4f3c\u7d20\u6570\uff01\n\n\u7a0b\u5e8f\u5982\u4e0b\uff01\uff01\uff01\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<iomanip>\n#include<cmath>\nusing namespace std;\nbool isPrime(int x)\n{\n\tif(x==0||x==1) return false;\n    for(int i=2;i<=sqrt(x);i++)\n    \tif(x%i==0) return false;\n    return true;\n}//\u5224\u65ad\u7d20\u6570\nbool sIsPrime(int x)\n{\n\tif(x%2!=0&&x%3!=0&&x%5!=0&&x!=1)\n    \treturn true;\n    else\n    \treturn false;\n}//\u5224\u65ad\u4f3c\u7d20\u6570\nint main()\n{\n    int n\uff1b\n    cin>>n;\n    if(isPrime(n)) cout<<\"Prime\"<<endl;//\u5224\u65ad\u7d20\u6570\n    else if(sIsPrime(n))cout<<\"Prime\"<<endl;//\u5224\u65ad\u4f3c\u7d20\u6570 \n    else cout<<\"Not Prime\"<<endl;\n    return 0;//\u7a0b\u5e8f\u62dc\u62dc\uff01\uff01\uff01\n}\n```",
        "postTime": 1532486598,
        "uid": 113633,
        "name": "lg_lihaoyu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT1476 \u3010\u7d20\u6570\u5224\u5b9a\u3011"
    },
    {
        "content": "\u88ab\u524d\u9762\u7684\u5047\u7ffb\u8bd1\u5751\u4e86\u3002\u4e00\u9053\u6c34\u9898\uff0c\u6309\u7167\u9898\u610f\u5c31\u53ef\u4ee5\u505a\u51fa\u6765\u4e86\n\n\u4f46\u662f\u8fd9\u91cc\u9762\u6709\u4e00\u4e2a\u5de8\u5751\uff0c\u90a3\u5c31\u662f1\uff0c\u60f3\u5fc5\u8fdb\u6765\u770b\u7684\u4eba\u90fd\u662f\u8fd9\u91cc\u9519\u4e86\n\n```\n#include<iostream>\nusing namespace std;\n\nlong long a;\n\nint f(int a){\n    if(a==1) return 0;\n    for(int i=2;i*i<=a;i++)    //\u5224\u65ad\u8d28\u6570\n        if(a%i==0)\n            return 0;\n    return 1;\n}\n\nint main(){\n    cin>>a;\n    if(f(a)) {cout<<\"Prime\"<<endl;return 0;}  //\u5f53\u662f\u8d28\u6570\u65f6\u76f4\u63a5\u8f93\u51fa\n    int i=a,sum=0;\n    while(i){\n        sum+=i%10;         //\u6c42\u6bcf\u4e00\u4f4d\u7684\u548c\n        i/=10;\n    }\n    if(a<=1||a%2==0||a%10==5||sum%3==0){  //\u4e0d\u6ee1\u8db3\u90a3\u4e9b\u6761\u4ef6\u7684\u5408\u6570\u76f4\u63a5\u8f93\u51fa\n        cout<<\"Not Prime\"<<endl;  //\u8fd9\u91cc\u8981\u8bf4\u8bf4\u4e3a\u4ec0\u4e481\u4e0d\u884c\u4e86\uff0c\u867d\u71361\u6ee1\u8db3\u90a3\u4e9b\uff0c\u4f46\u662f\u5b66\u4e60\u8d28\u6570\u7684\u65f6\u5019\u8001\u5e08\u6709\u6ca1\u6709\u8bf4\u8fc71\u65e2\u4e0d\u662f\u8d28\u6570\u4e5f\u4e0d\u662f\u5408\u6570\n    }\n    else cout<<\"Prime\"<<endl;\n    return 0;\n} \n```\n\u641e\u6e05\u695a1\u4e4b\u540e\u8fd9\u9898\u5c31\u6ca1\u4ec0\u4e48\u4e86",
        "postTime": 1521467805,
        "uid": 39654,
        "name": "LW_h_FP",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT1476 \u3010\u7d20\u6570\u5224\u5b9a\u3011"
    },
    {
        "content": "\u5927\u5bb6\u600e\u4e48\u90fd\u505a\u5f97\u90a3\u4e48\u9ebb\u70e6\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    int n;\n    cin>>n;//\u8f93\u5165\u8fd9\u4e2a\u6570\n    if((n==2||n==3||n==5)or(n%2!=0&&n%3!=0&&n%5!=0&&n!=1)) cout<<\"Prime\"<<endl; //\u8fd9\u4e2a\u6570\u662f\u5426\u80fd\u88ab2\uff0c3\uff0c5\u6574\u9664\uff08\u4e0d\u542b2\uff0c3\uff0c5\u548c1\uff09\u662f\u5c31\u8f93\u51fa\u7d20\u6570 \n    else cout<<\"Not Prime\"<<endl//\u5426\u5219\u5c31\u4e0d\u662f\n    return 0;//\u7ed3\u675f\n}\n```",
        "postTime": 1533814195,
        "uid": 94398,
        "name": "durbin\u4e2d\u5c06",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT1476 \u3010\u7d20\u6570\u5224\u5b9a\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\u5148\u8bfb\u5165\uff0c**\u518d\u7279\u52241**\uff0c\u5f88\u591a\u4eba\u90fd\u662f\u8fd9\u6837\u9519\u7684\uff08~~\u5305\u62ec\u6211~~\uff09\u7136\u540e\u679a\u4e3e\u5224\u65ad\u7d20\u6570\uff0c\u6700\u540e\u5224\u65ad\u4f3c\u7d20\u6570\u3002\n\n\n------------\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<iomanip>\n#include<cmath>\nusing namespace std;\nint main()\n{\n    int i,n,bj=0;\n    cin>>n;\n    if(n==1)bj=1;//\u7279\u52241 \n    for(i=2;i<=n-1;i++)\n        if(n%i==0){bj=1;break;}//\u679a\u4e3e\u5224\u65ad\u5b83\u7684\u56e0\u6570 \n    if(bj==0)\n    cout<<\"Prime\"<<endl;\n    else if(n%2!=0&&n%3!=0&&n%5!=0&&n!=1)cout<<\"Prime\"<<endl;//\u5224\u65ad\u4f3c\u7d20\u6570 \n    else cout<<\"Not Prime\"<<endl;\n    return 0;\n}\n```",
        "postTime": 1531727381,
        "uid": 42019,
        "name": "wubaiting2020",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT1476 \u3010\u7d20\u6570\u5224\u5b9a\u3011"
    },
    {
        "content": "\u597d\u5427\uff0c\u5176\u5b9e\u8fd9\u9053\u9898\u4e0d\u5fc5\u8981\u5224\u65ad\u7d20\u6570\uff01\uff01\uff01\n\n\u56e0\u4e3a\u5927\u4e8e5\u7684\u7d20\u6570\u4e5f\u662f\u4f3c\u7d20\u6570\uff01\n\n\u5176\u6b21\uff0c\u5404\u4f4d\u6570\u5b57\u4e4b\u548c\u80fd\u88ab3\u6574\u9664\u5c31\u662f\u8be5\u6570\u80fd\u88ab3\u6574\u9664\u3002\n```\n#include<cstdio>\nint main(){\n    int n;\n    scanf(\"%d\",&n);\n    if(n==2||n==3||n==5) puts(\"Prime\");  //\u7279\u52242,3,5\n    else if(n%2&&n%3&&n%5&&n!=1) puts(\"Prime\");//\u4f3c\u7d20\u6570\u53ca\u975e1\n    else puts(\"Not Prime\");//\u5426\u5219\n}\n```",
        "postTime": 1522846479,
        "uid": 50092,
        "name": "da32s1da",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 AT1476 \u3010\u7d20\u6570\u5224\u5b9a\u3011"
    }
]