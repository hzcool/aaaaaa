[
    {
        "content": "# \u5f15\u5165\n\u5927\u5bb6\u90fd\u77e5\u9053$Kruskal$\u6c42\u6700\u5c0f\u751f\u6210\u6811\u5427\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u5c31\u662f\u5efa\u7acb\u5728\u524d\u9762\u8bf4\u7684\u7b97\u6cd5\u7684\u57fa\u7840\u4e0a\u7684\u4e00\u4e2a\u5947\u5999\u7684\u60f3\u6cd5\u3002\n\u6709\u8fd9\u4e48\u4e00\u4e2a\u95ee\u9898\uff0c\u7ed9\u4f60\u4e00\u5f20\u56fe\uff0c\u6bcf\u6761\u8fb9\u90fd\u6709\u6743\u503c\uff0c\u7136\u540e\u89c4\u5b9a\u4e00\u5806\u4e1c\u897f\u540e\u95ee\uff1a\u6ee1\u8db3\u6761\u4ef6\u7684\u8def\u5f84\u4e2d\uff0c\u6240\u7ecf\u8fc7\u8fb9\u6743\u6700\u5927\u503c\u6700\u5c0f\u662f\u591a\u5c11\u3002\n# \u521d\u6b65\u60f3\u6cd5\n\u4e8c\u5206\uff0c\u4e00\u5b9a\u662f\u6700\u5148\u60f3\u5230\u7684\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u5c31\u4ee5\u6807\u9898\u4e2d\u7684[\u90a3\u9898](https://www.luogu.com.cn/problem/AT1998)\u4e3a\u4f8b\u8bb2\u8bb2\u8fd9\u4e2a\u7b97\u6cd5\u3002\n\n\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u4e8c\u5206\u6700\u5927\u8fb9\u6743\uff0c\u7136\u540e\u9a8c\u8bc1\u3002\u4f46\u662f\u6bcf\u6b21\u9a8c\u8bc1\u90fd\u8dd1$dfs$\u80af\u5b9a\u5f97\u70b8\u3002\n\u90a3\u4e48\u600e\u4e48\u529e\u5462\u3002\n\n\u6765\u770b\u770b\u91cd\u6784\u6811\u7b97\u6cd5\u7684\u5b9e\u73b0\u5427\u3002\n# \u5b9e\u73b0\n\u9996\u5148\uff0c\u6839\u636e$Kruskal$\u7684\u8d2a\u5fc3\u601d\u8def\uff0c\u5982\u679c\u6211\u4ece$x$\u8282\u70b9\u51fa\u53d1\uff0c\u6709\u8f83\u5c0f\u7684\u8fb9\u53ef\u4ee5\u8d70\uff0c\u80af\u5b9a\u662f\u4e0d\u4f1a\u8d70\u8f83\u5927\u7684\u8fb9\u7684\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u5c31\u662f\u4e00\u5b9a\u662f\u5728\u56fe\u7684\u6700\u5c0f\u751f\u6210\u6811\u4e0a\u8d70\u6700\u4f18\u3002\n\n\u6240\u4ee5\u65e0\u7591\uff0c\u7b97\u6cd5\u7b2c\u4e00\u6b65\uff1a\u5c06\u8fb9\u6309\u6743\u6392\u5e8f\uff0c\u6c42\u51fa\u6700\u5c0f\u751f\u6210\u6811\u3002\n\n\u7136\u540e\u5728\u6c42\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5c31\u662f\u672c\u7b97\u6cd5\u7684\u6784\u9020\u4e86\u3002\u5bf9\u4e8e\u6211\u5f53\u524d\u679a\u4e3e\u7684\u8fb9\u6240\u8fde\u63a5\u7684\u4e24\u4e2a\u70b9(\u6216\u8005\u70b9\u96c6)\uff0c\u7528\u4e00\u4e2a\u865a\u62df\u8282\u70b9\u5efa\u5728\u4e0a\u65b9\u4f5c\u4e3a\u8fd9\u4e24\u4e2a\u70b9\u7684\u7236\u8282\u70b9\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a\u7236\u8282\u70b9\u7684\u6743\u503c\u8d4b\u4e3a\u8fb9\u7684\u6743\u503c\u3002\n\n\u4e5f\u8bb8\u4e0d\u662f\u5f88\u6e05\u695a\uff0c\u90a3\u4e48\u6765\u770b\u770b\u9898\u76ee\u4e2d\u6837\u4f8b\u8fd9\u4e2a\u56fe\uff1a\n(\u6ce8\u610f\u672c\u9898\u662f\u628a\u7f16\u53f7\u5f53\u6210\u8fb9\u6743\u7684)\n\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20210103154908981.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3poYW5nY2hpemM=,size_16,color_FFFFFF,t_70)\n\n\u548c$Kruskal$\u4e00\u6837\uff0c\u5148\u53d6\u51fa$Edge(2,3)$\uff0c\u7136\u540e\u5efa\u7acb\u4e00\u4e2a\u7236\u5b50\u5173\u7cfb\uff0c\u52a0\u5165\u5230\u540c\u4e00\u96c6\u5408\u91cc\u3002\u5df2\u7ecf\u67095\u4e2a\u70b9\u4e86\uff0c\u6240\u4ee5\u4ed6\u4eec\u7684\u7236\u8282\u70b9\u5c31\u8bb0\u4e3a6\uff0c\u6743\u503c\u4e3a1\u3002\n\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20210103155309782.png)\n\n\u7136\u540e\u662f$Edge(4,5)$\uff0c\u8fdb\u884c\u540c\u6837\u7684\u64cd\u4f5c\u3002\n\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20210103155423938.png)\n\n\u7136\u540e\u662f$Edge(2,1)$\uff0c\u4f46\u662f\u6b64\u65f6$2$\u5df2\u7ecf\u5c5e\u4e8e\u4e00\u4e2a\u70b9\u96c6\u4e86\uff0c\u6240\u4ee5\u5b9e\u8d28\u4e0a\u662f\u628a1\u548c2\u6240\u5728\u7684\u70b9\u96c6\u8fde\u8d77\u6765\uff0c\u6240\u4ee5\u5e94\u8be5\u662f\u8fde\u7ed3$(1,6)$\u3002\n\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20210103155643892.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3poYW5nY2hpemM=,size_16,color_FFFFFF,t_70)\n\n\u7136\u540e\u67e5\u5230$Edge(1,3)$\uff0c\u4f46\u662f\u5728\u524d\u9762\u7684\u5e76\u67e5\u96c6\u4e2d\u53ef\u4ee5\u67e5\u5230\uff0c1\u548c3\u5df2\u7ecf\u5728\u540c\u4e00\u96c6\u5408\u91cc\u4e86\uff0c\u6240\u4ee5\u8df3\u8fc7\u3002\n\u6240\u4ee5\u6700\u540e\u4e00\u6761\u8fb9\u662f$Edge(1,4)$\uff0c\u5b9e\u8d28\u662f\u628a$8,7$\u8fde\u8d77\u6765\u3002\n\u5176\u4ed6\u7684\u90fd\u4f1a\u8df3\u8fc7\uff0c\u56e0\u4e3a\u5df2\u7ecf\u5408\u5e76\u597d\u4e86\u3002\n\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20210103160005752.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3poYW5nY2hpemM=,size_16,color_FFFFFF,t_70)\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u5728\u8fd9\u68f5\u6811\u4e0a\u505a\u4e00\u4e9b\u5947\u5947\u602a\u602a\u7684\u64cd\u4f5c\u4e86\uff0c\u56e0\u4e3a\u5b83\u6709\u4e00\u4e2a\u7f8e\u5999\u7684\u6027\u8d28\uff1a\u6bcf\u4e00\u6761\u6811\u679d\u4e0a\uff0c\u8fb9\u6743\u662f\u5355\u8c03\u7684\uff0c\u90a3\u4e48\u53ef\u4ee5\u500d\u589e\u6765\u5feb\u901f\u627e\u5230\u6700\u5927\u7684\u4e0d\u8d85\u8fc7\u67d0\u4e2a\u503c\u7684\u6700\u5c0f\u4f4d\u7f6e\u662f\u54ea\u91cc\u4e86\u3002\n\n\u6bd4\u5982\u672c\u9898\uff0c\u5c31\u53ef\u4ee5\u4e8c\u5206\u7b54\u6848\uff0c\u7136\u540e\u5bf9\u4e8e$x$\u548c$y$\uff0c\u5206\u522b\u5411\u4e0a\u8df3\u5230\u70b9\u6743\u662f\u5927\u4e8e\u6211\u4e8c\u5206\u7684\u503c\u4e3a\u6b62\uff0c\u7136\u540e\u5411\u4e0b\u5b50\u6811\u4e2d\u53f6\u8282\u70b9\u4e2a\u6570\u4e00\u52a0\u5c31\u662f\u6211\u7ecf\u8fc7\u70b9\u7684\u4e2a\u6570\uff0c\u548c$z$\u6bd4\u4e00\u4e0b\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u8fd9\u4e2a\u4e8c\u5206\u4e86\u3002\n\n$\\color{Red}{Ps:}$\u4e00\u5b9a\u4e00\u5b9a\u4e00\u5b9a\u8981\u6ce8\u610f\u500d\u589e\u4e0d\u8981\u5199\u9519\u4ee5\u53ca\uff0c\u5982\u679c$xy$\u8df3\u5230\u4e00\u8d77\u53bb\u4e86\uff0c\u53ea\u80fd\u7b97\u4e00\u4e2a\u3002\n\n\u76f8\u4fe1\u7406\u89e3\u8d77\u6765\u4e0d\u96be\u5427\u3002\u4e0a\u4ee3\u7801\u3002\n\n# Code\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define inf 1<<30\nusing namespace std;\nconst int MAXN=2e5+10;\nvector<int> vec[MAXN];\nvoid add(int fa,int u,int v){\n\tvec[fa].push_back(u);\n\tvec[fa].push_back(v);\n}\nint cnt,son[MAXN],f[MAXN][20],v[MAXN];\nvoid dfs(int x,int fa){\n\tf[x][0]=fa;\n\tfor(int i=1;i<20;i++) f[x][i]=f[f[x][i-1]][i-1];\n\tif(vec[x].size()==0){son[x]=1;return;}\n\tson[x]=0;\n\tfor(int i=0;i<vec[x].size();i++){\n\t\tint s=vec[x][i];\n\t\tif(s==fa) continue;\n\t\tdfs(s,x);son[x]+=son[s];\n\t}\n}//\u9884\u5904\u7406\u500d\u589e\u548c\u5b50\u6811\u4e2d\u53f6\u8282\u70b9\u7684\u4e2a\u6570\nint check(int p,int x,int y){\n\tfor(int i=19;i>=0;i--){\n\t\tif(v[f[x][i]]<=p) x=f[x][i];\n\t\tif(v[f[y][i]]<=p) y=f[y][i];\n\t}\n\tif(x==y) return son[x];\n\telse return son[x]+son[y];\n}//\u9a8c\u7b97\uff0c\u5f97\u5230\u7ecf\u8fc7\u8282\u70b9\u4e2a\u6570\nint ff[MAXN];\nint find(int x){return ff[x]==x?x:ff[x]=find(ff[x]);}\nint main()\n{\n\tint n,m,x,y,z;\n\tscanf(\"%d%d\",&n,&m);cnt=n;\n\tfor(int i=1;i<=2*n;i++) v[i]=0,ff[i]=i;\n\tv[0]=inf;//\u9632\u6b62\u8df3\u5230\u6839\u7684\u5916\u9762\u53bb\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tint fx=find(x),fy=find(y);\n\t\tif(cnt<n*2-1&&fx!=fy){\n\t\t\tcnt++;\n\t\t\tv[cnt]=i;\n\t\t\tff[fy]=cnt;\n\t\t\tff[fx]=cnt;//\u8fd9\u91cc\u5176\u5b9e\u548c\u88f8\u7684Kruskal\u5f88\u50cf\u7684\uff0c\u4f46\u662f\u7531\u4e8e\u6709\u65b0\u5efa\u7684\u8282\u70b9\u6240\u4ee5\u66f4\u4f18\u7f8e\u4e86\n\t\t\tadd(cnt,fx,fy);\n\t\t}//\u672c\u9898\u7684\u7279\u6b8a\u6027\uff0c\u5426\u5219\u9700\u8981\u6309\u6743\u6392\u5e8f\u540e\u518d\u505a\n\t}\n\tdfs(cnt,0);int Q;\n\tfor(scanf(\"%d\",&Q);Q--;){\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tint ans=m,l=0,r=m;\n\t\twhile(l<=r){\n\t\t\tint mid=l+r>>1;\n\t\t\tif(check(mid,x,y)<z) l=mid+1,ans=l;\n\t\t\telse r=mid-1;\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n}\n```\n# END\n\u5f88\u591a\u4eba\u7528\u53ef\u6301\u4e45\u5316\u5e76\u67e5\u96c6\u548c\u6574\u4f53\u4e8c\u5206\u8fc7\u4e86\u8fd9\u9898\u2026\u2026",
        "postTime": 1609661541,
        "uid": 292315,
        "name": "ZCETHAN",
        "ccfLevel": 7,
        "title": "Kruskal\u91cd\u6784\u6811(AT1998 Stamp Rally)"
    },
    {
        "content": "\u9898\u610f\uff1a\u4e00\u5f20\u8fde\u901a\u56fe\uff0c\u7b2c $i$ \u6761\u8fb9\u7684\u8fb9\u6743\u662f $i$\uff0c\u591a\u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u5b9a $x,y,k$\uff0c\u8be2\u95ee\u4ece $x$ \u548c $y$ \u4e24\u4e2a\u70b9\u8d70\u51fa\u6765\u7684\u70b9\u96c6\uff08\u5305\u62ec $x,y$\uff0c\u6ee1\u8db3\u5927\u5c0f\u7b49\u4e8e $k$ \u7684\u65f6\u5019\uff0c\u8d70\u8fc7\u7684\u8fb9\u6700\u5927\u503c\u7684\u6700\u5c0f\u503c\u662f\u591a\u5c11\uff0c\u5141\u8bb8\u79bb\u7ebf\u3002\n\n\u6700\u5927\u503c\u7684\u6700\u5c0f\u503c\uff1f\u4e8c\u5206\u3002\n\n\u591a\u6b21\u8be2\u95ee\uff1f\u6574\u4f53\u4e8c\u5206\u3002\n\n\u8bbe\u4e00\u4e2a\u51fd\u6570 $\\text{solve(1,m,1,q)}$ \u8868\u793a\u63a5\u4e0b\u6765\u8981\u641e\u5b9a $[1,q]$ \u4e4b\u95f4\u7684\u95ee\u9898\uff0c\u5e76\u4e14\u6211\u4eec\u53ef\u4ee5\u4fdd\u8bc1\u7b54\u6848\u5728 $[1,m]$ \u4e4b\u95f4\u3002\n\n\u7136\u540e\u6bcf\u6b21\u505a\u51fa\u6765\u4e00\u4e2a $\\text{mid}$\uff0c\u5b83\u8868\u793a\u6211\u4eec\u63a5\u4e0b\u6765\u8981\u4e8c\u5206\uff0c\u7136\u540e\u6211\u4eec\u628a\u8fb9\u6743\u5c0f\u4e8e\u7b49\u4e8e $\\text{mid}$ \u7684\u8fb9\u7559\u4e0b\uff0c\u5224\u65ad\u54ea\u4e9b\u8be2\u95ee\u7684\u7b54\u6848\u5728 $[1,mid]$\uff0c\u54ea\u4e9b\u5728 $[mid+1,r]$\u3002\n\n\u7136\u540e\u5c31\u662f\u8fd9\u4e2a\u5224\u65ad\u7684\u8fc7\u7a0b\u4e86\uff0c\u770b\u770b\u8be2\u95ee\u7684\u4e24\u4e2a\u70b9\u901a\u8fc7\u7559\u4e0b\u7684\u8fb9\u80fd\u8d70\u5230\u54ea\u91cc\uff0c\u628a\u80fd\u8d70\u51fa\u6765\u7684\u70b9\u96c6\u4e0e $k$ \u6bd4\u8f83\u5373\u53ef\uff0c\u5927\u4e8e $k$ \u5c31\u8868\u793a\u7559\u4e0b\u6765\u7684\u8fb9\u592a\u5927\u4e86\uff0c\u6211\u4eec\u8fd8\u80fd\u66f4\u5c0f\u3002\n\n\u540c\u65f6\u4f7f\u7528\u4e00\u4e2a\u5e76\u67e5\u96c6\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u73b0\u5728\u662f $15:44$\uff0c\u6211\u770b\u6211\u4ec0\u4e48\u65f6\u5019\u5199\u5b8c\u3002\n\n\u73b0\u5728\u662f $16:26$\uff0c\u6211\u5199\u5b8c\u4e86\u3002\n\n```cpp\n#define maxn 100010\nint n,m,G;\nint x[maxn],y[maxn];\nstruct prpr{\n\tint x,y,k,id;\n}q[maxn],tmpl[maxn],tmpr[maxn];\nint fa[maxn],ans[maxn],siz[maxn];\nint get(int x){\n\tif(x==fa[x])return fa[x];\n\treturn get(fa[x]);\n}\npair<int,int>sta[maxn];\nint top;\nvoid merge(int x,int y){//\u53c8\u7ef4\u62a4\u4e86siz\uff0c\u53c8\u6309\u79e9\u5408\u5e76\u4e86\uff0c\u6211\u89c9\u5f97\u5f88\u5de7\u5999\u554a\uff01\uff01 \n\tx=get(x),y=get(y);\n\tif(x==y)return;\n\tif(siz[x]>siz[y])swap(x,y);\n\tfa[x]=y;siz[y]+=siz[x];\n\tsta[++top]=make_pair(x,y);\n}\nvoid solve(int l,int r,int L,int R){\n\tif(l==r){\n\t\tfor(int i=L;i<=R;i++)ans[q[i].id]=l;\n\t\tint X=get(x[l]),Y=get(y[l]);\n\t\tif(X==Y)return;\n\t\tif(siz[X]>siz[Y])swap(X,Y);\n\t\tfa[X]=Y;siz[Y]+=siz[X];\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tfor(int i=l;i<=mid;i++)merge(x[i],y[i]);\n\tint ll=0,rr=0;\n\tfor(int i=L;i<=R;i++){\n\t\tint x=get(q[i].x),y=get(q[i].y);\n\t\tif(x==y){\n\t\t\tif(siz[x]>=q[i].k)tmpl[++ll]=q[i];\n\t\t\telse tmpr[++rr]=q[i];\n\t\t}else{\n\t\t\tif(siz[x]+siz[y]>=q[i].k)tmpl[++ll]=q[i];\n\t\t\telse tmpr[++rr]=q[i];\n\t\t}\n\t}\n\tfor(int i=1;i<=ll;i++)q[L+i-1]=tmpl[i];\n\tfor(int i=1;i<=rr;i++)q[L+ll+i-1]=tmpr[i];\n\twhile(top)fa[sta[top].first]=sta[top].first,siz[sta[top].second]-=siz[sta[top].first],top--;\n\tsolve(l,mid,L,L+ll-1);\n\tsolve(mid+1,r,L+ll,L+ll+rr-1);\n}\nsigned main(){\n#ifndef ONLINE_JUDGE\n\tfreopen(\"testdata.in\",\"r\",stdin);\n#endif\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)fa[i]=i,siz[i]=1;\n\tfor(int i=1;i<=m;i++)cin>>x[i]>>y[i];\n\tcin>>G;\n\tfor(int i=1;i<=G;i++)cin>>q[i].x>>q[i].y>>q[i].k,q[i].id=i;\n\tsolve(1,m,1,G);\n\tfor(int i=1;i<=G;i++)cout<<ans[i]<<endl;\n#ifndef ONLINE_JUDGE\n\tcerr<<endl<<(double)clock()/CLOCKS_PER_SEC;\n#endif\n}\n```\n\u88ab\u57cb\u4f0f\u5230\u4e86\uff0c\u4e4b\u524d\u52a0\u4e0a\u4e86 ```L>R``` \u7684\u4f18\u5316\uff0c\u8fd9\u6837\u5c31\u4e0d\u80fd\u904d\u5386\u5230\u5e95\uff0c\u6709\u4e00\u4e9b\u8fb9\u6ca1\u8fde\u4e0a\uff0c\u5c31\u767d\u7ed9\u4e86\u3002\n\n\u6700\u4f18\u89e3\u8fd8\u86ee\u597d\u62ff\u7684\u3002\n\n$\\text{Update 2021.10.8}$\n\n\u5b66\u4e86 $\\text{Kruskal}$ \u91cd\u6784\u6811\uff0c\u8865\u4e00\u4e2a\u91cd\u6784\u6811\u505a\u6cd5\u3002\n\n[\u524d\u7f6e\u829d\u58eb](https://www.luogu.com.cn/blog/Peterprpr/p1967-noip2013-ti-gao-zu-huo-ju-yun-shu-ji-lu)\n\n\u8fb9\u6743\u662f\u6392\u597d\u7684\uff0cnice\n\n\u5efa\u51fa\u91cd\u6784\u6811\uff0c\u4f7f\u5f97\u4e0a\u9762\u7684\u4ee3\u8868\u8282\u70b9\u8868\u793a\uff0c\u5b50\u6811\u7684\u6240\u6709\u53f6\u5b50\u8282\u70b9\u6784\u6210\u7684\u56fe\uff0c\u62e5\u6709\u8fd9\u4e2a\u4ee3\u8868\u8282\u70b9\u7684\u70b9\u6743\uff0c\u53ef\u4ee5\u968f\u4fbf\u8d70\u3002\n\n\u7136\u540e\u4e8c\u5206\u8fd9\u4e2a\u9608\u503c\uff0c\u5bf9\u4e24\u4e2a\u70b9\u4e00\u8d77\u5f80\u4e0a\u8df3\u7740\u505a\u5c31\u884c\u4e86\u3002\n\n\u73b0\u5728\u662f $20:24$\uff0c\u6211\u770b\u6211\u4ec0\u4e48\u65f6\u5019\u5199\u5b8c\u3002\n\n\u73b0\u5728\u662f $20:43$\uff0c\u6211\u5199\u5b8c\u4e86\u3002\n\n```cpp\n#define maxn 200010\nint n,m,Q,x,y,z;\nint fa[maxn],val[maxn];\nint get(int x){\n\tif(x==fa[x])return x;\n\treturn fa[x]=get(fa[x]);\n}\nint cnt;\nint head[maxn],Next[maxn<<1],ver[maxn<<1],__;\nvoid add(int x,int y){\n\tver[++__]=y;\n\tNext[__]=head[x];\n\thead[x]=__;\n}\nint FA[maxn][20],t,siz[maxn];\nvoid dfs(int x){\n\tif(!head[x])siz[x]=1;\n\tfor(int i=head[x];i;i=Next[i]){\n\t\tint y=ver[i];\n\t\tFA[y][0]=x;\n\t\tfor(int j=1;j<=t;j++)\n\t\tFA[y][j]=FA[FA[y][j-1]][j-1];\n\t\tdfs(y);\n\t\tsiz[x]+=siz[y];\n\t}\n}\nbool check(int x,int y,int mid){\n\tfor(int i=t;~i;i--)\n\tif(val[FA[x][i]]<=mid)x=FA[x][i];\n\tfor(int i=t;~i;i--)\n\tif(val[FA[y][i]]<=mid)y=FA[y][i];\n\tif(x==y)return siz[x]>=z;\n\treturn siz[x]+siz[y]>=z;\n}\nint l,r,mid;\nsigned main(){\n#ifndef ONLINE_JUDGE\n\tfreopen(\"testdata.in\",\"r\",stdin);\n#endif\n\tcin>>n>>m;\n\tfor(int i=1;i<=2*n;i++)fa[i]=i;\n\tcnt=n;\n\tfor(int i=1;i<=m;i++){\n\t\tcin>>x>>y;\n\t\tx=get(x),y=get(y);\n\t\tif(x==y)continue;\n\t\tfa[x]=fa[y]=++cnt;\n\t\tadd(cnt,x),add(cnt,y);\n\t\tval[cnt]=i;\n\t}\n\tt=ceil(log(n)/log(2));\n\tval[0]=INT_MAX;\n\tdfs(cnt);\n\tcin>>Q;\n\twhile(Q--){\n\t\tcin>>x>>y>>z;\t\n\t\tl=1,r=m;\n\t\twhile(l<=r){\n\t\t\tmid=(l+r)>>1;\n\t\t\tif(check(x,y,mid))r=mid-1;\n\t\t\telse l=mid+1;\n\t\t}cout<<l<<endl;\n\t}\n#ifndef ONLINE_JUDGE\n\tcerr<<endl<<(double)clock()/CLOCKS_PER_SEC;\n#endif\n}\n```\n\u4ee3\u7801\u8fd8\u633a\u77ed\u3002\u3002\u3002",
        "postTime": 1633419903,
        "uid": 100325,
        "name": "peterwuyihong",
        "ccfLevel": 7,
        "title": "AT1998 [AGC002D] Stamp Rally \u8bb0\u5f55"
    },
    {
        "content": "\u8fd9\u9053\u9898\u662f\u53ef\u4ee5\u505a\u5230\u4e00\u4e2a$log$\u7684\u3002\n\n\u9996\u5148\u770b\u5230\u6700\u5927\u503c\u6700\u5c0f\uff0c\u60f3\u5230\u4e8c\u5206\u3002\u4e8c\u5206\u4e00\u4e2a\u7b54\u6848$mid$\uff0c\u628a\u524d$mid$\u6761\u8fb9\u66b4\u529b\u7528\u5e76\u67e5\u96c6\u8fde\u4e0a\uff0c\u5982\u679c\u4e24\u4e2a\u70b9\u5728\u4e00\u4e2a\u96c6\u5408\uff0c\u5c31\u5224\u8fd9\u4e2a\u96c6\u5408\u5927\u5c0f\u662f\u5426\u5927\u4e8e$z$\uff0c\u5426\u5219\u5c31\u628a\u4e24\u4e2a\u96c6\u5408\u5e76\u8d77\u6765\u5224\uff0c\u8fd9\u6bcb\u5eb8\u8d58\u8ff0\u3002\n\n\u8fd9\u6837\u505a\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(n^2*log n)$\u3002\n\n\u74f6\u9888\u5728\u4e8e\uff0c\u5982\u679c\u6240\u6709\u95ee\u9898\u7684\u7b54\u6848\u90fd\u662f$m$\uff0c\u5728\u8fde\u5b8c$m$\u6761\u8fb9\u540e\uff0c\u6211\u4eec\u672c\u53ef\u4ee5\u4e00\u6b21\u6027\u8f93\u51fa\u6240\u6709\u7b54\u6848\uff0c\u4f46\u8fd9\u4e2a\u505a\u6cd5\u9700\u8981\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\uff0c\u4ece\u5934\u518d\u5199\u5e76\u67e5\u96c6\uff0c\u4e0d\u591f\u4f18\u79c0\u3002\u60f3\u5230\u6574\u4f53\u4e8c\u5206\u3002\n\n\u5f00\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u5148\u628a\u6240\u6709\u8be2\u95ee\u6302\u5728\u6839\uff0c\u4ece\u4e0a\u5230\u4e0b\u5904\u7406\u3002\u8bbe\u5f53\u524d\u533a\u95f4\u662f$[l,r]$\uff0c$[l,mid]$\u8fde\u5b8c\u540e\u4e00\u6b21\u6027\u5224\u65ad\u6240\u6709\u8be2\u95ee\uff0c\u5df2\u5408\u6cd5\u5c31\u4e0b\u4f20\u5230\u5de6\u513f\u5b50\uff0c\u5426\u5219\u4e0b\u4f20\u5230\u53f3\u513f\u5b50\u3002\u518d\u628a$[mid+1,r]$\u8fde\u5b8c\u3002\n\n\u4f46\u5982\u679c\u6df1\u641c\u6811\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4ecd\u662f$O(n^2*log n)$\uff0c\u539f\u56e0\u662f\u505a\u5b8c$[1,4]$\u540e\u505a$[1,2]$\uff0c\u8981\u56de\u9000\u5230\u4e24\u6b65\u4e4b\u524d\u7684\u72b6\u6001\uff0c\u8fd9\u662f\u8def\u5f84\u538b\u7f29\u5e76\u67e5\u96c6\u505a\u4e0d\u5230\u7684\u3002\uff08\u5f53\u7136\uff0c\u53ef\u4ee5\u7528\u6309\u79e9\u5408\u5e76\u505a\u5230$O(n*(log n)^2)$\u3002\uff09\n\n\u60f3\u5230\u53ef\u4ee5\u5e7f\u641c\u6811\u3002\u5148\u628a$m$\u8865\u5230$2$\u7684\u65b9\u5e42\uff0c\u8fd9\u6837\u6811\u662f\u4e00\u68f5\u6ee1\u4e8c\u53c9\u6811\u3002\u4e00\u5c42\u4e00\u5c42\u5904\u7406\uff0c\u8be2\u95ee\u533a\u95f4\u8fde\u7eed\uff0c\u4e14\u5e76\u5728\u4e00\u8d77\u6070\u597d\u662f$[1,m]$\uff0c\n\n\u5b9e\u73b0\u65b9\u9762\uff0c\u7528\u961f\u5217\u7ef4\u62a4\u5373\u53ef\u3002\u5f53\u5de6\u7aef\u70b9\u662f$1$\u65f6\uff0c\u8981\u6e05\u7a7a\u6570\u7ec4\u3002\n\n\u4ee3\u7801\uff1a\n\n```\n\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<string>\n#include<algorithm>\n#include<math.h>\n#include<vector>\nusing namespace std;\n\nconst int N=1e6+5;\nint n,m,q,ans[N],fa[N],sz[N];\npair<int,int> p[N],pre[N];\nstruct node\n{\n\tint x,y,z;\n};\nnode que[N];\nvector<int> v[N];\n\nvoid init()\n{\n\tint i;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i=1;i<=m;++i) scanf(\"%d%d\",&p[i].first,&p[i].second);\n\tint tmp=1;while(tmp<m) tmp<<=1;\n\tfor(i=m+1;i<=tmp;++i) p[i]=make_pair(1,1);m=tmp;\n\tscanf(\"%d\",&q);\n\tfor(i=1;i<=q;++i) scanf(\"%d%d%d\",&que[i].x,&que[i].y,&que[i].z);\n}\n\nvoid prework(int l,int r,int rt)\n{\n\tpre[rt]=make_pair(l,r);\n\tif(l==r) return;\n\tint mid=(l+r)>>1;\n\tprework(l,mid,rt<<1);\n\tprework(mid+1,r,rt<<1|1);\n}\n\nint getfa(int x)\n{\n\tif(fa[x]!=x) fa[x]=getfa(fa[x]);\n\treturn fa[x];\n}\nvoid mer(int x,int y)\n{\n\tint fx=getfa(x),fy=getfa(y);\n\tif(fx!=fy) fa[fx]=fy,sz[fy]+=sz[fx];\n}\n\nvoid work()\n{\n\tint i,j;\n\tfor(i=1;i<=q;++i) v[1].push_back(i);\n\tfor(i=1;i<m;++i)\n\t{\n\t\tif(pre[i].first==1)\n\t\t\tfor(j=1;j<=n;++j) fa[j]=j,sz[j]=1;\n\t\tint mid=(pre[i].first+pre[i].second)>>1;\n\t\t\n\t\tfor(j=pre[i].first;j<=mid;++j)\n\t\t\tmer(p[j].first,p[j].second);\n\t\t\t\n\t\tvector<int>::iterator it;\n\t\tfor(it=v[i].begin();it!=v[i].end();++it)\n\t\t{\n\t\t\tint to=*it;\n\t\t\tint fx=getfa(que[to].x);\n\t\t\tint fy=getfa(que[to].y);\n\t\t\tint ans=sz[fx];\n\t\t\tif(fx!=fy) ans+=sz[fy]; \n\t\t\tif(ans>=que[to].z) v[i<<1].push_back(to);\n\t\t\telse v[i<<1|1].push_back(to);\n\t\t}\n\t\t\n\t\tfor(j=mid+1;j<=pre[i].second;++j)\n\t\t\tmer(p[j].first,p[j].second);\n\t}\n\t\n\tfor(j=m;j<2*m;++j)\n\t{\n\t\tvector<int>::iterator it;\n\t\tfor(it=v[j].begin();it!=v[j].end();++it)\n\t\t\tans[*it]=pre[j].first;\n\t}\n\t\n\tfor(i=1;i<=q;++i) printf(\"%d\\n\",ans[i]);\n}\n\nint main()\n{\n\tinit();prework(1,m,1);work();\n\treturn 0;\n}\n\n```",
        "postTime": 1550547436,
        "uid": 31435,
        "name": "hwk0518",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT1998 \u3010Stamp Rally\u3011"
    },
    {
        "content": "- \u8fd9\u9898\u9650\u5236\u4e86\u7ecf\u8fc7\u70b9\u7684\u4e2a\u6570\u8981\u6070\u597d\u4e3a $z$\uff0c\u4e0d\u80fd\u5927\u4e5f\u4e0d\u80fd\u5c0f\uff0c\u6240\u4ee5\u4e8c\u5206\u662f\u4e00\u4e2a\u6bd4\u8f83\u597d\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\n- \u4f9d\u636e\u9898\u76ee\uff0c\u5b83\u8981\u6c42\u7684\u662f\u6240\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u8def\u5f84\uff0c\u4e5f\u5c31\u662f\u4ece\u70b9 $x$ \u548c $y$ \u51fa\u53d1\uff0c\u7ecf\u8fc7\u7684\u70b9(\u4e0d\u91cd\u590d)\u6570\u91cf\u7b49\u4e8e $z$ \u7684\u8def\u5f84\uff0c\u7ecf\u8fc7\u7684\u8fb9\u6700\u5927\u7f16\u53f7\u6700\u5c0f\u662f\u591a\u5c11\u3002\n\n- \u4ee4\u8fb9\u7684\u6743\u503c\u4e3a\u8fb9\u7684\u7f16\u53f7\uff0c\u6c42\u8def\u5f84\u7684\u8fb9\u6743\u6700\u5927\u503c\u6700\u5c0f\u5bb9\u6613\u60f3\u5230 $\\text{Kruskal}$ \u91cd\u6784\u6811\u3002\n\n\u8003\u8651\u4e8c\u5206\u7b54\u6848\uff0c\u90a3\u4e48\u5c31\u7ed9\u4e86\u70b9\u5728 $\\text{Kruskal}$ \u91cd\u6784\u6811\u4e0a\u7684\u9650\u5236\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u70b9\u53ef\u4ee5\u627e\u5230\u6df1\u5ea6\u6700\u6d45\u7684\u4e00\u4e2a\u7956\u5148\uff0c\u6ee1\u8db3\u5b83\u7684\u70b9\u6743\u5c0f\u4e8e\u4e8c\u5206\u503c\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u5c31\u53ef\u4ee5\u8d70\u5230\u8fd9\u68f5\u5b50\u6811\u4e0a\u7684\u6240\u6709\u70b9\u3002\n\n\u8bb0\u5f55\u6bcf\u68f5\u5b57\u6570\u7684\u53f6\u5b50\u7ed3\u70b9\u4e2a\u6570\uff0c\u7136\u540e $x,y$ \u500d\u589e\u8ba1\u7b97\u7b54\u6848\uff0c\u7136\u540e\u4e0e $z$ \u6bd4\u8f83\u5373\u53ef\u5b8c\u6210\u4e8c\u5206\u3002\n\n\u5728\u7ec6\u8282\u4e0a\uff0c\u9700\u8981\u6ce8\u610f\u5728\u500d\u589e\u7684\u65f6\u5019\uff0c\u8981\u8bb0\u5f97\u5224\u65ad $x,y$ \u6700\u540e\u8df3\u5230\u7684\u662f\u4e0d\u662f\u4e00\u4e2a\u70b9\uff0c\u5c0f\u5fc3\u7b97\u91cd\u3002\n\n\u4ee3\u7801\u590d\u6742\u5ea6\u8f83\u4f4e\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u4e24\u4e2a $\\log$\u3002\n\n\n```cpp\n#include<cstdio>\nusing namespace std;\nint n,m,fa[200010],tot,x,y,val[200010],f[200010][18],cnt,dep[200010],ans,leave[200010],q,z;\nstruct node{int last,en,next;} e[400010];\nint get(int x){return fa[x]==x?x:fa[x]=get(fa[x]);}\nvoid add(int x,int y)\n{\n\te[++tot].en=y;\n\te[tot].next=e[x].last;\n\te[x].last=tot;\n}\nvoid dg(int x,int fa)\n{\n\tf[x][0]=fa;dep[x]=dep[fa]+1;\n\tfor (int i=e[x].last;i;i=e[i].next)\n\t\tif (e[i].en!=fa) dg(e[i].en,x),leave[x]+=leave[e[i].en];\n}\nint check(int x,int y,int mid)\n{\n\tfor (int i=17;i>=0;i--)\n\t{\n\t\tif (val[f[x][i]]<=mid) x=f[x][i];\n\t\tif (val[f[y][i]]<=mid) y=f[y][i];\n\t}\n\tif (x==y) return leave[x];\n\telse return leave[x]+leave[y];\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tcnt=n;\n\tfor (int i=1;i<2*n;i++) fa[i]=i;\n\tfor (int i=1;i<=n;i++) leave[i]=1;\n\tval[0]=0x3f3f3f3f;\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tif (cnt==2*n-1) continue;\n\t\tint u=get(x),v=get(y);\n\t\tif (u!=v)\n\t\t{\n\t\t\t++cnt;\n\t\t\tfa[u]=fa[v]=cnt;\n\t\t\tval[cnt]=i;\n\t\t\tadd(cnt,u);add(cnt,v);\n\t\t}\n\t}\n\tdg(cnt,0);\n\tfor (int j=1;j<=17;j++)\n\t\tfor (int i=1;i<=cnt;i++)\n\t\t\tf[i][j]=f[f[i][j-1]][j-1];\n\tscanf(\"%d\",&q);\n\tfor (int i=1;i<=q;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tint l=1,r=m,mid;ans=0;\n\t\twhile (l<=r)\n\t\t{\n\t\t\tmid=(l+r)>>1;\n\t\t\tif (check(x,y,mid)>=z) ans=mid,r=mid-1;\n\t\t\telse l=mid+1;\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1645346262,
        "uid": 157857,
        "name": "ImmortalWatcher",
        "ccfLevel": 6,
        "title": "[AGC002D] Stamp Rally"
    },
    {
        "content": "### AGC002D\n\n~~\u5dee\u70b9\u4e0d\u4f1a\u505a\uff0c\u8eab\u8d25\u540d\u88c2~~\n\n\u663e\u7136\u53d1\u73b0\u8fd9\u4e24\u4e2a\u4eba\u53ea\u4f1a\u8d70\u6700\u5c0f\u751f\u6210\u6811\u4e0a\u7684\u8fb9 ~~\u7136\u800c\u5e76\u6ca1\u6709\u4ec0\u4e48\u7528~~\n\n\u4e00\u5f00\u59cb\u60f3\u5bf9\u6bcf\u4e2a\u8be2\u95ee\u4e8c\u5206\uff0c\u4f46\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u592a\u9ad8\uff0c\u662f $O(q n \\log n)$\uff0c\u65e0\u6cd5\u63a5\u53d7\n\n\u8003\u8651\u4e8c\u5206\u7684\u8fc7\u7a0b\uff0c\u53ea\u9700\u8981\u5224\u65ad\u5728 $mid$ \u65f6\u523b\uff0c ` size[getfa(x)]+size[getfa(y)]>=z` \u5373\u53ef\uff0c\u800c\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\uff0c\u8fd9\u6837\u7684 $mid$ \u4e0d\u8d85\u8fc7 $\\log m$ \u4e2a\n\n\u4e8e\u662f\u53ef\u4ee5\u624b\u52a8\u6a21\u62df $\\log m$ \u6b21\u5b8c\u6574\u7684\u8fde\u8fb9\u8fc7\u7a0b\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee\uff0c\u7ef4\u62a4\u5f53\u524d\u7684 $l,r$ \uff0c\u5728\u8fd9\u6b21\u8fde\u8fb9\u8fc7\u7a0b\u4e2d\u8be2\u95ee $mid$\uff0c\u4e4b\u540e\u66f4\u65b0 $l,r$ \u5373\u53ef\n\n\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6 $O((n+m+q) \\log m)$\n\n\u4ee3\u7801\uff08\u6ce8\u610f `size` \u5728 AtCoder \u662f\u5173\u952e\u5b57\uff0c\u56e0\u4e3a\u8fd9\u4e2a CE \u4e86\u4e00\u53d1 /youl \uff09\n```\n#include<bits/stdc++.h>\n#define rep(i,a,b) for (register int i=(a);i<=(b);i++)\n#define drep(i,a,b) for (register int i=(a);i>=(b);i--)\ntypedef long long ll;\nusing namespace std;\ninline ll read()\n{\n\tll sum=0,f=0;char c=getchar();\n\twhile (!isdigit(c)) f|=(c=='-'),c=getchar();\n\twhile (isdigit(c)) sum=(sum<<1)+(sum<<3)+(c^48),c=getchar();\n\treturn f?-sum:sum;\n}\n\n#define fir first\n#define sec second\nconst int N=500010;\nint n,m,Q,a[N],fa[N],siz[N],sure[N],ans[N];\npair<int,int>p[N],e[N];\npair<pair<int,int>,int>q[N];\nvector<int>vec[N];\n\nint getfa(int x){return x==fa[x]?x:fa[x]=getfa(fa[x]);}\ninline void merge(int x,int y)\n{\n\tx=getfa(x),y=getfa(y);\n\tif (x==y) return;\n\tfa[y]=x,siz[x]+=siz[y];\n}\n\nint main()\n{\n\tn=read(); m=read(); rep(i,1,m) e[i].fir=read(),e[i].sec=read();\n\tQ=read(); rep(i,1,Q) q[i].fir.fir=read(),q[i].fir.sec=read(),q[i].sec=read(),p[i].fir=1,p[i].sec=m;\n\trep(times,1,20)\n\t{\n\t\trep(i,1,m) vec[i].clear();\n\t\trep(i,1,Q) if (!sure[i])\n\t\t{\n\t\t\tint mid=(p[i].fir+p[i].sec)>>1;\n\t\t\tvec[mid].push_back(i);\n\t\t}\n\t\trep(i,1,n) fa[i]=i,siz[i]=1;\n\t\trep(i,1,m)\n\t\t{\n\t\t\tmerge(e[i].fir,e[i].sec);\n\t\t\tfor (auto id:vec[i])\n\t\t\t{\n\t\t\t\tint u=q[id].fir.fir,v=q[id].fir.sec;\n\t\t\t\tif (getfa(u)!=getfa(v)) ans[id]=siz[getfa(u)]+siz[getfa(v)];\n\t\t\t\telse ans[id]=siz[getfa(u)];\n\t\t\t}\n\t\t}\n\t\trep(i,1,Q) if (!sure[i])\n\t\t{\n\t\t\tif (ans[i]>=q[i].sec) p[i].sec=(p[i].fir+p[i].sec)>>1;\n\t\t\telse p[i].fir=((p[i].fir+p[i].sec)>>1)+1;\n\t\t\tif (p[i].fir==p[i].sec) sure[i]=1;\n\t\t}\n\t}\n\trep(i,1,Q) printf(\"%d\\n\",p[i].fir);\n} \n```",
        "postTime": 1620733226,
        "uid": 287850,
        "name": "ZSH_ZSH",
        "ccfLevel": 0,
        "title": "AGC002D"
    },
    {
        "content": "**\u514b\u9c81\u65af\u5854\u5c14\u91cd\u6784\u6811**\u662f\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u7684Krustal\u7b97\u6cd5\u7684\u4e00\u4e2a\u884d\u751f\u7269\u3002\n\n\u6211\u4eec\u5728\u8dd1Krustal\u65f6\uff0c\u5c06\u8fb9\u6743\u6309\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7136\u540e\u6bcf\u6b21\u53ea\u8981\u8fd9\u6761\u8fb9\u4e0d\u5728\u540c\u4e00\u4e2a\u8fde\u901a\u5757\u4e2d\uff0c\u5c31\u5c06\u5176\u52a0\u5165\u6700\u5c0f\u751f\u6210\u6811\uff0c\u540c\u65f6\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u8fde\u901a\u6027\u3002\n\n\u4e0e\u6b64\u4e0d\u540c\u7684\u662f\uff0cKrustal\u91cd\u6784\u6811\u4e0d\u662f\u76f4\u63a5\u8fde\u8fb9\uff0c\u800c\u662f**\u65b0\u5efa\u4e00\u4e2a\u8282\u70b9\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a\u70b9\u4f5c\u4e3a\u8fd9\u4e24\u4e2a\u8fde\u901a\u5757\u6839\u8282\u70b9\u7236\u4eb2\u7684\u7236\u4eb2\uff0c\u5c06\u5176\u70b9\u6743\u8bbe\u4e3a\u8fb9\u6743**\u3002\u6574\u4e2a\u8fc7\u7a0b\u7ef4\u62a4\u7684\u662f\u4e00\u4e2a\u6709\u6839\u4e8c\u53c9\u6811\u68ee\u6797\uff08\u5e26\u70b9\u6743\uff09\uff0c\u540c\u65f6\u7531\u4e8e\u4e00\u822c\u662f\u628a\u8fb9\u6309\u8fb9\u6743\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7ef4\u62a4\u7684\u662f\u4e00\u4e2a\u5927\u6839\u5806\u3002\n\n\u7531\u4e8e\u4e00\u4e9bFeature\uff0c\u514b\u9c81\u65af\u5854\u5c14\u91cd\u6784\u6811\u53ef\u4ee5\u65b9\u4fbf\u7ef4\u62a4\u201c\u4ece\u4e00\u4e2a\u70b9\uff0c\u7ecf\u8fc7\u4e00\u5b9a\u7ea6\u675f\u7684\u8fb9\u80fd\u591f\u5230\u8fbe\u70b9\u7684\u96c6\u5408\u201d\u3002\uff08\u5177\u4f53\u53ef\u4ee5\u770b\u5f80\u5e74\u65e5\u62a5\uff09\u5728\u6b64\u9898\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4e8c\u5206\u70b9\u6743\uff08\u5373\u8fb9\u7684\u7f16\u53f7\uff09\uff0c\u5e76\u5411\u4e0a\u500d\u589e\u8df3\u7236\u4eb2\u5373\u53ef\uff0c\u6bcf\u6b21\u8df3\u7684\u65f6\u5019\u4e0d\u80fd\u8d85\u8fc7\u4e8c\u5206\u51fa\u6765\u7684\u70b9\u6743,\u7136\u540e\u5224\u5b9a\u4e24\u4e2a\u5b50\u6811\u5e76\u7684\u5927\u5c0f\u662f\u5426\u5927\u4e8e\u7b49\u4e8ez\u5373\u53ef\u3002\n\n\uff08\u5efa\u8bae\u5c06\u6b64\u9898\u4f5c\u4e3a\u677f\u9898\uff09\n```cpp\n#include <bits/stdc++.h>\n#define LL long long\n#define F(i, a, b) for(int i = a; i <= b; ++i)\n\nusing namespace std;\n\nconst int maxn = 1e5 + 5;\nint n, m, q, tot = 0, f[maxn * 2][25], p[maxn * 2], s[maxn * 2], val[maxn * 2],dep[maxn * 2];\nint getf(int x)\n{\n    return x == p[x] ? x : (p[x] = getf(p[x]));\n}\nint lca(int u, int v)\n{\n    if(dep[u] < dep[v]) swap(u, v);\n    int delt = dep[u] - dep[v];\n    for(int i = 0; i < 20; ++i) if(1 << i & delt) u = f[u][i];\n    if(u == v) return u;\n    for(int i = 19; i >= 0; --i)\n        if(f[u][i] && f[u][i] != f[v][i]) u = f[u][i], v = f[v][i];\n    return f[u][0];\n}\nint ancestor(int u, int lim)\n{\n    int v = u;\n    for(int i = 19; i >= 0; --i) if(f[v][i] && val[f[v][i]] <= lim) v = f[v][i];\n    return v;\n}//\u4eceu\u5411\u4e0a\u8df3\uff0c\u6bcf\u6b21\u70b9\u6743\u4e0d\u80fd\u8d85\u8fc7lim\uff0c\u6700\u8fdc\u80fd\u8df3\u5230\u7684\u7956\u5148\nint main()\n{\n    scanf(\"%d%d\", &n, &m);\n    F(i, 1, n) p[i] = i, s[i] = 1;\n    tot = n;\n    F(i, 1, m)\n    {\n        int u, v;\n        scanf(\"%d%d\", &u, &v);\n        int fu = getf(u), fv = getf(v);\n        if(fu != fv)\n        {\n            ++tot;\n            p[fu] = p[fv] = p[tot] = tot;\n            f[fu][0] = f[fv][0] = tot;\n            val[tot] = i;\n        }\n    }\n    for(int i = tot; i; --i)\n    {\n        for(int j = 0; f[i][j]; ++j) f[i][j + 1] = f[f[i][j]][j];\n        if(f[i][0]) dep[i] = dep[f[i][0]] + 1;\n    }\n    F(i, 1, tot)\n    {\n        if(f[i][0]) s[f[i][0]] += s[i];\n    }\n    scanf(\"%d\", &q);\n    F(i, 1, q)\n    {\n        int x, y, z;\n        scanf(\"%d%d%d\", &x, &y, &z);\n        int l = 1, r = m, mid, ans = 0;\n        while(l <= r)\n        {\n            mid = (l + r) / 2;\n            int u = ancestor(x, mid), v = ancestor(y, mid), t = lca(u, v);\n            bool flag = false;\n            if(t == u) flag = (s[u] >= z);\n            else if(t == v) flag = (s[v] >= z);\n            else flag = (s[u] + s[v] >= z);\n            if(flag) ans = mid, r = mid - 1;\n            else l = mid + 1;\n            //\u5982\u679c\u5176\u4e2d\u4e00\u4e2a\u7956\u5148\u662f\u53e6\u4e00\u4e2a\u7956\u5148\u7684\u7956\u5148\uff0c\u76f4\u63a5\u52a0\u8d77\u6765\u4f1a\u6709\u95ee\u9898\n        }\n        printf(\"%d\\n\", ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1596462510,
        "uid": 161577,
        "name": "psoet",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT1998 \u3010[AGC002D] Stamp Rally\u3011"
    },
    {
        "content": "\u4e00\u4e2a\u6bd4\u8f83\u663e\u7136\u7684\u601d\u8def\u662f\u5efa\u51fa\u53ef\u6301\u4e45\u5316\u5e76\u67e5\u96c6\u540c\u65f6\u7ef4\u62a4 size\uff0c\u7136\u540e\u4e8c\u5206\u65f6\u95f4\u76f4\u63a5\u53d6\u51fa size \u5224\u65ad\u5373\u53ef\u3002\n\n\u4f46\u662f\u53d1\u73b0\u8fd9\u9898\u6bcf\u4e2a\u7248\u672c\u53ea\u4f1a\u884d\u751f\u51fa\u4e00\u4e2a\u65b0\u7684\u7248\u672c\uff0c\u6240\u4ee5\u4e0d\u7528\u771f\u7684\u5199\u4e2a\u4e3b\u5e2d\u6811\u53bb\u7ef4\u62a4\u8fd9\u4e2a\u5e76\u67e5\u96c6\u3002\n\n\u8003\u8651\u6309\u79e9\u5408\u5e76\uff0c\u8fd9\u79cd\u5408\u5e76\u7684\u65b9\u5f0f\u53d1\u73b0\u6bcf\u4e2a\u70b9\u7684 fa \u6570\u7ec4\u53ea\u4f1a\u6709\u4e24\u4e2a\u53d6\u503c\uff0c\u4e00\u4e2a\u662f\u5b83\u81ea\u5df1\uff0c\u4e00\u4e2a\u662f\u5b83\u4f5c\u4e3a\u6839\u88ab\u5408\u5e76\u51fa\u53bb\u65f6\u7684 fa\uff0c\u6211\u4eec\u53ea\u9700\u8981\u987a\u4fbf\u7ef4\u62a4\u4e00\u4e0b\u8fd9\u4e2a\u88ab\u5408\u5e76\u7684\u65f6\u95f4\u5c31\u884c\u4e86\u3002\n\n\u8003\u8651\u7ef4\u62a4 size\uff0c\u53d1\u73b0\u6bcf\u4e2a\u65f6\u95f4\u53ea\u4f1a\u66f4\u65b0\u4e00\u4e2a\u6839\u7684 size\uff0c\u6240\u4ee5\u5bf9\u6bcf\u4e2a\u70b9\u5f00\u4e2a vector \u5b58\u4e0b\u66f4\u65b0\u7684\u65f6\u95f4\u548c\u66f4\u65b0\u540e\u7684 size \u5373\u53ef\u3002\n\n\u6bcf\u6b21\u8be2\u95ee\u5916\u9762\u6709\u4e00\u5c42\u4e8c\u5206\uff0c\u5e76\u67e5\u96c6\u6309\u79e9\u5408\u5e76\u548c\u5229\u7528 vector \u67e5\u8be2 size \u90fd\u662f $O(\\log n)$ \u7684\u590d\u6742\u5ea6\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u4e3a $O(n\\log^2n)$\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u89c1\u4ee3\u7801\u3002\n\nhttps://atcoder.jp/contests/agc002/submissions/33327714",
        "postTime": 1658080138,
        "uid": 115936,
        "name": "\u6cf7\u6cfd\u4e09\u6708",
        "ccfLevel": 0,
        "title": "AGC002D"
    },
    {
        "content": "### Preface  \n\u53c8\u662f\u4e00\u9053\u91cd\u6784\u6811\u7ecf\u5178\u4f8b\u9898\u3002  \n### Problem  \n\u4e00\u5f20\u8fde\u901a\u56fe\uff0c$q$ \u6b21\u8be2\u95ee\u4ece\u4e24\u4e2a\u70b9 $x$ \u548c $y$ \u51fa\u53d1\uff0c\u5e0c\u671b\u7ecf\u8fc7\u7684\u70b9(\u4e0d\u91cd\u590d)\u6570\u91cf\u7b49\u4e8e $z$\uff0c\u7ecf\u8fc7\u7684\u8fb9\u6700\u5927\u7f16\u53f7\u6700\u5c0f\u662f\u591a\u5c11\u3002   \n### Solution  \n\u6211\u4eec\u770b\u5230\u6700\u5927\u7f16\u53f7\u6700\u5c0f\u9a6c\u4e0a\u5c31\u60f3\u5230\u4e86\u4e8c\u5206\uff0c\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u6700\u5927\u7f16\u53f7\uff0c\u7136\u540e\u770b\u770b\u5c0f\u4e8e\u7b49\u4e8e\u8be5\u7f16\u53f7\u7684\u8fb9\u7ec4\u6210\u7684\u56fe\u4e2d\u7684 $x$ \u4e0e $y$ \u7684\u8fde\u901a\u70b9\u6570\u3002\u53ea\u8981\u8054\u901a\u70b9\u6570\u5927\u4e8e $z$ \u4e2a\u5c31\u53ef\u4ee5\u3002  \n\n\u73b0\u5728\u8fd9\u4e2a\u95ee\u9898\u8f6c\u6362\u6210\u4e86\u4e00\u4e2a\u8fde\u901a\u6027\u95ee\u9898\uff0c\u6211\u4eec\u8981\u7ef4\u62a4\u987a\u5e8f\u52a0\u8fb9\u7684\u60c5\u51b5\u4e0b\u6bcf\u5f20\u56fe\u7684\u8054\u901a\u72b6\u6001\u3002\u90a3\u4e48\u6446\u5728\u6211\u4eec\u9762\u524d\u7684\u6709\u4e24\u4e2a\u9009\u62e9\uff1a\u53ef\u6301\u4e45\u5316\u5e76\u67e5\u96c6\u4ee5\u53ca kruksal \u91cd\u6784\u6811\u3002  \n\n\u5f88\u660e\u663e\u91cd\u6784\u6811\u662f\u66f4\u6613\u4e8e\u5b9e\u73b0\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u5efa\u51fa\u4e00\u68f5\u91cd\u6784\u6811\uff0c\u7136\u540e\u4e8c\u5206\u8282\u70b9\u3002\u5f53\u4e8c\u5206\u503c\u5c0f\u4e8e\u4e24\u70b9 lca \u7684\u65f6\u5019\u4e24\u70b9\u8fde\u901a\u96c6\u6ca1\u6709\u4ea4\uff0c\u53cd\u4e4b\u4e24\u70b9\u8fde\u901a\uff0c\u6211\u4eec\u5206\u7c7b\u8ba8\u8bba\uff0c\u4e24\u6b21\u4e8c\u5206\u5373\u53ef\u3002  \n\ncode\uff1a  \n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=3e5+10;\nint n,m,q,u[N],v[N];int fa[N];\nint sz[N];int f[N];int st[N][21];\nint son[N][2];int root,x,y,z;int deep[N];\nint find(int x){\n\tif(fa[x]==x)return x;\n\telse return fa[x]=find(fa[x]);\n}\nvoid merge(int x,int y){fa[find(y)]=find(x);}\nvoid build(){\n\tfor(int i=1;i<=n;i++)sz[i]=1;\n\tfor(int i=1;i<=n+m;i++)fa[i]=i;\n\tfor(int i=1;i<=m;i++){\n\t\tint x=u[i];int y=v[i];\n\t\tif(find(x)==find(y))continue;\n\t\tx=find(x);y=find(y);root=i+n;\n\t\tsz[i+n]=sz[x]+sz[y];f[x]=f[y]=i+n;\n\t\tson[i+n][0]=x,son[i+n][1]=y;\n\t\tmerge(i+n,x);merge(i+n,y);\n\t}\n} \nvoid dfs(int x){\n//\tcout<<x<<\" \"<<f[x]<<endl;\n\tst[x][0]=f[x];deep[x]=deep[f[x]]+1;\n\tfor(int i=1;i<=20;i++)st[x][i]=st[st[x][i-1]][i-1];\n\tif(son[x][0])dfs(son[x][0]);\n\tif(son[x][1])dfs(son[x][1]);\n}\nint LCA(int x,int y){\n\tif(deep[x]<deep[y])swap(x,y);\n\tfor(int i=20;i>=0;i--){\n\t\tif(deep[st[x][i]]>=deep[y])x=st[x][i];\n\t}\n\tif(x==y)return x;\n\tfor(int i=20;i>=0;i--){\n\t\tif(st[x][i]!=st[y][i])\n\t\t\tx=st[x][i],y=st[y][i];\n\t}\n\treturn st[x][0];\n}\nint res;\nint check(int x,int y,int bas){\n\t//cout<<x<<\" \"<<y<<\" \"<<bas<<\" \"<<z<<endl; \n\tfor(int i=20;i>=0;i--){\n\t\tif((st[x][i]<bas||bas==0)&&st[x][i]!=0&&(1<<i)<=y){\n\t\t\ty-=(1<<i);x=st[x][i];\n\t\t}\n\t}res=x;\n\tif(y!=0)return -1;\n\tif(sz[x]>=z)return 1;\n\telse return 0;\n}\nint bin(int x){\n\tint l=0;int r=m;\n\twhile(l<r){\n\t\tint mid=(l+r)/2;\n\t\tint c=check(x,mid,0);\n\t\tif(c==1)r=mid;\n\t\tif(c==-1)r=mid-1;\n\t\tif(c==0)l=mid+1;\n\t}\n\tif(check(x,l,0)!=1)return 1e9;\n\t//cout<<x<<\" \"<<l<<\" \"<<res-n<<endl;\n\treturn res-n;\n}\nint main(){\n\tios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;i++)\n\t\tcin>>u[i]>>v[i];\n\tbuild();dfs(root);\n\tcin>>q;\n\twhile(q--){\n\t\tcin>>x>>y>>z;int lca=LCA(x,y);int ans=1e9;\n\t\tans=min(ans,bin(lca));int l=n+1;int r=lca;\n\t\twhile(l<r){\n\t\t\tint mid=(l+r)/2;int sum=0;\n\t\t\t//cout<<l<<\" \"<<r<<endl;\n\t\t\tcheck(x,1e9,mid);sum+=sz[res];\n\t\t\tcheck(y,1e9,mid);sum+=sz[res];\n\t\t\tif(sum>=z)r=mid,ans=min(ans,mid-1-n);\n\t\t\telse l=mid+1;\n\t\t}int sum=0;\n\t\tcheck(x,1e9,l);sum+=sz[res];\n\t\tcheck(y,1e9,l);sum+=sz[res];\n\t\tif(sum>=z)ans=min(ans,l-1-n);\n\t\tcout<<ans<<endl;\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1655357772,
        "uid": 213173,
        "name": "\u5c0f\u6728\u866b",
        "ccfLevel": 4,
        "title": "\u3010Atcoder\u601d\u7ef4\u8bad\u7ec3\u3011[AGC002D] Stamp Rally"
    },
    {
        "content": "[$\\large\\text{\u9898\u76ee\u4f20\u9001\u95e8}$](https://www.luogu.com.cn/problem/AT1998)\n\n## $\\text{Description}$\n\n- \u7ed9\u5b9a\u4e00\u5f20\u8fde\u901a\u56fe\uff0c\u6709 $q$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u5b9a\u4e24\u70b9 $x$ \u548c $y$\uff0c\u5f53\u4ece $x$ \u548c $y$ \u51fa\u53d1\u5230\u8fbe\u7684\u70b9\u96c6\u5927\u5c0f\u4e3a $z$ \u65f6\uff0c\u6c42\u6700\u5927\u8fb9\u6743\u6700\u5c0f\u503c\u3002\n\n## $\\text{Solution}$\n\n\u6700\u5c0f\u74f6\u9888\uff0c\u5bb9\u6613\u60f3\u5230 Kruskal \u91cd\u6784\u6811\u3002\n\n\u8003\u8651 Kruskal \u91cd\u6784\u6811\u6709\u6027\u8d28\uff1a\n\n> \u539f\u56fe\u4e2d\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u6240\u6709\u7b80\u5355\u8def\u5f84\u4e0a\u6700\u5927\u8fb9\u6743\u7684\u6700\u5c0f\u503c = \u6700\u5c0f\u751f\u6210\u6811\u4e0a\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u7b80\u5355\u8def\u5f84\u4e0a\u7684\u6700\u5927\u503c = Kruskal \u91cd\u6784\u6811\u4e0a\u4e24\u70b9\u4e4b\u95f4\u7684 LCA \u7684\u6743\u503c\u3002\n>\u2014\u2014OI WIKI\n\n\u90a3\u4e48\u5373\u5230\u70b9 $x$ \u7684\u7b80\u5355\u8def\u5f84\u4e0a\u6700\u5927\u8fb9\u6743\u7684\u6700\u5c0f\u503c\u4e0d\u8d85\u8fc7 $val$ \u7684\u6240\u6709\u70b9\u5747\u5728 Kruskal \u91cd\u6784\u6811\u4e0a\u7684\u67d0\u4e00\u68f5\u5b50\u6811\u5185\uff0c\u4e14\u6070\u597d\u4e3a\u8be5\u5b50\u6811\u7684\u6240\u6709\u53f6\u5b50\u8282\u70b9\u3002\n\n\u6211\u4eec\u518d\u6765\u770b\u8fd9\u9053\u9898\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u70b9 $x$\uff0c\u7531\u5982\u4e0a\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u5f53\u6700\u5927\u8fb9\u6743\u4e3a $k$ \u65f6\u70b9\u96c6\u5927\u5c0f\u3002\n\n\u540c\u6837\u7684\u5bf9\u4e8e\u4e24\u4e2a\u70b9\u6211\u4eec\u4e5f\u53ef\u4ee5\u7c7b\u63a8\uff0c\u8003\u8651\u4e24\u4e2a\u5b50\u6811\u76f8\u4e0d\u76f8\u540c\uff0c\u4e0d\u540c\u76f8\u52a0\uff0c\u76f8\u540c\u53d6\u4e00\u4e2a\u5373\u53ef\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u4e8c\u5206\u7b54\u6848\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(q\\log V\\log n)$\n\n## $\\text{Code}$\n\n```cpp\nconst int N=2e5+5,M=8e5+5;\nint T,n,m,tot,hd[N],Q,f[N<<1][20];\nstruct edge{int t,nxt;}es[M];\nint fa[N],siz[N];\ninline int found(int x){return fa[x]==x?x:fa[x]=found(fa[x]);}\ninline void merge(int x,int y){\n\tint fx=found(x),fy=found(y);\n\tif(siz[fx]<siz[fy]) swap(fx,fy);\n\tfa[fy]=fx;siz[fx]+=siz[fy];siz[fy]=0;\n}\n\nint cnte,cnt,val[N<<1],sz[N<<1];\nstruct Edge{int u,v,w;}e[M];\nstruct EDGE{int t,nxt;}E[N<<3];\ninline void add(int x,int y,int z){es[++tot]=(edge){y,hd[x]};hd[x]=tot;e[tot]=(Edge){x,y,z};}\ninline void Add(int x,int y){E[++cnte]=(EDGE){y,hd[x]};hd[x]=cnte;}\ninline bool cmp(Edge x,Edge y){return x.w<y.w;}\ninline void kruscal(){\n\tcnt=n;\n\tfor(re i=1;i<=(n<<1);++i) fa[i]=i,siz[i]=1,hd[i]=0;\n\tsort(e+1,e+tot+1,cmp);\n\tfor(re i=1;i<=tot;++i)\n\t\tif(found(e[i].u)^found(e[i].v)){\n\t\t\tval[++cnt]=e[i].w;\n\t\t\tAdd(found(e[i].u),cnt);Add(cnt,found(e[i].u));Add(found(e[i].v),cnt);Add(cnt,found(e[i].v));\n\t\t\tfa[found(e[i].u)]=fa[found(e[i].v)]=cnt;\n\t\t}\n}\n\ninline void dfs(int x,int fa){\n\tf[x][0]=fa;sz[x]=(x<=n);\n\tfor(re i=hd[x];i;i=E[i].nxt)\n\t\tif(E[i].t^fa) dfs(E[i].t,x),sz[x]+=sz[E[i].t];\n}\n\ninline bool check(int x,int y,int z,int k){\n\tfor(re i=19;i>=0;--i)\n\t\tif(f[x][i]&&(f[x][i]<=n||val[f[x][i]]<=k)) x=f[x][i];\n\tfor(re i=19;i>=0;--i)\n\t\tif(f[y][i]&&(f[y][i]<=n||val[f[y][i]]<=k)) y=f[y][i];\n\treturn x==y?sz[x]>=z:sz[x]+sz[y]>=z;\n}\n\n// ---------- Kruskal ---------- //\n\nint main(){\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n//\tios::sync_with_stdio(0);cin.tie(0);cout.tie(0);\n\trd(n);rd(m);\n\tfor(re i=1;i<=m;++i){int x,y;rd(x);rd(y);add(x,y,i);add(y,x,i);}\n\tkruscal();dfs(cnt,0);\n\tfor(re s=1;s<=19;++s)\n\t\tfor(re i=1;i<=cnt;++i) f[i][s]=f[f[i][s-1]][s-1];\n\trd(Q);\n\tfor(re i=1;i<=Q;++i){\n\t\tint x,y,z;rd(x);rd(y);rd(z);\n\t\tint l=1,r=m;\n\t\t#define mid ((l+r)>>1)\n\t\twhile(l<=r){\n\t\t\tif(check(x,y,z,mid)) r=mid-1;\n\t\t\telse l=mid+1;\n\t\t}\n\t\twr(l);puts(\"\");\n\t}\n\treturn 0;\n}\n\n// ---------- Main ---------- //\n```",
        "postTime": 1651202308,
        "uid": 83999,
        "name": "Demoe",
        "ccfLevel": 7,
        "title": "[AGC002D] Stamp Rally \u9898\u89e3 Kruskal \u91cd\u6784\u6811"
    },
    {
        "content": "**\u524d\u7f6e\u8bf4\u660e\uff1a\u672c\u9898\u89e3\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(m\\log^2 n+q\\log^3n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log n)$\uff0c\u5728\u7ebf\uff0c\u5c5e\u4e8e\u8f83\u52a3\u89e3\uff0c\u66f4\u597d\u7684\u89e3\u6cd5\u53ef\u4ee5\u53bb\u770b\u5176\u4ed6\u9898\u89e3\u3002**\n\n\u8fd9\u91cc\u662f\u4e00\u79cd\u5f88\u66b4\u529b\u7684\u89e3\u6cd5\u3002\n\n\u770b\u5230\u8fd9\u4e2a\u6700\u5927\u503c\u6700\u5c0f\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u5229\u7528\u4e8c\u5206\u89e3\u51b3\u3002\u53ea\u7559\u4e0b\u524d\u82e5\u5e72\u6761\u8fb9\uff0c\u90a3\u4e48\u6211\u4eec $x,y$ \u80fd\u8d70\u5230 $z$ \u4e2a\u70b9\u5c31\u7b49\u4ef7\u4e8e\u662f $x,y$ \u5728\u65b0\u56fe\u4e0a\u7684\u8fde\u901a\u5757\u7684\u5e76\u7684\u5927\u5c0f$\\ge k$\u3002\u5bb9\u6613\u60f3\u5230\u4f7f\u7528\u5e76\u67e5\u96c6\u3002\u7136\u540e\u6211\u4eec\u610f\u8bc6\u5230\u7ed9\u8fd9\u4e2a\u5e76\u67e5\u96c6\u52a0\u4e2a\u53ef\u6301\u4e45\u5316\u5c31\u505a\u5b8c\u4e86\u3002\n\n\u4f18\u70b9\u662f\u771f\u7684\u5f88\u597d\u60f3\u554a\uff0c\u662f\u5c5e\u4e8e\u90a3\u79cd\u53ef\u4ee5\u770b\u5b8c\u9898\u79d2\u51fa\u7684\u89e3\u6cd5\u2026\u2026\u7136\u540e\u4ee3\u7801\u4e5f\u5168\u662f\u677f\u5b50\u800c\u4e14\u5de8\u5927\u597d\u5199\uff0c\u800c\u4e14\u8fd8\u5f3a\u5236\u5728\u7ebf\u5c11\u4e86\u5f88\u591a\u6574\u4f53\u4e8c\u5206\u7684\u79bb\u7ebf\u5904\u7406\u3002\u4f46\u662f\u9898\u89e3\u533a\u7684\u795e\u4ed9\u4eec\u4f3c\u4e4e\u6ca1~~\u63d0\u5230~~\uff08\u7ecf\u8bc4\u8bba\u533a\u6307\u6b63\uff09\u5199\u5b83\uff1f\u5728\u5b9e\u6218\u4e2d\u8fd9\u5b9e\u9645\u4e0a\u662f\u4e2a\u6027\u4ef7\u6bd4\u5de8\u5927\u9ad8\u7684\u73a9\u610f\u554a\uff0c\u7f8e\u6ecb\u6ecb\u3002\n\n\u4ee3\u7801\uff08\u53ef\u6301\u4e45\u5316\u5e76\u67e5\u96c6\u7684\u5199\u6cd5\u56e0\u4eba\u800c\u5f02\uff0c\u6211\u8fd9\u91cc\u7684\u5199\u6cd5\u662f\u5e76\u67e5\u96c6\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u7684\u7236\u4eb2\u6307\u9488\uff0c\u5f53\u5bf9\u5e94\u8282\u70b9\u662f\u6240\u5728\u8fde\u901a\u5757\u7684\u6839\u65f6\u8f6c\u4e3a\u7ef4\u62a4\u96c6\u5408\u5927\u5c0f\u7684\u76f8\u53cd\u6570\u3002`findf` \u51fd\u6570\u8fd4\u56de\u8fde\u901a\u5757\u6839\u548c\u5927\u5c0f\u6253\u5305\u8d77\u6765\u7684\u4e00\u4e2a `pair`\uff09\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconstexpr int N = 1e5 + 9;\nstruct {\n  int val;\n  int l, r;\n} tr[N * 40];\nint rt[N], tot, n, m, q;\nint build(int L, int R) {\n  if (L == R) return tr[++tot].val = -1, tot;\n  int mid = (L + R) >> 1, l = build(L, mid), r = build(mid + 1, R);\n  return tr[++tot].l = l, tr[tot].r = r, tot;\n}\nint update(int tcop, int pos, int val, int L, int R) {\n  if (pos < L || pos > R) return tcop;\n  if (L == R) return tr[++tot].val = val, tot;\n  int mid = (L + R) >> 1, l = update(tr[tcop].l, pos, val, L, mid),\n      r = update(tr[tcop].r, pos, val, mid + 1, R);\n  return tr[++tot].l = l, tr[tot].r = r, tot;\n}\nint query(int now, int pos) {\n  int L = 1, R = n;\n  while (L < R) {\n    if (int mid = (L + R) >> 1; pos <= mid)\n      R = mid, now = tr[now].l;\n    else\n      L = mid + 1, now = tr[now].r;\n  }\n  return tr[now].val;\n}\npair<int, int> findf(int now, int x) {\n  while (true) {\n    int nx = query(now, x);\n    if (nx < 0) return {x, -nx};\n    x = nx;\n  }\n  return {0, 0};\n}\nint main() {\n  cin.tie(nullptr)->sync_with_stdio(false);\n  cin >> n >> m, rt[0] = build(1, n);\n  for (int a, b, i = 1; i <= m; ++i) {\n    rt[i] = rt[i - 1];\n    cin >> a >> b;\n    auto [fa, sa] = findf(rt[i], a);\n    auto [fb, sb] = findf(rt[i], b);\n    if (fa == fb) continue;\n    if (sa > sb) swap(fa, fb), swap(sa, sb);\n    rt[i] = update(rt[i], fa, fb, 1, n);\n    rt[i] = update(rt[i], fb, -(sa + sb), 1, n);\n  }\n  for (cin >> q; q; --q) {\n    int x, y, z;\n    cin >> x >> y >> z;\n    int L = 1, R = m, ans = 0;\n    while (L <= R) {\n      int mid = (L + R) >> 1;\n      auto [fa, sa] = findf(rt[mid], x);\n      auto [fb, sb] = findf(rt[mid], y);\n      if ((fa == fb ? sa : sa + sb) >= z)\n        ans = mid, R = mid - 1;\n      else\n        L = mid + 1;\n    }\n    cout << ans << '\\n';\n  }\n  return cout.flush(), 0;\n}\n```",
        "postTime": 1647009140,
        "uid": 250637,
        "name": "UnyieldingTrilobite",
        "ccfLevel": 9,
        "title": "AT1998\u9898\u89e3"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/Coros-Trusds/p/15877040.html)\n\n# \u9898\u76ee\u5927\u610f\n\n\u4e00\u5f20\u8fde\u901a\u56fe\uff0c$q$ \u6b21\u8be2\u95ee\u4ece\u4e24\u4e2a\u70b9 $x$ \u548c $y$ \u51fa\u53d1\uff0c\u5e0c\u671b\u7ecf\u8fc7\u7684\u70b9(\u4e0d\u91cd\u590d)\u6570\u91cf\u7b49\u4e8e $z$\uff0c\u7ecf\u8fc7\u7684\u8fb9\u6700\u5927\u7f16\u53f7\u6700\u5c0f\u662f\u591a\u5c11\u3002\n\n# \u9898\u76ee\u5206\u6790\n\n## \u4ec0\u4e48\u662f $\\rm Kruskal$ \u91cd\u6784\u6811\n\n\u4ece\u4e0b\u9762\u7684\u4f8b\u5b50\u5165\u624b\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/190404v9.png)\n\n-----------\n$\\rm Kruskal$ \u6700\u5c0f\u751f\u6210\u6811\u7b97\u6cd5\u90fd\u77e5\u9053\u5427 $\\verb!qwq!$\uff0c\u8be5\u4f8b\u6700\u5c0f\u751f\u6210\u6811\u4e3a\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/s289duoo.png)\n\n\u6211\u4eec\u6309\u7167 $\\rm Kruskal$ \u7684\u65b9\u5f0f\u5efa\u6811\uff0c\u8bbe\u8981\u8fde\u63a5\u7684\u8fb9\u4e3a $(u,v)$\uff0c\u901a\u8fc7\u5e76\u67e5\u96c6\u53ef\u6c42\u5f97 $u$ \u7684\u7956\u5148\u8282\u70b9\u4e3a $x$\uff0c$v$ \u7684\u7956\u5148\u8282\u70b9\u4e3a $y$\u3002\n\n\u82e5 $x\\neq y$\uff0c\u5219\u65b0\u5efa\u4e00\u4e2a\u8282\u70b9 $z$ \u4f5c\u4e3a $x,y$ \u7684\u7236\u4eb2\u6765\u5408\u5e76 $x,y$\uff0c$z$ \u7684\u70b9\u6743\u4e3a\u8fb9 $(x,y)$ \u7684\u957f\u5ea6\u3002\n\n\u6700\u540e\u6211\u4eec\u5efa\u51fa\u6765\u4e86\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u5177\u4f53\u957f\u8fd9\u6837\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/3lekyexq.png)\n\n\u8fd9\u68f5\u6811\u62e5\u6709\u4ee5\u4e0b\u6027\u8d28\uff1a\n\n+ \u53f6\u5b50\u8282\u70b9\u90fd\u662f\u6784\u6210\u6700\u5c0f\u751f\u6210\u6811\u7684\u8282\u70b9\u3002\n\n+ \u751f\u6210\u6811\u4e2d\u6709 $n$ \u4e2a\u8282\u70b9\uff0c\u4f1a\u4ea7\u751f $n-1$ \u4e2a\u542b\u6709\u70b9\u6743\u7684\u8282\u70b9\uff0c\u5171 $n+n-1=2\\cdot n-1$ \u4e2a\u8282\u70b9\u3002\n\n+ \u6309\u6700\u5c0f\u751f\u6210\u6811\u91cd\u6784\u7684\u91cd\u6784\u6811\u662f\u5927\u6839\u5806\uff0c\u6309\u6700\u5927\u751f\u6210\u6811\u91cd\u6784\u7684\u91cd\u6784\u6811\u662f\u5c0f\u6839\u5806\u3002\n\n+ \u6309\u6700\u5c0f\u751f\u6210\u6811\u91cd\u6784\u7684\u91cd\u6784\u6811\u4e2d\u4efb\u610f\u4e24\u70b9 $a,b$ \u7684\u8def\u5f84\u4e2d\u7684\u6700\u5927\u8fb9\u6743\u4e3a\u5b83\u4eec $\\operatorname{LCA}(a,b)$ \u7684\u70b9\u6743\uff0c\u4e5f\u662f $a,b$ \u8def\u5f84\u4e2d\u6700\u5927\u8fb9\u6743\u7684\u6700\u5c0f\u503c\uff0c\u6309\u6700\u5927\u751f\u6210\u6811\u91cd\u6784\u7684\u91cd\u6784\u6811\u4e2d\u4efb\u610f\u4e24\u70b9 $a,b$ \u7684\u8def\u5f84\u4e2d\u7684\u6700\u5c0f\u8fb9\u6743\u4e3a\u5b83\u4eec $\\operatorname{LCA}(a,b)$ \u7684\u70b9\u6743\uff0c\u4e5f\u662f $a,b$ \u8def\u5f84\u4e2d\u6700\u5c0f\u8fb9\u6743\u7684\u6700\u5927\u503c\u3002\n\n------------\n\u6a21\u677f\u4ee3\u7801\uff1a\n\n```cpp\nnamespace ex_Kruskal{\n\t// \u6ce8\u610f\u6570\u7ec4\u5f00\u4e24\u500d! \n\t\n\tint nowidx,idx;\n\tinline bool cmp1(Node x,Node y) { // \u6309\u6700\u5c0f\u751f\u6210\u6811\u91cd\u6784\u7684\u91cd\u6784\u6811\n\t\treturn x.w < y.w;\n\t}\n\tinline bool cmp2(Node x,Node y) { // \u6309\u6700\u5927\u751f\u6210\u6811\u91cd\u6784\u7684\u91cd\u6784\u6811\n\t\treturn x.w > y.w;\n\t}\n\tinline void add(int u,int v) {\n\t\tgra[++ idx].v = v,gra[idx].nxt = head[u];\n\t\thead[u] = idx;\n\t}\n\t\n\tinline void Kruskal() {\n\t\tfor (register int i = 1;i <= n * 2 - 1; ++ i) {\n\t\t\tfa[i] = i;\n\t\t}\n\t\tsort (node + 1,node + m + 1,ex_Kruskal::cmp);\n\t\t\n\t\tnowidx = n;\n\t\tfor (register int i = 1;i <= m; ++ i) {\n\t\t\tint x = getf(node[i].u),y = getf(node[i].v);\n\t\t\tif (x != y) {\n\t\t\t\tval[++ nowidx] = node[i].w;//\u5b58\u50a8\u5f53\u524d\u8282\u70b9\u7684\u70b9\u6743\n\t\t\t\tfa[x] = fa[y] = nowidx;\n\t\t\t\t\n\t\t\t\tadd(nowidx,x),add(nowidx,y);\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n## \u5e94\u7528\n\n\u672c\u9898\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u7f16\u53f7\uff08\u663e\u7136\u6ee1\u8db3\u5355\u8c03\u6027\uff09\uff0c\u5bf9\u4e8e\u8be2\u95ee $x,y$\uff0c\u6211\u4eec\u500d\u589e\u5411\u4e0a\u8df3\u5230\u70b9\u6743\u5927\u4e8e\u5f53\u524d\u4e8c\u5206\u503c\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u518d\u5224\u65ad\u6b64\u65f6 $x,y$ \u8df3\u5230\u7684\u8282\u70b9 $x',y'$ \u7684\u5b50\u6811\u4e2d\u7684\u53f6\u5b50\u8282\u70b9\u6570\u4e4b\u548c\u662f\u5426\u8fbe\u5230\u4e86 $z$\u3002\n\n\u5982\u679c\u6ca1\u6709\u8fbe\u5230 $z$\uff0c\u8bf4\u660e\u7ecf\u8fc7\u7684\u70b9\u7684\u6570\u91cf\u5c11\u4e86\uff0c\u5e94\u8be5\u8c03\u5927\u4e00\u70b9\uff0c\u5373 $l\\gets mid+1$\uff1b\u5982\u679c\u8d85\u8fc7\u4e86 $z$\uff0c\u8bf4\u660e\u5e94\u8be5\u8c03\u5c0f\u4e00\u70b9\uff0c\u5373 $r\\gets mid-1$\uff1b\u5982\u679c\u7b49\u4e8e $z$\uff0c\u90a3\u4e48\u6b64\u65f6\u7684 $mid$ \u5373\u4e3a\u7b54\u6848\u3002\n\n# \u4ee3\u7801\n\n```cpp\n//2022/2/8\n\n//2022/2/9\n\n#define _CRT_SECURE_NO_WARNINGS\n\n#include <iostream>\n\n#include <cstdio>\n\n#include <climits>//need \"INT_MAX\",\"INT_MIN\"\n\n#include <cstring>//need \"memset\"\n\n#include <algorithm>\n\n#define enter() putchar(10)\n\n#define debug(c,que) cerr<<#c<<\" = \"<<c<<que\n\n#define cek(c) puts(c)\n\n#define blow(arr,st,ed,w) for(register int i=(st);i<=(ed);i++)cout<<arr[i]<<w;\n\n#define speed_up() cin.tie(0),cout.tie(0)\n\n#define endl \"\\n\"\n\n#define Input_Int(n,a) for(register int i=1;i<=n;i++)scanf(\"%d\",a+i);\n\n#define Input_Long(n,a) for(register long long i=1;i<=n;i++)scanf(\"%lld\",a+i);\n\n#define mst(a,k) memset(a,k,sizeof(a))\n\nnamespace Newstd\n{\n\tinline int read()\n\t{\n\t\tint x=0,k=1;\n\t\tchar ch=getchar();\n\t\twhile(ch<'0' || ch>'9')\n\t\t{\n\t\t\tif(ch=='-')\n\t\t\t{\n\t\t\t\tk=-1;\n\t\t\t}\n\t\t\tch=getchar();\n\t\t}\n\t\twhile(ch>='0' && ch<='9')\n\t\t{\n\t\t\tx=(x<<1)+(x<<3)+ch-'0';\n\t\t\tch=getchar();\n\t\t}\n\t\treturn x*k;\n\t}\n\tinline void write(int x)\n\t{\n\t\tif(x<0)\n\t\t{\n\t\t\tputchar('-');\n\t\t\tx=-x;\n\t\t}\n\t\tif(x>9)\n\t\t{\n\t\t\twrite(x/10);\n\t\t}\n\t\tputchar(x%10+'0');\n\t}\n}\n\nusing namespace Newstd;\n\nusing namespace std;\n\nconst int ma=1e5+5;\n\nstruct Gragh\n{\n\tint v;\n\t\n\tint nxt;\n};\n\nGragh gra[ma<<1];\n\nint head[ma<<1],fa[ma<<1],val[ma<<1],sons[ma<<1];\n\nint fath[ma<<1][21];\n\nint n,m,q;\n\nint nowidx,idx;\n\ninline void add(int u,int v)\n{\n\tgra[++idx].v=v;\n\t\n\tgra[idx].nxt=head[u];\n\t\n\thead[u]=idx;\n}\n\ninline void dfs(int now,int dad)\n{\n\tfath[now][0]=dad;\n\t\n\tfor(register int i=1;i<=20;i++)\n\t{\n\t\tfath[now][i]=fath[fath[now][i-1]][i-1];\n\t}\n\t\n\tif(head[now]==0)\n\t{\n\t\tsons[now]=1;\n\t\t\n\t\treturn;\n\t}\n\t\n\tfor(register int i=head[now];i;i=gra[i].nxt)\n\t{\n\t\tint v=gra[i].v;\n\t\t\n\t\tif(v!=dad)\n\t\t{\n\t\t\tdfs(v,now);\n\t\t\t\n\t\t\tsons[now]+=sons[v];\n\t\t}\n\t}\n}\n\nnamespace dsu\n{\n\tinline int getf(int x)\n\t{\n\t\treturn fa[x]==x?x:fa[x]=getf(fa[x]);\n\t}\n}\n\nnamespace ex_Kruskal\n{\n\tinline void Kruskal()\n\t{\n\t\tfor(register int i=1;i<=n*2-1;i++)\n\t\t{\n\t\t\tfa[i]=i;\n\t\t}\n\n\t\tval[0]=INT_MAX;\n\t\t\n\t\tnowidx=n;\n\t\t\n\t\tfor(register int i=1;i<=m;i++)\n\t\t{\n\t\t\tint u=read(),v=read();\n\n\t\t\tint x=dsu::getf(u),y=dsu::getf(v);\n\t\t\t\n\t\t\tif(x!=y)\n\t\t\t{\n\t\t\t\tval[++nowidx]=i;\n\t\t\t\t\n\t\t\t\tfa[x]=fa[y]=nowidx;\n\t\t\t\t\n\t\t\t\tadd(nowidx,x),add(nowidx,y);\n\t\t\t}\n\t\t}\n\t}\n}\n\nnamespace bs\n{\n\tinline bool check(int now,int x,int y,int num)\n\t{\n\t\tfor(register int i=20;i>=0;i--)\n\t\t{\n\t\t\tif(val[fath[x][i]]<=now)\n\t\t\t{\n\t\t\t\tx=fath[x][i];\n\t\t\t}\n\t\t\t\n\t\t\tif(val[fath[y][i]]<=now)\n\t\t\t{\n\t\t\t\ty=fath[y][i];\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(x==y)\n\t\t{\n\t\t\treturn sons[x]<num;\n\t\t}\n\t\t\n\t\treturn sons[x]+sons[y]<num;\n\t}\n}\n\nint main(void)\n{\n#ifndef ONLINE_JUDGE\n\tfreopen(\"in.txt\",\"r\",stdin);\n#endif\n\n\tn=read(),m=read();\n\t\n\tex_Kruskal::Kruskal();\n\t\n\tdfs(nowidx,0);\n\t\n\tq=read();\n\t\n\twhile(q--)\n\t{\n\t\tint u=read(),v=read(),w=read();\n\t\t\n\t\tint l=1,r=m;\n\t\t\n\t\tint ans;\n\t\t\n\t\twhile(l<=r)\n\t\t{\n\t\t\tint mid=l+r>>1;\n\t\t\t\n\t\t\tif(bs::check(mid,u,v,w)==true)\n\t\t\t{\n\t\t\t\tl=mid+1;\n\t\t\t}\n\t\t\t\n\t\t\telse\n\t\t\t{\n\t\t\t\tr=mid-1;\n\t\t\t\t\n\t\t\t\tans=mid;\n\t\t\t}\n\t\t}\n\t\t\n\t\twrite(ans);\n\t\t\n\t\tenter();\n\t}\n\t\n\treturn 0;\n}\n```",
        "postTime": 1644415901,
        "uid": 430409,
        "name": "Coros_Trusds",
        "ccfLevel": 6,
        "title": "AT1998 [AGC002D] Stamp Rally"
    },
    {
        "content": "[\u9898\u4f20](https://www.luogu.com.cn/problem/AT1998)\n\n~~\u611f\u8c22\u8fd9\u9898\u8ba9\u6211\u60f3\u8d77\u6765\u6211\u8fd8\u5b66\u8fc7\u6574\u4f53\u4e8c\u5206~~\n\n\u4e00\u5f00\u59cb\u8bfb\u9519\u9898\u610f\u4e86\uff0c\u4ee5\u4e3a $x, y$ \u8981\u8054\u901a\u3002\u3002\n\n\u9898\u76ee\u8981\u6c42\u6700\u5927\u503c\u6700\u5c0f\uff0c\u7b54\u6848\u663e\u7136\u5177\u6709\u5355\u8c03\u6027\u3002\n\n\u8003\u8651\u76f4\u63a5\u4e8c\u5206\u8fd9\u4e2a\u503c $mid$\uff0c\u663e\u7136\u5c31\u662f\u4e00\u5f20\u524d $mid$ \u6761\u8fb9\u6240\u5f62\u6210\u7684\u7684\u8fde\u901a\u56fe\uff0c$x, y$ \u6240\u5728\u8fde\u901a\u5757\u5927\u5c0f\u4e4b\u548c\u662f\u5426\u8d85\u8fc7 $z$\uff08\u5982\u679c\u5171\u5757\u53ea\u7528\u7b97\u4e00\u4e2a\uff09\uff0c\u8003\u8651\u4f7f\u7528\u5e76\u67e5\u96c6\u66b4\u529b\u5408\u5e76\uff0c\u90a3\u4e48\u5355\u6b21\u590d\u6742\u5ea6\u5c31\u662f $O(n \\alpha(n) \\log m)$\u3002\n\n\u4f46\u662f\u8fd9\u91cc\u6709 $m$ \u6b21\u8be2\u95ee\uff0c\u663e\u7136\u5c31\u662f\u6574\u4f53\u4e8c\u5206\u4e86\uff0c\u6807\u51c6\u677f\u5b50\u4e0d\u591a\u8bf4\uff0c\u53ea\u662f\u8be2\u95ee\u7684\u65f6\u5019\u82e5\u8be2\u95ee\u5de6\u7aef\u70b9 $>$ \u53f3\u7aef\u70b9\u4ecd\u8981\u9012\u5f52\u4e0b\u53bb\uff0c\u6211\u4eec\u9700\u8981\u628a\u524d\u9762\u7684\u8fb9\u5168\u90e8\u52a0\u4e0a\u3002\n\n\u8003\u8651\u5230\u6211\u4eec\u5728\u6574\u4f53\u4e8c\u5206\u65f6\u9700\u8981\u628a\u5e76\u67e5\u96c6\u8fd8\u539f\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u590d\u6742\u5ea6\u53ea\u4e0e $r-l$ \u76f8\u5173\uff0c\u6240\u4ee5\u4f7f\u7528\u53ef\u64a4\u9500\u5e76\u67e5\u96c6\uff0c\u4e0d\u80fd\u8def\u5f84\u538b\u7f29\uff0c\u590d\u6742\u5ea6 $O(m \\log n \\log m)$\u3002\n\n### Code\uff1a\n\n```cpp\n#include <stdio.h>\n#include <algorithm>\n#include <string.h>\n#include <cctype>\n#include <stack>\nusing namespace std;\ntypedef long long ll;\nconst int INF=0x3f3f3f3f;\nconst int mo=1e9+7;\ntypedef pair <int, int> PI;\ninline int read(){\n\tchar ch=getchar();int x=0, f=1;\n\twhile(!isdigit(ch)){if(ch=='-') f=-1; ch=getchar();}\n\twhile(isdigit(ch)){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nconst int N=1e5+5;\nint n, m, q;\nstruct query{int x, y, z, id;}Q[N], lq[N], rq[N];\nstruct Edge{int x, y;}d[N];\nint ans[N];\nnamespace Dsu{\n\tint f[N], siz[N];\n\tstack < PI > rub;\n\tvoid Init(int n){\n\t\tfor(int i=1; i<=n; i++)\n\t\t\tf[i]=i, siz[i]=1;\n\t\treturn ;\n\t}\n\tint find(int x){\n\t\twhile(x!=f[x]) x=f[x];\n\t\treturn x;\n\t}\n\tbool merge(int x, int y, bool flg){\n\t\t//\u5408\u5e76 x, y \u6240\u5728\u8fde\u901a\u5757\uff0c\u5e76\u8fd4\u56de\u539f\u6765\u662f\u5426\u540c\u5757 \n\t\tx=find(x), y=find(y);\n\t\tif(x==y) return 1;\n\t\tif(siz[x]<siz[y]) swap(x, y);\n\t\tif(flg) rub.push((PI){x, y});\n\t\tf[y]=x;siz[x]+=siz[y];\n\t\treturn 0;\n\t}\n\tvoid deleet(){\n\t\tint x=rub.top().first, y=rub.top().second;\n\t\tf[y]=y, siz[x]-=siz[y];rub.pop();\n\t}\n\tvoid Clear(){while(!rub.empty()) deleet();}\n}\nvoid solve(int L, int R, int ql, int qr){\n\tif(L==R){\n\t\tfor(int i=ql; i<=qr; i++) ans[Q[i].id]=L&R;\n\t\tDsu :: merge(d[L&R].x, d[L&R].y, 0);\n\t\treturn ;\n\t}\n\tint mid=L+R>>1;\n\tfor(int i=L; i<=mid; i++) \n\t\tDsu :: merge(d[i].x, d[i].y, 1);\n\tint lt=0, rt=0;\n\tfor(int i=ql; i<=qr; i++){\n\t\tint x=Dsu :: find(Q[i].x), y=Dsu :: find(Q[i].y);\n\t\tint Now=Dsu :: siz[x]+(x==y?0:1)*(Dsu :: siz[y]);\n\t\tif(Now>=Q[i].z) lq[++lt]=Q[i];\n\t\telse rq[++rt]=Q[i];\n\t}\n\tfor(int i=1; i<=lt; i++) Q[ql+i-1]=lq[i];\n\tfor(int i=1; i<=rt; i++) Q[ql+lt+i-1]=rq[i];\n\tDsu :: Clear();\n\tsolve(L, mid, ql, ql+lt-1);\n\tsolve(mid+1, R, ql+lt, qr);\n}\nsigned main(){\n\tn=read(), m=read();Dsu :: Init(n);\n\tfor(int i=1; i<=m; i++) d[i]=(Edge){read(), read()};\n\tq=read();\n\tfor(int i=1, x, y, z; i<=q; i++)\n\t\tx=read(), y=read(), z=read(),\n\t\tQ[i]=(query){x, y, z, i};\n\tsolve(1, m, 1, q);\n\tfor(int i=1; i<=q; i++) printf(\"%d\\n\", ans[i]);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1636691547,
        "uid": 341102,
        "name": "ReKoJ",
        "ccfLevel": 0,
        "title": "AT1998 [AGC002D] Stamp Rally"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9053\u9898\u6709\u4e00\u4e2a\u5f88\u66b4\u529b\u7684\u65b9\u6cd5\u3002\n\n\u5f88\u5bb9\u6613\u60f3\u5230\u79bb\u7ebf\u52a0\u8fb9\uff0c\u5224\u65ad\u6bcf\u4e00\u4e2a\u8be2\u95ee\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\uff0c\u4f46\u5fc5\u987b\u6bcf\u6b21\u68c0\u67e5\u6bcf\u4e00\u4e2a\u8be2\u95ee\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(mq\\log n)$\u3002\n\n\u4e0a\u8ff0\u8fc7\u7a0b\u6bcf\u4e00\u6b21\u68c0\u9a8c\u975e\u5e38\u6d6a\u8d39\u65f6\u95f4\uff0c\u8003\u8651\u5206\u5757\uff0c\u6bcf\u63d2\u5165 $O(\\sqrt m)$ \u6b21\u68c0\u9a8c\u4e00\u6b21\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee\u5012\u7740\u626b\u4e00\u904d\u7528\u5e26\u64a4\u9500\u5e76\u67e5\u96c6\u65ad\u4e00\u4e0b\u5c31\u884c\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(q\\sqrt m\\log n)$ \u5e38\u6570\u8f83\u5c0f\u3002\n\n```cpp\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,fma\")\n#pragma GCC optimize(\"unroll-loops\")\n#include<bits/stdc++.h>\n#define re register\nusing namespace std;\nconst int Mxdt=100000;\t//\u5355\u6b21\u5927\u5c0f \ninline char gc(){\n\tstatic char buf[Mxdt],*p1=buf,*p2=buf;\n\treturn p1==p2&&(p2=(p1=buf)+fread(buf,1,Mxdt,stdin),p1==p2)?EOF:*p1++;\n}\ninline char pc(char ch,bool bj){\n\tstatic char buf[Mxdt],*p1=buf,*p2=buf+Mxdt;\n\treturn (bj||(*p1++=ch)&&p1==p2)&&fwrite(p1=buf,1,p1-buf,stdout),0;\n}\nvoid print(int x)\n{\n\tif(x>9)print(x/10);\n\tpc(x%10^48,false);\n}\ninline void printnum(int x,char ch)\n{\n\tprint(x),pc(ch,false);\n}\ninline int read(){\n\tre int t=0;re char v=gc();\n\twhile(v<'0')v=gc();\n\twhile(v>='0')t=(t<<3)+(t<<1)+v-48,v=gc();\n\treturn t;\n}\nint fa[100002],n,m,q,a[100002],b[100002],A[100002],B[100002],C[100002],ans[100002],siz[100002],tp,stkx[100002],stky[100002],t[100002],aa[100002],bb[100002],sss,cc[100002];\ninline int root(re int x){return x==fa[x]?x:root(fa[x]);}\ninline void merge(re int x,re int y,re int z){\n\tif((x=root(x))==(y=root(y)))return;\n\tif(siz[x]>siz[y])swap(x,y);\n\tfa[x]=y,stkx[++tp]=x,stky[tp]=y,siz[y]+=siz[x],t[tp]=z;\n}\ninline void undo(){\n\tsiz[stky[tp]]-=siz[stkx[tp]];\n\tfa[stkx[tp]]=stkx[tp];\n\t--tp;\n}\ninline bool check(re int x){\n\tre int xx=root(A[x]),yy=root(B[x]);\n\tif(xx==yy)return siz[xx]>=C[x];\n\treturn (siz[xx]+siz[yy])>=C[x];\n}\nint main(){\n\tn=read(),m=read();\n\tfor(re int i=1;i<=n;++i)siz[fa[i]=i]=1;\n\tfor(re int i=1;i<=m;++i)a[i]=read(),b[i]=read();\n\tq=read();\n\tfor(re int i=1;i<=q;++i)A[i]=read(),B[i]=read(),C[i]=read();\n\tre int ss=sqrt(m),lst=0;\n\tfor(re int i=1;i<=m;++i){\n\t\tmerge(a[i],b[i],i);\n\t\tif(i%ss==0||(i==m)){\n\t\t\tfor(re int j=1;j<=q;++j)\n\t\t\t\tif(!ans[j]){\n\t\t\t\t\tre int pos=i;sss=0;\n\t\t\t\t\twhile(check(j)){\n\t\t\t\t\t\tif(pos==t[tp])undo();\n\t\t\t\t\t\tans[j]=pos;--pos;\n\t\t\t\t\t}\n\t\t\t\t\tfor(re int k=pos;k<=i;++k)merge(a[k],b[k],k);\n\t\t\t\t}\n\t\t\tlst=i;\n\t\t}\n\t}\n\tfor(re int i=1;i<=q;++i)printnum(ans[i],'\\n');\n\treturn pc('o',1);\n}\n```\n",
        "postTime": 1612165862,
        "uid": 41476,
        "name": "gyh20",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 AT1998 \u3010[AGC002D] Stamp Rally\u3011"
    },
    {
        "content": "## \u9898\u89e3\uff1a\n\u5148\u60f3\u4e00\u60f3\uff0c\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u89e3\u51b3\uff0c\u4f46 $n^2$ \u592a\u6162\u4e86\uff0c\u4e8e\u662f\u5c31\u60f3\u5230\u4e86\u6574\u4f53\u4e8c\u5206\u3002\n\n\u6211\u5148\u662f\u7528\u4e86\u4e00\u4e2a\u666e\u901a\u7684\u5e76\u67e5\u96c6\uff0c\u7ed3\u679c\u53d1\u73b0\u6bcf\u6b21\u90fd\u8981\u521d\u59cb\u5316\u4e00\u904d\uff0cT \u98de\u4e86\u3002\n\n\u540e\u6765\u60f3\u7740\u53ef\u4ee5\u652f\u6301\u5220\u9664\uff0c\u5c31\u4e0d\u80fd\u8def\u5f84\u538b\u7f29\u4e86\uff08\u8fd8\u662fT\u98de\uff09\uff0c\u6211\u4e86\u89e3\u5230\u4e86\u4e00\u4e2a\u9ed1\u79d1\u6280\uff0c\u6309\u79e9\u5408\u5e76\u3002\n\n\u6211\u4eec\u5408\u5e76\u4e24\u68f5\u6811\u7684\u65f6\u5019\uff0c\u6211\u4eec\u628a\u6811\u9ad8\u5c0f\u7684\u6302\u5728\u6811\u9ad8\u5927\u7684\u4e0b\u9762\uff0c\u8fd9\u6837\u5c31\u80fd\u628a\u6811\u9ad8\u63a7\u5236\u5728log\u7ea7\u522b\u3002\n\n\u7136\u540e\u6211\u4eec\u52a0\u8fb9\u7684\u65f6\u5019\uff0c\u7528\u6808\u8bb0\u5f55\u5408\u5e76\u7684\u4e24\u4e2a\u8282\u70b9\uff0c\u5206\u5b8c\u4e4b\u540e\uff0c\u518d\u4ece\u6808\u4e2d\u4e00\u4e2a\u4e2a\u5730\u53d6\u51fa\u6765\u6062\u590d\u539f\u6837\u5c31\u597d\u4e86\u3002\n\n\u5230\u6700\u540e\u4e00\u4e2a\u70b9\u7684\u65f6\u5019\u6211\u4eec\u518d\u628a\u8fd9\u6761\u8fb9\u8fde\u4e0a\uff0c\u6210\u529fAC\u3002\n\n\u5bf9\u4e86\uff0c\u6211\u4e4b\u524d\u52a0\u4e86\u8fd9\u4e2a\u526a\u679d\uff1a\n``` cpp\nif(x<y)return;\n```\n\u5c31\u662f\u8bf4\u5982\u679c\u533a\u95f4\u91cc\u6ca1\u6709\u6570\u5c31\u4e0d\u5f80\u4e0b\u4e86\uff0c\u4f46\u8fd9\u4f1a\u5bfc\u81f4\u6709\u4e9b\u8fb9\u6ca1\u6709\u8fde\uff0c\u5c31WA\u4e86\u3002\n\n## CODE\uff1a\n```cpp\n#include<iostream>\n#include<stack>\n#include<cstdio>\nusing namespace std;\n\nint n,m,q,ans[100005];\nint siz[100005],fa[100005];\nstruct Edge{\n\tint x,y;\n}e[100005];\nstruct Question{\n\tint x,y,z,id;\n}Q[100005],tmp[100005];\nstack<Edge> s;\n\nint find(int x){\n\tif(x==fa[x])return x;\n\treturn find(fa[x]);\n}\n\nvoid solve(int l,int r,int x,int y){\n\tif(l==r){\n\t\tfor(int i=x;i<=y;i++)ans[Q[i].id]=l;\n\t\tint fx=find(e[l].x),fy=find(e[l].y);\n\t\tif(siz[fx]>siz[fy])swap(fx,fy);\n\t\tif(fx!=fy)fa[fx]=fy,siz[fy]+=siz[fx];\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tfor(int i=l;i<=mid;i++){\n\t\tint fx=find(e[i].x),fy=find(e[i].y);\n\t\tif(siz[fx]>siz[fy])swap(fx,fy);\n\t\tif(fx!=fy){\n\t\t\tfa[fx]=fy,siz[fy]+=siz[fx];\n\t\t\ts.push((Edge){fx,fy});\n\t\t}\n\t}\n\tint tot1=x-1,tot2=0;\n\tfor(int i=x,size;i<=y;i++){\n\t\tint fx=find(Q[i].x),fy=find(Q[i].y);\n\t\tif(fx==fy)size=siz[fx];\n\t\telse size=siz[fx]+siz[fy];\n\t\tif(size>=Q[i].z)Q[++tot1]=Q[i];\n\t\telse tmp[++tot2]=Q[i];\n\t}\n\tfor(int i=1;i<=tot2;i++)Q[tot1+i]=tmp[i];\n\twhile(!s.empty()){\n\t\tEdge e=s.top();s.pop();\n\t\tfa[e.x]=e.x,siz[e.y]-=siz[e.x];\n\t}\n\tsolve(l,mid,x,tot1);\n\tsolve(mid+1,r,tot1+1,y);\n}\n\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t\tscanf(\"%d%d\",&e[i].x,&e[i].y);\n\tfor(int i=1;i<=n;i++)fa[i]=i;\n\tfor(int i=1;i<=n;i++)siz[i]=1;\n\tscanf(\"%d\",&q);\n\tfor(int i=1;i<=q;i++){\n\t\tscanf(\"%d%d%d\",&Q[i].x,&Q[i].y,&Q[i].z);\n\t\tQ[i].id=i;\n\t}\n\tsolve(1,m,1,q);\n\tfor(int i=1;i<=q;i++)\n\t\tprintf(\"%d\\n\",ans[i]);\n}\n```",
        "postTime": 1534316505,
        "uid": 48147,
        "name": "2016gdgzoiLZH",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT1998 \u3010Stamp Rally\u3011"
    }
]