[
    {
        "content": "2022 \u505a\u7684\u6700\u540e\u4e00\u9053\u9898\u2014\u2014\n\n\u8fd8\u662f\u5f88\u6709\u610f\u601d\u7684\u4e00\u4e2a\u6784\u9020\u9898\u3002\n\nupd. 2023.1.26 \u4fee\u4e86\u4e00\u4e2a\u95ee\u9898 \u611f\u8c22 @\u6b4c\u541f\u5165\u68a6 orz\n\n## \u601d\u8def\n\n\u9898\u76ee\u4e2d\u8981\u6c42\u8ba9 $a_i \\gets a_i \\oplus a_{i-1}$\uff0c\u53ef\u4ee5\u628a\u5b83\u770b\u4f5c\u4e00\u4e2a\u5dee\u5206\u3002\u6211\u4eec\u7528\u5b83\u7684\u9006\u8fd0\u7b97\uff0c\u4e5f\u5c31\u662f\u524d\u7f00\u5f02\u6216\u548c\u6765\u8003\u8651\u8fd9\u4e2a\u95ee\u9898\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u628a\u95ee\u9898\u8f6c\u6362\u6210\u4e86\uff1a\u7ed9\u5b9a $b$ \u6570\u7ec4\uff0c\u6bcf\u6b21\u53ef\u4ee5\u9009\u53d6 $k \\in [1, n]$\uff0c\u7136\u540e\u5c06 $i \\in [1, k]$ \u4e2d\u7684\u6240\u6709 $b_i \\gets \\bigoplus_{j=1}^i b_j$\uff0c\u6c42\u4e00\u4e2a\u5c06 $b$ \u6570\u7ec4\u8f6c\u6362\u6210 $a$ \u6570\u7ec4\u7684\u65b9\u6848\u3002\n\n\u89c2\u5bdf\u6570\u636e\u8303\u56f4\uff0c\u53d1\u73b0\u5927\u7ea6\u662f $n \\log b$\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u6bcf\u6b21\u7528 $\\log b$ \u6b21\u64cd\u4f5c\u51d1\u51fa\u4e00\u4e2a $a_i$\u3002\u4e3a\u4e86\u9632\u6b62\u524d\u7f00\u548c\u5f71\u54cd\u4e4b\u524d\u51d1\u597d\u7684\u6570\uff0c\u6211\u4eec\u8003\u8651\u4ece $a_n$ \u5230 $a_1$ \u51d1\u3002\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a Yes \u7684\u5fc5\u8981\u6761\u4ef6\uff1a\u6bcf\u4e00\u4e2a $a_i$ \u90fd\u53ef\u4ee5\u7531 $\\{ b_1, \\cdots, b_{i-1}\\}$ \u4e2d\u7684\u82e5\u5e72\u6570\u4e0e $b_i$ \u5f02\u6216\u5f97\u5230\u3002\n\n\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e5f\u662f\u4e00\u4e2a\u5145\u5206\u6761\u4ef6\uff0c\u4e0b\u9762\u6211\u4eec\u6765\u5c1d\u8bd5\u6784\u9020\u3002\n\n\u9996\u5148\u539f\u6570\u7ec4\u770b\u8d77\u6765\u5c31\u5f88\u4e0d\u597d\u8003\u8651\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u5b83\u4eec\u6c42\u4e00\u4e2a\u7ebf\u6027\u57fa\uff0c\u7136\u540e\u7ed9\u57fa\u5e95\u6309\u7167\u52a0\u5165\u7684\u5148\u540e\u987a\u5e8f\u6807\u4e00\u4e2a\u53f7\uff0c\u518d\u7528\u8fd9\u7ec4\u57fa\u5e95\u65b0\u7684\u6807\u53f7\u6765\u8868\u793a $b$ \u4e2d\u7684\u6bcf\u4e00\u4e2a\u6570\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u8fdb\u884c\u8fd9\u4e00\u6b65\u8f6c\u6362\u540e\uff0c\u5bf9\u5f97\u5230\u7684\u65b0\u6570\u7ec4 $c$ \u8fdb\u884c\u64cd\u4f5c\u548c\u5bf9\u539f\u6570\u7ec4 $b$ \u8fdb\u884c\u64cd\u4f5c\u65f6\u7b49\u4ef7\u7684\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u6765\u8003\u8651\u8fd9\u4e2a\u65b0\u7684 $c$ \u6570\u7ec4\u3002\n\n\u6b64\u65f6\u6211\u4eec\u8981\u6784\u9020\u7684\u76ee\u7684\u8fd8\u4e0d\u660e\u786e\u3002\u4f46\u662f\u6ce8\u610f\u5230\u6211\u4eec\u662f\u4ece $a_n$ \u5230 $a_1$ \u8fdb\u884c\u6784\u9020\uff0c\u5982\u679c\u6b64\u65f6\u6211\u4eec\u8981\u6784\u9020 $a_i$\uff0c\u90a3\u4e48\u6211\u4eec\u662f\u4e0d\u80fd\u5bf9 $k \\in (i, n]$ \u8fdb\u884c\u64cd\u4f5c\u7684\uff0c\u5426\u5219\u4f1a\u5c06\u4e4b\u524d\u5df2\u7ecf\u6784\u9020\u597d\u7684\u6570\u6253\u4e71\u6389\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u60f3\u8981\u6539\u53d8 $b_i$ \u53ea\u6709\u53ef\u80fd\u5bf9 $k=i$ \u8fdb\u884c\u64cd\u4f5c\u3002\u5bf9 $k=i$ \u8fdb\u884c\u64cd\u4f5c\u76f8\u5f53\u4e8e\u5c06 $b_i \\gets \\bigoplus_{j=1}^i b_j$\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u5b9e\u9645\u4e0a\u5c31\u662f\u8981\u6784\u9020\u51fa\u5f02\u6216\u548c\u7b49\u4e8e $a_i$\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u7531\u4e8e\u6211\u4eec\u6309\u7167\u52a0\u5165\u7684\u5148\u540e\u987a\u5e8f\u8fdb\u884c\u6807\u53f7\uff0c\u90a3\u4e48\u5982\u679c\u7b2c $i$ \u4f4d\u6700\u65e9\u5728 $pos_i$ \u51fa\u73b0\u4e86\uff0c\u90a3\u4e48\u5728 $1 \\sim pos_i - 1$ \u4e2d $i$ \u8fd9\u4e00\u4f4d\u90fd\u4e3a $0$\u3002\n\n\u8003\u8651\u5982\u4f55\u5c06\u524d\u7f00\u548c\u7684\u67d0\u4e00\u4f4d\u7ffb\u8f6c\u3002\u6211\u4eec\u77e5\u9053 $pos_i$ \u662f\u7b2c\u4e00\u6b21\u51fa\u73b0 $i$\uff0c\u90a3\u4e48\u5982\u679c\u5bf9 $k=pos_i + 1$ \u8fdb\u884c\u64cd\u4f5c\uff0c\u53ea\u6709 $b_{pos_i + 1}$ \u7684\u5f02\u6216\u548c\u591a\u4e86 $i$ \u8fd9\u4e00\u4f4d\uff0c\u90a3\u4e48\u603b\u5f02\u6216\u548c\u7684\u8fd9\u4e00\u4f4d\u4e5f\u5c31\u4f1a\u88ab\u7ffb\u8f6c\u3002\u6211\u4eec\u4ece\u5927\u5230\u5c0f\u8003\u8651\uff0c\u8fd9\u6837 $pos_i$ \u662f\u9012\u51cf\u7684\uff0c\u64cd\u4f5c\u4e0d\u4f1a\u5f71\u54cd\u5230\u4e4b\u524d\u7684\u6570\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u6709\u4e86\u4e00\u4e2a\u6784\u9020\u65b9\u6cd5\uff1a\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\u6bcf\u4e00\u4f4d $i$\uff0c\u8ba1\u7b97\u51fa\u5f53\u524d\u7684\u5f02\u6216\u548c\uff0c\u5982\u679c\u5728 $i$ \u8fd9\u4e00\u4f4d\u4e0a $a_i$\uff08\u5728\u91cd\u6807\u53f7\u540e\u7684\uff09\u4e0e\u5f02\u6216\u548c\u8fd9\u4e00\u4f4d\u4e0d\u4e00\u6837\uff0c\u5c31\u5bf9 $k=pos_i+1$ \u8fdb\u884c\u64cd\u4f5c\uff0c\u6700\u540e\u518d\u5bf9 $k=m$ \u8fdb\u884c\u4e00\u6b21\u64cd\u4f5c\uff0c\u5c31\u80fd\u6784\u9020\u51fa $a_m$ \u4e86\u3002\n\n\u5c06\u8fd9\u4e2a\u8fc7\u7a0b\u91cd\u590d $n$ \u904d\u5373\u53ef\u3002\u6700\u540e\u518d\u628a\u64cd\u4f5c\u5e8f\u5217\u7ffb\u8f6c\u8fc7\u6765\uff0c\u5c31\u662f $a$ \u5230 $b$ \u7684\u64cd\u4f5c\u4e86\u3002\n\n## Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 1005;\nint n;\nlong long a[MAXN], b[MAXN], c[MAXN];\nint pos[64];\nvector<int> ans;\nstruct LinearBasis {\n    long long a[63];\n    int id[63];\n    int tot;\n    bool contains(long long x) {\n        for (int i = 59; i >= 0; i--) if (x >> i & 1) {\n            if (a[i]) {\n                x ^= a[i];\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n    long long insert(long long x) {\n        long long ret = 0;\n        for (int i = 60; i >= 0; i--) if (x >> i & 1) {\n            if (a[i]) {\n                ret |= (1ll << id[i]);\n                x ^= a[i];\n            } else {\n                a[i] = x;\n                id[i] = tot++;\n                return ret | 1ll << (id[i]);\n            }\n        }\n        return ret;\n    }\n    void clear() {\n        memset(a, 0, sizeof a);\n        memset(id, 0, sizeof id);\n        tot = 0;\n    }\n} lb;\nvoid filp(int x) {\n    ans.push_back(x);\n    for (int i = 1; i <= x; i++) {\n        b[i] ^= b[i - 1];\n        c[i] ^= c[i - 1];\n    }\n}\nint main() {\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; i++) {\n        scanf(\"%lld\", &a[i]);\n    }\n    for (int i = 1; i <= n; i++) {\n        scanf(\"%lld\", &b[i]);\n    }\n    for (int i = 1; i <= n; i++) {\n        if (!lb.contains(a[i] ^ b[i])) { // \u5224\u65ad\u662f\u5426\u6709\u89e3\n            printf(\"No\\n\");\n            return 0;\n        }\n        lb.insert(b[i]);\n    }\n    for (int i = n; i >= 1; i--) {\n        lb.clear();\n        for (int j = 1; j <= i; j++) {\n            bool isIn = lb.contains(b[j]); // \u662f\u5426\u5728\u7ebf\u6027\u57fa\u91cc\uff0c\u5982\u679c\u4e0d\u5728\u90a3\u5c31\u662f\u6709\u65b0\u7684\u57fa\u5e95\uff0c\u8bb0\u5f55\u7b2c\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e pos_i\n            c[j] = lb.insert(b[j]);\n            if (!isIn) {\n                pos[__lg(c[j])] = j;\n            }\n        }\n        long long goal = lb.insert(a[i]);\n        for (int j = lb.tot - 1; j >= 0; j--) {\n            long long sum = 0;\n            for (int k = 1; k <= i; k++) sum ^= c[k];\n            if ((sum >> j & 1) != (goal >> j & 1)) filp(pos[j] + 1);\n        }\n        filp(i);\n    }\n    reverse(begin(ans), end(ans));\n    printf(\"Yes\\n%lu\\n\", ans.size());\n    for (int i : ans) printf(\"%d \", i);\n    printf(\"\\n\");\n    return 0;\n}\n```\n\n",
        "postTime": 1672499136,
        "uid": 279652,
        "name": "APJifengc",
        "ccfLevel": 9,
        "title": "\u300c\u89e3\u9898\u62a5\u544a\u300d[ARC145E] Adjacent XOR"
    }
]