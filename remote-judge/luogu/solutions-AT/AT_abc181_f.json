[
    {
        "content": "## ABC181F\n\n*2009\n\n### \u9898\u610f\n\n\u7ed9\u4f60\u4e00\u4e2a\u5e73\u9762\uff0c\u4e0a\u754c\u662f\u76f4\u7ebf $y=100$ \u4e0b\u754c\u662f\u76f4\u7ebf $y=-100$\u3002\n\n\u5728\u5e73\u9762\u4e0a $n$ \u4e2a\u9489\u5b50\uff0c\u9489\u5b50\u4e0d\u80fd\u5728\u5706\u5185\u3002\n\n\u4e00\u4e2a\u5706\u4ece $x=-\\infty$ \u5f00\u59cb\u5411\u53f3\u8fd0\u52a8\uff0c\u95ee\u6700\u5927\u7684\u534a\u5f84\u4f7f\u5706\u80fd\u591f\u5230\u8fbe $x=\\infty$\u3002\n\n $n,|x|,|y| \\le 100$ \uff0c\u7cbe\u5ea6\u8bef\u5dee\u5141\u8bb8 $10^{-4}$\u3002\n\n### \u9898\u89e3\n\n\u770b\u5230\u6700\u5927\u5316\u4e0e\u5408\u6cd5\u5316\uff0c\u8003\u8651\u4e8c\u5206\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u9489\u5b50\u53ef\u4ee5\u62e6\u4f4f\u76f4\u5f84\u4e3a $d$ \u7684\u5706\uff0c\u5f53\u4e14\u4ec5\u5f53\u53ef\u4ee5\u7528\u82e5\u5e72\u6761\u957f\u5ea6\u4e0d\u5927\u4e8e $d$ \u7684\u7ebf\u6bb5\u4ece\u4e0a\u754c\u9014\u5f84\u9489\u5b50\u8fde\u63a5\u5230\u4e0b\u754c\u3002\n\n\u8fd9\u6837\u4e00\u6765\u5f53\u5706\u8bd5\u56fe\u7ecf\u8fc7\u8fd9\u6761\u7ebf\u65f6\uff0c\u65e0\u8bba\u5982\u4f55\u90fd\u4f1a\u88ab\u5176\u4e2d\u7684\u4e00\u6761\u7ebf\u6bb5\u62e6\u4f4f\u3002\n\n\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u8fd9\u4e2a\u8fc7\u7a0b\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u70b9 $(x,y)$ \uff0c\u6211\u4eec\u989d\u5916\u6dfb\u52a0\u70b9 $(x,100)$ \u4e0e $(x,-100)$\uff0c\u7528\u6765\u8fde\u63a5\u8fb9\u754c\u3002\n\n\u8bbe\u5f53\u524d\u5706\u7684\u76f4\u5f84\u4e3a $d$ \uff0c\u6211\u4eec\u53ea\u9700\u8981\u8fde\u63a5\u6240\u6709\u8ddd\u79bb\u4e0d\u5927\u4e8e $d$ \u7684\u70b9\uff0c\u8fde\u63a5\u5b8c\u6210\u540e\u68c0\u67e5\u4e0a\u4e0b\u754c\u662f\u5426\u88ab\u8fde\u63a5\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2\\log v \u00b7 \\alpha(n))$\uff0c\u5176\u4e2d $v$ \u4e3a\u4e8c\u5206\u7cbe\u5ea6\u9700\u6c42\u3002\n\n### \u4ee3\u7801\n\n```cpp\nconst ll maxn=105;\nll fa[maxn<<2];//\u7a7a\u95f4\u5f00\u5927\uff0c\u56e0\u4e3a\u8981\u989d\u5916\u52a0\u4e24\u500d\u7684\u70b9\nconst db eps=1e-9;\nll cmp(db x,db y){\n\tif(x-y>eps)return 2;\n\tif(y-x>eps)return 1;\n\treturn 0;\n}//\u89c4\u907f\u7cbe\u5ea6\u8bef\u5dee\nstruct node{\n\tll x,y;\n}a[maxn<<2];\nll tot;\ndb calc(node u,node v){\n\treturn 1.0*(sqrt(1.0*(u.x-v.x)*(u.x-v.x)+1.0*(u.y-v.y)*(u.y-v.y)));\n}//\u8ba1\u7b97\u8ddd\u79bb\nll find(ll x){return fa[x]==x?x:fa[x]=find(fa[x]);}\nvoid merge(ll u,ll v){u=find(u),v=find(v);if(u==v)return ;fa[u]=v;}\nbool check(db lim){\n\tfor(ll i=1;i<=tot;i++)fa[i]=i;\n\tfor(ll i=1;i<=tot;i++){\n\t\tfor(ll j=1;j<=tot;j++){\n\t\t\tif(i==j)continue;\n\t\t\tif(cmp(calc(a[i],a[j]),lim)==2)continue;\n\t\t\tmerge(i,j);\n\t\t}\n\t}//\u5408\u5e76\n\tfor(ll i=1;i<=tot;i++){\n\t\tif(a[i].y!=100&&a[i].y!=-100)continue;\n\t\tfor(ll j=i+1;j<=tot;j++){\n\t\t\tif(a[i].y+a[j].y)continue;\n\t\t\tif(find(i)==find(j))return 0;\n\t\t}\n\t}//\u68c0\u67e5\n\treturn 1;\n}\nll n;\nvoid solve(){\n\tn=R;\n\tfor(ll i=1;i<=n;i++){\n\t\tll x=R,y=R;\n\t\ta[++tot].x=x;\n\t\ta[tot].y=y;\n\t\ta[++tot].x=x;\n\t\ta[tot].y=100;\n\t\ta[++tot].x=x;\n\t\ta[tot].y=-100;\n\t}\n\tdb l=0.0,r=200.0;\n\twhile(cmp(l,r)){\n\t\tdb mid=(l+r)/2.0;\n\t\tif(check(mid))l=mid;\n\t\telse r=mid;\n\t}\n\t//\u6ce8\u610f\u6211\u4eec\u4e8c\u5206\u7684\u662f\u76f4\u5f84\uff0c\u6240\u4ee5\u8f93\u51fa\u534a\u5f84\u8981\u9664\u4ee5 2\n\tprintf(\"%.8lf\\n\",l/2.0);//AT\u4e2d\u6587\u7248\u7684\u9898\u9762\u4e2d\u6ca1\u6709\u6ce8\u660e\u7cbe\u5ea6\u8981\u6c42\uff0c\u5b9e\u9645\u4e0a\u662f 1e-4\n\t//\u6240\u4ee5\u8fd9\u91cc\u7684\u4fdd\u7559\u7cbe\u5ea6\uff08\u548c\u4e0a\u6587\u7684eps\uff09\u90fd\u76f8\u5bf9\u53d6\u5f97\u6bd4\u8f83\u5c0f\n\treturn ;\n}\n```\n\n",
        "postTime": 1668479005,
        "uid": 93707,
        "name": "Rnfmabj",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 [ABC181F] Silver Woods"
    },
    {
        "content": "\u5408\u6cd5\u7b54\u6848\u6700\u5927\u5316\uff0c\u8003\u8651\u4e8c\u5206\u7b54\u6848\u3002\n\n\u5173\u4e8e `check`\uff0c\u8bb0\u5f53\u524d\u7b54\u6848\u4e3a $r$\uff0c\u5219 $d = 2r$\uff0c\u5f53 $dis(i, j) \\lt d$ \u65f6\uff0c\u4e0d\u80fd\u4ece\u70b9 $i, j$ \u95f4\u7ecf\u8fc7\u3002\n\n\u8003\u8651\u4ec0\u4e48\u60c5\u51b5\u4e0b\u4e0d\u80fd\u4ece $(- \\infty, 0)$ \u79fb\u52a8\u5230 $(\\infty, 0)$\uff0c\u5373\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\u7684\u70b9\u5bf9\u6784\u6210\u7684\u8fde\u901a\u5757\u4f7f\u5f97\u4e0a\u754c $(x, 100)$ \u4e0e\u4e0b\u754c $(x, -100)$ \u8fde\u901a\u3002\n\n\u6ce8\u610f\u4e0a\u4e0b\u754c\u4e5f\u5e94\u5f53\u770b\u4f5c\u9489\u5b50\u5904\u7406\uff0c\u6bd4\u8f83\u8ddd\u79bb\u65f6\u53ea\u8003\u8651 $y$ \u8f74\u5373\u53ef\u3002\n\n\u8bb0 $w = maxR = 100$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n^2 \\log w \\alpha(n))$\u3002\n\n```cpp\n#include <iostream>\n\ntypedef double dbl;\n\nconst int maxN = 100;\nconst dbl eps = 1e-4;\n\nint n;\ndbl x[maxN + 10];\ndbl y[maxN + 10];\n\nstruct DisjointSetUnion {\n    struct Node {\n        int fa;\n    } node[maxN + 10];\n\n    void Init() {\n        for (int i = 0; i <= n + 1; i++) node[i].fa = i;\n        return;\n    }\n    \n    int Find(int u) {\n        if (node[u].fa == u) return u;\n        return node[u].fa = Find(node[u].fa);\n    }\n\n    void Union(int u, int v) {\n        u = Find(u);\n        v = Find(v);\n        if (u == v) return;\n        node[u].fa = v;\n        return;\n    }\n} DSU;\n\ndbl dis2(int i, int j) {\n    dbl dx = std::abs(x[i] - x[j]);\n    dbl dy = std::abs(y[i] - y[j]);\n    return dx * dx + dy * dy;\n}\n\nbool check(dbl d) {\n    DSU.Init();\n    for (int i = 1; i <= n; i++) if (100 - y[i] < d) DSU.Union(n + 1, i);\n    for (int i = 1; i <= n; i++) if (y[i] + 100 < d) DSU.Union(0, i);\n    for (int i = 1; i <= n; i++) {\n        for (int j = i + 1; j <= n; j++) {\n            if (dis2(i, j) < d * d) {\n                DSU.Union(i, j);\n            }\n        }\n    }\n    return DSU.Find(0) != DSU.Find(n + 1);\n}\n\nint main() {\n    std::cin >> n;\n    for (int i = 1; i <= n; i++) std::cin >> x[i] >> y[i];\n    dbl l = 0;\n    dbl r = 100;\n    while (r - l > eps) {\n        dbl mid = (l + r) / 2;\n        if (check(mid * 2)) l = mid;\n        else r = mid;\n    }\n    std::cout << l << '\\n';\n    return 0;\n}\n```",
        "postTime": 1683597034,
        "uid": 278046,
        "name": "Lyccrius",
        "ccfLevel": 5,
        "title": "ABC181F"
    }
]