[
    {
        "content": "\u8bf4\u5b9e\u8bdd\uff0c\u6700\u521d\u770b\u5230\u9898\u76ee\u4e2d\u8bf4\u7684\u201c\u53ef\u4ee5\u5411\u4efb\u610f\u65b9\u5411\u79fb\u52a8\u201d\u5413\u4e86\u4e00\u8df3\uff0c\u8111\u4e2d\u8111\u8865\u4e86\u5404\u79cd\u884c\u8d70\u7684\u873f\u8712\u66f2\u5f84\u3002\u3002\u3002\n\n~~\u5728\u4e00\u4e0d\u5c0f\u5fc3\u70b9\u5f00\u6807\u7b7e\u540e~~\u624d\u53d1\u73b0\uff0c\u5176\u5b9e\u53ea\u662f\u4e00\u4e2a\u5751\u70b9\u5728\u8bef\u5bfc\u8bfb\u8005\u3002\n\n### \u9898\u76ee\u5927\u610f\n\n\u6700\u77ed\u8def\u5b9a\u4e49\u4e3a\u7ecf\u8fc7\u7684\u672a\u88ab\u8986\u76d6\u533a\u57df\uff0c\u7ed9\u5b9a\u8d77\u70b9\u548c\u7ec8\u70b9\uff0c\u6c42\u6700\u77ed\u8def\n\n### \u601d\u8def\n\n##### \u95ee\u98981\uff1a\u6700\u77ed\u8def\u8dd1\u4ec0\u4e48\uff1f\n\n\u9996\u5148\u6211\u4eec\u8981\u60f3\u6e05\u695a\u4e00\u4ef6\u975e\u5e38\u91cd\u8981\u7684\u6027\u8d28\uff0c\u9898\u76ee\u4e2d\u7ed9\u5b9a\u7684\u6700\u77ed\u8def\u53ea\u6709\u4e00\u4e2a\u6761\u4ef6\uff1a\u7ecf\u8fc7\u7684\u672a\u88ab\u8986\u76d6\u7684\u8def\u5f84\uff1b\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e3a\u4e86\u5c3d\u53ef\u80fd\u7684\u51cf\u5c11\u66b4\u9732\u7684\u8def\u5f84\u7684\u957f\u5ea6\uff0c\u4e0d\u8bba\u8986\u76d6\u533a\u57df\u4e2d\u7684\u8def\u5f84\u957f\u5ea6\u6709\u591a\u957f\uff0c\u90fd\u8981\u8d70\u8fd9\u6761\u8def\uff08~~\u6240\u4ee5\u636e\u8bf4\u8f93\u51fa0\u90fd\u53ef\u4ee5\u5f97\u523035\u5206\u7684\u597d\u6210\u7ee9~~\uff09\n\n##### \u95ee\u98982\uff1a\u6700\u77ed\u8def\u600e\u4e48\u8dd1\uff1f\n\n\u89e3\u51b3\u5b8c\u95ee\u98981\u540e\uff0c\u7b2c\u4e8c\u4e2a\u95ee\u9898\u8fce\u9762\u800c\u6765\uff1a\u6700\u77ed\u8def\u600e\u4e48\u8dd1\uff1f\n\n\u76f8\u4fe1\u4e00\u5b9a\u6709\u4e0d\u5c11\u4eba\u8fd9\u65f6\u8111\u4e2d\u4e5f\u8111\u8865\u4e86\u5404\u79cd\u5f2f\u66f2\u7684\u8def\u7ebf\uff0c\u4f46\u6211\u4eec\u8f6c\u5ff5\u4e00\u60f3\uff1a\n\n\u4ee5\u4e0b\u8fd9\u79cd\u60c5\u51b5\uff0c\u54ea\u6761\u8def\u5f84\u66f4\u4f18\uff1f\uff08\u84dd\u8272or\u7eff\u8272\uff09\n\n![](https://pic.imgdb.cn/item/616063d42ab3f51d9156160f.jpg)\n\n\u65e0\u6cd5\u5224\u65ad\u7684\u8bdd\uff0c\u53ef\u4ee5\u8fd9\u4e48\u7406\u89e3\uff1a\n\n\u6211\u4eec\u4ee5start\u4e3a\u5706\u5fc3\uff0c\u7b2c\u4e00\u6bb5\u84dd\u8272\u7ebf\u6bb5\u66b4\u9732\u7684\u8def\u5f84\u4e3a\u534a\u5f84\u753b\u5706\uff0c\u4e0e\u9ed1\u8272\u7684\u5706\u76f8\u5207\u4e0eA\u70b9\uff1b\n\n![](https://pic.imgdb.cn/item/616067332ab3f51d915e28f4.jpg)\n\n\u90a3\u4e48\u7b2c\u4e00\u6bb5\u84dd\u8272\u7ebf\u6bb5\u4e00\u5b9a\u5782\u76f4\u4e8e\u5207\u7ebf\uff0c\u800c\u7eff\u8272\u7ebf\u6bb5\u4e0e\u5207\u7ebf\u6709\u4e00\u5b9a\u7684\u5939\u89d2\uff1b\n\n\u6240\u4ee5\u7b2c\u4e00\u6bb5\u84dd\u8272\u7ebf\u6bb5\u66b4\u9732\u7684\u8def\u5f84\u957f\u5ea6\u6bd4\u7eff\u8272\u7ebf\u6bb5\u77ed\uff1b\n\n\u540c\u7406\uff0c\u7b2c\u4e8c\u6bb5\u84dd\u8272\u7ebf\u6bb5\u66b4\u9732\u7684\u8def\u5f84\u957f\u5ea6\u4e5f\u6bd4\u7eff\u8272\u7ebf\u6bb5\u77ed\uff0c\u6240\u4ee5\u84dd\u8272\u8def\u6bd4\u7eff\u8272\u8def\u4f18\u3002\n\n\u81f3\u6b64\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u6761\u91cd\u8981\u7684\u7ed3\u8bba\uff1a**\u5bf9\u4e8e\u4e00\u4e2a\u8986\u76d6\u7684\u533a\u57df\u6765\u8bf4\uff0c\u7ecf\u8fc7\u5b83\u7684\u5706\u5fc3\u6c38\u8fdc\u6bd4\u4e0d\u7ecf\u8fc7\u5706\u5fc3\u4f18**\n\n##### \u95ee\u98983\uff1a\u600e\u6837\u8f6c\u5316\u6210\u6700\u77ed\u8def\uff1f\n\n\u5176\u5b9e\u9898\u76ee\u9690\u85cf\u4e86\u4e00\u6761\u91cd\u8981\u4fe1\u606f\uff1a**\u8d77\u70b9\u548c\u7ec8\u70b9\u4e5f\u6709\u8986\u76d6\u8303\u56f4\uff0c\u53ea\u4e0d\u8fc7\u662f0**\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u6240\u6709\u70b9\u90fd\u5f52\u6210\u4e00\u7c7b\uff1a\n\n```cpp\nstruct node{int x,y,len;}a[N];//\u5750\u6807\u53ca\u534a\u5f84\n```\n\n\u7784\u4e00\u773c\u6570\u636e\u8303\u56f4\uff1a$n\\le1000$\n\n\u8fd9\u4e48\u5c0f\uff1f\u76f4\u63a5\u70b9\u4e4b\u95f4\u4e24\u4e24\u8fde\u8fb9\uff01\n\n1. \u70b9\u7684\u7f16\u53f7\uff1f\u5c31\u662f\u8bfb\u5165\u987a\u5e8f\uff0c\u8d77\u70b9\u548c\u7ec8\u70b9\u53e6\u5916\u52a0\u4e24\u4e2a\u3002\n\n2. \u8fb9\u6743\uff1f\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\u51cf\u53bb\u4e24\u4e2a\u70b9\u8986\u76d6\u533a\u57df\u7684\u534a\u5f84\u3002\n\n3. \u600e\u4e48\u8dd1\uff1fdij\u6216spfa\u7686\u53ef\uff0c\u88f8\u7684\u6700\u77ed\u8def\u677f\u5b50\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define N 1005//\u70b9\u6570\n#define M 1000005//\u8fb9\u6570\n#define inf 0x3f3f3f3f3f3f3f3f//inf\u5f00\u5927\u4e00\u70b9\uff0c\u6570\u636e\u8303\u56f4\u662f1e9\n#define endl '\\n'\n#define debug cerr<<__LINE__<<endl\nusing namespace std;\nint n,m;\nint xs,xt,ys,yt;\ninline int read(){\n\tregister int f=1,k=0;\n\tregister char c=getchar();\n\twhile(c!='-'&&(c<'0'||c>'9')) c=getchar();\n\tif(c=='-') f=-1,c=getchar();\n\twhile(c>='0'&&c<='9') k=(k<<3)+(k<<1)+(c^48),c=getchar();\n\treturn f*k;\n}\ninline void write(register int x){\n    if(x<0) x=-x,putchar('-');\n\tif(x>9) write(x/10);\n\tputchar(x%10+'0');\n}\ninline long long mul(const register int x){return 1ll*x*x;}//\u4e00\u5b9a\u8981\u8bb0\u5f97\u5f00long long\ninline double get_dis(int x,int y,int a,int b){return sqrt(mul(a-x)+mul(b-y));}//\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\nnamespace first{//\u7279\u5224\u4e86\u4e00\u4e0b\u524d20%\u6570\u636e\n\tint xx,yy,len;\n\tinline double solve(){\n\t\txx=read(),yy=read(),len=read();\n\t\treturn min(get_dis(xs,ys,xt,yt),get_dis(xx,yy,xs,ys)+get_dis(xt,yt,xx,yy)-(len<<1));\n\t}\n}\nnamespace second{\n\tint head[N],cnt;\n\tdouble dis[N];//\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\uff0c\u7528double\n\tbool vis[N];\n\tstruct edge{int to,nxt;double val;}e[M<<1];//\u540c\u4e0a\uff0cdouble\n\tstruct node{int x,y,len;}a[N];\n\tpriority_queue<pair<double,int>,vector<pair<double,int> >,greater<pair<double,int> > >q;\n\tinline void add(register int u,register int v,register double w){\n\t\te[++cnt].to=v;e[cnt].val=w;e[cnt].nxt=head[u];head[u]=cnt;\n\t\te[++cnt].to=u;e[cnt].val=w;e[cnt].nxt=head[v];head[v]=cnt;\n\t}\n\tinline void dijkstra(const register int s){\n\t\tfill(dis+1,dis+n+3,inf);//\u56e0\u4e3a\u662fdouble\u7c7b\u578b\uff0c\u6240\u4ee5\u4e0d\u80fd\u7528memset\uff0cfill\u662f\u6bd4for\u5faa\u73af\u66f4\u597d\u7684\u9009\u62e9\n\t\tdis[s]=0;q.emplace(0,s);//\u5373q.push(make_pair(0,s));\n\t\twhile(!q.empty()){//\u88f8\u7684\u6700\u77ed\u8def\u677f\u5b50\n\t\t\tconst register int u=q.top().second;q.pop();\n\t\t\tif(!vis[u]){\n\t\t\t\tvis[u]=1;\n\t\t\t\tfor(register int i=head[u];i;i=e[i].nxt){\n\t\t\t\t\tconst register int v=e[i].to;\n\t\t\t\t\tif(dis[v]>dis[u]+e[i].val){\n\t\t\t\t\t\tdis[v]=dis[u]+e[i].val;\n\t\t\t\t\t\tq.emplace(dis[v],v);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tinline double solve(){\n\t\tfor(register int i=1;i<=n;i++) a[i].x=read(),a[i].y=read(),a[i].len=read();\n\t\ta[n+1]=(node){xs,ys,0};a[n+2]=(node){xt,yt,0};//\u989d\u5916\u628a\u8d77\u70b9\u548c\u7ec8\u70b9\u90fd\u5f53\u6210\u8986\u76d6\u533a\u57df\n\t\tfor(register int i=1;i<=n+2;i++)\n\t\tfor(register int j=i+1;j<=n+2;j++) add(i,j,max(0.0,get_dis(a[i].x,a[i].y,a[j].x,a[j].y)-a[i].len-a[j].len));\n\t\t//\u6ce8\u610f\u8fd9\u91cc\u8981\u7279\u5224dis\uff0c\u5982\u679cdis<0\u5c31\u8bf4\u660e\u4e24\u4e2a\u5706\u6709\u4ea4\u96c6\uff0c\u8fb9\u6743\u76f4\u63a5\u8d4b\u4e3a0\n\t\tdijkstra(n+1);return dis[n+2];\n\t}\n}\nmain(void){\n    freopen(\"1.in\",\"r\",stdin);\n\txs=read(),ys=read();\n\txt=read(),yt=read();n=read();\n\tif(n==1) return printf(\"%.10lf\\n\",first::solve()),0;//\u524d20%\u6570\u636e\n\treturn printf(\"%.10lf\\n\",second::solve()),0;//\u540e80%\u6570\u636e\n    return 0;\n}\n```\n\n\u7801\u98ce\u8f83\u5947\u8469\uff08~~\u538b\u884c\u5f3a\u8feb\u75c7+\u5361\u5e38\u5c0f\u80fd\u624b~~\uff09\n\n\u6b22\u8fce\u89c9\u5f97\u505a\u6cd5\u5f88\u9ebb\u70e6\u6216\u6709\u9519\u8bef\u7684\u5de8\u4f6c\u6765\u55b7\n\n\n\n\n\n",
        "postTime": 1633709112,
        "uid": 100743,
        "name": "Noir_",
        "ccfLevel": 6,
        "title": "[ARC064C] Cosmic Rays-\u5b87\u5b99\u5c04\u7ebf \u9898\u89e3"
    },
    {
        "content": "[AT \u9898\u9762](https://atcoder.jp/contests/arc064/tasks/arc064_c) [\u6d1b\u8c37\u9898\u9762](/problem/AT_arc064_c)\n\n### \u9898\u610f\n\n\u5728\u4e00\u4e2a\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\u4e2d\uff0c\u7ed9\u5b9a\u8d77\u70b9\u548c\u7ec8\u70b9\uff0c\u4ee5\u53ca\u82e5\u5e72\u4e2a\u5706\u3002\u8bf7\u627e\u51fa\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u4e00\u6761\u8def\u5f84\uff0c\u4f7f\u5f97\u7ecf\u8fc7\u7684\u4e0d\u5728\u4efb\u4e00\u5706\u5185\u7684\u957f\u5ea6\u6700\u5c0f\u3002\n\n### \u601d\u8def\n\n\u5148\u6765\u8003\u8651\u5982\u4f55\u4f7f\u4e00\u4e2a\u70b9\u5230\u4e00\u4e2a\u5706\u7684\u8ddd\u79bb\u6700\u5c0f\uff0c\u663e\u7136\u8def\u5f84\u5782\u76f4\u4e8e\u5706\u7684\u5207\u7ebf\u65f6\u8be5\u8def\u5f84\u6700\u77ed\u3002\n\n\u518d\u5c06\u5b83\u63a8\u5e7f\u5230\u591a\u4e2a\u5706\u4e4b\u95f4\uff0c\u53d1\u73b0\u4f9d\u6b21\u8fde\u63a5\u4e24\u5706\u5706\u5fc3\u6240\u5f97\u5230\u7684\u8def\u5f84\u6700\u77ed\u3002\n\n\u90a3\u4e48\u672c\u9898\u7684\u5efa\u8fb9\u65b9\u5f0f\u5c31\u662f\u5728\u6bcf\u4e24\u4e2a\u5706\u7684\u5706\u5fc3\u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\uff0c\u8d77\u70b9\u4e0e\u7ec8\u70b9\u53ef\u770b\u4f5c\u534a\u5f84\u4e3a $0$ \u7684\u5706\u3002\u90a3\u4e48\u6839\u636e\u9898\u610f\uff0c\u5706 $i$ \u4e0e\u5706 $j$ \u4e4b\u95f4\u7684\u8fb9\u7684\u8fb9\u6743\u4e3a\uff1a\n\n$$dis_{i,j}=\\max\\left(0,\\sqrt{(x_i-x_j)^2+(y_i-y_j)^2}-r_i-r_j\\right)$$\n\n\u6ce8\u610f\uff0c\u5f53\u4e24\u5706\u76f8\u4ea4\u65f6\uff0c\u7b97\u51fa\u7684 $dis_{i,j}<0$\uff0c\u800c\u8fd9\u6761\u8def\u5f84\u66b4\u9732\u5728\u5706\u5916\u7684\u957f\u5ea6\u5e94\u4e3a $0$\uff0c\u6240\u4ee5\u6211\u4eec\u5c06 $dis_{i,j}$ \u5bf9 $0$ \u53d6 $\\max$\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\u7684\u65f6\u5019\u8fd8\u6709\u4e2a\u5751\uff0c\u5c31\u662f $dis$ \u6570\u7ec4\u7684\u521d\u59cb\u503c\u8981\u8db3\u591f\u5927\uff0c\u6211\u8bd5\u4e86\u82e5\u5e72\u4e2a\u5e38\u7528\u7684 $\\inf$ \u503c\u6700\u540e\u53ea\u6709 $\\text{DBL\\_MAX}$ \u8fc7\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1010;\nint n;\ndouble w,dis[N];\nstruct Point{double x,y,r;}p[N];\nstruct edge{int v;double w;};\nvector<edge> e[N];\n\ninline double dist(Point a,Point b){\n    return max(sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y))-a.r-b.r,0.0);\n}\nvoid dijkstra(int s){\n    priority_queue<pair<double,int>> pq;\n    pq.push({dis[s]=0,s});\n    while(!pq.empty()){\n        int u=pq.top().second;pq.pop();\n        if(dis[u]==DBL_MAX)continue;\n        for(auto ed:e[u])\n            if(dis[ed.v]>dis[u]+ed.w)pq.push({-(dis[ed.v]=dis[u]+ed.w),ed.v});\n    }\n}\n\nint main(){\n    cin>>p[1].x>>p[1].y>>p[2].x>>p[2].y;p[1].r=p[2].r=0;\n    cin>>n,n+=2;\n    for(int i=3;i<=n;i++)cin>>p[i].x>>p[i].y>>p[i].r;\n    for(int i=1;dis[i]=DBL_MAX,i<=n;i++)for(int j=i+1;j<=n;j++)\n        w=dist(p[i],p[j]),e[i].push_back({j,w}),e[j].push_back({i,w});\n    dijkstra(1),printf(\"%.10lf\",dis[2]);\n    return 0;\n}\n```\n\n[AC \u8bb0\u5f55](https://atcoder.jp/contests/arc064/submissions/38648540)",
        "postTime": 1675602583,
        "uid": 476985,
        "name": "AZN_0975",
        "ccfLevel": 0,
        "title": "ARC064E Cosmic Rays"
    },
    {
        "content": "### \u4e00\u9053\u770b\u4f3c\u56f0\u96be\u7684\u7b80\u5355 dijkstra \n#### \u5206\u6790\uff1a   \n\u5c0f\u5077\u4ece\u4e00\u4e2a\u906e\u6321\u7269\u5230\u53e6\u4e00\u4e2a\u906e\u6321\u7269\u7684\u8fc7\u7a0b\u662f\u6211\u4eec\u9700\u8981\u601d\u8003\u7684(\u5176\u5b9e\u697c\u4e0a\u7684dalao\u5df2\u7ecf\u8bf4\u7684\u5f88\u6e05\u695a\u4e86)     \n\u4ee5\u5c0f\u5077\u7684\u7ad9\u4f4d\u4e3a\u8d77\u70b9\uff0c\u5982\u4f55\u6700\u8fd1\u7684\u5230\u8fbe\u4e00\u4e2a\u906e\u6321\u7269\uff1f  \n\u6700\u8fd1\u7684\u65e0\u7591\u662f\u5f53\u524d\u70b9\u4e0e**\u906e\u6321\u7269\u5706\u5fc3\u76f8\u8fde\u7684\u76f4\u7ebf**\u6240\u5728(\u8fd9\u4e2a\u5f88\u597d\u7406\u89e3\u5427\uff1f)     \n\u4f46\u5c0f\u5077\u53ea\u8981\u78b0\u5230\u4e86\u8fb9\u7ebf\u5c31\u5b89\u5168\u4e86\uff0c\u6240\u4ee5\u8981**\u51cf\u53bb\u4e24\u5706\u7684\u534a\u5f84**    \n\n\u4e8e\u662f\u8fd9\u9053\u9898\u5c31\u5f88\u597d\u505a\u4e86>>>\u8bf4\u51e0\u4e2a\u7ec6\u8282      \n1. \u5c0f\u5077\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\u9700\u8981\u5efa\u4e00\u4e2a\u534a\u5f84\u4e3a 0 \u7684\u56ed(\u5c31\u662f\u4e2a\u70b9)    \n2. \u7b97\u51fa\u6765\u4e24\u70b9\u7684\u8ddd\u79bb\u51cf\u53bb\u534a\u5f84\u540e\u8981\u4e0e 0.0 \u53d6 max   \n3. \u8bb0\u5f97\u628a\u5bf9\u5e94\u7684\u6570\u636e\u7c7b\u578b\u6539\u6210 double  \n4. \u8f93\u51fa\u63a7\u5236\u7b26\uff1a\"%.10lf\"      \n\u5b8c\u4e86\u5417\uff1f\u5b8c\u4e86 $n^{2}$ \u7684\u8fb9\u5b8c\u5168\u53ef\u4ee5\u5b58\u4e0b    \n#### AC code\n```cpp\n#include<bits/stdc++.h>\nusing namespace std; bool vis[3005]; double dis[3005];\nstruct node{ int to,next; double val; } a[2500005];\nint cnt=0,st,sx,head[3005],tx,ty,n,x[1005],y[1005],r[1005]; \ninline void append(int x,int y,double z){\n\ta[++cnt].to=y;\n\ta[cnt].next=head[x];\n\thead[x]=cnt;\n\ta[cnt].val=z;\n}\ninline void D(int s){\n\tfor(int i=1;i<=n+2;i++)\n\t\tdis[i]=1145141919810.0;\n    dis[s]=0.0;\n    priority_queue<pair<double,int>,vector<pair<double,int> >,greater<pair<double,int> > > points;\n    points.push(make_pair(0,s));\n    while (!points.empty()){\n    \tint u=points.top().second;\n    \tpoints.pop();\n    \twhile (!vis[u]){\n    \t\tvis[u]=1;\n    \t\tfor (int i=head[u];i;i=a[i].next)\n    \t\t\tif (!vis[a[i].to]&&dis[a[i].to]>dis[u]+a[i].val){\n    \t\t\t\tdis[a[i].to]=dis[u]+a[i].val;\n    \t\t\t\tpoints.push(make_pair(dis[a[i].to],a[i].to));\n\t\t\t\t}\n\t\t}\n\t}\n}\ninline double get(int a,int b,int x,int y){ return sqrt((long long)(a-x)*(a-x)+(long long)(b-y)*(b-y)); }\nsigned main(){\n\tscanf(\"%d%d%d%d%d\",&sx,&st,&tx,&ty,&n);\n\tfor (register int i=1;i<=n;i++)\n\t\tscanf(\"%d%d%d\",&x[i],&y[i],&r[i]);\n\tx[n+1]=sx,y[n+1]=st,r[n+1]=0;\n\tx[n+2]=tx,y[n+2]=ty,r[n+2]=0;\n\tfor (register int i=1;i<=n+2;i++)\n\t\tfor (register int j=i+1;j<=n+2;j++){\n\t\t\tappend(i,j,max(0.0,get(x[i],y[i],x[j],y[j])-r[i]-r[j]));\n\t\t\tappend(j,i,max(0.0,get(x[i],y[i],x[j],y[j])-r[i]-r[j]));\n\t\t} D(n+1);\n\tprintf(\"%.10lf\",dis[n+2]);\n\treturn 0;\n}\n```",
        "postTime": 1662989063,
        "uid": 553035,
        "name": "bai_hong",
        "ccfLevel": 0,
        "title": "Cosmic Rays\u9898\u89e3"
    },
    {
        "content": "~~\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u7684\u3002~~\n\n\u9996\u5148\uff0c\u8d77\u70b9\u548c\u7ec8\u70b9\u90fd\u53ef\u4ee5\u770b\u505a\u534a\u5f84\u4e3a\u96f6\u7684\u5706\uff0c\u90a3\u4e48\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u5982\u4f55\u5728\u5706\u4e4b\u95f4\u8d70\uff0c\u4f7f\u5f97\u66b4\u9732\u7684\u8ddd\u79bb\u6700\u77ed\u3002\n\n\u90a3\u4e48\u6211\u4eec\u60f3\uff0c\u4ece\u4e00\u4e2a\u5706\u8d70\u5230\u53e6\u4e00\u4e2a\u5706\uff0c\u600e\u4e48\u8d70\u624d\u6700\u4f18\u5462\uff1f\n\n\u5f88\u663e\u7136\u7684\uff0c\u8d70\u4e24\u5706\u5706\u5fc3\u7684\u8fde\u7ebf\u3002\n\n\u90a3\u4e48\u8fd9\u9053\u9898\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u70b9\u6570\u4e5f\u5f88\u5c11\uff0c\u76f4\u63a5\u7ed9\u4efb\u610f\u4e24\u70b9\u95f4\u5efa\u8fb9\uff0c\u8fb9\u6743\u5c31\u662f\u5706\u5fc3\u8ddd\u79bb\u51cf\u53bb\u4e24\u4e2a\u5706\u7684\u534a\u5f84\uff0c\u7136\u540e\u76f4\u63a5\u8dd1\u6700\u77ed\u8def\u5c31\u597d\u4e86\u3002\n\n\u8981\u6ce8\u610f\u4e00\u70b9\uff0c\u5efa\u8fb9\u7684\u65f6\u5019\uff0c\u5982\u679c\u5706\u76f8\u4ea4\u4e86\uff0c\u90a3\u4e48\u8fb9\u6743\u4e3a 0\u3002\n\n\u4ee3\u7801\uff1a\n```c\n#include<bits/stdc++.h>\n//#pragma GCC optimize(2)\n//#pragma GCC optimize(3)\n//#pragma GCC optimize(\"-Ofast\")\n#define ll long long\n#define uint unsigned int\n#define ull unsigned long long\n#define ushort unsigned short\n#define MAX(x,y) ((x>y)?x:y)\n#define MIN(x,y) ((x<y)?x:y)\n#define SWAP(x,y) x^=y;y^=x;x^=y\n#define I using\n#define AK namespace\n#define IOI std\n#define ByKonnyaku41377 return 0\nconst int MAXN=1e6;\nconst ll MOD=1e9+7;\nI AK IOI;\nll Abs(ll a) {return a>=0?a:(~a)+1;}\nll gcd(ll a, ll b){return b?gcd(b,a%b):a;}\nll lcm(ll a, ll b){return a/gcd(a,b)*b;}\ndouble HAILUN(double a, double b, double c){double P=(a+b+c)/2; return sqrt(P*(P-a)*(P-b)*(P-c));}\nll Qpow(ll a, ll b)   {ll base=a, re=1;while(b){if(b&1)re=(re*base)%MOD;base=(base*base)%MOD;b>>=1;}return re;}\nll Qtimes(ll a, ll b) {ll base=a, re=0;while(b){if(b&1)re=(re+base)%MOD;base=(base+base)%MOD;b>>=1;}return re;}\nll read() {ll x=0; bool f=1; char c=getchar();while(c>'9'||c<'0'){if(c=='-') f=0; c=getchar();}while(c<='9'&&c>='0')x=(x<<1)+(x<<3)+c-'0',c=getchar();return f?x:(~x)+1;}\nvoid writ(ll x){if(x<0) {putchar('-');x=(~x)+1;}if(x>9)writ(x/10);putchar(x-x/10*10+48);}\n/*void prepar(){}*/\nstruct node {\n\tint t, n;\n\tdouble d;\n}e[2000006];\nint head[10003], head_size;\nvoid ADD(int f, int t, double d) {\n\te[++head_size]=(node){t, head[f], d};\n\thead[f]=head_size;\n}\ndouble dis[1003];\ndouble xt, yt;\ndouble x[1003], y[1003], r[1003];\nint n;\ndouble D(int i, int j) {//\u6c42\u4e24\u5706\u4e4b\u95f4\u8d70\uff0c\u66b4\u9732\u7684\u65f6\u95f4\uff0c\u4e5f\u5c31\u662f\u6c42\u8fb9\u6743\u3002\n\treturn max(0.0, sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]))-r[i]-r[j]);\n}\nstruct NODE {\n\tint v; double diss;\n\tbool operator < (const NODE &a) const {\n\t\treturn a.diss<diss;\n\t}\n};\npriority_queue<NODE>q;\nint main(){\n\tcin>>x[0]; cin>>y[0]; cin>>xt>>yt;\n\tn=read();\n\tfor(int i=1; i<=n; ++i) cin>>x[i]>>y[i]>>r[i];\n\t++n;\n\tx[n]=xt; y[n]=yt; r[n]=0;\n\tfor(int i=0; i<=n; ++i) {//\u4efb\u610f\u4e24\u70b9\u5efa\u8fb9\u3002\n\t\tdis[i]=1e15;\n\t\tfor(int j=0; j<=n; ++j) {\n\t\t\tif(i==j) continue ;\n\t\t\tADD(i, j, D(i, j));\n\t\t}\n\t}\n   //\u4ee5\u4e0b\u662fDij\u677f\u5b50\u3002\n\tq.push((NODE){0, 0.0});\n\tdis[0]=0;\n\twhile(!q.empty()) {\n\t\tNODE op=q.top(); q.pop();\n\t\tif(op.diss!=dis[op.v]) continue ;\n\t\tfor(int i=head[op.v]; i; i=e[i].n) {\n\t\t\tif(dis[e[i].t]>dis[op.v]+e[i].d) {\n\t\t\t\tdis[e[i].t]=dis[op.v]+e[i].d;\n\t\t\t\tq.push((NODE){e[i].t, dis[e[i].t]});\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%.10lf\", dis[n]);\n\tByKonnyaku41377;\n\t/*ACdate:2022.9.26*/\n}\n\n```",
        "postTime": 1664281849,
        "uid": 483749,
        "name": "Amore_eterno",
        "ccfLevel": 4,
        "title": "AT2154 \u9898\u89e3"
    },
    {
        "content": "[atcoder\u4f20\u9001\u95e8](https://www.luogu.com.cn/remoteJudgeRedirect/atcoder/2154)\n\n\u7ecf\u8fc7\u6211\u534a\u4e2a\u4e0b\u5348\u7684\u4e0d\u61c8\u52aa\u529b\uff0c\u7ec8\u4e8e ac \u4e86\u8fd9\u9053\u6700\u77ed\u8def\u84dd\u9898\u3002\n\n\u4e0b\u9762\u6765\u5206\u6790\u4e00\u4e0b\u8fd9\u9053\u84dd\u9898\u5427\u3002\n\n### \u5efa\u8fb9\n\u8fd9\u9053\u9898\u6700\u96be\u641e\u7684\u5730\u65b9\u5c31\u662f\u5728\u5c31\u662f\u5728\u5efa\u8fb9\u4e0a\u3002\n\n\u5176\u5b9e\u60f3\u4e86\u4e00\u4e0b\u4e5f\u4e0d\u96be\u5f97\u51fa\uff1a\n\n\u4e00\u6761\u8fb9\u7684\u8fb9\u6743\u5c31\u662f\u4e24\u4e2a\u70b9\u7684**\u6b27\u51e0\u91cc\u5fb7\u8ddd\u79bb**\u51cf\u53bb\u4e24\u4e2a\u5706\u7684\u534a\u5f84\u3002\n\n\u8d77\u70b9\u548c\u7ec8\u70b9\u53ef\u4ee5\u770b\u6210\u4e24\u4e2a**\u534a\u5f84\u4e3a 0** \u7684\u5706\u3002\n\n\u70b9\u6309\u5f55\u5165\u7684\u6570\u636e\u6392\u5c31\u884c\u4e86\u3002\n\n\u6c42\u6b27\u51e0\u91cc\u5fb7\u8ddd\u79bb\u516c\u5f0f: $\\sqrt{{(x_2-x_1)^2}+{(y_2-y_1)^2}}$\u3002\n\n### \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nlong long head[10000001],cnt,n,o,v,w,m,xx,yy,xxx,yyy,x[10000001],y[10000001],z[10000001];//\u6570\u636e1e9\uff0c\u5f00longlong\u3002\ndouble dis[10000001];//\u9898\u76ee\u6709\u70b9\u8ff7\uff0c1000^2\u662f1000000\u6ca1\u9519\u554a\uff0c\u4f46\u6211\u5f0010000000\u624d\u80fd\u8fc7\u5c31\u79bb\u8c31\nstruct node{\n\tlong long nex,to;\n\tdouble val;\n}a[10000001];\nstruct dcz{\n\tlong long u;\n\tdouble d;\n\tbool operator<(const dcz& jntm)const {\n\t\treturn d>jntm.d;\n\t}\n};\nvoid add(long long x,long long y,double z){\n\ta[++cnt].val=z;\n\ta[cnt].to=y;\n\ta[cnt].nex=head[x];\n\thead[x]=cnt;\n}\nvoid dij(long long o){\n\tfor(int i=1;i<=m+2;i++){\n\t\tdis[i]=LONG_LONG_MAX;\n\t}\n\tdis[o]=0;\n\tpriority_queue<dcz> q;\n\tq.push((dcz){o,(double)0});\n\twhile(!q.empty()){\n\t\tdcz xx=q.top();\n\t\tq.pop();\n\t\tlong long u=xx.u;\n\t\tdouble d=xx.d;\n\t\tif(d!=dis[u])\n\t\t\tcontinue;\n\t\tfor(int i=head[u];i;i=a[i].nex){\n\t\t\tlong long v=a[i].to;\n\t\t\tdouble w=a[i].val;\n\t\t\tif(dis[u]+w<dis[v]){\n\t\t\t\tdis[v]=dis[u]+w;\n\t\t\t\tq.push((dcz){v,dis[v]});\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tcin>>xx>>yy>>xxx>>yyy;\n\tcin>>m;\n\tx[1]=xx,y[1]=yy,z[1]=0;\n\tx[m+2]=xxx,y[m+2]=yyy,z[m+2]=0;\n\tfor(int i=2;i<m+2;i++){\n\t\tcin>>x[i]>>y[i]>>z[i];\n\t}\n\tfor(int i=1;i<=m+2;i++){\n\t\tfor(int j=1;j<=m+2;j++){\n\t\t\tif(i==j)\n\t\t\t\tcontinue;\n\t\t\txx=x[j]-x[i];\n\t\t\tyy=y[j]-y[i];\n\t\t\tdouble xxx=sqrt(xx*xx+yy*yy);\n//\t\t\tcout<<xxx<<\" \"<<xx<<\" \"<<yy<<endl;\n\t\t\tdouble ddcz=xxx-(z[i]+z[j]);\n\t\t\tadd(i,j,max((double)0,ddcz)*1.0);\n\t\t}\n\t}\n\tdij(1);\n\tprintf(\"%.10lf\",dis[m+2]);\n\treturn 0;\n}\n```",
        "postTime": 1662967882,
        "uid": 652972,
        "name": "DCZISA___",
        "ccfLevel": 0,
        "title": "AT2154\u9898\u89e3"
    },
    {
        "content": "\u4e0d\u5fc5\u591a\u8bf4\uff0c\u8fd9\u9898\u7684\u6838\u5fc3\u601d\u8def\u662f\u4e07\u7269\u7686\u53ef\u56fe\u8bba\u3002\u4e3a\u4e86\u4fdd\u9669\u4e0d\u88ab\u5361SPFA\uff0c\u6211\u4f7f\u7528\u4e86dij\u6765\u6c42\u6700\u77ed\u8def\n\n\u90a3\u4e48\u5982\u4f55\u5c06\u8fd9\u4e9b\u5c4f\u969c\u5316\u4e3a\u4e00\u5f20\u56fe\uff1f\u663e\u800c\u6613\u89c1\uff0c\u4f60\u5728\u5c4f\u969c\u91cc\u9762\u8d70\u591a\u5c11\u8ddd\u79bb\uff0c\u7ed5\u591a\u5c11\u5f2f\u8def\u90fd\u4e0d\u5f71\u54cd\u7b54\u6848\uff0c\u800c\u5728\u5c4f\u969c\u5916\u5728\u4e24\u5c4f\u969c\u4e4b\u95f4\u6700\u77ed\u8def\u5f84\u4fbf\u662f\u76f4\u7ebf\u8fd0\u52a8\uff0c\u90a3\u4e48\u4fbf\u53ef\u5c06\u5c4f\u969c\u5706\u5fc3\u770b\u505a\u70b9\uff0c\u518d\u7528\u52fe\u80a1\u5b9a\u7406\u6c42\u51fa\u4e24\u5706\u5fc3\u4e4b\u95f4\u7684\u8ddd\u79bb\u540e\u51cf\u53bb\u4e24\u5706\u7684\u534a\u5f84\uff0c\u5176\u4e2d\u7684\u6700\u77ed\u8ddd\u79bb\u4fbf\u662f\u8fb9\u6743\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define LL long long\n#define U unsigned\n#define LD long double\nbool isp(LL x){\n\tif(x<2)return 0;\n\tfor(LL i=2;i<=sqrt(x);i++){\n\t\tif(x%i==0) return 0;\n\t}\n\treturn 1;\n}\nusing namespace std; \nLL M,Sx,Sy,S=1,Tx,Ty,T,m,h[6000000],n[6000000],dt[6000000],en;\ndouble w[6000000],dis[6000000],mapp[200000][3];\nstruct node{\n\tLL id;\n\tdouble dis;\n\tbool operator < (const node &B) const{return dis>B.dis;}\n};\nvoid dij(){\n\tpriority_queue<node>q;\n\tbool vis[6000000]={};\n\tmemset(dis,0x7f7f7f7f,sizeof dis);\n\tdis[S]=0;\n\tq.push((node){S,0});\n\twhile(q.size()){\n\t\tLL x=q.top().id;\n\t\tq.pop();\n\t\tif(vis[x])continue;\n\t\tvis[x]=1;\n\t\tfor(LL j=h[x];j;j=n[j]){\n\t//cout<<n[j]<<\"\\n\";\n\t\t\tLL y=dt[j];\n\t\t\tdouble ww=w[j];\n\t\t\tif(dis[y]<=dis[x]+ww)continue;\n\t\t\tdis[y]=dis[x]+ww;\n\t\t\tq.push((node){y,dis[y]});\n\t\t}\n\t}\n    return ;\n}\nvoid add(LL x,LL y,double z){\n\tdt[++en]=y,n[en]=h[x],w[en]=z,h[x]=en;\n\treturn ;\n}\nint main(){\n\tscanf(\"%lld %lld %lld %lld %lld\",&Sx,&Sy,&Tx,&Ty,&M);\n\tmapp[1][1]=Sx;\n\tmapp[1][2]=Sy;//\u5c06\u8d77\u70b9\u5f53\u505a0\u534a\u5f84\u7684\u5c4f\u969c\n\tmapp[1][0]=0;\n\tmapp[2][1]=Tx;\n\tmapp[2][2]=Ty;//\u5c06\u7ec8\u70b9\u5f53\u505a0\u534a\u5f84\u7684\u5c4f\u969c\n\tmapp[2][0]=0;\n\tfor(LL i=1;i<=M;i++){\n\t\tdouble u,v,w;\n\t\tscanf(\"%lf %lf %lf\",&u,&v,&w);\n\t\tmapp[i+2][1]=u;\n\t\tmapp[i+2][2]=v;\n\t\tmapp[i+2][0]=w;\n\t}\n\tfor(LL i=1;i<=M+2;i++){\n\t\tfor(LL j=1;j<=M+2;j++){\n\t\t\tif(i==j)continue;\n\t\t\t//printf(\"%lld            %lld\\n\",i,j);  \u8c03\u8bd5\n\t\t\tdouble rx,ry;\n\t\t\trx=mapp[j][1]-mapp[i][1];\n\t\t\try=mapp[j][2]-mapp[i][2];\n\t\t\tdouble rxy=sqrt(rx*rx+ry*ry);//\u52fe\u80a1\u5b9a\u7406\u6c42\u4e4b\u95f4\u8ddd\u79bb\n\t\t\t//cout<<rx*rx<<\"   \"<<ry*ry<<endl;\n\t\t\tdouble tr=rxy-(mapp[i][0])-(mapp[j][0]);//\u5706\u5fc3\u8ddd\u79bb\u51cf\u53bb\u4e24\u534a\u5f84\n\t\t\ttr=max(tr,(double)(0)); \n\t\t\tadd(i,j,tr);//\u8fd9\u91cc\u6bcf\u4e2a\u70b9\u5efa\u4e24\u904d\u6545\u5efa\u6709\u5411\u8fb9\n\t\t\t//add(j,i,tr);\n\t\t}\n\t}\n\tdij();//dij\u4e00\u4e0b\n\tprintf(\"%.10lf\",dis[2]);\n\treturn 0;\n}\n```\n",
        "postTime": 1618018648,
        "uid": 179561,
        "name": "_Seguirem_",
        "ccfLevel": 7,
        "title": "AT2154 TJ"
    },
    {
        "content": "\u5bf9\u4e8e\u8fd9\u9053\u6c34\u9898\uff0c\u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u6ca1\u6709\u9898\u89e3\uff08\u53ef\u80fd\u662f\u56e0\u4e3a\u6211\u592a\u849f\u4e86\u5427\uff09\uff0c\u6211\u5c31\u6765\u53d1\u4e00\u7bc7\u5427\u3002\n\n\u798f\u5229\u9898\u610f\uff1a\u7ed9\u51fa\u4e24\u70b9\uff0c\u627e\u51fa\u4ece\u4e00\u70b9\u5230\u53e6\u4e00\u70b9\u7684\u7ecf\u8fc7\u7684\u975e\u5706\u5185\u533a\u57df\u7684\u6700\u5c0f\u503c\u3002\n\n### \u89e3\u9898\u601d\u8def\uff1a\u5c06\u6240\u6709\u5706\u53d8\u6210\u70b9\uff0c\u70b9\u4e0e\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u7b49\u4e8e\u4ed6\u4eec\u5706\u5fc3\u4e4b\u95f4\u7684\u8ddd\u79bb\u51cf\u53bb\u4ed6\u4eec\u7684\u534a\u5f84\u548c\uff0c\u7136\u540e\u518d\u7528SPFA\u6c42\u6700\u77ed\u8def\u3002\n\u63a5\u4e0b\u6765\u662f\u4f60\u4eec\u6700\u559c\u6b22\u770b\u7684\u4e1c\u897f\u5427\uff0c\u6211\u4e5f\u5c31\u4e0d\u518d\u5570\u55e6\u4e86\u3002\n```\n#include <bits/stdc++.h>\nusing namespace std;\n \nconst int maxn = 1e3 + 20;\nint vis[maxn],n;\ndouble x[maxn],y[maxn],r[maxn],dist[maxn],mp[maxn][maxn];\n \nvoid SPFA(int s)\n{\n    queue<int>q;\n    for(int i = 1;i <= n;i++) dist[i] = 1e10;\n    memset(vis,0,sizeof(vis));\n    while(!q.empty()) q.pop();\n    dist[s] = 0;\n    vis[s] = 1;\n    q.push(s);\n \n    while(!q.empty())\n    {\n        int v = q.front();\n        q.pop();\n        vis[v] = 0;\n        for(int i = 1;i <= n;i++)\n        {\n            if(dist[i] > dist[v] + mp[v][i])\n            {\n                dist[i] = dist[v] + mp[v][i];\n                if(!vis[i])\n                {\n                    vis[i] = 1;\n                    q.push(i);\n                }\n            }\n        }\n    }\n}\n \nint main()\n{\n    while(scanf(\"%lf%lf%lf%lf\",&x[1],&y[1],&x[2],&y[2]) != EOF)\n    {\n        scanf(\"%d\",&n);\n        n += 2;\n        r[1] = r[2] = 0;\n        mp[1][2] = mp[2][1] = sqrt((x[1] - x[2]) * (x[1] - x[2]) + (y[1] - y[2]) * (y[1] - y[2]));\n        for(int i = 3;i <= n;i++)\n        {\n            scanf(\"%lf%lf%lf\",&x[i],&y[i],&r[i]);\n        }\n        for(int i = 1;i <= n;i++)\n        {\n            for(int j = 1;j <= n;j++)\n            {\n                mp[i][j] = sqrt((x[i] - x[j]) * (x[i] - x[j]) + (y[i] - y[j]) * (y[i] - y[j]));\n                mp[i][j] -= r[i] + r[j];\n                if(mp[i][j] < 0)\n                {\n                    mp[i][j] = 0;\n                }\n            }\n        }\n        SPFA(1);\n        printf(\"%.10f\\n\",dist[2]);\n    }\n    return 0;\n}\n\n```",
        "postTime": 1538405122,
        "uid": 92553,
        "name": "\u4e9a\u7d22s",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT2154 \u3010Cosmic Rays\u3011"
    }
]