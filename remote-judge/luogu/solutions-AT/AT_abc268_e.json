[
    {
        "content": "#  [[ABC268E] Chinese Restaurant (Three-Star Version)](https://www.luogu.com.cn/problem/AT_abc268_e) Solution\n\n[TOC]\n\n## [\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u6233\u6b64\u8fdb\u5165](http://blog.tsawke.com?t=ABC268E)\n\n## \u9898\u9762\n\n$ n $ \u4e2a\u4eba\u8fdb\u884c\u5706\u6392\u5217\uff0c\u5373\u56f4\u5750\u5728\u5706\u684c\u5468\u56f4\uff0c\u4f4d\u7f6e\u7f16\u53f7\u4f9d\u6b21\u4e3a $ [0, n - 1] $\uff0c\u7ed9\u5b9a\u5e8f\u5217 $ P_n $ \u8868\u793a\u7b2c $ i $ \u4e2a\u4eba\u559c\u6b22\u7684\u83dc\u54c1\u5728 $ P_i $ \u5904\uff0c$ P_i \\in [0, n - 1] $ \u4e14\u5404\u4e0d\u76f8\u540c\u3002\u5b9a\u4e49\u6bcf\u4e2a\u4eba\u7684\u6cae\u4e27\u503c\u4e3a\u5176\u4f4d\u7f6e\u4e0e $ P_i $ \u7684\u8ddd\u79bb\u3002\u4f60\u53ef\u4ee5\u4efb\u610f\u65cb\u8f6c\u5706\u684c\uff0c\u4ee5\u6700\u5c0f\u5316\u6240\u6709\u4eba\u7684\u6cae\u4e27\u503c\u4e4b\u548c\uff0c\u6c42\u6700\u5c0f\u503c\u3002\n\n## Solution\n\n\u53ef\u4ee5\u8bf4\u662f\u4e00\u9053\u601d\u8def\u8f83\u4e3a\u7b80\u5355\u4f46**\u7ec6\u8282\u5de8\u591a**\uff0c**\u975e\u5e38\u96be\u8c03**\u7684\u9898\uff0c\u5230\u5904\u5404\u79cd\u52a0\u52a0\u51cf\u51cf\u4e0e\u5206\u7c7b\u8ba8\u8bba\uff0c\u8fd9\u4e48\u4e00\u9053\u6c34\u9898\u6700\u540e\u6211\u5199\u4e86\u4e00\u4e2a\u534a\u70b9\u3002\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\uff0c\u6211\u4eec\u8ba4\u4e3a\u521d\u59cb\u72b6\u6001\u4e3a $ i $ \u5728 $ i - 1 $\uff0c\u7136\u540e\u8ba4\u4e3a\u521d\u59cb\u72b6\u6001\u4e4b\u540e\u8f6c\u7684\u683c\u6570\u4e3a $ x $ \u8f74\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u7279\u5b9a\u7684\u4eba\u7684\u6cae\u4e27\u503c\u4e3a $ y $ \u8f74\uff0c\u4e0d\u96be\u60f3\u5230\u56fe\u50cf\u5e94\u4e3a\u81f3\u591a\u4e09\u6bb5\u659c\u7387\u4e3a $ 1 $ \u6216 $ -1 $ \u7684\u7ebf\u6bb5\u7ec4\u6210\uff0c\u540c\u65f6\u82e5\u70b9\u6570\u4e3a\u5947\u6570\uff0c\u90a3\u4e48\u5728\u8ddd\u79bb $ P_i $ $ \\lfloor \\dfrac{n}{2} \\rfloor $ \u548c $ \\lceil \\dfrac{n}{2} \\rceil $ \u7684\u5bf9\u5e94\u4f4d\u7f6e\u7684\u503c\u662f\u76f8\u540c\u7684\uff0c\u4e5f\u5c31\u662f\u6b64\u65f6\u659c\u7387\u5e94\u4e3a $ 0 $\uff0c\u4f46\u6709\u4e14\u4ec5\u6709\u8fd9\u4e48\u4e00\u6bb5\u3002\u5bf9\u4e8e\u7b54\u6848\u6211\u4eec\u53ea\u9700\u8981\u5c06\u6bcf\u4e2a\u4eba\u7684\u60c5\u51b5\u90fd\u5408\u5e76\u8d77\u6765\u6c42\u4e00\u4e0b\u6700\u5c0f\u503c\u5373\u53ef\uff0c\u8003\u8651\u5982\u4f55\u7ef4\u62a4\u3002\n\n\u4e8e\u662f\u6211\u4eec\u76f4\u63a5\u8003\u8651 $ y $ \u8f74\u7684\u503c\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u4eba\u7684\u53d8\u5316\u91cf\u663e\u7136\u662f\u7c7b\u4f3c $ -1, -1, -1, 1, 1, 1, 0, 1, \\cdots $ \u7b49\uff0c\u8fd9\u4e2a\u4e1c\u897f\u7b49\u4e8e\u662f\u505a\u4e86\u4e2a\u5dee\u5206\u3002\u4e0d\u96be\u53d1\u73b0\u8fd9\u4e1c\u897f\u5982\u679c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u4fee\u6539\uff0c\u90a3\u4e48\u6700\u7ec8\u590d\u6742\u5ea6\u5e94\u4e3a $ O(n \\log n) $ \u7684\uff0c\u4e0d\u8fc7\u6211\u4e0d\u60f3\u5199\u7ebf\u6bb5\u6811\uff0c\u4e8e\u662f\u8003\u8651\u53e6\u4e00\u79cd\u5199\u6cd5\uff0c\u4e0d\u96be\u53d1\u73b0\u8fd9\u4e1c\u897f\u662f\u5f88\u591a\u4e2a\u533a\u95f4\u4fee\u6539\uff0c\u6240\u4ee5\u53ef\u4ee5\u5bf9\u5dee\u5206\u6570\u7ec4\u518d\u6b21\u505a\u5dee\u5206\uff0c\u5373\u4e8c\u9636\u5dee\u5206\uff0c\u6b64\u65f6\u6211\u4eec\u53ea\u9700\u8981\u5728\u8f6c\u6298\u70b9\u5904\u505a\u4e00\u4e0b\u4fee\u6539\u5373\u53ef\uff0c\u8fd9\u6837\u6700\u540e\u505a\u4e24\u6b21\u524d\u7f00\u548c\u6c42\u4e2a\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\u4e0d\u96be\u53d1\u73b0\u8fd9\u4e1c\u897f\u601d\u8def\u663e\u7136\u770b\u8d77\u6765\u5f88\u7b80\u5355\uff0c\u4f46\u662f\u5f53\u5b9e\u73b0\u7684\u65f6\u5019\u5c31\u4f1a\u53d1\u73b0\u9634\u95f4\u7684\u5730\u65b9\u5728\u54ea\u4e86\u3002\u9996\u5148\u6211\u4eec\u53d1\u73b0\u6709\u56db\u79cd\u60c5\u51b5\uff0c\u5373 $ i $ \u4e0e $ p_i $ \u7684\u504f\u5e8f\u5173\u7cfb\uff0c\u548c $ (i - p_i) \\bmod{n} $ \u4e0e $ (p_i - i) \\bmod{n} $ \u7684\u504f\u5e8f\u5173\u7cfb\u3002\u4f46\u662f\u7ecf\u8fc7\u8ba8\u8bba\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u524d\u8005\u7684\u504f\u5e8f\u5173\u7cfb\u662f\u65e0\u610f\u4e49\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u6c42\u8ddd\u79bb\u65f6\u53ef\u4ee5\u76f4\u63a5\u8f6c\u6b63\uff0c\u5373 $ dis = (i - p_i + n) \\bmod{n} $\uff0c\u6240\u4ee5\u6b64\u65f6\u4f18\u5316\u60c5\u51b5\u4e3a\u4e24\u79cd\u3002\n\n\u5177\u4f53\u60c5\u51b5\u53ef\u4ee5\u81ea\u5df1\u753b\u4e00\u4e0b\u7136\u540e\u770b\u770b\u4ee3\u7801\uff0c\u8fd8\u662f\u6bd4\u8f83\u663e\u7136\u7684\uff0c\u53ea\u662f\u7ec6\u8282\u592a\u591a\u4e86\u3002\n\n## Code\n\n```cpp\n#define _USE_MATH_DEFINES\n#include <bits/stdc++.h>\n\n#define PI M_PI\n#define E M_E\n#define npt nullptr\n#define SON i->to\n#define OPNEW void* operator new(size_t)\n#define ROPNEW void* Edge::operator new(size_t){static Edge* P = ed; return P++;}\n\nusing namespace std;\n\nmt19937 rnd(random_device{}());\nint rndd(int l, int r){return rnd() % (r - l + 1) + l;}\nbool rnddd(int x){return rndd(1, 100) <= x;}\n\ntypedef unsigned int uint;\ntypedef unsigned long long unll;\ntypedef long long ll;\ntypedef long double ld;\n\ntemplate < typename T = int >\ninline T read(void);\n\nint N;\nint P[210000];\nll d[210000];\nll ans(LONG_LONG_MAX);\n\nint main(){\n    N = read();\n    for(int i = 0; i <= N - 1; ++i)P[i] = read();\n    for(int i = 0; i <= N - 1; ++i)d[0] += min((i - P[i] + N) % N, (P[i] - i + N) % N);\n    d[1] = -d[0];\n    for(int i = 0; i <= N - 1; ++i)\n        if((P[i] - i + N) % N <= (i - P[i] + N) % N){\n            int dis = (P[i] - i + N) % N;\n            d[1]--, d[dis + 1]++;\n            d[dis + 1]++, d[dis + (N >> 1) + 1]--;\n            d[dis + (N >> 1) + 1 + (N & 1 ? 1 : 0)]--;\n        }else{\n            int dis = (i - P[i] + N) % N;\n            d[1]++, d[(N >> 1) - dis + 1]--;\n            d[(N >> 1) - dis + 1 + (N & 1 ? 1 : 0)]--;\n            d[N - dis + 1]++, d[N - dis + 1]++;\n        }\n    for(int i = 1; i <= N - 1; ++i)d[i] = d[i - 1] + d[i];\n    for(int i = 1; i <= N - 1; ++i)d[i] = d[i - 1] + d[i];\n    for(int i = 0; i <= N - 1; ++i)ans = min(ans, d[i]);\n    printf(\"%lld\\n\", ans);\n    fprintf(stderr, \"Time: %.6lf\\n\", (double)clock() / CLOCKS_PER_SEC);\n    return 0;\n}\n\ntemplate < typename T >\ninline T read(void){\n    T ret(0);\n    int flag(1);\n    char c = getchar();\n    while(c != '-' && !isdigit(c))c = getchar();\n    if(c == '-')flag = -1, c = getchar();\n    while(isdigit(c)){\n        ret *= 10;\n        ret += int(c - '0');\n        c = getchar();\n    }\n    ret *= flag;\n    return ret;\n}\n```\n\n## UPD\n\nupdate-2023_01_18 \u521d\u7a3f",
        "postTime": 1674036182,
        "uid": 362938,
        "name": "Tsawke",
        "ccfLevel": 6,
        "title": "[ABC268E] Chinese Restaurant (Three-Star Version) \u9898\u89e3"
    }
]