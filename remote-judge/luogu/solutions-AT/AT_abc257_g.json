[
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/AT_abc257_g)\r\n\r\n## \u601d\u8def\r\n\r\n\u600e\u4e48\u80fd\u6ca1\u6709\u7ebf\u6bb5\u6811\u9898\u89e3\u3002\r\n\r\n\u8bbe $f_i$ \u8868\u793a $t_{1 \\cdots i}$ \u5212\u5206\u6210\u7684\u6700\u5c0f\u524d\u7f00\u6570\u3002\r\n\r\n\u7136\u540e\u8003\u8651 $f_i$ \u8f6c\u79fb\u5230 $f_j\\ (j>i)$\u3002\r\n\r\n\u89c2\u5bdf\u5230\u8fd9\u662f\u4e00\u4e2a\u533a\u95f4\uff0c\u7528\u6807\u8bb0\u6c38\u4e45\u5316\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\uff0c\u5bfb\u627e\u533a\u95f4\u53ef\u4ee5\u4f7f\u7528\u54c8\u5e0c\u3002\r\n\r\n\u7136\u540e\u6ca1\u4e86\u3002\r\n\r\n## \u4ee3\u7801\r\n\r\n```cpp\r\n//A tree without skin will surely die.\r\n//A man without face will be alive\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\n#define mid ((l+r)>>1)\r\n#define sqr(x) ((x)*(x))\r\n#define all(x) (x).begin(),(x).end()\r\n#define Tim ((double)clock()/CLOCKS_PER_SEC)\r\n#define lowbit(x) (x&-x)\r\nint const N=5e5+10;\r\nint f[N];\r\nunsigned int base[N],haah[N],hsah[N];\r\ninline int query(int l,int r){\r\n    return haah[r]-haah[l-1]*base[r-l+1];\r\n}\r\nstruct Segment_Tree{\r\n    #define ls (x<<1)\r\n    #define rs (x<<1|1)\r\n    int c[N<<2];\r\n    inline void update(int x,int l,int r,int ll,int rr,int v){\r\n        if (ll<=l && r<=rr){\r\n            c[x]=min(c[x],v);\r\n            return;\r\n        }\r\n        if (ll<=mid) update(ls,l,mid,ll,rr,v);\r\n        if (mid<rr) update(rs,mid+1,r,ll,rr,v);\r\n    }\r\n    inline int query(int x,int l,int r,int p){\r\n        if (l==r) return c[x];\r\n        if (p<=mid) return min(c[x],query(ls,l,mid,p));\r\n        else return min(c[x],query(rs,mid+1,r,p));\r\n    }\r\n}T;\r\nsigned main(){\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0),cout.tie(0);\r\n    memset(T.c,0x3f,sizeof(T.c));\r\n    string s,t;cin>>t>>s;\r\n    int n=s.length(),m=t.length();\r\n    s=\" \"+s,t=\" \"+t;\r\n    base[0]=1;\r\n    for (int i=1;i<=n;++i) base[i]=base[i-1]*233;\r\n    for (int i=1;i<=n;++i) haah[i]=haah[i-1]*233+(s[i]-'a'+1);\r\n    for (int i=1;i<=m;++i) hsah[i]=hsah[i-1]*233+(t[i]-'a'+1);\r\n    memset(f,0x3f,sizeof(f));\r\n    f[0]=0;\r\n    for (int i=0;i<=n;++i){\r\n        if (i) f[i]=T.query(1,1,n,i);\r\n        int l=i+1,ans=-1,r=n;\r\n        while (l<=r)\r\n            if (query(i+1,mid)==hsah[mid-i]) l=(ans=mid)+1;\r\n            else r=mid-1;\r\n        if (ans==-1) continue;\r\n        T.update(1,1,n,i+1,ans,f[i]+1);\r\n    }\r\n    if (f[n]>(1e9)) f[n]=-1;\r\n    cout<<f[n]<<'\\n';\r\n    return 0;\r\n}\r\n```",
        "postTime": 1679038651,
        "uid": 253608,
        "name": "Tx_Lcy",
        "ccfLevel": 7,
        "title": "[ABC257G] Prefix Concatenation"
    },
    {
        "content": "# [[ABC257G] Prefix Concatenation](https://www.luogu.com.cn/problem/AT_abc257_g) Solution\n\n[TOC]\n\n## [\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u6233\u6b64\u8fdb\u5165](http://blog.tsawke.com?t=ABC257G)\n\n## \u9898\u9762\n\n\u7ed9\u5b9a\u4ec5\u5b58\u5728\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u7684\u5b57\u7b26\u4e32 $ S, T $\u3002\u4f60\u9700\u8981\u5c06 $ T $ \u5206\u5272\u6210 $ k $ \u4e2a $ S $ \u7684\u524d\u7f00\uff08\u6216\u7740\u8bf4\u7528 $ S $ \u7684\u82e5\u5e72\u4e2a\u524d\u7f00\u7ec4\u6210 $ T $\uff09\uff0c\u6700\u5c0f\u5316 $ k $\uff0c\u8f93\u51fa\u6700\u5c0f\u503c\u3002\u82e5 $ k $ \u4e0d\u5b58\u5728\u8f93\u51fa `-1`\u3002\n\n## Solution\n\n\u9996\u5148 $ O(n^2) $ \u7684 DP \u663e\u7136\uff0c\u6211\u4eec\u8bb0 $ S(i, j), T(i, j) $ \u4e3a\u5bf9\u5e94\u5b57\u7b26\u4e32 $ [i, j] $ \u7684\u5b50\u4e32\uff0c\u4ee4 $ dp(i) $ \u8868\u793a\u8003\u8651 $ T(1, i) $ \u7684\u6700\u5c0f $ k $\u3002\u6613\u5f97\u8f6c\u79fb\uff1a\n$$\ndp(i) = \\min_{j \\lt i \\land S(1, i - j) = T(j + 1, i)}dp(j) + 1\n$$\n\u4e0d\u96be\u53d1\u73b0\u8fd9\u4e2a $ \\texttt{1D1D} $ \u7684 DP \u662f $ O(n^2) $ \u7684\u65e0\u6cd5\u901a\u8fc7\uff0c\u8003\u8651\u4f18\u5316\u3002\n\n\u9996\u5148\u6709\u4e00\u4e2a\u601d\u8def\uff0c\u5df2\u77e5 $ dp(i) $ \u5355\u8c03\u4e0d\u964d\uff0c\u8bc1\u660e\u663e\u7136\uff0c\u8003\u8651\u82e5 $ dp(i) \\gt dp(i + 1) $\uff0c\u90a3\u4e48\u5728 $ dp(i + 1) $ \u7684\u65b9\u6848\u4e2d\u5c06\u6700\u540e\u4e00\u90e8\u5206\u53bb\u6389\u7b2c $ i + 1 $ \u4e2a\u4e00\u5b9a\u53ef\u4ee5\u53d8\u4e3a $ dp(i) $ \u4e14 $ k $ \u4e0d\u52a3\uff0c\u5f97\u8bc1\u3002\n\n\u7136\u540e\u6839\u636e\u8fd9\u4e2a\u601d\u8def\u6211\u4eec\u6bcf\u6b21\u8f6c\u79fb\u53ea\u9700\u8981\u627e\u5230\u6700\u5c0f\u7684\u5408\u6cd5 $ j $ \u8f6c\u79fb\u5373\u53ef\uff0c\u53ef\u4ee5\u901a\u8fc7 KMP \u4e2d\u7684 `next` \u6570\u7ec4\u7ef4\u62a4\u3002\n\n\u5177\u4f53\u5730\uff0c\u4e0d\u96be\u53d1\u73b0\u6211\u4eec\u8fd9\u4e2a\u4e1c\u897f\u6c42\u7684\u53ef\u4ee5\u8f6c\u5316\u4e3a\u6c42 border\uff0c\u5177\u4f53\u5730\uff0c\u6211\u4eec\u5c06 $ S $ \u540e\u8ffd\u52a0\u4e00\u4e2a\u5360\u4f4d\u7b26\uff0c\u7136\u540e\u518d\u8fde\u63a5\u4e0a $ T $\uff0c\u8bb0 `P = S + '#' + T`\uff0c\u8fd9\u6837\u6211\u4eec\u5bf9 $ P $ \u8dd1\u4e00\u904d KMP \u7684\u5efa\u7acb next \u6570\u7ec4\u8fc7\u7a0b\uff0c\u4e0d\u96be\u53d1\u73b0\u5bf9\u4e8e\u8f6c\u79fb $ i $ \u65f6\u9700\u8981\u7684 $ j $\uff0c\u5373\u4e3a $ i - nxt(len_S + 1 + i) $\uff0c\u8fd9\u91cc\u7684 $ +1 $ \u5373\u4e3a\u6211\u4eec\u6dfb\u52a0\u7684\u5360\u4f4d\u7b26 `#`\u3002\n\n\u6700\u7ec8 DP \u4f18\u5316\u4e3a $ \\texttt{1D0D} $\uff0c\u590d\u6742\u5ea6 $ O(n) $\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\n\n\u540c\u65f6\u8fd8\u6709\u4e00\u79cd\u65b9\u6cd5\uff0c\u53d1\u73b0\u4fee\u6539\u72b6\u6001\u4e3a\u540e\u7f00\u53ef\u4ee5\u652f\u6301\u9006\u5e8f\u8f6c\u79fb\uff0c\u4e8e\u662f\u8f6c\u79fb\u53d8\u4e3a\uff1a\n$$\ndp(i) = \\min_{j \\gt i \\land S(1, j - i) = T(i, j - 1)}dp(j) + 1\n$$\n\u6b64\u65f6\u53d1\u73b0\u6bcf\u6b21\u53ef\u4ee5\u8f6c\u79fb\u7684 $ j $ \u662f\u8fde\u7eed\u7684\uff0c\u5bf9\u5e94 $ S $ \u548c $ T(i, len_T) $ \u7684 LCP\uff0c\u4e8e\u662f\u53ef\u4ee5\u901a\u8fc7\u54c8\u5e0c + \u4e8c\u5206\u5904\u7406\u6bcf\u6b21\u8f6c\u79fb\u7684 LCP \u957f\u5ea6\uff0c\u7136\u540e\u7ebf\u6bb5\u6811\u4f18\u5316 DP \u5373\u53ef\uff0c\u6700\u7ec8\u590d\u6742\u5ea6 $ O(n \\log n) $\uff0c\u52a3\u4e8e\u6b63\u5411\u8f6c\u79fb\u4f46\u4e5f\u53ef\u4ee5\u901a\u8fc7\uff0c\u4e14\u601d\u8def\u66f4\u76f4\u89c2\uff0c\u4ec5\u4ee3\u7801\u5b9e\u73b0\u7565\u957f\u3002\n\n## Code\n\n```cpp\n#define _USE_MATH_DEFINES\n#include <bits/stdc++.h>\n\n#define PI M_PI\n#define E M_E\n#define npt nullptr\n#define SON i->to\n#define OPNEW void* operator new(size_t)\n#define ROPNEW(arr) void* Edge::operator new(size_t){static Edge* P = arr; return P++;}\n\nusing namespace std;\n\nmt19937 rnd(random_device{}());\nint rndd(int l, int r){return rnd() % (r - l + 1) + l;}\nbool rnddd(int x){return rndd(1, 100) <= x;}\n\ntypedef unsigned int uint;\ntypedef unsigned long long unll;\ntypedef long long ll;\ntypedef long double ld;\n\ntemplate < typename T = int >\ninline T read(void);\n\nstring S, T;\nchar s[1100000];\nint dp[1100000];\nint nxt[1100000];\n\nint main(){\n    memset(dp, 0x3f, sizeof dp);\n    cin >> S >> T;\n    sprintf(s + 1, \"%s#%s\", S.c_str(), T.c_str());\n    int lenS = S.length(), lenT = T.length();\n    dp[lenS + 1] = 0;\n    int cur(0);\n    for(int i = 2; i <= lenS + lenT + 1; ++i){\n        while(cur && s[cur + 1] != s[i])cur = nxt[cur];\n        if(s[cur + 1] == s[i])++cur;\n        if(i > lenS + 1)dp[i] = dp[i - cur] + 1;\n        nxt[i] = cur;\n    }printf(\"%d\\n\", dp[lenS + lenT + 1] < 0x3f3f3f3f ? dp[lenS + lenT + 1] : -1);\n    fprintf(stderr, \"Time: %.6lf\\n\", (double)clock() / CLOCKS_PER_SEC);\n    return 0;\n}\n\ntemplate < typename T >\ninline T read(void){\n    T ret(0);\n    int flag(1);\n    char c = getchar();\n    while(c != '-' && !isdigit(c))c = getchar();\n    if(c == '-')flag = -1, c = getchar();\n    while(isdigit(c)){\n        ret *= 10;\n        ret += int(c - '0');\n        c = getchar();\n    }\n    ret *= flag;\n    return ret;\n}\n```\n\n## UPD\n\nupdate-2022_12_09 \u521d\u7a3f",
        "postTime": 1670587528,
        "uid": 362938,
        "name": "Tsawke",
        "ccfLevel": 6,
        "title": "[ABC257G] Prefix Concatenation \u9898\u89e3"
    }
]