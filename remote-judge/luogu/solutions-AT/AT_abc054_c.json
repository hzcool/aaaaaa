[
    {
        "content": "\u9898\u610f\u5927\u6982\u5c31\u662f\u4ece $1$ \u5f00\u59cb\u8d70\uff0c\u7136\u540e\u8981\u6c42\u904d\u5386\u5230\u6240\u6709\u7684\u70b9\uff0c\u6c42\u8def\u5f84\u6709\u591a\u5c11\u6761\u3002\n\n\u8fd9\u4e2a \u2026\u2026 $n \\le 8$ ?\u90a3\u5c82\u4e0d\u662f\u53ef\u4ee5\u4e71\u641e\u4e86\uff1f\n\n\u7528\u4e00\u4e2a\u77e9\u9635\u5b58\u56fe\uff0c\u7136\u540e\u7528\u4e00\u4e2a int \u6765\u4ee3\u66ff\u4e00\u4e2a\u5e03\u5c14\u6570\u7ec4\u3002\n\n\u66b4\u529b\u8fdb\u884c\u4e00\u4e2a DFS \u626b\u5c31\u53ef\u4ee5\u4e86\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\nusing namespace std;\nconst int INF=15;\nint Map[INF][INF];\nint n,m;\nint DFS(int x,int y) {\n        // cout<<x<<\" \"<<y<<endl;\n        if (y==(1<<n)-1) return 1;\n        int sum=0;\n        for (int i=1; i<=n; i++) {\n                if (!Map[x][i] || (y>>(i-1))&1) continue;\n                sum+=DFS(i,y|(1<<(i-1)));\n        }\n        return sum;\n}\nsigned main()\n{\n        scanf(\"%d %d\",&n,&m);\n        for (int i=1; i<=m; i++) {\n                int x=0,y=0; scanf(\"%d %d\",&x,&y);\n                Map[x][y]=Map[y][x]=true;\n        }\n        cout<<DFS(1,1)<<\"\\n\";//\u6ce8\u610f\u4e00\u5f00\u59cb 1 \u5df2\u7ecf\u904d\u5386\u8fc7\u4e86\u3002\n        return 0;\n}\n\n```\n",
        "postTime": 1609641660,
        "uid": 128754,
        "name": "\u65b9123456",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT2329 \u3010[ABC054C] One-stroke Path\u3011"
    },
    {
        "content": "## \u4e00\u3001\u9898\u610f\n\n\u6709 $n$ \u4e2a\u70b9\u548c $m$ \u6761\u8fb9\uff0c\u95ee\u4ece\u70b9 $1$ \u51fa\u53d1 **\u6070\u597d\u7ecf\u8fc7\u6240\u6709\u70b9\u5404\u4e00\u6b21** \u7684\u8def\u5f84\u6709\u591a\u5c11\u6761\u3002\n\n## \u4e8c\u3001\u601d\u8def\n\n\u7531\u4e8e $n \\leq 8$\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u7528 **\u94fe\u5f0f\u524d\u5411\u661f** \u5b58\u8fb9\uff0c\u518d\u7528 DFS \u641c\u7d22\u4e00\u904d\uff0c\u5c06\u7ecf\u8fc7\u7684\u70b9\u6253\u4e0a\u6807\u8bb0\uff0c\u904d\u5386\u5176\u76f8\u90bb\u8282\u70b9\uff0c\u518d\u53d6\u6d88\u6807\u8bb0\u3002\u5728 DFS \u65f6\u4f20\u4e00\u4e2a\u53c2\u6570 $cnt$\uff0c\u82e5 $cnt=n$ \u5219\u7b54\u6848 $ans++$\u3002\n\n## \u4e09\u3001\u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n\ninline ll read() {\n    ll sum = 0, ff = 1;\n    char ch = getchar();\n    while(ch < '0' || ch > '9') {\n        if(ch == '-') {\n            ff = -1;\n        }\n        ch = getchar();\n    }\n    while(ch >= '0' && ch <= '9') {\n    \tsum = sum * 10 + ch - 48;\n        ch = getchar();\n    }\n    return sum * ff;\n}\n\nvoid write(ll x) {\n\t if(x < 0) {\n\t\tputchar('-');\n\t\tx = -x;\n\t }\n\t if(x > 9)\n\t\twrite(x / 10);\n\t putchar(x % 10 | 48);\n}\n\nconst int N = 107;\nint n, m, ans;\nbool vis[N];\nstruct edge {\n\tint to, next;\n}e[N];\nint cnt, he[N];\n\nvoid add(int u, int v) {\n\te[++cnt].next = he[u];\n\te[cnt].to = v;\n\the[u] = cnt;\n}\n\nvoid dfs(int u, int tot) {\n\tif(tot == n) {\n\t\tans++;\n\t\treturn;\n\t}\n\tvis[u] = true;\n\tfor(int i = he[u]; i; i = e[i].next) {\n\t\tint v = e[i].to;\n\t\tif(vis[v])\n\t\t\tcontinue;\n\t\tdfs(v, tot + 1);\n\t}\n\tvis[u] = false;\n}\n\nint main() {\n//  freopen(\".in\",\"r\",stdin);\n//  freopen(\".out\",\"w\",stdout);\n\tn = read(), m = read();\n\tfor(int i = 1; i <= m; i++) {\n\t\tint u = read(), v = read();\n\t\tadd(u, v);\n\t\tadd(v, u);\n\t} \n\t\n\tdfs(1, 1);\n\n\twrite(ans);\n\tputs(\"\");\t\n    return 0;\n}\n\n\n```\n",
        "postTime": 1617018569,
        "uid": 223989,
        "name": "\u9f99\u6f5c\u6708\u5341\u4e94",
        "ccfLevel": 0,
        "title": "AT2329 [ABC054C] One-stroke Path"
    }
]