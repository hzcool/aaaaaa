[
    {
        "content": "\u597d\u5389\u5bb3\u7684\u9898\u3002\u9707\u64bc\u5230\u4e86\u3002\n\n\u5927\u90e8\u5206\u53c2\u8003 [Atcoder \u8ba1\u6570\u4e71\u505a - \u82f9\u679c\u84dd17](https://www.cnblogs.com/Appleblue17/p/15841306.html#arc128f-game-against-robot-3800)\u3002\n\n\u6211\u7684\u89c2\u5bdf\u80fd\u529b\u8fd8\u662f\u592a\u5dee\uff0c\u4e00\u70b9\u6761\u4ef6\u90fd\u89c2\u5bdf\u4e0d\u51fa\u6765\uff0c\u8fde $p$ \u56fa\u5b9a\u600e\u4e48\u505a\u90fd\u4e0d\u4f1a\u3002\n\n\u4e0b\u9762\u4ee4 $n \\gets \\frac{n}{2}$\u3002\n\n\u9996\u5148\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a\u56fa\u5b9a\u7684 $p$ \u8981\u600e\u4e48\u505a\u3002\u8003\u8651\u5bf9\u65b9\u53ef\u4ee5\u9009\u7684\u96c6\u5408\u7684\u5145\u8981\u6761\u4ef6\uff0c\u53d1\u73b0\u53ea\u9700\u8981\u9009\u7684\u7b2c $i$ \u4e2a\u6570\u5728\u524d $2i$ \u4e2a\u6570\u5185\u5373\u53ef\u3002\u90a3\u4e48\u76f8\u5bf9\u5e94\u7684\uff0c\u628a\u6574\u4e2a\u8fc7\u7a0b\u53cd\u8fc7\u6765\uff0c\u81ea\u5df1\u53ef\u4ee5\u9009\u7684\u7b2c $i$ \u4e2a\u6570\u5c31\u5728\u540e $2i$ \u4e2a\u6570\u5185\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u4ece\u540e\u5f80\u524d\uff0c\u6bcf\u6b21\u5f80\u4f18\u5148\u961f\u5217\u91cc\u52a0\u5165\u4e24\u4e2a\u6570\uff0c\u6bcf\u6b21\u53d6\u6700\u5927\u503c\uff0c\u5c31\u662f\u7b54\u6848\u3002\n\n\u8fd9\u4e2a\u505a\u6cd5\u544a\u8bc9\u6211\u4eec\uff0c\u6700\u540e\u7b54\u6848\u5b9e\u9645\u4e0a\u53ea\u8ddf\u76f8\u5bf9\u5927\u5c0f\u5173\u7cfb\u6709\u5173\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u7edf\u8ba1\u6bcf\u4e2a\u6570\u5728\u591a\u5c11\u79cd\u65b9\u6848\u4e2d\u88ab\u9009\u62e9\u3002\u8bbe\u7b2c $i$ \u5927\u7684\u6570\u88ab\u7edf\u8ba1\u7684\u65b9\u6848\u6570\u4e3a $f_i$\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f $\\sum_{i=1}^{2n} f_i a_i$\u3002\n\n\u7b2c $i$ \u5927\u8fd8\u662f\u5f88\u96be\u7edf\u8ba1\uff0c\u8003\u8651\u964d\u4f4e\u503c\u57df\uff0c\u6539\u4e3a\u6c42\u524d $m$ \u5927\u7684\u6570\u88ab\u7edf\u8ba1\u7684\u65b9\u6848\u6570 $g_m$\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u524d $m$ \u5927\u7684\u6570\u8bbe\u4e3a $1$\uff0c\u5176\u4f59\u7684\u6570\u8bbe\u4e3a $0$\uff0c\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u6bcf\u79cd $01$ \u5e8f\u5217\u4e2d\u88ab\u9009\u53d6\u7684 $1$ \u7684\u6570\u91cf\u3002\u6ce8\u610f\u6211\u4eec\u8fd9\u65f6\u5019\u4e0d\u8003\u8651 $0,1$ \u4e4b\u95f4\u7684\u987a\u5e8f\uff0c\u6700\u540e\u6211\u4eec\u518d\u4e58\u4e0a\u4e00\u4e2a $m!(2n-m)!$\u3002\n\n\u8003\u8651\u8fd9\u4e2a $01$ \u5e8f\u5217\u957f\u4ec0\u4e48\u6837\u5b50\u3002\u6211\u4eec\u6309\u7167\u6bcf\u4e24\u4f4d\u5206\u7ec4\uff0c\u8bbe\u7b2c $i$ \u7ec4\u6709 $c_i$ \u4e2a $1$\uff0c\u90a3\u4e48\u6709 $\\sum_{i=1}^n c_i = m$\u3002\u8003\u8651\u4f18\u5148\u961f\u5217\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u8bbe\u4f18\u5148\u961f\u5217\u4e2d\u6709 $x$ \u4e2a $1$\uff0c\u90a3\u4e48\u6839\u636e\u4e0a\u9762\u7684\u8d2a\u5fc3\u7b56\u7565\uff0c\u53ef\u4ee5\u5f97\u5230\u6bcf\u4e00\u6b21 $x \\gets \\max(0, x + c_i - 1)$\u3002\n\n\u6211\u4eec\u8bbe $d_i = c_i - 1$\uff0c\u7136\u540e\u628a\u8fd9\u4e2a\u8fc7\u7a0b\u653e\u5230\u7f51\u683c\u56fe\u4e0a\uff0c\u770b\u4f5c\u6bcf\u6b21\u5411\u53f3\u3001\u53f3\u4e0a\u6216\u53f3\u4e0b\u8d70\u4e00\u4e2a\uff0c\u5982\u679c\u4f4e\u4e8e\u4e86 $x$ \u8f74\u5c31\u5f3a\u884c\u6273\u56de $x$ \u8f74\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/26kpg6pl.png)\n\n\u7ea2\u7ebf\u8868\u793a\u6273\u56de $x$ \u8f74\u7684\u4f4d\u7f6e\uff0c\u4e5f\u610f\u5473\u7740\u9009 $0$ \u7684\u4f4d\u7f6e\u3002\u8fd9\u4e2a\u4e1c\u897f\u770b\u8d77\u6765\u5f88\u4e11\uff0c\u6211\u4eec\u8003\u8651\u628a $\\max$ \u53bb\u6389\uff0c\u5c31\u4f1a\u53d8\u6210\u8fd9\u6837\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/x56ui72g.png)\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u6bcf\u4e2a\u7ea2\u7ebf\u90fd\u4f7f\u5f97\u6574\u4f53\u6700\u5c0f\u503c\u51cf\u5c0f\u4e86 $1$\uff0c\u90a3\u4e48\u7ea2\u7ebf\u7684\u6570\u91cf\u5c31\u7b49\u4e8e\u5168\u5c40\u6700\u5c0f\u503c\u7684\u7edd\u5bf9\u503c\u3002\n\n\u90a3\u4e48\u5047\u5982\u5168\u5c40\u6700\u5c0f\u503c\u4e3a $k$\uff0c\u90a3\u4e48\u7ea2\u7ebf\u7684\u6570\u91cf\u4e3a $-k$\uff0c\u90a3\u4e48\u9009\u53d6\u7684 $1$ \u7684\u6570\u91cf\u5c31\u662f $n + k$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u7edf\u8ba1\u6709\u591a\u5c11\u79cd $01$ \u5e8f\u5217\u4f7f\u5f97\u6700\u5c0f\u503c\u4e3a $k$\u3002\u8fd9\u79cd\u4e1c\u897f\u53ef\u4ee5\u7c7b\u4f3c\u4e8e\u5361\u7279\u5170\u6570\u7684\u63a8\u5bfc\u65b9\u5f0f\u6765\u8ba1\u7b97\u3002\n\n\u6211\u4eec\u5148\u7ed9\u51fa\u4e00\u4e2a\u5f15\u7406\uff1a\n\n>  \u4ece $(0, 0)$ \u5f00\u59cb\u8d70\uff0c\u5411\u53f3\u8d70\uff08$c_i=1$\uff09\u7684\u65b9\u6848\u6570\u4e3a $2$\uff0c\u5411\u53f3\u4e0a\u6216\u53f3\u4e0b\uff08$c_i=0 / 2$\uff09\u7684\u65b9\u6848\u6570\u4e3a $1$\uff0c\u90a3\u4e48\u4ece $(0, 0)$ \u8d70\u5230 $(n, m)$ \u7684\u65b9\u6848\u6570\u4e3a $\\binom{2n}{n + m}$\u3002\n>\n> **\u8bc1\u660e\uff1a** \u65b9\u6848\u6570\u5b9e\u9645\u4e0a\u7b49\u4e8e $[x^m] (x^{-1} + 2 + x)^n$\u3002\n> $$\n> \\begin{aligned}\n> &[x^m] (x^{-1} + 2 + x)^n\\\\\n> =&[x^m] x^{-n} (1 + 2x + x^2)^n\\\\\n> =&[x^{n+m}](x+1)^{2n}\\\\\n> =&\\binom{2n}{n+m}\n> \\end{aligned}\n> $$\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u7c7b\u4f3c\u4e8e\u5361\u7279\u5170\u6570\u7684\u65b9\u5f0f\u6c42\u89e3\u8fd9\u4e2a\u95ee\u9898\u4e86\u3002\n\n\u6211\u4eec\u76f8\u5f53\u4e8e\u8981\u4ece $(0, 0)$ \u8d70\u5230 $(n, m - n)$ \u7684\u4f4d\u7f6e\uff0c\u6c42\u7ecf\u8fc7\u6700\u4f4e\u70b9\u4e3a $k$ \u7684\u65b9\u6848\u6570\u3002\u90a3\u4e48\u7528\u5361\u7279\u5170\u6570\u7684\u6298\u7ebf\u7684\u65b9\u6848\u53ef\u4ee5\u5f97\u51fa\u6700\u4f4e\u70b9\u5927\u4e8e\u7b49\u4e8e $k$ \u7684\u65b9\u6848\u6570\uff0c\u5373\uff1a\n$$\n\\binom{2n}{n + m - n} - \\binom{2n}{n + 2(k - 1) - (m - n)}=\\binom{2n}{m} - \\binom{2n}{m - 2k + 2}\n$$\n\u90a3\u4e48\u6070\u597d $k$ \u7684\u65b9\u6848\u6570\u5c31\u662f\uff1a\n$$\n\\binom{2n}{m-2k} - \\binom{2n}{m - 2k + 2}\n$$\n\u90a3\u4e48\u7edf\u8ba1\u7b54\u6848\uff1a\u8bbe $p = \\max(0, n - m)$\uff0c\u90a3\u4e48\u6700\u5c0f\u503c\u7684\u53d6\u503c\u4e3a $[-n, -p]$\uff0c\u90a3\u4e48\u6709\uff1a\n$$\n\\begin{aligned}\n\\frac{g_m}{m!(2n-m)!}=& \\sum_{k=-n}^{-p} (n+k) \\left(\\binom{2n}{m - 2k} - \\binom{2n}{m - 2k + 2}\\right)\\\\\n=& \\sum_{k=p}^{n} (n-k) \\left(\\binom{2n}{m + 2k} - \\binom{2n}{m + 2(k + 1)}\\right)\\\\\n=& n\\sum_{k=p}^{n} \\left(\\binom{2n}{m + 2k} - \\binom{2n}{m + 2(k + 1)}\\right) - \\sum_{k=p}^{n} k\\binom{2n}{m + 2k} + \\sum_{k=p}^{n} k\\binom{2n}{m + 2(k + 1)}\\\\\n=& n \\binom{2n}{m + 2p} - \\sum_{k=p} k\\binom{2n}{m + 2k} + \\sum_{k=p + 1} (k - 1)\\binom{2n}{m + 2k}\\\\\n=& n \\binom{2n}{m + 2p} - p\\binom{2n}{m + 2p} - \\sum_{k=p + 1}^n \\binom{2n}{m + 2k}\\\\\n\\end{aligned}\n$$\n\u540e\u9762\u90a3\u4e2a\u5f0f\u5b50\u53ef\u4ee5\u524d\u7f00\u548c\u4e00\u4e0b\uff0c\u7136\u540e\u5c31 $O(1)$ \u4e86\u3002\n\n\u7136\u540e\u6700\u540e\u7684\u7b54\u6848\u5c31\u662f $\\sum_{i=1}^{2n} a_i (g_i - g_{i - 1})$\u3002\n\n~~\u4f60\u4e0d\u89c9\u5f97\u8fd9\u5f88\u9177\u5417\uff1f\u6211\u89c9\u5f97\u8fd9\u592a\u9177\u4e86\u3002~~\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 2000005, P = 998244353;\nint n, a[MAXN];\nint fac[MAXN], inv[MAXN];\nint C(int n, int m) {\n    if (n < 0 || m < 0 || n < m) return 0;\n    return 1ll * fac[n] * inv[m] % P * inv[n - m] % P;\n}\nint qpow(int a, int b) {\n    int ans = 1;\n    while (b) {\n        if (b & 1) ans = 1ll * ans * a % P;\n        a = 1ll * a * a % P;\n        b >>= 1;\n    }\n    return ans;\n}\nint pre[MAXN];\nint f[MAXN];\nint main() {\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; i++) {\n        scanf(\"%d\", &a[i]);\n    }\n    sort(a + 1, a + 1 + n, greater<>());\n    fac[0] = 1;\n    for (int i = 1; i <= n; i++) {\n        fac[i] = 1ll * fac[i - 1] * i % P;\n    }\n    inv[n] = qpow(fac[n], P - 2);\n    for (int i = n; i >= 1; i--) {\n        inv[i - 1] = 1ll * inv[i] * i % P;\n    }\n    assert(inv[0] == 1);\n    n /= 2;\n    pre[0] = C(2 * n, 0), pre[1] = C(2 * n, 1);\n    for (int i = 2; i <= 4 * n; i++)\n        pre[i] = (pre[i - 2] + C(2 * n, i)) % P;\n    for (int m = 0; m <= 2 * n; m++) {\n        int lim = max(n - m, 0);\n        f[m] = (1ll * n * C(2 * n, m + 2 * lim) % P \n            - 1ll * lim * C(2 * n, m + 2 * lim) % P \n            - (pre[m + 2 * n] - pre[m + 2 * lim]) + 2 * P) % P * fac[m] % P * fac[2 * n - m] % P;\n    }\n    int ans = 0;\n    for (int i = 1; i <= 2 * n; i++) {\n        ans = (ans + 1ll * a[i] * (f[i] - f[i - 1] + P)) % P;\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```\n",
        "postTime": 1684844702,
        "uid": 279652,
        "name": "APJifengc",
        "ccfLevel": 9,
        "title": "\u300c\u89e3\u9898\u62a5\u544a\u300dARC128F Game against Robot"
    }
]