[
    {
        "content": "[\u6216\u8bb8\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\uff1f](https://rainlycoris.github.io/?#/post/7)\n\n## \u9898\u610f\u7b80\u8ff0\n\n\u6709\u4e00\u9897\u6df1\u5ea6\u4e3a $D$ \u7684\u6ee1 $K$ \u53c9\u6811\uff0c\u4f60\u9700\u8981\u526a\u6389\u4e00\u4e9b\u8fb9\u4f7f\u5176\u5b58\u5728\u5927\u5c0f\u4e3a $X$ \u7684\u8054\u901a\u5206\u91cf\uff0c\u6c42\u6700\u5c11\u526a\u6389\u7684\u8fb9\u7684\u6761\u6570\u3002\n\n## \u5206\u6790\n\n\u8003\u8651\u9009\u62e9 __\u6240\u6709__ \u5927\u5c0f\u5927\u4e8e\u7b49\u4e8e $X$ \u7684\u4e00\u9897\u6df1\u5ea6\u4e3a $d$ \u7684\u6ee1 $K$ \u53c9\u6811\uff0c\u5728\u526a\u6389\u540e\u5927\u5c0f\u4ecd\u8d85\u8fc7 $X$ \u7684\u60c5\u51b5\u4e0b\u526a\u6389\u6240\u6709\u4e0e\u6839\u76f4\u63a5\u76f8\u8fde\u7684\u8fb9\uff0c\u4e5f\u5c31\u662f\u526a\u6389\u82e5\u5e72\u4e2a\u6df1\u5ea6\u4e3a $d-1$ \u7684\u6ee1 $K$ \u53c9\u6811\uff0c\u518d\u9012\u5f52\u5904\u7406\u6df1\u5ea6 $d-1$ \u7684\u6ee1 $K$ \u53c9\u6811\u3002\u6ce8\u610f\u5982\u679c $d \\ne D$\uff0c\u5728\u6811\u6839\u4e0e\u6811\u6839\u7236\u8282\u70b9\u7684\u8fde\u8fb9\u4e5f\u8981\u526a\u6389\u3002\n\n\u611f\u6027\u7406\u89e3\u4e00\u4e0b\uff0c\u8003\u8651\u4e3a\u4ec0\u4e48\u662f\u5bf9\u7684\u3002\u5728\u539f\u6811\u4e0a\u7684\u4efb\u610f\u4e00\u68f5\u5b50\u6811\u90fd\u53ef\u4ee5\u770b\u6210\u4e00\u68f5\u6811\uff0c\u6811\u7684\u6839\u8282\u70b9\u5f80\u4e0a\u6709\u4e00\u6761\u94fe\u3002\u5148\u4e0d\u8003\u8651\u94fe\uff0c\u539f\u95ee\u9898\u53d8\u6210\u4e86\u6709\u4e00\u9897\u6ee1 $K$ \u53c9\u6811\uff0c\u526a\u6389\u4e00\u4e9b\u8fb9\u4f7f\u5f97 __\u5305\u542b\u6839\u8282\u70b9__ \u7684\u8054\u901a\u5206\u91cf\u5927\u5c0f\u4e3a $x$\uff0c\u6c42\u526a\u6389\u7684\u8fb9\u7684\u6700\u5c11\u6761\u6570\u3002\u8fd9\u4e2a\u95ee\u9898\u8d2a\u5fc3\u5730\u526a\u82e5\u5e72\u4e2a\u6700\u5927\u7684\u5b50\u6811\u518d\u9012\u5f52\u4e0b\u53bb\u663e\u7136\u662f\u5bf9\u7684\u3002\u4e0a\u9762\u7684\u505a\u53d1\u9009\u62e9\u6240\u6709\u5927\u5c0f\u5927\u4e8e\u7b49\u4e8e $X$ \u7684\u5b50\u6811\u5c31\u5b9e\u73b0\u4e86\u679a\u4e3e\u94fe\u7684\u957f\u5ea6\uff0c\u6240\u4ee5\u539f\u8d2a\u5fc3\u4e5f\u662f\u5bf9\u7684\u3002\n\n\u590d\u6742\u5ea6 $O(D^2)$\u3002\u56e0\u4e3a $1 \\leq \\displaystyle\\sum_{i=0}^D{K^i} \\leq 10^{18}$\uff0c\u6240\u4ee5 $D \\leq 60$\uff0c\u590d\u6742\u5ea6\u8db3\u4ee5\u901a\u8fc7\u3002\n\n## \u4ee3\u7801\n```cpp\nconst int N = 70;\nint a[N];\nint D,K,X;\n\nsigned main(){\n    int t;\n    cin >> t;\n    while(t--){\n        cin >> D >> K >> X;\n        a[0] = 1;\n        for(int k=1;k<=D;k++)\n            a[k] = a[k-1]*K+1;\n        int ans = 1e18;\n        for(int k=0;k<=D;k++){\n            if(a[k]>=X){\n                int tmpans = !(k==D);\n                int x = a[k]-X,j = k-1;\n                while(x&&~j){\n                    tmpans += x/a[j];\n                    x %= a[j];\n                    j--;\n                }\n                ans = min(ans,tmpans);\n            }\n        }\n        cout << ans << endl;\n    }\n    return 0;\n}\n```\n\n## \u95f2\u8bdd\n\n\u8003\u573a\u5199\u4e86\u4e2a\u53ea\u9009\u62e9\u6700\u5c0f\u7684\u5927\u5c0f\u5927\u4e8e\u7b49\u4e8e $X$ \u7684\u6ee1 $K$ \u53c9\u6811\uff0cWA \u4e86\u4e00\u53d1\uff0c\u7136\u540e\u5728\u4e0d\u77e5\u9053\u4e3a\u5565\u7684\u60c5\u51b5\u4e0b\u5199\u4e86\u8fd9\u4e2a\u8fc7\u4e86\u3002",
        "postTime": 1676853295,
        "uid": 407214,
        "name": "liudonglin",
        "ccfLevel": 7,
        "title": "AT_abc290_g \u9898\u89e3"
    },
    {
        "content": "UPD\uff1a\u6dfb\u52a0\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\uff1f\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\uff1f](https://zhuanlan.zhihu.com/p/609918483)\n\n\n## \u9898\u610f\u63cf\u8ff0\n\n\u7ed9\u5b9a\u4e00\u9897\u6ee1 $K$ \u53c9\u6811\uff0c\u6df1\u5ea6\u4e3a $D$\uff0c\u5373\u6574\u68f5\u6709 $1+K+K^2+\\dots+K^D$ \u4e2a\u8282\u70b9\u3002\n\n\u73b0\u5728\u4f60\u53ef\u4ee5\u9009\u5b9a\u82e5\u5e72\u6761\u8fb9\u5e76\u5c06\u5176\u5220\u9664\uff08\u4e5f\u53ef\u4ee5\u9009\u62e9\u4e0d\u5220\uff09\uff0c\u5220\u9664\u540e\u5c06\u5f97\u5230\u4e00\u4e2a\u68ee\u6797\uff0c\u6c42\u4f7f\u68ee\u6797\u4e2d\u5b58\u5728\u4e00\u68f5\u6811\u7684\u8282\u70b9\u6570\u4e3a $X$ \u7684\u6700\u5c0f\u5220\u9664\u8fb9\u6570\u3002\n\n## \u7b80\u8981\u5206\u6790\n\n\u5220\u53bb\u67d0\u4e00\u6761\u8fb9\u53ef\u4ee5\u8f6c\u5316\u4e3a\u5220\u53bb\u67d0\u4e00\u9897\u5b50\u6811\u3002\n\n\u56e0\u4e3a\u6240\u7ed9\u51fa\u7684\u6811\u662f\u4e00\u9897\u6ee1 $K$ \u53c9\u6811\uff0c**\u6240\u4ee5\u4e00\u6b21\u64cd\u4f5c\u5373\u4e3a\u5220\u53bb $\\frac {k^{x + 1} -1} {k-1}$ \u4e2a\u70b9**\uff08\u7b49\u6bd4\u6570\u5217\u6c42\u548c\u516c\u5f0f\uff09\uff0c\u5176\u4e2d $x$ \u4e3a\u6240\u5220\u53bb\u5b50\u6811\u7684\u6df1\u5ea6\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8981\u5220\u53bb $n - x$ \u4e2a\u70b9\uff0c\u5176\u4e2d $n$ \u4e3a\u6811\u7684\u8282\u70b9\u603b\u6570\uff0c\u5373 $n = \\frac {k ^{d+1}-1}  {k-1}$\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c**\u6bcf\u6b21\u64cd\u4f5c\u53ef\u4ee5\u5220\u53bb\u4e00\u4e2a\u53ef\u4ee5\u5220\u53bb\u7684\u6700\u5927\u5b50\u6811\u7684\u6240\u6709\u7b49\u4ef7\u5b50\u6811**\u3002\n\n\u4f8b\u5982\uff1a\n\n![\u6ee1\u4e8c\u53c9\u6811 \u7684\u56fe\u50cf\u7ed3\u679c](https://tse3-mm.cn.bing.net/th/id/OIP-C.SYTRoncSaG0VC04vMUF8fwHaDt?w=339&h=175&c=7&r=0&o=5&dpr=2&pid=1.7)\n\n\u5982\u679c\u60f3\u8981\u5f97\u5230\u4e00\u4e2a\u8282\u70b9\u6570\u4e3a $5$ \u7684\u6811\uff0c\u4e5f\u5c31\u662f\u9700\u8981\u5220\u9664 $10$ \u4e2a\u70b9\uff0c\u90a3\u4e48\u53ef\u4ee5\u5148\u5220\u53bb\u4ee5 $2$ \u4e3a\u6839\u7684\u6811\uff0c\u5269\u4f59 $8$ \u4e2a\u70b9\u3002\n\n\u968f\u540e\u518d\u5220\u53bb\u4ee5 $6$ \u4e3a\u6839\u7684\u5b50\u6811\uff0c\u5373\u53ef\u5f97\u5230\u7b54\u6848 $2$\u3002\n\n\n\n### Bug 1\n\n**\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u79cd\u8d2a\u5fc3\u7b56\u7565\u662f\u9519\u8bef\u7684\uff0c\u5728\u5220\u53bb\u4e00\u9897\u5b50\u6811\u65f6\uff0c\u4e8b\u5b9e\u4e0a\u662f\u5206\u79bb\u51fa\u8fd9\u9897\u5b50\u6811\uff0c\u8fd9\u4e2a\u5b50\u6811\u4ecd\u7136\u6709\u53ef\u80fd\u5bf9\u7b54\u6848\u4ea7\u751f\u8d21\u732e**\u3002\n\n\u6211\u4eec\u53ea\u9700\u5728\u9012\u5f52\u65f6\u52a0\u4e0a\u4e00\u5904\u7279\u5224\u5373\u53ef\u3002\n\n\n\n### Bug 2\n\n\u5bf9\u4e8e\u521a\u5f00\u59cb\u6267\u884c\u64cd\u4f5c\u65f6\uff0c\u6211\u4eec\u4ecd\u6709\u6f0f\u6d1e\u5c1a\u672a\u5904\u7406\u3002\n\n\n\n\u4ecd\u662f\u770b\u4e0a\u9762\u7684\u56fe\uff0c\u6211\u60f3\u8981\u5f97\u5230\u4e00\u9897\u8282\u70b9\u6570\u4e3a $2$ \u7684\u5b50\u6811\uff0c\u6309\u7167\u4e0a\u8ff0\u7b56\u7565\u6211\u4eec\u5220\u9664\u7684\u8fc7\u7a0b\u662f\u8fd9\u6837\u7684\uff1a\n\n1. \u5220\u53bb\u4ee5 $2$ \u4e3a\u6839\u7684\u5b50\u6811\uff0c\u5269\u4f59\u8282\u70b9\u6570\u4e3a $8$\u3002\n2. \u5220\u53bb\u4ee5 $6,7$ \u4e3a\u6839\u7684\u5b50\u6811\uff0c\u5269\u4f59\u8282\u70b9\u6570\u4e3a $2$\u3002\n\n\u64cd\u4f5c\u6b21\u6570\u4e3a $3$\uff0c\u7136\u800c\u6211\u4eec\u53ef\u4ee5\u5148\u5220\u53bb\u4ee5 $7$ \u4e3a\u6839\u7684\u5b50\u6811\uff0c\u6700\u540e\u628a\u76ee\u5149\u653e\u5230\u4ee5 $7$ \u4e3a\u6839\u7684\u5b50\u6811\u5f53\u4e2d\uff0c\u5220\u53bb\u4ee5 $14$ \u4e3a\u6839\u7684\u5b50\u6811\uff0c\u5373\u53ef\u5f97\u5230\u66f4\u4f18\u7684\u7b54\u6848 $2$\u3002\n\n**\u6ce8\u610f\u6539\u53d8\u76ee\u5149\u65f6\u7684\u5269\u4f59\u8282\u70b9\u6570\u7684\u53d8\u5316**\u3002\n\n\n\n\u56e0\u6b64\uff0c\u5728\u521d\u6b21\u8c03\u7528\u9012\u5f52\u51fd\u6570\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u80fd\u5305\u5bb9\u4e0b $x$ \u4e2a\u70b9\u7684\u6700\u5c0f\u5b50\u6811\u5f00\u59cb\u9012\u5f52\u3002\n\n\n\n### Optimisation 1\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u9012\u5f52\u51fd\u6570\u7684\u6267\u884c\u6b21\u6570\u4e3a $O(2 ^ {ans})$\uff0c\u5176\u4e2d $ans$ \u4e3a\u6700\u7ec8\u7b54\u6848\u3002\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u526a\u679d\u3002\n\n\u4e0d\u96be\u60f3\u5230\uff0c\u4f7f\u7528\u6700\u4f18\u6027\u526a\u679d\uff0c\u8bb0\u5f55\u5f97\u5230\u7684\u6700\u4f18\u7b54\u6848\uff0c\u5982\u679c\u5f53\u524d\u64cd\u4f5c\u6570\u5927\u4e8e\u5f97\u5230\u7684\u6700\u4f18\u7b54\u6848\u65f6\u76f4\u63a5\u505c\u6b62\u9012\u5f52\u5373\u53ef\u3002\n\n\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a $O(ans)$ \u7684\u505a\u6cd5\uff0c\u6700\u6162\u7684\u70b9\u8dd1\u4e86 $11\\operatorname{ms}$\uff0c\u5e73\u5747\u6bcf\u4e2a\u70b9\u5728 $2\\operatorname{ms}$ \u5de6\u53f3\u3002\n\n## \u603b\u7ed3\n\n\u6b64\u9898\u662f\u4e00\u9053\u96be\u5ea6\u8bc4\u7ea7\u4e3a $2407$ \u7684 $G$ \u9898\uff0c\u653e\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u5341\u5206\u5408\u9002\u3002\n\n\u4e14\u662f\u4e00\u9053\u8f83\u4e3a\u6e05\u65b0\u7684\u601d\u7ef4\u9898\u3002\n\n\u521d\u59cb\u7684\u9898\u610f\u8f6c\u5316\u5e76\u4e0d\u96be\u60f3\uff0c\u601d\u7ef4\u96be\u5ea6\u96c6\u4e2d\u5728 $bug$ \u7684\u53d1\u73b0\u4ee5\u53ca\u4fee\u590d\u90e8\u5206\u3002\n\u672b\u5c3e\u7684\u4f18\u5316\u4e5f\u662f\u5e38\u89c4\u64cd\u4f5c\uff0c\u5b9e\u73b0\u90e8\u5206\u95ed\u773c\u778e\u5199\u80fd\u8fc7\u3002\n\n\u4e0d\u8fc7\u6211\u770b\u5728\u699c\u5927\u4f6c\u7684\u4ee3\u7801\u5341\u5206\u7b80\u6d01\uff0c\u800c\u6211\u5374\u5c01\u88c5\u4e86 $n$ \u4e2a\u51fd\u6570\u3002\n\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n```c++\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <string>\n#include <cmath>\n#include <vector>\n#include <map>\n#include <queue>\n#include <set>\n\nusing namespace std;\n\ntypedef __int128 ll;\n//typedef long long ll;\nconst ll maxn = 1e5 + 7;\nconst ll INF = 1e9 + 7, MOD = 998244353;\n\ninline ll read() {\n    char cCc;\n    ll xXx = 0, wWw = 1;\n    while (cCc < '0' || cCc > '9')\n        (cCc == '-') && (wWw = -wWw), cCc = getchar();\n    while (cCc >= '0' && cCc <= '9')\n        xXx = (xXx << 1) + (xXx << 3) + (cCc ^ '0'), cCc = getchar();\n    xXx *= wWw;\n    return xXx;\n}\n\ninline void write(ll xXx) {\n    if (xXx < 0)\n        putchar('-'), xXx = -xXx;\n    if (xXx > 9ll)\n        write(xXx / 10ll);\n    putchar(xXx % 10ll + '0');\n}\n\nll d, k, x, ans, n;\n\nll kissme(ll di, ll zhi) {\n    if (zhi == 0)return 1ll;\n    ll _x = kissme(di, zhi >> 1);\n    if (zhi & 1)return _x * _x * di;\n    return _x * _x;\n}\n\nll finalfind(ll x, ll opt) {\n    ll l = 0, r = d + 1;\n    while (l <= r) {\n        ll mid = (l + r) >> 1;\n        ll jie = kissme(k, mid + 1);\n        ll jie2 = jie * k;\n        jie--, jie2--;\n        jie /= (k - 1), jie2 /= (k - 1);\n        if (jie <= x && x < jie2)return mid + opt;\n        else if (jie > x)r = mid - 1;\n        else l = mid + 1;\n    }\n}\n\nll dfs(ll _x, ll step) {\n    if (!_x)return step;\n    if (step > ans)return 1e18;\n    ll a = finalfind(_x, 0);\n    if (a == 0)\n        return step + _x;\n    ll cur = (kissme(k, a + 1) - 1) / (k - 1);\n\n    if (cur >= x)\n        return min(dfs(cur - x, step + 1), dfs(_x % cur, step + (_x / cur)));\n    return dfs(_x % cur, step + (_x / cur));\n}\n\nvoid solve() {\n    d = read(), k = read(), x = read();\n    ans = 1e18;\n    n = (kissme(k, d + 1) - 1) / (k - 1);\n    ll a = finalfind(x, 0), a2 = finalfind(n - x, 0);\n    if (x == 0 || x == n)cout << \"0\\n\";\n//    else if (x == 1 || (n - x) == 1)cout << \"1\\n\";\n    else if ((kissme(k, a + 1) - 1) / (k - 1) == x || (kissme(k, a2 + 1) - 1) / (k - 1) == (n - x)) cout << \"1\\n\";\n    else {\n//        cout << min(dfs(n - x, 0), dfs(x, 0)) << '\\n';\n//        write(min(dfs(n - x, 0), dfs(x, 0)));\n        ll a1 = finalfind(x, 1);\n        ll cur = (kissme(k, a1 + 1) - 1) / (k - 1);\n        if (cur >= x) {\n            ans = dfs(cur - x, 1);\n            write(min(ans, dfs(n - x, 0)));\n        } else write(ans = dfs(n - x, 0));\n        putchar('\\n');\n    }\n}\n\nint main() {\n//    freopen(\"test.in\",\"r\",stdin);\n//    freopen(\"test.out\",\"w\",stdout);\n    ll T = read();\n    while (T--)solve();\n    return 0;\n}\n```\n\n",
        "postTime": 1677474898,
        "uid": 378222,
        "name": "fakestd",
        "ccfLevel": 0,
        "title": "[ABC290G] Edge Elimination \u9898\u89e3"
    },
    {
        "content": "# [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/AT_abc290_g)\n# \u9898\u76ee\u63cf\u8ff0\n\u5bf9\u4e8e\u4e00\u9897\u6df1\u5ea6\u4e3a $D$ \u7684\u6ee1 $K$ \u53c9\u6811\uff0c\u8ba1\u7b97\u5c06\u6811\u5206\u6210\u591a\u4e2a\u5b50\u6811\uff0c\u5176\u4e2d\u6709\u4e00\u68f5\u5b50\u6811\u6709 $x$ \u4e2a\u8282\u70b9\u7684\u6700\u5c0f\u5220\u8fb9\u4e2a\u6570\u3002\n\n# \u9898\u76ee\u5206\u6790\n\n\u8003\u8651\u8fde\u901a\u5757\u7684\u70b9\u7684 `lca` \u4f4d\u4e8e\u54ea\u4e00\u5c42\uff0c\u679a\u4e3e `lca` \u6240\u5728\u5c42\u4e3a\u7b2c $i$ \u5c42\u3002\n\n\u5982\u679c\u662f\u7b2c $0$ \u5c42\uff0c\u4e0d\u7528\u5207\u65ad\uff0c\u5982\u679c\u662f\u7b2c `1` \u5c42\u5230\u7b2c $d$ \u5c42\uff0c\u9700\u8981\u5148\u5207\u65ad\u4e00\u6761\u8fb9\u3002\n\n\n\u53ea\u8003\u8651\u7b2c $i$ \u5c42\u4e3a\u6839\u7684\u8fd9\u68f5\u5b50\u6811\uff0c\u82e5\u8fd9\u68f5\u5b50\u6811\u4e0d\u8db3 $x$ \u4e2a\u70b9\uff0c\u53ef\u4ee5\u76f4\u63a5\u8df3\u8fc7\u3002\u5426\u5219\uff0c\u5f53\u524d\u8fd9\u68f5\u5b50\u6811\u603b\u7684\u70b9\u6570\u4e00\u5b9a\u5927\u4e8e $x$\uff08\u7b49\u4e8e $x$ \u7684\u60c5\u51b5\u76f4\u63a5 `break` \u5373\u53ef\u3002\uff09\n\n\u8ba1\u5f53\u524d\u8fd8\u9700\u8981\u5220\u7684\u70b9\u7684\u4e2a\u6570\u4e3a $sum$\uff0c\u5f53\u524d\u5220\u6389\u7684\u8fb9\u6570\u4e3a $cnt$\uff0c\u5b50\u6811\u5f53\u524d\u5c42\u7684\u70b9\u4e3a\u6839\u53ca\u4ee5\u4e0b\u5c42\u70b9\u7684\u603b\u6570\u4e3a $tot$\uff0c\u5b50\u6811\u4e0b\u4e00\u5c42\u7684\u70b9\u4e3a\u6839\u53ca\u4ee5\u4e0b\u5c42\u7684\u70b9\u6570\u4e3a $w$\u3002\n\n\u6b64\u523b\uff0c\u4e00\u5b9a\u662f\u4f18\u5148\u65ad\u5f00\u9760\u4e0a\u7684\u8fb9\u3002\u9760\u4e0a\u7684\u4e00\u6761\u8fb9\u80fd\u76f4\u63a5\u524a\u6389\u5927\u5c0f\u4e3a $w$ \u7684\u4e00\u68f5\u5b50\u6811\u3002\u901a\u8fc7\u4e0b\u53d6\u6574\u786e\u5b9a\u524a\u51e0\u68f5\uff0c\u4f59\u6570\u5728\u4e0b\u4e00\u5c42\u91cc\u8003\u8651\u3002\u76f4\u5230\u8981\u5220\u7684\u70b9\u4e3a `0` \u6216\u8003\u8651\u5230\u6700\u540e\u4e00\u5c42\u5373\u53ef\u3002\n\n# \u53c2\u8003\u4ee3\u7801\n```cpp\n//\u5df2\u505a\u9632\u6284\u5904\u7406 [\u6ed1\u7a3d]\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int MAXN=1e7+5;\nint t,d,k,x;\nint a[MAXN];\nint s[MAXN];\nint cnt;\nsigned main(){\n\tcin.tie(0);\n\tcout.tie(0);\n\tios::sync_with_stdio(false);\n\twhile(t--){\n\t\tcin>>d>>k>>x;\n\t\ta[0]=1;\n\t\ts[0]=1;cnt=0;\n\t\tfor(int i=1;i<=d;++i){\n\t\t\ta[i]=1ll*a[i-1]*k;\n\t\t\ts[i]=s[i-1]+a[i];\n\t\t}\n\t\tint ans=s[d];\n\t\tfor(int i=0;i<=d;++i){\n\t\t\tint  sum=s[i]-x,tot=s[i],cnt=(i<d);\n\t\t\tif(sum<0)continue;\n\t\t\twhile(sum>0){\n\t\t\t\tint w=(tot-1)/k;\n\t\t\t\tcnt+=sum/w;\n\t\t\t\tsum%=w;\n\t\t\t\ttot=w;\n\t\t\t}\n\t\t\tans=min(ans,cnt);\n\t\t}\n\t\tcout<<ans<<'\\n';\n\t}\n}\n\n```",
        "postTime": 1685106551,
        "uid": 749636,
        "name": "Zhao_daodao",
        "ccfLevel": 0,
        "title": "AT_abc290_g \u9898\u89e3"
    }
]