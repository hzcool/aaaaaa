[
    {
        "content": "### Description\n\n\u73b0\u6709 $h$ \u884c $w$ \u5217\u7684\u7f51\u683c\u3002\u7ed9\u5b9a $n$ \u5f20\u5361\u7247\uff0c\u6bcf\u5f20\u5361\u7247 $i$ \u6709\u4e00\u4e2a\u4f4d\u7f6e $(r_i, c_i)$ \u4ee5\u53ca\u6570\u5b57 $a_i$\u3002\n\n\u4f60\u53ef\u4ee5\u5148\u5728\u6bcf\u4e00\u884c\u62ff\u8d70\u4e0d\u8d85\u8fc7\u4e00\u4e2a\u5361\u7247\uff0c\u7136\u540e\u5728\u6bcf\u4e00\u5217\u518d\u62ff\u4e0d\u8d85\u8fc7\u4e00\u4e2a\u3002\u4e0d\u80fd\u91cd\u590d\u62ff\u3002\n\n\u6c42\u6700\u540e\u53ef\u5f97\u7684\u5361\u7247\u4e0a\u6570\u5b57\u4e4b\u548c\u7684\u6700\u5927\u503c\u3002\n\n### Hint\n\n- $1\\le n, w, h\\le 10^5$\n- $a_i \\in [1, 10^5]$\n- $1\\le r_i \\le h, 1\\le c_i \\le w$\n\n### Solution\n\n*Reference : https://autumnkite.github.io/atcoder-jsc19qualE-sol/*\n\n\u5982\u679c\u628a\u6bcf\u4e00\u884c\u3001\u5217\u90fd\u89c6\u4f5c\u4e00\u4e2a\u70b9\uff0c\u628a\u5361\u7247\u89c6\u4e3a\u8fb9\uff0c\u6211\u4eec\u4f1a\u5f97\u5230\u4e00\u4e2a $w+h$ \u4e2a\u70b9\uff0c $n$ \u6761\u8fb9\u7684\u56fe\u3002\u82e5\u6709\u4e00\u5f20\u7b2c $i$ \u884c\u7b2c $j$ \u5217\u7684\u5361\u7247\uff0c\u90a3\u4e48\u5c31\u89c6\u4f5c\u4e00\u6761\u7ed3\u70b9 $i$\uff0c$h+j$ \u4e4b\u95f4\u7684\u8fb9\uff0c\u6743\u503c\u4e3a\u5361\u7247\u6570\u503c\u3002\n\n\u8003\u8651\u9898\u9762\u4e0a\u53d6\u5361\u7247\u7684\u8fc7\u7a0b\u5982\u4f55\u8f6c\u6362\u5230\u56fe\u4e0a\uff1a\u6211\u4eec\u5047\u5b9a\u56fe\u6709\u5411\uff0c\u90a3\u4e48\u5728\u7b2c $i$ \u884c\u53d6\u8d70\u7b2c $j$ \u5217\u7684\u5361\u7247\uff0c\u5c31\u76f8\u5f53\u4e8e\u4e00\u6761 $i\\to j+h$ \u7684\u8fb9\uff1b\u540c\u7406\uff0c\u5728\u7b2c $i$ \u5217\u53d6\u8d70\u7b2c $j$ \u884c\u7684\u5361\u7247\uff0c\u5c31\u76f8\u5f53\u4e8e\u4e00\u6761 $i + h\\to j$ \u7684\u8fb9\u3002\n\n\u8bd5\u7740\u7814\u7a76\u6700\u540e\u53d6\u5b8c\u5efa\u51fa\u7684\u65b0\u56fe\u7684\u6027\u8d28\u3002\u4e00\u4e2a\u7ed3\u70b9\u7684\u51fa\u5ea6\u6700\u591a\u4e3a $1$\uff0c\u90a3\u4e48\u6574\u4e2a\u65b0\u56fe\u5c31\u662f\uff08\u5185\u5411\uff09\u57fa\u73af\u6811\u7684\u68ee\u6797\u3002\u6700\u540e\u5c06\u8fb9\u8f6c\u4e3a\u65e0\u5411\u3002\n\n\u9898\u76ee\u8981\u6c42\u6743\u503c\u6700\u5927\u5316\uff0c\u90a3\u4e48\u5c31\u662f\u6c42\u56fe\u4e0a\u7684\u6700\u5927\u751f\u6210\u57fa\u73af\u6811\u68ee\u6797\u3002\u8981\u6c42\u6700\u5927\u751f\u6210\u57fa\u73af\u6811\u68ee\u6797\uff0c\u53ef\u4ee5\u4eff\u7167 Kruskal \u7b97\u6cd5\u8d2a\u5fc3\u5730\u53d6\u8fb9\uff0c\u4e0e\u4e00\u822c MST \u7684\u4e0d\u540c\u4e4b\u5904\u5c31\u662f\u9700\u8981\u5224\u73af\uff0c\u5b9e\u73b0\u8981\u70b9\u662f\u4e00\u4e2a\u70b9\u6240\u5728\u8fde\u901a\u5757\u4e2d\u6700\u591a\u4e00\u4e2a\u73af\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n### Code\n\n```cpp\n#include <iostream>\n#include <algorithm>\n\nusing namespace std;\nconst int N = 1e5 + 5;\n\nint n, w, h;\nstruct edge { int u, v, w; } e[N];\nint fa[N << 1];\nbool ring[N << 1];\n\nint find(int x) {\n    return x == fa[x] ? x : fa[x] = find(fa[x]);\n}\n\nsigned main() {\n    ios::sync_with_stdio(false);\n    cin >> n >> h >> w;\n    for (int i = 1; i <= w + h; i++)\n        fa[i] = i, ring[i] = false;\n    for (int i = 1; i <= n; i++)\n        cin >> e[i].u >> e[i].v >> e[i].w;\n    \n    sort(e + 1, e + 1 + n, [](const edge& x, const edge& y) {\n        return x.w > y.w;\n    });\n\n    long long ans = 0ll;\n    for (int i = 1; i <= n; i++) {\n        int u = e[i].u, v = e[i].v + h, w = e[i].w;\n        u = find(u), v = find(v);\n\n        if (u == v) {\n            if (!ring[u]) ring[u] = 1, ans += w;\n        } else {\n            if (!ring[u] || !ring[v]) {\n                ring[u] = ring[v] = ring[u] | ring[v];\n                fa[u] = v, ans += w;\n            }\n        }\n    }\n\n    printf(\"%lld\\n\", ans);\n    return 0;\n}\n```",
        "postTime": 1596540921,
        "uid": 61430,
        "name": "_Wallace_",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 AT5168 \u3010Card Collector\u3011"
    },
    {
        "content": "## \u3010\u7ffb\u8bd1\u3011\n\u6709$N$\u5f20\u5361\u7247\u88ab\u653e\u5728\u4e00\u4e2a$H$\u884c$W$\u5217\u7684\u5e73\u9762\u4e0a\uff0c\u7b2c$i$\u5f20\u5361\u4e0a\u6807\u6709\u4e00\u4e2a\u6574\u6570$A_i$\uff0c\u5e76\u88ab\u653e\u5728\u7b2c$R_i$\u884c\u7b2c$C_i$\u5217\u3002\n\n\u540c\u4e00\u4e2a\u683c\u5b50\u4e0a\u53ef\u80fd\u4f1a\u6709\u591a\u5f20\u5361\u7247\u3002\n\n\u73b0\u5728\u4f60\u8981\u5148\u4ece\u6bcf\u4e00\u884c\u62ff\u8d70\u4e00\u5f20\u5361\uff0c\u518d\u4ece\u6bcf\u4e00\u5217\u62ff\u8d70\u4e00\u5f20\u5361\uff08\u4e5f\u53ef\u4ee5\u53ef\u4ee5\u4e0d\u62ff\uff09\uff0c\u4f7f\u5f97\u62ff\u8d70\u7684\u6240\u6709\u5361\u7247\u4e0a\u7684\u6570\u5b57\u548c\u6700\u5927\u3002\n\n## \u3010\u601d\u8def\uff08\u4f2a\uff09\u3011\n\u6211\u4eec\u8003\u8651\u6bcf\u4e00\u5f20\u5361\u7247\u6700\u591a\u88ab\u62ff\u4e00\u6b21\uff0c\u4e14\u8fd9\u5f20\u5361\u7247\u8981\u4e48\u662f\u5728\u4f60\u4ece\u6bcf\u4e00\u5217\u4e2d\u62ff\u53d6\u65f6\u88ab\u62ff\u8d70\u7684\uff0c\u8981\u4e48\u662f\u5728\u4f60\u4ece\u6bcf\u4e00\u884c\u4e2d\u62ff\u53d6\u65f6\u88ab\u62ff\u8d70\u7684\uff0c\u8981\u4e48\u5c31\u6ca1\u88ab\u62ff\u8d70\u3002\n\n\u56e0\u6b64\u8003\u8651\u5efa\u7acb\u7f51\u7edc\u6d41\u6a21\u578b\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7269\u54c1\u5efa\u7acb\u4e00\u4e2a\u8282\u70b9\uff0c\u5e76\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u51fa\u73b0\u7684\u884c\u3001\u5217**\u5404**\u5efa\u7acb\u4e00\u4e2a\u8282\u70b9\uff0c\u7136\u540e\u6bcf\u4e00\u4e2a\u7269\u54c1\u8282\u70b9\u5411\u5b83\u6240**\u5bf9\u5e94\u7684**\u884c\u3001\u5217\u5404\u8fde\u4e00\u6761\u5bb9\u91cf\u65e0\u9650\uff0c\u8d39\u7528\u4e3a\u7269\u54c1\u4ef7\u503c\u7684\u8fb9\u3002\n\n\u7136\u540e\u5efa\u7acb\u4e00\u4e2a\u8d85\u7ea7\u6e90\u70b9$S$\u5411\u6bcf\u4e00\u4e2a\u7269\u54c1\u8282\u70b9\u8fde\u4e00\u6761\u8d39\u7528\u4e3a$0$\uff0c\u5bb9\u91cf\u4e3a$1$\u7684\u70b9\uff0c\u5efa\u7acb\u4e00\u4e2a\u8d85\u7ea7\u6c47\u70b9$T$\uff0c\u7531\u6bcf\u4e00\u4e2a\u884c\u3001\u5217\u8282\u70b9\u51fa\u53d1\u5411\u8d85\u7ea7\u6c47\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a$1$\uff0c\u8d39\u7528\u4e3a$0$\u7684\u70b9\u3002\u4ee5\u4fdd\u8bc1\u6bcf\u4e00\u4e2a\u7269\u54c1\u3001\u6bcf\u4e00\u884c\u3001\u6bcf\u4e00\u5217\u90fd\u6700\u591a\u53ea\u88ab\u9009\u8fc7\u4e00\u6b21\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u5efa\u597d\u7684\u56fe\u8dd1\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u5c31\u53ef\u4ee5\u5f97\u51fa\u80fd\u5f97\u5230\u7684\u6700\u5927\u6743\u503c\u4e86\n\n\u5417\uff1f\n\n\u5f88\u663e\u7136\uff0c$N\\leq10^5$\u7684\u6570\u636e\u8303\u56f4\u4e0d\u5141\u8bb8\u6211\u4eec\u8fd9\u4e48\u505a\u3002\n\n\n\u56e0\u6b64\u8003\u8651\u4f18\u5316\u3002\n\n## \u3010\u601d\u8def\uff08\u771f\uff09\u3011\n\u6211\u4eec\u53d1\u73b0\uff0c\u6211\u4eec\u5efa\u6a21\u597d\u7684\u7f51\u7edc\u6d41\u5220\u53bb\u8d85\u7ea7\u539f\u70b9\u4e0e\u8d85\u7ea7\u6c47\u70b9\uff0c\u4f1a\u53d1\u73b0\u8fd9\u662f\u4e00\u4e2a\u4e8c\u5206\u56fe\u3002\n\n\u7136\u540e\u8dd1\u4e8c\u5206\u56fe\u5339\u914d\u5c31\u884c\u4e86\uff1f\u7b54\u6848\u662f\u4e0d\u884c\uff0c\u8fd8\u662f\u8dd1\u592a\u6162\u3002\n\n\u56e0\u6b64\u6211\u4eec\u6765\u770b\u770b\u8fd9\u4e2a\u56fe\u8fd8\u6709\u4ec0\u4e48\u6027\u8d28\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u6211\u4eec\u6700\u540e\u5339\u914d\u5b8c\u65f6\uff0c\u5de6\u8fb9\uff08\u7269\u54c1\u8282\u70b9\uff09\u7684\u70b9\u6570\u4e00\u5b9a\u8981\u7b49\u4e8e\u53f3\u8fb9\uff08\u884c\u5217\u8282\u70b9\uff09\u7684\u70b9\u6570\u3002\u4e5f\u5c31\u662f\u8bf4\u4e0d\u80fd\u8fd9\u6837\n```\n1 -- 2\n    /\n   /\n  /\n3\n```\n\u8bc1\u660e\u663e\u7136\u5427\uff0c\u4f60\u6bcf\u4e00\u884c\u6bcf\u4e00\u5217\u53ea\u80fd\u9009\u4e00\u4e2a\u554a\uff0c\u5728\u6b64\u4e0d\u8d58\u8ff0\u4e86\n\n\u800c\u4e14\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6211\u4eec\u5f97\u5230\u7684\u6700\u7ec8\u5339\u914d\u7684\u6bcf\u4e00\u4e2a\u5b50\u5339\u914d\uff08~~\u6211\u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u8fd9\u4e48\u53eb~~\uff09\uff0c\u90fd\u6ee1\u8db3\u8fd9\u4e2a\u6027\u8d28\uff08\u6bd5\u7adf\u4f60\u6bcf\u884c\u6bcf\u5217\u6700\u591a\u9009\u4e00\u4e2a\uff09\u3002\n\n\u56e0\u6b64\u6211\u4eec\u8003\u8651\u8d2a\u5fc3\uff0c\u5c06\u5de6\u8fb9\u8282\u70b9\u7684\u6743\u503c\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u5c06\u4e0e\u8fd9\u4e2a\u8282\u70b9\u6709\u8054\u7cfb\u7684\u884c\u5217\u8282\u70b9\u52a0\u5165\u4e00\u4e2a\u96c6\u5408\uff0c\u6211\u4eec\u5b9a\u4e49\u884c\u5217\u8282\u70b9\u7684\u4e00\u4e2a\u96c6\u5408\u7684\u6743\u503c\u4e3a\u8fd9\u4e2a\u96c6\u5408\u8fd8\u80fd\u627f\u53d7\u7684\u7269\u54c1\u8282\u70b9\u4e2a\u6570\uff0c\u56e0\u6b64\u6bcf\u6b21\u9009\u62e9\u6700\u5927\u7684\u4e00\u4e2a\u8282\u70b9\u65f6\uff0c\u6211\u4eec\u5148\u5224\u65ad\u76ee\u524d\u7684\u96c6\u5408\u80fd\u4e0d\u80fd\u627f\u53d7\u8fd9\u4e2a\u6700\u5927\u7684\u8282\u70b9\uff08\u56e0\u4e3a\u8fd9\u4e2a\u96c6\u5408\u4e00\u5b9a\u662f\u7b54\u6848\u96c6\u5408\u7684\u5b50\u96c6\uff0c\u6240\u4ee5\u4e00\u5b9a\u6ee1\u8db3\u8fd9\u4e2a\u53f3\u8fb9\u8282\u70b9\u96c6\u5408\u7684\u5927\u5c0f\u5927\u4e8e\u6211\u4eec\u5728\u5de6\u8fb9\u8282\u70b9\u9009\u8fc7\u7684\u70b9\u7684\u96c6\u5408\u5927\u5c0f\uff09\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a\u96c6\u5408\u7684\u6743\u503c\u51cf\u4e00\u5c31\u884c\u3002\u5982\u679c\u4e0e\u8fd9\u4e2a\u70b9\u6709\u8054\u7cfb\u7684\u884c\u5217\u8282\u70b9\u5df2\u7ecf\u5728\u96c6\u5408\u5185\u4e86\uff0c\u53ea\u9700\u51cf\u5c0f\u96c6\u5408\u6743\u503c\uff08\u6216\u4e0d\u9009\uff09\u5373\u53ef\u3002\n\n\u8fd9\u4e2a\u96c6\u5408\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u6765\u7ef4\u62a4\uff0c\u5e26\u4e2a\u6743\u5c31\u884c\u3002\n\n\u4e0b\u9762\u7b80\u5355\u8bf4\u4e00\u4e0b\u5b83\u7684\u6b63\u786e\u6027\uff08\u5176\u5b9e\u7b97\u662f\u6a21\u62df\u4e00\u4e0b\u8fc7\u7a0b\uff09\u3002\n\n\u6bd4\u5982\u4f60\u6709\u4e09\u4e2a\u70b9\n```\na[1] = 3 a[2] = 2 a[3] =1\n```\n\u5b83\u4eec\u5206\u522b\u5728\n```\n(1, 2), (1, 1) (1, 1)\n```\n\n\u90a3\u4e48\u5efa\u51fa\u6765\u7684\u56fe\u5c31\u662f\n![](https://cdn.luogu.com.cn/upload/image_hosting/8up35uge.png)\n\n\n\u6211\u4eec\u5148\u627e\u5230\u4e86\u6743\u503c\u4e3a$3$\u7684**\u4e00\u53f7\u8282\u70b9**\uff08\u56fe\u4e2d\u5e8f\u53f7\u4e3a$1$\uff0c~~\u6211\u4e0d\u4f1a\u544a\u8bc9\u4f60\u662f\u6211\u4e00\u5f00\u59cb\u56fe\u753b\u9519\u4e86\u61d2\u5f97\u6539\u7684~~\uff09\u3002\n\n\u7136\u540e\u6211\u4eec\u96be\u9053\u5c31\u76f4\u63a5\u8ba9$1$\u5bf9\u5e94$1$\uff08\u884c\uff09\u4e86\u5417\uff1f\n\n\u8fd9\u6837\u663e\u7136\u4e0d\u662f\u6700\u4f18\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u5148\u628a\u201c1\u884c\u201d\u4e0e\u201c2\u5217\u201d\u5b58\u5165\u540c\u4e00\u4e2a\u96c6\u5408\u4e2d\uff0c\u7136\u540e\u628a\u6574\u4e2a\u96c6\u5408\u7684\u6743\u503c\u51cf\u4e00\u3002\n\n\u8fd9\u6837\u5b50\u4e00\u6765\uff0c\u4ee5\u540e\u518d\u7528\u5230\u8fd9\u4e2a\u96c6\u5408\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u81ea\u52a8\u9ed8\u8ba4**\u4e00\u53f7\u8282\u70b9**\u5339\u914d\u4e86\u201c2\u5217\u201d\u3002\n\n\u5c31\u50cf\u4e0a\u56fe\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u8dd1**\u4e8c\u53f7\u8282\u70b9**\u65f6\uff0c\u628a\u201c1\u5217\u201d\u52a0\u5165\u96c6\u5408\uff0c\u7136\u540e\u518d\u628a\u96c6\u5408\u6743\u503c\u51cf\u4e00\u5373\u53ef\u3002\n\n\u6700\u540e\u52a0\u5165**\u4e09\u53f7\u8282\u70b9**\u65f6\uff0c\u6211\u4eec\u4ecd\u7136\u53ea\u662f\u628a\u96c6\u5408\u6743\u503c\u51cf\u4e00\uff0c\u8868\u660e\u6211\u4eec\u53c8\u9009\u4e86\u4e00\u4e2a**\u884c\u5217\u8282\u70b9**\u3002\n\n\u8fd9\u4e48\u5199\u7684\u597d\u5904\u53ca\u6b63\u786e\u6027\u5c31\u5728\u4e8e\uff1a\n\n### \u6211\u4eec\u4e0d\u76f4\u63a5\u786e\u5b9a\u6bcf\u4e2a\u70b9\u7684\u5339\u914d\u60c5\u51b5\uff0c\u53ea\u786e\u5b9a\u5269\u4f59\u53ef\u4ee5\u88ab\u5339\u914d\u7684\u5de6\u8fb9\u8282\u70b9\u7684\u4e2a\u6570\n\n\u5c31\u662f\u9171\u7d2b\u3002\n\n## \u3010p.s.\u3011\n\u6211\u770b\u7f51\u4e0a\u5f88\u591a\u5176\u4ed6\u7684\u9898\u89e3\u90fd\u7528\u4e86$Hall$\u5b9a\u7406\uff0c\u6211\u597d\u50cf\u5b8c\u5168\u6ca1\u7528\u5230\u554a\u3002\u3002\u3002\u662f\u6211\u54ea\u4e00\u6b65\u8df3\u6b65\u4e86\u5417\u3002\u3002\u3002\uff08\u6b22\u8fce\u8bc4\u8bba\u91cc\u6307\u51fa\uff09\n\n## \u3010\u4ee3\u7801\u3011\uff08\u89c9\u5f97\u6211\u8bb2\u7684\u4e0d\u597d\u7684\u5c31\u6765\u770b\u770b\u5427\uff09\n`\u5176\u5b9e\u5f88\u77ed`\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cstdio>\nusing namespace std;\ntypedef long long LL;\nint n, h, w;\nstruct NODE{\n\tLL a;\n\tint r, c;\n\tinline bool operator < (const NODE &tmp) const\n\t{\n\t\treturn a > tmp.a;\n\t}\n}t[100010];\nint fa[200010];\nLL val[200010];\n\nint find(int x)\n{\n\tif(x == fa[x]) return x;\n\treturn fa[x] = find(fa[x]);\n}\n\n\nint main()\n{\n\tscanf(\"%d%d%d\", &n, &h, &w);\n\tfor (register int i = 1;i <= n;i ++) scanf(\"%d%d%lld\", &t[i].r, &t[i].c, &t[i].a);\n\tsort(t + 1, t + n + 1);\n\tfor (register int i = 1;i <= h + w;i ++)\n\t{\n\t\tfa[i] = i;\n\t\tval[i] = 1;//\u884c\u5217\u96c6\u5408\u7684\u539f\u6765\u6bcf\u4e2a\u8282\u70b9\u90fd\u9ed8\u8ba4\u67091\u4e2a\u7269\u54c1\u8282\u70b9\u7684\u627f\u53d7\u80fd\u529b\n\t}\n\tLL ans = 0;\n\tfor (register int i = 1;i <= n;i ++)\n\t{\n\t\tint xx = find(t[i].r), yy = find(t[i].c + h);\n\t\tif(xx == yy)\n\t\t{\n\t\t\tif(val[xx])\n\t\t\t{\n\t\t\t\tval[xx] --;\n\t\t\t\tans += t[i].a;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(val[xx] + val[yy])\n\t\t\t{\n\t\t\t\tval[xx] += val[yy];\n\t\t\t\tval[xx] --;\n\t\t\t\tfa[yy] = xx;\n\t\t\t\tans += t[i].a;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%lld\\n\", ans);\n}\n```",
        "postTime": 1594960983,
        "uid": 66511,
        "name": "DPair",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT5168 \u3010Card Collector\u3011"
    }
]