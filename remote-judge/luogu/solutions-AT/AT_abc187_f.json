[
    {
        "content": "[\u6ca1\u8bf4\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/1358id/p/15430402.html)\n\n\u72b6\u538b DP\u3002\n\n\u770b\u5230\u8fd9\u4e2a $n\\leq18$ \uff0c\u7acb\u523b\u60f3\u5230\u72b6\u538b DP\u3002\n\n\u8003\u8651\u8f6c\u79fb\u65b9\u7a0b\uff0c\u4e00\u4e2a\u72b6\u6001\u53ef\u4ee5\u7531\u4e24\u4e2a\u5b50\u72b6\u6001\u8f6c\u79fb\u800c\u6765\uff0c\u6240\u4ee5 $f_i=f_{i-j}+f_j$\u3002\n\n\u5982\u679c $i-j$ \u548c $j$ \u8fd9\u4e24\u4e2a\u72b6\u6001\u53ef\u4ee5\u5408\u5e76\uff0c\u90a3\u4e48\u7b49\u4e8e\u8bf4\u662f $i$ \u8fd9\u4e2a\u72b6\u6001\u672c\u8eab\u662f\u4e2a\u5b8c\u5168\u56fe\u3002\u90a3\u4e48\u6211\u4eec\u5224\u65ad\u4e00\u4e0b\u8fd9\u4e2a $i$ \u662f\u4e0d\u662f\u5b8c\u5168\u56fe\uff0c\u662f\u7684\u8bdd $f_i=1$\u3002\n\n\u518d\u53bb\u770b\u5982\u4f55\u5224\u65ad\u5b8c\u5168\u56fe\u3002\u663e\u7136\uff0c\u5bf9\u4e8e $i$ \u4e2d\u51fa\u73b0\u7684\u6bcf\u4e2a\u70b9\uff0c\u90fd\u4e0e $i$ \u4e2d\u6240\u6709\u70b9\u6709\u8fde\u8fb9\u3002\u90a3\u6211\u4eec\u5b58\u56fe\u7684\u65f6\u5019\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u7528\u72b6\u6001\u538b\u7f29\u7684\u65b9\u5f0f\u5b58\u50a8\u4ed6\u548c\u54ea\u4e9b\u70b9\u6709\u8fb9\u76f8\u8fde\u3002\u5224\u65ad\u7684\u65f6\u5019\u53ea\u9700\u8981\u5224\u65ad $e_u \\operatorname{and} i=i$ \u662f\u5426\u6210\u7acb\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\times 2^n)$\u3002\n\n[\u4ee3\u7801](https://paste.ubuntu.com/p/7gk5JHs36F/)",
        "postTime": 1673398264,
        "uid": 222865,
        "name": "\u8fdf\u66ae\u5929\u590d\u660e",
        "ccfLevel": 6,
        "title": "ABC187F\u9898\u89e3"
    },
    {
        "content": "\u66f4\u597d\u7684[\u9605\u8bfb\u4f53\u9a8c](https://blog.csdn.net/weixin_46700592/article/details/129416557?spm=1001.2014.3001.5502)\u3002\n\n---\n\n# \u9898\u610f\n\n\u7ed9 $n$ \u4e2a\u70b9\uff08$n\\leq18$\uff09\uff0c$m$ \u6761\u8fb9\uff08$m\\leq\\frac{n\\cdot(n-1)}{2}$\uff09\u4f60\u4e00\u4e2a\u7b80\u5355\u65e0\u5411\u56fe\uff0c\u5220\u53bb\u4e00\u4e9b\u8fb9\uff08\u53ef\u4ee5\u662f $0$\uff09\uff0c\u4f7f\u5f97\u56fe\u6ee1\u8db3\u4ee5\u4e0b\u6027\u8d28\uff1a\n\n- \u4efb\u610f\u4e24\u70b9 $a$\uff0c$b$\uff0c\u5982\u679c $a$\uff0c$b$ \u8fde\u901a\uff0c\u90a3\u4e48 $a$\uff0c$b$ \u4e4b\u95f4\u6709\u8fb9\u3002\n\n\u6c42\u6ee1\u8db3\u6761\u4ef6\u6700\u5c11\u7684\u8fde\u901a\u5757\u6570\u91cf\u3002\n# \u601d\u8def\n\n\u9898\u76ee\u6570\u636e\u5f88\u5c0f\uff0c\u72b6\u538b\u8d70\u8d77\uff01\n\n\u9996\u5148\u6211\u4eec\u8bbe $f_v$ \u8868\u793a\u5f53\u9876\u70b9\u96c6\u5408\u4e3a $v$ \u65f6\uff0c\u6700\u5c11\u7684\u8fde\u901a\u5757\u6570\u91cf\u3002\n\n\u7136\u540e\u6211\u4eec\u5148\u66b4\u529b\u679a\u4e3e\u70b9\u96c6 $v$\uff0c\u5224\u65ad\u8fd9\u4e2a\u70b9\u96c6 $v$ \u662f\u5426\u4e3a\u5b8c\u5168\u56fe\u3002\n\n\u6b64\u65f6\u6211\u4eec\u60f3\u600e\u4e48\u8f6c\u79fb\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5f53 $v'$ \u4e3a $v$ \u7684\u5b50\u96c6\u65f6\uff0c$f_v=\\min(f_{v'}+f_{v-v'})$\u3002\n\n\u6240\u4ee5\u6b64\u65f6\u6211\u4eec\u5c31\u8981\u679a\u4e3e $v'$\u3002\n\n\u6211\u4eec\u5148\u628a $v'=v$\uff0c\u7136\u540e\u6211\u4eec\u63a5\u4e0b\u6765\u6bcf\u6b21\u90fd\u628a $v'=(v'-1)\\operatorname{and}v$\uff0c\u6b64\u65f6 $(v'-1)\\operatorname{and}v$ \u80af\u5b9a\u662f $v$ \u7684\u5b50\u96c6\uff0c\u56e0\u4e3a\u5982\u679c $v'-1$ \u4e2d\u4e8c\u8fdb\u5236\u4e0b\u6709\u4e00\u4f4d\u4e3a $1$ \u4e14 $v$ \u7684\u8fd9\u4e00\u4f4d\u4e3a $0$\uff0c\u90a3\u4e48\u5728 $(v'-1)\\operatorname{and} v$ \u7684\u65f6\u5019\u8fd9\u4e2a $1$ \u5c31\u4e0d\u89c1\u4e86\uff0c\u56e0\u4e3a $1\\operatorname{and}0=0$\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u7b97\u4e00\u4e0b\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n\n\u5728\u679a\u4e3e $v'$ \u7684\u65f6\u5019\uff0c\u56e0\u4e3a $v$ \u548c $v'$ \u7684\u5728\u4e8c\u8fdb\u5236\u4e0b\u6bcf\u4e00\u4f4d\u7684\u5173\u7cfb\u53ea\u6709\u4e09\u79cd\u60c5\u51b5\uff0c$1/0$\uff0c$1/1$\uff0c$0/0$\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u628a\u6240\u6709\u679a\u4e3e\u7684\u60c5\u51b5\u4e58\u8d77\u6765\uff0c\u5c31\u662f $3^n$\uff0c\u867d\u7136 $3^n > 3 \\times 10^8$\uff0c\u4f46\u662f\u56e0\u4e3a\u5e38\u6570\u5f88\u5c0f\uff0c\u6240\u4ee5\u8fd8\u662f\u53ef\u4ee5\u8fc7\u3002\n\n# \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,mp[25][25],f[2621445];\nint main() {\n    int u,v;\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++)\n        scanf(\"%d%d\",&u,&v),mp[u][v]=mp[v][u]=1;\n    bool flag;\n    memset(f,0x3f,sizeof(f));\n    f[0]=0;\n    for(int i=1;i<=(1<<n)-1;i++) {\n        flag=true;\n        for(int j=1;j<n;j++)\n            if((i>>(j-1))&1)\n                for(int l=j+1;l<=n;l++)\n                    if((i>>(l-1))&1&&(!mp[j][l])) {\n                        flag=false;\n                        break;\n                    }\n        if(flag)\n            f[i]=1;\n    }\n    for(int i=1;i<=(1<<n)-1;i++)\n        for(int j=i;j;j=(j-1)&i)\n            f[i]=min(f[i],f[j]+f[i^j]);\n    printf(\"%d\",f[(1<<n)-1]);\n    return 0;\n}\n```\n",
        "postTime": 1681127100,
        "uid": 363139,
        "name": "konjac_HZX",
        "ccfLevel": 7,
        "title": "Atcoder ABC 187 F - Close Group \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9898\u6b63\u89e3\u662f\u72b6\u538b\uff0c\u4f46\u9898\u89e3\u91cc\u7ed9\u51fa\u4e86\u53e6\u4e00\u4e2a\u505a\u6cd5\u3002\n\n\u672c\u9898\u7b54\u6848\u4e3a\u8865\u56fe\u7684\u6700\u5c0f\u8272\u6570\u3002\n\n\u8bc1\u660e\uff1a\u5982\u679c\u539f\u56fe\u4e2d\u4e24\u70b9\u6709\u8fb9\u5219\u53ef\u4ee5\u67d3\u4e0a\u76f8\u540c\u989c\u8272\uff0c\u5426\u5219\u4e00\u5b9a\u8bf4\u660e\u8fd9\u6761\u8fb9\u88ab\u79fb\u9664\u4e86\u3002\u5426\u5219\u663e\u7136\u4e24\u4e2a\u70b9\u4e0d\u80fd\u6d82\u4e00\u6837\u7684\u989c\u8272\u3002\n\n\u89c2\u5bdf\u5230\u4e0a\u8ff0\u95ee\u9898\u8f6c\u5316\u5230\u8865\u56fe\u4e0a\u5c31\u662f\u56fe\u4e0a\u4efb\u610f\u4e00\u6761\u8fb9\u4e0d\u80fd\u67d3\u4e0a\u4e00\u6837\u7684\u989c\u8272\uff0c\u4e8e\u662f\u53d8\u4e3a\u56fe\u7684\u6700\u5c0f\u8272\u6570\u95ee\u9898\u3002\n\n\u66b4\u529b\u5efa\u51fa\u8865\u56fe\u4e4b\u540e\u679a\u4e3e\u989c\u8272\u6570\uff0c\u5c1d\u8bd5\u5bf9\u6bcf\u4e2a\u70b9\u7528 dfs \u8fdb\u884c\u6a21\u62df\u67d3\u8272\u8fc7\u7a0b\uff0c\u5982\u679c\u4e0d\u5408\u6cd5\u5219\u589e\u52a0\u989c\u8272\u6570\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u4f1a\u7b97\uff0c\u4f46\u662f\u56e0\u4e3a\u70b9\u6570\u5f88\u5c0f\u6240\u4ee5\u80fd\u901a\u8fc7\u3002\u76ee\u524d\u662f\u6700\u4f18\u89e3\u3002\n\n\u5f53\u7136\u6700\u5c0f\u8272\u6570\u95ee\u9898\u80fd\u5728 $ \\mathcal{O}(2^n \\times n) $ \u7684\u7cbe\u786e\u590d\u6742\u5ea6\u5185\u89e3\u51b3\uff0c\u6b64\u5904\u4e0d\u8be6\u8ff0\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\nusing namespace std;\nint map[110][110]={0};\nint v=4;\nint color[110]={0};\nint result=10000; \nint ok(int depth,int c)\n{\n\tfor(int i=1;i<=v;i++)\n    {\n\t\tif(map[i][depth]==1||map[depth][i]==1)\n        {\n\t\t\tif(color[i]==c)\n\t\t\t\treturn 0;\n\t\t\tif(color[i]==0)\n\t\t\t\tcontinue;\n\t\t}\n\t}\n\treturn 1;\n} \nvoid  dfs(int depth,int color_s)\n{\n\tif(color_s>=result)\n\t\treturn ;\n\tif(depth>v)\n    {    \n\t\tresult=result<color_s?result:color_s;\n\t\treturn ;\n\t}\n\tfor(int i=1;i<=color_s;i++)\n    {\n\t\tif(ok(depth,i)==1)\n        {\n\t\t\tcolor[depth]=i;\n\t\t\tdfs(depth+1,color_s);\n\t\t\tcolor[depth]=0;\n\t\t}\t\n\t}\n\tcolor[depth]=color_s+1;\n\tdfs(depth+1,color_s+1);\n\tcolor[depth]=0;\t\n}\nint main()\n{\n\tcin>>v;\n    int m;\n    cin>>m;\n    while(m--)\n    {\n    int u,v;\n    cin>>u>>v;\n    map[u][v]=map[v][u]=1;\n    }\n    for(int i=1;i<=v;i++)\n    for(int j=1;j<=v;j++)\n    if(i!=j)\n    map[i][j]^=1;\n\tdfs(1,0);\n\tcout<<result;\n}\n```\n",
        "postTime": 1671631387,
        "uid": 714821,
        "name": "loser_seele",
        "ccfLevel": 4,
        "title": "ABC187F\u9898\u89e3"
    }
]