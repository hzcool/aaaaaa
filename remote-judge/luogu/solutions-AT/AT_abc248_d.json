[
    {
        "content": "\u672c\u9898\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u7b97\u6cd5\u3002\n\n\u5177\u4f53\u5730\uff0c\u7528\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4 $v$ \u6765\u5b58\u50a8\u6bcf\u4e2a\u6570\u5728\u6570\u5217\u4e2d\u7684\u4f4d\u7f6e\u3002\u4f8b\u5982\uff0c\u6570\u5217\u4e3a $1,2,3,2,6$\uff0c\u90a3\u4e48 $v_2=\\{2,4\\}$\u3002\n\n\u6bcf\u6b21\u8be2\u95ee\uff0c\u5c31\u7528\u4e8c\u5206\u7b97\u6cd5\u627e\u5230 $v_X$ \u4e2d\u5927\u4e8e\u7b49\u4e8e $L$ \u7684\u7b2c\u4e00\u4e2a\u6570\u4ee5\u53ca**\u5927\u4e8e** $R$ \u7684\u7b2c\u4e00\u4e2a\u6570\u3002\u5c06\u4e24\u4e2a\u6570\u7684\u4e0b\u6807\u76f8\u51cf\uff0c\u5373\u4e3a\u533a\u95f4\u4e2d\u5305\u542b $X$ \u7684\u4e2a\u6570\u3002\u4e8c\u5206\u53ef\u4ee5\u4f7f\u7528 `lower_bound` \u548c `upper_bound` \u5b9e\u73b0\u3002\n\n\u653e\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<vector>\n#include<algorithm>\nusing namespace std;\nint a[200001];\nvector<int> v[200001];\nint main(){\n    ios::sync_with_stdio(false);\n    int n; cin>>n;\n    for(int i=1;i<=n;i++)cin>>a[i],v[a[i]].push_back(i);\n    int q; cin>>q;\n    while(q--){\n        int l,r,x,c=0; cin>>l>>r>>x;\n        int ll=lower_bound(v[x].begin(),v[x].end(),l)-v[x].begin(),\\\n            rr=upper_bound(v[x].begin(),v[x].end(),r)-v[x].begin();\n        cout<<rr-ll<<endl;\n    }\n    return 0;\n}\n```",
        "postTime": 1667384171,
        "uid": 556366,
        "name": "zyc212303",
        "ccfLevel": 5,
        "title": "[ABC248D] Range Count Query \u9898\u89e3"
    },
    {
        "content": "# abc 248 d\n\n[AT \u94fe\u63a5](https://atcoder.jp/contests/abc248/tasks/abc248_d)\n\n[\u6d1b\u8c37\u94fe\u63a5](https://www.luogu.com.cn/problem/AT_abc248_d)\n\n## \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $A$\uff0c\u6709 $Q$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u5b9a\u4e09\u4e2a\u6574\u6570 $l, r, x$\uff0c\u8bf7\u4f60\u6c42\u51fa\u5728 $A_l \\sim A_r$ \u4e2d\u6709\u591a\u5c11\u4e2a\u503c\u7b49\u4e8e $x$ \u7684\u6570\u3002\n\n## \u601d\u8def\n\n### \u66b4\u529b\n\n\u6bcf\u6b21\u8be2\u95ee\u76f4\u63a5\u66b4\u529b\u4ece $l$ \u5faa\u73af\u5230 $r$\uff0c\u7edf\u8ba1\u6570\u91cf\u3002\n\n### \u6b63\u89e3\n\n\u5bf9\u4e8e\u6bcf\u4e2a $i \\ (1 \\le x \\le n)$\uff0c\u90fd\u7528\u4e00\u4e2a `vector` \u8bb0\u5f55\u5b83\u7684\u6240\u6709\u51fa\u73b0\u4f4d\u7f6e\uff0c\u6211\u4eec\u628a\u8fd9\u4e2a `vector` \u79f0\u4e3a $pos_i$\uff0c\u5e76\u4e14\u9700\u8981\u4fdd\u8bc1\u6bcf\u4e2a $pos_i$ \u5185\u90e8\u662f\u5355\u8c03\u7684\u3002\n\n\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\uff0c\u4e8c\u5206\u67e5\u627e $pos_x$ \u4e2d\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e $l$ \u548c\u7b2c\u4e00\u4e2a\u5927\u4e8e $r$ \u7684\u6570\uff0c\u5e76\u5c06\u4e24\u4e2a\u7684\u4e0b\u6807\u76f8\u51cf\u5373\u53ef\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 2e5 + 10;\n\nint n, a[N], q, l, r, x;\nvector<int> pos[N];\n\nint main() {\n  ios::sync_with_stdio(0), cin.tie(0);\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> a[i];\n    pos[a[i]].push_back(i);\n  }\n  cin >> q;\n  for (int i = 1; i <= q; i++) {\n    cin >> l >> r >> x;\n    auto _r = upper_bound(pos[x].begin(), pos[x].end(), r);\n    auto _l = lower_bound(pos[x].begin(), pos[x].end(), l);\n    cout << _r - _l << '\\n';\n  }\n  return 0;\n}\n```",
        "postTime": 1682307900,
        "uid": 658291,
        "name": "chengning0909",
        "ccfLevel": 4,
        "title": "abc 248 d \u9898\u89e3"
    },
    {
        "content": "\u4f60\u8bf4\u5f97\u5bf9\uff0c\u4f46\u662f\u6211\u592a\u83dc\u4e86\u60f3\u4e0d\u5230\u6b63\u89e3\uff0c\u4e8e\u662f\u5c31\u5957\u4e86\u4e2a\u677f\u5b50\u3002\n\n\u53c2\u8003 [\u8fd9\u9898](https://www.luogu.com.cn/blog/Karry5307/solution-sp3266) \u7684\u601d\u8def\uff0c\u89c2\u5bdf\u5230\u533a\u95f4\u5185 $ =x $ \u7684\u6570\u76f8\u5f53\u4e8e $ >x-2 $ \u7684\u7b54\u6848\u51cf\u53bb $ >x-1 $ \u7684\u7b54\u6848\uff08\u8f6c\u5316\u4e3a $ \\geq x-1 $ \u51cf\u53bb $ \\geq x $\uff0c\u662f\u4e00\u4e2a\u524d\u7f00\u548c\u7684\u5f62\u5f0f\uff0c\u8fd9\u662f\u663e\u7136\u7684\uff09\u3002\u5982\u679c\u5c06\u6240\u6709\u6570\u96c6\u4f53 $ +1 $ \uff08\u4e3a\u4e86\u65b9\u4fbf\u5904\u7406\u8d1f\u4e0b\u6807\uff09\uff0c\u90a3\u4e48\u5c31\u8f6c\u5316\u4e3a $ >x-1 $ \u7684\u7b54\u6848\u51cf\u53bb $ >x $ \u7684\u7b54\u6848\u3002\u4e8e\u662f\u5957\u7528\u8fd9\u9898\u7684\u677f\u5b50\u5373\u53ef\u3002\n\n\u90a3\u4e48\u8003\u8651\u8fd9\u9898\u600e\u4e48\u505a\uff0c\u501f\u9274\u4e86 [\u5361\u8001\u5e08\u7684\u9898\u89e3](https://www.luogu.com.cn/blog/Karry5307/solution-sp3266)\uff0c\u79bb\u7ebf\u505a\u6cd5\u3002\u4e0d\u61c2\u7684\u4e5f\u53ef\u4ee5\u7ffb\u8fd9\u7bc7\u3002\n\n\u9996\u5148\u63d2\u5165\u6240\u6709\u6570\uff0c\u7136\u540e\u5c06\u6240\u6709\u5927\u4e8e $ x $ \u7684\u6570\u63d2\u5165\u8fdb\u6765\u7edf\u8ba1\u7b54\u6848\u3002\u56e0\u4e3a\u6734\u7d20\u505a\u6cd5\u8981\u652f\u6301\u5220\u9664\u64cd\u4f5c\u6240\u4ee5\u56f0\u96be\uff0c\u4f46\u53ef\u4ee5\u4e0d\u5220\u9664\uff0c\u6309 $ x $ \u7684\u5927\u5c0f\u6392\u5e8f\u540e\u4ece\u5c0f\u5230\u5927\u63d2\u5165\u5373\u53ef\uff0c\u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u5220\u9664\u4e86\u3002\n\n\u5355\u70b9\u4fee\u6539\u533a\u95f4\u6c42\u548c\uff0c\u8fd9\u91cc\u7528\u4e86 LCT \u5b9e\u73b0\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $ \\mathcal{O}(m\\log{n}) $\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\u6ce8\u610f\u975e\u6b63\u6570\u4e0b\u6807\u7684\u5904\u7406\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst ll MAXN=4e5+51;\nconst int maxn=4e5+10;\nconst ll mod=1e9;\nint n,q,u,v,c;\nchar op;\nstruct Splay\n{\n    int ch[maxn][2],fa[maxn],siz[maxn],val[maxn],sum[maxn],add[maxn],mul[maxn],rev[maxn];\n    void clear(int x)\n    {\n        ch[x][0]=ch[x][1]=fa[x]=siz[x]=val[x]=sum[x]=add[x]=rev[x]=0;\n        mul[x]=1;\n    }\n    int getch(int x)\n    {\n        return (ch[fa[x]][1]==x);\n    }\n    int isroot(int x)\n    {\n        clear(0);\n        return ch[fa[x]][0]!=x&&ch[fa[x]][1]!=x;\n    }\n    void maintain(int x)\n    {\n        clear(0);\n        siz[x]=(siz[ch[x][0]]+1+siz[ch[x][1]])%mod;\n        sum[x]=(sum[ch[x][0]]+val[x]+sum[ch[x][1]])%mod;\n    }\n    void pushdown(int x)\n    {\n        clear(0);\n        if(mul[x]!=1)\n        {\n            if(ch[x][0])\n            mul[ch[x][0]]=(mul[x]*mul[ch[x][0]])%mod,val[ch[x][0]]=(val[ch[x][0]]*mul[x])%mod,sum[ch[x][0]]=(sum[ch[x][0]]*mul[x])%mod,add[ch[x][0]]=(add[ch[x][0]]*mul[x])%mod;\n            if(ch[x][1])\n            mul[ch[x][1]]=(mul[x]*mul[ch[x][1]])%mod,val[ch[x][1]]=(val[ch[x][1]]*mul[x])%mod,sum[ch[x][1]]=(sum[ch[x][1]]*mul[x])%mod,add[ch[x][1]]=(add[ch[x][1]]*mul[x])%mod;\n            mul[x]=1;\n        }\n        if(add[x])\n        {\n            if(ch[x][0])\n            add[ch[x][0]]=(add[ch[x][0]]+add[x])%mod,val[ch[x][0]]=(val[ch[x][0]]+add[x])%mod,sum[ch[x][0]]=(sum[ch[x][0]]+add[x]*siz[ch[x][0]])%mod;\n            if(ch[x][1])\n            add[ch[x][1]]=(add[ch[x][1]]+add[x])%mod,val[ch[x][1]]=(val[ch[x][1]]+add[x])%mod,sum[ch[x][1]]=(sum[ch[x][1]]+add[x]*siz[ch[x][1]])%mod;\n            add[x]=0;\n        }\n        if(rev[x])\n        {\n            if(ch[x][0])\n            rev[ch[x][0]]^=1,swap(ch[ch[x][0]][0],ch[ch[x][0]][1]);\n            if(ch[x][1])\n            rev[ch[x][1]]^=1,swap(ch[ch[x][1]][0],ch[ch[x][1]][1]);\n            rev[x]=0;\n        }\n    }\n    void update(int x)\n    {\n        if(!isroot(x))\n        update(fa[x]);\n        pushdown(x);\n    }\n    void rotate(int x)\n    {\n        int y=fa[x],z=fa[y],chx=getch(x),chy=getch(y);\n        fa[x]=z;\n        if(!isroot(y))\n        ch[z][chy]=x;\n        ch[y][chx]=ch[x][chx^1];\n        fa[ch[x][chx^1]]=y;\n        ch[x][chx^1]=y;\n        fa[y]=x;\n        maintain(y);\n        maintain(x);\n        maintain(z);\n    }\n    void splay(int x)\n    {\n        update(x);\n        for(int f=fa[x];f=fa[x],!isroot(x);rotate(x))\n        if(!isroot(f))\n        rotate(getch(x)==getch(f)?f:x);\n    }\n    void access(int x)\n    {\n        for(int f=0;x;f=x,x=fa[x])\n        splay(x),ch[x][1]=f,maintain(x);\n    }\n    void makeroot(int x)\n    {\n        access(x);\n        splay(x);\n        swap(ch[x][0],ch[x][1]);\n        rev[x]^=1;\n    }\n    int find(int x)\n    {\n        access(x);\n        splay(x);\n        while(ch[x][0])\n        x=ch[x][0];\n        splay(x);\n        return x;\n    }\n    void final_mul(int u,int v,int c)\n    {\n    makeroot(u), access(v), splay(v);\n      val[v] = val[v] * c % mod;\n      sum[v] = sum[v] * c % mod;\n      mul[v] = mul[v] * c % mod;\n    }\n    void final_add(int u,int v,int c)\n    {\n    makeroot(u), access(v), splay(v);\n      val[v] = (val[v] + c) % mod;\n      sum[v] = (sum[v] + siz[v] * c % mod) % mod;\n      add[v] = (add[v] + c) % mod;\n    }\n    int query1(int u,int v)\n    {\n    if(v==0)\n    return 0;\n    makeroot(u), access(v), splay(v);\n    return sum[v];\n    }\n    void link(int u,int v)\n    {\n    if (find(u) != find(v)) \n    makeroot(u), fa[u] = v;\n    }\n    void cut(int u,int v)\n    {\n    makeroot(u);\n      access(v);\n      splay(v);\n      if (ch[v][0] == u && !ch[u][1]) \n      ch[v][0] = fa[u] = 0;\n    }\n    bool query2(int u,int v)\n    {\n    return find(u) == find(v);\n    }\n}st;\nint find(int x)\n{\nreturn st.find(x);\n}\nvoid merge(int u,int v)\n{\nst.link(u,v);\n}\nvoid clean(int n)\n{\nfor(int i=1;i<=n;i++)\nst.clear(i),st.maintain(i),st.splay(i);\n}//main\nstruct Item{\n\tll val,id;\n\tinline bool operator <(const Item &rhs)const\n\t{\n\t\treturn val>rhs.val;\n\t}\n};\nstruct Query{\n\tll l,r,val,id;\n\tinline bool operator <(const Query &rhs)const\n\t{\n\t\treturn val>rhs.val;\n\t}\n};\nItem it[MAXN];\nQuery qry[MAXN];\nll qcnt,l,r,x,ptr;\nll res[MAXN];\ninline ll read()\n{\n    register ll num=0,neg=1;\n    register char ch=getchar();\n    while(!isdigit(ch)&&ch!='-')\n    {\n        ch=getchar();\n    }\n    if(ch=='-')\n    {\n        neg=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch))\n    {\n        num=(num<<3)+(num<<1)+(ch-'0');\n        ch=getchar();\n    }\n    return num*neg;\n}\nint main()\n{\n\tn=read();\n    clean(4e5);\n    for(int i=1;i<=4e5-1;i++)\n    merge(i,i+1);\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tx=read(),x++,it[i]=(Item){x,i};\n\t}\n\tqcnt=read();\n    qcnt*=2;\n\tfor(register int i=1;i<=qcnt;i++)\n\t{\n\t\tl=read(),r=read(),x=read(),qry[i]=(Query){l,r,x,i};\n        i++;\n        int lstl=l,lstr=r,lstx=x;\n        l=lstl,r=lstr,x=lstx,x++,qry[i]=(Query){l,r,x,i};\n        //cout<<l<<' '<<r<<' '<<x<<'\\n';\n\t}\n    //=x -> (>x-1) - (>x)\n\tsort(it+1,it+n+1),sort(qry+1,qry+qcnt+1),ptr=1;\n\tfor(register int i=1;i<=qcnt;i++)\n\t{\n\t\twhile(it[ptr].val>qry[i].val)\n\t\t{\n\t\t\tst.final_add(it[ptr].id,it[ptr].id,1),ptr++;\n\t\t}\n\t\tres[qry[i].id]=st.query1(1,qry[i].r)-st.query1(1,qry[i].l-1);\n\t}\n\tfor(register int i=1;i<=qcnt;i+=2)\n\t{\n\t\tprintf(\"%d\\n\",res[i]-res[i+1]);\n\t}\n}\n\n```\n",
        "postTime": 1672117515,
        "uid": 714821,
        "name": "loser_seele",
        "ccfLevel": 4,
        "title": "ABC248D\u9898\u89e3"
    },
    {
        "content": "# \u601d\u8def\n\n\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6240\u6709\u6570\u503c\u76f8\u540c\u7684\u503c\u7684\u4e0b\u6807\u5b58\u5165\u4e00\u4e2a `vector` \u91cc\u9762\u3002\u56e0\u4e3a\uff0c\u6211\u4eec\u65e2\u7136\u8981\u67e5\u627e $X$\uff0c\u4e0d\u59a8\u628a\u6240\u6709\u503c\u4e3a $X$ \u7684\u4e0b\u6807\u5b58\u5728\u4e00\u8d77\uff0c\u65b9\u4fbf\u67e5\u627e\u3002\uff08\u53ef\u4ee5\u5728\u8f93\u5165\u7684\u65f6\u5019\u5b8c\u6210\uff09\n\n\u6211\u4eec\u4e0d\u59a8\u5728\u6bcf\u4e00\u4e2a\u6570\u503c\u540e\u9762\u6dfb\u52a0\u4e00\u4e2a\u54e8\u5175\uff0c\u7136\u540e\u4e8c\u5206\u67e5\u627e\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e $l$ \u7684\u6570\u548c\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e $r + 1$ \u7684\u6570\uff0c\u518d\u628a\u4e24\u6570\u76f8\u51cf\u5373\u4e3a\u7b54\u6848\u3002\n\n\u8fd9\u65f6\u5019\uff0c\u54e8\u5175\u7684\u4f5c\u7528\u5c31\u4f53\u73b0\u51fa\u6765\u4e86\uff0c\u5982\u679c\u6211\u4eec\u7684\u7b2c\u4e8c\u4e2a\u6570\u53d6\u5230\u4e86\u54e8\u5175\uff0c\u90a3\u4e48\u8bf4\u660e $l \\sim r$ \u662f\u5728\u6700\u540e\u7684\uff0c\u6211\u4eec\u5c06\u5b83\u8bbe\u4e3a $\\operatorname{size}(v_x) + 1$ \u5373\u53ef\u3002\n\n# code\n\n```cpp\n#include <bits/stdc++.h>\n#define re register\n\nusing namespace std;\n\nconst int N = 2e5 + 10,inf = 1e6 + 10;\nint n,q,Max;\nvector<int> v[N];\n\ninline int read(){\n\tint r = 0,w = 1;\n\tchar c = getchar();\n\twhile (c < '0' || c > '9'){\n\t\tif (c == '-') w = -1;\n\t\tc = getchar();\n\t}\n\twhile (c >= '0' && c <= '9'){\n\t\tr = (r << 3) + (r << 1) + (c ^ 48);\n\t\tc = getchar();\n\t}\n\treturn r * w;\n}\n\nint main(){\n\tn = read();\n\tfor (re int i = 1;i <= n;i++){\n\t\tint x;\n\t\tx = read();\n\t\tMax = max(Max,x);\n\t\tv[x].push_back(i);\n\t}\n\tfor (re int i = 1;i <= Max;i++) v[i].push_back(inf);//\u54e8\u5175 \n\tq = read();\n\twhile (q--){\n\t\tint l,r,x;\n\t\tl = read();\n\t\tr = read();\n\t\tx = read();\n\t\tint a = lower_bound(v[x].begin(),v[x].end(),l) - v[x].begin();//\u4e8c\u5206\u67e5\u627e \n\t\tint b = lower_bound(v[x].begin(),v[x].end(),r + 1) - v[x].begin();//\u8fd9\u91cc\u8c8c\u4f3c\u4e5f\u53ef\u4ee5\u7528 upper_bound \n\t\tif (b == inf) b = v[x].size() + 1;//\u53d6\u5230\u54e8\u5175 \n\t\tprintf(\"%d\\n\",b - a);//\u8f93\u51fa\u7ed3\u679c \n\t}\n\treturn 0;\n}\n```",
        "postTime": 1671103897,
        "uid": 383395,
        "name": "WaterSun",
        "ccfLevel": 5,
        "title": "[\u9898\u89e3]AT_abc248_d [ABC248D] Range Count Query"
    }
]