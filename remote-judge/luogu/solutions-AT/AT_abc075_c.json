[
    {
        "content": "## \u6838\u5fc3\u7b97\u6cd5\uff1aTarjan\u6c42\u5272\u8fb9\uff08\u6865\uff09\n\n### 1.\u4ec0\u4e48\u662f\u5272\u8fb9\n\n>\u5047\u8bbe\u6709\u8fde\u901a\u56feG\uff0ce\u662f\u5176\u4e2d\u4e00\u6761\u8fb9\uff0c\u5982\u679cG-e\u662f\u4e0d\u8fde\u901a\u7684\uff0c\u5219\u8fb9e\u662f\u56feG\u7684\u4e00\u6761\u5272\u8fb9\u3002\u6b64\u60c5\u5f62\u4e0b\uff0cG-e\u5fc5\u5305\u542b\u4e24\u4e2a\u8fde\u901a\u5206\u652f\u3002\n\n\u4ee5\u4e0a\u5185\u5bb9\u6458\u81ea\u5ea6\u5a18\u767e\u79d1\u3002\n\n\u7528\u4eba\u8bdd\u6765\u8bf4\uff0c\u5c31\u662f\u56fe\u5982\u679c\u53bb\u6389\u8fd9\u6761\u8fb9\uff0c\u6574\u4e2a\u56fe\u5c31\u4e0d\u8fde\u901a\u4e86\uff0c\u90a3\u4e48\u5c31\u662f\u4e2a\u5272\u8fb9\u3002\n![](https://bkimg.cdn.bcebos.com/pic/7aec54e736d12f2e30ff62944fc2d56284356848?x-bce-process=image/watermark,g_7,image_d2F0ZXIvYmFpa2U4MA==,xp_5,yp_5)\n\n\u56fe\u4e2d\u7684$v_3,v_4$\u548c$v_4,v_5$\u8fd9\u4e24\u6761\u8fb9\u5c31\u662f\u5272\u8fb9\n\n\n------------\n\n### 2.\u5e38\u7528\u7b97\u6cd5\n\n**Tarjan**\n\n\n------------\n\n### 3.\u600e\u4e48\u6c42\u5272\u8fb9\n\n1. \u524d\u7f6e\u77e5\u8bc6\uff1a\u5173\u4e8eTarjan\u7b97\u6cd5\n\n\u5728Tarjan\u7b97\u6cd5\u4e2d\uff0c\u6bcf\u4e2a\u70b9\u6709\u4e24\u4e2a\u5341\u5206\u91cd\u8981\u7684\u91cf\uff0cdfn\uff0clow\n\ndfn\uff1a\u8868\u793adfs\u904d\u5386\u5230\u8be5\u8282\u70b9\u7684\u5e8f\u53f7\uff0c\u4e5f\u5c31\u662f\u987a\u5e8f\u503c\n\nlow\uff1a\u8868\u793a\u5f53\u524d\u9876\u70b9\u4e0d\u901a\u8fc7\u7236\u4eb2\u8282\u70b9\u80fd\u8bbf\u95ee\u5230\u7684\u7956\u5148\u8282\u70b9\uff08\u7236\u4eb2\u8282\u70b9\u4e0a\u9762\u7684\u8282\u70b9\uff09\u4e2d\u7684\u6700\u5c0f\u987a\u5e8f\u503c\n\n2. \u6c42\u6cd5\n\n\u7528u\u6765\u8868\u793a\u5f53\u524d\u6df1\u641c\u7684\u70b9\uff0cv\u8868\u793a\u4e0eu\u6709\u8fde\u8fb9\u7684\u70b9\n\n\u5982\u679c`low[v]==dfn[u]`\uff0c\u8868\u793a\u8fd8\u53ef\u4ee5\u56de\u5230\u7236\u4eb2\u3002\n\n\u800c`low[v]>dfn[u]`\u5219\u8868\u793a\u8fde\u7236\u4eb2\u90fd\u56de\u4e0d\u5230\u4e86\u3002\n\n\u5018\u82e5\u9876\u70b9v\u4e0d\u80fd\u56de\u5230\u7956\u5148\uff0c\u4e5f\u6ca1\u6709\u53e6\u5916\u4e00\u6761\u8def\u80fd\u56de\u5230\u7236\u4eb2\uff0c\u90a3\u4e48u-v\u5c31\u662f\u5272\u8fb9\u3002\n\n\u513f\u5b50\u8282\u70b9\u4e0d\u7ecf\u8fc7\u8fd9\u6761\u8fb9\u5c31\u53ef\u4ee5\u8bbf\u95ee\u5230\u7956\u5148\u8282\u70b9\uff0c\u90a3\u4e48\u5c31\u8981\u6ee1\u8db3\uff1a`low[v] > dfn[u]`\u3002\n\n\u5982\u679c`low[v] == dfn[u]`\uff0c\u8282\u70b9v\u8fd8\u53ef\u4ee5\u901a\u8fc7\u5176\u4ed6\u8def\u5f84\u53ef\u4ee5\u56de\u5230u\u3002\n\n\u4f46\u662f\u53ea\u5305\u542b\u6761\u4ef6`low[x] > dfn[u]`\u65f6\uff0c\u8bf4\u660e\u6ca1\u6709\u4efb\u4f55\u4e00\u6761\u8def\u53ef\u4ee5\u51fa\u4e86u-v\u8fb9\u5916\uff0c\u7531u\u5230\u8fbev\uff0c\u6b64\u65f6\u8bf4\u660e\uff0cu-v\u4e4b\u95f4\u7684\u8fb9\u4e3a\u4e00\u6761\u5272\u8fb9\u3002\n\n\u8fd9\u91cc\u6ca1\u6709Tarjan\u7b97\u6cd5\u57fa\u7840\u7684\u53ef\u80fd\u542c\u4e0d\u5927\u61c2\uff0c\u53ef\u4ee5\u53c2\u8003\u535a\u5ba2\n\n[Tarjan\u7b97\u6cd5\u6c42\u5272\u70b9\u548c\u5272\u8fb9](https://blog.csdn.net/li1615882553/article/details/84678722)\n\n[\u56fe\u7684\u5272\u70b9\u7b97\u6cd5vs\u56fe\u7684\u5272\u8fb9\u7b97\u6cd5\n](https://blog.csdn.net/wtyvhreal/article/details/43530613)\n\n\n------------\n\n### 4.\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nstruct Node\n{\n    int head,low,dfn;\n}node[55];\nstruct Edge\n{\n    int next,to;\n}edge[5005];\nint n,m,cnt,root,deep;\n//n,m\u4e3a\u70b9\u6570\uff0c\u8fb9\u6570\n//cnt\u4e3a\u94fe\u5f0f\u524d\u5411\u661f\u5efa\u56fe\u4e2d\u7684\u8fb9\u6570\u53d8\u91cf\n//root\u4e3aTarjan\u65f6\u7684\u6839\u8282\u70b9\n//deep\u4e3a\u641c\u7d22\u6df1\u5ea6\nint ans;\n//\u8bb0\u5f55\u5272\u8fb9\u6570\u91cf\uff0c\u7b54\u6848\nvoid addEdge(int u,int v)\n{\n    edge[++cnt].next=node[u].head;\n    node[u].head=cnt;\n    edge[cnt].to=v;\n}\nvoid Tarjan(int u,int father)\n{\n    node[u].dfn=node[u].low=++deep;\n    //\u66f4\u65b0\n    for(int e=node[u].head;e;e=edge[e].next)\n    {\n        int v=edge[e].to;\n        if(!node[v].dfn)\n        {\n            //v\u8fd8\u6ca1\u88ab\u641c\u7d22\u8fc7\uff0c\u5c31\u8fdb\u884c\u641c\u7d22\n            Tarjan(v,u);\n            node[u].low=min(node[u].low,node[v].low);\n            //\u66f4\u65b0low\u503c\n            if(node[u].dfn<node[v].low)ans++;\n            //\u7b26\u5408\u8fd9\u4e2a\u6761\u4ef6\uff0c\u8bc1\u660ee\u662f\u5272\u8fb9\uff0c\u7b54\u6848\u52a0\u4e00\n        }\n        else if(v!=father)\n        {\n            node[u].low=min(node[u].low,node[v].dfn);\n            //\u66f4\u65b0low\u503c\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1,a,b;i<=m;i++)\n    {\n        scanf(\"%d%d\",&a,&b);\n        addEdge(a,b);\n        addEdge(b,a);\n        //\u5207\u8bb0\u53cc\u5411\u8fb9\n    }\n    for(int i=1;i<=n;i++)\n    {\n        if(!node[i].dfn)\n        {\n            root=i;\n            Tarjan(i,root);\n        }\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1585723342,
        "uid": 203102,
        "name": "Diamiko",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 AT3596 \u3010[ABC075C] Bridge\u3011"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u5f20 $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u65e0\u5411\u8fde\u901a\u56fe\uff0c\u4fdd\u8bc1\u56fe\u65e0\u81ea\u73af\u65e0\u91cd\u8fb9\uff0c\u95ee\u8fd9\u5f20\u56fe\u4e2d\u6709\u51e0\u4e2a\u6865\u3002\n\n+ \u4ec0\u4e48\u662f\u6865\uff1f\n\n\u5982\u679c\u5220\u53bb\u56fe\u4e2d\u7684\u4e00\u6761\u8fb9\u540e\uff0c\u8fd9\u4e2a\u56fe\u4e2d\u7684\u8fde\u901a\u5757\u6570\u91cf\u4f1a\u589e\u52a0\uff0c\u5219\u8fd9\u6761\u8fb9\u5c31\u662f\u6865\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a$2 \\le N \\le 50$\uff0c$N-1 \\le M \\le \\min\\{\\frac{N(N+1)}{2},50\\}$\u3002\n\n------------\n\n### \u89e3\u6cd5\u5206\u6790\n\n\u4e0d\u4f1a Tarjan \u7684\u770b\u8fc7\u6765\u3002\n\n\u4e0a\u9762\u6865\u7684\u5b9a\u4e49\u6362\u53e5\u8bdd\u8bf4\u5176\u5b9e\u5c31\u662f\uff1a\n\n\u5982\u679c\u5220\u53bb\u56fe\u4e2d\u7684\u4e00\u6761\u8fb9\u540e\uff0c\u8fd9\u6761\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u4e0d\u8fde\u901a\uff0c\u5219\u8fd9\u6761\u8fb9\u5c31\u662f\u6865\u3002\u56e0\u4e3a\u9898\u76ee\u7ed9\u7684\u662f\u8fde\u901a\u56fe\u3002\n\n\u53c8\u770b\u5230\u8fd9\u4e2a\u600e\u4e48\u4e71\u641e\u90fd\u80fd\u8fc7\u7684\u6570\u636e\u8303\u56f4 $M \\le 50$\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5feb\u4e50\u5730\u4f7f\u7528\u5e76\u67e5\u96c6\u4e86\u3002\n\n\u6211\u4eec\u6bcf\u6b21\u679a\u4e3e\u4e00\u6761\u8fb9\u5220\u6389\uff0c\u7136\u540e\u8dd1\u4e00\u904d\u5e76\u67e5\u96c6\uff0c\u770b\u770b\u8fd9\u6761\u8fb9\u4e24\u7aef\u7684\u70b9\u662f\u5426\u8fde\u901a\uff08\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u91cc\uff09\uff0c\u5982\u679c\u4e0d\u5728\u5c31\u8bf4\u660e\u8fd9\u6761\u8fb9\u662f\u6865\uff0c\u7b54\u6848\u52a0\u4e00\u3002\n\n\u5982\u679c\u4f60\u4e0d\u4f1a\u5e76\u67e5\u96c6\uff0c\u641c\u7d22\u4e5f\u662f\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002\n\n\u4f46\u662f\u8003\u8651\u5230\u8fd9\u79cd\u89e3\u6cd5\u7684\u6548\u7387\u95ee\u9898\uff0c\u5404\u4f4d\u6709\u65f6\u95f4\u8fd8\u662f\u5c3d\u65e9\u5b66\u4e86 Tarjan \u518d\u628a\u8fd9\u9898\u5207\u4e00\u904d\u5427\u2026\u2026\n\n------------\n\n### \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define ull unsigned long long\nusing namespace std;\nconst int N=57;\nint n,m,ans,a[N][2],f[N];\nint find(int x) { return f[x]==x?x:f[x]=find(f[x]); }\nint main() {\n\tcin>>n>>m;\n\tfor (int i=1;i<=m;i++) cin>>a[i][0]>>a[i][1];\n\tfor (int i=1;i<=m;i++) {\n\t\tfor (int j=1;j<=n;j++) f[j]=j; //\u5e76\u67e5\u96c6\u521d\u59cb\u5316\n\t\tfor (int j=1;j<=m;j++) if (i!=j) f[find(a[j][0])]=find(a[j][1]); //\u52a0\u8fb9\uff0c\u5e76\u8df3\u8fc7\u6b63\u5728\u679a\u4e3e\u7684\u8fb9\n\t\tif (find(a[i][0])!=find(a[i][1])) ans++; //\u4e0d\u8fde\u901a\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```",
        "postTime": 1659680043,
        "uid": 319803,
        "name": "CarroT1212",
        "ccfLevel": 6,
        "title": "AT3596 Sol"
    },
    {
        "content": "# \u56fe\u8bba\u597d\u9898\n\n\u7ed9\u4e00\u4e2a\u56fe\uff0c\u6865\u5c31\u662f\u6307\u56fe\u4e2d\u8fd9\u6837\u7684\u8fb9\uff0c\u5220\u9664\u5b83\u4ee5\u540e\u6574\u4e2a\u56fe\u4e0d\u8fde\u901a\u3002\u3010\u5c31\u770b1\u80fd\u4e0d\u80fd\u5230\u8fbe\u5176\u4ed6\u6240\u6709\u7684\u70b9\u5c31\u53ef\u4ee5\u4e86\u3011\n\n\u672c\u9898\u5c31\u662f\u6c42\u5220\u53bb\u591a\u5c11\u6761\u8fb9\u540e\u4e0d\u8054\u901a\u7684\u88f8\u9898\u3002\uff08\u8c8c\u4f3c\u5728\u54ea\u91cc\u89c1\u8fc7\uff09\n\n(\u9898\u610f\u8fd8\u662f\u597d\u7406\u89e3\u7684\uff0c\u64cd\u4f5c\u53ef\u80fd\u5c31\u6709~~\u4e00\u70b9\u95ee\u9898~~)\n\n\u5bf9\u4e8e\u64cd\u4f5c\uff0c\u63a8\u8350\u7528**tarjan**\n\ndfn[u]\u6307\u5728dfs\u4e2d\u641c\u7d22\u5230u\u8282\u70b9\u7684\u6b21\u5e8f\u503c\uff0clow[u]\u6307dfs\u6808\u4e2du\u80fd\u8ffd\u6eaf\u5230\u7684\u6700\u65e9\u6808\u4e2d\u8282\u70b9\u4ece\u6b21\u5e8f\u53f7\u3002\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=500;\nvector<int> G[maxn];\nint dfn[maxn],low[maxn];\nint n,m,u,v,dep,ans;\n\nvoid init()\n{\n    dep=ans=0;\n    memset(dfn,0,sizeof(dfn));\n    memset(low,0,sizeof(low));\n    for(int i=0;i<=n;i++) G[i].clear();\n}\n\nvoid Tarjan(int u,int fa)\n{\n    dfn[u]=low[u]=++dep;\n    for(int i=0;i<G[u].size();i++){\n        int v=G[u][i];\n        if(!dfn[v]){\n            Tarjan(v,u);\n            low[u]=min(low[u],low[v]);\n            if(low[v]>dfn[u]) ans++;\n        }else if(v!=fa)\n            low[u]=min(low[u],dfn[v]);\n    }\n}\n\nint main()\n{\n    while(cin>>n>>m)\n    {\n        init();\n        for(int i=0;i<m;i++){\n            cin>>u>>v;\n            G[u].push_back(v);\n            G[v].push_back(u);\n        }\n        Tarjan(1,-1);\n        cout<<ans<<endl;\n    }\n    return 0;\n}\n```",
        "postTime": 1547293676,
        "uid": 100151,
        "name": "yazzkl",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT3596 \u3010Bridge\u3011"
    },
    {
        "content": "## \u524d\u8a00\r\n\r\n\u9898\u89e3\u91cc\u7adf\u7136\u6ca1\u6709\u5e76\u67e5\u96c6\u3002\r\n\r\n## \u601d\u8def\r\n\r\n\u7b80\u5355\u7684\u5e76\u67e5\u96c6\u3002\r\n\r\n\u4e00\u6761\u4e00\u6761\u8fb9\u8bd5\u3002\u4e0d\u8981\u8fd9\u6761\u8fb9\u7684\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u505a\u4e00\u6b21\u5e76\u67e5\u96c6\u540e\u8fd9\u6761\u8fb9\u8fde\u63a5\u7684\u4e24\u4e2a\u70b9\u4e0d\u662f\u8054\u901a\u7684\uff0c\u5373\u6700\u5927\u7956\u5b97\u4e0d\u540c\uff0c\u90a3\u4e48\u7b54\u6848\u52a0\u4e00\u3002\r\n\r\n## \u4ee3\u7801\r\n\r\n```cpp\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int N = 100;\r\nint n,m,ans,x[N],y[N],f[N];\r\nint find(int x)\r\n{\r\n\tif(f[x]==x) return x;\r\n\treturn f[x] = find(f[x]);\r\n}\r\nsigned main()\r\n{\r\n\tcin>>n>>m;\r\n\tfor(int i = 1;i<=n;i++)\r\n\t\tf[i] = i;\r\n\tfor(int i = 1;i<=m;i++)\r\n\t\tcin>>x[i]>>y[i];\r\n\tfor(int i = 1;i<=m;i++)\r\n\t{\r\n\t\tfor(int j = 1;j<=n;j++)\r\n\t\t\tf[j] = j;\r\n\t\tfor(int j = 1;j<=m;j++)\r\n\t\t\tif(j!=i)\r\n\t\t\t\tf[find(x[j])] = find(y[j]);\r\n\t\tif(find(x[i])!=find(y[i])) ans++;\r\n\t}\r\n\tcout<<ans;\r\n\treturn 0;\r\n}\r\n```",
        "postTime": 1685154320,
        "uid": 581316,
        "name": "pyy1",
        "ccfLevel": 0,
        "title": "AT_abc075_c [ABC075C] Bridge \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u88f8\u7684Tarjan\u6c42\u6865\u554a\u2026\u2026\u5982\u679c\u8fd8\u4e0d\u77e5\u9053\u6865\u662f\u4ec0\u4e48\uff0c\u53ef\u4ee5\u4e0acnblogs\u6216\u8005\u535a\u5ba2\u56ed\u641c\u4e00\u4e0bdalao\u7684\u535a\u5ba2\u3002\u672c\u849f\u84bb\u81f3\u4eca\u6ca1\u6709\u5199\u8fc7\u4e0e\u6865\u6709\u5173\u7684\u535a\u5ba2\u3002\n\nTarjan\uff0c\u662f\u4e00\u4e2a\u73a9DFS\u73a9\u5230\u6210\u679c\u8ba9\u4eba\u6000\u7591\u4eba\u751f\u7684\u5de8\u4f6c\uff0c\u5176\u4e2d\u5272\u70b9\u548c\u6865\uff08\u5272\u8fb9\uff09\u662f\u6700\u57fa\u7840\u7684\uff08\u8fd8\u6709BCC\uff0cEBC\u548cSCC\uff0c\u611f\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u4e0d\u77e5\u600e\u4e48\u8f6c\u8f6c\u5230\u6d1b\u8c37\u65e5\u62a5\u53bb\u53c2\u89c2\u5b66\u4e60\u4e00\u4e0b\uff09\u3002\n\n\u7528Tarjan\u7b97\u6cd5\u6c42\u5272\u8fb9\uff0c\u9996\u5148\u8981\u8dd1\u4e00\u904dDFS\uff08\u8fdeDFS\u90fd\u4e0d\u77e5\u9053\u7684\u540c\u5b66\u53ef\u4ee5\u5de6\u8f6c\u8bd5\u70bc\u573a\u53bb\u627e\u4e9b\u641c\u7d22\u9898\u7ec3\u7ec3\u624b\uff09\uff0c\u5176\u4e2d\u8bb0\u5f55\u4e24\u4e2a\u6570dfn\u548clow\uff0cdfn[u]=i\u8868\u793au\u662f\u7b2ci\u4e2a\u88ab\u8bbf\u95ee\u5230\u7684\u7ed3\u70b9\uff0clow[u]=j\u8868\u793a\u53ea\u9014\u7ecfDFS\u5230u\u7684\u65f6\u5019\u6ca1\u6709\u8bbf\u95ee\u8fc7\u7684\u7ed3\u70b9\u53ef\u4ee5\u5230\u8fbe\u7684dfn\u503c\u6700\u5c0f\u7684\u7ed3\u70b9dfn\u503c\u4e3aj\u3002\n\n\u7b80\u5355\u6765\u8bf4\uff0c\u6709\u4e00\u4e2a\u5f0f\u5b50\uff1a\n$low[u]=min\\{min\\{low[v]\\},dfn[u]\\}$\uff0c\u5176\u4e2dv\u662fu\u88ab\u8bbf\u95ee\u65f6\u6ca1\u6709\u8bbf\u95ee\u8fc7\u4e14\u4e0eu\u8fde\u901a\u7684\u7ed3\u70b9\u3002\n\n\u90a3\u4e48\u6709\u4e86\u4e24\u4e2a\u6570\u7ec4\uff0c\u600e\u4e48\u6c42\u6865\u5462\uff1f\n\n\u5982\u679c\u5bf9\u4e8eu\uff0c\u6709\u4e00\u4e2av\u4f7f\u5f97$low[v]>dfn[u]$\uff0c\u90a3\u4e48\u8fb9(u,v)\u5c31\u662f\u6865\u3002\u56e0\u4e3a\u5230\u4e86v\u4ee5\u540e\u65e0\u8bba\u600e\u4e48\u8d70\uff0c\u4e0d\u7ecf\u8fc7(u,v)\u6253\u6b7b\u4e5f\u5230\u4e0d\u4e86u\u3002\n\n\u53cc\u500d\u7ecf\u9a8c&\u66f4\u591a\u54a8\u8be2\uff1a[P3388](https://www.luogu.org/problemnew/show/P3388)\u4e0e[\u5176\u9898\u89e3\u533a](https://www.luogu.org/problemnew/solution/P3388)\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#include<vector>\nusing namespace std;\nint n,m,cnt,idx;\nint dfn[100001];\nvector<int> G[100001];\ninline int Tjcv(int u,int fa)\n{\n\tint child=0,lowu;\n\tlowu=dfn[u]=++idx;\n\tfor(int i=0,v;i<G[u].size();i++)\n\t{\n\t\tv=G[u][i];\n\t\tif(v!=fa)\n\t\t{\n\t\t\tif(!dfn[v])\n\t\t\t{\n\t\t\t\t++child;\n\t\t\t\tint lowv=Tjcv(v,u);\n\t\t\t\tlowu=min(lowu,lowv);\n\t\t\t\tif(lowv>dfn[u])\n\t\t\t\t{\n\t\t\t\t\t++cnt;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlowu=min(lowu,dfn[v]);\n\t\t\t}\n\t\t}\n\t}\n\treturn lowu;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=0,u,v;i<m;i++) \n\t{\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tG[u].push_back(v);\n\t\tG[v].push_back(u);\n\t}\n\tfor(int i=1;i<=n;i++) \n\t{\n\t\tif(!dfn[i])\n\t\t{\n\t\t\tTjcv(i,-1);\n\t\t}\n\t}\n\tprintf(\"%d\\n\",cnt);\n\treturn 0;\n}\n```",
        "postTime": 1553606932,
        "uid": 59388,
        "name": "VinstaG173",
        "ccfLevel": 7,
        "title": "\u9898\u89e3\uff1aAT3596 Bridge"
    },
    {
        "content": "~~\u6253\u8868\u51fa\u5947\u8ff9\uff0c\u7206\u641c\u8fc7\u6837\u4f8b~~\n# \u4e00\u5b9a\u662f\u6076\u610f\u8bc4\u5206\uff01\n# \u4e00\u5b9a\u662f\u6076\u610f\u8bc4\u5206\uff01\n# \u4e00\u5b9a\u662f\u6076\u610f\u8bc4\u5206\uff01\n# \u88f8\u7684DFS\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,x[15005],y[15005];\nbool vis[15005];\nvector<int> g[15005];\nlong long ans;\nvoid dfs(int x)\n{\n    if(vis[x])\n        return;\n    vis[x]=1;\n    for(int i=0;i<g[x].size();i++)\n        dfs(g[x][i]);//\u679a\u4e3e\u6240\u6709\u8fb9\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    cin>>n>>m;\n    for(int i=1;i<=m;i++)\n        cin>>x[i]>>y[i];\n    for(int i=1;i<=m;i++)\n    {\n        memset(vis,0,sizeof(vis));\n        for(int j=1;j<=n;j++)\n            g[j].clear();\n        for(int j=1;j<=m;j++)\n            if(j!=i)\n            {\n                g[x[j]].push_back(y[j]);\n                g[y[j]].push_back(x[j]);//\u6784\u56fe\n            }\n        int cnt=0;\n        for(int j=1;j<=n;j++)\n            if(!vis[j])\n            {\n                dfs(j);\n                cnt++;\n            }\n        if(cnt>1)\n            ans++;//\u8fb9\u6570\u7684\u4e2a\u6570\uff08CNT\uff09\n    }\n    cout<<ans;\n    return 0;\n}\n```\n",
        "postTime": 1559389216,
        "uid": 98489,
        "name": "rng_59",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT3596 \u3010Bridge\u3011"
    }
]