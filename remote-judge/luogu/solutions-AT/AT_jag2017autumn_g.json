[
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\u819c\u62dc\u4e00\u4f4d\u9713\u8679\u5927\u4f6c[%%%%](https://www.hamayanhamayan.com/entry/2017/11/21/121449)\n\n\u70b9\u51fb\u535a\u5ba2\u53d1\u73b0\u65b0\u4e16\u754c[2333](https://haijeng.github.io/2019/09/01/Coin-Slider/)\n\n\u5e73\u9762\u4e0a\u6709\u4e00\u5806\u4e0d\u91cd\u53e0\u7684\u786c\u5e01.\n\n\u7ed9\u5b9a\u786c\u5e01\u7684\u8d77\u70b9\u548c\u7ec8\u70b9,\u95ee\u6700\u591a\u53ef\u4ee5\u628a\u591a\u5c11\u4e2a\u786c\u5e01\u4ece\u8d77\u70b9\u76f4\u7ebf\u79fb\u52a8\u5230\u7ec8\u70b9,\u4e14\u4e0d\u4f1a\u4e0e\u5176\u4ed6\u786c\u5e01\u78b0\u649e.\n## \u89e3\u6790\n\u72b6\u538b$dp$+\u8ba1\u7b97\u51e0\u4f55\n\n\u4e00\u4e2a\u786c\u5e01\u80fd\u5426\u79fb\u52a8\u7684\u6761\u4ef6\u4e3a:\u7b2c$i$\u679a\u786c\u5e01\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\u7684\u8fde\u7ebf$L$,\u4e0e\u7b2c$j$\u4e2a\u786c\u5e01\u4e2d\u5fc3\u7684\u8ddd\u79bb$d$\u662f\u5426\u5927\u4e8e\u8fd9\u4fe9\u4e2a\u786c\u5e01\u534a\u5f84\u7684\u548c.\n\n\u5373$distance(L,O_j)<r_j+r_i$\n\n\u5c06\u6bcf\u4e00\u4e2a\u786c\u5e01\u662f\u5426\u79fb\u52a8\u8fc7\u538b\u7f29\u4e3a$0$\u548c$1$,\u6bcf\u6b21\u8981\u79fb\u52a8$i_{th}$\u786c\u5e01\u65f6,\u5148\u5224\u65ad\u7b54\u6848\u8fd9\u4e00\u4f4d\u662f\u4e0d\u662f$1$.\n\n\u518d\u6839\u636e\u7b54\u6848\u6570\u4e2d\u7684\u4e8c\u8fdb\u5236\u4f4d\u5224\u65ad$j_{th}$\u8fd9\u4e2a\u786c\u5e01\u662f\u5728\u7ec8\u70b9\u8fd8\u662f\u8d77\u70b9.\n\n\u6700\u540e\u518d\u5224\u65ad\u80fd\u5426\u79fb\u52a8,\u66f4\u65b0\u7b54\u6848\u5373\u53ef.\n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 100 + 10;\nconst double eps = 1e-5;\nconst double pi = acos(-1.0);\ntypedef struct point vec;\nstruct point {\n    double x, y;\n    point() {}\n    point(double a, double b)\n    {\n        x = a, y = b;\n    }\n    point operator*(const point& i_T) const\n    {\n        return point(x * i_T.x, y * i_T.y);\n    }\n    point operator*(double u) const\n    {\n        return point(x * u, y * u);\n    }\n    point operator/(double u) const\n    {\n        return point(x / u, y / u);\n    }\n    bool operator>(const point a) const\n    {\n        return x == a.x ? y > a.y : x > a.x;\n    }\n    point operator-(const point a) const\n    {\n        return point(x - a.x, y - a.y);\n    }\n    point operator+(const point a) const\n    {\n        return point(x + a.x, y + a.y);\n    }\n    point operator+(double a) const\n    {\n        return point(x + a, y + a);\n    }\n    bool operator<(const point a) const\n    {\n        return y == a.y ? x < a.x : y < a.y;\n    }\n    friend ostream& operator<<(ostream& out, point& a)\n    {\n        cout << a.x << ',' << a.y;\n        return out;\n    }\n    friend istream& operator>>(istream& in, point& a)\n    {\n        in >> a.x >> a.y;\n        return in;\n    }\n};\ntypedef struct Line Segment; //\u7ebf\u6bb5Segment\nstruct Line { //\u76f4\u7ebf\n    vec a, b;\n    Line(point _a = point(), point _b = point())\n        : a(_a)\n        , b(_b)\n    {\n    }\n    friend istream& operator>>(istream& in, Line& a)\n    {\n        cin >> a.a >> a.b;\n        return in;\n    }\n    friend ostream& operator<<(ostream& out, Line& a)\n    {\n        out << a.a << ' ' << a.b;\n        return out;\n    }\n};\nstruct cirles {\n    point o;\n    double r;\n    cirles(point _o = point(), double _r = 0.0)\n        : r(_r)\n        , o(_o)\n    {\n    }\n    point Point(double t) //\u5706\u4e0a\u4efb\u610f\u4e00\u70b9\n    {\n        return point(o.x + r * cos(t), o.y + r * sin(t));\n    }\n    friend istream& operator>>(istream& in, cirles& a)\n    {\n        in >> a.o >> a.r;\n        return in;\n    }\n    friend ostream& operator<<(ostream& out, cirles& a)\n    {\n        out << a.o << ' ' << a.r;\n        return out;\n    }\n};\nstruct ceshi2 {\n    cirles s, t;\n};\nint dayu_dengyu(double x, double y)\n{\n    if (fabs(x - y) < eps || x > y)\n        return 1;\n    return 0;\n}\nint zhengfu(double x)\n{\n    if (fabs(x) < eps)\n        return 0;\n    return x > 0 ? 1 : -1;\n}\ndouble changdu(vec a) //\u957f\u5ea6\n{\n    return sqrt(a.x * a.x + a.y * a.y);\n}\ndouble dianji(vec A, vec B) //\u70b9\u79ef\n{\n    return A.x * B.x + A.y * B.y;\n}\ndouble dian_dao_xianduan(Segment l, point c) //\u70b9\u5230\u7ebf\u6bb5\u7684\u8ddd\u79bb\n{\n    double L = changdu(l.b - l.a);\n    double r = dianji(l.b - l.a, c - l.a) / (L * L);\n\n    if (zhengfu(r) == -1) {\n        return changdu(c - l.a);\n    } else if (dayu_dengyu(r, 1)) {\n        return changdu(c - l.b);\n    } else {\n        double L = r * changdu(l.b - l.a), l2 = changdu(c - l.a);\n        return sqrt(l2 * l2 - L * L);\n    }\n}\nint query(int x)\n{\n    int cnt = 0;\n    while (x > 0) {\n        cnt++;\n        x -= (x & -x);\n    }\n    return cnt;\n}\nint dp[1 << 22], N;\nceshi2 K[MAXN];\nint main()\n{\n    cin >> N;\n    for (int i = 0; i < N; i++) {\n        cin >> K[i].s.r >> K[i].s.o >> K[i].t.o;\n        K[i].t.r = K[i].s.r;\n    }\n\n    dp[0] = 1;\n    for (int msk = 0; msk < (1 << N); msk++)\n        if (dp[msk])\n            for (int i = 0; i < N; i++)\n                if (!(msk & (1 << i))) { //\u5982\u679c\u786c\u5e01\u88ab\u79fb\u52a8\u8fc7\u4e86\n                    \n                    //\u5224\u65ad\u5176\u4ed6\u786c\u5e01\u4f4d\u7f6e\u662f\u5728s,\u8fd8\u662f\u5728t\n                    vector<cirles> V;\n                    for (int j = 0; j < N; j++)\n                        if (i != j)\n                            if (msk & (1 << j))\n                                V.push_back(K[j].t);\n                            else\n                                V.push_back(K[j].s);\n\n                    //\u5224\u65ad\u8be5\u786c\u5e01\u80fd\u5426\u79fb\u52a8\n\n                    Line l(K[i].s.o, K[i].t.o);\n                    int ok = 1, n = V.size();\n                    for (int j = 0; j < n; j++) {\n                        double d = dian_dao_xianduan(l, V[j].o);\n                        if (d < K[i].s.r + V[j].r - eps)\n                            ok = 0;\n                    }\n                    if (ok)\n                        dp[msk + (1 << i)] = 1;\n                }\n\n    int ans = 0;\n    for (int msk = 0; msk < (1 << N); msk++)\n        if (dp[msk])\n            ans = max(ans, query(msk));\n    cout << ans << endl;\n    return 0;\n}\n```\n",
        "postTime": 1567272513,
        "uid": 23273,
        "name": "Kyon",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT3684 \u3010Coin Slider\u3011"
    }
]