[
    {
        "content": "[Blog](https://autumnkite.github.io/atcoder-cfoo15J-sol/)\u98df\u7528\u6548\u679c\u66f4\u4f73\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://code-festival-2015-okinawa-open.contest.atcoder.jp/tasks/code_festival_2015_okinawa_j)\n\n## \u9898\u610f\n\n\u6709 $n$ \u68f5\u6811\uff0c\u7b2c $i$ \u68f5\u6811\u9ad8\u5ea6\u4e3a $a_i$\u3002\u4f60\u9700\u8981\u780d\u6389\u4e00\u4e9b\u6811\uff0c\u780d\u6811\u89c4\u5219\u5982\u4e0b\uff1a\n\n1. \u53ea\u80fd\u780d\u6700\u591a $m$ \u68f5\u6811\u3002\n2. \u5bf9\u4e8e\u6bcf\u4e2a $i\\ (1\\le i\\le n-k+1)$\uff0c\u6ee1\u8db3 $[i,i+k-1]$ \u4e2d\u88ab\u780d\u6389\u7684\u6811\u7684\u6570\u91cf\u4e0d\u8d85\u8fc7 $1$\u3002\n\n\u88ab\u780d\u6389\u7684\u6811\u7684\u4f4d\u7f6e\u7684\u9ad8\u5ea6\u90fd\u53d8\u4e3a $0$\u3002\n\n\u6c42\u780d\u6811\u540e $\\max\\limits_{1\\le i\\le n-k+1}\\sum\\limits_{j=i}^{i+k-1} a_j$ \u7684\u6700\u5c0f\u503c\uff0c\u5373\u6700\u5c0f\u5316\u6240\u6709\u957f\u5ea6\u4e3a $k$ \u7684\u533a\u95f4\u7684\u6811\u7684\u9ad8\u5ea6\u4e4b\u548c\u7684\u6700\u5927\u503c\u3002\n\n$n\\le 10^5,a_i\\le 10^9$\n\n## \u4e00\u4e2a\u9519\u8bef\u4f46\u53ef\u4ee5 AC \u7684\u8d2a\u5fc3\u89e3\u6cd5\n\n\u6c42\u51fa $sum_i$ \u8868\u793a\u4ee5 $i$ \u7ed3\u5c3e\u7684\u957f\u5ea6\u4e3a $k$ \u7684\u533a\u95f4\u7684 $a_i$ \u4e4b\u548c\u3002\u7136\u540e\u6c42\u51fa $mx_i$ \u8868\u793a\u6240\u6709\u5305\u542b $i$ \u7684\u957f\u5ea6\u4e3a $k$ \u7684\u533a\u95f4\u4e2d\uff0c\u6700\u5927\u7684 $sum_j$ \u51cf\u53bb $a_i$ \u7684\u503c\uff0c\u5373 $mx_i=\\max\\limits_{i\\le j< i+k}sum_j-a_i$\u3002\n\n\u663e\u7136\u53ef\u4ee5\u4e8c\u5206\u3002\u4e8c\u5206\u7b54\u6848 $x$ \u540e\uff0c\u95ee\u9898\u53d8\u6210\u4e86\u4e00\u4e2a\u5224\u5b9a\u6027\u95ee\u9898\u3002\n\n> \u662f\u5426\u5b58\u5728\u4e00\u79cd\u780d\u6811\u7684\u65b9\u6cd5\uff0c\u4f7f\u5f97\u6240\u6709\u957f\u5ea6\u4e3a $k$ \u7684\u533a\u95f4\u7684\u6811\u7684\u9ad8\u5ea6\u4e4b\u548c\u90fd\u4e0d\u8d85\u8fc7 $x$\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u82e5\u4e00\u68f5\u6811 $i$ \u80fd\u780d\uff0c\u5fc5\u987b\u6ee1\u8db3 $mx_i\\le x$\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u4e0d\u7b26\u5408\u8981\u6c42\u7684\u533a\u95f4\uff0c\u9009\u62e9\u8be5\u533a\u95f4\u4e2d\u6700\u540e\u4e00\u68f5\u80fd\u780d\u7684\u6811\u780d\u6389\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c\u4f18\u5148\u9009\u6700\u540e\u4e00\u68f5\u6709\u65f6\u5019\u662f\u4e0d\u4f18\u7684\uff0c\u4f8b\u5982\n\n```\n[O X X O] X [O X X X]\n```\n\n\u8fd9\u79cd\u60c5\u51b5\uff08`O` \u8868\u793a\u53ef\u4ee5\u780d\u7684\u6811\uff0c`X` \u8868\u793a\u4e0d\u80fd\u780d\u7684\u6811\uff0c`[...]` \u8868\u793a\u4e0d\u7b26\u5408\u6761\u4ef6\u7684\u533a\u95f4\uff09\uff0c\u663e\u7136\u65b9\u6848\u662f\u9009\u4e24\u4e2a\u533a\u95f4\u7684\u7b2c\u4e00\u68f5\u6811\u3002\u82e5\u4f18\u5148\u9009\u6700\u540e\u4e00\u68f5\uff0c\u5982\u679c\u4e0d\u8003\u8651\u524d\u540e\u4e24\u4e2a\u533a\u95f4\u9009\u62e9\u7684\u6811\u7684\u8ddd\u79bb\uff0c\u867d\u7136\u4e5f\u80fd\u5f97\u5230\u201c\u80fd\u201d\u7684\u7b54\u6848\uff0c\u4f46\u65b9\u6848\u662f\u4e0d\u6ee1\u8db3\u8981\u6c42\u7684\uff0c\u53ef\u4ee5\u7528 `[X X X O] X [O X X X]` \u7684\u6570\u636e\u5361\u6389\uff1b\u5982\u679c\u8003\u8651\u524d\u540e\u4e24\u4e2a\u533a\u95f4\u9009\u62e9\u7684\u6811\u7684\u8ddd\u79bb\uff0c\u5219\u4f1a\u5f97\u5230\u201c\u4e0d\u80fd\u201d\u7684\u7b54\u6848\uff0c\u4e5f\u662f\u9519\u8bef\u7684\u3002\n\n\u6211\u6ca1\u6709\u8003\u8651\u524d\u540e\u4e24\u4e2a\u533a\u95f4\u9009\u62e9\u7684\u6811\u7684\u8ddd\u79bb\uff0c\u6240\u4ee5 `[X X X O] X [O X X X]` \u8fd9\u79cd\u6570\u636e\u4f1a\u5f97\u5230\u4e00\u4e2a\u504f\u5c0f\u7684\u7b54\u6848\uff0c\u7136\u800c\u53ef\u4ee5 AC\u3002\n\n\u9644 hack \u6570\u636e\uff1a\n\n```\n10 5 4\n2 2 2 5 1 5 1 1 2 10\n```\n\n\u7b54\u6848\u662f $9$\uff0c\u6211\u7684\u4ee3\u7801\u4f1a\u8f93\u51fa $8$\u3002\n\n## \u8d2a\u5fc3\u7b97\u6cd5\u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#define N 100005\nint n, m, k, a[N], h, t, Q[N];\nlong long sum[N], id[N];\nvoid push(int x, long long *cp){ // \u5355\u8c03\u961f\u5217\n\twhile (h <= t && cp[Q[t]] <= cp[x]) --t;\n\tQ[++t] = x;\n}\nbool check(long long x){\n\th = 1, t = 1, Q[t] = k;\n\tfor (register int i = 1; i <= n; i + k <= n ? push(i + k, sum) : void(0), ++i){\n\t\tif (Q[h] < i) ++h;\n\t\tif (sum[Q[h]] - a[i] <= x) id[i] = i; else id[i] = 0;\n\t}\n\th = 1, t = 0;\n\tfor (register int i = 1; i <= k; ++i) push(i, id);\n\tint s = 0;\n\tfor (register int i = 1, p = 0; i <= n - k + 1; push(i + k, id), ++i){\n\t\tif (Q[h] < i) ++h;\n\t\tif (i <= p) continue;\n\t\tif (sum[i + k - 1] <= x) continue;\n\t\tp = int(id[Q[h]]), ++s;\n\t\tif (p == 0) return 0;\n\t}\n\treturn s <= m;\n}\nint main(){\n\tscanf(\"%d%d%d\", &n, &m, &k);\n\tfor (register int i = 1; i <= n; ++i) scanf(\"%d\", a + i);\n\tfor (register int i = 1; i <= n; ++i)\n\t\tsum[i] = sum[i - 1] + a[i] - (i > k ? a[i - k] : 0); // \u6c42 sum\n\tlong long l = 0, r = 100000000000000ll, md, ans;\n\twhile (l <= r) if (check(md = (l + r) >> 1)) ans = md, r = md - 1; else l = md + 1;\n\tprintf(\"%lld\\n\", ans);\n}\n```\n\n## \u6b63\u786e\u7684\u89e3\u6cd5\n\n### \u4e00\u4e2a\u6b63\u786e\u4f46\u6548\u7387\u8f83\u4f4e\u7684\u4e8c\u5206 +DP \u89e3\u6cd5\n\n\u4ecd\u7136\u6c42\u51fa $sum_i,mx_i$\uff0c\u8003\u8651\u4e8c\u5206\u3002\n\n\u8003\u8651\u7528 $O(nk)$ \u7684\u65f6\u95f4\u8fdb\u884c\u4e00\u4e2a DP \u6765\u5224\u65ad\u3002\n\n\u9996\u5148\u8003\u8651\u8fd9\u6837\u4e00\u4e2a DP \u72b6\u6001\uff1a$dp_i$ \u8868\u793a\u524d $i$ \u68f5\u6811\uff08\u4e0d\u5305\u62ec $i$\uff09\uff0c\u6ee1\u8db3\u6240\u6709\u957f\u5ea6\u4e3a $k$ \u7684\u533a\u95f4\u7684\u548c\u90fd\u4e0d\u8d85\u8fc7 $x$\uff0c\u4e14\u7b2c $i-k$ \u68f5\u6811**\u5fc5\u780d**\u65f6\uff0c\u6700\u5c11\u9700\u8981\u780d\u591a\u5c11\u68f5\u6811\u3002\n\n\u8003\u8651\u4e3b\u52a8\u8f6c\u79fb\uff0c\u679a\u4e3e\u4e0b\u4e00\u68f5\u780d\u7684\u6811 $i+j\\ (j\\ge 0)$\uff0c\u82e5\u53ef\u4ee5\u780d $i+j$\uff08\u5373\u6ee1\u8db3 $mx_{i+j}\\le x$ \u4e14 $\\max\\limits_{i\\le p< i+j} sum_p\\le x$\uff09\uff0c\u5219 $dp_{i+j+k}\\gets \\min(dp_{i+j+k},dp_{i}+1)$\u3002\n\n\u7136\u800c\u76f4\u63a5\u8fd9\u6837\u505a\u662f $O(n^2)$ \u7684\u3002\u901a\u8fc7\u89c2\u5bdf\u53d1\u73b0\uff0c\u82e5 $j\\ge k$\uff0c\u5219\u53ef\u4ee5\u628a $dp_i$ \u5148\u8f6c\u79fb\u5230 $dp_{i+k}$\uff0c\u518d\u628a $dp_{i+k}$ \u5411\u524d\u8f6c\u79fb\u3002\u4e8e\u662f\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651 $0\\le j< k$ \u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4f18\u5316\u4e3a $O(nk)$\u3002\n\n\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(nk\\log ans)$\u3002\n\n### \u53e6\u4e00\u4e2a\u6b63\u786e\u4f46\u6548\u7387\u8f83\u4f4e\u7684 DP \u89e3\u6cd5\n\n\u4ecd\u7136\u6c42\u51fa $sum_i,mx_i$\uff0c\u4f46\u4e0d\u4e8c\u5206\uff0c\u76f4\u63a5\u8fdb\u884c DP\u3002\n\n$dp_{i,j}$ \u8868\u793a\u524d $j$ \u68f5\u6811\uff0c\u780d\u4e86 $i$ \u68f5\uff0c$j$ \u5fc5\u987b\u780d\u65f6 $\\max\\limits_{k\\le p< j+k}sum_p$ \u7684\u6700\u5c0f\u503c\u3002\n\n\u5f53 $i$ \u786e\u5b9a\u65f6\uff0c\u8bb0 $Mx_j$ \u8868\u793a\u524d $j$ \u68f5\u6811\uff08\u4e0d\u5305\u62ec $j$\uff09\uff0c\u780d\u4e86 $i-1$ \u68f5\u6811\u4e14\u6700\u540e\u4e00\u68f5\u780d\u7684\u6811 $t$ \u6ee1\u8db3 $j-t\\ge k$ \u7684 $\\max\\limits_{k\\le p< j} sum_p$ \u7684\u6700\u5c0f\u503c\u3002\n\n\u5176\u5b9e\u6c42 $Mx_j$ \u7684\u8fc7\u7a0b\u76f8\u5f53\u4e8e\u4e00\u4e2a DP \u7684\u8fc7\u7a0b\uff0c\u663e\u7136\u6709\u4e24\u79cd\u51b3\u7b56\uff1a\u5f53 $t< j-k$ \u65f6\uff0c$Mx_j=\\max(Mx_{j-1},sum_{j-1})$\uff1b\u5f53 $t=j-k$ \u65f6\uff0c$Mx_j=dp_{i-1,j-k}$\u3002\u6240\u4ee5\u6709 $Mx_j=\\min(\\max(Mx_{j-1},sum_{j-1}),dp_{i-1,j-k})$\u3002\n\n\u6c42\u51fa $Mx_j$ \u540e\uff0c\u6c42 $dp_{i,j}$ \u5c31\u53d8\u5f97\u5f88\u663e\u7136\uff1a$dp_{i,j}=\\max(Mx_j,mx_j)$\uff0c\u5206\u522b\u8868\u793a $\\max\\limits_{k\\le p< j}sum_p$ \u7684\u6700\u5c0f\u503c\uff0c\u4ee5\u53ca $\\max\\limits_{j\\le p< j+k}sum_p$ \u7684\u6700\u5c0f\u503c\uff0c\u8fd9\u4e24\u90e8\u5206\u4e92\u4e0d\u5f71\u54cd\uff0c\u6240\u4ee5\u53ef\u4ee5\u72ec\u7acb\u8ba1\u7b97\u3002\n\n\u6c42\u51fa $dp_{i,j}$ \u540e\uff0c\u6c42\u7b54\u6848\u4e5f\u53d8\u5f97\u5f88\u663e\u7136\uff1a\u7531\u4e8e $dp_{m,j}$ \u5e76\u6ca1\u6709\u5305\u62ec $\\max\\limits_{j+k\\le p\\le n}sum_p$\uff0c\u628a\u8fd9\u90e8\u5206\u4e0e $dp_{m,j}$ \u53d6 $\\max$ \u5373\u53ef\u3002\n\n\u53ef\u4ee5\u4f7f\u7528\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\u5185\u5b58\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(nm)$\u3002\n\n### \u6b63\u89e3\u2014\u2014\u4e24\u8005\u4e4b\u5e76\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c$m> \\lceil \\frac{n}{k}\\rceil$ \u4e0e $m= \\lceil \\frac{n}{k}\\rceil$ \u7684\u60c5\u51b5\u7b54\u6848\u662f\u76f8\u540c\u7684\u3002\u6240\u4ee5 $m$ \u6700\u5927\u4e3a $\\lceil \\frac{n}{k}\\rceil$\u3002\n\n\u4e0a\u9762\u7684\u4e24\u4e2a DP\uff0c\u53ef\u4ee5\u53d1\u73b0\u5f53 $k\\le 50$ \u65f6\u7b2c\u4e00\u4e2a DP \u662f\u53ef\u4ee5\u8fc7\u7684\u3002\u800c $k>50$ \u65f6\uff0c\u7531\u4e8e $m$ \u7684\u7ea7\u522b\u662f $\\frac{n}{k}$\uff0c\u7b2c\u4e8c\u4e2a DP \u53ef\u4ee5\u8fc7\u3002\n\n\u90a3\u4e48\u628a\u4e24\u8005\u5408\u5e76\u4e00\u4e0b\u5c31\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n\n## \u6b63\u89e3\u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#define N 100005\nint n, m, k, a[N], h, t, Q[N];\nlong long sum[N], mx[N];\nvoid push(int x){ // \u5355\u8c03\u961f\u5217\u7ef4\u62a4\n\twhile (h <= t && sum[Q[t]] <= sum[x]) --t;\n\tQ[++t] = x;\n}\nnamespace Subtask1{ // \u4e8c\u5206+DP O(nk log ans)\n\tint dp[N];\n\tvoid upd(int i, int j){\n\t\tif (i > n + 1) i = n + 1;\n\t\tdp[i] = std :: min(dp[i], j);\n\t}\n\tbool check(long long x){\n\t\tfor (register int i = 1; i <= n + 1; ++i) dp[i] = 1e9;\n\t\tdp[1] = 0;\n\t\tfor (register int i = 1; i <= n; ++i){\n\t\t\tlong long Mx = 0;\n\t\t\tfor (register int j = 0; j < k && i + j <= n; ++j){\n\t\t\t\tif (Mx <= x && mx[i + j] <= x) upd(i + j + k, dp[i] + 1);\n\t\t\t\tMx = std :: max(Mx, sum[i + j]);\n\t\t\t}\n\t\t\t// if (x == 0) printf(\"%d %lld\\n\", i, Mx);\n\t\t\tif (Mx <= x) upd(i + k, dp[i]);\n\t\t}\n\t\treturn dp[n + 1] <= m;\n\t}\n\tvoid Main(){\n\t\tlong long l = 0, r = 1e14, md, ans;\n\t\twhile (l <= r) if (check(md = (l + r) >> 1)) ans = md, r = md - 1; else l = md + 1;\n\t\tprintf(\"%lld\\n\", ans);\n\t}\n}\nnamespace Subtask2{ // DP O(nm)=O(n^2/k)\n\tlong long dp[2][N];\n\tvoid Main(){\n\t\tlong long Mx = 0;\n\t\tfor (register int i = 1; i <= n; ++i){\n\t\t\tif (i > k) Mx = std :: max(Mx, sum[i - 1]);\n\t\t\tdp[1][i] = std :: max(Mx, mx[i]);\n\t\t}\n\t\tfor (register int i = 2; i <= m; ++i){\n\t\t\tint t = i & 1;\n\t\t\tlong long Mx = 0;\n\t\t\tfor (register int j = 1; j <= n; ++j){\n\t\t\t\tif (j > k) Mx = std :: max(Mx, sum[j - 1]);\n\t\t\t\tif (j > k) Mx = std :: min(Mx, dp[!t][j - k]);\n\t\t\t\tdp[t][j] = std :: max(Mx, mx[j]);\n\t\t\t}\n\t\t}\n\t\tlong long ans = 0x3f3f3f3f3f3f3f3fll;\n\t\tMx = 0;\n\t\tfor (register int i = n; i; --i){\n\t\t\tif (i + k <= n) Mx = std :: max(Mx, sum[i + k]);\n\t\t\tans = std :: min(ans, std :: max(dp[m & 1][i], Mx));\n\t\t}\n\t\tprintf(\"%lld\\n\", ans);\n\t}\n}\nint main(){\n\tscanf(\"%d%d%d\", &n, &m, &k);\n\tm = std :: min(m, n / k + 1);\n\tfor (register int i = 1; i <= n; ++i) scanf(\"%d\", a + i);\n\tfor (register int i = 1; i <= n; ++i)\n\t\tsum[i] = sum[i - 1] + a[i] - (i > k ? a[i - k] : 0);\n\th = 1, t = 1, Q[t] = k;\n\tfor (register int i = 1; i <= n; i + k <= n ? push(i + k) : void(0), ++i){\n\t\tif (Q[h] < i) ++h;\n\t\tmx[i] = sum[Q[h]] - a[i];\n\t}\n\tif (m <= 2005) return Subtask2 :: Main(), 0;\n\tif (k <= 55) return Subtask1 :: Main(), 0;\n}\n```",
        "postTime": 1554985818,
        "uid": 20561,
        "name": "AutumnKite",
        "ccfLevel": 10,
        "title": "\u300cAT1732\u300d\u300cCODE FESTIVAL 2015 OKINAWA OPEN\u300dJungle"
    }
]