[
    {
        "content": "\u9898\u76ee\u5730\u5740\uff1a[\u70b9\u6211\uff01](https://jag2012autumn.contest.atcoder.jp/tasks/icpc2012autumn_b)\n\n\n\u9898\u76ee\u5927\u610f\uff1a\u6839\u636e\u5fb7\u514b\u8428\u65af\u6251\u514b\u7684\u89c4\u5219\uff0c\u6709\u4e94\u5f20\u724c\u5e94\u8be5\u662f\u660e\u724c\uff0c\u4f46\u662f\u6b64\u65f6\u53ea\u660e\u4e86\u4e09\u5f20\uff0c\u544a\u8bc9\u4f60\u4f60\u7684\u4e24\u5f20\u624b\u724c\uff0c\u4e09\u5f20\u660e\u724c\uff0c\u548c\u5bf9\u624b\u7684\u4e09\u5f20\u660e\u724c\uff0c\u6c42\u4f60\u83b7\u80dc\u7684\u6982\u7387\u3002\n\n\u601d\u8def\uff1a\u6a21\u62df\u3002\u6a21\u62df\u6240\u6709\u60c5\u51b5\uff0c\u4e00\u4e00PK\uff0c\u6570\u8d62\u5f97\u6b21\u6570\u3002\u5178\u578b\u7684\u601d\u8def\u7b80\u5355\uff0c\u7a0b\u5e8f\u7206\u96be\uff0c\u8003\u9a8c\u5199\u7a0b\u5e8f\u3002\n\n\u8b66\u544a\uff1a\u76f4\u63a5\u63d0\u4ea4\u4f1a\u72060\uff01\n\n```cpp\n#include<map>\n#include<iostream>\n#include<iomanip>\n//#include<conio.h>\n#include<algorithm>\n#include<vector>\n#include<set>\n#include<cmath>\n#include<queue>\n#include<deque>\n#include<stack>\n#include<sstream>\n#include<string.h>\n#define mp make_pair\n#define ll long long\n#define all(v) v.begin(),v.end()\n#define memset(a,b) memset(a,b,sizeof(a))\nusing namespace std;\nconst int INF=1e9;\nstruct pi{\n\tint hs,ds,bh;\n\tbool operator < (const pi &q) const{\n\t\treturn ds > q.ds;\n\t}\n\tpi(){}\n\tpi(int q){\n\t\tbh=q;\n\t\ths=q/13;\n\t\tds=q%13;\n\t}\n}p1[10],p2[10],p3[10],p4[10];\nbool b[55];\nll mx1,mx2,mi[20];\nmap<char,int> m1,m2;\ninline void init(){\n\tm1['S']=0;m1['H']=1;m1['D']=2;m1['C']=3;\n\tm2['2']=0;m2['3']=1;m2['4']=2;m2['5']=3;m2['6']=4;m2['7']=5;m2['8']=6;m2['9']=7;m2['T']=8;m2['J']=9;m2['Q']=10;m2['K']=11;m2['A']=12;\n\tmi[0]=1;\n\tfor(int i=1;i<17;i++) mi[i]=mi[i-1]*14; \n}\ninline bool rd(pi &q){\n\tstring c;\n\tcin>>c;\n\tif(c==\"#\") return 0;\n\tq=(pi)(m1[c[0]]*13+m2[c[1]]);\n\treturn 1;\n}\ninline ll work(pi q[]){\n\tpi w[10];\n\tmemcpy(w,q,sizeof(w));\n\tsort(w+1,w+6);\n\tfor(int i = 1;i <= 5;++i) ++w[i].ds;\n\t\n\tif(w[1].hs==w[2].hs&&w[2].hs==w[3].hs&&w[3].hs==w[4].hs&&w[4].hs==w[5].hs){\n\t\tif(w[1].ds-w[2].ds==1&&w[2].ds-w[3].ds==1&&w[3].ds-w[4].ds==1&&w[4].ds-w[5].ds==1) return mi[15]*w[1].ds;\n\t\tif(w[1].ds==13&&w[2].ds==4&&w[3].ds==3&&w[4].ds==2&&w[5].ds==1) return mi[15]*4;\n\t}\n\n\tif(w[2].ds==w[3].ds&&w[3].ds==w[4].ds){\n\t\tif(w[1].ds==w[3].ds) return mi[14]*w[3].ds+w[5].ds;\n\t\tif(w[5].ds==w[3].ds) return mi[14]*w[3].ds+w[1].ds;\n\t} \n\n\tif(w[1].ds==w[2].ds&&w[4].ds==w[5].ds){\n\t\tif(w[3].ds==w[1].ds) return mi[13]*w[3].ds+w[5].ds;\n\t\tif(w[3].ds==w[5].ds) return mi[13]*w[3].ds+w[1].ds;\n\t}\n\n\tif(w[1].hs==w[2].hs&&w[2].hs==w[3].hs&&w[3].hs==w[4].hs&&w[4].hs==w[5].hs) return mi[12]*w[1].ds+mi[3]*w[2].ds+mi[2]*w[3].ds+mi[1]*w[4].ds+w[5].ds;\n\n\tif(w[1].ds-w[2].ds==1&&w[2].ds-w[3].ds==1&&w[3].ds-w[4].ds==1&&w[4].ds-w[5].ds==1) return mi[11]*w[1].ds;\n\tif(w[1].ds==13&&w[2].ds==4&&w[3].ds==3&&w[4].ds==2&&w[5].ds==1) return mi[11]*4;\n\n\tif(w[1].ds==w[2].ds&&w[2].ds==w[3].ds) return mi[10]*w[3].ds+mi[1]*w[4].ds+w[5].ds;\n\tif(w[2].ds==w[3].ds&&w[3].ds==w[4].ds) return mi[10]*w[3].ds+mi[1]*w[1].ds+w[5].ds;\n\tif(w[3].ds==w[4].ds&&w[4].ds==w[5].ds) return mi[10]*w[3].ds+mi[1]*w[1].ds+w[2].ds;\n\n\tif(w[1].ds==w[2].ds&&w[3].ds==w[4].ds) return mi[9]*w[1].ds+mi[1]*w[3].ds+w[5].ds;\n\tif(w[1].ds==w[2].ds&&w[4].ds==w[5].ds) return mi[9]*w[1].ds+mi[1]*w[5].ds+w[3].ds;\n\tif(w[2].ds==w[3].ds&&w[4].ds==w[5].ds) return mi[9]*w[3].ds+mi[1]*w[5].ds+w[1].ds;\n\n\tif(w[1].ds==w[2].ds) return mi[8]*w[1].ds+mi[2]*w[3].ds+mi[1]*w[4].ds+w[5].ds;\n\tif(w[2].ds==w[3].ds) return mi[8]*w[2].ds+mi[2]*w[1].ds+mi[1]*w[4].ds+w[5].ds;\n\tif(w[3].ds==w[4].ds) return mi[8]*w[3].ds+mi[2]*w[1].ds+mi[1]*w[2].ds+w[5].ds;\n\tif(w[4].ds==w[5].ds) return mi[8]*w[4].ds+mi[2]*w[1].ds+mi[1]*w[2].ds+w[3].ds;\n\n\treturn (mi[4]*w[1].ds+mi[3]*w[2].ds+mi[2]*w[3].ds+mi[1]*w[4].ds+w[5].ds);\n}\ninline bool check(){\n\tmx1=mx2=0;\n\tint i,j,k,l;\n\tfor(i=1;i<=6;i++){\n\t\tfor(j=i+1;j<=7;j++){\n\t\t\tl=0;\n\t\t\tfor(k=1;k<=7;k++) if(k!=i&&k!=j){\n\t\t\t\tp3[++l]=p1[k];\n\t\t\t\tp4[l]=p2[k];\n\t\t\t} \n\t\t\tmx1=max(mx1,work(p3));\n\t\t\tmx2=max(mx2,work(p4));\n\t\t}\n\t}\n\treturn (mx1>mx2);\n}\nint mian(){\n\tios_base::sync_with_stdio(false);\n\tint i,j;\n\tint ans=0;\n\tinit();\n\twhile(1){\n\t\tmemset(b,0);\n\t\tans=0;\n\t\tif(!rd(p1[1])) break;\n\t\trd(p1[2]);\n\t\trd(p2[1]);\n\t\trd(p2[2]);\n\t\trd(p1[3]);\n\t\trd(p1[4]);\n\t\trd(p1[5]);\n\t\tp2[3]=p1[3];p2[4]=p1[4];p2[5]=p1[5];\n\t\tb[p1[1].bh]=b[p1[2].bh]=b[p2[1].bh]=b[p2[2].bh]=b[p1[3].bh]=b[p1[4].bh]=b[p1[5].bh]=1;\n\t\tfor(i=0;i<52;i++){\n\t\t\tif(!b[i]){\n\t\t\t\tfor(j=i+1;j<52;j++){\n\t\t\t\t\tif(!b[j]&&i!=j){\n\t\t\t\t\t\tp1[6]=p2[6]=(pi)(i);\n\t\t\t\t\t\tp1[7]=p2[7]=(pi)(j);\n\t\t\t\t\t\tans+=check();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout<<fixed<<setprecision(20)<<(double)(ans)/(990.0)<<endl; \n\t}\n}\n\n```",
        "postTime": 1531191904,
        "uid": 95333,
        "name": "\u4e1a\u4f59\u95e8\u69db",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT330 \u3010Texas hold 'em\u3011"
    },
    {
        "content": "## \u524d\u8a00\n\u4e0d\u77e5\u9053\u4ec0\u4e48\u65f6\u5019\u5728\u4ec0\u4e48\u6bd4\u8d5b\u78b0\u5230\u4e86\u8fd9\u4e2a\u9898\uff0c\u53d1\u73b0\u6d1b\u8c37\u4e0a\u6709\uff0c\u6c34\u8fc7\n## \u601d\u8def\n\u679a\u4e3e\u6240\u6709\u9644\u52a0\u4e24\u5f20\u724c\u7684\u53ef\u80fd\uff0c\u7136\u540e\u4f9d\u6b21\u6bd4\u8f83\u3002\n\n\u5bf9\u4e8e\u6bd4\u8f83\uff0c\u6211\u4eec\u5c06\u6240\u6709\u724c\u578b\u4ece\u9ad8\u5230\u4f4e\u5224\u65ad\uff0c\u5982\u679c\u67d0\u4e00\u4f4d\u80fd\u5206\u51fa\u80dc\u8d1f\uff0c\u5c31\u8fd4\u56de\u5bf9\u5e94\u7684\u7ed3\u679c\u3002\u5728\u6bcf\u79cd\u724c\u578b\u7684 $21$ \u4e2a\u9009\u62e9\u4e2d\u53d6\u5bf9\u5e94\u5224\u65ad\u7684\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\u8fd9\u9053\u9898\u53ea\u8981\u4f60\u7684\u903b\u8f91\u6e05\u6670\u5176\u5b9e\u662f\u975e\u5e38\u597d\u5199\u7684 ``>_<``\n\n**\u5207\u8bb0\u591a\u5199\u51fd\u6570\uff0c\u6bcf\u4e2a\u51fd\u6570\u91cc\u7adf\u53ef\u80fd\u6267\u884c\u7b80\u5355\u7684\u4e1c\u897f\uff0c\u53ef\u4ee5\u5927\u5e45\u5ea6\u589e\u52a0\u8c03\u8bd5\u6548\u7387\u3002**\n\n\u8fd9\u79cd\u5927\u6a21\u62df\u9898\u4f3c\u4e4e\u5728\u8fd9\u91cc\u8bf4\u4e00\u5806\u8bdd\u6ca1\u6709\u4ec0\u4e48\u7528\uff0c\u5927\u5bb6\u76f4\u63a5\u770b\u4ee3\u7801\u5427\u3002\n## \u4ee3\u7801\n```\n#include<bits/stdc++.h>\n#define qwq(c1,c2,c3,c4,c5) p=max(p,check(i,a_create(c1,c2,c3,c4,c5))),q=max(q,check(i,b_create(c1,c2,c3,c4,c5)))\nusing namespace std;\ninline int read(){\n   int s=0;\n   char ch=getchar();\n   while(ch<'0'||ch>'9') ch=getchar();\n   while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n   return s;\n}\nstruct card{ char kind,num; bool operator <(const card &a)const{ if(a.num!=num) return a.num<num; return a.kind<kind; };};\nstruct cardset{ card c[13]; };\nint four(cardset x)\n{\n\tint vis[15]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};\n\tfor(int i=1; i<=5; i++) switch(x.c[i].num)\n\t{\n\t\tcase 'A': vis[14]++; break;\n\t\tcase 'T': vis[10]++; break;\n\t\tcase 'J': vis[11]++; break;\n\t\tcase 'Q': vis[12]++; break;\n\t\tcase 'K': vis[13]++; break;\n\t\tdefault: vis[x.c[i].num-48]++; break;\n\t}\n\tint res=0;\n\tfor(int i=14; i; i--) if(vis[i]==4) res+=10000*i; else if(vis[i]) res+=i;\n\tif(res<10000) return 0;\n\treturn res;\n} \n//\u70b8\u5f39\uff0c\u4e0d\u662f\u70b8\u5f39\u8fd4\u56de0\uff0c\u4e0d\u7136\u8fd4\u56de\u503c\u8d8a\u5927\u724c\u8d8a\u5927 \nint three(cardset x)\n{\n\tint vis[15]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};\n\tfor(int i=1; i<=5; i++) switch(x.c[i].num)\n\t{\n\t\tcase 'A': vis[14]++; break;\n\t\tcase 'T': vis[10]++; break;\n\t\tcase 'J': vis[11]++; break;\n\t\tcase 'Q': vis[12]++; break;\n\t\tcase 'K': vis[13]++; break;\n\t\tdefault: vis[x.c[i].num-48]++; break;\n\t}\n\tint res=0,t=15;\n\tfor(int i=14; i; i--) if(vis[i]==3) res+=10000*i; else if(vis[i]) res+=i*t,t/=15;\n\tif(res<10000) return 0;\n\treturn res;\n} \n//\u4e09\u5f20\uff0c\u4e0d\u662f\u8fd4\u56de0\uff0c\u4e0d\u7136\u8fd4\u56de\u503c\u8d8a\u5927\u724c\u8d8a\u5927 \nint twopairs(cardset x)\n{\n\tint vis[15]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};\n\tfor(int i=1; i<=5; i++) switch(x.c[i].num)\n\t{\n\t\tcase 'A': vis[14]++; break;\n\t\tcase 'T': vis[10]++; break;\n\t\tcase 'J': vis[11]++; break;\n\t\tcase 'Q': vis[12]++; break;\n\t\tcase 'K': vis[13]++; break;\n\t\tdefault: vis[x.c[i].num-48]++; break;\n\t}\n\tint res=0,t=15*15,ps=0;\n\tfor(int i=14; i; i--) if(vis[i]==2) res+=t*i,t/=15,++ps; else if(vis[i]) res+=i;\n\tif(ps==2) return res;\n\treturn 0;\n} \n//\u4e24\u5bf9\uff0c\u4e0d\u662f\u8fd4\u56de0\uff0c\u4e0d\u7136\u8fd4\u56de\u503c\u8d8a\u5927\u724c\u8d8a\u5927 \nint pair1(cardset x)\n{\n\tint vis[15]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};\n\tfor(int i=1; i<=5; i++) switch(x.c[i].num)\n\t{\n\t\tcase 'A': vis[14]++; break;\n\t\tcase 'T': vis[10]++; break;\n\t\tcase 'J': vis[11]++; break;\n\t\tcase 'Q': vis[12]++; break;\n\t\tcase 'K': vis[13]++; break;\n\t\tdefault: vis[x.c[i].num-48]++; break;\n\t}\n\tint res=0,t=15*15,ps=0;\n\tfor(int i=14; i; i--) if(vis[i]==2) res+=15*15*15*i,++ps; else if(vis[i]) res+=i*t,t/=15;\n\tif(ps) return res;\n\treturn 0;\n} \n//\u4e00\u5bf9\uff0c\u4e0d\u662f\u8fd4\u56de0\uff0c\u4e0d\u7136\u8fd4\u56de\u503c\u8d8a\u5927\u724c\u8d8a\u5927 \nint threetwo(cardset x)\n{\n\tint vis[15]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};\n\tfor(int i=1; i<=5; i++) switch(x.c[i].num)\n\t{\n\t\tcase 'A': vis[14]++; break;\n\t\tcase 'T': vis[10]++; break;\n\t\tcase 'J': vis[11]++; break;\n\t\tcase 'Q': vis[12]++; break;\n\t\tcase 'K': vis[13]++; break;\n\t\tdefault: vis[x.c[i].num-48]++; break;\n\t}\n\tint res=0;\n\tbool two=0;\n\tfor(int i=14; i; i--) if(vis[i]==3) res+=10000*i; else if(vis[i]==2) res+=i,two=1;\n\tif(res<10000 || !two) return 0;\n\treturn res;\n} \n//\u4e09\u5e26\u4e8c\uff0c\u4e0d\u662f\u8fd4\u56de0\uff0c\u4e0d\u7136\u8fd4\u56de\u503c\u8d8a\u5927\u724c\u8d8a\u5927 \nint flush(cardset x) \n{ \n\tfor(int i=1; i<5; i++) if(x.c[i].kind==x.c[i+1].kind) continue; else return 0;\n\tint vis[15]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};\n\tfor(int i=1; i<=5; i++) switch(x.c[i].num)\n\t{\n\t\tcase 'A': vis[14]=1; break;\n\t\tcase 'T': vis[10]=1; break;\n\t\tcase 'J': vis[11]=1; break;\n\t\tcase 'Q': vis[12]=1; break;\n\t\tcase 'K': vis[13]=1; break;\n\t\tdefault: vis[x.c[i].num-48]=1; break;\n\t}\n\tint t=15*15*15*15,res=0;\n\tfor(int i=14; i; i--) if(vis[i]) res+=t*i,t/=15;\n\treturn res;\n}\n//\u540c\u82b1\uff0c\u4e0d\u662f\u540c\u82b1\u8fd4\u56de0\uff0c\u4e0d\u7136\u8fd4\u56de\u503c\u8d8a\u5927\u724c\u8d8a\u5927 \nint high(cardset x) \n{ \n\tint vis[15]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};\n\tfor(int i=1; i<=5; i++) switch(x.c[i].num)\n\t{\n\t\tcase 'A': vis[14]++; break;\n\t\tcase 'T': vis[10]++; break;\n\t\tcase 'J': vis[11]++; break;\n\t\tcase 'Q': vis[12]++; break;\n\t\tcase 'K': vis[13]++; break;\n\t\tdefault: vis[x.c[i].num-48]++; break;\n\t}\n\tint t=15*15*15*15,res=0;\n\tfor(int i=14; i; i--) while(vis[i]--) res+=t*i,t/=15;\n\treturn res;\n}\n//\u6563\u724c\uff0c\u8fd4\u56de\u503c\u8d8a\u5927\u724c\u8d8a\u5927 \nint straight(cardset x)\n{\n\tbool vis[15]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};\n\tfor(int i=1; i<=5; i++) switch(x.c[i].num)\n\t{\n\t\tcase 'A': vis[1]=vis[14]=1; break;\n\t\tcase 'T': vis[10]=1; break;\n\t\tcase 'J': vis[11]=1; break;\n\t\tcase 'Q': vis[12]=1; break;\n\t\tcase 'K': vis[13]=1; break;\n\t\tdefault: vis[x.c[i].num-48]=1; break;\n\t}\n\tfor(int i=1; i<=10; i++) if(vis[i] && vis[i+1] && vis[i+2] && vis[i+3] && vis[i+4]) return i+4;\n\treturn 0;\n}\n//\u987a\u5b50\uff0c\u4e0d\u662f\u987a\u5b50\u8fd4\u56de0\uff0c\u4e0d\u7136\u8fd4\u56de\u6700\u5927\u7684\u70b9\u6570 \nset<card> S;\ncard a[13],b[13];\ncard create(char x,char y) { card tmp; tmp.kind=x,tmp.num=y; return tmp; }\ncardset a_create(int n,int m,int p,int q,int r) { cardset tmp; tmp.c[1]=a[n],tmp.c[2]=a[m],tmp.c[3]=a[p],tmp.c[4]=a[q],tmp.c[5]=a[r]; return tmp; }\ncardset b_create(int n,int m,int p,int q,int r) { cardset tmp; tmp.c[1]=b[n],tmp.c[2]=b[m],tmp.c[3]=b[p],tmp.c[4]=b[q],tmp.c[5]=b[r]; return tmp; }\nchar x[13]={'A','2','3','4','5','6','7','8','9','T','J','Q','K'};\nchar y[4]={'S','H','D','C'};\nint check(int type,cardset s)\n{\n\tswitch(type)\n\t{\n\t\tcase 1:\n\t\t\tif(flush(s) && straight(s)) return straight(s); else return 0;\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\treturn four(s);\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\treturn threetwo(s);\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\treturn flush(s);\n\t\t\tbreak;\n\t\tcase 5:\n\t\t\treturn straight(s);\n\t\t\tbreak;\n\t\tcase 6:\n\t\t\treturn three(s);\n\t\t\tbreak;\n\t\tcase 7:\n\t\t\treturn twopairs(s);\n\t\t\tbreak;\n\t\tcase 8:\n\t\t\treturn pair1(s);\n\t\t\tbreak;\n\t\tcase 9:\n\t\t\treturn high(s);\n\t\t\tbreak;\n\t}\n}\nvoid debug1()\n{\n\t//for(int i=1; i<=7; i++) cout<<a[i].kind<<a[i].num<<' '; puts(\"\");\n\t//for(int i=1; i<=7; i++) cout<<b[i].kind<<b[i].num<<' '; puts(\"\");\n}\nint compare()\n{\n\tfor(int i=1; i<=9; i++) \n\t{\n\t\tint p=0,q=0;\n\t\tqwq(1,2,3,4,5);\n\t\tqwq(1,2,3,4,6);\n\t\tqwq(1,2,3,4,7);\n\t\tqwq(1,2,3,5,6);\n\t\tqwq(1,2,3,5,7);\n\t\tqwq(1,2,3,6,7);\n\t\tqwq(1,2,4,5,6);\n\t\tqwq(1,2,4,5,7);\n\t\tqwq(1,2,4,6,7);\n\t\tqwq(1,2,5,6,7);\n\t\tqwq(1,3,4,5,6);\n\t\tqwq(1,3,4,5,7);\n\t\tqwq(1,3,4,6,7);\n\t\tqwq(1,3,5,6,7);\n\t\tqwq(1,4,5,6,7);\n\t\tqwq(2,3,4,5,6);\n\t\tqwq(2,3,4,5,7);\n\t\tqwq(2,3,4,6,7);\n\t\tqwq(2,3,5,6,7);\n\t\tqwq(2,4,5,6,7);\n\t\tqwq(3,4,5,6,7);\n\t\tif(p==0 && q==0) continue;\n\t\tif(p>q) {\n\t\tdebug1();return 1; }else return 0;\n\t}\n\t\n}\nvoid init() { S.clear(); for(int i=0; i<13; i++) for(int j=0; j<4; j++) S.insert(create(y[j],x[i])); }\nvoid input()\n{ \n\ta[1].kind=getchar();\n\tif(a[1].kind=='#') exit(0);\n\ta[1].num=getchar();getchar();\n\ta[2].kind=getchar(),a[2].num=getchar();getchar();\n\tb[1].kind=getchar(),b[1].num=getchar();getchar();\n\tb[2].kind=getchar(),b[2].num=getchar();getchar();\n\ta[3].kind=b[3].kind=getchar(),a[3].num=b[3].num=getchar(),getchar();\n\ta[4].kind=b[4].kind=getchar(),a[4].num=b[4].num=getchar(),getchar();\n\ta[5].kind=b[5].kind=getchar(),a[5].num=b[5].num=getchar(),getchar();\n\tS.erase(S.find(a[1])),S.erase(S.find(a[2])),S.erase(S.find(a[3])),S.erase(S.find(a[4])),S.erase(S.find(a[5])),S.erase(S.find(b[1])),S.erase(S.find(b[2])); \n}\nvoid calc()\n{\n\tint ans=0;\n\tfor(set<card>::iterator i=S.begin(); i!=S.end(); i++) for(set<card>::iterator j=i; j!=S.end(); j++) if(i!=j) a[6]=b[6]=*i,a[7]=b[7]=*j,ans+=compare();\n\tprintf(\"%.10lf\\n\",ans/990.0);\n}\nint main()\n{\n\twhile(1) init(),input(),calc();\n\treturn 0;\n}\n/*\nSA SK\nDA CA\nSQ SJ ST\nSA HA\nD2 C3\nH4 S5 DA\nHA D9\nH6 C9\nH3 H4 H5\n#\n\n*/\n```",
        "postTime": 1607504768,
        "uid": 111055,
        "name": "dead_X",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 AT330 \u3010Texas hold 'em\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\n\n\u9996\u5148\u8003\u8651\u5982\u4f55\u6bd4\u8f83\u4e24\u624b\u724c\u7684\u5927\u5c0f\u3002\u6211\u4eec\u7ed9\u6bcf\u79cd\u4e94\u5f20\u724c\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8868\u793a\u5176\u201c\u6709\u591a\u597d\u201d\uff1b\u5b57\u5178\u5e8f\u8d8a\u5927\u7684\u8d8a\u597d\u3002\u8fd9\u4e2a\u5b57\u7b26\u4e32\u53ef\u4ee5\u81ea\u5df1\u8bbe\u8ba1\uff0c\u56e0\u4e3a\u724c\u578b\u57fa\u672c\u53ea\u5206\u201c\u8ddf\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u70b9\u6570\u7684\u51fa\u73b0\u6b21\u6570\u6709\u5173\u201d\u548c\u201c\u987a\u5b50\u4e4b\u7c7b\u7684\u7c7b\u578b\u201d\uff0c\u4e0d\u7b26\u5408\u8fd9\u79cd\u7684\u53ef\u4ee5\u7279\u5224\uff0c\u800c\u5927\u5c0f\u57fa\u672c\u53ea\u8ddf\u51fa\u73b0\u6b21\u6570\u4ece\u591a\u5230\u5c11\u7684\u70b9\u6570\u6709\u5173\uff0c\u6240\u4ee5\u53ef\u4ee5\u4e00\u4e2a\u4e00\u4e2a\u62fc\u5230\u5b57\u7b26\u4e32\u4e0a\u3002\n\n\u4ee3\u7801\u4e2d\u641e\u4e86\u4e00\u4e9b\u795e\u5947\u7684\u4e1c\u897f\uff0c\u8fd8\u6709\u5229\u7528\u5b8f\u5b9a\u4e49\u641e\u51fa\u6765\u7684\u201c\u7f16\u8bd1\u671f\u7206\u641c\u201d\uff08\u6ce8\uff1a\u8fd9\u4f1a\u8ba9\u7f16\u8bd1\u65f6\u95f4\u53d8\u5927\u4e0d\u5c11\uff0c\u8dd1\u7684\u4e5f\u66f4\u6162\uff0c\u4f46\u662f\u597d\u5199\u554a\uff09\u3002\n\n```cpp\n#include <algorithm>\n#include <cctype>\n#include <cstdio>\n#include <cstring>\n#include <string>\n\ntypedef std::string G;\n\n#define mp std::make_pair\nstd::pair<int, int> P[5];\n\nint k[5];\n\nG Get(int *R, char *S) {\n  int s = 0, m = 0, f = 1, t = 0;\n  for (int i = 0; i < 5; ++i) k[i] = R[i], f = f && S[i] == S[0];\n  std::sort(k, k + 5);\n  for (int i = 4; i; --i) if (k[i] != k[0] + i) s = i;\n  if (k[0] == 2 && s == 4 && k[4] == 14) s = 0, k[4] = 5;\n  if (!s) return G(f ? \"S\" : \"MA\") += k[4] + 'A';\n  for (int i = 0, j = 1; i < 5; ++i, ++j)\n    if (i == 4 || k[i] != k[i + 1])\n      P[m++] = mp(j, k[i]), t += j * j, j = 0;\n  std::sort(P, P + m);\n  G a = \"\";\n#define T(x, y, t) for (int i = (a = x, y); ~i; --i) a += t + 'A'\n  if (f && t < 12)\n    T(\"MB\", 4, k[i]);\n  else\n    T('A' + t, m - 1, P[i].second);\n  return a;\n}\n\nint r[5];\nchar s[5];\nG Run(int *R, char *S) {\n  int m = 0;\n  G a = \"\", t;\n#define DFS(i, nxt) { nxt; if (m < 5) { r[m] = R[i], s[m++] = S[i]; nxt; --m; } }\n  DFS(0, DFS(1, DFS(2, DFS(3, DFS(4, DFS(5, DFS(6, if (m == 5 && (t = Get(r, s)) > a) a = t)))))));\n  return a;\n}\n\nint R1[7], R2[7];\nchar S1[7], S2[7], t[9];\nint main() {\n  while (true) {\n#define Read(x, y) {\\\n    scanf(\"%s\", t);\\\n    if ((y = *t) == '#') return 0;\\\n    for (int L = 2; L < 15; ++L) if (\"  23456789TJQKA\"[L] == t[1]) x = L; }\n    Read(R1[0], S1[0]);\n    Read(R1[1], S1[1]);\n    Read(R2[0], S2[0]);\n    Read(R2[1], S2[1]);\n    for (int i = 2; i < 5; ++i)\n      Read(R1[i] = R2[i], S1[i] = S2[i]);\n    int ans = 0;\n    for (int a = 2; a < 15; ++a)\n      for (int _b = 0; _b < 4; ++_b)\n        for (int c = 2; c < 15; ++c)\n          for (int _d = 0; _d < 4; ++_d) {\n            char b = \"SHDC\"[_b], d = \"SHDC\"[_d];\n            bool ok = a == c && b == d;\n            for (int i = 0; i < 5; ++i)\n              ok = ok\n                || a == R1[i] && b == S1[i]\n                || a == R2[i] && b == S2[i]\n                || c == R1[i] && d == S1[i]\n                || c == R2[i] && d == S2[i];\n            if (ok) continue;\n            R1[5] = R2[5] = a; S1[5] = S2[5] = b;\n            R1[6] = R2[6] = c; S1[6] = S2[6] = d;\n            if (Run(R1, S1) > Run(R2, S2)) ++ans;\n          }\n    printf(\"%.9lf\\n\", ans / 1980.0);\n  }\n}\n```\n\n\u7136\u540e\u53ef\u4ee5\u6765\u770b\u4e00\u770b\u8fd9\u4e2a 977B \u7684\u9b54\u9b3c\u7248\u672c\uff08\u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbf\u591a\u52a0\u4e86\u4e00\u4e9b\u6362\u884c\uff0c\u5b9e\u9645\u4e0a\u7b2c\u4e03\u884c\u8d77\u90fd\u53ef\u4ee5\u4e0d\u6362\u884c\uff09\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define N i]\n#define F(i,a,b)for(_ i=a;i<b;++i)\n#define T(x,y,p)for(t=x,i=y;i--;)t+=p;\n#define W(K)++i;K if(m<5){R[m]=r[N,S[m++]=s[N;K--m;}--i;\n#define Y(x,y){cin>>t;if((y=t[0])==35)exit(0);F(L,2,15)if(\"  23456789TJQKA\"[L]==t[1])x=L;}\nusing namespace std;using _=int;using $=_[11];using G=string;pair<_,_>P[5];$ k,R,A,S,H;G t,e=\"SHDC\";\n_ U(){_ s=0,m=0,f=1,T=65,i,j;F(i,0,5)k[N=R[N,f&=S[N==*S;sort(k,k+5);for(i=5;--i;)if(k[N-*k-i)s=i;if(*k==2&s==4&k[4]==14)s=0,*k=1;if(!s)t=G(f?\"S\":\"MA\")+=*k;\nelse{for(i=-1,j=1;++i<5;++j)if(k[N^k[1+N)P[m++]=make_pair(j,k[N),T+=j*j,j=0;sort(P,P+m);if(f&T<77)T(\"MB\",5,k[N)else T(T,m,P[N.second)}}\nG V(_*r,_*s){_ m=0,i=-1;G a=\"\";W(W(W(W(W(W(W(if(m==5&&(U(),t>a))a=t;)))))))return a;}\nmain(){F(i,7,9)Y(A[N,H[N)F(i,0,5)Y(A[N,H[N)_ y=0;F(a,2,15)for(_ b:e)F(c,2,15)for(_ d:e){_ O=a==c&b==d;A[5]=A[6]=0;\nF(i,0,9)O|=a==A[N&b==H[N|c==A[N&d==H[N;O||(A[5]=a,H[5]=b,A[6]=c,H[6]=d,y+=V(A,H)<V(A+2,H+2));}printf(\"%.9lf\\n\",y/1980.0);main();}\n```",
        "postTime": 1554903060,
        "uid": 7868,
        "name": "_rqy",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 AT330 \u3010Texas hold 'em\u3011"
    },
    {
        "content": "### Source\n\n`Atcoder JAG Practice Contest for ACM-ICPC Asia Regional 2012` [B - Texas hold 'em](https://jag2012autumn.contest.atcoder.jp/tasks/icpc2012autumn_b)\u3002\n\n\u8fd9\u662f\u4e00\u9053\u975e\u5e38\u8003\u9a8c\u7ec6\u8282\u7684\u9898\u76ee\uff0c\u4ee3\u7801\u6bd4\u8f83\u5927\uff0c\u4e00\u822c\u53ef\u4ee5\u8fbe\u5230$500$\u884c/$20\\mbox{KB}$\u3002\u6211\u662f\u8c03\u4e86\u4e24\u5929\uff0c\u5dee\u4e0d\u591a\u4e00\u5171$10$\u4e2a\u5c0f\u65f6\u8fd9\u6837\u5b50\uff0c\u6700\u540e\u53d1\u73b0\u9898\u610f\u7406\u89e3\u4e0d\u6e05\u2026\u2026\n\n## 1. \u9898\u610f\n\n\uff08\u7f51\u4e0a\u90e8\u5206\u9898\u89e3\u8868\u8ff0\u4e0d\u4e25\u8c28\uff0c\u8bf7\u5927\u5bb6\u6ce8\u610f\uff09\n\n\u6211\u4eec\u77e5\u9053\u5fb7\u5dde\u6251\u514b\u662f\u6709$2$\u5f20\u9690\u85cf\u624b\u724c\u3001$5$\u5f20\u516c\u5171\u724c\uff0c\u518d\u4ece$7$\u5f20\u724c\u4e2d\u9009\u53d6$5$\u5f20\u8fdb\u884c\u62bc\u6ce8\u3001\u6bd4\u8f83\u5927\u5c0f\u3002\n\n\u8fd9\u9053\u9898\u9996\u5148\u7ed9\u5b9a\u4f60\u7684$2$\u5f20\u201c\u9690\u85cf\u624b\u724c\u201c\uff0c\u5bf9\u624b\u7684$2$\u5f20\"\u9690\u85cf\u624b\u724c\"\uff0c\u4ee5\u53ca$5$\u5f20\u516c\u5171\u724c\u7684\u5176\u4e2d$3$\u5f20\u3002\n\n\u9700\u8981\u4f60\u6c42\u51fa\u5728\u6700\u540e\u8fd8\u4e0d\u77e5\u9053\u7684$2$\u5f20\u516c\u5171\u724c\u7684\u6240\u6709\u53ef\u80fd\u7ec4\u5408\u4e2d\uff0c\u4f60\u83b7\u80dc\u7684\u6982\u7387$p$\u3002\n\n\u6362\u8a00\u4e4b\uff0c\u5047\u8bbe\u6700\u540e\u4e24\u5f20\u4e00\u5171\u6709$b$\u79cd\u7ec4\u5408\uff0c\u800c\u5176\u4e2d\u6709$a$\u79cd\u662f\u4f60\u53ef\u4ee5\u83b7\u80dc\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u8f93\u51fa$\\frac{a}{b}$\uff08\u8bef\u5dee\u4e0d\u8d85\u8fc7$10^{-6}$\uff09\u3002\n\n**\u6ce8\u610f\uff1a\u53c2\u4e0e\u6e38\u620f\u7684\u662f\u6807\u51c6\u6251\u514b\u9664\u53bb\u5927\u5c0f\u738b\u5171$52$\u5f20\u724c\uff0c\u5e76\u4e14\u724c`A`\u53ef\u4ee5\u4f5c\u4e3a\u5927\u4e8e`K`\u6216\u5c0f\u4e8e`2`\u4e2d\u7684\u4e00\u4e2a\u3002**\n\n--------\n\n\n\n## 2. \u5206\u6790\n\n\u9996\u5148\u6211\u4eec\u6839\u636e\u8ba1\u7b97\u53ef\u4ee5\u5f97\u51fa\uff0c\u8fd9\u9053\u9898\u76f4\u63a5\u66b4\u529b\u6a21\u62df\u662f\u53ef\u4ee5\u5728$1s$\u4e4b\u5185\u51fa\u89e3\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u76f4\u63a5\u91c7\u7528\u66b4\u529b\u6a21\u62df\u3002\u5177\u4f53\u6765\u8bb2\uff0c\u5206\u6210\u5982\u4e0b\u51e0\u6b65\uff1a\n\n### 2.1 \u8f93\u5165\n\n\u8fd9\u9053\u9898\u4e2d\u7ed9\u51fa\u7684\u8f93\u5165\u662f\u7531\u82b1\u8272+\u724c\u9762\u503c\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u628a\u8fd9\u4e2a\u5b57\u7b26\u4e32\u8f6c\u5316\u4e3a\u6211\u4eec\u9700\u8981\u7684\u6570\u5b57\u3002\n\n**\u6ce8\u610f\uff1a\u5728\u672c\u9898\u4e2d\uff0c\u6211\u4eec\u5c06\u82b1\u8272\u8868\u793a\u4e3a$1-4$\uff0c\u5c06\u724c\u9762\u503c\u8868\u793a\u4e3a$2-14$\uff0c\u4fbf\u4e8e\u540e\u7eed\u5b58\u50a8\u3002\u5e76\u4e14\u6211\u4eec\u5c06`A`\u89c6\u4e3a$14$**\u3002\n\n\u8bbe\u8ba1\u4e00\u4e2a\u51fd\u6570\u5c06\u5176\u5206\u7c7b\u5373\u53ef\u3002\u53ef\u4ee5\u50cf\u6211\u4e00\u6837\u7528\u4e00\u4e2a\u7ed3\u6784\u4f53\u5b58\u50a8\uff0c\u7136\u540e\u8bbe\u8ba1\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u5b8c\u6210\u4e0a\u8ff0\u529f\u80fd\u3002\n\n### 2.2 \u679a\u4e3e\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u679a\u4e3e\u6240\u6709\u53ef\u80fd\u7684\u5269\u4f59\u516c\u5171\u724c\u3002\u7531\u4e8e\u5df2\u7ecf\u660e\u786e\u4e86\u6709$7$\u5f20\u724c\uff0c\u6240\u4ee5\u5269\u4e0b\u7684\u724c\u4e00\u5171\u6709$\\frac{(52-7)\\times (52-8)}{2}=990$\u79cd\u53ef\u80fd\u3002\u4f46\u662f\u8fd9\u662f**\u65e0\u5e8f**\u4e8c\u5143\u7ec4$(a,b)$\u7684\u60c5\u51b5\u3002\u5728\u5b9e\u73b0\u4ee3\u7801\u65f6\uff0c\u7531\u4e8e\u4e0d\u65b9\u4fbf\u5224\u91cd\uff0c\u56e0\u6b64\u5e72\u8106\u679a\u4e3e**\u6709\u5e8f**\u4e8c\u5143\u7ec4$(a,b)$\u3002\u8fd9\u6837\u5728\u6700\u7ec8\u8ba1\u7b97\u65f6\u5e76\u6ca1\u6709\u5f71\u54cd\uff08\u8868\u8fbe\u5f0f\u4e2d\u5206\u5b50\u548c\u5206\u6bcd\u5747\u4e58\u4ee5$2$\uff09\u3002\n\n### 2.3 \u68c0\u67e5\n\n\u68c0\u67e5\u90e8\u5206\u662f\u6211\u548c\u5176\u5b83\u7f51\u4e0a\u4ee3\u7801\u6700\u5927\u7684\u4e0d\u540c\u3002\u9996\u5148\u6211\u4eec\u9700\u8981\u4f9d\u6b21\u679a\u4e3e\u6bcf\u4e00\u79cd\u60c5\u51b5\uff0c\u5224\u65ad\u662f\u4e0d\u662f\u7b26\u5408\u6761\u4ef6\u3002\n\n\u4f46\u662f\u8fd9\u91cc\u8981\u6ce8\u610f\u7684\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u60c5\u51b5\u6709$4$\u79cd\u4e0d\u540c\u7ed3\u679c\uff1a\n\n* \u5df1\u65b9\u80dc\u51fa\u3002\n\n* \u5bf9\u65b9\u80dc\u51fa\u3002\n\n* \u5e73\u5c40\uff08\u53cc\u65b9\u90fd\u6ee1\u8db3\u60c5\u51b5\uff0c\u4e14\u724c\u9762\u76f8\u540c\uff09\u3002\n\n* \u5e73\u5c40\uff08\u53cc\u65b9\u5747\u4e0d\u6ee1\u8db3\u60c5\u51b5\uff09\u3002\n\n\u5bf9\u4e8e\u524d$3$\u79cd\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u72b6\u6001\uff08\u8bbe\u5176\u5206\u522b\u7528`1`\u3001`-1`\u3001`2`\u8868\u793a\uff09\uff0c\u5bf9\u4e8e\u7b2c\u56db\u79cd\uff0c\u6211\u4eec\u5c31\u9700\u8981\u7ee7\u7eed\u5f80\u4e0b\u5224\u65ad\u3002\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u9700\u8981\u770b\u4e00\u770b\u6bcf\u4e00\u79cd\u60c5\u51b5\u5e94\u8be5\u600e\u4e48\u5904\u7406\u3002\u6709\u6807\u6ce8*\u6ce8\u610f\u7ec6\u8282*\u7684\u53ef\u80fd\u5b9e\u73b0\u8f83\u4e3a\u7e41\u7410\uff0c\u8bf7\u5927\u5bb6\u6ce8\u610f\u3002\n\n#### 2.3.1 Royal straight flush\uff08\u7687\u5bb6\u540c\u82b1\u987a\uff09\n\n\u8fd9\u4e2a\u6bd4\u8f83\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u82b1\u8272\u4f9d\u6b21\u5224\u65ad$10-14$\u662f\u5426\u5b58\u5728\u5373\u53ef\u3002\n\n\u6ce8\u610f\uff1a**\u5982\u679c\u5224\u65ad\u67d0\u4e00\u65b9\u62e5\u6709\u4e86\u7687\u5bb6\u540c\u82b1\u987a\u4e5f\u4e0d\u80fd\u76f4\u63a5\u8fd4\u56de**\uff0c\u56e0\u4e3a\u6709\u53ef\u80fd\u4e94\u5f20\u724c\u5168\u90e8\u6765\u81ea\u516c\u5171\u724c\u3002\n\n#### 2.3.2 straight flush\uff08\u540c\u82b1\u987a\uff09\n\n\u6211\u4eec\u9700\u8981\u628a\u6240\u6709\u724c\u9762\u4e3a$14$\u7684\u8f6c\u6362\u4e3a$1$\uff0c\u4e14\u4e0d\u9700\u8981\u4fdd\u7559$14$\u7684\u72b6\u6001\u3002\n\n\uff08\u4e00\u65b9\u9762\u662f\u56e0\u4e3a\u6709\u53ef\u80fd\u662f$1-5$\u7684\u540c\u82b1\u987a\uff0c\u56e0\u6b64\u8981\u8f6c\u6362\uff1b\u53e6\u4e00\u65b9\u9762\u662f\u56e0\u4e3a\u5982\u679c\u662f$10-14$\u7684\u540c\u82b1\u987a\u5219\u5728\u4e0a\u4e00\u5c42\u5c31\u6392\u9664\u4e86\uff0c\u56e0\u6b64\u4e0d\u7528\u8003\u8651$14$\u7684\u60c5\u51b5\u3002\uff09\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u82b1\u8272\u4ece$5-13$\u4f9d\u6b21\u679a\u4e3e\u5373\u53ef\u3002\n\n#### 2.3.3 Four of a kind\uff08\u56db\u5f20\uff09\n\n\u679a\u4e3e\u6bcf\u4e2a\u724c\u9762\u503c\u5224\u65ad\u56db\u4e2a\u82b1\u8272\u662f\u5426\u90fd\u5b58\u5728\u3002\n\n#### 2.3.4 Full house\uff08\u4e09\u5e26\u4e8c\uff09\n\n\u8fd9\u4e2a\u8f83\u4e3a\u9ebb\u70e6\u3002\u6211\u4eec\u9996\u5148\u904d\u5386\u4e00\u904d\uff0c\u627e\u51fa\u6709$3$\u5f20\u724c\u7684\uff0c\u7136\u540e\u518d\u627e\u6709$2$\u5f20\u724c\u7684\uff0c\u6700\u540e\u5fc5\u987b$3$\u5f20\u548c$2$\u5f20\u90fd\u80fd\u627e\u5230\u624d\u7b97\u627e\u5230\uff0c\u6700\u540e\u6bd4\u8f83\u3001\u8fd4\u56de\u3002**\u6ce8\u610f\u7ec6\u8282**\u3002\n\n#### 2.3.5 Flush\uff08\u540c\u82b1\uff09\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u82b1\u8272\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u540e\u6bd4\u8f83\u3002\u7531\u4e8e`A`\u4e00\u5b9a\u5f53\u6210$14$\u66f4\u4f18\uff0c\u56e0\u6b64\u4e0d\u9700\u8003\u8651$1$\u7684\u60c5\u51b5\u3002\n\n#### 2.3.6 Straight\uff08\u987a\u5b50\uff09\n\n\u9996\u5148\u628a\u6bcf\u4e2a\u724c\u9762\u503c\u56db\u79cd\u82b1\u8272\u7684\u6570\u91cf\u52a0\u8d77\u6765\uff0c\u7136\u540e\u5224\u65ad\u662f\u5426\u6709\u8fde\u7eed\u6bb5\u957f\u5ea6$\\ge 5$\u3002\n\n\u6ce8\u610f\uff0c\u8fd9\u91cc\u65e2\u8981\u4fdd\u7559$14$\u7684\u72b6\u6001\u4e5f\u8981\u52a0\u4e0a$1$\u7684\u72b6\u6001\uff0c\u4f46\u662f\u7531\u4e8e\u987a\u5b50\u957f\u5ea6\u53ea\u6709$5$\uff0c\u56e0\u6b64\u4e0d\u7528\u62c5\u5fc3\u4ea7\u751f\u91cd\u590d\u3002\n\n#### 2.3.7 Three of a kind\uff08\u4e09\u5f20\uff09\n\n\u540c`2.3.4`\uff0c\u53ea\u662f\u4e0d\u9700\u8981\u5224\u65ad$2$\u5f20\uff0c\u4f46\u662f\u5269\u4e0b\u56db\u5f20\u8981\u6392\u597d\u5e8f\uff0c\u4fbf\u4e8e\u6bd4\u8f83\uff08\u5982\u679c\u524d\u4e09\u5f20\u662f\u724c\u9762\u76f8\u540c\u7684\uff09\u3002**\u6ce8\u610f\u7ec6\u8282**\u3002\n\n#### 2.3.8 Two pairs\uff08\u8fde\u5bf9\uff09\n\n\u7c7b\u4f3c`2.3.4`\u67e5\u627e\u4e24\u6b21\u51fa\u73b0\u6b21\u6570\u4e3a$2$\u7684\u724c\uff0c\u6700\u540e\u5c06\u5269\u4e0b\u4e09\u5f20\u6392\u597d\u5e8f\u4fbf\u4e8e\u6bd4\u8f83\u3002**\u6ce8\u610f\u7ec6\u8282**\u3002\n\n#### 2.3.9 One pair\uff08\u5bf9\u5b50\uff09\n\n\u540c`2.3.8`\u3002\n\n#### 2.3.10 High card\uff08\u9ad8\u724c\uff09\n\n\u76f4\u63a5\u5c06\u4e03\u5f20\u724c\u5206\u522b\u6392\u5e8f\u53d6\u6700\u9ad8$5$\u5f20\u6392\u5e8f\u5373\u53ef\uff0c\u64cd\u4f5c\u6700\u4e3a\u7b80\u5355\u3002\n\n--------\n\n\n\n## 3. \u4ee3\u7801\n\n[\u6211\u7684\u4ee3\u7801](https://www.luogu.org/record/show?rid=8732498) \u91cc\u5bf9\u4e8e\u6bcf\u4e2a\u5224\u65ad\u6211\u90fd\u91cd\u65b0\u8bb0\u5f55\u4e86`bool`\u6570\u7ec4\uff0c\u8fd9\u70b9\u53ef\u4ee5\u7ee7\u7eed\u4f18\u5316\u2026\u2026\u7136\u800c\u8db3\u591f\u901a\u8fc7\u672c\u9898\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n\nbool used[5][20];\nstruct card{\n    int col,num;\n    bool operator<(const card &rhs)const{\n        return num>rhs.num;\n    }\n    card(){}\n    card(char ch[]){\n        switch(ch[0]){\n            case 'S':{\n                col=1;\n                break;\n            }\n            case 'H':{\n                col=2;\n                break;\n            }\n            case 'D':{\n                col=3;\n                break;\n            }\n            case 'C':{\n                col=4;\n                break;\n            }\n        }\n        switch(ch[1]){\n            case 'T':{\n                num=10;\n                break;\n            }\n            case 'J':{\n                num=11;\n                break;\n            }\n            case 'Q':{\n                num=12;\n                break;\n            }\n            case 'K':{\n                num=13;\n                break;\n            }\n            case 'A':{\n                num=14;\n                break;\n            }\n            default:{\n                num=ch[1]-'0';\n                break;\n            }\n        }\n        used[col][num]=1;\n    }\n}p1[10],p2[10],com[10];\n\nint ___=0;\nclass checker{\n    private:\n        bool a[5][20],b[5][20];\n        //Royal straight flush\n        int check1(int col1,int num1,int col2,int num2){\n            memset(a,0,sizeof(a));\n            memset(b,0,sizeof(b));\n            a[p1[1].col][p1[1].num]=1;\n            a[p1[2].col][p1[2].num]=1;\n            b[p2[1].col][p2[1].num]=1;\n            b[p2[2].col][p2[2].num]=1;\n            a[com[1].col][com[1].num]=1;\n            b[com[1].col][com[1].num]=1;\n            a[com[2].col][com[2].num]=1;\n            b[com[2].col][com[2].num]=1;\n            a[com[3].col][com[3].num]=1;\n            b[com[3].col][com[3].num]=1;\n            a[col1][num1]=1;b[col1][num1]=1;\n            a[col2][num2]=1;b[col2][num2]=1;\n            bool lans=0,rans=0;\n            for(int i=1;i<=4;i++){\n                if(a[i][10]&&a[i][11]&&a[i][12]&&a[i][13]&&a[i][14])\n                    lans=1;\n                if(b[i][10]&&b[i][11]&&b[i][12]&&b[i][13]&&b[i][14])\n                    rans=1;\n            }\n            if(lans&&rans)\n            \treturn 2;\n            if(lans&&!rans)\n                return 1;\n            if(!lans&&rans)\n                return -1;\n            return 0;\n        }\n        //straight flush\n        int check2(int col1,int num1,int col2,int num2){\n            memset(a,0,sizeof(a));\n            memset(b,0,sizeof(b));\n            a[p1[1].col][p1[1].num==14?1:p1[1].num]=1;\n            a[p1[2].col][p1[2].num==14?1:p1[2].num]=1;\n            b[p2[1].col][p2[1].num==14?1:p2[1].num]=1;\n            b[p2[2].col][p2[2].num==14?1:p2[2].num]=1;\n            a[com[1].col][com[1].num==14?1:com[1].num]=1;\n            b[com[1].col][com[1].num==14?1:com[1].num]=1;\n            a[com[2].col][com[2].num==14?1:com[2].num]=1;\n            b[com[2].col][com[2].num==14?1:com[2].num]=1;\n            a[com[3].col][com[3].num==14?1:com[3].num]=1;\n            b[com[3].col][com[3].num==14?1:com[3].num]=1;\n            a[col1][num1==14?1:num1]=1;b[col1][num1==14?1:num1]=1;\n            a[col2][num2==14?1:num2]=1;b[col2][num2==14?1:num2]=1;\n            int lans=0,rans=0;\n            for(int i=1;i<=4;i++){\n                for(int j=5;j<=13;j++){\n                    if(a[i][j]&&a[i][j-1]&&a[i][j-2]&&a[i][j-3]&&a[i][j-4])\n                        lans=std::max(lans,j);\n                    if(b[i][j]&&b[i][j-1]&&b[i][j-2]&&b[i][j-3]&&b[i][j-4])\n                        rans=std::max(rans,j);\n                }\n            }\n            if(lans&&rans){ \n                if(lans==rans)\n                    return 2;\n                else\n                    return lans>rans?1:-1;\n            }\n            if(lans&&!rans)\n                return 1;\n            if(!lans&&rans)\n                return -1;\n            return 0;\n        }\n        //Four of a kind\n        int check3(int col1,int num1,int col2,int num2){\n            memset(a,0,sizeof(a));\n            memset(b,0,sizeof(b));\n            a[p1[1].col][p1[1].num]=1;\n            a[p1[2].col][p1[2].num]=1;\n            b[p2[1].col][p2[1].num]=1;\n            b[p2[2].col][p2[2].num]=1;\n            a[com[1].col][com[1].num]=1;\n            b[com[1].col][com[1].num]=1;\n            a[com[2].col][com[2].num]=1;\n            b[com[2].col][com[2].num]=1;\n            a[com[3].col][com[3].num]=1;\n            b[com[3].col][com[3].num]=1;\n            a[col1][num1]=1;b[col1][num1]=1;\n            a[col2][num2]=1;b[col2][num2]=1;\n            int lans=0,rans=0;\n            int lx[7]={0},rx[7]={0};\n            for(int i=2;i<=14;i++){\n                if(a[1][i]&&a[2][i]&&a[3][i]&&a[4][i])\n                    lans=i;\n                if(b[1][i]&&b[2][i]&&b[3][i]&&b[4][i])\n                    rans=i;\n                if(a[1][i]||a[2][i]||a[3][i]||a[4][i])\n                \tlx[++lx[0]]=i;\n                if(b[1][i]||b[2][i]||b[3][i]||b[4][i])\n                \trx[++rx[0]]=i;\n            }\n            for(int i=1;i<=lx[0];i++)\n            \tif(lx[i]==lans)\n            \t\tlx[i]=0;\n            std::sort(lx+1,lx+lx[0]+1);\n            for(int i=1;i<=rx[0];i++)\n            \tif(rx[i]==rans)\n            \t\trx[i]=0;\n            std::sort(rx+1,rx+rx[0]+1);\n            if(lans&&rans){\n            \tif(lans!=rans)\n                \treturn lans>rans?1:-1;\n                else{\n                \tif(lx[lx[0]]!=rx[rx[0]])\n                \t\treturn lx[lx[0]]>rx[rx[0]]?1:-1;\n                \treturn 2;\n                }\n            }\n            if(lans&&!rans)\n                return 1;\n            if(!lans&&rans)\n                return -1;\n            return 0;\n        }\n        //Full house(3+2)\n        int check4(int col1,int num1,int col2,int num2){\n            memset(a,0,sizeof(a));\n            memset(b,0,sizeof(b));\n            a[p1[1].col][p1[1].num]=1;\n            a[p1[2].col][p1[2].num]=1;\n            b[p2[1].col][p2[1].num]=1;\n            b[p2[2].col][p2[2].num]=1;\n            a[com[1].col][com[1].num]=1;\n            b[com[1].col][com[1].num]=1;\n            a[com[2].col][com[2].num]=1;\n            b[com[2].col][com[2].num]=1;\n            a[com[3].col][com[3].num]=1;\n            b[com[3].col][com[3].num]=1;\n            a[col1][num1]=1;b[col1][num1]=1;\n            a[col2][num2]=1;b[col2][num2]=1;\n            int lans[2]={0,0},rans[2]={0,0};\n            bool ltot=0,rtot=0;\n            for(int i=14;i>=2;i--){\n            \tif(a[1][i]+a[2][i]+a[3][i]+a[4][i]>=3){\n            \t\tlans[0]=i;\n            \t\ta[1][i]=a[2][i]=a[3][i]=a[4][i]=0;\n            \t\tbreak;\n            \t}\n            }\n            for(int i=14;i>=2;i--){\n            \tif(a[1][i]+a[2][i]+a[3][i]+a[4][i]>=2){\n            \t\tlans[1]=i;\n            \t\tbreak;\n            \t}\n            }\n            if(lans[0]&&lans[1])\n            \tltot=1;\n            for(int i=14;i>=2;i--){\n            \tif(b[1][i]+b[2][i]+b[3][i]+b[4][i]>=3){\n            \t\trans[0]=i;\n            \t\tb[1][i]=b[2][i]=b[3][i]=b[4][i]=0;\n            \t\tbreak;\n            \t}\n            }\n            for(int i=14;i>=2;i--){\n            \tif(b[1][i]+b[2][i]+b[3][i]+b[4][i]>=2){\n            \t\trans[1]=i;\n            \t\tbreak;\n            \t}\n            }\n            if(rans[0]&&rans[1])\n            \trtot=1;\n            if(ltot&&rtot){\n            \tif(lans[0]!=rans[0])\n            \t\treturn lans[0]>rans[0]?1:-1;\n            \telse\n            \t\tif(lans[1]!=rans[1])\n            \t\t\treturn lans[1]>rans[1]?1:-1;\n            \t\telse\n            \t\t\treturn 2;\n            }\n            if(ltot&&!rtot)\n            \treturn 1;\n            if(!ltot&&rtot)\n            \treturn -1;\n            return 0;\n        }\n        //Flush\n        int check5(int col1,int num1,int col2,int num2){\n            memset(a,0,sizeof(a));\n            memset(b,0,sizeof(b));\n            a[p1[1].col][p1[1].num]=1;\n            a[p1[2].col][p1[2].num]=1;\n            b[p2[1].col][p2[1].num]=1;\n            b[p2[2].col][p2[2].num]=1;\n            a[com[1].col][com[1].num]=1;\n            b[com[1].col][com[1].num]=1;\n            a[com[2].col][com[2].num]=1;\n            b[com[2].col][com[2].num]=1;\n            a[com[3].col][com[3].num]=1;\n            b[com[3].col][com[3].num]=1;\n            a[col1][num1]=1;b[col1][num1]=1;\n            a[col2][num2]=1;b[col2][num2]=1;\n            int ltot[5][20],rtot[5][20];\n            memset(ltot,0,sizeof(ltot));\n            memset(rtot,0,sizeof(rtot));\n            for(int i=1;i<=4;i++)\n                for(int j=14;j>=2;j--){\n                    if(a[i][j])\n                        ltot[i][++ltot[i][0]]=j;\n                    if(b[i][j])\n                        rtot[i][++rtot[i][0]]=j;\n                }\n            int lans=0,rans=0;\n            for(int i=1;i<=4;i++){\n                if(ltot[i][0]>=5)\n                    lans=i;\n                if(rtot[i][0]>=5)\n                    rans=i;\n            }\n            if(lans&&rans){\n                for(int i=1;i<=5;i++)\n                    if(ltot[lans][i]!=rtot[rans][i])\n                        return ltot[lans][i]>rtot[rans][i]?1:-1;\n                return 2;\n            }\n            if(lans&&!rans)\n                return 1;\n            if(!lans&&rans)\n                return -1;\n            return 0;\n        }\n        //Straight\n        int check6(int col1,int num1,int col2,int num2){\n            memset(a,0,sizeof(a));\n            memset(b,0,sizeof(b));\n            a[p1[1].col][p1[1].num]=1;\n            a[p1[2].col][p1[2].num]=1;\n            b[p2[1].col][p2[1].num]=1;\n            b[p2[2].col][p2[2].num]=1;\n            a[com[1].col][com[1].num]=1;\n            b[com[1].col][com[1].num]=1;\n            a[com[2].col][com[2].num]=1;\n            b[com[2].col][com[2].num]=1;\n            a[com[3].col][com[3].num]=1;\n            b[com[3].col][com[3].num]=1;\n            a[col1][num1]=1;b[col1][num1]=1;\n            a[col2][num2]=1;b[col2][num2]=1;\n            a[p1[1].col][p1[1].num==14?1:p1[1].num]=1;\n            a[p1[2].col][p1[2].num==14?1:p1[2].num]=1;\n            b[p2[1].col][p2[1].num==14?1:p2[1].num]=1;\n            b[p2[2].col][p2[2].num==14?1:p2[2].num]=1;\n            a[com[1].col][com[1].num==14?1:com[1].num]=1;\n            b[com[1].col][com[1].num==14?1:com[1].num]=1;\n            a[com[2].col][com[2].num==14?1:com[2].num]=1;\n            b[com[2].col][com[2].num==14?1:com[2].num]=1;\n            a[com[3].col][com[3].num==14?1:com[3].num]=1;\n            b[com[3].col][com[3].num==14?1:com[3].num]=1;\n            a[col1][num1==14?1:num1]=1;b[col1][num1==14?1:num1]=1;\n            a[col2][num2==14?1:num2]=1;b[col2][num2==14?1:num2]=1;\n            int ltot[20],rtot[20];\n            memset(ltot,0,sizeof(ltot));\n            memset(rtot,0,sizeof(rtot));\n            for(int i=1;i<=14;i++)\n                for(int j=1;j<=4;j++){\n                    ltot[i]+=a[j][i];\n                    rtot[i]+=b[j][i];\n                }\n            int lans=0,rans=0;\n            for(int i=5;i<=14;i++){\n                if(ltot[i]&&ltot[i-1]&&ltot[i-2]&&ltot[i-3]&&ltot[i-4])\n                    lans=i;\n                if(rtot[i]&&rtot[i-1]&&rtot[i-2]&&rtot[i-3]&&rtot[i-4])\n                    rans=i;\n            }\n            /*\n            printf(\"***********\\n\");\n            printf(\"%d %d %d %d %d %d %d\\n\",p1[1].num,p1[2].num,com[1].num,com[2].num,com[3].num,num1,num2);\n            printf(\"%d %d %d %d %d %d %d\\n\",p2[1].num,p2[2].num,com[1].num,com[2].num,com[3].num,num1,num2);\n            for(int i=1;i<=14;i++)\n            \tprintf(\"%d:l=%d  r=%d\\n\",i,ltot[i],rtot[i]);\n            printf(\"\\n****%d %d****\\n\",lans,rans);\n            printf(\"***********\\n\"); \n            */\n            if(lans&&rans){\n                if(lans!=rans)\n                    return lans>rans?1:-1;\n                return 2;\n            }\n            if(lans&&!rans)\n                return 1;\n            if(!lans&&rans)\n                return -1;\n            return 0;\n        }\n        //Three of a kind\n        int check7(int col1,int num1,int col2,int num2){\n            memset(a,0,sizeof(a));\n            memset(b,0,sizeof(b));\n            a[p1[1].col][p1[1].num]=1;\n            a[p1[2].col][p1[2].num]=1;\n            b[p2[1].col][p2[1].num]=1;\n            b[p2[2].col][p2[2].num]=1;\n            a[com[1].col][com[1].num]=1;\n            b[com[1].col][com[1].num]=1;\n            a[com[2].col][com[2].num]=1;\n            b[com[2].col][com[2].num]=1;\n            a[com[3].col][com[3].num]=1;\n            b[com[3].col][com[3].num]=1;\n            a[col1][num1]=1;b[col1][num1]=1;\n            a[col2][num2]=1;b[col2][num2]=1;\n            int lans=0,rans=0;\n            int lx[8]={0},rx[8]={0};\n            for(int i=2;i<=14;i++){\n                if(a[1][i]+a[2][i]+a[3][i]+a[4][i]==3)\n                    lans=i;\n                if(b[1][i]+b[2][i]+b[3][i]+b[4][i]==3)\n                    rans=i;\n                if(a[1][i]||a[2][i]||a[3][i]||a[4][i])\n                \tlx[++lx[0]]=i;\n                if(b[1][i]||b[2][i]||b[3][i]||b[4][i])\n                \trx[++rx[0]]=i;\n            }\n            for(int i=1;i<=lx[0];i++)\n            \tif(lx[i]==lans)\n            \t\tlx[i]=0;\n            std::sort(lx+1,lx+lx[0]+1);\n            for(int i=1;i<=rx[0];i++)\n            \tif(rx[i]==rans)\n            \t\trx[i]=0;\n            std::sort(rx+1,rx+rx[0]+1);\n            if(lans&&rans){\n            \tif(lans!=rans)\n                \treturn lans>rans?1:-1;\n                else{\n                \tif(lx[lx[0]]!=rx[rx[0]])\n                \t\treturn lx[lx[0]]>rx[rx[0]]?1:-1;\n                \tif(lx[lx[0]-1]!=rx[rx[0]-1])\n                \t\treturn lx[lx[0]-1]>rx[rx[0]-1]?1:-1;\n                \treturn 2;\n                }\n            }\n            if(lans&&!rans)\n                return 1;\n            if(!lans&&rans)\n                return -1;\n            return 0;\n        }\n        //Two pairs\n        int check8(int col1,int num1,int col2,int num2){\n            memset(a,0,sizeof(a));\n            memset(b,0,sizeof(b));\n            a[p1[1].col][p1[1].num]=1;\n            a[p1[2].col][p1[2].num]=1;\n            b[p2[1].col][p2[1].num]=1;\n            b[p2[2].col][p2[2].num]=1;\n            a[com[1].col][com[1].num]=1;\n            b[com[1].col][com[1].num]=1;\n            a[com[2].col][com[2].num]=1;\n            b[com[2].col][com[2].num]=1;\n            a[com[3].col][com[3].num]=1;\n            b[com[3].col][com[3].num]=1;\n            a[col1][num1]=1;b[col1][num1]=1;\n            a[col2][num2]=1;b[col2][num2]=1;\n            int ltot[20],rtot[20];\n            memset(ltot,0,sizeof(ltot));\n            memset(rtot,0,sizeof(rtot));\n            for(int i=2;i<=14;i++)\n                for(int j=1;j<=4;j++){\n                    ltot[i]+=a[j][i];\n                    rtot[i]+=b[j][i];\n                }\n            int lans[5]={0,0,0,0,0},rans[5]={0,0,0,0,0};\n            int lx[5]={0,0,0,0,0},rx[5]={0,0,0,0,0};\n            for(int i=14;i>=2;i--)\n                if(ltot[i]){\n                    if(lans[0]<2&&ltot[i]>=2)\n                        lans[++lans[0]]=i;\n                    else\n                        lx[++lx[0]]=i;\n                }\n            std::sort(lx+1,lx+lx[0]+1);\n            for(int i=14;i>=2;i--)\n                if(rtot[i]){\n                    if(rans[0]<2&&rtot[i]>=2)\n                        rans[++rans[0]]=i;\n                    else\n                        rx[++rx[0]]=i;\n                }\n            std::sort(rx+1,rx+rx[0]+1);\n            if(lans[0]==2&&rans[0]==2){\n                if(lans[1]!=rans[1])\n                    return lans[1]>rans[1]?1:-1;\n                if(lans[2]!=rans[2])\n                    return lans[2]>rans[2]?1:-1;\n                if(lx[lx[0]]!=rx[rx[0]])\n                    return lx[lx[0]]>rx[rx[0]]?1:-1;\n                return 2;\n            }\n            if(lans[0]==2&&rans[0]<2)\n                return 1;\n            if(lans[0]<2&&rans[0]==2)\n                return -1;\n            return 0;\n        }\n        //One pair\n        int check9(int col1,int num1,int col2,int num2){\n            memset(a,0,sizeof(a));\n            memset(b,0,sizeof(b));\n            a[p1[1].col][p1[1].num]=1;\n            a[p1[2].col][p1[2].num]=1;\n            b[p2[1].col][p2[1].num]=1;\n            b[p2[2].col][p2[2].num]=1;\n            a[com[1].col][com[1].num]=1;\n            b[com[1].col][com[1].num]=1;\n            a[com[2].col][com[2].num]=1;\n            b[com[2].col][com[2].num]=1;\n            a[com[3].col][com[3].num]=1;\n            b[com[3].col][com[3].num]=1;\n            a[col1][num1]=1;b[col1][num1]=1;\n            a[col2][num2]=1;b[col2][num2]=1;\n            int ltot[20],rtot[20];\n            memset(ltot,0,sizeof(ltot));\n            memset(rtot,0,sizeof(rtot));\n            for(int i=2;i<=14;i++)\n                for(int j=1;j<=4;j++){\n                    ltot[i]+=a[j][i];\n                    rtot[i]+=b[j][i];\n                }\n            int lans[5]={0,0,0,0,0},rans[5]={0,0,0,0,0};\n            int lx[5]={0,0,0,0,0},rx[5]={0,0,0,0,0};\n            for(int i=14;i>=2;i--)\n                if(ltot[i]){\n                    if(lans[0]<1&&ltot[i]>=2)\n                        lans[++lans[0]]=i;\n                    else\n                        lx[++lx[0]]=i;\n                }\n            std::sort(lx+1,lx+lx[0]+1);\n            for(int i=14;i>=2;i--)\n                if(rtot[i]){\n                    if(rans[0]<1&&rtot[i]>=2)\n                        rans[++rans[0]]=i;\n                    else\n                        rx[++rx[0]]=i;\n                }\n            std::sort(rx+1,rx+rx[0]+1);\n            if(lans[0]==1&&rans[0]==1){\n            \t// printf(\"%d %d\\n\",lans[1],rans[1]);\n                if(lans[1]!=rans[1])\n                    return lans[1]>rans[1]?1:-1;\n                if(lx[lx[0]]!=rx[rx[0]])\n                    return lx[lx[0]]>rx[rx[0]]?1:-1;\n                if(lx[lx[0]-1]!=rx[rx[0]-1])\n                    return lx[lx[0]-1]>rx[rx[0]-1]?1:-1;\n                if(lx[lx[0]-2]!=rx[rx[0]-2])\n                    return lx[lx[0]-2]>rx[rx[0]-2]?1:-1;\n                return 2;\n            }\n            if(lans[0]==1&&rans[0]<1)\n                return 1;\n            if(lans[0]<1&&rans[0]==1)\n                return -1;\n            return 0;\n        }\n        //High card\n        int check10(int col1,int num1,int col2,int num2){\n            int lans[10]={0,p1[1].num,p1[2].num,com[1].num,com[2].num,com[3].num,num1,num2};\n            int rans[10]={0,p2[1].num,p2[2].num,com[1].num,com[2].num,com[3].num,num1,num2};\n            std::sort(lans+1,lans+8);std::sort(rans+1,rans+8);\n            for(int i=7;i>=3;i--)\n                if(lans[i]!=rans[i]){\n                \t// printf(\"%d:%d %d\\n\",i,lans[i],rans[i]);\n                    return lans[i]>rans[i]?1:-1;\n                }\n            return 2;\n        }\n\n    public:\n        bool check(int col1,int num1,int col2,int num2){\n            int opt;\n            opt=check1(col1,num1,col2,num2);\n            if(opt)\n                return opt==2?0:opt>0;\n            // printf(\"Finish check1\\n\");\n            opt=check2(col1,num1,col2,num2);\n            if(opt)\n                return opt==2?0:opt>0;\n            // printf(\"Finish check2\\n\");\n            opt=check3(col1,num1,col2,num2);\n            if(opt)\n                return opt==2?0:opt>0;\n            // printf(\"Finish check3\\n\");\n            opt=check4(col1,num1,col2,num2);\n            if(opt)\n                return opt==2?0:opt>0;\n            // printf(\"Finish check4\\n\");\n            opt=check5(col1,num1,col2,num2);\n            if(opt)\n                return opt==2?0:opt>0;\n            // printf(\"Finish check5\\n\");\n            opt=check6(col1,num1,col2,num2);\n            if(opt)\n                return opt==2?0:opt>0;\n            ___++;\n            // printf(\"Finish check6\\n\");\n            opt=check7(col1,num1,col2,num2);\n            if(opt)\n                return opt==2?0:opt>0;\n            // printf(\"Finish check7\\n\");\n            opt=check8(col1,num1,col2,num2);\n            if(opt)\n                return opt==2?0:opt>0;\n            // printf(\"Finish check8\\n\");\n            opt=check9(col1,num1,col2,num2);\n            if(opt)\n                return opt==2?0:opt>0;\n            // printf(\"Finish check9\\n\");\n            opt=check10(col1,num1,col2,num2);\n            if(opt)\n                return opt==2?0:opt>0;\n            // printf(\"Finish check10\\n\");\n            return 0;\n        }\n};\nchecker croupier;\n\nint main(){\n    char ch[10][3];\n    while(scanf(\"%s\",ch[0]),ch[0][0]!='#'){\n        int lans=0,rans=0;\n        memset(used,0,sizeof(used));\n        for(int i=1;i<7;i++)\n            scanf(\"%s\",ch[i]);\n        p1[1]=card(ch[0]);p1[2]=card(ch[1]);\n        p2[1]=card(ch[2]);p2[2]=card(ch[3]);\n        com[1]=card(ch[4]);com[2]=card(ch[5]);com[3]=card(ch[6]);\n        for(int i=1;i<=4;i++)\n            for(int j=2;j<=14;j++){\n                if(used[i][j])\n                    continue;\n                for(int k=1;k<=4;k++)\n                    for(int l=2;l<=14;l++){\n                        if(used[k][l])\n                            continue;\n                        if(i==k&&j==l)\n                            continue;\n                        rans++;\n                        if(croupier.check(i,j,k,l))\n                            lans++;\n                    }\n            }\n        printf(\"%.17Lf\\n\",(long double)lans/(long double)rans);\n    }\n    return 0;\n}\n```",
        "postTime": 1532153103,
        "uid": 23398,
        "name": "frankchenfu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT330 \u3010Texas hold 'em\u3011"
    },
    {
        "content": "\u9996\u5148\u9898\u76ee\u4e0d\u96be\u61c2\uff0c\u53ea\u9700\u8981\u53bb\u66b4\u529b\u6a21\u62df\u5373\u53ef\u3002\u4f46\u7a0b\u5e8f\u5f88\u96be\u5199\uff0c\u770b\u5230\u697c\u4e0b\u51e0\u4f4d\u5927\u4f6c\u5199\u7684\u9898\u89e3\u90fd\u5199\u4e86\u51e0\u767e\u884c\uff0c\uff01\uff01\uff01 _\u5176\u5b9e\u752813\u8fdb\u5236\u52a0\u6743\u6c42\u548c_\uff01\uff01\uff01\uff08\u5212\u91cd\u70b9\uff09 \uff0c\u5199\u8d77\u6765\u5c31\u5341\u5206\u5bb9\u6613\u3002\u5177\u4f53\u7ec6\u8282\u8bf7\u770b\u4ee3\u7801\u3002\n\n\u8bb0\u5f97\u5173\u6ce8\u6211\u7684\u535a\u5ba2\u54e6\uff1ahttps://www.luogu.org/blog/Noi2017/\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef signed long long ll;\n#undef _P\n#define _P(...) (void)printf(__VA_ARGS__)\n#define FOR(x,to) for(x=0;x<to;x++)\n#define FORR(x,arr) for(auto& x:arr)\n#define ITR(x,c) for(__typeof(c.begin()) x=c.begin();x!=c.end();x++)\n#define ALL(a) (a.begin()),(a.end())\n#define ZERO(a) memset(a,0,sizeof(a))\n#define MINUS(a) memset(a,0xff,sizeof(a))\nint card(string S) {\n\tint v=0;\n\tif(S[0]=='S') v=0;\n\tif(S[0]=='D') v=13;\n\tif(S[0]=='H') v=26;\n\tif(S[0]=='C') v=39;\n\tif(S[1]=='A') v+=12;\n\telse if(S[1]=='T') v+=8;\n\telse if(S[1]=='J') v+=9;\n\telse if(S[1]=='Q') v+=10;\n\telse if(S[1]=='K') v+=11;\n\telse v+=S[1]-'2';\n\treturn v;\n}\nint hand(vector<int> V) {\n\tif(V[0]/13==V[4]/13) {\n\t\tFORR(r,V) r%=13; // remove suit\n\t\tif(V[0]+4==12) return 9000000; //royal straight flush\n\t\tif(V[0]+4==V[4]) return 8000000+V[4]; // straight\n\t\tif(V[0]==0 && V[3]==3 && V[4]==12) return 8000000+3;\n\t\treturn 5000000+(((V[4]*13+V[3])*13+V[2])*13+V[1])*13+V[0];\n\t}\n\telse {\n\t\tFORR(r,V) r%=13; // remove suit\n\t\tsort(ALL(V));\n\t\tif(V[0]==V[3]) return 7000000+V[2]*13+V[4]; // four card\n\t\tif(V[1]==V[4]) return 7000000+V[2]*13+V[0];\n\t\tif(V[0]==V[2] && V[3]==V[4]) return 6000000+V[0]*13+V[4]; // full house\n\t\tif(V[0]==V[1] && V[2]==V[4]) return 6000000+V[4]*13+V[0];\n\t\tif(V[0]+1==V[1] && V[1]+1==V[2] && V[2]+1==V[3] && V[3]+1==V[4]) return 4000000+V[4]; // straight\n\t\tif(V[0]==0 && V[1]==1 && V[2]==2 && V[3]==3 && V[4]==12) return 4000000+3;\n\t\tif(V[0]==V[2]) return 3000000+V[2]*13*13+V[4]*13+V[3]; // three card\n\t\tif(V[1]==V[3]) return 3000000+V[2]*13*13+V[4]*13+V[0];\n\t\tif(V[2]==V[4]) return 3000000+V[2]*13*13+V[1]*13+V[0];\n\t\tif(V[0]==V[1]&&V[2]==V[3]) return 2000000+V[3]*13*13+V[1]*13+V[4]; // two pair\n\t\tif(V[0]==V[1]&&V[3]==V[4]) return 2000000+V[3]*13*13+V[1]*13+V[2];\n\t\tif(V[1]==V[2]&&V[3]==V[4]) return 2000000+V[3]*13*13+V[1]*13+V[0];\n\t\tif(V[4]==V[3]) return 1000000+V[3]*13*13*13+V[2]*13*13+V[1]*13+V[0]; // one pair\n\t\tif(V[3]==V[2]) return 1000000+V[2]*13*13*13+V[4]*13*13+V[1]*13+V[0];\n\t\tif(V[2]==V[1]) return 1000000+V[1]*13*13*13+V[4]*13*13+V[3]*13+V[0];\n\t\tif(V[1]==V[0]) return 1000000+V[0]*13*13*13+V[4]*13*13+V[3]*13+V[2];\n\t\treturn (((V[4]*13+V[3])*13+V[2])*13+V[1])*13+V[0];\n\t}\n}\nint hand(int c1,int c2,int c3,int c4,int c5,int c6,int c7) {\n\tint ma=0,mask,i;\n\tvector<int> V={c1,c2,c3,c4,c5,c6,c7};\n\tsort(ALL(V));\n\tFOR(mask,1<<7) if(__builtin_popcount(mask)==5) {\n\t\tvector<int> V2;\n\t\tFOR(i,7) if(mask & (1<<i)) V2.push_back(V[i]);\n\t\tma=max(ma,hand(V2));\n\t}\n\treturn ma;\n}\nvoid solve() {\n\tint i,j,k,l,r,x,y; string s;\n\twhile(1) {\n\t\tint my[2],op[2],com[5];\n\t\tint vis[60]={};\n\t\tcin>>s;\n\t\tif(s==\"#\") return;\n\t\tmy[0]=card(s), vis[my[0]]=1;\n\t\tcin>>s; my[1]=card(s), vis[my[1]]=1;\n\t\tcin>>s; op[0]=card(s), vis[op[0]]=1;\n\t\tcin>>s; op[1]=card(s), vis[op[1]]=1;\n\t\tcin>>s; com[0]=card(s), vis[com[0]]=1;\n\t\tcin>>s; com[1]=card(s), vis[com[1]]=1;\n\t\tcin>>s; com[2]=card(s), vis[com[2]]=1;\n\t\ti=0;\n\t\tint win=0;\n\t\tFOR(y,52) FOR(x,y) if(vis[x]==0 && vis[y]==0)\n\t\t\twin += hand(my[0],my[1],com[0],com[1],com[2],x,y)>hand(op[0],op[1],com[0],com[1],com[2],x,y);\n\t\t_P(\"%.12lf\\n\",win/(45*44/2.0));\n\t}\n}\nint main(int argc,char** argv){\n\tstring s;int i;\n\tif(argc==1) ios::sync_with_stdio(false);\n\tFOR(i,argc-1) s+=argv[i+1],s+='\\n';\n\tFOR(i,s.size()) ungetc(s[s.size()-1-i],stdin);\n\tsolve(); return 0;\n}\n\n```",
        "postTime": 1532414665,
        "uid": 67896,
        "name": "AllureLove",
        "ccfLevel": 0,
        "title": "\u3010\u7f6e\u9876\u3011\u9898\u89e3 AT330 \u3010Texas hold 'em\u3011"
    }
]