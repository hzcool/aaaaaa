[
    {
        "content": "\u8fd9\u9053\u9898\u76ee\u6570\u636e\u592a\u5c0f\uff0c\u76f4\u63a5\u679a\u4e3e\u5373\u53ef\u3002\n\n\u5224\u65ad\u56db\u4e2a\u70b9\u662f\u5426\u80fd\u6784\u6210\u6b63\u65b9\u5f62\u7684\u65b9\u5f0f\u662f\u5148\u5224\u65ad\u662f\u5426\u6709\u4e09\u4e2a\u76f4\u89d2\uff0c\u518d\u5224\u65ad\u662f\u5426\u6709\u8fb9\u76f8\u7b49\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nvector<pair<int,int> > pl;\nint main(){\n\tstring s[9];\n\tfor(int i=0;i<9;i++){\n\t\tcin>>s[i];\n\t\tfor(int j=0;j<s[i].size();j++)\n\t\t\tif(s[i][j]=='#'){\n\t\t\t\tpl.push_back({i,j});\n\t\t\t}\n\t}\n\tint ans=0;\n\tfor(int i=0;i<pl.size();i++){\n\t\tfor(int j=i+1;j<pl.size();j++){\n\t\t\tfor(int k=j+1;k<pl.size();k++){\n\t\t\t\tfor(int p=k+1;p<pl.size();p++){\n\t\t\t\t\tif(pl[i].first-pl[j].first==pl[k].first-pl[p].first&&pl[i].second-pl[j].second==pl[k].second-pl[p].second){\n\t\t\t\t\t\tint dis1=(pl[i].first-pl[j].first)*(pl[i].first-pl[j].first)+(pl[i].second-pl[j].second)*(pl[i].second-pl[j].second);\n                        int dis2=(pl[i].first-pl[k].first)*(pl[i].first-pl[k].first)+(pl[i].second-pl[k].second)*(pl[i].second-pl[k].second);\n                        int dis3=(pl[i].first-pl[p].first)*(pl[i].first-pl[p].first)+(pl[i].second-pl[p].second)*(pl[i].second-pl[p].second);\n\t\t\t\t\t\tif(dis1==dis2&&dis1+dis2==dis3){\n\t\t\t\t\t\t\tans++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```",
        "postTime": 1668216311,
        "uid": 377768,
        "name": "Tooler_Yang",
        "ccfLevel": 0,
        "title": "[ABC275C] Counting Squares \u9898\u89e3"
    },
    {
        "content": "## \u9898\u610f\n\n\u7edf\u8ba1\u51fa\u4ee5 ```#``` \u4f5c\u4e3a\u56db\u4e2a\u9876\u70b9\uff0c\u6784\u6210\u7684\u6b63\u65b9\u5f62\u7684\u4e2a\u6570\u3002\n\n## \u505a\u6cd5\n\n\u6570\u636e\u8303\u56f4\u5f88\u5c0f\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u679a\u4e3e\uff0c\u4f9d\u636e\u9898\u610f\u5224\u65ad\u5e76\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002\n\n\u6b63\u65b9\u5f62\u65e2\u662f\u5e73\u884c\u56db\u8fb9\u5f62\uff0c\u4e5f\u662f\u77e9\u5f62\uff0c\u4e5f\u662f\u83f1\u5f62\uff0c\u53ea\u8981\u6ee1\u8db3\u4e0a\u8ff0\u4e09\u79cd\u56fe\u5f62\u7684\u5176\u4e2d\u4e09\u4e2a\u5224\u5b9a\u6761\u4ef6\u5373\u53ef\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint ans;\nvector<pair<int,int> >e;\nint main()\n{\n    for(int i=1;i<=9;i++)\n        for(int j=1;j<=9;j++)\n        {\n            char s;\n            cin>>s;\n            if(s=='#')\n                e.push_back(make_pair(i,j));\n        }\n    sort(e.begin(),e.end());\n    for(int i=0;i<e.size();i++)\n        for(int j=i+1;j<e.size();j++)\n            for(int k=j+1;k<e.size();k++)\n                for(int l=k+1;l<e.size();l++)\n                    if(e[i].first-e[j].first==e[k].first-e[l].first&&e[i].second-e[j].second==e[k].second-e[l].second)\n                    {\n                        int l1=(e[i].first-e[j].first)*(e[i].first-e[j].first)+(e[i].second-e[j].second)*(e[i].second-e[j].second);\n                        int l2=(e[i].first-e[k].first)*(e[i].first-e[k].first)+(e[i].second-e[k].second)*(e[i].second-e[k].second);\n                        int l3=(e[i].first-e[l].first)*(e[i].first-e[l].first)+(e[i].second-e[l].second)*(e[i].second-e[l].second);\n                        if(l1==l2&&l1+l2==l3)\n                            ans++;\n                    }\n    cout<<ans<<endl;\n    return 0;\n}\n```\n",
        "postTime": 1667529061,
        "uid": 270854,
        "name": "\u4e8c\u53c9\u82f9\u679c\u6811",
        "ccfLevel": 5,
        "title": "AT_abc275_c [ABC275C] Counting Squares \u9898\u89e3"
    }
]