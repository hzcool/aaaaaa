[
    {
        "content": "[Blog](https://autumnkite.github.io/atcoder-cfoo15B-sol/)\u98df\u7528\u6548\u679c\u66f4\u4f73\n\n## \u9898\u610f\n\n\u7ed9\u5b9a $n$ \u4e2a\u4e8c\u5143\u7ec4 $(a_i,b_i)$\u3002\u4e00\u4e2a\u4e8c\u5143\u7ec4 $(a,b)$ \u53ef\u4ee5\u53d8\u4e3a $(a+t,b-t)\\ (0\\le t\\le b)$\u3002\u4f60\u73b0\u5728\u53ef\u4ee5\u9009\u62e9\u4e00\u4e9b\u4e8c\u5143\u7ec4\u5e76\u5c06\u5b83\u4eec**\u5206\u522b**\u8fdb\u884c\uff08\u5373\u4e92\u76f8\u72ec\u7acb\uff09\u4e00\u6b21\u53d8\u6362\uff0c\u4f7f\u5f97\u53d8\u6362\u540e\u4f60\u9009\u62e9\u7684\u6240\u6709\u4e8c\u5143\u7ec4 $(a_j,b_j)$\uff0c$\\sum a_j\\ge A,\\sum b_j\\ge B$\u3002\u6c42\u6700\u5c11\u9700\u8981\u9009\u62e9\u5e76\u53d8\u6362\u7684\u4e8c\u5143\u7ec4\u6570\u91cf\u3002\n\n$1\\le n\\le 50,1\\le A,B,a_i,b_i\\le 10^4$\n\n\n## \u9898\u89e3\n\n\u8f6c\u5316\u9898\u610f\uff1a\u7ed9\u5b9a $n$ \u4e2a\u4e8c\u5143\u7ec4 $(b_i,a_i+b_i)$\uff0c\u9009\u62e9\u6700\u5c11\u7684\u4e8c\u5143\u7ec4\u4f7f\u5f97\u6240\u6709\u9009\u62e9\u7684\u4e8c\u5143\u7ec4 $\\sum b_j\\ge B,\\sum (a_j+b_j)\\ge A+B$\u3002\n\n\u4e8e\u662f\u5c31\u53ef\u4ee5 DP \u4e86\u3002$dp_{i,j}$ \u8868\u793a\u9009\u62e9 $i$ \u4e2a\u4e8c\u5143\u7ec4\uff0c$\\sum b_i=j$ \u65f6\uff0c$\\sum (a_i+b_i)$ \u7684\u6700\u5927\u503c\u3002\n\n\u8003\u8651\u628a $n$ \u4e2a\u4e8c\u5143\u7ec4\u4f9d\u6b21\u52a0\u5165\uff0cDP \u65b9\u7a0b\u5f88\u5bb9\u6613\u5199\u51fa\u3002\n\n\u53d1\u73b0\u76f4\u63a5\u5199\uff0c\u7b2c\u4e8c\u7ef4\u6709\u767e\u4e07\u7ea7\u522b\uff0c\u600e\u4e48\u529e\uff1f$j>B$ \u7684\u72b6\u6001\u90fd\u5408\u5e76\u5230 $j=B$ \u5904\u5373\u53ef\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nint n, A, B, a[55], b[55], dp[55][10005];\nvoid cmx(int &x, int y){ x = std :: max(x, y); }\nint main(){\n\tscanf(\"%d%d%d\", &n, &B, &A), B += A; // \u4e0e\u4e0a\u9762\u7684 A,B \u6709\u533a\u522b\uff0c\u6ce8\u610f\u533a\u5206\n\tfor (register int i = 1; i <= n; ++i) scanf(\"%d%d\", b + i, a + i), b[i] += a[i]; // \u4e0e\u4e0a\u9762\u7684 ai,bi \u6709\u533a\u522b\uff0c\u6ce8\u610f\u533a\u5206\n\tmemset(dp, -1, sizeof dp), dp[0][0] = 0;\n\tfor (register int i = 1; i <= n; ++i) // \u4f9d\u6b21\u52a0\u5165\n\t\tfor (register int j = i - 1; ~j; --j) // \u5012\u7740\u505a\uff0c\u4e0e 01 \u80cc\u5305\u540c\u7406\n\t\t\tfor (register int k = 0; k <= A; ++k)\n\t\t\t\tif (~dp[j][k]) cmx(dp[j + 1][k + a[i] > A ? A : k + a[i]], dp[j][k] + b[i]);\n\tfor (register int i = 1; i <= n; ++i) if (dp[i][A] >= B) return printf(\"%d\\n\", i), 0;\n\treturn printf(\"-1\\n\"), 0;\n}\n```",
        "postTime": 1549729456,
        "uid": 20561,
        "name": "AutumnKite",
        "ccfLevel": 10,
        "title": "\u300cAT1724\u300d\u300cCODE FESTIVAL 2015 OKINAWA OPEN\u300dBeware of the Sogginess!"
    }
]