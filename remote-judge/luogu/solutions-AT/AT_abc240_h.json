[
    {
        "content": "\u6570\u636e\u8303\u56f4\u770b\u4e0a\u53bb\u5c31\u662f\u6839\u53f7\u8001\u54e5\u6216\u8005\u4e09\u53ea\u8001\u54e5\u7684\u4e1c\u897f\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u9009\u51fa\u6765\u7684\u5b50\u4e32\uff0c\u76f8\u90bb\u7684\u957f\u5ea6\u5dee\u4e00\u5b9a\u4e0d\u4f1a\u5927\u4e8e $1$\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5bb9\u6613\u53d1\u73b0\u76f4\u63a5\u8fc7\u6ee4\u6389\u957f\u5ea6\u5927\u4e8e $\\sqrt{2n}$ \u7684\u5b50\u4e32\u5bf9\u7b54\u6848\u6ca1\u6709\u5f71\u54cd\u3002\n\n\u90a3\u4e48\u50cf Trie \u90a3\u6837\u76f4\u63a5 dfs \u4e00\u904d\uff0c\u628a\u6240\u6709\u957f\u5ea6\u5728 $\\sqrt{2n}$ \u4e4b\u5185\u7684\u5b50\u4e32\u6309\u5b57\u5178\u5e8f\u6392\u597d\u5e8f\uff0c\u7136\u540e\u5c31\u662f\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u95ee\u9898\uff0c\u76f4\u63a5\u6811\u72b6\u6570\u7ec4\u4f18\u5316 dp \u5c31\u597d\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\sqrt{n} \\log n)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=25005;\nconst int sq=231;\nint n,m,a[N]; vector<int>o[2]; char str[N];\nstruct BIT{\n    int c[N];\n    #define lowbit(x) (x&(-x))\n    inline void update(int x,int y){ while(x<=n) c[x]=max(c[x],y),x+=lowbit(x); }\n    inline int query(int x){ int res=0; while(x) res=max(res,c[x]),x-=lowbit(x); return res; }\n}T;\nstruct Str{ int l,r; }b[N*sq];\ninline void solve(vector<int>e,int len){\n    if(e.empty() || len*len>n*2) return;\n    vector<int>v[2];\n    for(int i=0;i<e.size();i++){\n        b[++m]={e[i],e[i]+len-1};\n        if(e[i]+len-1<n) v[a[e[i]+len]].emplace_back(e[i]);\n    }\n    for(int i=0;i<2;i++) solve(v[i],len+1);\n}\nint main(){\n    scanf(\"%d%s\",&n,str+1);\n    for(int i=1;i<=n;i++) a[i]=str[i]^'0';\n    for(int i=n;i;i--) o[a[i]].emplace_back(i);\n    solve(o[0],1); solve(o[1],1);\n    for(int i=1;i<=m;i++){\n        int ri=T.query(b[i].l-1)+1;\n        T.update(b[i].r,ri);\n    }\n    printf(\"%d\\n\",T.query(n));\n    return 0;\n}\n```\n",
        "postTime": 1670987101,
        "uid": 236862,
        "name": "DitaMirika",
        "ccfLevel": 7,
        "title": "ABC240Ex"
    },
    {
        "content": "\u9996\u5148\u6709\u4e00\u4e2a\u66b4\u529b\uff1a\n\n- \u628a\u6240\u6709\u5b50\u4e32 $[l, r]$ \u6293\u51fa\u6765\u6309\u5b57\u5178\u5e8f\u6392\u5e8f\u3002\n- \u8003\u8651 dp\uff0c\u8bbe $dp_i$ \u8868\u793a\u6309\u5b57\u5178\u5e8f\u6392\u5e8f\u540e\u4ee5\u7b2c $i$ \u4e2a**\u4e0d\u53bb\u91cd**\u5b50\u4e32\u7ed3\u5c3e\u7684\u6700\u5927\u957f\u5ea6\u3002\n- \u5bf9\u6bcf\u4e2a $i$ \u9884\u5904\u7406\u524d\u9762\u7b2c\u4e00\u4e2a\u4e0d\u540c\u7684 $lst_i$\uff0c\u5219 $dp_i = \\max(\\displaystyle\\max_{j = 1}^{lst_i} dp_j, 0) + 1$\u3002\n- \u6811\u72b6\u6570\u7ec4\u4f18\u5316\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^2 \\log n)$\u3002\n\n\u4eba\u7c7b\u667a\u6167\u5730\uff0c\u6ce8\u610f\u5230\u5982\u4e0b\u6027\u8d28\uff1a\n\n- \u4e00\u5b9a\u5b58\u5728\u4e00\u79cd\u6700\u4f18\u65b9\u6848\uff0c\u4f7f\u5f97\u4e0d\u5b58\u5728\u4e00\u4e2a\u88ab\u9009\u4e2d\u7684\u5b50\u4e32\u6ee1\u8db3 $r_i - l_i + 1 > \\sqrt{2n}$\u3002\n\n\u8bc1\u660e\uff1a\u628a\u6700\u4f18\u65b9\u6848\u4e2d\u7684\u5b50\u4e32\u6309\u957f\u5ea6\u6392\u5e8f\uff0c\u82e5\u6b64\u65f6\u5b58\u5728\u76f8\u90bb\u4e24\u9879\u957f\u5ea6\u5dee $> 1$\uff0c\u5219\u53ef\u4ee5\u628a\u8f83\u957f\u8005\u7684\u957f\u5ea6\u5220\u5230\u8f83\u77ed\u8005\u7684\u957f\u5ea6 $+ 1$\u3002\u82e5\u8981\u8ba9\u6700\u957f\u8005\u7684\u957f\u5ea6\u6700\u5927\uff0c\u8bbe\u5176\u957f\u5ea6\u4e3a $M$\uff0c\u5219\u7406\u8bba\u4e0a\u9700\u8981\u6ee1\u8db3 $\\frac{M(M + 1)}{2} \\leq n$\uff0c\u4e8e\u662f\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u5bbd\u677e\u7684\u4e0a\u754c $M \\leq \\sqrt{2n}$\uff0c\u8fdb\u800c\u5f97\u8bc1\u3002\n\n\u4e8e\u662f\u6211\u4eec\u628a\u6ee1\u8db3\u6761\u4ef6\u7684\u5b50\u4e32\u6293\u51fa\u6765\u8dd1\u524d\u8ff0\u7b97\u6cd5\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n \\sqrt{n} \\log n)$.\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <vector>\n#include <cmath>\n\nusing namespace std;\n\ntypedef struct {\n\tint nxt[7];\n\tvector<pair<int, int> > v;\n} Node;\n\nint id1 = 1, id2 = 0;\nint ref[25007][327], l[5550257], bit[5550257], dp[5550257];\nchar s[25007];\nNode trie[5550257];\nvector<int> v1[25007], v2[25007];\n\ninline void insert(int l, int r){\n\tint x = 1;\n\tfor (register int i = l; i <= r; i++){\n\t\tint ch = s[i] - '0';\n\t\tif (trie[x].nxt[ch] == 0) trie[x].nxt[ch] = ++id1;\n\t\tx = trie[x].nxt[ch];\n\t\ttrie[x].v.push_back(make_pair(l, i));\n\t}\n}\n\nvoid dfs(int x){\n\tint size = trie[x].v.size(), pre = id2;\n\tfor (register int i = 0; i < size; i++){\n\t\tid2++;\n\t\tl[id2] = pre;\n\t\tv1[trie[x].v[i].first].push_back(id2);\n\t\tv2[trie[x].v[i].second].push_back(id2);\n\t}\n\tif (trie[x].nxt[0] != 0) dfs(trie[x].nxt[0]);\n\tif (trie[x].nxt[1] != 0) dfs(trie[x].nxt[1]);\n}\n\ninline int lowbit(int x){\n\treturn x & (-x);\n}\n\ninline void update(int x, int k){\n\twhile (x <= id2){\n\t\tbit[x] = max(bit[x], k);\n\t\tx += lowbit(x);\n\t}\n}\n\ninline int get_max(int x){\n\tint ans = 0;\n\twhile (x > 0){\n\t\tans = max(ans, bit[x]);\n\t\tx -= lowbit(x);\n\t}\n\treturn ans;\n}\n\nint main(){\n\tint n, m, ans = 0;\n\tcin >> n;\n\tcin >> &s[1];\n\tm = sqrt(n * 2);\n\tfor (register int i = 1; i <= n; i++){\n\t\tinsert(i, min(i + m - 1, n));\n\t}\n\tdfs(1);\n\tfor (register int i = 1; i <= n; i++){\n\t\tint size1 = v1[i].size(), size2 = v2[i].size();\n\t\tfor (register int j = 0; j < size1; j++){\n\t\t\tint x = v1[i][j];\n\t\t\tdp[x] = get_max(l[x]) + 1;\n\t\t\tans = max(ans, dp[x]);\n\t\t}\n\t\tfor (register int j = 0; j < size2; j++){\n\t\t\tint x = v2[i][j];\n\t\t\tupdate(x, dp[x]);\n\t\t}\n\t}\n\tcout << ans;\n\treturn 0;\n}\n```",
        "postTime": 1679317712,
        "uid": 201007,
        "name": "Leasier",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 [ABC240Ex] Sequence of Substrings"
    }
]