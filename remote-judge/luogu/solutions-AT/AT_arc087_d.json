[
    {
        "content": "\u9996\u5148\u8003\u8651\u4ec0\u4e48\u6837\u7684\u6392\u5217\u80fd\u591f\u4f7f\u6743\u503c\u6700\u5927\u3002\n\n\u8003\u8651\u6743\u503c\u4e0a\u754c\uff1a\n\n\u5bf9\u4e8e\u6bcf\u4e00\u6761\u8fb9\uff0c\u5982\u679c\u628a\u5b83\u5207\u6389\u5219\u6811\u4f1a\u5206\u6210 $S_1$ \u548c $S_2$ \u4e24\u4e2a\u8054\u901a\u5757\uff0c\u4e0d\u59a8 $|S_1|\\le |S_2|$\u3002\n\n\u90a3\u4e48\u8fd9\u4e00\u6761\u8fb9\u663e\u7136\u6700\u591a\u88ab\u7ecf\u8fc7 $2|S_1|$ \u6b21\u3002\n\n\u6b64\u65f6\uff0c$\\forall u\\in S_1,p_u\\in S_2$\u3002\n\n\u8003\u8651\u5c06**\u91cd\u5fc3** $G$ \u62c9\u51fa\u6765\u4f5c\u4e3a\u6839\u3002\u5982\u679c\u5b58\u5728\u591a\u4e2a\u91cd\u5fc3\u5219\u968f\u4fbf\u9009\u4e00\u4e2a\u5373\u53ef\u3002\n\n\u90a3\u4e48\u73b0\u5728\u6bcf\u4e00\u4e2a $S_1$ \u4e00\u5b9a\u662f\u4e00\u68f5\u5b50\u6811\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u4f7f\u5f97\u6743\u503c\u6700\u5927\u7684\u7b49\u4ef7\u6761\u4ef6\u4e3a $\\forall (G,v),u\\in subtree(v),p_u\\notin subree(v)$\u3002\n\n\u6709\u4e86\u8fd9\u4e2a\u7ed3\u8bba\uff0c\u5c31\u5bb9\u6613\u4f7f\u7528\u5bb9\u65a5\u6c42\u7b54\u6848\u4e86\u3002\n\n$f_i$ \u8868\u793a\u94a6\u5b9a $i$ \u4e2a\u70b9\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u5269\u4e0b\u70b9\u4efb\u610f\u7684\u65b9\u6848\u6570\u3002\n\n\u5219 $Ans=\\sum (-1)^if_i(n-i)!$\n\n\u5355\u72ec\u8003\u8651\u6bcf\u4e00\u4e2a $(G,v)$ \u7684 $subtree(v)$\uff0c\u8bbe\u5176\u5927\u5c0f\u4e3a $x$\u3002\n\n\u5bb9\u6613\u5f97\u5230\u8fd9\u4e2a\u5b50\u6811\u4e2d $f_i=\\binom{x}{i}^2i!$\u3002\n\n\u6700\u7ec8\u7684 $f$ \u628a\u6240\u6709\u7684\u5b50\u6811\u4f7f\u7528\u80cc\u5305\u5408\u5e76\u8d77\u6765\u5373\u53ef\uff0c\u590d\u6742\u5ea6 $O(n^2)$\u3002\n\n\u4ee3\u7801\uff08\u7565\u6bd2\u7624\uff09\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define N 5005\n#define MOD 1000000007\n#define pb push_back\nint n,cntG,G,ans,fc[N],invF[N],sz[N],dp[N];vector<int> e[N];\nvoid dfs(int u,int f)\n{\n\tint mx=0;sz[u]=1;\n\tfor(int i=0,v;i<e[u].size();++i)\n\t{v=e[u][i];if(v!=f) dfs(v,u),sz[u]+=sz[v],mx=max(mx,sz[v]);}\n\tmx=max(mx,n-sz[u]);if(mx<=n/2) ++cntG,G=u;\n}\nint qPow(int x,int y)\n{int res=1;for(;y;y/=2,x=1ll*x*x%MOD) if(y&1) res=1ll*res*x%MOD;return res;}\nint C(int x,int y) {return 1ll*fc[x]*invF[y]%MOD*invF[x-y]%MOD;}\nint main()\n{\n\tscanf(\"%d\",&n);fc[0]=invF[0]=dp[0]=1;\n\tfor(int i=1;i<=n;++i) fc[i]=1ll*fc[i-1]*i%MOD;invF[n]=qPow(fc[n],MOD-2);\n\tfor(int i=n-1;i;--i) invF[i]=1ll*invF[i+1]*(i+1)%MOD;\n\tfor(int i=1,u,v;i<n;++i)\n\t\tscanf(\"%d %d\",&u,&v),e[u].pb(v),e[v].pb(u);dfs(1,0);dfs(G,0);\n\tfor(int i=0,x,w;i<e[G].size();++i)\n\t{\t\n\t\tx=sz[e[G][i]];\n\t\tfor(int j=n;j>=0;--j) for(int k=1;k<=min(j,x);++k)\n\t\t{w=1ll*C(x,k)*fc[x]%MOD*invF[x-k]%MOD;dp[j]=(dp[j]+1ll*dp[j-k]*w)%MOD;}\n\t}for(int i=0;i<=n;++i) ans=(ans+(i&1?-1ll:1ll)*dp[i]*fc[n-i])%MOD;\n\tprintf(\"%d\\n\",(ans+MOD)%MOD);return 0;\n}\n```",
        "postTime": 1623335107,
        "uid": 119621,
        "name": "Kubic",
        "ccfLevel": 10,
        "title": "[ARC087D] Squirrel Migration"
    },
    {
        "content": "\u6211\u4eec\u5148\u8003\u8651\u7b54\u6848\u600e\u4e48\u7b97\uff0c\u8fd9\u4e2a\u548c\u6811\u4e0a\u70b9\u5bf9\u5339\u914d\u7684\u6a21\u578b\u5f88\u50cf\uff0c\u8003\u8651\u5bf9\u6bcf\u6761\u8fb9$(u,v)$\u7edf\u8ba1\u8d21\u732e\uff0c\u8fd9\u6761\u8fb9\u5de6\u8fb9\u6709$size_u$\u4e2a\u70b9\uff0c\u53f3\u8fb9\u6709$size_v$\u4e2a\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u65e2\u7136\u5e0c\u671b\u5bf9\u6bcf\u4e2a\u70b9\u627e\u4e00\u4e2a\u5339\u914d\u70b9\u4f7f\u5f97\u8ddd\u79bb\u548c\u6700\u5927\uff0c\u90a3\u80af\u5b9a\u662f\u8ba9\u8de8\u8fc7\u8fd9\u6761\u8fb9\u7684\u5c3d\u91cf\u591a\uff0c\u6240\u4ee5\u4e0d\u96be\u53d1\u73b0\u7b54\u6848\u5c31\u662f$\\sum_{(u,v)}min\\{size_u,size_v\\}$\u3002\uff08\u8981\u6ce8\u610f\uff0c\u8fd9\u4e2a\u662f\u4e00\u4e2a**\u5355\u5411\u5339\u914d**\u7684\u8fc7\u7a0b\uff09\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u8ba1\u6570\uff0c\u8003\u8651$i$\u80fd\u548c\u4ec0\u4e48\u70b9\u5339\u914d\u3002\u6211\u4eec\u60f3\u4e0a\u4e2a\u5f0f\u5b50\u7684\u542b\u4e49\u5c31\u662f\u4e00\u6761\u8fb9\u53d6$size$\u8f83\u5c0f\u7684\u90a3\u8fb9\uff0c\u90a3\u4e48\u6211\u4eec\u6839\u636e\u8fd9\u4e2a\u4e0d\u96be\u60f3\u5230\u8003\u8651\u4f7f\u5f97size\u5e73\u8861\u7684\u6811\u7684\u91cd\u5fc3\uff0c\u6bcf\u6761\u8fb9\u7684\u8f83\u5c0f\u7684\u4e00\u8fb9\u4e00\u5b9a\u662f\u504f\u79bb\u91cd\u5fc3\u7684\u90a3\u8fb9\uff0c\u90a3\u4e48\u6211\u4eec\u53d1\u73b0\u5176\u5b9e\u53ea\u9700\u8ba9\u6bcf\u4e2a\u70b9\u7684\u5339\u914d\u70b9\u5728\u91cd\u5fc3\u7684\u53e6\u4e00\u8fb9\u5c31\u884c\u4e86\u3002\n\n\u5982\u679c\u8fd9\u68f5\u6811\u67092\u4e2a\u91cd\u5fc3\u7684\u8bdd\uff0c\u90a3\u4e48\u8fd9\u68f5\u6811\u53ea\u4f1a\u88ab\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u6240\u4ee5\u6bcf\u4e2a$i$\u6709$\\frac {n}2$\u79cd\u9009\u62e9\uff0c\u6240\u4ee5\u662f$(n-2)!^2$\uff08\u5e73\u65b9\u662f\u56e0\u4e3a\u8981\u5206\u4e24\u90e8\u5206\u7b97\uff09\u3002\n\n\u5982\u679c\u67091\u4e2a\u91cd\u5fc3\u7684\u8bdd\uff0c\u8003\u8651\u5bb9\u65a5\uff0c\u6211\u4eec\u4e0d\u80fd\u8ba9$i$\u70b9\u548c\u5728\u6240\u5728\u7684\u91cd\u5fc3\u7684\u5b50\u6811\u91cc\u7684\u70b9\u5339\u914d\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u628a\u91cd\u5fc3\u7684\u5b50\u6811\u62ff\u51fa\u6765\u505a\u4e2a$O(n^2)$\u80cc\u5305\uff0c$dp[i]$\u8868\u793a\u6709$i$\u4e2a\u70b9\u548c\u81ea\u5df1\u6240\u5728\u7684\u5b50\u6811\u5339\u914d\u7684\u65b9\u6848\u6570\uff0c\u4e8e\u662f$ans=\\sum_{i=0}^n(-1)^idp[i](n-i)!$\u3002\n\n\u4e0a\u4ee3\u7801~\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <cstring>\n#define ll long long\n#define p 1000000007\nusing namespace std;\nnamespace ywy {\n\ttypedef struct _b {\n\t    int dest;\n\t    int nxt;\n\t} bian;\n\tbian memchi[1000001];\n\tint gn = 1, heads[5001];\n\tll jc[5001], jcny[5001];\n\tll dp[5001];\n\tinline void add(int s, int t) {\n\t    memchi[gn].dest = t;\n\t    memchi[gn].nxt = heads[s];\n\t    heads[s] = gn;\n\t    gn++;\n\t}\n\tint size[5001], n;\n\tinline ll mi(int a, int b) {\n\t    ll ans = 1, tmp = a;\n\t    while (b) {\n\t        if (b & 1)\n\t            ans = (ans * tmp) % p;\n\t        tmp = (tmp * tmp) % p;\n\t        b >>= 1;\n\t    }\n\t    return (ans);\n\t}\n\tvector<int> vec;\n\tvoid dfs(int pt, int baba) {\n\t    int mx = 0;\n\t    size[pt] = 1;\n\t    for (register int i = heads[pt]; i; i = memchi[i].nxt) {\n\t        if (memchi[i].dest == baba)\n\t            continue;\n\t        dfs(memchi[i].dest, pt);\n\t        size[pt] += size[memchi[i].dest];\n\t        mx = max(mx, size[memchi[i].dest]);\n\t    }\n\t    if (max(mx, n - size[pt]) <= n / 2)\n\t        vec.push_back(pt);\n\t}\n\tvoid efs(int pt, int baba) {\n\t    size[pt] = 1;\n\t    for (register int i = heads[pt]; i; i = memchi[i].nxt) {\n\t        if (memchi[i].dest == baba)\n\t            continue;\n\t        efs(memchi[i].dest, pt);\n\t        size[pt] += size[memchi[i].dest];\n\t    }\n\t}\n\tinline ll cnm(int n, int m) {\n\t    if (n < m)\n\t        return (0);\n\t    ll cjr = jc[n];\n\t    cjr *= jcny[m];\n\t    cjr %= p;\n\t    cjr *= jcny[n - m];\n\t    return (cjr % p);\n\t}\n\tinline ll anm(int n, int m) {\n\t    if (n < m)\n\t        return (0);\n\t    ll cjr = jc[n];\n\t    cjr *= jcny[n - m];\n\t    return (cjr % p);\n\t}\n\tvoid ywymain() {\n\t    cin >> n;\n\t    for (register int i = 1; i < n; i++) {\n\t        int s, t;\n\t        cin >> s >> t;\n\t        add(s, t);\n\t        add(t, s);\n\t    }\n\t    dfs(1, 0);\n\t    jc[0] = 1;\n\t    for (register int i = 1; i <= n; i++) jc[i] = (jc[i - 1] * i) % p;\n\t    jcny[n] = mi(jc[n], p - 2);\n\t    for (register int i = n - 1; i >= 0; i--) jcny[i] = (jcny[i + 1] * (i + 1)) % p;\n\t    if (vec.size() == 2) {\n\t        cout << (jc[n / 2] * jc[n / 2]) % p << endl;\n\t        return;\n\t    }\n\t    dp[0] = 1;\n\t    int rt = vec[0];\n\t    efs(rt, 0);\n\t    int tot = 0;\n\t    for (register int i = heads[rt]; i; i = memchi[i].nxt) {\n\t        tot += size[memchi[i].dest];\n\t        for (register int j = tot; j >= 0; j--) {\n\t            for (register int k = 1; k <= min(j, size[memchi[i].dest]); k++) {\n\t                ll cjr = dp[j - k];\n\t                cjr *= cnm(size[memchi[i].dest], k);\n\t                cjr %= p;\n\t                cjr *= anm(size[memchi[i].dest], k);\n\t                dp[j] = (dp[j] + cjr) % p;\n\t            }\n\t        }\n\t    }\n\t    ll ans = 0;\n\t    for (register int i = 0; i <= n; i++) {\n\t        if (i & 1)\n\t            ans -= dp[i] * jc[n - i], ans %= p, ans += p, ans %= p;\n\t        else\n\t            ans = (ans + dp[i] * jc[n - i]) % p;\n\t    }\n\t    cout << ans << endl;\n\t}\n}\nint main() {\n    ywy::ywymain();\n    return (0);\n}\n```",
        "postTime": 1559711300,
        "uid": 125124,
        "name": "ywy_c_asm",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 AT3728 \u3010Squirrel Migration\u3011"
    },
    {
        "content": "\u8003\u5bdf\u6bcf\u6761\u8fb9\u7684\u8d21\u732e\u3002\n\n\u8bbe\u5207\u6389\u8fd9\u4e2a\u8fb9\u540e\u5f62\u6210\u8fde\u901a\u5757 $s1,s2$\uff0c\u8bbe $|s1|\\le |s2|$\uff0c\u90a3\u4e48\u8fd9\u6761\u8fb9\u7684\u8d21\u732e $\\le 2|s1|$\n\n\u53d6\u7b49\u5f53\u4e14\u4ec5\u5f53 $s1$ \u4e2d\u7684\u6bcf\u4e2a\u70b9 $x$\uff0c$p_x\\in s2$\u3002\n\n\u53d6\u91cd\u5fc3\u4e3a\u6839\uff0c\u90a3\u4e48\u6bcf\u4e2a\u5b50\u6811\u5927\u5c0f\u5747\u4e0d\u5927\u4e8e\u5176\u8865\u6811\u5927\u5c0f\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\u6bcf\u4e2a\u5b50\u6811\u90fd\u662f $s1$\uff0c\u8fd9\u4e2a\u5b50\u6811\u4e2d\u7684\u6bcf\u4e2a\u70b9\u90fd\u8981\u8fde\u5411\u5176\u8865\u6811\u3002\n\u200b\n\u8003\u8651\u5bb9\u65a5\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u5927\u5c0f\u4e3a $x$ \u7684\u5b50\u6811\uff0c\u94a6\u5b9a\u5176\u4e2d\u6709 $i$ \u4e2a\u70b9\u4e0d\u5408\u6cd5\uff0c\u90a3\u4e48\u663e\u7136\u662f $\\dbinom x i ^2 i!$\u3002\n\n\u94a6\u5b9a $i$ \u4e2a\u70b9\u4e58\u4e0a\u94a6\u5b9a $i$ \u4e2a $p$ \u4e58\u4e0a\u4ea4\u6362\u987a\u5e8f\u3002\n\n\u90a3\u4e48\u53ef\u4ee5\u7b97\u51fa\u91cd\u5fc3\u6bcf\u4e2a\u5b50\u6811\u7684\u6709 $i$ \u4e2a\u70b9\u4e0d\u5408\u6cd5\u7684\u6570\u91cf\uff0c\u8003\u8651\u5408\u5e76\u5230\u91cd\u5fc3\u3002\u6811\u5f62\u80cc\u5305\u5373\u53ef\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u6839\uff0c\u4f60\u5408\u5e76\u51fa\u4e00\u4e2a $f_i$ \u8868\u793a\u6709 $i$ \u4e2a\u70b9\u4e0d\u5408\u6cd5\u7684\u6570\u91cf\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f $\\sum_{i=0}^n f_i(n-i)!(-1)^i$\u3002\n\n\u6ce8\u610f\u5230\u8fd9\u91cc\u7684\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2)$\uff0c\u74f6\u9888\u5728\u4e8e\u6811\u5f62\u80cc\u5305\u3002\n\n\u8fd9\u91cc\u6811\u5f62\u80cc\u5305\u7684\u5f62\u5f0f\u76f8\u5f53\u4e8e\u5c06\u82e5\u5e72\u4e2a\u603b\u957f\u4e3a $n$ \u7684\u591a\u9879\u5f0f\u76f8\u4e58\u3002\u6211\u4eec\u6bcf\u6b21\u9009\u62e9\u4e24\u4e2a\u957f\u5ea6\u6700\u5c0f\u7684\u591a\u9879\u5f0f\u7528 NTT \u76f8\u4e58\uff08\u54c8\u592b\u66fc\u6811\uff09\uff0c\u5373\u53ef\u505a\u5230 $O(n\\log ^2 n)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002",
        "postTime": 1658312469,
        "uid": 203623,
        "name": "Ntokisq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT3728 [ARC087D] Squirrel Migration"
    },
    {
        "content": "### [[ARC087F](https://atcoder.jp/contests/arc087/tasks/arc087_d)] Squirrel Migration\n\n> \u7ed9\u4f60\u4e00\u4e2a $n$ \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u6c42\u4e00\u4e2a $1\\sim n$ \u7684\u6392\u5217$(p_1,p_2,\\dots p_n)$\uff0c\u4f7f\u5f97 $\\sum dist(i,p_i)$ \u6700\u5927\u3002\n>\n> \u6c42\u8fd9\u6837\u7684\u6392\u5217\u4e2a\u6570\u3002\u7b54\u6848\u5bf9 $10^9+7$ \u53d6\u6a21\u3002\n\n\u8bc1\u660e\u4e86\u4e00\u4e9b\u5bf9\u6211\u6765\u8bf4\u4e0d\u662f\u5f88\u663e\u7136\u7684\u7ed3\u8bba\uff0c\u53ef\u80fd\u6709\u4e00\u4e9b\u6f0f\u6d1e\uff0c\u5982\u6709\u671b\u6307\u6b63\u3002\n\n------\n\n\u76f8\u5f53\u4e8e\u5bf9\u4e8e\u6bcf\u4e2a\u70b9 $i$\uff0c\u627e\u5230\u4e00\u4e2a $p_i$ \u4e0e\u4e4b\u5339\u914d\uff08\u4f46\u662f $p_i$ \u53ef\u4ee5\u53bb\u5339\u914d\u522b\u7684\u70b9\uff09\uff08\u8bf4\u5e9f\u8bdd\uff09\u3002\n\n\u7ed3\u8bba\uff1a\u6240\u6709\u70b9 $i$ \u4e0e $p_i$ \u5728\u8fd9\u9897\u6811\u7684\u91cd\u5fc3\u7684\u4e0d\u540c\u5b50\u6811\u4e2d\uff08\u6216\u8005\u5176\u4e2d\u4e00\u4e2a\u70b9\u662f\u91cd\u5fc3\u672c\u8eab\uff09\u3002\n\n\u8bc1\u660e\uff1a\n\n1. \u4e00\u5b9a\u5b58\u5728\u4e00\u79cd\u6784\u9020\u4f7f\u5f97 $i$ \u548c $p_i$ \u5b58\u5728\u4e8e\u4e0d\u540c\u7684\u91cd\u5fc3\u5b50\u6811\u4e2d\u3002\u5c06\u4ee5\u91cd\u5fc3\u4e3a\u6839\u7684\u6bcf\u4e2a\u70b9\u6309\u7167 dfs \u5e8f\u7ec4\u6210\u4e00\u4e2a\u73af\uff0c\u56e0\u4e3a\u91cd\u5fc3\u7684\u4efb\u610f\u4e00\u9897\u5b50\u6811\u5927\u5c0f\u5c0f\u4e8e\u7b49\u4e8e $ \\frac{n}{2}$\uff0c\u4e14\u8fd9\u9897\u5b50\u6811\u5185\u7684\u70b9\u5728\u73af\u4e0a\u8fde\u7eed\uff0c\u6240\u4ee5\u4e00\u4e2a\u70b9\u5de6\u4fa7\u7b2c $\\frac{n}{2}$ \u4e2a\u70b9\u4e00\u5b9a\u4e0d\u5728\u8fd9\u9897\u70b9\u6240\u5c5e\u5b50\u6811\u5185\u3002\n2. \u6ee1\u8db3\u8fd9\u4e00\u6761\u4ef6\u7684\u6784\u9020\u4e2d\u5b58\u5728\u4e00\u79cd\u53ef\u4ee5\u53d6\u5230\u6700\u5927\u7b54\u6848\u3002\u8003\u8651\u53cd\u8bc1\uff0c\u5047\u5982\u5b58\u5728\u4e00\u4e2a\u70b9 $i$ \u548c $p_i$ \u5728\u540c\u4e00\u5b50\u6811\u5185\uff0c\u90a3\u4e48\u53ef\u4ee5\u6839\u636e\u7b2c\u4e00\u6761\uff0c\u4e00\u5b9a\u5b58\u5728\u53e6\u4e00\u4e2a\u70b9 $j$ \u548c $p_j$ \u5728\u540c\u4e00\u5b50\u6811\u5185\uff0c\u6211\u4eec\u5c06 $i\\to p_j,j\\to p_i$ \u4e00\u5b9a\u4f1a\u6bd4\u73b0\u5728\u66f4\u4f18\u3002\u8bc1\u660e\u8fd9\u70b9\u53ea\u9700\u8981\u5bf9 $i$ \u548c $p_i$\uff0c$j$ \u548c $p_j$ \u53d6 $lca$\uff0c\u66f4\u6539\u540e\u7684\u8def\u5f84\u957f\u5ea6\u5373\u6bd4\u539f\u5148\u591a $2$ \u500d\u7684 $lca$ \u95f4\u7684\u8def\u5f84\u957f\u5ea6\u3002\u8865\u5145\uff1a\u624d\u53d1\u73b0\u6211\u5728\u8bf4\u660e\u4e00\u4e9b\u6ca1\u7528\u7684\u4e1c\u897f\uff0c\u4f60\u4f1a\u8ddd\u79bb\u548c\u5c31\u662f\u6240\u6709\u70b9\u5230\u91cd\u5fc3\u7684\u8ddd\u79bb\u7684\u548c\u7684\u4e24\u500d\u3002\n\n\u73b0\u5728\u6211\u4eec\u5c31\u662f\u8981\u6c42\u6709\u591a\u5c11\u79cd\u65b9\u6848\u4f7f\u5f97 $i$ \u4e0e $p_i$ \u5728\u91cd\u5fc3\u7684\u4e0d\u540c\u5b50\u6811\u4e2d\uff0c\u8fd9\u4e2a\u5e76\u4e0d\u597d\u76f4\u63a5\u6c42\uff0c\u4f7f\u7528\u5bb9\u65a5\u3002\n\n\u5b9a\u4e49 $f_i$ \u4e3a\u6392\u5217\u4e2d\u6709 $i$ \u4e2a\u70b9\u4e0d\u5408\u6cd5\u7684\u65b9\u6848\u6570\uff0c\u5269\u4e0b\u7684\u70b9\u4efb\u610f\u5339\u914d\u7684\u65b9\u6848\u6570\uff0c\u7b54\u6848\u5373\u4e3a\uff1a\n$$\nans=\\sum_{i=0}^{n}(-1)^i\\times f_i\\times (n-i)!\n$$\n\u73b0\u5728\u8003\u8651\u5982\u4f55\u6c42 $f$\u3002\u4ece\u5b50\u6811\u5408\u5e76\u7684\u89d2\u5ea6\u8003\u8651\u3002 \n\n\u5047\u8bbe\u5b50\u6811\u7684\u5927\u5c0f\u4e3a $x$\uff0c\u5176\u4e2d\u6709 $k$ \u4e2a\u70b9\u6ee1\u8db3 $i$ \u4e0e $p_i$ \u5728\u540c\u4e00\u5b50\u6811\u4e2d\uff0c\u90a3\u4e48\u5176\u65b9\u6848\u6570\u4e3a $\\binom{x}{k}^2k!$\u3002\u610f\u4e49\u662f\u4ece\u4e2d\u627e\u51fa $k$ \u4e2a\u70b9\uff0c\u548c $k$ \u4e2a\u4e0e\u4e4b\u5339\u914d\u7684\u70b9\uff08\u6240\u4ee5\u5e73\u65b9\uff09\uff0c\u7136\u540e\u8fd9 $k$ \u4e2a\u70b9\u53ef\u4ee5\u4efb\u610f\u6392\u5217\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u4f7f\u7528\u6811\u5f62\u80cc\u5305\u5408\u5e76\u6bcf\u4e2a\u5b50\u6811\u7684\u7b54\u6848\u3002\u8f6c\u79fb\u662f\u6734\u7d20\u7684\u3002\n$$\nf_i\\gets \\sum_{j=0}^{i} f_{i-j}\\times \\binom{siz_u}{j}^2\\times j!\n$$\n\u5177\u4f53\u7684\u8f6c\u79fb\u7ec6\u8282\u548c\u5b9e\u73b0\u89c1\u4ee3\u7801\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <vector>\n#include <cmath>\n\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int>ttfa;\ninline ll read(){\n\tll x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||'9'<ch){if(ch=='-')f=-1;ch=getchar();}\n\twhile('0'<=ch&&ch<='9'){x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}\n\treturn x*f;\n}\nconst int N=100005;\nconst ll MOD=1000000007;\nint n,root,siz[N],fiz[N];\nll fac[N],ifc[N],dp[N],ans;\ninline ll C(ll n,ll r){return fac[n]*ifc[r]%MOD*ifc[n-r]%MOD;}\nvector<int>edge[N];\ninline ll fpr(ll b,ll t=MOD-2,ll x=1){\n\tfor(;t;t>>=1,b=b*b%MOD)\n\t\tif(t&1)x=x*b%MOD;\n\treturn x;\n}\nvoid dfs(int u,int f){\n\tsiz[u]=1,fiz[u]=0;\n\tfor(auto v:edge[u]){\n\t\tif(v==f)continue;\n\t\tdfs(v,u);\n\t\tsiz[u]+=siz[v];\n\t\tfiz[u]=max(fiz[u],siz[v]);\n\t}fiz[u]=max(fiz[u],n-siz[u]);\n\tif(fiz[u]<fiz[root])root=u;\n}\nint main(){\n\tn=read();\n\tfac[0]=ifc[0]=1;\n\tfor(int i=1;i<=n;++i)fac[i]=fac[i-1]*i%MOD;\n\tifc[n]=fpr(fac[n]);\n\tfor(int i=n-1;i>=1;--i)ifc[i]=ifc[i+1]*(i+1)%MOD;\n\tfor(int i=1;i<n;++i){\n\t\tint u=read(),v=read();\n\t\tedge[u].push_back(v);\n\t\tedge[v].push_back(u);\n\t}\n\tfiz[root=0]=n;dfs(1,0);dfs(root,0);\n\tdp[0]=1ll;\n\tfor(auto v:edge[root]){\n\t\tint s=siz[v];\n\t\tfor(int i=n;i>=0;--i){//\u80cc\u5305\n\t\t\tfor(int j=1;j<=min(i,s);++j){\n\t\t\t\tll tmp=C(s,j)*C(s,j)%MOD*fac[j]%MOD;\n\t\t\t\tdp[i]=(dp[i]+dp[i-j]*tmp%MOD)%MOD;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=0;i<=n;++i)\n\t\tans=(ans+((i&1)?-1ll:1ll)*dp[i]*fac[n-i]%MOD+MOD)%MOD;\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1667471203,
        "uid": 360491,
        "name": "BigSmall_En",
        "ccfLevel": 6,
        "title": "[ARC087F] Squirrel Migration \u9898\u89e3"
    },
    {
        "content": "\u8ba9\u6743\u503c\u6700\u5927\u7684\u65b9\u6cd5:\n\n\u5207\u6389\u4e00\u6761\u8fb9\u4f1a\u53c8\u4e24\u4e2a\u8fde\u901a\u5757\uff0c\u8bb0\u4f5c $S1$, $S2$\u3002\n\n\u6bcf\u6761\u8fb9\u7ecf\u8fc7\u6b21\u6570 $2\\times \\min{(|S1|,|S2|)}$\n\n\u8fd9\u76f8\u5f53\u4e8e\u89c4\u5b9a \u5b58\u5728\u4e00\u4e2a $v$\uff0c\u4f7f\u5f97 $S1$ \u4e2d\u7684\u70b9\u53ea\u80fd\u5728 $S2$ \u4e2d\uff0c\u540c\u7406\uff0c\u76f8\u53cd\u4e5f\u662f\u3002\n\n\u7c7b\u4f3c\u4e00\u4e2a\u5339\u914d\u95ee\u9898\u3002\n\n---\n\n\u8fd9\u6837\u76f4\u63a5\u505a\u4e0d\u592a\u597d\u505a\uff0c\u8003\u8651\u5012\u8fc7\u6765\u505a\uff0c\u8ba1\u7b97\u4e0d\u5408\u6cd5\u7684\u3002\n\n\u6ce8\u610f\u5230:\n\n\u6709\u4e00\u4e9b\u70b9\uff0c\u662f\u6ca1\u529e\u6cd5\u53bb\u5339\u914d\u7684\u3002\n\n\u6211\u4eec\u8981\u60f3\u8ba9\u5176\u5339\u914d\uff0c\u90a3\u4e48\u4e00\u5b9a\u8981\u8ba9\u6bcf\u4e2a\u5b50\u6811\u90fd\u5c0f\u4e8e\u6216\u8005\u7b49\u4e8e $\\text{maxson}$\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u5b50\u6811\u5927\u5c0f\u4e0d\u80fd\u8d85\u8fc7 $\\frac{n}{2}$\uff0c\u5426\u5219\u6784\u9020\u4e0d\u51fa\u6765\u8fd9\u6837\u7684\u5339\u914d\u3002\u6613\u8bc1\uff0c\u6700\u591a\u6709\u4e24\u4e2a\u7b26\u5408\u6761\u4ef6\u7684\u70b9\uff0c\u5373\u4e3a\u91cd\u5fc3\u3002\n\n\u7136\u540e\u5bf9\u91cd\u5fc3\u7684\u6bcf\u4e2a\u513f\u5b50\u5f00\u59cb\u505a\u3002\n\n\u5047\u8bbe\u4e00\u4e2a\u5927\u5c0f\u4e3a $x$ \u7684\u513f\u5b50\u3002\n\n\u5047\u8bbe\u94a6\u5b9a\u4e86\u6709 $i$ \u4e2a\u4e0d\u5408\u6cd5\u7684\u70b9\u3002\n\u90a3\u4e48\u65b9\u6848\u6570\u662f $\\binom{x}{i}^2 \\times i!$\u3002\n\n\uff08$x$ \u91cc\u5148\u9009 $i$ \u4e2a\uff0c\u7136\u540e\u5728\u8fd9 $x$ \u4e2a\u91cc\u9762\u9009 $p_i$ \u7136\u540e\u8003\u8651\u5230\u53ef\u4ee5\u8c03\u6362\u4f4d\u7f6e\uff0c\u6240\u4ee5\u8981\u4e58\u4e0a $i!$\uff09\u3002\n\n\u7136\u540e\u5bf9\u8fd9\u4e2a\u505a\u80cc\u5305\u3002\n\n\n\u7136\u540e $dp_i \\times (n-i)!$ \u7684\u610f\u601d\u5c31\u662f\u81f3\u5c11 $i$ \u4e2a\u4e0d\u7b26\u5408\u6761\u4ef6\u7684\u65b9\u6848\u6570\u3002\n\n\u7136\u540e\u505a\u4e00\u4e0b\u5bb9\u65a5\u5c31\u597d\u4e86\u3002\n\n```cpp\n\n#include <bits/stdc++.h>\nusing namespace std;\nconst int P = 1e9 + 7;\nlong long power(long long x, long long y) {\n long long res = 1;\n while (y) {\n  if (y & 1) {\n   res = res * x % P;\n  }\n  x = x * x % P;\n  y /= 2;\n }\n return res;\n}\nint main() {\n ios::sync_with_stdio(false);\n cin.tie(NULL);\n int n;\n cin >> n;\n vector<vector<int>> e(n);\n for (int i = 1; i < n; i++) {\n  int x, y;\n  cin >> x >> y;\n  --x;\n  --y;\n  e[x].push_back(y);\n  e[y].push_back(x);\n }\n vector<long long> fact(n + 1);\n fact[0] = 1;\n for (int i = 1; i <= n; i++) {\n  fact[i] = fact[i - 1] * i % P;\n }\n vector<long long> ifact(n + 1);\n ifact[0] = 1;\n for (int i = 1; i <= n; i++) {\n  ifact[i] = power(fact[i], P - 2);\n }\n auto binom = [&](int x, int y) -> long long {\n  return fact[x] * ifact[y] % P * ifact[x - y] % P;\n };\n vector<int> sz(n);\n vector<int> mx(n);\n int g = -1;\n auto dfs = [&](auto &self, int u, int p) -> void {\n  sz[u] = 1;\n  mx[u] = 0;\n  for (auto v : e[u]) {\n   if (v != p) {\n    self(self, v, u);\n    sz[u] += sz[v];\n    mx[u] = max(mx[u], sz[v]);\n   }\n  }\n  mx[u] = max(mx[u], n - sz[u]);\n  if (g == -1 || mx[g] > mx[u]) {\n   g = u;\n  }\n };\n dfs(dfs, 0, -1);\n dfs(dfs, g, -1);\n vector<int> dp(n + 1);\n dp[0] = 1;\n for (auto v : e[g]) {\n  int x = sz[v];\n  for (int j = n; j >= 0; j--) {\n   for (int k = 1; k <= min(j, x); k++) {\n    long long w = binom(x, k) * binom(x, k) % P * fact[k] % P;\n    dp[j] += dp[j - k] * w % P;\n    dp[j] %= P;\n   }\n  }\n }\n long long ans = 0;\n for (int i = 0; i <= n; i++) {\n  if (~i & 1) {\n   ans += fact[n - i] * dp[i] % P;\n   ans %= P;\n  } else {\n   ans -= fact[n - i] * dp[i] % P;\n   ans += P;\n   ans %= P;\n  }\n }\n cout << ans << \"\\n\";\n return 0;\n}",
        "postTime": 1636979823,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "AT3728 [ARC087D] Squirrel Migration"
    }
]