[
    {
        "content": "\u8fd9\u9898\u91cd\u4e86\uff0c\u539f\u9898\u662f [P1144](https://www.luogu.com.cn/problem/P1144)\u3002\u8be6\u7ec6\u7684\u89e3\u7b54\u53ef\u4ee5\u770b\u8fd9\u9898\u7684\u9898\u89e3\uff0c\u8fd9\u91cc\u53ea\u63d0\u4f9b\u8f83\u7b80\u7565\u7684\u601d\u8def\u3002\n\n\u7c7b\u4f3c dijkstra \u7684\u601d\u8def\uff0c\u5728\u6bcf\u6b21\u66f4\u65b0\u6700\u77ed\u8def\u957f\u5ea6\u7684\u65f6\u5019\u5bf9\u6bcf\u4e2a\u8282\u70b9\u8bb0\u5f55\u4e00\u4e2a\u5f53\u524d\u65b9\u6848\u6570\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u8282\u70b9\u7684\u524d\u7f00\uff0c\u5982\u679c\u5f53\u524d\u8ddd\u79bb\u957f\u5ea6\u548c\u6700\u77ed\u8def\u76f8\u7b49\u5219\u7d2f\u52a0\u7b54\u6848\uff0c\u5426\u5219\u7528\u5b83\u7684\u524d\u7f00\u7684\u65b9\u6848\u6570\u66ff\u6362\u5b83\u5373\u53ef\uff0c\u8fd9\u6837\u5373\u53ef\u7edf\u8ba1\u51fa\u6240\u6709\u6700\u77ed\u8def\u7684\u4e2a\u6570\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $ \\mathcal{O}(n\\log{n}) $\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\u6ce8\u610f\u5224\u65ad\u91cd\u8fb9\u548c\u81ea\u73af\uff0c\u4ee5\u53ca\u6a21\u6570\u4e0d\u540c\uff0c\u5982\u679c\u76f4\u63a5\u5957\u7528\u539f\u9898\u7684\u4ee3\u7801\u53ef\u80fd\u4f1a\u8d85\u8fc7 int \u80fd\u8868\u793a\u7684\u6570\u636e\u8303\u56f4\uff0c\u6240\u4ee5\u9700\u8981\u7528 long long \u6765\u89e3\u51b3\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=2000005;\nint h[N],e[N],ne[N],idx;\nint n,m;\nint dist[N],dis[N];\nint st[N];\ntypedef pair <int,int> PII;\nvoid add(int a,int b)\n{\n    e[idx]=b;\n    ne[idx]=h[a];\n    h[a]=idx++;\n}\nvoid dijkstra()\n{\n    memset(dist,0x3f,sizeof dist);\n    priority_queue<PII , vector<PII>, greater<PII>> heap;\n    heap.push({0,1});\n    dist[1]=0;\n    dis[1]=1;\n    while(heap.size())\n    {\n        auto t=heap.top();\n        int ver=t.second;\n        heap.pop(); \n        if(st[ver]) continue;\n        st[ver]=true;\n        for(int i=h[ver];i!=-1;i=ne[i])\n        {\n            int j=e[i];\n            if(dist[j]>dist[ver]+1)\n            {\n                dist[j]=dist[ver]+1;\n                heap.push({dist[j],j});\n                dis[j]=dis[ver];\n                dis[j]=dis[j]%100003;\n            }\n            else if(dist[j]==dist[ver]+1)\n            {\n                dis[j]+=dis[ver];\n                dis[j]=dis[j]%100003;\n            }\n        }\n\n    }\n}\nint main()\n{\n    cin>>n>>m;\n    memset(h,-1,sizeof h);\n    while(m--)\n    {\n        int a,b;\n        cin>>a>>b;\n        add(a,b);\n        add(b,a);\n    }\n    dijkstra();\n    for(int i=1;i<=n;i++)\n    printf(\"%d\\n\",dis[i]);\n}\n```\n",
        "postTime": 1667294732,
        "uid": 714821,
        "name": "loser_seele",
        "ccfLevel": 4,
        "title": "ABC211D\u9898\u89e3"
    }
]