[
    {
        "content": "# [\u305f\u306e\u3057\u3044\u5bb6\u5ead\u83dc\u5712](https://www.luogu.com.cn/problem/AT1218)\n\n### Description\n\n\u7ed9\u5b9a $h_{1\\sim n}$\uff0c\u6c42\u6700\u5c11\u4ea4\u6362\u51e0\u6b21\u53ef\u4ee5\u4f7f\u5f97\u539f\u5e8f\u5217 **\u4e0d** \u6ee1\u8db3 $h_1\\sim h_{i-1}$ \u548c $h_{i+1}\\sim n$ \u4e2d\u540c\u65f6\u5b58\u5728\u67d0\u4e2a $\\geqslant h_i$ \u7684\u6570\u3002\n\n### Solution\n\n~~\u603b\u611f\u89c9\u8fd9\u9898\u5c31\u601d\u7ef4\u96be\u5ea6\u4e0e\u5b9e\u73b0\u96be\u5ea6\u800c\u8a00\u8bc4\u4e0d\u5230\u7d2b\uff0c\u5dee\u4e0d\u591a\u84dd\u7684\u4e9a\u5b50~~\n\n\u770b\u5230\u4ea4\u6362\u7b49\u5173\u952e\u8bcd\u5c31\u77e5\u9053\u4e0e\u9006\u5e8f\u5bf9\u6709\u5173\uff0c\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e2a\u5f62\u8c61\u5316\u7684\u601d\u8def\u3002\n\n\u5148\u601d\u8003\u5982\u4e0b\u7279\u6b8a\u60c5\u51b5\uff1a$h$ \u4e2d\u6ca1\u6709\u91cd\u590d\u5143\u7d20\u3002\n\n\u5047\u8bbe $h_x$ \u662f $h$ \u4e2d\u7684\u6700\u5c0f\u503c\u3002\n\n\u90a3\u4e48\uff0c$h_x$ \u4e0d\u7ba1\u5728\u4e2d\u95f4\u90a3\u4e2a\u4f4d\u7f6e\uff0c\u4e24\u8fb9\u90fd\u4f1a\u6709\u6bd4\u5b83\u5927\u7684\u3002\n\n\u6240\u4ee5 $h_x$ \u5e94\u8be5\u632a\u5230\u5e8f\u5217\u7684\u4e24\u7aef\u3002\u5177\u4f53\u662f\u54ea\u4e00\u7aef\u5462\uff1f\u79fb\u5230\u4e0d\u540c\u7684\u5730\u65b9\u4f1a\u4e0d\u4f1a\u5bf9\u5176\u4ed6\u6570\u5e26\u6765\u4e0d\u540c\u7684\u5f71\u54cd\u5462\uff1f\n\n\u8fd9\u5c31\u8981\u6839\u636e $x$ \u79bb $1$ \u548c $n$ \u7684\u8ddd\u79bb\u6765\u5224\u65ad\u4e86\uff0c\u56e0\u4e3a\u4e0d\u7ba1 $h_x$ \u79fb\u5230\u54ea\u4e00\u7aef\uff0c\u4e2d\u95f4\u5269\u4e0b\u7684\u6570\u6392\u5217\u987a\u5e8f\u90fd\u662f\u4e00\u6837\u7684\uff0c\u6240\u4ee5 $h_x$ \u5bf9\u4e2d\u95f4\u7684\u90a3\u4e9b\u6570\u9020\u6210\u7684\u5f71\u54cd\u662f\u4e00\u6837\u7684\uff0c\u81ea\u7136\u662f\u79fb\u5230\u8ddd\u79bb\u66f4\u8fd1\u7684\u4e00\u7aef\u66f4\u4f18\u3002\n\n\u6211\u4eec\u628a\u8fd9\u4e2a\u64cd\u4f5c\u770b\u505a\u5c06 $h_x$ \u4ece $h$ \u4e2d\u5220\u53bb\uff0c\u90a3\u4e48\u5269\u4e0b\u7684\u6570\u53c8\u6784\u6210\u4e86\u4e00\u4e2a\u65b0\u7684\u95ee\u9898\u3002\u91cd\u590d\u8fd9\u4e2a\u64cd\u4f5c\u5373\u53ef\u5f97\u5230\u7b54\u6848\u3002\n\n\u4f46\u6211\u4eec\u4e0d\u53ef\u80fd\u6a21\u62df\u8fd9\u4e2a\u8fc7\u7a0b\u8ba1\u7b97\u3002\n\n\u6240\u4ee5\u6211\u4eec\u6709\u5fc5\u8981\u641e\u660e\u767d\u5982\u4e0b\u8fd9\u4ef6\u4e8b\uff1a\n\n\u5047\u8bbe\u8fdb\u884c\u5230\u67d0\u4e00\u6b65\u65f6\uff0c\u5f53\u524d\u7684\u6700\u5c0f\u503c\u4e3a $h_y$\uff0c\u90a3\u4e48\u5c31\u5e94\u8be5\u8fd9\u4e48\u79fb\u52a8\uff1a\n\n![\u56fe\u793a](https://zebra-common-system-pre.oss-cn-shanghai.aliyuncs.com/bmdev/ca44a426-0e45-4513-b54c-14a08b3c9814.png)\n\n\u6240\u4ee5 $h_y$ \u5f80\u4e24\u8fb9\u8df3\u7684\u8fc7\u7a0b\uff0c\u5176\u5b9e\u4e00\u5171\u8df3\u8fc7\u7684\u662f $h_y$ \u5de6\u8fb9\u6216\u53f3\u8fb9 $>h_y$ \u7684\u6570\u7684\u4e2a\u6570\u3002\n\n\u4e0d\u8fc7\uff0c\u8fd9\u53ea\u662f $h$ \u4e2d\u5143\u7d20\u4e0d\u91cd\u590d\u7684\u60c5\u51b5\uff0c\u6709\u91cd\u590d\u7684\u60c5\u51b5\u5462\uff0c\u5176\u5b9e\u540c\u7406\u3002\n\n\u5982\u679c\u6309\u4ece\u5de6\u5230\u53f3\u7684\u987a\u5e8f\u5904\u7406\u5e8f\u5217\uff0c\u5f53 $h_y$ \u5411\u5de6\u8df3\u65f6\uff0c\u5de6\u8fb9\u672a\u5f52\u4f4d\u7684\u6570\u4e2d\u4e00\u5b9a\u6ca1\u6709\u4e0e $h_y$ \u76f8\u7b49\u7684\u503c\u3002\uff08\u56e0\u4e3a\u4ece\u5de6\u5411\u53f3\u5904\u7406\uff0c\u5728\u5904\u7406 $h_y$ \u4e4b\u524d\u5df2\u7ecf\u628a\u524d\u9762\u4e0e $h_y$ \u76f8\u7b49\u7684\u503c\u632a\u597d\u4e86\uff0c\u6240\u4ee5\u4e0d\u7528\u62c5\u5fc3\u5de6\u8fb9\uff09\n\n\u4f46\u662f\uff0c\u5982\u679c $h_y$ \u8981\u5411\u53f3\u8df3\u5462\uff1f\u53f3\u8fb9\u53ef\u80fd\u6709\u76f8\u7b49\u7684\u6570\uff0c\u6240\u4ee5\u8981\u8df3\u8fc7\u7684\u662f $\\geqslant h_y$ \u7684\u6570\u3002\n\n\u5f53\u7136\uff0c\u5982\u679c\u4f60\u559c\u6b22\uff0c\u4e5f\u53ef\u4ee5\u4ece\u53f3\u5230\u5de6\uff0c\u90a3\u4e48\u6b64\u65f6 $h_y$ \u5411\u5de6\u5c31\u8981\u8df3\u8fc7 $\\geqslant h_y$ \u7684\u6570\uff0c\u5411\u53f3\u8df3\u8fc7 $>h_y$ \u7684\u6240\u6709\u6570\u3002\n\n\u90a3\uff0c\u8fd9\u9898\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4e00\u4e0b\u4e0d\u5c31\u51fa\u6765\u4e86\u5417\uff1f\n\n\u4f46\u662f\uff0c\u6211\u4eec\u8003\u8651\u4e00\u79cd\u60c5\u51b5\uff0c\u4ee5\u4e0b\u662f\u8fd9\u79cd\u60c5\u51b5\u7684\u6700\u7b80\u5f62\u5f0f\uff1a\n\n```\n5\n2 2 1 1 2\n```\n\n\u6309\u7167\u6211\u4eec\u521a\u521a\u7684\u6b65\u9aa4\uff0c\u8fd9\u4e00\u7ec4\u6570\u636e\u5e94\u8be5\u50cf\u8fd9\u6837\u5904\u7406\uff1a\n\n$\\to2_{(1)}\\ 2_{(2)}\\ 1_{(3)}\\ 1_{(4)}\\ 2_{(5)}$\n\n$\\to h_y=1_{(3)}$\n\n$\\to1_{(3)}$ \u5411\u53f3\u632a\u81f3 $2_{(5)}$ \u7684\u4f4d\u7f6e\uff0c\u7ecf\u5386 $2$ \u6b21\u4ea4\u6362\u64cd\u4f5c\uff0c\u6b64\u65f6\u603b\u4ea4\u6362\u6b21\u6570 $ans=2$\u3002\n\n$\\to 2_{(1)} \\ 2_{(2)}\\ 1_{(4)}\\ 2_{(5)}\\ 1_{(3)}$\n\n$\\to h_y=1_{(4)}$\n\n$\\to 1_{(4)}$ \u5411\u53f3\u632a\u81f3 $2_{(5)}$ \u7684\u4f4d\u7f6e\uff0c\u7ecf\u5386 $1$ \u6b21\u4ea4\u6362\u64cd\u4f5c\uff0c\u6b64\u65f6\u603b\u4ea4\u6362\u6b21\u6570 $ans=3$\u3002\n\n$\\to 2_{(1)} \\ 2_{(2)}\\ 2_{(5)}\\ 1_{(4)}\\ 1_{(3)}$\n\n$\\to$ \u64cd\u4f5c\u5b8c\u6210\uff0c\u6700\u7ec8\u7b54\u6848 $ans=3$\u3002\n\n\u4f46\u76f8\u4fe1\u6211\u4eec\u5927\u5bb6\u90fd\u80fd\u770b\u51fa\u6765\uff0c\u6b63\u786e\u7684\u4ea4\u6362\u6b21\u5e8f\u662f\uff1a\n\n$\\to2_{(1)}\\ 2_{(2)}\\ 1_{(3)}\\ 1_{(4)}\\ 2_{(5)}$\n\n$\\to h_y=1_{(4)}$\n\n$\\to1_{(4)}$ \u5411\u53f3\u632a\u81f3 $2_{(5)}$ \u7684\u4f4d\u7f6e\uff0c\u7ecf\u5386 $1$ \u6b21\u4ea4\u6362\u64cd\u4f5c\uff0c\u6b64\u65f6\u603b\u4ea4\u6362\u6b21\u6570 $ans=1$\u3002\n\n$\\to 2_{(1)} \\ 2_{(2)}\\ 1_{(3)}\\ 2_{(5)}\\ 1_{(4)}$\n\n$\\to h_y=1_{(3)}$\n\n$\\to 1_{(3)}$ \u5411\u53f3\u632a\u81f3 $2_{(5)}$ \u7684\u4f4d\u7f6e\uff0c\u7ecf\u5386 $1$ \u6b21\u4ea4\u6362\u64cd\u4f5c\uff0c\u6b64\u65f6\u603b\u4ea4\u6362\u6b21\u6570 $ans=2$\u3002\n\n$\\to 2_{(1)} \\ 2_{(2)}\\ 2_{(5)}\\ 1_{(3)}\\ 1_{(4)}$\n\n$\\to$ \u64cd\u4f5c\u5b8c\u6210\uff0c\u6700\u7ec8\u7b54\u6848 $ans=2$\u3002\n\n\u54a6\uff1f\u90a3\u4e48\u4e0d\u80fd\u4ece\u5de6\u5230\u53f3\uff0c\u53ea\u80fd\u4ece\u53f3\u5230\u5de6\u54af\uff1f\n\n\u5f53\u7136\u4e0d\u884c\uff0c\u628a\u521a\u521a\u7684\u6570\u636e\u53cd\u8fc7\u6765\u8f93\u5c31\u53ef\u4ee5 Hack \u8fd9\u79cd\u505a\u6cd5\uff08\n\n\u8fd9\u8bf4\u660e\u4e86\u6211\u4eec\u53ea\u80fd\u9002\u5f53\u5730\u5728\u4e0d\u540c\u65f6\u673a\u9009\u62e9\u4e0d\u540c\u7684\u9009\u62e9\u6b21\u5e8f\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\uff0c\u6700\u7ec8\u90fd\u662f\u8981\u628a\u4f4d\u7f6e\u66f4\u9760\u5916\u7684\u6570\u5f80\u66f4\u5916\u9762\u7684\u5730\u65b9\u632a\uff0c\u6bd4\u5982\u4e0a\u4f8b\u4e2d\u7684 $1_{(4)}$ \u5c31\u6bd4 $1_{(3)}$ \u66f4\u9760\u5916\uff08\u53f3\uff09\uff0c**\u5904\u7406\u6b21\u5e8f\u6bd4 $1_{(3)}$ \u66f4\u4f18\u5148**\uff0c \u6700\u7ec8\u7684\u4f4d\u7f6e\u4e5f\u6bd4 $1_{(3)}$  \u66f4\u9760\u5916\uff08\u53f3\uff09\u3002\n\n\u800c\u4e0a\u9762\u90a3\u6761\u7b80\u5355\u7684\u89c4\u5f8b\uff0c\u5c31\u5e2e\u6211\u4eec\u514d\u53bb\u4e86\u51b3\u5b9a\u9009\u62e9\u6b21\u5e8f\u7684\u75db\u82e6\u3002\n\n\u56e0\u4e3a\u6309\u4ee5\u4e0a\u7684\u89c4\u5f8b\uff0c\u8d8a\u9760\u5916\u7684\u6570\uff0c\u5904\u7406\u6b21\u5e8f\u66f4\u4f18\u5148\uff0c\u6240\u4ee5\u5f53\u6211\u4eec\u5904\u7406\u4e00\u4e2a\u6570 $h_y$ \u65f6\uff0c$h_y$ \u4e00\u5b9a\u662f\u5f53\u524d\u5e8f\u5217\u4e2d\u503c\u6700\u5c0f\u7684\u6570\u4e2d\u4f4d\u7f6e\u6700\u9760\u5916\u7684\uff0c\u6240\u4ee5\u76f4\u63a5\u67e5\u8be2 $>h_y$ \u7684\u6570\u7684\u4e2a\u6570\uff0c\u5c31\u662f $h_y$ \u8981\u4ea4\u6362\u7684\u6b21\u6570\u3002\n\n### Code\n\n\u6811\u72b6\u6570\u7ec4\u548c\u79bb\u6563\u5316\u76f8\u4fe1\u5404\u4f4d\u90fd\u4f1a\u5427\u3002\u5728\u8fd9\u91cc\u6211\u4eec\u7528\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\u5f53\u505a\u6876\uff0c\u5206\u522b\u7ef4\u62a4\u5f53\u524d $h_y$ \u5de6\u8fb9\u548c\u53f3\u8fb9\u7684\u6240\u6709\u503c\u7684\u4e2a\u6570\u3002\n\n\u4e0d\u8fc7\u6709\u4e2a\u5751\u70b9\u5728\u4e8e\u5fc5\u987b\u8f93\u51fa\u6587\u672b\u56de\u8f66\uff0c\u4e0d\u7136\u4f1a WA\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define int long long\nconst int maxn=3e5+5;\nconst int LEN=(1<<20);\nint n,a[maxn];\nint ans1,ans2,ans;\nint Bit[2][maxn],Lsh[maxn];\ninline int Lowbit(int x){return x & (-x);}\ninline int max(int x,int y){return x>y?x:y;}\ninline int min(int x,int y){return x<y?x:y;}\ninline void Update(int k,int x,int typ){\n\tfor(int i=k;i<=n;i+=Lowbit(i))\n\t\tBit[typ][i]+=x; \n\treturn; \n}\ninline int Sum(int k,int typ){\n\tint ans=0;\n\tfor(int i=k;i;i-=Lowbit(i))\n\t\tans+=Bit[typ][i];\n\treturn ans;\n}\ninline int nec(){\n    static char buf[LEN],*p=buf,*e=buf;\n    if(p==e){\n        if((e=buf+fread(buf,1,LEN,stdin))==buf)return EOF;\n        p=buf;\n    }\n    return *p++;\n}\ninline bool read(int&x){\n    static char neg=0,c=nec();\n    neg=0,x=0;\n    while((c<'0'||c>'9')&&c!='-'){\n        if(c==EOF)return 0;\n        c=nec();\n    }\n    if(c=='-'){\n        neg=1;\n        c=nec();\n    }\n    do{x=x*10+c-'0';}while((c=nec())>='0');\n    if(neg)x=-x;\n    return 1;\n}\nsigned main(){\n\tread(n);\n\tfor(int i=1;i<=n;++i){\n\t\tread(a[i]);\n\t\tLsh[i]=a[i];\n\t}\n\tstd::sort(Lsh+1,Lsh+1+n);\n\tint cnt=std::unique(Lsh+1,Lsh+1+n)-Lsh-1;\n\tfor(int i=1;i<=n;++i){\n\t\ta[i]=std::lower_bound(Lsh+1,Lsh+cnt+1,a[i])-Lsh;\n\t\tUpdate(a[i],1,1);\n\t}\n\tfor(int i=1;i<=n;++i){\n\t\tUpdate(a[i],-1,1);\n\t\tans1=n-i-Sum(a[i],1);\n        Update(a[i],1,0);\n        ans2=i-Sum(a[i],0);\n\t\tans+=min(ans1,ans2);\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n\n**end.**\n\n",
        "postTime": 1619885856,
        "uid": 245052,
        "name": "ollll62",
        "ccfLevel": 7,
        "title": "\u3010\u9898\u89e3\u3011\u305f\u306e\u3057\u3044\u5bb6\u5ead\u83dc\u5712"
    },
    {
        "content": "[\u6d1b\u8c37\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/AT1218)\t[AT\u4f20\u9001\u95e8](https://www.luogu.com.cn/remoteJudgeRedirect/atcoder/1218)\n\n### Solution\n\n#### \u8003\u8651\u5982\u4f55\u6c42\u51fa\u64cd\u4f5c\u6b21\u6570\n\n\u6709\u4e00\u4e2a\u7ed3\u8bba\u662f\uff1a\u8bbe\u539f\u5e8f\u5217\u7684\u4e0b\u6807\u5206\u522b\u662f $1,2,\\cdots ,n$ \uff0c\u90a3\u4e48\u6700\u540e\u5e8f\u5217\u7684\u64cd\u4f5c\u6b21\u6570\u4e3a\u539f\u5e8f\u5217\u4e0b\u6807\u7684\u9006\u5e8f\u5bf9\u6570\u3002\n\n\u8bc1\u660e\u5f88\u663e\u7136\uff0c\u56e0\u4e3a\u6bcf\u4e00\u6b21\u64cd\u4f5c\u90fd\u4f1a\u589e\u52a0\u4e00\u5bf9\u9006\u5e8f\u5bf9\u3002\n\n#### \u8003\u8651\u5982\u4f55\u8fbe\u5230\u6700\u4f18\n\n\u9898\u76ee\u8981\u6c42\u6700\u540e\u7684\u5e8f\u5217\u5148\u4e0d\u9012\u51cf\u518d\u4e0d\u9012\u589e\uff0c\u6240\u4ee5\u4e2d\u95f4\u90a3\u4e2a\u4e00\u5b9a\u653e\u6700\u9ad8\u7684\uff0c\u7136\u540e\u5f80\u4e24\u8fb9\u4f9d\u6b21\u653e\u3002\n\n\u90a3\u4e48\u73b0\u5728\u53ea\u9700\u8981\u601d\u8003\u600e\u4e48\u8ba9\u65b0\u5e8f\u5217\u7684\u9006\u5e8f\u5bf9\u6570\u6700\u5c11\n\n\u5f53\u653e\u5165\u4e00\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u5224\u65ad\u653e\u5de6\u8fb9\u548c\u53f3\u8fb9\u54ea\u4e2a\u4ea7\u751f\u7684\u9006\u5e8f\u5bf9\u6570\u5c11\uff0c\u8d2a\u5fc3\u7684\u9009\u5373\u53ef\u3002\n\n\u5c0f\u7ec6\u8282\uff1a\u6ce8\u610f\u4e24\u4e2a\u6570\u76f8\u7b49\u7684\u60c5\u51b5\u3002\n\n### Code\n\n```c++\n#include<bits/stdc++.h>\n#define ll long long\n\nusing namespace std;\nconst int N=300010;\nll ans;\nint n,l,r,c[N],h[N],p[N];\n\ninline int read(){\n    int x=0,f=1;\n    char ch=getchar();\n    while(!isdigit(ch)){if(ch=='-') f=-1;ch=getchar();}\n    while(isdigit(ch)){x=x*10+(ch^48);ch=getchar();}\n    return x*f;\n}\n\ninline int lowbit(int x){\n    return x&-x;\n}\n\ninline void update(int x,int v){\n    for(int i=x;i<=n;i+=lowbit(i))\n        c[i]+=v;\n}\n\ninline int query(int x){\n    int res=0;\n    for(int i=x;i;i-=lowbit(i))\n        res+=c[i];\n    return res;\n}\n\ninline bool cmp(int a,int b){\n    return h[a]>h[b];\n}\n\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n        h[i]=read(),p[i]=i;\n    sort(p+1,p+n+1,cmp);\n    for(int i=1,j;i<=n;){\n        for(j=i;j<=n;j++){\n            int k=query(p[j]); ans+=min(k,i-1-k);   \n            if(h[p[j+1]]!=h[p[j]]) break;\n        }\n        for(;i<=j;i++) update(p[i],1);\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```\n\n",
        "postTime": 1605066558,
        "uid": 272143,
        "name": "\u662f\u4e2a\u6c49\u5b50",
        "ccfLevel": 4,
        "title": "AT1218 \u305f\u306e\u3057\u3044\u5bb6\u5ead\u83dc\u5712"
    },
    {
        "content": "\u524d\u7f6e\u77e5\u8bc6\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u5e8f\u5217\uff0c\u53ea\u80fd\u76f8\u90bb\u4e24\u4e24\u4ea4\u6362\u65f6\uff0c\u6392\u6210\u6709\u5e8f\u5e8f\u5217\u7684\u6700\u5c0f\u6b21\u6570\u4e3a\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u3002\n\n\u5047\u5982\u6211\u4eec\u77e5\u9053\u4e86\u6bcf\u4e2a\u6570\u5728\u5e8f\u5217\u4e2d\u7684\u6392\u540d\uff0c\u4e14\u786e\u5b9a\u4e86\u6700\u7ec8\u7684\u67d0\u4e2a\u53ef\u80fd\u6700\u4f18\u89e3\u65f6\uff08\u5047\u5355\u5cf0\u51fd\u6570\uff09\uff0c\u6211\u4eec\u628a\u4e0b\u6807\u91cd\u65b0\u8d4b\u7ed9\u6bcf\u4e2a\u6570\uff0c\u8fd9\u65f6\u7684\u6700\u5c0f\u6b21\u6570\u5c31\u662f\u4e0b\u6807\u7684\u9006\u5e8f\u5bf9\u6570\u3002\n\n\u8bc1\u660e\u8003\u8651\u5fae\u6270\u76f8\u90bb\u3002\n\u5047\u5982\u73b0\u5728\u6539\u53d8\u6700\u4f18\u89e3\uff0c\u4e14\u4e4b\u53d8\u52a8\u4e00\u4e2a\u6570 $x$ \u65f6\uff1a\n\u8fd9\u65f6 $x$ \u6709\u4e24\u79cd\u53ef\u80fd\uff0c\u4e00\u6700\u540e\u5728\u6700\u5927\u503c\u7684\u5de6\u4fa7\uff0c\u4e8c\u6700\u540e\u5728\u53f3\u4fa7\u3002\u4e14\u6211\u4eec\u53c8\u80fd\u53d1\u73b0\u65e0\u8bba\u600e\u4e48\u53d8\u52a8\uff0cx\u5bf9\u4e8e\u6bd4\u5b83\u6743\u503c\u5c0f\u7684\u6570\u5927\u5c0f\u60c5\u51b5\u90fd\u4e0d\u4f1a\u6539\u53d8\uff0c\u6240\u4ee5\u53ea\u8003\u8651\u6bd4 $x$ \u5927\u7684\u6570\u3002\n\u8fd9\u65f6\u6211\u4eec\u53d1\u73b0\uff0c\u5728\u5de6\u4fa7\u65f6\uff0c$x$ \u4e0e $x$ \u5de6\u4fa7\u7684\u6743\u503c\u6bd4\u5b83\u5927\u7684\u6570\u6784\u6210\u9006\u5e8f\u5bf9\uff1b\u5728\u53f3\u4fa7\u65f6\uff0c$x$ \u4e0e $x$ \u53f3\u4fa7\u6743\u503c\u6bd4\u5b83\u5927\u7684\u6570\u6784\u6210\u9006\u5e8f\u5bf9\u3002\n\u6240\u4ee5\u7efc\u4e0a\uff0c\u5e94\u5bf9\u6bcf\u4e2a\u6570\u7edf\u8ba1\u5de6\u4fa7\u5927\u7684\u6570\u548c\u53f3\u4fa7\u5927\u7684\u6570\uff0c\u53d6\u4e2a\u6570\u6700\u5c0f\u503c\u3002\n\n\u4ee3\u7801\u5c31\u770b\u697c\u4e0a\u7684\u5427",
        "postTime": 1606568242,
        "uid": 262212,
        "name": "\u662f\u4e2a\u59b9\u5b50\u5566",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT1218 \u3010\u305f\u306e\u3057\u3044\u5bb6\u5ead\u83dc\u5712\u3011"
    },
    {
        "content": "[Link](https://www.luogu.com.cn/problem/AT1218)\u3002\n\n### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217\uff0c\u5df2\u77e5\u5e8f\u5217\u4e2d\u6bcf\u4e2a\u6570\u7684\u503c\uff0c\u4f60\u53ef\u4ee5\u4ea4\u6362\u76f8\u90bb\u4e24\u6570\u7684\u503c\u3002\n\n\u6700\u7ec8\uff0c\u4f60\u8981\u4f7f\u5f97\u6574\u4e2a\u5e8f\u5217\u5448\u4e00\u4e2a\u5c71\u5cf0\u578b\uff0c\u5373\u5e8f\u5217\u7684\u524d\u4e00\u90e8\u5206\u4e3a**\u4e0d\u964d**\u5e8f\u5217\uff0c\u540e\u4e00\u90e8\u5206\u4e3a**\u4e0d\u5347**\u5e8f\u5217\uff0c\u6c42\u8fd9\u4e2a\u6700\u5c0f\u7684\u4ea4\u6362\u6b21\u6570\u3002\n\n### \u601d\u8def\n\n\u7531\u4e8e\u6211\u4eec\u9700\u8981\u6784\u9020\u4e00\u4e2a\u5c71\u5cf0\u578b\uff0c\u6240\u4ee5\u8d8a\u5927\u7684\u6570\u5e94\u8be5\u5728\u8d8a\u4e2d\u95f4\u3002\u53cd\u4e4b\uff0c\u8d8a\u5c0f\u7684\u6570\u5e94\u8be5\u5728\u8d8a\u65c1\u8fb9\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u5c31\u9700\u8981\u5c06\u4e2d\u95f4\u7684\u8f83\u5c0f\u7684\u6570\u5411\u65c1\u8fb9\u79fb\u52a8\uff0c\u90a3\u5177\u4f53\u8be5\u600e\u6837\u79fb\u52a8\u5462\uff1f\n\n\u6211\u4eec\u8ba4\u771f\u89c2\u5bdf\u4e00\u4e0b\u9898\u76ee\uff1a**\u4ea4\u6362\u76f8\u90bb\u4e24\u6570**\u3002\u76f8\u4fe1\u5927\u5bb6\u90fd\u5b66\u8fc7\u5192\u6ce1\u6392\u5e8f\u5427\uff0c\u6240\u4ee5\u5927\u5bb6\u5e94\u8be5\u90fd\u77e5\u9053\uff1a\u5c06\u4e00\u4e2a\u6570\u53cd\u590d\u540c\u76f8\u90bb\u6570\u4ea4\u6362\uff0c\u662f\u4e0d\u4f1a\u6539\u53d8\u5176\u4ed6\u6570\u7684\u76f8\u5bf9\u4f4d\u7f6e\u7684\u3002\n\n\u56e0\u6b64\uff0c\u5728\u8fd9\u9053\u9898\u4e2d\uff0c\u5c06\u4f4d\u4e8e\u4e2d\u95f4\u90e8\u5206\u7684\u8f83\u5c0f\u6570\u5411\u65c1\u8fb9\u79fb\u52a8\u65f6\u5e76\u4e0d\u4f1a\u6539\u53d8\u5176\u4ed6\u6570\u7684\u76f8\u5bf9\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u662f\u8bf4\u5c06 $a_x$ \u5411\u65c1\u8fb9\u4ea4\u6362\uff0c\u82e5\u4ea4\u6362\u524d $a_i$ \u5728 $a_j$ \u5de6\u8fb9\uff0c\u5219\u5728 $a_x$ \u6362\u5b8c\u540e $a_i$ \u4f9d\u65e7\u5728 $a_j$ \u5de6\u8fb9\uff08\u53f3\u8fb9\u540c\u7406\uff09\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5c06\u8f83\u5c0f\u7684\u6570\u5411\u65c1\u8fb9\u79fb\u52a8\u5373\u53ef\uff0c\u90a3\u4e48\u4ec0\u4e48\u662f\u8f83\u5c0f\u7684\u6570\u5462\uff1f\n\n\u5176\u5b9e\u8f83\u5c0f\u7684\u6570\u5c31\u662f\u90a3\u79cd\u5728\u5b83\u7684\u5de6\u8fb9\u548c\u53f3\u8fb9**\u90fd\u6709**\u6bd4\u5b83**\u5927**\u7684\u6570\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u5c71\u5cf0\u578b\uff0c\u6240\u4ee5\u8fd9\u6837\u7684\u6570\u4e00\u5b9a\u8fd8\u8981\u5f80\u65c1\u8fb9\u79fb\u52a8\u3002\n\n\u90a3\u4e48\u6bcf\u4e2a\u6570\u5e94\u8be5\u5411\u54ea\u8fb9\u79fb\u52a8\u5462\uff1f\n\n\u5176\u5b9e\u65e2\u53ef\u4ee5\u5411\u5de6\uff0c\u53c8\u53ef\u4ee5\u5411\u53f3\uff0c\u56e0\u4e3a\u4e0d\u5f71\u54cd\u5176\u4ed6\u6570\u76f8\u5bf9\u4f4d\u7f6e\u3002\u4f46\u4e3a\u4e86\u4fdd\u8bc1\u7b54\u6848\u662f\u6700\u5c0f\u7684\uff0c\u6240\u4ee5\u5f80\u54ea\u8fb9\u79fb\u52a8\u7684\u4ea4\u6362\u6b21\u6570\u5c11\uff0c\u5c31\u5f80\u54ea\u8fb9\u79fb\u52a8\u3002\n\n\u53ef\u662f\u6211\u4eec\u600e\u4e48\u77e5\u9053\u5177\u4f53\u7684\u4ea4\u6362\u6b21\u6570\u5462\uff1f\n\n\u521a\u624d\u8bf4\u4e86\uff0c\u8981\u4fdd\u8bc1\u5de6\u8fb9**\u6216**\u53f3\u8fb9**\u6ca1\u6709**\u5927\u4e8e\u6b64\u6570\u7684\u6570\uff0c\u56e0\u6b64\u4ea4\u6362\u6b21\u6570\u5c31\u662f\u5de6\u8fb9\uff08\u6216\u53f3\u8fb9\uff09\u6bd4\u5f53\u524d\u6570\u5927\u7684\u6570\u7684\u4e2a\u6570\u3002\n\n\u4e07\u4e00\u5728\u4ea4\u6362\u5b8c\u6210\u524d\u51fa\u73b0\u5c0f\u4e8e\u7b49\u4e8e\u5f53\u524d\u6570\u7684\u6570\u5462\uff1f\n\n\u5176\u5b9e\u8fd9\u79cd\u60c5\u51b5\u5e76\u4e0d\u4f1a\u53d1\u751f\uff0c\u56e0\u4e3a\u6bd4\u5b83\u5c0f\u7684\u6570\u5df2\u7ecf\u540c\u5b83\u4ea4\u6362\u8fc7\u4e86\u3002\n\n\u90a3\u6211\u4eec\u5982\u4f55\u6c42\u5230\u5de6\u8fb9\uff08\u53f3\u8fb9\uff09\u6709\u591a\u5c11\u6570\u6bd4\u5f53\u524d\u6570\u5927\u5462\uff1f\n\n\u8fd9\u5176\u5b9e\u5927\u5bb6\u90fd\u80fd\u60f3\u5230\u4e86\uff0c\u5c31\u662f\u4ece\u524d\u5f80\u540e\uff08\u4ece\u540e\u5f80\u524d\uff09\u7684\u9006\u5e8f\u5bf9\u6570\u5373\u53ef\uff0c\u6240\u4ee5\u7ef4\u62a4\u6811\u72b6\u6570\u7ec4\u5373\u53ef~~\uff08\u4f60\u8981\u5199\u5f52\u5e76\u6392\u5e8f\u6216\u6811\u94fe\u5256\u5206\u6211\u4e5f\u4e0d\u4ecb\u610f\uff0c\u4f46\u8fd9\u91cc\u5c31\u4e0d\u8bb2\u4e86\uff09~~\u3002",
        "postTime": 1659965987,
        "uid": 476921,
        "name": "_zhy",
        "ccfLevel": 7,
        "title": "AT1218 \u305f\u306e\u3057\u3044\u5bb6\u5ead\u83dc\u5712 \u9898\u89e3"
    },
    {
        "content": "### [\u9898\u9762](https://www.luogu.com.cn/problem/AT1218)\n\n\n**\u9898\u610f\uff1a**\n\n\u6c42\u4ea4\u6362\u76f8\u90bb\u7684\u6570\uff0c\u5c06\u5e8f\u5217\u53d8\u6210\u5347\u5e8f\u518d\u964d\u5e8f\u7684\u5e8f\u5217\u7684\u6b21\u6570\u3002\uff08\u64cd\u4f5c\u5b8c\u540e\u5e8f\u5217\u5c31\u50cf[P1091 [NOIP2004 \u63d0\u9ad8\u7ec4] \u5408\u5531\u961f\u5f62](https://www.luogu.com.cn/problem/P1091)\uff09\n\n**\u7b2c\u4e00\u773c\u5c31\u53ef\u4ee5\u770b\u51fa\u8fd9\u9053\u9898\u4e0e\u9006\u5e8f\u5bf9\u6709\u5173\uff0c\u800c\u9006\u5e8f\u5bf9\u6700\u9ad8\u6548\u7684\u7b97\u6cd5\u5c31\u662f\u6811\u72b6\u6570\u7ec4\u4e86\uff0c\u4f46\u4e0e\u9006\u5e8f\u5bf9\u6709\u70b9\u533a\u522b\uff1a**\n\n### \u5173\u4e8e\u6811\u72b6\u6570\u7ec4\u6c42\u9006\u5e8f\u5bf9\uff1a\n\n```cpp\n    for (int i = 1; i <= n; i++) {\n        scanf(\"%d\", &a[i]);\n    }\n    for (int i = 1; i <= n; i++) {\n        add(a[i], 1);\n        ans += i - sum(a[i]);\n    }\n    //\u6811\u72b6\u6570\u7ec4\u5b58\u5c0f\u4e8e\u7b49\u4e8ei\u7684\u6570\u4e2a\u6570\u7684\u524d\u7f00\u548c\n    //\u6bcf\u6b21i-sum(a[i])\u5c31\u662f\u5df2\u7ecf\u63d2\u5165\u6570\u7684\u603b\u6570\u51cf\u53bb\u5c0f\u4e8e\u7b49\u4e8ea[i]\u7684\u4e2a\u6570\u5c31\u662f\u5927\u4e8ea[i]\u7684\u4e2a\u6570\n    \n```\n\n\u4ed6\u662f\u9009\u4e00\u4e2a\u70b9\u628a\u6574\u4f53\u5206\u6210\u4e24\u4e2a\u533a\u95f4\uff0c\u8ba1\u7b97\u4e24\u4e2a\u533a\u95f4\u7684\u9006\u5e8f\u5bf9\u4e4b\u548c\u7684\u6700\u5c0f\u503c\u3002\n\n# 55~70 PTS\n\n\u679a\u4e3e\u4e2d\u70b9\uff0c\u5206\u6210\u4e24\u4e2a\u533a\u95f4\uff0c\u5206\u522b\u8ba1\u7b97\u4e24\u4e2a\u533a\u95f4\u7684\u9006\u5e8f\u5bf9\u4e4b\u548c\uff0c\u7d2f\u52a0\u53d6min\uff0c\u5199\u5f97\u597d\u80fd\u670955~70\u5206\n\n\u4f2a\u4ee3\u7801\uff1a\n\n```cpp\nfor(int i=1;i<=n;i++){\n   \u6c421\u5230i\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\n   \u6c42i\u5230n\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\n   ans=min(ans,sum1+sum2);\n}                  \n```\n\n\n# 100 PTS\n\n\u6211\u4eec\u53ef\u4ee5\u5efa\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\uff0c\u5206\u522b\u5b58\u50a8\u5de6\u533a\u95f4\u548c\u53f3\u533a\u95f4\uff0c\u64cd\u4f5c\u6bcf\u4e2a\u70b9\u770b\u662f\u653e\u5728\u54ea\u8fb9\uff0c\u6bcf\u6b21\u653e\u5728\u54ea\u8fb9\u82b1\u8d39\u66f4\u5c0f\u5c31\u9009\u54ea\u8fb9\uff0c\u7d2f\u52a0\u6bcf\u6b21\u7684\u7b54\u6848\uff0c\u5c31\u53ef\u4ee5\u6c42\u51fa\u603b\u7684\u7b54\u6848\u4e86\u3002\n\n\u6ce8\u610f\uff1a\u5728\u505a\u7684\u65f6\u5019\u8981\u628a\u503c\u76f8\u7b49\u7684\u6570\u4e00\u8d77\u505a\uff0c\u4e0d\u7136\u4f1a\u628a\u76f8\u7b49\u7684\u4e5f\u7d2f\u8fdb\u53bb **\uff08\u56e0\u4e3a\u524d\u9762\u8fd8\u6ca1\u5220\u8fd9\u4e9b\u4e0e\u4ed6\u76f8\u7b49\u7684\u70b9\uff0c\u4f1a\u628a\u76f8\u7b49\u7684\u4e5f\u52a0\u8fdb\u53bb\uff09**\n\n\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\uff1a\n\n**\u849f\u84bb\u306ecode\uff1a**\n\n```cpp\n#include <bits/stdc++.h>\n#define lowbit(x) x & -x\nusing namespace std;\nlong long n, ans, t1[300030], t2[300300];\nstruct ex {\n    long long id, w;//id\u662f\u539f\u5e8f\u5217\u4e2d\u4ed6\u7684\u4f4d\u7f6e\n} a[300003];\nint cmp(ex a, ex b) { return a.w < b.w; }//\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\nvoid add(long long x, long long y) {\n    for (long long i = x; i <= n; i += lowbit(i)) t1[i] += y;\n    for (long long i = x; i; i -= lowbit(i)) t2[i] += y;\n}\nlong long sum(long long x) {\n    long long ans1 = 0, ans2 = 0;\n    for (int i = x; i; i -= lowbit(i)) ans1 += t1[i];\n    for (int i = x; i <= n; i += lowbit(i)) ans2 += t2[i];\n    return min(ans1, ans2);//\u53d6\u8f83\u5c0f\u7684\u4e00\u4e2a\n}\nint main() {\n    scanf(\"%lld\", &n);\n    for (long long i = 1; i <= n; i++) scanf(\"%lld\", &a[i].w), a[i].id = i, add(i, 1);\n    //\u521d\u59cb\u5316\uff1a\u7b2ci\u4e2a\u70b9\u6709\u4e00\u68f5\u8349\n    sort(a + 1, a + 1 + n, cmp);\n    //\u6392\u5e8f\uff0c\u786e\u4fdd\u6bcf\u6b21\u90fd\u6ca1\u6709\u6bd4\u76ee\u524d\u7684\u8349\u66f4\u5c0f\u7684\u8349\uff0c\u8fd9\u6837\u9006\u5e8f\u5bf9\u7684\u503c\u624d\u662f\u5bf9\u7684\n    for (long long i = 1, j = 1; i <= n; i = j) {\n        for (j = i; a[j].w == a[i].w; j++) add(a[j].id, -1);\n        for (j = i; a[j].w == a[i].w; j++) ans += sum(a[j].id);\n        //\u5c06\u76f8\u7b49\u7684\u70b9\u540c\u65f6\u64cd\u4f5c\uff0c\u56e0\u4e3a\u76f8\u7b49\u7684\u70b9\u5982\u679c\u4e0d\u540c\u65f6\u5220\u5c31\u4f1a\u628a\u4e0e\u4ed6\u76f8\u7b49\u7684\u70b9\u4e5f\u52a0\u5728\u7b54\u6848\u91cc\n    }\n    cout << ans;\n    return 0;\n}\n```\n\n\u5b8c\n",
        "postTime": 1659965560,
        "uid": 560006,
        "name": "yzq_yzq",
        "ccfLevel": 5,
        "title": "\u305f\u306e\u3057\u3044\u5bb6\u5ead\u83dc\u5712 \u9898\u89e3"
    },
    {
        "content": "# \u524d\u8a00\n\u8fd9\u9898\u662f\u6211\u540c\u5b66\u8003\u8bd5\u7684\u9898\u76ee\uff0c\u4e8e\u662f\u6211\u5c31\u62ff\u6765\u505a\u4e86\u4e00\u4e0b\uff0c~~\u82b1\u4e86\u62118\u4e2a\u5c0f\u65f6~~\uff0c\u6211\u679c\u7136\u8fd8\u662f\u592a\u84bb\u4e86\n\n# \u8fd8\u662f\u9898\u610f\n\u9898\u610f\u7279\u5bb9\u6613\u7406\u89e3\uff1a\n\n\u7ed9\u4f60\u4e00\u4e2a\u6570\u7ec4\uff0c\u4f60\u6bcf\u6b21\u53ef\u4ee5\u4ea4\u6362\u4e24\u4e2a\u76f8\u90bb\u7684\u4f4d\u7f6e\uff0c\u95ee\u4f60\u8981\u4ea4\u6362\u591a\u5c11\u6b21\u624d\u80fd\u4f7f\u5f97\u8fd9\u4e2a\u6570\u7ec4\u53d8\u6210\u5148\u4e0a\u5347\u540e\u4e0b\u964d\u7684\u5f62\u5f0f\u3002\n\n# \u601d\u8def\n\n\u4e0d\u96be\u60f3\u5230\u8d2a\u5fc3\uff0c\u505a\u6cd5\u80af\u5b9a\u662f\u6bcf\u6b21\u79fb\u52a8\u81f3\u5de6\u8fb9\u6216\u8005\u53f3\u8fb9\u3002\n\n\u90a3\u4e48\u6211\u4eec\u662f\u4e0d\u662f\u5c31\u53ef\u4ee5\u6c42\u51fa**\u79fb\u5230\u5de6\u8fb9\u548c\u53f3\u8fb9\u7684\u8d39\u7528**\u4e86\uff1f\u7136\u540e\u6bcf\u6b21\u90fd\u5bf9\u8d39\u7528\u53d6**\u6700\u5c0f\u503c**\u5373\u53ef\u3002\n\n\u7136\u540e\u79fb\u5230\u67d0\u4e00\u8fb9\u7684\u8d39\u7528\u5927\u6982\u5c31\u662f\u6bd4\u5b83\u9ad8\u7684\u4e2a\u6570\uff08\u56e0\u4e3a\u8fd9\u4e9b\u8981\u88ab\u79fb\u52a8\u51fa\u6765\uff09\uff0c\u90a3\u8fd9\u4e2a\u6211\u4eec\u7528**\u4e24\u6b21\u6811\u72b6\u6570\u7ec4**\u6c42\u5373\u53ef\u3002\n\n\u4ee3\u7801\u8fd8\u7b97\u6bd4\u8f83\u77ed\u3002\n\n# $code$\n\n```cpp\n\n#include<bits/stdc++.h>\ntypedef long long ll;\nusing namespace std;\nint n, a[300001], f[300001], g[300001], tr[300001];\nint b[300001];\nll ans;\nvoid Add(int x, int y) {//\u6811\u72b6\u6570\u7ec4\n\tfor (; x <= n; x += x & (-x)) tr[x] += y;\n}\nint Ask(int x) {\n\tint re=0;\n\tfor (; x; x -= x & (-x)) re += tr[x];\n\treturn re;\n}\n\nint main() {\n\tscanf(\"%d\",&n);\n\tfor (int i=1;i<=n;i++){\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\tmemcpy(b,a,sizeof(b));\n\tsort(b+1,b+n+1);//\u79bb\u6563\u5316\uff0c\u4e0d\u8981\u6d6a\u8d39\u7a7a\u95f4\n\tint nn=unique(b+1,b+n+1)-b-1;\n\tfor (int i=1;i<=n;i++) a[i]=lower_bound(b+1,b+nn+1,a[i])-b;\n\tfor (int i=1;i<=n;i++) {\n\t\tf[i]=i-1-Ask(a[i]);\n\t\tAdd(a[i], 1);\n\t}\n\tfor (int i = 1; i <= n; i++) Add(a[i], -1);\n\tfor (int i = n; i >= 1; i--){\n\t\tg[i] = n - i - Ask(a[i]);\n\t\tAdd(a[i], 1);\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tans += min(f[i], g[i]);\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1647336120,
        "uid": 464732,
        "name": "luqyou",
        "ccfLevel": 5,
        "title": "solution-AT1218"
    },
    {
        "content": "## Description\n\n\u6709\u4e00\u4e2a\u6570\u7ec4\uff0c\u4f60\u6bcf\u6b21\u53ef\u4ee5\u4ea4\u6362\u4e24\u4e2a\u76f8\u90bb\u7684\u4f4d\u7f6e\uff0c\u95ee\u4f60\u8981\u4ea4\u6362\u591a\u5c11\u6b21\u624d\u80fd\u4f7f\u5f97\u8fd9\u4e2a\u6570\u7ec4\u53d8\u6210\u5355\u5cf0\u5e8f\u5217\u3002\n## Solution\n\n\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\u6700\u7ec8\u5f97\u5230\u7684\u662f\u4e00\u4e2a\u5355\u5cf0\u5e8f\u5217\uff0c\u6240\u4ee5\u4e2d\u95f4\u90a3\u4e2a\u8349\u4e00\u5b9a\u653e\u6700\u9ad8\u7684\uff0c\u7136\u540e\u5f80\u4e24\u8fb9\u4f9d\u6b21\u653e\u53eb\u77ee\u7684\u3002\n\n\u7531\u4e8e\u6bcf\u4e00\u6b21\u64cd\u4f5c\u4f1a\u589e\u52a0\u4e00\u7ec4\u9006\u5e8f\u5bf9\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u601d\u8003\u5982\u4f55\u8ba9\u6700\u7ec8\u5e8f\u5217\u7684\u9006\u5e8f\u5bf9\u6570\u6700\u5c11\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u6b63\u53cd\u8dd1\u4e24\u6b21\uff0c\u653e\u90a3\u8fb9\u7684\u9006\u5e8f\u5bf9\u6700\u5c11\uff0c\u5c31\u662f\u6bcf\u4e00\u4e2a\u8349\u7684\u8d21\u732e\uff0c\u5c31\u53bb\u90a3\u8fb9\uff0c\u6700\u540e\u6c42\u548c\u5373\u53ef\u3002\n\n## Code\n```cpp\n#include <cstdio>\n#include <algorithm>\n#define int long long\n#define lowbit(x) (x & (-x))\nusing namespace std;\nconst int MAXN = 3e5 + 5, INF = 1e18;\nint n;\nint a[MAXN];\nint aux[MAXN];\nint c[MAXN];\nvoid update(int x, int k) {\n\twhile (x <= n) {\n\t\tc[x] += k;\n\t\tx += lowbit(x);\n\t} \n}\nint query(int x) {\n\tint res = 0;\n\twhile (x > 0) {\n\t\tres += c[x];\n\t\tx -= lowbit(x);\n\t}\n\treturn res;\n}\nint ans[MAXN];\nsigned main() {\n\tscanf(\"%lld\", &n);\n\tfor (int i = 1; i <= n; i++)\n\t\tscanf(\"%lld\", &a[i]), aux[i] = a[i], ans[i] = INF;\n\tsort(aux + 1, aux + n + 1);\n\tint res = unique(aux + 1, aux + n + 1) - aux - 1;\n\tfor (int i = 1; i <= n; i++)\n\t\ta[i] = lower_bound(aux + 1, aux + res + 1, a[i]) - aux;\n\tfor (int i = 1; i <= n; i++)\n\t\tans[i] = min(ans[i], i - 1 - query(a[i])), update(a[i], 1);\n\tfor (int i = 1; i <= n; i++)\n\t\tc[i] = 0;\n\tfor (int i = n; i >= 1; i--)\n\t\tans[i] = min(ans[i], n - i - query(a[i])), update(a[i], 1);\n\tres = 0;\n\tfor (int i = 1; i <= n; i++)\n\t\tres += ans[i];\n\tprintf(\"%lld\", res);\n\treturn 0;\n}\n```",
        "postTime": 1659839362,
        "uid": 550110,
        "name": "zhou_ziyi",
        "ccfLevel": 5,
        "title": "AT1218 \u9898\u89e3"
    },
    {
        "content": "- \u666e\u53ca\u6c34\u5e73\u7684\u4f5c\u8005\u8bef\u70b9\u4e86\u63d0\u4ea4\u9898\u89e3\u952e\uff0c\u611f\u5230\u5341\u5206\u62b1\u6b49\uff0c\u5e0c\u671b\u4e0d\u8981 ban \u6389\u6211\u7684\u535a\u5ba2 QwQ\u3002\n\n**[\u9898\u610f](https://www.luogu.com.cn/problem/AT1218)**\n- IOI \u8349\uff08\uff1f\uff1f\u539f\u6587\u786e\u5b9e\u5982\u6b64\uff09\u6392\u6210\u4e00\u5217\u957f\u4e86\u5f88\u591a\uff08$n$ \u4e2a\uff09\u3002\n- IOI \u8349\u53ea\u8981\u6ee1\u8db3\u4ee5\u4e0b\u4efb\u4e00\u6761\u4ef6\u5c31\u4e0d\u4f1a\u67af\u840e\u3002\n- - \u5728\u90a3\u8349\u7684\u5de6\u4fa7\uff0c\u4e0d\u5b58\u5728\u6bd4\u90a3\u8349\u9ad8\u7684\u8349\u3002\n- - \u5728\uff08\u90a3\uff09\u8349\u7684\u53f3\u4fa7\uff0c\u4e0d\u5b58\u5728\u6bd4\uff08\u90a3\uff09\u8349\u9ad8\u7684\u8349\u3002\n- \uff08\u8981\u6c42\uff09\u5f88\u597d\u5730\u6392\u5217 IOI \u8349\uff0c\u4f7f\u6240\u6709\u7684 IOI \u8349\u4e0d\u67af\u840e\u3002\n- \u8bf7\u8ba1\u7b97\u6700\u5c11\u8981\u8fdb\u884c\u591a\u5c11\u6b21\u6392\u5e8f\u3002\n\n**\u5206\u6790**\n- \u4f60\u53d1\u73b0\u4f60\u9700\u8981\u6392\u6210\u4e00\u4e2a\u975e\u4e25\u683c\u5355\u5cf0\u5e8f\u5217\u3002\n- \u4f60\u5c1d\u8bd5\u53d1\u73b0\u4e00\u4e9b\u7ed3\u8bba\uff0c\u6bd4\u5982\u4ece\u5bfb\u627e\u5206\u5272\u70b9\u5728\u4e24\u8fb9\u6392\u5e8f\u4e4b\u7c7b\u7684\uff0c\u5374\u65e0\u679c\u3002\n- \u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u4e2d\u95f4\u7684\u5177\u4f53\u4f4d\u7f6e\u6ca1\u6709\u786e\u5b9a\uff0c\u4f46\u662f\u4e24\u8fb9\u5374\u662f\u786e\u5b9a\u7684\uff0c\u5e94\u8be5\u5148\u4ece\u4e24\u8fb9\u5f00\u59cb\u5bfb\u627e\u3002\n- \u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u4e00\u4e2a\u7b80\u5355\u7684\u8d2a\u5fc3\uff0c\uff08\u4ece\u5916\u5230\u91cc\uff09\u679a\u4e3e\u6700\u5c0f\u7684\u6570\uff0c\u5224\u65ad\u5b83\u5f80\u54ea\u91cc\u79fb\u52a8\u66f4\u4f18\u3002\n- \u56e0\u4e3a\u5b83\u5bf9\u540e\u9762\u7684\u7ed3\u679c\u6ca1\u6709\u5f71\u54cd\uff0c\u6240\u4ee5\u8fd9\u4e2a\u8d2a\u5fc3\u662f\u6b63\u786e\u7684\u3002\n- \u56e0\u6b64\u4f60\u53d1\u73b0\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u7684\u4e0d\u8fc7\u662f\u6bcf\u4e2a\u70b9\u5de6\u8fb9\u6216\u8005\u53f3\u8fb9\u5927\u4e8e\u5b83\u7684\u6570\u7684\u4e2a\u6570\uff08\u8fd9\u662f\u79fb\u52a8\u7684\u6b65\u6570\uff09\uff0c\u56e0\u6b64\u7528\u6811\u72b6\u6570\u7ec4\u5373\u53ef\u5b8c\u6210\u3002\n- \u5b9e\u73b0\u7ec6\u8282\uff1a\u79bb\u6563\u5316\uff0c\u6587\u672b\u56de\u8f66\uff0c[\u4ee3\u7801](https://www.luogu.com.cn/paste/kfaf8ryw)\u3002",
        "postTime": 1640751538,
        "uid": 260884,
        "name": "WeLikeStudying",
        "ccfLevel": 0,
        "title": "AT1218"
    },
    {
        "content": "\u8fd9\u9898\u7684\u7b80\u5316\u9898\u610f\u5c31\u662f\u79fb\u52a8\u82e5\u5e72\u6b21\u76f8\u90bb\u7684\u6570\uff0c\u4f7f\u5f97\u6570\u5217\u6ee1\u8db3\u5148\u975e\u4e25\u683c\u9012\u589e\u518d\u975e\u4e25\u683c\u9012\u51cf\u3002\n\n\u9996\u5148\u4f1a\u6709\u4e00\u4e2a\u5f88~~\u5e38\u89c4~~\u7684\u601d\u8def\uff0c\u679a\u4e3e\u5206\u5272\u70b9\uff0c\u770b\u5de6\u8fb9\u548c\u53f3\u8fb9\u7684\u9006\u5e8f\u5bf9\u6570\uff08\u4e5f\u5c31\u662f\u8981\u4ea4\u6362\u7684\u6b21\u6570\uff09\uff0c\u5355\u6570\u8fd9\u6837\u6709\u4e2a\u95ee\u9898\uff0cjust like\uff1a\n\n8 7 2 5 4 6 \u8fd9\u4e00\u7ec4\uff0c\u5b83\u5c31\u4e0d\u7b26\u5408\uff0c\u5b83\u53ea\u9700\u8981\u5c06 2 \u548c 6 \u5de6\u79fb\u4e24\u683c\uff0c\u800c 8 7 \u5e76\u4e0d\u7528\u79fb\u52a8\uff0c\u8fd9\u5c31\u53ea\u80fd\u6362\u4e00\u79cd\u65b9\u6cd5\u4e86\u3002\n\n\u6211\u4eec\u601d\u8003\u4e00\u4e0b\uff0c\u6700\u540e\u7684\u7ed3\u679c\uff0c\u6700\u5c0f\u7684\u4e00\u5b9a\u5728\u5de6\u8fb9\u6216\u53f3\u8fb9\uff0c\u6240\u4ee5\u5c31\u770b\u6bcf\u4e2a\u6570\u79fb\u51e0\u6b21\u5c31\u884c\u4e86\uff0c\u6700\u66b4\u529b\u7684\u65b9\u6cd5 $O(n^3)$\uff0c\u5fc5\u7206\uff0c\u5148 $O(n\\log n)$ \u7684\u590d\u6742\u5ea6\u5904\u7406\u51fa\u4ece\u5c0f\u5230\u5927\u7684\u4f4d\u7f6e\u53ef\u4ee5 $O(n^2)$\uff0c\u4e5f\u8981\u70b8\uff0c\u4e8e\u662f\u6211\u4eec\u8003\u8651\u5b83\u8981\u79fb\u7684\u6761\u4ef6\u3002\n\n\u9996\u5148\u6211\u4eec\u4ece\u5c0f\u79fb\uff0c\u8fd9\u65f6\u6240\u6709\u6570\u90fd\u662f\u5927\u4e8e\u5b83\u7684\uff0c\u6240\u4ee5\u5c31\u8003\u8651\u5de6\u8fb9\u548c\u53f3\u8fb9\u54ea\u4e2a\u66f4\u8fd1\uff0c\u7136\u540e\u662f\u7b2c\u4e8c\u5c0f\uff0c\u56e0\u4e3a\u6700\u5c0f\u7684\u5df2\u7ecf\u88ab\u79fb\u8d70\u4e86\uff0c\u5b83\u8981\u79fb\u4e5f\u4e0d\u53d7\u6bd4\u5b83\u5c0f\u7684\u5f71\u54cd\uff0c\u6240\u4ee5\u79fb\u7684\u6b21\u6570\u5c31\u662f\u6bd4\u5b83\u5927\u7684\u6570\u7684\u4e2a\u6570\uff0c\u5f53\u7136\u5de6\u8fb9\u548c\u53f3\u8fb9\u8981\u53d6\u6700\u5c0f\u503c\uff0c\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f $O(n^2)$\uff0c\u518d\u7528\u4e2a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u503c\u57df\u5c31\u662f $O(n\\log n)$ \u4e86\uff0c\u6ca1\u6709\u95ee\u9898\uff0c\u6700\u540e\uff0c\u8bb0\u5f97\u79bb\u6563\u5316\u548c\u5f00 `long long`\u3002\n\n*\u4e0d\u5f00 long long \u89c1\u7956\u5b97*\n\n```cpp\n#include <bits/stdc++.h>\n#define lowbit(x) (x&-x)\nusing namespace std;\nint n,a[100005],bit[2][100005],ans;\nvoid add(int p,int x){\n\twhile(x<=100000){\n\t\tbit[p][x]++;\n\t\tx+=lowbit(x);\n\t}\n}\nvoid del(int p,int x){\n\twhile(x<=100000){\n\t\tbit[p][x]--;\n\t\tx+=lowbit(x);\n\t}\n}\nint get(int p,int x){\n\tint tot=0;\n\twhile(x){\n\t\ttot+=bit[p][x];\n\t\tx-=lowbit(x);\n\t}\n\treturn tot;\n}\nint main() {\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t\tadd(0,a[i]);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tans+=min(get(1,100000)-get(1,a[i]),get(0,100000)-get(0,a[i]));\n\t\tadd(1,a[i]);\n\t\tdel(0,a[i]);\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}\n```",
        "postTime": 1638577736,
        "uid": 383791,
        "name": "Others",
        "ccfLevel": 7,
        "title": "AT1218 \u9898\u89e3"
    },
    {
        "content": "\u6211\u4eec\u53d1\u73b0\u5e8f\u5217\u5408\u6cd5\uff0c\u5f53\u4e14\u4ec5\u5f53\u80fd\u591f\u627e\u5230\u4e00\u4e2a$i \\in [1,n]$\u4f7f\u5f97\u6bcf\u4e00\u4e2a$j$\u548c$k$\u6ee1\u8db3$a_j\\leq a_i(1 \\leq j<i)$\u5e76\u4e14$a_i \\leq a_k(i<k \\leq n)$\uff0c\u4e8e\u662f\u6211\u4eec\u60f3\u5230\u6784\u9020\u6700\u7ec8\u5e8f\u5217\u3002\n\n\u6784\u9020\u6700\u7ec8\u5e8f\u5217\u5e94\u8be5\u662f\u5bf9\u4e8e\u67d0\u4e00\u4e2a$i$\uff0c\u5b83\u7684\u5de6\u8fb9\u548c\u53f3\u8fb9\u90fd\u6bd4\u5b83\u5c0f\u3002\u6211\u4eec\u8003\u8651\u6bcf\u6b21\u6dfb\u52a0\u4e00\u4e2aIOI\u8349\u3002\u6709\u53ef\u80fd\u6bd4\u5b83\u5c0f\uff0c\u4e0d\u7ba1\u3002\u5982\u679c\u6bd4\u5b83\u5927\uff0c\u53ea\u6709\u53ef\u80fd\u653e\u5728\u5de6\u8fb9\u6216\u8005\u53f3\u8fb9\uff0c\u56e0\u4e3a\u4e24\u4e2a\u64cd\u4f5c\u4e0d\u4f1a\u5f71\u54cd\u5df2\u7ecf\u6446\u597d\u4e86\u7684IOI\u8349\uff0c\u6240\u4ee5\u8bf4\u8fd9\u5176\u5b9e\u53ea\u662f\u4e00\u4e2a\u6c42\u9006\u5e8f\u5bf9\u7684\u8fc7\u7a0b\u3002\u5e76\u4e14\u4e24\u4e2a\u64cd\u4f5c\u4e92\u76f8\u4e0d\u5f71\u54cd\uff0c\u6240\u4ee5\u6bcf\u4e00\u4e2aIOI\u8349\u7684\u8d21\u732e\u662f\u4e24\u4e2a\u64cd\u4f5c\u7684\u6700\u5c0f\u503c\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<iostream>\n#include<queue>\nusing namespace std;\nlong long read()\n{\n\tlong long x=0,f=1;\n\tchar c=getchar();\n\twhile(c<'0' || c>'9')\n\t{\n\t\tif(c=='-')\tf=-1;\n\t\tc=getchar();\n\t}\n\twhile(c>='0' && c<='9')\tx=(x<<1)+(x<<3)+(c^'0'),c=getchar();\n\treturn x*f;\n}\nlong long tree[300005],a[300005],b[300005],tmp[300005],n;\nlong long lowbit(long long x){return x&(-x);}\nvoid modify(long long situ,long long x){while(situ<=n)\ttree[situ]+=x,situ+=lowbit(situ);}\nlong long query(long long situ)\n{\n\tlong long ans=0;\n\twhile(situ)\tans+=tree[situ],situ-=lowbit(situ);\n\treturn ans;\n}\nint main(){\n\tn=read();\n\tfor(long long i=1;i<=n;++i)\ta[i]=b[i]=read();\n\tsort(b+1,b+1+n);\n\tlong long len=unique(b+1,b+1+n)-b-1,ans=0;\n\tfor(long long i=1;i<=n;++i)\ta[i]=lower_bound(b+1,b+1+n,a[i])-b;//\u79bb\u6563\u5316\n\tfor(long long i=1;i<=n;++i)\ttmp[i]=i-1-query(a[i]),modify(a[i],1);//\u8fd9\u91cc\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u9006\u5e8f\u5bf9\u8fc7\u7a0b\uff0c\u6bcf\u6b21\u8ba1\u7b97\uff0c\u5b58\u5728\u6570\u7ec4\u91cc\u9762\uff0c\u653e\u5728\u5de6\u8fb9\u7684\u64cd\u4f5c\n\tmemset(tree,0,sizeof tree);//\u6ce8\u610f\u6e05\u7a7a\n\tfor(long long i=n;i;--i)\tans+=min(tmp[i],n-i-query(a[i])),modify(a[i],1);//\u653e\u5728\u53f3\u8fb9\u7684\u64cd\u4f5c\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1575609101,
        "uid": 184977,
        "name": "pomelo_nene",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 AT1218 \u3010\u305f\u306e\u3057\u3044\u5bb6\u5ead\u83dc\u5712\u3011"
    }
]