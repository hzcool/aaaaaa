[
    {
        "content": "\u5bf9\u4e8e\u4e00\u79cd\u65b9\u6848\uff0c\u6211\u4eec\u628a\u4e0d\u7b26\u5408\u6761\u4ef6\u7684\u683c\u5b50\u79f0\u4e3a\u201c\u574f\u683c\u5b50\u201d\u3002\n\n\u8bbe\u5176\u4e2d\u4e00\u4e2a\u574f\u683c\u5b50\u7684\u5750\u6807\u4e3a $(i_1,j_1)$\uff0c\u53e6\u4e00\u4e2a\u574f\u683c\u5b50\u7684\u5750\u6807\u4e3a $(i_2,j_2)$\u3002\u65b9\u6848\u4e2d\u7b2c $i$ \u884c\u7b2c $j$ \u5217\u7684\u6570\u4e3a $a_{i,j}$\u3002\n\n\u6709 $a_{i_1,j_1}<a_{i_1,j_2}<a_{i_2,j_2}$\uff0c\u4f46\u540c\u65f6\u4e5f\u6709 $a_{i_1,j_1}>a_{i_2,j_1}>a_{i_2,j_2}$\uff0c\u77db\u76fe\u3002\u6240\u4ee5\u4e00\u79cd\u65b9\u6848\u6700\u591a\u53ea\u6709\u4e00\u4e2a\u574f\u683c\u5b50\u3002\n\n\u8003\u8651\u679a\u4e3e\u8fd9\u4e2a\u574f\u683c\u5b50\u586b\u54ea\u4e2a\u6570\uff0c\u4e0d\u59a8\u8bbe\u8fd9\u4e2a\u683c\u5b50\u586b\u7684\u662f $v$\u3002\u90a3\u4e48\u540c\u4e00\u884c\u7684\u5176\u4ed6\u683c\u5b50\u5fc5\u987b\u6bd4 $v$ \u5927\uff0c\u65b9\u6848\u6570\u4e3a $A_{n^2-i}^{n-1}$\u3002\u540c\u4e00\u5217\u7684\u5176\u4ed6\u683c\u5b50\u5fc5\u987b\u6bd4 $v$ \u5c0f\uff0c\u65b9\u6848\u6570\u4e3a $A_{i-1}^{n-1}$\u3002\u800c\u5269\u4e0b\u7684\u683c\u5b50\u80fd\u968f\u4fbf\u586b\uff0c\u65b9\u6848\u6570\u4e3a $(n-1)^2!$\u3002\u6700\u540e\u8fd8\u8981\u4e58\u4e0a\u574f\u683c\u5b50\u7684\u4f4d\u7f6e\u7684\u65b9\u6848\u6570 $n^2$\u3002\u6211\u4eec\u5c31\u5f97\u5230\u4e86**\u4e0d\u5408\u6cd5**\u7684\u65b9\u6848\u6570\uff0c\u7528\u6240\u6709\u65b9\u6848\u51cf\u53bb\u4e0d\u5408\u6cd5\u7684\u65b9\u6848\u5c31\u662f\u7b54\u6848\u4e86\u3002\n\n```cpp\n#include <iostream>\n\nusing namespace std;\nusing LL = long long;\n\nconst int kN = 501;\nconst LL kM = 998244353;\n\nint n, l;\nLL f[kN * kN], iv[kN * kN], ans;\n\nLL P(LL b, int e) {\n  LL s = 1;\n  for (; e; e >>= 1, b = b * b % kM) {\n    (e & 1) && (s = s * b % kM);\n  }\n  return s;\n}\nLL A(int n, int m) { return f[n] * iv[n - m] % kM; }\n\nint main() {\n  ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n  cin >> n;\n  l = n * n;\n  for (int i = f[0] = 1; i <= l; ++i) {\n    f[i] = f[i - 1] * i % kM;\n  }\n  iv[l] = P(f[l], kM - 2);\n  for (int i = l; i >= 1; --i) {\n    iv[i - 1] = iv[i] * i % kM;\n  }\n  for (int i = n; i <= l - n + 1; ++i) {\n    ans = (ans + A(i - 1, n - 1) * A(l - i, n - 1) % kM) % kM;\n  }\n  ans = ans * f[(n - 1) * (n - 1)] % kM * l % kM;\n  cout << (f[l] - ans + kM) % kM;\n  return 0;\n}\n```",
        "postTime": 1670818670,
        "uid": 376161,
        "name": "wsfxk",
        "ccfLevel": 6,
        "title": "[ARC143B] Counting Grids \u9898\u89e3"
    }
]