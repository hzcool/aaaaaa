[
    {
        "content": "## Solution:\n\u5176\u5b9e\u6211\u4eec\u5728\u89c2\u5bdf\u9898\u76ee\u4e4b\u540e\u5c31\u4f1a\u53d1\u73b0\uff0c\u7edd\u5bf9\u503c\u6700\u5c0f\u4e3a0\uff0c\u90a3\u4e48\u6211\u4eec\u6240\u6c42\u7684\u7b54\u6848\uff0c\u5c31\u662f\u6c42\u6240\u6709\u7edd\u5bf9\u503c\u76f8\u52a0\u6700\u5c0f\u5f97\u51e0\u3002\n\n\u5982\u679c\u5b66\u8fc7\u4e00\u5b9a\u7684\u6570\u5b66\u77e5\u8bc6\uff0c\u5c31\u4f1a\u77e5\u9053\u4e24\u4e2a\u6570\u76f8\u51cf\u6240\u5f97\u7edd\u5bf9\u503c\u6620\u5c04\u5230\u51e0\u4f55\u4e2d\u5c31\u662f\u4e24\u4e2a\u70b9\u7684\u8ddd\u79bb\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e00\u6761\u6570\u5217\u4e0a\u7684\u6570\u6765\u8bf4\uff08\u9898\u5185\u7684\u6240\u6709 $a$ \u5728\u7ecf\u8fc7\u6392\u5e8f\u540e\u53ef\u4ee5\u5f62\u6210\u4e00\u4e2a\u6570\u5217\uff09\uff0c\u5f53 $x$ \u53d6\u5728\u4efb\u610f\u4e24\u4e2a\u6570\u4e4b\u95f4\u65f6\uff0c\u8fd9\u4e24\u4e2a\u6570\u5bf9 $x$ \u4f5c\u5dee\uff0c\u53d6\u7edd\u5bf9\u503c\u7684\u7ed3\u679c\u4e00\u5b9a\u76f8\u540c\u3002\n\n\u753b\u56fe\u89e3\u91ca\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/ie63ocwo.png)\n\n\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\uff0c$|x-a|$+$|x-b|$\u5c31\u662f$ab$\u7684\u957f\u5ea6\uff0c\u4e5f\u5c31\u5370\u8bc1\u4e86\u4e0a\u9762\u7684\u8bdd\u3002\n\n\u540c\u6837\u7684\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u53d1\u73b0\uff0c $x$ \u5728 $a$ \u7684\u5de6\u8fb9\u6216\u8005 $b$ \u7684\u53f3\u8fb9\uff0c\u53ea\u4f1a\u8ba9\u7b54\u6848\u53d8\u5927\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u5f53\u6709 $cnt$ \u4e2a $a$ \u65f6\uff0c\u82e5 $cnt$\u4e3a\u5076\u6570\uff0c\u5219\u5f53 $x$ \u53d6\u4e3a $a_{cnt/2}$\u65f6\u7b54\u6848\u6700\u5c0f\u3002\u53cd\u4e4b\u5219\u4e3a $a_{cnt/2+1}$\u65f6\u6700\u5c0f\uff0c\u53ef\u4ee5\u8f7b\u6613\u8bc1\u660e\u3002\n\n\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u5982\u4f55\u6c42\u8fd9\u4e2a\u6570\u5462\uff1f\u52a8\u6001\u7b2c $k$ \u4f4d\u6570\u95ee\u9898\uff0c\u5982\u679c\u6bcf\u4e00\u6b21\u4f5c\u4e00\u6b21sort\uff0c\u590d\u6742\u5ea6\u7206\u70b8\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\uff0c\u6709\u4e00\u4e2a\u4e1c\u897f\u53ef\u4ee5\u7528\u6765\u5904\u7406\uff0c\u90a3\u5c31\u662f\u5bf9\u9876\u5806\u3002\n\n\u5bf9\u4e8e\u5bf9\u9876\u5806\uff0c\u6211\u4eec\u9996\u5148\u5f97\u5b66\u4f1a\u4f18\u5148\u961f\u5217\u3002\n\n\u90a3\u4e48\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u8bb2\u5bf9\u9876\u5806\u3002\n\n\u6211\u4eec\u89c2\u5bdf\u4e00\u4e2a\u6709\u5e8f\u7684\u5347\u5e8f\u6570\u7ec4\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e2d\u4f4d\u6570\u524d\u9762\u7684\u6570\u5747\u5c0f\u4e8e\u4e2d\u4f4d\u6570\uff0c\u4e2d\u4f4d\u6570\u540e\u9762\u7684\u6570\u5747\u5927\u4e8e\u4e2d\u4f4d\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u60f3\u50cf\u628a\u4e00\u4e2a\u6570\u7ec4\u5207\u6210\u4e24\u6bb5\uff0c\u524d\u9762\u7684\u6570\u585e\u5165\u5927\u6839\u5806\uff0c\u540e\u9762\u7684\u6570\u585e\u5165\u4e00\u4e2a\u5c0f\u6839\u5806\uff0c\u90a3\u4e48\u663e\u7136\uff0c\u4e24\u4e2a\u5806\u7684\u5176\u4e2d\u4e00\u4e2a\u5806\u9876\u4e00\u5b9a\u662f\u4e2d\u4f4d\u6570\u3002\n\n\u4f46\u662f\u6211\u4e3a\u4e86\u65b9\u4fbf\uff0c\u56e0\u6b64\u6211\u9009\u62e9\u8ba9\u5927\u6839\u5806\uff0c\u5373\u4e2d\u4f4d\u6570\u4e4b\u524d\u7684\u6570\u7ec4\u6210\u7684\u5806\uff0c\u7684\u5806\u9876\u4e3a\u4e2d\u4f4d\u6570\uff0c\u5373\u8ba9\u5927\u6839\u5806\u7684\u957f\u5ea6\u6c38\u8fdc\u4fdd\u6301\u6bd4\u5c0f\u6839\u5806\u66f4\u5927\uff0c\u540c\u65f6\u7531\u4e8e\u4e2d\u4f4d\u6570\u524d\u7684\u6570\u5b57\u5fc5\u7136\u6bd4\u4e2d\u4f4d\u6570\u540e\u9762\u66f4\u5927\uff0c\u56e0\u6b64\u6211\u4e5f\u52a0\u4e86\u4e00\u4e2a\u201cswap\u201d\u3002\n\n\u6211\u4eec\u53c8\u72af\u6101\u4e86\uff1a\u6240\u6709 $f(x)$ \u7684\u548c\u600e\u4e48\u7b97\uff1f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $a$ \u90fd\u4e00\u4e2a\u4e00\u4e2a\u8ba1\u7b97\u8fc7\u53bb\uff1f\u5f53\u7136\uff0c\u8fd9\u4f1a\u9020\u6210\u5927\u9762\u79efTLE\u3002\n\n\u8003\u8651\u5230\u51cf\u6570\u6216\u8005\u88ab\u51cf\u6570\u5747\u4e3a\u4e0a\u9762\u6c42\u51fa\u6765\u7684\u4e2d\u4f4d\u6570\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u96be\u60f3\u5230\uff0c\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u4e00\u4e2a\u533a\u95f4\u7684\u64cd\u4f5c\uff0c\u8ba1\u7b97\u51fa\u5927\u6839\u5806\u4e2d\u7684\u533a\u95f4\u548c\uff0c\u518d\u7528\u533a\u95f4\u957f\u5ea6\u4e58\u4e0a\u6211\u4eec\u524d\u9762\u6c42\u51fa\u7684\u4e2d\u4f4d\u6570\uff0c\u51cf\u53bb\uff0c\u6216\u8005\u88ab\u51cf\u53bb\u8fd9\u4e2a\u533a\u95f4\u7684\u548c\uff0c\u90a3\u4e48\u4e5f\u5c31\u80fd\u591f\u7b97\u51fa\u6765\u5f53\u524d\u7684 $f(x)$ \u4e86\u3002\n\n\u5176\u4ed6\u7684\u7ec6\u8282\u53ef\u4ee5\u7ed3\u5408\u4ee3\u7801\u4e00\u540c\u770b\uff0c\u4e5f\u53ef\u4ee5\u81ea\u5df1\u624b\u52a8\u6a21\u62df\u5bf9\u9876\u5806\uff0c\u62ff\u51e0\u4e2a\u5c0f\u7684\u6570\u636e\u6a21\u62df\u53ef\u80fd\u6548\u679c\u4f1a\u66f4\u597d\u4e9b\u3002\n\n## Code\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\npriority_queue<int, vector<int>, greater<int> > q;\npriority_queue<int> p;\nint n, ans, tmpp, tmp, cnt;\ninline int read()\n{\n    int x = 0, f = 1;\n    char c = getchar();\n    while (c < '0' || c>'9')\n    {\n        if (c == '-') f = -1;\n        c = getchar();\n    }\n    while (c >= '0' && c <= '9')\n    {\n        x = (x << 3) + (x << 1) + (c ^ '0');\n        c = getchar();\n    }\n    return x * f;\n}\nsigned main()\n{\n    n = read();\n    for (register int i = 1;i <= n;++i)\n    {\n        int x, y, z;\n        x = read();\n        if (x == 1)\n        {\n            y = read();\n            z = read();\n            p.push(y);\n            tmpp += y;\n            ans += z;\n            if (p.size() - 1 > q.size())//\u5982\u679c\u5927\u6839\u5806\u7684\u6570\u5b57\u6570\u91cf\u591a\u4e8e\u4e00\u534a\u4ee5\u4e0a\u4e86\uff0c\u5c31\u8981\u628a\u591a\u4f59\u7684\u6254\u8fdb\u5c0f\u6839\u5806\u4fdd\u8bc1\u5927\u6839\u5806\u5806\u9876\u4e3a\u4e2d\u4f4d\u6570\n            {\n                int t = p.top();\n                p.pop();\n                q.push(t);\n                tmpp -= t;\n                tmp += t;\n            }\n            if (!q.empty() && p.top() > q.top())//\u4fdd\u8bc1\u5927\u6839\u5806\u4e2d\u6240\u6709\u6570\u5c0f\u4e8e\u5c0f\u6839\u5806\u4e2d\u7684\u6570\n            {\n                int a = p.top();\n                int b = q.top();\n                q.pop();\n                p.pop();\n                q.push(a);\n                p.push(b);\n                tmpp = tmpp - a + b;\n                tmp = tmp + a - b;\n            }\n        }\n        else\n        {\n            int x = p.top();\n            int y = (p.size() * x) - tmpp + (tmp - q.size() * x) + ans;\n            printf(\"%lld %lld\\n\", x, y);\n        }\n    }\n    return 0;\n}\n```\n",
        "postTime": 1612790341,
        "uid": 198719,
        "name": "\u6d1b\u749f",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 AT4760 \u3010[ABC127F] Absolute Minima\u3011"
    },
    {
        "content": "## \u601d\u8def\n\u5b8c\u5168\u4e0d\u9700\u8981\u5806\uff0c\u8003\u8651\u79bb\u7ebf\u505a\u6cd5\uff0c\u8fd9\u6837\u4e00\u6765\uff0c\u6bcf\u4e00\u6b21\u8fdb\u884c\u5220\u9664\u64cd\u4f5c\u65f6\uff0c\u7b54\u6848\u533a\u95f4\u65e0\u975e\u53ea\u6709\u4e09\u79cd\u60c5\u51b5\uff0c\u4e0d\u53d8\uff0c\u5411\u5de6\uff0c\u5411\u53f3\u3002\u8fd9\u90e8\u5206\u4f7f\u7528\u5224\u65ad\uff0c\u663e\u7136\u590d\u6742\u5ea6\u4e3a $O(1)$\uff0c\u7136\u540e\u79bb\u7ebf\u505a\u6cd5\u5220\u9664\u7684\u65f6\u5019\u987a\u5e26\u5220\u9664\u5c31\u597d\u3002\u603b\u7684\u590d\u6742\u5ea6\u4e3a $O(n \\log n)$\uff0c\u5b8c\u5168\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002",
        "postTime": 1673422132,
        "uid": 754856,
        "name": "_zexal_",
        "ccfLevel": 3,
        "title": "ABC127F"
    },
    {
        "content": "\u6709\u4e00\u4e2a\u51fd\u6570 $f(x)$\uff0c\u4e24\u79cd\u64cd\u4f5c\u3002\n\n1. \u5c06 $f(x)$ \u53d8\u4e3a $f(x)+\\left|x-a\\right|+b$\u3002\n2. \u6c42 $f(x)$ \u7684\u6700\u5c0f\u503c\u70b9\u3002\u5982\u6709\u591a\u4e2a\uff0c\u53d6\u6a2a\u5750\u6807\u6700\u5c0f\u7684\u4e00\u4e2a\u3002\n\n-----\n\u901a\u8fc7\u521d\u4e2d\u6570\u5b66\u77e5\u8bc6\u53ef\u4ee5\u53d1\u73b0\uff0c\u5f53 $x$ \u53d6\u5230\u6240\u6709 $a$ \u7684\u4e2d\u4f4d\u6570\u65f6 $f(x)$ \u6709\u6700\u5c0f\u503c\u3002\u5047\u8bbe\u5df2\u7ecf\u8fdb\u884c\u4e86 $2n-1$ \u6b21\u64cd\u4f5c $1$\uff0c\u6bcf\u4e2a $a$ \u4ece\u5c0f\u5230\u5927\u5206\u522b\u4e3a $a_1,a_2,\\ldots,a_{2n-1}$\uff0c\u5219 $x=a_n$ \u65f6  $ f(x)=(a_n-a_1)+(a_n-a_2)+\\ldots +(a_n-a_{n-1})+(a_{n+1}-a_n)+\\ldots+(a_{2n-1}-a_n)+\\sum b=\\sum_{i=n+1}^{2n+1}a_i-\\sum_{i=1}^{n-1}a_i+\\sum b $\u3002\u64cd\u4f5c\u6b21\u6570\u4e3a\u5076\u6570\u65f6\u7c7b\u4f3c\u3002\u6240\u4ee5\u6211\u4eec\u8981\u7ef4\u62a4\u4ee5\u4e0b\u4e09\u4e2a\u4e1c\u897f\uff1a\n\n+ \u4e2d\u4f4d\u6570\uff1b\n\n+ \u6bd4\u4e2d\u4f4d\u6570\u5927\u7684\u6570\u5b57\u603b\u548c\uff1b\n\n+ \u6bd4\u4e2d\u4f4d\u6570\u5c0f\u7684\u6570\u5b57\u603b\u548c\u3002\n\n\u4e8e\u662f\u8003\u8651\u7528\u4e24\u4e2a\u5806\u6765\u7ef4\u62a4\u3002\u5f00\u4e00\u4e2a\u5927\u6839\u5806\u5b58\u5c0f\u4e8e\u4e2d\u4f4d\u6570\u7684\u6570\uff0c\u5f00\u4e00\u4e2a\u5c0f\u6839\u5806\u5b58\u5927\u4e8e\u4e2d\u4f4d\u6570\u7684\u6570\u3002\u5219\u4e3a\u4e86\u4f7f\u4e2d\u4f4d\u6570\u6709\u591a\u4e2a\u65f6\u53d6\u6700\u5c0f\u7684\uff0c\u5e94\u8be5\u8ba9\u5927\u6839\u5806\u5806\u9876\u5b58\u50a8\u5f53\u524d\u7684\u4e2d\u4f4d\u6570\u3002\u8fd9\u6837\u5927\u6839\u5806\u4e2d\u7684\u5143\u7d20\u4e2a\u6570\u4e00\u5b9a\u5927\u4e8e\u7b49\u4e8e\u5c0f\u6839\u5806\u4e2d\u7684\u5143\u7d20\u4e2a\u6570\u3002\n\n\u8003\u8651\u5982\u4f55\u63d2\u5165\u3002\u5982\u679c\u5f53\u524d\u7684\u6570\u636e\u4e2a\u6570\u662f\u5076\u6570\uff0c\u90a3\u6211\u4eec\u8981\u5728\u5927\u6839\u5806\u4e2d\u65b0\u63d2\u5165\u4e00\u4e2a\u6570\u3002\u660e\u663e\u7684\uff0c\u6211\u8981\u63d2\u5165\u7684\u6570\u4e00\u5b9a\u662f\u5c0f\u6839\u5806\u5806\u9876\u548c\u5f53\u524d\u63d2\u5165\u7684\u6570\u7684\u6700\u5c0f\u503c\uff0c\u5e76\u5c06\u5269\u4e0b\u90a3\u4e2a\u6570\u653e\u5165\u5c0f\u6839\u5806\u4e2d\uff0c\u8fd9\u6837\u624d\u80fd\u4fdd\u8bc1\u6ee1\u8db3\u539f\u6709\u6027\u8d28\u3002\u5982\u679c\u6570\u636e\u4e2a\u6570\u662f\u5076\u6570\uff0c\u7c7b\u4f3c\u7684\uff0c\u53d6\u5927\u6839\u5806\u5806\u9876\u548c\u5f53\u524d\u6570\u7684\u8f83\u5927\u503c\u653e\u5165\u5c0f\u6839\u5806\uff0c\u5269\u4e0b\u90a3\u4e2a\u653e\u5165\u5927\u6839\u5806\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5 $O(n\\log n)$ \u7ef4\u62a4\u4e2d\u4f4d\u6570\u4e86\u3002\u8ba1\u7b97\u4e24\u4e2a\u603b\u548c\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u5728\u6570\u636e\u51fa\u5165\u5806\u65f6\u987a\u4fbf\u5bf9\u603b\u548c\u8fdb\u884c\u4fee\u6539\u5373\u53ef\u3002\n\n[Code](https://atcoder.jp/contests/abc127/submissions/31454143)",
        "postTime": 1651836080,
        "uid": 222865,
        "name": "\u8fdf\u66ae\u5929\u590d\u660e",
        "ccfLevel": 6,
        "title": "ABC127F"
    },
    {
        "content": "\u521a\u770b\u5b8c\u9898\u8fd8\u60f3\u7740\u7528 geogebra \u653e\u51e0\u4e2a $a$ \u4e0a\u53bb\u770b\u51fd\u6570\u957f\u5565\u6837\u3002\u7136\u540e\u753b\u5b8c\u624d\u53d1\u73b0\u8111\u62bd\u4e86\u2026\u2026\u8fd9\u4e0d\u5c31\u662f\u6628\u5929\u505a\u7684\u90a3\u4e2a APIO2015 \u90a3\u9898\u5417\uff1f\n\n\u53d1\u73b0 $b$ \u7684\u5f71\u54cd\u5355\u72ec\u7b97\uff0c\u4efb\u610f\u65f6\u523b\u8bbe $a$ \u7684\u5e8f\u5217\u4e3a $A$\uff0c\u90a3\u4e48 $f(i)=\\sum |x-A_i|$\uff0c\u90a3\u4e0d\u5c31\u662f\u53d6 $A$ \u7684\u4e2d\u4f4d\u6570\u5417\uff1f\u4e24\u4e2a `set` \u7ef4\u62a4\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\n\n\u4e0a\u5e1d\u4e0d\u8981\u60e9\u7f5a\u6211\u505a\u6c34\u9898/kk",
        "postTime": 1606824891,
        "uid": 138400,
        "name": "chenxia25",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 AT4760 \u3010[ABC127F] Absolute Minima\u3011"
    },
    {
        "content": "# \u57fa\u672c\u601d\u8def\n\u9996\u5148\uff0c\u5728\u7ecf\u8fc7\u4e00\u7cfb\u5217\u64cd\u4f5c\u4e4b\u540e\uff0c$f(x)$ \u5927\u6982\u957f\u8fd9\u6837\uff1a\n\n$$\nf(x)=|x-a_1|+|x-a_2|+...+|x-a_k|+b_1+b_2+...+b_k\n$$\n\n\u663e\u7136\u540e\u9762\u7684\u90e8\u5206\u662f\u5b9a\u503c\uff0c\u90a3\u4e48\u524d\u9762\u6700\u5c0f\u503c\u662f\u591a\u5c11\uff1f\n\n\u6211\u4eec\u6839\u636e\u7edd\u5bf9\u503c\u7684\u5b9a\u4e49\uff0c\u53ef\u4ee5\u5c06 $a_i$ \u770b\u4f5c\u662f\u6570\u8f74\u4e0a\u7684\u70b9\uff0c\u7136\u540e\u5e0c\u671b\u8ddd\u79bb\u4e4b\u548c\u6700\u5c0f\u3002\n\n\u8fd9\u4e2a\u6700\u5c0f\u7684\u60c5\u51b5\uff0c\u5982\u679c\u6709\u5947\u6570\u4e2a\u70b9\uff0c\u90a3\u4e48\u6700\u4f18\u503c\u662f\u6392\u540d\u5728\u4e2d\u95f4\u7684\u70b9\u3002\n\n\u5982\u679c\u6709\u5076\u6570\u4e2a\u70b9\uff0c\u5219\u4e2d\u95f4\u4e24\u4e2a\u70b9\u4e2d\u95f4\u8fd9\u4e00\u6bb5\u4efb\u610f\u4e00\u70b9\u90fd\u662f\u6700\u4f18\u7684\u3002\n\n\u8bc1\u660e\u5218\u6c5d\u4f73\u7684\u4e66\u300a\u8bad\u7ec3\u6307\u5357\u300b\u4e0a\u6709\uff0c\u7f51\u4e0a\u4e5f\u6709\u5f88\u591a\u8d44\u6599\uff0c\u4e0d\u518d\u63a8\u5bfc\u3002\n\n\u77e5\u9053\u8fd9\u4e00\u70b9\u540e\uff0c\u6211\u4eec\u53d1\u73b0\u6700\u4f18\u89e3\u5c31\u662f\u6240\u6709 $a_i$ \u7684\u4e2d\u4f4d\u6570\u3002\n\n# \u7ef4\u62a4\u65b9\u6cd5\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u5e73\u8861\u6811\u6765\u7ef4\u62a4\uff0c\u5173\u4e8e\u6c42\u503c\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u5229\u7528 FHQ Treap \u7684\u5206\u88c2\u64cd\u4f5c\u3002\n\n\u6211\u4eec\u6ce8\u610f\u5230\uff1a\u5bf9\u4e8e\u7edd\u5bf9\u503c $|x-a_i|$\uff0c\u5982\u679c\u9700\u8981\u53d6\u76f8\u53cd\u6570\uff0c\u5219 $x\\leq a_i$\uff0c\u5426\u5219\u53cd\u4e4b\u3002\n\n\u5229\u7528\u5206\u88c2\u5206\u6210\u4e24\u4e2a\u90e8\u5206\uff0c\u6211\u4eec\u53ef\u4ee5\u987a\u5e26\u7ef4\u62a4\u51fa\u5e73\u8861\u6811\u6bcf\u4e2a\u5b50\u6811\u7684\u6743\u503c\u603b\u548c\uff0c\u5206\u5f00\u4e4b\u540e\u53ef\u4ee5\u5f88\u7b80\u5355\u7684\u8ba1\u7b97\u4e86\u3002\n\n\n```cpp\n#include<bits/stdc++.h>\n#define LL long long\nusing namespace std;\nstruct node\n{\n    LL lc,rc,sz,pri,val,sum;\n}t[200005];\nLL m,op,a,b,cnt,rt,tot;\nvoid pushup(LL rt)\n{\n    if(rt)\n    {\n        t[rt].sz=t[t[rt].lc].sz+t[t[rt].rc].sz+1;\n        t[rt].sum=t[t[rt].lc].sum+t[t[rt].rc].sum+t[rt].val;\n    }\n}\nvoid split(LL rt,LL &lrt,LL &rrt,LL x)\n{\n    if(rt==0)lrt=rrt=0;\n    else if(t[rt].val<=x)lrt=rt,split(t[rt].rc,t[rt].rc,rrt,x);\n    else rrt=rt,split(t[rt].lc,lrt,t[rt].lc,x);\n    pushup(rt);\n}\nvoid merge(LL &rt,LL lrt,LL rrt)\n{\n    if(lrt==0||rrt==0)rt=lrt+rrt;\n    else if(t[lrt].pri<t[rrt].pri) rt=lrt,merge(t[rt].rc,t[rt].rc,rrt);\n    else rt=rrt,merge(t[rt].lc,lrt,t[rt].lc);\n    pushup(rt);\n}\nvoid ins(LL &rt,LL x)\n{\n    LL rt1,rt2;\n    t[++tot]={0,0,1,rand(),x,x};\n    split(rt,rt1,rt2,x),merge(rt1,rt1,tot),merge(rt,rt1,rt2);\n    pushup(rt);\n}\nLL kth(LL &rt,LL x)\n{\n    if(t[rt].sz<x)return -1;\n    if(x<=t[t[rt].lc].sz)return kth(t[rt].lc,x);\n    if(x==t[t[rt].lc].sz+1)return t[rt].val;\n    return kth(t[rt].rc,x-t[t[rt].lc].sz-1);\n}\nLL calc(LL x)\n{   \n    LL rt1,rt2,ans;\n    split(rt,rt1,rt2,x);\n    ans=t[rt1].sz*x-t[rt1].sum+t[rt2].sum-t[rt2].sz*x;\n    merge(rt,rt1,rt2);\n    pushup(rt);\n    return ans;\n}\n\nint main()\n{\n    srand(time(0));\n    scanf(\"%lld\",&m);\n    while(m--)\n    {\n        scanf(\"%lld\",&op);\n        if(op==1)\n        {\n            scanf(\"%lld%lld\",&a,&b);\n            cnt+=b;     \n            ins(rt,a);   \n        }\n        else \n        {\n            LL k=kth(rt,(t[rt].sz+1)/2);\n            cout<<k<<\" \"<<cnt+calc(k)<<endl;\n        }\n    }\n}\n```\n\n",
        "postTime": 1679578292,
        "uid": 501947,
        "name": "DengDuck",
        "ccfLevel": 6,
        "title": "[ABC127F] Absolute Minima\u9898\u89e3"
    }
]