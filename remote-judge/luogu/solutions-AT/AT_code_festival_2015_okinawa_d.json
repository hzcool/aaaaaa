[
    {
        "content": "\u6628\u5929\u827e\u6559\u8bb2\u7684\u9898\uff0c\u61d2\u5f97\u5199\uff0c\u4eca\u5929\u5199\u4e86\u4e00\u4e0b\uff0c\u611f\u89c9\u96be\u5ea6\u4e0d\u5927\uff0c~~\u53ef\u80fd\u53bb\u5e74\u6211\u521a\u5b66\u5b8c\u5e7f\u641c\u5c31\u4f1a\u5199\u4e86~~\n\n\u6211\u4eec\u901a\u8fc7\u7b2c\u4e09\u7ec4\u6837\u4f8b\u6765\u601d\u8003\u672c\u9898\u505a\u6cd5\u3002\u9996\u5148\uff0c\u7531\u4e8e\u4e24\u4e2a\u4eba\u5728\u73a9\u63a5\u9f99\u6e38\u620f\uff0c\u6240\u4ee5\u53ef\u4ee5\u628a\u6bcf\u4e2a\u8bcd\u7684\u5f00\u5934\u5411\u7ed3\u5c3e\u8fde\u4e00\u6761\u6709\u5411\u8fb9\uff0c\u4e8e\u662f\u6e38\u620f\u5c31\u53d8\u6210\u4e86\uff1a\n\n\u4ece\u4e00\u53f7\u70b9\u5f00\u59cb\uff0c\u4e24\u4eba\u8f6e\u6d41\u5728\u4e00\u5f20\u6709\u5411\u56fe\u4e0a\u8d70\uff0c\u65e0\u6cd5\u64cd\u4f5c\u7684\u4eba\u5931\u8d25\uff0c\u95ee\u80dc\u8d1f\u3002\n\n\u4e8e\u662f\u6709\u4e0b\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/xx0x3nqp.png)\n\n\u6839\u636e\u535a\u5f08\u8bba\u7684\u7ecf\u5178\u5957\u8def\uff0c\u6211\u4eec\u53ef\u4ee5\u53ea\u8003\u8651\u5148\u624b\u7684\u80dc\u8d1f\u60c5\u51b5\u3002\u6211\u4eec\u5bf9\u56fe\u4e0a\u6bcf\u4e00\u4e2a\u70b9\u5b9a\u4e49\u4e00\u4e2a\u72b6\u6001\uff0c\u8868\u793a\u73a9\u5bb6\u4ece\u8fd9\u4e2a\u70b9\u51fa\u53d1\u8d70\u4e00\u6b65\uff0c\u6700\u4f18\u7b56\u7565\u4e0b\u4ed6\u7684\u80dc\u8d1f\u72b6\u51b5\u3002\u8bbe T \u8868\u793a\u5fc5\u80dc\uff0cF \u8868\u793a\u5fc5\u8d25\u3002\u4e0d\u96be\u770b\u51fa\uff0c\u7531\u4e8e $6$ \u6ca1\u6709\u51fa\u8fb9\uff0c\u5f53\u5148\u624b\u4ece\u8be5\u70b9\u51fa\u53d1\u65f6\u5fc5\u8d25\u3002\u56e0\u6b64\u53ef\u4ee5\u5f97\u51fa\u7b2c\u4e00\u4e2a\u7ed3\u8bba\uff1a\u5982\u679c\u4e00\u4e2a\u70b9\u6ca1\u6709\u51fa\u8fb9\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u5bf9\u5e94\u7684\u72b6\u6001\u4e00\u5b9a\u662f\u5fc5\u8d25\u6001\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/6ctmsy3z.png)\n\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u5f88\u7ecf\u5178\u7684\u7ed3\u8bba\uff0c\u5bf9\u4e8e\u516c\u5e73\u535a\u5f08\u800c\u8a00\uff0c\u80fd\u76f4\u63a5\u5bfc\u81f4\u5fc5\u8d25\u6001\u51fa\u73b0\u7684\u72b6\u6001\u4e00\u5b9a\u662f\u5fc5\u80dc\u6001\u3002\u5982\u56fe $4$ \u548c $5$ \u5c31\u5c5e\u4e8e\u5fc5\u80dc\u6001\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/1k29njv4.png)\n\n\u7531\u521a\u521a\u7684\u7ed3\u8bba\u4e0d\u96be\u60f3\u5230\uff0c\u5982\u679c\u4e00\u4e2a\u72b6\u6001\u6240\u5bfc\u81f4\u6240\u6709\u72b6\u6001\u5168\u90e8\u5fc5\u80dc\u7684\u8bdd\uff0c\u5219\u8be5\u72b6\u6001\u5fc5\u8d25\u3002\u5982\u56fe\uff0c$3$ \u7684\u4e24\u6761\u51fa\u8fb9\u6240\u6307\u5411\u7684\u70b9\u90fd\u662f\u5fc5\u80dc\u7684\uff0c\u6240\u4ee5\u4e00\u65e6\u5148\u624b\u8d70\u5230\u8fd9\u91cc\uff0c\u540e\u624b\u63a5\u4e0b\u6765\u8d70\u7684\u70b9\u90fd\u662f\u5fc5\u80dc\u7684\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/tanrqm8e.png)\n\n\u6839\u636e\u524d\u9762\u63a8\u5bfc\u7684\u7ed3\u8bba\uff0c\u53ef\u4ee5\u63a8\u51fa $1$ \u662f\u5fc5\u80dc\u70b9\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u76f4\u63a5\u5bfc\u5411\u5fc5\u8d25\u70b9\uff0c$2$ \u662f\u5fc5\u8d25\u70b9\uff0c\u56e0\u4e3a\u5b83\u7684\u6240\u6709\u51fa\u8fb9\u6240\u8fde\u63a5\u7684\u70b9\u90fd\u662f\u5fc5\u80dc\u7684\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/yaxvm123.png)\n\n\u7136\u540e\u4ee3\u7801\u5c31\u5f88\u597d\u5b9e\u73b0\u4e86\uff0c~~\u975e\u5e38\u7b80\u5355\uff0c\u6709\u624b\u5c31\u884c\uff0c\u5509\u6211\u624b\u5462~~\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <vector>\n#include <queue>\n#include <cstring>\nusing namespace std;\nint n, m, a, b, vis[100001], cnt[100001];\nqueue <int> q;\nvector <int> G[100001];\nvoid bfs(){\n\tint x, y;\n\twhile (!q.empty()){\n\t\tx = q.front();\n\t\tq.pop();\n\t\tfor (int i = 0; i < G[x].size(); i++){\n\t\t\ty = G[x][i];\n\t\t\tif (vis[x] == 1) cnt[y]--;\n\t\t\tif (vis[y] != -1) continue;\n\t\t\tif (cnt[y] == 0){\n\t\t\t\tvis[y] = 0;\n\t\t\t\tq.push(y);\n\t\t\t}\n\t\t\tif (vis[x] == 0){\n\t\t\t\tvis[y] = 1;\n\t\t\t\tq.push(y);\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tmemset(vis, -1, sizeof(vis));\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i <= m; i++){\n\t\tscanf(\"%d%d\", &a, &b);\n\t\tG[b].push_back(a);\n\t\tcnt[a]++;\n\t}\n\tfor (int i = 1; i <= n; i++){\n\t\tif (cnt[i] == 0){\n\t\t\tvis[i] = 0;\n\t\t\tq.push(i);\n\t\t}\n\t}\n\tbfs(); \n\tif (vis[1] == 1) printf(\"Snuke\\n\");\n\telse if (vis[1] == 0) printf(\"Sothe\\n\");\n\telse printf(\"Draw\\n\");\n\treturn 0;\n}\n```\n\nvis \u6570\u7ec4\u5728\u8fd9\u91cc\u5c31\u662f\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u7684\u72b6\u6001\uff0c$-1$ \u8868\u793a\u72b6\u6001\u672a\u786e\u5b9a\uff0c$0$ \u8868\u793a\u5fc5\u8d25\uff0c$1$ \u8868\u793a\u5fc5\u80dc\u3002",
        "postTime": 1657170234,
        "uid": 347839,
        "name": "Daniel_001",
        "ccfLevel": 0,
        "title": "AT1726 Dictionary for Shiritori Game"
    },
    {
        "content": "[Blog](https://autumnkite.github.io/atcoder-cfoo15D-sol/) \u4f7f\u7528\u6548\u679c\u66f4\u4f73\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://code-festival-2015-okinawa-open.contest.atcoder.jp/tasks/code_festival_2015_okinawa_d)\n\n## \u9898\u610f\n\n\u7ed9\u5b9a\u5927\u5c0f\u4e3a $n$ \u7684\u5b57\u7b26\u96c6\u548c $m$ \u4e2a\u5355\u8bcd\uff0c\u7b2c $i$ \u4e2a\u5355\u8bcd\u4ee5\u5b57\u7b26 $a_i$ \u5f00\u5934\uff0c\u4ee5\u5b57\u7b26 $b_i$ \u7ed3\u5c3e\u3002\n\nSnuke \u548c Sothe \u8f6e\u6d41\u73a9\u5355\u8bcd\u63a5\u9f99\u6e38\u620f\uff08Snuke \u5148\u624b\uff09\u3002\u6bcf\u6b21\u6e38\u620f\u90a3\u4e2a\u4eba\u5fc5\u987b\u8bf4\u51fa\u4e00\u4e2a\u4ee5\u4e0a\u4e2a\u5355\u8bcd\u7684\u672b\u5c3e\u5b57\u7b26\u5f00\u5934\u7684\u5355\u8bcd\uff0c\u7b2c\u4e00\u4e2a\u4eba\u5fc5\u987b\u8bf4\u51fa\u4e00\u4e2a\u4ee5\u5b57\u7b26 1 \u5f00\u5934\u7684\u5355\u8bcd\u3002\u82e5\u8f6e\u5230\u8be5\u4eba\u8fdb\u884c\u6e38\u620f\u65f6\uff0c\u8bf4\u4e0d\u51fa\u7b26\u5408\u6761\u4ef6\u7684\u5355\u8bcd\uff0c\u5219\u8be5\u4eba\u5931\u8d25\u3002\n\n\u5047\u8bbe\u4e24\u4eba\u7edd\u5bf9\u806a\u660e\uff0c\u5224\u65ad\u8c01\u662f\u80dc\u8005\u6216\u8005\u6e38\u620f\u4f1a\u6c38\u8fdc\u8fdb\u884c\u4e0b\u53bb\u3002\n\n$n\\le 10^5,m\\le 2\\times 10^5$\n\n## \u9898\u89e3\n\n\u6bcf\u4e2a\u5b57\u7b26\u5f53\u4f5c\u4e00\u4e2a\u72b6\u6001\uff0c\u5efa\u51fa\u6e38\u620f\u56fe\uff08$a_i\\to b_i$\uff09\u3002\u82e5\u6e38\u620f\u56fe\u4e2d\u67d0\u4e2a\u70b9\u7684\u6240\u6709\u513f\u5b50\u90fd\u662f\u5fc5\u80dc\u6001\uff0c\u5219\u5f53\u524d\u70b9\u5fc5\u8d25\uff1b\u82e5\u5f53\u524d\u70b9\u7684\u6240\u6709\u513f\u5b50\u4e2d\u6709\u4e00\u4e2a\u72b6\u6001\u662f\u5fc5\u8d25\uff0c\u5219\u5f53\u524d\u70b9\u5fc5\u80dc\uff1b\u5426\u5219\u4e3a\u5e73\u5c40\u3002\n\n\u76f4\u63a5\u7528 dfs \u4f1a\u56e0\u4e3a\u6709\u73af\u800c\u53d8\u5f97\u5f88\u96be\u641e\uff08\u6c42\u52a9\u8def\u8fc7\u7684 dalao \u5e2e\u849f\u84bb\u770b\u4e00\u4e0b [\u4ee3\u7801](https://code-festival-2015-okinawa-open.contest.atcoder.jp/submissions/3917268)\uff0cWA 3\u4e2a\u70b9 QAQ\uff09\uff0c\u6240\u4ee5\u8003\u8651\u5efa\u53cd\u56fe\uff0c\u5012\u7740\u63a8\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <cctype>\n#include <cstring>\nint read(){\n\tregister int x = 0, ch = getchar();\n\tfor (; !isdigit(ch); ch = getchar()) ;\n\tfor (; isdigit(ch); ch = getchar()) x = (x << 1) + (x << 3) + (ch ^ '0');\n\treturn x;\n}\n#define N 100005\n#define M 200005\nint n, m, f[N], h, t, Q[N], d[N];\nint edge, to[M], pr[M], hd[N];\nvoid addedge(int u, int v){  // \u8fde\u8fb9\n\tto[++edge] = v, pr[edge] = hd[u], hd[u] = edge;\n}\nint main(){\n\tn = read(), m = read();\n\tfor (register int i = 1, x, y; i <= m; ++i)\n\t\tx = read(), y = read(), addedge(y, x), ++d[x]; // \u5012\u63a8\uff0c\u53cd\u5411\u8fde\u8fb9\n\th = 0, t = 0;\n\tfor (register int i = 1; i <= n; ++i) if (!d[i]) Q[++t] = i, f[i] = 2; // \u8fb9\u754c\u72b6\u6001\n\twhile (h < t){\n\t\tint u = Q[++h];\n\t\tif (f[u] == 2)  // \u5f53\u524d\u72b6\u6001\u5fc5\u8d25\n\t\t\tfor (register int i = hd[u]; i; i = pr[i])\n\t\t\t\t!f[to[i]] ? Q[++t] = to[i] : 0, f[to[i]] = 1; // \u5219\u7236\u72b6\u6001\u5fc5\u80dc\n\t\telse // \u5f53\u524d\u72b6\u6001\u5fc5\u80dc\n\t\t\tfor (register int i = hd[u]; i; i = pr[i])\n\t\t\t\tif (!(--d[to[i]])) Q[++t] = to[i], f[to[i]] = 2; // \u6240\u6709\u540e\u7ee7\u72b6\u6001\u90fd\u662f\u5fc5\u80dc\uff0c\u5219\u5fc5\u8d25\n\t}\n\tif (f[1] == 0) printf(\"Draw\\n\");\n\telse if (f[1] == 1) printf(\"Snuke\\n\");\n\telse if (f[1] == 2) printf(\"Sothe\\n\");\n}\n```",
        "postTime": 1550038846,
        "uid": 20561,
        "name": "AutumnKite",
        "ccfLevel": 10,
        "title": "\u300cAT1726\u300d\u300cCODE FESTIVAL 2015 OKINAWA OPEN\u300dDictionary for Shiritori Game"
    }
]