[
    {
        "content": "#### Solution\n\u9996\u5148\u53d1\u73b0\u4e00\u70b9\uff0c\u8bbe\u76f4\u5f84\u7684\u957f\u5ea6\u4e3a$D$\uff0c\u90a3\u4e48\u7b54\u6848\u7684\u4e0b\u754c\u662f$\\lceil \\frac{D}{2}\\rceil$\uff08\u56e0\u4e3a\u4e24\u68f5\u6811\u5982\u679c\u6700\u5927\u6df1\u5ea6\u4e0d\u540c\u90a3\u4e48\u80af\u5b9a\u4e0d\u540c\u6784\uff09\uff0c\u800c\u4e14\u8fd9\u4e2a\u4e0b\u754c\u5f88\u5bb9\u6613\u5c31\u53ef\u4ee5\u8fbe\u5230\u3002\n\n\u5982\u679c$D$\u662f\u5947\u6570\uff0c\u90a3\u4e48\u8fd9\u68f5\u6811\u7684\u4e2d\u5fc3\u5c31\u662f\u4e00\u6761\u8fb9\uff0c\u6211\u4eec\u628a\u8fd9\u6761\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u4f5c\u4e3a\u6839\u5206\u522b\u8003\u8651\u4e24\u68f5\u5b50\u6811\uff0c\u90a3\u4e48\u8981\u6c42\u6df1\u5ea6\u76f8\u540c\u7684\u70b9\u7684\u5b50\u8282\u70b9\u4e2a\u6570\u76f8\u540c\uff0c\u8bbe$c_i$\u4e3a\u6240\u6709\u6df1\u5ea6\u4e3a$i$\u7684\u70b9\u7684\u513f\u5b50\u6570\u91cf\u7684$max$\uff0c\u90a3\u4e48\u6700\u5c0f\u7684\u53f6\u5b50\u4e2a\u6570\u5373\u4e3a$\\prod c_i$\n\n\u5982\u679c$D$\u662f\u5076\u6570\uff0c\u8981\u4e48\u662f\u4ee5\u4e2d\u5fc3\u70b9\u4e3a\u6839\uff0c\u8981\u4e48\u662f\u4e2d\u5fc3\u70b9\u548c\u4e0e\u5176\u76f8\u90bb\u7684\u70b9\u4e00\u8d77\u4f5c\u4e3a\u4e2d\u5fc3\uff08\u6ee1\u8db3\u4e24\u68f5\u5b50\u6811\u7684\u6700\u5927\u6df1\u5ea6\u90fd\u5c0f\u4e8e\u7b49\u4e8e$\\frac{D}{2}$\uff09\uff0c\u5c06\u4e24\u79cd\u60c5\u51b5\u7684\u7b54\u6848\u53d6$max$\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$\\mathcal O(n^2)$\n#### Code\n```cpp\nint n,len,D,rt,d;\nll ans = llINF;\nint head[MAXN],f[MAXN],dis[MAXN],maxSon[MAXN],dep[MAXN],ban[MAXN];\n\nstruct Edge{\n    int to,next;\n} e[MAXN << 1];\n\nvoid add_edge(int u,int v){\n    e[++len] = (Edge){v,head[u]};\n    head[u] = len;\n}\n\nvoid dfs1(int u,int fa){\n    f[u] = fa; dis[u] = dis[fa] + 1;\n    if(dis[u] > dis[rt]) rt = u;\n    checkMax(D,dis[u]);\n    for(int i = head[u];i != -1;i = e[i].next){\n        int v = e[i].to;\n        if(v == fa) continue;\n        dfs1(v,u);\n    }\n}\n\nvoid dfs2(int u,int fa){\n    int cnt = 0; dep[u] = dep[fa] + 1;\n    for(int i = head[u];i != -1;i = e[i].next){\n        int v = e[i].to;\n        if(v == fa || ban[v]) continue;\n        cnt += 1;\n        dfs2(v,u);\n    }\n    checkMax(maxSon[dep[u]],cnt);\n}\n\nvoid Solve(int u,int v){\n    memset(maxSon,0,sizeof(maxSon));\n    maxSon[1] = 2; dep[0] = 1;\n    ban[u] = ban[v] = 1;\n    dfs2(v,0); dfs2(u,0);\n    ban[u] = ban[v] = 0;\n    ll c = 1;\n    for(int i = 1;i <= d;i++) c *= maxSon[i];\n    checkMin(ans,c);\n}\n\nint main(){\n    memset(head,-1,sizeof(head));\n    scanf(\"%d\",&n);\n    for(int i = 1,u,v;i < n;i++){\n        scanf(\"%d%d\",&u,&v);\n        add_edge(u,v); add_edge(v,u);\n    }\n    dfs1(1,0); int t = rt; rt = 0; dfs1(t,0);\n    d = (D + 1) >> 1;\n    printf(\"%d \",d);\n    if(D & 1){\n        int u = rt;\n        for(int i = 1;i < d;i++) u = f[u];\n        dfs2(u,0); ll c = 1;\n        for(int i = 1;i < d;i++) c *= maxSon[i];\n        checkMin(ans,c);\n        for(int i = head[u];i != -1;i = e[i].next){\n            int v = e[i].to;\n            Solve(u,v);\n        }\n    }else{\n        int u = rt;\n        for(int i = 1;i < d;i++) u = f[u];\n        int v = f[u];\n        Solve(u,v); \n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1609125894,
        "uid": 108894,
        "name": "\u5173\u6000\u4ed6\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT3961 \u3010[AGC024D] Isomorphism Freak\u3011"
    },
    {
        "content": "\u6807\u7b7e: \u66b4\u641c.\n\n\u4e3a\u4e86\u8fbe\u5230\u989c\u8272\u6570\u6700\u5c11, \u6700\u7ec8\u7684\u6811\u5fc5\u5b9a\u662f\u4ee5\u67d0\u4e00\u4e2a\u70b9\u6216\u67d0\u4e00\u4e2a\u8fb9\u4e3a\u6839, \u6df1\u5ea6\u76f8\u540c\u7684\u6240\u6709\u70b9\u7684\u5b50\u6811\u540c\u6784, \u8fd9\u6837\u7684\u7b54\u6848\u662f\u6df1\u5ea6\u4e2a\u989c\u8272.\n\n\u90a3\u4e48\u6211\u4eec\u679a\u4e3e\u6bcf\u4e2a\u70b9/\u8fb9\u4f5c\u4e3a\u6700\u540e\u7684\u6839, bfs \u5c31\u53ef\u4ee5\u89e3\u51b3\u6700\u5c0f\u6df1\u5ea6\u7684\u95ee\u9898\u4e86.\n\n\u6700\u5c0f\u53f6\u5b50\u8282\u70b9\u6570\u4e5f\u5f88\u597d\u5904\u7406, \u663e\u7136\u6df1\u5ea6\u76f8\u540c\u7684\u6240\u6709\u70b9\u7684\u5b50\u6811\u540c\u6784\u7b49\u4ef7\u4e8e\u6df1\u5ea6\u76f8\u540c\u7684\u70b9\u5ea6\u6570\u76f8\u540c, \u6211\u4eec\u5bf9\u6bcf\u4e00\u5c42\u7684\u8fde\u5411\u4e0b\u4e00\u5c42\u5ea6\u6570\u53d6\u4e2a\u6700\u5927\u503c\u76f8\u4e58\u5373\u53ef.\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n^2)$.\n\nps: \u5b9e\u9645\u4e0a\u6700\u540e\u7684\u6839\u5fc5\u5b9a\u662f\u76f4\u5f84\u7684\u4e2d\u70b9, \u6211\u4eec\u53ea\u9700\u8981\u505a\u4e00\u6b21 bfs \u5c31\u597d\u4e86, \u4f46\u662f\u8fd9\u4e2a\u9898\u76ee\u7684\u6570\u636e\u8303\u56f4\u5f88\u5c0f(\u5927\u6982\u662f\u56e0\u4e3a\u53f6\u5b50\u8282\u70b9\u7684\u4e2a\u6570\u589e\u957f\u5f88\u5feb), \u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u679a\u4e3e.\n\n```cpp\n#include <bits/stdc++.h>\n#define pil pair<int, long long>\nusing namespace std;\nint read();\nint n;\nvector<int> e[200005];\nint deg[200005];\nvoid add(int f, int t) {\n    e[f].push_back(t), e[t].push_back(f), ++deg[f], ++deg[t];\n}\n\nint mxdeg[200005], dep[200005];\n\nvoid chmax(int &x, int y) { x < y ? x = y : x; }\n\nqueue<int> q;\n\nint bfs(int u, int v) {\n    int rt = 0;\n    for (int i = 1; i <= n; ++i) dep[i] = 0;\n    q.push(u), dep[u] = 1;\n    if (v) q.push(v), dep[v] = 1;\n    while (!q.empty()) {\n        int u = q.front();\n        q.pop(), chmax(mxdeg[dep[u]], deg[u]), chmax(rt, dep[u]);\n        for (int i = 0, v; i < e[u].size(); ++i)\n            if (!dep[v = e[u][i]]) dep[v] = dep[u] + 1, q.push(v);\n    }\n    return rt;\n}\npil res;\npil work(int u, int v) {\n    pil rt;\n    for (int i = 1; i <= n; ++i) mxdeg[i] = 0;\n    rt = (pil){bfs(u, v), mxdeg[1] - (v != 0)};\n    for (int i = 2; i <= n; ++i) {\n        if (mxdeg[i] == 1) break;\n        rt.second *= (mxdeg[i] - 1);\n    }\n    if (v) rt.second *= 2;\n    return rt;\n}\n\nint main() {\n    n = read();\n    if (n == 2) return puts(\"1 2\"), 0;\n    for (int i = 1; i < n; ++i) add(read(), read());\n    res.first = 200000;\n    for (int i = 1; i <= n; ++i) {\n        res = min(res, work(i, 0));\n        for (int j = 0; j < e[i].size(); ++j) res = min(res, work(i, e[i][j]));\n    }\n    printf(\"%d %d\", res.first, res.second);\n    return 0;\n}\nconst int _SIZE = 1 << 22;\nchar ibuf[_SIZE], *iS = ibuf, *iT = ibuf;\n#define gc                                                         \\\n    (iS == iT ? iT = ((iS = ibuf) + fread(ibuf, 1, _SIZE, stdin)), \\\n     (iS == iT ? EOF : *iS++) : *iS++)\nint read() {\n    int x = 0, f = 1;\n    char c = gc;\n    while (!isdigit(c)) f = (c == '-') ? -1 : f, c = gc;\n    while (isdigit(c)) x = x * 10 + c - '0', c = gc;\n    return x * f;\n}\n```\n",
        "postTime": 1582124903,
        "uid": 51237,
        "name": "Kinandra",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT3961 \u3010[AGC024D] Isomorphism Freak\u3011"
    },
    {
        "content": "\u6211\u4eec\u53d1\u73b0\u5176\u5b9e\u6700\u7ec8\u6240\u5f97\u7684\u6811\u53ea\u6709\u4e24\u79cd\uff0c\u4e00\u79cd\u662f\u4ee5\u4e00\u6761\u8fb9\u4e3a\u4e2d\u5fc3\uff0c\u5de6\u53f3\u4e24\u8fb9\u540c\u6784\uff0c\u4e00\u79cd\u662f\u4ee5\u70b9\u4e3a\u4e2d\u5fc3\uff0c\u5448\u653e\u5c04\u72b6\u5206\u5e03\u3002\n\n\u5176\u5b9e\u8fd9\u4e24\u79cd\u90fd\u4e00\u6837\uff0c\u4ee5\u8fb9\u4e3a\u653e\u5c04\u72b6\u7684\u53ea\u8981\u628a\u8fd9\u6761\u8fb9\u770b\u6210\u4e00\u4e2a\u70b9\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u8fd9\u6837\u6211\u4eec\u8003\u8651\u679a\u4e3e\u4e2d\u5fc3\uff0c\u8981\u6c42\u5176\u6743\u503c\uff0c\u9996\u5148\u4e0d\u96be\u53d1\u73b0\u540c\u6784\u7684\u6570\u91cf\u5176\u5b9e\u5c31\u662f\u4ee5\u4e2d\u5fc3\u4e3a\u6839\u7684\u6811\u7684\u6df1\u5ea6\u3002\u7136\u540e\u6211\u4eec\u8003\u8651\u53f6\u5b50\u4e2a\u6570\uff0c\u6211\u4eec\u53ea\u8981\u60f3\u60f3\u6784\u9020\u8fd9\u68f5\u6811\u7684\u8fc7\u7a0b\uff0c\u5176\u5b9e\u5c31\u662f\u628a\u6bcf\u4e00\u5c42\u6df1\u5ea6\u7684\u6240\u6709\u70b9\u7684\u513f\u5b50\u6570\u8865\u6210\u76f8\u540c\uff0c\u90a3\u4e48\u8865\u5b8c\u540e\u6811\u7684\u53f6\u5b50\u4e2a\u6570\u5c31\u662f\u6bcf\u5c42\u975e\u53f6\u5b50\u8282\u70b9\u513f\u5b50\u4e2a\u6570\u7684\u4e58\u79ef\uff0c\u5bf9\u4e8e\u539f\u6811\u6765\u8bb2\u5c31\u662f\u6bcf\u5c42\u513f\u5b50\u6811\u6700\u591a\u7684\u513f\u5b50\u4e2a\u6570\u7684\u4e58\u79ef\u3002\n\n\u590d\u6742\u5ea6 $\\mathcal{O}(n^2)$\uff0c\u5f00 $100$ \u5927\u6982\u662f\u4e3a\u4e86\u4e0d\u7206 `long long`\u3002",
        "postTime": 1582081354,
        "uid": 84088,
        "name": "pufanyi",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 AT3961 \u3010[AGC024D] Isomorphism Freak\u3011"
    }
]