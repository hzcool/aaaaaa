[
    {
        "content": "\u524d\u7f6e\u77e5\u8bc6\uff1a\u7ebf\u6bb5\u6811\u3001\u6811\u94fe\u5256\u5206\u548c\u5728\u7ebf\u8f6c\u79bb\u7ebf\u601d\u60f3\u3002\n\n\u6211\u4e00\u4e2a\u5f88\u5f3a\u7684\u540c\u5b66\u8bc4\u4ef7\u8fd9\u662f\u4e00\u9053\u6ca1\u4ec0\u4e48\u601d\u7ef4\u96be\u5ea6\u7684\u5957\u8def\u9898\uff0c\u53ef\u662f\u5bf9\u6211\u6765\u8bf4\u8fd8\u662f\u5f88\u96be\u7684\uff08\u800c\u4e14\u7801\u91cf\u5f88\u5927\uff09\uff0c\u53c2\u8003\u4e86\u5927\u4f6c tzc_wk \u7684\u505a\u6cd5\u540e\u5c31\u604d\u7136\u5927\u609f\u4e86\u3002\u4e0b\u9762\u7684\u8bdd\u6709\u70b9\u591a\uff0c\u8bf7\u8c05\u89e3\u3002\n\n\u9996\u5148\u770b\u5230\u8be2\u95ee $u,v$ \u7684\u8ddd\u79bb\uff0c\u60f3\u5230\u4e86\u53ef\u4ee5\u5148\u6811\u5256\u5b8c\u4e86\u518d\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u5bf9\u4e8e\u7b2c $i$ \u6b21\u8be2\u95ee\uff1a\n\n\u5148\u66b4\u529b\u5f04\u4e2a\u7ebf\u6bb5\u6811 A \u53f7\u7528\u6765\u7ef4\u62a4\u8fb9\u6743\uff0c\u5982\u679c\u8fb9 $e$ \u7684\u989c\u8272\u4e3a $x_i$ \uff0c\u5219\u7528\u7ebf\u6bb5\u6811\u628a $e$ \u7684\u8fb9\u6743\u5355\u70b9\u4fee\u6539\u4e3a $0$ \uff0c\u5426\u5219\u5c31\u662f\u539f\u6765\u7ed9\u7684\u8fb9\u6743\uff0c\u518d\u5f04\u4e2a\u7ebf\u6bb5\u6811 B \u53f7\u7ef4\u62a4 $e$ \u7684\u989c\u8272\u662f\u5426\u4e3a $x_i$ \uff0c\u5982\u679c\u662f\u90a3\u5c31\u5355\u70b9\u4fee\u6539\u4e3a 1 \u3002\n\n\u5173\u4e8e\u989c\u8272 $x_i$ \u7684\u7ebf\u6bb5\u6811\u5efa\u597d\u540e\uff0c\u7b2c $i$ \u6b21\u8be2\u95ee\u7684\u7b54\u6848\u53ef\u4ee5 \u533a\u95f4\u67e5\u8be2 $u,v$ \u8def\u5f84\u5728\u7ebf\u6bb5\u6811 A \u4e0a\u7684\u548c $+$ \u7ebf\u6bb5\u6811 B \u7684\u548c $\u00d7$ $y_i$ \u3002\n\n\u8fd9\u4e2a\u76f4\u63a5\u7684\u505a\u6cd5\u590d\u6742\u5ea6\u975e\u5e38\u7684\u7cdf\u7cd5\uff08\u56e0\u4e3a\u5f88\u591a\u8fb9\u4e3a\u4e86\u8be2\u95ee\u7684\u989c\u8272\u4e0d\u540c\u800c\u53cd\u53cd\u590d\u590d\u5730\u4fee\u6539\uff09\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u6709\u53ef\u4ee5\u4f18\u5316\u7684\u5730\u65b9\uff1a\n\n\u5982\u679c\u5148\u5bf9\u4e8e\u6bcf\u6761\u8fb9\u548c\u6bcf\u4e2a\u67e5\u8be2\u5173\u4e8e\u989c\u8272\u5206\u7ec4\uff0c\u4e5f\u5c31\u662f\u8fdb\u884c\u79bb\u7ebf\u5904\u7406\uff08\u53ef\u4ee5\u4e22 vector \u91cc\uff09\uff0c\u90a3\u4e48\u540c\u4e00\u7ec4\u8be2\u95ee\u4e2d\u7684\u540c\u4e00\u7ec4\u8fb9\u4f1a\u53d8\u5f97\u5f88\u597d\u5904\u7406\uff0c\u505a\u6cd5\u5982\u4e0b\uff1a\n\n\u5148\u5bf9\u6240\u6709\u8be2\u95ee\u79bb\u6563\u5316\u540e\u6811\u5256\uff0c\u4e0d\u8003\u8651\u989c\u8272\u5730\u5efa\u51fa\u539f\u59cb\u7684\u7ebf\u6bb5\u6811 A \u548c B \uff0c\u7136\u540e\u679a\u4e3e\u989c\u8272 $i:1...n-1$ \uff0c\u603b\u4f53\u5206\u6210\u4ee5\u4e0b\u4e09\u4e2a\u5c0f\u6b65\u9aa4\uff1a\n\n1. \u7528 vector \u679a\u4e3e\u989c\u8272\u4e3a $i$ \u7684\u8fb9\uff0c\u5bf9\u4e8e\u8fd9\u4e9b\u8fb9\u90fd\u5728\u7ebf\u6bb5\u6811 A \u4fee\u6539\u6210 0 \uff0c\u5728\u7ebf\u6bb5\u6811 B \u4e0a\u4fee\u6539\u6210 1 \u3002 $\\mathcal{O}(\\log_n)$ \u3002\n2. \u7528 vector \u679a\u4e3e\u989c\u8272\u4e3a $i$ \u7684\u8be2\u95ee\uff0c\u5bf9\u4e8e\u8fd9\u4e9b\u8be2\u95ee\u7528\u6811\u5256\u6c42\u51fa LCA \u540e\u518d\u7528\u7ebf\u6bb5\u6811 A \u548c B \u7b97\u51fa\u7b54\u6848\u5e76\u8bb0\u5f55\u4e0b\u6765\u3002 $\\mathcal{O}((\\log_n)^2)$ \u3002\n3. \u628a\u7ebf\u6bb5\u6811 A \u548c B \u590d\u539f\u6210\u539f\u59cb\u72b6\u6001\uff0c\u76f8\u5f53\u4e8e\u505a\u6b65\u9aa4 1 \u7684\u9006\u64cd\u4f5c\u3002 $\\mathcal{O}(\\log_n)$ \u3002\n\n\u6700\u540e\u518d\u628a\u8bb0\u5f55\u597d\u7684\u8be2\u95ee\u7b54\u6848\u4f9d\u6b21\u8f93\u51fa\u5c31\u597d\u4e86\u3002\n\n\u56e0\u4e3a\u6bcf\u6761\u8fb9\u53ea\u6709\u4e00\u79cd\u989c\u8272\uff0c\u6240\u4ee5\u4e0d\u4f1a\u88ab\u53cd\u53cd\u590d\u590d\u5730\u4fee\u6539\uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(n(\\log_n)^2)$ \uff0c\u53ef\u4ee5\u901a\u8fc7\u8fd9\u9898\u3002\n\n\u7ec6\u8282\u5c31\u770b\u4ee3\u7801\u5427\uff0c\u5e94\u8be5\u4e0d\u96be\u7406\u89e3\u3002\n```cpp\n#include<bits/stdc++.h>\n#define reg register\n#define writeln(a) write(a),putchar('\\n')\n#define foor(x,l,r) for (reg int x=l; x<=r; x++)\n#define forr(x,l,r) for (reg int x=l; x<r; x++) \n#define N 100006\n#define l(x) (t[x].l)\n#define r(x) (t[x].r)\n#define ls(x) (x<<1)\n#define rs(x) (x<<1|1)\n#define mid (l(x)+r(x)>>1)\nusing namespace std;\nvoid read(reg int &x){\n\tx=0; reg int f=1; reg char c=getchar();\n\twhile (!isdigit(c)){if (c=='-') f=-1; c=getchar();}\n\twhile (isdigit(c)) x=x*10+c-48,c=getchar(); x*=f;\n}\nvoid write(reg int x){\n\tif (x<0) {putchar('-'); x=-x;}\n\tif (x>9) write(x/10); putchar(x%10+48);\n}\nint n,m,r,p,o,x,y,z,tot,ev[N],son[N],fa[N],sz[N],a[N],d[N],top[N],dfn[N],id[N],ans[N];\nstruct edge{ int u,v,c,w,id; }e[N<<1];\nstruct ques{ int x,y,u,v; }q[N<<1];\nstruct node{ int l,r,val1,val2; }t[N<<2];\nvector<edge>g[N]; // \u6211\u7528\u7684\u662f\u90bb\u63a5\u8868\u5b58\u8fb9\uff0c\u4e5f\u53ef\u4ee5\u94fe\u5f0f\u524d\u5411\u661f\nvector<int>es[N]; // \u8fb9\u7684\u79bb\u6563\u5316\u6570\u7ec4\nvector<int>qs[N]; // \u8be2\u95ee\u7684\u79bb\u6563\u5316\u6570\u7ec4\n// \u5bf9\u4e8e\u8fb9\u8fdb\u884c\u6811\u5256\uff08\u5176\u5b9e\u548c\u70b9\u5dee\u4e0d\u591a\uff09\nvoid dfs1(int u,int v){\n\td[v]=d[u]+1,fa[v]=u,sz[v]=1;\n\tforr(i,0,g[v].size()){\n\t\tedge E=g[v][i]; int vv=E.v;\n\t\tif (vv==u) continue;\n\t\tev[E.id]=vv;\n\t\ta[vv]=E.w;\n\t\tdfs1(v,vv);\n\t\tsz[v]+=sz[vv];\n\t\tif (sz[vv]>sz[son[v]]) son[v]=vv;\n\t}\n}\nvoid dfs2(int u,int v){\n\tdfn[v]=++tot,id[tot]=v,top[v]=u;\n\tif (son[v]) dfs2(u,son[v]);\n\tforr(i,0,g[v].size()){\n\t\tint vv=g[v][i].v;\n\t\tif (vv==fa[v]||vv==son[v]) continue;\n\t\tdfs2(vv,vv);\n\t}\n}\nvoid pushup1(int x){ t[x].val1=t[ls(x)].val1+t[rs(x)].val1; }\nvoid pushup2(int x){ t[x].val2=t[ls(x)].val2+t[rs(x)].val2; }\n// \u5efa\u6811\nvoid build(int x,int l,int r){\n\tl(x)=l,r(x)=r;\n\tif (l==r){ t[x].val1=a[id[l]],t[x].val2=0; return; }\n\tbuild(ls(x),l,mid),build(rs(x),mid+1,r);\n\tpushup1(x);\n}\n// \u5355\u70b9\u4fee\u6539\u7ebf\u6bb5\u6811 A \uff0c\u628a\u7b2c idx \u6761\u8fb9\u7684\u8fb9\u6743\u6539\u4e3a xx\nvoid modify1(int x,int idx,int xx){\n\tif (l(x)==r(x)){ t[x].val1=xx; return; }\n\tif (idx<=mid) modify1(ls(x),idx,xx);\n\telse modify1(rs(x),idx,xx);\n\tpushup1(x);\n}\n// \u5355\u70b9\u4fee\u6539\u7ebf\u6bb5\u6811 B\nvoid modify2(int x,int idx,int xx){\n\tif (l(x)==r(x)){ t[x].val2=xx; return; }\n\tif (idx<=mid) modify2(ls(x),idx,xx);\n\telse modify2(rs(x),idx,xx);\n\tpushup2(x);\n}\n// \u533a\u95f4\u67e5\u8be2\u7ebf\u6bb5\u6811 A \uff0cl,r \u4e3a\u7ed9\u5b9a\u7684\u8303\u56f4 \nint query1(int x,int l,int r){\n\tif(l<=l(x)&&r(x)<=r) return t[x].val1;\n\tint res=0;\n\tif (l<=mid) res+=query1(ls(x),l,r);\n\tif (r>mid) res+=query1(rs(x),l,r);\n\treturn res;\n}\n// \u533a\u95f4\u67e5\u8be2\u7ebf\u6bb5\u6811 B  \nint query2(int x,int l,int r){\n\tif(l<=l(x)&&r(x)<=r) return t[x].val2;\n\tint res=0;\n\tif (l<=mid) res+=query2(ls(x),l,r);\n\tif (r>mid) res+=query2(rs(x),l,r);\n\treturn res;\n}\n// \u94fe\u4e0a\u67e5\u8be2 u,v \u7684\u7b54\u6848 = \u7ebf\u6bb5\u6811 A \u7684\u7b54\u6848 + k * \u7ebf\u6bb5\u6811 B \u7684\u7b54\u6848 \nint query(int x,int y,int k){\n\tint ans=0;\n\twhile (top[x]!=top[y]){\n\t\tif (d[top[x]]<d[top[y]]) swap(x,y);\n\t\tans+=query1(1,dfn[top[x]],dfn[x]);\n\t\tans+=k*query2(1,dfn[top[x]],dfn[x]);\n\t\tx=fa[top[x]];\n\t}\n\tif (d[x]>d[y]) swap(x,y);\n    // \u8fd9\u91cc\u4e0e\u70b9\u4e0d\u540c\uff0c\u5f53 x \u548c y \u4e3a\u540c\u4e00\u6761\u8fb9\u5c31\u4e0d\u7528\u8ba1\u7b97\n    // \u5982\u679c\u4e0d\u662f\u540c\u4e00\u6761\u8fb9\u5c31\u8981\u4ece LCA \u4e0b\u9762\u90a3\u6761\uff08dfn[x]+1\uff09\u8fb9\u5f00\u59cb\u7b97\uff0c\u53ef\u4ee5\u8349\u7a3f\u7eb8\u4e0a\u753b\u4e00\u753b\n\tif (x!=y){\n\t\tans+=query1(1,dfn[x]+1,dfn[y]);\n\t\tans+=k*query2(1,dfn[x]+1,dfn[y]);\n\t}\n\treturn ans;\n}\nint main(){\n\tread(n),read(m);\n\tforr(i,1,n){\n\t\tread(e[i].u),read(e[i].v),read(e[i].c),read(e[i].w),e[i].id=i;\n\t\t// \u90bb\u63a5\u8868\u5b58\u56fe: c \u4e3a\u989c\u8272 \uff0cw \u4e3a\u8fb9\u6743 \n\t\tg[e[i].u].push_back({e[i].u,e[i].v,e[i].c,e[i].w,i});\n\t\tg[e[i].v].push_back({e[i].v,e[i].u,e[i].c,e[i].w,i});\n\t\t// \u628a\u540c\u4e00\u989c\u8272\u7684\u8fb9\u4e22\u5230\u4e00\u4e2a vector \u91cc\u79bb\u7ebf\u5904\u7406 \n\t\tes[e[i].c].push_back(i);\n\t}\n\tfoor(i,1,m){\n\t\tread(q[i].x),read(q[i].y),read(q[i].u),read(q[i].v);\n\t\t// \u628a\u6bcf\u4e2a\u5173\u4e8e\u540c\u4e00\u989c\u8272\u7684\u8be2\u95ee\u4e5f\u79bb\u7ebf\u5904\u7406 \n\t\tqs[q[i].x].push_back(i);\n\t}\n\tdfs1(1,1),dfs2(1,1),build(1,1,n);\n\tforr(i,1,n){ // \u679a\u4e3e\u7b2c i \u79cd\u989c\u8272 \n\t\tforr(j,0,es[i].size()){ // \u6b65\u9aa4 1\n\t\t\tint k=ev[es[i][j]];\n\t\t\tmodify1(1,dfn[k],0);\n\t\t\tmodify2(1,dfn[k],1);\n\t\t}\n\t\tforr(j,0,qs[i].size()){ // \u6b65\u9aa4 2\n\t\t\tint k=qs[i][j];\n\t\t\t// ans[i] \u8bb0\u5f55\u7b2c i \u6b21\u8be2\u95ee\u7684\u7b54\u6848 \n\t\t\tans[k]=query(q[k].u,q[k].v,q[k].y);\n\t\t}\n\t\tforr(j,0,es[i].size()){ // \u6b65\u9aa4 3\n\t\t\tint k=ev[es[i][j]];\n\t\t\tmodify1(1,dfn[k],e[es[i][j]].w);\n\t\t\tmodify2(1,dfn[k],0);\n\t\t}\n\t}\n\tfoor(i,1,m) writeln(ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1623241298,
        "uid": 106710,
        "name": "Red_Lantern",
        "ccfLevel": 0,
        "title": "solution-at4809"
    },
    {
        "content": "[\u9898](https://www.luogu.com.cn/problem/AT4809)\n\n\u53ea\u60f3\u5230\u4e86\u4e3b\u5e2d\u6811\u3002\u5176\u5b9e\u5c31\u662f\u53ef\u6301\u4e45\u5316\u6570\u7ec4\u3002\n\n\u5efa\u4e00\u68f5\u4e3b\u5e2d\u6811\uff0c\u7b2c $i$ \u4e2a\u8282\u70b9\u7684\u4e3b\u5e2d\u6811\u8868\u793a\u7684\u662f\u5b83\u5230\u6811\u6839\u7684\u8def\u5f84\u4e2d\uff0c\u76f8\u540c\u989c\u8272\u7684\u8fb9\u6761\u6570\u548c\u957f\u5ea6\u548c\u7684\u7ebf\u6bb5\u6811\u3002\u67e5\u8be2\u8f6c\u6362\u6210 $u_i$ \u548c $v_i$ \u5230\u6811\u6839\u51cf\u53bb\u4e24\u500d\u7684 $u$ \u548c $v$ \u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u3002\u6743\u503c\u548c\u7684\u8bdd\uff0c\u51cf\u53bb\u539f\u6709\u7684\u6743\u503c\u548c\uff0c\u52a0\u4e0a $y_i$ \u4e58\u8def\u5f84\u6761\u6570\u3002\u6ca1\u6709\u601d\u7ef4\u96be\u5ea6\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n\\log n)$\u3002\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct edg//\u8fb9\n{\n\tint to,col,len;\n};\nstruct zxs//\u4e3b\u5e2d\u6811\n{\n\tint lc,rc,tot,sum;\n}tree[4000010];\nvector<edg>g[100010];\nint n,cnt,root[100010],dep[100010],fa[100010][20],dis[100010];\ninline int read()//\u5feb\u8bfb\n{\n\tchar c=getchar();\n\tint x=0;\n\twhile(c<'0'||c>'9')\n\t\tc=getchar();\n\twhile(c>='0'&&c<='9')\n\t{\n\t\tx=(x<<3)+(x<<1)+c-'0';\n\t\tc=getchar();\n\t}\n\treturn x;\n}\ninline void write(int x)//\u5feb\u5199\n{\n\tint sta[10],tp=0;\n\twhile(x)\n\t{\n\t\tsta[++tp]=x%10;\n\t\tx/=10;\n\t}\n\twhile(tp)\n\t\tputchar(sta[tp--]+'0');\n\tputchar('\\n');\n}\nint build(int l,int r)//\u5efa\u6811\n{\n\tint p=++cnt;\n\ttree[p].sum=tree[p].tot=0;\n\tif(l!=r)\n\t{\n\t\tint mid=(l+r)>>1;\n\t\ttree[p].lc=build(l,mid);\n\t\ttree[p].rc=build(mid+1,r);\n\t}\n\treturn p;\n}\nint change(int q,int l,int r,int x,int y)//\u4fee\u6539\n{\n\tint p=++cnt;\n\ttree[p]=tree[q];\n\ttree[p].tot++;\n\ttree[p].sum+=y;\n\tif(l!=r)\n\t{\n\t\tint mid=(l+r)>>1;\n\t\tif(x>mid)\n\t\t\ttree[p].rc=change(tree[q].rc,mid+1,r,x,y);\n\t\telse\n\t\t\ttree[p].lc=change(tree[q].lc,l,mid,x,y);\n\t}\n\treturn p;\n}\nint ask(int p,int l,int r,int x,int y)//\u67e5\u8be2\n{\n\tif(l==r)\n\t\treturn tree[p].tot*y-tree[p].sum;\n\tint mid=(l+r)>>1;\n\tif(x>mid)\n\t\treturn ask(tree[p].rc,mid+1,r,x,y);\n\treturn ask(tree[p].lc,l,mid,x,y);\n}\nvoid dfs(int x,int f)\n{\n\tdep[x]=dep[f]+1;\n\tfa[x][0]=f;\n\tfor(int i=1;i<19;i++)\n\t\tfa[x][i]=fa[fa[x][i-1]][i-1];\n\tfor(int i=0;i<g[x].size();i++)\n\t\tif(g[x][i].to!=f)\n\t\t{\n\t\t\tdis[g[x][i].to]=dis[x]+g[x][i].len;\n\t\t\troot[g[x][i].to]=change(root[x],1,n,g[x][i].col,g[x][i].len);\n\t\t\tdfs(g[x][i].to,x);\n\t\t}\n}\ninline int LCA(int u,int v)//\u6700\u8fd1\u516c\u5171\u7956\u5148\n{\n\tif(dep[u]<dep[v])\n\t\tswap(u,v);\n\tfor(int i=18;~i;i--)\n\t\tif(dep[fa[u][i]]>=dep[v])\n\t\t\tu=fa[u][i];\n\tif(u==v)\n\t\treturn u;\n\tfor(int i=18;~i;i--)\n\t\tif(fa[u][i]!=fa[v][i])\n\t\t{\n\t\t\tu=fa[u][i];\n\t\t\tv=fa[v][i];\n\t\t}\n\treturn fa[u][0];\n}\nint main()\n{\n\tint q,i,x,y,z,Z;\n\tn=read();\n\tq=read();\n\tfor(i=1;i<n;i++)\n\t{\n\t\tx=read();\n\t\ty=read();\n\t\tz=read();\n\t\tZ=read();\n\t\tg[x].push_back((edg){y,z,Z});\n\t\tg[y].push_back((edg){x,z,Z});\n\t}\n\troot[1]=build(1,n);\n\tdfs(1,1);\n\twhile(q--)\n\t{\n\t\tx=read();\n\t\ty=read();\n\t\tz=read();\n\t\tZ=read();\n\t\tint l=LCA(z,Z);\n\t\twrite(dis[z]+dis[Z]-2*dis[l]+ask(root[z],1,n,x,y)+ask(root[Z],1,n,x,y)-2*ask(root[l],1,n,x,y));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1616331218,
        "uid": 150522,
        "name": "b6e0_",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 ABC133F\u3010Colorful Tree\u3011"
    },
    {
        "content": "\u8003\u8651\u6b63\u5e38\u7684 $u$ \u548c $v$ \u4e4b\u95f4\u7684\u8ddd\u79bb\u600e\u4e48\u53bb\u6c42\uff1a\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u6bcf\u4e2a\u503c\u5230\u6839\u7684\u8ddd\u79bb $dist_i$ \uff0c\u7136\u540e\u901a\u8fc7\u8ba1\u7b97 $dist_u+dist_v-2 \\times dist_{lca}$ \u5f97\u5230\uff0c\u8fd9\u91cc\u5c31\u4e0d\u8fc7\u591a\u8d58\u8ff0\u3002\n\n\u8003\u8651\u672c\u9898\uff0c\u6211\u4eec\u53d1\u73b0\u53ea\u8981\u80fd\u591f\u6c42\u51fa\u6539\u53d8\u540e\u7684 $dist_i$ \u7684\u503c\u5373\u53ef\uff0c\u4e0d\u59a8\u5229\u7528\u4e3b\u5e2d\u6811\u7ef4\u62a4\u6bcf\u4e2a\u70b9 $i$ \u5230\u6839\u8282\u70b9 $1$ \u7684\u6bcf\u79cd\u989c\u8272\u7684\u51fa\u73b0\u6b21\u6570 $cnt$ \u4ee5\u53ca\u6743\u503c\u548c $sum$ \uff0c\u90a3\u4e48\u6b64\u65f6\u771f\u6b63\u7684 $dist'_i=dist_i-sum+cnt \\times y$ \u3002\n\n\u800c\u4e3b\u5e2d\u6811\u7684\u6bcf\u4e2a\u70b9\u7684\u6743\u503c\u53ef\u4ee5\u7ee7\u627f\u5176\u7236\u4eb2\u7684\u6743\u503c\u3002\u65f6\u7a7a\u590d\u6742\u5ea6\u5747\u4e3a $O(N \\log N)$ \u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<string>\n#include<cstring>\n#include<vector>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;\nconst int N=1e5+5;\nint n,q,x,y,z,w;\nstruct node{\n\tint nxt;int to;int dist;int col;\n}e[N*2];\nint head[N],tot;\nstruct Chair{\n\tint ls;int rs;int sum;int cnt;\n}Tree[N*32];\nint root[N],Tcnt;\n\nint fa[N],dep[N],sz[N],hson[N],top[N];\nint val[N],col[N],dist[N];\n/*\u8fd9\u91cc\u4f7f\u7528\u4e86\u6811\u5256\u6c42lca*/\n\ninline void read(int &x) \n{\n\tint f=1;char c;\n\tfor(x=0,c=getchar();c<'0'||c>'9';c=getchar()) if(c=='-') f=-1;\n\tfor(;c>='0'&&c<='9';c=getchar()) x=(x<<1)+(x<<3)+(c^48); x*=f;\n} \ninline int mn(int _x,int _y){return _x<_y?_x:_y;}\ninline int mx(int _x,int _y){return _x>_y?_x:_y;}\ninline int ab(int _x){return _x<0?-_x:_x;}\ninline void add(int from,int to,int col,int dist)\n{\n\te[++tot].to=to;\n\te[tot].dist=dist;e[tot].col=col;\n\te[tot].nxt=head[from];\n\thead[from]=tot;\n}\n\ninline int New(int x)\n{\n\t++Tcnt;\n\tTree[Tcnt]=Tree[x];\n\treturn Tcnt;\n}\ninline int update(int x,int l,int r,int pos,int v)\n{\n\tx=New(x);Tree[x].sum+=v;Tree[x].cnt++;\n\tif(l==r) return x;\n\tint mid=l+r>>1;\n\tif(pos<=mid) Tree[x].ls=update(Tree[x].ls,l,mid,pos,v);\n\tif(pos>mid) Tree[x].rs=update(Tree[x].rs,mid+1,r,pos,v);\n\treturn x;\n}\ninline pair<int,int> query(int x,int l,int r,int pos)\n{\n\tif(l==r) return make_pair(Tree[x].sum,Tree[x].cnt);\n\tint mid=l+r>>1;\n\tif(pos<=mid) return query(Tree[x].ls,l,mid,pos);\n\tif(pos>mid) return query(Tree[x].rs,mid+1,r,pos);\n}\n/*\u4e3b\u5e2d\u6811\u7684\u4fee\u6539\u4e0e\u67e5\u8be2*/\ninline void dfs1(int x)\n{\n\tsz[x]=1;\n\tfor(int i=head[x];i;i=e[i].nxt)\n\t{\n\t\tint v=e[i].to;\n\t\tif(v==fa[x]) continue;\n\t\tfa[v]=x;dep[v]=dep[x]+1;\n\t\tval[v]=e[i].dist;col[v]=e[i].col;\n\t\tdist[v]=dist[x]+e[i].dist;\n\t\tdfs1(v);\n\t\tsz[x]+=sz[v];\n\t\tif(sz[v]>sz[hson[x]]) hson[x]=v;\n\t}\n\treturn ;\n}\ninline void dfs2(int x,int tp)\n{\n\ttop[x]=tp;\n\tif(x!=1) root[x]=update(root[fa[x]],1,n,col[x],val[x]);\n    /*\u5982\u679c\u4e0d\u662f\u6839\u8282\u70b91\u5c31\u8981\u7ee7\u627f\u7236\u4eb2\u5e76\u4e14\u52a0\u5165\u81ea\u5df1\u7684\u503c*/\n\tif(hson[x]) dfs2(hson[x],tp);\n\tfor(int i=head[x];i;i=e[i].nxt)\n\t{\n\t\tint v=e[i].to;\n\t\tif(v==fa[x]||v==hson[x]) continue;\n\t\tdfs2(v,v);\n\t}\t\n}\ninline int lca(int u,int v)\n{\n\twhile(top[u]!=top[v])\n\t{\n\t\tif(dep[top[u]]>dep[top[v]]) u=fa[top[u]];\n\t\telse v=fa[top[v]];\n\t}\n\tif(dep[u]<dep[v]) return u;\n\telse return v;\n}\n\n\ninline int getd(int x,int z,int w)\n{\n\tpair<int,int> tmp=query(root[x],1,n,z);\n\treturn dist[x]-tmp.first+w*tmp.second;//\u8ba1\u7b97\u6539\u53d8\u540e\u7684\u6743\u503c\n}\nint main()\n{\n\tread(n);read(q);\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tread(x);read(y);read(z);read(w);\n\t\tadd(x,y,z,w);add(y,x,z,w);\n\t}\n\tdep[1]=1;dfs1(1);dfs2(1,1);\n\twhile(q--)\n\t{\n\t\tread(z);read(w);read(x);read(y);\n\t\t/\u8fd9\u91cc\u6ce8\u610f\u8bfb\u5165\u7684\u987a\u5e8f x,y\u624d\u662f\u67e5\u8be2\u7684\u8282\u70b9*/\n\t\tint lc=lca(x,y);\n\t\tprintf(\"%d\\n\",getd(x,z,w)+getd(y,z,w)-2*getd(lc,z,w));\n\t}\n\treturn 0;\t\n}  \n\n```\n",
        "postTime": 1670670888,
        "uid": 219198,
        "name": "Minecraft\u4e07\u5c81",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 [ABC133F] Colorful Tree"
    },
    {
        "content": "\u53d1\u73b0\u53ea\u9700\u8981\u8bb0\u5f55\u6240\u6709\u989c\u8272\u8fb9\u6743\u548c\uff0c\u5355\u4e2a\u989c\u8272\u8fb9\u6743\u548c\uff0c\u5355\u4e2a\u989c\u8272\u8fb9\u7684\u4e2a\u6570\uff0c\u4f7f\u7528\u6811\u4e0a\u83ab\u961f\u53ef\u4ee5\u505a\u5230 $O(n\\sqrt q)$\uff0c\u4f7f\u7528\u6811\u5256\u53ef\u4ee5\u505a\u5230 $O(n\\log_2n+q\\log_2^2n)$\uff0c\u4f7f\u7528 $\\text{WBTT}$ \u6216\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u53ef\u4ee5\u505a\u5230 $O((n+q)\\log_2n)$\u3002\n\n\u4f46\u5982\u679c\u79bb\u7ebf\u4e0b\u6765\uff0c\u8fd9\u9053\u9898\u7684\u74f6\u9888\u5c31\u53ea\u5728\u4e8e\u6c42 $\\text{LCA}$\uff0c\u6545\u53ef\u4ee5\u505a\u5230 $O(n+q)$\uff0c\u7136\u800c\u4e3a\u4e86\u8282\u7701\u7801\u91cf\uff0c\u6211\u91c7\u7528\u4e86 $\\text{LCT}$ \u6c42 $\\text{LCA}$\uff0c\u8fd9\u6837\u662f $O(n+q\\log_2n)$ \u7684\uff0c\u53ef\u4ee5\u901a\u8fc7\uff1a\n```cpp\n#include<icecream>\nusing namespace std;\nconst int N=1e5+5;\nint ed[N<<1],cl[N],w[N];\nint n,q,ans[N],f[N];\nvector<int>lk[N];\nint q1[N],q2[N],sm[N],ct[N],als;\nstruct DT{int k,id;};\nvector<DT>qr[N];\nnamespace LCA{\n    int f[N],t[N][2];\n#define tp(x) (t[f[x]][1]==x)\n#define in(x) (t[f[x]][0]==x||tp(x))\n    void rot(int x){\n        int y=f[x],k=tp(x),w=t[x][!k];\n        t[f[w]=t[x][!k]=y][k]=w;\n        if(in(y))t[f[y]][tp(y)]=x;\n        f[x]=f[y],f[y]=x;\n    }int acs(int x){\n        int y;\n        for(y=0;x;t[x][1]=y,x=f[y=x])\n            for(int z=f[x];in(x);rot(x),z=f[x])\n                if(in(z))rot(tp(x)^tp(z)?x:z);\n        return y;\n    }int lca(int x,int y){return acs(x),acs(y);}\n}using LCA::lca;basic \u7684 LCT \u6c42 LCA\uff0c\u53ef\u4ee5\u7528 \u500d\u589e/\u6811\u5256/Tarjan/Four Russian(O(n)-O(1)!) \u4ee3\u66ff\nvoid dfs1(int x,int pr){\n    int y;\n    for(int i:lk[x])\n        if((y=ed[i])!=pr){\n            dfs1(y,x);\n            LCA::f[y]=x;\n        }\n}\nvoid dfs(int x,int pr){\n    int y,g;\n    for(auto at:qr[x])\n        if(at.k){\u8868\u793a\u9700\u8981\u52a0\n            ans[at.id]+=als;\n            ans[at.id]-=sm[q1[at.id]];\n            ans[at.id]+=ct[q1[at.id]]*q2[at.id];\n        }else{LCA \u9700\u8981\u51cf\u4e24\u500d\n            ans[at.id]-=als<<1;\n            ans[at.id]+=sm[q1[at.id]]<<1;\n            ans[at.id]-=ct[q1[at.id]]*q2[at.id]*2;\n        }\n    for(int i:lk[x])\n        if((y=ed[i])!=pr){\n            g=i>>1;\n            sm[cl[g]]+=w[g],als+=w[g],++ct[cl[g]];\n            dfs(y,x);\n            sm[cl[g]]-=w[g],als-=w[g],--ct[cl[g]];\n        }\n}\nint main(){\n    ios::sync_with_stdio(false);\n    cin>>n>>q;int i,x,y,a,b;\n    for(i=1;i<n;++i){\n        cin>>x>>y>>cl[i]>>w[i];\n        lk[ed[i+i+1]=x].push_back(i+i);\n        lk[ed[i+i]=y].push_back(i+i+1);\n    }dfs1(1,0);\u9884\u5904\u7406\u7236\u4eb2\uff0c\u7528\u4e8e\u6c42 LCA\n    for(i=1;i<=q;++i){\n        cin>>q1[i]>>q2[i]>>x>>y;\n        qr[x].push_back({1,i});\n        qr[y].push_back({1,i});\n        x=lca(x,y);\n        qr[x].push_back({0,i});\n    }dfs(1,0);\u79bb\u7ebf\u5904\u7406\u7b54\u6848\n    for(i=1;i<=q;++i)printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```",
        "postTime": 1668559051,
        "uid": 502410,
        "name": "EnofTaiPeople",
        "ccfLevel": 0,
        "title": "[ABC133F]\u7b80\u5355\u6811\u4e0a\u5dee\u5206\u9898"
    },
    {
        "content": "\u6811\u5256 $+$ \u6811\u72b6\u6570\u7ec4\u3002\n\n\u89c2\u5bdf\u9898\u610f\u6211\u4eec\u53d1\u73b0\u7b54\u6848\u5176\u5b9e\u5c31\u662f\u4e24\u70b9\u539f\u6765\u8ddd\u79bb $-$ \u8def\u5f84\u4e0a $x_i$ \u989c\u8272\u7684\u8fb9\u6743\u548c $+$ $x_i$ \u989c\u8272\u8def\u5f84\u7684\u6570\u91cf $\\times y_i$ \u3002\n\n\u4e24\u70b9\u539f\u6765\u8ddd\u79bb\u53ea\u9700\u6c42 $Lca$ \u5f88\u5bb9\u6613\u5b9e\u73b0\uff0c$x_i,y_i$ \u90fd\u662f\u5df2\u7ed9\u51fa\u7684\u91cf\u3002\u90a3\u4e48\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u6c42\u8def\u5f84\u4e0a  $x_i$ \u989c\u8272\u7684\u8fb9\u6743\u548c\u4e0e $x_i$ \u989c\u8272\u8def\u5f84\u7684\u6570\u91cf\u3002\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u7528\u5bf9\u6bcf\u4e2a\u989c\u8272\u7528\u6811\u5256\u7ef4\u62a4\u3002\n\n\u5177\u4f53\u7684\uff0c\u6211\u4eec\u5148\u79bb\u7ebf\uff0c\u628a\u540c\u79cd\u989c\u8272\u653e\u5728\u4e00\u8d77\u5904\u7406\u3002\u6211\u4eec\u628a\u8fb9\u770b\u6210\u70b9\uff0c\u6bcf\u6b21\u4fee\u6539\u4e00\u4e2a\u70b9\u7684\u503c\u3002\u7136\u540e\u533a\u95f4\u67e5\u8be2 $u \\to v$ \u4e0a\u7684\u4fe1\u606f\u3002\u5355\u70b9\u4fee\u6539\u533a\u95f4\u67e5\u8be2\uff0c\u5f88\u660e\u663e\u53ef\u4ee5\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u3002\u7531\u4e8e\u6bcf\u6761\u8fb9\u6700\u591a\u53ea\u4f1a\u6539\u4e24\u6b21\uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u6811\u5256\u590d\u6742\u5ea6 $O(n \\log^2 n)$ \u867d\u7136\u662f $log^2$ \u4f46\u662f\u6bd4\u4e00\u822c\u7684 $\\log$ \u8dd1\u7684\u5feb\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e5f\u662f\u7ebf\u6027\u3002\n\n\u6ce8\u610f\u56e0\u4e3a\u628a\u8fb9\u770b\u6210\u70b9\uff0c\u6240\u4ee5\u8981\u628a $Lca$ \u8fd9\u6761\u8fb9\u4e0d\u7b97\uff0c\u8981\u7279\u5224\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define mp make_pair\n#define int long long\n#define fi first\n#define se second\n#define lowbit(i) (i&(-i))\ninline int read()\n{\n\tchar ch=getchar();int x=0;bool f=0;\n\tfor(;!isdigit(ch);ch=getchar())if(ch=='-')f=1;\n\tfor(;isdigit(ch);ch=getchar())x=(x<<1)+(x<<3)+(ch^48);\n\tif(f==1)x=-x;return x;\n}\nconst int maxn=1e5+5;\nint x,y,z,w,n,m,dis[maxn],idx=0,p[maxn],h[maxn],ans,res,f[maxn],o[maxn],c[maxn],c2[maxn];\nint id[maxn],son[maxn],d[maxn],top[maxn],siz[maxn],fa[maxn];\nstruct node\n{\n\tint x,y,w,z;\n}b[maxn];\nstruct que\n{\n\tint x,y,s,t,id;\n}q[maxn];\nvector<pair<int,int> >e[maxn];\nvector<int>g[maxn];\nbool cmp(que a,que b){return a.x<b.x;}\nvoid dfs1(int x,int f)\n{\n\tsiz[x]=1;fa[x]=f;d[x]=d[f]+1;\n\tfor(auto i:e[x])\n\t{\n\t\tif(i.fi==f)continue;dis[i.fi]=dis[x]+i.se;\n\t\tdfs1(i.fi,x);siz[x]+=siz[i.fi];p[i.fi]=i.se;\n\t\tif(siz[son[x]]<siz[i.fi])son[x]=i.fi;\n\t}\n}\nvoid dfs2(int x,int tf)\n{\n\ttop[x]=tf;id[x]=++idx;h[idx]=p[x];\n\tif(son[x])dfs2(son[x],tf);\t\n\tfor(auto i:e[x])\n\t{\n\t\tif(fa[x]!=i.fi&&son[x]!=i.fi)\n\t\t\tdfs2(i.fi,i.fi);\n\t}\n}\nvoid add(int x,int z)\n{\n\tfor(int i=x;i<=n;i+=lowbit(i))c[i]+=z;\n}\nvoid add2(int x,int z)\n{\n\tfor(int i=x;i<=n;i+=lowbit(i))c2[i]+=z;\n}\nint Q(int x)\n{\n\tint res=0;\n\tfor(int i=x;i;i-=lowbit(i))res+=c[i];\n\treturn res;\n}\nint Q2(int x)\n{\n\tint res=0;\n\tfor(int i=x;i;i-=lowbit(i))res+=c2[i];\n\treturn res;\n}\nint query(int rt,int l,int r)\n{\n\treturn Q(r)-Q(l-1);\n}\nint query2(int rt,int l,int r)\n{\n\treturn Q2(r)-Q2(l-1);\n}\nint Lca(int x,int y)\n{\n\twhile(top[x]!=top[y])\n    {\n        if(d[top[x]]<d[top[y]])swap(x,y);\n        x=fa[top[x]];\n    }\n    if(d[x]>d[y])swap(x,y);\n    return x;\n}\nint getdis(int x,int y)\n{\n\treturn dis[x]+dis[y]-2*dis[Lca(x,y)];\n}\nvoid treequery(int x,int y)\n{\n\tans=0,res=0;\n\twhile(top[x]!=top[y])\n    {\n        if(d[top[x]]<d[top[y]])swap(x,y);\n        ans=(ans+query(1,id[top[x]],id[x]));\n        res=(res+query2(1,id[top[x]],id[x]));\n        x=fa[top[x]];\n    }\n    if(d[x]>d[y])swap(x,y);\n    ans=(ans+query(1,id[x],id[y]));\n    res=res+query2(1,id[x],id[y]);\n}\nsigned main()\n{\n\tfreopen(\"tree.in\",\"r\",stdin);\n\tfreopen(\"tree.out\",\"w\",stdout);\n\tn=read(),m=read();\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tx=read(),y=read(),z=read(),w=read();b[i].x=x,b[i].y=y,b[i].w=w;b[i].z=z;\n\t\te[x].push_back(mp(y,w)),e[y].push_back(mp(x,w));\n\t\tg[z].push_back(i);\n\t}\n\tdfs1(1,0);dfs2(1,1);\n\t\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tif(d[b[i].x]>d[b[i].y])f[b[i].x]=i;\n\t\telse f[b[i].y]=i;\n\t}\n\tfor(int i=1;i<=m;i++)\n\t\tq[i].x=read(),q[i].y=read(),q[i].s=read(),q[i].t=read(),q[i].id=i;\n\tsort(q+1,q+m+1,cmp);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tif(q[i].x!=q[i-1].x)\n\t\t{\n\t\t\tfor(auto j:g[q[i].x])\n\t\t\t{\n\t\t\t\tint x=b[j].x,y=b[j].y,w=b[j].w;\n\t\t\t\tif(d[x]<d[y])swap(x,y);\n\t\t\t\t//cout<<x<<endl;\n\t\t\t\tadd(id[x],w);\n\t\t\t\tadd2(id[x],1);\n\t\t\t}\n\t\t}\n\t\ttreequery(q[i].s,q[i].t);\n\t\tint lca=Lca(q[i].s,q[i].t);\n\t\tif(b[f[lca]].z==q[i].x)\n\t\t{\n\t\t\tans-=b[f[lca]].w,res--;\n\t\t}\n\t\tans=getdis(q[i].s,q[i].t)-ans+res*q[i].y;\n\t\to[q[i].id]=ans;\n\t\tif(q[i].x!=q[i+1].x)\n\t\t{\n\t\t\tfor(auto j:g[q[i].x])\n\t\t\t{\n\t\t\t\tint x=b[j].x,y=b[j].y,w=b[j].w;\n\t\t\t\tif(d[x]<d[y])swap(x,y);\n\t\t\t\tadd(id[x],-w);\n\t\t\t\tadd2(id[x],-1);\n\t\t\t}\n\t\t}\t\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tprintf(\"%d\\n\",o[i]);\n\t}\n\treturn 0;\n}\n\n```\n\n\n\n\n",
        "postTime": 1633596624,
        "uid": 343748,
        "name": "louhao088",
        "ccfLevel": 9,
        "title": "\u9898\u89e3AT4809 [ABC133F] Colorful Tree"
    },
    {
        "content": "\u4e00\u822c\u822c\u7684\u6811\u5256\u9898\u5427\uff08\u5982\u679c\u5b83\u8981\u518d\u652f\u6301\u4fee\u6539\u8fb9\u6743\u3001\u8fb9\u7684\u989c\u8272\u8bf4\u4e0d\u5b9a\u4f1a\u66f4\u96be\u4e00\u70b9\uff0c\u53ef\u662f\u5f88\u9057\u61be\u5b83\u6ca1\u6709\uff09\n\n\u9996\u5148\u8fdb\u884c\u6811\u5256\u3002\u6211\u4eec\u5c06\u8fb9\u6743\u548c\u8fb9\u7684\u989c\u8272\u8f6c\u5230\u70b9\u4e0a\uff08\u6811\u5256\u5e38\u89c4\u64cd\u4f5c\uff09\u3002\n\n\u6211\u4eec\u8003\u8651\u5bf9\u4e8e\u6bcf\u79cd\u989c\u8272\u5efa\u7acb\u4e00\u68f5\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\uff0c\u50a8\u5b58\u6240\u6709\u8be5\u989c\u8272\u7684\u8fb9\u7684\u4fe1\u606f\u3002\n\n\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\uff0c\u6211\u4eec\u8981\u627e\u5230$3$\u4e2a\u4fe1\u606f\uff1a\n\n\u539f\u6811\u4e2d\u8be5\u8def\u5f84\u7684\u957f\u5ea6\uff0c\u8bbe\u4e3a$len$\uff08\u6811\u5256\u6700\u7ecf\u5178\u7684\u64cd\u4f5c\uff09\n\n\u539f\u6811\u4e2d\u8fd9\u6761\u8def\u5f84\u4e0a\u88ab\u8be2\u95ee\u989c\u8272\u7684\u8fb9\u7684\u6570\u91cf\uff0c\u8bbe\u4e3a$num$\uff08\u53ef\u4ee5\u5728\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u91cc\u9762\u7ef4\u62a4\uff09\n\n\u539f\u6811\u4e2d\u8fd9\u6761\u8def\u5f84\u4e0a\u88ab\u8be2\u95ee\u989c\u8272\u7684\u8fb9\u7684\u957f\u5ea6\u4e4b\u548c\uff0c\u8bbe\u4e3a$sum$\u3002\n\n\u518d\u8bbe\u6211\u4eec\u5c06\u6240\u6709\u8be5\u989c\u8272\u7684\u8fb9\u7684\u957f\u5ea6\u5168\u90fd\u4fee\u6539\u6210$dis$\uff0c\u5219\u6b64\u6b21\u8be2\u95ee\u7b54\u6848\u5c31\u662f\uff1a\n\n$len+num*dis-sum$\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define mid ((l+r)>>1)\nint n,m,val[100100],col[100100],root[100100],tsz,dis[100100];\nint dfn[100100],rev[100100],fa[100100],dep[100100],son[100100],top[100100],sz[100100],head[100100],cnt,tot;\nstruct node{\n\tint to,next,val,col;\n}edge[200100];\nvoid ae(int u,int v,int c,int w){\n\tedge[cnt].next=head[u],edge[cnt].to=v,edge[cnt].val=w,edge[cnt].col=c,head[u]=cnt++;\n\tedge[cnt].next=head[v],edge[cnt].to=u,edge[cnt].val=w,edge[cnt].col=c,head[v]=cnt++;\n}\nvoid dfs1(int x,int Fa){\n\tfa[x]=Fa,dep[x]=dep[Fa]+1,sz[x]=1;\n\tfor(int i=head[x],y;i!=-1;i=edge[i].next){\n\t\tif((y=edge[i].to)==fa[x])continue;\n\t\tdis[y]=dis[x]+edge[i].val,dfs1(y,x),sz[x]+=sz[y],val[y]=edge[i].val,col[y]=edge[i].col;\n\t\tif(sz[son[x]]<sz[y])son[x]=y;\n\t}\n}\nvoid dfs2(int x){\n\tif(son[x])top[son[x]]=top[x],dfn[son[x]]=++tot,rev[tot]=son[x],dfs2(son[x]);\n\tfor(int i=head[x],y;i!=-1;i=edge[i].next){\n\t\ty=edge[i].to;\n\t\tif(y==fa[x]||y==son[x])continue;\n\t\ttop[y]=y,dfn[y]=++tot,rev[tot]=y,dfs2(y);\n\t}\n}\nstruct SegTree{\n\tint lson,rson,sum,sz;\n\tSegTree(){lson=rson=sum=sz=0;}\n\tfriend SegTree operator +(const SegTree &x,const SegTree &y){\n\t\tSegTree z;\n\t\tz.sum=x.sum+y.sum;\n\t\tz.sz=x.sz+y.sz;\n\t\treturn z;\n\t}\n}seg[20001000];\nvoid modify(int &x,int l,int r,int P,int val){\n\tif(!x)x=++tsz;\n\tseg[x].sum+=val,seg[x].sz++;\n\tif(l==r)return;\n\tif(mid>=P)modify(seg[x].lson,l,mid,P,val);\n\telse modify(seg[x].rson,mid+1,r,P,val);\n}\nSegTree query(int x,int l,int r,int L,int R){\n\tif(!x)return SegTree();\n\tif(l>R||r<L)return SegTree();\n\tif(L<=l&&r<=R)return seg[x];\n\treturn query(seg[x].lson,l,mid,L,R)+query(seg[x].rson,mid+1,r,L,R);\n}\nint ask(int x,int y,int c,int w){\n\tint X=x,Y=y;\n\tSegTree res;\n\twhile(top[x]!=top[y]){\n\t\tif(dep[top[x]]<dep[top[y]])swap(x,y);\n\t\tres=res+query(root[c],1,n,dfn[top[x]],dfn[x]),x=fa[top[x]];\n\t}\n\tif(dep[x]>dep[y])swap(x,y);\n\tif(x!=y)res=res+query(root[c],1,n,dfn[x]+1,dfn[y]);\n\treturn dis[X]+dis[Y]-2*dis[x]+w*res.sz-res.sum;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m),memset(head,-1,sizeof(head));\n\tfor(int i=1,a,b,c,d;i<n;i++)scanf(\"%d%d%d%d\",&a,&b,&c,&d),ae(a,b,c,d);\n\tdfs1(1,0),dfn[1]=rev[1]=tot=top[1]=1,dfs2(1);\n\tfor(int i=2;i<=n;i++)modify(root[col[i]],1,n,dfn[i],val[i]);\n\tfor(int i=1,a,b,c,d;i<=m;i++)scanf(\"%d%d%d%d\",&a,&b,&c,&d),printf(\"%d\\n\",ask(c,d,a,b));\n\treturn 0;\n}\n```\n",
        "postTime": 1584367721,
        "uid": 123369,
        "name": "xtx1092515503",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT4809 \u3010[ABC133F] Colorful Tree\u3011"
    },
    {
        "content": "\u4e00\u79cd\u6bd4\u8f83\u5947\u602a\u7684\u5355 $\\log$ \u505a\u6cd5\u3002\n\n\u9996\u5148\u7b54\u6848\u53ef\u4ee5\u8868\u793a\u6210\uff1a\u539f\u672c\u8def\u5f84\u957f\u5ea6 $-$ \u8def\u5f84\u4e0a\u989c\u8272\u4e3a $x$ \u7684\u8fb9\u7684\u957f\u5ea6\u7684\u548c $+$ \u8def\u5f84\u4e0a\u989c\u8272\u4e3a $x$ \u7684\u8fb9\u7684\u4e2a\u6570 $\\times y$\u3002\n\n\u7b2c\u4e00\u90e8\u5206\u662f\u597d\u5904\u7406\u7684\uff0c\u8003\u8651\u540e\u9762\u4e24\u4e2a\u90e8\u5206\u600e\u4e48\u7b97\u3002\n\n\u5148\u5c06\u8fb9\u6743\u8f6c\u5316\u4e3a\u70b9\u6743\uff0c\u5b9a\u4e49\u4e00\u4e2a\u70b9\u7684\u989c\u8272\u4e3a\u5b83\u7236\u4eb2\u8fde\u5411\u5b83\u7684\u90a3\u6761\u8fb9\u7684\u989c\u8272\uff0c\u4e00\u4e2a\u70b9\u7684\u70b9\u6743\u4e3a\u5b83\u7236\u4eb2\u8fde\u5411\u5b83\u7684\u90a3\u6761\u8fb9\u7684\u8fb9\u6743\u3002\n\n\u6211\u4eec\u8bb0 $f_{i,j}$ \u8868\u793a\u8282\u70b9 $i$ \u7684\u7b2c $2^j$ \u4e2a\u548c\u5b83\u989c\u8272\u4e00\u6837\u7684\u7956\u5148\u7684\u7f16\u53f7\u3002$s_{i,j}$ \u8868\u793a\u8282\u70b9 $i$ \u5230 $f_{i,j}$ \u7684\u8def\u5f84\u4e2d\u989c\u8272\u4e0e $i$ \u76f8\u540c\u7684\u70b9\u7684\u70b9\u6743\u4e4b\u548c\u3002\n\n\u5177\u4f53\u7684\u6c42\u6cd5\u5c31\u662f\u90a3\u4e00\u4e2a\u6876\u7ef4\u62a4\u5f53\u524d\u8282\u70b9\u5230\u6839\u8282\u70b9\u4e0a\u9762\u7684\u6240\u6709\u989c\u8272\uff0c\u9012\u5f52\u8fdb\u5b50\u6811\u65f6\u5c06\u81ea\u5df1\u7684\u989c\u8272\u653e\u5165\u6876\u4e2d\uff0c\u56de\u6eaf\u65f6\u518d\u62ff\u51fa\u6765\u3002\u8fd9\u6837\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u6211\u4eec\u90fd\u53ef\u4ee5\u6c42\u51fa $f_{i,0}$\uff0c\u522b\u7684\u548c\u500d\u589e\u6c42 $lca$ \u7684\u8fc7\u7a0b\u662f\u7c7b\u4f3c\u7684\u3002\n\n\u90a3\u4e48\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\uff0c\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230 $u$ \u7684\u7956\u5148\u4e2d\u8ddd\u79bb $u$ \u6700\u8fd1\u7684\u989c\u8272\u4e3a $x$ \u7684\u8282\u70b9\u548c $v$ \u7684\u7956\u5148\u4e2d\u8ddd\u79bb $v$ \u6700\u8fd1\u7684\u989c\u8272\u4e3a $x$ \u7684\u8282\u70b9\u3002\u7136\u540e\u66b4\u529b\u5f80\u4e0a\u8df3\u8ba1\u7b97\u540e\u9762\u4e24\u90e8\u5206\u7684\u7b54\u6848\u5373\u53ef\u3002\u6ce8\u610f\u6709\u4e00\u4e9b $\\text{corner case}$\u3002\n\n\u6c42\u8282\u70b9\u53ef\u4ee5\u79bb\u7ebf\u4e0b\u6765\u505a\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u7528 `vector` \u7ef4\u62a4\u9700\u8981\u5f80\u4e0a\u67e5\u8be2\u7684\u989c\u8272\uff0c\u5728 `dfs` \u65f6\u987a\u4fbf\u6c42\u51fa\u6765\u5373\u53ef\u3002\n\n\u603b\u590d\u6742\u5ea6\u662f $\\mathcal{O}(m \\log n)$ \u7684\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define int long long\n#define vi vector<int>\n#define pb(x) push_back(x)\n#define pii pair<int,int>\n#define lowbit(x) x&-x\nusing namespace std;\nconst int N=1e5+10;\nstruct node{\n\tint to,nxt,w,v;\n}a[N<<1];\nstruct ask{\n\tint x,y,u,v,fu,fv;\n}q[N];\nstruct point{\n\tint t,x,id;\n};\nll ans;\nvector<point> v[N];\nint n,m,T,head[N],cnt,anc[N][20],sum[N][20],col[N],t[N],w[N],dep[N],Lanc[N][20],d[N];\ninline int read(){\n\tint s=0,f=0;\n\tchar ch=getchar();\n\twhile(ch>'9'||ch<'0') f|=(ch=='-'),ch=getchar();\n\twhile(ch<='9'&&ch>='0') s=(s<<3)+(s<<1)+(ch^48),ch=getchar();\n\treturn f?-s:s;\n}\ninline void add(int from,int to,int w,int v){\n\ta[++cnt]=(node){to,head[from],w,v};\n\thead[from]=cnt;\n}\ninline void dfs(int x,int fa){\n\td[x]=d[fa]+1;\n\tfor(register int i=head[x];i;i=a[i].nxt){\n\t\tint to=a[i].to;\n\t\tif(to==fa) continue;\n\t\tcol[to]=a[i].w,w[to]=a[i].v;\n\t\tdep[to]=dep[x]+w[to];\n\t\tdfs(to,x);\n\t}\n}\ninline void dfs2(int x,int fa){\n\tanc[x][0]=t[col[x]],sum[x][0]=w[anc[x][0]],Lanc[x][0]=fa;\n\tfor(register int i=1;i<=19;++i) anc[x][i]=anc[anc[x][i-1]][i-1],sum[x][i]=sum[x][i-1]+sum[anc[x][i-1]][i-1],Lanc[x][i]=Lanc[Lanc[x][i-1]][i-1];\n\tint lst=t[col[x]];\n\tt[col[x]]=x;\n\tfor(register int i=0;i<(int)v[x].size();++i){\n\t\tint id=v[x][i].id;\n\t\tif(v[x][i].t==1) q[id].fu=t[v[x][i].x];\n\t\telse q[id].fv=t[v[x][i].x];\n\t}\n\tfor(register int i=head[x];i;i=a[i].nxt){\n\t\tint to=a[i].to;\n\t\tif(to==fa) continue;\n\t\tdfs2(to,x);\n\t}\n\tt[col[x]]=lst;\n}\ninline int lca(int x,int y){\n\tif(d[x]<d[y]) swap(x,y);\n\tfor(register int i=19;i>=0;--i) if(d[Lanc[x][i]]>=d[y]) x=Lanc[x][i];\n\tif(x==y) return x;\n\tfor(register int i=19;i>=0;--i) if(Lanc[x][i]!=Lanc[y][i]) x=Lanc[x][i],y=Lanc[y][i];\n\treturn Lanc[x][0];\n}\ninline int dist(int x,int y){\n\treturn dep[x]+dep[y]-2*dep[lca(x,y)];\n}\ninline int query(int x,int up,int t){\n\tif(!x||d[x]<d[up]) return 0;\n\tint res=w[x],cnt=1;\n\tfor(register int i=19;i>=0;--i){\n\t\tif(d[anc[x][i]]>=d[up]){\n\t\t\tres+=sum[x][i];\n\t\t\tcnt+=(1<<i);\n\t\t\tx=anc[x][i];\n\t\t}\n\t}\n\tif(up==x) res-=w[up],cnt--;\n\treturn t*cnt-res;\n}\nsigned main(){\n\tcol[1]=1e5+1;\n\tn=read(),T=read();\n\tfor(register int i=1;i<n;++i){\n\t\tint u=read(),v=read(),w=read(),vv=read();\n\t\tadd(u,v,w,vv),add(v,u,w,vv);\n\t}\n\tfor(register int i=1;i<=T;++i){\n\t\tq[i].x=read(),q[i].y=read(),q[i].u=read(),q[i].v=read();\n\t\tv[q[i].u].push_back((point){1,q[i].x,i});\n\t\tv[q[i].v].push_back((point){2,q[i].x,i});\n\t}\n\tdfs(1,0);\n\tdfs2(1,0);\n\tfor(register int i=1;i<=T;++i){\n\t\tint fa=lca(q[i].u,q[i].v);\n\t\tprintf(\"%lld\\n\",dist(q[i].u,q[i].v)+query(q[i].fu,fa,q[i].y)+query(q[i].fv,fa,q[i].y));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1681635555,
        "uid": 428089,
        "name": "HMZHMZHMZ",
        "ccfLevel": 7,
        "title": "ABC133F"
    },
    {
        "content": "\u8fd9\u9053\u9898\u4e0d\u7528\u6811\u5256\u4e5f\u662f\u80fd\u505a\u7684\u5427\uff0c\u672c\u4eba\u9664\u4e86 LCA \u7528\u4e86\u6811\u5256\u5916\uff0c\u4ee3\u7801\u4e2d\u6ca1\u6709\u7528\u5230\u4efb\u4f55\u548c\u6811\u5256\u76f8\u5173\u7684\u90e8\u5206\uff0c\u8c8c\u4f3c\u662f\u548c\u7b2c\u4e00\u7bc7\u9898\u89e3\u505a\u6cd5\u4e00\u6837\uff0c\u4f46\u662f\u4ed6\u6ca1\u6709\u8be6\u7ec6\u8bf4\u660e\uff0c\u6240\u4ee5\u6211\u5c55\u5f00\u8bf4\u4e00\u4e0b\u3002\n\n## \u9898\u9762\u63cf\u8ff0\n\n\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u8fb9\u6709\u8fb9\u6743\u548c\u989c\u8272\uff0c\u6bcf\u6b21\u8be2\u95ee $u$ \u5230 $v$ \u5728\u6240\u6709\u989c\u8272\u4e3a $x$ \u7684\u8fb9\u6743\u89c6\u4f5c $y$ \u7684\u6761\u4ef6\u4e0b\u7684\u8def\u5f84\u548c\u3002\n\n\u8bfb\u5165\u4e0d\u8d85\u8fc7 $10^5$\uff0c\u8fb9\u6743\u4e0d\u8d85\u8fc7 $10^4$\u3002\n\n## \u9898\u76ee\u5206\u6790\n\n\u6211\u4eec\u5148\u6452\u5f03\u6389\u989c\u8272\u7684\u9650\u5236\uff0c\u53ea\u8003\u8651\u8fb9\u6743\u548c\u600e\u4e48\u505a\uff1f\n\n\u663e\u7136\u8bbe $dis_i$ \u4e3a\u8282\u70b9 $i$ \u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u548c\uff0c\u8bbe $L = LCA(u,v)$\uff0c\u90a3\u4e48\u5c31\u6709\u8def\u5f84\u548c\u4e3a $dis_u+dis_v-2\\times dis_L$\u3002\n\n\u6240\u4ee5\u73b0\u5728\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u627e\u51fa\u8fd9\u6bb5\u8def\u5f84\u4e0a\u989c\u8272 $x$ \u7684\u8fb9\u6570\u548c\u5bf9\u5e94\u7684\u8fb9\u6743\u548c\uff0c\u6211\u4eec\u8fd8\u662f\u53ef\u4ee5\u53ea\u7ef4\u62a4\u6bcf\u4e2a\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8fd9\u4e24\u4e2a\u503c\uff0c\u7136\u540e\u7528\u4e0a\u9762\u7684\u65b9\u6cd5\u6c42\u5f97\u8def\u5f84\u603b\u548c\u3002\n\n\u6240\u4ee5\u8bf4\u6211\u4eec\u73b0\u5728\u53ea\u9700\u8981\u7ef4\u62a4\u51fa\u6765\u6bcf\u4e2a\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\uff0c\u6bcf\u79cd\u989c\u8272\u7684\u51fa\u73b0\u6b21\u6570\u548c\u5bf9\u5e94\u8fb9\u6743\u548c\u5373\u53ef\u3002\u6211\u4eec\u65e2\u8981\u7ef4\u62a4\u6bcf\u79cd\u989c\u8272\u7684\u548c\uff0c\u8fd8\u8981\u7ef4\u62a4\u8fb9\u6743\u548c\u7684\u548c\uff0c\u60f3\u5230\u4ec0\u4e48\uff1f\n\n\u503c\u57df\u7ebf\u6bb5\u6811\u53ef\u4ee5\u5f88\u597d\u5730\u5904\u7406\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5728\u503c\u57df\u7ebf\u6bb5\u6811\u4e0a\u4e0b\u6807\u4e3a $i$ \u7684\u8282\u70b9\u5904\uff0c\u8bb0\u5f55\u989c\u8272\u4e3a $i$ \u7684\u8fb9\u6743\u7684\u51fa\u73b0\u6b21\u6570\u548c\u8fb9\u6743\u548c\u5373\u53ef\u3002\n\n\u4f46\u662f\u6211\u4eec\u81ea\u7136\u4e0d\u80fd\u5f00 $n$ \u68f5\u503c\u57df\u7ebf\u6bb5\u6811\uff0c\u7a7a\u95f4\u76f4\u63a5\u7206\u70b8\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u5982\u4f55\u5c06\u8d21\u732e\u7edf\u8ba1\u5230\u513f\u5b50\u4e0a\uff0c\u6ce8\u610f\u5230\u6bcf\u6b21\u4fee\u6539\u662f\u5355\u70b9\u4fee\u6539\uff0c\u4e14\u4ec5\u4e0e\u7236\u4eb2\u8282\u70b9\u6709\u5173\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u53ef\u6301\u4e45\u5316\u503c\u57df\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\uff0c\u8003\u8651\u6bcf\u6b21\u4ee5\u7236\u8282\u70b9\u4e3a\u84dd\u672c\u5efa\u6811\uff0c\u8fd9\u6837\u6bcf\u6b21\u6700\u591a\u65b0\u5efa $\\log V$ \u4e2a\u8282\u70b9\uff0c\u590d\u6742\u5ea6\u6b63\u786e\u3002\n\n## Code\n\n\u5177\u4f53\u505a\u6cd5\u5c31\u662f dfs \u4e00\u904d\u5efa\u6811\uff0c\u5728\u5efa\u6811\u8fc7\u7a0b\u4e2d\u7ef4\u62a4\u53ef\u6301\u4e45\u5316\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u67e5\u8be2\u5bf9\u5e94\u6811\u7684\u6743\u503c\u548c\uff0c\u548c $cnt_x\\times k-val_x$ \u7684\u503c\u5373\u53ef\u3002\n\n\u56e0\u4e3a\u6211\u6bd4\u8f83\u61d2\u4e0d\u60f3\u8fd4\u56de\u4e24\u4e2a\u503c\uff0c\u6240\u4ee5\u5728 ask \u51fd\u6570\u91cc\u76f4\u63a5\u6c42\u51fa\u4e86\u7b54\u6848\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#include <queue>\nusing namespace std;\nint read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nconst int N = 1e5+5;\nstruct aa{\n\tint nxt,to,val,col;\n}edge[N*2];\nint tote,head[N];\nvoid add(int u,int v,int c,int w){\n\tedge[++tote].nxt = head[u];edge[tote].to = v;head[u] = tote;edge[tote].col = c;edge[tote].val = w;\n}\nint tot,rt[N];\nstruct bb{\n\tint lc,rc,val,siz;\n}node[N*20];\nvoid ins(int &u,int v,int l,int r,int x,int y){\n\tu = ++tot;\n\tnode[u] = node[v];\n\tnode[u].val+=y;\n\tnode[u].siz++;\n\tif(l==r){\n\t\treturn;\n\t}\n\tint mid = (l+r)/2;\n\tif(x<=mid){\n\t\tins(node[u].lc,node[v].lc,l,mid,x,y);\n\t}else{\n\t\tins(node[u].rc,node[v].rc,mid+1,r,x,y);\n\t}\n}\nint ask(int u,int l,int r,int x,int y){\n\tif(l==r){\n\t\treturn node[u].siz*y-node[u].val;\n\t}\n\tint mid = (l+r)/2;\n\tif(x<=mid){\n\t\treturn ask(node[u].lc,l,mid,x,y);\n\t}else{\n\t\treturn ask(node[u].rc,mid+1,r,x,y);\n\t}\n}\nint top[N],siz[N],son[N],fa[N],dep[N];\nvoid dfs(int u,int f){\n\tsiz[u] = 1;\n\tfor(int i=head[u];i;i=edge[i].nxt){\n\t\tint now = edge[i].to;\n\t\tif(now==f){\n\t\t\tcontinue;\n\t\t}\n\t\tfa[now] = u;\n\t\tdep[now] = dep[u]+1;\n\t\tins(rt[now],rt[u],1,1e5,edge[i].col,edge[i].val);\n\t\tdfs(now,u);\n\t\tsiz[u]+=siz[now];\n\t\tif(siz[now]>siz[son[u]]){\n\t\t\tson[u] = now;\n\t\t}\n\t}\n}\nvoid dfs2(int u,int t){\n\ttop[u] = t;\n\tif(!son[u]){\n\t\treturn;\n\t}\n\tdfs2(son[u],t);\n\tfor(int i=head[u];i;i=edge[i].nxt){\n\t\tint now = edge[i].to;\n\t\tif(now==fa[u]||now==son[u]){\n\t\t\tcontinue;\n\t\t}\n\t\tdfs2(now,now);\n\t}\n}\nint Lca(int u,int v){\n\twhile(top[u]!=top[v]){\n\t\tif(dep[top[u]]<dep[top[v]]){\n\t\t\tswap(u,v);\n\t\t}\n\t\tu = fa[top[u]];\n\t}\n\tif(dep[u]<dep[v]){\n\t\tswap(u,v);\n\t}\n\treturn v;\n}\nint n,q; \nint getval(int u,int c,int w){\n\tint res = node[rt[u]].val;\n\tres+=ask(rt[u],1,1e5,c,w);\n\treturn res;\n}\nint ask(int u,int v,int c,int w){\n\tint L = Lca(u,v);\n\treturn getval(u,c,w)+getval(v,c,w)-2*getval(L,c,w);\n}\n\nint main(){\n\tint u,v,c,w;\n\tn = read();q = read();\n\tfor(int i=1;i<n;i++){\n\t\tu = read();v = read();c = read();w = read();\n\t\tadd(u,v,c,w);add(v,u,c,w);\n\t}\n\tdfs(1,0);\n\tdfs2(1,1);\n\twhile(q--){\n\t\tc = read();w = read();u = read();v = read();\n\t\tcout<<ask(u,v,c,w)<<\"\\n\";\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1670481789,
        "uid": 369399,
        "name": "yizhiming",
        "ccfLevel": 0,
        "title": "\u9898\u89e3\u3010[ABC133F] Colorful Tree\u3011"
    },
    {
        "content": "\u6211\u65b9\u5bf9\u9898\u89e3\u533a\u6e05\u4e00\u8272\u7684 $\\log$ \u7b97\u6cd5\u8868\u793a\u5f3a\u70c8\u8c34\u8d23\uff0c\u7136\u540e\u5199\u4e86\u4e2a $O(n \\sqrt n)$ \u7684\u6811\u4e0a\u83ab\u961f\uff0c\u4e5f\u8dd1\u7684\u98de\u5feb\u3002\n\n### \u9898\u76ee\u5206\u6790\uff1a\n\n\u5bf9\u4e8e\u83ab\u961f\u6765\u8bf4\uff0c\u6bd4\u8f83\u68d8\u624b\u7684\u5730\u65b9\u5c31\u5728\u6bcf\u6b21\u540c\u989c\u8272\u6539\u53d8\u6743\u503c\u7684\u64cd\u4f5c\uff0c\u4f46\u540c\u65f6\u4e5f\u8bf4\u4e86\u6bcf\u6b21\u8be2\u95ee\u72ec\u7acb\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u989d\u5916\u5b58\u50a8\u4e00\u4e0b\u5bf9\u4e8e\u5f53\u524d\u8be2\u95ee\u8def\u5f84\uff0c\u8fd9\u4e2a\u989c\u8272 $i$ \u7684\u4e2a\u6570 $num_i$ \u548c\u5176\u6240\u5bf9\u5e94\u7684\u6743\u503c $sum_i$\uff0c\u5bf9\u4e8e\u7b54\u6848\u5c31\u7b80\u5355\u5bb9\u65a5\uff0c\u5047\u8bbe\u628a\u6240\u6709\u989c\u8272 $x_i$ \u7684\u6743\u503c\u90fd\u53d8\u6210 $y$\uff0c\u5c31\u76f8\u5f53\u4e8e\u5728\u539f\u7b54\u6848\u4e0a\u51cf\u53bb $sum_{x_i}$\uff0c\u52a0\u4e0a $num_{x_i} \\times y$\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u89e3\u51b3\u4e86\u3002\n\n\u53c8\u56e0\u4e3a\u8fd9\u662f\u4e2a\u8fb9\u6743\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u628a\u8fb9\u6743\u5316\u70b9\u6743\uff0c\u628a\u6811\u62cd\u6210\u6b27\u62c9\u5e8f\uff0c\u4e5f\u4e0d\u9700\u8981\u8bb0\u5f55 lca \u7684\u4fe1\u606f\u4e86\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u662f\u53e6\u5916\u4e00\u4e2a\u70b9\u7684 lca\uff0c\u5c31\u76f4\u63a5\u7528\u5165\u5e8f $st[lca]+1$ \u89c4\u907f\u6389\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u62cd\u6210\u6b27\u62c9\u5e8f\u7684\u6811\u957f\u5ea6\u662f $2 \\times n$ \u7684\uff0c\u5bf9\u5e94\u5757\u957f\u4e5f\u5e94\u8be5\u662f $\\sqrt{2 \\times n}$\uff0c\u4e0d\u7136\u4f1a\u635f\u5931\u6548\u7387\u3002\n\n### Code.\n\n```cpp\n#include<bits/stdc++.h>\n#define x first\n#define y second\nusing namespace std;\nconst int N=2e5+10; pair<int,int> pl[N];\nint yl[N],res,ans[N],len,h[N],ne[N<<1],e[N<<1],w[N<<1],col[N<<1],idx,n,m,num[N],sum[N],st[N],vis[N],ed[N],top[N],dep[N],fa[N],sz[N],son[N],cnt;\nint get(int x) {return x/len;}\nstruct node\n{\n\tint l,r,x,y,id;\n\tbool operator < (const node &o) const {\n\t\tif(get(l) == get(o.l)) return get(l)&1 ? r < o.r : r > o.r;\n\t\treturn get(l) < get(o.l);\n\t}\n} q[N];\nvoid add(int u,int v,int co,int c) {ne[++idx]=h[u],e[idx]=v,col[idx]=co,w[idx]=c,h[u]=idx;}\nvoid dfs(int u,int father,int depth)\n{\n\tdep[u]=depth; sz[u]=1; fa[u]=father; yl[++cnt]=u; st[u]=cnt;\n\tfor(int i=h[u];~i;i=ne[i])\n\t{\n\t\tint j=e[i]; if(j == father) continue ;\n\t\tpl[j]=make_pair(col[i],w[i]); dfs(j,u,depth+1);\n\t\tsz[u]+=sz[j]; if(sz[son[u]] < sz[j]) son[u]=j;\n\t}\n\tyl[++cnt]=u; ed[u]=cnt;\n}\nvoid dfs2(int u,int t)\n{\n\ttop[u]=t; if(! son[u]) return ; dfs2(son[u],t);\n\tfor(int i=h[u];~i;i=ne[i])\n\t{\n\t\tint j=e[i];\n\t\tif(j == fa[u] || j == son[u]) continue ;\n\t\tdfs2(j,j);\n\t}\n}\nint lca(int u,int v)\n{\n\twhile(top[u] != top[v])\n\t{\n\t\tif(dep[top[u]] < dep[top[v]]) swap(u,v);\n\t\tu=fa[top[u]];\n\t}\n\treturn dep[u] < dep[v] ? u : v;\n}\nvoid work(int u)\n{\n\tif(vis[u]) {num[pl[u].x]--; sum[pl[u].x]-=pl[u].y; res-=pl[u].y;}\n\telse {num[pl[u].x]++; sum[pl[u].x]+=pl[u].y; res+=pl[u].y;}\n\tvis[u]^=1;\n}\nint main()\n{\n\tmemset(h,-1,sizeof h); scanf(\"%d%d\",&n,&m); len=(int)sqrt(2*n);\n\tfor(int i=1,u,v,co,c;i<n;i++) {scanf(\"%d%d%d%d\",&u,&v,&co,&c); add(u,v,co,c); add(v,u,co,c);}\n\tdfs(1,0,1); dfs2(1,1);\n\tfor(int i=1,u,v;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d%d%d\",&q[i].x,&q[i].y,&u,&v); q[i].id=i;\n\t\tif(st[u] > st[v]) swap(u,v);\n\t\tif(lca(u,v) == u) q[i].l=st[u]+1,q[i].r=st[v];\n\t\telse q[i].l=ed[u],q[i].r=st[v];\n\t}\n\tstable_sort(q+1,q+1+m);\n\tfor(int i=1,l=1,r=0;i<=m;i++)\n\t{\n\t\tint l1=q[i].l,r1=q[i].r;\n\t\twhile(l > l1) work(yl[--l]);\n\t\twhile(r < r1) work(yl[++r]);\n\t\twhile(l < l1) work(yl[l++]);\n\t\twhile(r > r1) work(yl[r--]);\n\t\tans[q[i].id]=res-sum[q[i].x]+num[q[i].x]*q[i].y;\n\t}\n\tfor(int i=1;i<=m;i++) printf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1666428727,
        "uid": 230865,
        "name": "EastPorridge",
        "ccfLevel": 0,
        "title": "[ABC133F] Colorful Tree \u9898\u89e3"
    },
    {
        "content": "\u6811\u72b6\u6570\u7ec4 \u00d7\n\n\u6811\u94fe\u5256\u5206 \u00d7\n\n\u7801\u529b\u9898 \u221a\n\n\u5f88\u5bb9\u6613\u60f3\u5230\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u67e5\u8be2\uff1a$x_i,y_i,u_i,v_i$\uff0c\u8bbe $u_i$ \u5230 $v_i$ \u7b80\u5355\u8def\u5f84\u4e0a\u4e3a $route$\uff0c\u90a3\u4e48\u67e5\u8be2\u7684\u7b54\u6848\u5c31\u662f\uff1a($route$ \u7684\u957f\u5ea6\uff09$-$\uff08$route$ \u4e0a\u989c\u8272\u4e3a $x_i$ \u7684\u957f\u5ea6\u548c\uff09$+$\uff08$route$ \u4e0a\u989c\u8272\u4e3a $x_i$ \u7684\u8fb9\u7684\u4e2a\u6570\uff09$\\cdot$ $y_i$\u3002 \n\n\u5bf9\u4e8e\u7b2c\u4e00\u9879\uff0c\u53ef\u4ee5\u7528 **\u6811\u94fe\u5256\u5206** \u7b80\u5355\u5730\u89e3\u51b3\u3002\n\n\u5bf9\u4e8e\u540e\u9762\u4e24\u9879\uff0c\u53ef\u4ee5\u628a\u64cd\u4f5c\u79bb\u7ebf\u4e0b\u6765\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u989c\u8272 $x$ \u5206\u522b\u5904\u7406\uff0c\u628a\u6240\u6709\u989c\u8272\u4e3a $x$ \u7684\u8fb9\u653e\u5230\u6811\u72b6\u6570\u7ec4\u4e0a\u53bb\u7ef4\u62a4\u3002\n\n**\u6ce8\u610f\uff1a**\n\n1. BIT update \u540e\u8981\u8fd8\u539f\n\n2. \u6811\u5256\u4e0d\u80fd\u7ef4\u62a4\u8fb9\u7684\u4fe1\u606f\uff0c\u6240\u4ee5\u7528\u6bcf\u4e2a\u70b9 $i$ \u7ef4\u62a4 $i$ \u5230 $fa_i$ \u7684\u8fb9\u7684\u957f\u5ea6\u3002\n\n3. LCA \u7684\u6743\u503c\u4e0d\u80fd\u8ba1\u5165\u7b54\u6848\u91cc\uff0c\u56e0\u4e3a $x$ \u5230 $y$ \u7684\u8def\u5f84\u4e0a\u4e0d\u5305\u542b LCA \u5230\u5b83\u7684\u7236\u4eb2\u7684\u90a3\u6761\u8fb9\u3002\n\n4. \u6811\u5256\u4e0d\u8981\u5199\u9519\uff0c\u8fd9\u91cc\u7ed9\u51fa FGgirl \u7684\u9519\u8bef\uff1a\n\n\u6811\u5256\u6c42 LCA \u7684\u65f6\u5019\uff0c\u6bcf\u6b21\u5e94\u8be5\u628a $x$ \u548c $y$ \u4e2d $dep_{top}$ \u66f4\u5927\u7684\u4e00\u8005\u5f80\u4e0a\u8df3\uff0c\u800c FGgirl \u5199\u6210\u4e86\u6bd4\u8f83 $dep$\u3002\u5982\u679c\u60a8\u53ea\u5bf9\u4e86 $\\frac{1}{3}$ \u7684\u6d4b\u8bd5\u70b9\uff0c\u90a3\u5927\u6982\u5c31\u662f\u8fd9\u4e2a\u9519\u8bef\u3002\n\n\u53e6\u5916\u5bf9\u4ee3\u7801\u7684\u8bf4\u660e\uff1a\u56e0\u4e3a FGgirl \u61d2\u5f97\u5199\u4e24\u4e2a BIT\uff0c\u6240\u4ee5\u5979\u4e00\u76f4\u53cd\u590d\u7528\u540c\u4e00\u4e2a BIT\uff0c\u6ce8\u610f\u6e05\u7a7a\u3002\n\n[**Code**](https://www.luogu.com.cn/paste/5d474new)",
        "postTime": 1650527480,
        "uid": 407564,
        "name": "Rushroom",
        "ccfLevel": 7,
        "title": "AT4809 [ABC133F] Colorful Tree"
    },
    {
        "content": "# [ABC133F  Colorful Tree](https://www.luogu.com.cn/problem/AT_abc133_f)\n## \u9898\u76ee\u63cf\u8ff0\n\u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u6811\u4e0a\u6bcf\u6761\u8fb9\u90fd\u6709\u4e00\u4e2a\u989c\u8272 $c_i$ \u548c\u4e00\u4e2a\u6743\u503c $d_i$\u3002  \n\u8981\u6c42\u652f\u6301 $m$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u67e5\u8be2\u82e5\u5c06\u6240\u6709\u989c\u8272\u4e3a $x$ \u7684\u6743\u503c\u6539\u4e3a $y$\uff0c\u8282\u70b9 $u$ \u5230 $v$ \u7b80\u5355\u8def\u5f84\u4e0a\u6240\u6709\u8fb9\u7684\u6743\u503c\u4e4b\u548c\u5c06\u53d8\u4e3a\u591a\u5c11\u3002\u6ce8\u610f\u8be2\u95ee\u5e76\u4e0d\u4f1a\u5bf9\u8fb9\u7684\u6743\u503c\u505a\u51fa\u771f\u5b9e\u4fee\u6539\u3002\n## \u9898\u76ee\u5206\u6790\n\u518d\u6765\u4e00\u53d1\u6811\u5256+\u4e3b\u5e2d\u6811\u9898\u89e3\u3002  \n\n\u8c8c\u4f3c\u5927\u5bb6\u90fd\u662f\u5148\u627e\u4e86 LCA \u634f\u2026\u2026  \n\u5176\u5b9e\u6309\u7167\u4f20\u7edf\u6811\u5256\u5f62\u5f0f\u8fb9\u8df3\u94fe\u8fb9\u7edf\u8ba1\u4e5f\u662f\u53ef\u884c\u7684\u3002\n\n\u5148\u6765\u5206\u6790\u4e00\u4e0b\u8be2\u95ee\u3002  \n\u8003\u8651\u80fd\u5426\u5728\u4e0d\u4f5c\u51fa\u4fee\u6539\u7684\u524d\u63d0\u4e0b\u5f97\u5230\u8be2\u95ee\u7684\u7b54\u6848\u3002  \n\u6ce8\u610f\u5230\u6bcf\u6b21\u53ea\u6709\u4e00\u79cd\u989c\u8272\u7684\u8fb9\u88ab\u4fee\u6539\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5206\u5f00\u7ef4\u62a4\u5404\u79cd\u989c\u8272\u7684\u8fb9\u3002  \n\u6bcf\u6b21\u64cd\u4f5c\u76f8\u5f53\u4e8e\u5c06\u8def\u5f84\u4e0a\u6240\u6709\u989c\u8272\u4e3a $x_i$ \u7684\u8fb9\u7684\u8d21\u732e\u53bb\u6389\uff0c\u8bb0\u5f55\u8fd9\u4e9b\u8fb9\u7684\u603b\u6570 $cnt$\uff0c\u518d\u628a $cnt\\times y$ \u7d2f\u8ba1\u5230\u8d21\u732e\u4e2d\u3002\u5176\u4ed6\u989c\u8272\u8fb9\u7684\u8d21\u732e\u4e0d\u53d8\u3002\n\n\u56e0\u6b64\u6211\u5728\u6811\u5256\u8fc7\u7a0b\u4e2d\u8bb0\u5f55\u4e86\u4e09\u4e2a\u503c\uff1a\u539f\u6811\u4e0a $u$ \u5230 $v$ \u8def\u5f84\u4e0a\u6240\u6709\u8fb9\u6743\u4e4b\u548c $ans_1$\uff0c\u8def\u5f84\u4e0a\u989c\u8272\u4e3a $x$ \u7684\u8fb9\u6743\u4e4b\u548c $ans_2$ \u4ee5\u53ca\u4e0a\u8ff0 $cnt$\u3002  \n\u4e09\u8005\u53ef\u4ee5\u540c\u65f6\u7528\u4e00\u68f5\u4e3b\u5e2d\u6811\u7ef4\u62a4\u3002\u6309\u7167 dfn \u5e8f\u987a\u6b21\u63d2\u5165\u6bcf\u6761\u8fb9\u7684\u6743\u503c\uff0c\u5728\u6bcf\u79cd\u989c\u8272\u5bf9\u5e94\u7684\u4f4d\u7f6e\u4e0a\u7ef4\u62a4\u5176\u8fb9\u6743\u548c\u53ca\u8fb9\u7684\u6761\u6570\uff0c\u67e5\u8be2\u65f6\u4e3a\u57fa\u672c\u4e3b\u5e2d\u6811\u64cd\u4f5c\u3002  \n\u5355\u6b21\u67e5\u8be2\u7684\u7b54\u6848\u5373\u4e3a $ans_1-ans_2+cnt\\times y$\u3002\n\n\u7ec6\u8282\uff1a\u6ce8\u610f\u5230\u9700\u8981\u8fb9\u6743\u8f6c\u70b9\u6743\u5e76\u540c\u65f6\u786e\u5b9a dfn \u5e8f\u5bf9\u5e94\u7684\u8fb9\uff0c\u56e0\u6b64\u53ef\u4ee5\u53e6\u5f00\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u662f\u7531\u54ea\u4e00\u6761\u8fb9\u8fdb\u884c\u904d\u5386\u7684\uff0c\u4e3b\u5e2d\u6811\u4fee\u6539\u65f6\u4f1a\u66f4\u65b9\u4fbf\u5730\u786e\u5b9a\u8981\u63d2\u5165\u7684\u503c\u3002\n\n## Code\n```cpp\n#include <cstdio>\n#include <cctype>\n#define ls tree[u].lson\n#define rs tree[u].rson\n#define sm tree[u].sum\n#define ut tree[u].tot\n#define tls tree[rt].lson\n#define trs tree[rt].rson\n#define tsm tree[rt].sum\n#define tut tree[rt].tot\nusing namespace std;\n\ninline void qswap(int &u, int &v)\n{\n    int t = u; u = v;\n    v = t; return ;\n}\n\ninline int read()\n{\n    int x = 0; char c;\n    while(!isdigit(c = getchar()));\n    do{\n        x = (x << 1) + (x << 3) + (c ^ 48);\n    }while(isdigit(c = getchar()));\n    return x;\n}\n\nint p = 0, stk[20];\ninline void write(int x)\n{\n    do{\n        stk[++p] = x % 10;\n        x /= 10;\n    }while(x);\n    for(register int i = p; i; --i)\n        putchar(stk[i] | 48);\n    putchar('\\n'); p = 0;\n    return ;\n}\n\nint n, m, x, y, u, v, cnt = 1, tim = 0, tot = 0;\nint head[100010], root[100010], siz[100010];\nint depth[100010], father[100010], son[100010];\nint top[100010], dfn[100010], rev[100010], rec[100010];\nint from[100010], to[100010], col[100010], dist[100010];\nstruct edge\n{\n    int to;\n    int next;\n}e[200010];\nstruct node\n{\n    int lson;\n    int rson;\n    int sum;\n    int tot;\n}tree[2000010];\n\ninline void insert(int u, int v)\n{\n    e[++cnt].to = v;\n    e[cnt].next = head[u];\n    head[u] = cnt;\n    return ;\n}\n\ninline void modify(int rt, int &u, int l, int r, int pos, int val)\n{\n    u = ++tot; tree[u] = tree[rt];\n    sm += val; ++ut; if(l == r) return ;\n    int mid = l + r >> 1;\n    if(pos <= mid) modify(tls, ls, l, mid, pos, val);\n    else modify(trs, rs, mid + 1, r, pos, val);\n    return ;\n}\n\ninline node query(int rt, int u, int l, int r, int pos)\n{\n    if(l == r) return (node){0, 0, sm - tsm, ut - tut};\n    int mid = l + r >> 1;\n    if(pos <= mid) return query(tls, ls, l, mid, pos);\n    else return query(trs, rs, mid + 1, r, pos);\n}\n\ninline void dfs1(int u, int fa)\n{\n    siz[u] = 1;\n    for(register int i = head[u]; i; i = e[i].next)\n    {\n        int v = e[i].to;\n        if(v == fa) continue;\n        father[v] = u;\n        depth[v] = depth[u] + 1;\n        dfs1(v, u); siz[u] += siz[v];\n        if(siz[son[u]] < siz[v])\n        {\n            son[u] = v;\n            rec[v] = i >> 1;\n        }\n    }\n    return ;\n}\n\ninline void dfs2(int u, int tp)\n{\n    top[u] = tp;\n    if(son[u])\n    {\n        dfn[son[u]] = ++tim;\n        rev[tim] = rec[son[u]];\n        dfs2(son[u], tp);\n    }\n    for(register int i = head[u]; i; i = e[i].next)\n    {\n        int v = e[i].to;\n        if(v == father[u] || v == son[u]) continue;\n        dfn[v] = ++tim;\n        rev[tim] = i >> 1; dfs2(v, v);\n    }\n    return ;\n}\n\ninline int query(int u, int v, int col, int val)\n{\n    if(u == v) return 0;\n    int ans1 = 0, ans2 = 0, num = 0;\n    while(top[u] != top[v])\n    {\n        if(depth[top[u]] < depth[top[v]]) qswap(u, v);\n        x = dfn[top[u]] - 1; y = dfn[u];\n        ans1 += tree[root[y]].sum - tree[root[x]].sum;\n        node tmp = query(root[x], root[y], 1, n, col);\n        ans2 += tmp.sum; num += tmp.tot;\n        u = father[top[u]];\n    }\n    if(depth[u] > depth[v]) qswap(u, v);\n    x = dfn[son[u]] - 1; y = dfn[v];\n    ans1 += tree[root[y]].sum - tree[root[x]].sum;\n    node tmp = query(root[x], root[y], 1, n, col);\n    ans2 += tmp.sum; num += tmp.tot;\n    return ans1 - ans2 + num * val;\n}\n\nint main()\n{\n    n = read(); m = read();\n    for(register int i = 1; i < n; ++i)\n    {\n        from[i] = read(); to[i] = read();\n        col[i] = read(); dist[i] = read();\n        insert(from[i], to[i]);\n        insert(to[i], from[i]);\n    }\n    dfs1(1, 0); dfs2(1, 1);\n    for(register int i = 1; i <= tim; ++i)\n        modify(root[i - 1], root[i], 1, n, col[rev[i]], dist[rev[i]]);\n    for(register int i = 1; i <= m; ++i)\n    {\n        x = read(); y = read(); u = read(); v = read();\n        write(query(u, v, x, y));\n    }\n    return 0;\n}\n```",
        "postTime": 1668553268,
        "uid": 632868,
        "name": "Clover_BY",
        "ccfLevel": 0,
        "title": "ABC133F  Colorful Tree"
    },
    {
        "content": "> AT4809 Colorful Tree\n\n> \u9898\u610f\uff1a\u6709\u4e00\u68f5\u6811\uff0c\u8fb9\u4e0a\u6709\u8fb9\u6743\uff0c\u6bcf\u6761\u8fb9\u8fd8\u6709\u989c\u8272\u3002\u7136\u540e\u7ed9\u4f60 $q$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u4f60\u56db\u4e2a\u6570 $u,v,x,y$\uff0c\u95ee\u4f60\uff1a**\u5982\u679c**\u5c06 $u$ \u5230 $v$ \u8def\u5f84\u4e0a\u6240\u6709\u989c\u8272\u4e3a $x$ \u7684\u8fb9\u7684\u8fb9\u6743\u90fd\u53d8\u4e3a $y$\uff0c\u90a3\u4e48 $u$ \u5230 $v$ \u8def\u5f84\u4e0a\u8fb9\u6743\u7684\u548c\u3002\n\n> $1 \\leq n \\leq 10^5$\uff0c$1 \\leq q \\leq 10^5$\u3002\n\n\u4e00\u9053\u6811\u5256\u9898\n\n\u9996\u5148\uff0c\u6211\u4eec\u8981\u6c42\u7684\u7b54\u6848\u5c31\u662f $u$ \u5230 $v$ \u7684\u8def\u5f84\u4e0a\u989c\u8272 $\\neq x$ \u7684\u8fb9\u6743\u548c\uff0c\u52a0\u4e0a $u$ \u5230 $v$ \u7684\u8def\u5f84\u4e0a\u989c\u8272 $= x$ \u7684\u8fb9\u7684\u4e2a\u6570 $\\times y$\u3002\n\n\u6211\u4eec\u5c06\u8be2\u95ee\u79bb\u7ebf\u4e0b\u6765\u3002\u7136\u540e\u679a\u4e3e\u6bcf\u4e00\u79cd\u989c\u8272\u3002\u5f00\u4e24\u68f5\u7ebf\u6bb5\u6811\uff0c\u4e00\u68f5\u8868\u793a\u6743\u503c\u548c\uff0c\u4e00\u68f5\u8868\u793a\u4e2a\u6570\u3002\u6bcf\u6b21\u679a\u4e3e\u989c\u8272 $i$\uff0c\u7136\u540e\u5c06\u6240\u6709\u989c\u8272 $=i$ \u7684\u8fb9\u5728\u7b2c\u4e00\u68f5\u7ebf\u6bb5\u6811\u4e0a\u7684\u503c\u6539\u4e3a $0$\uff0c\u7b2c\u4e8c\u68f5\u7ebf\u6bb5\u6811\u4e0a\u7684\u503c\u6539\u4e3a $1$\u3002\u56de\u7b54\u6240\u6709 $x=i$ \u7684\u8be2\u95ee\u3002\u679a\u4e3e\u7ed3\u675f\u7684\u65f6\u5019\uff0c\u5c06\u6240\u6709\u989c\u8272 $=i$ \u7684\u8fb9\u5728\u7b2c\u4e00\u68f5\u7ebf\u6bb5\u6811\u4e0a\u7684\u503c\u6539\u4e3a\u5b83\u539f\u672c\u7684\u8fb9\u6743\uff0c\u7b2c\u4e8c\u68f5\u7ebf\u6bb5\u6811\u4e0a\u7684\u503c\u6539\u4e3a $0$\u3002\n\n\u8fd9\u6837\u5747\u644a\u4e0b\u6765\u5c31\u662f $\\mathcal O(n)$ \u6b21\u4fee\u6539\u64cd\u4f5c\u548c\u8be2\u95ee\u64cd\u4f5c\u3002\u52a0\u4e0a\u6811\u5256\u7684\u590d\u6742\u5ea6\uff0c\u5c31\u53ef\u4ee5\u8fc7\u4e86\u3002\n\n\u7136\u540e\u4f60\u5c31\u53ef\u4ee5\u5632\u8bbd\u51fa\u9898\u4eba\uff1a\u6709\u672c\u4e8b\u5f3a\u5236\u5728\u7ebf\u554a\u3002\n\n```cpp\n//Coded by tzc_wk\n/*\n\u6570\u636e\u4e0d\u6e05\u7a7a\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u591a\u6d4b\u4e0d\u8bfb\u5b8c\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u8fb9\u754c\u4e0d\u7279\u5224\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u8d2a\u5fc3\u4e0d\u8bc1\u660e\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\nD P \u987a\u5e8f\u9519\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u5927\u5c0f\u5c11\u7b49\u53f7\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u53d8\u91cf\u4e0d\u7edf\u4e00\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u8d8a\u754c\u4e0d\u5224\u65ad\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u8c03\u8bd5\u4e0d\u6ce8\u91ca\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u6ea2\u51fa\u4e0d l l\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n#define fi\t\t\tfirst\n#define se\t\t\tsecond\n#define fz(i,a,b)\tfor(int i=a;i<=b;i++)\n#define fd(i,a,b)\tfor(int i=a;i>=b;i--)\n#define foreach(it,v) for(__typeof(v.begin()) it=v.begin();it!=v.end();it++)\n#define all(a)\t\ta.begin(),a.end()\n#define giveup(...) return printf(__VA_ARGS__),0;\n#define fill0(a)\tmemset(a,0,sizeof(a))\n#define fill1(a)\tmemset(a,-1,sizeof(a))\n#define fillbig(a)\tmemset(a,0x3f,sizeof(a))\n#define fillsmall(a) memset(a,0xcf,sizeof(a))\n#define mask(a)\t\t(1ll<<(a))\n#define maskx(a,x)\t((a)<<(x))\n#define _bit(a,x)\t(((a)>>(x))&1)\n#define _sz(a)\t\t((int)(a).size())\n#define filei(a)\tfreopen(a,\"r\",stdin);\n#define fileo(a)\tfreopen(a,\"w\",stdout);\n#define fileio(a) \tfreopen(a\".in\",\"r\",stdin);freopen(a\".out\",\"w\",stdout)\n#define eprintf(...) fprintf(stderr,__VA_ARGS__)\n#define put(x)\t\tputchar(x)\n#define eoln        put('\\n')\n#define space\t\tput(' ')\n#define y1\t\t\ty_chenxiaoyan_1\n#define y0\t\t\ty_chenxiaoyan_0\ntypedef pair<int,int> pii;\ninline int read(){\n\tint x=0,neg=1;char c=getchar();\n\twhile(!isdigit(c)){\n\t\tif(c=='-')\tneg=-1;\n\t\tc=getchar();\n\t}\n\twhile(isdigit(c))\tx=x*10+c-'0',c=getchar();\n\treturn x*neg;\n}\ninline void print(int x){\n\tif(x<0){\n\t\tputchar('-');\n\t\tprint(abs(x));\n\t\treturn;\n\t}\n\tif(x<=9)\tputchar(x+'0');\n\telse{\n\t\tprint(x/10);\n\t\tputchar(x%10+'0');\n\t}\n}\ninline int qpow(int x,int e,int _MOD){\n\tint ans=1;\n\twhile(e){\n\t\tif(e&1)\tans=ans*x%_MOD;\n\t\tx=x*x%_MOD;\n\t\te>>=1;\n\t}\n\treturn ans;\n}\nint n=read(),m=read();\nstruct edge{\n\tint u,v,c,d,id;\n} e[100005];\nstruct query{\n\tint u,v,x,y;\n} q[100005];\nvector<edge> g[100005];\nvector<int> es[100005];\nvector<int> qs[100005];\nint fa[100005],sz[100005],dfn[100005],dep[100005],wson[100005],id[100005],idx=0;\nint eid[100005],w[100005],top[100005];\ninline void dfs1(int x,int prev){\n\tfa[x]=prev;sz[x]=1;\n\tfor(int i=0;i<g[x].size();i++){\n\t\tedge E=g[x][i];\n\t\tint y=E.v;\n\t\tif(y==prev)\tcontinue;\n\t\teid[E.id]=y;w[y]=E.d;\n\t\tdep[y]=dep[x]+1;\n\t\tdfs1(y,x);\n\t\tsz[x]+=sz[y];\n\t\tif(sz[y]>sz[wson[x]])\twson[x]=y;\n\t}\n}\ninline void dfs2(int x,int tp){\n\ttop[x]=tp;\n\tdfn[x]=++idx;\n\tid[idx]=x;\n\tif(wson[x])\tdfs2(wson[x],tp);\n\tfor(int i=0;i<g[x].size();i++){\n\t\tedge e=g[x][i];\n\t\tint y=e.v;\n\t\tif(y==fa[x]||y==wson[x])\tcontinue;\n\t\tdfs2(y,y);\n\t}\n}\nstruct SegTree{\n\tstruct node{\n\t\tint k,l,r,val1,val2;\n\t} s[100005<<2];\n\tinline void build(int k,int l,int r){\n\t\ts[k].l=l;s[k].r=r;\n\t\tif(l==r){\n\t\t\ts[k].val1=w[id[l]];\n//\t\t\tcout<<\"setup \"<<l<<\" \"<<w[id[l]]<<endl;\n\t\t\ts[k].val2=0;\n\t\t\treturn;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tbuild(k<<1,l,mid);\n\t\tbuild(k<<1|1,mid+1,r);\n\t\ts[k].val1=s[k<<1].val1+s[k<<1|1].val1;\n\t}\n\tinline void modify_1(int k,int ind,int x){\n\t\tif(s[k].l==s[k].r){\n//\t\t\tcout<<\"modify_1 \"<<s[k].l<<\" \"<<x<<endl;\n\t\t\ts[k].val1=x;\n\t\t\treturn;\n\t\t}\n\t\tint mid=(s[k].l+s[k].r)>>1;\n\t\tif(ind<=mid)\tmodify_1(k<<1,ind,x);\n\t\telse\t\t\tmodify_1(k<<1|1,ind,x);\n\t\ts[k].val1=s[k<<1].val1+s[k<<1|1].val1;\n\t}\n\tinline void modify_2(int k,int ind,int x){\n\t\tif(s[k].l==s[k].r){\n//\t\t\tcout<<\"modify_2 \"<<s[k].l<<\" \"<<x<<endl;\n\t\t\ts[k].val2=x;\n\t\t\treturn;\n\t\t}\n\t\tint mid=(s[k].l+s[k].r)>>1;\n\t\tif(ind<=mid)\tmodify_2(k<<1,ind,x);\n\t\telse\t\t\tmodify_2(k<<1|1,ind,x);\n\t\ts[k].val2=s[k<<1].val2+s[k<<1|1].val2;\n\t}\n\tinline int query_1(int k,int l,int r){\n\t\tif(l>r)\treturn 0;\n\t\tif(l<=s[k].l&&s[k].r<=r){\n\t\t\treturn s[k].val1;\n\t\t}\n\t\tint mid=(s[k].l+s[k].r)>>1;\n\t\tif(r<=mid)\t\treturn query_1(k<<1,l,r);\n\t\telse if(l>mid)\treturn query_1(k<<1|1,l,r);\n\t\telse\t\t\treturn query_1(k<<1,l,mid)+query_1(k<<1|1,mid+1,r);\n\t}\n\tinline int query_2(int k,int l,int r){\n\t\tif(l>r)\treturn 0;\n\t\tif(l<=s[k].l&&s[k].r<=r){\n\t\t\treturn s[k].val2;\n\t\t}\n\t\tint mid=(s[k].l+s[k].r)>>1;\n\t\tif(r<=mid)\t\treturn query_2(k<<1,l,r);\n\t\telse if(l>mid)\treturn query_2(k<<1|1,l,r);\n\t\telse\t\t\treturn query_2(k<<1,l,mid)+query_2(k<<1|1,mid+1,r);\n\t}\n} st;\ninline int query(int u,int v,int x){\n//\tcout<<u<<\" \"<<v<<\" \"<<x<<endl;\n\tif(dep[u]<dep[v])\tswap(u,v);\n\tint ans=0;\n\twhile(top[u]!=top[v]){\n\t\tif(dep[top[u]]<dep[top[v]])\tswap(u,v);\n//\t\tcout<<\"query \"<<dfn[top[u]]<<\" \"<<dfn[u]<<endl;\n\t\tans+=st.query_1(1,dfn[top[u]],dfn[u]);\n\t\tans+=x*st.query_2(1,dfn[top[u]],dfn[u]);\n\t\tu=fa[top[u]];\n\t}\n\tif(dep[u]<dep[v])\tswap(u,v);\n\tif(u!=v){\n//\t\tcout<<\"query \"<<dfn[v]+1<<\" \"<<dfn[u]<<endl;\n\t\tans+=st.query_1(1,dfn[v]+1,dfn[u]);\n\t\tans+=x*st.query_2(1,dfn[v]+1,dfn[u]);\n\t}\n\treturn ans;\n}\nint q_ans[100005];\nsigned main(){\n\tfz(i,1,n-1){\n\t\te[i].u=read();e[i].v=read();e[i].c=read();e[i].d=read();\n\t\te[i].id=i;\n\t\tg[e[i].u].push_back({e[i].u,e[i].v,e[i].c,e[i].d,i});\n\t\tg[e[i].v].push_back({e[i].v,e[i].u,e[i].c,e[i].d,i});\n\t\tes[e[i].c].push_back(i);\n\t}\n\tfz(i,1,m){\n\t\tq[i].x=read();q[i].y=read();q[i].u=read();q[i].v=read();\n\t\tqs[q[i].x].push_back(i);\n\t}\n\tdfs1(1,0);dfs2(1,1);\n//\tfz(i,1,n)\tcout<<w[id[i]]<<endl;\n\tst.build(1,1,n);\n\tfz(i,1,n-1){\n\t\tforeach(it,es[i]){\n\t\t\tint j=eid[*it];\n//\t\t\tcout<<i<<\" \"<<j<<endl;\n\t\t\tst.modify_1(1,dfn[j],0);\n\t\t\tst.modify_2(1,dfn[j],1);\n\t\t}\n//\t\tcout<<i<<endl;\n\t\tforeach(it,qs[i]){\n\t\t\tint j=*it;\n\t\t\tq_ans[j]=query(q[j].u,q[j].v,q[j].y);\n\t\t}\n\t\tforeach(it,es[i]){\n\t\t\tint j=eid[*it];\n\t\t\tst.modify_1(1,dfn[j],e[*it].d);\n\t\t\tst.modify_2(1,dfn[j],0);\n\t\t}\n\t}\n\tfz(i,1,m)\tcout<<q_ans[i]<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1584688783,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 AT4809 \u3010[ABC133F] Colorful Tree\u3011"
    }
]