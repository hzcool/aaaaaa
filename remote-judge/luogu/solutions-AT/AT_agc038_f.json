[
    {
        "content": "\u628a $P$ \u5206\u89e3\u6210\u4e0d\u76f8\u4ea4\u5faa\u73af\u7684\u4e58\u79ef\u540e\uff0c\u8003\u8651\u5176\u4e2d\u4e00\u4e2a\u5faa\u73af $(a_1, a_2, \\ldots , a_k)$\u3002\n\n\u4e0d\u5931\u4e00\u822c\u6027\uff0c\u53ef\u4ee5\u628a\u8fd9\u4e2a\u5faa\u73af\u770b\u4f5c $(1, 2, \\ldots , k)$\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e $A_1$\uff0c\u6709\u4e24\u79cd\u60c5\u51b5\uff1a$A_1 = 1$ \u6216 $A_1 = P_1 = 2$\u3002\n\n\u5982\u679c $A_1 = 1$\uff0c\u5219\u8003\u8651 $A_k$ \u6709\u4e24\u79cd\u60c5\u51b5\uff1a$A_k = k$ \u6216 $A_k = P_k = 1$\uff0c\u4f46\u662f\u56e0\u4e3a $A_1 = 1$\uff0c\u6240\u4ee5\u53ea\u80fd\u6709 $A_k = k$\u3002  \n\u4ee5\u6b64\u7c7b\u63a8\uff0c\u53ef\u4ee5\u5f97\u5230\uff1a\u5bf9\u4e8e\u8fd9\u4e2a\u5faa\u73af\u4e2d\u7684\u6240\u6709\u5143\u7d20 $i$\uff0c\u5747\u6709 $A_i = i$\u3002\n\n\u5982\u679c $A_1 = 2$\uff0c\u5219\u8003\u8651 $A_2$ \u6709\u4e24\u79cd\u60c5\u51b5\uff1a$A_2 = 2$ \u6216 $A_2 = P_2 = 3$\uff0c\u4f46\u662f\u56e0\u4e3a $A_1 = 2$\uff0c\u6240\u4ee5\u53ea\u80fd\u6709 $A_2 = 3$\u3002  \n\u4ee5\u6b64\u7c7b\u63a8\uff0c\u53ef\u4ee5\u5f97\u5230\uff1a\u5bf9\u4e8e\u8fd9\u4e2a\u5faa\u73af\u4e2d\u7684\u6240\u6709\u5143\u7d20 $i$\uff0c\u5747\u6709 $A_i = P_i$\u3002\n\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5faa\u73af\uff0c\u8981\u4e48\u8fd9\u4e2a\u5faa\u73af\u88ab\u5b8c\u5168\u4fdd\u7559\uff0c\u8981\u4e48\u8fd9\u4e2a\u5faa\u73af\u88ab\u5b8c\u5168\u62c6\u89e3\u6210\u4e00\u4e2a\u4e2a\u81ea\u73af\u3002\n\n\u4e0a\u8ff0\u7ed3\u8bba\u5bf9 $Q$ \u548c $B$ \u5f53\u7136\u4e5f\u9002\u7528\u3002\n\n\u6211\u4eec\u79f0**\u9009\u62e9**\u4e00\u4e2a\u5faa\u73af\uff0c\u6307\u8fd9\u4e2a\u5faa\u73af\u88ab\u5b8c\u5168\u4fdd\u7559\uff0c\u79f0**\u4e0d\u9009**\u4e00\u4e2a\u5faa\u73af\uff0c\u6307\u8fd9\u4e2a\u5faa\u73af\u88ab\u62c6\u89e3\u6210\u4e86\u4e00\u4e2a\u4e2a\u81ea\u73af\u3002\n\n\u63a5\u7740\uff0c\u8003\u8651\u4e00\u4e2a $P$ \u4e2d\u7684\u5faa\u73af $a$ \u548c\u4e00\u4e2a $Q$ \u4e2d\u7684\u5faa\u73af $b$\uff0c\u5047\u8bbe\u5b83\u4eec\u5171\u6709\u4e00\u4e2a\u5143\u7d20 $i$\u3002\u5206\u82e5\u5e72\u7c7b\u8ba8\u8bba\uff1a\n\n1. $P_i = Q_i = i$\uff1a\u65e0\u8bba\u5982\u4f55\uff0c\u8fd9\u4e2a\u4f4d\u7f6e\u4e0a\u5747\u6709 $A_i = B_i$\u3002\n2. $P_i = i, Q_i \\ne i$\uff1a\u5982\u679c**\u9009\u62e9**\u4e86 $b$\uff0c\u5219\u8fd9\u4e2a\u4f4d\u7f6e\u4e0a\u6709 $A_i \\ne B_i$\uff0c\u5426\u5219**\u4e0d\u9009** $b$\uff0c\u5219\u8fd9\u4e2a\u4f4d\u7f6e\u4e0a\u6709 $A_i = B_i$\u3002\n3. $P_i \\ne i, Q_i = i$\uff1a\u5982\u679c**\u9009\u62e9**\u4e86 $a$\uff0c\u5219\u8fd9\u4e2a\u4f4d\u7f6e\u4e0a\u6709 $A_i \\ne B_i$\uff0c\u5426\u5219**\u4e0d\u9009** $a$\uff0c\u5219\u8fd9\u4e2a\u4f4d\u7f6e\u4e0a\u6709 $A_i = B_i$\u3002\n4. $P_i \\ne i, Q_i \\ne i, P_i \\ne Q_i$\uff1a\u5982\u679c**\u4e0d\u9009** $a$ \u4e14**\u4e0d\u9009** $b$\uff0c\u5219\u8fd9\u4e2a\u4f4d\u7f6e\u4e0a\u6709 $A_i = B_i$\uff0c\u5426\u5219\u8fd9\u4e2a\u4f4d\u7f6e\u4e0a\u6709 $A_i \\ne B_i$\u3002\n5. $P_i \\ne i, Q_i \\ne i, P_i = Q_i$\uff1a\u5982\u679c $a, b$ \u540c\u65f6**\u9009\u62e9**\u6216\u540c\u65f6**\u4e0d\u9009**\uff0c\u5219\u8fd9\u4e2a\u4f4d\u7f6e\u4e0a\u6709 $A_i = B_i$\uff0c\u5426\u5219\u8fd9\u4e2a\u4f4d\u7f6e\u4e0a\u6709 $A_i \\ne B_i$\u3002\n\n\u6700\u7ec8\u9700\u8981\u6700\u5927\u5316 $A_i \\ne B_i$ \u7684\u4e0b\u6807 $i$ \u7684\u6570\u91cf\uff0c\u4e5f\u5c31\u662f\u6700\u5c0f\u5316 $A_i = B_i$ \u7684\u4e0b\u6807 $i$ \u7684\u6570\u91cf\u3002\n\n\u5982\u679c\u5728\u4e0a\u8ff0 $5$ \u79cd\u60c5\u51b5\u4e2d\uff0c\u4e00\u65e6\u53d1\u751f\u4e86 $A_i = B_i$\uff0c\u5c31\u8d4b\u6709 $1$ \u7684**\u4ee3\u4ef7**\uff0c\u90a3\u4e48\u5c31\u662f\u8981\u6700\u5c0f\u5316\u603b\u4ee3\u4ef7\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u7c7b\u4f3c\u4e8e\u4e00\u4e2a**\u6587\u7406\u5206\u79d1\u6a21\u578b**\uff0c\u53ef\u4ee5\u5efa\u7acb\u4e00\u4e2a\u7f51\u7edc\u6d41\u6a21\u578b\uff0c\u6c42\u6700\u5c0f\u5272\u5f97\u5230\u7b54\u6848\u3002\n\n\u4f46\u662f\u56e0\u4e3a\u6709\u4e9b\u6761\u4ef6\u4e0d\u7b26\u5408\uff0c\u6ca1\u6cd5\u76f4\u63a5\u5957\u7528\u3002\n\n\u4e0d\u8fc7\uff0c\u5982\u679c\u628a $Q$ \u4e2d\u7684\u5faa\u73af\u5272\u6389\u4e0e\u6e90\u70b9\u548c\u6c47\u70b9\u4e4b\u95f4\u7684\u8fb9\u7684\u610f\u4e49\u4ea4\u6362\uff0c\u5c31\u53ef\u4ee5\u5957\u7528\u4e86\u3002\n\n\u800c\u4e14\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u6837\u5efa\u51fa\u6765\u7684\u56fe\u662f\u4e00\u4e2a\u4e8c\u5206\u56fe\uff0c\u56e0\u4e3a $P$ \u4e2d\u7684\u5faa\u73af\u53ea\u548c\u6e90\u70b9\u8fde\u8fb9\uff0c$Q$ \u4e2d\u7684\u5faa\u73af\u53ea\u548c\u6c47\u70b9\u8fde\u8fb9\uff0c$P, Q$ \u4e4b\u95f4\u4e5f\u53ea\u4f1a\u4e92\u76f8\u8fde\u8fb9\u3002\uff08\u5982\u679c $P$ \u4e2d\u7684\u5faa\u73af\u5bf9\u5e94\u7684\u8282\u70b9\uff0c\u5272\u6389\u4e0e\u6e90\u70b9\u76f8\u8fde\u7684\u8fb9\u7684\u610f\u4e49\u662f**\u4e0d\u9009**\u5b83\uff0c\u800c $Q$ \u4e2d\u7684\u5faa\u73af\u5bf9\u5e94\u7684\u8282\u70b9\u7684\u610f\u4e49\u6070\u597d\u76f8\u53cd\u7684\u8bdd\uff09\n\n\u6240\u4ee5\u6700\u7ec8\u662f\u5728\u5355\u4f4d\u5bb9\u91cf\u7684\u4e8c\u5206\u56fe\u4e0a\u6c42\u6700\u5c0f\u5272\uff0c\u4f7f\u7528 Dinic \u7b97\u6cd5\u53ef\u4ee5\u505a\u5230 $\\mathcal O (|E| \\sqrt{|V|})$ \u7684\u590d\u6742\u5ea6\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O (N \\sqrt{N})$\uff0c[\u8bc4\u6d4b\u94fe\u63a5](https://atcoder.jp/contests/agc038/submissions/10342736)\u3002",
        "postTime": 1582627155,
        "uid": 10703,
        "name": "\u5c0f\u7c89\u5154",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 AT5203 \u3010[AGC038F] Two Permutations\u3011"
    },
    {
        "content": "\u6807\u7b7e: \u7f51\u7edc\u6d41.\n\n#### Part 1\n\n\u663e\u7136\u6392\u5217\u53ef\u4ee5\u62c6\u6210\u82e5\u5e72\u4e2a\u73af, \u6bcf\u4e2a\u73af\u53ef\u4ee5\u9009\u62e9\u65cb\u8f6c\u6216\u4e0d\u65cb\u8f6c. \u8bbe $p_i$ \u8868\u793a $i$ \u5728\u6392\u5217 $P$ \u4e2d\u7684\u73af\u7684\u7f16\u53f7, \u7c7b\u4f3c\u5b9a\u4e49 $q_i$.\n\n\u8003\u8651\u5206\u7c7b\u8ba8\u8bba $A_i=B_i$ \u7684\u6761\u4ef6:\n\n- $P_i=Q_i=i$ , \u65e0\u8bba\u5982\u4f55 $A_i=B_i$.\n- $P_i=i,Q_i\\neq i$, $A_i=B_i$ \u5f53\u4e14\u4ec5\u5f53 $q_i$ \u4e0d\u65cb\u8f6c.\n- $P_i\\neq i,Q_i=i$, $A_i=B_i$ \u5f53\u4e14\u4ec5\u5f53 $p_i$ \u4e0d\u65cb\u8f6c.\n- $P_i\\neq i, Q_i\\neq i$, $A_i=B_i$ \u5f53\u4e14\u4ec5\u5f53 $p_i,q_i$ \u90fd\u4e0d\u65cb\u8f6c.\n- $P_i=Q_i\\neq i$,  $A_i=B_i$ \u5f53\u4e14\u4ec5\u5f53 $p_i,q_i$ \u90fd\u4e0d\u65cb\u8f6c\u6216\u8005\u90fd\u65cb\u8f6c.\n\n#### Part 2\n\n\u89c2\u5bdf\u53d1\u73b0\u4e0a\u8ff0\u540c\u65f6\u5173\u8054 $p,q$ \u7684\u65cb\u8f6c\u7ea6\u675f\u8981\u4e48\u662f\u90fd\u65cb\u8f6c, \u8981\u4e48\u662f\u90fd\u4e0d\u65cb\u8f6c, \u4e5f\u5c31\u662f\u8bf4\u53ea\u6709\u65cb\u8f6c\u65b9\u5f0f\u76f8\u540c\u624d\u4f1a\u662f\u7b54\u6848\u51cf\u5c11.\n\n\u6240\u4ee5\u6211\u4eec\u7528\u6700\u5c0f\u5272\u89e3\u51b3\u95ee\u9898\u65f6\u8981\u5c06 $p,q$ \u7684\u4e0d\u7528\u65cb\u8f6c\u65b9\u5f0f\u770b\u6210\u540c\u4e00\u96c6\u5408.\n\n\u5177\u4f53\u7684, $p$ \u5206\u5165 $S$ \u96c6\u5408\u8868\u793a\u65cb\u8f6c, $q$ \u5206\u5165 $T$ \u96c6\u5408\u8868\u793a\u65cb\u8f6c.\n\n\u4e0a\u8ff0 $5$ \u4e2d\u60c5\u51b5\u5206\u522b\u5bf9\u5e94\u4e0b\u8ff0 $5$ \u4e2d\u8fde\u8fb9:\n\n- \u4e0d\u8fde.\n- $q_i\\to T$ , \u5272\u53bb\u8fd9\u6761\u8fb9\u8868\u793a $q_i$ \u4e0d\u65cb\u8f6c, \u7b54\u6848 $-1$.\n- $S\\to p_i$ , \u5272\u53bb\u8fd9\u6761\u8fb9\u8868\u793a $p_i$ \u4e0d\u65cb\u8f6c, \u7b54\u6848 $-1$.\n- $q_i\\to p_i$ , \u5272\u53bb\u8fd9\u6761\u8fb9\u8868\u793a $p_i,q_i$ \u90fd\u4e0d\u65cb\u8f6c, \u7b54\u6848 $-1$.\n- $q_i\\to p_i,p_i\\to q_i$ , \u5272\u53bb\u8fd9\u4e24\u6761\u8fb9\u5206\u522b\u8868\u793a $p_i,q_i$ \u90fd\u4e0d\u65cb\u8f6c\u548c $p_i,q_i$ \u90fd\u65cb\u8f6c, \u7b54\u6848 $-1$.\n\n\u6c42\u4e2a\u6700\u5c0f\u5272\u5373\u53ef.\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n\\sqrt n)$ .\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint read();\n\nint n, s, t;\nint p[200005], q[200005];\nint id[2][200005], idcnt;\n\nvoid work(int u, int* nx, int* id) {\n    if (id[u]) return;\n    id[u] = idcnt, work(nx[u], nx, id);\n}\n\nint hd[200005], nx[1000006], to[1000006], c[1000006], cnt;\nvoid add(int f, int t, int cap) {\n    nx[++cnt] = hd[f], hd[f] = cnt, to[cnt] = t, c[cnt] = cap;\n}\nvoid fadd(int f, int t, int c) { add(f, t, c), add(t, f, 0); }\nstruct Flow {\n    int dep[200005];\n    queue<int> q;\n    bool bfs() {\n        for (int i = 1; i <= t; ++i) dep[i] = 0;\n        dep[s] = 1, q.push(s);\n        while (!q.empty()) {\n            int u = q.front();\n            q.pop();\n            for (int i = hd[u], v; i; i = nx[i]) {\n                if (!c[i] || dep[v = to[i]]) continue;\n                dep[v] = dep[u] + 1, q.push(v);\n            }\n        }\n        return dep[t];\n    }\n\n    int iter[200005];\n    int dfs(int u, int dist) {\n        if (u == t) return dist;\n        for (int &i = iter[u], v, d; i; i = nx[i]) {\n            if (!c[i] || dep[v = to[i]] != dep[u] + 1) continue;\n            if (d = dfs(v, min(dist, c[i]))) return c[i] -= d, c[i ^ 1] += d, d;\n        }\n        return 0;\n    }\n    int Dinic() {\n        int rt = 0, d;\n        while (bfs()) {\n            for (int i = 1; i <= t; ++i) iter[i] = hd[i];\n            while (d = dfs(s, 10000000)) rt += d;\n        }\n        return rt;\n    }\n} flow;\n\nint main() {\n    n = read(), cnt = 1;\n    for (int i = 1; i <= n; ++i) p[i] = read() + 1;\n    for (int i = 1; i <= n; ++i) q[i] = read() + 1;\n    int res = n;\n    for (int i = 1; i <= n; ++i)\n        if (!id[0][i]) ++idcnt, work(i, p, id[0]);\n    for (int i = 1; i <= n; ++i)\n        if (!id[1][i]) ++idcnt, work(i, q, id[1]);\n\n    s = ++idcnt, t = ++idcnt;\n    for (int i = 1; i <= n; ++i)\n        if (p[i] == i && q[i] == i)\n            --res;\n        else if (p[i] == i)\n            fadd(id[1][i], t, 1);\n        else if (q[i] == i)\n            fadd(s, id[0][i], 1);\n        else if (p[i] != q[i])\n            fadd(id[1][i], id[0][i], 1);\n        else\n            fadd(id[1][i], id[0][i], 1), fadd(id[0][i], id[1][i], 1);\n    printf(\"%d\\n\", res - flow.Dinic());\n    return 0;\n}\nconst int _SIZE = 1 << 22;\nchar ibuf[_SIZE], *iS = ibuf, *iT = ibuf;\n#define gc                                                         \\\n    (iS == iT ? iT = ((iS = ibuf) + fread(ibuf, 1, _SIZE, stdin)), \\\n     (iS == iT ? EOF : *iS++) : *iS++)\nint read() {\n    int x = 0, f = 1;\n    char c = gc;\n    while (!isdigit(c)) f = (c == '-') ? -1 : f, c = gc;\n    while (isdigit(c)) x = x * 10 + c - '0', c = gc;\n    return x * f;\n}\n```",
        "postTime": 1582622545,
        "uid": 51237,
        "name": "Kinandra",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT5203 \u3010[AGC038F] Two Permutations\u3011"
    },
    {
        "content": "\u4f17\u6240\u5468\u77e5\uff0c\u4e00\u4e2a\u6392\u5217\u53ef\u4ee5\u62c6\u6210\u5f88\u591a\u4e2a\u73af\uff0c\u6211\u4eec\u8bbe $P_i$ \u5c5e\u4e8e\u7684\u73af\u4e3a $p_i$\uff0c$Q_i$ \u5c5e\u4e8e\u7684\u73af\u4e3a $q_i$\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u73af\uff0c\u53ea\u6709\u4e24\u79cd\u9009\u62e9\uff0c\u62c6\u6210\u82e5\u5e72\u81ea\u73af\u6216\u4fdd\u7559\u539f\u72b6\u3002\n\n\u6211\u4eec\u53d1\u73b0\u60c5\u51b5\u5206\u4e3a $5$ \u79cd\uff1a\n\n- $P_i=Q_i=i$\uff0c\u6b64\u65f6\u5fc5\u7136 $A_i=B_i$\u3002\n- $P_i=i,Q_i\\ne i$\uff0c\u5f53\u4e14\u4ec5\u5f53 $q_i$ \u88ab\u62c6\u5206\u65f6 $A_i=B_i$\u3002\n- $P_i\\ne i,Q_i=i$\uff0c\u5f53\u4e14\u4ec5\u5f53 $p_i$ \u88ab\u62c6\u5206\u65f6 $A_i=B_i$\u3002\n- $P_i\\ne Q_i,P_i\\ne i,Q_i\\ne i$\uff0c\u5f53\u4e14\u4ec5\u5f53 $p_i$ \u548c $q_i$ \u90fd\u88ab\u62c6\u5206\u65f6 $A_i=B_i$\u3002\n- $P_i=Q_i\\ne i$\uff0c\u5f53\u4e14\u4ec5\u5f53 $p_i$ \u548c $q_i$ \u90fd\u88ab\u62c6\u5206\u6216\u90fd\u4e0d\u88ab\u62c6\u5206\u65f6 $A_i=B_i$\u3002\n\n\u6211\u4eec\u8bbe $p_i$ \u88ab\u62c6\u5206\u65f6\u5728 $S$ \u96c6\u5408\u4e2d\uff0c$q_i$ \u88ab\u62c6\u5206\u65f6\u5728 $T$ \u96c6\u5408\u4e2d\uff0c\u5efa\u51fa\u6700\u5c0f\u5272\u6a21\u578b\u3002\n\n- $P_i=Q_i=i$\uff0c\u5fc5\u5b9a\u8017\u8d39 $1$ \u4ee3\u4ef7\u3002\n- $P_i=i,Q_i\\ne i$\uff0c$q_i$ \u5728 $T$ \u96c6\u5408\u4e2d\u8017\u8d39 $1$ \u4ee3\u4ef7\uff0c$S$ \u5411 $q_i$ \u8fde\u8fb9\u6743\u4e3a $1$ \u7684\u8fb9\u3002\n- $P_i\\ne i,Q_i=i$\uff0c$p_i$ \u5728 $S$ \u96c6\u5408\u4e2d\u8017\u8d39 $1$ \u4ee3\u4ef7\uff0c$p_i$ \u5411 $T$ \u8fde\u8fb9\u6743\u4e3a $1$ \u7684\u8fb9\u3002\n- $P_i\\ne Q_i,P_i\\ne i,Q_i\\ne i$\uff0c$p_i$ \u5728 $S$ \u4e14 $q_i$ \u5728 $T$ \u8017\u8d39 $1$ \u4ee3\u4ef7\uff0c$p_i$ \u5411 $q_i$ \u8fde\u8fb9\u6743\u4e3a $1$ \u7684\u8fb9\u3002\n- $P_i=Q_i\\ne i$\uff0c$p_i$ \u548c $q_i$ \u5728\u4e0d\u540c\u96c6\u5408\u8017\u8d39 $1$ \u4ee3\u4ef7\uff0c$p_i$ \u548c $q_i$ \u4e92\u8fde\u8fb9\u6743\u4e3a $1$ \u7684\u8fb9\u3002\n\n\u7136\u540e\u8dd1\u6700\u5c0f\u5272\u5373\u53ef\u3002\n\n\u8fd9\u91cc\u7b80\u5355\u63cf\u8ff0\u4e00\u4e0b\u6700\u540e\u4e24\u79cd\u8fb9\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u8fde\uff0c\u4ee5\u7b2c\u56db\u79cd\u60c5\u51b5\u4e3a\u4f8b\uff0c\u82e5 $S$ \u80fd\u5230 $p_i$\uff0c$q_i$ \u80fd\u5230 $T$\uff0c\u4e3a\u4e86\u5272\u5f00\u96c6\u5408\uff0c\u5c31\u5fc5\u987b\u65ad\u8fd9\u6761\u8fb9\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ea\u6709\u65ad\u6389\u8fd9\u6761\u8fb9\u624d\u6709\u53ef\u80fd $p_i$ \u5728 $S$ \u96c6\u5408\u4e2d\uff0c$q_i$ \u5728 $T$ \u96c6\u5408\u4e2d\u3002\n\n\u56e0\u4e3a\u662f\u6700\u5c0f\u5272\uff0c\u6240\u4ee5\u7b2c\u4e94\u79cd\u60c5\u51b5\u7684\u8fb9\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\u6700\u591a\u53ea\u4f1a\u5272\u6389\u4e00\u4e2a\u65b9\u5411\uff0c\u6240\u4ee5\u4ee3\u4ef7\u662f $1$\uff0c\u6ca1\u6709\u95ee\u9898\u3002\n\n\u7136\u540e\u662f\u590d\u6742\u5ea6\uff0c\u7531\u4e8e\u662f\u4e8c\u5206\u56fe\u5355\u4f4d\u8fb9\u6743\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathrm O(n\\sqrt n)$\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nint ans,n,a[100010],b[100010],q[100010],p[100010],tp[100010],tq[100010],cnt,S,T;\nint head[100010],to[200010],nxt[200010],w[200010]; \nvoid add(int const &x,int const &y,int const &wy,int const &wx){\n\tstatic int cnt=1;\n\tto[++cnt]=y,w[cnt]=wy,nxt[cnt]=head[x],head[x]=cnt;\n\tto[++cnt]=x,w[cnt]=wx,nxt[cnt]=head[y],head[y]=cnt;\n}\nint d[100010],que[100010],*hd,*tl,cur[100010];\nbool bfs(){\n\tfor(int i=1;i<=cnt;i++)d[i]=cnt;\n\td[S]=0;\n\thd=tl=que;\n\t*tl++=S;\n\twhile(tl!=hd){\n\t\tint x=*hd++;\n\t\tfor(int i=head[x];i;i=nxt[i])\n\t\t\tif(w[i]&&d[to[i]]==cnt) d[*tl++=to[i]]=d[x]+1;\n\t}\n\treturn d[T]!=cnt;\n}\nint dfs(int const &x,int const &low){\n\tif(x==T) return low;\n\tint used=0;\n\tfor(int &i=cur[x];i;i=nxt[i])\n\t\tif(w[i]&&d[to[i]]-1==d[x]){\n\t\t\tint res=dfs(to[i],std::min(w[i],low-used));\n\t\t\tif(res) w[i]-=res,w[i^1]+=res,used+=res;\n\t\t\tif(used==low) return used;\n\t\t}\n\treturn used;\n}\nint dinic(){\n\tint ans=0;\n\twhile(bfs()){\n\t\tfor(int i=1;i<=cnt;i++)cur[i]=head[i];\n\t\tans+=dfs(S,0x3f3f3f3f);\n\t}\n\treturn ans;\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tans=n;\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",a+i),++a[i];\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",b+i),++b[i];\n\tfor(int i=1;i<=n;i++){\n\t\tif(!p[i]){\n\t\t\tp[i]=i;\n\t\t\tfor(int x=a[i];x!=i;x=a[x])p[x]=i;\n\t\t\tif(a[i]!=i) tp[i]=++cnt;\n\t\t}\n\t\tif(!q[i]){\n\t\t\tq[i]=i;\n\t\t\tfor(int x=b[i];x!=i;x=b[x])q[x]=i;\n\t\t\tif(b[i]!=i) tq[i]=++cnt;\n\t\t}\n\t}\n\tS=++cnt,T=++cnt;\n\tfor(int i=1;i<=n;i++){\n\t\tif(a[i]==i&&b[i]==i)--ans;\n\t\telse if(a[i]!=i&&b[i]!=i){\n\t\t\tif(a[i]==b[i]) add(tp[p[i]],tq[q[i]],1,1);\n\t\t\telse add(tp[p[i]],tq[q[i]],1,0);\n\t\t}else{\n\t\t\tif(a[i]==i) add(S,tq[q[i]],1,0);\n\t\t\telse add(tp[p[i]],T,1,0);\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans-dinic());\n\treturn 0;\n}\n```\n\n",
        "postTime": 1613956842,
        "uid": 55707,
        "name": "gxy001",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 AT5203 [AGC038F] Two Permutations"
    },
    {
        "content": "### \u4e3a\u4ec0\u4e48\u5199\u8fd9\u7bc7\u9898\u89e3\n\n\u7531\u4e8e\u6211\u5e76\u4e0d\u7406\u89e3\u7f51\u4e0a\u5927\u591a\u6570\u9898\u89e3\u91c7\u7528\u7684\u5efa\u6a21\u65b9\u5f0f\u4e2d\uff0c\u5bf9\u4e8e $p_i, q_i$ \u90fd\u53d8\u548c\u90fd\u4e0d\u53d8\u7684\u5efa\u8fb9\u65b9\u5f0f\u3002\u800c\u7f51\u4e0a\u7684\u9898\u89e3\u4e2d\u90fd\u51e0\u4e4e\u6ca1\u6709\u5bf9\u4e8e\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u89e3\u91ca\u5206\u6790\uff0c\u6709\u7684\u9898\u89e3\u751a\u81f3\u76f4\u63a5\u7528\u300c\u6839\u636e\u4e8c\u5143\u5173\u7cfb\u5efa\u8fb9\u300d\u7b49\u4e00\u7b14\u5e26\u8fc7\u3002\n\n\u56e0\u6b64\uff0c\u672c\u6587\u5c06\u9610\u8ff0\u4e00\u79cd\u6709\u522b\u4e8e\u5176\u4ed6\u9898\u89e3\uff0c\u4e14\u6b63\u786e\u6027\u66f4\u52a0\u663e\u7136\u7684\u5efa\u6a21\u65b9\u5f0f\u3002\n\n### \u5b9a\u4e49\n\n\u5728\u4e0b\u6587\u4e2d\uff0c\u4e3a\u4e86\u4f7f\u53d9\u8ff0\u66f4\u6e05\u6670\uff0c\u6211\u4eec\u5bf9\u672c\u6587\u4e2d\u7684\u4e00\u4e9b\u7279\u6b8a\u7528\u8bed\u505a\u5982\u4e0b\u5b9a\u4e49\u3002\n\n\u300c\u73af\u300d\uff1a\u5bf9\u4e8e $p$ \u5e8f\u5217\uff0c\u6211\u4eec\u79f0\u300c\u73af\u300d\u4e3a\u8fde\u5b8c\u6240\u6709\u5f62\u5982 $i \\rightarrow p_i$ \u8fd9\u6837\u7684\u8fb9\u540e\uff0c\u4ea7\u751f\u7684\u5927\u5c0f\u5927\u4e8e 1 \u7684\u73af\uff0c\u5373\u672c\u6587\u4e2d\u63d0\u5230\u7684\u300c\u73af\u300d\u5747\u53ea\u4e0d\u5305\u62ec\u81ea\u73af\u7684\u73af\u3002\u5bf9\u4e8e $q$ \u5e8f\u5217\uff0c\u6211\u4eec\u4e5f\u6709\u7c7b\u4f3c\u7684\u5b9a\u4e49\uff0c\u76f8\u4fe1\u5404\u4f4d\u90fd\u80fd\u7406\u89e3\uff0c\u56e0\u6b64\u4e0d\u5728\u6b64\u8d58\u8ff0\u3002\n\n\u300c\u6563\u70b9\u300d\uff1a\u5bf9\u4e8e\u5f62\u5982 $i = p_i$ \u8fd9\u6837\u7684\u70b9\u3002\u5bf9\u4e8e $q$ \u5e8f\u5217\uff0c\u6211\u4eec\u4e5f\u6709\u7c7b\u4f3c\u7684\u5b9a\u4e49\u3002\n\n\u300c\u7fa4\u5c9b\u300d\uff1a\u6ce8\u610f\u5230\u5bf9\u4e8e\u73af\u4e0a\u7684\u6bcf\u4e2a\u70b9\uff0c\u6211\u4eec\u8981\u4e48\u540c\u65f6\u90fd\u8ba9\u5b83\u7b49\u4e8e $p_i$\uff0c\u8981\u4e48\u540c\u65f6\u90fd\u8ba9\u5b83\u7b49\u4e8e $i$\uff0c\u4e8e\u662f\u5982\u679c\u8ba9\u5b83\u7b49\u4e8e $p_i$\uff0c\u8fd9\u79cd\u53d8\u5316\u662f\u73af\u72b6\u7684\u3002\u5982\u679c\u8ba9\u5b83\u7b49\u4e8e $i$ \u6bcf\u4e2a\u70b9\uff0c\u5219\u6ca1\u6709\u8f6e\u6362\uff0c\u5373\u6ca1\u6709\u8fb9\u3002\u8fd9\u4f7f\u8fd9\u4e2a\u73af\u770b\u8d77\u6765\u50cf\u4e00\u5806\u70b9\uff0c\u4e8e\u662f\u6211\u4eec\u5f62\u8c61\u5730\u79f0\u5b83\u4e3a\u300c\u7fa4\u5c9b\u300d\u3002\u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u4e0d\u5c06\u300c\u7fa4\u5c9b\u300d\u4e0a\u7684\u5355\u4e2a\u70b9\u79f0\u4e3a\u300c\u6563\u70b9\u300d\u3002\n\n### \u5efa\u6a21\u65b9\u5f0f\n\n\u6211\u4eec\u601d\u8003\u4e00\u4e0b\u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f1a\u4ea7\u751f\u76f8\u7b49\u7684\u4f4d\u3002\n\n1. \u628a\u4e00\u4e2a\u5e8f\u5217\u4e2d\u7684\u73af\u62c6\u6210\u7fa4\u5c9b\u540e\uff0c\u548c\u53e6\u4e00\u4e2a\u5e8f\u5217\u7684\u6563\u70b9\u4e4b\u95f4\u4ea7\u751f\u8d21\u732e\u3002\n\n2. \u4e24\u4e2a\u73af\u3002\n\n3. \u4e24\u4e2a\u7fa4\u5c9b\u3002\n\n\u6211\u4eec\u8003\u8651\u5c06\u539f\u95ee\u9898\u8f6c\u5316\u4e3a\u7f51\u7edc\u6d41\u4e2d\u7684\u6700\u5c0f\u5272\u95ee\u9898\uff0c\u5982\u679c\u6211\u4eec\u5272\u6389\u4e00\u6761\u8fb9\uff0c\u5219\u4f1a\u4ea7\u751f\u4ee3\u4ef7\u5927\u5c0f\u4e2a\u4f4d\u7f6e\u76f8\u7b49\uff0c\u800c\u6211\u4eec\u5e0c\u671b\u8fd9\u4e2a\u4ee3\u4ef7\u548c\u6700\u5c0f\u3002\n\n\u4e8e\u662f\u6211\u4eec\u6709\u5982\u4e0b\u5efa\u56fe\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/efl27t8l.png)\n\n\u5176\u4e2d **\u5bf9\u4e8e $S \\rightarrow P, Q$ \u548c $P, Q \\rightarrow T$ \u8fd9\u4e9b\u8fb9**\uff08\u4e0d\u5305\u62ec $P \\rightarrow Q$ \u548c $Q \\rightarrow P$ \u8fd9\u4e9b\u8fb9\uff09\uff0c\u6211\u4eec\u53d1\u73b0\u53ea\u53ef\u80fd\u6709\u56db\u79cd\u5272\u8fb9\u65b9\u5f0f\uff1a\n\n1. \u5272 $S \\rightarrow P$ \u548c $Q \\rightarrow T$\u3002\n\n2. \u5272 $S \\rightarrow Q$ \u548c $P \\rightarrow T$\u3002\n\n3. \u5272 $P \\rightarrow T$ \u548c $Q \\rightarrow T$\u3002\n\n4. \u5272 $S \\rightarrow P$ \u548c $S \\rightarrow Q$\u3002\n\n\u4e3a\u4ec0\u4e48\u4e0d\u662f\u5176\u4ed6\u7684\u8fb9\uff1f\u7531\u4e8e\u8fd9\u4e9b\u8fb9\u7684\u8fb9\u6743\u5f88\u5927\uff0c\u4e8e\u662f\u6211\u4eec\u4e0d\u80fd\u591a\u5272\u8fd9\u4e9b\u8fb9\u4e2d\u7684\u54ea\u6015\u4e00\u6761\u8fb9\uff0c\u800c\u53ea\u5272\u4e00\u6761\u8fb9\u548c\u5272\u5176\u4ed6\u7684\u4e24\u6761\u8fb9\u90fd\u65ad\u4e0d\u4e86\uff0c\u4e8e\u662f\u5bf9\u4e8e $S \\rightarrow P, Q$ \u548c $P, Q \\rightarrow T$ \u8fd9\u4e9b\u8fb9\uff0c\u6211\u4eec\u53ea\u6709\u8fd9\u56db\u79cd\u65ad\u8fb9\u65b9\u5f0f\u3002\n\n\u5176\u4e2d\u7b2c\u4e00\u79cd\u60c5\u51b5\u662f\u540c\u65f6\u6210\u5c9b\uff0c\u65ad\u6389\u8fd9\u4e24\u6761\u8fb9\u540e\u8fd8\u5b58\u5728\u7740\u4e00\u6761 $S \\rightarrow Q \\rightarrow P \\rightarrow T$ \u7684\u901a\u8def\uff0c\u4e8e\u662f\u6211\u4eec\u5c06\u8fd9\u79cd\u60c5\u51b5\u7684\u8d21\u732e\u653e\u5728 $Q \\rightarrow P$ \u7684\u8fd9\u6761\u8fb9\u4e0a\u3002\n\n\u7b2c\u4e8c\u79cd\u60c5\u51b5\u662f\u540c\u65f6\u6210\u73af\uff0c\u65ad\u6389\u8fd9\u4e24\u6761\u8fb9\u540e\u8fd8\u5b58\u5728\u7740\u4e00\u6761 $S \\rightarrow P \\rightarrow Q \\rightarrow T$ \u7684\u901a\u8def\uff0c\u4e8e\u662f\u6211\u4eec\u5c06\u8fd9\u79cd\u60c5\u51b5\u7684\u8d21\u732e\u653e\u5728 $P \\rightarrow Q$ \u7684\u8fd9\u6761\u8fb9\u4e0a\u3002\n\n\u7b2c\u4e09\u3001\u56db\u79cd\u60c5\u51b5\u5206\u522b\u8868\u793a $P$ \u6210\u73af\uff0c$Q$ \u6210\u5c9b\u548c $P$ \u6210\u5c9b\uff0c$Q$ \u6210\u73af\u3002\u5bf9\u4e8e\u8fd9\u4e24\u79cd\u60c5\u51b5\uff0c\u65ad\u6389\u540e\u56fe\u4e2d\u4e0d\u518d\u5b58\u5728\u901a\u8def\uff0c\u4e0d\u7528\u518d\u4ed8\u51fa\u989d\u5916\u7684\u4ee3\u4ef7\u3002\u8fd9\u662f\u56e0\u4e3a\u57fa\u4e8e\u6211\u4eec\u5bf9 5 \u79cd\u5e8f\u5217\u76f8\u7b49\u60c5\u51b5\u7684\u5206\u6790\uff0c\u6211\u4eec\u5f97\u51fa\u53ea\u6709\u5f53 $p_i$ \u6240\u5728\u7684\u7f6e\u6362\u73af\u548c $q_i$ \u6240\u5728\u7684\u7f6e\u6362\u73af\u7684\u6210\u5c9b\u6216\u6210\u73af\u60c5\u51b5\u76f8\u540c\u65f6\uff0c\u6211\u4eec\u624d\u6709\u53ef\u80fd\u4ea7\u751f\u989d\u5916\u7684\u8d21\u732e\u3002\n\n\u5bf9\u4e8e\u540c\u65f6\u6210\u5c9b\u548c\u540c\u65f6\u6210\u73af\u7684\u4ee3\u4ef7\uff0c\u8fd9\u662f\u5f88\u5bb9\u6613\u8ba1\u7b97\u7684\uff0c\u4e0d\u518d\u5728\u6b64\u8d58\u8ff0\u3002\n\n\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u5728\u5b9e\u73b0\u65f6\uff0c\u6211\u4eec\u5c06\u7528\u679a\u4e3e\u70b9\u7684\u65b9\u5f0f\u6765\u786e\u5b9a $P$ \u548c $Q$ \u4e4b\u95f4\u7684\u8fb9\u6743\u3002\u800c\u8fd9\u4e9b\u8fb9\u6743\u4e3a $c$ \u7684\u8fb9\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9\u76f4\u63a5\u5c06\u5176\u5efa\u6210 $c$ \u6761\u8fb9\u6743\u4e3a 1 \u7684\u8fb9\u3002\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5728\u53d1\u73b0\u4e00\u4e2a\u6392\u5217\u4e2d\u7684\u4e00\u4e2a\u70b9\u53ef\u4ee5\u7ed9\u5176\u6240\u5728\u7684\u73af\uff0c\u53ca\u5176\u53e6\u4e00\u4e2a\u6392\u5217\u4e2d\u5bf9\u5e94\u7684\u73af\u4e4b\u95f4\u6709\u8d21\u732e\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5728\u5b83\u4eec\u4e4b\u95f4\u5efa\u4e00\u6761\u8fb9\u6743\u4e3a 1 \u7684\u8fb9\u3002\u7531\u4e8e\u6bcf\u4e2a\u70b9\u6700\u591a\u4ea7\u751f\u4e00\u6761\u8fb9\uff0c\u56e0\u6b64\u8fb9\u6570\u662f $O(n)$ \u7ea7\u522b\u7684\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4e0a\u56fe\u4e2d\u7684\u70b9 $P$ \u548c\u70b9 $Q$ \u53ea\u6709\u4e00\u4e2a\uff0c\u662f\u4e3a\u4e86\u65b9\u4fbf\u8868\u793a\uff0c\u5728\u5b9e\u9645\u60c5\u51b5\u4e2d\uff0c$P$ \u70b9\u548c $Q$ \u70b9\u4e0d\u4e00\u5b9a\u53ea\u6709\u4e00\u4e2a\uff0c\u4e14\u5b83\u4eec\u4e4b\u95f4\u5e76\u4e0d\u662f\u4e24\u4e24\u90fd\u6709\u8fb9\uff0c\u6211\u4eec\u53ea\u5728\u6709\u8d21\u732e\u7684 $(P, Q)$ \u6216 $(Q, P)$ \u70b9\u5bf9\u4e4b\u95f4\u8fde\u8fb9\uff0c\u76f8\u4fe1\u5927\u5bb6\u5e94\u8be5\u90fd\u6ce8\u610f\u5230\u4e86\u3002\n\n\u5982\u679c\u4f60\u60f3\u4e86\u89e3\u66f4\u591a\u7684\u7ec6\u8282\uff0c\u53ef\u4ee5\u53c2\u8003\u4e0b\u65b9\u7684\u4ee3\u7801\u5b9e\u73b0\u3002\u6ce8\u610f\u5728 Dinic \u4e2d\uff0c\u4f60\u9700\u8981\u4f7f\u7528\u5f53\u524d\u5f27\u4f18\u5316\uff0c\u5426\u5219\u4f1a\u8d85\u51fa\u9898\u76ee\u6240\u89c4\u5b9a\u7684\u65f6\u95f4\u9650\u5236\u3002\n\n### \u4ee3\u7801\u5b9e\u73b0\n\n\u8dd1\u4e86 7.5s\uff0c\u7565\u6162\u3002\n\n```cpp\n#include <set>\n#include <cstdio>\n#include <cstring>\n#define inf 9999999999999999LL\n#define maxN 600010\nstruct edge{ long long x, y, c, g; } b[maxN << 1];\nlong long len = 1, S = 0, T = 600005;\nlong long dep[maxN], f[maxN];\nlong long Fa[maxN], cnt[maxN];\nlong long PtoId[maxN], QtoId[maxN];\nlong long cur[maxN], P[maxN], Q[maxN], h[maxN];\nlong long read ()\n{\n\tlong long x = 0;\n\tchar c = getchar();\n\twhile(c < '0' || c > '9') c = getchar();\n\twhile(c >= '0' && c <= '9')\n\t{\n\t\tx = x * 10 + (c - '0');\n\t\tc = getchar();\n\t}\n\treturn x;\n}\nlong long min (long long x, long long y) { return x < y ? x : y; }\nvoid ins (long long x, long long y, long long c)\n{\n\tlen++; b[len].x = x; b[len].y = y; b[len].c = c;\n\tb[len].g = h[x]; h[x] = len;\n\tlen++; b[len].x = y; b[len].y = x; b[len].c = 0;\n\tb[len].g = h[y]; h[y] = len;\n}\nbool bfs ()\n{\n\tlong long head = 1, tail = 2;\n\tf[1] = S; dep[S] = 1;\n\twhile(head != tail)\n\t{\n\t\tlong long x = f[head];\n\t\tfor(register long long i = h[x];i;i = b[i].g)\n\t\t{\n\t\t\tlong long y = b[i].y;\n\t\t\tif(b[i].c && !dep[y])\n\t\t\t{\n\t\t\t\tdep[y] = dep[x] + 1; f[tail] = y;\n\t\t\t\tif((++tail) >= maxN) tail = 1;\n\t\t\t\tif(y == T) return true;\n\t\t\t}\n\t\t}\n\t\tif((++head) >= maxN) head = 1;\n\t}\n\treturn false;\n}\nlong long dfs (long long x, long long flow)\n{\n\tif(x == T) return flow;\n\tlong long now = flow;\n\tfor(register long long i = cur[x];i;i = b[i].g)\n\t{\n\t\tcur[x] = i; long long y = b[i].y;\n\t\tif(b[i].c && dep[y] == dep[x] + 1)\n\t\t{\n\t\t\tlong long Ma = min(now, b[i].c);\n\t\t\tnow -= Ma;\n\t\t\tb[i].c -= Ma, b[i ^ 1].c += Ma;\n\t\t\tlong long rest = Ma - dfs(y, Ma);\n\t\t\tnow += rest;\n\t\t\tb[i].c += rest, b[i ^ 1].c -= rest;\n\t\t}\n\t}\n\treturn flow - now;\n}\nlong long find (long long x)\n{\n\tif(x == Fa[x]) return x;\n\telse return Fa[x] = find(Fa[x]);\n}\nint main ()\n{\n\tfreopen(\"per.in\", \"r\", stdin);\n\tfreopen(\"per.out\", \"w\", stdout);\n\tlong long n = read();\n\tfor(long long i = 1;i <= (n << 1); i++) Fa[i] = i;\n\tfor(long long i = 1;i <= n; i++)\n\t{\n\t\tP[i] = read() + 1;\n\t\tif(i != P[i])\n\t\t{\n\t\t\tPtoId[P[i]] = i;\n\t\t\tlong long tx = find(i), ty = find(P[i]);\n\t\t\tif(tx != ty) Fa[tx] = ty;\n\t\t}\n\t}\n\tfor(long long i = 1;i <= n; i++)\n\t{\n\t\tQ[i] = read() + 1;\n\t\tif(i != Q[i])\n\t\t{\n\t\t\tQtoId[Q[i]] = i;\n\t\t\tlong long tx = find(n + i), ty = find(n + Q[i]);\n\t\t\tif(tx != ty) Fa[tx] = ty;\n\t\t}\n\t}\n\tlong long Ans = 0;\n\tfor(long long i = 1;i <= n; i++)\n\t{\n\t\tif(P[i] == i && Q[i] == i) Ans++;\n\t\telse if(Q[i] == i) cnt[find(i)]++; // cheng dao de gong xian\n\t\telse if(P[i] == i) cnt[find(n + i)]++; // tong shang\n\t}\n\tlong long NodeCnt = 0;\n\tfor(long long i = 1;i <= n; i++)\n\t{\n\t\tif(find(i) == i && P[i] != i) NodeCnt++, ins(S, i, 200000 + cnt[i]), ins(i, T, 200000 + 0);\n\t}\n\tfor(long long i = n + 1;i <= (n << 1); i++)\n\t{\n\t\tif(find(i) == i && Q[i - n] != i - n) NodeCnt++, ins(i, T, 200000 + cnt[i]), ins(S, i, 200000 + 0);\n\t}\n\tfor(long long i = 1;i <= n; i++)\n\t{\n\t\tif(P[i] == Q[i] && P[i] != i) ins(find(i), find(n + QtoId[P[i]]), 1);\n\t\t// P -> Q : tong shi cheng huan de gong xian\n\t}\n\tfor(long long i = 1;i <= n; i++)\n\t{\n\t\tif(P[i] != i && Q[i - n] != i - n) ins(find(n + i), find(i), 1);\n\t\t// Q -> P : tong shi cheng dao de gong xian\n\t}\n\twhile(bfs())\n\t{\n\t\tcur[S] = h[S], cur[T] = h[T]; for(long long i = 1;i <= (n << 1); i++) cur[i] = h[i];\n\t\tAns += dfs(S, inf);\n\t\tdep[S] = 0, dep[T] = 0; for(long long i = 1;i <= (n << 1); i++) dep[i] = 0;\n\t}\n\tprintf(\"%lld\", n - (Ans % 200000));\n\treturn 0;\n}\n```\n\n### \u611f\u8c22\n\n\u611f\u8c22\u795e\u4ed9 lty\uff0c\u6559\u4f1a\u4e86\u6211\u6b64\u9898\u7684\u8fd9\u79cd\u5efa\u6a21\u65b9\u6cd5\u3002\u4e3a\u6b64\u9898\u63d0\u4f9b\u4e86\u4e00\u79cd\u7c7b\u4f3c\u4f46\u4e0d\u5b8c\u5168\u4e00\u81f4\u7684\u65b0\u7684\u601d\u8def\u3002",
        "postTime": 1637277134,
        "uid": 314535,
        "name": "abcdeffa",
        "ccfLevel": 0,
        "title": "AGC038F \u7684\u4e00\u79cd\u6613\u61c2\u7684\u5efa\u6a21\u65b9\u5f0f"
    },
    {
        "content": "[\u6d1b\u8c37\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/AT5203) & [Atcoder \u9898\u9762\u4f20\u9001\u95e8](https://atcoder.jp/contests/arc038/tasks/agc038_f)\n\n~~\u597d\u4e45\u524d\u505a\u7684\u9898\u4e86\u2026\u2026\u4eca\u5929\u5076\u7136\u60f3\u8d77\u6765\u8981\u8865\u4e2a\u9898\u89e3~~\n\n\u9996\u5148\u8003\u8651\u6392\u5217 $A_i$ \u8981\u4e48\u7b49\u4e8e $i$\uff0c\u8981\u4e48\u7b49\u4e8e $P_i$ \u8fd9\u4e2a\u6761\u4ef6\u6709\u4ec0\u4e48\u7528\u3002\u6211\u4eec\u8003\u8651\u5c06\u6392\u5217 $P_i$ \u62c6\u6210\u4e00\u4e2a\u4e2a\u7f6e\u6362\u73af\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $i$\uff0c\u6839\u636e\u5176\u7f6e\u6362\u73af\u7684\u60c5\u51b5\u53ef\u4ee5\u5206\u51fa\u4ee5\u4e0b\u51e0\u7c7b\uff1a\n\n- \u5982\u679c $i$ \u6240\u5728\u7f6e\u6362\u73af\u5927\u5c0f\u4e3a $1$\uff0c\u5373 $P_i=i$\uff0c\u90a3\u4e48 $A_i$ \u522b\u65e0\u9009\u62e9\uff0c\u53ea\u80fd\u7b49\u4e8e $i$\n- \u5982\u679c $i$ \u6240\u5728\u7f6e\u6362\u73af\u5927\u5c0f\u4e0d\u4e3a $1$\uff0c\u90a3\u4e48 $A_i$ \u6709\u4e24\u79cd\u9009\u62e9\uff0c$A_i=i$ \u6216\u8005 $A_i=P_i$\n  - \u5982\u679c $A_i=i$\uff0c\u90a3\u4e48\u5047\u8bbe $j$ \u4e3a\u6ee1\u8db3 $P_j=i$ \u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\u7531\u4e8e\u6392\u5217\u4e2d\u5143\u7d20\u4e0d\u80fd\u91cd\u590d\uff0c\u56e0\u6b64 $A_j\\ne P_j=i$\uff0c\u5373 $A_j=j$\uff0c\u6211\u4eec\u518d\u627e\u51fa $P_k=j$ \u7684 $k$\uff0c\u4e5f\u5e94\u6709 $A_k=k$\uff0c\u8fd9\u6837\u5373\u53ef\u786e\u5b9a\u6574\u4e2a\u7f6e\u6362\u73af\u4e0a\u5143\u7d20\u7684\u60c5\u51b5\u3002\n  - \u5982\u679c $A_i=P_i$\uff0c\u7c7b\u4f3c\u5730\uff0c\u8bbe $j=P_i$\uff0c\u90a3\u4e48 $A_j\\ne j$\uff0c\u56e0\u4e3a\u6392\u5217\u4e2d\u5143\u7d20\u4e0d\u80fd\u91cd\u590d\uff0c\u6545 $A_j=P_j$\uff0c\u6211\u4eec\u518d\u627e\u51fa $k=P_j$ \u7684\u4f4d\u7f6e $k$\uff0c\u4e5f\u5e94\u6709 $A_k=P_k$\uff0c\u8fd9\u6837\u4e5f\u80fd\u591f\u786e\u5b9a\u6574\u4e2a\u7f6e\u6362\u73af\u7684 $A$\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u7f6e\u6362\u73af\u800c\u8a00\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u89c6\u4f5c\u4e00\u4e2a\u6574\u4f53\u770b\u5f85\u2014\u2014\u8fd9\u4e2a\u7f6e\u6362\u73af\u4e2d\u8981\u4e48\u6240\u6709\u5143\u7d20\u7684 $A_i$ \u90fd\u7b49\u4e8e\u5176\u672c\u8eab\uff0c\u8981\u4e48\u6240\u6709\u5143\u7d20\u7684 $A_i$ \u90fd\u7b49\u4e8e $P_i$\uff0c\u4e3a\u4e86\u4f7f\u8868\u8ff0\u66f4\u52a0\u5177\u4f53\u5f62\u8c61\uff0c\u6211\u4eec\u628a\u524d\u4e00\u79cd\u60c5\u51b5\u79f0\u4f5c\u201c\u8f6c\u201d~~\uff08orz wlzhouzhuan\uff09~~\uff0c\u540e\u4e00\u79cd\u60c5\u51b5\u79f0\u4f5c\u201c\u4e0d\u8f6c\u201d\u3002\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4e0b\u6807 $i$\uff0c\u5b83\u662f\u5426\u4ea7\u751f\u7684 $A_i=B_i$ \u7684\u60c5\u51b5\u5982\u4e0b\uff1a\n\n- \u5982\u679c $i=P_i=Q_i$\uff0c\u90a3\u4e48\u4e0d\u7ba1\u600e\u6837\u90fd\u6709 $A_i=B_i$\uff0c\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u76f4\u63a5\u4ee4\u7b54\u6848\u52a0\u4e00\uff0c\u5e76\u5ffd\u7565\u8fd9\u79cd\u60c5\u51b5\u3002\n- \u5982\u679c $i=P_i\\ne Q_i$\uff0c\u90a3\u4e48\u82e5 $Q_i$ \u6240\u5728\u7f6e\u6362\u73af\u4e0d\u8f6c\u5c31\u4f1a\u6709 $A_i=B_i=i$\uff0c\u5bf9\u7b54\u6848\u4ea7\u751f $1$ \u7684\u8d21\u732e\uff0c\u82e5 $Q_i$ \u6240\u5728\u7f6e\u6362\u73af\u8f6c\u5219\u4e0d\u4f1a\u4ea7\u751f\u8fd9\u6837\u7684\u60c5\u51b5\u3002\n- \u5982\u679c $i=Q_i\\ne P_i$\uff0c\u540c\u7406\uff0c\u82e5 $P_i$ \u6240\u5728\u7f6e\u6362\u73af\u4e0d\u8f6c\u5219\u91cd\u590d\u5143\u7d20\u4e2a\u6570 $+1$\uff0c\u5426\u5219\u91cd\u590d\u5143\u7d20\u4e2a\u6570\u4e0d\u53d8\u3002\n- \u5982\u679c $i\\ne P_i=Q_i$\uff0c\u90a3\u4e48\u5982\u679c $P_i$ \u6240\u5728\u7f6e\u6362\u73af\u4e0e $Q_i$ \u6240\u5728\u7f6e\u6362\u73af\u540c\u65f6\u8f6c/\u540c\u65f6\u4e0d\u8f6c\u90a3\u4e48\u91cd\u590d\u5143\u7d20\u4e2a\u6570 $+1$\uff0c\u5426\u5219\u91cd\u590d\u5143\u7d20\u4e2a\u6570\u4e0d\u53d8\u3002\n- \u5982\u679c $i\\ne P_i\\ne Q_i$\uff0c\u90a3\u4e48\u5982\u679c $P_i$ \u6240\u5728\u7f6e\u6362\u73af\u4e0e $Q_i$ \u6240\u5728\u7f6e\u6362\u73af\u540c\u65f6\u4e0d\u8f6c\u90a3\u4e48\u91cd\u590d\u5143\u7d20\u4e2a\u6570 $+1$\uff0c\u5426\u5219\u91cd\u590d\u5143\u7d20\u4e2a\u6570\u4e0d\u53d8\u3002\n\n\u5982\u679c\u6211\u4eec\u5c06\u6bcf\u4e2a\u7f6e\u6362\u73af\u201c\u8f6c\u201d\u770b\u4f5c\u88ab\u5212\u5206\u5165 A \u96c6\u5408\uff0c\u201c\u4e0d\u8f6c\u201d\u770b\u4f5c\u88ab\u5212\u5206\u5165 B \u96c6\u5408\uff0c\u90a3\u4e48\u4e0a\u8ff0\u6761\u4ef6\u53ef\u4ee5\u8f6c\u5316\u4e3a\uff1a\n\n- $i=P_i\\ne Q_i$\uff1a\u5982\u679c $Q_i$ \u6240\u5728\u7f6e\u6362\u73af\u5c5e\u4e8e B \u90a3\u4e48\u7b54\u6848\u52a0 $1$\n- $i=Q_i\\ne P_i$\uff1a\u5982\u679c $P_i$ \u6240\u5728\u7f6e\u6362\u73af\u5c5e\u4e8e B \u90a3\u4e48\u7b54\u6848\u52a0 $1$\n- $i\\ne P_i=Q_i$\uff1a\u5982\u679c $P_i,Q_i$ \u6240\u5728\u7f6e\u6362\u73af\u5c5e\u4e8e\u76f8\u540c\u96c6\u5408\u90a3\u4e48\u7b54\u6848\u52a0 $1$\n- $i\\ne P_i\\ne Q_i$\uff1a\u5982\u679c $P_i,Q_i$ \u90fd\u5c5e\u4e8e B \u96c6\u5408\u90a3\u4e48\u7b54\u6848\u52a0 $1$\n\n\u770b\u5230\u201c\u5212\u5206\u4e3a\u4e24\u4e2a\u96c6\u5408\u201d\uff0c\u201c\u5982\u679c\u4e24\u70b9\u5c5e\u4e8e\u76f8\u540c/\u4e0d\u540c\u96c6\u5408\u5219\u4ee3\u4ef7\u52a0 $1$\uff0c\u6c42\u6700\u5c0f/\u6700\u5927\u4ee3\u4ef7\u201d\u4e4b\u7c7b\u7684\u5b57\u773c\uff0c\u6211\u4eec\u80fd\u591f\u60f3\u5230\u2026\u2026**\u6700\u5c0f\u5272**\uff01\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u5c06\u6bcf\u4e2a\u7f6e\u6362\u73af\u770b\u4f5c\u4e00\u4e2a\u70b9\uff0c\u5e76\u65b0\u5efa\u6e90\u6c47\uff0c\u6211\u4eec\u5b9a\u4e49 $P$ \u4e2d\u7684\u7f6e\u6362\u73af\u8f6c\u5f53\u4e14\u4ec5\u5f53\u5176\u4e0e $S$ \u76f8\u8fde\uff0c\u4e0d\u8f6c\u5f53\u4e14\u4ec5\u5f53\u5176\u4e0e $T$ \u76f8\u8fde\uff1b$Q$ \u4e2d\u7684\u7f6e\u6362\u73af\u8f6c\u5f53\u4e14\u4ec5\u5f53\u5176\u4e0e $T$ \u76f8\u8fde\uff0c\u4e0d\u8f6c\u5f53\u4e14\u4ec5\u5f53\u5176\u4e0e $S$ \u76f8\u8fde\uff0c\u8fd9\u6837\u6240\u6709\u4ee3\u4ef7\u90fd\u53ef\u4ee5\u7528\u4e00/\u4e24\u6761\u7f51\u7edc\u6d41\u4e0a\u7684 $1$ \u6743\u8fb9\u7684\u5f62\u5f0f\u8868\u8ff0\uff0c\u518d\u6839\u636e\u6700\u5927\u6d41 $=$ \u6700\u5c0f\u5272\u6c42\u51fa\u6700\u5c0f\u4ee3\u4ef7\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u540c dinic \u6c42\u4e8c\u5206\u56fe\u5339\u914d\uff0c$\\mathcal O(n\\sqrt{n})$\u3002\n\n```cpp\nconst int MAXN=1e5;\nconst int MAXV=1e5+2;\nconst int MAXE=2e5*2;\nconst int INF=0x3f3f3f3f;\nint n,a[MAXN+5],b[MAXN+5],S=1e5+1,T=1e5+2,ncnt=0;\nint bel_a[MAXN+5],bel_b[MAXN+5];\nint hd[MAXV+5],to[MAXE+5],cap[MAXE+5],nxt[MAXE+5],ec=1;\nvoid adde(int u,int v,int f){\n\tto[++ec]=v;cap[ec]=f;nxt[ec]=hd[u];hd[u]=ec;\n\tto[++ec]=u;cap[ec]=0;nxt[ec]=hd[v];hd[v]=ec;\n} int dep[MAXV+5],now[MAXV+5];\nbool getdep(){\n\tmemset(dep,-1,sizeof(dep));dep[S]=0;\n\tqueue<int> q;q.push(S);now[S]=hd[S];\n\twhile(!q.empty()){\n\t\tint x=q.front();q.pop();\n\t\tfor(int e=hd[x];e;e=nxt[e]){\n\t\t\tint y=to[e],z=cap[e];\n\t\t\tif(z&&!~dep[y]){\n\t\t\t\tdep[y]=dep[x]+1;\n\t\t\t\tnow[y]=hd[y];q.push(y);\n\t\t\t}\n\t\t}\n\t} return ~dep[T];\n}\nint getflow(int x,int f){\n\tif(x==T) return f;int ret=0;\n\tfor(int &e=now[x];e;e=nxt[e]){\n\t\tint y=to[e],z=cap[e];\n\t\tif(z&&dep[y]==dep[x]+1){\n\t\t\tint w=getflow(y,min(f-ret,z));\n\t\t\tret+=w;cap[e]-=w;cap[e^1]+=w;\n\t\t\tif(f==ret) return ret;\n\t\t}\n\t} return ret;\n}\nint dinic(){\n\tint ret=0;\n\twhile(getdep()) ret+=getflow(S,INF);\n\treturn ret;\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i]),++a[i];\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&b[i]),++b[i];\n\tfor(int i=1;i<=n;i++) if(!bel_a[i]){\n\t\tbel_a[i]=(i^a[i])?(++ncnt):ncnt;int cur=a[i];\n\t\twhile(cur^i) bel_a[cur]=ncnt,cur=a[cur];\n\t}\n\tfor(int i=1;i<=n;i++) if(!bel_b[i]){\n\t\tbel_b[i]=(i^b[i])?(++ncnt):ncnt;int cur=b[i];\n\t\twhile(cur^i) bel_b[cur]=ncnt,cur=b[cur];\n\t} int res=n;\n\tfor(int i=1;i<=n;i++){\n\t\tif(a[i]==i&&b[i]==i) res--;\n\t\telse if(a[i]!=i&&b[i]!=i){\n\t\t\tif(a[i]==b[i]) adde(bel_a[i],bel_b[i],1),adde(bel_b[i],bel_a[i],1);\n\t\t\telse adde(bel_b[i],bel_a[i],1);\n\t\t} else {\n\t\t\tif(a[i]==i) adde(bel_b[i],T,1);\n\t\t\telse adde(S,bel_a[i],1);\n\t\t}\n\t} printf(\"%d\\n\",res-dinic());\n\treturn 0;\n}\n```\n\n",
        "postTime": 1628391098,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 AT5203 [AGC038F] Two Permutations"
    },
    {
        "content": "## Solution\n\n\u58f0\u660e\uff1a\u62c6\u73af\u6307\u7684\u662f\u5f53\u524d\u4f4d\u7f6e\u9009\u62e9 $i$ \u800c\u4e0d\u662f $P_i$ \u6216\u8005 $Q_i$\u3002\n\n\u8003\u8651\u5c06 $P$ \u4e2d\u7684\u5faa\u73af\u770b\u505a\u4e00\u4e2a\u6574\u4f53\uff0c\u56e0\u4e3a\u53d1\u73b0\uff0c\u5982\u679c\u5bf9\u4e8e\u73af\u4e0a\u4efb\u610f\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5c06\u5176\u62c6\u6389\uff0c\u53ef\u4ee5\u63a8\u5bfc\u5f97\u51fa\u6574\u4e2a\u73af\u90fd\u4f1a\u88ab\u62c6\u3002$Q$ \u540c\u7406\u3002\n\n\u540c\u65f6\u6839\u636e\u6b63\u96be\u5219\u53cd\u7684\u601d\u60f3\uff0c\u5c06\u9898\u76ee\u8f6c\u6362\u6210\u51fa\u81f3\u5c11\u6709\u591a\u5c11\u4e2a\u4f4d\u7f6e $A_i=B_i$\u3002\n\n\u5206\u60c5\u51b5\u8ba8\u8bba\u4e00\u4e0b\u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f1a\u4ea7\u751f\u8d21\u732e\uff1a\n\n1. \u5f53 $P_i=Q_i=i$ \u65f6\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u65e0\u8bba\u4ec0\u4e48\u60c5\u51b5 $A_i=B_i$\uff0c\u7b54\u6848 -1 \u5373\u53ef\u3002\n2. \u5f53 $P_i=i,Q_i\\not=i$ \u65f6\uff0c\u5c06 $Q_i$ \u5bf9\u5e94\u7684\u73af\u62c6\u6389\u4f1a\u4ea7\u751f\u8d21\u732e\uff0c\u5426\u5219\u4e0d\u4f1a\u3002\n3. \u5f53 $P_i\\not=i,Q_i=i$ \u65f6\uff0c\u540c\u4e0a\uff0c\u5c06 $P_i$ \u5bf9\u5e94\u7684\u73af\u62c6\u6389\u624d\u4f1a\u4ea7\u751f\u8d21\u732e\uff0c\u5426\u5219\u4e0d\u4f1a\u3002\n4. \u5f53 $P_i\\not=i,Q_i\\not=i,P_i\\not=Q_i$ \u65f6\uff0c\u540c\u65f6\u62c6\u6389\u4e24\u4e2a\u73af\u624d\u4f1a\u4ea7\u751f\u8d21\u732e\uff0c\u5426\u5219\u4e0d\u4f1a\u3002\n5. \u5f53 $P_i\\not=i,Q_i\\not=i,P_i=Q_i$ \u65f6\uff0c\u540c\u65f6\u62c6\u6216\u8005\u540c\u65f6\u4e0d\u62c6\u90fd\u4f1a\u4ea7\u751f\u8d21\u732e\u3002\n\n\u60f3\u5230\u8fd9\u91cc\uff0c\u7f51\u7edc\u6d41\u5c31\u547c\u4e4b\u6b32\u51fa\uff08\u6216\u8bb8\u5427\uff09\u3002\n\n\u5c06 $P_i$ \u5bf9\u5e94\u7684\u73af\u653e\u5728\u5de6\u8fb9\uff0c $Q_i$ \u5bf9\u5e94\u7684\u73af\u653e\u5728\u53f3\u8fb9\uff0c\u8bbe\u6e90\u70b9 $S$ \u548c\u6c47\u70b9 $T$\u3002\n\n\u6839\u636e\u4e0a\u8ff0\u60c5\u51b5\u8fde\u8fb9\uff0c\u8fde\u8fb9\u5982\u4e0b\uff08\u4e00\u4e00\u5bf9\u5e94\uff09\uff1a\n\n1. \u4e0d\u7528\u8fde\u8fb9\uff0c\u7b54\u6848\u76f4\u63a5\u51cf\u3002\n2. $Q_i$ \u5bf9\u5e94\u7684\u73af\u5411 $T$ \u8fde\u4e00\u6761\u6d41\u91cf\u4e3a 1 \u7684\u8fb9\u3002\n3. $S$ \u5411 $P_i$ \u5bf9\u5e94\u7684\u73af\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a 1 \u7684\u8fb9\u3002\n4. $Q_i$ \u5bf9\u5e94\u7684\u73af\u5411 $P_i$ \u5bf9\u5e94\u7684\u73af\u8fde\u6d41\u91cf\u4e3a 1 \u7684\u8fb9\u3002\uff08\u907f\u514d\u51fa\u73b0\u4ea7\u751f\u4e00\u4e9b\u4e0d\u5408\u6cd5\u7684\u7b54\u6848\uff09\n5. $P_i$ \u5bf9\u5e94\u7684\u73af\u5411 $Q_i$ \u5bf9\u5e94\u7684\u73af\u8fde\u6d41\u91cf\u4e3a 1 \u7684\u8fb9\uff0c$Q_i$ \u5bf9\u5e94\u7684\u73af\u4e5f\u5411 $P_i$ \u5bf9\u5e94\u7684\u73af\u8fde\u6d41\u91cf\u4e3a 1 \u7684\u8fb9\u3002\uff08\u4e24\u6761\uff09\n\n\u7136\u540e\u6109\u5feb\u7684\u5957\u4e0a $\\mathcal{Dinic}$ \u5c31\u597d\u4e86\u3002\n\n## Code\n\n```cpp\n#include<queue>\n#include<cstdio>\n#define N 100005\n#define inf 2147483647\nusing namespace std;\nstruct node\n{\n\tint to,head,next,flow;\n}a[N<<2];\nint n,S,T,tot=1,cnt,ans,p[N],q[N],r1[N],r2[N],cur[N],deep[N];\nbool bj1[N],bj2[N];\nvoid getring1(int x)\n{\n\t++cnt;\n\twhile (!bj1[x]) r1[x]=cnt,bj1[x]=true,x=p[x];\n}\nvoid getring2(int x)\n{\n\t++cnt;\n\twhile (!bj2[x]) r2[x]=cnt,bj2[x]=true,x=q[x];\n}\nvoid add(int x,int y,int z)\n{\n\ta[++tot].to=y;a[tot].flow=z;a[tot].next=a[x].head;a[x].head=tot;\n\ta[++tot].to=x;a[tot].flow=0;a[tot].next=a[y].head;a[y].head=tot;\n}\nbool bfs()\n{\n\tqueue<int> q;\n\tfor (int i=1;i<=cnt;++i)\n\t\tdeep[i]=0;\n\tq.push(S);deep[S]=1;\n\twhile (!q.empty())\n\t{\n\t\tint x=q.front();q.pop();\n\t\tfor (int i=a[x].head;i;i=a[i].next)\n\t\t{\n\t\t\tint v=a[i].to;\n\t\t\tif (!deep[v]&&a[i].flow) deep[v]=deep[x]+1,q.push(v);\n\t\t}\n\t}\n\treturn deep[T]!=0;\n}\nint dfs(int x,int fl)\n{\n\tif (x==T) return fl;\n\tint res=fl;\n\tfor (int i=cur[x];i;i=a[i].next)\n\t{\n\t\tint v=a[i].to;\n\t\tcur[x]=i;\n\t\tif (deep[v]==deep[x]+1&&a[i].flow)\n\t\t{\n\t\t\tint f=dfs(v,min(res,a[i].flow));\n\t\t\ta[i].flow-=f;a[i^1].flow+=f;res-=f;\n\t\t\tif (!res) break;\n\t\t}\n\t} \n\treturn fl-res;\n} \nint dinic()\n{\n\tint res=0;\n\twhile (bfs())\n\t{\n\t\tfor (int i=1;i<=cnt;++i)\n\t\t\tcur[i]=a[i].head;\n\t\tres+=dfs(S,inf);\n\t}\n\treturn res;\n}\nint main()\n{\n\tfreopen(\"per.in\",\"r\",stdin);\n\tfreopen(\"per.out\",\"w\",stdout);\n\tscanf(\"%d\",&n);\n\tfor (int i=1;i<=n;++i)\n\t\tscanf(\"%d\",&p[i]),++p[i];\n\tfor (int i=1;i<=n;++i)\n\t\tscanf(\"%d\",&q[i]),++q[i];\n\tfor (int i=1;i<=n;++i)\n\t\tif (!bj1[i])\n\t\t\tgetring1(i);\n\tfor (int i=1;i<=n;++i)\n\t\tif (!bj2[i])\n\t\t\tgetring2(i);\n\tS=++cnt;T=++cnt;\n\tans=n;\n\tfor (int i=1;i<=n;++i)\n\t{\n\t\tif (p[i]==q[i]&&p[i]==i) ans--;\n\t\telse if (q[i]==i) add(S,r1[i],1);\n\t\telse if (p[i]==i) add(r2[i],T,1);\n\t\telse if (p[i]==q[i]) add(r2[i],r1[i],1),add(r1[i],r2[i],1);\n\t\telse add(r2[i],r1[i],1);\n\t}\n\tprintf(\"%d\\n\",ans-dinic());\n\treturn 0;\t\n} \n```\n\n",
        "postTime": 1637155201,
        "uid": 166078,
        "name": "Thunder_S",
        "ccfLevel": 6,
        "title": "AT5203 [AGC038F] Two Permutations"
    }
]