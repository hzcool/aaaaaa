[
    {
        "content": "# JOI2013 Final E \u9898\u89e3\n\n\n\n\n\n## \u9898\u76ee\u5927\u610f\n\n> \u7ed9\u4e00\u4e2a\u5e8f\u5217 $a_1,a_2,\\dots,a_n$\uff0c\u4ea4\u6362\u67d0\u4e00\u5bf9 $a_i,a_j(i<j)$\uff0c\u6700\u5c0f\u5316\u4ea4\u6362\u540e $a$ \u7684\u9006\u5e8f\u5bf9\u6570\u3002\n>\n> \u6570\u636e\u8303\u56f4\uff1a$n\\le 10^5$\u3002\n\n## \u601d\u8def\u5206\u6790\n\n\u4e3a\u65b9\u4fbf\u8ba8\u8bba\uff0c\u5148\u5047\u8bbe $a_i$ \u4e92\u4e0d\u76f8\u540c\uff0c\u82e5 $a_i$ \u53ef\u91cd\u4e5f\u53ef\u7c7b\u4f3c\u89e3\u51b3\u3002\n\n\u9996\u5148\u8003\u8651\u5982\u4f55\u8ba1\u7b97\u4ea4\u6362 $a_i,a_j$ \u540e\u7684\u9006\u5e8f\u5bf9\u53d8\u5316\u91cf\uff0c\u4e0d\u59a8\u8bbe $i<j,a_i>a_j$\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6ee1\u8db3 $i<k<j,a_j<a_k<a_i$ \u7684 $k$\uff0c\u9006\u5e8f\u5bf9\u6570\u4f1a $-2$\u3002\n\n\u56e0\u6b64\u5047\u5982\u6211\u4eec\u5efa\u7acb\u4e8c\u7ef4\u5e73\u9762\u5e76\u5bf9\u6bcf\u4e2a $i$ \u63d2\u5165\u70b9 $(i,a_i)$\uff0c\u9006\u5e8f\u5bf9\u53d8\u5316\u6570\u53ea\u9700\u8981\u77e5\u9053\u77e9\u5f62 $(i,a_i),(j,a_j)$ \u4e2d\u70b9\u7684\u6570\u91cf\uff0c\u7528\u4e00\u68f5\u4e3b\u5e2d\u6811\u7ef4\u62a4\u9759\u6001\u4e8c\u7ef4\u6570\u70b9\u5373\u53ef\u5feb\u901f\u8ba1\u7b97\u9006\u5e8f\u5bf9\u53d8\u5316\u91cf\u3002\n\n\u7ee7\u7eed\u89c2\u5bdf $a_i,a_j$ \u6ee1\u8db3\u7684\u6761\u4ef6\uff0c\u5bb9\u6613\u53d1\u73b0\u5982\u679c\u5b58\u5728\u67d0\u4e2a $i'$ \u4f7f\u5f97 $i'<i,a_{i}<a_{i'}$ \uff0c\u90a3\u4e48 $i$ \u4e00\u5b9a\u4e0d\u4f18\uff0c\u90a3\u4e48\u5269\u4e0b\u7684 $i$ \u4e00\u5b9a\u662f $a_1\\sim a_n$ \u7684\u524d\u7f00\u6700\u5927\u503c\uff0c\u540c\u7406 $a_j$ \u4e00\u5b9a\u662f $a_1\\sim a_n$ \u7684\u540e\u7f00\u6700\u5c0f\u503c\u3002\n\n\u89c2\u5bdf\u4e0b\u56fe\u6709\uff1a\n\n[![p9j2Rq1.png](https://s1.ax1x.com/2023/05/30/p9j2Rq1.png)](https://imgse.com/i/p9j2Rq1)\n\n\u5176\u4e2d $S_1,S_2,S_3,S_4$ \u8868\u793a\u5bf9\u5e94\u77e9\u5f62\u533a\u57df\u5185\u70b9\u7684\u6570\u91cf\uff0c\u4e0d\u59a8\u5047\u8bbe $a_i$ \u5728\u4e0e $a_{j'}$ \u4ea4\u6362\u65f6\u66f4\u4f18\uff0c\u90a3\u4e48\u663e\u7136\u6709 $S_2\\ge S_3+S_4$\uff0c\u56e0\u6b64\u6211\u4eec\u77e5\u9053 $S_2-S_3-S_4\\ge 0$\uff0c\u6b64\u65f6\u6211\u4eec\u77e5\u9053\uff0c$a_{i'}$ \u4e0e $a_{j'}$ \u4ea4\u6362\u4e00\u5b9a\u6bd4\u4e0e $a_{j}$ \u4f18\uff0c\u56e0\u4e3a $S_1+S_2-S_3\\ge S_2-S_3-S_4\\ge 0$\uff0c\u56e0\u6b64 $S_1+S_2\\ge S_3$\uff0c\u6240\u4ee5\u4ea4\u6362 $a_{i'}$ \u548c $a_{j'}$ \u4f18\u4e8e\u4ea4\u6362 $a_{i'}$ \u548c $a_j$\u3002\n\n\u56e0\u6b64\u5047\u8bbe $a_i$ \u4e0e $f_i$ \u4ea4\u6362\u66f4\u4f18\uff0c\u90a3\u4e48 $f_i$ \u4e00\u5b9a\u5355\u8c03\u4e0d\u964d\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u5206\u6cbb\u4f18\u5316\u6c42\u503c\u7684\u8fc7\u7a0b\uff0c\u8f6c\u79fb\u7684\u4ee3\u4ef7\u51fd\u6570\u7528\u4e3b\u5e2d\u6811\u7ef4\u62a4\u3002\n\n\u6ce8\u610f\u5230\u5f53 $a_i$ \u53ef\u4ee5\u76f8\u540c\u65f6\uff0c\u4ea4\u6362 $a_i,a_j$ \u540e\u9006\u5e8f\u5bf9\u8fd8\u8981\u52a0\u4e0a $a_{i+1}\\sim a_{j-1}$ \u4e2d $a_i$ \u548c $a_j$ \u7684\u6570\u91cf\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n\\log^2n)$\n\n## \u4ee3\u7801\u5448\u73b0\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int MAXN=1e5+1,INF=1e9;\nint n,a[MAXN];\nclass SegmentTree {\n    private:\n        struct Node {\n            int ls,rs,sum;\n        }    tree[MAXN*32];\n        int siz,root[MAXN];\n        inline void pushup(int p) { tree[p].sum=tree[tree[p].ls].sum+tree[tree[p].rs].sum; }\n        inline void Modify(int u,int l,int r,int lst,int &pos) {\n            pos=++siz;\n            if(l==r) { tree[pos].sum=tree[lst].sum+1; return ; }\n            int mid=(l+r)>>1;\n            if(u<=mid) {\n                tree[pos].rs=tree[lst].rs;\n                Modify(u,l,mid,tree[lst].ls,tree[pos].ls);\n            } else {\n                tree[pos].ls=tree[lst].ls;\n                Modify(u,mid+1,r,tree[lst].rs,tree[pos].rs);\n            }\n            pushup(pos);\n        }\n        inline int __Count(int ul,int ur,int l,int r,int pos) {\n            if(ul>ur||!pos) return 0;\n            if(ul<=l&&r<=ur) return tree[pos].sum;\n            int mid=(l+r)>>1,res=0;\n            if(ul<=mid) res+=__Count(ul,ur,l,mid,tree[pos].ls);\n            if(mid<ur) res+=__Count(ul,ur,mid+1,r,tree[pos].rs);\n            return res;\n        }\n        inline int Count(int lo,int hi,int l,int r) {\n            return __Count(lo,hi,1,n,root[r])-__Count(lo,hi,1,n,root[l-1]);\n        }\n    public:\n        inline void Build() {\n            for(int i=1;i<=n;++i) Modify(a[i],1,n,root[i-1],root[i]);\n        }\n        inline int Query(int l,int r) {\n            if(l>=r) return -INF;\n            if(a[l]<a[r]) return -Count(a[l]+1,a[r]-1,l+1,r-1)-Count(a[l],a[r],l+1,r-1)-1;\n            if(a[l]==a[r]) return 0;\n            return Count(a[r]+1,a[l]-1,l+1,r-1)+Count(a[r],a[l],l+1,r-1)+1;\n        }\n        inline ll Init() {\n            ll ans=0;\n            for(int i=1;i<=n;++i) ans+=__Count(a[i]+1,n,1,n,root[i]);\n            return ans;\n        }\n}    TR;\nint p[MAXN],cp,q[MAXN],cq,f[MAXN];\ninline void Solve(int l,int r,int L,int R) {\n    if(l>r) return ;\n    int M=0,mid=(l+r)>>1;\n    for(int i=L;i<=R;++i) {\n        int v=TR.Query(p[mid],q[i]);\n        if(v>f[mid]) f[mid]=v,M=i;\n    }\n    Solve(l,mid-1,M,R),Solve(mid+1,r,L,M);\n}\nsigned main() {\n    scanf(\"%d\",&n);\n    vector <int> vals;\n    for(int i=1;i<=n;++i) scanf(\"%d\",&a[i]),vals.push_back(a[i]);\n    sort(vals.begin(),vals.end()),vals.erase(unique(vals.begin(),vals.end()),vals.end());\n    for(int i=1;i<=n;++i) a[i]=lower_bound(vals.begin(),vals.end(),a[i])-vals.begin()+1;\n    TR.Build();\n    for(int i=1,v=0;i<=n;++i) if(a[i]>v) p[++cp]=i,v=a[i];\n    for(int i=n,v=n+1;i>=1;--i) if(a[i]<v) q[++cq]=i,v=a[i];\n    fill(f+1,f+cp+1,-INF);\n    Solve(1,cp,1,cq);\n    int ans=-INF;\n    for(int i=1;i<=cp;++i) ans=max(ans,f[i]);\n    printf(\"%lld\\n\",TR.Init()-ans);\n    return 0;\n}\n\n```\n\n",
        "postTime": 1685452288,
        "uid": 539618,
        "name": "DaiRuiChen007",
        "ccfLevel": 6,
        "title": "JOI2013 Final E \u9898\u89e3"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\r\n\u6709\u4e00\u4e2a\u957f\u4e3a $n$ \u7684\u5e8f\u5217 $a$\u3002\u6c42\u5c06\u5176\u4efb\u610f\u4e24\u4e2a\u6570\u4ea4\u6362\u4e4b\u540e\uff0c\u5bf9\u5176\u5192\u6ce1\u6392\u5e8f\u65f6\u4ea4\u6362\u76f8\u90bb\u4e24\u4e2a\u6570\u7684\u6700\u5c0f\u6b21\u6570\u3002\r\n\r\n$1\\leqslant n\\leqslant10^5$\u3002\r\n\r\n## \u9898\u76ee\u5206\u6790\r\n\r\n\uff08\u4e00\u7bc7\u5341\u5206\u8be6\u7ec6\u7684\u9898\u89e3\uff09\u3002\r\n\r\n\u4e4d\u4e00\u770b\uff0c\u9898\u76ee\u63cf\u8ff0\u5341\u5206\u6e05\u6670\uff0c~~\u611f\u89c9\u662f\u9053\u66b4\u529b\u679a\u4e3e\u9898~~\uff0c\u4f46\u4ed4\u7ec6\u4e00\u770b\uff0c\u53d1\u73b0\u8fd9\u9898\u4f3c\u4e4e\u5e76\u4e0d\u7b80\u5355\u3002\u4e0d\u8fc7\uff0c\u65e2\u7136\u8981\u6c42\u5192\u6ce1\u6392\u5e8f\u7684\u6700\u5c0f\u4ea4\u6362\u6b21\u6570\uff0c\u5c31\u8981\u601d\u8003\u5b83\u662f\u5426\u5177\u6709\u67d0\u4e9b\u6027\u8d28\u3002\u4e0d\u96be\u60f3\u5230\uff0c\u5192\u6ce1\u6392\u5e8f\u7684\u4ea4\u6362\u6b21\u6570\u5c31\u7b49\u4e8e\u5e8f\u5217\u4e2d\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u3002\u539f\u56e0\u662f\uff0c\u6bcf\u4e00\u6b21\u4ea4\u6362\u7684\u524d\u63d0\u662f\u76f8\u90bb\u4e24\u4e2a\u6570\u6784\u6210\u9006\u5e8f\u5bf9\uff0c\u800c\u4ea4\u6362\u540e\u5c31\u662f\u628a\u8fd9\u4e2a\u9006\u5e8f\u5bf9\u7ed9\u8c03\u6b63\uff0c\u5e76\u4e14\uff0c\u5176\u4ed6\u5143\u7d20\u7684\u76f8\u5bf9\u4f4d\u7f6e\u4e0d\u53d7\u5f71\u54cd\uff0c\u5373\u51cf\u5c11\u4e00\u4e2a\u9006\u5e8f\u5bf9\u3002\r\n\r\n\u90a3\u4e48\uff0c\u8fd9\u9053\u9898\u7684\u9898\u9762\u5c31\u53ef\u4ee5\u53d8\u4e3a\uff0c\u6709\u4e00\u4e2a\u957f\u4e3a $n$ \u7684\u5e8f\u5217 $a$\u3002\u6c42\u5c06\u5176\u4efb\u610f\u4e24\u4e2a\u6570\u4ea4\u6362\u4e4b\u540e\uff0c\u65b0\u7684\u5e8f\u5217\u4e2d\u9006\u5e8f\u5bf9\u7684\u6700\u5c0f\u4e2a\u6570\u3002\r\n\r\n\u8fd9\u6837\u7684\u8bdd\uff0c\u5c31\u80fd\u5f97\u5230\u8fd9\u9053\u9898\u7684\u4e2d\u5fc3\u601d\u8def\u4e86\uff1a\u53ea\u8981\u5148\u8ba1\u7b97\u603b\u7684\u9006\u5e8f\u5bf9\u5bf9\u6570\uff0c\u518d\u627e\u5230\u6240\u6709\u65b9\u6848\u4e2d\u4f7f\u5f97\u9006\u5e8f\u5bf9\u5bf9\u6570\u589e\u91cf\u6700\u5c0f\u7684\u65b9\u6848\u3002\r\n\r\n\u7b2c\u4e00\u90e8\u5206\u53ef\u4ee5\u76f4\u63a5\u5206\u6cbb\u6c42\u3002\r\n\r\n\u90a3\u4e48\u6211\u4eec\u4ee4\u4e00\u79cd\u65b9\u6848\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a\u5b8c\u6210\u8be5\u65b9\u6848\u540e\u9006\u5e8f\u5bf9\u51cf\u5c11\u7684\u6570\u91cf\uff0c\u5219\u8981\u6c42\u6240\u6709\u65b9\u6848\u4e2d\u6700\u5927\u7684\u8d21\u732e\u3002\u63a5\u4e0b\u6765\u5c31\u662f\u8981\u5206\u6790\u65b9\u6848\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5230\u5e95\u662f\u591a\u5c11\u3002\r\n\r\n### $10$ \u5206\u505a\u6cd5\r\n\u5982\u679c\u6709\u5143\u7d20\u76f8\u7b49\u4f3c\u4e4e\u4f1a\u4f7f\u5f97\u5206\u6790\u53d8\u5f97\u56f0\u96be\uff0c\u6211\u4eec\u5148\u8003\u8651\u5143\u7d20\u4e92\u4e0d\u76f8\u7b49\u7684\u60c5\u51b5\u3002\r\n\r\n\u5047\u8bbe\u9009\u5b9a\u4e86\u4e24\u4e2a\u6570 $a_l,a_r(l<r)$\uff0c\u663e\u7136\uff0c\u5982\u679c $a_l<a_r$ \u7684\u8bdd\uff0c\u9006\u5e8f\u5bf9\u6570\u91cf\u80af\u5b9a\u4f1a\u589e\u52a0\uff08\u60f3\u4e00\u60f3\uff0c\u4e3a\u4ec0\u4e48\uff09\u3002\u6240\u4ee5\u53ea\u8981\u80fd\u591f\u627e\u5230\u4e00\u7ec4 $l<r$ \u4e14 $a_{l}>a_r$\uff0c\u5219\u8fd9\u7ec4\u65b9\u6848\u5bf9\u5e94\u7684\u9006\u5e8f\u5bf9\u6570\u91cf\u7edd\u5bf9\u4f1a\u51cf\u5c11\uff08\u60f3\u4e00\u60f3\uff0c\u4e3a\u4ec0\u4e48\uff09\u3002\u7edd\u5bf9\u4e0d\u4f1a\u9009\u62e9 $a_l<a_r$ \u7684\u60c5\u51b5\u3002\u5982\u679c\u627e\u4e0d\u5230\u5462\uff1f\u5c31\u8bf4\u660e\u6570\u7ec4\u5df2\u7ecf\u6709\u5e8f\u4e86\uff0c\u4e00\u6b21\u4ea4\u6362\u5fc5\u7136\u4f1a\u589e\u52a0\u9006\u5e8f\u5bf9\uff0c\u4e0d\u59a8\u5c31\u4ea4\u6362\u4e00\u7ec4\u76f8\u90bb\u5143\u7d20\uff0c\u8fd9\u6837\u53ea\u7528\u518d\u4ea4\u6362\u4e00\u6b21\u5c31\u884c\u4e86\u3002\r\n\r\n\u5728\u505a\u5b8c\u4ee5\u4e0a\u8d2a\u5fc3\u540e\uff0c\u5c31\u5df2\u7ecf\u5f97\u5230\u5bf9\u4e8e\u6700\u7ec8\u9009\u62e9\u7684\u65b9\u6848\uff0c\u4e00\u5b9a\u6ee1\u8db3 $l<r$ \u4e14 $a_l>a_r$\uff0c\u90a3\u4e48\u8fd9\u7ec4\u65b9\u6848\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5c31\u5f88\u5bb9\u6613\u5f97\u5230\uff1a\u4ea4\u6362\u5b83\u4eec\u672c\u8eab\u6709 $1$ \u7684\u8d21\u732e\uff0c\u800c\u5bf9\u4e8e\u4f4d\u4e8e\u4e2d\u95f4\u7684\u5143\u7d20 $a_i(l<i<r)$\uff0c\u5982\u679c $a_l<a_i$\uff0c\u5219\u6570\u5bf9 $(i,l)$ \u4f1a\u4ea7\u751f $-1$ \u7684\u8d21\u732e\uff08\u5373\u589e\u52a0\u4e00\u7ec4\u9006\u5e8f\u5bf9\uff09\uff0c\u53cd\u4e4b\uff0c\u4f1a\u4ea7\u751f $1$ \u7684\u8d21\u732e\uff08\u5373\u51cf\u5c0f\u4e00\u7ec4\u9006\u5e8f\u5bf9\uff09\uff0c\u800c\u5982\u679c $a_i<a_r$\uff0c\u5219\u4f1a\u4ea7\u751f $-1$ \u7684\u8d21\u732e\uff0c\u53cd\u4e4b\uff0c\u4ea7\u751f $1$ \u7684\u8d21\u732e\u3002\u7efc\u4e0a\uff0c\u518d\u52a0\u4e0a\u5b83\u4eec\u672c\u8eab\uff0c\u5bf9\u4e8e\u8fd9\u6837\u4e00\u79cd\u65b9\u6848 $(l,r)$\uff0c\u4ea7\u751f\u7684\u8d21\u732e\u5c31\u4e3a\uff1a\r\n\r\n$\\sum\\limits_{l<i<r}{((a_i<a_l)+(a_i>a_r)-(a_i>a_l)-(a_i<a_r))}+1$\r\n\r\n\u4e0d\u8fc7\uff0c\u8fd9\u4e2a\u5f0f\u5b50\u770b\u8d77\u6765\u6ca1\u4ec0\u4e48\u5b9e\u7528\u6027\uff0c\u522b\u5fd8\u4e86 $a_{l}>a_{r}$\uff0c\u6839\u636e\u4e0d\u7b49\u5f0f\u7684\u4f20\u9012\u6027\uff0c\u53ef\u4ee5\u8fd9\u6837\u5316\u7b80\uff1a\r\n\r\n$\\sum\\limits_{l<i<r}{((a_i<a_l)+(a_i>a_r)-(a_i>a_l)-(a_i<a_r))}+1$\r\n\r\n$=\\sum\\limits_{l<i<r}{((a_i<a_l)+(a_i>a_r)-((a_i>a_r)-(a_r<a_i<a_l))-((a_i<a_l)-(a_r<a_i<a_l)))}+1$\r\n\r\n$=\\sum\\limits_{l<i<r}{2(a_r<a_i<a_l)+1}$\r\n\r\n\u4e5f\u5c31\u662f\u67e5\u627e\u533a\u95f4\u5185\u7684\u6307\u5b9a\u503c\u57df\u5185\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u53ef\u4ee5\u901a\u8fc7\u66b4\u529b\u679a\u4e3e\u4ee5 $O(n^3)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u62ff\u5230 $10$ \u5206\uff08\u8fd9\u91cc\u540c\u65f6\u8fd8\u80fd\u8bc1\u660e\u5728\u8fd9\u6837\u7684\u9009\u62e9\u4e0b\u8d21\u732e\u4e00\u5b9a\u4e3a\u6b63\uff0c\u53cd\u4e4b\u4e3a\u8d1f\uff09\u3002\r\n### $80$ \u5206\u505a\u6cd5\r\n\u9996\u5148\u8003\u8651\u8d2a\u5fc3\u3002\r\n\r\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5047\u8bbe\u5f53\u524d\u6700\u4f18\u89e3\u662f $(l,r)$\uff0c\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u4f4d\u7f6e $l_0$ \u6ee1\u8db3 $l_0<l$ \u4e14 $a_{l_0}>a_l$\uff0c\u5219\u65e0\u8bba\u662f\u533a\u95f4\u8fd8\u662f\u503c\u57df\uff0c\u90fd\u4f1a\u6bd4\u539f\u6765\u5927\uff0c\u6240\u4ee5\u65b9\u6848\u7684 $(l_0,r)$ \u662f\u7edd\u5bf9\u4e0d\u52a3\u4e8e $(l,r)$ \u7684\uff0c\u5bf9\u4e8e\u53f3\u7aef\u70b9\uff0c\u76f8\u540c\u7684\u601d\u8def\uff0c\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u4f4d\u7f6e $r_0$ \u6ee1\u8db3 $r_0>r$ \u4e14 $a_{r_0}<a_r$\uff0c\u5219 $(l,r_0)$ \u66f4\u4f18\u3002\u6240\u4ee5\uff0c\u6700\u4f18\u65b9\u6848 $(l,r)$ \u4e00\u5b9a\u6ee1\u8db3\u4e0d\u5b58\u5728\u4efb\u610f\u4e00\u4e2a\u4f4d\u7f6e $x$\uff0c\u6ee1\u8db3 $x<l$ \u4e14 $a_x>a_l$\uff0c\u6216\u8005 $x>r$ \u4e14 $a_x<a_r$\u3002\u8fd9\u7b49\u540c\u4e8e\uff1a**$a_l$ \u662f\u524d\u7f00\u6700\u5927\u503c\uff0c$a_r$ \u662f\u540e\u7f00\u6700\u5c0f\u503c\u3002** \r\n\r\n\u6c42\u51fa\u6765\u8fd9\u4e2a\u6027\u8d28\u4e4b\u540e\uff0c\u6211\u4eec\u53ea\u80fd\u7f29\u5c0f\u53ef\u80fd\u7684\u65b9\u6848\u6570\uff0c\u679a\u4e3e\u533a\u95f4\u590d\u6742\u5ea6\u8fd8\u662f\u65e0\u6cd5\u7a81\u7834 $O(n^3)$\uff0c\u4f3c\u4e4e\u5e76\u6ca1\u6709\u7528\u3002\u4f46\u5176\u7528\u5904\u7279\u522b\u5927\uff0c\u56e0\u4e3a\u5b83\u4e3a\u6211\u4eec\u786e\u5b9a\u4e86\u8fd9\u9898\u6700\u6838\u5fc3\u7684\u6027\u8d28\uff1a**\u5355\u8c03\u6027**\u3002\u5373\u5b83\u4eec\u5728\u5e8f\u5217\u4e2d\u5404\u81ea\u5355\u8c03\u9012\u589e\u3002\r\n\r\n\u5355\u8c03\u6027\u5728\u533a\u95f4\u4e0a\u6ca1\u7528\uff0c\u4e0d\u5982\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a\u5143\u7d20 $a_i$ \u4f1a\u5bf9\u54ea\u4e00\u4e9b\u65b9\u6848\u4f1a\u4ea7\u751f\u8d21\u732e\u3002\u7531\u4e0a\u9762\u7684\u5f0f\u5b50\u5f97\u5230\uff0c$a_i$ \u4f1a\u5bf9 $(l,r)$ \u4ea7\u751f\u8d21\u732e\uff0c\u5f53\u4e14\u4ec5\u5f53\uff1a$l<i<r$ \u4e14 $a_i>a_r$ \u4e14 $a_i<a_l$\u3002\u7136\u540e\uff0c\u6211\u4eec\u60ca\u5947\u7684\u53d1\u73b0\uff0c$a_l$ \u548c $a_r$ \u90fd\u662f\u5177\u5907\u5355\u8c03\u6027\u7684\uff0c\u8fd9\u5c31\u8bf4\u660e\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u5143\u7d20\u594f\u6548\u7684\u65b9\u6848\u5bf9\u5e94\u7684\u5de6\u7aef\u70b9\u4f1a\u5f62\u6210\u4e00\u4e2a\u533a\u95f4\uff0c\u53f3\u7aef\u70b9\u4e5f\u662f\u5982\u6b64\uff0c\u627e\u5230\u8fd9\u4e24\u6bb5\u533a\u95f4\u53ea\u9700 $O(\\log n)$ \u7684\u590d\u6742\u5ea6\u3002\u90a3\u4e48\u505a\u6cd5\u5f88\u663e\u7136\u4e86\uff1a\u5c06\u5de6\u7aef\u70b9\u89c6\u4e3a $y$ \u8f74\uff0c\u53f3\u7aef\u70b9\u89c6\u4e3a $x$ \u8f74\uff0c\u5219\u5355\u4e2a\u5143\u7d20\u7684\u8d21\u732e\u53ef\u4ee5\u89c6\u4f5c\u4e00\u4e2a\u6743\u503c\u4e3a $2$ \u77e9\u5f62\uff0c\u6bcf\u4e2a\u65b9\u6848\u5c31\u662f\u4e00\u4e2a\u70b9\uff0c\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u6700\u5927\u77e9\u5f62\u8986\u76d6\uff0c\u53ef\u4ee5\u7528\u626b\u63cf\u7ebf\u52a0\u4e0a\u7ebf\u6bb5\u6811\u89e3\u51b3\uff0c\u590d\u6742\u5ea6 $O(n\\log{n})$\u3002\r\n\r\n### $100$ \u5206\u505a\u6cd5\r\n\r\n\u5728\u5206\u6790\u5b8c\u4e86\u4ee5\u4e0a\u505a\u6cd5\u540e\uff0c\u6ee1\u5206\u505a\u6cd5\u4e5f\u5c31\u7b80\u5355\u4e86\u3002\u5c31\u662f\u5728\u5206\u6790\u8fc7\u7a0b\u4e2d\u52a0\u5165 $i\\neq j$ \u4e14 $a_i=a_j$ \u7684\u60c5\u51b5\u3002\u5728\u8fc7\u7a0b\u4e2d\u4f9d\u6b21\u589e\u52a0\u4e00\u7c7b\u8ba8\u8bba\u5c31\u884c\u4e86\uff1a\r\n- \u7aef\u70b9\u9009\u62e9\uff1a\u5982\u679c\u9009\u5b9a\u4e86\u4e24\u4e2a\u6570 $a_l=a_r(l<r)$\uff0c\u5219\u4ea4\u6362\u540e\u7684\u8d21\u732e\u4e3a $0$\uff0c\u7edd\u5bf9\u6ca1\u6709 $a_l>a_r$ \u65f6\u9ad8\u3002\u4f46\u6bd4 $a_l<a_r$ \u65f6\u9ad8\u3002\u6240\u4ee5\u4f18\u5148\u9009\u7b2c\u4e8c\u79cd\uff0c\u5176\u6b21\u9009\u7b2c\u4e00\u79cd\uff0c\u518d\u6b21\u9009\u7b2c\u4e09\u79cd\u3002\r\n- \u8d21\u732e\u8ba1\u7b97\uff0c\u90a3\u5c31\u4f1a\u591a\u51fa\u4e24\u79cd\u60c5\u51b5 $a_i=a_l$\uff0c\u6216 $a_i=a_r$\u3002\u8fd9\u4e24\u79cd\u60c5\u51b5\u90fd\u53ea\u4f1a\u6709 $1$ \u7684\u8d21\u732e\uff0c\u8d21\u732e\u53d8\u4e3a $\\sum\\limits_{l<i<r}{(2(a_r<a_i<a_l)-(a_i=a_l)-(a_i=a_r))+1}$\u3002\r\n- \u8d2a\u5fc3\u90e8\u5206\uff0c\u9700\u8981\u8bb0\u5f55\u7684\u65b9\u6848\u7684\u5de6\u53f3\u7aef\u70b9\u5e94\u8be5\u5206\u522b\u4e3a\u4e25\u683c\u524d\u7f00\u6700\u5927\u503c\u548c\u4e25\u683c\u540e\u7f00\u6700\u5c0f\u503c\uff08\u60f3\u4e00\u60f3\uff0c\u4e3a\u4ec0\u4e48\uff09\u3002\r\n\r\n\u5230\u6b64\u8fd9\u9053\u9898\u5c31\u505a\u5b8c\u4e86\uff0c\u4ee3\u7801\u7ec6\u8282\u8fd8\u662f\u4e0d\u5c11\u7684\uff0c\u9700\u8981\u81ea\u5df1\u5b9e\u8df5\u3002\u6b64\u5916\uff0c\u8fd9\u9898\u8fd8\u6709\u5206\u6cbb\u7684\u505a\u6cd5\uff0c\u9759\u5019 dl \u4eec\u8bb2\u89e3\u3002\r\n\r\n```cpp\r\n#include<bits/stdc++.h>\r\n#define I using\r\n#define AK namespace \r\n#define IOI std \r\nI AK IOI;\r\ninline int read(){int s=0,w=1;char c=getchar();while(c<48||c>57) {if(c=='-') w=-1;c=getchar();}while(c>=48&&c<=57) s=(s<<1)+(s<<3)+c-48,c=getchar();return s*w;}\r\n#define ll long long\r\n#define pf printf\r\n#define cf scanf\r\n#define rt return\r\n#define pb push_back\r\n#define fr(x,y,z) for(int (x)=(y);(x)<=(z);(x)++)\r\n#define mid (l+r>>1)\r\n#define lc x<<1,l,mid\r\n#define rc x<<1|1,mid+1,r\r\n#define search(x) for(int i=h[x];i;i=nxt[i])\r\nconst int mod=1e9+7;\r\nconst int N=1e5+5;\r\nint n,a[N],b[N],lm[N],rm[N],cntl,cntr;\r\nint s[N],top;\r\nbool f;\r\nll sum,ans;\r\nstruct node{\r\n\tint x,l,r,w;\r\n}t[N*4];\r\nint tmp,cnt;\r\nstruct seg{ll w,lazy;}xd[N*4];\r\nvoid getup(int x){\r\n\txd[x].w=max(xd[x<<1].w,xd[x<<1|1].w);\r\n}\r\nvoid pushdown(int x){\r\n\tint laz=xd[x].lazy,L=x<<1,R=x<<1|1;\r\n\txd[L].w+=laz,xd[L].lazy+=laz,xd[R].w+=laz,xd[R].lazy+=laz;\r\n\txd[x].lazy=0;\r\n}\r\nvoid modify(int x,int l,int r,int L,int R,int k){\r\n\tif(R<l||L>r)return;\r\n\tif(l>=L&&r<=R){xd[x].w+=k,xd[x].lazy+=k;rt;}\r\n\tpushdown(x);\r\n\tmodify(lc,L,R,k),modify(rc,L,R,k);\r\n\tgetup(x);\r\n}\r\nvoid cdq(int l,int r){\r\n\tif(l>=r)rt;\r\n\tcdq(l,mid),cdq(mid+1,r);\r\n\tsort(b+l,b+mid+1),sort(b+mid+1,b+r+1);\r\n\tint L=mid,R=r;\r\n\tfor(;R>=mid+1;R--){\r\n\t\twhile(L>=l&&b[L]>b[R])L--;\r\n\t\tsum+=mid-L;\r\n\t}\r\n}\r\nbool cmp(node a,node b){\r\n\trt a.x<b.x;\r\n}\r\nint findL(int x){\r\n\tint l=1,r=cntl,ans=cntl+1;\r\n\twhile(l<=r){\r\n\t\tif(a[lm[mid]]>=a[x])ans=mid,r=mid-1;\r\n\t\telse l=mid+1;\r\n\t}\r\n\treturn ans;\r\n}\r\nint findR(int x){\r\n\tint l=1,r=cntr,ans=0;\r\n\twhile(l<=r){\r\n\t\tif(a[rm[mid]]<=a[x])ans=mid,l=mid+1;\r\n\t\telse r=mid-1;\r\n\t}\r\n\treturn ans;\r\n}\r\nint main(){\r\n\t//freopen(\"sort.in\",\"r\",stdin);\r\n\t//freopen(\"sort.out\",\"w\",stdout);\r\n\tn=read();\r\n\tfr(i,1,n)b[i]=a[i]=read();\r\n\tcdq(1,n);\r\n\tif(sum==0){\r\n\t\tsort(a+1,a+n+1);\r\n\t\tfr(i,1,n-1)if(a[i]==a[i+1]){\r\n\t\t\tcout <<0<<endl;\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tcout <<1<<endl;\r\n\t\treturn 0;\r\n\t}\r\n\tfor(int i=n;i>=1;i--){\r\n\t\twhile(top&&a[s[top]]<=a[i])top--;\r\n\t\ts[++top]=i;\r\n\t}\r\n\twhile(top)lm[++cntl]=s[top--];\r\n\tfr(i,1,n){\r\n\t\twhile(top&&a[s[top]]>=a[i])top--;\r\n\t\ts[++top]=i;\r\n\t}\r\n\tfr(i,1,top)rm[++cntr]=s[i];\r\n\tfr(i,1,n){\r\n\t\tint sl=findL(i),el=lower_bound(lm+1,lm+cntl+1,i)-lm-1,sr=upper_bound(rm+1,rm+cntr+1,i)-rm,er=findR(i);\r\n\t\tif(sl>el||sr>er||lm[sl]==i||rm[er]==i)continue;\r\n\t\tif(a[lm[sl]]==a[i]&&er-(a[rm[er]]==a[i])>=sr){\r\n\t\t\tt[++cnt]=node{sl,sr,er-(a[rm[er]]==a[i]),1};\r\n\t\t\tt[++cnt]=node{sl+1,sr,er-(a[rm[er]]==a[i]),-1};\t\r\n\t\t}\r\n\t\tif(a[lm[sl]]==a[i])sl++;\r\n\t\tif(sl>el)continue;\r\n\t\tif(a[rm[er]]==a[i]){\r\n\t\t\tt[++cnt]=node{sl,er,er,1};\r\n\t\t\tt[++cnt]=node{el+1,er,er,-1};\r\n\t\t\ter--;\r\n\t\t}\r\n\t\tif(sr<=er){\r\n\t\t\tt[++cnt]=node{sl,sr,er,2};\r\n\t\t\tt[++cnt]=node{el+1,sr,er,-2};\r\n\t\t}\r\n\t}\r\n\tsort(t+1,t+cnt+1,cmp);\r\n\ttop=1;\r\n\tfor(int i=1;i<=cntl;i++){\r\n\t\twhile(top<=cnt&&t[top].x==i){\r\n\t\t\tmodify(1,1,cntr,t[top].l,t[top].r,t[top].w);\r\n\t\t\ttop++;\r\n\t\t}\r\n\t\tans=max(ans,xd[1].w);\r\n\t}\r\n\tcout <<sum-ans-1<<endl;\r\n\treturn 0;\r\n}\r\n```\r\n",
        "postTime": 1685438743,
        "uid": 565742,
        "name": "\u672a\u6765\u59da\u73edzyl",
        "ccfLevel": 5,
        "title": "\u30d0\u30d6\u30eb\u30bd\u30fc\u30c8 (Bubble Sort) \u9898\u89e3"
    }
]