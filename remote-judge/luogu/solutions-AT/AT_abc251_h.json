[
    {
        "content": "# [[ABC251Ex] Fill Triangle](https://www.luogu.com.cn/problem/AT_abc251_h) Solution\n\n[TOC]\n\n## [\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u6233\u6b64\u8fdb\u5165](http://blog.tsawke.com?t=ABC251Ex)\n\n## \u9898\u9762\n\n\u5b58\u5728\u5e8f\u5217 $ a_n $\uff0c\u5c06\u5176\u538b\u7f29\u540e\u7ed9\u5b9a\u3002\u5177\u4f53\u5730\uff0c\u7ed9\u5b9a\u5e8f\u5217 $ P $ \u4ee5\u5982\u4e0b\u5f62\u5f0f\uff1a$ ((a_1, c_1), (a_2, c_2), \\cdots, (a_m, c_m)) $\uff0c\u8868\u793a\u5e8f\u5217 $ a $ \u4e2d\u6709 $ c_1 $ \u4e2a $ a_1 $\uff0c$ c_2 $ \u4e2a $ a_2 $\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u4e14\u6309\u5e8f\u62fc\u63a5\u3002\u4ee4\u5e8f\u5217 $ a_n $ \u4e3a\u4e09\u89d2\u91d1\u5b57\u5854 $ B $ \u7684\u7b2c $ n $ \u5c42\uff0c\u5373 $ B(n, i) = a_i $\u3002\u7279\u522b\u5730\uff0c\u8be5\u4e09\u89d2\u91d1\u5b57\u5854\u7684\u9012\u63a8\u5f0f\u4e3a $ B(i, j) = (B(i + 1, j) + B(i + 1, j + 1)) \\bmod{7} $\u3002\u7ed9\u5b9a $ k $\uff0c\u6c42\u8be5\u4e09\u89d2\u91d1\u5b57\u5854\u7b2c $ k $ \u5c42\u7684\u5e8f\u5217\u3002\n\n## Solution\n\n\u9996\u5148\u53ef\u4ee5\u5c1d\u8bd5\u968f\u610f\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217 $ a_n $ \u5e76\u6253\u8868\uff0c\u6216\u624b\u63a8\u4e00\u4e0b\uff0c\u5047\u8bbe $ n = 5 $\uff0c\u6709\uff1a\n\n| $ a_1 + 4a_2 + 6a_3 + 4a_4 + a_5 $ |                             |                      |               |         |\n| :--------------------------------: | :-------------------------: | :------------------: | :-----------: | :-----: |\n|    $ a_1 + 3a_2 + 3a_3 + a_4 $     | $ a_2 + 3a_3 + 3a_4 + a_5 $ |                      |               |         |\n|        $ a_1 + 2a_2 + a_3 $        |    $ a_2 + 2a_3 + a_4 $     | $ a_3 + 2a_4 + a_5 $ |               |         |\n|           $ a_1 + a_2 $            |        $ a_2 + a_3 $        |    $ a_3 + a_4 $     | $ a_4 + a_5 $ |         |\n|              $ a_1 $               |           $ a_2 $           |       $ a_3 $        |    $ a_4 $    | $ a_5 $ |\n\n\u4e0d\u96be\u53d1\u73b0\u8fd9\u73a9\u610f\u6bcf\u4e00\u9879\u5b9e\u9645\u4e0a\u5c31\u662f\u4e8c\u9879\u5f0f\u7cfb\u6570\uff0c\u6216\u8005\u8bf4\u6768\u8f89\u4e09\u89d2\u3002\u5e76\u4e14\u8fd8\u80fd\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u884c\u7684\u5143\u7d20\uff0c\u5b83\u4eec\u7684\u7cfb\u6570\u5747\u76f8\u540c\uff0c\u4e0d\u540c\u7684\u53ea\u662f\u5c06\u4e0b\u6807\u6574\u4f53\u5411\u53f3\u5e73\u79fb\u4e86\u4e00\u4f4d\u3002\n\n\u6b64\u65f6\u6211\u4eec\u4fbf\u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a\u6027\u8d28\uff0c\u6c42\u51fa\u5bf9\u4e8e\u7b2c $ k $ \u5c42\uff0c\u7b2c $ x $ \u5217\u7684\u5143\u7d20\uff0c\u6709\uff1a\n$$\nB(k, x) = \\sum_{i = 0}^{n - k}{n - k \\choose i} a_{x + i} \\bmod{7}\n$$\n\u663e\u7136\u6211\u4eec\u60f3\u8981\u7b97\u51fa $ k $ \u5c42\u7684\u6240\u6709\u5143\u7d20\uff0c\u4f46\u662f\u76f4\u63a5\u5957\u8fd9\u4e2a\u5f0f\u5b50\u66b4\u529b\u7b97\u662f\u80af\u5b9a\u8fc7\u4e0d\u4e86\u7684\u3002\u8003\u8651\u4f18\u5316\u3002\n\n\u663e\u7136\u5e8f\u5217 $ a $ \u662f\u7531\u4e00\u6bb5\u4e00\u6bb5\u7684\u76f8\u540c\u5143\u7d20\u6784\u6210\u7684\uff0c\u800c\u6211\u4eec\u7684\u67e5\u8be2\u5c31\u662f\u5728 $ a $ \u91cc\u7684\u67e5\u8be2\u4e00\u4e2a\u533a\u95f4\u7136\u540e\u6309\u5e8f\u5c06\u7ec4\u5408\u6570\u4e58\u4e0a\u53bb\u3002\u5f53\u6211\u4eec\u4ece $ B(k, x) $ \u5230 $ B(k, x + 1) $ \u7684\u65f6\u5019\uff0c\u901a\u8fc7\u6211\u4eec\u4e4b\u524d\u7684\u7ed3\u8bba\u53ef\u77e5\u9700\u8981\u5c06\u4e0b\u6807\u5411\u53f3\u5e73\u79fb\u4e00\u4f4d\uff0c\u800c\u6240\u6709\u7ec4\u5408\u6570\u7684\u503c\u4e0d\u53d8\uff0c\u5927\u6982\u7684\u8fc7\u7a0b\u5982\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/6zz02mwp.png)\n\n\u89c2\u5bdf\u53d1\u73b0\uff0c\u8fd9\u4e2a\u4e1c\u897f\u5e73\u79fb\u4e4b\u540e\uff0c\u5bf9\u4e8e\u5927\u591a\u6570\u7684 $ {n - k \\choose i} \\times a_{x + i} $ \u53d8\u6210 $ {n - k \\choose i} \\times a_{x + i + 1} $\uff0c\u90fd\u5b58\u5728 $ a_{x + i} = a_{x + i + 1} $\uff0c\u800c\u5bf9\u4e8e\u8fd9\u4e9b\u7684\u8d21\u732e\u662f\u5b8c\u5168\u4e0d\u53d8\u7684\u3002\u4e0d\u96be\u60f3\u5230\u8fd9\u4e2a\u53d8\u5316\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u6700\u591a\u662f $ O(m) $ \u7684\u3002\u6240\u4ee5\u5f53\u6211\u4eec\u786e\u5b9a\u4e86 $ B(k, 1) $ \u4e4b\u540e\uff0c\u540e\u9762\u7684 $ B(k, 2) $ \u5230 $ B(k, k) $ \u5c31\u90fd\u53ef\u4ee5\u6bcf\u6b21 $ O(m) $ \u6c42\u89e3\uff0c\u6545\u8fd9\u6b65\u7684\u590d\u6742\u5ea6\u4f18\u5316\u4e3a $ O(mk) $\u3002\n\n\u5177\u4f53\u5730\u5f53\u6211\u4eec\u79fb\u52a8\u8be2\u95ee\u533a\u95f4\u7684\u65f6\u5019\uff0c\u904d\u5386\u6240\u6709\u6bb5\uff0c\u5982\u679c\u67d0\u4e00\u6bb5\u7684\u53f3\u7aef\u70b9\u5728\u5f53\u524d\u533a\u95f4\u5185\uff0c\u90a3\u4e48\u663e\u7136\u6307\u5411\u8fd9\u4e00\u6bb5\u7684\u7ec4\u5408\u6570\u4f1a\u79fb\u52a8\u5230\u4e0b\u4e00\u6bb5\u4e2d\uff0c\u6240\u4ee5\u9700\u8981\u51cf\u6389\u524d\u9762\u7684\u52a0\u4e0a\u73b0\u5728\u7684\u3002\u6ce8\u610f\u79fb\u52a8\u8fd9\u6b65\u5b9e\u9645\u4e0a\u662f $ O(mk \\log n) $ \u7684\uff0c\u800c\u4e14\u8fd9\u53ea $ \\log $ \u4e0d\u5c0f\uff0c\u6240\u4ee5\u4f1a TLE\uff0c\u5219\u6211\u4eec\u8003\u8651\u9884\u5904\u7406 Lucas\u3002\u663e\u7136\u76f4\u63a5\u9884\u5904\u7406 $ 10^9 $ \u8303\u56f4\u80af\u5b9a\u4e0d\u884c\uff0c\u4e8e\u662f\u8fd9\u91cc\u6709\u4e2a\u9ad8\u5999\u7684\u601d\u8def\uff0c\u6211\u4eec\u672c\u8eab\u7684\u6a21\u6570\u4e3a $ 7 $\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5148\u8ba9\u503c\u5bf9 $ 7^k $ \u53d6\u6a21\uff0c\u7136\u540e\u518d\u5bf9 $ 7 $ \u53d6\u6a21\uff0c\u8fd9\u4e2a\u663e\u7136\u662f\u7b49\u4ef7\u7684\u3002\u800c\u5982\u679c\u6211\u4eec\u641e\u4e00\u4e2a $ 10^5 $ \u5de6\u53f3\u7684 $ 7^k $ \u7684\u8bdd\uff0c\u90a3\u4e48\u4e00\u6b65 Lucas \u4e4b\u540e\u9700\u8981\u6c42\u7684\u7ec4\u5408\u6570\u5c31\u90fd\u5728 $ 10^5 $ \u4ee5\u5185\u4e86\uff0c\u6240\u4ee5\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53ea\u9700\u8981\u9884\u5904\u7406 $ 10^5 $ \u4ee5\u5185\u7684\u7ec4\u5408\u6570\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u6b21\u6c42 Lucas \u76f4\u63a5\u62c6\u4e00\u6b21\u4f46\u662f\u4e0d\u9012\u5f52\uff0c\u76f4\u63a5\u67e5\u503c\u4e58\u8d77\u6765\u53d6\u6a21\u5373\u53ef\uff0c\u8fd9\u6837\u590d\u6742\u5ea6\u5c31\u662f $ O(1) $ \u4e86\uff0c\u6216\u8005\u8bf4 $ O(2) $\uff0c\u4e8e\u662f\u590d\u6742\u5ea6\u4f1a\u53d8\u6210 $ O(mk) $\u3002\u540c\u65f6\u4e0d\u96be\u53d1\u73b0\uff0c\u5b58\u5728 $  $\n\n\u4e8e\u662f\u73b0\u5728\u7684\u95ee\u9898\u5c31\u4ec5\u5269\u5982\u4f55\u6c42 $ B(k, 1) $\uff0c\u4e5f\u5c31\u662f\u6c42\uff1a\n$$\n\\sum_{i = 0}^{n - k}{n - k \\choose i} a_{i + 1} \\bmod{7}\n$$\n\u9996\u5148\u8fd8\u662f\u8003\u8651\u4e4b\u524d\u7684\u601d\u8def\uff0c\u4e00\u5b9a\u4f1a\u6709\u5f88\u591a\u6bb5\u7684\u76f8\u540c\u7684 $ a $\uff0c\u5047\u8bbe\u6211\u4eec\u5b58\u5728\u4e00\u6bb5 $ [l, r] $ \u6ee1\u8db3 $ \\forall i \\in [l, r), a_i = a_{i + 1} $\uff0c\u90a3\u4e48\u663e\u7136\u6b64\u5904\u7684\u503c\u5373\u4e3a\uff1a\n$$\n\\sum_{i = l - 1}^{r - 1}{n - k \\choose i}a_{i + 1} \\bmod{7}\n$$\n\u6240\u4ee5\u8fd9\u4e2a\u4e1c\u897f\u663e\u7136\u9700\u8981\u5feb\u901f\u5904\u7406\u4e00\u6bb5\u7ec4\u5408\u6570\uff0c\u53ef\u4ee5\u8003\u8651\u505a\u4e00\u4e2a\u7ec4\u5408\u6570\u7684\u524d\u7f00\u548c\uff0c\u8fd9\u6837\u5373\u53ef $ O(1) $ \u67e5\u8be2\u4e00\u6bb5\u7ec4\u5408\u6570\u7684\u6c42\u548c\uff0c\u7136\u540e\u4e58\u4e0a $ a_l $ \u5373\u53ef\uff0c\u8fd9\u6837\u6bcf\u6b21\u7684\u590d\u6742\u5ea6\u4e5f\u5c31\u662f $ O(m) $ \u4e86\u3002\u5f53\u7136\u6211\u4eec\u80af\u5b9a\u4e0d\u80fd\u5bf9\u4e8e $ n - k $ \u4ee5\u5185\u7684\u6bcf\u4e2a\u6570\u6c42\u524d\u7f00\u548c\uff0c\u6240\u4ee5\u53ef\u4ee5\u5bf9 $ m $ \u6bb5\u76f8\u540c\u7684\u5206\u522b\u6c42\u51fa\u5bf9\u5e94\u7684\u524d\u7f00\u548c\uff0c\u7136\u540e\u67e5\u8be2\u5373\u53ef\u3002\u6c42\u7684\u65f6\u5019\u524d\u9762\u6bb5\u7684\u76f4\u63a5\u6c42\u548c\uff0c\u6700\u540e\u5269\u4e0b\u7684\u4e0d\u8db3\u4e00\u6bb5\u7684\u5355\u72ec\u8ba1\u7b97\u5373\u53ef\u3002\n\n\u4e8e\u662f\u73b0\u5728\u95ee\u9898\u518d\u6b21\u8f6c\u5316\u4e3a\u5982\u4f55\u5feb\u901f\u6c42\u8fd9\u79cd\u5f62\u5f0f\u7684\u7ec4\u5408\u6570\u524d\u7f00\u548c\uff0c\u53ef\u4ee5\u53c2\u8003\u8be5\u9898\uff1a[LG-P4345 [SHOI2015]\u8d85\u80fd\u7c92\u5b50\u70ae\u00b7\u6539](https://www.luogu.com.cn/problem/P4345)\u3002\n\n\u5177\u4f53\u5730\uff0c\u5bf9\u4e8e\u6c42 $ F(n, k) = \\sum_{i = 0}^k {n \\choose i} \\bmod p $\uff0c\u4e14 $ p $ \u4e3a\u8d28\u6570\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u901a\u8fc7 Lucas \u8fdb\u884c\u5904\u7406\uff08\u540e\u9762\u7684\u5f0f\u5b50\u6700\u7ec8\u90fd\u9700\u8981\u53d6\u6a21\uff0c\u8fd9\u91cc\u7701\u7565\uff09\uff1a\n$$\n\\begin{aligned}\n\t\\sum_{i = 0}^k {n \\choose i} \\bmod p\n\t&= \\sum_{i = 0}^k {\\lfloor \\dfrac{n}{p} \\rfloor \\choose \\lfloor \\dfrac{i}{p} \\rfloor} \\times {n \\bmod{p} \\choose i \\bmod{p}}\n\\end{aligned}\n$$\n\u7136\u540e\u53d1\u73b0\u5bf9\u4e8e\u524d\u9762\u7684 $ \\lfloor \\dfrac{i}{p} \\rfloor $\uff0c\u8fd9\u4e2a\u5c31\u662f\u4e2a\u6570\u8bba\u5206\u5757\uff0c\u4e5f\u53ef\u4ee5\u6309\u7167\u8fd9\u4e2a\u601d\u60f3\uff0c\u5c06\u539f\u5f0f\u5316\u4e3a\uff1a\n$$\n{\\lfloor \\dfrac{n}{p} \\rfloor \\choose 0}\\sum_{i = 0}^{p - 1} {n \\bmod{p} \\choose i \\bmod{p}} + {\\lfloor \\dfrac{n}{p} \\rfloor \\choose 1}\\sum_{i = 0}^{p - 1} {n \\bmod{p} \\choose i \\bmod{p}} + \\cdots + {\\lfloor \\dfrac{n}{p} \\rfloor \\choose \\lfloor \\dfrac{k}{p} \\rfloor - 1}\\sum_{i = 0}^{p - 1} {n \\bmod{p} \\choose i \\bmod{p}} + {\\lfloor \\dfrac{n}{p} \\rfloor \\choose \\lfloor \\dfrac{k}{p} \\rfloor}\\sum_{i = 0}^{k \\bmod{p}} {n \\bmod{p} \\choose i \\bmod{p}}\n$$\n\u7136\u540e\u7ee7\u7eed\u8f6c\u5316\uff1a\n$$\n\\sum_{i = 0}^{p - 1} {n \\bmod{p} \\choose i \\bmod{p}} \\times \\sum_{i = 0}^{\\lfloor \\dfrac{k}{p} \\rfloor - 1}{\\lfloor \\dfrac{n}{p} \\rfloor \\choose i} + {\\lfloor \\dfrac{n}{p} \\rfloor \\choose \\lfloor \\dfrac{k}{p} \\rfloor}\\sum_{i =0}^{k \\bmod{p}} {n \\bmod{p} \\choose i \\bmod{p}}\n$$\n\u6b64\u65f6\u5bf9\u6bd4\u6211\u4eec\u4e4b\u524d\u8bbe\u7684 $ F(n, k) = \\sum_{i = 0}^k {n \\choose i} \\bmod p $\uff0c\u6240\u4ee5\u539f\u5f0f\u53ef\u4ee5\u518d\u6b21\u5316\u4e3a\uff1a\n$$\nF(n \\bmod{p}, p - 1) \\times F(\\lfloor \\dfrac{n}{p} \\rfloor, \\lfloor \\dfrac{k}{p} \\rfloor - 1) + {\\lfloor \\dfrac{n}{p} \\rfloor \\choose \\lfloor \\dfrac{k}{p} \\rfloor} \\times F(n \\bmod{p}, k \\bmod{p})\n$$\n\u7136\u540e\u6211\u4eec\u53ea\u8981\u968f\u4fbf\u4e0e\u5904\u7406\u4e00\u4e0b $ p $ \u4ee5\u5185\u7684 $ F $\uff0c\u8fd9\u6837 $ F(n \\bmod{p}, p - 1) $ \u548c $ F(n \\bmod{p}, k \\bmod{p}) $ \u5373\u53ef $ O(1) $ \u67e5\u8868\uff0c\u7136\u540e\u7ec4\u5408\u6570\u76f4\u63a5\u7528 Lucas \u66b4\u529b\u7b97\u4e00\u4e0b\u5373\u53ef\uff0c\u5bf9\u4e8e $ F(\\lfloor \\dfrac{n}{p} \\rfloor, \\lfloor \\dfrac{k}{p} \\rfloor - 1) $ \u9012\u5f52\u4e0b\u53bb\u5373\u53ef\u3002\n\n\u8003\u8651\u8fd9\u4e2a\u4e1c\u897f\u7684\u590d\u6742\u5ea6\uff0c\u7528\u4e3b\u5b9a\u7406\u63a8\u5bfc\u4e00\u4e0b\u5373\u53ef\uff1a\n$$\nT(n) = T(\\lfloor \\dfrac{n}{p} \\rfloor) + f(n)\n$$\n$ O(n) $ \u5904\u7406\u4e00\u4e0b\u7ec4\u5408\u6570\uff0c\u5219 $ f(n) $ \u7684\u590d\u6742\u5ea6\u53ea\u6709 Lucas \u7684\u4e00\u53ea $ \\log $\uff0c\u6240\u4ee5\u6700\u7ec8\u8fd9\u91cc\u5355\u6b21\u6c42\u89e3\u7684\u590d\u6742\u5ea6\u4e3a $ O(\\log^2 n) $\uff0c\u7136\u540e\u6211\u4eec\u8981\u5904\u7406 $ m $ \u4e2a\uff0c\u5219\u6700\u7ec8\u8fd9\u6b65\u7684\u590d\u6742\u5ea6\u4e3a $ O(m \\log^2 n) $\u3002\u6700\u7ec8\u590d\u6742\u5ea6\u4e3a $ O(mk + m \\log^2 n + k \\log n) $\uff0c\u663e\u7136\u80fd\u8fc7\u3002\n\n\u81f3\u6b64\u6211\u4eec\u5c31\u7ec8\u4e8e\u5b8c\u6210\u4e86\u8fd9\u9053\u9898\u3002\n\n## Code\n\n```cpp\n#define _USE_MATH_DEFINES\n#include <bits/stdc++.h>\n\n#define PI M_PI\n#define E M_E\n#define npt nullptr\n#define SON i->to\n#define OPNEW void* operator new(size_t)\n#define ROPNEW(arr) void* Edge::operator new(size_t){static Edge* P = arr; return P++;}\n\nusing namespace std;\n\nmt19937 rnd(random_device{}());\nint rndd(int l, int r){return rnd() % (r - l + 1) + l;}\nbool rnddd(int x){return rndd(1, 100) <= x;}\n\ntypedef unsigned int uint;\ntypedef unsigned long long unll;\ntypedef long long ll;\ntypedef long double ld;\n\n#define MOD (7)\n#define SPL (117649) //7^6\n\ntemplate < typename T = int >\ninline T read(void);\n\nint f[10][10];\nint N, M, K;\nint origin(0);\nint sumf[210];\nint lucas_div[SPL + 10], lucas_mod[SPL + 10];\nstruct Blk{int l, r; int val;} blk[210];\n\nint qpow(int a, int b){\n    int ret(1), mul(a);\n    while(b){\n        if(b & 1)ret = ret * mul % MOD;\n        b >>= 1;\n        mul = mul * mul % MOD;\n    }return ret;\n}\nint fact[10], inv[10];\nvoid Init(void){\n    fact[0] = 1;\n    for(int i = 1; i < MOD; ++i)fact[i] = fact[i - 1] * i % MOD;\n    inv[MOD - 1] = qpow(fact[MOD - 1], MOD - 2);\n    for(int i = MOD - 2; i >= 0; --i)inv[i] = inv[i + 1] * (i + 1) % MOD;\n}\nint GetC(int n, int m){\n    if(n < m)return 0;\n    return fact[n] * inv[m] % MOD * inv[n - m] % MOD;\n}\nint Lucas(ll n, ll m){\n    if(n < MOD && m < MOD)return GetC(n, m);\n    return Lucas(n / MOD, m / MOD) * GetC(n % MOD, m % MOD) % MOD;\n}\nint O1Lucas(ll m){\n    return (lucas_div[m / SPL] * lucas_mod[m % SPL]) % MOD;\n}\nvoid InitF(void){\n    for(int i = 0; i <= MOD - 1; ++i)f[i][0] = f[0][i] = 1;\n    for(int i = 1; i <= MOD - 1; ++i)\n        for(int j = 1; j <= MOD - 1; ++j)\n            f[i][j] = (f[i][j - 1] + Lucas(i, j)) % MOD;\n}\nint F(ll n, ll k){\n    if(n < 0 || k < 0)return 0;\n    if(n < MOD && k < MOD)return f[n][k];\n    return (f[n % MOD][MOD - 1] * F(n / MOD, k / MOD - 1) % MOD + Lucas(n / MOD, k / MOD) * f[n % MOD][k % MOD] % MOD) % MOD;\n}\n\nint main(){\n    Init(), InitF();\n    N = read(), M = read(), K = read();\n    for(int i = 0; i <= SPL; ++i)lucas_div[i] = Lucas((N - K) / SPL, i), lucas_mod[i] = Lucas((N - K) % SPL, i);\n    int curl(1);\n    for(int i = 1; i <= M; ++i)blk[i].val = read(), blk[i].l = curl, blk[i - 1].r = blk[i].l - 1, curl += read();\n    blk[M].r = N; int lim = N - K + 1;\n    for(int i = 1; i <= M; ++i)\n        sumf[i] = (F(N - K, blk[i].r - 1) - F(N - K, blk[i].l - 2) + MOD) % MOD;\n    for(int i = 1; i <= M; ++i){\n        int l = blk[i].l, r = blk[i].r;\n        if(l > lim)break;\n        if(r <= lim)(origin += sumf[i] * blk[i].val % MOD) %= MOD;\n        else (origin += (F(N - K, lim - 1) - F(N - K, l - 2) + MOD) % MOD * blk[i].val % MOD) %= MOD;\n    }printf(\"%d \", origin);\n    int cl = 1, cr = lim;\n    for(int i = 2; i <= K; ++i){\n        for(int m = 1; m <= M; ++m){\n            int r = blk[m].r;\n            if(cl <= r && r <= cr)\n                origin = (origin - O1Lucas(r - cl) * blk[m].val % MOD + O1Lucas(r - cl) * blk[m + 1].val % MOD + MOD) % MOD;\n        }++cl, ++cr;\n        printf(\"%d \", origin);\n    }printf(\"\\n\");\n    fprintf(stderr, \"Time: %.6lf\\n\", (double)clock() / CLOCKS_PER_SEC);\n    return 0;\n}\n\ntemplate < typename T >\ninline T read(void){\n    T ret(0);\n    int flag(1);\n    char c = getchar();\n    while(c != '-' && !isdigit(c))c = getchar();\n    if(c == '-')flag = -1, c = getchar();\n    while(isdigit(c)){\n        ret *= 10;\n        ret += int(c - '0');\n        c = getchar();\n    }\n    ret *= flag;\n    return ret;\n}\n```\n\n## UPD\n\nupdate-2022_12_02 \u521d\u7a3f\n\nupdate-2022_12_02 \u56fe\u7247\u65e5\u5e38\u88ab\u5899\uff0c\u6539\u6362\u6d1b\u8c37\u56fe\u5e8a",
        "postTime": 1669981972,
        "uid": 362938,
        "name": "Tsawke",
        "ccfLevel": 6,
        "title": "[ABC251Ex] Fill Triangle \u9898\u89e3"
    }
]