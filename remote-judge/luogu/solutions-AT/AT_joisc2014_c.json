[
    {
        "content": "## \u56de\u6eda\u83ab\u961f\n\u9002\u7528\u8303\u56f4\uff1a\n* \u95ee\u9898\u53ef\u4ee5\u83ab\u961f\u3002\uff08\u8be2\u95ee\u53ef\u4ee5\u79bb\u7ebf\uff0c\u4e0d\u5e26\u4fee\u6539\uff09\n* \u533a\u95f4\u4f38\u957f\u7684\u65f6\u5019\u5f88\u597d\u7ef4\u62a4\u4fe1\u606f\n* \u533a\u95f4\u7f29\u77ed\u7684\u65f6\u5019\u4e0d\u592a\u597d\u7ef4\u62a4\u4fe1\u606f\uff08\u5982\u6700\u5927\u503c\uff0c\u5220\u9664\u4ee5\u540e\u4e0d\u77e5\u9053\u6b21\u5927\u503c\u662f\u591a\u5c11)\n\n\u600e\u4e48\u505a\u5462\uff1f\n* \u9996\u5148\uff0c\u6211\u4eec\u628a\u8be2\u95ee\u6309\u7167\u83ab\u961f\u7684\u987a\u5e8f\u6392\u5e8f\n* \u8fd9\u6837\u8be2\u95ee\u88ab\u5206\u6210\u4e86\u82e5\u5e72\u4e2a\u6bb5\u843d\u3002\u6bcf\u6bb5\u5185\uff0c\u8be2\u95ee\u7684\u5de6\u7aef\u70b9\u5728\u540c\u4e00\u4e2a\u5757\uff0c\u53f3\u7aef\u70b9\u9012\u589e\u3002\n* \u6211\u4eec\u5206\u6bb5\u6765\u5904\u7406\uff1a\uff08\u8bbe\u8fd9\u4e00\u6bb5\u7684\u5de6\u7aef\u70b9\u4e3aL[i],\u53f3\u7aef\u70b9\u662fR[i]\n* \u6bcf\u4e00\u6bb5\u5f00\u59cb\u65f6\uff0c$l\\leftarrow R[i]+1,r\\leftarrow R[i]$\uff0c\u8868\u793a\u521d\u59cb\u7684\u7a7a\u533a\u95f4\u3002\n* \u82e5\u5de6\u53f3\u7aef\u70b9\u90fd\u5728\u8fd9\u4e2a\u5757\u5185\u7684\u8be2\u95ee\uff0c\u6211\u4eec\u76f4\u63a5\u66b4\u529b\uff0c\u663e\u7136$O(\\sqrt n)$\n* \u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u5047\u5b9a\u5bf9\u4e8e\u6240\u6709\u8be2\u95ee\uff0c\u5747\u6709$Q[j].r>R[i]$\n* \u6bcf\u5904\u7406\u4e00\u4e2a\u8be2\u95ee\uff0c\u6211\u4eec\u5148\u5c06r\u79fb\u52a8\u5230\u8be5\u8be2\u95ee\u7684\u53f3\u7aef\u70b9\uff0c\u4fdd\u5b58\u4e0b\u6765\u6b64\u65f6\u7684\u4fe1\u606f\u3002\n* \u5c06l\u79fb\u52a8\u5230\u8be2\u95ee\u7684\u5de6\u7aef\u70b9\uff0c\u6b64\u65f6\u53ef\u4ee5\u6c42\u51fa\u7b54\u6848\u3002\n* $l\\leftarrow R[i]+1$,\u7528\u521a\u624d\u4fdd\u5b58\u7684\u4fe1\u606f\u6765\u6062\u590d\u73b0\u573a\u3002\n  \n\u6bcf\u6bb5\u5185\uff0c\u53f3\u7aef\u70b9\u5355\u8c03\u9012\u589e\uff0c\u79fb\u52a8\u7684\u65f6\u95f4\u590d\u6742\u5ea6$O(n)$,\u4e00\u5171\u6709$\\sqrt n$\u6bb5\u3002\u5de6\u7aef\u70b9\u5728\u540c\u4e00\u5757\u5185\uff0c\u79fb\u52a8\u65f6\u95f4\u590d\u6742\u5ea6$O(\\sqrt n)$\uff0c\u4e00\u5171\u6709n\u4e2a\u5de6\u7aef\u70b9\u3002\u66b4\u529b\u5904\u7406\u5c0f\u6bb5\u8be2\u95ee\u590d\u6742\u5ea6$O(\\sqrt n)$\u3002\u6240\u4ee5\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(n\\sqrt n)$\uff0c\u4e0d\u53d8\u3002\u800c\u4e14\u53ef\u4ee5\u770b\u5230\uff0c\u6240\u6709\u7684\u64cd\u4f5c\u90fd\u662f\u5728\u6269\u5f20\u533a\u95f4\uff0c\u907f\u514d\u4e86\u6536\u7f29\u533a\u95f4\u7684\u9ebb\u70e6\uff0c\u53ef\u4ee5\u66f4\u65b9\u4fbf\u5730\u7ef4\u62a4\u4fe1\u606f\u3002\n\n\u4f8b\u9898\uff1a[AtCoder 1219 \u5386\u53f2\u7814\u7a76](https://www.luogu.org/problemnew/show/AT1219)\n\u4ee3\u7801\u5728\u8fd9\u91cc~\n```cpp\n#include <cstdio>\n#include <cmath>\n#include <cstdint>\n#include <cstring>\n#include <algorithm>\n\nusing std::sort;\nusing std::unique;\nusing std::lower_bound;\n\nconst int maxn=2e5+100;\n\nint a[maxn],b[maxn];\nint L[maxn],R[maxn],blo[maxn];\n\nstruct Qry\n{\n    int l,r,id;\n    bool operator< (const Qry& q){return blo[l]==blo[q.l]?r<q.r:l<q.l;}\n}Q[maxn];\n\ntemplate<class T>inline T max(T a,T b){return a<b?b:a;}\ntemplate<class T>inline T min(T a,T b){return a<b?a:b;}\n\nint cnt[maxn];\nint64_t tmp;\n\ninline void add(int x,int val=1)\n{\n    cnt[a[x]]+=val;\n    tmp=max(tmp,(int64_t)cnt[a[x]]*b[a[x]]);\n}\n\ninline int64_t brute_force(int l,int r)\n{\n    static int c[maxn];\n    int64_t ans=0;\n    for (int i=l;i<=r;++i) ++c[a[i]];\n    for (int i=l;i<=r;++i) ans=max(ans,(int64_t)c[a[i]]*b[a[i]]);\n    for (int i=l;i<=r;++i) --c[a[i]];\n    return ans;\n}\n\nint main()\n{\n    int n,q;\n    scanf(\"%d%d\",&n,&q);\n    for (int i=1;i<=n;++i)\n        scanf(\"%d\",a+i),b[i]=a[i];\n    for (int i=1;i<=q;++i)\n        scanf(\"%d%d\",&Q[i].l,&Q[i].r),Q[i].id=i;\n    sort(b+1,b+n+1);\n    int tot=unique(b+1,b+n+1)-b-1;\n    // for (int i=1;i<=tot;++i) printf(\"%d \",b[i]);\n    // putchar('\\n');\n    // printf(\"%d\\n\",tot);\n    for (int i=1;i<=n;++i)\n        a[i]=lower_bound(b+1,b+tot+1,a[i])-b;\n    int T=sqrt(n),bl=n/T;\n    for (int i=1;i<=bl;++i)\n        L[i]=R[i-1]+1,R[i]=L[i]+T-1;\n    if (R[bl]<n) ++bl,L[bl]=R[bl-1]+1,R[bl]=n;\n    for (int i=1;i<=n;++i)\n        blo[i]=(i-1)/T+1;\n    sort(Q+1,Q+q+1);\n    static int64_t ans[maxn];\n    for (int i=1,lp=1,r=0,l=0;i<=bl;++i)\n    {\n        memset(cnt,0,sizeof(cnt));\n        r=R[i];\n        tmp=0;\n        // for (l=L[i];l<=R[i];++l) add(l,-1);\n        while (blo[Q[lp].l]==i)\n        {\n            l=R[i]+1;\n            if (Q[lp].r-Q[lp].l<=T)\n            {\n                ans[Q[lp].id]=brute_force(Q[lp].l,Q[lp].r);\n                ++lp;\n                continue;\n            }\n            while (Q[lp].r>r) add(++r);\n            int64_t now=tmp;\n            while (l>Q[lp].l) add(--l);\n            ans[Q[lp].id]=tmp;\n            tmp=now;\n            while (l<=R[i]) --cnt[a[l++]];\n            ++lp;\n        }\n    }\n    for (int i=1;i<=q;++i) printf(\"%lld\\n\",ans[i]);\n}\n```\n",
        "postTime": 1561013370,
        "uid": 48711,
        "name": "_WA\u81ea\u52a8\u673a",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 AT1219 \u3010\u6b74\u53f2\u306e\u7814\u7a76\u3011"
    },
    {
        "content": "# \u524d\u8a00\n\n\u6ca1\u9519\u4eba\u624b\u4e00\u4efd\u83ab\u961f\uff0c\u4f46\u6211\u5c31\u662f$TLE$\n\n\u2191\u8003\u573a\u72b6\u6001\uff0c$QAQ$\n\n# \u9898\u76ee\n\n[\u6d1b\u8c37](https://www.luogu.com.cn/problem/AT1219)\n\n[USOJ](http://222.180.160.110:1024/problem/4881)\n\n# \u524d\u7f6e\u77e5\u8bc6\n\n\u666e\u901a\u83ab\u961f\n\n# \u8bb2\u89e3\n\n\u7531\u4e8e\u666e\u901a\u7684\u83ab\u961f\u53c8\u8981\u52a0\uff0c\u53c8\u8981\u51cf\uff0c\u4e0d\u597d\u5904\u7406\u53d8\u5c0f\u7684\u6700\u5927\u503c\uff0c\u5904\u7406\u7684\u8bdd\u5c31\u8981\u5e26$\\log$\uff0c\u7136\u540e\u5c31$TLE$\u4e86\n\n\u6240\u4ee5\u8981\u9ad8\u7ea7\u7684\uff1a**\u56de\u6eda\u83ab\u961f**\n\n\u671b\u6587\u751f\u4e49\uff1a\u5f80\u56de\u6eda\u7684\u83ab\u961f\n\n\u9996\u5148\u5206\u5757\uff0c\u628a\u8be2\u95ee\u533a\u95f4\u5148\u6309\u5de6\u7aef\u70b9\u7684\u5757\u6392\u5e8f\uff0c\u76f8\u540c\u6309\u53f3\u7aef\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n\n\u8fd9\u6837\u6392\u5e8f\u662f\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u5c31\u4e0b\u6765\u7684\u64cd\u4f5c\n\n\u63a5\u4e0b\u6765\u4f9d\u6b21\u5904\u7406\u6392\u5e8f\u540e\u7684\u8be2\u95ee\n\n\u628a\u83ab\u961f\u7684$l,r$\u653e\u5230\u5f53\u524d\u8be2\u95ee\u6240\u5c5e\u5757\u7684\u53f3\u7aef\u70b9\uff0c\u5047\u8bbe\u7ea2\u8272\u90e8\u5206\u662f\u8be2\u95ee\u533a\u95f4\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/qexw8m8f.png)\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ea\u7528\u6269\u5f20\uff0c\u6700\u5927\u503c\u5f53\u7136\u4e5f\u5f88\u597d\u6c42\n\n\u5230\u4e86\u7b2c\u4e8c\u4e2a\u8be2\u95ee(\u7eff\u8272)\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/0deopou8.png)\n\n\u5c3d\u7ba1$l$\u4e0d\u77e5\u9053\u5728\u54ea\u91cc\uff0c\u4f46\u5b83\u4e00\u5b9a\u5728\u8fd9\u4e2a\u5757\u91cc\u9762\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5~~\u9000~~\u6eda\u56de\u53f3\u7aef\u70b9\uff0c\u4f46$r$\u7531\u4e8e\u6211\u4eec\u662f\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u7684\uff0c\u4e0d\u9700\u8981\u56de\u9000\n\n\u800c\u4e0a\u56fe\u7684$l$\u5230$r$\u7684\u6700\u5927\u503c\u6211\u4eec\u662f\u53ef\u4ee5\u63d0\u524d\u8bb0\u5f55\u7684\n\n\u76f4\u63a5\u63a5\u7740\u8d70\u5c31\u884c\u4e86\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/s4qy4nqv.png)\n\n\u5bf9\u4e8e\u6bcf\u6b21\u64cd\u4f5c\uff0c$l$\u56de\u5230\u539f\u70b9\uff0c$r$\u63a5\u7740\u8d70\u5c31\u884c\u4e86\n\n\u5982\u679c\u6211\u4eec\u5f53\u524d\u8fd9\u4e2a\u8be2\u95ee\u7684\u5757\u662f\u4e0a\u4e00\u4e2a\u8be2\u95ee\u7684\u4e0b\u4e00\u4e2a\u5757\n\n\u5373\u6211\u4eec\u8de8\u8fc7\u4e86\u4e00\u4e2a\u5757\n\n\u76f4\u63a5\u6e05\u7a7a\u83ab\u961f\u7528\u6765\u8ba1\u6570\u7684\u6570\u7ec4$($\u6211\u7684$tot$\u6570\u7ec4$)$\n\n\u91cd\u65b0\u518d\u6765\uff0c\u91cd\u590d\u4e0a\u9762\u7684\u64cd\u4f5c\uff0c\u53ea\u662f\u5757\u53d8\u6210\u4e86\u4e0b\u4e00\u4e2a\u800c\u5df2\n\n\u5c31\u76f8\u5f53\u4e8e\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5757\u505a\u4e00\u6b21\u83ab\u961f(\u6211\u7684\u7406\u89e3\uff0c\u4f46\u613f\u4f60\u4e0d\u8981\u3002\u3002\u3002)\n\n\u4f46\u8fd9\u4e48\u6253\u51fa\u6765\u5e76\u4e0d\u80fd\u8fc7\uff0c\u8981$\\text{WA}$\n\n\u6211\u4eec\u8003\u8651\u5230\u8fd8\u6709\u8fd9\u79cd\u60c5\u51b5\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/c2qiu633.png)\n\n$\\text{woc}$\uff0c$r$\u8fd8\u8981\u5f80\u5de6\u8fb9\u8d70\u53ef\u548b\u6574\uff1f\n\n\u60f3\u60f3\u4f60\u7684\u83ab\u961f\u4f1a\u600e\u4e48\u8d70\uff1f\n\n\u76f4\u63a5\u8d70\u554a\uff01\n\n\u5148\u8d70$r$\uff0c\u628a\u8ba1\u6570\u7684\u6570\u7ec4\u5148\u51cf\uff0c\u5e76\u4e0d\u7528\u66f4\u65b0\u7b54\u6848\n\n\u7136\u540e\u518d\u8d70$l$\uff0c\u4e00\u5b9a\u4f1a\u628a\u51cf\u6210\u8d1f\u6570\u7684\u8ba1\u6570\u7684\u6570\u7ec4\u52a0\u56de\u6765(\u770b\u56fe)\uff0c\u8fd9\u4e2a\u65f6\u5019\u518d\u66f4\u65b0\u7b54\u6848\u5c31\u53ef\u4ee5\u4e86\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\sqrt{n})$\n\n# \u4ee3\u7801\n```cpp\n//12252024832524\n#include <cmath> \n#include <cstdio>\n#include <algorithm>\nusing namespace std; \n\ntypedef long long LL;\nconst int MAXN = 100005;\nint n,Q;\nLL lsh[MAXN],lshtot;\nint tot[MAXN];\nint belong[MAXN];\nLL ans[MAXN];\nstruct query\n{\n\tint l,r,ID;\n\tbool operator < (const query &px) const{\n\t\tif(belong[l] != belong[px.l])\n\t\t\treturn belong[l] < belong[px.l];\n\t\treturn r < px.r;\n\t}\n}q[MAXN];\nstruct node\n{\n\tint x,ID;\n}p[MAXN];\n\nint Read()\n{\n\tint x = 0,f = 1;char c = getchar();\n\twhile(c > '9' || c < '0'){if(c == '-')f = -1;c = getchar();}\n\twhile(c >= '0' && c <= '9'){x = (x*10) + (c^48);c = getchar();}\n\treturn x * f;\n}\nvoid Put1(LL x)\n{\n\tif(x > 9) Put1(x/10);\n\tputchar(x%10^48);\n}\nvoid Put(LL x)\n{\n\tif(x < 0) putchar('-'),x = -x;\n\tPut1(x);\n}\ntemplate <typename T>T Max(T x,T y){return x > y ? x : y;}\ntemplate <typename T>T Min(T x,T y){return x < y ? x : y;}\ntemplate <typename T>T Abs(T x){return x < 0 ? -x : x;}\n\nbool cmp1(node x,node y)\n{\n\treturn x.x < y.x;\n}\nbool cmp2(node x,node y)\n{\n\treturn x.ID < y.ID;\n}\n\nint main()\n{\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\tn = Read();\n\tQ = Read();\n\tint sq = sqrt(n);\n\tfor(int i = 1;i <= n;++ i)\n\t{\n\t\tp[i].x = Read();\n\t\tp[i].ID = i;\n\t\tbelong[i] = (i-1) / sq + 1;\n\t}\n\tsort(p+1,p+n+1,cmp1); \n\tfor(int i = 1;i <= n;++ i)\n\t{\n\t\tif(p[i].x != lsh[lshtot])\n\t\t\tlsh[++lshtot] = p[i].x;\n\t\tp[i].x = lshtot;\n\t}\n\tsort(p+1,p+n+1,cmp2);\n\tfor(int i = 1;i <= Q;++ i)\n\t{\n\t\tq[i].l = Read();\n\t\tq[i].r = Read();\n\t\tq[i].ID = i;\n\t}\n\tsort(q+1,q+Q+1);\n\tint l,r = 0;\n\tLL now = 0,lst = 0;\n\tfor(int i = 1;i <= Q;++ i)\n\t{\n\t\tl = sq * belong[q[i].l];//\u8be5\u5757\u53f3\u7aef\u70b9 \n\t\tif(belong[q[i].l] > belong[q[i-1].l])\n\t\t{\n\t\t\tfor(int j = 1;j <= lshtot;++ j)\n\t\t\t\ttot[j] = 0;\n\t\t\tr = l - 1;\n\t\t\tlst = now = 0;\n\t\t}\n\t\tnow = lst;\n\t\twhile(r < q[i].r)\n\t\t{\n\t\t\tr++;\n\t\t\ttot[p[r].x]++;\n\t\t\tnow = Max(now,tot[p[r].x] * lsh[p[r].x]);\n\t\t}\n\t\twhile(r > q[i].r)\n\t\t{\n\t\t\ttot[p[r].x]--;\n\t\t\tr--;\n\t\t}\n\t\tlst = now;\n\t\twhile(l > q[i].l)\n\t\t{\n\t\t\tl--;\n\t\t\ttot[p[l].x]++;\n\t\t\tnow = Max(now,tot[p[l].x] * lsh[p[l].x]);\n\t\t}\n\t\tans[q[i].ID] = now;\n\t\tfor(int j = sq * belong[q[i].l]-1;j >= l;-- j)\n\t\t\ttot[p[j].x]--;\n\t}\n\tfor(int i = 1;i <= Q;++ i)\n\t{\n\t\tPut(ans[i]);\n\t\tputchar('\\n');\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1578128759,
        "uid": 137437,
        "name": "PPL_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT1219 \u3010\u6b74\u53f2\u306e\u7814\u7a76\u3011"
    },
    {
        "content": "\u5927\u5bb6\u597d\uff0c\u6211\u4e0d\u559c\u6b22\u56de\u6eda\u83ab\u961f\uff0c\u6240\u4ee5\u6211\u7528\u666e\u901a\u83ab\u961f\u628a\u8fd9\u9898\u7ed9 A \u6389\u4e86\u3002\u590d\u6742\u5ea6 $O(n\\sqrt m + m\\sqrt n)$\u3002\n\n\u8003\u8651\u666e\u901a\u83ab\u961f\u7684\u95ee\u9898\u5728\u54ea\u3002\u5bf9\u4e8e\u4e00\u4e2a\u83ab\u961f\u800c\u8a00\uff0c\u672c\u8eab\u53ef\u4ee5\u770b\u4f5c\u662f $O(n\\sqrt m)$ \u7ec4\u67e5\u8be2\uff0c$O(m)$ \u7ec4\u8be2\u95ee\uff0c\u540c\u65f6\u672c\u8eab\u6bcf\u4e2a\u6570\u7684\u300c\u51fa\u73b0\u6b21\u6570\u5e26\u6743\u300d\u8fd9\u4e2a\u4e1c\u897f\u672c\u8eab\u53ef\u4ee5\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u53ef\u4ee5\u770b\u4f5c\u662f $O(n\\sqrt m\\log n+ m\\log n+m\\log m)$ \uff08\u6700\u540e\u4e00\u4e2a $\\log$ \u662f\u6392\u5e8f\u7684\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u5199\u57fa\u6392\u4e0d\u8fc7\u663e\u7136\u4e0d\u662f\u5f88\u6709\u5fc5\u8981\uff09\u3002\n\n\u8003\u8651\u590d\u6742\u5ea6\u91cd\u5fc3\u5411\u67e5\u8be2\u504f\u79fb\uff0c\u4e8e\u662f\u672c\u7740\u6839\u53f7\u5e73\u8861\u7684\u601d\u60f3\uff0c\u5927\u6982\u9700\u8981\u4e00\u4e2a $O(\\sqrt n)$ \u67e5\u8be2\uff0c$O(1)$ \u4fee\u6539\u7684 ds \u6765\u7ef4\u62a4\u8fd9\u4e2a\u4fe1\u606f\u3002\u4f46\u662f\u4f3c\u4e4e\u666e\u901a\u7684\u503c\u57df\u5206\u5757\u4e0d\u53ef\u505a\u3002\n\n\u8003\u8651\u95ee\u9898\u51fa\u5728\u54ea\uff1a\u65e0\u6cd5\u5728\u5f53\u524d\u6700\u5927\u503c\u88ab `del` \u4e4b\u540e\uff0c\u5feb\u901f\u627e\u51fa\u4e0b\u4e00\u4e2a\u6700\u5927\u503c\u3002\u6240\u4ee5\u53ef\u4ee5\u60f3\u5230\u8981\u53bb\u501f\u9274\u5e26\u4e00\u4e2a $\\log $ \u7684\u6743\u503c\u7ebf\u6bb5\u6811\u7684\u505a\u6cd5\uff0c\u5373\u5047\u8bbe\u67d0\u4e2a $x$ \u7684\u51fa\u73b0\u6b21\u6570\u662f $1,2,3\\cdots cnt_x$ \uff0c\u90a3\u4e48\u4e00\u5f00\u59cb\u628a\u6240\u6709\u7684 $x\\cdot 1,x\\cdot 2, x\\cdot 3\\cdots,x\\cdot cnt_x$ \u653e\u5728\u4e00\u8d77\u79bb\u6563\u5316\uff0c\u7136\u540e\u5bf9\u8fd9\u4e2a\u79bb\u6563\u5316\u540e\u7684\u6570\u7ec4\u8fdb\u884c\u503c\u57df\u5206\u5757\u3002\u56e0\u4e3a $\\sum _xcnt_x=n$ \u6240\u4ee5\u53ef\u4ee5\u77e5\u9053\u590d\u6742\u5ea6\u662f\u5bf9\u7684\u3002\n\n\u4e8e\u662f\u6700\u540e\u590d\u6742\u5ea6\u662f $O(n\\sqrt m+m\\sqrt n)$ \u3002\u56e0\u4e3a\u6ee5\u7528 `vector` \u4ee5\u53ca cache \u5341\u5206\u4e0d\u53cb\u597d\u5bfc\u81f4\u6162\u7684\u4e00\u5339\uff0c\u7528\u4e86\u6276\u82cf\u7684 `fastI/O` \u4e5f\u6bdb\u7528\u6ca1\u6709/dk\u3002\n\n```cpp\ntypedef long long ll ;\n\n#define il inline \n\n#define lwb lower_bound\n#define upb upper_bound\n\n#define vint vector <int>\n\n#define mint map <int, int>\n\n#define minttoll map <int, ll>\n\nusing IPT::qr;\nusing IPT::qra;\nusing IPT::qrs;\nusing IPT::qrdb;\nusing OPT::qw;\nusing OPT::qwa;\nusing OPT::qws;\n\nil bool comp(const query &a, const query &b){\n\treturn (bl[a.l] ^ bl[b.l]) ? bl[a.l] < bl[b.l] : \n\t\t   ((bl[a.l] & 1) ? a.r < b.r : a.r > b.r) ;\n}\nil void add(const int &p){\n\tif (buc[tmp[p]] < 0){\n\t\t++ buc[tmp[p]] ; return ; \n\t}\n\tint lval = base[tmp[p]][buc[tmp[p]]] ;\n\tint val = base[tmp[p]][++ buc[tmp[p]]] ; \n//\tcout << val << \" \" << lval << endl ; \n\tsump[val] ++ ; sumb[ blv[val] ] ++ ;\n\tsump[lval] -- ; sumb[ blv[lval] ] -- ;\n}\nil void del(const int &p){\n\tif (buc[tmp[p]] <= 0 ){\n\t\t-- buc[tmp[p]] ; return ; \n\t}\n//\tif (buc[tmp[p]] + 1 >= base[tmp[p]].size()) cout << base <<buc[tmp[p]] << \" \" << p << ' ' << tmp[p] <<'\\n', exit(0) ; \n\tint lval = base[tmp[p]][buc[tmp[p]]] ;\n\tint val = base[tmp[p]][-- buc[tmp[p]]] ; \n\tsump[val] ++ ; sumb[ blv[val] ] ++ ;\n\tsump[lval] -- ; sumb[ blv[lval] ] -- ;\n}\nil int ask(){\n\tint ob = 0 ; \n\tfor (int b = blv[V] ; b >= 0 ; -- b)\n\t\tif (sumb[b] > 0) { ob = b ; break ; } if (!ob) return 0 ; \n\tfor (int p = vr[ob] ; p >= vl[ob] ; -- p) if (sump[p]) return p ; \n}\nint main(){\n    qr(n) ; qr(m) ; B = n / sqrt(m) ;  \n\tfor (int i = 1 ; i <= n ; ++ i) qr(g[i]) ; \n\tfor (int i = 1 ; i <= n ; ++ i) \n\t\tbu[g[i]] ++, t[++ cnt] = 1ll * g[i] * bu[g[i]] ;\n//\tdebug(t, 1, cnt, ' ', '\\n') ;\n\tsort(t + 1, t + cnt + 1) ; bu.clear() ;\n\tfor (int i = 1 ; i <= n ; ++ i){\n\t\tbl[i] = i / B ; bu[g[i]] ++ ; int w ; \n\t\tw = upb(t + 1, t + cnt + 1, 1ll * g[i] * bu[g[i]]) - t - 1 ;\n//\t\tcout << g[i] << \" \" << w << '\\n' ;\n\t\tif (bu[g[i]] == 1){\n\t\t\tbase[w].push_back(0) ; \n\t\t\tbase[w].push_back(w) ; vu[g[i]] = w ; \n\t\t}\n\t\telse base[vu[g[i]]].push_back(w) ; V = max(V, w) ;  \n\t\tsu[w] = 1ll * g[i] * bu[g[i]] ; t[w] ++ ; \n\t} \n\tfor (int i = 1 ; i <= m ; ++ i)\n        qr(q[i].l), qr(q[i].r), q[i].id = i ;\n    sort(q + 1, q + m + 1, comp) ; \n\tfor (int i = 1 ; i <= n ; ++ i) tmp[i] = vu[g[i]] ;\n//\tfor (int i = 1 ; i <= n ; ++ i) if(buc[tmp[i]]) return 0 ; else buc[tmp[i]] ++ ; \n/*\tfor (int i = 1 ; i <= n ; ++ i){\n\t\tcout << g[i] << \" \" << tmp[i] << '\\n' ;\n\t\tdebug(base[tmp[i]], 0, base[tmp[i]].size() - 1, ' ', '\\n') ;\n\t}return 0 ; */\n//\tdebug(tmp, 1, n, ' ', '\\n') ;\n\tB = sqrt(V) + 1 ; \n\tfor (int i = 1 ; i <= V ; ++ i){\n\t\tblv[i] = i / B + 1 ; \n\t\tif (blv[i] != blv[i - 1])\n\t\t\tvr[blv[i - 1]] = i - 1, vl[blv[i]] = i ; \n\t}\n\tint l = 1, r = 0 ; vr[blv[V]] = V ;\n//\tdebug(blv, 1, V, ' ',  '\\n') ;\n//\tdebug(vl, 1, blv[V], ' ',  '\\n') ;\n//\tdebug(vr, 1, blv[V], ' ',  '\\n') ;\n//\twhile (l <= n) add(l ++) ;// cout << l << '\\n' ;\n    for (int i = 1 ; i <= m ; ++ i){\n\t\twhile (l > q[i].l) add(-- l) ; \n\t\twhile (r < q[i].r) add(++ r) ;\n\t\twhile (l < q[i].l) del(l ++) ; \n\t\twhile (r > q[i].r) del(r --) ;\n\t\tans[q[i].id] = su[ ask() ] ; \n    }\n    for (int i = 1 ; i <= m ; ++ i)\n        qw(ans[i], '\\n') ; return 0 ;\n}\n\n```",
        "postTime": 1586772190,
        "uid": 28313,
        "name": "\u768e\u6708\u534a\u6d12\u82b1",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 AT1219 \u3010\u6b74\u53f2\u306e\u7814\u7a76\u3011"
    },
    {
        "content": "\u9898\u76ee\uff1a[\u6b74\u53f2\u306e\u7814\u7a76](https://www.luogu.com.cn/problem/AT1219)\n\nOK\uff0c\u8fd9\u9898\u5176\u5b9e\u5c31\u662f\u56de\u6eda\u83ab\u961f\u3002\n\n\u56de\u6eda\u83ab\u961f\u662f\u5565\uff1f\n\n\u5176\u5b9e\u5c31\u662f\u4e00\u79cd\u83ab\u961f\uff0c\u53ef\u4ee5\u53ea\u52a0\u4e0d\u51cf\uff08\u6216\u53ea\u51cf\u4e0d\u52a0\uff09\u3002\n\n\u6bd4\u5982\u8bf4 RMQ \u95ee\u9898\u5c31\u662f\u5178\u578b\u7684\u53ea\u52a0\u4e0d\u51cf\u7684\u56de\u6eda\u83ab\u961f\u3002\n\n\u81f3\u4e8e\u666e\u901a\u83ab\u961f\u561b\uff0c\u6765\u4e2a\u6d1b\u8c37\u65e5\u62a5\u7684[\u4f20\u9001\u95e8](https://baijiahao.baidu.com/s?id=1611364100257622493&wfr=spider&for=pc)\n\n\u9996\u5148\u5b9a\u4e49\u5982\u4e0b\u7684\u7ed3\u6784\u4f53\uff1a\n\n```cpp\nstruct Q {\n\tint l,r,id;\n};\n```\n\n\u56de\u6eda\u83ab\u961f\u5206\u4e3a\u4ee5\u4e0b\u51e0\u6b65\uff1a\n\n+ \u5148\u6309 l \u6240\u5728\u7684\u5757\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u518d\u6309 r \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n\n```cpp\ninline bool cmp(Q a,Q b) {\n\tif (belong[a.l]<belong[b.l]) return belong[a.l]<belong[b.l];\n   else return a.r<b.r;\n}\n```\n\n+ \u4e00\u5757\u4e00\u5757\u7684\u7edf\u8ba1\u3002\n\n+ \u6bcf\u4e00\u5757 r \u662f\u5347\u5e8f\u7684\uff0c\u6240\u4ee5 r \u53ea\u9700\u8981\u52a0\u5c31\u884c\u4e86\u3002\n\n+ \u518d\u6765\u8003\u8651 l\uff0c\u53ea\u9700\u8981\u8bb0\u5f55\u539f\u5148\u7684\u503c\uff0c\u6bcf\u5faa\u73af\u4e00\u6b21\u5c31\u8d4b\u503c\u56de\u53bb\u5c31\u884c\u4e86\u3002\n\nCode\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nlong long n,a[100001],b[100001],g[100001],len=0,m,Ans[100001],belong[100001],Size,M;\nlong long B[100001],be[100001],d[100001];\nstruct Q {\n\tlong long l,r,id;\n}q[100001];\nbool cmp(Q a,Q b) {\n\tif (belong[a.l]!=belong[b.l]) return belong[a.l]<belong[b.l];\n\telse return a.r<b.r;\n}\nlong long query(long long x,long long y) {\n\tlong long ans=0;\n\tfor(long long i=x;i<=y;i++) {\n\t\tB[a[i]]++; ans=max(ans,be[a[i]]*B[a[i]]);\n\t}\n\tfor(long long i=x;i<=y;i++) B[a[i]]--;\n\treturn ans;\n}\nlong long doit(long long Qnum,long long x) {\n\tfor(long long i=1;i<=M;i++) b[i]=0;\n\tlong long L=min(x*Size,n);\n\tlong long i=Qnum,l=L+1,r=L;\n\tlong long anss=0;\n\tfor(;belong[q[i].l]==x;i++) {\n\t\tif (belong[q[i].l]==belong[q[i].r]) {\n\t\t\tAns[q[i].id]=query(q[i].l,q[i].r);\n\t\t\tcontinue;\n\t\t}\n\t\twhile (r<q[i].r) {\n\t\t\t++r;\n\t\t\tb[a[r]]++;\n\t\t\tanss=max(anss,b[a[r]]*be[a[r]]);\n\t\t}\n\t\tlong long qwq=anss;\n\t\twhile (l>q[i].l) {\n\t\t\t--l;\n\t\t\tb[a[l]]++;\n\t\t\tanss=max(anss,b[a[l]]*be[a[l]]);\n\t\t\tg[++len]=a[l];\n\t\t}\n\t\tAns[q[i].id]=anss;\n\t\tanss=qwq;\n\t\tfor(long long j=1;j<=len;j++) b[g[j]]--;\n\t\tlen=0;\n\t\tl=L+1;\n\t}\n\treturn i;\n}\nint main() {\n\tscanf(\"%lld%lld\",&n,&m); Size=sqrt(n);\n\tfor(long long i=1;i<=n;i++) scanf(\"%lld\",a+i),d[i]=a[i],belong[i]=(i-1)/Size+1;\n\tsort(d+1,d+n+1);\n\tM=unique(d+1,d+n+1)-d-1;\n\tfor(long long i=1;i<=n;i++) {\n\t\tlong long T=lower_bound(d+1,d+M+1,a[i])-d;\n\t\tbe[T]=a[i]; a[i]=T;\n\t}\n\tfor(long long i=1;i<=m;i++) {\n\t\tscanf(\"%lld%lld\",&q[i].l,&q[i].r);\n\t\tq[i].id=i;\n\t}\n\tsort(q+1,q+m+1,cmp);\n\tlong long Qnum=1;\n\tfor(long long i=1;i<=belong[n];i++) {\n\t\tQnum=doit(Qnum,i);\n\t}\n\tfor(long long i=1;i<=m;i++) printf(\"%lld\\n\",Ans[i]);\n\treturn 0;\n}\n```\n\n\u5b8c\u7ed3\u6492\u82b1\uff01",
        "postTime": 1616240047,
        "uid": 355448,
        "name": "Fido_Puppy",
        "ccfLevel": 0,
        "title": "AT1219 \u6b74\u53f2\u306e\u7814\u7a76"
    },
    {
        "content": "\u55ef\u3002\u3002\u5f88\u660e\u663e\u7684\u4e00\u9053\u83ab\u961f\u9898\n\n\u5f53\u7136\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u6dfb\u52a0\u5143\u7d20\u5f88\u5bb9\u6613\u7ef4\u62a4\uff0c\u4f46\u662f\u5220\u9664\u7684\u8bdd\u3002\u3002\u3002\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e00\u79cd\u53ef\u4ee5\u66f4\u52a0\u5f3a\u5927\u7684\u6570\u636e\u7ed3\u6784\uff08\u7b97\u662f\u5427\uff09 \n\n# \u56de\u6eda\u83ab\u961f\n\n\u9996\u5148\u6211\u4eec\u6309\u7167\u5757\u957f\u4e3a  $ \\sqrt n$ \u6392\u5e8f\uff08\u4f46\u662f\u8981\u53bb\u6389\u5947\u5076\u4f18\u5316\uff09\n\n\u8fd9\u662f\u6211\u4eec\u5c31\u4f1a\u60ca\u5947\u7684\u53d1\u73b0\uff0c\u4f60\u7684\u8be2\u95ee\u7684\u5de6\u7aef\u70b9\u6240\u5728\u7684\u5757\u7684\u7f16\u53f7\u662f\u5355\u8c03\u9012\u589e\u7684\u3002 \u800c\u5bf9\u4e8e\u5de6\u7aef\u70b9\u5c5e\u4e8e\u540c\u4e00\u4e2a\u5757\u7684\u8be2\u95ee\uff0c\u5b83\u4eec\u7684\u53f3\u7aef\u70b9\u7684\u7f16\u53f7\u4e5f\u662f\u5355\u8c03\u9012\u589e\u7684\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5c06\u8be2\u95ee\u5206\u6210\u4e24\u5927\u7c7b\n\n### \u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\u4f4d\u4e8e\u540c\u4e00\u5757\u5185\n\n\u8fd9\u4e2a\u76f4\u63a5\u66b4\u529b\u89e3\u51b3\u5c31\u53ef\u4ee5\uff0c\u56e0\u4e3a\u4e00\u5757\u6700\u5927 $ \\sqrt n$ \uff0c\u5373\u4f7f\u5168\u90e8\u66b4\u529b\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u53ea\u662f $ O(n\\sqrt n)$\n\n\u66b4\u529b\u90e8\u5206\u4ee3\u7801\n\n```cpp\nint force(int l,int r)\n  {\n      int res=0;\n      int tcnt[N];\n      for(int i=l;i<=r;i++) tcnt[typ[i]]=0;\n      for(int i=l;i<=r;i++)\n        {\n            tcnt[typ[i]]++;\n            res=max(tcnt[typ[i]]*a[i],res);\n        }\n      return res;\n  }\n```\n\n### \u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\u4e0d\u4f4d\u4e8e\u540c\u4e00\u5757\u5185\n\n\u8fd9\u4e2a\u5c31\u6709\u70b9\u9ebb\u70e6\u4e86\uff0c\u8003\u8651\u5c06\u533a\u95f4\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff0c\u5de6\u5757\u5185\u548c\u5de6\u5757\u5916\u3002\n\n\u5bf9\u4e8e\u5de6\u5757\u5185\u7684\u90e8\u5206\uff1a\n\n\u6bcf\u6b21\u8be2\u95ee\u524d\u5c06\u64cd\u4f5c\u6307\u9488 $ql$ \u79fb\u81f3\u5de6\u7aef\u70b9\u6240\u5728\u5757\u7684\u4e0b\u4e00\u4e2a\u5757\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5904\uff0c\u7136\u540e\u6211\u4eec\u5c31\u4f1a\u60ca\u5947\u7684\u53d1\u73b0\uff1a \u6211\u4eec\u53ef\u4ee5\u5728\u5de6\u533a\u95f4\u4e00\u76f4\u52a0\u5143\u7d20\u800c\u4e0d\u5fc5\u5220\u9664\u5143\u7d20\u4e86\uff08\u6bcf\u6b21\u56de\u590d $ql$ \u7684\u65f6\u5019\u53ea\u9700\u8981\u4fdd\u5b58\u4e00\u4e0b\u5c31\u884c\u4e86\uff09\n\n\u5bf9\u4e8e\u5de6\u5757\u5916\u7684\u90e8\u5206\uff1a\n\n\u7531\u4e8e\u5bf9\u4e8e\u5de6\u7aef\u70b9\u5c5e\u4e8e\u540c\u4e00\u4e2a\u5757\u7684\u8be2\u95ee\uff0c\u5b83\u4eec\u7684\u53f3\u7aef\u70b9\u662f\u5355\u8c03\u9012\u589e\u7684\u3002 \u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u6bcf\u6b21\u8be2\u95ee\u7684\u5de6\u7aef\u70b9\u5904\u4e8e\u4e00\u4e2a\u201c\u65b0\u5757\u201d \u7684\u65f6\u5019\uff0c\u5c06\u64cd\u4f5c\u6307\u9488 $qr$ \u79fb\u81f3\u5de6\u7aef\u70b9\u6240\u5728\u7684\u5757\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u3002\u7136\u540e\u6211\u4eec\u540c\u6837\u60ca\u5947\u7684\u53d1\u73b0\uff0c\u5bf9\u4e8e\u5728\u5de6\u7aef\u70b9\u5728\u540c\u4e00\u4e2a\u5757\u5185\u7684\u6240\u6709\u64cd\u4f5c\uff0c\u6211\u4eec\u7684 $qr$ \u6839\u672c\u4e0d\u9700\u8981\u5f80\u56de\u8d70\uff0c\u4e5f\u5c31\u662f\u4e0d\u9700\u8981\u5220\u9664\n\n\n\u975e\u66b4\u529b\u90e8\u5206\u4ee3\u7801\n```cpp\nfor(int k=1;k<=t;k++)//k\u4ee3\u8868\u5de6\u7aef\u70b9\u5757\u7684\u7f16\u53f7\n    {\n     l=br[k]+1,r=br[k];\n     memset(cnt,0,sizeof(cnt));\n     res=0;\n     for(;belong[q[i].l]==k;i++)\n       {\n           if(belong[q[i].l]==belong[q[i].r])\n             {\n                 ans[q[i].id]=force(q[i].l,q[i].r);\n                 continue;\n             }\n            while(r<q[i].r)\n              {\n                  r++;\n                  cnt[typ[r]]++;\n                  res=max(res,cnt[typ[r]]*a[r]);\n              }\n            int nowres=res;//\u6bcf\u6b21\u5bf9\u5de6\u5757\u64cd\u4f5c\u524d\u5148\u4fdd\u5b58\n            while(l>q[i].l)\n              {\n                 l--;\n                 cnt[typ[l]]++;\n                 res=max(res,cnt[typ[l]]*a[l]);\n              }\n            ans[q[i].id]=res;\n            while(l<br[k]+1)\n              {\n                  cnt[typ[l]]--;\n                  l++;\n              }\n            res=nowres;\n       }\n    }\n```\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$ O(n\\sqrt n)$\n\n\u5bf9\u4e86\u672c\u9898\u6570\u636e\u8f83\u5927\u8bb0\u5f97\u79bb\u6563\u5316\n",
        "postTime": 1621951262,
        "uid": 147401,
        "name": "koishi_offical",
        "ccfLevel": 4,
        "title": "AT1219 \u6b74\u53f2\u306e\u7814\u7a76 \u9898\u89e3"
    },
    {
        "content": "\u9898\u89e3\u4e2d\u7adf\u6ca1\u6709\u5206\u5757\u505a\u6cd5\uff1f \u672c\u4eba\u6765\u6c34\u4e00\u53d1~\n\n\u8fd9\u9898\u5206\u5757\u633a\u663e\u7136\u7684\uff0c\u4e00\u770b\u5c31\u957f\u7740\u4e00\u526f\u533a\u95f4\u4f17\u6570\u7684\u8138\n\n\u90fd\u662f\u5957\u8def\u3002\u3002\u3002\n\n\u79bb\u6563\u5316\u662f\u5fc5\u987b\u7684\uff0c\u6ce8\u610f\uff0c\u67e5\u8be2\u8bf7\u4e0d\u8981\u5199\u6210 $O(nlogn)$\n\n\u6ca1\u6709\u4fee\u6539\uff0c\u76f4\u63a5\u9884\u5904\u7406\n\n$f[i][j]$ \u8868\u793a\u524d $i$ \u4e2a\u5757\u6570\u5b57 $j$ \u51fa\u73b0\u4e86\u51e0\u6b21\n\n$g[i][j]$ \u8868\u793a\u5757 $i$ \u5230\u5757 $j$ \u7684\u7b54\u6848\n\n\u8fd9\u4e24\u4e2a\u6570\u7ec4\u663e\u7136\u90fd\u80fd\u5728 $O(n\\sqrt n)$ \u7684\u65f6\u95f4\u5185\u5b8c\u6210\n\n\u5bf9\u4e8e\u67e5\u8be2\uff1a\n\n* \u5bf9\u4e8e\u6574\u5757\uff0c\u90a3\u4e48\u7b54\u6848\u5df2\u7ecf\u5728 $g$ \u6570\u7ec4\u4e2d\u9884\u5904\u7406\u597d\n* \u5982\u679c\u662f\u96f6\u6563\u5143\u7d20\uff0c\u90a3\u4e48\u76f4\u63a5\u66b4\u529b\u52a0\u5165\u6876\u4e2d\n\n\u5c31\u505a\u5b8c\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\sqrt n)$\n\n```cpp\n#include <map>\n#include <set>\n#include <ctime>\n#include <queue>\n#include <stack>\n#include <cmath>\n#include <vector>\n#include <bitset>\n#include <cstdio>\n#include <cctype>\n#include <string>\n#include <numeric>\n#include <cstring>\n#include <cassert>\n#include <climits>\n#include <cstdlib>\n#include <iostream>\n#include <algorithm>\n#include <functional>\nusing namespace std ;\n//#define int long long\n#define rep(i, a, b) for (int i = (a); i <= (b); i++)\n#define per(i, a, b) for (int i = (a); i >= (b); i--)\n#define loop(s, v, it) for (s::iterator it = v.begin(); it != v.end(); it++)\n#define cont(i, x) for (int i = head[x]; i; i = e[i].nxt)\n#define clr(a) memset(a, 0, sizeof(a))\n#define ass(a, sum) memset(a, sum, sizeof(a))\n#define lowbit(x) (x & -x)\n#define all(x) x.begin(), x.end()\n#define ub upper_bound\n#define lb lower_bound\n#define pq priority_queue\n#define mp make_pair\n#define pb push_back\n#define fi first\n#define se second\n#define iv inline void\n#define enter cout << endl\n#define siz(x) ((int)x.size())\n#define file(x) freopen(#x\".in\", \"r\", stdin),freopen(#x\".out\", \"w\", stdout)\ntypedef long long ll ;\ntypedef unsigned long long ull ;\ntypedef pair <int, int> pii ;\ntypedef vector <int> vi ;\ntypedef vector <pii> vii ;\ntypedef queue <int> qi ;\ntypedef queue <pii> qii ;\ntypedef set <int> si ;\ntypedef map <int, int> mii ;\ntypedef map <string, int> msi ;\nconst int N = 100010 ;\nconst int M = 320 ;\nconst int INF = 0x3f3f3f3f ;\nconst int iinf = 1 << 30 ;\nconst ll linf = 2e18 ;\nconst int MOD = 1000000007 ;\nconst double eps = 1e-7 ;\nvoid print(int x) { cout << x << endl ; exit(0) ; }\nvoid PRINT(string x) { cout << x << endl ; exit(0) ; }\nvoid douout(double x){ printf(\"%lf\\n\", x + 0.0000000001) ; }\n\nint n, m, len, num ;\nint f[M][N], a[N], tmp[N], bl[N], l[M], r[M], cnt[N] ;\nll g[M][M] ;\n// f[i][j] \u8868\u793a\u524d i \u4e2a\u5757 j \u51fa\u73b0\u7684\u6b21\u6570\uff0c g[i][j] \u8868\u793a\u5757 i \u5230 j \u7684\u7b54\u6848\n\nvoid lsh() {\n\trep(i, 1, n) tmp[i] = a[i] ;\n\tsort(tmp + 1, tmp + n + 1) ;\n\tint nn = unique(tmp + 1, tmp + n + 1) - (tmp + 1) ;\n\trep(i, 1, n) a[i] = lb(tmp + 1, tmp + nn + 1, a[i]) - tmp ;\n}\n\nvoid build() {\n\tlen = sqrt(n) ; num = (n - 1) / len + 1 ;\n\trep(i, 1, n) bl[i] = (i - 1) / len + 1 ;\n\trep(i, 1, num) l[i] = (i - 1) * len + 1, r[i] = i * len ; r[num] = n ;\n\tlsh() ;\n\trep(i, 1, num) {\n\t\trep(j, l[i], r[i]) cnt[a[j]]++ ;\n\t\trep(j, 1, n) f[i][j] = cnt[j] ;\n\t}\n\tll ma ;\n\trep(i, 1, num) {\n\t\tclr(cnt) ; ma = 0 ;\n\t\trep(j, i, num) {\n\t\t\trep(k, l[j], r[j]) {\n\t\t\t\tcnt[a[k]]++ ;\n\t\t\t\tma = max(ma, (ll) cnt[a[k]] * tmp[a[k]]) ;\n\t\t\t}\n\t\t\tg[i][j] = ma ;\n\t\t}\n\t}\n\tclr(cnt) ;\n}\n\nll query(int x, int y) {\n\tll ma = 0 ;\n\tif (bl[x] == bl[y]) {\n\t\trep(i, x, y) {\n\t\t\tcnt[a[i]]++ ;\n\t\t\tma = max(ma, (ll) cnt[a[i]] * tmp[a[i]]) ;\n\t\t}\n\t\trep(i, x, y) cnt[a[i]]-- ;\n\t} else {\n\t\tma = g[bl[x] + 1][bl[y] - 1] ;\n\t\trep(i, x, r[bl[x]]) {\n\t\t\tcnt[a[i]]++ ;\n\t\t\tll sz = cnt[a[i]] + f[bl[y] - 1][a[i]] - f[bl[x]][a[i]] ;\n\t\t\tma = max(ma, sz * tmp[a[i]]) ;\n\t\t}\n\t\trep(i, l[bl[y]], y) {\n\t\t\tcnt[a[i]]++ ;\n\t\t\tll sz = cnt[a[i]] + f[bl[y] - 1][a[i]] - f[bl[x]][a[i]] ;\n\t\t\tma = max(ma, sz * tmp[a[i]]) ;\n\t\t}\n\t\trep(i, x, r[bl[x]]) cnt[a[i]]-- ;\n\t\trep(i, l[bl[y]], y) cnt[a[i]]-- ;\n\t}\n\treturn ma ;\n}\n\nsigned main(){\n\tscanf(\"%d%d\", &n, &m) ;\n\trep(i, 1, n) scanf(\"%d\", &a[i]) ;\n\tbuild() ;\n\twhile (m--) {\n\t\tint x, y ; scanf(\"%d%d\", &x, &y) ;\n\t\tprintf(\"%lld\\n\", query(x, y)) ;\n\t}\n\treturn 0 ;\n}\n\n/*\n\u5199\u4ee3\u7801\u65f6\u8bf7\u6ce8\u610f\uff1a\n\t1.ll\uff1f\u6570\u7ec4\u5927\u5c0f\uff0c\u8fb9\u754c\uff1f\u6570\u636e\u8303\u56f4\uff1f\n\t2.\u7cbe\u5ea6\uff1f\n\t3.\u7279\u5224\uff1f\n\t4.\u81f3\u5c11\u505a\u4e00\u4e9b\n\u601d\u8003\u63d0\u9192\uff1a\n\t1.\u6700\u5927\u503c\u6700\u5c0f->\u4e8c\u5206\uff1f\n\t2.\u53ef\u4ee5\u8d2a\u5fc3\u4e48\uff1f\u4e0d\u884cdp\u53ef\u4ee5\u4e48\n\t3.\u53ef\u4ee5\u4f18\u5316\u4e48\n\t4.\u7ef4\u62a4\u533a\u95f4\u7528\u4ec0\u4e48\u6570\u636e\u7ed3\u6784\uff1f\n\t5.\u7edf\u8ba1\u65b9\u6848\u662f\u7528dp\uff1f\u6a21\u4e86\u4e48\uff1f\n\t6.\u9006\u5411\u601d\u7ef4\uff1f\n*/\n\n\n```",
        "postTime": 1550801723,
        "uid": 54900,
        "name": "__Hacheylight__",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT1219 \u3010\u6b74\u53f2\u306e\u7814\u7a76\u3011"
    },
    {
        "content": "# \u83ab\u961f\n\u7b80\u5355\u5206\u6790\uff1a\u9898\u9762\u542b\u6709IOI\uff08\u60ca\uff09\uff0c\u53ef\u77e5\u6b64\u9898\u662fIOI\uff08\u6570\u5b57\u4e09\u89d2\u5f62\uff09\u96be\u5ea6\uff08\u9003\uff09\u3002\n\n# \u601d\u8def\uff1a\u56de\u6eda\u83ab\u961f\n\u5f53\u7136\u5f88\u591a\u4eba\u90fd\u662f\u62b1\u7740\u5b66\u56de\u6eda\u83ab\u961f\u7684\u76ee\u6807\u6765\u770b\u8fd9\u9053\u9898\u7684\uff0c\u6240\u4ee5\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u4e0b\u56de\u6eda\u83ab\u961f\u3002\n\n1\u3001\u6309\u83ab\u961f\u7684\u601d\u8def\u8bb2\u8be2\u95ee\u6392\u5e8f\u3002\n\n2\u3001\u67e5\u8be2\u65f6\u679a\u4e3e\u6bcf\u4e2a\u533a\u95f4\uff0c\u6211\u4eec\u9700\u8981\u4fdd\u8bc1\u53f3\u7aef\u70b9\u662f\u4fdd\u6301\u5355\u8c03\u9012\u589e\u7684\uff0c\u540c\u65f6\u5de6\u7aef\u70b9\u6bcf\u6b21\u5728\u4e00\u4e2a\u5757\u4e2d\u79fb\u52a8\uff0c\u4ee5\u6b64\u6765\u8ba1\u7b97\u6bcf\u4e2a\u8be2\u95ee\u7684\u503c\u3002\n\n3\u3001\u6bcf\u4e00\u6b21\u5230\u4e0b\u4e00\u4e2a\u5757\u5c31\u8bb2\u5de6\u7aef\u70b9\u79fb\u56de\u53f3\u7aef\u70b9\uff0c\u79fb\u7684\u8fc7\u7a0b\u4e0d\u9700\u8981\u518d\u50cf\u83ab\u961f\u4e00\u6837\u4e00\u4e2a\u4e2a\u79fb\uff0c\u53ea\u9700\u8981\u5c06\u83ab\u961f\u4e2d\u6539\u53d8\u7684\u6570\u636e\u6e050\uff0c\u7136\u540e\u5c06\u53f3\u7aef\u70b9\u8d4b\u503c\u5230\u5de6\u7aef\u70b9\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6240\u4ee5\u5176\u5b9e\u8fd9\u9053\u9898\u662f\u56de\u6eda\u83ab\u961f\u677f\u5b50\u9898\u3002\n\n# \u4ee3\u7801\n\n```cpp\n#include<stdio.h>\n#include<cmath>\n#include<algorithm>\n#define int long long\nusing namespace std;\nstruct kkk{\n    int x,y,id,flag,ans;\n}a[1000001];\nstruct ggg{\n    int a,b,p;\n}a1[1000001];\nint block,blo[1000001],v[1000001],vis[1000001],cnt[1000001],sum[1000001],aa[1000001];\nint Vis[1000001],maxx,maxy,pos;\nint n,C,m,l,r;\nbool cmp1(ggg a,ggg b){\n    return a.a<b.a||(a.a==b.a&&a.p<b.p);\n}\nbool comp(kkk a,kkk b){\n    return a.id<b.id;\n}\nbool cmp(kkk a,kkk b){\n    if(blo[a.x]!=blo[b.x])return a.x<b.x;\n    return a.y<b.y;\n}\nvoid add(int x){\n    vis[v[x]]++;maxx=max(maxx,vis[v[x]]*aa[x]);\n}\nvoid re(int x){vis[v[x]]--;}\nint check(int l,int r){maxy=0;\n    for(int i=l;i<=r;i++)Vis[v[i]]=0;\n    for(int i=l;i<=r;i++){\n        Vis[v[i]]++;\n        maxy=max(maxy,Vis[v[i]]*aa[i]);\n    }\n    return maxy;\n}\nint Mo(int pos,int bl){\n    maxx=0;int last=0,i=pos;\n    for(int j=1;j<=n;j++)vis[j]=0;\n    int L=min(block*bl,n);\n    int l=L+1,r=L;\n    for(;blo[a[i].x]==bl;i++){\n        if(blo[a[i].x]==blo[a[i].y]){a[i].ans=check(a[i].x,a[i].y);continue;}\n        while(r<a[i].y){add(++r);}\n        last=maxx;\n        while(l>a[i].x){add(--l);}\n        a[i].ans=maxx;\n        while(l<L+1)re(l++);\n        maxx=last;\n    }\n    return i;\n}\nsigned main(){\n    int num;\n    scanf(\"%lld%lld\",&n,&m);block=sqrt(n);\n    //\u79bb\u6563\u5316\n    for(int i=1;i<=n;i++){scanf(\"%lld\",&a1[i].a);aa[i]=a1[i].a;a1[i].p=i,blo[i]=(i-1)/block+1;num=blo[i];}\n    sort(a1+1,a1+n+1,cmp1);\n    for(int i=1,j=0;i<=n;i++)\n    {\n        if(i==1||a1[i].a!=a1[i-1].a)j++;\n        v[a1[i].p]=j;\n    }\n    for(int i=1;i<=m;i++){\n        scanf(\"%lld%lld\",&a[i].x,&a[i].y);\n        a[i].id=i;\n    }\n    pos=1;\n    sort(a+1,a+m+1,cmp);\n    for(int i=1;i<=num;i++){\n    \tpos=Mo(pos,i);\n    }\n    sort(a+1,a+m+1,comp);\n    for(int i=1;i<=m;i++){\n        printf(\"%lld\\n\",a[i].ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1549590856,
        "uid": 58711,
        "name": "hyfhaha",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 AT1219 \u3010\u6b74\u53f2\u306e\u7814\u7a76\u3011"
    },
    {
        "content": "## \u524d\u7f6e\u77e5\u8bc6\n\u83ab\u961f\uff08\u56de\u6eda\u83ab\u961f\uff09\n## \u5206\u6790\n\u5176\u5b9e\u8fd9\u9053\u9898\u76f8\u5f53\u4e8e\u56de\u6eda\u83ab\u961f\u7684\u6a21\u677f\uff0c\u751a\u81f3\u8981\u6bd4\u6a21\u677f\u66f4\u6a21\u677f\u3002\n\n\u90a3\u4e48\uff0c\u4ec0\u4e48\u662f\u56de\u6eda\u83ab\u961f\u5462\uff1f\u6216\u8005\uff0c\u4ec0\u4e48\u65f6\u5019\u53ef\u4ee5\u4f7f\u7528\u56de\u6eda\u83ab\u961f\u5462\uff1f\n\n### \u56de\u6eda\u83ab\u961f\u4f7f\u7528\u6761\u4ef6\n\n\u56de\u6eda\u83ab\u961f\u7684\u4f7f\u7528\u6761\u4ef6\u901a\u5e38\u6709 $2$ \u70b9\uff1a\n\n+ \u95ee\u9898\u53ef\u4ee5\u83ab\u961f~~\u5e9f\u8bdd~~\n\n+ \u63d2\u5165\u5bb9\u6613\u7ef4\u62a4\uff0c\u5220\u9664\u5374\u5f88\u56f0\u96be\n\n### \u56de\u6eda\u83ab\u961f\u98df\u7528\u65b9\u6cd5\n\n1. \u4f7f\u7528\u83ab\u961f\u7684\u9884\u5904\u7406\u3002\u6211\u4eec\u628a\u8be2\u95ee\u5206\u6210\u4e86\u82e5\u5e72\u5757\uff0c\u6bcf\u5757\u4e4b\u5185\u5de6\u7aef\u70b9\u5728\u4e00\u5757\u4e4b\u5185\uff0c\u53f3\u7aef\u70b9\u9012\u589e\u3002\n\n2. \u5bf9\u4e8e\u6bcf\u4e00\u6bb5\u8be2\u95ee\uff0c\u7f6e\u5f00\u59cb\u7684\u7a7a\u533a\u95f4\u4e3a $[R+1,R]$\uff0c\u5176\u4e2d $R$ \u6307\u5f53\u524d\u5757\u53f3\u7aef\u70b9\n\n3. \u63a5\u4e0b\u6765\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\u8fdb\u884c\u5904\u7406\uff1a\n\n$\\space\\space\\space\\space\\space$ 1. \u5982\u679c\u5f53\u524d\u5de6\u53f3\u7aef\u70b9\u90fd\u5728\u4e00\u5757\u4e4b\u5185\uff0c\u66b4\u529b\u5373\u53ef\u3002\n\n$\\space\\space\\space\\space\\space$ 2. \u5426\u5219\uff0c\u628a\u5f53\u524d\u533a\u95f4\u53f3\u7aef\u70b9\u62d3\u5c55\u5230\u8be2\u95ee\u533a\u95f4\u53f3\u7aef\u70b9\uff0c\u628a\u7ed3\u679c\u5b58\u4e3a\u53d8\u91cf `last`\u3002\n\n$\\space\\space\\space\\space\\space$ 3. \u63a5\u4e0b\u6765\uff0c\u628a\u5f53\u524d\u533a\u95f4\u5de6\u7aef\u70b9\u62d3\u5c55\u5230\u8be2\u95ee\u533a\u95f4\u5de6\u7aef\u70b9\uff0c\u628a\u7ed3\u679c\u5b58\u5165\u7b54\u6848\u3002\n\n$\\space\\space\\space\\space\\space$ 4. \u6700\u540e\uff0c\u79fb\u52a8\u5de6\u7aef\u70b9\u5230\u539f\u6765\u4f4d\u7f6e\uff0c\u628a\u5f53\u524d\u7b54\u6848\u8bbe\u7f6e\u4e3a\u53d8\u91cf `last`\n\n### \u56de\u6eda\u83ab\u961f\u590d\u6742\u5ea6\n\n\u9996\u5148\u4e00\u5171\u6709 $\\sqrt n$ \u6bb5\u8be2\u95ee\u3002\n\n\u5982\u679c\u5728\u4e00\u4e2a\u5757\u5219\u66b4\u529b\u62d3\u5c55\uff0c\u590d\u6742\u5ea6 $O(\\sqrt n)$\n\n\u5426\u5219\u79fb\u52a8\u7aef\u70b9\uff0c\u603b\u590d\u6742\u5ea6\u662f $O(n)$ \u7684\u3002\n\n\u4e8e\u662f\uff0c\u6700\u540e\u7684\u590d\u6742\u5ea6\u662f $O(\\sqrt n\\times\\sqrt n + n\\times \\sqrt n)=O(n\\sqrt n)$ \u7684\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n#define lld long long\nint N,M;\nint B;\nint idBlock[1000001];\nlld ANS[1000001];\nlld ans,last,cnt[1000001],cnt1[1000001];\nlld len,a[1000001],v[1000001],srt[1000001];//\u79bb\u6563\u5316 \nstruct Req{\n\tint l,r,id;\n}Q[1000001];\nbool operator<(const Req &x,const Req &y){\n\tif(idBlock[x.l]==idBlock[y.l])return x.r<y.r;\n\treturn idBlock[x.l]<idBlock[y.l];\n}\nvoid Insert(int id){\n\t++cnt[v[id]];\n\tans=max(ans,cnt[v[id]]*a[id]);\n}\nvoid Remove(int id){\n\t--cnt[v[id]];\n}\nlld check(int l,int r){\n\tlld maxy=0;\n\tfor(int i=l;i<=r;++i)cnt1[v[i]]=0;\n\tfor(int i=l;i<=r;++i){\n\t\t++cnt1[v[i]];\n\t\tmaxy=max(maxy,cnt1[v[i]]*a[i]);\n\t}\n\treturn maxy;\n}\nint Move(int pos,int bl){\n\tans=0;last=0;int i=pos;\n\tfor(int j=1;j<=N;++j)cnt[j]=0;\n\tint L=min(B*bl,N);\n\tint l=L+1,r=L;\n\tfor(;idBlock[Q[i].l]==bl;++i){\n\t\tif(idBlock[Q[i].l]==idBlock[Q[i].r]){\n\t\t\tANS[Q[i].id]=check(Q[i].l,Q[i].r);\n\t\t\tcontinue;\n\t\t}\n\t\twhile(r<Q[i].r)Insert(++r);\n\t\tlast=ans;\n\t\twhile(l>Q[i].l)Insert(--l);\n\t\tANS[Q[i].id]=ans;\n\t\twhile(l<=L)Remove(l++);\n\t\tans=last;\n\t}\n\treturn i;\n}\nint main(){\n\tscanf(\"%d%d\",&N,&M);\n\tB=sqrt(N);\n\tfor(int i=1;i<=N;++i)scanf(\"%lld\",a+i),srt[i]=a[i],idBlock[i]=(i-1)/B+1;\n\tint num=idBlock[N];\n\tsort(srt+1,srt+N+1);\n\tlen=unique(srt+1,srt+N+1)-srt-1;\n\tfor(int i=1;i<=N;++i)v[i]=lower_bound(srt+1,srt+len+1,a[i])-srt;\n\tfor(int i=1;i<=M;++i)scanf(\"%d%d\",&Q[i].l,&Q[i].r),Q[i].id=i;\n\tsort(Q+1,Q+M+1);\n\tint pos=1;\n\tfor(int i=1;i<=num;++i)\n\t\tpos=Move(pos,i);\n\tfor(int i=1;i<=M;++i)printf(\"%lld\\n\",ANS[i]);\n\treturn 0;\n}\n```",
        "postTime": 1626178832,
        "uid": 228486,
        "name": "SunsetSamsara",
        "ccfLevel": 7,
        "title": "AT1219 \u6b74\u53f2\u306e\u7814\u7a76 \u9898\u89e3"
    },
    {
        "content": "**2021-5-31 \u4fee\u6539\u4e00\u5904\u8868\u8ff0\u9519\u8bef**\n\n## \u56de\u6eda\u83ab\u961f\n\n\u56de\u6eda\u83ab\u961f\u9002\u7528\u4e8e\u83ab\u961f\u89e3\u51b3\u95ee\u9898\u65f6\u53d1\u73b0\u76f4\u63a5\u5220\u9664\u4e0d\u597d\u6c42\u7b54\u6848\u7684\u65f6\u5019\u3002\n\n\u6bd4\u5982\u6211\u4eec\u60f3\u7528\u83ab\u961f\u7ef4\u62a4\u4e00\u4e2a\u96c6\u5408\u6700\u5927\u503c\uff0c\u63d2\u5165\u4e00\u4e2a\u6570\u7684\u65f6\u5019\u53ea\u9700\u8981\u6253\u64c2\u53f0\u8bb0\u5f55\u6700\u5927\u503c\u5373\u53ef\uff0c\u4f46\u662f\u5220\u9664\u7684\u65f6\u5019\u5c31\u4e0d\u5bb9\u6613\u76f4\u63a5\u5bfb\u627e\u5220\u9664\u540e\u7684\u6700\u5927\u503c\u3002\n\n\u5f53\u7136\u4f8b\u5b50\u4e2d\u7684\u8fd9\u4e2a\u5177\u4f53\u95ee\u9898\u4e5f\u53ef\u4ee5\u7528\u4e2a\u7ebf\u6bb5\u6811\u554a\u5806\u554a\u4ec0\u4e48\u7684\u7ef4\u62a4\u4e00\u4e0b\u2026\u2026 \u3002\n\n### \u6b74\u53f2\u306e\u7814\u7a76\n\n~~\u4f1a\u6eda\u7684~~ \u56de\u6eda\u83ab\u961f\u677f\u5b50\u9898\u3002\n\n\u89c2\u5bdf\u5176\u5b9e\u53ef\u4ee5\u77e5\u9053\uff0c\u8fd9\u9898\u63d2\u5165\u975e\u5e38\u7b80\u5355\uff0c\u800c\u76f4\u63a5\u5220\u9664\u51e0\u4e4e\u662f\u4e0d\u53ef\u884c\u7684\u3002\n\n\u6211\u4eec\u53d6\u5757\u957f $\\sqrt n$\uff0c\u4ecd\u7136\u7167\u7740\u666e\u901a\u83ab\u961f\u7684\u65b9\u6cd5\u6765\u5bf9\u8be2\u95ee\u6392\u5e8f(\u53bb\u6389\u5947\u5076\u4f18\u5316)\u3002\n\n\u6392\u5e8f\u540e\uff0c\u8be2\u95ee\u5de6\u7aef\u70b9\u6240\u5728\u5757\u7684\u7f16\u53f7\u5355\u8c03\u9012\u589e\uff0c\u5de6\u7aef\u70b9\u5757\u7f16\u53f7\u76f8\u540c\u7684\u8be2\u95ee\u53f3\u7aef\u70b9\u5355\u8c03\u9012\u589e\u3002\n\n\u6b64\u65f6\u6211\u4eec\u8003\u8651\u5bf9\u6bcf\u4e00\u4e2a\u5757\u5185\u600e\u4e48\u53bb\u505a\u3002\n\n![](https://pic.imgdb.cn/item/60ac557208f74bc1595a2e30.png)\n\n\u6211\u4eec\u8003\u8651\u5904\u7406\u6240\u6709\u5de6\u7aef\u70b9\u5728\u5de6\u8fb9\u5757\u5185\u7684\u6240\u6709\u8be2\u95ee\u3002\u5de6\u8fb9\u5757\u5185\u7684\u8be2\u95ee\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n- \u53f3\u7aef\u70b9\u5728\u5de6\u5757\u5185\n\n    ![](https://pic.imgdb.cn/item/60ac585e08f74bc15972c4f0.png)\n\n    \u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u6c42\uff0c\u7531\u4e8e\u5757\u957f\u6700\u5927 $\\sqrt n$\uff0c\u6240\u4ee5\u5904\u7406\u5355\u4e2a\u8fd9\u7c7b\u8be2\u95ee\u7684\u603b\u590d\u6742\u5ea6\u6700\u591a $O(\\sqrt n)$\u3002\n\n- \u53f3\u7aef\u70b9\u5728\u5de6\u5757\u5916\n\n    ![](https://pic.imgdb.cn/item/60ac58e108f74bc159780bfa.png)\n\n    \u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u5c06\u8be2\u95ee\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff1a\u5728\u5de6\u5757\u5185\u7684\u90e8\u5206\uff0c\u5728\u53f3\u5757\u5185\u7684\u90e8\u5206\u3002\n\n    \u7531\u4e8e\u6211\u4eec\u7684\u6392\u5e8f\u7b56\u7565\uff0c\u6211\u4eec\u77e5\u9053\u53f3\u5757\u5185\u90e8\u5206\u662f\u6301\u7eed\u589e\u52a0\u7684\u3002\u771f\u6b63\u6d89\u53ca\u5230\u5220\u9664\u64cd\u4f5c\u7684\u662f\u5de6\u7aef\u70b9\u3002\n\n    \u4f46\u662f\u6211\u4eec\u65e0\u6cd5\u4f18\u79c0\u5730\u5b8c\u6210\u5220\u9664\u64cd\u4f5c\u600e\u4e48\u529e\uff1f\n\n    \u6b64\u65f6\uff0c\u60f3\u60f3\u4f60\u5728\u73a9 galgame \u73a9\u51fa\u6700\u574f\u7684 BE \u7684\u65f6\u5019\uff0c\u4f60\u662f\u4e0d\u662f\u4f1a\u9009\u62e9\u56de\u6863\uff1f\n\n    \u6211\u4eec\u4e5f\u53ef\u4ee5\u8ba9\u83ab\u961f\u201c\u56de\u6863\u201d\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u7684**\u56de\u6eda**\u64cd\u4f5c\uff1a\n\n    1. \u5728\u505a\u5757\u5916\u7684\u8be2\u95ee\u524d\uff0c\u6211\u4eec\u628a\u83ab\u961f\u7684\u4e24\u4e2a\u6307\u9488 $l,r$ \u8bbe\u5230\u53f3\u5757\u7684\u521d\u59cb\u4f4d\u7f6e\u3002\n    1. \u6bcf\u9047\u5230\u4e00\u4e2a\u8be2\u95ee\uff0c\u6211\u4eec\u5148\u79fb\u52a8 $r$\uff0c\u8fd9\u91cc\u53ea\u4f1a\u6d89\u53ca\u6dfb\u52a0\u64cd\u4f5c\u3002\u79fb\u52a8\u5b8c\u540e\uff0c\u8bb0\u5f55\u4e0b\u5f53\u524d\u7684\u7b54\u6848\u548c\u72b6\u6001\u6570\u7ec4(\u5982\u8bb0\u5f55\u6570\u5b57\u51fa\u73b0\u6b21\u6570\u4e4b\u7c7b\u7684\u6570\u7ec4)\u3002\n    1. \u79fb\u52a8\u5de6\u6307\u9488\uff0c\u8bb0\u5f55\u8fd9\u4e2a\u8be2\u95ee\u7b54\u6848\u3002\n    1. \u6700\u91cd\u8981\u7684\u4e00\u6b65\uff1a\u6211\u4eec\u5c06**\u4e0a\u4e00\u6b65\u6d89\u53ca\u5230\u6240\u6709\u7684\u72b6\u6001\u4ee5\u53ca\u7b54\u6848\u53d8\u91cf\u6062\u590d\u5230\u4e4b\u524d\u8bb0\u5f55\u7684\u72b6\u6001**\uff0c\u7136\u540e\u7ee7\u7eed\u505a\u4e0b\u4e00\u4e2a\u8be2\u95ee\u3002\n\n    \u96be\u5ea6\u5728\u56de\u6863\u7684\u5b9e\u73b0\u4e0a\u3002\u6709\u53ef\u80fd\u76f4\u63a5\u64a4\u9500\u5c31\u5b8c\u4e8b\u4e86\uff0c\u4e5f\u6709\u53ef\u80fd\u590d\u6742\u5230\u8981\u518d\u6574\u4e2a\u6570\u636e\u7ed3\u6784\u4ec0\u4e48\u7684\u3002\n\n    \u5f53\u7136\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u9898\uff0c\u6211\u4eec\u76f4\u63a5\u64a4\u9500\u5373\u53ef\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u5728\u5757\u53d6 $\\sqrt n$ \u65f6 $O(n\\sqrt n)$\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N=1e5+10;\n\nint n,m;\nstruct Query\n{\n\tint l,r,id;\n} Q[N];\nint poi[N],cnt[N];\nvector<int> nums;\nll ans[N];\nint block;\n\ninline int get(int x)\n{\n\treturn x/block;\n}\n\nbool cmp(Query a,Query b)\n{\n\tint al=get(a.l),bl=get(b.l);\n\tif(al!=bl) return al<bl;\n\treturn a.r<b.r;\n}\n\nvoid add(int &x,ll &res)\n{\n\tcnt[x]++;\n\tres=max(res,(ll)cnt[x]*nums[x]);\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;++i) scanf(\"%d\",&poi[i]),nums.push_back(poi[i]);\n\tsort(nums.begin(),nums.end());\n\tnums.erase(unique(nums.begin(),nums.end()),nums.end());\n\tfor(int i=1;i<=n;i++) poi[i]=lower_bound(nums.begin(),nums.end(),poi[i])-nums.begin();\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint l,r;\n\t\tscanf(\"%d%d\",&l,&r);\n\t\tQ[i]=(Query){l,r,i};\n\t}\n\tblock=max(10,(int)sqrt(n));\n\tsort(Q+1,Q+1+m,cmp);\n\n\tfor(int x=1;x<=m;)\n\t{\n\t\tint y=x;\n\t\twhile(y<=m && get(Q[y].l)==get(Q[x].l)) y++;\n\t\tint right=get(Q[x].l)*block+block-1;\n\n\t\t/*\u5904\u7406\u5757\u5185\u8be2\u95ee*/\n\t\twhile(x<y && Q[x].r<=right)\n\t\t{\n\t\t\tll res=0;\n\t\t\tint id=Q[x].id,l=Q[x].l,r=Q[x].r;\n\t\t\tfor(int k=l;k<=r;k++) add(poi[k],res);\n\t\t\tans[id]=res;\n\t\t\tfor(int k=l;k<=r;k++) --cnt[poi[k]];\n\t\t\t++x;\n\t\t}\n\n\t\t/*\u5904\u7406\u5757\u5916\u7684\u8be2\u95ee*/\n\t\tll res=0;\n\t\tint l=right+1,r=right;\n\t\twhile(x<y)\n\t\t{\n\t\t\tint id=Q[x].id,ll=Q[x].l,rr=Q[x].r;\n\t\t\twhile(r<rr) add(poi[++r],res);\n\t\t\tlong long backup_=res;\n\t\t\twhile(l>ll) add(poi[--l],res);\n\t\t\tans[id]=res;\n\t\t\twhile(l<right+1) --cnt[poi[l++]];\n\t\t\tres=backup_;\n\t\t\t++x;\n\t\t}\n\t\tmemset(cnt,0,sizeof cnt);\n\t}\n\tfor(int i=1;i<=m;i++) printf(\"%lld\\n\",ans[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1621911727,
        "uid": 278259,
        "name": "RemiliaScarlet\u25ce",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 AT1219 \u6b74\u53f2\u306e\u7814\u7a76"
    },
    {
        "content": "## \u5206\u5757\n\n\u6bd4\u56de\u6eda\u83ab\u961f\u7b80\u5355\uff0c\u4f46\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\sqrt{n}logn)$\uff0c\u800c\u56de\u6eda\u83ab\u961f\u662f $O(n\\sqrt{n})$ \u7684\u3002\n\n- $f_{ij}$ \u8868\u793a\u4ece\u7b2c $i$ \u5757\u7684\u5f00\u5934\u5230 $j$ \u7684\u91cd\u8981\u5ea6\u7684\u6700\u5927\u503c\u3002\n\n- $cnt_{ij}$ \u8868\u793a\u4ece\u7b2c $i$ \u5757\u7684\u5f00\u5934\u5230\u5e8f\u5217\u672b\u5c3e $j$ \u51fa\u73b0\u7684\u6b21\u6570\u3002\n\n- $cpy_{ij}$ \u7528\u6765\u79bb\u6563\u5316\n\n- $a_i$ \u8868\u793a\u6bcf\u79cd\u4e8b\u4ef6\uff0c\u79bb\u6563\u5316\u540e\u662f\u4e0b\u89d2\u6807\u3002\n\n- $b_i$ \u8868\u793a\u4e8b\u4ef6 $a_i$ \u7684\u6240\u5728\u5757\u3002\n\n\u53ef\u4ee5\u9884\u5904\u7406 $i$ \u4e3a\u6bcf\u5757\u5f00\u5934\u7684 $f_{ij}$ \u548c $cnt_{ij}$\u3002\n\n\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\u7684 $x,y$ \uff0c\u53ea\u9700\u8981\u6c42\u51fa\u6bcf\u4e2a $a_i$ \u5728\u8fd9\u4e2a\u533a\u95f4\u4e2d\u7684\u91cd\u8981\u5ea6\uff0c\u7136\u540e\u53d6\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\u91cd\u8981\u5ea6\u5c31\u662f $a_i\u00d7a_i$\u5728 $[x,y]$ \u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u3002\n\n\u5982\u679c $x$ \u662f\u5757\u7684\u5f00\u5934\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u7528 $cnt$\uff0c\u5426\u5219\u5c31\u628a $[x,y]$ \u5206\u62103\u6bb5\uff0c\n\n$1.$ $b_y$ \u7684\u5f00\u5934\u5230 $y$\u3002\n\n$2.$ $x$ \u5230 $b_x$\u7684\u672b\u5c3e\u3002\n\n$3.$ $b_x+1$ \u5230 $b_y-1$\u3002\n\n\u5c06 $1$ \u548c $2$ \u7684\u548c\u5b58\u8fdb $num_{a_i}$\uff0c$a_i$ \u51fa\u73b0\u7684\u4e2a\u6570\u5c31\u662f $cnt_{b_x+1,a_i}-cnt_{b_y,a_i}+num_{a_i}$\n\n\u4e00\u4e2a\u5c0f\u5bb9\u65a5\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n\nusing namespace std;\n\nconst int N=1e5+10;\nconst int B=333;\ntypedef long long ll;\n\nint n,q,Block,a[N],b[N];\nll f[B][N],ans,cpy[N],cnt[B][N],stk[N],num[N];\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&q);\n\tBlock=sqrt(n);\t\t//\u5757\u7684\u5927\u5c0f \n\tfor(int i=1; i<=n; i++)\n\t\tscanf(\"%d\",&a[i]),b[i]=(i-1)/Block+1,cpy[i]=a[i];\n\tsort(cpy+1,cpy+1+n);\t\t\t\t//\u6392\u5e8f \n\tint u=unique(cpy+1,cpy+1+n)-cpy-1;\t//\u53bb\u91cd \n\tfor(int i=1; i<=n; i++) a[i]=lower_bound(cpy+1,cpy+1+u,a[i])-cpy;\n\tfor(int i=1; i<=b[n]; i++)\n\t{\n\t\tll now=0;\n\t\t//\u9884\u5904\u7406i\u4e3a\u6bcf\u5757\u7684\u5f00\u5934\u7684\u60c5\u51b5 \n\t\tfor(int j=lower_bound(b+1,b+1+n,i)-b; j<=n; j++)\n\t\t{\n\t\t\tcnt[i][a[j]]++;\n\t\t\tnow=max(now,cnt[i][a[j]]*cpy[a[j]]);\n\t\t\tf[i][j]=now;\n\t\t}\n\t}\n\twhile(q--)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tans=f[b[x]+1][y];\n\t\tint top=0,tmp=lower_bound(b+1,b+1+n,b[y])-b;\n\t\t//y\u6240\u5728\u5757\u7684\u5f00\u5934\u5230y \n\t\tfor(int i=tmp; i<=y; i++)\n\t\t\tnum[a[i]]++,stk[++top]=a[i];\n\t\t//x\u5230x\u6240\u5728\u5757\u7684\u672b\u5c3e \n\t\ttmp=lower_bound(b+1,b+1+n,b[x]+1)-b;\n\t\tfor(int i=x; i<tmp; i++)\n\t\t{\n\t\t\tnum[a[i]]++;\n\t\t\tstk[++top]=a[i];\n\t\t\tans=max(ans,(cnt[b[x]+1][a[i]]-cnt[b[y]][a[i]]+num[a[i]])*cpy[a[i]]);\n\t\t}\n\t\t//\u7528\u6808\u8bb0\u5f55\u4e0b\u51fa\u73b0\u4e86\u54ea\u4e9b\u79cd\u7c7b\u7684\u4e8b\u4ef6\uff0c\u6700\u540e\u8981\u6e05\u7a7a \n\t\tfor(int i=1; i<=top; i++) num[stk[i]]=0;\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1582730745,
        "uid": 211300,
        "name": "Acestar",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 AT1219 \u3010\u6b74\u53f2\u306e\u7814\u7a76\u3011"
    },
    {
        "content": "\u4e00\u9053\u56de\u6eda\u83ab\u961f\u7684\u597d\u9898\uff0c\u521a\u5b66\u83ab\u961f\uff0c\u6240\u4ee5\u6765\u53d1\u4e00\u7bc7\u9898\u89e3\u5de9\u56fa\u4e00\u4e0b\u3002\n\n## \u9898\u76ee\u5927\u610f\n\u7ed9\u5b9a\u533a\u95f4 $[l,r]$\uff0c\u6c42\u533a\u95f4\u4e2d $a \\times T_a$ \u6700\u5927\u7684\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570 $T_a$\u3002\n\n$n,m\\le 10^5$\uff0c$a_i\\le 10^9$\u3002\n\n## \u5927\u4f53\u601d\u8def\n\u9996\u5148\u770b\u5230\u533a\u95f4\u4e2d\u5143\u7d20\u51fa\u73b0\u6b21\u6570\uff0c\u53d1\u73b0\u8fd9\u6837\u7684\u6761\u4ef6\u5bb9\u6613\u63d2\u5165\u4e0d\u5bb9\u6613\u5220\u9664\uff0c\u8054\u60f3\u5230\u533a\u95f4\u4f17\u6570\u7684\u79bb\u7ebf\u89e3\u6cd5\uff1a\u56de\u6eda\u83ab\u961f\u3002\n\n\u4ee5\u4e0b\u662f\u56de\u6eda\u83ab\u961f\u7684\u5927\u4f53\u601d\u8def\uff1a\n\n\u9996\u5148\uff0c\u7ef4\u62a4 $cnt$ \u6570\u7ec4\u8868\u793a\u6bcf\u4e2a\u6570\u7684\u51fa\u73b0\u6b21\u6570\uff08\u540c\u666e\u901a\u83ab\u961f\uff09\uff0c\u8fd9\u6837\u53ef\u4ee5\u5728 $O(1)$ \u63d2\u5165\u533a\u95f4\u7aef\u70b9\u3002\u672c\u9898\u4e2d\u7531\u4e8e\u503c\u57df\u8fc7\u5927\uff0c\u56e0\u6b64\u8981\u5bf9\u5e8f\u5217 $a$ \u8fdb\u884c\u79bb\u6563\u5316\u3002\n\n\u7136\u540e\u5bf9\u8be2\u95ee\u5206\u5757\u3002\u8bbe\u5757\u957f\u4e3a $\\sqrt n$\uff0c\u5bf9\u4e8e\u5de6\u53f3\u7aef\u70b9\u5728\u4e00\u4e2a\u5757\u5185\u7684\u8be2\u95ee\uff0c\u76f4\u63a5\u66b4\u529b\uff0c\u590d\u6742\u5ea6 $O(\\sqrt n)$\u3002\n\n\u5bf9\u4e8e\u5176\u4ed6\u7684\u8be2\u95ee\uff0c\u5bf9\u4e8e\u5de6\u7aef\u70b9\u5728\u540c\u4e00\u4e2a\u5757\u4e2d\u7684\uff0c\u6309\u7167\u53f3\u7aef\u70b9\u6392\u5e8f\uff0c\u5426\u5219\u6309\u7167\u5de6\u7aef\u70b9\u6392\u5e8f\uff0c\u5373\u5c06\u5de6\u7aef\u70b9\u5728\u540c\u4e00\u4e2a\u5757\u4e2d\u7684\u4e00\u8d77\u5904\u7406\uff08\u6ce8\u610f\u6b64\u65f6\u5947\u5076\u6027\u6392\u5e8f\u662f\u9519\u8bef\u7684\uff09\u3002\n\n\u5177\u4f53\u64cd\u4f5c\u5982\u4e0b\uff1a\u5148\u5c06\u53f3\u6307\u9488 $R$ \u79fb\u52a8\u5230\u5de6\u7aef\u70b9\u6240\u5728\u5757\u7684\u6700\u53f3\u7aef\uff0c\u7136\u540e $R$ \u5411\u53f3\u79fb\u52a8\u63d2\u5165\uff0c\u7edf\u8ba1\u5757\u5916\u90e8\u4efd $(ed, q_r]$ \u533a\u95f4\uff0c\u5e76\u5c06\u72b6\u6001\u4fdd\u5b58\u81f3 $lst,ans$\u3002\n\n\u7136\u540e\u4ee4\u5de6\u6307\u9488 $L$ \u79fb\u52a8\u5230\u5de6\u7aef\u70b9\u6240\u5728\u5757\u7684\u6700\u53f3\u7aef $+1$ \u4f4d\u7f6e\uff0c\u518d\u5411\u5de6\u63d2\u5165\uff0c\u7edf\u8ba1\u5757\u5185\u90e8\u5206\uff0c\u66f4\u65b0\u72b6\u6001 $ans$\u3002\u7136\u540e\u5c06\u5de6\u7aef\u70b9\u7684\u8d21\u732e\u64a4\u56de\uff0c\u5373\u64a4\u56de\u5bf9 $cnt$ \u6570\u7ec4\u7684\u66f4\u65b0\uff0c\u4ee4 $ans \\leftarrow lst$\u3002\n\n\u7531\u4e8e $n, m$ \u540c\u9636\uff0c\u603b\u590d\u6742\u5ea6 $O(n\\sqrt n)$\u3002\n\n## \u5b8c\u6574\u4ee3\u7801\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#define int long long\nusing namespace std;\n#define rep(ii,aa,bb) for(re int ii = aa; ii <= bb; ii++)\n#define Rep(ii,aa,bb) for(re int ii = aa; ii >= bb; ii--)\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\ntypedef pair<int, int> PII;\nconst int maxn = 1e5 + 5;\nconst int B = 224;\nnamespace IO_ReadWrite {\n\t#define re register\n\t#define gg (p1 == p2 && (p2 = (p1 = _buf) + fread(_buf, 1, 1<<21, stdin), p1 == p2) ? EOF :*p1++)\n\tchar _buf[1<<21], *p1 = _buf, *p2 = _buf;\n\ttemplate <typename T>\n\tinline void read(T &x){\n\t\tx = 0; re T f=1; re char c = gg;\n\t\twhile(c > 57 || c < 48){if(c == '-') f = -1;c = gg;}\n\t\twhile(c >= 48 &&c <= 57){x = (x<<1) + (x<<3) + (c^48);c = gg;}\n\t\tx *= f;return;\n\t}\n\tinline void ReadChar(char &c){\n\t\tc = gg;\n\t\twhile(!isalpha(c)) c = gg;\n\t}\n\ttemplate <typename T>\n\tinline void write(T x){\n\t\tif(x < 0) putchar('-'), x = -x;\n\t\tif(x > 9) write(x/10);\n\t\tputchar('0' + x % 10);\n\t}\n\ttemplate <typename T>\n\tinline void writeln(T x){write(x); putchar('\\n');}\n}\nusing namespace IO_ReadWrite;\nint n, m, a[maxn], c[maxn], t[maxn];// \u539f\u6570\u7ec4\uff0c\u79bb\u6563\u5316\u540e\u6570\u7ec4\uff0c\u79bb\u6563\u5316\u6570\u7ec4\nint st[maxn], ed[maxn], id[maxn];// \u5206\u5757\nint ans, Ans[maxn], cnt[maxn], lst;// \u79bb\u7ebf\u83ab\u961f\nint len, dlt;\nstruct node {\n\tint l, r, pos;\n\tbool operator <(const node &x)const{ // \u6392\u5e8f \n\t\tif(id[l] == id[x.l]) return r < x.r;\n\t\treturn l < x.l;\n\t}\n} q[maxn];\ninline int work(int l, int r) { \n\t//\u66b4\u529b\u5904\u7406\u5de6\u53f3\u7aef\u70b9\u5728\u4e00\u4e2a\u5757\u91cc\u7684\u533a\u95f4 \n\tans = 0;\n\trep(i, l, r) {\n\t\tcnt[c[i]]++;\n\t\tans = max(ans, cnt[c[i]] * a[i]);\n\t}\n\trep(i, l, r) cnt[c[i]]--; // \u64a4\u9500\u8d21\u732e \n\treturn ans;\n}\nsigned main () {\n\tread(n); read(m);\n\tint num = 1; st[1] = 1;\n\twhile(st[num] + B < n) {\n\t\ted[num] = st[num] + B - 1;\n\t\tnum++;\n\t\tst[num] = ed[num - 1] + 1;\n\t} ed[num] = n;\n\trep(i, 1, num)\n\t\trep(j, st[i], ed[i])\n\t\t\tid[j] = i;\n\t// \u5206\u5757 \u9884\u5904\u7406 \n\trep(i, 1, n) {\n\t\tread(a[i]);\n\t\tc[i] = t[i] = a[i];\n\t}\n\tsort(t + 1, t + n + 1);\n\tlen = unique(t + 1, t + n + 1) - t - 1;\n\trep(i, 1, n)\n\t\tc[i] = lower_bound(t + 1, t + len + 1, c[i]) - t;\n\t//\u79bb\u6563\u5316\n\trep(i, 1, m) {\n\t\tread(q[i].l); read(q[i].r);\n\t\tq[i].pos = i + dlt;\n\t\tif(id[q[i].l] == id[q[i].r]) { // \u5904\u7406\u540c\u4e00\u4e2a\u5757\u5185 \n\t\t\tAns[i + dlt] = work(q[i].l, q[i].r);\n\t\t\ti--; m--; dlt++;\n\t\t}\n\t} \n\tsort(q + 1, q + m + 1);\n\tint L = 0, R = 0;\n\trep(i, 1, m) {\n\t\tif(id[q[i].l] != id[q[i-1].l] || i == 1) {\n\t\t\tmemset(cnt, 0, sizeof cnt);\n\t\t\tR = ed[id[q[i].l]];//\u53f3\u6307\u9488\u79fb\u52a8\u81f3\u5757\u6700\u53f3\u7aef \n\t\t\tans = lst = 0;\n\t\t}//\u82e5\u66f4\u65b0\u5757\uff0c\u5219\u6e05\u96f6 \n\t\twhile(R < q[i].r) {\n\t\t\t++R; ++cnt[c[R]];\n\t\t\tans = lst = max(lst, cnt[c[R]] * a[R]);\n\t\t\t// \u63d2\u5165\u5757\u5916\u90e8\u4efd \n\t\t}\n\t\tL = ed[id[q[i].l]] + 1;//\u5de6\u6307\u9488\u79fb\u52a8\u81f3\u5757\u53f3\u7aef\u52a0\u4e00 \n\t\twhile(L > q[i].l) {\n\t\t\tL--; cnt[c[L]]++;\n\t\t\tans = max(ans, cnt[c[L]] * a[L]);\n\t\t\t//\u5411\u5de6\u63d2\u5165\u5757\u5185\u90e8\u5206 \n\t\t}\n\t\tAns[q[i].pos] = ans;//\u8bb0\u5f55\u7b54\u6848 \n\t\tans = lst;//\u64a4\u9500\u8d21\u732e \n\t\tL = ed[id[q[i].l]] + 1;\n\t\twhile(L > q[i].l) {\n\t\t\tL --;\n\t\t\tcnt[c[L]] --;//\u64a4\u9500\u8d21\u732e \n\t\t}\n\t}\n\trep(i, 1, m + dlt) writeln(Ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1621672367,
        "uid": 279197,
        "name": "Mars_Dingdang",
        "ccfLevel": 6,
        "title": "AT1219 \u56de\u6eda\u83ab\u961f"
    },
    {
        "content": "# \u9898\u610f\n\u8bbe $ a $ \u7684\u4ef7\u503c\u4e3a $ a \\times cnt_a $\uff08$ cnt_a $ \u4e3a $ a $ \u5728\u533a\u95f4\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\uff09\uff0c\u6c42\u533a\u95f4\u79cd\u67d0\u79cd\u5143\u7d20\uff0c\u4f7f\u5f97\u8fd9\u79cd\u5143\u7d20\u7684\u4ef7\u503c\u6700\u5927\u3002\n\n\u56e0\u4e3a\u8bbe\u8ba1\u51fa\u73b0\u5143\u7d20\u7684\u6b21\u6570\uff0c\u6240\u4ee5\u9996\u5148\u8003\u8651\u83ab\u961f\u3002\n\n\u7531\u4e8e Add \u64cd\u4f5c\u5f88\u597d\u5199\uff0cDel \u64cd\u4f5c\u4e0d\u4f1a\u5199\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u4e00\u79cd\u4e13\u95e8\u5904\u7406 Del \u4e0d\u5bb9\u6613\u5904\u7406\u7684\u83ab\u961f\uff1a\u56de\u6eda\u83ab\u961f\u3002\n\n\u56de\u6eda\u83ab\u961f\u5c06\u8be2\u95ee\u533a\u95f4\u5206\u4e3a\u4e24\u90e8\u5206\u3002\u8bbe $ [L,R] $ \u7684\u5de6\u7aef\u70b9 $ L $ \u6240\u5728\u5757\u7684\u53f3\u7aef\u70b9\u4e3a $ p $\uff0c\u5219\u8bb2\u533a\u95f4\u5206\u4e3a $ [L,p] $ \u548c $ [p,R] $\u3002\n\n\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e\u5de6\u7aef\u70b9\u6240\u5728\u5757\u4e0d\u53d8\u7684\u60c5\u51b5\uff0c\u53f3\u7aef\u70b9 $ R $ \u662f\u5355\u8c03\u9012\u589e\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5 Add\uff1b\u800c\u5de6\u7aef\u70b9\u7684\u6570\u91cf\u7ea7\u5728 $ O(\\sqrt n) $ \u7ea7\u522b\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u53ea\u8ba1\u7b97\u53f3\u8fb9\u7684\u533a\u95f4\u7684\u8d21\u732e\uff0c\u7136\u540e\u5411\u5de6 Add\uff0c\u6700\u540e\u64a4\u56de\u5411\u5de6\u7684 Add\u3002\n\n\u56e0\u4e3a\u5411\u5de6\u7684\u64cd\u4f5c\u53ea\u6709 $ O(\\sqrt n) $ \u4e2a\uff0c\u6240\u4ee5\u64a4\u56de\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u4e5f\u662f $ O(\\sqrt n) $ \u7684\u3002\n\n\u4e0d\u8fc7\u8fd9\u9053\u9898\u6709\u4e00\u70b9\u513f\u7ec6\u8282\uff0c\u5177\u4f53\u89c1\u4ee3\u7801\u3002\n```cpp\n#include<algorithm>\n#include<cstdio>\n#include<cmath>\nconst int M=1e5+5;\nint n,m,p,a[M],CB[M],lsh[M];long long cur,tmp,ans[M];\nint len,v[M],mdf[M];bool vis[M];\ninline long long max(const long long&a,const long long&b){\n\treturn a>b?a:b;\n}\nstruct Query{\n\tint L,R,p,id;\n\tinline bool operator<(const Query&it)const{\n\t\treturn p==it.p?R<it.R:L<it.L;\n\t}\n}q[M];\ninline void AddR(const int&val){\n\tcur=max(cur,1ll*++CB[val]*lsh[val]);\n}\ninline void AddL(const int&val){\n\tif(!vis[val]){\n\t\t++len;mdf[len]=val;v[len]=CB[val];vis[val]=true;\n\t}\n\ttmp=max(tmp,1ll*++CB[val]*lsh[val]);\n}\nsigned main(){\n\tregister int i,j,id;\n\tscanf(\"%d%d\",&n,&m);p=ceil(n/sqrt(2.0*m/3));\n\tfor(i=1;i<=n;++i)scanf(\"%d\",a+i),lsh[++len]=a[i];\n\tstd::sort(lsh+1,lsh+len+1);len=std::unique(lsh+1,lsh+len+1)-lsh-1;\n\tfor(i=1;i<=n;++i)a[i]=std::lower_bound(lsh+1,lsh+len+1,a[i])-lsh;len=0;\n\tfor(i=1;i<=m;++i){\n\t\tscanf(\"%d%d\",&q[i].L,&q[i].R);\n\t\tq[i].p=(q[i].L-1)/p+1;q[i].id=i;\n\t}\n\tstd::sort(q+1,q+m+1);\n\tfor(i=1;i<=m;++i){\n\t\tconst int&QL=q[i].L,&QR=q[i].R;\n\t\tif(i==1||q[i].p!=q[i-1].p){\n\t\t\tfor(j=1;j<=n;++j)CB[j]=0;\n\t\t\tid=q[i].p*p;cur=0;\n\t\t}\n\t\tif((QL-1)/p==(QR-1)/p){\n\t\t\ttmp=0;\n\t\t\tfor(j=QL;j<=QR;++j)AddL(a[j]);\n\t\t}\n\t\telse{\n\t\t\twhile(id<QR)AddR(a[++id]);tmp=cur;\n\t\t\tfor(j=QL;j<=q[i].p*p;++j)AddL(a[j]);\n\t\t}\n\t\tfor(j=1;j<=len;++j)CB[mdf[j]]=v[j],vis[mdf[j]]=false;\n\t\tans[q[i].id]=tmp;len=0;\n\t}\n\tfor(i=1;i<=m;++i)printf(\"%lld\\n\",ans[i]);\n}\n```",
        "postTime": 1618922631,
        "uid": 160839,
        "name": "Prean",
        "ccfLevel": 7,
        "title": "\u6570\u636e\u7ed3\u6784 \u56de\u6eda\u83ab\u961f AT1219\u9898\u89e3"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](http://zrzring.cn/index.php/archives/579)\n\n\u56e0\u4e3a$max$\u8fd0\u7b97\u65e0\u6cd5\u64a4\u9500\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u83ab\u961f\u4e0d\u80fd\u6709\u5220\u70b9\u64cd\u4f5c\uff0c\u5982\u679c\u53ea\u52a0\u70b9\u7684\u8bdd\uff0c\u8003\u8651$r$\u662f\u6392\u8fc7\u5e8f\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5\u626b\u8fc7\u53bb\uff0c$l$\u5728\u540c\u4e00\u4e2a\u5757\u91cc\uff0c\u8fd9\u6837\u53ef\u4ee5$l$\u6240\u5728\u7684\u5757\u5916\u4fe1\u606f\u4fdd\u7559\u5e76\u968f\u7740$r$\u66f4\u65b0\uff0c\u5757\u5185\u4fe1\u606f\u66b4\u529b\u8ba1\u7b97\n\n\u8bb0\u5757\u5927\u5c0f\u4e3a$B$\uff0c\u6bcf\u6b21\u66b4\u529b\u8ba1\u7b97$l$\u6240\u5728\u7684\u5757\u7684\u590d\u6742\u5ea6\u8d21\u732e\u4e3a$B$\uff0c$r$\u9700\u8981\u904d\u5386\u5757\u7684\u6570\u91cf\u6b21\u6574\u4e2a\u5e8f\u5217\uff0c\u5757\u6570\u91cf\u4e3a$\\displaystyle\\frac{n}{B}$\uff0c\u53d6 $B = \\sqrt{n}$\uff0c\u6700\u4f18\u590d\u6742\u5ea6\u4e3a$O(n\\sqrt{n})$\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <algorithm>\n#include <queue>\n\nusing namespace std;\n\nconst int N = 2e6 + 10, inf = 0x3f3f3f3f;\n\nconst long long Linf = 0x3f3f3f3f3f3f3f3f;\n\ninline int read() {\n\tbool sym = 0; int res = 0; char ch = getchar();\n\twhile (!isdigit(ch)) sym |= (ch == '-'), ch = getchar();\n\twhile (isdigit(ch)) res = (res << 3) + (res << 1) + (ch ^ 48), ch = getchar();\n\treturn sym ? -res : res;\n}\n\nstruct QRY {\n\tint l, r, id;\n} qry[N];\n\nint n, m, cnt[N], val[N], col[N], C, L[N], R[N], bel[N], b[N];\n\nlong long ans[N];\n\nvoid init() {\n\tint B = sqrt(n);\n\tfor (int i = 1; i <= n; i += B) {\n\t\tL[++C] = i; R[C] = i + B - 1;\n\t}\n\tfor (int i = 1; i <= C; i++) {\n\t\tfor (int j = L[i]; j <= R[i]; j++) bel[j] = i;\n\t}\n}\n\nbool cmp(QRY a, QRY b) {\n\treturn bel[a.l] == bel[b.l] ? a.r < b.r : bel[a.l] < bel[b.l];\n}\n\nint main() {\n\tn = read(); m = read(); init();\n\tfor (int i = 1; i <= n; i++) val[i] = read(), b[i] = val[i];\n\tsort(b + 1, b + n + 1);\n\tfor (int i = 1; i <= n; i++) col[i] = lower_bound(b + 1, b + n + 1, val[i]) - b;\n\tfor (int i = 1; i <= m; i++) qry[i] = (QRY){read(), read(), i};\n\tsort(qry + 1, qry + m + 1, cmp);\n\tfor (int k = 1, i = 1; k <= C; k++) {\n\t\tint r = R[k]; long long res = 0, tmp = 0;\n\t\twhile (bel[qry[i].l] == k) {\n\t\t\twhile (r < qry[i].r) r++, cnt[col[r]]++, res = max(res, 1ll * cnt[col[r]] * val[r]);\n\t\t\ttmp = res;\n\t\t\tfor (int j = qry[i].l; j <= min(R[k], qry[i].r); j++) cnt[col[j]]++, res = max(res, 1ll * cnt[col[j]] * val[j]);\n\t\t\tans[qry[i].id] = res;\n\t\t\tfor (int j = qry[i].l; j <= min(R[k], qry[i].r); j++) cnt[col[j]]--; res = tmp; i++;\n\t\t}\n\t\tfor (int j = R[k] + 1; j <= r; j++) cnt[col[j]]--;\n\t}\n\tfor (int i = 1; i <= m; i++) printf(\"%lld\\n\", ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1610185206,
        "uid": 28392,
        "name": "zrzring",
        "ccfLevel": 5,
        "title": "AT1219 \u3010\u6b74\u53f2\u306e\u7814\u7a76\u3011"
    },
    {
        "content": "# \u9898\u76ee\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[\u70b9\u8fd9\u91cc](http://222.180.160.110:1024/problem/4881)\u770b\u9898\u76ee\u3002  \n# \u5206\u6790\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;~~\u4e00\u773c\u83ab\u961f\u5427......~~  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4e0d\u96be\u60f3\u5230\u83ab\u961f\u3002\u79bb\u7ebf\u4e0b\u6765\u4e4b\u540e\uff0c\u7528\u4e00\u4e2a\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u4e2d\u7684\u6570\u7684\u4e2a\u6570\uff0c\u987a\u4fbf\u7ef4\u62a4\u4e00\u4e0b\u7b54\u6848\uff0c\u65f6\u95f4\u662f$O(n\\sqrt n\\log_2n)$\u3002   \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7136\u540e\u53d1\u73b0\u4e0a\u9762\u7684\u65b9\u6cd5\u662f\u65e0\u6cd5\u518d\u4f18\u5316\u7684\u4e86\uff0c\u6211\u4eec\u5f97\u6362\u4e2a\u601d\u8def\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u6211\u4eec\u53d1\u73b0\uff0c\u83ab\u961f\u7684\u65f6\u5019\uff0c\u6700\u5927\u7684\u95ee\u9898\u5c31\u662f**\u52a0\u5165\u4e00\u4e2a\u65b0\u7684\u5143\u7d20\u5f88\u597d\u7ef4\u62a4\uff0c\u4f46\u662f\u5220\u9664\u4e00\u4e2a\u5143\u7d20\u5c31\u5f88\u96be**\u3002\u4e8e\u662f\uff0c\u6211\u4eec\u4fbf\u60f3\u5230\uff0c\u7528**\u52a0\u6cd5\u4ee3\u66ff\u51cf\u6cd5**\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8003\u8651\u5bf9\u4e8e\u5de6\u7aef\u70b9\u5728\u4e00\u4e2a\u5757$T$\u7684\u8be2\u95ee$[l,r]$\uff0c\u6211\u4eec\u5c06\u5b83\u5206\u6210\u4e24\u7c7b\uff1a  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.$l,r$\u5728\u4e00\u4e2a\u5757\u91cc\u9762\uff0c\u8fd9\u4e2a\u65f6\u5019\u76f4\u63a5$O(\\sqrt n)$\u66b4\u529b\u5904\u7406\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.$l,r$\u4e0d\u5728\u4e00\u4e2a\u5757\u91cc\u9762\u3002\u7531\u4e8e\u5728\u6392\u5e8f\u7684\u65f6\u5019\uff0c$l$\u5728\u540c\u4e00\u4e2a\u5757\u7684\u8be2\u95ee\u7684$r$\u662f\u5347\u5e8f\u7684\uff0c\u6240\u4ee5\u76f4\u63a5\u79fb\u52a8$r$\u3002\u800c$l$\u53ef\u80fd\u662f\u4e71\u5e8f\u7684\uff0c\u6211\u4eec\u53c8\u53ea\u80fd\u505a\u52a0\u6cd5\uff0c\u4e8e\u662f\u5c31\u53ef\u4ee5\u7f29\u5c0f$l$\u79fb\u52a8\u7684\u8303\u56f4\uff0c\u8f6c\u800c\u7528$r$\u6765\u66ff\u6362\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5177\u4f53\u6765\u8bf4\uff0c\u79fb\u52a8\u5230\u4e00\u4e2a\u65b0\u7684\u5757\u65f6\uff0c\u5148\u5c06\u53f3\u6307\u9488\u7f6e\u4e3a$R(T)$\uff0c\u4e4b\u540e\u53f3\u6307\u9488\u5c31\u53ea\u4f1a\u589e\u5927\uff0c\u4e2d\u9014\u5904\u7406**\u516c\u5171\u8d21\u732e**\u3002\u6bcf\u6b21\u5904\u7406\u4e00\u4e2a$l,r$\u4e0d\u5728\u4e00\u4e2a\u5757\u7684\u8be2\u95ee\uff0c\u5c31\u5148\u6b63\u5e38\u79fb\u52a8\u53f3\u6307\u9488\u3002\u7136\u540e\u5c06\u5de6\u6307\u9488\u91cd\u7f6e\u4e3a$R(T)+1$\uff0c\u5e76\u4e14\u79fb\u52a8\u5230$l$\uff0c\u4e2d\u9014\u5904\u7406**\u5355\u72ec\u8d21\u732e**\u3002\u628a\u4e24\u8fb9\u7684\u7b54\u6848\u5408\u5230\u4e00\u8d77\uff0c\u5f97\u51fa\u5f53\u524d\u8be2\u95ee\u7684\u7b54\u6848\u3002\u4e4b\u540e\u5c31\u628a\u5de6\u6307\u9488\u91cd\u65b0\u79fb\u56de$R(T)+1$\u3002\u5f53\u4e00\u4e2a\u5757\u7684\u8be2\u95ee\u5904\u7406\u5b8c\u4e4b\u540e\uff0c\u5c06\u5de6\u6307\u9488\u548c\u53f3\u6307\u9488\u79fb\u5230$R(T+1)+1$\u548c$R(T+1)$\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u201c\u56de\u6eda\u83ab\u961f\u201d\u3002\u5177\u4f53\u53ef\u4ee5\u518d\u770b[\u8fd9\u7bc7\u535a\u5ba2](https://www.cnblogs.com/Parsnip/p/10969989.html)\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u53ef\u4ee5\u8bc1\u660e\u65f6\u95f4\u590d\u6742\u5ea6\u65f6$O(n\\sqrt n)$\u3002  \n# \u4ee3\u7801\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <utility>\n#include <algorithm>\nusing namespace std;\n\ntypedef long long LL;\ntypedef pair<int, int> node;\n\n#define xx first\n#define yy second\n\nconst int MAXN = 1e5 + 5, MAXQ = 1e5 + 5, MAXSQRT = 320;\n\ntemplate<typename _T>\nvoid read( _T &x )\n{\n\tx = 0;char s = getchar();int f = 1;\n\twhile( s > '9' || s < '0' ){if( s == '-' ) f = -1; s = getchar();}\n\twhile( s >= '0' && s <= '9' ){x = ( x << 3 ) + ( x << 1 ) + ( s - '0' ), s = getchar();}\n\tx *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x )\n{\n\tif( x < 0 ){ putchar( '-' ); x = ( ~ x ) + 1; }\n\tif( 9 < x ){ write( x / 10 ); }\n\tputchar( x % 10 + '0' );\n}\n\ntemplate<typename _T>\n_T MAX( const _T a, const _T b )\n{\n\treturn a > b ? a : b;\n}\n\nint block;\n\nstruct query\n{\n\tint l, r, i, b;\n\tquery(){} query( const int L, const int R, const int I ) { l = L, r = R, i = I, b = l / block; }\n\tbool operator < ( const query & other ) const { return b == other.b ? r < other.r : l < other.l; }\n}q[MAXQ];\n\nnode a[MAXN];\n\nLL ans[MAXQ];\nint right[MAXSQRT];\nint X[MAXN], imp[MAXN], cnt[MAXN], ccnt[MAXN];\nint N, Q, tot;\n\nint main()\n{\n\tread( N ), read( Q ); block = sqrt( N );\n\tfor( int i = 1 ; i <= N ; i ++ ) read( a[i].xx ), imp[i] = a[i].xx, a[i].yy = i, right[i / block] = i;\n\tfor( int i = 1 ; i <= Q ; i ++ ) read( q[i].l ), read( q[i].r ), q[i].i = i, q[i].b = q[i].l / block;\n\tsort( a + 1, a + 1 + N ), sort( q + 1, q + 1 + Q );\n\tfor( int i = 1 ; i <= N ; i ++ ) \n\t{\n\t\tif( a[i].xx ^ a[i - 1].xx ) imp[++ tot] = a[i].xx;\n\t\tX[a[i].yy] = tot;\n\t}\n\tq[0].b = -1;\n\tLL tmp = 0;\n\tint ll = 1, rr = 0, segL, segR;\n\tfor( int i = 1 ; i <= Q ; i ++ )\n\t{\n\t\tsegL = q[i].l, segR = q[i].r;\n\t\tif( q[i].b ^ q[i - 1].b )\n\t\t{\n\t\t\ttmp = 0;\n\t\t\twhile( rr > right[q[i].b] ) cnt[X[rr --]] --;\n\t\t\twhile( ll < right[q[i].b] + 1 ) cnt[X[ll ++]] --;\n            //\u91cd\u7f6e\u6307\u9488\n\t\t}\n\t\tif( segL / block == segR / block )\n\t\t{\n\t\t\tfor( int j = segL ; j <= segR ; j ++ ) ccnt[X[j]] = 0;\n\t\t\tfor( int j = segL ; j <= segR ; j ++ ) ccnt[X[j]] ++;\n\t\t\tfor( int j = segL ; j <= segR ; j ++ ) ans[q[i].i] = MAX( ans[q[i].i], 1ll * ccnt[X[j]] * imp[X[j]] );\n\t\t}\n        //\u5904\u7406\u5de6\u53f3\u8fb9\u754c\u5728\u540c\u4e00\u4e2a\u5757\u91cc\u9762\u7684\u8be2\u95ee\n\t\telse\n\t\t{\n\t\t\tll = right[q[i].b] + 1;\n\t\t\twhile( rr < segR ) rr ++, tmp = MAX( tmp, 1ll * ( ++ cnt[X[rr]] ) * imp[X[rr]] );\n\t\t\tans[q[i].i] = tmp;\n\t\t\twhile( ll > segL ) ll --, ans[q[i].i] = MAX( ans[q[i].i], 1ll * ( ++ cnt[X[ll]] ) * imp[X[ll]] );\n            //\u79fb\u52a8\u5de6\u6307\u9488\n\t\t\twhile( ll < right[q[i].b] + 1 ) cnt[X[ll ++]] --;\n            //\u56de\u6eda\u5de6\u6307\u9488\n  \t\t}\n\t}\n\tfor( int i = 1 ; i <= Q ; i ++ ) write( ans[i] ), putchar( '\\n' );\n\treturn 0;\n}\n```",
        "postTime": 1578113219,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "\u300cJOISC 2014 Day1\u300d \u5386\u53f2\u7814\u7a76"
    },
    {
        "content": "\u56de\u6eda\u83ab\u961f\u4f8b\u9898\u3002\n\n\u8fd9\u9898\u7684\u610f\u601d\u5927\u6982\u662f\n\n\u8bbe $cnt_i$ \u4e3a l ~ r \u8fd9\u4e2a\u533a\u95f4 $i$ \u51fa\u73b0\u7684\u6b21\u6570\n\n\u6c42$m$ \u6b21\u8be2\u95ee \u6c42 l~r \u7684 max {$a_i$ * $cnt_i$}\n\n$n$ , $m$ \u540c\u9636 $1e5$\n\n\u6ca1\u6709\u5f3a\u5236\u5728\u7ebf\uff1f \u6211\u4eec\u8003\u8651\u666e\u901a\u7684\u83ab\u961f\uff1f\u5982\u679c\u6700\u5927\u503c\u5728\u67d0\u4e00\u6bb5\uff0c\u5f53\u4f60\u628a\u6307\u9488\u79fb\u5230\u53e6\u4e00\u6bb5\uff0c\u8fd9\u4e2a\u7b54\u6848\u5c31\u5931\u6548\u4e86\u3002\n\n\u6240\u4ee5\u8003\u8651\u56de\u6eda\u83ab\u961f\u3002\n\n\u56de\u6eda\u83ab\u961f\u7684\u505a\u6cd5\u662f\n\n~~~\n\u6309\u5de6\u7aef\u70b9\u6240\u5728\u7684\u5757\u6392\u5e8f \u5982\u679c\u76f8\u540c \u6309\u53f3\u7aef\u70b9\u6392\u5e8f\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u5757\u6c42\u89e3\u3002\u5f04\u4e2a\u53f3\u6307\u9488\u5728\u5757\u7684\u6700\u53f3\u8fb9\u3002\n\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b \u5982\u679c\u5de6\u53f3\u6307\u9488\u5171\u5904\u4e00\u4e2a\u5757\u5185 \u76f4\u63a5\u66b4\u529b \u5c31\u662f\u6839\u53f7\u7ea7\u522b\u7684\n\u5982\u679c\u4e0d\u5728\u4e00\u4e2a\u5757\u5185 \u7531\u4e8e\u53f3\u7aef\u70b9\u662f\u9012\u589e\u7684 \u8003\u8651\u79fb\u52a8\u53f3\u7aef\u70b9\n\u5de6\u8fb9\u7684\u8d21\u732e\u76f4\u63a5\u4ece q[i].l ~ \u5757\u7684\u6700\u53f3\u8fb9 \u66b4\u529b\u5c31\u884c\u4e86\n~~~\n\n\u6613\u8bc1\u590d\u6742\u5ea6\uff1a\n\u5bf9\u4e8e\u6574\u5757\u7684\u8be2\u95ee \u4e00\u5171\u6709 $\\sqrt n$ \u4e2a\u5757 \u53f3\u7aef\u70b9\u6bcf\u6b21\u90fd\u662f`\u5f53\u524d\u5757\u7684\u53f3\u7aef\u70b9` \u6240\u4ee5\u6700\u591a\u79fb\u52a8$n$\u7684\u957f\u5ea6\n\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee \u8003\u8651\u5de6\u8fb9\u7684\u7aef\u70b9 \u7531\u4e8e\u6309\u5de6\u7aef\u70b9\u6392\u5e8f \u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\u6700\u591a\u76f8\u5dee $\\sqrt n$ \u7684\u957f\u5ea6\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u505a\u5230 $O(n \\sqrt n)$ \u4e86\n\n```cpp\n// Isaunoya\n#include<bits/stdc++.h>\nusing namespace std ;\nusing LL = long long ;\nusing uint = unsigned int ;\n#define int long long\n#define fir first\n#define sec second\n#define pb push_back\n#define mp(x , y) make_pair(x , y)\ntemplate < typename T > inline void read(T & x) { x = 0 ; int f = 1 ; register char c = getchar() ;\n  for( ; ! isdigit(c) ; c = getchar()) if(c == '-') f = -1 ;\n  for( ; isdigit(c) ; c = getchar()) x = (x << 1) + (x << 3) + (c & 15) ;\n  x *= f ;\n}\ntemplate < typename T > inline void print(T x) {\n  if(! x) { putchar('0') ; return ; }\n  static int st[105] ;\n  if(x < 0) putchar('-') , x = -x ;\n  int tp = 0 ;\n  while(x) st[++ tp] = x % 10 , x /= 10 ;\n  while(tp) putchar(st[tp --] + '0') ;\n}\ntemplate < typename T > inline void print(T x , char c) { print(x) ; putchar(c) ; }\ntemplate < typename T , typename ...Args > inline void read(T & x , Args & ...args) { read(x) ; read(args...) ; }\ntemplate < typename T > inline void sort( vector < T > & v) { sort(v.begin() , v.end()) ; return ; }\ntemplate < typename T > inline void unique( vector < T > & v) { sort(v) ; v.erase(unique(v.begin() , v.end()) , v.end()) ; }\ntemplate < typename T > inline void cmax(T & x , T y) { if(x < y) x = y ; return ; }\ntemplate < typename T > inline void cmin(T & x , T y) { if(x > y) x = y ; return ; }\nconst int N = 1e5 + 10 ;\nint n , m ;\nint a[N] , b[N] ;\nstruct node { int l , r , id ; } q[N] ;\nint bl[N] ;\ninline bool cmp(node x , node y) {\n  if(bl[x.l] == bl[y.l]) return x.r < y.r ;\n  return bl[x.l] <  bl[y.l] ;\n}\nint cnt[N] , cnt2[N] ;\ninline int calc(int l , int r) { int ret = 0 ;\n  for(register int i = l ; i <= r ; i ++) { cnt2[a[i]] = 0 ; }\n  for(register int i = l ; i <= r ; i ++) { ++ cnt2[a[i]] ; cmax(ret , 1LL * (cnt2[a[i]]) * b[a[i]]) ; }\n  return ret ;\n} int unt ;\nint ans , Ans[N] ;\ninline void add(int x) {\n  ++ cnt[a[x]] ;\n  cmax(ans , 1LL * cnt[a[x]] * b[a[x]]) ;\n} int now = 1 ;\ninline void solve(int id) {\n  int qr = min(id * unt , n) , pr = qr ; memset(cnt , 0 , sizeof(cnt)) ;\n  ans = 0 ;\n  for( ; bl[q[now].l] == id ; now ++) {\n    if(bl[q[now].l] == bl[q[now].r]) { Ans[q[now].id] = calc(q[now].l , q[now].r) ; continue ; }\n    while(pr < q[now].r) { add(++ pr) ; } int last = ans ;\n    for(register int i = q[now].l ; i <= qr ; i ++) add(i) ;\n    Ans[q[now].id] = ans ;\n    for(register int i = q[now].l ; i <= qr ; i ++) -- cnt[a[i]] ;\n    ans = last ;\n  }\n}\nsigned main() {\n  read(n , m) ;\n  for(register int i = 1 ; i <= n ; i ++) read(a[i]) , b[i] = a[i] ;\n  sort(b + 1 , b + n + 1) ; int len = unique(b + 1 , b + n + 1) - b - 1 ;\n  for(register int i = 1 ; i <= n ; i ++) a[i] = lower_bound(b + 1 , b + len + 1 , a[i]) - b ;\n  unt = sqrt(n) ;\n  for(register int i = 1 ; i <= n ; i ++) bl[i] = (i - 1) / unt + 1 ;\n  for(register int i = 1 ; i <= m ; i ++) read(q[i].l , q[i].r) , q[i].id = i ;\n  sort(q + 1 , q + m + 1 , cmp) ;\n  for(register int i = 1 ; i <= bl[n] ; i ++) solve(i) ;\n  for(register int i = 1 ; i <= m ;i ++) print(Ans[i] , '\\n') ;\n  return 0 ;\n}\n\n\n```",
        "postTime": 1572233424,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 AT1219 \u3010\u6b74\u53f2\u306e\u7814\u7a76\u3011"
    },
    {
        "content": "\u9898\u89e3\u91cc\u7684dalao\u4eec\u57fa\u672c\u90fd\u662f\u7528\u56de\u6eda\u83ab\u961f\u505a\u7684\uff0c\u4f46\u6700\u8fd1\u6b63\u597d\u5728\u590d\u4e60\u5206\u5757\uff0c\u4e8e\u662f\u4e4e\u5c31\u7528\u5206\u5757\u6c34\u4e86\u4e00\u53d1\u3002\n\n## \u9898\u76ee\u5206\u6790\n\n\u5178\u578b\u7684\u9884\u5904\u7406\u65e0\u4fee\u6539\u5206\u5757\u9898\uff0c\u8fd9\u7c7b\u9898\u76ee\u4e00\u822c\u9075\u5faa\u8fd9\u4e48\u4e2a\u5957\u8def\uff1a\n\n1 . \u89c6\u60c5\u51b5\u79bb\u6563\u5316\n\n2 . \u9884\u5148\u5904\u7406\u51fa $f[i][j]$ \u8868\u793a\u7b2ci\u5757\u81f3\u7b2cj\u5757\u7684\u7b54\u6848\uff0c $cnt[i][j]$ \u8868\u793a\u524d $i$ \u5757\u4e2d $j$ \u51fa\u73b0\u7684\u6b21\u6570\n\n3 . \u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee $[l,r]$ \uff0c\u82e5\u5728\u540c\u4e00\u5757\u5185\u5219\u66b4\u529b\u6c42\u53d6\uff0c\u5426\u5219\u6211\u4eec\u4ee4 $bl$ \u3001 $br$ \u5206\u522b\u4e3a $l$ \u3001 $r$ \u6240\u5728\u7684\u533a\u5757\uff0c\u5148\u53d6\u51fa\u4e2d\u95f4\u6574\u5757\u7684\u7b54\u6848 $f[bl+1][br-1]$ \uff0c\u518d\u5bf9\u4e24\u4fa7\u4e0d\u5b8c\u6574\u5757\u8fdb\u884c\u626b\u63cf\u66f4\u65b0\u7b54\u6848\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u8f7b\u677e\u6109\u5feb\u7684\u5207\u6389\u8fd9\u9898\u4e86~\n\n## AC\u4ee3\u7801\n```\n#include <bits/stdc++.h>\n#define rep(i, x, y) for (int i = (x); i <= (y); i++)\n#define down(i, x, y) for (int i = (x); i >= (y); i--)\n#define full(x, y) memset(x, y, sizeof(x))\ntypedef long long ll;\nconst int maxn = 1e5 + 10;\nconst int maxb = 320;\n\nint n, q;\nll mx, a[maxn], b[maxn], mp[maxn];\nll num, block, l[maxb], r[maxb], bel[maxn], f[maxb][maxb], cnt[maxb][maxn];\n\ninline int read()\n{\n    int x = 0, f = 1;\n    char ch = getchar();\n    while (ch < '0' || ch > '9')\n    {\n        if (ch == '-')\n            f = -1;\n        ch = getchar();\n    }\n    while (ch >= '0' && ch <= '9')\n    {\n        x = x * 10 + ch - '0';\n        ch = getchar();\n    }\n    return x * f;\n}\n\n//\u9884\u5904\u7406\u51fa\u6bcf\u5757\u95f4\u7684\u6700\u5927\u91cd\u8981\u5ea6\n//\u9700\u8981\u6ce8\u610f\u7684\u662fa\u662f\u79bb\u6563\u5316\u540e\u7684\u6570\u7ec4\uff0c\u5728\u8ba1\u7b97\u91cd\u8981\u5ea6\u7684\u65f6\u5019\u8981\u8bb0\u5f97\u8fd8\u539f\nvoid init()\n{\n    rep(i, 1, num)\n    {\n        mx = 0;\n        rep(j, l[i], n)\n        {\n            mp[a[j]]++;\n            mx = std::max(mx, mp[a[j]] * b[a[j]]);\n            f[i][bel[j]] = mx;\n        }\n        full(mp, 0);\n    }\n}\n\nvoid build()\n{\n    block = sqrt(n);\n    num = (n - 1) / block + 1;\n    rep(i, 1, n) bel[i] = (i - 1) / block + 1, cnt[bel[i]][a[i]]++;\n    rep(i, 1, num) l[i] = (i - 1) * block + 1, r[i] = i * block;\n    r[num] = n;\n    //\u9884\u5904\u7406\u51fa\u524di\u5757\u4e2dj\u7684\u51fa\u73b0\u6b21\u6570\n    rep(i, 1, num) rep(j, 1, n) cnt[i][j] += cnt[i - 1][j];\n}\n\nll query(int ql, int qr)\n{\n    int bl = bel[ql], br = bel[qr];\n    ll res = 0;\n    if (bl ^ br)\n    {\n        if (bl + 1 <= br - 1)\n            res = f[bl + 1][br - 1];\n        rep(i, ql, r[bl])\n        {\n            mp[a[i]]++;\n            mx = (mp[a[i]] + cnt[br - 1][a[i]] - cnt[bl][a[i]]) * b[a[i]];\n            res = std::max(res, mx);\n        }\n        rep(i, l[br], qr)\n        {\n            mp[a[i]]++;\n            mx = (mp[a[i]] + cnt[br - 1][a[i]] - cnt[bl][a[i]]) * b[a[i]];\n            res = std::max(res, mx);\n        }\n        full(mp, 0);\n    }\n    else\n    {\n        rep(i, ql, qr)\n        {\n            mp[a[i]]++;\n            res = std::max(res, mp[a[i]] * b[a[i]]);\n        }\n        full(mp, 0);\n    }\n    return res;\n}\n\nint main(int argc, char const *argv[])\n{\n    n = read(), q = read();\n    rep(i, 1, n) a[i] = b[i] = read();\n    std::sort(b + 1, b + n + 1);\n    int m = std::unique(b + 1, b + n + 1) - b - 1;\n    rep(i, 1, n) a[i] = std::lower_bound(b + 1, b + n + 1, a[i]) - b; //\u79bb\u6563\u5316\n    build(), init();\n    int ql, qr;\n    rep(i, 1, q)\n    {\n        ql = read(), qr = read();\n        printf(\"%lld\\n\", query(ql, qr));\n    }\n    return 0;\n}\n\n```\n",
        "postTime": 1627793126,
        "uid": 491258,
        "name": "FoXreign",
        "ccfLevel": 0,
        "title": "AT1219 \u3010\u5386\u53f2\u7814\u7a76\u3011 \u9898\u89e3"
    },
    {
        "content": "## Description\n\n\u7ed9\u5b9a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a$\uff0c$m$ \u6b21\u8be2\u95ee\uff0c\u6c42\uff1a\n\n$$\\max_{i\\in[l,r]}cnt[a_i]\\times a_i$$\n\n\u5373\u5e26\u6743\u4f17\u6570\u3002\n\n$1\\le n,m\\leq 10^5,1\\le a_i \\le 10^9$\n\n## Solution\n\n\u524d\u7f6e\u829d\u58eb\uff1a\u83ab\u961f\uff08\u4e0d\u4f1a\u7684\u53ef\u4ee5\u6233[\u8fd9\u91cc](https://www.cnblogs.com/hl-fc/p/14674384.html)\uff09\n\n\u6211\u4eec\u8003\u8651\u6b63\u5e38\u83ab\u961f\u7684\u64cd\u4f5c\uff0c\u53ef\u4ee5\u53d1\u73b0\u52a0\u5165\u4e00\u4e2a\u6570\u5f88\u8212\u670d\uff0c\u4f46\u662f\u5220\u9664\u64cd\u4f5c\u5c31\u5f88\u2026\u2026\n\n\u6240\u4ee5\u6211\u4eec\u8003\u8651\u4e0d\u5220\u9664\uff0c\u53ea\u52a0\u5165\u3002\n\n\u63a5\u4e0b\u6765\u7684\u5185\u5bb9\u6bd4\u8f83\u62bd\u8c61\uff0c\u5efa\u8bae\u753b\u4e2a\u56fe\u7406\u89e3\u4e00\u4e0b\uff1a\n\n\u9996\u5148\u6211\u4eec\u4ecd\u7136\u5c06\u5e8f\u5217\u5206\u6210 $\\frac n {\\sqrt m}$ \u6bb5\uff0c\u5bf9\u4e8e\u6bcf\u6bb5\u7684\u8be2\u95ee\uff0c\u6211\u4eec\u5206\u522b\u5904\u7406\u3002\n\n\u9996\u5148\u6211\u4eec\u5148\u5c06\u83ab\u961f\u7684\u5de6\u7aef\u70b9 $L$ \u5b9a\u4f4d\u5230\u8be5\u5757\u7684\u53f3\u7aef\u70b9 $+1$ \u7684\u4f4d\u7f6e\uff0c\u53f3\u7aef\u70b9 $R$ \u5b9a\u4f4d\u5230\u8be5\u5757\u53f3\u7aef\u70b9\u7684\u4f4d\u7f6e\u3002\n\n\u6bcf\u6bb5\u7684\u8be2\u95ee\u65e0\u975e\u5206\u4e24\u79cd\u60c5\u51b5\uff1a\n\n1. $[l,r]$ \u5728\u540c\u4e00\u6bb5\u5185\uff0c\u6b64\u65f6\u6211\u4eec\u76f4\u63a5\u66b4\u529b\u6c42\u7b54\u6848\uff0c\u590d\u6742\u5ea6\u4e3a\u5757\u957f\u3002\n\n2. $[l,r]$ \u4e0d\u5728\u540c\u4e00\u6bb5\u5185\uff0c\u6211\u4eec\u5148\u5c06 $R$ \u79fb\u52a8\u5230 $r$\uff0c\u8bb0\u5f55\u4e0b\u6b64\u65f6\u7684\u7b54\u6848 $A$\uff0c\u7136\u540e\u5c06 $L$ \u79fb\u52a8\u5230 $l$\uff0c\u6b64\u65f6\u7684\u7b54\u6848\u5c31\u662f\u771f\u6b63\u7684\u7b54\u6848\u3002\u63a5\u7740\u628a $L$ \u5b9a\u4e3a\u8be5\u5757\u7684\u53f3\u7aef\u70b9 $+1$ \u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u6211\u4eec\u628a $L$ \u5de6\u79fb\u5e26\u6765\u7684\u5f71\u54cd\u53bb\u9664\u6389\u3002\u5c31\u5f97\u51fa\u4e86\u7b54\u6848\uff0c\u4e14\u5220\u9664\u64cd\u4f5c\u5bf9\u7ef4\u62a4\u7b54\u6848\u6ca1\u6709\u5f71\u54cd\uff01\u7531\u4e8e\u5757\u5185\u53f3\u7aef\u70b9\u9012\u589e\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u53ef\u4ee5\u4fdd\u8bc1\u3002\n\n## Code \n\n```cpp\n\nconstexpr int N = 1e5 + 10;\nll data[N],ans,Ans[N];\nint n,m,a[N],cnt[N],bl[N],siz,tot,l,r,R;\nstruct Q{int l,r,id;}q[N];\ninline int pos(const int x) {return (x-1)/siz + 1;}\ninline void add(const int x) {++cnt[a[x]],ans = max(1ll*cnt[a[x]]*data[a[x]],ans);}\ninline void del(const int x) {--cnt[a[x]];}\ninline void Clear(const int x) {\n    ans = 0,r = R = min(x*siz,n),l = r + 1;\n    memset(cnt,0,sizeof cnt);\n} //\u521d\u59cb\u5de6\u53f3\u7aef\u70b9\ninline ll Calc(const int l,const int r) {\n    static int C[N];\n   // std::cout <<\"here \"<< l << \"  \" << r << '\\n';\n    ll res = 0;\n    for(int i = l;i <= r;++i) C[a[i]] = 0;\n    for(int i = l;i <= r;++i) ++C[a[i]],res = max(res,1ll*C[a[i]]*data[a[i]]);\n    return res;\n}//\u540c\u4e00\u5757\u5185\u7206\u7b97\ninline void Init() {\n    read(n,m),siz = sqrt(n),tot = pos(n);\n    for(int i = 1;i <= n;++i) read(a[i]),data[i] = a[i],bl[i] = pos(i);\n    std::sort(data+1,data+1+n);\n    const int len = std::unique(data + 1,data + 1 + n) - data - 1;\n    for(int i = 1;i <= n;++i) a[i] = std::lower_bound(data+1,data+1+len,a[i]) - data ;\n    for(int i = 1;i <= m;++i)  read(q[i].l,q[i].r),q[i].id = i;\n//    std::cout << \"data[39] = \" << data[a[39]] << '\\n';\n    std::sort(q + 1,q + 1 + m,[](Q a,Q b) {return bl[a.l]^bl[b.l] ? a.l < b.l : a.r < b.r;});\n} //\u521d\u59cb\u5316\ninline void Solve() {\n    for(int i = 1,j = 1;i <= tot;++i) {\n        Clear(i);ll tmp;\n        for(;bl[q[j].l] == i;++j) {\n            if(bl[q[j].r] == i) {\n                Ans[q[j].id] =  Calc(q[j].l,q[j].r);\n                continue;\n            }//\u5728\u540c\u4e00\u5757\u5185\n            while(r < q[j].r) add(++r);//\u5148\u52a0\u5165\u53f3\u7aef\u70b9\n            tmp = ans;\n            while(l > q[j].l) add(--l);//\u5728\u52a0\u5165\u5de6\u7aef\u70b9\n            Ans[q[j].id] = ans;\n            while(l <= R) del(l++);//\u53bb\u9664\u5f71\u54cd\n            ans = tmp;\n        }\n    }\n}\nint main(int argc,const char **argv) {\n    Init(),Solve();\n    for(int i = 1;i <= m;++i) print('\\n',Ans[i]);\n    return STD::flush(),0;\n}\n```",
        "postTime": 1622989190,
        "uid": 413147,
        "name": "_Alejandro_",
        "ccfLevel": 0,
        "title": "AT1219\u9898\u89e3"
    },
    {
        "content": "### [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/AT1219)\n\n\u8c37 $\\text{AT}$ \u8bc4\u6d4b\u8fd8\u6ca1\u4fee\u597d\uff0c\u8dd1\u5230 $\\text{LOJ}$ \u4e0a\u4ea4\u4e86\u4e00\u53d1\uff0c[AC \u8bb0\u5f55](https://loj.ac/submission/913975)\u3002\n\n## \u9898\u610f\n\n- \u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217\uff0c\u591a\u6b21\u8be2\u95ee\u533a\u95f4 $[l,r]$ \u4e2d $A \\times T_A$ \u7684\u6700\u5927\u503c\u3002\uff08$T_A$ \u8868\u793a $A$ \u5728\u533a\u95f4\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u3002\uff09\n\n## Sol\n\n\u5206\u6790\u9898\u76ee\uff0c\u53ef\u79bb\u7ebf\uff0c\u63d2\u5165\u65b9\u4fbf\u5220\u9664\u96be\u3002\n\n\u663e\u7136\u56de\u6eda\u83ab\u961f\u88f8\u6a21\u677f\uff0c\u751a\u81f3\u6bd4\u6a21\u677f\u9898\u597d\u5199\u3002\n\n\u589e\u91cf\u65f6\u6bcf\u6b21\u7ef4\u62a4 $T_A$\uff0c\u5e76\u4e0d\u65ad\u66f4\u65b0\u3002\n\n\u6bcf\u6b21\u589e\u91cf\u590d\u6742\u5ea6 $O(1)$\uff0c\u6574\u4f53\u590d\u6742\u5ea6 $O((n+m)\\sqrt n)$\u3002\n\n\u5bf9\u4e8e\u672c\u9898\uff0c\u6bcf\u6b21\u6e05\u7a7a\u65f6\u53ea\u9700\u6700\u540e\u5c06**\u53f3\u7aef\u70b9**\u6eda\u56de\u5f53\u524d\u5de6\u7aef\u70b9\u5757\u7684\u53f3\u7aef\u70b9\u5e76\u6cbf\u9014\u66f4\u65b0 $T_A$ \u5373\u53ef\u3002\n\n#### \u6ce8\u610f\u70b9\n\n\u5168\u90e8\u5f00 $\\text{int}$ \u4f1a\u7206 $0$\u3002\uff08\u4f8b $10^5$ \u4e2a $10^9$ \uff09\n\n\u5168\u90e8\u5f00 $\\text{long long}$ \u5373\u53ef\u3002\n\n\u4e0d\u5361\u5e38\uff0c\u5e38\u6570\u5de8\u5927\u9009\u624b\u53ef\u8fc7\u3002\n\n---\n\n\u4ee3\u7801\u3002\n\n```cpp\n/*\n***\n\u8fd8\u8981\u7ee7\u7eed\u52aa\u529b\n\u6210\u4e3a\u4e00\u540d\u70e4\u5495\u5b66\u5bb6\u54e6\n***\n*/\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst ll N=2e5+5;\nll n,m,a[N],b[N],len,l,r,sum,cnt[N],ans[N],lsh[N],qaq,qwq;\nstruct Question{ll l,r,id,pos;}q[N];\ntemplate <typename T> void rd(T &x){\n\tll fl=1;x=0;char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') fl=-fl;\n\tfor(;isdigit(c);c=getchar()) x=(x<<3)+(x<<1)+c-'0';\n\tx*=fl;\n}\nvoid wr(ll x){\n\tif(x<0) x=-x,putchar('-');\n\tif(x<10) putchar(x+'0');\n\tif(x>9) wr(x/10),putchar(x%10+'0');\n}\nbool cmp(Question x,Question y){\n\tif(x.pos!=y.pos) return x.pos<y.pos;\n\treturn x.r<y.r;\n}\nll solve(ll l,ll r){\n\tll awa[N]={0},tot=0;\n\tfor(ll i=l;i<=r;++i){awa[a[i]]++;tot=max(tot,awa[a[i]]*b[a[i]]);}\n\treturn tot;\n}\nvoid update(ll x){cnt[a[x]]++;sum=max(sum,cnt[a[x]]*b[a[x]]);}\nvoid erase(ll x){cnt[a[x]]--;}\nint main(){\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\trd(n);rd(m);len=(ll)sqrt(n);\n\tfor(ll i=1;i<=n;++i) rd(a[i]),lsh[i]=a[i];\n\tfor(ll i=1;i<=m;++i) rd(q[i].l),rd(q[i].r),q[i].id=i,q[i].pos=(q[i].l-1)/len+1;\n\tsort(lsh+1,lsh+n+1);\n\tqaq=unique(lsh+1,lsh+n+1)-lsh-1;\n\tfor(ll i=1;i<=n;++i) b[lower_bound(lsh+1,lsh+qaq+1,a[i])-lsh]=a[i],a[i]=lower_bound(lsh+1,lsh+qaq+1,a[i])-lsh;\n\tsort(q+1,q+m+1,cmp);\n\tfor(ll i=1,j=1;j<=(n-1)/len+1;++j){\n\t\tll br=min(j*len,n);l=br+1,r=br,sum=0;\n\t\twhile(q[i].pos==j){\n\t\t\tif(q[i].r<=br){\n\t\t\t\tans[q[i].id]=solve(q[i].l,q[i].r);++i;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\twhile(r<q[i].r) ++r,update(r);\n\t\t\tqwq=sum;\n\t\t\twhile(l>q[i].l) --l,update(l);\n\t\t\tans[q[i].id]=sum;\n\t\t\twhile(l<=br) erase(l),l++;\n\t\t\tsum=qwq;++i;\n\t\t}\n\t\twhile(r>br) erase(r),r--;\n\t}\n\tfor(ll i=1;i<=m;++i) wr(ans[i]),puts(\"\");\n\treturn 0;\n}\n```",
        "postTime": 1598012064,
        "uid": 83999,
        "name": "Demoe",
        "ccfLevel": 7,
        "title": "\u6b74\u53f2\u306e\u7814\u7a76 \u9898\u89e3 \u56de\u6eda\u83ab\u961f"
    },
    {
        "content": "\u6700\u8fd1\u5b66\u56de\u6eda\u83ab\u961f\uff0c\u770b\u7684\u7f51\u4e0a\u4ee3\u7801\u5b9e\u5728\u96be\u53d7\uff0c\u6253\u7b97\u81ea\u5df1\u5199\u4e00\u7bc7\u9898\u89e3\n\n\u56de\u6eda\u83ab\u961f\uff1a\u5728\u83ab\u961f\u7684\u57fa\u7840\u4e0a\uff0c\u89e3\u51b3\u4e00\u7c7b\u6dfb\u52a0\u5143\u7d20\u5bb9\u6613\uff0c\u5220\u9664\u5143\u7d20\u96be\u7684\u95ee\u9898\uff0c\u5c31\u672c\u9898\u6765\u8bf4\uff0cmax\u64cd\u4f5c\u6dfb\u52a0\u5bb9\u6613\u590d\u539f\u96be\u3002\u4f46\u4f9d\u7136\u80fd\u4f7f\u7528\u83ab\u961f\uff0c\u65b9\u6cd5\u662f\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u5757\u5185\u7684\u8be2\u95ee\uff0c\u53f3\u6307\u9488\u4e00\u76f4\u5f80\u53f3\u8d70\uff0c\u5373\u6dfb\u52a0\u5143\u7d20\uff0c\u5bf9\u4e8e\u5de6\u8fb9\u4e3a\u6dfb\u52a0\u7684\u5143\u7d20\uff0c\u6539\u4e3a\u679a\u4e3e\u7684\u65b9\u5f0f\u3002\n\n\u8fd9\u6837\u590d\u6742\u5ea6\u4ecd\u662f $O(n\\sqrt{n})$\uff0c\u56e0\u4e3a\u53f3\u6307\u9488\u603b\u8017\u65f6 $O(n\\sqrt{n})$\uff0c\u8ddf\u666e\u901a\u83ab\u961f\u4e00\u6837\uff1b\u5de6\u6307\u9488\uff0c\u6bcf\u4e2a\u5143\u7d20\u6700\u591a\u9700\u8981 $O(\\sqrt{n})$\uff0c\u79fb\u52a8 $n$ \u6b21\uff0c\u590d\u6742\u5ea6\u4e5f\u662f $O(n\\sqrt{n})$.\n\n\u5177\u4f53\u5b9e\u73b0\u8ddf\u666e\u901a\u83ab\u961f\u7684\u6a21\u677f\u7a0d\u6709\u533a\u522b\uff1a1.\u9700\u8981\u7ef4\u62a4\u591a\u4e00\u4e2a\u5757\u533a\u95f4\u7684\u6700\u53f3\u7aef\u70b9\u4f4d\u7f6ebr\u6570\u7ec4\uff1b2.\u8bb0\u5f55\u4e0a\u4e00\u4e2a\u5757\u7684bid\uff0c\u6bcf\u6b21\u904d\u5386\u5230\u4e00\u4e2a\u65b0\u7684\u5757\uff0c\u628acnt\u6570\u7ec4\u6e05\u7a7a\uff08\u8fd9\u91cc\u590d\u6742\u5ea6 $O(n)$\uff0c\u5171\u9700\u6e05\u7a7a $\\sqrt{n}$ \u6b21\uff09\uff0c\u628a\u5de6\u53f3\u6307\u9488\u6307\u5411\u5f53\u524d\u5757\u7684\u6700\u53f3\u7aef\u30023.\u5982\u679c\u53f3\u6307\u9488\u5c0f\u4e8e\u5f53\u524d\u5757\u6700\u53f3\u7aef\uff0c\u6dfb\u52a0\u5143\u7d20\uff0c\u4fdd\u5b58\u8fd9\u65f6\u7684\u7b54\u6848\uff08\u540e\u9762\u8981\u6062\u590d\u7528\uff09\uff0c\u679a\u4e3e\u5de6\u8fb9\u90e8\u5206\u7684\u5143\u7d20\uff0c\u9010\u4e2a\u6dfb\u52a0\uff08\u6ce8\u610f\u53f3\u7aef\u70b9\u4f4d\u7f6e\uff09\uff0c\u66f4\u65b0\u7b54\u6848\uff0c\u7136\u540e\u9010\u4e2a\u5220\u9664\uff0c\u590d\u539f\u7b54\u6848\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define REP(i,n) for(int i = 0; i < n; i++)\n#define PER(i,n) for(int i = n-1; i >= 0; i--)\n#define FOR(i,l,r) for(int i = l; i <= r; i++)\n#define ROF(i,l,r) for(int i = r; i >= l; i--)\n#define DEBUG(x) cout << #x << \"=\" << x << endl;\n#define SHOW1(A,n) { REP(i,n) cout<<A[i]<<(i==n-1?'\\n':' '); }\n#define SHOW2(A,m,n) { REP(j,m) SHOW1(A[j],n) }\n#define pb push_back\n#define fi first\n#define se second\n#define ALL(x) x.begin(),x.end()\n#define SZ(x) (int)((x).size())\ntypedef long long LL;\ntypedef unsigned long long ULL;\ntypedef pair<int, int> pii;\ntypedef pair<LL, LL> pll;\nconst int INF = 0x3f3f3f3f, MOD = 1000000007;\nconst double PI = acos(-1), EPS = 1e-6;\nconst int MAXN = 1e5+9, MAXM = 1e6+9;\n\nint n,m,a[MAXN];\nvector<LL> val;\nstruct query {\n    int l,r,ind;\n} q[MAXN];\nint bsz,cnt[MAXN],belong[MAXN],br[MAXN];\nLL ans,res[MAXN];\nvoid prelude() {\n    val.clear();\n    unordered_map<int,int> mp;\n    FOR(i,1,n) {\n        if (!mp.count(a[i])) {\n            val.pb(a[i]);\n            mp[a[i]]=SZ(val)-1;\n        }\n        a[i]=mp[a[i]];\n    }\n    bsz=sqrt(n);\n    FOR(i,1,n) {\n        belong[i]=i/bsz;\n        br[i/bsz]=i;\n    }\n}\nbool cmp(query& a, query& b) {\n    if (belong[a.l]!=belong[b.l]) return belong[a.l]<belong[b.l];\n    return a.r<b.r;\n}\nvoid add(int x) {\n    cnt[x]++;\n    ans=max(ans,cnt[x]*val[x]);\n}\nvoid del(int x) {\n    cnt[x]--;\n}\nvoid mt() {\n    sort(q+1,q+1+m,cmp);\n    int pre=-1;\n    ans=0;\n    int l,r;\n    FOR(i,1,m) {\n        int ql=q[i].l, qr=q[i].r, ind=q[i].ind;\n        int bid=belong[ql];\n        if (bid!=pre) {\n            memset(cnt,0,sizeof(cnt[0])*SZ(val));\n            ans=0;\n            r=br[bid];\n            l=br[bid];\n            pre=bid;\n        }\n        while (r<qr) add(a[++r]);\n        LL pans=ans;\n        int ed=min(l,qr);\n        FOR(j,ql,ed) add(a[j]);\n        res[ind]=ans;\n        FOR(j,ql,ed) del(a[j]);\n        ans=pans;\n    }\n}\n\nint main()\n{\n#ifdef LOCAL\n    freopen(\"i.txt\", \"r\", stdin);\n    //freopen(\"o.txt\", \"w\", stdout);\n#endif //LOCAL\n\n    while (scanf(\"%d%d\", &n,&m)==2) {\n        FOR(i,1,n) scanf(\"%d\", &a[i]);\n        FOR(i,1,m) {\n            int l,r; scanf(\"%d%d\", &l,&r);\n            q[i]={l,r,i};\n        }\n        prelude();\n        mt();\n        FOR(i,1,m) {\n            printf(\"%lld\\n\", res[i]);\n        }\n    }\n\n    return 0;\n}\n```\n",
        "postTime": 1565838573,
        "uid": 120718,
        "name": "qq734628996",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT1219 \u3010\u6b74\u53f2\u306e\u7814\u7a76\u3011"
    },
    {
        "content": "\u9644\u5e26\u6743\u503c\u7684\u7c7b\u533a\u95f4\u4f17\u6570\u95ee\u9898\uff1f\u4e0d\u662f\u5f88\u597d\u7b56\u554a\n\n\u53d1\u73b0\u9898\u76ee\u6ca1\u6709**\u5f3a\u5236\u5728\u7ebf**\uff0c\u800c\u4e14\u4e5f\u53ea\u6709\u8be2\u95ee\u64cd\u4f5c\uff0c\u90a3\u4e48\u53ef\u4ee5\u8003\u8651**\u83ab\u961f**\n\n\u4f46\u662f\u8fd9\u91cc\u7684\u83ab\u961f\u6709\u4e00\u4e2a\u5f88\u663e\u8457\u7684\u7279\u5f81\uff0c\u63d2\u5165\u7684\u65f6\u5019\u5f88\u597d\u7ef4\u62a4\u7b54\u6848\uff0c\u4f46\u662f\u5220\u9664\u7684\u65f6\u5019\u4e0d\u597d\u56de\u9000\n\n\u90a3\u4e48\u6709\u6ca1\u6709\u4ec0\u4e48\u529e\u6cd5\u53ef\u4ee5\u8ba9\u83ab\u961f\u907f\u514d\u5220\u9664\u5462\uff0c\u5f53\u7136\u662f\u6709\u7684\uff0c\u800c\u4e14\u8fd9\u53ef\u4ee5\u89e3\u51b3\u4e00\u5927\u7c7b\u7c7b\u4f3c\u95ee\u9898\n\n\u8003\u8651\u7c7b\u4f3c\u4e8e\u4e00\u822c\u83ab\u961f\u7684\u5206\u5757\u64cd\u4f5c\uff0c\u6211\u4eec\u518d\u6392\u5e8f\u65f6\u4ee5\u5de6\u7aef\u70b9**\u6240\u5728\u5757**\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u53f3\u7aef\u70b9\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u5de6\u7aef\u70b9\u6240\u5728\u5757\u5206\u522b\u5904\u7406\u8fd9\u4e9b\u8be2\u95ee\n\n\u9996\u5148\u5982\u679c\u5de6\u53f3\u7aef\u70b9\u5728\u540c\u4e00\u5757\u5185\uff0c\u90a3\u4e48\u5f88\u7b80\u5355\uff0c\u76f4\u63a5\u66b4\u529b\u7edf\u8ba1\u5b8c\u4e86\u76f4\u63a5\u5220\u5149\u5149\u5c31\u597d\u4e86\uff0c\u8fd9\u662f$O(\\sqrt n)$\u7684\n\n\u5982\u679c\u4e0d\u662f\u5462\uff1f\u7531\u4e8e\u6b64\u65f6\u7684\u53f3\u7aef\u70b9\u662f\u9012\u589e\u7684\uff0c\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u6307\u9488\u4e0d\u505c\u5730\u5f80\u53f3\u8fb9\u63d2\u5165\u6570\u5373\u53ef\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u5757\u7684\u590d\u6742\u5ea6\u4e0d\u4f1a\u8d85\u8fc7$O(n)$\uff0c\u7531\u4e8e\u4e00\u5171\u53ea\u6709$\\sqrt n$\u5757\uff0c\u6240\u4ee5\u603b\u4f53\u8fd8\u662f$O(n\\sqrt n)$\u7684\n\n\u53ef\u662f\u8fd9\u4e2a\u65f6\u5019\u5de6\u7aef\u70b9\u53ea\u662f\u5728\u540c\u4e00\u5757\u91cc\u5e76\u4e0d\u662f\u4e0d\u53d8\u7684\u3002\u4f46\u662f\u8fd9\u90e8\u5206\u7684\u957f\u5ea6\u6700\u591a\u4e5f\u662f$\\sqrt n$\u554a\uff0c\u518d\u4e0d\u6d4e\u548c\u66b4\u529b\u4e00\u6837\u505a\u4e86\u5728\u5220\u4e86\u5c31\u597d\u4e86\u5417\uff0c\u4e00\u5171$n$\u4e2a\u8be2\u95ee\u6240\u4ee5\u6700\u591a\u4e5f\u662f$O(n\\sqrt n)$\u7684\n\n\u6240\u4ee5\u8fd9\u6837\u7684\u8bdd\u590d\u6742\u5ea6\u5c31\u88ab\u538b\u5230\u4e86$O(n\\sqrt n)$\uff0c\u987a\u4fbf\u63d0\u4e00\u4e0b\u8fd9\u79cd\u795e\u5947\u7684\u83ab\u961f\u65b9\u6cd5\u53eb\u505a**\u56de\u6eda\u83ab\u961f**\uff0c\u4e0d\u8fc7\u8fd8\u662f\u6bd4\u8f83\u597d\u7406\u89e3\u7684\n\nCODE\n\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#define RI register int\n#define CI const int&\n#define Tp template <typename T>\nusing namespace std;\ntypedef long long LL;\nconst int N=100005;\nint blk[N]; struct ques\n{\n\tint l,r,id;\n\tinline ques(CI L=0,CI R=0,CI Id=0)\n\t{\n\t\tl=L; r=R; id=Id;\n\t}\n\tinline friend bool operator <(const ques& A,const ques& B)\n\t{\n\t\treturn blk[A.l]<blk[B.l]||(blk[A.l]==blk[B.l]&&A.r<B.r);\n\t}\n}q[N]; int n,m,a[N],rst[N],num,now,size,bkt[N],tbkt[N]; LL ans[N],ret;\nclass FileInputOutput\n{\n\tprivate:\n\t\tstatic const int S=1<<21;\n\t\t#define tc() (A==B&&(B=(A=Fin)+fread(Fin,1,S,stdin),A==B)?EOF:*A++)\n\t\t#define pc(ch) (Ftop<S?Fout[Ftop++]=ch:(fwrite(Fout,1,S,stdout),Fout[(Ftop=0)++]=ch))\n\t\tchar Fin[S],Fout[S],*A,*B; int pt[25],Ftop;\n\tpublic:\n\t\tTp inline void read(T& x)\n\t\t{\n\t\t\tx=0; char ch; while (!isdigit(ch=tc()));\n\t\t\twhile (x=(x<<3)+(x<<1)+(ch&15),isdigit(ch=tc()));\n\t\t}\n\t\tTp inline void write(T x)\n\t\t{\n\t\t\tif (!x) return (void)(pc('0'),pc('\\n')); RI ptop=0;\n\t\t\twhile (x) pt[++ptop]=x%10,x/=10; while (ptop) pc(pt[ptop--]+48); pc('\\n');\n\t\t}\n\t\tinline void Fend(void)\n\t\t{\n\t\t\tfwrite(Fout,1,Ftop,stdout);\n\t\t}\n\t\t#undef tc\n\t\t#undef pc\n}F;\ninline int min(CI a,CI b)\n{\n\treturn a<b?a:b;\n}\nTp inline void maxer(T& x,const T& y)\n{\n\tif (y>x) x=y;\n}\ninline LL calc(CI l,CI r,LL ret=0)\n{\n\tRI i; for (i=l;i<=r;++i) tbkt[a[i]]=0; for (i=l;i<=r;++i)\n\t++tbkt[a[i]],maxer(ret,1LL*tbkt[a[i]]*rst[a[i]]); return ret;\n}\ninline void add(CI now)\n{\n\t++bkt[a[now]]; maxer(ret,1LL*bkt[a[now]]*rst[a[now]]);\n}\ninline void solve(CI id)\n{\n\tint qr=min(id*size,n),pr=qr; RI i; memset(bkt,0,sizeof(bkt));\n\tfor (ret=0;blk[q[now].l]==id;++now)\n\t{\n\t\tif (blk[q[now].l]==blk[q[now].r]) { ans[q[now].id]=calc(q[now].l,q[now].r); continue; }\n\t\twhile (pr<q[now].r) add(++pr); LL t=ret; for (i=q[now].l;i<=qr;++i) add(i);\n\t\tans[q[now].id]=ret; for (i=q[now].l;i<=qr;++i) --bkt[a[i]]; ret=t;\n\t}\n}\nint main()\n{\n\t//freopen(\"CODE.in\",\"r\",stdin); freopen(\"CODE.out\",\"w\",stdout);\n\tRI i; for (F.read(n),F.read(m),i=1;i<=n;++i) F.read(a[i]),rst[i]=a[i];\n\tsort(rst+1,rst+n+1); num=unique(rst+1,rst+n+1)-rst-1; size=(int)sqrt(n);\n\tfor (i=1;i<=n;++i) blk[i]=(i-1)/size+1,a[i]=lower_bound(rst+1,rst+num+1,a[i])-rst;\n\tfor (i=1;i<=m;++i) F.read(q[i].l),F.read(q[i].r),q[i].id=i;\n\tfor (sort(q+1,q+m+1),now=i=1;i<=blk[n];++i) solve(i);\n\tfor (i=1;i<=m;++i) F.write(ans[i]); return F.Fend(),0;\n}\n```\n\n",
        "postTime": 1550233059,
        "uid": 41698,
        "name": "hl666",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 AT1219 \u3010\u6b74\u53f2\u306e\u7814\u7a76\u3011"
    },
    {
        "content": "## \u56de\u6eda\u83ab\u961f\u677f\u5b50\u9898\n\n\u6838\u5fc3\u601d\u60f3\u5c31\u662f\uff1a\u5bf9\u4e8e\u5de6\u7aef\u70b9\u6240\u5728\u7684\u6bcf\u4e2a\u5757\uff0c\u628a\u5f53\u524d\u533a\u95f4\u7f29\u5230\u5757\u5c3e+1\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u5f53\u524d\u53f3\u7aef\u70b9\u4e00\u76f4\u5f80\u53f3\u79fb\uff0c\u76f4\u5230\u8dd1\u5230\u67e5\u8be2\u533a\u95f4\u53f3\u7aef\u70b9\uff08\u7531\u4e8e\u5de6\u7aef\u70b9\u540c\u5757\u7684\u53f3\u7aef\u70b9\u5355\u8c03\u9012\u589e\uff09\uff0c\u8bb0\u5f55\u597d\u5f53\u524d\u72b6\u6001\uff0c\u5de6\u7aef\u70b9\u79fb\u5b8c\u4e4b\u540e\u4e0d\u7528\u5220\u9664\uff0c\u53ea\u8981\u628a\u4e4b\u524d\u5b58\u7684\u72b6\u6001\u8fd8\u539f\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u6ce8\u610f\u4e0a\u53d6\u6574\u662f`ceil`\uff08\u4e0d\u7ba1\u6709\u6ca1\u6709\u7528\u90fd\u8981\u63d0\u9192\u4e00\u4e0b\uff0c\u6211\u5728\u8fd9\u91ccWA\u4e86\u5341\u591a\u904d\uff09\n\nwork\u51fd\u6570\u5b8c\u5168\u6ca1\u5fc5\u8981\uff0c\u76f4\u63a5\u628a\u83ab\u961f\u64cd\u4f5c\u5199\u5728\u5faa\u73af\u91cc\u4e5f\u884cqwq\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <cmath>\nusing namespace std;\n#define maxn 100100\n#define maxb 5050\n#define ll long long\nint aa[maxn], typ[maxn], cnt[maxn], cnt2[maxn], belong[maxn], lb[maxn], rb[maxn], inp[maxn];\nll ans[maxn];\nstruct query {\n\tint l, r, id;\n} q[maxn];\nint n, m, size, bnum;\n#define isdigit(x) ((x) >= '0' && (x) <= '9')\ninline int read() {\n\tint res = 0;\n\tchar c = getchar();\n\twhile(!isdigit(c)) c = getchar();\n\twhile(isdigit(c)) res = (res << 1) + (res << 3) + (c ^ 48), c = getchar();\n\treturn res;\n}\nint cmp(query a, query b) {\n\treturn (belong[a.l] ^ belong[b.l]) ? belong[a.l] < belong[b.l] : a.r < b.r; \n}\nint main() {\n\tn = read(), m = read();\n\tsize = sqrt(n);\n\tbnum = ceil((double) n / size);\n\tfor(int i = 1; i <= bnum; ++i) {\n\t\tlb[i] = size * (i - 1) + 1;\n\t\trb[i] = size * i;\n\t\tfor(int j = lb[i]; j <= rb[i]; ++j) belong[j] = i;\n\t}\n\trb[bnum] = n;\n\tfor(int i = 1; i <= n; ++i) inp[i] = aa[i] = read();\n\tsort(inp + 1, inp + n + 1);\n\tint tot = unique(inp + 1, inp + n + 1) - inp - 1;\n\tfor(int i = 1; i <= n; ++i) typ[i] = lower_bound(inp + 1, inp + tot + 1, aa[i]) - inp;\n\tfor(int i = 1; i <= m; ++i) {\n\t\tq[i].l = read(), q[i].r = read();\n\t\tq[i].id = i;\n\t}\n\tsort(q + 1, q + m + 1, cmp);\n\tint i = 1;\n\tfor(int k = 0; k <= bnum; ++k) {\n\t\tint l = rb[k] + 1, r = rb[k];\n\t\tll now = 0;\n\t\tmemset(cnt, 0, sizeof(cnt));\n\t\tfor( ; belong[q[i].l] == k; ++i) {\n\t\t\tint ql = q[i].l, qr = q[i].r;\n\t\t\tll tmp;\n\t\t\tif(belong[ql] == belong[qr]) {\n\t\t\t\ttmp = 0;\n\t\t\t\tfor(int j = ql; j <= qr; ++j) cnt2[typ[j]] = 0;\n\t\t\t\tfor(int j = ql; j <= qr; ++j) {\n\t\t\t\t\t++cnt2[typ[j]]; tmp = max(tmp, 1ll * cnt2[typ[j]] * aa[j]);\n\t\t\t\t}\n\t\t\t\tans[q[i].id] = tmp;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\twhile(r < qr) {\n\t\t\t\t++r; ++cnt[typ[r]]; now = max(now, 1ll * cnt[typ[r]] * aa[r]);\n\t\t\t}\n\t\t\ttmp = now;\n\t\t\twhile(l > ql){\n\t\t\t\t--l; ++cnt[typ[l]]; now = max(now, 1ll * cnt[typ[l]] * aa[l]);\n\t\t\t} \n\t\t\tans[q[i].id] = now;\n\t\t\twhile(l < rb[k] + 1) {\n\t\t\t\t--cnt[typ[l]];\n\t\t\t\tl++;\n\t\t\t}\n\t\t\tnow = tmp;\n\t\t}\n\t}\n\tfor(int i = 1; i <= m; ++i) printf(\"%lld\\n\", ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1545041405,
        "uid": 73574,
        "name": "WAMonster",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 AT1219 \u3010\u6b74\u53f2\u306e\u7814\u7a76\u3011"
    }
]