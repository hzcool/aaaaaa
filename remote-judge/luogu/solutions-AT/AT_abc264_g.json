[
    {
        "content": "# [[ABC264G] String Fair](https://www.luogu.com.cn/problem/AT_abc264_g) Solution\n\n[TOC]\n\n## [\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u6233\u6b64\u8fdb\u5165](http://blog.tsawke.com?t=ABC264G)\n\n## \u9898\u9762\n\n\u7ed9\u5b9a $ n $ \u6761\u8bc4\u5206\u89c4\u5219\uff0c\u6bcf\u6761\u5b58\u5728\u5b57\u7b26\u4e32 $ T_i $ \u548c\u5f97\u5206 $ P_i $\u3002\u4f60\u9700\u8981\u6784\u9020\u4e00\u4e2a\u4efb\u610f\u957f\u5ea6\u4f46\u975e\u7a7a\u7684\u5b57\u7b26\u4e32 $ S $\uff0c\u5728 $ S $ \u4e2d\u6bcf\u6b21\u51fa\u73b0 $ T_i $ \u5c31\u4f1a\u83b7\u5f97 $ P_i $ \u5f97\u5206\u3002\u4f60\u9700\u8981\u6700\u5927\u5316\u5f97\u5206\uff0c\u8f93\u51fa\u6700\u5927\u503c\u3002\u82e5\u65e0\u9650\u5927\u5219\u8f93\u51fa `Infinity`\u3002\n\n## Solution\n\n\u4e00\u4e2a\u5341\u5206\u7cbe\u5999\u7684\u56fe\u8bba\u3002\n\n\u5173\u952e\u7684\u4fe1\u606f\u5728 $ \\lvert T_i \\rvert \\le 3 $\uff0c\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u5c31\u53ef\u4ee5\u8003\u8651\u8fdb\u884c\u5efa\u8fb9\u3002\u6211\u4eec\u4ee4 $ P_{str} $ \u8868\u793a\u5b57\u7b26\u4e32\u4e3a $ str $ \u7684\u65f6\u5019\u7684\u5f97\u5206\uff0c\u5982\u679c\u6ca1\u6709\u8be5\u5b57\u7b26\u4e32\u7684\u8bc4\u5206\u89c4\u5219\u5373\u4e3a $ 0 $\u3002\n\n\u4e8e\u662f\u8003\u8651\u5982\u5bf9\u4e8e\u4ece $ ab $ \u901a\u8fc7 $ c $ \u53ef\u4ee5\u6709\u4e00\u6761\u8fb9\u5230 $ bc $\uff0c\u8fb9\u6743\u5373\u4e3a $ P_{abc} + P_{bc} + P_{c} $\u3002\u540c\u65f6\u6ce8\u610f\u4e00\u4e9b\u7ec6\u8282\uff0c\u5982\u4ece\u7a7a\u5b57\u7b26\u4e32\u53ef\u4ee5\u901a\u8fc7\u4efb\u610f\u5b57\u7b26\uff0c\u5982\u901a\u8fc7 $ a $ \u8fde\u7ed3\u5230 $ a $\uff0c\u8fb9\u6743\u5373\u4e3a $ P_a $\uff0c\u4ee5\u53ca\u5bf9\u4e8e\u957f\u5ea6\u4e3a $ 1 $ \u7684\u5b57\u7b26\u4e32\u8fde\u7ed3\u5230\u957f\u5ea6\u4e3a $ 2 $ \u7684\u540c\u7406\u3002\n\n\u8fd9\u6837\u5c06\u56fe\u5efa\u5b8c\u4e4b\u540e\u4e0d\u96be\u53d1\u73b0\u53ea\u9700\u8981 SPFA \u8dd1\u4e00\u904d\u5355\u6e90\u6700\u957f\u8def\uff0c\u53d6\u6700\u5927\u7684 $ dis $ \u5373\u53ef\uff0c\u5982\u679c\u5b58\u5728\u6b63\u73af\u90a3\u4e48\u663e\u7136\u65e0\u9650\u5927\u3002\n\n\u4e8e\u662f\u70b9\u6570\u4e3a $ n =  26^2 + 26 + 1 $\uff0c\u8fb9\u6570\u5373\u4e3a $ m = 26n $\uff0c\u4e8e\u662f SPFA \u6700\u574f\u590d\u6742\u5ea6\u5373\u4e3a $ O(nm) $\uff0c\u4e5f\u5c31\u662f $ 26^5 $ \u7684\u7ea7\u522b\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\n\n\u5f53\u7136\u8fd9\u91cc\u6211\u4eec\u7528 `map` \u5b9e\u73b0\uff0c\u624b\u52a8\u5b9e\u73b0\u4e00\u4e2a `hash()` \u4e4b\u540e\u7528 `unorderer_map` \u5373\u53ef\u53bb\u6389 `map` \u7684 $ \\log $\u3002\n\n## Code\n\n```cpp\n#define _USE_MATH_DEFINES\n#include <bits/stdc++.h>\n\n#define PI M_PI\n#define E M_E\n#define npt nullptr\n#define SON i->to\n#define OPNEW void* operator new(size_t)\n#define ROPNEW(arr) void* Edge::operator new(size_t){static Edge* P = arr; return P++;}\n\nusing namespace std;\n\nmt19937 rnd(random_device{}());\nint rndd(int l, int r){return rnd() % (r - l + 1) + l;}\nbool rnddd(int x){return rndd(1, 100) <= x;}\n\ntypedef unsigned int uint;\ntypedef unsigned long long unll;\ntypedef long long ll;\ntypedef long double ld;\n\n\n\ntemplate < typename T = int >\ninline T read(void);\n\nstruct Edge{\n    Edge* nxt;\n    int to;\n    ll val;\n    OPNEW;\n}ed[21000];\nROPNEW(ed);\nEdge* head[1100];\n\nint N;\nint cnt(0);\nunordered_map < string, int > score;\nmap < pair < int, int >, int > mp;\nunordered_map < int, pair < int, int > > rmp;\nbitset < 1100 > inq;\nint dep[1100];\nll dis[1100];\nll ans(LONG_LONG_MIN);\n\nvoid SPFA(void){\n    memset(dis, 0xc0, sizeof dis);\n    queue < int > cur;\n    cur.push(1); inq[1] = true; dep[1] = 1, dis[1] = 0;\n    while(!cur.empty()){\n        int p = cur.front(); cur.pop();\n        inq[p] = false;\n        for(auto i = head[p]; i; i = i->nxt){\n            if(dis[p] + i->val > dis[SON]){\n                dis[SON] = dis[p] + i->val;\n                ans = max(ans, dis[SON]);\n                dep[SON] = dep[p] + 1;\n                if(dep[SON] > 26 * 26 + 26 + 1)printf(\"Infinity\\n\"), exit(0);\n                if(!inq[SON])cur.push(SON), inq[SON] = true;\n            }\n        }\n    }\n}\n\nint main(){\n    N = read();\n    for(int i = 1; i <= N; ++i){\n        string S; cin >> S;\n        score.insert({S, read()});\n    }mp.insert({{0, 0}, ++cnt}), rmp.insert({cnt, {0, 0}});\n    for(int i = 'a'; i <= 'z'; ++i)mp.insert({{0, i}, ++cnt}), rmp.insert({cnt, {0, i}});\n    for(int i = 'a'; i <= 'z'; ++i)for(int j = 'a'; j <= 'z'; ++j)\n        mp.insert({{i, j}, ++cnt}), rmp.insert({cnt, {i, j}});\n    for(int i = 1; i <= cnt; ++i)for(int j = 'a'; j <= 'z'; ++j){\n        ll tot(0); string S;\n        if(rmp[i].first)S += (char)rmp[i].first;\n        if(rmp[i].second)S += (char)rmp[i].second;\n        S += j; tot += score[S];\n        while(!S.empty()){\n            S.erase(S.begin());\n            tot += score[S];\n        }\n        head[i] = new Edge{head[i], mp[{rmp[i].second, j}], tot};\n    }SPFA();\n    printf(\"%lld\\n\", ans);\n    fprintf(stderr, \"Time: %.6lf\\n\", (double)clock() / CLOCKS_PER_SEC);\n    return 0;\n}\n\ntemplate < typename T >\ninline T read(void){\n    T ret(0);\n    int flag(1);\n    char c = getchar();\n    while(c != '-' && !isdigit(c))c = getchar();\n    if(c == '-')flag = -1, c = getchar();\n    while(isdigit(c)){\n        ret *= 10;\n        ret += int(c - '0');\n        c = getchar();\n    }\n    ret *= flag;\n    return ret;\n}\n```\n\n## UPD\n\nupdate-2023_01_03 \u521d\u7a3f",
        "postTime": 1672732685,
        "uid": 362938,
        "name": "Tsawke",
        "ccfLevel": 6,
        "title": "[ABC264G] String Fair"
    },
    {
        "content": "\u7b2c\u4e00\u611f\u89c9\u662f\u5f88\u79bb\u8c31, \u5c24\u5176\u662f\u957f\u5ea6\u4e0d\u9650, \u5e76\u4e14\u4e0d\u4f1a\u5904\u7406\u5404\u4e2a $t$ \u4e4b\u95f4\u62fc\u63a5\u4e4b\u540e\u5305\u542b\u7684\u65b0\u7684 $t$.\r\n\r\n\u8fd9\u4e2a\u957f\u5ea6 $3$ \u5f88\u7279\u70b9, \u53d1\u73b0\u5982\u679c\u957f\u5ea6 $2$ \u53ef\u4ee5\u76f4\u63a5\u6bcf\u4e2a\u5b57\u6bcd\u5efa\u4e00\u4e2a\u70b9, \u7136\u540e\u5f04\u4e00\u4e0b\u8fb9\u6743, \u90a3\u4e48\u73b0\u5728\u8003\u8651\u76f4\u63a5\u5efa\u70b9 $(a, b)$ \u8868\u793a\u5f53\u524d\u5b57\u6bcd\u662f $b$, \u4e0a\u4e00\u4e2a\u5b57\u6bcd\u662f $a$, \u6743\u503c\u5c31\u53c8\u53ef\u4ee5\u7528\u70b9\u4e4b\u95f4\u7684\u8fb9\u8868\u793a\u4e86.\r\n\r\n\u6ce8\u610f\u8d77\u70b9\u7ec8\u70b9\u548c\u957f\u5ea6\u4e3a $1, 2$ \u7684\u5b57\u7b26\u4e32\u7684\u7ec6\u8282.\r\n\r\n\u8d5b\u65f6\u4ee3\u7801, \u4ec5\u4f9b\u53c2\u8003.\r\n\r\n```cpp\r\n#include <cstring>\r\n#include <iostream>\r\n#include <queue>\r\n#include <vector>\r\nusing namespace std;\r\ntypedef long long ll;\r\n\r\nconst int M = 20000, N = 2000, C = 26, TM = C * C * C, TN = C * C;\r\nint gh(char a, char b) {\r\n    return a * C + b;\r\n}\r\nint gh(char a, char b, char c) {\r\n    return a * C * C + b * C + c;\r\n}\r\n\r\nll w[M], wn[N], sw[N], tw[N];\r\nvector<pair<int, ll> > G[N];\r\nll dis[N];\r\nint cnt[N];\r\nbool instk[N];\r\nint main() {\r\n    int n;\r\n    int res = -2e9;\r\n    cin >> n;\r\n    for (int i = 1; i <= n; i++) {\r\n        char s[4];\r\n        int v;\r\n        cin >> (s + 1) >> v;\r\n        int l = strlen(s + 1);\r\n        for (int i = 1; i <= l; i++)\r\n            s[i] -= 'a';\r\n        if (l == 1) {\r\n            res = max(res, v);\r\n            for (int i = 0; i < C; i++) {\r\n                wn[gh(s[1], i)] += v;\r\n                tw[gh(i, s[1])] += v;\r\n            }\r\n        } else if (l == 2) {\r\n            wn[gh(s[1], s[2])] -= v;\r\n            for (int i = 0; i < C; i++) {\r\n                w[gh(i, s[1], s[2])] += v;\r\n                w[gh(s[1], s[2], i)] += v;\r\n            }\r\n            sw[gh(s[1], s[2])] += v;\r\n            tw[gh(s[1], s[2])] += v;\r\n        } else {\r\n            w[gh(s[1], s[2], s[3])] += v;\r\n        }\r\n    }\r\n\r\n    for (int i = 0; i < TM; i++) {\r\n        G[i / C + TN].push_back({i % (C * C), w[i]});\r\n    }\r\n    int s = TN * 2 + 1, t = s + 1;\r\n    for (int i = 0; i < TN; i++) {\r\n        G[i].push_back({i + TN, wn[i]});\r\n        G[s].push_back({i, sw[i]});\r\n        G[i + TN].push_back({t, tw[i]});\r\n    }\r\n\r\n    queue<int> q;\r\n    memset(cnt, 0, sizeof(cnt));\r\n    memset(dis, -0x3f, sizeof(dis));\r\n    q.push(s);\r\n    dis[s] = 0;\r\n    instk[s] = true;\r\n    while (q.size()) {\r\n        int u = q.front();\r\n        q.pop();\r\n        cnt[u]++;\r\n        instk[u] = false;\r\n        if (cnt[u] > TN + 10) {\r\n            cout << \"Infinity\" << endl;\r\n            return 0;\r\n        }\r\n        for (pair<int, ll> e : G[u]) {\r\n            ll v = e.first, w = e.second;\r\n            if (dis[v] < dis[u] + w) {\r\n                dis[v] = dis[u] + w;\r\n                if (!instk[v]) {\r\n                    instk[v] = true;\r\n                    q.push(v);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    cout << max(1ll * res, dis[t]) << endl;\r\n}\r\n```",
        "postTime": 1668605137,
        "uid": 235671,
        "name": "fireinice",
        "ccfLevel": 7,
        "title": "[ABC264G] String Fair"
    }
]