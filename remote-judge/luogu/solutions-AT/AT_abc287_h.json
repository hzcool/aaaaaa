[
    {
        "content": "\u5fc3\u60c5\u4e0d\u597d\uff0c\u6765\u5237\u70b9\u666e\u53ca\u9898\u653e\u677e\u653e\u677e\u3002\n\n\u8003\u8651 Floyd \u7b97\u6cd5\uff0c\u5e38\u89c4\u5b9e\u73b0\u4e2d\u6700\u5916\u5c42\u5faa\u73af\u679a\u4e3e\u7684 $k$ \u5c31\u662f\u8def\u5f84\u4e0a\u7ecf\u8fc7\u7684\u70b9\u7684\u6700\u5927\u7f16\u53f7\uff08\u4e0d\u5305\u62ec\u4e24\u4e2a\u7aef\u70b9\uff09\u3002\u95ee\u9898\u7b49\u4ef7\u4e8e\uff1a\u5bf9\u4e8e\u6bcf\u7ec4\u8be2\u95ee $(s_i,t_i)$\uff0c\u5728 $k$ \u53d6\u54ea\u4e2a\u503c\u4e4b\u540e\u9996\u6b21\u8fde\u901a\u3002\n\n\u4e0d\u96be\u60f3\u5230\u79bb\u7ebf\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $k$ \u503c\uff0c\u5728\u66f4\u65b0\u5b8c\u4f20\u9012\u95ed\u5305\u4e4b\u540e\u679a\u4e3e\u6bcf\u4e2a\u8be2\u95ee\uff0c\u5982\u679c\u7b26\u5408\u6761\u4ef6\u5c31\u66f4\u65b0\u7b54\u6848\u5373\u53ef\u3002\u53e6\u5916\u7531\u4e8e\u662f\u4f20\u9012\u95ed\u5305\u95ee\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528 bitset \u8fdb\u884c\u4f18\u5316\u3002\n\n\u590d\u6742\u5ea6 $\\mathcal O(\\frac{n^3}{\\omega})$\u3002\n\n```cpp\n// Problem: Ex - Directed Graph and Query\n// Contest: AtCoder - UNIQUE VISION Programming Contest 2023 New Year (AtCoder Beginner Contest 287)\n// URL: https://atcoder.jp/contests/abc287/tasks/abc287_h\n// Memory Limit: 1024 MB\n// Time Limit: 4500 ms\n// \n// Powered by CP Editor (https://cpeditor.org)\n\n//By: OIer rui_er\n#include <bits/stdc++.h>\n#define rep(x,y,z) for(int x=(y);x<=(z);x++)\n#define per(x,y,z) for(int x=(y);x>=(z);x--)\n#define debug(format...) fprintf(stderr, format)\n#define fileIO(s) do{freopen(s\".in\",\"r\",stdin);freopen(s\".out\",\"w\",stdout);}while(false)\n#define likely(exp) __builtin_expect(!!(exp), 1)\n#define unlikely(exp) __builtin_expect(!!(exp), 0)\nusing namespace std;\ntypedef long long ll;\n\nmt19937 rnd(std::chrono::duration_cast<std::chrono::nanoseconds>(std::chrono::system_clock::now().time_since_epoch()).count());\nint randint(int L, int R) {\n\tuniform_int_distribution<int> dist(L, R);\n\treturn dist(rnd);\n}\n\ntemplate<typename T> void chkmin(T& x, T y) {if(x > y) x = y;}\ntemplate<typename T> void chkmax(T& x, T y) {if(x < y) x = y;}\n\nconst int N = 2e3+5, M = 1e4+5;\n\nint n, m, q, s[M], t[M], ans[M];\nbitset<N> e[N];\n\nint main() {\n\tscanf(\"%d%d\", &n, &m);\n\trep(i, 1, m) {\n\t\tint u, v;\n\t\tscanf(\"%d%d\", &u, &v);\n\t\te[u].set(v);\n\t}\n\tscanf(\"%d\", &q);\n\trep(i, 1, q) scanf(\"%d%d\", &s[i], &t[i]);\n\tmemset(ans, -1, sizeof(ans));\n\trep(k, 1, n) {\n\t\trep(i, 1, n) if(e[i].test(k)) e[i] |= e[k];\n\t\trep(i, 1, q) if(ans[i] == -1 && e[s[i]].test(t[i])) ans[i] = max({s[i], t[i], k});\n\t}\n\trep(i, 1, q) printf(\"%d\\n\", ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1678088938,
        "uid": 122461,
        "name": "rui_er",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 ABC287Ex\u3010Directed Graph and Query\u3011"
    },
    {
        "content": "## \u524d\u8a00\n\n\u8fd9\u9053\u9898\u5c31\u662f\u6c34\u7206\u4e86\uff0c\u54ea\u6709\u4ec0\u4e48\u7eff\u9898\u84dd\u9898\u7d2b\u9898\u96be\u5ea6\u3002\n\n## \u9898\u89e3\n\n\u8003\u8651 **\u4f20\u9012\u95ed\u5305**\uff0c\u4f7f\u7528 `std::bitset` \u4f18\u5316\u3002\n\n\u6211\u4eec\u8981\u627e\u6700\u5c0f\u7684\u70b9\uff0c\u6240\u4ee5\u53ef\u4ee5\u5916\u5c42\u679a\u4e3e $k = 1 \\sim n$\u3002\u7136\u540e\u5c06\u8be2\u95ee\u79bb\u7ebf\u4e0b\u6765\uff0c\u8003\u8651\u5bf9\u4e8e\u7b2c $i$ \u4e2a\u8be2\u95ee\u4f7f\u5f97 $s_i,t_i$ \u7b2c\u4e00\u4e2a\u8054\u901a\u7684 $k_i$\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u4e3a $\\max\\{s_i, t_i, k_i\\}$\u3002\n\n\u7136\u540e\u5c31\u6ca1\u4e86\u3002\n\n\u590d\u6742\u5ea6\u662f $\\mathcal{O}(\\frac{n^3}{w} + nq)$\u3002\u80fd\u8fc7\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint N, M, Q;\nbitset<2010> G[2010];\nint S[10010], T[10010];\nint Ans[10010];\n\nint main() {\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\tcout.tie(0);\n\tcin >> N >> M;\n\tfor (int i = 1; i <= M; i++) {\n\t\tstatic int u, v;\n\t\tcin >> u >> v;\n\t\tG[u][v] = true;\n\t} \n\tcin >> Q;\n\tfor (int i = 1; i <= Q; i++) {\n\t\tcin >> S[i] >> T[i];\n\t}\n\tfor (int k = 1; k <= N; k++) {\n\t\tfor (int i = 1; i <= N; i++) {\n\t\t\tif (G[i][k]) {\n\t\t\t\tG[i] |= G[k];\n\t\t\t}\n\t\t}\n\t\tfor (int i = 1; i <= Q; i++) {\n\t\t\tif (G[S[i]][T[i]] && Ans[i] == 0) {\n\t\t\t\tAns[i] = max({S[i], T[i], k});\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 1; i <= Q; i++) {\n\t\tcout << (Ans[i] == 0 ? -1 : Ans[i]) << endl;\n\t}\n\treturn 0;\n} \n```",
        "postTime": 1676121580,
        "uid": 461426,
        "name": "CmsMartin",
        "ccfLevel": 6,
        "title": "[ABC287Ex] Directed Graph and Query"
    },
    {
        "content": "Ex < G < F\uff08\u786e\u4fe1\u3002\n\n\u8003\u8651 Floyd\u3002\n\n\u6ce8\u610f\u5230 Floyd \u7684\u6700\u5916\u5c42\u5faa\u73af $k = 1\\dots n$ \u662f\u679a\u4e3e\u7528\u5230 $1\\sim k$ \u4e2a\u70b9\u3002\n\n\u56e0\u6b64\u6211\u4eec\u76f4\u63a5\u8dd1\u4e00\u904d Floyd\uff0c\u6bcf\u6b21\u8dd1\u5b8c\u4e00\u6b21\u5916\u5c42\u5faa\u73af\u5c31\u626b\u4e00\u904d\u8be2\u95ee\u66f4\u65b0\u7b54\u6848\u3002\n\n\u4f46\u4f60\u53d1\u73b0\u8fd9\u4e2a\u4f1a\u8d85\u65f6\uff0c\u7528 `bitset` \u4f18\u5316\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a[\u63d0\u4ea4\u8bb0\u5f55](https://atcoder.jp/contests/abc287/submissions/38437676)\u3002",
        "postTime": 1674958199,
        "uid": 219791,
        "name": "tZERO\u3061\u3083\u3093",
        "ccfLevel": 0,
        "title": "ABC287Ex Directed Graph and Query"
    }
]