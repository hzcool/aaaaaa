[
    {
        "content": "![](https://cdn.luogu.com.cn/upload/image_hosting/62nkvn0b.png)\n\n\u5982\u56fe\u6240\u793a\uff0c\u9ed1\u767d\u67d3\u8272\u540e\uff0c\u6bcf\u4e2a\u9ed1\u8272\u683c\u5b50\u6309\u7167\u6bcf\u4e2a\u6b63 / \u53cd\u659c\u5bf9\u89d2\u7ebf\u586b\u4e0a\u4e24\u4e2a\u8d28\u6570\u7684\u4e58\u79ef\u3002\n\n\u4ee4 $m=1$\uff0c\u5219\u767d\u8272\u683c\u5b50\u4e0a\u7684\u6570\u4e3a\u76f8\u90bb\u56db\u4e2a\u9ed1\u8272\u683c\u5b50\u4e0a\u7684\u6570\u7684 $\\mathrm{lcm} + 1$\u3002\n\n\u7a0d\u5fae\u8c03\u6574\u4e00\u4e0b\u8d28\u6570\u7684\u987a\u5e8f\uff0c\u5c31\u53ef\u4ee5\u505a\u5230\u6570\u4e0d\u8d85\u8fc7 $10^{15}$ \u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O (n^2)$\uff0c[\u8bc4\u6d4b\u94fe\u63a5](https://atcoder.jp/contests/agc027/submissions/8933967)\u3002",
        "postTime": 1583832110,
        "uid": 10703,
        "name": "\u5c0f\u7c89\u5154",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 AT4378 \u3010[AGC027D] Modulo Matrix\u3011"
    },
    {
        "content": "\u6807\u7b7e: \u6784\u9020\n\n\u8003\u8651\u628a\u77e9\u9635\u9ed1\u767d\u67d3\u8272, \u4e3a\u6240\u6709\u767d\u8272\u7684\u4e3b\u5bf9\u89d2\u7ebf\u548c\u526f\u5bf9\u89d2\u7ebf\u5206\u914d\u4e00\u4e2a\u8d28\u6570.\n\n\u5bf9\u4e8e\u767d\u683c\u5b50, \u6743\u503c\u5b9a\u4e3a\u6240\u5904\u7684**\u4e24\u6761\u5bf9\u89d2\u7ebf**\u7684\u8d28\u6570\u7684\u79ef.\n\n\u5bf9\u4e8e\u9ed1\u683c\u5b50, \u6743\u503c\u5b9a\u4f4d\u76f8\u90bb\u7684(\u4e0d\u5927\u4e8e) $4$ \u4e2a\u767d\u683c\u5b50\u7684\u6700\u5c0f\u516c\u500d\u6570 $+1$ .\n\n\u8fd9\u6837\u663e\u7136\u6ee1\u8db3\u6bcf\u4e2a\u5143\u7d20\u4e92\u4e0d\u76f8\u540c(\u7279\u5224 $n=2$ \u7684\u60c5\u51b5), \u4e14\u6ee1\u8db3\u5bf9\u4e8e\u4efb\u610f\u76f8\u90bb\u7684\u4e24\u4e2a\u6570, \u8f83\u5927\u6570(**\u9ed1\u683c\u5b50**)\u6a21\u8f83\u5c0f\u6570(**\u767d\u683c\u5b50**)\u4e3a\u5b9a\u503c $1$ .\n\n\u8003\u8651\u5143\u7d20\u7684\u6700\u5927\u503c. $n=500$ \u65f6\u6211\u4eec\u9700\u8981 $2n=1000$ \u4e2a\u7d20\u6570, \u5219\u6bcf\u4e2a\u7d20\u6570\u90fd\u5728 $10^4$ \u5185, \u767d\u8272\u683c\u5b50\u4e0d\u5927\u4e8e $10^8$ .\n\n\u4e4d\u4e00\u770b\u4f3c\u4e4e\u9ed1\u683c\u5b50\u7684\u4e0a\u754c\u4e3a $10^{32}$ , \u5176\u5b9e\u4e0d\u7136, \u4e00\u4e2a\u9ed1\u683c\u5b50\u76f8\u90bb\u7684\u767d\u683c\u5b50\u6700\u591a\u5904\u4e8e\u4e24\u6761\u4e0d\u540c\u4e3b\u5bf9\u89d2\u7ebf, \u4e24\u6761\u4e0d\u540c\u526f\u5bf9\u89d2\u7ebf, \u6545\u4e0a\u754c\u5176\u5b9e\u662f $10^{16}$ . \u53ef\u4ee5\u770b\u51fa\u8fd9\u4e2a\u4e0a\u754c\u5f88\u677e, \u5b9e\u9645\u60c5\u51b5\u6bd4\u8fd9\u4e2a\u4e0a\u754c\u5c0f\u4e86 $2,3$ \u4e2a\u6570\u91cf\u7ea7, \u53ef\u4ee5\u901a\u8fc7.\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n^2\\log a)$ .\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n;\nlong long a[1001][1001], prm[2003];\nint vis[100005], cnt;\nvoid euler() {\n    vis[1] = 1;\n    for (int i = 2; i <= 10000; ++i) {\n        if (!vis[i]) prm[++cnt] = i;\n        for (int j = 1; j <= cnt && i * prm[j] <= 10000; ++j) {\n            vis[i * prm[j]] = 1;\n            if (!(i % prm[j])) break;\n        }\n    }\n}\n\nlong long gcd(long long x, long long y) {\n    while (y ^= x ^= y ^= x %= y) void();\n    return x;\n}\n\nlong long lcm(long long x, long long y) {\n    if (!x || !y) return x + y;\n    return x / gcd(x, y) * y;\n}\n\nint main() {\n    scanf(\"%d\", &n), euler();\n    if (n == 2) return puts(\"4 7\\n23 10\\n\"), 0;\n    for (int i = 1; i <= n; ++i)\n        for (int j = (i + 1 & 1) + 1; j <= n; j += 2)\n            a[i][j] = prm[(i + j) / 2] * prm[n + (i - j) / 2 + (n + 1) / 2];\n    for (int i = 1; i <= n; ++i)\n        for (int j = (i & 1) + 1; j <= n; j += 2)\n            a[i][j] = lcm(lcm(a[i - 1][j], a[i][j - 1]),\n                          lcm(a[i][j + 1], a[i + 1][j])) +\n                      1;\n    for (int i = 1; i <= n; ++i, puts(\"\"))\n        for (int j = 1; j <= n; ++j) printf(\"%lld \", a[i][j]);\n    return 0;\n}\n```",
        "postTime": 1583484306,
        "uid": 51237,
        "name": "Kinandra",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT4378 \u3010[AGC027D] Modulo Matrix\u3011"
    },
    {
        "content": "# [AGC027D] Modulo Matrix \u9898\u89e3\n\n### \u9898\u76ee\u5927\u610f\n\n- \u6784\u9020\u4e00\u4e2a $N*N$ \u7684\u77e9\u9635, \u8981\u6c42:\n  - \u6240\u6709\u5143\u7d20\u4e92\u4e0d\u76f8\u540c.\n  - \u6ee1\u8db3 $a_{i,j} \\le 10^{15}$\n  - \u5bf9\u4e8e\u4efb\u610f\u4e24\u4e2a\u76f8\u90bb\u7684\u6570\u5b57, $\\max(x,y) \\bmod \\ \\min(x,y)$ \u90fd\u76f8\u7b49\uff0c\u4e14\u5747\u4e3a\u6b63\u6574\u6570\u3002\n- \u53ef\u4ee5\u8bc1\u660e\u65b9\u6848\u4e00\u5b9a\u5b58\u5728.\n\n$n \\le 500$\n\n### Solution\n\n\u5bf9\u4e8e\u4e00\u4e2a\u6784\u9020\u9898\uff0c\u6211\u4eec\u4e00\u5f00\u59cb\u53ef\u4ee5\u8003\u8651\u624b\u52a8\u586b\u5165\uff0c\u4f46\u662f\u53d1\u73b0\u5f53\u6a21\u6570\u4e0d\u540c\u7684\u65f6\u5019\u8981\u6c42\u7ed3\u679c\u76f8\u540c\u662f\u975e\u5e38\u4e0d\u597d\u5904\u7406\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u731c\u60f3\u80fd\u4e0d\u80fd\u6784\u9020\u4e00\u4e2a\u77e9\u9635\u4f7f\u5f97\u8fd9\u4e2a\u6a21\u8fd0\u7b97\u7684\u7ed3\u679c\u90fd\u662f 1 ,\u8003\u8651\u4e00\u4e2a\u4e94\u4e2a\u5143\u7d20\u7684\u5341\u5b57\u5f62\uff0c\u6211\u4eec\u5047\u8bbe\u5341\u5b57\u5f62\u7684\u4e2d\u5fc3\u662f\u8fd9\u4e94\u4e2a\u6570\u4e2d\u6700\u5927\u7684\uff0c\u5982\u4e0b\u56fe\u3002\n\n\u200b\t$a$\n\n$b$  $x$  $c$\n\n\u200b\t$d$\n\n\u90a3\u4e48\u6211\u4eec\u9700\u8981\u6784\u9020\u4e00\u7ec4$a,b,c,d,x$\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\n\n$x=a \\times k_1 +1 $\n\n$x=b \\times k_2 +1 $\n\n$x=c \\times k_3 +1 $\n\n$x=d \\times k_4 +1 $\n\n\u5176\u4e2d $k$ \u5747\u4e3a\u6b63\u6574\u6570\u3002\n\n\u663e\u7136\uff0c\u5982\u679c $a,b,c,d$ \u90fd\u662f\u4e92\u4e0d\u76f8\u540c\u7684\u8d28\u6570\uff0c\u5e76\u4e14 $x=a \\times b \\times c \\times d+1$ \u90a3\u4e48\u4e00\u5b9a\u6ee1\u8db3\u6761\u4ef6\n\n\u5982\u6b64\u5c31\u53ef\u4ee5\u89e3\u51b3\u4e00\u4e2a\u90e8\u5206\u95ee\u9898\uff0c\u518d\u5c06\u7f51\u683c\u9ed1\u767d\u67d3\u8272\u5212\u5206\u6210\u8fd9\u6837\u7684\u5341\u5b57\u5f62\u5c31\u53ef\u4ee5\u5904\u7406\u4e86\uff0c\u4f46\u662f\u8003\u8651\u5230\u5982\u679c\u8fd9\u6837\u64cd\u4f5c\u7684\u8bdd\u6211\u4eec\u81f3\u5c11\u9700\u8981\u6c42\u51fa  $1.25 \\times 10^5$ \u4e2a\u8d28\u6570\uff0c\u5176\u4e2d $x$ \u7684\u53d6\u503c\u4f1a\u8d85\u8fc7 $10^{15}$\uff0c\u663e\u7136\u8fd9\u79cd\u65b9\u6cd5\u662f\u4e0d\u53ef\u53d6\u7684\u3002\u90a3\u4e48\u5728\u8fd9\u79cd\u65b9\u6cd5\u7684\u542f\u793a\u4e0b\uff0c\u6211\u4eec\u60f3\u5230\u5bf9\u4e8e\u4e0a\u8ff0\u7684 $a,b,c,d$ \u4e0d\u7528\u5355\u4e2a\u7684\u8d28\u6570\u6784\u9020\uff0c\u6bcf\u6b21\u6784\u9020\u65f6\u4f7f\u7528\u4e24\u4e2a\u4e0d\u540c\u7684\u8d28\u6570\u76f8\u4e58\uff0c\u8fd9\u6837 $x=\\operatorname{lcm}(a,b,c,d)+1$ \u91c7\u53d6\u4e24\u6761\u5bf9\u89d2\u7ebf\u7684\u65b9\u6cd5\u6784\u9020\u7684\u8bdd\uff0c\u5bf9\u4e8e\u5355\u70b9\u6765\u8bf4\uff0c$x$ \u7684\u589e\u91cf\u5c31\u4e0d\u662f 4 \u4e2a\u8d28\u6570\u7684\u4e58\u79ef\u4e86\uff0c\u5e76\u4e14\u8fd9\u9700\u8981\u7684\u8d28\u6570\u4e5f\u4f1a\u5927\u5927\u51cf\u5c0f\u3002\n\n\u4e8e\u662f\u6700\u540e\uff0c\u6211\u4eec\u5bf9\u8fd9\u4e2a\u77e9\u9635\u8fdb\u884c\u9ed1\u767d\u67d3\u8272 \u3002\u5e76\u4e14\u89c4\u5b9a\u767d\u70b9\u7684\u503c\u4e3a\u5b83\u4e3b\u5bf9\u89d2\u7ebf\u548c\u526f\u5bf9\u89d2\u7ebf\u4e0a\u5bf9\u5e94\u7684\u8d28\u6570\u7684\u4e58\u79ef\uff0c\u9ed1\u70b9\u7684\u503c\u4e3a\u4e0a\u8ff0 $x$\u3002\u90a3\u4e48\u4fbf\u53ef\u4ee5\u5728 $O(n^2)$ \u7684\u590d\u6742\u5ea6\u5185\u6784\u9020\u51fa\u8fd9\u6837\u7684\u77e9\u9635\u3002\n\n\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int maxn=1e6+10;\nint p[maxn],tot;\nbool vis[maxn];\nvoid prework(int n)\n{\n    for(int i=2;i<=n;i++)\n    {\n        if(!vis[i]) p[++tot]=i;\n        for(int j=1;j<=tot && p[j]*i<=n;j++)\n        {\n            vis[p[j]*i]=1;\n            if(i%p[j]==0) break;\n        }\n    }\n}\nint lcm(int x,int y)\n{\n    return x/__gcd(x,y)*y;////\n}\nint n;\nint a[505][505];\nsigned main()\n{\n    scanf(\"%lld\",&n);\n    if(n==2)\n    {\n        printf(\"4 7\\n 23 10\\n\");\n        return 0;\n    }\n    prework(1000000);\n    for(int i=1;i<=n;i++)\n        for(int j=(i%2==0)+1;j<=n;j+=2) a[i][j]=p[(i+j)/2]*(p[n+(i-j)/2+(n+1)/2]),a[i][0]=a[0][i]=a[n+1][i]=a[i][n+1]=1ll;\n    \n    for(int i=1;i<=n;i++)\n        for(int j=(i%2==1)+1;j<=n;j+=2) a[i][j]=lcm(lcm(a[i-1][j],a[i][j-1]),lcm(a[i][j+1],a[i+1][j]))+1ll;\n    \n    for(int i=1;i<=n;i++,putchar('\\n'))\n        for(int j=1;j<=n;j++) printf(\"%lld \",a[i][j]);\n    return 0;\n}\n```\n\n\u6ce8\u610f\u6c42\u6700\u5c0f\u516c\u500d\u6570\u7684\u65f6\u5019\u8981\u5148\u9664\u540e\u4e58\uff0c\u4e0d\u7136\u5c31\u4f1a\u559c\u63d0 3 \u4e2a\u70b9\u7684\u9519\u8bef\n\n\u4ee5\u53ca\u6ce8\u610f\u5bf9\u4e8e\u8fb9\u754c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8bbe\u6210 1 \u8fd9\u6837\u4e0d\u4f1a\u5bf9\u8fd9\u4e2a\u77e9\u9635\u9020\u6210\u5f71\u54cd\n",
        "postTime": 1648725371,
        "uid": 178804,
        "name": "\u592a\u9633\u8d77\u665a\u4e86\u5462",
        "ccfLevel": 0,
        "title": "[AGC027D] Modulo Matrix \u9898\u89e3"
    },
    {
        "content": "### AGC 027D\n#### Solution\n\u9996\u5148\u628a\u7f51\u683c\u9ed1\u767d\u67d3\u8272\uff0c\u90a3\u4e48\u76f8\u540c\u989c\u8272\u7684\u70b9\u4e92\u4e0d\u5f71\u54cd\uff0c\u5982\u679c\u6211\u4eec\u4ee4$max \\mod min=1$\uff0c\u4e14\u767d\u70b9\u7684\u6743\u503c\u90fd\u5df2\u7ecf\u786e\u5b9a\uff0c\u90a3\u4e48\u9ed1\u70b9\u7684\u6743\u503c\u53ef\u4ee5\u8bbe\u6210\u5b83\u5468\u56f4\u56db\u4e2a\u767d\u70b9\u6743\u503c\u7684$lcm+1$\uff0c\u5bf9\u4e8e\u767d\u70b9\u7684\u6743\u503c\uff0c\u56e0\u4e3a\u8981\u4f7f\u9ed1\u70b9\u7684\u6743\u503c\u5728$10^{15}$\u4e14\u6240\u6709\u6570\u5404\u4e0d\u76f8\u540c\uff0c\u6240\u4ee5\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u6761\u4e3b\u5bf9\u89d2\u7ebf\u548c\u6bcf\u4e00\u6761\u526f\u5bf9\u89d2\u7ebf\u5404\u7ed9\u4e00\u4e2a\u7d20\u6570\uff0c\u4e00\u4e2a\u767d\u70b9\u7684\u6743\u503c\u5c31\u662f\u6240\u5728\u4e3b\u5bf9\u89d2\u7ebf\u548c\u526f\u5bf9\u89d2\u7ebf\u7684\u6743\u503c\u4e4b\u79ef\u3002\n\n\u6ce8\u610f\u8981\u7279\u5224$n=2$\u7684\u60c5\u51b5\u3002\n#### Code\n```cpp\nint n,tot;\nint p[MAXM],nprime[MAXM];\nll a[MAXN][MAXN];\n\nvoid Init(){\n    for(int i = 2;i <= M;i++){\n        if(!nprime[i]) p[++tot] = i;\n        for(int j = 1;j <= tot;j++){\n            if(i * p[j] > M) break;\n            nprime[i * p[j]] = 1;\n            if(i % p[j] == 0) break;\n        }\n    }\n}\n\nll gcd(ll x,ll y){\n    if(!y) return x;\n    return gcd(y,x % y);\n}\n\nll lcm(ll x,ll y){\n    if(!x || !y) return x + y;\n    return x / gcd(x,y) * y;\n}\n\nint main(){\n    scanf(\"%d\",&n);\n    if(n == 2) return printf(\"4 7\\n 23 10\\n\"), 0;\n    Init();\n    tot = 0;\n    for(int i = 2;i <= 2 * n;i += 2){ // x + y = i\n        int x = p[++tot];\n        for(int j = max(1,i - n);j <= min(n,i - 1);j++)\n            a[j][i - j] = x;\n    }\n    for(int i = (n & 1) ? 1 - n : 2 - n;i < n;i += 2){ // |x - y| = i\n        int x = p[++tot];\n        for(int j = 1;j <= n;j++){\n            if(i + j >= 1 && i + j <= n)\n                a[j][i + j] *= x;\n        }\n    }\n    for(int i = 1;i <= n;i++){\n        for(int j = 1;j <= n;j++){\n            if(!a[i][j]) a[i][j] = lcm(lcm(a[i - 1][j],a[i][j - 1]),lcm(a[i + 1][j],a[i][j + 1])) + 1;\n            printf(\"%lld \",a[i][j]);\n            assert(a[i][j] <= 1000000000000000ll);\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n```",
        "postTime": 1608565829,
        "uid": 108894,
        "name": "\u5173\u6000\u4ed6\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT4378 \u3010[AGC027D] Modulo Matrix\u3011"
    },
    {
        "content": "\u60f3\u4e86\u5f88\u591a\u611a\u8822\u7684\u601d\u8def\u3002\n\n\u7b2c\u4e00\u4e2a\u60f3\u6cd5\u5c31\u662f\u5728\u8fd9\u4e2a\u68cb\u76d8\u4e0a\u5982\u679c\u80fd\u591f\u6ee1\u8db3 $\\max(A,B)=\\min(A,B)+1$\uff0c\u90a3\u6a21\u51fa\u6765\u5c31\u662f\u76f8\u7b49\u7684\uff0c\u5fae\u5fae\u5c1d\u8bd5\u53d1\u73b0\u4e0d\u884c\uff0c\u56e0\u4e3a\u4e0d\u80fd\u6709\u76f8\u540c\u7684\u3002\n\n\u7136\u540e\u53d1\u73b0\u5982\u679c\u987a\u7740\u8fd9\u4e2a\u601d\u8def\u8d70\u4e0b\u53bb\uff0c\u90a3\u6211\u4eec\u518d\u4ece\u4e00\u4e2a\u65b9\u9635\u7684\u89d2\u5ea6\u6765\u8003\u8651\uff0c\u53d1\u73b0\u5927\u6570\u5176\u5b9e\u5c31\u662f\u5468\u56f4\u6240\u6709\u5c0f\u6570\u7684\u6700\u5c0f\u516c\u500d\u6570\u518d\u52a0\u4e00\uff0c\u539f\u56e0\u663e\u7136\u3002\n\n\u7136\u540e\u4f60\u8981\u6c42\u8fd9\u4e2a\u6700\u5c0f\u516c\u500d\u6570\u5fc5\u987b\u4e0d\u91cd\u590d\uff0c\u6240\u4ee5\u4f60\u8003\u8651\u6784\u9020\u5c0f\u6570\u4f7f\u5176\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u3002\n\n\u6211\u4eec\u8003\u8651\u6700\u5c0f\u516c\u500d\u6570\u5206\u89e3\u8d28\u56e0\u6570\u4e4b\u540e\u600e\u4e48\u505a\uff0c\u5c31\u662f\u53d6\u6bcf\u4e2a\u56e0\u5b50\u4e2d\u6307\u6570\u6700\u5927\u7684\u6307\u6570\u518d\u4e0e\u8d28\u6570\u914d\u8d77\u6765\u518d\u76f8\u4e58\u5bf9\u5427\uff0c\u90a3\u6211\u4eec\u5c31\u8ba9\u6bcf\u4e00\u4e2a\u5927\u6570\u65c1\u8fb9\u7684\u6570\u7684\u8d28\u6570\u548c\u8d28\u6570\u7684\u6307\u6570\u4e0d\u540c\uff0c\u7136\u540e\u4f60\u8003\u8651\u628a\u8fd9\u4e9b\u9884\u5904\u7406\u51fa\u6765\u7136\u540e\u7528\u3002\n\n\u8dd1\u4e00\u4e2a calc \u53d1\u73b0\u6211\u4eec\u8981\u7528\u5230\u6700\u5927\u662f $134053$ \u8fd9\u4e2a\u8d28\u6570\uff0c\u8003\u8651\u5404\u79cd\u4e71\u641e\u80fd\u4e0d\u80fd\u8ba9\u8fd9\u4e2a\u77e9\u9635\u5408\u6cd5\u3002\n\n\u7136\u540e\u6ca1\u591a\u60f3\u76f4\u63a5\u66b4\u529b\u968f\u673a\u5316\u4e71\u641e\uff0c\u7136\u540e\u76f4\u63a5\u5bc4\uff0c\u968f 100 \u6b21\u8d28\u6570\u8868\u90fd\u662f\u6302\u7684\uff0c\u6211\u4eec\u8003\u8651\u53e6\u8f9f\u8e4a\u5f84\uff0c\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a\u56db\u8fde\u901a\u7684\u683c\u5b50\u5e94\u8be5\u600e\u4e48\u529e\u8282\u7701\u80fd\u591f\u8ba9\u6240\u6709\u6570\u8d28\u6570\u7ec4\u6210\u90e8\u5206\u4e0d\u76f8\u540c\u5462\uff1f\n\n\u8003\u8651\u5982\u679c\u6bcf\u4e00\u4e2a\u683c\u5b50\u90fd\u6bd4\u524d\u9762\u62ff\u5230\u4e0d\u540c\u7684\u8d28\u6570\u5c31\u884c\u4e86\uff0c\u90a3\u4e00\u4e2a\u8d28\u6570\u53ef\u4ee5\u7528\u5f88\u591a\u6b21\u5417\uff0c\u660e\u663e\u662f\u53ef\u4ee5\u7684\uff0c\u90a3\u5c31\u76f8\u5f53\u4e8e\u662f\u6211\u4eec\u8ba9\u4e00\u4e2a\u8d28\u6570\u7528\u7684\u6b21\u6570\u5c3d\u91cf\u591a\u7136\u540e\u6700\u540e\u7684\u6700\u5c0f\u516c\u500d\u6570\u5c31\u4f1a\u5c3d\u91cf\u5c0f\u3002\n\n\u601d\u6765\u60f3\u53bb\u6211\u4eec\u53d1\u73b0\u53ea\u8981\u5c0f\u683c\u5b50\u91cc\u9762\u586b\u4e24\u4e2a\u8d28\u6570\u7684\u4e58\u79ef\u5c31\u597d\u4e86\uff0c\u7136\u540e\u4f60\u8003\u8651\u600e\u4e48\u4fdd\u8bc1\u5927\u6570\u4e92\u4e0d\u76f8\u540c\uff0c\u5c31\u662f\u628a\u8d28\u6570\u585e\u5230\u5bf9\u89d2\u7ebf\u91cc\u9762\uff0c\u5c0f\u6570\u76f4\u63a5\u7528\u4e24\u6761\u5bf9\u89d2\u7ebf\u4e0a\u8d28\u6570\u7684\u4e58\u79ef\uff0c\u7136\u540e\u4ed6\u4eec\u53d6\u6700\u5c0f\u516c\u500d\u6570\u5c31\u4e0d\u53ef\u80fd\u53d6\u5230\u5b8c\u5168\u4e00\u6837\u7684\u8d28\u6570\uff0c\u4e5f\u5c31\u4e0d\u53ef\u80fd\u4f1a\u6709\u91cd\u590d\uff0c\u8fd9\u6837\u7684\u8bdd\u603b\u5171\u8981\u7528\u5230 $2n$ \u4e2a\u8d28\u6570\uff0c\u5927\u6982\u5c31\u662f\u6700\u5927\u5230 $2\\times10^4$ \u7684\u8d28\u6570\uff0c\u4f60\u8003\u8651\u8fd9\u6837\u8fd8\u4e0d\u591f\uff0c\u76f4\u63a5 rand \u8d28\u6570\u8868\uff0c\u5c31\u505a\u5b8c\u4e86\u3002\n\n\u662f\u5f88\u5999\u5f88\u725b\u5f88\u795e\u4ed9\u7684\u9898\u3002",
        "postTime": 1679273302,
        "uid": 679749,
        "name": "EastSnowLotus",
        "ccfLevel": 0,
        "title": "MaybeAT_agc027_dsol"
    },
    {
        "content": "\u795e\u4ed9\u6784\u9020\u3002\n\n\u56e0\u4e3a\u4f59\u6570\u76f8\u7b49\u4e0d\u597d\u6784\u9020\uff0c\u6240\u4ee5\u60f3\u5230\u94a6\u5b9a\u8fd9\u4e2a\u4f59\u6570\u4e3a $1$\uff0c\u6bd4\u8f83\u76f4\u89c2\u7684\u65b9\u6cd5\u5c31\u662f\u53d6\u51fa\u4e00\u4e9b\u4e0d\u76f8\u90bb\u7684\u683c\u5b50\uff0c\u7136\u540e\u5b83\u4eec\u7684\u6743\u503c\u4e3a\u5176\u76f8\u90bb\u683c\u5b50\u7684 $\\text{lcm}+1$\u3002\u7531\u4e8e\u5b83\u4eec\u6743\u503c\u6bd4\u8f83\u5927\uff0c\u79f0\u5176\u4e3a**\u5927\u683c\u5b50**\u3002\n\n\u663e\u7136**\u6700\u591a\u80fd\u53d6 $\\frac{n^2}{2}$ \u4e2a\u5927\u683c\u5b50**\uff08\u68cb\u76d8\u67d3\u8272\u53d6\u540c\u8272\u5373\u53ef\uff09\uff0c\u90a3\u4e48\u6bcf\u4e00\u4e2a\u5269\u4e0b\u7684**\u5c0f\u683c\u5b50**\u5176\u5b9e\u90fd\u88ab\u5927\u683c\u5b50\u5305\u56f4\u4e86\u3002\u6240\u4ee5\u6211\u4eec\u4e0d\u7528\u8003\u8651\u5b83\u4eec\u88ab\u5176\u5b83\u6570\u9664\u7684\u4f59\u6570\u3002\n\n\u4f60\u9996\u5148\u4f1a\u60f3\u5230\u5c0f\u683c\u5b50\u5168\u90e8\u653e\u4e0a\u4e0d\u540c\u7684\u8d28\u6570\uff0c\u4f46\u662f\u8fd9\u6837\u7684\u8bdd\u8d28\u6570\u4e2a\u6570\u662f $O(n^2)$ \u7684\uff0c\u5927\u6982\u4f1a\u586b\u5230 $1655131=p_{1.25\\times 10^5}$\u3002\u7136\u540e\u6bcf\u4e2a\u5927\u683c\u5b50\u662f\u65c1\u8fb9 $4$ \u4e2a\u8d28\u6570\u7684\u79ef $+1$\uff0c\u4f46\u662f\u8fd8\u6709\u6743\u503c\u9650\u5236\uff0c\u4f60\u53ef\u80fd\u4f1a\u7206\u70b8\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5728\u4e0a\u8ff0\u6784\u9020\u65b9\u6cd5\u4e2d\uff0c\u6bcf\u4e2a**\u5927\u683c\u5b50**\u662f\u76f8\u90bb $4$ \u4e2a\u8d28\u6570\u7684\u4e58\u79ef\u5de6\u53f3\u3002\u5982\u679c\u6211\u4eec\u53ea\u7528 $O(n)$ \u4ee5\u5185\u7684\u8d28\u6570\uff0c\u518d\u5e73\u8861\u4e00\u4e0b\uff0c\u5927\u6982\u7387\u662f\u4e0d\u4f1a\u7206\u70b8\u7684\u3002\u6240\u4ee5\u6211\u4eec\u8003\u8651\u5982\u4f55\u53ea\u4f7f\u7528 $O(n)$ \u4e2a\u8d28\u6570\u3002\n\n\u4e4b\u6240\u4ee5\u4e4b\u524d\u7684\u65b9\u6cd5\u662f $O(n^2)$ \u7684\uff0c\u662f\u56e0\u4e3a\u4f60\u7ed9\u5e73\u9762\u4e0a\u7684\u6bcf\u4e2a\u5c0f\u683c\u5b50\u90fd\u5206\u914d\u4e86\u4e00\u4e2a\u8d28\u6570\u3002\u4e8e\u662f\u6211\u4eec\u8003\u8651\u67d0\u4e9b\u5c0f\u683c\u5b50\u90fd\u5171\u7528\u4e00\u4e2a\u8d28\u6570\uff08\u5373\u6709\u4e00\u4e2a\u516c\u5171\u8d28\u56e0\u5b50\uff09\u3002\u4e0d\u96be\u53d1\u73b0\u7ed9**\u6bcf\u6761\u6b63/\u53cd\u5bf9\u89d2\u7ebf\u5206\u522b\u914d $2n$ \u4e2a\u4e0d\u540c\u7684\u8d28\u6570**\uff0c\u6bcf\u4e2a\u5c0f\u683c\u5b50\u53d6\u7ecf\u8fc7\u5b83\u7684\u4e24\u6761\u5bf9\u89d2\u7ebf\u4e0a\u7684\u8d28\u6570\u7684\u4e58\u79ef\uff0c\u4e0d\u96be\u53d1\u73b0\u6bcf\u4e2a\u5927\u683c\u5b50\u7684\u6743\u503c\u8fd8\u662f $4$ \u4e2a\u8d28\u6570\u7684\u4e58\u79ef\u3002\n\n\u518d\u5e73\u8861\u4e00\u4e0b\u5bf9\u89d2\u7ebf\u4e0a\u8d28\u6570\u5927\u5c0f\u7684\u5206\u5e03\u5c31\u80fd\u8fc7\u4e86\u3002\u4e00\u5f00\u59cb\u6211\u5199\u7684\u662f\u7ed9\u6bcf\u4e2a\u5bf9\u89d2\u7ebf\u968f\u673a\u4e00\u4e2a\u8d28\u6570\uff0c\u4f46\u662f\u597d\u50cf\u4f1a\u70b8\u65f6\u95f4\u3002\u5b9e\u9645\u4e0a\u76f4\u63a5\u8d2a\u5fc3\u5373\u53ef\u3002\n\n[\u8bc4\u6d4b\u8bb0\u5f55\u3002](https://atcoder.jp/contests/agc027/submissions/38542021)",
        "postTime": 1675319069,
        "uid": 306573,
        "name": "Ender32k",
        "ccfLevel": 0,
        "title": "AGC027D Modulo Matrix"
    }
]