[
    {
        "content": "\n\u9898\u610f\uff1a\u7ed9\u4f60n\u4e2a\u5b57\u7b26\u4e32\uff0c\u8ba9\u4f60\u5224\u65ad\u8fd9\u4e9b\u5355\u8bcd\u662f\u5426\u5c5e\u4e8e\u4e00\u79cd\u987a\u5e8f\uff08\u81ea\u884c\u5b9a\u4e49\uff09\n\n\u8fd9\u4e00\u770b\u5c31\u662f\u4e00\u9053\u62d3\u6251\u6392\u5e8f\u88f8\u9898\uff0c\u4f46\u6211\u4eec\u4eca\u5929\u8981\u8bb2\u4e00\u8bb2\u522b\u7684\u7b97\u6cd5\n\n\u89e3\u6790\uff1a\n\n\u5148\u8bfb\u5165\uff0c\u5224\u65adSi]\u548cS[i+1]\u5728\u54ea\u91cc\u4e0d\u76f8\u540c\uff0c\n\u6211\u4eec\u90a3Sample Input 1 \u7684\u7b2c\u4e00\u4e2a\u4e3e\u4f8b\n```cpp\n4\ncba\ncab\nb\na\n```\n\na\u6570\u7ec4\u8868\u793ai\u5b57\u7b26\u5728\u5b57\u5178\u4e2d\u662f\u6392\u5728j\u4e4b\u524d\uff081\uff09\u8fd8\u662f\u4e4b\u540e\uff080\uff09\n\n\u521d\u59cb\u90fd\u4e3a0\n\n\u9996\u5148\u5224\u65adS[1]\u548cS[2]\uff0c\u5728\u7b2c2\u4f4d\u4e0d\u540c\uff0ca['b']['a']=1\n\u5224\u65adS[2]\u548cS[3]\uff0c\u7b2c1\u4f4d\u4e0d\u540c\uff0ca['c']['a']=1\n\u540c\u7406 a['b]['a']=1\n\n\n\n\u4e4b\u540e\u8dd1floyd\u3002\n\n\u5982\u679c a[i][i]=1,\u5373\u51fa\u73b0\u73af out \"no\" \nelse out \"yes\u201d ;\n\n```cpp\n#include <iostream>\n#include <cstring>\nusing namespace std;\nint n;\nstring s[505];\nbool f[30][30];\nbool fulfill(string a,string b)\n{\n\tint mn=min(a.size(),b.size());\n\tfor (int i=0;i<mn;++i) if (a[i]!=b[i]) return f[a[i]-'a'][b[i]-'a']=true;\n\tif (a.size()>b.size()) return false;\n\treturn true;\n}\nint main()\n{\n\twhile (cin>>n && n)\n\t{\n\t\tmemset(f,0,sizeof(f));\n\t\tfor (int i=0;i<n;++i) cin>>s[i];\n\t\tfor (int i=0;i<n-1;++i)\n\t\t{\n\t\t\tif (!fulfill(s[i],s[i+1]))\n\t\t\t{\n\t\t\t\tcout<<\"no\\n\";\n\t\t\t\tgoto ends;\n\t\t\t}\n\t\t}\n\t\tfor (int k=0;k<30;++k) for (int i=0;i<30;++i) for (int j=0;j<30;++j) f[i][j]=f[i][j]|(f[i][k]&f[k][j]);\n\t\tfor (int i=0;i<30;++i) for (int j=0;j<30;++j) if (f[i][j] && f[j][i])\n\t\t{\n\t\t\tcout<<\"no\\n\";\n\t\t\tgoto ends;\n\t\t}\n\t\tcout<<\"yes\\n\";\n\t\tends:;\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1543199566,
        "uid": 54900,
        "name": "__Hacheylight__",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT329 \u3010Dictionary\u3011"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u5b9a $n$ \u4e2a\u5355\u8bcd\uff0c\u5224\u65ad\u662f\u5426\u5c5e\u4e8e\u67d0\u79cd\u8bcd\u5178\u5e8f\uff0c\u7ed9\u5b9a\u7684\u5355\u8bcd\u5728\u8bcd\u5178\u4e0a\u662f\u4ece\u524d\u5f80\u540e\u7684\u987a\u5e8f\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4e00\u4e2a\u5355\u8bcd\u7684\u524d\u7f00\u5e94\u51fa\u73b0\u5728\u8fd9\u4e2a\u5355\u8bcd\u4e4b\u524d\u3002\n\n# \u5206\u6790\n\n\u8fd9\u662f\u4e00\u9053\u88f8\u7684\u62d3\u6251\u6392\u5e8f\u9898\u3002\n\n\u5177\u4f53\u64cd\u4f5c\u5982\u4e0b\uff1a\n\n1. \u8bbe $string_1$ \u6392\u5728 $string_2$ \u4e4b\u524d\uff0c\u90a3\u4e48\u626b\u63cf\u8fd9\u4e24\u4e2a\u5355\u8bcd\uff0c\u7b2c\u4e00\u5904\u4e0d\u4e00\u6837\u7684\u5730\u65b9\uff08\u8bbe\u4e0b\u6807\u4e3a $j$\uff09\uff0c\u5c31\u4ece $string_{1,j}$ \u5411 $string_{2,j}$ \u8fde\u4e00\u6761\u6709\u5411\u8fb9\uff0c\u8868\u793a\u5927\u4e8e\u5173\u7cfb\uff1b\u5982\u679c $string_2$ \u662f $string_1$ \u7684\u524d\u7f00\uff0c\u5c31\u5224\u65ad\u8f93\u51fa ```no```\u3002\n\n1. \u5728\u4e0a\u8ff0\u904d\u5386\u8fc7\u7a0b\u4e2d\uff0c\u7edf\u8ba1\u51fa\u6765\u56fe\u4e2d\u9876\u70b9\u7684\u6570\u91cf\u3002\n\n1. \u7136\u540e\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\uff0c\u5982\u679c $A$ \u5e8f\u5217\u7684\u957f\u5ea6\u5c0f\u4e8e\u56fe\u4e2d\u70b9\u7684\u6570\u91cf\uff0c\u5c31\u8f93\u51fa ```no```\uff0c\u5426\u5219\u8f93\u51fa ```yes```\u3002\n\n\u53e6\u5916\uff0c\u6709\u4e00\u4e2a\u5751\u70b9\u662f\uff0c\u5982\u679c\u53d1\u73b0\u67d0\u4e2a\u5355\u8bcd\u7684\u524d\u7f00\u6392\u5728\u5b83\u4e4b\u540e\u4e86\uff0c\u4e0d\u8981\u7acb\u523b ```break```\uff0c\u8981\u628a\u672c\u7ec4\u6570\u636e\u8f93\u5165\u5b8c\u3002\n\n#### \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint ver[100005], nxt[100005], head[100005], tot, deg[100005], cnt, n, a[100005];//\u5efa\u56fe\u5fc5\u5907\u53d8\u91cf\u53ca\u9898\u76ee\u53d8\u91cf\nint have[28], is, num;//have\u8bb0\u5f55\u662f\u5426\u5b58\u5728\u8fd9\u4e2a\u9876\u70b9\uff08\u7528\u6765\u7edf\u8ba1\u70b9\u7684\u6570\u91cf\uff09\uff0cis\u5224\u65ad\u662f\u5426\u5b58\u5728\u67d0\u4e2a\u5355\u8bcd\u7684\u524d\u7f00\u5728\u5b83\u540e\u9762\uff0cnum\u8bb0\u5f55\u9876\u70b9\u6570\nstring s[505];\n\nvoid add(int x, int y) {\n\tver[++tot] = y, nxt[tot] = head[x], head[x] = tot;\n\tdeg[y]++;\n}\n\nvoid topsort() {\n\tqueue<int> q;\n\tfor (register int i = 1; i <= 27; i++)\n\t\tif (deg[i] == 0 && have[i])\n\t\t\tq.push(i);\n\twhile (!q.empty()) {\n\t\tint x = q.front(); q.pop();\n\t\ta[++cnt] = x;\n\t\tfor (register int i = head[x]; i; i = nxt[i]) {\n\t\t\tint y = ver[i];\n\t\t\tif (--deg[y] == 0)\n\t\t\t\tq.push(y);\n\t\t}\n\t}\n}\n\nsigned main() {\n    while (cin >> n && n) {\n    \tis = 0, tot = 0, cnt = 0, num = 0;//\u521d\u59cb\u5316\n    \tmemset(have, 0, sizeof(have));\n    \tmemset(ver, 0, sizeof(ver));\n    \tmemset(head, 0, sizeof(head));\n    \tmemset(deg, 0, sizeof(deg));\n    \tmemset(nxt, 0, sizeof(nxt));\n\t\tfor (register int i = 1; i <= n; i++) {\n\t\t\tcin >> s[i];\n\t\t\tif (i != 1) {\n\t\t\t\tbool flag = 0;//\u8bb0\u5f55\u662f\u5426\u5b58\u5728\u4e0d\u4e00\u6837\u7684\u5730\u65b9\n\t\t\t\tfor (register int j = 0; j < min(s[i].length(), s[i - 1].length()); j++)\n\t\t\t\t\tif (s[i][j] != s[i - 1][j]) {\n\t\t\t\t\t\tflag = 1;\n\t\t\t\t\t\thave[s[i - 1][j] - 'a' + 1] = have[s[i][j] - 'a' + 1] = 1;\n\t\t\t\t\t\tadd(s[i - 1][j] - 'a' + 1, s[i][j] - 'a' + 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tif (!flag && s[i].length() < s[i - 1].length())//\u67d0\u5355\u8bcd\u524d\u7f00\u6392\u5728\u5b83\u4e4b\u540e\u4e86\n\t\t\t\t\tis = 1;\n\t\t\t}\n\t\t}\n\t\tif (is) {\n\t\t\tputs(\"no\");\n\t\t\tcontinue;\n\t\t}\t\n\t\ttopsort();\n\t\tfor (register int i = 1; i <= 27; i++)//\u7edf\u8ba1\u9876\u70b9\u6570\n\t\t\tif (have[i])\n\t\t\t\tnum++;\n\t\tif (cnt < num)\n\t\t\tputs(\"no\");\n\t\telse\n\t\t\tputs(\"yes\");\n\t}\n    return 0;\n}\n```\n",
        "postTime": 1659669865,
        "uid": 663517,
        "name": "Jeremiahy",
        "ccfLevel": 0,
        "title": "AT329 Dictionary \u9898\u89e3"
    }
]