[
    {
        "content": "\u663e\u7136\u53ef\u77e5\uff0c\u7ed3\u679c\u7684\u5e8f\u5217\u4e2d\u53ea\u6709\u539f\u5e8f\u5217\u7684\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u3002\n\n\u82e5\u6ca1\u6709\uff0c\u5219\u628a\u4e0d\u5728\u539f\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u66ff\u6362\u4e3a\u5176\u5728\u539f\u96c6\u5408\u4e2d\u7684\u524d\u9a71\uff0c\u4e00\u5b9a\u4e0d\u52a3\u3002\n\n\n\n\u8003\u8651\u4e00\u4e2a\u8d2a\u5fc3\u7684\u89e3\u6cd5\uff1a\n\n\u5c06 ai \u6309\u987a\u5e8f\u63d2\u5165\uff0c\u4f7f\u5f97\u6bcf\u6b21\u63d2\u5165\u540e\u90fd\u80fd\u6ee1\u8db3\u9898\u610f\u3002\u5982\u679c ai \u524d\u7684\u5143\u7d20\u5df2\u7ecf\u5f62\u6210\u4e86\u4e00\u4e2a\u6ee1\u8db3\u9898\u610f\u7684\u5e8f\u5217\uff0c\u63d2\u5165\u7684\u64cd\u4f5c\u4e00\u5b9a\u662f\u5c06\u5176\u53d8\u4e3a\u4e00\u4e2a\u4e0d\u5c0f\u4e8e\u5b83\u7684\u503c\uff0c\u7136\u540e\u5f80\u524d\u7c7b\u4f3c\u4e8e\u5192\u6ce1\u6392\u5e8f\u90a3\u6837\u4ea4\u6362\u3002\n\n\u82e5\u5c06 $a_i$ \u66f4\u6539\u4e3a $v ( v\u2265a_i )$\uff0c\u66f4\u6539\u7684\u4ee3\u4ef7\u4e3a $v - a_i$\uff0c\u4ea4\u6362\u7684\u4ee3\u4ef7\u4e3a\u5f53\u524d\u5e8f\u5217\u4e2d\u5728 $a_i$ \u4e4b\u524d\u4e14\u6bd4 $v$ \u5927\u7684\u6570\u7684\u4e2a\u6570 $cnt(v)$ \uff0c\u603b\u4ee3\u4ef7\u4e3a $val(v) = v + cnt(v) - a_i$\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $a_i$ \uff0c\u8d2a\u5fc3\u7684\u7b56\u7565\u662f\u6bcf\u6b21\u90fd\u9009\u62e9\u5c06\u5176\u6539\u4e3a $val$ \u6700\u5c0f\u7684 $v$ \u3002\n\n\u5148\u79bb\u6563\u5316\uff0c\u51b3\u7b56\u4e2d\u7684 $v + cnt(v)$ \u53ef\u4ee5\u7528\u4e00\u4e2a\u6743\u503c\u7ebf\u6bb5\u6811\u53bb\u7ef4\u62a4\uff1a\u6bcf\u52a0\u5165\u4e00\u4e2a\u6570\u4f1a\u5bf9\u6bd4\u5b83\u5c0f\u7684\u6570\u7684\u8be2\u95ee\u6709 $1$ \u7684\u8d21\u732e\uff0c\u6240\u4ee5\u4fee\u6539\u662f\u533a\u95f4\u52a0\uff0c\u67e5\u8be2\u662f\u5168\u5c40\u6700\u5c0f\u503c\u3002\n\n---\n\n\u5982\u4f55\u53bb\u8bc1\u660e\u5462?\n\n\u82e5\u5f53\u524d\u70b9\u4e3a $a_i$\uff0c\u5f53\u524d\u6700\u4f18\u51b3\u7b56\u4e3a $v$ \uff0c\u4efb\u53d6\u4e00\u4e2a\u51b3\u7b56 $v' ( v' \u2260 v )$\u3002\n\n\u663e\u7136\u6709 $val(v) \u2264 val(v')$ \u3002\u6211\u4eec\u8981\u53bb\u8bc1\u660e $v$ \u4e0d\u4f1a\u6bd4 $v'$ \u66f4\u52a3\u3002\n\n\u9996\u5148\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u51b3\u7b56 $x$\uff0c\u5bf9\u5f53\u524d\u7b54\u6848\u7684\u5f71\u54cd\u662f $val(x)$ \uff0c\u5bf9\u5168\u5c40\u7684\u5f71\u54cd\u662f\u5bf9 $[1,x-1]$ \u7684\u6240\u6709\u51b3\u7b56\u503c\u5168\u90e8 $+1$\u3002\n\n\u663e\u7136\uff0c\u82e5 $v \u2264 v'$\uff0c\u5728\u5f53\u524d\u5c40\u9762\u4e0a $val(v) \u2264 val(v')$\uff0c\u4e00\u5b9a\u4e0d\u4f18\uff1b\n\u5728\u5168\u5c40\u4e0a $v'$ \u533a\u95f4\u52a0\u7684\u66f4\u591a\uff0c\u5f71\u54cd\u66f4\u5927\uff0c\u4e5f\u662f\u4e0d\u4f18\u7684\u3002\u6240\u4ee5\u5f53 $v \u2264 v'$ \u65f6\uff0c$v$ \u4e0d\u4f1a\u6bd4 $v'$ \u66f4\u52a3\u3002\n\n\u5bf9\u4e8e $v > v'$ \u7684\u60c5\u51b5\uff0c\u6709\u4e24\u4e2a\u5f15\u7406\u3002\n\n> $\\textsf{1.\u5bf9\u4e8e\u4e00\u4e2a\u5b9a\u533a\u95f4\u5185\uff0c\u6700\u4f18\u7684\u51b3\u7b56\u7684\u4f4d\u7f6e\u968f\u7740\u65f6\u95f4\u63a8\u79fb\u53ea\u4f1a\u4e0d\u53d8\u6216\u5411\u53f3\u8dd1\u3002}$\n\n\n\u8fd9\u4e2a\u5f88\u663e\u7136\uff0c\u5982\u679c\u51b3\u7b56\u4ece $v_1$ \u8dd1\u5230\u4e86 $v_2 ( v_2 < v_1 )$ \uff0c\u5219\u6709\uff1a\n\n$$\n\\begin{cases}\nval(v_1)\u2264val(v_2) \\\\\nval(v_1)+\\Delta v_1>val(v_2)+\\Delta v_2\n\\end{cases}\n$$\n\n\u7531\u4e8e\u52a0\u7684\u662f\u524d\u7f00\uff0c\u6240\u4ee5 $\\Delta v_1\u2264\\Delta v_2$\uff0c\u4e24\u5f0f\u4e0d\u53ef\u80fd\u540c\u65f6\u6210\u7acb\u3002\n\n> $\\textsf{2.\u5982\u679c\u7b2c }i(i\\neq n)\\textsf{ \u6b21\u6ca1\u6709\u9009\u62e9\u5f53\u524d\u6700\u4f18\uff0c\u90a3\u4e48\u4e4b\u540e\u4e00\u5b9a\u6709\u4e00\u6b21\u9009\u62e9\u4e86\u5f53\u524d\u6700\u4f18\u3002}$\n\n\u8fd9\u4e2a\u4e5f\u5f88\u663e\u7136\uff0c\u5982\u679c\u4e4b\u540e\u6ca1\u6709\u4efb\u4f55\u4e00\u6b21\u9009\u62e9\u5f53\u524d\u6700\u4f18\u7684\u8bdd\uff0c\u5c06\u6700\u540e\u4e00\u6b21\u9009\u62e9\u5f53\u524d\u6700\u4f18\u4e00\u5b9a\u66f4\u4f18\u3002~~\u5176\u5b9e\u6307\u7684\u5c31\u662f\u6700\u540e\u4e00\u6b21\uff08\uff08\uff08~~\n\n\u4e3a\u65b9\u4fbf\u8868\u8ff0\uff0c\u8fd9\u91cc\u7528\u6570\u8f74\u53bb\u4ee3\u66ff\u6743\u503c\u7ebf\u6bb5\u6811\u3002\n\n![01.png](https://i.loli.net/2020/11/19/qJPmb4MtxsTR8Xf.png)\n\n\u84dd\u8272\u662f $v'$ \u7684\u533a\u95f4\u52a0\uff0c\u7d2b\u8272\u662f $v$ \u7684\u533a\u95f4\u52a0\u3002\n\n\u4ee4\u4e0b\u4e00\u6b21\u53d6\u6700\u4f18\u51b3\u7b56\u70b9\u65f6\u7684\u51b3\u7b56\u4e3a $v''$\uff0c\u7531\u5f15\u7406\u2461\u53ef\u4ee5\u5f97\u77e5 $v''$ \u5b58\u5728\u3002\n\n\u7531\u4e8e\u5f15\u7406\u2460\uff0c\u5bf9\u4e8e\u4efb\u610f\u7684\u4e00\u4e2a\u5b9a\u533a\u95f4 $[ k , n ] ( v'\u2264k\u2264v )$ \uff0c\u5b83\u7684\u6700\u4f18\u51b3\u7b56\u53ea\u4f1a\u968f\u65f6\u95f4\u63a8\u79fb\u5411\u53f3\u8dd1\u3002\n\u89c2\u5bdf\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e0d\u540c\u7684\u53ea\u6709 $[ v' , v ]$\uff0c\u6240\u4ee5\u53ea\u9700\u8bc1\u660e\u8be5\u533a\u95f4\u4e0d\u5bf9\u5176\u4ea7\u751f\u8d21\u732e\u3002\n\n1. \u5f53 $v''\u2265v$ \u65f6\uff0c$[ v' , v ]$ \u663e\u7136\u4e0d\u4f1a\u8ba1\u5165\u7b54\u6848\u3002\n\n![02.png](https://i.loli.net/2020/11/19/CP3Hsz4BayMbmlo.png)\n\n2. \u5f53 $v'\u2264v''\u2264v$ \u65f6\uff0c\u5bf9\u4e8e\u67e5\u8be2\u533a\u95f4\uff0c\u6700\u4f18\u51b3\u7b56 $v$ \u53ea\u4f1a\u5411\u53f3\u63a8\u79fb\uff0c$[ v' , v ]$ \u65e0\u8d21\u732e\u3002\n\n![03.png](https://i.loli.net/2020/11/19/WwVM9AkBU5JtXPC.png)\n\n3. \u5f53 $v''\uff1cv'$ \u65f6\uff0c\u53ef\u4ee5\u770b\u505a\u662f\u533a\u95f4 $AB$ \u53d6 $min$ \u800c\u6210\uff0c\u5176\u4e2d\u5bf9\u533a\u95f4 $B$ \u5e94\u7528\u5f15\u7406\u2460\uff0c\u53ef\u77e5 $[ v' , v ]$ \u4f9d\u7136\u4e0d\u4f1a\u4ea7\u751f\u8d21\u732e\u3002\n\n\n![04.png](https://i.loli.net/2020/11/19/YH6NLhG2S5Xs1mn.png)\n\n\u8fd9\u6837\u5c31\u8bc1\u5b8c\u4e86\u3002\n\n---\n\n\u8fd8\u6709\u4e00\u70b9\u5c0f\u4e1c\u897f\u3002\n\n\u89c2\u5bdf\u4e0a\u9762\u7684\u8bc1\u660e\u8fc7\u7a0b\u53ef\u4ee5\u53d1\u73b0\uff0c\u5f53\u524d\u51b3\u7b56\u7684\u533a\u95f4\u52a0\u53ea\u8981\u6bd4 $v$ \u5c0f\uff0c\u4e14\u4e0d\u6bd4 $a_i$ \u5c0f\uff08\u4e00\u4e2a\u6570\u4e0d\u80fd\u51cf\u5c0f\uff09\uff0c\u5bf9\u540e\u9762\u7684\u51b3\u7b56\u4e0d\u9020\u6210\u5f71\u54cd\u3002\u6240\u4ee5\u6bcf\u6b21\u533a\u95f4\u52a0\u4e0d\u7528\u53bb\u67e5\u8be2\u6700\u5c0f\u503c\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u800c\u662f\u53ea\u9700\u8981\u53bb\u52a0 $[1,a_i-1]$ \u5373\u53ef\u3002\n\n---\n\n\u6838\u5fc3\u4ee3\u7801\uff08\u5176\u4e2d `t` \u4e3a\u7ebf\u6bb5\u6811\uff09\uff1a\n\n```cpp\n  for(int i=1;i<=n;i++){\n      read(a[i]),b[i]=a[i];\n  }\n  sort(b+1,b+n+1),t.build(b);\n  for(int i=1;i<=n;i++){\n      int pla=lower_bound(b+1,b+n+1,a[i])-b;\n      ans+=t.query_min(pla,n)-a[i];\n      t.update(1,pla-1,1);\n  }\n  write(ans);\n```\n",
        "postTime": 1605763140,
        "uid": 78372,
        "name": "M4_SOPMODII_JR",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT3625 \u3010Increment and Swap\u3011"
    },
    {
        "content": "2017\u5e74AtCoder\u67d0\u573a\u6bd4\u8d5b\u7684\u9898  \n\u524d\u51e0\u5929\u4e0a\u8bfe\u521a\u8bb2\u8fc7   \n~~\u4e3a\u5565\u6ca1\u4eba\u505a~~  \n\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u4e0bmin\u548cadd  \n~~\u6c34\u4e00\u6c34\u5c31\u8fc7\u53bb\u4e86\uff08\u5927\u96fe\uff09~~  \n\u7ec6\u8282\u4e0b\u89c1\u4ee3\u7801\u2193\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define N 200005\n#define inf 0x7fffffff\n#define ll long long\nint n,mn[N<<2],add[N<<2],b[N],a[N];\nll ans=0;\ninline void pushup(int x){mn[x]=min(mn[x<<1],mn[x<<1|1]);}\ninline void pushdown(int x){\n\tmn[x<<1]+=add[x];mn[x<<1|1]+=add[x];\n\tadd[x<<1]+=add[x];add[x<<1|1]+=add[x];\n\tadd[x]=0;\n}\nvoid build(int v,int l,int r){\n\tif(l==r){mn[v]=b[l];return;}\n\tint mid=l+r>>1;\n\tbuild(v<<1,l,mid);build(v<<1|1,mid+1,r);\n\tpushup(v);\n}\nvoid ins(int v,int l,int r,int x,int y){\n\tif(x>y) return;\n\tif(x<=l&&r<=y){add[v]++;mn[v]++;return;}\n    int mid=l+r>>1;pushdown(v);\n\tif(x<=mid) ins(v<<1,l,mid,x,y);\n\tif(mid<y) ins(v<<1|1,mid+1,r,x,y);\n\tpushup(v);\n} \nint query(int v,int l,int r,int x,int y){\n\tif(x<=l && r<=y) return mn[v];\n\tint mid=l+r>>1,s=inf;pushdown(v);\n\tif(x<=mid) s=min(s,query(v<<1,l,mid,x,y));\n\tif(mid<y) s=min(s,query(v<<1|1,mid+1,r,x,y));\n\treturn s;\n}\nsigned main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",&a[i]),b[i]=a[i];\n\tsort(b+1,b+n+1);\n    int nn=unique(b+1,b+n+1)-b-1;\n\tbuild(1,1,nn);\n\tfor(int i=1;i<=n;i++){\n\t\tint p=lower_bound(b+1,b+nn+1,a[i])-b;\n\t\tans+=query(1,1,nn,p,nn)-a[i];\n\t\tins(1,1,nn,1,p-1);\n\t}\n    printf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1556935367,
        "uid": 127191,
        "name": "Doveqise",
        "ccfLevel": 6,
        "title": "AT3625 Increment and Swap \u9898\u89e3"
    }
]