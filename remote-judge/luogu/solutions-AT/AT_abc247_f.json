[
    {
        "content": "## \u524d\u8a00\n\n\u7b2c\u4e00\u7bc7\u7eff\u9898\u9898\u89e3\u3002\n\n## \u9898\u76ee\u5927\u610f\n\u6bcf\u5f20\u5361\u7247\u7684\u6b63\u9762\u4e0e\u80cc\u9762\u5404\u6709\u4e00\u4e2a\u6570\uff0c\u4fdd\u8bc1\u6b63\u9762\u7684\u6570\u6784\u6210\u7684\u5e8f\u5217\uff0c\u548c\u53cd\u9762\u7684\u6570\u6784\u6210\u7684\u5e8f\u5217\uff0c\u5206\u522b\u5747\u4e3a $1$ \u5230 $n$ \u7684\u6392\u5217\u3002  \n\n\u6c42\u51fa\u9009\u62e9\u4efb\u610f\u5f20\u5361\u7247\u80fd\u4f7f $1-n$ \u5404\u51fa\u73b0\u81f3\u5c11\u4e00\u6b21\u7684\u65b9\u6848\u6570\u3002\n\n\n## \u9898\u76ee\u5206\u6790\n\n\u9996\u5148\u5206\u6790\u7b2c\u4e8c\u7ec4\u6837\u4f8b\uff1a\n```\n5\n2 3 5 4 1\n4 2 1 3 5\n```\n\n\u5c06 $1-n$ \u6bcf\u4e2a\u6570\u6240\u51fa\u73b0\u7684\u5361\u7247\u7684\u5e8f\u53f7\u4e4b\u95f4\u5efa\u4e00\u6761\u8fb9\u3002\u4f8b\u5982\uff0c$3$ \u51fa\u73b0\u5728\u7b2c $2$ \u5f20\u4e0e\u7b2c $4$ \u5f20\u4e0a\u5361\u7247\uff0c\u90a3\u4e48\u6211\u4eec\u5c06 $2$ \u4e0e $4$ \u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\u3002  \n\u90a3\u4e48\u9898\u76ee\u4e2d\u6bcf\u4e2a\u6570\u5747\u8981\u51fa\u73b0\u81f3\u5c11\u4e00\u6b21\u7684\u8981\u6c42\u5c31\u53ef\u4ee5**\u8f6c\u6362**\u4e3a\u6bcf\u6761\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u81f3\u5c11\u9009\u62e9\u4e00\u4e2a\u3002  \n\n\u6bcf\u5f20\u5361\u7247\u4e0a\u53ea\u6709\u4e24\u4e2a\u6570\u5b57\uff0c\u6545\u4e00\u4e2a\u70b9\u6700\u591a\u53ea\u80fd\u5411\u5916\u8fde\u4e24\u6761\u8fb9\uff0c\u6240\u4ee5\u6700\u7ec8\u7684\u56fe\u5e94\u4e3a**\u82e5\u5e72\u4e2a\u73af**\u3002  \n\u6b64\u6837\u4f8b\u5efa\u56fe\u5982\u4e0b\uff1a  \n![](https://cdn.luogu.com.cn/upload/image_hosting/mo4zbycn.png)  \n\n\u5404\u4e2a\u73af\u4e4b\u95f4\u662f**\u4e0d\u4f1a\u4e92\u76f8\u5e72\u6270**\u7684\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u5206\u522b\u6c42\u51fa\u6bcf\u4e2a\u73af\u7684\u9009\u62e9\u65b9\u6848\u6570\uff0c\u518d\u4f9d\u636e\u4e58\u6cd5\u539f\u7406\u76f8\u4e58\u4fbf\u5f97\u51fa\u6700\u7ec8\u7684\u7b54\u6848\u3002  \n\u6b64\u65f6\u5404\u4e2a\u73af\u4e0a\u7684\u65b9\u6848\u6570\u53ea\u4e0e\u73af\u7684\u5927\u5c0f\u6709\u5173\uff0c\u4e0e\u73af\u4e0a\u6bcf\u4e2a\u70b9\u7684\u7f16\u53f7\u65e0\u5173\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5**\u9884\u5904\u7406**\u51fa\u5927\u5c0f\u4e3a $s$ \u7684\u73af\u7684\u9009\u62e9\u65b9\u6848\u6570 $F_s$\u3002  \n\n\u624b\u63a8\u51fa\uff1a\n$$ F_1=1$$\n$$ F_2=3$$\n$$ F_3=4$$\n$$ F_4=7$$\n$$ F_5=11$$\n\u5927\u80c6\u731c\u6d4b\u901a\u9879\u516c\u5f0f\u4e3a:\n$$F_n=F_{n-1}+F_{n-2}$$\n\u63a5\u4e0b\u6765\u8bc1\u660e\u4e00\u4e0b\uff0c\u5982\u56fe\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/4yki6ztc.png)  \n\u5982\u679c\u70b9 $n$ \u88ab\u9009\u62e9\uff0c\u90a3\u4e48\u70b9 $1$ \u4e0e\u70b9 $n-1$ \u65e0\u9650\u5236\uff0c\u6b64\u65f6\u65b9\u6848\u6570\u4e3a $F_{n-1}$\u3002  \n\u5982\u679c\u70b9 $n$ \u4e0d\u9009\uff0c\u90a3\u4e48 $1$ \u4e0e $n-1$ \u662f\u5fc5\u987b\u9009\u7684\uff0c\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u5c06 $1$\u3001$n-1$\u3001$n$ \u8fd9\u4e09\u4e2a\u70b9\u7f29\u6210\u4e00\u4e2a\uff0c\u90a3\u4e48\u6b64\u65f6\u65b9\u6848\u6570\u5c31\u662f $F_{n-2}$\u3002  \n\n\u6240\u4ee5\u6700\u7ec8\u7684\u65b9\u6848\u6570\u5c31\u662f $F_{n-1}+F_{n-2}$\u3002\n\n\n## \u4ee3\u7801  \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n#define N 200100\n#define mod 998244353\nlong long n,m,ans=1,fa[N],b[N],s[N],f[N];\ninline long long read()\n{\n\tlong long jia=0,flag=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9')\n\t{\n\t\tif(ch=='-')flag*=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9')\n\t{\n\t\tjia=(jia<<1)+(jia<<3)+(ch^48);\n\t\tch=getchar();\n\t}\n\treturn jia*flag;\n}\nlong long Find(long long x)\n{\n\tif(fa[x]==x)return x; \n\treturn fa[x]=Find(fa[x]);\n}\ninline void add(long long x,long long y)\n{\n\tlong long xx=Find(x),yy=Find(y);\n\tif(xx!=yy)fa[xx]=yy,s[yy]+=s[xx];\n}\nint main ()\n{\n\tn=read();\n\tf[1]=1,f[2]=3;\n\tfor(long long i=1;i<=n;i++)\n\t{\n\t\tfa[i]=i,s[i]=1;\n\t\tif(i!=1&&i!=2)f[i]=(f[i-1]+f[i-2])%mod;\n\t\tlong long wjl=read();\n\t\tb[wjl]=i;\n\t}\n\tfor(long long i=1;i<=n;i++)\n\t{\n\t\tlong long wjl=read();\n\t\tadd(b[wjl],i);//\u5229\u7528\u5e76\u67e5\u96c6\u6c42\u51fa\u6bcf\u4e2a\u73af\u7684\u5927\u5c0f \n\t}\n\tfor(long long i=1;i<=n;i++)\n\t{\n\t\tif(fa[i]==i)ans=f[s[i]]*ans%mod;\n\t}\n\tprintf(\"%lld\\n\",ans%mod);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1682319366,
        "uid": 341329,
        "name": "Alexandra",
        "ccfLevel": 5,
        "title": "AT_abc247_f\u9898\u89e3"
    },
    {
        "content": "[\u6ca1\u8bf4\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/1358id/p/16146088.html)\n\n\u9898\u610f\uff1a\n\n\u7ed9\u4f60 $n$ \u5f20\u5361\u7247\uff0c\u6bcf\u4e00\u5f20\u7684\u6b63\u9762\u5199\u7740 $p_i$\uff0c\u80cc\u9762\u5199\u7740 $q_i$\u3002\u73b0\u5728\u8981\u9009\u4e00\u4e9b\u5361\u7247\u51fa\u6765\uff0c\u4f7f\u5f97 $1\\sim n$ \u4e2d\u6240\u6709\u6570\u90fd\u5728\u9009\u62e9\u7684\u5361\u7247\u4e2d\u81f3\u5c11\u51fa\u73b0\u4e00\u6b21\u3002\u95ee\u6709\u591a\u5c11\u79cd\u9009\u6cd5\u3002 \n\n$p$ \u548c $q$ \u90fd\u662f $1\\sim n$ \u7684\u6392\u5217\u3002\n\n-----\n\u660e\u663e\u7684\uff0c\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u9898\u8f6c\u5316\u4e3a\u4e00\u4e2a\u56fe\u8bba\u9898\u3002\u8bbe\u6570\u5b57 $m$ \u5728 $p,q$ \u4e2d\u51fa\u73b0\u7684\u4e0b\u6807\u5206\u522b\u4e3a $i,j$\uff0c\u5219\u5728 $i,j$ \u95f4\u8fde\u4e00\u6761\u8fb9\u3002\u7ed9\u8fd9\u4e9b\u70b9\u67d3\u8272\uff0c\u4f7f\u5f97\u6bcf\u6761\u8fb9\u8fde\u63a5\u7684\u4e24\u4e2a\u8282\u70b9\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u70b9\u88ab\u67d3\u8272\u4e86\u3002\n\n\u90a3\u663e\u7136\u6bcf\u4e2a\u8282\u70b9\u7684\u5ea6\u6570\u90fd\u662f $2$\u3002\u540c\u6837\u663e\u7136\u7684\u6784\u9020\u51fa\u7684\u56fe\u4e00\u5b9a\u7531\u82e5\u5e72\u4e2a\u73af\u7ec4\u6210\u3002\u6240\u4ee5\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u73af\u5206\u5f00\u8ba1\u7b97\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u73af\uff0c\u6709\u4e24\u79cd\u8ba1\u7b97\u65b9\u6cd5\u3002\n1. DP\u3002\u56e0\u4e3a\u6211\u4e0d\u4f1a\u5199\uff0c\u8fd9\u91cc\u4ece\u7565\u3002\n2. \u627e\u89c4\u5f8b\u3002\u660e\u663e\u5f53\u73af\u4e0a\u70b9\u7684\u4e2a\u6570\u4e3a $1,2,3,4,5,\\ldots$ \u65f6\u89e3\u7684\u4e2a\u6570\u5206\u522b\u4e3a $1,3,4,7,11,\\ldots$ \u3002\n\u4e8e\u662f\u6211\u4eec\u5c31\u60f3\u5230\u4e86[\u8fd9\u4e2a](https://oeis.org/A000032)\u3002\u7b97\u4e00\u4e0b\u5373\u53ef\u3002\u6700\u540e\u628a\u6bcf\u4e2a\u73af\u4e58\u8d77\u6765\u3002\n\n[\u4ee3\u7801](https://paste.ubuntu.com/p/2XHPNc5vs4/)\n ",
        "postTime": 1673398098,
        "uid": 222865,
        "name": "\u8fdf\u66ae\u5929\u590d\u660e",
        "ccfLevel": 6,
        "title": "ABC247F\u9898\u89e3"
    },
    {
        "content": "# [ABC247F Cards](https://www.luogu.com.cn/problem/AT_abc247_f) Solution\n\n[TOC]\n\n## [\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u6233\u6b64\u8fdb\u5165](http://blog.monkey-hyx.tech?t=ABC247F)\n\n## \u9898\u9762\n\n\u7ed9\u5b9a $ n $ \u5f20\u5361\u7247\uff0c\u6bcf\u5f20\u5361\u7247\u6b63\u53cd\u9762\u5404\u6709\u4e00\u4e2a\u6570\uff0c\u7ed9\u5b9a\u6bcf\u5f20\u5361\u7247\u6b63\u9762\u548c\u53cd\u9762\u7684\u6570\uff0c\u4fdd\u8bc1\u6b63\u9762\u7684\u6570\u6784\u6210\u7684\u5e8f\u5217\uff0c\u548c\u53cd\u9762\u7684\u6570\u6784\u6210\u7684\uff0c\u5206\u522b\u5747\u4e3a $ 1 $ \u5230 $ n $ \u7684\u6392\u5217\uff0c\u53ef\u4ee5\u9009\u62e9\u4efb\u610f\u5f20\u5361\u7247\u5e76\u83b7\u5f97\u5176\u6b63\u53cd\u9762\u7684\u6570\uff0c\u8981\u6c42\u6700\u7ec8\u6240\u6709\u83b7\u5f97\u7684\u6570\u81f3\u5c11\u5305\u542b $ 1 $ \u5230 $ n $ \u6bcf\u4e2a\u6570\u81f3\u5c11\u4e00\u6b21\u3002\u6c42\u6709\u591a\u5c11\u79cd\u53d6\u6cd5\uff0c\u5bf9 $ 998244353 $ \u53d6\u6a21\u3002\n\n## Solution\n\n\u8003\u8651\u5361\u7247\u4e4b\u95f4\u7684\u8054\u7cfb\uff0c\u663e\u7136\u82e5\u4e00\u4e2a\u6570\u5728\u540c\u4e00\u5f20\u5361\u724c\u7684\u6b63\u53cd\u9762\u90a3\u4e48\u8fd9\u5f20\u5361\u724c\u5fc5\u987b\u9009\u62e9\uff0c\u5426\u5219\u65e0\u6cd5\u51d1\u9f50\u4e00\u4e2a\u6392\u5217\uff0c\u53cd\u4e4b\u8fd9\u4e2a\u6570\u4e00\u5b9a\u4f1a\u5728\u4e24\u5f20\u5361\u724c\u4e2d\u51fa\u73b0\uff0c\u4e14\u8fd9\u4e24\u5f20\u5361\u724c\u4e00\u5b9a\u81f3\u5c11\u6709\u4e00\u5f20\u88ab\u9009\u62e9\uff0c\u5426\u5219\u4f9d\u7136\u65e0\u6cd5\u51d1\u9f50\u4e00\u4e2a\u6392\u5217\uff0c\u8fd9\u4e2a\u5f88\u597d\u7406\u89e3\u3002\n\n\u4e8e\u662f\u6211\u4eec\u8003\u8651\u4e00\u4e9b\u5bf9\u4e8e\u8fd9\u79cd\u9898\u7684\u4e00\u822c\u7684\u5957\u8def\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u5efa\u56fe\uff0c\u5bf9\u4e8e\u672c\u9898\u4e0d\u96be\u60f3\u5230\uff0c\u6211\u4eec\u5c06\u4e00\u5f20\u5361\u724c\u4f5c\u4e3a\u4e00\u4e2a\u70b9\uff0c\u5c06\u8fd9\u4e2a\u70b9\u5411\u5361\u724c\u4e0a\u5b58\u5728\u7684\u6570\u7684\u53e6\u4e00\u6b21\u51fa\u73b0\u6240\u5728\u7684\u5361\u724c\u8fde\u4e00\u6761\u8fb9\u3002\u62bd\u8c61\u5730\u8bf4\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u6570\u6240\u5728\u7684\u4e24\u5f20\uff08\u6216\u4e00\u5f20\uff09\u5361\u724c\u4f4d\u7f6e $ pos_{i, 0} $ \u548c $ pos_{i, 1} $\uff0c\u5176\u4e2d\u4e00\u5b9a\u6709\u4e00\u4e2a\u521a\u597d\u4e3a $ i $\uff0c\u6211\u4eec\u5c31\u662f\u8981\u4ece $ i $ \u5411\u4e0d\u7b49\u4e8e $ i $ \u7684\u90a3\u4e2a $ pos_i $ \u8fde\u4e00\u6761\u8fb9\uff0c\u8fd9\u91cc\u4fbf\u4e0d\u96be\u60f3\u5230\u4ece $ i $ \u5411 $ pos_{i, 0} \\oplus pos_{i, 1} \\oplus i $ \u8fde\u8fb9\u5373\u53ef\u3002\n\n\u4e0d\u96be\u60f3\u5230\u8fd9\u6837\u4f1a\u5f62\u6210\u591a\u4e2a\u73af\uff0c\u6bcf\u4e00\u4e2a\u73af\u4ee3\u8868\u7740\u5176\u4e2d\u51e0\u5f20\u5361\u724c\uff0c\u540c\u65f6\u8fd9\u4e9b\u5361\u724c\u4e0a\u7684\u6570\u5728\u73af\u5185\u4e00\u5b9a\u6bcf\u4e2a\u6570\u90fd\u51fa\u73b0\u4e86\u4e24\u904d\uff0c\u5982\u6392\u5217 $ \\{ 1, 2, 3 \\} $ \u548c\u6392\u5217 $ \\{ 2, 1, 3 \\} $\uff0c\u663e\u7136 $ i = 1 $ \u65f6\u5411\u6570\u5b57 $ 1 $ \u6240\u5728\u7684\u53e6\u4e00\u5f20\u5361\u724c $ 2 $ \u548c\u6570\u5b57 $ 2 $ \u6240\u5728\u7684\u53e6\u4e00\u5f20\u5361\u724c $ 2 $ \u8fde\u8fb9\uff08\u4e0d\u62ff\u53d1\u73b0\u5f88\u6709\u53ef\u80fd\u5b58\u5728\u91cd\u8fb9\u4e0e\u81ea\u73af\uff0c\u6240\u4ee5\u9700\u8981\u6ce8\u610f\u5224\u91cd\u5e76\u5ffd\u7565\uff09\uff0c\u5bf9\u4e8e $ i = 2 $ \u540c\u7406\uff0c\u6700\u7ec8\u4e00\u5b9a\u4f1a\u5f62\u6210 $ 1 \\rightarrow 2 \\rightarrow 1 $ \u548c $ 3 \\rightarrow 3 $ \u4e24\u4e2a\u73af\uff0c\u7b2c\u4e00\u4e2a\u73af\u53ef\u4ee5\u6c42\u51fa\u5e26\u6709 $ 1, 2 $ \u6570\u5b57\u7684\u5361\u724c\u7684\u8ba9 $ 1, 2 $ \u90fd\u81f3\u5c11\u5b58\u5728\u4e00\u6b21\u7684\u5361\u724c\u9009\u62e9\u65b9\u6848\u6570\uff0c\u7b2c\u4e8c\u4e2a\u73af\u5219\u4e3a $ 3 $ \u7684\u65b9\u6848\u6570\uff0c\u5c06\u4e24\u8005\u4e58\u8d77\u6765\u5373\u4e3a\u6700\u7ec8\u7b54\u6848\u3002\u5e76\u4e14\u73af\u4e0a\u6bcf\u4e2a\u8fb9\u76f8\u8fde\u7684\u4e24\u4e2a\u70b9\uff0c\u6216\u8005\u8bf4\u4e24\u5f20\u5361\u724c\uff0c\u81f3\u5c11\u8981\u88ab\u9009\u62e9\u4e00\u5f20\uff0c\u56e0\u4e3a\u4e00\u6761\u8fb9\u8fde\u7ed3\u7684\u4e24\u4e2a\u5361\u724c\u4e00\u5b9a\u5b58\u5728\u7740\u76f8\u540c\u7684\u6570\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u6784\u6210\u6392\u5217\u81f3\u5c11\u9700\u8981\u9009\u62e9\u4e00\u4e2a\u3002\n\n\u540c\u65f6\u53d1\u73b0\u4e0d\u540c\u73af\u7684\u65b9\u6848\u6570\uff0c\u53ea\u8ddf\u73af\u7684\u957f\u5ea6\u6709\u5173\uff0c\u4e8e\u662f\u6211\u4eec\u8003\u8651\u4ee4 $ dp(i) $ \u8868\u793a $ i $ \u4e2a\u6570\u6784\u6210\u7684\u73af\uff0c\u5219\u6709\u8fb9\u754c $ dp(1) = 1 $ \u548c $ dp(2) = 3 $\uff0c\u548c\u8f6c\u79fb $ dp(i) = dp(i - 1) + dp(i - 2) $\uff0c\u5927\u6982\u5c31\u662f\u6211\u4eec\u8003\u8651\u5411\u539f\u73af\u4e2d\u63d2\u5165\u7b2c $ i $ \u4e2a\u6570\uff0c\u5982\u679c\u9009\u62e9\u7b2c $ i $ \u4e2a\u6570\uff0c\u90a3\u4e48\u4efb\u610f\u7684\u524d $ i - 1 $ \u4e2a\u6570\u7684\u5408\u6cd5\u65b9\u6848\u90fd\u53ef\u4ee5\u63a5\u4e0a\u65b0\u7684\u8fd9\u4e2a\u6570\uff0c\u53cd\u4e4b\u5982\u679c\u4e0d\u9009\u7b2c $ i $ \u4e2a\uff0c\u90a3\u4e48\u7b2c $ i $ \u4e2a\u7684\u4e24\u4fa7\u90fd\u5e94\u8be5\u662f\u9009\u62e9\u7684\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u76f4\u89c2\u5730\u53ef\u4ee5\u60f3\u5230\uff0c\u56fa\u5b9a\u5176\u5de6\u53f3\u7684\u4e24\u4e2a\u7136\u540e\u7531 $ dp(i - 3) $ \u8f6c\u79fb\u800c\u6765\uff0c\u4f46\u662f\u8fd9\u4e2a\u662f\u6709\u9057\u6f0f\u7684\u3002\u89c2\u5bdf\u53d1\u73b0\u5bf9\u4e8e $ i $ \u4e0d\u9009\u62e9\u7684\uff0c\u662f\u5b58\u5728\u7c7b\u4f3c $ \\cdots \\rightarrow 0 \\rightarrow 1 \\rightarrow i(0) \\rightarrow 1 \\rightarrow 0 \\rightarrow \\cdots $\uff0c\u4e5f\u5c31\u662f\u5728\u56fa\u5b9a\u4e09\u4e2a\u4e4b\u540e\u5de6\u53f3\u5404\u81ea\u63a5\u4e00\u4e2a\u4e0d\u9009\u7684\uff0c\u8fd9\u4e2a\u4e1c\u897f\u663e\u7136\u662f\u4e0d\u5728 $ dp(i - 3) $ \u91cc\u7684\uff0c\u56e0\u4e3a\u4e24\u4e2a\u90fd\u4e0d\u9009\u63a5\u5728\u4e00\u8d77\u5f62\u6210\u73af\u662f\u4e0d\u5408\u6cd5\u7684\uff0c\u8003\u8651\u5982\u4f55\u6b63\u786e\u5730\u8f6c\u79fb\uff1a\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5728 $ dp(i - 2) $ \u7684\u65b9\u6848\u4e2d\u627e\u5230\u4efb\u610f\u4e00\u4e2a\u9009\u62e9\u7684\u70b9\uff0c\u7136\u540e\u5728\u5176\u65c1\u8fb9\u63a5\u4e0a $ i $ \u548c\u53e6\u4e00\u4e2a\u56fa\u5b9a\u7684\u9009\u62e9\u7684\u70b9\uff0c\u8fd9\u6837\u4e5f\u662f\u5408\u6cd5\u7684\u4e14\u4e0d\u91cd\u4e0d\u6f0f\uff0c\u6700\u7ec8\u5c31\u662f $ dp(i) = dp(i - 1) + dp(i - 2) $\u3002\n\n\u4e8e\u662f\u8003\u8651\u5e76\u67e5\u96c6\u7ef4\u62a4\u597d\u6bcf\u4e2a\u73af\u7684\u5927\u5c0f\uff0c$ \\prod dp(siz_i) $ \u5373\u4e3a\u6700\u7ec8\u7684\u7b54\u6848\u3002\n\n## Code\n\n```cpp\n#define _USE_MATH_DEFINES\n#include <bits/extc++.h>\n\n#define PI M_PI\n#define E M_E\n#define npt nullptr\n#define SON i->to\n#define OPNEW void* operator new(size_t)\n#define ROPNEW(arr) void* Edge::operator new(size_t){static Edge* P = arr; return P++;}\n\nusing namespace std;\nusing namespace __gnu_pbds;\n\nmt19937 rnd(random_device{}());\nint rndd(int l, int r){return rnd() % (r - l + 1) + l;}\nbool rnddd(int x){return rndd(1, 100) <= x;}\n\ntypedef unsigned int uint;\ntypedef unsigned long long unll;\ntypedef long long ll;\ntypedef long double ld;\n\n#define MOD 998244353\n\ntemplate< typename T = int >\ninline T read(void);\n\nint N;\nint P[210000], Q[210000];\nint cnt[210000];\nint pos[210000][2];\nint f[210000];\nbool vis[210000];\nint ans(1);\n\nclass UnionFind{\nprivate:\npublic:\n    int fa[210000];\n    int siz[210000];\n    UnionFind(void){for(int i = 1; i <= 201000; ++i)fa[i] = i, siz[i] = 1;}\n    int Find(int x){return x == fa[x] ? x : fa[x] = Find(fa[x]);}\n    void Union(int origin, int son){\n        if(Find(origin) == Find(son))return;\n        siz[Find(origin)] += siz[Find(son)], fa[Find(son)] = Find(origin);\n    }\n}uf;\n\nint main(){\n    N = read();\n    f[1] = 1, f[2] = 3;\n    for(int i = 3; i <= N; ++i)f[i] = (ll)(f[i - 1] + f[i - 2]) % MOD;\n    for(int i = 1; i <= N; ++i)P[i] = read(), pos[P[i]][cnt[P[i]]++] = i;\n    for(int i = 1; i <= N; ++i)Q[i] = read(), pos[Q[i]][cnt[Q[i]]++] = i;\n    for(int i = 1; i <= N; ++i)\n        uf.Union(i, pos[P[i]][0] ^ pos[P[i]][1] ^ i),\n        uf.Union(i, pos[Q[i]][0] ^ pos[Q[i]][1] ^ i);\n    for(int i = 1; i <= N; ++i)if(uf.Find(i) == i)ans = (ll)ans * f[uf.siz[uf.Find(i)]] % MOD;\n    printf(\"%d\\n\", ans);\n    fprintf(stderr, \"Time: %.6lf\\n\", (double)clock() / CLOCKS_PER_SEC);\n    return 0;\n}\n\ntemplate < typename T >\ninline T read(void){\n    T ret(0);\n    short flag(1);\n    char c = getchar();\n    while(c != '-' && !isdigit(c))c = getchar();\n    if(c == '-')flag = -1, c = getchar();\n    while(isdigit(c)){\n        ret *= 10;\n        ret += int(c - '0');\n        c = getchar();\n    }\n    ret *= flag;\n    return ret;\n}\n```\n\n## UPD\n\nupdate-2022_10_25 \u521d\u7a3f",
        "postTime": 1666655436,
        "uid": 362938,
        "name": "Tsawke",
        "ccfLevel": 6,
        "title": "ABC247F Cards \u9898\u89e3"
    }
]