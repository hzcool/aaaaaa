[
    {
        "content": "# abc 246 e\n\n[AT \u94fe\u63a5](https://atcoder.jp/contests/abc246/tasks/abc246_e)\n\n[\u6d1b\u8c37\u94fe\u63a5](https://www.luogu.com.cn/problem/AT_abc246_e)\n\n## \u9898\u610f\n\n\u6709\u4e00\u4e2a $N \\times N$ \u7684\u68cb\u76d8\uff0c$(i, j)$ \u8868\u793a\u68cb\u76d8\u7b2c $i$ \u884c\u7b2c $j$ \u5217\u7684\u683c\u5b50\uff0c\u884c\u7f16\u53f7\u548c\u5217\u7f16\u53f7\u90fd\u662f $1, 2, \\dots, N$\u3002\n\n\u68cb\u76d8\u7528 $N$ \u4e2a\u957f\u5ea6\u4e3a $N$ \u7684\u5b57\u7b26\u4e32 $S_i$ \u63cf\u8ff0\uff1a\n\n- \u5982\u679c $S_{i, j} = $ `.`\uff0c\u5219\u683c\u5b50 $(i, j)$ \u662f\u7a7a\u7684\u3002\n\n- \u5426\u5219\uff0c\u683c\u5b50 $(i, j)$ \u6709\u969c\u788d\u3002\n\n\u4e00\u5f00\u59cb\u683c\u5b50 $(A_x, A_y)$ \u653e\u4e86\u4e00\u9897\u68cb\u5b50\u3002\u5728\u6bcf\u6b21\u79fb\u52a8\u4e2d\uff0c\u68cb\u5b50\u53ef\u4ee5\u671d\u67d0\u4e2a\u5bf9\u89d2\u7ebf\uff08\u67d0\u4e2a\u659c 45 \u5ea6\u65b9\u5411\uff09\u884c\u8d70\u82e5\u5e72\u6b65\u540e\u505c\u4e0b\u3002\u68cb\u5b50\u4e0d\u80fd\u8d70\u51fa\u68cb\u76d8\u8303\u56f4\uff0c\u5e76\u4e14\u8be5\u6b21\u79fb\u52a8\u7684\u8def\u5f84\u4e2d\u4e0d\u80fd\u5305\u542b\u969c\u788d\u683c\u5b50\u3002\n\n\u8bf7\u4f60\u6c42\u51fa\u68cb\u5b50\u4ece $(A_x, A_y)$ \u8d70\u5230 $(B_x, B_y)$ \u6240\u9700\u7684\u6700\u5c11\u79fb\u52a8\u6b21\u6570\u3002\u5982\u679c\u65e0\u6cd5\u79fb\u52a8\u5230 $(B_x, B_y)$\uff0c\u8f93\u51fa `-1`\u3002\n\n$2 \\le N \\le 1500$\u3002\n\n$1 \\le A_x, A_y, B_x, B_y \\le N$\u3002\n\n$(A_x, A_y) \\ne (B_x, B_y)$\u3002\n\n## \u601d\u8def\n\n\u5f88\u660e\u663e\uff0c\u8fd9\u9898\u6c42\u6700\u77ed\u8def\uff0c\u662f\u5e7f\u641c\u3002\n\n\u4f46\u662f\uff0c\u8fd9\u4e2a\u79fb\u52a8\u65b9\u5f0f\u5f88\u8ba9\u4eba\u5934\u75bc\uff0c\u6bcf\u6b21\u5230\u5e95\u632a\u52a8\u51e0\u6b21\u5462\uff1f\n\n\u5982\u679c\u6bcf\u6b21\u90fd\u53bb\u679a\u4e3e\u79fb\u52a8\u7684\u6b65\u6570\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u53c8\u53d8\u6210\u4e86 $O(n ^ 3)$\uff0c\u4f1a\u8d85\u65f6\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u5e94\u8be5\u600e\u4e48\u89e3\u51b3\u5462\uff1f\n\n\u5176\u5b9e\uff0c\u6bcf\u6b21\u53ea\u7528\u8d70\u4e00\u6b65\uff0c\u4f46\u662f\uff0c\u6211\u4eec\u6bcf\u6b21\u9700\u8981\u8bb0\u5f55\u662f\u5f80\u54ea\u4e2a\u65b9\u5411\u8d70\u7684\u3002\n\n\u5982\u679c\u5f53\u524d\u8d70\u7684\u65b9\u5411\u548c\u8f6c\u79fb\u6765\u7684\u90a3\u4e2a\u72b6\u6001\u7684\u8f6c\u79fb\u65b9\u5411\u662f\u4e0d\u540c\u7684\uff0c\u5c31\u9700\u8981\u591a\u4e00\u6b21\u64cd\u4f5c\uff0c\u5426\u5219\uff0c\u5c31\u8fd8\u662f\u8fd9\u6b21\u64cd\u4f5c\u3002\n\n\u56e0\u4e3a\u6bcf\u6b21\u8f6c\u79fb\u6709\u53ef\u80fd\u589e\u52a0\u64cd\u4f5c\u6b21\u6570\uff0c\u6709\u53ef\u80fd\u4e0d\u589e\u52a0\uff0c\u6240\u4ee5\u662f **0-1 BFS**\uff0c\u7528\u53cc\u7aef\u961f\u5217\u7ef4\u62a4\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 1510;\n\nconst int dx[] = {1, 1, -1, -1};\nconst int dy[] = {1, -1, 1, -1};\n\nint n, sx, sy, fx, fy, d[N][N][4];\nchar c[N][N];\n\nstruct Node {\n  int x, y, dir;  // dir \u8868\u793a\u65b9\u5411\n};\n\ndeque<Node> que;\n\nvoid Record(int x, int y, int dis, int dir, int nowd) {\n  if (x < 1 || x > n || y < 1 || y > n || c[x][y] == '#' || d[x][y][nowd] <= dis + (nowd != dir)) {\n    return ;\n  }\n  d[x][y][nowd] = dis;\n  if (nowd == dir) {\n    que.push_front({x, y, nowd});\n  } else {\n    d[x][y][nowd]++;\n    que.push_back({x, y, nowd});\n  }\n}\n\nvoid bfs() {\n  for (Record(sx, sy, 0, 4, 4); !que.empty(); ) {\n    Node u = que.front();\n    que.pop_front();\n    for (int i = 0; i < 4; i++) {  // \u8f6c\u79fb\n      Record(u.x + dx[i], u.y + dy[i], d[u.x][u.y][u.dir], u.dir, i);\n    }\n  }\n}\n\nint main() {\n  ios::sync_with_stdio(0), cin.tie(0);\n  cin >> n >> sx >> sy >> fx >> fy;\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= n; j++) {\n      cin >> c[i][j];\n      d[i][j][0] = d[i][j][1] = d[i][j][2] = d[i][j][3] = 1e9;  // \u521d\u59cb\u5316\n    }\n  }\n  bfs();\n  int ans = 1e9;\n  for (int i = 0; i < 4; i++) {\n    if (d[fx][fy][i] != 1e9) {\n      ans = min(ans, d[fx][fy][i]);\n    }\n  }\n  cout << (ans == 1e9 ? -1 : ans);\n  return 0;\n}\n```",
        "postTime": 1682313424,
        "uid": 658291,
        "name": "chengning0909",
        "ccfLevel": 4,
        "title": "abc 246 e \u9898\u89e3"
    },
    {
        "content": "\u672c\u9898\u5c31\u662f\u4e2a\u88f8\u7684\u5e7f\u641c\uff0c\u4f46\u662f\u6709\u4e86\u4e9b\u6570\u5b66\u7684\u5473\u9053\u3002\n\n\u9996\u5148\u6211\u4eec\u6765\u5224\u65ad\u80af\u5b9a\u65e0\u89e3\u7684\u60c5\u51b5\uff1a\n\n```\nb..\n..*\n...\n```\n\n\u50cf\u4e0a\u9762\u7684\u8fd9\u79cd\u60c5\u51b5\uff08`b` \u4ee3\u8868\u8c61\uff0c`*` \u4ee3\u8868\u76ee\u7684\u5730\uff09\uff0c\u662f\u80af\u5b9a\u65e0\u6cd5\u8d70\u5230\u7684\uff08\u5982\u679c\u4f60\u6709\u5b66\u8fc7\u56fd\u9645\u8c61\u68cb\uff0c\u5c31\u77e5\u9053\u8fd9\u662f\u663e\u7136\u7684\uff09\u2014\u2014\u56e0\u4e3a\u8c61\u53ea\u80fd\u8d70\u659c\u7ebf\uff0c\u6240\u4ee5 $x$ \u548c $y$  \u5750\u6807\u7684\u5947\u5076\u6027\u5173\u7cfb\uff08\u76f8\u540c\u6216\u4e0d\u540c\uff09\u4e0d\u4f1a\u6539\u53d8\u3002\n\n\u8fd9\u91cc\u7279\u5224\u4e00\u4e0b\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3\u6761\u4ef6\u5c31\u8f93\u51fa `-1`\u3002\n\n```cpp\nif((abs(s.x-s.y)&1)!=(abs(e.x-e.y)&1)){\n    cout<<\"-1\\n\"; return 0;\n}\n```\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u5e7f\u641c\u3002\u9996\u5148\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u8868\u793a\u8c61\u76ee\u524d\u7684\u4e00\u4e2a\u72b6\u6001\uff1a\n\n```cpp\nstruct node{\n    int x,y,step;\n    // x \u5750\u6807\uff0cy \u5750\u6807\u548c\u5f53\u524d\u6b65\u6570\n}s,e,xx;\n```\n\n\u7528\u4e00\u4e2a\u6570\u7ec4\u8868\u793a\u6bcf\u4e2a\u70b9\u662f\u5426\u6709\u969c\u788d\u7269\u3002\u4f46\u662f\uff0c\u672c\u6570\u7ec4\u4e0d\u6b62\u9700\u8981 `0` \u548c `1`\uff0c\u8fd8\u9700\u8981\u4e00\u4e2a `2` \u7684\u6807\u8bb0\u3002\u56e0\u4e3a\uff0c\u53ef\u80fd\u51fa\u73b0\u5982\u4e0b\u7684\u60c5\u51b5\u3002\n\n```cpp\nb...\n.r..\n..*.\n```\n\n\u56e0\u4e3a\uff0c\u5982\u679c\u6211\u4eec\u628a**\u5df2\u7ecf\u8d70\u8fc7\u7684\u70b9**\u548c**\u969c\u788d\u7269**\u6df7\u4e3a\u4e00\u8c08\uff0c\u90a3\u4e48\u4e0a\u9762\u7684\u5c31\u4f1a\u8bef\u5224\uff08\u7528 `b` \u8868\u793a\u8c61\uff0c`r` \u4ee3\u8868\u5df2\u7ecf\u8d70\u8fc7\u7684\u70b9\uff0c`*` \u8868\u793a\u76ee\u7684\u5730\uff09\u2014\u2014\u7a0b\u5e8f\u4f1a\u628a\u90a3\u4e2a `r` \u5f53\u6210\u969c\u788d\u7269\uff0c\u76f4\u63a5\u5c31\u8fd4\u56de\u4e86\uff0c\u76ee\u7684\u5730\u5c31\u65e0\u6cd5\u8d70\u5230\u3002\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u7528 `0` \u6807\u8bb0\u6ca1\u8d70\u8fc7\u4e14\u53ef\u8d70\u7684\u70b9\uff0c`1` \u6807\u8bb0\u969c\u788d\u7269\uff0c`2` \u6807\u8bb0\u5df2\u7ecf\u8d70\u8fc7\u7684\u70b9\u5373\u53ef\u3002\n\n\u679a\u4e3e\u6bcf\u4e2a\u65b9\u5411\u8d70\u7684\u6b65\u6570\uff0c\u5982\u679c\u9047\u5230**\u969c\u788d\u7269**\u5c31 `break`\uff08\u4f18\u5316\uff09\u3002\n\n\u653e\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint a[1501][1501];\nconst int dx[4]={1,1,-1,-1},dy[4]={1,-1,1,-1};\nstruct node{int x,y,step;}s,e,xx;\nqueue<node> q;\nint main(){\n    ios::sync_with_stdio(false);\n    int n; cin>>n>>s.x>>s.y>>e.x>>e.y;\n    if((abs(s.x-s.y)&1)!=(abs(e.x-e.y)&1)){cout<<\"-1\\n\"; return 0;} // \u7279\u5224\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=n;j++){\n            char c; cin>>c;\n            if(c=='.')a[i][j]=0;\n            else a[i][j]=1; // \u969c\u788d\u7269\n        }\n    s.step=0; q.emplace(s);\n    while(!q.empty()){\n        node t=q.front(); q.pop();\n        for(int i=0;i<4;i++){\n            for(int j=1;j<n;j++){\n                xx.x=t.x+j*dx[i]; xx.y=t.y+j*dy[i];\n                if(xx.x<1||xx.x>n||xx.y<1||xx.y>n)break;\n                xx.step=t.step+1;\n                if(!a[xx.x][xx.y]){\n                    a[xx.x][xx.y]=2; // \u5df2\u7ecf\u8d70\u8fc7\u8fc7\u7684\u6253\u4e0a\u6807\u8bb0 2\n                    if(xx.x==e.x&&xx.y==e.y){\n                        cout<<xx.step<<endl; return 0; // \u641c\u5230\u4e86\n                    }\n                    else q.emplace(xx);\n                }\n                else if(a[xx.x][xx.y]==1)break; // \u8fd9\u4e2a\u662f\u969c\u788d\u7269\n            }\n        }\n    }\n    cout<<\"-1\\n\"; // \u65e0\u89e3\u7684\u60c5\u51b5\n    return 0;\n}\n```",
        "postTime": 1666439190,
        "uid": 556366,
        "name": "zyc212303",
        "ccfLevel": 5,
        "title": "[ABC246E] Bishop 2 \u9898\u89e3"
    },
    {
        "content": "# [ABC246E Bishop 2](https://www.luogu.com.cn/problem/AT_abc246_e) Solution\n\n[TOC]\n\n## [\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u6233\u6b64\u8fdb\u5165](http://blog.monkey-hyx.tech?t=ABC246E)\n\n## \u9898\u9762\n\n\u7ed9\u5b9a\u6709\u969c\u788d\u7684\u7f51\u683c\u56fe\uff0c`.` \u4e3a\u7a7a\u5730\uff0c`#` \u4e3a\u969c\u788d\u3002\u7ed9\u5b9a\u8d77\u70b9\u7ec8\u70b9\uff0c\u6bcf\u6b21\u79fb\u52a8\u4ec5\u53ef\u4ee5\u659c\u5411\u8d70\u4efb\u610f\u957f\u5ea6\uff0c\u95ee\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u6700\u5c11\u79fb\u52a8\u6b21\u6570\uff0c\u53ef\u80fd\u65e0\u89e3\uff0c\u65e0\u89e3\u8f93\u51fa `-1`\u3002\n\n## Solution\n\nBFS \u8f83\u4e3a\u663e\u7136\uff0c\u56e0\u4e3a\u65f6\u9650 6000ms\uff0c\u53ea\u8981\u5199\u7684\u4e0d\u592a\u4e11\u76f4\u63a5\u641c\u4e5f\u80fd\u8fc7\u3002\u5bf9\u4e8e\u672c\u9898\uff0c\u4f7f\u7528 01BFS \u8f83\u4e3a\u663e\u7136\u3002\u6211\u4eec\u5728\u5bbd\u641c\u6bcf\u6b21\u641c\u4e00\u6b65\u4e14\u8ddd\u79bb\u4ec5\u4e3a $ 1 $\uff0c\u5e76\u8bb0\u5f55\u4e0a\u4e00\u6b65\u7684\u65b9\u5411\uff0c\u5982\u679c\u540c\u5411\u5219\u8ba4\u4e3a\u8d70\u4e86\u4e00\u4e2a $ 0 $ \u8fb9\uff0c\u5f02\u5411\u5219\u4e3a $ 1 $ \u8fb9\uff0c\u5f00\u4e2a\u53cc\u7aef\u961f\u5217\uff0c\u540c\u5411\u63d2\u5230\u524d\u9762\uff0c\u53cd\u4e4b\u63d2\u5230\u540e\u9762\uff0c\u6309\u7167\u6b63\u5e38\u5bbd\u641c\u6bcf\u6b21\u53d6\u961f\u5934\u6269\u5c55\u5373\u53ef\u3002\n\n\u9700\u8981\u6ce8\u610f\u5bf9\u4e8e 01BFS \u65f6\uff0c\u6211\u4eec\u5224\u65ad\u662f\u5426\u8d70\u8fc7\u548c\u662f\u5426\u4e3a\u7b54\u6848\u7684\u65f6\u5019\uff0c\u9700\u8981\u5728\u4ece\u961f\u5934\u53d6\u5143\u7d20\u7684\u65f6\u5019\u5224\u65ad\uff0c\u800c\u4e0d\u662f\u5728\u6269\u5c55\u7684\u65f6\u5019\u5224\u65ad\u3002\u56e0\u4e3a\u5982\u679c\u5728\u67d0\u4e00\u6b21\u7531 $ 1 $ \u6269\u5c55\u7684\u65f6\u5019\u5982\u679c\u76f4\u63a5\u628a $ vis $ \u8bbe\u4e3a $ \\texttt{true} $\uff0c\u4f46\u662f\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u540e\u9762\u4ece $ 0 $ \u6269\u5c55\u7684\uff0c\u672c\u5e94\u80fd\u63d2\u5728\u961f\u5217\u4e2d\u6bd4\u8fd9\u4e2a\u66f4\u524d\u9762\u7684\u66f4\u4f18\u7684\u65e0\u6cd5\u8f6c\u79fb\uff0c\u4f7f\u7b54\u6848\u66f4\u52a3\u3002\u540c\u65f6\u6211\u4eec\u4e5f\u9700\u8981\u8003\u8651\u5230\u4e0d\u540c\u65b9\u5411\u7684\u65f6\u5019\u6269\u5c55\u4e5f\u662f\u4e0d\u540c\uff0c\u6240\u4ee5 $ vis $ \u4e2d\u4e5f\u8981\u8003\u8651\u5230\u65b9\u5411\u8fd9\u4e00\u7ef4\u3002\n\n## Code\n\n```cpp\n#define _USE_MATH_DEFINES\n#include <bits/extc++.h>\n\n#define PI M_PI\n#define E M_E\n#define npt nullptr\n#define SON i->to\n#define OPNEW void* operator new(size_t)\n#define ROPNEW(arr) void* Edge::operator new(size_t){static Edge* P = arr; return P++;}\n\nusing namespace std;\nusing namespace __gnu_pbds;\n\nmt19937 rnd(random_device{}());\nint rndd(int l, int r){return rnd() % (r - l + 1) + l;}\nbool rnddd(int x){return rndd(1, 100) <= x;}\n\ntypedef unsigned int uint;\ntypedef unsigned long long unll;\ntypedef long long ll;\ntypedef long double ld;\n\n#define CHK(x, y) (x >= 1 && x <= N && y >= 1 && y <= N && !mp[x][y])\n\ntemplate<typename T = int>\ninline T read(void);\n\nint N;\nint dx[10] = {0,  -1, -1, 1, 1};\nint dy[10] = {0,  -1, 1, -1, 1};\nint vis[1600][1600][5];\nbool mp[1600][1600];\n\nstruct Status{\n    int x, y;\n    int dir;//direction 1, 2, 3, 4\n    int dist;\n}S, T;\nvoid Init(void){\n    char c = getchar();\n    for(int i = 1; i <= N; ++i)for(int j = 1; j <= N; ++j){\n        while(c != '.' && c != '#')c = getchar();\n        mp[i][j] = c == '.' ? false : true;\n        c = getchar();\n    }\n}\nvoid bfs(void){\n    deque < Status > dq;\n    dq.push_back(S);\n    while(!dq.empty()){\n        auto tp = dq.front(); dq.pop_front();\n        if(vis[tp.x][tp.y][tp.dir])continue;\n        vis[tp.x][tp.y][tp.dir] = true;\n        if(tp.x == T.x && tp.y == T.y)\n            printf(\"%d\\n\", tp.dist), exit(0);\n        // printf(\"Current pos (%d, %d): dis = %d, dir = %d\\n\", tp.x, tp.y, tp.dist, tp.dir);\n        for(int i = 1; i <= 4; ++i){\n            int tx = tp.x + dx[i], ty = tp.y + dy[i];\n            if(!CHK(tx, ty))continue;\n            if(i == tp.dir)dq.push_front(Status{tx, ty, i, tp.dist});\n            else dq.push_back(Status{tx, ty, i, tp.dist + 1});\n        }\n    }printf(\"-1\\n\");\n}\n\nint main(){\n    // freopen(\"test_11.txt\", \"r\", stdin);\n    N = read();\n    int x = read(), y = read(); S = Status{x, y, 0, 0};\n    x = read(), y = read(); T = Status{x, y, 0, 0};\n    Init();\n    bfs();\n    fprintf(stderr, \"Time: %.6lf\\n\", (double)clock() / CLOCKS_PER_SEC);\n    return 0;\n}\n\ntemplate<typename T>\ninline T read(void){\n    T ret(0);\n    short flag(1);\n    char c = getchar();\n    while(c != '-' && !isdigit(c))c = getchar();\n    if(c == '-')flag = -1, c = getchar();\n    while(isdigit(c)){\n        ret *= 10;\n        ret += int(c - '0');\n        c = getchar();\n    }\n    ret *= flag;\n    return ret;\n}\n```\n\n## UPD\n\nupdate-2022_10_21 \u521d\u7a3f",
        "postTime": 1666340178,
        "uid": 362938,
        "name": "Tsawke",
        "ccfLevel": 6,
        "title": "ABC246E Bishop 2 \u9898\u89e3"
    }
]