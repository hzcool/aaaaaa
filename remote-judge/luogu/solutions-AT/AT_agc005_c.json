[
    {
        "content": "\u6709\u4e00\u4e2a\u7ed3\u8bba\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u70b9\uff0c\u79bb\u4ed6\u6700\u8fdc\u7684\u70b9\u4e00\u5b9a\u662f\u5b83\u76f4\u5f84\u4e24\u7aef\u70b9\u4e2d\u7684\u4e00\u4e2a\u3002  \n\n\u867d\u7136\u4e0e\u6b64\u9898\u6ca1\u6709\u5565\u5173\u7cfb\uff0c\u4f46\u662f\u6211\u4eec\u5bb9\u6613\u56e0\u6b64\u60f3\u5230\u627e\u76f4\u5f84\u3002  \n\n\u76f4\u5f84\u7684\u4e24\u7aef\u70b9\u4e00\u5b9a\u662f $a$ \u503c\u6700\u5927\u7684\u3002\n- \u5f53\u4ed6\u4eec\u7684 $a$ \u503c\u4e3a\u5076\u6570\u7684\u65f6\u5019\uff0c\u5982 $a=2$\u3002\n![](https://cdn.luogu.com.cn/upload/image_hosting/hduzaxf0.png)\n\n\u4ece\u4e24\u7aef\u5230\u4e2d\u95f4\u5230\u4e24\u7aef\u7684 $a$ \u503c\u4ece $a$ \u4e0b\u964d\u5230 $a/2+1$ \u518d\u4e0a\u5347\u5230 $a$\u3002\n\n- \u5f53\u4ed6\u4eec\u7684 $a$ \u503c\u4e3a\u5947\u6570\u7684\u65f6\u5019\uff0c\u5982 $a=3$\u3002\n![](https://cdn.luogu.com.cn/upload/image_hosting/q1nqvimb.png)\n\n\u4ece\u4e24\u7aef\u5230\u4e2d\u95f4\u5230\u4e24\u7aef\u7684 $a$ \u503c\u4ece $a$ \u4e0b\u964d\u5230 $a/2$ \u518d\u4e0a\u5347\u5230 $a$\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5f00\u4e2a\u6876\uff0c\u7b2c $i$ \u4f4d\u8bb0\u5f55 $a$ \u503c\u4e3a $i$ \u7684\u6709\u51e0\u4e2a\uff0c\u7136\u540e\u51cf\u53bb\u6784\u9020\u76f4\u5f84\u6240\u9700\u7684\u70b9\u3002 \n\n- \u5982\u679c\u53d1\u73b0\u6784\u9020\u4e0d\u51fa\u6765\u76f4\u5f84\u3002\uff08\u51cf\u53bb\u4e4b\u540e\u4e3a\u5269\u4f59\u70b9\u6570\u4e3a\u8d1f\uff09  \n\n- \u5982\u679c\u53d1\u73b0\u6709\u6bd4\u76f4\u5f84\u4e0a\u6700\u5c0f\u503c\u66f4\u5c0f\u7684\u70b9\u3002\uff08\u7531\u6700\u524d\u9762\u7684\u7ed3\u8bba\u77e5\uff0c\u5176\u4ed6\u70b9\u7684 $a$ \u503c\u4e0d\u53ef\u80fd\u5c0f\u4e8e\u76f4\u5f84\u4e0a\u7684\u6700\u5c0f\u503c\uff09\n\n\u5c31\u65e0\u6cd5\u6784\u9020\u51fa\u8fd9\u68f5\u6811\u3002\n\ncode:\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define pb push_back\n#define FOR(i,a,b) for(int i=(a); i<=(b); ++i)\n#define ROF(i,a,b) for(int i=(a); i>=(b); --i)\nusing namespace std;\nconst ll N=100;\nll a[N+10],vis[N+10];\nll mmax=0,n;\n//\nbool sol(){\n\tll mid=mmax/2+1;\n\tFOR(i,mid,mmax){\n\t\tvis[i]-=2;\n\t\tif(vis[i]<0) return 0;\n\t}\n\tif(!(mmax&1)){\n\t\t--vis[mid-1];\n\t\tif(vis[mid-1]<0) return 0;\n\t\t--mid;\n\t}\n\tFOR(i,1,mid){\n\t\tif(vis[i]) return 0;\n\t}\n\treturn 1;\n}\nint main() {\n\tn=gt(),mmax=0;\n\tFOR(i,1,n){\n\t\ta[i]=gt();\n\t\t++vis[a[i]];\n\t\tmmax=max(mmax,a[i]);\n\t} \n\tsol()?printf(\"Possible\\n\"):printf(\"Impossible\\n\");\n}\n\n\n```",
        "postTime": 1645252362,
        "uid": 208967,
        "name": "Hasinon",
        "ccfLevel": 9,
        "title": "AT2061 [AGC005C] Tree Restoring \u840c\u65b0\u9898\u89e38th"
    },
    {
        "content": "\n\u5f88\u5bb9\u6613\u53d1\u73b0\uff0c\u53ef\u4ee5\u628a\u56fe\u62c6\u6210\u4e00\u6761\u6761\u94fe\u3002\u90a3\u4e48\u6240\u7ed9\u7684$a_i$\u4e2d\u6700\u5927\u7684\u5373\u4e3a\u56fe\u4e2d\u6700\u957f\u7684\u94fe\u7684\u957f\u5ea6\u3002\n\n\n\u9996\u5148\u9700\u8981\u5224\u65ad\u5b83\u80fd\u5426\u6784\u6210\u4e00\u6761\u94fe\u3002\u5982\u679c\u4e00\u6761\u94fe\u90fd\u4e0d\u6ee1\u8db3\uff0c\u90a3\u4e48\u80af\u5b9a\u4e0d\u6210\u3002\n\n\u800c\u4e00\u6761\u94fe\u600e\u4e48\u5224\u5462\uff1f\n\n\u5f15\u5165\u4e00\u4e2a\u53eb\u4e2d\u95f4\u70b9\u7684\u4e1c\u897f\uff0c\u5373\u4e3a$a_i$\u6700\u5c0f\u7684\u70b9\uff0c\u53ef\u4ee5\u53d1\u73b0\u5b83\u5728\u94fe\u7684\u4e2d\u95f4\uff0c\u4e8e\u662f\u5f62\u8c61\u7684\u79f0\u5176\u4e3a\u4e2d\u95f4\u70b9\uff0c\n\n\u5982\u679c$a_i$\u4e2d\u7684\u6700\u5c0f\u503c\u65e0\u6cd5\u8fbe\u5230$\\lfloor \\frac{x+1}{2} \\rfloor$\uff0c\u90a3\u4e48\u5c31\u8bf4\u660e\u65e0\u6cd5\u5b8c\u6210\u6784\u56fe\uff0c\u56e0\u4e3a\u4e00\u6761\u94fe\u4e2d\u7684\u6700\u5c0f\u957f\u5ea6\u7684\u70b9\u5373\u4e3a\u4e2d\u95f4\u70b9\uff0c\u4e2d\u95f4\u70b9\u5230\u4e24\u7aef\u7684\u957f\u5ea6\u5c31\u4e3a$\\lfloor \\frac{x+1}{2} \\rfloor$:\n\n```cpp\nif(Min<(Max+1)/2){\n\tprintf(\"Impossible\\n\");\t\t\n\treturn 0;\n}\n```\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5bf9\u6700\u957f\u94fe\u7684\u957f\u5ea6\u8fdb\u884c\u5206\u7c7b\u8ba8\u8bba\u3002\n\n\n\u5982\u679c\u957f\u5ea6\u662f\u5947\u6570\uff0c\u90a3\u4e48\u4e2d\u95f4\u70b9\u5c31\u5e94\u8be5\u5408\u6210\u4e00\u4e2a\uff1b\u5982\u679c\u957f\u5ea6\u4e3a\u5076\u6570\uff0c\u90a3\u4e48\u4e2d\u95f4\u70b9\u5c31\u5e94\u8be5\u6709\u4e24\u4e2a\u3002\u5982\u679c\u4e0d\u6ee1\u8db3\uff0c\u5219\u76f4\u63a5\u7ed3\u675f\n\n```cpp\nif(Max&1){\t\t\t\t\t\t//\u6709\u5947\u6570\u4e2a\u70b9 \n\tif(f[Min]!=2){\t\n\t\tprintf(\"Impossible\\n\");\t\n\t\treturn 0;\n\t}\n}\nelse {\t\t\t\t\t\t\t//\u6709\u5076\u6570\u4e2a\u70b9 \n\tif(f[Min]!=1){\t\t\n\t\tprintf(\"Impossible\\n\");\n\t\treturn 0;\n\t}\n}\n\n```\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c~~\u94fe\u662f\u8f74\u5bf9\u79f0\u56fe\u5f62~~\uff0c\u94fe\u4ece\u4e2d\u95f4\u70b9\u5411\u5de6\u53f3\u4e24\u8fb9\uff0c\u957f\u5ea6\u5e94\u8be5\u662f\u5bf9\u79f0\u7684\uff0c\u6240\u4ee5\u4ece\u4e2d\u95f4\u70b9\u7684\u65c1\u8fb9\u7684\u70b9\u5f00\u59cb\u7b97\u8d77,\u4e00\u5b9a\u6709\u53e6\u4e00\u4e2a\u70b9\u7684$a_i$\u503c\u548c\u5176\u76f8\u7b49\uff0c\u6240\u4ee5\u9664\u4e2d\u95f4\u70b9\u5916\u6bcf\u4e2a\u70b9\u90fd\u81f3\u5c11\u6709\u4e24\u4e2a\uff0c\u5c0f\u4e8e\u4e24\u4e2a\uff0c\u5c31\u4e0d\u6210\u7acb\u3002\n\n```cpp\nvoid Cheak(int Max){\n\tfor(int i=(Max+1)/2+1;i<=Max;i++){\t//\u4ece\u4e2d\u95f4\u70b9\u7684\u65c1\u8fb9\u7684\u4e24\u4e2a\u70b9\u5f00\u59cb\u7b97\u8d77 \n\t\tif(f[i]<2){\t\t//\u5bf9\u79f0\uff0c\u7b54\u6848\u5e94\u8be5\u8d85\u8fc7\u4e24\u4e2a \n\t\t\tprintf(\"Impossible\\n\");\n\t\t\treturn ;\n\t\t}\n\t}\n\tprintf(\"Possible\\n\");\n}\n\n```\n\n\u7136\u540e\u5c31\u5b8c\u4e86qwq\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint f[105];\nint a[105];\nint Max=0,Min=105;\nint n;\n\nvoid Cheak(int Max){\n\tfor(int i=(Max+1)/2+1;i<=Max;i++){\t//\u4ece\u4e2d\u95f4\u70b9\u7684\u65c1\u8fb9\u7684\u4e24\u4e2a\u70b9\u5f00\u59cb\u7b97\u8d77 \n\t\tif(f[i]<2){\t\t//\u5bf9\u79f0\uff0c\u7b54\u6848\u5e94\u8be5\u8d85\u8fc7\u4e24\u4e2a \n\t\t\tprintf(\"Impossible\\n\");\n\t\t\treturn ;\n\t\t}\n\t}\n\tprintf(\"Possible\\n\");\n}\n\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t\tf[a[i]]++;\n\t\tMax=max(Max,a[i]);\n\t\tMin=min(Min,a[i]);\n\t}\n\tif(Min<(Max+1)/2){\n\t\tprintf(\"Impossible\\n\");\t\t//\u5982\u679c\u8fde\u4e00\u6761\u94fe\u90fd\u4e0d\u53ef\u4ee5\u8fbe\u5230 \n\t\treturn 0;\n\t}\n\tif(Max&1){\t\t\t\t\t\t//\u6709\u5947\u6570\u4e2a\u70b9 \n\t\tif(f[(Max+1)/2]!=2){\t\t//\u4e24\u4e2a\u4e2d\u95f4\u70b9\u5408\u6210\u4e00\u4e2a\uff0c\u90a3\u4e48Max\u5e94\u8be5\u4e3a\u5076\u6570 \n\t\t\tprintf(\"Impossible\\n\");\t\n\t\t\treturn 0;\n\t\t}\n\t\tCheak(Max);\n\t}\n\telse {\t\t\t\t\t\t\t//\u6709\u5076\u6570\u4e2a\u70b9 \n\t\tif(f[Max/2]!=1){\t\t\t// \u4e2d\u95f4\u70b9\u6ca1\u6709\u5408\u4e3a\u4e00\u4e2a\uff0cMax\u4e3a\u5947\u6570 \n\t\t\tprintf(\"Impossible\\n\");\n\t\t\treturn 0;\n\t\t}\n\t\tCheak(Max);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1618575839,
        "uid": 225883,
        "name": "MiRaciss",
        "ccfLevel": 7,
        "title": "AGC005C \u9898\u89e3"
    },
    {
        "content": "## AGC005C\n\n\u9996\u5148\u6211\u4eec\u53d1\u73b0\uff0c\u6700\u8fdc\u7684\u4e00\u5bf9\u70b9\u7684\u94fe\u62c9\u51fa\u6765\u4e00\u5b9a\u662f\u4e00\u6761\u76f4\u5f84\u3002\n\n\u7136\u540e\u5728\u4e00\u6761\u70b9\u6570\u4e3a $L$ \u7684\u76f4\u5f84\u4e0a\uff0c\u80fd\u901a\u8fc7\u6302\u5728\u76f4\u5f84\u4e0a\u7684\u67d0\u4e2a\u70b9\u4e0a\u5f97\u5230\u7684\u8ddd\u79bb\u4e00\u5b9a\u662f\u5728 $[\\left \\lfloor \\frac{L}{2} \\right \\rfloor +1,L-1]$ \u8fd9\u4e2a\u533a\u95f4\u5185\u3002\u800c\u4e14\u6709\u4e14\u4ec5\u6709 $L \\bmod 2 +1$ \u4e2a\u70b9\u7684\u6700\u8fdc\u8ddd\u79bb\u662f $\\left \\lfloor \\frac{L}{2}\\right \\rfloor$\uff0c\u6700\u8fdc\u8ddd\u79bb\u5728 $[\\left \\lfloor \\frac{L}{2} \\right \\rfloor +1,L-1]$ \u5185\u7684\u70b9\u6570\u81f3\u5c11\u4e3a $2$\u3002\n\n\u4e0a\u9762\u8fd9\u4e9b\u6761\u4ef6\u90fd\u4e0d\u96be\u5f97\u5230\u3002\u5728\u7eb8\u4e0a\u753b\u4e00\u6761\u94fe\uff0c\u53d1\u73b0\u6bcf\u4e00\u6761\u94fe\u4e00\u5b9a\u90fd\u9700\u8981\u6ee1\u8db3\u540e\u4e24\u4e2a\u6027\u8d28\uff1b\u7136\u540e\u5728\u6bcf\u4e2a\u70b9\u4e0a\uff08\u9664\u4e86\u94fe\u7684\u7aef\u70b9\uff09\u6302\u4e0a\u4e00\u4e2a\u70b9\uff0c\u5c31\u80fd\u53d1\u73b0\u8fd9\u4e9b\u6302\u4e0a\u53bb\u7684\u70b9\u7684\u6700\u8fdc\u8ddd\u79bb\u4e00\u5b9a\u90fd\u6ee1\u8db3\u7b2c\u4e00\u4e2a\u6761\u4ef6\u3002\u7136\u540e\u7528\u8fd9\u4e9b\u6761\u4ef6\u968f\u4fbf\u5224\u65ad\u4e00\u4e0b\u5c31\u884c\u4e86\u3002\n\n${\\rm Code}$\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int __SIZE = 1 << 18;\nchar ibuf[__SIZE], *iS, *iT;\n\n#define ge (iS == iT ? (iT = (iS = ibuf) + fread(ibuf, 1, __SIZE, stdin), (iS == iT ? EOF : *iS++)) : *iS++)\n#define ri read_int()\n#define rl read_ll()\n#define FILE(s) freopen(s\"in\", \"r\", stdin), freopen(s\"out\", \"w\", stdout)\n#define ERROR return puts(\"Impossible\"), 0\n\ntemplate<typename T>\ninline void read(T &x) {\n\tchar ch, t = 0; x = 0;\n\twhile(!isdigit(ch = ge)) t |= ch == '-';\n\twhile(isdigit(ch)) x = x * 10 + (ch ^ 48), ch = ge;\n\tx = t ? -x : x;\n}\ninline int read_int() { int x; return read(x), x; }\ninline ll read_ll() { ll x; return read(x), x; }\n\ntemplate<typename T>\ninline void chkmax(T&a, T b) { a = a > b ? a : b; }\n\nint c[110];\nint mx;\n\nint main() {\n#ifdef LOCAL\n\tFILE(\"\");\n#endif\n\n\tint n = ri;\n\tfor(int i = 1; i <= n; i++) {\n\t\tint x = ri;\n\t\t++c[x];\n\t\tchkmax(mx, x);\n\t}\n\n\tint mi = (mx + 1) >> 1;\n\tfor(int i = mx; i > mi; --i) {\n\t\tif(c[i] < 2) ERROR;\n\t\tn -= c[i];\n\t}\n\tif(c[mi] != 1 + (mx & 1) || n != c[mi]) ERROR;\n\tputs(\"Possible\");\n\treturn 0;\n}\n```",
        "postTime": 1576716506,
        "uid": 20782,
        "name": "CYJian",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 AT2061 \u3010Tree Restoring\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217\uff0c\u95ee\u662f\u5426\u5b58\u5728\u4e00\u68f5\u6811\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9 $i(1\u2264i\u2264N)$\uff0c\u5728\u6811\u4e2d\u79bb\u5b83\u8ddd\u79bb\u6700\u8fdc\u7684\u70b9\u4e0e\u5b83\u7684\u8ddd\u79bb\u6070\u597d\u7b49\u4e8e $a_i$\u3002\n\n## \u601d\u8def\n\u5173\u4e8e\u6811\u7684\u95ee\u9898\uff0c\u5e94\u8be5\u8981\u60f3\u5230\u6811\u7684\u76f4\u5f84\u3002\n\n\u6211\u4eec\u4e00\u6b65\u4e00\u6b65\u8003\u8651\u4e0d\u5408\u6cd5\u7684\u60c5\u51b5\u3002\n\n+ \u5bf9\u4e8e $i$\uff0c\u5f53 $a_i$ \u6700\u5927\u65f6 $i$ \u80af\u5b9a\u662f\u76f4\u5f84\u7684\u4e00\u4e2a\u7aef\u70b9\uff0c\u6240\u4ee5\u5f53\u8fd9\u6837\u7684 $i$ \u53ea\u6709\u4e00\u4e2a\u65f6\u80af\u5b9a\u4e0d\u5408\u6cd5\u3002\n\n+ \u4ece\u76f4\u5f84\u7684\u4e24\u7aef\u5411\u5185\u8003\u8651\uff0c\u6700\u91cc\u9762\u70b9\u7684 $a_i$ \u80af\u5b9a\u9700\u8981\u6ee1\u8db3 $a_i\u2265\\lfloor \\frac{\\max a+1}{2}\\rfloor$\uff0c\u6240\u4ee5 $\\min a\u2265\\lfloor \\frac{\\max a+1}{2}\\rfloor$\u3002\n\n+ \u53d1\u73b0\u5f53 $\\max a$ \u4e3a\u5947\u6570\u65f6\uff0c\u76f4\u5f84\u6700\u91cc\u9762\u7684\u70b9\u53ea\u6709\u4e00\u4e2a\uff1b $\\max a$ \u4e3a\u5076\u6570\u65f6\uff0c\u76f4\u5f84\u6700\u91cc\u9762\u7684\u70b9\u53ea\u6709\u4e24\u4e2a\u3002\u9664\u4e86\u6700\u91cc\u9762\u7684\u70b9\u5176\u4ed6\u957f\u5ea6\u7684 $a_i$ \u9700\u8981\u6ee1\u8db3\u81f3\u5c11\u6709\u4e24\u4e2a\u3002\n\n+ \u7528\u6876\u8bb0\u5f55\u6bcf\u4e2a\u957f\u5ea6\u7684\u70b9\u7684\u6570\u91cf\uff0c\u68c0\u9a8c\u4e0a\u4e00\u70b9\u7684\u6761\u4ef6\u662f\u5426\u6ee1\u8db3\u5373\u53ef\u3002\n\n## code\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint t,n,ma,d;\nint a[101],b[101];\nbool bo;\nint main()\n{\n\tscanf(\"%d\",&n);\n\tmemset(b,0,sizeof(b));\n\tma=-1,bo=1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tb[a[i]]++;\n\t\tif(a[i]>ma) ma=a[i];\n\t}\n\td=ma+1>>1;\n\tfor(int i=1;i<d;i++) \n\t\tif(b[i]) {bo=0;break;}\n\tif(!bo) {puts(\"NO\");continue;}\n\tif((ma&1)&&b[d]!=2) {puts(\"NO\");continue;}\n\tif(!(ma&1)&&b[d]!=1) {puts(\"NO\");continue;}\n\tfor(int i=d+1;i<=ma;i++) \n\t\tif(b[i]<2) {bo=0;break;}\n\tif(!bo) {puts(\"NO\");continue;}\n\tputs(\"Yes\");\n\treturn 0;\n}\n\n```\n",
        "postTime": 1666264491,
        "uid": 399674,
        "name": "Naro_Ahgnay",
        "ccfLevel": 0,
        "title": "AT_agc005_c [AGC005C] Tree Restoring \u9898\u89e3"
    },
    {
        "content": "\u6ca1\u4ec0\u4e48\u4eba\u6765\u5199\u9898\u89e3\u5417\u3002\u3002\n\u6811\u4e0a\u4e00\u4e2a\u70b9\u7684\u6700\u8fdc\u70b9\uff0c\u4e00\u5b9a\u662f\u76f4\u5f84\u7684\u4e24\u4e2a\u7aef\u70b9\u4e4b\u4e00\u3002\u6240\u4ee5\u9996\u5148\u6211\u4eec\u627e\u51fa\u76f4\u5f84\u7684\u957f\u5ea6$L$\u3002\n\u7136\u540e\u5206\u4e3a\u4e24\u7c7b\uff1a\n - $L$\u662f\u5076\u6570\uff0c\u90a3\u4e48$a_i=\\frac{L}{2}$\u7684\u70b9\u53ea\u80fd\u6709\u4e00\u4e2a\uff0c$\\frac{L}{2} <  a_i \\leq L$\u7684\u70b9\u81f3\u5c11\u8981\u6709\u4e24\u4e2a\uff0c\u5982\u679c\u6709\u66f4\u591a\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7\u8fde\u63a5\u76f4\u5f84\u4e0a$a_j=a_i-1$\u7684\u70b9$j$\u6765\u8fbe\u6210\u76ee\u6807\u3002\u800c$a_i< \\frac{L}{2}$\u7684\u70b9\u4e0d\u80fd\u5b58\u5728\u3002\n - $L$\u662f\u5947\u6570\uff0c\u90a3\u4e48$a_i=\\lceil \\frac{L}{2} \\rceil$\u7684\u70b9\u53ea\u80fd\u6709\u4e24\u4e2a\uff0c$\\lceil \\frac{L}{2} \\rceil <a_i \\leq L$\u81f3\u5c11\u6709\u4e24\u4e2a\uff0c$a_i < \\lceil \\frac{L}{2} \\rceil$\u4e0d\u80fd\u5b58\u5728\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 1e2 + 10;\nint a[MAXN], b[MAXN];\nint n, mx = 0;\ntemplate <class T>\ninline void _read(T &x)\n{\n\tx = 0;\n\tchar t = getchar();\n\twhile (!isdigit(t) && t != '-') t = getchar(); \n\tif (t == '-')\n\t{\n\t\t_read(x);\n\t\tx *= -1;\n\t\treturn ;\n\t}\n\twhile (isdigit(t))\n\t{\n\t\tx = x * 10 + t - '0';\n\t\tt = getchar();\n\t}\n}\nint main()\n{\n\t_read(n);\n\tfor (int i = 1; i <= n; ++i) _read(a[i]), mx = max(mx, a[i]), ++b[a[i]];\n\tif(mx & 1)\n\t{\n\t\tfor(int i = mx; i >= (mx + 1) / 2; --i)\n\t\t\tif(b[i] < 2)\n\t\t\t{\n\t\t\t\tputs(\"Impossible\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\tfor(int i = 1; i < (mx + 1) / 2; ++i)\n\t\t\tif(b[i])\n\t\t\t{\n\t\t\t\tputs(\"Impossible\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\tif(b[(mx + 1) / 2] > 2)\n\t\t{\n\t\t\tputs(\"Impossible\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\telse\n\t{\n\t\tfor(int i = mx; i > mx / 2; --i)\n\t\t\tif(b[i] < 2)\n\t\t\t{\n\t\t\t\tputs(\"Impossible\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\tfor(int i = 1; i < mx / 2; ++i)\n\t\t\tif(b[i])\n\t\t\t{\n\t\t\t\tputs(\"Impossible\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\tif(b[mx / 2] != 1)\n\t\t{\n\t\t\tputs(\"Impossible\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tputs(\"Possible\");\n\treturn 0;\n}\n\n```",
        "postTime": 1555598016,
        "uid": 13290,
        "name": "sky_of_war",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT2061 \u3010Tree Restoring\u3011"
    },
    {
        "content": "### P.S.\n\u9633\u95f4\u9898\uff0c\u53ef\u60dc\u6211\u662f\u5927\u50bb\u903c\u3002    \n\n### Solution.\n\u9996\u5148\uff0c\u6811\u6709\u4e00\u6761\u76f4\u5f84\uff0c\u76f4\u5f84\u4e0a\u7684\u7aef\u70b9\u6743\u503c\u5fc5\u5b9a\u6700\u5927\uff0c\u6240\u4ee5\u6211\u4eec\u627e\u51fa\u6700\u5927\u503c\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u627e\u5230\u6811\u7684\u76f4\u5f84\u4e86\u3002  \n\u7136\u540e\uff0c\u5b83\u5fc5\u5b9a\u6709\u4e00\u4e9b\u8282\u70b9\uff0c\u5b83\u7684\u6743\u503c\u5206\u522b\u662f $\\{k,k-1,...k-1,k\\}$\u3002  \n\u6211\u4eec\u628a\u8fd9\u4e9b\u70b9\u53bb\u6389\uff0c\u5269\u4e0b\u7684\u70b9\u5c31\u76f8\u5f53\u4e8e\u5728\u8fd9\u6761\u94fe\u4e0a\u6302\u8282\u70b9\u3002  \n\u7136\u540e\u5fc5\u5b9a\u6ee1\u8db3\u5269\u4e0b\u7684\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\u7684\u6743\u503c\u90fd\u5927\u4e8e\u7b49\u4e8e\u4e2d\u95f4\u8282\u70b9\u7684\u6743\u503c\u3002  \n\u800c\u4e14\u5982\u679c\u5927\u4e8e\u7b49\u4e8e\u4e2d\u95f4\u8282\u70b9\u6743\u503c\uff0c\u4e14\u56e0\u4e3a\u627e\u5230\u6700\u5927\u503c\u4e86\uff0c\u6240\u4ee5\u5b83\u5fc5\u5b9a\u5c0f\u4e8e\u7b49\u4e8e\u6700\u5927\u503c\u3002  \n\u6240\u4ee5\u5fc5\u7136\u5b58\u5728\u4e00\u4e2a\u8282\u70b9\uff0c\u5b83\u7684\u6743\u503c\u662f\u6240\u9700\u8981\u6743\u503c\u51cf\u4e00\uff0c\u65b0\u52a0\u5165\u8282\u70b9\u6302\u5b83\u4e0b\u9762\u5373\u53ef\u3002  \n\u7136\u540e\u5c31\u505a\u5b8c\u4e86\uff0c\u4ec0\u4e48\u4e2d\u70b9\u7684\u5566\u6743\u503c\u7684\u5566\u624b\u6478\u624b\u6478\u5c31\u597d\u4e86\u5566\u3002  \n\n### Coding.\n```cpp\n//\u662f\u554a\uff0c\u4f60\u5c31\u662f\u90a3\u53ea\u9b3c\u4e86\uff0c\u6240\u4ee5\u88ab\u4f60\u78b0\u5230\u4ee5\u540e\uff0c\u5c31\u8f6e\u5230\u6211\u53d8\u6210\u9b3c\u4e86{{{\n#include<bits/stdc++.h>\nusing namespace std;typedef long long ll;\ntemplate<typename T>inline void read(T &x)\n{\n\tx=0;char c=getchar(),f=0;\n\tfor(;c<48||c>57;c=getchar()) if(!(c^45)) f=1;\n\tfor(;c>=48&&c<=57;c=getchar()) x=(x<<1)+(x<<3)+(c^48);\n\tf?x=-x:x;\n}/*}}}*/\nint n,a[1005],tn[1005];\nsigned main()\n{\n\tread(n);for(int i=1;i<=n;i++) read(a[i]),tn[a[i]]++;\n\tint mx=0;for(int i=1;i<=n;i++) mx=max(mx,a[i]);\n\tif(!(mx&1)) tn[mx>>1]--;\n\tfor(int i=(mx>>1)+1;i<=mx;i++) tn[i]--,tn[i]--;\n\tfor(int i=1;i<=mx;i++) if(tn[i]<0) return puts(\"Impossible\"),0;\n\tint mn=1e9;for(int i=1;i<=n;i++) if(tn[i]) {mn=i;break;}\n\tif(mn<=((mx+1)>>1)) return puts(\"Impossible\"),0;else return puts(\"Possible\"),0;\n}\n```",
        "postTime": 1626700538,
        "uid": 44805,
        "name": "Leap_Frog",
        "ccfLevel": 7,
        "title": "AT2061 [AGC005C] Tree Restoring\uff08\u9898\u89e3\uff09"
    },
    {
        "content": "\u5148\u5206\u6790\u6761\u4ef6\uff0c\u672c\u9898\u7ed9\u51fa\u4e86\u5bf9\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5728\u6811\u4e2d\u79bb\u5b83\u8ddd\u79bb\u6700\u8fdc\u7684\u70b9\u4e0e\u5b83\u7684\u8ddd\u79bb $a_i$\u3002  \n\n\u53ef\u4ee5\u60f3\u5230\u6811\u7684\u76f4\u5f84\u7684\u6027\u8d28\uff1a  \n- \u8ddd\u79bb\u4efb\u610f\u70b9\u6700\u8fdc\u7684\u70b9\u4e00\u5b9a\u662f\u76f4\u5f84\u7684\u4e00\u4e2a\u7aef\u70b9\u3002  \n\n\u901a\u8fc7\u9898\u76ee\u6761\u4ef6\u5f97\u77e5\u4e86\u76f4\u5f84\u7684\u957f\u5ea6\uff08$len=\\max{a_i}+1$\uff09\u8003\u8651\u5148\u5c06\u4e00\u6761\u76f4\u5f84\u6784\u9020\u51fa\u6765\uff0c\u6811\u81f3\u5c11\u5b58\u5728\u4e00\u6761\u76f4\u5f84\u3002\u5982\u679c\u4e0d\u80fd\u591f\u9009\u51fa\u70b9\u6784\u9020\u51fa\u76f4\u5f84\uff0c\u5219\u4e3a `Impossible`\u3002  \n\n\u5220\u53bb\u6784\u9020\u76f4\u5f84\u7528\u5230\u7684\u70b9\u540e\uff0c\u5269\u4e0b\u7684\u70b9\u7684\u5fc5\u6709 $a_i\\leq len-1$\uff0c\u6211\u4eec\u89c2\u5bdf\u80fd\u5426\u4f7f\u8fd9\u4e9b\u70b9\u7684\u8981\u6c42\u6ee1\u8db3\uff0c\u8fd9\u91cc\u6839\u636e\u6811\u76f4\u5f84\u7684\u4e0a\u8ff0\u7684\u6027\u8d28\uff0c\u628a\u8be5\u70b9\u4e0e\u76f4\u5f84\u4e0a\u67d0\u4e00\u70b9\u76f8\u8fde\uff0c\u8fbe\u5230\u7684\u6700\u5927\u8ddd\u79bb\u4e3a $len-1$\uff0c\u6700\u5c0f\u8ddd\u79bb\u4e3a\u4e0e\u76f4\u5f84\u4e2d\u70b9\u76f8\u8fde\u7684 $\\lfloor\\frac{len}{2}\\rfloor+1$\u3002  \n\n\u663e\u7136\u76f4\u63a5\u628a\u70b9\u4e0e\u76f4\u5f84\u4e0a\u7684\u70b9\u76f4\u63a5\u76f8\u8fde\u53ef\u4ee5\u53d6\u5230\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u4e4b\u95f4\u7684\u4efb\u4f55\u4e00\u4e2a\u503c\uff0c\u6240\u4ee5\u6ca1\u5fc5\u8981\u628a\u70b9\u6302\u5728\u522b\u7684\u70b9\u4e0a\uff0c\u628a\u6240\u6709\u70b9\u90fd\u6302\u5728\u76f4\u5f84\u4e0a\u5c31\u53ef\u4ee5\u4e86\u3002  \n\n\u5982\u679c\u6709 $a_i$ \u6bd4\u6700\u5c0f\u503c\u5c0f\u7684\u70b9\u5c31\u4e0d\u5408\u6cd5\u3002\n\n\u7ed9\u5f20\u56fe\uff0c\u7ed3\u5408\u7406\u89e3\uff0c\u9ed1\u94fe\u662f\u76f4\u5f84\uff0c\u6570\u5b57\u4ee3\u8868\u8ddd\u79bb\uff0c~~\u753b\u7684\u6709\u70b9\u4e11\u5427~~\u3002  \n![](https://cdn.luogu.com.cn/upload/image_hosting/7azt7pps.png)  \n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <vector>\nusing namespace std;\ntypedef long long LL;\nconst LL INF = 0x3f3f3f3f3f3f3f3f;\n\nLL n,a;\nLL mx = 0,cnt[100005];\n\nint main(){\n\tios::sync_with_stdio(false);\n\tcin >> n;\n\tfor(LL i = 1;i <= n;i ++){\n\t\tcin >> a; mx = max(mx,a);\n\t\tcnt[a] ++;\n\t}\n\tfor(LL i = 0;i <= mx;i ++) cnt[max(i,mx - i)] --;\n\tfor(LL i = 1;i <= n;i ++) if(cnt[i] < 0){ cout << \"Impossible\" << endl; return 0; }\n    // \u7ec4\u4e0d\u6210\u8fd9\u6761\u76f4\u5f84\uff0c\u8fd9\u91cc\u76f4\u63a5\u51cf\uff0c\u51cf\u6210\u8d1f\u6570\u4ee3\u8868\u4e0d\u591f\u7528\u4e86\n\t\n\tfor(LL i = 0;i <= ((mx + 1) >> 1);i ++) if(cnt[i] > 0){ cout << \"Impossible\" << endl; return 0; }\n    // \u8ddd\u79bb\u592a\u5c0f\u65e0\u6cd5\u6ee1\u8db3\n\n\tcout << \"Possible\" << endl;\n\treturn 0;\n}\n```\n\n\u539f\u8bc4\u5206 $\\sf{\\color{blue}1954}$  \n\u8fd8\u662f\u611f\u89c9\u6ca1\u90a3\u4e48\u96be  \n\u8003\u5bdf\u77e5\u8bc6\uff1a\u6811\u7684\u76f4\u5f84\u53ca\u5176\u6027\u8d28  \n\u5b9e\u73b0\u96be\u5ea6/\u4ee3\u7801\u96be\u5ea6\uff1a\u51e0\u4e4e\u6ca1\u6709  \n\u601d\u7ef4\u96be\u5ea6\uff1a\u8fd8\u884c\u5427\uff0c\u4e3b\u8981\u662f\u6811\u7684\u76f4\u5f84\u7684\u76f8\u5173\u6280\u5de7",
        "postTime": 1582713472,
        "uid": 31440,
        "name": "installb",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 AT2061 \u3010[AGC005C] Tree Restoring\u3011"
    }
]