[
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/AT_abc256_e)\n\n## \u9898\u610f\n\n\u6709 $n$ \u4e2a\u4eba\uff0c\u6bcf\u4e2a\u4eba\u90fd\u6709\u4e00\u4e2a\u770b\u4e0d\u60ef\u7684\u4eba\uff0c\u7b2c $i$ \u4e2a\u4eba\u770b\u4e0d\u60ef $x_i$\uff0c\u5982\u679c $x_i$ \u7ad9\u5728 $i$ \u7684\u524d\u9762\uff0c\u5219\u4f1a\u4ea7\u751f $c_i$ \u7684\u4e0d\u6109\u60a6\u503c\u3002\n\n\u6c42\u4e00\u4e2a\u6392\u5217\u987a\u5e8f\uff0c\u4f7f\u5f97\u4ea7\u751f\u7684\u4e0d\u6109\u60a6\u503c\u6700\u5c0f\uff0c\u6c42\u6700\u5c0f\u503c\u3002\n\n## \u601d\u8def\n\n> \u505a\u9898\u4e4b\u524d\u5148\u63a8\u6837\u4f8b\u3002\u2014\u2014\u9c81\u8fc5\n\n\u5176\u5b9e\u5e26\u70b9\u6a21\u677f\u7684\u610f\u5473\uff0c\u6bcf\u6b21\u5efa\u7acb\u4e00\u6761\u4ece $x_i$ \u5230 $i$ \u7684\u8fb9\uff0c\u8fb9\u6743\u4e3a $c_i$\uff0c\u90a3\u4e48\u6837\u4f8b\u5c31\u662f\u8fd9\u6837\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/lysvwifo.png)\n\n\u80fd\u591f\u53d1\u73b0\uff0c\u6837\u4f8b\u7684\u7b54\u6848\u6765\u6e90\u4e8e\u90a3\u6761\u7528\u7ea2\u7b14\u5708\u51fa\u6765\u7684\u8fb9\uff0c\u601d\u8def\u4e5f\u5f88\u660e\u663e\u4e86\uff0c\u5bf9\u4e8e\u4e0d\u6784\u6210\u73af\u7684\u4e00\u4e9b\u8fb9\u6765\u8bf4\uff0c\u5fc5\u7136\u5b58\u5728\u4e00\u79cd\u6392\u5217\u65b9\u6cd5\u4f7f\u5f97\u8fd9\u4e9b\u4eba\u4e0d\u4f1a\u4e0d\u6109\u60a6\uff1b\u800c\u5bf9\u4e8e\u4e00\u4e2a\u73af\u5462\uff1f\u5b83\u5fc5\u7136\u4f1a\u4f7f\u5f97\u67d0\u4e2a\u4eba\u4e0d\u6109\u60a6\uff0c\u53ea\u8981\u628a\u90a3\u4e2a\u8fb9\u6743\u6700\u5c0f\u7684\u52a0\u5230\u7b54\u6848\u5373\u53ef\u3002\n\n## Code\n\n```cpp\n#include <iostream>\n#include <vector>\n\nusing namespace std;\nusing pr = pair<int, int>;\nusing ll = long long;\n\nconst int N = 2e5 + 10;\n\nint n, a[N], c, f[N], stk[N], top; // stack \u7ef4\u62a4\u73af\u4e0a\u8fb9\u7684\u6743\u503c\nvector<pr> v[N];\nll ans;\n\nvoid dfs (int x) {\n  if (f[x]) {\n    if (f[x] == 1) { // \u5224\u65ad\u6784\u6210\u73af\n      int sum = 1e9 + 10;\n      for (int i = 0; i < top; i++) {\n        sum = min(sum, stk[i]); // \u9009\u62e9\u8fb9\u6743\u6700\u5c0f\u503c\uff0c\u52a0\u5165\u7b54\u6848\n      }\n      ans += sum;\n    }\n    return ;\n  }\n  f[x] = 1; // \u6807\u8bb0\u5728\u73af\u4e0a\n  for (pr i : v[x]) {\n    stk[top++] = i.second; // \u5c06\u8fb9\u6743\u538b\u5165\u6808\n    dfs(i.first);\n    top--; // \u5f39\u51fa\u6808\u9876\n  }\n  f[x] = 2; // \u6807\u8bb0\u4e0d\u5728\u73af\u4e0a\u4f46\u8d70\u8fc7\u8fd9\u4e2a\u70b9\n}\n\nint main () {\n  ios::sync_with_stdio(0), cin.tie(0);\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> a[i];\n  }\n  for (int i = 1; i <= n; i++) {\n    cin >> c;\n    v[a[i]].push_back({i, c}); // \u5efa\u56fe\n  }\n  for (int i = 1; i <= n; i++) {\n    dfs(i); // \u5bf9\u6bcf\u4e2a\u70b9\u90fd\u8981\u7ecf\u884c\u904d\u5386\n  }\n  cout << ans;\n  return 0;\n}\n```\n\n",
        "postTime": 1683302704,
        "uid": 724052,
        "name": "luogu_wsy0704",
        "ccfLevel": 5,
        "title": "AT_abc256_e Takahashi's Anguish \u9898\u89e3"
    },
    {
        "content": "# [[ABC256E] Takahashi's Anguish](https://www.luogu.com.cn/problem/AT_abc256_e) Solution\n\n[TOC]\n\n## [\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u6233\u6b64\u8fdb\u5165](http://blog.tsawke.com?t=ABC256E)\n\n## \u9898\u9762\n\n\u5b58\u5728 $ n $ \u4e2a\u4eba\uff0c\u4f60\u9700\u8981\u786e\u5b9a\u4e00\u4e2a\u5e8f\u5217 $ P_n $ \u8868\u793a\u8fd9 $ n $ \u4e2a\u4eba\u7684\u6392\u5217\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u4eba\uff0c\u7b2c $ i $ \u4e2a\u4eba\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a $ x_i $\uff0c\u8868\u793a\u4e0d\u559c\u6b22 $ x_i $ \u7ad9\u5728 $ i $ \u7684\u524d\u9762\uff0c\u82e5 $ x_i $ \u7ad9\u5728 $ i $ \u7684\u524d\u9762\u5219\u4f1a\u4ea7\u751f $ c_i $ \u7684\u4e0d\u6109\u60a6\u503c\uff0c\u4f60\u9700\u8981\u786e\u5b9a\u6392\u5217\u4ee5\u6700\u5c0f\u5316\u4e0d\u6109\u60a6\u503c\u4e4b\u548c\uff0c\u6c42\u6700\u5c0f\u503c\u3002\n\n## Solution\n\n\u8fd9\u9053\u9898\u60f3\u5230\u65b9\u6cd5\u4e4b\u540e\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u662f\u4e00\u9053\u56fe\u8bba\u5efa\u6a21\u9898\u3002\u8003\u8651\u5c06\u4e0d\u559c\u6b22\u7684\u5173\u7cfb\u62bd\u8c61\u6210\u4e00\u6761\u6709\u5411\u8fb9\uff0c\u4e0d\u96be\u53d1\u73b0\u6bcf\u4e2a\u70b9\u90fd\u6709\u4e14\u4ec5\u6709\u4e00\u6761\u51fa\u8fb9\uff0c\u5219\u6700\u540e\u5f62\u6210\u7684\u56fe\u5728\u5f62\u6001\u4e0a\u4e00\u5b9a\u7c7b\u4f3c\u4e00\u4e2a\u57fa\u73af\u6811\u68ee\u6797\uff0c\u6216\u8005\u8bf4\u5728\u5f62\u6210\u7684\u56fe\u4e2d\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\u5185\u6700\u591a\u542b\u6709\u4e00\u4e2a\u73af\u3002\n\n\u4e0d\u96be\u60f3\u5230\u5bf9\u4e8e\u65e0\u73af\u7684\u4e00\u5b9a\u6709\u5408\u6cd5\u65b9\u6848\u4f7f\u5f97\u6bcf\u4e00\u4e2a\u70b9\u90fd\u4e0d\u4f1a\u6709\u4e0d\u559c\u6b22\u7684\u5728\u5176\u4e4b\u524d\uff0c\u5bf9\u4e8e\u73af\u4e0a\u7684\u5219\u4e00\u5b9a\u81f3\u5c11\u9700\u8981\u7834\u574f\u4e00\u6761\u73af\u4e0a\u7684\u8fb9\u3002\u4e8e\u662f\u6211\u4eec\u8dd1\u4e00\u4e2a\u7c7b\u4f3c\u62d3\u6734\u6392\u5e8f\u7684\u4e1c\u897f\u5373\u53ef\uff0c\u5bf9\u4e8e\u65e0\u73af\u7684\u76f4\u63a5\u4e22\u5f03\uff0c\u6709\u73af\u7684\u5728\u73af\u4e0a\u627e\u5230\u8fb9\u6743\u6700\u5c0f\u7684\u4e00\u6761\u8fb9\u4fdd\u7559\u5373\u53ef\u3002\n\n## Code\n\n```cpp\n#define _USE_MATH_DEFINES\n#include <bits/stdc++.h>\n\n#define PI M_PI\n#define E M_E\n#define npt nullptr\n#define SON i->to\n#define OPNEW void* operator new(size_t)\n#define ROPNEW(arr) void* Edge::operator new(size_t){static Edge* P = arr; return P++;}\n\nusing namespace std;\n\nmt19937 rnd(random_device{}());\nint rndd(int l, int r){return rnd() % (r - l + 1) + l;}\nbool rnddd(int x){return rndd(1, 100) <= x;}\n\ntypedef unsigned int uint;\ntypedef unsigned long long unll;\ntypedef long long ll;\ntypedef long double ld;\n\ntemplate < typename T = int >\ninline T read(void);\n\nstruct Edge{\n    Edge *nxt;\n    int to;\n    int val;\n    OPNEW;\n}ed[210000];\nROPNEW(ed);\nEdge* head[210000];\n\nint N;\nbitset < 210000 > vis;\nint ind[210000];\nll ans(0);\n\nint main(){\n    N = read();\n    for(int i = 1; i <= N; ++i){\n        int s = i, t = read();\n        head[s] = new Edge{head[s], t};\n        ++ind[t];\n    }for(int i = 1; i <= N; ++i)head[i]->val = read();\n    queue < int > cur;\n    for(int i = 1; i <= N; ++i)if(!ind[i])vis[i] = true, cur.push(i);\n    while(!cur.empty()){\n        int tp = cur.front(); cur.pop();\n        for(auto i = head[tp]; i; i = i->nxt){\n            --ind[SON];\n            if(!ind[SON])vis[SON] = true, cur.push(SON);\n        }\n    }\n    for(int i = 1; i <= N; ++i){\n        if(!vis[i]){\n            int mn(INT_MAX);\n            vis[i] = true;\n            auto cur = head[i];\n            while(cur->to != i){\n                vis[cur->to] = true;\n                mn = min(mn, cur->val);\n                cur = head[cur->to];\n            }mn = min(mn, cur->val);\n            ans += mn;\n        }\n    }printf(\"%lld\\n\", ans);\n    fprintf(stderr, \"Time: %.6lf\\n\", (double)clock() / CLOCKS_PER_SEC);\n    return 0;\n}\n\ntemplate < typename T >\ninline T read(void){\n    T ret(0);\n    int flag(1);\n    char c = getchar();\n    while(c != '-' && !isdigit(c))c = getchar();\n    if(c == '-')flag = -1, c = getchar();\n    while(isdigit(c)){\n        ret *= 10;\n        ret += int(c - '0');\n        c = getchar();\n    }\n    ret *= flag;\n    return ret;\n}\n```\n\n## UPD\n\nupdate-2022_12_08 \u521d\u7a3f",
        "postTime": 1670476147,
        "uid": 362938,
        "name": "Tsawke",
        "ccfLevel": 6,
        "title": "[ABC256E] Takahashi's Anguish \u9898\u89e3"
    }
]