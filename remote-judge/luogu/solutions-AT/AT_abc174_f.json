[
    {
        "content": "# [ABC174F] Range Set Query \u9898\u89e3\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/AT_abc174_f)\n\n## \u9898\u610f\u7b80\u8ff0\n\n\u6709 $n$ \u4e2a\u6570 $a_1, a_2 \\dots a_n$\u3002\u6709 $m$ \u4e2a\u8be2\u95ee $l,r$\uff0c\u6c42\u4ece $l$ \u5230 $r$ \u6709\u591a\u5c11\u4e2a\u4e0d\u540c\u7684\u5143\u7d20\u3002\n\n### \u6570\u636e\u89c4\u6a21\u4e0e\u7ea6\u5b9a\n\n- $1\\leq\\ n, m\\ \\leq\\ 5\\ \\times\\ 10^5$\uff1b\n- $1\\leq\\ a_i\\ \\leq\\ n$\uff1b\n- $1\\leq\\ l_i\\ \\leq\\ r_i\\ \\leq\\ n$\u3002\n\n## \u524d\u7f6e\u77e5\u8bc6\n\n- \u6811\u72b6\u6570\u7ec4\n\n    - \u6a21\u677f\u9898\u76ee\uff1a[P3374 \u3010\u6a21\u677f\u3011\u6811\u72b6\u6570\u7ec4 1](https://www.luogu.com.cn/problem/P3374)\u3002\n\n    - \u7ec3\u4e60\u9898\uff1a[P1908 \u9006\u5e8f\u5bf9](https://www.luogu.com.cn/problem/P1908)\u3002\n\n## \u89e3\u6cd5\n\n\u4f7f\u7528 ~~dl~~lxl \u5728\u8fdb\u9636\u7b97\u6cd5\u8ba1\u5212\u8bfe\u4ef6\u4e2d\u7684\u505a\u6cd5\u3002\uff08\u6811\u72b6\u6570\u7ec4\u7684\u79bb\u7ebf\u505a\u6cd5\uff09\n\nlxl \u8bf4\uff1a\n\n> \u5bf9\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e $i$\uff0c\u9884\u5904\u7406\u51fa $pre_i$ \u8868\u793a $i$ \u5de6\u8fb9\u79bb $i$ \u6700\u8fd1\u7684\u6ee1\u8db3 $a_i=a_j$ \u7684\u4e0b\u6807 $j$\u3002\n\n```cpp\n    for (int i = 1; i <= n; i++) {\n        pre[i] = lst[a[i]];\n        lst[a[i]] = i;\n    }\n```\n\n---\n\nlxl \u8fd8\u8bf4\uff1a\n\n> \u7136\u540e\u67e5\u8be2\u533a\u95f4\u4e2d\u7684\u4e0d\u540c\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u53ea\u628a\u6bcf\u4e2a\u6570\u5728\u533a\u95f4\u4e2d\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u65f6\u7edf\u8ba1\u8fdb\u53bb\u3002\n\n> \u626b\u4e00\u904d\u6570\u7ec4\uff0c\u626b\u5230\u6bcf\u4e2a\u53f3\u7aef\u70b9\u7684\u65f6\u5019\uff0c\u7ef4\u62a4\u6bcf\u4e2a\u5de6\u7aef\u70b9\u5bf9\u5e94\u7684\u7b54\u6848\u3002\n\n\u5177\u4f53\u505a\u6cd5\uff1a\n\n\u7528\u6570\u7ec4 $tr_x$ \u7ef4\u62a4 **\u5728** $[1, x]$ **\u4e2d\u6bcf\u4e2a\u4f4d\u7f6e\u51fa\u73b0\u7684\u6570\u662f\u5426\u662f\u6700\u540e\u4e00\u6b21\u51fa\u73b0**\uff0c$tr_x$ \u6bcf\u4e2a\u4f4d\u7f6e\u7684\u53d6\u503c\u4e3a $0$ \u6216 $1$\u3002\n\n\u4e3e\u4f8b\uff1a\n\n| $a$    | $\\{1,1,4,5,1,4\\}$ |\n|   :-   |        :-         |\n| $tr_1$ | $\\{1\\}$           |\n| $tr_2$ | $\\{0,1\\}$         |\n| $tr_3$ | $\\{0,1,1\\}$       |\n| $tr_4$ | $\\{0,1,1,1\\}$     |\n| $tr_5$ | $\\{0,0,1,1,1\\}$   |\n| $tr_6$ | $\\{0,0,0,1,1,1\\}$ |\n\n\u90a3\u4e48\u8be2\u95ee\u5c31\u53d8\u4e3a $tr_r$ \u7684 $[l, r]$ \u4e2d $1$ \u7684\u4e2a\u6570\uff0c\u7528\u524d\u7f00\u548c\u53ef\u4ee5\u5feb\u901f\u505a\u3002\u56e0\u4e3a\u9700\u8981\u591a\u6b21\u67e5\u8be2\u4fee\u6539\u7ef4\u62a4\u524d\u7f00\u4fe1\u606f\uff0c\u60f3\u5230\u6811\u72b6\u6570\u7ec4\u3002\n\n\u4f46\u662f\u5176\u5b9e\u4e0d\u9700\u8981\u7ef4\u62a4\u90a3\u4e48\u591a $tr$\u3002\n\n\u904d\u5386 $a$\uff0c\u7ef4\u62a4\u4e00\u4e2a $tr$\uff0c\u628a\u8be2\u95ee\u79bb\u7ebf\u4e0b\u6765\uff0c\u6309 $r$ \u6392\u5e8f\uff0c\u5728\u904d\u5386\u8fc7\u7a0b\u5f53\u4e2d\u6bcf\u5f53\u9047\u5230\u4e00\u4e2a $r$ \u5c31\u76f4\u63a5\u7528\u5f53\u65f6\u7684 $tr$ \u7edf\u8ba1\u7b54\u6848\u3002\n\n```cpp\n    // tr \u4e3a\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\n    int ptr = 1;\n    for (int i = 1; i <= m; i++) {\n        while (ptr <= q[i].r) { // q \u4e3a\u79bb\u7ebf\u4e0b\u6765\u7684\u8be2\u95ee\uff0c\u7528\u7ed3\u6784\u4f53\u5b58\u50a8\n            if (pre[ptr])\n                tr.add(pre[ptr], -1); // \u6e05\u9664\u4e0a\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\n            tr.add(ptr, 1);           // \u53ea\u4fdd\u7559\u6700\u540e\u51fa\u73b0\u7684\u4f4d\u7f6e\n            ptr++;\n        }\n        ans[q[i].id] = tr.query(q[i].r) - tr.query(q[i].l - 1); // \u524d\u7f00\u548c\u6c42\u533a\u95f4\u548c\n    }\n```\n\n---\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\n\n- \u79bb\u7ebf\u8be2\u95ee\u5e76\u6392\u5e8f\uff1a$\\mathcal O(m\\log m)$\u3002\n\n- \u6811\u72b6\u6570\u7ec4\u5904\u7406\u7b54\u6848\uff1a$\\mathcal O((n + m) \\log n)$\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(m\\log m + (n + m) \\log n)$\u3002\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n// \u7701\u7565\u5feb\u8bfb\u5feb\u5199\u7684\u5b9e\u73b0\n\nconst int MAXN = 5e5 + 100;\nconst int MAXM = 5e5 + 100;\nconst int W = 5e5 + 100; // \u503c\u57df\n\nclass Fenwick {\n    private:\n        int c[MAXN];\n        int lowbit(int x) {\n            return x & -x;\n        }\n    public:\n        int n;\n        void build(int s[], int _n) { // s \u4e3a\u524d\u7f00\u548c\u6570\u7ec4\n            n = _n;\n            for (int i = 1; i <= n; i++)\n                c[i] = s[i] - s[i - lowbit(i)];\n        }\n        int query(int x) {\n            int ret = 0;\n            for (int i = x; i; i -= lowbit(i))\n                ret += c[i];\n            return ret;\n        }\n        void add(int x, int k) {\n            for (int i = x; i <= n; i += lowbit(i))\n                c[i] += k;\n        }\n};\n\nint n, a[MAXN], m;\nstruct query {\n    int l, r;\n    int id;\n} q[MAXM];\nbool cmp(query q1, query q2) { // \u6309 r \u6392\u5e8f\n    return q1.r < q2.r;\n}\nint ans[MAXM];\n\nint lst[W];    // lst[a[i]] = a[i] \u4e0a\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u9ed8\u8ba4\u4e3a 0\nint pre[MAXN]; // pre[i] = i \u5de6\u8fb9\u79bb i \u6700\u8fd1\u7684\u6ee1\u8db3 a[i] == a[j] \u7684 j\nFenwick tr;    // \u76ee\u524d\u4e3a\u6b62\u6bcf\u4e2a\u4f4d\u7f6e\u51fa\u73b0\u7684\u6570\u662f\u5426\u662f\u6700\u540e\u4e00\u6b21\u51fa\u73b0\n\nint main() {\n    n = read(); m = read();\n    for (int i = 1; i <= n; i++)\n        a[i] = read();\n    for (int i = 1; i <= m; i++) {\n        q[i].l = read(); q[i].r = read();\n        q[i].id = i;\n    }\n    sort(q + 1, q + m + 1, cmp);\n\n    for (int i = 1; i <= n; i++) {\n        pre[i] = lst[a[i]];\n        lst[a[i]] = i;\n    }\n\n    tr.n = n;\n    int ptr = 1;\n    for (int i = 1; i <= m; i++) {\n        while (ptr <= q[i].r) {\n            if (pre[ptr])\n                tr.add(pre[ptr], -1); // \u6e05\u9664\u4e0a\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\n            tr.add(ptr, 1);           // \u53ea\u4fdd\u7559\u6700\u540e\u51fa\u73b0\u7684\u4f4d\u7f6e\n            ptr++;\n        }\n        ans[q[i].id] = tr.query(q[i].r) - tr.query(q[i].l - 1); // \u524d\u7f00\u548c\u6c42\u533a\u95f4\u548c\n    }\n\n    for (int i = 1; i <= m; i++)\n        write(ans[i], '\\n');\n    return 0;\n}\n```\n\n## \u4e09\u500d\u7ecf\u9a8c\n\n[P1972 [SDOI2009] HH\u7684\u9879\u94fe](https://www.luogu.com.cn/problem/P1972)\n\n[DQUERY - D-query](https://www.luogu.com.cn/problem/SP3267)",
        "postTime": 1682564806,
        "uid": 589916,
        "name": "August_Light",
        "ccfLevel": 0,
        "title": "[ABC174F] Range Set Query \u9898\u89e3"
    },
    {
        "content": "\u9898\u610f\uff1a\u9759\u6001\uff0c\u95ee\u533a\u95f4\u4e0d\u540c\u503c\u4e2a\u6570\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u53bb\u505a\uff0c\u4ece $l\\sim r$ \u5224\u65ad\u8fd9\u4e2a\u6570\u662f\u4e0d\u662f\u7b2c\u4e00\u6b21\u51fa\u73b0\uff0c\u4e8e\u662f\u6bcf\u4e2a\u533a\u95f4\u5185\u53ea\u6709\u7b2c\u4e00\u4e2a\u6570\u4f1a\u4ea7\u751f\u8d21\u732e\u3002\u6240\u4ee5\u7ef4\u62a4\u4e00\u4e2a $pre_i$ \u8868\u793a\u4e0a\u4e00\u4e2a\u4e0e $a_i$ \u76f8\u540c\u7684\u6570\u7684\u4e0b\u6807\uff0c\u6ca1\u6709\u5c31\u662f $0$\uff0c\u4e8e\u662f\u6211\u4eec\u53d1\u73b0\u53ea\u9700\u8981\u7edf\u8ba1\u6240\u6709 $pre_i\\lt l$ \u7684\u4e2a\u6570\u5c31\u597d\u4e86\uff0c\u7ed3\u5408\u4e0a\u9762\u7684\u8fc7\u7a0b\u662f\u5bb9\u6613\u7406\u89e3\u7684\u3002\n\n\u6811\u72b6\u6570\u7ec4\uff1a\u62c6\u5206\u6210 $[1,r]$ \u548c $[1,l)$ \u4e24\u4e2a\u8be2\u95ee\u7136\u540e\u4f5c\u5dee\uff0c\u53d1\u73b0\u540e\u9762\u8fd9\u4e2a\u4e1c\u897f\u7684\u7b54\u6848\u662f $l-1$\uff0c\u6ca1\u5fc5\u8981\u989d\u5916\u7b97\uff0c\u7136\u540e\u5bf9\u6240\u6709\u7684\u8be2\u95ee\u6309 $r$ \u79bb\u7ebf\uff0c\u4ece\u5c0f\u5230\u5927\u52a0\u5165\u6bcf\u4e2a $pre_i$ \u5373\u53ef\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 5e5 + 5;\nint c[N], pre[N], lst[N], ans[N], n, m, idx;\nstruct Q {\n\tint r, x, id;\n} q[N];\ninline int read() {\n\tint x = 0;\n\tchar ch = getchar();\n\twhile (!isdigit(ch))\n\t\tch = getchar();\n\twhile (isdigit(ch))\n\t\tx = (x << 3) + (x << 1) + (ch ^ 48), ch = getchar();\n\treturn x;\n}\ninline void modify(int x) {\n\twhile (x <= n) {\n\t\tc[x]++;\n\t\tx += (x & -x);\n\t}\n}\ninline int query(int x) {\n\tint res = 0;\n\twhile (x) {\n\t\tres += c[x];\n\t\tx -= (x & -x);\n\t}\n\treturn res;\n}\nint main() {\n\tn = read(), m = read();\n\tfor (int i = 1; i <= n; i++) {\n\t\tint x = read();\n\t\tpre[i] = lst[x] + 1;\n\t\tlst[x] = i;\n\t}\n\tfor (int i = 1; i <= m; i++) {\n\t\tint l = read(), r = read();\n\t\tq[i] = {r, l, i};\n\t}\n\tint j = 1;\n\tsort(q + 1, q + m + 1, [&](const Q &lhs, const Q &rhs) -> bool { return lhs.r < rhs.r; });\n\tfor (int i = 1; i <= m; i++) {\n\t\twhile (j <= q[i].r)\n\t\t\tmodify(pre[j++]);\n\t\tans[q[i].id] += query(q[i].x) - (q[i].x - 1);\n\t}\n\tfor (int i = 1; i <= m; i++)\n\t\tprintf(\"%d\\n\", ans[i]);\n\treturn 0;\n}\n```\n\n\u4e3b\u5e2d\u6811\uff1a\u76f4\u63a5\u63d2\u5165 $pre_i$\uff0c\u7136\u540e\u5bf9 $r,l-1$ \u8fd9\u4e24\u68f5\u6811\u4f5c\u5dee\u5373\u53ef\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e6 + 5;\nint rt[N], ls[N * 30], rs[N * 30], sum[N * 30], pre[N], n, m, idx;\ninline int modify(int pre, int l, int r, int x) {\n\tint p = ++idx;\n\tls[p] = ls[pre], rs[p] = rs[pre], sum[p] = sum[pre] + 1;\n\tif (l == r)\n\t\treturn p;\n\tint mid = (l + r) >> 1;\n\tif (x <= mid)\n\t\tls[p] = modify(ls[pre], l, mid, x);\n\telse\n\t\trs[p] = modify(rs[pre], mid + 1, r, x);\n\treturn p;\n}\ninline int query(int u, int v, int l, int r, int x) {\n\tif (r <= x)\n\t\treturn sum[v] - sum[u];\n\tint mid = (l + r) >> 1, res = 0;\n\tres = query(ls[u], ls[v], l, mid, x);\n\tif (x > mid)\n\t\tres += query(rs[u], rs[v], mid + 1, r, x);\n\treturn res;\n}\ninline int read() {\n\tint x = 0;\n\tchar ch = getchar();\n\twhile (!isdigit(ch))\n\t\tch = getchar();\n\twhile (isdigit(ch))\n\t\tx = (x << 3) + (x << 1) + (ch ^ 48), ch = getchar();\n\treturn x;\n}\nint main() {\n\tn = read(), m = read();\n\tfor (int i = 1; i <= n; i++) {\n\t\tint x = read();\n\t\trt[i] = modify(rt[i - 1], 0, n - 1, pre[x]);\n\t\tpre[x] = i;\n\t}\n\tfor (int i = 1; i <= m; i++) {\n\t\tint l = read(), r = read();\n\t\tprintf(\"%d\\n\", query(rt[l - 1], rt[r], 0, n - 1, l - 1));\n\t}\n\treturn 0;\n}\n```\n\n\u6700\u540e\u5c31\u662f\u6211\u4eec\u4e00\u5f00\u59cb\u8bf4\u7684\u66b4\u529b\uff0c\u53ef\u4ee5\u5229\u7528\u83ab\u961f\u76f4\u63a5\u4f18\u5316\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e6 + 5;\ninline int read() {\n\tint x = 0;\n\tchar ch = getchar();\n\twhile (!isdigit(ch)) ch = getchar();\n\twhile (isdigit(ch)) x = (x << 1) + (x << 3) + (ch ^ 48), ch = getchar();\n\treturn x;\n}\nint n, m, a[N], bel[N], cnt[N], res, ans[N];\nstruct queries {\n\tint l, r, id;\n\tqueries() {}\n\tbool operator < (const queries & x) const {\n\t\tif (bel[l] ^ bel[x.l]) return bel[l] < bel[x.l];\n\t\telse if (bel[l] & 1) return r < x.r;\n\t\treturn r > x.r;\n\t}\n} q[N];\ninline void add(int x) {\n\tif (cnt[a[x]] == 0) res++;\n\tcnt[a[x]]++;\n}\ninline void del(int x) {\n\tcnt[a[x]]--;\n\tif (cnt[a[x]] == 0) res--;\n}\nint main() {\n\tn = read(), m = read();\n\tconst int sq = sqrt(n);\n\tfor (int i = 1; i <= n; i++) a[i] = read();\n\tfor (int i = 1; i <= n; i++) bel[i] = (i - 1) / sq + 1;\n\tfor (int i = 1; i <= m; i++) {\n\t\tq[i].l = read(), q[i].r = read();\n\t\tq[i].id = i;\n\t}\n\tsort(q + 1, q + m + 1);\n\tint l = 1, r = 0;\n\tfor (int i = 1; i <= m; i++) {\n\t\twhile (l < q[i].l) del(l++);\n\t\twhile (l > q[i].l) add(--l);\n\t\twhile (r < q[i].r) add(++r);\n\t\twhile (r > q[i].r) del(r--);\n\t\tans[q[i].id] = res;\n\t}\n\tfor (int i = 1; i <= m; i++) printf(\"%d\\n\", ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1671266745,
        "uid": 434929,
        "name": "Usada_Pekora",
        "ccfLevel": 7,
        "title": "ABC174F \u7b80\u5355\u4e8c\u7ef4\u6570\u70b9"
    },
    {
        "content": "\u8fd9\u9898\u505a\u6cd5\u5f88\u591a\uff0c\u57fa\u672c\u7684\u5957\u8def\u5c31\u662f\u5f53\u52a0\u5165\u4e00\u4e2a\u6570\u5b57\u7684\u65f6\u5019\u628a\u524d\u9762\u51fa\u73b0\u7684\u4f4d\u7f6e\u5220\u4e86\uff0c\u7136\u540e\u52a0\u5165\u5230\u533a\u95f4\u53f3\u7aef\u70b9\u7684\u65f6\u5019\u7edf\u8ba1\u7b54\u6848\u3002\n\n\u4e5f\u5c31\u662f\u7ef4\u62a4\u4e00\u4e2a $b_i=[\\forall i < j \\le r,a_j \\ne a_i]$\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f\u52a0\u5230 $r$ \u65f6\u7684 $\\sum\\limits_{i=l}^{r}b_i$\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u53ef\u4ee5\u79bb\u7ebf\u4e0b\u6765\u6309\u53f3\u7aef\u70b9\u6392\u5e8f\u7136\u540e\u7528\u6811\u72b6\u6570\u7ec4/\u7ebf\u6bb5\u6811\uff0c\u6216\u8005\u4f7f\u7528\u53ef\u6301\u4e45\u5316\u6570\u636e\u7ed3\u6784\u3002\n\nAC\u4ee3\u7801\uff08\u524d\u4e09\u79cd\u90fd\u80fd\u8fc7\uff09\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing ull = unsigned long long;\nusing pii = pair<int, int>;\nconst int maxn = 5e5+5;\nconst int inf = INT_MAX;\nint n,q,a[maxn],ans[maxn];\nstruct query{\n    int l,r,id;\n}Q[maxn];\nnamespace Fenwick{ // \u79bb\u7ebf+\u6811\u72b6\u6570\u7ec4 214ms\n    int c[maxn],l[maxn],tail;\n    bool cmp(const query &a,const query &b){\n        return a.r<b.r; // \u6309\u53f3\u7aef\u70b9\u6392\u5e8f\n    }\n    int lowbit(int x){\n        return x & -x;\n    }\n    int sum(int x){\n        int ret=0;\n        while(x){\n            ret+=c[x];\n            x-=lowbit(x);\n        }\n        return ret;\n    }\n    void modify(int x,int k){\n        while(x<=n){\n            c[x]+=k;\n            x+=lowbit(x);\n        }\n    }\n    void solve(){\n        sort(Q+1,Q+q+1,cmp);\n        for(int i=1;i<=q;++i){\n            while(tail<Q[i].r){\n                ++tail;\n                if(l[a[tail]])modify(l[a[tail]],-1); // \u628a\u524d\u9762\u76f8\u540c\u7684\u5220\u6389\n                l[a[tail]]=tail;\n                modify(tail,1); // \u52a0\u5165\u5f53\u524d\u4f4d\u7f6e\n            }\n            ans[Q[i].id]=sum(Q[i].r)-sum(Q[i].l-1); // \u7edf\u8ba1\u7b54\u6848\n        }\n    }\n};\nnamespace Persistent_Fenwick{ // \u4e00\u4e2a\u4e71\u641e\u7684\u201c\u53ef\u6301\u4e45\u5316\u6811\u72b6\u6570\u7ec4\u201d\uff0cO(nlog^2n)\uff0c1473ms\n    vector<pii> c[maxn]; // first\u5b58\u4fee\u6539\u65f6\u95f4 second\u5b58\u503c\n    int l[maxn];\n    int lowbit(int x){\n        return x & -x;\n    }\n    void add(int x,int k,int t){\n        while(x<=n){\n            c[x].push_back({t,c[x].rbegin()->second+k}); // \u4fee\u6539\uff0c\u53ea\u4e0d\u8fc7\u4e0d\u662f\u76f4\u63a5\u52a0\u4e0a\u53bb\u800c\u662f\u5b58\u4fee\u6539\u4fe1\u606f\n            x+=lowbit(x);\n        }\n    }\n    int sum(int x,int t){\n        int ret=0;\n        while(x){\n            auto it=upper_bound(c[x].begin(),c[x].end(),pii(t,inf)); // \u4e8c\u5206\u627e\u5230\u540e\u4e00\u4e2a\u4fee\u6539\n            --it;\n            ret+=it->second;\n            x-=lowbit(x);\n        }\n        return ret;\n    }\n    void solve(){\n        for(int i=1;i<=n;++i)c[i].push_back({0,0});\n        for(int i=1;i<=n;++i){\n            if(l[a[i]])add(l[a[i]],-1,i*2-1);\n            l[a[i]]=i;\n            add(i,1,i*2);\n        }\n        for(int i=1;i<=q;++i)\n            ans[i]=sum(Q[i].r,Q[i].r*2)-sum(Q[i].l-1,Q[i].r*2); // \u53ef\u4ee5\u5728\u7ebf\u5904\u7406\n    }\n}\nnamespace HJT_Tree{ // \u4e3b\u5e2d\u6811\uff0cO(nlogn)\uff0c1253ms\n    int l[maxn],tot,rt[maxn*2];\n    struct segment{\n        int l,r,v;\n    }t[maxn*64];\n    bool in_range(int L,int R,int l,int r){\n        return (l<=L)&&(R<=r);\n    }\n    bool out_range(int L,int R,int l,int r){\n        return (r<L)||(R<l);\n    }\n    void pushup(int u){\n        t[u].v=t[t[u].l].v+t[t[u].r].v;\n    }\n    void change(int lst,int &u,int L,int R,int x,int k){\n        if(!u)u=++tot;\n        if(L==R){\n            t[u].v+=k;\n            return;\n        }\n        int M=(L+R)>>1;\n        if(x<=M){ // \u4fee\u6539\u5de6\u8fb9\n            t[u].r=t[lst].r;\n            t[u].l=++tot;\n            t[t[u].l]=t[t[lst].l];\n            change(t[lst].l,t[u].l,L,M,x,k);\n        }\n        else{ // \u4fee\u6539\u53f3\u8fb9\n            t[u].l=t[lst].l;\n            t[u].r=++tot;\n            t[t[u].r]=t[t[lst].r];\n            change(t[lst].r,t[u].r,M+1,R,x,k);\n        }\n        pushup(u);\n    }\n    int query(int u,int L,int R,int l,int r){\n        if(!u)return 0;\n        if(in_range(L,R,l,r))return t[u].v;\n        if(out_range(L,R,l,r))return 0;\n        int M=(L+R)>>1;\n        return query(t[u].l,L,M,l,r)+query(t[u].r,M+1,R,l,r);\n    }\n    void solve(){\n        rt[0]=++tot;\n        for(int i=1;i<=n;++i){\n            if(l[a[i]])change(rt[i*2-2],rt[i*2-1],1,n,l[a[i]],-1);\n            else rt[i*2-1]=rt[i*2-2];\n            l[a[i]]=i;\n            change(rt[i*2-1],rt[i*2],1,n,i,1);\n        }\n        for(int i=1;i<=q;++i)\n            ans[i]=query(rt[Q[i].r*2],1,n,Q[i].l,Q[i].r);\n    }\n}\nnamespace MO{ // \u83ab\u961f\uff0cO(nsqrtn)\uff0cTLE\n    int block_size,l=1,r,cnt[maxn],cur;\n    int wb(int x){\n        return x/block_size+1;\n    }\n    bool cmp(const query &a,const query &b){ // \u6309\u5757\u6392\u5e8f\n        if(wb(a.l)!=wb(b.l))return a.l<b.l;\n        if(wb(a.l)&1)return a.r<b.r;\n        return a.r>b.r;\n    }\n    void add(int p){\n        if(!cnt[a[p]])++cur;\n        ++cnt[a[p]];\n    }\n    void del(int p){\n        --cnt[a[p]];\n        if(!cnt[a[p]])--cur;\n    }\n    void transfer(int L,int R){ // \u8f6c\u79fb\n        while(r<R)add(++r);\n        while(l>L)add(--l);\n        while(r>R)del(r--);\n        while(l<L)del(l++);\n    }\n    void solve(){\n        block_size=sqrt(n);\n        for(int i=1;i<=q;++i){\n            transfer(Q[i].l,Q[i].r);\n            ans[Q[i].id]=cur;\n        }\n    }\n}\nint main(){\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cout.tie(nullptr);\n    cin>>n>>q;\n    for(int i=1;i<=n;++i)cin>>a[i];\n    for(int i=1;i<=q;++i){\n        cin>>Q[i].l>>Q[i].r;\n        Q[i].id=i;\n    }\n    Fenwick::solve();\n    //Persistent_Fenwick::solve();\n    //HJT_Tree::solve();\n    //MO::solve();\n    for(int i=1;i<=q;++i)cout<<ans[i]<<'\\n';\n    return 0;\n}\n```\n",
        "postTime": 1682577419,
        "uid": 460457,
        "name": "KnownError_",
        "ccfLevel": 4,
        "title": "AT_abc174_f [ABC174F] Range Set Query \u9898\u89e3"
    },
    {
        "content": "\u4e09\u500d\u7ecf\u9a8c\uff1a[SP3267](https://www.luogu.com.cn/problem/SP3267)\uff0c[P1972](https://www.luogu.com.cn/problem/P1972)\u3002\n\n\u672c\u9898\u6709\u591a\u79cd\u89e3\u6cd5\uff1a\u83ab\u961f\uff0c\u4e3b\u5e2d\u6811\uff0c\u7ebf\u6bb5\u6811\uff0c\u6811\u72b6\u6570\u7ec4\uff0c\u53ef\u4ee5\u53bb\u7ffb\u4e0a\u9762\u90a3\u4e24\u9898\u7684\u9898\u89e3\uff0c\u4e0d\u518d\u8be6\u8ff0\u3002\u8fd9\u91cc\u53ea\u4ecb\u7ecd\u4e00\u79cd\u505a\u6cd5\u3002\n\n\u9996\u5148\u53ef\u4ee5\u5148\u628a\u6240\u6709\u8be2\u95ee\u79bb\u7ebf\u4e0b\u6765\u3002\n\n\u53d1\u73b0\u5bf9\u4e8e\u6240\u6709\u8be2\u95ee\u533a\u95f4 $ [l,r] $\uff0c\u5b9e\u9645\u4e0a\u53ea\u9700\u8981\u4fdd\u7559\u6700\u53f3\u8fb9\u7684\u6570\u5b57\u5373\u53ef\uff0c\u4e0d\u5f71\u54cd\u7b54\u6848\u3002\u56e0\u6b64\u628a\u6240\u6709\u8be2\u95ee\u6309 $ r $ \u5347\u5e8f\u6392\u5e8f\uff0c\u7136\u540e\u904d\u5386 $ i $\uff0c\u5f53\u524d\u9762\u7684\u4f4d\u7f6e\u6ca1\u6709 $ i $ \u65f6\u5c06\u524d\u9762\u7684\u533a\u95f4\u548c $ +1 $\uff0c\u5426\u5219\u533a\u95f4\u548c $ +1 $ \u540e\u5220\u6389\u524d\u9762\u4e00\u4e2a\uff0c\u7ef4\u62a4\u4e00\u4e2a\u94fe\u8868\u5373\u53ef\u3002\n\n\u4e8e\u662f\u4e00\u4e2a\u8be2\u95ee\u7684\u7b54\u6848\u5373\u4e3a $ sum_r-sum_{l-1} $\uff0c\u53ea\u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u5355\u70b9\u52a0\u533a\u95f4\u67e5\u8be2\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6811\u72b6\u6570\u7ec4\u5373\u53ef\uff0c\u8fd9\u91cc\u7528 LCT \u5b9e\u73b0\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $ \\mathcal{O}(n\\log{n}) $\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\u867d\u7136\u5e38\u6570\u5de8\u5927\u4f46\u8c8c\u4f3c\u8fd8\u662f\u6bd4\u83ab\u961f\u5feb\u4e00\u70b9\u3002\u8fd9\u4efd\u4ee3\u7801\u53ef\u4ee5\u901a\u8fc7\u8fd9\u9898\u548c\u7b2c\u4e00\u4e2a\u4e09\u500d\u7ecf\u9a8c\uff0c\u7b2c\u4e8c\u4e2a\u8981\u5199\u6b63\u5e38\u7684\u6811\u72b6\u6570\u7ec4\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn=1e6+10;\ninline int read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile (ch<'0'||ch>'9'){if (ch=='-') f=-1;ch=getchar();}\n\twhile (ch>='0'&&ch<='9'){x=x*10+ch-48;ch=getchar();}\n\treturn x*f;\n}\nint c[maxn],tag[maxn],n;\nstruct Splay\n{\n    int ch[maxn][2],fa[maxn],siz[maxn],val[maxn],sum[maxn],add[maxn],mul[maxn],rev[maxn];\n    void clear(int x)\n    {\n        ch[x][0]=ch[x][1]=fa[x]=siz[x]=val[x]=sum[x]=add[x]=rev[x]=0;\n        mul[x]=1;\n    }\n    int getch(int x)\n    {\n        return (ch[fa[x]][1]==x);\n    }\n    int isroot(int x)\n    {\n        clear(0);\n        return ch[fa[x]][0]!=x&&ch[fa[x]][1]!=x;\n    }\n    void maintain(int x)\n    {\n        clear(0);\n        siz[x]=(siz[ch[x][0]]+1+siz[ch[x][1]]);\n        sum[x]=(sum[ch[x][0]]+val[x]+sum[ch[x][1]]);\n    }\n    void pushdown(int x)\n    {\n        clear(0);\n        if(mul[x]!=1)\n        {\n            if(ch[x][0])\n            mul[ch[x][0]]=(mul[x]*mul[ch[x][0]]),val[ch[x][0]]=(val[ch[x][0]]*mul[x]),sum[ch[x][0]]=(sum[ch[x][0]]*mul[x]),add[ch[x][0]]=(add[ch[x][0]]*mul[x]);\n            if(ch[x][1])\n            mul[ch[x][1]]=(mul[x]*mul[ch[x][1]]),val[ch[x][1]]=(val[ch[x][1]]*mul[x]),sum[ch[x][1]]=(sum[ch[x][1]]*mul[x]),add[ch[x][1]]=(add[ch[x][1]]*mul[x]);\n            mul[x]=1;\n        }\n        if(add[x])\n        {\n            if(ch[x][0])\n            add[ch[x][0]]=(add[ch[x][0]]+add[x]),val[ch[x][0]]=(val[ch[x][0]]+add[x]),sum[ch[x][0]]=(sum[ch[x][0]]+add[x]*siz[ch[x][0]]);\n            if(ch[x][1])\n            add[ch[x][1]]=(add[ch[x][1]]+add[x]),val[ch[x][1]]=(val[ch[x][1]]+add[x]),sum[ch[x][1]]=(sum[ch[x][1]]+add[x]*siz[ch[x][1]]);\n            add[x]=0;\n        }\n        if(rev[x])\n        {\n            if(ch[x][0])\n            rev[ch[x][0]]^=1,swap(ch[ch[x][0]][0],ch[ch[x][0]][1]);\n            if(ch[x][1])\n            rev[ch[x][1]]^=1,swap(ch[ch[x][1]][0],ch[ch[x][1]][1]);\n            rev[x]=0;\n        }\n    }\n    void update(int x)\n    {\n        if(!isroot(x))\n        update(fa[x]);\n        pushdown(x);\n    }\n    void rotate(int x)\n    {\n        int y=fa[x],z=fa[y],chx=getch(x),chy=getch(y);\n        fa[x]=z;\n        if(!isroot(y))\n        ch[z][chy]=x;\n        ch[y][chx]=ch[x][chx^1];\n        fa[ch[x][chx^1]]=y;\n        ch[x][chx^1]=y;\n        fa[y]=x;\n        maintain(y);\n        maintain(x);\n        maintain(z);\n    }\n    void splay(int x)\n    {\n        update(x);\n        for(int f=fa[x];f=fa[x],!isroot(x);rotate(x))\n        if(!isroot(f))\n        rotate(getch(x)==getch(f)?f:x);\n    }\n    void access(int x)\n    {\n        for(int f=0;x;f=x,x=fa[x])\n        splay(x),ch[x][1]=f,maintain(x);\n    }\n    void makeroot(int x)\n    {\n        access(x);\n        splay(x);\n        swap(ch[x][0],ch[x][1]);\n        rev[x]^=1;\n    }\n    int find(int x)\n    {\n        access(x);\n        splay(x);\n        while(ch[x][0])\n        x=ch[x][0];\n        splay(x);\n        return x;\n    }//\u524d\u9762\u90fd\u662fLCT\u677f\u5b50\u90e8\u5206\n    void added(int u,int c)\n    {\n        int v=u;\n        makeroot(u), access(v), splay(v);\n      val[u] = (val[v] + c) ;\n      sum[v] = (sum[v] + siz[v] * c ) ;\n      add[v] = (add[v] + c) ;\n        return;\n    }//\u5355\u70b9\u52a0\uff08\u76f8\u5f53\u4e8e\u5bf9\u533a\u95f4[u,u]\u52a0\uff09\n    int query(int u)\n    {\n        if(u==0)\n            return 0;\n        int v=1;\n        makeroot(u), access(v), splay(v);\n        return sum[v];\n    }//\u533a\u95f4\u67e5\u8be2\uff08\u6ce8\u610f\u7279\u5224u=0\u7684\u60c5\u51b5\uff0c\u5728\u8f6c\u5316\u524d\u7f00\u548c\u65f61-1=0\u4f1a\u51fa\u95ee\u9898\uff09\n    void link(int u,int v)\n    {\n    if (find(u) != find(v)) \n    makeroot(u), fa[u] = v;\n    }\n}st;\nstruct seele\n{\n\tint L,R,ad; \n}a[maxn];\nint sum[maxn],ans[maxn],nxt[maxn],head[maxn],m,mx,num[maxn];\ninline bool cmp(seele x1,seele x2) \n{ \n\treturn x1.L==x2.L ? x1.R<x2.R : x1.L<x2.L;\n}\nsigned main() \n{\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++) \n\t\tnum[i]=read();\n\tfor(int i=n;i>=1;i--) \n\t{\n\t\tnxt[i]=head[num[i]];\n\t\thead[num[i]]=i;\n\t\tmx=max(mx,num[i]);\n\t}\n\tmx=max(mx,maxn/2);\n        for(int i=1;i<=mx+1;i++)\n            st.clear(i),st.val[i]=0,st.maintain(i),st.splay(i);\n        for(int i=0;i<=mx+1;++i)\n            st.sum[i]=0;\n        for(int i=1;i<mx+1;i++)\n            st.link(i,i+1);\n\tfor(int i=1;i<=m;i++) \n\t{\n\t\ta[i].L=read();\n\t\ta[i].R=read();\n\t\ta[i].ad=i; \n\t}\n\tsort(a+1,a+m+1,cmp);\n\tfor(int i=1;i<=mx;i++) \n\t\tif(head[i]) \n\t\tst.added(head[i],1); \n\tint now=1;\n\tfor(int i=1;i<=m;i++) \n\t{\n\t\twhile(now<a[i].L) \n\t\t{\n\t\t\tif(nxt[now])\n\t\t\tst.added(nxt[now],1);\n\t\t\tnow++;\n\t\t}\n\t\tans[a[i].ad]=st.query(a[i].R)-st.query(a[i].L-1); \n\t}\n\tfor(int i=1;i<=m;i++)\n\tprintf(\"%d\\n\",ans[i]);\n}\n```\n",
        "postTime": 1671111733,
        "uid": 714821,
        "name": "loser_seele",
        "ccfLevel": 4,
        "title": "ABC174F\u9898\u89e3"
    }
]