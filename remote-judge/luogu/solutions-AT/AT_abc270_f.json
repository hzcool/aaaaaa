[
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\n\u6709 $N$ \u5ea7\u5c9b\uff0c\u4f60\u53ef\u4ee5\u8fdb\u884c\u4e0b\u5217\u64cd\u4f5c\uff1a\n\n+ \u5728\u7b2c $i\\,(1\\le i \\le N)$ \u5ea7\u5c9b\u4e0a\u82b1\u8d39 $X_i$ \u5efa\u4e00\u5ea7\u673a\u573a\uff1b\n+ \u5728\u7b2c $i\\,(1\\le i \\le N)$ \u5ea7\u5c9b\u4e0a\u82b1\u8d39 $Y_i$ \u5efa\u4e00\u5ea7\u6d77\u6e2f\uff1b\n+ \u82b1\u8d39 $Z_i\\,(1 \\le i \\le M)$ \u5efa\u4e00\u5ea7\u8fde\u63a5\u7b2c $A_i$ \u5ea7\u5c9b\u548c\u7b2c $B_i$ \u5ea7\u5c9b\u7684\u6865\u3002\n\n\u5982\u679c\u5efa\u4e86\u673a\u573a\u7684\u5c9b\u90fd\u53ef\u4ee5\u4e92\u76f8\u62b5\u8fbe\uff0c\u5efa\u4e86\u6d77\u6e2f\u7684\u5c9b\u4e5f\u53ef\u4ee5\u4e92\u76f8\u62b5\u8fbe\uff0c\u6709\u6865\u8fde\u63a5\u7684\u4e24\u5ea7\u5c9b\u53ef\u4ee5\u4e92\u76f8\u62b5\u8fbe\uff0c\u95ee\u5982\u679c\u8981\u8ba9\u8fd9 $N$ \u5ea7\u5c9b\u90fd\u53ef\u4ee5\u4e92\u76f8\u76f4\u63a5\u6216\u95f4\u63a5\u62b5\u8fbe\uff0c\u6700\u5c11\u9700\u8981\u591a\u5c11\u82b1\u8d39\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a$2 \\le N \\le 2\\times 10^5$\uff0c$1 \\le M \\le 2\\times 10^5$\uff0c$1 \\le X_i,Y_i,Z_i \\le 10^9$\u3002\n\n### \u89e3\u6cd5\u5206\u6790\n\n\u8d5b\u65f6\u6ca1\u53bb\u52a8\uff0c\u8d5b\u540e\u542c\u5b66\u957f\u8bb2\u8bc4\u540e\u53d1\u73b0\u4f3c\u4e4e\u4e0d\u96be\u3002\n\n\u8fd9\u4e2a\u9898\u770b\u7740\u5c31\u5f88\u6700\u5c0f\u751f\u6210\u6811\uff0c\u4f46\u5b83\u597d\u50cf\u4e5f\u4e0d\u662f\u90a3\u4e48\u7684\u6700\u5c0f\u751f\u6210\u6811\u3002\n\n\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u4ee5 Kruskal \u4e3a\u4f8b\uff0c\u6211\u4eec\u5efa\u4e24\u4e2a\u8d85\u7ea7\u6e90 $N+1,N+2$\uff0c\u5206\u522b\u548c\u6240\u6709\u5c9b\u8fde\u8fb9\uff0c\u628a $M$ \u5ea7\u53ef\u5efa\u7684\u6865\u4e5f\u5f53\u505a\u8fb9\uff0c\u518d\u8dd1 Kruskal\uff0c\u6700\u7ec8\u9009\u51fa\u6765\u7684\u8fb9\u4e2d\uff0c\u4e0e $N+1$ \u76f8\u8fde\u7684\u4ee3\u8868\u5efa\u4e86\u673a\u573a\uff0c\u4e0e $N+2$ \u76f8\u8fde\u7684\u4ee3\u8868\u5efa\u4e86\u6d77\u6e2f\u3002\n\n\u4f46\u662f\u8fd9\u4e2a\u65b9\u6cd5\u5e76\u4e0d\u5b8c\u5168\u5bf9\uff0c\u56e0\u4e3a\u6709\u53ef\u80fd\u4f1a\u6709\u8fd9\u79cd\u60c5\u51b5\uff1a\u672c\u6765\u53ea\u5efa\u673a\u573a\u5c31\u80fd\u5728\u82b1\u8d39\u6700\u5c0f\u7684\u60c5\u51b5\u4e0b\u4f7f\u6240\u6709\u5c9b\u8fde\u901a\uff0c\u8fd9\u65f6\u7a0b\u5e8f\u4e00\u770b\uff0c\u8bf6\uff0c\u8fd9\u4e2a $N+2$ \u4e3a\u5565\u4e0d\u8fde\u901a\u554a\uff1f\u8d76\u7d27\u627e\u6761\u8fb9\u7ed9\u5b83\u8fde\u4e0a\uff01\u7136\u540e\u5c31\u83ab\u540d\u5176\u5999\u591a\u4e86\u4e00\u6761\u8fb9\u3002\u5982\u679c\u4f60\u575a\u6301\u5728\u53ea\u8dd1\u4e00\u904d Kruskal \u7684\u60c5\u51b5\u4e0b\u8c03\u6389\u8fd9\u4e00\u4e2a bug \u7684\u8bdd\uff0c\u4f60\u5c31\u4f1a\u53d1\u73b0\u7279\u522b\u9ebb\u70e6\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u8dd1\u56db\u904d Kruskal \u5c31\u597d\u4e86\u2026\u2026\n\n+ \u673a\u573a\u3001\u6d77\u6e2f\u90fd\u4e0d\u5efa\uff1b\n+ \u5efa\u673a\u573a\uff1b\n+ \u5efa\u6d77\u6e2f\uff1b\n+ \u673a\u573a\u3001\u6d77\u6e2f\u90fd\u5efa\u3002\n\n\u8fd9\u56db\u79cd\u60c5\u51b5\u7684\u5b9e\u73b0\u5c31\u662f\u52a0\u54ea\u4e2a\u8d85\u7ea7\u6e90\u7684\u533a\u522b\u4e86\uff0c\u8dd1\u5b8c\u56db\u79cd\u60c5\u51b5\u53d6\u4e2a\u6700\u5c0f\u503c\u5c31\u5b8c\u4e8b\u4e86\u3002\n\n------------\n\n### \u4ee3\u7801\n\n\u53ea\u653e Kruskal \u7248\u672c\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define pb push_back\nusing namespace std;\nconst ll N=2e5+7,M=1e6+7;\nstruct node { ll from,to,dis; };\nll n,m,x[N],y[N],a[N],b[N],z[N],f[N],ans=1e18,sum;\nvector <node> v;\nbool cmp(const node i,const node j) { return i.dis<j.dis; }\nll find(ll x) { return f[x]==x?x:f[x]=find(f[x]); }\nint main() {\n\tscanf(\"%lld%lld\",&n,&m);\n\tfor (ll i=1;i<=n+2;i++) f[i]=i;\n\tfor (ll i=1;i<=n;i++) scanf(\"%lld\",&x[i]);\n\tfor (ll i=1;i<=n;i++) scanf(\"%lld\",&y[i]);\n\tfor (ll i=1;i<=m;i++) scanf(\"%lld%lld%lld\",&a[i],&b[i],&z[i]);\n\tfor (ll i=1;i<=m;i++) v.pb({a[i],b[i],z[i]}); // \u90fd\u4e0d\u5efa\n\tsort(v.begin(),v.end(),cmp);\n\tfor (ll i=1;i<=n+2;i++) f[i]=i;\n\tfor (node i:v) {\n\t\tll r1=find(i.from),r2=find(i.to);\n\t\tif (r1!=r2) f[r1]=r2,sum+=i.dis;\n\t}\n\tbool flg=1;\n\tfor (ll i=1;i<=n;i++) if (find(i)!=find(1)) {\n\t\tflg=0;\n\t\tbreak;\n\t}\n\tif (flg) ans=min(ans,sum);sum=0;\n\tfor (ll i=1;i<=n;i++) v.pb({i,n+1,x[i]}); // \u53ea\u5efa\u673a\u573a\n\tsort(v.begin(),v.end(),cmp);\n\tfor (ll i=1;i<=n+2;i++) f[i]=i;\n\tfor (node i:v) {\n\t\tll r1=find(i.from),r2=find(i.to);\n\t\tif (r1!=r2) f[r1]=r2,sum+=i.dis;\n\t}\n\tflg=1;\n\tfor (ll i=1;i<=n;i++) if (find(i)!=find(1)) {\n\t\tflg=0;\n\t\tbreak;\n\t}\n\tif (flg) ans=min(ans,sum);sum=0;\n\tfor (ll i=1;i<=n;i++) v.pb({i,n+2,y[i]}); // \u673a\u573a\u3001\u6d77\u6e2f\u90fd\u5efa\n\tsort(v.begin(),v.end(),cmp);\n\tfor (ll i=1;i<=n+2;i++) f[i]=i;\n\tfor (node i:v) {\n\t\tll r1=find(i.from),r2=find(i.to);\n\t\tif (r1!=r2) f[r1]=r2,sum+=i.dis;\n\t}\n\tflg=1;\n\tfor (ll i=1;i<=n;i++) if (find(i)!=find(1)) {\n\t\tflg=0;\n\t\tbreak;\n\t}\n\tif (flg) ans=min(ans,sum);sum=0;\n\tv.clear();\n\tfor (ll i=1;i<=m;i++) v.pb({a[i],b[i],z[i]});\n\tfor (ll i=1;i<=n;i++) v.pb({i,n+2,y[i]}); // \u53ea\u5efa\u6d77\u6e2f\n\tsort(v.begin(),v.end(),cmp);\n\tfor (ll i=1;i<=n+2;i++) f[i]=i;\n\tfor (node i:v) {\n\t\tll r1=find(i.from),r2=find(i.to);\n\t\tif (r1!=r2) f[r1]=r2,sum+=i.dis;\n\t}\n\tflg=1;\n\tfor (ll i=1;i<=n;i++) if (find(i)!=find(1)) {\n\t\tflg=0;\n\t\tbreak;\n\t}\n\tif (flg) ans=min(ans,sum);\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1667551094,
        "uid": 319803,
        "name": "CarroT1212",
        "ccfLevel": 6,
        "title": "AT_abc270_f Sol"
    },
    {
        "content": "\u5982\u679c\u4e0d\u8003\u8651\u673a\u573a\u4e0e\u6e2f\u53e3\uff0c\u90a3\u4e48\u5c31\u662f\u4e00\u4e2a\u6700\u5c0f\u751f\u6210\u6811\u95ee\u9898\u3002  \n\u5bf9\u673a\u573a\u548c\u6e2f\u53e3\u5206\u522b\u521b\u7acb\u4e00\u4e2a\u865a\u70b9\uff0c\u5efa\u7acb\u673a\u573a/\u6e2f\u53e3\u8868\u793a\u4e3a\u4e0e\u865a\u70b9\u8fde\u63a5\uff0c\u8868\u793a\u6240\u6709\u5efa\u7acb\u673a\u573a/\u6e2f\u53e3\u540e\u5c0f\u5c9b\u7684\u8fde\u901a\u6027\uff0c\u8dd1\u6700\u5c0f\u751f\u6210\u6811\u5c31\u80fd\u591f\u5f97\u5230\u7b54\u6848\u3002  \n\u6700\u540e\u662f\u5751\u70b9\uff1a\u53ef\u4ee5\u4e0d\u5efa\u673a\u573a\u6216\u6e2f\u53e3\uff0c\u6240\u4ee5\u8981\u679a\u4e3e $4$ \u79cd\u865a\u70b9\u7684\u9009\u62e9\u60c5\u51b5\uff0c\u5206\u522b\u8dd1\u6700\u5c0f\u751f\u6210\u6811\u53d6\u6700\u5c0f\u503c\u8f93\u51fa\u3002\n# AC \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int MAXN = 2e5 + 10;\nconst int MAXM = 6e5 + 10;\nconst ll inf = ~0ull >> 1;\n\nstruct node {\n\tint u, v;\n\tll w;\n\tbool operator < (const node &rhs) const { return w < rhs.w; }\n} e[MAXM];\n\nint fa[MAXN], tot;\n\nint find(int k) {\n\treturn k == fa[k] ? k : fa[k] = find(fa[k]);\n}\n\ninline \nbool merge(int x, int y) {\n\treturn (x = find(x)) ^ (y = find(y)) ? fa[x] = y : 0;\n}\n\nint n, m, s1, s2;\n\ninline \nll kruskal(bool x, bool y) {\n\tll res = 0, cnt = 0;\n\tfor (int i = 1; i <= n + 2; i++) fa[i] = i;\n\tfor (int i = 1; i <= tot; i++) {\n\t\tif (x && (e[i].u == s1 || e[i].v == s1)) continue;\n\t\tif (y && (e[i].u == s2 || e[i].v == s2)) continue;\n\t\tif (merge(e[i].u, e[i].v)) res += e[i].w, cnt++;\n\t}\n\treturn cnt == n + 1 - x - y ? res : inf;\n}\n\nint main() {\n\tscanf(\"%d%d\", &n, &m), s1 = n + 1, s2 = n + 2;\n\tfor (int i = 1, x; i <= n; i++) scanf(\"%d\", &x), e[++tot] = { s1, i, x };\n\tfor (int i = 1, x; i <= n; i++) scanf(\"%d\", &x), e[++tot] = { s2, i, x };\n\tfor (int i = 1, u, v, w; i <= m; i++) scanf(\"%d%d%d\", &u, &v, &w), e[++tot] = { u, v, w };\n\tsort(e + 1, e + tot + 1);\n\tprintf(\"%lld\", min({ kruskal(0, 0), kruskal(1, 0), kruskal(0, 1), kruskal(1, 1) }));\n}\n```",
        "postTime": 1670083337,
        "uid": 406941,
        "name": "Register_int",
        "ccfLevel": 6,
        "title": "ABC270F \u9898\u89e3"
    },
    {
        "content": "\u8ba9\u6240\u6709\u70b9\u8054\u901a\uff0c\u5f88\u50cf\u6700\u5c0f\u751f\u6210\u6811\uff0c\u8003\u8651\u5982\u4f55\u5904\u7406\u673a\u573a\u548c\u6e2f\u53e3\u3002\n\n\u53ef\u4ee5\u5efa\u4e24\u4e2a\u8d85\u7ea7\u6e90\u70b9\uff0c\u4e00\u4e2a\u8d1f\u8d23\u673a\u573a\uff0c\u4e00\u4e2a\u8d1f\u8d23\u6e2f\u53e3\uff0c\u5efa\u7acb\u673a\u573a\u6216\u6e2f\u53e3\u76f8\u5f53\u4e8e\u5f80\u8d85\u7ea7\u6e90\u70b9\u4e0a\u8fde\u8fb9\u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u89e3\u51b3\u4e86\uff0c\u4e0d\u8fc7\u673a\u573a\u548c\u6e2f\u53e3\u4e0d\u4e00\u5b9a\u8981\u5efa\uff0c\u800c\u76f4\u63a5\u5f53\u6210\u70b9\u53c8\u4f1a\u88ab\u5f3a\u5236\u76f8\u8fde\uff0c\u6240\u4ee5\u8981\u8ba8\u8bba\u5efa\u8fd8\u662f\u4e0d\u5efa\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node\n{\n    long long s,t,w;\n};\nlong long n,m,a[200005],b[200005],fa[200005],x,y,z;\nvector<node>r,v;\nbool cmp(node x,node y)\n{\n    return x.w<y.w;\n}\nlong long find(long long x)\n{\n    if(fa[x]==x)return x;\n    return fa[x]=find(fa[x]);\n}\nlong long work(int flg1,int flg2)\n{\n   // cout<<flg1<<' '<<flg2<<endl;\n    long long t=n-1;\n    v.clear();\n    for(auto i:r)\n    {\n        v.push_back(i);\n    }\n    if(flg1)\n    {\n        t++;\n        for(int i=1;i<=n;i++)\n        {\n            v.push_back({n+1,i,a[i]});\n        }   \n    }\n    if(flg2)\n    {\n        t++;\n        for(int i=1;i<=n;i++)\n        {\n            v.push_back({n+2,i,b[i]});\n        }   \n    }\n    for(int i=1;i<=n+2;i++)\n    {\n        fa[i]=i;\n    }\n    sort(v.begin(),v.end(),cmp);\n    long long sum=0;\n    for(auto i:v)\n    {\n        if(t==0)break;\n        if(find(i.s)==find(i.t))continue;\n      //  cout<<i.s<<' '<<i.t<<' '<<i.w<<endl;\n        fa[find(i.s)]=find(i.t);\n        sum+=i.w;\n        t--;\n    }\n    if(t!=0)return 1e18;\n    return sum;\n}\nint main()\n{\n    scanf(\"%lld%lld\",&n,&m);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%lld\",&a[i]);\n    }\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%lld\",&b[i]);\n    }\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%lld%lld%lld\",&x,&y,&z);\n        r.push_back({x,y,z});\n    }\n    printf(\"%lld\",min(work(1,1),min(work(1,0),min(work(0,1),work(0,0)))));\n}\n\n```",
        "postTime": 1668915469,
        "uid": 501947,
        "name": "DengDuck",
        "ccfLevel": 6,
        "title": "ABC270F Transportation \u9898\u89e3"
    },
    {
        "content": "[Link](https://www.luogu.com.cn/problem/AT_abc270_f)\n\n### Idea\n\n\u89c2\u5bdf\u4e09\u79cd\u4fee\u5efa\u65b9\u5f0f\u3002\u5bb9\u6613\u53d1\u73b0\u82e5\u53ea\u6709\u7b2c\u4e09\u79cd\u4fee\u5efa\u65b9\u5f0f\uff0c\u90a3\u4e48\u8981\u5728\u6700\u5c0f\u82b1\u8d39\u7684\u60c5\u51b5\u4e0b\uff0c\u4f7f\u6240\u6709\u70b9\u8fde\u901a\uff0c\u4e00\u5b9a\u662f\u627e\u4e00\u68f5\u6700\u5c0f\u751f\u6210\u6811\u3002\n\n\u800c\u7b2c\u4e00\u3001\u4e8c\u79cd\u4fee\u5efa\u65b9\u5f0f\u5462\uff1f\u65e0\u975e\u5c31\u662f\u628a\u6240\u6709\u4fee\u5efa\u4e86\u673a\u573a\u548c\u4fee\u5efa\u4e86\u6e2f\u53e3\u7684\u70b9\u5206\u522b\u5168\u90e8\u8fde\u63a5\u8d77\u6765\u3002\n\n\u5f53\u7136\uff0c\u4e24\u4e24\u4e4b\u95f4\u5efa\u8fb9\u7684\u8bdd\uff0c\u590d\u6742\u5ea6\u662f $\\mathcal O(n^2)$ \u7684\uff0c\u6548\u7387\u592a\u4f4e\u4e86\u3002\n\n\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u5efa\u8fd9\u4e48\u591a\u8fb9\uff0c\u6211\u4eec\u53ea\u9700\u8981\u65b0\u5efa\u4e00\u4e2a\u865a\u62df\u7ed3\u70b9\uff0c\u5e76\u5c06\u6240\u6709\u70b9\u8fde\u5411\u8fd9\u4e2a\u865a\u62df\u7ed3\u70b9\uff0c\u8fb9\u6743\u4e3a\u5efa\u9020\u673a\u573a/\u6e2f\u53e3\u7684\u82b1\u8d39\u3002\n\n\u6709\u4e00\u79cd\u66f4\u5f62\u8c61\u7684\u7406\u89e3\u65b9\u5f0f\uff1a\n\n- \u5728\u67d0\u4e2a\u70b9\u5efa\u673a\u573a\u5c31\u662f\u5efa\u4e00\u6761\u4ece\u8fd9\u4e2a\u70b9\u5230\u5929\u7a7a\u7684\u8fb9\u3002\n\n- \u5728\u67d0\u4e2a\u70b9\u5efa\u6e2f\u53e3\u5c31\u662f\u5efa\u4e00\u6761\u4ece\u8fd9\u4e2a\u70b9\u5230\u6c34\u57df\u7684\u8fb9\u3002\n\n\u4e8e\u662f\u95ee\u9898\u5c31\u5f88\u7b80\u5355\u4e86\u3002\u679a\u4e3e\u70b9\u96c6\u662f\u5426\u5305\u542b\u4e24\u4e2a\u540d\u4e3a\u201c\u5929\u7a7a\u201d\u201c\u6c34\u57df\u201d\u7684\u7ed3\u70b9\uff0c\u5206\u522b\u8dd1\u6700\u5c0f\u751f\u6210\u6811\u5373\u53ef\u3002\n\n### Code\n\n```cpp\n#include <cstdio>\n#include <algorithm>\ntypedef long long ll;\nconst int NMAX = 2e5, MMAX = 6e5;\nconst ll INF = 1ll << 60;\nint N, M, A[NMAX + 7], B[NMAX + 7]; ll Z[NMAX + 7], X[NMAX + 7], Y[NMAX + 7];\nint n, m;\nstruct edge {\n\tint a, b; ll w;\n\tbool operator <(edge ed) {return w < ed.w;}\n}l[MMAX + 7];\nint fa[NMAX + 7], siz[NMAX + 7];\nint anc(int i) {return i == fa[i] ? i : fa[i] = anc(fa[i]);}\nll solve() { // MST\uff0c\u8bb0\u5f97\u5224\u65e0\u89e3\n\tll res = 0; int cnt = 0;\n\tstd::sort(l + 1, l + m + 1);\n\tfor(int i = 1; i <= n; i++)\n\t\tfa[i] = i, siz[i] = 1;\n\tfor(int i = 1; i <= m; i++) {\n\t\tint a = l[i].a, b = l[i].b; ll w = l[i].w;\n\t\tif((a = anc(a)) == (b = anc(b))) continue;\n\t\tif(siz[a] > siz[b]) std::swap(a, b);\n\t\tres += w, fa[a] = b, siz[b] += siz[a];\n\t\tif(++cnt >= n - 1) break;\n\t}\n\tres = cnt < n - 1 ? INF : res;\n\treturn res;\n}\nll ans;\nint main() {\n\tscanf(\"%d %d\", &N, &M);\n\tfor(int i = 1; i <= N; i++)\n\t\tscanf(\"%lld\", &X[i]);\n\tfor(int i = 1; i <= N; i++)\n\t\tscanf(\"%lld\", &Y[i]);\n\tfor(int i = 1; i <= M; i++)\n\t\tscanf(\"%d %d %lld\", &A[i], &B[i], &Z[i]);\n\tfor(int i = 1; i <= M; i++) // \u53ea\u6709\u9053\u8def\n\t\tl[i] = (edge){A[i], B[i], Z[i]};\n\tn = N, m = M;\n\tans = solve();\n\t++n, m += N;\n\tfor(int i = 1; i <= M; i++) // \u6709\u6d77\u6e2f\n\t\tl[i] = (edge){A[i], B[i], Z[i]};\n\tfor(int i = 1; i <= N; i++)\n\t\tl[M + i] = (edge){i, n, Y[i]};\n\tans = std::min(ans, solve());\n\tfor(int i = 1; i <= M; i++) // \u6709\u673a\u573a\n\t\tl[i] = (edge){A[i], B[i], Z[i]};\n\tfor(int i = 1; i <= N; i++)\n\t\tl[M + i] = (edge){i, n, X[i]};\n\tans = std::min(ans, solve());\n\tfor(int i = 1; i <= M; i++) // \u90fd\u6709\n\t\tl[i] = (edge){A[i], B[i], Z[i]};\n\tfor(int i = 1; i <= N; i++)\n\t\tl[M + i] = (edge){i, n, X[i]};\n\tfor(int i = 1; i <= N; i++)\n\t\tl[m + i] = (edge){i, n + 1, Y[i]};\n\t++n, m += N;\n\tans = std::min(ans, solve());\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1666591175,
        "uid": 411560,
        "name": "NobodyThere",
        "ccfLevel": 0,
        "title": "ABC270F \u9898\u89e3"
    },
    {
        "content": "# [Transportation](https://www.luogu.com.cn/problem/AT_abc270_f)\n\n## \u9898\u610f\n\n\u6709 $n$ \u4e2a\u57ce\u5e02\uff0c\u4f60\u53ef\u4ee5\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\u82e5\u5e72\u6b21\uff1a\n\n- \u9009\u62e9\u4e00\u4e2a\u6ca1\u6709\u5efa\u673a\u573a\u7684\u57ce\u5e02 $i$\uff0c\u82b1\u8d39 $x_i$ \u5efa\u4e00\u4e2a\u673a\u573a\u3002\n- \u9009\u62e9\u4e00\u4e2a\u6ca1\u6709\u5efa\u6e2f\u53e3\u7684\u57ce\u5e02 $i$\uff0c\u82b1\u8d39 $y_i$ \u5efa\u4e00\u4e2a\u6e2f\u53e3\u3002\n\n\u8fd8\u6709 $m$ \u6761\u6ca1\u6709\u4fee\u5efa\u7684\u9053\u8def\uff0c\u7b2c $i$ \u6761\u9053\u8def\u53cc\u5411\u8fde\u63a5 $a_i$ \u548c $b_i$\uff0c\u4fee\u5efa\u8fd9\u6761\u9053\u8def\u9700\u8981\u82b1\u8d39 $z_i$\u3002\n\n\u4e24\u4e2a\u57ce\u5e02 $u$ \u548c $v$ \u76f4\u63a5\u53ef\u8fbe\u5f53\u4e14\u4ec5\u5f53\uff1a\n\n- $u$ \u548c $v$ \u90fd\u6709\u673a\u573a\u3002\n- $u$ \u548c $v$ \u90fd\u6709\u6e2f\u53e3\u3002\n- $u$ \u548c $v$ \u76f4\u63a5\u6709\u4e00\u6761\u9053\u8def\u3002\n\n\u6c42\u6700\u5c0f\u82b1\u8d39\uff0c\u4f7f\u5f97\u4ece\u4efb\u610f\u4e00\u4e2a\u57ce\u5e02 $u$ \u53ef\u4ee5\u5728\u7ecf\u8fc7\u82e5\u5e72\u57ce\u5e02\u540e\u62b5\u8fbe\u4efb\u610f\u4e00\u4e2a\u57ce\u5e02 $v$\u3002\n\n## \u601d\u8def\n\n\u8fd9\u9898\u53ea\u8003\u5efa\u56fe\u548c\u6700\u5c0f\u751f\u6210\u6811\u3002\n\n### \u521d\u6b65\u8003\u8651\n\n\u9996\u5148\uff0c\u4e0d\u770b\u673a\u573a\u548c\u6e2f\u53e3\uff0c\u90a3\u4e48\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u6700\u5c0f\u751f\u6210\u6811\u95ee\u9898\u3002\n\n### \u7279\u6b8a\u60c5\u51b5\n\n\u90a3\u4e48\u6709\u673a\u573a\u5462\uff1f\u753b\u5f20\u8349\u56fe\u770b\u770b\u5427\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ufr9aisv.png)\n\n\u4e0a\u9762\u90a3\u79cd\u5efa\u56fe\u65b9\u5f0f\uff0c\u5c31\u662f\u5728\u4e24\u4e2a\u6709\u673a\u573a\u7684\u57ce\u5e02\u95f4\u5efa\u8fb9\uff0c\u4e0d\u4ec5\u96be\u4ee5\u7ef4\u62a4\u82b1\u8d39\uff0c\u4f60\u4e5f\u4e0d\u77e5\u9053\u6709\u591a\u5c11\u4e2a\u57ce\u5e02\u5efa\u4e86\u673a\u573a\uff0c\u5efa\u56fe\u65b9\u5f0f\u4e0d\u591f\u4f18\u79c0\u3002\n\n### \u4f18\u5316\u5efa\u56fe\n\n\u8fd9\u79cd\u5efa\u56fe\u65b9\u5f0f\u503c\u5f97\u601d\u8003\u3002\n\n\u6839\u636e\u9898\u610f\uff0c\u4e24\u4e2a\u6709\u673a\u573a\u7684\u57ce\u5e02\u53ef\u4ee5\u4e92\u76f8\u62b5\u8fbe\uff0c**\u76f8\u5f53\u4e8e\u6709\u4e00\u4e2a\u673a\u573a\u805a\u96c6\u5730**\uff0c\u8bbe\u7acb\u673a\u573a\u7684\u57ce\u5e02\u53ef\u4ee5\u6765\u5230\u8fd9\u4e2a\u805a\u96c6\u5730\uff0c\u5e76\u4ece\u8fd9\u91cc\u8d70\u5411\u53e6\u5916\u4e00\u4e2a\u8bbe\u7acb\u673a\u573a\u7684\u57ce\u5e02\u3002\n\n\u90a3\u4e48\u7ef4\u62a4\u8d77\u6765\u5c31\u5f88\u65b9\u4fbf\u4e86\uff0c\u5047\u5b9a\u673a\u573a\u805a\u96c6\u5730\u5728 $n+1$\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u628a $i = 1,2\\cdots n$ \u4e2d\u7684\u6bcf\u4e2a $i$ \u90fd\u5411 $n + 1$ \u5efa\u7acb\u4e00\u6761\u5019\u9009\u8fb9\uff0c\u8fb9\u6743\u4e3a $x_i$\u3002\n\n\u4e0a\u56fe\u5c31\u4f1a\u53d8\u6210\uff1a \n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ibcmcc94.png)\n\n\u6e2f\u53e3\u540c\u7406\uff0c\u5c06\u805a\u96c6\u5730\u8bbe\u7f6e\u4e3a\u4e0e\u673a\u573a\u805a\u96c6\u5730\u4e0d\u540c\u7684\u4e00\u4e2a\u5373\u53ef(\u4e5f\u4e0d\u80fd\u548c\u4efb\u4f55\u4e00\u5ea7\u57ce\u5e02\u4e0b\u6807\u76f8\u540c)\uff0c\u5efa\u8bae\u8bbe\u4e3a $n+2$\u3002\n\n### \u6700\u540e\u601d\u8003\n\n\u53ef\u6211\u5e76\u4e0d\u77e5\u9053\u662f\u5426\u8981\u901a\u8fc7\u5efa\u7acb\u673a\u573a\u6765\u4e92\u76f8\u62b5\u8fbe\u554a\uff1f\n\n\u8fd9\u4e2a\u4e5f\u4e0d\u96be\uff0c\u679a\u4e3e\u662f\u5426\u5efa\u7acb\u673a\u573a\u548c\u662f\u5426\u5efa\u7acb\u6e2f\u53e3\uff0c\u8dd1\u4e00\u904d\u514b\u9c81\u65af\u5361\u5c14\uff0c\u6c42\u51fa $4$ \u79cd\u60c5\u51b5\u4e2d\u82b1\u8d39\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n## \u590d\u6742\u5ea6\n\n- \u65f6\u95f4\uff1a$O((n+m) \\log (n+m))$\u3002\n- \u7a7a\u95f4\uff1a$O(n+m)$\u3002\n\n## Code\n\n```cpp\n#include <iostream>\n#include <algorithm>\n\nusing namespace std;\nusing ll = long long;\n\nconst int N = 2e5 + 10, E = 6e5 + 10;\n\nstruct Edge {\n  int x, y, z;\n  bool operator < (const Edge &i) const {\n    return z < i.z;\n  }\n} e[N], a[E];\n\nint n, m, x[N], y[N], fa[N], ae;\nll ans = 1e18;\n\nint Find (int x) {\n  return (fa[x] ? fa[x] = Find(fa[x]) : x);\n}\n\nll kruskal (bool f1, bool f2) { // \u514b\u9c81\u65af\u5361\u5c14\u7b97\u6cd5\n  ll sum = 0;\n  int num = 0;\n  sort(a + 1, a + ae + 1);\n  for (int i = 1; i <= ae; i++) { // \u8fd9\u4e9b\u4e0d\u7528\u8bf4\u4e86\u5427\n    int l = Find(a[i].x), r = Find(a[i].y);\n    if (l != r) {\n      sum += a[i].z, num++, fa[l] = r;\n    }\n  }\n  if (num == n + f1 + f2 - 1) { // \u6ce8\u610f\uff01\u9898\u76ee\u5e76\u4e0d\u4fdd\u8bc1\u5728\u53ea\u8d70\u666e\u901a\u9053\u8def\u7684\u60c5\u51b5\u4e0b\u4e00\u5b9a\u5408\u6cd5\uff0c\u9700\u5224\u65ad\n    return sum;\n  }\n  return 1e18;\n}\n\nint main () {\n  ios::sync_with_stdio(0), cin.tie(0);\n  cin >> n >> m;\n  for (int i = 1; i <= n; i++) {\n    cin >> x[i];\n  }\n  for (int i = 1; i <= n; i++) {\n    cin >> y[i];\n  }\n  for (int i = 1; i <= m; i++) {\n    cin >> e[i].x >> e[i].y >> e[i].z;\n  }\n  for (int i = 0; i < 2; i++) { // \u662f\u5426\u5efa\u7acb\u673a\u573a\n    for (int j = 0; j < 2; j++) { // \u662f\u5426\u5efa\u7acb\u6e2f\u53e3\n      for (int k = 1; k <= n + 2; k++) {\n        fa[k] = 0; // \u5148\u6e05\u7a7a\n      }\n      ae = 0;\n      for (int k = 1; k <= m; k++) { // m \u6761\u9053\u8def\n        a[++ae] = e[k];\n      }\n      if (i) { // \u8d70\u673a\u573a\n        for (int k = 1; k <= n; k++) {\n          a[++ae] = {k, n + 1, x[k]};\n        }\n      }\n      if (j) { // \u8d70\u6e2f\u53e3\n        for (int k = 1; k <= n; k++) {\n          a[++ae] = {k, n + 2, y[k]};\n        }\n      }\n      ans = min(ans, kruskal(i, j));\n    }\n  }\n  cout << ans;\n  return 0;\n}\n```\n\n",
        "postTime": 1684338246,
        "uid": 724052,
        "name": "luogu_wsy0704",
        "ccfLevel": 5,
        "title": "AT_abc270_f Transportation \u9898\u89e3"
    },
    {
        "content": "ABC270F\n\n\u9898\u76ee\u5927\u610f\n\n\u6709 $n$ \u4e2a\u70b9\uff0c\u6709 $m$ \u6761\u53ef\u4f9b\u9009\u62e9\u7684\u65e0\u5411\u8fb9\uff0c\u8fb9\u6709\u8fb9\u6743\uff0c\u540c\u65f6\uff0c\u4f60\u8fd8\u53ef\u4ee5\u5728\u57ce\u5e02 $i$ \u5efa\u4e0a\u822a\u7a7a\u6e2f\u6216\u7801\u5934\uff0c\u5efa\u822a\u7a7a\u6e2f\u7684\u4ee3\u4ef7\u4e3a $x_i$\uff0c\u5efa\u7801\u5934\u7684\u4ee3\u4ef7\u4e3a $y_i$\uff0c\u62e5\u6709\u822a\u7a7a\u6e2f\u7684\u7684\u57ce\u5e02\u53ef\u4ee5\u4e92\u76f8\u5230\u8fbe\uff0c\u540c\u7406\uff0c\u62e5\u6709\u7801\u5934\u7684\u57ce\u5e02\u4e5f\u53ef\u4ee5\u4e92\u76f8\u5230\u8fbe\uff0c\u6c42\u4f7f\u8be5\u56fe\u8054\u901a\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\n\n\u8003\u8651\u5efa $2$ \u4e2a\u865a\u70b9\uff0c\u5206\u522b\u5c06\u8fd9\u4e24\u4e2a\u865a\u70b9\u8fde\u5411\u6240\u6709\u70b9\uff0c\u8fb9\u6743\u5206\u522b\u4e3a $x_i$ \u548c $y_i$\uff0c\u4f46\u8fd9\u6837\u76f4\u63a5\u8dd1\u6700\u5c0f\u751f\u6210\u6811\u4f1a\u5b58\u5728\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u8fd9\u4e24\u4e2a\u865a\u70b9\u4e00\u5b9a\u90fd\u88ab\u9009\u5230\u4e86\uff0c\u5373\u4e00\u5b9a\u4f1a\u5efa\u9020\u822a\u7a7a\u6e2f\u548c\u7801\u5934\uff0c\u7136\u800c\u8fd9\u6837\u5e76\u4e0d\u4e00\u5b9a\u4f1a\u66f4\u4f18\uff0c\u56e0\u6b64\u8fdb\u4e00\u6b65\u8fdb\u884c\u5206\u7c7b\u8ba8\u8bba\uff0c\u5373\u662f\u5426\u4f7f\u7528\u8fd9\u4e24\u4e2a\u865a\u70b9\uff0c\u6bcf\u6b21\u90fd\u76f4\u63a5\u8dd1 Kruskal\uff0c\u6700\u540e\u518d\u5c06\u6240\u6709\u7b54\u6848\u53d6\u4e2a\u6700\u5c0f\u503c\u5373\u53ef\u3002",
        "postTime": 1664084644,
        "uid": 360977,
        "name": "541forever",
        "ccfLevel": 0,
        "title": "ABC270F"
    },
    {
        "content": "### \u601d\u8def\n\u5982\u679c\u8981\u8ba9\u4ef7\u503c\u6700\u5c0f\uff0c\u90a3\u80af\u5b9a\u662f\u7528 `\u6700\u5c0f\u751f\u6210\u6811` \u5566~\n\n\u53ea\u9700\u8981\u5efa\u7acb\u4e24\u4e2a\u8d85\u7ea7\u6e90\u70b9\uff0c\u505a\u56db\u6b21\u6700\u5c0f\u751f\u6210\u6811\uff0c\u5206\u522b\u4e3a\uff1a\u9053\u8def\u3001\u673a\u573a\u3001\u6d77\u6e2f\u3001\u90fd\u6709\uff08\u53ef\u4ee5\u4e0d\u5efa\u673a\u573a\u548c\u6d77\u6e2f\uff09\u3002\n\n\u6700\u540e\u53d6\u8fd9\u56db\u8005\u7684\u6700\u5c0f\u503c\uff0c\u5c31\u662f\u672c\u9898\u7684\u7b54\u6848\u4e86\u3002\n\n### Code\n\u4ee3\u7801\u8d34\u4e0a\uff0c\u6ce8\u91ca\u5728\u4e0a\uff1a\n```cpp\n#include <bits/stdc++.h>//\u4e07\u80fd\u5934\n#define LL long long// \u7b80\u5199 long long\nusing namespace std;\nconst int N = 2e5 + 5;// \u6700\u5927\u6570\u7ec4\nconst LL inf = 0x3f3f3f3f3f3f3f7f;//\u6700\u5927\u503c\nstruct edge {// \u7ed3\u6784\u4f53\n    int x, y, z;//\u4ecex\u5230y\u9700\u8981\u82b1\u8d39z\n    bool friend operator<(edge x, edge y) { return x.z < y.z; }//\u81ea\u52a8\u6392\u5e8f\n} e[N << 2];\nint n, m, idx, a[N], b[N], u[N], v[N], w[N], fa[N];//\u5b9a\u4e49\u6570\u7ec4\nLL ans = inf;\ninline int Get(int x) { return fa[x] == x ? x : fa[x] = Get(fa[x]); }//\u5e76\u67e5\u96c6\ninline LL Kruskal(int n) {\n    for (int i = 1; i <= n; i++) fa[i] = i;//\u521d\u59cb\u5316\n    sort(e + 1, e + 1 + idx);//\u6392\u5e8f\u2014\u2014\u8d2a\u5fc3\u7b56\u7565\n    LL res = 0, cnt = 0;//\u4ee5\u4e0b\u7684\u662f\u6a21\u677f\n    for (int i = 1, fx, fy; i <= idx && cnt < n - 1; i++) {\n        fx = Get(e[i].x);\n        fy = Get(e[i].y);\n        if (fx ^ fy)// \u53ef\u4ee5\u5199\u6210 if(fx!=fy)\n            fa[fx] = fy, ++cnt, res += e[i].z;\n    }\n    return cnt == n - 1 ? res : inf;//\u8fd4\u56de\u503c\n}\nint main() {\n    //\u8f93\u5165\n    cin >> n >> m;\n    for (int i = 1; i <= n; i++) cin >> a[i];\n    for (int i = 1; i <= n; i++) cin >> b[i];\n    for (int i = 1; i <= m; i++) cin >> u[i] >> v[i] >> w[i];\n    //\u56db\u6b21\u6700\u5c0f\u751f\u6210\u6811\n    for (int k = 0, node; k < 4; k++) {\n        node = n, idx = 0;\n        if (k & 1) {\n            ++node;\n            for (int i = 1; i <= n; i++) e[++idx] = (edge){ i, node, a[i] };\n        }\n        if (k & 2) {\n            ++node;\n            for (int i = 1; i <= n; i++) e[++idx] = (edge){ i, node, b[i] };\n        }\n        for (int i = 1; i <= m; i++) e[++idx] = (edge){ u[i], v[i], w[i] };\n        ans = min(ans, Kruskal(node));//\u53d6\u6700\u5c0f\u503c\n    }\n    cout << ans << endl;//\u8f93\u51fa\n    return 0;\n}\n```",
        "postTime": 1673591223,
        "uid": 701202,
        "name": "high_sky",
        "ccfLevel": 0,
        "title": "AT_abc270_f [ABC270F] Transportation \u9898\u89e3"
    }
]