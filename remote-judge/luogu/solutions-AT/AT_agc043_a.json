[
    {
        "content": "\u5728\u6211\u7684[\u535a\u5ba2](https://oi-master.github.io/post/atcoder-agc-043-a-ti-jie/)\u9605\u8bfb\u4f53\u9a8c\u66f4\u597d\u54e6\uff01\n\n\u8fd9\u9053\u9898\u628a\u6211\u5751\u7684\u65e0\u8bdd\u53ef\u8bf4\uff0c\u5b9e\u5728\u662f\u670d\u4e86\u8fd9\u4e2a\u505a\u6cd5\u3002\u52a8\u6001\u89c4\u5212\uff01\u5f53\u65f6\u6ca1\u60f3\u51fa\u6765\uff0c\u73b0\u5728\u60f3\u60f3\uff0c\u611f\u89c9\u81ea\u5df1\u7406\u89e3\u5f97\u5dee\u4e0d\u591a\u4e86\u2026\u2026\u597d\u4e86\uff0c\u56de\u5f52\u6b63\u9898\uff0c\u6211\u4eec\u5148\u6309\u7167\u8001\u914d\u65b9\u2014\u2014\u9898\u9762\u5148\u3002\n\n## \u9898\u9762\n### \u82f1\u6587\u9898\u9762\n\u8bf7\u4f60\u8d70 [\u8fd9\u91cc](https://atcoder.jp/contests/agc043/tasks/agc043_a) \uff0c\u4f1a\u5e26\u4f60\u53bb Atcoder \u5b98\u7f51\u3002\n\n### \u4e2d\u6587\u9898\u9762\n\u8fd9\u9053\u9898\u5927\u610f\u662f\u8fd9\u6837\u7684\uff1a\n\n\u7ed9\u4f60\u4e00\u4e2a $H\\times W$ \u7684\u8ff7\u5bab\uff0c\u5176\u4e2d\uff0c\u201c.\u201d\u4ee3\u8868\u7a7a\u5730\uff0c\u201c#\u201d\u4ee3\u8868\u5899\u3002\u73b0\u5728\uff0c\u8ba9\u4f60\u4ece\u5de6\u4e0a\u89d2\u7684 $(1, 1)$ \u8d70\u5230\u53f3\u4e0b\u89d2\u7684 $(H, W)$ \uff0c\u53ea\u80fd\u8d70\u53f3\u8fb9\u6216\u4e0b\u9762\u3002\u4e0d\u8fc7\uff0c\u8fd9\u4e0e\u5f80\u5e38\u7684\u9898\u76ee\u4e0d\u4e00\u6837\uff0c\u4e0d\u662f\u95ee\u4f60\u6700\u5c11\u8981\u8d70\u591a\u5c11\u6b65\uff0c\u4e5f\u4e0d\u662f\u6709\u51e0\u79cd\u8d70\u6cd5\u3002\u5176\u5b9e\uff0c\u8fd9\u4e2a\u8ff7\u5bab\u53ef\u80fd\u4e0d\u540c\uff0c\u73b0\u5728\u7ed9\u4f60\u4e00\u4e2a\u6761\u4ef6\uff0c\u5c31\u662f\u9009\u62e9\u4e00\u4e2a\u77e9\u9635\uff0c\u628a\u8fd9\u4e2a\u533a\u57df\u5185\u7684\u6240\u6709\u7684\u7a7a\u5730\u8f6c\u6210\u5899\uff0c\u5899\u8f6c\u6210\u7a7a\u5730\u3002\u95ee\u4f60\u6700\u5c11\u8981\u591a\u5c11\u4e2a\u64cd\u4f5c\u624d\u80fd\u4fdd\u8bc1\u80fd\u540c\u884c\u3002\n## \u601d\u8def\n\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u5148\u770b\u679a\u4e3e\u3002\u679a\u4e3e\u4ec0\u4e48\u5462\uff1f\u679a\u4e3e\u64cd\u4f5c\u6b21\u6570\uff0c\u7136\u540e\u5728\u5d4c\u5957\u4e00\u4e2a\u679a\u4e3e\u5728\u54ea\u91cc\u64cd\u4f5c\uff1f\u7b54\u6848\u662f\u5b8c\u7f8e\u7684\uff0c\u4e0d\u4f1a\u9519\uff0c\u4f46\u662f\u4f60\u4e0d\u7528\u5199\u4e86\uff0c\u4e00\u5b9a\u4f1a\u8d85\u65f6\u3002\n\n\u7136\u540e\uff0c\u6211\u4eec\u8003\u8651\u8d2a\u5fc3\u3002\u5982\u4f55\u8d2a\u5fc3\uff1f\u8fd9\u4ecd\u7136\u662f\u4e2a\u95ee\u9898\u3002\u597d\u50cf\u8d2a\u5fc3\u5f88\u96be\u60f3\u5168\uff0c\u60c5\u51b5\u8f83\u591a\u3002\u90a3\u4e48\u5f15\u7528\u4e00\u4f4d\u5b66\u957f\u7684\u8bdd\uff0c\u53eb\u505a\uff1a\n\n> \u8d2a\u5fc3\u4e0d\u884c\u5c31 DP \u3002\n\n\u597d\u7684\uff0c~~\u4e3a\u4e86\u9a8c\u8bc1\u8fd9\u53e5\u8bdd\u7684\u6b63\u786e\u6027~~\uff0c\u6211\u4eec\u5c31\u505a\u4e00\u4e0b DP \u5427\u3002\u4e0d\u8fc7\uff0c\u8fd9\u9053\u9898\u7684 DP \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u6709\u70b9\u96be\u60f3\uff0c\u663e\u7136\uff0c\u72b6\u6001\u8f83\u591a\uff0c\u4e00\u4e0d\u5c0f\u5fc3\u5957\u4e2a\u56db\u91cd\u5faa\u73af\u5c31\u4f1a\u7206\uff08\u5176\u5b9e\u4e0d\u4e00\u5b9a\uff0c\u4e0d\u8fc7\u4f30\u8ba1\u8bc4\u6d4b\u673a\u4e0d\u662f\u7528\u73b0\u5728\u7684\u9ad8\u7ea7 CPU\uff0c\u800c\u662f\u50cf CCF \u7edf\u4e00\u8bc4\u6d4b\u8001\u7237\u673a\u6765\u8bc4\u6d4b\u7684\uff0c\u6700\u597d\u4e0d\u8981\u5192\u8fd9\u4e2a\u9669\uff09\uff0c\u6240\u4ee5\uff0c\u8fd9\u4e2a DP \u53c8\u662f\u4e00\u4e2a\u96be\u5199\u7684 DP \u554a\uff0c\u4e0d\u597d\u60f3\u3002\n\n\u5361\u5728\u8fd9\u91cc\u663e\u7136\u4e0d\u592a\u5408\u9002\uff0c\u6211\u4eec\u5148\u770b\u4e00\u4e0b\u8981\u4f60\u5199\u7684\u4ee3\u7801\u5427\uff0c\u4ece\u5fae\u89c2\u5f00\u59cb\u8bb2\u3002\u5148\u63d0\u524d\u8bf4\u4e00\u4e0b\uff0c\u8fd9\u4e2a\u4ee3\u7801\u4e0d\u662f\u672c\u4eba\u81ea\u5df1\u5199\u7684\uff0c\u800c\u662f\u4e00\u4f4d\u5927\u4f6c hhhyyyfff \u5199\u7684\uff0c\u5728\u6b64\u5148\u819c\u62dc\u4e00\u4e0b\u3002\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n\nusing namespace std;\n\nchar s[110][110];\nint H, W, f[110][110];\n\nint main() {\n    scanf(\"%d%d\", &H, &W);\n    for (int i = 1; i <= H; ++i) scanf(\"%s\", s[i] + 1);\n\n    f[1][1] = s[1][1] == '#';\n    for (int i = 2; i <= W; ++i)\n        f[1][i] = f[1][i - 1] + (s[1][i - 1] == '.' && s[1][i] == '#');\n    for (int i = 2; i <= H; ++i)\n        f[i][1] = f[i - 1][1] + (s[i - 1][1] == '.' && s[i][1] == '#');\n    for (int i = 2; i <= H; ++i)\n        for (int j = 2; j <= W; ++j)\n            f[i][j] = min(f[i - 1][j] + (s[i - 1][j] == '.' && s[i][j] == '#'),\n                          f[i][j - 1] + (s[i][j - 1] == '.' && s[i][j] == '#'));\n    printf(\"%d\\n\", f[H][W]);\n    return 0;\n}\n```\n\u9996\u5148\uff0c\u8bfb\u5165\u6ca1\u4ec0\u4e48\u96be\u7684\u4e8b\u60c5\u4e86\uff0c\u4e3b\u8981\u5c31\u662f\u540e\u9762\u7684 DP \u3002\n\n\u7b2c\u4e00\u884c\u4e0e\u7b2c\u4e00\u5217\u7684\u521d\u59cb\u5316\u5927\u5bb6\u5e94\u8be5\u4e5f\u80fd\u770b\u5f97\u61c2\uff0c\u77e5\u9053\u8fd9\u662f\u4ec0\u4e48\u610f\u601d\u3002\u552f\u72ec\u540e\u9762\u7684\u6761\u4ef6\u662f\u4ec0\u4e48\u610f\u601d\u8fd8\u4e0d\u77e5\u9053\u3002\u5f85\u4f1a\u6211\u4f1a\u89e3\u91ca\u7684\uff0c\u60a8\u4eec\u653e\u5fc3\u3002\n\n\u7136\u540e\uff0c\u5c31\u662f\u4e3b\u8981\u7684 DP \u4e86\uff0c\u53d1\u73b0\u4ecd\u7136\u5f88\u7b80\u5355\u3002\u5f53\u4f60\u4e0d\u770b\u540e\u9762\u90a3\u4e2a `(s[i - 1][j] == '.' && s[i][j] == '#')` \u65f6\uff0c\u4f60\u4e00\u5b9a\u4f1a\u5c16\u53eb\uff1a\n\n> \u8fd9\u4e2a DP \u592a\u571f\u4e86\uff01\u6bd4 [\u4f20\u7eb8\u6761](https://www.luogu.com.cn/problem/P1006) \u8fd8\u7b80\u5355\u5450\uff01\n\n\u770b\u6765\uff0c\u4e3b\u8981\u7684\u6838\u5fc3\u5c31\u5728\u90a3\u4e00\u4e2a\u8868\u8fbe\u5f0f\u4e0a\u9762\u4e86\u3002\u8868\u8fbe\u5f0f\u7684\u610f\u601d\u662f\uff0c\u8fd9\u4e2a\u70b9\u8981\u4e0d\u8981\u518d\u7ffb\u4e00\u6b21\uff0c\u5bf9\u4e0d\u5bf9\uff1f\u8fd9\u662f\u663e\u800c\u6613\u89c1\u7684\u3002\n\n\u9996\u5148\uff0c\u5982\u679c\u8fd9\u4e2a\u70b9\u4e0d\u662f\u5899\uff0c\u90a3\u4e48\u5c0f\u8868\u8fbe\u5f0f\u7684\u503c\u4e00\u5b9a\u4e3a $0$ \u3002\n\n\u6211\u4eec\u6765\u770b\u770b\uff0c\u5982\u679c\u4e0a\u4e00\u6b65\u662f\u4ece\u4e0a\u65b9\u8d70\u4e0b\u6765\u7684\uff0c\u4e14\u4e0a\u65b9\u662f\u4e2a\u5899\uff0c\u90a3\u4e48\u8981\u4e0d\u8981\u7ffb\uff1f\u663e\u7136\uff0c\u4e0a\u8fb9\u7ffb\u7684\u65f6\u5019\uff0c\u628a\u8fd9\u4e00\u683c\u7684\u5899\u4e5f\u540c\u65f6\u7ffb\u6389\u4e86\uff0c\u6240\u4ee5\uff0c\u4e0d\u7528\u518d\u7ffb\u3002\u4f46\u662f\u5982\u679c\u4e0a\u9762\u4e00\u683c\u662f\u7a7a\u5730\u5462\uff1f\u8bf4\u660e\u6ca1\u6709\u7ffb\u5230\u8fd9\u4e2a\u5899\uff0c\u8fd9\u4e2a\u5899\u8fd8\u8981\u518d\u7ffb\u4e00\u6b21\u3002\n\n\u5de6\u8fb9\u7684\u4e5f\u662f\u5bf9\u79f0\u7684\u3002\n\n\u563f\uff0c\u8ba9\u6211\u4eec\u5f80\u5b8f\u89c2\u8d70\u8d70\u3002\u8fd9\u4e2a DP \u5341\u5206\u5de7\u5999\uff0c\u5728\u8bb0\u5f55\u6700\u5c11\u7684\u7ffb\u7684\u6b21\u6570\u65f6\uff0c\u987a\u4fbf\u5c31\u628a\u7ffb\u7684\u6807\u8bb0\u4e5f\u5ef6\u7eed\u4e0b\u6765\u4e86\u3002\u5341\u5206\u6709\u610f\u601d\uff0c\u4e5f\u5f88\u5de7\u5999\u3002\n\n## \u4ee3\u7801\n\u8fd8\u662f\u521a\u521a\u7684\u4ee3\u7801\u3002\n\n\u8fd8\u662f stO hhhyyyfff Orz \u3002\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n\nusing namespace std;\n\nchar s[110][110];\nint H, W, f[110][110];\n\nint main() {\n    scanf(\"%d%d\", &H, &W);\n    for (int i = 1; i <= H; ++i) scanf(\"%s\", s[i] + 1);\n\n    f[1][1] = s[1][1] == '#';\n    for (int i = 2; i <= W; ++i)\n        f[1][i] = f[1][i - 1] + (s[1][i - 1] == '.' && s[1][i] == '#');\n    for (int i = 2; i <= H; ++i)\n        f[i][1] = f[i - 1][1] + (s[i - 1][1] == '.' && s[i][1] == '#');\n    for (int i = 2; i <= H; ++i)\n        for (int j = 2; j <= W; ++j)\n            f[i][j] = min(f[i - 1][j] + (s[i - 1][j] == '.' && s[i][j] == '#'),\n                          f[i][j - 1] + (s[i][j - 1] == '.' && s[i][j] == '#'));\n    printf(\"%d\\n\", f[H][W]);\n    return 0;\n}\n```\n\u672c\u6587\u5230\u6b64\u7ed3\u675f\u3002",
        "postTime": 1584841288,
        "uid": 317899,
        "name": "oimaster",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT5798 \u3010[AGC043A] Range Flip Find Route\u3011"
    },
    {
        "content": "\u6ce8\u610f\u5230\uff0c\u6700\u540e\u8d70\u7684\u8def\u7ebf\u4e00\u5b9a\u662f\u9ed1\u767d\u4ea4\u66ff\u7684\u3002\n\n\u6bcf\u4e00\u6b21\u7ffb\u8f6c\u989c\u8272\u90fd\u4e00\u5b9a\u662f\u5728\u8fdb\u5165\u9ed1\u8272\u7684\u65f6\u5019\uff0c\u5c06\u540e\u9762\u4e00\u6bb5\u9ed1\u8272\u7684\u8def\u53d8\u6210\u767d\u8272\u3002\n\n\u8fd9\u4e0e\u6700\u77ed\u8def\u5f88\u7c7b\u4f3c\uff0c\u7531\u4e8e\u8fb9\u6743\u53ea\u6709 $0/1$\uff0c\u56e0\u6b64\u672c\u9898\u7528 `deque` bfs \u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(nm)$\u3002\n\n```cpp\nconst int N = 107, inf = 1e9;\nint n, m, d[N][N], v[N][N];\nchar s[N][N];\ndeque<pi> q;\n\nint main() {\n\trd(n), rd(m);\n\tfor (int i = 1; i <= n; i++) rds(s[i], m);\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= m; j++)\n\t\t\td[i][j] = inf;\n\tq.pb(mp(1, 1)), d[1][1] = s[1][1] == '#';\n\twhile (q.size()) {\n\t\tpi x = q.front();\n\t\tq.pop_front();\n\t\tif (v[x.fi][x.se]) continue;\n\t\tv[x.fi][x.se] = 1;\n\t\tif (x.fi < n) {\n\t\t\tif (s[x.fi][x.se] == '.' && s[x.fi+1][x.se] == '#') {\n\t\t\t\tif (d[x.fi+1][x.se] > d[x.fi][x.se] + 1)\n\t\t\t\t\tq.pb(mp(x.fi + 1, x.se)), d[x.fi+1][x.se] = d[x.fi][x.se] + 1;\n\t\t\t} else {\n\t\t\t\tif (d[x.fi+1][x.se] > d[x.fi][x.se])\n\t\t\t\t\tq.push_front(mp(x.fi + 1, x.se)), d[x.fi+1][x.se] = d[x.fi][x.se];\n\t\t\t}\n\t\t}\n\t\tif (x.se < m) {\n\t\t\tif (s[x.fi][x.se] == '.' && s[x.fi][x.se+1] == '#') {\n\t\t\t\tif (d[x.fi][x.se+1] > d[x.fi][x.se] + 1)\n\t\t\t\t\tq.pb(mp(x.fi, x.se + 1)), d[x.fi][x.se+1] = d[x.fi][x.se] + 1;\n\t\t\t} else {\n\t\t\t\tif (d[x.fi][x.se+1] > d[x.fi][x.se])\n\t\t\t\t\tq.push_front(mp(x.fi, x.se + 1)), d[x.fi][x.se+1] = d[x.fi][x.se];\n\t\t\t}\n\t\t}\n\t}\n\tprint(d[n][m]);\n\treturn 0;\n}\n```",
        "postTime": 1584864564,
        "uid": 100544,
        "name": "xht",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 AT5798 \u3010[AGC043A] Range Flip Find Route\u3011"
    },
    {
        "content": "## DP\u9898\u3002\n\u6211\u4eec\u7528 $f_{i,j}$ \u6765\u8868\u793a\u8d70\u5230\u7b2c $i$ \u884c\u7b2c $j$ \u5217\u6700\u5c11\u8981\u533a\u95f4\u7ffb\u8f6c\u51e0\u6b21\u3002\n\n\u8003\u8651\u600e\u4e48\u72b6\u6001\u8f6c\u79fb\u3002\n\n\u9898\u76ee\u8bf4\uff0c\u53ea\u80fd\u5411\u4e0b\u6216\u5411\u53f3\u8d70\uff0c\u90a3\u4e48\u53ef\u4ee5\u5f97\u51fa\uff0c\u5f53\u524d\u70b9\u7684\u72b6\u6001\u53ea\u80fd\u4ece\u4ed6\u7684\u5de6\u8fb9\u548c\u4e0a\u8fb9\u8f6c\u79fb\u3002\n\n\u90a3\u600e\u4e48\u8f6c\u79fb\u5462\uff1f\n\n\u5bf9\u4e8e\u4e00\u4e2a\u70b9\uff0c\u5982\u679c\u662f '.' \uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u80af\u5b9a\u4e0d\u7528\u8986\u76d6\u3002\u7ffb\u8f6c\u6b21\u6570\u7b49\u4e8e\u4e0a\u4e00\u4e2a\u70b9\u3002\n\n\u5982\u679c\u8fd9\u4e2a\u70b9\u662f '#' \uff0c\u90a3\u4e48\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u4e0a\u4e00\u4e2a\u70b9\u4e5f\u8981\u7ffb\u8f6c\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u53ef\u4ee5\u548c\u4e0a\u4e00\u4e2a\u70b9\u5728\u540c\u4e00\u4e2a\u533a\u95f4\u91cc\u7ffb\u8f6c\u5373\u53ef\u3002\u7ffb\u8f6c\u6b21\u6570\u4e5f\u7b49\u4e8e\u4e0a\u4e00\u4e2a\u70b9\u3002\n\n\u5982\u679c\u4e0d\u662f\u4e0a\u9762\u4e24\u79cd\u60c5\u51b5\uff0c\u5c31\u4e3a\u4e0a\u4e00\u4e2a\u70b9\u52a0\u4e00\u3002\n\n## AC Code\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nint f[105][105];\nchar a[105][105];\ninline int read(){\n\tint x = 0, m = 1;\n\tchar ch = getchar();\n\twhile(!isdigit(ch)){\n\t\tif(ch == '-') m = -1;\n\t\tch = getchar();\n\t}\n\twhile(isdigit(ch)){\n\t\tx = x * 10 + ch - 48;\n\t\tch = getchar();\n\t}\n\treturn x * m;\n}\ninline void write(int x){\n\tif(x < 0){\n\t\tputchar('-');\n\t\twrite(-x);\n\t\treturn;\n\t}\n\tif(x >= 10) write(x / 10);\n\tputchar(x % 10 + '0');\n}\nsigned main(){\n\tint n = read(), m = read();\n\tchar ch;\n\tfor(int i = 1; i <= n; i++){\n\t\tfor(int j = 1; j <= m; j++){\n\t\t\tch = getchar();\n\t\t\twhile(ch != '.' && ch != '#'){\n\t\t\t\tch = getchar();\n\t\t\t}\n\t\t\ta[i][j] = ch;\n\t\t}\n\t}\n\tif(a[1][1] == '#') f[1][1] = 1;\n\telse f[1][1] = 0;\n\tfor(int i = 2; i <= n; i++){\n\t\tif(a[i][1] == '.' || a[i][1] == a[i - 1][1]) f[i][1] = f[i - 1][1];\n\t\telse f[i][1] = f[i - 1][1] + 1;\n\t}\n\tfor(int j = 2; j <= m; j++){\n\t\tif(a[1][j] == '.' || a[1][j] == a[1][j - 1]) f[1][j] = f[1][j - 1];\n\t\telse f[1][j] = f[1][j - 1] + 1;\n\t}\n\tint x, y;\n\tfor(int i = 2; i <= n; i++){\n\t\tfor(int j = 2; j <= m; j++){\n\t\t\tx = f[i - 1][j] + 1;\n\t\t\ty = f[i][j - 1] + 1;\n\t\t\tif(a[i][j] == '.'){\n\t\t\t\tx = f[i - 1][j];\n\t\t\t\ty = f[i][j - 1];\n\t\t\t}\n\t\t\tif(a[i][j] == a[i - 1][j]){\n\t\t\t\tx = f[i - 1][j];\n\t\t\t}\n\t\t\tif(a[i][j] == a[i][j - 1]){\n\t\t\t\ty = f[i][j - 1];\n\t\t\t}\n\t\t\tf[i][j] = min(x, y);\n\t\t}\n\t}\n\twrite(f[n][m]);\n}\n```\n",
        "postTime": 1616033727,
        "uid": 188286,
        "name": "cjZYZtcl",
        "ccfLevel": 6,
        "title": "T5798 [AGC043A] Range Flip Find Route \u9898\u89e3"
    },
    {
        "content": "### \u9898\u610f:\n\u7ed9\u51fa\u4e00\u4e2a\u77e9\u9635,\u6bcf\u4e2a\u683c\u5b50\u4e3a\u9ed1\u8272\u6216\u662f\u767d\u8272\n\n\u73b0\u5728\u5b9a\u4e49\u4e00\u6b21\u64cd\u4f5c\u4e3a\u7ffb\u8f6c\u4e00\u4e2a\u77e9\u5f62\u4e2d\u7684\u683c\u5b50\u7684\u989c\u8272\n\n\u6c42\u6700\u5c0f\u7684\u64cd\u4f5c\u6b21\u6570,\u4f7f\u5f97\u80fd\u591f\u53ea\u7ecf\u8fc7\u767d\u683c\u5b50\u4ece $(1,1)$ \u5230\u8fbe $(n,m)$,\u6bcf\u6b21\u53ea\u80fd\u5411\u5de6\u5411\u4e0b\u8d70\n\n### sol\n\n\u6700\u5f00\u59cb\u770b\u9519\u9898\u76ee\u4e86(\u7206\u70b8\n\n\u8003\u8651\u4e00\u6761\u8def\u5f84,\u53d1\u73b0\u5bf9\u4e8e\u4efb\u610f\u8fde\u7eed\u7684\u9ed1\u683c\u5b50\u6bb5,\u6211\u4eec\u90fd\u53ef\u4ee5\u901a\u8fc7\u4e00\u6b21\u7ffb\u8f6c\u4f7f\u5f97\u4ed6\u4eec\u53d8\u6210\u767d\u8272\u7684,\u6240\u4ee5\u95ee\u9898\u7b49\u4ef7\u4e8e\u627e\u5230\u4e00\u6761\u8def\u5f84,\u4f7f\u5f97\u9ed1\u683c\u5b50\u6bb5\u6700\u5c0f\n\n\u7136\u540e\u8bbe $f_{i,j}$ \u8868\u793a\u5230\u8fbe $(i,j)$ \u6700\u5c0f\u7684\u8fde\u7eed\u9ed1\u683c\u5b50\u6bb5\u6570\u662f\u591a\u5c11,\u7136\u540e\u76f4\u63a5\u8f6c\u79fb\u5373\u53ef\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<climits>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#include<queue>\n#include<set>\n#include<map>\n#define ll long long\nusing namespace std;\n//{{{ read()\ninline int read(){\n\tregister int x=0,f=1;\n\tregister char ch=getchar();\n\twhile(ch<'0'||ch>'9'){\n\t\tif(ch=='-')\tf=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9')\tx=x*10+(ch^48),ch=getchar();\n\treturn x*f;\n}\n//}}}\nconst int N=1005;\nchar s[N][N];\nint n,m,a[N][N];\nstruct P{\n\tint x,y,z;\n\tP (int xx=0,int yy=0,int zz=0){\n\t\tx=xx,y=yy,z=zz;\n\t}\n\tbool operator < (const P k) const{\n\t\treturn z>k.z;\n\t}\n};\npriority_queue<P> que;\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\tscanf(\"%s\",s[i]+1);\n\tmemset(a,27,sizeof(a));\n\ta[1][1]=(s[1][1]=='#');\n\tque.push(P(1,1,a[1][1]));\n\twhile(!que.empty()){\n\t\tP k=que.top();\tque.pop();\n\t\tint x=k.x,y=k.y,z=k.z;\n\t\tif(z!=a[x][y])\tcontinue;\n\t\tif(x<n){\n\t\t\tint k=z+(s[x+1][y]=='#'&&s[x][y]=='.');\n\t\t\tif(k<a[x+1][y])\ta[x+1][y]=k,que.push(P(x+1,y,k));\n\t\t}\n\t\tif(y<m){\n\t\t\tint k=z+(s[x][y+1]=='#'&&s[x][y]=='.');\n\t\t\tif(k<a[x][y+1])\ta[x][y+1]=k,que.push(P(x,y+1,k));\n\t\t}\n\t}\n\tcout<<a[n][m]<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1584836755,
        "uid": 88567,
        "name": "lzk5627",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 AT5798 \u3010[AGC043A] Range Flip Find Route\u3011"
    },
    {
        "content": "## \u89e3\u9898\u601d\u8def\n\u6211\u4eec\u7533\u8bf7\u4e00\u4e2a\u6570\u7ec4 $f[i][j][1/0]$ \u8bb0\u5f55\u4ece\u7b2c $(1,1)$ \u4f4d\u7f6e\uff0c\u5230 $(i,j)$ \u4f4d\u7f6e\uff0c\u4ece\u4e24\u4e2a\u65b9\u5411\u6765\uff08$\"1\"$ \u662f\u4ece\u4e0a\u8fb9\u6765\uff0c$\"0\"$ \u662f\u4ece\u5de6\u8fb9\u6765\uff09\u9700\u8981\u7684\u64cd\u4f5c\u6b21\u6570\u3002$a[i][j]$ \u8bb0\u5f55\u4f4d\u7f6e\u4e0a\u6709\u6ca1\u6709\u4e95\u53f7\u3002\u7531\u4e8e\u662f\u4e09\u7ef4\u7684\uff0c\u81ea\u8ba4\u4e3a\u6bd4\u8f83\u597d\u7406\u89e3\u3002\n \u4e0b\u9762\u5c31\u5230\u4e86\u63a8\u7406\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u7684\u65f6\u5019\u4e86\uff01\n- \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u7b2c $(i,j)$ \u4e2a\u4f4d\u7f6e\u4ece\u4e0a\u8fb9\u6765\u7684\u6700\u5c0f\u64cd\u4f5c\u6570\u5c31\u662f\u4e0a\u8fb9\u683c\u5b50 $(i-1,j)$ \u7684\u4ece\u4e24\u4e2a\u65b9\u5411\u6765\u7684\u64cd\u4f5c\u6570\u7684\u6700\u5c0f\u503c\u52a0\u4e0a\u8fd9\u4e2a\u4f4d\u7f6e\u662f\u4e0d\u662f\u4e95\u53f7\uff0c\u7b2c $(i,j)$ \u4e2a\u4f4d\u7f6e\u4ece\u5de6\u8fb9\u6765\u7684\u6700\u5c0f\u64cd\u4f5c\u6570\u5c31\u662f\u5de6\u8fb9\u683c\u5b50 $(i,j-1)$ \u7684\u4ece\u4e24\u4e2a\u65b9\u5411\u6765\u7684\u64cd\u4f5c\u6570\u7684\u6700\u5c0f\u503c\u52a0\u4e0a\u8fd9\u4e2a\u4f4d\u7f6e\u662f\u4e0d\u662f\u4e95\u53f7\u3002\n- \u5982\u679c\u5de6\u8fb9\u548c\u672c\u8eab\u90fd\u662f\u4e95\u53f7\uff0c\u5982\u679c\u8fd9\u4e48\u8d70\uff0c\u5c31\u53ea\u9700\u4e00\u6b21\u64cd\u4f5c\u5373\u53ef\uff0c\u5373\u5220\u9664\u8fd9\u4e24\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u4e95\u53f7\u3002\u6240\u4ee5\uff0c\u5982\u679c\u6ee1\u8db3\u8fd9\u4e00\u6761\u4ef6\uff0c\u5b83\u7684\u72b6\u6001\u5c31\u662f\u5de6\u8fb9\u7684\u4e24\u65b9\u5411\u6700\u5c0f\u503c\u3002\n- \u5982\u679c\u4e0a\u8fb9\u548c\u672c\u8eab\u90fd\u662f\u4e95\u53f7\uff0c\u4e0e\u5de6\u8fb9\u540c\u7406\u3002\n\n\u6240\u4ee5\uff0c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a\n\n\u5148\u5224\u65ad\uff1a\n\n$\\begin{cases}if:a[i][j] = a[i-1][j] = 1:f[i][j][1] = min(f[i-1][j][1],f[i-1][j][0]);\\\\if:a[i][j] = a[i][j-1] = 1:f[i][j][0] = min(f[i][j-1][1],f[i][j-1][0]);\\end{cases} $\n\n\u7136\u540e\u5224\u65ad\uff08\u5176\u4e2d \"left\";\"up\" \u4e3a\u5de6\u8fb9\u4e0e\u672c\u8eab\u4e3a\u4e95\u53f7\u548c\u4e0a\u8fb9\u4e0e\u672c\u8eab\u4e3a\u4e95\u53f7\u7b80\u5199\uff09\uff1a\n\n$\\begin{cases}if :left:f[i][j][1] = min(f[i-1][j][1],f[i-1][j][0])+a[i][j];\\\\if:up:f[i][j][0] = min(f[i][j-1][1],f[i][j-1][0])+a[i][j];\\\\otherwise:\\begin{cases}f[i][j][1] = min(f[i-1][j][1],f[i-1][j][0])+a[i][j];\\\\f[i][j][0] = min(f[i][j-1][1],f[i][j-1][0])+a[i][j];\\end{cases}\\end{cases}$\n\n~~\u597d\u590d\u6742QAQ~~\n\n\u867d\u7136\u540e\u9762\u7684\u62ec\u53f7\u91cc\u9664\u4e86 $\\texttt {otherwise}$ \u7684\u90a3\u4e24\u4e2a\u5224\u65ad\u4e0d\u5199\u4e5f\u80fdAC\uff08\u6211\u4e5f\u4e0d\u77e5\u9053\u662f\u6570\u636e\u592a\u6c34\u8fd8\u662f\u53ef\u4ee5\u8bc1\u660e\uff0c\u53cd\u6b63\u6211\u6ca1\u8bc1\uff09\uff0c\u4f46\u662f\u8fd9\u6837\u66f4\u4e25\u8c28\u3002\n\n\u6ce8\u610f\uff01\u524d\u4e24\u4e2a\u5224\u65ad\u8981\u540c\u65f6\uff0c\u7edd\u5bf9\u4e0d\u80fd $\\texttt {else}$!\n## code\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint a[102][102];\nint f[102][102][2];\nint n,m;\nint main(){\n\tcin >> n >> m;\n\tmemset(f,0x3f,sizeof f);\n\tfor(int i = 1;i <= n;i ++){\n\t\tfor(int j = 1;j <= m;j ++){\n\t\t\tchar s;\n\t\t\tcin >> s;\n\t\t\ta[i][j] = (s=='#');\n\t\t}\n\t}\n\tf[1][0][1] = f[1][0][0] = 0;\n\tf[0][1][1] = f[0][1][0] = 0;\n\tfor(int i = 1;i <= n;i ++){\n\t\tfor(int j = 1;j <= m;j ++){\n\t\t\tint f1 = 0,f2 = 0;\n\t\t\tif(a[i][j-1] == 1 && a[i][j] == 1){\n\t\t\t\tf[i][j][0] = min(f[i][j-1][1],f[i][j-1][0]);\n\t\t\t\tf1 = 1;\n\t\t\t}\n\t\t\tif(a[i-1][j] == 1 && a[i][j] == 1){\n\t\t\t\tf[i][j][1] = min(f[i-1][j][1],f[i-1][j][0]);\n\t\t\t\tf2 = 1;\n\t\t\t}\n\t\t\tif(f1 == 0 && f2 == 0){\n\t\t\t\tf[i][j][0] = min(f[i][j-1][1],f[i][j-1][0])+a[i][j];\n\t\t\t\tf[i][j][1] = min(f[i-1][j][1],f[i-1][j][0])+a[i][j];\n\t\t\t} \n\t\t\tif(f1 == 1 && f2 == 0)f[i][j][1] = min(f[i-1][j][1],f[i-1][j][0])+a[i][j];\n\t\t\tif(f1 == 0 && f2 == 1)f[i][j][0] = min(f[i][j-1][1],f[i][j-1][0])+a[i][j];\n\t\t}\n\t}\n\tcout<<min(f[n][m][0],f[n][m][1])<<endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1644809522,
        "uid": 343342,
        "name": "SDFZ_Obvious",
        "ccfLevel": 4,
        "title": "AT5798 [AGC043A] Range Flip Find Route \u9898\u89e3"
    },
    {
        "content": "## \u8fd9\u9898\u770b\u4f3c\u662f\u4e00\u4e2a\u8d2a\u5fc3\uff0c\u53ef\u662f\u4ed4\u7ec6\u4e00\u60f3\u662f\u4e00\u4e2aDP\n---\n### \u8fc7\u7a0b\n\u56e0\u4e3a\u672c\u9898\u53ea\u80fd\u5411\u53f3\u6216\u5411\u4e0b\u8d70\uff0c\u6240\u4ee5\u8bbe\u5f53\u5148\u7684\u4f4d\u7f6e\u5750\u6807\u4e3a$(i,j)$\n\n**\u4ece\u4e0a\u5230\u4e0b**\n\n\u5219\u5982\u679c$i-1$\u4e3a'.'\u5c31\u8868\u793a$i-1$\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7,\u5982\u679c$i$\u4e3a'#'\u4e14\u8981\u4ece$i-1$\u8d70\u5230$i$\uff0c\u5c31\u5fc5\u987b\u53d8\u6362\u4e00\u6b21\u3002\n\n**\u4ece\u5de6\u5230\u53f3\u7684\u540c\u7406**\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5f88\u5feb\u5730\u5199\u51fa**\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b**\n\n\u8bbe$f_{i,j}$\u4e3a\u4ece$(1,1)$\u8d70\u5230$(i,j)$\u7684\u6700\u5c0f\u53d8\u6362\u6b21\u6570\n1. \u5982\u679c$(i-1,j)$\u4e3a'.'\u4e14$(i,j)$\u4e3a'#'\uff1a\n    $f_{i,j}=f_{i-1,j}+1$\n2. \u5982\u679c$(i,j-1)$\u4e3a'.'\u4e14$(i,j)$\u4e3a'#'\uff1a\n    $f_{i,j}=f_{i,j-1}+1$\n\n---\n### \u5f53\u7136\u6211\u4eec\u4e0d\u80fd\u5fd8\u8bb0\u521d\u59cb\u5316\n\n1. \u5bf9\u4e8e\u8d77\u70b9\n    \u663e\u7136\uff0c\u8d77\u70b9\u80af\u5b9a\u662f\u8981\u7ecf\u8fc7\u7684\uff0c\u6240\u4ee5\u5982\u679c$(1,1)$\u4e3a'#'\uff0c\u90a3\u4e48$f_{1,1}=1$\n\n2. \u5bf9\u4e8e\u7b2c\u4e00\u884c\n    \u6240\u6709\u5411\u4e0b\u8d70\u7684\u6b65\u9aa4\u90fd\u662f\u5efa\u7acb\u5728\u7b2c\u4e00\u884c\u7684\u57fa\u7840\u4e0a\u7684\uff0c\u90fd\u662f\u4ece\u7b2c\u4e00\u884c\u8d70\u8fc7\u6765\u7684\uff0c\u6240\u4ee5\u9700\u8981\u521d\u59cb\u5316\u3002\u7b2c\u4e00\u884c\u7684\u521d\u59cb\u5316\u4e0e\u672c\u9898\u7684\u72b6\u8f6c\u65b9\u7a0b\u76f8\u540c\n        \u5982\u679c$(i-1,j)$\u4e3a'.'\u4e14$(i,j)$\u4e3a'#'\uff1a$f_{1,j}=f_{1,j-1}+1$\n        \u5426\u5219\uff1a$f_{1,j}=f_{1,j-1}$\n\n3. \u5bf9\u4e8e\u7b2c\u4e00\u5217\n    \u6240\u6709\u5411\u53f3\u8d70\u7684\u6b65\u9aa4\u90fd\u662f\u5efa\u7acb\u5728\u7b2c\u4e00\u884c\u7684\u57fa\u7840\u4e0a\u7684\uff0c\u6240\u4ee5\u7b2c\u4e00\u5217\u4e5f\u9700\u8981\u521d\u59cb\u5316\u3002\u521d\u59cb\u5316\u4e0e\u72b6\u8f6c\u65b9\u7a0b\u76f8\u540c\n    \u5982\u679c$(i-1,j)$\u4e3a'.'\u4e14$(i,j)$\u4e3a'#'\uff1a$f_{i,j}=f_{i-1,j}+1$\n    \u5426\u5219\uff1a$f_{i,j}=f_{i-1,j}$\n\n---\n\n### \u5230\u6b64\u6240\u6709\u7684\u6b65\u9aa4\u90fd\u5b8c\u6210\u4e86\n\u6700\u540e\u7b54\u6848\u4e3a$f_{H,W}$\n\n---\n#### \u8be6\u7ec6\u6b65\u9aa4\u53c2\u8003\u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 1005;\n\nint n,m;\nchar ch[N][N];\nint f[N][N];\n\nint main(void){\n    cin>>n>>m;\n    for (int i=1;i<=n;i++)\n        for (int j=1;j<=m;j++)\n            cin>>ch[i][j];\n    if (ch[1][1]=='#')\n        f[1][1]=1;\n    for (int i=2;i<=m;i++){\n        int now=0;\n        if (ch[1][i-1]=='.' && ch[1][i]=='#')\n            now=1;\n        f[1][i]=f[1][i-1]+now;\n    }\n    for (int i=2;i<=n;i++){\n        int now=0;\n        if (ch[i-1][1]=='.' && ch[i][1]=='#')\n            now=1;\n        f[i][1]=f[i-1][1]+now;\n    }\n    for (int i=2;i<=n;i++)\n        for (int j=2;j<=m;j++){\n            int now1=0,now2=0;\n            if (ch[i][j-1]=='.' && ch[i][j]=='#')\n                now1=1;\n            if (ch[i-1][j]=='.' && ch[i][j]=='#')\n                now2=1;\n            f[i][j]=min(f[i][j-1]+now1,f[i-1][j]+now2);\n        }\n    printf(\"%d\\n\",f[n][m]);\n\n    return 0;\n}\n```\n",
        "postTime": 1619783370,
        "uid": 106075,
        "name": "QTcyy",
        "ccfLevel": 0,
        "title": "AT5798\u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9053\u9898\u662f DP \u8036\uff08\u800c\u4e14\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u7684\u4e00\u79cd\n\n\u4e00\u5f00\u59cb\u60f3\u5230\u7684\u662f BFS\uff08\u597d\u50cf\u4e5f\u53ef\u4ee5\u505a\uff08\uff08\uff08\n\n\u4e0d\u8fc7\u8c8c\u4f3c DP \u66f4\u7b80\u5355\u3002\n\n\u4f7f\u7528 $dp_{i,j}$ \u6765\u8868\u793a\u8d70\u5230\u4f4d\u7f6e $(i,j)$ \u7684\u6700\u5c0f\u7ffb\u8f6c\u6b21\u6570\u3002\n\n\u636e\u9898\u610f\uff0c\u53ea\u80fd\u4ece\u5de6\u4e0a\u5411\u53f3\u4e0b\u8d70\uff0c\u6240\u4ee5\u5bf9\u4e8e $(i,j)$ \u53ea\u80fd\u4ece $(i-1,j)$ \u548c $(i,j-1)$ \u8f6c\u79fb\u3002\n\n\u90a3\u4e48\uff0c\u5bf9\u4e8e\u4f4d\u7f6e $(i,j)$\uff0c\u53ea\u8981 $(i-1,j)$ \u6216 $(i,j-1)$ \u7ffb\u8f6c\u8fc7\u4e86\uff0c\u4e14\u4f4d\u7f6e $(i,j)$ \u4e5f\u9700\u8981\u7ffb\u8f6c\uff0c\u90a3\u4e48\u4e5f\u53ef\u4ee5\u5ef6\u4f38\u5230 $(i,j)$\uff0c\u6545\u7ffb\u8f6c\u6b21\u6570\u5373\u4e3a\u5148\u524d\u70b9\u7684\u7ffb\u8f6c\u6b21\u6570\u3002\n\n\u800c\u5f53\u4f4d\u7f6e $(i,j)$ \u4e3a `.` \u65f6\uff0c\u4e0d\u9700\u8981\u7ffb\u8f6c\uff0c\u6545\u7ffb\u8f6c\u6b21\u6570\u4e5f\u4e3a\u5148\u524d\u70b9\u7684\u7ffb\u8f6c\u6b21\u6570\u3002\n\n\u4e0d\u7b26\u5408\u4e0a\u8ff0\u4e24\u79cd\u60c5\u51b5\u65f6\uff0c\u5373\u4f4d\u7f6e $(i,j)$ \u9700\u8981\u7ffb\u8f6c\uff0c\u6545\u7ffb\u8f6c\u6b21\u6570\u52a0\u4e00\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n``` cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n#define il inline\n\nint n,m;\nchar a[110][110];\nint f[110][110];\n\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%s\",a[i]+1);\n    }\n    f[1][1]=a[1][1]=='#'?1:0;\n    for(int i=2;i<=n;i++)\n    {\n        if(a[i][1]=='.'||a[i][1]==a[i-1][1])\n        {\n            f[i][1]=f[i-1][1];\n        }\n        else\n        {\n            f[i][1]=f[i-1][1]+1;\n        }\n    }\n    for(int i=2;i<=m;i++)\n    {\n        if(a[1][i]=='.'||a[1][i]==a[1][i-1])\n        {\n            f[1][i]=f[1][i-1];\n        }\n        else\n        {\n            f[1][i]=f[1][i-1]+1;\n        }\n    }\n    int x,y;\n    for(int i=2;i<=n;i++)\n    {\n        for(int j=2;j<=m;j++)\n        {\n            x=f[i-1][j]+1;\n            y=f[i][j-1]+1;\n            if(a[i][j]=='.')\n            {\n                x=f[i-1][j];\n                y=f[i][j-1];\n            }\n            if(a[i][j]==a[i-1][j])\n            {\n                x=f[i-1][j];\n            }\n            if(a[i][j]==a[i][j-1])\n            {\n                y=f[i][j-1];\n            }\n            f[i][j]=min(x,y);\n        }\n    }\n    printf(\"%d\",f[n][m]);\n    return 0;\n}\n\n```",
        "postTime": 1663590738,
        "uid": 221987,
        "name": "arkerny",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 - AT5798 [AGC043A] Range Flip Find Route"
    },
    {
        "content": "[\u66f4\u597d\u7684\u4f53\u9a8c\uff1f](https://www.luogu.com.cn/blog/dujiahao123456/solution-at5798)\n\n# \u89e3\u6cd5\n\u56e0\u4e3a\u662f\u7f51\u683c\u56fe\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u7528\u52a8\u6001\u89c4\u5212\u3002\n\u4ee4 $dp(i,j)$ \u8868\u793a\u4ece $(1,1)$ \u8d70\u5230 $(i,j)$ \u7684\u6700\u5c0f\u64cd\u4f5c\u6570\u3002\u5f53 $(1,1)$ \u4e3a `#` \u65f6\uff0c$dp(1,1)=1$\u3002\u5426\u5219 $dp(1,1)=0$\u3002\n\n\u5bf9\u4e8e $dp(i,j)$\uff0c\u7531\u4e8e\u53ea\u5411\u53f3\u6216\u5411\u4e0b\u79fb\u52a8\uff0c\u6240\u4ee5\u53ea\u80fd\u4ece\u4e0a\u65b9\u7684\u683c\u5b50 $dp(i-1,j)$ \u548c\u5de6\u65b9\u7684\u683c\u5b50 $dp(i,j-1)$ \u8f6c\u79fb\u3002\u5982\u679c\u4e0a\u4e00\u4e2a\u683c\u5b50\u662f `.` \u4e14\u5f53\u524d\u683c\u5b50\u662f `#`\uff0c\u8f6c\u79fb\u7684\u4e0a\u4e00\u4e2a\u64cd\u4f5c\u6570\u5c31\u5f97\u52a0\u4e00\u3002\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5c31\u53ef\u4ee5\u5199\u51fa\u6765\u4e86\u3002\u5177\u4f53\u770b\u4ee3\u7801\u3002\n\n# \u4ee3\u7801\n**Talking is cheap,show me the code.**\n```cpp\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\ninline int read(){int f=1,x=0;char ch=getchar();while (ch<'0'||ch>'9'){if (ch=='-') f=-1; ch=getchar();}while (ch>='0'&&ch<='9') {x=x*10+ch-'0';ch=getchar();}return x*f;}\ninline void write(int x){if (x<0){putchar('-');x=-x;}if(x>9) write(x/10);putchar(x%10+'0');}\ninline void Write(int x){write(x);putchar('\\n');}\nconst int N=1005;\nint n,m,dp[N][N];\nchar ch[N][N];\nsigned main(){\n    n=read(),m=read();\n    for (int i=1;i<=n;i++)\n        for (int j=1;j<=m;j++)\n            cin>>ch[i][j];\n    dp[1][1]=(ch[1][1]=='#');\n    for (int i=2;i<=m;i++)dp[1][i]=dp[1][i-1]+((ch[1][i-1]=='.')&&(ch[1][i]=='#'));\n    for (int i=2;i<=n;i++)dp[i][1]=dp[i-1][1]+((ch[i-1][1]=='.')&&(ch[i][1]=='#'));\n    for (int i=2;i<=n;i++)\n        for (int j=2;j<=m;j++)\n            dp[i][j]=min(dp[i][j-1]+((ch[i][j-1]=='.')&&(ch[i][j]=='#')),dp[i-1][j]+((ch[i-1][j]=='.')&&(ch[i][j]=='#')));//\u4ece\u4e24\u79cd\u72b6\u6001\u8f6c\u79fb\n    write(dp[n][m]);\n    return 0;\n}\n```",
        "postTime": 1659845005,
        "uid": 487463,
        "name": "13802919466djh",
        "ccfLevel": 0,
        "title": "AT5798 [AGC043A] Range Flip Find Route\u9898\u89e3"
    },
    {
        "content": "- \u3010\u7b97\u6cd5\u6807\u7b7e\u3011\u52a8\u6001\u89c4\u5212\uff08\u521d\u6b65\uff09\n- \u3010\u9898\u76ee\u8981\u70b9\u3011\n1. \u53ea\u80fd\u5411\u53f3\u3001\u4e0b\u8d70\n2. \u53ea\u80fd\u8d70\u767d\u8272\n3. $n,m\\leq100$\n- \u3010\u9898\u89e3\u3011\u8bbe\u60f3\u4e00\u6761\u6700\u4f18\u8def\u5f84\uff0c\u5b83\u7684\u64cd\u4f5c\u6b21\u6570\u4e00\u5b9a\u662f\u5728\u4ece\u767d\u8272\u533a\u57df\u8d70\u5165\u9ed1\u8272\u533a\u57df\u65f6\uff0c\u9700\u8981\u628a\u4e00\u6bb5\u9ed1\u8272\u53d8\u6210\u767d\u8272\uff0c\u5219\u7ed3\u679c\u4e3a\u8fd9\u6761\u8def\u5f84\u4e2d\u9ed1\u8272\u533a\u57df\u7684\u6bb5\u6570\uff08\u4f8b\u5982 `10001111011`\u5c31\u6709 3 \u6bb5\uff1a`1`\uff0c`1111`\uff0c`11`\uff09\u3002\u4e3a\u4ec0\u4e48\u6211\u4eec\u7ffb\u8f6c\u4e00\u4e2a\u77e9\u5f62\u53ef\u4ee5\u521a\u597d\u628a\u4e14\u4ec5\u628a\u8fd9\u4e00\u6bb5\u9ed1\u8272\u533a\u57df\u7ed9\u53d8\u767d\u5462\uff1f\u56e0\u4e3a\u6211\u4eec\u53ea\u80fd\u5f80\u53f3\u6216\u5f80\u4e0b\u8d70\uff0c\u56e0\u6b64\u7ffb\u8f6c\u4ee5\u8fd9\u6bb5\u9ed1\u8272\u7684\u7b2c\u4e00\u4e2a\u683c\u5b50\u4e3a\u5de6\u4e0a\u89d2\u3001\u8fd9\u6bb5\u9ed1\u8272\u7684\u6700\u540e\u4e00\u4e2a\u683c\u5b50\u4e3a\u53f3\u4e0b\u89d2\u7684\u77e9\u5f62\u5c31\u53ef\u4ee5\u8fbe\u5230\u76ee\u7684\uff0c\u5e76\u4e14\u4e0d\u5f71\u54cd\u5230\u8fd9\u6761\u8def\u5f84\u4e2d\u7684\u5176\u4ed6\u683c\u5b50\u3002\u82e5\u7528 $F_{i,j}$ \u8868\u793a\u4ece\u8d77\u70b9\u5230 $(i,j)$ \u7684\u6700\u5c11\u64cd\u4f5c\u6b21\u6570\uff0c\u5219\u5f53 $(i,j)$ \u4e0d\u5728\u7b2c\u4e00\u884c\u6216\u7b2c\u4e00\u5217\u65f6\uff0c\u6709 $F_{i,j}=\\min\\begin{cases}\nF_{i-1,j}+\\Delta_{(i-1,j)\\to(i,j)} \\\\\nF_{i,j-1}+\\Delta_{(i,j-1)\\to(i,j)}\n\\end{cases}$\n\u5426\u5219\uff0c\u6709 $F_{i,j}=\\begin{cases}\nF_{i,j-1}(i=1,j\\neq 1) \\\\\nF_{i-1,j}(j=1,i\\neq 1) \\\\\nA_{i-1,j}(i=1,j=1)\n\\end{cases}$\u3002\u4ee5\u4e0a\u9898\u89e3\u4e2d\uff0c$A_{i,j}=1$ \u8868\u793a `#`\uff0c$A_{i,j}=0$ \u8868\u793a `.`\uff0c\u4ece\u4e00\u4e2a\u9ed1\u683c\u5b50\u8d70\u5411\u4e00\u4e2a\u767d\u683c\u5b50\uff08\u987b\u7ffb\u8f6c\uff09\u65f6 $\\Delta_{(x_1,y_1)\\to(x_2,y_2)}=1$\uff0c\u53cd\u4e4b\u4e3a $0$\u3002\n- \u3010\u4ee3\u7801\u3011\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int inf=0x3f3f3f;\nint a[105][105],f[105][105];\nint main()\n{\n    int n,m;\n    cin>>n>>m;\n    for(int i=1;i<=n;i++){\n        getchar();//\u6362\u884c\u7b26\n        for(int j=1;j<=m;j++){\n            a[i][j]=(getchar()=='#');\n            f[i][j]=inf;\n        }\n    }\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++){\n            int Up=f[i-1][j]+(!a[i-1][j] && a[i][j]);\n            int Left=f[i][j-1]+(!a[i][j-1] && a[i][j]);\n            if(i==1) f[i][j]=Left;\n            else if(j==1) f[i][j]=Up; \n            else f[i][j]=min(Up,Left);\n        }\n    cout<<f[n][m]<<endl;\n    return 0;\n}\n```",
        "postTime": 1606473492,
        "uid": 300078,
        "name": "pengyule",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 AT5798 \u3010[AGC043A] Range Flip Find Route\u3011"
    },
    {
        "content": "\u663e\u7136\uff0c\u4efb\u610f `#` \u7684\u8fde\u901a\u5757\u90fd\u53ef\u4ee5\u7528\u4e00\u6b21\u64cd\u4f5c\u5c06\u5176\u53d8\u4e3a `.`\u3002\u56e0\u6b64\uff0c\u9898\u76ee\u7b49\u4ef7\u4e8e\u8981\u8ba9\u9ed1\u683c\u5b50\u7684\u8fde\u901a\u6bb5\u6570\u6700\u5c11\u3002\n\n\u8fd9\u4e2a\u53ef\u4ee5\u7528\u53cc\u5c42 BFS \u89e3\u51b3\uff1a\u5916\u5c42\u7528\u4f18\u5148\u961f\u5217\u7ef4\u62a4\u5230\u6bcf\u4e2a\u683c\u5b50\u7684\u7b54\u6848\uff0c\u5185\u5c42\u7528 BFS \u627e\u9ed1\u683c\u5b50\u7684\u8fde\u901a\u5757\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n^2\\log n)$\u3002\n\n\u8bc4\u6d4b\u94fe\u63a5\uff1ahttps://atcoder.jp/contests/agc043/submissions/11070046",
        "postTime": 1584849592,
        "uid": 42156,
        "name": "feecle6418",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT5798 \u3010[AGC043A] Range Flip Find Route\u3011"
    }
]