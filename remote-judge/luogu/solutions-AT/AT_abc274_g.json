[
    {
        "content": "[\u53ef\u80fd\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://llingy.ml/posts/72694809/)\n\n## \u9898\u610f\u7b80\u8ff0\n\u4e00\u4e2a $H\\times W$ \u7684\u77e9\u5f62\u533a\u57df\uff0c\u67d0\u4e9b\u683c\u5b50\u4e0a\u4f1a\u6709\u969c\u788d\uff0c\u4f60\u53ef\u4ee5\u5728\u6ca1\u6709\u969c\u788d\u7684\u683c\u5b50\u4e0a\u653e\u7f6e\u4efb\u610f\u4e2a\u6444\u50cf\u5934\uff0c\u6444\u50cf\u5934\u53ef\u4ee5\u671d\u5411\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u65b9\u5411\uff0c\u6bcf\u4e2a\u6444\u50cf\u5934\u80fd\u76d1\u89c6\u5230\u7684\u533a\u57df\u662f\u4ece\u5f53\u524d\u683c\u5b50\u5f00\u59cb\uff0c\u5411\u8be5\u6444\u50cf\u5934\u7684\u65b9\u5411\u5ef6\u4f38\u76f4\u5230\u8fb9\u754c\u6216\u8005\u969c\u788d\u7269\u7684\u533a\u57df\uff0c\u6c42\u81f3\u5c11\u9700\u8981\u591a\u5c11\u4e2a\u6444\u50cf\u5934\u624d\u80fd\u8ba9\u6240\u6709\u6ca1\u6709\u969c\u788d\u7684\u683c\u5b50\u90fd\u88ab\u76d1\u89c6\u5230\u3002\n\n$1\\le H,W\\le300$\uff0c\u65f6\u95f4\u9650\u5236 $\\rm{2s}$\uff0c\u5185\u5b58\u9650\u5236 $\\rm{1GB}$\u3002\n\n## \u601d\u8def\n![\u56fe 1](https://cdn.luogu.com.cn/upload/image_hosting/1pq6gmvq.png)\n\n\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u4e00\u4e9b\u7ed3\u8bba\uff1a\n\n* \u5728\u4e00\u6bb5\u8fde\u7eed\u7684\u7a7a\u5730\u4e2d\u95f4\u653e\u7f6e\u8fd9\u4e2a\u65b9\u5411\u7684\u6444\u50cf\u5934\u4e0d\u4f1a\u8ba9\u7b54\u6848\u53d8\u4f18\u3002\u5982\u56fe 1\uff0c\u5728 $1$ \u548c $2$ \u4e2d\u95f4\u653e\u7f6e\u6444\u50cf\u5934\u4e0d\u4f1a\u8ba9\u7b54\u6848\u53d8\u4f18\u3002\u4e8e\u662f\u53ea\u9700\u5728\u969c\u788d\u65c1\u8fb9\u4ee5\u53ca\u8fb9\u754c\u65c1\u8fb9\u653e\u7f6e\u6444\u50cf\u5934\u3002\n* \u4e8b\u5b9e\u4e0a\uff0c\u56db\u4e2a\u65b9\u5411\u4e2d\u53ea\u7528\u5728\u6a2a\u5411\u548c\u7eb5\u5411\u4e2d\u5206\u522b\u9009\u4e00\u4e2a\u65b9\u5411\u8bbe\u7f6e\uff0c\u5269\u4f59\u4e24\u4e2a\u65b9\u5411\u662f\u65e0\u9700\u8bbe\u7f6e\u6444\u50cf\u5934\u7684\u3002\u5982\u56fe 1\uff0c\u5728 $1$ \u53f7\u4f4d\u7f6e\u653e\u4e00\u4e2a\u65b9\u5411\u5411\u53f3\u7684\u6444\u50cf\u5934\u548c\u5728 $2$ \u653e\u7f6e\u4e00\u4e2a\u65b9\u5411\u5411\u5de6\u7684\u6444\u50cf\u5934\u7684\u6548\u679c\u662f\u5b8c\u5168\u4e00\u81f4\u7684\uff0c\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u603b\u80fd\u628a\u6a2a\u5411\u548c\u7eb5\u5411\u7684\u6444\u50cf\u5934\u7edf\u4e00\u4e3a\u4e24\u4e2a\u65b9\u5411\uff0c\u4e14\u9009\u6444\u50cf\u5934\u7684\u672c\u8d28\u662f\u5728\u8fd9\u4e2a\u65b9\u5411\u4e0a\u9009\u51fa\u4e00\u6bb5\u6781\u957f\u7684\u8fde\u7eed\u7a7a\u5730\u5e76\u8986\u76d6\u3002\n\n\u95ee\u9898\u8f6c\u5316\u4e3a\u9700\u8981\u5728\u6a2a\u5411\u548c\u7eb5\u5411\u9009\u62e9\u4e00\u4e9b\u6781\u957f\u8fde\u7eed\u7684\u7a7a\u5730\u5e76\u8986\u76d6\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u7a7a\u5730\u90fd\u81f3\u5c11\u88ab\u8986\u76d6\u4e00\u904d\u3002\n\n\u7531\u4e8e\u53ea\u6709\u4e24\u4e2a\u65b9\u5411\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u4e8c\u5206\u56fe\u3002\u4e8c\u5206\u56fe\u5de6\u8fb9\u662f\u6a2a\u5411\u7684\u6781\u957f\u8fde\u7eed\u6bb5\uff0c\u53f3\u8fb9\u662f\u7eb5\u5411\u7684\u6781\u957f\u7684\u8fde\u7eed\u6bb5\u3002\u679a\u4e3e\u6bcf\u4e2a\u7a7a\u5730\uff0c\u5c06\u5176\u6240\u5c5e\u7684\u6a2a\u5411\u6781\u957f\u8fde\u7eed\u6bb5\u4e0e\u7eb5\u5411\u6781\u957f\u8fde\u7eed\u6bb5\u8fde\u8fb9\u3002\u6bcf\u4e2a\u7a7a\u5730\u90fd\u88ab\u8986\u76d6\u8f6c\u5316\u4e3a\u6c42\u8fd9\u4e2a\u4e8c\u5206\u56fe\u7684\u6700\u5c0f\u8986\u76d6\u3002\n\n\u6839\u636e $\\rm{K\\ddot onig}$ \u5b9a\u7406\uff0c\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u6570\u7b49\u4e8e\u4e8c\u5206\u56fe\u6700\u5c0f\u8986\u76d6\u6570\u3002\u7531\u4e8e\u8be5\u4e8c\u5206\u56fe\u70b9\u6570\u662f $HW$\uff0c\u8fb9\u6570\u4e5f\u662f $HW$ \u7684\uff0c\u6734\u7d20\u4e8c\u5206\u56fe\u5339\u914d\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u53ef\u63a5\u53d7\uff0c\u4f7f\u7528\u7f51\u7edc\u6d41\u9ad8\u6548\u6c42\u89e3\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(HW\\sqrt{HW})$\u3002\n\n## Code\n\u9700\u8981\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u7a7a\u5730\u5c5e\u4e8e\u54ea\u4e2a\u6781\u957f\u8fde\u7eed\u6bb5\u3002\n```cpp\nconstexpr int N=305;\nchar mp[N][N];\nstruct edge{int to,nxt,w;}e[N*N*8];\nint head[N*N*2],cnt=1;\ninline void _add(int u,int v,int w){e[++cnt]=(edge){v,head[u],w};head[u]=cnt;}\ninline void add(int u,int v,int w){_add(u,v,w);_add(v,u,0);}\nint dep[N*N*2],cur[N*N*2],s,t;\ninline bool bfs()\n{\n\u3000\u3000memset(dep,-1,sizeof(dep));memcpy(cur,head,sizeof(head));\n\u3000\u3000dep[s]=0;queue<int>q;q.push(s);\n\u3000\u3000while(!q.empty())\n\u3000\u3000{\n\u3000\u3000\u3000\u3000int u=q.front();q.pop();\n\u3000\u3000\u3000\u3000for(int i=head[u];i;i=e[i].nxt)\n\u3000\u3000\u3000\u3000{\n\u3000\u3000\u3000\u3000\u3000\u3000int v=e[i].to;\n\u3000\u3000\u3000\u3000\u3000\u3000if(~dep[v]||!e[i].w)continue;\n\u3000\u3000\u3000\u3000\u3000\u3000dep[v]=dep[u]+1;q.push(v);\n\u3000\u3000\u3000\u3000}\n\u3000\u3000}\n\u3000\u3000return ~dep[t];\n}\ninline int dfs(int u,int fin)\n{\n\u3000\u3000if(!fin||u==t)return fin;\n\u3000\u3000int fout=0;\n\u3000\u3000for(int i=cur[u];i;i=e[i].nxt)\n\u3000\u3000{\n\u3000\u3000\u3000\u3000cur[u]=i;int v=e[i].to;\n\u3000\u3000\u3000\u3000if(dep[v]==dep[u]+1&&e[i].w)\n\u3000\u3000\u3000\u3000{\n\u3000\u3000\u3000\u3000\u3000\u3000int f=dfs(v,min(fin,e[i].w));\n\u3000\u3000\u3000\u3000\u3000\u3000e[i].w-=f;e[i^1].w+=f;fin-=f;fout+=f;\n\u3000\u3000\u3000\u3000\u3000\u3000if(!fin)break;\n\u3000\u3000\u3000\u3000}\n\u3000\u3000}\n\u3000\u3000return fout;\n}\ninline int dinic()\n{\n\u3000\u3000int ans=0;\n\u3000\u3000while(bfs())ans+=dfs(s,1e9);\n\u3000\u3000return ans;\n}\nint prel[N][N],preu[N][N];\ninline void work()\n{\n\u3000\u3000ios::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);\n\u3000\u3000int n,m;cin>>n>>m;\n\u3000\u3000for(int i=1;i<=n;i++)cin>>(mp[i]+1);\n\u3000\u3000int tot=3;s=1,t=2;\n\u3000\u3000for(int i=1;i<=n;i++)for(int j=1;j<=m;j++)if(mp[i][j]=='.'){if(prel[i][j-1])prel[i][j]=prel[i][j-1];else prel[i][j]=++tot,add(s,tot,1);}\n\u3000\u3000for(int i=1;i<=n;i++)for(int j=1;j<=m;j++)if(mp[i][j]=='.'){if(preu[i-1][j])preu[i][j]=preu[i-1][j];else preu[i][j]=++tot,add(tot,t,1);}\n\u3000\u3000for(int i=1;i<=n;i++)for(int j=1;j<=m;j++)if(mp[i][j]=='.')add(prel[i][j],preu[i][j],1);\n\u3000\u3000cout<<dinic();\n}\n```",
        "postTime": 1666516553,
        "uid": 416928,
        "name": "llingy",
        "ccfLevel": 7,
        "title": "[ABC274G] Security Camera 3 \u9898\u89e3"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/yhx-error/p/16818379.html)\n\n## \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u5f20\u5927\u5c0f\u4e3a $H\\times W$ \u7684\u56fe\uff0c\u4e0a\u9762\u6709\u4e00\u4e9b\u7a7a\u5730 `.` \u548c\u4e00\u4e9b\u969c\u788d\u7269 `#`\uff0c\u73b0\u5728\u6709\u4e00\u79cd\u6444\u50cf\u673a\uff0c\u4f60\u53ef\u4ee5\u4efb\u610f\u6446\u653e\u5728\u67d0\u4e2a\u4f4d\u7f6e\u5e76\u9009\u62e9\u4e0a\u4e0b\u5de6\u53f3\u4e2d\u4efb\u610f\u4e00\u4e2a\u65b9\u5411\uff0c\u6444\u50cf\u673a\u80fd\u591f\u7167\u5230\u8be5\u65b9\u5411\u672a\u88ab\u969c\u788d\u7269\u963b\u6321\u7684\u5730\u65b9\u3002\n\n\u6c42\u81f3\u5c11\u8981\u591a\u5c11\u53f0\u6444\u50cf\u673a\u4f7f\u5f97\u6240\u6709\u7684\u7a7a\u5730\u90fd\u80fd\u88ab\u7167\u5230\u3002\n\n## solution\n\n\u8fd9\u662f\u4e00\u4e2a\u6bd4\u8f83\u7ecf\u5178\u7684\u7f51\u7edc\u6d41\u7684\u5efa\u6a21\u3002\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u6a2a\u7740\u548c\u7ad6\u7740\u7ed9\u539f\u56fe\u7f16\u4e24\u904d\u53f7\uff0c\u80fd\u591f\u4e00\u6b21\u7167\u5230\u7684\u7f16\u53f7\u76f8\u540c\u3002\n\n\u4ee5\u6837\u4f8b\u4e00\u4e3a\u4f8b\uff1a\n\n```\n. . .\n. # .\n. . .\n```\n\n\u5148\u6a2a\u7740\u7f16\u53f7\uff1a\n\n```\n1 1 1\n2 # 3\n4 4 4\n```\n\n\u518d\u7ad6\u7740\u7f16\u53f7\uff1a\n\n```\n5 6 8\n5 # 8\n5 7 8\n```\n\n\u7136\u540e\u6211\u4eec\u5c06\u6a2a\u7740\u7684\u56fe\u8fde\u6e90\u70b9\uff0c\u7ad6\u7740\u7684\u56fe\u8fde\u6c47\u70b9\uff0c\u6a2a\u7740\u7684\u4e0e\u7ad6\u7740\u7684\u4e4b\u95f4\u7f16\u53f7\u76f8\u5bf9\u4f4d\u7f6e\u5bf9\u5e94\u7684\u4e5f\u8981\u8fde\u8fb9\uff0c\u5373 $1$ \u8fde $5$\uff0c$2$ \u8fde $6$\uff0c$3$ \u8fde $7$\uff0c$4$ \u8fde $8$\uff0c\u7136\u540e\u76f4\u63a5\u8dd1\u4e00\u8fb9\u6700\u5927\u6d41\u5373\u53ef\u3002\n\n**Code**\n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN=1e6+5;\nconst int INF=0x7f7f7f7f;\n\n// char buf[1<<21],*p1=buf,*p2=buf;\n// #define getchar()(p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\ninline int read()\n{\n    int x=0,f=1;char ch=getchar();\n    while(!isdigit(ch)){ if(ch=='-') f=-1; ch=getchar(); }\n    while(isdigit(ch))\n        x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n    return x*f;\n}\n\nstruct edge\n{\n    int to,nxt,flow;\n}e[MAXN<<1];\n\nint head[MAXN],cnt=1;\n\ninline void add(int x,int y,int f)\n{\n    e[++cnt].to=y;\n    e[cnt].flow=f;\n    e[cnt].nxt=head[x];\n    head[x]=cnt;\n    return;\n}\n\ninline void addn(int x,int y,int f)\n{\n    add(x,y,f);\n    add(y,x,0);\n    return;\n}\n\nint dep[MAXN],gap[MAXN];\nint n,m,s,t;\n\ninline void bfs()\n{\n    queue<int>q;\n    memset(dep,0,sizeof(dep));\n    memset(gap,0,sizeof(gap));\n    dep[t]=1;\n    gap[1]=1;\n    q.push(t);\n    while(!q.empty())\n    {\n        int x=q.front();q.pop();\n        for(int i=head[x];i;i=e[i].nxt)\n        {\n            int y=e[i].to;\n            if(dep[y]) continue;\n            q.push(y);\n            dep[y]=dep[x]+1;\n            gap[dep[y]]++;\n        }\n    }\n    return;\n}\n\nint maxflow,cur[MAXN];\n\ninline int dfs(int x,int flow)\n{\n    if(x==t)\n    {\n        maxflow+=flow;\n        return flow;\n    }\n    int used=0;\n    for(int i=cur[x];i;i=e[i].nxt)\n    {\n        cur[x]=i;\n        int y=e[i].to,f=e[i].flow;\n        if(dep[x]==dep[y]+1 && f)\n        {\n            int w=dfs(y,min(f,flow-used));\n            e[i].flow-=w;\n            e[i^1].flow+=w;\n            used+=w;\n            if(used==flow) return used;\n        }\n    }\n    gap[dep[x]]--;\n    if(!gap[dep[x]]) dep[s]=n*m*2+3;\n    dep[x]++,gap[dep[x]]++;\n    return used;\n}\n\ninline int Isap()\n{\n    maxflow=0;\n    bfs();\n    while(dep[s]<=n*m*2+1)\n        memcpy(cur,head,sizeof(cur)),dfs(s,INF);\n    return maxflow;\n}\n\nchar c[305][305];\nint id1[305][305],id2[305][305];\n\nint main()\n{\n    n=read(),m=read();\n    s=0,t=n*m*2+1;\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            cin>>c[i][j];\n    int tot=0;\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n        {\n            if(c[i][j]=='#') continue;\n            id1[i][j]=++tot;\n            int k=j+1;\n            while(c[i][k]=='.') id1[i][k]=tot,k++;\n            j=k;\n        }\n    int mid=tot;\n    for(int j=1;j<=m;j++)\n        for(int i=1;i<=n;i++)\n        {\n            if(c[i][j]=='#') continue;\n            id2[i][j]=++tot;\n            int k=i+1;\n            while(c[k][j]=='.') id2[k][j]=tot,k++;\n            i=k;\n        }\n    for(int i=1;i<=mid;i++) addn(s,i,1);\n    for(int i=mid+1;i<=tot;i++) addn(i,t,1);\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            addn(id1[i][j],id2[i][j],1);\n    printf(\"%d\\n\",Isap());\n    return 0;\n}\n```\n",
        "postTime": 1666500879,
        "uid": 393037,
        "name": "Code_AC",
        "ccfLevel": 5,
        "title": "ABC274G\u9898\u89e3"
    },
    {
        "content": "~~\u4e00\u773c\u7f51\u7edc\u6d41\u677f\u5b50\u6240\u4ee5\u6ca1\u5199EF\u5c31\u6765\u5199G~~\n\n\u5148\u5957\u8def\u7684\u5c06\u6bcf\u4e00\u884c\u548c\u6bcf\u4e00\u5217\u6807\u4e0a\u53f7\uff0c\u6bcf\u9694\u4e00\u4e2a\u969c\u788d\u7269\u5c31\u518d\u52a0\u4e00\u6b21\uff0c\u7c7b\u4f3c\u4e8e\u4e0b\u9762\u7684\u64cd\u4f5c\uff1a\n```\n...    111       ...    568\n.#. -> 2#3       .#. -> 5#8\n...    444       ...    578\n```\n\u7136\u540e\u5c06\u6bcf\u4e00\u4e2a\u683c\u5b50\u7684\u884c\u6807\u53f7\u4e0e\u5217\u6807\u53f7\u76f8\u8fde\uff0c\u8d85\u7ea7\u6e90\u70b9\u8fde\u5411\u884c\u6807\u53f7\uff0c\u5217\u6807\u53f7\u8fde\u5411\u8d85\u7ea7\u6c47\u70b9\u3002\n\n\u7136\u540e\u5c31\u53d8\u6210\u4e86\u6c42\u4e8c\u5206\u56fe\u6700\u5c0f\u8986\u76d6\uff0c\u8dd1\u4e2a\u6700\u5927\u6d41\u5c31\u8fc7\u4e86\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define s 0\n#define t n*m*2+1\nusing namespace std;\nconst int MAXN=1e6+5;\nconst int INF=0x7f7f7f7f;\nstruct node\n{\n\tint to,nxt,flow;\n}e[MAXN];\nint head[MAXN],cnt=1;\ninline void adde(int x,int y,int f)\n{\n\te[++cnt].to=y;\n\te[cnt].flow=f;\n\te[cnt].nxt=head[x];\n\thead[x]=cnt;\n}\ninline void add(int x,int y,int f)\n{\n\tadde(x,y,f);\n\tadde(y,x,0);\n}\nint n,m;\nint cur[MAXN],dis[MAXN];\nbitset<MAXN>vis;\ninline bool bfs()\n{\n\tqueue<int>q;\n\tmemset(dis,-1,sizeof dis);\n\tq.push(s);\n\tdis[s]=0;\n\tcur[s]=head[s];\n\twhile(!q.empty())\n\t{\n\t\tint x=q.front();\n\t\tq.pop();\n\t\tfor(register int i=head[x];i;i=e[i].nxt)\n\t\t{\n\t\t\tint y=e[i].to,f=e[i].flow;\n\t\t\tif(dis[y]==-1&&f)\n\t\t\t{\n\t\t\t\tdis[y]=dis[x]+1;\n\t\t\t\tcur[y]=head[y];\n\t\t\t\tif(y==t)return true;\n\t\t\t\tq.push(y);\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\ninline int dfs(int x,int lim)\n{\n\tif(x==t)return lim;\n\tint f=0;\n\tfor(register int i=cur[x];i&&f<lim;i=e[i].nxt)\n\t{\n\t\tint y=e[i].to;\n\t\tcur[x]=i;\n\t\tif(dis[y]==dis[x]+1&&e[i].flow)\n\t\t{\n\t\t\tint w=dfs(y,min(e[i].flow,lim-f));\n\t\t\tif(!w)dis[y]=-1;\n\t\t\te[i].flow-=w;\n\t\t\te[i^1].flow+=w;\n\t\t\tf+=w;\n\t\t}\n\t}\n\treturn f;\n}\ninline int dinic()\n{\n\tint ans=0,f;\n\twhile(bfs())while(f=dfs(s,INF))ans+=f;\n\treturn ans;\n}\nchar ma[305][305];\nint id1[305][305],id2[305][305];\nint tot,sum;\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(register int i=1;i<=n;i++)\n        for(register int j=1;j<=m;j++)\n        {\n            cin>>ma[i][j];\n            if(ma[i][j]=='.')sum++;\n        }\n    for(register int i=1;i<=n;i++)\n        for(register int j=1;j<=m;j++)\n        {\n            if(ma[i][j]=='#')continue;\n            id1[i][j]=++tot;\n            int k=j+1;\n            while(ma[i][k]=='.')id1[i][k]=tot,k++;\n            j=k;\n        }\n    int mid=tot;\n    for(register int j=1;j<=m;j++)\n        for(register int i=1;i<=n;i++)\n        {\n            if(ma[i][j]=='#')continue;\n            id2[i][j]=++tot;\n            int k=i+1;\n            while(ma[k][j]=='.')id2[k][j]=tot,k++;\n            i=k;\n        }\n    for(register int i=1;i<=mid;i++)\n        add(s,i,1);\n    for(register int i=mid+1;i<=tot;i++)\n        add(i,t,1);\n    for(register int i=1;i<=n;i++)\n        for(register int j=1;j<=m;j++)\n            add(id1[i][j],id2[i][j],1);\n    printf(\"%d\",dinic());\n    return 0;\n}\n```",
        "postTime": 1666593897,
        "uid": 126871,
        "name": "yzh_Error404",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 abc274g \u3010Security Camera 3\u3011"
    },
    {
        "content": "\u5308\u7259\u5229\u7b97\u6cd5\u7684\u505a\u6cd5\uff0c\u4e3b\u8981\u8bb2\u7684\u662f\u5e38\u89c1\u5308\u7259\u5229\u7b97\u6cd5\u7684\u4f18\u5316\u3002\n\n[\u539f\u9898](https://www.luogu.com.cn/problem/P6062)\n\n### \u5efa\u6a21\n\n\u4e00\u4e2a `.` \u663e\u7136\u8981\u4e48\u88ab\u6a2a\u7740\u7684\u8986\u76d6\uff0c\u8981\u4e48\u88ab\u7ad6\u7740\u7684\u8986\u76d6\u3002\u53c8\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u8986\u76d6\u7684\u4e24\u7aef\u663e\u7136\u90fd\u662f\u969c\u788d\uff0c\u6240\u4ee5\u6211\u4eec\u4ece\u6a2a\u5411\u7684\u8986\u76d6\u5230\u7ad6\u7740\u7684\u8986\u76d6\u8fde\u8fb9\uff0c\u5373\u6700\u5c0f\u70b9\u8986\u76d6\u3002\n\n\u5b9a\u4e49 $x_i$ \u8868\u793a\u6a2a\u7740\u8986\u76d6\u7684\u7b2c $i$ \u884c\uff0c$y_j$ \u8868\u793a\u7ad6\u7740\u8986\u76d6\u7684\u7b2c $j$ \u884c\uff0c\u8fb9\u4e3a $x_i$ \u5230 $y_j$\u3002\u4f46\u662f\u8fd9\u6837\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u4e00\u884c\u53ef\u80fd\u4f1a\u6709\u591a\u4e2a\u53ef\u4ee5\u8986\u76d6\u7684\u4f4d\u7f6e\uff1a\n\n```\n.#...#.\n```\n\n\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u653e\u4e0b\u4e09\u5757\u6a2a\u7740\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u4ee5\u7b2c\u51e0\u884c\u7b2c\u51e0\u5217\u5efa\u56fe\uff0c\u7528\u4e00\u79cd\u7c7b\u4f3c\u79bb\u6563\u5316\u7684\u65b9\u5f0f\u53bb\u505a\uff0c\u5c31\u505a\u5b8c\u4e86\u3002\n\n### \u4f18\u5316\n\n\u7531\u4e8e\u4e0d\u77e5\u9053\u4e0a\u8ff0\u7b97\u6cd5\u662f\u5426\u6b63\u786e\uff08\u4e5f\u8bb8\u4f60\u4eec\u53ef\u4ee5\u7528\u6734\u7d20\u7684\u5308\u7259\u5229\u7b97\u6cd5\u8dd1\u4e00\u4e0b\u770b\u4e00\u4e0b\u4f1a\u4e0d\u4f1a TLE\uff0c\u6211\u6025\u9700\u77e5\u9053\u8fd9\u4e2a\u7ed3\u679c\uff09\uff0c\u6211\u4eec\u4e00\u822c\u6253\u5308\u7259\u5229\u7b97\u6cd5\u662f\u8981\u4f18\u5316\u7684\uff0c\u5e38\u89c1\u7684\u4f18\u5316\u5305\u62ec\u524d\u5411\u661f\u4f18\u5316\u548c\u65f6\u95f4\u6233\u4f18\u5316\uff08\u6211\u81ea\u5df1\u53d6\u7684\u540d\u5b57\uff09\u3002\n\n[\u4f8b\u9898\uff0c\u5efa\u8bae\u638c\u63e1](https://www.luogu.com.cn/problem/P1640)\n\n\u8003\u8651\u5230\u6bcf\u6b21\u6267\u884c\u5308\u7259\u5229\u7b97\u6cd5\u90fd\u8981 `memset` $vis$ \u6570\u7ec4\uff0c\u8fd9\u5f88\u9ebb\u70e6\uff0c\u6211\u4eec\u76f4\u63a5\u5b9a\u4e49 $dfn$ \u6570\u7ec4\u8868\u793a\u5f53\u524d\u662f\u7b2c\u51e0\u8f6e\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u7684 $dfn$ \u8fd8\u5728\u4e0a\u4e00\u8f6e\uff0c\u90a3\u4ed6\u5c31\u5f97\u66f4\u65b0\uff0c\u539f\u7406\u8ddf $vis$ \u662f\u4e00\u6837\u7684\uff0c\u4f46\u662f\u8981\u5feb\u5f88\u591a\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u672a\u77e5\uff0c\u4f46\u5c31\u662f\u8fd9\u4e48\u795e\u5947\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e5+5;\nint n,m,head[N],id=1,ans=0,dfn[N],f[N],cnt,A[305][305],B[305][305];\nstruct edge{int to,nxt;}a[N];\nchar ch[305][305];\nvoid add(int x,int y){\n\ta[++cnt].to=y;\n\ta[cnt].nxt=head[x];\n\thead[x]=cnt;\n}\nbool dfs(int x){\n\tfor(register int i=head[x];i;i=a[i].nxt){\n\t\tint y=a[i].to;\n\t\tif(dfn[y]-id){\n\t\t\tdfn[y]=id;\n\t\t\tif(!f[y]||dfs(f[y])){\n\t\t\t\tf[y]=x;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nint main(){\n\tscanf(\"%d %d\",&n,&m);\n\tfor(register int i=1;i<=n;i++){\n\t\tfor(register int j=1;j<=m;j++){\n\t\t\tcin>>ch[i][j];\n\t\t}\n\t}\n\tint cntx=0,cnty=0;\n\tfor(register int i=1;i<=n;i++){\n\t\tfor(register int j=1;j<=m;j++){\n\t\t\tif(ch[i][j]=='.'){\n\t\t\t\tA[i][j]=j>1&&ch[i][j-1]=='.'?A[i][j-1]:++cntx;\n\t\t\t\tB[i][j]=i>1&&ch[i-1][j]=='.'?B[i-1][j]:++cnty;\n\t\t\t}\n\t\t}\n\t}\n\tfor(register int i=1;i<=n;i++){\n\t\tfor(register int j=1;j<=m;j++){\n\t\t\tif(ch[i][j]=='.') add(A[i][j],B[i][j]);\n\t\t}\n\t}\n\tfor(register int i=1;i<=cntx;i++,id++) ans+=dfs(i);\n\tprintf(\"%d\",ans);\n}\n```\n\n\u987a\u4fbf\u653e\u4e00\u4e2a Dinic \u7684\u505a\u6cd5\uff08\u6211\u76f4\u63a5\u4ece\u5308\u7259\u5229\u4e0a\u6539\u7684\u6240\u4ee5\u6bd4\u8f83\u4e11\uff09\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=3e5+5;\nint n,m,head[N],id=1,ans=0,dfn[N],f[N],cnt=1,A[305][305],B[305][305],s,t;\nint dis[N],now[N];\nconst int inf=1e9;\nstruct edge{int to,nxt,l;}a[N];\nchar ch[305][305];\nvoid add(int x,int y,int z){\n\ta[++cnt].to=y;\n\ta[cnt].nxt=head[x];\n    a[cnt].l=z;\n\thead[x]=cnt;\n}\nbool bfs(){\n\tfor(register int i=1;i<=n*m+2;i++) dis[i]=inf;\n\tqueue<int> q;\n\tq.push(s),dis[s]=s,now[s]=head[s];\n\twhile(!q.empty()){\n\t\tint x=q.front();q.pop();\n\t\tfor(register int i=head[x];i;i=a[i].nxt){\n\t\t\tint y=a[i].to;\n\t\t\tif(a[i].l>0&&dis[y]==inf){\n\t\t\t\tdis[y]=dis[x]+1;\n\t\t\t\tnow[y]=head[y];\n\t\t\t\tq.push(y);\n\t\t\t\tif(y==t) return true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nint dfs(int x,int flow){\n\tif(x==t) return flow;\n\tint ans=0;\n\tfor(register int i=now[x];i&&flow;i=a[i].nxt){\n\t\tint y=a[i].to;\n\t\tnow[x]=i;\n\t\tif(a[i].l>0&&dis[y]==dis[x]+1){\n\t\t\tint k=dfs(y,min(flow,a[i].l));\n\t\t\ta[i].l-=k,a[i^1].l+=k;\n\t\t\tif(!k) dis[y]=inf;\n\t\t\tans+=k,flow-=k;\n\t\t}\n\t} \n\treturn ans;\n}\nint main(){\n\tscanf(\"%d %d\",&n,&m);\n    s=n*m+1,t=n*m+2;\n\tfor(register int i=1;i<=n;i++){\n\t\tfor(register int j=1;j<=m;j++){\n\t\t\tcin>>ch[i][j];\n\t\t}\n\t}\n\tint cntx=0,cnty=0;\n\tfor(register int i=1;i<=n;i++){\n\t\tfor(register int j=1;j<=m;j++){\n\t\t\tif(ch[i][j]=='.'){\n\t\t\t\tA[i][j]=j>1&&ch[i][j-1]=='.'?A[i][j-1]:++cntx;\n\t\t\t\tB[i][j]=i>1&&ch[i-1][j]=='.'?B[i-1][j]:++cnty;\n\t\t\t}\n\t\t}\n\t}\n\tfor(register int i=1;i<=n;i++){\n\t\tfor(register int j=1;j<=m;j++){\n\t\t\tif(ch[i][j]=='.'){\n                add(A[i][j],B[i][j]+cntx,1);\n                add(B[i][j]+cntx,A[i][j],0);\n            }\n\t\t}\n\t}\n\tfor(register int i=1;i<=cntx;i++) add(s,i,1),add(i,s,0);\n    for(register int i=1;i<=cnty;i++) add(i+cntx,t,1),add(t,i+cntx,0);\n    while(bfs()) ans+=dfs(s,inf);\n\tprintf(\"%d\",ans);\n}\n```\n",
        "postTime": 1666668079,
        "uid": 754746,
        "name": "Resolute_Faith",
        "ccfLevel": 0,
        "title": "[ABC274G] Security Camera 3"
    }
]