[
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n> \u7ed9\u51fa\u4e00\u68f5 $n$ \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u4e3a `(`  \u6216 `)`\u6c42\u6709\u591a\u5c11\u4e2a\u6709\u5e8f\u70b9\u5bf9 $(u,v)$ \u6ee1\u8db3\u8def\u5f84 $\\{u \\rightarrow v\\}$ \u662f\u5408\u6cd5\u62ec\u53f7\u5e8f\u5217\u3002\n>\n> $1 \\le n \\le 10^5$\n\n## \u601d\u8def\n\n\u5bf9\u4e8e\u70b9\u5bf9\u8ba1\u6570\uff0c\u8003\u8651\u70b9\u5206\u6cbb\u3002\n\n\u5c06\u8def\u5f84\u62c6\u6210\u4e00\u6761\u6df1\u5ea6\u9012\u589e $S$ \u548c\u4e00\u6761\u6df1\u5ea6\u9012\u51cf\u7684\u94fe $T$\u3002\u53d1\u73b0\u4e24\u6761\u94fe\u53ef\u4ee5\u62fc\u8d77\u6765\u7684\u524d\u63d0\u662f $S$ \u4e2d\u6ca1\u6709\u672a\u5339\u914d\u7684 `)`\uff0c$T$ \u4e2d\u6ca1\u6709\u672a\u5339\u914d\u7684 `(`\uff0c\u4e14 $S$ \u4e2d\u672a\u5339\u914d\u7684 `(` \u6570\u91cf\u7b49\u4e8e $T$ \u4e2d\u672a\u5339\u914d\u7684 `)` \u6570\u91cf\u3002\n\n\u6240\u4ee5\u70b9\u5206\u6cbb\u6bcf\u4e00\u5c42\u5411\u4e0b\u9012\u5f52\u7684\u65f6\u5019\uff0c\u5206\u6df1\u5ea6\u9012\u589e\u548c\u6df1\u5ea6\u9012\u51cf\u4e24\u79cd\u60c5\u51b5\uff08\u5373\u8def\u5f84\u987a\u5e8f\u4ece\u6839\u51fa\u53d1\u6216\u5230\u6839\u7ed3\u675f\uff09\uff0c\u52a8\u6001\u7ef4\u62a4\u672a\u5339\u914d\u7684 `(`\uff0c`)` \u6570\u91cf\uff0c\u653e\u5230\u6876\u91cc\u7d2f\u52a0\u7b54\u6848\u5373\u53ef\u3002\n\n\u6ce8\u610f\u5230\u70b9\u5bf9\u662f\u6709\u5e8f\u7684\uff0c\u6240\u4ee5\u9700\u8981\u62ff $S$ \u5339\u914d\u4e00\u904d $T$\uff0c\u518d\u62ff $T$ \u5339\u914d\u4e00\u904d $S$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define il inline\nusing namespace std;\nconst int maxn=100010;\nil int cread(){\n\tchar c=getchar();\n\tfor(;c!='('&&c!=')';c=getchar());\n\treturn c=='(';\n}\nil int read(){\n\tint x=0;\n\tchar c=getchar();\n\tfor(;!(c>='0'&&c<='9');c=getchar());\n\tfor(;c>='0'&&c<='9';c=getchar())\n\t\tx=(x<<1)+(x<<3)+c-'0';\n\treturn x; \n}\nstruct edge{\n\tint v,to;\n}e[maxn<<1];\nint head[maxn],ecnt;\nvoid addedge(int u,int v){\n\te[++ecnt].v=v,e[ecnt].to=head[u],head[u]=ecnt;\n}\nbool vis[maxn];\nint a[maxn],n,rt;\nint sz[maxn],mp[maxn];\nint tap[maxn];\nll ans;\nvoid getrt(int fa,int x,int tot){\n\tsz[x]=1,mp[x]=0;\n\tfor(int i=head[x];i;i=e[i].to)\n\t\tif(!vis[e[i].v]&&e[i].v!=fa){\n\t\t\tgetrt(x,e[i].v,tot);\n\t\t\tsz[x]+=sz[e[i].v],mp[x]=max(mp[x],sz[e[i].v]); \n\t\t}mp[x]=max(mp[x],tot-sz[x]);\n\tif(!rt||mp[x]<mp[rt]) rt=x;\n}\nvoid calc1(int fa,int x,bool typ,int f=0,int b=0){\n\tif(a[x]) f++;\n\telse f?f--:b++;\n//\tprintf(\"%d,%d\\n\",f,b);\n\tif(!f) typ?ans+=tap[b]:tap[b]++;\n\tfor(int i=head[x];i;i=e[i].to)\n\t\tif(!vis[e[i].v]&&e[i].v!=fa) \n\t\t\tcalc1(x,e[i].v,typ,f,b);\n}\nvoid calc2(int fa,int x,bool typ,int f=0,int b=0){\n\tif(a[x]) b?b--:f++;\n\telse b++;\n\tif(!b) typ?ans+=tap[f]:tap[f]++;\n\tfor(int i=head[x];i;i=e[i].to)\n\t\tif(!vis[e[i].v]&&e[i].v!=fa)\n\t\t\tcalc2(x,e[i].v,typ,f,b);\n}\nvoid clear1(int fa,int x,int f=0,int b=0){\n\tif(a[x]) f++;\n\telse f?f--:b++;\n\tif(!f) tap[b]--;\n\tfor(int i=head[x];i;i=e[i].to)\n\t\tif(!vis[e[i].v]&&e[i].v!=fa) \n\t\t\tclear1(x,e[i].v,f,b);\n}\nvoid clear2(int fa,int x,int f=0,int b=0){\n\tif(a[x]) b?b--:f++;\n\telse b++;\n\tif(!b) tap[f]--;\n\tfor(int i=head[x];i;i=e[i].to)\n\t\tif(!vis[e[i].v]&&e[i].v!=fa)\n\t\t\tclear2(x,e[i].v,f,b);\n}\nvoid Solve(int x){\n//\tprintf(\"%d\\n\",x);\n\tif(a[x]) tap[1]++;\n\tfor(int i=head[x];i;i=e[i].to)\n\t\tif(!vis[e[i].v])\n\t\t\tcalc1(x,e[i].v,1),calc2(x,e[i].v,0,a[x],!a[x]);\n\tfor(int i=head[x];i;i=e[i].to) \n\t\tif(!vis[e[i].v]) clear2(x,e[i].v,a[x],!a[x]);\n\tif(a[x]) tap[1]--;\n\t////\n\tif(!a[x]) tap[1]++;\n\tfor(int i=head[x];i;i=e[i].to)\n\t\tif(!vis[e[i].v])\n\t\t\tcalc2(x,e[i].v,1),calc1(x,e[i].v,0,a[x],!a[x]);\n\tfor(int i=head[x];i;i=e[i].to) \n\t\tif(!vis[e[i].v]) clear1(x,e[i].v,a[x],!a[x]);\n\tif(!a[x]) tap[1]--;\n}\nvoid dfs(int x){\n\tvis[x]=1,Solve(x);\n\tfor(int i=head[x];i;i=e[i].to)\n\t\tif(!vis[e[i].v])\n\t\t\trt=0,getrt(x,e[i].v,sz[e[i].v]),dfs(rt);\n}\nint main(){\n\tint x,y;\n\tn=read();\n\tfor(int i=1;i<=n;i++) a[i]=cread();\n\tfor(int i=1;i<n;i++){\n\t\tx=read(),y=read();\n\t\taddedge(x,y),addedge(y,x);\n\t}getrt(0,1,n),dfs(rt);\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1669869915,
        "uid": 288716,
        "name": "lzqy_",
        "ccfLevel": 7,
        "title": "AT_icpc2015spring_a Balanced Paths \u9898\u89e3"
    }
]