[
    {
        "content": "[\u4e0d\u77e5\u9053\u4f1a\u4e0d\u4f1a\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://m-sea-blog.com/archives/4784/)\n\n\u8003\u8651\u5dee\u5206\uff0c\u5219\u95ee\u9898\u53d8\u4e3a\u6bcf\u6b21\u9009\u62e9\u4e00\u68f5\u5b50\u6811\uff0c\u6d88\u8017 $\\sum m_i$ \u7684\u6750\u6599\uff0c\u9020\u51fa $sz$ \u4e2a\u7269\u54c1\uff0c\u4e14\u6bcf\u68f5\u4e0d\u662f\u539f\u6811\u7684\u5b50\u6811\u90fd\u53ea\u80fd\u9009\u81f3\u591a $D$ \u6b21\u3002\n\n\u4ee4\u6bcf\u68f5\u5b50\u6811\u7684 $m_i$ \u4e4b\u548c\u4e3a\u5176\u4ee3\u4ef7\uff0c$sz$ \u4e3a\u5176\u6536\u76ca\uff0c\u5219\u76f8\u5f53\u4e8e\u4e00\u4e2a\u591a\u91cd\u80cc\u5305\u3002\n\n\u7136\u800c $D$ \u5728 $10^9$ \u7ea7\u522b\uff0c\u76f4\u63a5\u591a\u91cd\u80cc\u5305\u663e\u7136\u65e0\u6cd5\u901a\u8fc7\u3002\n\n\u8003\u8651\u4e00\u4e2a\u9519\u8bef\u7684\u8d2a\u5fc3\uff1a\u8bbe $w_i$ \u4e3a\u6536\u76ca\uff0c$v_i$ \u4e3a\u4ee3\u4ef7\uff0c\u6309 $\\frac{w_i}{v_i}$ \u6392\u5e8f\u5e76\u4ece\u5927\u5230\u5c0f\u8d2a\u5fc3\u9009\u3002\n\n\u8003\u8651\u4ec0\u4e48\u65f6\u5019\u8fd9\u4e2a\u8d2a\u5fc3\u662f\u5bf9\u7684\u3002\u5047\u8bbe\u6709\u4e24\u4e2a\u7269\u54c1 $i,j$ \u6ee1\u8db3 $\\frac{w_i}{v_i}>\\frac{w_j}{v_j}$\uff0c\u90a3\u4e48\u5728\u6536\u76ca\u76f8\u7b49\uff08\u9009\u4e86 $w_j$ \u4e2a $i$\uff0c\u9009\u4e86 $w_i$ \u4e2a $j$\uff09\u7684\u60c5\u51b5\u4e0b\uff0c\u9009 $w_j$ \u4e2a $i$ \u663e\u7136\u4f1a\u66f4\u4f18\u3002\u4ece\u800c\u5728 $\\frac{w_i}{v_i}$ \u5927\u7684\u7269\u54c1\u8fd8\u80fd\u52a0\u7684\u65f6\u5019\uff0c$\\frac{w_i}{v_i}$ \u5c0f\u7684\u81f3\u591a\u4f1a\u9009 $w_i-1$ \u4e2a\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u6bcf\u79cd\u7269\u54c1\u62ff\u51fa $\\min\\{n,D\\}$ \u4e2a\u51fa\u6765\u591a\u91cd\u80cc\u5305\uff0c\u5269\u4e0b\u7684\u90e8\u5206\u8d2a\u5fc3\u5373\u53ef\u3002\n\n\u5b9e\u73b0\u65f6\u6c42\u51fa $dp_i$ \u8868\u793a\u8fbe\u5230 $i$ \u7684\u4ee3\u4ef7\u6700\u5c0f\u9700\u8981\u7684\u4f53\u79ef\uff0c\u7136\u540e\u679a\u4e3e\u80cc\u5305\u8d21\u732e\u7684\u4ee3\u4ef7\u3001\u5269\u4e0b\u7684\u8d2a\u5fc3\u88c5\u6ee1\u5373\u53ef\u3002\u591a\u91cd\u80cc\u5305\u90e8\u5206\u53ef\u4ee5\u4e8c\u8fdb\u5236\u5206\u7ec4\uff0c\u4e5f\u53ef\u4ee5\u5355\u8c03\u961f\u5217\u3002\n\n```cpp\n// ===================================\n//   author: M_sea\n//   website: https://m-sea-blog.com/\n// ===================================\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n \nint read() {\n    int X=0,w=1; char c=getchar();\n    while (c<'0'||c>'9') { if (c=='-') w=-1; c=getchar(); }\n    while (c>='0'&&c<='9') X=X*10+c-'0',c=getchar();\n    return X*w;\n}\n \nconst int N=50+10;\n \nstruct edge { int v,nxt; } e[N];\nint head[N];\nvoid addEdge(int u,int v) {\n    static int cnt=0;\n    e[++cnt]=(edge){v,head[u]},head[u]=cnt;\n}\n \nint n,X,d;\nstruct node { ll v; int w,id; } a[N];\nint operator <(node a,node b) { return a.w*b.v>b.w*a.v; }\nll dp[N*N*N];\n \nvoid dfs(int u) {\n    a[u].w=1,a[u].id=u;\n    for (int i=head[u];i;i=e[i].nxt)\n        dfs(e[i].v),a[u].v+=a[e[i].v].v,a[u].w+=a[e[i].v].w;\n}\n \nint main() {\n    n=read(),X=read(),d=read();\n    a[1].v=read();\n    for (int i=2;i<=n;++i)\n        a[i].v=read(),addEdge(read(),i);\n    dfs(1); int mx=n*n*n,L=min(n,d);\n    memset(dp,0x3f,sizeof(dp)),dp[0]=0;\n    for (int i=1;i<=n;++i) {\n        int x=L;\n        for (int j=0;1<<j<=x;++j) {\n            int w=a[i].w*(1<<j); ll v=a[i].v*(1<<j);\n            for (int k=mx;k>=w;--k) dp[k]=min(dp[k],dp[k-w]+v);\n            x-=1<<j;\n        }\n        if (x) {\n            int w=a[i].w*x; ll v=a[i].v*x;\n            for (int j=mx;j>=w;--j) dp[j]=min(dp[j],dp[j-w]+v);\n        }\n    }\n    sort(a+1,a+n+1);\n    while (a[n].id!=1) --n;\n    ll ans=0;\n    for (int i=0;i<=mx;++i) {\n        if (dp[i]>X) continue;\n        ll w=i,v=dp[i];\n        for (int j=1;j<n;++j) {\n            ll c=min((ll)d-L,(X-v)/a[j].v);\n            w+=c*a[j].w,v+=c*a[j].v;\n        }\n        ll c=(X-v)/a[n].v;\n        w+=c*a[n].w,v+=c*a[n].v;\n        ans=max(ans,w);\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1588598396,
        "uid": 38370,
        "name": "M_sea",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 AT4120 \u3010[ARC096D] Sweet Alchemy\u3011"
    },
    {
        "content": "\u9996\u5148\u4e0d\u96be\u53d1\u73b0\u53ef\u4ee5\u5c06 $(p_i,i)$ \u8fde\u8fb9\uff0c\u7ed3\u679c\u4e00\u5b9a\u662f\u4e00\u68f5\u4ee5 $1$ \u4e3a\u6839\u7684\u6811\uff0c\u5c06 $c_i$ \u6811\u4e0a\u5dee\u5206\u540e\uff0c\u9650\u5236\u53d8\u6210 $0\\le c_i\\le d$\uff0c\u540c\u65f6\u9009\u62e9\u8fd9\u4e2a\u70b9\u76f8\u5f53\u4e8e\u9009\u62e9\u8fd9\u68f5\u5b50\u6811\uff0c\u6240\u4ee5\u8bbe $v_i=size_i,w_i=\\sum_{j\\in sub_i}m_j$\uff0c\u90a3\u4e48\u539f\u9898\u53d8\u6210\u4e00\u9053\u591a\u91cd\u80cc\u5305\u9898\u3002\n\n\u4f46\u662f\u7531\u4e8e $0\\le d\\le 10^9$\uff0c\u6240\u4ee5\uff08\u636e\u6211\u6240\u77e5\uff09\u6ca1\u6709\u80fd\u5728\u6b63\u786e\u7684\u590d\u6742\u5ea6\u91cc\u505a\u591a\u91cd\u80cc\u5305\u7684\u7b97\u6cd5\u3002\n\n\u6709\u4e00\u4e2a\u5c0f\u4f18\u5316\uff1a\u628a\u72b6\u6001 $f_{i,j}$ \u8bbe\u8ba1\u4e3a\u524d $i$ \u79cd\u7269\u54c1\u91cc\u4ef7\u503c\u4e3a $j$ \u65f6\u7684\u6700\u5c0f\u91cd\u91cf\uff0c\u4f46\u662f\u7531\u4e8e\u603b\u4ef7\u503c\u4f9d\u65e7\u5f88\u5927\uff0c\u6240\u4ee5\u5e76\u4e0d\u80fd\u8d77\u5230\u4ec0\u4e48\u4f5c\u7528\u3002\n\n\u8fd9\u65f6\u6211\u4eec\u60f3\u5230\u4e00\u4e2a\u8457\u540d\u7684\u5047\u505a\u6cd5\uff1a\u6309\u6027\u4ef7\u6bd4 $\\dfrac{v_i}{w_i}$ \u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u5982\u679c\u80fd\u9009\u5c31\u9009\u3002\n\n\u867d\u7136\u8fd9\u662f\u5047\u7684\uff0c\u4f46\u662f\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u6027\u8d28\uff1a\u5982\u679c\u6709\u4e24\u79cd\u7269\u54c1 $i,j$\uff0c\u4e14 $\\dfrac{v_i}{w_i}>\\dfrac{v_j}{w_j}$\uff0c\u90a3\u4e48\u5982\u679c\u6211\u4eec\u9009\u62e9\u4e86 $v_i$ \u4e2a\u7b2c $j$ \u79cd\u7269\u54c1\uff0c\u663e\u7136\u6362\u6210 $v_j$ \u4e2a\u7b2c $i$ \u79cd\u7269\u54c1\u4f1a\u4f7f\u7b54\u6848\u66f4\u4f18\u3002\n\n\u8bc1\u660e\uff1a\u7531 $\\dfrac{v_i}{w_i}>\\dfrac{v_j}{w_j}$ \u53ef\u4ee5\u5f97\u5230 $v_iw_j>v_jw_i$\uff0c\u4ea4\u6362\u540e\u603b\u4ef7\u503c\u4e0d\u53d8\uff0c\u4f46\u662f\u603b\u4f53\u79ef\u53d8\u5c0f\uff0c\u6240\u4ee5\u66f4\u4f18\u3002\n\n\u7531\u6b64\u53ef\u4ee5\u63a8\u51fa\u4e00\u4e2a\u6027\u8d28\uff1a\u6700\u7ec8\u7b54\u6848\u4e2d $c_i\\le d-v_j,c_j\\ge v_i$ \u4e0d\u53ef\u80fd\u51fa\u73b0\u3002\n\n\u8bc1\u660e\uff1a\u82e5 $c_i\\le d-v_j,c_j\\ge v_i$\uff0c\u90a3\u4e48\u6211\u4eec\u663e\u7136\u53ef\u4ee5\u628a $v_i$ \u4e2a\u7b2c $j$ \u79cd\u7269\u54c1\u6362\u6210 $v_j$ \u4e2a\u7b2c $i$ \u79cd\u7269\u54c1\uff0c\u7b54\u6848\u4e0d\u4f1a\u66f4\u52a3\u3002\n\n\u628a\u8fd9\u4e2a\u6761\u4ef6\u9002\u5f53\u653e\u5bbd\u5f97\u5230\u5bf9\u4e8e\u4efb\u610f\u6ee1\u8db3 $\\dfrac{v_i}{w_i}>\\dfrac{v_j}{w_j}$ \u7684 $i,j$\uff0c\u6709 $c_i>d-n$ \u6216 $c_j<n$\u3002\n\n\u628a\u6700\u7ec8\u7b54\u6848\u5bf9\u5e94\u7684\u56fe\u753b\u51fa\u6765\u3002\n\n![3.jpg](https://s2.loli.net/2022/10/18/afhdkwqvgjA9EVu.jpg)\n\n\u53d1\u73b0\u7ea2\u6846\u90e8\u5206\u53ef\u4ee5\u76f4\u63a5\u591a\u91cd\u80cc\u5305\uff0c\u5269\u4e0b\u7684\u90e8\u5206\u6b63\u597d\u6ee1\u8db3\u8d2a\u5fc3\u7684\u6027\u8d28\uff08\u524d\u9762\u80fd\u9009\u5c31\u9009\uff09\uff0c\u6240\u4ee5\u53ef\u4ee5\u679a\u4e3e\u80cc\u5305\u7684\u6bcf\u4e2a\u6700\u7ec8\u72b6\u6001\uff0c\u8d2a\u5fc3\u8ba1\u7b97\u7b54\u6848\uff0c\u66f4\u65b0\u7b54\u6848\u5373\u53ef\uff0c\u590d\u6742\u5ea6\u74f6\u9888\u5728\u80cc\u5305\uff0c\u4e3a $O(n^4\\log n)$\u3002",
        "postTime": 1666100270,
        "uid": 376161,
        "name": "wsfxk",
        "ccfLevel": 6,
        "title": "AT4120 [ARC096D] Sweet Alchemy \u9898\u89e3"
    },
    {
        "content": "PS\uff1a\u4e3b\u8981\u662f\u60f3\u8865\u5145\u6700\u540e\u8d2a\u5fc3\u6b63\u786e\u6027\u7684\u8bc1\u660e\n\n\u9996\u5148\u5dee\u5206\uff0c\u95ee\u9898\u53d8\u4e3a\u6bcf\u6b21\u9009\u62e9\u4e00\u68f5\u5b50\u6811\uff0c\u6743\u503c\u4e3a $sz$\uff0c\u82b1\u8d39\u4e3a $\\sum m_i$\uff0c\u4e14\u9664\u4e861\u53f7\u70b9\u7684\u5b50\u6811\u6700\u591a\u9009 $d$ \u6b21\u3002\n\n\u76f4\u63a5\u80cc\u5305\u7684\u8bdd\uff0c\u56e0\u4e3a\u6743\u503c\u548c\u82b1\u8d39\u90fd\u5f88\u5927\uff0c\u65e0\u8bba\u54ea\u79cd\u72b6\u6001\u90fd\u6ca1\u6cd5\u505a\u3002\n\n\u8003\u8651\u5230 $n$ \u5f88\u5c0f\uff0c\u6211\u4eec\u6709\u4e00\u79cd\u590d\u6742\u5ea6\u4e0e\u6743\u503c\u548c\u82b1\u8d39\u90fd\u65e0\u5173\u7684\u9009\u7269\u54c1\u65b9\u6cd5\uff1a\u8d2a\u5fc3\uff0c\u5c3d\u53ef\u80fd\u9009\u62e9\u6027\u4ef7\u6bd4\u5927\u7684\u7269\u54c1\u3002\n\u76f4\u63a5\u8d2a\u5fc3\u4e0d\u5bf9\uff0c\u6211\u4eec\u8003\u8651\u8d2a\u5fc3\u80fd\u5728\u4ec0\u4e48\u60c5\u51b5\u4e0b\u9002\u7528\uff1a\n\u8bbe $i,j$ \u4e24\u4e2a\u7269\u54c1\u7684\u6743\u503c\u5206\u522b\u4e3a $v_i,v_j$\uff0c\u4e14\u6743\u503c\u6bd4 $\\frac {v_i}{w_i}<\\frac {v_j}{w_j}$\uff0c\u90a3\u4e48\u5982\u679c $i$ \u9009\u4e86 $v_j$ \u4e2a\u7269\u54c1\uff0c\u5c31\u53ef\u4ee5\u66ff\u6362\u4e3a $j$ \u9009 $v_i$ \u4e2a\u7269\u54c1\uff0c\u6743\u503c\u4e0d\u53d8\uff0c\u82b1\u8d39\u53d8\u5c0f\uff0c\u6b64\u65f6\u6309\u8d2a\u5fc3\u7684\u987a\u5e8f\u9009\u662f\u5bf9\u7684\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u628a $\\min(d,\\max v_i)$ \u4e2a\u7269\u54c1\u62ff\u6765\u505a\u80cc\u5305\uff0c\u5269\u4e0b\u7684\u90e8\u5206\u8d2a\u5fc3\u9009\u62e9\u3002\u56e0\u4e3a\u6743\u503c\u6700\u5927\u662f $sz=n$\uff0c\u53ef\u4ee5\u8bbe $f[i]$ \u8868\u793a\u6743\u503c\u548c\u4e3a $i$ \u65f6\u7684\u6700\u5c0f\u82b1\u8d39\uff0c\u7136\u540e\u679a\u4e3e\u4e00\u4e2a\u6743\u503c\uff0c\u5269\u4e0b\u7684\u82b1\u8d39\u8d2a\u5fc3\u9009\u62e9\u3002\n\u590d\u6742\u5ea6 $O(n^3*n\\log n+n^4)$\uff0c\u6743\u503c\u548c\u7684\u8303\u56f4\u662f $n^3$\u3002\n\n\u8d2a\u5fc3\u7684\u6b63\u786e\u6027\u53ef\u4ee5\u8fd9\u4e48\u7406\u89e3\uff1a\n\u5728\u6700\u4f18\u89e3\u4e2d\uff0c\u5982\u679c\u6700\u7ec8 $j$ \u7684\u4e2a\u6570\u5269\u4e0b $\\ge n$ \u4e2a\uff0c$i$ \u9009\u7684\u4e2a\u6570\u4e00\u5b9a $\\le n$\uff0c\u5f53\u6211\u4eec\u80cc\u5305\u786e\u5b9a\u4e86 $i$ \u5728 $n$ \u4ee5\u5185\u9009\u591a\u5c11\u4e2a\u65f6\uff0c\u5269\u4e0b\u7684\u82b1\u8d39\u5c31\u6309\u987a\u5e8f\u5148\u7ed9 $j$ \u8d2a\u5fc3\u9009\uff0c\u80fd\u591f\u53d6\u5230\u6700\u4f18\u89e3\u3002\n\u5982\u679c\u6700\u7ec8\u5269\u4e0b $j$ \u7684\u4e2a\u6570 $x<n$ \u4e2a\uff0c\u90a3\u4e48\u80cc\u5305\u786e\u5b9a\u9009 $n-x$ \u4e2a\uff0c\u5269\u4e0b\u7684 $d-n$ \u4e2a\u8d2a\u5fc3\u4f1a\u5168\u90e8\u9009\u6ee1\uff08\u56e0\u4e3a\u8d2a\u5fc3\u7684\u6700\u5927\u4e2a\u6570\u662f $d-n$\uff0c\u4e0d\u4f1a\u518d\u53bb\u53d6\u90a3 $x$ \u91cc\u9762\u7684\uff09\uff0c\u6b64\u65f6\u6070\u597d\u80fd\u591f\u53d6\u5230\u6700\u4f18\u89e3\uff0c\u800c\u4e0d\u4f1a\u51fa\u73b0 $j$ \u7684\u8d2a\u5fc3\u9519\u8bef\u5730\u5360\u636e\u4e86\u540e\u9762\u7684\u82b1\u8d39\u7684\u60c5\u51b5\u3002",
        "postTime": 1594259569,
        "uid": 30412,
        "name": "xmy3",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT4120 \u3010[ARC096D] Sweet Alchemy\u3011"
    },
    {
        "content": "\u8bf7\u6c42\u7ba1\u7406\u5458\u6dfb\u52a0\u7b80\u8981\u9898\u610f\n### \u7b80\u8981\u9898\u610f\n\u7ed9\u51fa\u4e00\u68f5\u6811,\u6bcf\u4e2a\u70b9\u6709\u70b9\u6743,\u8981\u6c42\u9009\u51fa\u70b9\u6743\u548c\u4e0d\u8d85\u8fc7 $D$ \u7684\u6570\u91cf\u5c3d\u91cf\u591a\u7684\u70b9,\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6,\u8bbe $c_i$ \u4e3a $i$ \u70b9\u9009\u7684\u6b21\u6570,$f_i$ \u4e3a $i$ \u7684\u7236\u4eb2,\u5219\u6709\n\n$c_{f_i}\\le c_i \\le c_{f_i}+d$ ,\u5176\u4e2d $d$ \u4e3a\u7ed9\u5b9a\u503c\n\n### sol\n\u53d1\u73b0\u8fd9\u4e2a\u6761\u4ef6\u662f\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u5dee\u5206\u7684\u5f62\u5f0f,\u5982\u679c\u9009\u4e86\u4e00\u6b21 $f_i$,\u90a3\u4e48\u5fc5\u5b9a\u4e5f\u8981\u9009\u4e00\u6b21 $i$ ,\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a $i$ \u770b\u505a\u4e00\u4e2a\u7269\u54c1,\u4ef7\u503c\u4e3a $i$ \u7684\u5b50\u6811\u5927\u5c0f,\u4ee3\u4ef7\u4e3a $i$ \u5b50\u6811\u5185\u7684\u70b9\u6743\u548c,\u5bf9\u4e8e\u9664\u4e86 $1$ \u610f\u5916\u7684\u70b9\u6700\u591a\u9009 $d$ \u4e2a\n\n\u663e\u7136\u662f\u4e2a\u80cc\u5305,\u4f46\u662f\u53d1\u73b0\u503c\u57df\u6709\u70b9\u5927,$n\\le 50$ \u8003\u8651\u4e00\u4e9b\u539f\u672c\u5e73\u65f6\u88ab\u5ffd\u89c6\u7684\u80cc\u5305\u7b97\u6cd5\n\n\u76f8\u4fe1\u6bcf\u4e2a\u4eba\u6700\u5f00\u59cb\u5b66\u80cc\u5305\u7684\u65f6\u5019\u90fd\u4f1a\u6709\u4e00\u4e2a\u8d2a\u5fc3\u60f3\u6cd5,\u5c31\u662f\u6309\u7167\u6743\u503c\u6bd4\u7684\u5927\u5c0f\u6765\u505a,\u4f46\u662f\u8fd9\u4e48\u663e\u7136\u662f\u9519\u7684,\u539f\u56e0\u4e5f\u5f88\u660e\u663e,\u6211\u4eec\u8003\u8651\u4f18\u5316\u8fd9\u79cd\u8d2a\u5fc3,\u8ba9\u4ed6\u53d8\u6210\u5bf9\u7684\n\n\u5047\u8bbe\u6709\u7269\u54c1 $i,j$ ,\u5927\u5c0f\u4e3a $v$ ,\u6743\u503c\u4e3a $w$ ,\u90a3\u4e48\u5982\u679c $i$ \u9009\u4e86 $w_j$ \u4e2a\u5c31\u53ef\u4ee5\u53d8\u6210 $j$ \u9009\u4e86 $w_i$ \u4e2a,\u4ea4\u6362\u5f53\u4e14\u4ec5\u5f53\u6743\u503c\u6bd4\u66f4\u5927,\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u5bf9\u4e8e $i$ \u9009\u4e86 $w_j$ \u6574\u6570\u500d\u4e2a\u7684\u90e8\u5206\u662f\u53ef\u4ee5\u76f4\u63a5\u7528\u8d2a\u5fc3\u505a\u51fa\u6765\u7684\n\n\u90a3\u4e48\u6211\u4eec\u5047\u8bbe\u6700\u4f18\u7b54\u6848\u662f $i$ \u9009\u4e86 $c_i$ \u4e2a,\u6211\u4eec\u53ef\u4ee5\u628a $c_i$ \u5206\u6210\u5c0f\u4e8e $w_j$ \u548c\u5927\u4e8e $w_j$ \u4e24\u4e2a\u90e8\u5206,\u5927\u4e8e $w_j$ \u7684\u90e8\u5206\u662f\u76f4\u63a5\u8d2a\u5fc3\u5c31\u662f\u5bf9\u7684,\u5c0f\u4e8e $w_j$ \u7684\u90e8\u5206\u6211\u4eec\u53ef\u4ee5\u8d2a\u5fc3,\u7136\u540e\u6211\u4eec\u53d1\u73b0 $w_j$ \u662f\u5c0f\u4e8e $n$ \u7684,\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a\u7269\u54c1,\u9009\u51fa\u6765 $min(n,d)$ \u4e2a\u8fdb\u884cdp\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^3*n\\log(n))$\n\n\u4f3c\u4e4e\u5728\u6a21\u610f\u4e49\u4e0b\u6709\u51b3\u7b56\u5355\u8c03\u6027,\u4f46\u662f\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u5df2\u7ecf\u8db3\u591f\u4e86\n\nUpd:\u611f\u8c22 @ [TheShadow](https://www.luogu.com.cn/user/122273) \u7684\u6307\u6b63,\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u786e\u5e94\u8be5\u662f $O(n^4\\log(n))$ \u7684,\u4f46\u662f\u7b97\u6cd5\u5b9e\u9645\u8fd0\u884c\u901f\u5ea6\u4f3c\u4e4e\u6bd4\u8f83\u5feb,\u6240\u4ee5\u4e5f\u4e0d\u5b58\u5728\u4ec0\u4e48\u5361\u5e38\u4e4b\u7c7b\u7684\u95ee\u9898\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int M=2e5+5;\nconst int N=55;\nstruct each{\n\tlong long v,w,id;\n\tbool operator < (each k){\n\t\treturn 1LL*w*k.v>v*k.w;\n\t}\n}a[N];\nlong long ans,f[M];\nint n,m,d,mw,li,now,v[N],nex[N],head[N];\nvoid addedges(int x,int y){\n\tnex[++now]=head[x];\n\thead[x]=now,v[now]=y;\n}\nvoid dfs(int x){\n\tfor(int i=head[x];i;i=nex[i]){\n\t\tdfs(v[i]),a[x].v+=a[v[i]].v;\n\t\ta[x].w+=a[v[i]].w;\n\t}\n}\nvoid insert(long long w,long long v){\n\tfor(int i=mw;i>=w;i--)\n\t\tf[i]=min(f[i],f[i-w]+v);\n}\nvoid move(each k){\n\tint x=li;\n\tfor(int i=0;(1<<i)<=x;i++){\n\t\tinsert(k.w*(1<<i),k.v*(1<<i));\n\t\tx-=1<<i;\n\t}\n\tif(x)\tinsert(k.w*x,k.v*x);\n}\nint main(){\n\t//freopen(\"1.out\",\"w\",stdout);\n\t//freopen(\"1.in\",\"r\",stdin);\n\tscanf(\"%d%d%d\",&n,&m,&d);\n\tscanf(\"%lld\",&a[1].v);\n\ta[1].w=1,a[1].id=1;\n\tfor(int i=2,x;i<=n;i++){\n\t\tscanf(\"%lld%d\",&a[i].v,&x);\n\t\taddedges(x,i),a[i].w=1;\n\t}\n\tdfs(1),li=min(n,d),mw=n*n*n;\n\tmemset(f,23,sizeof(f)),f[0]=0;\n\tfor(int i=1;i<=n;i++)\tmove(a[i]);\n\n\tsort(a+1,a+n+1);\n\twhile(a[n].id!=1)\t--n;\n\tfor(int i=0;i<=mw;i++){\n\t\tif(f[i]>m)\tcontinue;\n\t\tint v=f[i],w=i;\n\t\tfor(int j=1;j<n;j++){\n\t\t\tint k=min(1LL*d-li,(m-v)/a[j].v);\n\t\t\tw+=k*a[j].w,v+=k*a[j].v;\n\t\t}\n\t\tint k=(m-v)/a[n].v;\n\t\tans=max(ans,w+k*a[n].w);\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n\n```",
        "postTime": 1582797760,
        "uid": 88567,
        "name": "lzk5627",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 AT4120 \u3010[ARC096D] Sweet Alchemy\u3011"
    },
    {
        "content": "### ARC 096D\n#### Solution\n\u9996\u5148\u4e0d\u96be\u53d1\u73b0$p_i$\u6784\u6210\u4e86\u4e00\u4e2a\u6811\u5f62\u7ed3\u6784\uff0c\u53ef\u4ee5\u8f6c\u5316\u4e3a\u6bcf\u4e2a\u70b9\u7684\u4ee3\u4ef7\u662f\u5b50\u6811\u91cc\u6240\u6709\u70b9\u7684$m_i$\u4e4b\u548c\uff0c\u4ef7\u503c\u662f\u5b50\u6811\u7684\u8282\u70b9\u4e2a\u6570\uff0c$1$\u53f7\u70b9\u53ef\u4ee5\u9009\u4efb\u610f\u4e2a\uff0c\u5176\u4ed6\u70b9\u6700\u591a\u9009$d$\u4e2a\uff0c\u6c42\u6700\u5927\u4ef7\u503c\u3002\n\n\u5148\u8003\u8651\u4e00\u4e2a\u8d2a\u5fc3\uff0c\u8bb0$w_i$\u4e3a\u4ee3\u4ef7\uff0c$v_i$\u4e3a\u4ef7\u503c\uff0c\u5148\u628a\u6240\u6709\u70b9\u6309$\\frac{w}{v}$\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7136\u540e\u4ece\u524d\u5f80\u540e\u8d2a\u5fc3\u9009\u3002\u8fd9\u6837\u8d2a\u5fc3\u80af\u5b9a\u662f\u9519\u7684\uff0c\u4e0d\u8fc7\u6211\u4eec\u53d1\u73b0\uff0c\u7531\u4e8e$n\\leq 50$\uff0c\u6240\u4ee5$v_i\\leq 50$\u3002\u5bf9\u4e8e\u6309$\\frac{w}{v}$\u6392\u8fc7\u5e8f\u7684\u6570\u7ec4\uff0c\u5982\u679c\u5b58\u5728\u67d0\u4e2a$i<j$\uff0c\u4e14$i$\u8fd8\u80fd\u9009\u7684\u6b21\u6570\u5927\u4e8e\u7b49\u4e8e$50$\uff0cj\u5df2\u7ecf\u9009\u7684\u6b21\u6570\u5927\u4e8e\u7b49\u4e8e$50$\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8ba9$i$\u518d\u9009$v_j$\u6b21\uff0c\u8ba9j\u9009\u7684\u6b21\u6570\u51cf\u5c11$v_i$\u6b21\uff0c\u8fd9\u6837\u603b\u7684\u4ef7\u503c\u662f\u4e0d\u53d8\u7684\uff0c\u4f46\u662f\u4ee3\u4ef7\u51cf\u5c0f\u4e86\uff0c\u6240\u4ee5\u4e00\u5b9a\u4e0d\u4f1a\u5b58\u5728\u8fd9\u79cd\u60c5\u51b5\u3002\n\n\u56e0\u6b64\u6309\u7167$\\frac{w}{v}$\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u6bcf\u4e2a\u7269\u54c1\u62ff$50$\u4e2a\u51fa\u6765\u8fdb\u884c\u80cc\u5305\uff0c\u5269\u4e0b\u7684\u4e00\u5b9a\u662f\u4ece\u524d\u5f80\u540e\u8d2a\u5fc3\u7684\u62ff\u3002\n\n\u6b64\u65f6\u603b\u4ef7\u503c\u4e0d\u8d85\u8fc7$\\mathcal O(n^3)$\uff0c\u4e8e\u662f\u518d\u8003\u8651\u4ee5\u603b\u4ef7\u503c\u4e3a\u72b6\u6001\u7684\u591a\u91cd\u80cc\u5305\uff0c\u5373\u8bbe$f[i][j]$\u4e3a\u8003\u8651\u5230\u7b2c$i$\u4e2a\u7269\u54c1\uff0c\u603b\u4ef7\u503c\u4e3a$j$\u7684\u6700\u5c0f\u4f53\u79ef\u3002\n\n\u53ef\u4ee5\u7528\u4e8c\u8fdb\u5236\u62c6\u5206\u6216\u5355\u8c03\u961f\u5217\u4f18\u5316\uff0c\u590d\u6742\u5ea6\u5206\u522b\u4e3a$\\mathcal O(n^4\\log n)$\u548c$\\mathcal O(n^4)$\n#### Code\n```cpp\nint n,m,D,len,tot;\nint head[MAXN],val[MAXN],ord[MAXN],up[MAXN];\nll ans;\nll w[MAXN],f[MAXM],W[MAXM],V[MAXM];\n\nstruct Edge{\n    int to,next;\n} e[MAXN << 1];\n\nvoid add_edge(int u,int v){\n    e[++len] = (Edge){v,head[u]};\n    head[u] = len;\n}\n\nvoid dfs(int u){\n    val[u] = 1;\n    for(int i = head[u];i != -1;i = e[i].next){\n        int v = e[i].to;\n        dfs(v);\n        val[u] += val[v];\n        w[u] += w[v];\n    }\n}\n\nbool cmp(const int &x,const int &y){\n    return 1ll * w[x] * val[y] < 1ll * w[y] * val[x];\n}\n\nint main(){\n    memset(head,-1,sizeof(head));\n    scanf(\"%d%d%d%lld\",&n,&m,&D,&w[1]);\n    for(int i = 2,x;i <= n;i++){\n        scanf(\"%lld%d\",&w[i],&x);\n        add_edge(x,i);\n    }\n    dfs(1);\n    for(int i = 1;i <= n;i++) ord[i] = i, up[i] = D;\n    up[1] = INF;\n    sort(ord + 1,ord + 1 + n,cmp);\n    int maxV = 0;\n    for(int i = 1;i <= n;i++){\n        int x = ord[i], d = min(n,up[x]);\n        maxV += d * val[x];\n        up[x] -= d;\n        ll a = 0,b = 0;\n        while(a + (1 << b) <= d){\n            a += (1 << b);\n            V[++tot] = (1 << b) * val[x];\n            W[tot] = (1 << b) * w[x];\n            b += 1;\n        }\n        if(d - a) V[++tot] = (d - a) * val[x], W[tot] = (d - a) * w[x];\n    }\n    memset(f,0x3f,sizeof(f));\n    f[0] = 0;\n    for(int i = 1;i <= tot;i++){\n        for(int j = maxV;j >= 0;j--)\n            checkMin(f[j + V[i]],f[j] + W[i]);\n    }\n    for(int i = 0;i <= maxV;i++){\n        if(f[i] <= m){\n            ll x = i,sum = f[i];\n            for(int j = 1;j <= n;j++){\n                int y = ord[j];\n                ll c = min((ll)up[y],(m - sum) / w[y]);\n                x += c * val[y];\n                sum += c * w[y];\n            }\n            ans = max(ans,x);\n        }\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```\n",
        "postTime": 1608523141,
        "uid": 108894,
        "name": "\u5173\u6000\u4ed6\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT4120 \u3010[ARC096D] Sweet Alchemy\u3011"
    },
    {
        "content": "\u5927\u4f6c\u4eec\u90fd\u5199\u7684\u4e0d\u592a\u8be6\u7ec6\uff0c\u6211\u8865\u5145\u4e00\u4e9b\u7ec6\u8282\u3002~~\u4f46\u662f\u4e0d\u653e\u4ee3\u7801\u3002~~\n\n\n\u7b2c\u4e00\u6b65\u6211\u4eec\u5148\u5dee\u5206\uff0c\u6bcf\u4e00\u4e2a\u70b9\u9009\u62e9\u4e00\u6b21\u5c31\u5fc5\u987b\u8981\u628a\u5b50\u6811\u5185\u6240\u6709\u8282\u70b9\u9009\u62e9\u4e00\u6b21\uff0c\u4e00\u4e2a\u70b9\u663e\u7136\u4e0d\u80fd\u9009 $d$ \u6b21\u4ee5\u4e0a\uff0c\u5426\u5219\u548c\u7236\u4eb2\u8282\u70b9\u5dee\u503c\u4e00\u5b9a\u8d85\u8fc7 $d$\uff0c\u5982\u6b64\u4e00\u6765\u6211\u4eec\u53ef\u4ee5\u5c06\u539f\u95ee\u9898\u8f6c\u5316\u4e3a\u4e00\u4e2a\u7ecf\u5178\u7684\u591a\u91cd\u80cc\u5305\u95ee\u9898\u2014\u2014\u6bcf\u68f5\u5b50\u6811\u662f\u4e00\u4e2a\u7269\u54c1\uff0c\u4ef7\u503c\u4e3a\u5b50\u6811\u5185 $c_i$ \u4e4b\u548c\uff0c\u4f53\u79ef\u4e3a $m_i$ \u4e4b\u548c\uff0c\u6700\u591a\u9009\u62e9 $d$ \u6b21\uff0c\u7279\u522b\u7684\uff0c$1$ \u5b50\u6811\u53ef\u4ee5\u9009\u62e9\u4efb\u610f\u591a\u6b21\u3002\u7531\u4e8e $d$ \u662f $10^9$ \u7ea7\u522b\uff0c\u663e\u7136\u65e0\u6cd5\u901a\u8fc7\u3002\n\n\u8003\u8651\u600e\u4e48\u53bb\u4f18\u5316\u5b83\uff0c\u5c1d\u8bd5\u5bfb\u627e\u4e00\u4e2a\u8ddf\u9608\u503c\u65e0\u5173\u7684\u80cc\u5305\u95ee\u9898\u7b97\u6cd5\u3002\n\n\u9996\u5148\u662f\u4e00\u4e2a\u5e38\u89c1\uff08\uff1f\uff09trick\uff0c\u7531\u4e8e\u8d28\u91cf\u6bd4\u8f83\u5c0f\uff0c\u4ea4\u6362\u4f53\u79ef\u548c\u8d28\u91cf\uff0c\u4e5f\u5c31\u662f\u8bf4 $dp_i$ \u8868\u793a\u8d28\u91cf\u4e3a $i$ \u65f6\u7684\u6700\u5c0f\u4f53\u79ef\u3002\u8fd9\u6837 dp \u4f9d\u7136\u662f\u6709\u95ee\u9898\u7684\u2014\u2014\u6709\u53ef\u80fd\u8d28\u91cf\u4e5f\u6bd4\u8f83\u5927\uff0c\u5728\u8fd9\u91cc\u5c31\u662f\u6709\u53ef\u80fd\u8d85\u8fc7 $n^3$ \u7684\u8303\u56f4\u3002\u600e\u4e48\u4f18\u5316\uff1f\uff08\u4e0b\u6587\u4e2d $w$ \u662f\u8d28\u91cf\uff0c$v$ \u662f\u91cd\u91cf\uff09\n\n\u5982\u679c\u4e00\u4e2a\u7269\u54c1 $j$ \u9009\u4e86 $w_i$ \u4ef6\uff0c\u5e76\u4e14\u5b58\u5728\u4e00\u4e2a $i$ \u4f7f\u5f97 $ \\frac{w_i}{v_i}> \\frac{w_j}{v_j}$ \u7684\u8bdd\uff0c\u9009\u62e9 $w_j$ \u4e2a $i$ \u4f1a\u66f4\u4f18\uff0c\u6362\u53e5\u8bdd\u8bf4\u5f53\u4e00\u4e2a\u52a3\u4e8e $i$ \u7684 $j$ \u9009\u5230\u4e86 $w_i$ \u4e2a\u7684\u65f6\u5019\u5c31\u4f1a\u88ab $i$ \u66ff\u6362\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u7528\u6bcf\u4e2a\u7269\u54c1\u62ff\u51fa $\\min(n,d)$ \u4e2a\u505a\u4e00\u4e0b\u591a\u91cd\u80cc\u5305\uff0c\u5269\u4f59\u7684\u53ef\u4ee5\u901a\u8fc7\u8d2a\u5fc3\u89e3\u51b3\u3002\u5f53\u7136\u591a\u91cd\u80cc\u5305\u8981\u7528\u5355\u8c03\u961f\u5217/\u4e8c\u8fdb\u5236\u4f18\u5316\u4e00\u4e0b\u591a\u91cd\u80cc\u5305\u3002",
        "postTime": 1633015977,
        "uid": 282751,
        "name": "cryozwq",
        "ccfLevel": 7,
        "title": "AT4120 [ARC096D] Sweet Alchemy \u9898\u89e3"
    }
]