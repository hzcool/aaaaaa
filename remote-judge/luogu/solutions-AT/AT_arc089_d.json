[
    {
        "content": "\u4f60\u5495\u7adf\u7136\u6ca1\u6709\u9898\u89e3\uff0c\u8d76\u7d27\u6765\u5199\u4e00\u53d1\u3002\n\n\u5c11\u6709\u7684\u80fd\u81ea\u5df1\u60f3\u51fa\u6765\u7684\u6bd2\u7624\u9898\u3002\n\n\u9996\u5148\u770b\u5230\u8fd9\u79cd\u5f62\u5f0f\u9898\u76ee\u7684\u4e00\u822c\u90fd\u5148\u8f6c\u5316\u4e3a\u8003\u8651\u5bf9\u4e8e\u4e00\u79cd\u7ed3\u679c\uff0c\u662f\u5426\u5b58\u5728\u65b9\u6848\u6ee1\u8db3\u8981\u6c42\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u67d3\u8272\u7684\u7ed3\u679c\u4e2d\u5982\u679c\u5b58\u5728\u8fde\u7eed\u7684\u4e00\u6bb5\u989c\u8272\u76f8\u540c\u7684\uff0c\u90a3\u4e48\u76f4\u63a5\u628a\u5b83\u5408\u5e76\u6210\u4e00\u4e2a\u4e0d\u5f71\u54cd\u67d3\u8272\u65b9\u6848\u5b58\u5728\u6027\u3002\n\n\u73b0\u5728\u628a `W` \u770b\u4f5c\u5206\u9694\u7b26\uff0c\u6bcf\u4e00\u6bb5\u90fd\u662f `R` \u548c `B` \u76f8\u4ea4\u9519\u7684\u3002\u663e\u7136\u6bcf\u4e00\u6bb5\u7684\u67d3\u8272\u76f8\u4e92\u72ec\u7acb\u3002\n\n\u5982\u679c\u4e00\u6bb5\u91cc\u9762\u6709 $k$ \u4e2a `B`\uff0c\u5219\u8fd9\u4e00\u6bb5\u5728\u6700\u4f18\u65b9\u6848\u4e0b\u9700\u8981 $a$ \u6b21 `r` \u64cd\u4f5c\u548c $k-a+1$ \u6b21 `b` \u64cd\u4f5c\uff0c\u5176\u4e2d $a$ \u4e3a $[1,k]$ \u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u6574\u6570\u3002\u5e76\u4e14\u5982\u679c $k\\ge 1$\uff0c\u5219\u524d\u4e24\u6b21\u64cd\u4f5c\u4e00\u5b9a\u5206\u522b\u4e3a `r` \u548c `b`\u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u8d2a\u5fc3\u4e86\u3002\u8003\u8651\u76f4\u63a5\u679a\u4e3e\u51fa $k\\ge 1$ \u7684\u6bb5\u6570 $x_1$ \u548c $k=0$ \u7684\u6bb5\u6570 $x_2$\u3002\n\n\u90a3\u4e48\u53ef\u4ee5\u53d1\u73b0\uff0c\u6700\u524d\u9762\u7684 $x_1+x_2$ \u4e2a `r` \u64cd\u4f5c\u4e00\u5b9a\u7ed9\u6bcf\u4e00\u4e2a\u6bb5\u5206\u914d\u6070\u597d\u4e00\u4e2a\u3002\u73b0\u5728\u9700\u8981\u518d\u5206\u914d $x_1$ \u4e2a `b` \u7ed9\u524d $x_1$ \u4e2a\u64cd\u4f5c\u3002\u5bb9\u6613\u53d1\u73b0\u5728\u5206\u914d\u5b8c\u8fd9\u4e9b\u4e4b\u540e\u5269\u4e0b\u7684\u64cd\u4f5c `r` \u548c `b` \u662f\u7b49\u4ef7\u7684\u3002\u56e0\u6b64\u6211\u4eec\u5e0c\u671b\u8fd9\u4e9b `b` \u64cd\u4f5c\u5c3d\u91cf\u9760\u524d\u4e00\u70b9\uff0c\u4e8e\u662f\u76f4\u63a5\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6bb5\u66b4\u529b\u627e\u51fa\u7b2c\u4e00\u4e2a\u80fd\u5206\u914d\u5230\u5b83\u7684 `b` \u64cd\u4f5c\u5373\u53ef\u3002\u6b63\u786e\u6027\u663e\u7136\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6bb5\uff0c\u53ef\u4ee5\u76f4\u63a5\u628a\u5df2\u7ecf\u5206\u914d\u7ed9\u5b83\u7684\u64cd\u4f5c\u4ece\u5e8f\u5217\u4e2d\u5220\u6389\u3002\u540c\u65f6\u7ef4\u62a4\u4e00\u4e2a $w_i(i\\in[1,x_1])$ \u8868\u793a\u5206\u914d\u7ed9\u7b2c $i$ \u6bb5\u7684 `b` \u64cd\u4f5c\u4e4b\u540e\u8fd8\u5269\u591a\u5c11\u4e2a\u64cd\u4f5c\u3002\n\n\u4ee4 $k_i$ \u8868\u793a\u7b2c $i$ \u4e2a\u6bb5\u4e2d\u6709 $k_i$ \u4e2a `B`\u3002\u53ef\u4ee5\u53d1\u73b0\u5408\u6cd5\u5f53\u4e14\u4ec5\u5f53 $\\forall i,w_i\\ge\\sum\\limits_{j=i}^{x_1+x_2}k_j$\u3002\n\n\u8003\u8651\u5c06\u8fd9\u4e2a\u201c\u5408\u5e76\u201d\u540e\u7684\u5b57\u7b26\u4e32\u8fd8\u539f\u6210\u539f\u6765\u7684\u5b57\u7b26\u4e32\u7684\u65b9\u6848\u6570\u3002\n\n\u4ee4 $K=\\sum\\limits_{i=1}^{x_1+x_2}k_i$\u3002\n\n\u6709\u4e24\u79cd\u4f4d\u7f6e\uff0c\u7b2c\u4e00\u79cd\u662f\u81f3\u5c11\u8981\u586b\u4e00\u4e2a\u7684\u4f4d\u7f6e\uff0c\u7b2c\u4e8c\u79cd\u662f\u4efb\u610f\u586b\u7684\u4f4d\u7f6e\u3002\u6bcf\u4e00\u6bb5\u5de6\u53f3\u4e24\u7aef\u90fd\u6709 $2$ \u4e2a\u586b `R` \u7684\u7b2c\u4e8c\u79cd\u4f4d\u7f6e\uff0c\u6574\u4e2a\u5e8f\u5217\u5de6\u53f3\u4e24\u7aef\u53c8\u6709 $2$ \u4e2a\u586b `W` \u7684\u7b2c\u4e8c\u79cd\u4f4d\u7f6e\u3002\u56e0\u6b64\u7b2c\u4e00\u79cd\u4f4d\u7f6e\u6709 $2(K+x_2)-1$ \u4e2a\uff0c\u7b2c\u4e8c\u79cd\u4f4d\u7f6e\u6709 $2x_1+2$ \u4e2a\uff0c\u5bb9\u6613\u4f7f\u7528\u63d2\u677f\u6cd5\u6c42\u51fa\u603b\u65b9\u6848\u6570\u3002\n\n\u7531\u4e8e $x_1,x_2$ \u5df2\u7ecf\u5728\u5916\u5c42\u66b4\u529b\u679a\u4e3e\u6389\u4e86\uff0c\u73b0\u5728\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $K$ \u6c42\u51fa\u65b9\u6848\u6570\u3002\n\n\u90a3\u4e48\u8fd9\u6837\u5c31\u53ef\u4ee5\u5229\u7528 $dp$ \u8fdb\u884c\u8ba1\u6570\u4e86\u3002\n\n$dp_{i,j,k}$ \u8868\u793a\u8003\u8651 $i$ \u53ca\u540e\u9762\u7684\u6240\u6709\u6bb5\uff0c\u548c\u4e3a $j$\uff0c\u5f53\u524d\u6700\u540e\u4e00\u4e2a\u6bb5\u4e2d\u6709 $k$ \u4e2a `B` \u7684\u65b9\u6848\u6570\u3002\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$$dp_{i,j,k}=\\sum\\limits_{k\\ge t}\\binom{i}{l}dp_{i-l,j-kl,t}$$\n\n\u76f4\u63a5\u66b4\u529b\u662f $O(n^4\\log n)$ \u7684\uff0c\u5bb9\u6613\u7528\u524d\u7f00\u548c\u4f18\u5316\u5230 $O(n^3\\log n)$\u3002\n\n\u6700\u7ec8\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^5\\log n)$\uff0c\u5982\u679c\u5b9e\u73b0\u7cbe\u7ec6\u7684\u8bdd\u5e38\u6570\u6781\u5c0f\uff0c\u7a33\u7684\u4e00\u6279\u3002\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define N 75\n#define N1 45\n#define M 205\n#define MOD 1000000007\n#define set(a,vl) memset(a,vl,sizeof(a))\nconst int lim=200;\nint n,m,ans,st[N],cnt[N],w[N],C[M][M],dp[N][N1][N1];bool vs[N];char a[N];\nvoid W(int &x,int y) {x=(x+y)%MOD;}\nint slv(int x1,int x2)\n{\n\tif(!x1 && !x2) return 1;int nw=0,res=0;st[0]=0;set(vs,0);set(dp,0);\n\tfor(int i=1,ps;i<=m;++i) if(a[i]=='r')\n\t{\n\t\tif(nw<x1)\n\t\t{\n\t\t\tps=0;++nw;\n\t\t\tfor(int j=i+1;j<=m;++j) if(a[j]=='b' && !vs[j]) {ps=j;break;}\n\t\t\tif(!ps) return 0;vs[i]=vs[ps]=1;st[++st[0]]=ps;\n\t\t}else if(nw<x1+x2) ++nw,vs[i]=1;\n\t}if(nw<x1+x2) return 0;for(int i=m;i;--i) cnt[i]=cnt[i+1]+(!vs[i]);\n\tfor(int i=1;i<=st[0];++i) w[i]=cnt[st[st[0]-i+1]]+i;dp[0][0][0]=1;\n\tfor(int i=0;i<st[0];++i) for(int j=0;j<=w[i] && (j+x2)*2-1<=n;++j)\n\t\tfor(int k=1,s=dp[i][j][0];j+k<=w[i+1] && (j+k+x2)*2-1<=n;++k)\n\t\t{\n\t\t\tfor(int l=1;i+l<=st[0] && j+k*l<=w[i+l] && (j+k*l+x2)*2-1<=n;++l)\n\t\t\t\tW(dp[i+l][j+k*l][k],1ll*s*C[i+l][l]%MOD);W(s,dp[i][j][k]);\n\t\t}\n\tfor(int i=0,s,t1,t2;i<=w[st[0]] && (i+x2)*2-1<=n;++i)\n\t{\n\t\ts=0;t1=(i+x2)*2-1;t2=x1*2+2;\n\t\tfor(int j=0;j<=i;++j) W(s,dp[st[0]][i][j]);\n\t\tW(res,1ll*s*C[n+t2-1][t1+t2-1]%MOD);\n\t}res=1ll*res*C[x1+x2][x1]%MOD;return res;\n}\nint main()\n{\n\tscanf(\"%d %d %s\",&n,&m,a+1);\n\tfor(int i=0;i<=lim;++i)\n\t{C[i][0]=1;for(int j=1;j<=i;++j) C[i][j]=(C[i-1][j]+C[i-1][j-1])%MOD;}\n\tfor(int i=0;i*2<=m;++i) for(int j=0;i*2+j<=m;++j) W(ans,slv(i,j));\n\tprintf(\"%d\\n\",ans);return 0;\n}\n```",
        "postTime": 1619442633,
        "uid": 119621,
        "name": "Kubic",
        "ccfLevel": 10,
        "title": "[ARC089D] ColoringBalls"
    },
    {
        "content": "\u8003\u8651\u6700\u540e\u54ea\u4e9b\u989c\u8272\u5e8f\u5217\u53ef\u4ee5\u88ab\u5f97\u5230\u3002\n    \n\u5148\u5c06\u76f8\u90bb\u7684\u76f8\u540c\u989c\u8272\u7f29\u8d77\u6765\u3002\u8fd9\u4e0d\u4f1a\u5f71\u54cd\u53ef\u8fbe\u6027\u3002\u63a5\u7740\uff0c$\\texttt{w}$ \u53ef\u4ee5\u89c6\u4f5c\u5206\u9694\u7b26\uff0c\u56e0\u4e3a\u5176\u4e00\u5b9a\u6ca1\u6709\u88ab\u67d3\u8fc7\u8272\u3002\n  \n\u73b0\u5728\u6574\u4e2a\u5e8f\u5217\u88ab\u5206\u6210\u4e86 $m$ \u4e2a\u8fde\u7eed\u6bb5\uff0c\u4e14\u8fde\u7eed\u6bb5\u5185\u90e8\u76f8\u90bb\u7684\u989c\u8272\u4e0d\u540c\u3002\u8bbe\u7b2c $i$ \u4e2a\u8fde\u7eed\u6bb5\u6709 $c_i$ \u4e2a $\\texttt{b}$\uff0c\u8003\u8651\u5982\u4f55\u64cd\u4f5c\u5f97\u5230\u8be5\u8fde\u7eed\u6bb5\u3002\n\n- \u5f53 $c_i=0$\uff0c\u663e\u7136\u9700\u8981 $\\texttt{r}$ \u4e00\u6b21\u64cd\u4f5c\uff1b\n- \u5f53 $c_i=1$\uff0c\u663e\u7136\u9700\u8981 $\\texttt{r}\\texttt{b}$ \u4e24\u6b21\u64cd\u4f5c\uff1b\n- \u5f53 $c_i \\ge 2$\uff0c\u5171\u9700\u8981 $c_i+2$ \u6b21\u64cd\u4f5c\u3002\u524d\u4e24\u6b21\u64cd\u4f5c\u4f9d\u7136\u662f $\\texttt{r}\\texttt{b}$\uff0c\u4f46\u540e\u9762 $c_i$ \u6b21\u64cd\u4f5c\u5c45\u7136\u662f $\\texttt{r}\\texttt{b}$ \u968f\u4fbf\uff01\u5982\uff1a\u8981\u60f3\u5f97\u5230 $\\texttt{rbrbr}$\uff0c\u64cd\u4f5c\u5e8f\u5217\u4e3a $\\texttt{rbbr}, \\texttt{rbrr}, \\texttt{rbbb}, \\texttt{rbrb}$ \u90fd\u662f\u53ef\u4ee5\u7684\u3002\n  \n\u4ee5\u4e0a\u8bfb\u8005\u81ea\u8bc1\u4e0d\u96be\u3002\n  \n\u90a3\u4e48 check \u4e00\u4e2a\u989c\u8272\u5e8f\u5217\u80fd\u5426\u88ab\u5f97\u5230\u5c31\u5f88\u7b80\u5355\u4e86\uff1a\u7f29\u6210\u8fde\u7eed\u6bb5\u4ee5\u540e\u6309 $\\texttt{b}$ \u7684\u6570\u91cf\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u7136\u540e\u5206\u914d\u64cd\u4f5c\u5e8f\u5217\uff1a\u5148\u628a\u6700\u524d\u9762 $m$ \u4e2a $\\texttt{r}$ \u4f9d\u6b21\u7ed9\u6bcf\u4e2a\u8fde\u7eed\u6bb5\u90fd\u5206\u914d\u4e00\u4e2a\uff0c\u7136\u540e\u5c06\u6240\u6709 $c_i \\ge 1$ \u7684\u8fde\u7eed\u6bb5\u8d2a\u5fc3\u5730\u627e\u5230\u5148\u524d\u5206\u914d\u7684 $\\texttt{r}$ \u540e\u7b2c\u4e00\u4e2a $\\texttt{b}$ \u5e76\u5360\u7528\uff0c\u6700\u540e\u5c06\u6240\u6709 $c_i \\ge 2$ \u7684\u8fde\u7eed\u6bb5\u8d2a\u5fc3\u5730\u5360\u7528\u5148\u524d\u5206\u914d\u7684 $\\texttt{b}$ \u540e\u524d $c_i$ \u4e2a\u8fd8\u6ca1\u6709\u88ab\u5360\u7528\u7684\u64cd\u4f5c\u3002\u5982\u679c\u627e\u4e0d\u5230\uff0c\u8fd9\u4e2a\u989c\u8272\u5e8f\u5217\u5c31\u4e0d\u5408\u6cd5\u3002\n  \n\u4f46\u662f\uff0c\u6211\u4eec\u4ecd\u7136\u4e0d\u53ef\u80fd\u679a\u4e3e\u6240\u6709\u7684\u8fde\u7eed\u6bb5\u7684 $c_i$\u3002\u4e0d\u8fc7\uff0c\u6211\u4eec\u53d1\u73b0\u8fde\u7eed\u6bb5\u7684 $c_i$ \u7684\u6b21\u5e8f\u662f\u65e0\u5173\u7d27\u8981\u7684\uff0c\u6240\u4ee5\u7c7b\u4f3c\u5212\u5206\u6570\u90a3\u6837\u7206\u641c\uff0c\u7136\u540e\u7528\u591a\u91cd\u96c6\u6392\u5217\u8ba1\u7b97\u5373\u53ef\u3002\u6ce8\u610f\u5230\u4e00\u4e2a\u6709 $c_i$ \u4e2a $\\texttt{b}$ \u7684\u8fde\u7eed\u6bb5\u957f\u5ea6\u81f3\u5c11\u4e3a $[c_i=0]+[c_i \\ge 1](2c_i-1)$\uff0c\u56e0\u6b64\u65b9\u6848\u6570\u8f83\u5c11\uff0c\u4e3a\u5212\u5206\u6570\u7ea7\u522b\u3002\n\n\u6700\u540e\uff0c\u7531\u4e8e\u6211\u4eec\u73b0\u5728\u8ba1\u7b97\u7684\u662f\u7f29\u5b8c\u76f8\u540c\u989c\u8272\u540e\u7684\u65b9\u6848\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5c06\u5176\u6269\u5c55\u81f3\u957f\u5ea6\u4e3a $n$\u3002\u4ee4 $f(x)$ \u8868\u793a\u6709 $x$ \u4e2a $\\texttt{b}$ \u7684\u8fde\u7eed\u6bb5\u957f\u5ea6\u7684\u6700\u5c0f\u503c\uff0c\u5373 $f(x)=[x=0]+[x \\ge 1](2x-1)$\u3002\u5219\u73b0\u5728\u5df2\u7ecf\u586b\u4e86 $A=m-1+\\sum_{i=1}^m f(c_i)$ \u4e2a\u4f4d\u7f6e\uff08$m-1$ \u662f\u56e0\u4e3a\u76f8\u90bb\u4e24\u4e2a\u8fde\u7eed\u6bb5\u4e4b\u95f4\u81f3\u5c11\u6709\u4e00\u4e2a $\\texttt{w}$\uff09\uff0c\u5269\u4e0b $n-A$ \u4e2a\u4f4d\u7f6e\u5c1a\u672a\u5206\u914d\u989c\u8272\u3002\n  \n\u8003\u8651\u5c06\u672a\u5206\u914d\u989c\u8272\u7684\u4f4d\u7f6e\u63d2\u5165\u7a7a\u9699\u4e2d\u3002\u4e00\u4e2a\u6709 $c_i$ \u4e2a $\\texttt{b}$ \u7684\u8fde\u7eed\u6bb5\u6709 $2c_i+1$ \u4e2a\u7a7a\u9699\uff0c\u800c\u76f8\u90bb\u4e24\u4e2a\u8fde\u7eed\u6bb5\u4e4b\u95f4\u4e5f\u6709 1 \u4e2a\u7a7a\u9699\u4ee5\u63d2\u5165 $\\texttt{w}$\u3002\u5982\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/7mmqy4sh.png)\n  \n\u7531\u4e8e\u7b2c 1 \u6bb5\u524d\u9762\u8fd8\u53ef\u4ee5\u63d2\u5165 $\\texttt{w}$\uff0c\u5171 $B=m+1+\\sum_{i=1}^m (2c_i+1)$ \u4e2a\u7a7a\u9699\u3002\u7528\u63d2\u677f\u6cd5\u5c06 $n-A$ \u4e2a\u7403\u5206\u914d\u5230\u8fd9\u4e9b\u7a7a\u9699\u4e2d\uff0c\u65b9\u6848\u6570\u4e3a\uff1a\n$$\n\\binom{n-A+B-1}{B-1}\n$$\n  \n\u4e8e\u662f\u5c31\u505a\u5b8c\u4e86\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef pair<int,int> pii;\n\ntemplate<typename T>\ninline T read(){\n    T x=0,f=0;char ch=getchar();\n    while(!isdigit(ch)) f|=(ch=='-'),ch=getchar();\n    while(isdigit(ch)) x=x*10+(ch^48),ch=getchar();\n    return f?-x:x;\n}\n\n#define rdi read<int>\n#define rdll read<ll>\n#define fi first\n#define se second\n#define pb push_back\n#define mp make_pair\n\nconst int N=100010,K=75,MOD=1e9+7;\n\nint n,k;\nchar s[K];\nll ans;\n\nll qpow(ll x,ll y=MOD-2){\n    ll res=1;\n    while(y){\n        if(y&1) (res*=x)%=MOD;\n        (x*=x)%=MOD;y>>=1;\n    }\n    return res;\n}\n\nll fac[N+K],faci[N+K];\nvoid init(int n){\n    fac[0]=1;\n    for(int i=1;i<=n;i++) fac[i]=fac[i-1]*i%MOD;\n    faci[n]=qpow(fac[n]);\n    for(int i=n-1;i>=0;i--) faci[i]=faci[i+1]*(i+1)%MOD;\n}\n\nll C(int x,int y){return fac[x]*faci[y]%MOD*faci[x-y]%MOD;}\n\nint a[K],cnt;\n\nbool vis[N];\nint st[N];\nbool check(int *a,int cnt){\n    int sum=-1;\n    for(int i=1;i<=cnt;i++) sum+=(!a[i]?1:2*a[i]-1)+1;\n    if(sum>n) return false;\n\n    for(int i=1;i<=k;i++) vis[i]=0;\n    int pos=1;\n    for(int i=cnt;i>=1;i--){\n        while(pos<=k&&(vis[pos]||s[pos]!='r')) pos++;\n        if(pos>k) return false;\n        vis[pos]=1,st[i]=pos;\n    }\n    pos=1;\n    for(int i=cnt;i>=1;i--){\n        if(a[i]){\n            pos=max(pos,st[i]);\n            while(pos<=k&&(vis[pos]||s[pos]!='b')) pos++;\n            if(pos>k) return false;\n            vis[pos]=1,st[i]=pos;\n        }\n    }\n    pos=1;\n    for(int i=cnt;i>=1;i--){\n        if(a[i]>1){\n            pos=max(pos,st[i]);\n            for(int j=1;j<a[i];j++){\n                while(pos<=k&&vis[pos]) pos++;\n                if(pos>k) return false;\n                vis[pos]=1;\n            }\n        }\n    }\n    return true;\n}\n\nll calc(int *a,int cnt){\n    ll mul=1;\n    int sum=0,sum1=0;\n    for(int l=1;l<=cnt;){\n        int r=l;\n        while(r<=cnt&&a[l]==a[r]){\n            sum+=(!a[r]?1:2*a[r]-1)+1;\n            sum1+=a[r]*2+1,r++;\n        }\n        (mul*=faci[r-l])%=MOD,l=r;\n    }\n    (mul*=fac[cnt])%=MOD;\n    sum1+=cnt+1;\n    (mul*=C(n-sum+sum1,sum1-1))%=MOD;\n    return mul;\n}\n\nvoid dfs(int rest,int cnt,int lst=0){\n    if(cnt){\n        if(check(a,cnt)) ans+=calc(a,cnt);\n        else return;\n    }\n    for(int i=lst;i<=rest;i++) a[cnt+1]=i,dfs(rest-i-1,cnt+1,i);\n}\n\nint main(){\n#ifdef LOCAL\n    freopen(\".in\",\"r\",stdin);\n    freopen(\".out\",\"w\",stdout);\n#endif\n    n=rdi(),k=rdi();init(n+k+1);\n    scanf(\"%s\",s+1);\n    dfs(k,0);ans=(ans+1)%MOD;\n    cout<<ans<<endl;\n    return 0;\n}\n```",
        "postTime": 1649670786,
        "uid": 107236,
        "name": "Zesty_Fox",
        "ccfLevel": 9,
        "title": "AT3878 [ARC089D] ColoringBalls \u9898\u89e3"
    },
    {
        "content": "## \u524d\u8a00\n\u63d0\u4f9b\u4e00\u79cd\u672c\u8d28\u4e0d\u540c\u7684\u505a\u6cd5\uff0c\u4f46\u662f\u5e0c\u671b\u54ea\u6015\u4f1a\u4e00\u70b9\u6570\u6570\u7684\u4eba\u90fd\u4e0d\u8981\u5b66\u6211\u4e00\u6837\u7ed9\u81ea\u5df1\u5582\u8bf4\u7684\u9053\u7406\uff01\n\n\u672c\u6587\u53ef\u80fd\u5f15\u8d77\u5927\u90e8\u5206\u4eba\u7684\u4e0d\u9002\uff0c\u672a\u767b dua \u90ce OIer \u8bf7\u5728\u767b dua \u90ce OIer \u7684\u966a\u540c\u4e0b\u89c2\u770b\u3002\n\n\u5982\u679c\u60a8\u5728\u6a21\u62df\u8d5b\u91cc\u505a\u5230\u4e86\u8fd9\u4e2a\u9898\uff0c\u975e\u5e38\u62b1\u6b49![](//\u5567.tk/dk)\n## \u6b63\u7247\n### \u5224\u65ad\u4e00\u4e2a\u6781\u957f\u8fde\u7eed\u6bb5\u662f\u5426\u5408\u6cd5\n\u8003\u8651\u4e00\u4e2a\u975e\u767d\u8272\u8fde\u7eed\u6bb5\uff0c\u5047\u8bbe\u5b83\u6709 $t$ \u4e2a\u84dd\u8272\u8fde\u7eed\u6bb5\uff0c\u6211\u4eec\u5982\u4f55\u68c0\u9a8c\u8fd8\u539f\u5b83\u6240\u9700\u7684\u6b21\u6570\uff1f\n\n- \u5982\u679c $t=0$\uff0c\u663e\u7136\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2a $\\texttt{r}$\u3002\n- \u5982\u679c $t>0$\uff0c\u6211\u4eec\u53ea\u9700\u8981 $\\texttt{rb}$ \u52a0\u4e0a\u4efb\u610f $t-1$ \u4e2a\u64cd\u4f5c\u3002\n\n\u6b63\u786e\u6027\u4e0d\u96be\u8bc1\u660e\u3002\n### \u5224\u65ad\u4e00\u4e2a\u5e8f\u5217\u662f\u5426\u5408\u6cd5\n\u4e8b\u5b9e\u4e0a\u8fd9\u5c31\u662f\u4e00\u4e2a\u8d2a\u5fc3\u3002\n\n\u8fd9\u79cd\u8d2a\u5fc3\u6709\u82e5\u5e72\u4e2a\u5b9e\u73b0\u65b9\u6cd5\uff0c\u4e3e\u51fa\u4e00\u4e2a\u6700\u7b80\u5355\u7684\uff1a\n\n- \u5c06\u6240\u6709\u8fde\u7eed\u6bb5\u7684 $t$ \u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u7279\u522b\u5730\uff0c\u62ff\u51fa\u6240\u6709 $t=0$ \u5e76\u7edf\u8ba1\u6570\u91cf\u3002\n- \u6211\u4eec\u8bb0\u5f53\u524d\u72b6\u6001\u4e3a $(i,j,k,l)$\uff0c\u4e3a\u8fd8\u6709 $i$ \u4e2a $t$ \u9700\u8981\u8d77\u59cb $\\texttt{r}$\uff0c\u8fd8\u6709 $j$ \u4e2a $t$ \u9700\u8981\u8d77\u59cb $\\texttt{b}$\uff0c\u8fd8\u6709 $k$ \u4e2a $t=0$ \u9700\u8981\u4e00\u4e2a $\\texttt{r}$\uff0c\u8fd8\u6709\u82e5\u5e72 $t$ \u9700\u8981\u5171\u8ba1 $l$ \u4e2a\u4efb\u610f\u5b57\u7b26\u3002\n- \u6bcf\u6b21\u68c0\u67e5\u4e0b\u4e00\u4e2a\u5b57\u7b26\uff0c\u5e76\u6839\u636e\u4e0a\u8ff0\u9700\u6c42\u7684\u4f18\u5148\u5173\u7cfb\u8fdb\u884c\u8f6c\u79fb\u3002\n\n### \u590d\u6742\u5ea6\u7ea6\u4e3a\u5212\u5206\u6570\u7684\u66b4\u529b\n\u6211\u4eec\u53ea\u9700\u8981\u679a\u4e3e\u6240\u6709\u5e8f\u5217 $t$\uff0c\u7136\u540e\u4e00\u4e00\u8ba1\u7b97\u3002\n\n\u5982\u679c\u6211\u4eec\u77e5\u9053\u5e8f\u5217\u957f\u5ea6\u548c $t$\uff0c\u8ba1\u7b97\u5e8f\u5217\u7684\u4e2a\u6570\u662f\u5e73\u51e1\u7684\uff0c\u53ea\u9700\u8981\u4e00\u4e2a\u7ec4\u5408\u6570\u3002\n\n\u90a3\u4e48\u6211\u4eec\u9884\u5904\u7406 $f_{i,j,k}$ \u4e3a\u53d6 $j$ \u4e2a $t=i$\uff0c\u5b83\u4eec\u7684\u957f\u5ea6\u4e4b\u548c\u4e3a $k$ \u7684\u65b9\u6848\u6570\uff0c\u7136\u540e\u7206\u641c\u5373\u53ef\u3002\n\n\u5927\u6982\u80fd\u8dd1 $n=35$\u3002\n### \u53cd\u4eba\u7c7b\u9ed1\u8272\u9ad8\u7ea7\u8d2a\u5fc3\n\u6211\u4eec\u53d1\u73b0\u5982\u679c\u8fd9\u4e2a\u8d2a\u5fc3\u9700\u8981\u77e5\u9053\u8fde\u7eed\u6bb5\u603b\u4e2a\u6570\u624d\u80fd\u8dd1\uff0c\u80fd\u4e0d\u80fd\u6362\u4e2a\u65b9\u6cd5\u8d2a\u5462\uff1f\n\n\u7b54\u6848\u662f\u53ef\u4ee5\u7684\u3002\u56e0\u4e3a\u6bcf\u4e00\u6bb5\u591a\u51fa\u6765\u7684\u5b57\u7b26\u5230\u4e0b\u4e00\u6bb5\u53ea\u6709 $\\texttt{r}$ \u6709\u7528\uff0c\u6211\u4eec\u4f18\u5148\u628a $\\texttt{b}$ \u7528\u4e86\uff0c\u7136\u540e\u518d\u7528 $\\texttt{r}$\uff0c\u518d\u8003\u8651\u53cd\u6094\u64cd\u4f5c\uff0c\u5728\u540e\u9762 $\\texttt{r}$ \u8fc7\u5269\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 $\\texttt{r}$ \u518d\u6362\u56de\u4e00\u4e2a $\\texttt{b}$\u3002\n\n\u8fd9\u6837\u8f6c\u79fb\u7684\u65f6\u5019\u6211\u4eec\u53ea\u8981\u628a\u8fd8\u6709\u51e0\u4e2a $\\texttt{r}$\u3002\u8fd8\u6b20\u51e0\u4e2a $\\texttt{b}$\uff0c\u6700\u540e\u9700\u8981\u51e0\u4e2a $\\texttt{r}$ \u6765\u5904\u7406 $t=0$\uff0c\u548c\u8fd8\u80fd\u4ece\u524d\u9762\u7f6e\u6362\u56de\u51e0\u4e2a $\\texttt{r}$ \u5373\u53ef\u3002\n\n\u7ec6\u8282\u633a\u591a\u7684\uff0c\u53ef\u4ee5\u770b\u770b\u4ee3\u7801\u3002\n### \u8bb0\u5fc6\u5316\u641c\u7d22\n\u4e0d\u96be\u53d1\u73b0\u6211\u4eec\u53ea\u9700\u8981\u679a\u4e3e $t=0$ \u7684\u6bb5\u6570\u5c31\u53ef\u4ee5\u4e86\u3002\u4e8e\u662f\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u6700\u574f $O(n^8)$ \u7684 dp\uff0c\u663e\u7136\u8dd1\u4e0d\u6ee1\u76f4\u63a5\u8bb0\u5fc6\u5316\u641c\u7d22\u51b2\uff0c\u80fd\u5728 400ms \u5185\u901a\u8fc7\u3002\n## \u4ee3\u7801\uff08\u8bf4\u7684\u9053\u7406\uff09\n```cpp\n// Problem: F - ColoringBalls\n// Contest: AtCoder - AtCoder Regular Contest 089\n// URL: https://atcoder.jp/contests/arc089/tasks/arc089_d\n// Memory Limit: 256 MB\n// Time Limit: 4000 ms\n// \n// Powered by CP Editor (https://cpeditor.org)\n\n//\u56de\u5bb6\uff1f\u6211\u6ca1\u6709\u5bb6\u53ef\u4ee5\u56de\uff0c\u6211\u6ca1\u6709\u9000\u8def\u3002\n#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native\")\nusing namespace std;\n#define int long long\ninline int read(){\n   int s=0,w=1;\n   char ch=getchar();\n   while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n   while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n   return s*w;\n}\nconst int p=1e9+7;\nint qp(int x,int y)\n{\n\tint res=1;\n\tfor(int t=x; y; y>>=1,t=t*t%p) if(y&1) res=res*t%p;\n\treturn res;\n}\nint fac[103],ifac[103];\nint C(int n,int m)\n{\n\tif(m<0||m>n) return 0;\n\treturn fac[n]*ifac[m]%p*ifac[n-m]%p;\n}\nchar s[103];\nint n=read(),m=read(),ans;\nint f[73][73][73];\nint F(int a,int b,int c,int d,int e,int f,int g,int h)\n{\n\tint r=0;\n\ta+=71,b+=71,c+=71,d+=71,e+=71,f+=71,g+=71,h+=71;\n\tr=((((((a*142+b)*142+c)*142+d)*142+e)*142+f)*142+g)*142+h;\n\treturn r;\n}\nunordered_map<int,int> mp;\nint dfs(int x,int cnt,int sum,int zero,int one,int req,int pos,int canrep)\n{\n\tif(!x)\n\t{\n\t\tint newzero=0;\n\t\twhile(pos<=m)\n\t\t\tif(s[pos++]=='r') ++newzero;\n\t\t\telse ++one;\n\t\tint T=min(one,canrep);\n\t\tone-=T,newzero+=T;\n\t\treturn\n\t\t1ll*fac[n-sum+cnt]*ifac[n-sum]%p\n\t\t*(zero+newzero>=req&&\n\t\tmin(newzero,newzero+zero-req)+one>=0);\n\t}\n\tint vec=F(x,cnt,sum,zero,one,req,pos,canrep);\n\tif(mp.find(vec)!=mp.end())\n\t\treturn mp[vec];\n\tint res=dfs(x-1,cnt,sum,zero,one,req,pos,canrep);\n\tfor(int i=1; ; ++i)\n\t{\n\t\tint flg=0;\n\t\tint newzero=0;\n\t\tif(!zero&&canrep) ++zero,--canrep,--one;\n\t\tif(zero>0) --zero,flg=1;\n\t\twhile(pos<=m)\n\t\t\tif(s[pos++]=='r')\n\t\t\t{\n\t\t\t\tif(!flg) flg=1;\n\t\t\t\telse ++newzero;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tif(flg)\n\t\t\t\t{\n\t\t\t\t\tif(one<0&&newzero>0)\n\t\t\t\t\t{\n\t\t\t\t\t\tint T=min(-one,newzero);\n\t\t\t\t\t\tone+=T,newzero-=T,\n\t\t\t\t\t\tcanrep+=T;\n\t\t\t\t\t}\n\t\t\t\t\tif(one>0)\n\t\t\t\t\t{\n\t\t\t\t\t\tint T=min(one,canrep);\n\t\t\t\t\t\tzero+=T,canrep-=T,one-=T;\n\t\t\t\t\t}\n\t\t\t\t\tzero+=newzero;\n\t\t\t\t\tone=min(one,0ll);\n\t\t\t\t\tone-=x-1,flg=2;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse ++one;\n\t\t\t}\n\t\tif(pos>m&&flg!=2) return mp[vec]=res;\n\t\tfor(int j=i*((x<<1)-1); i+j+sum<=n; ++j)\n\t\t\tres=(res+dfs(x-1,cnt+i,sum+i+j,\n\t\t\tzero,one,req,pos,canrep)\n\t\t\t*f[x][i][j]%p*ifac[i])%p;\n\t}\n}\nsigned main()\n{\n\tfac[0]=ifac[0]=1;\n\tfor(int i=1; i<=n+1; ++i)\n\t\tfac[i]=fac[i-1]*i%p,ifac[i]=qp(fac[i],p-2);\n\tfor(int i=0; i<=n; ++i)\n\t{\n\t\tf[i][0][0]=1;\n\t\tif(i==0)\n\t\t{\n\t\t\tfor(int j=1; j<=n; ++j)\n\t\t\t\tfor(int k=j; k<=n; ++k)\n\t\t\t\t\tfor(int l=k-1; l>=0; --l)\n\t\t\t\t\t\tf[i][j][k]=\n\t\t\t\t\t\t(f[i][j][k]+f[i][j-1][l])%p;\n\t\t\tcontinue;\n\t\t}\n\t\tfor(int j=1; j<=n; ++j)\n\t\t\tfor(int k=((i<<1)-1)*j; k<=n; ++k)\n\t\t\t\tfor(int l=(i<<1)-1; l<=k; ++l)\n\t\t\t\t\tf[i][j][k]=(f[i][j][k]+\n\t\t\t\t\t1ll*f[i][j-1][k-l]*\n\t\t\t\t\t(C(l-1,(i<<1)-2)\n\t\t\t\t\t+2ll*C(l-1,(i<<1)-1)\n\t\t\t\t\t+C(l-1,i<<1))%p)%p;\n\t}\n\tscanf(\"%s\",s+1);\n\tint ans=0;\n\tfor(int i=0; i<=n; ++i)\n\t\tfor(int j=i; i+j-1<=n; ++j)\n\t\t\tif(f[0][i][j])\n\t\t\tans=(ans+\n\t\t\tdfs((n+1)>>1,i,i+j-1,0,0,i,1,0)\n\t\t\t*f[0][i][j]%p*ifac[i])%p;\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1663824433,
        "uid": 111055,
        "name": "dead_X",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 AT3878"
    },
    {
        "content": "[Atcoder \u9898\u9762\u4f20\u9001\u95e8](https://atcoder.jp/contests/arc089/tasks/arc089_f) & [\u6d1b\u8c37\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/AT3878)\n\n\u795e\u4ed9\u9898\u3002\n\n\u5728\u4e0b\u6587\u4e2d\uff0c\u65b9\u4fbf\u8d77\u89c1\uff0c\u7528 `R/B` \u8868\u793a**\u989c\u8272\u5e8f\u5217**\u4e2d\u7403\u7684\u989c\u8272\uff0c\u7528 `r/b` \u8868\u793a**\u67d3\u8272\u5e8f\u5217**\u4e2d\u5c06\u8fde\u7eed\u7684\u533a\u95f4\u67d3\u6210\u7684\u989c\u8272\u3002\n\n\u9996\u5148\u78b0\u5230\u8fd9\u4e00\u7c7b\u8ba1\u7b97\u6709\u591a\u5c11\u4e2a\u53ef\u4ee5\u88ab\u5f97\u5230\u7684\u5e8f\u5217\u7684\u95ee\u9898\uff0c\u6211\u4eec\u4e3a\u4e86\u907f\u514d\u8ba1\u7b97\u91cd\u590d\uff0c\u80af\u5b9a\u4f1a\u5148\u8003\u8651\u4ec0\u4e48\u6837\u7684\u5e8f\u5217\u80fd\u591f\u88ab\u5f97\u5230\uff0c\u4ece\u800c\u8bbe\u8ba1\u4e00\u4e2a DP \u72b6\u6001\u3002\u6b64\u9898\u4e5f\u4e0d\u4f8b\u5916\u3002\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a\u989c\u8272\u5e8f\u5217\u5b83\u80fd\u5426\u80fd\u591f\u88ab\u5f97\u5230\uff0c\u663e\u7136\u5bf9\u4e8e\u8fd9\u4e2a\u989c\u8272\u5e8f\u5217\u4e2d\u767d\u8272\u683c\u5b50\uff0c\u5b83\u4eec\u80af\u5b9a\u4ece\u6765\u6ca1\u6709\u88ab\u8986\u76d6\uff0c\u56e0\u6b64\u6211\u4eec\u8003\u8651\u8fd9\u4e9b\u767d\u8272\u683c\u5b50\u88ab\u5206\u5272\u800c\u6210\u7684\u8fde\u7eed\u6bb5\u3002\u6211\u4eec\u5c06\u8fd9\u4e9b\u8fde\u7eed\u6bb5\u5206\u4e3a\u4e24\u7c7b\uff1a\u4e0d\u542b\u84dd\u8272\u683c\u5b50\u548c\u542b\u84dd\u8272\u683c\u5b50\u3002\u5bf9\u4e8e\u524d\u8005\uff0c\u663e\u7136\u4e00\u4e2a `r` \u5373\u53ef\u641e\u5b9a\u3002\u540e\u8005\u7a0d\u5fae\u6709\u70b9\u590d\u6742\uff0c\u6211\u4eec\u6765\u5206\u6790\u4e0b\u4ec0\u4e48\u6837\u7684\u5e8f\u5217\u80fd\u591f\u67d3\u51fa\u5b83\uff0c\u663e\u7136\u540c\u8272\u8fde\u7eed\u6bb5\u53ef\u4ee5\u7f29\u5728\u4e00\u8d77\uff0c\u800c\u5982\u679c\u5f00\u5934\u662f\u84dd\u8272\u683c\u5b50\uff0c\u90a3\u6211\u4eec\u80af\u5b9a\u9700\u8981\u5148\u5728\u5b83\u4e0a\u9762\u67d3\u4e00\u904d  `r`\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u59a8\u5728\u5b83\u524d\u9762\u8865\u4e00\u4e2a\u7ea2\u8272\u683c\u5b50\uff0c\u5bf9\u4e8e\u7ed3\u5c3e\u7684\u683c\u5b50\u4e5f\u540c\u7406\uff0c\u8fd9\u6837\u6211\u4eec\u53ea\u7528\u8003\u8651 `RBRBRB\u2026BR` \u80fd\u591f\u88ab\u4ec0\u4e48\u6837\u7684\u67d3\u8272\u5e8f\u5217\u5f97\u5230\u5373\u53ef\u3002\u624b\u73a9\u4e00\u4e0b `RBRBRBR` \u7684\u67d3\u8272\u65b9\u6848\u53ef\u4ee5\u53d1\u73b0\uff0c`RBRBRBR` \u80fd\u591f\u88ab\u4ee5\u4e0b\u56db\u4e2a\u957f\u5ea6\u4e3a $4$ \u7684\u5e8f\u5217\u5f97\u5230\uff1a\n\n- `rbrr`\n- `rbrb`\n- `rbbr`\n- `rbbb`\n\n\u6211\u4eec\u53ef\u4ee5\u5f88\u660e\u663e\u5730\u53d1\u73b0\uff0c\u80fd\u591f\u5f97\u5230 `RBRBRBR` \u7684\u67d3\u8272\u5e8f\u5217\u7684\u5934\u4e24\u4e2a\u5143\u7d20\u90fd\u662f `rb`\uff0c\u800c\u540e\u4e24\u4e2a\u5143\u7d20\u662f\u4ec0\u4e48\u90fd\u65e0\u6240\u8c13\uff0c\u5e76\u4e14\u663e\u7136\u6ca1\u6709\u6bd4\u8fd9\u4e2a\u957f\u5ea6\u66f4\u77ed\u7684\u5e8f\u5217\u4e86\uff0c\u800c\u5bf9\u4e8e\u66f4\u957f\u7684\u5e8f\u5217\uff0c\u5b83\u4eec\u80af\u5b9a\u5305\u542b\u5b50\u5e8f\u5217 `rb`\uff0c\u5e76\u4e14 `rb` \u4ee5\u540e\u90fd\u81f3\u5c11\u6709 $2$ \u4e2a\u5143\u7d20\uff0c\u56e0\u6b64\u5b83\u4eec\u80af\u5b9a\u662f\u6ca1\u6709\u8fd9\u56db\u4e2a\u957f\u5ea6\u4e3a $4$ \u7684\u5e8f\u5217\u6765\u5f97\u66f4\u4f18\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u59a8\u5f52\u7eb3\u4e00\u4e0b\uff1a\u5bf9\u4e8e\u6709 $B$ \u4e2a\u84dd\u8272\u8fde\u7eed\u6bb5\u7684\u6742\u8272\u5e8f\u5217\uff0c\u6709\u7528\u7684\u5e8f\u5217\u957f\u5ea6\u90fd\u662f $B+1$\uff0c\u5e76\u4e14\u5934\u4e24\u4e2a\u5143\u7d20\u90fd\u662f `rb`\uff0c\u81f3\u4e8e\u540e\u9762\u7684\u5143\u7d20\uff0c\u5219\u65e0\u6240\u8c13\u3002\n\n\u56e0\u6b64\u6211\u4eec\u5047\u8bbe\u5206\u51fa\u6765\u7684\u6742\u8272\u8fde\u7eed\u6bb5\u6709 $x$\u200b \u4e2a\uff0c\u5b83\u4eec\u5f53\u4e2d\u84dd\u8272\u683c\u5b50\u5206\u522b\u6709 $c_1,c_2,\\cdots,c_x$ \u4e2a\uff0c\u800c\u53ea\u542b\u7ea2\u8272\u7684\u8fde\u7eed\u6bb5\u6709 $y$ \u4e2a\uff0c\u90a3\u4e48\u8fd9\u6837\u7684\u67d3\u8272\u5e8f\u5217\u80fd\u591f\u88ab\u67d3\u51fa\u6765\u5f53\u4e14\u4ec5\u5f53 $S$ \u80fd\u591f\u88ab\u62c6\u5206\u6210 $x+y$ \u4e2a\u5b50\u5e8f\u5217\uff08\u4e0d\u5fc5\u5168\u90e8\u5b57\u7b26\u90fd\u5c5e\u4e8e\u67d0\u4e2a\u5b50\u5e8f\u5217\uff0c\u4f46\u6bcf\u4e2a\u5b57\u7b26\u6700\u591a\u5c5e\u4e8e\u4e00\u4e2a\u5b50\u5e8f\u5217\uff09\uff0c\u5176\u4e2d $y$ \u4e2a\u6070\u597d\u662f `r`\uff0c\u800c\u5bf9\u4e8e\u53e6\u5916 $x$ \u4e2a\uff0c\u90fd\u4ee5 `rb` \u5f00\u5934\uff0c\u5e76\u4e14\u7b2c $i$ \u4e2a\u957f\u5ea6\u6070\u4e3a $c_i+1$\u3002\n\n\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u8d2a\u5fc3\u5730\u5224\u5b9a\u4e00\u4e2a\u5e8f\u5217\u662f\u5426\u53ef\u4ee5\u88ab\u67d3\u51fa\uff1a\u6211\u4eec\u5148\u8d2a\u5fc3\u5730\u9009\u51fa\u6700\u9760\u524d\u7684 $x$ \u4e2a `rb`\uff0c\u518d\u4ece\u5269\u4e0b\u7684\u5b50\u5e8f\u5217\u4e2d\u8d2a\u5fc3\u5730\u9009\u51fa $y$ \u4e2a `r`\uff0c\u7136\u540e\u6211\u4eec\u5bf9\u4e8e\u6b64\u65f6\u7684\u5c40\u9762\uff0c\u5bf9\u6bcf\u4e2a $i$ \u6c42\u51fa $[i,n]$ \u4e2d\u6709\u591a\u5c11\u4e2a\u683c\u5b50\u76ee\u524d\u6ca1\u6709\u88ab\u67d3\u8272\uff0c\u8bbe\u4e3a $sum_i$\uff0c\u7136\u540e\u6211\u4eec\u5c06\u9009\u51fa\u7684 $x$ \u4e2a `rb` \u6309 `b` \u7684\u4f4d\u7f6e\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u8bbe\u4e3a $ed_1,ed_2,\\cdots,ed_x$\uff0c\u518d\u5c06 $c$ \u6570\u7ec4\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u5373\u4e0d\u59a8\u5047\u8bbe $c_i\\ge c_{i+1}$\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u8d2a\u5fc3\u5730\u5c06\u7b2c\u4e00\u4e2a `rb` \u5206\u7ed9 $c$ \u6700\u5927\u7684\u8fde\u7eed\u6bb5\uff0c\u7b2c\u4e8c\u4e2a `rb` \u5206\u7ed9 $c$ \u7b2c\u4e8c\u5927\u7684\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u77e5\u4e00\u6bb5\u5e8f\u5217\u7b26\u5408\u8981\u6c42\uff0c\u5f53\u4e14\u4ec5\u5f53 $\\forall i,sum_{ed_i}\\ge\\sum\\limits_{j=i}^x(c_j-1)$\u3002\n\n\u6211\u4eec\u8003\u8651\u679a\u4e3e $x,y$\u200b\uff0c\u7136\u540e\u6309\u7167\u4e0a\u9762\u7684\u65b9\u5f0f\u5148\u8d2a\u5fc3\u5730\u9009\u51fa $x$\u200b \u4e2a `rb` \u548c $y$\u200b \u4e2a `r`\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u77e5\u9053 $sum_i$\u200b \u53ca $ed_i$\u200b\u3002\u7136\u540e\u6211\u4eec\u8003\u8651\u5012\u7740 DP\uff0c\u8bbe $dp_{i,j,k}$\u200b \u8868\u793a\u76ee\u524d\u94a6\u5b9a\u4e86 $i\\sim x$\u200b \u7684\u6bb5\u4e2d\u84dd\u8272\u70b9\u7684\u4e2a\u6570\uff0c\u76ee\u524d $\\sum\\limits_{j=i}^xc_j-1=j,c_i=k$\u200b\uff0c\u6709\u591a\u5c11\u79cd\u6742\u8272\u6bb5\u4e4b\u95f4\u4e24\u4e24\u4e4b\u95f4\u4f4d\u7f6e\u5173\u7cfb\u7684\u53ef\u80fd\uff0c\u8f6c\u79fb\u5c31\u679a\u4e3e $c_j=k$\u200b \u7684 $j$\u200b \u6709\u591a\u5c11\u4e2a\uff0c\u8bbe\u4e3a $p$\u200b\uff0c\u90a3\u4e48\u8f6c\u79fb\u5c31\u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u4e8c\u9879\u52a0\u6cd5\u5377\u79ef\uff0c\u5373 $dp_{i,j,k}=\\sum\\limits_{p}\\sum\\limits_{l}dp_{i+p,j-(k-1)p,l}\u00b7\\dbinom{x-i+1}{p}[l<k]$\u200b\uff0c\u6ce8\u610f\u5230 $p$\u200b \u7684\u679a\u4e3e\u662f\u8c03\u548c\u7ea7\u6570\uff0c\u56e0\u6b64 $p$\u200b \u679a\u4e3e\u7684\u603b\u590d\u6742\u5ea6\u662f $\\ln n$\u200b \u7ea7\u522b\u7684\uff0c\u800c $l$\u200b \u7684\u679a\u4e3e\u53ef\u4ee5\u524d\u7f00\u548c\u4f18\u5316\u6389\uff0c\u8fd9\u6837\u5355\u6b21 DP \u5c31\u8fbe\u5230\u4e86 $n^3\\ln n$\u200b\u200b\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u600e\u6837\u8ba1\u7b97\u4e00\u6b21 DP \u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u5373\u5982\u4f55\u7528 $dp_{1,j,k}$\u200b \u5373 $x,y$\u200b \u7684\u503c\u8ba1\u7b97\u7b54\u6848\uff0c\u9996\u5148\u6bb5\u4e4b\u95f4\u7684\u4f4d\u7f6e\u5173\u7cfb\uff0c$x$\u200b \u4e2a\u6742\u8272\u6bb5\u4e4b\u95f4\u7684\u4f4d\u7f6e\u5173\u7cfb\u5df2\u7ecf\u5728 DP \u8fc7\u7a0b\u4e2d\u94a6\u5b9a\u4e86\uff0c\u800c $y$\u200b \u4e2a\u6742\u8272\u6bb5\u4e0e $x$\u200b \u4e2a\u6742\u8272\u6bb5\u4e4b\u95f4\u7684\u4f4d\u7f6e\u5173\u7cfb\u5c31\u505a\u4e2a\u7ec4\u5408\u6570\uff0c\u5373 $\\dbinom{x+y}{x}$\u200b\uff0c\u63a5\u4e0b\u6765\u8003\u8651\u600e\u6837\u8ba1\u7b97\u6bcf\u4e2a\u8fde\u7eed\u6bb5\u4e2d\u7403\u7684\u6570\u91cf\u6709\u591a\u5c11\u79cd\u53ef\u80fd\uff0c\u6211\u4eec\u5148\u5047\u8bbe\u6bcf\u4e2a\u8fde\u7eed\u6bb5\u4e3a\u4e00\u4e2a\u201c\u76d2\u5b50\u201d\uff0c\u6bcf\u4e2a\u76d2\u5b50\u4e2d\u5fc5\u987b\u88c5\u540c\u4e00\u989c\u8272\u7684\u7403\uff0c\u90a3\u4e48\u5148\u4e0d\u59a8\u5047\u8bbe\u5bf9\u4e8e\u4e00\u4e2a\u7531 $c$\u200b \u4e2a B \u6784\u6210\u7684\u6742\u8272\u8fde\u7eed\u6bb5\uff0c\u5b83\u53ea\u6709 `BRBRBRBR\u2026B`\uff0c\u90a3\u4e48\u8fd9\u6837\u6709 $2c-1$\u200b \u4e2a\u76d2\u5b50\uff0c\u6bcf\u4e2a\u76d2\u5b50\u4e2d\u90fd\u5fc5\u987b\u81f3\u5c11\u6709\u4e00\u4e2a\u7403\uff0c\u800c\u4e24\u8fb9\u8fd8\u53ef\u4ee5\u653e\u4e00\u4e9b R\uff0c\u56e0\u6b64\u8fd8\u4f1a\u4ea7\u751f\u4e24\u4e2a\u53ef\u7a7a\u7684\u76d2\u5b50\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u7eaf\u8272\u8fde\u7eed\u6bb5\uff0c\u5b83\u80af\u5b9a\u6070\u597d\u4f1a\u4ea7\u751f\u4e00\u4e2a\u5fc5\u987b\u653e\u7403\u7684\u76d2\u5b50\uff0c\u800c\u8fde\u7eed\u6bb5\u4e0e\u8fde\u7eed\u6bb5\u4e4b\u95f4\u7684 $x+y-1$\u200b \u4e2a\u7a7a\u9699\uff0c\u5b83\u4eec\u5fc5\u987b\u653e\u9ed1\u7403\uff0c\u6709 $x+y-1$\u200b \u4e2a\u5fc5\u987b\u653e\u7403\u7684\u76d2\u5b50\uff0c\u800c\u4e24\u8fb9\u7684\u9ed1\u7403\u76d2\u5b50\u53ef\u4ee5\u7a7a\uff0c\u56e0\u6b64\u8fd8\u6709\u4e24\u4e2a\u53ef\u4ee5\u4e3a\u7a7a\u7684\u76d2\u5b50\uff0c\u8fd9\u6837\u5fc5\u987b\u653e\u7403\u7684\u76d2\u5b50\u6570 $A=2j+2x+2y-1$\u200b\uff0c\u53ef\u4ee5\u4e3a\u7a7a\u7684\u76d2\u5b50\u6570 $B=2x+2$\u200b\uff0c\u7ec4\u5408\u6570\u7b97\u8d21\u732e\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $n^5\\ln n$\uff0c\u7531\u4e8e\u5e38\u6570\u5f88\u5c0f\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\n\n\u542f\u793a\uff1a\n\n- \u5bf9\u4e8e\u6c42\u89e3\u6709\u591a\u5c11\u4e2a\u5e8f\u5217\u80fd\u591f\u88ab\u5f97\u5230\u7684\u8fd9\u4e00\u7c7b\u95ee\u9898\uff0c\u4e0d\u59a8\u5148\u8003\u8651\u4e00\u4e0b\u4ec0\u4e48\u6837\u7684\u5e8f\u5217\u80fd\u591f\u88ab\u5f97\u5230\uff0c\u800c\u5982\u679c\u6ca1\u6709\u63a8\u51fa\u8db3\u591f\u7684\u6027\u8d28\uff08\u6bd4\u5982\u8bf4\u5982\u679c\u6bcf\u6b21\u64cd\u4f5c\u7684\u5565\u5565\u5565\u4e0d\u540c\uff0c\u6700\u7ec8\u5f97\u5230\u7684\u5e8f\u5217\u4e00\u5b9a\u4e0d\u540c\uff09\u4e4b\u524d\uff0c\u6700\u597d\u4e0d\u8981\u76f4\u63a5\u4ece\u64cd\u4f5c\u5e8f\u5217\u7684\u65f6\u95f4\u8f74\u5165\u624b DP\u3002\n\n- \u5982\u679c\u4e00\u4e9b\u4fe1\u606f\u5728 DP \u7684\u8fc7\u7a0b\u4e2d\u4e0d\u80fd\u76f4\u63a5\u6c42\u5f97/\u8ba1\u7b97 DP \u7684\u7cfb\u6570\u65f6\u9700\u8981\u7528\u5230\u8fd9\u4e9b\u4fe1\u606f\uff0c\u90a3\u4e0d\u59a8\u5148\u679a\u4e3e\u5b83\u4eec\uff0c\u8fd9\u6837 DP \u7684\u65f6\u5019\u7cfb\u6570\u5c31\u6bd4\u8f83\u597d\u6c42\u4e86\u3002\n\nP.S.\uff1a\u5982\u679c\u4f60\u6700\u540e\u4e00\u7ec4\u6837\u4f8b\u8f93\u51fa 2088\uff0c\u770b\u770b\u662f\u4e0d\u662f\u591a\u7b97\u4e86 `BRB\u9ed1BRB` \u8fd9\u4e00\u4e0d\u5408\u6cd5\u7684\u5e8f\u5217\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define fi first\n#define se second\n#define fill0(a) memset(a, 0, sizeof(a))\n#define fill1(a) memset(a, -1, sizeof(a))\n#define fillbig(a) memset(a, 63, sizeof(a))\n#define pb push_back\n#define ppb pop_back\n#define mp make_pair\n#define mt make_tuple\n#define eprintf(...) fprintf(stderr, __VA_ARGS__)\ntemplate <typename T1, typename T2> void chkmin(T1 &x, T2 y){\n\tif (x > y) x = y;\n}\ntemplate <typename T1, typename T2> void chkmax(T1 &x, T2 y){\n\tif (x < y) x = y;\n}\ntypedef pair<int, int> pii;\ntypedef long long ll;\ntypedef unsigned int u32;\ntypedef unsigned long long u64;\ntypedef long double ld;\nnamespace fastio {\n\t#define FILE_SIZE 1 << 23\n\tchar rbuf[FILE_SIZE], *p1 = rbuf, *p2 = rbuf, wbuf[FILE_SIZE], *p3 = wbuf;\n\tinline char getc() {\n\t\treturn p1 == p2 && (p2 = (p1 = rbuf) + fread(rbuf, 1, FILE_SIZE, stdin), p1 == p2) ? -1: *p1++;\n\t}\n\tinline void putc(char x) {(*p3++ = x);}\n\ttemplate <typename T> void read(T &x) {\n\t\tx = 0; char c = getchar(); T neg = 0;\n\t\twhile (!isdigit(c)) neg |= !(c ^ '-'), c = getchar();\n\t\twhile (isdigit(c)) x = (x << 3) + (x << 1) + (c ^ 48), c = getchar();\n\t\tif (neg) x = (~x) + 1;\n\t}\n\ttemplate <typename T> void recursive_print(T x) {\n\t\tif (!x) return;\n\t\trecursive_print (x / 10);\n\t\tputc (x % 10 ^ 48);\n\t}\n\ttemplate <typename T> void print(T x) {\n\t\tif (!x) putc('0');\n\t\tif (x<0) putc('-'), x = -x;\n\t\trecursive_print(x);\n\t}\n\ttemplate <typename T> void print(T x,char c) {print(x); putc(c);}\n\tvoid print_final() {fwrite(wbuf, 1, p3-wbuf, stdout);}\n}\nconst int MAXN = 70;\nconst int MAXC = 500;\nconst int MOD = 1e9 + 7;\nint n, k, c[MAXC + 5][MAXC + 5]; char s[MAXN + 5];\nbool vis[MAXN + 5]; int ed[MAXN + 5], suf[MAXN + 5], sum[MAXN + 5];\nbool contribute(int x, int y) {\n\tmemset(vis, 0, sizeof(vis));\n\tint c1 = 0, c2 = 0;\n\tfor (int i = 1; i <= k; i++) {\n\t\tif (s[i] == 'r') {\n\t\t\tif (c1 < x + y) c1++, vis[i] = 1;\n\t\t} else {\n\t\t\tif (c2 < x && c1 > c2) c2++, vis[i] = 1, ed[c2] = i;\n\t\t}\n\t}\n\tif (c1 != x + y || c2 != x) return 0;\n\tsuf[k + 1] = 0;\n\tfor (int i = k; i; i--) suf[i] = suf[i + 1] + (!vis[i]);\n\tmemset(sum, 0, sizeof(sum));\n\tfor (int i = 1; i <= x; i++) sum[i] = suf[ed[i]];\n\treturn 1;\n}\nint dp[MAXN + 5][MAXN + 5][MAXN + 5], sdp[MAXN + 5][MAXN + 5][MAXN + 5];\nvoid calc_dp(int x, int y) {\n\tmemset(sdp, 0, sizeof(sdp)); memset(dp, 0, sizeof(dp));\n\tdp[x + 1][0][0] = 1;\n\tfor (int i = 0; i <= n; i++) sdp[x + 1][0][i] = 1;\n\tfor (int i = x; i; i--) {\n\t\tfor (int j = 0; j <= sum[i]; j++) {\n\t\t\tfor (int l = 1; l <= n; l++) {\n\t\t\t\tfor (int p = 1; p * (l - 1) <= j && p <= x - i + 1 && j - (l - 1) * p <= sum[i + p]; p++) {\n\t\t\t\t\tdp[i][j][l] = (dp[i][j][l] + 1ll * c[x - i + 1][p] * sdp[i + p][j - (l - 1) * p][l - 1]) % MOD;\n\t\t\t\t}\n\t\t\t\tsdp[i][j][l] = (sdp[i][j][l - 1] + dp[i][j][l]) % MOD;\n\t\t\t}\n\t\t}\n\t}\n}\nint main() {\n//\tfreopen(\"color.in\", \"r\", stdin);\n//\tfreopen(\"color.out\", \"w\", stdout);\n\tscanf(\"%d%d%s\", &n, &k, s + 1);\n\tfor (int i = 0; i <= MAXC; i++) {\n\t\tc[i][0] = 1;\n\t\tfor (int j = 1; j <= i; j++) {\n\t\t\tc[i][j] = (c[i - 1][j] + c[i - 1][j - 1]) % MOD;\n\t\t}\n\t}\n\tint res = 0;\n\tfor (int x = 0; x <= n; x++) {// x sequences with at least 1 blue ball\n\t\tfor (int y = 0; x + y <= n; y++) {// y sequences with only red balls\n\t\t\tif (!x && !y) continue;\n\t\t\tif (!contribute(x, y)) continue;\n//\t\t\tprintf(\"x = %d; y = %d:\\n\", x, y);\n//\t\t\tfor (int i = 1; i <= k; i++) printf(\"%d \", vis[i]);\n//\t\t\tprintf(\"\\n\");\n//\t\t\tfor (int i = 1; i <= x; i++) printf(\"%d \", sum[i]);\n//\t\t\tprintf(\"\\n\");\n\t\t\tcalc_dp(x, y);\n\t\t\tfor (int s = 0; s <= sum[1]; s++) {\n\t\t\t\tfor (int lst = 0; lst <= n; lst++) if (dp[1][s][lst]) {\n\t\t\t\t\tint A = (2 * s + x) + (x + y - 1) + y, B = 2 * x + 2;\n//\t\t\t\t\tprintf(\"!! %d %d %d %d %d %d\\n\", s, lst, dp[1][s][lst], A, B,\n//\t\t\t\t\t1ll * dp[1][s][lst] * c[x + y][y] % MOD * c[n + B - 1][A + B - 1] % MOD);\n\t\t\t\t\tres = (res + 1ll * dp[1][s][lst] * c[x + y][y] % MOD * c[n + B - 1][A + B - 1]) % MOD;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\", (res + 1) % MOD);\n\treturn 0;\n}\n/*\n4 3\nrrb\n\n7 4\nrbrb\n\n7 6\nrbrrrb\n*/\n```",
        "postTime": 1637246886,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 AT3878 [ARC089D] ColoringBalls"
    }
]