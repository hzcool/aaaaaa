[
    {
        "content": "## \u524d\u8a00\n\n\u770b\u5230\u4e86\u8003\u573a\u4e0a\u597d\u591a\u4eba\u90fd\u5728\u7528\u62d3\u6251\u6392\u5e8f\u7b49\u4e00\u7c7b\u8f83\u9ad8\u7ea7\u7684\u7b97\u6cd5\uff0c\u849f\u84bb\u88ab\u9707\u64bc\u4e86\u3002\n\n## \u89e3\u6cd5\n\n\u8fd9\u7bc7\u9898\u89e3\u4e0e\u5176\u4ed6\u9898\u89e3\u7684\u505a\u6cd5\u4e0d\u540c\uff0c\u4e0d\u7528\u56fe\u8bba\uff0c\u4e0d\u7528\u5e76\u67e5\u96c6\uff0c\u53ea\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u7b80\u5355\u597d\u60f3\u7684\u7b97\u6cd5\u5373\u53ef\u3002\n\n\u8003\u8651\u4e00\u4e9b\u7528\u6237\u4ec0\u4e48\u65f6\u5019\u4e0d\u80fd\u66f4\u6362\u7528\u6237\u540d\uff1a\u663e\u800c\u6613\u89c1\uff0c\u5f53\u4e14\u4ec5\u5f53\u522b\u4eba\u7684\u65e7\u7528\u6237\u540d\u4e0e\u8fd9\u4e2a\u7528\u6237\u7684\u65b0\u7528\u6237\u540d\u8d77\u4e86\u51b2\u7a81\uff0c\u8fd9\u4e2a\u4eba\u662f\u4e0d\u80fd\u66f4\u6362\u7684\u3002\n\n\u9996\u5148\u6211\u4eec\u628a\u80fd\u66f4\u6362\u7528\u6237\u540d\u7684\u4eba\u5904\u7406\u51fa\u6765\uff0c\u6b64\u65f6\u4ed6\u4eec\u7684\u65e7\u7528\u6237\u540d\u5c31\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u4eba\u4e86\u3002\u8fd9\u4e2a\u65f6\u5019\uff0c\u6211\u4eec\u518d\u628a\u5148\u524d\u4e0e\u8fd9\u4e9b**\u66f4\u6362\u5b8c\u7528\u6237\u540d\u7684\u4eba\u7684\u539f\u7528\u6237\u540d**\u6709\u51b2\u7a81\u7684\u4eba\u62ff\u51fa\u6765\uff0c\u518d\u53d6\u5904\u7406\u4ed6\u4eec\u3002\n\n\u4e0d\u65ad\u91cd\u590d\u4e0a\u8ff0\u8fc7\u7a0b\uff0c\u76f4\u5230\u6240\u6709\u4eba\u90fd\u5904\u7406\u5b8c\u3002\u5728\u5904\u7406\u7684\u67d0\u4e00\u4e2a\u65f6\u523b\uff0c\u5982\u679c\u201c\u5f85\u5904\u7406\u5217\u8868\u201d\u7a7a\u4e86\u4e14\u6ca1\u6709\u5904\u7406\u5b8c\u6240\u6709\u4eba\uff0c\u90a3\u4e48\u4e00\u5b9a\u65e0\u89e3\u3002\n\n\u201c\u5f85\u5904\u7406\u5217\u8868\u201d\u53ef\u4ee5\u7528 `std::set` \u5b58\u50a8\uff0c\u201c\u627e\u4eba\u201d\u5219\u53ef\u4ee5\u7528 `std::map`\t\u5b9e\u73b0\u3002\n\n\u653e\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nmain(){\n  ios::sync_with_stdio(false);\n  int n,c=0; cin>>n;\n  vector<pair<string,string> > a(n);\n  vector<bool> b(n);\n  map<string,int> x,y;\n  for(int i=0;i<n;i++){\n    cin>>a[i].first>>a[i].second;\n    x[a[i].first]=y[a[i].second]=i+1; // \u5efa\u7acb map \u6620\u5c04\uff0c\u65b9\u4fbf\u201c\u627e\u4eba\u201d\n  }\n  set<int> d;\n  for(int i=0;i<n;i++){\n    if(!x[a[i].second]){\n      if(y[a[i].first])d.emplace(y[a[i].first]-1); // \u653e\u8fdb\u5217\u8868\n      b[i]=true; x[a[i].first]=0; c++;\n    }\n  } // \u7b2c\u4e00\u8f6e\u626b\u63cf\u5168\u90e8\u7684\u4eba\n  while(1){\n    if(c==n){\n      cout<<\"Yes\\n\";\n      return 0;\n    } // \u5904\u7406\u5b8c\u4e86\n    set<int> q;\n    for(int i:d){\n      if(!b[i]&&!x[a[i].second]){\n        if(y[a[i].first])q.emplace(y[a[i].first]-1); // \u653e\u8fdb\u5217\u8868\n        x[a[i].first]=0; c++;\n      }\n    } // \u628a\u53ef\u4ee5\u5904\u7406\u7684\u62ff\u51fa\u6765\u5904\u7406\n    if(q.empty()&&c<n){\n      cout<<\"No\\n\";\n      return 0;\n    } // \u5217\u8868\u7a7a\u4e86\u4e14\u8fd8\u6ca1\u5904\u7406\u5b8c\n    d=q; // \u66f4\u65b0\u5217\u8868\n  }\n  return 0;\n}",
        "postTime": 1673867235,
        "uid": 556366,
        "name": "zyc212303",
        "ccfLevel": 5,
        "title": "[ABC285D] Change Usernames \u9898\u89e3"
    },
    {
        "content": "## \u9898\u610f\n\u6709 $n$ \u4e2a\u4eba\uff0c\u7b2c $i$ \u4eba\u521a\u5f00\u59cb\u6709\u4e00\u4e2a\u5b57\u7b26\u4e32 $a_i$\uff0c\u60f3\u8981\u6362\u6210\u5b57\u7b26\u4e32 $b_i$\u3002\u95ee **\u80fd\u4e0d\u80fd** \u5728\u540c\u4e00\u65f6\u523b\u6ca1\u6709\u4e24\u4e2a\u4eba\u624b\u6301\u7684\u5b57\u7b26\u4e32\u76f8\u540c\u7684\u60c5\u51b5\u4e0b\u5b8c\u6210\u8c03\u6362\uff1f\n## \u6837\u4f8b\u89e3\u91ca\n\u62ff\u7b2c\u4e00\u4e2a\u6837\u4f8b\u548c\u7b2c\u4e8c\u4e2a\u6837\u4f8b\u4e3e\u4e2a\u4f8b\u5b50\u3002\n```\n2\nb m\nm d\n```\n\u7b2c\u4e00\u6b65\uff1a\u5c06\u7b2c\u4e8c\u4e2a\u4eba\u7684 $m$ \u6362\u6210 $d$\u3002\n\n\u7b2c\u4e8c\u6b65\uff1a\u5c06\u7b2c\u4e00\u4e2a\u4eba\u7684 $b$ \u6362\u6210 $m$\u3002\n```\n3\na b\nb c\nc a\n```\n\u5c1d\u8bd5\u6ee1\u8db3\u7b2c\u4e00\u4e2a\u4eba\uff0c\u4f46\u8c03\u6362\u540e\u4f1a\u8ddf\u7b2c\u4e8c\u4e2a\u4eba\u91cd\u590d\u3002\n\n\u5c1d\u8bd5\u6ee1\u8db3\u7b2c\u4e8c\u4e2a\u4eba\uff0c\u4f46\u8c03\u6362\u540e\u4f1a\u8ddf\u7b2c\u4e09\u4e2a\u4eba\u91cd\u590d\u3002\n\n\u5c1d\u8bd5\u6ee1\u8db3\u7b2c\u4e09\u4e2a\u4eba\uff0c\u4f46\u8c03\u6362\u540e\u4f1a\u8ddf\u7b2c\u4e00\u4e2a\u4eba\u91cd\u590d\u3002\n\n\u6240\u4ee5\u4e0d\u884c\u3002\n## \u89e3\u9898\u601d\u8def\n\u8d5b\u540e\uff0c\u770b\u4e86\u4e00\u773c\u540c\u5b66\u7684\u4ee3\u7801\uff0c\u53d1\u73b0\u662f\u62d3\u6251\u6392\u5e8f\u3002\u53ef\u6211\u89c9\u5f97\u8fd9\u9053\u9898\u662f\u840c\u840c\u7684\u6df1\u641c\u54a9\u3002\n\n\u9996\u5148\u7528 `map` \u8bb0\u5f55\u6bcf\u4e2a\u4eba\u624b\u6301\u7684\u5b57\u7b26\u4e32\u3002\u518d\u7528\u54c8\u5e0c\u8bb0\u5f55\u6bcf\u4e2a\u4eba\u66f4\u6539\u8fc7\u6ca1\u6709\u3002\u626b\u4e00\u904d\uff0c\u5982\u679c\u53d1\u73b0\u6709\u4e00\u4e2a\u4eba\u6ca1\u66f4\u6539\u8fc7\uff0c\u5c31\u5f00\u59cb\u6df1\u641c\u3002\n\n\u6df1\u641c\u65f6\uff0c\u5206\u7c7b\u8ba8\u8bba\uff1a\u5982\u679c\u8fd9\u4e2a\u5b57\u7b26\u4e32\u76ee\u524d\u8fd8\u6ca1\u6709\u4eba\u76ee\u524d\u6709\uff0c\u5c31\u76f4\u63a5\u6362\u6389\uff0c\u66f4\u6539 `map` \u7684\u6570\u636e\u3002\u53cd\u4e4b\uff0c\u5c31\u7ee7\u7eed\u6df1\u641c\u90a3\u4e00\u4e2a\u963b\u62e6\u4ed6\u66f4\u6539\u7684\u4eba\uff0c\u76f4\u81f3\u627e\u5230\u4e00\u4e2a\u4eba\u6ee1\u8db3\u524d\u9762\u7684\u6761\u4ef6\uff0c\u5c31\u56de\u6eaf\u3002\u82e5\u53d1\u73b0\u8fdb\u5165\u4e86\u4e00\u4e2a\u73af\uff0c\u90a3\u4e48\u4e5f\u5c31\u662f\u8bf4\u662f\u66f4\u6539\u4e0d\u4e86\uff0c\u4e5f\u5c31\u662f `No`\u3002\n\n\u4e0d\u61c2\uff1f\u6765\uff0c\u4e0a\u4ee3\u7801\u3002\n## AC code\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n;\nstring a[100010],b[100010];\nmap<string,int> m;\nint h[100010];\nmap<string,int> id;\nvoid dfs(int x,int dep){\n    if(dep>n){//\u51fa\u73b0\u73af\n        cout<<\"No\";//\u66f4\u6539\u4e0d\u4e86\u8fd9\u4e2a\u4eba\uff0c\u518d\u89c1\n        exit(0);\n    }\n    if(m[b[x]]){//\u53d1\u73b0\u6709\u4eba\u963b\u788d\u66f4\u6539\n        int y=id[b[x]];\n        dfs(y,dep+1);//\u8c03\u67e5\u963b\u788d\u66f4\u6539\u7684\u4eba\n        if(m[b[x]]){//\u53d1\u73b0\u8fd8\u662f\u4e0d\u884c\n            cout<<\"No\";\n            exit(0);\n        }\n        else{//\u963b\u788d\u66f4\u6539\u7684\u4eba\u6ca1\u5a01\u80c1\u4e86\n            m[a[x]]--;\n            m[b[x]]++;//\u66f4\u6539\n            a[x]=b[x];\n            h[x]=1;\n            return;\n        }        \n    }\n    else{//\u6ca1\u4eba\u963b\u788d\u66f4\u6539\n        m[a[x]]--;\n        m[b[x]]++;//\u76f4\u63a5\u66f4\u6539\n        a[x]=b[x];\n        h[x]=1;\n        return;\n    }\n}\nmain(){\n    cin>>n;\n    for(int i=1;i<=n;i++){\n        cin>>a[i]>>b[i];\n        m[a[i]]++;\n        id[a[i]]=i;//\u8bb0\u5f55\u4f4d\u7f6e\u548c\u6b21\u6570\n    }\n    for(int i=1;i<=n;i++){\n        if(h[i]==0){//\u6ca1\u6709\u66f4\u6539\u8fc7\n            dfs(i,0);//\u5c1d\u8bd5\u66f4\u6539\n        }\n    }\n    cout<<\"Yes\";\n    return 0;\n}\n```",
        "postTime": 1673856219,
        "uid": 754000,
        "name": "_JSYX_",
        "ccfLevel": 5,
        "title": "abc285_d"
    },
    {
        "content": "### Changelog\n\n\u6dfb\u52a0\u4e86\u66f4\u52a0\u8be6\u7ec6\u7684\u89e3\u91ca\u3002\n\n### \u9898\u610f\n\n\u6a21\u62df\u4e00\u4e2a\u6539\u540d\u7cfb\u7edf\uff0c\u5224\u65ad\u662f\u5426\u4f1a\u51fa\u73b0\u91cd\u540d\u3002\n\n### \u601d\u8def\n\n\u5bf9\u4e8e $u_i$ \u6539\u540d\u4e3a $v_i$ \u7684\u64cd\u4f5c\uff0c\u53ef\u4ee5\u89c6\u4e3a\u5728 $u_i,v_i$ \u4e4b\u95f4\u8fde\u4e00\u6761\u5355\u5411\u8fb9\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u5982\u679c\u8fde\u8fb9\u7684\u65f6\u5019\u51fa\u73b0\u4e86\u73af\uff0c\u90a3\u4e48\u4e00\u5b9a\u5c31\u4f1a\u91cd\u540d\u3002\n\n\u8fd9\u4e00\u70b9\u5728\u6837\u4f8b\u4e2d\u4e5f\u80fd\u4f53\u73b0\u3002\n\n\u76f4\u63a5\u62d3\u6251\u5224\u73af\u5373\u53ef\u3002\n\n\u6211\u4eec\u53ea\u9700\u8981 vector \u5efa\u56fe\uff0c\u4ece\u56fe\u4e2d\u5220\u9664\u4e00\u4e2a\u5165\u5ea6\u4e3a $0$ \u7684\u70b9\u548c\u6240\u6709\u4ee5\u5b83\u4e3a\u5c3e\u7684\u8fb9\uff0c\u4e00\u76f4\u91cd\u590d\u4e0a\u8ff0\u8fc7\u7a0b\u76f4\u5230\u4e0d\u5b58\u5728\u6ca1\u6709\u524d\u9a71\u7684\u9876\u70b9\u3002\n\n\u5982\u679c\u6b64\u65f6\u5904\u7406\u8fc7\u7684\u9876\u70b9\u6570\u91cf\u5c0f\u4e8e\u6709\u5411\u56fe\u4e2d\u7684\u9876\u70b9\u6570\uff0c\u8bf4\u660e\u56fe\u4e2d\u5b58\u5728\u73af\uff0c\u5426\u5219\u8f93\u51fa\u7684\u9876\u70b9\u5e8f\u5217\u662f\u62d3\u6251\u5e8f\u5217\u3002\n\n\u5177\u4f53\u89c1\u4ee3\u7801\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define N 1000005\nusing namespace std;\nmap<string,int >m;\nvector<int >vec[N];\nqueue<int >q;\nint vis[N];\nint n;\nint main(){\n    int js=0;\n    cin>>n;\n    for(int i=1;i<=n;i++){\n        string u,v;\n        cin>>u>>v;\n        if(m[u]==0){\n            js++;\n            m[u]=js;\n        }\n        if(m[v]==0){\n            js++;\n            m[v]=js;\n        }\n        vec[m[u]].push_back(m[v]);\n        vis[m[v]]+=1;\n    }\n    for(int i=1;i<=js;i++)\n        if(vis[i]==0)\n            q.push(i);\n    int tot=0;\n    while(!q.empty()){\n        int head=q.front();\n        q.pop();\n        tot+=1;\n        for(int i=0;i<vec[head].size();i++){\n            if(vis[vec[head][i]]==0)\n                continue;\n            vis[vec[head][i]]-=1;\n            if(vis[vec[head][i]]==0)\n                q.push(vec[head][i]);\n        }\n    }\n    if(tot==js)\n        cout<<\"Yes\\n\";\n    else\n        cout<<\"No\\n\";\n    return 0;\n}\n```\n",
        "postTime": 1674111221,
        "uid": 600442,
        "name": "Lucas_Long",
        "ccfLevel": 0,
        "title": "ABC285D\u9898\u89e3"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/AT_abc285_d)\n\n----\n## \u9898\u610f\u7b80\u8ff0\n\n\u6709\u4e00\u4e2a $n$ \u6761\u8fb9\u7684\u6709\u5411\u56fe\uff0c\u5224\u65ad\u5176\u4e2d\u662f\u5426\u5b58\u5728\u73af\u3002\u5982\u679c\u5b58\u5728\u8f93\u51fa `No`\uff0c\u5426\u5219\u8f93\u51fa `Yes`\u3002\n\n\u6ce8\u610f\u8282\u70b9\u7f16\u53f7\u662f\u4e00\u4e2a\u957f\u5ea6\u4e0d\u8d85\u8fc7 $8$ \u7684\u5b57\u7b26\u4e32\u3002\n\n## $\\mathtt{Solution}$\n\n\u8fd9\u4e2a\u9898\u76ee\u5f88\u7b80\u5355\uff0c\u76f4\u63a5\u8dd1\u4e00\u904d\u62d3\u6251\u6392\u5e8f\u5373\u53ef\u3002\n\n\u9996\u5148\u7528\u54c8\u5e0c\u6216\u8005 map \u5c06\u8282\u70b9\u7f16\u53f7\u79bb\u6563\u5316\uff0c\u8fde\u8fb9\u7684\u8fc7\u7a0b\u4e2d\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u70b9\u7684\u5165\u5ea6\u3002\n\n\u8bfb\u5b8c $n$ \u6761\u8fb9\u4ee5\u540e\uff0c\u5c06\u6240\u6709\u5165\u5ea6\u4e3a\u96f6\u7684\u8282\u70b9\u653e\u8fdb\u4e00\u4e2a\u961f\u5217\u91cc\u9762\uff0c\u7136\u540e\u8dd1\u5e7f\u641c\u3002\n\n\u8dd1\u5e7f\u641c\u7684\u65f6\u5019\u5c06\u6240\u6709\u4e0e\u5f53\u524d\u8282\u70b9 $t$ \u76f4\u63a5\u76f8\u8fde\u7684 $v_i$ \u7684\u5165\u5ea6\u51cf\u4e00\uff0c\u5c06\u6240\u6709\u5165\u5ea6\u4e3a\u96f6\u7684\u8282\u70b9\u653e\u8fdb\u4e00\u4e2a\u961f\u5217\u91cc\u9762\u2026\u2026\u4ee5\u6b64\u7c7b\u63a8\u76f4\u5230\u65e0\u6cd5\u64cd\u4f5c\u4e3a\u6b62\u3002\n\n\u5982\u679c\u6211\u4eec\u5e76\u6ca1\u6709\u904d\u5386\u5b8c\u6240\u6709\u7684\u70b9\uff0c\u5c31\u4ee3\u8868\u6709\u73af\uff0c\u8f93\u51fa `No`\uff0c\u5426\u5219\u8f93\u51fa `Yes`\u3002\n\n\u4e0d\u4f1a\u62d3\u6251\u6392\u5e8f\u7684\u540c\u5b66\u4e5f\u53ef\u4ee5\u7528 dfs\uff0c\u8be6\u89c1\u4ee3\u7801\u4e8c\u3002\n\n\u4ee3\u7801\u4e00\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 2e5 + 5, MR = 1e6 + 5;\nint n, cnt, num, res, head[MAXN], in[MAXN];\nunordered_map<string, int>mp;\nstruct edge{\n\tint from, to, nxt;\n}e[MR];\nvoid add_edge(int u, int v){\n\te[++ cnt] = {u, v, head[u]};\n\thead[u] = cnt;\n} \nint main(){\n\tscanf(\"%d\", &n);\n\tfor(int i = 1;i <= n;i ++){\n\t\tstring u, v;\n\t\tcin>>u>>v;\n\t\tif(!mp[u])mp[u] = ++num;\n\t\tif(!mp[v])mp[v] = ++num;\n\t\tin[mp[v]] ++;\n\t\tadd_edge(mp[u], mp[v]);\n\t}\n\tqueue<int>q;\n\tfor(int i = 1;i <= num;i ++){\n\t\tif(in[i] == 0)q.push(i);\n\t}\n\twhile(!q.empty()){\n\t\tint t = q.front();\n\t\tres ++;\n\t\tq.pop();\n\t\tfor(int i = head[t];i;i = e[i].nxt){\n\t\t\tint v = e[i].to;\n\t\t\tin[v] --;\n\t\t\tif(in[v] == 0)q.push(v);\n\t\t}\n\t}\n\tif(res == num)puts(\"Yes\");\n\telse puts(\"No\");\n\treturn 0;\n}\n```\n\n\u4ee3\u7801\u4e8c\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n, m, i, j, k;\nchar a[15], b[15];\nstring s[100050];\nmap <string, int> v;//\u8bb0\u5fc6\u548c\u6570\u7ec4\nmap <string, string> f;//\u5b58\u50a8\u5355\u5411\u8fb9\nvoid dfs(string a){\n    if(f.find(a) == f.end()) return;\n    v[a] = 1;//\u641c\u7d22\u4e2d\n    string b = f[a];\n    if(!v[b]) dfs(b);//\u641c\u8fc7\u4e0d\u518d\u641c\n    else if(v[b] == 1) m = 1;//\u73af\n    v[a] = -1;//\u641c\u7d22\u5b8c\n}\nint main(){\n    scanf(\"%d\", &n);\n    for(i=1; i<=n; i++){\n        scanf(\"%s%s\", a, b);\n        f[a] = b, s[i] = a;\n    }\n    for(i=1; i<=n; i++){\n        if(!v[s[i]]) dfs(s[i]);\n    }//\u65e0\u73af\u5219\u884c\uff0c\u5426\u5219\u4e0d\u884c\n    printf(\"%s\\n\", m?\"No\":\"Yes\");\n    return 0;\n}\n```\n",
        "postTime": 1673861546,
        "uid": 668869,
        "name": "Fire_flame",
        "ccfLevel": 5,
        "title": "ABC285D\u9898\u89e3"
    },
    {
        "content": "## \u89e3\u51b3\u65b9\u6848\n\n\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u7684\u6539\u540d\u64cd\u4f5c\uff08\u5c06 $u$ \u6539\u6210 $v$\uff09\uff0c\u53ef\u4ee5\u60f3\u5230\u4ece $u$ \u8fde\u4e00\u6761\u6709\u5411\u8fb9\u5230 $v$\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u6837\u4f8b\u6309\u7167\u4ee5\u4e0a\u65b9\u6cd5\u5efa\u56fe\u4e4b\u540e\uff0c\u4f1a\u53d1\u73b0\u5f53\u56fe\u4e2d**\u6709\u73af**\u65f6\u5c31**\u65e0\u6cd5**\u5b8c\u6210\u6539\u540d\u3002\n\n\u90a3\u4e48\u8fd9\u9053\u9898\u5c31\u53d8\u6210\u4e86\uff1a\u7ed9\u4e00\u5f20\u56fe\uff0c\u5224\u65ad\u5176\u4e2d\u662f\u5426\u6709\u73af\u3002\n\n\u5982\u679c\u6709\u73af\uff0c\u90a3\u4e48 \u8be5\u56fe\u7684\u5f3a\u8fde\u901a\u5206\u91cf $\\neq$ \u8282\u70b9\u6570\u91cf\u3002\n\n\u601d\u8def\u5230\u6b64\u5df2\u7ecf\u5f88\u6e05\u6670\u4e86\uff0c\n\u6700\u540e\u53ea\u9700\u8981\u89e3\u51b3\u201c\u5c06\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u6620\u5c04\u5230\u6570\u5b57\u201d\u5373\u53ef\u3002\n\n\u8fd9\u53ef\u4ee5\u7528 `std::map<std::string, int>` \u89e3\u51b3\u3002\n\n```cpp\nstd::map<std::string, int> user;\nint inputCnt;\n\nint query(std::string str) {\n    if (user.find(str) == user.end()) {\n        user[str] = ++inputCnt;\n    }\n    return user[str];\n}\n```\n\n## \u53c2\u8003\u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <string>\n#include <vector>\n#include <stack>\n#include <map>\nusing std::cin;\nusing std::cout;\n\nconst int userLimit= 1e6 + 3;\n\nstd::vector<int> graph[userLimit];\n\nstd::map<std::string, int> user;\nint inputCnt;\n\nint query(std::string str) {\n    if (user.find(str) == user.end()) {\n        user[str] = ++inputCnt;\n    }\n    return user[str];\n}\n\nint dfn[userLimit], low[userLimit], dfnCnt;\nint sccCnt, isStack[userLimit];\nstd::stack<int> s;\n\nint min(int a, int b) {\n    if (a < b) {\n        return a;\n    }\n    return b;\n}\n\nvoid tarjan(int node) {\n    low[node] = dfn[node] = ++dfnCnt;\n    isStack[node] = 1;\n    s.push(node);\n    for (int nextNode : graph[node]) {\n        if (!dfn[nextNode]) {\n            tarjan(nextNode);\n            low[node] = min(low[node], low[nextNode]);\n        } else if (isStack[nextNode]) {\n            low[node] = min(low[node], dfn[nextNode]);\n        }\n    }\n\n    if (dfn[node] == low[node]) {\n        ++sccCnt;\n        while (true) {\n            int t = s.top();\n            isStack[t] = 0;\n            s.pop();\n            if (t == node) {\n                break;\n            }\n        }\n    }\n}\n\nint main() {\n    int userCnt;\n    cin >> userCnt;\n    for (int i = 1; i <= userCnt; ++i) {\n        std::string u, v;\n        cin >> u >> v;\n        graph[query(u)].push_back(query(v));\n    }\n\n    for (int i = 1; i <= inputCnt; ++i) {\n        if (!dfn[i]) {\n            tarjan(i);\n        }\n    }\n\n    if (sccCnt != inputCnt) {\n        cout << \"No\\n\";\n    } else {\n        cout << \"Yes\\n\";\n    }\n\n    return 0;\n}\n```",
        "postTime": 1674181032,
        "uid": 389684,
        "name": "PerssonBrown",
        "ccfLevel": 4,
        "title": "AT_ABC285-D\u9898\u89e3"
    },
    {
        "content": "# ABC285D \u9898\u89e3\uff1a\n## \u9898\u610f\uff1a\n\u6709 $n$ \u4e2a\u4eba\u8981\u66f4\u6539\u7528\u6237\u540d\uff0c\u4f60\u53ef\u4ee5\u8c03\u6574\u4ed6\u4eec\u66f4\u6539\u7684\u987a\u5e8f\uff0c\u95ee\u662f\u5426\u80fd\u66f4\u6539\u6210\u529f\u3002\n## \u601d\u8def\uff1a\n\u5982\u4f55\u624d\u80fd\u66f4\u6539\u4e0d\u6210\u529f\uff1f\u6211\u4eec\u53ef\u4ee5\u601d\u8003\u4e00\u4e0b\u3002\u4ee5\u4e0b\u60c5\u51b5\u4f1a\u51fa\u73b0\u4e0d\u6210\u529f\uff1a\n- \u7532\u5e0c\u671b\u5c06 $s1$ \u66f4\u6539\u4e3a $s2$\u3002\n- \u4e59\u5e0c\u671b\u5c06 $s2$ \u66f4\u6539\u4e3a $s3$\u3002\n- \u4e19\u5e0c\u671b\u5c06 $s3$ \u66f4\u6539\u4e3a $s1$\u3002   \n\n\u4ee5\u4e0a\u60c5\u51b5\u4e0d\u6210\u529f\uff0c\u65e0\u8bba\u5982\u4f55\u6539\u53d8\u987a\u5e8f\u90fd\u4e0d\u884c\u3002\u8fd9\u662f\u4e09\u4e2a\u4eba\u7684\u60c5\u51b5\uff0c\u50cf\u4ee5\u4e0a\u7684\u60c5\u51b5\uff0c\u56db\u4e2a\u4eba\u3001\u4e94\u4e2a\u4eba\u53ca\u4ee5\u4e0a\u90fd\u4e0d\u884c\u3002\u60f3\u4e00\u60f3\uff0c\u8fd9\u50cf\u4ec0\u4e48\uff1f\u50cf\u4e0d\u50cf\u4e00\u4e2a\u73af\uff1f\u6211\u4eec\u60f3\u5230\u4e86\u56fe\u3002\u7528\u56fe\u4fdd\u5b58\u8d77\u6765\uff0c\u5224\u65ad\u91cc\u9762\u6709\u6ca1\u6709\u73af\uff0c\u5c31\u53ef\u4ee5\u4e86\u3002\u95ee\u9898\u53c8\u6765\u4e86\uff0c\u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u56fe\u6709\u6ca1\u6709\u73af\uff1f\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5e76\u67e5\u96c6\u6765\u5224\u65ad\u4e00\u4e2a\u56fe\u4e2d\u662f\u5426\u5b58\u5728\u73af\uff1a\n- \u5bf9\u4e8e\u65e0\u5411\u56fe\u6765\u8bf4\uff0c\u5728\u904d\u5386\u8fb9\u65f6\uff0c\u5982\u679c\u7ed3\u70b9 $u$ \u548c\u7ed3\u70b9 $v$ \u7684\u201c\u7236\u4eb2\u201d\u76f8\u540c\uff0c\u90a3\u4e48\u7ed3\u70b9 $u$ \u548c\u7ed3\u70b9 $v$ \u5728\u540c\u4e00\u4e2a\u73af\u4e2d\u3002\n- \u5bf9\u4e8e\u6709\u5411\u56fe\u6765\u8bf4\uff0c\u5728\u904d\u5386\u8fb9\u65f6\uff0c\u5982\u679c\u7ed3\u70b9 $u$ \u7684\u201c\u7236\u4eb2\u201d\u662f\u7ed3\u70b9 $v$\uff0c\u90a3\u4e48\u7ed3\u70b9 $u$ \u548c\u7ed3\u70b9 $v$ \u5728\u540c\u4e00\u4e2a\u73af\u4e2d\u3002\n## \u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nmap < string , int >m;\nint fa[1000001];\nint find(int x){\n    return x==fa[x]?x:fa[x]=find(fa[x]);\n}\nint main(){\n\tint cnt=0,n;\n\tcin>>n;\n\tfor(int i=1;i<=2*n;i++)fa[i]=i;\n\tfor(int i=1;i<=n;i++){\n\t\tstring a,b;cin>>a>>b;\n\t\tif(m[a]==0)m[a]=++cnt;\n\t\tif(m[b]==0)m[b]=++cnt;\n\t\tint x=find(m[a]),y=find(m[b]);\n\t\tif(fa[x]==y)\n\t\t{\n\t\t\tcout<<\"No\";\n\t\t\treturn 0;\n\t\t}\n\t\tfa[y]=x;\n\t}\n\tcout<<\"Yes\";\n\treturn 0;\n}\n```",
        "postTime": 1673864297,
        "uid": 529458,
        "name": "_xyz_",
        "ccfLevel": 0,
        "title": "abc285d"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\u7ed9\u5b9a $n$ \u6761\u8fb9\uff0c\u7531\u5b57\u7b26\u4e32 $a$ \u8fde\u5411\u5b57\u7b26\u4e32 $b$\uff0c\u5224\u65ad\u6700\u540e\u56fe\u5b58\u4e0d\u5b58\u5728\u73af\u3002\n## \u601d\u8def\n\u8003\u8651\u5b57\u7b26\u4e32\u8fde\u8fb9\u6bd4\u8f83\u590d\u6742\uff0c\u5219\u5c06\u5176\u6620\u5c04\u6210\u4e00\u4e2a\u6570\u503c\uff08\u70b9\u7684\u7f16\u53f7\uff09\uff0c\u65b9\u4fbf\u5efa\u8fb9\u3002\n\n\u6620\u5c04\u65b9\u5f0f\u4e5f\u5f88\u7b80\u5355\uff0c\u8bb0\u5f55\u53d8\u91cf $idx$\uff0c\u5373\u4e3a\u70b9\u7684\u6570\u91cf\u3002\u6bcf\u6b21\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5982\u679c\u6b64\u5b57\u7b26\u4e32\u6ca1\u6709\u5728\u4e4b\u524d\u51fa\u73b0\u8fc7\uff0c\u8bb0\u5f55\u7f16\u53f7 `++idx` \u3002\n\n\u5efa\u5b8c\u8fb9\u540e\uff0c\u53ea\u9700\u8981\u5bf9\u56fe\u8fdb\u884c\u5224\u73af\uff0c\u901a\u5e38\u505a\u6cd5\u662f\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\uff0c\u5982\u679c\u6700\u540e\u961f\u5217\u4e2d\u5143\u7d20\u7684\u6570\u91cf\u4e3a\u70b9\u7684\u6570\u91cf\uff0c\u90a3\u4e48\u5c31\u65e0\u73af\uff0c\u53cd\u4e4b\u3002\n## \u4ee3\u7801\n```c++\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define int long long\nconst int N = 2e5 + 5;\nint n, idx, q[N];\nmap<string, int> vis;\n\nint en, first[N], in[N];\nstruct edge {\n    int e, next;\n}ed[N];\n\nvoid add_edge(int s, int e) {\n    en++;\n    ed[en].e = e;\n    ed[en].next = first[s];\n    first[s] = en;\n}\n\nsigned main() {\n    cin >> n;\n    for (int i = 1; i <= n; i++) {\n        string x, y;\n        cin >> x >> y;\n        if (!vis[x]) vis[x] = ++idx;\n        if (!vis[y]) vis[y] = ++idx;\n        // idx \u76f8\u5f53\u4e8e\u70b9\u7684\u6570\u91cf\n        add_edge(vis[x], vis[y]);\n        in[vis[y]]++;\n    }\n    int hh = 0, tt = -1;\n    for (int i = 1; i <= idx; i++) {\n        if (in[i] == 0) q[++tt] = i;\n    }\n    while (hh <= tt) {\n        int u = q[hh++];\n        for (int p = first[u]; p; p = ed[p].next) {\n            int e = ed[p].e;\n            in[e]--;  \n            if (in[e] == 0) q[++tt] = e;\n        }\n    }\n    if (hh == idx) puts(\"Yes\");  // \u65e0\u73af\n    else puts(\"No\");\n}\n```",
        "postTime": 1673851788,
        "uid": 411727,
        "name": "stOtue",
        "ccfLevel": 0,
        "title": "[ABC285D] Change Usernames"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u5b9a $N$ \u5bf9\u5b57\u7b26\u4e32 $S_i, T_i (1 \\le i \\le N)$\u3002\n\n\u7b2c $i$ \u4e2a\u4eba\u539f\u540d $S_i$\uff0c\u53ef\u4ee5\u6539\u4e3a $T_i$\u3002\n\n\u95ee\u6539\u540d\u8fc7\u7a0b\u4e2d\u4f1a\u4e0d\u4f1a\u51fa\u73b0\u91cd\u540d\u60c5\u51b5\u3002\n\n## \u89e3\u9898\u601d\u8def\n\n\u7b2c $i$ \u4e2a\u4eba\u4ece $S_i$ \u6539\u540d\u6210\u4e3a $T_i$\uff0c\u6211\u4eec\u5c31\u5c06 $S_i$ \u4e0e $T_i$ \u95f4\u8fde\u63a5\u4e00\u6761\u5355\u5411\u8fb9\u3002\n\n\u82e5\u8fde\u63a5\u7684\u56fe\u6709\u73af\uff0c\u8fd9\u5fc5\u5b9a\u4f1a\u91cd\u540d\u3002\n\n\u4f7f\u7528\u62d3\u6251\u6392\u5e8f\u5224\u73af\u5373\u53ef\u3002\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\nint n, cnt;\nint in_degree[100010];\nstring s[100010], t[100010];\nvector<int> g[100010];\nmap<string, int> rnk;\nset<string> st;\nbool topo_sort() {\n    queue<int> q;\n    for (int i = 1; i <= cnt; i++) {\n        if (in_degree[i] == 0) q.push(i);\n    }\n    while (!q.empty()) {\n        int u = q.front();\n        q.pop();\n        cnt--;\n        for (auto &v : g[u]) {\n            in_dgree[v]--;\n            if (in_degree[i] == 0) q.push(v);\n        }\n    }\n    return cnt == 0;\n}\nvoid solve() {\n    cin >> n;\n    for (int i = 1; i <= n; i++) {\n        cin >> s[i] >> t[i];\n        st.insert(s[i]);\n        st.insert(t[i]);\n    }\n    for (auto &it : st) rnk[i] = ++cnt;\n    for (int i = 1; i <= n; i++) {\n        int u = rnk[s[i]];\n        int v = rnk[t[i]];\n        in_degree[v]++;\n        g[u].push_back[v];\n    }\n    if (topo_sort) cout << \"Yes\" << endl;\n    else cout << \"No\" << endl;\n    return ;\n}\n```\n\n",
        "postTime": 1673851079,
        "uid": 638717,
        "name": "Lyu_echo",
        "ccfLevel": 5,
        "title": "AtCoder Beginner Contest 285 D-Change Usernames Solution"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/MnZnOIerLzy/articles/17055155.html)\n\n# $\\texttt{Description}$\n\n[AtCoder Link](https://atcoder.jp/contests/abc285/tasks/abc285_d)\n\n[\u6d1b\u8c37 Link](https://www.luogu.com.cn/problem/AT_abc285_d)\n\n> - \u6709 $n$ \u4e2a\u4eba\uff0c\u7b2c $i$ \u4e2a\u4eba\u6709\u540d\u5b57 $s_i$ \u548c\u7406\u60f3\u540d\u5b57 $t_i$\u3002\u4f60\u6bcf\u6b21\u53ef\u4ee5\u5c06\u4e00\u4e2a\u4eba\u7684\u540d\u5b57\u6539\u6210\u7406\u60f3\u540d\u5b57\uff0c\u524d\u63d0\u662f\u7406\u60f3\u540d\u5b57\u76ee\u524d\u6ca1\u4eba\u4f7f\u7528\u3002\u6bcf\u4e2a\u4eba\u53ea\u53ef\u4ee5\u6539\u4e00\u6b21\u540d\u5b57\u3002\n>\n> - $1\\le n\\le 10^5$\uff0c$s_i\\ne t_i$\uff0c$s_i$ \u4e92\u4e0d\u76f8\u540c\uff0c$t_i$ \u4e92\u4e0d\u76f8\u540c\u3002\n\n# $\\texttt{Solution}$\n\n\u7ed3\u8bba\uff1a\u5c06 $s_i$ \u8fde\u8fb9\u5411 $t_i$\uff0c\u82e5\u56fe\u65e0\u73af\u5219\u6709\u89e3\uff0c\u5426\u5219\u65e0\u89e3\u3002\n\n\u8bc1\u660e\uff1a\u82e5\u56fe\u65e0\u73af\uff0c\u5219\u5728\u62d3\u6251\u5e8f\u4e2d\u5b58\u5728\u51fa\u5ea6\u4e3a $0$ \u7684\u70b9\uff0c\u8fd9\u4e9b\u70b9\u662f\u6ca1\u4eba\u5360\u7528\u7684\u3002\u6240\u4ee5\u53ef\u4ee5\u6309\u7167\u62d3\u6251\u6392\u5e8f\u4e2d\u7684\u5c42\u6b21**\u4ece\u540e\u81f3\u524d**\u4f9d\u6b21\u66f4\u6539\u540d\u5b57\u3002\n\n\u5426\u5219\uff0c\u6bcf\u4e2a\u540d\u5b57\u90fd\u6709\u4eba\u5360\u7528\uff0c\u6ca1\u6709\u4eba\u53ef\u4ee5\u8ba9\u51fa\u81ea\u5df1\u7684\u540d\u5b57\uff0c\u65e0\u89e3\u3002\n\n\u56e0\u6b64\u62d3\u6251\u5224\u73af\uff0c\u904d\u5386\u7684\u70b9\u6570\u662f\u5426\u7b49\u4e8e\u603b\u70b9\u6570\uff08**\u4e0d\u662f $n$**\uff09\u5373\u53ef\u3002\n\n\u6ce8\u610f\u5b57\u7b26\u4e32\u7528 `map` \u6620\u5c04\u4e00\u4e0b\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(n\\log_2 n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(n)$\u3002\n\n# $\\texttt{Code}$\n\n```cpp\n#include<bits/stdc++.h>\n#define N 200005//\u5751\u70b9\nusing namespace std;\nint n,rd[N],tot,has,q[10*N],h=1,t=0;\nvector<int>g[N];\nmap<string,int>mp;\nstring a,b;\nint main(){\n    cin>>n;\n    for(int i=1;i<=n;++i){\n        cin>>a>>b;\n        if(!mp[a]){\n            mp[a]=++has;\n        }\n        if(!mp[b]){\n            mp[b]=++has;\n        }\n        g[mp[a]].push_back(mp[b]);\n        ++rd[mp[b]];\n    }\n    for(int i=1;i<=has;++i){\n        if(!rd[i]){\n            q[++t]=i;\n        }\n    }\n    while(h<=t){\n        int u=q[h++];\n        ++tot;\n        for(int v:g[u]){\n            if(!--rd[v]){\n                q[++t]=v;\n            }\n        }\n    }\n    if(tot^has){\n        cout<<\"No\";\n    }else{\n        cout<<\"Yes\";\n    }\n}\n```",
        "postTime": 1673843741,
        "uid": 539211,
        "name": "\u849f\u84bb\u00b7\u5ed6\u5b50\u9633",
        "ccfLevel": 5,
        "title": "ABC285D"
    },
    {
        "content": "`2023.1.20` \u6dfb\u52a0\u4e86\u66f4\u8be6\u7ec6\u7684\u89e3\u91ca\uff0c\u4e3a\u4ec0\u4e48\u662f\u5224\u73af\u3002\n\n\u8fd9\u9053\u9898\u672c\u849f\u84bb\u9898\u6ca1\u8bfb\u61c2\uff0c\u4f46\u662f AC \u4e86\u3002\n\n\u849f\u84bb\u7406\u89e3\u7684\u9898\u610f\uff1a\n\n\u6bcf\u4e24\u4e2a\u5b57\u7b26\u4e32\u8fde\u6210\u4e00\u6761\u8fb9\uff0c\u95ee\u6709\u6ca1\u6709\u73af\u3002\n\n\u73b0\u5728\u6709\u4e86\u7ffb\u8bd1\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8bc1\u660e\u4e00\u4e0b\uff1a\n\n\u6211\u4eec\u60f3\u8c61\u6210\u4e24\u4e2a\u5b57\u7b26\u4e32\u8fde\u6210\u4e00\u6761\u8fb9\u3002\n\n\u5047\u8bbe\u6709\u4e00\u4e2a\u73af\uff0c\u5f62\u540c $a$ \u81f3 $b$\uff0c$b$ \u81f3 $c$\uff0c$c$ \u81f3 $a$\u3002\n\n\u90a3\u4e48\u5982\u679c\u6211\u5148\u8ba9 $a$ \u6539\u540d\uff0c$a$ \u6539\u4e0d\u4e86\uff0c\u56e0\u4e3a\u6709\u4eba\u53eb\u4f5c $b$\u3002\n\n\u5982\u679c\u6211\u5148\u8ba9 $b$ \u6539\u540d\uff0c$b$ \u4e5f\u6539\u4e0d\u4e86\uff0c\u56e0\u4e3a\u6709\u4eba\u53eb\u4f5c $c$\u3002\n\n\u5982\u679c\u6211\u5148\u8ba9 $c$ \u6539\u540d\uff0c$c$ \u4e5f\u6539\u4e0d\u4e86\uff0c\u56e0\u4e3a\u6709\u4eba\u53eb\u4f5c $a$\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u60f3\u8981 $s_i$ \u6539\u540d\uff0c\u5fc5\u987b\u8981\u6ca1\u6709\u4eba\u53eb\u4f5c $t_i$\u3002\u6362\u53e5\u8bdd\u8bb2\uff0c\u5c31\u662f $t_i$ \u7684\u5165\u5ea6\u4e3a $0$\u3002\n\n\u5176\u5b9e\u5c31\u662f\u5224\u73af\u3002\n\n\u6211\u4eec\u5148\u7528 map \u5b58\u50a8\uff0c\u7528\u7f16\u53f7\u4ee3\u66ff\u6bcf\u4e2a\u5b57\u7b26\u4e32\u3002\n\n\u7136\u540e\u8dd1\u4e00\u904d\u62d3\u6251\u6392\u5e8f\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6ce8\u610f\uff1a\u6709\u73af\u8f93\u51fa $\\texttt{No}$\uff0c\u6ca1\u73af\u624d\u662f $\\texttt{Yes}$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8981\u7528 map \u5b58\u50a8\u7f16\u53f7\uff0c\u5c3d\u91cf\u4e0d\u8981\u50cf C \u4e00\u6837\u8f6c\u6362\uff0c\u8fd9\u6837\u6bd4\u8f83\u5927\u3002\n\n\u6211\u7684\u8f6c\u6362\u65b9\u5f0f\u662f\u8f93\u5165\u4e4b\u540e\uff0c\u5982\u679c\u8be5\u5b57\u7b26\u4e32\u6709\u7f16\u53f7\uff0c\u5c31\u7528\u5b83\u672c\u6765\u7684\u7f16\u53f7\u3002\u5426\u5219\uff0c\u7f16\u53f7 $+1$\uff0c\u5b57\u7b26\u4e32\u7684\u7f16\u53f7\u7b49\u4e8e\u65b0\u7684\u7f16\u53f7\u3002\n\n\u8fd9\u6837\u7b80\u5355\uff0c\u8282\u7ea6\u5185\u5b58\u3002\n\n```cpp\nI void Add(string s) {\n\tif(id.count(s)) return ; // \u5982\u679c s \u6709\u7f16\u53f7\u4e86\uff0c\u5c31\u8df3\u8fc7\n\tid[s] = ++n; // \u65b0\u5efa\u7f16\u53f7\n}\n```\n\n\u52a0\u8fb9\u53ea\u9700\u8981\u8fde\u63a5 $id_s,id_t$ \u5373\u53ef\u3002\n\n\u62d3\u6251\u6392\u5e8f\u5c31\u4e0d\u9700\u8981\u591a\u8bb2\u4e86\uff0c\u5c31\u662f\u4e2a\u6a21\u677f\u3002\n\n\u6ce8\u610f\uff1a\u4e0d\u8981\u624b\u6ed1\u5efa\u6210\u53cc\u5411\u8fb9\uff01\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define CI const int\n#define gc getchar\n#define Mt(a, b) memset(a, b, sizeof a)\n#define pc putchar\n#define W while\n#define I inline\nCI N = 200010; map<string, int> id; int n, m; // \u6ce8\u610f\uff0c\u6700\u591a\u4f1a\u4ea7\u751f\u4e8c\u5341\u4e07\u4e2a\u7f16\u53f7\u3002\nI void Add(string s) {\n\tif(id.count(s)) return ;\n\tid[s] = ++n;\n}\nint h[N], to[N], nxt[N], idx, in[N];\nI void add(int a, int b) {to[++idx] = b; nxt[idx] = h[a]; h[a] = idx; in[b]++;}\nI bool topo() {\n\tint cnt = 0;\n\tqueue<int> q; for(int i = 1; i <= n; i++) if(!in[i]) q.push(i);\n\tW(!q.empty()) {\n\t\tint u = q.front(); q.pop(); cnt++;\n\t\tfor(int i = h[u]; i; i = nxt[i]) {\n\t\t\tint v = to[i]; in[v]--;\n\t\t\tif(!in[v]) q.push(v);\n\t\t}\n\t}\n\treturn cnt == n;\n}\nsigned main() {\n\tcin >> m;\n\tW(m--) {\n\t\tstring s, t;\n\t\tcin >> s >> t;\n\t\tAdd(s), Add(t);\n\t\tadd(id[s], id[t]);\n\t}\n\tif(topo()) puts(\"Yes\"); else puts(\"No\");\n\treturn 0;\n}\n```",
        "postTime": 1673837007,
        "uid": 675466,
        "name": "Stitch0711",
        "ccfLevel": 5,
        "title": "ABC285D"
    },
    {
        "content": "## \u9898\u610f\n\u6709 $N$ \u4e2a\u4eba\u60f3\u6539\u540d\uff0c\u7b2c $i$ \u4e2a\u4eba\u8981\u4ece $S_i$ \u6539\u6210 $T_i$\uff0c\u5f53\u4e00\u4e2a\u7528\u6237\u60f3\u8981\u6539\u7684\u540d\u5b57\u6ca1\u6709\u4eba\u5728\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u7528\u6237\u53ef\u4ee5\u6210\u529f\u6539\u540d\u3002\u95ee\u662f\u5426\u6240\u6709\u7528\u6237\u90fd\u53ef\u4ee5\u6210\u529f\u6539\u540d\u3002\n## \u601d\u8def\n\u6211\u4eec\u8003\u8651\u5982\u679c\u4e00\u4e2a\u7528\u6237 $i$ \u8981\u6539\u540d\u7684\u8bdd\uff0c\u9700\u8981\u4ed6\u60f3\u8981\u6539\u6210\u7684\u540d\u5b57 $T_i$ \u7684\u4e3b\u4eba $j$ \u6539\u540d\uff0c\u7136\u540e $j$ \u8981\u6539\u540d\u6709\u9700\u8981 $T_j$ \u7684\u4e3b\u4eba $k$ \u6539\u540d\u2026\u2026\u8fd9\u6837\u8d70\u4e0b\u53bb\uff0c\u5982\u679c\u4e00\u4e2a\u4eba\u60f3\u8981\u6539\u6210\u7684\u540d\u5b57\u6ca1\u6709\u4eba\u518d\u7528\uff0c\u90a3\u4e48\u8fd9\u4e9b\u4eba\u5c31\u90fd\u53ef\u4ee5\u6539\u540d\u4e86\u3002\u4f46\u662f\u5982\u679c\u8d70\u51fa\u4e86\u4e2a\u73af\uff0c\u4e5f\u5c31\u662f\u8bf4 $i$ \u8981\u6539\u540d\u4e4b\u524d\u9700\u8981 $i$ \u6539\u540d\uff0c\u8fd9\u662f\u4e0d\u53ef\u80fd\u8fbe\u5230\u7684\u3002\u6240\u4ee5\u5982\u679c\u6211\u4eec\u5efa\u7acb $N$ \u8c03\u8fb9\uff0c\u7b2c $i$ \u6761\u8fb9\u7531 $S_i$ \u6307\u5411 $T_i$ \u6700\u540e\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad\u56fe\u4e2d\u662f\u5426\u73af\u5c31\u884c\u4e86\u3002\n\n\u5224\u73af\u53ef\u4ee5\u4f7f\u7528\u62d3\u6251\u6392\u5e8f\u3002\n```cpp\n#include<map>\n#include<iostream>\n#include<cstring>\n#include<string>\n#include<queue>\nusing namespace std;\nconst int maxn=200010;\nint n,m,cnt,rd[maxn],head[maxn];\nmap<string,int>p;\nqueue<int>q;\nstruct E{\n    int to,next;\n}edge[maxn];\nvoid add(int u,int v){\n    edge[++cnt].to=v;edge[cnt].next=head[u];head[u]=cnt;\n}\nint main(){\n    ios::sync_with_stdio(false);\n    std::cin.tie(0);std::cout.tie(0);\n    cin>>m;\n    for(int i=1;i<=m;i++){\n        string s,t;int x,y;\n        cin>>s>>t;\n        if(p.find(s)!=p.end())x=p[s];\n        else p[s]=x=++n;\n        if(p.find(t)!=p.end())y=p[t];\n        else p[t]=y=++n;\n        add(x,y);rd[y]++;\n    }\n    for(int i=1;i<=n;i++)if(!rd[i])q.push(i);\n    int sum=0;\n    while(!q.empty()){\n        int x=q.front();q.pop();sum++;\n        for(int i=head[x];i;i=edge[i].next){\n            int y=edge[i].to;\n            if(--rd[y]==0)q.push(y);\n        }\n    }if(sum!=n)cout<<\"No\";\n    else cout<<\"Yes\";\n    return 0;\n}\n```",
        "postTime": 1673835153,
        "uid": 507534,
        "name": "YBaggio",
        "ccfLevel": 4,
        "title": "[ABC285D] Change Usernames\u9898\u89e3"
    }
]