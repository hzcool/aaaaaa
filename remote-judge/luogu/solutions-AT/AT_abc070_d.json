[
    {
        "content": "# AT2693 \u9898\u89e3\n\n### \u6982\u8ff0\n\n\u9898\u76ee\u7684\u8981\u6c42\u662f\uff1a\u7ed9\u51fa\u4e00\u68f5\u6709 $ N $ \u4e2a\u7ed3\u70b9\u7684\u6811\uff0c\u7ed9\u51fa $ Q $ \u4e2a\u8be2\u95ee\uff0c\u6c42\u7ed3\u70b9 $ x_j $\u8fc7\u7ed3\u70b9 $ K $ \u5230\u8282\u70b9 $ y_j $ \u7684\u6700\u77ed\u8ddd\u79bb\u3002\n\n**\u201c\u6700\u77ed\u8ddd\u79bb\u201d**\n\n\u522b\u88ab\u8fd9\u53e5\u8bdd\u7ed9\u9a97\u4e86\u3002\n\n\u6211\u4eec\u77e5\u9053\uff0c\u4e00\u68f5\u6811\u53ef\u4ee5\u770b\u505a\u662f\u4e00\u5f20 $ n $ \u4e2a\u70b9\uff0c$ n-1 $ \u6761\u8fb9\u7684\u65e0\u5411\u65e0\u73af\u56fe\u3002\u4e0d\u96be\u77e5\u9053\uff0c\u6811\u4e0a\u4efb\u610f\u4e24\u70b9\u95f4\u7684\u8def\u5f84\u662f\u552f\u4e00\u786e\u5b9a\u7684\uff0c**\u6839\u672c\u4e0d\u5b58\u5728\u6700\u77ed\u7684\u8bf4\u6cd5**\u3002\u8fd9\u5f88\u597d\u7406\u89e3\u3002\u56e0\u4e3a\u6700\u574f\u7684\u60c5\u51b5\u4e0b\uff0c\u4e00\u68f5\u6811\u53ef\u4ee5\u9000\u5316\u6210\u4e00\u6761\u94fe\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6c42\u51fa $ x $ \u5230 $ K $ \u7684\u8ddd\u79bb $ D_{x,K} $\uff0c\u4ee5\u53ca $ y $ \u5230 $ K $ \u7684\u8ddd\u79bb $ D_{y,K} $\uff0c\u76f8\u52a0\u5373\u53ef\u6c42\u5f97\u7b54\u6848\u3002\n\n\u53c8\u56e0\u4e3a\u4ece $ x $ \u5230 $ y $ \u7684\u7b80\u5355\u8def\u5f84\uff08\u4e0d\u56de\u5934\uff09\u4e0a\uff0c\u5fc5\u6709\u4e00\u4e2a\u70b9\u662f $ x $ \u548c $ y $ \u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\uff0c\u8bb0\u4e3a $ lca(x,y) $\u3002\u5e76\u4e14\uff0c\u5728\u4e0a\u884c\u81f3 $ lca(a,b) $ \u6216\u8005\u4ece $ lca(a,b) $ \u4e0b\u884c\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6df1\u5ea6\u5177\u6709\u5355\u8c03\u6027\u3002\u5373\u5f53\u524d\u8d70\u5230\u7684\u70b9\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\u5177\u6709\u5355\u8c03\u6027\u3002\u6ee1\u8db3~~\u5957~~\u4f7f\u7528\u6811\u4e0a\u524d\u7f00\u548c\u7684\u6761\u4ef6\u3002\n\n\u6240\u4ee5\uff0c\u4ee4\u8282\u70b9 $ i $ \u5230\u6839\u8282\u70b9 $ 1 $\uff08\u54ea\u4e2a\u662f\u6839\u90fd\u65e0\u6240\u8c13\uff09\u7684\u8ddd\u79bb\u4e3a $ dist_{i} $\u3002\u90a3\u4e48\uff0c\u6839\u636e\u524d\u7f00\u548c\uff0c\u6709\u4ee5\u4e0b\u63a8\u5bfc\uff1a\n\n$$ D_{x,K}+D_{K,y}= $$\n\n$$ (dist_x+dist_K-2\\cdot dist_{lca(x,K)})+(dist_K+dist_y-2\\cdot dist_{lca(K,y)})= $$\n\n$$ dist_x+dist_y+2\\cdot (dist_K-dist_{lca(x,K)}-dist_{lca(K,y)}) $$\n\n\u601d\u8def\u8bf4\u5b8c\u4e86\uff0c\u4e0b\u9762\u770b\u770b\u5177\u4f53\u7684\u4ee3\u7801\u5b9e\u73b0\u3002\n\n------------\n\n### \u5b9e\u73b0\n\n- \u4f7f\u7528 $ vector $ \u5b58\u8fb9 ~~\uff08\u4e0d\u7528\u524d\u5411\u661f\u662f\u56e0\u4e3a\u6ca1vector\u53ef\u7231\uff09~~\u3002\n\n```cpp\nvector < pair <int,long long> > E[MAXN];  //pair\u662f\u5bb9\u5668\uff0c\u7b2c\u4e00\u4e2a\u5143\u7d20\u662fx\u70b9\u8fde\u5230\u7684y\u70b9\uff08\u7b49\u540c\u4e8e\u524d\u5411\u661f\u7684e[i].to\uff09\uff1b\u7b2c\u4e8c\u4e2a\u5143\u7d20\u662f\u8fde\u63a5x,y\u4e24\u70b9\u7684\u8fd9\u6761\u8fb9\u7684\u6743\u503cw\uff08\u7b49\u540c\u4e8e\u524d\u5411\u661f\u7684e[i].w\uff09\n\nfor(re i=1;i<n;i++)\n{\n\tre x,y;\n\tlong long z;\n\tstd::scanf(\"%d%d%lld\",&x,&y,&z);  //\u6ce8\u610f\u5f00ll \n\tE[x].push_back(make_pair(y,z));  //\u5efa\u8fb9\uff0c\u76f8\u5f53\u4e8e\u524d\u5411\u661f\u7684add(x,y,z) \n\tE[y].push_back(make_pair(x,z));  //\u540c\u4e0a \n}\n```\n\n\n- \u5229\u7528 $ dfs $ \u6216 $ bfs $ \u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u8282\u70b9\u7684\u6df1\u5ea6\u548c\u5230\u6839\u7684\u8ddd\u79bb\u3002\n\n```cpp\ninline void dfs(int x,int fa)  //fa\u662f\u5f53\u524d\u8282\u70b9x\u7684\u7236\u4eb2\u8282\u70b9 \n{\n\tdep[x]=dep[fa]+1;  //\u62d3\u5c55\u6df1\u5ea6 \n\tF[x][0]=fa;  //x\u76842^0\u8f88\u7956\u5148\u662f\u7236\u4eb2fa \n\tfor(re i=1;i<=20;i++)\n\t\tF[x][i]=F[F[x][i-1]][i-1];  //\u8ba1\u7b97\u7956\u5148 \n\tfor(re i=0;i<E[x].size();i++)\n\t{\n\t\tre y=E[x][i].first;  //.first\u53d6\u51fa\u5bb9\u5668\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20 \n\t\tif(y!=fa)\n\t\t{\n\t\t\tdist[y]=dist[x]+E[x][i].second;  //.second\u53d6\u51fa\u5bb9\u5668\u4e2d\u7684\u7b2c\u4e8c\u4e2a\u5143\u7d20\uff0c\u5f53\u524d\u8282\u70b9\u7684\u8ddd\u79bb\u4e3a\u7236\u4eb2\u8282\u70b9\u7684\u8ddd\u79bb\u52a0\u4e0a\u8fde\u63a5\u4e24\u70b9\u7684\u8fb9\u6743 \n\t\t\tdfs(y,x);  //\u904d\u5386 \n\t\t}\n\t}\n}\n```\n\n\n- \u5229\u7528\u500d\u589e\u6216\u8005 $ Tarjan $ \u6c42\u6700\u8fd1\u516c\u5171\u7956\u5148\u3002\n\n```cpp\ninline int LCA(int x,int y)\n{\n\tif(dep[x]<dep[y])  //\u5982\u679cx\u6bd4y\u6d45 \n\t\tstd::swap(x,y);  //\u6362\u4f4d\uff08\u56e0\u4e3a\u662f\u8ba9x\u5411\u4e0a\u8df3\uff09 \n\tfor(re i=20;i>=0;i--)\n\t\tif(dep[F[x][i]]>=dep[y])  //\u5982\u679c\u7956\u5148\u7684\u6df1\u5ea6\u4f9d\u7136\u6bd4y\u6df1 \n\t\t\tx=F[x][i];\n\tif(x==y)  //\u5982\u679cx\u4e0ey\u76f8\u9047 \n\t\treturn x;\n\tfor(re i=20;i>=0;i--)\n\t\tif(F[x][i]!=F[y][i])  //\u82e5\u4e24\u70b9\u7684\u7956\u5148\u4e0d\u540c \n\t\t{\n\t\t\tx=F[x][i];\n\t\t\ty=F[y][i];\n\t\t}\n\treturn F[x][0];  //\u8fd4\u56dex\u7684\u7236\u4eb2\u8282\u70b9 \n}\n```\n\n\n- $ O(1) $ \u56de\u7b54\u8be2\u95ee\u3002\n\n```cpp\nstd::printf(\"%lld\\n\",dist[x]+dist[K]-2*dist[LCA(x,K)]+dist[y]+dist[K]-2*dist[LCA(y,K)]);  //\u516c\u5f0f\u5982\u4e0a\uff0c\u8bb0\u5f97\u7528printf\u8f93\u51fa\u65f6\u7528\"%lld\"\n```\n\n------------\n\n### \u5b8c\u6574\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <vector>\n#define re register int\nusing namespace std;\n\nconst int MAXN=1e5+1;\nint n,Q,K,dep[MAXN],F[MAXN][21];\nlong long dist[MAXN];\nvector < pair <int,long long> > E[MAXN]; \n\ninline void dfs(int x,int fa) \n{\n\tdep[x]=dep[fa]+1; \n\tF[x][0]=fa; \n\tfor(re i=1;i<=20;i++)\n\t\tF[x][i]=F[F[x][i-1]][i-1]; \n\tfor(re i=0;i<E[x].size();i++)\n\t{\n\t\tre y=E[x][i].first; \n\t\tif(y!=fa)\n\t\t{\n\t\t\tdist[y]=dist[x]+E[x][i].second; \n\t\t\tdfs(y,x); \n\t\t}\n\t}\n}\n\ninline int LCA(int x,int y)\n{\n\tif(dep[x]<dep[y]) \n\t\tstd::swap(x,y); \n\tfor(re i=20;i>=0;i--)\n\t\tif(dep[F[x][i]]>=dep[y]) \n\t\t\tx=F[x][i];\n\tif(x==y) \n\t\treturn x;\n\tfor(re i=20;i>=0;i--)\n\t\tif(F[x][i]!=F[y][i]) \n\t\t{\n\t\t\tx=F[x][i];\n\t\t\ty=F[y][i];\n\t\t}\n\treturn F[x][0]; \n}\n\nint main()\n{\n\tstd::scanf(\"%d\",&n);\n\t\n\tfor(re i=1;i<n;i++)\n\t{\n\t\tre x,y;\n\t\tlong long z;\n\t\tstd::scanf(\"%d%d%lld\",&x,&y,&z); \n\t\tE[x].push_back(make_pair(y,z)); \n\t\tE[y].push_back(make_pair(x,z)); \n\t}\n\t\n\tdfs(1,0);\n\t\n\tstd::scanf(\"%d%d\",&Q,&K);\n\twhile(Q--)\n\t{\n\t\tre x,y;\n\t\tstd::scanf(\"%d%d\",&x,&y);\n\t\tstd::printf(\"%lld\\n\",dist[x]+dist[K]-2*dist[LCA(x,K)]+dist[y]+dist[K]-2*dist[LCA(y,K)]);\n\t}\n\t\n\treturn 0;\n}\n```\n\n------------\n\n### \u4e00\u4e2a\u6709\u8da3\u7684\u73b0\u8c61\n\n\u5728\u524d\u9762\u6211\u4eec\u5df2\u7ecf\u63a8\u5bfc\u51fa\u4e86\u8ba1\u7b97\u7b54\u6848\u7684\u516c\u5f0f\u5982\u4e0b\uff1a\n\n$$ dist_x+dist_y+2\\cdot (dist_K-dist_{lca(x,K)}-dist_{lca(K,y)}) $$\n\n\u5982\u679c $ K $ \u521a\u521a\u597d\u662f\u6839\u8282\u70b9\u5462\uff1f\n\n\u6b64\u65f6 $ lca(x,K)=lca(K,y)=K $\u3002\n\n\u4f46 $ K $ \u662f\u6839\u8282\u70b9\u554a\uff01\u90a3\u4e48 $ dist_K $ \u5c31\u662f $ 0 $ \u4e86\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u8ba1\u7b97\u5f0f\u4e0d\u5c31\u53d8\u6210\u4e86\uff1a\n\n$$ dist_x+dist_y  $$\n\n\u5417\uff1f\n\n\uff1f\uff1f\uff1f\n\n\u8fd9\u4e0d\u662f\u5c31\u8fde $ lca $ \u90fd\u4e0d\u7528\u6c42\u4e86\u5417\uff1f\u5982\u679c\u6240\u6709\u60c5\u51b5\u4e0b\u90fd\u4e0d\u7528\u8ba1\u7b97 $ lca $\uff0c\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u4f1a\u4ece\u539f\u6765\u7684 $ O(n\\cdot log\\ n) $ \u9884\u5904\u7406\uff0c$ O(1) $ \u8be2\u95ee\u53d8\u6210 $ O(log\\  n) $ \u7684\u9884\u5904\u7406\u4e86\u5417\uff1f\u8fd9\u6837\u6700\u574f\u60c5\u51b5\uff08\u94fe\uff09\u4e0b\u7684\u590d\u6742\u5ea6\u4e5f\u624d $ O(n) $\uff0c\u662f\u5b8c\u5168\u4e0d\u60e7\u6015~~\u53d8\u6001~~\u53ef\u7231\u7684\u6570\u636e\u7684\u3002\n\n\u90a3\u600e\u4e48\u6837\u8ba9\u8fd9\u79cd\u60c5\u51b5\u6b21\u6b21\u90fd\u51fa\u73b0\u5462\uff1f\n\n\u5bf9\u4e8e\u8fd9\u68f5\u6811\u6765\u8bb2\uff0c**\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\u505a\u6839\u90fd\u65e0\u6240\u8c13**\uff0c\u90a3\u5e72\u8106\u5c31\u628a $ K $ \u5f53\u505a\u6839\u5427\uff01\u8fd9\u6837\u4e00\u6765\uff0c\u8fde $ lca $ \u90fd\u4e0d\u7528\u7b97\u4e86\uff0c\u8d5b\u72d7\u4f60\u55e8\u5f97\u9e2d\u5b50\u54d2\uff01\n\n------------\n\n~~\u867d\u7136AT\u7684\u9898\u4ea4\u4e0d\u4e86\u4e86\uff0c\u4f46\u8fd8\u662f~~\u5199\u4e00\u7bc7\u9898\u89e3\uff0c\u5c31\u5f53\u81ea\u5df1\u7684\u5b66\u4e60\u7b14\u8bb0\u5427\n\n------------\n\n$ \\text{update 2020.9.17}$ \u611f\u8c22 [ @yecheng](https://www.luogu.com.cn/user/192615) \u63d0\u51fa\u7684\u5173\u4e8e LaTeX        \u8868\u73b0\u7684\u6307\u6b63\u3002",
        "postTime": 1594902912,
        "uid": 177531,
        "name": "ZolaWatle",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 AT2693 \u3010[ABC070D] Transit Tree Path\u3011"
    },
    {
        "content": "$\\quad$ \u4ece $x$ \u8282\u70b9\u7ecf\u8fc7 $k$ \u8282\u70b9\u5230 $y$ \u8282\u70b9\u7684\u65b9\u6cd5\u5206\u4e3a\u4e24\u6b65\uff1a\n\n$\\quad\\quad\\quad$ 1\u3001\u4ece $x$ \u8282\u70b9\u8d70\u5230 $k$ \u8282\u70b9\u3002\n\n$\\quad\\quad\\quad$ 2\u3001\u4ece $k$ \u8282\u70b9\u8d70\u5230 $y$ \u8282\u70b9\u3002\n\n$\\quad$\u6240\u4ee5\uff0c\u53ea\u9700\u8981\u4ee5 $k$ \u4e3a\u6e90\u70b9\u8dd1\u4e00\u904d\u6700\u77ed\u8def\uff0c\u6c42\u51fa $dis_x$ \u548c $dis_y$ \u7684\u548c\u3002\u56e0\u4e3a\u8fd9\u662f\u6811\uff0c\u5728\u8fb9\u6743\u975e\u8d1f\u7684\u60c5\u51b5\u4e0b\u4e00\u4e2a\u8282\u70b9\u53ea\u4f1a\u88ab\u4e00\u4e2a\u70b9\u66f4\u65b0\uff0c\u6240\u4ee5\u4e5f\u53ef\u4ee5\u7528\u666e\u901a\u7684 bfs \u548c dfs \u3002\n\n$\\quad$ \u4ee3\u7801\uff1a\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\nint n, m, k;\nlong long h[200010], e[200010], w[200010], ne[200010], idx;\nlong long dis[100010];\nbool in_qu[100010];\nvoid add(int x, int y, long long z) {//\u90bb\u63a5\u8868\n\tne[idx] = h[x];\n\te[idx] = y;\n\tw[idx] = z;\n\th[x] = idx++;\n}\nvoid bfs() {//SPFA\u6c42\u6700\u77ed\u8def\n\tfor (int i = 1; i <= n; ++i) dis[i] = 1e18;\n\tdis[k] = 0;\n\tqueue<int> Q;\n\tQ.push(k);\n\twhile (!Q.empty()) {\n\t\tint cur = Q.front();\n\t\tQ.pop();\n\t\tin_qu[cur] = 0;\n\t\tfor (int i = h[cur]; i != -1; i = ne[i]) {\n\t\t\tif (dis[e[i]] > dis[cur] + w[i]) {\n\t\t\t\tdis[e[i]] = dis[cur] + w[i];\n\t\t\t\tif (in_qu[e[i]] == 0) {\n\t\t\t\t\tin_qu[e[i]] = 1;\n\t\t\t\t\tQ.push(e[i]);\n\t\t\t\t}\n\t\t\t} \n\t\t}\n\t} \n}\nint main() {\n\tcin >> n;\n\tmemset(h, -1, sizeof h);\n\tfor (int i = 1; i < n; ++i) {\n\t\tint x, y, z;\n\t\tcin >> x >> y >> z;\n\t\tadd(x, y, z);\n\t\tadd(y, x, z);\n\t}\n\tcin >> m >> k;\n\tbfs();\n//\tfor (int i = 1; i <= n; ++i) cout << i << ' ' << dis[i] << endl;\n\tfor (int i = 1; i <= m; ++i) {\n\t\tint x, y;\n\t\tcin >> x >> y;\n\t\tcout << dis[x] + dis[y] << endl;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1629705312,
        "uid": 253527,
        "name": "GuideZombies",
        "ccfLevel": 4,
        "title": "AT2693\u9898\u89e3"
    },
    {
        "content": "### \u601d\u8def\n\n\u4fdd\u8bc1\u4e24\u70b9\u4e4b\u95f4\u8fc7\u70b9K\u5462\uff0c\u5176\u5b9e\u4e0d\u96be\u60f3\u5230\uff0c\u53ea\u8981\u5c06K\u70b9\u4f5c\u4e3a\u6839\u8282\u70b9\u5c31\u597d\u4e86,\u627e\u51fak\u5230\u4e24\u70b9\u7684\u8ddd\u79bb\u76f8\u52a0\u5373\u4e3a\u6700\u77ed\u8ddd\u79bb\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=1e5+50,maxm=2e5+100;\nlong long d[maxn];\nint head[maxn];\nint size=0;\nstruct edge\n{\n\tint to,next;\n\tlong long val;\n}e[maxn];\nvoid addedge(int u,int v,long long w)\n{\n\te[++size].to=v;\n\te[size].val=w;\n\te[size].next=head[u];\n\thead[u]=size;\n}\ninline int read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch>'9'||ch<'0'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch<='9'&&ch>='0'){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nvoid dfs(int u,int fa)\n{\n\tfor(int i=head[u];i;i=e[i].next)\n\t{\n\t\tint to=e[i].to;\n\t\tif(to==fa)continue;\n\t\td[to]=d[u]+e[i].val;\n\t\tdfs(to,u);\n\t}\n}\nint main()\n{\n\tint n=read();\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint u=read(),v=read();\n\t\tlong long w=read();\n\t\taddedge(u,v,w);\n\t\taddedge(v,u,w);\t\n\t}\n\tint q=read(),k=read();\n\tdfs(k,0);\n\tfor(int i=1;i<=q;i++)\n\t{\n\t\tint x=read(),y=read();\n\t\tprintf(\"%lld\\n\",d[x]+d[y]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1548034208,
        "uid": 58707,
        "name": "Edward_Elric",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT2693 \u3010Transit Tree Path\u3011"
    },
    {
        "content": "[$\\color{blue}{\\text {pwp }{\\to\\textbf{My blog}\\gets}}\\text{qwq}$](https://www.luogu.com.cn/blog/390770/blogcenter)\n\n## \u9898\u610f\n\n\u7ed9\u51fa\u4e00\u68f5\u6709 $N$ \u4e2a\u7ed3\u70b9\u7684\u6811\uff0c\u7ed9\u51fa $Q$ \u4e2a\u8be2\u95ee\uff0c\u6c42\u8282\u70b9 $x_i$ \u8fc7\u8282\u70b9 $K$ \u5230\u8282\u70b9 $y_i$ \u7684\u6700\u77ed\u8ddd\u79bb\u3002\n\n\u8f93\u5165\u683c\u5f0f\uff1a\n\n- \u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570 $N$\uff1b\n\n- \u63a5\u4e0b\u6765 $N-1$ \u884c\uff0c\u6bcf\u884c\u4e09\u4e2a\u6b63\u6574\u6570 $a,b,c$\uff0c\u8868\u793a\u4e00\u6761\u4ece\u8282\u70b9 $a$ \u5230\u8282\u70b9 $b$ \u6743\u503c\u4e3a $c$ \u7684\u65e0\u5411\u8fb9\uff1b\n\n- \u63a5\u4e0b\u6765\u4e00\u884c\u4e24\u4e2a\u6b63\u6574\u6570 $Q,K$\uff1b\n\n- \u63a5\u4e0b\u6765 $Q$ \u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6b63\u6574\u6570 $x,y$\uff0c\u8868\u793a\u6c42\u7ed3\u70b9 $x$ \u8fc7\u7ed3\u70b9 $K$ \u5230\u8282\u70b9 $y$ \u7684\u6700\u77ed\u8ddd\u79bb\u3002\n\n## \u9898\u89e3\n\n**\u6811**\u7684\u6027\u8d28\u51b3\u5b9a\u4e86**\u6811\u4e0a\u7684\u4efb\u610f\u4e00\u5bf9\u8282\u70b9\u53ea\u6709\u4e00\u6761\u8def\u5f84**\uff0c\u6240\u4ee5\u5c31\u4e0d\u7528\u6c42\u4ec0\u4e48\u6700\u77ed\u8def\u5f84\u3002\n\n\u56e0\u4e3a\u9898\u76ee\u8981\u6c42\u6240\u6c42\u8def\u5f84\u7ecf\u8fc7\u8282\u70b9 $K$\uff0c\u6240\u4ee5\u6211\u4eec\u9884\u5904\u7406\u6c42\u51fa $K$ \u5230\u6bcf\u4e2a\u8282\u70b9\u7684\u8def\u5f84\uff0c\u8be2\u95ee\u65f6\u76f4\u63a5\u5c06\u4e24\u70b9\u5230 $K$ \u7684\u8def\u5f84\u957f\u5ea6\u76f8\u52a0\u5373\u53ef\u3002\n\n\u8bb0\u5f97\u5f00 `long long`\u3002\n\n## \u4ee3\u7801\n\n```cpp\n//AT2693\n//\u7801\u98ce\uff1a\u9898\u89e3\u4e13\u7528\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 1e5 + 10;\nvector< pair< int, long long > > Edge[ N ];\nint n, q, k, Vis[ N ];\nlong long Dis[ N ];\n\nvoid dfs( int st, long long d )\n{\n\tDis[ st ] = d;\n\tVis[ st ] = true;\n\tfor( int i = 0; i < Edge[ st ].size( ); ++ i){\n\t\tint to = Edge[ st ][ i ].first;\n\t\tif( Vis[ to ] ) continue;\n\t\tdfs( to, d + Edge[ st ][ i ].second );\n\t}\n\treturn ;\n}\n\nint main( )\n{\n\tscanf( \"%d\", &n );\n\tfor( int i = 1; i < n; ++ i ){\n\t\tint u, v;\n\t\tlong long w;\n\t\tscanf( \"%d%d%lld\", &u, &v, &w );\n\t\tEdge[ u ].push_back( make_pair( v, w ) );\n\t\tEdge[ v ].push_back( make_pair( u, w ) );\n\t}\n\tscanf( \"%d%d\", &q, &k );\n\tdfs( k, 0 );\n\tfor( int i = 1; i <= q; ++ i ){\n\t\tint u, v;\n\t\tscanf( \"%d%d\", &u, &v);\n\t\tprintf( \"%lld\\n\", Dis[u] + Dis[v] );\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1627811557,
        "uid": 390770,
        "name": "AiRC0S",
        "ccfLevel": 0,
        "title": "AT2693 [ABC070D] Transit Tree Path"
    }
]