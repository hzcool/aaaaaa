[
    {
        "content": "# \u601d\u8def\n\u662f\u4e00\u9053\u7ecf\u5178\u7684\u6c34\u9898\uff0c\u6211\u4eec\u7528\u505a\u516b\u6570\u7801\u6e38\u620f\u7684\u57fa\u672c\u5957\u8def\uff0c\u7528\u5b57\u7b26\u4e32\u6216\u6570\u5b57\u8868\u793a\u516b\u6570\u7801\u7684\u72b6\u6001\uff0c\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u72b6\u6001\u627e\u5230\u7a7a\u683c\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u66f4\u65b0\u76f8\u90bb\u7684\u70b9\u5e76\u8bb0\u5f55\u72b6\u6001\u6700\u5c0f\u6b65\u6570\uff0c\u5982\u679c\u8fd9\u4e2a\u72b6\u6001\u662f\u7b2c\u4e00\u6b21\u8d70\u5230\u5c31\u8bb0\u5f55\u4e00\u4e0b\u5e76\u52a0\u5165 `bfs` \u7684\u961f\u5217\u3002\n\n\u7a0d\u5fae\u7b97\u4e00\u4e0b\u590d\u6742\u5ea6\u53ef\u4ee5\u77e5\u9053\u6700\u591a\u6709 $!N$ \u79cd\u72b6\u6001\uff0c\u6bcf\u4e2a\u683c\u5b50\u6700\u591a\u6709 $N-1$ \u4e2a\u8fde\u8fb9\uff0c\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f $O(!N \\times N)$\uff0c\u6700\u540e\u7b97\u4e00\u4e0b\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u8fc7\u3002\n\n# \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=10000;\nvector<int>e[maxn];\nmap<string,int>mp;\nsigned main(){\n\tint m;\n\tcin>>m;\n\tfor(int i=1;i<=m;i++){\n\t\tint u,v;\n\t\tcin>>u>>v;\n\t\te[u].push_back(v);\n\t\te[v].push_back(u);\n\t}\n\tstring S=\"#000000000\";\n\tfor(int i=1;i<=8;i++){\n\t\tint d;\n\t\tcin>>d;\n\t\tS[d]=i+'0';\n\t}\n\tqueue<string>Q;\n\tQ.push(S);\n\twhile(Q.size()){\n\t\tstring tp=Q.front();\n\t\tQ.pop();\n\t\tif(tp==\"#123456780\"){\n\t\t\tcout<<mp[tp];\n\t\t\treturn 0;\n\t\t}\n\t\tint d=mp[tp];\n\t\tint id=tp.find('0');\n\t\tfor(int v:e[id]){\n\t\t\tswap(tp[v],tp[id]);\n\t\t\tif(mp[tp]==0){\n\t\t\t\tmp[tp]=d+1;\n\t\t\t\tQ.push(tp);\n\t\t\t}\n\t\t\tswap(tp[v],tp[id]);\n\t\t}\n\t}\n\tcout<<-1;\n\treturn 0;\n}\n```",
        "postTime": 1681824937,
        "uid": 715244,
        "name": "zhangzhengyan0831",
        "ccfLevel": 0,
        "title": "AT_abc224_d [ABC224D] 8 Puzzle on Graph \u9898\u89e3"
    },
    {
        "content": "~~\u4f7f\u7528 `string` \u548c `unordered_map` \u8fd8\u5984\u56fe\u62ff\u6700\u6709\u89e3\uff1f~~\n\n- \u9898\u610f\n\n\u5c31\u662f\u5728\u56fe\u4e0a\u7684\u516b\u6570\u7801\u3002\n\n- \u5206\u6790\n\n\u516b\u6570\u7801\u7ecf\u5178\u5957\u8def\uff0c\u8003\u8651\u53ef\u4ee5\u5c06\u4e00\u5f20\u56fe\u538b\u7f29\u6210\u4e00\u4e2a $9$ \u4f4d\u6570\uff0c\u76f4\u63a5\u5728\u56fe\u4e0a `bfs` \u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u8bb2\u4e00\u4e0b\u4f18\u5316\uff0c\u9996\u5148\u76f4\u63a5\u8dd1\u592a\u6162\u4e86\uff0c\u8003\u8651\u53ef\u4ee5\u4ece\u8d77\u70b9\u548c\u7ec8\u70b9\u540c\u65f6\u8dd1\uff0c\u8ba9\u5b83\u4eec\u5728\u4e2d\u95f4\u4f1a\u5408\uff0c\u51cf\u5c11\u4e00\u534a\u5e38\u6570\u3002\u540c\u65f6\u8bb2\u4e00\u4e0b\u79d1\u6280 `__gnu_pbds::gp_hash_table`\uff0c\u5b83\u662f `pbds` \u81ea\u5e26\u7684\u54c8\u5e0c\u8868\uff0c\u4f7f\u7528\u65b9\u6cd5\u548c `map` \u4e00\u6478\u4e00\u6837\uff0c\u800c\u4e14\u5e38\u6570\u4f18\u52bf\u663e\u8457\uff08~~\u867d\u7136\u4e0d\u5982\u624b\u5199~~\uff09\u3002\n\n\u603b\u590d\u6742\u5ea6 $\\mathcal O(n!\\times n)$\u3002\n\n- code\n\n```cpp\n#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/hash_policy.hpp>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2\")\n#define LL long long\n#define writesp(x) write(x), putchar(' ')\n#define writeln(x) write(x), putchar('\\n')\n#define FileIO(ch) freopen(ch\".in\", \"r\", stdin), freopen(ch\".out\", \"w\", stdout)\nusing namespace std;\n\nnamespace IO {\n    char ibuf[(1 << 20) + 1], *iS, *iT;\n#if ONLINE_JUDGE\n#define gh() (iS == iT ? iT = (iS = ibuf) + fread(ibuf, 1, (1 << 20) + 1, stdin), (iS == iT ? EOF : *iS++) : *iS++)\n#else\n#define gh() getchar()\n#endif\n    inline long long read() {\n        char ch = gh();\n        long long x = 0;\n        bool t = 0;\n        while (ch < '0' || ch > '9') t |= ch == '-', ch = gh();\n        while (ch >= '0' && ch <= '9') x = (x << 1) + (x << 3) + (ch ^ 48), ch = gh();\n        return t ? ~(x - 1) : x;\n    }\n    template <typename _Tp>\n    inline void write(_Tp x) {\n    \tstatic char stk[64], *top = stk;\n        if (x < 0) {\n            x = ~(x - 1);\n            putchar('-');\n        }\n        do *top++ = x % 10, x /= 10;\n        while (x);\n        while (top != stk) putchar((*--top) | 48);  \n    }\n}\n\nusing IO::read;\nusing IO::write;\n\nint n, p[15];\nvector<int> G[15];\n__gnu_pbds::gp_hash_table<int, int> vis, d;\n\ninline int enc () {\n\tint x = 0;\n\tfor (int i = 1, j = 1; i < 10; i++, j *= 10) x += p[i] * j;\n\treturn x;\n}\ninline void dec (int x) {\n\tfor (int i = 1; i < 10; i++, x /= 10) p[i] = x % 10;\n}\n\nint main() {\n\tn = read();\n\tfor (int i = 1; i <= n; i++) {\n\t\tint u = read(), v = read();\n\t\tG[u].emplace_back(v);\n\t\tG[v].emplace_back(u);\n\t}\n\tfor (int i = 1; i < 9; i++) p[read()] = i;\n\tqueue<int> q;\n\tq.push(enc()), d[enc()] = 0, vis[enc()] = 1;\n\tq.push(87654321), d[87654321] = 1, vis[87654321] = 2;\n\tif (enc() == 87654321) return puts(\"0\"), 0;\n\twhile (!q.empty()) {\n\t\tint u = q.front(); q.pop();\n\t\tdec(u);\n\t\tint pos = 0;\n\t\tfor (int i = 1; i < 10; i++) if (!p[i]) { pos = i; break; }\n\t\tfor (int v : G[pos]) {\n\t\t\tswap(p[v], p[pos]);\n\t\t\tint x = enc();\n\t\t\tswap(p[v], p[pos]);\n\t\t\tif (vis[x] + vis[u] == 3) return write(d[x] + d[u]), 0;\n\t\t\telse if (vis[x] == vis[u]) continue;\n\t\t\tq.push(x), d[x] = d[u] + 1, vis[x] = vis[u];\n\t\t}\n\t}\n\tputs(\"-1\");\n}\n// I love WHQ!\n```",
        "postTime": 1679145016,
        "uid": 317495,
        "name": "JWRuixi",
        "ccfLevel": 7,
        "title": "[ABC224D] 8 Puzzle on Graph"
    },
    {
        "content": "\u8fd9\u9898\u5c31\u662f\u4e00\u4e2a\u516b\u6570\u7801\u7684\u677f\u5b50\uff0c\u4e0d\u8fc7\u662f\u6539\u5230\u4e86\u56fe\u4e0a\u800c\u5df2\u3002\n\n\u8003\u8651\u5bf9\u4e8e\u6bcf\u6b21\u64cd\u4f5c\uff0c\u5c06\u7a7a\u683c\u4e0e\u5468\u56f4\u76f8\u8fde\u63a5\u7684\u68cb\u5b50\u4ea4\u6362\uff0c\u7136\u540e\u5bf9\u80fd\u8f6c\u79fb\u5230\u7684\u6bcf\u79cd\u72b6\u6001\u7f16\u7801\uff0c\u8fd9\u91cc\u6bd4\u8f83\u61d2\u6240\u4ee5\u76f4\u63a5\u7528\u5b57\u7b26\u4e32\u5b9e\u73b0\uff0c\u56e0\u4e3a\u8fd9\u9898\u4e0d\u662f\u5f88\u5361\u5e38\u6570\u6240\u4ee5\u53ef\u4ee5\u8fc7\u3002\n\n\u6240\u4ee5\u4ece\u521d\u59cb\u72b6\u6001\u5f00\u59cb bfs \u662f\u6b63\u786e\u7684\uff0c\u5c06\u65b0\u8f6c\u79fb\u5230\u7684\u72b6\u6001\u7684\u7f16\u7801\u540e\u63d2\u5165\u961f\u5217\uff0c\u5982\u679c\u4e00\u4e2a\u72b6\u6001\u7684\u7f16\u7801\u5df2\u7ecf\u88ab\u8bbf\u95ee\u5219\u4e0d\u6269\u5c55\u65b0\u7684\u72b6\u6001\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u6bcf\u4e2a\u72b6\u6001\u6700\u591a\u5165\u961f\u4e00\u6b21\uff0c\u51fa\u961f\u4e00\u6b21\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u5373\u4e3a\u603b\u72b6\u6001\u6570\u3002\u5f53\u6240\u6709\u72b6\u6001\u90fd\u6269\u5c55\u540e\u4ecd\u672a\u5230\u8fbe\u76ee\u6807\u72b6\u6001\u5219\u8bf4\u660e\u65e0\u89e3\u3002\n\n\u800c\u5b9e\u9645\u4e0a\u672c\u8d28\u4e0d\u540c\u7684\u72b6\u6001\u5373\u4e3a $ 1-9 $ \u7684\u6392\u5217\u4e2a\u6570\u4e3a $ 9!=362880 $\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\n\n\u56e0\u4e3a\u5b57\u7b26\u4e32\u6bd4\u8f83\u662f $ \\mathcal{O}(n) $ \u7684\uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $ \\mathcal{O}(n! \\times n) $\uff0c\u5176\u4e2d $ n=9 $ \u4e3a\u68cb\u76d8\u5927\u5c0f\u3002\u672c\u9898\u76f4\u63a5\u7528 map \u6bd4\u8f83\u4e5f\u53ef\u4ee5\u901a\u8fc7\uff0c\u4f46\u8fd9\u91cc\u7528 unordered_map \u5b9e\u73b0\uff0c\u80fd\u62ff\u5230\u6700\u4f18\u89e3\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#import <bits/stdc++.h>\nusing namespace std;\n#define int long long\nint const N=3e2+10;\nvector<int>a[N];\nsigned main()\n{ \n    int n;\n    cin>>n;\n\tfor(int i=1;i<=n;i++)\n    {\n\t\tint u,v;\n        cin>>u>>v;\n\t\ta[u].push_back(v);\n\t\ta[v].push_back(u);\n\t}\n\tstring s=\"999999999\";\n\tint p;\n    for(int i=1;i<=8;i++)\n    {\n    cin>>p;\n    s[p-1]=i+'0';\n    }\n\tqueue<string>q;\n    q.push(s);\n    unordered_map<string,int>mp;\n\tmp[s]=1;\n\twhile(!q.empty())\n    {\n\t\tstring s=q.front();\n        q.pop();\n\t\tint u=0;\n\t\tfor(int i=0;i<9;i++) \n        if(s[i]=='9') \n        u=i+1;\n\t\tfor (auto v:a[u])\n        {\n\t\t\tstring t=s;\n            swap(t[u-1],t[v-1]);\n\t\t\tif(mp[t]) \n            continue;\n\t\t\tmp[t]=mp[s]+1;\n            q.push(t);\n\t\t}\n\t}\n\tif(!mp[\"123456789\"]) \n    cout<<\"-1\";\n\telse \n    cout<<mp[\"123456789\"]-1;\n}\n```\n",
        "postTime": 1668899808,
        "uid": 714821,
        "name": "loser_seele",
        "ccfLevel": 4,
        "title": "ABC224D\u9898\u89e3"
    }
]