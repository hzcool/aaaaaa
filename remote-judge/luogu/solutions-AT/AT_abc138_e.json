[
    {
        "content": "### \u601d\u8def\n- \u9996\u5148\uff0c\u5982\u679c $T$ \u4e2d\u6709 $S$ \u6ca1\u6709\u7684\u5b57\u6bcd\uff0c\u90a3\u4e48\u4e00\u5b9a\u4e0d\u5408\u6cd5\u8f93\u51fa $-1$\u3002\n- \u56e0\u4e3a\u6700\u591a\u8df3 $lent$ \u6b21 $S$ \u4e32\uff0c\u6240\u4ee5\u628a $T$ \u7684\u5b57\u6bcd\u6328\u4e2a\u5339\u914d\n- $p[i][j]$ \u8868\u793a\uff1a\u5339\u914d\u5230 $S$ \u7684\u7b2c $i$ \u4e2a\u5b57\u6bcd\uff0c$i$ \u540e\u7b2c\u4e00\u4e2a\u5b57\u6bcd $j$\u7684\u51fa\u73b0\u4f4d\u7f6e\uff0c\u82e5\u6ca1\u6709\u5219\u4e3a $-1$\uff1b$ANS$ \u8868\u793a\u5468\u671f\u6570\u3002\n\n------------------\n### \u4ee3\u7801\n```\n#include <iostream>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\nconst int maxn=100003;\nchar a[maxn],b[maxn];\nint p[maxn][27],ans,lst;\nint main()\n{\n\tscanf(\"%s%s\",&a,&b);\n\tint lena=strlen(a),lenb=strlen(b);\n\tfor(int i=0;i<26;++i) p[lena-1][i]=-1; p[lena-1][a[lena-1]-'a']=lena-1;\n\tfor(int i=lena-2;i>=0;--i){\n\t\tfor(int j=0;j<26;++j) p[i][j]=p[i+1][j];\n\t\tp[i][a[i]-'a']=i;\n\t}\n\tfor(int i=0;i<lenb;++i) if(p[0][b[i]-'a']==-1) return puts(\"-1\"),0;\n\tfor(int i=0;i<lenb;++i)\n\t{\n\t\tif(p[lst][b[i]-'a']==-1) ++ans,lst=0;\n\t\tlst=p[lst][b[i]-'a']; ++lst;\n\t\tif(lst==lena) ++ans,lst=0;\n\t}\n\tcout<<1ll*ans*lena+lst<<'\\n';\n\treturn 0;\n}\n```",
        "postTime": 1610631377,
        "uid": 299811,
        "name": "wuwendongxi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT4869 \u3010[ABC138E] Strings of Impurity\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\u7ed9\u51fa\u4e24\u4e2a\u5b57\u7b26\u4e32 $S$ \u548c $T$\uff0c\u5b9a\u4e49 $S'$ \u4e3a $S$ \u590d\u5236 $10^{100}$ \u6b21\u540e\u7684\u5b57\u7b26\u4e32,\u8bbe $x$ \u4f7f $T$ \u6210\u4e3a $S'$ \u7684\u5b50\u4e32\uff08\u5f53\u4e14\u4ec5\u5f53 $S'$ \u7684\u524d $x$ \u4f4d\u5220\u9664\u4efb\u610f\u4e2a\u5b57\u7b26\u540e\u7b49\u540c\u4e8e $T$\uff09\uff0c\u6c42 $x$ \u7684\u6700\u5c0f\u503c\u3002\n\n## \u601d\u8def\n\u6211\u4eec\u8003\u8651\u5728 $S'$ \u4e0a\u641c\u7d22 $T$ \u7684\u6bcf\u4e00\u4e2a\u5b57\u7b26\uff1a\n\n- \u5b9a\u4e49 $a[i][j]$ \u4e3a\u7b2c $j$ \u4e2a\u5b57\u7b26 $i$ \u5728 $S$ \u4e2d\u7684\u4f4d\u7f6e \n\n\n- \u5bf9\u4e8e $T$ \u7684\u6bcf\u4e00\u4e2a\u5b57\u7b26\uff0c\u9009\u51fa\u5230\u8fbe $a[i][j]$ \u7684\u6700\u5c0f\u503c\n\n\u4e8e\u662f\u6211\u4eec\u641c\u7d22\u65f6\u53c8\u6709\u4e09\u79cd\u60c5\u51b5\uff1a\n\n- $T[i]$ \u5728 $S$ \u4e2d\u4e0d\u5b58\u5728\uff0c\u76f4\u63a5\u8f93\u51fa $-1$ \u5e76\u7ed3\u675f\u641c\u7d22\n\n- $T[i]$ \u5728 $S$ \u7684\u4f4d\u7f6e\u4e0d\u5728\u5f53\u524d\u641c\u7d22\u4f4d\u7f6e\u7684\u540e\u9762\uff0c\u8003\u8651\u590d\u5236\u4e00\u904d $S$\uff0c\u518d\u8ba1\u7b97\n\n- $T[i]$ \u5728 $S$ \u7684\u4f4d\u7f6e\u5728\u5f53\u524d\u641c\u7d22\u4f4d\u7f6e\u7684\u540e\u9762\uff0c\u8003\u8651\u7528\u4e8c\u5206\u641c\u7d22\u6700\u8fd1\u70b9\u5e76\u8ba1\u7b97\n\n\u6211\u4eec\u5c31\u53ef\u4ee5\u6839\u636e\u8fd9\u4e09\u79cd\u60c5\u51b5\u8fdb\u884c $T$ \u7684\u904d\u5386\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u7ea6\u4e3a $O(\\left|T\\right| log \\left|S\\right|)$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5408\u7406\uff0c\u65b9\u6cd5\u53ef\u884c\u3002\n\n\n## Code\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nstring s,t;\nint a[30][100005],ans;\nsigned main(){\n\tcin>>s>>t;\n\tfor(int i=0;i<s.size();i++){\n\t\ta[s[i]-'a'][0]++;\n\t\ta[s[i]-'a'][a[s[i]-'a'][0]]=i+1;\n\t}\n\tif(a[t[0]-'a'][0]==0){\n\t\tcout<<\"-1\";\n\t\treturn 0;\n\t}\n\tint now=a[t[0]-'a'][1];\n\tans=a[t[0]-'a'][1];\n\tfor(int i=1;i<t.size();i++){\n\t\tif(!a[t[i]-'a'][0]){\n\t\t\tcout<<\"-1\";\n\t\t\treturn 0;\n\t\t}\n\t\tif(a[t[i]-'a'][a[t[i]-'a'][0]]>now){\n\t\t\tint l=1,r=a[t[i]-'a'][0];\n\t\t\twhile(l<=r){\n\t\t\t\tint mid=(l+r)/2;\n\t\t\t\tif(a[t[i]-'a'][mid]>now)  r=mid-1;\n\t\t\t\telse l=mid+1;\n\t\t\t}\n\t\t\tans=ans+a[t[i]-'a'][l]-now;\n\t\t\tnow=a[t[i]-'a'][l];\n\t\t}\n\t\telse{\n\t\t\tans=ans+(s.size()-now+a[t[i]-'a'][1]);\n\t\t\tnow=a[t[i]-'a'][1];\n\t\t}\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1675400638,
        "uid": 753355,
        "name": "I_am_homo",
        "ccfLevel": 0,
        "title": "[ABC138E] Strings of Impurity\u9898\u89e3"
    },
    {
        "content": "\u6821\u5185\u8d5b\u540e\u4e24\u5206\u949fAC\u4eba\u53c8\u6765\u4e86\u3002\n\n\u8003\u8651\u4e00\u4e0b\u6211\u4eec\u904d\u5386 $t$ \u6570\u7ec4\uff0c\u53d1\u73b0\u5982\u679c $t$ \u6570\u7ec4\u6709\u4e0d\u5728 $s$ \u6570\u7ec4\u4e2d\uff0c\u4e00\u5b9a\u662f\u65e0\u89e3\u7684\u3002\n\n\u5982\u679c\u5b58\u5728\uff0c\u5bf9\u5e94\u4e0a\u4e00\u4f4d\u7684\u524d\u9762\uff0c\u540e\u9762\uff0c\u5f53\u524d\u4f4d\u7f6e\uff0c\u4e09\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5e73\u8861\u6811\u67e5\u8be2\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c$s=\\texttt{contest},t=\\texttt{sentence}$\u3002\n\n$i=1,t_i=\\texttt{s}$\uff0c\u6b64\u65f6 $last=0$\uff0c\u5c06\u5e73\u8861\u6811 `split` \u4e00\u4e0b\uff0c\u770b\u770b\u53f3\u5b50\u6811 $y$ \u662f\u5426\u542b\u6709 $\\texttt{s}$ \u8fd9\u4e2a\u5b57\u6bcd\uff0c\u5982\u679c\u6709\u7684\u8bdd\u627e\u5230\u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u5c31\u662f $6$\uff0c\u6b64\u65f6\u7b54\u6848\u52a0\u4e0a $6$\u3002\n\n$i=2,t_i=\\texttt{e}$\uff0c\u6b64\u65f6 $last=6$\uff0c\u53d1\u73b0 $\\texttt{s}$ \u540e\u9762\u6ca1\u6709 $\\texttt{e}$\uff0c\u4f46\u662f\u524d\u9762\u6709\uff0c\u6545 $ans$ \u52a0\u4e0a $n-last+\\min dis_\\texttt{e}$\u3002\n\n\u4ee5\u6b64\u7c7b\u63a8\u3002\n\n\u81f3\u4e8e\u5b9e\u73b0\u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00 $26$ \u68f5\u5e73\u8861\u6811\uff0c\u4e00\u68f5\u4e13\u95e8\u5b58\u5bf9\u5e94\u5b57\u6bcd\u7684\u4f4d\u7f6e\u3002\n\n\u5f53\u7136\u7531\u4e8e\u6211\u6253\u4e8c\u5206\u5c31\u6ca1\u6253\u5bf9\u8fc7\uff0c\u6211\u5c31\u6ca1\u5199\uff0c\u6240\u4ee5\u5927\u5bb6\u4e5f\u662f\u53ef\u4ee5\u7528\u4e8c\u5206\u5b9e\u73b0\u7684\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nconst int N=1e6+5;\nchar s[N],t[N];\nstruct FHQ_treap{\n    int l,r,x,pri;\n    int size;\n}a[N][30];\nint root[30],cnt[30],last,ans;\nint new_node(int x,char ch){\n    int k=ch-'a'+1;\n    a[++cnt[k]][k].x=x;\n    a[cnt[k]][k].pri=rand();\n    a[cnt[k]][k].size=1;\n    return cnt[k];\n}\nvoid pushup(int x,char ch){\n    int k=ch-'a'+1;\n    a[x][k].size=a[a[x][k].r][k].size+a[a[x][k].l][k].size+1;\n    return;\n}\nvoid split(int now,int k,int &x,int &y,char ch){\n    int p=ch-'a'+1;\n    if(!now){\n        x=y=0;\n        return;\n    }\n    if(a[now][p].x<=k){\n        x=now;\n        split(a[now][p].r,k,a[now][p].r,y,ch);\n    }else{\n        y=now;\n        split(a[now][p].l,k,x,a[now][p].l,ch);\n    }\n    pushup(now,ch);\n}\nint merge(int x,int y,char ch){\n    int p=ch-'a'+1;\n    if(!x||!y) return x+y;\n    if(a[x][p].pri<a[y][p].pri){\n        a[x][p].r=merge(a[x][p].r,y,ch);\n        pushup(x,ch);\n        return x;\n    }else{\n        a[y][p].l=merge(x,a[y][p].l,ch);\n        pushup(y,ch);\n        return y;\n    }\n}\nint kth(int now,int x,char ch){\n    int p=ch-'a'+1;\n    while(1){\n        if(x<=a[a[now][p].l][p].size) now=a[now][p].l;\n        else if(x==a[a[now][p].l][p].size+1) return now;\n        else x-=a[a[now][p].l][p].size+1,now=a[now][p].r;\n    }\n}\nsigned main(){\n    scanf(\"%s%s\",s+1,t+1);\n    int n=strlen(s+1),m=strlen(t+1);\n    for(register int i=1;i<=n;i++){\n        int x,y,z;\n        split(root[s[i]-'a'+1],i,x,y,s[i]);\n        root[s[i]-'a'+1]=merge(merge(x,new_node(i,s[i]),s[i]),y,s[i]);//s\u4e2d\u6bcf\u4e2a\u5b57\u6bcd\u63d2\u5165FHQ Treap\n    }\n    for(register int i=1;i<=m;i++){\n        if(a[root[t[i]-'a'+1]][t[i]-'a'+1].size==0){\n            printf(\"-1\");\n            return 0;\n        }\n        int x,y,z,p=t[i]-'a'+1;\n        split(root[p],last,x,y,t[i]);\n        if(a[y][p].size!=0){\n            int q=a[kth(y,1,t[i])][p].x;\n            root[p]=merge(x,y,t[i]);\n            ans+=(q-last);\n            last=q;\n            continue;\n        }//\u540e\u9762\n        root[p]=merge(x,y,t[i]);\n        x=0,y=0;\n        split(root[p],last-1,x,y,t[i]);\n        if(a[x][p].size!=0){\n            int q=a[kth(x,1,t[i])][p].x;\n            root[p]=merge(x,y,t[i]);\n            ans+=(n-last+q);\n            last=q;//\u524d\u9762\n        }else{\n            ans+=n;\n            root[p]=merge(x,y,t[i]);\n        }//\u5c31\u5728\u8fd9\u4e2a\u4f4d\u7f6e\n    }\n    printf(\"%lld\",ans);\n}\n```",
        "postTime": 1647762952,
        "uid": 380579,
        "name": "LRCAKIOI",
        "ccfLevel": 6,
        "title": "[AT4869] [ABC138E] Strings of Impurity"
    }
]