[
    {
        "content": "## ARC097D  \n\n\u4e00\u4e2a\u7ec6\u8282\u8c03\u4e00\u5929\u7cfb\u5217\u3002  \n\n\u9996\u5148\u5982\u679c\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u662f\u9ed1\u8272\u7684\uff0c\u6211\u4eec\u5c31\u4e0d\u9700\u8981\u53bb\u7ecf\u8fc7\u90a3\u4e2a\u70b9\uff08\u5f53\u7136\u8fd9\u4e2a\u70b9\u8fd8\u662f\u53ef\u4ee5\u4f5c\u4e3a\u8d77\u70b9\u7684\uff09\u5728\u6811\u4e2d\u5220\u53bb\u8fd9\u4e2a\u70b9\u5bf9\u7b54\u6848\u6ca1\u7528\u5f71\u54cd\uff0c\u6211\u4eec\u4e0d\u65ad\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\uff08\u5220\u53bb\u4e00\u4e2a\u70b9\u540e\u53ef\u80fd\u6709\u65b0\u7684\u9ed1\u8272\u53f6\u5b50\u8282\u70b9\uff09\u3002  \n\n\u7136\u540e\u5f97\u5230\u4e00\u68f5\u53f6\u5b50\u8282\u70b9\u90fd\u4e3a\u767d\u8272\u7684\u6811\uff0c\u6211\u4eec\u9700\u8981\u7ecf\u8fc7\u6bcf\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u3002\u8fd9\u4e2a\u8def\u5f84\u6bd4\u8f83\u96be\u505a\uff0c\u6211\u4eec**\u5148\u8003\u8651\u56de\u8def**\uff0c\u4e5f\u5c31\u662f\u732b\u4ece $u$ \u51fa\u53d1\uff0c\u904d\u5386\u6240\u6709\u70b9\u540e\u5fc5\u987b\u56de\u5230 $u$\uff0c\u8fd9\u6837\u4e00\u5b9a\u662f**\u6bcf\u6761\u8fb9\u6b63\u5411\u53cd\u5411\u5404\u8d70\u4e00\u6b21**\uff0c\u6bcf\u4e00\u4e2a\u70b9\u4e5f\u7531\u4e8e\u8fdb\u5165\u8fd9\u4e2a\u70b9\u53cd\u8f6c\u4e86**\u8fd9\u4e2a\u70b9\u7684\u5ea6\u6570\u6b21\u6570**\u6b21\u989c\u8272\uff0c\u56e0\u6b64\u6bcf\u4e00\u4e2a\u70b9\u7684\u6700\u7ec8\u989c\u8272\u51b3\u5b9a\u4e8e\u5b83\u7684\u5165\u5ea6\u548c\u521d\u59cb\u989c\u8272\u6570\uff0c\u524d\u8005\u7b49\u4e8e\u5220\u70b9\u540e\u7684\u6811\u4e0a\u8fd9\u4e2a\u70b9\u7684\u5ea6\u6570\u3002\u5bf9\u7ffb\u8f6c\u540e\u8fd8\u662f\u767d\u8272\u7684\u70b9\u505a\u4e2a\u6807\u8bb0\uff0c\u6211\u4eec\u5230\u8fbe\u8fd9\u4e9b\u70b9\u7684\u65f6\u5019\u9700\u8981\u6bcf\u4e2a\u70b9\u989d\u5916\u7ffb\u8f6c\u4e00\u6b21\u3002  \n\n\u7136\u540e\u8003\u8651\u4ece $u$ \u5230 $v$ \u7684\u8def\u5f84\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u5176\u5b9e\u5c31\u662f\u56de\u8def\u51cf\u53bb\u4e86\u8fd9\u4e24\u70b9\u4e4b\u95f4\u7684\u6240\u6709\u8fb9\uff0c\u76f8\u5f53\u4e8e\u8fd9\u4e2d\u95f4\u7684\u70b9\u9664\u4e86 $u$ \u90fd\u5c11\u7ecf\u8fc7\u4e86\u4e00\u6b21\uff0c\u5373\u7ecf\u8fc7\u6070\u597d\u4e00\u6b21\u3002  \n- \u5bf9\u4e8e\u6ca1\u88ab\u6807\u8bb0\u7684\u70b9\uff0c\u5c11\u7ecf\u8fc7\u4e00\u6b21\u4f46\u540c\u65f6\u8981\u591a\u7ffb\u8f6c\u4e00\u6b21\u989c\u8272\u3002\n- \u5bf9\u4e8e\u6807\u8bb0\u4e86\u7684\u70b9\uff0c\u5c11\u7ecf\u8fc7\u4e00\u6b21\u8fd8\u5c11\u7ffb\u8f6c\u4e00\u6b21\u989c\u8272\u3002  \n\n\u524d\u8005\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a $0$\uff0c\u540e\u8005\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a $-2$\u3002  \n\u6240\u4ee5\u6211\u4eec\u8981\u627e\u5230\u4e00\u6761\u8def\u5f84\uff0c\u7ecf\u8fc7\u5c3d\u53ef\u80fd\u591a\u7684\u88ab\u6807\u8bb0\u4e86\u7684\u70b9\u3002  \n\n\u8fd9\u4e0d\u5c31\u662f\u6811\u7684\u76f4\u5f84\u5417\uff1f  \n\u6700\u540e\u4e00\u4e2a\u95ee\u9898\uff0c\u8fd9\u6837 $u$ \u70b9\u672c\u6765\u4e0d\u5e94\u8be5\u7edf\u8ba1\u8fdb\u53bb\uff0c\u7b54\u6848\u4e0d\u4f1a\u591a\u5417\uff1f  \n\u5e76\u4e0d\u4f1a\uff01\u56e0\u4e3a\u53f6\u5b50\u8282\u70b9\u7684\u6743\u503c\u5fc5\u5b9a\u662f $0$\uff0c\u4e00\u5b9a\u5b58\u5728\u4e0d\u5305\u542b\u53f6\u5b50\u8282\u70b9\u7684\u76f4\u5f84\uff0c\u7136\u540e\u6211\u4eec\u53d6\u53f6\u5b50\u8282\u70b9\u4f5c\u4e3a $u$\u3002  \n\n\u6700\u540e\u6811\u5f62 DP \u6c42\u76f4\u5f84\uff0c\u8bb0\u5f97\u8fd9\u91cc\u4e00\u5b9a\u8981\u627e\u5230\u4e00\u4e2a\u6ca1\u88ab\u5220\u6389\u7684\u70b9\u5f53\u6839\uff0c\u518d\u8dd1\u3002  \n\n\u7b54\u6848\u4e3a\u5220\u5b8c\u5269\u4f59\u8fb9\u6570\u4e58\u4e8c\u52a0\u6807\u8bb0\u7684\u70b9\u6570\u51cf\u53bb\u76f4\u5f84\u957f\u5ea6\u3002  \n\n\u6254\u4e2a\u4ee3\u7801\uff1a  \n\u5934\u6587\u4ef6\u6709 `queue`\u3002\n```cpp\nusing namespace std;\ntypedef long long LL;\nconst LL N = 100005;\n \nLL ec = 0,to[N << 1],nxt[N << 1],hed[N],deg[N];\nLL cnt = 0;\nvoid add_edge(LL f,LL t){\n\t++ ec; to[ec] = t; nxt[ec] = hed[f]; hed[f] = ec;\n\tdeg[t] ++;\n}\n \nLL vis[N] = {0},val[N],dis[N];\nLL eu[N],ev[N],n;\nstring s;\n \nvoid solve(){\n\tqueue <LL> q;\n\tfor(LL i = 1;i <= n;i ++) if(deg[i] == 1 && s[i] == 'B') q.push(i);\n\twhile(!q.empty()){\n\t\tLL u = q.front(); q.pop();\n\t\tvis[u] = 1;\n\t\tfor(LL i = hed[u];i;i = nxt[i]){\n\t\t\tLL v = to[i];\n\t\t\tif(!vis[v]){\n\t\t\t\tdeg[v] --;\n\t\t\t\tif(deg[v] == 1 && s[v] == 'B') q.push(v);\n\t\t\t}\n\t\t}\n\t}\n    // \u5220\u9ed1\u53f6\u5b50\n\tmemset(deg,0,sizeof(deg));\n\tmemset(hed,0,sizeof(hed)); ec = 0;\n\tfor(LL i = 1;i < n;i ++){\n\t\tif(vis[eu[i]] || vis[ev[i]]) continue;\n\t\tadd_edge(eu[i],ev[i]);\n\t\tadd_edge(ev[i],eu[i]);\n\t}\n\tfor(LL i = 1;i <= n;i ++){\n\t\tval[i] = 0;\n\t\tif(vis[i]) continue;\n\t\tif((s[i] == 'B' && deg[i] % 2 == 1) || (s[i] == 'W' && deg[i] % 2 == 0)){\n\t\t\tval[i] = 2;\n\t\t\tcnt ++;\n\t\t}\n\t}\n    // \u6253\u6807\u8bb0\n}\n \nLL td = 0;\nLL d[N];\nvoid dfs(LL u,LL f){\n\td[u] = val[u];\n\tfor(LL i = hed[u];i;i = nxt[i]){\n\t\tLL v = to[i];\n\t\tif(v == f) continue;\n\t\tdfs(v,u);\n\t\ttd = max(td,d[u] + d[v]);\n\t\td[u] = max(d[u],d[v] + val[u]);\n\t}\n    // \u6c42\u76f4\u5f84\n}\n \nint main(){\n\tios::sync_with_stdio(false);\n\tcin >> n;\n\tfor(LL i = 1;i < n;i ++){\n\t\tcin >> eu[i] >> ev[i];\n\t\tadd_edge(eu[i],ev[i]);\n\t\tadd_edge(ev[i],eu[i]);\n\t}\n\tcin >> s; s = ' ' + s;\n\tsolve();\n\tLL trt = 1,ans;\n\tfor(LL i = 1;i <= n;i ++) if(!vis[i]) trt = i;\n\tdfs(trt,0);\n\tans = ec + cnt - td;\n\tcout << ans << '\\n';\n\treturn 0;\n} \n```\n\n\u611f\u89c9\u8fd9\u9898\u633a\u6709\u610f\u601d\u3002",
        "postTime": 1586440957,
        "uid": 31440,
        "name": "installb",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 AT4133 \u3010[ARC097D] Monochrome Cat\u3011"
    },
    {
        "content": "\t\u4e0d\u77e5\u4ece\u54ea\u91cc\u542c\u6765\u4e86 \u6811\u4e0a\u63d2\u5934DP\uff0c\u53ef\u4ee5\u5904\u7406\u6811\u4e0a\u8dd1\u8def\u5f84\u7684\u95ee\u9898\uff0c\u6b63\u597d\u5728\u8fd9\u9053\u9898\u4e0a\u7ec3\u624b\u3002\n\n## Solution\uff1a\n\n\u94a6\u5b9a\u4ee5 1 \u4e3a\u6839\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u70b9 $p$\uff0c\u6211\u4eec\u60f3\u8981\u6c42\u51fa \u5c06 $p$ \u5b50\u6811\u5185\u6240\u6709\u8282\u70b9\u53d8\u9ed1 \u7684\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\u3002\u53ef\u4ee5\u77e5\u9053\u4e00\u6761\u8fb9\u81f3\u591a\u4f1a\u88ab\u904d\u5386\u4e24\u904d\uff0c\u56e0\u6b64\u8003\u8651\u6309 $p$ \u5230\u5176\u7236\u4eb2\u7684\u8fb9\uff08\u7b80\u79f0\u7236\u4eb2\u8fb9\uff09\u7684\u904d\u5386\u60c5\u51b5\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n1. \u5176\u7236\u4eb2\u8fb9\u672a\u88ab\u904d\u5386\uff0c\u8981\u4e48\u5b50\u6811\u5185\u6ca1\u6709\u767d\u70b9\uff0c\u8981\u4e48\u5b50\u6811\u5916\u6ca1\u6709\u767d\u70b9\u3002\n\n2. \u904d\u5386\u7684\u65b9\u5411\u4e3a\u4ece\u7236\u4eb2\u5230\u513f\u5b50\uff0c\u5219\u8def\u5f84\u7684\u8d77\u70b9\u5728\u5b50\u6811\u5916\uff0c\u7ec8\u70b9\u5728\u5b50\u6811\u5185\u3002\n\n3. \u904d\u5386\u7684\u65b9\u5411\u4e3a\u4ece\u513f\u5b50\u5230\u7236\u4eb2\uff0c\u5219\u8def\u5f84\u7684\u8d77\u70b9\u5728\u5b50\u6811\u5185\uff0c\u7ec8\u70b9\u5728\u5b50\u6811\u5916\u3002\n\n4. \u904d\u5386\u662f\u53cc\u5411\u7684\uff0c\u4e14\u8def\u5f84\u7684\u8d77\u70b9\u4e0e\u7ec8\u70b9\u90fd\u5728\u5b50\u6811\u5916\u3002\n\n5. \u904d\u5386\u662f\u53cc\u5411\u7684\uff0c\u4e14\u8def\u5f84\u7684\u8d77\u70b9\u4e0e\u7ec8\u70b9\u90fd\u5728\u5b50\u6811\u5185\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/g5bo35sr.png)\n\n\u8fd9\u4e9b\u60c5\u51b5\u6db5\u76d6\u4e86\u6240\u6709 $p$ \u4e0e\u5176\u7236\u4eb2\u5728\u8def\u5f84\u4e0a\u7684\u5173\u7cfb\uff0c\u518d\u8bb0\u5f55 $s$ \u8868\u793a $p$ \u7684 *\u5b50\u6811\u5185\u6709\u767d\u70b9\u7684\u513f\u5b50* \u7684\u6570\u91cf\uff08\u76f8\u5f53\u4e8e $p$ \u9700\u8981\u5f80\u513f\u5b50\u8d70\u7684\u6b21\u6570\uff09\uff0c\u5c31\u53ef\u4ee5\u6839\u636e\u4e0a\u9762\u7684\u60c5\u51b5\u6c42\u5f97 $p$ \u4f1a\u88ab\u904d\u5386\u7684\u6b21\u6570\uff0c\u7ed3\u5408 $p$ \u7684\u521d\u59cb\u989c\u8272\u77e5\u9053\u662f\u5426\u987b\u5728 $p$ \u8fdb\u884c\u64cd\u4f5c 2\u3002\n\n\u81f3\u6b64\u5c31\u53ef\u4ee5\u8bbe\u51fa\u72b6\u6001 $f[[p][0/1/2/3/4]$ \u5206\u522b\u5bf9\u5e94\u4e0a\u9762 5 \u79cd\u60c5\u51b5\u65f6 $p$ \u5b50\u6811\u5185\u6240\u6709\u70b9\u90fd\u53d8\u9ed1\u7684\u6700\u5c11\u64cd\u4f5c\u6570\uff08\u6db5\u76d6\u4e86 $p$ \u7684\u7236\u4eb2\u8fb9\uff09\uff0c\u5f53 $s\\ge2$ \u65f6\u6700\u591a\u53ea\u6709 2 \u4e2a\u513f\u5b50\u4e0d\u53d6 $f[][3]$\uff0c\u6240\u6709\u72b6\u6001\u5747\u53ef\u5206\u7c7b\u8ba8\u8bba\u8fdb\u884c\u8f6c\u79fb\u3002\n\n*p.s. \u4e0d\u5f97\u4e0d\u8bf4\u611f\u89c9\u6bd4 \u6362\u6839DP \u96be\u5199\u592a\u591a\u4e86\u3002*\n## Code\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define inl inline\nusing namespace std;\nconst int N=1e5+5;\nstruct E {int ne,to; }e[N*2];\nint n,ec,h[N],a[N],f[N][5];\ninl int Read()\n{\n\tint s=0; char c;\n\twhile(!isdigit(c=getchar()));\n\tfor(;isdigit(c);c=getchar()) s=s*10+c-'0';\n\treturn s;\n}\ninl bool Readc()\n{\n\tfor(char c=getchar();;c=getchar())\n\t\tif(isalpha(c)) return c=='W';\n}\ninl void Add(int x,int y)\n{\n\te[++ec]=(E){h[x],y}; h[x]=ec;\n\te[++ec]=(E){h[y],x}; h[y]=ec;\n}\ninl void DFS(int p,int fr)\n{\n\tint s=0;\n\tfor(int i=h[p];i;i=e[i].ne)\n\t{\n\t\tint v=e[i].to; if(v==fr) continue;\n\t\tDFS(v,p); if(f[v][0]) ++s;\n\t}\n\tif(!s)\n\t{\n\t\tf[p][0]=a[p];\t\t// \u7236\u4eb2\u8fb9\u6ca1\u88ab\u904d\u5386\uff0c\u81ea\u5df1\u6ca1\u53d8\u8272 \n\t\tf[p][1]=2-a[p];\t\t// \u7236\u4eb2\u8fb9\u88ab\u904d\u5386\u4e00\u6b21\uff0c\u81ea\u5df1\u53d8\u8272\n\t\tf[p][2]=1+a[p];\t\t// \u7236\u4eb2\u8fb9\u88ab\u904d\u5386\u4e00\u6b21\uff0c\u81ea\u5df1\u6ca1\u53d8\u8272\n\t\tf[p][3]=3-a[p];\t\t// \u7236\u4eb2\u8fb9\u88ab\u904d\u5386\u4e24\u6b21\uff0c\u81ea\u5df1\u53d8\u8272\n\t\tf[p][4]=3-a[p];\t\t// \u7236\u4eb2\u8fb9\u88ab\u904d\u5386\u4e24\u6b21\uff0c\u81ea\u5df1\u53d8\u8272\n\t}\n\telse if(s==1)\n\t\tfor(int i=h[p];i;i=e[i].ne)\n\t\t{\n\t\t\tint v=e[i].to;\n\t\t\tif(v==fr||!f[v][0]) continue;\n\t\t\tif(a[p]) f[p][0]=min(1+f[v][1],min(f[v][2],f[v][4]));\n\t\t\t\t\t// \u9664\u4e86\u81ea\u8eab\u4f5c\u4e3a\u8d77\u70b9\uff08\u5373\u53d6 f[v][1]\uff09\u5916\u5176\u5b83\u60c5\u51b5\u81ea\u5df1\u90fd\u5df2\u53d8\u8272 \n\t\t\telse f[p][0]=f[v][0];\n\t\t\tf[p][1]=2-a[p]+f[v][1];\t\t// \u81ea\u8eab\u4ec5\u88ab\u904d\u5386\u4e00\u6b21 \n\t\t\tf[p][2]=2-a[p]+f[v][2];\n\t\t\tf[p][3]=2+a[p]+f[v][3];\t\t//\u81ea\u5df1\u88ab\u904d\u5386\u4e24\u6b21\uff0c\u76f8\u5f53\u4e8e\u6ca1\u53d8\u8272 \n\t\t\tf[p][4]=2+a[p]+f[v][4];\n\t\t}\n\telse\n\t{\n\t\tint t=0,t1=0,t2=0,t3=0,t4=0;\n\t\tfor(int i=h[p];i;i=e[i].ne)\n\t\t{\n\t\t\tint v=e[i].to;\n\t\t\tif(v==fr||!f[v][0]) continue;\n\t\t\tt+=f[v][3];\t\t\t\t\t\t// \u5047\u8bbe\u6240\u6709\u513f\u5b50\u90fd\u53d6 f[][3] \u7684\u6700\u5c11\u64cd\u4f5c\u6570 \n\t\t\tt3=min(t3,min(t1+f[v][2]-f[v][3],t2+f[v][1]-f[v][3]));\n\t\t\t\t\t// \u8d77\u70b9\u5728\u4e00\u4e2a\u513f\u5b50\u7684\u5b50\u6811\u5185\uff0c\u7ec8\u70b9\u5728\u53e6\u4e00\u4e2a\u513f\u5b50\u7684\u5b50\u6811\u5185 \n\t\t\tt1=min(t1,f[v][1]-f[v][3]);\t\t// \u7ec8\u70b9\u5728\u4e00\u4e2a\u513f\u5b50\u7684\u5b50\u6811\u5185 \n\t\t\tt2=min(t2,f[v][2]-f[v][3]);\t\t// \u8d77\u70b9\u5728\u4e00\u4e2a\u513f\u5b50\u7684\u5b50\u6811\u5185 \n\t\t\tt4=min(t4,f[v][4]-f[v][3]);\t\t// \u8d77\u70b9\u7ec8\u70b9\u5728\u540c\u4e00\u4e2a\u513f\u5b50\u7684\u5b50\u6811\u5185 \n\t\t}\n\t\tf[p][0]=t+min(t3+(((s-1)&1)^a[p]),t4+((s&1)^a[p]));\t\n\t\t// \u82e5\u7ec8\u70b9\u5728\u4e00\u4e2a\u513f\u5b50\u7684\u5b50\u6811\u5185\u4e14\u8d77\u70b9\u4e0d\u5728\u5176\u5b50\u6811\u5185\uff0c\u5219 \u4ece\u513f\u5b50\u904d\u5386\u5230 p \u6709 s-1 \u6b21\uff0c\u5426\u5219\u6709 s \u6b21 \n\t\tf[p][1]=1+t+t1+((s&1)^a[p]);\n\t\tf[p][2]=1+t+t2+((s&1)^a[p]);\n\t\tf[p][3]=2+t+(((s+1)&1)^a[p]);\t// \u4ece\u7236\u4eb2\u8fd8\u4f1a\u904d\u5386\u5230 p \u4e00\u6b21 \n\t\tf[p][4]=2+t+min(t3+((s&1)^a[p]),t4+(((s+1)&1)^a[p]));\n\t}\n}\nint main()\n{\n\tn=Read();\n\tfor(int i=1;i<n;++i) Add(Read(),Read());\n\tfor(int i=1;i<=n;++i) a[i]=Readc();\n\tDFS(1,0); printf(\"%d\\n\",f[1][0]);\n\treturn 0;\n}\n```\n",
        "postTime": 1661072259,
        "uid": 224693,
        "name": "D_F_S",
        "ccfLevel": 7,
        "title": "AT4133 [ARC097D] Monochrome Cat \u9898\u89e3"
    },
    {
        "content": "### ARC 097F\n#### Solution\n\u9996\u5148\u628a\u6240\u6709\u9ed1\u8272\u7684\u53f6\u5b50\u53bb\u6389\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u6ca1\u7528\u7684\u3002\u7136\u540e\u8003\u8651\u4e00\u79cd\u6700\u7b80\u5355\u7684\u904d\u5386\uff0c\u4ece\u67d0\u4e2a\u8282\u70b9\u51fa\u53d1\u6309$dfs$\u5e8f\u904d\u5386\u6bcf\u4e2a\u8282\u70b9\uff0c\u8fd9\u6837\u6bcf\u6761\u8fb9\u4f1a\u88ab\u7ecf\u8fc7\u6070\u597d$2$\u6b21\uff0c\u6bcf\u4e2a\u70b9\u4f1a\u88ab\u7ecf\u8fc7$deg_i$\u6b21\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u518d\u5355\u72ec\u8003\u8651\u8fd9\u6837\u64cd\u4f5c\u4e4b\u540e\u662f\u5426\u53d8\u6210\u4e86\u9ed1\u8272\uff0c\u5982\u679c\u4e0d\u662f\u7684\u8bdd\u8fd8\u9700\u8981\u4e00\u6b21\u989d\u5916\u7684\u64cd\u4f5c\uff0c\u8bb0\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7684\u603b\u6b21\u6570\u4e3a$sum$\u3002\n\n\u7136\u540e\u8003\u8651\u5982\u4f55\u786e\u5b9a\u8d77\u70b9$S$\u548c\u7ec8\u70b9$T$\uff0c\u4e0d\u96be\u53d1\u73b0\u4ece$S$\u5230$T$\u7684\u6700\u5c11\u6e38\u8d70\u6b21\u6570\u5c31\u662f\u5728\u4e0a\u9762$dfs$\u7684\u57fa\u7840\u4e0a\uff0c$S$\u5230$T$\u8def\u5f84\u4e0a\u7684\u6bcf\u6761\u8fb9\u90fd\u5c11\u8d70\u4e00\u6b21\uff0c\u8def\u5f84\u4e0a\u7684\u6bcf\u4e2a\u70b9\uff08\u4e0d\u5305\u62ec$S$\u548c$T$\uff09\u4e5f\u90fd\u5c11\u8d70\u4e00\u6b21\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u53bb\u6389$S$\u548c$T$\uff0c\u8003\u8651\u4e2d\u95f4\u90a3\u6761\u94fe\u6700\u957f\u80fd\u51cf\u5c11\u591a\u5c11\u8d21\u732e\u3002\u4e2d\u95f4\u90a3\u6761\u8def\u5f84\u5220\u6389\u4e4b\u540e\u7684\u8d21\u732e\u5c31\u662f\u70b9\u6570$+1\u2212$\u9ed1\u70b9\u4e2a\u6570$+$\u767d\u70b9\u4e2a\u6570\uff08\u8fd9\u91cc\u7684\u989c\u8272\u4e3a$dfs$\u4e4b\u540e\u7684\u989c\u8272\uff09\uff0c\u90a3\u4e48\u53ef\u4ee5\u770b\u505a\u9ed1\u70b9\u8d21\u732e$0$\uff0c\u767d\u70b9\u8d21\u732e$2$\uff0c\u6c42\u4e00\u6761\u4e24\u7aef\u70b9\u4e0d\u5728\u53f6\u5b50\u4e0a\u7684\u6700\u957f\u94fe\u7684\u957f\u5ea6$d$\uff0c\u5176\u5b9e\u5c31\u662f\u6c42\u5e26\u6743\u76f4\u5f84\u7684\u957f\u5ea6\uff0cdp\u5373\u53ef\uff0c\u6700\u540e\u7684\u7b54\u6848\u5c31\u662f$sum\u2212d\u22121+1=sum-d$\u3002\n#### Code\n```cpp\nint n,len,sum,root,dia,cnt;\nint head[MAXN],vis[MAXN],f[MAXN],w[MAXN],deg[MAXN];\nchar s[MAXN];\n\nstruct Edge{\n    int to,next;\n} e[MAXN << 1];\n\nvoid add_edge(int u,int v){\n    e[++len] = (Edge){v,head[u]};\n    head[u] = len;\n}\n\nvoid dfs(int u,int fa){\n    vis[u] = (s[u] == 'W');\n    for(int i = head[u];i != -1;i = e[i].next){\n        int v = e[i].to;\n        if(v == fa) continue;\n        dfs(v,u);\n        vis[u] |= vis[v];\n        if(vis[v]) deg[u] += 1;\n    }\n    if(u != root) deg[u] += 1;\n    if(!vis[u]) return;\n    sum += 2;\n    if((deg[u] & 1) && s[u] == 'B') sum += 1, w[u] = 2;\n    if(!(deg[u] & 1) && s[u] == 'W') sum += 1, w[u] = 2;\n    f[u] = w[u];\n    for(int i = head[u];i != -1;i = e[i].next){\n        int v = e[i].to;\n        if(v == fa) continue;\n        checkMax(dia,f[u] + f[v]);\n        checkMax(f[u],f[v] + w[u]);\n    }\n}\n\nint main(){\n    memset(head,-1,sizeof(head));\n    scanf(\"%d\",&n);\n    for(int i = 1,u,v;i < n;i++){\n        scanf(\"%d%d\",&u,&v);\n        add_edge(u,v); add_edge(v,u);\n    }\n    scanf(\"%s\",s + 1);\n    for(int i = 1;i <= n;i++){\n        cnt += (s[i] == 'W');\n        if(s[i] == 'W') root = i;\n    }\n    if(cnt <= 1) return printf(\"%d\\n\",cnt),0; \n    dfs(root,0);\n    printf(\"%d\\n\",sum - dia - 2);\n    return 0;\n}\n```",
        "postTime": 1608261876,
        "uid": 108894,
        "name": "\u5173\u6000\u4ed6\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT4133 \u3010[ARC097D] Monochrome Cat\u3011"
    },
    {
        "content": "\u7533\u8bf7\u7ba1\u7406\u5458\u6dfb\u52a0\u7b80\u8981\u9898\u610f(\u88ab\u7981\u8a00\u4e86)\n### \u7b80\u8981\u9898\u610f\n\u7ed9\u51fa\u4e00\u68f5\u6811,\u6811\u4e0a\u6bcf\u4e2a\u8282\u70b9\u6709\u4e00\u4e2a\u521d\u59cb\u989c\u8272\u6bcf\u4e2a\u65f6\u523b\u4f60\u53ef\u4ee5\u6709\u4e24\u79cd\u64cd\u4f5c\n\n* \u7ffb\u8f6c\u8be5\u8282\u70b9\u989c\u8272\n* \u524d\u5f80\u4e0e\u8be5\u8282\u70b9\u76f8\u90bb\u7684\u8282\u70b9,\u5e76\u5c06\u76ee\u6807\u8282\u70b9\u7ffb\u8f6c\n\n\u521d\u59cb\u70b9\u4f60\u81ea\u5df1\u9009,\u6c42\u5c06\u6240\u6709\u70b9\u53d8\u4e3a\u9ed1\u8272\u7684\u6700\u5c0f\u6b65\u6570\n\n\u4f3c\u4e4e\u597d\u50cf\u8fd8\u633a\u7b80\u5355\u7684,orz yyxmy\n\n### sol\n\n\u9996\u5148\u8003\u8651\u7b80\u5316\u95ee\u9898,\u5bf9\u4e8e\u4e3a\u9ed1\u8272\u7684\u53f6\u5b50\u8282\u70b9,\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5220\u6389,\u8fd9\u6837\u6811\u5c31\u53d8\u6210\u4e86\u53f6\u5b50\u7ed3\u70b9\u5168\u90fd\u662f\u767d\u8272\u7684\u4e00\u68f5\u6811\n\n\u9996\u5148\u6211\u4eec\u80af\u5b9a\u662f\u6cbf\u7740\u6811\u4e0a\u7684\u4e00\u6761\u8def\u5f84\u8d70,\u7136\u540e\u8fdb\u5165\u9644\u8fd1\u7684\u652f\u8def\u518d\u51fa\u6765,\u6211\u4eec\u5148\u4e0d\u8003\u8651\u8def\u5f84\u5230\u5e95\u662f\u4ec0\u4e48,\u90a3\u4e48\u603b\u8d21\u732e\u5c31\u662f $\\sum b_i +check(i,b_i)$ , $b_i$ \u8868\u793a $i$\n\u70b9\u7684\u5ea6\u6570,\u56e0\u4e3a\u4e0d\u8003\u8651\u8def\u5f84\u4e0a\u7684\u70b9\u7684\u8bdd,\u6bcf\u4e2a\u70b9\u663e\u7136\u8981\u904d\u5386 $b_i$ \u6b21, $check(i,x)$ \u8868\u793a\u7684\u662f\u7ecf\u8fc7 $x$ \u6b21\u7ffb\u8f6c\u4e4b\u540e $i$ \u70b9\u662f\u5426\u8fd8\u9700\u8981\u7ffb\u8f6c\n\n\u7136\u540e\u8003\u8651\u51cf\u53bb\u8def\u5f84\u4e0a\u8282\u70b9\u7684\u8d21\u732e,\u4e5f\u5c31\u662f\u8981\u627e\u51fa\u4e00\u6761\u8def\u5f84,\u5c06\u8def\u5f84\u4e0a\u70b9\u7684\u8d21\u732e\u53d8\u4e3a $d_i-1+check(i,d_i-1)$ \u8fd9\u4e2a\u76f4\u63a5 $dp$ \u5373\u53ef,\u65b9\u5f0f\u7c7b\u4f3c\u4e8e\u6c42\u6811\u4e0a\u76f4\u5f84",
        "postTime": 1582772449,
        "uid": 88567,
        "name": "lzk5627",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 AT4133 \u3010[ARC097D] Monochrome Cat\u3011"
    },
    {
        "content": "\u9996\u5148\u6709\u4e00\u4e2a\u6bd4\u8f83\u663e\u7136\u7684\u6027\u8d28\uff0c \u8981\u904d\u5386\u7684\u70b9\u53ea\u53ef\u80fd\u5728\u6700\u5c0f\u7684\u5305\u542b\u6240\u6709\u767d\u70b9\u7684\u8054\u901a\u5757\u5185\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e2a\u8054\u901a\u5757\u627e\u51fa\u6765\u3002\n\n\u7136\u540e\u6211\u4eec\u5047\u5b9a\u8fd9\u4e2a\u767d\u8272\u8054\u901a\u5757\u5185\u6240\u6709\u7684\u8fb9\u90fd\u88ab\u7ecf\u8fc7\u4e24\u904d\uff0c \u4e5f\u5c31\u662f\u8dd1\u51fa\u4e86\u4e00\u6761\u56de\u8def\u3002 \u53ef\u4ee5\u628a\u8fd9\u4e2a\u7b54\u6848\u7b97\u51fa\u6765\u3002 \u4f46\u662f\u6240\u6709\u7684\u8fb9\u4e0d\u4e00\u5b9a\u90fd\u88ab\u7ecf\u8fc7\u4e24\u6b21\uff0c \u53ef\u80fd\u6709\u53ea\u88ab\u7ecf\u8fc7\u4e00\u6b21\u7684\u8fb9\uff0c \u5f88\u663e\u7136\u53ea\u88ab\u7ecf\u8fc7\u4e00\u6b21\u7684\u8fb9\u4e00\u5b9a\u662f\u67d0\u6761\u8def\u5f84\uff0c \u90a3\u4e48\u6211\u4eec\u8981\u627e\u7684\u662f\u4e00\u6761\u8def\u5f84\uff0c\u5176\u7ecf\u8fc7\u4e00\u6b21\u7684\u4ee3\u4ef7\u4e0e\u7ecf\u8fc7\u4e24\u6b21\u7684\u4ee3\u4ef7\u5dee\u6700\u5927\u3002 \u8fd9\u4e2a\u6811\u5f62$dp$\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4e86\u3002\n```cpp\n#include<bits/stdc++.h>\n#define reg register\n#define maxn 200001\nusing namespace std;\nint nt[maxn << 1], fi[maxn], go[maxn], d[maxn], rt;\nint dp[maxn], n, sum, sumx, siz[maxn], ans, cnt;\nchar s[maxn];\nvector<int> Q[maxn];\ninline int  read() {\n    reg int s = 0, t = 0; reg char ch = getchar();\n    while(ch > '9' || ch < '0') t |= ch == '-', ch = getchar();\n    while(ch >= '0' && ch <= '9') s = (s << 1) + (s << 3) + (ch ^ 48), ch = getchar();\n    return t ? -s : s;\n}\nvoid add(int u, int v){\n\tnt[++cnt] = fi[u]; fi[u] = cnt; go[cnt] = v;\n}\nvoid dfs(int u, int fa){\n\tsiz[u] = (s[u] == 'W'); \n\tfor(int i = fi[u]; i; i = nt[i]){\n\t\tint v = go[i]; if(v == fa) continue;\n\t\tdfs(v, u); siz[u] += siz[v];\n\t\tif(siz[v] != ans && siz[v] != 0){\n\t\t\tQ[u].push_back(v); Q[v].push_back(u);\n\t\t}\n\t}\n}\nvoid find(int x, int fa){\n\tsum += 2;  d[x] = 0;\n\tif(s[x] == 'W' && Q[x].size() % 2 == 0) sum += 1, d[x] = 2;\n\tif(s[x] == 'B' && Q[x].size() % 2 == 1) sum += 1, d[x] = 2;\n\tfor(int i = 0; i < Q[x].size(); i++){\n\t\tint v = Q[x][i]; if(v == fa) continue;\n\t\tfind(v, x);\n\t}\n}\nvoid solve(int x, int fa){\n\tdp[x] = d[x]; int maxx = 0, cmaxx = 0;\n\tfor(int i = 0; i < Q[x].size(); i++){\n\t\tint v = Q[x][i]; if(v == fa) continue;\n\t\tsolve(v, x); \n\t\tif(dp[v] > maxx) cmaxx = maxx, maxx = dp[v];\n\t\telse if(dp[v] > cmaxx) cmaxx = dp[v];\n\t\t\n\t}\n\tsumx = max(sumx, maxx + cmaxx + d[x]);\n\tdp[x] += maxx;\n}\nint main()\n{\n\tn = read();\n\tfor(int i = 1; i < n; i++){\n\t\tint x = read(), y = read();\n\t\tadd(x, y); add(y, x);\n\t}\n\tscanf(\"%s\", s + 1);\n\tfor(int i = 1; i <= n; i++) {\n\t\tans += ((s[i] == 'W') ? 1 : 0);\n\t\tif(s[i] == 'W') rt = i;\n\t}\n\tif(ans == 0) {puts(\"0\\n\"); return 0;}\n\tif(ans == 1) {printf(\"1\\n\"); return 0;}\n\tdfs(1, 0);  find(rt, 0);\n\tsum = sum - 2; \tsolve(rt, 0);\n\tcout << sum - sumx << endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1582244295,
        "uid": 97783,
        "name": "yyxmy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT4133 \u3010[ARC097D] Monochrome Cat\u3011"
    }
]