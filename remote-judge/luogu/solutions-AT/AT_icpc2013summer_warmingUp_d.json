[
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/AT724)\n\n#### \u524d\u7f6e\u77e5\u8bc6\uff1a\n\n\u5e76\u67e5\u96c6\u3002\n\n#### \u9898\u610f\uff1a\n\n- \u7ed9\u51fa\u4e00\u5f20 $n$ \u4e2a\u8282\u70b9 $m$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u5e76\u6267\u884c $k$ \u6b21\u8be2\u95ee\u3002\n\n- \u8be2\u95ee\u5206\u4e3a\u4e24\u79cd\uff1a1. \u5220\u9664\u67d0\u6761\u8fb9\u30022. \u8be2\u95ee\u4e24\u8282\u70b9\u4e4b\u95f4\u662f\u5426\u8fde\u901a\u3002\n\n- $1\\le n,m,k\\le10^5$\u3002\n\n#### \u5206\u6790\uff1a\n\n\u5982\u679c\u5c06\u5220\u8fb9\u6539\u4e3a\u52a0\u8fb9\uff0c\u90a3\u4e48\u672c\u9898\u5c31\u662f\u4e00\u9053\u975e\u5e38\u7ecf\u5178\u7684\u5e76\u67e5\u96c6\u95ee\u9898\uff1a\u53ef\u4ee5\u5c06\u6240\u6709\u5728\u540c\u4e00\u4e2a\u8fde\u901a\u56fe\u7684\u70b9\u653e\u5728\u4e00\u4e2a\u96c6\u5408\u4e2d\uff0c\u4e24\u4e2a\u4e0d\u540c\u8fde\u901a\u56fe\u7684\u70b9\u8fde\u8fb9\u65f6\u5c31\u5408\u5e76\u96c6\u5408\uff0c\u67e5\u8be2\u662f\u5426\u8fde\u901a\u7b49\u4ef7\u4e8e\u662f\u5426\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u3002\n\n\u4f46\u9898\u610f\u662f\u5220\u8fb9\uff0c\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u7684\u64cd\u4f5c\u4ece\u5408\u5e76\u8fde\u901a\u56fe\u53d8\u4e3a\u4e86\u5206\u5f00\u8fde\u901a\u56fe\u3002\u53ef\u4ee5\u8003\u8651~~\u7384\u5b66\u5730~~\u5148\u5efa\u597d\u5e76\u67e5\u96c6\uff0c\u5220\u8fb9\u5373\u5206\u5f00\u4e24\u4e2a\u5e76\u67e5\u96c6\u3002\u90a3\u4e48\u4e3a\u4e86\u4fdd\u5b58\u4fe1\u606f\uff0c\u5efa\u5e76\u67e5\u96c6\u5c31\u5fc5\u987b\u8981\u6309\u5220\u8fb9\u987a\u5e8f\u7684\u9006\u5e8f\u5efa\uff0c\u5e76\u4e14\u4e0d\u80fd\u8fdb\u884c\u8def\u5f84\u538b\u7f29\u3002\n\n\u4e0d\u8fc7\uff0c\u5728\u9006\u5e8f\u5efa\u5e76\u67e5\u96c6\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6240\u6709\u72b6\u6001\u90fd\u5df2\u7ecf\u51fa\u73b0\u8fc7\u4e86\uff0c\u5220\u8fb9\u53ea\u662f\u628a\u5efa\u5e76\u67e5\u96c6\u7684\u8fc7\u7a0b\u518d\u5012\u7740\u505a\u4e00\u904d\u800c\u5df2\uff1b\u800c\u7531\u4e8e\u79bb\u7ebf\uff0c\u4e0d\u9700\u8981\u8003\u8651\u5b8c\u6210\u8be2\u95ee\u7684\u987a\u5e8f\uff0c\u53ea\u9700\u8981\u8f93\u51fa\u987a\u5e8f\u6b63\u786e\u5373\u53ef\u3002\u56e0\u6b64\u53ef\u4ee5\u5728\u5efa\u5e76\u67e5\u96c6\u7684\u8fc7\u7a0b\u4e2d\uff0c\u9006\u5e8f\u5904\u7406\u6240\u6709\u8be2\u95ee\u3002\u8fd9\u6837\u7531\u4e8e\u4e4b\u540e\u4e0d\u9700\u8981\u5220\u8fb9\uff0c\u4e5f\u5c31\u4e0d\u9700\u8981\u4fdd\u5b58\u4fe1\u606f\uff0c\u53ef\u4ee5\u4f7f\u7528\u8def\u5f84\u538b\u7f29\u3002\n\n\u6574\u7406\u4e00\u4e0b\u601d\u8def\u3002\u7ecf\u8fc7\u521a\u624d\u7684\u5206\u6790\uff0c\u6211\u4eec\u628a\u5220\u8fb9\u95ee\u9898\u9006\u5411\u5904\u7406\uff0c\u8fdb\u884c\u52a0\u8fb9\uff0c\u4e5f\u5c31\u662f\u4f7f\u5176\u6210\u4e3a\u4e86\u7ecf\u5178\u7684\u52a0\u8fb9\u95ee\u9898\u3002\u8fd9\u4e5f\u662f\u5f88\u5e38\u7528\u7684\u4e00\u79cd\u601d\u8def\uff1a\u5f88\u96be\u6b63\u5411\u5904\u7406\u95ee\u9898\uff0c\u4e0d\u8fc7\u8be2\u95ee\u662f\u79bb\u7ebf\u7684\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u9006\u5411\u5904\u7406\u3002\n\n#### \u601d\u8def\uff1a\n\n1. \u9006\u5411\u5904\u7406\uff0c\u5e76\u4f7f\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u52a0\u8fb9\u8fc7\u7a0b\u3002\n\n---\n\n\u7531\u4e8e\u672c\u9898\u5e76\u67e5\u96c6\u975e\u5e38\u7ecf\u5178\uff0c\u6545\u76f4\u63a5\u7ed9\u51fa\u4ee3\u7801\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ninline int read() {\n\tint ret=0, k=1;\n\tchar c;\n\tdo if((c=getchar())=='-') k=-1; while(c<'0' || c>'9');\n\twhile(c>='0' && c<='9') ret=(ret<<1)+(ret<<3)+(c^48), c=getchar();\n\treturn k*ret;\n}\nconst int mN=1e5+10;\nint n, m, k, u[mN], v[mN];\nint e[mN], tot_e;\t//e \u6570\u7ec4\u5b58\u50a8\u5728\u8be2\u95ee\u4e2d\u88ab\u5220\u9664\u8fc7\u7684\u8fb9 \nbool ans[mN];\t//ans \u6570\u7ec4\u5b58\u50a8\u7b54\u6848\nint tot_ans;\nstruct question {\n\tbool kind;\n\tint x, y;\n} qn[mN];\t//\u7531\u4e8e\u662f\u79bb\u7ebf\u64cd\u4f5c\uff0c\u6240\u4ee5\u8981\u5b58\u50a8\u8be2\u95ee \n\nint fa[mN];\ninline int find(int x) {\n\treturn fa[x]==x ? x : fa[x]=find(fa[x]);\n}\n\ninline void merge(int u, int v) {\t//\u5408\u5e76\n\tif(find(u)!=find(v)) fa[fa[u]]=fa[v];\n\t//\u7531\u4e8e\u8def\u5f84\u538b\u7f29\uff0cfind \u540e fa[u] \u5c31\u662f\u4ee3\u8868\u5143\u7d20 \n}\n\nint main() {\n\tn=read(), m=read(), k=read();\n\n\tfor(int i=1; i<=n; ++i) fa[i]=i;\n\tfor(int i=1; i<=m; ++i) u[i]=read(), v[i]=read();\n\tfor(int i=1; i<=k; ++i) {\n\t\tqn[i].kind=read();\n\t\tif(qn[i].kind) qn[i].x=read(), qn[i].y=read();\n\t\telse e[++tot_e]=qn[i].x=read();\n\t}\n\n\tsort(e+1, e+tot_e+1), e[tot_e+1]=m+1;\n\tfor(int i=0; i<=tot_e; ++i)\n\t\tfor(int j=e[i]+1; j<=e[i+1]-1; ++j)\n\t\t\tmerge(u[j], v[j]);\t//\u5904\u7406\u6240\u6709\u6ca1\u88ab\u5220\u9664\u7684\u8fb9\n \n\tfor(int i=k; i>=1; --i) {\t//\u5904\u7406\u64cd\u4f5c\n\t\tif(qn[i].kind) ans[++tot_ans]=find(qn[i].x)==find(qn[i].y);\n\t\telse merge(u[qn[i].x], v[qn[i].x]);\n\t}\n\tfor(int i=tot_ans; i>=1; --i) puts(ans[i]?\"YES\":\"NO\");\t//\u7531\u4e8e\u662f\u9006\u5e8f\u64cd\u4f5c\uff0c\u6240\u4ee5\u518d\u9006\u5e8f\u8f93\u51fa\u5c31\u662f\u6b63\u5e8f\u4e86\n\treturn 0;\n}\n```",
        "postTime": 1626054728,
        "uid": 364963,
        "name": "\u963f\u4e11",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT724 Graph Destruction"
    }
]