[
    {
        "content": "# Description\n\n\u7ed9\u5b9a\u4e00\u5f20$N$\u4e2a\u70b9$M$\u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u6bcf\u6761\u8fb9\u8981\u67d3\u4e00\u4e2a\u7f16\u53f7\u5728$1$\u5230$K\n$\u7684\u989c\u8272\u3002\n\n\u4f60\u53ef\u4ee5\u5bf9\u4e00\u5f20\u67d3\u8272\u4e86\u7684\u56fe\u8fdb\u884c\u82e5\u5e72\u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u5f62\u5982\uff0c\u5728\u56fe\u4e2d\u9009\u62e9\u4e00\u4e2a\u7b80\u5355\u73af\uff08\u5373\u4e0d\u7ecf\u8fc7\u76f8\u540c\u70b9\u7684\u73af\uff09\uff0c\u5e76\u4e14\u5c06\u5176\u989c\u8272\u9006\uff08\u987a\uff09\u65f6\u9488\u65cb\u8f6c\u4e00\u4e2a\u5355\u4f4d\u3002\n\n\u4e24\u79cd\u67d3\u8272\u65b9\u6848\u88ab\u8ba4\u4e3a\u662f\u672c\u8d28\u76f8\u540c\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u5176\u4e2d\u4e00\u79cd\u67d3\u8272\u540e\u7684\u56fe\u7ecf\u8fc7\u82e5\u5e72\u6b21\u64cd\u4f5c\u540e\u53ef\u4ee5\u53d8\u6210\u53e6\u4e00\u79cd\u67d3\u8272\u540e\u7684\u56fe\u3002\n\n\u95ee\u6709\u591a\u5c11\u672c\u8d28\u4e0d\u540c\u7684\u67d3\u8272\u65b9\u6848\uff0c\u8f93\u51fa\u5bf9$10^9+7$\u53d6\u6a21\u3002\n\n# Solution\n\n\u8fd9\u79cd\u9898\u6bd4\u8f83\u5bb9\u6613\u60f3\u5230$Polya$\u5b9a\u7406\u3002\n\n\u5206\u4e09\u79cd\u60c5\u51b5\u8003\u8651\uff1a\n\n 1. \u4e0d\u5728\u70b9\u53cc\u91cc\u7684\u8fb9\u76f4\u63a5\u8d21\u732e K\n 2. \u4e00\u4e2a\u70b9\u53cc\u4e2d\u7684\u70b9\u6570\u7b49\u4e8e\u8fb9\u6570\uff0c\u5373\u8fd9\u4e2a\u70b9\u53cc\u53ea\u6709\u4e00\u4e2a\u73af, \u7528 $Polya$\u5b9a\u7406\u7b97\n 3. \u5426\u5219, \u53ef\u4ee5\u8bc1\u660e\u4efb\u610f\u4e00\u79cd\u7f6e\u6362\u90fd\u53ef\u4ee5\u5faa\u73af\u79fb\u4f4d\u51fa\u6765, \u76f4\u63a5\u7528\u7ec4\u5408\n\u6570\u7b97\u3002\n\n> \u8bc1\u660e\uff1a\n>\n> \u4ece\u4e0b\u9762\u8fd9\u5f20\u56fe\u53ef\u4ee5\u53d1\u73b0\uff0c\u4efb\u610f\u4e24\u6761\u76f8\u90bb\u7684\u4e14\u516c\u5171\u70b9\u7684\u5ea6\u6570$\\geq 3$\u7684\u8fb9\u90fd\u53ef\u4ee5\u4ea4\u6362\u4f4d\u7f6e\u4e14\u4fdd\u8bc1\u5176\u5b83\u8fb9\u7684\u4f4d\u7f6e\u4e0d\u53d8\u3002\n>\n>[![EW2osU.md.png](https://s2.ax1x.com/2019/05/11/EW2osU.md.png)](https://imgchr.com/i/EW2osU)\n> \u518d\u770b\u4e0b\u9762\u8fd9\u5f20\u56fe\uff0c\u53ef\u4ee5\u53d1\u73b0\u5148\u628a\u4efb\u610f\u4e24\u6761\u8fb9\u5206\u522b\u65cb\u8f6c\u5230\u4e00\u4e2a\u5ea6\u6570$\\geq 3$\u7684\u70b9\u4e0a\uff0c\u7136\u540e\u4ea4\u6362\u4f4d\u7f6e\u518d\u628a\u524d\u9762\u7684\u64cd\u4f5c\u9006\u5e8f\u64cd\u4f5c\u5c31\u53ef\u4ee5\u4ea4\u6362\u5b83\u4eec\u7684\u4f4d\u7f6e\u3002\n>[![EW2IMT.md.png](https://s2.ax1x.com/2019/05/11/EW2IMT.md.png)](https://imgchr.com/i/EW2IMT)\n> \u6240\u4ee5\uff0c\u4efb\u610f\u4e00\u79cd\u7f6e\u6362\u90fd\u53ef\u4ee5\u5faa\u73af\u79fb\u4f4d\u51fa\u6765\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\ninline int gi()\n{\n    char c = getchar();\n    while(c < '0' || c > '9') c = getchar();\n    int sum = 0;\n    while('0' <= c && c <= '9') sum = sum * 10 + c - 48, c = getchar();\n    return sum;\n}\n\ntypedef long long ll;\nconst int maxn = 55, maxm = 105, mod = 1e9 + 7;\n\nint n, m, col, fac[maxm << 1], ifac[maxm << 1];\n\nstruct edge\n{\n    int to, next;\n} e[maxm * 2];\nint h[maxn], tot;\n\ninline void add(int u, int v)\n{\n    e[++tot] = (edge) {v, h[u]}, h[u] = tot;\n    e[++tot] = (edge) {u, h[v]}; h[v] = tot;\n}\n\nint dfn[maxn], low[maxn], Time, top, bccno[maxn], cnt, siz_p[maxn], siz_e[maxn];\npair<int, int> stk[maxm];\nvector<int> vec[maxn];\n\nvoid dfs(int u, int fa)\n{\n    dfn[u] = low[u] = ++Time;\n    for (int i = h[u], v; v = e[i].to, i; i = e[i].next)\n        if (v != fa) {\n            if (!dfn[v]) {\n                stk[++top] = make_pair(u, v);\n                dfs(v, u);\n                low[u] = min(low[u], low[v]);\n                if (dfn[u] <= low[v]) {\n                    ++cnt;\n                    while (1) {\n                        int x = stk[top].first, y = stk[top].second;\n                        ++siz_e[cnt];\n                        if (bccno[x] != cnt) bccno[x] = cnt, ++siz_p[cnt], vec[cnt].push_back(x);\n                        if (bccno[y] != cnt) bccno[y] = cnt, ++siz_p[cnt], vec[cnt].push_back(y);\n                        --top;\n                        if (x == u && y == v) break;\n                    }\n                }\n            } else if (dfn[v] < dfn[u]) stk[++top] = make_pair(u, v), low[u] = min(low[u], dfn[v]);\n        }\n}\n\ninline int fpow(int x, int k)\n{\n    int res = 1;\n    while (k) {\n        if (k & 1) res = (ll)res * x % mod;\n        x = (ll)x * x % mod; k >>= 1;\n    }\n    return res;\n}\n\ninline int C(int n, int m)\n{\n    return (ll)fac[n] * ifac[m] % mod * ifac[n - m] % mod;\n}\n\nint main()\n{\n    n = gi(); m = gi(); col = gi();\n    \n    for (int i = 1; i <= m; ++i) add(gi(), gi());\n\n    for (int i = 1; i <= n; ++i)\n        if (!dfn[i]) dfs(i, 0);\n\n    fac[0] = ifac[0] = ifac[1] = 1;\n    for (int i = 1; i <= m + col; ++i) fac[i] = (ll)fac[i - 1] * i % mod;\n    for (int i = 2; i <= m + col; ++i) ifac[i] = (ll)(mod - mod / i) * ifac[mod % i] % mod;\n    for (int i = 2; i <= m + col; ++i) ifac[i] = (ll)ifac[i - 1] * ifac[i] % mod;\n    \n    int ans1 = 1, ans2 = 1, ans3 = 1;\n    for (int i = 1; i <= cnt; ++i)\n        if (siz_e[i] == 1) ans1 = (ll)ans1 * col % mod;\n        else if (siz_e[i] == siz_p[i]) {\n            int sum = 0;\n            for (int j = 1; j <= siz_e[i]; ++j) {\n                sum += fpow(col, __gcd(j, siz_p[i]));\n                if (sum >= mod) sum -= mod;\n            }\n            ans2 = (ll)ans2 * sum % mod * fpow(siz_e[i], mod - 2) % mod;\n        } else ans3 = (ll)ans3 * C(siz_e[i] + col - 1, col - 1) % mod;\n\n    printf(\"%lld\\n\", (ll)ans1 * ans2 % mod * ans3 % mod);\n    \n    return 0;\n}\n```",
        "postTime": 1557541897,
        "uid": 119899,
        "name": "dsidsi",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 AT2143 \u3010AtCoDeer\u304f\u3093\u3068\u30b0\u30e9\u30d5\u8272\u5857\u308a / Painting Graphs with AtCoDeer\u3011"
    },
    {
        "content": "[AT2143 [ARC062D] AtCoDeer\u304f\u3093\u3068\u30b0\u30e9\u30d5\u8272\u5857\u308a / Painting Graphs with AtCoDeer](https://www.luogu.com.cn/problem/AT2143)\u89e3\u9898\u62a5\u544a\uff1a\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://zybuluo.com/xiaoziyao/note/1770967)\n\n## \u9898\u610f\n\n- \u7ed9\u5b9a\u4e00\u4e2a\u65e0\u5411\u56fe\uff0c\u7ed9\u5b83\u7684\u8fb9\u7528$k$\u79cd\u989c\u8272\u67d3\u8272\uff0c\u5b9a\u4e49\u4e00\u79cd\u64cd\u4f5c\u4e3a\u5c06\u4e00\u4e2a\u73af\u7684\u989c\u8272\u5faa\u73af\u79fb\u4f4d\uff0c\u5b9a\u4e49\u4e24\u79cd\u67d3\u8272\u65b9\u6848\u76f8\u540c\u5f53\u4e14\u4ec5\u5f53\u4e00\u79cd\u65b9\u6848\u53ef\u4ee5\u901a\u8fc7\u53e6\u4e00\u79cd\u65b9\u6848\u64cd\u4f5c\u5f97\u5230\uff0c\u6c42\u672c\u8d28\u4e0d\u540c\u67d3\u8272\u65b9\u6848\u6570\uff0c\u5bf9$10^9+7$\u53d6\u6a21\u3002\n- \u6570\u636e\u8303\u56f4\uff1a$1\\leqslant n\\leqslant 50,1\\leqslant m\\leqslant 100,1\\leqslant k\\leqslant 100$\u3002\n\n## \u5206\u6790\n\n\u6bd4\u8f83\u597d\u73a9\u7684\u4e00\u9053\u9898\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u4e00\u79cd\u795e\u5947\u7684\u8fb9\u53cc\u8054\u901a\u5206\u91cf\u6c42\u6cd5\uff08\u6ce8\u610f\uff0c\u8fd9\u91cc\u6c42\u7684\u8fb9\u53cc\u8054\u901a\u5206\u91cf\u662f\u6307\u4e0d\u5b58\u5728\u5272\u70b9\u7684\u8fde\u901a\u5206\u91cf\uff09\u628a\u6574\u4e2a\u56fe\u5206\u6210\u82e5\u5e72\u4e2a\u8fb9\u96c6\uff0c\u7136\u540e\u5206\u7c7b\u8ba8\u8bba\uff1a\n```\nvoid tarjan(int x,int last){\n\tdfn[x]=low[x]=++cnt;\n\tfor(int i=start[x];i;i=then[i]){\n\t\tint y=to[i];\n\t\tif(y==last)\n\t\t\tcontinue;\n\t\tif(dfn[y]==0){\n\t\t\tstk[++top][0]=x,stk[top][1]=y;\n\t\t\ttarjan(y,x);\n\t\t\tlow[x]=min(low[x],low[y]);\n\t\t\tif(dfn[x]<=low[y]){\n\t\t\t\tint a=0,b=0;\n\t\t\t\ttot++;\n\t\t\t\twhile(a!=x||b!=y){\n\t\t\t\t\ta=stk[top][0],b=stk[top][1],top--;\n\t\t\t\t\tsumg[tot]++,sump[tot]+=(bel[a]!=tot)+(bel[b]!=tot);\n\t\t\t\t\tbel[a]=bel[b]=tot;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if(dfn[y]<dfn[x]){\n\t\t\tstk[++top][0]=x,stk[top][1]=y;\n\t\t\tlow[x]=min(low[x],dfn[y]);\n\t\t}\n\t}\n}\n```\n\n- \u5bf9\u4e8e\u5355\u72ec\u7684\u4e00\u6761\u8fb9\uff0c\u5b83\u53ef\u4ee5\u67d3$k$\u79cd\u989c\u8272\uff1b\n- \u5bf9\u4e8e\u4e00\u4e2a\u73af\uff08\u5373\u70b9\u6570\u7b49\u4e8e\u8fb9\u6570\uff09\uff0c\u5b83\u67d3\u8272\u65b9\u6848\u6570\u53ef\u4ee5\u76f4\u63a5\u7528$burnside$\u5f15\u7406\u6765\u6c42\uff1a\n$$ans=\\frac{1}{|G|}\\sum_{g\\in G}|X^g|=\\frac{1}{n}\\sum_{i=1}^n k^{\\gcd(i,n)}$$\n\uff08$k^{gcd(i,n)}$\u7684\u610f\u601d\u5c31\u662f\u6307\u524d$\\gcd(i,n)$\u4e2a\u53ef\u4ee5\u968f\u610f\u67d3\u8272\uff0c\u540e\u9762\u7684\u76f4\u63a5\u6309\u987a\u5e8f\u586b\u4e0b\u53bb\u5c31\u597d\u4e86\uff09\u3002\n- \u5bf9\u4e8e\u4e00\u4e2a\u70b9\u6570\u4e0d\u7b49\u4e8e\u8fb9\u6570\u7684\u8fb9\u53cc\u8054\u901a\u5206\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e**\u5982\u679c\u4e24\u4e2a\u67d3\u8272\u65b9\u6848\u7684\u7528\u7684\u989c\u8272\u53ca\u989c\u8272\u7684\u6570\u91cf\uff0c\u90a3\u4e48\u5b83\u4eec\u4e00\u5b9a\u53ef\u4ee5\u901a\u8fc7\u64cd\u4f5c\u4e92\u76f8\u5f97\u5230**\uff0c\u56e0\u6b64\u65b9\u6848\u6570\u7b49\u4e8e$m$\u4e2a\u7403\u653e\u5165$k$\u4e2a\u76d2\u5b50\uff08\u53ef\u7a7a\uff09\u7684\u65b9\u6848\u6570\uff0c\u63d2\u677f\u6cd5\u5f97\u5230\u7b54\u6848\u662f${m+k-1\\choose m}$\u3002\n\n\u8bc1\u660e\uff1a\n\u9996\u5148\u5f88\u663e\u7136\u4e00\u4e2a\u70b9\u6570\u4e0d\u7b49\u4e8e\u8fb9\u6570\u7684\u8fb9\u53cc\u8054\u901a\u5206\u91cf\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a$\\geqslant 3$\u5ea6\u70b9\u3002\n\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e\u4e00\u4e2a$\\geqslant 3$\u5ea6\u70b9\u53ef\u4ee5\u4e92\u6362\u4efb\u610f\u4e24\u6761\u8fb9\uff1a\n\u56e0\u4e3a\u8fd9\u4e2a$\\geqslant 3$\u5ea6\u70b9\u7684\u7b2c\u4e8c\u6761\u8fb9\u4f1a\u628a\u5927\u73af\u5206\u6210\u4e24\u4e2a\u5c0f\u73af\uff0c\u56e0\u6b64\u6211\u4eec\u5bf9\u4e8e\u4e24\u4e2a\u5c0f\u73af\u548c\u4e00\u4e2a\u5927\u73af\u8fdb\u884c\u4e0b\u5217\u64cd\u4f5c\uff1a\n![](https://fp1.fghrsh.net/2021/01/16/6bb95b82a473c75c7277f05bad8814ff.png)\n\n\u7b2c\u4e00\u6b21\u6b63\u64cd\u4f5c\u7b2c\u4e00\u4e2a\u5c0f\u73af\u53ef\u4ee5\u8ba9\u524d\u4e24\u6761\u8fb9\u8f6c\u5230\u5c0f\u73af\u4e0a\u3002\n![](https://fp1.fghrsh.net/2021/01/16/4a52e2a667d1b184b9f16bdd34c46412.png)\n\n\u7b2c\u4e8c\u6b21\u6b63\u64cd\u4f5c\u7b2c\u4e8c\u4e2a\u5c0f\u73af\u53ef\u4ee5\u8ba9\u7b2c\u4e09\u6761\u8fb9\u8f6c\u5230\u539f\u6765\u7b2c\u4e8c\u6761\u8fb9\u7684\u4f4d\u7f6e\u3002\n![](https://fp1.fghrsh.net/2021/01/16/54ebecda9b968be7700857ed980b283c.png)\n\n\u7b2c\u4e09\u6b21\u9006\u64cd\u4f5c\u5927\u73af\u4fbf\u53ef\u4ee5\u628a\u4e09\u6761\u8fb9\u8f6c\u56de\u6765\u3002\n![](https://fp1.fghrsh.net/2021/01/16/acd235ca2eff2337086846dcbf6d95e5.png)\n\n\u6b64\u65f6\u540e\u4e24\u6761\u8fb9\u5df2\u7ecf\u4ea4\u6362\uff0c\u4e14\u4e0d\u96be\u770b\u51fa\u6574\u4e2a\u8fb9\u53cc\u8054\u901a\u5206\u91cf\u91cc\u7684\u6240\u6709\u8fb9\u53ea\u6709\u8fd9\u4e24\u6761\u8fb9\u79fb\u52a8\u4e86\u4f4d\u7f6e\u3002\n\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u53ef\u4ee5\u901a\u8fc7\u82e5\u5e72\u4e2a\u73af\u628a\u4efb\u610f\u4e24\u4e2a\u70b9\u79fb\u52a8\u5230\u4e00\u4e2a$\\geqslant 3$\u5ea6\u70b9\u4e0a\uff0c\u7ecf\u8fc7\u4e0a\u9762\u7684\u64cd\u4f5c\u4ea4\u6362\u4e24\u6761\u8fb9\uff0c\u53c8\u53ef\u4ee5\u901a\u8fc7\u79fb\u8fc7\u6765\u65f6\u64cd\u4f5c\u7684\u9006\u64cd\u4f5c\u628a\u8fd9\u4e24\u6761\u8fb9\u4ea4\u6362\u56de\u53bb\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u6210\u529f\u5728\u4e0d\u6539\u53d8\u5176\u4ed6\u8fb9\u7684\u4f4d\u7f6e\u7684\u60c5\u51b5\u4e0b\u4ea4\u6362\u4e86\u4e24\u6761\u8fb9\uff0c\u8fd9\u6837\u5c31\u8bc1\u660e\u4e86\u4e0a\u9762\u7684\u7ed3\u8bba\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n\\log n)$\u3002\n\n\u5f53\u7136\uff0c\u5982\u679c\u4f60\u8ddf\u6211\u4e00\u6837\u65e0\u804a\u7684\u8bdd\uff0c\u53ef\u4ee5\u628a\u4e0a\u9762\u7684\u5f0f\u5b50\u5316\u4e00\u4e0b\uff1a$\\frac{1}{n}\\sum_{i=1}^n k^{\\gcd(i,n)}=\\frac{1}{n}\\sum_{d=1}^n\\sum_{i=1}^n k^d[\\gcd(i,n)=d]=\\frac{1}{n}\\sum_{d=1}^n[d\\mid n]k^d\\sum_{i=1}^{\\frac{n}{d}}[\\gcd(i,\\frac{n}{d})=1]=\\frac{1}{n}\\sum_{d=1}^n [d\\mid n]k^d\\times\\varphi(\\frac{n}{d})$\uff0c\u7136\u540e\u76f4\u63a5\u7d2f\u4e58\u505a\u5230$O(n)$\u3002\n\n\u6ce8\u610f\u8981\u5e26\u4e0a$[d\\mid n]$\uff0c\u5426\u5219\u7b54\u6848\u4f1a\u591a\u7b97\u4e00\u90e8\u5206\u8d21\u732e\uff08\u6211\u5c31\u56e0\u4e3a\u8fd9\u8c03\u4e86\u534a\u4e2a\u5c0f\u65f6\uff09\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n)$\u3002\n\n## \u4ee3\u7801\n\n```\n#include<stdio.h>\nconst int maxn=1005,mod=1000000007,maxx=1000;\nint n,m,k,e,cnt,top,tot,prms,ans;\nint start[maxn],from[maxn],to[maxn],then[maxn],dfn[maxn],low[maxn],stk[maxn][2],deg[maxn],sump[maxn],sumg[maxn],bel[maxn];\nint phi[maxn],a[maxn],p[maxn],fac[maxn],nfac[maxn];\ninline int min(int a,int b){\n\treturn a<b? a:b;\n}\ninline void add(int x,int y){\n\tthen[++e]=start[x],start[x]=e,from[e]=x,to[e]=y;\n}\nvoid tarjan(int x,int last){\n\tdfn[x]=low[x]=++cnt;\n\tfor(int i=start[x];i;i=then[i]){\n\t\tint y=to[i];\n\t\tif(y==last)\n\t\t\tcontinue;\n\t\tif(dfn[y]==0){\n\t\t\tstk[++top][0]=x,stk[top][1]=y;\n\t\t\ttarjan(y,x);\n\t\t\tlow[x]=min(low[x],low[y]);\n\t\t\tif(dfn[x]<=low[y]){\n\t\t\t\tint a=0,b=0;\n\t\t\t\ttot++;\n\t\t\t\twhile(a!=x||b!=y){\n\t\t\t\t\ta=stk[top][0],b=stk[top][1],top--;\n\t\t\t\t\tsumg[tot]++,sump[tot]+=(bel[a]!=tot)+(bel[b]!=tot);\n\t\t\t\t\tbel[a]=bel[b]=tot;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if(dfn[y]<dfn[x]){\n\t\t\tstk[++top][0]=x,stk[top][1]=y;\n\t\t\tlow[x]=min(low[x],dfn[y]);\n\t\t}\n\t}\n}\nvoid sieve(int k){\n\tp[1]=phi[1]=1;\n\tfor(int i=2;i<=k;i++){\n\t\tif(p[i]==0)\n\t\t\ta[++prms]=i,phi[i]=i-1;\n\t\tfor(int j=1;j<=prms;j++){\n\t\t\tif(i*a[j]>k)\n\t\t\t\tbreak;\n\t\t\tp[i*a[j]]=1;\n\t\t\tif(i%a[j]==0){\n\t\t\t\tphi[i*a[j]]=phi[i]*a[j];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tphi[i*a[j]]=phi[i]*(a[j]-1);\n\t\t}\n\t}\n}\nint ksm(int a,int b){\n\tint res=1;\n\twhile(b){\n\t\tif(b&1)\n\t\t\tres=1ll*res*a%mod;\n\t\ta=1ll*a*a%mod,b>>=1;\n\t}\n\treturn res;\n}\nint calc(int n){\n\tint res=0,mul=1;\n\tfor(int i=1;i<=n;i++){\n\t\tmul=1ll*mul*k%mod;\n\t\tif(n%i==0)\n\t\t\tres=(res+1ll*mul*phi[n/i]%mod)%mod;\n\t}\n\treturn 1ll*res*ksm(n,mod-2)%mod;\n}\ninline int c(int n,int m){\n\treturn n<m? 0:1ll*fac[n]*nfac[m]%mod*nfac[n-m]%mod;\n}\nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tsieve(maxx);\n\tfac[0]=1;\n\tfor(int i=1;i<=maxx;i++)\n\t\tfac[i]=1ll*fac[i-1]*i%mod;\n\tnfac[maxx]=ksm(fac[maxx],mod-2);\n\tfor(int i=maxx;i>=1;i--)\n\t\tnfac[i-1]=1ll*nfac[i]*i%mod;\n\tfor(int i=1;i<=m;i++){\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd(x,y),add(y,x);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(dfn[i]==0){\n\t\t\ttop=0;\n\t\t\ttarjan(i,0);\n\t\t} \n\tans=1;\n\tfor(int i=1;i<=tot;i++){\n\t\tif(sump[i]==1)\n\t\t\tans=1ll*ans*k%mod;\n\t\telse if(sump[i]==sumg[i])\n\t\t\tans=1ll*ans*calc(sump[i])%mod;\n\t\telse ans=1ll*ans*c(sumg[i]+k-1,sumg[i])%mod;\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1610776110,
        "uid": 35754,
        "name": "Verdandi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT2143 \u3010[ARC062D] AtCoDeer\u304f\u3093\u3068\u30b0\u30e9\u30d5\u8272\u5857\u308a / Painting Graphs with AtCoDeer\u3011"
    }
]