[
    {
        "content": "PS\uff1a\u8fd9\u4e2a\u9898\u89e3\u53ea\u662f\u7ffb\u8bd1\u4e00\u4e0b\u5b98\u65b9\u9898\u89e3\u7ed9\u51fa\u7684\u7ed3\u8bba\u7684\u8bc1\u660e\uff0c\u5173\u4e8e\u5bb9\u65a5\u7684\u90e8\u5206\u7565\u53bb\u3002\n\n\u5982\u679c\u5b58\u5728 $k_i=j-1,l_j=i$ \uff0c\u90a3\u4e48\u628a\u5b83\u6362\u6210 $k_i=j,l_j=i-1$ \u663e\u7136\u65b9\u683c\u91cc\u7684\u6570\u4e0d\u53d8\u3002\n\n\u6211\u4eec\u8bb0\u4e0d\u5b58\u5728 $k_i=j-1,l_j=i$ \u7684\u65b9\u6848\u4e3a $\\text{regular~expression}$\uff0c\u53ef\u4ee5\u8bc1\u660e\u4e24\u79cd\u4e0d\u540c\u7684 $\\text{regular~expression}$ \u5bf9\u5e94\u7684\u7f51\u683c\u4e0d\u540c\u6784\uff0c\u8bc1\u660e\u5982\u4e0b\uff1a\n\n\u5047\u8bbe\u4e24\u4e2a $\\text{regular~expression}$ \u5206\u522b\u4e3a $k_1,k_2,...,k_N,l_1,l_2,...,l_M$ \u548c $k'_1,k'_2,...,k'_N,l'_1,l'_2,...,l'_M$\uff0c\u5b83\u4eec\u5bf9\u5e94\u7684\u7f51\u683c\u540c\u6784\uff0c\u5c1d\u8bd5\u63a8\u51fa\u77db\u76fe\uff1a\n- \u627e\u5230\u6700\u5c0f\u7684 $j$\uff0c\u4f7f\u5f97 $l_j\\neq l_j'$\uff0c\u4e0d\u59a8\u4ee4 $l_j<l'_j$\uff0c\u5e76\u8bb0 $r=l'_j$\n- \u56e0\u4e3a\u4e24\u4e2a\u7f51\u683c\u540c\u6784\uff0c\u5fc5\u7136\u6709 $k_r\\ge j,~k'_r<j$\uff0c\u8fd9\u6837\u8fd9\u4e2a\u4f4d\u7f6e\u624d\u80fd\u540c\u65f6\u4e3a 1\n- \u5982\u679c $j=1$\uff0c\u90a3\u4e48 $k'_r=0$\uff0c\u8fd9\u4e0e\u5b83\u662f $\\text{regular~expression}$ \u77db\u76fe\u3002\n- \u5982\u679c $j>1$\uff0c\u90a3\u4e48 $k'_r<j-1$\uff0c\u800c $k_r\\ge j,l_{j-1}=l'_{j-1}$\uff0c\u63a8\u51fa\u4e24\u4e2a\u7f51\u683c$(r,j-1)$\u7684\u4f4d\u7f6e\u4e0d\u76f8\u7b49\uff0c\u77db\u76fe\u3002\n\n\u6240\u4ee5\u5c31\u53ea\u9700\u8981\u7edf\u8ba1\u4e0d\u5b58\u5728 $k_i=j-1,l_j=i$ \u7684\u65b9\u6848\u4e86\u3002",
        "postTime": 1593765442,
        "uid": 30412,
        "name": "xmy3",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT5143 \u3010[AGC035F] Two Histograms\u3011"
    },
    {
        "content": "\u5efa\u8bae\u5728 luogu \u535a\u5ba2\u6216\u8005 [\u8fd9\u91cc](https://www.yijan.co/agc035f-two-histograms/) \u67e5\u770b\n\n\u9996\u5148\uff0c\u6240\u6709\u4e0d\u540c\u7684\u64cd\u4f5c\u65b9\u5f0f\u662f\u5f88\u597d\u6c42\u7684\u3002\u4f46\u662f\u4e0d\u540c\u64cd\u4f5c\u5e8f\u5217\u5e76\u4e0d\u6b63\u597d\u5bf9\u5e94\u4e00\u79cd\u4e0d\u540c\u7684\u7f51\u683c\u3002\n\n\u8003\u8651\u4ec0\u4e48\u60c5\u51b5\u4e0b\u4e24\u4e2a\u64cd\u4f5c\u5e8f\u5217\u4e0d\u540c\u4f46\u662f\u6c42\u51fa\u4e86\u4e0d\u540c\u7684\u7f51\u683c\u3002\u5982\u679c\u51fa\u73b0\u4e86\u8fd9\u79cd\u60c5\u51b5\uff1a\n\n```\n0 0 1 0\n0 0 1 0\n1 1 1 0\n0 0 0 0\n```\n\n\u90a3\u4e48\u660e\u663e\uff0c\u8981\u4e48\u7b2c\u4e09\u884c +3 \uff0c\u7b2c\u4e09\u5217 +2 \u6216\u8005 \u7b2c\u4e09\u884c +2 \u7b2c\u4e09\u5217 +3 \uff0c\u4f1a\u51fa\u73b0\u4e24\u79cd\u4e0d\u540c\u7684\u72b6\u51b5\u3002\n\n\u9664\u5f00\u8fd9\u79cd\u60c5\u51b5\uff0c\u4e0d\u4f1a\u6709\u51fa\u73b0\u4e24\u79cd\u4e0d\u540c\u64cd\u4f5c\u5e8f\u5217\u5bf9\u5e94\u540c\u4e00\u4e2a\u7f51\u683c\u56fe\u4e86\u3002~~\u795e\u4ed9[137_345_2814](https://www.luogu.com.cn/user/27329)\u5df2\u7ecf\u6559\u4e86\u6211\u4e00\u4e2a\u7edd\u5999\u7684\u8bc1\u660e\uff0c\u53ef\u60dc\u6211\u61d2\u5f97\u5199\u4e0b\u6765\u4e86\uff08\u9003~~\n\n\u6211\u4eec\u5c06\u4e00\u4e2a\u5bfc\u81f4\u64cd\u4f5c\u5e8f\u5217\u51fa\u73b0\u4e0d\u540c\u7684\u4f4d\u7f6e\u79f0\u4e3a\u4e00\u4e2a\u62d0\u89d2\uff0c\u90a3\u4e48\u5f88\u660e\u663e\uff0c\u540c\u4e00\u5217\u6216\u540c\u4e00\u884c\u4e0d\u4f1a\u51fa\u73b0\u8d85\u8fc7\u4e00\u4e2a\u62d0\u89d2\u3002\u56e0\u4e3a\u5728 $(i,j)$ \u51fa\u73b0\u62d0\u89d2\uff0c\u4e5f\u5c31\u662f\u8fd9\u91cc\u5bfc\u81f4\u4e86 $i$ \u884c\uff0c$j$ \u5217\u6709\u4e24\u79cd\u4e0d\u540c\u7684\u64cd\u4f5c\u65b9\u5f0f\uff0c\u90a3\u4e48 $(i+1,j)$ \u548c $(i,j+1)$ \u5fc5\u7136\u90fd\u662f $0$ \uff08\u5426\u5219\u5e76\u4e0d\u80fd\u5bf9\u5e94\u4e24\u4e2a\u4e0d\u540c\u7684\u64cd\u4f5c\u65b9\u5f0f\uff09\u3002\n\n\u8bbe $f_i$ \u4e3a**\u94a6\u5b9a**\u4e86 $i$ \u4e2a\u62d0\u89d2\u7684\u7f51\u683c\u56fe\u7684\u6570\u91cf\u3002 $f_i$ \u662f\u5f88\u597d\u6c42\u7684\uff0c\u9009\u62e9 $i$ \u884c $i$ \u5217\u540e\u8fdb\u884c\u6392\u5217\u4e00\u4e0b\u5373\u53ef\n$$\nf_i = \\binom n i \\binom  m i i! (n+1)^{m-i} (m+1)^{n-i}\n$$\n\u8bbe $f'_i$ \u4e3a**\u94a6\u5b9a**\u4e86 $i$ \u4e2a\u62d0\u89d2\u7684\u64cd\u4f5c\u5e8f\u5217\u7684\u6570\u91cf\uff0c\u4e8e\u662f\u6211\u4eec\u77e5\u9053\n$$\nf_i' = 2^i f_i\n$$\n\u7136\u540e\u8bbe $g_i$ \u662f**\u6b63\u597d** $i$ \u4e2a\u62d0\u89d2\u7684\u64cd\u4f5c\u5e8f\u5217\u7684\u6570\u91cf\u3002\u53ef\u4ee5\u4e8c\u9879\u5f0f\u53cd\u6f14\u4e00\u4e0b\u6709 \n$$\nf_i' = \\sum_{j\\ge i} \\binom j i g_j \\Leftrightarrow g_i = \\sum_{j \\ge i} \\binom j i (-1)^{j-i} f_j'\n$$\n\u6211\u4eec\u8981\u6c42\u7684\u662f\n$$\n\\sum_{i\\ge 0} \\frac{g_i}{2^i}\n$$\n\u63a8\u5f0f\u5b50\uff1a\n$$\n\\begin{aligned}&=\\sum_{i\\ge 0} \\frac{g_i}{2^i}\\\\&=\\sum_{i\\ge 0} \\frac{1}{2^i} \\sum_{j\\ge i} \\binom j i (-1)^{j-i} f_j'\\\\&=\\sum_{i\\ge 0} \\frac{1}{2^i} \\sum_{j\\ge i} \\binom j i (-1)^{j-i} f_j2^j\\\\&=\\sum_{j \\ge 0} f_j \\sum_{i\\le j} \\binom j i (-1)^{j-i}2^{j-i}\\\\&=\\sum_{j \\ge 0} f_j (-1)^j\\end{aligned}\n$$\n\u6700\u540e\u662f\u4e00\u4e2a\u4e8c\u9879\u5f0f\u5b9a\u7406\u3002\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\n#define MAXN 500006\n#define P 998244353\nint n , m;\n\nint Pow( int x , int a ) {\n    int ret = 1;\n    while( a ) {\n        if( a & 1 ) ret = 1ll * ret * x % P;\n        x = 1ll * x * x % P , a >>= 1;\n    }\n    return ret;\n}\n\nint J[MAXN] , iJ[MAXN];\n\nint C( int a , int b ) {\n    return J[a] * 1ll * iJ[b] % P * iJ[a - b] % P;\n}\n\nint main() {\n    J[0] = iJ[0] = 1;\n    for( int i = 1 ; i < MAXN ; ++ i ) J[i] = J[i - 1] * 1ll * i % P , iJ[i] = Pow( J[i] , P - 2 );\n    cin >> n >> m;\n    int lim = min( n , m );\n    int c = 0 , res = 0;\n    for( int i = 0 , zjk ; i <= lim ; ++ i ) {\n        zjk = C( n , i ) * 1ll * C( m , i ) % P * J[i] % P * Pow( n + 1 , m - i ) % P * Pow( m + 1 , n - i ) % P;\n        if( c ) zjk = P - zjk;\n        c ^= 1;\n        res = ( res + zjk ) % P;\n    }\n    cout << res << endl;\n}\n```\n\n",
        "postTime": 1588908803,
        "uid": 63398,
        "name": "yijan",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 AT5143 \u3010[AGC035F] Two Histograms\u3011"
    },
    {
        "content": "\u8003\u8651\u4ec0\u4e48\u6837\u7684\u7ea6\u675f\u6761\u4ef6\u80fd\u4e0e\u5408\u6cd5\u7684\u65b9\u6848\u4e00\u4e00\u5bf9\u5e94\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u7b2c$x$\u884c\u548c\u7b2c$y$\u5217\uff0c$k_x=y,l_y=x-1$\u7684\u60c5\u51b5\u548c$k_x=y-1,l_y=x$\u7684\u60c5\u51b5\u662f\u4e00\u6837\u7684\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u5c06\u6240\u8981\u6c42\u7684\u8f6c\u5316\u4e3a\u6240\u6709\u4e0d\u5b58\u5728\u884c\u548c\u5217\u6ee1\u8db3$k_x=y,l_y=x-1$\u7684\u65b9\u6848\u6570\u3002\u53ef\u4ee5\u8bc1\u660e\uff0c\u8fd9\u4e0e\u5408\u6cd5\u7684\u65b9\u6848\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u3002\n\n\u90a3\u4e48\u8003\u8651\u5bb9\u65a5\u89e3\u51b3\uff0c\u679a\u4e3e\u6709\u591a\u5c11\u884c\u548c\u5217\u6ee1\u8db3\u4e0a\u9762\u7684\u9650\u5236\uff0c\u90a3\u5c31\u662f\uff1a\n$$\n\\sum_{i=0}^{min(n,m)}(-1)^iC_n^iC_m^ii!(m+1)^{n-i}(n+1)^{m-i}\n$$\n\u9884\u5904\u7406\u4e4b\u540e\u76f4\u63a5\u6c42\u5373\u53ef\uff0c\u590d\u6742\u5ea6$O(n)$\u3002\n\ncode\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define maxn 500010\n#define mod 998244353\nusing namespace std;\ntypedef long long ll;\nint read()\n{\n    int x=0,f=1;\n    char ch=getchar();\n    while(ch-'0'<0||ch-'0'>9){if(ch=='-') f=-1;ch=getchar();}\n    while(ch-'0'>=0&&ch-'0'<=9){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\nint n,m,mx,mn;\nint ci_n[maxn],ci_m[maxn];\nint fac[maxn],inv[maxn];\nint quick_pow(int x,int p)\n{\n    int an=1,po=x;\n    while(p)\n    {\n        if(p&1)  an=1ll*an*po%mod;\n        po=1ll*po*po%mod;\n        p>>=1;\n    }\n    return an;\n}\nint ans;\nvoid add(int &x,int y)\n{\n    x=(x+y>=mod)?x+y-mod:x+y;\n}\nint C(int x,int y)\n{\n    return 1ll*fac[x]*inv[y]%mod*inv[x-y]%mod;\n}\nint main()\n{\n    n=read();m=read();mx=max(n,m);mn=min(n,m);\n    fac[0]=1;\n    for(int i=1;i<=mx;i++)  fac[i]=1ll*fac[i-1]*i%mod;\n    inv[mx]=quick_pow(fac[mx],mod-2);\n    for(int i=mx-1;i>=0;i--)  inv[i]=1ll*inv[i+1]*(i+1)%mod;\n    ci_m[0]=ci_n[0]=1;\n    for(int i=1;i<=n;i++)  ci_m[i]=1ll*ci_m[i-1]*(m+1)%mod;\n    for(int i=1;i<=m;i++)  ci_n[i]=1ll*ci_n[i-1]*(n+1)%mod;\n    for(int i=0;i<=mn;i++)\n    {\n        int tmp=1ll*C(n,i)*C(m,i)%mod*fac[i]%mod*ci_m[n-i]%mod*ci_n[m-i]%mod;\n        add(ans,(i&1)?mod-tmp:tmp);\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n```",
        "postTime": 1583501092,
        "uid": 46396,
        "name": "justin_cao",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 AT5143 \u3010[AGC035F] Two Histograms\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u4e2a\u4e0e\u6240\u89c1\u9898\u89e3\u4e0d\u540c\u7684\u601d\u8def\u3002\u53ef\u80fd\u8f83\u4e3a\u590d\u6742\uff0c\u4f46\u672c\u4eba\u611f\u89c9\u66f4\u4e3a\u81ea\u7136\u3002\u6700\u540e\u7684\u5f0f\u5b50\u662f\u4e00\u6837\u7684\u3002\n\n\u8003\u8651\u5982\u4f55\u5224\u5b9a\u4e00\u4e2a\u7ed9\u5b9a\u7684\u7f51\u683c\u662f\u5426\u80fd\u901a\u8fc7\u64cd\u4f5c\u5f97\u5230\u3002\u6211\u4eec\u4ece\u4e0b\u5f80\u4e0a\u4f9d\u6b21\u786e\u5b9a\u64cd\u4f5c\u3002\u89c2\u5bdf\u7f51\u683c\u7684\u6700\u540e\u4e00\u884c\uff0c\u80fd\u53d1\u73b0\u53ef\u80fd\u5408\u6cd5\u7684\u7f51\u683c\u5177\u6709\u5982\u4e0b\u6027\u8d28\uff1a\uff08\u8fd9\u4e9b\u6027\u8d28\u548c\u4e0b\u6587\u63d0\u5230\u7684\u6027\u8d28\u90fd\u8f83\u4e3a\u663e\u7136\uff0c\u56e0\u6b64\u4e0d\u989d\u5916\u8fdb\u884c\u539f\u56e0\u7684\u8bf4\u660e\uff09\n1. \u6240\u6709 $2$ \u5e94\u5728\u6240\u6709 $0$ \u7684\u5de6\u8fb9\u3002\n2. \u8fd9\u4e00\u884c\u7684 $+1$ \u64cd\u4f5c\u4e00\u5b9a\u5ef6\u4f38\u5230\u4e86\u6700\u53f3\u7684 $2$ \u7684\u53f3\u4fa7\uff0c\u4f46\u5728\u6700\u5de6\u7684 $0$ \u7684\u5de6\u4fa7\u3002\u8fd9\u4e8c\u8005\u4e4b\u95f4\u4e00\u5b9a\u5168\u662f $1$\u3002\n3. \u4e00\u4e2a $2$ \u4f1a\u8feb\u4f7f\u5176\u6240\u5728\u7684\u5217\u7684 $+1$ \u64cd\u4f5c\u4ece\u7f51\u683c\u6700\u4e0a\u9762\u5ef6\u4f38\u81f3\u5f53\u524d\u8fd9\u4e00\u884c\u3002\u6211\u4eec\u79f0\u8fd9\u6837\u7684\u5217\u201c\u88ab\u9650\u5236\u201d\u3002\u540c\u65f6\uff0c\u82e5\u4e00\u4e2a $1$ \u7684\u5de6\u8fb9\u6709 $0$\uff0c\u90a3\u4e48\u5b83\u4e5f\u4f1a\u8feb\u4f7f\u5176\u6240\u5728\u5217\u7684 $+1$ \u64cd\u4f5c\u6709\u5982\u4e0a\u6027\u8d28\u3002\n\n\u4e00\u4e2a\u4f8b\u5b50\u5982\u56fe\u6240\u793a\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/umvhhb0l.png)\n\u56fe\u4e2d\u7ea2\u8272\u90e8\u5206\u5373\u4ee3\u8868\u201c\u88ab\u9650\u5236\u201d\u7684\u5217\u3002\u8fd9\u4e00\u884c\u7684 $+1$ \u64cd\u4f5c\u81f3\u5c11\u5e94\u5ef6\u4f38\u5230\u84dd\u8272\u5b9e\u7ebf\u90e8\u5206\uff0c\u81f3\u591a\u5ef6\u4f38\u5230\u84dd\u8272\u865a\u7ebf\u90e8\u5206\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u4e8c\u8005\u4e4b\u95f4\u7684\u67d0\u4e2a $1$ \u82e5\u672a\u88ab\u8be5\u884c $+1$ \u64cd\u4f5c\u8986\u76d6\uff0c\u5219\u4e5f\u4f1a\u4f7f\u5176\u6240\u5728\u5217\u201c\u88ab\u9650\u5236\u201d\u3002\u56e0\u6b64\u6211\u4eec\u5f3a\u5236\u8ba9\u8be5 $+1$ \u64cd\u4f5c\u5ef6\u4f38\u5230\u865a\u7ebf\u90e8\u5206\uff0c\u5c31\u4e0d\u4f1a\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\uff0c\u662f\u5bf9\u5176\u4ed6\u5c1a\u672a\u786e\u5b9a\u7684\u64cd\u4f5c\u9650\u5236\u6700\u5c11\u7684\u3002\n\n\u90a3\u4e48\u73b0\u5728\u6700\u540e\u4e00\u884c\u7684\u64cd\u4f5c\u5df2\u7ecf\u786e\u5b9a\u4e86\uff0c\u800c\u5b83\u5bf9\u4e8e\u5176\u4ed6\u64cd\u4f5c\u7684\u786e\u5b9a\u7684\u5f71\u54cd\uff0c\u4ec5\u4ec5\u662f\u8fd9\u4e9b\u201c\u88ab\u9650\u5236\u201d\u7684\u5217\u3002\n\n\u770b\u5411\u4e0b\u4e00\u4e2a\u884c\u3002\u5982\u679c\u7ed9\u5f53\u524d\u884c\u786e\u5b9a\u64cd\u4f5c\u65f6\uff0c\u5df2\u7ecf\u6709\u4e86\u4e00\u4e9b\u201c\u88ab\u9650\u5236\u201d\u7684\u5217\uff0c\u662f\u4ec0\u4e48\u60c5\u51b5\u5462\uff1f\u4e0a\u9762\u7684\u6027\u8d28\u90fd\u4f1a\u7ee7\u7eed\u5b58\u5728\uff0c\u4f46\u662f\u4f1a\u591a\u51fa\u4e00\u6761\uff1a\u5728\u5f53\u524d\u884c\u5185\uff0c\u5df2\u7ecf\u201c\u88ab\u9650\u5236\u201d\u7684\u5217\u53ea\u80fd\u662f $1$ \u6216 $2$\uff0c\u4e14\u8fd9\u4e9b $2$ \u4e00\u5b9a\u5728\u8fd9\u4e9b $1$ \u7684\u524d\u9762\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u5b9a\u4e49\u8fd9\u4e00\u884c\u7684**\u5206\u6bb5\u70b9**\uff1a\u5173\u6ce8\u4e0a\u8ff0\u7684 $2$ \u548c $1$ \u4e2d\uff0c\u6700\u53f3\u7684 $2$ \u548c\u6700\u5de6\u7684 $1$ \u4e4b\u95f4\u7684\u90e8\u5206\u3002\u5982\u679c\u5b83\u4eec\u4e4b\u95f4\u6ca1\u6709 $0$\uff0c\u79f0\u8fd9\u4e2a\u201c\u6700\u5de6\u7684 $1$\u201d\u4e3a**\u5206\u6bb5\u70b9**\uff1b\u5426\u5219\uff0c\u79f0\u8fd9\u4e9b $0$ \u4e2d**\u6700\u5de6**\u7684\u4e3a**\u5206\u6bb5\u70b9**\u3002\n\n\uff08\u82e5\u6700\u53f3\u7684 $2$ \u4e0d\u5b58\u5728\uff0c\u89c6\u5176\u5728\u6574\u884c\u7684\u5de6\u8fb9\uff1b\u6700\u5de6\u7684 $1$ \u4e0d\u5b58\u5728\u89c6\u4e3a\u5728\u6574\u884c\u53f3\u8fb9\uff09\n\n\u90a3\u4e48\uff0c\u5904\u5728**\u5206\u6bb5\u70b9**\u53ca\u5176\u53f3\u4fa7\u7684\u683c\u5b50\uff0c\u53ea\u80fd\u662f $0$ \u6216 $1$\uff1b\u5176\u5de6\u7684\u683c\u5b50\uff0c\u53ea\u80fd\u662f $1$ \u6216 $2$\u3002\u5e76\u4e14\uff0c\u5982\u679c\u53f3\u4fa7\u683c\u5b50\u662f $1$\uff0c\u4f1a\u9020\u6210\u6240\u5728\u5217\u201c\u88ab\u9650\u5236\u201d\uff1b\u5de6\u4fa7\u683c\u5b50\u4e3a $2$ \u540c\u7406\u3002\n\n\u6b64\u65f6\u8fdb\u884c\u4e00\u4e2a\u91cd\u8981\u89c2\u5bdf\uff1a\u5728\u5f53\u524d\u884c\uff0c\u5982\u679c\u4e00\u4e2a\u5217\u786e\u5b9a\u4e86\u201c\u88ab\u9650\u5236\u201d\u7684\u65f6\u95f4\uff08\u4e4b\u524d\u3001\u5728\u5f53\u524d\u884c\u65b0\u589e\u3001\u5c1a\u672a\uff09\uff0c\u53c8\u786e\u5b9a\u4e86\u5728\u5206\u6bb5\u70b9\u7684\u54ea\u4e00\u4fa7\uff08\u5de6\u3001\u53f3\uff09\uff0c\u5c31\u53ef\u4ee5\u552f\u4e00\u786e\u5b9a\u8fd9\u4e00\u5217\u5e94\u8be5\u662f\u54ea\u4e2a\u6570\u4e86\u3002\u4e5f\u5373\uff0c\u5f53\u524d\u884c\u7684\u6570\u5b57\uff0c\u548c\u5f53\u524d\u884c\u7684\u5206\u6bb5\u70b9\u4f4d\u7f6e+\u6bcf\u4e00\u5217\u7684\u201c\u88ab\u9650\u5236\u201d\u60c5\u51b5\uff0c\u6784\u6210\u4e00\u4e2a\u53cc\u5c04\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u5c1d\u8bd5\u8bbe\u8ba1\u4e00\u4e2a\u8fd9\u6837\u7684dp\uff1a\u8bb0 $dp_{i,j}$ \u8868\u793a\u5728\u7b2c $i$ \u884c\u4e4b\u540e\u586b\u6570\u7684\u65b9\u6848\u6570\uff0c\u4f7f\u5176\u786e\u5b9a\u7b2c $i$ \u884c\u4e4b\u540e\u7684\u64cd\u4f5c\u4f1a\u8ba9 $j$ \u4e2a\u5217\u201c\u88ab\u9650\u5236\u201d\u3002\n\n\u8003\u8651\u5237\u8868\u8f6c\u79fb\u3002\u679a\u4e3e\u65b0\u589e\u201c\u88ab\u9650\u5236\u201d\u5217\u6570 $k$\uff0c\u5e76\u5206\u7c7b\u8ba8\u8bba\u3002\n1. \u5206\u6bb5\u70b9\u6240\u5728\u5217\u662f\u4e00\u4e2a\u4e4b\u524d\u5df2\u7ecf\u201c\u88ab\u9650\u5236\u201d\u7684\u5217\u3002\n$$dp_{i-1,j+k}\\ \\leftarrow_+\\ dp_{i,j}\\times j\\times \\binom{m-j}{k}$$\n2. \u662f\u4e00\u4e2a\u672a\u201c\u88ab\u9650\u5236\u201d\u7684\u5217\u3002\u7ed9\u5b83\u586b\u4e0a0\u3002\n$$dp_{i-1,j+k}\\ \\leftarrow_+\\ dp_{i,j}\\times (m-j)\\times \\binom{m-j-1}{k}$$\n\n~~\u6211\u4eec\u7ec8\u4e8e\u83b7\u5f97\u4e86\u4e00\u4e2a\u591a\u9879\u5f0f\u65f6\u95f4\u7684\u7b97\u6cd5~~\u3002\u8003\u8651\u4e0a\u8ff0dp\u8fc7\u7a0b\u7684\u7ec4\u5408\u610f\u4e49\uff0c\u5c31\u662f\u5728\u6bcf\u4e00\u884c\u9009\u4e86\u4e00\u4e2a\u5206\u6bb5\u70b9\uff0c\u53c8\u7ed9\u6bcf\u4e00\u5217\u786e\u5b9a\u4e86\u5728\u54ea\u4e00\u884c\u9996\u6b21\u201c\u88ab\u9650\u5236\u201d\uff0c\u4ee5\u6b64\u552f\u4e00\u5bf9\u5e94\u4e00\u4e2a\u5408\u6cd5\u586b\u6570\u65b9\u6848\u3002\uff08~~\u60f3\u4e00\u60f3\uff0c\u4e3a\u4ec0\u4e48~~\uff09\u4f46\u662f\u6709\u4e00\u4e2a\u9650\u5236\uff1a\u5982\u679c\u7b2c $j$ \u5217\u88ab\u7b2c $i$ \u884c\u9009\u4e3a\u4e86\u5206\u6bb5\u70b9\uff0c\u5219\u5176\u4e0d\u80fd\u6070\u597d\u5728\u7b2c $i$ \u884c\u65f6\u9996\u6b21\u201c\u88ab\u9650\u5236\u201d\u3002\n\n\u7528\u751f\u6210\u51fd\u6570\u63cf\u8ff0\uff0c\u5219\u4e00\u4e2a\u884c\u7684\u751f\u6210\u51fd\u6570\u4e3a\uff1a\n$$\\sum_{i=0}(m-i+1)\\dfrac{x^i}{i!}=(m+1-x)e^x$$\n\u7ec4\u5408\u610f\u4e49\u662f\u8bf4\uff0c\u679a\u4e3e\u8fd9\u4e00\u884c\u9020\u6210\u7684\u201c\u9996\u6b21\u88ab\u9650\u5236\u201d\u7684\u5217\u6570 $i$\uff0c\u5219\u8fd9\u4e9b\u5217\u4e0d\u80fd\u88ab\u8fd9\u4e00\u884c\u9009\u4e3a\u5206\u6bb5\u70b9\uff0c\u4e8e\u662f\u9009\u5206\u6bb5\u70b9\u7684\u65b9\u6848\u6570\u662f $m+1-i$\u3002\uff08$+1$ \u7684\u539f\u56e0\u662f\u5206\u6bb5\u70b9\u53ef\u4ee5\u5728\u6574\u884c\u7684\u53f3\u8fb9\uff0c\u53ef\u4ee5\u770b\u5206\u6bb5\u70b9\u5b9a\u4e49\u5904\uff09\u3002\u800c\u6307\u6570\u578b\u751f\u6210\u51fd\u6570\u5c31\u5c06\u5217\u7684\u6807\u53f7\u5206\u914d\u7ed9\u4e86\u884c\u3002\n\n\u6240\u4ee5\u7b54\u6848\u5c31\u662f\uff1a\n$$\\left[\\dfrac{x^m}{m!}\\right][(m+1-x)e^x]^n\\times e^x$$\n\u6700\u540e\u5377\u4e00\u4e2a $e^x$\uff0c\u662f\u56e0\u4e3a\u53ef\u80fd\u6709\u7684\u5217\u6700\u540e\u4e5f\u6ca1\u6709\u201c\u88ab\u9650\u5236\u201d\uff0c\u5c06\u5b83\u4eec\u653e\u8fdb $e^x$ \u4e2d\u3002\n\n\u5316\u7b80\u5f97\n$$m!\\sum_{i=0}\\binom n i(-1)^i(m+1)^{n-i}\\dfrac{(n+1)^{m-i}}{(m-i)!}$$\n\u53ef\u4ee5 $O(n)$ \u8ba1\u7b97\u3002",
        "postTime": 1654779942,
        "uid": 89645,
        "name": "\u7384\u71d5\u672c\u71d5",
        "ccfLevel": 10,
        "title": "\u3010\u9898\u89e3\u3011[AGC035F] Two Histograms"
    },
    {
        "content": "### \u9898\u610f\u7b80\u8ff0\n\n\u73b0\u5728\u4f60\u6709\u4e00\u4e2a $n\\times m$ \u7684\u7f51\u683c\uff0c\u4f60\u4f1a\u6309\u987a\u5e8f\u8fdb\u884c\u505a\u5982\u4e0b\u64cd\u4f5c\uff1a\n\n+ \u628a\u6240\u6709\u683c\u5b50\u4e2d\u7684\u6570\u90fd\u8d4b\u4e3a $0$\u3002\n+ \u5bf9\u6bcf\u4e00\u884c\u9009\u4e00\u4e2a $k_i$ $(0\\leq k_i\\leq m)$\uff0c\u5e76\u628a\u8fd9\u4e00\u884c\u6700\u5de6\u8fb9\u7684 $k_i$ \u4e2a\u683c\u5b50 $+1$\u3002\n+ \u5bf9\u6bcf\u4e00\u5217\u9009\u4e00\u4e2a $l_i$ $(0\\leq l_i\\leq n)$, \u5e76\u628a\u8fd9\u4e00\u5217\u6700\u4e0a\u9762\u7684 $l_i$ \u4e2a\u683c\u5b50 $+1$\u3002\n\n\u7ecf\u8fc7\u8fd9\u4e9b\u64cd\u4f5c\u540e\uff0c\u4f60\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u53ea\u5305\u542b $0$\uff0c$1$\uff0c$2$ \u7684\u7f51\u683c\u3002\u8bf7\u4f60\u6c42\u51fa\uff0c\u5728\u6240\u6709\u53ef\u80fd\u7684\u64cd\u4f5c\u4e0b\uff0c\u53ef\u4ee5\u5f97\u5230\u591a\u5c11\u672c\u8d28\u4e0d\u540c\u7684\u7f51\u683c\u3002\n\n\u4e24\u4e2a\u7f51\u683c\u88ab\u79f0\u4e3a\u672c\u8d28\u4e0d\u540c\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728\u81f3\u5c11\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u4e24\u4e2a\u7f51\u683c\u5bf9\u5e94\u4f4d\u7f6e\u4e0a\u7684\u6570\u4e0d\u540c\u3002\n\n\u8f93\u51fa\u7b54\u6848\u5bf9 $998244353$ \u53d6\u6a21\u7684\u7ed3\u679c\u3002\n\n### \u601d\u8def\u5206\u6790\n\n\u8003\u8651\u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f1a\u51fa\u73b0\u4e24\u4e2a\u7f51\u683c\u867d\u7136\u672c\u8d28\u76f8\u540c\uff0c\u4f46\u662f\u586b\u5165\u7684 $k,l$ \u4e0d\u540c\u3002\u4ee5\u4e0b\u56fe\u4e3a\u4f8b\uff1a\n\n```\n0 0 1 1\n0 0 1 1\n1 1 1 1\n1 1 1 1\n```\n\n\u663e\u7136\uff0c\u5b58\u5728\u5f88\u591a\u7ec4 $l$ \u548c $k$ \u53ef\u4ee5\u6784\u6210\u4e0a\u56fe\u3002\u4f46\u662f\uff0c\u6211\u4eec\u8ba4\u4e3a $k_3=4,k_4=4,l_3=2,l_4=2$ \u662f\u8fd9\u4e2a\u56fe\u6848\u5bf9\u5e94\u7684\u586b\u6cd5\u3002\u5b9a\u4e49\u4e00\u4e2a**\u5408\u6cd5\u7684\u586b\u6cd5**\u4e2d\u4e0d\u5b58\u5728 $k_i=j-1,l_j=i$ \u7684\u60c5\u51b5\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u5c06\u586b\u6cd5\u53d8\u4e3a\u5408\u6cd5\u7684\u65b9\u5f0f\u662f\uff0c\u4f9d\u6b21\u8003\u5bdf\u6bcf\u4e00\u4e2a $k_i$\uff0c\u82e5\u4e0d\u5408\u6cd5\uff0c\u5c31\u6267\u884c $l_{k_i}\\leftarrow l_{k_i}-1,k_i\\leftarrow k_i+1$\u3002\u76f4\u5230\u5408\u6cd5\u4e3a\u6b62\u3002\u663e\u7136\u8fd9\u6837\u7684\u8c03\u6574\u53ea\u4f1a\u7ecf\u5386\u6709\u9650\u6b65\uff0c\u8fd9\u662f\u56e0\u4e3a\u6bcf\u6b21\u8c03\u6574\u540e $k_i$ \u90fd\u4f1a\u53d8\u5927 $1$\u3002\u90a3\u4e48\uff0c\u6240\u6709\u7684\u586b\u6cd5\u90fd\u88ab\u6211\u4eec\u552f\u4e00\u8f6c\u5316\u6210\u4e86\u4e00\u4e2a**\u5408\u6cd5\u7684\u586b\u6cd5**\uff0c\u4e14\u8f6c\u5316\u524d\u540e\u5176\u6240\u6784\u6210\u7684\u6700\u7ec8\u56fe\u6848\u662f\u4e00\u6837\u7684\u3002\u672c\u8d28\u601d\u60f3\u662f\u5229\u7528\u4ee3\u8868\u5143\u53bb\u91cd\u3002\n\n\u73b0\u5728\uff0c\u6211\u4eec\u8981\u8bf4\u660e\u5bf9\u4e8e\u4e24\u4e2a\u4e0d\u540c\u7684**\u5408\u6cd5\u7684\u586b\u6cd5**\uff0c\u5b83\u4eec\u6700\u7ec8\u5f62\u6210\u7684\u56fe\u6848\u4e0d\u540c\u3002\u540c\u65f6\uff0c\u5bf9\u4e8e\u4e24\u4e2a\u5f62\u6210\u76f8\u540c\u56fe\u6848\u7684\u586b\u6cd5\uff0c\u5b83\u4eec\u5f62\u6210\u7684**\u5408\u6cd5\u7684\u586b\u6cd5**\u76f8\u540c\u3002\u6362\u53e5\u8bdd\u6765\u8bf4\uff0c\u56fe\u6848\u548c**\u5408\u6cd5\u7684\u586b\u6cd5**\u4e00\u4e00\u5bf9\u5e94\u3002\u6ce8\u610f\u5230\u8fd9\u4e24\u4e2a\u547d\u9898\u4e92\u4e3a\u9006\u5426\u547d\u9898\uff0c\u6545\u53ea\u8bc1\u660e\u7b2c\u4e00\u4e2a\u3002\n\n\u7531\u4e8e\u586b\u6cd5\u4e0d\u540c\uff0c\u6545\u4e00\u5b9a\u5b58\u5728\u4e00\u5bf9 $l_i$ \u6216 $k_i$ \u586b\u5165\u7684\u6570\u4e0d\u540c\u3002\u4e0d\u59a8\u8bbe\u5b58\u5728 $l_i$ \u586b\u5165\u7684\u6570\u4e0d\u540c\u3002\u90a3\u4e48\u6211\u4eec\u627e\u5230\u6700\u5c0f\u7684 $x$ \u4f7f\u5f97\u4e24\u79cd\u65b9\u6848\u586b\u5165\u7684 $l_x$ \u4e0d\u540c\uff0c\u79f0\u7b2c\u4e00\u79cd\u65b9\u6848\u586b\u5165\u7684\u6570\u4e3a $l_x$\uff0c\u7b2c\u4e8c\u79cd\u65b9\u6848\u586b\u5165\u7684\u6570\u4e3a $l'_x$\uff0c\u4e0d\u59a8\u8bbe $l_x<l'_x$\u3002\u90a3\u4e48\uff0c\u6b64\u65f6\u4e24\u4e2a\u56fe\u6848\u5982\u56fe\u6240\u793a\uff1a\n\n```\n? ? ? 1 ?\t\t? ? ? 1 ?\n? ? ? 1 ?\t\t? ? ? 1 ?\n? ? ? ? ?\t\t? ? ? 1 ?\n? ? ? * ?\t\t? ? ? 1 ?\n? ? ? ? ?\t\t? ? ? ? ?\n case 1   \t\t case 2\n```\n\n\u8003\u5bdf $(l'_x,x)$\uff0c\u4e0a\u56fe\u4e2d\u7684 ```*```\u3002\u5728\u7b2c\u4e00\u79cd\u586b\u6cd5\u4e2d\uff0c\u8fd9\u4e00\u4e2a\u683c\u5b50\u6700\u7ec8\u7684\u503c $\\le 1$\uff1b\u5728\u7b2c\u4e8c\u79cd\u586b\u6cd5\u4e2d\uff0c\u8fd9\u4e00\u4e2a\u683c\u5b50\u6700\u7ec8\u7684\u503c $\\ge 1$\u3002\u7531\u4e8e\u4e24\u79cd\u65b9\u6848\u7684\u6700\u7ec8\u56fe\u6848\u5e94\u8be5\u76f8\u540c\uff0c\u6240\u4ee5\uff0c\u8fd9\u4e2a\u683c\u5b50\u6700\u7ec8\u7684\u503c\u53ea\u80fd\u662f $1$\uff0c\u5373 $k_{l'_x}\\ge x,k'_{l'_x}\\le x-1$\u3002\u53c8\u7531\u4e8e\u8fd9\u4e24\u79cd\u586b\u6cd5\u90fd\u5fc5\u987b\u662f**\u5408\u6cd5\u7684\u586b\u6cd5**\uff0c\u90a3\u4e48 $k'_{l'_x}\\not =x-1$\uff0c\u5373 $k'_{l'_x}< x-1$\u3002\u6b64\u65f6\u4e24\u4e2a\u56fe\u6848\u5982\u56fe\u6240\u793a\uff1a\n\n```\n? ? ? 1 ?\t\t? ? ? 1 ?\n? ? ? 1 ?\t\t? ? ? 1 ?\n? ? ? ? ?\t\t? ? ? 1 ?\n1 1 1 1 1\t\t1 1 * 1 ?\n? ? ? ? ?\t\t? ? ? ? ?\n case 1   \t\t case 2\n```\n\n\u6b64\u65f6\u518d\u8003\u5bdf $(l'_x,x-1)$\uff0c\u5373\u7b2c\u4e8c\u79cd\u586b\u6cd5\u4e2d\u5728\u7b2c $l'_x$ \u8fd9\u4e00\u884c\u7684\u7f1d\u9699\u4e2d\u6700\u9760\u53f3\u7684\u4f4d\u7f6e\uff0c\u4e0a\u56fe\u4e2d\u7684 ```*```\u3002\u7531\u4e8e $x$ \u662f\u7b2c\u4e00\u4e2a\u4f7f\u5f97 $l$ \u4e0d\u540c\u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5 $l_{x-1}=l'_{x-1}$\u3002\u4e24\u79cd\u586b\u6cd5\u539f\u672c\u586b\u5165\u7684\u503c\u4e0d\u540c\uff0c\u518d\u52a0\u4e0a\u4e00\u4e2a\u76f8\u540c\u7684\u503c $0/1$\uff0c\u56e0\u6b64\uff0c\u4e24\u79cd\u586b\u6cd5\u5728\u8fd9\u4e00\u683c\u5b50\u5185\u7684\u503c\u4e00\u5b9a\u4e0d\u540c\uff0c\u63a8\u51fa\u77db\u76fe\uff0c\u8bc1\u6bd5\u3002\n\n\u81f3\u6b64\uff0c\u95ee\u9898\u8f6c\u5316\u4e3a\u5bf9**\u5408\u6cd5\u7684\u586b\u6cd5**\u8fdb\u884c\u8ba1\u6570\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u6362\u4e00\u4e2a\u89d2\u5ea6\uff0c\u7edf\u8ba1\u6070\u597d\u6709 $i$ \u4e2a\u4f4d\u7f6e\u4e0d\u5408\u6cd5\u7684\u65b9\u6848\u6570\uff0c\u518d\u8fdb\u884c\u7d2f\u52a0\u3002\u5bb9\u6613\u53d1\u73b0\u4e0d\u5408\u6cd5\u4f4d\u7f6e\u4e4b\u95f4\u7684\u884c\u5750\u6807\u4e0e\u5217\u5750\u6807\u90fd\u4e0d\u76f8\u540c\u3002\u8fd9\u4e00\u8fc7\u7a0b\u53ef\u4ee5\u501f\u52a9\u5bb9\u65a5\u8f6c\u5316\u4e3a\u6c42\u94a6\u5b9a\u6709 $i$ \u4e2a\u4f4d\u7f6e\u4e0d\u5408\u6cd5\u7684\u65b9\u6848\u6570\uff08\u4e0d\u5408\u6cd5\u4f4d\u7f6e\u5373\u4e3a $k_i=j-1,l_j=i$ \u4e2d\u7684 $(i,j)$\uff09\u3002\u5177\u4f53\u6765\u8bf4\uff1a\n$$\nAns=\\sum_{i=0}^{\\min\\{n,m\\}}(-1)^i\\binom{n}{i}\\binom{m}{i}i!(m+1)^{n-i}(n+1)^{m-i}\n$$\n\u4e0a\u5f0f\u610f\u4e3a\u5148\u6311\u51fa\u4e0d\u5408\u6cd5\u4f4d\u7f6e\u7684\u884c\u5750\u6807\u548c\u5217\u5750\u6807\uff0c\u518d\u8fdb\u884c\u7ec4\u5408\uff0c\u5176\u4f59\u4f4d\u7f6e\u968f\u4fbf\u586b\u3002\u603b\u590d\u6742\u5ea6 $O(n)$\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nconst int LIM=1e6;\nconst int mod=998244353;\nint jc[1000005],jcny[1000005];\nint qkp(int x,int k){\n\tint ret=1;\n\twhile(k){\n\t\tif(k&1) ret=ret*x%mod;\n\t\tk>>=1;\n\t\tx=x*x%mod;\n\t}\n\treturn ret;\n}\nint C(int x,int y){return jc[x]*jcny[y]%mod*jcny[x-y]%mod;}\nsigned main(){\n\tint n,m;\n\tcin>>n>>m;\n\tjc[0]=1;\n\tfor(int i=1;i<=LIM;i++) jc[i]=jc[i-1]*i%mod;\n\tjcny[LIM]=qkp(jc[LIM],mod-2);\n\tfor(int i=LIM-1;i>=0;i--) jcny[i]=jcny[i+1]*(i+1)%mod;\n\tint ans=0;\n\tfor(int i=0;i<=min(n,m);i++) ans=(ans+((i&1)?(-1):1)*C(n,i)%mod*C(m,i)%mod*jc[i]%mod*qkp(m+1,n-i)%mod*qkp(n+1,m-i)%mod+mod)%mod;\n\tcout<<ans;\n\treturn 0;\n}\n```\n\n\n\n",
        "postTime": 1684656513,
        "uid": 455093,
        "name": "Schi2oid",
        "ccfLevel": 7,
        "title": "[AGC035F] Two Histograms \u9898\u89e3"
    },
    {
        "content": "\n**\u7b80\u8981\u9898\u610f\uff1a**  \n \u6709\u4e00\u4e2a $n \\times m\\space (1 \\le n,m \\le 5 \\times 10^5)$ \u7684\u68cb\u76d8\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u884c\u548c\u6bcf\u4e00\u5217\u9009\u62e9\u5f53\u524d\u884c\u548c\u5217\u7684\u4e00\u4e2a\u683c\u5b50\uff0c\u5e76\u5c06\u4ece\u8fd9\u4e2a\u884c\u6216\u5217\u7684\u8d77\u59cb\u70b9\u5230\u8fd9\u4e2a\u683c\u5b50\u5168\u90e8             \t  $+1$\uff0c\u5f97\u5230\u7684\u68cb\u76d8\u672c\u8d28\u4e0d\u540c\u7684\u6709\u591a\u5c11\u79cd\u3002\n\n**Solution**:  \n\u968f\u4fbf\u64cd\u4f5c\u4e00\u4e0b\uff0c\u5bb9\u6613\u53d1\u73b0\u5f88\u5bb9\u6613\u5c31\u5c06\u67d3\u51fa\u91cd\u590d\u989c\u8272\u68cb\u76d8\u6765\u3002\u91cd\u590d\u7684\u539f\u56e0\u5728\u4e8e\u4e00\u884c\u4e00\u5217\u4ea4\u5728\u4e86\u4e00\u8d77\u5e76\u4e14\u4e0d\u518d\u5411\u4e0b\u5ef6\u7533\uff0c\u800c\u6b64\u65f6\u8fd9\u79cd\u67d3\u8272    \t  \u60c5\u51b5\u5bf9\u5e94\u4e86\u4e24\u79cd\u67d3\u8272\u7684\u65b9\u6848\uff0c\u6240\u4ee5\u6211\u4eec\u89c4\u5b9a\u5f53\u4e14\u4ec5\u5f53\u884c\u67d3\u5230\u8fd9\u91cc\u624d\u662f\u5408\u6cd5\u7684\uff0c\u660e\u663e\u5730\uff0c\u8fd9\u6837\u89c4\u5b9a\u4e4b\u540e\u4e0d\u4f1a\u5bf9\u7b54\u6848\u4ea7\u751f\u5e72\u6270\u3002\u8fd9\u6837\u5bf9\u91cd\u590d\u7684\u4e1c\u897f\u89c4   \t  \u5b9a\u4e4b\u540e\uff0c\u4e0d\u96be\u60f3\u5230\u4f7f\u7528\u5bb9\u65a5\uff08\u4e8c\u9879\u5f0f\u53cd\u6f14\uff09\u6765\u7edf\u8ba1\u65b9\u6848\uff0c\u6211\u4eec\u8bbe $f(i)$ \u8868\u793a\u89c4\u5b9a $i$ \u4e2a\u4f4d\u7f6e\u4e0d\u5408\u6cd5\uff0c\u5176\u4f59\u968f\u4fbf\u586b\u3002\u90a3\u4e48 $f(i)$ \u65b9\u4fbf\u8868\u793a\u51fa\u6765\u3002\n$$\nf(i) = i! {n \\choose i} {m \\choose i} (m + 1)^{n - i}(n + 1)^{m - i}\n$$\n \u5177\u4f53\u610f\u4e49\u662f\uff0c\u6211\u4eec\u5148\u968f\u4fbf\u9009\u5c06\u8981\u4ea7\u751f\u4e0d\u5408\u6cd5\u7684\u884c\u548c\u5217\uff0c\u7136\u540e\u5229\u7528 $i!$ \u5bf9\u884c\u548c\u5217\u8fdb\u884c\u914d\u5bf9\uff0c\u8fd9\u6837\u5bf9\u4e8e\u9009\u53d6\u7684\u884c\u548c\u5217\u800c\u8a00\uff0c\u5176\u7ed3\u679c\u5df2\u7ecf\u56fa\u5b9a\uff0c\u518d\u5bf9\u5269\u4e0b \t  \u7684\u884c\u548c\u5217\u8fdb\u884c\u9009\u53d6\u3002\u6709\u4e86\u8fd9\u4e00\u4e2a\u90a3\u4e48 $g(i)$ \u5c31\u4f1a\u662f\u6070\u597d $i$ \u4e2a\u4f4d\u7f6e\u4e0d\u5408\u6cd5\uff0c\u7b54\u6848\u5c06\u4f1a\u662f $g(0)$ \u3002\u5176\u6ee1\u8db3 $f(i) = \\sum_{j = i}^n {j \\choose i}g(j)$ \uff0c\u6240\u4ee5 $g(0)$ \u53ef\u7531\u53cd\u6f14\u5f97\t  \u51fa $g(0) = \\sum_{i = 0}^n (-1)^i{n \\choose 0} f(i)$\u3002\n\n**Summary**: \u4e2a\u4eba\u8ba4\u4e3a\u6b64\u9898\u4e2d\u89c4\u5b9a**\u5408\u6cd5**\u65b9\u6848\u5f88\u6709\u4ef7\u503c\uff0c\u8fd9\u662f\u5bf9\u4e8e\u91cd\u590d\u65b9\u6848\u7684\u4e00\u4e2a\u5f88\u7ecf\u5178\u7684\u5904\u7406\u3002",
        "postTime": 1614484355,
        "uid": 114181,
        "name": "ChasingAft",
        "ccfLevel": 7,
        "title": "[AT5143]Two Histograms \u9898\u89e3"
    },
    {
        "content": "### 2020.5.8.Upd: \u53c2\u89c1\u8bc4\u8bba\u533a\u3002\n\n---\n\n\u4e00\u9053\u6709\u8da3\u7684\u8ba1\u6570\u9898\u3002\n\n\u9996\u5148\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u5982\u679c\u5c31\u8fd9\u6837\u968f\u4fbf\u653e\u7684\u8bdd\uff0c\u54ea\u4e9b\u65b9\u6848\u4f1a\u91cd\u590d\u3002\n\n\u6211\u4eec\u8ba4\u4e3a\u64cd\u4f5c\u662f\u6709\u5e8f\u7684\u3002\u6240\u4ee5\u73b0\u5728\u5c31\u662f\u8981\u7ed9\u64cd\u4f5c\u53bb\u91cd\u3002\n\n\u53d1\u73b0\u53ea\u6709\u91cd\u53e0\u624d\u4f1a\u5f15\u8d77\u91cd\u590d\u8ba1\u6570\uff1b\u66f4\u8fdb\u4e00\u6b65\u5730\uff0c\u53d1\u73b0\u53ea\u6709\u5982\u4e0b\u60c5\u51b5\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/pscuww1m.png)\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/c4lfoay5.png)\n\n\u8fd9\u6837\u4f1a\u6709\u4e24\u4e2a\u65b9\u6848\u91cd\u590d\u3002\n\n\u73b0\u5728\u6211\u4eec\u7684\u76ee\u6807\u662f\u8ba1\u7b97\u6ca1\u6709\u91cd\u590d\u7684\u65b9\u6848\u6570\uff0c\u5373\u65b9\u6848\u4e0e\u76ee\u6807\u77e9\u9635\u4e00\u4e00\u5bf9\u5e94\u3002\n\n\u8003\u8651\u5bb9\u65a5\u3002\n\n\u5219\u6839\u636e\u4e00\u4e2a\u53cd\u6f14\uff08\u5f53\u7136\u5927\u53ef\u4e0d\u5fc5\u8fd9\u4e00\u6b65\uff09\uff0c\u8bbe**\u81f3\u5c11\u6709 $i$ \u4e2a\u4e0a\u8ff0\u5c40\u9762\u7684\u7b54\u6848\u6570\u4e3a $f(i)$,\u800c\u6b63\u597d\u6709 $i$ \u4e2a\u7684\u7b54\u6848\u6570\u4e3a $g(i)$**\u3002\n\n\u4e0a\u8ff0\u5c40\u9762\u5c31\u662f\u6307\u56fe\u7247\u4e2d\u51fa\u73b0\u7684\u5c40\u9762\uff0c\u4e24\u4e2a\u957f\u6761\u6070\u597d\u4ea4\u4e8e\u4e00\u70b9\u3002\n\n\u5219\u663e\u7136\u6709\u591a\u5c11\u4e0a\u8ff0\u5c40\u9762\u5c31\u6709\u591a\u5c11\u91cd\u590d\uff0c\u5219\n\n$$f(s)=\\sum_{i = s}^{\\min(n,m)}{g(i)}$$\n\n\u4e3a\u4ec0\u4e48\u4e0a\u754c\u53d6\u5230 $\\min(n,m)$ \u5462\uff1f\u662f\u56e0\u4e3a\u4e00\u5bf9\u6a2a\u7eb5\u7684\u957f\u6761\u5bf9\u5e94\u7740\u4e00\u4e2a\u5c40\u9762\uff0c\u6bd5\u7adf\u4e0d\u8981\u5fd8\u8bb0**\u5b83\u4eec\u662f\u4e0d\u80fd\u51fa\u5934\u7684**\u3002\n\n\u53cd\u6f14\u5f97\n\n$$g(s)=\\sum_{i = s}^{\\min(n,m)}{(-1)^{i - s}f(i)}$$\n\n\u5de6\u8fb9 $s$ \u53d6 $0$ \u5f97\u5230\n\n$$g(0)=\\sum_{i = 0}^{\\min(n,m)}{(-1)^if(i)}$$\n\n\u5f53\u7136\u4e5f\u53ef\u4ee5\u4e0d\u63a8\u5f0f\u5b50~~\u5176\u5b9e\u662f\u80cc\u5f0f\u5b50~~\uff0c\u7528\u5bb9\u65a5\u89e3\u91ca\u3002\u603b\u65b9\u6848\u4e2d\u6070\u597d\u6709 $0$ \u4e2a\u91cd\u590d\u7684\u53d6\u6cd5\u4e2d\u6709\u81f3\u5c11 $0$ \u4e2a\u7684\u51cf\u53bb\u81f3\u5c11 $1$ \u4e2a\u7684\u518d\u52a0\u4e0a\u81f3\u5c11 $2$ \u4e2a\u7684...\u5c31\u662f\u6070\u597d $0$ \u4e2a\u7684\u4e86\u3002\n\n\u73b0\u5728\u8003\u8651\u8ba1\u7b97\u51fa $f(i)$\u3002\n\n\u56e0\u4e3a\u8fd9\u662f\u201c\u81f3\u5c11\u201d\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u53d6 $i$ \u4e2a\u91cd\u590d\u7684\uff0c\u7136\u540e\u5269\u4e0b\u968f\u4fbf\u53d6\u3002\n\n\u5148\u7ed9\u5f0f\u5b50\uff0c\u518d\u89e3\u91ca\u3002\n\n$$f(i)=\\binom n i \\binom m i i! (m + 1)^{n - i}(n + 1)^{m - i}$$\n\n\u9996\u5148\u6211\u4eec\u679a\u4e3e\u53d6\u54ea\u4e9b\u884c\u5217\u5ef6\u4f38\u5e76\u76f8\u4ea4\u3002\u8fd9\u5c31\u662f $\\binom n i\\binom m i$\n\n\u7136\u540e\u5b83\u4eec\u5982\u4f55\u914d\u5bf9\u5462\uff1f\u4e3a\u4f55\u4e0d\u662f $(i!)^2$? \u56e0\u4e3a\u5bf9\u4e8e**\u884c\u6216\u5217\u4e2d\u7684\u4e00\u65b9\u56fa\u5b9a**\u540e\u53e6\u4e00\u65b9\u5c31\u662f\u4e00\u4e2a\u5168\u6392\u5217\u4e86\u3002\u8fd9\u5c31\u662f $i!$\u3002\n\n\u5269\u4e0b\u7684\u884c\u4e2d\uff0c\u53ef\u4ee5\u9009\u62e9\u4e0d\u5ef6\u4f38\uff0c\u6216\u5ef6\u4f38 $1-m$ \u683c\uff0c\u5171 $n - i$ \u884c\uff0c\u5c31\u662f $(m + 1)^{n - i}$\u3002\n\n\u5217\u4e5f\u7c7b\u4f3c\uff0c\u5408\u8d77\u6765\u5c31\u662f $(m + 1)^{n - i}(n + 1)^{m - i}$\u3002\n\n\u4e8e\u662f\u53ef\u4ee5 $O(n)$ \u9884\u5904\u7406\u9636\u4e58\uff0c\u9006\u5143\uff0c $(m + 1)$ \u548c $(n + 1)$ \u7684\u5e42\uff0c\u7136\u540e\u5c31\u7528\u4e0a\u9762\u7684\u5f0f\u5b50\u7b97\u5373\u53ef\u3002\n\n\u603b\u7684\u5c31\u662f $O(n)$\u3002\n\n\u8981\u6ce8\u610f\u4e0a\u754c\uff0c\u662f $\\min(n,m)$,$\\max(n,m)$ \u8fd8\u662f $n,m$\uff0c\u5404\u4e2a\u5730\u65b9\u4e0d\u540c\u3002\n\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n#include <algorithm>\n\ninline int read() {\n\tint x = 0, f = 1; char ch = getchar();\n\twhile(ch > '9' || ch < '0') { if(ch == '-') f = -1; ch = getchar(); }\n\tdo x = x * 10 + ch - 48, ch = getchar(); while(ch >= '0' && ch <= '9');\n\treturn x * f;\n}\n\ntypedef long long ll;\nconst int MAXN = 500001;\nconst int mod = 998244353;\n\nint n,m;\nll fac[MAXN],ifac[MAXN];\nll pown[MAXN],powm[MAXN];\n\nll C(int n,int m) {\n\treturn fac[n] * ifac[m] % mod * ifac[n - m] % mod;\n}\n\nint main() {\n\tn = read(), m = read();\n\tfac[0] = 1;\n\tfor(int i = 1;i <= n || i <= m;i++) fac[i] = (fac[i - 1] * i) % mod;\n\tifac[0] = ifac[1] = 1;\n\tfor(int i = 2;i <= n || i <= m;i++) ifac[i] = ((mod - mod / i) * ifac[mod % i]) % mod;\n\tfor(int i = 2;i <= n || i <= m;i++) ifac[i] = (ifac[i - 1] * ifac[i]) % mod;\n\tpown[0] = powm[0] = 1;\n\tfor(int i = 1;i <= m;i++) pown[i] = (pown[i - 1] * (n + 1)) % mod;\n\tfor(int i = 1;i <= n;i++) powm[i] = (powm[i - 1] * (m + 1)) % mod;\n\tll ans = 0;\n\tfor(int i = 0;i <= n && i <= m;i++) {\n\t\tll res = (C(n,i) * C(m,i)) % mod;\n\t\tres = res * fac[i] % mod;\n\t\tres = res * pown[m - i] % mod;\n\t\tres = res * powm[n - i] % mod;\n\t\tif(i & 1) ans = (ans + mod - res) % mod;\n\t\telse ans = (ans + res) % mod;\n\t}\n\tstd::printf(\"%lld\\n\",ans);\n\treturn 0;\n}\n\n```",
        "postTime": 1587738321,
        "uid": 219595,
        "name": "Vocalise",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 AT5143 \u3010[AGC035F] Two Histograms\u3011"
    }
]