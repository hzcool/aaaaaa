[
    {
        "content": "# [[ABC255G] Constrained Nim](https://www.luogu.com.cn/problem/AT_abc255_g) Solution\n\n[TOC]\n\n## [\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u6233\u6b64\u8fdb\u5165](http://blog.tsawke.com?t=ABC255G)\n\n## \u9898\u9762\n\n\u4e00\u822c Nim \u6e38\u620f\u57fa\u7840\u4e0a\u589e\u52a0 $ m $ \u6761\u9650\u5236\uff0c\u9650\u5236\u5f53\u77f3\u5b50\u6570\u4e3a $ x_i $ \u65f6\u4e0d\u80fd\u62ff\u8d70\u5176\u4e2d\u7684 $ y_i $ \u4e2a\u3002\n\n## Solution\n\n\u663e\u7136\u535a\u5f08\u8bba\uff0c\u8003\u8651 SG\u51fd\u6570\u3002Nim \u6e38\u620f\u6807\u51c6\u5957\u8def\uff0c\u5bf9\u4e8e\u591a\u4e2a\u77f3\u5b50\u5806\u6c42\u51fa\u6bcf\u4e2a\u77f3\u5b50\u5806\u77f3\u5b50\u6570 $ a_i $ \u7684 $ SG(a_i) $\uff0c\u82e5 $ \\bigoplus_{i = 1}^n SG(a_i) = 0 $ \u5219\u5148\u624b\u5fc5\u8f93\uff0c\u53cd\u4e4b\u5fc5\u80dc\u3002\u5173\u4e8e SG\u51fd\u6570 \u7684\u8be6\u89e3\uff1a[SG\u51fd\u6570\u5b66\u4e60\u7b14\u8bb0](http://blog.tsawke.com?t=SG)\u3002\n\n\u672c\u9898\u7684\u533a\u522b\u5373\u4e3a $ m $ \u6761\u9650\u5236\uff0c\u8003\u8651\u5982\u4f55\u5904\u7406\u3002\u663e\u7136\u4e00\u822c Nim \u6e38\u620f\u7684 SG \u51fd\u6570\u6709\u8f6c\u79fb $ SG(i) = \\operatorname{mex}\\{SG(j) \\mid j \\in [1, i - 1]\\} $\uff0c\u672c\u9898\u7684\u533a\u522b\u4e0d\u96be\u60f3\u5230\u5c31\u662f\u5728\u4e00\u822c\u7684 SG\u51fd\u6570 \u57fa\u7840\u4e0a\uff0c\u5728\u6c42 $ \\operatorname{mex} $ \u7684\u65f6\u5019\u9700\u8981\u4ece\u4e2d\u53bb\u6389\u4e00\u4e9b\u503c\uff0c\u4e5f\u5c31\u662f\u53bb\u6389 $ SG(x_i) $ \u8f6c\u79fb\u4e2d\u7684 $ SG(x_i - y_i) $\u3002\u4e25\u8c28\u70b9\u53d9\u8ff0\u5c31\u662f $ SG(i) = \\operatorname{mex}\\{SG(j) \\mid j \\in [1, i - 1] \\land (i, j) \\neq (x_k, x_k - y_k), k \\in[1, m] \\} $\u3002\u8003\u8651\u7ef4\u62a4\uff0c\u663e\u7136\u503c\u57df\u8fc7\u5927\u65e0\u6cd5\u786c\u505a\u3002\u53d1\u73b0\u6bcf\u6b21\u4ece\u4e2d\u53bb\u6389\u4e00\u4e9b\u503c\u540e\uff0c$ \\operatorname{mex} $ \u7684\u503c\u5c31\u4f1a\u53d8\u4e3a\u6700\u5c0f\u7684\u88ab\u5168\u90e8\u5220\u9664\u7684\u5143\u7d20\u3002\u7136\u540e\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u4ee5\u540e\uff0c\u4e0b\u4e00\u6761\u9650\u5236\u4ee5\u524d\uff0c\u6bcf\u6b21\u7684 $ SG(i) = SG(i - 1) + 1 $\u3002\u53d1\u73b0\u6574\u4e2a\u503c\u7684\u5206\u5e03\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u4e9b\u7279\u6b8a\u70b9\u548c\u5f88\u591a\u6761\u659c\u7387\u4e3a $ 1 $ \u7684\u7ebf\u6bb5\u3002\u6240\u4ee5\u6211\u4eec\u5bf9\u4e8e\u7b54\u6848\uff0c\u8003\u8651\u5f00\u4e2a `map` \u8bb0\u5f55\u8f6c\u6298\u70b9\uff0c\u6bcf\u6b21\u67e5\u8be2\u5bf9\u5e94\u7684\u6240\u5728\u4f4d\u7f6e\u7136\u540e\u589e\u52a0\u5bf9\u5e94\u6570\u91cf\u7684 $ 1 $ \u5373\u53ef\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u8fc7\u7a0b\u4e5f\u4e0d\u96be\u7406\u89e3\uff0c\u5f00\u4e2a `map` \u91cc\u5957 `basic_string` \u7ef4\u62a4\u5bf9\u5e94 $ x_i $ \u7684\u6240\u6709 $ x_i - y_i $\uff0c\u7136\u540e\u904d\u5386\uff0c\u663e\u7136\u5347\u5e8f\u904d\u5386\u8fc7\u7a0b\u4e2d $ x_i $ \u4ee5\u5185\u7684 $ SG $ \u5747\u5df2\u786e\u5b9a\u3002\u7136\u540e\u8003\u8651\u5982\u4f55\u786e\u5b9a\u5f53\u524d\u7684 $ SG(i) $\uff0c\u4e0d\u96be\u53d1\u73b0\u5bf9\u4e8e\u6ca1\u6709\u9650\u5236\u7684 $ SG $ \u503c\u5373\u4e3a\u5176\u4e4b\u524d\u7684\u6240\u6709 $ SG $ \u7684\u6700\u5927\u503c\uff0c\u4e5f\u5c31\u662f\u524d\u7f00\u6700\u5927\u503c $ +1 $\u3002\u5bf9\u4e8e\u6709\u9650\u5236\u7684\uff0c\u6211\u4eec\u679a\u4e3e\u5176\u6240\u6709\u9650\u5236\uff0c\u627e\u5230\u6700\u5c0f\u7684\u4e00\u4e2a\u88ab\u5220\u6ca1\u7684\u503c\uff08\u6ce8\u610f\u8fd9\u91cc\u6bd4\u8f83\u7684\u65f6\u5019\u8981 $ +1 $\uff0c\u539f\u56e0\u662f\u904d\u5386\u5230\u6b64\u65f6\u7684\u65f6\u5019\u4e00\u822c\u60c5\u51b5\u4e0b\u4f1a\u6709\u4e00\u4e2a $ SG(i) = i $\uff09\uff0c\u5c06\u5176\u8bbe\u4e3a\u8fd9\u4e2a\u3002\u6b64\u4e3a\u7279\u6b8a\u70b9\uff0c\u7136\u540e\u5728\u5176\u4e4b\u540e\u7684\u70b9\u4f9d\u7136\u6309\u7167\u4e00\u822c\u7684\u659c\u7387\u4e3a $ 1 $ \u5730\u589e\u957f\uff0c\u7528\u524d\u7f00\u6700\u5927\u503c\u66f4\u65b0\uff0c\u8bb0\u5f55\u4e00\u4e0b\u5373\u53ef\u3002\n\n## Code\n\n```cpp\n#define _USE_MATH_DEFINES\n#include <bits/stdc++.h>\n\n#define PI M_PI\n#define E M_E\n#define npt nullptr\n#define SON i->to\n#define OPNEW void* operator new(size_t)\n#define ROPNEW(arr) void* Edge::operator new(size_t){static Edge* P = arr; return P++;}\n\nusing namespace std;\n\nmt19937 rnd(random_device{}());\nint rndd(int l, int r){return rnd() % (r - l + 1) + l;}\nbool rnddd(int x){return rndd(1, 100) <= x;}\n\ntypedef unsigned int uint;\ntypedef unsigned long long unll;\ntypedef long long ll;\ntypedef long double ld;\n\ntemplate < typename T = int >\ninline T read(void);\n\nint N, M;\nll A[210000];\nll oplus(0);\nmap < ll, basic_string < ll > > rest;\nmap < ll, ll > SG, repeat;\n\nll CalSG(ll x){\n    auto sp = *prev(SG.upper_bound(x));\n    return sp.second + (x - sp.first);\n}\n\nint main(){\n    N = read(), M = read(); SG.insert({0, 0});\n    for(int i = 1; i <= N; ++i)A[i] = read < ll >();\n    for(int i = 1; i <= M; ++i){\n        ll p = read < ll >(), v = read < ll >();\n        rest[p] += p - v;\n    }\n    ll preMx(-1);\n    for(auto &mp : rest){\n        preMx = max(preMx, CalSG(mp.first - 1));\n        map < ll, ll > tmp;\n        for(auto val : mp.second)tmp[CalSG(val)]++;\n        for(auto cur : tmp){\n            if(cur.second >= repeat[cur.first] + 1){\n                repeat[cur.first]++;\n                SG[mp.first] = cur.first;\n                break;\n            }\n        }preMx = max(preMx, CalSG(mp.first));\n        SG[mp.first + 1] = preMx + 1;\n    }\n    for(int i = 1; i <= N; ++i)oplus ^= CalSG(A[i]);\n    printf(\"%s\\n\", oplus ? \"Takahashi\" : \"Aoki\");\n    fprintf(stderr, \"Time: %.6lf\\n\", (double)clock() / CLOCKS_PER_SEC);\n    return 0;\n}\n\ntemplate < typename T >\ninline T read(void){\n    T ret(0);\n    int flag(1);\n    char c = getchar();\n    while(c != '-' && !isdigit(c))c = getchar();\n    if(c == '-')flag = -1, c = getchar();\n    while(isdigit(c)){\n        ret *= 10;\n        ret += int(c - '0');\n        c = getchar();\n    }\n    ret *= flag;\n    return ret;\n}\n```\n\n## UPD\n\nupdate-2022_12_07 \u521d\u7a3f",
        "postTime": 1670426410,
        "uid": 362938,
        "name": "Tsawke",
        "ccfLevel": 6,
        "title": "[ABC255G] Constrained Nim \u9898\u89e3"
    },
    {
        "content": "> $n$ \u5806\u77f3\u5b50\u7684nim\u6e38\u620f,\u6709 $m$ \u4e2a\u9650\u5236,\u7b2c $i$ \u4e2a\u9650\u5236 $x_i,y_i$ \u8868\u793a\u82e5\u4e00\u4e2a\u77f3\u5b50\u5806\u5269\u4f59\u77f3\u5b50\u4e3a $x_i$ ,\u4f60\u5c31\u4e0d\u80fd\u4ece\u5176\u4e2d\u62ff\u8d70 $y_i$ \u4e2a.\u95ee\u5148\u624b\u5fc5\u80dc/\u5fc5\u8d1f.\n> \n> $n,m\\le 2\\times 10^5,a_i\\le 10^{18}$\n\n\u516c\u5e73\u7ec4\u5408\u6e38\u620f,\u53ea\u9700\u8981\u8003\u8651\u6c42\u4e00\u4e2a\u77f3\u5b50\u5806\u7684 SG \u503c,\u6700\u540e\u5f02\u6216\u8d77\u6765\u5224\u65ad\u5373\u53ef.\n\n\u6ca1\u6709\u9650\u5236\u7684\u65f6\u5019\u663e\u7136\u662f $SG(x)=x$ ,\u90a3\u4e48\u52a0\u4e0a\u9650\u5236\u4e4b\u540e\u4f1a\u6709\u82e5\u5e72\u4e2a\u7279\u6b8a\u70b9\u548c\u82e5\u5e72\u6bb5 $y=x+k$ \u7684\u4e00\u6b21\u51fd\u6570.\u6ca1\u6709\u9650\u5236\u7684\u70b9\u7684\u503c\u663e\u7136\u662f\u524d\u9762\u7684\u6700\u5927\u503c\u52a01,\u800c\u6709\u9650\u5236\u7684\u70b9\u53ef\u4ee5\u8003\u8651\u7ef4\u62a4\u6bcf\u4e2a $SG(x)$ \u7684\u51fa\u73b0\u6b21\u6570,\u4e0d\u65ad\u5220\u6389\u88ab\u7981\u6b62\u7684 $x$ ,\u627e\u5230\u6700\u5c0f\u7684\u5220\u6ca1\u4e86\u7684 $SG(x)$ \u5c31\u662f\u5f53\u524d\u7684SG\u503c.\n\n\u4f46\u662f\u76f4\u63a5\u7ef4\u62a4 $SG(x)$ \u4f1a\u7206\u70b8,\u4f46\u53d1\u73b0\u53ea\u7ef4\u62a4\u7279\u6b8a\u70b9\u7684\u5c31\u884c,\u5176\u4ed6\u7684\u4f4d\u7f6e\u7684\u6b21\u6570\u5c31\u662f\u4e00\u4e2a\u9ed8\u8ba4\u7684 $1$.\n\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <map>\n#define endl '\\n'\nusing namespace std;\ntypedef long long ll;\ntypedef pair<ll, ll> pll;\n\nconst int N = 2e5 + 500, M = 2e5 + 500;\nint n, m;\nll a[N];\nmap<ll, vector<ll>> lim;\nmap<ll, ll> sg;\nmap<ll, ll> cnt;\n\nll getsg(ll x) {\n    auto iter = --sg.upper_bound(x);\n    return (x - iter->first) + iter->second;\n}\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin >> n >> m;\n    for (int i = 1; i <= n; i++)\n        cin >> a[i];\n    for (int i = 1; i <= m; i++) {\n        ll x, y;\n        cin >> x >> y;\n        lim[x].push_back(x - y);\n    }\n\n    sg[0] = 0;\n    ll mx = 0;\n    for (auto& it : lim) {\n        vector<ll>& ls = it.second;\n        ll x = it.first;\n        mx = max(mx, getsg(x - 1));\n        sort(ls.begin(), ls.end());\n        map<ll, ll> tmp;\n        for (ll y : ls) \n            tmp[getsg(y)]++;\n        ll v = 5e18;\n        for (auto tp : tmp) {\n            if (cnt[tp.first] + 1 <= tp.second) {\n                v = tp.first;\n                break;\n            }\n        }\n        if (v < 5e18) {\n            cnt[v]++;\n            sg[x] = v;\n        }\n        mx = max(getsg(x), mx);\n        sg[x + 1] = mx + 1;\n    }\n    \n    ll res = 0;\n    for (int i = 1; i <= n; i++)\n        res ^= getsg(a[i]);\n    cout << (res ? \"Takahashi\" : \"Aoki\");\n    return 0;\n}\n\n// 0 1 1\n```",
        "postTime": 1668604938,
        "uid": 235671,
        "name": "fireinice",
        "ccfLevel": 7,
        "title": "[ABC255G] Constrained Nim"
    }
]