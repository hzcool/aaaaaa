[
    {
        "content": "### [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/AT2441)\n\n~~\u559c\u63d0\u6700\u52a3\u89e3~~\n\n## \u9898\u610f\n\n- \u5728\u5e73\u9762\u4e0a\u7ed9\u5b9a\u4e24\u5e73\u79fb\u64cd\u4f5c\uff0c\u6c42\u6700\u540e $n$ \u4e2a\u70b9\u539f\u59cb\u4f4d\u7f6e\u3002\n\n~~\u9898\u76ee\u7565\u957f \u81ea\u884c\u9605\u8bfb~~\n\n## $\\text{Sol}$\n\n\u5148\u8003\u8651**\u65cb\u8f6c\u5750\u6807\u7cfb**\uff0c\u6211\u4eec\u9006\u65f6\u9488\u65cb\u8f6c $\\dfrac{\\pi}{4}$ \u540e\uff0c\u4e24\u5e73\u79fb\u64cd\u4f5c\u5c31\u53ea\u5269\u4e0b\u5750\u6807\u4e00\u4e2a\u7ef4\u5ea6\u7684\u53d8\u6362\u4e86\u3002\uff08\u4e3a\u4e86\u65b9\u4fbf\u5efa\u8bae\u518d\u653e\u5927 $\\sqrt 2$ \u500d\uff0c\u8fd9\u6837\u6bcf\u6b21\u8ba1\u7b97\u5c31\u90fd\u662f\u6574\u6570\u4e86\uff09\n\n\u7136\u540e\u6211\u4eec\u8003\u8651**\u53cd\u5411**\u64cd\u4f5c\uff0c\u628a\u6700\u540e\u6c42\u7684\u70b9\u53cd\u5411\u64cd\u4f5c\u56de\u53bb\u3002\n\n\u7136\u540e\u662f\u672c\u9898\u6700\u91cd\u8981\u7684\u4e00\u4e2a\u6027\u8d28\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u53cd\u5411\u64cd\u4f5c\u65f6\uff0c\u6211\u4eec**\u6240\u6709\u70b9\u6a2a\u7eb5\u5750\u6807\u7684\u76f8\u5bf9\u5927\u5c0f\u90fd\u6ca1\u6709\u53d8**\u3002\uff08\u5df2\u65cb\u8f6c\u5750\u6807\u7cfb\uff09\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n\u521d\u59cb\u65f6\uff0c\u6240\u6709\u70b9\u6a2a\u7eb5\u5750\u6807\u90fd\u5355\u8c03\u9012\u589e\u3002\n\n\u6211\u4eec\u53d1\u73b0 $L_i$ \u6052\u6b63\uff0c\u90a3\u4e48\u6211\u4eec\u4e24\u4e2a\u64cd\u4f5c\u5c31\u53d8\u6210\u4e86**\u5de6\u8fb9\u4e00\u6bb5\u533a\u95f4\u4e0b\u79fb**\u548c**\u4e0a\u9762\u4e00\u6bb5\u533a\u95f4\u53f3\u79fb**\u3002\n\n\u800c\u8fd9\u4e5f\u6b63\u597d\u4fdd\u8bc1\u4e86\u521d\u59cb\u7684**\u5355\u8c03\u6027**\u3002\n\n\u90a3\u4e48\u6bcf\u4e00\u6b21\u64cd\u4f5c\u90fd\u662f**\u533a\u95f4\u4fee\u6539**\uff0c\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u6216\u6811\u72b6\u6570\u7ec4\u89e3\u51b3\u3002\n\n\u7136\u540e\u6211\u5199\u7684\u662f\u4e8c\u5206\u7aef\u70b9+\u7ebf\u6bb5\u6811\uff0c\u590d\u6742\u5ea6 $O(n\\log^2 n)$\u3002\n\n\u5176\u4e2d\u5355\u6b21\u4fee\u6539\u662f $O(\\log n)$ \u7684\uff0c\u5355\u6b21\u5bfb\u627e\u7aef\u70b9\u662f $O(\\log^2 n)$ \u7684\u3002\n\n\u5176\u4e2d\u6709\u4e9b\u7ec6\u8282\uff1a\n\n- \u7531\u4e8e\u5750\u6807\u7cfb\u653e\u5927\u4e86 $\\sqrt 2$ \u500d\uff0c\u90a3\u4e48\u6bcf\u6b21\u64cd\u4f5c\u957f\u5ea6\u5e94\u5f53\u662f $2L_i$\u3002\n\n- \u7b54\u6848\u662f\u6700\u540e\u7684 $\\dfrac{x-y}{2}$\uff0c\u56e0\u4e3a\u9898\u76ee\u4e2d\u662f $y=-a$\u3002\n\n### $\\text{Code}$\n\n```cpp\n// wish to get better qwq\n\n#include<bits/stdc++.h>\n#define re register ll\n#define pb push_back\n#define xl (x<<1)\n#define xr (x<<1|1)\n#define mid ((l+r)>>1)\n\nusing namespace std;\ntypedef long long ll;\n\ntemplate <typename T> void rd(T &x){\n\tll fl=1;x=0;char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') fl=-fl;\n\tfor(;isdigit(c);c=getchar()) x=(x<<3)+(x<<1)+c-'0';\n\tx*=fl;\n}\nvoid wr(ll x){\n\tif(x<0) x=-x,putchar('-');\n\tif(x<10) putchar(x+'0');\n\tif(x>9) wr(x/10),putchar(x%10+'0');\n}\n\n// ---------- IO ---------- //\n\nconst ll N=2e5+5;\nll n,m;\n\nstruct operations{ll d;ll x,l;}q[N];\n\nstruct Segment_Tree{\n\tll a[N<<2];\n\tinline void build(ll l,ll r,ll x){\n\t\tif(l==r){a[x]=l;return ;}\n\t\tbuild(l,mid,xl);build(mid+1,r,xr);\n\t}\n\tinline void modify(ll L,ll R,ll l,ll r,ll k,ll x){\n\t\tif(L>r||R<l) return ;\n\t\tif(L<=l&&r<=R){a[x]+=k;return ;}\n\t\tmodify(L,R,l,mid,k,xl);modify(L,R,mid+1,r,k,xr);\n\t}\n\tinline void spread(ll x){\n\t\tif(a[x]){\n\t\t\ta[xl]+=a[x];a[xr]+=a[x];\n\t\t\ta[x]=0;\n\t\t}\n\t}\n\tinline ll qaq(ll l,ll r,ll k,ll x){\n\t\tif(l==r) return a[x];\n\t\tspread(x);\n\t\tif(mid>=k) return qaq(l,mid,k,xl);\n\t\telse return qaq(mid+1,r,k,xr);\n\t}\n}sx,sy;\n// sx \u8868\u793a\u65cb\u8f6c\u540e x \u8f74\u7684\u7ebf\u6bb5\u6811 sy y \u8f74 \n\n// ---------- Segment Tree ---------- //\n\nint main(){\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\trd(n);rd(m);sx.build(1,n,1);sy.build(1,n,1);\n\t//for(re i=1;i<=n;i++) wr(sx.qaq(1,n,i,1)),putchar(' '),wr(sy.qaq(1,n,i,1)),puts(\"\");\n\tfor(re i=m;i>0;i--) rd(q[i].x),rd(q[i].d),rd(q[i].l);\n\tfor(re i=1;i<=m;i++){\n\t\tll l=1,r=n,awa=0;\n\t\tif(q[i].d==1){\n\t\t\twhile(l<=r){\n\t\t\t\tif(sx.qaq(1,n,mid,1)<=q[i].x) awa=mid,l=mid+1;\n\t\t\t\telse r=mid-1;\n\t\t\t}\n\t\t\tif(awa) sy.modify(1,awa,1,n,-2*q[i].l,1);\n\t\t}\n\t\telse{\n\t\t\twhile(l<=r){\n\t\t\t\tif(sy.qaq(1,n,mid,1)>q[i].x) awa=mid,r=mid-1;\n\t\t\t\telse l=mid+1;\n\t//\t\t\tcout<<awa<<endl;\n\t\t\t}\n\t\t\tif(awa) sx.modify(awa,n,1,n,2*q[i].l,1);\n\t\t}\n\t//\tcout<<awa<<endl;\n\t//\tfor(re i=1;i<=n;i++) wr(sx.qaq(1,n,i,1)),putchar(' '),wr(sy.qaq(1,n,i,1)),puts(\"\");\n\t//\tputs(\"-----\");\n\t}\n\tfor(re i=1;i<=n;i++) wr((sx.qaq(1,n,i,1)-sy.qaq(1,n,i,1))/2),puts(\"\");\n\treturn 0;\n}\n\n// ---------- Main ---------- //\n\n```",
        "postTime": 1615098428,
        "uid": 83999,
        "name": "Demoe",
        "ccfLevel": 7,
        "title": "\u65ad\u5c64 (Geologic Fault) \u9898\u89e3 \u7ebf\u6bb5\u6811"
    },
    {
        "content": "\u6765\u81eaP5103\u7684\u9898\u89e3\n\u8fd9\u9898\u5173\u952e\u5728\u4e8e\u9006\u5411\u601d\u7ef4\uff0c\u5c31\u662f\u8003\u8651\u6700\u540e\u7684nn\u7684\u4e2a\u70b9\u521a\u5f00\u59cb\u5728\u54ea\u513f\uff0c\u8fd9\u6837\u5c31\u51cf\u5c11\u4e86\u5f88\u591a\u9700\u8981\u7ef4\u62a4\u7684\u4e1c\u897f\u3002 \u8fd9\u5c31\u8ba9\u6211\u60f3\u5230\u5f88\u4e45\u4ee5\u524d\u7684\u4e00\u9053NOIP\u9898\uff0c\u94fa\u5730\u6bef\u3002\u90a3\u662f\u6211\u7b2c\u4e00\u6b21\u63a5\u89e6\u9006\u5411\u601d\u7ef4\uff0c\u89c9\u5f97\u5341\u5206\u7684\u5de7\u5999\uff0c\u539f\u672c\u8981\u5199\u7684\u5f88\u9ebb\u70e6\u6216\u8005\u5e72\u8106\u5199\u4e0d\u51fa\u6765\u7684\u9898\uff0c\u53cd\u7740\u60f3\uff0c\u7adf\u7136\u51e0\u884c\u5c31\u5b8c\u4e8b\u4e86\u3002\n\n\u4e0d\u626f\u522b\u7684\u4e86\uff0c\u8fd8\u662f\u8bf4\u4e00\u4e0b\u8fd9\u9898\u600e\u4e48\u60f3\u5427\u2026\u2026\n\n\u628a\u64cd\u4f5c\u79bb\u7ebf\uff0c\u7136\u540e\u5012\u7740\u64cd\u4f5c\uff0c\u4e0a\u79fb\u53d8\u6210\u4e86\u4e0b\u79fb\u3002\u4f46\u662f\u6bcf\u4e00\u6b21\u79fb\u52a8\u4e24\u7ef4\u7684\u5750\u6807\u90fd\u4f1a\u6539\u53d8\uff0c\u5341\u5206\u7684\u96be\u53d7\u3002\u4e8e\u662f\u6211\u4eec\u628a\u5750\u6807\u8f74\u65cb\u8f6c45\u5ea6\uff0c\u5c31\u5341\u5206\u7f8e\u6ecb\u6ecb\u4e86\uff1a\u4ee5\u987a\u65f6\u9488\u4e3e\u4f8b\uff0c\u5982\u679c\u659c\u7387\u4e3a1\uff0c\u5728\u65b0\u7684\u5750\u6807\u7cfb\u4e2d\u53ea\u6709\u7eb5\u5750\u6807\u53d1\u751f\u4e86\u6539\u53d8\uff1b\u659c\u7387\u4e3a-1\uff0c\u53ea\u6709\u6a2a\u5750\u6807\u53d1\u751f\u4e86\u6539\u53d8\u3002\u800c\u4e14\u6539\u53d8\u7684\u8fd9\u4e9b\u70b9\u4e00\u5b9a\u662f\u4e00\u4e2a\u524d\u7f00\u6216\u8005\u540e\u7f00\u3002\u4e8e\u662f\u66f4\u65b0\u53ef\u7528\u7ebf\u6bb5\u6811\u5b9e\u73b0\u3002\n\n\u4e0d\u8fc7\u66f4\u4e3a\u91cd\u8981\u7684\u662f\uff0c\u5bf9\u4e8e\u67e5\u8be2\u7684nn\u4e2a\u70b9\uff0c\u65e0\u8bba\u9006\u5411\u600e\u4e48\u64cd\u4f5c\uff0c\u8fd9\u4e9b\u70b9\u7684\u6a2a\u3001\u7eb5\u5750\u6807\u7684\u76f8\u5bf9\u5927\u5c0f\u90fd\u4e0d\u4f1a\u53d8\uff0c\u5927\u7684\u53ea\u4f1a\u66f4\u5927\uff0c\u5c0f\u7684\u53ea\u4f1a\u66f4\u5c0f\u3002\n\n\u6709\u4e86\u8fd9\u4e2a\u6027\u8d28\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4e8c\u5206\u627e\u8981\u6539\u7684\u524d\u7f00\uff08\u540e\u7f00\uff09\u7684\u8fb9\u754c\u4e86\u3002\u5224\u65ad\u7684\u65f6\u5019\u5c31\u662f\u7ebf\u6bb5\u6811\u5355\u70b9\u67e5\u8be2\u3002\n\n\u5230\u8fd9\u91cc\u8fd9\u9898\u57fa\u672c\u5c31\u5b8c\u4e8b\u4e86\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u533a\u95f4\u4fee\u6539\u65f6\u5e94\u8be5\u52a0\uff08\u51cf\uff09\u7684\u662f2l2l\uff0c\u56e0\u4e3a\u5728\u539f\u672c\u7684\u5750\u6807\u7cfb\u4e2d\u79fb\u52a8\u7684\u8ddd\u79bb\u662f\\sqrt{2} l \n2\n\u200b\t l\uff0c\u800c\u65b0\u5750\u6807\u7cfb\u7684\u8ddd\u79bb\u53c8\u662f\u539f\u6765\u7684\\sqrt{2} \n2\n\u200b\t \u500d\uff0c\u6240\u4ee5\u5e94\u8be5\u662f\\sqrt{2} * \\sqrt{2}l \n2\n\u200b\t \u2217 \n2\n\u200b\t l\u3002\n\n\u7ebf\u6bb5\u6811\u6709\u70b9\u6162\uff0c\u9700\u8981\u5f00O2\u624d\u80fd\u8fc7\uff0c\u6539\u6210\u6811\u72b6\u6570\u7ec4\u5c31\u5feb\u5f88\u591a\u4e86\u3002\n```\n#include<cstdio>\n#include<iostream>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#include<cstdlib>\n#include<cctype>\n#include<stack>\n#include<queue>\n#include<vector>\nusing namespace std;\n#define space putchar(' ')\n#define enter puts(\"\")\n#define Mem(a, x) memset(a, x, sizeof(x))\n#define In inline\ntypedef long long ll;\ntypedef double db;\nconst int INF = 0x3f3f3f3f;\nconst db eps = 1e-8;\nconst int maxn = 4e5 + 5;\nconst int N = 262144;\nIn ll read()\n{\n    ll ans = 0;\n    char ch = getchar(), las = ' ';\n    while(!isdigit(ch)) las = ch, ch = getchar();\n    while(isdigit(ch)) ans = (ans << 1) + (ans << 3) + ch - '0', ch = getchar();\n    if(las == '-') ans = -ans;\n    return ans;\n}\nIn void write(ll x)\n{\n    if(x < 0) putchar('-'), x = -x;\n    if(x >= 10) write(x / 10);\n    putchar(x % 10 + '0');\n}\n\nint n, Q;\nstruct Que\n{\n    int d; ll x, l;\n}q[maxn];\n\nstruct Tree\n{\n    int l[maxn << 2], r[maxn << 2];\n    ll lzy[maxn << 2];\n    In void build(int L, int R, int now, int flg)\n    {\n        l[now] = L; r[now] = R;\n        if(L == R) {lzy[now] = L * flg; return;}\n        int mid = (L + R) >> 1;\n        build(L, mid, now << 1, flg);\n        build(mid + 1, R, now << 1 | 1, flg);\n    }\n    In void pushdown(int now)\n    {\n        if(lzy[now])\n        {\n            lzy[now << 1] += lzy[now]; lzy[now << 1 | 1] += lzy[now];\n            lzy[now] = 0;\n        }\n    }\n    In void update(int L, int R, int now, int d)\n    {\n        if(l[now] == L && r[now] == R) \n        {\n            lzy[now] += d;\n            return;\n        }\n        pushdown(now);\n        int mid = (l[now] + r[now]) >> 1;\n        if(R <= mid) update(L, R, now << 1, d);\n        else if(L > mid) update(L, R, now << 1 | 1, d);\n        else update(L, mid, now << 1, d), update(mid + 1, R, now << 1 | 1, d);\n    }\n    In ll query(int now, int id)\n    {\n        if(l[now] == r[now]) return lzy[now];\n        pushdown(now);\n        int mid = (l[now] + r[now]) >> 1;\n        if(id <= mid) return query(now << 1, id);\n        else return query(now << 1 | 1, id);\n    }\n}t1, t2;\n\nint main()\n{\n    n = read(), Q = read();\n    for(int i = Q; i; --i) q[i].x = read(), q[i].d = read(), q[i].l = read();\n    t1.build(0, N - 1, 1, 1), t2.build(0, N - 1, 1, -1);\n    for(int i = 1; i <= Q; ++i)\n    {\n        if(q[i].d == 1)\n        {\n            int L = 0, R = N - 1;\n            while(L < R)\n            {\n                int mid = ((L + R) >> 1) + 1;\n                if(t2.query(1, mid) < -q[i].x) R = mid - 1;\n                else L = mid;\n            }\n            t1.update(0, L, 1, -q[i].l * 2);\n        }\n        else\n        {\n            int L = 0, R = N - 1;\n            while(L < R)\n            {\n                int mid = ((L + R) >> 1) + 1;\n                if(t1.query(1, mid) > q[i].x) R = mid - 1;\n                else L = mid;\n            }\n            if(L + 1 > N - 1) --L;\n            t2.update(L + 1, N - 1, 1, -q[i].l * 2);\n        }\n    }\n    for(int i = 1; i <= n; ++i) write(-(t2.query(1, i) + t1.query(1, i)) / 2), enter;\n    return 0;\n}",
        "postTime": 1556523956,
        "uid": 136446,
        "name": "\u674e\u5b50\u797a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 AT2441 \u3010\u65ad\u5c64 (Geologic Fault)\u3011"
    }
]