[
    {
        "content": "## \u5d29\u6e83\u5386\u7a0b\uff1a\n\n\u770b\u5230\u65f6\u95f4\u9650\u5236\u5c06\u8fd1 $10s$ \uff0c\u6211\u7684\u5fc3\u60c5\u5feb\u4e50\u7684\u3002\n\n**~~(\u8fd9\u4e0d\u662f $ O(n* \\sqrt{n} * log(n)) $ \u90fd\u80fd\u591f\u8349\u8fc7\u53bb~~**\n\n\u770b\u5230\u8fd9\u795e\u5947\u7684\u533a\u95f4\u64cd\u4f5c\uff0c\u6211\u7684\u5fc3\u60c5\u662f\u7591\u60d1\u7684\u3002\n\n\u60f3\u5230\u6bcf\u6b21\u53ea\u8981\u627e\u51fa\u6700\u5927\u7684\u7136\u540e\u5927\u6839\u5806\u7ef4\u62a4\u4e00\u4e0b\u7684\u65f6\u5019\uff0c\u6211\u7684\u5fc3\u60c5\u662f\u751f\u8349\u7684\u3002\n\n\u6253\u5b8c\u4ee3\u7801\u7136\u540e\u5c1d\u8bd5\u8c03\u7684\u65f6\u5019\u88ab\u5927\u6570\u636e\u5361\u5230 $20s$ \u6ca1\u6709\u8dd1\u51fa\u6765\u7684\u65f6\u5019\u6211\u7684\u5fc3\u60c5\u662f\u7edd\u671b\u7684\u3002\n\n~~\u6700\u540e\u5077\u5077\u5f00 $O(2)$ \u8fc7\u8fd9\u9053\u9898\u76ee\u7684\u65f6\u5019\u6211\u7684\u5185\u5fc3\u662f\u5e73\u9759\u7684\u3002~~\n\n## \u89e3\u6cd5\u4ecb\u7ecd\uff1a\n\n\u8fd9\u9053\u9898\u76ee\u5f88\u660e\u663e\u7684\u662f\u4ed6\u7684\u64cd\u4f5c\u662f\u5c06\u4ece $s_i$ \u5230 $t_i$ \u7684\u5c0f\u503c\u4e00\u4e2a\u53c8\u4e00\u4e2a\u5730\u4f20\u9012\u8fc7\u53bb\uff0c\u76f4\u5230\u6700\u540e\u4e00\u4e2a\u5927\u503c\u4f7f\u5f97\u540e\u8fb9\u7684\u6240\u6709\u987e\u5ba2\u90fd\u65e0\u6cd5\u66ff\u6362\u3002\n\n\u7531\u6b64\u53ef\u4ee5\u770b\u51fa\uff0c\u6700\u540e\u5f39\u51fa\u7684\u6c38\u8fdc\u90fd\u662f**\u8fd9\u4e00\u533a\u95f4\u7684\u6700\u5927\u503c**\u3002\n\n**\u8fd9\u65f6\u5019\u6211\u4eec\u5c1d\u8bd5\u6784\u9020\u6570\u636e\u3002**\n\n\u5982\u679c\u6211\u4eec\u6709\u4e00\u79cd\u7279\u6b8a\u6570\u636e\u4f7f\u5f97 $s_i$ \u6c38\u8fdc\u4e3a $1$ , $t_i$ \u6c38\u8fdc\u4e3a $n$ \u7684\u6570\u636e\uff0c\u90a3\u4e48\u6211\u4eec\u4f1a\u5f88\u81ea\u7136\u5730\u60f3\u5230\u7528**\u5806**\u53bb\u52a8\u6001\u7ef4\u62a4\u8fd9\u4e2a\u5e8f\u5217\u7684\u6700\u5927\u503c\u3002\n\n\u7531\u8fd9\u7ec4\u7279\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u4f18\u96c5\u5730\u66b4\u529b\uff1a**\u5206\u5757**\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651 **\u5206\u5757+\u5806** \u6765\u4f18\u96c5\u5730\u89e3\u51b3\u95ee\u9898\u3002\u3002\u3002\n\n\u8003\u8651\u5757\u4e0e\u5757\u4e4b\u95f4\u7684\u5904\u7406\uff0c\u4e5f\u5c31\u662f**\u6574\u5757**\u7684\u65f6\u5019\u3002\n\n\u663e\u7136\uff0c\u6574\u5757\u7684\u65f6\u5019\u5f71\u54cd\u5757\u5185\u5143\u7d20\u7684\u53ea\u6709\u63d2\u5165\u7684\u503c\u548c\u88ab\u5f39\u51fa\u7684\u6700\u5927\u503c\uff0c\u800c\u88ab\u5f39\u51fa\u7684\u6700\u5927\u503c\u7ee7\u627f\u5230\u4e0b\u4e00\u4e2a\u5757\u5185\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u5c31\u53ef\u4ee5\u5b8c\u6210\u5757\u7684\u5904\u7406\u4e0e\u5408\u5e76\u3002\n\n\u4f46\u5757\u5185\u66b4\u529b\u8be5\u5982\u4f55\u5904\u7406\u5462\uff1f**\uff08\u6563\u5757\u8be5\u5982\u4f55\u5904\u7406\uff09**\n\n\u8003\u8651\u5982\u4f55\u91cd\u6784\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5230\u4efb\u4f55\u4e00\u76d8\u5bff\u53f8\u80fd\u591f\u63d2\u8fdb\uff0c\u4e0e\u5b83\u63d2\u8fdb\u7684\u987a\u5e8f\u6ca1\u6709\u4efb\u4f55\u7684\u5173\u7cfb\u3002\u4e5f\u5c31\u662f\u8bf4\uff1a **\u63d2\u5165\u503c\u7684\u987a\u5e8f\u4e0e\u6700\u540e\u7684\u503c\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\u3002**\n\n\u6240\u4ee5\u6211\u4eec\u8003\u8651\u66b4\u529b\u91cd\u6784\u65f6\uff0c\u6211\u4eec\u53ea\u8981\u8003\u8651\u63d2\u5165\u7684\u503c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u663e\u7136\u7684\u662f\uff0c**\u5f53\u524d\u4f4d\u7f6e\u7684\u66f4\u65b0\u80af\u5b9a\u662f\u5f53\u524d\u4f4d\u7f6e\u6700\u5c0f\u7684\u3002**\n\n\u4e8e\u662f\u5c31\u81ea\u7136\u5f97\u60f3\u5230\u4e86**\u5c0f\u6839\u5806**\u52a8\u6001\u7ef4\u62a4\u66b4\u529b\u91cd\u6784\uff0c\u4ece\u5c0f\u5230\u5927\u7ef4\u62a4\u539f\u59cb\u5e8f\u5217\uff08\u539f\u59cb\u5757\uff09\uff0c\u518d\u538b\u5165\u5927\u6839\u5806\u4e2d\u3002\n\n\u56e0\u4e3a\u4e00\u4f4d\u987e\u5ba2\u7684\u5bff\u53f8\u53ef\u80fd\u4f1a\u5f71\u54cd\u5230\u540e\u9762\u987e\u5ba2\u7684\u5bff\u53f8\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u987e\u5ba2\u7684\u5bff\u53f8\u770b\u505a\u8f6c\u8fc7\u6765\u7684\u5bff\u53f8\uff0c\u4e5f\u628a\u4ed6\u653e\u5230\u5c0f\u6839\u5806\u4e2d\u3002\n\n**\u7531\u4e8e\u6ce8\u610f\u5230\u9898\u76ee\u62e5\u6709\u826f\u597d\u7684\u5bf9\u79f0\u6027\uff0c\u6211\u4eec\u65e2\u53ef\u4ee5\u7406\u89e3\u4e3a\u5bff\u53f8\u4f9d\u6b21\u7ecf\u8fc7\u987e\u5ba2\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u987e\u5ba2\u7ecf\u8fc7\u4e86\u5bff\u53f8\u3002**\n\n**~~\uff08\u6240\u4ee5\u4f60\u53ef\u4ee5\u8fd1\u4f3c\u7684\u8ba4\u4e3a\u987e\u5ba2\u628a\u987e\u5ba2\u5403\u4e86~~**\n\n## \u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790\n\n\u6211\u4eec\u5bf9\u4e8e\u6574\u5757\u64cd\u4f5c\uff0c\u989d\u5916\u8bb0\u4e0b\u4e86\u63d2\u5165\u7684\u503c\uff0c\u8bb0\u5f55\u4e0b\u6765\u7684\u5bff\u53f8\u5f53\u505a\u987e\u5ba2\uff0c\u987e\u5ba2\u5f53\u505a\u5bff\u53f8\u6765\u6267\u884c\u64cd\u4f5c\uff0c\u5e76\u7528\u5c0f\u6839\u5806\u7ef4\u62a4\u3002\u6bcf\u4e00\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(L * logm)$ \u3002\n\n\u6211\u4eec\u53d6\u5757\u957f $L=\\sqrt{n}$ ,\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f $O(m\\sqrt{n}(logn + logm ) $\u3002\n\n## \u4ee3\u7801\u90e8\u5206\n```cpp\n#include<bits/stdc++.h>\n#define Debug if(false)\n#define rnt register int\nusing namespace std;\nconst int maxn=400010,maxb=670;\ninline int read()\n{\n\tint x=0,f=1;char c;\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') f=-f;\n\tfor(;isdigit(c);c=getchar()) x=(x<<1)+(x<<3)+(c^48);\n\treturn x*f;\n}\nint n,m,bs,mb,block[maxn],a[maxn];\ninline int get(int x){return x+1>mb?1:x+1;} //\u5faa\u73af \nstruct Block\n{\n\tint l,r;\n\tpriority_queue<int,vector<int>,less<int> > que;\n\tpriority_queue<int,vector<int>,greater<int> > tag; //\u53ea\u9700\u8981\u8bb0\u5f55\u503c\n\tinline int modify(int x) //\u5757\u4fee\u6539,\u4ece\u5de6\u5f80\u53f3\u626b\u8fd9\u4e2a\u5757\u5e76\u628a\u6700\u5927\u503c\u5f39\u51fa,\u4eba\u79f0\u66b4\u529b\u4fee\u6539 \n\t{\n\t\tif(x>=que.top()) return x; //\u65e0\u6cd5\u8fc7\u53bb\u4e86\n\t\tint res=que.top();que.pop();\n\t\tque.push(x),tag.push(x);\n\t\treturn res; //\u628a\u6700\u5927\u7684pop\u51fa\u53bb \n\t}\n\tinline void rebuild() //\u91cd\u6784\uff0c\u6309\u6700\u5c0f\u53d6 \n\t{\n\t\tif(!tag.size()) return;\n\t\tfor(rnt i=l;i<=r;i++) \n\t\t\tif(tag.top()<a[i])\n\t\t\t{\n\t\t\t\tint tis=a[i];\n\t\t\t\ta[i]=tag.top(),tag.pop();\n\t\t\t\ttag.push(tis);\n\t\t\t}\n\t}\n\tinline void clear()\n\t{\n\t\twhile(!tag.empty()) tag.pop();\n\t\twhile(!que.empty()) que.pop();\n\t}\n\tinline int query(int x,int L,int R) //\u66b4\u529b\u91cd\u7f6e \n\t{\n\t\trebuild(),clear();\n\t\tfor(rnt i=L;i<=R;i++) if(a[i]>x) swap(a[i],x);\n\t\tfor(rnt i=l;i<=r;i++) que.push(a[i]); \n\t\treturn x;\n\t}\n}b[maxb];\ninline void init_block() //\u57fa\u672c\u64cd\u4f5c \n{\n\tn=read(),m=read();\n\tbs=sqrt(n),mb=((n-1)/bs)+1;\n\tfor(rnt i=1;i<=n;i++)\n\t{\n\t\ta[i]=read();\n\t\tblock[i]=(i-1)/bs+1;\n\t\tb[block[i]].que.push(a[i]);\n\t}\n\tfor(rnt i=1;i<=mb;i++) \n\t\tb[i].l=bs*(i-1)+1,b[i].r=bs*i;\n\tb[mb].r=n;\n}\nsigned main()\n{\n//\tfreopen(\"D.in\",\"r\",stdin);\n//\tfreopen(\"D.out\",\"w\",stdout);\n\tinit_block();\n\twhile(m--)\n\t{\n\t\tint s=read(),t=read(),p=read();\n\t\tDebug printf(\"block[%d]: %d block[%d]: %d\\n\",s,block[s],t,block[t]);\n\t\tif(block[s]==block[t]&&s<=t) //\u540c\u4e00\u5757\u4e2d\u53ef\u4ee5\u76f4\u63a5\u67e5\u8be2 \n\t\t\tprintf(\"%d\\n\",b[block[s]].query(p,s,t));\n\t\telse //\u8df3\u5757\uff0c\u57fa\u672c\u64cd\u4f5c\u3002 \n\t\t{\n\t\t\tp=b[block[s]].query(p,s,b[block[s]].r);\n\t\t\tint cur=get(block[s]);\n\t\t\twhile(cur!=block[t]) \n\t\t\t\tp=b[cur].modify(p),cur=get(cur);\n\t\t\tDebug cout << cur << endl;\n\t\t\tprintf(\"%d\\n\",b[block[t]].query(p,b[block[t]].l,t));\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1629186569,
        "uid": 235855,
        "name": "shenxinge",
        "ccfLevel": 6,
        "title": "[AT1832 \u56de\u8ee2\u5bff\u53f8]\u9898\u89e3"
    },
    {
        "content": "\u4e00\u9053\u5206\u5757\u597d\u9898\u3002\u826f\u5fc3\u5206\u5757\uff0c\u4e0d\u5361\u5e38\uff0c9 \u79d2\u65f6\u9650\uff0c\u597d\u8bc4\u3002\n\n\n------------\n\n\n\u9996\u5148\uff0c\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u8fd9\u4e2a\u95ee\u9898\u7684\u5f31\u5316\u7248\uff0c\u4e5f\u662f JOI \u7684\u90e8\u5206\u5206\uff0c\u6bcf\u6b21\u8be2\u95ee $l=1,r=n$\u200b\u200b \u65f6\u8be5\u600e\u4e48\u505a\u3002\u5f88\u5bb9\u6613\u60f3\u5230\uff0c\u7531\u4e8e\u6bcf\u6b21\u90fd\u662f\u4ece\u5934\u5230\u5c3e\uff0c\u5982\u679c\u5176\u4ed6\u503c\u88ab\u66ff\u6362\u4e86\uff0c\u6700\u5927\u503c\u80af\u5b9a\u4e5f\u4f1a\u88ab\u66ff\u6362\uff0c\u5982\u679c\u6700\u5927\u503c\u90fd\u4e0d\u4f1a\u6362\u90a3\u4e48\u5176\u4ed6\u503c\u80af\u5b9a\u66f4\u4e0d\u4f1a\u6362\u4e86\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u62ff\u4f18\u5148\u961f\u5217\u6765\u7ef4\u62a4\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u6bcf\u6b21\u6700\u5927\u503c\u66f4\u7ed9\u5b9a\u503c\u6bd4\u8f83\uff0c\u82e5\u6bd4\u4ed6\u5927\uff0c\u5c31\u8f93\u51fa\u6700\u5927\u503c\uff0c\u5426\u5219\u5c31\u8f93\u51fa\u539f\u503c\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n)$ \u3002\n\n\n------------\n\n\n\u90a3\u4e48\u8fd9\u5c31\u7ed9\u6211\u4eec\u4e00\u4e2a\u542f\u793a\uff0c\u6211\u4eec\u5bf9\u6574\u4f53\u4fee\u6539\u65f6\u5176\u5b9e\u5e76\u4e0d\u7528\u77e5\u9053\u6bcf\u4e2a\u4eba\u5177\u4f53\u662f\u591a\u5c11\uff0c\u53ea\u9700\u77e5\u9053\u6700\u5927\u503c\u662f\u4ec0\u4e48\uff0c\u8003\u8651\u5206\u5757\uff0c\u6211\u4eec\u5bf9\u6bcf\u4e2a\u5757\u7ef4\u62a4\u4e00\u4e2a\u4f18\u5148\u961f\u5217\uff0c\u6bcf\u6b21\u533a\u95f4\u67e5\u627e\u5c31\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5757\u4e00\u4e2a\u5757\u8fdb\u884c\u4fee\u6539\uff0c\u6bcf\u6b21\u5f39\u51fa\u7684\u503c\u5c31\u662f\u4e0b\u4e00\u6b21\u7684\u4fee\u6539\u503c\u3002\n\n\n------------\n\n\n\u90a3\u4e48\u6211\u4eec\u6b64\u65f6\u53c8\u53d1\u73b0\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u5f53\u6211\u4eec\u66b4\u529b\u4fee\u6539\u96f6\u6563\u5757\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4e0d\u77e5\u9053\u6bcf\u4e2a\u503c\u5177\u4f53\u662f\u4ec0\u4e48\u3002\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u9700\u8981\u5728\u8f83\u77ed\u65f6\u95f4\u5185\u5f97\u51fa\u4e00\u4e2a\u5757\u4e2d\u6240\u6709\u7684\u503c\u3002\u6839\u636e\u9898\u610f\u6211\u4eec\u80fd\u53d1\u73b0\uff0c\u6bcf\u4e2a\u6570 $a_i$\u200b \u4e0e\u6bcf\u6b21\u4fee\u6539\u7684\u64cd\u4f5c\u8f83\u5c0f $x_i$\u200b\u200b \u4ea4\u6362\uff0c\u4e0e\u6bcf\u6b21\u4fee\u6539\u64cd\u4f5c $x_i$\u200b \u4e0e\u8f83\u5927\u7684 $a_i$ \u64cd\u4f5c\u5176\u5b9e\u662f\u7b49\u4ef7\u7684\u3002\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u5229\u7528\u521a\u624d\u7684\u65b9\u6cd5\u8fdb\u884c\u4fee\u6539\u3002\u200b\n\n\u5177\u4f53\u7684\uff0c\u6211\u4eec\u7528\u5c0f\u6839\u5806\u7ef4\u62a4\u6bcf\u4e2a\u5757\u8be2\u95ee $x_i$\u200b\u200b\u200b \u3002\u4fee\u6539\u96f6\u6563\u5757\u65f6\uff0c\u6211\u4eec\u66b4\u529b\u66f4\u65b0\uff0c\u628a\u539f\u6765\u7684\u503c\u4e0e\u5806\u9876\u6bd4\u8f83\uff0c\u6bcf\u6b21\u7684\u8f83\u5c0f\u503c\u5373\u4e3a\u6b64\u5143\u7d20\u7684\u503c\uff0c\u5f97\u5230\u540e\u66f4\u65b0\u5757\uff0c\u518d\u628a\u5b83\u585e\u5165\u4f18\u5148\u961f\u5217\u3002\n\n\n------------\n\n\u590d\u6742\u5ea6\u5206\u6790\n\n\u5f53\u6211\u4eec\u53d6\u5757\u957f\u4e3a $\\sqrt n $ \u65f6\u6700\u4f18\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\sqrt n \\log n)$ \uff0c\u56e0\u4e3a\u65f6\u9650 9s\uff0c\u5b8c\u5168\u80fd\u8fc7\u3002\n\n\n------------\n\u77ed\u800c\u53c8\u6613\u61c2\u7684\u4ee3\u7801\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n//static char buf[1000000],*p1=buf,*p2=buf;\n//#define getchar() p1==p2&&(p2=(p1=buf)+fread(buf,1,1000000,stdin),p1==p2)?EOF:*p1++\n#define re register\nconst int maxn=4e5+5,B=655;\ninline int read()\n{\n\tchar ch=getchar();bool f=0;int x=0;\n\tfor(;!isdigit(ch);ch=getchar())if(ch=='-')f=1;\n\tfor(;isdigit(ch);ch=getchar())x=(x<<1)+(x<<3)+(ch^48);\n\tif(f==1)x=-x;return x;\n}\nint n,m,t,id[maxn],L[B],R[B],a[maxn],l,r,x; \npriority_queue<int>q[B];\npriority_queue<int,vector<int>,greater<int> >q2[B];\nint rebuild(int g,int l,int r,int x)\n{\n\tfor(int i=L[g];i<=R[g];i++)\n\t\tq2[g].push(a[i]),a[i]=q2[g].top(),q2[g].pop();\n\tfor(int i=l;i<=r;i++) if(a[i]>x) swap(x,a[i]);\n\twhile(!q2[g].empty()) q2[g].pop();\n\twhile(!q[g].empty()) q[g].pop();\n\tfor(int i=L[g];i<=R[g];i++) q[g].push(a[i]); \n\treturn x;\n}\nint getans(int l,int r,int x)\n{\n\tif(id[l]==id[r]) return rebuild(id[l],l,r,x);\n\telse\n\t{\n\t\tx=rebuild(id[l],l,R[id[l]],x);\n\t\tfor(int i=id[l]+1;i<=id[r]-1;i++)\n\t\t\tq[i].push(x),q2[i].push(x),x=q[i].top(),q[i].pop();\n\t\treturn rebuild(id[r],L[id[r]],r,x);\n\t}\n\t\t\n}\nsigned main()\n{\n\t//freopen(\".in\",\"r\",stdin);\n\t//freopen(\".out\",\"w\",stdout);\n\tn=read(),m=read();t=sqrt(n);\n\tfor(int i=1;i<=n;i++) a[i]=read(),id[i]=(i-1)/t+1;\n\tfor(int i=1;i<=id[n];i++)\n\t{\n\t\tL[i]=R[i-1]+1,R[i]=min(n,i*t);\n\t\tfor(int j=L[i];j<=R[i];j++) q[i].push(a[j]);\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tl=read(),r=read();x=read();\n\t\tif(l>r) printf(\"%d\\n\",getans(1,r,getans(l,n,x)));\n\t\telse printf(\"%d\\n\",getans(l,r,x));\n\t}\n \treturn 0;\n}\n```\n",
        "postTime": 1629368518,
        "uid": 343748,
        "name": "louhao088",
        "ccfLevel": 9,
        "title": "\u9898\u89e3AT1832 \u56de\u8ee2\u5bff\u53f8"
    },
    {
        "content": "# [\u300cJOISC 2016 Day 3\u300d\u56de\u8f6c\u5bff\u53f8](https://www.luogu.com.cn/problem/AT1832)\n\n\u9898\u610f\u5df2\u7ecf\u5f88\u7b80\u6d01\u4e86\uff0c\u5c31\u4e0d\u7b80\u5316\u4e86\uff08\u6ce8\u610f\u8be2\u95ee\u4e4b\u95f4\u80af\u5b9a\u662f\u4e92\u76f8\u6709\u5f71\u54cd\u7684\uff09\u3002\n\n\u9996\u5148 $5\\ pts$ \u7684\u66b4\u529b\u662f\u5f88\u597d\u5199\u7684\uff0c\u76f4\u63a5\u6309\u9898\u610f\u6a21\u62df\u5373\u53ef\u3002\n\n\u533a\u95f4\u64cd\u4f5c\u80af\u5b9a\u60f3\u5230\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\uff0c\u4f46\u662f\u60f3\u4e00\u60f3\u7ebf\u6bb5\u6811\u597d\u50cf\u4e0d\u592a\u884c\uff0c\u5728\u52a0\u4e0a\u8fd9\u9053\u9898\u8d85\u7ea7\u5927\u65f6\u9650\u3002\n\n\u90a3\u4e48\u6211\u4eec\u9700\u8981\u4f18\u96c5\u7684\u66b4\u529b\uff1a**\u5206\u5757**\n\n\u4ee5 $\\sqrt n$ \u4e3a\u5927\u5c0f\u5206\u5757\uff0c\u63a5\u4e0b\u6765\u8003\u8651\u4ee5\u4e0b\u51e0\u4e2a\u95ee\u9898\uff08\u5206\u5757\u7b97\u6cd5\u7684\u5e38\u89c1\u95ee\u9898\uff09\uff1a\n\n1. \u6574\u5757\u5904\u7406\uff1b\n2. \u6574\u5757\u4e4b\u95f4\u5408\u5e76\uff1b\n3. \u5757\u5185\u66b4\u529b\u3002\n\n## \u6574\u5757\u5904\u7406\n\n\u6211\u4eec\u8981\u5b8c\u6210 $modify1(A)$ \uff1a\u5c06 $A$ \u4ece\u5de6\u5f80\u53f3\u626b\u8fd9\u4e2a\u5757\uff0c\u6700\u540e\u51fa\u53bb\u7684\u65f6\u5019\u5f97\u5230\u7684 $A'$\u3002\n\n\u7406\u89e3\u4e00\u4e0b\u9898\u610f\uff08\u6216\u8005\u624b\u6a21\u51e0\u7ec4\u6570\u636e\uff09\uff0c\u53d1\u73b0\u5c31\u662f\u627e\u5230\u4e00\u4e2a\u7b2c\u4e00\u4e2a\u5143\u7d20\u5927\u4e8e$A$\u7684\u5355\u8c03\u9012\u589e\u5e8f\u5217\uff0c\u7b2c\u4e00\u4e2a\u6570\u66ff\u6362\u4e3a $A$ \uff0c\u5269\u4e0b\u7684\u6570\u4f9d\u6b21\u5411\u53f3\u5e73\u79fb\uff0c\u6700\u5927\u7684\u6570\u88ab\u6254\u6389\uff0c\u8d4b\u503c\u7ed9 $A'$ \uff08\u5982\u679c\u8bf4\u7684\u4e0d\u662f\u5f88\u6e05\u695a\u53ef\u4ee5\u53c2\u8003\u4e00\u4e0b\u4e0b\u9762\u7684\u56fe\uff09\u3002\n\n\u90a3\u5982\u679c\u6211\u4eec\u53ea\u8003\u8651\u5757\u5185\u7684\u6570\u6709\u54ea\u4e9b\uff0c\u4e0d\u8003\u8651\u76f8\u5bf9\u4f4d\u7f6e\u7684\u8bdd\uff0c\u5c31\u53d8\u6210\u628a$A$\u4e22\u8fdb\u6765\uff0c\u628a\u6700\u5927\u7684\u6570\u6254\u6389\u5e76\u8fd4\u56de\u8fd9\u4e2a\u6700\u5927\u7684\u6570\u3002\n\n\u7ef4\u62a4\u4e00\u4e2a $val$ \u7684\u5927\u6839\u5806\u5373\u53ef\u3002\n\n## \u6574\u5757\u4e4b\u95f4\u5408\u5e76\n\n\u4f9d\u6b21\u8fdb\u884c $modify1(A)$ \uff0c\u4e0d\u65ad\u66f4\u65b0 $A$ \u5373\u53ef\n\n## \u5757\u5185\u66b4\u529b\n\n\u8fd9\u662f\u8fd9\u9053\u9898\u6700\u5927\u7684\u96be\u70b9\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u6574\u4e2a\u5757\u66b4\u529b\u91cd\u6784\uff0c\u8be2\u95ee\u7684\u8fb9\u89d2\u90e8\u5206\u518d\u66b4\u529b\u6a21\u62df\u3002\n\n- \u6027\u8d28\uff1a\u63d2\u5165\u7684\u6570\u7684\u987a\u5e8f\u5bf9\u5e8f\u5217\u7684\u503c\u4e0d\u5f71\u54cd\u3002\n\n\u4e5f\u5c31\u662f\uff0c\u82e5 $x>y$ \uff0c\u5148\u63d2\u5165 $x$ \u518d\u63d2\u5165 $y$ \u548c\u5148\u63d2\u5165 $y$ \u518d\u63d2\u5165 $x$ \u5f97\u5230\u7684\u5e8f\u5217\u662f\u4e00\u6837\u7684\u3002\n\n\u7ed3\u5408\u4e0b\u9762\u7684\u56fe\u7406\u89e3\u4e00\u4e0b\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/beyvqltk.png)\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/i9a95i6l.png)\n\n\u6240\u4ee5\u6211\u4eec\u4e0d\u9700\u8981\u7ba1\u63d2\u5165\u7684\u987a\u5e8f\uff0c\u53ea\u9700\u8981\u7ba1\u63d2\u5165\u7684\u6570\u5c31\u597d\u4e86\u3002\n\n\u663e\u7136\u5f53\u524d\u4f4d\u7f6e\u80fd\u9009\u6700\u5c0f\u7684\u80af\u5b9a\u9009\u6700\u5c0f\u7684\u66f4\u65b0\uff0c\u7528\u4e00\u4e2a\u5c0f\u6839\u5806\uff08 $tag$ \uff09\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u66f4\u65b0\u8fc7\u540e\u56e0\u4e3a\u81ea\u5df1\u4f1a\u53d8\u6210 $A'$ \uff0c\u53ef\u80fd\u4f1a\u66f4\u65b0\u5230\u540e\u9762\u7684\u6570\uff0c\u8981\u628a\u81ea\u5df1\u52a0\u8fdb\u5c0f\u6839\u5806\u3002\n\n\u603b\u7ed3\u4e00\u4e0b\uff1a\u6574\u5757\u5904\u7406\u7528\u5927\u6839\u5806\u7ef4\u62a4\uff0c\u5e76\u8bb0\u4e0b\u6765\u63d2\u5165\u7684\u6570\uff08\u6253\u6807\u8bb0\uff09\uff0c\u5757\u5185\u66b4\u529b\u91cd\u6784\u65f6\u628a\u6807\u8bb0\u4ece\u5c0f\u5230\u5927\u63d2\u5165\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\sqrt n\\log n)$ \u3002\n\n\n```cpp\n#include <cstdio>\n#include <queue>\n#include <cmath>\nusing namespace std;\ninline int read(){//\u5feb\u8bfb\n\tint s=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9')s=(s<<3)+(s<<1)+ch-'0',ch=getchar();\n\treturn s*f;\n}\nconst int N=4e5+10,M=1005;\nint a[N];\nstruct Block{\n\tint l,r;\n\tpriority_queue<int> val;//\u5927\u6839\u5806\u7ef4\u62a4\u6570\u503c\n\tpriority_queue<int,vector<int>,greater<int> > tag;//\u5c0f\u6839\u5806\u7ef4\u62a4\u8981\u63d2\u5165\u7684\u6807\u8bb0\n\tinline int modify1(int x){\n\t\tif(x>=val.top())return x;//\u65e0\u6cd5\u66f4\u65b0\uff0c\u8df3\u8fc7\n\t\tint ret=val.top();\n\t\tval.pop();tag.push(x);val.push(x);//\u66f4\u65b0\u6700\u5927\u503c\u5e76\u6253\u6807\u8bb0\n\t\treturn ret;\n\t}\n\tinline void rebuild(){\n\t\tif(!tag.size())return;\n\t\tfor(int i=l;i<=r;++i)\n\t\t\tif(tag.top()<a[i]){\n\t\t\t\tint t=a[i];\n\t\t\t\ta[i]=tag.top();//\u4f9d\u6b21\u63d2\u5165\u6807\u8bb0\n\t\t\t\ttag.pop();tag.push(t);\n\t\t\t}\n\t}\n\tinline int modify2(int x,int L,int R){\n\t\trebuild();\n\t\twhile(tag.size())tag.pop();\n\t\twhile(val.size())val.pop();//\u6e05\u7a7a\n\t\tfor(int i=L;i<=R;++i)if(a[i]>x)swap(a[i],x);\n\t\tfor(int i=l;i<=r;++i)val.push(a[i]);//\u66b4\u529b\u91cd\u6784\n\t\treturn x;\n\t}\n}blk[M];\nint n,q,pos[N],sz,tot;\ninline int nxt(int x){return (x+1>tot)?1:x+1;}\nint main(){ \n\tn=read();q=read();\n\tsz=sqrt(n);tot=(n-1)/sz+1;//\u5757\u7684\u5927\u5c0f\u53ca\u5757\u7684\u4e2a\u6570\n\tfor(int i=1;i<=n;++i)pos[i]=(i-1)/sz+1;\n\tfor(int i=1;i<=tot;++i)blk[i].l=(i-1)*sz+1,blk[i].r=min(i*sz,n);\n\tfor(int i=1;i<=n;++i){\n\t\ta[i]=read();\n\t\tblk[pos[i]].val.push(a[i]);\n\t}\n\tfor(int i=1,l,r,A;i<=q;++i){\n\t\tl=read();r=read();A=read();\n\t\tif(pos[l]==pos[r]&&l<=r){\n\t\t\tprintf(\"%d\\n\",blk[pos[l]].modify2(A,l,r));\n\t\t\tcontinue;\n\t\t}\n\t\tA=blk[pos[l]].modify2(A,l,blk[pos[l]].r);//\u8fb9\u89d2\u66b4\u529b\n\t\tint cur=nxt(pos[l]);\n\t\twhile(cur!=pos[r]){\n\t\t\tA=blk[cur].modify1(A);//\u6574\u5757\n\t\t\tcur=nxt(cur);\n\t\t}\n\t\tprintf(\"%d\\n\",blk[pos[r]].modify2(A,blk[pos[r]].l,r));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1612842542,
        "uid": 152128,
        "name": "harryzhr",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 AT1832 \u3010\u56de\u8ee2\u5bff\u53f8\u3011"
    },
    {
        "content": "\u9898\u610f\u5927\u6982\u662f\u8fd9\u6837\uff0c\u300c\u6bcf\u6b21\u64cd\u4f5c\u9009\u51fa\u533a\u95f4\u4e2d\u7684\u4e00\u4e2a LIS\uff08strictly\uff09\uff0c\u6ee1\u8db3\u5176\u5f00\u7aef\u662f\u6781\u9760\u8fd1\u5de6\u7aef\u70b9\u4e14\u5927\u4e8e $A$ \u7684\u4f4d\u7f6e\uff0c\u7b54\u6848\u5373\u8fd9\u4e2a LIS \u7684\u672b\u5c3e\uff0c\u505a\u4e00\u4e2a\u8f6e\u6362\u540e\u5f39\u51fa\u5e8f\u5217\u672b\u7aef\u300d\u3002\n\n\u9996\u5148\u505a\u51e0\u4e2a\u89c2\u5bdf\u3002\n\n> **Observation 1**\uff1a\u6bcf\u6b21\u88ab\u5f39\u51fa\u7684\u90fd\u662f\u533a\u95f4\u6700\u5927\u503c\u3002\n\n\u8bc1\u660e\uff1a\u663e\u7136\uff0c\u4f60\u8003\u8651\u6709\u4e00\u4e2a\u6700\u5927\u7684\u503c\u5728\u94a6\u5b9a\u7684 LIS \u7684\u524d\u6216\u540e\uff0c\u90fd\u4f1a\u88ab\u5148\u884c\u9009\u62e9 / \u6269\u5c55\u8fdb\u6765\u3002\n\n> **Observation 2**\uff08key observation\uff09\uff1a\u5982\u679c\u5bf9\u4e00\u4e2a\u533a\u95f4\u63d2\u5165\u82e5\u5e72\u4e2a\u503c\uff0c\u63d2\u5165\u987a\u5e8f\u4e0d\u5f71\u54cd\u6700\u7ec8\u5e8f\u5217\u7684\u957f\u76f8\u3002\n\n\u8bc1\u660e\uff1a\u6bcf\u6b21\u63d2\u5165\u8fdb\u53bb\u7684\u503c\u4e0d\u53ef\u80fd\u6210\u4e3a\u5e8f\u5217\u7684\u6700\u5927\u503c\uff0c\u6240\u4ee5\u5f39\u51fa\u7684\u6570\u56fa\u5b9a\u3002\u5e76\u4e14\u63d2\u5165\u8fdb\u7684\u6570\u662f\u6839\u636e\u4e25\u683c\u504f\u5e8f\u5173\u7cfb\u63d2\u8fdb\u53bb\u7684\uff0c\u6240\u4ee5\u987a\u5e8f\u4e0d\u5f71\u54cd\u957f\u76f8\u3002\n\n\u4ec5\u51ed\u4ee5\u4e0a\u4e24\u4e2a\u89c2\u5bdf\uff0c\u6b64\u9898\u7684\u5947\u602a\u64cd\u4f5c\u600e\u4e48\u770b\u4e5f\u4e0d\u50cf\u662f\u4e2a ${\\rm polylog}$\uff0c\u9009\u62e9\u5bf9\u5e8f\u5217\u505a Sqrt Decomposition\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u63a2\u8ba8\u6574\u5757\u95f4\u7684\u5904\u7406\u65b9\u5f0f\u548c\u6563\u5757\u7684\u505a\u6cd5\uff0c\u56e0\u4e3a\u64cd\u4f5c\u7684\u7279\u6b8a\u6027\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u505a 8 \u79cd\u60c5\u51b5\u7684\u4f1e\u5175\u8ba8\u8bba\u3002\n\n- \u6574\u5757\u95f4\uff1a\u4f60\u8003\u8651\u6bcf\u4e2a\u6574\u5757\u4e0a\u7ef4\u62a4\u4e00\u4e2a\u5927\u6839\u5806\uff0c\u7136\u540e\u6574\u5757\u7684\u540e\u7ee7\u7ee7\u627f\u8be5\u6574\u5757\u7684\u6700\u5927\u503c\uff0c\u8be5\u6574\u5757\u53bb\u9664\u5176\u6700\u5927\u503c\u5373\u53ef\uff1b\n- \u6563\u5757\uff1a\u628a\u6240\u6709\u9700\u8981\u63d2\u5165\u7684\u5143\u7d20\u5b58\u4e00\u4e2a\u61d2\u6807\u5728\u53f3\u8fb9\u6563\u5757\u653e\u51fa\u6765\uff0c\u56e0\u4e3a Observation 2\uff0c\u6211\u4eec\u8d2a\u5fc3\u4f18\u5148\u628a\u503c\u8f83\u5c0f\u7684\u61d2\u6807\u653e\u51fa\u53bb\u5373\u53ef\u3002\n\n```cpp\n#include <bits/stdc++.h>\ntemplate <class T> inline void chmax(T& a, const T b) { a = a > b ? a : b; }\ntemplate <class T> inline void chmin(T& a, const T b) { a = a < b ? a : b; }\ninline long long rd() {\n  long long x = 0; bool f = 0; char ch = getchar();\n  while (ch < '0' || ch > '9') f |= (ch == '-'), ch = getchar();\n  while (ch >= '0' && ch <= '9') x = x * 10 + (ch & 15), ch = getchar();\n  return f ? -x : x;\n}\n/** @brief\n * \u9009\u51fa\u4e00\u4e2a LIS\uff0c\u6ee1\u8db3\u5f00\u59cb\u662f\u6781\u9760\u8fd1 l \u7684\u5927\u4e8e A \u7684\u4f4d\u7f6e\uff0c\u7b54\u6848\u5373\u5e8f\u5217\u7684\u672b\u7aef\uff0c\u7136\u540e\u7528 A \u66ff\u6362\u5e8f\u5217\u5f00\u5934\uff0c\u505a\u4e00\u4e2a\u8f6e\u6362\uff0c\u5f39\u51fa\u5e8f\u5217\u672b\u7aef\n * Observation 1\uff1a\u6bcf\u6b21\u88ab\u5f39\u51fa\u7684\u90fd\u662f\u533a\u95f4\u6700\u5927\u503c\n * Trick\uff1a\u5e8f\u5217\u5206\u5757\n * Section 1\uff1a\u6574\u5757\n   * \u6574\u5757\u4e0a\u7ef4\u62a4\u4e00\u4e2a\u5806\uff0c\u6574\u5757\u95f4\u4e0b\u4e00\u5757\u7ee7\u627f\u4e0a\u4e00\u5757\u7684\u6700\u5927\u503c\n * Section 2\uff1a\u6563\u5757\n   * \u7ef4\u62a4\u4e00\u4e2a\u5c0f\u6839\u5806\uff0c\u6bcf\u6b21\u6563\u5757\u66b4\u529b\u91cd\u6784\n * key observation\uff1a\u63d2\u5165\u987a\u5e8f\u4e0d\u5f71\u54cd\u5e8f\u5217\u7684\u957f\u76f8\n*/\nconstexpr int BS = 650;\nint n, m, a[400100], pos[400100];\nint L[660], R[660];\nstd::priority_queue<int> max[660];\nstd::priority_queue<int, std::vector<int>, std::greater<int>> tag[660];\nvoid push(int i, int x) { max[i].emplace(x); }\nvoid setBound(int i) { L[i] = (i - 1) * BS + 1, R[i] = i * BS; }\nint Qry(int i, int l, int r, int x) {\n  if (tag[i].size()) {\n    for (int j = L[i]; j <= R[i]; ++j)\n      if (int t = a[j]; tag[i].top() < t)\n        a[j] = tag[i].top(), tag[i].pop(), tag[i].emplace(t);\n  }\n  while (max[i].size()) max[i].pop();\n  while (tag[i].size()) tag[i].pop();\n  for (int j = l; j <= r; ++j)\n    if (a[j] > x) std::swap(a[j], x);\n  for (int f = L[i]; f <= R[i]; ++f) push(pos[L[i]], a[f]);\n  return x;\n}\nint Mdf(int i, int x) {\n  if (x >= max[i].top()) return x;\n  int res = max[i].top(); max[i].pop();\n  max[i].emplace(x), tag[i].emplace(x);\n  return res;\n}\nsigned main() {\n  n = rd(), m = rd();\n  for (int i = 1; i <= n; ++i)\n    push(pos[i] = (i - 1) / BS + 1, a[i] = rd());\n  for (int i = 1; i <= pos[n]; ++i) setBound(i);\n  R[pos[n]] = n;\n  for (int l, r, a; m--;) {\n    l = rd(), r = rd(), a = rd();\n    if (pos[l] == pos[r] && l <= r) printf(\"%d\\n\", Qry(pos[l], l, r, a));\n    else {\n      a = Qry(pos[l], l, R[pos[l]], a);\n      for (int u = pos[l] + 1 > pos[n] ? 1 : pos[l] + 1; u != pos[r]; u = u + 1 > pos[n] ? 1 : u + 1)\n        a = Mdf(u, a);\n      printf(\"%d\\n\", Qry(pos[r], L[pos[r]], r, a));\n    }\n  }\n  return 0;\n}\n```",
        "postTime": 1633429967,
        "uid": 161849,
        "name": "cirnovsky",
        "ccfLevel": 6,
        "title": "solution-at1832"
    }
]