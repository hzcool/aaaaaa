[
    {
        "content": "## \u524d\u8a00\n\n\u592a\u4e45\u6ca1\u505a\u7f51\u7edc\u6d41\u964d\u667a\u4e86\uff0c\u8fd9\u79cd\u7b80\u5355\u5efa\u56fe\u90fd\u4e0d\u4f1a\u4e86\u3002\u96be\u7ef7\u3002\n\n## \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u5f20\u7f51\u683c\u56fe\uff0c\u6bcf\u6b21\u64cd\u4f5c\u53ef\u4ee5\u9009\u62e9\u4e00\u9897\u68cb\u5b50\u5411\u53f3\u6216\u8005\u5411\u4e0b\uff0c\u6bcf\u4e2a\u70b9\u540c\u65f6\u53ea\u80fd\u51fa\u73b0\u4e00\u9897\u68cb\u5b50\uff0c\u95ee\u6700\u591a\u64cd\u4f5c\u591a\u5c11\u6b21\u3002\n\n## \u601d\u8def\n\n\u6570\u636e\u8303\u56f4\u633a\u5c0f\uff0c\u8003\u8651\u7f51\u7edc\u6d41\u3002\u56e0\u4e3a\u6211\u4eec\u8981\u8ba1\u7b97\u6700\u591a\u64cd\u4f5c\u591a\u5c11\u6b21\uff0c\u6240\u4ee5\u5e94\u8be5\u662f\u5efa\u8d39\u7528\u6d41\u6a21\u578b\u3002\u4e0b\u9762\u601d\u8003\u5982\u4f55\u53bb\u5efa\u56fe\u3002\n\n\u6700\u663e\u7136\u7684\u8fb9\uff0c\u6bcf\u64cd\u4f5c\u4e00\u6b21\u8d39\u7528\u52a0\u4e00\u3002\u56e0\u4e3a\u662f\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\uff0c\u6240\u4ee5\u8fde\u8fb9\u6743\u4e3a $-1$\uff0c\u6d41\u91cf\u6b63\u65e0\u7a77\u7684\u8fb9\u3002\n\n\u4e0b\u9762\u601d\u8003\u5982\u4f55\u6ee1\u8db3\u6bcf\u4e2a\u70b9\u540c\u65f6\u53ea\u4f1a\u6709\u4e00\u4e2a\u70b9\u7684\u8981\u6c42\u3002\u7b2c\u4e00\u773c\u770b\u4e0a\u53bb\u8003\u8651\u62c6\u70b9\uff0c\u4f46\u662f\u663e\u7136\u5e76\u975e\u662f\u6bcf\u4e2a\u70b9\u53ea\u80fd\u7ecf\u8fc7\u4e00\u6b21\uff0c\u6240\u4ee5\u4e0d\u53ef\u884c\u3002\u6ce8\u610f\u5230\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u540c\u65f6\u53ea\u4f1a\u6709\u4e00\u4e2a\u68cb\u5b50\uff0c\u6240\u4ee5\u6bcf\u4e2a\u68cb\u5b50\u6700\u7ec8\u843d\u5728\u7684\u4f4d\u7f6e\u4e0a\u53ea\u4f1a\u6709\u4e00\u4e2a\u68cb\u5b50\uff0c\u90a3\u4e48\u53ef\u4ee5\u8003\u8651\u4e00\u4e2a\u68cb\u5b50\u6700\u7ec8\u4f1a\u843d\u5728\u54ea\u91cc\uff0c\u5373\u6e90\u70b9\u5411\u6709\u68cb\u5b50\u7684\u70b9\u8fde\u6d41\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\uff0c\u6bcf\u4e2a\u683c\u5b50\u5411\u6c47\u70b9\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\u3002\n\n\u4e0d\u96be\u53d1\u73b0\u8fd9\u6837\u662f\u5bf9\u7684\u3002\u56e0\u4e3a\u82e5\u4e00\u4e2a\u70b9\u7684\u7ec8\u70b9\u5835\u5728\u4e86\u53e6\u4e00\u4e2a\u70b9\u5230\u7ec8\u70b9\u7684\u552f\u4e00\u9053\u8def\u4e0a\uff0c\u53ef\u4ee5\u4ea4\u6362\u4ed6\u4eec\u7684\u76ee\u7684\u5730\uff0c\u5c31\u4e0d\u4f1a\u6709\u5f71\u54cd\u4e86\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^3m^3)$\u3002\u4f46\u662f\u4f17\u6240\u5468\u77e5\u8d39\u7528\u6d41\u8fdc\u8fdc\u8dd1\u4e0d\u6ee1\uff0c\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int NN=2504,MM=20004;\nint head[NN],ne[MM],e[MM],w[MM],c[MM],f[NN],d[NN],pre[NN],idx=-1,flow,cost,s,t;\nbool st[NN];\nchar str[54][54];\nvoid add(int u,int v,int l,int money)\n{\n    e[++idx]=v;\n    ne[idx]=head[u];\n    c[idx]=l;\n    w[idx]=money;\n    head[u]=idx;\n    e[++idx]=u;\n    ne[idx]=head[v];\n    w[idx]=-money;\n    head[v]=idx;\n}\nbool spfa()\n{\n    memset(f,0,sizeof(f));\n    memset(d,0x3f,sizeof(d));\n    queue<int>q;\n    q.push(s);\n    f[s]=1e9;\n    d[s]=0;\n    st[s]=true;\n    while(q.size())\n    {\n        int u=q.front();\n        q.pop();\n        st[u]=false;\n        for(int i=head[u];~i;i=ne[i])\n        {\n            int v=e[i];\n            if(c[i]&&d[v]>d[u]+w[i])\n            {\n                f[v]=min(f[u],c[i]);\n                d[v]=d[u]+w[i];\n                pre[v]=i;\n                if(st[v])\n                    continue;\n                q.push(v);\n                st[v]=true;\n            }\n        }\n    }\n    return f[t]>0;\n}\nvoid EK()\n{\n    while(spfa())\n    {\n        flow+=f[t];\n        cost+=d[t]*f[t];\n        for(int i=t;i!=s;i=e[pre[i]^1])\n        {\n            c[pre[i]]-=f[t];\n            c[pre[i]^1]+=f[t];\n        }\n    }\n}\nint n,m;\nint get(int x,int y)\n{\n\treturn (x-1)*m+y;\n}\nint main()\n{\n    memset(head,-1,sizeof(head));\n    scanf(\"%d%d\",&n,&m);\n    t=n*m+1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%s\",str[i]+1);\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tif(str[i][j]=='#')\n\t\t\t\tcontinue;\n\t\t\tif(str[i][j]=='o')\n\t\t\t\tadd(s,get(i,j),1,0);\n\t\t\tif(i+1<=n)\n\t\t\t\tadd(get(i,j),get(i+1,j),1e9,-1);\n\t\t\tif(j+1<=m)\n\t\t\t\tadd(get(i,j),get(i,j+1),1e9,-1);\n\t\t\tadd(get(i,j),t,1,0);\n\t\t}\n\t}\n    EK();\n    printf(\"%d\",-cost);\n    return 0;\n}\n```",
        "postTime": 1681522994,
        "uid": 132424,
        "name": "\u826f\u5fc3WA\u9898\u4eba",
        "ccfLevel": 7,
        "title": "ACL1-problem C"
    }
]