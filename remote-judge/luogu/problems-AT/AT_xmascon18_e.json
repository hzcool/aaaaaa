{
    "description": "[problemUrl]: https://atcoder.jp/contests/xmascon18/tasks/xmascon18_e\n\n\u6574\u6570 $ N $ \u304c\u4e0e\u3048\u3089\u308c\u305f\u3068\u304d\uff0c\u4ee5\u4e0b\u306e\u4ed5\u69d8\u3092\u6e80\u305f\u3059\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u3046\u3061\uff0c\u30d7\u30ed\u30b0\u30e9\u30e0\u4e2d\u3067\u306e NOT \u306e\u4f7f\u7528\u56de\u6570\u304c\u6700\u5c0f\u306e\u3082\u306e\u3092 $ 1 $ \u3064\u51fa\u529b\u305b\u3088 (NOT \u306e\u4f7f\u7528\u56de\u6570\u304c\u6700\u5c0f\u3067\u306a\u3044\u3068\u304d\u3082\uff0c\u5f8c\u8ff0\u306e\u3088\u3046\u306b\u90e8\u5206\u70b9\u304c\u4e0e\u3048\u3089\u308c\u308b\u5834\u5408\u304c\u3042\u308b)\uff0e\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5165\u529b\u306f $ N $ \u500b\u306e\u30d6\u30fc\u30eb\u5909\u6570 $ b_0,\\ b_1,\\ \\ldots,\\ b_{N-1} $ \u3067\u3042\u308a\uff0c\u3053\u308c\u3089\u304b\u3089 $ 2 $ \u500b\u3092\u9078\u3093\u3067 XOR \u3092\u3068\u3063\u305f\u5024 $ b_i\\ \\operatorname{XOR}\\ b_j $ \u3092\u3059\u3079\u3066\u6c42\u3081\u305f\u3044\uff0e\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u4ee5\u4e0b\u306e $ N\\ +\\ N^2\\ +\\ 10^5 $ \u500b\u306e\u30d6\u30fc\u30eb\u5909\u6570 (true \u307e\u305f\u306f false \u306e\u5024\u3092\u3068\u308b) \u3092\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\uff1a\n\n- $ \\mathrm{in}[i] $ ($ i\\ =\\ 0,\\ 1,\\ \\ldots,\\ N\\ -\\ 1 $)\n- $ \\mathrm{out}[i][j] $ ($ i\\ =\\ 0,\\ 1,\\ \\ldots,\\ N\\ -\\ 1 $\uff0c$ j\\ =\\ 0,\\ 1,\\ \\ldots,\\ N\\ -\\ 1 $)\n- $ \\mathrm{a}[k] $ ($ k\\ =\\ 0,\\ 1,\\ \\ldots,\\ 10^5\\ -\\ 1 $)\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u306f $ 0 $ \u884c\u4ee5\u4e0a $ 10^5 $ \u884c\u4ee5\u4e0b\u304b\u3089\u306a\u308a\uff0c\u4e0a\u304b\u3089\u4e0b\u3078\u3068\u5b9f\u884c\u3055\u308c\u308b\uff0e\u5404\u884c\u306f\n\n- `\u5909\u6570 = \u5909\u6570 AND \u5909\u6570`\n- `\u5909\u6570 = \u5909\u6570 OR \u5909\u6570`\n- `\u5909\u6570 = NOT \u5909\u6570`\n\n\u306e\u3044\u305a\u308c\u304b\u306e\u5f62\u3067\u3042\u308a\uff0c\u53f3\u8fba\u306e\u8a08\u7b97\u7d50\u679c\u3092\u5de6\u8fba\u306e\u5909\u6570\u306b\u4ee3\u5165\u3059\u308b\u3053\u3068\u3092\u8868\u3059\uff0e\n\n\u5b9f\u884c\u958b\u59cb\u6642\u306b\uff0c\u5404 $ \\mathrm{in}[i] $ \u306f\u5165\u529b $ b_i $ \u3067\uff0c\u5404 $ \\mathrm{out}[i][j] $ \u304a\u3088\u3073\u5404 $ \\mathrm{a}[k] $ \u306f false \u3067\u521d\u671f\u5316\u3055\u308c\u308b\uff0e\u5b9f\u884c\u7d42\u4e86\u6642\u306b\uff0c\u5404 $ \\mathrm{out}[i][j] $ \u306e\u5024\u306f $ b_i\\ \\operatorname{XOR}\\ b_j $ \u3067\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\uff0e",
    "inputFormat": "\u5165\u529b\u306f\u4ee5\u4e0b\u306e\u5f62\u5f0f\u3067\u6a19\u6e96\u5165\u529b\u304b\u3089\u4e0e\u3048\u3089\u308c\u308b\u3002\n\n> $ N $",
    "outputFormat": "\u554f\u984c\u6587\u306e\u4ed5\u69d8\u3092\u6e80\u305f\u3059\uff0cNOT \u306e\u4f7f\u7528\u56de\u6570\u304c\u6700\u5c0f\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092 $ 1 $ \u3064\u51fa\u529b\u305b\u3088\uff0e\n\n\u63a1\u70b9\u7d50\u679c\u306e `AC` \u306f\uff0c\u554f\u984c\u6587\u306e\u4ed5\u69d8\u3092\u6e80\u305f\u3059\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u51fa\u529b\u3057\u305f\u3053\u3068\u3092\u8868\u3059\uff0e",
    "samples": [
        [
            "3",
            "a[0] = NOT in[0]\r\na[1] = NOT in[1]\r\na[2] = NOT in[2]\r\na[901] = in[0] AND a[1]\r\na[902] = in[0] AND a[2]\r\na[910] = in[1] AND a[0]\r\na[912] = in[1] AND a[2]\r\na[920] = in[2] AND a[0]\r\na[921] = in[2] AND a[1]\r\nout[0][1] = a[901] OR a[910]\r\nout[0][2] = a[902] OR a[920]\r\nout[1][0] = a[910] OR a[901]\r\nout[1][2] = a[912] OR a[921]\r\nout[2][0] = a[920] OR a[902]\r\nout[2][1] = a[921] OR a[912]"
        ]
    ],
    "hint": "### \u30b9\u30c8\u30fc\u30ea\u30fc\n\n\u304f\u308d\u3046\u3055\u300cXOR \u306f\u7518\u3048\u300d\n\n\u3057\u308d\u3046\u3055\u300c\u307e\u30fc\u305f\u59cb\u307e\u3063\u305f\u300d\n\n\u304f\u308d\u3046\u3055\u300cAND \u3068 OR \u306f\u8a31\u3057\u3066\u3042\u3052\u308b\u300d\n\n\u3057\u308d\u3046\u3055\u300c\u3048\u3063\u3068\u3048\u3063\u3068\u300d\n\n\u304f\u308d\u3046\u3055\u300c\u5426\u5b9a\u306f\u3088\u304f\u306a\u3044\u3088\u306d\u301c\u3046\u3093\u3046\u3093\u300d\n\n\u3057\u308d\u3046\u3055\u300c\u5426\u5b9a\u3063\u3066\u3082\u3057\u304b\u3057\u3066 NOT \u306e\u3053\uff54\n\n\u304f\u308d\u3046\u3055\u300c\u3068\u3044\u3046\u308f\u3051\u3067\u4eca\u5e74\u3082\u304c\u3093\u3070\u3063\u3066\u306d\u3063\u300d\n\n### \u5236\u7d04\n\n- $ 1\\ \\le\\ N\\ \\le\\ 16 $\n\n### \u90e8\u5206\u70b9\n\n- $ N\\ \\le\\ 2 $ \u3092\u6e80\u305f\u3059\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u6b63\u89e3\u3057\u305f\u5834\u5408\u306f\uff0c$ 10 $ \u70b9\u304c\u4e0e\u3048\u3089\u308c\u308b\uff0e\n- $ N\\ \\le\\ 3 $ \u3092\u6e80\u305f\u3059\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u6b63\u89e3\u3057\u305f\u5834\u5408\u306f\uff0c\u4e0a\u8a18\u3068\u306f\u5225\u306b $ 10 $ \u70b9\u304c\u4e0e\u3048\u3089\u308c\u308b\uff0e\n- $ N\\ \\le\\ 4 $ \u3092\u6e80\u305f\u3059\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u6b63\u89e3\u3057\u305f\u5834\u5408\u306f\uff0c\u4e0a\u8a18\u3068\u306f\u5225\u306b $ 20 $ \u70b9\u304c\u4e0e\u3048\u3089\u308c\u308b\uff0e\n- $ N\\ \\le\\ 8 $ \u3092\u6e80\u305f\u3059\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u6b63\u89e3\u3057\u305f\u5834\u5408\u306f\uff0c\u4e0a\u8a18\u3068\u306f\u5225\u306b $ 20 $ \u70b9\u304c\u4e0e\u3048\u3089\u308c\u308b\uff0e\n- \u8ffd\u52a0\u5236\u7d04\u306e\u306a\u3044\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u6b63\u89e3\u3057\u305f\u5834\u5408\u306f\uff0c\u4e0a\u8a18\u3068\u306f\u5225\u306b $ 40 $ \u70b9\u304c\u4e0e\u3048\u3089\u308c\u308b\uff0e\n- \u5404\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u3064\u3044\u3066\uff0c\u6b63\u89e3\u3067\u306f\u306a\u3044\u304c\uff0c\u3059\u3079\u3066\u306e\u5165\u529b\u306b\u3064\u3044\u3066 NOT \u306e\u4f7f\u7528\u56de\u6570\u304c $ N\\ -\\ 1 $ \u4ee5\u4e0b\u306e\u6b63\u3057\u3044\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u51fa\u529b\u3057\u305f\u5834\u5408\uff0c\u305d\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u914d\u70b9\u306e $ 20 $ % \u304c\u4e0e\u3048\u3089\u308c\u308b\uff0e\n\n### Sample Explanation 1\n\n\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\uff0c$ 3 $ \u56de\u306e NOT \u306e\u4f7f\u7528\u306b\u3088\u3063\u3066 XOR \u3092\u3059\u3079\u3066\u8a08\u7b97\u3057\u3066\u3044\u308b\uff0e\u305f\u3060\u3057\uff0cNOT \u306e\u4f7f\u7528\u56de\u6570\u306f\u3053\u308c\u304c\u6700\u5c0f\u3067\u306f\u306a\u3044\uff0e $ N\\ =\\ 3 $ \u306e\u5834\u5408\u306f\u3053\u3061\u3089\u3067\u624b\u3067\u904a\u3079\u308b\uff0e \u8868\u793a/\u975e\u8868\u793a AND \u3068 OR \u306f\u3075\u305f\u3064\uff0cNOT \u306f\u3072\u3068\u3064\u9078\u3093\u3067\u304b\u3089\u6f14\u7b97\u5b50\u30dc\u30bf\u30f3\u3092\u62bc\u305d\u3046\uff01 (\u52d5\u4f5c\u78ba\u8a8d\uff1aChrome 70, Firefox 60) var numVars = 0; var selectedDiagrams = {}; function init() { initButtons(); initBoard(); } function initButtons() { const buttons = document.getElementById('buttons'); for (op of \\['Reset', 'Undo', 'AND', 'OR', 'NOT'\\]) { const button = document.createElement('input'); button.type = 'button'; button.id = 'button-' + op; button.value = op; button.addEventListener('click', operate.bind(null, op)); buttons.appendChild(button); } } function initBoard() { const board = document.getElementById('board'); board.appendChild(createDiagram('in\\[0\\]', 0b10101010)); board.appendChild(createDiagram('in\\[1\\]', 0b11001100)); board.appendChild(createDiagram('in\\[2\\]', 0b11110000)); } function resetProgram() { document.getElementById('program').innerHTML = ''; } function addProgram(line) { document.getElementById('program').innerHTML += line + '\\\\n'; } function undoProgram() { const program = document.getElementById('program'); const str = program.innerHTML; program.innerHTML = str.slice(0, str.lastIndexOf('\\\\n', str.length - 2) + 1); } function resetBoard() { const board = document.getElementById('board'); for (diagram of board.childNodes) { unselect(diagram); } for (; numVars &gt; 0; --numVars) { const diagram = board.lastChild; board.removeChild(diagram); } } function addDiagram(name, value) { const board = document.getElementById('board'); const diagram = createDiagram(name, value); board.appendChild(diagram); } function operate(op) { const diagrams = Object.values(selectedDiagrams); switch (op) { case 'Reset': resetProgram(); resetBoard(); break; case 'Undo': if (numVars &gt; 0) { undoProgram(); const diagram = board.lastChild; unselect(diagram); board.removeChild(diagram); --numVars; } break; case 'AND': if (diagrams.length == 2) { var resultName = 'a\\[' + (numVars++) + '\\]'; addProgram(resultName + ' = ' + diagrams\\[0\\].name + ' AND ' + diagrams\\[1\\].name); addDiagram(resultName, diagrams\\[0\\].value &amp; diagrams\\[1\\].value); unselect(diagrams\\[0\\]); unselect(diagrams\\[1\\]); } break; case 'OR': if (diagrams.length == 2) { var resultName = 'a\\[' + (numVars++) + '\\]'; addProgram(resultName + ' = ' + diagrams\\[0\\].name + ' OR ' + diagrams\\[1\\].name); addDiagram(resultName, diagrams\\[0\\].value | diagrams\\[1\\].value); unselect(diagrams\\[0\\]); unselect(diagrams\\[1\\]); } break; case 'NOT': if (diagrams.length == 1) { var resultName = 'a\\[' + (numVars++) + '\\]'; addProgram(resultName + ' = ' + 'NOT ' + diagrams\\[0\\].name); addDiagram(resultName, ((1 &lt;&lt; 8) - 1) ^ diagrams\\[0\\].value); unselect(diagrams\\[0\\]); } break; } } function toggle(diagram) { (diagram.selected ? unselect : select)(diagram); } function select(diagram) { if (!diagram.selected) { if (Object.keys(selectedDiagrams).length &lt; 2) { diagram.selected = true; diagram.classList.add('selected'); selectedDiagrams\\[diagram.name\\] = diagram; } } } function unselect(diagram) { if (diagram.selected) { diagram.selected = false; diagram.classList.remove('selected'); delete selectedDiagrams\\[diagram.name\\]; } } function createDiagram(name, value) { const SIZE = 150; const diagram = document.createElement('canvas'); diagram.name = name; diagram.value = value; diagram.selected = false; diagram.width = SIZE; diagram.height = SIZE; diagram.addEventListener('click', toggle.bind(null, diagram)); var context = diagram.getContext('2d'); context.transform(1, 0, 0, -1, 0, SIZE); const radius = SIZE \\* 0.3; const xs = \\[SIZE / 2, SIZE / 2 - radius / 2, SIZE / 2 + radius / 2\\]; const ys = \\[SIZE \\* 0.45 + radius / Math.sqrt(3), SIZE \\* 0.45 - radius / 2 / Math.sqrt(3), SIZE \\* 0.45 - radius / 2 / Math.sqrt(3)\\]; for (var t = 0; t &lt; 8; ++t) { context.fillStyle = ((value &gt;&gt; t) &amp; 1) ? 'gold' : 'white'; context.beginPath(); switch (t) { case 0: context.moveTo(0, 0); context.lineTo(SIZE, 0); context.lineTo(SIZE, SIZE); context.lineTo(0, SIZE); context.lineTo(0, 0); break; case 1: context.arc(xs\\[0\\], ys\\[0\\], radius, 0, Math.PI \\* 2, false); break; case 2: context.arc(xs\\[1\\], ys\\[1\\], radius, 0, Math.PI \\* 2, false); break; case 3: context.arc(xs\\[0\\], ys\\[0\\], radius, Math.PI, Math.PI \\* 5 / 3, false); context.arc(xs\\[1\\], ys\\[1\\], radius, 0, Math.PI \\* 2 / 3, false); break; case 4: context.arc(xs\\[2\\], ys\\[2\\], radius, 0, Math.PI \\* 2, false); break; case 5: context.arc(xs\\[0\\], ys\\[0\\], radius, Math.PI \\* 4 / 3, 0, false); context.arc(xs\\[2\\], ys\\[2\\], radius, Math.PI / 3, Math.PI, false); break; case 6: context.arc(xs\\[1\\], ys\\[1\\], radius, Math.PI \\* 5 / 3, Math.PI / 3, false); context.arc(xs\\[2\\], ys\\[2\\], radius, Math.PI \\* 2 / 3, Math.PI \\* 4 / 3, false); break; case 7: context.arc(xs\\[0\\], ys\\[0\\], radius, Math.PI \\* 4 / 3, Math.PI \\* 5 / 3, false); context.arc(xs\\[1\\], ys\\[1\\], radius, 0, Math.PI / 3, false); context.arc(xs\\[2\\], ys\\[2\\], radius, Math.PI \\* 2 / 3, Math.PI, false); break; } context.fill(); } for (var i = 0; i &lt; 3; ++i) { context.beginPath(); context.arc(xs\\[i\\], ys\\[i\\], radius, 0, Math.PI \\* 2, false); context.stroke(); } context.transform(1, 0, 0, -1, 0, SIZE); context.textAlign = 'left'; context.textBaseline = 'top'; context.fillStyle = 'black'; context.fillText(name, 5, 5); return diagram; } window.addEventListener('load', init); $ (function()\\ { $('#game-btn').click(function() { $('#game').slideToggle(); });} );"
}