{
    "description": "[problemUrl]: https://atcoder.jp/contests/future-contest-2022-qual/tasks/future_contest_2022_qual_a\n\n$ N $ \u500b\u306e\u30bf\u30b9\u30af\u3092 $ M $ \u4eba\u306e\u30c1\u30fc\u30e0\u30e1\u30f3\u30d0\u30fc\u306b\u5272\u308a\u632f\u308a\u305f\u3044\u3002 \u5404\u30bf\u30b9\u30af\u306f\u9ad8\u30051\u4eba\u306b\u5272\u308a\u632f\u308a\u3001\u30bf\u30b9\u30af\u304c\u5272\u308a\u632f\u3089\u308c\u305f\u30c1\u30fc\u30e0\u30e1\u30f3\u30d0\u30fc\u306b\u306f\u305d\u306e\u30bf\u30b9\u30af\u304c\u5b8c\u4e86\u3059\u308b\u307e\u3067\u4ed6\u306e\u30bf\u30b9\u30af\u3092\u5272\u308a\u632f\u308b\u3053\u3068\u306f\u51fa\u6765\u306a\u3044\u3002 \u5168\u90e8\u3067 $ K $ \u7a2e\u985e\u306e\u6280\u80fd\u304c\u3042\u308a\u3001\u5404\u30c1\u30fc\u30e0\u30e1\u30f3\u30d0\u30fc $ j $ \u306b\u306f\u6280\u80fd\u30ec\u30d9\u30eb\u3092\u8868\u3059\u975e\u8ca0\u6574\u6570\u30d9\u30af\u30c8\u30eb $ \\bm{s_j}\\ =\\ (s_{j,1},\\cdots,s_{j,K}) $ \u304c\u3001\u5404\u30bf\u30b9\u30af $ i $ \u306b\u306f\u8981\u6c42\u6280\u80fd\u30ec\u30d9\u30eb\u3092\u8868\u3059\u975e\u8ca0\u6574\u6570\u30d9\u30af\u30c8\u30eb $ \\bm{d_i}\\ =\\ (d_{i,1},\\cdots,d_{i,K}) $ \u304c\u305d\u308c\u305e\u308c\u5b9a\u307e\u3063\u3066\u3044\u308b\u3002 \u3053\u306e\u3046\u3061\u3001\u5404\u30c1\u30fc\u30e0\u30e1\u30f3\u30d0\u30fc\u306e\u6280\u80fd\u30ec\u30d9\u30eb $ \\bm{s_1},\\cdots,\\bm{s_M} $ \u306f\u5165\u529b\u3068\u3057\u3066\u4e0e\u3048\u3089\u308c\u306a\u3044\u3002\n\n$ w_{i,j}:=\\sum_{k=1}^K\\ \\max(0,d_{i,k}-s_{j,k}) $ \u3068\u5b9a\u3081\u308b\u3002 \u30c1\u30fc\u30e0\u30e1\u30f3\u30d0\u30fc $ j $ \u306b\u30bf\u30b9\u30af $ i $ \u3092\u5272\u308a\u632f\u3063\u305f\u6642\u3001\u30bf\u30b9\u30af\u306e\u5b8c\u4e86\u307e\u3067\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9a\u3081\u308b $ t_{i,j} $ \u65e5\u304b\u304b\u308b\u3002\n\n1. $ w_{i,j}=0 $ \u306e\u5834\u5408\u3001$ t_{i,j}=1 $\u3002\n2. $ w_{i,j}\\ >\\ 0 $ \u306e\u5834\u5408\u3001$ -3 $ \u4ee5\u4e0a $ 3 $ \u4ee5\u4e0b\u306e\u6574\u6570\u5024\u3092\u3068\u308b\u4e00\u69d8\u4e71\u6570\u3092 $ r_i $ \u3068\u3057\u3066\u3001$ t_{i,j}=\\max(1,w_{i,j}+r_i) $\u3002\n\n$ t $ \u65e5\u304b\u304b\u308b\u30bf\u30b9\u30af\u3092 $ d $ \u65e5\u76ee\u306b\u958b\u59cb\u3057\u305f\u5834\u5408\u3001$ d+t-1 $ \u65e5\u76ee\u306e\u7d42\u308f\u308a\u306b\u305d\u306e\u30bf\u30b9\u30af\u306f\u5b8c\u4e86\u3059\u308b\u3002 \u30bf\u30b9\u30af\u9593\u306b\u306f\u4f9d\u5b58\u95a2\u4fc2\u304c\u3042\u308a\u3001\u3042\u308b\u30bf\u30b9\u30af\u3092\u958b\u59cb\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u4f9d\u5b58\u3059\u308b\u5168\u3066\u306e\u30bf\u30b9\u30af\u304c\u524d\u65e5\u306e\u7d42\u308f\u308a\u307e\u3067\u306b\u5b8c\u4e86\u3057\u3066\u3044\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002 \u51fa\u6765\u308b\u3060\u3051\u77ed\u3044\u65e5\u6570\u3067\u5168\u3066\u306e\u30bf\u30b9\u30af\u3092\u5b8c\u4e86\u3057\u3066\u307b\u3057\u3044\u3002\n\n### Input &amp; Output Format\n\n\u5404\u5165\u529b\u5024\u306e\u7bc4\u56f2\u306b\u3064\u3044\u3066\u306f\u5165\u529b\u751f\u6210\u306e\u9805\u3092\u53c2\u7167\u305b\u3088\u3002\n\n\u307e\u305a\u306f\u3058\u3081\u306b\u3001\u30bf\u30b9\u30af\u6570 $ N $\u3001\u30c1\u30fc\u30e0\u30e1\u30f3\u30d0\u30fc\u6570 $ M $\u3001\u6280\u80fd\u6570 $ K $\u3001\u4f9d\u5b58\u95a2\u4fc2\u6570 $ R $\u3001\u5404\u30bf\u30b9\u30af\u306e\u8981\u6c42\u6280\u80fd\u30ec\u30d9\u30eb $ \\bm{d_1},\\cdots,\\bm{d_N} $\u3001\u4f9d\u5b58\u3059\u308b\u30bf\u30b9\u30af\u306e\u7d44\u306e\u30ea\u30b9\u30c8 $ (u_1,v_1),\\cdots,(u_R,v_R) $ \u304c\u4ee5\u4e0b\u306e\u5f62\u5f0f\u3067\u6a19\u6e96\u5165\u529b\u304b\u3089\u4e0e\u3048\u3089\u308c\u308b\u3002\n\n> $ N $ $ M $ $ K $ $ R $ $ d_{1,1} $ $ \\cdots $ $ d_{1,K} $ $ \\vdots $ $ d_{N,1} $ $ \\cdots $ $ d_{N,K} $ $ u_1 $ $ v_1 $ $ \\vdots $ $ u_R $ $ v_R $\n\n$ (u_i,v_i) $ \u306f\u3001\u30bf\u30b9\u30af $ v_i $ ($ 1\\leq\\ v_i\\leq\\ N $) \u304c\u30bf\u30b9\u30af $ u_i $ ($ 1\\leq\\ u_i\\leq\\ N $) \u306b\u4f9d\u5b58\u3057\u3066\u304a\u308a\u3001$ v_i $ \u3092\u958b\u59cb\u3059\u308b\u524d\u306b $ u_i $ \u3092\u5b8c\u4e86\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3053\u3068\u3092\u793a\u3057\u3066\u3044\u308b\u3002 $ u_i\\ <\\ v_i $ \u3092\u6e80\u305f\u3057\u3001\u540c\u3058$ (u_i,v_i) $\u306e\u30da\u30a2\u306f\u9ad8\u3005\u4e00\u56de\u3057\u304b\u5165\u529b\u306b\u542b\u307e\u308c\u306a\u3044\u3002\n\n\u6b21\u306b\u30011\u65e5\u76ee\u304b\u3089\u59cb\u3081\u3001\u6bce\u65e5\u4ee5\u4e0b\u306e2\u3064\u306e\u51e6\u7406\u3092\u305b\u3088\u3002\n\n\u307e\u305a\u3001\u305d\u306e\u65e5\u306b\u30bf\u30b9\u30af\u3092\u958b\u59cb\u3059\u308b\u30c1\u30fc\u30e0\u30e1\u30f3\u30d0\u30fc $ a_i $ ($ 1\\leq\\ a_i\\leq\\ M $) \u3068\u62c5\u5f53\u3059\u308b\u30bf\u30b9\u30af $ b_i $ ($ 1\\leq\\ b_i\\leq\\ N $) \u306e\u7d44\u306e\u30ea\u30b9\u30c8 $ (a_1,b_1),\\cdots,(a_m,b_m) $ \u3092\u4ee5\u4e0b\u306e\u5f62\u5f0f\u3067\u6a19\u6e96\u51fa\u529b\u306b1\u884c\u306b\u51fa\u529b\u305b\u3088\u3002\n\n> $ m $ $ a_1 $ $ b_1 $ $ \\cdots $ $ a_m $ $ b_m $\n\n**\u51fa\u529b\u306e\u3042\u3068\u306f\u6a19\u6e96\u51fa\u529b\u3092 flush \u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002**\u305d\u3046\u3057\u306a\u3044\u5834\u5408\u3001TLE\u3068\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002\n\n\u6b21\u306b\u3001\u305d\u306e\u65e5\u306e\u7d42\u308f\u308a\u306b\u30bf\u30b9\u30af\u3092\u5b8c\u4e86\u3057\u305f\u30c1\u30fc\u30e0\u30e1\u30f3\u30d0\u30fc\u306e\u30ea\u30b9\u30c8 $ f_1,\\cdots,f_n $ ($ 1\\leq\\ f_1\\ <\\ \\cdots\\ <\\ f_n\\leq\\ M $) \u304c\u4ee5\u4e0b\u306e\u5f62\u5f0f\u3067\u6a19\u6e96\u5165\u529b\u304b\u30891\u884c\u3067\u4e0e\u3048\u3089\u308c\u308b\u3002\n\n> $ n $ $ f_1 $ $ \\cdots $ $ f_n $\n\n\u5168\u3066\u306e\u30bf\u30b9\u30af\u304c\u5b8c\u4e86\u3059\u308b\u304b\u3001$ 2000 $ \u65e5\u76ee\u304c\u7d42\u4e86\u3057\u305f\u5834\u5408\u3001\u4e0a\u8a18\u306e\u5165\u529b\u306e\u4ee3\u308f\u308a\u306b `-1` \u306e\u307f\u304b\u3089\u306a\u308b\u884c\u304c\u5165\u529b\u3068\u3057\u3066\u4e0e\u3048\u3089\u308c\u308b\u306e\u3067\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d42\u4e86\u305b\u3088\u3002",
    "inputFormat": "",
    "outputFormat": "",
    "samples": [],
    "hint": "### \u30b9\u30c8\u30fc\u30ea\u30fc\n\nF\u793e\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30ea\u30fc\u30c0\u30fc\u306b\u5c31\u4efb\u3057\u305f\u3042\u306a\u305f\u306e\u4ed5\u4e8b\u306f\u3001\u30c1\u30fc\u30e0\u30e1\u30f3\u30d0\u30fc\u306b\u9069\u5207\u306b\u30bf\u30b9\u30af\u3092\u5272\u308a\u632f\u308b\u3053\u3068\u3067\u3042\u308b\u3002 \u73fe\u5728\u53d6\u308a\u7d44\u3093\u3067\u3044\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306f\u3044\u304f\u3064\u304b\u306e\u30bf\u30b9\u30af\u304b\u3089\u306a\u308a\u3001 \u5404\u30c1\u30fc\u30e0\u30e1\u30f3\u30d0\u30fc\u306e\u6301\u3064\u6280\u80fd\u30ec\u30d9\u30eb\u3068\u5404\u30bf\u30b9\u30af\u3054\u3068\u306e\u8981\u6c42\u6280\u80fd\u30ec\u30d9\u30eb\u306b\u5fdc\u3058\u3066\u3001\u30bf\u30b9\u30af\u306e\u5b8c\u4e86\u307e\u3067\u306b\u304b\u304b\u308b\u65e5\u6570\u306e\u671f\u5f85\u5024\u304c\u5909\u5316\u3059\u308b\u3002 \u7d4c\u9a13\u8c4a\u5bcc\u306a\u3042\u306a\u305f\u306f\u3001\u5404\u30bf\u30b9\u30af\u306e\u8981\u6c42\u6280\u80fd\u30ec\u30d9\u30eb\u3092\u6b63\u78ba\u306b\u628a\u63e1\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u304c\u3001\u5c31\u4efb\u3057\u305f\u3070\u304b\u308a\u306e\u305f\u3081\u3001\u5404\u30c1\u30fc\u30e0\u30e1\u30f3\u30d0\u30fc\u306e\u6280\u80fd\u30ec\u30d9\u30eb\u306f\u307e\u3060\u5168\u304f\u5206\u304b\u3063\u3066\u3044\u306a\u3044\u3002 \u30c1\u30fc\u30e0\u30e1\u30f3\u30d0\u30fc\u306e\u6280\u80fd\u30ec\u30d9\u30eb\u3092\u5f90\u3005\u306b\u898b\u6975\u3081\u306a\u304c\u3089\u3001\u9069\u5207\u306b\u30bf\u30b9\u30af\u3092\u5272\u308a\u632f\u3063\u3066\u307b\u3057\u3044\u3002\n\n### \u4f8b\n\n\u65e5\u6570 Output Input \u4e8b\u524d\u60c5\u5831  ```\n3 2 2 1\n0 1\n2 0\n1 1\n2 3\n```\n\n 1\u65e5\u76ee ```\n2 1 1 2 2\n```\n\n ```\n1 1\n```\n\n 2\u65e5\u76ee ```\n0\n```\n\n ```\n1 2\n```\n\n 3\u65e5\u76ee ```\n1 1 3\n```\n\n ```\n0\n```\n\n 4\u65e5\u76ee ```\n0\n```\n\n ```\n0\n```\n\n 5\u65e5\u76ee ```\n0\n```\n\n ```\n-1\n```\n\n### \u5f97\u70b9\n\n$ D $ ($ 1\\leq\\ D\\leq\\ 2000 $)\u65e5\u76ee\u306e\u7d42\u308f\u308a\u306b\u5168\u3066\u306e\u30bf\u30b9\u30af\u3092\u5b8c\u4e86\u3057\u305f\u5834\u5408\u3001$ N+2000-D $ \u306e\u5f97\u70b9\u304c\u5f97\u3089\u308c\u308b\u3002 $ 2000 $ \u65e5\u4ee5\u5185\u306b\u30bf\u30b9\u30af\u3092\u5168\u3066\u5b8c\u4e86\u51fa\u6765\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u3001\u5b8c\u4e86\u3057\u305f\u30bf\u30b9\u30af\u306e\u7dcf\u6570\u3092 $ T(\\ <\\ N) $ \u3068\u3057\u3066\u3001$ T $ \u306e\u5f97\u70b9\u304c\u5f97\u3089\u308c\u308b\u3002\n\n#### \u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u6570\n\n- \u66ab\u5b9a\u30c6\u30b9\u30c8 50\u500b\n- \u30b7\u30b9\u30c6\u30e0\u30c6\u30b9\u30c8 3000\u500b\u3001 \u30b3\u30f3\u30c6\u30b9\u30c8\u7d42\u4e86\u5f8c\u306b[seeds.txt](https://img.atcoder.jp/future-contest-2022-qual/seeds.txt)(md5=a90d2e3883a546dfb66a4215b8d7a995)\u3092\u516c\u958b\n\n\u5404\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306e\u5f97\u70b9\u306e\u5408\u8a08\u304c\u63d0\u51fa\u306e\u5f97\u70b9\u3068\u306a\u308b\u3002 \u66ab\u5b9a\u30c6\u30b9\u30c8\u3067\u306f\u3001\u4e00\u3064\u4ee5\u4e0a\u306e\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3067\u4e0d\u6b63\u306a\u51fa\u529b\u3084\u5236\u9650\u6642\u9593\u8d85\u904e\u3092\u3057\u305f\u5834\u5408\u3001\u63d0\u51fa\u5168\u4f53\u306e\u5224\u5b9a\u304cWA\u3084TLE\u3068\u306a\u308b\u3002 \u30b7\u30b9\u30c6\u30e0\u30c6\u30b9\u30c8\u3067\u306f\u3001\u4e0d\u6b63\u306a\u51fa\u529b\u3084\u5236\u9650\u6642\u9593\u8d85\u904e\u3092\u3057\u305f\u5834\u5408\u3001\u305d\u306e\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306e\u307f0\u70b9\u3068\u306a\u308b\u3002 \u63d0\u51fa\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u7570\u5e38\u7d42\u4e86\u3057\u305f\u5834\u5408\u3001 RE \u3067\u306f\u306a\u304f WA \u3068\u5224\u5b9a\u3055\u308c\u308b\u5834\u5408\u304c\u3042\u308b\u306e\u3067\u6ce8\u610f\u305b\u3088\u3002\n\n#### \u5b9f\u884c\u6642\u9593\u306b\u3064\u3044\u3066\n\n\u5b9f\u884c\u6642\u9593\u306b\u306f\u591a\u5c11\u306e\u30d6\u30ec\u304c\u751f\u3058\u307e\u3059\u3002 \u307e\u305f\u3001\u30b7\u30b9\u30c6\u30e0\u30c6\u30b9\u30c8\u3067\u306f\u540c\u6642\u306b\u5927\u91cf\u306e\u5b9f\u884c\u3092\u884c\u3046\u305f\u3081\u3001\u66ab\u5b9a\u30c6\u30b9\u30c8\u306b\u6bd4\u3079\u3066\u6570%\u7a0b\u5ea6\u5b9f\u884c\u6642\u9593\u304c\u4f38\u3073\u308b\u73fe\u8c61\u304c\u78ba\u8a8d\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u305d\u306e\u305f\u3081\u3001\u5b9f\u884c\u6642\u9593\u5236\u9650\u30ae\u30ea\u30ae\u30ea\u306e\u63d0\u51fa\u304c\u30b7\u30b9\u30c6\u30e0\u30c6\u30b9\u30c8\u3067TLE\u3068\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002 \u30d7\u30ed\u30b0\u30e9\u30e0\u5185\u3067\u6642\u9593\u3092\u8a08\u6e2c\u3057\u3066\u51e6\u7406\u3092\u6253\u3061\u5207\u308b\u304b\u3001\u5b9f\u884c\u6642\u9593\u306b\u4f59\u88d5\u3092\u6301\u305f\u305b\u308b\u3088\u3046\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n\n### \u5165\u529b\u751f\u6210\u65b9\u6cd5\n\n$ L $ \u4ee5\u4e0a $ U $ \u4ee5\u4e0b\u306e\u6574\u6570\u5024\u3092\u4e00\u69d8\u30e9\u30f3\u30c0\u30e0\u306b\u751f\u6210\u3059\u308b\u95a2\u6570\u3092 $ \\mathrm{randint}(L,\\ U) $\u3001 $ L $ \u4ee5\u4e0a $ U $ \u672a\u6e80\u306e\u6d6e\u52d5\u5c0f\u6570\u5024\u3092\u4e00\u69d8\u30e9\u30f3\u30c0\u30e0\u306b\u751f\u6210\u3059\u308b\u95a2\u6570\u3092 $ \\mathrm{randdouble}(L,\\ U) $\u3001 [\u6a19\u6e96\u6b63\u898f\u5206\u5e03](https://ja.wikipedia.org/wiki/%E6%AD%A3%E8%A6%8F%E5%88%86%E5%B8%83#%E6%A8%99%E6%BA%96%E6%AD%A3%E8%A6%8F%E5%88%86%E5%B8%83)\u304b\u3089\u5024\u3092\u751f\u6210\u3059\u308b\u95a2\u6570\u3092 $ \\mathrm{randnormal}() $ \u3068\u5b9a\u7fa9\u3059\u308b\u3002\n\n#### $ N $\u3001$ M $\u3001$ K $\u3001$ R $ \u306e\u751f\u6210\n\n- $ N=1000 $ \u3067\u56fa\u5b9a\n- $ M=20 $ \u3067\u56fa\u5b9a\n- $ K=\\mathrm{randint}(10,\\ 20) $\n- $ R=\\mathrm{randint}(1000,\\ 3000) $\n\n#### $ d_{i,j} $ \u306e\u751f\u6210\n\n\u5404 $ i=1,\\cdots,N $ \u306b\u5bfe\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066 $ \\bm{d_i}\\ =\\ (d_{i,1},\\cdots,d_{i,K}) $ \u3092\u751f\u6210\u3059\u308b\u3002\n\n$ K $ \u6b21\u5143\u306e\u30d9\u30af\u30c8\u30eb $ (d_{i,1}',\\cdots,d_{i,K}') $ \u3092 $ d_{i,j}'=|\\mathrm{randnormal}()| $ \u306b\u3088\u308a\u751f\u6210\u3059\u308b\u3002 $ p_i=\\frac{\\mathrm{randdouble}(10,40)}{\\sqrt{\\sum_{j=1}^K\\ d_{i,j}'^2}} $ \u3092\u751f\u6210\u3057\u3001 $ d_{i,j}=\\mathrm{round}(p_i\\ d'_{i,j}) $ \u3068\u3059\u308b\u3002\n\n#### $ s_{i,j} $ \u306e\u751f\u6210\n\n\u5404 $ i=1,\\cdots,M $ \u306b\u5bfe\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066 $ \\bm{s_i}\\ =\\ (s_{i,1},\\cdots,s_{i,K}) $ \u3092\u751f\u6210\u3059\u308b\u3002\n\n$ K $ \u6b21\u5143\u306e\u30d9\u30af\u30c8\u30eb $ (s_{i,1}',\\cdots,s_{i,K}') $ \u3092 $ s_{i,j}'=|\\mathrm{randnormal}()| $ \u306b\u3088\u308a\u751f\u6210\u3059\u308b\u3002 $ q_i=\\frac{\\mathrm{randdouble}(20,60)}{\\sqrt{\\sum_{j=1}^K\\ s_{i,j}'^2}} $ \u3092\u751f\u6210\u3057\u3001 $ s_{i,j}=\\mathrm{round}(q_i\\ s'_{i,j}) $ \u3068\u3059\u308b\u3002\n\n#### $ (u_i,v_i) $ \u306e\u751f\u6210\n\n\u7a7a\u96c6\u5408 $ E=\\emptyset $ \u304b\u3089\u958b\u59cb\u3057\u3001$ |E|=R $ \u306b\u306a\u308b\u307e\u3067\u4ee5\u4e0b\u306e\u51e6\u7406\u3092\u7e70\u308a\u8fd4\u3059\u3053\u3068\u3067\u3001\u4f9d\u5b58\u3059\u308b\u30bf\u30b9\u30af\u306e\u7d44\u306e\u96c6\u5408 $ E=\\{(u_1,v_1),\\cdots,(u_R,v_R)\\} $ \u3092\u751f\u6210\u3059\u308b\u3002\n\n$ h=\\mathrm{randint}(1,100) $ \u3068 $ v=\\mathrm{randint}(h+1,N) $ \u3092\u751f\u6210\u3057\u3001$ u=v-h $ \u3068\u3057\u3066\u3001$ (u,v) $ \u3092 $ E $ \u306b\u8ffd\u52a0\u3059\u308b\u3002\n\n### \u30c4\u30fc\u30eb\n\n- [\u30ed\u30fc\u30ab\u30eb\u30c6\u30b9\u30bf\u30fc](https://img.atcoder.jp/future-contest-2022-qual/f4ca7c3336de23e5c8d1338981e38375.zip): \u4f7f\u7528\u3059\u308b\u306b\u306f[Rust\u8a00\u8a9e](https://www.rust-lang.org/ja)\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u74b0\u5883\u3092\u3054\u7528\u610f\u4e0b\u3055\u3044\u3002\n- [Web\u7248\u30d3\u30b8\u30e5\u30a2\u30e9\u30a4\u30b6](https://img.atcoder.jp/future-contest-2022-qual/f4ca7c3336de23e5c8d1338981e38375.html)\n\n#### \u30c4\u30fc\u30eb\u3067\u7528\u3044\u3089\u308c\u308b\u5165\u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u306e\u4ed5\u69d8\n\n \u3053\u308c\u3089\u306e\u30c4\u30fc\u30eb\u3067\u306f\u3001\u4e8b\u524d\u60c5\u5831\u306b\u52a0\u3048\u3066\u3001\u96a0\u308c\u60c5\u5831\u3067\u3042\u308b\u6280\u80fd\u30ec\u30d9\u30eb $ \\bm{s_i} $ \u3068\u3001\u30c1\u30fc\u30e0\u30e1\u30f3\u30d0\u30fc $ j $ \u304c\u30bf\u30b9\u30af $ i $ \u3092\u5b8c\u4e86\u3059\u308b\u306e\u306b\u5b9f\u969b\u306b\u304b\u304b\u308b\u65e5\u6570 $ t_{i,j} $ \u3092\u542b\u3080\u4ee5\u4e0b\u306e\u5f62\u5f0f\u306e\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u3044\u3066\u3044\u307e\u3059\u3002\n\n> $ N $ $ M $ $ K $ $ R $ $ d_{1,1} $ $ \\cdots $ $ d_{1,K} $ $ \\vdots $ $ d_{N,1} $ $ \\cdots $ $ d_{N,K} $ $ u_1 $ $ v_1 $ $ \\vdots $ $ u_R $ $ v_R $ $ s_{1,1} $ $ \\cdots $ $ s_{1,K} $ $ \\vdots $ $ s_{M,1} $ $ \\cdots $ $ s_{M,K} $ $ t_{1,1} $ $ \\cdots $ $ t_{1,M} $ $ \\vdots $ $ t_{N,1} $ $ \\cdots $ $ t_{N,M} $\n\n\u3053\u308c\u3089\u306e\u60c5\u5831\u304c\u3042\u308c\u3070\u3001\u63d0\u4f9b\u3055\u308c\u305f\u30c6\u30b9\u30bf\u30fc\u3092\u7528\u3044\u308b\u4ee3\u308f\u308a\u306b\u540c\u7b49\u306e\u30c6\u30b9\u30bf\u30fc\u3092\u5404\u81ea\u5b9f\u88c5\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\n\n\u307e\u305f\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u51fa\u529b\u306b\u304a\u3044\u3066 `#` \u304b\u3089\u59cb\u307e\u308b\u884c\u306f\u30b3\u30e1\u30f3\u30c8\u3068\u3057\u3066\u7121\u8996\u3055\u308c\u307e\u3059\u3002 \u7279\u306b\u3001`#s` \u304b\u3089\u59cb\u307e\u308b\u884c\u306f\u3001\u4ee5\u4e0b\u306e\u5f62\u5f0f\u3067\u8a18\u8ff0\u3055\u308c\u305f\u6280\u80fd\u30ec\u30d9\u30eb\u306e\u4e88\u6e2c\u5024\u3067\u3042\u308b\u3068\u89e3\u91c8\u3055\u308c\u3001\u30d3\u30b8\u30e5\u30a2\u30e9\u30a4\u30ba\u6642\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\n\n> #s $ i $ $ s_{i,1} $ $ \\cdots $ $ s_{i,K} $\n\n \u4e88\u6e2c\u5024\u306f\u4f55\u5ea6\u3067\u3082\u51fa\u529b\u3067\u304d\u3001\u540c\u3058 $ i $ \u306b\u5bfe\u3059\u308b\u4e88\u6e2c\u5024\u306f\u4e0a\u66f8\u304d\u66f4\u65b0\u3055\u308c\u307e\u3059\u3002 Web\u7248\u306e\u30d3\u30b8\u30e5\u30a2\u30e9\u30a4\u30b6\u3067\u306f\u4e88\u6e2c\u5024\u306e\u5909\u5316\u3092\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3067\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 \u4f8b\u3048\u3070\u4f8b\u3067\u793a\u3057\u305f\u51fa\u529b\u306b\u30b3\u30e1\u30f3\u30c8\u884c\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u633f\u5165\u3059\u308b\u3053\u3068\u3067\u30011\u65e5\u76ee\u306b $ s_1 $ \u306e\u4e88\u6e2c\u5024\u3092 $ (0,\\ 1) $ \u306b\u30012\u65e5\u76ee\u306b $ s_2 $ \u306e\u4e88\u6e2c\u5024\u3092 $ (1,\\ 0) $ \u306b\u66f4\u65b0\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\n```\n\n2 1 1 2 2\n#s 1 0 1\n0\n#s 2 1 0\n1 1 3\n0\n0\n```\n\n\u30b3\u30e1\u30f3\u30c8\u884c\u306f\u5b9f\u969b\u306e\u63d0\u51fa\u3067\u3082\u7121\u8996\u3055\u308c\u308b\u305f\u3081\u3001\u305d\u306e\u307e\u307e\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u63d0\u51fa\u53ef\u80fd\u3067\u3059\u3002\n\n### \u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0(Python)\n\n```\n# assign random tasks to team member 1.\r\nimport sys\r\nimport random\r\n# Prior information\r\nn, m, d, r = list(map(int, input().split()))\r\ntask_difficulty = []\r\nfor i in range(n):\r\n    task_difficulty.append(list(map(int, input().split())))\r\ntask_dependency = [[] for _ in range(n)]\r\nfor i in range(r):\r\n    temp = list(map(int, input().split()))\r\n    task_dependency[temp[1] - 1].append(temp[0] - 1)\r\n# -1: not started\r\n#  0: started\r\n#  1: completed\r\ntask_status = [-1] * n\r\n# -1: not assigned\r\n#  k: assigned task k (1 <= k <= N)\r\nmember_status = -1\r\nday = 0\r\nwhile True:\r\n    day += 1\r\n    output = [0]\r\n    # random search for tasks\r\n    if member_status < 0:\r\n        tasklist = list(range(n))\r\n        random.shuffle(tasklist)\r\n        for task in tasklist:\r\n            if task_status[task] != -1:\r\n                continue\r\n            ok = True\r\n            for necessary in task_dependency[task]:\r\n                if task_status[necessary] != 1:\r\n                    # the dependent tasks have not been completed\r\n                    ok = False\r\n                    break\r\n            if ok:\r\n                # assign the task to team member 1\r\n                task_status[task] = 0\r\n                member_status = task\r\n                output = [1, 1, task + 1]\r\n                break\r\n    str_output = map(str, output)\r\n    print(\" \".join(str_output))\r\n    # After the output, you have to flush Standard Output\r\n    sys.stdout.flush()\r\n    temp = list(map(int, input().split()))\r\n    if len(temp) == 1:\r\n        if temp[0] == -1:\r\n            # elapsed days == 2000, or all the tasks have been completed\r\n            exit()\r\n        else:\r\n            # no change in state\r\n            pass\r\n    else:\r\n        # one task has been completed\r\n        task = member_status\r\n        task_status[task] = 1\r\n        member_status = -1\r\n\n```"
}