[
    {
        "content": "[Milmon Page \u94fe\u63a5\uff1ahttps://molmin.github.io/problem?id=21#solution](https://molmin.github.io/problem?id=21#solution)\n\n\u4ed4\u7ec6\u89c2\u5bdf\u53ef\u4ee5\u53d1\u73b0\u4ee5\u4e0b\u51e0\u70b9\uff1a\n\n**\u7ed3\u8bba 1\uff1a\u6709\u6548\u5c42\u603b\u6570\u4e0d\u4f1a\u8d85\u8fc7 $n+1$\u3002** \u82e5\u4e00\u5c42\u4e2d\u53ea\u6709\u4e2d\u95f4\u7684\u4f4d\u7f6e\u6709\u6728\u677f\u6216\u8005\u4e24\u8fb9\u7684\u4f4d\u7f6e\u6709\u6728\u677f\uff0c\u5219\u6b64\u5c42\u4e8b\u5b9e\u4e0a\u5df2\u7ecf\u6ca1\u6709\u5b9e\u9645\u7528\u5904\uff0c\u4e0d\u59a8\u5220\u9664\u8be5\u5c42\u3002\u5854\u7684\u4e0b\u90e8\u6bcf\u5c42\u81f3\u591a\u62bd\u51fa $2$ \u5757\u540e\u8be5\u5c42\u65e0\u6548\uff0c\u800c\u5728\u4e0a\u90e8\u6dfb\u52a0\u4e00\u5c42\u9700\u8981 $3$ \u5757\u6728\u677f\u3002\n\n**\u7ed3\u8bba 2\uff1a\u4efb\u610f\u4e24\u5c42\u975e\u9876\u5c42\u7684\u6709\u6548\u5c42\uff0c\u53ef\u4ee5\u4efb\u610f\u4ea4\u6362\u3002**\uff08\u8fd9\u662f\u663e\u7136\u7684\uff09\n\n**\u7ed3\u8bba 3\uff1a\u4efb\u610f\u4e00\u5c42\u6709\u6548\u5c42\u7684\u5de6\u53f3\u4e24\u4e2a\u4f4d\u7f6e\u5bf9\u79f0\uff0c\u53ef\u4ee5\u4ea4\u6362\u3002**\uff08\u8fd9\u4e5f\u662f\u663e\u7136\u7684\uff09\n\n\u8003\u8651\u72b6\u6001\u538b\u7f29\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u5854\u7684\u72b6\u6001\uff0c\u6bcf\u4e00\u5c42\u4e00\u4e2a\u4f4d\u7f6e\u6709\u56db\u79cd\u72b6\u6001\uff1a\u653e\u7f6e\u4e86\u6728\u677f\uff08\u4e09\u79cd\u989c\u8272\uff09\uff0c\u4ee5\u53ca\u6ca1\u6709\u653e\u7f6e\u6728\u677f\u3002\u800c\u6bcf\u4e00\u5c42\u6709\u4e09\u4e2a\u4f4d\u7f6e\uff0c\u9700\u8981\u5360\u7528 $6$ \u4e2a\u4e8c\u8fdb\u5236\u4f4d\u3002\u5bf9\u4e8e\u4e00\u4e2a\u5854\u7684\u72b6\u6001\uff0c\u6709\u6548\u5c42\u81f3\u591a $n+1\\leq 7$ \u5c42\uff0c\u5373\u81f3\u591a\u5360\u7528 $6\\times 7=42$ \u4e2a\u4e8c\u8fdb\u5236\u4f4d\uff0c\u53ea\u9700\u4f7f\u7528 `unsigned long long` \u5b58\u50a8\u5373\u53ef\u3002\n\n\u6bcf\u4e00\u6b21\u72b6\u6001\u8f6c\u79fb\u679a\u4e3e\u6295\u63b7\u51fa\u7684\u4e09\u79cd\u989c\u8272\uff08\u6295\u63b7\u51fa\u9ed1\u8272\u7684\u60c5\u51b5\u53ef\u4ee5 $\\Theta(1)$ \u5904\u7406\uff09\uff0c\u518d\u679a\u4e3e\u5220\u9664\u7684\u662f\u54ea\u4e00\u5757\u8be5\u8272\u6728\u677f\uff0c\u6700\u540e\u679a\u4e3e\u653e\u7f6e\u5728\u9876\u5c42\u7684\u54ea\u4e2a\u4f4d\u7f6e\u5373\u53ef\u3002\n\n\u5177\u4f53\u7ec6\u8282\u89c1\u4ee3\u7801\u5b9e\u73b0\u3002\n\n[Code \u94fe\u63a5\uff1ahttps://molmin.github.io/problem?id=21#code](https://molmin.github.io/problem?id=21#code)",
        "postTime": 1659353677,
        "uid": 234641,
        "name": "Milmon",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF424E - Colored Jenga"
    },
    {
        "content": "\u8fd9\u9898\u672c\u8eab\u6a21\u578b\u4e0d\u96be\uff0c\u76f4\u63a5\u8fdb\u884c\u8bb0\u5fc6\u5316\u641c\u7d22\u7b97\u51fa\u6bcf\u4e2a\u72b6\u6001\u7684\u7b54\u6848\u5373\u53ef\u3002 \u8fd9\u9898\u7684\n\u5173\u952e\u5728\u4e8e\u72b6\u6001\u6570\u91cf\u7684\u4f18\u5316\uff0c\u6709\u51e0\u4e2a\u6bd4\u8f83\u5173\u952e\u7684\u4f18\u5316\u70b9\uff08\u5176\u4f59\u4e00\u4e9b\u7ec6\u8282 \u53ef\u4ee5\u53c2\u8003\n\u6807\u7a0b\uff09\uff1a\n\n1\u3001\u9876\u5c42\u4ee5\u4e0b\u6240\u6709\u7684\u5c42\u90fd\u662f\u65e0\u5e8f\u7684\u3002\n\n2\u3001\u6bcf\u5c42\u53ea\u9700\u8981\u8bb0\u5f55\u80fd\u62bd\u51fa\u7684\u6728\u677f\u7684\u72b6\u6001\u5373\u53ef\uff0c\u5982\u679c\u4e00\u5c42\u4e0d\u80fd\u62bd\u51fa\u6728\u677f\u4e86\uff0c\u90a3\n\u4e48\u5c31\u53ef\u4ee5\u5728\u72b6\u6001\u8868\u793a\u4e2d\u5220\u6389\u8fd9\u4e00\u5c42\u3002\n\n3\u3001\u6bcf\u5c42\u4e2d\u7684\u4e24\u4fa7\u662f\u5bf9\u79f0\u7684\u3002 \u5b9e\u73b0\u65f6\uff0c\u5c06\u72b6\u6001\u8fdb\u884c hash \u5224\u91cd\uff0c\u6216\u8005\u4f7f\u7528 STL\n\u5b9e\u73b0\u5e94\u8be5\u4e5f\u53ef\u4ee5\uff08\u6ca1\u8bd5\u8fc7\uff09 \u505a\u5b8c\u4ee5\u4e0a\u4f18\u5316\u540e\uff0c\u5bf9\u4e8e\u4e00\u4e2a 6 \u5c42\u7684\u53e0\u53e0\u4e50\u6e38\u620f\uff0c\u5728\n\u6807\u7a0b\u4e2d\u4e0d\u540c\u7684\u72b6\u6001\u6570\u91cf\u4e0d \u8d85\u8fc7 20W\uff0c\u8db3\u4ee5\u5728\u51fa\u9898\u4eba\u7684\u673a\u5b50\u4e0a 1s \u5185\u6c42\u5f97\u7ed3\u679c\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nnamespace jenga {\n    inline char get_unempty_char()\n    {\n        char ch;\n        while(isspace(ch=getchar())) ;\n        return ch;\n    }\n    const double eps(1e-12),Inf=1e+64;\n    typedef unsigned long long i64u;\n    const int RED=1,BLUE=2,GREEN=3,EMPTY=0,N=6,Base=67,mod=1<<20,modd=mod-1;\n    int n,last[mod]={},next[mod]={},total_edge=0,s[N*3-1]={},tot=0;\n    int order[1<<6]={};\n    i64u hv[mod]={};\n    double f[mod]={};\n        inline void add(i64u hash,double v){\n            int u=hash&modd;\n            next[++total_edge]=last[u];\n            last[u]=total_edge;\n            f[total_edge]=v;\n            hv[total_edge]=hash;\n        }\n        inline int get_num(char ch){\n            if(ch=='R') \n                return RED;\n            if(ch=='B') \n                return BLUE;\n            if(ch=='G') \n                return GREEN;\n            if(ch=='E') \n                return EMPTY;\n            assert(false);\n        }\n        void init(){\n            n=get_unempty_char()-'0';\n            for(int a=0;a<=3;++a)\n                for(int b=0;b<=3;++b)\n                    for(int c=0;c<=3;++c)\n                        order[a|(b<<2)|(c<<4)]=a<c?(a|(b<<2)|(c<<4)):(c|(b<<2)|(a<<4));\n            for(int i=1;i<=n;++i){\n                s[i]|=get_num(get_unempty_char())<<0;\n                s[i]|=get_num(get_unempty_char())<<2;\n                s[i]|=get_num(get_unempty_char())<<4;\n                s[i]=order[s[i]];\n            }\n            tot=n;\n        }\n        inline i64u hash(int *s,int k,int up){\n            static int v[N*3+10]={};\n            i64u h=0;\n            int tot=0;\n            for(int i=1;i<=k;++i)\n                if(s[i])\n                    v[++tot]=s[i];\n            sort(v+1,v+tot+1);\n            for(int i=1;i<=tot;++i)\n                h=h*Base+v[i];\n            h=h*Base+up;\n            return h;\n        }\n        double work(int *s,int tot,int up){\n        up=order[up];\n        i64u h=hash(s,tot,up);\n        for(int i=last[h&modd];i;i=next[i])\n            if(hv[i]==h)\n                return f[i];\n        double v[4]={Inf,Inf,Inf,Inf};\n        int to=tot,D=6;\n        if((up&3) && ((up>>2)&3) && ((up>>4)&3))\n            s[++to]=up , up=0;\n        for(int i=1;i<=tot;++i){\n            int c1=s[i]&3,c2=(s[i]>>2)&3,c3=(s[i]>>4)&3,ns=s[i];\n            if(c1 && c2 && c3 && v[c2]>eps){\n                s[i]=0;\n                if(!(up&3))\n                    v[c2]=min(v[c2],work(s,to,up|c2));\n                else if(!(up>>4&3))\n                    v[c2]=min(v[c2],work(s,to,up|c2<<4));\n                if(!(up>>2&3))\n                    v[c2]=min(v[c2],work(s,to,up|c2<<2));\n                s[i]=ns;\n            }\n            if(c1 && v[c1]>eps){\n                s[i]=c3;\n                if(!(up&3))\n                    v[c1]=min(v[c1],work(s,to,up|c1));\n                else if(!(up>>4&3))\n                    v[c1]=min(v[c1],work(s,to,up|c1<<4));\n                if(!(up>>2&3))\n                    v[c1]=min(v[c1],work(s,to,up|c1<<2));\n                s[i]=ns;\n            }\n            if(c3 && v[c3]>eps){\n                s[i]=c1;\n                if(!(up&3))\n                    v[c3]=min(v[c3],work(s,to,up|c3));\n                else if(!(up>>4&3))\n                    v[c3]=min(v[c3],work(s,to,up|c3<<4));\n                if(!(up>>2&3))\n                    v[c3]=min(v[c3],work(s,to,up|c3<<2));\n                s[i]=ns;\n            }\n        }\n        double sum=0;\n        if(v[1]!=Inf) sum+=v[1] , D-=1;\n        if(v[2]!=Inf) sum+=v[2]*2 , D-=2;\n        if(v[3]!=Inf) sum+=v[3]*2 , D-=2;\n        sum=D==6 ? 0 : (sum+6)/(6-D);\n        add(h,sum);\n        return sum;\n    }\n    int Main(){\n        init();\n        printf(\"%.7f\\n\",work(s,tot-1,s[tot]));\n        return 0;\n    }\n}\nint main(){\n    jenga::Main();\n    return 0;\n}\n```",
        "postTime": 1661340382,
        "uid": 689650,
        "name": "dfuurcekx",
        "ccfLevel": 0,
        "title": "CF424E"
    }
]