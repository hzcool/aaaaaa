[
    {
        "content": "\u5f88\u6709\u6210\u5c31\u611f\u554a\uff01\n\n\u9996\u5148\u80af\u5b9a\u662f\u79bb\u7ebf\u4e0b\u6765\u5efa\u6811\u3002\n\n\u5148\u8003\u8651\u7b54\u6848\u7684\u6570\u91cf\u7ea7\u3002\n\n\u4ee4 $g_i$ \u8868\u793a\u8981\u5f04\u51fa\u4e00\u4e2a\u70b9\u7684\u503c\u4e3a $i$\uff0c\u6700\u5c11\u9700\u8981\u591a\u5c11\u4e2a\u70b9\u3002\n\n\u8f6c\u79fb\u663e\u7136\u662f $g_i=\\sum_{j=0}^{i-1}g_j+1$\uff0c\u7136\u540e\u53d1\u73b0\u5176\u5b9e\u5c31\u662f $g_i=2^i$\u3002\n\n\u6240\u4ee5\u4e00\u4e2a\u70b9\u7684\u503c\u6700\u5927\u4e0d\u8d85\u8fc7 $O(\\log n)$\u3002\n\n\u53d1\u73b0\u52a0\u70b9\u53ea\u4f1a\u5f71\u54cd\u5b83\u7684\u7956\u5148\u90a3\u4e00\u6761\u94fe\uff0c\u8fd9\u770b\u4e0a\u53bb\u662f\u4e2a\u52a8\u6001 dp \u7684\u5f62\u5f0f\uff0c\u6240\u4ee5\u6211\u4eec\u501f\u7528\u4e00\u4e0b\u52a8\u6001 dp \u7684 trick\uff0c\u6811\u5256\u4e0b\u6765\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u8f7b\u513f\u5b50\u7684\u4fe1\u606f\u3002\n\n\u7ef4\u62a4\u4e00\u4e2a\u70b9\u8f7b\u513f\u5b50\u7684\u96c6\u5408\uff0c\u67e5\u8be2\u4e00\u4e2a\u70b9\u76f8\u5f53\u4e8e\u8981\u63d2\u5165\u4e00\u4e2a\u70b9\u7684\u91cd\u513f\u5b50\uff0c\u7136\u540e\u67e5\u8be2\u3002\n\n\u8fd9\u6837\u52a0\u70b9\uff0c\u7136\u540e\u67e5\u8be2\u5355\u70b9\u662f\u597d\u505a\u7684\uff0c\u4f46\u662f\u95ee\u9898\u5728\u4e8e\u67e5\u8be2\u7684\u662f\u5168\u5c40\u3002\n\n\u56e0\u4e3a\u53ea\u4f1a\u5f71\u54cd\u7956\u5148\uff0c\u6240\u4ee5\u6211\u4eec\u540c\u6837\u5f80\u4e0a\u626b\u4e00\u904d\uff0c\u628a\u7ecf\u8fc7\u7684\u91cd\u94fe\u7684\u503c\u5168\u90e8\u51cf\u53bb\uff0c\u7136\u540e\u66f4\u65b0\u4e00\u4e0b\u65b0\u52a0\u7684\u70b9\uff0c\u518d\u5f80\u4e0a\u5168\u90e8\u52a0\u56de\u53bb\u3002\n\n\u6ce8\u610f\uff0c\u8fd9\u91cc\u8bf4\u7684\u4e0d\u662f\u7ecf\u8fc7\u7684\u7956\u5148\uff0c\u800c\u662f\u7ecf\u8fc7\u7684\u91cd\u94fe\u3002\u56e0\u4e3a\u67e5\u8be2\u4e00\u4e2a\u70b9\u7684\u503c\u9700\u8981\u5b83\u6cbf\u7740\u6240\u5728\u7684\u91cd\u94fe\u5f80\u4e0b\u4e00\u76f4\u5230\u94fe\u5e95\u63a8\u8fc7\u6765\u3002\n\n\u6211\u4eec\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u7ef4\u62a4\u4e00\u4e2a $to_{u,value}$ \u8868\u793a\u5f80 $u$ \u7684\u8f7b\u513f\u5b50\u96c6\u5408\u63d2\u5165\u4e00\u4e2a\u6570 $value$ \u540e\u7684 $\\operatorname{mex}$ \u503c\u662f\u591a\u5c11\uff0c\u90a3\u4e48\u66b4\u529b\u7684\u505a\u6cd5\u5c31\u662f\u4ece\u4e0b\u5f80\u4e0a\u4e00\u76f4\u63a8\u4e0a\u6765\u5373\u53ef\u3002\n\n\u4f46\u662f\u8fd9\u4e2a\u4fe1\u606f\u975e\u5e38\u53ef\u4ee5\u7ef4\u62a4\uff0c\u6211\u4eec\u5c06\u8fd9\u4e2a $to$ \u6570\u7ec4\u653e\u5230\u7ebf\u6bb5\u6811\u4e0a\uff0c\u8868\u793a\u5f80\u7ebf\u6bb5\u6811\u4e0a\u7684\u67d0\u4e2a\u7ed3\u70b9\u5bf9\u5e94\u7684\u533a\u95f4\u7684\u6700\u53f3\u7aef\u63d2\u5165\u4e00\u4e2a\u503c $value$\uff0c\u7136\u540e\u4e00\u76f4\u5f80\u5de6\u63a8\uff0c\u6700\u540e\u4f1a\u5f97\u5230\u7684 $\\operatorname{mex}$ \u662f\u591a\u5c11\uff0c\u663e\u7136\u975e\u5e38\u53ef\u5408\u5e76\u3002\u989d\u5916\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u67e5\u8be2\u548c\uff0c\u6240\u4ee5\u591a\u7ef4\u62a4\u4e00\u4e2a $sum_{u,value}$ \u5373\u53ef\u3002\n\n\u7136\u540e\u4e0a\u4f20\u4fe1\u606f\u7684\u65f6\u5019\u66b4\u529b\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u6bcf\u6b21\u5f80\u4e0a\u4f1a\u8df3 $O(\\log n)$ \u6761\u91cd\u94fe\uff0c\u8f7b\u513f\u5b50\u5f80\u7236\u4eb2\u66f4\u65b0\u96c6\u5408\u9700\u8981 $O(\\log n)$\uff0c\u4f46\u662f\u8fd9\u90e8\u5206\u53ea\u548c\u91cd\u94fe\u7684\u590d\u6742\u5ea6\u4f1a\u4e58\u5728\u4e00\u8d77\u3002\u6bcf\u6761\u91cd\u94fe\u90fd\u4f1a\u5355\u70b9\u66f4\u65b0\u533a\u95f4\u67e5\u8be2\u4e00\u6b21\uff0c\u66f4\u65b0\u65f6\u6bcf\u6b21\u4e0a\u4f20\u7684\u590d\u6742\u5ea6\u53c8\u9700\u8981 $O(\\log n)$\uff0c\u6240\u4ee5\u7ebf\u6bb5\u6811\u7684\u590d\u6742\u5ea6\u4e3a $O(\\log^2 n)$\u3002\u7efc\u4e0a\u6240\u8ff0\uff0c\u590d\u6742\u5ea6\u4e3a $O(n\\log^3n)$\uff0c\u5e38\u6570\u5927\u5e08\u53ef\u4ee5\u8bd5\u7740\u5361\u4e00\u5361\u3002\n\n\u8003\u8651\u8fd9\u4e2a $to$ \u6570\u7ec4\uff0c\u5bf9\u4e00\u4e2a\u96c6\u5408\u91cc\u53ea\u63d2\u5165\u4e00\u4e2a\u6570\u65f6\uff0c\u5982\u679c\u8fd9\u4e2a\u6570\u4e0d\u7b49\u4e8e\u539f\u96c6\u5408\u7684 $\\operatorname{mex}$\uff0c\u90a3\u4e48\u5f97\u5230\u7684 $to$ \u503c\u90fd\u8fd8\u662f\u539f\u672c\u7684 $\\operatorname{mex}$\uff0c\u8fd9\u610f\u5473\u7740 $to$ \u53ea\u6709\u4e24\u79cd\u503c\u3002$sum$ \u540c\u7406\u3002\u7136\u540e\u5c31\u53ef\u4ee5\u5c11\u4e00\u4e2a $\\log$ \u4e86\u3002\n\n\u590d\u6742\u5ea6\u4e3a $O(n\\log^2n)$\u3002\n\nhttps://codeforces.com/contest/1740/submission/179155130",
        "postTime": 1667550009,
        "uid": 115936,
        "name": "\u6cf7\u6cfd\u4e09\u6708",
        "ccfLevel": 0,
        "title": "CF1740H"
    },
    {
        "content": "## CF1740H\n\n### \u9898\u610f\u7b80\u8ff0\n\u4f60\u6709\u4e00\u68f5\u6811\uff0c\u521d\u59cb\u65f6\u53ea\u6709 $1$ \u53f7\u70b9\u3002\u53f6\u5b50\u7684\u70b9\u6743\u662f $0$\uff0c\u5176\u5b83\u6bcf\u4e2a\u70b9\u7684\u70b9\u6743\u4e3a\u5b83\u6240\u6709\u5b50\u8282\u70b9\u7684 $\\operatorname{mex}$\u3002$q$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u5728\u67d0\u4e2a\u70b9\u4e0b\u9762\u8fde\u4e00\u4e2a\u70b9\uff0c\u8981\u6c42\u6bcf\u6b21\u64cd\u4f5c\u540e\u8f93\u51fa\u6811\u4e0a\u6240\u6709\u8282\u70b9\u7684\u70b9\u6743\u548c\u3002\n\n$1\\leq q\\leq 3\\times 10^5$\u3002\n\n### \u9898\u76ee\u5206\u6790\n\u8003\u8651\u6bcf\u6b21\u52a0\u5165\u4e00\u4e2a\u70b9\uff0c\u70b9\u6743\u53ef\u80fd\u4f1a\u6539\u53d8\u7684\u53ea\u6709\u8be5\u70b9\u7684\u6240\u6709\u7956\u5148\u6784\u6210\u7684\u4e00\u6761\u94fe\u3002\u5bf9\u4e8e\u6811\u4e0a\u96be\u4ee5\u76f4\u63a5\u7ef4\u62a4\u7684\u94fe\u4e0a\u4fee\u6539\uff0c\u4e00\u822c\u8003\u8651\u8f7b\u91cd\u94fe\u5256\u5206\u3002\u6211\u4eec\u5bf9\u4e8e\u4e00\u4e2a\u70b9 $u$\uff0c\u8bbe $son_u$ \u4e3a\u5b83\u7684\u91cd\u513f\u5b50\uff0c\u7ef4\u62a4\u4e00\u4e2a\u96c6\u5408 $S_u$ \u8868\u793a\u8be5\u70b9\u6240\u6709\u8f7b\u513f\u5b50\u6784\u6210\u7684\u70b9\u6743\u53ef\u91cd\u96c6\uff0c\u5bf9\u91cd\u513f\u5b50\u548c\u8f7b\u513f\u5b50\u7684\u4fee\u6539\u5206\u522b\u8ba8\u8bba\uff1a\n\n- \u4fee\u6539\u8f7b\u513f\u5b50\uff1a\u76f4\u63a5\u4fee\u6539 $S_u$\uff0c\u5e76\u6839\u636e $son_u$ \u7684\u503c\u66f4\u65b0\u8be5\u70b9\u7684\u70b9\u6743\u5373\u53ef\u3002\u6bcf\u6b21\u64cd\u4f5c\u4e2d\u8df3\u7684\u8f7b\u8fb9\u4e2a\u6570\u4e3a $O(\\log n)$\uff0c\u6240\u4ee5\u8fd9\u90e8\u5206\u590d\u6742\u5ea6\u4e3a $O(q\\log^2 n)$\u3002\n\n- \u4fee\u6539\u91cd\u513f\u5b50\uff1a\u8003\u8651\u5728\u7ef4\u62a4 $S_u$ \u7684\u540c\u65f6\u7ef4\u62a4 $\\operatorname{mex}(S_u)$\uff0c\u8bbe\u4e3a $val_u$\u3002\u90a3\u4e48\u5982\u679c $son_u$ \u7684\u70b9\u6743\u4e0d\u4e3a $val_u$\uff0c$u$ \u7684\u70b9\u6743\u5c31\u4e3a $val_u$\uff0c\u5426\u5219\uff0c$u$ \u7684\u70b9\u6743\u5c31\u4e3a\u6bd4 $val_u$ \u66f4\u5927\u7684\u53e6\u4e00\u4e2a\u503c\uff0c\u8bbe\u4e3a $val'_u$\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e2a\u70b9\u5199\u6210 $(val_u,val'_u)$ \u7684\u4e8c\u5143\u7ec4\u5f62\u5f0f\uff0c\u8868\u793a\u82e5\u8f93\u5165\u4e3a $val_u$\uff0c\u5219\u8f93\u51fa\u4e3a $val'_u$\uff0c\u5426\u5219\u8f93\u51fa\u4e3a $val_u$\u3002\u4e0d\u96be\u53d1\u73b0\u8fd9\u6837\u7684\u4e8c\u5143\u7ec4\u662f\u53ef\u4ee5\u5408\u5e76\u7684\uff0c\u82e5\u5e72\u4e2a\u4e8c\u5143\u7ec4\u53ef\u4ee5\u5408\u5e76\u4e3a\u4e00\u4e2a\u4e8c\u5143\u7ec4\uff0c\u5e76\u4e14\u6211\u4eec\u53ef\u4ee5\u540c\u65f6\u7ef4\u62a4\u4e24\u79cd\u60c5\u51b5\u4e0b\u6240\u6709\u6743\u503c\u7684\u548c\u3002\u5219\u6211\u4eec\u5bf9\u4e8e\u6bcf\u6761\u91cd\u94fe\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5b83\u7684\u4e8c\u5143\u7ec4\u5e76\u5373\u53ef\u3002\u56e0\u4e3a\u91cd\u94fe\u6709 $O(\\log n)$ \u6761\uff0c\u6240\u4ee5\u8fd9\u90e8\u5206\u590d\u6742\u5ea6\u4e3a $O(q\\log^2 n)$\u3002\n\n\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(q\\log^2 n)$\u3002\n\nCode\uff1a\n```cpp\nconst int N=3e5+10;\nint n,a[N];\nvector<int>e[N];\nint fa[N],dep[N],wson[N],siz[N];\nvoid dfs(int u)\n{\n\tdep[u]=dep[fa[u]]+1,siz[u]=1;\n\tfor(int v:e[u])\n\t{\n\t\tdfs(v),siz[u]+=siz[v];\n\t\tif(siz[wson[u]]<siz[v])wson[u]=v;\n\t}\n}\nint top[N],ed[N],dfn[N],id[N],idx;\nvoid dfs1(int u,int t)\n{\n\ttop[u]=t,id[dfn[u]=++idx]=u,ed[t]=idx;\n\tif(wson[u])dfs1(wson[u],t);\n\tfor(int v:e[u])\n\t\tif(v!=wson[u])dfs1(v,v);\n}\nstruct node\n{\n\tint x,y,z;\n\tll sy,sz;//\u8f93\u5165\u4e0d\u4e3ax->\u8f93\u51fay,\u548c\u4e3asy\uff1b\u8f93\u5165\u4e3ax->\u8f93\u51faz,\u548c\u4e3asz \n\tnode(){x=y=z=sy=sz=-1;}\n\tnode(int a,int b,int c,ll d,ll e){x=a,y=b,z=c,sy=d,sz=e;}\n\tnode operator + (node b) const\n\t{\n\t\tif(x==-1)return b;\n\t\tif(b.x==-1)return *this;\n\t\tnode c;\n\t\tc.x=x,c.y=(y==b.x)?b.z:b.y,c.z=(z==b.x)?b.z:b.y;\n\t\tc.sy=sy+(y==b.x?b.sz:b.sy),c.sz=sz+(z==b.x?b.sz:b.sy);\n\t\treturn c;\n\t}\n};\nstruct SegmentTree\n{\n\tnode t[N<<2];\n\tvoid upd(int p,int l,int r,int x,node v)\n\t{\n\t\tif(l==r)return t[p]=v,void();\n\t\tint mid=(l+r)>>1;\n\t\tif(x<=mid)upd(p<<1,l,mid,x,v);\n\t\telse upd(p<<1|1,mid+1,r,x,v);\n\t\tt[p]=t[p<<1|1]+t[p<<1];\n\t}\n\tnode ask(int p,int l,int r,int L,int R)\n\t{\n\t\tif(L<=l&&r<=R)return t[p];\n\t\tint mid=(l+r)>>1;\n\t\tif(R<=mid)return ask(p<<1,l,mid,L,R);\n\t\tif(L>mid)return ask(p<<1|1,mid+1,r,L,R);\n\t\treturn ask(p<<1|1,mid+1,r,L,R)+ask(p<<1,l,mid,L,R);\n\t}\n}sgt;\nint rt[N];\nstruct SegTree_mex\n{\n\tint idx,ls[N<<5],rs[N<<5],mn[N<<5];\n\tvoid upd(int &p,int l,int r,int x,int d)\n\t{\n\t\tif(!p)p=++idx;\n\t\tif(l==r)return mn[p]+=d,void();\n\t\tint mid=(l+r)>>1;\n\t\tif(x<=mid)upd(ls[p],l,mid,x,d);\n\t\telse upd(rs[p],mid+1,r,x,d);\n\t\tmn[p]=min(mn[ls[p]],mn[rs[p]]);\n\t}\n\tint find(int p,int l,int r,int L,int R)\n\t{\n\t\tint mid=(l+r)>>1;\n\t\tif(l==r)return !mn[p]?l:-1;\n\t\tif(L<=l&&r<=R)\n\t\t{\n\t\t\tif(!mn[ls[p]])return find(ls[p],l,mid,L,R);\n\t\t\treturn find(rs[p],mid+1,r,L,R);\n\t\t}\n\t\tif(L<=mid)\n\t\t{\n\t\t\tint res=find(ls[p],l,mid,L,R);\n\t\t\tif(res!=-1)return res;\n\t\t}\n\t\treturn find(rs[p],mid+1,r,L,R);\n\t}\n}sgt1;\nll ans;\npii ask(int u)\n{\n\tint res1=sgt1.find(rt[u],0,n,0,n),res2=sgt1.find(rt[u],0,n,res1+1,n);\n\treturn {res1,res2};\n}\nvoid upd(int u)\n{\n\tint x=fa[u];\n\twhile(x)ans-=sgt.ask(1,1,n,dfn[top[x]],ed[top[x]]).sy,x=fa[top[x]];\n\tsgt.upd(1,1,n,dfn[u],node(0,0,1,0,1)),x=u;\n\twhile(1)\n\t{\n\t\tnode it=sgt.ask(1,1,n,dfn[top[x]],ed[top[x]]);\n\t\tans+=it.sy;\n\t\tif(!fa[top[x]])break;\n\t\tif(a[top[x]]>=0)sgt1.upd(rt[fa[top[x]]],0,n,a[top[x]],-1);\n\t\ta[top[x]]=it.y;\n\t\tif(a[top[x]]>=0)sgt1.upd(rt[fa[top[x]]],0,n,a[top[x]],1);\n\t\tpii res=ask(fa[top[x]]);\n\t\tsgt.upd(1,1,n,dfn[fa[top[x]]],node(res.fi,res.fi,res.se,res.fi,res.se));\n\t\tx=fa[top[x]];\n\t}\n\ta[x]=0;\n}\nint main()\n{\n\tread(n),n++;\n\tfor(int i=2;i<=n;i++)\n\t\tread(fa[i]),e[fa[i]].push_back(i);\n\tfor(int i=1;i<=n;i++)a[i]=-1;\n\tdfs(1),dfs1(1,1),upd(1);\n\tfor(int i=2;i<=n;i++)upd(i),printf(\"%lld\\n\",ans);\n\tIO::pchar(0);\n\treturn 0;\n}\n```",
        "postTime": 1667434104,
        "uid": 333574,
        "name": "Tyyyyyy",
        "ccfLevel": 7,
        "title": "CF1740H\u9898\u89e3"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u4e2a $O(n\\log n)$ \u7684\u505a\u6cd5\u3002\n\n\u9996\u5148\u4e00\u4e2a\u70b9\u7684\u6743\u503c\u662f $O(\\log n)$ \u7ea7\u522b\u7684\uff0c\u8fd9\u662f\u56e0\u4e3a\u8bbe $f_k$ \u8868\u793a\u6743\u503c\u4e3a $k$ \u7684\u6811\u7684\u6700\u5c0f\u5927\u5c0f\uff0c\u90a3\u4e48\u6709 $f_k=\\sum_{i=0}^{k-1} f_k +1$\uff0c\u89e3\u5f97 $f_k=2^k$\u3002\n\n\u90a3\u4e48\u53ea\u9700\u8981\u7528\u4e00\u4e2a\u6570\u72b6\u538b\u4e0b\u513f\u5b50\u4e2d\u5b58\u4e0d\u5b58\u5728\u6743\u503c\u4e3a $k$ \u7684\u70b9\uff0c\u6bcf\u6b21 `lowbit` \u4e00\u4e0b\uff0c\u4fbf\u53ef\u505a\u5230 $O(1)$ \u52a8\u6001\u7ef4\u62a4\u4e00\u4e2a\u70b9\u7684 $\\text{MEX}$ \u503c\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u600e\u4e48\u7ef4\u62a4\u6743\u503c\u4e86\uff0c\u8003\u8651 DDP\uff0c\u6811\u5256\u4e4b\u540e\u5047\u8bbe\u4e00\u4e2a\u70b9\u6240\u6709\u8f7b\u513f\u5b50\u7684\u6743\u503c\u90fd\u77e5\u9053\uff0c\u90a3\u4e48\u8be5\u70b9\u6743\u503c\u5173\u4e8e\u8be5\u70b9\u91cd\u513f\u5b50\u7684\u6743\u503c\u7684\u51fd\u6570 $g(x)$ \u53ef\u4ee5\u5feb\u901f\u590d\u5408\u3002\u8fdb\u4e00\u6b65\u5730\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u590d\u5408\u7684\u65f6\u5019\u7ef4\u62a4\u51fa\u590d\u5408\u7684\u524d\u7f00\u548c\u51fd\u6570\uff0c\u5927\u6982\u662f $h(x)=g_1(x)+g_2(g_1(x))+g_3(g_2(g_1(x)))\\dots$ \u8fd9\u79cd\u5f62\u5f0f\u3002\n\n\u4e8e\u662f\u4f7f\u7528\u5168\u5c40\u5e73\u8861\u4e8c\u53c9\u6811\u7ef4\u62a4\u4fe1\u606f\uff0c\u6bcf\u6b21\u91c7\u7528\u4e0a\u9762\u72b6\u538b\u7684\u6280\u5de7\u66f4\u65b0\u8f7b\u513f\u5b50\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\uff0c\u76ee\u524d\u662f CF \u6700\u5feb\u89e3\u3002\n\n\u4e3a\u4e86\u5b9e\u73b0\u65b9\u4fbf\uff0c\u4ee3\u7801\u4e2d\u7684 $\\text{MEX}$ \u503c\u5b9e\u9645\u4e0a\u662f $+1$ \u4e86\u7684\u3002\n\n```cpp\n#include <cstdio>\nusing namespace std;\nint read(){\n\tchar c=getchar();int x=0;\n\twhile(c<48||c>57) c=getchar();\n\tdo x=(x<<1)+(x<<3)+(c^48),c=getchar();\n\twhile(c>=48&&c<=57);\n\treturn x;\n}\nconst int N=3000013,Bmask=4194302;\nstruct data{\n\tint val,a[2],s[2];\n\tint operator()(const int x)const{return a[x==val];}\n\tint operator[](const int x)const{return s[x==val];}\n\tvoid iden(){val=-1;s[0]=s[1]=a[0]=a[1]=0;}\n}arr[N],sm[N];\ndata operator+(const data x,const data y){\n\tif(x.val==-1) return y;\n\tif(y.val==-1) return x;\n\tdata res;\n\tres.val=x.val;\n\tres.a[0]=y(x.a[0]);\n\tres.a[1]=y(x.a[1]);\n\tres.s[0]=y[x.a[0]]+x.s[0];\n\tres.s[1]=y[x.a[1]]+x.s[1];\n\treturn res;\n}\nint cnt[N][22],mex[N];\nvoid addval(int x,int v){if(!cnt[x][v]++) mex[x]^=(1<<v);}\nvoid delval(int x,int v){if(!--cnt[x][v]) mex[x]^=(1<<v);}\nvoid init(int x){\n\tint lb=__builtin_ctz(mex[x]);\n\tint llb=__builtin_ctz(mex[x]^(1<<lb));\n\tarr[x].s[0]=arr[x].a[0]=arr[x].val=lb;\n\tarr[x].s[1]=arr[x].a[1]=llb;\n}\nint hd[N],ver[N],nxt[N],tot;\nvoid add(int u,int v){\n\tnxt[++tot]=hd[u];hd[u]=tot;ver[tot]=v;\n}\nint ft[N],sn[N],sz[N],res;\nint par[N],lc[N],rc[N];\nvoid dfs(int u){\n\tsz[u]=1;\n\tfor(int i=hd[u];i;i=nxt[i]){\n\t\tint v=ver[i];\n\t\tdfs(v);\n\t\tsz[u]+=sz[v];\n\t\tif(sz[sn[u]]<sz[v]) sn[u]=v;\n\t}\n}\nint stk[N],tp;\nint build(int l,int r){\n\tif(l==r) return stk[l];\n\tint tl=l,tr=r,all=sz[stk[l]]+sz[stk[r+1]];\n\twhile(tl<tr){\n\t\tint mid=(tl+tr)>>1;\n\t\tif(2*sz[stk[mid+1]]<all) tr=mid;\n\t\telse tl=mid+1;\n\t}\n\tint pos=stk[tl];\n\tif(l<tl) par[lc[pos]=build(l,tl-1)]=pos;\n\tif(tr<r) par[rc[pos]=build(tr+1,r)]=pos;\n\treturn pos;\n}\nint constr(int u){\n\tfor(int p=u;p;p=sn[p])\n\t\tfor(int i=hd[p];i;i=nxt[i]){\n\t\t\tint v=ver[i];\n\t\t\tif(v==sn[p]) continue;\n\t\t\tpar[constr(v)]=p;\n\t\t}\n\ttp=0;\n\tfor(int p=u;p;p=sn[p]) stk[++tp]=p;\n\tstk[tp+1]=0;\n\treturn build(1,tp);\n}\nbool nrt(int u){\n\treturn par[u]&&(lc[par[u]]==u||rc[par[u]]==u);\n}\nvoid jump(int u){\n\tinit(u);\n\twhile(nrt(u)){\n\t\tsm[u]=sm[rc[u]]+arr[u]+sm[lc[u]];\n\t\tu=par[u];\n\t}\n\tif(~sm[u].val){\n\t\tif(par[u]) delval(par[u],sm[u](0));\n\t\tres-=sm[u][0];\n\t}\n\tsm[u]=sm[rc[u]]+arr[u]+sm[lc[u]];\n\tres+=sm[u][0];\n\tif(par[u]){\n\t\taddval(par[u],sm[u](0));\n\t\tjump(par[u]);\n\t}\n}\nint main(){\n\tint n=read()+1;\n\tfor(int i=2;i<=n;++i) add(ft[i]=read(),i);\n\tfor(int i=1;i<=n;++i) sm[i].iden(),arr[i].iden(),mex[i]=Bmask;\n\tsm[0].iden();dfs(1);constr(1);\n\tfor(int i=1;i<=n;++i){\n\t\tjump(i);\n\t\tif(i>1) printf(\"%d\\n\",res-i);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1667999465,
        "uid": 163729,
        "name": "yyyyxh",
        "ccfLevel": 7,
        "title": "CF1740H Solution"
    },
    {
        "content": "\u8003\u8651\u5148\u8bfb\u5165\u6574\u68f5\u6811\uff0c\u7136\u540e\u91cd\u94fe\u5256\u5206\u3002\n\n\u7c7b\u4f3c ddp\uff0c\u6211\u4eec\u8003\u8651\u7ef4\u62a4\u4e00\u79cd\u4fe1\u606f\uff0c\u4f7f\u5f97\u80fd\u591f\u5728\u91cd\u94fe\u4e0a\u4ece\u4e0b\u5f80\u4e0a\u5408\u5e76 mex\u3002\n\n\u628a\u91cd\u94fe\u9876\u7684 $\\operatorname{mex}$ \u4ee5\u53ca\u6574\u6761\u91cd\u94fe\u4e0a\u7684 $\\operatorname{mex}$ \u548c\u89c6\u4e3a\u4e00\u4e2a\u5173\u4e8e\u91cd\u94fe\u6700\u5e95\u90e8\u53f6\u5b50\u7684\u503c $x$ \u7684\u51fd\u6570 $f:\\mathbb N\\mapsto \\mathbb N^2$\u3002\u5f53\u91cd\u94fe\u957f\u5ea6\u4e3a $1$ \u65f6\uff0c\u4e5f\u5c31\u662f\u628a\u70b9 $y$ \u7684\u503c\u89c6\u4e3a\u5173\u4e8e $son(y)$ \u7684\u51fd\u6570\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e00\u6761\u91cd\u94fe\u7684\u51fd\u6570\u5c31\u662f\u6bcf\u4e2a\u70b9\u5355\u72ec\u7684\u51fd\u6570\u4ece\u4e0b\u5f80\u4e0a\u4f9d\u6b21\u590d\u5408\u7684\u7ed3\u679c\u3002\n\n\u6ce8\u610f\uff0c\u6bcf\u4e2a\u70b9\u5355\u72ec\u7684\u51fd\u6570 $f(p)$ \u603b\u662f\u51e0\u4e4e\u4e3a\u5e38\u6570\u51fd\u6570\uff0c\u4e14\u603b\u6070\u6709\u4e00\u4e2a\u4e0e\u5176\u5b83\u4f4d\u7f6e\u51fd\u6570\u503c\u4e0d\u540c\u7684\u70b9\u3002\u6240\u4ee5 $f(p)$ \u7684\u4fe1\u606f\u91cf\u662f $O(1)$ \u7684\u3002\u8fdb\u4e00\u6b65\uff0c$f(p)$ \u7684\u590d\u5408\u4e5f\u662f $O(1)$ \u7684\uff0c\u4e14\u590d\u5408\u540e\u4e5f\u662f\u4e00\u6837\u7684\u5f62\u5f0f\u3002\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u590d\u5408\u5373\u53ef\u3002\n\n\u5728\u94fe\u9876\u5904\u4e3a\u4e86\u66f4\u65b0\u94fe\u9876\u7236\u4eb2\u7684\u51fd\u6570\uff0c\u9700\u8981\u8ba1\u7b97\u94fe\u9876\u7236\u4eb2\u7684\u513f\u5b50\u7684\u6743\u503c mex\u3002\u4f60\u53ef\u4ee5\u7528\u4e00\u68f5\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u4f46\u5176\u5b9e\u6743\u503c\u4e0d\u8d85\u8fc7 $O(\\log n)$\uff0c\u6240\u4ee5\u66b4\u529b\u8ba1\u7b97\u5c31\u597d\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log^2 n)$\u3002\n\n\u4ee3\u7801\uff1ahttps://codeforces.com/contest/1740/submission/178517969",
        "postTime": 1667206068,
        "uid": 42156,
        "name": "feecle6418",
        "ccfLevel": 0,
        "title": "CF1740H MEX Tree Manipulation"
    },
    {
        "content": "\u9996\u5148\u80af\u5b9a\u628a\u6811\u79bb\u7ebf\u4e0b\u6765\u8003\u8651\u4e00\u4e2a\u4e2a\u52a0\u70b9\u5230\u8d21\u732e\u3002\n\n\u7136\u540e\u5206\u6790\u7b54\u6848\u7684\u8303\u56f4\u3002\n\n\u8bb0\u5982\u679c\u8981\u62fc\u51d1\u51fa $i$ \u8fd9\u4e2a\u7b54\u6848\u81f3\u5c11\u8981\u591a\u5c11\u4e2a\u70b9\uff0c\u4e0d\u96be\u5f97\u51fa\u9012\u63a8\u5f0f $f_i = \\sum_{j=0}^{i-1}{f_j}+1=(\\sum_{j=0}^{i-2}{f_j}+1)+f_{i-1}=2 \\cdot f_{j-1}$\u3002\n\n\u6240\u4ee5\u5b9e\u9645\u4e0a $f_i=2^i$\u3002\n\n\u90a3\u4e48\u6bcf\u4e2a\u8282\u70b9\u7684 `mex` \u5c31\u662f $\\mathcal{O}(\\log n)$ \u7684\u4e86\u3002\n\n\u540c\u65f6\u4e0d\u96be\u53d1\u73b0\u6bcf\u6b21\u6211\u4eec\u6539\u52a8\u4e00\u4e2a\u70b9\uff0c\u90a3\u4e48\u53ea\u4f1a\u6539\u53d8\u4e00\u6761\u94fe\u4e0a\u70b9\u7684 `mex`\u3002\n\n\u6240\u4ee5\u8fd9\u542f\u53d1\u6211\u4eec\u8003\u8651\u80fd\u4e0d\u80fd `ddp`\uff0c\u56e0\u4e3a\u524d\u9762\u5bf9 `mex` \u7684\u6570\u91cf\u7ea7\u5206\u6790\u544a\u8bc9\u6211\u4eec\u8df3\u8f7b\u94fe\u7684\u66b4\u529b\u66f4\u65b0\u8fc7\u7a0b\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002\n\n\u8003\u8651\u5982\u4f55\u5feb\u901f\u7ef4\u62a4\u91cd\u94fe\u4e0a\u7684\u4fe1\u606f\uff0c\u56e0\u4e3a\u9898\u76ee\u4e2d\u662f\u5bf9\u6240\u6709\u513f\u5b50\u505a `mex`, \u6240\u4ee5\u5728\u91cd\u94fe\u4e2d\u6bcf\u6b21\u90fd\u53ea\u4f1a\u4ece\u4e0b\u9762\u5f04\u4e0a\u6765\u4e00\u4e2a\u503c\u7684\u53d8\u5316\uff0c\u6240\u4ee5\u8fd9\u4e2a\u4fe1\u606f\u5e94\u5f53\u662f\u975e\u5e38\u597d\u7ef4\u62a4\u7684\u3002\n\n\u56e0\u4e3a\u6700\u591a\u53ea\u4f1a\u5f15\u5165\u4e00\u4e2a\u65b0\u7684\u503c\uff0c\u6240\u4ee5 `mex` \u5c31\u53ea\u4f1a\u6709\u4e24\u79cd\u53d8\u5316\u60c5\u51b5\u3002\n\n\u4e00\u79cd\u662f\u6211\u4eec\u91cd\u513f\u5b50\u8d21\u732e\u7684\u90a3\u4e2a\u503c\u7b49\u4e8e\u53ea\u7b97\u8f7b\u513f\u5b50\u7684 `mex`\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u4e0b\u4e00\u4e2a\u53ef\u80fd\u7684 `mex`\uff0c\u76f4\u63a5\u5feb\u901f\u66f4\u65b0\u3002\n\n\u53e6\u4e00\u79cd\u5c31\u662f\u91cd\u513f\u5b50\u8d21\u732e\u7684\u90a3\u4e2a\u503c\u4e0d\u7b49\u4e8e\u53ea\u7b97\u8f7b\u513f\u5b50\u7684 `mex`\uff0c\u90a3\u4e48\u5c31\u4e0d\u4f1a\u6709\u4efb\u4f55\u5f71\u54cd\u3002\n\n\u5177\u4f53\u7684\uff0c\u8fd9\u76f8\u5f53\u4e8e\u6211\u4eec\u5bf9\u4e00\u6761\u91cd\u94fe\u7ef4\u62a4\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u81ea\u52a8\u673a\u7684\u4fe1\u606f\uff0c\u4ed6\u6709\u4e00\u4e2a\u8f93\u5165\u4ee3\u8868\u4ece\u5e95\u90e8\u4f20\u5165\u7684\u503c\uff0c\u540c\u65f6\u6709\u4e24\u4e2a\u8f93\u51fa\u4e00\u4e2a\u662f\u7ecf\u8fc7\u8fd9\u6761\u91cd\u94fe\u4e4b\u540e\u7684 `mex`\uff0c\u8fd8\u6709\u4e00\u4e2a\u662f\u8fd9\u4e2a\u91cd\u94fe\u7684 `mex` \u7684\u548c\u3002\n\n\u8fd9\u4e2a\u81ea\u52a8\u673a\u4e00\u6837\u7684\u4fe1\u606f\u80af\u5b9a\u662f\u53ef\u4ee5\u5408\u5e76\u7684\uff0c\u7a0d\u52a0\u5206\u8ba8\u5373\u53ef\u3002\n\n\u90a3\u4e48\u5c31\u505a\u5b8c\u4e86\uff0c\u590d\u6742\u5ea6 $\\mathcal{O}(n \\log^2 n)$ \u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\u6bcf\u6b21\u6c42\u51fa\u4e00\u6761\u91cd\u94fe\u7684\u503c\u4e00\u5b9a\u8981\u4ece\u91cd\u94fe\u5e95\u90e8\u5230\u9876\u90e8\u5168\u90e8\u67e5\u8be2\u3002",
        "postTime": 1685020505,
        "uid": 139066,
        "name": "luanmenglei",
        "ccfLevel": 7,
        "title": "CF1740H MEX Tree Manipulation"
    },
    {
        "content": "\u65b9\u4fbf\u8d77\u89c1\uff0c\u4e0b\u9762\u7528 **\u4ef7\u503c** \u6765\u6307\u4ee3\u82f1\u6587\u9898\u9762\u4e2d\u7684 *value*\u3002\n\n**\u89c2\u5bdf 1** \u4e00\u68f5\u5927\u5c0f\u4e3a $n$ \u7684\u6811\uff0c\u5176\u6839\u8282\u70b9\u7684\u4ef7\u503c\u4e0d\u8d85\u8fc7 $\\lfloor\\log_2 n\\rfloor$\u3002\n\n**\u8bc1\u660e** \u8bbe $a_i$ \u4e3a\u6839\u8282\u70b9\u4ef7\u503c\u7b49\u4e8e $i$ \u7684\u6811\u7684\u6700\u5c0f\u8282\u70b9\u6570\u3002\u6ce8\u610f\u5230\u8fd9\u6837\u7684\u6811\u5fc5\u7136\u6709\u4ef7\u503c\u5206\u522b\u4e3a $0,1,...,(i-1)$ \u7684\u5b50\u6811\uff0c\u56e0\u800c $a_i\\geq 1+a_0+a_1+\\cdots +a_{i-1}$\u3002\u53ef\u4ee5\u8ba1\u7b97\u5f97\u5230 $a_i=2^i$\uff0c\u56e0\u800c\u5f97\u8bc1\u3002\n\n-----------------\n\n\u6211\u4eec\u5148\u79bb\u7ebf\u8bfb\u5165\u6574\u68f5\u6811\u7684\u5f62\u6001\u3002\u672c\u9898\u6d89\u53ca\u5230\u6811\u4e0a\u5355\u70b9\u4fe1\u606f\u7684\u66f4\u65b0\u4ee5\u53ca\u5168\u5c40\u7684\u7ef4\u62a4\uff0c\u8003\u8651\u7528\u6811\u94fe\u5256\u5206\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u6211\u4eec\u5bf9\u6811\u4f5c\u8f7b\u91cd\u94fe\u5256\u5206\uff0c\u5c06\u6bcf\u4e2a\u8282\u70b9 $u$ \u7684\u6743\u503c\u8bbe\u4e3a\u5176\u91cd\u513f\u5b50\u6743\u503c\u7684\u51fd\u6570 $v_u=f_u(v_{\\mathrm{son}_u})$\uff0c\u5176\u4e2d $f_u$ \u53ea\u8ddf $u$ \u7684\u5404\u4e2a\u8f7b\u513f\u5b50\u7684\u6743\u503c\u6709\u5173\u3002\u6ce8\u610f\u5230 $f_u$ \u8981\u4e48\u662f\u4e00\u4e2a\u5e38\u51fd\u6570\uff0c\u8981\u4e48\u662f\u53ea\u5728\u67d0\u70b9\u5904\u53d6\u503c\u4e0d\u540c\u7684\u51fd\u6570\uff0c\u56e0\u800c\u5176\u590d\u5408\u4e5f\u53ef\u4ee5\u7b80\u5355\u7ef4\u62a4\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log^2 n)$\u3002",
        "postTime": 1669294832,
        "uid": 112794,
        "name": "\u5468\u5b50\u8861",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1740H\u3010MEX Tree Manipulation\u3011"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://codeforces.com/problemset/problem/1740/H)\n\n~~\u611f\u89c9\u5b9e\u73b0\u7ec6\u8282\u5360\u4e86 3300 \u7684\u5f88\u5927\u4e00\u90e8\u5206\u539f\u56e0~~\n\n\u4e00\u4e2a\u70b9\u7684\u6743\u503c\u662f\u7531\u6240\u6709\u513f\u5b50\u7684\u6743\u503c\u5f97\u6765\uff0c\u6240\u4ee5\u5e94\u8be5\u8003\u8651\u79bb\u7ebf\u7136\u540e\u91cd\u94fe\u5256\u5206\uff0c\u7ef4\u62a4\u8f7b\u513f\u5b50\u7684\u4fe1\u606f\u548c\u3002\u4fee\u6539\u7684\u65f6\u5019\u5c31\u4e0d\u505c\u5730\u8df3\u91cd\u94fe\u3002\n\n\u56e0\u4e3a\u91cd\u513f\u5b50\u6700\u591a\u53ea\u6709\u4e00\u4e2a\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u7ef4\u62a4\u5b83\u8f7b\u513f\u5b50\u6784\u6210\u7684\u96c6\u5408\u7684\u6700\u5c0f\u6ca1\u51fa\u73b0\u8fc7\u7684\u6570\u548c\u6b21\u5c0f\u7684\u6ca1\u51fa\u73b0\u8fc7\u7684\u6570\u5c31\u8db3\u591f\u4e86\uff0c\u56e0\u4e3a\u53ea\u4f1a\u8df3 log \u6761\u8f7b\u8fb9\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u66b4\u529b\u7ef4\u62a4\u3002\u4e0d\u59a8\u8bbe\u6700\u5c0f\u6ca1\u51fa\u73b0\u8fc7\u7684\u6570\u4e3a $sg1(u)$\uff0c\u6b21\u5c0f\u7684\u4e3a $sg2(u)$\u3002\n\n\u5148\u5355\u72ec\u8003\u8651\u4e00\u6761\u91cd\u94fe\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u70b9 $u$\uff0c\u5b83\u7684\u6743\u503c\u53ea\u80fd\u662f $sg1(u)$ \u6216\u8005 $sg2(u)$\uff0c\u800c\u4e14\u5b83\u7684\u6743\u503c\u4e00\u65e6\u786e\u5b9a\uff0c\u4e0a\u9762\u7684\u70b9\u7684\u6743\u503c\u5c31\u5168\u90e8\u786e\u5b9a\u4e86\uff0c\u800c $u$ \u53d6\u7684\u662f $sg1(u)$ \u8fd8\u662f $sg2(u)$ \u53d6\u51b3\u4e8e\u5b83\u7684\u91cd\u513f\u5b50\u662f\u5426\u7ed9\u4e86\u5b83\u4e00\u4e2a $sg1(u)$\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u6761\u91cd\u94fe\u90fd\u5904\u7406\u51fa\u5e95\u4e0b\u7ed9/\u4e0d\u7ed9 $sg1(v)$ \u7684\u6743\u503c\u548c\uff0c\u5176\u4e2d $v$ \u662f\u8fd9\u6761\u91cd\u94fe\u6700\u5e95\u7684\u8282\u70b9\u3002\u6211\u4eec\u8fd8\u9700\u8981\u652f\u6301\u4fee\u6539\u91cd\u94fe\u4e0a\u7684\u4e00\u4e2a\u70b9\u7684 $sg1$ \u548c $sg2$\u3002\u53ef\u4ee5\u8003\u8651\u8fd9\u4e2a\u6743\u503c\u548c\u662f\u600e\u4e48\u7b97\u51fa\u6765\u7684\uff0c\u4e00\u79cd\u601d\u8def\u662f\u4ece\u4e0a\u5f80\u4e0b\u9012\u63a8\uff1a\n\n\u8bbe\u76ee\u524d\u5df2\u7ecf\u7b97\u5230\u4e86 $u$\uff0c$v$ \u662f $u$ \u7684\u91cd\u513f\u5b50\uff0c$f(u)$ \u4ee3\u8868\u4e0b\u9762\u4e0d\u7ed9 $sg1(u)$ \u7684\u6743\u503c\u548c\uff0c$g(u)$ \u662f\u7ed9\u7684\u3002\u9996\u5148\u5982\u679c $sg1(v)$ \u548c $sg2(v)$ \u90fd\u4e0d\u7b49\u4e8e $sg1(u)$\uff0c\u8bf4\u660e\u65e0\u8bba\u5982\u4f55\u90fd\u7ed9\u4e0d\u4e86\uff0c\u5373 $f(v)=sg1(v)+f(u),g(v)=sg2(v)+f(u)$\uff0c\u79f0\u8fd9\u4e2a\u4e3a\u60c5\u51b5 2\u3002\u7136\u540e\u5982\u679c $sg1(v)=sg1(u)$\uff0c\u8fd9\u65f6 $f(v)=sg1(v)+g(u),g(v)=sg2(v)+f(u)$\uff0c\u79f0\u8fd9\u4e2a\u4e3a\u60c5\u51b5 1\u3002\u5426\u5219 $sg2(v)=sg1(u)$\uff0c\u5219 $f(v)=sg1(v)+f(u),g(v)=sg2(v)+g(u)$\uff0c\u79f0\u8fd9\u4e2a\u4e3a\u60c5\u51b5 0\u3002\n\n\u56de\u5230\u9700\u8981\u652f\u6301\u4fee\u6539\uff0c\u8003\u8651\u6bcf\u4e2a\u70b9\u5bf9\u4e8e\u6700\u7ec8\u7684 $f$ \u548c $g$ \u7684\u8d21\u732e\uff0c\u7b80\u5355\u5206\u6790\u4e00\u4e0b\u5c31\u662f\u627e\u5230\u5f80\u4e0b\u7684\u7b2c\u4e00\u4e2a\u60c5\u51b5 2\uff0c\u5982\u679c\u5230\u8fd9\u4e4b\u524d\u6709\u5076\u6570\u4e2a\u60c5\u51b5 1\uff0c\u5219 $sg1$ \u4f1a\u8d21\u732e\u5230 $f$ \u53bb\uff0c$sg2$ \u4f1a\u8d21\u732e\u5230 $g$ \u53bb\uff1b\u5982\u679c\u6709\u5947\u6570\u4e2a\u60c5\u51b5 1\uff0c\u5219 $sg1$ \u4f1a\u8d21\u732e\u5230 $g$ \u53bb\uff0c$sg2$ \u4f1a\u8d21\u732e\u5230 $f$ \u53bb\u3002\n\n\u53d1\u73b0\u5230\u8fd9\u91cc\u5df2\u7ecf\u53ef\u4ee5\u76f4\u63a5\u505a\u4e86\uff0c\u5148\u641e\u51fa dfs \u5e8f\uff0c\u540c\u4e00\u6761\u91cd\u94fe\u4e0a\u7684\u70b9\u90fd\u5728\u4e00\u4e2a\u533a\u95f4\uff0c\u4e0a\u9762\u8bf4\u7684\u90a3\u4e2a $sg1,sg2$ \u7ed9 $f,g$ \u7684\u8d21\u732e\u4ed4\u7ec6\u5206\u6790\u4e00\u4e0b\u662f\u53ef\u4ee5\u62ff\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n\\log^2 n)$\u3002\n\n\u7ec6\u8282\u6bd4\u8f83\u591a\uff0c~~\u5f53\u65f6\u6211\u7ec6\u8282\u6ca1\u60f3\u597d\u5c31\u5f00\u5199\uff0c\u53d1\u73b0\u95ee\u9898\u540e\u4e2d\u95f4\u4e00\u5927\u6bb5\u5220\u6389\u91cd\u6784\u3002~~\n\n```cpp\n#include<iostream>\n#include<stdio.h>\n#include<ctype.h>\n#include<assert.h>\n#define ll long long\n#define ld long double\n#define fi first\n#define se second\n#define pii pair<int,int>\n#define lowbit(x) ((x)&-(x))\n#define popcount(x) __builtin_popcount(x)\n#define inf 0x3f3f3f3f\n#define infll 0x3f3f3f3f3f3f3f3f\n#define umap unordered_map\n#define all(x) x.begin(),x.end()\n#define mk make_pair\n#define pb push_back\n#define ckmax(x,y) x=max(x,y)\n#define ckmin(x,y) x=min(x,y)\n#define rep(i,l,r) for(int i=l;i<=r;++i)\n#define per(i,r,l) for(int i=r;i>=l;--i)\n#define N 300005\n#define ls k<<1\n#define rs k<<1|1\nusing namespace std;\ninline int read(){\n\tint x=0,f=0; char ch=getchar();\n\twhile(!isdigit(ch)) f|=(ch==45),ch=getchar();\n\twhile(isdigit(ch)) x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\n\treturn f?-x:x;\n}\nstruct edge{\n\tint b,n;\n}e[N];\nint ans,n,fa[N],h[N],tot,sze[N],son[N],top[N],dfn[N],down[N],mp[N][20],sg1[N],sg2[N];\ninline void charu(int a,int b){\n\te[++tot].b=b,e[tot].n=h[a],h[a]=tot;\n}\nvoid dfs1(int u){\n\tsze[u]=1;\n\tfor(int i=h[u];i;i=e[i].n){\n\t\tint v=e[i].b;\n\t\tdfs1(v);\n\t\tsze[u]+=sze[v];\n\t\tif(sze[v]>sze[son[u]]) son[u]=v;\n\t}\n}\nvoid dfs2(int u){\n\tdfn[u]=++dfn[0];\n\tif(son[u]) top[son[u]]=top[u],dfs2(son[u]);\n\tfor(int i=h[u];i;i=e[i].n){\n\t\tint v=e[i].b;\n\t\tif(v==son[u]) continue;\n\t\ttop[v]=v,dfs2(v);\n\t}\n}\npii operator + (pii A,pii B){\n\treturn {A.fi+B.fi,A.se+B.se};\n}\nstruct node{\n\tint sum,flp;\n\tpii R;\n\tnode operator + (node B){\n\t\tnode A=*this,C;\n\t\tif(A.sum==-1 && B.sum==-1){\n\t\t\tC.sum=-1;\n\t\t\tC.flp=A.flp^B.flp;\n\t\t\tif(B.flp) swap(A.R.fi,A.R.se);\n\t\t\tC.R=A.R+B.R;\n\t\t\treturn C;\n\t\t}\n\t\tif(B.sum==-1){\n\t\t\tC.sum=A.sum;\n\t\t\tC.flp=A.flp;\n\t\t\tif(B.flp) swap(A.R.fi,A.R.se);\n\t\t\tC.R=A.R+B.R;\n\t\t\treturn C;\n\t\t}\n\t\tif(B.flp) swap(A.R.fi,A.R.se);\n\t\tC.sum=max(0,A.sum)+A.R.fi+B.sum;\n\t\tif(A.sum!=-1) C.flp=A.flp;\n\t\telse C.flp=A.flp^B.flp;\n\t\tC.R=B.R;\n\t\treturn C;\n\t}\n};\ninline int calc(node x){\n\treturn max(0,x.sum)+x.R.fi;\n}\nstruct segmentTree{\n\tint l,r,flp,os;\n\tnode v;\n}d[4*N];\nvoid build(int k,int l,int r){\n\td[k].l=l,d[k].r=r;\n\td[k].v.sum=-1;\n\tif(l==r) return;\n\tint mid=l+r>>1;\n\tbuild(ls,l,mid),build(rs,mid+1,r);\n}\nvoid update(int k,int l,int r,int x,int v){\n\tif(l==r){\n\t\td[k].v.flp=d[k].flp=(v==1);\n\t\td[k].os=(v==2);\n\t\tif(v==2) d[k].v.sum=0;\n\t\telse d[k].v.sum=-1;\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tif(x<=mid) update(ls,l,mid,x,v);\n\telse update(rs,mid+1,r,x,v);\n\td[k].flp=d[ls].flp^d[rs].flp;\n\td[k].os=d[ls].os|d[rs].os;\n\td[k].v=d[ls].v+d[rs].v;\n}\nvoid modify(int k,int l,int r,int x,pii v){\n\tif(l==r){\n\t\td[k].v.R=v;\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tif(x<=mid) modify(ls,l,mid,x,v);\n\telse modify(rs,mid+1,r,x,v);\n\td[k].v=d[ls].v+d[rs].v;\n}\nint flag;\nint find(int k){\n\tif(d[k].l==d[k].r) return d[k].l;\n\tif(d[ls].os) return find(ls);\n\telse return find(rs);\n}\nvoid pre(int k,int l,int r,int x,int y){\n\tif(x<=l && r<=y){\n\t\tif(!d[k].os) return;\n\t\tflag=find(k);\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tif(x<=mid) pre(ls,l,mid,x,y);\n\tif(flag!=-1) return;\n\tif(mid+1<=y) pre(rs,mid+1,r,x,y);\n}\ninline int getpre(int l,int r){\n\tflag=-1;\n\tpre(1,1,dfn[0],l,r);\n\tif(flag==-1) return r+1;\n\treturn flag;\n}\nint query(int k,int l,int r,int x,int y){\n\tif(x>y) return 0;\n\tif(x<=l && r<=y) return d[k].flp;\n\tint mid=l+r>>1;\n\tif(x<=mid && mid+1<=y) return query(ls,l,mid,x,y)^query(rs,mid+1,r,x,y);\n\telse if(x<=mid) return query(ls,l,mid,x,y);\n\telse return query(rs,mid+1,r,x,y);\n}\nnode qv(int k,int l,int r,int x,int y){\n\tif(x<=l && r<=y) return d[k].v;\n\tint mid=l+r>>1;\n\tif(x<=mid && mid+1<=y) return qv(ls,l,mid,x,y)+qv(rs,mid+1,r,x,y);\n\telse if(x<=mid) return qv(ls,l,mid,x,y);\n\telse return qv(rs,mid+1,r,x,y);\n}\ninline int getsg(int u){\n\tint fick=getpre(dfn[u],dfn[down[u]]);\n\tif(query(1,1,dfn[0],dfn[u],fick-1)) return sg2[u];\n\telse return sg1[u];\n}\ninline void init(int u){\n\tfor(int i=0;;++i) if(!mp[u][i]){sg1[u]=i;break;}\n\tsg2[u]=sg1[u]+1;\n\twhile(mp[u][sg2[u]]) sg2[u]++;\n}\ninline void cp(int u){\n\tint T=top[u];\n\tmodify(1,1,dfn[0],dfn[u],{sg1[u],sg2[u]});\n\tif(top[fa[u]]==top[u]){\n\t\tif(sg1[u]!=sg1[fa[u]] && sg2[u]!=sg1[fa[u]]){\n\t\t\tupdate(1,1,dfn[0],dfn[u],2);\n\t\t}\n\t\telse{\n\t\t\tif(sg1[u]==sg1[fa[u]]){\n\t\t\t\tupdate(1,1,dfn[0],dfn[u],1);\n\t\t\t\t\n\t\t\t}\n\t\t\telse{\n\t\t\t\tupdate(1,1,dfn[0],dfn[u],0);\n\t\t\t}\n\t\t}\n\t}\n\tif(u==down[T]) return;\n\tu=son[u];\n\tif(sg1[u]!=sg1[fa[u]] && sg2[u]!=sg1[fa[u]]){\n\t\tupdate(1,1,dfn[0],dfn[u],2);\n\t}\n\telse{\n\t\tif(sg1[u]==sg1[fa[u]]){\n\t\t\tupdate(1,1,dfn[0],dfn[u],1);\n\t\t}\n\t\telse{\n\t\t\tupdate(1,1,dfn[0],dfn[u],0);\n\t\t}\n\t}\n}\ninline void add(int u){\n\tint T=top[u];\n\tdown[T]=u;\n\tsg1[u]=0,sg2[u]=1;\n\tif(top[fa[u]]==top[u]){\n\t\tif(fa[T]){\n\t\t\tmp[fa[T]][getsg(T)]--;\n\t\t}\n\t\tans-=calc(qv(1,1,dfn[0],dfn[T],dfn[down[T]]));\n\t\tcp(u);\n\t\tans+=calc(qv(1,1,dfn[0],dfn[T],dfn[down[T]]));\n\t}\n\telse cp(u);\n\tu=T;\n\twhile(fa[u]){\n\t\tmp[fa[u]][getsg(u)]++;\n\t\tT=top[fa[u]];\n\t\tif(fa[T]){\n\t\t\tmp[fa[T]][getsg(T)]--;\n\t\t}\n\t\tans-=calc(qv(1,1,dfn[0],dfn[T],dfn[down[T]]));\n\t\tinit(fa[u]);\n\t\tcp(fa[u]);\n\t\tans+=calc(qv(1,1,dfn[0],dfn[T],dfn[down[T]]));\n\t\tu=T;\n\t}\n}\nsigned main(){\n\tn=read()+1;\n\tfor(int i=2;i<=n;++i){\n\t\tfa[i]=read();\n\t\tcharu(fa[i],i);\n\t}\n\tdfs1(1);\n\ttop[1]=1,dfs2(1);\n\tdown[1]=1;\n\tsg1[1]=0,sg2[1]=1;\n\tbuild(1,1,dfn[0]);\n\tmodify(1,1,dfn[0],dfn[1],{0,1});\n\tfor(int i=2;i<=n;++i){\n\t\tadd(i);\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1667827123,
        "uid": 238861,
        "name": "xzzduang",
        "ccfLevel": 0,
        "title": "CF1740H MEX Tree Manipulation"
    }
]