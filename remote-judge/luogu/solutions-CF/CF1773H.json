[
    {
        "content": "\u8d5b\u65f6\u8ddf\u961f\u53cb\u4e00\u8d77\u6446\u70c2\u4e86\uff0c\u4e8e\u662f\u6ca1\u505a\u51fa\u6765\uff0c\u56de\u6765\u8865\u9898\u3002\n\n\u5982\u679c\u8be2\u95ee\u5230\u4e86\u7b54\u6848\uff0c\u53ef\u4ee5\u76f4\u63a5\u5224\u65ad\u5e76\u9000\u51fa\uff0c\u56e0\u6b64\u4e0b\u6587\u7684\u8be2\u95ee\u8fc7\u7a0b\u5e76\u6ca1\u6709\u8003\u8651\u8fd9\u4e00\u70b9\u3002\n\n\u663e\u7136\u201c$(1,1)$ \u6bd4 $(0,0)$ \u79bb\u6240\u6c42\u4f4d\u7f6e\u66f4\u8fd1\u201d\u5bf9\u4e8e\u51e0\u4e4e\u6240\u6709\u70b9\u6210\u7acb\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4f9d\u6b21\u8be2\u95ee $(0,0),(1,1),(0,0)$\uff0c\u5ffd\u7565\u7b2c\u4e00\u6b21\u7684\u56de\u7b54\uff0c\u5219\u540e\u4e24\u6b21\u56de\u7b54\u5206\u522b\u5bf9\u5e94 `Closer` \u548c `Further`\uff0c\u8bb0\u4e3a $c$ \u548c $f$\u3002\u6211\u4eec\u8bf4\u201c\u51e0\u4e4e\u6240\u6709\u70b9\u201d\uff0c\u56e0\u4e3a\u5b58\u5728\u4e24\u4e2a\u53cd\u4f8b $(0,1),(1,0)$\u3002\u5bb9\u6613\u53d1\u73b0\u53cd\u4f8b\u60c5\u51b5 $c=f$\uff08\u56e0\u4e3a\u5176\u5b9e\u90fd\u5bf9\u5e94 `At the same distance`\uff09\uff0c\u6b64\u65f6\u628a\u4e24\u79cd\u60c5\u51b5\u90fd\u95ee\u4e00\u4e0b\u5373\u53ef\u5f97\u5230\u7b54\u6848\u3002\n\n\u901a\u8fc7\u4ee5\u4e0a\u8fc7\u7a0b\uff0c\u6211\u4eec\u6392\u9664\u4e86\u5e73\u51e1\u60c5\u51b5\uff0c\u5e76\u786e\u5b9a\u4e86 $c$ \u548c $f$\u3002\u8003\u8651\u4e8c\u5206\uff0c\u8bbe\u6240\u6c42\u4f4d\u7f6e\u5728 $(x_l,y_l)\\sim(x_r,y_r)$ \u7684\u5b50\u77e9\u5f62\u4e2d\uff0c\u6c42\u51fa\u4e2d\u70b9 $(x_m,y_m)$\uff0c\u4f9d\u6b21\u8be2\u95ee $(x_m,y_m),(x_m+1,y_m),(x_m+1,y_m+1)$\uff0c\u5ffd\u7565\u7b2c\u4e00\u6b21\u7684\u56de\u7b54\uff0c\u5219\u540e\u4e24\u6b21\u7684\u56de\u7b54\u5206\u522b\u53ef\u4ee5\u4f7f $x$ \u548c $y$ \u7684\u8303\u56f4\u51cf\u534a\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5728 $3\\lceil\\log_210^6\\rceil+4=64$ \u6b21\u8be2\u95ee\u5185\u786e\u5b9a\u6240\u6c42\u70b9\u3002\n\n\u6709\u4e24\u70b9\u9700\u8981\u6ce8\u610f\uff1a\n\n- \u53ef\u4ee5\u53d1\u73b0\u8be2\u95ee\u6b21\u6570\u4e0a\u9650\u5361\u5f97\u5f88\u7d27\uff0c\u8981\u7cbe\u7ec6\u5b9e\u73b0\u4e0d\u8981\u5199\u4e11\u591a\u8be2\u95ee\u3002\n- \u9700\u8981\u7279\u5224\u5f53 $x_m$ \u6216 $y_m$ \u6070\u597d\u7b49\u4e8e $10^6$ \u7684\u60c5\u51b5\uff0c\u6b64\u65f6\u4f1a\u6d89\u53ca\u5230\u5750\u6807 $10^6+1$ \u4ece\u800c\u5bfc\u81f4\u4e0d\u5408\u6cd5\u8be2\u95ee\u3002\n\n```cpp\n// Problem: CF1773H Hot and Cold\n// Contest: Luogu\n// URL: https://www.luogu.com.cn/problem/CF1773H\n// Memory Limit: 1000 MB\n// Time Limit: 3000 ms\n// \n// Powered by CP Editor (https://cpeditor.org)\n\n//By: OIer rui_er\n#include <bits/stdc++.h>\n#define rep(x,y,z) for(int x=(y);x<=(z);x++)\n#define per(x,y,z) for(int x=(y);x>=(z);x--)\n#define debug(format...) fprintf(stderr, format)\n#define fileIO(s) do{freopen(s\".in\",\"r\",stdin);freopen(s\".out\",\"w\",stdout);}while(false)\nusing namespace std;\ntypedef long long ll;\n\nstring c, f;\ntemplate<typename T> void chkmin(T& x, T y) {if(x > y) x = y;}\ntemplate<typename T> void chkmax(T& x, T y) {if(x < y) x = y;}\nstring ask(int x, int y) {\n\tprintf(\"%d %d\\n\", x, y);\n\tfflush(stdout);\n\tstring res;\n\tgetline(cin, res);\n\treturn res;\n}\nbool success(string s) {\n\treturn s.find('!') != string::npos;\n}\n\nint main() {\n\tif(success(ask(0, 0))) return 0;\n\tif(success(c = ask(1, 1))) return 0;\n\tif(success(f = ask(0, 0))) return 0;\n\tif(c == f) return assert(success(ask(0, 1)) || success(ask(1, 0))),0;\n\tint xl = 0, xr = 1000001, yl = 0, yr = 1000001;\n\twhile(xl < xr || yl < yr) {\n\t\tint xm = (xl + xr) >> 1, ym = (yl + yr) >> 1;\n\t\tstring res1, res2;\n\t\tif(success(ask(xm, ym))) return 0;\n\t\tif(xm == 1000000 && ym == 1000000) res1 = res2 = f;\n\t\telse if(xm == 1000000) {\n\t\t\tres1 = f;\n\t\t\tif(success(res2 = ask(xm, ym+1))) return 0;\n\t\t}\n\t\telse if(ym == 1000000) {\n\t\t\tif(success(res1 = ask(xm+1, ym))) return 0;\n\t\t\tres2 = f;\n\t\t}\n\t\telse {\n\t\t\tif(success(res1 = ask(xm+1, ym))) return 0;\n\t\t\tif(success(res2 = ask(xm+1, ym+1))) return 0;\n\t\t}\n\t\tif(res1 == c) xl = xm + 1;\n\t\telse xr = xm;\n\t\tif(res2 == c) yl = ym + 1;\n\t\telse yr = ym;\n\t}\n\tassert(success(ask(xl, yl)));\n\treturn 0;\n}\n```",
        "postTime": 1674646436,
        "uid": 122461,
        "name": "rui_er",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1773H\u3010Hot and Cold\u3011"
    },
    {
        "content": "\u8003\u8651\u4fe1\u606f\u7684\u672c\u8d28\u3002\n\n\u8bbe\u4e0a\u4e00\u6b21\u8be2\u95ee $(ax, ay)$\uff0c\u672c\u6b21\u8be2\u95ee $(x, y)$\uff0c\u5b83\u4eec\u8fde\u7ebf\u6bb5\u7684\u5782\u76f4\u5e73\u5206\u7ebf\u4e3a $l$\u3002\u82e5\u8fd4\u56de `Closer`\uff0c\u5219\u7b54\u6848\u5728 $l$ \u5305\u542b $(x, y)$ \u4e00\u4fa7\u7684\u534a\u5e73\u9762\u5185\u3002\u82e5\u8fd4\u56de `Further`\uff0c\u5219\u7b54\u6848\u5728 $l$ \u5305\u542b $(ax, ay)$ \u4e00\u4fa7\u7684\u534a\u5e73\u9762\u5185\u3002\u82e5\u8fd4\u56de `At the same distance`\uff0c\u5219\u7b54\u6848\u5728 $l$ \u4e0a\u3002\n\n\u6211\u4eec\u80af\u5b9a\u8981\u5c3d\u5feb\u786e\u5b9a `Closer` \u548c `Further` \u7684\u77ed\u8bed $c, f$\u3002\u53ef\u4ee5\u60f3\u5230\u8be2\u95ee $(0, 0)$ \u540e\u518d\u8be2\u95ee $(1, 1)$\uff0c\u5219\u5f53\u4e14\u4ec5\u5f53\u7b54\u6848\u4e3a $(1, 0)$ \u548c $(0, 1)$ \u65f6 $c$ \u4e0d\u4e3a\u8fd4\u56de\u503c\uff0c\u53ef\u4ee5\u76f4\u63a5\u679a\u4e3e\u3002\u63a5\u4e0b\u6765\u8be2\u95ee $(1, 1)$ \u540e\u518d\u8be2\u95ee $(0, 0)$\uff0c\u5f97\u5230\u8fd4\u56de\u503c\u4e3a $f$\u3002\u6211\u4eec\u7528\u4e86 $6$ \u6b21\u8be2\u95ee\u5f97\u5230 $c, f$\u3002\u5b9e\u9645\u4e0a\u53ef\u4ee5\u66f4\u4f18\uff0c\u4f46\u5df2\u7ecf\u8db3\u591f\u4e86\uff1a\u8be2\u95ee $(0, 0)$\uff0c\u8be2\u95ee $(1, 1)$\uff0c\u8fd4\u56de\u503c\u4f5c\u4e3a $c$\uff0c\u8be2\u95ee $(0, 0)$\uff0c\u8fd4\u56de\u503c\u4f5c\u4e3a $f$\u3002\u82e5 $c = f$ \u8bf4\u660e\u7b54\u6848\u4e3a $(0, 1)$ \u6216 $(1, 0)$\u3002\u8fd9\u6837\u53ea\u9700\u8981 $3$ \u6b21\u8be2\u95ee\u3002\n\n\u8003\u8651\u4e8c\u5206\u6a2a\u5750\u6807 $x$\u3002\n\n\u8bbe\u4e0a\u4e00\u6b21\u8be2\u95ee $(l, 0)$\uff0c\u672c\u6b21\u8be2\u95ee $(r, 0)$\u3002\u82e5\u8fd4\u56de $c$\uff0c\u8bf4\u660e $2x > l + r$\u3002\u82e5\u8fd4\u56de $f$\uff0c\u8bf4\u660e $2x < l + r$\u3002\u5426\u5219\uff0c$2x = l + r$\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e24\u6b21\u8be2\u95ee\u786e\u5b9a $x$ \u5728 $\\frac {l + r} 2$ \u5de6\u4fa7\u8fd8\u662f\u53f3\u4fa7\u3002\n\n\u52a0\u4e0a\u7eb5\u5750\u6807\uff0c\u603b\u8be2\u95ee\u6b21\u6570\u4e3a $4\\lceil\\log_2 V\\rceil$\uff0c\u65e0\u6cd5\u63a5\u53d7\u3002\u4f46\u6ce8\u610f\u5230\u6211\u4eec\u7684\u7b2c\u4e00\u6b21\u8be2\u95ee\u603b\u6ca1\u6709\u4ea7\u751f\u4efb\u4f55\u4fe1\u606f\uff0c\u5f88\u6d6a\u8d39\uff0c\u80fd\u4e0d\u80fd\u5229\u7528\u8d77\u6765\u5462\uff1f\n\n\u8bbe\u4e0a\u4e00\u6b21\u8be2\u95ee $(p, 0)$\uff0c\u5f53\u524d\u533a\u95f4\u4e3a $[l, r]$\u3002\u6ce8\u610f $p$ \u4e0d\u4e00\u5b9a\u7b49\u4e8e $l, r$\u3002\u8bbe $m = \\lfloor\\frac {l + r} 2\\rfloor$\uff0c\u5219\u8be2\u95ee $(2m - p, 0)$ \u5373\u53ef\u76f4\u63a5\u786e\u5b9a\u3002\u95ee\u9898\u5728\u4e8e $2m - p$ \u4e0d\u4e00\u5b9a\u7b26\u5408 $[0, 10 ^ 6]$ \u7684\u9650\u5236\uff0c\u4e14 $p$ \u53ef\u80fd\u7b49\u4e8e $m$\u3002\u6ca1\u5173\u7cfb\uff0c\u6211\u4eec\u53ea\u9700\u4ee4 $p = m - 1$ \u6216 $m + 1$ \u5148\u8be2\u95ee\u4e00\u6b21\u5373\u53ef\u3002\u8fd9\u6837\u7684\u60c5\u51b5\u53d1\u751f\u7684\u6b21\u6570\u5f88\u5c11\uff0c\u5927\u90e8\u5206\u65f6\u5019 $p$ \u5728 $m$ \u9644\u8fd1\u9707\u8361\uff0c\u8bfb\u8005\u53ef\u4ee5\u60f3\u8c61\u4e00\u4e0b\u3002\u611f\u6027\u7406\u89e3\u5f53\u5750\u6807\u9760\u8fd1\u8fb9\u754c\u65f6\u8be2\u95ee\u6b21\u6570\u4f1a\u7a0d\u5fae\u591a\u4e00\u70b9\uff0c\u4f46\u4f9d\u7136\u53ef\u4ee5\u63a5\u53d7\u3002\n\n\u5b98\u65b9\u6b63\u89e3\u5e94\u8be5\u662f\u5c06\u6a2a\u5750\u6807\u548c\u7eb5\u5750\u6807\u653e\u5728\u4e00\u8d77\u4e8c\u5206\uff0c\u8fd9\u6837\u53ea\u9700\u8981 $3\\lceil\\log_2 V\\rceil$ \u6b21\u8be2\u95ee\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nconstexpr int N = 1e6;\nbool debug;\nint Q, ax = -1, ay = -1, bx, by;\nll dis(int x, int y) {return 1ll * (x - bx) * (x - bx) + 1ll * (y - by) * (y - by);}\nbool ill(int x) {return x < 0 || x > N;}\nstring clo, fur;\nstring query(int x, int y) {\n  assert(++Q <= 64 && 0 <= x && x <= N && 0 <= y && y <= N);\n  cout << x << \" \" << y << endl;\n  string res;\n  if(debug) {\n    if(x == bx && y == by) cout << \"Found!\\nQuery count: \" << Q << endl, exit(0);\n    if(ax == -1) res = \"Not found\";\n    else if(dis(ax, ay) < dis(x, y)) res = \"Further\";\n    else if(dis(ax, ay) > dis(x, y)) res = \"Closer\";\n    else res = \"At the same distance\";\n    ax = x, ay = y;\n  }\n  else {\n    getline(cin, res);\n    if(res.find('!') != -1) exit(0);\n  }\n  return res;\n}\nint main() {\n  #ifdef ALEX_WEI\n    FILE* IN = freopen(\"1.in\", \"r\", stdin);\n    FILE* OUT = freopen(\"1.out\", \"w\", stdout);\n    debug = true;\n  #endif\n  if(debug) cin >> bx >> by;\n  query(0, 0), clo = query(1, 1), fur = query(0, 0);\n  if(clo == fur) query(1, 0), query(0, 1);\n  if(debug) cout << \"Closer: \" << clo << \" Further: \" << fur << \"\\n\";\n\n  int lx = 0, rx = N, lst = -1;\n  while(lx < rx) {\n    int m = max(1, lx + rx >> 1);\n    if(lst == -1 || lst == m || ill(2 * m - lst))\n      query(lst = m * 2 > N ? m - 1 : m + 1, 0);\n    string res = query(lst = 2 * m - lst, 0);\n    if(res == clo) {\n      if(lst < m) rx = m - 1;\n      else lx = m + 1;\n    }\n    else if(res == fur) {\n      if(lst < m) lx = m + 1;\n      else rx = m - 1;\n    }\n    else lx = rx = m;\n  }\n\n  int ly = 0, ry = N; lst = -1;\n  while(ly < ry) {\n    int m = max(1, ly + ry >> 1);\n    if(lst == -1 || lst == m || ill(2 * m - lst))\n      query(lx, lst = m * 2 > N ? m - 1 : m + 1);\n    string res = query(lx, lst = 2 * m - lst);\n    if(res == clo) {\n      if(lst < m) ry = m - 1;\n      else ly = m + 1;\n    }\n    else if(res == fur) {\n      if(lst < m) ly = m + 1;\n      else ry = m - 1;\n    }\n    else ly = ry = m;\n  }\n  query(lx, ly);\n  if(debug) cout << \"Oops! Not found!\\n\";\n  return 0;\n}\n/*\ng++ H.cpp -o H -std=c++14 -O2 -DALEX_WEI\n*/\n```",
        "postTime": 1670901716,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "CF1773H Hot and Cold"
    }
]