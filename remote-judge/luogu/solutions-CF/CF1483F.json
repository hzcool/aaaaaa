[
    {
        "content": "[\u6765 cnblogs \u91cc\u770b](https://www.cnblogs.com/zkyJuruo/p/14567932.html)\n\n## \u9898\u9762\n\n> [CF1483F. Exam](https://codeforces.com/contest/1483/problem/F)\n\n> \u7ed9\u5b9a $n$ \u4e2a\u4e0d\u540c\u7684\u5b57\u7b26\u4e32 $S_1, S_2, ... S_n$\uff0c\u6c42\u6570\u5bf9 $(i, j)$ \u7684\u4e2a\u6570\uff0c\u6ee1\u8db3 $S_i$ \u662f $S_j$ \u7684\u5b50\u4e32\uff0c\u4e14\u4e0d\u5b58\u5728\u4e00\u4e2a\u4e0d\u7b49\u4e8e $i$ \u548c $j$ \u7684 $k$ \uff0c\u6ee1\u8db3 $S_i$ \u662f $S_k$ \u7684\u5b50\u4e32\u4e14 $S_k$ \u662f $S_j$ \u7684\u5b50\u4e32\u3002\n\n> \u6570\u636e\u8303\u56f4\uff1a$n, \\sum |S|  \\le 10^6$\u3002\n\n\n## \u9898\u89e3\n\n\u6211\u8fd8\u662f\u5b66\u50bb\u4e86\u554a\uff0c\u7ecf\u8fc7\u795e sjy \u7684\u63d0\u9192\u624d\u53d1\u73b0\u5728\u8fd9\u513f $\\rm ACAM$ \u548c $\\rm SAM$ \u662f\u7b49\u4ef7\u7684\u3002\n\n-----\n\n\u8003\u8651\u679a\u4e3e\u957f\u7684\u5b57\u7b26\u4e32\uff0c\u77ed\u7684\u5b57\u7b26\u4e32\u5fc5\u7136\u5728\u957f\u7684\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u3002\n\n\u679a\u4e3e\u77ed\u4e32\u7684\u53f3\u7aef\u70b9\uff0c\u5bf9\u7b54\u6848\u6709\u8d21\u732e\u7684\u5b57\u7b26\u4e32\u4e00\u5b9a\u662f\u5de6\u7aef\u70b9\u6700\u9760\u5de6\u8fb9\u7684\u3002\n\n\u7136\u540e\u8fd8\u8981\u6c42\u6ca1\u6709\u5176\u4ed6\u7684\u5b57\u7b26\u4e32\u5305\u542b\u8fd9\u4e2a\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u7b80\u5355\u5730\u5224\u6389\u3002\n\n\u53ef\u4ee5\u7ed3\u5408\u8fd9\u5f20\u56fe\u7406\u89e3\n\n![qwqwq.png](https://i.loli.net/2021/03/22/xbpNK8yFoOketEI.png)\n\n\n\u4f46\u662f\u8fd9\u6837\u4f1a\u7b97\u91cd\uff0c\u5982\u4f55\u89e3\u51b3\uff1f\n\n\u53d1\u73b0\u53ea\u6709 ``\u7b97\u5230\u7684\u6b21\u6570 = \u5728\u957f\u4e32\u4e2d\u51fa\u73b0\u7684\u6b21\u6570`` \u7684\u60c5\u51b5\u5bf9\u7b54\u6848\u6709 $1$ \u7684\u8d21\u732e\u3002\n\n\u7b97\u5230\u7684\u6b21\u6570\u53ef\u4ee5\u8f7b\u677e\u7ef4\u62a4\uff0c\u5728\u957f\u4e32\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u53ef\u4ee5\u7528 \u6811\u72b6\u6570\u7ec4 + ``ACAM`` \u6765\u7ef4\u62a4\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u90fd\u662f $\\Theta((\\sum|S|) \\log (\\sum|S|))$\u3002\n\n## \u4ee3\u7801\n\n\u5177\u4f53\u7ec6\u8282\u89c1\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define L(i, j, k) for(int i = j, i##E = k; i <= i##E; i++)\n#define R(i, j, k) for(int i = j, i##E = k; i >= i##E; i--)\n#define ll long long\n#define pii pair<int, int>\n#define x first\n#define y second\n#define sz(a) ((int) (a).size())\nusing namespace std;\nconst int N = 1e6 + 7;\ntemplate<typename T> inline void cmax(T &x, T y) { if(x < y) x = y; }\ntemplate<typename T> inline void cmin(T &x, T y) { if(y < x) x = y; }\nusing namespace std;\nint ns, cnt[N], tot, fa[N];\nvector< int > change[N], e[N], qet[N];\nint ch[N][26], sz[N];\nvoid ad(int x, int y) { \n\tfor(; x <= tot + 1; x += (x & -x)) sz[x] += y;\n}\nint query(int x) {\n\tint res = 0;\n\tfor(; x; x -= (x & -x)) res += sz[x];\n\treturn res;\n}\nint qry(int l, int r) {\n\treturn query(r) - query(l - 1); \n}\nint n, m, siz[N], hv[N], St[N], En[N], idtot, mx[N], sx[N], lef[N], sG[N];\nvoid dfs(int x) {\n\tSt[x] = ++idtot;\n\tfor(int v : e[x]) {\n\t\tif(!sx[v]) sx[v] = sx[x];\n\t\tmx[v] = max(mx[v], mx[x]), dfs(v);\n\t}\n\tEn[x] = idtot;\n}\nvoid ins(string s) {\n\tint now = 0;\n\tL(i, 0, sz(s) - 1) {\n\t\tif(!ch[now][s[i] - 'a']) ch[now][s[i] - 'a'] = ++tot;\n\t\tnow = ch[now][s[i] - 'a'];\n\t}\n}\nvoid build() {\n\tqueue<int> q;\n\tL(i, 0, 25) if(ch[0][i]) q.push(ch[0][i]);\n\twhile(!q.empty()) {\n\t\tint u = q.front();\n\t\tq.pop();\n\t\tL(i, 0, 25) \n\t\t\tif(ch[u][i]) fa[ch[u][i]] = ch[fa[u]][i], q.push(ch[u][i]);\n\t\t\telse ch[u][i] = ch[fa[u]][i];\n\t}\n}\nstring s[N];\nint main() {\n\tios::sync_with_stdio(false);\n\tcin.tie(0); cout.tie(0);\n\tcin >> n;\n\tL(i, 1, n) cin >> s[i], ins(s[i]);\n\tL(i, 1, n) {\n\t\tint now = 0;\n\t\tL(j, 0, sz(s[i]) - 1) now = ch[now][s[i][j] - 'a'], change[now].push_back(i);\n\t\tcmax(mx[now], sz(s[i])), sx[now] = now;\n\t} \n\tbuild();\n\tL(i, 1, tot) e[fa[i]].push_back(i);\n\tdfs(0);\n\tL(i, 1, n) {\n\t\tL(j, 1, sz(s[i])) qet[j].clear();\n\t\tint now = 0;\n\t\tL(j, 0, sz(s[i]) - 1) {\n\t\t\tnow = ch[now][s[i][j] - 'a'], ad(St[now], 1);\n\t\t\tif(j == sz(s[i]) - 1) now = fa[now];\n\t\t\tlef[j] = j - mx[now] + 1, sG[j] = sx[now];\n\t\t}\n\t\tlef[sz(s[i])] = 1e9;\n\t\tR(j, sz(s[i]) - 1, 0) {\n\t\t\tif(lef[j] <= j && lef[j] < lef[j + 1]) qet[j - lef[j] + 1].push_back(sG[j]);\n\t\t\tlef[j] = min(lef[j], lef[j + 1]);\n\t\t}\n\t\tL(j, 1, sz(s[i])) {\n\t\t\tfor(int x : qet[j]) cnt[x] ++;\n\t\t\tfor(int x : qet[j]) if(cnt[x]) ns += (qry(St[x], En[x]) == cnt[x]), \n\t\t\tcnt[x] = 0;\n\t\t}\n\t\tnow = 0;\n\t\tL(j, 0, sz(s[i]) - 1) now = ch[now][s[i][j] - 'a'], ad(St[now], -1);\n\t}\n\tcout << ns << \"\\n\";\n\treturn 0;\n}\n```\n\n**\u795d\u5927\u5bb6\u5b66\u4e60\u6109\u5feb\uff01**",
        "postTime": 1616379157,
        "uid": 173660,
        "name": "zhoukangyang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3-CF1483F Exam"
    },
    {
        "content": "Upd on 2022.4.10\uff1a\u91cd\u5199\u9898\u89e3\uff0c\u539f\u9898\u89e3\u89c1 [\u526a\u8d34\u677f](https://www.luogu.com.cn/paste/qco1evpu)\u3002\n\n> *XV. [CF1483F Exam](https://www.luogu.com.cn/problem/CF1483F)\n>\n> [AC \u81ea\u52a8\u673a](https://www.cnblogs.com/alex-wei/p/Common_String_Theory_Theory_automaton_related.html#5020717)\u3002\n\n\u4e00\u9053\u975e\u5e38\u597d\u7684 AC \u81ea\u52a8\u673a\u9898\u76ee\u3002\n\n\u5173\u952e\u6027\u8d28\uff1a\u5bf9\u4e8e $s_i$ \u800c\u8a00\uff0c\u4f7f\u5f97 $(i, j)$ \u6ee1\u8db3\u6761\u4ef6\u7684 $j$ \u7684\u4e2a\u6570\u4e0d\u8d85\u8fc7 $|s_i|$\u3002\u56e0\u4e3a\u5bf9\u4e8e\u4e24\u4e2a\u4e0d\u540c\u7684\u7b26\u5408\u8981\u6c42\u7684 $j_1, j_2$\uff0c\u5b83\u4eec\u5728 $s_i$ \u5f53\u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e\u5fc5\u7136\u4e0d\u540c\uff0c\u5426\u5219\u8f83\u77ed\u7684\u4e32\u4e00\u5b9a\u662f\u8f83\u957f\u7684\u4e32\u7684\u5b50\u4e32\uff0c\u77db\u76fe\u3002\n\n\u8be5\u6027\u8d28\u7ed9\u4e88\u6211\u4eec\u4e00\u4e2a\u521d\u6b65\u60f3\u6cd5\uff1a\u679a\u4e3e\u8f83\u957f\u4e32 $i$\uff0c\u8003\u8651\u6709\u591a\u5c11\u8f83\u77ed\u4e32 $j$ \u5408\u6cd5\u3002\u53ef\u80fd\u5408\u6cd5\u7684 $j$ \u9700\u6ee1\u8db3 $s_j$ \u4f5c\u4e3a $s_i$ \u67d0\u4e2a\u524d\u7f00\u7684\u6700\u957f\u7684\u540e\u7f00\u51fa\u73b0\uff08\u5426\u5219\u663e\u7136\u4e0d\u6ee1\u8db3\u9650\u5236\uff09\uff0c\u8bb0 $S$ \u4e3a\u6240\u6709\u8fd9\u6837\u7684 $j$ \u7684\u96c6\u5408\u3002\u8fd9\u90e8\u5206\u7528 $s_i$ \u5728 ACAM \u4e0a\u8dd1\uff0c\u6bcf\u4e2a\u7ecf\u8fc7\u7684\u72b6\u6001 $s_i[1, p]$ \u5728 fail \u6811\u4e0a\u6700\u6df1\u7684\u4ee3\u8868\u5355\u8bcd\u7684\u7956\u5148\u5bf9\u5e94 $s_i[1, p]$ \u6700\u957f\u7684\u8868\u793a\u67d0\u4e2a\u5355\u8bcd $s_j$ \u7684\u540e\u7f00\uff0c\u8bb0\u4e3a $t_{i, p}$\u3002\u6ce8\u610f $t_{i, p}$ \u53ef\u80fd\u4e0d\u5b58\u5728\u3002\n\n- \u6ce8\u610f\uff0c\u5f53 $p = |s_i|$ \u65f6\uff0c\u8981\u4ece $s_i[1, p]$ \u5bf9\u5e94\u7684\u72b6\u6001\u7684\u7236\u4eb2\u627e\uff0c\u5426\u5219\u627e\u5230\u7684\u5c31\u662f $s_i$ \u672c\u8eab\u3002\n\n\u521d\u6b65\u7b5b\u9009\u4e4b\u540e\u8fd8\u9700\u6ee1\u8db3\u6bcf\u4e2a $s_j$ \u4e0d\u88ab\u5176\u5b83 $s_k$ \u6240\u5305\u542b\uff0c\u56e0\u4e3a\u5c3d\u7ba1 $s_j$ \u4f5c\u4e3a $s_i$ \u67d0\u4e2a\u524d\u7f00\u7684\u6700\u957f\u540e\u7f00\u51fa\u73b0\uff0c\u4f46\u5b83\u5728\u522b\u7684\u51fa\u73b0\u5730\u65b9\u53ef\u80fd\u88ab $s_k$ \u6240\u8986\u76d6\u3002\u663e\u7136\u82e5 $s_j$ \u88ab\u8986\u76d6\uff0c\u5219\u4e00\u5b9a\u88ab\u67d0\u4e2a $k\\in S$ \u7684 $s_k$ \u8986\u76d6\uff0c\u56e0\u6b64\u53ea\u8981\u8003\u8651 $S$ \u91cc\u9762\u7684\u5355\u8bcd\uff08\u6027\u8d28 2\uff09\u3002\n\n\u6c42\u51fa\u6bcf\u4e2a $s_k$ \u8986\u76d6\u4e86\u54ea\u4e9b $s_j(j\\neq k\\land j, k\\in S)$ \u662f\u56f0\u96be\u7684\uff0c\u8003\u8651\u8fd9\u6837\u4e00\u4e2a\u7b49\u4ef7\u547d\u9898\uff1a$(j, i)$ \u5408\u6cd5\u7684\u5145\u8981\u6761\u4ef6\u662f $s_j$ \u5728 $s_i$ \u4e2d\u7684\u51fa\u73b0\u6b21\u6570 $f(j, i)$ \u7b49\u4e8e $s_j$ \u5728 $s_i$ \u4e2d **\u4e0d\u88ab\u5176\u5b83\u5355\u8bcd\u6240\u8986\u76d6** \u7684\u51fa\u73b0\u6b21\u6570 $g(j, i)$\uff0c\u4e14\u51fa\u73b0\u6b21\u6570\u5927\u4e8e $0$\u3002\u7b2c\u4e8c\u6761\u9650\u5236\u5df2\u7ecf\u901a\u8fc7\u521d\u6b65\u7b5b\u9009\u6ee1\u8db3\u4e86\uff0c\u8003\u8651\u5982\u4f55\u6ee1\u8db3\u7b2c\u4e00\u4e2a\u9650\u5236\u3002\n\n\u8003\u8651\u5982\u4f55\u6c42 $f(j, i)$\uff1a\u8fd9\u662f ACAM \u7684\u57fa\u672c\u64cd\u4f5c\u3002\u53ea\u9700\u67e5\u8be2\u6709\u591a\u5c11\u4e2a $s_i[1, p]$ \u7684\u524d\u7f00\u4f7f\u5f97\u5b83\u5bf9\u5e94\u7684\u72b6\u6001\u5728 \u201c$s_j$ \u5bf9\u5e94\u7684\u72b6\u6001\u5728 fail \u6811\u4e0a\u7684\u5b50\u6811\u201d \u5185\u3002dfs \u5e8f\u62cd\u5e73\u7528 BIT \u7ef4\u62a4\u5373\u53ef\u3002\n\n\u8003\u8651\u5982\u4f55\u6c42 $g(j, i)$\uff1a\u6211\u4eec\u5c1d\u8bd5\u6c42\u51fa\u6bcf\u6b21\u4e0d\u88ab\u5176\u5b83\u5355\u8bcd\u8986\u76d6\u7684\u51fa\u73b0\u3002\u6839\u636e\u6027\u8d28 2\uff0c\u53ea\u9700\u8003\u8651 $s_i$ \u5f53\u4e2d\u6bcf\u4e2a\u4f4d\u7f6e $p$ \u5bf9\u5e94\u7684\u6700\u957f\u7684\u5339\u914d\u67d0\u4e2a\u5355\u8bcd\u7684\u540e\u7f00 $[p - |t_{i, p}| + 1, p]$\uff0c\u5c06\u8fd9\u4e9b\u533a\u95f4\u6309\u7167\u67d0\u4e2a\u7aef\u70b9\u6392\u5e8f\u7136\u540e\u626b\u4e00\u904d\u5373\u53ef\u3002\u5177\u4f53\u5730\uff0c\u4ece\u540e\u5f80\u524d\u679a\u4e3e\u4f4d\u7f6e $p$\u3002\u82e5 $t_{i, p}$ \u5b58\u5728\u4e14 $p - |t_{i, p}| + 1 < pre$\uff0c\u5219\u5c06 $pre$ \u66f4\u65b0\u4e3a $p - |t_{i, p}| + 1$\uff0c\u5e76\u4e14 $t_{i, p}$ \u5bf9\u5e94\u7684\u5355\u8bcd\u5728 $s_i$ \u4e2d\u4e0d\u88ab\u8986\u76d6\u5730\u51fa\u73b0\u4e86\u4e00\u6b21\u3002\n\n\u5982\u679c\u4f60\u6ca1\u770b\u61c2\uff0c\u4e5f\u53ef\u4ee5\u70b9\u51fb\u6700\u4e0a\u65b9\u7684\u94fe\u63a5\u9605\u8bfb\u6211\u4ee5\u524d\u5199\u7684\u4e0d\u4e25\u8c28\u7684\u9898\u89e3\u3002\n\n\u8bbe $L = \\sum s_i$\uff0c\u5219\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(L\\log L)$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e6 + 5;\nconst int S = 26;\nstring s[N];\nint n, ans, buc[N];\nint dn, dfn[N], sz[N];\nvector <int> e[N], cov;\nint node, fa[N], ed[N], ep[N], son[N][S];\nvoid ins(int id) {\n\tint p = 0;\n\tfor(char it : s[id]) {\n\t\tif(!son[p][it - 'a']) son[p][it - 'a'] = ++node;\n\t\tp = son[p][it - 'a'];\n\t}\n\ted[p] = id, ep[id] = p;\n}\nvoid build() {\n\tqueue <int> q;\n\tfor(int i = 0; i < S; i++) if(son[0][i]) q.push(son[0][i]);\n\twhile(!q.empty()) {\n\t\tint t = q.front();\n\t\tq.pop(), e[fa[t]].push_back(t), ed[t] = ed[t] ? ed[t] : ed[fa[t]];\n\t\tfor(int i = 0; i < S; i++)\n\t\t\tif(son[t][i]) fa[son[t][i]] = son[fa[t]][i], q.push(son[t][i]);\n\t\t\telse son[t][i] = son[fa[t]][i];\n\t}\n}\nvoid dfs(int id) {\n\tdfn[id] = ++dn, sz[id] = 1;\n\tfor(int it : e[id]) dfs(it), sz[id] += sz[it];\n}\nstruct BIT {\n\tint c[N];\n\tvoid add(int x, int v) {while(x <= dn) c[x] += v, x += x & -x;}\n\tint query(int x) {int s = 0; while(x) s += c[x], x -= x & -x; return s;}\n\tint query(int l, int r) {return query(r) - query(l - 1);}\n} tr;\nint main() {\n\tcin >> n;\n\tfor(int i = 1; i <= n; i++) cin >> s[i], ins(i);\n\tbuild(), dfs(0);\n\tfor(int i = 1; i <= n; i++) {\n\t\tstatic int pa[N], p;\n\t\tp = 0, cov.clear();\n\t\tfor(int j = 0; j < s[i].size(); j++) pa[j] = p = son[p][s[i][j] - 'a'], tr.add(dfn[pa[j]], 1);\n\t\tfor(int j = s[i].size() - 1, lbound = N; ~j; j--) {\n\t\t\tint id = ed[j == s[i].size() - 1 ? fa[pa[j]] : pa[j]];\n\t\t\tif(id && j - (int)s[id].size() < lbound) lbound = j - s[id].size(), buc[id]++, cov.push_back(id);\n\t\t}\n\t\tfor(int it : cov) if(buc[it]) ans += tr.query(dfn[ep[it]], dfn[ep[it]] + sz[ep[it]] - 1) == buc[it], buc[it] = 0;\n\t\tfor(int j = 0; j < s[i].size(); j++) tr.add(dfn[pa[j]], -1); // ADD THIS LINE\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}\n```",
        "postTime": 1616598324,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "CF1483F Exam"
    },
    {
        "content": "### Description\n\n\u7ed9\u5b9a $n$ \u4e2a\u5b57\u7b26\u4e32 $s_1, s_2, \\cdots, s_n$\uff0c\u4e92\u4e0d\u76f8\u540c\u3002\u6c42\u65e0\u5e8f\u5bf9 $(i,j)$ \u7684\u4e2a\u6570\uff0c\u6ee1\u8db3\uff1a\n\n- $i\\ne j$\uff1b\n- $s_j$ \u662f $s_i$ \u7684\u5b50\u4e32\uff1b\n- \u4e0d\u5b58\u5728\u4e00\u4e2a $k$\uff08$k\\ne i$ \u4e14 $k\\ne j$\uff09\uff0c\u4f7f\u5f97 $s_j$ \u662f $s_k$ \u7684\u5b50\u4e32\u4e14 $s_k$ \u53c8\u662f $s_i$ \u7684\u5b50\u4e32\u3002\n\n### Hint\n\n$1\\le n\\le 10^6, 1\\le \\sum_{i=1}^n |s_i| \\le 10^6$\u3002\n\n### Solution\n\n\u60f3\u590d\u6742\u4e86\uff0c\u5b9e\u9645\u4e0a\u662f\u9053\u5e76\u6ca1\u6709\u591a\u96be\u7684\u9898\u3002\n\n\u5148\u8003\u8651\u6ca1\u6709\u7b2c\u4e09\u6761\u9650\u5236\u7684\u60c5\u51b5\u3002\u8fd9\u4e2a\u6bd4\u8f83\u7b80\u5355\uff1a\u5148\u5bf9\u6240\u6709\u4e32\u5efa\u7acb AC \u81ea\u52a8\u673a\u5e76\u6574\u51fa fail \u6811\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u4e32\u5728\u81ea\u52a8\u673a\u4e0a\u8dd1\u4e00\u904d\uff0c\u6811\u72b6\u6570\u7ec4\u968f\u4fbf\u7ef4\u62a4\u4e00\u4e0b\u5c31\u884c\u3002\n\n\u7136\u540e\u601d\u8003\u7b2c\u4e09\u6761\u9650\u5236\u5728\u4f55\u65f6\u4f1a\u8d77\u4f5c\u7528\u3002\u5bf9\u4e8e\u5f53\u524d\u4e32 $s_i$\uff0c\u8003\u8651\u5230\u4e00\u4e2a\u53ef\u4ee5\u4f5c\u4e3a\u5176\u5b50\u4e32\u7684 $s_j$ \u65f6\uff0c\u5047\u5982\u5b58\u5728\u4e00\u4e2a $s_k$ \u4f7f\u5f97 $s_k$ \u5728 $s_i$ \u4e0a\u8986\u76d6\u5230\u7684\u533a\u95f4\u5c06 $s_j$ \u5b8c\u5168\u5305\u542b\uff0c\u90a3\u4e48 $s_j\\leftrightarrow s_i$ \u4e4b\u95f4\u7684\u8d21\u732e\u5c31\u4e0d\u80fd\u88ab\u8bb0\u5165\u7b54\u6848\u3002\u5e76\u4e14\u5728\u6240\u6709\u51fa\u73b0\u7684\u4f4d\u7f6e\u4e2d\uff0c\u6709\u4e00\u4e2a\u5b58\u5728\u8fd9\u6837\u7684\u60c5\u51b5\u5c31\u4e0d\u884c\u3002\u5982\u679c\u6ca1\u6709\u51fa\u73b0\uff0c\u5e76\u4e0d\u4ee3\u8868 $s_j$ \u5c31\u4e00\u5b9a\u4e0d\u662f $s_k$ \u7684\u5b50\u4e32\uff0c\u4ec5\u4ec5\u662f\u5728 $s_i$ \u4e2d\u6ca1\u6709\u4f53\u73b0\u800c\u5df2\u3002\u4f46\u8fd9\u6837\u5728 $s_j\\leftrightarrow s_i$ \u6ca1\u6709\u4f53\u73b0\uff0c\u90a3\u4e48\u5c31\u4e0d\u4f1a\u50cf\u7b2c\u4e09\u6761\u9650\u5236\u90a3\u6837\u5939\u5728\u4e2d\u95f4\u3002\n\n\u9996\u5148\u5bf9\u4e8e fail \u6811\u4e2d\u7684\u6bcf\u4e2a\u7ed3\u70b9\uff0c\u591a\u7ef4\u62a4\u4e00\u4e2a ```trans[x]```\uff0c\u8868\u793a $x$ \u6700\u8fd1\u7684\u53ef\u4ee5\u8868\u793a\u4e00\u4e2a\u6574\u4e32\u7684\u5bf9\u5e94\u5b57\u7b26\u4e32\u7684\u7f16\u53f7\u3002\u7531\u4e8e\u8df3 fail \u94fe\u5c31\u662f\u627e\u6700\u957f\u771f\u540e\u7f00\uff0c\u518d\u627e\u4e0b\u53bb\u4e00\u5b9a\u4e0d\u7b26\u5408\u9650\u5236 3\u3002\n\n\u90a3\u4e48\u679a\u4e3e $s_i$ \u7684\u524d\u7f00\uff0c\u4ece\u957f\u5230\u77ed\uff0c\u7136\u540e\u7ef4\u62a4\u4e00\u4e2a\u5b57\u6bb5 ```min_sp``` \u8868\u793a\u5148\u524d\u5339\u914d\u5230\u7684\u5b57\u7b26\u4e32\u4e2d\uff0c\u5de6\u7aef\u70b9\u6700\u9760\u5de6\u7684\u5de6\u7aef\u70b9\u3002\u8fd9\u65f6\u201c\u5305\u542b\u201d\u5373\u4e3a\uff0c\u5f53\u524d\u524d\u7f00\u7684\u6700\u957f\u5339\u914d\u5230\u5176\u4ed6\u4e32\u7684\u540e\u7f00\uff0c\u5bf9\u5e94\u7684\u8d77\u59cb\u70b9\u53cd\u800c\u5728\u66f4\u540e\u4fa7\u7684\u524d\u7f00\u5339\u914d\u5230\u7684 ```min_sp``` \u7684\u540e\u9762\u3002\n\n![](https://z3.ax1x.com/2021/03/23/6TLCK1.png)\n\n\u518d\u7ef4\u62a4\u4e00\u4e2a\u8ba1\u6570\u5668 ```cnt[]```\uff0c\u4ec5\u5f53\u5339\u914d\u5230\u7684\u5de6\u7aef\u70b9 ```< min_sp``` \u65f6\u66f4\u65b0\u3002\u5df2\u7ecf\u5f88\u663e\u7136\u4e86\uff1a\u53ea\u6709\u8ba1\u6570\u5668 ```cnt``` \u7684\u503c\u6070\u597d\u7b49\u4e8e\u5176\u5728 $s_i$ \u4e2d\u7684\u51fa\u73b0\u6b21\u6570\u65f6\u7b54\u6848 +1\u3002\u51fa\u73b0\u6b21\u6570\u53ef\u4ee5\u7528\u5e38\u89c4\u7684 dfs \u5e8f + \u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n### Code\n\n\u6c42\u8d5e /kel\n\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <string>\n#include <vector>\n#include <queue>\n\nconst int N = 1e6 + 5;\nconst int S = 26;\n\nint n, ac_loc[N];\nstd::string s[N];\n\nint ch[N][S], total = 1;\nint fail[N], end_of[N];\n\nint insert(const std::string& s) {\n  int x = 1;\n  for (auto c : s) {\n    if (!ch[x][c - 'a']) ch[x][c - 'a'] = ++total;\n    x = ch[x][c - 'a'];\n  }\n  return x;\n}\n\nstd::vector<int> adj[N];\nint idfn[N], odfn[N], timer = 0;\nint trans[N];\n\nvoid dfs(int x, int f) {\n  trans[x] = end_of[x] ? end_of[x] : trans[f];\n  idfn[x] = ++timer;\n  for (auto y : adj[x]) dfs(y, x);\n  odfn[x] = timer;\n}\n\nvoid build() {\n  std::queue<int> que;\n  std::fill(ch[0], ch[0] + S, 1);\n  que.push(1);\n  while (!que.empty()) {\n    int x = que.front(); que.pop();\n    for (int i = 0; i < S; i++)\n      if (!ch[x][i]) ch[x][i] = ch[fail[x]][i];\n      else que.push(ch[x][i]), fail[ch[x][i]] = ch[fail[x]][i];\n  }\n\n  for (int i = 2; i <= total; i++)\n    adj[fail[i]].push_back(i);\n  dfs(1, 0);\n}\n\nstruct {\n  int tr[N];\n  void add(int x, int v) {\n    for (; x <= timer; x += x & -x) tr[x] += v;\n  }\n  int get(int x) {\n    int ret = 0;\n    for (; x; x -= x & -x) ret += tr[x];\n    return ret;\n  }\n  int calc(int l, int r) {\n    return get(r) - get(l - 1);\n  }\n} fenwick;\n\nint cnt[N];\nbool vis[N];\nint ans = 0;\n\nsigned main() {\n  std::cin >> n;\n  for (int i = 1; i <= n; i++) {\n    std::cin >> s[i];\n    end_of[ac_loc[i] = insert(s[i])] = i;\n  }\n  build();\n\n  std::fill(fenwick.tr + 1, fenwick.tr + 1 + timer, 0);\n  for (int i = 1; i <= n; i++) {\n    std::vector<int> left;\n    int x = 1;\n\n    for (auto c : s[i]) {\n      x = ch[x][c - 'a'];\n      fenwick.add(idfn[x], 1);\n      left.push_back(trans[x]);\n    }\n    left.back() = trans[fail[x]];\n\n    int min_sp = (int)s[i].size();\n    for (int j = (int)s[i].size() - 1; j >= 0; j--) if (left[j]) {\n      int sp = j - (int)s[left[j]].size() + 1;\n      if (min_sp <= sp) continue;\n      min_sp = sp, ++cnt[left[j]];\n    }\n\n    for (auto id : left) if (id && !vis[id]) {\n      vis[id] = true;\n      if (cnt[id] == fenwick.calc(idfn[ac_loc[id]], odfn[ac_loc[id]]))\n        ++ans;\n    }\n\n    for (auto id : left) if (id)\n      cnt[id] = 0, vis[id] = false;\n    x = 1;\n    for (auto c : s[i]) {\n      x = ch[x][c - 'a'];\n      fenwick.add(idfn[x], -1);\n    }\n  }\n\n  std::cout << ans << std::endl;\n  return 0;\n}\n```\n\n",
        "postTime": 1616474951,
        "uid": 61430,
        "name": "_Wallace_",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF1482H \u3010Exam\u3011"
    },
    {
        "content": "- [CF1483F Exam](https://www.luogu.com.cn/problem/CF1483F)\n\n---\n\n\u601d\u8def\u662f\u679a\u4e3e\u6bcf\u4e00\u4e2a\u4e32\u4f5c\u4e3a\u6700\u957f\u4e32\uff0c\u7136\u540e\u679a\u4e3e\u4e00\u4e2a\u7aef\u70b9\u4f5c\u4e3a\u77ed\u4e32\u53f3\u7aef\u70b9\uff0c\u627e\u51fa\u4e00\u4e2a\u6700\u957f\u7684\u8bb0\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u4e0a\u3002\n\n\u8fd8\u8981\u6254\u6389\u4e00\u4e9b\u88ab\u66f4\u5927\u7684\u4e32\u5305\u542b\u7684\u77ed\u4e32\uff0c\u5982\u4e0b\u56fe\u53ea\u4f1a\u4fdd\u7559\u7ea2\u8272\u4e0e\u6a59\u8272\u7684\u4e32\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/9sb19g1h.png)\n\n\u5982\u679c\u4e00\u4e2a\u4e32 **\u51fa\u73b0\u6b21\u6570 = \u88ab\u4fdd\u7559\u7684\u6b21\u6570** \uff0c\u5219\u7b54\u6848\u8981\u52a0\u4e00\u3002\n\n---\n\n\u7531\u4e8e\u8981\u6c42\u7684\u662f\u957f\u4e32\u4e2d\u4e00\u4e2a\u524d\u7f00\u7684\u67d0\u4e2a\u540e\u7f00\uff0c\u56e0\u6b64\u60f3\u5230\u540e\u7f00\u6570\u636e\u7ed3\u6784\u3002\n\n\u8003\u8651\u5bf9\u6240\u6709\u4e32\u5efa\u51fa AC \u81ea\u52a8\u673a\u3002\n\n\u8ba1\u7b97\u82e5\u5e72\u4e2a\u4e32\u5728\u957f\u4e32\u4e2d\u7684\u51fa\u73b0\u6b21\u6570\u5f88\u7b80\u5355\uff0c\u5728 fail \u6811\u4e0a dfs \u5e8f\u5efa\u6811\u72b6\u6570\u7ec4\u67e5\u8be2\u5373\u53ef\u3002\n\n\u8fd8\u8981\u5bf9\u4e8e\u957f\u4e32\u6bcf\u4e2a\u7684\u70b9\uff0c\u627e\u51fa\u8fd9\u4e2a\u70b9\u4e3a\u53f3\u7aef\u70b9\u7684\u6700\u957f\u77ed\u4e32\u3002\n\n\u4e8e\u662f\u628a\u6bcf\u4e2a\u4e32\u5728 AC \u81ea\u52a8\u673a\u4e0a\u5bf9\u5e94\u7684\u7ed3\u675f\u70b9\u6807\u8bb0\u4e00\u4e0b id \uff0c\u7136\u540e\u5728 AC \u81ea\u52a8\u673a\u4e0a\u8dd1\u8fd9\u4e2a\u957f\u4e32\uff0c\u8dd1\u5230\u67d0\u4e2a\u70b9\u5c31\u662f**\u4ece\u8fd9\u4e2a\u70b9\u5f80 fail \u6811\u5411\u4e0a\u8dd1\uff0c\u5f97\u5230\u7684\u7b2c\u4e00\u4e2a\u6807\u4e86 id \u7684\u70b9**\u3002\u8fd9\u4e2a\u53ef\u4ee5\u9884\u5904\u7406\u4e00\u4e0b\u3002\n\n\u8bbe $S=\\sum |s_i|$ \uff0c\u8fd9\u6837\u505a\u65f6\u95f4 $O(S\\log S)$ \u4e0d\u77e5\u9053\u5361\u4e0d\u5361\u7a7a\u95f4..\n\n\u7136\u800c\u4ee3\u7801\u6bd4\u5199\u5e7f\u4e49 SAM \u8981\u9633\u95f4\u591a\u4e86\uff08\n\n---\n\nupd : \u4ee3\u7801\u3002\n\n\u6211\u679c\u7136\u7801\u529b\u4e0d\u592a\u591f\uff0c\u88ab\u795e $\\sf\\color{black}{z}\\color{red}{houkangyang}$ \u540a\u6253\u4e86/ll\n\n```cpp\n#include<bits/stdc++.h>\n#define For(i,a,b) for(register int i=(a);i<=(b);++i)\n#define Rep(i,a,b) for(register int i=(a);i>=(b);--i)\nusing namespace std;\ninline int read()\n{\n    char c=getchar();int x=0;bool f=0;\n    for(;!isdigit(c);c=getchar())f^=!(c^45);\n    for(;isdigit(c);c=getchar())x=(x<<1)+(x<<3)+(c^48);\n    if(f)x=-x;return x;\n}\n\n#define fi first\n#define se second\n#define pb push_back\n#define mkp make_pair\ntypedef pair<int,int>pii;\ntypedef vector<int>vi;\n\n#define maxn 1000005\nint n,m;\nint cnt=1,ch[maxn][26],fail[maxn],fa[maxn],id[maxn];\nint ed[maxn],len[maxn],pos[maxn];\nstring s[maxn];\nint ins(string s)\n{\n\tint u=1;\n\tfor(int i=0;i<s.size();++i){\n\t\tint c=s[i]-'a';\n\t\tif(!ch[u][c])ch[u][c]=++cnt,fa[cnt]=u;\n\t\tu=ch[u][c];\n\t}return u;\n}\nqueue<int>q;\nint up[maxn];\nvoid getfail()\n{\n\tFor(i,0,25)ch[0][i]=1;\n\tq.push(1);\n\twhile(!q.empty()) \n\t{\n\t\tint u=q.front();q.pop();\n\t\tFor(i,0,25)\n\t\t\tif(!ch[u][i])ch[u][i]=ch[fail[u]][i];\n\t\t\telse{\n\t\t\t\tq.push(ch[u][i]);\n\t\t\t\tfail[ch[u][i]]=ch[fail[u]][i];\n\t\t\t}\n\t}\n}\n\nvector<int>e[maxn];\nint dfn[maxn],out[maxn],idx;\nvoid dfs(int u){\n\tif(id[u]) up[u]=u;\n\tdfn[u]=++idx;\n\tfor(auto v:e[u])up[v]=up[u],dfs(v);\n\tout[u]=idx;\n}\n\nint tr[maxn];\ninline void del(int x){\n\tfor(;tr[x]&&x<=idx;x+=x&-x) tr[x]=0;\n}\ninline void add(int x,int y){\n\tfor(;x<=idx;x+=x&-x) tr[x]+=y;\n}\ninline int ask(int x){\n\tint res=0;\n\tfor(;x;x^=x&-x)res+=tr[x];\n\treturn res;\n}\nint L[maxn],sid[maxn],res;\nmap<int,int>mp;\n\nsigned main()\n{\n\tn=read();\n\tFor(i,1,n){\n\t\tcin>>s[i];\n\t\tint u=ins(s[i]);\n\t\tid[u]=i,pos[i]=u;\n\t}\n\t\n\tgetfail();\n\tFor(i,2,cnt)e[fail[i]].pb(i);\n\tdfs(1);\n\tFor(i,1,n)\n\t{\n\t\tmp.clear();\n\t\tint u=1;\n\t\tfor(int j=0;j<s[i].size();++j){\n\t\t\tu=ch[u][s[i][j]-'a'];\n\t\t\tadd(dfn[u],1);\n\t\t\tif(j==s[i].size()-1)u=fail[u];\n\t\t\tif(!id[up[u]]) L[j]=j+1,sid[j]=0;\n\t\t\telse L[j]=j-s[id[up[u]]].size()+1,sid[j]=id[up[u]];\n\t\t}\n\t\t\n\t\tint mn=2e9;\n\t\tRep(j,s[i].size()-1,0)\n\t\t{\n\t\t\tif(L[j]<=j && L[j]<mn) mp[sid[j]]++;\n\t\t\tmn=min(mn,L[j]);\n\t\t}\n\t\tfor(auto t:mp) {\n\t\t\tint p=pos[t.fi];\n\t\t\tif(ask(out[p])-ask(dfn[p]-1) == t.se) res++;\n\t\t}\n\t\t\n\t\tu=1;\n\t\tfor(int j=0;j<s[i].size();++j)\n\t\t\tu=ch[u][s[i][j]-'a'],del(dfn[u]);\n\t}\n\tcout<<res;\n    return 0;\n}\n```",
        "postTime": 1616416327,
        "uid": 151935,
        "name": "Rainbow_qwq",
        "ccfLevel": 0,
        "title": "zhoukangyang txdy! || solution CF1483F"
    },
    {
        "content": "\u53d1\u73b0\u9898\u89e3\u533a\u6ca1\u6709 SA \u505a\u6cd5\u4e8e\u662f\u6765\u53d1\u4e00\u7bc7\u3002\n\n\u6211\u4eec\u8003\u8651\u5927\u4e32\u5bf9\u5c0f\u4e32\u7684\u8d21\u732e\uff0c\u4ece\u5de6\u5f80\u53f3\u626b\uff0c\u62ff\u5f53\u524d\u626b\u5230\u7684\u70b9\u4f5c\u4e3a\u5de6\u7aef\u70b9\uff0c\u90a3\u4e48\u6700\u8fdc\u7684\u80fd\u4f5c\u4e3a\u5b50\u4e32\u7684\u53f3\u7aef\u70b9\u624d\u6709\u53ef\u80fd\u5bf9\u7b54\u6848\u6709\u8d21\u732e\u3002\n\n\u5e76\u4e14\u6211\u4eec\u53d1\u73b0\uff0c\u4f5c\u4e3a\u5b50\u4e32\u7684\u53f3\u7aef\u70b9\u5e94\u5f53\u662f\u9012\u589e\u7684\uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u5305\u542b\u5173\u7cfb\u3002\n\n\u90a3\u4e48\u4e00\u4e2a\u5c0f\u4e32\u5728\u5927\u4e32\u4e2d\u4f5c\u4e3a\u53f3\u7aef\u70b9\u7684\u6b21\u6570\u4e0e\u5728\u5927\u4e32\u4e2d\u51fa\u73b0\u6b21\u6570\u76f8\u7b49\u65f6\uff0c\u5c31\u5bf9\u7b54\u6848\u6709 1 \u7684\u8d21\u732e\u3002\n\n\u5230\u8fd9\u91cc\u5df2\u7ecf\u53ef\u4ee5\u505a\u51fa\u672c\u9898\u4e86\uff0c\u5927\u6982\u505a\u6cd5\u5c31\u662f\u5957\u8def\u5730\u628a\u6240\u6709\u4e32\u62fc\u5728\u4e00\u8d77\u8fdb\u884c\u540e\u7f00\u6392\u5e8f\uff0c\u4e8c\u5206\u51fa\u4e00\u4e2a\u4e32\u88ab\u5305\u542b\u7684\u540e\u7f00\u6392\u540d\u533a\u95f4\u8fdb\u884c\u533a\u95f4\u53d6\u6700\u5927\u503c\uff0c\u7136\u540e\u5bf9\u6bcf\u4e2a\u4e32\u8fdb\u884c\u4e00\u4e2a\u626b\uff0c\u7ef4\u62a4\u4e00\u4e2a\u53f3\u7aef\u70b9\u6307\u9488\u7edf\u8ba1\u8d21\u732e\u5373\u53ef\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n)$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u590d\u6742\u5ea6\u8fd8\u6709\u4f18\u5316\u7a7a\u95f4\uff0c\u4f7f\u7528 SA-IS \u7b97\u6cd5\u8fdb\u884c\u540e\u7f00\u6392\u5e8f\uff0c\u7136\u540e\u6876\u6392\u540e\u4f7f\u7528\u5e76\u67e5\u96c6\u6c42\u51fa\u4e00\u4e2a\u4e32\u88ab\u5305\u542b\u7684\u540e\u7f00\u6392\u540d\u533a\u95f4\u5e76\u533a\u95f4\u53d6\u6700\u5927\u503c\uff0c\u7136\u540e\u79bb\u7ebf\u5dee\u5206\u51fa\u9700\u8981\u7684\u5c0f\u4e32\u5728\u5927\u4e32\u4e2d\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u8fd9\u6837\u7684\u8bdd\u5982\u679c\u628a\u5e76\u67e5\u96c6\u590d\u6742\u5ea6\u89c6\u4f5c\u5e38\u6570\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u88ab\u4f18\u5316\u5230\u4e86 $O(n)$\u3002\n\n\u603b\u590d\u6742\u5ea6\u662f\u53ef\u4ee5\u505a\u5230\u7ebf\u6027\u7684\uff0c\u5c3d\u7ba1\u6beb\u65e0\u5b9e\u9645\u610f\u4e49\u3002\n\n\u4ee3\u7801\u662f\u7b2c\u4e00\u79cd\u505a\u6cd5\u3002~~\u611f\u89c9\u6bd4\u5176\u4ed6\u505a\u6cd5\u4ee3\u7801\u957f\u591a\u4e86\u3002~~\n### Code\n```cpp\n#include<vector>\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\nnamespace EMT{\n\ttypedef long long ll;typedef double db;\n\t#define pf printf\n\t#define F(i,a,b) for(int i=a;i<=b;i++)\n\t#define D(i,a,b) for(int i=a;i>=b;i--)\n\tinline int read(){int x=0,f=1;char ch=getchar();while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}while(ch>='0'&&ch<='9')x=x*10+ch-'0',ch=getchar();return x*f;}\n\tinline void file(){freopen(\"in.in\",\"r\",stdin);freopen(\"my.out\",\"w\",stdout);}\n\tinline int max(int a,int b){return a>b?a:b;}inline int min(int a,int b){return a<b?a:b;}\n\tinline void pi(int x){pf(\"%d \",x);}inline void pn(){pf(\"\\n\");}\n\tconst int N=2e6+10;\n\tint s[N],_='z',n,beg[N],fa[N],vl[N],vr[N],wl[N],wr[N],len,Len[N],fa2[N],val[N];char ss[N];\n\tnamespace SA{\n\t\tint b[N],sa[N],rk[N],height[N],Emilia[N],Arknights[N],n,m,num;\n\t\tinline void getsa(){\n\t\t\tint *x=Emilia,*y=Arknights;\n\t\t\tF(i,1,n)b[x[i]=s[i]]++;m=_;\n\t\t\tF(i,1,m)b[i]+=b[i-1];\n\t\t\tD(i,n,1)sa[b[x[i]]--]=i;\n\t\t\tfor(int k=1;k<=n;k<<=1){\n\t\t\t\tnum=0;\n\t\t\t\tF(i,n-k+1,n)y[++num]=i;\n\t\t\t\tF(i,1,n)if(sa[i]>k)y[++num]=sa[i]-k;\n\t\t\t\tmemset(b,0,sizeof(int)*(m+1));\n\t\t\t\tF(i,1,n)b[x[i]]++;\n\t\t\t\tF(i,1,m)b[i]+=b[i-1];\n\t\t\t\tD(i,n,1)sa[b[x[y[i]]]--]=y[i],y[i]=0;\n\t\t\t\tstd::swap(x,y);\n\t\t\t\tx[sa[num=1]]=1;\n\t\t\t\tF(i,2,n)x[sa[i]]=(y[sa[i]]==y[sa[i-1]]&&y[sa[i]+k]==y[sa[i-1]+k])?num:++num;\n\t\t\t\tif(n==num)break;\n\t\t\t\tm=num;\n\t\t\t}\n\t\t}\n\t\tinline void getheight(){\n\t\t\tint k=0;\n\t\t\tF(i,1,n)rk[sa[i]]=i;\n\t\t\tF(i,1,n)if(rk[i]>1){\n\t\t\t\tif(k)k--;int j=sa[rk[i]-1];\n\t\t\t\twhile(i+k<=n&&j+k<=n&&s[i+k]==s[j+k])k++;\n\t\t\t\theight[rk[i]]=k;\n\t\t\t}\n\t\t}\n\t\tinline void init(){\n\t\t\tgetsa(),getheight();\n\t\t\tF(i,1,n+1)fa[i]=fa2[i]=vl[i]=vr[i]=i;\n\t\t}\n\t}using SA::rk;using SA::height;\n\tinline int find(int x){return fa[x]==x?x:fa[x]=find(fa[x]);}\n\tinline void merge(int x,int y){\n\t\tx=find(x),y=find(y);\n\t\tvl[y]=min(vl[y],vl[x]),vr[y]=max(vr[y],vr[x]);\n\t\tfa[x]=y;\n\t}\n\tinline int find2(int x){return fa2[x]==x?x:fa2[x]=find2(fa2[x]);}\n\tstd::vector<int>in[N];\n\tinline int ask(int x,int y){return std::upper_bound(in[y].begin(),in[y].end(),wr[x])-std::lower_bound(in[y].begin(),in[y].end(),wl[x]);}\n\tint ans=0;\n\tinline void solve(int x){\n\t\tstatic int cnt[N];static bool vis[N];\n\t\tint now=0;\n\t\tF(i,beg[x],beg[x]+Len[x]-1){\n\t\t\tif(!val[rk[i]]||Len[val[rk[i]]]+i-1<=now)continue;\n\t\t\tnow=i+Len[val[rk[i]]]-1,cnt[val[rk[i]]]++;\n\t\t}now=0;\n\t\tF(i,beg[x],beg[x]+Len[x]-1){\n\t\t\tif(!val[rk[i]]||Len[val[rk[i]]]+i-1<=now)continue;\n\t\t\tnow=i+Len[val[rk[i]]]-1;\n\t\t\tif(!vis[val[rk[i]]]&&cnt[val[rk[i]]]==ask(val[rk[i]],x))ans++,vis[val[rk[i]]]=1;\n\t\t}now=0;\n\t\tF(i,beg[x],beg[x]+Len[x]-1){\n\t\t\tif(!val[rk[i]]||Len[val[rk[i]]]+i-1<=now)continue;\n\t\t\tnow=i+Len[val[rk[i]]]-1;\n\t\t\tcnt[val[rk[i]]]=vis[val[rk[i]]]=0;\n\t\t}\n\t}\n\tint Emilia[N],*b;\n\tinline short main(){\n\t\tn=read();int mx=0;\n\t\tF(i,1,n){\n\t\t\tscanf(\"%s\",ss+1);\n\t\t\tLen[i]=strlen(ss+1);\n\t\t\tbeg[i]=len+1;mx=max(mx,Len[i]);\n\t\t\tF(j,1,Len[i])s[++len]=ss[j];\n\t\t\ts[++len]=++_;\n\t\t}SA::n=len;SA::init();\n\t\tstatic int p1[N],p2[N];\n\t\tb=Emilia+1;\n\t\tF(i,2,len)b[height[i]]++;\n\t\tD(i,len,0)b[i]+=b[i+1];\n\t\tF(i,2,len)p1[b[height[i]]--]=i;\n\t\tmemset(b,0,sizeof(int)*(len+1));\n\t\tF(i,1,n)b[Len[i]]++;\n\t\tD(i,mx,1)b[i]+=b[i+1];\n\t\tF(i,1,n)p2[b[Len[i]]--]=i;\n\t\tF(i,1,n){\n\t\t\tF(j,beg[i],beg[i]+Len[i]-1)\n\t\t\t\tin[i].push_back(rk[j]);\n\t\t\tstd::sort(in[i].begin(),in[i].end());\n\t\t}\n\t\tint j=1;\n\t\tF(i,1,n){\n\t\t\tconst int v=p2[i];\n\t\t\twhile(j<len&&height[p1[j]]>=Len[v])merge(p1[j]-1,p1[j]),j++;\n\t\t\tconst int fa=find(rk[beg[v]]);\n\t\t\twl[v]=vl[fa],wr[v]=vr[fa];\n\t\t\tfor(int x=find2(vl[fa]);x<rk[beg[v]];x=find2(x)){\n\t\t\t\tval[x]=v;fa2[find2(x)]=find2(x+1);\n\t\t\t}\n\t\t\tfor(int x=find2(rk[beg[v]]+1);x<=vr[fa];x=find2(x)){\n\t\t\t\tval[x]=v,fa2[find2(x)]=find2(x+1);\n\t\t\t}\n\t\t}\n\t\tF(i,1,n)solve(i);\n\t\tpi(ans);\n\t\treturn 0;\n\t}\n}\nsigned main(){return EMT::main();}\n```",
        "postTime": 1653563781,
        "uid": 451066,
        "name": "letitdown",
        "ccfLevel": 9,
        "title": "CF1483F"
    },
    {
        "content": "[Codeforces \u9898\u76ee\u4f20\u9001\u95e8](https://codeforces.com/contest/1483/problem/F) & [\u6d1b\u8c37\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1483F)\n\n\u4e00\u9053 ACAM \u7684 hot tea\n\n\u9996\u5148\u5efa\u51fa ACAM\u3002\u8003\u8651\u679a\u4e3e\u957f\u4e32\uff0c\u4ee5\u53ca\u77ed\u4e32\u5728\u957f\u4e32\u4e2d\u51fa\u73b0\u7684**\u6700\u540e\u4f4d\u7f6e** $j$\uff0c\u8fd9\u4e2a\u590d\u6742\u5ea6\u663e\u7136\u662f $\\mathcal O(\\sum|s_i|)$ \u7684\u4e0d\u4f1a\u51fa\u95ee\u9898\u3002\u90a3\u4e48\u663e\u7136\u53ea\u6709\u4ee5 $s_{i,j}$ \u4e3a\u7ed3\u5c3e\u7684\u3001\u957f\u5ea6\u6700\u957f\u7684\u5b57\u7b26\u4e32\u624d\u6709\u53ef\u80fd\u88ab\u7edf\u8ba1\u8fdb\u7b54\u6848\uff0c\u5426\u5219\u5c31\u4e0d\u6ee1\u8db3\u9898\u76ee\u4e2d\u7684\u6761\u4ef6\u4e86\uff0c\u800c\u8fd9\u4e2a\u5b57\u7b26\u4e32\uff0c\u663e\u7136\u5c31\u662f $s_{i,j}$ \u5bf9\u5e94\u4f4d\u7f6e\u5728 `fail` \u6811\u4e0a\u5411\u4e0a\u8df3\u5f97\u5230\u7684\u7b2c\u4e00\u4e2a\u662f\u67d0\u4e2a\u5b57\u7b26\u4e32\u7ed3\u5c3e\u7684\u4f4d\u7f6e\u6240\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7\u5bf9 `fail` \u6811\u8fdb\u884c\u4e00\u904d DFS \u6c42\u51fa\u3002\n\n\u5176\u6b21\uff0c\u4ed4\u7ec6\u60f3\u60f3\u5c31\u4f1a\u53d1\u73b0\u8fd9\u4e9b\u5b57\u7b26\u4e32\u4e5f\u5e76\u4e0d\u662f\u6240\u6709\u90fd\u771f\u7684\u7b26\u5408\u6761\u4ef6\uff0c\u5982\u679c\u6211\u4eec\u628a\u8fd9\u4e00\u4e2a\u4e2a\u5b57\u7b26\u4e32\u770b\u4f5c\u4e00\u4e2a\u4e2a\u6846\uff0c\u90a3\u4e48\u5982\u679c\u4e00\u4e2a\u6846\u88ab\u53e6\u4e00\u4e2a\u6846\u5b8c\u5168\u5305\u542b\uff0c\u90a3\u663e\u7136\u4e5f\u662f\u4e0d\u5408\u6cd5\u7684\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7\u8bb0\u5f55\u4e2a\u5565\u6570\u7ec4\u7136\u540e\u7ebf\u6027\u626b\u4e00\u904d\u628a\u8fd9\u4e9b\u4e0d\u5408\u6cd5\u7684\u6392\u9664\u6389\u3002\u4f46\u662f\u518d\u5373\u4fbf\u662f\u6392\u9664\u6389\u8fd9\u4e9b\u4e0d\u5408\u6cd5\u7684\u5b57\u7b26\u4e32\u4e4b\u540e\u4e5f\u6709\u53ef\u80fd\u51fa\u73b0\u4e0d\u5408\u6cd5\uff0c\u6216\u8005\u540c\u4e00\u5b57\u7b26\u4e32\u88ab\u91cd\u590d\u7edf\u8ba1\u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u4e00\u4e2a\u672a\u88ab\u6392\u9664\u6389\u7684\u5b57\u7b26\u4e32 $s_i[l...r]$\uff0c\u6709\u53ef\u80fd\u5b58\u5728\u5b83\u7684\u53e6\u4e00\u4e2a\u51fa\u73b0\u4f4d\u7f6e $s_i[l'...r']$\uff0c\u6ee1\u8db3 $s_i[l'...r']$ \u4e0d\u662f\u4ee5 $s_{i,r'}$ \u7ed3\u5c3e\u7684\u957f\u5ea6\u6700\u957f\u7684\u7b26\u5408\u8981\u6c42\u7684\u5b57\u7b26\u4e32\uff0c\u6216\u8005\u662f\u4ee5 $s_{i,r'}$ \u7ed3\u5c3e\u7684\u957f\u5ea6\u6700\u957f\u7684\u7b26\u5408\u8981\u6c42\u7684\u5b57\u7b26\u4e32\u4f46\u88ab\u53e6\u5916\u4e00\u4e2a\u6846\u5b8c\u5168\u5305\u542b\u3002\u600e\u4e48 `check` \u8fd9\u6837\u7684\u60c5\u51b5\u5462\uff1f\u597d\u529e\uff0c\u62ff\u4e2a `map` \u8bb0\u5f55\u4e00\u4e0b\u6240\u6709\u5b57\u7b26\u4e32\u5728 $s_i$ \u4e2d\u88ab\u7edf\u8ba1\u7684\u6b21\u6570\uff0c\u7136\u540e\u5728 `map` \u91cc\u9762\u626b\u63cf\u4e00\u904d\u770b\u6240\u6709\u5b57\u7b26\u4e32 $s'$ \u5728 $s_i$ \u4e2d\u51fa\u73b0\u6b21\u6570\u662f\u5426\u7b49\u4e8e\u5176\u88ab\u7edf\u8ba1\u7684\u6b21\u6570\uff0c\u5982\u679c\u662f\u5219\u7b54\u6848\u52a0 $1$\uff0c\u5426\u5219\u8bf4\u660e $s'$ \u80af\u5b9a\u6709\u88ab\u6392\u9664\u6389\u7684\u60c5\u51b5\uff0c\u5c31\u4e0d\u80fd\u4ea7\u751f\u8d21\u732e\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $|S|\\log|S|$\u3002\n\n```cpp\nconst int MAXN=1e6; \nint n,ch[MAXN+5][28],ncnt=0,fail[MAXN+5],ed[MAXN+5],ps[MAXN+5];\nstring s[MAXN+5];\nvoid insert(string s,int id){\n\tint cur=0;\n\tfor(int i=0;i<s.size();i++){\n\t\tif(!ch[cur][s[i]-'a']) ch[cur][s[i]-'a']=++ncnt;\n\t\tcur=ch[cur][s[i]-'a'];\n\t} ed[id]=cur;ps[cur]=id;\n}\nint hd[MAXN+5],to[MAXN+5],nxt[MAXN+5],ec=0,bgt[MAXN+5],edt[MAXN+5],tim;\nvoid adde(int u,int v){to[++ec]=v;nxt[ec]=hd[u];hd[u]=ec;}\nvoid getfail(){\n\tqueue<int> q;\n\tfor(int i=0;i<26;i++) if(ch[0][i]) q.push(ch[0][i]);\n\twhile(!q.empty()){\n\t\tint x=q.front();q.pop();\n\t\tfor(int i=0;i<26;i++){\n\t\t\tif(ch[x][i]) fail[ch[x][i]]=ch[fail[x]][i],q.push(ch[x][i]);\n\t\t\telse ch[x][i]=ch[fail[x]][i];\n\t\t}\n\t}\n\tfor(int i=1;i<=ncnt;i++) adde(fail[i],i);\n}\n```\n\n",
        "postTime": 1624362529,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1483F Exam"
    }
]