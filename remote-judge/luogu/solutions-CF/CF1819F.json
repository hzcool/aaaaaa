[
    {
        "content": "### [CF1819F Willy-nilly, Crack, Into Release!](https://www.luogu.com.cn/problem/CF1819F)\n\n\u53d8\u6362\u89c4\u5219\u592a\u590d\u6742\u4e86\uff0c\u4f46\u662f\u6709\u4e00\u70b9\u5f88\u663e\u7136\uff1a\u82e5 $s$ \u7ecf\u8fc7\u4e00\u6b21\u53d8\u6362\u5f97\u5230 $t$\uff0c$t$ \u4e5f\u53ef\u4ee5\u7ecf\u8fc7\u4e00\u6b21\u53d8\u6362\u5f97\u5230 $s$\u3002\n\n\u8fd9\u542f\u53d1\u6211\u4eec\u628a\u6240\u6709\u5b57\u7b26\u4e32\u4ee5\u53ca\u5b83\u4eec\u4e4b\u95f4\u901a\u8fc7\u5355\u6b21\u53d8\u6362\u4e92\u76f8\u8f6c\u5316\u7684\u5173\u7cfb\u62bd\u8c61\u6210\u56fe\uff0c\u7136\u540e\u7814\u7a76\u56fe\u5177\u6709\u7684\u6027\u8d28\uff0c\u56e0\u4e3a\u5728\u56fe\u4e0a\u66f4\u5bb9\u6613\u770b\u51fa\u4e00\u4e9b\u4ec5\u901a\u8fc7\u5b57\u7b26\u4e32\u548c\u590d\u6742\u7684\u53d8\u6362\u96be\u4ee5\u53d1\u73b0\u7684\u6027\u8d28\u548c\u6a21\u5f0f\u3002\u4ece\u8fd9\u70b9\u6765\u770b\uff0c\u62bd\u8c61\u6210\u56fe\u53cd\u800c\u8ba9\u8fd9\u9053\u9898\u76ee\u66f4\u52a0\u5177\u8c61\uff0c\u800c\u601d\u8003\u95ee\u9898\u8d8a\u5177\u8c61\uff0c\u601d\u8def\u5c31\u8d8a\u6d41\u7545\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u4e3e\u4f8b\u5b50\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u8bf4\u660e\u65b9\u5f0f\u3002\n\n\u8a00\u5f52\u6b63\u4f20\u3002\u4ece\u5c0f\u89c4\u6a21\u7684\u56fe\u5165\u624b\uff0c\u56e0\u4e3a\u5927\u89c4\u6a21\u7684\u56fe\u5904\u7406\u8d77\u6765\u8f83\u590d\u6742\u3002\n\n\u5bf9\u4e8e $n = 1$\uff0c\u5f88\u663e\u7136\uff0c\u56fe\u662f\u4e00\u4e2a\u6b63\u65b9\u5f62\u3002\u4e0d\u59a8\u8ba4\u4e3a\u5de6\u4e0a\u89d2\u662f $a$\uff0c\u5de6\u4e0b\u89d2\u662f $b$\uff0c\u53f3\u4e0b\u89d2\u662f $c$\uff0c\u53f3\u4e0a\u89d2\u662f $d$\u3002\n\n\u5bf9\u4e8e $n = 2$\uff0c\u4e8b\u60c5\u53d8\u5f97\u6709\u8da3\u8d77\u6765\u4e86\u3002$a*, b*, c*, d*$ \u5206\u522b\u6784\u6210\u4e86 $n = 1$ \u7684\u6b63\u65b9\u5f62\uff0c\u4f46 $ab$ \u548c $ba$\uff0c$ad$ \u548c $da$\uff0c$bc$ \u548c $cb$\uff0c$cd$ \u548c $dc$ \u4e4b\u95f4\u4e5f\u6709\u8fde\u8fb9\u3002\u5c06 $a*$ \u4ee3\u8868\u7684\u6b63\u65b9\u5f62\u653e\u5728\u5de6\u4e0a\u89d2\uff0c$b*$ \u653e\u5728\u5de6\u4e0b\u89d2\uff0c$c*$ \u653e\u5728\u53f3\u4e0b\u89d2\uff0c$d*$ \u653e\u5728\u53f3\u4e0a\u89d2\uff0c\u90a3\u4e48\u6574\u4e2a\u7ed3\u6784\u5f62\u5982\u56db\u4e2a\u89d2\u90fd\u88ab\u6807\u4e0a\u76f4\u89d2\u7b26\u53f7\u7684\u6b63\u65b9\u5f62\u3002\n\n\u5bf9\u4e8e $n = 3$\uff0c\u6709\u4e86\u5148\u524d\u7684\u601d\u8003\uff0c\u6211\u4eec\u731c\u6d4b\u56fe\u5f20\u6210\u8fd9\u6837\uff1a\u5c06 $n = 2$ \u7684\u56db\u5f20\u56fe\u6309\u7167\u4e0a\u6587\u63d0\u5230\u8fc7\u7684\u987a\u5e8f\u6392\u5217\uff0c\u7136\u540e\u5728 $abb$ \u548c $baa$\uff0c$add$ \u548c $daa$\uff0c$bcc$ \u548c $cbb$\uff0c$bdd$ \u548c $dbb$ \u4e4b\u95f4\u8fde\u8fb9\uff0c\u5f62\u6210\u5206\u5f62\u7ed3\u6784\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/eapbhyip.png)\n\n\u8fd9\u5f20\u56fe\u4e5f\u5f88\u597d\u7406\u89e3\uff1a\u5982\u679c\u60f3\u8981\u6539\u53d8 $s_1$\uff0c\u90a3\u4e48 $s_2\\sim s_n$ \u5fc5\u987b\u76f8\u540c\u3002\n\n\u5230\u8fd9\u91cc\u601d\u8def\u5c31\u5f88\u6e05\u6670\u4e86\u3002\n\n\u6211\u4eec\u5efa\u51fa\u6240\u6709\u5b57\u7b26\u4e32\u7684\u5b57\u5178\u6811\uff0c\u6df1\u5ea6\u4e3a $i$ \u7684\u7ed3\u70b9\uff08\u6839\u8282\u70b9\u6df1\u5ea6\u4e3a $0$\uff09\u5bf9\u5e94\u5927\u5c0f\u4e3a $n - i$ \u7684\u5206\u578b\u7ed3\u6784\u3002\u4e00\u4e2a\u5206\u5f62\u7ed3\u6784\u5728\u6bd4\u5b83\u5927\u4e00\u7ea7\u7684\u7ed3\u6784\u4e2d\uff0c\u53ea\u6709\u56db\u4e2a\u7aef\u70b9\u662f\u6709\u7528\u7684\u3002\u56e0\u6b64\uff0c\u8bbe $f_{i, j, k}$ \u8868\u793a\u5728\u5b57\u5178\u6811\u7ed3\u70b9 $i$ \u5bf9\u5e94\u7684\u5206\u5f62\u7ed3\u6784\u4e2d\uff0c\u4ece\u5168\u662f $j$ \u7684\u5b57\u7b26\u4e32\u8d70\u5230\u5168\u662f $k$ \u7684\u5b57\u7b26\u4e32\u7684 **\u7ecf\u8fc7\u7ed3\u6784\u5185\u6240\u6709\u5173\u952e\u70b9** \u7684\u6700\u77ed\u8def\uff0c\u5373\u4efb\u610f\u4e24\u4e2a\u7aef\u70b9\u4e4b\u95f4\u7684\u5408\u6cd5\u6700\u77ed\u8def\u3002\u8bbe $g_{i, j, k}$ \u8868\u793a\u6700\u957f\u8def\u3002\n\n\u6839\u636e\u5b9e\u9645\u610f\u4e49\u8f6c\u79fb\u5373\u53ef\uff0c\u8981\u6c42\u6ca1\u6709\u88ab\u7ecf\u8fc7\u7684\u5b50\u7ed3\u6784\u5185\u6ca1\u6709\u5173\u952e\u70b9\u3002\n\n\u4f8b\u5982\uff0c\u8bbe $A, B, C, D$ \u5206\u522b\u8868\u793a\u5bf9\u5e94\u513f\u5b50\uff0c\u5219\uff1a\n\n- \u4ee4 $f_{i, a, b} = f_{A, a, d} + f_{D, a, c} + f_{C, b, d} + f_{B, b, c} + 3$\u3002\n- \u5982\u679c $C$ \u548c $D$ \u5185\u6ca1\u6709\u5173\u952e\u70b9\uff0c\u5219\u8fd8\u53ef\u4ee5\u7528 $f_{A, a, b} + f_{B, a, b} + 1$ \u66f4\u65b0 $f_{i, a, b}$\u3002\n\n\u518d\u8bb0 $F_i$ \u548c $G_i$ \u8868\u793a\u7ecf\u8fc7\u7ed3\u6784\u5185\u6240\u6709\u5173\u952e\u70b9\u7684\u73af\u3002\u5982\u679c\u6070\u597d\u4e00\u4e2a\u7ed3\u6784\u5185\u6709\u5173\u952e\u70b9\uff0c\u5219 $F, G$ \u53ef\u4ee5\u76f4\u63a5\u7ee7\u627f\u5bf9\u5e94\u7ed3\u6784\u7684 $F, G$\u3002\u8fd8\u53ef\u4ee5\u7528 $f_{A, b, d} + f_{D, a, c} + f_{C, b, d} + f_{B, a, c} + 4$ \u66f4\u65b0 $F$\uff0c$G$ \u540c\u7406\u3002\n\n\u5b9e\u73b0\u65f6\uff0c\u53ef\u4ee5\u5c06 $f, g$ \u7ed1\u5b9a\u5728\u4e00\u8d77\u51cf\u5c11\u8ba8\u8bba\u3002\n\n\u6ce8\u610f\u5f53 $|S| < 2$ \u65f6\u6700\u5c0f\u73af\u4e3a $2$\u3002\u5f53 $|S| = 2$\uff0c\u96c6\u5408\u5185\u4e24\u4e2a\u5b57\u7b26\u4e32\u76f8\u90bb\u65f6\u6700\u5c0f\u73af\u4e5f\u4e3a $2$\u3002\u4e3a\u6b64\uff0c\u7528 `set` \u7ef4\u62a4 $S$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(nq\\log q)$\uff0c\u505a\u5230 $\\mathcal{O}(nq)$ \u662f\u5e73\u51e1\u4f46\u4e0d\u5fc5\u8981\u7684\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\n\nbool Mbe;\nconstexpr int N = 1e5 + 5;\nconstexpr int K = N * 20;\n\nvoid cmin(ll &x, ll y) {\n  x = x < y ? x : y;\n}\nvoid cmax(ll &x, ll y) {\n  x = x > y ? x : y;\n}\nbool check(string x, string y) {\n  for(int i = 0; i < x.size(); i++) {\n    if(x[i] == y[i]) continue;\n    if(((x[i] - 1) ^ (y[i] - 1)) == 2) return 0;\n    for(int j = i + 1; j < x.size(); j++) {\n      if(x[j] != y[i] || y[j] != x[i]) return 0;\n    }\n    return 1;\n  }\n}\n\nint n, q, R;\nint nd, sn[K][4];\nstring st;\nstruct dt {\n  ll mn, mx;\n  dt operator + (const dt &z) const {\n    if(mn == -1 || z.mn == -1) return {-1, -1};\n    return {mn + z.mn, mx + z.mx};\n  }\n  dt operator + (const int &z) const {\n    if(mn == -1) return {-1, -1};\n    return {mn + z, mx + z};\n  }\n  dt operator * (const dt &z) const {\n    if(mn == -1) return z;\n    if(z.mn == -1) return *this;\n    return {min(mn, z.mn), max(mx, z.mx)};\n  }\n} e = {-1, -1};\nstruct dat {\n  int hv;\n  dt ab, ac, ad, bc, bd, cd, cyc;\n} val[K], sp[25];\n\ndat add(dat &a, dat &b, dat &c, dat &d) {\n  dat z = {0, e, e, e, e, e, e, e};\n  z.hv = a.hv | b.hv | c.hv | d.hv;\n  // ab\n  z.ab = a.ad + d.ac + c.bd + b.bc + 3;\n  if(!c.hv && !d.hv) z.ab = z.ab * (a.ab + b.ab + 1);\n  // ac\n  if(!b.hv) z.ac = z.ac * (a.ad + d.ac + c.cd + 2);\n  if(!d.hv) z.ac = z.ac * (a.ab + b.ac + c.bc + 2);\n  // ad\n  z.ad = a.ab + b.ac + c.bd + d.cd + 3;\n  if(!b.hv && !c.hv) z.ad = z.ad * (a.ad + d.ad + 1);\n  // bc\n  z.bc = b.ab + a.bd + d.ac + c.cd + 3;\n  if(!a.hv && !d.hv) z.bc = z.bc * (b.bc + c.bc + 1);\n  // bd\n  if(!a.hv) z.bd = z.bd * (b.bc + c.bd + d.cd + 2);\n  if(!c.hv) z.bd = z.bd * (b.ab + a.bd + d.ad + 2);\n  // cd\n  z.cd = c.bc + b.ac + a.bd + d.ad + 3;\n  if(!a.hv && !b.hv) z.cd = z.cd * (c.cd + d.cd + 1);\n  // cyc\n  int cnt = a.hv + b.hv + c.hv + d.hv;\n  if(cnt == 1) z.cyc = a.hv ? a.cyc : b.hv ? b.cyc : c.hv ? c.cyc : d.cyc;\n  z.cyc = z.cyc * (a.bd + b.ac + c.bd + d.ac + 4);\n  return z;\n}\n\nset<string> s;\nvoid update(int p, int &x) {\n  if(!x) x = ++nd;\n  if(p == n) return val[x].hv ^= 1, void();\n  update(p + 1, sn[x][st[p] - 'a']);\n  vector<dat> v(4);\n  for(int i = 0; i < 4; i++) v[i] = sn[x][i] ? val[sn[x][i]] : sp[p + 1];\n  val[x] = add(v[0], v[1], v[2], v[3]);\n}\n\nbool Med;\nint main() {\n  fprintf(stderr, \"%.3lf\\n\", (&Mbe - &Med) / 1048576.0);\n  ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n  cin >> n >> q;\n  for(int i = n - 1; ~i; i--) sp[i] = add(sp[i + 1], sp[i + 1], sp[i + 1], sp[i + 1]);\n  for(int i = 1; i <= q; i++) {\n    cin >> st, update(0, R);\n    if(s.find(st) != s.end()) s.erase(st);\n    else s.insert(st);\n    ll a1 = val[R].cyc.mn, a2 = val[R].cyc.mx;\n    if(s.size() <= 1 || s.size() == 2 && check(*s.begin(), *++s.begin())) a1 = 2;\n    if(a1 == -1) cout << \"-1\\n\";\n    else cout << a1 << \" \" << a2 << \"\\n\";\n  }\n  return 0;\n}\n```",
        "postTime": 1683869460,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "CF1819F Willy-nilly, Crack, Into Release!"
    }
]