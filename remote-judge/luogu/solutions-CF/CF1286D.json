[
    {
        "content": "\u6ce8\u610f\u5230\u7b2c\u4e00\u6b21\u76f8\u9047\u4e00\u5b9a\u662f\u76f8\u90bb\u7684\u4e24\u4e2a\u70b9\uff0c\u5047\u8bbe\u4e24\u4e2a\u4e0d\u76f8\u90bb\u7684\u70b9\u76f8\u9047\u4e86\uff0c\u4efb\u610f\u4e00\u4e2a\u5728\u5b83\u4eec\u4e2d\u95f4\u7684\u70b9\u4e00\u5b9a\u4f1a\u66f4\u65e9\u6216\u8005\u540c\u65f6\u548c\u5b83\u4eec\u4e4b\u4e00\u76f8\u9047\u3002\n\n\u7136\u540e\u8003\u8651\u679a\u4e3e\u7b2c\u4e00\u6b21\u76f8\u9047\u7684\u662f\u54ea\u4e00\u5bf9\u70b9\uff0c\u8fd9\u4e00\u5bf9\u70b9\u7684\u8fd0\u52a8\u65b9\u5411\u662f\u4ec0\u4e48\u3002\u7531\u4e8e\u8fd9\u4e00\u5bf9\u662f\u6211\u4eec\u94a6\u5b9a\u7684\u6700\u65e9\u76f8\u9047\u7684\u70b9\uff0c\u5176\u4ed6\u7684\u70b9\u5bf9\u90fd\u4e0d\u80fd\u66f4\u65e9\u76f8\u9047\u3002\n\n\u679a\u4e3e\u4e4b\u540e\u8003\u8651 dp\uff0c\u4ee4 $f_{i,j}$ \u8868\u793a\u8003\u8651\u5230\u7b2c $i$ \u4e2a\u70b9\uff0c\u4e0a\u4e00\u4e2a\u70b9\u7684\u8fd0\u52a8\u72b6\u6001\u662f $j=(0/1)$ \uff0c\u8868\u793a\u5411\u5de6\u6216\u8005\u5411\u53f3\u8fd0\u52a8\uff0c\u5e76\u4e14\u6ee1\u8db3\u679a\u4e3e\u7684\u9650\u5236\u7684\u6982\u7387\u3002\n\n\u8f6c\u79fb\u5927\u6982\u662f\u8003\u8651\u4e4b\u524d\u4e00\u4e2a\u70b9\u5411\u5de6/\u53f3\u8fd0\u52a8\u65f6\uff0c\u4e3a\u4e86\u4e0d\u6bd4\u679a\u4e3e\u7684\u70b9\u66f4\u65e9\u76f8\u9047\uff0c\u5f53\u524d\u70b9\u5408\u6cd5\u7684\u8fd0\u52a8\u72b6\u6001\u3002\u7279\u522b\u5730\uff0c\u679a\u4e3e\u7684\u70b9\u5bf9\u7684\u8fd0\u52a8\u72b6\u6001\u5fc5\u987b\u4e3a\u94a6\u5b9a\u7684\u3002\n\n\u7136\u540e\u8fd9\u4e2a\u8f6c\u79fb\u663e\u7136\u53ef\u4ee5\u5199\u6210\u77e9\u9635\u5f62\u5f0f\uff0c\u90a3\u4e48\u8fd9\u4e2a dp \u5c31\u76f8\u5f53\u4e8e\u4e00\u5217\u77e9\u9635\u4f9d\u6b21\u76f8\u4e58\u3002\u5982\u679c\u6211\u4eec\u628a\u6240\u6709\u679a\u4e3e\u7684\u65b9\u6848\u6309\u7167\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u76f8\u5f53\u4e8e\u6bcf\u6b21\u5c31\u4f1a\u5355\u70b9\u4fee\u6539\u4e00\u4e2a\u77e9\u9635\uff0c\u67e5\u8be2\u8fde\u4e58\u79ef\u3002\u5199\u4e00\u4e2a\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5c31\u884c\u4e86\u3002\n\n\u7136\u540e\u6211\u7684\u5199\u6cd5\u5bf9 $n=1$ \u4f1a RE\uff0c\u7279\u5224\u6389\u5c31\u884c\u4e86\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define maxn 100005\n#define ll long long\nconst int mod=998244353;\nint n,p[2][maxn],x[maxn],v[maxn],tl;\nstruct matrix {\n\tint a[2][2];\n}M[maxn];\nmatrix mt(int a,int b,int c,int d){\n\tmatrix m;m.a[0][0]=a;m.a[0][1]=b;m.a[1][0]=c;m.a[1][1]=d;\n\treturn m;\n}\nmatrix mul(matrix a,matrix b) {\n\tmatrix c=mt(0,0,0,0);\n\tfor(int k=0;k<2;++k)\n\tfor(int i=0;i<2;++i)\n\tfor(int j=0;j<2;++j)\n\t\tc.a[i][j]=(c.a[i][j]+(ll)a.a[i][k]*b.a[k][j]%mod)%mod;\n\treturn c;\n}\n\nstruct query {\n\tint s,v,p,i,j;\n}q[maxn<<2];\nint cmp(query a,query b){\n\treturn (ll)a.s*b.v<(ll)b.s*a.v;\n}\n\nint get_speed(int i,int k1,int k2){\n\tif (k1==0&&k2==1)return -1;\n\tif (k1==1&&k2==0)return v[i]+v[i+1];\n\tif (k1==1&&k2==1)return v[i]-v[i+1];\n\tif (k1==0&&k2==0)return v[i+1]-v[i];\n}\n\nint qpow(int a,int b){\n\tif (b==0)return 1;\n\tll d=qpow(a,b>>1);d=d*d%mod;\n\tif (b&1)d=d*a%mod;\n\treturn d;\n}\n\nint inv(int x){return qpow(x,mod-2);}\n\nstruct segmentTree {\n\tmatrix sum[maxn<<2];\n\tvoid update(int rt){\n\t\tsum[rt]=mul(sum[rt<<1],sum[rt<<1|1]);\n\t}\n\tvoid build(int l,int r,int rt){\n\t\tif (l==r){\n\t\t\tsum[rt]=M[l];\n\t\t\treturn;\n\t\t}build(l,(l+r)>>1,rt<<1);\n\t\tbuild(((l+r)>>1)+1,r,rt<<1|1);\n\t\tupdate(rt);\n\t}\n\tvoid modify(int l,int r,int p,int rt){\n\t\tif (l==r){sum[rt]=M[l];return;}\n\t\tint mid=(l+r)>>1;\n\t\tif (p<=mid)modify(l,mid,p,rt<<1);\n\t\telse modify(mid+1,r,p,rt<<1|1);\n\t\tupdate(rt);\n\t}\n}sgt;\n\nint main(){\n\tll ans=0;\n\tscanf(\"%d\",&n);\n\tif (n==1){printf(\"0\");return 0;}\n\tfor(int i=1;i<=n;++i){\n\t\tscanf(\"%d%d%d\",&x[i],&v[i],&p[1][i]);\n\t\tp[1][i]=(ll)p[1][i]*qpow(100,mod-2)%mod;\n\t\tp[0][i]=(1-p[1][i]+mod)%mod;\n\t}for(int i=1;i<n;++i){\n\t\tfor(int j=0;j<2;++j)\n\t\tfor(int k=0;k<2;++k){\n\t\t\tif (get_speed(i,j,k)<0)continue;\n\t\t\tq[++tl].s=x[i+1]-x[i];\n\t\t\tq[tl].v=get_speed(i,j,k);\n\t\t\tq[tl].p=i;\n\t\t\tq[tl].i=j;q[tl].j=k;\n\t\t}\n\t}\n\tfor(int i=0;i<n;++i)\n\t\tM[i]=mt(p[0][i+1],p[1][i+1],p[0][i+1],p[1][i+1]);\n\t\n\tsgt.build(1,n-1,1);\n\tmatrix m1=mul(M[0],sgt.sum[1]);\n\tstd::sort(q+1,q+tl+1,cmp);\n\tfor(int i=1;i<=tl;++i){\n\t\tmatrix m1=M[q[i].p],m2=mt(0,0,0,0);\n\t\tm2.a[q[i].i][q[i].j]=p[q[i].j][q[i].p+1];\n\t\tM[q[i].p]=m2;\n\t\tsgt.modify(1,n-1,q[i].p,1);\n\t\tmatrix m3=mul(M[0],sgt.sum[1]);\n\t\tint P=(m3.a[0][0]+m3.a[0][1])%mod;\n\t\tans=((ans+(ll)q[i].s%mod*inv(q[i].v)%mod*P%mod)%mod+mod%mod);\n\t\tm1.a[q[i].i][q[i].j]=0;\n\t\tM[q[i].p]=m1;\n\t\tsgt.modify(1,n-1,q[i].p,1);\n\t}printf(\"%d\",ans);\n\treturn 0;\n}\n\n\n\n\n\n```\n",
        "postTime": 1578374940,
        "uid": 48355,
        "name": "EternalAlexander",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1286D \u3010LCC\u3011"
    },
    {
        "content": "\u663e\u7136\u7b2c\u4e00\u6b21\u78b0\u649e\u4e00\u5b9a\u662f\u76f8\u90bb\u4e24\u4e2a\u7c92\u5b50\u4e4b\u95f4\u7684\uff0c\u800c\u6839\u636e\u8fd9\u4e24\u4e2a\u7c92\u5b50\u7684\u65b9\u5411\uff0c\u4f1a\u51fa\u73b0\u4e09\u79cd\u53ef\u80fd\uff08\u76f8\u5411\u800c\u884c\u3001\u5f80\u5de6\u8ffd\u51fb\uff0c\u5f80\u53f3\u8ffd\u51fb\uff09\u3002\u8fd9\u6837\u6839\u636e\u4ed6\u4eec\u7684\u901f\u5ea6\u5927\u5c0f\u5173\u7cfb\uff0c\u6700\u591a\u80fd\u6dfb\u52a0 $2(n-1)$ \u79cd\u78b0\u649e\u60c5\u51b5\u3002\n\n\u90a3\u4e48\u9996\u5148\u628a\u8fd9 $m$ \u79cd\u78b0\u649e\u60c5\u51b5\u9884\u5148\u5904\u7406\u51fa\u6765\uff0c\u5e76\u6309\u7167\u76f8\u9047\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n\n\u8fd9\u6837\u7b2c $i$ \u4e2a\u78b0\u649e\u4f5c\u4e3a\u7b2c\u4e00\u6b21\u78b0\u649e\u7684\u524d\u63d0\u662f\u524d $i-1$ \u4e2a\u78b0\u649e\u90fd\u6ca1\u53d1\u751f\uff0c\u800c\u7b2c $i$ \u4e2a\u78b0\u649e\u4e00\u5b9a\u53d1\u751f\u3002\u8fd9\u91cc**\u53d1\u751f**\u7684\u610f\u601d\u662f\uff0c\u4e24\u4e2a\u7c92\u5b50\u5bf9\u5e94\u7684\u65b9\u5411\u6b63\u786e\u3002\u4e5f\u5373\u4f7f\u8bf4\uff0c\u4e00\u5171\u56db\u79cd\u65b9\u5411\uff0c\u5bf9\u524d $i-1$ \u4e2a\u78b0\u649e\u4f1a\u5206\u522b\u7981\u6389\u4e00\u79cd\u5bf9\u5e94\u7684\u65b9\u5411\uff0c\u800c\u7b2c $i$ \u4e2a\u4f1a\u7981\u6389\u5176\u4ed6\u4e09\u79cd\u65b9\u5411\u3002\n\n\u73b0\u5728\u5047\u8bbe\uff0c\u6211\u4eec\u5df2\u7ecf\u628a\u8be5\u7981\u7684\u65b9\u5411\u5904\u7406\u597d\u4e86\uff0c\u5373\u7528\u4e00\u4e2a`bool`\u6570\u7ec4`limit[x][j][k]`\u8868\u793a\u7b2c $x$ \u4e2a\u7c92\u5b50 $j$ \u65b9\u5411\u548c\u7b2c $x+1$ \u4e2a\u7c92\u5b50\u7684 $k$ \u65b9\u5411\u662f\u88ab\u7981\u7684\uff08\u4e0d\u80fd\u540c\u65f6\u53d1\u751f\uff09\uff0c\u5176\u4e2d $j,k$ \u7b49\u4e8e $1$ \u8868\u793a\u5f80\u53f3\uff0c$0$ \u8868\u793a\u5f80\u5de6\u3002\n\n\u6839\u636e\u8bfb\u5165\u4fe1\u606f\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u7c92\u5b50\u5f80\u5de6/\u5f80\u53f3\u7684\u6982\u7387\u5206\u522b\u4e3a`p[i][0]`\u548c`p[i][1]`\uff0c \u90a3\u4e48\u5c31\u53ef\u4ee5\u8fdb\u884c DP \u4e86\u3002 \n\n\u8bb0`f[i][0/1]` \u8868\u793a\u5df2\u7ecf\u8ba1\u7b97\u5b8c\u524d $i$ \u4e2a\u7c92\u5b50\uff0c\u5e76\u4e14\u6700\u540e\u4e00\u4e2a\u7c92\u5b50\u7684\u65b9\u5411\u662f\u5411\u5de6/\u53f3\u7684\uff0c\u53ef\u4ee5\u5f97\u5230\n\n`f[i][0] = p[i][0] * (f[i-1][0] * !limit[i-1][0][0] + f[i-1][1] * !limit[i-1][1][0])`\n\n`f[i][1] = p[i][1] * (f[i-1][0] * !limit[i-1][0][1] + f[i-1][1] * !limit[i-1][1][1])`\n\n\u8fd9\u6837 DP \u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n^2)$ \u7684\uff0c\u56e0\u4e3a\u6bcf\u6b21\u4fee\u6539\u4e00\u4e2a\u4f4d\u7f6e\u7684`limit`\u540e\uff0c\u90fd\u4f1a\u628a\u5176\u540e\u7f00\u7684 DP \u91cd\u65b0\u505a\u4e00\u904d\uff0c\u5f88\u6d6a\u8d39\u65f6\u95f4\u3002\n\n\u90a3\u4e48\u6709\u6ca1\u6709\u529e\u6cd5\u80fd\u89e3\u51b3\u8fd9\u6837\u5e26\u4fee\u6539\u7684DP\u95ee\u9898\u5462\uff1f\u7b54\u6848\u662f\u7528\u7ebf\u6bb5\u6811\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u7ebf\u6bb5\u6811\u7684\u6bcf\u4e2a\u7ed3\u70b9\u4fe1\u606f`val[u][0/1][0/1]`\uff0c\u7ef4\u62a4\u4e00\u6bb5\u533a\u95f4 $[l,r]$ \u5de6\u7aef\u70b9 $l$ \u7c92\u5b50\u7684\u65b9\u5411\u548c\u53f3\u7aef\u70b9 $r$ \u7c92\u5b50\u7684\u65b9\u5411\u3002\n\n\u7136\u540e\u5408\u5e76\u64cd\u4f5c\u8981\u6839\u636e`limit[mid][0/1][0/1]`\u6765\u8ba1\u7b97\u5408\u6cd5\u6982\u7387\uff0c\u66f4\u65b0\u4e5f\u53ea\u8981\u4ece`mid`\u6240\u5728\u4f4d\u7f6e\u5f80\u4e0a\u4e00\u76f4\u8df3\u5c31\u884c\u4e86\uff0c\u5177\u4f53\u7ec6\u8282\u89c1\u4e0b\u9762\u7684\u4ee3\u7801\u3002\n\n\u6ce8\u610f\u5728\u7b97\u7b2c $i$ \u4e2a\u78b0\u649e\u662f\u7b2c\u4e00\u6b21\u7684\u6982\u7387\u65f6\uff0c\u7528\u524d $i-1$ \u4e2a\u78b0\u649e\u4e0d\u53d1\u751f\u7684\u6982\u7387\u51cf\u53bb\u524d $i$ \u4e2a\u78b0\u649e\u4e0d\u53d1\u751f\u7684\u6982\u7387\u5373\u53ef\uff0c\u8fd9\u6837\u4f1a\u7b80\u5355\u5f88\u591a\uff08\u5982\u679c\u662f\u7981\u6389\u4e09\u4e2a\u65b9\u5411\u7684\u65b9\u6cd5\uff0c\u9700\u8981\u591a\u8fdb\u884c\u4e00\u6b21\u66f4\u65b0\u64cd\u4f5c\uff09\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\uff0c\u53c2\u8003\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```c++\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nconst int INF = 0x3f3f3f3f;\nconst LL mod = 998244353;\nconst int N = 100005;\n\nLL pow_mod(LL x, LL n) {\n    LL res = 1;\n    while (n) {\n        if (n & 1)\n            res = res * x % mod;\n        x = x * x % mod;\n        n >>= 1;\n    }\n    return res;\n}\nconst LL inv100 = pow_mod(100, mod - 2);\nint a[N], b[N], p[N][2];  //\u6bcf\u4e2a\u70b9\u4f4d\u7f6e\uff0c\u901f\u5ea6\uff0c\u5de6\u53f3\u6982\u7387\nstruct Node {\n    int x, d1, d2, L, v;  // \u5bf9\u5e94limit[x][d1][d2]\uff0cx\u7c92\u5b50\u65b9\u5411\u4e3ad1,x+1\u7c92\u5b50\u65b9\u5411\u4e3ad2\uff0c\u65f6\u95f4\u4e3a L/v,\u65b9\u54110\u5de61\u53f3\n} c[N * 2];\nbool cmp(const Node &p1, const Node &p2) {\n    return (LL)p1.L * p2.v < (LL)p2.L * p1.v;\n}\nbool limit[N][2][2];   // limit[i][j][k] \u8868\u793a\u7b2ci\u4e2a\u7c92\u5b50\u65b9\u5411\u4e3aj,\u7b2ci+1\u4e2a\u7c92\u5b50\u65b9\u5411\u4e3ak \u662f\u88ab\u7981\u7684\nLL val[N << 2][2][2];  // val[u][i][j] \u8868\u793au\u8fd9\u4e2a\u7ed3\u70b9\u5bf9\u5e94\u533a\u95f4[l,r]\u4e2d l\u7c92\u5b50\u65b9\u5411\u4e3ai\uff0cr\u7c92\u5b50\u65b9\u5411\u4e3aj \u7684\u6982\u7387\nint umid[N << 2];      // \u6bcf\u4e2a\u975e\u53f6\u7ed3\u70b9\u7684mid\nint wz[N];             // \u6bcf\u4e2amid\u51fa\u73b0\u7684\u7ebf\u6bb5\u6811\u7ed3\u70b9\u7f16\u53f7\nvoid push_up(int u) {\n    for (int i = 0; i < 2; i++) {\n        for (int j = 0; j < 2; j++) {\n            val[u][i][j] = 0;\n            for (int x = 0; x < 2; x++) {\n                for (int y = 0; y < 2; y++) {\n                    if (!limit[umid[u]][x][y]) {\n                        val[u][i][j] += val[u << 1][i][x] * val[u << 1 | 1][y][j] % mod;\n                    }\n                }\n            }\n            val[u][i][j] %= mod;\n        }\n    }\n}\nvoid build(int u, int l, int r) {\n    if (l == r) {\n        val[u][0][0] = p[l][0];\n        val[u][1][1] = p[l][1];\n        return;\n    }\n    int mid = l + r >> 1;\n    umid[u] = mid;\n    wz[mid] = u;\n    build(u << 1, l, mid);\n    build(u << 1 | 1, mid + 1, r);\n    push_up(u);\n}\n\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; i++) {\n        scanf(\"%d%d%d\", &a[i], &b[i], &p[i][1]);\n        p[i][1] = p[i][1] * inv100 % mod;\n        p[i][0] = (1 - p[i][1] + mod) % mod;\n    }\n    build(1, 1, n);\n    int m = 0;\n    for (int i = 2; i <= n; i++) {\n        c[m++] = {i - 1, 1, 0, a[i] - a[i - 1], b[i - 1] + b[i]};\n        if (b[i - 1] > b[i]) {\n            c[m++] = {i - 1, 1, 1, a[i] - a[i - 1], b[i - 1] - b[i]};\n        }\n        if (b[i - 1] < b[i]) {\n            c[m++] = {i - 1, 0, 0, a[i] - a[i - 1], b[i] - b[i - 1]};\n        }\n    }\n    sort(c, c + m, cmp);\n    LL ans = 0, last = 1;\n    for (int i = 0; i < m; i++) {\n        // \u52a0\u4e0a\u65b0\u7684\u9650\u5236\u5e76\u66f4\u65b0\n        limit[c[i].x][c[i].d1][c[i].d2] = 1;\n        for (int u = wz[c[i].x]; u; u >>= 1) {\n            push_up(u);\n        }\n        // \u7b2ci\u6b21\u78b0\u649e\u53d1\u751f\u7684\u6982\u7387 = \u524di-1\u6b21\u78b0\u649e\u4e0d\u53d1\u751f\u7684\u6982\u7387 -  \u524di\u6b21\u78b0\u649e\u4e0d\u53d1\u751f\u7684\u6982\u7387\n        LL now = (val[1][0][0] + val[1][0][1] + val[1][1][0] + val[1][1][1]) % mod;\n        ans += c[i].L * pow_mod(c[i].v, mod - 2) % mod * (last - now + mod) % mod;\n        last = now;\n    }\n    printf(\"%lld\\n\", ans % mod);\n    return 0;\n}\n```\n\n",
        "postTime": 1606676909,
        "uid": 54357,
        "name": "OMG_wc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1286D \u3010LCC\u3011"
    },
    {
        "content": "### P.S.\n~~\u770b\u5230@command_block \u795e\u4ed9\u53d1\u4e86\u8fd9\u9898\u603b\u7ed3\uff0c\u7136\u540e\u5c31\u6765\u4e86\u3002~~  \n~~\u7136\u540e\u5c31\u4e0d\u4f1a\uff0c\u53ea\u80fd\u770b\u9898\u89e3\uff0c\u7136\u540e\u5c31\u81ea\u95ed\u4e86~~  \n\u672c\u9898\u89e3\u4ee3\u7801\u6709\u53c2\u8003 @\u30af\u30c8\u30ea \u7684\u4ee3\u7801\uff0c\u4e0d\u8fc7\u52a0\u5165\u4e86\u81ea\u5df1\u7684\u7406\u89e3\u6210\u5206\u3002  \n\u679c\u7136\u6c34\u5e73\u8fd8\u662f\u4e0d\u884c\uff0c\u4e00\u9047\u5230\u96be\u9898\u5c31\u4e0d\u4f1a\u505a\uff0c\u53ea\u80fd\u722c\u6765\u722c\u53bb ![](//xn--9zr.tk/no)\n\n### Problem.\n\u6709 $n$ \u4e2a\u7c92\u5b50\uff0c\u6bcf\u4e2a\u7c92\u5b50\u4f4d\u4e8e\u6570\u8f74\u4e0a\u7684 $x_i$ \u4f4d\u7f6e\u3002  \n\u5177\u6709\u4e00\u5b9a\u7684\u51fa\u901f\u5ea6 $v_i$\uff0c\u6709 $p_i$ \u7684\u6982\u7387\u5411\u5de6\u98de\uff0c$1-p_i$ \u7684\u6982\u7387\u5411\u53f3\u98de\u3002  \n\u5b9a\u4e49\u4e00\u79cd\u60c5\u51b5\u7684\u6743\u503c\u4e3a\u6700\u5148\u76f8\u9047\u7684\u4e24\u4e2a\u7c92\u5b50\u76f8\u9047\u65f6\u95f4\uff08\u82e5\u65e0\u76f8\u9047\u5219\u4e3a $0$\u3002  \n\n### Solution.\n\u9996\u5148\uff0c\u8981\u6c42\u662f\u6700\u8fd1\u7684\u4e24\u4e2a\u7c92\u5b50\u76f8\u649e\u3002  \n\u90a3\u4e48\u7b2c\u4e00\u6b21\u53d1\u751f\u78b0\u649e\u7684\u4e24\u4e2a\u7c92\u5b50\u80af\u5b9a\u662f\u76f8\u90bb\u7684\uff0c\u5426\u5219\u4e4b\u524d\u5fc5\u7136\u53d1\u751f\u4e86\u81f3\u5c11\u4e00\u6b21\u7684\u78b0\u649e\u3002  \n\u6240\u4ee5\u53ef\u4f5c\u4e3a\u7b2c\u4e00\u6b21\u78b0\u649e\u7c92\u5b50\u6570\u662f $O(n)$\u3002\uff08\u6ce8\u610f\u8fd9\u91cc\u7c92\u5b50\u65b9\u5411\u8fd8\u6709\u5dee\u5f02\uff0c\u53ef\u80fd\u76f8\u9047\u53ef\u80fd\u8ffd\u53ca\u3002  \n\u90a3\u4e48\u6211\u4eec\u6309\u7167\u78b0\u649e\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u4f9d\u6b21\u5904\u7406\u3002  \n\u6bcf\u6b21\u6211\u4eec\u9700\u8981\u7edf\u8ba1\u5f53\u524d\u7684\u6982\u7387\uff0c\u7136\u540e\u8d21\u732e\u5165\u671f\u671b\u4e2d\u3002  \n\u4e8e\u662f\u6211\u4eec\u95ee\u9898\u5c31\u8f6c\u5316\u6210\u4e86\u5982\u4f55\u7b97\u51fa\u8fd9\u4e2a\u6982\u7387\u3002  \n\n\u8003\u8651 dp\uff0c\u8bbe $dp_{l,r,0/1,0/1}$ \u8868\u793a\u5bf9\u4e8e\u533a\u95f4 $[l,r]$\uff0c\u5de6\u8fb9/\u53f3\u8fb9\u65b9\u5411\u7684\u6982\u7387\u3002  \n\u9996\u5148\u8fb9\u754c\u6682\u65f6\u4e0d\u7ba1\uff0c\u56e0\u4e3a\u8fb9\u754c\u662f\u9700\u8981\u4eba\u4e3a\u89c4\u5b9a\u7684\u3002  \n$$\\therefore dp_{l,r,a,b}=\\sum_{x=0}^1dp_{l,md,a,x}\\times dp_{md+1,r,x,b}$$  \n\u597d\uff0c\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u8f6c\u5316\u6210\u77e9\u9635\u7684\u5f62\u5f0f\uff0c\u7136\u540e\u76f4\u63a5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u77e9\u4e58\u5c31\u597d\u4e86\u3002  \n\u6709\u4e9b\u65f6\u5019\u6211\u4eec\u9700\u8981\u94a6\u5b9a\u8fb9\u754c\u76f8\u649e\uff0c\u6709\u4e9b\u65f6\u5019\u9700\u8981\u94a6\u5b9a\u8fb9\u754c\u4e0d\u76f8\u649e\u3002  \n\u800c\u603b\u94a6\u5b9a\u6b21\u6570\u662f\u548c\u78b0\u649e\u6b21\u6570\u540c\u9636\u7684\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u5927\u5e38\u6570 $O(n\\log n)$\n\n### Coding.\n\u5177\u4f53\u8be6\u89c1\u4ee3\u7801\uff0c\u6709\u6ce8\u91ca  \n```cpp\n//\u662f\u554a\u2026\u2026\u4f60\u5c31\u662f\u90a3\u53ea\u9b3c\u4e86\u2026\u2026\u6240\u4ee5\u88ab\u4f60\u78b0\u5230\u4ee5\u540e\uff0c\u5c31\u8f6e\u5230\u6211\u53d8\u6210\u9b3c\u4e86{{{\n#include<bits/stdc++.h>\nusing namespace std;typedef long long ll;\ntemplate<typename T>inline void read(T &x)\n{\n\tx=0;char c=getchar(),f=0;\n\tfor(;c<'0'||c>'9';c=getchar()) if(c=='-') f=1;\n\tfor(;c>='0'&&c<='9';c=getchar()) x=(x<<1)+(x<<3)+(c^48);\n\tif(f) x=-x;\n}/*}}}*/\nconst int P=998244353;\nstruct mat\n{//\u77e9\u9635\u7ed3\u6784\u4f53\uff0c\u4e0d\u89e3\u91ca\n\tint a[2][2];\n\tinline int* operator[](int w) {return a[w];}\n\tinline mat operator*(const mat &b)\n\t{\n\t\tmat rs;\n\t\trs.a[0][0]=(1ll*a[0][0]*b.a[0][0]+1ll*a[0][1]*b.a[1][0])%P;\n\t\trs.a[1][0]=(1ll*a[1][0]*b.a[0][0]+1ll*a[1][1]*b.a[1][0])%P;\n\t\trs.a[0][1]=(1ll*a[0][0]*b.a[0][1]+1ll*a[0][1]*b.a[1][1])%P;\n\t\trs.a[1][1]=(1ll*a[1][0]*b.a[0][1]+1ll*a[1][1]*b.a[1][1])%P;\n\t\treturn rs;\n\t}\n\tmat() {a[0][0]=a[0][1]=a[1][0]=a[1][1]=0;}\n}T[400005],a[100005];\nstruct query\n{//\u67e5\u8be2\u7ed3\u6784\u9898\uff0c\u5206\u522b\u8868\u793a \u8def\u7a0b\uff0c\u901f\u5ea6\u5dee/\u548c\uff0cid\uff0c\u7b2c\u4e00\u4e2a\u7684\u65b9\u5411\uff0c\u7b2c\u4e8c\u4e2a\u7684\u65b9\u5411\n\tint ds,v,id,a,b;//\u6309\u7167\u65f6\u95f4\u6392\u5e8f\u7684\u51fd\u6570\uff0c\u9632\u6b62\u8bef\u5dee\n\tinline char operator<(const query &b) {return 1ll*ds*b.v<1ll*v*b.ds;}\n}q[200005];int n,qt,X[100005],v[100005],p[100005];\ninline int ksm(int x,int q=P-2) {int r=1;for(;q;q>>=1,x=1ll*x*x%P) if(q&1) r=1ll*r*x%P;return r;}\ninline void build(int x,int l,int r)\n{//\u7ebf\u6bb5\u6811\uff0c\u4e0d\u89e3\u91ca\n\tif(l==r) return T[x]=a[l],void();\n\tbuild(x<<1,l,(l+r)>>1),build(x<<1|1,((l+r)>>1)+1,r),T[x]=T[x<<1]*T[x<<1|1];\n}\ninline void updat(int x,int l,int r,int dw)\n{//update\uff0c\u4e0d\u89e3\u91ca\n\tif(l==r) return T[x]=a[l],void();\n\tif(dw<=((l+r)>>1)) updat(x<<1,l,(l+r)>>1,dw),T[x]=T[x<<1]*T[x<<1|1];\n\telse updat(x<<1|1,((l+r)>>1)+1,r,dw),T[x]=T[x<<1]*T[x<<1|1];\n}\nint main()\n{\n\tread(n);const int iv=ksm(100);int rs=0;\n\tfor(int i=1;i<=n;i++) read(X[i]),read(v[i]),read(p[i]),p[i]=1ll*p[i]*iv%P;\n\tfor(int i=1;i<=n;i++) a[i][0][0]=a[i][1][0]=(P+1-p[i])%P,a[i][0][1]=a[i][1][1]=p[i];\n\t//\u521d\u59cb\u5c31\u662f\u6bcf\u4e2a\u7ed3\u70b9\u90fd\u6709 p \u7684\u6982\u7387\u5411\u5de6\uff0c1-p \u7684\u6982\u7387\u5411\u53f3\n\tbuild(1,1,n);for(int i=2;i<=n;i++) q[++qt]=(query){X[i]-X[i-1],v[i]+v[i-1],i,1,0};\n\tfor(int i=2;i<=n;i++) if(v[i]<v[i-1]) q[++qt]=(query){X[i]-X[i-1],v[i-1]-v[i],i,1,1};\n\tfor(int i=2;i<=n;i++) if(v[i]>v[i-1]) q[++qt]=(query){X[i]-X[i-1],v[i]-v[i-1],i,0,0};\n\t//q\u662f\u6240\u6709\u9996\u6b21\u78b0\u649e\u60c5\u51b5\uff0c\u6ce8\u610f\u6b64\u65f6\u53ef\u80fd\u76f8\u9047\u4e5f\u53ef\u80fd\u8ffd\u53ca\n\t//for(int i=1;i<=qt;i++) printf(\"%d , %d , %d , %d , %d\\n\",q[i].ds,q[i].v,q[i].id,q[i].a,q[i].b);\n\tsort(q+1,q+qt+1);for(int i=1;i<=qt;i++)\n\t{//\u6309\u7167\u76f8\u9047\u65f6\u95f4\u6392\u5e8f\u540e\u4ece\u5c0f\u5230\u5927\u5904\u7406\n\t\tmat a1,a2;a1=a[q[i].id],a2[q[i].a][q[i].b]=a1[q[i].a][q[i].b],a[q[i].id]=a2;\n\t\t//\u9996\u5148\uff0c\u6211\u4eec\u5047\u8bbe\u5f53\u524d\u8fd9\u4e2a\u70b9 100% \u76f8\u649e\uff0c\u6c42\u51fa\u6982\u7387\uff0c\u7136\u540e\u52a0\u5165\u671f\u671b\u4e2d\n\t\tupdat(1,1,n,q[i].id);int vl=1ll*q[i].ds*ksm(q[i].v)%P;\n\t\trs=(rs+1ll*vl*(T[1][0][0]+T[1][0][1]))%P,a1[q[i].a][q[i].b]=0,a[q[i].id]=a1,updat(1,1,n,q[i].id);\n\t\t//\u7136\u540e\uff0c\u4e3a\u4e86\u540e\u9762\u7edf\u8ba1\u65b9\u4fbf\uff0c\u6211\u4eec\u5047\u8bbe\u8fd9\u4e2a\u70b9\u6c38\u8fdc\u4e0d\u4f1a\u76f8\u649e\uff0c\u5728\u7ebf\u6bb5\u6811\u4e0a\u4fee\u6539\n\t\t//\u56e0\u4e3a\u6211\u4eec\u6309\u76f8\u649e\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u5904\u7406\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u6b21\u76f8\u649e\uff0c\u5982\u679c\u5b83\u662f\u9996\u6b21\u76f8\u649e\uff0c\u90a3\u5b83\u4e4b\u524d\u6240\u6709\u76f8\u649e\u5fc5\u987b\u4e0d\u53d1\u751f\n\t}\n\treturn printf(\"%d\\n\",rs),0;//\u6700\u540e\u8f93\u51fa\u671f\u671b\u5c31\u597d\u4e86\n}\n```\n",
        "postTime": 1617536665,
        "uid": 44805,
        "name": "Leap_Frog",
        "ccfLevel": 7,
        "title": "CF1286D LCC\uff08\u9898\u89e3\uff09"
    },
    {
        "content": "\u5ba3\u4f20\u535a\u5ba2 $\\to$ [link](https://blog.csdn.net/BWzhuzehao/article/details/117932366)\n\n\u4e00\u9053\u795e\u4ed9\u9898\uff0c\u5f88\u8003\u9a8c\u5404\u4f4d\u5bf9\u4e8e\u671f\u671b DP \u7684\u638c\u63e1\u7a0b\u5ea6\u4e0e\u6570\u636e\u7ed3\u6784\u4f18\u5316 DP \u7684\u719f\u7ec3\u5ea6\u3002\n\n~~\u672c\u9898\u597d\u50cf\u6709\u7ebf\u6bb5\u6811\u5957\u77e9\u9635\u4f18\u5316 DP \u505a\u6cd5\uff1f\u4e0d\u7ba1\u4e86\u4e0d\u7ba1\u4e86\uff0c\u53cd\u6b63\u6211\u6ca1\u5199~~\n\n\u5b9e\u9645\u4e0a\u4e00\u5f00\u59cb\u60f3\u7684\u65f6\u5019\u6211\u8fc5\u901f\u53d1\u73b0\u8fd9\u9053\u9898\u4e0e\u4ee5\u524d\u505a\u8fc7\u7684\u4e00\u9053\u9898\u76ee\u5f88\u76f8\u4f3c\uff0c\u611f\u89c9\u53ef\u4ee5\u7ebf\u6bb5\u6811\u5957\u77e9\u9635\u505a\uff0c\u4f46\u662f\u60f3\u4e86\u4e00\u4e2a\u665a\u4e0a\u6ca1\u60f3\u51fa\u89e3\u6cd5\u3002\n\n\u540e\u6765\u770b\u9898\u89e3\uff0c\u53d1\u73b0\u786e\u5b9e\u6709\u8fd9\u6837\u7684\u505a\u6cd5\uff0c\u4f46\u662f @OMG_wc \u7ed9\u51fa\u4e86\u4e00\u79cd\u66f4\u52a0\u7b80\u6d01\u7684\u4e0d\u7528\u77e9\u9635\u7684\u505a\u6cd5\uff0c\u6211\u5c31\u5b66\u4e60\u4e86\u8fd9\u79cd\u505a\u6cd5\u3002\n\n---------\n\n\u9996\u5148\u4e00\u4e2a\u4e8b\u5b9e\u662f\u7b2c\u4e00\u6b21\u53d1\u751f\u78b0\u649e\u7684\u7c92\u5b50\u4e00\u5b9a\u662f\u76f8\u90bb\u7684\u7c92\u5b50\uff0c\u56e0\u4e3a\u5982\u679c\u4e24\u4e2a\u4e0d\u76f8\u90bb\u7684\u7c92\u5b50\u649e\u5230\u4e86\uff0c\u90a3\u4e48\u4e2d\u95f4\u7684\u7c92\u5b50\u4e00\u5b9a\u4f1a\u4e0e\u5176\u4e2d\u7684\u67d0\u4e00\u4e2a\u7c92\u5b50\u649e\u5230\u6216\u8005\u662f\u540c\u65f6\u649e\u5230\u3002\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5148\u9884\u5904\u7406\u51fa\u6240\u6709\u53ef\u80fd\u4f1a\u78b0\u649e\u7684\u7c92\u5b50\u5bf9\u4ee5\u53ca\u78b0\u649e\u7684\u4e24\u4e2a\u7c92\u5b50\u7684\u65b9\u5411\u3001\u8ddd\u79bb\u3001\u901f\u5ea6\uff0c\u81f3\u591a\u6709 $2(n-1)$ \u5bf9\uff08\u81f3\u591a\u662f\u56e0\u4e3a\u4f1a\u6709\u901f\u5ea6\u76f8\u540c\u7684\u7c92\u5b50\uff09\uff0c\u6309\u65f6\u95f4\u6392\u5e8f\u3002\n\n\u8fd9\u91cc\u7528 0 \u8868\u793a\u5411\u5de6\uff0c1 \u8868\u793a\u5411\u53f3\u3002\n\n---------\n\n\u4e0b\u9762\u8bbe $book_{i,d1,d2}$ \u8868\u793a $i,i+1$ \u80fd\u5426\u5206\u522b\u5f80 $d1,d2$ \u65b9\u5411\u8d70\u3002\n\n\u4e4b\u524d\u6211\u4eec\u5df2\u7ecf\u9884\u5904\u7406\u51fa\u4e86\u6240\u6709\u80fd\u591f\u53d1\u751f\u78b0\u649e\u7684\u7c92\u5b50\u5bf9\uff0c\u73b0\u5728\u6309\u7167\u65f6\u95f4\u6392\u5e8f\uff0c\u5bf9\u4e8e\u4e00\u5bf9\u7c92\u5b50\u5bf9\uff0c\u5982\u679c\u6211\u4eec\u9700\u8981\u8fd9\u5bf9\u7c92\u5b50\u5bf9\u6700\u65e9\u53d1\u751f\u78b0\u649e\uff0c\u90a3\u4e48\u5728\u8fd9\u5bf9\u7c92\u5b50\u5bf9\u524d\u9762\u7684\u7c92\u5b50\u5bf9\u90fd\u4e0d\u80fd\u53d1\u751f\u78b0\u649e\uff0c\u4e5f\u5c31\u662f\u5c06\u76f8\u5e94\u7684\u8fd0\u52a8\u5728 $book$ \u91cc\u9762\u7981\u6389\u3002\n\n\u5f00\u5934\u8bf4\u4e86\uff0c\u8fd9\u662f\u9053\u671f\u671b DP \u9898\uff0c\u8003\u8651\u8bbe\u8ba1\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n\u8bbe $f_{i,0/1}$ \u8868\u793a\u5f53\u524d\u505a\u5230\u7b2c $i$ \u4e2a\u7c92\u5b50\uff0c\u5e76\u4e14\u7b2c $i$ \u4e2a\u7c92\u5b50\u5411\u5de6/\u53f3\u79fb\u52a8\u65f6\u7684\u6982\u7387\uff0c\u90a3\u4e48\u53ef\u4ee5\u63a8\u51fa\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$$f_{i,0}=p_{i,0} \\times (f_{i-1,0} \\times !book_{i-1,0,0} \n+f_{i-1,1} \\times !book_{i-1,1,0})$$\n\n$$f_{i,1}=p_{i,1} \\times (f_{i-1,0} \\times !book_{i-1,0,1} \n+f_{i-1,1} \\times !book_{i-1,1,1})$$\n\n\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u88ab\u9009\u4e2d\u78b0\u649e\u7684\u7c92\u5b50\uff0c\u6700\u540e\u7b97\u5b8c\u6982\u7387\u4e4b\u540e\u518d\u7b97\u671f\u671b\u5c31\u597d\u4e86\u3002\n\n\u4f46\u662f\u5462\u5f88\u9057\u61be\uff0c\u6211\u4eec\u6bcf\u66f4\u6362\u4e00\u5bf9\u7c92\u5b50\u5bf9\uff0c\u90fd\u9700\u8981\u91cd\u65b0\u505a\u4e00\u904d DP\uff0c\u590d\u6742\u5ea6\u662f $O(n^2)$ \u7684\uff0c\u90a3\u4e48\u8981\u600e\u4e48\u4f18\u5316\u5462\uff1f\n\n---------\n\n\u8fd9\u91cc\u91c7\u7528\u7ebf\u6bb5\u6811\u4f18\u5316\u3002\n\n\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u8282\u70b9 $p$\uff0c\u8bbe\u5176\u7ef4\u62a4 $[l(p),r(p)]$\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a $p_{0/1,0/1}$\uff0c\u8868\u793a\u5176\u5de6\u7aef\u70b9\u4e0e\u53f3\u7aef\u70b9\u8d70\u7684\u65b9\u5411\u4e3a $0/1,0/1$ \u65f6**\u6240\u6709\u7c92\u5b50\u90fd\u4e0d\u78b0\u649e**\u7684\u6982\u7387\u3002\n\n\u5f53\u6211\u4eec\u5728\u66f4\u6362\u4e00\u5bf9\u7c92\u5b50\u5bf9\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u8fd9\u5bf9\u7c92\u5b50\u5bf9\u505a\u51fa\u9650\u5236\uff1a\u8fd9\u5bf9\u7c92\u5b50\u5bf9\u6240\u8d70\u7684\u65b9\u5411\u4e0d\u80fd\u8d70\u3002\n\n\u56e0\u6b64\u6211\u4eec\u5728 $book$ \u4e0a\u9762\u6253\u4e0a\u6807\u8bb0\u4e4b\u540e\uff0c\u81ea\u5e95\u5411\u4e0a\u66f4\u65b0\u7ebf\u6bb5\u6811\u7684\u503c\uff0c\u5177\u4f53\u800c\u8a00\u5c31\u662f\u627e\u5230\u7b2c\u4e00\u4e2a\u4ee5\u5f53\u524d\u7c92\u5b50\u5bf9\u4e3a\u5206\u754c\u7ebf\u7684\u8282\u70b9\uff0c\u5411\u4e0a\u7ef4\u62a4\u3002\n\n\u90a3\u4e48\u6b64\u65f6\u6839\u8282\u70b9\u5c31\u7ef4\u62a4\u4e86\u6240\u6709\u7c92\u5b50\u5bf9\u5747\u4e0d\u78b0\u649e\u7684\u6982\u7387\u3002\n\n\u8fd9\u91cc\u505a\u4e00\u4e2a\u5bb9\u65a5\uff1a\u7b2c $i$ \u5bf9\u7c92\u5b50\u78b0\u649e\u7684\u6982\u7387 = \u524d $i-1$ \u5bf9\u7c92\u5b50\u5747\u4e0d\u78b0\u649e\u7684\u6982\u7387 - \u524d $i$ \u5bf9\u7c92\u5b50\u5747\u4e0d\u78b0\u649e\u7684\u6982\u7387\u3002\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u77e5\u9053\u7b2c $i$ \u5bf9\u7c92\u5b50\u78b0\u649e\u7684\u6982\u7387\u4e86\uff0c\u7136\u540e\u7b97\u671f\u671b\u5c31\u597d\u3002\n\n---------\n\n\u51e0\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u7ec6\u8282\u4ee3\u7801\u91cc\u9762\u5df2\u7ecf\u6709\u6ce8\u91ca\u4e86\u3002\n\nCode\uff1a\n\n```cpp\n/*\n========= Plozia =========\n    Author:Plozia\n    Problem:CF1286D LCC\n    Date:2021/6/15\n========= Plozia =========\n*/\n\n#include <bits/stdc++.h>\n\ntypedef long long LL;\nconst int MAXN = 1e5 + 10;\nconst LL P = 998244353;\nint n, cnta;\nLL x[MAXN], v[MAXN], pro[MAXN][2], ans, ys[MAXN], inv;\nbool book[MAXN][2][2];\n\nstruct node\n{\n    int u, d1, d2;\n    LL x, v;\n}a[MAXN << 1];\n\nstruct node2\n{\n    int l, r;\n    LL p[2][2];\n}tree[MAXN << 2];\n\nint Read()\n{\n    int sum = 0, fh = 1; char ch = getchar();\n    for (; ch < '0' || ch > '9'; ch = getchar()) fh -= (ch == '-') << 1;\n    for (; ch >= '0' && ch <= '9'; ch = getchar()) sum = (sum << 3) + (sum << 1) + (ch ^ 48);\n    return sum * fh;\n}\nint Max(int fir, int sec) { return (fir > sec) ? fir : sec; }\nint Min(int fir, int sec) { return (fir < sec) ? fir : sec; }\nLL ksm(LL aa, LL bb, LL P)\n{\n    LL ans = 1 % P;\n    for (; bb; bb >>= 1, aa = aa * aa % P)\n        if (bb & 1) ans = ans * aa % P;\n    return ans;\n}\nbool cmp(const node &fir, const node &sec) { return (fir.x * sec.v) < (sec.x * fir.v); }\n//\u8fd9\u91cc\u4e0d\u63a8\u8350\u76f4\u63a5\u4f7f\u7528 double \u9664\uff0c\u53ef\u80fd\u4f1a\u5931\u7cbe\u5ea6\u3002\n\nvoid Update(int p)\n{\n    int mid = (tree[p].l + tree[p].r) >> 1;\n    for (int firx = 0; firx < 2; ++firx)\n        for (int firy = 0; firy < 2; ++firy)\n        {\n            tree[p].p[firx][firy] = 0;\n            for (int secx = 0; secx < 2; ++secx)\n                for (int secy = 0; secy < 2; ++secy)\n                    if (!book[mid][secx][secy]) ((tree[p].p[firx][firy] += tree[p << 1].p[firx][secx] * tree[p << 1 | 1].p[secy][firy] % P) >= P) ? (tree[p].p[firx][firy] %= P) : 0;\n        }\n}\n\nvoid build(int p, int l, int r)\n{\n    tree[p].l = l, tree[p].r = r;\n    if (l == r) { tree[p].p[0][0] = pro[l][0]; tree[p].p[1][1] = pro[l][1]; return ; }\n    int mid = (l + r) >> 1; ys[mid] = p;\n    build(p << 1, l, mid); build(p << 1 | 1, mid + 1, r);\n    Update(p);\n}\n\nint main()\n{\n    n = Read(); inv = ksm(100, P - 2, P);//\u6ce8\u610f\u8fd9\u91cc\u7684 inv \u4e00\u5b9a\u8981\u5f00 long long\uff01\n    for (int i = 1; i <= n; ++i)\n    {\n        x[i] = Read(), v[i] = Read();\n        pro[i][1] = Read() * inv % P;\n        pro[i][0] = (1 - pro[i][1] + P) % P;\n        //\u5c0f\u5fc3\uff0c\u9898\u76ee\u4e2d\u662f\u8f93\u5165\u5411\u53f3\u8fb9\u8d70\u7684\u6982\u7387\n    }\n    for (int i = 1; i < n; ++i)\n    {\n        ++cnta; a[cnta] = (node){i, 1, 0, x[i + 1] - x[i], v[i + 1] + v[i]};\n        if (v[i] > v[i + 1]) { ++cnta; a[cnta] = (node){i, 1, 1, x[i + 1] - x[i], v[i] - v[i + 1]}; }\n        else if (v[i] < v[i + 1]) { ++cnta; a[cnta] = (node){i, 0, 0, x[i + 1] - x[i], v[i + 1] - v[i]}; }\n    }\n    std::sort(a + 1, a + cnta + 1, cmp); build(1, 1, n);\n    LL Last = 1;\n    for (int i = 1; i <= cnta; ++i)\n    {\n        book[a[i].u][a[i].d1][a[i].d2] = 1;\n        for (int j = ys[a[i].u]; j; j >>= 1) Update(j);\n        LL now = (tree[1].p[0][0] + tree[1].p[1][0] + tree[1].p[0][1] + tree[1].p[1][1]) % P;\n        ((ans += a[i].x * ksm(a[i].v, P - 2, P) % P * (Last - now + P) % P) >= P) ? (ans %= P) : 0;\n        //\u7b2c i \u6b21\u78b0\u649e\u7684\u6982\u7387 = \u524d i - 1 \u6b21\u4e0d\u78b0\u649e\u7684\u6982\u7387 - \u524d i \u6b21\u4e0d\u78b0\u649e\u7684\u6982\u7387\n        //\u6ce8\u610f\u968f\u65f6\u53d6\u6a21\uff0c\u53ef\u80fd\u4f60 WA \u4e86\u5c31\u662f\u5728\u67d0\u4e2a\u4f60\u4e0d\u6ce8\u610f\u7684\u5730\u65b9\u6ca1\u6709\u53d6\u6a21\n        Last = now;\n    }\n    printf(\"%lld\\n\", ans); return 0;\n}\n```\n\n---------\n\nSummary\uff1a\n\n\u597d\u9898\uff01\n\n\u672c\u9898\u8003\u9a8c\u5230\u4e86\u4ee5\u4e0b\u7b97\u6cd5\uff1a\n\n- \u6734\u7d20 DP \u65b9\u7a0b\u7684\u5efa\u7acb\uff08\u66f4\u52a0\u5177\u4f53\u7684\uff0c\u671f\u671b DP\uff09\n- \u7ebf\u6bb5\u6811\u4f18\u5316 DP\uff0c\u8fd9\u5176\u4e2d\u9700\u8981\u7ef4\u62a4\u4e00\u4e9b\u7279\u522b\u7684\u5f88\u5999\u7684\u4e1c\u897f\u3002",
        "postTime": 1624258006,
        "uid": 134000,
        "name": "Plozia",
        "ccfLevel": 7,
        "title": "CF1286D LCC \u9898\u89e3"
    },
    {
        "content": "\u5f88\u5bb9\u6613\u53d1\u73b0\u6700\u5c0f\u7684\u78b0\u649e\u65f6\u95f4\u4e00\u5b9a\u662f\u5728\u76f8\u90bb\u4e24\u4e2a\u7403\u4e4b\u95f4\u4ea7\u751f\u7684\uff0c\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u5c31\u53ef\u4ee5\u679a\u4e3e\u6240\u6709\u53ef\u80fd\u4ea7\u751f\u78b0\u649e\u7684\u60c5\u51b5\uff08\u603b\u60c5\u51b5\u6570\u662f $O(n)$ \u7684\uff09\uff0c\u5206\u522b\u8ba1\u7b97\u6b64\u60c5\u51b5\u51fa\u73b0\u7684\u6982\u7387\u518d\u4e58\u8fd9\u4e2a\u60c5\u51b5\u7684\u8017\u65f6\u5e76\u6c42\u548c\u5c31\u662f\u603b\u671f\u671b\u4e86\u3002\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u679a\u4e3e\u4e86\u4e00\u4e2a\u60c5\u51b5\u540e\u5982\u4f55\u5feb\u901f\u8ba1\u7b97\u6982\u7387\uff0c\u8fd9\u79cd\u60c5\u51b5\u7684\u51fa\u73b0\u9700\u8981\u6ee1\u8db3\u5c0f\u4e8e\u8fd9\u79cd\u60c5\u51b5\u7684\u6240\u6709\u78b0\u649e\u5168\u90fd\u4e0d\u51fa\u73b0\uff0c\u6240\u4ee5\u6211\u4eec\u5bb9\u6613\u60f3\u5230\u5148\u6309\u78b0\u649e\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u7136\u540e\u4f9d\u6b21\u679a\u4e3e\u3002\n\n\u8003\u8651\u73b0\u5728\u679a\u4e3e\u5230\u7684\u60c5\u51b5\u662f $i$\uff0c\u90a3\u4e48\u5bf9\u4e8e $\\forall j\\in [1,i-1]$\uff0c\u60c5\u51b5 $j$ \u662f\u4e0d\u80fd\u51fa\u73b0\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u628a\u5de6\u770b\u6210 $0$\uff0c\u628a\u53f3\u770b\u6210 $1$\uff0c$j$ \u60c5\u51b5\u5bf9\u5e94\u7684\u90a3\u4e24\u4e2a\u76f8\u90bb\u70b9\u4e0d\u80fd\u540c\u65f6\u53d6\u5230 $j$ \u60c5\u51b5\u91cc\u7684 $01$ \u5173\u7cfb\u3002\n\n\u8fd9\u5c31\u5f88\u5bb9\u6613\u60f3\u5230 Dp \u4e86\uff0c\u8bbe $f_{i,0/1}$ \u8868\u793a\u8003\u8651\u524d $i$ \u4e2a\u6570\uff0c$i$ \u5411\u5de6/\u53f3\u7684\u6982\u7387\uff0c\u8fb9\u754c $f_{0,0}=1$\uff0c\u8f6c\u79fb\u76f4\u63a5\u4e58 $p$\uff0c\u8981\u6ee1\u8db3\u4e00\u4e9b\u5f62\u5982 $i,i+1$ \u4e0d\u80fd\u9009\u5230 $01,10,11$ \u7684\u6761\u4ef6\u3002\n\n\u76f4\u63a5\u7528\u77e9\u9635\u4e58\u6cd5\u4f18\u5316 Dp\uff0c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u77e9\u9635\uff0c\u6bcf\u6b21\u679a\u4e3e\u5230\u4e00\u79cd\u60c5\u51b5\u5c31\u5148\u5f3a\u5236\u94a6\u5b9a\u8fd9\u79cd\u60c5\u51b5\u51fa\u73b0\uff0c\u7136\u540e\u7b97\u5b8c\u7b54\u6848\u540e\uff0c\u5f3a\u5236\u94a6\u5b9a\u8fd9\u79cd\u60c5\u51b5\u4e0d\u80fd\u518d\u51fa\u73b0\uff0c\u590d\u6742\u5ea6 $O(2^3n\\log n)$\uff0c\u4ee3\u7801\u5f88\u597d\u5b9e\u73b0\uff0c\u4e5f\u6ca1\u6709\u592a\u591a\u7ec6\u8282\u3002\n\n~~\u8fde\u6211\u8fd9\u79cd\u83dc\u9e21\u90fd\u80fd\u505a\u51faCF3100\uff1f\u4e00\u5b9a\u662f\u6076\u8bc4~~\n\n```cpp\n#include<bits/stdc++.h>\n#define N 100005\nusing namespace std;\nconst int mod=998244353,inv100=828542813;\nint n,X[N],v[N],p[N],cnt,ans;\nstruct node {\n\tint s,v,x,opt;\n\tnode(){}\n\tnode(int S,int V,int X,int OPT) {s=S,v=V,x=X,opt=OPT;}\n\tbool operator<(node a)const{return 1ll*s*a.v<1ll*v*a.s;}\n} a[N*3];\nstruct Matrix {\n\tint c[2][2];\n\tMatrix(int A=0,int B=0,int C=0,int D=0){c[0][0]=A,c[0][1]=B,c[1][0]=C,c[1][1]=D;}\n\tMatrix operator*(Matrix a) const {\n\t\tMatrix ans;memset(ans.c,0,sizeof(ans.c));\n\t\tfor(int i=0; i<2; ++i)for(int j=0; j<2; ++j)for(int k=0; k<2; ++k)ans.c[i][k]=(ans.c[i][k]+1ll*c[i][j]*a.c[j][k])%mod;\n\t\treturn ans;\n\t}\n} t[N<<2],Ma[N];\ninline int read() {\n\tint s=0,f=0;\n\tchar ch=getchar();\n\twhile(ch<48||ch>57)f|=(ch=='-'),ch=getchar();\n\twhile(ch>47&&ch<58)s=(s<<1)+(s<<3)+(ch^48),ch=getchar();\n\treturn f?-s:s;\n}\ninline int Inv(int a,int n=mod-2,int ans=1) {for(; n; n>>=1,a=1ll*a*a%mod)if(n&1)ans=1ll*ans*a%mod;return ans;}\nvoid Build(int p,int l,int r) {\n\tif(l==r)return t[p]=Ma[l],void();\n\tint mid=(l+r)>>1;Build(p<<1,l,mid),Build(p<<1|1,mid+1,r),t[p]=t[p<<1]*t[p<<1|1];\n}\nvoid Change(int p,int l,int r,int x) {\n\tif(l==r)return t[p]=Ma[x],void();\n\tint mid=(l+r)>>1;((x<=mid)?Change(p<<1,l,mid,x):Change(p<<1|1,mid+1,r,x)),t[p]=t[p<<1]*t[p<<1|1];\n}\nint main() {\n\tn=read();\n\tfor(int i=1; i<=n; ++i)X[i]=read(),v[i]=read(),p[i]=1ll*read()*inv100%mod;\n\tfor(int i=1; i<n; ++i) {\n\t\tif(v[i]+v[i+1]>0)a[++cnt]=node(X[i+1]-X[i],v[i]+v[i+1],i,0);\n\t\tif(v[i]-v[i+1]>0)a[++cnt]=node(X[i+1]-X[i],v[i]-v[i+1],i,1);\n\t\tif(v[i+1]-v[i]>0)a[++cnt]=node(X[i+1]-X[i],v[i+1]-v[i],i,2);\n\t} sort(a+1,a+cnt+1);\n\tfor(int i=1; i<=n; ++i)Ma[i-1]=Matrix(mod+1-p[i],p[i],mod+1-p[i],p[i]);Build(1,0,n-1);\n\tfor(int i=1; i<=cnt; ++i) {\n\t\tMatrix t1=Ma[a[i].x],t2(0,0,0,0);\n\t\tif(a[i].opt==0)t2.c[1][0]=mod+1-p[a[i].x+1],t1.c[1][0]=0;\n\t\tif(a[i].opt==1)t2.c[1][1]=p[a[i].x+1],t1.c[1][1]=0;\n\t\tif(a[i].opt==2)t2.c[0][0]=mod+1-p[a[i].x+1],t1.c[0][0]=0;\n\t\tMa[a[i].x]=t2,Change(1,0,n-1,a[i].x);\n\t\tans=(ans+1ll*a[i].s*Inv(a[i].v)%mod*(t[1].c[0][0]+t[1].c[0][1]))%mod;\n\t\tMa[a[i].x]=t1,Change(1,0,n-1,a[i].x);\n\t} cout<<ans;\n\treturn 0;\n}\n```",
        "postTime": 1623466443,
        "uid": 112569,
        "name": "Time_tears",
        "ccfLevel": 9,
        "title": "CF1286D LCC"
    },
    {
        "content": "# \u9898\u89e3 CF1286D \u3010LCC\u3011\n[$\\mathfrak{View\\space it\\space on\\space my\\space Blog}$](https://blog.seniorious.cc/2020/CF-1286D/)\n\n## \u601d\u8def\n\u5bb9\u6613\u8bc1\u660e\uff0c\u7b2c\u4e00\u6b21\u78b0\u649e\u7684\u7c92\u5b50\u521d\u59cb\u4f4d\u7f6e\u662f\u76f8\u90bb\u7684\uff0c\u8003\u8651\u94a6\u5b9a\u4e00\u5bf9\u7c92\u5b50\u7684\u8fd0\u52a8\u65b9\u5411\uff0c\u8ba1\u7b97\u5728\u5b83\u4eec\u76f8\u649e\u524d\uff0c\u5176\u4ed6\u7c92\u5b50\u90fd\u4e0d\u76f8\u649e\u7684\u6982\u7387\n\n\u8bbe $f_{i,j,0/1,0/1}$ \u4e3a\u7b2c $i$ \u5230 $j$ \u4e2a\u7c92\u5b50\uff0c\u7b2c $i-1$ \u4e2a\u5411\u5de6/\u53f3\uff0c\u7b2c $j$ \u4e2a\u5411\u5de6/\u53f3\uff0c\u6ee1\u8db3\u5728\u94a6\u5b9a\u7c92\u5b50\u76f8\u649e\u524d\u4e0d\u76f8\u649e\u7684\u6982\u7387\uff08\u53ef\u4ee5\u4eba\u4e3a\u6dfb\u52a0\u4e00\u4e2a\u901f\u5ea6\u65e0\u7a77\u5927\uff0c\u5411\u5de6\u8fd0\u52a8\u7684\u7c92\u5b50 $0$\uff09\uff0c\u4e8e\u662f\u7b54\u6848\u4e3a $f_{1,n,0,0}+f_{1,n,0,1}$\n\n\u53d1\u73b0\u8f6c\u79fb\u662f\u8fd9\u6837\u7684\uff1a$f_{i,j,s_1,s_2}=\\sum_{s_3}f_{i,k,s_1,s_3}f_{k,j,s_3,s_2}$\uff0c\u5176\u4e2d $k$ \u53ef\u4ee5\u4efb\u53d6\uff0c\u663e\u7136\u662f\u4e2a\u77e9\u9635\u4e58\u6cd5\u7684\u5f62\u5f0f\n\n\u8bbe\u7b2c $i$ \u4e2a\u7c92\u5b50\u7684\u77e9\u9635\u4e3a $M_i$\uff0c\u82e5 $i-1$ \u5411\u5de6\uff0c$i$ \u5411\u5de6\u4f1a\u5728\u94a6\u5b9a\u524d\u76f8\u649e\uff0c\u5219 $M_{i,0,0}=0$\uff0c\u5426\u5219 $M_{i,0,0}=1-p_i$\uff0c\u5176\u4ed6\u60c5\u51b5\u7c7b\u4f3c\n\n\u8003\u8651\u5c06\u6240\u6709\u53ef\u80fd\u76f8\u649e\u7684\u60c5\u5f62\u6309\u76f8\u649e\u65f6\u95f4\u5347\u5e8f\u6392\u5e8f\uff0c\u5904\u7406\u65f6\u5c06 $M_i$ \u53ea\u4fdd\u7559\u94a6\u5b9a\u7684\u4e00\u79cd\u60c5\u51b5\uff0c\u5176\u4ed6\u7684\u7f6e\u4e3a $0$\uff0c\u5c06\u6240\u6709\u77e9\u9635\u76f8\u4e58\u7edf\u8ba1\u7b54\u6848\uff0c\u518d\u8fd8\u539f $M_i$ \u5e76\u5c06\u94a6\u5b9a\u7684\u60c5\u51b5\u7f6e\u4e3a $0$\uff08\u4e4b\u540e\u7684\u60c5\u5f62\u4e2d\u8fd9\u79cd\u8fd0\u52a8\u65b9\u5411\u4f1a\u5148\u78b0\u649e\u662f\u4e0d\u6ee1\u8db3\u6761\u4ef6\u7684\uff09\n\n\u5355\u70b9\u4fee\u6539\uff0c\u5168\u5c40\u67e5\u8be2\u77e9\u9635\u4e58\u6cd5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\operatorname{O}(n\\log n)$\n\n## \u4ee3\u7801\n```cpp\nconst int N = 100005;\nconst int Mod = 998244353;\n\nclass Matrix {\npublic:\n  int a[2][2];\n  Matrix() {\n    a[0][0] = a[0][1] = a[1][0] = a[1][1] = 0;\n  }\n  Matrix & operator =(Matrix i) {\n    a[0][0] = i.a[0][0];\n    a[0][1] = i.a[0][1];\n    a[1][0] = i.a[1][0];\n    a[1][1] = i.a[1][1];\n    return *this;\n  }\n  Matrix operator *(Matrix i) {\n    Matrix ans;\n    ans.a[0][0] = (a[0][0] * 1ll * i.a[0][0] + a[0][1] * 1ll * i.a[1][0]) % Mod;\n    ans.a[0][1] = (a[0][0] * 1ll * i.a[0][1] + a[0][1] * 1ll * i.a[1][1]) % Mod;\n    ans.a[1][0] = (a[1][0] * 1ll * i.a[0][0] + a[1][1] * 1ll * i.a[1][0]) % Mod;\n    ans.a[1][1] = (a[1][0] * 1ll * i.a[0][1] + a[1][1] * 1ll * i.a[1][1]) % Mod;\n    return ans;\n  }\n};\nclass Query {\npublic:\n  int s, v, x, a, b;\n  Query(int s = 0, int v = 0, int x = 0, int a = 0, int b = 0) : s(s), v(v), x(x), a(a), b(b) {}\n  bool operator<(Query i) {\n    return s * 1ll * i.v < i.s * 1ll * v;\n  }\n};\n\nint pow(int a, int b, int m);\nvoid build(int x, int xl, int xr);\nvoid update(int x, int xl, int xr, int ux);\n\nMatrix sum[N << 2];\nMatrix m[N];\nint x[N], v[N], p[N];\nQuery q[N << 1];\nint cnt;\nint n;\n\nint main () {\n  read(n);\n  int iv = pow(100, Mod - 2, Mod);\n  for (int i = 1; i <= n; ++i) {\n    read(x[i]), read(v[i]), read(p[i]);\n    p[i] = p[i] * 1ll * iv % Mod;\n  }\n  for (int i = 1; i <= n; ++i) {\n    m[i].a[0][0] = m[i].a[1][0] = (Mod + 1 - p[i]) % Mod;\n    m[i].a[0][1] = m[i].a[1][1] = p[i];\n  }\n  build(1, 1, n);\n  for (int i = 2; i <= n; ++i) {\n    q[++cnt] = Query(x[i] - x[i - 1], v[i] + v[i - 1], i, 1, 0);\n    if (v[i] > v[i - 1]) {\n      q[++cnt] = Query(x[i] - x[i - 1], v[i] - v[i - 1], i, 0, 0);\n    }\n    if (v[i] < v[i - 1]) {\n      q[++cnt] = Query(x[i] - x[i - 1], v[i - 1] - v[i], i, 1, 1);\n    }\n  }\n  std::sort(q + 1, q + cnt + 1);\n  int res = 0;\n  for (int i = 1; i <= cnt; ++i) {\n    Matrix m1, m2;\n    m1 = m[q[i].x];\n    m2.a[q[i].a][q[i].b] = m1.a[q[i].a][q[i].b];\n    m[q[i].x] = m2;\n    update(1, 1, n, q[i].x);\n    int tim = q[i].s * 1ll * pow(q[i].v, Mod - 2, Mod) % Mod;\n    res = (res + (sum[1].a[0][0] + sum[1].a[0][1]) * 1ll * tim % Mod) % Mod;\n    m1.a[q[i].a][q[i].b] = 0;\n    m[q[i].x] = m1;\n    update(1, 1, n, q[i].x);\n  }\n  write(res), EL;\n  return 0;\n}\n\nint pow(int a, int b, int m) {\n  int ans = 1, now = a;\n  while (b) {\n    if (b & 1) {\n      ans = ans * 1ll * now % m;\n    }\n    now = now * 1ll * now % m;\n    b >>= 1;\n  }\n  return ans;\n}\nvoid pushup(int x) {\n  sum[x] = sum[x << 1] * sum[x << 1 | 1];\n}\nvoid build(int x, int xl, int xr) {\n  if (xl == xr) {\n    sum[x] = m[xl];\n    return;\n  }\n  int xm = (xl + xr) >> 1;\n  build(x << 1, xl, xm);\n  build(x << 1 | 1, xm + 1, xr);\n  pushup(x);\n}\nvoid update(int x, int xl, int xr, int ux) {\n  if (xl == xr) {\n    sum[x] = m[xl];\n    return;\n  }\n  int xm = (xl + xr) >> 1;\n  if (ux <= xm) {\n    update(x << 1, xl, xm, ux);\n  } else {\n    update(x << 1 | 1, xm + 1, xr, ux);\n  }\n  pushup(x);\n}\n```\n",
        "postTime": 1602774314,
        "uid": 25251,
        "name": "moongazer",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1286D \u3010LCC\u3011"
    }
]