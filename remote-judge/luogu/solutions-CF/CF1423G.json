[
    {
        "content": "## \u524d\u8a00\n\\*3500\uff1f\\*800\uff01\n\n\u6211\u7b2c\u4e00\u6b21\u770b\u5230\u8fd9\u4e2a\u9898\u662f\u6d1b\u8c37\u7701\u9009\u8ba1\u5212\uff0c\u7b2c\u4e8c\u6b21\u662f\u6821\u5185\u6a21\u62df\u8d5b\uff0c\u4ee4\u4eba\u9707\u64bc\u3002\n## \u601d\u8def\n\u9996\u5148\u6211\u4eec\u53d1\u73b0\u5148\u9ed8\u8ba4\u6bcf\u4e2a\u5b50\u4e32\u90fd\u6709\u6240\u6709\u989c\u8272\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u79cd\u5143\u7d20\u7ef4\u62a4\u5b83\u7a7a\u7684\u6781\u957f\u8fde\u7eed\u6bb5\u5373\u53ef\u3002\n\n\u4e00\u4e2a\u957f\u5ea6\u4e3a $x$ \u7684\u6781\u957f\u8fde\u7eed\u6bb5\u4f1a\u5728\u4e00\u4e2a\u8be2\u95ee\u4e2d\u8d21\u732e $\\max(0,x-k+1)$\uff0c\u5982\u679c\u6211\u4eec\u5df2\u77e5\u957f\u5ea6\u4e3a $x$ \u7684\u8fde\u7eed\u6bb5\u6570\u91cf\uff0c\u53ef\u4ee5\u7528\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u3002\n\n\u7136\u540e\u8003\u8651\u4fee\u6539\uff0c\u770b\u5230\u53ea\u6709\u533a\u95f4\u63a8\u5e73\u679c\u65ad ODT\u3002ODT \u4e4b\u540e\u9700\u8981\u5bf9\u4e8e\u6bcf\u79cd\u5143\u7d20\u7ef4\u62a4\u4e00\u4e2a ``std::set``\uff0c\u652f\u6301\u63d2\u5165\u548c\u5220\u9664\u533a\u95f4\u4e4b\u540e\u7ef4\u62a4\u8fd9\u79cd\u989c\u8272\u7684\u8fde\u7eed\u6bb5\u60c5\u51b5\u3002\n\n\u6bcf\u6b21\u63d2\u5165\u5220\u9664\u533a\u95f4\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\log n)$\uff0c\u7136\u540e\u533a\u95f4\u6570\u91cf\u662f\u5747\u644a $O(n+m)$ \u4e2a\uff0c\u56e0\u6b64\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O((n+q)\\log n)$\uff0c\u5e38\u6570\u6bd4\u8f83\u5927\u3002\n\n\u8bb0\u5f97\u79bb\u6563\u5316\u989c\u8272\u3002\n## \u4ee3\u7801\n```cpp\n// Problem: G. Growing flowers\n// Contest: Codeforces - Bubble Cup 13 - Finals [Online Mirror, unrated, Div. 1]\n// URL: https://codeforces.com/problemset/problem/1423/G\n// Memory Limit: 256 MB\n// Time Limit: 4000 ms\n// \n// Powered by CP Editor (https://cpeditor.org)\n\n//And in that light,I find deliverance.\n#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native\")\nusing namespace std;\n#define ll long long\ninline int read(){\n   int s=0,w=1;\n   char ch=getchar();\n   while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n   while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n   return s*w;\n}\nstruct Node{\n    int l,r,v;\n    Node(int a=-1,int b=-1,int c=0){l=a,r=b,v=c;}\n    bool operator<(const Node&a)const{return l<a.l;}\n};\nset<Node> st,s[200003];\nset<Node>::iterator split(int pos)\n{\n    auto it=st.lower_bound(Node(pos));\n    if (it!=st.end()&&it->l==pos) return it;\n    --it;Node tmp=*it;st.erase(it),\n    s[tmp.v].erase(tmp),s[tmp.v].insert(Node(tmp.l,pos-1,tmp.v)),\n    s[tmp.v].insert(Node(pos,tmp.r,tmp.v)),\n    st.insert(Node(tmp.l,pos-1,tmp.v));\n    return st.insert(Node(pos,tmp.r,tmp.v)).first; \n}\nll t1[100003];\nint t0[100003];\nint n=read(),m=read();\nvoid a0(int x,int k)\n{\n\twhile(x<=n) t0[x]+=k,x+=x&(-x);\n\treturn ;\n}\nvoid a1(int x,ll k)\n{\n\twhile(x<=n) t1[x]+=k,x+=x&(-x);\n\treturn ;\n}\nint q0(int x)\n{\n\tint r=0;\n\twhile(x) r+=t0[x],x-=x&(-x);\n\treturn r;\n}\nll q1(int x)\n{\n\tll r=0;\n\twhile(x) r+=t1[x],x-=x&(-x);\n\treturn r;\n}\nvoid ins(Node t)\n{\n\tint nxt=s[t.v].upper_bound(t)->l,pre=(--s[t.v].lower_bound(t))->r;\n\ta0(nxt-pre-1,-1),a1(nxt-pre-1,-nxt+pre+1),\n\t(pre+1!=t.l)&&(a0(t.l-pre-1,1),a1(t.l-pre-1,t.l-pre-1),0),\n\t(nxt-1!=t.r)&&(a0(nxt-t.r-1,1),a1(nxt-t.r-1,nxt-t.r-1),0),\n\ts[t.v].insert(t);\n}\nvoid del(Node t)\n{\n\tint nxt=s[t.v].upper_bound(t)->l,pre=(--s[t.v].lower_bound(t))->r;\n\ta0(nxt-pre-1,1),a1(nxt-pre-1,nxt-pre-1),\n\t(pre+1!=t.l)&&(a0(t.l-pre-1,-1),a1(t.l-pre-1,-t.l+pre+1),0),\n\t(nxt-1!=t.r)&&(a0(nxt-t.r-1,-1),a1(nxt-t.r-1,-nxt+t.r+1),0),\n\ts[t.v].erase(t);\n}\nvoid assign(int l,int r,int v)\n{\n\tauto itr=split(r+1),itl=split(l);\n\tfor(auto i=itl; i!=itr; ++i) del(*i);\n    st.erase(itl,itr),st.insert(Node(l,r,v)),ins(Node(l,r,v));\n}\nmap<int,int> mp;\nint cnt=0;\nint rcol()\n{\n\tint res=read();\n\tif(!mp[res]) mp[res]=++cnt;\n\treturn mp[res];\n}\nsigned main()\n{\n\tfor(int i=1; i<=n; ++i) s[i].insert(Node(-1,0)),s[i].insert(Node(n+1,n+2));\n\tst.insert(Node(-1,0,0)),st.insert(Node(n+1,n+2,0)),\n\ta0(n,n),a1(n,1ll*n*n);\n\tfor(int i=1,x; i<=n; ++i) x=rcol(),ins(Node(i,i,x)),st.insert(Node(i,i,x));\n\tfor(int op,l,r,x; m--;)\n\t{\n\t\top=read();\n\t\tif(op==1) l=read(),r=read(),x=rcol(),assign(l,r,x);\n\t\telse x=read(),printf(\"%lld\\n\",1ll*n*(n+1-x)-q1(n)+q1(x-1)+1ll*(q0(n)-q0(x-1))*(x-1));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1647503310,
        "uid": 111055,
        "name": "dead_X",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1423G"
    },
    {
        "content": "\u5148\u79bb\u6563\u5316\u989c\u8272\u3002\u8003\u8651\u5bf9\u6bcf\u79cd\u989c\u8272\u5355\u72ec\u6c42\u51fa\u7b54\u6848\u3002\u5bf9\u4e8e\u989c\u8272 $x$\uff0c\u53ef\u4ee5\u7528\u603b\u65b9\u6848\u6570 $n-k+1$ \u51cf\u53bb\u4e00\u4e2a $x$ \u90fd\u4e0d\u5305\u542b\u7684\u533a\u95f4\u6570\u91cf\u3002\u5bf9\u4e8e\u8fd9\u4e2a\uff0c\u5047\u8bbe\u76f8\u90bb\u4e24\u4e2a\u989c\u8272 $x$ \u7684\u4e0b\u6807\u5206\u522b\u4e3a $l,r$\uff0c\u90a3\u4e48\u4e2d\u95f4\u90a3\u6bb5\u6781\u957f\u4e0d\u542b $x$ \u7684\u533a\u95f4\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5c31\u662f $-\\max(0,r-l-k)$\u3002\n\n\u770b\u5230\u533a\u95f4\u63a8\u5e73\uff0c\u8003\u8651 ODT \u7ef4\u62a4\uff0c\u533a\u95f4\u63a8\u5e73\u53ef\u8f6c\u5316\u4e3a\u82e5\u5e72\u52a0\u5165\u6216\u5220\u9664\u6781\u957f\u4e0d\u542b\u67d0\u79cd\u989c\u8272\u7684\u8fde\u7eed\u6bb5\u7684\u64cd\u4f5c\u3002\u5bf9\u4e8e\u4e00\u4e2a\u56fa\u5b9a\u7684 $l,r$\uff0c\u5b83\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u662f\u4e00\u4e2a\u7b49\u5dee\u6570\u5217\u7684\u5f62\u5f0f\uff0c\u5373\u5bf9 $k=1$ \u6709 $-(r-l-1)$ \u8d21\u732e\uff0c\u5bf9 $k=2$ \u6709 $-(r-l-2)$ \u8d21\u732e\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u8be2\u95ee\u76f4\u63a5\u5728\u7ebf\u6bb5\u6811\u4e0a\u67e5\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O((n+q) \\log n)$\uff0c\u5e26\u4e2a `set` \u7684\u5e38\u6570\u3002\n\n[Code](https://codeforces.com/contest/1423/submission/192543318)",
        "postTime": 1675727927,
        "uid": 275273,
        "name": "zltqwq",
        "ccfLevel": 0,
        "title": "CF1423G \u9898\u89e3"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://reclouds.github.io/post/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91CF1423G%20Growing%20Flowers%20%E9%A2%98%E8%A7%A3.html)\n\n### \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u5b58\u5728\u4e00\u79cd\u989c\u8272\uff0c\u8981\u6c42\u652f\u6301\u4e0b\u5217\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n1. \u7ed9\u5b9a\u5b50\u6bb5 $[l, r]$ \u548c\u989c\u8272 $x$, \u5c06\u8be5\u5b50\u6bb5\u5168\u90e8\u53d8\u4e3a\u989c\u8272 $x$\uff1b\n\n2. \u7ed9\u5b9a $k$\uff0c\u6c42\u6240\u6709\u957f\u5ea6\u4e3a $k$ \u7684\u5b50\u6bb5\u5185\u4e0d\u540c\u989c\u8272\u7684\u6570\u91cf\u7684\u548c\u3002\n\n### \u9898\u89e3\n\n\u4ee5\u4e0b\u79f0\u4e00\u4e2a\u989c\u8272\u76f8\u540c\u7684\u8fde\u7eed\u6781\u957f\u5b50\u6bb5\u4e3a\u989c\u8272\u6bb5\u3002\n\n\u9996\u5148\u9700\u8981\u77e5\u9053\u4e00\u4e2a\u5b9a\u7406\uff1a\u5982\u679c\u6211\u4eec\u80fd\u591f $\\mathcal{O}(1)$ \u5730\u52a0\u5165\u6216\u5220\u9664\u4e00\u4e2a\u989c\u8272\u6bb5\uff0c\u90a3\u4e48 $m$ \u6b21 $1$ \u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\mathcal{O}(n + m)$ \u7684\u3002\n\n\u8bc1\u660e\uff1a\n\n\u5b9e\u9645\u4e0a\u662f\u8bc1\u660e\u603b\u5171\u52a0\u5165\u6216\u5220\u9664\u7684\u989c\u8272\u6bb5\u6570\u91cf\u662f $\\mathcal{O}(n + m)$ \u7684\u3002\n\n\u6bcf\u4e00\u6b21 $1$ \u64cd\u4f5c\uff0c\u6211\u4eec\u5047\u8bbe\u53ef\u4ee5 $\\mathcal{O}(1)$ \u627e\u51fa\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\u5206\u522b\u6240\u5728\u7684\u989c\u8272\u6bb5 $L$ \u548c $R$\uff0c\u90a3\u4e48\u6211\u4eec\u5c06\u4f1a\u628a $L$ \u5230 $R$ \u4e4b\u95f4\u5305\u62ec\u8fd9\u4e24\u8005\u7684\u6240\u6709\u989c\u8272\u6bb5\u5168\u90e8\u5220\u9664\uff0c\u7136\u540e\u52a0\u5165\u989c\u8272\u6bb5 $[l, r]$\uff0c\u518d\u8865\u9f50\u4e00\u5f00\u59cb\u5220\u9664\u591a\u4e86\u7684\u90e8\u5206\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u4e00\u6b21\u64cd\u4f5c\u81f3\u591a\u4f1a\u589e\u52a0 $3$ \u4e2a\u989c\u8272\u6bb5\uff0c\u800c\u663e\u7136\u663e\u7136\u521d\u59cb\u65f6\u7684\u989c\u8272\u6bb5\u6570\u662f $\\mathcal{O}(n)$\uff0c\u6240\u4ee5\u603b\u5171\u5b58\u5728\u8fc7\u7684\u989c\u8272\u6bb5\u6570\u91cf $\\mathcal{O}(n + m)$ \u7684\u3002\n\n\u800c\u6bcf\u4e00\u4e2a\u989c\u8272\u6bb5\u6700\u591a\u88ab\u5220\u9664\u4e00\u6b21\uff0c\u56e0\u6b64\u5220\u9664\u6389\u7684\u989c\u8272\u6bb5\u6570\u91cf\u4e5f\u662f $\\mathcal{O}(n + m)$ \u7684\u3002\n\n\u8bc1\u6bd5\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u975e\u5e38\u76f4\u63a5\u5730\u7ef4\u62a4\u989c\u8272\u6bb5\uff0c\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002\n\n\u7136\u800c $\\mathcal{O}(1)$ \u505a\u5230\u989c\u8272\u6bb5\u7684\u63d2\u5165\u548c\u5220\u9664\u662f\u5f88\u96be\u7684\uff08\u81f3\u5c11\u7b14\u8005\u5e76\u6ca1\u6709\u60f3\u5230\u65b9\u6cd5\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7528 ```set``` \u7ef4\u62a4\u3002\u7ef4\u62a4\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\mathcal{O}((n + m) \\log_2 n)$ \u7684\uff0c\u5e76\u4e14\u8fd9\u4e2a $\\log$ \u4e0d\u4f1a\u4e0e\u5176\u5b83\u90e8\u5206\uff08\u7279\u6307\u4e0b\u6587\u7ef4\u62a4\u7b54\u6848\u7684\u90e8\u5206\uff09\u51b2\u7a81\u3002\n\n------\n\n\u90a3\u4e48\u73b0\u5728\u7684\u95ee\u9898\u662f\uff1a\u6c42\u51fa\u4e00\u4e2a\u989c\u8272\u6bb5\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u3002\n\n\u4e4d\u4e00\u770b\uff0c\u6211\u4eec\u4f3c\u4e4e\u8981\u7ef4\u62a4\u6bcf\u4e2a\u4f4d\u7f6e\u5bf9\u6bcf\u4e00\u79cd $k$ \u7684\u8d21\u732e\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4f3c\u4e4e\u4e0d\u592a\u53ef\u4ee5\u63a5\u53d7\u3002\n\n\u4f46\u5b9e\u9645\u4e0a\u6211\u4eec\u901a\u8fc7\u5206\u6790\uff0c\u53ef\u4ee5\u53d1\u73b0\u8d21\u732e\u8981\u4e48\u5448\u4e00\u6bb5\u76f8\u7b49\u7684\u6570\u7684\u5f62\u5f0f\uff0c\u8981\u4e48\u5448\u7b49\u5dee\u6570\u5217\u5f62\u5f0f\uff0c\u5e76\u4e14\u6211\u4eec\u4ec5\u9700\u652f\u6301\u5355\u70b9\u67e5\u8be2\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u8d21\u732e\u5dee\u5206\u4e00\u4e0b\uff0c\u8be2\u95ee\u65f6\u6c42\u524d\u7f00\u548c\u5373\u53ef\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u5177\u4f53\u5206\u6790\u7684\u73af\u8282\u3002\n\n\u6211\u4eec\u94a6\u5b9a\u5728\u6bb5\u4e2d\uff0c\u6bcf\u79cd\u989c\u8272\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u624d\u4f1a\u9020\u6210\u5b9e\u8d28\u6027\u7684\u8d21\u732e\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u4f4d\u7f6e $pos$\uff0c\u6211\u4eec\u8003\u8651\u8ba1\u7b97\u5b83\u5bf9 $k$ \u7684\u8d21\u732e\uff1a\n\n\u5728\u5305\u542b $pos$ \u7684\u6240\u6709\u957f\u5ea6\u4e3a $k$ \u7684\u5b50\u6bb5\u4e2d\uff0c\u53f3\u7aef\u70b9\u6700\u53f3\u4f1a\u5ef6\u4f38\u5230 $\\min(n, pos + k - 1)$\uff0c\u56e0\u4e3a\u6781\u9650\u60c5\u51b5\u5c31\u662f\u5de6\u7aef\u70b9\u4e3a $pos$ \u7684\u60c5\u51b5\uff0c\u4f46\u662f\u53f3\u7aef\u70b9\u53c8\u4e0d\u80fd\u8d85\u8fc7 $n$\u3002\n\n\u5047\u8bbe\u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u7ef4\u62a4\u597d\u4e86 $pos$ \u7684\u989c\u8272\u5728 $pos$ \u4e4b\u524d\u7684\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e $pre$\uff08\u6ca1\u6709\u5219\u8bb0\u4e3a $0$)\uff0c\u90a3\u4e48\u5728\u5305\u542b $pos$ \u7684\u6240\u6709\u957f\u5ea6\u4e3a $k$ \u7684\u5b50\u6bb5\u4e2d\uff0c\u53f3\u7aef\u70b9\u6700\u5de6\u4f1a\u5ef6\u4f38\u5230 $\\max(pos, pre + k)$\uff0c\u56e0\u4e3a\u6781\u9650\u60c5\u51b5\u5c31\u662f\u53f3\u7aef\u70b9\u4e3a $pos$ \u7684\u60c5\u51b5\uff0c\u4f46\u662f\u5de6\u7aef\u70b9\u53c8\u5fc5\u987b\u5728 $pre$ \u53f3\u4fa7\uff08\u5426\u5219 $pos$ \u7684\u989c\u8272\u7684\u5b9e\u8d28\u6027\u8d21\u732e\u4e0d\u4f1a\u7531 $pos$ \u63d0\u4f9b\uff09\u3002\n\n(\u6ce8\u610f $pre$ \u5728\u4e0a\u9762\u7ef4\u62a4\u989c\u8272\u6bb5\u65f6\u53ef\u4ee5\u7ef4\u62a4\u3002)\n\n\u7efc\u4e0a\uff0c$pos$ \u7684\u8d21\u732e\u5373\u4e3a $\\min(n, pos + k - 1) - max(pos, pre + k) + 1$\u3002\u6ce8\u610f $k$ \u7684\u8303\u56f4\u4e3a $[1, n - pos]$\uff0c\u5426\u5219 $pos$ \u4f1a\u6709\u8d1f\u8d21\u732e\uff0c\u8fd9\u662f\u4e0d\u5b58\u5728\u7684\u3002\n\n\u628a\u8d21\u732e\u62c6\u5f00\uff0c\u53ef\u4ee5\u53d1\u73b0 $\\min$ \u548c $\\max$ \u7684\u90e8\u5206\u7531\u4e8e $k$ \u9012\u589e\uff0c\u6240\u4ee5\u8d21\u732e\u662f\u5448\u4e00\u6bb5\u7b49\u5dee\u6570\u5217\u548c\u4e00\u6bb5\u76f8\u7b49\u6570\u5217\u7684\u5f62\u5f0f\u7684\uff0c\u5dee\u5206\u540e\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8fd8\u9700\u8981\u5bf9\u989c\u8272\u6bb5\u4e2d $pos$ \u4ee5\u540e\u7684\u4f4d\u7f6e\u505a\u540c\u6837\u7684\u5206\u6790\u5417\uff1f\u5f53\u7136\u4e0d\u9700\u8981\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u989c\u8272\u6bb5\u4e2d $pos$ \u4ee5\u540e\u7684\u4f4d\u7f6e $pos'$ \u7684\u8d21\u732e\u5341\u5206\u7b80\u5355\uff0c\u56e0\u4e3a\u5305\u542b\u5b83\u7684\u5b50\u6bb5\u7684\u5de6\u7aef\u70b9\u5fc5\u987b\u5728 $pos'$ \u8fd9\u4e2a\u4f4d\u7f6e\u4e0a\uff0c\u6240\u4ee5\u5b83\u5bf9\u6240\u6709 $k \\in [1, n - pos' + 1]$ \u7684\u8d21\u732e\u5747\u4e3a $1$\u3002\n\n\u7a0d\u4f5c\u5206\u6790\uff0c\u53ef\u4ee5\u53d1\u73b0\u989c\u8272\u6bb5\u4e2d $pos$ \u4ee5\u540e\u7684\u4f4d\u7f6e\u5bf9 $k \\in [1, n - pos]$ \u7684\u603b\u8d21\u732e\u4e3a $\\min(n - pos - k + 1, len - 1)$\uff08\u5176\u4e2d $len$ \u8868\u793a\u989c\u8272\u6bb5\u957f\u5ea6\uff09\u3002\u7531\u4e8e $k$ \u9012\u589e\uff0c\u56e0\u6b64\u8fd9\u4e2a\u90e8\u5206\u7684\u8d21\u732e\u4ecd\u7136\u5448\u4e00\u6bb5\u7b49\u5dee\u6570\u5217\u548c\u4e00\u6bb5\u76f8\u7b49\u6570\u5217\u7684\u5f62\u5f0f\uff0c\u53ef\u4ee5\u7ee7\u7eed\u5dee\u5206\u540e\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u4e8e\u662f\u8fd9\u9898\u5c31\u505a\u5b8c\u4e86\uff0c\u4e0d\u8fc7\u5199\u8d77\u6765\u7ec6\u8282\u8fd8\u633a\u591a\u3002",
        "postTime": 1651066793,
        "uid": 183562,
        "name": "_ReClouds_",
        "ccfLevel": 7,
        "title": "CF1423G Growing Flowers \u9898\u89e3"
    }
]