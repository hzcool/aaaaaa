[
    {
        "content": "\u73b0\u573a\u8bd5\u56fe\u770b\u8fd9\u9053\u9898\u7ed3\u679c\u4ec0\u4e48\u601d\u8def\u90fd\u6ca1\u6709\u3002\n\n\u8003\u8651\u8bb0 $0$ \u4e3a $-1$\uff0c$1$ \u4e3a $+1$\uff0c\u8fd9\u6837\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u957f\u5ea6\u4e3a $|s|$ \u7684\u7531 $+1$ \u548c $-1$ \u7ec4\u6210\u7684\u5e8f\u5217\u3002\n\n\u7136\u540e\u5bf9\u8fd9\u4e2a\u5e8f\u5217\u505a\u4e00\u904d\u524d\u7f00\u548c\uff0c\u5e76\u8fde\u4e00\u6761 $s_i\\to s_{i+1}$ \u7684\u6709\u5411\u8fb9\uff0c\u8fd9\u6837\u53ef\u4ee5\u5f97\u5230\u4e00\u5f20\u56fe\uff0c\u4e00\u4e2a\u6b27\u62c9\u56de\u8def\u5c31\u5bf9\u5e94\u7740\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\n\n\u8003\u8651\u9898\u76ee\u4e2d\u90a3\u4e2a\u5947\u602a\u7684\u64cd\u4f5c\u7684\u672c\u8d28\u3002\u5047\u8bbe\u6211\u4eec\u5bf9\u533a\u95f4 $[l,r]$ \u8fdb\u884c\u64cd\u4f5c\u3002\u65e2\u7136 $[l,r]$ \u8981\u6c42 01 \u4e2a\u6570\u76f8\u7b49\uff0c\u90a3\u4e48\u80af\u5b9a\u6709 $s_{l-1}=s_r$\uff0c\u800c\u7ffb\u8f6c+\u53cd\u8f6c\u5b9e\u9645\u4e0a\u7b49\u4e8e\u5c06\u8fd9\u4e9b\u8fb9\u53cd\u5411\u3002\u6240\u4ee5\u5b9e\u9645\u4e0a\u8be5\u64cd\u4f5c\u7b49\u4ef7\u4e8e\u9009\u62e9\u4e00\u4e2a\u73af\u7136\u540e\u5c06\u73af\u4e0a\u6240\u6709\u8fb9\u53cd\u5411\u3002\n\n\u8fd9\u91cc\u9700\u8981\u89c2\u5bdf\u51fa\u4e00\u4e2a\u6027\u8d28\uff1a\u5c31\u662f\u64cd\u4f5c\u524d\u540e\uff0c\u539f\u56fe\u6240\u5305\u542b\u7684\u8fb9\u96c6 $E$ \u662f\u4e0d\u53d8\u7684\u3002\u56e0\u4e3a\u6bcf\u6b21\u64cd\u4f5c\u662f\u5c06\u8fb9\u53cd\u5411\uff0c\u6240\u4ee5\u5982\u679c\u628a\u6709\u5411\u8fb9\u6539\u4e3a\u65e0\u5411\u8fb9\uff0c\u90a3\u4e48\u8fb9\u96c6\u663e\u7136\u662f\u4e0d\u53d8\u7684\u3002\u53c8\u7531\u4e8e\u6211\u4eec\u64cd\u4f5c\u7684\u662f\u4e00\u4e2a\u73af\uff0c\u6240\u4ee5\u5bf9\u4e8e\u4e00\u6761\u8fb9 $(x,y)$\uff0c$x\\to y$ \u548c $y\\to x$ \u7684\u6b21\u6570\u662f\u4e00\u6837\u7684\uff0c\u6240\u4ee5 $x\\to y$ \u548c $y\\to x$ \u5728\u64cd\u4f5c\u524d\u540e\u51fa\u73b0\u6b21\u6570\u90fd\u662f\u76f8\u540c\u7684\u3002\n\n\u6709\u4e86\u8fd9\u4e2a\u6027\u8d28\uff0c\u6211\u4eec\u8fd8\u9700\u89c2\u5bdf\u51fa\u53e6\u4e00\u4e2a\u6027\u8d28\uff1a\u539f\u56fe\u4efb\u610f\u4e00\u6761\u6b27\u62c9\u56de\u8def\uff08\u8d77\u70b9\u548c\u7ec8\u70b9\u5fc5\u987b\u4e0e\u521d\u59cb\u76f8\u540c\uff09\u4ee3\u8868\u7684\u90fd\u53ef\u4ee5\u7531\u539f\u5b57\u7b26\u4e32\u8fdb\u884c\u4e00\u7cfb\u5217\u64cd\u4f5c\u5f97\u5230\u3002\u8fd9\u91cc\u697c\u4e0b\u7684\u9898\u89e3\u6ca1\u6709\u7ed9\u51fa\u8bc1\u660e\uff0c\u8fd9\u91cc\u7ed9\u51fa\u7b80\u7565\u7684\u8bc1\u660e\uff1a\u9996\u5148\u6211\u4eec\u5047\u8bbe\u539f\u8def\u5f84\u4e0e\u5f53\u524d\u8def\u5f84\u5728 $x$ \u4f4d\u7f6e\u51fa\u73b0\u4e86\u5206\u6b67\uff0c\u4e00\u4e2a\u8d70\u4e86 $x\\to x+1$ \u7684\u8fb9\uff0c\u4e00\u4e2a\u8d70\u4e86 $x\\to x-1$ \u7684\u8fb9\u3002\u800c\u8fd9\u4e24\u4e2a\u8def\u5f84\u7ec8\u7a76\u8fd8\u662f\u8981\u8d70 $x\\to x-1$ \u548c $x\\to x+1$ \u7684\u8fb9\u7684\uff0c\u6240\u4ee5\u80af\u5b9a\u6709\u4e00\u6761\u8fb9 $x+1\\to x$\uff0c\u4e5f\u6709\u4e00\u6761\u8fb9 $x-1\\to x$\uff0c\u6b64\u65f6\u6211\u4eec\u9009\u62e9 $x\\to x-1\\to x\\to x+1\\to x$\uff0c\u5e76\u5c06\u5176\u7ffb\u8f6c\uff0c\u770b\u770b\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\u6b64\u65f6\u6211\u4eec\u60ca\u5947\u5730\u53d1\u73b0\uff0c\u539f\u6765\u5148\u8d70 $x\\to x-1$ \u7684\u8def\u5f84\u6539\u8d70 $x\\to x+1$ \u4e86\uff01\u4ee5\u6b64\u7c7b\u63a8\uff0c\u6700\u540e\u4e24\u4e2a\u8def\u5f84\u4e00\u5b9a\u4f1a\u91cd\u5408\u3002\n\n\u4e8e\u662f\u6b64\u9898\u5c31\u53d8\u4e3a\uff1a\u6c42\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u6b27\u62c9\u5e8f\u3002\u76f4\u63a5\u8d2a\u5fc3\u5c31\u53ef\u4ee5\u4e86\u3002\u80fd\u586b $0$ \u5c31\u586b $0$\uff0c\u4e0d\u80fd\u5c31\u586b $1$\u3002\n\n\u770b\u5230\u6ca1\uff1f\u4ec0\u4e48\u8d85\u7eb2\u7684\u7b97\u6cd5\u90fd\u6ca1\u6709\u3002\u6240\u4ee5\u554a\uff0c\u83dc\u662f\u539f\u7f6a/kk\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define fi first\n#define se second\n#define fz(i,a,b) for(int i=a;i<=b;i++)\n#define fd(i,a,b) for(int i=a;i>=b;i--)\n#define ffe(it,v) for(__typeof(v.begin()) it=v.begin();it!=v.end();it++)\n#define fill0(a) memset(a,0,sizeof(a))\n#define fill1(a) memset(a,-1,sizeof(a))\n#define fillbig(a) memset(a,63,sizeof(a))\n#define pb push_back\n#define ppb pop_back\n#define mp make_pair\ntemplate<typename T1,typename T2> void chkmin(T1 &x,T2 y){if(x>y) x=y;}\ntemplate<typename T1,typename T2> void chkmax(T1 &x,T2 y){if(x<y) x=y;}\ntypedef pair<int,int> pii;\ntypedef long long ll;\ntemplate<typename T> void read(T &x){\n\tchar c=getchar();T neg=1;\n\twhile(!isdigit(c)){if(c=='-') neg=-1;c=getchar();}\n\twhile(isdigit(c)) x=x*10+c-'0',c=getchar();\n\tx*=neg;\n}\nconst int MAXN=5e5;\nconst int DELTA=5e5+2;\nint n,cnt[MAXN*2+5][2];\nchar s[MAXN+5];\nvoid solve(){\n\tscanf(\"%s\",s+1);n=strlen(s+1);\n\tint cur=0;\n\tfor(int i=1;i<=n;i++){\n\t\tcnt[DELTA+cur][s[i]-'0']++;\n\t\tif(s[i]=='0') cur--;else cur++;\n\t}\n\tint x=0;\n\tfor(int i=1;i<=n;i++){\n\t\tif(cnt[x+DELTA][0]&&cnt[x-1+DELTA][1]) cnt[x+DELTA][0]--,x--,putchar('0');\n\t\telse if(cnt[x+DELTA][1]) cnt[x+DELTA][1]--,x++,putchar('1');\n\t\telse cnt[x+DELTA][0]--,x--,putchar('0');\n\t}\n\tprintf(\"\\n\");\n}\nint main(){\n\tint qu;scanf(\"%d\",&qu);\n\twhile(qu--) solve();\n\treturn 0;\n}\n```",
        "postTime": 1608453934,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1458D \u3010Flip and Reverse\u3011"
    },
    {
        "content": "# \u8d2a\u5fc3\n\n## \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a $01$ \u5b57\u7b26\u4e32\uff0c\u6709\u673a\u4f1a\u8fdb\u884c\u82e5\u5e72\u6b21\u64cd\u4f5c\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u64cd\u4f5c\uff1a\n\n- \u9009\u62e9\u8be5\u5b57\u7b26\u4e32\u7684\u5b50\u4e32\uff0c\u8981\u6c42\u662f\u8be5\u5b50\u4e32\u5185\u5305\u542b\u6570\u91cf\u76f8\u540c\u7684 $0$ , $1$ \u5b57\u7b26\u3002\n\n- \u5c06\u8be5\u5b50\u4e32\u5185\u7684\u6240\u6709\u5b57\u7b26\u53d6\u53cd\uff0c $1$ \u53d8\u6210 $0$ \uff0c$0$ \u53d8\u6210 $1$ \u3002\n\n- \u628a\u9009\u4e2d\u7684\u5b50\u4e32\u987a\u5e8f\u53cd\u8f6c\u3002\n\n\u6c42\u7ecf\u8fc7\u82e5\u5e72\u6b21\u64cd\u4f5c\u540e**\u5b57\u5178\u5e8f\u6700\u5c0f**\u7684\u5b57\u7b26\u4e32\u3002\n\n## \u5206\u6790\n\n\u82e5\u5c06 $1$ \u8d4b\u503c\u4e3a $1$ \uff0c $0$ \u8d4b\u503c\u4e3a $-1$ \uff0c\u8fdb\u884c\u524d\u7f00\u548c\u8fd0\u7b97\uff0c\u6211\u4eec\u80fd\u591f\u53d1\u73b0\u8be5\u64cd\u4f5c\u7684\u542b\u4e49\u5728\u524d\u7f00\u548c\u4e2d\u5c31\u662f\u9009\u62e9**\u524d\u7f00\u548c\u76f8\u540c**\u7684\u4e24\u4e2a\u70b9\uff0c\u5c06\u8fd9\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u524d\u7f00\u548c\u53cd\u8f6c\u3002\n\n\u4f8b\u5982\u6837\u4f8b $100101$ \uff0c\u524d\u7f00\u548c\u4e3a $0$ , $1$ , $0$ , $-1$ , $0$ , $-1$ , $0$ \u3002\n\n\u82e5\u6211\u4eec\u9009\u62e9\u524d\u56db\u4e2a\u5b57\u7b26 $1001$ \u64cd\u4f5c\uff0c\u7b49\u4ef7\u4e8e\u5c06\u4e03\u4e2a\u524d\u7f00\u548c\u4e2d\u7b2c $1$ \u5230\u7b2c $5$ \u4e2a\u524d\u7f00\u548c**\u987a\u5e8f\u53cd\u8f6c**\uff0c\u6700\u540e\u5f97\u5230\u7684\u7ed3\u679c\u90fd\u4f1a\u662f $011001$\u3002\n\n\u901a\u8fc7\u524d\u7f00\u548c**\u56fe\u50cf**\u6211\u4eec\u80fd\u591f\u8f83\u4e3a\u8f7b\u677e\u7684\u53d1\u73b0\u8fd9\u4e2a\u6027\u8d28\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/q9u21iwf.png)\n\n\u7ea2\u8272\u7684\u7ebf\u8868\u793a**\u5bf9\u79f0\u8f74**\uff0c\u7eff\u8272\u7684\u7ebf\u4fbf\u662f\u64cd\u4f5c\u4e4b\u540e\u7684\u524d\u7f00\u548c\uff0c\u7565\u4f5c\u5206\u6790\u80fd\u591f\u53d1\u73b0\u5176\u6b63\u786e\u6027\u3002\n\n\u8003\u8651\u5982\u4f55\u6c42\u5f97\u7b54\u6848\uff0c\u8003\u8651**\u8d2a\u5fc3**\u3002\u6211\u4eec\u6ca1\u6709\u5fc5\u8981\u4e00\u4f4d\u4e00\u4f4d\u7684\u53bb\u64cd\u4f5c\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u6bcf\u4e00\u4f4d\u7684\u524d\u7f00\u548c**\u6700\u5c0f\u80fd\u591f\u586b\u51e0**\u5c31\u53ef\u4ee5\u4e86\u3002\u7b80\u5355\u7684\uff0c\u5982\u679c\u76ee\u524d\u4f4d\u6570\u7684\u524d\u7f00\u548c\u4e3a $k$ \uff0c\u90a3\u4e48\u4e0b\u4e00\u4f4d\u7684\u524d\u7f00\u548c\u6709\u4e24\u79cd\u53ef\u80fd $k+1$ \uff0c $k-1$ \uff0c\u6211\u4eec\u5f53\u7136\u60f3\u586b $k-1$ \uff0c\u8003\u8651\u586b\u5165 $k-1$ \u7684**\u9650\u5236\u6761\u4ef6**\u3002 \n\n\u8003\u8651\u5bf9\u4e8e\u539f\u524d\u7f00\u548c\u5e8f\u5217\uff0c\u6bcf\u4e2a\u6570\u5411\u76f8\u90bb\u7684\u6570\u8fde\u65e0\u5411\u8fb9\u3002\u7531\u4e8e\u5bf9\u4e8e\u524d\u7f00\u548c\u5e8f\u5217\u7684\u64cd\u4f5c\u662f\u9009\u62e9\u5b50\u4e32\u7ffb\u8f6c\uff0c\u5e76\u4e14\u5f00\u5934\u548c\u7ed3\u5c3e\u7684\u524d\u7f00\u548c\u662f\u4e00\u6837\u7684\uff0c\u90a3\u4e48\u5176\u5b9e\u4e0d\u96be\u53d1\u73b0\uff0c\u4e0d\u7ba1\u600e\u4e48\u64cd\u4f5c\uff0c\u4e24\u4e2a\u524d\u7f00\u548c\u4e4b\u95f4**\u8fb9\u7684\u6570\u91cf\u662f\u4e0d\u53d8\u7684**\u3002\n\n\u8fd9\u6837\u8fde\u8fb9\u4e4b\u540e\uff0c\u80fd\u591f\u586b\u5165 $k-1$ \u7684\u6709\u4e24\u79cd\uff0c\u7b2c\u4e00\u79cd\u662f\u6ca1\u6709\u8fde\u63a5 $k+1$ \u7684\u8fb9\u4e86\uff0c\u90a3\u4e48\u80af\u5b9a\u5c31\u80fd\u591f\u8d70 $k-1$ \uff0c\u7b2c\u4e8c\u79cd\u662f $k$ \u548c $k-1$ \u7684\u8fde\u8fb9\u81f3\u5c11\u6709\u4e24\u6761\u3002\n\n\u63a5\u4e0b\u6765\u8bf4\u660e\u4e3a\u4ec0\u4e48 $k$ \u548c $k-1$ \u7684\u8fde\u8fb9\u4e3a\u4ec0\u4e48**\u81f3\u5c11\u9700\u8981\u4e24\u6761**\u3002\n\n- \u5982\u679c $k$ \u548c $k-1$ \u7684\u8fde\u8fb9\u53ea\u6709\u4e00\u6761\uff0c\u5982\u679c $k$ \u540e\u9762\u76f4\u63a5\u5c31\u8ddf $k-1$ \uff0c\u90a3\u4e48\u8fd9\u79cd\u60c5\u51b5\u662f\u80af\u5b9a\u53ef\u4ee5\u586b\u7684\uff0c\u4f46\u662f\u7531\u4e8e\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86 $k-1$ \u548c $k$ \u7684\u8fde\u8fb9\u53ea\u6709\u4e00\u6761\uff0c\u6240\u4ee5\u6700\u540e\u4e0d\u7ba1\u600e\u4e48\u53d8\u5316\uff0c\u524d\u7f00\u548c\u4e0d\u53ef\u80fd\u518d\u56de\u5230 $k$ \uff0c\u81ea\u7136\u4e5f\u4e0d\u4f1a\u5b58\u5728 $k$ \u4e0e $k+1$ \u7684\u8fde\u8fb9\uff0c\u5219\u5176\u5b9e\u7b2c\u4e00\u79cd\u60c5\u51b5\u5c31**\u5df2\u7ecf\u7279\u5224\u6389\u4e86\u53ea\u6709\u4e00\u6761\u8fde\u8fb9**\u65f6\u7684\u60c5\u51b5\u3002\n\n- \u90a3\u4e48 $k$ \u548c $k-1$ \u7684\u8fde\u8fb9\u6709\u4e24\u6761\u4e3a\u4ec0\u4e48\u4e00\u5b9a\u5bf9\u5462\uff1f\u9996\u5148\u540e\u9762\u539f\u672c\u5c31\u662f $k-1$ \u7684\u60c5\u51b5\u5f53\u7136\u662f\u53ef\u4ee5\u7684\uff0c\u4f46\u662f\u5982\u679c\u540e\u9762\u662f $k+1$ \uff0c\u8981\u6ee1\u8db3\u81f3\u5c11\u6709\u4e24\u6761\u4e0e $k-1$\u7684\u8fde\u8fb9\uff0c\u5219\u5fc5\u987b\u6ee1\u8db3\u5982\u4e0b\u56fe\u7684\u524d\u7f00\u548c\u53d8\u5316\uff1a![](https://cdn.luogu.com.cn/upload/image_hosting/wocy66zx.png)\u800c\u6392\u9664\u6389\u7b2c\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\uff0c\u82e5\u53ea\u6709\u4e00\u6761\u8fde\u8fb9\u7684\u60c5\u51b5\u5219\u5982\u4e0b\u56fe\uff1a![](https://cdn.luogu.com.cn/upload/image_hosting/gjplj4bb.png)\n\n\u53d1\u73b0\u9650\u5236\u6761\u4ef6\u540e\uff0c\u5c31\u53ef\u4ee5\u8d2a\u5fc3\u7684\u5f80\u4e0b\u586b\uff0c\u6700\u540e\u6c42\u51fa\u7684\u7b54\u6848\u5373\u662f\u6700\u4f18\u89e3\u3002\n\n## CODE\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=1e6+10;\nint n;\nchar s[N];\nint a[N],pre[N];\n//edge[0/1][0/1][i]\u4e2d\u7b2c\u4e00\u4f4d\u8868\u793a\u589e\u51cf\u8fde\u8fb9\uff0c\u7b2c\u4e8c\u4f4d\u8868\u793a\u76ee\u524d\u6570\u503ci\u7684\u6b63\u8d1f \nint edge[2][2][N];\ninline int read()\n{\n\tint s=0,w=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n\treturn s*w;\n}\nint main()\n{\n\tn=read();\n\twhile(n--){\n\t\tscanf(\"\\n%s\",s+1);\n\t\tint len=strlen(s+1);\n\t\tfor(register int i=1;i<=len;i++) a[i]=s[i]-'0';\n\t\tfor(register int i=1;i<=len;i++){ //\u5904\u7406\u524d\u7f00\u548c \n\t\t\tif(a[i]==1) pre[i]=pre[i-1]+1;\n\t\t\telse pre[i]=pre[i-1]-1;\n\t\t}\n\t\tfor(register int i=0;i<len;i++){ //\u5904\u7406\u51fa\u524d\u7f00\u548c\u4e0e\u8fb9\u7684\u6570\u91cff\n\t\t\tint sym1= pre[i]>=0 ? 1 : 0,sym2= pre[i+1]>=0 ? 1 : 0;\n\t\t\tint change= pre[i+1]>pre[i] ? 1 : 0;\n\t\t\tedge[change][sym1][abs(pre[i])]++,edge[change^1][sym2][abs(pre[i+1])]++;\n\t\t}\n\t\tint now=0;\n\t\tfor(register int i=1;i<=len;i++){ //\u8003\u8651\u6bcf\u4e00\u4f4d\u5982\u4f55\u586b\u5145\n\t\t\tint sym1= now>=0 ? 1 : 0;\n\t\t\tif(edge[0][sym1][abs(now)]>=2||!edge[1][sym1][abs(now)]){\n\t\t\t\tprintf(\"0\"),now--;\n\t\t\t\tint sym2= now>=0 ? 1 : 0;\n\t\t\t\tedge[0][sym1][abs(now+1)]--,edge[1][sym2][abs(now)]--;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tprintf(\"1\"),now++;\n\t\t\t\tint sym2= now>=0 ? 1 : 0;\n\t\t\t\tedge[1][sym1][abs(now-1)]--,edge[0][sym2][abs(now)]--;\n\t\t\t}\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1613633512,
        "uid": 258460,
        "name": "Booksnow",
        "ccfLevel": 0,
        "title": "CF1458D Flip and Reverse[\u9898\u89e3]"
    },
    {
        "content": "[\u6765\u83dc\u56ed\u91c7\u83dc\u554a](https://www.cnblogs.com/zkyJuruo/p/14163445.html)\n\n## \u9898\u9762\n\n> $T$ \u7ec4\u8be2\u95ee\uff0c\u6bcf\u6b21\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6bcf\u6b21\u53ef\u4ee5\u9009\u62e9\u4e00\u4e2a `1` \u548c `0` \u6570\u91cf\u76f8\u7b49\u7684\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u628a\u5b57\u7b26\u4e32\u524d\u540e\u7ffb\u8f6c\u5e76 `01` \u7ffb\u8f6c\u3002\u6c42\u6700\u540e\u5f97\u5230\u7684\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u5b57\u7b26\u4e32\u3002\n\n> \u6570\u636e\u8303\u56f4 : $T, n \\le 5 \\times 10^5, \\sum n \\le 5 \\times 10^5$\n\n## \u9898\u89e3\n\n> \u521a\u624d\u6709\u4e2a\u7fa4\u53cb\u95ee\u6211 Z \u83dc\u9e21\u53d1\u751f\u80be\u6478\u4e8b\u4e86\uff0c\u6211\u8bf4\u600e\u4e48\u56de\u4e8b\uff1f\u7ed9\u6211\u53d1\u4e86\u51e0\u5f20 CF \u5206\u6570\u5bf9\u6bd4\u56fe\uff0c\u6211\u4e00\u770b\uff01\u55f7\uff01\u539f\u6765\u662f\u6628\u5929\uff0c\u6211\u6253\u4e86\u4e00\u573a CF\uff0c\u7206\u96f6\u4e86\uff0c\u6389\u5206\u5230 newbie \uff0c\u53c8\u88ab\u5632\u8bbd\u4e86\u3002\n\n\u9996\u5148\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a $x$ \u503c\uff0c\u9047\u5230 $0$, \u8ba9 $x$ \u51cf\u5c11 $1$\uff1b\u9047\u5230 $1$ \u8ba9 $x$ \u589e\u52a0 $1$\u3002\n\n\u8003\u8651\u6309\u7167\u539f\u5b57\u7b26\u4e32\u5efa\u7acb\u4e00\u5f20\u56fe\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $x$ \u503c\u5efa\u7acb\u4e00\u4e2a\u70b9\u3002\u4f8b\u5982\u8bf4\u73b0\u5728\u7684 $x$ \u503c\u4e3a $t$, \u9047\u5230\u4e86\u4e00\u4e2a $1$, \u7136\u540e\u6211\u4eec\u4ece $t$ \u5230 $t + 1$ \u8fde\u4e00\u6761\u65e0\u5411\u8fb9\u3002\n\n\u9009\u62e9\u4e00\u4e2a `1` \u548c `0` \u6570\u91cf\u76f8\u7b49\u7684\u5b57\u7b26\u4e32\uff0c\u524d\u540e\u7684 $x$ \u503c\u4e00\u5b9a\u76f8\u7b49\u3002\u4e8e\u662f\u8fd9\u5c31\u5f62\u6210\u4e86\u4e00\u4e2a\u73af\u3002\n\n\u8003\u8651\u5c06\u8fd9\u4e2a\u5b57\u7b26\u4e32\u53d6\u53cd\uff0c\u5176\u5b9e\u76f8\u5f53\u4e8e\u4ece\u8fd9\u4e2a\u70b9\u7ed5\u7740\u8fd9\u4e2a\u73af\u8d70\u4e00\u5708\u3002\n\n\u7136\u540e\u6211\u4eec\u8981\u6c42\u7684\u662f\u8fd9\u5f20\u56fe\u7684\u6700\u5c0f\u5b57\u5178\u5e8f\u7684\u6b27\u62c9\u8def\u5f84\u3002\n\n\u53ef\u4ee5\u8003\u8651\u8d2a\u5fc3\uff0c\u80fd\u5411\u5c0f\u7684\u6570\u8d70\u5c31\u5f80\u5c0f\u6570\u7684\u8d70\u3002\n\n\u600e\u4e48\u5224\u5b9a\u6570 $t$ \u80fd\u4e0d\u80fd\u5f80\u5c0f\u6570 $t - 1$ \u8d70\uff1f\u9996\u5148\u4e00\u5b9a\u8981\u6709 $t$ \u5230 $t - 1$ \u7684\u8fd9\u6761\u8fb9\uff0c\u5982\u679c $t$ \u6709\u5230 $t + 1$ \u7684\u8fb9\u90a3\u4e48 $t$ \u5230 $t - 1$ \u7684\u8fb9\u6570\u81f3\u5c11\u4e3a $2$ \uff08\u80af\u5b9a\u8981\u8fd4\u56de $t$\uff09\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(\\sum n)$\n\n## \u4ee3\u7801\n\n\u6211\u83dc\uff0c\u53c2\u8003\u4e86 `tourist` \u7684\n\n```cpp\n#include<bits/stdc++.h>\n#define L(i, j, k) for(int i = j, i##E = k; i <= i##E; i++) \n#define R(i, j, k) for(int i = j, i##E = k; i >= i##E; i--)\n#define ll long long\n#define ull unsigned long long \n#define db double\n#define pii pair<int, int>\n#define mkp make_pair\nusing namespace std;\nconst int N = 5e5 + 7;\nconst int inf = 1e9 + 7;\nint n, cnt[N << 1];\nchar s[N];\nvoid Main() {\n\tscanf(\"%s\", s + 1), n = strlen(s + 1);\n\tint now = 0;\n\tL(i, 1, n) {\n\t\tif(s[i] == '1') cnt[N + now] ++, now ++; \n\t\telse now --, cnt[N + now] ++;\n\t}\n\tnow = 0;\n\tL(i, 1, n) {\n\t\tif(cnt[N + now - 1] > 0 && (!cnt[N + now] || cnt[N + now - 1] > 1)) --now, cnt[N + now] --, putchar('0');\n\t\telse cnt[N + now] --, now ++, putchar('1');\n\t}\n\tputs(\"\");\n\tL(i, -n, n) cnt[N + i] = 0;\n}\nint main() {\n\tint T; scanf(\"%d\", &T);\n\twhile(T--) Main();\n\treturn 0;\n}\n```\n\n**\u795d\u5927\u5bb6\u5b66\u4e60\u6109\u5feb\uff01**",
        "postTime": 1608445979,
        "uid": 173660,
        "name": "zhoukangyang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1458D \u3010Flip and Reverse\u3011"
    },
    {
        "content": "\u6211\u4eec\u8003\u8651\u524d\u7f00\u548c\uff0c$\\texttt0$ \u4e3a $-1$\uff0c$\\texttt1$ \u4e3a $1$\uff0c\u90a3\u4e48\u80fd\u4fee\u6539\u7684\u533a\u95f4\u8981\u6ee1\u8db3 $Sum_{l-1}=Sum_r$\u3002\uff08\u60f3\u4e0d\u5230 * 1\uff09\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u4e00\u6b21\u64cd\u4f5c\u662f\u5728 $Sum$ \u4e0a\u505a\u4e86\u4ec0\u4e48\u3002\u53cd\u8f6c\u7684\u8bdd\uff0c\u90a3\u5c31\u662f\u5173\u4e8e $y=Sum_{l-1}$ \u5bf9\u79f0\u4e86\u4e00\u4e0b\uff1b\u7ffb\u8f6c\u53ef\u4ee5\u60f3\u8c61\u4e00\u4e0b\uff0c\u628a\u6298\u7ebf\u7684\u6700\u53f3\u8fb9\u4e00\u6bb5\u79fb\u5230\u6700\u5de6\u8fb9\uff0c\u8fd9\u662f\u4e2d\u5fc3\u5bf9\u79f0\u4e86\uff0c\u4e8e\u662f\u5c31\u662f\u65e2\u4e0a\u4e0b\u53c8\u5de6\u53f3\u5bf9\u79f0\u3002\u90a3\u4e48\u4e24\u8005\u5408\u8d77\u6765\u5c31\u662f\u5de6\u53f3\u5bf9\u79f0\uff0c\u4e5f\u5c31\u662f\u628a $Sum_{l\\sim r}$ \u8fd9\u4e00\u6bb5\u7ffb\u4e86\u4e2a\u4e2a\u513f\u3002\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u82e5\u5e72\u6b21\u64cd\u4f5c\u80fd\u5e72\u4e9b\u4ec0\u4e48\u3002\u6ce8\u610f\u5230\u4e00\u6b21\u64cd\u4f5c\u53ea\u4f1a\u6539\u53d8\u524d\u7f00\u548c\u503c\u4eec\u7684\u8bbf\u95ee\u987a\u5e8f\uff0c\u800c\u4e0d\u4f1a\u6539\u53d8\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u60f3\u8c61\u6210\u4e00\u6761\u4ece\u5934\u8bbf\u95ee\u5230\u5c3e\u7684\u94fe\uff0c\u7136\u540e\u64cd\u4f5c\u5c31\u662f\u6539\u53d8\u4e00\u4e9b\u524d\u9a71\u540e\u7ee7\u3002\u90a3\u4e48\u4e00\u6b21\u64cd\u4f5c\u672c\u8d28\u4e0a\u5c31\u662f\u628a $l-1,r$ \u4e4b\u95f4\u7684\u8def\u5f84\u7684\u8fb9\u5168\u90e8\u53cd\u5411\uff0c\u7136\u540e\u628a $l-1,r$ \u4ea4\u6362\u524d\u9a71\u540e\u7ee7\u3002\n\n\u6211\u4eec\u76ef\u7740\u67d0\u4e00\u4e2a\u503c\u770b\uff0c\u63d0\u70bc\u51fa\u8fd9\u4e2a\u503c\u5728 $Sum$ \u91cc\u7684\u6240\u6709\u4f4d\u7f6e\uff0c\u90a3\u4e48\u4efb\u610f\u4e24\u4e2a\u4e4b\u95f4\u90fd\u53ef\u4ee5\u53cd\u5e94\u3002\u6ce8\u610f\u5230\u53ea\u6709\u5728\u5173\u952e\u4f4d\u7f6e\u5904\u624d\u4f1a\u6709\u65b9\u5411\u7684\u8f6c\u6298\uff0c\u4e8e\u662f\u6211\u4eec dark \u628a\u76f8\u90bb\u5173\u952e\u70b9\u4e4b\u95f4\u7684\u7f29\u5230\u4e00\u8d77\uff0c\u5e76\u4e14\u8bb0\u5f55\u65b9\u5411\uff0c\u90a3\u4e48\u53ef\u4ee5\u8868\u793a\u6210\u8fd9\u79cd\u5f62\u5f0f\uff1a$1\\to +1.5\\to 2\\to +2.5\\to 3\\to \\cdots$\uff0c\u5176\u4e2d\u6574\u6570\u8868\u793a\u5173\u952e\u70b9\uff0c\u5c0f\u6570\u8868\u793a\u7f29\u8d77\u6765\u7684\u4e1c\u897f\uff0c\u6b63\u8d1f\u53f7\u8868\u793a\u65b9\u5411\uff0c\u4e00\u5f00\u59cb\u5c31\u662f\u5982\u4e0a\u72b6\u6001\u3002\u6ce8\u610f\u5230\u6240\u6709\u5173\u952e\u70b9\u7684\u503c\u90fd\u662f\u4e00\u6837\u7684\uff0c\u800c\u4e14\u6c38\u8fdc\u662f\u4e00\u4e2a\u5173\u952e\u70b9\u3001\u4e00\u6bb5\u6d53\u7f29\u997c\u5e72\u8fd9\u6837\u6392\u5217\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u4e0d\u7ba1\u5173\u952e\u70b9\uff0c\u53ea\u770b\u6d53\u7f29\u997c\u5e72\u7684\u6392\u5217\u65b9\u5f0f\u3002\u4e00\u4e2a\u663e\u7136\u7684\u7ed3\u8bba\uff1a\u4efb\u610f\u6392\u5217\u3001\u6bcf\u4e2a\u4efb\u610f\u65b9\u5411\u90fd\u53ef\u4ee5\u505a\u5230\u3002\u6784\u9020\u65b9\u6848\u5c31\u662f\u5148\u968f\u610f\u7ffb\uff0c\u7136\u540e\u518d\u9010\u4e2a\u51fb\u7834\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u628a\u503c\u5f53\u4f5c\u8282\u70b9\u5efa\u56fe\u3002\uff08\u60f3\u4e0d\u5230 * 2\uff09\n\n\u8003\u8651\u5148\u5efa\u6709\u5411\u8fb9 $Sum_i\\to Sum_{i+1}$\u3002\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u503c\uff0c\u4ee5\u5b83\u4e3a\u5173\u952e\u503c\u7684\u4f5c\u7528\u663e\u7136\u5c31\u662f\u7ecf\u8fc7\u5b83\u7684\u73af\u4eec\u3002\u6ce8\u610f\u5230\u628a\u5728\u73af\u4e0a\u7684\u8fb9\u5efa\u6210\u65e0\u5411\u8fb9\u6070\u597d\u7b26\u5408\u8981\u6c42\uff0c\u53ef\u4ee5\u4efb\u610f\u987a\u5e8f\u4efb\u610f\u65b9\u5411\u7684\u8d70\u3002\u90a3\u4e48\u663e\u7136\u5b57\u7b26\u4e32\u548c\u8be5\u6df7\u5408\u56fe\u7684\u6b27\u62c9\u56de\u8def / \u8def\u5f84\u6210\u53cc\u5c04\u5173\u7cfb\uff0c\u56e0\u4e3a\u4e00\u6761\u8fb9\u5c31\u4ee3\u8868\u4e00\u4e2a\u5b57\u7b26\uff0c\u8fd9\u8fd8\u662f\u5f88\u597d\u7406\u89e3\u7684\u3002\n\n\u4e8e\u662f\u73b0\u5728\u6211\u4eec\u5c31\u9700\u8981\u6c42\u6df7\u5408\u56fe\u5b57\u5178\u5e8f\u6700\u5c0f\u6b27\u62c9\u56de\u8def / \u8def\u5f84\u3002\u4f46\u662f\u6211\u4eec\u8fde\u6df7\u5408\u56fe\u6c42\u6b27\u62c9\u56de\u8def / \u8def\u5f84\u90fd\u4e0d\u4f1a\uff0c\u5fc5\u987b\u8981\u7528\u7f51\u7edc\u6d41/jk\u3002\u4f46\u8fd9\u5176\u5b9e\u662f\u4e2a\u5e4c\u5b50\u3002\u663e\u7136\u4e00\u6761\u8fb9\u662f\u65e0\u5411\u8fb9\u5f53\u4e14\u4ec5\u5f53\u5b83\u5728 $Sum$ \u91cc\u4e24\u8fb9\u6709\u76f8\u540c\u503c\u3002\u90a3\u4e48\u6211\u4eec\u8003\u8651\u6240\u6709\u6709\u5411\u8fb9\u533a\u95f4\uff0c\u5b83\u4eec\u5185\u7684\u503c\u4e24\u4e24\u4e0d\u540c\uff0c\u800c\u4e14\u8ddf\u6240\u6709\u65e0\u5411\u8fb9\u4e24\u7aef\u7684\u4e5f\u90fd\u4e0d\u540c\uff08\u53ef\u4ee5\u53cd\u8bc1\uff09\u3002\u90a3\u628a\u6709\u5411\u8fb9\u6539\u6210\u65e0\u5411\u8fb9\u53c8\u4f55\u59a8\uff1f\u53cd\u6b63\u53ea\u6709\u4e00\u79cd\u8d70\u6cd5\u3002\n\n\u90a3\u4e48\u5982\u4f55\u6c42\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u6b27\u62c9\u8def\u5462\uff1f\u6ce8\u610f\u5230\u53e6\u5916\u4e00\u4e2a\u6027\u8d28\uff1a\u53ea\u6709\u7f16\u53f7\u76f8\u90bb\u7684\u4e24\u4e2a\u70b9\u4f1a\u8fde\u8fb9\uff0c\u90a3\u4e48\u8d2a\u5fc3\u5c31\u53ef\u4ee5\u4e86\uff0c\u6bcf\u6b21\u9009 $\\texttt 0/\\texttt1$\uff0c\u7ef4\u62a4\u8fde\u901a\u6027\uff08\u8fd9\u4e2a\u5f88\u597d\u7ef4\u62a4\uff0c\u5229\u7528\u4e0a\u8ff0\u6027\u8d28\uff09\u548c\u5947\u70b9\u4e2a\u6570\u5373\u53ef\u3002\n\n**_[code](https://www.luogu.com.cn/paste/92xnd1m0)_**",
        "postTime": 1608731439,
        "uid": 138400,
        "name": "chenxia25",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1458D \u3010Flip and Reverse\u3011"
    },
    {
        "content": "[CF \u4f20\u9001\u95e8](https://codeforces.com/problemset/problem/1458/D) | [\u6d1b\u8c37\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1458D)\n\n\u8d2a\u5fc3 + \u6b27\u62c9\u8def\u5f84\u3002\n\n\u8bb0\u5f55\u4e00\u4e0b\u8fd9\u9053\u8ba9\u6211\u60f3\u7834\u8111\u7b4b\u7684\u9898\u76ee\u3002\n\n## Solution\n\n\u8bb0\u5e8f\u5217\u4e2d $0$ \u4e3a $-1$\uff0c$1$ \u4e3a $1$\uff0c\u7136\u540e\u5728\u5e8f\u5217\u4e0a\u8fdb\u884c\u4e00\u4e2a\u524d\u7f00\u548c\u64cd\u4f5c\u3002\u663e\u7136\uff0c\u76ee\u6807\u5c31\u662f\u8ba9\u6700\u7ec8\u5e8f\u5217\u4ece\u524d\u5f80\u540e\u7684\u524d\u7f00\u548c\u5c3d\u53ef\u80fd\u5c0f\u3002\n\n\u89c2\u5bdf\u64cd\u4f5c\uff0c\u53d1\u73b0\u64cd\u4f5c\u201c\u8981\u6c42 $0$ \u548c $1$ \u6570\u91cf\u76f8\u540c\u7684\u5b50\u4e32\u201d\u5b9e\u9645\u4e0a\u5c31\u662f\u6ee1\u8db3\u4e24\u7aef\u524d\u7f00\u548c\u76f8\u540c\u7684\u4e00\u4e2a\u533a\u95f4\u6240\u6784\u6210\u7684\u5b57\u7b26\u4e32\u3002\u8fd9\u5c31\u5f15\u5bfc\u6211\u4eec\u628a\u8fd9\u4e9b\u524d\u7f00\u548c\u5f62\u8c61\u5316\u6210\u8282\u70b9\uff0c\u6bcf\u4e2a\u6743\u503c\u5bf9\u5e94\u4e00\u4e2a\u8282\u70b9\uff0c\u539f\u5e8f\u5217\u4e0a\u76f8\u90bb\u4e24\u4f4d\u7684\u524d\u7f00\u548c\u4e4b\u95f4\u4ece\u524d\u5f80\u540e\u8fde\u4e00\u6761\u6709\u5411\u8fb9\u3002\u800c\u64cd\u4f5c\u6240\u8981\u6c42\u7684\u5b57\u7b26\u4e32\u5c31\u53d8\u6210\u8fd9\u4e2a\u56fe\u4e0a\u7684\u67d0\u4e00\u6761\u6b27\u62c9\u56de\u8def\u3002\n\n\u8fdb\u4e00\u6b65~~\u77aa\u773c\u89c2\u5bdf~~\uff0c\u53d1\u73b0\u4e00\u5957\u64cd\u4f5c\u7684\u672c\u8d28\u5b9e\u9645\u4e0a\u5c31\u662f\u628a\u4e0a\u8ff0\u627e\u5230\u7684\u67d0\u6761\u6b27\u62c9\u56de\u8def\u4e0a\u6bcf\u6761\u8fb9\u7684\u65b9\u5411\u53d6\u53cd\u3002\u56de\u8fc7\u5934\u6765\uff0c\u6b64\u65f6\u7684\u9898\u76ee\u53d8\u6210\u4e86\uff1a\u5728\u524d\u7f00\u548c\u6784\u5efa\u7684\u56fe\u4e0a\uff0c\u627e\u82e5\u5e72\u6761\u6b27\u62c9\u56de\u8def\uff0c\u5c06\u56de\u8def\u4e0a\u7684\u8fb9\u90fd\u53cd\u5411\uff0c\u6700\u540e\u518d\u4ece $0$ \u5f00\u59cb\u6309\u7167\u4e00\u5b9a\u987a\u5e8f\u904d\u5386\u6b64\u56fe\uff0c\u8981\u6c42**\u8d70\u4e00\u6761\u6b27\u62c9\u8def\u5f84**\uff0c\u82e5\u81ea $x$ \u5230 $x+1$ \u5219\u8f93\u51fa $1$\uff0c\u5426\u5219\u8f93\u51fa $0$\u3002\n\n\u6b27\u62c9\u8def\u5f84\uff1a\u5982\u679c\u56fe $G$ \u4e2d\u7684\u4e00\u4e2a\u8def\u5f84\u5305\u62ec\u6bcf\u4e2a\u8fb9\u6070\u597d\u4e00\u6b21\uff0c\u5219\u8be5\u8def\u5f84\u79f0\u4e3a\u6b27\u62c9\u8def\u5f84\u3002\n\n\u53c8\u56e0\u4e3a\u5b57\u5178\u5e8f\u8981\u6700\u5c0f\uff0c\u6545\u4e0a\u8ff0\u7684\u201c\u4e00\u5b9a\u987a\u5e8f\u201d\u5c31\u662f\u8d2a\u5fc3\uff1a\u80fd\u8d70 $0$ \u5c31\u8d70 $0$\uff0c\u5426\u5219\u8d70 $1$\u3002\n\n\u90a3\u600e\u4e48\u5904\u7406\u5c06\u6b27\u62c9\u56de\u8def\u4e0a\u7684\u8fb9\u90fd\u53cd\u5411\u5462\uff1f\u5728\u6b64\u4e4b\u524d\uff0c\u7b14\u8005\u5148~~\u53e3\u80e1~~\u8bc1\u660e\u4e00\u4e0b**\u4e00\u6761\u6b27\u62c9\u56de\u8def\u4e0a $u$ \u5230 $v$ \u8def\u5f84\u7684\u6570\u91cf\u4e0d\u4f1a\u56e0\u4e3a\u53d6\u53cd\u65b9\u5411\u64cd\u4f5c\u800c\u6539\u53d8**\u3002\u7406\u7531\u5982\u4e0b\uff1a\u53d1\u73b0\u5728\u6b27\u62c9\u56de\u8def\u4e0a\u7684\u6bcf\u6761\u8fb9\u65e0\u975e\u5c31\u662f\u8ba9\u6743\u503c $+1$ \u6216\u8005 $-1$\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u4ece\u4e00\u4e2a\u6743\u503c $x$ \u53c8\u8d70\u56de\u8fd9\u4e2a\u6743\u503c $x$\uff0c\u6240\u4ee5\u5728\u8fd9\u6761\u56de\u8def\u4e0a\u6bcf\u4e00\u6761 $u\\rightarrow u+1$ \u7684\u8fb9\u90fd\u5fc5\u7136\u5bf9\u5e94\u8fd9\u4e00\u6761 $u+1 \\rightarrow u$ \u7684\u8fb9\uff0c\u6240\u4ee5\u53d6\u53cd\u65b9\u5411\u4e4b\u540e\u4e24\u8005\u4e92\u6362\uff0c\u6570\u91cf\u4e0d\u4f1a\u6539\u53d8\u3002\n\n\u7136\u540e\u6211\u4eec\u518d\u56de\u5230\u90a3\u4e2a\u95ee\u9898\u4e0a\u3002\u4e0a\u8ff0\u90a3\u6761\u7ed3\u8bba\u5c31\u80fd\u8ba9\u6211\u4eec\u8fd9\u4e48\u8d70\uff1a\n\n````cpp\nif(e[res + maxn][0]/*\u5b58\u5728 res -> res-1 \u8fd9\u6837\u4e00\u6761\u8def\u5f84*/ and e[res - 1 + maxn][1]/*\u5b58\u5728 res-1 -> res \u8fd9\u6837\u4e00\u6761\u8def\u5f84*/)\n\t//\u5728\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\u7684\u60c5\u51b5\u4e0b\uff0c\u8bf4\u660e\u5f53\u524d\u53ef\u80fd\u8d70\u5728\u4e00\u6761\u56de\u8def\u4e0a\uff0c\u6545\u5148\u8d70 +1 \u548c\u5148\u8d70 -1 \u5b9e\u8d28\u4e0a\u662f\u7b49\u4ef7\u7684\n\t//\u8981\u4fdd\u8bc1\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u6211\u4eec\u5f53\u7136\u5c31\u4f1a\u9009\u62e9\u5148\u8d70 -1 \n\te[res + maxn][0] -= 1, res -= 1, printf(\"0\");\n````\n\n\u4e3a\u4e86\u4fdd\u969c\u5176\u53ef\u884c\u6027\uff0c@[tzc_wk](https://www.luogu.com.cn/user/115194)\u5927\u4f6c\u7ed9\u51fa\u4e86**\u539f\u56fe\u4efb\u610f\u4e00\u6761\u6b27\u62c9\u56de\u8def\u4ee3\u8868\u7684\u5b57\u7b26\u4e32\u90fd\u53ef\u4ee5\u7531\u539f\u5b57\u7b26\u4e32\u8fdb\u884c\u4e00\u7cfb\u5217\u64cd\u4f5c\u5f97\u5230**\u7684[\u8bc1\u660e](https://www.luogu.com.cn/blog/et2006/solution-cf1458d)\u3002\u7b80\u800c\u8a00\u4e4b\u5c31\u662f\u5047\u5982\u4e24\u6761\u8def\u5f84\u8d70\u6cd5\u51fa\u73b0\u5206\u6b67\uff0c\u90a3\u4e48\u5176\u4e2d\u4e00\u6761\u7ffb\u8f6c\u4e4b\u540e\u5fc5\u7136\u4e0e\u53e6\u4e00\u6761\u91cd\u5408\u3002\n\n\u7136\u540e\u518d\u6839\u636e\u201c\u80fd\u8d70 $0$ \u5c31\u8d70 $0$ \u7684\u539f\u5219\u201d\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5b8c\u5584\u5bf9\u4e8e\u6700\u7ec8\u8def\u5f84\u7684\u8d70\u6cd5\u4e86\uff1a\n\n````cpp\nrep(i, 1, n)\n\tif(e[res + maxn][0] and e[res - 1 + maxn][1])\n\t\te[res + maxn][0] -= 1, res -= 1, printf(\"0\");\n\telse if(e[res + maxn][1]) e[res + maxn][1] -= 1, res += 1, printf(\"1\");\n\telse e[res + maxn][0] -= 1, res -= 1, printf(\"0\");\n````\n\n\u7136\u540e\u6211\u8fd9\u79cd\u83dc\u7684\u9009\u624b\u5c31\u4f1a\u95ee\uff1a\u4e0d\u662f\u80fd\u8d70 $0$ \u5c31\u8d70 $0$ \u4e48\uff1f\u4e0a\u9762\u7684\u5b9e\u73b0\u4e2d\u5206\u660e\u5148\u8d70\u4e86 $1$\u3002\u5176\u539f\u56e0\u662f\uff1a\u4e0a\u6587\u63d0\u5230\u4e86\uff0c\u6211\u4eec\u6700\u540e\u4e00\u5b9a\u662f\u8d70\u4e00\u6761**\u6b27\u62c9\u8def\u5f84**\uff0c\u800c\u5982\u679c\u4e00\u5473\u7684\u8d70 $0$ \u4e0d\u8d70 $1$ \u53ea\u4f1a\u5bfc\u81f4\u540e\u9762\u5f88\u591a\u7684\u6743\u503c\u8d70\u4e0d\u5230\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u80fd\u591f\u5148\u8d70 $0$ \u540e\u8d70 $1$\uff08\u5373\u4e24\u8005\u53ef\u4ee5\u4e92\u6362\u987a\u5e8f\uff09\u7684\u60c5\u51b5\u53ea\u51fa\u73b0\u5728\u56de\u8def\u4e0a\uff0c\u5373\u4e0a\u8ff0\u7684\u7b2c\u4e00\u4e2a\u5224\u65ad\u3002\n\n\u6700\u540e\uff0c\u590d\u6742\u5ea6 $\\mathcal{\\text{O}}(\\sum len(s))$\u3002\n\n## Code\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define rep(i, a, b) for(register int i = a; i <= b; ++i)\nconst int maxn = 5e5 + 5;\nint t, n, s[maxn], e[maxn << 1][2];\nchar c[maxn];\n\nint main(){\n\tscanf(\"%d\", &t);\n\twhile(t--){ s[0] = 0;\n\t\tscanf(\"%s\", c + 1), n = strlen(c + 1);\n\t\trep(i, 1, n) s[i] = s[i - 1],\n\t\t\ts[i] += c[i] == '0' ? -1 : 1;\n\t\trep(i, 0, n - 1) e[maxn + s[i]][c[i + 1] - '0'] += 1;\n\t\tint res = 0;\n\t\trep(i, 1, n)\n\t\t\tif(e[res + maxn][0]/*\u5b58\u5728 res -> res-1 \u8fd9\u6837\u4e00\u6761\u8def\u5f84*/ and e[res - 1 + maxn][1]/*\u5b58\u5728 res-1 -> res \u8fd9\u6837\u4e00\u6761\u8def\u5f84*/)\n\t\t\t\t//\u5728\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\u7684\u60c5\u51b5\u4e0b\uff0c\u8bf4\u660e\u5f53\u524d\u53ef\u80fd\u8d70\u5728\u4e00\u6761\u56de\u8def\u4e0a\uff0c\u6545\u5148\u8d70 +1 \u548c\u5148\u8d70 -1 \u5b9e\u8d28\u4e0a\u662f\u7b49\u4ef7\u7684\n\t\t\t\t//\u8981\u4fdd\u8bc1\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u6211\u4eec\u5f53\u7136\u5c31\u4f1a\u9009\u62e9\u5148\u8d70 -1 \n\t\t\t\te[res + maxn][0] -= 1, res -= 1, printf(\"0\");\n\t\t\telse if(e[res + maxn][1]) e[res + maxn][1] -= 1, res += 1, printf(\"1\");\n\t\t\telse e[res + maxn][0] -= 1, res -= 1, printf(\"0\");\n\t\tprintf(\"\\n\"); \n\t}\n\treturn 0;\n}\n```\n\n\n------------\n\u611f\u8c22\u9605\u8bfb\u3002",
        "postTime": 1660293001,
        "uid": 469672,
        "name": "\u4f0d\u53c1\u58f9",
        "ccfLevel": 7,
        "title": "\u3010CF1458D\u3011 Flip and Reverse \u9898\u89e3"
    },
    {
        "content": "## \u89e3\u6790\n\n\u8bbe $\\texttt{cur}(i)=f(i)-g(i)$\uff0c\u5176\u4e2d $f(i)$ \u8868\u793a\u524d\u7f00 $[0, i]$ \u4e2d \u201c$1$\u201d \u7684\u4e2a\u6570\uff0c$g(i)$ \u8868\u793a\u524d\u7f00 $[0, i]$ \u4e2d \u201c$0$\u201d \u7684\u4e2a\u6570\n\n\u5bf9\u4e8e $\\texttt{cur}(i)$ \u548c $\\texttt{cur}(i+1)$\uff0c\u6211\u4eec\u8fde\u4e00\u6761**\u6709\u5411\u8fb9** $(\\texttt{cur}(i), \\texttt{cur}(i+1))$\uff1b\u4e8e\u662f\u8fd9\u6837\u6839\u636e\u539f\u5b57\u7b26\u4e32\u80fd\u5f97\u5230\u4e00\u5f20\u56fe\u3002\u82e5\u60f3\u8981\u4ece\u56fe\u518d\u5f97\u5230\u539f\u5b57\u7b26\u4e32\uff0c\u53ea\u9700\u6309\u4e00\u5b9a\u987a\u5e8f\u904d\u5386\u8fd9\u5f20\u56fe\u7684\u6240\u6709\u8fb9\u5373\u53ef\uff08\u65b9\u6848\u4e00\u5b9a\u5b58\u5728\uff1b\u4f46\u5bf9\u4e8e\u6bcf\u4e2a\u7ed3\u70b9\uff0c\u5176\u51fa\u8fb9\u7684\u904d\u5386\u987a\u5e8f\u662f\u89c4\u5b9a\u7684\uff09\n\n\u63a5\u7740\u518d\u91cd\u65b0\u8003\u8651\u64cd\u4f5c\u7684\u542b\u4e49\u3002\u7531\u4e8e\u64cd\u4f5c\u9009\u5b9a\u7684\u5b50\u4e32\u4e2d \u201c$0$\u201d, \u201c$1$\u201d \u6570\u91cf\u76f8\u7b49\uff0c\u56e0\u6b64\u5176\u5c31\u76f8\u5f53\u4e8e\u5728\u56fe\u4e2d \u201c\u9009\u4e2d\u201d \u4e00\u6761\u56de\u8def\uff1b\u63a5\u7740\u80fd\u53d1\u73b0\u8fd9\u6b21\u64cd\u4f5c\u7b49\u4ef7\u4e8e**\u5c06\u8fd9\u6761\u56de\u8def\u7684\u6240\u6709\u8fb9\u7684\u65b9\u5411\u53d6\u53cd**\uff0c\u5f97\u5230\u7684\u65b0\u56de\u8def\u7684\u904d\u5386\u4f18\u5148\u7ea7\u548c\u4e4b\u524d\u76f8\u540c\uff08\u4e0d\u96be\u53d1\u73b0\u64cd\u4f5c\u524d\u8fd9\u6761\u56de\u8def\u7684\u8fb9\u7684\u904d\u5386\u65f6\u95f4\u6233\u4e00\u5b9a\u662f\u76f8\u90bb\u7684\uff09\n\n\u6211\u4eec\u5c06\u6240\u6709\u6709\u5411\u8fb9\u5747\u89c6\u4e3a\u65e0\u5411\u8fb9\uff0c\u53ef\u4ee5\u53d1\u73b0 \u539f\u95ee\u9898 \u548c \u5728\u8fd9\u5f20\u56fe\u4e2d\u5bfb\u627e\u4e00\u6761 \u201c\u6743\u201d \u6700\u5c0f\u7684\u6b27\u62c9\u8def \u662f\u7b49\u4ef7\u7684\uff1b\u5176\u4e2d \u201c\u6743\u201d \u7684\u5b9a\u4e49\u4e3a\uff0c\u5c06\u6b27\u62c9\u8def\u5f84\u7684\u8fb9\u5e8f\u5217\uff0c\u6309 \u201c\u8fb9\u65b9\u5411\u662f\u4ece\u7f16\u53f7 $x$ \u8fde\u5411\u7f16\u53f7 $x+1$ \u5373\u4e3a \u2018$1$\u2019\uff0c\u5426\u5219\u4e3a \u2018$0$\u2019\u201d \u7684\u89c4\u5219\uff0c\u8f6c\u5316\u5f97\u5230\u7684\u5b57\u7b26\u4e32\u7684\u5b57\u5178\u5e8f\u5927\u5c0f\n\n\uff08\u53d9\u8ff0\u53ef\u80fd\u6709\u70b9\u7e41\u957f\u522b\u4ecb\u610fqaq\uff09\n\n\u81f3\u4e8e\u5982\u4f55\u5bfb\u627e\u8fd9\u6761\u8def\u5f84\uff0c\u53ef\u4ee5\u8003\u8651\u8d2a\u5fc3\n\n\u9996\u5148\u8fd9\u6761\u8def\u5f84\u5e94\u5f53\u4ece\u7ed3\u70b9 $0$ \u51fa\u53d1\u3002\u63a5\u7740\u4e0d\u96be\u53d1\u73b0\u5bf9\u4e8e\u56fe\u4e2d\u7684\u6bcf\u4e2a\u7ed3\u70b9 $x$\uff0c\u4ec5\u53ef\u80fd\u6709\u5411 $x-1$ \u6216 $x+1$ \u8fde\u7684\u8fb9\n\n\u4e3a\u4e86\u65b9\u4fbf\u8bf4\u660e\uff0c\u4e0b\u9762\u6211\u4eec\u6bcf\u904d\u5386\u4e00\u6761\u8fb9\u5c31\u9ed8\u8ba4\u5c06\u8fd9\u6761\u8fb9\u4ece\u56fe\u4e2d \u201c\u5220\u9664\u201d\n\n\u8bbe\u5f53\u524d\u5728\u7ed3\u70b9 $u$\uff08$u$ \u521d\u59cb\u5e94\u4e3a $0$\uff09\uff0c$d(x, y)$ \u8868\u793a\u5269\u4f59\u7684\u8fb9 $(x, y)$ \u7684\u6570\u91cf\u3002\u4e8e\u662f\u6709\uff1a\n\n1. \u5982\u679c $d(u, u-1)$ \u4e3a\u5076\u6570\uff0c$d(u, u+1)$ \u4e3a\u5076\u6570\uff0c\u663e\u7136\u8d2a\u5fc3\u5730\u5148\u8d70 $u-1$\n2. \u5982\u679c $d(u, u-1)$ \u4e3a\u5076\u6570\uff0c$d(u, u+1)$ \u4e3a\u5947\u6570\uff0c\u4e5f\u8d2a\u5fc3\u5730\u5148\u8d70 $u-1$\n3. \u5982\u679c $d(u, u-1)$ \u4e3a\u5947\u6570\uff0c$d(u, u+1)$ \u4e3a\u5076\u6570\uff0c\u82e5 $d(u, u-1)=1$ \u4e14 $d(u, u+1)>0$ \u7684\u8bdd\uff0c\u5c31\u5fc5\u987b\u8d70 $u+1$\uff1b\u5426\u5219 $u+1$ \u5904\u7684\u8fb9\u4e4b\u540e\u5c31\u65e0\u6cd5\u904d\u5386\u4e86\n1. \u5982\u679c $d(u, u-1)$ \u4e3a\u5947\u6570\uff0c$d(u, u+1)$ \u4e3a\u5947\u6570\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0d\u5408\u6cd5\uff08\u4f1a\u5bfc\u81f4\u56fe\u4e0d\u5b58\u5728\u6b27\u62c9\u8def\uff09\n\n\u7136\u540e\u5c31\u505a\u5b8c\u4e86\n\n## CODE\n\n```cpp\n#include <cstdio>\n#include <vector>\nusing std::vector;\n\nconst int MAXN =5e5+20;\n\n/*------------------------------IO------------------------------*/\n\nint read(){\n\tint x =0; char c =getchar(); bool f =0;\n\twhile(c < '0' || c > '9') (c == '-') ? f =1, c =getchar() : c =getchar();\n\twhile(c >= '0' && c <= '9') x =(x<<1)+(x<<3)+(48^c), c =getchar();\n\treturn (f) ? -x : x;\n}\n\nint read_string(char *s){\n\tchar ch =getchar();\n\twhile(ch < '0' && ch > '9')\n\t\tch =getchar();\n\tint tot =0;\n\twhile(ch >= '0' && ch <= '9')\n\t\ts[tot++] =ch, ch =getchar();\n\treturn tot;\n}\n\n/*------------------------------Main------------------------------*/\n\nint main(){\n\tchar s[MAXN];\n\tfor(int t =0, T =read(); t < T; ++t){\n\t\tint n =read_string(s);\n\t\t\n\t\tvector<int> e[2];/* 0: to cur-1 ; 1: to cur+1 */\n\t\te[0].resize(n*2+1, 0), e[1].resize(n*2+1, 0);\n\t\tconst int DELTA =n;\n\t\tfor(int i =0, cur =0; i < n; ++i){\n\t\t\tif(s[i] == '0'){\n\t\t\t\t++e[0][DELTA+cur];\n\t\t\t\t++e[1][DELTA+(cur-1)];\n\t\t\t\t--cur;\n\t\t\t}\n\t\t\telse{\n\t\t\t\t++e[1][DELTA+cur];\n\t\t\t\t++e[0][DELTA+(cur+1)];\n\t\t\t\t++cur;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor(int u =DELTA+0; ;){\n\t\t\tif(e[0][u] >= 2 || (e[0][u] == 1 && e[1][u] == 0)){\n\t\t\t\t--e[0][u];\n\t\t\t\t--e[1][u-1];\n\t\t\t\tputchar('0');\n\t\t\t\tu =u-1;\n\t\t\t}\n\t\t\telse if(e[1][u] >= 1){\n\t\t\t\t--e[1][u];\n\t\t\t\t--e[0][u+1];\n\t\t\t\tputchar('1');\n\t\t\t\tu =u+1;\n\t\t\t}\n\t\t\telse\n\t\t\t\tbreak;\n\t\t}\n\t\tputchar('\\n');\n\t}\n}\n```",
        "postTime": 1608467613,
        "uid": 105254,
        "name": "Piwry",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1458D \u3010Flip and Reverse\u3011"
    },
    {
        "content": "\u5bc6\u7801\u662f\u67d0\u4e2a\u6574\u767e\u4e09\u4f4d\u6570 $\\to$ [`George1123`](https://www.cnblogs.com/George1123/p/14163650.html)\n\n---\n\n\u968f\u624b\u635e\u635e\u4f30\u503c\uff0c\u4e0d\u5199\u90a3\u4e48\u590d\u6742\u4e86\u3002\n\n\u8fd9\u9898\u5de7\u5999\uff0c\u6709 `ATC` \u7684\u611f\u89c9\u3002\n\n\u6bcf\u6b21\u53d8\u5316\u7684\u8981\u6c42\u662f\u5728\u4e00\u4e2a `01` \u6570\u91cf\u76f8\u7b49\u7684\u533a\u95f4\u4e0a\u3002\n\n\u53ef\u4ee5\u524d\u7f00\u548c\uff0c\u8bbe $s_i$ \u8868\u793a $[0,i)$ \u4e2d `1`-`0` \u7684\u4e2a\u6570\uff0c\u6bcf\u6b21\u53ef\u4ee5\u53d8\u5316\u4e00\u6bb5\u533a\u95f4 $[l,r)$\uff0c$s_r=s_l$\u3002\n\n\u5982\u679c\u5efa\u4e00\u5f20\u6709 $2n$ \u4e2a\u70b9\u7684\u65e0\u5411\u56fe\uff0c\u8fde\u8fb9 $(s_i+n,s_{i+1}+n)$\u3002\n\n\u90a3\u4e48\u6bcf\u4e2a\u53ef\u4ee5\u64cd\u4f5c\u7684\u533a\u95f4\u53ef\u4ee5\u770b\u6210\u4e00\u4e2a\u73af\uff0c\u53cd\u8f6c\u52a0\u7ffb\u8f6c\u53ef\u4ee5\u770b\u6210\u5012\u7740\u8d70\u73af\u3002\n\n\u6240\u4ee5\u95ee\u9898\u6210\u4e86\u4e00\u5f20\u65e0\u5411\u56fe\u4e0a\u6700\u5c0f\u5b57\u5178\u5e8f\u8def\u5f84\u95ee\u9898\u3002\n\n\u8fd9\u4e2a\u56fe\u6709\u4e2a\u7279\u70b9\uff1a\u53ea\u6709\u76f8\u90bb\u70b9\u6709\u8fb9\uff0c\u6240\u4ee5\u8bbe $ec(i)$ \u8868\u793a $(i,i+1)$ \u65e0\u5411\u8fb9\u7684\u4e2a\u6570\u3002\n\n\u4ece $0+n$ \u8fd9\u4e2a\u70b9\u5f00\u59cb\u8d70\uff0c\u8bbe\u5f53\u524d\u5728\u70b9 $p$\uff0c\u6bcf\u6b21\u5982\u679c $ec_{p-1}>0$ \u5e76\u4e14\u6ee1\u8db3 $ec_{p}$ \u4e3a $0$\uff08\u4e0d\u9700\u8981\u518d\u8d70\u56de\u6765\uff09\u6216 $ec_{p-1}>1$\uff08\u8fd8\u53ef\u4ee5\u518d\u8d70\u56de\u6765\uff09\u5c31\u5f80 $p-1$ \u8d70\uff0c\u8f93\u51fa `0`\uff1b\u5426\u5219\u5f80 $p+1$ \u8d70\uff0c\u8f93\u51fa `1`\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(n)$\u3002\n\n\n---\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef double db;\n#define x first\n#define y second\n#define bg begin()\n#define ed end()\n#define pb push_back\n#define mp make_pair\n#define sz(a) int((a).size())\n#define R(i,n) for(int i(0);i<(n);++i)\n#define L(i,n) for(int i((n)-1);i>=0;--i)\nconst int iinf=0x3f3f3f3f;\nconst ll linf=0x3f3f3f3f3f3f3f3f;\n\n//Data\nconst int N=5e5;\nint n,ec[N<<1];\nstring str;\n\n//Main\nvoid Main(){\n    cin>>str,n=sz(str);\n    R(i,n<<1) ec[i]=0;\n    int p=n,len=n;\n    for(char &c:str){\n        if(c-='0') ++ec[p++];\n        else ++ec[--p];\n    }\n    for(p=n;len--;){\n        if(ec[p-1]&&(!ec[p]||ec[p-1]>1)) --ec[--p],cout<<0;\n        else --ec[p++],cout<<1;\n    }\n    cout<<'\\n';\n}\nint main(){\n    ios::sync_with_stdio(0);\n    cin.tie(0),cout.tie(0);\n    int t; for(cin>>t;t--;Main());\n    return 0;\n}\n```",
        "postTime": 1608454305,
        "uid": 118365,
        "name": "George1123",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1458D \u3010Flip and Reverse\u3011"
    }
]