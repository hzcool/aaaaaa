[
    {
        "content": "**upd on 22/9/5\uff1a\u4fee\u9505\uff0c\u539f\u505a\u6cd5\u662f\u6709\u95ee\u9898\u7684\uff0c\u867d\u7136\u4ee3\u7801\u6b6a\u6253\u6b63\u7740\u4e86**\n\n[CF698B](https://www.luogu.com.cn/problem/CF698B)\n\n\u9898\u76ee\u6709\u4e9b\u7ec6\u8282\u8fd8\u662f\u4e0d\u9519\u7684\n\n------------\n\n\u663e\u7136\u8f93\u5165\u6784\u6210\u4e86\u51e0\u4e2a\u6811\u6216\u73af\uff08\u4e0d\u4f1a\u51fa\u73b0\u975e\u73af\u7684\u56fe\uff09\uff0c\u6700\u540e\u53ea\u4f1a\u6709\u6839\u662f\u81ea\u73af\uff0c\u5176\u4f59\u8282\u70b9\u7684\u7236\u4eb2\u90fd\u4e0d\u4f1a\u662f\u81ea\u5df1\u3002\n\n\u8003\u8651\u4e00\u4ef6\u4e8b\uff0c\u5982\u679c\u8f93\u5165\u4e2d\u5c31\u6709\u81ea\u73af\uff08\u67d0\u68f5\u6811\u7684\u6839\uff09\uff0c\u90a3\u4e0d\u59a8\u5c31\u8ba9\u5b83\u5f53\u6700\u540e\u6811\u7684\u6839\u3002\u663e\u7136\u7b54\u6848\u4e0d\u4f1a\u66f4\u52a3\u3002\n\n\u5982\u679c\u4e00\u5f00\u59cb\u6ca1\u6709\u81ea\u73af\uff0c\u90a3\u9009\u62e9\u73af\u4e0a\u4e00\u70b9\u4f5c\u4e3a\u6839\u5373\u53ef\u3002\n\n------------\n\n\u63a5\u4e0b\u6765\u8003\u8651\u5408\u5e76\u8fde\u901a\u5757\uff1b\n\n- \u9996\u5148\u8981\u628a\u73af\u53d8\u6210\u6811\u3002\u65b9\u6cd5\u662f\u8bb0\u5f55 $vis$ \u6570\u7ec4\uff0c\u8868\u793a\u662f\u5426\u8bbf\u95ee\u8fc7\u3002\u7136\u540e\u4ece\u6bcf\u4e2a\u8282\u70b9\u5f00\u59cb $\\text{dfs}$\uff0c\u5982\u679c\u4e4b\u524d\u8bbf\u95ee\u8fc7\u4e86\u90a3\u5c31\u8bc1\u660e\u627e\u5230\u4e86\u4e00\u4e2a\u73af\u3002\u53c8\u56e0\u4e3a\u8f93\u5165\u53ea\u53ef\u80fd\u662f\u73af\u6216\u6811\uff0c\u6240\u4ee5\u8fd9\u65f6\u5019\u4f60\u5df2\u7ecf\u904d\u5386\u8fc7\u6574\u4e2a\u73af\u4e86\u3002\u4e8e\u662f\u968f\u4fbf\u627e\u4e00\u4e2a\u8282\u70b9\u7684\u7236\u4eb2\u6307\u5411\u603b\u6839 $root$ \u5373\u53ef\u3002\u5982\u679c\u4e4b\u524d\u8fd8\u672a\u786e\u5b9a $root$\uff0c\u5219\u9009\u4e2d\u7684\u8fd9\u4e2a\u8282\u70b9\u5c31\u662f $root$\u3002\n\n- \u63a5\u4e0b\u6765\u5408\u5e76\u6811\u4e0e\u6811\u3002\u65b9\u6cd5\u5341\u5206\u7b80\u5355\uff0c\u53ea\u9700\u8981\u628a\u6bcf\u4e2a\u6570\u6839\u7684\u7236\u4eb2\u90fd\u6307\u5411 $root$ \u5373\u53ef\u3002\u5224\u65ad\u6811\u6839\u5341\u5206\u7b80\u5355\uff1a\u81ea\u5df1\u7684\u7236\u4eb2\u6307\u5411\u81ea\u5df1\u7684\u8282\u70b9\u5c31\u662f\u6811\u6839\u3002\n\n\u81f3\u6b64\uff0c\u672c\u9898\u5c31\u89e3\u51b3\u5b8c\u4e86\u3002\u8fd8\u6709\u4ec0\u4e48\u7ec6\u8282\u4f1a\u5728\u4ee3\u7801\u4e2d\u4f53\u73b0\u3002\n\n------------\n\nCODE:\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n\nlong long n,a[2000010],f[2000010],vis[2000010],root,tot,ans;\n\nvoid dfs(long long u){\n\tif(vis[u]) return;\n\tvis[u]=tot;\n\tif(f[u]==u){\n\t\tif(!root) root=u;//\u5982\u679c\u672c\u6765\u6ca1\u6709root\u5b83\u81ea\u5df1\u5c31\u5f53root\n\t\telse{\n\t\t\tf[u]=root;\n\t\t}\n\t\treturn;\n\t} \n\tif(vis[f[u]]){\n\t\tif(vis[f[u]]==tot){//\u662f\u73af\n\t\t\tif(!root){\n\t\t\t\tf[u]=u;\n\t\t\t\troot=f[u];\n\t\t\t}\n\t\t\telse{\n\t\t\t\tf[u]=root;\n\t\t\t}\t\n\t\t}\n\t\treturn;\n\t}\n\tdfs(f[u]);\n}\n\nint main(){\n\tlong long i,j,u,v;\n\tcin>>n;\n\tfor(i=1;i<=n;i++){\n\t\tcin>>a[i];\n\t}\n\tmemcpy(f,a,sizeof(a));\n\tfor(i=1;i<=n;i++){//\u63d0\u524d\u627eroot\n\t\tif(f[i]==i){\n\t\t\troot=i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(i=1;i<=n;i++){\n\t\ttot++;//\u8fd9\u662f\u4e00\u4e2a\u7ec6\u8282\u5751\u70b9\uff1a\u6709\u53ef\u80fd\u4f60\u4e4b\u524d\u8bbf\u95ee\u8fc7\u6811\u7684\u4e00\u90e8\u5206\uff08\u4e0d\u662f\u73af\uff09\uff0c\u6240\u4ee5\u6bcf\u6b21dfs\u90fd\u8981\u6253\u4e0d\u540c\u7684\u6807\u8bb0\n\t\tdfs(i);\n\t}\n\tfor(i=1;i<=n;i++){\n\t\tif(f[i]!=a[i]) ans++;//\u6700\u540e\u7edf\u8ba1\u7b54\u6848\n\t}\n\tcout<<ans<<endl;\n\tfor(i=1;i<=n;i++){\n\t\tcout<<f[i]<<\" \";\n\t}\n\tcout<<endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1622276019,
        "uid": 150064,
        "name": "Gokix",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF698B \u3010Fix a Tree\u3011"
    },
    {
        "content": "**\u9898\u610f\uff1a\u4fee\u6539\u4e00\u4e2a\u56fe\uff08\u6240\u6709\u8282\u70b9\u51fa\u5ea6\u5747\u4e3a\u4e00\uff09\u4e0a\u90e8\u5206\u8282\u70b9\u7684\u7236\u8282\u70b9\uff0c\u4f7f\u5176\u6210\u4e3a\u4e00\u9897\u6811**  \n**\u6ce8\u610f\uff1a\u56fe\u4e0d\u4e00\u5b9a\u8fde\u901a**\n## \u505a\u6cd5\uff1a\n>\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u6bcf\u4e2a\u8fde\u901a\u5757\uff0c  \n\u56e0\u4e3a\u6240\u6709\u8282\u70b9\u51fa\u5ea6\u5747\u4e3a1\uff0c \u6240\u4ee5\u8fde\u901a\u5757\u53ea\u53ef\u80fd\u4e3a\u6811\u548c\u7b80\u5355\u73af  \n\u5224\u522b\u65b9\u6cd5\u89c1\u4ee3\u7801  \n\u5c06\u6240\u6709pre[i]=i\u7684\u8282\u70b9\u8fde\u5230\u540c\u4e00\u6839\u4e0a\uff0c  \n\u82e5\u56fe\u4e2d\u53ea\u6709\u73af\uff0c\u6700\u5c0f\u64cd\u4f5c\u6570\u4e3a\u8fde\u901a\u5757\u6570\uff1b  \n\u5426\u5219\uff0c\u6700\u5c0f\u64cd\u4f5c\u6570\u4e3a\u8fde\u901a\u5757\u6570-1\uff1b\n\n\n# \u653e\u4ee3\u7801\uff1a\n```cpp\n#include<stdio.h>\nint pre[210000],n,fa[210000],rtn,qn,rt,q;\nint find(int x) {\n\treturn pre[x]==x?x:pre[x]=find(pre[x]);\n}\nvoid merge(int x,int y) {\n\tint fx=find(x),fy=find(y);\n\tif(fx==fy)return;\n\tpre[fx]=fy;\n}\nint readin() {\n\tint num=0;\n\tchar str=getchar();\n\twhile(str<'0'||str>'9')str=getchar();\n\twhile(str>='0'&&str<='9')\n\t\tnum=(num<<1)+(num<<3)+str-48,str=getchar();\n\treturn num;\n}\nint main() {\n\tn=readin();\n\tfor(int i=1; i<=n; i++)pre[i]=i;\n\tfor(int i=1; i<=n; i++) {\n\t\tfa[i]=readin();\n\t\tmerge(i,fa[i]);\n\t}//\u6240\u6709\u8282\u70b9\u51fa\u5ea6\u5747\u4e3a1\uff0c\u56fe\u4e2d\u53ea\u6709\u6811\u548c\u7b80\u5355\u73af \n\tfor(int i=1; i<=n; i++)\n\t\tif(pre[i]==i&&fa[i]==i)//\u5224\u6811\n\t\t\trt=i; //\u627e\u6839 \n\tif(rt) {\n\t\tfor(int i=1; i<=n; i++) {\n\t\t\tif(pre[i]-i)continue;\n\t\t\tqn++;\n\t\t\tif(fa[i]==i) {//\u5904\u7406\u6811\n\t\t\t\trtn++;\n\t\t\t\tif(i-rt)fa[i]=rt;\n\t\t\t} else fa[i]=rt;//\u5904\u7406\u73af \n\t\t}\n\t\tprintf(\"%d\\n\",qn-1);\n\t}else{//\u53ea\u6709\u73af\u7684\u6811\u5355\u72ec\u5904\u7406 \n\t\tfor(int i=1; i<=n; i++) {\n\t\t\tif(pre[i]-i)continue;\n\t\t\tqn++;\n\t\t\tif(!rt)rt=i;\n\t\t\tfa[i]=rt;\n\t\t}printf(\"%d\\n\",qn);\n\t}for(int i=1; i<=n; i++)\n\t\tprintf(\"%d \",fa[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1574638677,
        "uid": 212187,
        "name": "VTloBong",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF698B \u3010Fix a Tree\u3011"
    },
    {
        "content": "\u9996\u5148\u8bf4\u660e\u4e00\u4e0b\uff1a~~\u90a3\u4e2a\u7ffb\u8bd1\u7684\u4eba\u6839\u672c\u5c31\u50cf\u662f\u6ca1\u6709\u8bfb\u8fc7\u9898\u76ee\uff01\uff01\uff01~~\n\n\u6c34\u9898\u4e00\u9053\uff1a\n\n\u5148\u901a\u8fc7dfs\u627e\u51fa\u54ea\u4e9b\u6709\u53ef\u80fd\u65f6\u6839\u8282\u70b9\uff0c\u7136\u540e\u5728\u4ed6\u4eec\u4e2d\u627e\u4e00\u4e2a\u5f53\u505aroot\uff0c\u5269\u4e0b\u6765\u7684\u5f52\u5230root\u4e0a\u5c31\u884c\u4e86\u3002\n\n\u5e9f\u8bdd\u4e0d\u591a\uff0c\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MX=200005;\nint v[MX],c[MX],f[MX],n;\ninline int dfs(int x){  //\u67d3\u8272\n\tif(c[x]) return c[x];\n\tif(v[x]) return c[x]=x;\n\tv[x]=1;\n\treturn c[x]=dfs(f[x]);\n}\nint mian(){\n\tios_base::sync_with_stdio(false);\n\tint i,j,root,gs;\n\troot=gs=0;\n\tcin>>n;\n\tfor(i=1;i<=n;i++) cin>>f[i];\n\tfor(i=1;i<=n;i++) dfs(i);                      //\u6bcf\u4e00\u4e2a\u90fd\u627e\u4e00\u904d\uff0c\u8fdb\u884c\u67d3\u8272\n\tfor(i=1;i<=n;i++) if(c[i]==i&&f[i]==i) root=i; \n\tif(!root){                                     //\u6ca1\u6709\u6839\u81ea\u5df1\u9020\u6839\n\t\tfor(i=1;i<=n;i++){\n\t\t\tif(c[i]!=i) continue;\n\t\t\tgs++;\n\t\t\tf[i]=i;\n\t\t\troot=i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(i=1;i<=n;i++) if(c[i]==i) gs++,f[i]=root;\n\tcout<<gs-1<<endl;                              //\u6700\u540e\u53ea\u6709\u4e00\u4e2a\u6839\n\tfor(i=1;i<=n;i++) cout<<f[i]<<\" \";\n\tcout<<endl;\n\treturn 0; \n}\n```",
        "postTime": 1547907307,
        "uid": 95333,
        "name": "\u4e1a\u4f59\u95e8\u69db",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF698B \u3010Fix a Tree\u3011"
    },
    {
        "content": "\u5f53\u65f6\u4e5f\u662f\u60f3\u5230\u4e86\u5e76\u67e5\u96c6\uff0c\u4f46\u662f\u6709\u51e0\u4e2a\u5730\u65b9\u6ca1\u6709\u60f3\u6e05\u695a\uff0c\u6240\u4ee5\u5c31\u4e0d\u77e5\u9053\u600e\u4e48\u5199\u4e86\uff0c\u6bd4\u5982\u8bf4\u5982\u4f55\u786e\u5b9a\u6700\u4f18\u7684\u95ee\u9898\u3002\n\n\u5176\u5b9e\u6ca1\u6709\u90a3\u4e48\u590d\u6742\uff0c\u8fd9\u4e2a\u9898\u76ee\u6211\u4eec\u7684\u64cd\u4f5c\u53ea\u6709\u4e09\u4e2a\n- 1\u3001\u786e\u5b9a\u6839\u8282\u70b9\u3002\n- 2\u3001\u89e3\u73af\u3002\n- 3\u3001\u8fde\u63a5\u5b50\u6811\u3002\n\n\u5982\u679c\u9898\u76ee\u4e2d\u7ed9\u51fa\u4e86\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u6839\u8282\u70b9\uff0c\u6211\u4eec\u4efb\u9009\u4e00\u4e2a\u5373\u53ef\uff0c\u8bc1\u660e\uff1a\u5047\u8bbe\u6709 $k$ \u4e2a\u53ef\u884c\u6839\u8282\u70b9\uff0c\u90a3\u4e48\u9009\u62e9\u4e00\u4e2a\u4e0d\u52a8\uff0c\u6539\u52a8 $k-1$ \u6b21\uff0c\u6bcf\u79cd\u9009\u62e9\u90fd\u662f\u8fd9\u6837\u3002\u4f46\u5982\u679c\u9898\u76ee\u4e2d\u6ca1\u6709\u53ef\u9009\u6839\u8282\u70b9\uff0c\u5c31\u4e0d\u53ef\u4ee5\u968f\u4fbf\u53bb\u9009\u4e86\uff0c\u9996\u5148\u660e\u786e\u8fd9\u79cd\u60c5\u51b5\u4e00\u5b9a\u5b58\u5728\u4e861\u4e2a\u6216\u8005\u591a\u4e2a\u73af\uff0c\u6211\u4eec\u4e00\u5b9a\u8981\u4ece\u73af\u4e2d\u9009\u53d6\u6839\u8282\u70b9\uff0c\u56e0\u4e3a\u8fd9\u6837\u53ea\u8fdb\u884c\u4e86\u4e00\u6b21\u64cd\u4f5c\u5c31\u7834\u73af\u4e86\u73af\u7ed3\u6784\u800c\u4e14\u786e\u5b9a\u4e86\u6839\u8282\u70b9\uff0c\u5982\u679c\u5728\u73af\u5916\u9009\u62e9\u6839\u8282\u70b9\uff0c\u5219\u6539\u52a8\u4e3a\u6839\u8282\u70b9\u9700\u89811\u6b65\uff0c\u89e3\u73af\u4e5f\u9700\u8981\u4e00\u6b65\uff0c\u4e0d\u662f\u6700\u4f18\u89e3\uff01\n\n\u4e3a\u4e86\u64cd\u4f5c\u65b9\u4fbf\uff0c\u4f7f\u7528\u5e76\u67e5\u96c6\u5bfb\u627e\u73af\uff0c\u5e76\u5c06\u627e\u5230\u7b2c\u4e00\u4e2a\u73af\u7684\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\u4f5c\u4e3a\u6839\u8282\u70b9\u3002\n\n\u5728\u786e\u5b9a\u4e86\u6839\u8282\u70b9\u4e4b\u540e\uff0c\u5982\u679c\u9047\u5230\u5176\u4ed6\u53ef\u884c\u6839\u8282\u70b9\uff0c\u76f4\u63a5\u8fde\u63a5\u5230\u5df2\u786e\u5b9a\u6839\u8282\u70b9\u5373\u53ef\uff0c\u5c31\u662f\u8fde\u63a5\u5b50\u6811\u7684\u64cd\u4f5c\u3002\n\n\u6ce8\u610f\uff1a\u8fd9\u4e2a\u6ce8\u610f\u662f\u5bf9\u6211\u81ea\u5df1\u8bf4\u7684\uff0c\u4e5f\u662f\u5bf9\u4e00\u4e9b\u5411\u6211\u4e00\u6837\u7684\u4eba\u8bf4\u7684\uff0c\u6211\u72af\u4e86\u4e00\u4e2a\u4f4e\u7ea7\u9519\u8bef\uff0c\u6211\u5728\u5224\u65ad\u73af\u7684\u65f6\u5019\u5c45\u7136\u6ca1\u6709\u7528 find \u5224\u65ad\uff0c\u800c\u662f\u7528 $fa$ \u5224\u65ad\uff0c\u5f53\u65f6\u8fd8\u611f\u89c9\u5f88\u56f0\u60d1\uff0c\u4ee5\u4e3a\u5408\u5e76\u65b9\u5f0f\u4e0d\u5bf9\uff0c\u53d1\u73b0\u4e86\u4ee5\u540e\u624d\u611f\u89c9\u81ea\u5df1\u771f\u662f\u597d\u4e45\u6ca1\u505a\u8fc7\u5e76\u67e5\u96c6\u4e86\uff0c\u592a\u849f\u84bb\u4e86\u3002\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\n#define N 200020\nint a[N],fa[N];\nint Find(int x)\n{\n    return x==fa[x] ? x : fa[x] = Find(fa[x]);\n}\nvoid unin(int x,int y)\n{\n    int fax = Find(x);\n    int fay = Find(y);\n    fa[fay] = fax;\n}\nint main()\n{\n    int root = -1,ans=0,n;\n    cin>>n;\n    for(int i = 1; i <= n; i++)\n    {\n        cin>>a[i];\n        fa[i] = i;\n        if(a[i]==i) root = i;\n    }\n    for(int i = 1; i <= n; i++)\n    {\n        if(i == a[i] && a[i] == root) continue;\n        else if(a[i] == i && i != root)\n        {\n            a[i] = root;\n            ans++;\n            unin(root,i);\n        }\n        else if(a[i] != i && Find(a[i]) != Find(i))\n        {\n            unin(a[i],i);\n        }\n        else if(a[i] != i && Find(a[i]) == Find(i))\n        {\n            ans++;\n            if(root == -1)\n            {\n                root = i;\n            }\n            a[i] = root;\n            unin(root,i);\n        }\n    }\n    cout<<ans<<endl;\n    for(int i = 1; i <= n; i++)\n    {\n        if(i==n) cout<<a[i]<<endl;\n        else cout<<a[i]<<\" \";\n    }\n    return 0;\n}\n```\n\n-------------\n\n\u5e0c\u671b\u770b\u61c2",
        "postTime": 1670224863,
        "uid": 616996,
        "name": "tmp_get_zip_diff",
        "ccfLevel": 0,
        "title": "CF698B\u9898\u89e3"
    },
    {
        "content": "\u6211\u4eec\u6ce8\u610f\u5230\u6309\u7167\u539f\u56fe\u7684\u5212\u5206\u65b9\u5f0f\uff0c\u8fd9\u4e2a\u56fe\u4f1a\u5212\u5206\u6210\u82e5\u5e72\u4e2a\u8fde\u901a\u5757\u3002\n\n\u5982\u679c\u6211\u4eec\u8003\u8651 $a_i=i$ \u7684\u81ea\u73af\uff0c\u90a3\u4e48**\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\u90fd\u662f\u4e00\u68f5\u57fa\u73af\u6811**\uff08\u5373\u8fb9\u6570\u4e0e\u70b9\u6570\u76f8\u540c\u7684\u8fde\u901a\u56fe\uff09\u3002\n\n\u6211\u4eec\u8003\u8651\u627e\u51fa\u8fd9\u4e9b\u57fa\u73af\u6811\u7684\u73af\uff0c\u5220\u9664\u5176\u4e2d\u4e00\u6761\u8fb9\uff0c\u5e76\u7528\u8fd9\u6761\u8fb9\u4e0e\u5176\u4ed6\u8fde\u901a\u5757\u8fde\u63a5\uff0c\u8fd9\u6837\u6211\u4eec\u7528\u4e00\u6b21\u4fee\u6539\u51cf\u5c11\u4e86\u4e00\u4e2a\u8fde\u901a\u5757\u3002\n\n\u6211\u4eec\u8003\u8651\u5c06\u90a3\u4e9b\u5220\u6389\u7684\u8fb9\u4e0e\u54ea\u4e2a\u8fde\u901a\u5757\u76f8\u8fde\u3002\n\n\u6ce8\u610f\u5230\u9898\u76ee\u4e2d\u5c06 $a_i=i$ \u7684\u73af\u5f53\u4f5c\u6839\u8282\u70b9\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c**\u5b58\u5728\u8fd9\u79cd\u60c5\u51b5\u7684\u8fde\u901a\u5757\u5b9e\u9645\u4e0a\u662f\u4e00\u68f5\u201c\u6811\u201d**\u3002\n \n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u63d0\u51fa\u4e00\u68f5\u201c\u6811\u201d\uff0c\u5c06\u6240\u6709\u5220\u6389\u7684\u8fb9\u90fd\u8fde\u5411\u8fd9\u68f5\u201c\u6811\u201d\uff0c\u7b54\u6848\u4fbf\u662f\u8fde\u901a\u5757\u7684\u4e2a\u6570\u51cf\u4e00\u3002\n\n\u6ce8\u610f\u5230\u9898\u76ee\u4e2d\u53ef\u80fd\u6ca1\u6709 $a_i=i$ \u7684\u60c5\u51b5\uff0c\u8fd9\u79cd\u60c5\u51b5\u9700\u8981\u989d\u5916\u4fee\u6539\u51fa\u8fd9\u79cd\u8fb9\uff0c\u5e76\u4f7f\u7b54\u6848\u52a0\u4e00\u3002\n\nCode: \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct dsu{\n\tint f[200005];\n\tdsu(){\n\t\tiota(f+1,f+200001,1);\n\t}\n\tint find(int x)\n\t{\n\t\treturn f[x]==x?x:f[x]=find(f[x]);\n\t}\n\tvoid make(int x,int y)\n\t{\n\t\tf[find(x)]=find(y);\n\t}\n}T;//\u5e76\u67e5\u96c6\u90e8\u5206\uff0c\u7528\u6765\u627e\u8fde\u901a\u5757\nint n,a[200005],cnt,v[200005],vis[200005],nxt[400005],head[200005],go[400005],tag[400005],k,ans[200005],po[200005],q,d=-1;\nvoid add(int u,int v,int w)\n{\n\tnxt[++k]=head[u];\n\thead[u]=k;\n\tgo[k]=v;\n\ttag[k]=w;\n}\nvoid dfs(int x,int fa,int p)\n{\n\tv[x]=p;\n\tfor(int i=head[x];i;i=nxt[i])\n\t{\n\t\tint g=go[i];\n\t\tif(g!=fa)\n\t\t{\n\t\t\tif(v[g]==p)\n\t\t\t{\n\t\t\t\tans[tag[i]]=p;\n\t\t\t\tq=1; //\u6807\u8bb0\u73af\u8fb9\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse dfs(g,x,p);\n\t\t}\n\t}\n}\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint u;\n\t\tcin>>u;\n\t\ta[i]=u;\n\t\tadd(u,i,i);\n\t\tadd(i,u,i);\n\t\tT.make(u,i);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(!vis[T.find(i)])\n\t\t{\n\t\t\tcnt++;\n\t\t\tq=0;\n\t\t\tvis[T.find(i)]=cnt;\n\t\t\tpo[cnt]=i;\n\t\t\tdfs(i,0,cnt);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(ans[i])\n\t\t{\n\t\t\tif(a[i]==i) \n\t\t\t{\n\t\t\t\td=vis[T.find(i)]; //\u6807\u8bb0\u8fde\u5411\u54ea\u4e2a\u8fde\u901a\u5757\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tif(d==-1) //\u4e0d\u5b58\u5728\u5c31\u9020\u4e00\u4e2a\n\t{\n\t\tcnt++;\n\t\td=1;\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(ans[i]&&vis[T.find(i)]==1)\n\t\t\t{\n\t\t\t\tans[i]=0;\n\t\t\t\ta[i]=i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tcout<<cnt-1<<\"\\n\";\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(ans[i]!=0&&vis[T.find(i)]!=d)\n\t\t{\n\t\t\tcout<<po[d]<<\" \";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcout<<a[i]<<\" \";\n\t\t}\n\t}\n}\n```",
        "postTime": 1664524659,
        "uid": 122836,
        "name": "World_Creater",
        "ccfLevel": 0,
        "title": "CF698B Fix a Tree"
    },
    {
        "content": "\u9996\u5148\u4e0d\u96be\u53d1\u73b0\uff0c\u56e0\u4e3a\u9898\u76ee\u9650\u5236\u4e86\u4e00\u4e2a\u70b9\u6700\u591a\u53ea\u6709\u4e00\u6761\u51fa\u8fb9\uff0c\u6240\u4ee5\u6240\u6709\u8fde\u901a\u5757\u663e\u7136\u8981\u4e48\u662f\u57fa\u73af\u6811\u8981\u4e48\u662f\u6811\u3002\n\n\u89c2\u5bdf\u53ef\u77e5\u9898\u76ee\u7ed9\u5b9a\u7684\u64cd\u4f5c\u76f8\u5f53\u4e8e\u5141\u8bb8\u65ad\u6389\u4e00\u6761\u8fb9\u6216\u8005\u6539\u53d8\u4e00\u6761\u8fb9\u3002\n\n\u5982\u679c\u6709\u6811\u7684\u60c5\u51b5\u4e0b\u76f4\u63a5\u628a\u6811\u7684\u6839\u8282\u70b9\u786e\u5b9a\u4e0b\u6765\u663e\u7136\u66f4\u4f18\uff0c\u5426\u5219\u9700\u8981\u5148\u65ad\u4e00\u6761\u8fb9\u5c06\u8fd9\u4e2a\u8fde\u901a\u5757\u53d8\u6210\u6811\uff0c\u73b0\u5728\u5047\u8bbe\u8fde\u901a\u5757\u662f\u81f3\u5c11\u4e00\u68f5\u6811\u548c\u82e5\u5e72\u4e2a\u73af\u3002\n\n\u5bf9\u4e8e\u73af\u7684\u90e8\u5206\uff0c\u76f4\u63a5\u6539\u53d8\u8fd9\u6761\u8fb9\u63a5\u5230\u6811\u4e0a\u5373\u53ef\uff0c\u6811\u7c7b\u4f3c\uff0c\u6240\u4ee5\u95ee\u9898\u5b9e\u9645\u4e0a\u8f6c\u5316\u4e3a\u7edf\u8ba1\u70b9\u8fde\u901a\u5757\u6570\u91cf\u3002\n\n\u770b\u89c1\u70b9\u8fde\u901a\u5757\u95ee\u9898\uff0c\u679c\u65ad\u4e0a LCT \u7ef4\u62a4\uff0c\u627e\u5230\u4e00\u4e2a\u73af\u7684\u65f6\u5019\u65ad\u6389\u73af\uff0c\u7d2f\u52a0\u7b54\u6848\uff0c\u5426\u5219\u76f4\u63a5\u5408\u5e76\u4e24\u4e2a\u70b9\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $ \\mathcal{O}(n\\log{n}) $\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\ninline int read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile (ch<'0'||ch>'9'){if (ch=='-') f=-1;ch=getchar();}\n\twhile (ch>='0'&&ch<='9'){x=x*10+ch-48;ch=getchar();}\n\treturn x*f;\n}\nconst int maxn=2e5+10;\nconst int mod=1e9;\nstruct Splay\n{\n    int ch[maxn][2],fa[maxn],siz[maxn],val[maxn],sum[maxn],add[maxn],mul[maxn],rev[maxn];\n    void clear(int x)\n    {\n        ch[x][0]=ch[x][1]=fa[x]=siz[x]=val[x]=sum[x]=add[x]=rev[x]=0;\n        mul[x]=1;\n    }\n    int getch(int x)\n    {\n        return (ch[fa[x]][1]==x);\n    }\n    int isroot(int x)\n    {\n        clear(0);\n        return ch[fa[x]][0]!=x&&ch[fa[x]][1]!=x;\n    }\n    void maintain(int x)\n    {\n        clear(0);\n        siz[x]=(siz[ch[x][0]]+1+siz[ch[x][1]])%mod;\n        sum[x]=(sum[ch[x][0]]+val[x]+sum[ch[x][1]])%mod;\n    }\n    void pushdown(int x)\n    {\n        clear(0);\n        if(mul[x]!=1)\n        {\n            if(ch[x][0])\n            mul[ch[x][0]]=(mul[x]*mul[ch[x][0]])%mod,val[ch[x][0]]=(val[ch[x][0]]*mul[x])%mod,sum[ch[x][0]]=(sum[ch[x][0]]*mul[x])%mod,add[ch[x][0]]=(add[ch[x][0]]*mul[x])%mod;\n            if(ch[x][1])\n            mul[ch[x][1]]=(mul[x]*mul[ch[x][1]])%mod,val[ch[x][1]]=(val[ch[x][1]]*mul[x])%mod,sum[ch[x][1]]=(sum[ch[x][1]]*mul[x])%mod,add[ch[x][1]]=(add[ch[x][1]]*mul[x])%mod;\n            mul[x]=1;\n        }\n        if(add[x])\n        {\n            if(ch[x][0])\n            add[ch[x][0]]=(add[ch[x][0]]+add[x])%mod,val[ch[x][0]]=(val[ch[x][0]]+add[x])%mod,sum[ch[x][0]]=(sum[ch[x][0]]+add[x]*siz[ch[x][0]])%mod;\n            if(ch[x][1])\n            add[ch[x][1]]=(add[ch[x][1]]+add[x])%mod,val[ch[x][1]]=(val[ch[x][1]]+add[x])%mod,sum[ch[x][1]]=(sum[ch[x][1]]+add[x]*siz[ch[x][1]])%mod;\n            add[x]=0;\n        }\n        if(rev[x])\n        {\n            if(ch[x][0])\n            rev[ch[x][0]]^=1,swap(ch[ch[x][0]][0],ch[ch[x][0]][1]);\n            if(ch[x][1])\n            rev[ch[x][1]]^=1,swap(ch[ch[x][1]][0],ch[ch[x][1]][1]);\n            rev[x]=0;\n        }\n    }\n    void update(int x)\n    {\n        if(!isroot(x))\n        update(fa[x]);\n        pushdown(x);\n    }\n    void rotate(int x)\n    {\n        int y=fa[x],z=fa[y],chx=getch(x),chy=getch(y);\n        fa[x]=z;\n        if(!isroot(y))\n        ch[z][chy]=x;\n        ch[y][chx]=ch[x][chx^1];\n        fa[ch[x][chx^1]]=y;\n        ch[x][chx^1]=y;\n        fa[y]=x;\n        maintain(y);\n        maintain(x);\n        maintain(z);\n    }\n    void splay(int x)\n    {\n        update(x);\n        for(int f=fa[x];f=fa[x],!isroot(x);rotate(x))\n        if(!isroot(f))\n        rotate(getch(x)==getch(f)?f:x);\n    }\n    void access(int x)\n    {\n        for(int f=0;x;f=x,x=fa[x])\n        splay(x),ch[x][1]=f,maintain(x);\n    }\n    void makeroot(int x)\n    {\n        access(x);\n        splay(x);\n        swap(ch[x][0],ch[x][1]);\n        rev[x]^=1;\n    }\n    int find(int x)\n    {\n        access(x);\n        splay(x);\n        while(ch[x][0])\n        x=ch[x][0];\n        splay(x);\n        return x;\n    }\n    void final_mul(int u,int v,int c)\n    {\n    makeroot(u), access(v), splay(v);\n      val[v] = val[v] * c % mod;\n      sum[v] = sum[v] * c % mod;\n      mul[v] = mul[v] * c % mod;\n    }\n    void final_add(int u,int v,int c)\n    {\n    makeroot(u), access(v), splay(v);\n      val[v] = (val[v] + c) % mod;\n      sum[v] = (sum[v] + siz[v] * c % mod) % mod;\n      add[v] = (add[v] + c) % mod;\n    }\n    int query1(int u,int v)\n    {\n    makeroot(u), access(v), splay(v);\n    return sum[v];\n    }\n    void link(int u,int v)\n    {\n    if (find(u) != find(v)) \n    makeroot(u), fa[u] = v;\n    }\n    void cut(int u,int v)\n    {\n    makeroot(u);\n      access(v);\n      splay(v);\n      if (ch[v][0] == u && !ch[u][1]) \n      ch[v][0] = fa[u] = 0;\n    }\n    bool query2(int u,int v)\n    {\n    return find(u) == find(v);\n    }\n}st;\nint find(int x)\n{\nreturn st.find(x);\n}\nvoid merge(int u,int v)\n{\nst.link(u,v);\n}\nvoid clean(int n)\n{\nfor(int i=1;i<=n;i++)\nst.clear(i),st.maintain(i),st.splay(i);\n}//main\nint a[2000020],ans=0;\nvoid gen(int n)\n{\nint f[2000020];\nfor(int i=1;i<=n;i++)\nf[i]=i;\ndo\n{\nif(0)//add something here.\nans++;\n}while(next_permutation(f+1,f+n+1));\n}\n#define Y cout<<\"Yes\"<<'\\n'\n#define N cout<<\"No\"<<'\\n'\nsigned main()\n{\nint T=1;\n//cin>>T;\nwhile(T--)\n{\n    int n;\n    cin >> n;\n    for(int i = 1; i <= n; i++) \n    cin >> a[i];\n    clean(n);\n    int root = 0;\n    int ans = 0;\n    for(int i = 1; i <= n; i++)\n        if(i==a[i]) \n        root = i;\n    for(int i = 1; i <= n; i++)\n    {\n        if(i==root) \n        continue;\n        int x = st.find(i);\n        int y = st.find(a[i]);\n        if(x==y)\n        {\n            if(!root) \n            root = i;\n            a[i] = root;\n            ans++;\n        }\n        else\n        merge(x,y);\n    }\n    cout<<ans<<'\\n';\n    for(int i = 1; i <= n; i++) \n    cout<<a[i]<<\" \"; \n}\n}\n//V me 30000\n```\n",
        "postTime": 1672818474,
        "uid": 714821,
        "name": "loser_seele",
        "ccfLevel": 4,
        "title": "CF698B\u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u8fd9\u662f\u4e00\u5768\u5185\u5411\u57fa\u73af\u6811\u68ee\u6797\u3002\n\n\u6bcf\u6b21\u64cd\u4f5c\u4fee\u6539\u4e00\u6761\u8fb9\uff0c\u53ef\u4ee5\u5408\u5e76\u4e24\u4e2a\u8fde\u901a\u5757\u3002\u8fde\u901a\u5757\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\uff0c\u5982\u679c\u65b0\u52a0\u5165\u7684\u8fb9\u4e24\u7aef\u70b9\u5728\u540c\u4e00\u8fde\u901a\u5757\u5185\uff0c\u8bf4\u660e\u52a0\u4e0a\u4ee5\u540e\u4f1a\u6709\u73af\uff0c\u9700\u8981\u66f4\u6539\u8fd9\u6761\u8fb9\u3002\n\n\u9996\u5148\u5728\u539f\u6570\u7ec4\u4e2d\u627e\u5230\u4e00\u4e2a $a_i=i$ \u7684\u70b9\u94a6\u5b9a\u5b83\u662f\u6839\u3002\u7136\u540e\u4e00\u5207\u8981\u6539\u7684\u8fb9\u5168\u90e8\u65e0\u8111\u5f80\u6839\u4e0a\u8fde\u5373\u53ef\u3002\n\n\u5982\u679c\u5728\u539f\u6570\u7ec4\u4e2d\u627e\u4e0d\u5230 $a_i=i$ \u7684\u70b9\u600e\u4e48\u529e\u5462\uff0c\u6211\u4eec\u627e\u5230\u7b2c\u4e00\u6761\u9700\u8981\u6539\u7684\u8fb9 $i\\to a_i$\uff0c\u628a\u5b83\u7684\u51fa\u53d1\u70b9 $i$ \u94a6\u5b9a\u4e3a\u6839\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u6109\u5feb\u5730\u4f7f\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u4e86\u3002\n\n\u7b80\u77ed\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int maxn = 2e5 + 1;\n\nint n;\nint a[maxn];\nint fa[maxn];\nint cnt, root;\n\nint find(int x) {\n    return x == fa[x] ? x : fa[x] = find(fa[x]);\n}\n\nint main() {\n    cin >> n;\n    for (int i = 1; i <= n; i++) {\n        cin >> a[i];\n        fa[i] = i;\n        if (!root && a[i] == i) root = i;\n    }\n    for (int i = 1; i <= n; i++) {\n        if (i == root) continue;\n        int u = find(i), v = find(a[i]);\n        if (u != v) fa[u] = v;\n        else if (!root) root = i, a[i] = i, ++cnt;\n        else a[i] = root, fa[u] = find(root), ++cnt;\n    }\n    cout << cnt << endl;\n    for (int i = 1; i <= n; i++) {\n        cout << a[i] << \" \";\n    }\n    return 0;\n}\n```",
        "postTime": 1671709320,
        "uid": 362750,
        "name": "TernaryTree",
        "ccfLevel": 0,
        "title": "CF698B Fix a Tree"
    }
]