[
    {
        "content": "**\u9898\u610f**\n\n\u7ed9\u4e00\u4e2a\u957f\u5ea6\u4e3a$n$\u7684\u6570\u7ec4\uff0c\u6570\u7ec4\u4e2d\u7684\u6570\u4e92\u4e0d\u76f8\u540c\uff0c\u4f60\u53ef\u4ee5\u6709\u4e24\u79cd\u64cd\u4f5c\n\n+ \u5c06\u67d0\u4e00\u4e2a\u6570\u653e\u7f6e\u5728\u6570\u7ec4\u5f00\u5934\n+ \u5c06\u67d0\u4e00\u4e2a\u6570\u653e\u7f6e\u5728\u6570\u7ec4\u7ed3\u5c3e\n\n\u95ee\u6700\u5c0f\u64cd\u4f5c\u591a\u5c11\u6b21\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u9012\u589e\u6570\u5217\n\n**\u5206\u6790**\n\n\u56e0\u4e3a\u6570\u7ec4\u4e2d\u7684\u6570\u5f88\u5927\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u79bb\u6563\u5316\u7136\u540e\u64cd\u4f5c\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u957f\u5ea6\u4e3a$n$\u7684\u6392\u5217\uff0c\u76ee\u7684\u662f\u5f97\u5230\u4e00\u4e2a\u4ece$1$\u5230$n$\u7684\u987a\u5e8f\u6392\u5217\n\n\u6bcf\u4e2a\u6570\u6700\u591a\u64cd\u4f5c\u4e00\u6b21\uff0c\u5426\u5219\u7b2c\u4e00\u6b21\u53ef\u4ee5\u4e0d\u64cd\u4f5c\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8981\u627e\u6700\u591a\u7684\u4e0d\u9700\u8981\u64cd\u4f5c\u7684\u6570\uff0c\u5982\u679c\u4e0d\u9700\u8981\u64cd\u4f5c\uff0c\u5219\u5143\u7d20\u7684\u4f4d\u7f6e\u4e0d\u53d8\uff0c\u5982\u679c\u6709\u8fd9\u4e48\u4e00\u7ec4\u4e0d\u9700\u8981\u64cd\u4f5c\u7684\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e2d\u95f4\u7684\u6570\u5b57\u662f\u4e0d\u80fd\u63d2\u8fdb\u53bb\u7684\uff0c\u6240\u4ee5\u8fd9\u7ec4\u6570\u662f\u76f8\u90bb\u7684\u6570\uff0c\u90a3\u4e48\u95ee\u9898\u5c31\u8f6c\u6362\u4e3a\u627e\u5230\u6570\u7ec4\u5185\u6700\u957f\u7684\u76f8\u5dee\u4e3a$1$\u7684\u5b50\u5e8f\u5217\uff0c\u8003\u8651\u7528$DP$\uff0c$dp[i]$\u8868\u793a\u4ee5\u6570\u5b57$i$\u4e3a\u7ed3\u5c3e\u7684\u6700\u957f\u5b50\u5e8f\u5217\u957f\u5ea6\uff0c\u5219\u8f6c\u79fb\u65b9\u7a0b\u4e3a\n$$\ndp[a[i]]=dp[a[i]-1]+1\n$$\n\u5982\u679c$a[i]-1$\u51fa\u73b0\u4e86\uff0c\u5219\u8fd9\u4e2a\u6570\u662f$a[i]-1$\u7684\u540e\u7f00\uff0c\u5426\u5219\u8fd9\u4e2a\u6570\u662f\u5f00\u5934\uff0c\u5373\u4e3a$1$\n\n```cpp\n#pragma GCC optimize(3, \"Ofast\", \"inline\")\n\n#include <bits/stdc++.h>\n\n#define start ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n#define ll long long\n//#define int ll\n#define ls st<<1\n#define rs st<<1|1\n#define pii pair<int,int>\n#define rep(z, x, y) for(int z=x;z<=y;++z)\n#define com bool operator<(const node &b)\nusing namespace std;\nmt19937 rnd(chrono::high_resolution_clock::now().time_since_epoch().count());\nconst int maxn = (ll) 3e3 + 5;\nconst int mod = 998244353;\nconst int inf = 0x3f3f3f3f;\nint T = 1;\nint a[maxn], b[maxn];\nint dp[maxn];\n\nvoid solve() {\n    int n;\n    cin >> n;\n    map<int, int> mp;\n    rep(i, 1, n)cin >> a[i], b[i] = a[i], mp[a[i]] = i, dp[i] = 0;\n    sort(b + 1, b + n + 1);\n    rep(i, 1, n)a[mp[b[i]]] = i;\n    int maxx = 1;\n    rep(i, 1, n) {\n        dp[a[i]] = dp[a[i] - 1] + 1;\n        maxx = max(maxx, dp[a[i]]);\n    }\n    cout << n - maxx << '\\n';\n}\n\nsigned main() {\n    start;\n    cin >> T;\n    while (T--)\n        solve();\n    return 0;\n}\n```\n\n",
        "postTime": 1592378070,
        "uid": 147428,
        "name": "F_Mu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1367F1 \u3010Flying Sort (Easy Version)\u3011"
    },
    {
        "content": "# Flying Sort (Easy Version) \u9898\u89e3\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1367F1)\n\n## \u9898\u610f\u7b80\u8ff0\n\n\u7ed9\u5b9a\u4e00\u4e2a\u7531 $n$ \u4e2a\u6b63\u6574\u6570\u6784\u6210\u7684\u5e8f\u5217 $a$\uff08\u65e0\u91cd\u590d\u6570\u5b57\uff09\uff0c\u73b0\u5728\u6709\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n1. \u9009\u53d6\u5e8f\u5217\u4e2d\u7684\u4efb\u610f\u4e00\u9879\uff0c\u5c06\u5176\u653e\u7f6e\u4e8e\u5e8f\u5217\u9996\u4f4d\uff1b\n\n2. \u9009\u53d6\u5e8f\u5217\u4e2d\u7684\u4efb\u610f\u4e00\u9879\uff0c\u5c06\u5176\u653e\u7f6e\u4e8e\u5e8f\u5217\u672b\u5c3e\uff1b\n\n\u73b0\u9700\u8981\u5c06\u8be5\u5e8f\u5217\u53d8\u6210\u4e00\u4e2a\u5355\u8c03\u9012\u589e\u5e8f\u5217\uff0c\u6c42\u6700\u5c11\u7684\u64cd\u4f5c\u6b21\u6570\u3002\n\n$1 \\le n \\le 3 \\times 10^3, 0 \\le a_i \\le 10^9$\u3002\n\n## \u524d\u7f6e\u77e5\u8bc6\n\n- \u6570\u5217\u79bb\u6563\u5316\n  - \u6a21\u677f\u9898\u76ee\uff1a[B3694 \u6570\u5217\u79bb\u6563\u5316](https://www.luogu.com.cn/problem/B3694)\n\n## \u89e3\u6cd5\n\n\u5148\u8003\u8651\u4e00\u4e2a\u66f4\u7b80\u5355\u7684\u60c5\u51b5\uff1a$a$ \u662f\u4e00\u4e2a $1$ \u5230 $n$ \u7684\u6392\u5217\u3002\uff08\u6b64\u65f6\u8fd9\u9898\u53d8\u6210\u4e86\u4e00\u9053\u7ad9\u5916\u539f\u9898\uff0c\u800c\u90a3\u9898\u4e2d\u5c06\u8fd9\u4e2a\u5e8f\u5217\u79f0\u4e3a $p$\uff0c\u6240\u4ee5\u4ee5\u4e0b\u7684\u8bf4\u660e\u4e2d\u90fd\u4f7f\u7528 $p$\uff09\n\n\u8003\u8651\u539f\u5e8f\u5217\u4e2d\u4e0d\u52a8\u7684\uff0c\u4e5f\u5c31\u662f\u4e0d\u8fdb\u884c\u64cd\u4f5c\u7684\u6570\uff1a\n\n1. \u8fd9\u4e9b\u6570\u662f\u539f\u5e8f\u5217\u7684\u4e00\u4e2a\u5b50\u5e8f\u5217\u3002\n2. \u8fd9\u4e9b\u6570\u662f\u8fde\u7eed\u7684\uff0c\u4e14\u662f\u5355\u8c03\u9012\u589e\u7684\u3002\n\n\u53d1\u73b0\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355 DP\u3002\n\n\u8bbe $f_i$ \u4e3a\u4ee5\u7b2c $i$ \u4e2a\u6570\u7ed3\u5c3e\u7684\u6700\u957f\u7684\u6ee1\u8db3\u6761\u4ef6\u7684\u5b50\u5e8f\u5217\u957f\u5ea6\u3002\n\n\u8bb0\u5f55\u4e00\u4e2a $pos$ \u6570\u7ec4\u4e3a\u6bcf\u4e2a\u6570\u5728\u6570\u5217\u4e2d\u7684\u4f4d\u7f6e\u3002\n\n\u5982\u679c $p_i-1$ \u6392\u5728 $p_i$ \u7684\u524d\u9762\uff0c\u90a3\u4e48 $f_i=f_{pos_{p_i-1}}+1$\u3002\u5426\u5219 $f_i=1$\u3002\n\n\u5bf9\u6240\u6709\u7684 $f_i$ \u53d6 $\\max$\uff0c\u5c31\u662f\u6574\u4e2a\u5e8f\u5217\u4e2d\u6700\u957f\u7684\u6ee1\u8db3\u6761\u4ef6\u7684\u5b50\u5e8f\u5217\u957f\u5ea6\u3002\n\n```cpp\nfor (int i = 1; i <= n; i++)\n    pos[p[i]] = i;\nfor (int i = 1; i <= n; i++) {\n    f[i] = 1;\n    if (pos[p[i] - 1] < i)\n        f[i] += f[pos[p[i] - 1]];\n    ans = max(ans, f[i]);\n}\nwrite(n - ans, '\\n');\n```\n\n\u90a3\u4e48\u5982\u679c $a$ \u4e0d\u662f $1$ \u5230 $n$ \u7684\u6392\u5217\u600e\u4e48\u529e\uff1f\u79bb\u6563\u5316\u5373\u53ef\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n// \u7701\u7565\u5feb\u8bfb\u5feb\u5199\u7684\u5b9e\u73b0\n\nconst int MAXN = 3e3 + 100;\nnamespace Discrete { // \u79bb\u6563\u5316\n    int c[MAXN];\n    void discrete(int n, int a[], int b[]) {\n        for (int i = 1; i <= n; i++)\n            c[i] = a[i];\n        sort(c + 1, c + n + 1);\n        int len = unique(c + 1, c + n + 1) - c - 1;\n        for (int i = 1; i <= n; i++)\n            b[i] = lower_bound(c + 1, c + len + 1, a[i]) - c;\n    }\n}\nusing Discrete::discrete;\n\nint n, p[MAXN], f[MAXN], pos[MAXN], ans;\nint a[MAXN];\nint main() {\n    int t = read(); while (t--) {\n        ans = 0; // \u591a\u6d4b\u4e0d\u6e05\u7a7a\uff0c\u4eb2\u4eba\u4e24\u884c\u6cea\n        n = read();\n        for (int i = 1; i <= n; i++)\n            a[i] = read();\n        discrete(n, a, p);\n        for (int i = 1; i <= n; i++)\n            pos[p[i]] = i;\n        for (int i = 1; i <= n; i++) {\n            f[i] = 1;\n            if (pos[p[i] - 1] < i)\n                f[i] += f[pos[p[i] - 1]];\n            ans = max(ans, f[i]);\n        }\n        write(n - ans, '\\n');\n    }\n    return 0;\n}\n\n```",
        "postTime": 1684572717,
        "uid": 589916,
        "name": "August_Light",
        "ccfLevel": 0,
        "title": "Flying Sort (Easy Version) \u9898\u89e3"
    },
    {
        "content": "## \u9898\u610f\u7b80\u8ff0\n\n\u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217\uff0c\u6709\u4e24\u79cd\u64cd\u4f5c\uff1a\u628a\u4e00\u4e2a\u6570\u653e\u5230\u5f00\u5934\u6216\u8005\u653e\u5230\u672b\u5c3e\u3002\u95ee\u4f60\u6700\u5c11\u64cd\u4f5c\u591a\u5c11\u6b21\u624d\u80fd\u4f7f\u8fd9\u4e2a\u5e8f\u5217\u6709\u5e8f\u3002\n\n## \u9898\u76ee\u5206\u6790\n\n\u9996\u5148\u7531\u4e8e\u53ea\u8ddf\u6570\u5b57\u4e4b\u95f4\u7684\u5927\u5c0f\u5173\u7cfb\u6709\u5173\uff0c\u6240\u4ee5\u53ef\u4ee5\u628a\u5e8f\u5217\u79bb\u6563\u5316\u6210\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u6392\u5217\u3002\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u53ea\u9700\u8981\u8003\u8651\u54ea\u4e9b\u6570\u8981\u653e\u5230\u5f00\u5934\u3001\u54ea\u4e9b\u6570\u8981\u653e\u5230\u7ed3\u5c3e\u3001\u54ea\u4e9b\u6570\u4e0d\u64cd\u4f5c\uff0c\u56e0\u4e3a\u53ef\u4ee5\u6309\u5927\u5c0f\u64cd\u4f5c\u8fd9\u4e9b\u6570\u53ef\u4ee5\u4f7f\u6700\u5de6/\u53f3\u8fb9\u662f\u6709\u5e8f\u7684\u3002\n\n\u90a3\u4e48\u5982\u4f55\u4f7f\u6574\u4e2a\u5e8f\u5217\u6709\u5e8f\u5462\uff1f\u653e\u5230\u5de6\u8fb9\u7684\u6570\u4e00\u5b9a\u6bd4\u5176\u4ed6\u6570\u90fd\u5c0f\uff0c\u53cd\u4e4b\uff0c\u653e\u5230\u53f3\u8fb9\u7684\u6570\u4e00\u5b9a\u6bd4\u5176\u4ed6\u6570\u90fd\u5927\u3002\n\n\u7531\u4e8e\u653e\u5230\u4e24\u8fb9\u7684\u6570\u4e0d\u662f\u5f88\u597d\u8003\u8651\uff0c\u6240\u4ee5\u8003\u8651\u4e0d\u52a8\u7684\u6570\u7684\u5b50\u5e8f\u5217\uff0c\u663e\u7136\u79bb\u6563\u5316\u540e\u8fd9\u4e2a\u5b50\u5e8f\u5217\u4e00\u5b9a\u5728\u6570\u503c\u4e0a\u662f\u9012\u589e\u4e14\u8fde\u7eed\u7684\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230\u6700\u957f\u7684\u4e00\u6bb5\uff0c\u4f7f\u5f97\u64cd\u4f5c\u7684\u6b21\u6570\u6700\u5c11\u3002\u53ef\u4ee5\u7528 DP \u6c42\u8fd9\u4e2a\u6700\u957f\u7684\u9012\u589e\u4e14\u8fde\u7eed\u7684\u5b50\u5e8f\u5217\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing ull = unsigned long long;\nconst int maxn = 3005;\nint T,n,a[maxn],b[maxn],pos[maxn],len[maxn],ans;\nint main(){\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cout.tie(nullptr);\n    cin>>T;\n    while(T--){\n        cin>>n;\n        for(int i=1;i<=n;++i)cin>>a[i],b[i]=a[i];\n        sort(b+1,b+n+1);\n        fill(pos,pos+n+1,0);\n        fill(len+1,len+n+1,0);\n        ans=0;\n        for(int i=1;i<=n;++i){\n            a[i]=lower_bound(b+1,b+n+1,a[i])-b;\n            pos[a[i]]=i;\n            if(pos[a[i]-1])len[i]=len[pos[a[i]-1]]+1;\n            else len[i]=1;\n            ans=max(len[i],ans);\n        }\n        cout<<n-ans<<'\\n';\n    }\n    return 0;\n}\n```\n",
        "postTime": 1684496757,
        "uid": 460457,
        "name": "KnownError_",
        "ccfLevel": 4,
        "title": "CF1367F1 Flying Sort (Easy Version) \u9898\u89e3"
    }
]