[
    {
        "content": "[\u76f8\u4f3c\u9898\u76ee](https://www.luogu.com.cn/problem/P7877)\u3002\n\n\u6ce8\u610f\u5230\u4e00\u4e2a\u4f4d\u7f6e\u53ef\u4ee5\u7a7a\u51fa\u6765\u5f53\u4e14\u4ec5\u5f53\u5bf9\u5e94\u7684\u82e5\u5e72\u4f4d\u7f6e\u4e4b\u4e00\u53ef\u4ee5\u7a7a\u51fa\u6765\uff0c\u8fd9\u79cd **\u5177\u6709\u4f9d\u8d56\u5173\u7cfb** \u7684\u9898\u76ee\u4e00\u770b\u5c31\u662f\u56fe\u8bba\u3002\n\n\u5982\u679c $s_{i, j} = \\texttt L$\uff0c\u90a3\u4e48\u4ece $(i - 1, j + 1)$ \u548c $(i + 1, j + 1)$ \u5411 $(i, j)$ \u8fde\u8fb9\uff0c\u6743\u503c\u4e3a $p$\uff0c\u8868\u793a\u5982\u679c $(i, j)$ \u8981\u7a7a\u51fa\u6765\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u4f4d\u7f6e\u9700\u8981\u6709\u4e00\u4e2a\u7a7a\u51fa\u6765\uff0c\u4e14\u82b1\u8d39 $p$ \u7684\u4ee3\u4ef7\u65cb\u8f6c\u8fd9\u5f20\u5e8a\u3002\u540c\u7406\uff0c$(i, j + 2)$ \u5411 $(i, j)$ \u8fde\u8fb9\uff0c\u6743\u503c\u4e3a $q$\u3002\n\n\u5bf9\u4e8e $s_{i, j}$ \u4e3a\u5176\u5b83\u65b9\u5411\u5b57\u7b26\u7684\u60c5\u51b5\u540c\u7406\u3002\n\n\u6211\u4eec\u53d1\u73b0\u8fde\u8fb9\u53ea\u5728 $i + j$ \u5947\u5076\u6027\u76f8\u540c\u7684\u4f4d\u7f6e\u4e4b\u95f4\u8fdb\u884c\uff0c\u6240\u4ee5\u4e24\u5f20\u56fe\u4e92\u4e0d\u5f71\u54cd\u3002\u5982\u679c\u4e00\u5f20\u5e8a\u7684\u4e24\u4e2a\u4f4d\u7f6e\u90fd\u8981\u6c42\u88ab\u79fb\u52a8\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u5c06\u5bf9\u5e94\u76ee\u6807\u4f4d\u7f6e\u53d8\u6210\u7a7a\u5730\uff0c\u90a3\u4e48\u8fd9\u5f20\u5e8a\u5468\u56f4\u4e0e\u5b83\u56db\u8fde\u901a\u7684\u4f4d\u7f6e\u6709\u4e24\u4e2a\u90fd\u662f\u7a7a\u5730\u3002\u6b64\u65f6\u53ef\u4ee5\u53ea\u8fdb\u884c\u4e00\u6b21\u79fb\u52a8\uff0c\u7136\u540e\u5c31\u6709 $1\\times 2$ \u7684\u7a7a\u5730\u7ed9\u6211\u4eec\u6446\u653e\u5e8a\u4e86\u3002\n\n\u4ece $s_{i, j} = \\texttt .$ \u7684\u4f4d\u7f6e\u5f00\u59cb\u8dd1\u6700\u77ed\u8def\uff0c\u56e0\u4e3a\u6bcf\u6761\u8def\u5f84\u4ee3\u8868\u4e00\u4e2a\u79fb\u52a8\u5e8a\u7684\u8def\u5f84\uff0c\u6240\u4ee5 $f_{i, j}$ \u8868\u793a\u4e3a\u4f7f\u5f97 $(i, j)$ \u7a7a\u51fa\u6765\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\u6211\u4eec\u53d1\u73b0\u8fde\u8fb9\u679a\u4e3e\u6240\u6709\u76f8\u90bb\u4f4d\u7f6e $(i, j), (i', j')(|i - i'| + |j - j'| = 1)$\uff0c\u5219 $\\min f_{i, j} + f_{i', j'}$ \u5373\u4e3a\u6240\u6c42\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(nm\\log (nm))$\u3002[\u4ee3\u7801](https://codeforces.com/contest/1753/submission/177583117)\u3002",
        "postTime": 1666570329,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "CF1753D The Beach"
    },
    {
        "content": "## \u7b80\u8981\u9898\u610f\n\n[\u539f\u9898\u6709\u4e86](https://www.luogu.com.cn/problem/CF1753D)\n\n## \u6700\u77ed\u8def\n\n\u8fd9\u9053\u9898\u6709\u4e2a\u7ed3\u8bba\uff1a\n\n>**\u6700\u540e**\u5bf9\u4e8e\u6bcf\u4e2a\u969c\u788d\u7684\u4e24\u7aef\u64cd\u4f5c\u540e\u4e00\u5b9a\u6709\u81f3\u5c11\u4e00\u7aef\u4f4d\u4e8e\u539f\u6765\u7684\u683c\u5b50\u4f4d\u7f6e\u3002\n\n\u7b80\u5355\u7406\u89e3\u4e00\u4e0b\uff1a\u82e5\u4e24\u7aef\u90fd\u79fb\u52a8\u5219\u4e0d\u79fb\u52a8\u6bd4\u79fb\u52a8\u66f4\u4f18\uff0c\u56e0\u4e3a\u5982\u679c\u90fd\u79fb\u52a8\u4e86\u76f8\u5f53\u4e8e\u5360\u4e86\u4e00\u4e2a\u5df2\u7ecf\u6e05\u7a7a\u7684 $2 \\times n$ \u65b9\u683c\uff0c\u5982\u679c\u4e0d\u79fb\u52a8\uff0c\u6b64\u65f6\u53ef\u76f4\u63a5\u5c06\u81ea\u5df1\u7684\u6905\u5b50\u6446\u4e0a\u53bb\u800c\u51cf\u5c11\u82b1\u8d39\u3002\n\n\u5047\u5982\u6211\u4eec\u77e5\u9053\u628a $(i,j)$ \u79fb\u4e3a\u7a7a\u5730\u6240\u9700\u7684\u82b1\u8d39\uff0c\u56e0\u4e3a\u4e0a\u8ff0\uff0c\u6240\u4ee5**\u4e0d\u5b58\u5728\u628a\u4e00\u4e2a\u969c\u788d\u79fb\u5230\u5176\u56db\u8054\u901a\u683c\u5b50\u7684\u60c5\u51b5**\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u627e\u5230 $\\min \\left \\{ cost(i,j)+cost(i+1,j),cost(i,j)+cost(i,j+1) \\right \\}$\uff0c\u5c31\u884c\u4e86\u3002\n\n\u5efa\u7acb\u6e90\u70b9 $s$\uff0c\u6211\u4eec\u8bbe $cost(i,j)$ \u4e3a $s \\rightarrow (i,j)$ \u7684\u6700\u77ed\u8def\uff0c\u8003\u8651\u5efa\u56fe\u3002\n\n- \u82e5\u8be5\u70b9\u662f\u7a7a\u5730\uff0c\u5219\u8fde $s \\rightarrow (i,j)$ \u8fb9\u6743 $0$\uff0c\u4ee3\u8868\u8017\u8d39 $0$ \u4ee3\u4ef7\u5c06\u8be5\u70b9\u6e05\u7a7a\u3002\n\n- \u82e5\u8be5\u70b9\u662f\u969c\u788d\u7684\u4e00\u7aef\uff0c\u5219\u8fde \u8be5\u70b9\u8f6c $90^{\\circ} $ \u5230\u7684\u4f4d\u7f6e $\\rightarrow (i,j)$ \u8fb9\u6743 $p$\uff0c\u8be5\u70b9\u8f6c $180^{\\circ} $ \u5230\u7684\u4f4d\u7f6e $\\rightarrow (i,j)$ \u8fb9\u6743  $q$\uff0c\u5747\u4ee3\u8868\u5c06\u53ef\u65cb\u8f6c\u81f3\u70b9\u6e05\u7a7a\u540e\u5373\u53ef\u5c06\u8be5\u70b9\u6e05\u7a7a\u3002\n\n\u8dd1\u4e00\u8fb9\u6700\u77ed\u8def\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define N 300010\n#define int long long\n#define rep(i,a,b) for(int i=a;i<=b;i++)\n#define tep(i,u) for(int i=head[u];~i;i=e[i].nxt)\n#define INF 0x3f3f3f3f3f3f3f3f\n#define id(i,j) ((i-1)*m+j)\n#define pir pair<int,int>\n#define mp(i,j) make_pair(i,j)\n#define se second\nusing namespace std;\nint n,m,v0,v1,s,head[N],cc,dis[N],ans=INF;\nbool vis[N];\nstruct EDGE{int v,w,nxt;}e[N<<2];\ninline void add_edge(int u,int v,int w)\n{\n\te[++cc]={v,w,head[u]};head[u]=cc;\n}\nstring ch[N];\npriority_queue<pir,vector<pir>,greater<pir> >q;\ninline bool check(int x,int y)\n{\n\tif(x<1||x>n||y<1||y>m||ch[x][y]=='#') return 0;\n\treturn 1;\n}\ninline void dij(int s)\n{\n\trep(i,1,n*m) dis[i]=INF;\n\tq.push(mp(0,s));\n\twhile(!q.empty())\n\t{\n\t\tint u=q.top().se;q.pop();\n\t\tif(vis[u]) continue;vis[u]=1;\n\t\ttep(i,u)\n\t\t{\n\t\t\tint v=e[i].v,w=e[i].w;\n\t\t\tif(dis[v]>dis[u]+w)\n\t\t\t{\n\t\t\t\tdis[v]=dis[u]+w;\n\t\t\t\tq.push(mp(dis[v],v));\n\t\t\t}\n\t\t}\n\t}\n}\nsigned main()\n{\n\tios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n\tmemset(head,-1,sizeof(head));\n\tcin>>n>>m>>v0>>v1;s=n*m+1;\n\trep(i,1,n) cin>>ch[i],ch[i]=' '+ch[i];\n\trep(i,1,n) rep(j,1,m)\n\t{\n\t\tif(ch[i][j]=='.') add_edge(s,id(i,j),0);\n\t\tif(ch[i][j]=='L')\n\t\t{\n\t\t\tif(check(i-1,j+1)) add_edge(id(i-1,j+1),id(i,j),v0);\n\t\t\tif(check(i+1,j+1)) add_edge(id(i+1,j+1),id(i,j),v0);\n\t\t\tif(check(i,j+2)) add_edge(id(i,j+2),id(i,j),v1);\n\t\t}\n\t\tif(ch[i][j]=='R')\n\t\t{\n\t\t\tif(check(i-1,j-1)) add_edge(id(i-1,j-1),id(i,j),v0);\n\t\t\tif(check(i+1,j-1)) add_edge(id(i+1,j-1),id(i,j),v0);\n\t\t\tif(check(i,j-2)) add_edge(id(i,j-2),id(i,j),v1);\n\t\t}\n\t\tif(ch[i][j]=='U')\n\t\t{\n\t\t\tif(check(i+1,j+1)) add_edge(id(i+1,j+1),id(i,j),v0);\n\t\t\tif(check(i+1,j-1)) add_edge(id(i+1,j-1),id(i,j),v0);\n\t\t\tif(check(i+2,j)) add_edge(id(i+2,j),id(i,j),v1);\n\t\t}\n\t\tif(ch[i][j]=='D')\n\t\t{\n\t\t\tif(check(i-1,j+1)) add_edge(id(i-1,j+1),id(i,j),v0);\n\t\t\tif(check(i-1,j-1)) add_edge(id(i-1,j-1),id(i,j),v0);\n\t\t\tif(check(i-2,j)) add_edge(id(i-2,j),id(i,j),v1);\n\t\t}\n\t}\n\tdij(s);\n\trep(i,1,n) rep(j,1,m) if(check(i,j))\n\t{\n\t\tif(check(i+1,j)) ans=min(ans,dis[id(i,j)]+dis[id(i+1,j)]);\n\t\tif(check(i,j+1)) ans=min(ans,dis[id(i,j)]+dis[id(i,j+1)]);\n\t}\n\tcout<<(ans==INF ? -1:ans)<<'\\n';\n\treturn 0;\n}\n```",
        "postTime": 1666582538,
        "uid": 251324,
        "name": "stntn",
        "ccfLevel": 0,
        "title": "The Beach \u9898\u89e3"
    },
    {
        "content": "\u8981\u52a0\u4e00\u5f20\u5e8a\uff0c\u65e0\u975e\u662f\u901a\u8fc7\u4e00\u4e9b\u64cd\u4f5c\u4f7f\u5f97\u7a7a\u683c\u51d1\u5728\u4e00\u8d77\uff0c\u90a3\u53ef\u4ee5\u60f3\u5230\u4e00\u4e2a dp\uff1a$f_{i,j}$ \u8868\u793a\u628a $(i,j)$ \u8fd9\u4e2a\u683c\u5b50\u53d8\u6210\u7a7a\u683c\u5b50\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\u5982\u679c $(i,j)$ \u521d\u59cb\u4e3a\u7a7a\uff0c\u90a3\u4e48 $f(i,j)=0$\uff1b\u5982\u679c\u662f\u969c\u788d\uff0c\u90a3\u4e48 $f(i,j)=+\\infty$\uff1b\u5982\u679c\u662f\u5e8a\uff0c\u90a3\u4e48\u9700\u8981\u901a\u8fc7\u64cd\u4f5c\u632a\u5e8a\u3002\u4e24\u4e2a\u64cd\u4f5c\u7684\u672c\u8d28\u90fd\u662f\u56fa\u5b9a\u5e8a\u7684\u4e00\u7aef\uff0c\u79fb\u52a8\u53e6\u4e00\u7aef\uff0c\u6240\u4ee5 $(i,j)$ \u4e00\u5b9a\u662f\u632a\u52a8\u7684\u4e00\u7aef\uff0c\u90a3\u8f6c\u79fb\u5c31\u53ea\u6709 $3$ \u79cd\u60c5\u51b5\uff0c\u5206\u7c7b\u8ba8\u8bba\u5373\u53ef\u3002\n\ndp \u987a\u5e8f\u600e\u4e48\u529e\u5462\uff1f\u5bb9\u6613\u53d1\u73b0\u8fd9\u4e2a dp \u76f8\u5f53\u4e8e\u662f\u4e00\u4e2a\u6700\u77ed\u8def\uff0c\u76f4\u63a5\u4ee5\u6240\u6709\u7a7a\u683c\u5b50\u4e3a\u8d77\u70b9\uff0c\u8dd1\u591a\u6e90 dij \u5373\u53ef\u3002\n\n\u7b54\u6848\u5c31\u662f $\\min_{|x_1-x_2|+|y_1-y_2|=1}\\{f_{x_1,y_1}+f_{x_2,y_2}\\}$\u3002\n\n\u76f4\u63a5\u5b9e\u73b0\u5c31\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\uff0c\u4f46\u662f\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u8fd9\u4e2a\u9898\u662f\u8981\u51d1\u51fa\u4e24\u4e2a\u7a7a\u683c\u5b50\uff0c\u800c\u8dd1\u6700\u77ed\u8def\u7684\u65f6\u5019\u662f\u8dd1\u7684\u4e00\u4e2a\u7a7a\u683c\uff0c\u90a3\u4f1a\u4e0d\u4f1a\u51fa\u73b0\u6700\u540e\u7684\u7b54\u6848\u91cc\uff0c\u540c\u4e00\u5f20\u5e8a\u88ab\u64cd\u4f5c\u4e24\u6b21\u7684\u60c5\u51b5\u5462\uff08\u663e\u7136\u662f\u4e0d\u5408\u6cd5\u7684\u64cd\u4f5c\uff09\uff1f\u7b54\u6848\u662f\u5426\u5b9a\u7684\uff0c\u56e0\u4e3a\u4e00\u65e6\u51fa\u73b0\u4e86\u8fd9\u79cd\u60c5\u51b5\uff0c\u8fd9\u5f20\u5e8a\u5468\u56f4\u81f3\u5c11\u6709 $2$ \u4e2a\u7a7a\u683c\uff0c\u90a3\u4e48\u6700\u591a\u53ea\u9700\u8981\u64cd\u4f5c\u8fd9\u5f20\u5e8a\u4e00\u6b21\u5c31\u53ef\u4ee5\u628a\u4e24\u4e2a\u7a7a\u683c\u632a\u5230\u4e00\u8d77\u3002\u5373\u4e0d\u5408\u6cd5\u7684\u7b54\u6848\u4e00\u5b9a\u4e0d\u4f18\u3002\n",
        "postTime": 1666611457,
        "uid": 305806,
        "name": "Sword_K",
        "ccfLevel": 7,
        "title": "CF1753D The Beach"
    },
    {
        "content": "## Solution\r\n\r\n- \u4e00\u5f00\u59cb\u89c9\u5f97\u662f\u8d2a\u5fc3\uff0c\u76f4\u5230\u6211\u770b\u5230\u6700\u540e\u4e00\u4e2a\u6837\u4f8b\u70b9\u624d\u505c\u6b62\u4e86\u8fd9\u79cd\u9519\u8bef\u7684\u60f3\u6cd5\uff0c\u56e0\u4e3a\u6211\u53d1\u73b0\u5982\u679c\u60f3\u628a\u4e00\u4e2a\u88ab\u969c\u788d\u8986\u76d6\u7684\u683c\u5b50\u7a7a\u51fa\u6765\uff0c\u8fd8\u5f97\u5c06\u969c\u788d\u79fb\u5230\u53e6\u5916\u4e00\u4e2a\u7a7a\u7684\u683c\u5b50\u91cc\uff0c\u8bd5\u60f3\u4e00\u4e0b\u5982\u679c\u6ca1\u6709\u53e6\u5916\u7684\u7a7a\u683c\u5b50\u4e86\uff0c\u90a3\u4e48\u5c31\u5f97\u5c06\u90a3\u4e9b\u683c\u5b50\u505a\u76f8\u540c\u7684\u51b3\u7b56\uff0c\u8fd9\u6837\u4e00\u6765\u5c31\u4f1a\u6709\u5f88\u591a\u4e2a\u4ece\u524d\u9762\u8f6c\u79fb\u7684\u51b3\u7b56\uff0c\u6240\u4ee5\u53c8\u53ef\u4ee5\u8054\u60f3\u5230 dp\uff0c\u8bbe $f_{i,j}$ \u4e3a\u5c06 $(i,j)$ \u683c\u5b50\u7a7a\u51fa\u6765\u7684\u6700\u5c0f\u4ee3\u4ef7\uff0c\u63a5\u4e0b\u6765\u8003\u8651\u5982\u4f55\u8f6c\u79fb\u3002\r\n\r\n- \u56e0\u4e3a\u6570\u636e\u8303\u56f4\u8f83\u5927\uff0c\u8f6c\u79fb\u65f6\u4e0d\u80fd\u66b4\u529b\u53bb\u679a\u4e3e\u524d\u9762\u7684\u51b3\u7b56\u70b9\uff0c\u4e5f\u4e0d\u597d\u53bb\u679a\u4e3e\u3002\u4e3a\u4e86\u5c06\u8fd9\u4e9b\u51b3\u7b56\u70b9\u8054\u7cfb\u5728\u4e00\u8d77\uff0c\u8fd8\u6709\u4e00\u4e2a\u65b9\u6cd5\uff1a\u5efa\u8fb9\uff0c\u7136\u540e\u4ece\u6bcf\u4e2a\u672c\u5c31\u7a7a\u7740\u7684\u683c\u5b50\u4e3a\u8d77\u70b9\u8dd1\u6700\u77ed\u8def\uff0c\u63a5\u4e0b\u6765\u8003\u8651\u5982\u4f55\u5efa\u8fb9\u3002\r\n\r\n- \u6211\u4eec\u5148\u6765\u8ba8\u8bba\u7ad6\u7740\u7684\u969c\u788d\uff1a\r\n```cpp\r\n0 1 2 3 4 5\r\n1 . . . . .\r\n2 . . U . .\r\n3 . . D . .\r\n4 . . . . .\r\n```\r\n\u53ef\u4ee5\u770b\u89c1 U \u4e3a $(2,3)$\uff0cD \u4e3a $(3,3)$\uff0c\u5728\u8fd9\u91cc\u5c31\u53ea\u8ba8\u8bba U\uff1a\r\n1. \u56fa\u5b9a D\u70b9\uff0c\u5c06 U \u987a\u65f6\u9488\u65cb\u8f6c $90$ \u5ea6\uff0c\u4ee3\u4ef7\u4e3a $p$ \uff0c\u6240\u4ee5 dp \u662f\u8fd9\u6837\u8f6c\u79fb\uff1a\r\n\r\n$$f_{2,3}=\\min f_{3,4}+p$$\r\n\r\n\u90a3\u5c31\u53ef\u4ee5\u5efa\u4e00\u6761\u4ece $(3,4)$ \u5230 $(2,3)$ \u8fb9\u6743\u4e3a $p$ \u7684\u6709\u5411\u8fb9\u3002\r\n\r\n2. \u56fa\u5b9a D\u70b9\uff0c\u5c06 U \u9006\u65f6\u9488\u65cb\u8f6c $90$ \u5ea6\uff0c\u4ee3\u4ef7\u4e3a $p$ \uff0c\u6240\u4ee5 dp \u662f\u8fd9\u6837\u8f6c\u79fb\uff1a\r\n\r\n$$f_{2,3}=\\min f_{3,2}+p$$\r\n\r\n\u90a3\u5c31\u53ef\u4ee5\u5efa\u4e00\u6761\u4ece $(3,2)$ \u5230 $(2,3)$ \u8fb9\u6743\u4e3a $p$ \u7684\u6709\u5411\u8fb9\u3002\r\n\r\n3. \u4e0a\u4e0b\u5e73\u79fb\uff0c\u8fd9\u5c31\u6709\u70b9\u4e0d\u597d\u5904\u7406\uff0c\u4f46\u5176\u5b9e\u662f\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a\u64cd\u4f5c\u76f8\u5f53\u4e8e\u662f\u56fa\u5b9a D \u70b9\uff0c\u5c06 U \u65cb\u8f6c $180$ \u5ea6\uff0c\u4ee3\u4ef7\u4e3a $q$\uff0c\u6240\u4ee5 dp \u662f\u8fd9\u6837\u8f6c\u79fb\uff1a\r\n\r\n$$f_{2,3}=\\min f_{4,3}+q$$\r\n\r\n\u90a3\u5c31\u53ef\u4ee5\u5efa\u4e00\u6761\u4ece $(4,3)$ \u5230 $(2,3)$ \u8fb9\u6743\u4e3a $q$ \u7684\u6709\u5411\u8fb9\u3002\r\n\r\n4. \u5de6\u53f3\u5e73\u79fb\uff0c\u4f46\u5176\u5b9e\u4e0d\u7528\u8003\u8651\uff0c\u60f3\u60f3\u770b\u8fd9\u4e2a\u969c\u788d\u662f\u7ad6\u7740\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5\u5de6\u53f3\u5e73\u79fb\u8bf4\u660e\u5de6\u53f3\u5b58\u5728 $1\\times2$ \u7684\u7a7a\u4f4d\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f $0$\uff0c\u6240\u4ee5\u4e0d\u7528\u5efa\u8fb9\u3002\r\n\r\n-  \u6a2a\u7740\u7684\u969c\u788d\u4e5f\u662f\u4e00\u6837\u7684\uff0c\u5728\u6b64\u5c31\u4e0d\u8fc7\u591a\u8d58\u8ff0\u3002\r\n\r\n\u6700\u540e\u8d34\u4e0a\u4ee3\u7801\uff1a\r\n```cpp\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int N=3e5+100,M=1e7;\r\nconst int dx[]{0,1,0,-1},dy[]={1,0,-1,0};\r\nstring a[N];\r\nint n,m,cnt,head[N],c;\r\nlong long p,q,dis[N],min_=1e18;\r\nmap<pair<int,int>,int>id;\r\nbool vis[N];\r\nstruct hh{\r\n    int id;long long val;\r\n    bool operator<(const hh&a)const{\r\n        return a.val<val;\r\n    }\r\n};\r\nstruct xzh{\r\n    int next,to,w;\r\n}edge[M];\r\nvoid add(int u,int v,int w){\r\n    c++;\r\n    edge[c].next=head[u];\r\n    edge[c].to=v;\r\n    edge[c].w=w;\r\n    head[u]=c;\r\n}\r\nvoid Dij(){\r\n    priority_queue<hh>q;\r\n    for(int i=0;i<n;i++){\r\n        for(int j=0;j<m;j++){\r\n            if(a[i][j]=='.'){\r\n                int x=id[make_pair(i,j)];\r\n                q.push({x,0});dis[x]=0;\r\n            }\r\n        }\r\n    }\r\n    while(!q.empty()){\r\n        int now=q.top().id;q.pop();\r\n        if(vis[now])continue;\r\n        vis[now]=true;\r\n        for(int i=head[now];i;i=edge[i].next){\r\n            int v=edge[i].to;\r\n            if(dis[now]+edge[i].w<dis[v]){\r\n                dis[v]=dis[now]+edge[i].w;\r\n                q.push({v,dis[v]});\r\n            }\r\n        }\r\n    }\r\n}\r\nvoid work(int x,int y){\r\n    for(int i=0;i<4;i++){\r\n        int xx=x+dx[i],yy=y+dy[i];\r\n        if(xx<0||xx>=n||yy<0||yy>=m||a[xx][yy]=='#')continue;\r\n        min_=min(min_,dis[id[make_pair(x,y)]]+dis[id[make_pair(xx,yy)]]);\r\n    }\r\n}\r\nint main(){\r\n    ios::sync_with_stdio(false);\r\n    cin>>n>>m>>p>>q;\r\n    for(int i=0;i<n;i++)cin>>a[i];\r\n    for(int i=0;i<n;i++){\r\n        for(int j=0;j<m;j++){\r\n            cnt++;id[make_pair(i,j)]=cnt; \r\n            dis[cnt]=1e18;\r\n        }\r\n    }\r\n    for(int i=0;i<n;i++){\r\n        for(int j=0;j<m;j++){\r\n            if(a[i][j]=='U'){\r\n                if(a[i+1][j+1]!='#')add(id[make_pair(i+1,j+1)],id[make_pair(i,j)],p);\r\n                if(a[i+2][j]!='#')add(id[make_pair(i+2,j)],id[make_pair(i,j)],q);\r\n                if(j&&a[i+1][j-1]!='#')add(id[make_pair(i+1,j-1)],id[make_pair(i,j)],p);\r\n            }\r\n            if(a[i][j]=='D'){\r\n                if(i&&a[i-1][j+1]!='#')add(id[make_pair(i-1,j+1)],id[make_pair(i,j)],p);\r\n                if(i>=2&&a[i-2][j]!='#')add(id[make_pair(i-2,j)],id[make_pair(i,j)],q);\r\n                if(i&&j&&a[i-1][j-1]!='#')add(id[make_pair(i-1,j-1)],id[make_pair(i,j)],p);\r\n            }\r\n            if(a[i][j]=='L'){\r\n                if(i&&a[i-1][j+1]!='#')add(id[make_pair(i-1,j+1)],id[make_pair(i,j)],p);\r\n                if(a[i][j+2]!='#')add(id[make_pair(i,j+2)],id[make_pair(i,j)],q);\r\n                if(a[i+1][j+1]!='#')add(id[make_pair(i+1,j+1)],id[make_pair(i,j)],p);\r\n            }\r\n            if(a[i][j]=='R'){\r\n                if(i&&a[i-1][j-1]!='#')add(id[make_pair(i-1,j-1)],id[make_pair(i,j)],p);\r\n                if(j>=2&&a[i][j-2]!='#')add(id[make_pair(i,j-2)],id[make_pair(i,j)],q);\r\n                if(j&&a[i+1][j-1]!='#')add(id[make_pair(i+1,j-1)],id[make_pair(i,j)],p);\r\n            }\r\n        }\r\n    }\r\n    Dij();\r\n    for(int i=0;i<n;i++)\r\n        for(int j=0;j<m;j++)\r\n            work(i,j);\r\n    if(min_==1e18)cout<<-1;\r\n    else cout<<min_;\r\n    return 0;\r\n}\r\n```\r\n\u795d\u5927\u5bb6 NOIP RP++\r\n",
        "postTime": 1669281528,
        "uid": 327295,
        "name": "GalwayGirl",
        "ccfLevel": 6,
        "title": "CF1753D \u5de7\u5999\u5efa\u8fb9\u56fe\u8bba"
    },
    {
        "content": "\u6211\u4eec\u53ef\u4ee5\u4ece\u201c\u7a7a\u683c\u201d\u7684\u89c6\u89d2\u6765\u8003\u8651\u5e8a\u7684\u79fb\u52a8\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u4e00\u5f20\u6a2a\u653e\u7684\u5e8a\uff0c\u5982\u679c\u5b83\u6b63\u53f3\u65b9\u7684\u683c\u5b50\u662f\u7a7a\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4ee5 $q$ \u7684\u4ee3\u4ef7\uff0c\u5c06\u7a7a\u683c\u53d8\u6210\u8fd9\u5f20\u5e8a\u5360\u636e\u7684\u4e24\u4e2a\u683c\u5b50\u4e2d\u5de6\u8fb9\u7684\u90a3\u4e00\u4e2a\u3002\u800c\u6700\u7ec8\u6211\u4eec\u7684\u76ee\u6807\u662f\u8ba9\u4e24\u4e2a\u7a7a\u683c\u76f8\u90bb\u3002\u4e0b\u9762\u7684\u793a\u610f\u56fe\u6709\u52a9\u4e8e\u8f85\u52a9\u7406\u89e3\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/0nhwtwdp.png)\n\n\u8003\u8651\u6309\u4e0a\u56fe\u7684\u65b9\u5f0f\u5efa\u51fa\u6709\u5411\u56fe\u6765\uff0c\u5e76\u7528\u6700\u77ed\u8def\u7b97\u6cd5\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u70b9\u53d8\u6210\u7a7a\u5730\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\u6211\u4eec\u65ad\u8a00\u7b54\u6848\u5373\u4e3a\u6240\u6709\u76f8\u90bb\u7684\u65b9\u683c\u5bf9\u4e2d\uff0c\u4ee3\u4ef7\u548c\u7684\u6700\u5c0f\u503c\u3002\n\n\u8bc1\u660e\u7684\u8bdd\uff0c\u9996\u5148\u5bb9\u6613\u8bc1\u51fa\u8fd9\u662f\u7b54\u6848\u7684\u4e0b\u754c\uff0c\u6211\u4eec\u63a5\u7740\u9700\u8981\u8bf4\u660e\u7b54\u6848\u4e0d\u8d85\u8fc7\u8fd9\u4e2a\u503c\u3002\u8003\u8651\u4e00\u5bf9\u76f8\u90bb\u7684\u65b9\u683c\uff0c\u6211\u4eec\u8ffd\u8e2a\u4e24\u4e2a\u683c\u5b50\u5404\u81ea\u53d8\u6210\u7a7a\u683c\u7684\u8fc7\u7a0b\u3002\u5982\u679c\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u7684\u77db\u76fe\uff0c\u53ef\u4ee5\u53d1\u73b0\u4e00\u5b9a\u5df2\u7ecf\u51fa\u73b0\u4e86\u4e24\u4e2a\u76f8\u90bb\u7a7a\u683c\uff0c\u4e0e\u6700\u5c0f\u6027\u77db\u76fe\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(nm\\log nm)$\u3002\n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<queue>\n\nusing namespace std;\n\n#define ID(i,j)(((i)-1)*m+j)\n\nconst long long INF=1e18;\n\nchar mp[400000];\nlong long dis[400000];bool vis[400000];\n\nvector<pair<int,int> > ed[400000];\n\nint main()\n{\n\tint n=0,m=0;scanf(\"%d%d\",&n,&m);\n\tlong long p=0,q=0;scanf(\"%lld%lld\",&p,&q);\n\t\n\tpriority_queue<pair<long long,int> > pq;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tscanf(\" %c\",&mp[ID(i,j)]);\n\t\t\tdis[ID(i,j)]=INF;\n\t\t\t\n\t\t\t//puts(\"??\");\n\t\t\tif(mp[ID(i,j)]=='.'){dis[ID(i,j)]=0;pq.push(make_pair(0,ID(i,j)));}\n\t\t\telse if(mp[ID(i,j)]=='R')\n\t\t\t{\n\t\t\t\tif(j-2>=1)ed[ID(i,j-2)].push_back(make_pair(ID(i,j),q));\n\t\t\t\tif(i-1>=1)ed[ID(i-1,j-1)].push_back(make_pair(ID(i,j),p));\n\t\t\t\tif(i+1<=n)ed[ID(i+1,j-1)].push_back(make_pair(ID(i,j),p));\n\t\t\t}\n\t\t\telse if(mp[ID(i,j)]=='L')\n\t\t\t{\n\t\t\t\tif(j+2<=m)ed[ID(i,j+2)].push_back(make_pair(ID(i,j),q));\n\t\t\t\tif(i-1>=1)ed[ID(i-1,j+1)].push_back(make_pair(ID(i,j),p));\n\t\t\t\tif(i+1<=n)ed[ID(i+1,j+1)].push_back(make_pair(ID(i,j),p));\n\t\t\t}\n\t\t\telse if(mp[ID(i,j)]=='U')\n\t\t\t{\n\t\t\t\tif(i+2<=n)ed[ID(i+2,j)].push_back(make_pair(ID(i,j),q));\n\t\t\t\tif(j-1>=1)ed[ID(i+1,j-1)].push_back(make_pair(ID(i,j),p));\n\t\t\t\tif(j+1<=m)ed[ID(i+1,j+1)].push_back(make_pair(ID(i,j),p));\n\t\t\t}\n\t\t\telse if(mp[ID(i,j)]=='D')\n\t\t\t{\n\t\t\t\tif(i-2>=1)ed[ID(i-2,j)].push_back(make_pair(ID(i,j),q));\n\t\t\t\tif(j-1>=1)ed[ID(i-1,j-1)].push_back(make_pair(ID(i,j),p));\n\t\t\t\tif(j+1<=m)ed[ID(i-1,j+1)].push_back(make_pair(ID(i,j),p));\n\t\t\t}\n\t\t}\n\t}\n\t\n\twhile(!pq.empty())\n\t{\n\t\tint u=pq.top().second;pq.pop();\n\t\tif(vis[u])continue;vis[u]=1;\n\t\tfor(int i=0;i<ed[u].size();i++)\n\t\t{\n\t\t\tint v=ed[u][i].first;\n\t\t\tif(dis[v]>dis[u]+ed[u][i].second)\n\t\t\t{\n\t\t\t\tdis[v]=dis[u]+ed[u][i].second;pq.push(make_pair(-dis[v],v));\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong long ans=INF;\n\tfor(int i=1;i<=n;i++)for(int j=1;j<=m;j++)\n\t{\n\t\tif(i<n)ans=min(ans,dis[ID(i,j)]+dis[ID(i+1,j)]);\n\t\tif(j<m)ans=min(ans,dis[ID(i,j)]+dis[ID(i,j+1)]);\n\t}\n\tprintf(\"%lld\",ans==INF?-1:ans);\n}\n```",
        "postTime": 1666584860,
        "uid": 112794,
        "name": "\u5468\u5b50\u8861",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1753D\u3010The Beach\u3011"
    },
    {
        "content": "\u770b\u5230\u8fd9\u79cd\u8981\u5148\u6ee1\u8db3\u67d0\u4e2a\u6761\u4ef6\u624d\u80fd\u6ee1\u8db3\u53e6\u4e00\u4e2a\u6761\u4ef6\u7684\u9898\u76ee\uff0c\u60f3\u5230\u56fe\u8bba\u3002\n\n\u5047\u8bbe\u5f53\u524d\u6709\u4e00\u4e2a $c_{i,j}=$ `L`\uff0c$c_{i,j+1}=$ `R`\uff0c\u90a3\u4e48\u5982\u679c\u8981\u628a\u5176\u53f3\u79fb\u4e00\u683c\u5c31\u9700\u8981\u6ee1\u8db3 $c_{i,j+2}$ \u5f53\u524d\u7a7a\u51fa\u6765\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u5148\u6ee1\u8db3 $(i,j+2)$ \u7684\u6761\u4ef6\u624d\u80fd\u6ee1\u8db3 $(i,j)$ \u7684\u6761\u4ef6\u3002\u53ef\u4ee5\u62bd\u8c61\u4e3a\u7531 $(i,j+2)$ \u5411 $(i,j)$ \u8fde\u4e00\u6761\u8fb9\uff0c\u4ee3\u4ef7\u4e3a $q$\u3002\n\n\u540c\u7406\uff0c\u5bf9\u4e8e\u65cb\u8f6c\u64cd\u4f5c\uff0c\u4ee5 $(i,j)$ \u4e3a\u4e2d\u5fc3\uff0c\u53ef\u4ee5\u5c06 $(i,j+1)$ \u65cb\u8f6c\u5230 $(i-1,j)$\uff0c\u90a3\u4e48\u8981\u4f7f\u5176\u6ee1\u8db3 $(i-1,j+1)$ \u548c $(i+1,j+1)$ \u5fc5\u987b\u6709\u4e00\u4e2a\u5730\u65b9\u80fd\u7a7a\u51fa\u6765\uff0c\u6240\u4ee5\u4ece $(i-1,j+1)$ \u548c $(i+1,j+1)$ \u5411 $(i,j)$ \u8fde\u8fb9\uff0c\u4ee3\u4ef7\u4e3a $p$\u3002\n\n\u540c\u7406\u53ef\u4ee5\u8fd9\u6837\u5904\u7406 `R`\uff0c`U`\uff0c`D`\u3002\n\n\u5bf9\u4e8e\u539f\u672c\u4e3a `.` \u7684\u5730\u65b9\u53ef\u4ee5\u4f5c\u4e3a\u8d77\u70b9\u3002\n\n\u8dd1 Dijkstra \u5373\u53ef\u3002\u590d\u6742\u5ea6 $O((nm)\\log(nm))$\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\n#define pii pair <int, int>\nusing namespace std;\n\nconst int N = 3e5 + 10;\nint T, n, m, p, q, dis[N]; bool vis[N];\nvector <char> Map[N]; vector <pii> g[N];\npriority_queue <pii, vector <pii>, greater <pii> > que;\ninline int chg(int x, int y) { return (x - 1) * m + y; }\n\ninline void solve() {\n  cin >> n >> m >> p >> q;\n  memset(dis, 0x3f, sizeof(dis));\n  for (int i = 1; i <= n; ++i) Map[i].resize(m + 1);\n  for (int i = 1; i <= n; ++i) for (int j = 1; j <= m; ++j) cin >> Map[i][j];\n  for (int i = 1; i <= n; ++i) for (int j = 1; j <= m; ++j) {\n    int id = chg(i, j); if (Map[i][j] == '.') que.push({dis[id] = 0, id});\n    auto addEdge = [&] (int x, int y, int val) {\n      if (x < 1 || x > n || y < 1 || y > m) return ;\n      g[chg(x, y)].push_back({id, val});\n    };\n    if (Map[i][j] == 'L') {\n      addEdge(i - 1, j + 1, p), addEdge(i + 1, j + 1, p);\n      addEdge(i, j + 2, q);\n    } else if (Map[i][j] == 'R') {\n      addEdge(i - 1, j - 1, p), addEdge(i + 1, j - 1, p);\n      addEdge(i, j - 2, q);\n    } else if (Map[i][j] == 'U') {\n      addEdge(i + 1, j - 1, p), addEdge(i + 1, j + 1, p);\n      addEdge(i + 2, j, q);\n    } else if (Map[i][j] == 'D') {\n      addEdge(i - 1, j - 1, p), addEdge(i - 1, j + 1, p);\n      addEdge(i - 2, j, q);\n    }\n  }\n  while (!que.empty()) {\n    int cur = que.top().second; que.pop();\n    if (vis[cur]) continue; vis[cur] = true;\n    for (auto [to, val]: g[cur]) {\n      if (dis[to] > dis[cur] + val) {\n        dis[to] = dis[cur] + val;\n        que.push({dis[to], to});\n      }\n    }\n  }\n  int res = 1e18;\n  for (int i = 1; i <= n; ++i)\n    for (int j = 1; j <= m; ++j) {\n      if (i ^ n) res = min(res, dis[chg(i, j)] + dis[chg(i + 1, j)]);\n      if (j ^ m) res = min(res, dis[chg(i, j)] + dis[chg(i, j + 1)]);\n    }\n  cout << (res == 1e18? -1 : res) << endl;\n  return ;\n}\n\nsigned main() {\n  ios_base::sync_with_stdio(false); cin.tie(0), cout.tie(0);\n  T = 1; while (T--) solve();\n  return 0;\n}\n```",
        "postTime": 1667889415,
        "uid": 487752,
        "name": "MistZero",
        "ccfLevel": 0,
        "title": "\u56fe\u8bba\u5efa\u6a21"
    },
    {
        "content": "[My Blog](https://liuxizai.ac.cn/archives/solution-codeforces-round-829.html)\n\n\u6211\u731c\u60f3\u6bcf\u5f20\u5e8a\u6700\u591a\u53ea\u4f1a\u88ab\u79fb\u52a8\u4e00\u6b21\uff0c\u5982\u679c\u6709\u8fd9\u4e2a\u7ed3\u8bba\uff0c\u8fd9\u4e2a\u9898\u5c31\u5f88\u597d\u505a\u4e86\uff0c\u8fc7\u7a0b\u5c31\u50cf\u662f\u5728\u6a21\u62df\u5bfb\u627e\u589e\u5e7f\u8def\u3002\n\n\u5bf9\u4e8e\u6bcf\u5f20\u5e8a\uff0c\u6bcf\u6b21\u79fb\u52a8\u53ef\u4ee5\u88ab\u89c6\u4f5c\u662f\uff0c\u56fa\u5b9a\u4e00\u4e2a\u7aef\u70b9\uff0c\u91ca\u653e\u4e00\u4e2a\u683c\u5b50\uff0c\u518d\u5360\u7528\u4e00\u4e2a\u683c\u5b50\uff0c\u90a3\u4e48\u6211\u4eec\u8003\u8651\u679a\u4e3e\u8fd9\u4e2a\u7aef\u70b9\uff0c**\u5c06\u5360\u7528\u7684\u683c\u5b50\u5411\u91ca\u653e\u7684\u683c\u5b50\u8fde\u957f\u5ea6\u4e3a\u79fb\u52a8\u8d39\u7528\u7684\u8fb9**\uff0c\u8fd9\u6837\u4ece\u4efb\u610f\u4e00\u4e2a\u7a7a\u95f2\u683c\u5230\u67d0\u4e2a\u88ab\u5360\u7528\u683c\u5b50\u7684\u6700\u77ed\u8def\u957f\u5ea6\u5c31\u662f\u91ca\u653e\u8fd9\u4e2a\u7a7a\u95f2\u683c\u7684\u4ee3\u4ef7\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5c06\u56fe\u5efa\u51fa\u6765\u540e\uff0c\u5c06\u6240\u6709\u7a7a\u95f2\u70b9\u4e22\u5230\u961f\u5217\u91cc\u4e00\u8d77\u8dd1 Dijkstra\uff0c\u6ce8\u610f\u8fd9\u4e0d\u662f\u591a\u6e90\u6700\u77ed\u8def\uff0c\u662f\u5230\u4efb\u610f\u4e00\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u6240\u4ee5\u53ef\u4ee5\u4e00\u8d77\u8dd1\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u65b0\u6765\u7684\u5e8a\u653e\u7684\u4f4d\u7f6e\uff0c\u5c06\u91ca\u653e\u4e24\u4e2a\u683c\u5b50\u7684\u8d39\u7528\u52a0\u8d77\u6765\uff0c\u53d6\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6 $O(nm\\log(nm))$\u3002\n\n\u95ee\u9898\u5728\u4e8e\uff0c\u91ca\u653e\u8fd9\u4e24\u4e2a\u683c\u5b50\u5bf9\u5e94\u7684\u8def\u5f84\u53c8\u6ca1\u6709\u53ef\u80fd\u51b2\u7a81\u3002\n\n\u8003\u8651\u5bf9\u7f51\u683c\u9ed1\u767d\u67d3\u8272\uff0c\u4e0d\u96be\u53d1\u73b0\u6211\u4eec\u7684\u8fde\u8fb9\u90fd\u5728\u540c\u8272\u683c\u5b50\u4e4b\u95f4\uff0c\u800c\u4e00\u5f20\u5e8a\u5360\u7528\u7684\u4e24\u4e2a\u683c\u5b50\u662f\u5f02\u8272\u7684\uff0c\u6240\u4ee5\u91ca\u653e\u8def\u5f84\u4e00\u5b9a\u4e0d\u4f1a\u51b2\u7a81\u3002\n\n\u53e6\u5916\u6211\u4eec\u8003\u8651\u80fd\u4e0d\u80fd\u611f\u6027\u8bc1\u660e\u4e00\u4e0b\u6bcf\u5f20\u5e8a\u6700\u591a\u53ea\u4f1a\u88ab\u79fb\u52a8\u4e00\u6b21\u3002\n\n\u5bf9\u4e8e\u4e24\u6b21\u5e73\u79fb\u6216\u8005\u4e00\u6b21\u5e73\u79fb\u52a0\u4e0a\u4e00\u6b21\u65cb\u8f6c\u7684\u7ec4\u5408\uff0c\u4e5f\u5c31\u662f\u8fd9\u6837\u7684\u60c5\u51b5\uff1a\n\n![829-1](https://cos.liuxizai.ac.cn/829-1.png)\n\n\u6211\u4eec\u60f3\u8981\u5c06\u6a59\u8272\u5757\u79fb\u5230\u84dd\u8272\u5757\u5904\uff0c\u5982\u679c\u84dd\u8272\u5757\u672c\u8eab\u6ca1\u6709\u88ab\u5360\u7528\uff0c\u90a3\u4e48\u6211\u4eec\u7684\u79fb\u52a8\u5f88\u52a3\uff0c\u56e0\u4e3a\u65b0\u5e8a\u53ef\u4ee5\u88ab\u76f4\u63a5\u653e\u5230\u84dd\u8272\u5757\u5904\u3002\n\n\u5982\u679c\u84dd\u8272\u5757\u4e2d\u4efb\u610f\u90e8\u5206\u88ab\u5360\u7528\uff0c\u6211\u4eec\u5c31\u8981\u5c06\u5176\u91ca\u653e\uff0c\u7136\u540e\u5c06\u6a59\u8272\u5757\u79fb\u8fc7\u53bb\uff0c\u5bb9\u6613\u53d1\u73b0\u8fd9\u8fd8\u662f\u52a3\uff0c\u56e0\u4e3a\u84dd\u8272\u5757\u91ca\u653e\u540e\u5c31\u80fd\u591f\u653e\u65b0\u5e8a\u4e86\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u6700\u590d\u6742\u7684 T \u578b\u60c5\u51b5\uff1a\n\n![829-2](https://cos.liuxizai.ac.cn/829-2.png)\n\n\u6211\u4eec\u5e0c\u671b\u628a AB \u901a\u8fc7\u4e24\u6b21\u65cb\u8f6c\u8f6c\u5230 BD \u53bb\uff0c\u56e0\u4e3a\u4e24\u6b21\u65cb\u8f6c\u7684\u8d39\u7528\u53ef\u80fd\u4f4e\u4e8e\u4e00\u6b21\u5e73\u79fb\uff0c\u6211\u4eec\u7684\u76ee\u7684\u663e\u7136\u662f\u91ca\u653e A\u3002\n\n\u5047\u5982 C \u539f\u672c\u7a7a\u95f2\uff0c\u90a3\u4e48 AB \u53ef\u4ee5\u7528\u4e00\u6b21\u79fb\u52a8\u65cb\u8f6c\u5230 BC\uff0c\u8fd9\u6837\u66f4\u4f18\u3002\n\n\u5047\u5982 C \u539f\u672c\u88ab\u5360\u7528\uff0c\u90a3\u4e48 AB \u65cb\u8f6c\u5230 BC \u524d\uff0c\u6211\u4eec\u9996\u5148\u8981\u91ca\u653e C\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u6709\u5fc5\u8981\u5c06 BC \u518d\u65cb\u8f6c\u5230 BD \u5f53\u4e14\u4ec5\u5f53 C \u518d\u6b21\u88ab\u5176\u4ed6\u5e8a\u5360\u7528\uff0c\u8fd9\u79cd\u60c5\u51b5\u662f\u4e0d\u5408\u6cd5\u7684\uff0c\u6211\u4eec\u5bf9\u683c\u5b50\u7684\u64cd\u4f5c\u5fc5\u987b\u662f\u4e00\u6761\u94fe\u800c\u4e0d\u80fd\u662f\u73af\uff0c\u5426\u5219\u5c31\u6784\u9020\u4e0d\u51fa\u6709\u6548\u7684\u64cd\u4f5c\u5e8f\u5217\u3002\u6240\u4ee5 AB \u8fd8\u662f\u53ef\u4ee5\u7528\u4e00\u6b21\u79fb\u52a8\u65cb\u8f6c\u5230 BC\u3002\n\n\u6211\u4e0d\u77e5\u9053\u4ee5\u4e0a\u8bc1\u660e\u662f\u5426\u4e25\u8c28\uff0c\u4f46\u662f\u6211\u5df2\u7ecf\u8bf4\u670d\u6211\u81ea\u5df1\u76f8\u4fe1\u8fd9\u4e2a\u7ed3\u8bba\u4e86\uff0c\u5982\u679c\u6709\u4ec0\u4e48\u95ee\u9898\u8bf7\u52a1\u5fc5\u544a\u8bc9\u6211\u3002\n\n```cpp\nnamespace Main{\n    const int N = 300005;\n    int n, m, p, q;\n    ll dis[N];\n    string s[N];\n    vector<pair<int, int>> g[N];\n    int m1[] = {0, 0, 1, -1};\n    int m2[] = {1, -1, 0, 0};\n    int bel[] = {0, 0, 1, 1};\n    string dir = \"RLDU\";\n    vector<int> free;\n    bool vis[N];\n    struct node{\n        int u;\n        ll dis;\n        node() {}\n        node(int u, ll dis): u(u), dis(dis) {}\n        bool operator < (const node &b) const{\n            return dis > b.dis;\n        }\n    };\n    inline int id(int x, int y){\n        return x * m + y;\n    }\n    void dijkstra(){\n        priority_queue<node> q;\n        memset(dis, 0x3f, sizeof(dis));\n        for(int x: free){\n            dis[x] = 0;\n            q.emplace(x, 0);\n        }\n        while(!q.empty()){\n            int u = q.top().u; q.pop();\n            if(vis[u]) continue;\n            vis[u] = true;\n            for(pair<int, int> e: g[u]){\n                int v = e.first, w = e.second;\n                if(dis[u] + w < dis[v]){\n                    dis[v] = dis[u] + w;\n                    q.emplace(v, dis[v]);\n                }\n            }\n        }\n    }\n    void Main(){\n        input(n, m, p, q);\n        for(int i = 0; i < n; i++) cin >> s[i];\n        for(int i = 0; i < n; i++) for(int j = 0; j < m; j++){\n            if(s[i][j] == '.') free.push_back(id(i, j));\n            if(s[i][j] == '.' || s[i][j] == '#') continue;\n            int d = -1;\n            for(int k = 0; k < 4; k++) if(dir[k] == s[i][j]) d = k;\n            int x = i - m1[d], y = j - m2[d];\n            for(int k = 0; k < 4; k++){\n                if(k == d) continue;\n                int nx = x + m1[k], ny = y + m2[k];\n                if(nx < 0 || nx >= n || ny < 0 || ny >= m || s[nx][ny] == '#') continue;\n                if(bel[d] == bel[k]) g[id(nx, ny)].emplace_back(id(i, j), q);\n                else g[id(nx, ny)].emplace_back(id(i, j), p);\n            }\n        }\n        dijkstra();\n        ll ans = 1e18;\n        for(int i = 0; i < n; i++) for(int j = 0; j < m; j++){\n            if(s[i][j] == '#') continue;\n            if(s[i][j] != 'L' && j != m - 1 && s[i][j+1] != '#'){\n                ans = min(ans, dis[id(i, j)] + dis[id(i, j + 1)]);\n            }\n            if(s[i][j] != 'U' && i != n - 1 && s[i+1][j] != '#'){\n                ans = min(ans, dis[id(i, j)] + dis[id(i + 1, j)]);\n            }\n        }\n        if(ans == 1e18) puts(\"-1\");\n        else write(ans);\n        return;\n    }\n} // namespace\n```",
        "postTime": 1666854482,
        "uid": 371439,
        "name": "Liuxizai",
        "ccfLevel": 6,
        "title": "Solution. CF1753D The Beach"
    },
    {
        "content": "\u7b2c\u4e00\u4e2a\u89c2\u5bdf\uff1a\u4e00\u5f20\u5e8a\u4e0d\u4f1a\u52a8\u4e24\u6b21\u3002\n\n\u7b2c\u4e8c\u4e2a\u89c2\u5bdf\uff1a\u76ee\u6807\u662f\u7a7a\u683c\u79fb\u52a8\u5230\u76f8\u90bb\u4f4d\u7f6e\uff0c\u7a7a\u683c\u624d\u662f\u6211\u4eec\u5173\u5fc3\u7684\u3002\n\n\u7b2c\u4e09\u4e2a\u89c2\u5bdf\uff1a\u7a7a\u683c\u5728\u68cb\u76d8\u67d3\u8272\u540e\u7684\u7f51\u683c\u4e2d\u4f4d\u7f6e\u989c\u8272\u4e0d\u4f1a\u6539\u53d8\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6700\u540e\u76f8\u90bb\u7684\u4e24\u4e2a\u7a7a\u683c\uff0c\u5b83\u4eec\u7684\u79fb\u52a8\u4e92\u76f8\u72ec\u7acb\u3002\n\n\u7ed3\u5408\u4e09\u4e2a\u89c2\u5bdf\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u6bcf\u5f20\u5e8a\u8fde $6$ \u6761\u6709\u5411\u8fb9\u7684\u65b9\u6cd5\u63cf\u8ff0\u7a7a\u683c\u5728\u79fb\u5e8a\u524d\u540e\u7684\u4f4d\u7f6e\u53d8\u5316\u3002\u4ee5\u7a7a\u683c\u521d\u59cb\u4f4d\u7f6e\u4e3a\u6e90\u70b9\u505a\u591a\u6e90\u6700\u77ed\u8def\uff0c\u679a\u4e3e\u6700\u540e\u7684\u76f8\u90bb\u4f4d\u7f6e\u7684\u4e24\u683c\u5b50\u6700\u77ed\u8def\u5927\u5c0f\u4e4b\u548c\uff0c\u53d6\u5176\u6700\u5c0f\u503c\u4e3a\u7b54\u6848\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N=3e5+5;\nint n,m,p,q;\nstring mp[N];\nll dis[N];\nvector<pair<int,int> >G[N];\npriority_queue<pair<ll,int> >Q;\ninline int id(int i,int j){if(!i||!j||i>n||j>m||mp[i][j-1]=='#')return -1;return (i-1)*m+j;}\ninline void adde(int u,int v,int w){if(u<0||v<0)return;G[u].push_back(make_pair(v,w));}\nint main(){\n\tios::sync_with_stdio(0);\n\tcin>>n>>m>>p>>q;\n\tmemset(dis,0x3f,sizeof dis);\n\tfor(int i=1;i<=n;i++)cin>>mp[i];\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tif(mp[i][j-1]=='L')adde(id(i-1,j+1),id(i,j),p),adde(id(i+1,j+1),id(i,j),p),adde(id(i,j+2),id(i,j),q);\n\t\t\tif(mp[i][j-1]=='R')adde(id(i-1,j-1),id(i,j),p),adde(id(i+1,j-1),id(i,j),p),adde(id(i,j-2),id(i,j),q);\n\t\t\tif(mp[i][j-1]=='U')adde(id(i+1,j-1),id(i,j),p),adde(id(i+1,j+1),id(i,j),p),adde(id(i+2,j),id(i,j),q);\n\t\t\tif(mp[i][j-1]=='D')adde(id(i-1,j-1),id(i,j),p),adde(id(i-1,j+1),id(i,j),p),adde(id(i-2,j),id(i,j),q);\n\t\t\tif(mp[i][j-1]=='.')Q.push(make_pair(dis[id(i,j)]=0,id(i,j)));\n\t\t}\n\t}\n\twhile(!Q.empty()){\n\t\tint x=Q.top().second;Q.pop();\n\t\tfor(auto e:G[x]){\n\t\t\tint y=e.first,z=e.second;\n\t\t\tif(dis[y]>dis[x]+z){\n\t\t\t\tdis[y]=dis[x]+z;\n\t\t\t\tQ.push(make_pair(-dis[y],y));\n\t\t\t}\n\t\t}\n\t}\n\tll ans=1e18;\n\tfor(int i=1;i<=n;i++)for(int j=1;j<m;j++)if(id(i,j)>=0&&id(i,j+1)>=0)ans=min(ans,dis[id(i,j)]+dis[id(i,j+1)]);\n\tfor(int i=1;i<n;i++)for(int j=1;j<=m;j++)if(id(i,j)>=0&&id(i+1,j)>=0)ans=min(ans,dis[id(i,j)]+dis[id(i+1,j)]);\n\tcout<<(ans==1e18?-1:ans)<<'\\n';\n}\n```",
        "postTime": 1666797955,
        "uid": 300078,
        "name": "pengyule",
        "ccfLevel": 7,
        "title": "CF1753D The Beach"
    },
    {
        "content": "\u64cd\u4f5c\u6709\u4e24\u79cd\uff1a\u7ffb\u8f6c\u548c\u5e73\u79fb\u3002\u5148\u6362\u4e00\u79cd\u89d2\u5ea6\u6765\u8003\u8651\u5e73\u79fb\uff1a\u7ffb\u8f6c\u4e24\u6b21\uff08\u56e0\u4e3a\u5e8a\u7684\u4e24\u7aef\u672c\u8d28\u65e0\u533a\u522b\uff09\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u4e00\u5f20\u5e8a\u7684\u4e24\u5934\u4e0d\u80fd\u90fd\u88ab\u64cd\u4f5c\uff0c\u5426\u5219\u5c31\u4e00\u5b9a\u7a7a\u51fa\u4e86\u4e00\u5757 $1\\times 2$ \u7684\u5730\uff0c\u8fd9\u80af\u5b9a\u662f\u52a3\u4e8e\u4e0d\u79fb\u52a8\u7684\u3002\n\n\u6240\u4ee5\u8bb0 $dp_{i,j}$ \u8868\u793a $(i,j)$ \u4e0a\u6ca1\u6709\u5e8a\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\n\n\u663e\u7136 $\\forall a_{i,j}= \\text{\u7a7a\u5730}$\uff0c$dp_{i,j}=0$\u3002\n\n\u5426\u5219\uff0c$dp_{i,j}=\\min_{\\text{(i,j)\u80fd\u64cd\u4f5c\u5230(ci,cj)}}\\{dp_{ci,cj}+\\text{\u64cd\u4f5c\u4ee3\u4ef7p\u6216q}\\}$\u3002\n\n\u4f7f\u7528 dijkstra \u7b97\u6cd5\u5373\u53ef\u3002\n\n\u7b54\u6848\u5c31\u662f $\\min_{\\text{(x,y)\u4e0e(z,w)\u76f8\u90bb}}\\{dp_{x,y}+dp_{z,w}\\}$\u3002\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <queue>\n\n#define N 300010\n#define int long long\n#define id(x,y) (((x) - 1) * m + (y))\n\nint n,m,p,q;\nint S;\nstd::string mp[N];\n\nbool cmp(int x,int y)\n{\n\treturn x >= 1 && x <= n && y >= 1 && y <= m && mp[x][y] != '#';\n}\n\nint h[N],e[N << 2],ne[N << 2],v[N << 2],idx;\n\nvoid add(int x,int y,int z)\n{\n\tne[++idx] = h[x];\n\th[x] = idx;\n\te[idx] = y;\n\tv[idx] = z;\n}\n\nstruct node\n{\n\tint id,ds;\n\tbool operator < (const node &B)const\n\t{\n\t\treturn ds > B.ds;\n\t}\n};\n\nstd::priority_queue <node> qu;\nint dis[N];\nbool vis[N];\n\nsigned main()\n{\n\tmemset(h,-1,sizeof(h));\n\tscanf(\"%lld%lld%lld%lld\",&n,&m,&p,&q);\n\tfor(int i = 1;i <= n;i++)\n\t{\n\t\tstd::cin >> mp[i];\n\t\tmp[i] = '#' + mp[i];\n\t}\n\tS = 0;\n\tfor(int i = 1;i <= n;i++)\n\t{\n\t\tfor(int j = 1;j <= m;j++)\n\t\t{\n\t\t\tif(mp[i][j] == '.')\n\t\t\t{\n\t\t\t\tadd(S,id(i,j),0); \n\t\t\t}\n\t\t\telse if(mp[i][j] == 'L')\n\t\t\t{\n\t\t\t\tif(cmp(i - 1,j + 1))\n\t\t\t\t\tadd(id(i - 1,j + 1),id(i,j),p);\n\t\t\t\tif(cmp(i + 1,j + 1))\n\t\t\t\t\tadd(id(i + 1,j + 1),id(i,j),p);\n\t\t\t\tif(cmp(i,j + 2))\n\t\t\t\t\tadd(id(i,j + 2),id(i,j),q);\n\t\t\t}\n\t\t\telse if(mp[i][j] == 'R')\n\t\t\t{\n\t\t\t\tif(cmp(i - 1,j - 1))\n\t\t\t\t\tadd(id(i - 1,j - 1),id(i,j),p);\n\t\t\t\tif(cmp(i + 1,j - 1))\n\t\t\t\t\tadd(id(i + 1,j - 1),id(i,j),p);\n\t\t\t\tif(cmp(i,j - 2))\n\t\t\t\t\tadd(id(i,j - 2),id(i,j),q);\n\t\t\t}\n\t\t\telse if(mp[i][j] == 'U')\n\t\t\t{\n\t\t\t\tif(cmp(i + 1,j - 1))\n\t\t\t\t\tadd(id(i + 1,j - 1),id(i,j),p);\n\t\t\t\tif(cmp(i + 1,j + 1))\n\t\t\t\t\tadd(id(i + 1,j + 1),id(i,j),p);\n\t\t\t\tif(cmp(i + 2,j))\n\t\t\t\t\tadd(id(i + 2,j),id(i,j),q);\n\t\t\t}\n\t\t\telse if(mp[i][j] == 'D')\n\t\t\t{\n\t\t\t\tif(cmp(i - 1,j - 1))\n\t\t\t\t\tadd(id(i - 1,j - 1),id(i,j),p);\n\t\t\t\tif(cmp(i - 1,j + 1))\n\t\t\t\t\tadd(id(i - 1,j + 1),id(i,j),p);\n\t\t\t\tif(cmp(i - 2,j))\n\t\t\t\t\tadd(id(i - 2,j),id(i,j),q);\n\t\t\t}\n\t\t}\n\t}\n\tmemset(dis,0x3f,sizeof(dis));\n\tdis[S] = 0;\n\tqu.push((node){S,0});\n\twhile(!qu.empty())\n\t{\n\t\tint t = qu.top().id;\n\t\tqu.pop();\n\t\tif(vis[t])\n\t\t\tcontinue;\n\t\tvis[t] = 1;\n\t\tfor(int i = h[t];~i;i = ne[i])\n\t\t{\n\t\t\tint nx = e[i];\n\t\t\tint z = v[i];\n\t\t\tif(dis[nx] > dis[t] + z)\n\t\t\t{\n\t\t\t\tdis[nx] = dis[t] + z;\n\t\t\t\tqu.push((node){nx,dis[nx]});\n\t\t\t}\n\t\t}\n\t}\n\tint ans = 0x3f3f3f3f3f3f3f3f;\n\tfor(int i = 1;i <= n;i++)\n\t{\n\t\tfor(int j = 1;j <= m;j++)\n\t\t{\n\t\t\tif(cmp(i,j + 1) && dis[id(i,j)] + dis[id(i,j + 1)] < ans)\n\t\t\t\tans = dis[id(i,j)] + dis[id(i,j + 1)];\t\n\t\t\tif(cmp(i + 1,j) && dis[id(i,j)] + dis[id(i + 1,j)] < ans)\n\t\t\t\tans = dis[id(i,j)] + dis[id(i + 1,j)];\n\t\t}\n\t}\n\tprintf(\"%lld\\n\",ans == 0x3f3f3f3f3f3f3f3f ? -1 : ans);\n\treturn 0;\n}\n```",
        "postTime": 1666763070,
        "uid": 371968,
        "name": "ningago",
        "ccfLevel": 4,
        "title": "CF1753D"
    }
]