[
    {
        "content": "\u6b63\u89e3\u662f\u4e2a\u5f88\u6709\u521b\u9020\u529b\u7684\u505a\u6cd5\uff0c\u611f\u89c9\u81ea\u5df1get\u4e86\u4e0d\u5c11\u3002\u4e24\u4e2a\u6708\u6ca1\u78b0OI\u6c34\u5e73\u679c\u7136\u5927\u5e45\u5ea6\u4e0b\u964d\u4e86\u3002\n\n\u9996\u5148\u6211\u4eec\u4e00\u770b\uff0c\u8fd9\u662f\u4e2a\u628a\u6570\u5f80\u6570\u7ec4\u5f00\u5934\u603c\u7684\u5e8f\u5217\u95ee\u9898\u3002\u56e0\u4e3a\u79fb\u52a8\u6570\u7ec4\u4e2d\u5143\u7d20\u662f\u4e2a\u975e\u5e38\u9ebb\u70e6\u7684\u4e8b\u60c5\uff0c\u6211\u4eec\u5728\u6570\u7ec4\u7684\u5de6\u7aef\u6dfb\u52a0 $m$ \u4e2a\u865a\u70b9\uff0c\u7528\u6765\u5b58\u653e\u79fb\u52a8\u8fc7\u53bb\u7684\u4e1c\u897f\u3002\n\n\u6211\u4eec\u628a\u5b9e\u9645\u4e0a\u6ca1\u6709\u653e\u6570\u7684\u70b9\u8bbe\u4e3a$0$\uff0c\u5b9e\u9645\u4e0a\u653e\u4e86\u6570\u7684\u70b9\u8bbe\u4e3a$1$\u3002\n\n\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u8981\u67e5\u8be2\u5728\u4e00\u4e2a\u70b9\u524d\u9762\u6709\u591a\u5c11\u4e2a$1$\u5c31\u53ef\u4ee5\u786e\u5b9a\u5b83\u5728\u539f\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\u3002\u5bb9\u6613\u53d1\u73b0\u53ef\u4ee5\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u6216\u8005\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u56e0\u4e3a\u6700\u5c0f\u503c\u53ea\u53ef\u80fd\u662f$1$\u6216\u8005\u8fd9\u4e2a\u6570\u539f\u6765\u7684\u4f4d\u7f6e\uff0c\u6700\u5927\u503c\u53ea\u53ef\u80fd\u5728\u4e00\u4e2a\u6570\u79fb\u52a8\u4e4b\u524d\u6216\u8005\u5728\u5b8c\u6210\u6240\u6709\u64cd\u4f5c\u540e\u51fa\u73b0\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981m + n\u6b21\u67e5\u8be2\u3002\uff08\u6bcf\u6b21\u64cd\u4f5c\u67e5\u8be2\u4e00\u6b21\uff0c\u6700\u540e\u67e5\u8be2n\u6b21\uff09\n\n\u7136\u540e\u6211\u4eec\u5c31\u5f88\u6109\u5feb\u5730\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u4ee3\u7801\u975e\u5e38\u597d\u5199\uff0c\u81ea\u8ba4\u4e3a\u601d\u8def\u6bd4\u697c\u4e0b\u5c0f\u54e5\u6e05\u6670\u4e0d\u5c11\u3002\n\n```cpp\nconst int MAXN = 600005;\nint n, m, mini[MAXN], maxi[MAXN], c[MAXN], pos[MAXN];\nvoid update(int x, int v) {for(; x <= n+m; x += (x&-x)) c[x] += v;}\nint query(int x) {int ans = 0;for(; x; x -= (x&-x)) ans += c[x];return ans;}\nsigned main()\n{\n\tcin >> n >> m;\n\tFor(i, 1, n) mini[i] = maxi[i] = i, pos[i] = m+i, update(pos[i], 1);\n\tint now = m;\n\tFor(k, 1, m) {\n\t\tint i = read(); mini[i] = 1;\n\t\tckmax(maxi[i], query(pos[i]));\n\t\tupdate(pos[i], -1); \n\t\tpos[i] = now--;\n\t\tupdate(pos[i], 1);\n\t}\n\tFor(i, 1, n) ckmax(maxi[i], query(pos[i]));\n\tFor(i, 1, n) printf(\"%d %d\\n\", mini[i], maxi[i]);\n    return 0;\n}\n```",
        "postTime": 1579147730,
        "uid": 55078,
        "name": "YLWang",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1288E \u3010Messenger Simulator\u3011"
    },
    {
        "content": "\u6e05\u65b0\u7684\u4e00\u9053\u9898\u3002\n\n\u9996\u5148\uff0c\u5bb9\u6613\u770b\u51fa\uff0c\u5982\u679c\u4e00\u4e2a\u8054\u7cfb\u4eba\u53d1\u4e86\u81f3\u5c11\u4e00\u6761\u6d88\u606f\uff0c\u90a3\u4e48\u4ed6\u7684\u6700\u524d\u4f4d\u7f6e\u5c31\u662f $1$\uff0c\u5426\u5219\u5c31\u662f\u4ed6\u7684\u7f16\u53f7\uff08\u5373\u6700\u521d\u6392\u540d\uff09\u3002\n\n\u601d\u8003\u6700\u540e\u4f4d\u7f6e\u3002\u4e2a\u4eba\u89c9\u5f97\u62ff\u5230\u8fd9\u9053\u9898\u6709\u4e24\u79cd\u5f88\u81ea\u7136\u7684\u601d\u8def\uff0c\u5206\u522b\u8d70\u5c31\u53ef\u4ee5\u5f97\u5230\u4e09\u79cd\u505a\u6cd5\u3002\n\n\u7b2c\u4e00\u79cd\u601d\u8def\u662f\u76f4\u63a5\u6a21\u62df\u3002\u6211\u4eec\u9700\u8981\u652f\u6301\u5220\u9664\u4e00\u4e2a\u70b9\uff0c\u5728\u6700\u524d\u9762\u52a0\u5165\u4e00\u4e2a\u70b9\u4ee5\u53ca\u67e5\u4e00\u4e2a\u70b9\u6392\u540d\u4e09\u79cd\u64cd\u4f5c\u3002\u901a\u8fc7\u8fd9\u4e09\u79cd\u64cd\u4f5c\u6c42\u51fa\u7b54\u6848\u662f\u5bb9\u6613\u7684\uff0c\u8fd9\u91cc\u53ea\u8bf4\u8bf4\u5982\u4f55\u652f\u6301\u8fd9\u4e09\u79cd\u64cd\u4f5c\u3002\n\n\u76f4\u63a5\u5e73\u8861\u6811\u8fd9\u6837\u505a\u5c31\u662f\u7b2c\u4e00\u79cd\u505a\u6cd5\u3002\n\n\u8003\u8651\u5220\u9664\u4e00\u4e2a\u70b9\u5373\u5176\u539f\u4f4d\u7f6e\u540e\u9762\u6240\u6709\u70b9\u6392\u540d\u51cf $1$\uff0c\u63d2\u5165\u4e00\u4e2a\u70b9\u5373\u5176\u63d2\u5165\u4f4d\u7f6e\u540e\u9762\u6240\u6709\u70b9\u6392\u540d\u52a0 $1$\u3002\u6211\u4eec\u5728\u6700\u524d\u9762\u4e3a $m$ \u6b21\u64cd\u4f5c\u7559\u51fa $m$ \u4e2a\u7a7a\u4f4d\uff0c\u7136\u540e\u518d\u4f9d\u6b21\u653e\u4e0b $n$ \u4e2a\u70b9\u5e76\u505a\u540e\u7f00\u52a0\u64cd\u4f5c\uff0c\u4e4b\u540e\u6bcf\u6b21\u8981\u5c06\u4e00\u4e2a\u70b9\u6362\u5230\u6700\u524d\u9762\u65f6\uff0c\u53ea\u9700\u8981\u5c06\u8fd9\u4e2a\u70b9\u4ece\u539f\u4f4d\u7f6e\u5220\u6389\u5e76\u505a\u540e\u7f00\u51cf\uff0c\u518d\u653e\u5230\u8fd9\u6b21\u64cd\u4f5c\u5bf9\u5e94\u7684\u7a7a\u4f4d\u5e76\u505a\u540e\u7f00\u52a0\u3002\u540e\u7f00\u52a0\u51cf\u3001\u5355\u70b9\u6c42\u503c\uff0c\u6811\u72b6\u6570\u7ec4\u4e0a\u5355\u70b9\u4fee\u6539\u3001\u524d\u7f00\u6c42\u548c\u5373\u53ef\u505a\u5230\u3002\u8fd9\u662f\u7b2c\u4e8c\u79cd\u505a\u6cd5\u3002\n\n\u53e6\u4e00\u79cd\u601d\u8def\u662f\uff0c\u4e00\u4e2a\u8054\u7cfb\u4eba\u8fd9\u6b21\u53d1\u6d88\u606f\u548c\u4e0a\u6b21\u53d1\u6d88\u606f\u4e4b\u95f4\uff08\u6216\u7b2c\u4e00\u6b21\u53d1\u6d88\u606f\u4e4b\u524d\uff09\u53d1\u8fc7\u6d88\u606f\u7684\u4e0d\u540c\u8054\u7cfb\u4eba\u6570\uff0c\u5c31\u662f\u8fd9\u4e2a\u4eba\u76f8\u5bf9\u4e8e\u6392\u540d $1$\uff08\u6216\u521d\u59cb\u6392\u540d\uff09\u7684\u504f\u79fb\u91cf\u3002\u8fd9\u662f\u5f88\u5178\u578b\u7684\u4e8c\u7ef4\u6570\u70b9\u95ee\u9898\u3002\u8fd9\u6837\u505a\u5c31\u662f\u7b2c\u4e09\u79cd\u505a\u6cd5\u3002\n\n\u672c\u4eba\u5f88\u5feb\u60f3\u5230\u7684\u662f\u4e8c\u7ef4\u6570\u70b9\u505a\u6cd5\uff0c\u548c\u540c\u5b66\u4ea4\u6d41\u540e\u5b9e\u73b0\u7684\u662f\u6811\u72b6\u6570\u7ec4\u6a21\u62df\u7684\u505a\u6cd5\u3002[\u53c2\u8003\u5b9e\u73b0](/paste/7x0q6dwj)",
        "postTime": 1675930537,
        "uid": 118109,
        "name": "whhsteven",
        "ccfLevel": 7,
        "title": "CF1288E Messenger Simulator"
    },
    {
        "content": "## \u7b80\u5355\u601d\u7ef4+\u6570\u636e\u7ed3\u6784\n\n#### 1.\u9996\u5148\u53d1\u73b0x\u7684\u6700\u5c0f\u503c\u4e00\u5b9a\u662fx\u62161\uff08x\u51fa\u73b0\u8fc7\u5c31\u4e3a1\uff0c\u5426\u5219\u4e3ax\uff09\n\n#### 2.\u7136\u540e\u6211\u4eec\u53d1\u73b0x\u6700\u5927\u503c\u8981\u4e48\u662fx\uff0c\u8981\u4e48\u662f\u51fa\u73b0x \u4e4b\u524d\u7684 x\u6240\u5728\u4f4d\u7f6e\u3002\u8fd9\u4e2a\u6211\u4eec\u76f4\u63a5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6bcf\u4e2a\u503c\u7684\u4f4d\u5b50\u5373\u53ef\u3002\u76f8\u5f53\u4e8e\u5bf9\u4e8e\u4e00\u4e2a\u6570\uff0c\u4ed6\u4f1a\u628a\u6bd4\u4ed6\u5927\u7684\u6570\u90fd\u52a01\u3002\u4fee\u6539\u67d0\u4e2a\u6570\u7684\u4f4d\u5b50\uff0c\u5c31\u5148\u6d88\u9664\u8fd9\u4e2a\u6570\u4e4b\u524d\u7684+1\uff0c\u7136\u540e\u628a\u4ed6\u653e\u5230\u6700\u524d\uff0c\u5728\u628a\u540e\u9762\u7684\u6570\u52a01\u3002\n\n## \u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define next Next\n#define gc getchar\n//#define int long long\nconst int N=1e6+5;\nint n,m,mi[N],ma[N],pos[N],tree[N*4],lazy[N*4];\n//char buf[1<<21],*p1=buf,*p2=buf;\n//inline int gc(){return p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++;}\ninline int read()\n{\n    int ret=0,f=0;char c=gc();\n    while(!isdigit(c)){if(c=='-')f=1;c=gc();}\n    while(isdigit(c)){ret=ret*10+c-48;c=gc();}\n    if(f)return -ret;return ret;\n}\nvoid pushdown(int nod)\n{\n\ttree[nod*2]+=lazy[nod];\n\ttree[nod*2+1]+=lazy[nod];\n\tlazy[nod*2]+=lazy[nod];\n\tlazy[nod*2+1]+=lazy[nod];\n\tlazy[nod]=0;\n}\nvoid change(int nod,int l,int r,int L,int R,int val)\n{\n\tif(l==L&&r==R)\n\t{\n\t\ttree[nod]+=val;\n\t\tlazy[nod]+=val;\n\t\treturn;\n\t}\n\tpushdown(nod);\n\tint mid=(l+r)/2;\n\tif(R<=mid)change(nod*2,l,mid,L,R,val);\n\telse if(L>mid)change(nod*2+1,mid+1,r,L,R,val);\n\telse{\n\t\tchange(nod*2,l,mid,L,mid,val);\n\t\tchange(nod*2+1,mid+1,r,mid+1,R,val);\n\t}\n\ttree[nod]=tree[nod*2]+tree[nod*2+1];\n}\nint find(int nod,int l,int r,int x)\n{\n\tif(l==r)return tree[nod];\n\tpushdown(nod);\n\tint mid=(l+r)/2;\n\tif(x<=mid)return find(nod*2,l,mid,x);\n\telse return find(nod*2+1,mid+1,r,x);\n}\nsigned main()\n{\n\tn=read();m=read();\n\tfor(int i=1;i<=n;i++)mi[i]=ma[i]=i;\n\tfor(int i=1;i<=n;i++)change(1,0,n+m,pos[i]=i+m,n+m,1);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x=read();\n\t\tmi[x]=1;\n\t\tma[x]=max(ma[x],find(1,0,n+m,pos[x]));\n\t\tchange(1,0,n+m,pos[x],n+m,-1);\n\t\tpos[x]=m-i;\n\t\tchange(1,0,n+m,pos[x],n+m,1);\n\t}\n\tfor(int i=1;i<=n;i++)ma[i]=max(ma[i],find(1,0,n+m,pos[i]));\n\tfor(int i=1;i<=n;i++)printf(\"%d %d\\n\",mi[i],ma[i]);\n\treturn 0;\n}\n/*\n\u53d1\u73b0\u5982\u679c\u4e00\u4e2a\u6570x\u6ca1\u6709\u51fa\u73b0\uff0c\u90a3\u4e48\u6700\u5c0f\u503c\u4e00\u5b9a\u662fx\n\u51fa\u73b0\u4e86\uff0c\u6700\u5c0f\u503c\u5c31\u662f1\n\u6700\u5927\u503c\u8981\u4e48\u662fx\uff0c\u8981\u4e48\u662f\u51fa\u73b0x\u524d\u7684\u503c\uff0c\u8fd9\u4e2a\u6211\u4eec\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u4e0b\u5373\u53ef\uff0c\u533a\u95f4\u52a0\uff0c\u5355\u70b9\u67e5 \n*/\n```",
        "postTime": 1579084602,
        "uid": 39484,
        "name": "\u7c73\u5947",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1288E \u3010Messenger Simulator\u3011"
    },
    {
        "content": "\u5c0f\u6e05\u65b0 ds \u9898\uff0c\u9996\u5148\u60f3\u5230 $i$ \u7684\u4f4d\u7f6e\u6700\u5c0f\u503c\u663e\u7136\u662f $1$ \u6216\u8005 $i$\uff0c\u7136\u540e\u53ea\u9700\u8981\u8003\u8651\u4f4d\u7f6e\u6700\u5927\u503c\u600e\u4e48\u6c42\u3002\n\n\u4f4d\u7f6e\u5176\u5b9e\u5c31\u662f $pos_i$ \u5de6\u8fb9\u7684\u6570\u5b57\u4e2a\u6570\uff0c\u76f4\u63a5\u5728\u539f\u6570\u7ec4\u4e0a\u5220\u9664\u548c\u63d2\u5165\u5f88\u96be\u7ef4\u62a4\uff0c\u90a3\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u5728 $1$ \u7684\u5de6\u8fb9\u52a0\u4e0a $m$ \u4e2a\u7a7a\u70b9\uff0c\u628a\u653e\u4e86\u6570\u7684\u4f4d\u7f6e\u8bbe\u4e3a $1$\uff0c\u6ca1\u653e\u6570\u7684\u4f4d\u7f6e\u8bbe\u4e3a $0$\u3002\u7b2c $i$ \u6b21\u64cd\u4f5c\u628a\u539f\u6765\u4f4d\u7f6e\u7684\u503c $-1$\uff0c\u4f4d\u7f6e $m-i+1$ \u7684\u503c $+1$\uff0c\u7136\u540e\u67e5\u8be2\u524d\u7f00\u548c\u5c31\u53ef\u4ee5\u77e5\u9053\u8fd9\u4e2a\u6570\u73b0\u5728\u7684\u4f4d\u7f6e\u3002\n\n\u6700\u5927\u503c\u53ea\u53ef\u80fd\u5728\u6bcf\u6b21\u8fd9\u4e2a\u6570\u88ab\u79fb\u52a8\u524d\u6216\u5168\u90e8\u64cd\u4f5c\u5b8c\u6210\u540e\u51fa\u73b0\uff0c\u6240\u4ee5\u53ea\u9700\u8981 $n+m$ \u6b21\u67e5\u8be2\uff0c$2n$ \u6b21\u4fee\u6539\uff0c\u53ef\u4ee5\u63a5\u53d7\u3002\n\n\u7efc\u4e0a\uff0c\u6211\u4eec\u8981\u7ef4\u62a4\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\uff0c\u90a3\u4e48\u7ebf\u6bb5\u6811\u548c\u6811\u72b6\u6570\u7ec4\u90fd\u53ef\u4ee5\u505a\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define ls o<<1\n#define rs o<<1|1\nusing namespace std;\nconst int maxn=6e5+5;\nint T;\nint n,m,q[maxn>>1],ans;\nint t[maxn<<2];\nvoid pushup(int o){\n\tt[o]=t[ls]+t[rs];\n\treturn ;\n}\nvoid update(int o,int l,int r,int pos,int val){\n\tif(l==r){\n\t\tt[o]+=val;\n\t\treturn ;\n\t}\n\tint mid=l+r>>1;\n\tif(pos<=mid)update(ls,l,mid,pos,val);\n\telse update(rs,mid+1,r,pos,val);\n\tpushup(o);\n}\nvoid query(int o,int l,int r,int x,int y){\n\tif(x<=l&&r<=y){\n\t\tans+=t[o];\n\t\treturn ;\n\t}\n\tint mid=l+r>>1;\n\tif(x<=mid)query(ls,l,mid,x,y);\n\tif(y>mid)query(rs,mid+1,r,x,y);\n\treturn ;\n}\nint mn[maxn>>1],mx[maxn>>1],pos[maxn>>1],cnt;\nint main(){\n\tT=1;\n\twhile(T--){\n\t\tcin>>n>>m;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tpos[i]=i+m;\n\t\t\tupdate(1,0,n+m,i+m,1);\n\t\t\tmn[i]=mx[i]=i;\n\t\t}\n\t\tcnt=m;\n\t\tfor(int i=1;i<=m;i++){\n\t\t\tcin>>q[i];\n\t\t\tmn[q[i]]=1;\n\t\t\tans=0;\n\t\t\tquery(1,0,n+m,0,pos[q[i]]);\n\t\t\tmx[q[i]]=max(mx[q[i]],ans);\n\t\t\tupdate(1,0,n+m,pos[q[i]],-1);\n\t\t\tpos[q[i]]=cnt;\n\t\t\tcnt--;\n\t\t\tupdate(1,0,n+m,cnt+1,1);\n\t\t}\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tans=0;\n\t\t\tquery(1,0,n+m,0,pos[i]);\n\t\t\tmx[i]=max(mx[i],ans);\n\t\t}\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tcout<<mn[i]<<' '<<mx[i]<<endl;\n\t\t}\n\t}\n}\n\n```\n",
        "postTime": 1677566924,
        "uid": 477757,
        "name": "dennshokouni",
        "ccfLevel": 0,
        "title": "CF1288E\u505a\u9898\u8bb0\u5f55"
    },
    {
        "content": "\u6211\u4eec\u5c06\u7b54\u6848\u5206\u4e3a\u4e24\u90e8\u5206 $minn_i, maxx_i$\uff0c\u5206\u522b\u8868\u793a $i$ \u6700\u9760\u524d\u7684\u4f4d\u7f6e\u548c\u6700\u9760\u540e\u7684\u4f4d\u7f6e\u3002\n\n## \u8ba1\u7b97 $minn$\n\n\u8fd9\u4e00\u90e8\u5206\u662f\u5f88\u597d\u6c42\u7684\uff0c\u56e0\u4e3a\uff0c\u5982\u679c $a$ \u4e2d\u51fa\u73b0\u4e86 $i$\uff0c\u90a3\u4e48 $minn_i$ \u5c31\u5fc5\u7136\u662f $1$ \u4e86\uff08\u4e5f\u5c31\u662f $i$ \u521a\u53d1\u6765\u6d88\u606f\u65f6\u4f4d\u7f6e\u6700\u9760\u524d\uff09\u3002\n\n\u5982\u679c $i$ \u4ece\u6765\u6ca1\u6709\u53d1\u6765\u6d88\u606f\u7684\u8bdd\uff0c\u90a3 $minn_i$ \u5c31\u662f $i$ \u4e86\uff0c\u56e0\u4e3a\u5b83\u4e00\u5f00\u59cb\u5c31\u5728 $i$ \u7684\u4f4d\u7f6e\uff0c\u540e\u6765\u4f4d\u7f6e\u53ea\u53ef\u80fd\u5f80\u540e\uff0c\u4e0d\u53ef\u80fd\u5f80\u524d\u3002\n\n## \u8ba1\u7b97 $maxx$\n\n\u9996\u5148\uff0c\u6211\u4eec\u6765\u56de\u5fc6\u4e00\u4e0b\u81ea\u5df1\u6536\u5230\u4fe1\u606f\u65f6\u7684\u573a\u666f\u3002\n\n* $i$ \u7684\u4fe1\u606f\u6765\u4e86\uff0c$i$ \u8df3\u5230\u4e86\u6700\u524d\u9762\uff1b\n* \u6536\u5230\u53e6\u4e00\u6761\u4fe1\u606f\uff08\u6bd4\u5982\u662f $j$ \u53d1\u6765\u7684\uff09\uff0c\u90a3 $i$ \u5230\u4e86\u7b2c\u4e8c\u4f4d\uff1b\n* \u53c8\u6536\u5230\u4e86\u4e00\u6761\u4fe1\u606f\uff08\u5f53\u7136\uff0c\u4e0d\u662f $i$ \u53d1\u6765\u7684\uff09\uff1a\n\t* \u5982\u679c\u8fd8\u662f $j$ \u53d1\u6765\u7684\uff0c\u90a3 $i$ \u4f9d\u7136\u5728\u7b2c\u4e8c\u4f4d\uff1b\n\t* \u5982\u679c\u4e0d\u662f $j$ \u53d1\u6765\u7684\uff0c\u90a3 $i$ \u5c31\u5230\u4e86\u7b2c\u4e09\u4f4d\u3002\n* \uff08\u82e5\u5e72\u4fe1\u606f\u2026\u2026\uff09\n* \u53c8\u6536\u5230\u4e86 $i$ \u7684\u4fe1\u606f\uff0c$i$ \u56de\u5230\u4e86\u6700\u524d\u9762\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53d1\u73b0\uff0c$i$ \u7684\u4f4d\u7f6e\u4e00\u5b9a\u5728\u4ed6\u81ea\u5df1\u53d1\u6765\u4fe1\u606f\u4e4b\u524d\u8fbe\u5230\u6700\u5927\u503c\uff01\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c$i$ \u7684\u4f4d\u7f6e\u662f\u8fd9\u4e48\u4e00\u4e2a\u51fd\u6570\uff1a\n\n![image.png](https://i.loli.net/2020/01/17/ojRUABpQgY9yaqf.png)\n\n\u82e5\u5e72\u6bb5 **\u5355\u8c03\u4e0d\u4e0a\u5347\u51fd\u6570**\uff01\n\n\u90a3\u4e48\uff0c\u5982\u679c $a_p = i$\uff0c$a_q = i$\uff0c\u5e76\u4e14\u4e2d\u95f4\u6ca1\u6709 $i$ \u4e86\uff0c\u5219\u5728 $q$ \u65f6\u523b\u524d $i$ \u7684\u4f4d\u7f6e\u5c31\u662f\u4ece $a_p \\sim a_{q - 1}$ \u4e2d **\u4e0d\u540c\u7684\u6570\u7684\u4e2a\u6570**\u3002\n\n\u8fd8\u6709\u4e00\u4e9b\u9ebb\u70e6\u7684\u4e8b\u60c5\uff1a\u6bd4\u5982 $i$ \u51fa\u73b0\u4e86 $x$ \u6b21\uff0c\u6211\u4eec\u53ea\u5904\u7406\u4e86 $x - 1$ \u4e2a\u95f4\u9694\u7684\u7b54\u6848\uff0c\u90a3 $1 \\sim$ \u6700\u5148\u51fa\u73b0 $i$ \u7684\u4f4d\u7f6e\uff0c\u4ee5\u53ca\u6700\u540e\u51fa\u73b0 $i$ \u7684\u4f4d\u7f6e $\\sim n$ \u7684\u7b54\u6848\u600e\u4e48\u529e\u5462\uff1f\n\n\u540e\u8005\u5341\u5206\u5bb9\u6613\u5904\u7406\uff1a\u518d\u6570\u4e00\u904d\u6700\u540e\u51fa\u73b0 $i$ \u7684\u4f4d\u7f6e $\\sim n$ \u7684\u4e0d\u540c\u7684\u6570\u5b57\u7684\u4e2a\u6570\u5373\u53ef\u3002\n\n\u524d\u8005\u6211\u4eec\u4e0d\u59a8\u5c06\u4e0a\u56fe\u4e2d\u6240\u793a\u7684\u7b2c\u4e00\u6bb5\u51fd\u6570\u53cd\u5411\u5ef6\u957f\uff0c\u4f7f\u5f97\u5176\u4f4d\u7f6e\u4e3a $1$\uff08\u6b64\u65f6\u7684 $x$ \u5750\u6807\u4e3a $-i + 1$\uff09\uff0c\u7136\u540e\u6211\u4eec\u80fd\u4e0d\u80fd\u6784\u9020\u4e00\u6bb5\u65b0\u7684 $a$\uff0c\u63d2\u5728\u8001 $a$ \u7684\u524d\u9762\uff0c\u4f7f\u5f97\u8fbe\u5230\u6211\u4eec\u60f3\u8981\u7684\u76ee\u7684\u5462\uff1f\n\n\u5f88\u663e\u7136\uff0c\u524d\u9762\u8865\u4e0a $n \\sim 1$ \u8fd9\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217\u5c31\u884c\u4e86\uff0c\u7136\u540e\u5bf9\u4e8e\u539f\u5e8f\u5217\u4e2d\u6700\u5148\u51fa\u73b0 $i$ \u7684\u4f4d\u7f6e\uff0c\u53ea\u8981\u6570\u5b83\u548c\u8fd9\u4e2a\u65b0\u6dfb\u52a0\u7684 $i$\uff08$n \\sim 1$ \u7684\u5e8f\u5217\u4e2d\u80af\u5b9a\u6709 $i$\uff09 \u4e4b\u95f4\u7684\u4e0d\u540c\u7684\u6570\u5b57\u7684\u4e2a\u6570\u5373\u53ef\u3002\n\n\u8003\u8651\u600e\u4e48\u7edf\u8ba1\u4e0d\u540c\u7684\u6570\u5b57\u7684\u4e2a\u6570\u3002\n\n\u5982\u679c\u91c7\u53d6\u83ab\u961f\u7684\u65b9\u6cd5\uff0c\u7c7b\u6bd4\u4e8e [[\u56fd\u5bb6\u96c6\u8bad\u961f]\u6570\u989c\u8272](https://www.luogu.com.cn/problem/P1903)\uff0c\u90a3\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u6839\u53f7\u7684\uff0c\u5f88\u60ac\u3002\uff08\u4f46\u597d\u50cf\u51fa\u9898\u4eba @pikmike \u6709\u610f\u653e\u8fd9\u79cd\u505a\u6cd5\u8fc7\uff1f\uff09\n\n\u8003\u8651\u4e0d\u5e26\u4fee\u6539\uff0c\u90a3\u4e48\u5c31\u662f\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\uff0c\u7c7b\u6bd4\u4e8e [[SDOI2009]HH\u7684\u9879\u94fe](https://www.luogu.com.cn/problem/P1972)\uff0c\u53ef\u4ee5\u5728\u4e00\u4e2a $\\log$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff01\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 3e5 + 5;\nint n, m, cnt, a[N << 1], minn[N], maxx[N], lst[N];\nstruct tree_array // \u6811\u72b6\u6570\u7ec4\u76f8\u5173 \n{\n#define lowbit(x) x & -x\n\tint o[N << 1];\n\ttree_array() { memset(o, 0, sizeof o); }\n\tint query(int p)\n\t{\n\t\tint res = 0;\n\t\tfor(; p; p -= lowbit(p)) res += o[p];\n\t\treturn res;\n\t}\n\tvoid modify(int p, int v)\n\t{\n\t\tfor(; p <= n + m; p += lowbit(p)) o[p] += v;\n\t}\n} tr;\nstruct qry // \u8be2\u95ee \n{ \n\tint v, l, r; // \u56e0\u4e3a\u8981\u79bb\u7ebf\uff0cv \u8868\u793a\u8fd9\u4e2a\u8be2\u95ee\u7684\u7ed3\u679c\u7528\u6765\u66f4\u65b0 maxx[v] \n\tbool operator < (const qry &oth) const { return r < oth.r; }\n} q[N << 1];\nvoid add_query(int v, int l, int r) { q[++cnt] = (qry){v, l, r}; }\nint main()\n{\n\tios::sync_with_stdio(false);\n\tcin >> n >> m;\n\tfor(int i = 1; i <= n; i++) a[n - i + 1] = i; // \u6784\u9020 a \n\tfor(int i = 1; i <= m; i++) cin >> a[i + n];\n\tfor(int i = 1; i <= n; i++) minn[i] = maxx[i] = i;\n\tfor(int i = n + 1; i <= n + m; i++) minn[a[i]] = 1;\n\tfor(int i = 1; i <= n + m; i++)\n\t{\n\t\tif(!lst[a[i]]) lst[a[i]] = i;\n\t\telse\n\t\t{\n\t\t\tadd_query(a[i], lst[a[i]] + 1, i); // \u6dfb\u52a0\u4e24\u4e24\u4e4b\u95f4\u7684\u8be2\u95ee\uff08\u81ea\u7136\u5305\u62ec\u4e86\u6784\u9020\u7684\u90e8\u5206\uff09 \n\t\t\tlst[a[i]] = i;\n\t\t}\n\t}\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tif(a[n + m] == i) continue; // \u6dfb\u52a0\u5230\u672b\u5c3e\u7684\u8be2\u95ee \n\t\tadd_query(i, lst[i], n + m);\n\t}\n\tmemset(lst, 0, sizeof lst);\n\tsort(q + 1, q + cnt + 1);\n\t\n\t// \u5904\u7406\u79bb\u7ebf\u540e\u7684\u6bcf\u4e2a\u8be2\u95ee \n\tint now = 1;\n\tfor(int i = 1; i <= cnt; i++)\n\t{\n\t\tfor(; now <= q[i].r; now++)\n\t\t{\n\t\t\tif(lst[a[now]]) tr.modify(lst[a[now]], -1);\n\t\t\tlst[a[now]] = now;\n\t\t\ttr.modify(now, 1);\n\t\t}\n\t\tmaxx[q[i].v] = max(maxx[q[i].v], tr.query(q[i].r) - tr.query(q[i].l - 1));\n\t}\n\t\n\tfor(int i = 1; i <= n; i++) cout << minn[i] << ' ' << maxx[i] << endl;\n\treturn 0;\n}\n```",
        "postTime": 1579269965,
        "uid": 51971,
        "name": "syksykCCC",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1288E \u3010Messenger Simulator\u3011"
    },
    {
        "content": "### \u9898\u76ee\u4f20\u9001\u95e8\n\n[\u6d1b\u8c37](https://www.luogu.com.cn/problem/CF1288E)\n\n[CF](https://codeforces.com/problemset/problem/1288/E)\n\n### \u9898\u610f\n\n\u4e0d\u65ad\u8fdb\u884c\u628a\u4e00\u4e2a\u6570\u7ec4\u4e2d\u7684\u4e00\u4e2a\u6570\u5b57\u63d2\u5165\u6570\u7ec4\u5f00\u5934\uff0c\u521d\u59cb\u6570\u7ec4\u987a\u5e8f\u6392\u5217\uff0c\u6c42\u51fa\u6bcf\u4e2a\u6570\u5b57\u51fa\u73b0\u4f4d\u7f6e\u7684\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u3002\n\n### \u5206\u6790\n\n\u5148\u5bf9\u4e8e\u6bcf\u4e2a\u6570\u5b57\u5206\u6790\u6700\u5c0f\u503c\u3002\u5047\u8bbe\u8fd9\u4e2a\u6570\u5b57\u4e3a $x$\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u6211\u4eec\u8fdb\u884c\u8fc7\u628a\u8fd9\u4e2a\u6570\u5b57\u63d2\u5165\u6570\u7ec4\u5f00\u5934\u7684\u64cd\u4f5c\uff0c\u90a3\u4e48\u6700\u5c0f\u503c\u5c31\u662f $1$\uff0c\u5426\u5219\u6700\u5c0f\u503c\u5c31\u662f\u5176\u521d\u59cb\u4f4d\u7f6e $x$\u3002\n\n\u6bd4\u8f83\u590d\u6742\u7684\u662f\u6700\u5927\u503c\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\u5b57\uff0c\u6211\u4eec\u6bcf\u628a\u4e00\u4e2a\u540e\u9762\u7684\u6570\u5b57\u63d2\u5165\u6570\u7ec4\u5f00\u5934\uff0c\u6700\u5927\u503c\u5c31\u589e\u52a0 $1$\uff0c\u7136\u800c\uff0c\u5c06\u5176\u524d\u9762\u7684\u6570\u5b57\u63d2\u5165\u6570\u7ec4\u5f00\u5934\u5e76\u4e0d\u4f1a\u6539\u53d8\u5176\u6700\u5927\u503c\u3002\n\n\u6211\u4eec\u628a\u6240\u6709\u7684\u64cd\u4f5c\u8bb0\u4e3a\u4e00\u4e2a\u63d2\u5165\u5e8f\u5217\u3002\n\n\u5047\u8bbe\u4e00\u4e2a\u6570\u5b57\u5728\u63d2\u5165\u5e8f\u5217\u7684\u7b2c $l$ \u4e2a\uff0c\u6b64\u65f6\uff0c\u5b83\u5728\u5f00\u5934\uff0c\u6240\u6709\u6570\u5b57\u90fd\u5728\u5b83\u540e\u9762\u3002\u968f\u7740\u522b\u7684\u6570\u5b57\u7684\u4e0d\u65ad\u63d2\u5165\uff0c\u5b83\u7684\u4f4d\u7f6e\u4f1a\u4e0d\u65ad\u5730\u540e\u79fb\uff0c\u77e5\u9053\u5b83\u518d\u4e00\u6b21\u5730\u88ab\u63d2\u5230\u5f00\u5934\uff0c\u6b64\u65f6\u7684\u63d2\u5165\u5e8f\u5217\u4f4d\u7f6e\u8bb0\u4e3a $r$\uff0c**\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u5176\u6700\u5927\u4f4d\u7f6e\u5c31\u662f\u533a\u95f4 $[l,r]$ \u4e2d\u7684\u4e0d\u91cd\u590d\u6570\u5b57\u4e2a\u6570\u3002** \u5176\u5b9e\u8fd9\u4e5f\u4e0d\u96be\u7406\u89e3\uff0c\u56e0\u4e3a\u88ab\u63d2\u5165\u5230\u5176\u524d\u9762\u7684\u6570\u5b57\u518d\u6b21\u63d2\u5165\u4e0d\u4f1a\u6539\u53d8\u5176\u4f4d\u7f6e\u3002\n\n\u4f46\u6709\u4e9b\u6570\u5b57\u521d\u59cb\u4e0d\u5728\u5f00\u5934\uff0c\u6211\u4eec\u5728\u63d2\u5165\u5e8f\u5217\u524d\u63d2\u5165\u4e00\u6bb5 $n,n-1,\\dots,3,2,1$ \u7684\u5e8f\u5217\uff0c\u5373\u5012\u5e8f\u5411\u524d\u63d2\u5165\u6240\u6709\u6570\u5b57\uff0c\u8fd9\u6837\uff0c\u6bcf\u4e2a\u6570\u5b57\u90fd\u5728\u5f00\u5934\u51fa\u73b0\u8fc7\uff0c\u5c31\u5b8c\u7f8e\u5730\u89e3\u51b3\u4e86\u4e0a\u8ff0\u95ee\u9898\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u4ece\u524d\u5230\u540e\u904d\u5386\u63d2\u5165\u5e8f\u5217\uff0c\u5e76\u6c42\u51fa\u8fd9\u4e2a\u6570\u5b57\u4e0a\u6b21\u5728\u63d2\u5165\u5e8f\u5217\u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e\u5230\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u533a\u95f4\u4e0d\u91cd\u590d\u6570\u5b57\u4e2a\u6570\uff0c\u66f4\u65b0\u7b54\u6848\u5373\u53ef\u3002\n\n\u6ce8\u610f\u5728\u6700\u540e\uff0c\u6211\u4eec\u518d\u6b21\u7edf\u8ba1\u4e00\u4e0b\u6bcf\u4e2a\u6570\u5b57\u4e0a\u6b21\u51fa\u73b0\u4f4d\u7f6e\u5230\u7ed3\u5c3e\u7684\u533a\u95f4\u4e0d\u91cd\u590d\u6570\u5b57\u4e2a\u6570\uff0c\u66f4\u65b0\u7b54\u6848\u3002\n\n\u81f3\u4e8e\u533a\u95f4\u4e0d\u91cd\u590d\u6570\u5b57\u4e2a\u6570\u7684\u6c42\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u540e\u7f00\u548c\uff0c\u6bcf\u6b21\u5728\u8fd9\u4e00\u4e2a\u4f4d\u7f6e $+1$\uff0c\u5728\u4e0a\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e $-1$\u3002\n\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define F(i,a,b) for(register int i=a;i<=b;++i)\n#define N 300010\nint a[N],b[N],ans[N][2],n,m;\nstruct Tree\n{\n\tint sum[N<<1];\n\tinline void update(int x,int y) \n\t{\n\t\twhile(x)\n\t\t{\n\t\t\tsum[x] += y;\n\t\t\tx -= x & -x;\n\t\t}\n\t}\n\tinline int query(int x)\n\t{\n\t\tint ret = 0;\n\t\twhile(x <= n+m)\n\t\t{\n\t\t\tret += sum[x];\n\t\t\tx += x & -x;\n\t\t}\n\t\treturn ret;\n\t}\n}tree;\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tF(i,1,n) \n\t{\n\t\tans[i][0] = ans[i][1] = i;\n\t\tb[i] = n-i+1;\n\t\ttree.update(i,1);\n\t}\n\tF(i,n+1,n+m)\n\t{\n\t\tint x;\n\t\tscanf(\"%d\",&x);\n\t\tans[x][0] = 1;\n\t\ttree.update(i,1);\n\t\ttree.update(b[x],-1);\n\t\tans[x][1] = max(ans[x][1],tree.query(b[x]+1) - tree.query(i) + 1);\n\t\tb[x] = i;\n\t}\n\tF(i,1,n) ans[i][1] = max(ans[i][1],tree.query(b[i]+1) + 1);\n\tF(i,1,n) printf(\"%d %d\\n\",ans[i][0],ans[i][1]);\n\treturn 0;\n}\n```\n### \u5199\u5728\u540e\u9762\n\n\u4eba\u7c7b\u6587\u660e\u7684\u53d1\u5c55\u53f2\uff0c\u5c31\u662f\u77e5\u8bc6\u7684\u4f20\u627f\u53f2\u3002\u4ece\u897f\u6c49\u9020\u7eb8\u672f\u7684\u53d1\u660e\uff0c\u5230\u5143\u671d\u6d3b\u5b57\u5370\u5237\u7684\u51fa\u73b0\uff0c\u518d\u5230\u73b0\u4ee3\u4ee5\u6765\u7535\u5b50\u8ba1\u7b97\u673a\u7684\u9010\u6e10\u63a8\u5e7f\uff0c\u77e5\u8bc6\u5f97\u4ee5\u66f4\u65b9\u4fbf\u5730\u4f20\u64ad\u3002\u6211\u5199\u4e86 $30$ \u7bc7\u9898\u89e3\u53d1\u73b0\u2014\u2014\u5199\u9898\u89e3\uff0c\u4e0d\u4ec5\u4ec5\u662f\u4e3a\u4e86\u8bb0\u5f55\u81ea\u5df1\u7684\u5b66\u4e60\u8fc7\u7a0b\uff0c\u4e5f\u662f\u4e3a\u4e86\u5206\u4eab\u4e0e\u4ea4\u6d41\u81ea\u5df1\u7684\u72ec\u7279\u89c1\u89e3\u3002\u6d1b\u8c37\u7684\u9898\u89e3\u529f\u80fd\uff0c\u4e5f\u8425\u9020\u4e86\u5f00\u653e\u3001\u5305\u5bb9\u7684\u5b66\u672f\u5206\u6c14\u3002\u5728\u5b66\u4e60\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6452\u5f03\u95ed\u95e8\u9020\u8f66\u7684\u6302\u5ff5\uff0c\u79ef\u6781\u4ea4\u6d41\u3001\u6df1\u5ea6\u4e92\u52a8\uff0c\u8ba9\u77e5\u8bc6\u4e0d\u65ad\u4f20\u627f\u3002",
        "postTime": 1677507463,
        "uid": 197648,
        "name": "Wangxun",
        "ccfLevel": 5,
        "title": "CF1288E \u9898\u89e3"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1288E)\n## \u601d\u8def\n\u8fd9\u4e2a\u9898\u6bd4\u8f83\u5947\u5999\uff0c\u4e4d\u4e00\u770b\u4f3c\u4e4e\u662f\u9053\u6c34\u9898\uff0c\u4f46\u662f\u6211\u5c31\u88ab\u5751\u4e86\u3002\n\n\u6211\u4eec\u8bbe $up_i$ \u8868\u793a $i$ \u6700\u9760\u4e0a\u7684\u4f4d\u7f6e\uff0c$down_i$ \u8868\u793a $i$ \u6700\u9760\u4e0b\u7684\u4f4d\u7f6e\uff0c$rank_i$ \u8868\u793a $i$ \u5f53\u524d\u7684\u6392\u540d\u3002\n\n\u9996\u5148\u8fd9\u4e2a\u9898\u9700\u8981\u7528\u5230\u7ebf\u6bb5\u6811\uff0c\u76f8\u4fe1\u5404\u4f4d\u8bfb\u8005\u90fd\u53d1\u73b0\u4e86\uff0c\u63a5\u7740\uff0c\u6211\u4eec\u53d1\u73b0\u4e86\u4e00\u4e2a\u663e\u7136\u7684\u6027\u8d28\uff0c\u90a3\u5c31\u662f\u82e5\u4e00\u4e2a\u597d\u53cb\u51fa\u73b0\u5728\u4e86\u6d88\u606f\u5217\u8868\u4e2d\uff0c\u8fd9\u4e2a\u597d\u53cb\u7684 $up$ \u503c\u663e\u7136\u4e3a $1$\uff0c$down$ \u503c\u9700\u8981\u4e0e\u5f53\u524d\u7684 $rank$ \u53d6 $\\max$\uff0c\u63a5\u7740\u6211\u4eec\u628a $rank_i<rank$ \u7684 $i$ \u7684\u4f4d\u7f6e\u5168\u90e8\u52a0\u4e0a $1$\uff0c\u7136\u540e\u628a $rank$ \u53d8\u6210 $1$\u3002\n\n\u7136\u540e\u6211\u5c31\u7801\u51fa\u4e86\u4e00\u4e2a\u7ebf\u6bb5\u6811\uff1a[\u63d0\u4ea4\u8bb0\u5f55](https://codeforces.com/problemset/submission/1288/174967131)\u3002\n\n\u4f46\u662f\uff0c\u6211\u4eec\u4f1a\u60ca\u8bb6\u5730\u53d1\u73b0\u8fd9\u4e2a\u7a0b\u5e8f $\\verb!TLE!$ \u4e86\uff0c\u4e3a\u4ec0\u4e48\u5462\uff0c\u56e0\u4e3a\u6211\u7684\u7ebf\u6bb5\u6811\u5728\u66f4\u65b0\u7684\u65f6\u5019\u8bbf\u95ee\u7684\u5e76\u4e0d\u662f\u4e00\u6bb5\u8fde\u7eed\u7684\u533a\u95f4\uff0c\u5177\u4f53\u5730\uff0c\u6211\u7684\u7ebf\u6bb5\u6811\u7684\u4e0b\u6807\u662f $i$\uff0c\u503c\u5b58\u7684\u624d\u662f $rank_i$\uff0c\u800c\u6211\u4eec\u4fee\u6539\u662f\u6309\u7167 $rank_i$ \u6765\u7684\uff0c\u6240\u4ee5\u8bbf\u95ee\u4e86\u591a\u6bb5\u533a\u95f4\uff0c\u590d\u6742\u5ea6\u9000\u5316\u4e3a $O(n^2 \\log n)$\uff0c\u751a\u81f3\u8fde\u66b4\u529b\u90fd\u4e0d\u5982\u3002\n\n\u901a\u8fc7\u53cd\u601d\u539f\u6765\u7ebf\u6bb5\u6811\u5b58\u5728\u7684\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u5c0f $\\verb!trick!$ \u4f18\u5316\u6389\u3002\u6211\u4eec\u6700\u7ec8\u7684\u76ee\u6807\u5c31\u662f\u8ba9\u4fee\u6539\u7684\u533a\u95f4\u662f\u4e00\u4e2a\u8fde\u7eed\u7684\u533a\u95f4\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u59a8\u4ee5 $rank_i$ \u4e3a\u4e0b\u6807\u3002\n\n\u6211\u4eec\u8bbe $loc_i$ \u8868\u793a $i$ \u4e0d\u80fd\u4fee\u6539\u7684\u533a\u95f4\u4e3a $loc_i$ \u81f3 $n+m$\uff0c\u5373\u533a\u95f4 $loc_i$ \u81f3 $n+m$ \u5185\u7684\u6570\u7684 $rank$ \u5747\u5927\u4e8e\u7b49\u4e8e $rank_i$\u3002\u521d\u59cb\u6211\u4eec\u628a\u6bcf\u4e2a $loc_i$ \u8d4b\u503c\u4e3a $i+m$\uff0c\u4e3a\u7684\u662f\u4e0d\u4e0e\u6211\u4eec\u4e4b\u540e\u4fee\u6539 $loc_i$ \u7684\u64cd\u4f5c\u51b2\u7a81\u3002\n\n\u6bcf\u5f53\u6211\u4eec\u626b\u5230\u4e00\u4e2a $i$\uff0c\u8bbe $x_i$ \u4e3a\u5f53\u524d\u8981\u5904\u7406\u7684\u6570\uff0c\u6211\u4eec\u7ed9 $x_i$ \u4e00\u4e2a\u65b0\u7684 $loc_{x_i}$\uff0c\u8bb0\u4e3a $m-i$\uff0c\u6211\u4eec\u9700\u8981 $\\verb!update!$ \u7684\u533a\u95f4\u5373\u4e3a $m-i$ \u81f3 $loc_{x_i}-1$\uff0c\u4e3a\u4e86\u907f\u514d $\\verb!RE!$\uff0c\u6211\u4eec\u53ef\u4ee5\u5206\u6210\u4e24\u4e2a\u505a\u3002\u8fd9\u91cc\u7684 $loc_{x_i}$ \u6307\u7684\u662f\u4fee\u6539\u4e4b\u524d\u7684\u3002\n\n\u63a5\u4e0b\u6765\u8bf4\u660e\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u8bbe\uff0c\u56e0\u4e3a\u663e\u7136\u540e\u9762\u7684 $x_i$ \u662f\u8981\u53bb\u66f4\u65b0\u524d\u9762\u7684 $x_i$ \u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8bbe\u6210 $m-i$ \u66f4\u5bb9\u6613\u4fee\u6539\u3002\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nint const N=6e5+10;\nint up[N],down[N],loc[N];\nstruct Segment_Tree{\n\tint c[N<<2],lazy[N<<2];\n\t#define ls (x<<1)\n\t#define rs (x<<1|1)\n\t#define mid ((l+r)>>1)\n\tinline void pushdown(int x){\n\t\tlazy[ls]+=lazy[x];lazy[rs]+=lazy[x];\n\t\tc[ls]+=lazy[x];c[rs]+=lazy[x];\n\t\tlazy[x]=0;\n\t}\n\tinline void update(int x,int l,int r,int ll,int rr,int v){\n\t\tif (ll<=l && r<=rr){c[x]+=v,lazy[x]+=v;return;}\n\t\tpushdown(x);\n\t\tif (ll<=mid) update(ls,l,mid,ll,rr,v);\n\t\tif (mid<rr) update(rs,mid+1,r,ll,rr,v);\n\t\tc[x]=c[ls]+c[rs];\n\t}\n\tinline int query(int x,int l,int r,int p){\n\t\tif (l==r) return c[x];\n\t\tpushdown(x);\n\t\tif (p<=mid) return query(ls,l,mid,p);\n\t\telse return query(rs,mid+1,r,p);\n\t}\n}T;\nsigned main(){\n    ios::sync_with_stdio(false);\n    cin.tie(0),cout.tie(0);\n    int n,m;cin>>n>>m;\n    for (int i=1;i<=n;++i) up[i]=down[i]=i;\n    for (int i=1;i<=n;++i) loc[i]=i+m,T.update(1,1,n+m,loc[i],n+m,1);\n    for (int i=1;i<=m;++i){\n    \tint x;cin>>x;up[x]=1;\n    \tdown[x]=max(down[x],T.query(1,1,n+m,loc[x]));\n    \tT.update(1,1,n+m,loc[x],n+m,-1);loc[x]=m-i;\n    \tT.update(1,1,n+m,loc[x],n+m,1);\n    }\n    for (int i=1;i<=n;++i) down[i]=max(down[i],T.query(1,1,n+m,loc[i]));\n \tfor (int i=1;i<=n;++i) cout<<up[i]<<' '<<down[i]<<'\\n';\n    return 0;\n}\n```\n",
        "postTime": 1665147746,
        "uid": 253608,
        "name": "Tx_Lcy",
        "ccfLevel": 7,
        "title": "CF1288E Messenger Simulator"
    },
    {
        "content": "\u7b80\u5355\u7684\u6570\u636e\u7ed3\u6784\u9898\u3002\n\n\u5206\u6790\u4e00\u4e0b\u9898\u610f\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u6700\u5c0f\u548c\u6700\u5927\u662f\u4e24\u4e2a\u72ec\u7acb\u7684\u60c5\u51b5\u5c1d\u8bd5\u5206\u5f00\u6765\u8ba8\u8bba\u3002\n\n\u5bf9\u4e8e\u6700\u5c0f\u7684\u60c5\u51b5\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad\u5b83\u662f\u5426\u79fb\u5230\u4e86\u7b2c\u4e00\u4e2a\uff0c\u5982\u679c\u6709\u7684\u8bdd\u5219\u662f\u7b2c\u4e00\u4e2a\uff0c\u5426\u5219\u5c31\u662f\u5b83\u7684\u521d\u59cb\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u540e\u9762\u7684\u64cd\u4f5c\u4e0d\u4f1a\u628a\u5b83\u5f80\u4e0a\u63a8\u3002\n\n\u5bf9\u4e8e\u6700\u5927\u7684\u60c5\u51b5\uff0c\u8fd9\u79cd\u60c5\u51b5\u5c31\u7a0d\u5fae\u6709\u70b9\u9ebb\u70e6\u4e86\u3002\n\n\u5206\u5f00\u6765\u8003\u8651\u4e24\u6bb5\u7684\u60c5\u51b5\uff0c\u4e00\u4e2a\u662f $1$ \u5230 \u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u53e6\u5916\u4e00\u4e2a\u662f\u4e24\u6b21\u51fa\u73b0\u4f4d\u7f6e\u4e4b\u95f4\u7684\u95f4\u9694\u3002\n\n\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4f1a\u6bd4\u8f83\u597d\u505a\u4e00\u70b9\uff0c\u5c31\u662f\u6570\u4e00\u4e0b\u533a\u95f4\u91cc\u9762\u51fa\u73b0\u8fc7\u4e86\u591a\u5c11\u672c\u8d28\u4e0d\u540c\u7684\u6570\u3002\n\n\u533a\u95f4\u6570\u989c\u8272\u8fd9\u4e2a\u662f\u4e2a\u7ecf\u5178\u95ee\u9898\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u7528 HH \u7684\u9879\u94fe\u6765\u505a\uff0c\u5c31\u662f\u79bb\u7ebf\u7136\u540e\u628a\u6700\u63a5\u8fd1\u53f3\u7aef\u70b9\u7684\u89c6\u4e3a $1$\uff0c\u5176\u4f59\u89c6\u4e3a $0$ \u5373\u53ef\u3002\n\n\u7b2c\u4e00\u79cd\u60c5\u51b5\u7684\u8bdd\u6211\u4eec\u4f1a\u53d1\u73b0\u5b83\u672c\u8d28\u4e0a\u662f\u591a\u4e86 $1$ \u5230 $i-1$ \u8fd9\u4e9b\u6570\u5728\u4ed6\u7684\u524d\u9762\uff0c\u6211\u4eec\u5728\u67e5\u8be2\u8fd9\u4e2a\u533a\u95f4\u989c\u8272\u7684\u65f6\u5019\uff0c\u628a $1$ \u5230 $i-1$ \u4e2d\u7684\u6570\u51fa\u73b0\u8fc7\u7684\u51cf\u6389\u5373\u53ef\u3002\n\n\u611f\u89c9\u8fd8\u662f\u633a\u597d\u5199\u7684\u5427\uff0c\u5efa\u8bae\u8bfb\u8005\u81ea\u884c\u5199\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <vector>\n#define pb push_back\nusing namespace std;\nconst int INF=1e6+5;\nvector<int> v[INF];\nint n,m,a[INF],sum1[INF],la[INF];\nint ans[INF],pre[INF],res[INF];\nstruct BIT{\n\tint tree[INF];\n\tvoid add(int x,int y) {for (int i=x;i<=3e5;i+=i&-i) tree[i]+=y;}\n\tint query(int x) {int sum=0;for (int i=x;i;i-=i&-i) sum+=tree[i];return sum;}\n}T1,T2;\nstruct _node_edge{\n\tint to_,next_,v1,v2;\n}edge[INF<<1];\nint head[INF],tot;\nvoid add_edge(int x,int y,int v1,int v2) {\n\tedge[++tot]=(_node_edge){y,head[x],v1,v2};\n\thead[x]=tot;return ;\n}\nsigned main()\n{\n\tios::sync_with_stdio(false);\n\tcin>>n>>m;\n\tfor (int i=1;i<=m;i++) cin>>a[i];\n\tfor (int i=1;i<=m;i++) v[a[i]].pb(i);\n\tfor (int i=1;i<=n;i++) v[i].pb(m+1);\n\tfor (int i=1;i<=n;i++) {\n\t\tif (v[i].size()>1) sum1[i]=1;\n\t\telse sum1[i]=i;\n\t}\n\tfor (int i=1;i<=n;i++) {\n\t\tint len=v[i].size();\n\t\tfor (int j=0;j<len;j++) {\n\t\t\tif (j==0) add_edge(v[i][0],0,1,i),add_edge(v[i][0],0,2,i);\n\t\t\telse add_edge(v[i][j],v[i][j-1],0,i);\n\t\t}\n\t}\n\t\n\tfor (int x=1;x<=m+1;x++) {\n\t\tif (x!=m+1) {\n\t\t\tif (la[a[x]]) T1.add(la[a[x]],-1),T1.add(x,1),la[a[x]]=x;\n\t\t\telse T1.add(x,1),la[a[x]]=x,T2.add(a[x],1);\n\t\t}\n\t\tfor (int i=head[x];i;i=edge[i].next_) {\n\t\t\tint v=edge[i].to_,v1=edge[i].v1,v2=edge[i].v2;\n\t\t\tif (!v1) ans[v2]=max(ans[v2],T1.query(x-1)-T1.query(v));\n\t\t\telse if (v1==1) res[v2]-=T2.query(v2);\n\t\t\telse res[v2]+=T1.query(x);\n//\t\t\tcout<<v2<<\" \"<<T1.query(x)-T1.query(v)<<\" \"<<v<<\" endl\\n\"; \n\t\t}\n\t}\n\t\n\tfor (int i=1;i<=n;i++) {\n\t\tcout<<sum1[i]<<\" \"<<max(res[i]+i,ans[i]+1)<<\"\\n\";\n//\t\tcout<<ans[i]<<\" ?\\n\";\n\t}\n\treturn 0;\n}\n```\n\n\u8fd9\u91cc\u7ed9\u51fa\u6570\u636e\u751f\u6210\u5668\uff0c\u65b9\u4fbf\u8bfb\u8005\u8fdb\u884c\u5bf9\u62cd\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long \nusing namespace std;\nstd::mt19937 mt_rand(std::chrono::system_clock::now().time_since_epoch().count());\nint gen(int l,int r) {return l+mt_rand()%(r-l+1);}\nint Map[1005][1005];\nsigned main()\n{\n\tint n=gen(1,5),m=gen(1,5);\n\tcout<<n<<\" \"<<m<<\"\\n\";\n\tfor (int i=1;i<=m;i++) cout<<gen(1,n)<<\" \";\n\tcout<<\"\\n\";\n\treturn 0;\n}\n```\n\n",
        "postTime": 1663248653,
        "uid": 208653,
        "name": "_edge_",
        "ccfLevel": 0,
        "title": "CF1288E"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u2026\u2026\u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u8981\u624b\u5199\u6570\u636e\u7ed3\u6784\u4ec0\u4e48\u7684\u554a\u2026\u2026\u771f\u7684\u4e0d\u77e5\u9053\u554a\u2026\u2026\n\n\u9996\u5148\u6211\u4eec\u89c2\u5bdf\u5230\u4e00\u4e2a\u6027\u8d28\uff1a\u5728\u4e00\u8f6e\u64cd\u4f5c\u4e2d\uff0c\u5982\u679c\u4e00\u4e2a\u6570\u4e0d\u662f\u88ab\u63d0\u5230\u9996\u4f4d\u7684\u90a3\u4e00\u4e2a\uff0c\u90a3\u5b83\u7684\u4f4d\u7f6e\u4e0d\u4f1a\u5411\u524d\u79fb\u52a8\u3002\u8fd9\u662f\u663e\u7136\u7684\uff0c\u5206\u5728\u63d0\u524d\u7684\u5143\u7d20\u524d\u8fd8\u662f\u540e\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u8fd9\u6837\u7684\u8bdd\u6700\u5c0f\u503c\u5c31\u5df2\u7ecf\u53ef\u4ee5\u6c42\u4e86\uff0c\n~~\u5982\u679c\u4e0d\u4f1a\u7684\u8bdd\u8bf7\u627e\u51e0\u9053\u6c34\u7ea2\u9898\u5207\u4e86\u7136\u540e\u51b7\u9759\u4e00\u4e0b~~\u3002\u5bf9\u4e8e\u7b2c $x$ \u4e2a\u5143\u7d20\uff0c\u5982\u679c\u88ab\u63d0\u524d\u8fc7\uff0c\u90a3\u4e48\u5c31\u662f $1$\uff0c\u53cd\u4e4b\u5c31\u662f $x$\uff0c\u662f\u4e0d\u662f\u5f88\u65e0\u804a\uff08\n\n\u5bf9\u4e8e\u6700\u5927\u503c\u7684\u8bdd\uff0c\u6211\u4eec\u5982\u679c\u6bcf\u4e00\u6b21\u63d0\u524d\u4e4b\u524d\u90fd\u5bf9\u6bcf\u4e2a\u6570\u66f4\u65b0\u4e00\u6b21\uff0c\u590d\u6742\u5ea6\u8fc7\u9ad8\u3002\u4f46\u662f\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u8fd9\u4e00\u6b21\u6570 $x$ \u6ca1\u6709\u88ab\u63d0\u524d\uff0c\u90a3\u4e48\u53ef\u4ee5\u5148\u5495\u4e86\u4e0d\u66f4\uff0c\u7b49\u4e0b\u518d\u66f4\u4e0d\u4f1a\u51fa\u95ee\u9898\uff08\u56e0\u4e3a\u76f4\u5230 $x$ \u88ab\u63d0\u524d\uff0c\u5b83\u7684\u4f4d\u7f6e\u90fd\u662f\u4e0d\u4f1a\u5411\u524d\u7684\uff09\u3002\u7279\u6b8a\u5730\uff0c\u6240\u6709\u64cd\u4f5c\u7ed3\u675f\u540e\u5bf9\u6bcf\u4e2a\u6570\u518d\u91cd\u65b0\u8ba1\u7b97\u4e00\u4e0b\uff0c\u514d\u5f97\u51fa\u95ee\u9898\uff08\u95ee\u9898\u5728\u54ea\u7559\u7ed9\u8bfb\u8005\u81ea\u884c\u601d\u8003\uff0c~~\u5982\u679c\u770b\u4e0d\u51fa\u7684\u8bdd\u8bf7\u627e\u51e0\u9053\u6c34\u7ea2\u9898\u5207\u4e86\u7136\u540e\u51b7\u9759\u4e00\u4e0b~~\uff09\u3002\n\n\u7136\u540e\u5c31\u53ea\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u652f\u6301\u628a\u4e00\u4e2a\u6570\u63d0\u524d\uff0c\u4ee5\u53ca\u67e5\u4e00\u4e2a\u6570\u7684\u6392\u540d\u5c31\u597d\u4e86\u3002\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7528 pbds \u7684\u5e73\u8861\u6811\u8dd1\u8fc7\u53bb\u3002\u6ca1\u6709\u4efb\u4f55\u8981\u6ce8\u610f\u7684\u70b9\u3002\n\n```cpp\n#include <bits/extc++.h>\n#include <bits/stdc++.h>\nusing namespace std;\nusing namespace __gnu_pbds;\ntemplate <typename T, typename U = null_type>\nusing rbt = tree<T, U, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\nconstexpr int N = 3e5 + 9;\nrbt<int> st;\nrbt<int>::iterator its[N];\nint n, m, ansmin[N], ansmax[N];\nsigned main() {\n  cin >> n >> m;\n  for (int i = 1; i <= n; ++i) its[i] = st.insert(ansmin[i] = i).first;\n  for (int a, i = 0; i < m; ++i) {\n    cin >> a, ansmin[a] = 1;\n    ansmax[a] = max(ansmax[a], (int)st.order_of_key(*its[a]) + 1);\n    st.erase(its[a]), its[a] = st.insert(-i).first;\n  }\n  for (int i = 1; i <= n; ++i)\n    ansmax[i] = max(ansmax[i], (int)st.order_of_key(*its[i]) + 1);\n  for (int i = 1; i <= n; ++i) cout << ansmin[i] << ' ' << ansmax[i] << '\\n';\n  return cout << flush, 0;\n}\n```\n\n\uff08\u5f00\u5934\u90a3\u4e2a `#include <bits/extc++.h>`\uff0cCF \u662f\u80fd\u8dd1\u5f97\u8fc7\u53bb\u7684\uff0c\u6d1b\u8c37\u4e5f\u80fd\uff08\u597d\u5427 OJ \u4e0a\u57fa\u672c\u90fd\u80fd\uff09\uff0cNOI Linux\u4e5f\u80fd\uff0c\u4f46\u662f\u6211\u7684 windows \u4e0d\u80fd\uff0c\u4f46\u662f\u6211\u5904\u7406\u8fc7\u4e8e\u662f\u80fd\u4e86\uff0c\u6240\u4ee5\u5bf9\u4e8e\u8bfb\u8005\u800c\u8a00\u6709\u53ef\u80fd\u4f1a\u51fa\u73b0\u672c\u5730 CE \u7684\u60c5\u51b5\uff0c\u5e76\u4e0d\u662f\u9898\u89e3\u7684 bug\u3002\uff09\n\n\u4ee5\u4e0a\u3002",
        "postTime": 1642827176,
        "uid": 250637,
        "name": "UnyieldingTrilobite",
        "ccfLevel": 9,
        "title": "\u3010\u5fae\u7b11\u3011"
    },
    {
        "content": "### Preface\n\n\u8fd9\u9053\u9898\u7684trick\u5982\u679c\u8981\u6211\u81ea\u5df1\u60f3\uff0c\u6211\u4e00\u5b9a\u60f3\u4e0d\u5230\u3002\n\n### Description\n\n\u4e00\u5f00\u59cb\u4e3a $ 1,2,3..n $ \u7684\u6392\u5217\u6709 $ m $ \u7684\u53d8\u5316\uff0c\u6bcf\u6b21\u53d8\u5316\u628a $ a_i $ \u653e\u5230\u6392\u5217\u7684\u6700\u524d\u9762\uff0c\u7136\u540e\u95ee\u4f60\u6bcf\u4e2a\u6570\u80fd\u8fbe\u5230\u7684\u6700\u524d\u9762\u7684\u4f4d\u7f6e\u548c\u6700\u540e\u9762\u7684\u4f4d\u7f6e\u3002\n\n### Method\n\n#### \u6700\u524d\u9762\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u5982\u679c\u4e00\u4e2a $ i $ \u5728 $ m $ \u4e2a\u6570\u51fa\u73b0\u8fc7\uff0c\u90a3\u4e48\u4ed6\u5c31\u662f $ 1 $ \u56e0\u4e3a\u4ed6\u5230\u8fbe\u8fc7 $ 1 $\uff0c\u5426\u5219\u662f $ i $\uff0c\u56e0\u4e3a\u4ed6\u53ea\u4f1a\u5f80\u540e\uff0c\u4e0d\u4f1a\u5f80\u524d\uff0c\u6240\u4ee5\u6700\u5c0f\u662f $ i $\uff0c\u5c31\u662f\u4e00\u5f00\u59cb\u7684\u4f4d\u7f6e\u3002\n\n#### \u6700\u540e\u9762\n\n\u8fd9\u4e2a\u6bd4\u8f83\u96be\u505a\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u95ee\u9898\u8fdb\u884c\u8f6c\u5316\uff0c\u5982\u679c\u4e00\u4e2a\u6570\u5728 $ m $ \u4e2a\u6570\u4e2d\u51fa\u73b0\u8fc7\uff0c\u90a3\u4e48\u5c31\u5224\u65ad\u76f8\u90bb\u4e24\u4e2a $ a_i $ \u4e2d\u6709\u591a\u5c11\u4e2a\u4e0d\u540c\u5c31\u53ef\u4ee5\u4e86\uff0c\u56e0\u4e3a\u5982\u679c\u6709\u4e00\u4e2a\u4e0d\u540c\u7684\uff0c\u90a3\u4e48\u4ed6\u4e00\u5b9a\u662f\u5728 $ a_i $ \u7684\u540e\u9762\uff0c\u56e0\u4e3a $ a_i $ \u4e00\u5f00\u59cb\u662f\u5728\u6700\u524d\u9762\u7684\uff0c\u5982\u679c\u6709\u4e0d\u540c\u7684\u90a3\u4e48\u4e00\u5b9a\u5728\u4ed6\u7684\u540e\u9762\uff0c\u5982\u679c\u6709\u76f8\u540c\u7684\uff0c\u90a3\u4e48\u56e0\u4e3a\u4e4b\u524d\u5df2\u7ecf\u79fb\u5230 $ a_i $\u7684\u524d\u9762\uff0c\u6240\u4ee5\u4e0d\u4f1a\u9020\u6210\u5f71\u54cd\uff0c\u5f53\u7136\u8fd8\u8981\u5224\u65ad\u6700\u540e\u4e00\u4e2a\u5bf9\u4e8e\u4e00\u4e2a $ i $\uff0c\u4ed6\u5728 $ m $ \u4e2d\u51fa\u73b0\u7684\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u5230 $ m $ \u7684\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u6240\u51fa\u73b0\u7684\u4e0d\u540c\u7684\u6570\u7684\u6570\u91cf\u3002\u4f46\u662f\u73b0\u5728\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u8fd9\u4e2a $ i $ \u5728 $ m $ \u4e2d\u51fa\u73b0\u524d\u7684\u64cd\u4f5c\u600e\u4e48\u529e\u5462\uff0c\u8fd9\u4e2a\u5c31\u662f\u6211\u60f3\u4e0d\u5230\u7684trick\uff0c\u6211\u4eec\u53ef\u4ee5\u4e00\u5f00\u59cb\u7684\u6392\u5217\u662f\u505a\u4ece $ n $ \u5f00\u59cb\u5230 $ 1 $ \u4e00\u6b21\u63d2\u5165\uff0c\u8fd9\u6837\u5b50\u5f62\u6210\u7684\u6392\u5217\u548c $ 1,2,3 \\cdot \\cdot \\cdot n $ \u662f\u7b49\u4ef7\u7684\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u505a\u4e86\uff0c\u592a\u9ad8\u4e86\u3002\n\n#### \u5982\u4f55\u5224\u65ad\u533a\u95f4\u5185\u6709\u51e0\u4e2a\u4e0d\u540c\u7684\u6570\n\n\u8be6\u89c1HH\u7684\u9879\u94fe\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\uff08\u56e0\u4e3a\u662f\u6a21\u677f\u5440\uff09\u3002\n\n### Code\n\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read()\t\t\t\n{\n  int x=0,f=1;char ch=getchar();\n  while(!isdigit(ch)&&ch!='-')ch=getchar();\n  if(ch=='-')f=-1,ch=getchar();\n  while(isdigit(ch))x=(x<<1)+(x<<3)+ch-'0',ch=getchar();\n  return x*f;\n}\nstruct hxz{\n\tint l,r,id;\n};\nhxz b[2000000];\nint f[1001000],apr[2000000],e[2000000],a[2000000],c[2000000],exist[2000000];\nint x,mm,n,m,i,j,ans,lft;\nint lowbit(int x)\n{\n\treturn x & -x;\n}\nbool cmp(hxz a,hxz b)\n{\n\treturn a.r<b.r;\n}\nvoid add(int x,int y)\n{\n\tfor (;x<=m;x+=lowbit(x))\n\t    e[x]+=y;\n}\nint query(int x)\n{\n\tint ans=0;\n\tfor (;x;x-=lowbit(x))\n\t    ans+=e[x];\n\treturn ans;\n}\nint main()\n{\n\tn=read();mm=read();\n\tfor (i=n;i>=1;i--) apr[i]=n-i+1,a[n-i+1]=i;\n\tfor (i=1;i<=mm;i++)\n\t    {\n\t    \tx=read();a[n+i]=x;f[x]=1;\n\t    \tm++;b[m].l=apr[x];b[m].r=n+i-1;b[m].id=x;apr[x]=n+i;\n\t\t}\n\tfor (i=1;i<=n;i++)\n\t     {\n\t     \tm++;b[m].l=apr[i];b[m].r=mm+n;b[m].id=i;\n\t\t }\n\tsort(b+1,b+m+1,cmp);\n\tlft=1;\n\tfor (i=1;i<=m;i++)\n\t    {\n\t    \tfor (j=lft;j<=b[i].r;j++)\n\t    \t    {\n\t    \t    \tif (exist[a[j]]!=0) add(exist[a[j]],-1);\n\t    \t    \texist[a[j]]=j;\n\t    \t    \tadd(exist[a[j]],1);\n\t\t\t\t}\n\t\t\tlft=b[i].r;\n\t\t\tc[b[i].id]=max(c[b[i].id],query(b[i].r)-query(b[i].l-1));\n\t\t}\n\tfor (i=1;i<=n;i++) c[i]=max(c[i],i);\n\tfor (i=1;i<=n;i++) if (f[i]==0) f[i]=i;\n\tfor (i=1;i<=n;i++)\n\t  printf(\"%d %d\\n\",f[i],c[i]);\n\treturn 0;\n}\n```",
        "postTime": 1626258491,
        "uid": 508480,
        "name": "Albedo",
        "ccfLevel": 0,
        "title": "CF1288E"
    },
    {
        "content": "## CF1288E Messenger Simulator\n\n### \u9898\u610f\n\n\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u597d\u53cb\u5217\u8868\uff0c\u81ea\u4e0a\u800c\u4e0b\u4f9d\u6b21\u662f $1\u223cn$\uff0c\u4f60\u4f9d\u6b21\u6536\u5230\u4e86 $m$ \u6761\u6d88\u606f\uff0c\u7b2c $i$ \u6761\u6d88\u606f\u662f $a_i$ \u53d1\u6765\u7684\uff0c\u8fd9\u65f6 $a_i$ \u4f1a\u8df3\u5230\u4f1a\u8bdd\u5217\u8868\u7684\u6700\u4e0a\u9762\uff0c\u5176\u5b83\u7684\u6309\u539f\u987a\u5e8f\u987a\u5ef6\uff0c\u6c42 $1\u223cn$ \u6bcf\u4e2a\u597d\u53cb\u6700\u9760\u4e0a\u7684\u4f4d\u7f6e\u548c\u6700\u9760\u4e0b\u7684\u4f4d\u7f6e\u3002\n\n~~\u7528\u8fc7\u624b\u673a\u5427~~\n\n### \u601d\u8def\n\n\u6700\u9760\u4e0a\u7684\u4f4d\u7f6e\u5982\u679c\u4e0d\u4f1a\u8bf7\u73b0\u5728\u505c\u6b62\u9605\u8bfb\uff08\u5fae\u7b11\uff09\n\n\u5148\u4e0d\u8003\u8651\u539f\u5e8f\u5217\uff0c\u5c31\u8003\u8651\u76f8\u540c\u597d\u53cb\u7684\u76f8\u90bb\u4e24\u6b21\u6d88\u606f\uff0c\u4f1a\u53d1\u73b0\u65f6\u95f4\u6bb5\u5185\u8be5\u597d\u53cb\u6700\u4e0b\u7684\u4f4d\u7f6e\u5c31\u662f\u533a\u95f4\u5185**\u4e0d\u540c\u6570\u5b57\u7684\u6570\u76ee+1**\u3002\n\n\u60f3\u4ebf\u60f3\uff0c\u4e3a\u4ec0\u4e48\uff1f\n\n\u60f3\u901a\u4e86\u7684\u8bdd\uff0c\u8003\u8651\u52a0\u4e0a\u539f\u5e8f\u5217\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u5c06\u7a7a\u5217\u8868**\u4ecen\u52301\u4f9d\u6b21\u63d2\u5165\u5217\u8868**\uff0c\u4e8e\u662f\u5c31\u53ef\u4ee5\u8f6c\u5316\u6210\u6211\u4eec\u521a\u624d\u7684\u95ee\u9898\uff0c\u5373\u6c42\u4e24\u4e2a\u76f8\u90bb\u7684\u76f8\u540c\u597d\u53cb\u533a\u95f4\u7684\u4e0d\u540c\u6570\u5b57\u6570\u76ee+1\u53d6\u6700\u5927\u503c\u3002\n\n\u60f3\u4ebf\u60f3\uff0c\u4e3a\u4ec0\u4e48\uff1f\n\n\u4e8e\u662f\u95ee\u9898\u8f6c\u5316\u3002\u5982\u4f55\u5feb\u901f\u6c42\u7ed9\u5b9a\u591a\u4e2a\u533a\u95f4\u7684\u533a\u95f4\u5185\u4e0d\u540c\u6570\u5b57\u6570\u76ee\uff1f\n\n\u8fd9\u91cc\u6211\u7528\u7684\u65b9\u6cd5\u662f\u6811\u72b6\u6570\u7ec4\uff0c\u5177\u4f53\u505a\u6cd5\u53ef\u53c2\u8003\u201cHH\u7684\u9879\u94fe\u201d\u4e00\u9898\u3002\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002\n\n### \u5b9e\u73b0\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cctype>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\ninline int read(){\n\tint w=0,x=0;char c=getchar();\n\twhile(!isdigit(c))w|=c=='-',c=getchar();\n\twhile(isdigit(c))x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\treturn w?-x:x;\n}\nnamespace star\n{\n\tconst int maxn=3e5+10;\n\tint n,m,a[maxn<<1],tot,cur[maxn],nxt[maxn<<1],cnt,ans[maxn];\n\tbool mark[maxn];\n\tstruct seg{\n\t\tint l,r,id;\n\t\tinline bool operator < (const seg &zp) const{return l<zp.l;}\n\t}q[maxn<<1];\n\tstruct BIT{\n\t\tint c[maxn<<1];\n\t\tinline void insert(int x,int k){for(;x<=tot;x+=x&-x) c[x]+=k;}\n\t\tinline int query(int x){int ans=0;for(;x;x-=x&-x)ans+=c[x];return ans;}\n\t}S;\n\tinline void work(){\n\t\tn=read(),m=read();\n\t\tfor(int i=n;i;i--) a[++tot]=i,cur[tot]=n+m+1;\n\t\tfor(int i=1;i<=m;i++) a[++tot]=read();\n\t\tfor(int i=tot;i;i--){\n\t\t\tif(cur[a[i]]>i+1) q[++cnt]=(seg){i+1,cur[a[i]]-1,a[i]};\n\t\t\tnxt[i]=cur[a[i]];\n\t\t\tcur[a[i]]=i;\n\t\t}\n\t\tfor(int i=1;i<=tot;i++){\n\t\t\tif(!mark[a[i]]) S.insert(i,1);\n\t\t\tmark[a[i]]=1;\n\t\t}\n\t\tfor(int i=n+1;i<=tot;i++) mark[a[i]]=0;\n\t\tsort(q+1,q+1+cnt);\n\t\tfor(int i=1,now=1;i<=cnt;i++){\n\t\t\twhile(now<=tot and now<q[i].l) S.insert(now,-1),S.insert(nxt[now],1),now++;\n\t\t\tans[q[i].id]=max(ans[q[i].id],S.query(q[i].r)-S.query(q[i].l-1));\n\t\t}\n\t\tfor(int i=1;i<=n;i++)printf(\"%d %d\\n\",mark[i]?i:1,ans[i]+1);\n\t}\n}\nsigned main(){\n\tstar::work();\n\treturn 0;\n}\n```",
        "postTime": 1602734573,
        "uid": 280015,
        "name": "Star_Cried",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1288E \u3010Messenger Simulator\u3011"
    }
]