[
    {
        "content": "\u4e00\u9053\u6bd4\u8f83\u5999\u7684\u6570\u636e\u7ed3\u6784\u9898\u3002\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a\u53ef\u6301\u4e45\u5316 Trie \u6811\u3001\u542f\u53d1\u5f0f\u5408\u5e76\u3001\u5355\u8c03\u6808\u3002\n\n\u9996\u5148\u601d\u8003\u5982\u4f55\u89e3\u51b3 $\\max$\u3002\u5bf9\u4e8e\u6bcf\u4e2a $i$ \u6c42 $l_i$ \u548c $r_i$\uff0c\u4f7f\u5f97  $\\max(a_{l_i},a_{{l_i}+1},..., a_i,...,a_{{r_i}-1},a_{r_i})=a_i(i \\in [l_i,r_i])$\u3002$l_i$ \u548c $r_i$ \u53ef\u4ee5\u7528\u5355\u8c03\u6808\u6c42\u51fa\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u679a\u4e3e $i$\uff0c\u7136\u540e\u7b97\u51fa\u5f53 $a_i$ \u4e3a\u6b64\u65f6\u533a\u95f4\u6700\u5927\u503c\u65f6\uff0c$\\max(a_{l},a_{{l}+1},...,a_{{r}-1},a_{r}) \\oplus (a_{l}\\oplus a_{{l}+1}\\oplus ...\\oplus a_{{r}-1}\\oplus a_{r})$ \u7684\u6700\u5927\u503c\uff0c\u518d\u5bf9\u6240\u6709 $i$ \u7b97\u51fa\u7684\u503c\u53d6\u6700\u5927\u503c\u5373\u4e3a\u7b54\u6848\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a $i$\uff0c\u5176\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\u5206\u522b\u5728 $[l_i,i]$ \u548c $[i,r_i]$ \u4e4b\u95f4\uff0c\u601d\u8003\u5982\u4f55\u5728\u5c0f\u4e8e $O(\\sqrt n)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u627e\u5230\u4f7f\u5f97\u4e0a\u8ff0\u5f0f\u5b50\u6700\u5927\u7684\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\u3002\n\n\u5148\u8bbe $sum$ \u6570\u7ec4\u4e3a $a$ \u6570\u7ec4\u7684\u5f02\u6216\u524d\u7f00\u548c\u6570\u7ec4\uff0c\u90a3\u4e48\u539f\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42 $\\max_{i\\in [1,n],j \\in [l_i-1,i-1],k \\in [i,r_i]}(a_i\\oplus sum_j \\oplus sum_k)$\uff0c$a_i$ \u5df2\u77e5\u3002\n\n\u6211\u4eec\u77e5\u9053 Trie \u6811\u53ef\u4ee5\u89e3\u51b3 XOR Largest Pair \u95ee\u9898\uff0c\u4f46\u662f\u6b64\u65f6\u60f3\u8981\u5f97\u5230\u4e00\u4e2a\u53ea\u5305\u542b\u7279\u5b9a\u533a\u95f4\u5185\u7684\u5168\u90e8\u6570\u7684 Trie \u6811\u6765\u627e $sum_j$ \u548c $sum_k$\uff0c\u53ef\u4ee5\u4f7f\u7528\u53ef\u6301\u4e45\u5316 Trie \u6811\u3002\n\n\u4f46\u662f\u73b0\u5728\u6709\u4e24\u4e2a\u533a\u95f4\uff0c\u9700\u8981\u53d6\u4e24\u4e2a\u6570\uff0c\u65e0\u6cd5\u6c42 XOR Largest Pair\u3002\n\n\u8003\u8651\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u6bcf\u6b21\u679a\u4e3e\u4e24\u4e2a\u533a\u95f4\u4e2d\u8f83\u5c0f\u7684\u533a\u95f4\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5728\u8f83\u5927\u7684\u533a\u95f4\u91cc\u6c42 $a_i \\oplus sum_j$\uff08\u8fd9\u91cc\u7684 $j$ \u5728\u8f83\u5c0f\u7684\u533a\u95f4\u4e2d\uff09\u7684 XOR Largest Pair\uff0c\u6bcf\u6b21\u64cd\u4f5c\u76f8\u5f53\u4e8e\u662f\u5408\u5e76 $[l_i-1,i-1]$ \u548c $[i,r_i]$\uff0c\u6700\u591a\u5408\u5e76 $\\log n$ \u6b21\u3002\n\n\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n \\log n \\log V)$\u3002\n\n\u8fd9\u91cc\u6ce8\u610f $a_i$ \u6709\u53ef\u80fd\u76f8\u540c\uff0c\u6211\u4eec\u4ee5\u4e0b\u6807\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6bd4\u5927\u5c0f\uff0c\u90a3\u4e48\u5c31\u4e0d\u4f1a\u51fa\u73b0\u76f8\u540c\u7684\u60c5\u51b5\u3002\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u4e0d\u4f1a\u6709\u9519\u89e3\uff0c\u8bfb\u8005\u53ef\u4ee5\u9020\u4e00\u4e2a $a_i$ \u5168\u90e8\u4e00\u6837\u7684\u6570\u636e\u81ea\u884c\u601d\u8003\u3002\n\n[Code](https://codeforces.com/contest/1777/submission/190730078)\u3002 ",
        "postTime": 1674804839,
        "uid": 570066,
        "name": "Fatal_Cactus",
        "ccfLevel": 6,
        "title": "CF1777F Comfortably Numb \u9898\u89e3"
    },
    {
        "content": "**[\u3010\u539f\u9898\u94fe\u63a5\u3011](https://www.luogu.com.cn/problem/CF1777F)**\n\n## \u9898\u76ee\u5206\u6790\n\n\u9996\u5148\u628a\u5e8f\u5217\u505a\u4e00\u904d\u524d\u7f00\u5f02\u6216\u548c\u5f97\u5230\u6570\u7ec4 $s$\uff0c\u628a\u8fde\u7eed\u7684\u5f02\u6216\u548c\u53d8\u6210\u4e24\u4e2a\u6570\u5f02\u6216\u548c\u3002\u56e0\u4e3a\u5f0f\u5b50\u91cc\u6709\u4e2a\u6700\u5927\u503c\uff0c\u5bf9\u539f\u5e8f\u5217\u5efa\u7b1b\u5361\u5c14\u6811\uff0c\u7edf\u8ba1\u56fa\u5b9a\u6700\u5927\u503c\u7684\u7b54\u6848\u3002\n\n\u8003\u8651\u56fa\u5b9a\u6700\u5927\u503c $a_u$\uff0c\u5de6\u53f3\u513f\u5b50\u5206\u522b\u4e3a $lc,rc$\uff0c$u$ \u5b50\u6811\u5bf9\u5e94\u5e8f\u5217\u4e0a\u7684\u533a\u95f4\u4e3a $[L,R]$\u3002\u90a3\u4e48\u6700\u5927\u503c\u4e3a $a_u$ \u7684\u533a\u95f4\u5c31\u662f\u5de6\u7aef\u70b9\u5728 $[L,u]$ \u91cc\uff0c\u53f3\u7aef\u70b9\u5728 $[u,R]$ \u91cc\u7684\u533a\u95f4\u3002\u7b26\u5408\u8fd9\u4e9b\u6761\u4ef6\u7684\u533a\u95f4\u7684\u533a\u95f4\u5f02\u6216\u548c\uff0c\u76f8\u5f53\u4e8e\u5728 $[L-1,u-1]$ \u5185\u9009\u4e00\u4e2a $x$\uff0c$[u,R]$ \u5185\u9009\u4e00\u4e2a $y$ \u5f97\u5230\u7684 $s_x\\oplus s_y$\u3002\n\n\u8fd9\u4e2a\u95ee\u9898\u6709\u4e00\u4e2a\u6bd4\u8f83\u5957\u8def\u7684\u89e3\u51b3\u529e\u6cd5\uff1a\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9 $v$\uff08\u5bf9\u5e94\u5e8f\u5217\u7684\u533a\u95f4 $[l,r]$\uff09 \uff0c\u7ef4\u62a4\u4e00\u4e2a $\\text{01-Trie}$\uff0c\u50a8\u5b58 $i\\in[l-1,r]$ \u7684 $s_i$\u3002\u7ef4\u62a4\u65b9\u5f0f\u662f\u76f4\u63a5\u628a\u5de6\u53f3\u513f\u5b50\u7684 $\\text{Trie}$ \u5408\u5e76\uff0c\u518d\u52a0\u4e0a\u81ea\u5df1\u3002\n\n\u7136\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u5de6\u513f\u5b50\u7684 $s_i$\uff0c\u5728\u53f3\u513f\u5b50\u7684 $\\text{Trie}$ \u4e0a\u67e5\u8be2\uff0c\u4e5f\u5c31\u662f\u6c42 $\\max_{u\\le j\\le R}\\{a_u\\oplus s_i\\oplus s_j\\}$\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u7ecf\u5178\u95ee\u9898\u4e86\u3002\u7136\u800c\u8fd9\u4e48\u505a\u679a\u4e3e\u91cf\u53ef\u4ee5\u8fbe\u5230 $O(n^2)$\u3002\u4f46\u662f\u53ea\u9700\u628a\u679a\u4e3e\u5de6\u513f\u5b50\u7684 $s_i$ \u6539\u6210\u679a\u4e3e $siz$ \u8f83\u5c0f\u7684\u513f\u5b50\u7684 $s_i$\uff0c\u5c31\u53ef\u4ee5\u628a\u679a\u4e3e\u91cf\u4f18\u5316\u5230 $O(n\\log n)$\uff0c\u590d\u6742\u5ea6\u5206\u6790\u65b9\u5f0f\u548c\u542f\u53d1\u5f0f\u5408\u5e76\u4e00\u6837\u3002\n\n\u603b\u590d\u6742\u5ea6 $O(n\\log^2n)$\u3002\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n// \u5feb\u8bfb\n\nusing LL=long long;\nusing LD=long double;\nusing UI=unsigned int;\nusing ULL=unsigned long long;\n\nint T,n,ans,a[200005],sum[200005],lc[200005],rc[200005];\nint top,st[200005];\nvoid build()\n{\n\tint k=top=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tk=top;\n\t\twhile(k && a[st[k]]<a[i]) k--;\n\t\tif(k) rc[st[k]]=i;\n\t\tif(k<top) lc[i]=st[k+1];\n\t\tst[top=++k]=i;\n\t}\n}\nstruct TrieNode{ int ch[2]; }t[6000005];\nint cnt,rt[200005];\nvoid insert(int x,int &r)\n{\n\tif(!r) r=++cnt;\n\tfor(int i=30,u=r;i>=0;i--)\n\t{\n\t\tbool v=(x>>i)&1;\n\t\tif(!t[u].ch[v])\n\t\t\tt[u].ch[v]=++cnt;\n\t\tu=t[u].ch[v];\n\t}\n}\nint merge(int x,int y)\n{\n\tif(!x || !y) return x|y;\n\tt[x].ch[0]=merge(t[x].ch[0],t[y].ch[0]);\n\tt[x].ch[1]=merge(t[x].ch[1],t[y].ch[1]);\n\treturn x;\n}\nint query(int x,int &r)\n{\n\tif(!r) return x;\n\tint res=0;\n\tfor(int i=30,u=r;i>=0;i--)\n\t{\n\t\tbool v=(x>>i)&1;\n\t\tres<<=1;\n\t\tif(t[u].ch[v^1]) u=t[u].ch[v^1],res++;\n\t\telse u=t[u].ch[v^0];\n\t}\n\treturn res;\n}\nint siz[200005],L[200005],R[200005];\nvoid dfs(int u)\n{\n\tif(!u) return;\n\tdfs(lc[u]),dfs(rc[u]);\n\tint vl=lc[u],vr=rc[u];\n\tsiz[u]=siz[vl]+siz[vr]+1,L[u]=R[u]=u;\n\tif(vl) L[u]=L[vl];\n\tif(vr) R[u]=R[vr];\n\tif(siz[vl]>siz[vr]) swap(vl,vr);\n\tif(vl) for(int i=L[vl]-1;i<=R[vl];i++) ans=max(ans,query(a[u]^sum[i],rt[vr]));\n\telse if(vr) ans=max(ans,query(a[u]^(vr==lc[u]?sum[u]:sum[u-1]),rt[vr]));\n\trt[u]=merge(rt[lc[u]],rt[rc[u]]);\n\tinsert(sum[u],rt[u]),insert(sum[u-1],rt[u]);\n}\nint main()\n{\n\tqin>>T;\n\twhile(T--)\n\t{\n\t\tqin>>n;\n\t\tfor(int i=1;i<=n;i++) qin>>a[i],sum[i]=sum[i-1]^a[i];\n\t\tans=0,build(),dfs(st[1]);\n\t\tqout.writeln(ans);\n\t\tfor(int i=1;i<=n;i++) lc[i]=rc[i]=0,rt[i]=0;\n\t\tfor(int i=1;i<=cnt;i++) t[i].ch[0]=t[i].ch[1]=0;\n\t\tcnt=0;\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1674460689,
        "uid": 279800,
        "name": "ExplodingKonjac",
        "ccfLevel": 7,
        "title": "\u3010\u9898\u89e3\u3011CF1777F Comfortably Numb"
    },
    {
        "content": "# CF1777F \u9898\u89e3\n\n\n\n## \u601d\u8def\u5206\u6790\n\n\u8003\u8651\u5efa\u7acb\u7b1b\u5361\u5c14\u6811\uff0c\u5f97\u5230\u6bcf\u4e2a $a_i$ \u4f5c\u4e3a\u533a\u95f4\u6700\u5927\u503c\u65f6\uff0c\u533a\u95f4\u5de6\u53f3\u7aef\u70b9\u7684\u8303\u56f4\u3002\n\n\u6211\u4eec\u7684\u601d\u8def\u5c31\u662f\u679a\u4e3e\u5176\u4e2d\u4e00\u4e2a\u7aef\u70b9\uff0c\u7528 01-Trie \u7ef4\u62a4\u5f02\u6216\u524d\u7f00\u548c\u6c42\u89e3\uff0c\u8bb0 $sum_i=\\oplus_{j=1}^i a_j$\uff0c\u5373\u5f02\u6216\u610f\u4e49\u4e0b\u7684\u524d\u7f00\u548c\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u5047\u8bbe\u533a\u95f4\u4e3a $[l,r]$\uff0c\u6700\u5927\u503c\u5728 $x$ \u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u5206\u7c7b\u8ba8\u8bba\u679a\u4e3e\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u8fd8\u662f\u53f3\u7aef\u70b9\uff1a\n\n- \u82e5 $x-l+1\\le r-x+1$\uff0c\u679a\u4e3e\u5de6\u7aef\u70b9 $i$\uff0c\u7b49\u4ef7\u4e8e\u5728 $sum_x\\sim sum_r$ \u4e2d\u627e\u5230\u548c $a_x\\oplus sum_{i-1}$ \u5f02\u6216\u6700\u5927\u7684\u3002\n- \u82e5 $x-l+1>r-x+1$\uff0c\u679a\u4e3e\u53f3\u7aef\u70b9 $i$\uff0c\u7b49\u4ef7\u4e8e\u5728 $sum_{l-1}\\sim sum_{x-1}$ \u4e2d\u627e\u5230\u548c $a_x\\oplus sum_i$ \u5f02\u6216\u6700\u5927\u7684\u3002\n\n\u6ce8\u610f\u5230\u8fd9\u4e24\u4e2a\u95ee\u9898\u5c31\u662f\u53ef\u6301\u4e45\u5316 01-Trie \u7684\u6a21\u677f\uff0c\u56e0\u6b64\u7528\u53ef\u6301\u4e45\u5316 01-Trie \u56de\u7b54\u8fd9\u4e9b\u95ee\u9898\u5373\u53ef\u3002\n\n\u5728\u7b1b\u5361\u5c14\u6811\u4e0a\uff0c\u6211\u4eec\u6bcf\u6b21\u679a\u4e3e\u5176\u975e\u91cd\u513f\u5b50\u7684\u5168\u90e8\u5b50\u6811\uff0c\u56e0\u6b64\u6bcf\u4e2a\u70b9 $i$ \u88ab\u679a\u4e3e\u7684\u6b21\u6570\u7b49\u4ef7\u4e8e\u5176\u5230\u6839\u7684\u8f7b\u8fb9\u6570\u91cf\uff0c\u7531\u4e8e\u6bcf\u6b21\u7ecf\u8fc7\u4e00\u6761\u8f7b\u8fb9\uff0c\u5176\u6240\u5728\u5b50\u6811\u5927\u5c0f\u81f3\u5c11 $\\times 2$\uff0c\u56e0\u6b64\u6bcf\u4e2a\u70b9\u81f3\u591a\u88ab\u679a\u4e3e $\\log_2 n$ \u6b21\uff08\u8fd9\u90e8\u5206\u7684\u590d\u6742\u5ea6\u5206\u6790\u548c DSU on Tree \u662f\u76f8\u540c\u7684\uff09\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(n\\log n\\log w)$\uff0c$w$ \u4e3a $\\{a_i\\}$ \u7684\u503c\u57df\u3002\n\n## \u4ee3\u7801\u5448\u73b0\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN=2e5+1;\nstruct node {\n\tint son[2],cnt;\n\tnode() { son[0]=son[1]=0,cnt=0; }\n\tinline int& operator [](const int &i) { return son[i]; }\n}\ttr[MAXN*35];\nint siz;\ninline int bit(int x) { return 1<<x; }\ninline int dig(int x,int d) { return (x>>d)&1; }\ninline void insert(int x,int d,int pre,int now) {\n\tif(d<0) return ;\n\tint c=dig(x,d);\n\ttr[now][c^1]=tr[pre][c^1];\n\ttr[now][c]=++siz;\n\ttr[tr[now][c]].cnt=tr[tr[pre][c]].cnt+1;\n\tinsert(x,d-1,tr[pre][c],tr[now][c]);\n}\ninline int query(int x,int d,int l,int r) {\n\tif(d<0) return 0;\n\tint c=dig(x,d);\n\tif(tr[tr[r][c^1]].cnt-tr[tr[l][c^1]].cnt>0) {\n\t\treturn (1<<d)|query(x,d-1,tr[l][c^1],tr[r][c^1]);\n\t}\n\treturn query(x,d-1,tr[l][c],tr[r][c]);\n}\nint a[MAXN],sum[MAXN],root[MAXN],f[MAXN][20];\ninline int pos(int l,int r) {\n\tint k=__lg(r-l+1);\n\treturn (a[f[l][k]]>a[f[r-bit(k)+1][k]])?f[l][k]:f[r-bit(k)+1][k];\n}\ninline int dfs(int l,int r) {\n\tif(l>=r) return 0;\n\tint mid=pos(l,r);\n\tint ans=max(dfs(l,mid-1),dfs(mid+1,r));\n\tif((r-mid+1)<(mid-l+1)) {\n\t\tfor(int i=mid;i<=r;++i) {\n\t\t\tans=max(ans,query(sum[i]^a[mid],31,(l==1)?0:root[l-2],root[mid-1]));\n\t\t}\n\t} else {\n\t\tfor(int i=l;i<=mid;++i) {\n\t\t\tans=max(ans,query(sum[i-1]^a[mid],31,root[mid-1],root[r]));\n\t\t}\n\t}\n\treturn ans;\n}\ninline void solve() {\n\tfor(int i=0;i<=siz;++i) tr[i]=node();\n\tsiz=0;\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i) scanf(\"%d\",&a[i]),sum[i]=sum[i-1]^a[i];\n\tfor(int i=0;i<=n;++i) {\n\t\troot[i]=++siz;\n\t\tinsert(sum[i],31,((i==0)?0:root[i-1]),root[i]);\n\t}\n\tfor(int i=1;i<=n;++i) f[i][0]=i;\n\tfor(int k=1;k<20;++k) {\n\t\tfor(int i=1;i+bit(k-1)<=n;++i) {\n\t\t\tf[i][k]=(a[f[i][k-1]]>a[f[i+bit(k-1)][k-1]])?f[i][k-1]:f[i+bit(k-1)][k-1];\n\t\t}\n\t}\n\tprintf(\"%d\\n\",dfs(1,n));\n}\nsigned main() {\n\tint T;\n\tscanf(\"%d\",&T);\n\twhile(T--) solve();\n\treturn 0;\n}\n```",
        "postTime": 1674445834,
        "uid": 539618,
        "name": "DaiRuiChen007",
        "ccfLevel": 6,
        "title": "CF1777F \u9898\u89e3"
    },
    {
        "content": "# [CF1777F Comfortably Numb](https://www.luogu.com.cn/problem/CF1777F)\n\n\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u601d\u60f3\u5f88\u7b80\u5355\uff0c\u4f46\u662f\u4e00\u65f6\u8f6c\u4e0d\u8fc7\u5f2f\u7684\u8bdd\u4f1a\u6709\u4e9b\u96be\u4ee5\u7406\u89e3\u3002\u8bb8\u591a\u9898\u89e3\u4e2d\u8fd9\u90e8\u5206\u8bb2\u7684\u6709\u70b9\u7b80\u7565\uff0c\u9042\u5728\u6b64\u8fdb\u884c\u8865\u5145\u4e0e\u4ee3\u7801\u6ce8\u89e3\u3002\n\n----------------\n\n\u770b\u5230\u8fd9\u7bc7\u9898\u89e3\u7684\u4f60\u6216\u8bb8\u4f1a\u6709\u4e00\u4e2a\u7591\u95ee\uff1a\u4e3a\u4f55\u8981\u4ece\u5c0f\u533a\u95f4\u5f00\u59cb\u679a\u4e3e\u5462\uff1f\n\n\u5e26\u7740\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u5148\u6765\u7814\u7a76\u4e00\u4e0b\u4e3a\u4f55\u53ea\u9700\u8981\u679a\u4e3e\u4e00\u4fa7\u7684\u533a\u95f4\u7aef\u70b9\u5c31\u80fd\u5f97\u5230\u6700\u4f18\u503c\u3002\n\n![image.png](https://s2.loli.net/2023/05/29/aX4bmkjdVBlzicu.png)\n\n\u56fe\u4e2d\uff0c$a[L]$ \u4e0e $a[R]$ \u5206\u522b\u662f\u4e24\u4fa7\u7b2c\u4e00\u4e2a\u6bd4\u4e2d\u95f4\u6570\uff08\u8bb0\u4f5c $a[i]$ \uff09\u8981\u5927\u7684\u6570\n\n\u5219 $a[i]$ \u4f5c\u4e3a\u6700\u5927\u6570\uff08\u5373\u9898\u76ee\u4e2d\u7684 $\\max\\{a[l \\cdots r]\\}$ \uff09\u7684\u6700\u5927\u533a\u95f4\u4e3a $[L+1,R-1]$\n\n\u6211\u4eec\u77e5\u9053\uff0c\u7528\u53ef\u6301\u4e45\u5316 0-1trie \u53ef\u4ee5\u5728\u63a5\u8fd1 $O(1)$ \u7684\u65f6\u95f4\u5185\u83b7\u5f97\u56fa\u5b9a\u4e00\u7aef\u70b9\u533a\u95f4\u7684\u6700\u4f18\u503c\uff08 **\u56fa\u5b9a\u4e00\u7aef\u70b9\uff1a** \u6307\u533a\u95f4 $L$ \u6216 $R$ \u4efb\u610f\u4e00\u7aef\u786e\u5b9a\uff0c\u800c\u53e6\u4e00\u7aef\u4e0d\u786e\u5b9a\u4f46\u6709\u8303\u56f4\u9650\u5b9a \uff09\n\n\u4f46\u662f\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u7684 $L$ \u548c $R$ \u90fd\u662f\u4e0d\u786e\u5b9a\u7684\n\n\u8fd9\u65f6\u5019\u6211\u4eec\u60f3\u5230\uff0c\u53ef\u4ee5\u5229\u7528\u53ef\u6301\u4e45\u5316 01trie \u7684 $O(1)$ \u6027\u8d28\n\n\u53bb\u679a\u4e3e\u4e00\u4e2a\u533a\u95f4\u5185\u7684\u7aef\u70b9\uff0c\u5e76\u9650\u5b9a\u597d\u53e6\u4e00\u4e2a\u533a\u95f4\u7aef\u70b9\u7684\u8303\u56f4\uff0c\u76f4\u63a5\u5f97\u5230\u8fd9\u6b21\u679a\u4e3e\u7684\u6700\u4f18\u503c\n\n\u5728\u6bcf\u6b21\u679a\u4e3e\u4e2d\uff0c\u4e00\u7aef\u7aef\u70b9\u53ef\u770b\u505a\u786e\u5b9a\uff0c\u53e6\u4e00\u7aef\u7684\u7aef\u70b9\u5c31\u4ea4\u7ed9 trie \u53bb\u627e\uff0c\u4e0d\u5173\u6211\u4eec\u7684\u4e8b\u4e86\u3002\n\n\u6700\u540e\u7edf\u8ba1\u51fa\u6bcf\u4e2a $a[i]$ \u7684\u6240\u6709\u679a\u4e3e\u7684\u6700\u5927\u503c\uff0c\u5373\u662f\u6211\u4eec\u7684\u7b54\u6848\u3002\n\n---------------\n\n\u518d\u56de\u5230\u4e0a\u9762\u7684\u95ee\u9898\uff1a\u4e3a\u4f55\u8981\u4ece\u5c0f\u533a\u95f4\u5f00\u59cb\u679a\u4e3e\uff1f\n\n\u660e\u767d\u539f\u7406\u53ca\u6b63\u786e\u6027\u540e\uff0c\u8fd9\u4e2a\u95ee\u9898\u5c31\u5f88\u597d\u89e3\u7b54\u4e86\uff1a\n\n\u5176\u5b9e\u4ece\u5927\u5c0f\u533a\u95f4\u679a\u4e3e\u90fd\u662f\u4e00\u6837\u7684\uff0c\u53ea\u4e0d\u8fc7\u5c0f\u533a\u95f4\u679a\u4e3e\u6b21\u6570\u5c11\uff0c\u7eaf\u7cb9\u662f\u4e00\u79cd\u4f18\u5316\u3002\n\n\u4e0b\u9762\u7ed9\u51fa\u4ee3\u7801\u6ce8\u89e3\uff1a\n\n```cpp\n#include<iostream>\n#include<stdio.h>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#define Debug_Mode true\n#define bage(abcd) if(Debug_Mode) cout<<\"\\nval:\"<<abcd<<endl\n#define bout(abcd) if(Debug_Mode) cout<<abcd<<\" \"\n#define loop(ii,xx,yy) for(ll ii=xx;ii<=yy;ii++)\n#define doop(ii,xx,yy) for(ll ii=xx;ii>=yy;ii--)\n#define Max(x,y) ((x)>(y)?(x):(y))\n#define Min(x,y) ((x)<(y)?(x):(y))\n#define int long long\ntypedef long long ll;\nconst int Mod=998244353;\nconst long long INF = 0x3f3f3f3f;\nconst long long N=1e6+5;\nconst long long M=1e5+5;\nusing namespace std;\nll read(){ll x=0,y=1;char ch=getchar();while(ch<'0'||ch>'9'){if(ch=='-') y=-1;ch=getchar();}while(ch>='0'&&ch<='9'){x=x*10+(ch^48);\tch=getchar();}return x*y;}\nstruct node{\n\tint cnt;\n\tint nxt[2];\n}trie[31*N];\nint a[N],b[N],T,n;\nint rt[N];\nint tot;\nvoid add(int ver,int id){\n\tif(ver==0){\n\t\trt[ver]=++tot;\n\t\tint now=rt[ver];\n\t\tint t;\n\t\tdoop(i,31,0){\n\t\t\tt=(b[id]>>i)&1;\n\t\t\tif(!trie[now].nxt[t]) trie[now].nxt[t]=++tot;\n\t\t\ttrie[now].cnt=1;\n\t\t\tnow=trie[now].nxt[t];\n\t\t}\n\t\ttrie[now].cnt=1;\n\t\treturn;\n\t}\n\trt[ver]=++tot;\n\tint now=rt[ver],lst=rt[ver-1];\n\tint t;\n\tdoop(i,31,0){\n\t\tt=(b[id]>>i)&1;\n\t\tif(!trie[now].nxt[t]) trie[now].nxt[t]=++tot;\n\t\ttrie[now].nxt[!t]=trie[lst].nxt[!t];\n\t\ttrie[now].cnt=trie[lst].cnt+1;\n\t\tlst=trie[lst].nxt[t];\n\t\tnow=trie[now].nxt[t];\n\t}\n\ttrie[now].cnt=trie[lst].cnt+1;\n}\nint query(int ver1,int ver2,int x){\n\tint n1=rt[ver1-1],n2=rt[ver2],t;\n\tint res=0;\n\tdoop(i,31,0){\n\t\tt=(x>>i)&1;\n\t\tif(trie[trie[n2].nxt[!t]].cnt-trie[trie[n1].nxt[!t]].cnt>0){\n\t\t\tres+=(1<<i);\n\t\t\tn2=trie[n2].nxt[!t];\n\t\t\tn1=trie[n1].nxt[!t];\n\t\t}else{\n\t\t\t\n\t\t\tn2=trie[n2].nxt[t];\n\t\t\tn1=trie[n1].nxt[t];\n\t\t}\n\t}\n\treturn res;\n}\nint stk[N],stp[N],top;\nint ans[N];\nvoid init(){\n\tloop(i,0,tot){\n\t\ttrie[i].cnt=0;\n\t\ttrie[i].nxt[0]=trie[i].nxt[1]=0;\n\t}\n\tloop(i,0,n+1) rt[i]=0;\n\ttop=0;\n\ttot=0;\n}\nint l[N],r[N];\nsigned main(){\n\t//\tscanf(\"%lld\",&T);\n\tT=read();\n\twhile(T--){\n\t\tint maxans=-1;\n\t\tinit();\n\t\tn=read();\n\t\tadd(1,0);\n\t\t/*\u7531\u4e8e\u524d\u7f00\u548c\u53ef\u80fd\u9700\u8981\u5f97\u5230\u7b2c\u4e00\u4e2a\u6570\u7684\u503c\uff0c\u8fd9\u91cc\u52a0\u5165\u4e00\u4e2a\u503c\u4e3a0\u7684\u8fb9\u754c*/\n\t\tloop(i,2,n+1){\n\t\t\ta[i]=read();\n\t\t\t\n\t\t\tb[i]=a[i];\n\t\t\tb[i]^=b[i-1];\n\t\t\t\n\t\t\tadd(i,i);\n\t\t}\n\t\t//\u6ce8\u610f\u6b64\u5904\u7248\u672c\u53f7\u6574\u4f53+1\n\t\t\n\t\ta[1]=a[n+2]=INF;\n\t\t/*\u4e24\u4e2a\u8fb9\u754c\u503c\uff0c\u7528\u4e8e\u8ba1\u7b97l,r\u6570\u7ec4*/\n\t\ttop=0;\n\t\t/*\u5355\u8c03\u6808\u627e\u5230\u6bcf\u4e2a\u6570\u5de6\u8fb9\u7b2c\u4e00\u4e2a\u5927\u4e8e\u5b83\u7684\u6570\uff08\u7684\u4f4d\u7f6e\uff09*/\n\t\tloop(i,1,n+2){\n\t\t\twhile(top&&stk[top]<=a[i]) top--;\n\t\t\tl[i]=stp[top];\n\t\t\tstk[++top]=a[i];\n\t\t\tstp[top]=i;\n\t\t}\n\t\ttop=0;\n\t\t/*\u4e3a\u9632\u6b62TLE\uff0c\u6b64\u5904\u89c4\u5219\u7a0d\u6709\u6539\u53d8\n\t\t \u662f\u627e\u5230\u6bcf\u4e2a\u6570\u53f3\u8fb9\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e\u5b83\u7684\u6570\uff08\u7684\u4f4d\u7f6e\uff09\n\t\t */\n\t\tdoop(i,n+2,1){\n\t\t\twhile(top&&stk[top]<a[i]) top--;\n\t\t\tr[i]=stp[top];\n\t\t\tstk[++top]=a[i];\n\t\t\tstp[top]=i;\n\t\t} \n\n\t\t//\u8bb0\u4f4f\uff01\u6574\u4f53+1\uff01\n\t\t//\u4f46\u662f\u7531\u4e8e\u8fb9\u754c\u503c\uff0c\u6bcf\u4e2a\u6570\u5b57\u4e5f\u5411\u524d\u632a\u4e86\u4e00\u4e2a\uff0c\u6240\u4ee5\u53ef\u4ee5\u8ba4\u4e3a\u4e8c\u8005\u5bf9\u9f50\u4e86\u3002\n\t\tloop(i,2,n+1){\n\t\t\t//\u5b9e\u9645\u6709\u7528\u7684\u503c\u662f 2 - (n+1)\n\t\t\t/*\n\t\t\t  l[i]\u662f\u5de6\u8fb9\u7b2c\u4e00\u4e2a\u5927\u4e8ea[i]\u7684\u6570\u7684\u4f4d\u7f6e\uff0c\u4e0d\u80fd\u53d6\u5230\n\t\t\t  \u6240\u4ee5\u5e94\u5f53+1\n\t\t\t  r[i]-1\u540c\u7406\n\t\t\t */\n\t\t\tif(i-l[i]-1+1<r[i]-1-i+1){\n\t\t\t\t/*\n\t\t\t\t  \u8fd9\u91cc\u4ee3\u8868\u5de6\u8fb9\u533a\u95f4\u6bd4\u53f3\u8fb9\u533a\u95f4\u5c0f\uff0c\u679a\u4e3e\u5de6\u8fb9\u7aef\u70b9\n\t\t\t\t */\n\t\t\t\tloop(j,l[i]+1,i){\n\t\t\t\t\t/*\n\t\t\t\t\t  \u6ce8\u610f\uff1a\u7531\u4e8e\u8ba1\u7b97\u524d\u7f00\u548c\u7684\u539f\u56e0\uff0c\u6211\u4eec\u5b9e\u9645\u4e0a\u627e\u7684\u662fb[j-1]\n\t\t\t\t\t */\n\t\t\t\t\tmaxans=Max(maxans,query(i,r[i]-1,b[j-1]^a[i]));\n\t\t\t\t\t//i - (r[i]-1)\u662f\u53f3\u7aef\u70b9\u9650\u5236\uff0c \u6b64\u5904\u4e00\u5b9a\u8981\u662fb[j-1]\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tloop(j,i,r[i]-1){\n\t\t\t\t\t//\u540c\u4e0a\uff0c\u6211\u4eec\u7684\u5de6\u7aef\u70b9\u9650\u5236\u4e3a(l[i]+1-1) - (i-1)\n\t\t\t\t\tmaxans=Max(maxans,query(l[i]+1-1,i-1,b[j]^a[i]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%lld\\n\",maxans);\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1685322202,
        "uid": 577631,
        "name": "totorocat",
        "ccfLevel": 4,
        "title": "CF1777F Comfortably Numb"
    },
    {
        "content": "### Door\n\n[\u6d1b\u8c37](https://www.luogu.com.cn/problem/CF1777F)\n\n[CF](https://codeforces.com/problemset/problem/1777/F)\n\n### Preparation\n\n+ \u53ef\u6301\u4e45\u5316\u5b57\u5178\u6811\n\n+ \u5355\u8c03\u6808\n\n### Analysis\n\n\u770b\u5230\u5f02\u6216\u548c\uff0c\u5148\u6c42\u4e00\u4e2a\u5f02\u6216\u524d\u7f00\u3002\n\n\u6211\u4eec\u7528\u5355\u8c03\u6808\u6c42\u51fa $a_i$ \u4f5c\u4e3a\u6700\u5927\u503c\u5411\u5de6\u6700\u957f\u7684\u5ef6\u4f38\u4f4d\u7f6e $L_i$ \u548c\u5411\u53f3\u6700\u957f\u7684\u5ef6\u4f38\u4f4d\u7f6e $R_i$\u3002\n\n\u6240\u4ee5\u5f53 $a_i$ \u4e3a\u6700\u5927\u503c\u65f6\uff0c\u7b54\u6848\u5c31\u662f $sum_l \\oplus sum_r \\oplus a_i$\uff0c\u5176\u4e2d $l \\in [L_{i-1},i-1] \\ r \\in [i,R_i]$\uff0c\u5728\u4e00\u4e2a\u533a\u95f4\u5185\u67e5\u8be2\uff0c\u53ef\u4ee5\u7528\u53ef\u6301\u4e45\u5316\u5b57\u5178\u6811\u6765\u7ef4\u62a4\u3002\n\n\u518d\u591a\u770b\u4e00\u773c\u5c31\u4f1a\u53d1\u73b0\uff0c\u8fd9\u6837\u4e00\u4e2a\u4e00\u4e2a\u67e5\u8be2\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u80fd\u4f1a\u7206\u70b8\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u518d\u5927\u533a\u95f4\u91cc\u4e00\u4e2a\u4e00\u4e2a\u67e5\u8be2\u5c0f\u533a\u95f4\uff0c\u5373\u542f\u53d1\u5f0f\u5408\u5e76\u3002\u8fd9\u662f\u7531\u4e8e\u8fd9\u4e2a\u533a\u95f4\u6bd4\u8f83\u7279\u6b8a\uff0c\u6211\u4eec\u5bf9\u5168\u5c40\u6700\u5927\u503c\u8fdb\u884c\u5206\u6cbb\uff0c\u53ef\u4ee5\u8bc1\u660e\u65f6\u95f4\u590d\u6742\u5ea6\u4ec5\u4e3a $O(n \\log{n} \\log{N})$\uff0c\u5176\u4e2d $N$ \u662f\u503c\u57df\u8303\u56f4\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u6240\u6709\u90fd\u662f\u76f8\u540c\u7684\u6570\u5b57\uff0c\u53ef\u80fd\u6bcf\u4e2a\u7684 $[L,R]$ \u90fd\u662f $[1,n]$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4f1a\u88ab\u5361\u3002\u6240\u4ee5\u9700\u8981\u7ed9\u6bcf\u4e2a\u6570\u5b57\u52a0\u4e00\u4e2a\u4e0d\u540c\u7684\u7b2c\u4e8c\u5173\u952e\u5b57\u3002\n\n### Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntemplate<typename T>inline void read(register T &x)\n{\n\tregister T p = 1,num = 0;\n\tchar c = getchar();\n\twhile(c < '0'||c > '9')\n\t{\n\t\tif(c == '-') p = -p;\n\t\tc = getchar();\n\t}\n\twhile('0' <= c&&c <= '9')\n\t{\n\t\tnum = (num<<3)+(num<<1)+(c^48);\n\t\tc = getchar();\n\t}\n\tx = p * num;\n}\ntemplate<typename T>inline void write(register T x)\n{\n\tif(x < 0) putchar('-'),x = -x;\n\tif(x > 9) write(x/10);\n\tputchar(x%10+48);\n}\n#define D(i,a,b) for(register int i=a;i>=b;--i)\n#define F(i,a,b) for(register int i=a;i<=b;++i)\n#define ll long long\n#define pii pair<int,int>\n#define N 200010\npii a[N];\nint t,n,rt[N],L[N],R[N];\nstack<int> s;\nstruct Trie\n{\n\tint son[N<<6][2],sum[N<<6],cnt;\n\tTrie()\n\t{\n\t\tcnt = 0;\n\t}\n\tinline void clear()\n\t{\n\t\tF(i,0,cnt) son[i][0] = son[i][1] = sum[i] = 0;\n\t\tcnt = 0;\n\t}\n\tint update(int u,int v,int x,int dep)\n\t{\n\t\tif(!u) u = ++cnt;\n\t\tsum[u] = sum[v] + 1;\n\t\tif(dep < 0) return u;\n\t\tint now = (x>>dep)&1;\n\t\tson[u][now] = update(son[u][now],son[v][now],x,dep-1);\t\n\t\tson[u][now^1] = son[v][now^1];\n\t\treturn u;\n\t} \n\tint query(int u,int v,int x,int dep)\n\t{\n\t\tif(dep < 0) return 0;\n\t\tint now = ((x>>dep)&1)^1;\n\t\tif(sum[son[v][now] - son[u][now]] > 0) return (1<<dep)+query(son[u][now],son[v][now],x,dep-1);\n\t\treturn query(son[u][now^1],son[v][now^1],x,dep-1);\n\t}\n}tree;\nint main()\n{\n\tread(t);\n\twhile(t--)\n\t{\n\t\tread(n);\n\t\tF(i,2,n+1) \n\t\t{\n\t\t\tread(a[i].first);\n\t\t\ta[i].second = i;\t\n\t\t}\n\t\ta[1] = a[n+2] = (pii){1e9,1e9};\n\t\twhile(s.size()) s.pop();\n\t\ts.push(1);\n\t\tF(i,2,n+1)\n\t\t{\n\t\t\twhile(a[s.top()] < a[i]) s.pop();\n\t\t\tL[i] = s.top() + 1;\n\t\t\ts.push(i);\n\t\t}\n\t\twhile(s.size()) s.pop();\n\t\ts.push(n+2);\n\t\tD(i,n+1,2)\n\t\t{\n\t\t\twhile(a[s.top()] < a[i]) s.pop();\n\t\t\tR[i] = s.top() - 1;\n\t\t\ts.push(i);\n\t\t}\n\t\ttree.clear();\n\t\ta[1] = a[n+2] = (pii){0,0};\n\t\tF(i,2,n+1) a[i].first ^= a[i-1].first;\n\t\tF(i,1,n+2) rt[i] = 0,rt[i] = tree.update(rt[i],rt[i-1],a[i].first,30);\n\t\tint ans = 0;\n\t\tF(i,2,n+1)\n\t\t{\n\t\t\tint len1 = i-L[i]+1,len2 = R[i]-i+1;\n\t\t\tif(len1 < len2)\n\t\t\t\tF(j,L[i]-1,i-1)\n\t\t\t\t\tans = max(ans,tree.query(rt[i-1],rt[R[i]],a[i].first^a[i-1].first^a[j].first,30));\n\t\t\telse \n\t\t\t\tF(j,i,R[i])\n\t\t\t\t\tans = max(ans,tree.query(rt[L[i]-2],rt[i-1],a[i].first^a[i-1].first^a[j].first,30));\n\t\t}\n\t\twrite(ans); \n\t\tputchar('\\n');\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1678775525,
        "uid": 197648,
        "name": "Wangxun",
        "ccfLevel": 5,
        "title": "CF1777F \u9898\u89e3"
    },
    {
        "content": "\u7eaf\u7eaf\u4fe1\u5fc3 DS \u9898\u3002\u6765\u4e2a\u5927\u5e38\u6570 $O(n \\log^2 n)$ \u505a\u6cd5\u3002  \n\n\u8003\u8651\u5206\u6cbb\uff0c\u8bbe\u5f53\u524d\u5904\u7406\u533a\u95f4 $[L,R]$\uff0c\u539f\u5e8f\u5217\u524d\u7f00\u5f02\u6216\u6570\u7ec4\u4e3a $pre$\uff0c\u5957\u8def\u9884\u5904\u7406\u5de6\u8fb9\u540e\u7f00 $\\max$ \u548c\u53f3\u8fb9\u524d\u7f00 $\\max$\uff0c\u5012\u5e8f\u679a\u4e3e\u5de6\u7aef\u70b9 $l \\in [L,mid]$\uff0c\u53cc\u6307\u9488\u7ef4\u62a4 $rig_r \\le lef_l$ \u7684\u6700\u8fdc $r$\uff0c\u90a3\u4e48\u5bf9\u4e8e $i \\in [mid+1,r]$ \u76f8\u5f53\u4e8e\u67e5\u8be2 $pre_i$ \u4e0e $pre_{l-1} \\oplus lef_l$ \u7684\u5f02\u6216\u6700\u5927\u503c\uff0c\u5168\u5c40\u5efa\u7acb\u4e00\u68f5\u53ef\u6301\u4e45\u5316 $\\text{0/1 Trie}$ \u5373\u53ef\uff1b$i \\in [r+1,R]$ \u90e8\u5206\u5219\u67e5\u8be2 $pre_i \\oplus rig_i$ \u548c $pre_{l-1}$ \u7684\u5f02\u6216\u6700\u5927\u503c\uff0c\u53ef\u4ee5\u6bcf\u5c42\u91cd\u6784\u53e6\u4e00\u68f5\u53ef\u6301\u4e45\u5316 $\\text{0/1 Trie}$\uff08\u5c01\u88c5\u4e00\u4e0b\uff0c\u7801\u91cf\u5c0f\uff09\uff1b\u4e5f\u53ef\u4ee5\u5728\u679a\u4e3e\u5de6\u7aef\u70b9\u7684\u65f6\u5019\u4ece $L$ \u5411 $mid$ \u626b\uff0c\u8fd9\u6837\u5bf9\u5e94\u7684 $r$ \u4e0d\u589e\uff0c\u626b\u5230\u5c31\u63d2\u5165\uff0c\u7528\u4e00\u68f5\u666e\u901a $\\text{0/1 Trie}$ \u5373\u53ef\uff08\u7a7a\u95f4\u5c0f\uff09\u3002  \n\n\u53ef\u6301\u4e45\u5316 $\\text{0/1 Trie}$ \u5e94\u8be5\u90fd\u4f1a\u5199\u5427\u3002\u8fd9\u91cc\u53ea\u653e\u5206\u6cbb\u7684\u4ee3\u7801\u3002  \n\n```cpp\ninline int Deal(int L,int R){\n\tif(L==R) return 0; int Mid=L+R>>1,res=B.tot=rig[Mid]=0;\n\tfor(int i=Mid+1;i<=R;++i) B.Ins(i-Mid-1,i-Mid,pre[i]^(rig[i]=max(rig[i-1],a[i])));\n\tfor(int l=Mid,r=Mid+1,now=a[l];l>=L;--l,now=max(now,a[l])){\n\t\twhile(r<=R&&rig[r]<=now) ++r; --r;\n\t\tres=max(res,A.Qry(Mid,r,pre[l-1]^now));\n\t\tres=max(res,B.Qry(r-Mid,R-Mid,pre[l-1]));\n\t} return max({res,Deal(L,Mid),Deal(Mid+1,R)});\n}\n```",
        "postTime": 1675144675,
        "uid": 597395,
        "name": "Pholsautte",
        "ccfLevel": 0,
        "title": "\u5e76\u4e14\u518d\u6ca1\u6709\u522b\u7684\u5f71\u5728\u9ed1\u6697\u91cc"
    }
]