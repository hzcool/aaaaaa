[
    {
        "content": "### \u9898\u610f\n\n\u5982\u679c\u4f60\u77e5\u9053\u5b57\u7b26\u4e32 $w$ \u548c\u6b63\u6574\u6570 $x$\uff0c\u90a3\u4e48\u4f60\u73c2\u4ee5\u7528\u4e00\u4e0b\u65b9\u5f0f\u6784\u9020\u5b57\u7b26\u4e32 $s$\uff1a\n\n- \u5982\u679c $w_{i-x}\\texttt{\u5b58\u5728\u4e14}=1$ \u6216 $w_{i+x}\\texttt{\u5b58\u5728\u4e14}=1$\uff0c\u90a3\u4e48 $s_i=1$\u3002\n- \u5426\u5219 $s_i=0$\u3002\n\n\u4f46\u662f\u4f60\u77e5\u9053 $x$ \u548c $s$ \uff0c\u8bd5\u6784\u9020 $w$\u3002\n\n### \u601d\u8def\n\n\u5982\u679c $s_i=0$\uff0c\u90a3\u4e48 $w_{i-x}$ \u548c $w_{i+x}$ \u90fd\u4e3a $0$\u3002$w$ \u4e2d\u7684\u5176\u4ed6\u4f4d\u7f6e\u90fd\u5199 $1$\uff0c\u56e0\u4e3a\u5199 $0$ \u4e0d\u4fdd\u8bc1 $s$ \u4e2d\u7684\u5176\u4ed6\u5730\u65b9\u4e00\u5b9a\u4e0d\u4f1a\u53d8\u6210 $0$\uff0c\u800c\u5199 $1$ \u73c2\u4ee5\u4fdd\u8bc1 $s$ \u4e2d\u7684\u5176\u4ed6\u5730\u65b9\u662f $1$\uff0c\u4e5f\u4e00\u5b9a\u4e0d\u4f1a\u5f71\u54cd\u5230 $s$ \u4e2d\u4e3a $0$ \u7684\u4f4d\u7f6e\u3002\n\n\u7136\u540e\u5982\u679c\u53d1\u73b0\u67d0\u4e2a $s_i=1$\uff0c\u4f46\u662f $w_{i-x}=0$ \u4e14 $w_{i+x}=0$\uff0c\u90a3\u4e48\u663e\u7136\u5b83\u4e0e\u4e00\u4e9b $s_i=0$ \u7684\u8981\u6c42\u51b2\u7a81\u4e86\uff0c\u90a3\u4e48\u65e0\u89e3\u3002\n\n### $code$\n\n```cpp\n#include<stdio.h>\nint t,n,x;char s[100001],w[100001];bool f;\nmain()\n{\n\tfor(scanf(\"%d\",&t);t--;)\n\t{\n\t\tscanf(\"%s%d\",s,&x);\n\t\tfor(n=0;s[n];++n);//strlen\n\t\tfor(register int i=0;i<n;++i)w[i]='1';/*\u521d\u59cb\u5316\u4e3a1*/w[n]=0;f=0;\n\t\tfor(register int i=0;i<n;++i)if(s[i]=='0')\n\t\t{\n\t\t\tif(i-x>=0)w[i-x]='0';//\u5b58\u5728\u5c31\u662f0\n\t\t\tif(i+x<n)w[i+x]='0';//\u5b58\u5728\u5c31\u662f0\n\t\t}\n\t\tfor(register int i=0;i<n;++i)\n\t\t\tif(s[i]=='1'&&(i-x<0||w[i-x]=='0')&&(i+x>=n||w[i+x]=='0')){f=1;break;}//\u77db\u76fe\uff0c\u65e0\u89e3\n\t\tif(f)puts(\"-1\");\n\t\telse printf(\"%s\\n\",w);\n\t}\n}\n```\n\n",
        "postTime": 1598540311,
        "uid": 90693,
        "name": "_\u2022\u0301\u3078\u2022\u0301\u256c_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1400C \u3010Binary String Reconstruction\u3011"
    },
    {
        "content": "\u9898\u76ee\u63cf\u8ff0\uff1a\n\n\u8003\u8651\u4ee5\u4e0b\u8fc7\u7a0b\u3002 \u60a8\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32 $w$ (\u6bcf\u4e2a\u5b57\u7b26\u4e3a $0$ \u6216 $1$) \u548c\u4e00\u4e2a\u6574\u6570 $x$\u3002\n\n\u65b0\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32 $s$ \u7684\u7b2c $i$ \u4e2a\u5b57\u7b26\u6309\u5982\u4e0b\u89c4\u5219\u6784\u9020\uff1a\n\n1. \u5982\u679c\u5b57\u7b26 $w_ {i-x}$ \u5b58\u5728\u4e14\u7b49\u4e8e $1$\uff0c\u5219 $s_i$ \u4e3a $1$. \n\n2. \u5982\u679c\u5b57\u7b26 $w_ {i+x}$ \u5b58\u5728\u4e14\u7b49\u4e8e $1$\uff0c\u5219 $s_i$ \u4e3a $1$.\n\n3. \u5982\u679c\u4e0a\u8ff0\u4e24\u4e2a\u6761\u4ef6\u5747\u4e3a\u5047\uff0c\u5219 $s_i$ \u662f $0$\u3002\n\n\u7ed9\u60a8\u6574\u6570 $x$ \u548c\u7ed3\u679c\u5b57\u7b26\u4e32 $s$\u3002 \u8981\u6c42\u91cd\u5efa\u539f\u59cb\u5b57\u7b26\u4e32 $w$\u3002 \n\n\u601d\u8def\uff1a\n\n$s_i = 0$ \u8bf4\u660e\u4e24\u8fb9\u90fd\u662f $0$ , \u90a3\u4e48\u6211\u4eec\u5148\u6784\u9020\u4e00\u4e2a\u5168\u662f $1$ \u7684\u5b57\u7b26\u4e32, \u7136\u540e\u626b\u4e00\u904d $s$\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $s_i=0$ , \u628a $w$ \u7684\u4e24\u8fb9\u8d4b\u503c\u4e3a $0$\n\n\u6ce8\u610f \uff1a \u524d\u63d0\u662f\u5de6\u53f3\u4e24\u8fb9\u8981\u90fd\u6709\uff0c\u9632\u6b62\u6570\u7ec4\u8d8a\u754c RE\u3002\n\n\u518d\u626b\u4e00\u904d $s$\uff0c\u770b\u770b\u6240\u6709 $s_i=1$ \u7684\u4f4d\u7f6e\u4e24\u8fb9\u6709\u6ca1\u6709 $1$ \u3002\n\n\u5982\u679c\u6709\u4efb\u610f\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u6ca1\u6709\uff0c\u7b54\u6848\u4e3a $-1$ \u3002\n\n\u5426\u5219\u8f93\u51fa\u5b57\u7b26\u4e32 $w$ .\n\n#### Code\n\n``` cpp\n#include <iostream>\n#include <string>\nusing namespace std;\nint T, x, n;\nstring s, ans;\nbool f1, f2, flag;\nint main()\n{\n\tcin >> T;\n\twhile(T--)\n\t{\n\t\tcin >> s >> x;  \n\t\tn = s.length(); ans = \"\"; flag = false;\n\t\tfor(int i = 0; i < n; i++) ans += '1';\n\n\t\tfor(int i = 0; i < n; i++) if(s[i] == '0')\n\t\t{\n\t\t\tif(i - x >= 0) ans[i - x] = '0';\n\t\t\tif(i + x < n)  ans[i + x] = '0';\n\t\t}\t\n\t\tfor(int i = 0; i < n; i++) if(s[i] == '1')\n\t\t{\n\t\t\tf1 = f2 = 0;\n\t\t\tif(i - x >= 0) f1 = (ans[i - x] == '1');\n\t\t\tif(i + x < n)  f2 = (ans[i + x] == '1');\n\t\t\tif(!f1 && !f2) { cout << -1 << endl; flag = true; break; }\n\t\t}\n\t\t\n\t\tif(flag) continue;\n\t\tcout << ans << endl;\n\t}\n\t\n\treturn 0;\n}\n\n```",
        "postTime": 1598514869,
        "uid": 138979,
        "name": "\u9093\u5e03\u5229\u591a6",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1400C \u3010Binary String Reconstruction\u3011"
    },
    {
        "content": "\u672c\u6587\u540c\u6b65\u53d1\u8868\u4e8e[\u6211\u7684cnblog](https://www.cnblogs.com/ZigZagKmp/p/13563143.html)\n\n\u672c\u573a\u9898\u89e3\u53ef\u89c1[\u6b64](https://www.luogu.com.cn/blog/ZigZagKmp/codeforces-1400-edu-94-solution)\n\n## \u9898\u610f\u7b80\u8ff0\n\u5df2\u77e5\u4e00\u4e2a\u957f\u5ea6\u4e3a$n$\u768401\u5b57\u7b26\u4e32$s$\u7531\u957f\u5ea6\u4e3a$n$\u768401\u5b57\u7b26\u4e32\u548c\u4e00\u4e2a\u6b63\u6574\u6570$x$\u751f\u6210\u3002\u5b57\u7b26\u4e32\u4e0b\u6807\u4ece$1$\u5f00\u59cb\u3002$s_i$\u751f\u6210\u89c4\u5219\u5982\u4e0b\uff1a\n\n- \u5982\u679c$i>x$\u4e14$w_{i-x}=1$\uff0c\u5219$s_i=1$\uff1b\n- \u5982\u679c$i+x\\le n$\u4e14$w_{i+x}=1$\uff0c\u5219$s_i=1$\uff1b\n- \u5426\u5219$s_i=0$\u3002\n\n\u8f93\u5165$s$\u548c$x$\uff0c\u8f93\u51fa\u4e00\u79cd\u53ef\u884c\u7684$w$\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u8fd9\u6837\u7684$w$\uff0c\u8f93\u51fa$-1$\u3002\n\n\u591a\u6d4b\uff0c$2\\le |s|\\le 10^5$\uff0c$1\\le x\\le |s|-1$\uff0c$\\sum|s|\\le 10^5$\u3002\n### \u7b97\u6cd5\u8003\u5bdf\n\u6a21\u62df\n## \u7b97\u6cd5\u5206\u6790\n\u6211\u4eec\u5148\u6539\u5199\u4e00\u4e0b\u6761\u4ef6\uff1a\n\n- $s_i=1$\uff0c\u5219$w_{i-x}=1(i>x)$\u6216$w_{i+x}=1(i+x\\le n)$\uff1b\n- $s_i=0$\uff0c\u5219$w_{i-x}=0(i>x)$\u4e14$w_{i+x}=0(i+x\\le n)$\uff1b\n\n\u6211\u4eec\u53d1\u73b0$s_i=0$\u7684\u9650\u5236\u6761\u4ef6\u6bd4\u8f83\u786e\u5b9a\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a$w$\u7684\u54ea\u4e9b\u4f4d\u7f6e\u4e00\u5b9a\u662f$0$\u3002\n\n\u6b64\u65f6\u5982\u679c\u8981\u4f7f\u7b2c\u4e00\u4e2a\u6761\u4ef6\u6210\u7acb\uff0c\u6211\u4eec\u53ea\u9700\u8981\u68c0\u9a8c\u6bcf\u4e00\u4e2a$s_i=1$\u7684\u4f4d\u7f6e\uff0c\u5982\u679c\u5bf9\u5e94\u7684$w$\u7684\u4f4d\u7f6e\u90fd\u662f\u786e\u5b9a\u7684$0$\uff0c\u90a3\u4e00\u5b9a\u65e0\u89e3\uff0c\u5426\u5219\u6211\u4eec\u8ba9\u5269\u4f59\u4e0d\u786e\u5b9a\u7684\u4f4d\u7f6e\u5168\u90e8\u586b$1$\uff0c\u53ef\u4ee5\u8bc1\u660e\u8fd9\u6837\u7684\u6784\u9020\u4e00\u5b9a\u5408\u6cd5\u3002\n## \u4ee3\u7801\u5b9e\u73b0\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define maxn 100005\n#define maxm 200005\n#define inf 0x3f3f3f3f\n#define int long long\n#define mod 1000000007\n#define local\ntemplate <typename Tp> void read(Tp &x){\n\tint fh=1;char c=getchar();x=0;\n\twhile(c>'9'||c<'0'){if(c=='-'){fh=-1;}c=getchar();}\n\twhile(c>='0'&&c<='9'){x=(x<<1)+(x<<3)+(c&15);c=getchar();}x*=fh;\n}\nint n,m;\nint pos[maxn];\nchar s[maxn];\nsigned main(){\n\tint CasT;\n\tread(CasT);\n\tint X;\n\twhile(CasT--){\n\t\tmemset(pos,0,sizeof(pos));//\u6b64\u5904\u5b9e\u9645\u53ef\u4ee5\u66f4\u52a0\u7cbe\u7ec6\u5904\u7406\uff0c\u4f46\u672c\u8eab\u5df2\u7ecf\u80fd\u8fc7\n\t\tscanf(\"%s\",s+1);\n\t\tread(X);\n\t\tn=strlen(s+1);\n\t\tfor(int i=1;i<=n;i++){//\u5904\u74060\n\t\t\tif(s[i]=='0'){\n\t\t\t\tif(i-X>0)pos[i-X]=1;\n\t\t\t\tif(i+X<=n)pos[i+X]=1;\n\t\t\t}\n\t\t}\n\t\tint ffl=1;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif(s[i]=='1'){//\u5904\u74061\n\t\t\t\tint fla=0,flb=0;\n\t\t\t\tif(i-X>0){\n\t\t\t\t\tif(pos[i-X]==1)fla=1;\n\t\t\t\t}\n\t\t\t\telse fla=1;\n\t\t\t\tif(i+X<=n){\n\t\t\t\t\tif(pos[i+X]==1)flb=1;\n\t\t\t\t}\n\t\t\t\telse flb=1;\n\t\t\t\tif(fla&&flb){//\u65e0\u6cd5\u6ee1\u8db31\uff0c\u4e00\u5b9a\u65e0\u89e3\n\t\t\t\t\tputs(\"-1\");\n\t\t\t\t\tffl=0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(ffl){\n\t\t\tfor(int i=1;i<=n;i++){\n\t\t\t\tif(pos[i])putchar('0');\n\t\t\t\telse putchar('1');\n\t\t\t}\n\t\t\tputs(\"\");\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1598413876,
        "uid": 35871,
        "name": "ZigZagKmp",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1400C\u3010Binary String Reconstruction\u3011"
    },
    {
        "content": "\u89c2\u5bdf\u53d8\u6362\u65b9\u5f0f\uff0c\u53ef\u4ee5\u53d1\u73b0\u5728 $s_i=\\mathbf0$ \u7684\u60c5\u51b5\u4e0b\uff0c\u5bf9\u539f\u4e32\u6709 $w_{i+x}=w_{i-x}=\\mathbf0$\uff08\u82e5\u5b58\u5728\u7684\u8bdd\uff09\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u5148\u626b\u4e00\u904d $s$\uff0c\u6807\u8bb0\u8fd9\u4e9b\u4f4d\u7f6e\uff0c\u518d\u5904\u7406 $s_i=\\mathbf1$ \u7684\u60c5\u51b5\u3002\n\n```cpp\nfor (int i = 1; i <= len; ++i) {\n    if (ch[i] == '0') {\n        if (i - x > 0) vis[i - x] = 1;\n        if (i + x <= len) vis[i + x] = 1;\n    }\n}\n```\n\n\u5bf9\u4e8e $s_i=\\mathbf1$ \u7684\u60c5\u51b5\uff0c\u53ef\u80fd\u6709 $w_{i-x}=\\mathbf1$ \u6216 $w_{i+x}=\\mathbf1$ \u6216\u4e24\u8005\u90fd\u6709\u3002\u800c\u53ea\u8981\u6709\u4e00\u4e2a\u5c31\u8db3\u591f\u4e86\uff0c\u6240\u4ee5\u82e5\u4e24\u8fb9\u90fd\u88ab\u6253\u4e0a\u4e86\u6807\u8bb0\uff0c\u5c31\u76f4\u63a5\u5224\u65ad\u65e0\u89e3\u3002\u53ef\u4ee5\u53ea\u6807\u8bb0\u5de6\u8fb9\u7684 $w_{i-x}=1$\uff0c\u82e5 $w_{i-x}$ \u5df2\u7ecf\u88ab\u6253\u4e0a\u4e86\u6807\u8bb0\uff0c\u90a3\u5c31\u6807\u8bb0\u53f3\u8fb9\u7684 $w_{i+x}=1$\u3002\n\n\u6709\u4e9b\u4f4d\u7f6e\u53ef\u80fd\u4e0d\u4f1a\u88ab\u4ee5\u4e0a\u7684\u65b9\u6cd5\u8d4b\u503c\uff0c\u8fd9\u4e9b\u4f4d\u7f6e\u662f\u4ec0\u4e48\u90fd\u53ef\u4ee5\uff0c\u8d4b\u4e3a`'0'`\u5728\u7b2c\u4e00\u4e2a\u6b65\u9aa4\u6bd4\u8f83\u65b9\u4fbf\u3002\n\n\u601d\u8def\u5f88\u7b80\u5355\u4f46\u662f`if`\u592a\u591a\u800c\u4e14\u6bcf\u884c\u5f88\u77ed\uff0c\u6240\u4ee5\u4e3a\u4e86\u89c2\u611f\u5c06\u7f29\u8fdb\u6539\u4e3a\u4e24\u683c\u3002\n\n\u4ee3\u7801\u4e2d`ch`\u4e32\u662f\u7ed3\u679c\u4e32\uff0c`s`\u4e32\u662f\u539f\u4e32\u3002\n\n\u4ee3\u7801\u4e2d\u8fd8\u91c7\u7528\u4e86C++\u7684\u4e00\u4e2a\u5c0ftrick\uff1a`goto`\u3002\u8fd9\u53ef\u4ee5\u4ee3\u66ff\u6253\u6807\u8bb0+`break`\uff0c\u5728\u60c5\u51b5\u8f83\u590d\u6742\u65f6\u4f7f\u7528\u5f88\u65b9\u4fbf\u3002\u7b80\u5355\u6765\u8bf4\u5b83\u7684\u7528\u6cd5\uff0c\u90a3\u5c31\u662f`goto\u00a0wherever;`\uff0c\u82e5\u7a0b\u5e8f\u6267\u884c\u5230\u8fd9\u4e00\u53e5\u5c31\u4f1a\u8dd1\u5230`wherever:`\u7684\u540e\u9762\u3002\u53ef\u4ee5\u7528\u6765\u8df3\u51fa\u591a\u4e2a\u5faa\u73af\u76f4\u63a5\u8f93\u51fa\u65e0\u89e3\uff08\u6216\u8005\u7c7b\u4f3c\u7684\u64cd\u4f5c\uff09\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nnamespace STDquantum { // \u9632\u6b62\u547d\u540d\u51b2\u7a81\u7528\u7684\uff0cmain()\u5c31\u76f8\u5f53\u4e8e\u4e3b\u51fd\u6570\n\nconst int N = 3e5 + 10;\nint t, x, len;\nchar ch[N], s[N];\nbool vis[N];\ninline void main() {\n  scanf(\"%d\", &t);\n  while (t--) {\n    scanf(\"%s%d\", ch + 1, &x);\n    len = strlen(ch + 1);\n    fill(vis + 1, vis + len + 1, 0); // \u53ef\u4ee5\u4ee3\u66ffmemset\u628a[vis+1,vis+len+1)\u5168\u6e05\u96f6\n    fill(s + 1, s + len + 1, '0'); // \u6e05\u7a7as\u4e32\n    s[len + 1] = 0; // printf\u9047\u89c1s[i]=0\u5c31\u4f1a\u505c\u6b62\uff0c\u6240\u4ee5\u8fd9\u53e5\u76f8\u5f53\u4e8e\u4e00\u4e2a\u7ec8\u6b62\u7b26\n    for (int i = 1; i <= len; ++i) {\n      if (ch[i] == '0') { // \u7b2c\u4e00\u4e2a\u6b65\u9aa4\uff1a\u6807\u8bb0\u5df2\u6709\u4fe1\u606f\n        if (i - x > 0) vis[i - x] = 1;\n        if (i + x <= len) vis[i + x] = 1;\n      }\n    }\n    for (int i = 1; i <= len; ++i) {\n      if (ch[i] == '1') { // \u7b2c\u4e8c\u4e2a\u6b65\u9aa4\uff1a\u6c42\u51fa\u539f\u4e32\n        if (i - x > 0) { // \u82e5\u5de6\u8fb9\u4f4d\u7f6e\u5408\u6cd5\n          if (vis[i - x]) { // \u82e5\u5de6\u8fb9\u4f4d\u7f6e\u88ab\u6807\u8bb0\u8fc7\n            if (i + x <= len) { // \u82e5\u53f3\u8fb9\u4f4d\u7f6e\u5408\u6cd5\n              if (vis[i + x]) { // \u82e5\u53f3\u8fb9\u4f4d\u7f6e\u88ab\u6807\u8bb0\u8fc7\n                goto school; // \u90fd\u88ab\u6807\u8bb0\u8fc7\u5219\u65e0\u89e3\n              } else {\n                s[i + x] = '1'; // \u5de6\u8fb9\u88ab\u6807\u8bb0\u8fc7\u3001\u53f3\u8fb9\u5408\u6cd5\uff0c\u5c31\u628a\u53f3\u8fb9\u8d4b\u4e3a'1'\n              }\n            } else { // \u53f3\u8fb9\u4f4d\u7f6e\u4e0d\u5408\u6cd5\n              goto school; // \u5de6\u8fb9\u4f4d\u7f6e\u5408\u6cd5\u4f46\u88ab\u6807\u8bb0\u8fc7\uff0c\u53f3\u8fb9\u4f4d\u7f6e\u4e0d\u5408\u6cd5\uff0c\u65e0\u89e3\n            }\n          } else { // \u5de6\u8fb9\u5408\u6cd5\u4e14\u6ca1\u6709\u88ab\u6807\u8bb0\u8fc7\u76f4\u63a5\u8d4b\u4e3a'1'\n            s[i - x] = '1';\n          }\n        } else if (i + x <= len) { // \u5de6\u8fb9\u4f4d\u7f6e\u4e0d\u5408\u6cd5\uff0c\u53f3\u8fb9\u4f4d\u7f6e\u5408\u6cd5\n          if (vis[i + x]) { // \u53f3\u8fb9\u88ab\u6807\u8bb0\u8fc7\n            goto school; // \u5de6\u8fb9\u4f4d\u7f6e\u4e0d\u5408\u6cd5\uff0c\u53f3\u8fb9\u4f4d\u7f6e\u5408\u6cd5\u4f46\u88ab\u6807\u8bb0\u8fc7\uff0c\u65e0\u89e3\n          } else {\n            s[i + x] = '1'; // \u5de6\u8fb9\u4f4d\u7f6e\u4e0d\u5408\u6cd5\uff0c\u53f3\u8fb9\u4f4d\u7f6e\u5408\u6cd5\u4e14\u672a\u88ab\u6807\u8bb0\u8fc7\uff0c\u76f4\u63a5\u8d4b\u4e3a'1'\n          }\n        } else {\n          goto school; // \u5de6\u53f3\u4f4d\u7f6e\u90fd\u4e0d\u5408\u6cd5\uff0c\u65e0\u89e3\n        }\n      }\n    }\n    printf(\"%s\\n\", s + 1); // \u5168\u90fd\u5408\u6cd5\u76f4\u63a5\u8f93\u51fa\u539f\u4e32\n    continue;\n  school: // goto school\u8df3\u5230\u8fd9\u91cc\uff0c\u8f93\u51fa-1\u540e\u76f4\u63a5\u8fdb\u884c\u4e0b\u4e00\u6b21\u5faa\u73af\n    puts(\"-1\");\n  }\n}\n\n}  // namespace STDquantum\n\nint main() {\n  STDquantum::main();\n  return 0;\n}\n```\n\n\n\n",
        "postTime": 1598517757,
        "uid": 135631,
        "name": "STDquantum",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1400C \u3010Binary String Reconstruction\u3011"
    },
    {
        "content": "\u5206\u6790\u4e00\u4e0b\u5982\u4f55\u5012\u63a8\uff0c\u53d1\u73b0\u9700\u8981\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n- \u5982\u679c $s_i$ \u662f $0$\uff0c\u5219\u5fc5\u7136\u6ee1\u8db3 $i-x<1\\text{ or } w_{i-x}=0$ \u4e14 $i+x>n\\text{ or }w_{i+x}=0$ \u3002\n  \n  \u6839\u636e\u6b64\u6761\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06 $w_{i-x}$ \u548c $x_{i+x}$ \u5747\u8bbe\u7f6e\u4e3a $0$\uff08\u4e0d\u8d8a\u754c\uff09\u3002\n  \n- \u5982\u679c $s_i$ \u662f $1$\uff0c\u5219\u5fc5\u7136\u6ee1\u8db3 $i-x\\ge 1\\text{ and }w_{i-x}=1$ \u6216 $i+x\\le n\\text{ and }w_{i+n}=1$\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u60c5\u51b5\u4e00\u5c06\u53ef\u80fd\u7684 $w$ \u6784\u9020\u51fa\u6765\uff0c\u518d\u6839\u636e\u60c5\u51b5\u4e8c\u5224\u65ad\u662f\u5426\u53ef\u884c\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define min(x,y) ((y)^(((x)^(y))&(-((x)<(y)))))\n#define max(x,y) ((x)^(((x)^(y))&(-((x)<(y)))))\nusing namespace std;\nint main(){\n    register int t;\n    cin>>t;\n    bool w[100005];\n    string s,s1;\n    while(t--){\n        s=\" \";\n        bool ok=1;register int n,x;\n        cin>>s1>>x;memset(w,1,sizeof(w));s+=s1;//w\u521d\u59cb\u5168\u4e3a1\uff0c\u662f\u4e00\u79cd\u8d2a\u5fc3\u7684\u601d\u60f3\uff1a\u5c3d\u53ef\u80fd\u6ee1\u8db31\u7684\u9700\u6c42\n        n=s1.size();\n        for(int i=1;i<=n&&ok;i++)if(s[i]=='0'){\n            if(i-x)w[i-x]=0;//\u60c5\u51b5\u4e00\uff0c\u5bf9w\u5904\u7406\n            if(i+x<=n)w[i+x]=0;\n        }\n        for(int i=1;i<=n&&ok;i++)if(s[i]=='1'){\n            bool z=0;\n            if(i-x)z|=w[i-x];//\u60c5\u51b5\u4e8c\uff0c\u5bf9w\u5224\u65ad\n            if(i+x<=n)z|=w[i+x];\n            ok&=z;\n        }\n        if(!ok)cout<<\"-1\";\n        else for(int i=1;i<=n;i++)cout<<w[i];\n        cout<<endl;\n    }\n    return 0;\n}\n```",
        "postTime": 1598441749,
        "uid": 39863,
        "name": "\u5f15\u9886\u5929\u4e0b",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF1400C \u3010C - Binary String Reconstruction\u3011"
    },
    {
        "content": "C \u9898 \u6bd4 B \u9898 \u7b80 \u5355.jpg\n\n\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\u539f\u5b57\u7b26\u4e32\u4e2d ``0`` \u7684\u4f4d\u7f6e\uff1a\u5c06\u7ed9\u5b9a\u5b57\u7b26\u4e32\u626b\u4e00\u904d\uff0c\u9047\u5230\u7b2c $i$ \u4f4d\u4e3a ``0`` \u5c31\u5c06\u539f\u5b57\u7b26\u4e32\u4e2d $i-x$\uff0c$i+x$ \u4f4d\u66f4\u65b0\u4e3a ``0``\u3002\n\n\u7136\u540e\u68c0\u67e5 ``1``\uff0c\u5982\u679c\u6709\u4e00\u4e2a ``1`` \u4f4d\u7f6e\u4e24\u8fb9\u90fd\u5df2\u7ecf\u8d4b\u503c\u6210\u4e86 ``0``\uff0c\u90a3\u4e48\u65e0\u89e3\u3002\n\n\u5982\u679c\u6709\u89e3\u5c31\u628a\u5269\u4e0b\u7a7a\u7684\u4f4d\u7f6e\u8d4b\u503c\u6210 ``1`` \u5373\u53ef\uff0c\u6b63\u786e\u6027\u663e\u7136\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(\\sum |s|)$\u3002\n\n**\u4ee3\u7801\uff1a**\n\n\u4ee3\u7801\u5199\u7684\u70e6\u4e86\u4e00\u70b9....\n\n```cpp\n#include <bits/stdc++.h>\n#define LL long long\n#define ULL unsigned long long\n#define LD long double\n#define reg register\n#define _rep(i, x, y) for(int i = x; i <= y; i++)\n#define _per(i, x, y) for(int i = x; i >= y; i--)\ntemplate <typename T>\ninline void read(T &x) {\n\tx = 0; T f = (T) 1;\n\tchar c = getchar();\n\tfor(; !isdigit(c); c = getchar()) {if(c == '-') f = -f;}\n\tfor(; isdigit(c); c = getchar()) x = x * 10 + c - 48;\n\tx *= f;\n}\ntemplate <typename T, typename... Args>\ninline void read(T& x, Args&... args) {\n    read(x); read(args...);\n}\ntemplate <typename T>\ninline void write(T x) {\n\tif(x < 0) {x = -x; putchar('-');}\n\tif(x > 9) write(x / 10);\n\tputchar(x % 10 + '0');\n}\ntemplate <typename T>\ninline void writesp(T x, char sp = ' ') {write(x); putchar(sp);}\nconst int maxN = 1e5 + 10;\nint t, n;\nchar str[maxN], c[maxN];\nint x;\nint main() {\n\tread(t);\n\twhile(t--) {\n\t\tscanf(\"%s\", str + 1); read(x);\n\t\tn = strlen(str + 1);\n\t\t_rep(i, 1, n) c[i] = 'Z';\n\t\t_rep(i, 1, n) {\n\t\t\tif(str[i] == '0') {\n\t\t\t\tif(i - x >= 1) c[i - x] = '-';\n\t\t\t\tif(i + x <= n) c[i + x] = '-';\n\t\t\t}\n\t\t}\n\t\tint flg = 1;\n\t\t_rep(i, 1, n) {\n\t\t\tif(str[i] == '1') {\n\t\t\t\tif(i - x >= 1 && c[i - x] != '-') {\n\t\t\t\t\tc[i - x] = '+';\n\t\t\t\t} else if(i + x <= n && c[i + x] != '-') {\n\t\t\t\t\tc[i + x] = '+';\n\t\t\t\t} else {\n\t\t\t\t\tflg = 0; break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(flg == 0) puts(\"-1\");\n\t\telse {\n\t\t\t_rep(i, 1, n) {\n\t\t\t\tputchar(c[i] == '-' ? '0' : '1');\n\t\t\t}\n\t\t\tputchar('\\n');\n\t\t}\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1598397467,
        "uid": 46824,
        "name": "fsy_juruo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1400C\u3010Binary String Reconstruction\u3011"
    }
]