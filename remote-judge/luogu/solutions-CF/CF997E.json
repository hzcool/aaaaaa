[
    {
        "content": "[\u5b89\u5229\u4e2a\u4eba\u535a\u5ba2](https://blog.csdn.net/litble/article/details/80939776)\n\n\u6211\u9664\u4e86[WXH\u5929\u4e0b\u7b2c\u4e00](https://blog.csdn.net/wxh010910/article/details/80885802)\u8fd8\u80fd\u8bf4\u4ec0\u4e48\u5462......\n\n\u6240\u8c13\u597d\u533a\u95f4\uff0c\u5c31\u662f$(max-min)-(r-l)=0$\u7684\u533a\u95f4\u3002\n\n\u6211\u4eec\u5c06\u6240\u6709\u8be2\u95ee\u79bb\u7ebf\uff0c\u6309\u7167\u53f3\u7aef\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\u7136\u540e\u4ece\u5de6\u5230\u53f3\u5904\u7406\u6bcf\u4e00\u4e2a\u53f3\u7aef\u70b9\uff0c\u6bcf\u6b21\u5904\u7406\u65f6\uff0c\u7ebf\u6bb5\u6811\u91cc\u7ef4\u62a4\u4e00\u4e0b\u5bf9\u4e8e\u6bcf\u4e2a\u5de6\u7aef\u70b9\uff08\u8fd9\u4e2a\u53ea\u9700\u8981\u7528\u5355\u8c03\u6808\u6765\u5904\u7406\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u7684\u66f4\u65b0\u5373\u53ef\uff09\uff0c$(max-min)-(r-l)$\u7684\u6700\u5c0f\u503c\uff0c\u90a3\u4e48\u5982\u679c\u4e00\u4e2a\u533a\u95f4\u7684\u6700\u5c0f\u503c\u4e3a0\uff0c\u6700\u5c0f\u503c\u4e2a\u6570\u5c31\u662f\u53f3\u7aef\u70b9\u56fa\u5b9a\uff0c\u5de6\u7aef\u70b9\u53d6\u5728\u8fd9\u4e2a\u533a\u95f4\u5185\u7684\u65f6\u5019\uff0c\u597d\u533a\u95f4\u7684\u4e2a\u6570\u3002\n\n\u4f46\u662f\u6211\u4eec\u8981\u7ef4\u62a4\u7684\u662f\u4e00\u4e2a\u533a\u95f4\u5185\u6240\u6709\u5b50\u533a\u95f4\uff0c\u4e0d\u4ec5\u4ec5\u662f\u53f3\u7aef\u70b9\u662f$r$\u7684\u533a\u95f4\u3002\n\n\u5f15\u5165\u4e00\u4e2a\u65b0\u6807\u8bb0$time$\uff0c\u8868\u793a\u5f53\u524d\u8fd9\u4e2a\u6700\u5c0f\u503c\u4e2a\u6570\u7684\u8d21\u732e\uff0c\u8981\u6dfb\u52a0\u5230\u7b54\u6848\u91cc\u591a\u5c11\u6b21\u3002\u6211\u4eec\u6bcf\u6b21\u79fb\u52a8\u53f3\u7aef\u70b9\u7684\u65f6\u5019\uff0c\u8981\u5148\u628a\u6574\u4e2a\u7ebf\u6bb5\u6811\u7684time\u52a01\uff0c\u8868\u793a\u8fd8\u6ca1\u79fb\u52a8\u4e4b\u524d\u7684\u53f3\u7aef\u70b9\u9020\u6210\u7684\u8d21\u732e\u8981\u6dfb\u52a0\u5230\u7b54\u6848\u91cc\u4e00\u6b21\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u7ef4\u62a4\u5bf9\u4e8e\u6bcf\u4e2a\u5de6\u7aef\u70b9\uff0c\u53f3\u7aef\u70b9\u5c0f\u4e8e\u7b49\u4e8e\u5f53\u524d\u5904\u7406\u7684\u53f3\u7aef\u70b9\u65f6\uff0c\u597d\u533a\u95f4\u4e2a\u6570\u3002\u90a3\u4e48\u6bcf\u6b21\u66f4\u65b0\u8be2\u95ee\u7684\u7b54\u6848\uff0c\u53ea\u8981\u533a\u95f4\u67e5\u8be2\u5373\u53ef\u3002\n\n\u6709\u51e0\u4e2a\u8981\u6ce8\u610f\u7684\u5b9e\u73b0\u7ec6\u8282\uff0c\u5199\u5728\u4ee3\u7801\u91cc\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define RI register int\nint read() {\n\tint q=0;char ch=' ';\n\twhile(ch<'0'||ch>'9') ch=getchar();\n\twhile(ch>='0'&&ch<='9') q=q*10+ch-'0',ch=getchar();\n\treturn q;\n}\ntypedef long long LL;\nconst int N=120005;\nint n,Q,top1,top2;\nint a[N],mi[N<<2],js[N<<2],laz[N<<2],ti[N<<2],st1[N],st2[N];\n//mi:\u6700\u5c0f\u503c js:\u6700\u5c0f\u503c\u4e2a\u6570 laz:\u6700\u5c0f\u503c\u7684\u52a0\u51cf\u6807\u8bb0 ti:\u7b54\u6848\u66f4\u65b0\u6807\u8bb0 ans:\u533a\u95f4\u7b54\u6848\nLL ans[N<<2],res[N];\nstruct node{int l,r,id;}q[N];\nint cmp(node x,node y) {return x.r<y.r;}\n\nvoid addmi(int i,int num) {mi[i]+=num,laz[i]+=num;}\nvoid addti(int i,int num) {ans[i]+=1LL*js[i]*num,ti[i]+=num;}\nvoid pd(int i) {\n\tint l=i<<1,r=(i<<1)|1;\n\tif(laz[i]) addmi(l,laz[i]),addmi(r,laz[i]),laz[i]=0;//\u5148\u4e0b\u653elaz\uff0c\u518d\u4e0b\u653eti\n\tif(ti[i]) {//\u53f3\u7aef\u70b9\u53d6r\u65f6\uff0c[r,r]\u80af\u5b9a\u662f0\uff0c\u6240\u4ee5\u6574\u68f5\u7ebf\u6bb5\u6811\u7684\u6700\u5c0f\u503c\u662f0\n\t\tif(mi[l]==mi[i]) addti(l,ti[i]);\n\t\tif(mi[r]==mi[i]) addti(r,ti[i]);\n\t\t//\u5728\u505a\u8fd9\u4e2a\u8fc7\u7a0b\u65f6\uff0c\u53ef\u80fd\u4e00\u6b21\u79fb\u52a8\u53f3\u7aef\u70b9\u66f4\u65b0\u8fd8\u6ca1\u6709\u5b8c\u6210\uff0c\u53c8\u5df2\u7ecf\u4e0b\u653e\u4e86laz\uff0c\u6240\u4ee5\u4e0d\u80fd\u5199\u6210mi[l]==0\n\t\tti[i]=0;\n\t}\n}\nvoid up(int i) {\n\tint l=i<<1,r=(i<<1)|1;\n\tmi[i]=min(mi[l],mi[r]),js[i]=0;\n\tif(mi[l]==mi[i]) js[i]+=js[l];\n\tif(mi[r]==mi[i]) js[i]+=js[r];\n\tans[i]=ans[l]+ans[r];\n}\nvoid build(int s,int t,int i) {\n\tmi[i]=s,js[i]=1;//\u4e00\u5f00\u59cb\u5c06mi[i]=s\uff0c\u6700\u5c0f\u503c\u4e2a\u6570\u7684\u8ba1\u7b97\u624d\u662f\u5bf9\u7684\u3002\n\tif(s==t) return;\n\tint mid=(s+t)>>1;\n\tbuild(s,mid,i<<1),build(mid+1,t,(i<<1)|1);\n}\nvoid add(int l,int r,int s,int t,int i,int num) {\n\tif(l<=s&&t<=r) {addmi(i,num);return;}\n\tint mid=(s+t)>>1;pd(i);\n\tif(l<=mid) add(l,r,s,mid,i<<1,num);\n\tif(mid+1<=r) add(l,r,mid+1,t,(i<<1)|1,num);\n\tup(i);\n}\nLL query(int l,int r,int s,int t,int i) {\n\tif(l<=s&&t<=r) return ans[i];\n\tint mid=(s+t)>>1;LL re=0;pd(i);\n\tif(l<=mid) re=query(l,r,s,mid,i<<1);\n\tif(mid+1<=r) re+=query(l,r,mid+1,t,(i<<1)|1);\n\treturn re;\n}\nint main()\n{\n    int x,y;\n    n=read();\n    for(RI i=1;i<=n;++i) a[i]=read();\n    Q=read();\n    for(RI i=1;i<=Q;++i) q[i].l=read(),q[i].r=read(),q[i].id=i;\n    sort(q+1,q+1+Q,cmp);\n    build(1,n,1);\n    for(RI i=1,j=1;i<=n;++i) {\n    \taddmi(1,-1);\n    \twhile(top1&&a[i]>a[st1[top1]]) {\n    \t\tadd(st1[top1-1]+1,st1[top1],1,n,1,a[i]-a[st1[top1]]);\n    \t\t--top1;\n    \t}\n    \tst1[++top1]=i;\n    \twhile(top2&&a[i]<a[st2[top2]]) {\n    \t\tadd(st2[top2-1]+1,st2[top2],1,n,1,a[st2[top2]]-a[i]);\n    \t\t--top2;\n    \t}\n    \tst2[++top2]=i;\n    \taddti(1,1);//\u6253\u4e00\u4e2atime\u6807\u8bb0\uff0c\u628a\u5f53\u524d\u53f3\u7aef\u70b9\u9020\u6210\u7684\u8d21\u732e\u4e0b\u653e\n    \twhile(j<=Q&&q[j].r==i) res[q[j].id]=query(q[j].l,q[j].r,1,n,1),++j;\n    }\n    for(RI i=1;i<=Q;++i) printf(\"%lld\\n\",res[i]);\n    return 0;\n}\n//stone 0\n```\n",
        "postTime": 1530856254,
        "uid": 20604,
        "name": "litble",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF997E \u3010Good Subsegments\u3011"
    },
    {
        "content": "\u6211\u4e0d\u4f1a\uff0c\u6211\u6765\u7406\u4e00\u4e0b\u601d\u8def\n\n1. \u597d\u533a\u95f4\u7684\u6027\u8d28\uff1a\n\n\u533a\u95f4\u5185`(max-min)-(r-l)=0`\u8fd9\u6837\u7684\u533a\u95f4\u5c31\u662f\u597d\u533a\u95f4\n\n2. \u600e\u4e48\u505a\n\n\u7f51\u4e0a\u770b\u7684\u4e00\u4e2a\u5957\u8def\uff1a \u5bf9\u4e8e\u8be2\u95ee\u533a\u95f4\u5b50\u5e8f\u5217\u7684\u4fe1\u606f\uff0c\u53ef\u4ee5\u79bb\u7ebf\u79fb\u52a8\u53f3\u6307\u9488\uff0c\u7c7b\u4f3c\u626b\u63cf\u7ebf\u4e00\u6837\u8ba1\u7b97\u8d21\u732e\n\n\u4e4b\u524dCF\u597d\u50cf\u4e5f\u6709\u4e00\u4e2a\u8fd9\u6837\u7684\u9898\uff0c\u662f\u6c42\u6700\u957f\u7684\u597d\u533a\u95f4\uff0c\u601d\u8def\u8ddf\u8fd9\u9053\u9898\u76ee\u5dee\u4e0d\u591a\uff0c\u53ea\u662f\u7ef4\u62a4\u7684\u4e1c\u897f\u4e0d\u4e00\u6837\uff08\u6ca1\u627e\u5230\u522b\u8bf4\u6211\u65e0\u4e2d\u751f\u9898.jpg\uff09\n\n\u4e8e\u662f\u5728\u5f53\u524d\u6307\u9488`r`\u4e0b\u7ef4\u62a4\u4e00\u4e2a`(max\u2212min)\u2212(r\u2212l)`\u7684\u6700\u5c0f\u503c\u4ee5\u53ca\u6700\u5c0f\u503c\u4e2a\u6570\uff0c\u5c06\u8be2\u95ee\u79bb\u7ebf\uff08\u56e0\u4e3a\u8981\u7528\u5230\u5f53\u524d\u7684\u6307\u9488`r`\uff0c\u5bf9\u4e8e`max`\u548c`min`\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u5355\u8c03\u6808\u7ef4\u62a4\uff0c\u5c31\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u66f4\u65b0\u533a\u95f4\u7684\u4e0a\u8ff0\u67ff\u5b50\u7684`max`\uff0c`min`\n\n\n\u7136\u540e\u7ebf\u6bb5\u6811\u5185\u7ef4\u62a4\u4e00\u4e2a\u7b54\u6848`ans`\uff0c\u4ee3\u8868\u67d0\u4e2a\u533a\u95f4\u4e0a\u8ff0\u67ff\u5b50\u6700\u5c0f\u503c\u7684\u8d21\u732e\uff0c\u56e0\u4e3a\u6811\u6839\u4e00\u5b9a\u662f`0`\uff0c\u6240\u4ee5\u5224\u65ad\u6bcf\u6b21\u4e0b\u653e\u6807\u8bb0\u7684\u65f6\u5019\u53ea\u8981\u5224\u65ad\u513f\u5b50\u7684\u6700\u5c0f\u503c\u662f\u5426\u4e0e\u7236\u4eb2\u76f8\u7b49\u5373\u53ef\u3002\n\n\u4f46\u662f\u53d1\u73b0\u8fd9\u6837\u4e0d\u884c\uff0c\u6211\u4eec\u53ea\u662f\u7ef4\u62a4\u4e86\u4e00\u4e2a\u53f3\u7aef\u70b9\u4e3a`r`\u7684\u533a\u95f4\u7684\u8d21\u732e\uff0c\u9898\u76ee\u6211\u4eec\u8fd8\u8981\u6c42\u6211\u4eec\u6c42\u5b50\u533a\u95f4\u7684\u597d\u533a\u95f4\u7684\u4e2a\u6570\uff0c\u4e8e\u662f\u7ef4\u62a4\u4e00\u4e2a`lazy2`\u8d21\u732e\u6570\u7ec4\uff0c\u7ef4\u62a4\u5386\u53f2\u51fa\u73b0\u7684\u6700\u5c0f\u503c\u7684\u8d21\u732e\u3002\n\n3. \u7b97\u6cd5\u6d41\u7a0b\uff1a\n\n\u6bcf\u6b21r\u5411\u53f3\u8fb9\u79fb\u52a8\u7684\u6d41\u7a0b\uff1a\n\n\n1. \u6811\u6839\u7ef4\u62a4\u7684\u4e0a\u8ff0\u67ff\u5b50\u6700\u5c0f\u503c\u51cf\u5c0f1\n\n2. \u5355\u8c03\u6808\u66f4\u65b0\uff0c\u7ef4\u62a4\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u53d8\u5316\uff0c\u6bcf\u6b21\u5f39\u6808\u7684\u65f6\u5019\u5c06\u4e0a\u4e2a\u6808\u9876+1\u5230\u5f53\u524d\u6808\u9876\u7684\u8fd9\u4e00\u6bb5\u533a\u95f4\u7684\u4e0a\u8ff0\u67ff\u5b50\u6700\u5c0f\u503c`+abs(a[r]-a[top])\u518d\u5f39\u6808\n\n3. \u7ed9\u5f53\u524d\u533a\u95f4\u6253\u4e0a\u8d21\u732e\u6570\u7ec4\u7684`tag`\n\n4. \u5904\u7406\u53f3\u6bb5\u7aef\u70b9\u4e3a`r`\u7684\u8be2\u95ee\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#include<cstring>\n#include<stack>\n#define re register ll\n#define ll long long\n#define int long long\n#define maxn 200050\nusing namespace std;\nstruct tree{\n\tint l,r,mmin,num,lazy,lazy2,ans;\n\t//\u6700\u5c0f\u503c\uff0c\u6700\u5c0f\u503c\u4e2a\u6570\uff0c\u6700\u5c0f\u503c\u52a0\u51cf\u6807\u8bb0\uff0c\u7b54\u6848\u6807\u8bb0\uff0c\u7b54\u6848\n}t[maxn<<2];\nstruct node{\n\tint l,r,id;\n}q[maxn];\nbool comp(node aa,node bb){\n\treturn aa.r<bb.r;\n}\t\nvoid addmmin(int now,int num){\n\tt[now].mmin+=num;\n\tt[now].lazy+=num;\n}\nvoid addans(int now,int num){\n\tt[now].ans+=t[now].num*num;\n\tt[now].lazy2+=num;\n}\nvoid pushdown(int now){\n\tif(t[now].lazy){\n\t\taddmmin(now<<1,t[now].lazy);\n\t\taddmmin(now<<1|1,t[now].lazy);\n\t\tt[now].lazy=0;\n\t}\n\tif(t[now].lazy2){\n\tif(t[now<<1].mmin==t[now].mmin)addans(now<<1,t[now].lazy2);\n\tif(t[now<<1|1].mmin==t[now].mmin)addans(now<<1|1,t[now].lazy2);\t\t\t\n//\u4e0b\u653e\u6807\u8bb0\u7684\u65f6\u5019\u66f4\u65b0\u7b54\u6848\u770b\u662f\u4e0d\u662f\u8ddf\u81ea\u5df1\u4e00\u6837\uff0c\u5982\u679c\u5b50\u533a\u95f4\u6700\u5c0f\u503c\u8ddf\u81ea\u5df1\u4e00\u6837\u624d\u8fdb\u884c\u66f4\u65b0\u3002\n//\u56e0\u4e3a\u6811\u6839\u4e3a0,\u6211\u5b9e\u9645\u4e0a\u662f\u5728\u5224\u65ad0\n\tt[now].lazy2=0;\n\t}\n}\nvoid pushup(int now){\n\tt[now].mmin=min(t[now<<1].mmin,t[now<<1|1].mmin);\n\tt[now].num=0;\n\tif(t[now<<1].mmin==t[now].mmin)t[now].num+=t[now<<1].num;\n\tif(t[now<<1|1].mmin==t[now].mmin)t[now].num+=t[now<<1|1].num;\n\tt[now].ans=t[now<<1].ans+t[now<<1|1].ans;\n}\nvoid build(int now,int l,int r){\n\tt[now].l=l;\n\tt[now].r=r;\n\tt[now].mmin=l;//\u521d\u59cb\u65f6\u6bcf\u4e2a\u533a\u95f4\u7684????????\u662f\u5b83\u81ea\u5df1\u7684\u5de6\u7aef\u70b9\uff0c\u56e0\u4e3a\u6bcf\u6b21\u662f\u5bf9\u6574\u9897\u6811\u7684\u533a\u95f4\u6253\u7684\u6807\u8bb0\uff0c\u4f1a\u51cf\u53bb\u5f88\u591a\u6b211\n\tt[now].num=1;\n\tif(l==r)return;\n\tint mid=(l+r)>>1;\n\tbuild(now<<1,l,mid);\n\tbuild(now<<1|1,mid+1,r);\n}\nvoid change(int now,int l,int r,int val){\n\tif(l<=t[now].l&&t[now].r<=r){\n\t\taddmmin(now,val);\n\t\treturn;\n\t}\n\tpushdown(now);\n\tint mid=(t[now].l+t[now].r)>>1;\n\tif(l<=mid)change(now<<1,l,r,val);\n\tif(r>mid)change(now<<1|1,l,r,val);\n\tpushup(now);\n}\nint ask(int now,int l,int r){\n\tif(l<=t[now].l&&t[now].r<=r)return t[now].ans;\n\tpushdown(now);\n\tint mid=(t[now].l+t[now].r)>>1;\n\tint anss=0;\n\tif(l<=mid)anss+=ask(now<<1,l,r);\n\tif(r>mid)anss+=ask(now<<1|1,l,r);\n\treturn anss;\n}\nint n,m;\n//stack<int>smax,smin;\nint smax[maxn],smin[maxn];\nint top1,top2=0;\nint a[maxn],ans[maxn];\nsigned main(){\n//\tfreopen(\"large.in\",\"r\",stdin);\n//\tfreopen(\"large.out\",\"w\",stdout);\n\tscanf(\"%lld\",&n);\n\tfor(re i=1;i<=n;i++)\n\tscanf(\"%lld\",&a[i]);\n\tscanf(\"%lld\",&m);\n\tfor(re i=1;i<=m;i++){\n\t\tscanf(\"%lld%lld\",&q[i].l,&q[i].r),q[i].id=i;\n\t}\n\tsort(q+1,q+1+m,comp);\n\tbuild(1,1,n);\n\t//a[0]=1000000000000000000;\n\t//smax.push(0);\n\t//a[n+1]=-1000000000000000000;\n\t//smin.push(n+1);\n\tfor(re i=1,j=1;i<=n;i++){\n\t\taddmmin(1,-1);\n\t\t\n\t\t//\u6bcf\u6b21\u5c06\u533a\u95f4r\u53f3\u79fb\n\t\twhile(top1&&a[smax[top1]]<a[i]){\n\t\t\t/*int now2=smax.top()\\\n\t\t\tsmax.pop();\n\t\t\tint now=smax.top();\n\t\t\t\n\t\t\tchange(1,now+1,now2,a[i]-a[now2]);*/\n\t\t\tchange(1,smax[top1-1]+1,smax[top1],a[i]-a[smax[top1]]);\n\t\t\ttop1--;\n\t//\u8fd9\u4e2a\u533a\u95f4\u5185now+1\u2014\u2014now2 \u6574\u4f53\u52a0\u4e0aa[i]-a[smax.top()]\n\t//\u56e0\u4e3a\u6211\u66f4\u65b0\u4e86\u6700\u5927\u503c\t\n\t//\u4e0b\u9762\u7684\u5355\u8c03\u6808\u540c\u7406\t\n\t\t}\n\t\t//smax.push(i);\n\t\tsmax[++top1]=i;\n\t\t/*while(!smin.empty()&&a[smin.top()]>a[i]){\n\t\t\tint now2=smin.top();\n\t\t\tsmin.pop();\n\t\t\tint now=smin.top();\n\t\t\t//printf(\"%d %d\\n\",now,now2);\n\t\t\tchange(1,now+1,now2,a[now2]-a[i]);\n\t\t}\t\n\t\tsmin.push(i);*/\n\t\twhile(top2&&a[i]<a[smin[top2]]) {\n            change(1,smin[top2-1]+1,smin[top2],a[smin[top2]]-a[i]);\n            --top2;\n        }\n        smin[++top2]=i;\n\t\taddans(1,1);\n\t\twhile(q[j].r==i&&j<=m)ans[q[j].id]=ask(1,q[j].l,q[j].r),j++;\n\t}\n\tfor(re i=1;i<=m;i++){\n\t\tprintf(\"%lld\\n\",ans[i]);\n\t}\n//(max-min)-(r-l);\n\t\n\n\treturn 0;\n}\n```\n\n",
        "postTime": 1572262675,
        "uid": 57823,
        "name": "\u7ea2\u8272OI\u518d\u4e34",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF997E \u3010Good Subsegments\u3011"
    },
    {
        "content": "\u672c\u9898\u7684\u6790\u5408\u6811\u5728\u7ebf\u89e3\u6cd5\uff0c\u5e76\u4e0d\u662f @Time_tears \u6930\u53f6\u6240\u8bf4\u7684\u628a\u6811\u72b6\u6570\u7ec4\u6362\u6210\u4e3b\u5e2d\u6811\u90a3\u79cd\uff08\n\n\u9996\u5148\u5efa\u51fa\u6790\u5408\u6811\uff0c\u5b9e\u9645\u4e0a\u672c\u9898\u6211\u4eec\u8981\u6c42\u7684\u5c31\u662f\u6790\u5408\u6811\u4e0a\u6240\u6709\u88ab\u67e5\u8be2\u533a\u95f4\u5b8c\u5168\u5305\u542b\u7684\u8282\u70b9\u7684\u5185\u90e8\u8d21\u732e\u548c\u4ed6\u4eec\u4e4b\u95f4\u7684\u8d21\u732e\u3002\n\n\u5148\u8003\u8651\u4e00\u4e2a\u5f31\u5316\u7248\u7684\u95ee\u9898\uff0c\u5373\u5168\u5c40\u67e5\u8be2\uff0c\u8bbe\n\n$$\nval_u=\n\\begin{cases}\n\t\\begin{aligned}\n\t\t&1& \\text{u \u662f\u6790\u70b9}\\\\\n\t\t&C_{|son_u|}^{2}& \\text{u \u662f\u5408\u70b9}\n\t\\end{aligned}\n\\end{cases}\n$$\n\n\u90a3\u4e48\u7b54\u6848\u5c31\u662f $\\sum\\limits_{i=1}^{cnt}val_i$\uff0c$cnt$ \u662f\u6790\u5408\u6811\u7684\u8282\u70b9\u6570\u3002\n\n\u4e8e\u662f\u73b0\u5728\u7684\u95ee\u9898\u662f\u5982\u4f55\u6c42\u51fa\u88ab\u67e5\u8be2\u533a\u95f4\u5b8c\u5168\u5305\u542b\u7684\u8282\u70b9\uff0c\u6211\u4eec\u627e\u5230\u8fd9\u4e9b\u70b9\u5e76\u52a0\u4e0a\u4ed6\u4eec\u7684\u5b50\u6811\u548c\u5373\u53ef\uff0c\u4f46\u8fd9\u6837\u53ef\u80fd\u5b58\u5728\u4e00\u4e2a\u5408\u70b9\u6ca1\u6709\u88ab\u5b8c\u5168\u5305\u542b\uff0c\u800c\u5176\u513f\u5b50\u5e8f\u5217\u7684\u4e00\u4e2a\u5b50\u6bb5\u88ab\u5b8c\u5168\u5305\u542b\uff0c\u6211\u4eec\u8fd8\u9700\u52a0\u4e0a\u8fd9\u4e9b\u88ab\u5305\u542b\u7684\u5b50\u6bb5\u4e2d\u513f\u5b50\u4e4b\u95f4\u7684\u8d21\u732e\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u7ef4\u62a4\u4e0b\u9762\u4e24\u4e2a\u503c\uff1a\n\n- $pre_u$\uff0c\u8868\u793a $u$ \u5728\u5176\u7236\u4eb2\u7684\u513f\u5b50\u5e8f\u5217\uff08\u4e0b\u9762\u7b80\u79f0\u5144\u5f1f\u5e8f\u5217\uff09\u4e0a\u5bf9\u5e94\u7684\u540e\u7f00\uff08\u4e0d\u5305\u542b\u672c\u8eab\uff09\u7684\u5b50\u6811\u548c\uff0c\u5982\u679c\u5176\u7236\u4eb2\u662f\u5408\u70b9\uff0c\u8fd8\u8981\u52a0\u4e0a\u8fd9\u4e2a\u540e\u7f00\u76f8\u4e92\u4e4b\u95f4\u7684\u8d21\u732e\u3002\n- $suf_u$\uff0c\u540c\u7406\u3002\n- $rk_u$\uff0c$u$ \u5728\u5144\u5f1f\u5e8f\u5217\u4e0a\u7684\u6392\u540d\n\n\u663e\u7136\u5305\u542b $l-1$ \u548c $r+1$ \u7684\u8282\u70b9\u4e0d\u5e94\u8be5\u88ab\u7edf\u8ba1\u8fdb\u7b54\u6848\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4ece $l-1$ \u5f00\u59cb\u5411\u4e0a\u8df3\uff0c\u5728\u6bcf\u4e2a\u8282\u70b9\u5904\u52a0\u4e0a $suf_u$\uff0c\u4ee5\u53ca\u4ece $r+1$ \u5f00\u59cb\u5411\u4e0a\u8df3\uff0c\u52a0\u4e0a $pre_u$\u3002\u6700\u540e\u5728 $lca$ \u7684\u513f\u5b50\uff08\u5047\u8bbe\u662f $x$ \u548c $y$\uff09\u5904\uff0c\u5982\u679c $lca$ \u662f\u5408\u70b9\uff0c\u90a3\u4e48\u52a0\u4e0a $[x+1, y-1]$ \u7684\u5b50\u6811\u548c\u52a0 $C_{y-x-1}^{2}$\uff0c\u5426\u5219\u53ea\u52a0\u4e0a $[x+1, y-1]$ \u7684\u5b50\u6811\u548c\u3002\n\n\u663e\u7136\u4e0a\u8ff0\u8fc7\u7a0b\u53ef\u4ee5\u7528\u500d\u589e\u6765\u4f18\u5316\u3002\u4e5f\u8bb8\u53ef\u4ee5\u901a\u8fc7\u5404\u79cd\u79d1\u6280\u4f18\u5316\u5230 $O(n)$ \u9884\u5904\u7406\uff0c$O(1)$ \u56de\u7b54\u67d0\u7ec4\u8be2\u95ee\u3002\n\n\u5177\u4f53\u7ec6\u8282\u89c1\u4ee3\u7801\uff1a\n\n\u56e0\u4e3a\u5199\u4e86 1h+ \u964d\u667a\u4e25\u91cd\uff0c\u6240\u4ee5\u4ee3\u7801\u5f88\u4e11\uff08\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\n\nint get() {\n\tint x = 0, f = 1; char c = getchar();\n\twhile(!isdigit(c)) { if(c == '-') f = -1; c = getchar(); }\n\twhile(isdigit(c)) { x = x * 10 + c - '0'; c = getchar(); }\n\treturn x * f;\n}\n\nconst int N = 5e5 + 5;\nint n, a[N], m;\nvector<int> son[N];\nint st1[N], tp1, st2[N], tp2, st[N], tp, id[N], cnt, L[N], R[N], M[N], typ[N], rt;\nint dep[N], f[N][20];\nint pre[N], suf[N], sze[N], sum[N], rk[N];\n\nvoid add(int u, int v) { son[u].push_back(v); }\n\nnamespace RMQ {\n\tint lg[N];\n\tstruct Node {\n\t\tint mn, mx;\n\t\tNode(int x = 0, int y = 0) { mn = x, mx = y; }\n\t\tNode operator +(Node b) const { return Node(min(mn, b.mn), max(mx, b.mx)); }\n\t} t[N][20];\n\tvoid init() {\n\t\tlg[0] = -1; for(int i = 1; i <= n; i++) lg[i] = lg[i >> 1] + 1, t[i][0] = Node(a[i], a[i]);\n\t\tfor(int j = 1; j <= 19; j++)\n\t\t\tfor(int i = 1; i + (1 << j) - 1 <= n; i++)\n\t\t\t\tt[i][j] = t[i][j - 1] + t[i + (1 << j - 1)][j - 1];\n\t}\n\tNode ask(int l, int r) {\n\t\tint len = lg[r - l + 1];\n\t\treturn t[l][len] + t[r - (1 << len) + 1][len];\n\t}\n}\n\nnamespace SMT {\n\t#define lc (u << 1)\n\t#define rc (u << 1 | 1)\n\t#define mid (l + r >> 1)\n\tint mx[N << 2], tag[N << 2];\n\tvoid pushup(int u) { mx[u] = min(mx[lc], mx[rc]); }\n\tvoid pusha(int u, int v) { mx[u] += v, tag[u] += v; }\n\tvoid pushdown(int u) { if(tag[u]) pusha(lc, tag[u]), pusha(rc, tag[u]), tag[u] = 0; }\n\tvoid update(int u, int l, int r, int a, int b, int v) {\n\t\tif(a == l && r == b) return pusha(u, v);\n\t\tpushdown(u);\n\t\tif(b <= mid) update(lc, l, mid, a, b, v);\n\t\telse if(a > mid) update(rc, mid + 1, r, a, b, v);\n\t\telse update(lc, l, mid, a, mid, v), update(rc, mid + 1, r, mid + 1, b, v);\n\t\tpushup(u);\n\t}\n\tint query(int u, int l, int r) {\n\t\tif(l == r) return l;\n\t\tpushdown(u);\n\t\tif(!mx[lc]) return query(lc, l, mid);\n\t\telse return query(rc, mid + 1, r);\n\t}\n}\n\nint judge(int l, int r) { return (RMQ::ask(l, r).mx - RMQ::ask(l, r).mn == r - l); }\nint S(int n) { return n * (n - 1) / 2; }\n\nvoid build() {\n\tfor(int i = 1; i <= n; i++) {\n\t\twhile(tp1 && a[i] <= a[st1[tp1]]) SMT::update(1, 1, n, st1[tp1 - 1] + 1, st1[tp1], a[st1[tp1]]), tp1--;\n\t\twhile(tp2 && a[i] >= a[st2[tp2]]) SMT::update(1, 1, n, st2[tp2 - 1] + 1, st2[tp2], -a[st2[tp2]]), tp2--;\n\t\tSMT::update(1, 1, n, st1[tp1] + 1, i, -a[i]), st1[++tp1] = i;\n\t\tSMT::update(1, 1, n, st2[tp2] + 1, i, a[i]), st2[++tp2] = i;\n\t\tid[i] = ++cnt, L[cnt] = R[cnt] = i;\n\t\tint lst = SMT::query(1, 1, n), now = cnt;\n\t\twhile(tp && L[st[tp]] >= lst) {\n\t\t\tif(typ[st[tp]] && judge(M[st[tp]], i)) R[st[tp]] = i, add(st[tp], now), now = st[tp--];\n\t\t\telse if(judge(L[st[tp]], i)) typ[++cnt] = 1, L[cnt] = L[st[tp]], R[cnt] = i, M[cnt] = L[now], add(cnt, st[tp--]), add(cnt, now), now = cnt;\n\t\t\telse {\n\t\t\t\tadd(++cnt, now);\n\t\t\t\tdo {\n\t\t\t\t\tadd(cnt, st[tp--]);\n\t\t\t\t} while(tp && !judge(L[st[tp]], i));\n\t\t\t\tL[cnt] = L[st[tp]], R[cnt] = i, add(cnt, st[tp--]), now = cnt;\n\t\t\t}\n\t\t}\n\t\tst[++tp] = now, SMT::update(1, 1, n, 1, i, -1);\n\t}\n\trt = st[tp];\n}\n\n// \u4e0a\u9762\u662f\u6790\u5408\u6811\u5efa\u6811\u90e8\u5206\u3002\n\n// \u9884\u5904\u7406\u500d\u589e\u6570\u7ec4 f\uff0c\u5b50\u6811\u548c size\uff0c\u524d\u7f00\u540e\u7f00\u548c pre\uff0csuf\u3002\nvoid dfs(int u, int fa) {\n\tf[u][0] = fa, dep[u] = dep[fa] + 1;\n\tsze[u] = typ[u]? ((int)son[u].size() * ((int)son[u].size() - 1) / 2) : (1);\n\tfor(int i = 1; i <= 19; i++) f[u][i] = f[f[u][i - 1]][i - 1];\n\tint tmp = 0;\n\tfor(int i = 0; i < son[u].size(); i++) {\n\t\tint v = son[u][i];\n\t\tdfs(v, u), sze[u] += sze[v], pre[v] = tmp + (typ[u]? S(i) : 0), tmp += sze[v], sum[v] = tmp, rk[v] = i + 1;\n\t}\n\ttmp = 0;\n\tfor(int i = (int)son[u].size() - 1; i >= 0; i--) { \n\t\tint v = son[u][i]; suf[v] = tmp + (typ[u]? S((int)son[u].size() - 1 - i) : 0), tmp += sze[v];\n\t}\n}\n\n// \u6811\u4e0a\u524d\u7f00\u548c\nvoid df5(int u, int fa) {\n\tpre[u] += pre[fa], suf[u] += suf[fa];\n\tfor(int i = 0; i < son[u].size(); i++) { int v = son[u][i]; df5(v, u); }\n}\n\nint GetLCA(int x, int y) {\n\tif(dep[x] < dep[y]) swap(x, y);\n\tfor(int i = 19; i >= 0; i--) if(dep[f[x][i]] >= dep[y]) x = f[x][i];\n\tif(x == y) return x;\n\tfor(int i = 19; i >= 0; i--) if(f[x][i] ^ f[y][i]) x = f[x][i], y = f[y][i];\n\treturn f[x][0];\n}\n\nint jump(int x, int y) {\n\tfor(int i = 19; i >= 0; i--) if(dep[f[x][i]] > dep[y]) x = f[x][i];\n\treturn x;\n}\n\n// \u67e5\u8be2\u5de6\u53f3\u7aef\u70b9\u90fd\u5e73\u51e1\u7684\u60c5\u51b5\nint query(int l, int r) {\n\tint lca = GetLCA(id[l - 1], id[r + 1]), x = jump(id[l - 1], lca), y = jump(id[r + 1], lca);\n\tint res = suf[id[l - 1]] - suf[x] + pre[id[r + 1]] - pre[y] + sum[y] - sum[x] - sze[y];\n\tif(typ[lca] == 1) res += S(rk[y] - rk[x] - 1);\n\treturn res;\n}\n\n// \u67e5\u8be2\u4e24\u79cd\u7279\u6b8a\u60c5\u51b5\nint queryPre(int r) {\n\tint x = jump(id[r + 1], rt);\n\treturn pre[id[r + 1]] - pre[x] + sum[x] - sze[x] + (typ[rt]? S(rk[x] - 1) : 0);\n}\n\nint querySuf(int l) {\n\tint x = jump(id[l - 1], rt);\n\treturn suf[id[l - 1]] - suf[x] + sum[(int)son[rt][son[rt].size() - 1]] - sum[x] + (typ[rt]? S(son[rt].size() - rk[x]) : 0);\n}\n\nsigned main() {\n\tn = get();\n\tfor(int i = 1; i <= n; i++) a[i] = get();\n\tRMQ::init(), build();\n\tfor(int i = 1; i <= cnt; i++) sort(son[i].begin(), son[i].end(), [](int x, int y) { return L[x] < L[y]; });\n\tdfs(rt, 0);\n\tdf5(rt, 0);\n\tm = get();\n\twhile(m--) {\n\t\tint l = get(), r = get();\n\t\tif(l == 1 && r == n) printf(\"%lld\\n\", sze[rt]); // \u56e0\u4e3a\u61d2\u5f97\u52a0\u54e8\u5175\u6240\u4ee5\u52a0\u4e86\u4e00\u5806\u5206\u7c7b\u8ba8\u8bba\n\t\telse if(l != 1 && r == n) printf(\"%lld\\n\", querySuf(l));\n\t\telse if(l == 1 && r != n) printf(\"%lld\\n\", queryPre(r));\n\t\telse printf(\"%lld\\n\", query(l, r));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1616591002,
        "uid": 92254,
        "name": "Social_Zhao",
        "ccfLevel": 9,
        "title": "CF997E Good Subsegments"
    },
    {
        "content": "\u53ef\u4ee5\u5148\u505a\u4e00\u4e0b\u5f31\u5316\u7248\uff1a[CF526F Pudding Monsters](https://www.luogu.com.cn/problem/CF526F)\uff0c\u90a3\u9053\u9898\u662f\u672c\u9898\u7684\u57fa\u7840\u3002\n\n\u7531\u4e8e\u8fd9\u662f\u4e2a\u6392\u5217\uff0c\u56e0\u6b64\u597d\u533a\u95f4\u53ef\u4ee5\u8f6c\u5316\u4e3a\u6ee1\u8db3 $max - min = r - l$ \u7684\u533a\u95f4\u3002\u5176\u4e2d $max,min$ \u5206\u522b\u8868\u793a\u533a\u95f4\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c$l,r$ \u5206\u522b\u8868\u793a\u533a\u95f4\u5de6\u53f3\u7aef\u70b9\u3002\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e $r$\uff0c\u90a3\u4e48\u9650\u5236\u53d8\u4e3a $max - min + l = r$\u3002\u53c8\u56e0\u4e3a\u5bf9\u4e8e\u6240\u6709\u533a\u95f4\uff0c\u90fd\u6709 $max - min >= r - l$\uff0c\u6240\u4ee5\u597d\u533a\u95f4\u53ef\u4ee5\u8f6c\u5316\u4e3a\u201c\u4ee5 $r$ \u4e3a\u53f3\u7aef\u70b9\uff0c\u4e14 $max - min + l$ \u6700\u5c0f\u5de6\u7aef\u70b9\u7684\u4e2a\u6570\u201d\u3002\n\n\u6211\u4eec\u4ece\u5de6\u5f80\u53f3\u626b\u4e00\u904d\uff0c\u7528\u5355\u8c03\u6808\u548c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6700\u503c\uff0c\u626b\u7684\u65f6\u5019\u987a\u4fbf\u7edf\u8ba1\u4e00\u4e0b\u5168\u5c40\u6700\u5c0f\u503c\u4e2a\u6570\uff0c\u8fd9\u5c31\u662f\u524d\u9762\u90a3\u9053\u9898\u7684\u505a\u6cd5\u3002\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u79bb\u7ebf\uff0c\u5c06\u8be2\u95ee\u6302\u5230\u53f3\u7aef\u70b9\uff0c\u201c\u5b50\u533a\u95f4\u201d\u8f6c\u5316\u4e3a\u201c\u524d\u7f00\u7684\u540e\u7f00\u201d\u3002\u5982\u679c\u53ea\u8003\u8651\u4e00\u4e2a\u524d\u7f00\u7684\u6240\u6709\u540e\u7f00\u7684\u7b54\u6848\uff0c\u8fd9\u9898\u53ea\u4e0d\u8fc7\u591a\u9650\u5236\u5de6\u7aef\u70b9\u7684\u8303\u56f4\uff0c\u4e0d\u80fd\u5c0f\u4e8e $L$\uff0c\u8fd9\u4e2a\u597d\u8bf4\uff0c\u67e5\u5168\u5c40\u6700\u5c0f\u503c\u4e2a\u6570\u6539\u4e3a\u67e5\u533a\u95f4\u6700\u5c0f\u503c\u4e2a\u6570\u5373\u53ef\u3002\u518d\u8003\u8651\u6240\u6709\u524d\u7f00\u7684\u8d21\u732e\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u76f4\u63a5\u5728\u7ebf\u6bb5\u6811\u4e0a\u6253\u201c\u5386\u53f2\u8d21\u732e\u201d\u7684\u6807\u8bb0\uff0c\u67e5\u8be2\u5c31\u628a\u8282\u70b9\u7684\u201c\u5386\u53f2\u8d21\u732e\u201d\u52a0\u548c\u5373\u53ef\u3002\n\n\u603b\u7ed3\u4e00\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u652f\u6301\u533a\u95f4\u52a0\uff0c\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u5386\u53f2\u8d21\u732e\u3002\u8fd8\u9700\u8981\u4fe9\u5355\u8c03\u6808\uff0c\u7ef4\u62a4\u6700\u5927\u6700\u5c0f\u503c\uff0c\u5e76\u5728\u7ebf\u6bb5\u6811\u4e0a\u8fdb\u884c\u64cd\u4f5c\u3002\n\n\u7ec6\u8282\u770b\u4ee3\u7801\u5427\u3002\n\n$Code:$\n\n```cpp\n#define N 201000\n#define NN 801000\n#define int long long\ntemplate <typename T> inline void read(T &x) {\n\tx = 0; char c = getchar(); bool flag = false;\n\twhile (!isdigit(c)) { if (c == '-')\tflag = true; c = getchar(); }\n\twhile (isdigit(c)) { x = (x << 1) + (x << 3) + (c ^ 48); c = getchar(); }\n\tif (flag)\tx = -x;\n}\nusing namespace std;\nconst int inf = 987654321;\nint n;\nint h[N];\nstruct edge{\n\tint nxt, to, id;\n}e[N];\nint head[N], ecnt;\ninline void addedge(int from, int to, int id) {//\u90bb\u63a5\u8868\u6302\u8be2\u95ee\n\te[++ecnt] = (edge){head[from], to, id};\n\thead[from] = ecnt;\n}\nint ans[N];\n\nstruct node {\n\tint mn, cnt;\n\tnode(int mnn = inf, int cntt = 0) { mn = mnn, cnt = cntt; }\n\tnode operator +(const node a) const {\n\t\treturn node(min(mn, a.mn), mn == a.mn ? cnt + a.cnt : (mn < a.mn ? cnt : a.cnt));\n\t}\n}nd[NN];\nint ls[NN], rs[NN], atag[NN], ctag[NN], res[NN], root, ttot;\nvoid build(int L, int R, int &cur) {\n\tcur = ++ttot;\n\tif (L == R)\treturn ;\n\tint mid = (L + R) >> 1;\n\tbuild(L, mid, ls[cur]);\n\tbuild(mid + 1, R, rs[cur]);\n}\ninline void pushup(int cur) {\n\tnd[cur] = nd[ls[cur]] + nd[rs[cur]];\n}\ninline void pusha(int cur, int v) {//\u6253\u52a0\u6cd5\u6807\u8bb0\n\tif (!cur)\treturn ;\n\tnd[cur].mn += v;\n\tatag[cur] += v;\n}\ninline void pushc(int cur, int mn, int c) {//\u6253\u5386\u53f2\u6807\u8bb0\n\tif (!cur || nd[cur].mn != mn)\treturn ;\n    //\u53ea\u6709\u513f\u5b50\u6700\u5c0f\u503c\u548c\u7236\u4eb2\u76f8\u540c\u65f6\u624d\u80fd\u7ee7\u627f\u8d21\u732e\n\tres[cur] += nd[cur].cnt * c;\n\tctag[cur] += c;\n}\ninline void pushdown(int cur) {//\u4e0b\u653e\u6807\u8bb0\u3002\u6ce8\u610f\u987a\u5e8f\n\tif (atag[cur])\n\t\tpusha(ls[cur], atag[cur]), pusha(rs[cur], atag[cur]), atag[cur] = 0;\n\tif (ctag[cur])\n\t\tpushc(ls[cur], nd[cur].mn, ctag[cur]), \n\t\tpushc(rs[cur], nd[cur].mn, ctag[cur]), \n\t\tctag[cur] = 0;\n}\nvoid modify(int L, int R, int l, int r, int v, int cur) {//\u533a\u95f4\u52a0\n\tif (l <= L && R <= r) {\n\t\tpusha(cur, v);\n\t\treturn ;\n\t}\n\tpushdown(cur);\n\tint mid = (L + R) >> 1;\n\tif (l <= mid)\tmodify(L, mid, l, r, v, ls[cur]);\n\tif (r > mid)\tmodify(mid + 1, R, l, r, v, rs[cur]);\n\tpushup(cur);\n}\nvoid modify(int L, int R, int pos, int v, int cur) {//\u5355\u70b9\u4fee\u6539\n\tif (L == R)\treturn nd[cur] = (node){v, 1}, void();\n\tpushdown(cur);\n\tint mid = (L + R) >> 1;\n\tif (pos <= mid)\tmodify(L, mid, pos, v, ls[cur]);\n\telse\tmodify(mid + 1, R, pos, v, rs[cur]);\n\tpushup(cur);\n}\nint query(int L, int R, int l, int r, int cur) {\n\tif (l <= L && R <= r)\treturn res[cur];\n\tpushdown(cur);\n\tint mid = (L + R) >> 1, tmp = 0;\n\tif (l <= mid)\ttmp = query(L, mid, l, r, ls[cur]);\n\tif (r > mid)\ttmp += query(mid + 1, R, l, r, rs[cur]);\n\treturn tmp;\n}\n\nstruct Seg {//\u5355\u8c03\u6808\n\tint l, r, v;//l ~ r \u7684\u6700\u503c\u90fd\u662f v\n\tSeg(int ll = 0, int rr = 0, int vv = 0) { l = ll, r = rr, v = vv; }\n\tbool operator <(const Seg a) const {\n\t\treturn v < a.v;\n\t}\n\tbool operator >(const Seg a) const {\n\t\treturn v > a.v;\n\t}\n}smx[N], smn[N];\nint mxtop, mntop;\n\nsigned main() {\n\tread(n);\n\tfor (register int i = 1; i <= n; ++i)\tread(h[i]);\n\tint q; read(q);\n\tfor (register int i = 1; i <= q; ++i) {\n\t\tint l, r; read(l), read(r);\n\t\taddedge(r, l, i);\n\t}\n\tbuild(1, n, root);\n\tfor (register int i = 1; i <= n; ++i) {\n    \t//\u7ef4\u62a4\u6700\u503c\n\t\tSeg s(i, i, h[i]);\n\t\twhile (mxtop && s > smx[mxtop])\n\t\t\tmodify(1, n, smx[mxtop].l, smx[mxtop].r, h[i] - smx[mxtop].v, root),\n\t\t\ts.l = smx[mxtop].l, --mxtop;\n\t\tsmx[++mxtop] = s;\n\t\t\n\t\ts = Seg(i, i, h[i]);\n\t\twhile (mntop && s < smn[mntop])\n\t\t\tmodify(1, n, smn[mntop].l, smn[mntop].r, -h[i] + smn[mntop].v, root),\n\t\t\ts.l = smn[mntop].l, --mntop;\n\t\tsmn[++mntop] = s;\n\t\t\n\t\tmodify(1, n, i, i, root);//\u63d2\u5165\u65b0\u70b9\n\t\t\n\t\tpushc(root, i, 1);//\u5c06\u5f53\u524d\u7684\u5408\u6cd5\u533a\u95f4\u8ba1\u5165\u8d21\u732e\n\t\tfor (register int j = head[i]; j; j = e[j].nxt) {\n\t\t\tint l = e[j].to, id = e[j].id;\n\t\t\tans[id] = query(1, n, l, i, root);\n\t\t}\n\t}\n\tfor (register int i = 1; i <= q; ++i)\n\t\tprintf(\"%lld\\n\", ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1595767516,
        "uid": 221897,
        "name": "jiazhaopeng",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF997E \u3010Good Subsegments\u3011"
    },
    {
        "content": "### \u6b6a\u89e3\n\n\u4e00\u4e2a\u663e\u7136\u7684 observation \u662f\u533a\u95f4 $l,r$ \u5408\u6cd5\u5f53\u4e14\u4ec5\u5f53 $mx_r-mx_l=r-l$\u3002\u4e00\u5f00\u59cb\u60f3\u8fd9\u9898\u7684\u65f6\u5019\u611f\u89c9\u8fd9\u4e1c\u897f\u6839\u672c\u4e0d\u53ef\u7ef4\u62a4\u597d\u5427\u2026\u2026\u90a3\u5c31\u5f00\u59cb\u60f3\u4e00\u4e9b\u5947\u602a\u7684\u6570\u636e\u7ed3\u6784\u9898\u7684\u7b97\u6cd5\uff08\u6bd4\u5982\u79bb\u7ebf\u5206\u6cbb\u6216\u8005\u6839\u53f7\u7b97\u6cd5\u6216\u8005\u6570\u636e\u5206\u6cbb\uff09\uff0c\u7136\u540e\u60f3\u5230\u4e86\u5206\u5757\u3002\u5c31~~\u6109\u5feb\u5730~~\u5f00\u59cb\u7528\u5206\u5757\u505a\u5566\uff081.2e5 7s \u611f\u89c9\u5f88\u53ef\u884c\uff09\uff01\n\n\u8bbe\u6bcf\u5757\u5927\u5c0f $S$\u3002\u90a3\u4e48\u5206\u6210\u5de6\u8fb9\u96f6\u6563\u7684\u3001\u53f3\u8fb9\u96f6\u6563\u7684\u3001\u4e2d\u95f4\u6574\u5757\u4e09\u6bb5\uff0c\u5206\u522b\u8bb0\u4e3a L\u3001R\u3001M\u3002\u8bbe XY\uff08\u4e0d\u662f\u67d3\u8272\u4f53\u5566\uff09\u8868\u793a\u5de6\u7aef\u70b9\u5728 X\uff0c\u53f3\u7aef\u70b9\u5728 Y\uff0c\u5219\u603b\u5171\u5206\u6210 6 \u79cd\u8d21\u732e\uff1aLL\u3001LM\u3001LR\u3001MM\u3001MR\u3001RR\u3002\u7136\u540e\u8fd8\u6709\u8be2\u95ee\u4e2d\u7684 $l,r$ \u5728\u540c\u4e00\u5757\u7684\u7279\u6b8a\u60c5\u51b5\u3002\u4ee5\u53ca MM \u7684\u8d21\u732e\u53c8\u5206\u6210\u540c\u5757\u548c\u4e0d\u540c\u5757\u3002\n\nLL \u662f\u67d0\u4e00\u5757\u7684\u540e\u7f00\uff0cRR \u662f\u67d0\u4e00\u5757\u7684\u524d\u7f00\uff0c$l,r$ \u5728\u540c\u4e00\u5757\u662f\u67d0\u4e00\u5757\u7684\u5b50\u533a\u95f4\uff0cMM \u7684\u7b2c\u4e00\u90e8\u5206\u662f\u6574\u5757\u3002\u8fd9\u56db\u8005\u4e2d\u7b2c\u4e09\u8005\u6700\u5f3a\uff0c\u89e3\u51b3\u5b83\u5c31\u89e3\u51b3\u6240\u6709\u7684\u4e86\u3002\u8fd9\u5176\u5b9e\u5f88\u5bb9\u6613\u9884\u5904\u7406\uff1a\u6709 $n$ \u4e2a\u4f4d\u7f6e\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u5f80\u53f3\u8fb9\u6700\u591a\u53bb $S$ \u683c\uff0c\u6240\u4ee5\u53ea\u6709 $\\mathrm O(nS)$ \u4e2a\u503c\u8981\u9884\u5904\u7406\uff0c\u9700\u8981\u5747\u644a\u5e38\u6570\u3002\u90a3\u5bf9\u4e8e\u6bcf\u5757\u66b4\u529b\u679a\u4e3e\u51fa\u6765\u6240\u6709\u5408\u6cd5\u533a\u95f4\uff08\u5982\u4f55 $\\mathrm O(1)$ \u5224\uff1fST \u8868\u7ef4\u62a4 rmq \u5373\u53ef\uff09\uff0c\u7136\u540e\u8ba1\u7b97\u8be5\u5757\u5185\u7684\u5b50\u533a\u95f4\u5185\u6709\u591a\u5c11\u4e2a\u5408\u6cd5\u5b50\u533a\u95f4\uff0c\u5c31\u662f\u4e2a\u4e8c\u7ef4\u524d\u7f00\u548c\u7684\u4e8b\u60c5\u4e86\u3002\u590d\u6742\u5ea6 $\\mathrm O\\!\\left(\\dfrac nSS^2\\right)=\\mathrm O(nS)$\u3002\n\n\u5269\u4e0b\u4e2d\u7684 LM\u3001MR \u662f\u4e0d\u5b8c\u6574\u7684\u5757\u5bf9\u6574\u5757\u7684\u8d21\u732e\uff0cMM \u7684\u7b2c\u4e8c\u90e8\u5206\u662f\u5b8c\u6574\u7684\u5757\u5bf9\u5b8c\u6574\u7684\u5757\u7684\u8d21\u732e\uff0c\u8c8c\u4f3c\u524d\u8005\u8981\u5f3a\u4e00\u70b9\u3002\u8003\u8651\u5230\u4e00\u822c\u5206\u5757\u5bf9\u4e0d\u5b8c\u6574\u5757\u7684\u5904\u7406\u529e\u6cd5\u90fd\u662f\u66b4\u529b\u679a\u4e3e\uff0c\u6211\u4eec\u8fd9\u91cc\u4e5f\u5c1d\u8bd5\u8fd9\u6837\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u5bf9\u6bcf\u4e2a\u5757\u7684\u8d21\u732e\uff08\u7136\u540e\u5bf9\u5757\u7684\u90a3\u4e00\u7ef4\u6c42\u524d\u7f00\u548c\uff0c\u8fd9 extremely easy\uff09\u5373\u53ef\uff0c\u8fd9\u53ea\u6709 $\\mathrm O\\!\\left(n\\dfrac nS\\right)=\\mathrm O\\!\\left(\\dfrac{n^2}S\\right)$ \u4e2a\u503c\u8981\u8ba1\u7b97\uff08\u540c\u6837\u9700\u8981\u5747\u644a\u5e38\u6570\uff08\u6216 log\uff1f\uff09\u256e(\u256f\u25bd\u2570)\u256d\uff09\u3002\u5982\u679c\u8fd9\u4e2a\u80fd\u89e3\u51b3\uff0c\u90a3\u4e48\u5bf9\u4e8e MM \u7684\u7b2c\u4e8c\u90e8\u5206\uff0c\u53ea\u9700\u8981\u6839\u636e\u9884\u5904\u7406\u51fa\u6765\u7684\u4e1c\u897f\u518d\u9884\u5904\u7406\u5757\u5bf9\u5757\u7684\u8d21\u732e\u7684\u524d\u7f00\u548c\u5373\u53ef\uff0c\u8fd9\u662f easy \u7684\uff1b\u4ee5\u53ca\u5bf9 LR \u53ef\u4ee5\u7528\u7c7b\u4f3c\u7684\u65b9\u6cd5\u73b0\u573a\u641e\u3002\u6240\u4ee5\u63a5\u4e0b\u6765\u7684\u4efb\u52a1\u5c31\u662f\u5168\u5fc3\u5168\u610f\u60f3\u529e\u6cd5\u9884\u5904\u7406\u8fd9\u4e2a\u4e1c\u897f\u3002\n\n\u8003\u8651\u679a\u4e3e\u4e24\u4e2a\u5757\uff0c\u8ba1\u7b97\u5de6\u8fb9\u5757\u7684\u5143\u7d20\u5bf9\u53f3\u8fb9\u6574\u5757\u7684\u8d21\u732e\uff08\u5f53\u7136\u53cd\u8fc7\u6765\u4e5f\u8981\u8ba1\u7b97\uff0c\u4e0e\u524d\u8005\u8fc7\u7a0b\u7c7b\u4f3c\uff0c\u8fd9\u91cc\u4ee5\u524d\u8005\u4e3e\u4f8b\uff09\u3002\u8fd9\u4e1c\u897f\u5176\u5b9e\u5f88\u50cf cdq \u5206\u6cbb\u7684\u5904\u7406\u7684\u6838\u5fc3\u90e8\u5206\uff0c\u4ece\u4e2d\u95f4\u5207\u4e86\u4e00\u5200\uff0c\u53ea\u80fd\u5de6\u8fb9\u5411\u53f3\u8fb9\u8d21\u732e\uff0c\u5c31\u5f88\u8212\u9002\u3002\u90a3\u4e48\u628a\u4e24\u5757\u4e2d\u95f4\u4e00\u90e8\u5206\u7684 max / min \u641e\u51fa\u6765\u6df7\u5230\u4e24\u8fb9\uff0c\u4e24\u5757\u4e2d\u7684\u5143\u7d20\u7684 $mx_i$ \u8868\u793a\u8be5\u4f4d\u7f6e\u5230\u4e2d\u95f4\u7684 max\uff0c$mn_i$ \u7c7b\u4f3c\uff0c\u90a3\u4e48\u6613\u8bc1\u4e24\u8005\u5728\u4e24\u5757\u4e0d\u540c\u65b9\u5411\u7684\u5355\u8c03\u6027\u3002\u90a3\u4e48\u5de6\u8fb9\u7684 $i$ \u548c\u53f3\u8fb9\u7684 $j$ \u6ee1\u8db3\u6761\u4ef6\u5f53\u4e14\u4ec5\u5f53 $\\max(mx_i,mx_j)-\\min(mn_i,mn_j)=j-i$\u3002\n\n\u7531\u4e8e\u5de6\u5757\u8981\u7ec6\u5316\u5230\u6bcf\u4e2a\u5143\u7d20\uff0c\u6240\u4ee5\u80af\u5b9a\u4ece\u4e2d\u95f4\u5f80\u5de6\u8fb9\u679a\u4e3e\u5de6\u5757\u7684\u5143\u7d20\u3002\u8fd9\u65f6\u5019\u5bf9\u4e0a\u5f0f\u7684\u5904\u7406\uff0c\u53ef\u4ee5\u5206\u6210 $mx_i?mx_j,mn_i?mn_j$ \u56db\u7c7b\uff0c\u5206\u522b\u53ef\u4ee5\u5217\u51fa $f(j)=g(i)$ \u7684\u5f0f\u5b50\u3002\u90a3\u5c31\u628a\u56db\u7c7b\u5206\u522b\u5bf9\u5e94\u7684 $f(j)$ \u5168\u90e8\u88c5\u5728\u6876\u91cc\u3002\u53c8\u6839\u636e\u5355\u8c03\u6027\uff0c\u53ef\u4ee5 two-pointers \u597d\u5427\u3002\u4f46\u662f\u8fd9\u4e00\u90e8\u5206\u5e38\u6570\u771f\u7684\u5f88\u5927\u5f88\u5927\uff08\u4f60\u60f3\u60f3\uff0c\u56db\u7c7b\uff0c\u8fd8 `vector`\uff09\uff08\u4f46\u662f\u53ef\u4ee5\u8c03\u53c2\u4e0d\u662f\u4e48\uff0c\u800c\u4e14 TL = 7s\uff0c\u65b9\u4e2a hammer class\uff09\uff0c\u4e5f\u5f88\u96be\u5199\u5f88\u96be\u5199\uff0c\u80fd\u628a\u4eba\u641e\u5d29\u6e83\u7684\u597d\u5427\uff08\u867d\u7136\u6211\u6ca1\u5d29\u6e83\uff09\u3002\n\n\u590d\u6742\u5ea6 $\\mathrm O\\!\\left(nS+\\dfrac{n^2}S+qS\\right)$\uff08$qS$ \u662f\u56e0\u4e3a LR \u4eff\u7167\u4e0a\u9762\u9884\u5904\u7406\u7684\u65b9\u5f0f\u73b0\u573a\u641e\uff09\uff0c\u5148\u8bbe\u4e2a $S=\\sqrt n$ \u518d\u8bf4\u3002\u7136\u540e\u8003\u8651\u5b9e\u73b0\u7ec6\u8282\u3002\u9996\u5148\u4e0a\u9762\u9884\u5904\u7406\u4e86\u4e24\u4e2a $\\mathrm O(n\\sqrt n)$ \u7684\u6570\u7ec4\u662f\u5427\uff0c\u5c31\u7b97\u5f00\u4e86 `int` instead of `long long`\uff0c\u4e5f 540MB \u5de6\u53f3\uff0c\u8d85\u8fc7\u4e86 ML = 512MB\u3002\u4f46\u662f\u4f60\u53d1\u73b0\u7b2c\u4e00\u4e2a\u6570\u7ec4\u5176\u5b9e\u53ea\u7528\u4e86 1/2\uff08\u56e0\u4e3a\u533a\u95f4\u6709 $l\\leq r$ \u7684\u9650\u5236\u5bf9\u5427\uff09\uff0c\u90a3\u5c31\u6620\u5c04\u4e00\u4e0b\uff0c\u4eca\u540e\u7a7a\u95f4\u4e0d\u6210\u95ee\u9898\u3002\u7136\u540e\u5361\u5e38\u3002\u6ce8\u610f\u5230\u4e0a\u9762\u8fd9\u4e2a\u5e38\u6570\u5f88\u5927\u7684\u90e8\u5206\u8981\u7b97\u4e24\u904d\uff08\u5de6\u5bf9\u53f3 and vice versa\uff09\uff0c\u800c\u73b0\u573a\u641e\u53ea\u9700\u8981\u641e\u4e00\u904d\uff0c\u90a3\u4e48 $S$ \u5e94\u8be5\u7a0d\u5927\u4e00\u70b9\uff08\u6b64\u5904\u8ba4\u4e3a $n=q$\uff08\uff1f\uff09\uff09\uff0c\u5927\u6982\u662f\u7ffb\u4e2a $\\sqrt 2$ \u500d\u7684\u6837\u5b50\u5427\u3002\u7ecf\u8fc7\u4e0d\u61c8\u7684\u5c1d\u8bd5\uff0c\u5728 $S=1.618\\sqrt n$ \u5f00 Ofast\uff08O3 \u90fd\u4e0d\u884c hh\uff09\u7684\u60c5\u51b5\u4e0b\u4ee5 6988ms \u7684\u8fd0\u884c\u65f6\u95f4 A \u6389\u4e86\u3002\n\n```cpp\n#pragma GCC optimize(\"Ofast\")\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define pb push_back\nconst int inf=0x3f3f3f3f3f3f3f3f;\nconst int N=150000,LOG_N=20,SZ=800,SZ0=250;\nint n,qu,sz,sz1;\nint a[N];\nstruct stable{\n\tsigned mn[N][LOG_N],mx[N][LOG_N],_log[N];\n\tvoid init(){\n\t\tfor(int i=2;i<=n;i++)_log[i]=_log[i-1]+(i==1<<_log[i-1]+1);\n\t\tfor(int i=1;i<=n;i++)mn[i][0]=mx[i][0]=a[i];\n\t\tfor(int j=1;j<LOG_N;j++)for(int i=1;i+(1<<j)-1<=n;i++)\n\t\t\tmn[i][j]=min(mn[i][j-1],mn[i+(1<<j-1)][j-1]),mx[i][j]=max(mx[i][j-1],mx[i+(1<<j-1)][j-1]);\n\t}\n\tint _mn(int l,int r){\n\t\tif(l>r)return inf;\n\t\tint log0=_log[r-l+1];\n\t\treturn min(mn[l][log0],mn[r-(1<<log0)+1][log0]);\n\t}\n\tint _mx(int l,int r){\n\t\tif(l>r)return -inf;\n\t\tint log0=_log[r-l+1];\n\t\treturn max(mx[l][log0],mx[r-(1<<log0)+1][log0]);\n\t}\n}st;\nsigned inside[N][SZ/2];\nint Sum[SZ][SZ];\nsigned cnt[N][SZ0];\nint mn[N],mx[N];\nvector<signed> xnl[3*N],nl[3*N],xl[3*N];\nshort xnl0[3*N],nl0[3*N],xl0[3*N];\nshort xnl1[3*N],nl1[3*N],xl1[3*N];\nint eqrg(vector<signed> ll[],short l0[],short l1[],int l,int r,int v){\n\twhile(l0[v]+1<ll[v].size()&&ll[v][l0[v]+1]<l)l0[v]++;\n\twhile(l1[v]+1<ll[v].size()&&ll[v][l1[v]+1]<=r)l1[v]++;\n\treturn max(0,l1[v]-l0[v]);\n}\nint eqrg0(vector<signed> ll[],short l0[],short l1[],int l,int r,int v){\n\twhile(l0[v]+1<ll[v].size()&&ll[v][l0[v]+1]>l)l0[v]++;\n\twhile(l1[v]+1<ll[v].size()&&ll[v][l1[v]+1]>=r)l1[v]++;\n\treturn max(0,l1[v]-l0[v]);\n}\nint rgcnt[SZ][SZ];\nsigned &id(int x,int len){\n\tint p=(x+sz1-1)/sz1;\n\tint l=sz1*(p-1)+1;\n\tx=x-l+1;\n\treturn inside[l][(sz1+sz1-x+2)*(x-1)/2+len];\n}\nsigned main(){\n//\tcout<<(sizeof(inside)+sizeof(cnt)+sizeof(st)+2*sizeof(Sum)+4*sizeof(xnl)+8*sizeof(xnl0))/1024/1024;\n//\tfreopen(\"read.in\",\"r\",stdin);\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)scanf(\"%lld\",a+i);\n//\tcout<<clock()<<\"!\\n\";\n\tst.init();\n\tsz1=1.618*sqrt(n),sz=(n+sz1-1)/sz1;\n\tfor(int i=1;i<=sz;i++){\n\t\tmemset(Sum,0,sizeof(Sum));\n\t\tint l=sz1*(i-1)+1,r=min(n,sz1*i);\n\t\tfor(int j=l;j<=r;j++)for(int k=j;k<=r;k++)if(st._mx(j,k)-st._mn(j,k)==k-j)Sum[j-l+1][k-l+1]=1;\n\t\tfor(int j=1;j<=r-l+1;j++)for(int k=1;k<=r-l+1;k++)Sum[j][k]+=Sum[j-1][k]+Sum[j][k-1]-Sum[j-1][k-1];\n\t\tfor(int j=l;j<=r;j++)for(int k=j;k<=r;k++)id(j,k-j+1)=Sum[r-l+1][k-l+1]-Sum[j-l][k-l+1];\n\t}\n//\tfor(int i=1;i<=n;i++)for(int j=1;j<=sz1;j++)printf(\"inside[%lld][%lld]=%lld\\n\",i,j,inside[i][j]);\n\t#define mem(x) memset(x,-1,sizeof(x))\n\tmem(xnl0),mem(nl0),mem(xl0),mem(xnl1),mem(nl1),mem(xl1);\n\tfor(int i=1;i<=sz;i++)for(int j=i+1;j<=sz;j++){//remember to make it first\n\t\tint l1=sz1*(i-1)+1,r1=min(n,sz1*i),l2=sz1*(j-1)+1,r2=min(n,sz1*j);\n\t\tfor(int k=l1;k<=r1;k++)mn[k]=st._mn(k,l2-1),mx[k]=st._mx(k,l2-1);\n\t\tfor(int k=l2;k<=r2;k++)mn[k]=st._mn(r1+1,k),mx[k]=st._mx(r1+1,k);\n\t\tfor(int k=l2;k<=r2;k++)xnl[mx[k]-mn[k]-k+2*N].pb(k),nl[-mn[k]-k+2*N].pb(k),xl[mx[k]-k+2*N].pb(k);\n\t\tint now1=l2-1,now2=l2-1;\n\t\tfor(int k=r1;k>=l1;k--){\n\t\t\twhile(now1<r2&&mn[now1+1]>=mn[k])now1++;while(now2<r2&&mx[now2+1]<=mx[k])now2++;\n\t\t\tcnt[k][j]+=eqrg(xnl,xnl0,xnl1,max(now1+1,now2+1),inf,-k+2*N);\n\t\t\tcnt[k][j]+=eqrg(nl,nl0,nl1,now1+1,now2,-k-mx[k]+2*N);\n\t\t\tcnt[k][j]+=eqrg(xl,xl0,xl1,now2+1,now1,-k+mn[k]+2*N);\n\t\t\tcnt[k][j]+=l2<=k+mx[k]-mn[k]&&k+mx[k]-mn[k]<=min(min(now1,now2),r2);\n\t\t}\n\t\tfor(int k=l2;k<=r2;k++)xnl[mx[k]-mn[k]-k+2*N].clear(),nl[-mn[k]-k+2*N].clear(),xl[mx[k]-k+2*N].clear(),xnl0[mx[k]-mn[k]-k+2*N]=nl0[-mn[k]-k+2*N]=xl0[mx[k]-k+2*N]=xnl1[mx[k]-mn[k]-k+2*N]=nl1[-mn[k]-k+2*N]=xl1[mx[k]-k+2*N]=-1;\n\t}\n\tfor(int i=1;i<=sz;i++)for(int j=i+1;j<=sz;j++){//remember to make it first\n\t\tint l1=sz1*(i-1)+1,r1=min(n,sz1*i),l2=sz1*(j-1)+1,r2=min(n,sz1*j);\n\t\tfor(int k=l1;k<=r1;k++)mn[k]=st._mn(k,l2-1),mx[k]=st._mx(k,l2-1);\n\t\tfor(int k=l2;k<=r2;k++)mn[k]=st._mn(r1+1,k),mx[k]=st._mx(r1+1,k);\n\t\tfor(int k=r1;k>=l1;k--)xnl[mx[k]-mn[k]+k+N].pb(k),nl[-mn[k]+k+N].pb(k),xl[mx[k]+k+N].pb(k);\n\t\tint now1=r1+1,now2=r1+1;\n\t\tfor(int k=l2;k<=r2;k++){\n\t\t\twhile(now1>l1&&mn[now1-1]>=mn[k])now1--;while(now2>l1&&mx[now2-1]<=mx[k])now2--;\n\t\t\tcnt[k][i]+=eqrg0(xnl,xnl0,xnl1,min(now1-1,now2-1),0,k+N);\n\t\t\tcnt[k][i]+=eqrg0(nl,nl0,nl1,now1-1,now2,k-mx[k]+N);\n\t\t\tcnt[k][i]+=eqrg0(xl,xl0,xl1,now2-1,now1,k+mn[k]+N);\n\t\t\tcnt[k][i]+=max(l1,max(now1,now2))<=k-mx[k]+mn[k]&&k-mx[k]+mn[k]<=r1;\n\t\t}\n\t\tfor(int k=l1;k<=r1;k++)xnl[mx[k]-mn[k]+k+N].clear(),nl[-mn[k]+k+N].clear(),xl[mx[k]+k+N].clear(),xnl0[mx[k]-mn[k]+k+N]=nl0[-mn[k]+k+N]=xl0[mx[k]+k+N]=xnl1[mx[k]-mn[k]+k+N]=nl1[-mn[k]+k+N]=xl1[mx[k]+k+N]=-1;\n\t}\n\tfor(int i=1;i<=n;i++)for(int j=1;j<=sz+1;j++)cnt[i][j]+=cnt[i][j-1];\n//\tcout<<cnt[1][3]<<\"!\\n\";\n\tfor(int i=1;i<=sz;i++)for(int j=1;j<=sz+1;j++){\n\t\tint l1=sz1*(i-1)+1,r1=min(n,sz1*i);\n\t\tfor(int k=l1;k<=r1;k++)rgcnt[i][j]+=cnt[k][j];\n\t}\n\tcin>>qu;\n\twhile(qu--){\n\t\tint l,r;\n\t\tscanf(\"%lld%lld\",&l,&r);\n\t\tint pl=(l+sz1-1)/sz1,pr=(r+sz1-1)/sz1;\n\t\tif(pl==pr){printf(\"%d\\n\",id(l,r-l+1));continue;}\n\t\tint res=id(l,sz1*pl-l+1)+id(sz1*(pr-1)+1,r-sz1*(pr-1));\n\t\tfor(int i=pl+1;i<pr;i++)res+=id(sz1*(i-1)+1,sz1);\n\t\tfor(int i=pl+1;i<pr;i++)res+=rgcnt[i][pr-1]-rgcnt[i][i];\n\t\tfor(int i=l;i<=sz1*pl;i++)res+=cnt[i][pr-1]-cnt[i][pl];\n\t\tfor(int i=sz1*(pr-1)+1;i<=r;i++)res+=cnt[i][pr-1]-cnt[i][pl];\n\t\t\n\t\tint i=pl,j=pr,l1=l,r1=min(n,sz1*i),l2=sz1*(j-1)+1,r2=r;\n\t\tfor(int k=l1;k<=r1;k++)mn[k]=st._mn(k,l2-1),mx[k]=st._mx(k,l2-1);\n\t\tfor(int k=l2;k<=r2;k++)mn[k]=st._mn(r1+1,k),mx[k]=st._mx(r1+1,k);\n\t\tfor(int k=l2;k<=r2;k++)xnl[mx[k]-mn[k]-k+2*N].pb(k),nl[-mn[k]-k+2*N].pb(k),xl[mx[k]-k+2*N].pb(k);\n\t\tint now1=l2-1,now2=l2-1;\n\t\tfor(int k=r1;k>=l1;k--){\n\t\t\twhile(now1<r2&&mn[now1+1]>=mn[k])now1++;while(now2<r2&&mx[now2+1]<=mx[k])now2++;\n\t\t\tres+=eqrg(xnl,xnl0,xnl1,max(now1+1,now2+1),inf,-k+2*N);\n\t\t\tres+=eqrg(nl,nl0,nl1,now1+1,now2,-k-mx[k]+2*N);\n\t\t\tres+=eqrg(xl,xl0,xl1,now2+1,now1,-k+mn[k]+2*N);\n\t\t\tres+=l2<=k+mx[k]-mn[k]&&k+mx[k]-mn[k]<=min(min(now1,now2),r2);\n\t\t}\n\t\tfor(int k=l2;k<=r2;k++)xnl[mx[k]-mn[k]-k+2*N].clear(),nl[-mn[k]-k+2*N].clear(),xl[mx[k]-k+2*N].clear(),xnl0[mx[k]-mn[k]-k+2*N]=nl0[-mn[k]-k+2*N]=xl0[mx[k]-k+2*N]=xnl1[mx[k]-mn[k]-k+2*N]=nl1[-mn[k]-k+2*N]=xl1[mx[k]-k+2*N]=-1;\n\t\n\t\tprintf(\"%lld\\n\",res);\n\t}\n\treturn 0;\n}\n```\n\n### \u6b63\u89e3\n\n\u5b66\u4e86\u4e00\u4e0b\u6b63\u89e3\u5566\u3002\u4e0a\u9762\u6211\u7684\u6b6a\u89e3\u662f\u5728\u7ebf\u7684\u3002\u8003\u8651\u79bb\u7ebf\u4e0b\u6765\uff0c\u90a3\u5bf9\u8fd9\u4e2a\u533a\u95f4\u67e5\u8be2\u7684\u95ee\u9898\u5c31\u5f88\u81ea\u7136\u7684\u60f3\u5230\u626b\u63cf\u7ebf\u5566\u2014\u2014\u53f3\u7aef\u70b9\u9012\u589e\uff0c\u5b9e\u65f6\u7ef4\u62a4\u5de6\u7aef\u70b9\u4eec\u5904\u7684\u7b54\u6848\u3002\n\n\u9996\u5148\u4e00\u8def\u4e0a\uff0c$mx_{l,r},mn_{l,r}$ \u53ef\u4ee5\u5206\u522b\u7528\u5355\u8c03\u6808\u7ef4\u62a4\u76f8\u7b49\u6bb5\u3002\u6ce8\u610f\u4e00\u4e2a\u4e8b\u5b9e\uff1a\u76f4\u63a5\u7528\u5355\u8c03\u6808\u7ef4\u62a4\u4e8c\u5143\u7ec4 $(mx_{l,r},mn_{l,r})$ \u7684\u76f8\u7b49\u6bb5\u590d\u6742\u5ea6\u662f\u9519\u7684\uff01\u8fd9\u662f\u505a\u4e0d\u5230\u7684\u3002\n\n\u53cd\u6b63\u53ef\u4ee5\u505a\u5230\u5bf9 $(mx_{l,r}-mn_{l,r})-(r-l)$ \u8fd9\u4e2a\u5f0f\u5b50\u7684\u503c\u5173\u4e8e $l$ \u5b9e\u65f6\u7ef4\u62a4\u5566\uff1a\u524d\u4e24\u8005\u5355\u8c03\u6808 + \u533a\u95f4\u589e\u52a0\uff0c\u7b2c\u4e09\u8005\u533a\u95f4 -1\uff0c\u7b2c\u56db\u8005\u4e0d\u52a8\u5bf9\u5427\u3002\u5148\u8003\u8651\u53ea\u6c42\u53f3\u7aef\u70b9\u4e3a $r$\uff0c\u5de6\u7aef\u70b9\u4e3a $l\\sim r$ \u7684\u5408\u6cd5\u533a\u95f4\u4e2a\u6570\uff0c\u5c31\u5f52\u7ea6\u5230\u4e00\u4e2a\u7ecf\u5178\u95ee\u9898\uff1a\u533a\u95f4\u589e\u52a0\u3001\u533a\u95f4\u67e5\u8be2 $0$ \u7684\u4e2a\u6570\u3002\u5982\u679c\u6ca1\u6709\u7279\u6b8a\u6761\u4ef6\uff0c\u8fd9\u4e2a**\u5927\u6982**\u53ea\u80fd\u5206\u5757\u505a\u4e86\u5427\u3002\u4f46\u662f\u6709\u4e2a\u5f88 immortal \u7684 observation\uff1a$(mx_{l,r}-mn_{l,r})-(r-l)$ \u8fd9\u4e2a\u5f0f\u5b50\u6c38\u8fdc\u5927\u4e8e\u7b49\u4e8e $0$\u3002\u8bc1\u660e\u663e\u7136\uff0c\u4f46\u662f\u5f88\u96be\u89c2\u5bdf\u5230\u3002\u90a3\u6709\u4e86\u8fd9\u4e2a observation\uff0c$0$ \u7531\u5e73\u5e73\u65e0\u5947\u7684\u503c\u53d8\u6210\u4e86\u53ef\u80fd\u7684\u6700\u5c0f\u503c\uff0c\u90a3\u53ea\u9700\u8981\u6309\u7167 little elephant \u90a3\u9898\u7684 rng \u7684\u5957\u8def\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\u4ee5\u53ca\u6700\u5c0f\u503c\u51fa\u73b0\u6b21\u6570\u5373\u53ef\u3002\n\n\u4f46\u73b0\u5728\u8981\u6c42\u7684\u662f $[l,r]$ \u5185\u5408\u6cd5\u5b50\u533a\u95f4\u7684\u4e2a\u6570\u554a\u3002\u5982\u679c\u60f3\u8ba9\u4e4b\u524d\u7684\u601d\u8003\u6d3e\u4e0a\u7528\u573a\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fd9\u5176\u5b9e\u5c31\u662f\u6709\u53f2\u4ee5\u6765\uff08\u5373\u53f3\u7aef\u70b9\u4ece $l$ \u5230 $r$ \u9012\u589e\u7684\u8fd9\u6bb5\u65f6\u95f4\u91cc\uff09\uff0c$[l,r]$ \u533a\u95f4\u4e2d\u6bcf\u6b21\u67e5\u8be2\u5f97\u5230\u7684\u7b54\u6848\u7684\u603b\u548c\u3002\u54df\u543c\uff0c\u7ef4\u62a4\u5386\u53f2\u95ee\u9898\u6211\u53ef\u6765\u52b2\u4e86\uff0c\u8981\u77e5\u9053\u8fd9\u4e5f\u662f\u7ebf\u6bb5\u6811\u61d2\u6807\u8bb0\u64c5\u957f\u7ef4\u62a4\u7684\u4e1c\u897f\u3002\u6211\u4eec\u8003\u8651\u7ef4\u62a4\u7ebf\u6bb5\u6811\u4e0a\u6bcf\u4e2a\u8282\u70b9\u533a\u95f4\u5185\u7684**\u51fa\u73b0\u8fc7\u7684\u5386\u53f2\u6700\u5c0f\u503c\uff0c\u4ee5\u53ca\u8be5\u5386\u53f2\u6700\u5c0f\u503c\u51fa\u73b0\u8fc7\u7684\u5386\u53f2\u603b\u6b21\u6570**\u3002\n\n\u4f60\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u8fd9\u4e1c\u897f\u5f97\u6ee1\u8db3\uff1a\u53ef\u5408\u5e76\uff0c\u533a\u95f4\u4fee\u6539\u7684\u65f6\u5019\u5206\u5230\u5e95\u53ef\u4ee5\u5feb\u901f\u66f4\u65b0\uff0c\u80fd\u591f\u8bbe\u8ba1\u51fa\u53ef\u538b\u7f29\u7684\u61d2\u6807\u8bb0\u5e76\u4e14\u53ef\u4ee5\u5feb\u901f\u4e0b\u4f20\u3002\u7ef4\u62a4**\u5f53\u524d\u6700\u5c0f\u503c\uff0c\u5f53\u524d\u6700\u5c0f\u503c\u51fa\u73b0\u6b21\u6570\uff0c\u51fa\u73b0\u8fc7\u7684\u5386\u53f2\u6700\u5c0f\u503c\uff0c\u4ee5\u53ca\u8be5\u5386\u53f2\u6700\u5c0f\u503c\u51fa\u73b0\u8fc7\u7684\u5386\u53f2\u603b\u6b21\u6570**\uff0c\u7b2c\u4e00\u8005\u548c\u7b2c\u4e8c\u8005\u5b9e\u5728\u662f\u5f88\u5bb9\u6613\u597d\u5427\u3002\u8003\u8651\u7b2c\u4e09\u8005\uff0c\u601d\u8003\u4e00\u822c\u60c5\u51b5\uff1a\u5982\u679c\u4e00\u4e2a\u70b9\u5904\uff0c\u591a\u6b21\u4fee\u6539\u90fd\u4ee5\u5b83\u4e3a\u5206\u5230\u5e95\u7684\u533a\u95f4\u4e4b\u4e00\uff0c\u7559\u4e0b\u4e86\u591a\u4e2a\u61d2\u6807\u8bb0\u75d5\u8ff9\uff1b\u6709\u4e00\u5929\u6211\u8981\u4e0b\u4f20\u5b83\u7684\u61d2\u6807\u8bb0\u4e86\uff0c\u6211\u8be5\u5982\u4f55\u8bbe\u8ba1**\u53ef\u538b\u7f29**\u7684**\u53ef\u4e0b\u4f20\u7684**\u61d2\u6807\u8bb0\uff1f\n\n\u8003\u8651\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4efb\u610f\u65f6\u523b\u9700\u8981\u4e0b\u4f20\u7684\u662f\u4e00\u7cfb\u5217\u533a\u95f4\u52a0\u7684\u64cd\u4f5c\uff08\u4f46\u662f\u64cd\u4f5c\u5e8f\u5217\u592a\u5927\u4e86\uff09\uff0c\u663e\u7136\u53ea\u6709\u52a0\u7684\u503c\u662f\u91cd\u8981\u7684\uff0c\u8003\u8651\u8fd9\u4e2a\u52a0\u7684\u503c\u7684\u5e8f\u5217\u3002\u6ce8\u610f\u5230\u4efb\u610f\u65f6\u523b\uff0c\u7ebf\u6bb5\u6811\u5185\u7684\u4efb\u610f\u5904\u7684\u6700\u5c0f\u503c\u6c38\u8fdc $\\geq 0$ \u7684\u8fd9\u4e2a observation\uff0c\u90a3\u4e48\u6211\u8fd9\u4e2a\u5e8f\u5217\u7684\u67d0\u4e00\u5904\u524d\u7f00\u548c\u5982\u679c\u4e0d\u662f\u6700\u5c0f\uff0c\u90a3\u6b64\u65f6\u5fc5\u5b9a\u6574\u4e2a\u533a\u95f4\u6ca1\u6709 $0$\uff0c\u90a3\u5c31\u6ca1\u6709\u7528\u4e86\u3002\u4e5f\u5c31\u662f\u6211\u4eec\u53ea\u9700\u8981\u5173\u5fc3\u90a3\u4e9b\u524d\u7f00\u548c\u6700\u5c0f\u7684\u5730\u65b9\u3002\u4e8e\u662f\u6211\u4eec\u9700\u8981\u8bb0\u5f55\uff0c\u4ece\u4e0a\u4e00\u6b21\u61d2\u6807\u8bb0\u88ab\u4e0b\u4f20\u5230\u73b0\u5728\u7684\u61d2\u6807\u8bb0\u5e8f\u5217\u7684\u524d\u7f00\u548c\u4e2d\u6700\u5c0f\u7684\u662f\u591a\u5c11\uff0c\u4ee5\u53ca\u8fd9\u4e2a\u6700\u5c0f\u503c\u51fa\u73b0\u4e86\u591a\u5c11\u904d\u3002\u61d2\u6807\u8bb0\u8bbe\u8ba1\u51fa\u6765\u540e\uff0c\u4e00\u5207\u90fd easy \u4e86\u3002\n\n\u590d\u6742\u5ea6\u7ebf\u5bf9\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define mp make_pair\n#define X first\n#define Y second\nconst int inf=0x3f3f3f3f3f3f3f3f;\nconst int N=150000;\nint n,qu;\nint a[N];\npair<pair<int,int>,int> qry[N];\nbool cmp(pair<pair<int,int>,int> x,pair<pair<int,int>,int> y){return x.X.Y<y.X.Y;}\nint ans[N];\nstruct segtree{\n\tstruct node{int mn,tm,hmn,htm,lz,hlz,hlztm;}nd[N<<2];\n\t#define mn(p) nd[p].mn\n\t#define tm(p) nd[p].tm\n\t#define hmn(p) nd[p].hmn\n\t#define htm(p) nd[p].htm\n\t#define lz(p) nd[p].lz\n\t#define hlz(p) nd[p].hlz\n\t#define hlztm(p) nd[p].hlztm\n\tvoid bld(int l=1,int r=n,int p=1){\n\t\tmn(p)=hmn(p)=inf,tm(p)=htm(p)=r-l+1,lz(p)=hlz(p)=hlztm(p)=0;\n\t\tif(l==r)return;\n\t\tint mid=l+r>>1;\n\t\tbld(l,mid,p<<1),bld(mid+1,r,p<<1|1);\n\t}\n\tvoid init(){bld();}\n\tvoid sprup(int p){\n\t\tif(mn(p<<1)<mn(p<<1|1))mn(p)=mn(p<<1),tm(p)=tm(p<<1);\n\t\telse if(mn(p<<1)>mn(p<<1|1))mn(p)=mn(p<<1|1),tm(p)=tm(p<<1|1);\n\t\telse mn(p)=mn(p<<1),tm(p)=tm(p<<1)+tm(p<<1|1);\n\t\tif(hmn(p<<1)<hmn(p<<1|1))hmn(p)=hmn(p<<1),htm(p)=htm(p<<1);\n\t\telse if(hmn(p<<1)>hmn(p<<1|1))hmn(p)=hmn(p<<1|1),htm(p)=htm(p<<1|1);\n\t\telse hmn(p)=hmn(p<<1),htm(p)=htm(p<<1)+htm(p<<1|1);\n\t}\n\tvoid tag(int p,int v,int hv,int hvtm){\n\t\tif(mn(p)+hv<hmn(p))hmn(p)=mn(p)+hv,htm(p)=tm(p)*hvtm;\n\t\telse if(mn(p)+hv==hmn(p))htm(p)+=tm(p)*hvtm;\n\t\tmn(p)+=v;\n\t\tif(lz(p)+hv<hlz(p))hlz(p)=lz(p)+hv,hlztm(p)=hvtm;\n\t\telse if(lz(p)+hv==hlz(p))hlztm(p)+=hvtm;\n\t\tlz(p)+=v;\n\t}\n\tvoid sprdwn(int p){\n\t\ttag(p<<1,lz(p),hlz(p),hlztm(p)),tag(p<<1|1,lz(p),hlz(p),hlztm(p));\n\t\tlz(p)=hlz(p)=hlztm(p)=0;\n\t}\n\tvoid add(int l,int r,int v,int p=1,int tl=1,int tr=n){\n\t\tif(l<=tl&&r>=tr)return tag(p,v,v,1);\n\t\tsprdwn(p);\n\t\tint mid=tl+tr>>1;\n\t\tif(l<=mid)add(l,r,v,p<<1,tl,mid);\n\t\tif(r>mid)add(l,r,v,p<<1|1,mid+1,tr);\n\t\tsprup(p);\n\t}\n\tint h0(int l,int r,int p=1,int tl=1,int tr=n){\n\t\tif(l<=tl&&r>=tr)return hmn(p)==0?htm(p):0;\n\t\tsprdwn(p);\n\t\tint mid=tl+tr>>1,res=0;\n\t\tif(l<=mid)res+=h0(l,r,p<<1,tl,mid);\n\t\tif(r>mid)res+=h0(l,r,p<<1|1,mid+1,tr);\n\t\treturn res;\n\t}\n}segt;\nstack<pair<int,int> > mn,mx;\nsigned main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)scanf(\"%lld\",a+i);\n\tcin>>qu;\n\tfor(int i=1;i<=qu;i++)scanf(\"%lld%lld\",&qry[i].X.X,&qry[i].X.Y),qry[i].Y=i;\n\tsort(qry+1,qry+qu+1,cmp);\n\tsegt.init();\n//\tputs(\"ok\");\n\tmn.push(mp(0,0)),mx.push(mp(0,n+1));\n\tint now=0;\n\tfor(int i=1;i<=n;i++){\n\t\twhile(a[i]<mn.top().Y){\n\t\t\tint r=mn.top().X,v=mn.top().Y;mn.pop();int l=mn.top().X+1;\n\t\t\tsegt.add(l,r,abs(v-a[i]));\n\t\t}\n\t\twhile(a[i]>mx.top().Y){\n\t\t\tint r=mx.top().X,v=mx.top().Y;mx.pop();int l=mx.top().X+1;\n\t\t\tsegt.add(l,r,abs(v-a[i]));\n\t\t}\n\t\tsegt.add(i,i,-inf+1);\n\t\tmn.push(mp(i,a[i])),mx.push(mp(i,a[i]));\n\t\tsegt.add(1,i,-1);\n\t\twhile(now<qu&&qry[now+1].X.Y==i){\n\t\t\tnow++;\n\t\t\tans[qry[now].Y]=segt.h0(qry[now].X.X,qry[now].X.Y);\n\t\t}\n\t}\n\tfor(int i=1;i<=qu;i++)printf(\"%lld\\n\",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1626106681,
        "uid": 138400,
        "name": "chenxia25",
        "ccfLevel": 9,
        "title": "cf997e"
    },
    {
        "content": "\u5728[\u535a\u5ba2](https://www.luogu.com.cn/blog/wlx050125/solution-cf997e)\u98df\u7528\u6548\u679c\u66f4\u52a0\u3002\n\n\u4e07\u7269\u7686\u53ef\u6790\u5408\u6811\uff01\uff01\uff01~~\u6ed1\u7a3d~~\n\n\u8bf4\u5b9e\u8bdd\u8fd9\u79cd\u5982\u6b64\u6790\u5408\u6811\u6a21\u677f\u7684\u9898\u76ee\u5f53\u7136\u8981\u7528\u6790\u5408\u6811\u6765\u505a\u4e86\uff0c\u65e2\u7136\u4e00\u7fa4\u5927\u4f6c\u90fd\u7528\u4e86\u7ebf\u6bb5\u6811\uff0c\u90a3\u4e48\u6211\u5c31\u6765\u53d1\u4e00\u7bc7\u6790\u5408\u6811\u3002\n\n\u6790\u5408\u6811\u677f\u5b50\u5c31\u4e0d\u8bb2\u4e86\uff0c\u5927\u5bb6\u53ef\u4ee5\u53bb [oi-wiki](https://oi-wiki.org/ds/divide-combine/) \u81ea\u884c\u7ffb\u9605\u3002\n\n\u6790\u5408\u6811\u6709\u4e00\u4e2a\u975e\u5e38\u5f3a\u5927\u7684\u6027\u8d28\uff0c\u6240\u6709\u7684\u597d\u533a\u95f4\u4e00\u5b9a\u662f\u6790\u5408\u6811\u4e0a\u7684\u70b9\u6216\u8005\u662f\u6790\u5408\u6811\u4e0a\u5408\u70b9\u7684\u4e00\u6bb5\u513f\u5b50\u7684\u8fde\u7eed\u533a\u95f4\u3002\n\n\u5230\u4e86\u8fd9\u9053\u9898\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u5bb9\u65a5\u7684\u601d\u60f3\uff0c\u8bb0 $l,r$ \u5728\u6790\u5408\u6811\u4e0a\u7684 $lca$ \u4e3a $x$\u3002\n\n\u7b54\u6848\u5c31\u662f $x$ \u5b50\u6811\u7684\u8d21\u732e $-$ $x$ \u5b50\u6811\u4e2d\u5de6\u7aef\u70b9\u5728 $l$ \u5de6\u8fb9\u7684\u8d21\u732e $-$ $x$ \u5b50\u6811\u4e2d\u53f3\u7aef\u70b9\u5728 $r$ \u53f3\u8fb9\u7684\u8d21\u732e $+$ $x$ \u5b50\u6811\u4e2d\u5de6\u7aef\u70b9\u5728 $l$ \u5de6\u8fb9\u4e14\u53f3\u7aef\u70b9\u5728 $r$ \u53f3\u8fb9\u7684\u8d21\u732e\u7684\u8d21\u732e\u3002\n\n\u7b2c\u4e00\u90e8\u5206\u76f4\u63a5\u5728\u6790\u5408\u6811\u4e0a\u7ef4\u62a4\uff0c\u5f88\u7b80\u5355\u3002\n\n\u7b2c\u4e8c\u90e8\u5206\u7ef4\u62a4\u4ee5\u6bcf\u4e2a $l$ \u4e3a\u5de6\u7aef\u70b9\u7684 $ans$\uff0c\u6811\u72b6\u6570\u7ec4\u3002\n\n\u7b2c\u4e09\u90e8\u5206\u7ef4\u62a4\u4ee5\u6bcf\u4e2a $r$ \u4e3a\u53f3\u7aef\u70b9\u7684 $ans$\uff0c\u6811\u72b6\u6570\u7ec4\u3002\n\n\u7b2c\u56db\u90e8\u5206\u4f60\u4f1a\u53d1\u73b0\u5728\u6790\u70b9\u65f6\uff0c\u53ea\u6709\u53ef\u80fd\u591a\u7b97 $[L_x,R_x]$ \u8fd9\u4e00\u5bf9\u8d21\u732e\uff0c\n\u5728\u5408\u70b9\u65f6\u4e5f\u53ea\u4f1a\u5728\u6700\u540e\u4e00\u5c42\u5bf9\u7b54\u6848\u6709\u8d21\u732e\uff0c\u76f4\u63a5\u8ba1\u7b97\u5373\u53ef\u3002\n\n\u4ee3\u7801\u5c31\u662f\u6790\u5408\u6811\u677f\u5b50\u5728\u52a0\u4e00\u70b9\u70b9\u5c31\u5b8c\u4e86\u3002\n\n\n```cpp\n#include<bits/stdc++.h>\n#define N 240005\n#define ll long long\nusing namespace std;\nint n,m,a[N];\nll ans[N],sum[N];\nstruct node {\n\tint l,r,id;\n\tnode(int _l=0,int _r=0,int _id=0) {\n\t\tl=_l,r=_r,id=_id;\n\t}\n};\nvector<node>q[N];\ninline int read() {\n\tint s=0,f=0;\n\tchar ch=getchar();\n\twhile(ch<48||ch>57)f=(ch=='-'),ch=getchar();\n\twhile(ch>47&&ch<58)s=(s<<1)+(s<<3)+(ch^48),ch=getchar();\n\treturn f?-s:s;\n}\nnamespace SGT {\n\tint mn[N<<2],tag[N<<2];\n\tvoid Pushtag(int p,int x) {\n\t\tmn[p]+=x,tag[p]+=x;\n\t}\n\tvoid Pushdown(int p) {\n\t\tif(tag[p])Pushtag(p<<1,tag[p]),Pushtag(p<<1|1,tag[p]),tag[p]=0;\n\t}\n\tvoid Change(int p,int l,int r,int cl,int cr,int x) {\n\t\tif(cl<=l&&r<=cr)return Pushtag(p,x);\n\t\tint mid=(l+r)>>1;\n\t\tif(Pushdown(p),cl<=mid)Change(p<<1,l,mid,cl,cr,x);\n\t\tif(cr>mid)Change(p<<1|1,mid+1,r,cl,cr,x);\n\t\tmn[p]=min(mn[p<<1],mn[p<<1|1]);\n\t}\n\tint Getmnl(int p,int l,int r) {\n\t\tif(l==r)return l;\n\t\tint mid=(l+r)>>1;\n\t\tif(Pushdown(p),mn[p<<1]==-1)return Getmnl(p<<1,l,mid);\n\t\treturn Getmnl(p<<1|1,mid+1,r);\n\t}\n\tint Askmn(int p,int l,int r,int x) {\n\t\tif(l==r)return mn[p];\n\t\tint mid=(l+r)>>1;\n\t\tif(Pushdown(p),x<=mid)return Askmn(p<<1,l,mid,x);\n\t\treturn Askmn(p<<1|1,mid+1,r,x);\n\t}\n}\nusing namespace SGT;\nstruct BIT {\n\tll c[N];\n\tvoid Add(int x,int y) {\n\t\tfor(; x<=n; x+=x&-x)c[x]+=y;\n\t}\n\tll Ask(int x,ll ans=0) {\n\t\tfor(; x; x-=x&-x)ans+=c[x];\n\t\treturn ans;\n\t}\n} Tl,Tr;\nnamespace XHTree {\n\tint rt,cnt,dep[N],son[N],id[N],L[N],R[N],M[N],fa[N][19];\n\tvector<int>g[N];\n\tvoid Addedge(int x,int y) {\n\t\tg[x].push_back(y);\n\t}\n\tvoid Dfs(int x) {\n\t\tfor(int i=1; fa[x][i-1]; ++i)fa[x][i]=fa[fa[x][i-1]][i-1];\n\t\tfor(int y:g[x])dep[y]=dep[fa[y][0]=x]+1,Dfs(y);\n\t}\n\tint Lca(int x,int y) {\n\t\tif(dep[x]<dep[y])swap(x,y);\n\t\tfor(int i=16; ~i; --i)if(dep[x]-(1<<i)>=dep[y])x=fa[x][i];\n\t\tif(x==y)return x;\n\t\tfor(int i=16; ~i; --i)if(fa[x][i]!=fa[y][i])x=fa[x][i],y=fa[y][i];\n\t\treturn fa[x][0];\n\t}\n\tint Find(int x,int k) {\n\t\tfor(int i=16; ~i; --i)if(dep[x]-(1<<i)>k)x=fa[x][i];\n\t\treturn x;\n\t}\n\tint smx[N],tmx,smn[N],tmn,stk[N],top,typ[N];\n\tvoid Build() {\n\t\tfor(int i=1,Lef,now; i<=n; stk[++top]=now,++i) {\n\t\t\twhile(tmx&&a[smx[tmx]]<=a[i])Change(1,1,n,smx[tmx-1]+1,smx[tmx],-a[smx[tmx]]),--tmx;\n\t\t\twhile(tmn&&a[smn[tmn]]>=a[i])Change(1,1,n,smn[tmn-1]+1,smn[tmn],+a[smn[tmn]]),--tmn;\n\t\t\tChange(1,1,n,smx[tmx]+1,i,a[i]),Change(1,1,n,smn[tmn]+1,i,-a[i]),Change(1,1,n,1,i,-1);\n\t\t\tsmx[++tmx]=smn[++tmn]=i,id[i]=++cnt,L[cnt]=R[cnt]=i,Lef=Getmnl(1,1,n),now=cnt;\n\t\t\twhile(top&&L[stk[top]]>=Lef) {\n\t\t\t\tif(typ[stk[top]]&&Askmn(1,1,n,M[stk[top]])==-1)R[stk[top]]=i,Addedge(stk[top],now),now=stk[top--];\n\t\t\t\telse if(Askmn(1,1,n,L[stk[top]])==-1) {\n\t\t\t\t\ttyp[++cnt]=1,L[cnt]=L[stk[top]],R[cnt]=i,M[cnt]=L[now];\n\t\t\t\t\tAddedge(cnt,stk[top--]),Addedge(cnt,now),now=cnt;\n\t\t\t\t} else {\n\t\t\t\t\tAddedge(++cnt,now);\n\t\t\t\t\tdo Addedge(cnt,stk[top--]);\n\t\t\t\t\twhile(top&&Askmn(1,1,n,L[stk[top]])>-1);\n\t\t\t\t\tL[cnt]=L[stk[top]],R[cnt]=i,Addedge(cnt,stk[top--]),now=cnt;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\trt=stk[top];\n\t}\n\tvoid Solve(int x) {\n\t\tfor(int i=0,sz=g[x].size(); i<sz; ++i)son[g[x][i]]=i,Solve(g[x][i]),sum[x]+=sum[g[x][i]];\n\t\tif(typ[x]) {\n\t\t\tfor(int i=1,sz=g[x].size(); i<sz; ++i)Tr.Add(R[g[x][i]],i),sum[x]+=i;\n\t\t\tfor(int sz=g[x].size(),i=sz-2; ~i; --i)Tl.Add(L[g[x][i]],sz-i-1);\n\t\t\tfor(node i:q[x]) {\n\t\t\t\tint l=Find(id[i.l],dep[x]),r=Find(id[i.r],dep[x]);\n\t\t\t\tans[i.id]=sum[x]-Tl.Ask(i.l-1)+Tl.Ask(L[x]-1)-Tr.Ask(R[x])+Tr.Ask(i.r)+(son[l]+1ll-(i.l==L[l]))*(g[x].size()-son[r]-(i.r==R[r]));\n\t\t\t}\n\t\t} else {\n\t\t\tTl.Add(L[x],1),Tr.Add(R[x],1),++sum[x];\n\t\t\tfor(node i:q[x])ans[i.id]=sum[x]-Tl.Ask(i.l-1)+Tl.Ask(L[x]-1)-Tr.Ask(R[x])+Tr.Ask(i.r)+(i.l!=L[x]&&i.r!=R[x]);\n\t\t}\n\t}\n}\nusing namespace XHTree;\nint main() {\n\tn=read();\n\tfor(int i=1; i<=n; ++i)a[i]=read();\n\tBuild(),Dfs(rt),m=read();\n\tfor(int i=1,l,r,lca; i<=m; ++i) {\n\t\tl=read(),r=read(),lca=Lca(id[l],id[r]);\n\t\tq[lca].push_back(node(l,r,i));\n\t}\n\tSolve(rt);\n\tfor(int i=1; i<=m; ++i)cout<<ans[i]<<\"\\n\";\n\treturn 0;\n}\n```\n\n\n\u987a\u5e26\u8bf4\u4e00\u53e5\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u662f\u53ef\u4ee5\u5728\u7ebf\u7684\uff0c\u76f4\u63a5\u7528\u4e3b\u5e2d\u6811\u66ff\u6362\u6811\u72b6\u6570\u7ec4\u5373\u53ef\uff0c\u4ee3\u7801\u96be\u4e9b\u5f88\u591a\uff0c\u4e0d\u8fc7\u53ef\u4ee5\u52a0\u5f3a\u4e00\u4e0b\u9898\u76ee\u3002\n",
        "postTime": 1616581391,
        "uid": 112569,
        "name": "Time_tears",
        "ccfLevel": 9,
        "title": "CF997E Good Subsegments"
    },
    {
        "content": "[Portal](https://codeforces.ml/contest/997/problem/E)\n\n\u9898\u610f\uff1a\n\n\u7ed9\u51fa\u6392\u5217 $p_1,p_2,p_3,\\dots,p_n$\uff0c\u5b9a\u4e49\u4e00\u4e2a\u533a\u95f4 $[l,r]$ \u662f\u597d\u7684\u5f53\u4e14\u4ec5\u5f53 $p_l,p_{l+1},p_{l+2},\\dots,p_r$ \u5305\u542b\u4e86\u8fde\u7eed\u7684 $r-l+1$ \u4e2a\u6570\u3002\n\n$q$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u51fa\u4e24\u4e2a\u6570 $l,r$\uff0c\u6c42\u6ee1\u8db3 $l\\leq x\\leq y\\leq r$ \u4e14 $[x,y]$ \u4e3a\u597d\u533a\u95f4\u7684 $(x,y)$ \u7684\u4e2a\u6570\u3002\n\n$n,q\\leq 1.2\\times 10^5$\n\n\u9996\u5148\u628a\u201c\u597d\u533a\u95f4\u201d\u7684\u5b9a\u4e49\u7ffb\u8bd1\u6210\u4eba\u8bdd\u5c31\u662f $(mx-mn)-(r-l)=0$\n\n\u4e0d\u96be\u60f3\u5230\u5c06\u8be2\u95ee\u79bb\u7ebf\u4e0b\u6765\uff0c\u8bb0\u5f55\u5230\u53f3\u7aef\u70b9\u4e0a\uff0c\u7136\u540e\u7528\u7c7b\u4f3c\u626b\u63cf\u7ebf\u7684\u65b9\u6cd5\u6c42\u89e3\u3002\n\n\u52a8\u6001\u5730\u679a\u4e3e\u53f3\u7aef\u70b9 $r$\uff0c\u5efa\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u7ebf\u6bb5\u6811\u4e0a\u4e0b\u6807\u4e3a $l$ \u7684\u4f4d\u7f6e\u8bb0\u5f55\u533a\u95f4 $[l,r]$ \u7684 $(mx-mn)-(r-l)$ \u7684\u503c\u3002\n\n\u5f53\u53f3\u7aef\u70b9\u4ece $r-1$ \u53d8\u4e3a $r$ \u7684\u65f6\u5019\uff0c\u5355\u8c03\u6808\uff08sb \u4e86*1\uff09\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u7684\u53d8\u5316\u3002\u540c\u65f6\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e0b\u6807\u5728 $[1,r-1]$ \u4e2d\u7684\u4f4d\u7f6e\u5168\u90e8\u51cf $1$\uff1a$-(r-1-l)$ \u53d8\u4e3a $-(r-l)$\u3002\u4ee5 $r$ \u4e3a\u53f3\u7aef\u70b9\u7684\u201c\u597d\u533a\u95f4\u201d\u7684\u4e2a\u6570\u5c31\u662f\u7ebf\u6bb5\u6811\u4e0a\u503c\u4e3a $0$ \u7684\u4e2a\u6570\u3002\u6ce8\u610f\u5230 \u7ebf\u6bb5\u6811\u4e0a\u4f4d\u7f6e\u4e3a $r$ \u7684\u6570\u603b\u662f $0$\uff08\u5373\u533a\u95f4 $[r,r]$ \u6c38\u8fdc\u662f\u597d\u533a\u95f4\uff09\uff0c\u6240\u4ee5\u6700\u5c0f\u503c\u7684\u4e2a\u6570\u5c31\u662f\u7ebf\u6bb5\u6811\u4e0a\u503c\u4e3a $0$ \u7684\u4e2a\u6570\u3002\n\n\u4f46\u6b64\u9898\u8981\u6c42\u7684\u662f\u53f3\u7aef\u70b9\u5728 $[l,r]$ \u4e4b\u95f4\u7684\u597d\u533a\u95f4\u7684\u4e2a\u6570\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u53f3\u7aef\u70b9\u4e3a $r$ \u7684\u597d\u533a\u95f4\u4e2a\u6570\u3002\uff08sb \u4e86*2\uff09\u6240\u4ee5\u6211\u4eec\u7ebf\u6bb5\u6811\u4e0a\u65b0\u7ef4\u62a4\u4e24\u4e2a\u503c\uff1a$sum$ \u548c $cnt$\u3002$sum$ \u8868\u793a\u7ebf\u6bb5\u6811\u4e0a $[l,r]$ \u8fd9\u4e2a\u533a\u95f4\u5386\u53f2\u4e0a\u51fa\u73b0\u4e86\u591a\u5c11\u6b21 $0$\uff0c$cnt$ \u8868\u793a\u5f53\u524d\u533a\u95f4\u7684 $0$ \u7684\u4e2a\u6570\u8981\u7d2f\u52a0\u8fdb\u7b54\u6848\u591a\u5c11\u6b21\uff0ci.e.\uff0c\u5982\u679c\u5f53\u524d\u533a\u95f4\u6709 $x$ \u4e2a $0$\uff0c\u90a3\u4e48\u5c31\u8981\u4ee4 $sum+=x\\times cnt$\u3002\u5f53\u6211\u4eec ```pushdown``` \u7684\u65f6\u5019\uff0c\u5982\u679c\u5b83\u5de6\u513f\u5b50\u7684\u6700\u5c0f\u503c\u7b49\u4e8e\u5f53\u524d\u533a\u95f4\u7684\u6700\u5c0f\u503c\uff0c\u5c31\u628a\u8fd9\u4e2a $cnt$ \u6807\u8bb0\u4f20\u7ed9\u5b83\u7684\u5de6\u513f\u5b50\u3002\u53f3\u513f\u5b50\u4e5f\u540c\u7406\u3002\u6bcf\u6b21\u79fb\u52a8\u53f3\u7aef\u70b9\u7684\u65f6\u5019\u5c06\u6574\u9897\u7ebf\u6bb5\u6811\u7684 $cnt$ \u503c\u52a0 $1$\u3002\u7136\u540e\u67e5\u8be2\u533a\u95f4 $[l,r]$ \u7684 $sum$ \u503c\u4e4b\u548c\u5c31\u53ef\u4ee5\u4e86\u3002 \u6ce8\u610f\u5230\u6211\u4eec\u4fee\u6539\u4e00\u4e2a\u533a\u95f4\u7684\u65f6\u5019\u662f\u4e00\u8def ```pushdown``` \u4e0b\u6765\u7684\uff0c\u8fd9\u610f\u5473\u7740\u6ca1\u6709\u8bbf\u95ee\u5230\u7684\u533a\u95f4\u4e2d $0$ \u7684\u4e2a\u6570\u4e0d\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u6545\u5176\u6ee1\u8db3\u53ef\u4e58\u6027\uff0c\u6240\u4ee5\u8fd9\u6837\u641e\u6ca1\u6709\u95ee\u9898\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u7ebf\u6027\u5bf9\u6570\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define fi first\n#define se second\n#define fz(i,a,b) for(int i=a;i<=b;i++)\n#define fd(i,a,b) for(int i=a;i>=b;i--)\n#define ffe(it,v) for(__typeof(v.begin()) it=v.begin();it!=v.end();it++)\n#define fill0(a) memset(a,0,sizeof(a))\n#define fill1(a) memset(a,-1,sizeof(a))\n#define fillbig(a) memset(a,63,sizeof(a))\n#define pb push_back\n#define ppb pop_back\n#define mp make_pair\ntemplate<typename T1,typename T2> void chkmin(T1 &x,T2 y){if(x>y) x=y;}\ntemplate<typename T1,typename T2> void chkmax(T1 &x,T2 y){if(x<y) x=y;}\ntypedef pair<int,int> pii;\ntypedef long long ll;\ntemplate<typename T> void read(T &x){\n\tx=0;char c=getchar();T neg=1;\n\twhile(!isdigit(c)){if(c=='-') neg=-1;c=getchar();}\n\twhile(isdigit(c)) x=x*10+c-'0',c=getchar();\n\tx*=neg;\n}\nconst int MAXN=1.2e5;\nint n,qu,a[MAXN+5];ll ans[MAXN+5];\nstruct Query{int l,r;} q[MAXN+5];\nvector<int> qv[MAXN+5];\nstruct node{\n\tint l,r,mn,num,add_lz;\n\tll sum,cnt_lz;\n} s[MAXN*4+5];\nvoid pushup(int k){\n\ts[k].mn=min(s[k<<1].mn,s[k<<1|1].mn);\n\ts[k].num=(s[k<<1].num)*(s[k<<1].mn==s[k].mn)+(s[k<<1|1].num)*(s[k<<1|1].mn==s[k].mn);\n\ts[k].sum=s[k<<1].sum+s[k<<1|1].sum;\n}\nvoid pushdown(int k){\n\tif(s[k].add_lz){\n\t\ts[k<<1].add_lz+=s[k].add_lz;s[k<<1].mn+=s[k].add_lz;\n\t\ts[k<<1|1].add_lz+=s[k].add_lz;s[k<<1|1].mn+=s[k].add_lz;\n\t\ts[k].add_lz=0;\n\t}\n\tif(s[k].cnt_lz){\n\t\tif(s[k<<1].mn==s[k].mn) s[k<<1].cnt_lz+=s[k].cnt_lz,s[k<<1].sum+=s[k].cnt_lz*s[k<<1].num;\n\t\tif(s[k<<1|1].mn==s[k].mn) s[k<<1|1].cnt_lz+=s[k].cnt_lz,s[k<<1|1].sum+=s[k].cnt_lz*s[k<<1|1].num;\n\t\ts[k].cnt_lz=0;\n\t}\n}\nvoid build(int k,int l,int r){\n\ts[k].l=l;s[k].r=r;if(l==r){s[k].num=1;return;}\n\tint mid=(l+r)>>1;build(k<<1,l,mid);build(k<<1|1,mid+1,r);\n\tpushup(k);\n}\nvoid modify(int k,int l,int r,int x){\n\tif(l>r) return;\n\tif(l<=s[k].l&&s[k].r<=r){s[k].mn+=x;s[k].add_lz+=x;return;}\n\tpushdown(k);int mid=(s[k].l+s[k].r)>>1;\n\tif(r<=mid) modify(k<<1,l,r,x);\n\telse if(l>mid) modify(k<<1|1,l,r,x);\n\telse modify(k<<1,l,mid,x),modify(k<<1|1,mid+1,r,x);\n\tpushup(k);\n}\nvoid addcnt(int k,int l,int r,int x){\n\tif(l>r) return;\n\tif(l<=s[k].l&&s[k].r<=r){\n\t\tif(!s[k].mn) s[k].cnt_lz+=x,s[k].sum+=s[k].num;\n\t\treturn;\n\t} pushdown(k);int mid=(s[k].l+s[k].r)>>1;\n\tif(r<=mid) addcnt(k<<1,l,r,x);\n\telse if(l>mid) addcnt(k<<1|1,l,r,x);\n\telse addcnt(k<<1,l,mid,x),addcnt(k<<1|1,mid+1,r,x);\n\tpushup(k);\n}\nint querynum(int k,int l,int r){\n\tif(l<=s[k].l&&s[k].r<=r) return (!s[k].mn)*s[k].num;\n\tpushdown(k);int mid=(s[k].l+s[k].r)>>1;\n\tif(r<=mid) return querynum(k<<1,l,r);\n\telse if(l>mid) return querynum(k<<1|1,l,r);\n\telse return querynum(k<<1,l,mid)+querynum(k<<1|1,mid+1,r);\n}\nll query(int k,int l,int r){\n\tif(l<=s[k].l&&s[k].r<=r) return s[k].sum;\n\tpushdown(k);int mid=(s[k].l+s[k].r)>>1;\n\tif(r<=mid) return query(k<<1,l,r);\n\telse if(l>mid) return query(k<<1|1,l,r);\n\telse return query(k<<1,l,mid)+query(k<<1|1,mid+1,r);\n}\nint mx[MAXN+5],mxtp=0,mn[MAXN+5],mntp=0;\nint main(){\n\tscanf(\"%d\",&n);for(int i=1;i<=n;i++) scanf(\"%d\",&a[i]);scanf(\"%d\",&qu);\n\tfor(int i=1;i<=qu;i++) scanf(\"%d%d\",&q[i].l,&q[i].r),qv[q[i].r].pb(i);\n\tbuild(1,1,n);\n\tfor(int i=1;i<=n;i++){\n\t\twhile(mntp&&a[mn[mntp]]>a[i]) modify(1,mn[mntp-1]+1,mn[mntp],a[mn[mntp]]-a[i]),mntp--;mn[++mntp]=i;\n\t\twhile(mxtp&&a[mx[mxtp]]<a[i]) modify(1,mx[mxtp-1]+1,mx[mxtp],a[i]-a[mx[mxtp]]),mxtp--;mx[++mxtp]=i;\n\t\tmodify(1,1,i-1,-1);addcnt(1,1,i,1);ffe(it,qv[i]) ans[*it]=query(1,q[*it].l,q[*it].r);\n//\t\tfor(int j=1;j<=i;j++) printf(\"%d %d %d\\n\",j,i,querynum(1,j,i));\n\t}\n\tfor(int i=1;i<=qu;i++) printf(\"%lld\\n\",ans[i]);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1608964976,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF997E \u3010Good Subsegments\u3011"
    },
    {
        "content": "\u7ed9\u5b9a\u4e00\u4e2a\u6392\u5217 $a$\uff0c\u5b9a\u4e49\u597d\u533a\u95f4 $[l,r]$ \u4e3a\uff1a$(\\max\\limits_{i=l}^r a_i-\\min\\limits_{i=l}^ra_i)-(r-l)=0$\n\n\u591a\u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u7ed9\u5b9a\u4e00\u4e2a\u533a\u95f4\uff0c\u8be2\u95ee\u5b83\u6709\u591a\u5c11\u533a\u95f4\u662f\u597d\u533a\u95f4\n\n---\n\n\u5bb9\u6613\u60f3\u5230\u679a\u4e3e\u53f3\u7aef\u70b9\uff0c\u8ba1\u7b97\u5de6\u7aef\u70b9\u8d21\u732e\uff0c\u8bbe $f_l=(\\max\\limits_{i=l}^r a_i-\\min\\limits_{i=l}^ra_i)-(r-l)$\n\n\u56e0\u4e3a\u7ed9\u5b9a\u7684 $a$ \u662f\u4e00\u4e2a\u6392\u5217\uff0c\u6ca1\u6709\u91cd\u590d\u5143\u7d20\uff0c\u6240\u4ee5 $f_l\\ge0$\n\n\u5bf9\u4e8e\u4e00\u4e2a\u53f3\u7aef\u70b9\uff0c$f_r=0$\uff08\u5373\u53d6\u5de6\u7aef\u70b9\u4e0e\u53f3\u7aef\u70b9\u91cd\u5408\uff09\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u800c\u5305\u542b\u53f3\u7aef\u70b9\u7684\u6700\u5c0f\u503c\u5fc5\u5b9a\u7b49\u4e8e $0$\uff0c\u6240\u4ee5\u6211\u4eec\u518d\u7ef4\u62a4\u4e00\u4e0b\u533a\u95f4\u6700\u5c0f\u503c\u7684\u4e2a\u6570\uff0c\u5c31\u53ef\u4ee5\u5bf9\u4e8e\u4e00\u4e2a\u56fa\u5b9a\u53f3\u7aef\u70b9\u7edf\u8ba1\u7b54\u6848\u4e86\n\n$\\max-\\min$ \u53ef\u4ee5\u7528\u5355\u8c03\u6808\u7ef4\u62a4\uff0c\u800c $r-l$ \u4e2d\uff0c$l$ \u662f\u56fa\u5b9a\u7684\uff0c $r$ \u6bcf\u6b21\u52a0\u4e00\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u533a\u95f4\u51cf\u4e00\u5373\u53ef\n\n\u4f46\u662f\u6211\u4eec\u8981\u6c42\u7684\u662f\u5b50\u533a\u95f4\u4e2a\u6570\uff0c\u4e5f\u5c31\u662f $r\\in[L,R]$ \u7684\u7b54\u6848\uff0c\u6240\u4ee5\u6211\u4eec\u518d\u7ef4\u62a4\u4e00\u4e2a\u6807\u8bb0\uff0c\u6765\u7d2f\u52a0\u5386\u53f2\u7b54\u6848\n\n\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u6807\u8bb0\u4e0b\u653e\u7684\u65f6\u5019\u6700\u5c0f\u503c\u8fd8\u662f\u539f\u6765\u7684\u6700\u5c0f\u503c\uff1f\u56e0\u4e3a\u6211\u4eec\u5728\u4fee\u6539\u6700\u5c0f\u503c\u7684\u65f6\u5019\u4e00\u5b9a\u4f1a\u5148\u4e0b\u653e\u6807\u8bb0\u7684\n\n```cpp\n//timeuse:40min\nconst int N = 300010;\nint n,q;\nstruct query { int l,id; };\nvector<query> v[N];ll ans[N];\nint a[N],st1[N],st2[N],top1,top2;\nstruct tree { int l,r,minn,lz1,lz2;ll num,sum; }t[N << 2];\n#define ls now << 1\n#define rs now << 1 | 1\nvoid pushup(int now)\n{\n\tt[now].minn = min(t[ls].minn,t[rs].minn),t[now].num = 0;\n\tt[now].num += (t[ls].minn == t[now].minn) * t[ls].num;\n\tt[now].num += (t[rs].minn == t[now].minn) * t[rs].num;\n\tt[now].sum = t[ls].sum + t[rs].sum;\n}\nvoid build(int now,int l,int r)\n{\n\tt[now].l = l,t[now].r = r;\n\tif(l == r) { t[now].minn = l,t[now].num = 1;return; }\n\tint mid = l + r >> 1;build(ls,l,mid),build(rs,mid + 1,r);\n\tpushup(now);\n}\nvoid push1(int now,ll v) { t[now].minn += v,t[now].lz1 += v; }\nvoid push2(int now,ll v) { t[now].sum += t[now].num * v,t[now].lz2 += v; }\nvoid pushdown(int now)\n{\n\tif(t[now].lz1) push1(ls,t[now].lz1),push1(rs,t[now].lz1),t[now].lz1 = 0;\n\tif(t[now].lz2)\n\t{\n\t\tif(t[ls].minn == t[now].minn) push2(ls,t[now].lz2);\n\t\tif(t[rs].minn == t[now].minn) push2(rs,t[now].lz2);\n\t\tt[now].lz2 = 0;\n\t}\n}\nvoid add(int now,int l,int r,ll v)\n{\n\tif(t[now].l == l && t[now].r == r) { push1(now,v);return; }\n\tpushdown(now);int mid = t[now].l + t[now].r >> 1;\n\tif(r <= mid) add(ls,l,r,v);\n\telse if(l > mid) add(rs,l,r,v);\n\telse add(ls,l,mid,v),add(rs,mid + 1,r,v);\n\tpushup(now);\n}\nll query(int now,int l,int r)\n{\n\tif(t[now].l == l && t[now].r == r) return t[now].sum;\n\tpushdown(now);int mid = t[now].l + t[now].r >> 1;\n\tif(r <= mid) return query(ls,l,r);\n\tif(l > mid) return query(rs,l,r);\n\treturn query(ls,l,mid) + query(rs,mid + 1,r);\n}\n\nint main()\n{\n\tn = read();for(int i = 1;i <= n;i++) a[i] = read();\n\tq = read();\n\tfor(int i = 1;i <= q;i++) { int l = read();v[read()].push_back({l,i}); }\n\tbuild(1,1,n);\n\tfor(int i = 1;i <= n;i++)\n\t{\n\t\twhile(top1 && a[st1[top1]] <= a[i])\n\t\t\tadd(1,st1[top1 - 1] + 1,st1[top1],a[i] - a[st1[top1]]),top1--;\n\t\twhile(top2 && a[st2[top2]] >= a[i])\n\t\t\tadd(1,st2[top2 - 1] + 1,st2[top2],a[st2[top2]] - a[i]),top2--;\n\t\tst1[++top1] = st2[++top2] = i;\n\t\tpush1(1,-1),push2(1,1);\n\t\tfor(auto j:v[i]) ans[j.id]= query(1,j.l,i);\n\t}for(int i = 1;i <= q;i++) fprint(ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1593066159,
        "uid": 53994,
        "name": "81179332_",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF997E \u3010Good Subsegments\u3011"
    },
    {
        "content": "## CF997E Good Subsegments\n\n> \u7ed9\u51fa\u4e00\u4e2a $1\\sim n$ \u7684\u6392\u5217\uff0c$m$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee $[l,r]$ \u6709\u591a\u5c11\u5b50\u533a\u95f4\u7684\u6570\u662f\u8fde\u7eed\u7684\u3002\n>\n> $1\\leq n,m\\leq 1.2\\times 10^5$\u3002\n\n\u533a\u95f4\u8fde\u7eed\u7b49\u4ef7\u4e8e $(\\max-\\min)-(r-l)=0$\u3002\n\n\u5bf9 $r$ \u626b\u63cf\u7ebf\uff0c\u7ebf\u6bb5\u6811\u6bcf\u4e2a\u4f4d\u7f6e $l$ \u7ef4\u62a4\u5f53\u524d $r$ \u5bf9\u5e94\u7684 $(\\max-\\min)-(r-l)$\u3002$\\max,\\min$ \u7684\u53d8\u5316\u7528\u5355\u8c03\u6808\u7ef4\u62a4\uff0c\u6bd4\u5982\u7ef4\u62a4 $\\min$ \u7684\u53d8\u5316\uff1a\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u9012\u589e\u7684\u6808\uff0c\u5982\u679c $a_{s_{top}}>a_i$\uff0c\u90a3\u4e48\u5de6\u7aef\u70b9\u5728 $[s_{top-1}+1,s_{top}]$ \u4e2d\u7684 $\\min$ \u5c06\u4ece $a_{s_{top}}$ \u53d8\u6210 $a_{i}$\uff0c\u4f46\u7531\u4e8e\u7ef4\u62a4\u7684\u662f $(\\max-\\min)-(r-l)$\uff0c\u6240\u4ee5\u7ebf\u6bb5\u6811\u8fd9\u4e2a\u533a\u95f4\u7684\u4f4d\u7f6e\u8981 $-(a_i-a_{s_{top}})$\u3002$-(r-l)$ \u53ef\u4ee5\u968f\u4fbf\u7ef4\u62a4\u3002\n\n\u6211\u4eec\u8981\u7ef4\u62a4\u7ebf\u6bb5\u6811\u533a\u95f4\u6700\u5c0f\u503c `mn` \u53ca\u4e2a\u6570 `cnt`\uff0c\u4ece\u800c\u7ef4\u62a4 $0$ \u7684\u4e2a\u6570\u3002\n\n\u4e0a\u8ff0\u8fc7\u7a0b\u662f\u9488\u5bf9 $r$ \u56fa\u5b9a\u7684\uff0c\u7ebf\u6bb5\u6811\u4e0a\u6bcf\u4e2a\u4f4d\u7f6e\u662f\u4ee5\u5b83\u4e3a\u5de6\u7aef\u70b9\uff0c\u4ee5\u5f53\u524d\u679a\u4e3e\u7684 $r$ \u4e3a\u53f3\u7aef\u70b9\u65f6\u7684 `mn,cnt`\uff0c\u4f46\u6ca1\u6709\u8003\u8651\u53f3\u7aef\u70b9\u5728 $r$ \u4e4b\u524d\u7684\uff08\u7531\u4e8e\u662f\u5b50\u533a\u95f4\uff09\uff0c\u6240\u4ee5\u8fd8\u9700\u8bb0\u5f55\u5386\u53f2\u6700\u5c0f\u503c\u4e2a\u6570 `sum`\u3002\u6bcf\u6b21\u5bf9 $r$ \u7ef4\u62a4\u597d\u4e4b\u540e\uff0c\u8981\u7d2f\u8ba1 $r$ \u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u8d21\u732e\u7ed9\u4e4b\u540e\u7684 $r$\uff08\u5f53\u524d\u7684 $r$ \u4f5c\u4e3a\u4e00\u4e2a\u5b50\u533a\u95f4\u7684\u53f3\u7aef\u70b9\uff09\u3002\n\n\u5bf9\u4e8e\u5f53\u524d\u7684 $r$\uff0c$\\forall l\\in[1,r]$\uff0c`cnt` \u90fd\u4f1a\u7d2f\u52a0\u5230 $[l,r]$ \u7684 `sum`\u3002\u53ef\u4ee5\u770b\u6210\u662f\uff0c\u6211\u4eec\u7ed9 $[l,r]$ \u7684\u8d21\u732e\u7cfb\u6570 $+1$\uff0c\u7b97\u7684\u65f6\u5019 `cnt` $\\times $ \u8d21\u732e\u7cfb\u6570\u7d2f\u52a0\u5230 `sum`\uff0c\u6240\u4ee5\u7b49\u4ef7\u4e8e\u533a\u95f4\u52a0\uff0c\u7528\u6253 `tag` \u7ef4\u62a4\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int N=2e5+5,M=N<<2;\nint n,m,l,r,a[N],mn[M],cnt[M],tg[M],tgc[M],t1,t2,s1[N],s2[N];\nll sum[M],ans[N];\nvector<pair<int,int> >q[N];\nvoid push(int p){\n\tmn[p]=min(mn[p<<1],mn[p<<1|1]);\n\tcnt[p]=cnt[p<<1]*(mn[p<<1]==mn[p])+cnt[p<<1|1]*(mn[p<<1|1]==mn[p]);\n\tsum[p]=sum[p<<1]+sum[p<<1|1];\n}\nvoid build(int p,int l,int r){\n\tif(l==r){mn[p]=l,cnt[p]=1;return ;}\t//r=0 \u65f6\uff0c(max-min)-(r-l)=l\n\tint mid=(l+r)/2;\n\tbuild(p<<1,l,mid);\n\tbuild(p<<1|1,mid+1,r);\n\tpush(p); \n}\nvoid tag(int p,int v){tg[p]+=v,mn[p]+=v;}\nvoid tagc(int p,int v){tgc[p]+=v,sum[p]+=v*cnt[p];} \nvoid down(int p){\n\ttag(p<<1,tg[p]),tag(p<<1|1,tg[p]),tg[p]=0;\n\tif(mn[p<<1]==mn[p]) tagc(p<<1,tgc[p]);\n\tif(mn[p<<1|1]==mn[p]) tagc(p<<1|1,tgc[p]);\n\ttgc[p]=0;\n}\nvoid modify(int p,int l,int r,int lx,int rx,int v){\n\tif(l>=lx&&r<=rx) return tag(p,v);\n\tint mid=(l+r)/2;\n\tdown(p);\n\tif(lx<=mid) modify(p<<1,l,mid,lx,rx,v);\n\tif(rx>mid) modify(p<<1|1,mid+1,r,lx,rx,v);\n\tpush(p); \n}\nll query(int p,int l,int r,int lx,int rx){\n\tif(l>=lx&&r<=rx) return sum[p];\n\tint mid=(l+r)/2; ll ans=0;\n\tdown(p);\n\tif(lx<=mid) ans=query(p<<1,l,mid,lx,rx);\n\tif(rx>mid) ans+=query(p<<1|1,mid+1,r,lx,rx);\n\treturn ans;\n}\nsigned main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;i++)\n\t\tscanf(\"%d%d\",&l,&r),q[r].push_back({l,i}); \n\tbuild(1,1,n);\n\tfor(int i=1;i<=n;i++){\n\t\twhile(t1&&a[s1[t1]]>a[i]) modify(1,1,n,s1[t1-1]+1,s1[t1],a[s1[t1]]-a[i]),t1--;\t//min\n\t\twhile(t2&&a[s2[t2]]<a[i]) modify(1,1,n,s2[t2-1]+1,s2[t2],a[i]-a[s2[t2]]),t2--;\t//max\n\t\ts1[++t1]=s2[++t2]=i;\n\t\ttag(1,-1),tagc(1,1);\n\t\tfor(auto p:q[i]) ans[p.second]=query(1,1,n,p.first,i);\n\t}\n\tfor(int i=1;i<=m;i++) printf(\"%lld\\n\",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1649465133,
        "uid": 381985,
        "name": "lkytxdy",
        "ccfLevel": 0,
        "title": "CF997E Good Subsegments"
    },
    {
        "content": "\u5176\u5b9e\u5c31\u662f\u6c42\uff1a\n\n$$\nans(l, r)=\\sum_{i=l}^r\\sum_{j=i}^r[\\max(i, j)-\\min(i,j)=j-i]\n$$\n\n\u8003\u8651\u626b\u63cf\u7ebf\n\n\u5bf9\u4e8e\u4e00\u4e2a\u53f3\u8282\u70b9\uff0c\u5b83\u5230\u4e0a\u4e00\u4e2a\u6bd4\u5b83\u5927\u7684\u8282\u70b9\u4e4b\u95f4\u7684\u6240\u6709\u8282\u70b9\u6700\u5927\u503c\u53d8\u6210\u5b83\uff0c\u6700\u5c0f\u503c\u7c7b\u4f3c\n\n\u6ce8\u610f\u5230\u5269\u4f59\u70b9\u4e0d\u53d8\uff0c\u7136\u540e\u53f3\u7aef\u70b9 +1\n\n\u6ce8\u610f\u5230\u79fb\u52a8\u53f3\u7aef\u70b9\u7684\u65f6\u5019\u6211\u4eec\u9700\u8981\u5904\u7406\u8d21\u732e\n\n\u8003\u8651\u6bcf\u4e00\u4e2a\u70b9\u7684\u8d21\u732e\u662f\u5b83\u80fd\u4e0e\u53f3\u8fb9\u591a\u5c11\u4e2a\u8282\u70b9\u4ea7\u751f\u8d21\u732e\n\n\u8003\u8651\u8fd9\u4e1c\u897f\u5176\u5b9e\u5e76\u4e0d\u597d\u4fee\u6539\n\n\u4ed6\u5b8c\u5168\u53ef\u4ee5\u51fa\u8fd9\u79cd `2 1 4 3 6 5` \u7684\u6570\u636e\u6076\u5fc3\u6b7b\u4f60\n\n\u4e0d\u8fc7\u5176\u5b9e\u7ebf\u6bb5\u6811\u662f\u652f\u6301\u8ba1\u7b97\u533a\u95f4\u67d0\u4e2a\u7279\u5b9a\u6570\u7684\u4e2a\u6570\u7684\n\n\u6ca1\u9519\u8fd9\u4e2a\u6570\u5c31\u662f $0$ \n\n\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5de6\u7aef\u70b9\uff0c\u7ef4\u62a4\u6709\u591a\u5c11\u4e2a\u53f3\u7aef\u70b9\u548c\u4ed6\u6ee1\u8db3 $\\max - \\min - (j-i) = 0$\n\n\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a\u70b9 $\\max \\min$ \u4fee\u6539\u6b21\u6570\u90fd\u662f $O(1)$ \u7684\n\n\u8003\u8651 $j$  \u6bcf\u4e00\u6b21\u79fb\u52a8\u5c31\u662f\u533a\u95f4\u51cf\n\n\u56e0\u6b64\u5176\u5b9e\u53f3\u7aef\u70b9\u8d21\u732e\u4e2a\u6570\u53ef\u4ee5\u7ef4\u62a4\u3002\u3002\u3002\u5c31\u662f\u503c\u4e3a $0$ \u7684\u70b9\u6570\u3002\u3002\u3002\n\n\u8003\u8651\u5b83\u8fd8\u6709\u533a\u95f4\u4fee\u6539\u4ec0\u4e48\u7684\n\n\u56e0\u6b64\u8fd8\u8981\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\u6700\u5c0f\u503c\u548c\u6700\u5c0f\u503c\u4e2a\u6570\n\n\u7136\u540e\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\u8981\u8bb0\u5f55\u5386\u53f2\u7b54\u6848\n\n\u8003\u8651\u6bcf\u4e00\u6b21\u4fee\u6539\u524d\u6253\u4e2a tag \u5c31\u505a\u5b8c\u4e86\n\n\u6ce8\u610f\u4e00\u4e0b\u8fd9\u4e2a tag \u53ea\u80fd\u6253\u7ed9\u7b26\u5408\u6761\u4ef6\u7684\u70b9\n\n\u590d\u6742\u5ea6 $O(n\\log n)$",
        "postTime": 1628253529,
        "uid": 66511,
        "name": "DPair",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 \u3010CF997E Good Subsegments\u3011"
    },
    {
        "content": "\u633a\u5957\u8def\u7684\u4e00\u4e2a\u9898\u5427\u2026\u5c24\u5176\u662f\u4e0b\u653e\u6807\u8bb0\u7684\u65b9\u5f0f\u3002\n\n\u5176\u5b9e\u662f [526F](https://www.luogu.com.cn/problem/CF526F) \u7684\u52a0\u5f3a\u7248\u3002\n\n\u53d8\u6210\u533a\u95f4\u8be2\u95ee\u3002\n\n\u6211\u4eec\u60f3\u4e00\u4e0b\u600e\u4e48\u533a\u95f4\u8be2\u95ee\u5462\u3002\n\n\u626b\u63cf\u7ebf\uff0c\u6bcb\u5eb8\u7f6e\u7591\u3002\n\n\u679a\u4e3e\u53f3\u7aef\u70b9\u3002\n\n\u627e $[i,r]$ \u7684\u8d21\u732e\u3002\n\n\u4f46\u662f$[i,r-1]$ \u4e5f\u662f\u7b26\u5408\u6761\u4ef6\u7684\u3002\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u7528\u4e00\u4e2a\u6280\u5de7\u6027\u7684\u4e1c\u897f\u6765\u4e0b\u653e\u8fd9\u4e2a\u6807\u8bb0\uff0c\u7ebf\u6bb5\u6811\u663e\u7136\u662f\u53ef\u4ee5\u4e0b\u653e\u7684\u3002\n\n\u7136\u540e\u53ea\u9700\u8981\u6ce8\u610f\u4e00\u70b9\u7ec6\u8282\u3002\n\n\u5148push\u6389\u61d2\u6807\u8bb0\uff0c\u7136\u540e\u518d\u628a\u524d\u9762\u7684\u8d21\u732e\u52a0\u4e0a\u53bb\u3002\u5c31\u505a\u5b8c\u4e86\u3002\n\n\n```cpp\n/*\n _      _  _ _ _ _ _   _      _\n\\_\\   /_/ \\_\\_\\_\\_\\_\\ \\_\\   /_/\n \\_\\ /_/      \\_\\      \\_\\ /_/\n  \\_\\_/       \\_\\       \\_\\_/\n   \\_\\         \\_\\       \\_\\\n   \\_\\     \\_\\ \\_\\       \\_\\\n   \\_\\      \\_\\\\_\\       \\_\\\n*/\n#include <bits/stdc++.h>\n#define rep(i,x,y) for(int i=x;i<=y;i++)\n#define per(i,x,y) for(int i=x;i>=y;i--)\n#define sz(v) (int)v.size()\n#define int long long\nusing namespace std;\ntemplate<class T>\nvoid read(T&x) {\n\tstatic int c,neg;\n\tx=neg=0;c=getchar();\n\twhile(!isdigit(c)){if(c=='-')neg=1;c=getchar();}\n\twhile(isdigit(c)){x=x*10+c-48;c=getchar();}if(neg)x=-x;\n}\ntemplate<class T>\nvoid print(T x,char c='\\n'){\n\tstatic int st[233],top;\n\tif(x<0)putchar('-'),x=-x;\n\tdo{st[++top]=x%10;x/=10;}while(x);\n\twhile(top)putchar(st[top--]+48);putchar(c);\n}\ntemplate<class T>\nvoid cmax(T&x,const T&y){\n\tx=(x>y)?x:y;\n}\ntemplate<class T>\nvoid cmin(T&x,const T&y){\n\tx=(x<y)?x:y;\n}\nint n,q;\nconst int N=262144;\nint a[N];\nvector<int>v[N],vv[N];\nint s[N<<2];\nint mn[N<<2];\nint t[N<<2];\nint tt[N<<2];\nint ans[N<<2];\nvoid pushv(int p,int v){\n\tt[p]+=v;\n\tmn[p]+=v;\n}\nvoid pushans(int p,int v){\n\ttt[p]+=v;\n\tans[p]+=s[p]*v;\n}\nvoid down(int p){\n\tif(t[p]){\n\t\tpushv(p<<1,t[p]);\n\t\tpushv(p<<1|1,t[p]);\n\t\tt[p]=0;\n\t}\n\tif(tt[p]){\n//\t\tpushans(p<<1,tt[p]);\n//\t\tpushans(p<<1|1,tt[p]);\n\t\tif(mn[p<<1]==mn[p]){\n\t\t\tpushans(p<<1,tt[p]);\n\t\t}\n\t\tif(mn[p<<1|1]==mn[p]){\n\t\t\tpushans(p<<1|1,tt[p]);\n\t\t}\n\t\ttt[p]=0;\n\t}\n}\nvoid up(int p){\n\tcmin(mn[p]=mn[p<<1],mn[p<<1|1]);\n\ts[p]=0;\n\tif(mn[p]==mn[p<<1]){\n\t\ts[p]+=s[p<<1];\n\t}\n\tif(mn[p]==mn[p<<1|1]){\n\t\ts[p]+=s[p<<1|1];\n\t}\n\tans[p]=ans[p<<1]+ans[p<<1|1];\n}\nvoid build(int l,int r,int p){\n\tmn[p]=l;\n\ts[p]=1;\n\tif(l==r){\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tbuild(l,mid,p<<1);\n\tbuild(mid+1,r,p<<1|1);\n}\nvoid update(int ql,int qr,int l,int r,int p,int v){\n\tif(ql<=l&&r<=qr){\n\t\tpushv(p,v);\n\t\treturn;\n\t}\n\tdown(p);\n\tint mid=l+r>>1;\n\tif(ql<=mid){\n\t\tupdate(ql,qr,l,mid,p<<1,v);\n\t}\n\tif(qr>mid){\n\t\tupdate(ql,qr,mid+1,r,p<<1|1,v);\n\t}\n\tup(p);\n}\nint query(int ql,int qr,int l,int r,int p){\n\tif(ql<=l&&r<=qr){\n\t\treturn ans[p];\n\t}\n\tint mid=l+r>>1;\n\tdown(p);\n\tint Ans=0;\n\tif(ql<=mid){\n\t\tAns+=query(ql,qr,l,mid,p<<1);\n\t}\n\tif(qr>mid){\n\t\tAns+=query(ql,qr,mid+1,r,p<<1|1);\n\t}\n\treturn Ans;\n}\nint st1[N],t1=0;\nint st2[N],t2=0;\nint answer[N];\nsigned main(){\n\tread(n);\n\trep(i,1,n){\n\t\tread(a[i]);\n\t}\n\tread(q);\n\trep(i,1,q){\n\t\tint l,r;\n\t\tread(l);\n\t\tread(r);\n\t\tv[r].push_back(l);\n\t\tvv[r].push_back(i);\n\t}\n\tbuild(1,n,1);\n\trep(i,1,n){\n\t\tpushv(1,-1);\n\t\twhile(t1&&a[st1[t1]]<a[i]){\n\t\t\tupdate(st1[t1-1]+1,st1[t1],1,n,1,a[i]-a[st1[t1]]);\n\t\t\t--t1;\n\t\t}\n\t\tst1[++t1]=i;\n\t\twhile(t2&&a[st2[t2]]>a[i]){\n\t\t\tupdate(st2[t2-1]+1,st2[t2],1,n,1,a[st2[t2]]-a[i]);\n\t\t\t--t2;\n\t\t}\n\t\tst2[++t2]=i;\n\t\tpushans(1,1);\n\t\tint sz=sz(v[i]);\n\t\trep(j,0,sz-1){\n\t\t\tint l=v[i][j];\n\t\t\tint id=vv[i][j];\n\t\t\tanswer[id]=query(l,i,1,n,1);\n\t\t}\n\t}\n\trep(i,1,q){\n\t\tprint(answer[i]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1605168850,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF997E \u3010Good Subsegments\u3011"
    },
    {
        "content": "\u5148\u5c06\u95ee\u9898\u8fdb\u884c\u8f6c\u5316\uff0c\u53d1\u73b0\u6ee1\u8db3$(max-min)-(r-l)=0$\u7684\u533a\u95f4\u5373\u4e3a\u597d\u533a\u95f4\u3002\n\n\u5bf9\u4e8e\u672c\u9898\u8fd9\u6837\u7684\u7edf\u8ba1\u5b50\u533a\u95f4\u7684\u95ee\u9898\uff0c\u5148\u5c06\u8be2\u95ee\u79bb\u7ebf\uff0c\u6309\u53f3\u7aef\u70b9\u6392\u5e8f\u4e00\u4e2a\u4e00\u4e2a\u89e3\u51b3\uff0c\u56fa\u5b9a\u53f3\u7aef\u70b9\uff0c\u7136\u540e\u901a\u8fc7\u6570\u636e\u7ed3\u6784\u6765\u5904\u7406\u51fa\u533a\u95f4\u4fe1\u606f\uff0c\u8be2\u95ee\u76f4\u63a5\u67e5\u8be2\u533a\u95f4\u5408\u6cd5\u7684\u8d21\u732e\u5373\u53ef\uff0c\u626b\u4e00\u904d\u5c31\u80fd\u89e3\u51b3\u6240\u6709\u8be2\u95ee\u3002\n\n\u7ee7\u7eed\u770b\u8fd9\u4e2a\u5f0f\u5b50$(max-min)-(r-l)=0$\uff0c\u53d1\u73b0\u5982\u679c\u53bb\u7ef4\u62a4\u8fd9\u4e2a\u5f0f\u5b50\u7684\u503c\uff0c\u5bf9\u4e8e\u56fa\u5b9a\u7684\u53f3\u7aef\u70b9\uff0c\u53ef\u4ee5\u7edf\u8ba1\u51fa\u5176\u4e4b\u524d\u7684\u5de6\u7aef\u70b9\u4e0e\u8be5\u53f3\u7aef\u70b9\u7684\u533a\u95f4\u6700\u5c0f\u503c\u53ca\u5176\u4e2a\u6570\uff0c\u6700\u5c0f\u503c\u4e2a\u6570\u5373\u4e3a\u5728\u8fd9\u4e2a\u533a\u95f4\u5185\u53ef\u4ee5\u5bf9\u8fd9\u4e2a\u56fa\u5b9a\u7684\u53f3\u7aef\u70b9\u6709\u8d21\u732e\u7684\u5de6\u7aef\u70b9\u3002\n\n\u4f46\u8fd9\u53ea\u80fd\u8bb0\u5f55\u53f3\u7aef\u70b9\u56fa\u5b9a\u7684\u7b54\u6848\uff0c\u65e0\u6cd5\u5904\u7406\u5b50\u533a\u95f4\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u8bb0\u5f55\u4e0b\u5386\u53f2\u6700\u5c0f\u503c\u4e2a\u6570\u548c\uff0c\u518d\u8fdb\u884c\u8be2\u95ee\u5373\u4e3a\u8fd9\u6bb5\u533a\u95f4\u7684\u6240\u6709\u5b50\u533a\u95f4\u7684\u7b54\u6848\u4e86\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u65f6\uff0c\u7ef4\u62a4$max-min$\u7684\u53d8\u5316\u53ef\u4ee5\u901a\u8fc7\u5355\u8c03\u6808\u6765\u5b9e\u73b0\uff0c$r-l$\u7684\u53d8\u5316\u76f4\u63a5\u5bf9\u6574\u4e2a\u533a\u95f4\u51cf\u4e00\u5373\u53ef\uff0c\u5386\u53f2\u6700\u5c0f\u503c\u4e2a\u6570\u548c\u9700\u8981\u901a\u8fc7\u6253\u6807\u8bb0\u6765\u770b\u8be5\u533a\u95f4\u662f\u5426\u80fd\u4ea7\u751f\u8d21\u732e\uff0c\u7ec6\u8282\u5c31\u770b\u4ee3\u7801\u5427\u3002\n\n$code:$\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 500010\n#define ls (cur<<1)\n#define rs (cur<<1|1)\n#define mid ((l+r)>>1)\nusing namespace std;\ntypedef long long ll;\ntemplate<typename T> inline void read(T &x)\n{\n    x=0;char c=getchar();bool flag=false;\n    while(!isdigit(c)){if(c=='-')flag=true;c=getchar();}\n    while(isdigit(c)){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n    if(flag)x=-x;\n}\nint n,q,t1,t2,root=1;\nint a[maxn],s1[maxn],s2[maxn];\nll ans[maxn],mi[maxn],cnt[maxn],sum[maxn],add[maxn],tag[maxn];\nstruct Query\n{\n    int l,id;\n};\nvector<Query> ve[maxn];\nvoid pushup(int cur)\n{\n    ll lm=mi[ls],rm=mi[rs],lc=cnt[ls],rc=cnt[rs];\n    if(lm==rm) mi[cur]=lm,cnt[cur]=lc+rc;\n    if(lm<rm) mi[cur]=lm,cnt[cur]=lc;\n    if(lm>rm) mi[cur]=rm,cnt[cur]=rc;\n    sum[cur]=sum[ls]+sum[rs];\n}\nvoid pushadd(int cur,ll v)\n{\n    mi[cur]+=v,add[cur]+=v;\n}\nvoid pushtag(int cur,ll v)\n{\n    sum[cur]+=cnt[cur]*v,tag[cur]+=v;\n}\nvoid pushdown(int cur)\n{\n    if(add[cur])\n        pushadd(ls,add[cur]),pushadd(rs,add[cur]),add[cur]=0;\n    if(tag[cur])\n    {\n        if(mi[cur]==mi[ls]) pushtag(ls,tag[cur]);\n        if(mi[cur]==mi[rs]) pushtag(rs,tag[cur]);\n        tag[cur]=0;\n    }\n}\nvoid build(int l,int r,int cur)\n{\n    if(l==r)\n    {\n        mi[cur]=l,cnt[cur]=1;\n        return;\n    }\n    build(l,mid,ls),build(mid+1,r,rs);\n    pushup(cur);\n}\nvoid modify(int L,int R,int l,int r,ll v,int cur)\n{\n    if(L<=l&&R>=r)\n    {\n        pushadd(cur,v);\n        return;\n    }\n    pushdown(cur);\n    if(L<=mid) modify(L,R,l,mid,v,ls);\n    if(R>mid) modify(L,R,mid+1,r,v,rs);\n    pushup(cur);\n}\nll query(int L,int R,int l,int r,int cur)\n{\n    if(L<=l&&R>=r) return sum[cur];\n    pushdown(cur);\n    ll ans=0;\n    if(L<=mid) ans+=query(L,R,l,mid,ls);\n    if(R>mid) ans+=query(L,R,mid+1,r,rs);\n    return ans;\n}\nint main()\n{\n    read(n),build(1,n,root);\n    for(int i=1;i<=n;++i) read(a[i]);\n    read(q);\n    for(int i=1;i<=q;++i)\n    {\n        int l,r;\n        read(l),read(r);\n        ve[r].push_back((Query){l,i});\n    }\n    for(int i=1;i<=n;++i)\n    {\n        while(t1&&a[s1[t1]]<=a[i])\n        {\n            modify(s1[t1-1]+1,s1[t1],1,n,a[i]-a[s1[t1]],root);\n            t1--;\n        }\n        while(t2&&a[s2[t2]]>=a[i])\n        {\n            modify(s2[t2-1]+1,s2[t2],1,n,a[s2[t2]]-a[i],root);\n            t2--;\n        }\n        s1[++t1]=s2[++t2]=i,pushadd(root,-1),pushtag(root,1);\n        int size=ve[i].size();\n        for(int j=0;j<size;++j)\n            ans[ve[i][j].id]=query(ve[i][j].l,i,1,n,root);\n    }\n    for(int i=1;i<=q;++i) printf(\"%lld\\n\",ans[i]);\n    return 0;\n}\n```",
        "postTime": 1586448976,
        "uid": 172489,
        "name": "lhm_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF997E \u3010Good Subsegments\u3011"
    },
    {
        "content": "- [\u4f8b\u9898](https://www.luogu.com.cn/problem/CF526F)\u3002\n- $n\\times n$ \u7684\u68cb\u76d8\uff0c\u6bcf\u884c\u6bcf\u5217\u5404\u6709\u4e00\u4e2a\u68cb\u5b50\uff0c\u95ee\u8fde\u7eed $k$ \u884c $k$ \u5217\u6709 $k$ \u4e2a\u68cb\u5b50\u7684\u5b50\u68cb\u76d8\u6570\u91cf\u3002\n- $n\\le 3\\times 10^5$\u3002\n- \u663e\u7136\u6709\u90a3\u4e2a\u7279\u6b8a\u6027\u8d28\uff0c\u6240\u4ee5\u4e0d\u80fd\u76f4\u63a5\u62ff\u68cb\u76d8\u6765\u8003\u8651\uff0c\u8003\u8651\u5e8f\u5217\uff0c\u5bb9\u6613\u53d1\u73b0\u8981\u6c42\u533a\u95f4\u6700\u5927\u503c\u4e0e\u533a\u95f4\u6700\u5c0f\u503c\u4e4b\u5dee\u52a0\u4e00\u6070\u597d\u662f\u533a\u95f4\u957f\u5ea6\u7684\u533a\u95f4\u3002\n- \u6734\u7d20\u7684\u505a\u6cd5\u662f $O(n^2)$ \u7684\uff0c\u8003\u8651\u626b\u63cf\u7ebf\u7684\u505a\u6cd5\u3002\n- \u6211\u4eec\u4f1a\u53d1\u73b0\u533a\u95f4\u6700\u5927\u503c\u4e0e\u533a\u95f4\u6700\u5c0f\u503c\u4e4b\u5dee\u52a0\u4e00\u600e\u4e48\u4e5f\u4e0d\u53ef\u80fd\u5c0f\u4e8e\u533a\u95f4\u957f\u5ea6\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u7edf\u8ba1\u7684\u5c31\u662f\u533a\u95f4\u6700\u5927\u503c\u51cf\u533a\u95f4\u6700\u5c0f\u503c\u51cf\u533a\u95f4\u957f\u5ea6\u7684\u6700\u5c0f\u503c $\\max-\\min-\\text{len}$\uff08\u5176\u5b9e\u53ea\u8981\u7edf\u8ba1\u6700\u5c0f\u503c\u7684\u4e2a\u6570\u5373\u53ef\u4e0d\u9700\u8981\u5224\u65ad\u662f\u4e0d\u662f $-1$\uff0c\u56e0\u4e3a\u5b83\u7684\u6700\u5c0f\u503c\u4e00\u5b9a\u6709 $-1$\uff09\u3002\n- \u6211\u4eec\u8003\u8651\u7ef4\u62a4\u8fd9\u4e2a\u6700\u5c0f\u503c\uff0c\u53ef\u662f\u600e\u4e48\u7ef4\u62a4\u5462\uff1f\n![](https://cdn.luogu.com.cn/upload/image_hosting/93dpz8z0.png)\n- \u6240\u4ee5\u53ef\u4ee5\u641e\u4e24\u4e2a\u5355\u8c03\u6808\uff0c\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n- [\u4ee3\u7801\u5b9e\u73b0](https://www.luogu.com.cn/paste/ips9exki)\u3002\n- \u5982\u679c\u6709\u91cd\u590d\u5143\u7d20\u8bb0\u5f55\u7684\u5c31\u662f\u4e0d\u91cd\u590d\u5143\u7d20\u7684\u60c5\u51b5\uff0c\u533a\u95f4\u4e0d\u91cd\u590d\u5143\u7d20\u7684\u8bdd\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u7684\u524d\u9a71\u5206\u522b\u8ba8\u8bba\u5c31\u884c\u4e86\uff0c\u590d\u6742\u5ea6\u540c\u672c\u505a\u6cd5\u3002\n- [\u7c7b\u9898](https://www.luogu.com.cn/problem/CF997E)\u3002\n- \u52a8\u6001\u66f4\u65b0\u6bcf\u4e2a\u533a\u95f4\u7684\u8d21\u732e\u8be5\u600e\u4e48\u5f04\uff1f\u6734\u7d20\u7684\u529e\u6cd5\u53ea\u80fd\u5e94\u5bf9\u4ee5\u8be5\u533a\u95f4\u53f3\u7aef\u70b9\u4e3a\u53f3\u7aef\u70b9\u7684\u533a\u95f4\uff0c\u9700\u8981\u5728\u7ebf\u6bb5\u6811\u4e0a\u52a8\u6001\u7ef4\u62a4\u4ee5 $i$ \u4e3a\u5de6\u7aef\u70b9\u7684\u597d\u533a\u95f4\u4e2a\u6570\u3002\n- \u6240\u4ee5\u6211\u4eec\u8981\u7ef4\u62a4\u4e00\u4e2a\u4f5c\u4e3a\u7d2f\u52a0\u548c\u7684\u4e1c\u897f\uff0c\u6bcf\u6b21\u679a\u4e3e\u7aef\u70b9\u90fd\u8981\u505a\u4e00\u4e2a\u5168\u5c40\u4fee\u6539\uff0c\u4e5f\u5c31\u662f\u5bf9\u6700\u5c0f\u503c\uff08$-1$\uff09\u7684\u4f4d\u7f6e\uff08\u7684\u7b54\u6848\u6216\u8005\u4e5f\u53ef\u4ee5\u7406\u89e3\u6210\u8d21\u732e\uff09\u52a0\u4e00\u3002\n- \u800c\u8fd9\u4e2a\u76f4\u63a5\u4e0b\u4f20\uff0c\u4e0b\u4f20\u7684\u65f6\u5019\u6bd4\u8f83\u4e00\u4e0b\uff0c\u5c31\u53ef\u4ee5\u505a\u4e86\u3002\n- [\u4ee3\u7801\u5b9e\u73b0](https://www.luogu.com.cn/paste/ocj7akqe)\u3002",
        "postTime": 1644823285,
        "uid": 260884,
        "name": "WeLikeStudying",
        "ccfLevel": 0,
        "title": "\u3010\u626b\u63cf\u7ebf\u3011CF997E Good Subsegments"
    },
    {
        "content": "## \u626b\u63cf\u7ebf\u5b50\u533a\u95f4\u95ee\u9898\u6a21\u677f\u9898\n\n\u901a\u8fc7\u77e9\u5f62\u52a0\u5b9e\u73b0\n\n\u8003\u8651\u4e00\u4e2a\u4e8c\u7ef4\u5e73\u9762 \u4e24\u4e2a\u5750\u6807\u8f74\u5206\u522b\u8868\u793a\u533a\u95f4 $l$ \u548c $r$ \uff0c\u6a2a\u8f74 $l$ \u7eb5\u8f74 $r$\n\n\u82e5\u8fde\u7eed\u5fc5\u6709 $maxn-minn - r + l = 0$\n\n\u4e8c\u7ef4\u5e73\u9762\u4e0a\u7684\u70b9 $p ( l , r )$ \u8868\u793a $maxn - minn - r + l$ \u5373\u7528\u6765\u7ef4\u62a4\u7b54\u6848\n\n\u8003\u8651\u6279\u91cf\u5904\u7406\u6b64\u5e73\u9762\u4e0a\u70b9\n\n\u8003\u8651\u5c06\u95ee\u9898\u8f6c\u6362\u4e3a\u77e9\u5f62\u52a0\n\n$r$ \u548c $l$ \u53ef\u4ee5\u5e73\u51e1\u5730\u77e9\u5f62\u52a0\u6389 \u8003\u8651 $maxn$ \u548c $minn$ \n\n\u9700\u8981\u901a\u8fc7\u6700\u503c\u5206\u6cbb\u627e\u5230\u6bcf\u4e2a\u539f\u5e8f\u5217\u7684\u5143\u7d20 $maxn$ \u548c $minn$ \u7ba1\u8f96\u533a\u57df \u4ee5 $ maxn $ \u4e3a\u4f8b \u7531\u4e8e\u7eb5\u8f74\u4e3a $ r $ \uff0c\u6240\u4ee5\u82e5\u6b64\u533a\u95f4\u5185 $ maxn $ \u503c\u4e3a\u6b64\u5143\u7d20 \u5219\u6b64\u533a\u95f4 $ r $ \u6bd4\u9700\u6bd4\u4e0b\u4e00\u4e2a\u6bd4\u6b64\u5143\u7d20\u5927\u7684\u5143\u7d20\u7684\u6807\u53f7\u9760\u524d \u4e14\u533a\u95f4 $ r $ \u5fc5\u987b\u5927\u4e8e\u7b49\u4e8e\u6b64\u5143\u7d20\u7684\u6807\u53f7\n\n\u6240\u4ee5\u7eb5\u5750\u6807\u82e5 $ maxn $ \u4e3a $ a_i $ \uff0c\u6b64\u77e9\u5f62\u4e0a\u754c\u5fc5\u4e3a\u4e0b\u4e00\u4e2a\u6bd4 $ a_i $ \u5927\u7684\u5143\u7d20\u7684\u6807\u53f7 \u4e0b\u754c\u4e3a $ i$ \n\n\u533a\u95f4 $ l $ \u786e\u5b9a\u6a2a\u8f74 \u5de6\u53f3\u754c\u540c\u7406 \u53ef\u4ee5\u50cf $ r $ \u4e00\u6837\u505a\u51fa\u77e9\u5f62\n\n\u8003\u8651\u5177\u4f53\u5b9e\u73b0 \u5373\u627e\u524d\u4e00\u4e2a\u548c\u540e\u4e00\u4e2a\u6bd4 $a_i$ \u5927\u7684\u5143\u7d20\u7684\u6807\u53f7 \u5355\u8c03\u6808\u53ef\u5e73\u51e1\u5730\u7ef4\u62a4\n\n\u7531\u4e8e\u6b64\u5e73\u9762\u8868\u793a\u533a\u95f4 \u6240\u4ee5\u6709\u4e00\u4e2a\u663e\u7136\u7684\u6027\u8d28\u662f\u4e0b\u534a\u8fb9\u4e09\u89d2\u4e0d\u53ef\u80fd\u51fa $0$ \u6240\u4ee5\u7ef4\u62a4 2 side \u77e9\u5f62\u5373\u53ef \u9700\u8981\u53cd\u5411\u626b\u626b\u63cf\u7ebf\n \n\u4f46\u6211\u592a\u849f\u4e86 \u5fd8\u4e86\u53cd\u5411\u626b\u4e86 \u6b63\u5411\u626b\u8be2\u95ee $ [ l , r ] $ \u533a\u95f4\u5206\u522b\u5728 $ l - 1 $ \u548c $ r $ \u8bb0\u5f55\u4ee5\u524d\u7684  0 \u7684\u4e2a\u6570\u505a\u5dee\u5373\u4e3a\u7b54\u6848\u4e5f\u5f73\u4e8d\n\n\u8003\u8651\u5982\u4f55\u7ef4\u62a4 $ 0 $ \u7684\u4e2a\u6570 \u663e\u7136\u5e73\u9762\u4e0a\u4efb\u610f\u4e00\u70b9\u7ef4\u62a4\u7684\u7b54\u6848\u503c\u5fc5\u5927\u4e8e $0$ \u6240\u4ee5\u7ef4\u62a4 $min$ \u503c\u548c\u4e2a\u6570\u5373\u53ef \u7ebf\u6bb5\u6811\u53ef\u4ee5\u5e73\u51e1\u7684\u7ef4\u62a4\n\n\u4f46\u7531\u4e8e\u7ef4\u62a4\u7684\u662f\u6240\u6709\u4e4b\u524d\u7684 $0$ \u7684\u4e2a\u6570 \u9700\u8981\u6253\u4e00\u4e2a\u5386\u53f2\u6807\u8bb0 \u9700\u8981\u4ed4\u7ec6\u8ba8\u8bba\u4e00\u4e0b \u4e0d\u8fc7\u53ef\u4ee5\u5e73\u51e1\u7684\u7ef4\u62a4 \u6ce8\u610f\u7ec6\u8282\n\n\u7531\u4e8e\u6211\u592a\u849f\u4e86 \u6240\u4ee5\u5c31\u771f\u7684\u662f\u6309\u77e9\u5f62\u52a0\u53bb\u505a\u7684 \u65f6\u95f4\u548c\u7a7a\u95f4\u7a33\u7a33\u5012\u4e00 \u4e0d\u8fc7\u8fd9\u662f\u4e00\u4e2a\u5b50\u533a\u95f4\u95ee\u9898\u6bd4\u8f83\u5e38\u89c1\u7684\u5957\u8def \u6240\u4ee5\u6d77\u661f\u5427\u5c31\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define int long long\nusing namespace std;\nconst int N=120005;\nint a[N];\nint cnt;\nstruct node_q\n{\n    int pos,id;\n    int l,r;\n    ll ans;\n    bool friend operator < (const node_q a,const node_q b)\n    {\n        return a.pos<b.pos;\n    }\n}q[N<<1];\ninline int read()\n{\n    int x=0;\n    char c=getchar();\n    while(c<'0'||c>'9')c=getchar();\n    while(c<='9'&&c>='0')\n    {\n        x=(x<<1)+(x<<3)+c-'0';\n        c=getchar();\n    }\n    return x;\n}\n\nstruct node\n{\n    int r_l,r_r,l,opt; \n    bool friend operator < (const node a,const node b)\n    {\n        return a.l==b.l?a.opt>b.opt:a.l<b.l;\n    }\n}line[N<<3];\nstruct node_stc\n{\n    int key;\n    int id;\n}stc[N];\nstruct node_lim\n{\n    int l;\n    int r;\n}lim_max[N],lim_min[N];\n\nstruct seg\n{\n    int key_min;\n    ll num_min;\n    ll tag;\n    ll his;\n    ll his_tag;\n    int from;\n}t[N<<6];\n#define ls p<<1\n#define rs p<<1|1\ninline void update(int p)\n{\n    t[p].his=t[ls].his+t[rs].his;\n    if(t[ls].key_min<t[rs].key_min)\n    {\n        t[p].key_min=t[ls].key_min;\n        t[p].num_min=t[ls].num_min;\n        t[p].from=1;\n        return;\n    }\n    if(t[rs].key_min<t[ls].key_min)\n    {\n        t[p].key_min=t[rs].key_min;\n        t[p].num_min=t[rs].num_min;\n        t[p].from=2;\n        return;\n    }\n    t[p].key_min=t[ls].key_min;\n    t[p].num_min=t[ls].num_min+t[rs].num_min;   \n    t[p].from=3;    \n    //if(t[p].key_min==0)\n    \n}\n\nvoid build(int l,int r,int p)\n{\n    if(l==r)\n    {\n        t[p].num_min=1;\n        return;\n    }\n    int mid=l+r>>1;\n    build(l,mid,ls);\n    build(mid+1,r,rs);\n}\n\ninline void pushdown(int p)\n{\n    if(t[p].tag!=0)\n    {\n        t[ls].key_min+=t[p].tag;\n        t[ls].tag+=t[p].tag;\n        t[rs].key_min+=t[p].tag;\n        t[rs].tag+=t[p].tag;\n        t[p].tag=0;\n    }\n    if(t[p].his_tag!=0)\n    {\n        if(t[p].from==3)\n        {\n            t[ls].his+=t[p].his_tag*t[ls].num_min;\n            t[ls].his_tag+=t[p].his_tag;\n            t[rs].his+=t[p].his_tag*t[rs].num_min;\n            t[rs].his_tag+=t[p].his_tag;\n            t[p].his_tag=0;    \n            return;\n        }\n        if(t[p].from==1)\n        {\n            t[ls].his+=t[p].his_tag*t[ls].num_min;\n            t[ls].his_tag+=t[p].his_tag;\n            t[p].his_tag=0;    \n            return;        \n        }\n        if(t[p].from==2)\n        {\n            t[rs].his+=t[p].his_tag*t[rs].num_min;\n            t[rs].his_tag+=t[p].his_tag;\n            t[p].his_tag=0;    \n            return;        \n        }\n    }\n}\n\nvoid modify(int l,int r,int ql,int qr,ll dx,int p)\n{    \n    if(ql<=l&&r<=qr)\n    {\n        t[p].key_min+=dx;\n        t[p].tag+=dx;\n        if(t[p].key_min==0)\n        {\n            t[p].his+=t[p].num_min;\n            t[p].his_tag++;\n        }\n        return;\n    }\n    pushdown(p);\n    int mid=l+r>>1;\n    if(ql<=mid)modify(l,mid,ql,qr,dx,ls);\n    if(qr>mid)modify(mid+1,r,ql,qr,dx,rs);\n    update(p);\n}\n\nll query(int l,int r,int ql,int qr,int p)\n{\n    if(ql<=l&&r<=qr)\n    {\n        return t[p].his;\n    }\n    pushdown(p);\n    ll res=0;\n    int mid=l+r>>1;\n    if(ql<=mid)res+=query(l,mid,ql,qr,ls);\n    if(qr>mid)res+=query(mid+1,r,ql,qr,rs);\n    return res;\n}\n\nbool cmp(node_q a,node_q b)\n{\n    return a.id==b.id?a.ans<b.ans:a.id<b.id;\n}\n\nsigned main()\n{\n    int n;\n    n=read();\n    for(int i=1;i<=n;i++)\n    a[i]=read();\n    int qn=read();\n    for(int i=1;i<=qn;i++)\n    {\n        q[i*2-1].id=q[i*2].id=i;\n        q[i*2-1].l=q[i*2].l=q[i*2-1].pos=read();\n        q[i*2-1].pos--;\n        q[i*2-1].r=q[i*2].r=q[i*2].pos=read();\n    }\n    sort(q+1,q+qn*2+1);\n    for(int i=1;i<=n;i++)\n    {\n        line[++cnt]={i,i,1,-i};\n        line[++cnt]={1,n,i,i};\n        line[++cnt]={1,n,i+1,-i};\n    }\n    build(1,n,1);\n    int top=0;\n    for(int i=1;i<=n;i++)\n    {\n        if(a[i]<stc[top].key)\n        {\n            lim_max[i].l=stc[top].id;\n            stc[++top]={a[i],i};\n        }\n        else\n        {\n            while(stc[top].key<a[i]&&top)\n            {\n                lim_max[stc[top].id].r=i;\n                top--;\n            }\n            lim_max[i].l=stc[top].id;\n            stc[++top]={a[i],i};\n        }\n    }\n    while(top)\n    {\n        lim_max[stc[top].id].r=n+1;\n        top--;\n    }\n    for(int i=1;i<=n;i++)\n    {\n        if(a[i]>stc[top].key)\n        {\n            lim_min[i].l=stc[top].id; \n            stc[++top]={a[i],i}; \n        }\n        else\n        {\n            while(stc[top].key>a[i]&&top)\n            {\n                lim_min[stc[top].id].r=i;\n                top--;\n            }\n            lim_min[i].l=stc[top].id;\n            stc[++top]={a[i],i};\n        }\n    }\n    while(top)\n    {\n        lim_min[stc[top].id].r=n+1;\n        top--;\n    }\n    for(int i=1;i<=n;i++)\n    {\n        line[++cnt]={i,lim_max[i].r-1,lim_max[i].l+1,a[i]};\n        line[++cnt]={i,lim_max[i].r-1,i+1,-a[i]};\n        line[++cnt]={i,lim_min[i].r-1,lim_min[i].l+1,-a[i]};\n        line[++cnt]={i,lim_min[i].r-1,i+1,a[i]};\n    }\n    sort(line+1,line+cnt+1);\n    int cntl=1;\n    int cntq=1;\n    while(!q[cntq].pos)cntq++;\n    for(int i=1;i<=n;i++)\n    {\n        while(line[cntl].l==i)\n        {\n            modify(1,n,line[cntl].r_l,line[cntl].r_r,line[cntl].opt,1);\n            cntl++;\n        }\n        while(q[cntq].pos==i&&cntq<=qn*2)\n        {\n            q[cntq].ans=query(1,n,q[cntq].l,q[cntq].r,1);\n            cntq++;\n        }\n    }\n    sort(q+1,q+qn*2+1,cmp);\n    for(int i=1;i<=qn;i++)\n    {\n        ll temp=q[i*2].ans-q[i*2-1].ans;\n        printf(\"%lld\\n\",temp);\n    }\n    return 0;\n}\n```\n\n\n",
        "postTime": 1642218593,
        "uid": 223560,
        "name": "_HL_",
        "ccfLevel": 0,
        "title": "CF997E Good Subsegments \u9898\u89e3"
    },
    {
        "content": "\n\u6211\u4eec\u53d1\u73b0\u8fd9\u662f\u4e00\u4e2a\u4e0d\u5f3a\u5236\u5728\u7ebf\u7684\u533a\u95f4\u8be2\u95ee\u95ee\u9898\u3002\u90a3\u4e48\u5e38\u89c1\u7684\u601d\u8def\u83ab\u975e\u5c31\u4e24\u79cd\u3002\n\n- \u83ab\u961f\u3002\u4e0d\u5927\u53ef\u505a\u3002\n\n- \u4f18\u5316\u66b4\u529b\u3002\uff08\u4ece\u5168\u5c40\u67e5\u8be2\u5165\u624b\uff09\n\n\u6211\u4eec\u53d1\u73b0\u533a\u95f4\u8fde\u7eed\u8fd9\u4e2a\u6761\u4ef6\u4e0d\u5927\u597d\u641e\u3002\u90a3\u4e48\u5c31\u628a\u5b83\u8f6c\u53d8\u6210\u51e0\u4e2a\u597d\u6c42\u7684\u91cf\u3002\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u5168\u5c40\u67e5\u8be2\uff0c\u7b49\u4ef7\u4e8e\u6c42$\\sum\\limits_{l=1}^{n}\\sum\\limits_{r=l}^{n}[\\max(l,r)-\\min(l,r)-(r-l)=0]$\n\n\u7136\u540e\u5bf9\u4e8e\u8fd9\u79cd\u6c42\u6bcf\u4e2a\u533a\u95f4\u7684\u67d0\u6027\u8d28\u7684\u548c\u7684\u9898\u6709\u4e00\u4e2a\u5f88\u5957\u8def\u7684\u601d\u60f3\u5c31\u662f\u679a\u4e3e\u53f3\u7aef\u70b9\uff0c\u901a\u8fc7\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u6240\u6709\u5de6\u7aef\u70b9\u7684\u8d21\u732e\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u53ef\u4ee5\u7528\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u51fa\u3001 $\\max(l,r)-\\min(l,r)-(r-l)$ \u7684\u503c\u3002\u4f46\u662f\u7ebf\u6bb5\u6811\u4e0d\u652f\u6301\u7ef4\u62a4\u503c\u57df\uff0c\u6240\u4ee5\u6211\u4eec\u53d1\u6398\u4e00\u4e0b\u6027\u8d28\u3002\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\u4ee5\u53ca\u6700\u5c0f\u503c\u51fa\u73b0\u6b21\u6570\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4fee\u6539\u65f6\u9700\u8981\u4f7f\u7528\u5355\u8c03\u6808\u7ef4\u62a4\u4e00\u4e0b\u3002\n\n\u6700\u540e\u662f\u628a\u5168\u5c40\u67e5\u8be2\u6269\u5c55\u5230\u533a\u95f4\u8be2\u95ee\u3002\n\n\u6211\u4eec\u53d1\u73b0\u5168\u5c40\u67e5\u8be2\u5c31\u662f $nlogn$ \u7ea7\u522b\u7684\u4e86\u3002\u600e\u4e48\u529e\uff1f\n\n\u8003\u8651\u7ef4\u62a4\u8fd9\u4e2a\u5bf9\u4e4b\u540e\u7684\u8d21\u732e\u5c31\u884c\u4e86\u3002\u76f8\u5f53\u4e8e\u662f\u628a\u533a\u95f4\u6709$0$\u7684\u4f4d\u7f6e+1\u3002\u7ef4\u62a4\u8d77\u6765\u8fd8\u662f\u5f88\u65b9\u4fbf\u7684\u3002\n\n\n```cpp\nconst int MAXN = 240005;\nint n, m, a[MAXN], ql[MAXN], res[MAXN];\nstruct Node {int x, y;};\nvector < Node > q[MAXN];\nstruct Segment_tree {\n\tint mn[MAXN<<2], cnt[MAXN<<2], am[MAXN<<2], sum[MAXN << 2], as[MAXN<<2];\n\t#define ls (k << 1)\n\t#define rs (k << 1 | 1)\n\t#define mid ((l + r)>>1)\n\tvoid pushdown(int k)  {\n\t\tif(am[k]) {\n\t\t\tmn[ls] += am[k], am[ls] += am[k];\n\t\t\tmn[rs] += am[k], am[rs] += am[k];\n\t\t\tam[k] = 0;\n\t\t}\n\t\tif(as[k]) {\n\t\t\tif(mn[ls] == mn[k]) sum[ls] += as[k] * cnt[ls], as[ls] += as[k];\n\t\t\tif(mn[rs] == mn[k]) sum[rs] += as[k] * cnt[rs], as[rs] += as[k];\n\t\t\tas[k] = 0;\n\t\t}\n\t\t\n\t}\n\tvoid pushup(int k) {\n\t\tmn[k] = min(mn[ls], mn[rs]);\n\t\tif(mn[ls] == mn[rs]) cnt[k] = cnt[ls] + cnt[rs];\n\t\telse cnt[k] = mn[ls] < mn[rs] ? cnt[ls] : cnt[rs];\n\t\tsum[k] = sum[ls] + sum[rs];\n\t}\n\tvoid build(int k, int l, int r) {\n\t\tmn[k] = l; cnt[k] = 1;\n\t\tif(l == r) {return;}\n\t\tbuild(ls, l, mid); build(rs, mid+1, r);\n\t}\n\tinline void update(int k, int l, int r, int ql, int qr, int val) {\n\t\tif(l == ql && r == qr) {mn[k] += val, am[k] += val; return;}\n\t\tpushdown(k);\n\t\tif(qr <= mid) update(ls, l, mid, ql, qr, val);\n\t\telse if(mid < ql) update(rs, mid+1, r, ql, qr, val);\n\t\telse { update(ls, l, mid, ql, mid, val), update(rs, mid+1, r, mid+1, qr, val);}\n\t\tpushup(k);\n\t}\n\tinline int query(int k, int l, int r, int ql, int qr) {\n\t\tif(l == ql && r == qr) return sum[k]; pushdown(k);\n\t\tif(qr <= mid) return query(ls, l, mid, ql, qr);\n\t\telse if(mid < ql) return query(rs, mid+1, r, ql, qr);\n\t\telse return query(ls, l, mid, ql, mid) + query(rs, mid+1, r, mid+1, qr);\n\t}\n}t;\nstack < int > s1, s2;\nsigned main()\n{\n\tcin >> n;\n\tFor(i, 1, n) a[i] = read();\n\tcin >> m;\n\tFor(i, 1, m) {\n\t\tint l = read(), r = read();\n\t\tq[r].pb((Node) {i, l});\n\t}\n\tt.build(1, 1, n);\n\ts1.push(0); s2.push(0);\n\tFor(i, 1, n) {\n\t\tt.mn[1]--, t.am[1]--;\n\t\twhile(s1.size() > 1 && a[s1.top()] < a[i]) {\n\t\t\tint tt = s1.top(); s1.pop();\n\t\t\t\n\t\t\tt.update(1, 1, n, s1.top() + 1, tt, a[i] - a[tt]);\n\t\t}\n\t\ts1.push(i);\n\t\twhile(s2.size() > 1 && a[s2.top()] > a[i]) {\n\t\t\tint tt = s2.top(); s2.pop();\n\t\t\tt.update(1, 1, n, s2.top() + 1, tt, a[tt] - a[i]);\n\t\t}\n\t\ts2.push(i);\n\t\t\n\t\tt.sum[1] += t.cnt[1], t.as[1]++;\n\t\t\n\t\tfor(auto v : q[i]) {\n\t\t\tint id = v.x, l = v.y;\n\t\t\tres[id] = t.query(1, 1, n, l, i);\n\t\t}\n\t}\n\tFor(i, 1, m) {\n\t\tprintf(\"%lld\\n\", res[i]);\n\t}\n    return 0;\n}\n\n```",
        "postTime": 1583325868,
        "uid": 55078,
        "name": "YLWang",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF997E \u3010Good Subsegments\u3011"
    }
]