[
    {
        "content": "\u8fd9\u9053\u9898\u53ea\u8981\u5206\u6e05\u695a\u94fe\u5f62\u56fe\u3001\u73af\u5f62\u56fe\u548c\u661f\u5f62\u56fe\u7684\u7279\u70b9\u5373\u53ef\u3002\n\n- \u94fe\u5f62\u56fe\u7684\u7279\u70b9\u662f\u6bcf\u4e00\u4e2a\u7ed3\u70b9\u7684\u6700\u5927\u5165\u5ea6\u4e3a2\uff0c\u4e14\u6bcf\u4e2a\u7ed3\u70b9\u7684\u5165\u5ea6\u603b\u548c\u662f $2(n-1)$ \u3002\n- \u73af\u5f62\u56fe\u7684\u7279\u70b9\u662f\u6bcf\u4e00\u4e2a\u7ed3\u70b9\u7684\u6700\u5927\u5165\u5ea6\u4e3a2\uff0c\u4e14\u6bcf\u4e2a\u7ed3\u70b9\u7684\u5165\u5ea6\u603b\u548c\u662f $2n$ \u3002\n- \u661f\u5f62\u56fe\u7684\u7279\u70b9\u662f\u6bcf\u4e00\u4e2a\u7ed3\u70b9\u7684\u6700\u5927\u5165\u5ea6\u7b49\u4e8e\u8fb9\u6570\uff0c\u4e14\u6bcf\u4e2a\u7ed3\u70b9\u7684\u5165\u5ea6\u603b\u548c\u662f $2n$ \u3002\n\n\u4ee3\u7801\u5982\u4e0b\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int MAX = 1e5+5;\n\nint n, m;\nint in[MAX];\nint out[MAX];\nbool flag1 = false;//\u5224\u65ad\u94fe\u5f62\u56fe\nbool flag2 = false;//\u5224\u65ad\u73af\u5f62\u56fe\nbool flag3 = false;//\u5224\u65ad\u661f\u5f62\u56fe\n\nvoid upd(int x,int y) {\n    in[y]++;\n    out[x]++;\n}\n\nvoid inp() {\n\n    scanf(\"%d %d\",&n,&m);\n    for(int i = 1; i <= m; i++) {\n        int x,y;\n        scanf(\"%d %d\",&x,&y);\n        upd(x,y);\n        upd(y,x);\n    }\n}\n\nvoid judge() {\n\n    int IN = 0;\t//\u7edf\u8ba1\u5165\u5ea6\u548c\n    int OUT = 0;//\u7edf\u8ba1\u51fa\u5ea6\u548c\n    int Max = 0;//\u7edf\u8ba1\u6700\u5927\u5165\u5ea6\n\n    for(int i = 1; i <= n; i++) {\n        IN += in[i];\n        OUT += out[i];\n        Max = max(Max,in[i]);\n    }\n\n    if(IN == n*2 && Max == 2)\n        flag2 = true;\n    else if(IN == m*2 && Max == m)\n        flag3 = true;\n    else if(Max == 2 && IN == 2*n-2)\n        flag1 = true;\n}\n\nint main() {\n\n    inp();\n\n    judge();\n\n    if(flag1)\n        puts(\"bus topology\");\n    else if(flag2)\n        puts(\"ring topology\");\n    else if(flag3)\n        puts(\"star topology\");\n    else puts(\"unknown topology\");\n\n    return 0;\n}\n```",
        "postTime": 1594994814,
        "uid": 264065,
        "name": "PaRz1VaL",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF292B \u3010Network Topology\u3011"
    },
    {
        "content": "\u5728\u7f16\u7a0b\u4e2d\u4e0d\u80fd\u76f4\u63a5\u7528\u5f62\u72b6\u5224\u65ad\u56fe\u50cf\uff0c\u6211\u4eec\u9700\u8981\u5bfb\u627e\u4e00\u4e9b\u5176\u4ed6\u7684\u6027\u8d28\uff0c\u4f8b\u5982\u4e00\u4e2a\u70b9\u7684\u5ea6\u6570\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff1a\u73af\u5f62\u56fe\u6240\u6709\u70b9\u7684\u5ea6\u6570\u90fd\u4e3a\u4e8c\uff0c\u94fe\u72b6\u56fe\u53ea\u6709\u4e24\u7aef\u7684\u4e24\u4e2a\u70b9\u5ea6\u6570\u4e3a\u4e00\uff0c\u5176\u4ed6\u7684\u70b9\u5ea6\u6570\u4e3a\u4e8c\uff0c\u661f\u5f62\u56fe\u4e2d\u95f4\u7684\u70b9\u7684\u5ea6\u6570\u5c31\u662f\u8fb9\u6570\u3002\u7136\u540e\u679a\u4e3e\u5224\u65ad\u5373\u53ef\u3002\u590d\u6742\u5ea6 $O(n)$\uff0c\u505a\u4e0d\u5230\u66f4\u5feb\u4e86\n\n```cpp\n#include<cstdio>\nusing namespace std;\nint n,m,x,y,s,t,i,a[1000010];\nint main()\n{\n\tscanf(\"%d %d\",&n,&m);\n\tfor(i=1;i<=m;i++) scanf(\"%d %d\",&x,&y),a[x]++,a[y]++;//\u8fb9\u8f93\u5165\u8fb9\u8bb0\u5f55\u5ea6\u6570\n\tfor(i=1;i<=n;i++) if(a[i]==m) {puts(\"star topology\"); return 0;}//\u4e00\u4e2a\u70b9\u5ea6\u6570\u4e3a\u8fb9\u603b\u6570\uff0c\u661f\u5f62\n\tfor(i=1;i<=n;i++) s+=(a[i]==2); if(s==n) {puts(\"ring topology\"); return 0;} s=0;//\u6240\u6709\u70b9\u5ea6\u6570\u4e3a\u4e8c\uff0c\u73af\u5f62\n\tfor(i=1;i<=n;s+=a[i]==1,t+=a[i]==2,i++);\n\tif(s==2&&s+t==n) {puts(\"bus topology\"); return 0;}//\u4e24\u4e2a\u70b9\u5ea6\u6570\u4e3a1\uff0c\u5176\u4f59\u4e3a2\uff0c\u94fe\u5f62\n\tputs(\"unknown topology\");//\u4e0d\u5bf9\u5c31\u662f\u5176\u4ed6\u7684\u3002\n    return 0;\n}\n```\n\u7b2c\u4e00\u7bc7\u9898\u89e3\u91cc\u5199\u7684\u603b\u5ea6\u6570\u8c8c\u4f3c\u4e0d\u7528\u8003\u8651\u3002\n\n",
        "postTime": 1634597056,
        "uid": 54372,
        "name": "A_\u0110ark_Horcrux",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF292B \u3010Network Topology\u3011"
    },
    {
        "content": "## \u9898\u610f\n\u7ed9\u4f60\u4e00\u4e2a\u56fe\uff0c\u8ba9\u4f60\u5224\u65ad\u662f\u94fe\u5f62\u3001\u73af\u5f62\u548c\u661f\u5f62\u3002\u5177\u4f53\u5b9a\u4e49\u9898\u76ee\u5df2\u7ed9\u51fa\u3002\n## \u601d\u8def\n\u6839\u636e\u56fe\u7684\u6027\u8d28\u53ef\u77e5\uff0c\u94fe\u5f62\u56fe\u4e24\u7aef\u7684\u70b9\u5ea6\u6570\u4e3a\u4e00\uff0c\u5176\u4ed6\u7684\u70b9\u5ea6\u6570\u4e3a\u4e8c\uff1b\u73af\u5f62\u56fe\u6240\u6709\u70b9\u7684\u5ea6\u6570\u90fd\u4e3a\u4e8c\uff1b\u661f\u5f62\u56fe\u4e2d\u592e\u70b9\u5ea6\u6570\u4e3a\u603b\u6570\u51cf\u4e00\uff0c\u5176\u4ed6\u70b9\u7684\u5ea6\u6570\u4e3a\u4e00\u3002    \n\u7efc\u4e0a\u6240\u8ff0\uff0c\u679a\u4e3e\u52a0\u4e0a\u8bb0\u5f55\u5ea6\u6570\u5373\u53ef\u3002\n## Code\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,x,y,f[100001],i;\nbool pd1(){\n\tint ans1=0,ans2=0;\n\tfor (int i=1;i<=n;i++)\n\t\tif (f[i]==1) ans1++;//\u5b83\u7684\u5165\u5ea6\u4e3a\u4e00\n\t\telse if (f[i]==2) ans2++;//\u5b83\u7684\u5165\u5ea6\u4e3a\u4e8c\n\tif (ans1==2&&ans2==n-2) return true;//\u5982\u679c\u53ea\u6709\u4e24\u4e2a\u5165\u5ea6\u4e3a\u4e00\u7684\uff08\u4e24\u7aef\uff09\u548c\u603b\u6570\u51cf\u4e8c\u4e2a\u5165\u5ea6\u4e3a\u4e8c\u7684\uff08\u5176\u4f59\uff09\uff0c\u90a3\u4e48\u5c31\u662f\u94fe\u5f62\u56fe\n\treturn false;\n}\nbool pd2(){\n\tint ans=0;\n\tfor (int i=1;i<=n;i++)\n\t\tif (f[i]==2) ans++;//\u5b83\u7684\u5165\u5ea6\u4e3a\u4e8c\n\tif (ans==n) return true;//\u5982\u679c\u6b63\u597d\u5168\u90fd\u662f\u5165\u5ea6\u4e3a\u4e8c\uff0c\u90a3\u4e48\u5c31\u662f\u73af\u5f62\u56fe\n\treturn false;\n}\nbool pd3(){\n\tint ans1=0,ans2=0;\n\tfor (int i=1;i<=n;i++)\n\t\tif (f[i]==n-1) ans1++;//\u5982\u679c\u5b83\u7684\u5165\u5ea6\u4e3a\u603b\u6570\u51cf\u4e00\n\t\telse if (f[i]==1) ans2++;//\u5982\u679c\u5b83\u7684\u5165\u5ea6\u4e3a\u4e00\n\tif (ans1==1&&ans2==n-1) return true;//\u5982\u679c\u6b63\u597d\u6709\u4e00\u4e2a\u5ea6\u6570\u4e3a\u603b\u6570\u51cf\u4e00\uff08\u4e2d\u592e\uff09\u548c\u603b\u6570\u51cf\u4e00\u4e2a\u5ea6\u6570\u4e3a\u4e00\u7684\uff08\u5468\u56f4\uff09\uff0c\u90a3\u4e48\u5c31\u662f\u661f\u5f62\u56fe\n\treturn false;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor (i=1;i<=m;i++) scanf(\"%d%d\",&x,&y),f[y]++,f[x]++;//\u5ea6\u6570\u7d2f\u8ba1\n\tif (pd1()){printf(\"bus topology\\n\");return 0;}//\u5982\u679c\u662f\u94fe\u5f62\u56fe\n\tif (pd2()){printf(\"ring topology\\n\");return 0;}//\u5982\u679c\u662f\u73af\u5f62\u56fe\n\tif (pd3()){printf(\"star topology\\n\");return 0;}//\u5982\u679c\u662f\u661f\u5f62\u56fe\n\tprintf(\"unknown topology\\n\");//\u5982\u679c\u5565\u90fd\u4e0d\u662f\n\treturn 0;\n}\n\n```\n",
        "postTime": 1626877496,
        "uid": 315398,
        "name": "\u5c0f\u6768\u5c0f\u5c0f\u6768",
        "ccfLevel": 5,
        "title": "CF292B Network Topology"
    }
]