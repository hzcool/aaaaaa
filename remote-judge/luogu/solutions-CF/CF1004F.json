[
    {
        "content": "# \u8fdb\u5165\u6211\u7684\u535a\u5ba2\u83b7\u5f97\u8d85\u723d\u9605\u8bfb\u4f53\u9a8c/se/se/se\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/dysyn1314/p/13269575.html)\n\n### \u9898\u76ee\u5927\u610f\n\n[\u9898\u76ee\u94fe\u63a5](https://codeforces.com/contest/1004/problem/F)\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a$n$\u7684\u5e8f\u5217$a_1,a_2,\\dots,a_n$\u548c\u4e00\u4e2a\u975e\u8d1f\u6574\u6570$x$\u3002\u4f60\u9700\u8981\u652f\u6301$m$\u6b21\u64cd\u4f5c\u3002\u64cd\u4f5c\u6709\u4e24\u79cd\uff1a\n\n- $1\\ i\\ y$\uff1a\u628a\u5e8f\u5217\u7684\u7b2c$i$\u4e2a\u5143\u7d20\u8bbe\u4e3a$y$\uff0c\u4e5f\u5c31\u662f$a_i:=y$\u3002\n- $2\\ l\\ r$\uff1a\u6c42\u6709\u591a\u5c11\u5bf9$(L,R)$\u6ee1\u8db3$l\\leq L\\leq R\\leq r$\u4e14$a_l,\\dots a_r$\u6309\u4f4d**\u6216**\u7684\u548c\u5927\u4e8e\u7b49\u4e8e$x$\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a$1\\leq n,m\\leq 10^5,0\\leq x,a_i,y<2^{20}$\u3002$1\\leq i\\leq n$\u3002$1\\leq l\\leq r\\leq n$\u3002\n\n### \u672c\u9898\u9898\u89e3\n\n\u8003\u8651\u53ea\u6709\u4e00\u6b21\u8be2\u95ee\u65f6\u600e\u4e48\u505a\u3002\n\n\u5206\u6cbb\u3002\u6bcf\u6b21\u8003\u8651$L$\u4f4d\u4e8e\u5de6\u534a\u8fb9\uff0c$R$\u4f4d\u4e8e\u53f3\u534a\u8fb9\u7684\u60c5\u51b5\uff08\u4e5f\u5c31\u662f\u201c\u8de8\u8fc7\u4e2d\u70b9\u201d\u7684\u7b54\u6848\uff09\u3002\u518d\u5206\u522b\u9012\u5f52\u5de6\u3001\u53f3\u4e24\u8fb9\u3002\u8ba1\u7b97\u8de8\u8fc7\u4e2d\u70b9\u7684\u7b54\u6848\u65f6\uff0c\u53ef\u4ee5\u5148\u6c42\u51fa\u3010\u5de6\u534a\u8fb9\u7684$\\operatorname{or}$\u503c\u540e\u7f00\u548c\u3011\u548c\u3010\u53f3\u534a\u8fb9\u7684$\\operatorname{or}$\u503c\u524d\u7f00\u548c\u3011\u3002\u7136\u540e\u7528**two pointers**\u6c42\u51fa\u6ee1\u8db3\u6761\u4ef6\u7684$(L,R)$\u6570\u91cf\uff0c\u4f8b\u5982\uff0c\u53ef\u4ee5\u679a\u4e3e$R$\uff0c\u5219\u5de6\u534a\u8fb9\u7684$L$\u53ef\u9009\u8303\u56f4\u5355\u8c03\u589e\u52a0\uff0c\u4e5f\u5c31\u662f\u4ece\u6700\u5de6\u8fb9\u4e0d\u65ad\u5411\u53f3\u79fb\u3002\u8fd9\u6837\uff0c\u4e0d\u7b97\u9012\u5f52\uff0c\u6bcf\u6b21\u505atwo pointers\u7684\u590d\u6742\u5ea6\u90fd\u662f$O(\\text{len})$\u7684\uff0c\u4e00\u6b21\u8be2\u95ee\u603b\u590d\u6742\u5ea6\u5c31\u662f$O(\\text{len}\\log \\text{len})$\u3002\n\n\u73b0\u5728\u8981\u652f\u6301**\u5355\u70b9\u4fee\u6539**\u548c**\u591a\u6b21\u67e5\u8be2**\u3002\u8003\u8651\u7528**\u7ebf\u6bb5\u6811**\u6765\u7ef4\u62a4\u3002\n\n\u5206\u6cbb\u65f6\u7684\u5de6\u3001\u53f3\u4e24\u8fb9\uff0c\u5929\u7136\u5c31\u662f\u7ebf\u6bb5\u6811\u7684\u5de6\u3001\u53f3\u8282\u70b9\uff0c\u8fd9\u6709\u5f88\u591a\u76f8\u4f3c\u4e4b\u5904\u3002\u4f46\u662f\u6211\u4eec\u9762\u4e34\u7684\u95ee\u9898\u662f\uff1a\u5982\u679c\u5411\u5206\u6cbb\u65f6\u4e00\u6837\uff0c\u7ef4\u62a4\u51fa\u6bcf\u4e2a\u533a\u95f4\u7684\u524d\u7f00\u3001\u540e\u7f00$\\operatorname{or}$\u548c\uff0c\u5219\u4e00\u6b21\u4fee\u6539\u3001\u67e5\u8be2\u7684\u590d\u6742\u5ea6\uff0c\u90fd\u9ad8\u8fbe$O(n\\log n)$\uff0c\u65e0\u6cd5\u627f\u53d7\u3002\n\n\u6b64\u65f6\u8981\u7528\u5230\u6700\u5173\u952e\u7684\u4e00\u4e2a\u6027\u8d28\uff1a\u524d\u7f00\u3001\u540e\u7f00\u7684$\\operatorname{or}$\u548c\uff0c\u90fd\u53ea\u4f1a\u5206\u6210$O(\\log a)$\u4e2a\u6bb5\uff0c\u6ee1\u8db3\u6bcf\u6bb5\u5185\u503c\u76f8\u540c\uff0c\u4e0d\u540c\u6bb5\u503c\u4e0d\u540c\u3002\u8fd9\u662f\u56e0\u4e3a\uff0c\u524d\u7f00\u3001\u540e\u7f00$\\operatorname{or}$\u548c\uff0c\u90fd\u662f\u5355\u8c03\u4e0d\u4e0b\u964d\u7684\uff0c\u6bcf\u6b21\u589e\u957f\uff0c\u90fd\u81f3\u5c11\u591a\u51fa\u4e00\u4e2a\u4e3a$1$\u7684\u4e8c\u8fdb\u5236\u4f4d\uff0c\u6240\u4ee5\u6700\u591a\u589e\u957f$\\log_2 a$\u6b21\uff0c\u4e5f\u5c31\u662f\u53ea\u6709$O(\\log a)$\u4e2a\u6bb5\u3002\n\n\u8003\u8651\u5bf9\u7ebf\u6bb5\u4e0a\u6bcf\u4e2a\u533a\u95f4\uff0c\u7528\u4e24\u4e2a$\\texttt{vector}$\uff0c\u5206\u522b\u7ef4\u62a4\u8be5\u533a\u95f4\u524d\u7f00\u3001\u540e\u7f00$\\operatorname{or}$\u548c\u7684\u8fd9$O(\\log a)$\u4e2a\u6bb5\u3002\u540c\u65f6\uff0c\u7ef4\u62a4\u6bcf\u4e2a\u533a\u95f4\u7684\u7b54\u6848\uff08\u8fd9\u4e2a\u533a\u95f4\u91cc\u6709\u591a\u5c11\u5bf9$(L,R)$\u6ee1\u8db3......\uff09\u3002\u5408\u5e76\u4e24\u4e2a\u533a\u95f4\uff08\u4e5f\u5c31\u662f\u7ebf\u6bb5\u6811$\\texttt{push_up}$\u64cd\u4f5c\uff09\u65f6\uff0c\u5148\u7ee7\u627f\u5de6\u3001\u53f3\u513f\u5b50\u5185\u90e8\u7684\u7b54\u6848\uff0c\u518d\u7528two pointers\u7684\u65b9\u6cd5\u6c42\u51fa\u8de8\u8fc7\u4e2d\u70b9\u7684\u7b54\u6848\uff08\u8fd9\u548c\u5206\u6cbb\u65f6\u662f\u4e00\u6837\u7684\uff09\u3002\u4e8e\u662f\u6211\u4eec\u5c31\u80fd$O(\\log a)$\u5b9e\u73b0$\\texttt{push_up}$\u64cd\u4f5c\u3002\u4e5f\u5c31\u80fd$O(n\\log a)$\u5efa\u6811\uff08\u9884\u5904\u7406\uff09\u3001$O(\\log n\\log a)$\u5b9e\u73b0\u4e00\u6b21\u5355\u70b9\u4fee\u6539\u4e86\u3002\n\n\u67e5\u8be2\u65f6\uff0c\u7ebf\u6bb5\u6811\u5f53\u524d\u8282\u70b9\u7684\u533a\u95f4\uff0c\u5982\u679c\u88ab\u67e5\u8be2\u7684\u533a\u95f4\u5b8c\u5168\u8986\u76d6\uff0c\u76f4\u63a5\u8fd4\u56de\u7ef4\u62a4\u597d\u7684\u7b54\u6848\uff1b\u5426\u5219\u9012\u5f52\u5de6\u3001\u53f3\u513f\u5b50\uff0c\u518d\u8ba1\u7b97\u8de8\u8fc7\u4e2d\u70b9\u7684\u7b54\u6848\u3002\u6240\u4ee5\u5355\u6b21\u67e5\u8be2\u4e5f\u662f$O(\\log n\\log a)$\u7684\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\log a+m\\log n\\log a)$\u3002\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n//problem:CF1004F\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define pb push_back\n#define mk make_pair\n#define lob lower_bound\n#define upb upper_bound\n#define fi first\n#define se second\n#define SZ(x) ((int)(x).size())\n\ntypedef unsigned int uint;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int,int> pii;\n\ntemplate<typename T>inline void ckmax(T& x,T y){x=(y>x?y:x);}\ntemplate<typename T>inline void ckmin(T& x,T y){x=(y<x?y:x);}\n\nconst int MAXN=1e5;\nint n,m,X,a[MAXN+5];\nstruct SegmentTree{\n\tint tl[MAXN*4+5],tr[MAXN*4+5];\n\tll ans[MAXN*4+5];\n\tvector<pii>pre[MAXN*4+5],suf[MAXN*4+5];//(pos,val)\n\t\n\tvoid ck(int p){\n\t\tassert(SZ(pre[p]) && pre[p][0].fi==tl[p]);\n\t\tassert(SZ(suf[p]) && suf[p][0].fi==tr[p]);\n\t}\n\tvoid push_up(int p){\n\t\tint ls=p<<1,rs=p<<1|1;ck(ls);ck(rs);\n\t\t//1. ans\n\t\tans[p]=ans[ls]+ans[rs];\n\t\tfor(int i=0,j=SZ(suf[ls]);i<SZ(pre[rs]);++i){\n\t\t\tint nxt=(i<=SZ(pre[rs])-2?pre[rs][i+1].fi:tr[p]+1);\n\t\t\t//R \\in [pre[rs][i].fi,nxt)\n\t\t\twhile(j>0 && (suf[ls][j-1].se|pre[rs][i].se)>=X)\n\t\t\t\t--j;\n\t\t\tif(j!=SZ(suf[ls]))\n\t\t\t\tans[p]+=(ll)(suf[ls][j].fi-tl[p]+1) * (nxt-pre[rs][i].fi);\n\t\t}\n\t\t\n\t\t//2. pre\n\t\tpre[p]=pre[ls];\n\t\tfor(int i=0;i<SZ(pre[rs]);++i){\n\t\t\tif(pre[p].back().se != (pre[p].back().se | pre[rs][i].se)){\n\t\t\t\tpre[p].pb(mk(pre[rs][i].fi,pre[p].back().se|pre[rs][i].se));\n\t\t\t}\n\t\t}\n\t\t//3. suf\n\t\tsuf[p]=suf[rs];\n\t\tfor(int i=0;i<SZ(suf[ls]);++i){\n\t\t\tif(suf[p].back().se != (suf[p].back().se | suf[ls][i].se)){\n\t\t\t\tsuf[p].pb(mk(suf[ls][i].fi,suf[p].back().se|suf[ls][i].se));\n\t\t\t}\n\t\t}\n\t\t\n\t\tassert(SZ(pre[p])<=21);\n\t\tassert(SZ(suf[p])<=21);\n\t}\n\tvoid build(int p,int l,int r){\n\t\ttl[p]=l;tr[p]=r;\n\t\tif(l==r){\n\t\t\tans[p]=(a[l]>=X);\n\t\t\tpre[p].pb(mk(l,a[l]));\n\t\t\tsuf[p].pb(mk(l,a[l]));\n\t\t\treturn;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tbuild(p<<1,l,mid);\n\t\tbuild(p<<1|1,mid+1,r);\n\t\tpush_up(p);\n\t}\n\tvoid point_modify(int p,int l,int r,int pos,int v){\n\t\tif(l==r){\n\t\t\tans[p]=(v>=X);\n\t\t\tpre[p][0]=mk(l,v);\n\t\t\tsuf[p][0]=mk(l,v);\n\t\t\treturn;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tif(pos<=mid)\n\t\t\tpoint_modify(p<<1,l,mid,pos,v);\n\t\telse\n\t\t\tpoint_modify(p<<1|1,mid+1,r,pos,v);\n\t\tpush_up(p);\n\t}\n\tll query(int p,int l,int r,int ql,int qr){\n\t\tassert(ql>=l);assert(qr<=r);\n\t\tif(ql==l && qr==r)\n\t\t\treturn ans[p];\n\t\tint mid=(l+r)>>1;\n\t\tif(qr<=mid)\n\t\t\treturn query(p<<1,l,mid,ql,qr);\n\t\telse if(ql>mid)\n\t\t\treturn query(p<<1|1,mid+1,r,ql,qr);\n\t\telse{\n\t\t\tll res=query(p<<1,l,mid,ql,mid) + query(p<<1|1,mid+1,r,mid+1,qr);\n\t\t\tint ls=p<<1,rs=p<<1|1;ck(ls);ck(rs);\n\t\t\tint j=SZ(suf[ls])-1;\n\t\t\twhile(suf[ls][j].fi<ql)\n\t\t\t\t--j;\n\t\t\tassert(j>=0);\n\t\t\tfor(int i=0;i<SZ(pre[rs]) && pre[rs][i].fi<=qr;++i){\n\t\t\t\tint nxt=(i<=SZ(pre[rs])-2?pre[rs][i+1].fi:tr[p]+1);\n\t\t\t\tckmin(nxt,qr+1);\n\t\t\t\tif((suf[ls][j].se|pre[rs][i].se)<X)\n\t\t\t\t\tcontinue;\n\t\t\t\twhile(j>0 && (suf[ls][j-1].se|pre[rs][i].se)>=X)\n\t\t\t\t\t--j;\n\t\t\t\tres+=(ll)(suf[ls][j].fi-ql+1) * (nxt-pre[rs][i].fi);\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\t}\n\tSegmentTree(){}\n}T;\n\nint main() {\n\tcin>>n>>m>>X;\n\tfor(int i=1;i<=n;++i)cin>>a[i];\n\tT.build(1,1,n);\n\twhile(m--){\n\t\tint op;cin>>op;\n\t\tif(op==1){\n\t\t\tint i,y;cin>>i>>y;\n\t\t\tT.point_modify(1,1,n,i,y);\n\t\t}\n\t\telse{\n\t\t\tint l,r;cin>>l>>r;\n\t\t\tcout<<T.query(1,1,n,l,r)<<endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\n\n\n\n",
        "postTime": 1594217766,
        "uid": 100674,
        "name": "duyi",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1004F \u3010Sonya and Bitwise OR\u3011"
    },
    {
        "content": "\u9000\u5495\u540e\u7684\u9898\u89e3\n\n\u7ebf\u6bb5\u6811\n\n\u9996\u5148\u6211\u4eec\u53d1\u73b0\u524d\u7f00\u4e0d\u540c\u7684or \u548c\u6700\u591alog\u4e2a\n\n\u6240\u4ee5\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7ebf\u6bb5\u6811\u7684\u8282\u70b9\u8bb0\u5f55\uff0c\u524d\u7f00\uff0c\u540e\u7f00\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u524d\u7f00/\u540e\u7f00\u7684$or$\u548c\u4e0d\u7b49\u4e8e\u4ed6\u524d\u4e00\u4e2a\u6216\u540e\u4e00\u4e2a\u7684\u8282\u70b9\u4f4d\u7f6e\u4ee5\u53ca\u5bf9\u5e94\u7684$or$\u548c\uff0c\u7531\u4e8e\u8fd9\u4e2a\u8282\u70b9\u6570\u4e0d\u8d85\u8fc7$log$\u6240\u4ee5\u66b4\u529b\u5408\u5e76\u5373\u53ef\n\n\u5408\u5e76\u7684\u65f6\u5019\u76f4\u63a5\u628a\u4e24\u4e2a\u8282\u70b9\u7684\u524d\u7f00/\u540e\u7f00\u5408\u5e76\u8d77\u6765\uff0c\u5c31\u662f\u628a\u540e\u4e00\u4e2a\u8282\u70b9\u7684\u524d\u7f00/\u540e\u7f00\u4e00\u4e2a\u4e00\u4e2a\u63d2\u5165\u5373\u53ef\n\n\u7136\u540e\u6700\u540e\u67e5\u8be2\u5565\u7684\u90fd\u548c\u666e\u901a\u7ebf\u6bb5\u6811\u6ca1\u4ec0\u4e48\u533a\u522b\u5427\n\n\u5c31\u662f\u6ce8\u610f\u4e00\u4e0b\u5408\u5e76\u7684\u7ec6\u8282\u5373\u53ef\n\n```cpp\n#include <iostream>\n#include <stdio.h>\n#include <string.h>\n#include <vector>\nusing namespace std;\nconst int N=2e5+5;\nstruct node {\n  long long cnt;\n  vector <pair<int,int>> st,ed;\n}t[N<<1];\nint n,m,x;\nint a[N];\nnode merge(node a,node b) {\n  if(!a.ed.size()) return b;\n  if(!b.ed.size()) return a;\n  node ret;\n  ret.cnt=a.cnt+b.cnt;\n  long long tot=0;\n  for (auto &i:a.ed) {\n    for (auto &j:b.st) {\n      if(((i.first|j.first)>=x)) {\n        tot+=(1ll*i.second*j.second);\n      }\n    }\n  }\n  ret.cnt+=tot;\n  ret.st=a.st;\n  int tmp;\n  tmp=ret.st.back().first;\n  for (auto &i:b.st) {\n    if(((i.first|tmp)==tmp)) {\n      ret.st.back().second+=i.second;\n    }\n    else {\n      ret.st.push_back({i.first|tmp,i.second});\n      tmp|=i.first;\n    }\n  }\n  ret.ed=b.ed;\n  tmp=ret.ed.back().first;\n  for (auto &i:a.ed) {\n    if((i.first|tmp)==tmp) {\n      ret.ed.back().second+=i.second;\n    }\n    else {\n      ret.ed.push_back({i.first|tmp,i.second});\n      tmp|=i.first;\n    }\n  }\n  return ret;\n}\nvoid pushup(int x) {\n  t[x]=merge(t[x<<1],t[x<<1|1]);\n}\nvoid build(int now,int l,int r) {\n  if(l==r) {\n    t[now].ed.push_back({a[l],1});\n    t[now].st.push_back({a[l],1});\n    if(a[l]>=x) {\n      t[now].cnt=1;\n    }\n    else t[now].cnt=0;\n    return ;\n  }\n  int mid=(l+r)>>1;\n  build(now<<1,l,mid);\n  build(now<<1|1,mid+1,r);\n  pushup(now);\n}\nvoid modify(int now,int l,int r,int y,int z) {\n  if(l==r) {\n    a[y]=z;\n    t[now].st.clear();\n    t[now].ed.clear();\n    t[now].st.push_back({z,1});\n    t[now].ed.push_back({z,1});\n    if(a[l]>=x) {\n      t[now].cnt=1;\n    }\n    else t[now].cnt=0;\n    return ;\n  }\n  int mid=(l+r)>>1;\n  if(y<=mid) {\n    modify(now<<1,l,mid,y,z);\n  }\n  else modify(now<<1|1,mid+1,r,y,z);\n  pushup(now);\n}\nnode query(int now,int l,int r,int L,int R) {\n  if(L<=l && r<=R) {\n    return t[now];\n  }\n  node ret;\n  int mid=(l+r)>>1;\n  if(L<=mid) ret=merge(ret,query(now<<1,l,mid,L,R));\n  if(R>mid) ret=merge(ret,query(now<<1|1,mid+1,r,L,R));\n  return ret;\n}\nint main() {\n  scanf(\"%d%d%d\",&n,&m,&x);\n  for (int i=1;i<=n;++i) {\n    scanf(\"%d\",&a[i]);\n  }\n  build(1,1,n);\n  for (int i=1;i<=m;++i) {\n    int opt;\n    scanf(\"%d\",&opt);\n    if(opt==1) {\n      int x,y;\n      scanf(\"%d%d\",&x,&y);\n      a[x]=y;\n      modify(1,1,n,x,y);\n    }\n    else {\n      int l,r;\n      scanf(\"%d%d\",&l,&r);\n      printf(\"%lld\\n\",query(1,1,n,l,r).cnt);\n    }\n  }\n  return 0;\n}\n\n```",
        "postTime": 1594210506,
        "uid": 78187,
        "name": "zjjcth330",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1004F \u3010Sonya and Bitwise OR\u3011"
    },
    {
        "content": "~~\u7b80\u5355\u6570\u636e\u7ed3\u6784\u9898\uff1f~~\n\n\u6211\u4eec\u5148\u8003\u8651\u4e00\u4e2a\u6734\u7d20\u5206\u6cbb\u3002\n\n$[l, mid]$ \u548c $[mid + 1, r]$ \u9012\u5f52\u6c42\u89e3\u3002\n\n$[l,r]$ \u7684\u533a\u95f4\u9700\u8981\u901a\u8fc7 $[l, mid]$ \u7684\u540e\u7f00\u548c $[mid+1,r]$ \u7684\u524d\u7f00\u6765\u6c42\u89e3\u3002\n\n\u7b2c\u4e00\u6b21\u679a\u4e3e\u524d\u8005\u7684\u540e\u7f00\u7136\u540e\u79fb\u52a8\u540e\u8005\uff0c\u7b2c\u4e8c\u6b21\u679a\u4e3e\u540e\u8005\u7136\u540e\u79fb\u52a8\u524d\u8005\u3002\n\n\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f $n \\log n$ \u4f46\u662f\u53ea\u80fd\u652f\u6301\u4e00\u6b21\u8be2\u95ee\uff08bushi\uff09\u3002\n\n\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u7531\u4e8e $OR$ \u7684\u6027\u8d28\uff0c\u4e0d\u4f1a\u53d8\u5316\u8d85\u8fc7 $\\log$ \u6b21\u3002\u6240\u4ee5\u6211\u4eec\u8003\u8651\u7ebf\u6bb5\u6811\u5728\u6bcf\u4e2a\u8282\u70b9\u8bb0\u5f55\u4e00\u4e0b\u662f\u54ea\u4e9b\u4f4d\u7f6e\u8ba9\u8fd9\u4e2a\u53d1\u751f\u4e86\u6539\u53d8\u3002\n\n\u6211\u4eec\u8bb0\u5f55\u4e00\u4e2a $st$ \u8868\u793a\u533a\u95f4 $[l,r]$ \u4ece $l$ \u5f00\u59cb\u8ba1\u7b97\uff0c\u4f1a\u53d8\u5316\u7684\u4f4d\u7f6e\u4ee5\u53ca\u957f\u5ea6\u3002\n\n\u540c\u7406\u6211\u4eec\u8bb0\u5f55\u4e00\u4e2a $ed$ \u8868\u793a\u533a\u95f4 $[l,r]$ \u4ece $r$ \u5f00\u59cb\u8ba1\u7b97\uff0c\u4f1a\u53d8\u5316\u7684\u4f4d\u7f6e\u4ee5\u53ca\u957f\u5ea6\u3002\n\n\u663e\u7136\u8fd9\u4e2a\u4fe1\u606f\u662f\u53ef\u4ee5\u5728\u7ebf\u6bb5\u6811\u4e0a\u9762\u5408\u5e76\u7684\uff0c\u6bcf\u6b21\u8ba1\u7b97\u5f53\u524d\u533a\u95f4\u7684\u590d\u6742\u5ea6\u4e5f\u53ea\u9700\u8981 $\\log^2$\u3002\n\n\u7136\u540e\u8fd9\u9898\u5c31\u505a\u5b8c\u4e86\u3002",
        "postTime": 1597542594,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1004F \u3010Sonya and Bitwise OR\u3011"
    },
    {
        "content": "\u7ebf\u6bb5\u6811\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u8003\u8651\u5982\u4f55\u5904\u7406\u4e00\u6b21\u8be2\u95ee\u3002\n\n\u6211\u4eec\u4ece\u533a\u95f4\u4e2d\u70b9\u5f00\u59cb\uff0c\u5206\u522b\u5411\u4e24\u8fb9\u6c42\u51fa\u524d/\u540e\u7f00$or$\u7684\u503c\uff0c\u7136\u540e\u679a\u4e3e\u6307\u9488\u5411\u4e24\u8fb9\u626b\uff0c\u5229\u7528$two-pointer$\u6765\u6c42\u51fa\u6240\u6709\u8de8\u8fc7\u4e2d\u70b9\u7684\u7b54\u6848\u3002\u7136\u540e\uff0c\u518d\u5411\u4e24\u8fb9\u9012\u5f52\u6c42\u89e3\u3002\n\n\u8fd9\u6837\u505a\u7684\u8bdd\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(len\\log len)$\uff0c\u663e\u7136\u65e0\u6cd5\u627f\u53d7\u3002\n\n\u8003\u8651\u4ee5\u4e0b\u51e0\u4e2a\u4f18\u5316:\n\n1. \u53ef\u4ee5\u53d1\u73b0\uff0c\u6709\u7528\u7684\u524d/\u540e\u7f00\u660e\u663e\u53ea\u6709$\\log$\u4e2a\u3002\u6211\u4eec\u53ea\u8bb0\u5f55\u8fd9$\\log$\u4e2a\u8f6c\u6298\u70b9\u5373\u53ef\u3002\n\n2. \u53d1\u73b0\u8ba1\u7b97\u7684\u533a\u95f4\u5b58\u5728\u5927\u91cf\u91cd\u590d\u3002\u6211\u4eec\u8003\u8651\u5229\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u533a\u95f4\u7b54\u6848\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u7ebf\u6bb5\u6811\u4e0a\u533a\u95f4$[l,r]$\uff0c\u6211\u4eec\u5c06$[l,r]$\u8fd9\u4e00\u6bb5\u8de8\u8fc7\u4e2d\u70b9\u7684\u7b54\u6848\u8ba1\u7b97\u51fa\u6765\uff0c\u7136\u540e\u518d\u52a0\u4e0a\u4e24\u8fb9\u533a\u95f4\u7684\u7b54\u6848\u5373\u53ef\u5f97\u5230\u6574\u4e2a\u7b54\u6848\u3002\u90a3\u4e48\uff0c\u6bcf\u6b21\u8ba1\u7b97\u7b54\u6848\u65f6\uff0c\u5982\u679c\u8be2\u95ee\u7684\u533a\u95f4\u88ab\u5b8c\u5168\u8986\u76d6\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u9884\u5904\u7406\u7684\u7b54\u6848\u3002\u5426\u5219\u8ba1\u7b97\u5b8c\u8de8\u533a\u95f4\u4e2d\u70b9\u7684\u7b54\u6848\u540e\uff0c\u518d\u52a0\u4e0a\u5411\u4e24\u8fb9\u5206\u6cbb\u7684\u7b54\u6848\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u4fee\u6539\u64cd\u4f5c\uff0c\u76f4\u63a5\u4fee\u6539\u540e\u5728\u4e0a\u4f20\u7b54\u6848\u5373\u53ef\u3002\n\n\u6bcf\u6b21\u6c42\u533a\u95f4\u7b54\u6848\u662f$O(\\log n)$\u7684\u3002\u6bcf\u6b21\u4fee\u6539\u64cd\u4f5c\u4f1a\u6c42$O(\\log n)$\u6b21\uff0c\u590d\u6742\u5ea6\u4e3a$O(\\log^2n)$\uff0c\u6bcf\u6b21\u8be2\u95ee\u64cd\u4f5c\u6700\u591a\u88ab\u5206\u6210$O(\\log n)$\u4e2a\u533a\u95f4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(\\log^2n)$\u3002\u518d\u52a0\u4e0a\u9884\u5904\u7406\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O((n+q)\\log^2 n)$\u3002\n\n\u5982\u679c\u5c06\u533a\u95f4\u8865\u9f50\u81f3$2$\u7684\u6b21\u5e42\uff0c\u5219\u53ef\u4ee5\u5229\u7528\u732b\u951f\u535a\u5ba2\u4e0a\u7684\u5c0f\u6280\u5de7\u5feb\u901f\u67e5\u627e\u533a\u95f4\u4f4d\u7f6e\uff0c\u4fee\u6539\u64cd\u4f5c\u53ef\u4ee5\u53d8\u4e3a\u975e\u9012\u5f52\u5f0f\u7684\u3002\u8fd9\u6837\u5199\u5e38\u6570\u7279\u522b\u5c0f\u3002\n\n\u4ee3\u7801:\n```cpp\n#include<bits/stdc++.h>\n#define Rep(i,a,b) for(register int i=(a);i<=(b);++i)\n#define Repe(i,a,b) for(register int i=(a);i>=(b);--i)\n#define pb push_back\n#define mp make_pair\n#define Chkmax(a,b) a=a>b?a:b\n#define Chkmin(a,b) a=a<b?a:b\ntypedef unsigned long long uint64;\ntypedef unsigned int uint32;\ntypedef long long ll;\n\nusing namespace std;\n\nnamespace IO\n{\n    const uint32 Buffsize=1<<15,Output=1<<23;\n    static char Ch[Buffsize],*S=Ch,*T=Ch;\n    inline char getc()\n    {\n        return((S==T)&&(T=(S=Ch)+fread(Ch,1,Buffsize,stdin),S==T)?0:*S++);\n    }\n    static char Out[Output],*nowps=Out;\n    \n    inline void flush(){fwrite(Out,1,nowps-Out,stdout);nowps=Out;}\n\n    template<typename T>inline void read(T&x)\n    {\n        x=0;static char ch;T f=1;\n        for(ch=getc();!isdigit(ch);ch=getc())if(ch=='-')f=-1;\n        for(;isdigit(ch);ch=getc())x=x*10+(ch^48);\n        x*=f;\n    }\n\n    template<typename T>inline void write(T x,char ch='\\n')\n    {\n        if(!x)*nowps++='0';\n        if(x<0)*nowps++='-',x=-x;\n        static uint32 sta[111],tp;\n        for(tp=0;x;x/=10)sta[++tp]=x%10;\n        for(;tp;*nowps++=sta[tp--]^48);\n        *nowps++=ch;\n    }\n}\nusing namespace IO;\n\ninline void file()\n{\n#ifndef ONLINE_JUDGE\n    FILE*DSA=freopen(\"water.in\",\"r\",stdin);\n    FILE*SDU=freopen(\"water.out\",\"w\",stdout);\n#endif\n}\n\nconst int MAXN=1<<18;\n\nstatic int n,m,X,N,a[MAXN],lg2[MAXN];\n\nvoid init()\n{\n\tread(n),read(m),read(X);\n\tRep(i,1,n)read(a[i]);\n\tfor(N=2;N<n;N<<=1);\n\tRep(i,1,N)lg2[i]=lg2[i>>1]+1;\n}\n\n#define eb emplace_back\n#define fi first\n#define se second\n\nnamespace neko\n{\n\ttypedef pair<int,int>PII;\n\tstatic vector<PII>lp[MAXN<<1],rp[MAXN<<1];\n\tstatic int lb[MAXN<<1],rb[MAXN<<1];\n\tstatic ll ans[MAXN<<1];\n\n\tinline int getps(int l,int r)\n\t{\n\t\tstatic int ls,rs;\n\t\tls=l+N-1,rs=r+N-1;\n\t\treturn ls>>lg2[ls^rs];\n\t}\n\n\tinline ll calc(int l,int r)\n\t{\n\t\tstatic int h,ls,rs,llim,rlim;\n\t\th=getps(l,r),ls=h<<1,rs=h<<1|1;\n\t\tstatic ll sm;sm=0ll;\n\t\trlim=lp[rs].size()-1,llim=rp[ls].size()-1;\n\t\tfor(register int i=0,j=rlim;i<=llim&&j>=0;--j)\n\t\t{\n\t\t\tif(lp[rs][j].se>r)continue;\n\t\t\twhile(i<=llim&&(rp[ls][i].se<l||(rp[ls][i].fi|lp[rs][j].fi)<X))++i;\n\t\t\tif(i>llim)break;\n\t\t\tsm+=1ll*(rp[ls][i].se-(l-1))*\n\t\t\t\t((j==rlim?r+1:min(lp[rs][j+1].se,r+1))-lp[rs][j].se);\n\t\t}\n\t\treturn sm;\n\t}\n\n\tinline void pushup(int h)\n\t{\n\t\tlp[h]=lp[h<<1];\n\t\tstatic int it;it=lp[h<<1].back().fi;\n\t\tfor(auto v:lp[h<<1|1])if((v.fi|it)>it)lp[h].eb(v.fi|it,v.se),it|=v.fi;\n\t\t\n\t\trp[h]=rp[h<<1|1];\n\t\tit=rp[h<<1|1].back().fi;\n\t\tfor(auto v:rp[h<<1])if((v.fi|it)>it)rp[h].eb(v.fi|it,v.se),it|=v.fi;\n\t\n\t\tans[h]=calc(lb[h],rb[h])+ans[h<<1]+ans[h<<1|1];\n\t}\n\t\n\tvoid make_tree(int h,int l,int r)\n\t{\n\t\tlb[h]=l,rb[h]=r;\n\t\tif(l==r){lp[h].eb(a[l],l),rp[h].eb(a[l],l),ans[h]=a[l]>=X;return;}\n\t\tint mid=(l+r)>>1;\n\t\tmake_tree(h<<1,l,mid),make_tree(h<<1|1,mid+1,r);\n\t\tpushup(h);\n\t}\n\n\tinline void modify(int x,int y)\n\t{\n\t\tstatic int ps;ps=x+N-1;\n\t\ta[x]=y,ans[ps]=(a[x]>=X);\n\t\tlp[ps].clear(),rp[ps].clear();\n\t\tlp[ps].eb(a[x],x),rp[ps].eb(a[x],x);\n\t\tfor(ps>>=1;ps;ps>>=1)pushup(ps);\n\t}\n\n\tll Q(int L,int R)\n\t{\n\t\tint h=getps(L,R);\n\t\tif(L==lb[h]&&R==rb[h])return ans[getps(L,R)];\n\t\treturn Q(L,rb[h<<1])+Q(lb[h<<1|1],R)+calc(L,R);\n\t}\n}\nusing namespace neko;\n\ninline void solve()\n{\n\tmake_tree(1,1,N);\n\tstatic int opt,x,y;\n\tRep(i,1,m)\n\t{\n\t\tread(opt),read(x),read(y);\n\t\tif(opt==1)modify(x,y);\n\t\telse write(Q(x,y));\n\t}\n\tflush();\n}\n\nint main()\n{\n\tinit();\n\tsolve();\n    return 0;\n}\n```",
        "postTime": 1539783334,
        "uid": 7035,
        "name": "Great_Influence",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1004F \u3010Sonya and Bitwise OR\u3011"
    },
    {
        "content": "# Sonya and Bitwise OR\n\n[CF1004F (Luogu)](https://www.luogu.com.cn/problem/CF1004F)\n\n\n## Solution\n\n\u4eca\u5929\u6d4b\u8bd5\u7684 T4 \uff0c\u8d5b\u65f6\u53ea\u505a\u51fa\u6765\u4e86 $\\mathcal O(mn\\log n)$ \u7684\u505a\u6cd5\uff0c\u6240\u4ee5\u53d1\u73b0\u662f CF \u539f\u9898\u540e\u5c31\u8d76\u5feb\u6765\u5199\u6b63\u89e3\u4e86\u3002\n\n\u5148\u8003\u8651\u66b4\u529b\u8be5\u5982\u4f55\u505a\u3002\u663e\u7136\u66b4\u529b\u601d\u8def\u5f88\u7b80\u5355\uff0c\u76f4\u63a5\u679a\u4e3e\u5b50\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\u5373\u53ef\uff0c\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\mathcal O(mn^2)$ \u8fd9\u4e00\u7ea7\u522b\u7684\u3002\n\n\u7136\u540e\u6765\u8003\u8651\u5982\u4f55\u4f18\u5316\u3002\u89c2\u5bdf\u9898\u76ee\u8981\u6c42\u7684\u8fd0\u7b97\uff0c\u7a0d\u5fae\u60f3\u4e00\u4e0b\u5c31\u53ef\u4ee5\u77e5\u9053\u5f53\u5b50\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u56fa\u5b9a\u65f6\uff0c\u533a\u95f4\u6216\u548c\u662f\u968f\u7740\u53f3\u7aef\u70b9\u53f3\u79fb\u800c\u53d8\u5927\u7684\uff0c\u8fd9\u542f\u53d1\u6211\u4eec\u7528**\u5c3a\u53d6\u6cd5/\u53cc\u6307\u9488**\u6cd5\u6765\u505a\u8fd9\u9053\u9898\u3002\u56e0\u4e3a\u5f53\u5de6\u7aef\u70b9\u53f3\u79fb\u7684\u65f6\u5019\u5e76\u4e0d\u80fd\u5f88\u65b9\u4fbf\u7684\u5f97\u51fa\u65b0\u7684\u533a\u95f4\u6216\u548c\uff0c\u6240\u4ee5\u9009\u62e9\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u533a\u95f4\u6216\u548c\u3002\u8fd9\u4e00\u65b9\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\mathcal O(mn\\log n)$ \u7684\u3002\n\n\u96be\u9053\u4f18\u5316\u5c31\u5230\u6b64\u4e3a\u6b62\u4e86\u5417\uff1f\u5e76\u4e0d\u662f\u3002\u8fd8\u662f\u5047\u8bbe\u786e\u5b9a\u5b50\u533a\u95f4\u5de6\u7aef\u70b9\uff0c\u90a3\u4e48\u5f53\u6211\u4eec\u53f3\u79fb\u53f3\u7aef\u70b9\u7684\u65f6\u5019\uff0c\u6bcf\u4e00\u6b21\u6539\u53d8\u533a\u95f4\u6216\u548c\u7684\u65f6\u5019\u90fd\u81f3\u5c11\u4f1a\u5bf9\u7b54\u6848\u7684\u4e8c\u8fdb\u5236\u6539\u53d8\u4e00\u4f4d\uff0c\u6240\u4ee5\u5f53\u5de6\u7aef\u70b9\u56fa\u5b9a\u7684\u65f6\u5019\uff0c\u4e0d\u540c\u7684\u533a\u95f4\u6216\u548c\u6700\u591a\u53ea\u6709 $\\log a_i$ \u4e2a\u3002\u6240\u4ee5\u8fd9\u4e00\u7279\u70b9\u542f\u53d1\u6211\u4eec\u5728\u7ebf\u6bb5\u6811\u4e0a\u7ef4\u62a4\u4e0d\u540c\u7684\u533a\u95f4**\u524d\u7f00\u6216\u548c**\u548c**\u540e\u7f00\u6216\u548c**\u7684\u5f00\u5934\u4f4d\u7f6e\u4ee5\u53ca\u5bf9\u5e94\u7684\u533a\u95f4\u6216\u548c\uff0c\u540c\u65f6\u7ef4\u62a4\u5f53\u524d\u7ebf\u6bb5\u6811\u533a\u95f4\u7684\u7b54\u6848\u3002\u5728\u4e0a\u4f20\u7684\u65f6\u5019\u76f4\u63a5\u66b4\u529b\u7ef4\u62a4\u8fd9\u4e09\u4e2a\u503c\u5373\u53ef\u3002\u90a3\u4e48\u73b0\u5728\u7684\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u5982\u4f55\u5229\u7528\u8fd9\u4e9b\u503c\u6765\u6c42\u7b54\u6848\u3002\u5728\u8fd9\u91cc\u53ea\u9700\u8981\u8ba8\u8bba\u533a\u95f4\u8de8\u8fc7\u4e86\u7ebf\u6bb5\u6811\u533a\u95f4\u4e2d\u70b9\u8fd9\u4e00\u60c5\u51b5\uff0c\u5982\u679c\u4e0d\u662f\u8fd9\u79cd\u60c5\u51b5\u90fd\u53ef\u4ee5\u9012\u5f52\u8fdb\u5b50\u6811\u8f6c\u5316\u6210\u4e3a\u8fd9\u4e00\u95ee\u9898\u3002\n\n\u5982\u679c\u8be2\u95ee\u533a\u95f4\u8de8\u8fc7\u4e86\u7ebf\u6bb5\u6811\u533a\u95f4\u4e2d\u70b9\uff0c\u90a3\u4e48\u8fd9\u4e2a\u533a\u95f4\u7684\u7b54\u6848\u5c31\u5e94\u8be5\u662f\u5de6\u53f3\u5b50\u6811\u7684\u7b54\u6848\u4e4b\u548c\u52a0\u4e0a\u5de6\u7aef\u70b9\u5728\u5de6\u5b50\u6811\u3001\u53f3\u7aef\u70b9\u5728\u53f3\u5b50\u6811\u7684\u60c5\u51b5\u6570\uff0c\u56e0\u4e3a\u7ef4\u62a4\u597d\u4e86\u533a\u95f4**\u524d\u540e\u7f00\u6216\u548c**\uff0c\u6240\u4ee5\u76f4\u63a5\u5229\u7528\u8fd9\u4e9b\u4e1c\u897f\u8fdb\u884c\u5c3a\u53d6\u5373\u53ef\uff0c\u5177\u4f53\u770b\u4ee3\u7801\u5206\u6790\u3002\n\n\u5728\u4ee3\u7801\u5b9e\u73b0\u7684\u8fc7\u7a0b\u4e2d\u6709\u4e00\u4e9b\u9700\u8981\u6ce8\u610f\u7684\u70b9\uff1a\n\n1. `vector` \u7684 `size()` \u8fd4\u56de\u7684\u662f\u4e00\u4e2a `unsigned` \u503c\uff0c\u9700\u8981\u5f3a\u5236\u8f6c\u4e3a `int` \u7c7b\u624d\u53ef\u4ee5\u4f7f\u7528\uff0c\u5426\u5219\u505a\u51cf\u6cd5\u8fd0\u7b97\u5728\u7b54\u6848\u5e94\u8be5\u662f $-1$ \u65f6\u4f1a\u51fa\u73b0\u95ee\u9898\u3002\n2. `|` \u6216\u8fd0\u7b97\u7684\u4f18\u5148\u7ea7\u662f\u5728\u903b\u8f91\u8fd0\u7b97\u7b26\u4e4b\u540e\u7684\uff0c\u6240\u4ee5\u6216\u8fd0\u7b97\u540e\u8ddf\u903b\u8f91\u8fd0\u7b97\u7b26\u7684\u65f6\u5019\u4e00\u5b9a\u8bb0\u5f97**\u6253\u62ec\u53f7**\uff01\uff01\uff01\uff08\u6211\u56e0\u4e3a\u8fd9\u4e2a\u539f\u56e0\u65e0\u7aef\u8c03\u4e86 $2.5$ \u5c0f\u65f6\u7684\u4ee3\u7801\uff09\n\n### Code\n\n```c++\n#include<bits/stdc++.h>\n#define mem(a,b) memset(a,b,sizeof a)\n#define int long long\n#define MP make_pair\n#define F first\n#define S second\nusing namespace std;\ntemplate<typename T> void read(T &k)\n{\n\tk=0;T flag=1;char b=getchar();\n\twhile (!isdigit(b)) {flag=(b=='-')?-1:1;b=getchar();}\n\twhile (isdigit(b)) {k=k*10+b-48;b=getchar();}\n\tk*=flag;\n}\nconst int _SIZE=1e5;\nint n,m,x,a[_SIZE+5];\n#define LC (k<<1)\n#define RC ((k<<1)|1)\nint ans[(_SIZE<<2)+5];//\u8bb0\u5f55\u7ebf\u6bb5\u6811\u533a\u95f4\u7b54\u6848\nvector<pair<int,int> >up[(_SIZE<<2)+5],down[(_SIZE<<2)+5];//up\u8868\u793a\u524d\u7f00\uff0cdown\u8868\u793a\u540e\u7f00\uff0cfirst\u8868\u793a\u4f4d\u7f6e\uff0csecond\u8868\u793a\u503c\nvoid pushup(int k,int l,int r)\n{\n\tans[k]=ans[LC]+ans[RC];//\u5148\u7ee7\u627f\u5de6\u53f3\u5b50\u6811\u7b54\u6848\n\tfor (int i=0,j=down[LC].size();i<up[RC].size();i++)//\u5bf9\u5de6\u53f3\u5b50\u6811\u8fdb\u884c\u5c3a\u53d6\uff0ci\u5728\u53f3\u5b50\u6811\uff0cj\u5728\u5de6\u5b50\u6811\n\t{\n\t\tint tail=((i<=(int)up[RC].size()-(int)2) ? up[RC][i+1].F : r+1);//\u8ba1\u7b97\u5c3a\u53d6\u7684\u4e0a\u754c\n\t\twhile (j>0 && (down[LC][j-1].S|up[RC][i].S)>=x) j--;//\u5c06j\u4ee3\u8868\u7684\u4f4d\u7f6e\u5411\u540e\u79fb\uff08\u56e0\u4e3adown\u662f\u540e\u7f00\u6240\u4ee5\u4f4d\u7f6e\u662f\u4ece\u5927\u5230\u5c0f\u653e\u8fdb\u53bb\u7684\uff09\n\t\tif (j!=down[LC].size()) ans[k]+=(down[LC][j].F-l+1)*(tail-up[RC][i].F);//\u5982\u679c\u5b58\u5728j\u6ee1\u8db3\u6761\u4ef6\u5219\u66f4\u65b0\u7b54\u6848\uff0c\u524d\u534a\u6bb5\u957f\u5ea6\u4e3aj\u5bf9\u5e94\u7684\u4f4d\u7f6e\u5230\u4e0b\u754c\u7684\u6570\u5b57\u603b\u6570\uff0c\u540e\u534a\u6bb5\u5219\u662fi\u5bf9\u5e94\u7684\u4f4d\u7f6e\u5230\u4e0a\u754c\u7684\u6570\u5b57\u603b\u6570\n\t}\n\tup[k]=up[LC];//\u5148\u7ee7\u627f\n\tfor (int i=0;i<up[RC].size();i++)\n\t\tif (up[k].back().S != (up[RC][i].S|up[k].back().S)) //\u5982\u679c\u53ef\u4ee5\u5f97\u5230\u65b0\u7684\u6216\u503c\n\t\t\tup[k].push_back(MP(up[RC][i].F,up[RC][i].S|up[k].back().S));//\u5c06\u8fd9\u4e2a\u65b0\u7684\u533a\u95f4\u6216\u503c\u52a0\u5165\n\tdown[k]=down[RC];//\u4e0eup\u7684\u66f4\u65b0\u57fa\u672c\u76f8\u4f3c\n\tfor (int i=0;i<down[LC].size();i++)\n\t\tif (down[k].back().S != (down[LC][i].S|down[k].back().S)) \n\t\t\tdown[k].push_back(MP(down[LC][i].F,down[LC][i].S|down[k].back().S));\n}\nvoid build(int k,int l,int r)//\u5efa\u6811\n{\n\tif (l==r)\n\t{\n\t\tans[k]=(a[l]>=x);\n\t\tup[k].push_back(MP(l,a[l]));//\u5efa\u6811\u7684\u65f6\u5019\u76f4\u63a5\u63d2\u5165\u5373\u53ef\n\t\tdown[k].push_back(MP(l,a[l]));\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tbuild(LC,l,mid);\n\tbuild(RC,mid+1,r);\n\tpushup(k,l,r);\n}\nvoid update(int k,int l,int r,int pos,int v)\n{\n\tif (l==r && l==pos)\n\t{\n\t\tans[k]=(v>=x);\n\t\tup[k][0]=MP(l,v);//\u5efa\u6811\u7684\u65f6\u5019\u5df2\u7ecf\u4fdd\u8bc1\u6709[k][0]\u4e86\uff0c\u6240\u4ee5\u66f4\u65b0[k][0]\u5373\u53ef\n\t\tdown[k][0]=MP(l,v);\n\t\treturn;\n\t}\n\tif (l>pos || r<pos) return;\n\tint mid=l+r>>1;\n\tupdate(LC,l,mid,pos,v);\n\tupdate(RC,mid+1,r,pos,v);\n\tpushup(k,l,r);\n}\nint query(int k,int l,int r,int a,int b)\n{\n\tif (l==a && r==b) return ans[k];\n\tint mid=l+r>>1;\n\tif (b<=mid) return query(LC,l,mid,a,b);//\u5728\u5de6\u5b50\u6811\uff0c\u76f4\u63a5\u9012\u5f52\u5165\u5de6\u5b50\u6811\n\telse if (a>mid) return query(RC,mid+1,r,a,b);//\u4e0e\u5de6\u5b50\u6811\u540c\u7406\n\telse\n\t{\n\t\tint res=query(LC,l,mid,a,mid)+query(RC,mid+1,r,mid+1,b);//\u5148\u5206\u522b\u7edf\u8ba1\u5de6\u53f3\u5b50\u6811\u518d\u7edf\u8ba1\u8de8\u8d8a\u4e2d\u70b9\u7684\u7b54\u6848\n\t\tint j=(int)down[LC].size()-(int)1;\n\t\twhile (down[LC][j].F<a) j--;//\u5148\u627e\u5230j\u7684\u4e0a\u754c\n\t\tfor (int i=0;i<up[RC].size() && up[RC][i].F<=b;i++)//\u5c3a\u53d6\uff0c\u4e0e\u4e0a\u4f20\u76f8\u4f3c\n\t\t{\n\t\t\tint tail=(i<=(int)up[RC].size()-(int)2)?up[RC][i+1].F:r+1;\n                        tail=min(tail,b+1);//\u4e0a\u754c\u5e94\u8be5\u4fdd\u8bc1\u5728\u8be2\u95ee\u533a\u95f4\u5185\n\t\t\tif ((down[LC][j].S|up[RC][i].S)<x) continue;\n\t\t\twhile (j>0 && (down[LC][j-1].S|up[RC][i].S)>=x) j--;\n\t\t\tres+=(down[LC][j].F-a+1)*(tail-up[RC][i].F);\n\t\t}\n\t\treturn res;\n\t}\n}\nsigned main()\n{\n\tread(n),read(m),read(x);\n\tfor (int i=1;i<=n;i++) read(a[i]);\n\tbuild(1,1,n);\n\t//return 0;\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tint op,l,r;\n\t\tread(op),read(l),read(r);\n\t\tif (op==1) update(1,1,n,l,r);\n\t\telse printf(\"%lld\\n\",query(1,1,n,l,r));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1660051476,
        "uid": 345225,
        "name": "Hanx16QwQ",
        "ccfLevel": 0,
        "title": "CF1004F Sonya and Bitwise OR"
    },
    {
        "content": "\u5047\u8bbe\u53ea\u6709\u4e00\u4e2a\u5168\u5c40\u8be2\u95ee\uff0c\u8003\u8651\u5206\u6cbb\u3002\n\n\u73b0\u5728\u9700\u8981\u8ba1\u7b97\u8de8\u8d8a\u533a\u95f4\u4e2d\u70b9\u7684\u5de6\u3001\u53f3\u7aef\u70b9\u5bf9\u6570\u3002\u8bb0\u5f55\u4ee5\u533a\u95f4\u4e2d\u70b9\u4e3a\u4e00\u7aef\u7684\u524d\u540e\u7f00\uff0c\u642d\u914d\u53cc\u6307\u9488\u5c31\u53ef\u4ee5 $O(n)$ \u8ba1\u7b97\u3002\uff08\u51c6\u786e\u7684\u8bf4\u662f\u4ee5\u4e0b\u6807\u4e3a\u533a\u95f4\u4e2d\u70b9 +1 \u7684\u70b9\u4e3a\u4e00\u7aef\u7684\u524d\u7f00\uff09\u3002\n\n\u6ce8\u610f\u5230\u56fa\u5b9a\u4e00\u7aef\uff0c\u533a\u95f4\u6216\u548c\u662f\u968f\u533a\u95f4\u957f\u5ea6\u5355\u8c03\u4e0d\u964d\u7684\uff0c\u800c\u4e14\u4e00\u6b21\u53d8\u5927\u81f3\u5c11\u6539\u53d8\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\uff0c\u6240\u4ee5\u56fa\u5b9a\u4e00\u7aef\u70b9\u7684\u6240\u6709\u533a\u95f4\u6216\u548c\u7684\u4e2a\u6570\u662f\u5bf9\u6570\u7ea7\u522b\u7684\u3002\uff08\u533a\u95f4 $\\gcd$ \u4e5f\u6709\u7c7b\u4f3c\u7684\u6027\u8d28\u3002\uff09\n\n\u5c31\u53ef\u4ee5\u5229\u7528\u7ebf\u6bb5\u6811\u5929\u7136\u7684\u5206\u6cbb\u7ed3\u6784\u4ee5\u53ca\u53ef\u4ee5\u5feb\u901f\u5408\u5e76\u533a\u95f4\u7684\u4f18\u70b9\u6765\u52a0\u901f\u67e5\u8be2\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u7ebf\u6bb5\u6811\u4e0a\u7684\u8282\u70b9\uff0c\u7ef4\u62a4\u5f53\u524d\u8282\u70b9\u5bf9\u5e94\u533a\u95f4\u7684\u524d\u540e\u7f00\u6216\u548c\uff08\u53ef\u4ee5\u5f00\u4e24\u4e2a```vector```\uff0c\u9700\u8981\u8bb0\u5f55\u503c\u4ee5\u53ca\u5bf9\u5e94\u7684\u4f4d\u7f6e\u4e0b\u6807\uff09\u3002\n\n\u7136\u540e\u5728\u7ed3\u6784\u4f53\u4e2d\u5c01\u88c5\u5408\u5e76\u7684\u51fd\u6570\u53ef\u4ee5\u5927\u5927\u7b80\u5316\u4ee3\u7801\u3002\n\n```cpp\nstruct value {\n    vector<pair<int, int>> pre, suf;\n    ll sum; int l, r;\n    value() {pre.clear(); suf.clear(); sum = 0; return;}\n};\n#define mp make_pair\nvalue operator + (value a, value b) {\n    if(!a.pre.size()) return b;\n    if(!b.pre.size()) return a;\n//    \u4efb\u610f\u4e00\u4e2a\u4e3a\u7a7a\u8fd4\u56de\u53e6\u4e00\u4e2a\uff08query\u51fd\u6570\u5185\u7528\uff09\n\t\n    value res; res.l = a.l, res.r = b.r;\n    res.sum = a.sum + b.sum;\n    res.pre = a.pre;\n    for(auto now : b.pre)\n        if((a.pre.back().fir | now.fir) != res.pre.back().fir)\n            res.pre.emplace_back(mp(a.pre.back().fir | now.fir, now.sec));\n//    \u5408\u5e76\u524d\u7f00\n\t\n\tres.suf = b.suf;\n    for(auto now : a.suf)\n        if((b.suf.back().fir | now.fir) != res.suf.back().fir)\n            res.suf.emplace_back(mp(b.suf.back().fir | now.fir, now.sec));\n//    \u5408\u5e76\u540e\u7f00\n\t\n\tfor(int i = 0, j = b.pre.size() - 1; i < (int)a.suf.size(); i++) {\n        while(j >= 0 && (a.suf[i].fir | b.pre[j].fir) >= x) j--;\n        if(j + 1 < (int)b.pre.size())\n            res.sum += 1ll * (a.suf[i].sec - (i + 1 < (int)a.suf.size() ? a.suf[i + 1].sec : a.l - 1))\n             * (b.r - b.pre[j + 1].sec + 1);\n    }\n//    \u8ba1\u7b97\u7b54\u6848\n    return res;\n}\n```\n\n\u5176\u4ed6\u7684\u5c31\u662f\u7ebf\u6bb5\u6811\u7684\u57fa\u672c\u64cd\u4f5c\u4e86\uff0c\u590d\u6742\u5ea6 $O(n \\log n \\log V)$\u3002\n\n[Code](https://www.luogu.com.cn/paste/iathg5ed).",
        "postTime": 1660034465,
        "uid": 90027,
        "name": "GG_jok_er",
        "ccfLevel": 0,
        "title": "CF1004F Sonya and Bitwise OR \u9898\u89e3"
    },
    {
        "content": "\u5f88\u6709\u8da3\u7684\u4e00\u9053\u9898\n\n## \u89e3\u6790\n\n\u9996\u5148\u8003\u8651\u5c06\u4e24\u4e2a\u533a\u95f4 $[l_1, r_1], [l_2, r_2]$ \u5408\u5e76\uff08\u5de6\u53f3 \u201c\u8d34\u201d \u5728\u4e00\u8d77\uff09\u540e\u4f1a\u4ea7\u751f\u7684**\u65b0**\u8d21\u732e\n\n\u663e\u7136\u6211\u4eec\u9700\u8981\u7edf\u8ba1\u6240\u6709\u7684 $i \\in [l_1, r_1], j\\in [l_2, r_2]$ \u4ea7\u751f\u7684 $[i, r_1][l_2, j]$\uff08$[a, b][c, d]$ \u8fd9\u6837\u5199\u53ef\u80fd\u4e0d\u592a\u4e25\u8c28...\u4e0d\u8fc7\u611f\u6027\u7406\u89e3\u4e0b \\kk\uff09\u533a\u95f4\uff0c\u5b83\u4eec\u5404\u81ea\u7684\u533a\u95f4 \u201c`|`\u201d \u662f\u5426\u8d85\u8fc7 $x$\n\n\u66b4\u529b\u679a\u4e3e\u662f $|[l, r]|^2$ \u7684\u3002\u4f46\u6ce8\u610f\u5230\u4e0d\u540c\u7684 \u524d\u7f00/\u540e\u7f00 \u533a\u95f4 \u201c`|`\u201d \u81f3\u591a\u53ea\u6709 $\\log a$ \u79cd\uff1b\u56e0\u6b64\u5c06\u540c\u4e00\u503c\u7684 \u524d\u7f00/\u540e\u7f00 \u533a\u95f4 \u201c\u7f29\u201d \u5230\u4e00\u8d77\u679a\u4e3e\uff0c\u590d\u6742\u5ea6\u5c31\u53d8\u6210 $\\log^2 a$ \u7684\u4e86\u3002\u53e6\u5916\u8fd8\u53d1\u73b0\u679a\u4e3e\u53ef\u4ee5\u7528\u53cc\u6307\u9488\u4f18\u5316\uff08\u5177\u4f53\u6765\u8bf4\uff0c\u82e5\u6709 $[i, r_1][l_2, j]$ \u7684\u533a\u95f4 \u201c`|`\u201d \u503c\u5927\u4e8e\u7b49\u4e8e $x$\uff0c\u90a3\u4e48\u5bf9\u4e8e $k<i$\uff0c$[k, r_1][l_2, j]$ \u7684\u533a\u95f4 \u201c`|`\u201d \u503c\u4e5f\u4e00\u5b9a\u5927\u4e8e\u7b49\u4e8e $x$\uff09\uff0c\u4e8e\u662f\u590d\u6742\u5ea6\u5c31\u964d\u5230\u4e86 $\\log a$\n\n\uff08\u4ee5\u4e0a\u8fd9\u4e9b\u5185\u5bb9\u5176\u5b9e\u53ef\u4ee5\u8003\u8651\u76f4\u63a5\u5199\u5230\u7ed3\u6784\u4f53\u91cc\uff0c\u4e0b\u9762\u4f1a\u65b9\u4fbf\u5f88\u591a\uff09\n\n\u63a5\u7740\u6211\u4eec\u8003\u8651\u5efa\u51fa\u4e00\u9897\u7ebf\u6bb5\u6811\u3002\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u4e0a\u7684\u6bcf\u4e2a\u7ed3\u70b9 $[l, r]$\uff0c\u6211\u4eec\u7ef4\u62a4 $[l, r]$ \u533a\u95f4\u5185\u90e8\u7684\u8d21\u732e\u4ee5\u53ca $[l, r]$ \u7684 \u524d\u7f00/\u540e\u7f00 \u533a\u95f4 \u201c`|`\u201d \u503c\u4e0d\u540c\u7684\u533a\u5757\u3002\u524d\u8005\u53ef\u4ee5\u901a\u8fc7\u521a\u624d\u7684\u5408\u5e76\u65b9\u5f0f $\\log a$ \u5730 `pushup`\uff1b\u540e\u8005\u7684\u8bdd\uff0c\u4f8b\u5982\u7ef4\u62a4\u524d\u7f00\u533a\u95f4 \u201c`|`\u201d \u503c\u7684\u533a\u5757\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u7ee7\u627f\u7ebf\u6bb5\u6811\u5de6\u513f\u5b50\u7684\u533a\u5757\uff0c\u7136\u540e\u5c06\u53f3\u513f\u5b50\u533a\u95f4\u4ee5\u524d\u7f00\u533a\u5757\uff08\u201c`|`\u201d \u503c\u76f8\u540c\u7684\u4e3a\u4e00\u5757\uff09\u4e00\u5757\u5757\u6dfb\u52a0\uff08\u5176\u5b9e\u5c31\u662f\u53f3\u513f\u5b50\u7ef4\u62a4\u7684\u7684\u524d\u7f00\u533a\u95f4 \u201c`|`\u201d \u503c\u4e0d\u540c\u7684\u533a\u5757\uff09\uff0c\u8fd9\u6837\u8fd9\u90e8\u5206\u590d\u6742\u5ea6\u4e5f\u662f $\\log a$ \u7684\n\n\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\uff0c\u6211\u4eec\u5728\u7ebf\u6bb5\u6811\u4e0a\u627e\u5230 $\\log n$ \u5757\u533a\u95f4\uff1b\u8fd9\u4e9b\u533a\u95f4\u6070\u597d\u53ef\u4ee5 \u201c\u62fc\u201d \u6210\u8be2\u95ee\u533a\u95f4\u3002\u8fd9\u4e9b\u533a\u95f4\u5185\u90e8\u7684\u7b54\u6848\u6211\u4eec\u5df2\u7ecf\u5728\u7ebf\u6bb5\u6811\u4e0a\u5904\u7406\u51fa\u6765\u4e86\uff0c\u4e8e\u662f\u53ea\u9700\u518d\u7528\u521a\u624d\u7684\u5408\u5e76\u65b9\u5f0f $\\log a$ \u5730**\u5408\u5e76\u8fd9\u4e9b\u533a\u95f4**\uff0c\u5171\u5408\u5e76 $\\log n-1$ \u6b21\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u8be2\u95ee\u533a\u95f4\u7684\u603b\u8d21\u732e\u4e86\uff08\u8fd9\u90e8\u5206\u542c\u8d77\u6765\u5f88\u5947\u5999\uff0c\u5176\u5b9e\u5b9e\u73b0\u548c\u666e\u901a\u7ebf\u6bb5\u6811\u8be2\u95ee\u5f88\u76f8\u4f3c\uff1b\u5408\u5e76\u53ea\u9700\u5728\u6bcf\u6b21\u8fd4\u56de\u65f6\u5904\u7406\u5c31\u884c\u4e86\uff09\n\n## CODE\n\n\u53ef\u80fd\u63cf\u8ff0\u7684\u4e0d\u662f\u5f88\u6e05\u695aX\uff0c\u5177\u4f53\u53ef\u89c1\u4ee3\u7801\uff08\u611f\u89c9\u5b9e\u73b0\u8fd8\u662f\u86ee\u6e05\u6670\u7684\uff09\n\n```cpp\n#include <cstdio>\n#include <vector>\n#define ll long long\nusing std::vector;\n\nconst int MAXN =1e5+20, MAXSeg =1<<18;\n\n/*------------------------------Variable------------------------------*/\n\nint X;\n\n/*------------------------------Seg------------------------------*/\n\nint N =1;\nstruct chunk{\n\tint val, len;\n\t\n\tchunk(){}\n\tchunk(const int &VAL, const int &LEN):val(VAL), len(LEN){}\n};\nstruct interval{/*\u533a\u95f4*/\n\tll ctrb;/*\u8be5\u533a\u95f4\u7684\u8d21\u732e*/\n\tvector<chunk> pre, suf;/*\u524d\u540e\u7f00 \"|\" \u533a\u5757*/\n\t\n\tinterval(){}\n\tinterval(const int &VAL){\n\t\tctrb =(VAL >= X);\n\t\tpre.push_back(chunk(VAL, 1));\n\t\tsuf.push_back(chunk(VAL, 1));\n\t}\n\tinterval(const interval &A, const interval &B){\n\t\tctrb =A.ctrb+B.ctrb;\n\t\t\n\t\tint Sum =0;\n\t\t// \u6709\u5355\u8c03\u6027\uff0c\u53cc\u6307\u9488\u7edf\u8ba1 //\n\t\tfor(int i =0, j =(int)B.pre.size()-1; i < (int)A.suf.size(); ++i){\n\t\t\t#define I A.suf[i]\n\t\t\t#define J B.pre[j]\n\t\t\twhile(j >= 0 && (I.val|J.val) >= X)\n\t\t\t\tSum +=J.len, --j;\n\t\t\tctrb +=1ll*I.len*Sum;\n\t\t\t#undef I\n\t\t\t#undef J\n\t\t}\n\t\t\n\t\tpre.assign(A.pre.begin(), A.pre.end());\n\t\tfor(int i =0; i < (int)B.pre.size(); ++i){\n\t\t\t#define NW pre[(int)pre.size()-1]\n\t\t\t#define NEW B.pre[i]\n\t\t\tif(pre.empty())\n\t\t\t\tpre.push_back(chunk(NEW.val, NEW.len));\n\t\t\telse if((NW.val|NEW.val) != NW.val)\n\t\t\t\tpre.push_back(chunk((NW.val|NEW.val), NEW.len));\n\t\t\telse\n\t\t\t\tNW.len +=NEW.len;\n\t\t\t#undef NW\n\t\t\t#undef NEW\n\t\t}\n\t\tsuf.assign(B.suf.begin(), B.suf.end());\n\t\tfor(int i =0; i < (int)A.suf.size(); ++i){\n\t\t\t#define NW suf[(int)suf.size()-1]\n\t\t\t#define NEW A.suf[i]\n\t\t\tif(suf.empty())\n\t\t\t\tsuf.push_back(chunk(NEW.val, NEW.len));\n\t\t\telse if((NW.val|NEW.val) != NW.val)\n\t\t\t\tsuf.push_back(chunk((NW.val|NEW.val), NEW.len));\n\t\t\telse\n\t\t\t\tNW.len +=NEW.len;\n\t\t\t#undef NW\n\t\t\t#undef NEW\n\t\t}\n\t}\n}node[MAXSeg];\n\ninline void pushup(const int &x){\n\tnode[x] =interval(node[x<<1], node[(x<<1)|1]);\n}\n\nvoid modify(const int &pos, const int &val, const int &nl =1, const int &nr =N, const int &x =1){\n\tif(nl == nr){\n\t\tnode[x] =interval(val);\n\t\treturn;\n\t}\n\tint mid =(nl+nr)>>1;\n\tif(pos <= mid)\n\t\tmodify(pos, val, nl, mid, x<<1);\n\telse\n\t\tmodify(pos, val, mid+1, nr, (x<<1)|1);\n\tpushup(x);\n}\n\ninterval query(const int &l, const int &r, const int &nl =1, const int &nr =N, const int &x =1){\n\tif(nl == l && nr == r)\n\t\treturn node[x];\n\tint mid =(nl+nr)>>1;\n\tif(r <= mid)\n\t\treturn query(l, r, nl, mid, x<<1);\n\telse if(l >= mid+1)\n\t\treturn query(l, r, mid+1, nr, (x<<1)|1);\n\telse\n\t\treturn interval(query(l, mid, nl, mid, x<<1), query(mid+1, r, mid+1, nr, (x<<1)|1));\n}\n\n/*------------------------------Main------------------------------*/\n\ninline int read(){\n\tint x =0; char c =getchar();\n\twhile(c < '0' || c > '9') c =getchar();\n\twhile(c >= '0' && c <= '9') x = (x<<3) + (x<<1) + (48^c), c =getchar();\n\treturn x;\n}\n\nvoid write(const ll &x){\n\tif(x/10)\n\t\twrite(x/10);\n\tputchar('0'+x%10);\n}\n\nint main(){\n\tint n =read(), m =read();\n\tX =read();\n\t\n\twhile(N < n)\n\t\tN <<=1;\n\tfor(int i =N; i < N+n; ++i)\n\t\tnode[i] =interval(read());\n\tfor(int i =N-1; i >= 1; --i)\n\t\tpushup(i);\n\t\n\tfor(int t =0; t < m; ++t){\n\t\tint op =read();\n\t\tif(op == 1){\n\t\t\tint i =read(), y =read();\n\t\t\tmodify(i, y);\n\t\t}\n\t\telse{\n\t\t\tint l =read(), r =read();\n\t\t\twrite(query(l, r).ctrb);\n\t\t\tputchar('\\n');\n\t\t}\n\t}\n}\n```",
        "postTime": 1604909943,
        "uid": 105254,
        "name": "Piwry",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1004F \u3010Sonya and Bitwise OR\u3011"
    }
]