[
    {
        "content": "\u770b\u5230 $n \\leq 16$ \u7684\u6570\u636e\uff0c\u4e0d\u662f\u641c\u7d22\u5c31\u662f\u72b6\u538b\u3002~~\u56e0\u4e3a\u8fd9\u662f\u4e00\u9053\u84dd\u9898\u6240\u4ee5~~\u6211\u9009\u4e86\u72b6\u538b\u3002\r\n\r\n\u601d\u8def\u5f88\u7b80\u5355\uff0c\u66b4\u529b\u679a\u4e3e\u5b50\u96c6\uff0c\u7b5b\u53bb\u4e0d\u5408\u6cd5\u7684\u9009\u6700\u5927\u5373\u53ef\u3002**\u8fd9\u91cc\u6bcf\u4e2a\u72b6\u6001\u7684\u7b2c $i$ \u4f4d\u4e3a $1$ \u8868\u793a\u7b2c $i$ \u4e2a\u4f4d\u7f6e\u7684\u4eba\u5408\u6cd5\u3002**\r\n\r\n\u5173\u4e8e\u5982\u4f55\u5b58\u50a8\u4e24\u4e2a\u4eba\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u4e00\u5f00\u59cb\u5f53\u7136\u60f3\u5230\u7684\u662f\u5e76\u67e5\u96c6\uff0c\u4f46\u8fd9\u91cc\u662f\u4e0d\u80fd\u5728\u4e00\u4e2a\u96c6\u5408\u91cc\uff0c\u5e26\u6743\u5e76\u67e5\u96c6\u4e5f\u4e0d\u4f1a\u5199\u3002\u540e\u9762\u53c8\u60f3\u5230\u7528 map\uff0c\u4f46\u8fd9\u91cc\u662f\u4e8c\u7ef4\u72b6\u6001\u4e5f\u4e0d\u4f1a\u641e\uff08\u779f\u4e86\u773c\u9898\u89e3\u53d1\u73b0\u5d4c\u5957\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002\u540e\u6765\u53c8\u60f3\u5230\u54c8\u5e0c\uff0c\u4f46\u662f\u6570\u7ec4\u5f00\u4e0d\u4e0b\u3002\u6700\u540e\u53d1\u73b0\u5176\u5b9e\u7528\u7f16\u53f7\u4ee3\u66ff\u5c31\u597d\u4e86\uff09\u3002\r\n\r\n\u6700\u540e\uff0c**\u201c\u8f93\u51fa\u7684\u540d\u5b57\u6309\u5b57\u5178\u5e8f\u6392\u5217\u201d**\uff0c\u4e00\u5b9a\u8981\u8bb0\u5f97 sort \u554a\uff01\r\n\r\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(2^nn^2)$\uff0c\u80fd\u901a\u8fc7\u672c\u9898\u3002\r\n\r\n#  Code\r\n\r\n```cpp\r\n#include<iostream>\r\n#include<string>\r\n#include<algorithm>\r\nusing namespace std;\r\nint g[20][20];\r\nstring s[20];\r\nint n,m;\r\nint hashs(string tmp)//\u6c42\u7f16\u53f7\r\n{\r\n    for(int i=0;i<n;i++)\r\n        if(s[i]==tmp) return i;\r\n}\r\nint count_one(int x)//\u7edf\u8ba1\u4e8c\u8fdb\u5236\u4e0b\u4e00\u7684\u4e2a\u6570\r\n{\r\n    int tot=0;\r\n    for(;x;x&=x-1,tot++);\r\n    return tot;\r\n}\r\nint main()\r\n{\r\n    cin>>n>>m;\r\n    for(int i=0;i<n;i++) cin>>s[i];\r\n    sort(s,s+n);//\u8bb0\u5f97\u6392\u5e8f\uff01\uff01\uff01\r\n    for(int i=1;i<=m;i++)\r\n    {\r\n        string a,b;\r\n        cin>>a>>b;\r\n        int x=hashs(a),y=hashs(b);\r\n        g[x][y]=g[y][x]=1;\r\n    }\r\n    int ans=0;\r\n    for(int i=0;i<(1<<n);i++) \r\n    {\r\n        int flag=1;\r\n        for(int j=0;j<n;j++)\r\n            if(i&(1<<j))\r\n                for(int k=j+1;k<n;k++)\r\n                    if((i&(1<<k))&&g[j][k]==1)\r\n                    {\r\n                        flag=0;\r\n                        break;\r\n                    }\r\n        if(flag==1)\r\n        {\r\n            if(count_one(i)>count_one(ans))\r\n            ans=i;\r\n        }\r\n    }\r\n    cout<<count_one(ans)<<endl;\r\n    for(int i=0;i<n;i++)\r\n        if(ans&(1<<i)) cout<<s[i]<<endl;\r\n    return 0;\r\n}\r\n```\r\n\u611f\u8c22\u89c2\u770b\u3002",
        "postTime": 1628669577,
        "uid": 280473,
        "name": "404Not_Found",
        "ccfLevel": 5,
        "title": "CF114B  PFAST Inc.\u9898\u89e3"
    },
    {
        "content": "## \u9898\u610f\uff1a\n\n\u7ed9\u4f60\u4e00\u5806\u5b57\u7b26\u4e32\uff0c\u518d\u7ed9\u51fa\u54ea\u4e2a\u5b57\u7b26\u4e32\u4e0d\u80fd\u548c\u54ea\u4e2a\u5b57\u7b26\u4e32\u4e00\u8d77\u5728\u8f66\u4e0a\uff0c\u6c42\u6700\u591a\u80fd\u6709\u591a\u5c11\u4e2a\u5b57\u7b26\u4e32\u5728\u8f66\u4e0a\u3002\n\n## \u89e3\u9898\u601d\u8def\uff1a\n\n\u9996\u5148\uff0c\u770b\u61c2\u9898\u610f\u540e\u9996\u5148\u53ef\u80fd\u4f1a\u60f3\u5230 **\u5e76\u67e5\u96c6** \u7b97\u6cd5\uff0c\u4f46\u662f\u770b\u4e86\u770b\u7f8e\u4e3d\u7684\u6570\u636e\u8303\u56f4\uff08$1\u2264n\u226416,0\u2264m\u2264n\\times(n-1)/2$) \u4ee5\u540e\uff0c\u5c31\u60f3\u5230\u4e86\u66b4\u529b\uff0c\u4f46\u5177\u4f53\u600e\u4e48\u4e2a\u66b4\u529b\u6cd5\uff0c\u672c\u849f\u84bb\u63a5\u4e0b\u6765\u4f1a\u4e00\u4e00\u8bb2\u89e3\u3002\n\n### \u7b2c\u4e00\u6b65\uff1a\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u5b57\u7b26\u4e32\uff0c\u5b83\u53ea\u6709\u4e0a\u8f66\u548c\u4e0d\u4e0a\u8f66\u4e24\u79cd\u9009\u62e9\uff0c\u5f88\u5bb9\u6613\u5c31\u50cf\u5230\u4e86\u4e8c\u8fdb\u5236\u679a\u4e3e\uff0c\u518d\u7ed3\u5408\u6570\u636e\u8303\u56f4 \uff08$1\u2264n\u226416$\uff09 \uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u53ea\u6709 $O(2^n)=2^{16}=65536$ \uff0c\u5b8c\u5168\u4e0d\u4f1a\u8d85\u65f6\uff0c\u90a3\u4e48\u7b2c\u4e00\u6b65\u5b8c\u6210\u3002\n\n### \u7b2c\u4e8c\u6b65\uff1a\n\n\u60f3\u5230\u4e86\u5177\u4f53\u65b9\u6cd5\u53c8\u600e\u4e48\u5b9e\u73b0\u5462\uff1f\u5982\u679c\u5bf9\u6bcf\u4e2a\u5b57\u7b26\u4e32\u90fd\u5b58\u50a8\u5176\u4ec7\u4eba\u6570\u91cf\uff0c\u4e0d\u4ec5\u4f1a\u8017\u8d39\u5927\u91cf\u7a7a\u95f4\uff0c\u5728\u679a\u4e3e\u65f6\u8fd8\u4f1a\u6709\u5f88\u591a\u4e0d\u5fc5\u8981\u7684\u5224\u65ad\uff0c\u5bfc\u81f4\u65f6\u95f4\u590d\u6742\u5ea6\u4e0a\u5347\u3002\u867d\u7136\u8fd9\u79cd\u65b9\u6cd5\u4e5f\u80fd\u8fc7\uff0c\u4f46\u662f\u5e76\u4e0d\u662f\u6700\u4f18\u89e3\u3002\u6709\u6ca1\u6709\u66f4\u6709\u7684\u529e\u6cd5\u5462\uff1f\u6709\u7684\uff01\n\n\u9996\u5148\uff0c\u5047\u8bbe\u5f53\u524d\u4e3a\u7b2c $i$ \u6b21\u5224\u65ad\uff0c\u5219\u5f53\u524d\u80fd\u4e0a\u8f66\u7684\u4eba\u6570\u4e3a **$i\\bmod2$\u7684\u503c**\n$+$**\u7b2c$i\u00f72$\u6b21\u5224\u65ad\u65f6\u4e0a\u8f66\u7684\u4eba\u6570** \u3002\u7136\u540e\uff0c\u5224\u65ad\u6bcf\u5bf9\u4e0d\u80fd\u4e00\u8d77\u5728\u8f66\u4e0a\u7684\u5b57\u7b26\u4e32\u662f\u5426\u4e00\u8d77\u4e0a\u8f66\uff0c\u8fd9\u6837\uff0c\u53ea\u7528\u904d\u5386\u4e00\u6b21\u4ec7\u4eba\u5bf9\u6570$m$\u6c42\u53ef\u4ee5\u5b8c\u6210\u5224\u65ad\u4e86\u3002\u6700\u540e\uff0c\u8f93\u51fa\u7b54\u6848\uff0c\u7ed3\u675f\u3002\n\n### \u7b2c\u4e09\u6b65\uff1a\n\n\u524d\u4e24\u6b65\u60f3\u6e05\u695a\u4e86\u8fd8\u4e0d\u884c\uff0c\u4fe1\u606f\u662f\u8981\u6253\u4ee3\u7801\u7684\u3002\n\n#### \u5b9a\u4e49\u90e8\u5206\uff1a\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node\n{\n\tint hate,name; //\u8bb0\u5f55\u4ec7\u4eba\u7684\u7ed3\u6784\u4f53\n};\nvector<node>can_not; //\u8bb0\u5f55\u4ec7\u4eba\u5bf9\u6570\nmap<string,int>people; //\u8bb0\u5f55\u5b57\u7b26\u4e32\u7f16\u53f7\uff0c\u65b9\u4fbf\u679a\u4e3e\nstring name[18];\nint n,m;\nint all[65600]; //\u7b2c\u4e8c\u6b65\u8bf4\u7684\u5f53\u524d\u5224\u65ad\u80fd\u4e0a\u8f66\u7684\u4eba\u6570\nvector<string>print; //\u6700\u540e\u8f93\u51fa\u7684\u5b57\u7b26\u4e32\n```\n\n#### \u8f93\u5165+\u9884\u5904\u7406\uff1a\n\n```\nscanf(\"%d%d\",&n,&m);\nfor(int i=1;i<=n;i++)\n{\n\tcin>>name[i];\n\tpeople[name[i]]=i-1; //\u8bb0\u5f55\u7f16\u53f7\n}\nfor(int i=1;i<=m;i++)\n{\n\tstring x,y;\n\tcin>>x>>y;\n\tnode xy;\n\txy.name=people[x],xy.hate=people[y]; //\u5b58\u5165\u7ed3\u6784\u4f53\n\tcan_not.push_back(xy); //\u5b58\u5165\u8bb0\u5f55\u4ec7\u4eba\u7684\u6570\u7ec4\u4e2d\n}\n```\n\n#### \u4e8c\u8fdb\u5236\u679a\u4e3e\uff1a\n\n```\nint ans=0;\nfor(int i=1;i<(1<<n);i++) //(1<<n)\u8868\u793a2\u7684n\u6b21\u65b9\n{\n\tall[i]=((i%2)+all[i/2]); //\u7b2c\u4e8c\u6b65\u6709\u8bb2\u89e3\n\tbool can=true;\n\tfor(int j=0;j<can_not.size();j++)\n\t{\n\t\tif((i>>can_not[j].name)&1&&(i>>can_not[j].hate)&1) //\u5224\u65ad\u4ec7\u4eba\u662f\u5426\u4e00\u8d77\u4e0a\u8f66\n\t\t{\n\t\t\tcan=false;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(can&&all[i]>all[ans]) //\u8d2a\u5fc3\u6c42\u6700\u591a\n\t{\n\t\tans=i;\n\t}\n}\n```\n\n#### \u8f93\u51fa\u7b54\u6848\uff1a\n\n```\nprintf(\"%d\\n\",all[ans]); //\u8f93\u51fa\u6700\u591a\u80fd\u6709\u591a\u5c11\u4eba\nfor(int i=1;i<=n;i++)\n{\n\tif((ans>>people[name[i]])&1) //\u5224\u65ad\u8c01\u8981\u4e0a\u8f66\n\t{\n\t\tprint.push_back(name[i]);\n\t}\n}\nsort(print.begin(),print.end()); //\u6309\u5b57\u5178\u5e8f\u6392\u5e8f\nfor(int i=0;i<print.size();i++)\n{\n\tcout<<print[i]<<endl; //\u8f93\u51fa\u4eba\u540d\n}\nreturn 0; //\u5b8c\u7ed3\u6492\u82b1\n\n```\n\n## \u5b8c\u6574\u7684Code\uff1a\n\n\u63a5\u4e0b\u6765\u65f6\u4e0d\u5e26\u6ce8\u91ca\u7684\u5b8c\u6574\u4ee3\u7801\uff08~~\u65b9\u4fbf\u67d0\u4e9b\u4eba\u4f7f\u7528 **CV** \u7b97\u6cd5~~\uff09\uff1a\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node\n{\n\tint hate,name;\n};\nvector<node>can_not;\nmap<string,int>people;\nstring name[18];\nint n,m;\nint all[65600];\nvector<string>print;\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>name[i];\n\t\tpeople[name[i]]=i-1;\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tstring x,y;\n\t\tcin>>x>>y;\n\t\tnode xy;\n\t\txy.name=people[x],xy.hate=people[y];\n\t\tcan_not.push_back(xy);\n\t}\n\tint ans=0;\n\tfor(int i=1;i<(1<<n);i++)\n\t{\n\t\tall[i]=((i%2)+all[i/2]);\n\t\tbool can=true;\n\t\tfor(int j=0;j<can_not.size();j++)\n\t\t{\n\t\t\tif((i>>can_not[j].name)&1&&(i>>can_not[j].hate)&1)\n\t\t\t{\n\t\t\t\tcan=false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(can&&all[i]>all[ans])\n\t\t{\n\t\t\tans=i;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",all[ans]);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif((ans>>people[name[i]])&1)\n\t\t{\n\t\t\tprint.push_back(name[i]);\n\t\t}\n\t}\n\tsort(print.begin(),print.end());\n\tfor(int i=0;i<print.size();i++)\n\t{\n\t\tcout<<print[i]<<endl;\n\t}\n\treturn 0;\n}\n```\n\n## \u540e\u8bb0\uff1a\n\n\u6b64\u9898\u89e3\u4e3a\u672c\u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\uff0c\u82e5\u6709\u9519\u8bef\u8bf7\u79c1\u804a\uff0c\u8c22\u8c22\uff01\uff01\uff01\n\n### qwq",
        "postTime": 1669530565,
        "uid": 781352,
        "name": "Killer_Jerry",
        "ccfLevel": 0,
        "title": "\u300a\u3010CF114B\u3011PFAST Inc.\u300b \u9898\u89e3"
    },
    {
        "content": "*1500 \u8bc4\u84dd\uff0c\u4e0d\u6127\u662f\u8c37\u6c11\u3002\n\n\u9996\u5148\u770b\u5230 $1 \\le n \\le 16$\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u4e8c\u8fdb\u5236\u679a\u4e3e\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u679a\u4e3e\u80fd\u53c2\u8d5b\u7684\u4eba\u5206\u522b\u662f\u8c01\uff0c\u6bcf\u679a\u4e3e\u51fa\u4e00\u7ec4\u4eba\u5c31\u626b\u4e00\u904d\u6709\u654c\u5bf9\u5173\u7cfb\u7684\u4eba\uff0c\u770b\u770b\u8fd9\u51e0\u5bf9\u4eba\u6709\u6ca1\u6709\u540c\u65f6\u51fa\u73b0\u5728\u679a\u4e3e\u51fa\u7684\u4eba\u4e2d\uff0c\u6709\u7684\u8bdd\u5c31\u76f4\u63a5\u9000\u51fa\uff0c\u56e0\u4e3a\u8fd9\u7ec4\u4eba\u4e0d\u6ee1\u8db3\u6761\u4ef6\u3002\u5982\u679c\u90fd\u6ca1\u6709\u51fa\u73b0\u5c31\u5c1d\u8bd5\u66f4\u65b0\u7b54\u6848\uff0c\u6700\u540e\u7684\u7b54\u6848\u5c31\u662f\u6240\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u89e3\u4e2d\u7684\u6700\u5927\u4eba\u6570\u3002\n\n\u53e6\u5916\u662f\u4e00\u4e9b\u7ec6\u8282\u95ee\u9898\uff1a\n\n\u4e8c\u8fdb\u5236\u679a\u4e3e\u8bb0\u5f55\u6bcf\u4e2a\u4eba\u6709\u6ca1\u6709\u88ab\u9009\u62e9\u65f6\uff0c\u7531\u4e8e\u540e\u9762\u770b\u662f\u5426\u6709\u654c\u5bf9\u5173\u7cfb\u7684\u65f6\u5019\u9700\u8981\u76f4\u63a5\u6839\u636e\u5b57\u7b26\u4e32\u8fdb\u884c\u67e5\u8be2\uff0c\u76f4\u63a5\u7528\u6570\u7ec4\u5f00\u6876\u8bb0\u5f55\u8fd8\u9700\u8981\u5230\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u4e2d\u4e00\u4e2a\u4e2a\u627e\u770b\u770b\u6240\u627e\u7684\u5b57\u7b26\u4e32\u5230\u5e95\u5728\u54ea\u4e2a\u4f4d\u7f6e\uff0c\u6bd4\u8f83\u9ebb\u70e6\uff0c\u8fd8\u4f1a\u5f71\u54cd\u7a0b\u5e8f\u6548\u7387\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528 map \u8bb0\u5f55\uff08`map <string,bool> mp;`\uff09\u3002\n\n\u4f7f\u7528 map \u8fd8\u6709\u4e00\u4e2a\u597d\u5904\uff1amap \u6709\u81ea\u52a8\u6392\u5e8f\u529f\u80fd\uff0c\u8fd9\u6837\u6211\u4eec\u8bb0\u5f55\u7b54\u6848\u65f6\u5c31\u4e0d\u7528\u518d\u8d39\u5fc3\u601d\u6392\u5e8f\u4e00\u904d\uff0c\u53ea\u7528\u5728\u8bb0\u5f55\u7684\u65f6\u5019\u6309\u5b83\u6392\u5e8f\u7684\u987a\u5e8f\u8bb0\u5f55\u5c31\u53ef\u4ee5\u4e86\u3002\n\n------------\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define rnt register long long\nusing namespace std;\nconst ll N=27,M=407;\nll n,m,maxn=-1;\nstring a[N],b[M][2];\nmap <string,bool> mp;\nvector <string> v; //\u7b54\u6848\u4eba\u6570\u4e0d\u56fa\u5b9a\uff0c\u53ef\u4f7f\u7528 vector \u8bb0\u5f55\nvoid dfs(ll flr,ll at) {\n\tif (flr>n) {\n\t\tfor (rnt i=1;i<=m;i++) if (mp[b[i][0]]&&mp[b[i][1]]) return; //\u9009\u4e2d\u7684\u4eba\u662f\u5426\u6709\u654c\u5bf9\u5173\u7cfb\n\t\tif (at>maxn) { //\u53ef\u4ee5\u66f4\u65b0\u7b54\u6848\n\t\t\tv.clear();\n\t\t\tfor (auto i:mp) if (i.second) v.push_back(i.first);\n\t\t\tmaxn=at;\n\t\t}\n\t\treturn;\n\t}\n\tmp[a[flr]]=1;\n\tdfs(flr+1,at+1);\n\tmp[a[flr]]=0;\n\tdfs(flr+1,at);\n}\nint main() {\n\tcin>>n>>m;\n\tfor (rnt i=1;i<=n;i++) cin>>a[i];\n\tfor (rnt i=1;i<=m;i++) cin>>b[i][0]>>b[i][1];\n\tdfs(1,0);\n\tcout<<maxn<<endl;\n\tfor (auto i:v) cout<<i<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1658455820,
        "uid": 319803,
        "name": "CarroT1212",
        "ccfLevel": 6,
        "title": "CF114B Sol"
    },
    {
        "content": "## \u9898\u610f\n\u7ed9\u5b9a\u4e24\u4e2a\u4e2a\u6b63\u6574\u6570 $ n $ \uff0c $ m $ \uff0c\u8868\u793a\u6709 $ n $ \u4e2a\u4eba\u53ef\u4ee5\u53c2\u52a0\u6bd4\u8d5b\uff0c$ m $ \u5bf9\u4eba\u4e4b\u95f4\u6709\u654c\u5bf9\u5173\u7cfb\uff0c\u4e24\u4e2a\u6709\u654c\u5bf9\u5173\u7cfb\u4e4b\u95f4\u7684\u4eba\u4e0d\u80fd\u540c\u65f6\u53c2\u52a0\u6bd4\u8d5b\uff0c\u95ee\u6700\u591a\u6709\u591a\u5c11\u4eba\u53ef\u4ee5\u53c2\u8d5b\u3002\n\n## \u601d\u8def\n\n\u53d1\u73b0 $ n \\leq 16 $ \uff0c\u81ea\u7136\u60f3\u5230\u641c\u7d22\u3002\u8003\u8651\u679a\u4e3e\u6700\u591a\u6709\u591a\u5c11\u4e2a\u4eba\u80fd\u53c2\u8d5b\uff0c\u5bf9\u4e8e\u6bcf\u79cd\u60c5\u51b5\u90fd\u6df1\u641c\u4e00\u6b21\u5373\u53ef\uff0c\u7136\u540e\u5224\u65ad\u662f\u5426\u53ef\u884c \uff0c $ n ^ 2 $ \u7684\u590d\u6742\u5ea6\u5c31\u80fd\u8fc7\u3002\n\n\u6ce8\u610f\u6700\u540e\u4e0d\u4ec5\u8981\u8f93\u51fa\u6700\u5927\u4eba\u6570\uff0c\u8fd8\u8981\u8f93\u51fa\u4eba\u540d\uff0c\u5e76\u6309\u7167\u5b57\u5178\u5e8f\u6392\u5e8f\u3002\n\n\u590d\u6742\u5ea6\u662f $ O ( n ^ 3 \\times 2 ^ n ) $ \uff0c\u663e\u7136\u80fd\u8fc7\u3002(\u5982\u679c\u5f00 ` map ` \u5b58\u6bcf\u4e2a\u540d\u5b57\u7684\u7f16\u53f7\u5219\u4f1a\u591a\u4e00\u4e2a $ \\log n $ \uff0c\u4e0d\u8fc7\u8fd8\u662f\u80fd\u8fc7\u7684\u3002)\n\n## \u4ee3\u7801\n\n\u81ea\u8ba4\u4e3a\u5199\u7684\u633a\u6e05\u6670\u7684\uff0c\u5c31\u4e0d\u52a0\u6ce8\u91ca\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=20;\nbool flag;\nstring id[N];\nvector<string> v;\nmap<string,int> mp;\nint ck[N][N],n,m,used[N];\ninline bool check(){\n    for(register int i=1;i<=n;++i){\n        for(register int j=1;j<=n;++j){\n            if(ck[i][j]&&used[i]&&used[j]) return 0;\n        }\n    }\n    for(register int i=1;i<=n;++i) if(used[i]) v.push_back(id[i]);\n    return 1;\n}\nvoid dfs(int x,int tot){\n    if(tot<0) return ;\n    if(x>n){\n        if(tot==0) flag=check();\n        return ;\n    }\n    used[x]=1;\n    dfs(x+1,tot-1);\n    if(flag) return ;\n    used[x]=0;\n    dfs(x+1,tot);\n    if(flag) return ;\n}\ninline bool cmp(string a,string b){\n    return a<b;\n}\nint main(){\n    cin>>n>>m;\n    for(register int i=1;i<=n;++i){\n        cin>>id[i];\n        mp[id[i]]=i;\n    }\n    for(register int i=1;i<=m;++i){\n        string x,y;\n        cin>>x>>y;\n        ck[mp[x]][mp[y]]=ck[mp[y]][mp[x]]=1;\n    }\n    for(register int i=n;i>=1;--i){\n        v.clear();\n        dfs(1,i);\n        if(flag){\n            printf(\"%d\\n\",i);\n            sort(v.begin(),v.end(),cmp);\n            for(register int j=0;j<i;++j) cout<<v[j]<<endl;\n            return 0;\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1639658589,
        "uid": 428089,
        "name": "HMZHMZHMZ",
        "ccfLevel": 7,
        "title": "CF114B\u9898\u89e3"
    },
    {
        "content": "CF114B \u3010PFAST Inc.\u3011\n\n\u770b\u5230\u6666\u6da9\u96be\u61c2\u7684\u9898\u9762\u6211\u7edd\u671b\u4e86\u3002\n\n\u770b\u5230\u7f8e\u4e3d\u7684\u6570\u636e\u8303\u56f4\u6211\u53c8\u7b11\u4e86\u3002\n\n$n<=16$\n\n\u90a3\u660e\u663e\u53ef\u4ee5\u66b4\u641c\uff0c$dfs$\u679a\u4e3e\u5b50\u96c6\u5373\u53ef\uff0c\u6211\u5728\u5224\u65ad\u6700\u4f18\u89e3\u4e0a\u548c\u8f93\u51fa\u4e0a\u88ab\u5361\u4e86$n$\u6b21\u3002\n\n#### $UPDATE1.9$\n\n\u5199\u7684\u592a\u6c34\u4e86\uff0c\u505a\u4e00\u4e9b\u8865\u5145\uff0c\u5728\u4ee3\u7801\u4e0a\u6dfb\u52a0\u4e00\u4e9b\u6ce8\u91ca\u3002\n\n### $CODE$\n\n```cpp\n#include<bits/stdc++.h>\n#define F(i,j,r) for(int i=j;i<=r;++i)\n\nusing namespace std;\nconst int N=16+5;\n\nstring a[N],x,y;\nint n,m,M=-1;\nmap < string , map < string , int > > mm; //\u654c\u5bf9\u5173\u7cfb\u6211\u4eec\u7528\u90bb\u63a5\u77e9\u9635\u6765\u5b58\nbool vis[N];//\u5224\u65ad\u662f\u5426\u9009\u62e9\n\nvoid dfs(int deep,int mod){//\u6df1\u641c\n\tif(deep>n+1)return;\n\tif(deep==n+1){\n\t\tint tot=0,f=1;\n\t\tF(i,1,n)tot+=vis[i];\n\t\tF(i,1,n)//\u5224\u65ad\u662f\u5426\u7b26\u5408\u6ca1\u6709\u654c\u5bf9\u5173\u7cfb\n\t\t\tF(j,i+1,n)\n\t\t\t\tif(vis[i]&&vis[j])\n\t\t\t\t\tif(mm[a[i]][a[j]]){\n\t\t\t\t\t\tf=0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\tif(f){\n\t\t\tif(mod){\n\t\t\t\tint tot=0;\n\t\t\t\tF(i,1,n)tot+=vis[i];\n\t\t\t\tif(tot!=M)return;//\u5982\u679c\u975e\u6700\u4f18\u89e3\u5219\u8df3\u8fc7\n\t\t\t\tprintf(\"%d\\n\",M);\n\t\t\t\tstring res[N];\n\t\t\t\tF(i,1,17)res[i]=\"0\";\n\t\t\t\tint pos=1;\n\t\t\t\tF(i,1,n)\n\t\t\t\t\tif(vis[i])res[pos++]=a[i];\n\t\t\t\tsort(res+1,res+pos);//\u5b57\u5178\u5e8f\u8f93\u51fa\uff0c\u7528\u7ef4\u514b\u591a\u4e5f\u53ef\u4ee5\n\t\t\t\tpos=1;\n\t\t\t\twhile(res[pos]!=\"0\"){\n\t\t\t\t\tcout<<res[pos]<<endl;\n\t\t\t\t\tpos++;//\u8f93\u51fa\n\t\t\t\t}\n\t\t\t\texit(0);//\u4efb\u610f\u89e3\uff0c\u76f4\u63a5\u7ed3\u675f\u7a0b\u5e8f\n\t\t\t}\n\t\t\telse if(mod==0)\n\t\t\t\tM=max(M,tot);//\u6253\u64c2\u53f0\n\t\t}\n\t}\n\tvis[deep]=true;\n\tdfs(deep+1,mod);//\u7ee7\u7eed\u4e0b\u4e00\u5c42\n\tvis[deep]=false;//\u56de\u6eaf\u641c\u7d22\n\tdfs(deep+1,mod);\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tF(i,1,n)\n\t\tcin>>a[i];\n\tF(i,1,m){\n\t\tcin>>x>>y;\n\t\tmm[x][y]=mm[y][x]=1;//\u90bb\u63a5\u77e9\u9635\u8bb0\u5f55\n\t}\n\tdfs(1,0);//\u72b6\u60011\u6c42\u89e3\n\tdfs(1,1);//\u72b6\u60012\u8f93\u51fa\n    //\u8fd9\u4e2a\u90e8\u5206\u53ef\u4ee5\u4f18\u5316\uff0c\u4e0d\u7528\u4e24\u6b21\u641c\uff0c\u4f46\u6570\u636e\u5141\u8bb8\u6211\u5c31\u61d2\u5f97\u5199\u4e86\n    return 0;\n}\n\n```\n\n\u4e00\u9053\u66b4\u529b\u51fa\u5947\u8ff9\u7684\u9898\u76ee\u3002\n\n$wtrl$",
        "postTime": 1610116452,
        "uid": 368225,
        "name": "WinterRain208",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF114B \u3010PFAST Inc.\u3011"
    },
    {
        "content": "### \u5206\u6790\u9898\u76ee\n\u6839\u636e\u9898\u610f\u4e2d $1 \\leq n \\leq 16$ \u5f97\u77e5\u66b4\u529b\u641c\u7d22\u7684 $O(2^n)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u5728\u53ef\u63a5\u53d7\u8303\u56f4\u4ee5\u5185\u7684\u3002\n\n\u90a3\u4e48\u8003\u8651\u9898\u76ee\u4e2d **\u6709\u654c\u5bf9\u5173\u7cfb\u7684\u4eba** \u5982\u4f55\u5904\u7406\u3002\n\n\u5efa\u4e00\u4e2a map \u5b58\u50a8\u5f53\u524d\u641c\u7d22\u4e2d\u9009\u4e86\u90a3\u4e9b\u4eba\uff0c\u5728\u5230\u8fbe\u641c\u7d22\u8fb9\u754c\u65f6\u5224\u65ad\u5f53\u524d\u7b54\u6848\u662f\u5426\u7b26\u5408\u8981\u6c42\u3002\u5982\u7b26\u5408\u9898\u610f\uff0c\u5219\u5224\u65ad\u4eba\u6570\u4e0e $ans$ \u4e4b\u95f4\u7684\u5927\u5c0f\u5173\u7cfb\u3002\u6700\u540e\u8f93\u51fa\u7b54\u6848\u6570\u548c\u9009\u62e9\u7684\u4eba\u5373\u53ef\u3002\n\n### \u6e29\u99a8\u63d0\u793a\n\n\u5982\u679c\u7528\u7684\u662f map \u5b58\u50a8\u654c\u5bf9\u5173\u7cfb\u7684\u4eba\u3002\u90a3\u4e48\u5982\u679c\u4e00\u4e2a\u4eba\u4e0e\u591a\u4e2a\u4eba\u662f\u6709\u654c\u5bf9\u5173\u7cfb\u7684\uff0c\u5c31\u4f1a\u51fa\u9519\u3002\u56e0\u4e3a\u8fd9\u4f1a\u5c06 map \u91cc\u7684\u503c **\u8986\u76d6** \uff0c\u4ece\u800c\u5bfc\u81f4\u7ed3\u679c\u51fa\u9519\u3002\n\n\u6240\u4ee5\u4ee3\u7801\u4e2d\u5b58\u50a8\u654c\u5bf9\u5173\u7cfb\u7528\u5230\u7684\u662f\u666e\u901a\u4e8c\u7ef4\u6570\u7ec4\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<iostream>\n\n#include<vector>\n\n#include<unordered_map>\n\n#include<algorithm>\n\nusing namespace std;\nconst int N = 1e5;\nint n, m, res;\nstring s[N], x, y;\nstring a[N][2];\nunordered_map < string, int > vis;\nvector < string > b;\nvoid dfs(int id, int sum, vector < string > & ans) {\n    if (id == n + 1) {\n        for(int i=1;i<=m;i++){\n            if(vis[a[i][0]]+vis[a[i][1]]==2) return;\n            //\u5982\u679c\u4e24\u4e2a\u76f8\u4e92\u654c\u5bf9\u7684\u4eba\u5b58\u5728\u7b54\u6848\u4e2d\uff0c\u5373\u6807\u8bb0\u6570\u7ec4\u4e2d\u4e24\u4eba\u7684\u503c\u76f8\u52a0\u662f\u7b49\u4e8e2\u7684\u3002\n        }\n        if (res < sum) {\n            b.clear();\n            res = sum;\n            for (int i = 0; i < ans.size(); i++) {\n                if (vis[ans[i]] == 1)//\u8fd9\u91cc\u4e5f\u662f\u4e00\u4e2a\u6613\u9519\u70b9\uff0c\u8981\u8bb0\u5f97\u5224\u65ad\u662f\u5426\u5728\u6807\u8bb0\u6570\u7ec4\u4e2d\u3002\n                    b.push_back(ans[i]);\n            }\n        }\n        return;\n    }\n    vector < string > QwQ = ans;\n    dfs(id + 1, sum, QwQ);\n    vis[s[id]] = 1;\n    QwQ.push_back(s[id]);\n    dfs(id + 1, sum + 1, QwQ);\n    vis[s[id]] = 0;\n    return;\n}\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie();\n    cout.tie();\n    cin >> n >> m;\n    for (int i = 1; i <= n; i++) {\n        cin >> s[i];\n    }\n    for (int i = 1; i <= m; i++) {\n        cin >> a[i][0] >> a[i][1];\n    }\n    vector < string > ans;\n    dfs(1, 0, ans);\n    cout << res << '\\n';\n    sort(b.begin(), b.end());//\u6309\u5b57\u5178\u5e8f\u6392\n    for (int i = 0; i < b.size(); i++) {\n        cout << b[i] << '\\n';\n    }\n    return 0;\n}\n```\n",
        "postTime": 1685360327,
        "uid": 590609,
        "name": "Super_excavator",
        "ccfLevel": 0,
        "title": "CF114B \u9898\u89e3"
    },
    {
        "content": "# \u601d\u8def\n\n\u6ce8\u610f\u5230 $n\u226416$\uff0c\u66b4\u529b\u4e8c\u8fdb\u5236\u679a\u4e3e\u5373\u53ef\u3002\n\n\u68c0\u67e5\u7684\u8bdd\uff0c\u5efa\u7acb\u4e00\u4e2a\u5b57\u7b26\u4e32\u5230\u4e0b\u6807\u7684\u6620\u5c04\uff0c\u7136\u540e\u9010\u6761\u89c4\u5219\u68c0\u67e5\u662f\u5426\u77db\u76fe\u3002\n\n\u6ce8\u610f\u8f93\u51fa\u8981\u6309\u5b57\u5178\u5e8f\uff0c\u6240\u4ee5\u5728\u8f93\u5165\u4e4b\u540e\u5c31\u8981\u6392\u5e8f\uff0c\u518d\u5efa\u7acb\u6620\u5c04\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(2^nm)$\uff0c\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n# \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n#define endl '\\n'\nint n,m,ma;\nbool vis[20];\nstring s[20];\nvector<int>vec,ans;\nvector<pair<string,string>>v;\nunordered_map<string,int>p;\nbool check()\n{\n\tfor(int i=0;i<m;i++)\n\t{\n\t\tstring a=v[i].first,b=v[i].second;\n\t\tif(vis[p[a]]&&vis[p[b]]) return 0;\n\t}\n\treturn 1;\n}\nint main()\n{\n\tios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)\n\t\tcin>>s[i];\n\tsort(s+1,s+n+1);\n\tfor(int i=1;i<=n;i++)\n\t\tp[s[i]]=i;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tstring a,b;\n\t\tcin>>a>>b;\n\t\tv.push_back({a,b});\n\t}\n\tfor(int i=0;i<(1<<n);i++)\n\t{\n\t\tint cnt=0;\n\t\tvec.clear();\n\t\tmemset(vis,0,sizeof vis);\n\t\tfor(int j=0;j<n;j++)\n\t\t\tif((i>>j)&1) vis[j+1]=1,cnt++,vec.push_back(j+1);\n\t\tif(check()&&cnt>ma) ma=cnt,ans=vec;\n\t}\n\tcout<<ma<<endl;\n\tfor(int i=0;i<ans.size();i++)\n\t\tcout<<s[ans[i]]<<endl;\n\treturn 0;\n}",
        "postTime": 1676364840,
        "uid": 742121,
        "name": "HadrianZhang",
        "ccfLevel": 4,
        "title": "CF114B PFAST Inc. \u9898\u89e3"
    },
    {
        "content": "- [Luogu \u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF114B)\n- [CodeForces \u4f20\u9001\u95e8](https://codeforces.com/problemset/problem/114/B)\n\n## \u601d\u8def\u5206\u6790\n\n\u56e0\u4e3a $1\\le n\\le 16$\uff0c\u6240\u4ee5\u53ef\u4ee5\u8003\u8651 $\\mathcal{O}(2^n)$ \u679a\u4e3e\u53c2\u52a0\u7684\u65b9\u6848\u3002\u5b58\u654c\u5bf9\u5173\u7cfb\u7684\u90e8\u5206\u6211\u9009\u62e9\u4e86 `map<pair<string,string>,bool>`\uff0c\u4e0d\u8fc7\u5f53\u7136\u4e5f\u53ef\u4ee5\u7528 `map` \u505a\u54c8\u5e0c\u4ee3\u66ff\u6bcf\u4e2a\u540d\u5b57\u7136\u540e\u7528\u4e8c\u7ef4 `bool` \u6570\u7ec4\u7ef4\u62a4\u6bcf\u4e2a\u654c\u5bf9\u5173\u7cfb\u3002\u6bcf\u6b21 `dfs` \u51fa\u4e00\u4e2a\u65b9\u6848 $\\mathcal{O}(n^2)$ \u68c0\u67e5\u7b54\u6848\u662f\u5426\u53ef\u884c\u5373\u53ef\uff0c\u56e0\u4e3a $n$ \u5f88\u5c0f\uff0c\u6240\u4ee5\u4e0d\u7528\u592a\u62c5\u5fc3\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n\n\u7136\u540e\u5b57\u5178\u5e8f\u7684\u8bdd\uff0c\u56e0\u4e3a `algorithm` \u5e93\u7684 `sort` \u51fd\u6570\u53ef\u4ee5\u76f4\u63a5\u7ed9 `string` \u6570\u7ec4\u6309\u7167\u5b57\u5178\u5e8f\u6392\u5e8f\uff0c\u6240\u4ee5\u76f4\u63a5\u7528 `sort` \u5373\u53ef\u3002\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<utility>\n#include<string>\n#include<cstdio>\n#include<queue>\n#include<map>\nusing namespace std;\nint n,m,mx=0;\nstring s[20],res[20],t[20];\nmap<pair<string,string>,bool> flag;\nvoid dfs(int x,string a[],int len){\n\tif(x>n){\n\t\tif(len<=mx) return ;//\u600e\u4e48\u6837\u90fd\u4e0d\u662f\u6700\u4f18\u89e3\u4e86\uff0c\u76f4\u63a5return\u5373\u53ef\n\t\tfor(int i=1;i<=len;++i){\n\t\t\tfor(int j=i+1;j<=len;++j){\n\t\t\t\tif(flag[make_pair(a[i],a[j])]==1) return ;//\u5982\u679c\u5b58\u5728\u654c\u5bf9\u5173\u7cfb\u8bf4\u660e\u7b54\u6848\u4e0d\u53ef\u884c\n\t\t\t}\n\t\t}\n\t\tmx=len;\n\t\tfor(int i=1;i<=n;++i) res[i]=a[i];\n\t\treturn ;\n\t}\n\tdfs(x+1,a,len);\n\ta[++len]=s[x];//\u9009\u6216\u4e0d\u9009\n\tdfs(x+1,a,len);\n\treturn ;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;++i) cin>>s[i];\n\tfor(int i=1;i<=m;++i){\n\t\tstring a,b;\n\t\tcin>>a>>b;\n\t\tflag[make_pair(a,b)]=flag[make_pair(b,a)]=1;\n\t}\n\tdfs(1,t,0);\n\tprintf(\"%d\\n\",mx);//\u8f93\u51fa\u7b54\u6848\n\tsort(res+1,res+1+mx);//\u76f4\u63a5\u6392\u5e8f\n\tfor(int i=1;i<=mx;++i) cout<<res[i]<<'\\n';\n\treturn 0;\n}\n```",
        "postTime": 1666254509,
        "uid": 324350,
        "name": "xiaomuyun",
        "ccfLevel": 5,
        "title": "CF114B PFAST Inc. \u9898\u89e3"
    },
    {
        "content": "\u89c2\u5bdf\u6570\u636e\uff0c\u6570\u636e\u8303\u56f4\u53ea\u6709$16$\uff0c\u53ef\u4ee5\u66b4\u529b\u679a\u4e3e\u54ea\u4e00\u4e2a\u5728\u96c6\u5408\u91cc\u8fb9\uff0c\u7136\u540e\u66b4\u529b\u5224\u65ad\u5373\u53ef\uff0c\u633a\u66b4\u529b\u7684\u4e00\u4e2a\u9898\uff0c\u901a\u8fc7\u72b6\u538b\u6216\u8005\u641c\u7d22\u90fd\u53ef\u4ee5\u5b9e\u73b0\u3002\n\n\u4e0d\u8fc7\u8981\u6ce8\u610f\u901a\u8fc7\u641c\u7d22\u5b9e\u73b0\u7684\u65f6\u5019\u5bf9\u4e8e\u6bcf\u4e2a\u4eba\u7684\u6807\u8bb0\u8981\u591a\u5c42\u6807\u8bb0\uff0c\u4e0d\u80fd\u53ea\u662f\u8d4b\u503c\u6210$1,0$\uff0c\u56e0\u4e3a\u4e00\u4e2a\u4eba\u53ef\u80fd\u4f1a\u88ab\u591a\u4e2a\u4eba\u9650\u5236\u3002\n\n```cpp\n/*\n#include<map>\n#include<string>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nconst int N=30;\nstring s[N],ans[N],q[N];\nmap<string,int> mp;\nint ban[N][N],res,tot;\nint n,m,vis[N];\nvoid dfs(int u){\n\tif(u==n+1){\n\t\tif(tot>res){\n\t\t\tres=tot;\n\t\t\tfor(int i=1;i<=tot;i++)\n\t\t\t\tans[i]=q[i];\n\t\t}\n\t\treturn;\n\t}\n\tdfs(u+1);\n\tif(!vis[u]){\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tif(ban[u][i])vis[i]++;\n\t\tq[++tot]=s[u];\n\t\tdfs(u+1);\n\t\t--tot;\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tif(ban[u][i])vis[i]--;\n\t}\n}\nint main(){\n\tios::sync_with_stdio(false);\n\tcin >> n >> m;\n\tfor(int i=1;i<=n;i++){\n\t\tcin >> s[i];\n\t\tmp[s[i]]=i;\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tstring now1,now2;\n\t\tcin >> now1 >> now2;\n\t\tint u=mp[now1],v=mp[now2];\n\t\tban[u][v]=ban[v][u]=1;\n\t}\n\tdfs(1);\n\tcout << res << '\\n';\n\tsort(ans+1,ans+res+1);\n\tfor(int i=1;i<=res;i++)\n\t\tcout << ans[i] << '\\n';\n\treturn 0;\n}\n\n```",
        "postTime": 1604270154,
        "uid": 305262,
        "name": "Su_Zipei",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF114B \u3010PFAST Inc.\u3011"
    }
]