[
    {
        "content": "#### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u51fa\u4e00\u5f20 $n$ \u4e2a\u9876\u70b9 $m$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe $G$\uff0c\u4fdd\u8bc1\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570\u4e0d\u8d85\u8fc7 $2$\u3002\u4f60\u9700\u8981\u6784\u9020\u51fa\u4e00\u5f20\u540c\u6837\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570\u4e0d\u8d85\u8fc7 $2$ \u7684 $n$ \u4e2a\u9876\u70b9 $m$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe $G'$\u3002\u8bbe $G=\\{ V, E \\}, G' = \\{ V', E' \\}$\uff0c\u4f60\u6784\u9020\u51fa\u7684 $G'$ \u5e94\u5f53\u6ee1\u8db3 $V = V', E\\bigcap E' = \\emptyset$\u3002\n\n#### \u89e3\u9898\u601d\u8def\n\n\u9996\u5148\u6211\u4eec\u8003\u8651\u4ec0\u4e48\u6837\u7684\u65e0\u5411\u56fe\u6ee1\u8db3\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570\u5c0f\u4e8e\u7b49\u4e8e $2$\u3002\u5f88\u5bb9\u6613\u5730\u60f3\u5230\uff0c**\u94fe**\u548c**\u73af**\u6ee1\u8db3\u8fd9\u6837\u7684\u8981\u6c42\u3002\u7531\u4e8e\u672c\u9898\u6709 $\\text{spj}$\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7ed9\u51fa\u4e00\u79cd\u5408\u6cd5\u65b9\u6848\uff0c\u90a3\u5c31\u53ea\u9700\u8981\u6784\u9020\u51fa\u4e00\u6761\u94fe\u6216\u8005\u4e00\u4e2a\u73af\u5373\u53ef\u3002\n\n\u6211\u4eec\u5148\u5bf9\u4e8e\u73af\u8fdb\u884c\u8003\u8651\u3002\u4e00\u5f20 $n$ \u4e2a\u9876\u70b9\u7684\u65e0\u5411\u56fe\u8981\u662f\u4e00\u4e2a\u73af\uff0c\u5b83\u5c06\u6709\u4e14\u4ec5\u6709 $n$ \u6761\u8fb9\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e $n=m$ \u7684\u60c5\u51b5\uff0c\u6211\u4eec\u8003\u8651\u6784\u9020\u4e00\u4e2a\u73af\u3002\u5f53 $m < n$ \u65f6\uff0c\u6211\u4eec\u5219\u8003\u8651\u6784\u9020\u4e00\u6761\u94fe\u3002\u7531\u4e8e\u9898\u4e2d\u4fdd\u8bc1\u4e86 $m\\leq n$\uff0c\u56e0\u6b64\u4e0d\u4f1a\u51fa\u73b0\u5176\u4ed6\u7684\u60c5\u51b5\u3002\n\n\u6211\u4eec\u8003\u8651\u968f\u673a\u751f\u6210\u4e00\u4e2a\u6392\u5217 $a_i$\uff0c\u8868\u793a\u6784\u9020\u51fa\u7684\u94fe\u7684\u5f62\u5f0f\u3002\u8fd9\u6761\u94fe\u7684\u5f62\u5f0f\u5982\u4e0b\uff1a$a_1\\rightarrow a_2, a_2\\rightarrow a_3,\\dots, a_{n-1}\\rightarrow a_n$\u3002\u7136\u540e\u5206\u522b\u5224\u65ad\u8fd9\u4e4b\u4e2d\u7684\u6bcf\u4e00\u6761\u8fb9\u5728\u539f\u56fe $G$ \u4e2d\u662f\u5426\u51fa\u73b0\u8fc7\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5219\u6ee1\u8db3\u4e86\u8981\u6c42\uff0c\u8f93\u51fa\u524d $m$ \u6761\u8fb9\u5373\u53ef\u3002\u5bf9\u4e8e $n=m$\uff08\u6210\u73af\uff09\u7684\u60c5\u51b5\uff0c\u8fd8\u9700\u8981\u624b\u52a8\u8fde\u4e0a\u4e00\u6761 $a_n\\rightarrow a_1$\uff0c\u5224\u65ad\u662f\u5426\u51fa\u73b0\u8fc7\u3002\u5982\u679c\u4e0d\u6ee1\u8db3\u8981\u6c42\uff0c\u5c31\u591a\u968f\u673a\u51e0\u6b21\uff0c\u5982\u679c\u968f\u673a\u7684\u6b21\u6570\u8db3\u591f\u591a\uff0c\u6211\u4eec\u5c31\u8ba4\u4e3a\u662f\u65e0\u89e3\u7684\u3002\u901a\u8fc7\u8fd9\u6837\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u5f0f\uff0c\u5c31\u53ef\u4ee5\u6ee1\u8db3\u9898\u76ee\u7684\u8981\u6c42\u3002\n\n\u5173\u4e8e\u968f\u673a\u751f\u6210\u6392\u5217\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u5148\u521d\u59cb\u5316 $a_i$\uff0c\u4f7f\u5f97 $\\forall i\\in[1, n], a_i=i$\u3002\u7136\u540e\u4e0d\u65ad\u5730\u4f7f\u7528 $ \\text{random}\\_ \\text{shuffle} $ \u51fd\u6570\u5c31\u884c\u4e86\u3002\n\n#### \u5b8c\u6574\u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define re register int\n#define rl register ll\n#define rep(i,a,b) for(re i=(a),i##end=(b);i<=i##end;++i)\n#define pre(i,a,b) for(re i=(a),i##end=(b);i>=i##end;--i)\n#define mem(x,val) memset(x,val,sizeof(x))\nusing namespace std;\n\nconst int N=1e5+10;\nint n,m,a[N],T=1e3;\nmap <int,int> hav[N];\n\ninline int rint()\n{\n    re x=0,f=1; char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-') f=-1; ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+(ch^48); ch=getchar();}\n    return x*f;\n}\n\nint main()\n{\n\tn=rint(),m=rint();\n\trep(i,1,m)\n\t{\n\t\tre x=rint(),y=rint();\n\t\thav[x][y]=hav[y][x]=1;\n\t}\n\t\n\trep(i,1,n) a[i]=i;\n\twhile(T--)\n\t{\n\t\trandom_shuffle(a+1,a+n+1);\n\t\tre flg=0;\n\t\trep(i,2,n)\n\t\t\tif(hav[a[i-1]][a[i]])\n\t\t\t{\n\t\t\t\tflg=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tif(n==m&&hav[a[n]][a[1]]) flg=1;\n\t\tif(!flg)\n\t\t{\n\t\t\trep(i,2,min(m+1,n))\n\t\t\t\tprintf(\"%d %d\\n\",a[i-1],a[i]);\n\t\t\tif(n==m) printf(\"%d %d\",a[n],a[1]);\n\t\t\treturn 0;\n\t\t}\n\t}\n    \n    printf(\"-1\");\n    return 0;\n}\n```\n\n\u611f\u8c22\u9605\u8bfb\uff01",
        "postTime": 1622535105,
        "uid": 177531,
        "name": "ZolaWatle",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF329C \u3010Graph Reconstruction\u3011"
    },
    {
        "content": "\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570\u4e0d\u8d85\u8fc7 2\uff0c\u56e0\u6b64\u662f\u4e00\u4e9b\u94fe/\u73af\u3002\u6ce8\u610f\u5230 $m \\leq n$\uff0c\u56e0\u6b64\u53cd\u56fe\u6781\u5176\u7a20\u5bc6\uff0c\u53ef\u4ee5\u968f\u673a\u4e00\u4e2a\u6392\u5217\uff0c\u76f4\u63a5\u770b\u76f8\u90bb\u7684\u662f\u5426\u53ef\u4ee5\u8fde\u8fb9\u3002\u5047\u5982\u53ef\u4ee5\u8fde\u7684\u8fb9\u5927\u4e8e\u7b49\u4e8e $m$ \u5c31\u5408\u6cd5\u3002\u5982\u679c\u968f\u673a\u5f88\u591a\u6b21\u90fd\u4e0d\u5408\u6cd5\u8f93\u51fa `-1`\u3002\n\n\u6807\u7b97\u6709\u4e25\u8c28\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u4f46\u662f\u76f8\u5f53\u590d\u6742\uff0c\u800c\u4e14 $n \\leq 7$ \u7684\u65f6\u5019\u8fd8\u8981\u66b4\u529b\u7279\u5224\u3002\u8fd9\u91cc\u4e0d\u8bb2\u8ff0\uff0c\u5177\u4f53\u53ef\u4ee5\u53c2\u8003[\u5b98\u65b9\u9898\u89e3](http://codeforces.com/blog/entry/8417)\u3002\n```cpp\n#include <algorithm>\n#include <chrono>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <numeric>\n#include <random>\n#include <set>\n#include <vector>\nchar Gc() {\n  static char now[1 << 20], *S, *T;\n  if (T == S) {\n    T = (S = now) + std::fread(now, 1, 1 << 20, stdin);\n    if (T == S) return EOF;\n  }\n  return *S++;\n}\ntemplate <typename T>\nvoid Read(T &x) {\n  x = 0;\n  int f = 1;\n  char c;\n  while ((c = Gc()) < '0' || c > '9')\n    if (c == '-') f = -1;\n  x = c - '0';\n  while ((c = Gc()) >= '0' && c <= '9') x = x * 10 + (c - '0');\n  x *= f;\n}\ntemplate <typename T, typename... Args>\nvoid Read(T &x, Args &... args) {\n  Read(x);\n  Read(args...);\n}\ntemplate <typename T>\nvoid checkmax(T &x, T y) {\n  if (x < y) x = y;\n}\ntemplate <typename T>\nvoid checkmin(T &x, T y) {\n  if (x > y) x = y;\n}\nstd::size_t n, m, a[100001];\nstd::set<std::pair<std::size_t, std::size_t>> s;\nstd::vector<std::pair<std::size_t, std::size_t>> ans;\nstd::mt19937 mt_rand(\n    std::chrono::_V2::steady_clock::now().time_since_epoch().count());\nint main(int argc, char const *argv[]) {\n  Read(n, m);\n  for (std::size_t i = 1; i <= m; i++) {\n    std::size_t u, v;\n    Read(u, v);\n    s.emplace(std::min(u, v), std::max(u, v));\n  }\n  std::size_t t = 3000000 / m;\n  std::iota(a + 1, a + n + 1, 1);\n  while (t--) {\n    std::vector<std::pair<std::size_t, std::size_t>>().swap(ans);\n    std::shuffle(a + 1, a + n + 1, mt_rand);\n    a[0] = a[n];\n    for (std::size_t i = 0; i < n; i++)\n      if (!s.count({std::min(a[i], a[i + 1]), std::max(a[i], a[i + 1])}))\n        ans.emplace_back(a[i], a[i + 1]);\n    if (ans.size() < m) continue;\n    for (std::size_t i = 0; i < m; i++)\n      std::printf(\"%u %u\\n\", ans[i].first, ans[i].second);\n    return 0;\n  }\n  std::printf(\"-1\");\n  return 0;\n}\n```",
        "postTime": 1620530676,
        "uid": 68273,
        "name": "xyf007",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF329C \u3010Graph Reconstruction\u3011"
    }
]