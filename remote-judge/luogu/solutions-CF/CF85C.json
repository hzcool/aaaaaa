[
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u68f5\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u6709 $k$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u4e00\u4e2a\u6570 $x$\uff0c\u95ee\u5728\u641c\u7d22 $x$ \u7684\u65f6\u5019\u53ea\u8d70\u9519\u4e00\u6761\u8fb9\u7684\u6240\u6709\u8def\u5f84\u641c\u7d22\u5230\u7684\u6570\u7684\u671f\u671b\u3002\n\n### \u9898\u89e3\n\n\u9996\u5148\u66b4\u529b\u628a\u6bcf\u4e00\u6761\u8fb9\u90fd\u8d70\u51fa\u6765\u7b97\u51fa\u7b54\u6848\u80af\u5b9a\u662f\u4e0d\u884c\u7684\uff0c\u5047\u8bbe $x$ \u5728\u67d0\u4e00\u4e2a\u8282\u70b9\u7684\u5de6\u5b50\u6811\u4e0a\uff0c\u5982\u679c\u6211\u56e0\u4e3a\u8d70\u9519\u800c\u8d70\u5230\u53f3\u5b50\u6811\u4e0a\uff0c\u90a3\u6211\u80af\u5b9a\u4f1a\u5c3d\u529b\u5f80\u5de6\u8d70\uff08\u6839\u636e\u4e8c\u53c9\u641c\u7d22\u6811\u6027\u8d28\u53ef\u5f97\uff09\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c**\u8d70\u9519\u4e00\u6761\u8fb9\u540e\uff0c\u4e00\u5b9a\u662f\u4e00\u76f4\u5f80\u53e6\u4e00\u8fb9\u9760\u62e2\u7684\uff0c\u65b9\u5411\u4e0d\u4f1a\u6539\u53d8**\u3002\n\n\u4e8e\u662f\u6211\u4eec\u8bbe $L_i$ \u548c $R_i$ \u8868\u793a\u7b2c $i$ \u4e2a\u8282\u70b9\u4e00\u76f4\u5f80\u5de6\u6216\u5f80\u53f3\u8d70\u641c\u5230\u7684\u503c\uff0c\u8fd9\u662f\u53ef\u4ee5 $\\mathcal{O}(n)$ \u5904\u7406\u7684\u3002\u4f46\u6211\u4eec\u5982\u679c\u60f3\u8981\u6c42\u51fa\u7b54\u6848\uff0c\u5c31\u5fc5\u987b\u628a\u5230 $x$ \u7684\u6b63\u786e\u8def\u5f84\u8d70\u4e00\u904d\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u6700\u9ad8\u53ef\u4ee5\u8fbe\u5230 $\\mathcal{O}(kn)$\uff0c\u5bf9\u4e8e\u94fe\u7684\u60c5\u51b5\u4f1a\u88ab\u5361\u6389\u3002\n\n\u8003\u8651\u5982\u4f55\u76f4\u63a5\u6c42\u51fa\u7b54\u6848\uff0c\u6211\u4eec\u8bbe $dp_{i}$ \u8868\u793a\u5230\u8fbe\u7b2c $i$ \u4e2a\u8282\u70b9\u8d70\u9519\u7684\u603b\u503c\uff08\u6211\u53ea\u662f\u7ed9\u4ed6\u53d6\u540d\u53eb $dp$\uff0c\u5b9e\u9645\u4e0a\u8fd9\u4e0d\u662f\u4e00\u4e2a $dp$\uff09\uff0c\u6709\u8f6c\u79fb\u5982\u4e0b\uff1a\n\n$$\ndp_i=dp_{fa}+p\n$$\n\n\u5176\u4e2d $p$ \u7684\u610f\u601d\u662f\uff0c\u5982\u679c $i$ \u662f $fa$ \u7684\u5de6\u513f\u5b50\uff0c\u5219 $p$ \u4e3a $fa$ \u7684\u53f3\u513f\u5b50\u7684 $L$ \u503c\uff0c$i$ \u662f $fa$ \u7684\u53f3\u513f\u5b50\u540c\u7406\u3002\uff08\u5de6\u513f\u5b50\u548c\u53f3\u513f\u5b50\u4e5f\u662f\u53ef\u4ee5 $\\mathcal{O}(n)$ \u5904\u7406\u7684\uff09\u3002\u8fd9\u4e2a\u65f6\u5019\u5982\u679c\u6211\u4eec\u8981\u6c42\u51fa\u67d0\u4e00\u70b9\u7684\u671f\u671b\uff0c\u53ea\u9700\u8981\u6c42\u51fa\u5bf9\u4e8e\u8282\u70b9 $i$ \u7684\u9519\u8bef\u8def\u5f84\u4e2a\u6570\u5373\u53ef\uff0c\u4e5f\u53ef\u4ee5 $\\mathcal{O}(n)$ \u5904\u7406\u3002\n\n\u5373\u4f7f\u6c42\u51fa\u4e86 $dp_i$ \u7684\u503c\uff0c\u6211\u4eec\u4ecd\u7136\u9700\u8981\u77e5\u9053\u5bf9\u4e8e\u8be2\u95ee\u7684 $x$\uff0c\u4ed6\u5230\u5e95\u5f52\u5c5e\u4e8e\u54ea\u4e2a\u8282\u70b9\u3002\u8fd9\u91cc\u6709\u4e24\u79cd\u65b9\u6cd5\uff0c\u4e00\u79cd\u53ef\u4ee5\u7528\u5e73\u8861\u6811\u7684\u65b9\u6cd5\u91cd\u6784\u8fd9\u4e00\u68f5\u6811\uff0c\u53e6\u4e00\u79cd\u53ef\u4ee5\u76f4\u63a5**\u62cd\u6241\u4e8c\u5206\u6c42\u503c**\uff0c\u9009\u62e9\u7b2c\u4e8c\u79cd\u6bd4\u8f83\u65b9\u4fbf\u3002\u4f46\u662f\u5f53\u6211\u4eec\u4e8c\u5206\u51fa $x$ \u7684\u524d\u9a71\u548c\u540e\u7ee7\u65f6\uff0c\u5982\u4f55\u624d\u80fd\u5224\u65ad\u5b83\u5c5e\u4e8e\u5de6\u8fb9\u8282\u70b9\u8fd8\u662f\u53f3\u8fb9\u8282\u70b9\u5462\uff1f\u7ecf\u8fc7\u601d\u8003\u53ef\u4ee5\u53d1\u73b0 $x$ \u603b\u662f\u4f1a\u5230\u8fbe\u6df1\u5ea6\u66f4\u6df1\u7684\u70b9\uff0c\u4e5f\u5c31\u662f**\u524d\u9a71\u548c\u540e\u7ee7\u8c01\u7684\u6df1\u5ea6\u66f4\u6df1\u5c31\u5f52\u8c01**\uff0c\u6df1\u5ea6 $\\mathcal{O}(n)$ \u5904\u7406\u3002\n\n\u81f3\u6b64\u6211\u4eec\u5df2\u7ecf\u53ef\u4ee5\u6c42\u51fa\u8be2\u95ee\u7684\u503c\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\mathcal{O}(k\\log n)$\u3002\n\n### \u7ec6\u8282\n\n1. **\u9898\u76ee\u6ca1\u8bf4\u6839\u662f\u54ea\u4e2a\uff0c\u81ea\u5df1\u627e**\u3002\n2. \u4e8c\u5206\u7684\u503c\u8d85\u8fc7\u4e00\u5b9a\u8303\u56f4\u5b83\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5f88\u5947\u602a\u7684\u6570\uff0c\u81f3\u4e8e\u4ec0\u4e48\u539f\u56e0\u6211\u4e5f\u4e0d\u662f\u5f88\u6e05\u695a\uff0c\u81ea\u5df1\u6d4b\u8bd5\u53ef\u4ee5\u6253\u4e00\u4e9b\u6743\u503c\u4e3a $10^9$ \u7684\u70b9\u8fdb\u53bb\u3002\n3. \u62cd\u6241\u6700\u597d\u7528 `vector`\uff0c\u540c\u65f6\u5b58\u50a8\u503c\u548c\u70b9\u7f16\u53f7\u3002\n4. \u6839\u8282\u70b9\u7684\u9519\u8bef\u8def\u5f84\u6570\u5e94\u5f53\u4e3a $1$\uff0c\u4f60\u4e5f\u53ef\u4ee5\u7279\u5224\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n### \u4ee3\u7801\n\n\u5173\u4e8e\u53d8\u91cf\u7684\u610f\u4e49\uff1a\n\n- $L,R$\uff1a\u8868\u793a\u4e00\u76f4\u5f80\u5de6\u6216\u5f80\u53f3\u8d70\u53d6\u5230\u7684\u503c\uff1b\n- $dp$\uff1a\u8868\u793a\u8d70\u5230\u8fd9\u4e2a\u8282\u70b9\u7684\u6240\u6709\u9519\u8bef\u8def\u5f84\u7ec8\u70b9\u7684\u6570\u7684\u548c\n- $row$\uff1a\u8868\u793a\u8d70\u5230\u8fd9\u4e2a\u8282\u70b9\u7684\u9519\u8bef\u8def\u5f84\u6570\uff1b\n- $dep$\uff1a\u8868\u793a\u6df1\u5ea6\uff1b\n- $f$\uff1a\u62cd\u6241\u540e\u7684\u6811\uff1b\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int N=5e5+5;\nint n,q,head[N],cnt,val[N],L[N],R[N],dp[N],row[N],dep[N],root;\nstruct edge{int to,nxt;}a[N]; \nstruct tree{int l,r;}tr[N];\nvector<pair<int,int> > f;\nvoid add(int x,int y){\n\ta[++cnt].to=y;\n\ta[cnt].nxt=head[x];\n\thead[x]=cnt;\n}\nvoid dfs1(int x,int fa){\n\tdep[x]=dep[fa]+1;\n\tint s=0;\n\tL[x]=R[x]=val[x];\n\tfor(register int i=head[x];i;i=a[i].nxt){\n\t\tint y=a[i].to;\n\t\tif(y==fa) continue;\n\t\tdfs1(y,x);\n\t\tif(val[y]<val[x]) L[x]=L[y],tr[x].l=y;\n\t\telse R[x]=R[y],tr[x].r=y;//\u6839\u636e\u6743\u503c\u5224\u65ad\u5de6\u53f3\u513f\u5b50 \n\t}\n}\nvoid dfs2(int x,int fa){\n\tif(fa!=-1){\n\t\tif(x==tr[fa].l){\n\t\t\tdp[x]=dp[fa]+L[tr[fa].r]; \n\t\t\trow[x]=row[fa]+(tr[fa].r!=0);//\u6c42\u51fa\u9519\u8bef\u8def\u5f84\u6570 \n\t\t}\n\t\tif(x==tr[fa].r){\n\t\t\tdp[x]=dp[fa]+R[tr[fa].l];\n\t\t\trow[x]=row[fa]+(tr[fa].l!=0);\n\t\t}\n\t}else dp[root]=0;\n\tfor(register int i=head[x];i;i=a[i].nxt){\n\t\tint y=a[i].to;\n\t\tif(y==fa) continue;\n\t\tdfs2(y,x);\n\t}\n}\nvoid dfs3(int x,int fa){//\u4e2d\u5e8f\u904d\u5386\u62cd\u6241 \n\tif(tr[x].l!=0) dfs3(tr[x].l,x);\n\tf.push_back(make_pair(val[x],x));\n\tif(tr[x].r!=0) dfs3(tr[x].r,x);\n}\nsigned main(){\n\tscanf(\"%lld\",&n);\n\tfor(register int i=1,x,y;i<=n;i++){\n\t\tscanf(\"%lld %lld\",&x,&y);\n\t\tif(x!=-1) add(x,i);\n\t\telse root=i;\n\t\tval[i]=y;\n\t}\n\tdfs1(root,-1),dfs2(root,-1),dfs3(root,-1);\n\tf.push_back(make_pair(-1,0ll));\n\tsort(f.begin(),f.end());\n\trow[root]=1;\n\tscanf(\"%lld\",&q);\n\twhile(q--){\n\t\tint x;\n\t\tscanf(\"%lld\",&x);\n\t\tvector<pair<int,int> >::iterator p=lower_bound(f.begin(),f.end(),make_pair(x,0ll));\n\t\tint e=f[f.size()-1ll].second;\n\t\tif(x>f[f.size()-1ll].first) printf(\"%.11lf\\n\",dp[e]*1.0/row[e]); \n\t\telse if(p==f.begin()) printf(\"%.11lf\\n\",dp[root]*1.0/row[root]);\n\t\telse if(p==f.end()) printf(\"%.11lf\\n\",dp[e]*1.0/row[e]);\n\t\telse{\n\t\t\tvector<pair<int,int> >::iterator q=p-1;\n\t\t\tint x1=(*p).second;\n\t\t\tint y1=(*q).second;\n\t\t\tif(dep[y1]>dep[x1]) printf(\"%.11lf\\n\",dp[y1]*1.0/row[y1]);//\u9009\u62e9\u6df1\u5ea6\u66f4\u6df1\u7684\u70b9 \n\t\t\telse printf(\"%.11lf\\n\",dp[x1]*1.0/row[x1]);\n\t\t}\n\t}\n}\n```",
        "postTime": 1660816090,
        "uid": 754746,
        "name": "Resolute_Faith",
        "ccfLevel": 0,
        "title": "[CF85C] Petya and Tree"
    }
]