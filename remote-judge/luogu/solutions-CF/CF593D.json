[
    {
        "content": "[$problem$ $link$](https://www.luogu.com.cn/problem/CF593D)\n\n### \u3010\u9898\u610f\u3011\n\n\u7ed9\u51fa**\u4e00\u68f5\u6811**\uff0c\u8981\u6c42\u652f\u6301\u4e24\u4e2a\u64cd\u4f5c\uff1a\n\n\u2460\u4ece\u4e00\u4e2a\u70b9\u51fa\u53d1\uff0c\u8d70\u5230\u53e6\u4e00\u4e2a\u70b9\uff0c\u7ed9\u51fa\u4e00\u4e2a\u521d\u59cb\u503c\uff0c\u4f9d\u6b21\u9664\u4ee5\u8def\u5f84\u4e0a\u7684\u8fb9\u6743\u7ed3\u679c\u4e0b\u53d6\u6574\uff0c\u8f93\u51fa\u6700\u540e\u7684\u503c\u3002\n\n\u2461\u4fee\u6539\u67d0\u4e00\u6761\u8fb9\u7684\u8fb9\u6743\uff0c\u4fdd\u8bc1\u4fee\u6539\u540e\u7684\u8fb9\u6743**\u6bd4\u4fee\u6539\u524d\u7684\u5c0f**\uff0c\u4e14\u8fb9\u6743**\u6c38\u8fdc\u4e0d\u4f1a\u51fa\u73b0\u96f6**\u3002\n\n### \u3010\u7b97\u6cd5\u3011\n\n- \u8003\u8651\u9664\u6cd5\uff0c\u9664\u4ee5\u4e00\u4e2a\u975e\u4e00\u7684\u6570\u5b57\uff0c**\u53d8\u6210\u96f6\u6240\u9700\u8981\u7684\u6b21\u6570\u5fc5\u5b9a\u662flog\u7ea7\u522b\u7684**\uff1b\u6240\u4ee5\uff0c\u66b4\u529b\u6574\u9664\uff0c\u5982\u679c\u7ed3\u679c\u53d8\u4e3a\u96f6\u76f4\u63a5\u8df3\u51fa\u5373\u53ef\u3002\n\n- \u53ef\u662f\uff0c\u53ef\u80fd\u6709\u5f88\u591a\u8fb9\u7684\u8fb9\u6743\u662f\u4e00\uff0c\u8fd9\u5c31\u5bf9\u6548\u7387\u4ea7\u751f\u4e86\u5f71\u54cd\u3002\n\n- \u8003\u8651\u5230\u4e00\u65e6\u4e00\u6761\u8fb9\u8fb9\u6743\u53d8\u4e3a\u4e86\u4e00\uff0c\u5c31\u4e0d\u4f1a\u518d\u6539\u53d8\uff0c\u53ef\u4ee5\u7528**\u5e76\u67e5\u96c6\u548c\u500d\u589eLCA**\u7ef4\u62a4\u8fd9\u4e9b\u8fb9\u6743\u4e3a\u4e00\u7684\u8fb9\u3002\n\n**\u53c2\u8003@[LordLeft](https://www.luogu.com.cn/user/178864) \u9898\u89e3\u7684\u601d\u8def\u3002**\n\n\n\u4f46\u662f\u611f\u89c9\u4ed6\u7684\u4ee3\u7801\u56e0\u4e3a\u4e00\u5f00\u59cb\u6ca1\u6709\u9884\u5904\u7406\u5e76\u67e5\u96c6\uff0c\u53ea\u5728\u4fee\u6539\u65f6\u66f4\u65b0\u4f1a\u88ab\u5361\u3002\n\n\u5361\u70b9\uff1a\u4ece\u8282\u70b91\u51fa\u53d1\u7684\u4e24\u6761\u94fe\uff0c\u90fd\u662f\u67e5\u8be2\uff0c\u65e0\u4fee\u6539\u3002\u4f1a\u88ab\u5361\u6210$\\mathcal{O(qn)}$\n\n$\\operatorname{CF}$ \u6570\u636e\u4e0d\u4f1a\u90a3\u4e48\u6c34\u5427$...$\n\n\u6240\u4ee5\u6211\u6765\u8865\u4e00\u53d1\u9884\u5904\u7406\u7684\u4ee3\u7801\u3002$($ \u5176\u4f59\u90e8\u5206\u548c LordLeft \u7684\u5927\u540c\u5c0f\u5f02\u3002\n\n```cpp\nstruct node {\n\tint dep, id;\n\tinline bool operator < (const mode & a) const {\n\t\treturn dep < a.dep;\n\t}\n} q[N];\n\ninline void merge() {\n\tfor (register int i=1; i<=n; ++i)\n\t\tif (va[i] == 1) { //va\u662f\u8fb9\u6743\uff0c\u5b58\u5728\u513f\u5b50\u90a3\n\t\t\tq[++ cnt].dep = dep[i]; q[cnt].id = i;\n\t\t}\n   //\u8fd9\u91cc\u4e0d\u76f4\u63a5\u505a\u7684\u539f\u56e0\u662f\n   \u8fb9\u6743\u4e3a1\u7684\u8fb9\u53ef\u80fd\u4e0d\u6309\u6df1\u5ea6\u7531\u5c0f\u5230\u5927\u7ed9\u51fa\uff0c\u76f4\u63a5\u5408\u5e76\u4f1a\u51fa\u9505\n\tstd :: sort(q + 1, q + cnt + 1); //\u6309\u7167\u6df1\u5ea6\u6392\u5e8f\n\tfor (register int k=1; k<=cnt; ++k) {\n\t\tint i = q[k].id;\n\t\tf[i] = find(fa[i][0]);\n        //f[i]\u4e00\u5f00\u59cb=i\uff0c\u8fd9\u4e2a\u7236\u4eb2\u76f8\u5f53\u4e8e\u4e00\u4e2a\u6307\u9488\uff0c\u4e0d\u8981\u548c\u6811\u4e0a\u7236\u4eb2\u6df7\u8d77\u6765\n        //fa[i][0]\u662fi\u7684\u6811\u4e0a\u7236\u4eb2\u3002\n\t}\n}\n```\n\n\n\n",
        "postTime": 1596111012,
        "uid": 75762,
        "name": "zjh111111",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF593D \u3010Happy Tree Party\u3011"
    },
    {
        "content": "\u770b\u5230\u8fd9\u4e2a\u9898\u76ee\uff0c\u7531\u4e8e\u4e0d\u662f\u5f88\u4f1a\u6811\u94fe\u5256\u5206\u3001LCT\u7b49\u9ad8\u7ea7\u7b97\u6cd5\uff0c\u4e8e\u662f\u8003\u8651\u7528LCA\u505a\u8fd9\u4e2a\u9898\u76ee\n\n\u601d\u8def\u5f88\u7b80\u5355\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u67e5\u8be2\uff0c\u76f4\u63a5\u627e\u5230\u4e24\u70b9\u7684LCA\uff0c\u7531\u4e8e\u8fb9\u6743\u5f88\u5927\u800c\u4e14\u8981\u52a8\u6001\u6539\u8fb9\uff0c\u6240\u4ee5\u4e24\u4e2a\u70b9\u8981\u4e00\u6b65\u4e00\u6b65\u8df3\u5230LCA\uff0c\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u5c06$V$\u9664\u4ee5\u7ecf\u8fc7\u7684\u8fb9\u6743\uff0c\u6539\u8fb9\u7684\u8bdd\u76f4\u63a5\u5bf9\u94fe\u5f0f\u524d\u5411\u661f\u8fdb\u884c\u4fee\u6539\n\n\u7136\u540e\u5c31\u59a5\u59a5\u7684TLE\u4e86\u3002\u3002\u3002\n\n\u6b64\u65f6\u4ed4\u7ec6\u89c2\u5bdf\u9898\u9762\uff0c\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e9b\u6709\u8da3\u7684\u6027\u8d28\uff1a\n\n\u867d\u7136\u8fb9\u6743\u8303\u56f4\u7ed9\u7684\u5f88\u5927\uff0c\u4f46\u662f\u521d\u59cb\u503c\u4e5f\u53ea\u6709$10^{18}$\u8fd9\u4e48\u5927\uff0c\u4e5f\u5c31\u662f\u4e00\u6b21\u67e5\u8be2\u6700\u591a\u7ecf\u8fc7\u8fb9\u6743\u5927\u4e8e1\u7684\u8fb9$log_2 10^{18} \\approx 60$ \u6b21\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u5c31\u53ef\u4ee5\u60f3\u5230\u7528\u5e76\u67e5\u96c6\u4f18\u5316\u8fd9\u4e2a\u505a\u6cd5\uff1a\u628a\u8fb9\u6743\u4e3a1\u7684\u8fb9\u7684\u76ee\u6807\u8282\u70b9\u8bb0\u5165\u5b83\u7236\u4eb2\u8282\u70b9\u7684\u5e76\u67e5\u96c6\uff0c\u7136\u540e\u67e5\u8be2\u65f6\u4e24\u4e2a\u70b9\u5f80LCA\u8df3\u7684\u8fc7\u7a0b\u4e2d\u7a0d\u4f5c\u4fee\u6539\uff0c\u5e76\u4e14\u5f53$V$\u53d8\u62100\u65f6\u76f4\u63a5\u8df3\u51fa\uff0c\u90a3\u4e48\u6bcf\u6b21\u81f3\u591a\u8df360\u6b21\uff0c\u800c\u4e14\u5f80\u5f80\u4f1a\u6bd460\u5c0f\u5f88\u591a\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u7528LCA\u7684\u505a\u6cd5AC\u672c\u9898\n\n\u5177\u4f53\u7ec6\u8282\u89c1\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cctype>\n#define E puts(\"E?\")\n#define ll long long\nusing namespace std;\ninline ll read(){\n    ll w=0,s=1;\n    char c=getchar();\n    while(!isdigit(c)){\n        s=(c=='-')?-1:1;\n        c=getchar();\n        }\n    while(isdigit(c)){\n        w=(w<<3)+(w<<1)+c-'0';\n        c=getchar();\n        }\n    return w*s;\t\n    }\nconst int N=200005;\nll pre[N],cnt;\nstruct Edge{\n    ll nxt,to,wei,from;//\u94fe\u5f0f\u524d\u5411\u661f\u591a\u8bb0\u5f55\u4e00\u4e2afrom\u65b9\u4fbf\u6539\u8fb9\u6743\n    };\nEdge edge[N<<1];\nvoid add_for(ll u,ll v,ll w){\n    edge[++cnt].nxt=pre[u];\n    edge[cnt].to=v;\n    edge[cnt].wei=w;\n    edge[cnt].from=u;\n    pre[u]=cnt;\n    }\nll f[N][21],dep[N],fa[N],va[N];\nll find(ll x){\n    return fa[x]==x?x:fa[x]=find(fa[x]);//\u5e76\u67e5\u96c6\n    }\nvoid search(ll u,ll grt){\n    f[u][0]=grt;\n    dep[u]=dep[grt]+1;\n    for(ll i=1;i<=17;i++){\n        f[u][i]=f[f[u][i-1]][i-1];\n        }\n    for(ll i=pre[u];i>0;i=edge[i].nxt){\n        ll v=edge[i].to,w=edge[i].wei;\n        if(v!=grt){\n            if(w==1){\n                fa[v]=find(u);//\u5728\u505aLCA\u521d\u59cb\u5316\u7684\u65f6\u5019\uff0c\u9047\u5230\u8fb9\u6743\u4e3a1\u7684\u8fb9\u5c31\u53ef\u4ee5\u628a\u76ee\u6807\u8282\u70b9\u5408\u5e76\u5230\u7236\u4eb2\u8282\u70b9\u4e86\n                }\n            va[v]=w;//\u5e76\u67e5\u96c6\u7684\u6743\u503c\t\n            search(v,u);\n            }\n        }\n    }\nll LCA(ll u,ll v){\n    if(dep[u]<dep[v]){\n        swap(u,v);\n        }\n    for(ll i=17;i>=0;i--){\n        if(dep[f[u][i]]>=dep[v]){\n            u=f[u][i];\n            }\n        if(u==v){\n            return u;\n            }\t\n        }\n    for(ll i=17;i>=0;i--){\n        if(f[u][i]!=f[v][i]){\n            u=f[u][i];\n            v=f[v][i];\n            }\n        }\n    return f[u][0];\t\n    }\t\nll n,q;\t\nint main(){\n    n=read();\n    q=read();\n    ll u,v,w;\n    for(ll i=1;i<n;i++){\n        u=read();\n        v=read();\n        w=read();\n        add_for(u,v,w);\n        add_for(v,u,w);//\u65e0\u5411\u56fe\u8fde\u4e24\u6761\u8fb9\n        }\n    for(ll i=1;i<=n;i++){\n        fa[i]=i;//\u5e76\u67e5\u96c6\u521d\u59cb\u5316\n        }\t\n    search(1,0);\t\n    ll opt,x,y,z;\n    for(ll p=1;p<=q;p++){\n        opt=read();\n        if(opt==1){//\u67e5\u8be2\u64cd\u4f5c\n            x=read();\n            y=read();\n            z=read();\n            ll anc=LCA(x,y),a=x,b=y;\n            while(dep[a]>dep[anc]&&z){//\"&&z\"\u5c31\u662f\u5f53v\u4e3a0\u65f6\u53ef\u4ee5\u4e0d\u7528\u518d\u8df3\u4e86\n                if(va[a]){\t\n                    z/=va[a];\n                    }\n                a=find(f[a][0]);//\u501f\u52a9\u5e76\u67e5\u96c6\uff0c\u6bcf\u6b21\u4e0a\u8df3\u4e0d\u662f\u7b80\u5355\u7684\u8df3\u5230\u7236\u4eb2\uff0c\u800c\u662f\u7236\u4eb2\u6240\u5728\u5e76\u67e5\u96c6\u7684\u7956\u5148\uff08\uff1f\uff09\t\n                }\n            while(dep[b]>dep[anc]&&z){\n                if(va[b]){\n                    z/=va[b];\n                    }\n                b=find(f[b][0]);\t\n                }\t\n            printf(\"%lld\\n\",z);\t\t\n            }\n        else{//\u4fee\u6539\u64cd\u4f5c\n            x=read();\n            y=read();\n            ll u=edge[x<<1].from,v=edge[x<<1].to;\n            if(f[u][0]==v){\n                z=u;//\u7531\u4e8e\u6211\u4eec\u505a\u5e76\u67e5\u96c6\u7684\u65f6\u5019\u662f\u628a\u513f\u5b50\u5e76\u5165\u7236\u4eb2\uff0c\u6240\u4ee5\u6539\u8fb9\u65f6\u8981\u770bfrom\u548cto\u54ea\u4e2a\u5728\u6811\u4e0a\u662f\u7236\u4eb2\n                }\n            else{\n                z=v;\n                }\t\n            va[z]=y;\n            if(va[z]==1){\n                fa[z]=find(f[z][0]);//\u8fb9\u6743\u4e3a1\u5c31\u5408\u5e76\n                }\n            }\t\n        }\n    return 0;\n    }\n```\nGL~",
        "postTime": 1562720697,
        "uid": 178864,
        "name": "LordLeft",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF593D \u3010Happy Tree Party\u3011"
    },
    {
        "content": "### \u65b9\u6cd5\u4e00 \n\n#### \u4f7f\u7528Link-Cut_Tree,\u52a8\u6001\u7ef4\u62a4\u533a\u95f4\u4e58\u79ef $O(nlogn)$\n\n\u9664\u677f\u5b50\u4e4b\u5916\uff0c\u8981\u6ce8\u610f\u4e00\u4e0b\uff0c\uff08\u4f60\u4e0d\u7ba1\uff0c\u76f4\u63a5\u7528long double\u4e5f\u53ef\u4ee5\uff09\n\n\u8981\u5224\u65ad\u4e24\u4e2a\u6570\u5982\u679c\u4e00\u5f00\u59cb\u7206\u4e861e18\u5c31\u4e0d\u7528\u8bb0\u4e86\uff0c\u8bb0\u4e2a-1\u7684\u6807\u8bb0\n\n\u5982\u4f55\u5224\u65ad\u7206\u4e86\u5462qwq\n```cpp\nconst long long MAX=1e18;\ninline bool safe(long long a,long long b){return MAX/b>=a;}\n```\n\u5c31\u8fd9\u6837\n\n\u8fd9\u6837\u8fd8\u6709\u4e2a\u4f18\u52bf\uff0c\u5c31\u662f\u5982\u679c\u4e24\u4e2a\u6570\u6709\u4e00\u4e2a\u662f-1,\u4e00\u5b9a\u4f1a\u8fd4\u56detrue\n\n\u6216\u8005\u8fd0\u7528log,\u4f46\u662flog\u6bd4\u8f83\u6162\uff0c\u6240\u4ee5\u5efa\u8bae\u4e0a\u9762\u4e00\u79cd\n```cpp\ninline bool safe(long long a,long long b){return log(a)+log(b)<=log(MAX);}\n```\n\u6211LCT\u5199\u7684\u6bd4\u8f83\u4e11\uff0c\u5e38\u6570\u6bd4\u8f83\u5927qwq,\n\n\u4e00\u4e2alog\u88ab\u4e24\u4e2a\u7684\u6811\u94fe\u5256\u5206\u7206\u8e29qwq\n```cpp\n/*\n@Date    : 2019-07-09 13:18:57\n@Author  : Adscn (adscn@qq.com)\n@Link    : https://www.cnblogs.com/LLCSBlog\n*/\n#define FASTER\n#ifdef FASTER\n#pragma GCC diagnostic error \"-std=c++11\"\n#pragma GCC optimize(2)\n#pragma GCC optimize(3)\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"inline\")\n#pragma GCC optimize(\"-fgcse\")\n#pragma GCC optimize(\"-fgcse-lm\")\n#pragma GCC optimize(\"-fipa-sra\")\n#pragma GCC optimize(\"-ftree-pre\")\n#pragma GCC optimize(\"-ftree-vrp\")\n#pragma GCC optimize(\"-fpeephole2\")\n#pragma GCC optimize(\"-ffast-math\")\n#pragma GCC optimize(\"-fsched-spec\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC optimize(\"-falign-jumps\")\n#pragma GCC optimize(\"-falign-loops\")\n#pragma GCC optimize(\"-falign-labels\")\n#pragma GCC optimize(\"-fdevirtualize\")\n#pragma GCC optimize(\"-fcaller-saves\")\n#pragma GCC optimize(\"-fcrossjumping\")\n#pragma GCC optimize(\"-fthread-jumps\")\n#pragma GCC optimize(\"-funroll-loops\")\n#pragma GCC optimize(\"-fwhole-program\")\n#pragma GCC optimize(\"-freorder-blocks\")\n#pragma GCC optimize(\"-fschedule-insns\")\n#pragma GCC optimize(\"inline-functions\")\n#pragma GCC optimize(\"-ftree-tail-merge\")\n#pragma GCC optimize(\"-fschedule-insns2\")\n#pragma GCC optimize(\"-fstrict-aliasing\")\n#pragma GCC optimize(\"-fstrict-overflow\")\n#pragma GCC optimize(\"-falign-functions\")\n#pragma GCC optimize(\"-fcse-skip-blocks\")\n#pragma GCC optimize(\"-fcse-follow-jumps\")\n#pragma GCC optimize(\"-fsched-interblock\")\n#pragma GCC optimize(\"-fpartial-inlining\")\n#pragma GCC optimize(\"no-stack-protector\")\n#pragma GCC optimize(\"-freorder-functions\")\n#pragma GCC optimize(\"-findirect-inlining\")\n#pragma GCC optimize(\"-fhoist-adjacent-loads\")\n#pragma GCC optimize(\"-frerun-cse-after-loop\")\n#pragma GCC optimize(\"inline-small-functions\")\n#pragma GCC optimize(\"-finline-small-functions\")\n#pragma GCC optimize(\"-ftree-switch-conversion\")\n#pragma GCC optimize(\"-foptimize-sibling-calls\")\n#pragma GCC optimize(\"-fexpensive-optimizations\")\n#pragma GCC optimize(\"-funsafe-loop-optimizations\")\n#pragma GCC optimize(\"inline-functions-called-once\")\n#pragma GCC optimize(\"-fdelete-null-pointer-checks\")\n#endif\n#include<bits/stdc++.h>\nusing namespace std;\n#define IL inline\n#define RG register\n#define gi getint()\n#define gl getlong()\n#define gc getchar()\n#define File(a) \nfreopen(a\".in\",\"r\",stdin);freopen(a\".out\",\"w\",stdout)\n#define int long long\nIL int getint()\n{\n\tRG int xi=0;\n\tRG char ch=gc;\n\tbool f=0;\n\twhile(ch<'0'|ch>'9')ch=='-'?f=1:f,ch=gc;\n\twhile(ch>='0'&ch<='9')xi=(xi<<1)+(xi<<3)+ch-48,ch=gc;\n\treturn f?-xi:xi;\n}\nIL long long getlong()\n{\n\tRG long long xi=0;\n\tRG char ch=gc;\n\tbool f=0;\n\twhile(ch<'0'|ch>'9')ch=='-'?f=1:f,ch=gc;\n\twhile(ch>='0'&ch<='9')xi=(xi<<1)+(xi<<3)+ch-48,ch=gc;\n\treturn f?-xi:xi;\n}\ntemplate<typename T>\nIL void pi(T k,char ch=0)\n{\n\tif(k<0)k=-k,putchar('-');\n\tif(k>=10)pi(k/10,0);\n\tputchar(k%10+'0');\n\tif(ch)putchar(ch);\n}\nIL unsigned int LOG2(unsigned int x)\n{\n\tunsigned int ret;\n\t__asm__ __volatile__ (\"bsrl %1, %%eax\":\"=a\"(ret):\"m\"(x));\n\treturn ret;\n}\nconst int N=1e5+7;\nnamespace LCT{\n\tint f[N<<1],c[N<<1][2],rev[N<<1];\n\tlong long ret[N<<1],val[N<<1];\n\tconst long long MAX=1e18;\n\t#define ls(x) (c[(x)][0])\n\t#define rs(x) (c[(x)][1])\n\t#define s(x,k) (c[(x)][(k)])\n\tinline bool ws(register int x,register int p){return ls(p)^x;}\n\tinline int nroot(register int x){return ls(f[x])==x||rs(f[x])==x;}\n\tinline bool safe(long long a,long long b){return MAX/a>=b;}\n\tinline void pushr(int x){if(x)swap(ls(x),rs(x)),rev[x]^=1;}\n\tinline void pushdown(int x)\n\t{\n\t\tif(!rev[x])return;\n\t\tpushr(ls(x)),pushr(rs(x));\n\t\trev[x]=0;\n\t}\n\tinline void pushall(int x){if(nroot(x))pushall(f[x]);pushdown(x);}\n\tinline void pushup(int x){\n\t\tret[x]=-1;\n\t\tif(safe(ret[ls(x)],ret[rs(x)])&&\n\t\t\tsafe(ret[ls(x)]*ret[rs(x)],val[x]))ret[x]=ret[ls(x)]*ret[rs(x)]*val[x];\n\t}\n\tinline void rotate(int x)\n\t{\n\t\tregister int p=f[x],g=f[p];\n\t\tregister int t=ws(x,p),w=s(x,!t);\n\t\tif(nroot(p))s(g,ws(p,g))=x;s(x,!t)=p;s(p,t)=w;\n\t\tif(w)f[w]=p;f[p]=x;f[x]=g;\n\t\tpushup(p);\n\t}\n\tinline void Splay(int x)\n\t{\n\t\tpushall(x);\n\t\twhile(nroot(x))\n\t\t{\n\t\t\tregister int p=f[x],g=f[p];\n\t\t\tif(nroot(p))rotate(ws(x,p)^ws(p,g)?x:p);\n\t\t\trotate(x);\n\t\t}\n\t\tpushup(x);\n\t}\n\tinline void access(register int x){for(register int y=0;x;x=f[y=x])Splay(x),rs(x)=y,pushup(x);}\n\tinline void makert(int x){access(x),Splay(x),pushr(x);}\n\tinline void Split(int x,int y){makert(x),access(y),Splay(y);}\n\tinline void link(int x,int y){makert(x);f[x]=y;}\n\tinline void modify(int x,int value)\n\t{\n\t\tmakert(x);\n\t\tval[x]=value;\n\t\tpushup(x);\n\t}\n\tinline long long ask(int x,int y)\n\t{\n\t\tSplit(x,y);\n\t\treturn ret[y];\n\t}\n\tint main()\n\t{\n\t\tint n=gi,q=gi;\n\t\tfill(val,val+n+n+1,1);\n\t\tfill(ret,ret+n+n+1,1);\n\t\tfor(int i=1;i<n;++i)\n\t\t{\n\t\t\tint u=gi,v=gi;\n\t\t\tval[i+N]=gl;\n\t\t\tlink(u,i+N),link(i+N,v);\n\t\t}\n\t\tfor(int i=1;i<=q;++i)\n\t\t{\n\t\t\tint type=gi;\n\t\t\tif(type==1)\n\t\t\t{\n\t\t\t\tint u=gi,v=gi;\n\t\t\t\tlong long P=gl;\n\t\t\t\tlong long V=ask(u,v);\n\t\t\t\tif(~V)pi(P/V,'\\n');\n\t\t\t\telse pi(0,'\\n');\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tint u=gi;\n\t\t\t\tmodify(u+N,gl);\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n}\nsigned main()\n{\n\treturn LCT::main();\n}\n```\n\n### \u65b9\u6cd5\u4e8c\n\n#### \u66b4\u529b\u4f18\u5316 $O(nlog(maxnum))$\n\n\u6ce8\u610f\u52301e18\u5927\u7ea6\u7b49\u4e8e$2^{60}$\n\n\u6240\u4ee5\u6700\u591a\u7ecf\u8fc760\u6761\u8fb9\u6743\u5927\u4e8e1\u7684\u8fb9\n\n\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8fb9\u67431\u7684\u8fb9\u7528\u5e76\u67e5\u96c6\u8fde\u4e00\u4e0b\n\n\u4e0d\u662f1\u7684\u5c31\u66b4\u8df3\uff0c\u7206\u4e86\u5c31\u9000\u51fa\u5c31\u53ef\u4ee5\u4e86qwq\n\n\u7136\u800c\u8fd8\u662f\u540a\u6253LCTqwq\n\n\u4ee3\u7801\u4ec5\u4f9b\u53c2\u8003\u601d\u8def\uff0c\u4e0d\u4e00\u5b9a\u6b63\u786e\n```cpp\n/*\n@Date    : 2019-07-09 13:18:57\n@Author  : Adscn (adscn@qq.com)\n@Link    : https://www.cnblogs.com/LLCSBlog\n*/\n#ifdef FASTER\n#pragma GCC diagnostic error \"-std=c++11\"\n#pragma GCC optimize(2)\n#pragma GCC optimize(3)\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"inline\")\n#pragma GCC optimize(\"-fgcse\")\n#pragma GCC optimize(\"-fgcse-lm\")\n#pragma GCC optimize(\"-fipa-sra\")\n#pragma GCC optimize(\"-ftree-pre\")\n#pragma GCC optimize(\"-ftree-vrp\")\n#pragma GCC optimize(\"-fpeephole2\")\n#pragma GCC optimize(\"-ffast-math\")\n#pragma GCC optimize(\"-fsched-spec\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC optimize(\"-falign-jumps\")\n#pragma GCC optimize(\"-falign-loops\")\n#pragma GCC optimize(\"-falign-labels\")\n#pragma GCC optimize(\"-fdevirtualize\")\n#pragma GCC optimize(\"-fcaller-saves\")\n#pragma GCC optimize(\"-fcrossjumping\")\n#pragma GCC optimize(\"-fthread-jumps\")\n#pragma GCC optimize(\"-funroll-loops\")\n#pragma GCC optimize(\"-fwhole-program\")\n#pragma GCC optimize(\"-freorder-blocks\")\n#pragma GCC optimize(\"-fschedule-insns\")\n#pragma GCC optimize(\"inline-functions\")\n#pragma GCC optimize(\"-ftree-tail-merge\")\n#pragma GCC optimize(\"-fschedule-insns2\")\n#pragma GCC optimize(\"-fstrict-aliasing\")\n#pragma GCC optimize(\"-fstrict-overflow\")\n#pragma GCC optimize(\"-falign-functions\")\n#pragma GCC optimize(\"-fcse-skip-blocks\")\n#pragma GCC optimize(\"-fcse-follow-jumps\")\n#pragma GCC optimize(\"-fsched-interblock\")\n#pragma GCC optimize(\"-fpartial-inlining\")\n#pragma GCC optimize(\"no-stack-protector\")\n#pragma GCC optimize(\"-freorder-functions\")\n#pragma GCC optimize(\"-findirect-inlining\")\n#pragma GCC optimize(\"-fhoist-adjacent-loads\")\n#pragma GCC optimize(\"-frerun-cse-after-loop\")\n#pragma GCC optimize(\"inline-small-functions\")\n#pragma GCC optimize(\"-finline-small-functions\")\n#pragma GCC optimize(\"-ftree-switch-conversion\")\n#pragma GCC optimize(\"-foptimize-sibling-calls\")\n#pragma GCC optimize(\"-fexpensive-optimizations\")\n#pragma GCC optimize(\"-funsafe-loop-optimizations\")\n#pragma GCC optimize(\"inline-functions-called-once\")\n#pragma GCC optimize(\"-fdelete-null-pointer-checks\")\n#endif\n#include<bits/stdc++.h>\nusing namespace std;\n#define IL inline\n#define RG register\n#define gi getint()\n#define gl getlong()\n#define gc getchar()\n#define File(a) freopen(a\".in\",\"r\",stdin);freopen(a\".out\",\"w\",stdout)\nIL int getint()\n{\n\tRG int xi=0;\n\tRG char ch=gc;\n\tbool f=0;\n\twhile(ch<'0'|ch>'9')ch=='-'?f=1:f,ch=gc;\n\twhile(ch>='0'&ch<='9')xi=(xi<<1)+(xi<<3)+ch-48,ch=gc;\n\treturn f?-xi:xi;\n}\nIL long long getlong()\n{\n\tRG long long xi=0;\n\tRG char ch=gc;\n\tbool f=0;\n\twhile(ch<'0'|ch>'9')ch=='-'?f=1:f,ch=gc;\n\twhile(ch>='0'&ch<='9')xi=(xi<<1)+(xi<<3)+ch-48,ch=gc;\n\treturn f?-xi:xi;\n}\ntemplate<typename T>\nIL void pi(T k,char ch=0)\n{\n\tif(k<0)k=-k,putchar('-');\n\tif(k>=10)pi(k/10,0);\n\tputchar(k%10+'0');\n\tif(ch)putchar(ch);\n}\nIL unsigned int LOG2(unsigned int x)\n{\n\tunsigned int ret;\n\t__asm__ __volatile__ (\"bsrl %1, %%eax\":\"=a\"(ret):\"m\"(x));\n\treturn ret;\n}\nconst int N=2e5+7;\nnamespace BF{\n\tint fa[N],dep[N];\n\ttypedef long long ll;\n\tinline int find(int x){return fa[x]==x?x:(fa[x]=find(fa[x]));}\n\tinline void link(int x,int y){fa[find(x)]=find(y);}\t\n\tinline bool safe(ll a,ll b){if(a==0||b==0)return 1;return 1e18/b>=a;}\n\tstruct edge{\n\t\tint v,nxt;long long w;\n\t}e[N<<1];\n\tint head[N],cnt;\n\tinline void add(int u,int v,long long w)\n\t{\n\t\te[++cnt]=(edge){v,head[u],w};\n\t\thead[u]=cnt;\n\t}\n\tint f[N][17];\n   long long val[N];\n\tvoid dfs(int x,int p)\n\t{\n\t\tf[x][0]=p,dep[x]=dep[p]+1;\n\t\tfor(int i=1;i<=16;++i)f[x][i]=f[f[x][i-1]][i-1];\n\t\tfor(int i=head[x];i;i=e[i].nxt)\n\t\t{\n\t\t\tint v=e[i].v;\n\t\t\tif(v==p)continue;\n\t\t\tif(e[i].w==1)link(v,x);\n\t\t\tdfs(v,x);\n\t\t\tval[v]=e[i].w;\n\t\t}\n\t}\n\tinline int LCA(int u,int v)\n\t{\n\t\tif(dep[u]<dep[v])swap(u,v);\n\t\tfor(int i=16;i>=0;--i)if(dep[f[u][i]]>=dep[v])u=f[u][i];\n\t\tif(u==v)return u;\n\t\tfor(int i=16;i>=0;--i)if(f[u][i]!=f[v][i])u=f[u][i],v=f[v][i];\n\t\treturn f[u][0];\n\t}\n\tint U[N],V[N];\n\tint main(void)\n\t{\n\t\tint n=gi,q=gi;\n\t\tfor(int i=1;i<=n;++i)fa[i]=i;\n\t\tfor(int i=1;i<n;++i)\n\t\t{\n\t\t\tint u=gi,v=gi;long long c=gl;\n\t\t\tadd(u,v,c);\n\t\t\tU[i]=u,V[i]=v;\n\t\t}\n\t\tdfs(1,0);\n\t\tfor(int i=1;i<=q;++i)\n\t\t{\n\t\t\tint type=gi;\n\t\t\tif(type==1)\n\t\t\t{\n\t\t\t\tint u=gi,v=gi;long long P=gl;\n\t\t\t\tint lca=LCA(u,v);\n\t\t\t\tlong long sum=1;\n\t\t\t\twhile(dep[u]>dep[lca])\n\t\t\t\t{\n\t\t\t\t\tif(find(u)!=u)u=find(u);\n\t\t\t\t\telse sum=safe(sum,val[u])*sum*val[u],u=f[u][0];\n\t\t\t\t}\n\t\t\t\tif(sum==0){printf(\"0\\n\");continue;}\n\t\t\t\twhile(dep[v]>dep[lca])\n\t\t\t\t{\n\t\t\t\t\tif(find(v)!=v)v=find(v);\n\t\t\t\t\telse sum=safe(sum,val[v])*sum*val[v],v=f[v][0];\n\t\t\t\t}\n\t\t\t\tif(sum)cout<<P/sum<<endl;\n\t\t\t\telse cout<<0<<endl;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tint k=gi;long long w=gi;\n\t\t\t\tint u=U[k],v=V[k];\n\t\t\t\tif(dep[u]<dep[v])swap(u,v);\n\t\t\t\tval[u]=w;\n\t\t\t\tif(w==1)link(u,v);\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n}\nint main()\n{\n\treturn BF::main();\n}\n```\n### 3.\u6811\u94fe\u5256\u5206 $O(nlog^2n)$\n\u4e3b\u8981\u601d\u8def\u540cLCT,\n\n\u4f46\u662f\u4ecd\u7136\u540a\u6253LCT\u4e86qwq\n\n\u8be6\u89c1\u4e0b\u9762\u5927\u4f6c\u9898\u89e3",
        "postTime": 1562670419,
        "uid": 19607,
        "name": "ACA\u306d",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF593D \u3010Happy Tree Party\u3011"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\u6709\u4e00\u68f5 $n$ \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u6811\u4e0a\u7684\u6bcf\u4e00\u6761\u8fb9\u6709\u4e00\u4e2a\u6743\u503c $x_i$ \uff0c\u5e76\u4e14\u6709 $m$ \u4e2a\u64cd\u4f5c\u3002\n\n- $1$ \u64cd\u4f5c\u662f\u7ed9\u5b9a $c_i$ \uff0c\u5c06 $a_i$ \u5230 $b_i$\u8def\u5f84\u4e0a\u7684\u6240\u6709\u8fb9\u8d70\u4e00\u904d\uff0c\u6bcf\u7ecf\u8fc7\u4e00\u6761\u8fb9 $j$ \uff0c$c_i$ \u4f1a\u53d8\u6210 $\\frac{c_i}{x_j}$\u5411\u4e0b\u53d6\u6574\n- $2$ \u64cd\u4f5c\u662f\u5c06\u7b2c $j$ \u6761\u8fb9\u7684 $x_j$ \u4fee\u6539\u6210 $c_i$\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u64cd\u4f5c $1$ ,\u8f93\u51fa\u6700\u540e $c_i$\u7684\u503c\u3002\n\n### \u601d\u8def\n\u770b\u5230\u9898\u9762\u5f88\u663e\u7136\u53ef\u4ee5\u7528\u6811\u5256\u505a\uff0c\u5bf9\u4e8e $1$ \u64cd\u4f5c\uff0c\u4e00\u76f4\u9664 $x_j$ \u76f8\u5f53\u4e8e\u5c06\u6240\u6709 $x_j$ \u4e58\u8d77\u6765\u540e\u518d\u9664\u3002\u6240\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\u4e58\u5373\u53ef\uff1b\u5bf9\u4e8e $2$ \u64cd\u4f5c\uff0c\u5c31\u662f\u4e2a\u5355\u70b9\u4fee\u6539\u3002\n\n\u4f46\u8981\u6ce8\u610f\u7684\u662f\u53ef\u80fd\u4e58\u79ef\u53ef\u80fd\u4f1a\u8d85\u8fc7 $10^{18}$ \uff0c\u663e\u7136\u4e58\u79ef\u8d85\u8fc7 $10^{18}$ \u4f1a\u4f7f\u5f97 $c_i$ \u53d8\u62100\uff0c\u6240\u4ee5\u5f3a\u884c\u53d8\u6210 $10^{18}$\u3002\u4e3a\u4e86\u9632\u6b62\u7cbe\u5ea6\u8bef\u5dee\u8fd8\u8981\u5f00 $long $ $double$ \uff0c\u7ebf\u6bb5\u6811\u7a7a\u95f4\u4e00\u5b9a\u8981\u5f00 $4$ \u500d ~~\uff08\u6211\u5c31\u662f\u8fd9\u91cc\u6302\u4e86\u7136\u540e\u75af\u72c2 DEBUG \uff09~~\u3002\u4e4b\u540e\u6811\u5256\u5c31\u5f88\u5bb9\u6613\u89e3\u51b3\u4e86\u3002\n\n\n```cpp\n#include<bits/stdc++.h>\n#define fr(i,a,b) for(register int i = a;i <= b;++i)\n#define int long long\n#define double long double\n#define ls k << 1\n#define rs k << 1 | 1\n#define N 200010\nusing namespace std;\n\nconst double MAX = 1e18;\nstruct tree{\n\tint l,r,f;\n\tdouble w;\n}t[N << 2];\nstruct edge{\n\tint to,nxt,w;\n}e[N << 2];\nint h[N],fa[N],dep[N],top[N],size[N],son[N],id[N],w[N],w2[N];\nint tot = 1,cnt;\n\ninline int read(){\n\tint x = 0,f = 1;char c = getchar();\n\twhile(!isdigit(c)){if(c == '-')f = -1;c = getchar();}\n\twhile(isdigit(c)){x = x * 10 + c - '0';c = getchar();}\n\treturn f * x;\n}\n\ninline void add(int x,int y,int z){\n\te[++tot] = (edge){y,h[x],z};\n\th[x] = tot;\n}\n\ninline void dfs1(int x,int f,int deep){\n\tfa[x] = f;dep[x] = deep + 1;size[x] = 1;\n\tfor(register int i = h[x];i;i = e[i].nxt){\n\t\tint p = e[i].to;\n\t\tif(p != f){\n\t\t\tw[p] = e[i].w;\n\t\t\tdfs1(p,x,deep + 1);\n\t\t\tsize[x] += size[p];\n\t\t\tif(size[p] > size[son[x]])son[x] = p;\n\t\t}\n\t}\n}\n\ninline void dfs2(int x,int t){\n\ttop[x] = t;id[x] = ++cnt;w2[cnt] = w[x];\n\tif(!son[x])return;\n\tdfs2(son[x],t);\n\tfor(register int i = h[x];i;i = e[i].nxt){\n\t\tint p = e[i].to;\n\t\tif(p != son[x] && p != fa[x])dfs2(p,p);\n\t}\n}\n\ninline double mul(double x,double y){if(!x && MAX / y >= x)return MAX;return x * y;}\ninline void pushup(int k){t[k].w = mul(t[ls].w,t[rs].w);}\n\ninline void build(int k,int l,int r){\n\tt[k].l = l;t[k].r = r;\n\tif(l == r){t[k].w = w2[l];return;}\n\tint mid = (l + r) >> 1;\n\tbuild(ls,l,mid);build(rs,mid + 1,r);\n\tpushup(k);\n}\n\ninline void update(int k,int x,int y){\n\tif(t[k].l == t[k].r){t[k].w = y;return;}\n\tint mid = (t[k].l + t[k].r) >> 1;\n\tif(x <= mid)update(ls,x,y);\n\telse update(rs,x,y);\n\tpushup(k);\n}\n\ninline double query(int k,int x,int y){\n\tif(t[k].l >= x && t[k].r <= y)return t[k].w;\n\tint mid = (t[k].l + t[k].r) >> 1;double tmp = 1;\n\tif(x <= mid)tmp = mul(tmp,query(ls,x,y));\n\tif(y > mid)tmp = mul(tmp,query(rs,x,y));\n\treturn tmp;\n}\n\ninline double querych(int x,int y){\n\tdouble tmp = 1;\n\twhile(top[x] != top[y]){\n\t\tif(dep[top[x]] < dep[top[y]])swap(x,y);\n\t\ttmp = mul(tmp,query(1,id[top[x]],id[x]));\n\t\tx = fa[top[x]];\n\t}\n\tif(dep[x] > dep[y])swap(x,y);\n\ttmp = mul(tmp,query(1,id[x] + 1,id[y]));\n\treturn tmp;\n}\n\nsigned main(){\n\tint n = read(),m = read();\n\tfr(i,1,n - 1){\n\t\tint x = read(),y = read(),z = read();\n\t\tadd(x,y,z);add(y,x,z);\n\t}\n\tdfs1(1,0,1);dfs2(1,1);build(1,1,n);\n\twhile(m--){\n\t\tint opt = read(),x = read(),y = read(),z;\n\t\tif(opt == 1){\n\t\t\tz = read();double s = querych(x,y);\n\t\t\tif(!s)printf(\"0\\n\");\n\t\t\telse cout<<(int)(z / s)<<endl;\n\t\t}\n\t\telse{\n\t\t\tint p = e[x << 1].to,q = e[x << 1 | 1].to;\n\t\t\tupdate(1,id[dep[p] > dep[q] ? p : q],y);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1570008526,
        "uid": 18157,
        "name": "Naffygo",
        "ccfLevel": 0,
        "title": "CF593D \u3010Happy Tree Party\u3011"
    },
    {
        "content": "\u6811\u94fe\u5256\u5206+\u7ebf\u6bb5\u6811   \u5355\u70b9\u4fee\u6539+\u533a\u95f4\u8fde\u4e58\uff08\u8fde\u9664\u7b49\u4e8e\u8fde\u4e58\u7684\u5012\u6570\uff09\n\n\u6ce8\u610f\u5230\u4e58\u79ef\u6709\u53ef\u80fd\u7206long long \u8fd8\u6709double\u53ef\u80fd\u4f1a\u5361\u7cbe\u5ea6\uff0c\u6240\u4ee5\u9009\u62e9long double\n\n\uff08\u5e38\u6570\u5927\u4e86\u4e00\u70b9\u4f46\u662f\u8fd8\u662f\u8fc7\u4e86\uff09\n\nAC\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include<vector>\n#include<cstring>\n#include<list>\n#include<set>\n#include<queue>\n#include<map>\n#include<stack>\n#include<algorithm>\nusing namespace std;\n#define int long long\nconst int N = 222000;\nconst double MAXN = 10e19;\n#define double long double\nstruct node2\n{\n    node2 *L, *R;\n    int l, r;\n    double val;\n};\nvoid update(node2 *p)\n{\n    if (p->l == p->r)\n        return;\n    double k = p->L->val * p->R->val;\n    if (k > MAXN)\n        p->val = 0;\n    else\n        p->val = k;\n}\nvoid pl(node2 *a)\n{\n    if ((a->L != NULL) || (a->l == a->r))\n        return;\n    int mid = (a->l + a->r) / 2;\n    a->L = new node2();\n    a->L->l = a->l, a->L->r = mid, a->L->val = 0;\n}\nvoid pr(node2 *a)\n{\n    if ((a->R != NULL) || (a->l == a->r))\n        return;\n    int mid = (a->l + a->r) / 2;\n    a->R = new node2();\n    a->R->l = mid + 1, a->R->r = a->r, a->R->val = 0;\n}\nvoid build(int *p, node2 *x)\n{\n    pl(x), pr(x);\n    if (x->l == x->r)\n    {\n        x->val = p[x->l];\n        return;\n    }\n    else\n        build(p, x->L), build(p, x->R);\n    update(x);\n}\nvoid split(node2 *p, int l, int r,double w)\n{\n    if (p->l == l && p->r == r)\n    {\n        p->val = w;\n        return;\n    }\n    int mid = (p->l + p->r) / 2;\n    if (l <= mid && r > mid)\n        split(p->L, l, mid,w), split(p->R, mid + 1, r,w);\n    else if (r <= mid)\n        split(p->L, l, r,w);\n    else if (l >= mid + 1)\n        split(p->R, l, r,w);\n    update(p);\n}\ndouble query_sum(node2 *x, int L, int R) \n{\n    double sum = 0;\n    int mid = (x->l + x->r) / 2;\n    if (x->l == L && x->r == R)\n        return x->val;\n    else\n    {\n        if (L <= mid && R > mid)\n        {\n            sum = query_sum(x->L, L, mid) * query_sum(x->R, mid + 1, R);\n            if (sum < MAXN)\n                return sum;\n            else\n                return 0;\n        }\n        else if (R <= mid)\n            return query_sum(x->L, L, R);\n        else if (L >= mid + 1)\n            return query_sum(x->R, L, R);\n    }\n}\nnamespace tree_split1\n{\n    struct graph\n    {\n        long long Begin[N * 2], to[N * 2], Next[N * 2], e, weight[N * 2];\n        void add(int u, int v)\n        {\n            to[++e] = v;\n            Next[e] = Begin[u];\n            Begin[u] = e;\n        }\n        void add(int u, int v, int w)\n        {\n            to[++e] = v;\n            Next[e] = Begin[u];\n            Begin[u] = e;\n            weight[e] = w;\n        }\n        void init_graph()\n        {\n            e = 0;\n            memset(Begin, -1, sizeof(Begin));\n        }\n    };\n    int id[N];\n    class tree_split\n    {\n    public:\n        long long dep[N], fa[N], top[N], size1[N], son[N], weight[N], new_weight[N];\n        int len;\n        graph g;\n        double query2(node2 *p, int x, int y)\n        {\n            double ans = 1;\n            while (top[x] != top[y])\n            {\n                if (dep[top[x]] < dep[top[y]]) swap(x, y);\n                ans *= query_sum(p,id[top[x]], id[x]);\n                x = fa[top[x]];\n            }\n            if (dep[x] > dep[y]) swap(x, y);\n            if(id[x]!=id[y])\n            ans *= query_sum(p,id[x]+1, id[y]);\n            return ans;\n        }\n        tree_split()\n        {\n            memset(fa, 0, sizeof(fa));\n            memset(top, 0, sizeof(top));\n            memset(size1, 0, sizeof(size1));\n            memset(son, 0, sizeof(son));\n            memset(g.Begin, -1, sizeof(g.Begin));\n            memset(weight, 0, sizeof(weight));\n            len = 0;\n        }\n        void init(int root)\n        {\n            dep[root] = 0;\n            dfs1(root, root);\n            dfs2(root, root);\n        }\n        void add_weight(int i, int w)\n        {\n            weight[i] = w;\n        }\n        void add_edge(int u, int v,double w)\n        {\n            g.add(u, v,w);\n            g.add(v, u,w);\n        }\n        void dfs1(int u, int father)\n        {\n            dep[u] = dep[father] + 1;\n            fa[u] = father;\n            size1[u] = 1;\n            for (int i = g.Begin[u]; i != -1; i = g.Next[i])\n            {\n                if (g.to[i] != father)\n                {\n                    weight[g.to[i]] = g.weight[i];\n                    dfs1(g.to[i], u);\n                    size1[u] += size1[g.to[i]];\n                    if (size1[g.to[i]] > size1[son[u]])\n                        son[u] = g.to[i];\n                }\n            }\n        }\n        void dfs2(int u, int topf)\n        {\n            id[u] = ++len;\n            new_weight[len] = weight[u];\n            top[u] = topf;\n            if (son[u] == 0)return;\n            dfs2(son[u], topf);\n            for (int i = g.Begin[u]; i != -1; i = g.Next[i])\n            {\n                if (g.to[i] == fa[u] || g.to[i] == son[u]) continue;\n                dfs2(g.to[i], g.to[i]);\n            }\n        }\n        int find(int u)\n        {\n            return top[u] = top[u] == u ? u : find(top[u]);\n        }\n        int LCA(int u, int v) {\n            if (find(u) != find(v))\n                return dep[top[u]] > dep[top[v]] ? LCA(fa[top[u]], v) : LCA(u, fa[top[v]]);\n            else return dep[u] > dep[v] ? v : u;\n        }\n    }tp;\n}\nusing namespace tree_split1;\npair<int,int> cnt[210000];\nint32_t main()\n{\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(NULL);\n    std::cout.tie(NULL);\n    int n, m,op,a,b,p,c,w;\n    double y;\n    node2* tree = new node2();\n    tree->l = 1;\n    cin >> n >> m;\n    tree->r = n;\n    for (int i = 1; i <= n - 1; ++i)\n    {\n        cin >> a >> b >> w;\n        cnt[i].first=a,cnt[i].second=b;\n        tp.add_edge(a, b,w);\n    }\n    tp.init(1);\n    build(tp.new_weight, tree);\n    while (m--)\n    {\n        cin >> op;\n        if (op == 1)\n        {\n            cin >> a >> b >> y;\n            double L = tp.query2(tree, a, b);\n            if (L == 0)\n                cout << 0 << '\\n';\n            else\n                cout << (int)(y / L) << '\\n';\n        }\n        else\n        {\n            cin >> p >> c;\n            int kk;\n            if (tp.dep[cnt[p].first] > tp.dep[cnt[p].second])\n                kk = cnt[p].first;\n            else\n                kk = cnt[p].second;\n            split(tree, id[kk], id[kk], c);\n        }\n    }\n    return 0;\n}\n```\n",
        "postTime": 1556699086,
        "uid": 154957,
        "name": "qiyue7",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF593D \u3010Happy Tree Party\u3011"
    },
    {
        "content": "\u7b97\u662f\u6811\u5256\u7684\u677f\u5b50\u9898\u4e86\uff0c\u4e0d\u8fc7\u5076\u5c14\u953b\u70bc\u4e00\u4e0b\u7801\u529b\u4e5f\u597d\u3002\n\n### $Solution:$\n\n\u9996\u5148\u6211\u4eec\u9700\u8981\u77e5\u9053\u4e00\u4e2a\u4e1c\u897f\uff1a\n\n$$\\forall a, b, c\\in\\mathbb{Z}, \\left\\lfloor{\\dfrac{\\left\\lfloor\\frac{a}{b}\\right\\rfloor}{c}}\\right\\rfloor=\\left\\lfloor\\dfrac{a}{bc}\\right\\rfloor$$\n\n\u8bc1\u660e\u53ef\u4ee5\u76f4\u63a5\u770b [OI-Wiki](https://oi-wiki.org/math/mobius/) \u4e0a\u7684\uff0c\u8fd9\u91cc\u5c31\u4e0d\u591a\u8bf4\u4e86\u3002\n\n\u77e5\u9053\u8fd9\u4e2a\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u6811\u5256\u6765\u7ef4\u62a4\u8def\u5f84\u4e58\u79ef\uff0c\u6700\u540e\u76f4\u63a5\u4e00\u9664\u5c31\u5b8c\u4e8b\u4e86\u3002\n\n\u53ef\u8fd9\u91cc\u6709\u4e2a\u5f88\u6076\u5fc3\u4eba\u7684\u70b9\uff1a$x_i\\in[1, 10^{18}]$\uff0c\u5982\u679c\u5355\u7eaf\u7684\u4e58\u8d77\u6765\u80af\u5b9a\u4f1a\u7206 `long long`\u3002\n\n\u4f46\u8fd9\u91cc\u7684 $y_i$ \u4e5f\u5728 $[1, 10^{18}]$ \u7684\u8303\u56f4\u4e2d\uff0c\u6240\u4ee5\u5982\u679c\u8fd9\u4e2a\u8def\u5f84\u79ef $\\ge 10^{18}$ \u5176\u5b9e\u7b54\u6848\u5c31\u4e3a $0$ \u4e86\uff0c\u4e5f\u5c31\u8bf4\u660e\u4e0d\u9700\u8981\u7edf\u8ba1\u4e86\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5728\u5f53\u4e58\u79ef\u8d85\u8fc7 $10^{18}$ \u65f6\u76f4\u63a5\u4ee4\u4e58\u79ef\u4e3a\u4e00\u4e2a $> 10^{18}$ \u7684\u6570\u3002\u6700\u540e\u76f4\u63a5\u4e00\u9664\u5c31\u4e3a $0$ \u4e86\u3002\n\n`long long` \u4e58 `long long` \u4f1a\u70b8\uff1f\u7528 `long double` \u5457~\n\n\u4e8e\u662f\u8fd9\u9898\u5c31\u505a\u5b8c\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(m\\log^2 n)$\u3002\n\n\u5982\u679c\u4e0d\u4f1a\u6811\u5256\u7684\u8bdd\u5efa\u8bae\u5148\u53bb\u6a21\u677f\u533a\u5b66\u4e00\u4e0b\u3002\n\n### $Code:$\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <queue>\n#include <vector>\n#include <cmath>\n#include <map>\nusing namespace std;\n#define int long long\n#define pd printf(\"ok\\n\")\n#define x1 x_csyakioi_1\n#define x2 x_csyakioi_2\n#define y1 y_csyakioi_1\n#define y2 y_csyakioi_2\n#define y0 y_csyakioi_0\n#define dingyi int mid = l + r >> 1, ls = p << 1, rs = p << 1 | 1\ninline int read(){\n\tint x = 0, f = 1; char ch = getchar();\n\twhile(ch < '0' || ch > '9'){ if(ch == '-') f = -1; ch = getchar(); }\n\twhile(ch >= '0' && ch <= '9'){ x = x * 10 + (ch ^ 48); ch = getchar(); }\n\treturn x * f;\n}\nconst int N = 200010;\nstruct edge{\n\tint v, w, nxt;\n}e[N << 1];\nint head[N], cnt, n, m, opt, x, y, z, U[N], V[N], W[N], dep[N], siz[N], fa[N], top[N], son[N], seg[N], rev[N], a[N], d[N << 2];\ninline void Add(int u, int v, int w){\n\te[++cnt].v = v;\n\te[cnt].w = w;\n\te[cnt].nxt = head[u];\n\thead[u] = cnt;\n}\ninline void dfs1(int u, int f){\n\tdep[u] = dep[f] + 1;\n\tfa[u] = f;\n\tsiz[u] = 1;\n\tfor(int i = head[u]; i; i = e[i].nxt){\n\t\tint v = e[i].v;\n\t\tif(v == f) continue;\n\t\ta[v] = e[i].w;\n\t\tdfs1(v, u);\n\t\tsiz[u] += siz[v];\n\t\tif(siz[v] > siz[son[u]]) son[u] = v;\n\t}\n}\ninline void dfs2(int u, int f){\n\tseg[u] = ++seg[0]; rev[seg[u]] = a[u];\n\ttop[u] = f;\n\tif(!son[u]) return;\n\tdfs2(son[u], f);\n\tfor(int i = head[u]; i; i = e[i].nxt){\n\t\tint v = e[i].v;\n\t\tif(v == fa[u] || v == son[u]) continue;\n\t\tdfs2(v, v);\n\t}\n}//\u4ee5\u4e0a\u4e3a\u9884\u5904\u7406\ninline int add(int x, int y){\n\tif((long double)x * (long double)y > 1e18) return 1e18 + 10000;\n\treturn x * y;\n}//\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\ninline void pushup(int p){ d[p] = add(d[p << 1], d[p << 1 | 1]); }\ninline void build(int p, int l, int r){\n\tif(l == r){ d[p] = rev[l]; return; }\n\tdingyi;\n\tbuild(ls, l, mid);\n\tbuild(rs, mid + 1, r);\n\tpushup(p);\n}\ninline void change(int p, int l, int r, int x, int y){\n\tif(l == r){ d[p] = y; return; } dingyi;\n\tif(x <= mid) change(ls, l, mid, x, y);\n\telse change(rs, mid + 1, r, x, y);\n\tpushup(p);\n}\ninline int query(int p, int l, int r, int x, int y){\n\tif(x <= l && r <= y) return d[p]; dingyi; int ans = 1;\n\tif(x <= mid) ans = add(ans, query(ls, l, mid, x, y));\n\tif(y > mid) ans = add(ans, query(rs, mid + 1, r, x, y));\n\treturn ans;\n}\ninline int Query(int x, int y){\n\tint ans = 1, fx = top[x], fy = top[y];\n\twhile(fx != fy){\n\t\tif(dep[fx] < dep[fy]) swap(x, y), swap(fx, fy);\n\t\tans = add(ans, query(1, 1, n, seg[fx], seg[x]));\n\t\tx = fa[fx]; fx = top[x];\n\t}\n\tif(dep[x] > dep[y]) swap(x, y);\n\tif(x != y) ans = add(ans, query(1, 1, n, seg[x] + 1, seg[y]));//\u8fd9\u91cc\u6ce8\u610f\u7279\u5224\n\treturn ans;\n}\nsigned main(){\n\tn = read(); m = read();\n\tfor(int i = 1; i < n; ++i){\n\t\tU[i] = read(); V[i] = read(); W[i] = read();\n\t\tAdd(U[i], V[i], W[i]); Add(V[i], U[i], W[i]);\n\t}\n\tdfs1(1, 0); dfs2(1, 1); build(1, 1, n);\n\tfor(int i = 1; i <= m; ++i){\n\t\topt = read(); x = read(); y = read();\n\t\tif(opt == 1){\n\t\t\tz = read();\n\t\t\tint ans = Query(x, y);\n\t\t\tprintf(\"%lld\\n\", z / ans);\n\t\t}\n\t\telse{\n\t\t\tint u = U[x], v = V[x];\n\t\t\tif(fa[u] == v) swap(u, v);\n\t\t\tchange(1, 1, n, seg[v], y);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1603267700,
        "uid": 147999,
        "name": "Warriors_Cat",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF593D \u3010Happy Tree Party\u3011"
    },
    {
        "content": "# CF593D \u3010Happy Tree Party\u3011\n[$\\large{\\color{pink}{My\\ Blog}}$](https://chen-jia-liang.gitee.io/blog/2020/09/21/%E9%A2%98%E8%A7%A3-CF593D-%E3%80%90Happy-Tree-Party%E3%80%91/)\n## \u9898\u610f\n\n\u7ed9\u51fa\u4e00\u68f5\u6811\uff0c$\\operatorname{zici}$\u4e00\u4e0b\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n1. \u628a\u7b2c$p$\u6761\u8fb9\u6539\u6210$c$\n2. \u8be2\u95ee\u4ece$a\\to b$\u7684\u7b80\u5355\u8def\u5f84\uff0c\u6bcf\u6b21\u7ecf\u8fc7\u4e00\u6761\u8fb9$(u_i,v_i,w_i)$\uff0c\u5c31\u628a$c$\u53d8\u6210$\\lfloor\\dfrac c {w_i} \\rfloor$\n\n## \u9898\u89e3\n\u5f15\u7406\uff08\u9003\n\n$$\\lfloor \\dfrac{\\lfloor\\frac{x}{a}\\rfloor}{b}\\rfloor=\\lfloor\\frac x{ab}\\rfloor$$\n\n\u63a8\u8bba\uff1a\n\n$$\\lfloor\\dfrac{\\lfloor\\frac{\\lfloor\\frac{x}{a_1}\\rfloor}{\\dots}\\rfloor}{a_n}\\rfloor=\\lfloor\\frac{x}{\\prod_{i=1}^na_i}\\rfloor$$\n\n\u4e8e\u662f\u8fd9\u9898\u5c31\u53d8\u6210\u4e86\u4e86\u4e00\u4e2a\u4e00\u773c\u9898\uff08\n\n\u849f\u84bb\uff08\u6ca1\u9519\u5c31\u662f\u6211\uff09\uff1a\u6211\u4f1a\u7528\u6811\u5256+\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7b80\u5355\u8def\u5f84\u4e0a\u7684\u4e58\u79ef\uff01\u4e8e\u662f\u7528`long long`\u5b58\u50a8\u4e00\u6bb5\u7684\u4e58\u79ef\uff0c\u5feb\u5feb\u4e50\u4e50\u5730\u62b1\u7075\u4e86\u3002\n\n\u6211\u4eec\u6765\u8003\u8651\u4e0a\u8ff0\u7b97\u6cd5\u5b58\u5728\u7684\u95ee\u9898\uff1a\n\n> $2\\le n\\le200000,1\\le m\\le200000$\n\n> $1\\le u_i,v_i\\le n,u_i\\ne v_i,1\\le x_i \\le 10^{18}$\n\n> $1\\le p_i\\le n-1,1\\le y_i\\le10^{18}$\n\n$10^{18}$\u7684$200000$\u6b21\u8fbe\u5230\u4e86$10^{3600000}$\u6b21\uff0c\u600e\u4e48\u53ef\u80fd\u5b58\u7684\u4e0b\u5440\n\n\u4f46\u662f\uff0c\u56e0\u4e3a$x_i\\le 10^{18}$\uff0c\u56e0\u6b64\u5927\u4e8e$10^{18}$\u7684\u6570\u5b57\u4e8b\u5b9e\u4e0a\u90fd\u662f\u6ca1\u7528\u7684\uff0c\u56e0\u4e3a\u82e5$\\prod a_i>10^{18}$\uff0c\u7b54\u6848\u5fc5\u7136\u662f\u96f6\n\n\u4e8e\u662f\u6211\u4eec\u628a\u4ee3\u7801\u4e2d\u7684`long long`\u6539\u6210`mylong`\u5c31\u53ef\u4ee5$\\color{green}{\\operatorname{Accepted}}$\u672c\u9898\u4e86\n\n\u4e0b\u9762\u7ed9\u51fa`my_long`\u7684\u5177\u4f53\u5b9e\u73b0\uff1a\n\n```cpp\nstruct mylong{\n\tlong long num;\n\tvoid operator=(long long b){\n\t\tnum=b;\n\t}\n\tmylong operator+(mylong b){\n\t\tmylong c;\n\t\tif(log10(b.num)+log10(num)>18.1)\n\t\t\tc=2e18;\n\t\telse c=b.num*num;\n\t\treturn c; \n\t}\n};\n```\n\u7531\u4e8e$10^{18}\\times10^{18}$\u8fd8\u662f\u4f1a\u7206`long long`\u8fd9\u91cc\u7528`log`\u6765\u5224\u65ad\uff1a\n\n$$a\\times b\\le10^{18}$$\n\n$$log_{10}a+log_{10}b\\le18$$\n## \u4ee3\u7801\n\n~~\u90fd\u8bf4\u5230\u8fd9\u4e86\u4ee3\u7801\u5e94\u8be5\u5f88\u7b80\u5355\u5427~~\n\n```cpp\n#include<bits/stdc++.h>\nnamespace in{\n\tchar buf[1<<21],*p1=buf,*p2=buf;\n\tinline int getc(){\n\t    return p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++;\n\t}\n\ttemplate <typename T>inline void read(T& t){\n\t    t=0;int f=0;char ch=getc();\n\t    while (!isdigit(ch)){\n\t        if(ch=='-')f = 1;\n\t        ch=getc();\n\t    }\n\t    while(isdigit(ch)){\n   \t    \tt=t*10+ch-48;\n   \t    \tch = getc();\n   \t\t}\n\t\tif(f)t=-t;\n\t}\n\ttemplate <typename T,typename... Args> inline void read(T& t, Args&... args){\n\t    read(t);read(args...);\n\t}\n}\nnamespace out{\n\tchar buffer[1<<21];\n\tint p1=-1;\n\tconst int p2 = (1<<21)-1;\n\tinline void flush() {\n\t\tfwrite(buffer,1,p1+1,stdout),\n\t\tp1=-1;\n\t}\n\tinline void putc(const char &x) {\n\t\tif(p1==p2)flush();\n\t\tbuffer[++p1]=x;\n\t}\n\ttemplate <typename T>void write(T x) {\n\t\tstatic char buf[35];\n\t\tstatic int len=-1;\n\t\tif(x>=0){\n\t\t\tdo{\n    \t\t\tbuf[++len]=x%10+48,x/=10;\n    \t\t}while (x);\n\t\t}else{\n    \t\tputc('-');\n\t\t\tdo {\n    \t\t\tbuf[++len]=-(x%10)+48,x/=10;\n\t\t\t}while(x);\n\t\t}\n\t\twhile (len>=0)\n\t\t\tputc(buf[len]),--len;\n\t}\n}\nusing namespace std;\nint n,m;\nstruct mylong{\n\tlong long num;\n\tvoid operator=(long long b){\n\t\tnum=b;\n\t}\n\tmylong operator+(mylong b){\n\t\tmylong c;\n\t\tif(log10(b.num)+log10(num)>18.1)\n\t\t\tc=2e18;\n\t\telse c=b.num*num;\n\t\treturn c; \n\t}\n};\nconst int N=200000+100;\ntemplate<class A,class B>\nstruct SGT{\n\tB a[N];//\u521d\u59cb\u6570\u7ec4 \n\tstruct node{\n\t\tint l,r;\n\t\tA val;\n\t}T[N*4];\n\tB* operator[](const int x){return a+x;}\n\tvoid build(int x,int l,int r){\n\t\tT[x].l=l,T[x].r=r;\n\t\tif(l==r){\n\t\t\tT[x].val=a[l];\n\t\t\treturn;\n\t\t}\n\t\tint mid=l+r>>1;\n\t\tbuild(x<<1,l,mid);\n\t\tbuild(x<<1|1,mid+1,r);\n\t\tT[x].val=T[x<<1].val+T[x<<1|1].val;\n\t}\n\tvoid change(int x,int pos,B val){\n\t\tif(T[x].r==T[x].l){\n\t\t\tT[x].val=val;\n\t\t\treturn;\n\t\t}\n\t\tint mid=T[x].l+T[x].r>>1;\n\t\tif(pos<=mid)change(x<<1,pos,val);\n\t\telse change(x<<1|1,pos,val);\n\t\tT[x].val=T[x<<1].val+T[x<<1|1].val;\n\t}\n\tA query(int x,int l,int r){\n\t\tif(l<=T[x].l&&T[x].r<=r)return T[x].val;\n\t\tint mid=T[x].l+T[x].r>>1;\n\t\tif(r<=mid)\n\t\t\treturn query(x<<1,l,r);\n\t\tif(l>mid)\n\t\t\treturn query(x<<1|1,l,r);\n\t\treturn query(x<<1,l,r)+query(x<<1|1,l,r);\n\t}\n};\nSGT<mylong,long long>T;\nvector<int>e[N];\nint fath[N];\nint deep[N];\nint size[N];\nint dfn[N];\nint top[N];\nint cnt;\nvoid dfs1(int u){\n\tsize[u]=1;\n\tfor(auto v:e[u])\n\t\tif(v!=fath[u])\n\t\t\tfath[v]=u,\n\t\t\tdeep[v]=deep[u]+1,\n\t\t\tdfs1(v),\n\t\t\tsize[u]+=size[v];\n}\nvoid dfs2(int u){\n\tif(!fath[u])top[u]=u;\n\tdfn[u]=++cnt;\n\tint mx=-1,son;\n\tfor(auto v:e[u])\n\t\tif(v!=fath[u])\n\t\t\tif(size[v]>mx)\n\t\t\t\tmx=size[v],\n\t\t\t\tson=v;\n\tif(mx==-1)return;\n\ttop[son]=top[u];dfs2(son);\n\tfor(auto v:e[u])\n\t\tif(v!=fath[u]&&v!=son)\n\t\t\ttop[v]=v,\n\t\t\tdfs2(v);\n}\nstruct node{int u,v,id;long long w;}E[N];\nsigned main(){\n\tin::read(n,m);\n\tfor(int i=1;i<n;i++)\n\t\tin::read(E[i].u,E[i].v,E[i].w),\n\t\te[E[i].u].push_back(E[i].v),\n\t\te[E[i].v].push_back(E[i].u);\n\tdfs1(1);dfs2(1);\n\tfor(int i=1;i<n;i++)\n\t\tif(fath[E[i].u]==E[i].v)E[i].id=dfn[E[i].u];\n\t\telse E[i].id=dfn[E[i].v];\n\tfor(int i=1;i<n;i++)*T[E[i].id]=E[i].w;\n\tT.build(1,1,n);\n\twhile(m--){\n\t\tint opt,x,y,p;\n\t\tlong long c;\n\t\tin::read(opt);\n\t\tif(opt==1){\n\t\t\tin::read(x,y,c);\n\t\t\tmylong ans;ans=1;\n            while(top[x] != top[y]){\n                if(deep[top[x]]<deep[top[y]]) swap(x, y);\n                ans=ans+T.query(1,dfn[top[x]],dfn[x]);\n                x=fath[top[x]];\n            }\n            if(deep[x]>deep[y])swap(x,y);\n            if(dfn[x]!=dfn[y])ans=ans+T.query(1,dfn[x]+1,dfn[y]);\n            out::write(c/ans.num);\n            out::putc('\\n');\n\t\t}\n\t\telse if(opt==2){\n\t\t\tin::read(p,c);\n\t\t\tT.change(1,E[p].id,c);\n\t\t}\n\t}\n\tout::flush();\n\treturn 0;\n}\n```",
        "postTime": 1600698726,
        "uid": 174304,
        "name": "jun\u5934\u5409\u5409",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF593D \u3010Happy Tree Party\u3011"
    },
    {
        "content": "## CF593D Happy Tree Party\n\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF593D)\n\n### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u8fb9\u5e26\u6743\u3002\n\n\u64cd\u4f5c1\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6570  $y_i$ \uff0c\u7136\u540e\u4ece $a_i$ \u8d70\u5230 $b_i$\uff0c\u6bcf\u7ecf\u8fc7\u4e00\u6761\u8fb9\u90fd\u8ba9 $y_i=\\lfloor \\frac{y_i}{x_i}  \\rfloor$ \u3002\u8f93\u51fa\u6700\u540e\u7684 $y_i$ \u3002\n\n\u64cd\u4f5c2\uff1a\u9009\u62e9\u7b2c j \u6761\u8fb9\uff0c\u5c06\u4ed6\u7684\u8fb9\u6743 $x_i$ \u6539\u4e3a $c_i \\in [1,v_i]$ \u3002\n\n### solution\n\n1. \u5bf9\u4e8e\u8def\u5f84\u7ef4\u62a4\uff0c\u5c31\u60f3\u5230\u7528\u6811\u5256\uff0c\u7531\u4e8e\u6ca1\u6709\u7ed9\u6839\uff0c\u56e0\u6b64\u76f4\u63a5\u62ff 1 \u5f53\u6839\u5c31\u884c~~\u4e5f\u53ef\u80fd\u662f\u6211\u592a\u83dc\u4e86\uff0c\u5176\u4ed6\u7684\u4e0d\u4f1a~~ \u3002\n\n2. \u4e00\u822c\u7684\u6811\u5256\u90fd\u662f\u70b9\u5e26\u6743\uff0c\u800c\u8fd9\u91cc\u662f\u8fb9\u5e26\u6743\uff0c\u90a3\u4e48\u5c31\u628a\u7236\u4eb2\u8282\u70b9\u8fde\u5230\u5b50\u8282\u70b9\u7684\u8fb9\u6743\u5b58\u5728\u5b50\u8282\u70b9\u5c31\u884c\u4e86\u3002\n\n3. \u8003\u8651\u64cd\u4f5c1\uff0c\u8fd9\u4e2a\u5411\u4e0b\u53d6\u6574\u662f\u4e0d\u662f\u5f88\u70e6\uff0c\u5982\u679c\u6211\u4eec\u6bcf\u6b21\u64cd\u4f5c 1 \u90fd\u9700\u8981\u904d\u5386\u6bcf\u4e2a\u70b9\u662f\u4e0d\u662f\u4f1a\u70b8\u6389\uff0c\u5f88\u81ea\u7136\u7684\u4f1a\u60f3\u5230\u5982\u679c\u80fd\u76f4\u63a5\u9664\u4ee5\u8fb9\u6743\u4e4b\u79ef\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u79ef\u4e86\uff0c\u5bf9\u5427\uff0c\u56e0\u6b64\u6211\u4eec\u8fd9\u91cc\u6765\u8bc1\u660e\u4e00\u4e0b $\\lfloor \\frac{y}{x_1*x_2} \\rfloor=\\lfloor \\frac{\\lfloor \\frac{y}{x_1} \\rfloor}{x_2} \\rfloor$ \u3002\n\n   \u8bbe $y=a*x1+b (a \\in N,b \\in [0,x_1) )$\uff0c\n\n   \u56e0\u6b64$\\lfloor \\frac{\\lfloor \\frac{y}{x_1} \\rfloor}{x_2} \\rfloor = \\lfloor \\frac{a}{x2} \\rfloor$\n\n   \u518d\u8bbe $a=c*x2+d(c \\in N,d \\in [0,x2))$\n\n   \u56e0\u6b64$ \\lfloor \\frac{\\lfloor \\frac{y}{x_1} \\rfloor}{x_2} \\rfloor=c$ \u3002\n\n   \u5c06 c \u548c d \u4ee3\u5165\u53ef\u5f97 $y=c*x_1*x_2+d*x1+b$\u3002\n\n   \u56e0\u4e3a $d<x2,b<x1$\uff0c\u6240\u4ee5 $\\lfloor \\frac{y}{x_1*x_2} \\rfloor=c$\u3002\n\n   \u56e0\u6b64 $\\lfloor \\frac{y}{x_1*x_2} \\rfloor=\\lfloor \\frac{\\lfloor \\frac{y}{x_1} \\rfloor}{x_2} \\rfloor$\n\n   \u8bc1\u660e\u6210\u529f\uff0cnice\u3002\n\n4. \u6570\u636e\u6bd2\u7624\uff0c$x_i<=1e18$\uff0c\u56e0\u6b64\u4e58\u8d77\u6765\u4f1a\u70b8 long long\uff0c\u4f46\u662f $y<=1e18$\uff0c\u56e0\u6b64 \u5982\u679c\u4e58\u8d77\u6765\u5927\u4e8e 1e18\uff0c\u5c31\u6253\u4e00\u4e2a\u6807\u8bb0\uff0c\u800c\u6211\u6253\u7684\u6807\u8bb0\u662f\u5c06\u8fd9\u4e2a\u6570\u53d8\u6210\u8d1f\u6570\uff0c\u7136\u540e\u8fd8\u6709\u4e00\u4e2a\u795e\u5947\u7684\u65b9\u6cd5\u5224\u65ad\u8fd9\u4e2a\u6570\u662f\u5426\u5927\u4e8e 1e18 \uff0c\u5c31\u662f\u7528 long double\u3002\n\n   ```cpp\n   long long a,b;\n   long long inf=1e18;\n   if((long double(a)*(long double)(b)>inf))return -1;\n   ```\n\n   AC \u4ee3\u7801\uff1a\n\n   ```cpp\n   #include<iostream>\n   #include<stdio.h>\n   #define int long long\n   using namespace std;\n   int read()\n   {\n   \tint x=0,f=1;\n   \tchar c=getchar();\n   \twhile(c<'0'||c>'9'){\n   \t\tif(c=='-')f=-1;\n   \t\tc=getchar();\n   \t}\n   \twhile(c>='0'&&c<='9')x=(x<<3)+(x<<1)+f*(c-'0'),c=getchar();\n   \treturn x;\n   }\n   const int MAXN=2*1e5+10,inf=1e18;\n   int n,m,root;\n   int u[MAXN*2],v[MAXN*2],first[MAXN],net[MAXN*2],val[MAXN*2];\n   int uu[MAXN],vv[MAXN];\n   int dep[MAXN],value[MAXN],son[MAXN],fa[MAXN],size[MAXN],top[MAXN];\n   int dfn[MAXN],a[MAXN];\n   int shu[MAXN*4];\n   void ycl()\n   {\n   \tfor(int i=1;i<=n;i++)\n   \tfirst[i]=0; \n   }\n   int cnt;\n   void add(int x,int y,int z)\n   {\n   \tcnt++;\n   \tu[cnt]=x;\n   \tv[cnt]=y;\n   \tval[cnt]=z;\n   \tnet[cnt]=first[x];\n   \tfirst[x]=cnt;\n   }\n   void dfs1(int x)\n   {\n   \tson[x]=-1;\n   \tsize[x]=1;\n   \tfor(int i=first[x];i;i=net[i])\n   \t{\n   \t\tif(dep[v[i]])continue;\n   \t\tfa[v[i]]=x;\n   \t\tvalue[v[i]]=val[i];\n   \t\tdep[v[i]]=dep[x]+1;\n   \t\tuu[(i-1)/2+1]=u[i];//\u7531\u4e8e\u4e00\u5f00\u59cb\u5b58\u7684\u662f\u53cc\u5411\u8fb9\uff0c\u4f46\u8be2\u95ee\u8981\u67e5\u8be2\uff0c\u7b2cj\u6761\u8fb9\uff0c\u7531\u4e8e\u6211\u628a\u8fb9\u6743\u5b58\u5728\u4e86\u5b50\u8282\u70b9\uff0c\u8fb9\u7684\u65b9\u5411\u548c\u9898\u76ee\u6240\u7ed9\u7684\u53ef\u80fd\u4e0d\u4e00\u6837\uff0c\u56e0\u6b64\u91cd\u65b0\u52a0\u8fb9\u3002\n   \t\tvv[(i-1)/2+1]=v[i];\n   \t\tdfs1(v[i]);\n   \t\tsize[x]+=size[v[i]];\n   \t\tif(son[x]==-1||size[son[x]]<size[v[i]])son[x]=v[i];\n   \t}\n   }\n   int tot=0;\n   void dfs2(int x,int y)\n   {\n   \ttop[x]=y;\n   \ttot++;\n   \tdfn[x]=tot;\n   \ta[tot]=x;\n   \tif(son[x]==-1)return ;\n   \tdfs2(son[x],y);\n   \tfor(int i=first[x];i;i=net[i])\n   \tif(v[i]!=son[x]&&v[i]!=fa[x])dfs2(v[i],v[i]);\n   }//\u6811\u5256\u6a21\u677f\n   void update(int x)\n   {\n   \tif(shu[x*2]<0||shu[x*2+1]<0||(long double)shu[x*2]*(long double)shu[x*2+1]>inf)\n   \t{\n   \t\tshu[x]=-1;\n   \t\treturn ; //\u5224\u65ad\u662f\u5426\u5927\u4e8e1e18\n   \t}\n   \tshu[x]=shu[x*2]*shu[x*2+1];\n   }\n   void build(int now,int l,int r)\n   {\n   \tif(l==r)\n   \t{\n   \t\tshu[now]=value[a[l]];\n   \t\treturn ;\n   \t}\n   \tint mid=(l+r)>>1;\n   \tbuild(now*2,l,mid);\n   \tbuild(now*2+1,mid+1,r);\n   \tupdate(now);\n   }\n   void change(int now,int l,int r,int x,int y)\n   {\n   \tif(l==r)\n   \t{\n   \t\tshu[now]=y;\n   \t\treturn ;\n   \t}\n   \tint mid=(l+r)>>1;\n   \tif(x<=mid)change(now*2,l,mid,x,y);\n   \telse change(now*2+1,mid+1,r,x,y);\n   \tupdate(now);\n   }\n   int query2(int now,int l,int r,int x,int y)\n   {\n   \tif(l>=x&&r<=y)\n   \t{\n   \t\treturn shu[now];\n   \t}\n   \tint mid=(l+r)>>1;\n   \tint ans1=1,ans2=1;\n   \tif(mid>=x)ans1*=query2(now*2,l,mid,x,y);\n   \tif(ans1<0)return -1;\n   \tif(mid+1<=y)ans2*=query2(now*2+1,mid+1,r,x,y);\n   \tif(ans2<0)return -1;\n   \tif((long double)ans1*(long double)ans2>inf)return -1;//\u5927\u4e8e1e18\u5c31\u8fd4\u56de\u8d1f\u6570\n   \treturn ans1*ans2; \n   }\n   int  query(int x,int y,int c)\n   {\n   \twhile(top[x]!=top[y])\n   \t{\n   \t\tif(dep[top[x]]<dep[top[y]])swap(x,y);\n   \t\tint z;\n   \t\tz=query2(1,1,n,dfn[top[x]],dfn[x]);\n   \t\tif(z<0||c==0){//\u5982\u679c\u9664\u6570\u7684\u79ef\u5df2\u7ecf\u5927\u4e8e1e18\uff0c\u90a3\u4e48\u7b54\u6848\u4e00\u5b9a\u4e3a0.\n   \t\t\treturn 0;\n   \t\t}\n   \t\telse c/=z;\n   \t\tx=fa[top[x]];\n   \t}\n   \tif(dfn[x]>dfn[y])swap(x,y);\n   \tint z=query2(1,1,n,dfn[x]+1,dfn[y]);\n   \tif(z<0)return 0;\n   \telse return c/z; \n   }\n   signed main()\n   {\n   \tn=read();\n   \tm=read();\n   \tycl();\n   \tfor(int i=1;i<=n-1;i++)\n   \t{\n   \t\tint x,y,z;\n   \t\tx=read();\n   \t\ty=read();\n   \t\tz=read();\n   \t\tadd(x,y,z);\n   \t\tadd(y,x,z);\n   \t}\n   \troot=1;\n   \tdep[root]=1;\n   \tdfs1(root);\n   \tdfs2(root,root);\n   \tbuild(1,1,n);\n   \tfor(int i=1;i<=m;i++)\n   \t{\n   \t\tint opt;\n   \t\topt=read();\n   \t\tif(opt==1)\n   \t\t{\n   \t\t\tint x,y,z;\n   \t\t\tx=read();\n   \t\t\ty=read();\n   \t\t\tz=read();\n   \t\t\tprintf(\"%lld\\n\",query(x,y,z));\n   \t\t}\n   \t\telse {\n   \t\t\tint p,c;\n   \t\t\tp=read();\n   \t\t\tc=read();\n   \t\t\tchange(1,1,n,dfn[vv[p]],c);\n   \t\t}\n   \t}\n    \treturn 0;\n   }\n   ```",
        "postTime": 1614603531,
        "uid": 177604,
        "name": "LXH5514",
        "ccfLevel": 7,
        "title": "\u9898\u89e3CF593D Happy Tree Party"
    },
    {
        "content": "# \u9898\u76ee\n\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF593D)\n\n# \u9898\u89e3\n\n\u601d\u7ef4\u597d\u9898.\n\n\u5fc5\u987b\u660e\u767d\uff0c\u4e00\u4e2a\u6570 $x(x\\le 10^{18})$ \u5728\u53cd\u590d\u6267\u884c\u9664\u4ee5\u67d0\u4e2a\u6570\u4e0b\u53d6\u6574\uff0c\u5373\u53cd\u590d $x=\\lfloor \\frac{x}{t} \\rfloor(t\\ge 2)$ \u8d85\u8fc7 $60$ \u6b21\u4e4b\u540e\u5fc5\u5b9a\u4e3a $0$\uff0c\u56e0\u4e3a $\\log _210^{18}<60$\uff0c\u6240\u4ee5\uff0c\u5982\u679c\u53bb\u9664\u90a3\u4e9b\u8fb9\u6743\u4e3a $1$ \u7684\u8fb9\uff0c\u6211\u4eec\u6700\u591a\u4f7f\u7528\u66b4\u529b\u722c\u5c71\u6cd5 $60$ \u6b21\uff0c\u8fd9\u4e2a $x$ \u5c31\u4f1a\u53d8\u6210 $0$\uff0c\u800c\u9898\u76ee\u4e2d\u53c8\u6709\u4e00\u4e2a\u8fb9\u6743\u503c\u53d8\u5316\u662f\u5177\u6709\u7279\u6b8a\u6027\u7684\uff0c\u5373\u53d8\u5316\u8303\u56f4\u5728 $[1,x_{p_i}]$\uff0c\u8bf4\u660e\u4e00\u6761\u8fb9\u53ea\u4f1a\u5f80\u5c0f\u53d8\uff0c\u5e76\u4e14\u5728\u8fb9\u6743\u4e3a $1$ \u4e4b\u540e\u4e0d\u4f1a\u518d\u53d8\u56de\u6765\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7528\u7c7b\u4f3c\u5e76\u67e5\u96c6\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5c06\u90a3\u4e9b\u8fb9\u6743\u4e3a $1$ \u7684\u8fb9\u8df3\u8fc7\u4e0d\u7b97\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u6211\u4eec\u66b4\u529b\u722c\u5c71\u53ea\u4f1a\u6267\u884c\u6700\u591a $60$ \u6b21\uff0c\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(60m+\\alpha m)$\uff0c\u5e76\u67e5\u96c6\u7684\u53cd\u963f\u514b\u66fc\u4e0d\u80fd\u5fd8\u8bb0\u3002\n\n# \u4ee3\u7801\n\n```cpp\nhttps://www.cnblogs.com/Arextre/p/13553809.html\n```\n\n",
        "postTime": 1598251554,
        "uid": 125355,
        "name": "Vladilena",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF593D \u3010Happy Tree Party\u3011"
    },
    {
        "content": "### \u9898\u610f\n\n\u7ed9\u4e00\u68f5 $n$ \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u6709 $m$ \u4e2a\u64cd\u4f5c\uff0c\u4e00\u5171\u6709\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n- $1\\ x\\ y\\ c$ \u8868\u793a\u5728 $x$ \u5230 $y$ \u7684\u8def\u5f84\u4e0a\uff0c\u6bcf\u6b21\u8ba9 $c \\leftarrow \\left\\lfloor\\dfrac{c}{w}\\right\\rfloor$ \uff0c\u5176\u4e2d $w$ \u8868\u793a\u8fb9\u6743\uff0c\u8be2\u95ee\u6700\u540e $c$ \u7684\u503c\u3002\n  \n- $2\\ x\\ c$ \u8868\u793a\u628a\u7b2c $x$ \u6761\u8fb9\u7684\u6743\u503c\u6539\u4e3a $c$ \u3002\n  \n\n### \u5206\u6790\n\n\u663e\u7136\u80fd\u770b\u51fa\u53ef\u4ee5\u7528\u6811\u5256\u3002\u5bb9\u6613\u60f3\u5230\uff0c\u64cd\u4f5c\u4e00\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u8ba9 $c$ \u9664\u4ee5\u533a\u95f4\u91cc\u7684\u6bcf\u4e00\u4e2a\u6570\u5373\u53ef\u3002\u64cd\u4f5c\u4e8c\u5c31\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5355\u70b9\u4fee\u6539\u3002\u4f46\u662f\u64cd\u4f5c\u7684\u90fd\u662f\u8fb9\u6743\uff0c\u56e0\u6b64\u53ef\u4ee5\u628a\u8fb9\u6743\u90fd\u5411\u4e0b\u63a8\u5230\u70b9\u6743\u4e0a\uff0c\u5982\u56fe\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/82pzroxb.png)\n\n\u7136\u540e\u91cd\u94fe\u5256\u5206\u4e00\u4e0b\uff0cquery \u7684\u65f6\u5019\u6bcf\u6b21\u628a\u91cd\u94fe\u9876\u6df1\u5ea6\u66f4\u5927\u7684\u5411\u4e0a\u8df3\u5230\u91cd\u94fe\u9876\uff0c\u8ba9 $c$ \u9664\u4ee5\u94fe\u4e0a\u7684\u6bcf\u4e00\u4e2a\u70b9\u3002\u6700\u540e\u5728\u5904\u7406\u4e00\u4e0b\u5269\u4f59\u90e8\u5206\u5373\u53ef\u3002\u540c\u65f6\u8fd8\u8981\u6ce8\u610f\u4e00\u4e9b\u7ec6\u8282\uff0c\u56e0\u4e3a long long \u4e58 long long \u53ef\u80fd\u4f1a\u70b8\uff0c\u56e0\u6b64\u5f00 long double,\u53e6\u5916\u9664\u7684\u65f6\u5019\u5224\u4e00\u4e0b\u9664\u6570\u4e3a0\u7684\u60c5\u51b5\uff0c\u4e0d\u7136\u53ef\u80fd\u4f1a RE\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\n#define mem(a,b) memset(a,b,sizeof(a))\nusing namespace std;\ntypedef long double ll;\ntypedef unsigned long long ull;\ntypedef pair<int,int> Pair;\nconst int inf=2139062143;\ninline void qread(){}template<class T1,class ...T2>\ninline void qread(T1 &a,T2&... b)\n{\n    register T1 x=0;register bool f=false;char ch=getchar();\n    while(ch<'0') f|=(ch=='-'),ch=getchar();\n    while(ch>='0') x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\n    x=(f?-x:x);a=x;qread(b...);\n}\ntemplate<class T> T qmax(T x,T y){return x>y?x:y;}\ntemplate<class T,class ...Arg> T qmax(T x,T y,Arg ...arg){return qmax(x>y?x:y,arg...);}\ntemplate<class T> T qmin(T x,T y){return x<y?x:y;}\ntemplate<class T,class ...Arg> T qmin(T x,T y,Arg ...arg){return qmin(x<y?x:y,arg...);}\nconst int MAXN=2e5+7;\nint n,m,hson[MAXN],fa[MAXN],cnt[MAXN],dep[MAXN],top[MAXN],id[MAXN],tot,a[MAXN],val[MAXN];\nvector<Pair>Tree[MAXN];int c;\nnamespace Seg_tree\n{\n    const int MX=8000007;\n    ll tree[MX];\n    inline int ls(int p){return p<<1;}\n    inline int rs(int p){return p<<1|1;}\n    inline void push_up(int p){tree[p]=tree[ls(p)]*tree[rs(p)];}\n    void build(int a[],int p,int l,int r)\n    {\n        if(l==r) tree[p]=(long double)(a[l]);\n        else\n        {\n            int mid=(l+r)>>1;\n            build(a,ls(p),l,mid);\n            build(a,rs(p),mid+1,r);\n            push_up(p);\n        }\n    }\n    void update(int p,int l,int r,int pos,ll k)\n    {\n        if(l==r) tree[p]=k;\n        else\n        {\n            int mid=(l+r)>>1;\n            if(mid>=pos) update(ls(p),l,mid,pos,k);\n            else update(rs(p),mid+1,r,pos,k);\n            push_up(p);\n        }\n    }\n    void query(int p,int l,int r,int L,int R)\n    {\n        if(!c) return; // \u5982\u679cc\u5df2\u7ecf\u662f0\u4e86\uff0c\u518d\u600e\u4e48\u9664\u8fd8\u662f0\n        if(L<=l&&r<=R) \n        {\n            if(!tree[p]) c=0; // \u7279\u5224\u9664\u6570\u4e3a0\u7684\u60c5\u51b5\n            else c/=tree[p];\n        }\n        else\n        {\n            int mid=(l+r)>>1;\n            if(L<=mid) query(ls(p),l,mid,L,R);\n            if(R>mid) query(rs(p),mid+1,r,L,R);\n        }\n    }\n}\nusing namespace Seg_tree;\nvoid dfs(int u,int f)\n{\n    cnt[u]=1;\n    for(auto son:Tree[u])\n    {\n        if(son.first==f) continue;\n        dep[son.first]=dep[u]+1;fa[son.first]=u;\n        dfs(son.first,u);cnt[u]+=cnt[son.first];\n        if(cnt[son.first]>cnt[hson[u]]) hson[u]=son.first;\n    }\n}\nvoid dfs1(int u,int f,int t)\n{\n    id[u]=++tot;a[tot]=val[u];top[u]=t;\n    if(hson[u]) dfs1(hson[u],u,t);\n    for(auto son:Tree[u]) if(son.first!=hson[u]&&son.first!=f) dfs1(son.first,u,son.first);\n}\nvoid query_chain(int x,int y)\n{\n    int fx=top[x],fy=top[y];\n    while(fx!=fy)\n    {\n        if(dep[fx]<dep[fy]) swap(fx,fy),swap(x,y); // \u8df3\u91cd\u94fe\u9876\u66f4\u6df1\u7684\n        if(!c) return;\n        query(1,1,n,id[fx],id[x]);\n        x=fa[fx],fx=top[x];\n    }\n    if(!c) return;\n    if(id[x]>id[y]) swap(x,y);\n    query(1,1,n,id[x]+1,id[y]);\n}\nmap<int,Pair>mp;\nsigned main()\n{\n    qread(n,m);int i,j;\n    for(i=0;i<n-1;i++)\n    {\n        int u,v,w;qread(u,v,w);\n        Tree[u].push_back(Pair(v,w));\n        Tree[v].push_back(Pair(u,w));\n        mp[i]=Pair(u,v);\n    }fa[1]=1;dep[1]=0;dfs(1,0);\n    for(i=1;i<=n;i++)\n    {\n        for(auto j:Tree[i])\n        {\n            int u=i,v=j.first;\n            if(dep[u]>dep[v]) swap(u,v); // \u8fd9\u6761\u8fb9\u63a8\u5230\u4e86\u6df1\u5ea6\u66f4\u6df1\u7684\u70b9\u4e0a\n            val[v]=j.second;\n        }\n    }\n    dfs1(1,0,1);build(a,1,1,n);int num=0;\n    for(i=0;i<m;i++)\n    {\n        int op,x,y;qread(op);\n        if(op==1)\n        {\n            qread(x,y,c);\n            query_chain(x,y);\n            printf(\"%lld\\n\",c);\n        }\n        if(op==2) \n        {\n            qread(x,c);\n            int u=mp[x-1].first,v=mp[x-1].second;\n            if(id[u]>id[v]) swap(u,v);\n            update(1,1,n,id[v],c); // \u5355\u70b9\u4fee\u6539\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1648632629,
        "uid": 225991,
        "name": "_lxy_",
        "ccfLevel": 6,
        "title": "CF593D Happy Tree Party \u9898\u89e3"
    }
]