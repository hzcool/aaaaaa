[
    {
        "content": "~~\u5176\u5b9e\u5c31\u662f\u677f\u5b50\u9898\uff08\u5f15\u8d77\u4f17\u6012\uff09~~  \nu1s1\uff0c\u96be\u5ea6\u865a\u9ad8\u3002\n\n\u524d\u7f6e\u829d\u58eb\uff1a\u62d3\u6251\u6392\u5e8f\n  \n\u9898\u76ee\u5927\u610f\uff1a\u7ed9\u51fa\u6392\u5217\u597d\u7684$n$\u4e2a\u5b57\u7b26\u4e32\uff0c\u6c42\u5408\u6cd5\u7684\u91cd\u6784\u5b57\u5178\u5e8f\u3002  \n\n\u5c31\u662f\u628a\u5b57\u6bcd\u8868\u6253\u4e71\u4e86\uff0c\u7ed9\u51fa\u6309\u65b0\u5b57\u6bcd\u8868\u987a\u5e8f\u6392\u5217\u7684\u5b57\u7b26\u4e32\uff0c\u8ba9\u4f60\u6c42\u53ef\u80fd\u7684\u5b57\u6bcd\u8868\u3002\n\n\u6709\u5173\u5148\u540e\u987a\u5e8f\uff0c\u6613\u60f3\u5230\u62d3\u6251\u6392\u5e8f\u3002  \n\n\u90a3\u4e48\u8003\u8651\u5982\u4f55\u5efa\u56fe\u3002\n\n\u5bf9\u4e8e\u76f8\u90bb\u7684\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u53d6\u5176\u957f\u5ea6\u6700\u5c0f\u503c$len$\uff0c\u65b9\u4fbf\u904d\u5386\u3002\n\n\u4ece\u5de6\u5f80\u53f3\u626b\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u4e0d\u76f8\u540c\u7684\u5b57\u7b26\uff0c\u7531\u5148\u6765\u7684\u5411\u540e\u5230\u7684\u8fde\u4e00\u6761\u8fb9\uff0c\u5373\u7531\u5b57\u5178\u5e8f\u5728\u524d\u7684\u5411\u5728\u540e\u7684\u8fde\u4e00\u6761\u8fb9\u3002\n\n\u6dfb\u52a0\u4e00\u4e2a**\u7279\u5224**\u3002\n\n\u9898\u76ee\u5f3a\u8c03\u5b57\u5178\u5e8f\u7684\u5224\u5b9a\u65b9\u6cd5\uff0c\u82e5\u5b57\u7b26\u4e32$s1$\u4e3a$s2$\u7684\u524d\u7f00\u4e14$s1!=s2$\uff0c\u90a3\u4e48$s1$\u5e94\u5728$s2$\u524d\u9762\u3002\n\n\u4e8e\u662f\u6211\u4eec\u6c42$len$\u7684\u826f\u82e6\u7528\u5fc3\u6709\u7528\u4e86\u3002\n\n\u5faa\u73af\u4ece$0$\u5f00\u59cb\uff0c\u5230$len$\u7ed3\u675f\uff0c\u800c\u4e0d\u662f$len-1$\u3002\u8fd9\u6837\u53ef\u4ee5\u5728\u4fdd\u8bc1$s1$\u4e0e$s2$\u5448\u5305\u542b\u5173\u7cfb\u65f6\u8fdb\u884c\u7279\u5224\uff0c\u5373$i==len$\u65f6\u7279\u5224\u3002\n\n\u8d34\u4ee3\u7801\uff1a\n```cpp\ncin>>pas;\nfor(i=2;i<=n;i++)\n{\n\tcin>>now;\n\tint len=min(pas.length(),now.length());\n\tfor(j=0;j<=len;j++)\n\t{\n\t\tif(j==len)\n\t\t{\n\t\t\tif(pas.length()>now.length())\n\t\t\t{\n\t\t\t\tprintf(\"Impossible\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tbreak;//\n\t\t}\n\t\tif(pas[j]!=now[j])\n\t\t{\n\t\t\tint up=pas[j]-'a';\n\t\t\tint down=now[j]-'a'; \n\t\t\tl[up][++cnt[up]]=down;\n\t\t\tnum[down]++;\n\t\t\tbreak;\t\n\t\t}\t\t\n\t}\n\tpas=now;\n}\n```\n\u7531\u4e8e\u5efa\u56fe\u7684\u64cd\u4f5c\u53ea\u548c\u76f8\u90bb\u7684\u5b57\u7b26\u4e32\u6709\u5173\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u8bbe\u4e24\u4e2a\u53d8\u91cf\u3002\n\n~~\u4e0d\u8981\u95ee\u8fd9\u4e9b\u4f18\u5316\u6709\u4ec0\u4e48\u7528\uff0c\u95ee\u5c31\u662f\u9a9a\u64cd\u4f5c\u3002~~\n\n\u6ce8\u610f\u6709\u659c\u6760\u7684\u90a3\u4e00\u884c\u7684break\u4e0d\u8981\u6f0f\u6389\u3002\n\n\u63a5\u4e0b\u6765\u76f4\u63a5\u62d3\u6251\u6392\u5e8f\u3002\n\n\u8981\u5224\u65ad\u662f\u5426\u51d1\u8db3\u4e8626\u4e2a\u5b57\u6bcd\uff1b\u5982\u679c\u6ca1\u6709\uff0c\u8bf4\u660e\u6709\u73af\uff0c\u8f93\u51faImpossible\u3002\n\n\u5b8c\u6574\u4ee3\u7801\uff08\u7a0d\u6709\u6ce8\u91ca\uff09\uff1a\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<iostream>\n#include<queue>\nusing namespace std;\nstring pas,now;\nqueue <long long> q;\nint ct,n,i,j;\nint ans[1000],num[1000],l[1000][1000],cnt[1000];\nbool v[1000];\nint main()\n{\n\tscanf(\"%d\",&n);\n\tcin>>pas;\n\tfor(i=2;i<=n;i++)\n\t{\n\t\tcin>>now;\n\t\tint len=min(pas.length(),now.length());\n\t\tfor(j=0;j<=len;j++)//\u662f<=\n\t\t{\n\t\t\tif(j==len)\n\t\t\t{\n\t\t\t\tif(pas.length()>now.length())\n\t\t\t\t{\n\t\t\t\t\tprintf(\"Impossible\");\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tbreak;//\u4e0d\u8981\u6f0f\u4e86\n\t\t\t}\n\t\t\tif(pas[j]!=now[j])\n\t\t\t{\n\t\t\t\tint up=pas[j]-'a';//ASCII\u7801\u8f6c\u5316\n\t\t\t\tint down=now[j]-'a'; \n\t\t\t\tl[up][++cnt[up]]=down;\n\t\t\t\tnum[down]++;\n\t\t\t\tbreak;\t\n\t\t\t}\t\t\n\t\t}\n\t\tpas=now;\n\t}\n\tfor(i=0;i<=25;i++)//\u4ece\u96f6\u5f00\u59cb\n\t{\n\t\tif(num[i]==0)\n\t\t{\n\t\t\tq.push(i);\n\t\t}\n\t}\n\twhile(!q.empty())\n\t{\n\t\tint head=q.front();\n\t\tans[ct]=head;\n\t\tct++;\n\t\tq.pop();\n\t\tfor(i=1;i<=cnt[head];i++)\n\t\t{\n\t\t\tnum[l[head][i]]--;\n\t\t\tif(num[l[head][i]]==0)\n\t\t\t{\n\t\t\t\tq.push(l[head][i]);\n\t\t\t}\n\t\t}\t\t\n\t}\n\tif(ct==26)//\u68c0\u67e5\u662f\u5426\u6709\u73af\n\t{\n\t\tfor(i=0;i<=25;i++)\n\t\t{\n\t\t\tprintf(\"%c\",ans[i]+'a');//\u8bb0\u5f97\u8f6c\u5316\u56de\u6765\n\t\t}\n\t}\n\telse\n\t{\n\t\tprintf(\"Impossible\");\n\t}\n}\n```\n\nPS\uff1a\u62d3\u6251\u5e8f\u5217\u4e0d\u6b62\u4e00\u79cd\uff0c\u5bf9\u6bd4\u6837\u4f8b\u53ea\u9700\u8981\u5bf9\u6bd4\u51e0\u4e2a\u5173\u952e\u5b57\u7b26\u7684\u4f4d\u7f6e\u5c31\u53ef\u4ee5\u4e86\u3002",
        "postTime": 1611488437,
        "uid": 387236,
        "name": "\u6768\u8a89yy",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF510C \u3010Fox And Names\u3011"
    },
    {
        "content": "\u4e00\u9053\u62d3\u6251\u6392\u5e8f\u88f8\u9898\u3002\n\n\u5bf9\u4e8e\u5b57\u5178\u5e8f\u524d\u540e\u76f8\u90bb\u7684\u4e24\u4e2a\u5b57\u7b26\u4e32 $a$ \u548c $b$\uff0c$b$ \u80af\u5b9a\u4e0d\u80fd\u662f $a$ \u7684\u524d\u7f00\uff0c\u4e0d\u7136\u7684\u8bdd\u8fd9\u4e2a\u5b57\u5178\u5e8f\u5c31\u662f\u9519\u7684\uff0c\u8981\u8f93\u51fa $\\text{Impossible}$\u3002\n\n\u5982\u679c $a$ \u4e0d\u662f $b$ \u7684\u524d\u7f00\u7684\u8bdd\uff0c\u90a3\u4e48 $a$ \u548c $b$ \u7b2c\u4e00\u4e2a\u4e0d\u76f8\u540c\u7684\u5b57\u7b26\u6211\u4eec\u5206\u522b\u79f0\u4e4b\u4e3a $c$ \u548c $d$\uff0c$c$ \u7684\u4f18\u5148\u7ea7\u80af\u5b9a\u662f\u8981\u6bd4 $d$ \u9ad8\u7684\uff0c\u4e5f\u5c31\u662f $c$ \u5728\u7b54\u6848\u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e\u4e00\u5b9a\u662f\u8981\u6bd4 $d$ \u9760\u524d\u7684\u3002\n\n\u770b\u5230\u8fd9\u91cc\u4f60\u60f3\u5230\u4e86\u4ec0\u4e48\uff1f\u62d3\u6251\u6392\u5e8f\uff01\u6ca1\u9519\uff0c\u6211\u4eec\u8981\u5728\u56fe\u4e2d\u8fde\u4e00\u6761\u4ece $d$ \u5230 $c$ \u7684\u6709\u5411\u8fb9\uff0c\u6700\u540e\u8f93\u51fa\u8fd9\u5f20\u56fe\u7684\u62d3\u6251\u6392\u5e8f\u5c31\u597d\u4e86\uff0c\u5982\u679c\u56fe\u6709\u73af\u5c31\u8f93\u51fa $\\text{Impossible}$\u3002\n\n[\u4ee3\u7801](https://www.luogu.com.cn/paste/af071lw7)",
        "postTime": 1624540683,
        "uid": 203008,
        "name": "toaru",
        "ccfLevel": 5,
        "title": "CF510C Fox And Names \u9898\u89e3"
    },
    {
        "content": "~~\u8fd9\u4e48\u7834\u70c2\u80af\u5b9a\u8fc7\u4e0d\u53bb~~\n\n**\u601d\u8def\uff1a**\n\n- **dfs** topo sorting\n\n\u540c**@Qi_XingZhi**\uff0c\u4ee5\u5b57\u6bcd\u4e3a\u8282\u70b9\uff0c**\u5efa\u56fe**\uff0c**\u62d3\u6251\u6392\u5e8f**\uff0c\u5224\u73af\u3002\n\n\u53ef\u4ee5\u76f4\u63a5$dfs$\u6bcf\u4e00\u4e2a\u5b57\u6bcd\uff0c\u987a\u4fbf\u5224\u73af\u3002\n\n~~\u70ed\u7231dfs\u77ed\u4ee3\u7801~~\n\n**\u4ee3\u7801\uff1a**\n\n``` cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int maxn = 30;\nchar str[110][110];\nint n, now, a[maxn], vis[maxn];\n\nvector <int> e[maxn];\n\nbool dfs(int u) {\n\tif (vis[u]) {\n\t\treturn vis[u] > 1;\n\t}\n\tvis[u] = 1;\n\tfor (int v : e[u]) {\n\t\tif (!dfs(v)) {\n\t\t\treturn 0;\n\t\t}\n\t}\n\ta[++now] = u;\n\tvis[u] = 2;\n\treturn 1;\n}\n\nint main() {\n\tscanf(\"%d\", &n);\n\tgets(str[0]);\n\tfor (int i = 1; i <= n; i++) {\n\t\tgets(str[i]);\n\t}\n\tfor (int i = 1; i < n; i++) {\n\t\tint j = 0, l1 = strlen(str[i]), l2 = strlen(str[i + 1]);\n\t\tfor (; j < min(l1, l2) && str[i][j] == str[i + 1][j]; j++);\n\t\tif (j == l2) {\n\t\t\treturn puts(\"Impossible\"), 0;\n\t\t}\n\t\tif (j < l1) {\n\t\t    e[str[i][j] - 'a'].push_back(str[i + 1][j] - 'a');\n\t\t}\n\t}\n\tfor (int i = 0; i < 26; i++) {\n\t\tif (!dfs(i)) {\n\t\t\treturn puts(\"Impossible\"), 0;\n\t\t}\n\t}\n\tfor (int i = 26; i; i--) {\n\t\tputchar(a[i] + 'a');\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1531751339,
        "uid": 73934,
        "name": "Juanzhang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF510C \u3010Fox And Names\u3011"
    },
    {
        "content": "### \u9898\u610f\n\n\u6c42\u4e00\u79cd\u6ee1\u8db3\u8ba9 $n$ \u4e2a\u5b57\u7b26\u4e32\u6309\u5927\u5c0f\u6392\u5217\u7684\u5b57\u5178\u5e8f\u3002\n\n### \u5206\u6790\n\n\u9996\u5148\u6839\u636e\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u5efa\u56fe\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5b57\u7b26\u4e32 $s_i$ \uff0c\u679a\u4e3e\u6240\u6709\u5728\u5b83\u4e4b\u524d\u7684\u5b57\u7b26\u4e32 $s_j$\uff0c\u5228\u53bb\u4e24\u4e2a\u5b57\u7b26\u4e32\u76f8\u540c\u7684\u524d\u7f00\u540e\u5efa\u7acb\u4e00\u6761\u7531 $s_i$ \u7b2c\u4e00\u4e2a\u5b57\u7b26\u6307\u5411 $s_j$ \u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684\u6709\u5411\u8fb9\u3002\u7136\u540e\u8dd1\u4e00\u904d\u62d3\u6251\uff0c\u5982\u679c\u8dd1\u51fa\u6765 topo \u6570\u7ec4\u7684\u5927\u5c0f\u6b63\u597d\u662f $26$\uff0c\u8bf4\u660e\u6709\u4e00\u6761\u8def\u5f84\uff0c\u5426\u5219\u65e0\u89e3\u3002\u6ce8\u610f\u7279\u5224\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u524d\u7f00\u7684\u60c5\u51b5\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define mem(a,b) memset(a,b,sizeof(a))\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ninline void qread(){}template<class T1,class ...T2>\ninline void qread(T1 &a,T2&... b)\n{\n    register T1 x=0;register bool f=false;char ch=getchar();\n    while(ch<'0') f|=(ch=='-'),ch=getchar();\n    while(ch>='0') x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\n    x=(f?-x:x);a=x;qread(b...);\n}\ntemplate<class T1,class T2>inline T1 qmax(const T1 &x,const T2 &y){return x>y?x:y;}\ntemplate<class T1,class T2>inline T1 qmin(const T1 &x,const T2 &y){return x<y?x:y;}\nconst int MAXN=37;\nint n,head[MAXN],in[MAXN];\nchar s[107][107];\nstruct Edge\n{\n    int to,nxt;\n    Edge(){;}Edge(int _to,int _nxt):to(_to),nxt(_nxt){}\n};vector<Edge>edge;\nvoid add_edge(int u,int v){edge.push_back(Edge(v,head[u]));head[u]=edge.size()-1;}\nvector<int>topo;\nvoid topo_sort()\n{\n    topo.clear();queue<int>q;int i;\n    for(i=0;i<26;i++) if(!in[i]) q.push(i);\n    while(!q.empty())\n    {\n        int u=q.front();q.pop();topo.push_back(u);\n        for(i=head[u];i!=-1;i=edge[i].nxt) if(!(--in[edge[i].to])) q.push(edge[i].to);\n    }\n}\nint main()\n{\n    qread(n);int i,j;mem(head,-1);bool flag=true;\n    for(i=0;i<n;i++) scanf(\"%s\",s[i]);\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<i;j++)\n        {\n            if(strlen(s[j])>strlen(s[i]))\n            {\n                bool f=true;\n                for(int k=0;k<strlen(s[i]);k++)\n                {\n                    if(s[i][k]!=s[j][k])\n                    {\n                        f=false;\n                        break;\n                    }\n                }\n                if(f) // \u5982\u679c\u540e\u9762\u7684\u5b57\u7b26\u4e32\u662f\u524d\u9762\u7684\u524d\u7f00\uff0c\u8bf4\u660e\u65e0\u8bba\u662f\u600e\u6837\u7684\u5b57\u5178\u5e8f\u90fd\u4e0d\u80fd\u6ee1\u8db3\n                {\n                    flag=false;\n                    break;\n                }\n            }\n            for(int k=0;k<qmin(strlen(s[i]),strlen(s[j]));k++)\n            {\n                if(s[i][k]!=s[j][k]) // \u627e\u51fa\u7b2c\u4e00\u4e2a\u4e0d\u76f8\u7b49\u7684\u5b57\u7b26\uff0c\u5efa\u8fb9\n                {\n                    int u=s[j][k]-97,v=s[i][k]-97;\n                    add_edge(u,v);in[v]++;\n                    break;\n                }\n            }\n        }\n        if(!flag) break;\n    }\n    if(!flag) return printf(\"Impossible\\n\"),0;\n    topo_sort();flag&=(topo.size()==26);\n    if(!flag) return printf(\"Impossible\\n\"),0;\n    for(auto i:topo) printf(\"%c\",i+97);\n    return 0;\n}\n```",
        "postTime": 1644921450,
        "uid": 225991,
        "name": "_lxy_",
        "ccfLevel": 6,
        "title": "CF510C Fox And Names \u9898\u89e3"
    },
    {
        "content": "**\u601d\u8def**\uff1a\u66b4\u529b\u5339\u914d\u6bcf\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u627e\u5230\u7b2c\u4e00\u5bf9\u76f8\u540c\u7684\u5c31\u8fde\u4e00\u6761\u8fb9\uff0c\u6700\u540e\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\uff0c\u5982\u679c\u5b57\u6bcd\u6570\u91cf\u8fbe\u523026\u4e2a\u5c31\u8f93\u51fa\uff0c\u5426\u5219\u5c31\u662f\u6709\u73af\u76f4\u63a5impossible\u3002\n\n\u6ce8\u610f\u7279\u5224\u5982\u679c$S1_{len}>S2_{len}$\uff0c\u5e76\u4e14\u4e24\u4e2a\u5b57\u7b26\u4e32\u6ca1\u6709\u76f8\u540c\u90e8\u5206\u3002\u663e\u7136\u4e0d\u7b26\u5408\u9898\u610f\u76f4\u63a5impossible\u3002\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1010;\nint n;\nint in[N],ret;\nint head[N],cnt;\nint vis[N][N];\nchar s[N][N],ans[N];\nstruct edge\n{\n\tint nxt,to;\n}e[N<<1];\ninline void init()\n{\n\tcnt=0;\n\tmemset(head,-1,sizeof(head));\n}\ninline void toposort()\n{\n\tqueue<int>q;\n\tfor(int i=1;i<=26;i++)\n\t{\n\t\tif(!in[i]) \n\t\t\tq.push(i);\n\t}\n\twhile(q.size()>0)\n\t{\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tans[++ret]=u+'a'-1;\n\t\tfor(int i=head[u];i!=-1;i=e[i].nxt)\n\t\t{\n\t\t\tint v=e[i].to;\n\t\t\t--in[v];\n\t\t\tif(!in[v]) q.push(v);\n\t\t}\n\t}\n\tif(ret==26)\n\t{\n\t\tprintf(\"%s\",ans+1);\n\t\treturn;\n\t}\n\telse puts(\"Impossible\");\n}\nint main()\n{\t\n\tinit();\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%s\",s[i]+1);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=i+1;j<=n;j++)\n\t\t{\n\t\t\tint len1=strlen(s[i]+1),len2=strlen(s[j]+1),flag=0;\n\t\t\tint len=min(len1,len2);\n\t\t\tfor(int k=1;k<=len;k++)\n\t\t\t{\n\t\t\t\tif(s[i][k]!=s[j][k])\n\t\t\t\t{\n\t\t\t\t\tflag=1;\n\t\t\t\t\tint u=s[i][k]-'a'+1,v=s[j][k]-'a'+1;\n\t\t\t\t\tif(!vis[u][v])\n\t\t\t\t\t{\n\t\t\t\t\t\tadd_edge(u,v);\n\t\t\t\t\t\tvis[u][v]++;\n\t\t\t\t\t\tin[v]++;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!flag&&len1>len2) \n\t\t\t{\n\t\t\t\tputs(\"Impossible\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\ttoposort();\n}\n```\n",
        "postTime": 1592746409,
        "uid": 115779,
        "name": "\u6781\u5bd2\u795e\u51b0",
        "ccfLevel": 0,
        "title": "CF510C Fox And Names"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF510C)\n\n\u6211\u4eec\u770b\u4e00\u773c\u9898\u76ee\uff1a\u6392\u5217\u3001\u4efb\u610f\u4e00\u7ec4\uff0c\u53ef\u4ee5\u60f3\u5230\u4e00\u4e2a\u770b\u4f3c\u548c\u9898\u76ee\u6beb\u4e0d\u76f8\u5173\u7684\u4e1c\u897f\uff1a\u62d3\u6251\u6392\u5e8f\u3002\n\n\u4f46\u662f\u8fd9\u9898\u96be\u5c31\u96be\u5728\u5982\u4f55\u8f6c\u5316\uff0c\u6211\u4eec\u628a\u5b57\u7b26\u4e32\u6309\u5b57\u5178\u5e8f\u5efa\u56fe\uff0c\u7136\u540e\u62d3\u6251\u6392\u5e8f\uff0c\u5177\u4f53\u5730\u8bf4\uff0c\u6709\u4e24\u4e2a\u5b57\u7b26\u4e32 $a$ \u548c $b$\uff0c\u5982\u679c $a$ \u7684\u5b57\u5178\u5e8f\u5c0f\u4e8e $b$\uff0c\u6211\u4eec\u628a $a$ \u8fde\u63a5\u5230 $b$\u3002\n\n\u770b\u8d77\u6765\u5f88\u590d\u6742\uff0c\u5176\u5b9e\u5c31\u662f\u51e0\u884c\uff1a\n\n```cpp\nfor(int i=2;i<=n;i++)\n{\n\tb=t[i];\n\tint l=min(a.length(),b.length());//\u5b9e\u9645\u4e0a\n\tfor(int j=0;j<=l;j++)\n\t{\n\t\tif(a[j]!=b[j])\n\t\t{\n\t\t\tint c=a[j]-97,d=b[j]-97;//97\u4e0d\u7528\u89e3\u91ca\u4e86\uff0ca \n\t\t\tq[c].push_back(d);//\u5e38\u89c4\u5efa\u56fe\u64cd\u4f5c\n\t\t\ty[d]++;\n\t\t\tbreak;\t\n\t\t}\t\t\n\t}\n\ta=b;//\u4e00\u4e2a\u7701a[i]\u548ca[i-1]\u7684\u65b9\u5f0f\n}\n```\n\n\u4f46\u662f\uff0c\u6211\u4eec\u6f0f\u4e86 $\\texttt{Impossible}$ \u7684\u60c5\u51b5\uff0c\u5177\u4f53\u5730\u8bf4\uff0c\u5982\u679c $a$ \u662f $b$ \u7684\u524d\u7f00\uff1a\n\n```cpp\nfor(int i=2;i<=n;i++)\n{\n\tint l=min(a.length(),b.length());\n\tfor(int j=0;j<=l;j++)\n\t{\n\t\tif(j==l)//\u5168\u90e8\u641c\u7d22\u5b8c\n\t\t{\n\t\t\tif(a.length()>b.length())\n\t\t\t{\n\t\t\t\tcout<<\"Impossible\";\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n\u81f3\u4e8e\u62d3\u6251\u6392\u5e8f\u672c\u8eab\uff0c\u9996\u5148\u6211\u4eec\u9700\u8981\u628a\u5143\u7d20\u5168\u90e8\u63d2\u5165\u961f\u5217\uff0c\u7136\u540e\u6765\u4e00\u4e2a\u5faa\u73af\u76f4\u5230\u961f\u5217\u4e3a\u7a7a\uff0c\u5728\u5faa\u73af\u4e2d\u67e5\u627e\u5f53\u524d\u961f\u9996\u6240\u6709\u53ef\u4ee5\u6307\u5411\u7684\u70b9\uff0c\u52a0\u5165\u961f\u5217\u5c31\u53ef\u4ee5\u4e86\uff0c\u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u9009\u62e9\u7528 dfs \u6765\u67e5\u627e\u3002\n\n\u8fd9\u4e2a\u601d\u8def\u4ecd\u7136\u62ff\u4e0d\u4e86\u6ee1\u5206\uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u6f0f\u4e86\u73af\u7684\u5b58\u5728\uff0c\u5982\u679c\u6709\u73af\uff0c\u6211\u4eec\u4e00\u6837\u8981\u8f93\u51fa $\\texttt{Impossible}$\u3002\n\n[\u62d3\u6251\u6392\u5e8f](https://www.luogu.com.cn/paste/w0os4ntd)\u5728\u8fd9\u3002",
        "postTime": 1681881137,
        "uid": 451825,
        "name": "JDuru",
        "ccfLevel": 0,
        "title": "CF510C \u9898\u89e3"
    },
    {
        "content": "\u6bd4\u8f83\u7b80\u5355\u7684\u62d3\u6251\u6392\u5e8f\u9898\uff0c\u6a21\u62df\u8d5b\u7684\u65f6\u5019\u65e0\u8111\u5207\u4e86\u3002qwq\n\n### \u9898\u76ee\u5927\u610f\n\n\u901a\u8fc7\u6539\u53d8\u5b57\u5178\u5e8f\u6765\u8ba9 $n$ \u4e2a\u5b57\u7b26\u4e32\u5927\u5c0f\u9012\u589e\u3002\n\n### \u9898\u89e3\n\n\u6bd4\u8f83\u6bcf\u4e24\u4e2a\u5b57\u7b26\u4e32 $a$ \u548c $b$ \u5982\u679c $b$ \u662f $a$ \u7684\u524d\u7f00\uff0c\u90a3\u4e48\u80af\u5b9a\u4e0d\u53ef\u80fd\uff0c\u56e0\u4e3a\u65e0\u8bba\u600e\u4e48\u6539\u5b57\u5178\u5e8f\uff0c\u540c\u6837\u7684\u5b57\u7b26\u4e00\u5b9a\u662f\u4e00\u6837\u7684\uff0c\u957f\u7684\u7edd\u5bf9\u5728\u540e\u9762\uff0c\u4e0d\u53ef\u80fd\u5728\u524d\u9762\uff0c\u56e0\u6b64\u4e0d\u53ef\u80fd\u3002\n\n\u8bb0 $a$ \u7b2c\u4e00\u4e2a\u4e0e $b$ \u4e0d\u540c\u7684\u5b57\u7b26\u4e3a $x$\uff0c$b$ \u7b2c\u4e00\u4e2a\u4e0e $a$ \u4e0d\u540c\u7684\u5b57\u7b26\u4e3a $y$. \u90a3\u4e48\u6539\u53d8\u5b57\u5178\u5e8f\u540e\uff0c$x$ \u7edd\u5bf9\u5728 $y$ \u524d\u9762\uff0c\u5728 $x$ \u5230 $y$ \u5efa\u4e00\u6761\u6709\u5411\u8fb9\u3002\u5efa\u5b8c\u56fe\u540e\uff0c\u8dd1\u62d3\u6251\u6392\u5e8f\uff0c\u5982\u679c\u6709\u73af\u5219\u4e0d\u53ef\u80fd\uff0c\u5426\u5219\u8bb0\u5f55\u62d3\u6251\u5e8f\uff0c\u5728\u5b57\u6bcd\u8868\u91cc\u62a0\u6389\u7136\u540e\u4e0e\u5b57\u6bcd\u8868\u4e00\u8d77\u8f93\u51fa\u5373\u53ef\u3002\n\n### Code:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n, in[105], out[105], ans, cnt;\nstring names[105], p;\nvector<int> G[105];\nbool vis[105];\nbool topo() { //\u62d3\u6251\u6392\u5e8f\n\tqueue<int> q; //\u62d3\u6251\u5e8f\u5217\n\tfor(int i = 0; i < 26; ++i) {\n\t\tfor(int j : G[i]) {\n\t\t\tin[j] ++;\n\t\t\tvis[i] = true;\n\t\t\tvis[j] = true;\n\t\t}\n\t}\n\tfor(int i = 0; i < 26; ++i) {\n\t\tif(in[i] == 0 && vis[i]) {\n\t\t\tq.push(i);\n\t\t\tp = p + char(i + 'a');\n\t\t\tans ++;\n\t\t}\n\t}\n\twhile(!q.empty()) {\n\t\tint t = q.front(); q.pop();\n\t\tfor(int i : G[t]) {\n\t\t\tin[i] --;\n\t\t\tif(in[i] == 0) {\n\t\t\t\tq.push(i);\n\t\t\t\tp = p + char(i + 'a');\n\t\t\t\tans ++;\n\t\t\t}\n\t\t}\n\t}\n\tint nodes = 0;\n\tfor(int i = 0; i < 26; ++i) {\n\t\tnodes += (vis[i] == true);\n\t}\n\treturn ans == nodes; //\u5224\u65ad\u662f\u5426\u6709\u73af\n}\nint main() {\n\tcin >> n;\n\tfor(int i = 1; i <= n; ++i) cin >> names[i];\n\tfor(int i = 1; i <= n; ++i) {\n\t\tfor(int j = i + 1; j <= n; ++j) {\n\t\t\tint l1 = names[i].size(), l2 = names[j].size();\n\t\t\tbool flag = false;\n\t\t\tfor(int k = 0; k < min(l1, l2); ++k) {\n\t\t\t\tif(names[i][k] != names[j][k]) {\n\t\t\t\t\tG[names[i][k] - 'a'].push_back(names[j][k] - 'a'); //\u5efa\u56fe\n\t\t\t\t\tflag = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!flag && l1 > l2) { //\u5982\u679cb\u662fa\u7684\u524d\u7f00\uff0c\u4e0d\u53ef\u80fd\n\t\t\t\tcout << \"Impossible\";\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\tbool flg = topo(), visp[105];\n\tif(!flg) { //\u82e5\u5b58\u5728\u73af\uff0c\u4e0d\u53ef\u80fd\n\t\tcout << \"Impossible\\n\";\n\t\treturn 0;\n\t}\n\tint pl = p.size();\n\tfor(int i = 0; i < pl; ++i) {\n\t\tvisp[p[i] - 'a'] = true;\n\t}\n\tfor(int i = 0; i < 26; ++i) {\n\t\tif(vis[i] == false) cout << char('a' + i);\n\t}\n\tcout << p;\n\treturn 0;\n}\n```",
        "postTime": 1644799444,
        "uid": 482642,
        "name": "hank0402",
        "ccfLevel": 0,
        "title": "CF510C Fox and Names \u9898\u89e3"
    },
    {
        "content": "# CF510C Fox And Names\n\n## \u9898\u610f\n\n\u7ed9\u51fa $n$ \u4e2a **\u6309\u7167\u67d0\u79cd\u7279\u5b9a\u7684\u5b57\u5178\u5e8f** \u6392\u5217\u7684\u5355\u8bcd\uff0c\u6c42\u51fa\u5176\u5b57\u5178\u5e8f\u3002 \n\n- \u82e5\u5b58\u5728\u591a\u7ec4\u89e3\uff0c\u8f93\u51fa\u4efb\u610f\u4e00\u7ec4\u3002  \n\n- \u82e5\u65e0\u89e3\uff0c\u8f93\u51fa `Impossible`\u3002  \n\n\u6570\u636e\u8303\u56f4\uff1a$1 \\leq n \\leq 100$\uff0c$1 \\leq | name_i | \\leq 100$\u3002\n\n## \u9898\u76ee\u5206\u6790\n\n### \u524d\u7f6e\u77e5\u8bc6\n\n- [\u62d3\u6251\u6392\u5e8f](https://zhuanlan.zhihu.com/p/260112913)  \n\n- [\u5b57\u5178\u5e8f](https://baike.baidu.com/item/%E5%AD%97%E5%85%B8%E5%BA%8F/7786229?fr=aladdin)\n\n### Solve\n\n\u770b\u5230\u8fd9\u91cc\uff0c\u76f8\u4fe1\u4f60\u5df2\u7ecf\u5bf9 **\u62d3\u6251\u6392\u5e8f** \u548c **\u5b57\u5178\u5e8f** \u6709\u8fc7\u4e00\u4e9b\u4e86\u89e3\u4e86\u3002~~\uff08\u4e0d\u4e86\u89e3\u5c31\u5148\u53bb\u5b66\u5566\uff09~~\n\n\u800c\u5b83\u4eec\uff0c\u6b63\u662f\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u5173\u952e\uff01\n\n\u9996\u5148\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u62d3\u6251\u6392\u5e8f\u662f\u5c06\u4e00\u4e2a\u6709\u5411\u56fe\u7684\u9876\u70b9\u6392\u6210\u4e00\u4e2a\u7ebf\u6027\u5e8f\u5217\uff0c\u4e14\u6ee1\u8db3\uff1a\n\n- \u82e5\u5b58\u5728\u4e00\u6761\u8fb9 $<u, v>$\uff0c\u5219 $u$ \u5728\u7ebf\u6027\u5e8f\u5217\u4e2d\u51fa\u73b0\u5728 $v$ \u4e4b\u524d\u3002\n\n\u4e3a\u4e86\u4f7f\u7528 **\u62d3\u6251\u6392\u5e8f** \u6c42\u5b57\u5178\u5e8f\uff0c\u6211\u4eec\u4e5f\u5e94\u8be5\u5efa\u4e00\u4e2a\u6ee1\u8db3\u6b64\u6027\u8d28\u7684\u6709\u5411\u56fe\u3002\n\n- \u5bf9\u4e8e **\u5b57\u5178\u5e8f** \u6765\u8bf4\uff0c\u201c\u4f18\u5148\u7ea7\u201d\u9ad8\u7684\u5b57\u6bcd\u51fa\u73b0\u5728\u524d\u9762\u3002\n\n- \u5bf9\u4e8e\u8f93\u5165\u7684\u5355\u8bcd\u6765\u8bf4\uff0c\u5148\u8f93\u5165\u7684\u5355\u8bcd\u603b\u6bd4\u540e\u8f93\u5165\u7684\u5355\u8bcd\u201c\u4f18\u5148\u7ea7\u201d\u9ad8\u3002\n\n\u7531\u6b64\uff0c\u5efa\u56fe\u7684\u65b9\u6cd5\u4e5f\u5c31\u663e\u800c\u6613\u89c1\u4e86\u3002\u8bbe\u8f93\u5165\u7684 **\u76f8\u90bb\u4e24\u4e2a** \u5355\u8bcd\u5206\u522b\u4e3a $s$ \u548c $t$\uff1a\n\n- \u627e\u5230\u6700\u5c0f\u7684 $i$ \u4f7f\u5f97 $s_i \\not= t_i$\u3002  \n\n- \u5efa\u7acb\u6709\u5411\u8fb9 $<s_i, t_i>$\u3002\n\n\u901a\u8fc7\u8fd9\u6837\u7684\u6b65\u9aa4\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5efa\u51fa\u7b26\u5408\u8981\u6c42\u7684\u56fe\u3002  \n\n\u4f46\u4ecd\u6709\u4e2a\u4e0d\u53ef\u5ffd\u7565\u7684\u5e38\u8bc6\uff1a\n\n> \u82e5\u5355\u8bcd $s_1$ \u662f\u53e6\u4e00\u4e2a\u5355\u8bcd $s_2$ \u7684\u524d\u7f00\uff0c\u5219 $s_1$ \u5e94\u51fa\u73b0\u5728 $s_2$ \u524d\u9762\u3002\n\n\u6240\u4ee5\uff0c\u5728\u8f93\u5165\u7684\u65f6\u5019\u9700\u8981\u52a0\u4e00\u4e2a\u7279\u5224\uff1a\n\n- \u5982\u679c **\u540e\u8f93\u5165\u7684\u5355\u8bcd** \u662f **\u5148\u8f93\u5165\u7684\u5355\u8bcd** \u7684\u524d\u7f00\uff0c\u76f4\u63a5\u8f93\u51fa `Impossible` \u5c31\u597d\u5566\uff01\n\n\u81f3\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u5b8c\u6574\u7684\u4ee3\u7801\uff0c\u5177\u4f53\u4ee3\u7801\u5206\u6790\u89c1\u6ce8\u91ca\u3002\n\n## Code\n\n\u8fd9\u91cc\u7528 `priority_queue` \u4f18\u5148\u961f\u5217\uff0c\u53ef\u4ee5\u6c42\u51fa\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u5b57\u5178\u5e8f\u3002\uff08\uff1f\u5957\u5a03\n\n\uff08\u662f\u6307\u6309\u6b63\u5e38\u5b57\u5178\u5e8f\u6765\u8bf4\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u7b54\u6848\u5566\u3002\uff09\n\n```cpp\n#include<iostream>\n#include<vector>\n#include<queue>\n#include<cstring>\n#include<algorithm>\n\nusing namespace std;\n\nconst int maxn = 205;\n\n// lenBef - \u524d\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\n// lenNow - \u8fd9\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\n// lenMin - \u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u8f83\u77ed\u7684\u957f\u5ea6\n// po - \u5bfb\u627e\u7b2c\u4e00\u4e2a\u4e0d\u76f8\u540c\u5b57\u6bcd\u65f6\u7528\u7684 pointer\n// deg[i] - \u7b2c i \u4e2a\u70b9\u7684\u5165\u5ea6\n// arr[i] - \u62d3\u6251\u6392\u5e8f\u51fa\u7684\u7b54\u6848\nint n, lenBef, lenNow, lenMin, po, deg[30], arr[30];\n\n// bef - \u524d\u4e00\u4e2a\u5b57\u7b26\u4e32\n// now - \u8fd9\u4e00\u4e2a\u5b57\u7b26\u4e32\nstring bef, now;\n\n// vector \u5b58\u56fe\uff0c\u56e0\u4e3a\u53ea\u6709 26 \u4e2a\u5b57\u6bcd\u6240\u4ee5\u4e0d\u9700\u8981\u5f00\u592a\u591a\nvector <int> ch[30];\n\ninline void inp(string &s, int &len){\n    // \u56fe\u7701\u4e8b\u5199\u7684 input \u51fd\u6570\n    // \u8fd9\u91cc\u7684 s \u548c len \u90fd\u662f\u6307\u9488\u5f62\u5f0f\u4f20\u5165\n    cin >> s;\n    len = s.length();\n}\n\nint topoSort(){\n    // \u62d3\u6251\u6392\u5e8f\n    int cnt = 0;\n    priority_queue <int> q;         // \u5176\u5b9e\u53ef\u4ee5\u7528\u666e\u901a\u961f\u5217\u7684\uff0c\u6bd5\u7adf\u8f93\u51fa\u4efb\u610f\u6ee1\u8db3\u8981\u6c42\u7684\u5b57\u5178\u5e8f\u5373\u53ef\n    for(int i = 0; i < 26; i++){\n        if(!deg[i]) q.push(-i);     // \u5927\u6839\u5806\u52a0\u4e2a\u8d1f\u53f7\u5f53\u5c0f\u6839\u5806\u7528\n    }\n    while(!q.empty()){\n        int k = -q.top(); q.pop();  // \u8bb0\u5f97\u52a0\u8d1f\u53f7\n        arr[++cnt] = k;             // \u8bb0\u5f55\u7b54\u6848\n        for(auto to : ch[k]){\n            deg[to]--;\n            if(!deg[to]) q.push(-to);\n        }\n    }\n    return cnt;                     // \u8fd4\u56de\u7b54\u6848\u7684\u6570\u91cf\n}\n\nint main(){\n    // \u7956\u4f20\u52a0\u901f\n    ios::sync_with_stdio(false);\n    cin.tie(0); cout.tie(0);\n\n    cin >> n;\n    inp(bef, lenBef);               // \u8f93\u5165\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u4f5c\u4e3a\u201c\u524d\u4e00\u4e2a\u201d\n    for(int i = 2; i <= n; i++){\n        inp(now, lenNow);           // \u8f93\u5165\u201c\u8fd9\u4e00\u4e2a\u201d\u5b57\u7b26\u4e32\n        lenMin = min(lenBef, lenNow);\n        for(po = 0; po < lenMin; po++) if(bef[po] != now[po]) break;\n        if(po == lenMin && lenBef > lenNow){\n            // \u6b64\u65f6\u540e\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u524d\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u524d\u7f00\n            cout << \"Impossible\";\n            return 0;\n        }\n        if(po != lenMin){\n            // \u8fd9\u91cc\u8981\u6ce8\u610f\u5224\u65ad\u4e00\u4e0b\uff0c\u56e0\u4e3a\u5982\u679c po == lenMin \u7684\u8bdd\uff0c\u4e24\u5b57\u7b26\u4e32\u662f\u76f8\u7b49\u7684\u3002\n            ch[bef[po] - 'a'].push_back(now[po] - 'a');\n            deg[now[po] - 'a']++;\n        }\n        bef = now; lenBef = lenNow; // \u5c06\u201c\u8fd9\u4e00\u4e2a\u201d\u5b57\u7b26\u4e32\u53d8\u6210\u201c\u524d\u4e00\u4e2a\u201d\u5b57\u7b26\u4e32\uff0c\u8fdb\u884c\u4e0b\u4e00\u8f6e\u6bd4\u8f83\n    }\n    int cnt = topoSort();\n    // \u8f93\u51fa\u7b54\u6848\n    if(cnt == 26) for(int i = 1; i <= cnt; i++) cout << char(arr[i] + 'a');\n    else cout << \"Impossible\";      // \u6ca1\u6709\u5408\u6cd5\u7b54\u6848\u7684\u65f6\u5019\u8bb0\u5f97\u8f93\u51fa Impossible\n    return 0;\n}\n```",
        "postTime": 1644064690,
        "uid": 236847,
        "name": "lym12321",
        "ccfLevel": 0,
        "title": "CF510C Fox And Names \u9898\u89e3"
    },
    {
        "content": "### \u9898\u610f\u7b80\u8ff0\uff1a  \n\u7ed9\u5b9a\u4e00\u4e2a\u6570 $n$\uff0c\u7136\u540e\u518d\u7ed9\u51fa $n$ \u4e2a\u6309\u67d0\u4e00\u79cd\u4e0e\u6211\u4eec\u5e73\u65f6\u4e0d\u4e00\u6837\u7684\u5b57\u5178\u5e8f\u6392\u5217\u7684\u5b57\u7b26\u4e32\uff0c\u8ba9\u4f60\u8f93\u51fa\u8fd9\u4e2a\u5b57\u5178\u5e8f\uff0c\u5982\u679c\u4e0d\u80fd\uff0c\u8f93\u51fa ```Impossible```\u3002  \n\n### \u601d\u8def\uff1a  \n\u5927\u5bb6\u5e94\u8be5\u53ef\u4ee5\u770b\u5f97\u51fa\u6765\uff0c\u8fd9\u9053\u9898\u53ef\u4ee5\u7528\u62d3\u6251\u6392\u5e8f\u3002\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u76f8\u90bb\u7684\u5b57\u7b26\u4e32\u627e\u5230\u7b2c\u4e00\u4e2a\u4e0d\u540c\u7684\u5b57\u7b26\uff0c\u7136\u540e\u5efa\u8fb9\uff08\u7b2c\u4e00\u4e2a\u5b57\u7b26\u6307\u5411\u7b2c\u4e8c\u4e2a\u5b57\u7b26\uff09\u3002\u518d\u5c06\u5165\u5ea6\u4e3a $0$ \u7684\u5b57\u7b26\u5165\u961f\uff0c\u518d\u53bb\u505a\u6a21\u677f\u62d3\u6251\uff0c\u4f46\u6bcf\u6b21\u90fd\u8981\u5c06\u961f\u9876\u5143\u7d20\u52a0\u5230 ans \u6570\u7ec4\u7684\u672b\u5c3e\u3002\u6700\u540e\u5224\u65ad\u6570\u7ec4\u957f\u5ea6\u662f\u5426\u7b49\u4e8e $26$\uff0c\u5982\u679c\u7b49\u4e8e\u5219\u8f93\u51fa $ans$ \u6570\u7ec4\uff0c\u5426\u5219\u8f93\u51fa ```Impossible```\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nchar ans[105];\nstring s[105];\nqueue<char> q;\nint n,cnt,in[205];\nvector<char> nbr[205];\nsigned main()\n{\n\tcin >> n;\n\tfor(int i=1; i<=n; i++)\n\t{\n\t\tcin >> s[i];\n\t\tif (i==1)\n\t\t\tcontinue;\n\t\tfor(int j=0; j<min(s[i-1].size(),s[i].size()); j++)\n\t\t{\n\t\t\tchar c1=s[i-1][j],c2=s[i][j];\n\t\t\tif (c1!=c2)\n\t\t\t{\n\t\t\t\tnbr[c1].push_back(c2);\n\t\t\t\tin[c2]++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tfor(char i='a'; i<='z'; i++)\n\t\tif (in[i]==0)\n\t\t\tq.push(i);\n\twhile(q.empty()==false)\n\t{\n\t\tchar cur=q.front();\n\t\tq.pop();\n\t\tans[++cnt]=cur;\n\t\tfor(int i=0; i<nbr[cur].size(); i++)\n\t\t{\n\t\t\tchar nxt=nbr[cur][i];\n\t\t\tin[nxt]--;\n\t\t\tif (in[nxt]==0)\n\t\t\t\tq.push(nxt);\n\t\t}\n\t}\n\tif (cnt==26)\n\t\tfor(int i=1; i<=cnt; i++)\n\t\t\tcout << ans[i];\n\telse\n\t\tcout << \"Impossible\";\n\treturn 0;\n}\n```  \n\u4e4d\u4e00\u770b\u662f\u4e0d\u662f\u6ca1\u6709\u95ee\u9898\uff0c\u4f46\u662f\uff0c\u4f60\u4f1a\u53d1\u73b0\u7b2c $13$ \u4e2a\u70b9\u795e\u5947\u7684 WA \u4e86\u3002\u6211\u4eec\u5148\u6765\u770b\u4e00\u4e0b\u8fd9\u4e00\u7ec4\u6837\u4f8b\uff1a  \n> abcdefg  \nabc\n\n\u5f88\u663e\u7136\uff0c\u8fd9\u4e2a\u6837\u4f8b\u5e94\u8be5\u8f93\u51fa ```Impossible```\uff0c\u4f46\u662f\u4e0a\u9762\u7684\u4ee3\u7801\u5e76\u4e0d\u4f1a\u8f93\u51fa ```Impossible```\uff0c\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u7279\u5224\u540e\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u524d\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5b50\u4e32\u5e76\u4e14\u524d\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u6bd4\u540e\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u8981\u957f\u65f6\u7684\u60c5\u51b5\u3002  \n\n\u6700\u540e\u5949\u4e0a AC \u4ee3\u7801\uff1a  \n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nchar ans[105];\nstring s[105];\nqueue<char> q;\nint n,cnt,in[205];\nvector<char> nbr[205];\nsigned main()\n{\n\tcin >> n;\n\tfor(int i=1; i<=n; i++)\n\t{\n\t\tcin >> s[i];\n\t\tif (i==1)\n\t\t\tcontinue;\n\t\tint j;\n\t\tfor(j=0; j<min(s[i-1].size(),s[i].size()); j++)\n\t\t{\n\t\t\tchar c1=s[i-1][j],c2=s[i][j];\n\t\t\tif (c1!=c2)\n\t\t\t{\n\t\t\t\tnbr[c1].push_back(c2);\n\t\t\t\tin[c2]++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (j==min(s[i-1].size(),s[i].size())&&s[i-1].size()>s[i].size())\n\t\t{\n\t\t\tcout << \"Impossible\";\n\t\t\treturn 0;\n\t\t}\n\t}\n\tfor(char i='a'; i<='z'; i++)\n\t\tif (in[i]==0)\n\t\t\tq.push(i);\n\twhile(q.empty()==false)\n\t{\n\t\tchar cur=q.front();\n\t\tq.pop();\n\t\tans[++cnt]=cur;\n\t\tfor(int i=0; i<nbr[cur].size(); i++)\n\t\t{\n\t\t\tchar nxt=nbr[cur][i];\n\t\t\tin[nxt]--;\n\t\t\tif (in[nxt]==0)\n\t\t\t\tq.push(nxt);\n\t\t}\n\t}\n\tif (cnt==26)\n\t\tfor(int i=1; i<=cnt; i++)\n\t\t\tcout << ans[i];\n\telse\n\t\tcout << \"Impossible\";\n\treturn 0;\n}\n```",
        "postTime": 1640690559,
        "uid": 367194,
        "name": "kdy20100729",
        "ccfLevel": 0,
        "title": "CF510C \u9898\u89e3"
    },
    {
        "content": ">~~\u6ca1\u6709\u56fe\uff0c\u5c31\u8981\u521b\u9020\u56fe\u3002~~  \n~~\u2014\u2014\u9c81\u8fc5~~\n\n\u770b\u5230\u8fd9\u9898\u6211\u9996\u5148\u60f3\u5230\u7684\u7b97\u6cd5\u662fFloyd\u3010\u6211\u4eec\u8001\u5e08\u5f53\u65f6\u6559\u7684\u662f\u5982\u679c\u9700\u8981\u6bd4\u8f83\u591a\u4e2a\u6570\uff081000 \u4e2a\u4ee5\u4e0b\uff09\uff0c\u5927\u6982\u7387\u662f\u4f7f\u7528 Floyd\u3011\uff0c\u4f46\u662f\u7b97\u6cd5\u6807\u7b7e\u5e76\u6ca1\u6709Floyd\uff08\u5c3d\u7ba1\u5982\u6b64\u4e00\u4f1a\u4f60\u4eec\u5c31\u4f1a\u53d1\u73b0 Floyd \u771f\u7684\u5f88\u6709\u7528\uff09\uff0c\u53cd\u5012\u662f\u6709\u4e00\u4e2a\u201c\u62d3\u6251\u6392\u5e8f\u201d\u3002\u4f46\u662f\u65e0\u8bba\u54ea\u79cd\u7b97\u6cd5\u90fd\u9700\u8981\u6211\u4eec\u5148\u5efa\u56fe\uff0c\u8fd9\u4e0b\u6574\u9053\u9898\u7684\u903b\u8f91\u5c31\u57fa\u672c\u6e05\u695a\u4e86\u3002  \n~~\uff08\u79e6\u98ce\u5f0f\u6218\u672f\u505c\u987f\uff09~~  \n\u4f46\u4e8b\u5b9e\u771f\u7684\u5982\u6b64\u5417\uff1f  \n\u5176\u5b9e\u5b57\u5178\u5e8f\u4e2d\u6709\u5f88\u591a\u4e0d\u5bb9\u6613\u88ab\u6ce8\u610f\u5230\u7684\u5c0f\u7ec6\u8282\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u5f00\u59cb\u505a\u9898\u4e4b\u524d\uff0c\u4e0d\u59a8\u5148\u770b\u770b[\u5b57\u5178\u5e8f\u7684\u5b9a\u4e49](https://baike.baidu.com/item/%E5%AD%97%E5%85%B8%E5%BA%8F/7786229)\u3002\u5176\u4e2d\u6bd4\u8f83\u65b9\u6cd5\u5982\u4e0b\uff08\u81f3\u4e8e\u6211\u4e3a\u5565\u8981\u5199\u8fd9\u4e48\u57fa\u7840\u7684\u4e1c\u897f\uff0c\u770b\u5230\u540e\u9762\u5c31\u77e5\u9053\u4e86\uff09\uff1a\n>\u5bf9\u4e8e\u4e24\u4e2a\u957f\u5ea6\u5206\u522b\u4e3a $n$ \u548c $m$ \u7684\u5b57\u7b26\u4e32 $a$ \u548c $b$\uff0c\n>+ \u9996\u5148\u6bd4\u8f83 $a_1$ \u548c $b_1$\uff0c\u82e5 $a_1$ \u5728\u5b57\u6bcd\u8868\u4e2d\u6bd4 $b_1$ \u66f4\u9760\u524d\uff0c\u5219 $a$ \u6bd4 $b$ \u66f4\u9760\u524d\u3002\n>+ \u82e5 $a_1 = b_1 $\uff0c\u5219\u6bd4\u8f83\u5b57\u7b26\u4e32 $\\{a_1,a_2,a_3,...,a_n\\}$ \u548c\u5b57\u7b26\u4e32 $\\{b_1,b_2,b_3,...,b_m\\}$\u3002  \n>\u7279\u5224\uff1a  \n>+ \u82e5 $a=\\{b_1,b_2,b_3,...,b_n\\}$\uff0c\u5219 $a$ \u6bd4 $b$ \u66f4\u9760\u524d\u3002\n\n\u53cd\u8fc7\u6765\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u901a\u8fc7\u5b57\u5178\u5e8f\u6c42\u5b57\u6bcd\u8868\u7684\u8fc7\u7a0b\uff1a  \n>\u5bf9\u4e8e\u4e24\u4e2a\u957f\u5ea6\u5206\u522b\u4e3a $n$ \u548c $m$ \u7684\u5b57\u7b26\u4e32 $a$ \u548c $b$\uff0c\n>+ \u9996\u5148\u6bd4\u8f83 $a_1$ \u548c $b_1$\uff0c\u82e5 $a$ \u6bd4 $b$ \u66f4\u9760\u524d\uff0c\u5219 $a_1$ \u5728\u5b57\u6bcd\u8868\u4e2d\u6bd4 $b_1$ \u66f4\u9760\u524d\u3002\n>+ \u82e5 $a_1 = b_1 $\uff0c\u5219\u6bd4\u8f83\u5b57\u7b26\u4e32 $\\{a_1,a_2,a_3,...,a_n\\}$ \u548c\u5b57\u7b26\u4e32 $\\{b_1,b_2,b_3,...,b_m\\}$\u3002  \n\n\u7531\u6b64\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u7b2c\u4e00\u6bb5\u4ee3\u7801\uff1a\u6c42\u5b57\u6bcd\u95f4\u5173\u7cfb\uff1a  \n```cpp\nvoid getrel(string a,string b){\n\tif(!a.length() || !b.length()) return;\n\tif(a[0]==b[0]){\n\t\tif(a.length()>1 && b.length()>1) getrel(a.substr(1),b.substr(1));\n\t\treturn;\n\t}\n\tadd(a[0],b[0]);\n\treturn;\n}\n```\n\n\n\u63a5\u7740\u6211\u4eec\u518d\u6765\u770b~~\u9a97\u5206\u52a9\u624b~~ `Impossible` \u7684\u6210\u56e0\uff0c\u65e0\u975e\u4e09\u79cd\uff1a  \n+ Case 1\uff1a\u5f97\u51fa\u7ed3\u8bba\u4e2d\u5b57\u6bcd $letter_a$ \u6bd4 $letter_b$ \u9760\u524d\uff0c\u4e14 $letter_b$ \u6bd4 $letter_a$ \u9760\u524d\u3002  \n+ Case 2\uff1a\u5f97\u51fa\u7ed3\u8bba\u4e2d $letter_a$ \u6bd4\u5176\u672c\u8eab\u66f4\u9760\u524d\u3002  \n+ Case 3\uff1a\u5b57\u7b26\u4e32 `a.substr(0,x)` \uff08$x<length(a)$\uff09\u6bd4\u5b57\u7b26\u4e32 `a` \u66f4\u9760\u524d\u3002\uff08\u8fd9\u4e00\u70b9\u56f0\u6270\u4e86\u6211\u8fd9\u4e2a\u849f\u84bb\u5c06\u8fd1\u534a\u4e2a\u5c0f\u65f6\uff09  \n\n\u63a5\u4e0b\u6765\u6574\u6bb5\u4ee3\u7801\u7684\u903b\u8f91\u5c31\u51fa\u6765\u4e86\uff1a  \n1. \u8f93\u5165\uff0c\u5224\u65ad\u662f\u5426\u5b58\u5728 Case 3\n2. \u94fe\u5f0f\u524d\u5411\u661f\u4e0a\u5efa\u56fe\uff08\u4e0a\u9762\u5df2\u7ecf\u8d34\u4e86\u4ee3\u7801\uff09  \n3. \u5c06\u94fe\u5f0f\u524d\u5411\u661f\u4e0a\u7684\u56fe\u8f6c\u6362\u5230\u4e00\u4e2a\u77e9\u9635\u4e0a\uff08\u65b9\u4fbf\u8fd0\u884c Floyd\uff09 \u5e76\u7edf\u8ba1\u51fa\u5ea6\uff08\u65b9\u4fbf\u8fd0\u884c\u62d3\u6251\u6392\u5e8f\uff09 \n4. \u901a\u8fc7Floyd\u627e\u51fa\u6240\u6709\u53ef\u4ee5\u63a8\u51fa\u7684\u5b57\u6bcd\u5173\u7cfb  \n5. \u5728\u77e9\u9635\u4e2d\u5224\u65ad\u662f\u5426\u6709 Case 1 \u548c Case 2  \n6. \u8fd0\u884c\u62d3\u6251\u6392\u5e8f\uff0c\u627e\u5230\u4e00\u7ec4\u89e3  \n\u5b8c\u6574\u4ee3\u7801\uff1a  \n```cpp\n//Luogu-CF510C Solution Version \u9898\u89e3\u7248\u672c \n//Luogu @W53729 (Userid 363523)\n//@_Qijia (Userid 363524) AK IOI!\n#include<iostream>\n#include<string>\n#include<queue>\n#define regll register long long\n#define regint register int\n#define regshort register short\n#define _Qijia using\n#define AK namespace\n#define IOI std\n_Qijia AK IOI;//\u5927\u4f6c\u4fdd\u4f51\u6211AC\uff08\uff1f \nint n,last[300],rcnt,ind[300];\nstring name[105],ans;\nbool rel[300][300];\nchar curr,targ;\nqueue<char> qu;\nstruct edge{\n\tchar to;\n\tint prev;\n} fig[10005];\nvoid add(int s,int e){\n\t++rcnt;\n\tfig[rcnt]={e,last[s]};\n\tlast[s]=rcnt;\n}\nvoid getrel(string a,string b){\n\tif(!a.length() || !b.length()) return;\n\tif(a[0]==b[0]){\n\t\tif(a.length()>1 && b.length()>1) getrel(a.substr(1),b.substr(1));\n\t\treturn;\n\t}\n\tadd(a[0],b[0]);\n\treturn;\n}\nvoid trans(){\n\tfor(char i='a';i<='z';++i)\n\t\tfor(regint j=last[i];j;j=fig[j].prev){\n\t\t\trel[i][fig[j].to]=true;\n\t\t\t++ind[fig[j].to];\n\t\t}\n\treturn;\n}\nvoid floyd(){\n\tfor(char k='a';k<='z';++k)\n\t\tfor(char i='a';i<='z';++i)\n\t\t\tfor(char j='a';j<='z';++j)\n\t\t\t\tif(rel[i][k] && rel[k][j]) rel[i][j]=true;\n\treturn;\n}\nsigned main(){\n\tios::sync_with_stdio(false);//\u52a0\u901f\u9ed1\u79d1\u6280\n\t//Step 1 \n\tcin>>n;\n\tfor(regint i=1;i<=n;++i) cin>>name[i];\n\tfor(regint i=1;i<=n-1;++i){\n\t\tif(name[i].length()>name[i+1].length() && name[i+1]==name[i].substr(0,name[i+1].length())){\n\t\t\tcout<<\"Impossible\";\n\t\t\treturn 0; \n\t\t}\n\t}\n\t\n\t//Step 2\n\tfor(regint i=1;i<=n;++i)\n\t\tfor(regint j=i+1;j<=n;++j)\n\t\t\tgetrel(name[i],name[j]);\n\t\n\t//Step 3\n\ttrans();\n\t\n\t//Step 4\n\tfloyd();\n\t\n\t//Step 5\n\tfor(char i='a';i<='z';++i)\n\t\tfor(char j=i+1;j<='z';++j)\n\t\t\tif(rel[i][j] && rel[j][i]){\n\t\t\t\tcout<<\"Impossible\";\n\t\t\t\treturn 0;\n\t\t\t}\n\tfor(char i='a';i<='z';++i)\n\t\tif(rel[i][i]){\n\t\t\tcout<<\"Impossible\";\n\t\t\treturn 0;\n\t\t}\n\t\t\n\t//Step 6 \n\tfor(char i='a';i<='z';++i)\n\t\tif(!ind[i]) qu.push(i);\n\twhile(qu.size()){\n\t\tcurr=qu.front(); \n\t\tqu.pop();\n\t\tcout<<curr;\n\t\tfor(regint j=last[curr];j;j=fig[j].prev){\n\t\t\ttarg=fig[j].to;\n\t\t\t--ind[targ];\n\t\t\tif(!ind[targ]) qu.push(targ);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1614219115,
        "uid": 363523,
        "name": "Enterpr1se",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF510C\u3010Fox and Names\u3011"
    },
    {
        "content": "\u8be6\u89c1\u6211\u7684[\u535a\u5ba2](https://www.cnblogs.com/qixingzhi/p/9299446.html)\n----------------\n\n\u601d\u8def\u5206\u6790\uff1a\n       \n\u8981\u662f\u628a\u8fd9\u9053\u9898\u8054\u7cfb\u5230\u56fe\u4e0a\u5c31\u5f88\u5bb9\u6613\u60f3\u4e86\u3002\n\n\u5982\u4f55\u5efa\u56fe\uff1f\u7531\u4e8e\u6700\u540e\u8981\u6c42\u540d\u5b57\u6ee1\u8db3\u5b57\u5178\u5e8f\uff0c\u6240\u4ee5\u4e0d\u59a8\u4ee5\u5b57\u6bcd\u4e3a\u8282\u70b9\uff0c\u7136\u540e\u6309\u7167\u9898\u610f\u7684\u987a\u5e8f\u4ece\u5c0f\u7684\u5230\u5927\u7684\u8fde\u8fb9\u3002\u5efa\u56fe\u4e86\u53c8\u4ec0\u4e48\u7528\uff1f\u5982\u679c\u56fe\u5b58\u5728\u73af\uff0c\u90a3\u4e48\u4e5f\u5c31\u610f\u5473\u7740\u77db\u76fe\u4e86\u2014\u2014\u56e0\u4e3a\u8fd9\u6bd4\u81ea\u5df1\u5c0f\u7684\u8282\u70b9\u6bd4\u81ea\u5df1\u5927\u3002\u56e0\u6b64\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u5408\u6cd5\u7684\u5b57\u5178\u5e8f\u7684\u5224\u65ad\u4f9d\u636e\u5c31\u662f\u5efa\u7684\u56fe\u662f\u5426\u5b58\u5728\u73af\u3002\n\n\u7b2c\u4e8c\u6b65\uff0c\u5982\u4f55\u8f93\u51fa\u4efb\u610f\u4e00\u4e2a\u65b9\u6848\uff1f\u8fd9\u5f88\u7b80\u5355\uff0c\u7531\u4e8e\u6709\u53ef\u80fd\u6709\u7684\u5b57\u6bcd\u6839\u672c\u6ca1\u6709\u53c2\u4e0e\u5efa\u56fe\uff0c\u6240\u4ee5\u8fd9\u4e9b\u5b57\u6bcd\u5c31\u4e0d\u9700\u8981\u7ba1\u4e86\u3002\u5bf9\u4e8e\u5728\u56fe\u91cc\u7684\u5b57\u6bcd\uff0c\u5165\u5ea6\u4e3a0\u7684\u70b9\u5c31\u662f\u5df2\u77e5\u7684\u5e94\u5f53\u6700\u5c0f\u7684\u70b9\u2014\u2014\u6240\u4ee5\u6211\u4eec\u8fdb\u884c\u4e00\u6b21\u62d3\u6251\u6392\u5e8f\u6765\u5f97\u5230\u5e8f\u5217\u3002\u6700\u540e\u548c\u5176\u5b83\u5b57\u6bcd\u62fc\u5408\u8d77\u6765\u5c31\u597d\u4e86\u3002\n\n\u4ee3\u7801\u6ce8\u610f\u70b9\uff1a\n\u3000\u3000\n\u6ce8\u610f\u6709\u4e24\u4e2a\u76f8\u540c\u524d\u7f00\u7684\u5b57\u7b26\u4e32\u65f6\uff0c\u5982\u679c\u524d\u9762\u7684\u90a3\u4e2a\u5b57\u7b26\u4e32\u6bd4\u540e\u9762\u7684\u8fd8\u8981\u957f\uff0c\u90a3\u4e48\u4e00\u5b9a\u4e0d\u6ee1\u8db3\uff0c\u76f4\u63a5\u8f93\u51faimpossible\u5c31\u597d\u4e86\u3002\u56e0\u4e3a\u65e0\u8bba\u5b57\u5178\u5e8f\u5982\u4f55\uff0c\u90fd\u4e0d\u53ef\u80fd\u6ee1\u8db3\u524d\u9762\u7684\u5b57\u5178\u5e8f\u6bd4\u540e\u9762\u7684\u5c0f\u3002\n\n```cpp\n/** This Program is written by QiXingZhi **/\n#include <cstdio>\n#include <queue>\n#include <iostream>\n#include <string>\n#include <cstring>\n#include <cstdlib>\n#include <algorithm>\n#define  r  read()\n#define  Max(a,b)  (((a)>(b)) ? (a) : (b))\n#define  Min(a,b)  (((a)<(b)) ? (a) : (b))\nusing namespace std;\ntypedef long long ll;\nconst int N = 1010;\nconst int INF = 1061109567;\ninline int read(){\n    int x = 0; int w = 1; register int c = getchar();\n    while(c ^ '-' && (c < '0' || c > '9')) c = getchar();\n    if(c == '-') w = -1, c = getchar();\n    while(c >= '0' && c <= '9') x = (x << 3) +(x << 1) + c - '0', c = getchar();\n    return x * w;\n}\nstring s[N];\nqueue <int> q;\nvector <int> G[3000];\nbool exist[N],vis[N],b[N],hh[N];\nint rd[N],Q[N],ans_topo[N];\nint n,len1,len2,flg,_cur,t,topo_num;\ninline void AddEdge(int u, int v){\n\texist[u] = 1;\n\texist[v] = 1;\n\tG[u].push_back(v);\n\t++rd[v];\n}\ninline void ThrowOut(){\n\tprintf(\"Impossible\");\n\texit(0);\n}\ninline bool BFS(int x){\n    while(!q.empty()) q.pop();\n    q.push(x);\n    int cur,sz,to;\n    while(!q.empty()){\n        cur = q.front();\n        q.pop();\n        if(cur == _cur){\n            if(flg == -1){\n                ++flg;\n            }\n            else if(flg == 0){\n                return 1;\n            }\n        }\n        if(vis[cur]) continue;\n        vis[cur] = 1;\n        sz = G[cur].size();\n        for(int i = 0; i < sz; ++i){\n            to = G[cur][i];\n            q.push(to);\n        }\n    }\n    return 0;\n}\ninline bool Check_Circle(){\n\tfor(int i = 'a'; i <= 'z'; ++i){\n        memset(vis,0,sizeof(vis));\n        if(exist[i]){\n            _cur = i;\n            flg = -1;\n            if(BFS(_cur)) return 1;\n        }\n    }\n    return 0;\n}\nint main(){\n//\tfreopen(\".in\",\"r\",stdin);\n\tcin >> n;\n\tfor(int i = 1; i <= n; ++i){\n\t\tcin >> s[i];\n\t}\n\tfor(int i = 2; i <= n; ++i){\n\t\tlen1 = s[i-1].size();\n\t\tlen2 = s[i].size();\n\t\tflg = 0;\n\t\tfor(int j = 0; j < len2; ++j){\n\t\t\tif(j >= len1){\n\t\t\t\tflg = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(s[i-1][j] != s[i][j]){\n\t\t\t\tflg = 1;\n\t\t\t\tAddEdge(s[i-1][j],s[i][j]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flg == 0 && len1 > len2){\n\t\t\tThrowOut();\n\t\t}\n\t}\n\tif(Check_Circle() == 1){\n\t\tThrowOut();\n\t}\n\tint flg=0,sz;\n    for(;;){\n        flg = 0, t = 0;\n        for(int i = 'a'; i <= 'z'; ++i){\n            if(rd[i] == 0 && !b[i] && exist[i]){\n                flg = 1;\n                b[i] = 1;\n                Q[++t] = i;\n            }  \n        }\n        if(!flg) break;\n        for(int i = 1; i <= t; ++i){\n            int cur = Q[i];\n            ans_topo[++topo_num] = cur;\n            hh[cur] = 1;\n            sz = G[cur].size();\n            for(int j = 0; j < sz; ++j){\n                --rd[G[cur][j]];\n            }\n        }\n    }\n    for(int i = 1; i <= topo_num; ++i){\n    \tprintf(\"%c\",ans_topo[i]);\n\t}\n\tfor(int i = 'a'; i <= 'z'; ++i){\n\t\tif(!hh[i]){\n\t\t\tprintf(\"%c\",i);\n\t\t}\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1531378907,
        "uid": 41095,
        "name": "inexistent",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF510C \u3010Fox And Names\u3011"
    },
    {
        "content": "[CF510C](http://codeforces.com/contest/510/problem/C) _Fox And Names_ : \u62d3\u6251\u6392\u5e8f\n\n\u9898\u76ee\u5927\u610f\uff1a\u7ed9\u5b9a $n$ \u4e2a\u5b57\u7b26\u4e32\uff0c\u6c42\u51fa\u4e00\u4e2a\u5b57\u5178\u662f\u7684\u8fd9 $n$ \u4e2a\u5b57\u7b26\u4e32\u662f\u5df2\u7ecf\u6309\u7167\u5b57\u5178\u5e8f\u6392\u597d\u5e8f\u4e86\u7684\u3002\n\n\u5982\u679c\u6211\u4eec\u6709 $n$ \u4e2a\u5b57\u7b26\u4e32\uff0c\u6211\u4eec\u81f3\u591a\u53ef\u4ee5\u5f97\u5230 $n-1$ \u4e2a\u7c7b\u4f3c\u4e8e\u5b57\u7b26 $s$ \u5c0f\u4e8e\u5b57\u7b26 $t$ \u7684\u7ea6\u675f\u6761\u4ef6\u3002\u5047\u8bbe\u7b2c $i$ \u4e2a\u5b57\u7b26\u4e32\u4e3a $a_i$ \uff0c\u90a3\u4e48\u5982\u679c\u5b83\u4eec\u6309\u7167\u5b57\u5178\u5e8f\u6392\u5217\u597d\u7684\u8bdd\u4e00\u5b9a\u6ee1\u8db3 $\\forall a_i \\leq a_{i+1}$ .\u6a21\u62df\u4e00\u4e0b\u6bd4\u8f83\u5b57\u5178\u5e8f\u7684\u8fc7\u7a0b\uff0c\u8981\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\u5b57\u5178\u5e8f\u65f6\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e24\u4e2a\u6307\u9488\u4e00\u4f4d\u4f4d\u5730\u5f80\u540e\u9762\u626b\uff0c\u5728\u8fd9\u91cc\u4e5f\u4e00\u6837\uff0c\u626b\u5230\u7b2c\u4e00\u4e2a\u4e0d\u76f8\u540c\u7684\u4f4d\u7f6e\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230 $a_i[j] < a_{i+1}[j]$ .\n\n\u4e4b\u540e\uff0c\u5c0626\u4e2a\u5b57\u6bcd\u5f53\u4f5c\u7ed3\u70b9\uff0c\u6309\u7167\u8fd9\u4e9b\u6761\u4ef6\u8fdb\u884c\u4e00\u6b21\u62d3\u6251\u6392\u5e8f\u5373\u53ef\uff0c\u5982\u679c\u65e0\u6cd5\u6392\u5e8f\u5219\u8bf4\u660e\u8fd9\u6837\u7684\u5b57\u5178\u4e0d\u5b58\u5728\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nvector<int> G[26];\nint in[26] = {};\nchar pos[26], *nowAt = pos;\n\nint main()\n{\n\tint totStrings, it; cin >> totStrings;\n\tstring a, b;\n\n\tif (totStrings == 1) {\n\t\tfor (char it = 'a'; it <= 'z'; it++)cout << it;\n\t\tputchar('\\n'); return 0;\n\t}\n\n\tcin >> b;\n\tfor (int now = 1; now < totStrings; now++) {\n\t\ta = b; cin >> b;\n\t\tfor (int i = 0; i < a.length(); i++) {\n\t\t\tif (i >= b.length()) { puts(\"Impossible\");return 0; }\n\t\t\tif (a[i] != b[i]) {\n\t\t\t\tG[a[i] - 'a'].push_back(b[i] - 'a');\n\t\t\t\tin[b[i] - 'a']++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tqueue<int> que;\n\tfor (int i = 0; i < 26; i++)if (in[i] == 0)que.push(i);\n\twhile (!que.empty()) {\n\t\tit = que.front(); que.pop();\n\t\t*nowAt++ = it;\n\t\tfor (const auto &_it : G[it])\n\t\t\tif (--in[_it] == 0)\n\t\t\t\tque.push(_it);\n\t}\n\n\tif (nowAt != pos + 26)puts(\"Impossible\");\n\telse for (int i = 0; i < 26; i++)putchar(pos[i] + 'a');\n\tputchar('\\n');\n\n\t//system(\"pause\");\n\treturn 0;\n}\n```\n\n",
        "postTime": 1535046528,
        "uid": 78371,
        "name": "Mickey_snow",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF510C \u3010Fox And Names\u3011"
    }
]