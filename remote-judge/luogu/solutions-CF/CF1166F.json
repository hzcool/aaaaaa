[
    {
        "content": "\u7ffb\u8bd1\u6709\u70b9\u95ee\u9898\uff0c\u5f69\u8679\u8def\u4e0d\u4e00\u5b9a\u8981\u662f\u957f\u5ea6\u4e3a $n$ \u7684\uff0c\u662f\u4efb\u610f\u957f\u5ea6\u7684\n\n\u6211\u4eec\u9996\u5148\u53ef\u4ee5\u60f3\u5230 \u5bf9\u4e8e\u70b9 $x$\uff0c\u5b83\u8fde\u51fa\u53bb\u7684\u540c\u79cd\u989c\u8272\u8fde\u7740\u7684\u70b9\u90fd\u662f\u53ef\u4ee5\u76f8\u4e92\u5230\u8fbe\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u4eec\u7528\u5e76\u67e5\u96c6\u5408\u5e76\n\n\u6211\u4eec\u8981\u5feb\u901f\u67e5\u8be2\u4e00\u4e2a\u70b9\u8fde\u51fa\u53bb\u67d0\u79cd\u989c\u8272\u7684\u8fb9\uff0c\u5219\u6211\u4eec\u7528 `map<int,vector<int> >` \u6765\u5b58\u8fb9\n\n\u8fd9\u6837\u6211\u4eec\u5904\u7406\u5b8c\u4e86\u8d70\u5076\u6570\u6b65\u7684\u60c5\u51b5\uff0c\u5bf9\u4e8e\u8d70\u5947\u6570\u6b65\u7684\u60c5\u51b5\uff0c\u6700\u540e\u4e00\u6b65\u662f\u968f\u4fbf\u8d70\u7684\n\n\u6211\u4eec\u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u96c6\u5408\u5b58\u4e00\u4e2a `set`\uff0c\u5b58\u96c6\u5408\u4e2d\u80fd\u4e00\u6b65\u8d70\u5230\u7684\u70b9\uff0c\u542f\u53d1\u5f0f\u5408\u5e76\u5373\u53ef\n\n```cpp\nconst int N = 100010;\nmap<int,vector<int> > v[N];\nset<int> s[N];int fa[N];\nint getf(int u) { return fa[u] == u ? u : fa[u] = getf(fa[u]); }\nvoid merge(int u,int v)\n{\n\tu = getf(u),v = getf(v);\n\tif(u != v)\n\t{\n\t\tif(s[u].size() < s[v].size()) swap(u,v);\n\t\tfor(int i:s[v]) s[u].insert(i);fa[v] = u;\n\t}\n}\nvoid add_edge()\n{\n\tint x = read(),y = read(),w = read();\n\ts[getf(x)].insert(y),s[getf(y)].insert(x);\n\tv[x][w].push_back(y),merge(y,v[x][w][0]);\n\tv[y][w].push_back(x),merge(x,v[y][w][0]);\n}\nvoid query()\n{\n\tint x = read(),y = read();\n\tif(getf(x) == getf(y) || s[getf(x)].count(y)) puts(\"Yes\");\n\telse puts(\"No\");\n}\nint n,m,q;\nint main()\n{\n\tn = read(),m = read(),read(),q = read();\n\tfor(int i = 1;i <= n;i++) fa[i] = i;\n\twhile(m--) add_edge();\n\twhile(q--)\n\t{\n\t\tchar s[10];scanf(\"%s\",s);\n\t\tif(s[0] == '?') query();\n\t\telse add_edge();\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1593414723,
        "uid": 53994,
        "name": "81179332_",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1166F \u3010Vicky's Delivery Service\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u79cd\u4e0d\u540c\u7684\u89e3\u6cd5\u3002\n\n## \u601d\u8def\n\n\u9996\u5148\u6709\u4e00\u79cd\u601d\u8def\u662f\uff0c\u6784\u9020\u4e00\u4e2a\u65b0\u56fe\uff0c\u5982\u679c\u6709\u4e00\u6761\u8def\u5f84 $x \\to y \\to z$ \u4e14\u4e24\u6761\u8fb9\u7684\u8fb9\u6743\u76f8\u7b49\uff0c\u5219\u8fde\u63a5 $x,z$\u3002\u8fd9\u6837\u5bf9\u4e8e\u67e5\u8be2\uff0c\u82e5\u8def\u5f84\u957f\u5ea6\u4e3a\u5076\u6570\uff0c\u5224\u65ad $u,v$ \u662f\u5426\u8054\u901a\u5373\u53ef\uff1b\u82e5\u8def\u5f84\u957f\u5ea6\u4e3a\u5947\u6570\uff0c\u5219\u53ef\u4ee5\u679a\u4e3e $v$ \u7684\u6bcf\u4e00\u4e2a\u76f8\u90bb\u7684\u70b9\u5224\u65ad $u$ \u662f\u5426\u4e0e\u5b83\u8054\u901a\u3002\n\n\u4f46\u662f\u65b0\u56fe\u7684\u8fb9\u6570\u4f1a\u5f88\u5927\u3002\u6ce8\u610f\u5230\u53ea\u9700\u8981\u5224\u65ad\u8fde\u901a\u6027\uff0c\u6240\u4ee5\u5bf9\u4e8e\u4e00\u4e2a\u70b9\u7684\u6240\u6709\u8fb9\u6743\u4e3a $w$ \u7684\u8fb9\uff0c\u5e76\u4e0d\u9700\u8981\u4e24\u4e24\u8fde\u8fb9\uff0c\u53ea\u9700\u8981\u5c06\u76f8\u90bb\u7684\u4e24\u4e2a\u8fde\u8fb9\u5373\u53ef\u3002\u8fd9\u6837\u8fb9\u6570\u5c31\u964d\u4e0b\u6765\u4e86\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u67e5\u8be2\u65f6\u9700\u8981\u679a\u4e3e\u4e00\u4e2a\u70b9\u7684\u76f8\u90bb\u7684\u70b9\uff0c\u82e5\u8fd9\u4e2a\u70b9\u7684\u5ea6\u6570\u5f88\u5927\u5c31\u4f1a\u65f6\u95f4\u8d85\u9650\u3002\u8003\u8651\u5bf9\u5ea6\u6570\u6839\u53f7\u5206\u6cbb\uff0c\u82e5\u5ea6\u6570 $\\le B$\uff0c\u5219 $\\mathcal O(B)$ \u904d\u5386\u5224\u65ad\uff1b\u5426\u5219\u8fd9\u6837\u7684\u70b9\u6700\u591a\u53ea\u6709 $\\dfrac{m+q}{B}$ \u4e2a\uff0c\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u70b9\u5355\u72ec\u5904\u7406\u3002\u5bf9\u4e8e\u8fd9\u6837\u7684\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5148\u5c06\u8fd9\u4e2a\u70b9\u4e0e\u76f8\u90bb\u7684\u70b9\u5728\u65b0\u56fe\u4e2d\u8fde\u8fb9\uff0c\u8fd9\u6837\u5c31\u4e0d\u7528\u904d\u5386\u76f8\u90bb\u7684\u70b9\u4e86\u3002\u540e\u9762\u7684\u6309\u7167\u4e0a\u9762\u7684\u65b9\u5f0f\u505a\u5373\u53ef\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,c,q;\nstruct edge { int u,v,w; } ed[100010];\nvector<int> e1[100010];\nmap<int,int> e2[100010];\nint in[100010];\nstruct Query\n{\n\tchar op; int u,v,w;\n} q1[100010];\nint fa[100010]; int find(int x) { while(x!=fa[x]) x=fa[x]=fa[fa[x]]; return x; }\nint ans[100010];\nvoid add(int u,int v,int w)\n{\n\te1[u].push_back(v),e1[v].push_back(u);\n\tif(e2[u][w]!=0) fa[find(e2[u][w])]=find(v);\n\tif(e2[v][w]!=0) fa[find(e2[v][w])]=find(u);\n\te2[u][w]=v,e2[v][w]=u;\n}\nint main()\n{\n\tcin>>n>>m>>c>>q;\n\tfor(int i=1; i<=m; ++i) cin>>ed[i].u>>ed[i].v>>ed[i].w,++in[ed[i].u],++in[ed[i].v];\n\tfor(int i=1; i<=q; ++i)\n\t{\n\t\tcin>>q1[i].op;\n\t\tif(q1[i].op=='+') cin>>q1[i].u>>q1[i].v>>q1[i].w,++in[q1[i].u],++in[q1[i].v];\n\t\tif(q1[i].op=='?') cin>>q1[i].u>>q1[i].v;\n\t}\n\tmemset(ans,-1,sizeof(ans));\n\tfor(int i=1; i<=n; ++i)\n\t{\n\t\tif(in[i]<=500) continue;\n\t\tfor(int j=1; j<=n; ++j) fa[j]=j,e2[j].clear();\n\t\tfor(int j=1; j<=m; ++j) add(ed[j].u,ed[j].v,ed[j].w);\n\t\tfor(int j:e1[i]) fa[find(i)]=find(j);\n\t\tint now=0;\n\t\tfor(int j=1; j<=q; ++j)\n\t\t{\n\t\t\tif(q1[j].op=='+')\n\t\t\t{\n\t\t\t\tadd(q1[j].u,q1[j].v,q1[j].w);\n\t\t\t\tif(q1[j].u==i || q1[j].v==i) fa[find(q1[j].u)]=find(q1[j].v);\n\t\t\t}\n\t\t\tif(q1[j].op=='?' && q1[j].v==i)\n\t\t\t{\n\t\t\t\tans[j]=(find(q1[j].u)==find(i));\n\t\t\t\t++now;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1; i<=n; ++i) fa[i]=i,e1[i].clear(),e2[i].clear(),e1[i].push_back(i);\n\tfor(int i=1; i<=m; ++i) add(ed[i].u,ed[i].v,ed[i].w);\n\tfor(int i=1; i<=q; ++i)\n\t{\n\t\tif(q1[i].op=='+') add(q1[i].u,q1[i].v,q1[i].w);\n\t\tif(q1[i].op=='?' && in[q1[i].v]<=500)\n\t\t{\n\t\t\tans[i]=0;\n\t\t\tfor(int j:e1[q1[i].v])\n\t\t\t{\n\t\t\t\tif(find(q1[i].u)==find(j)) { ans[i]=1; break; }\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1; i<=q; ++i) if(ans[i]!=-1) puts(ans[i]==1?\"Yes\":\"No\");\n\treturn 0;\n}\n```",
        "postTime": 1679469439,
        "uid": 353688,
        "name": "\u738b\u7199\u6587",
        "ccfLevel": 0,
        "title": "CF1166F \u9898\u89e3"
    },
    {
        "content": "\u7531\u4e8e\u5f69\u8679\u8def\u7684\u524d $2 \\lfloor\\frac{n}{2}\\rfloor$ \u6761\u8def\u7684\u7279\u6b8a\u9650\u5236\uff0c\u8003\u8651\u5c06\u4e00\u6761\u5f69\u8679\u8def\u4e2d\u989c\u8272\u76f8\u540c\u7684\u8fb9\u653e\u5728\u4e00\u8d77\u8003\u8651\u3002\n\n\u5177\u4f53\u5730\uff0c\u82e5 $x \\to z \\to y$\uff0c\u4e24\u6761\u8fb9\u989c\u8272\u76f8\u540c\uff0c\u6211\u4eec\u5c31\u628a $x$ \u548c $y$ \u653e\u5230\u4e00\u4e2a\u5e76\u67e5\u96c6\u4e2d\u3002\n\n\u8fd9\u65f6\u53ef\u4ee5\u53d1\u73b0 $x\\to y$ \u6709\u5f69\u8679\u8def\u7b49\u4ef7\u4e8e $x$ \u548c $y$ \u5728\u4e00\u4e2a\u5e76\u67e5\u96c6\u4e2d\u6216\u8005 $x$ \u6240\u5728\u7684\u5e76\u67e5\u96c6\u4e2d\u6709\u70b9\u53ef\u4ee5\u4e00\u6b65\u5230 $y$\u3002\n\n\u7528 `set` \u7ef4\u62a4\u5e76\u67e5\u96c6\u7684\u90bb\u63a5\u70b9\u96c6\uff0c\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u590d\u6742\u5ea6 $O(n \\log^2n)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int NR=1e5+10;\nint n,m,c,q,fa[NR],size[NR];\nmap<int,int>mp[NR];\nset<int>s[NR];\n\nint get(int x){\n\tif(fa[x]==x)return x;\n\treturn fa[x]=get(fa[x]);\n}\nvoid merge(int x,int y){\n\tx=get(x);y=get(y);\n\tif(x==y)return;\n\tif(size[x]>size[y])swap(x,y);\n\tfa[x]=y;size[y]+=size[x];\n\tfor(int k:s[x])s[y].insert(k);\n\ts[x].clear();\n}\nvoid add(int x,int y,int z){\n\ts[get(x)].insert(y);\n\tif(mp[x][z])merge(mp[x][z],y);\n\telse mp[x][z]=y;\n}\n\nint main(){\n\tcin>>n>>m>>c>>q;\n\tfor(int i=1;i<=n;i++)fa[i]=i,size[i]=1;\n\tfor(int i=1,x,y,z;i<=m;i++)\n\t\tscanf(\"%d%d%d\",&x,&y,&z),add(x,y,z),add(y,x,z);\n\twhile(q--){\n\t\tchar opt;scanf(\" %c\",&opt);\n\t\tif(opt=='?'){\n\t\t\tint x,y;scanf(\" %d %d\",&x,&y);\n\t\t\tint x0=get(x),y0=get(y);\n\t\t\tif(x0==y0)puts(\"Yes\");\n\t\t\telse if(s[x0].count(y))puts(\"Yes\");\n\t\t\telse puts(\"No\");\n\t\t}\n\t\telse{\n\t\t\tint x,y,z;scanf(\" %d %d %d\",&x,&y,&z);\n\t\t\tadd(x,y,z);add(y,x,z);\n\t\t}\n\t}\n\treturn 0;\n} \n```",
        "postTime": 1672649932,
        "uid": 117771,
        "name": "intel_core",
        "ccfLevel": 7,
        "title": "CF1166F \u9898\u89e3"
    }
]