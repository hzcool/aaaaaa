[
    {
        "content": "\u5410\u69fd\uff1a\u8fd9\u9898\u653e\u5728 $\\text {div.2 F}$ \u5408\u9002\u5417\uff08\n\n\u9898\u76ee\u8981\u4f60\u627e\u5230\u533a\u95f4\u4e2d\u51fa\u73b0\u6b21\u6570\u4e3a\u5947\u6570\u7684\u6570\u4e2d\u6700\u5c0f\u7684\u90a3\u4e00\u4e2a\u3002\n\n\u8003\u8651\u4f7f\u7528\u5f02\u6216\u54c8\u5e0c\uff0c\u7ed9\u6bcf\u4e2a\u6570\u4e00\u4e2a\u968f\u673a\u6743\u503c\uff0c\u7531\u4e8e\u5f02\u6216\u7684\u4f18\u7f8e\u6027\u8d28\uff0c\u4e24\u4e24\u76f8\u6d88\uff0c\u6211\u4eec\u6709\u4ee5\u4e0b\u7ed3\u8bba\uff1a\u82e5\u8fd9\u4e2a\u533a\u95f4\u5185\u5b58\u5728\u51fa\u73b0\u6b21\u6570\u4e3a\u5947\u6570\u7684\u6570\uff0c\u5219\u8fd9\u6bb5\u533a\u95f4\u5bf9\u5e94\u7684\u968f\u673a\u6743\u503c\u5f02\u6216\u548c\u4e0d\u4e3a $0$\u3002\n\n\u8fd9\u662f\u663e\u7136\u7684\uff0c\u56e0\u4e3a\u51fa\u73b0\u6b21\u6570\u4e3a\u5076\u6570\u7684\u6570\uff0c\u5b83\u4eec\u968f\u673a\u6743\u503c\u7684\u5f02\u6216\u548c\u90fd\u88ab\u4e24\u4e24\u62b5\u6d88\u4e86\u3002\n\n\u73b0\u5728\u6211\u4eec\u6765\u627e\u51fa\u6700\u5c0f\u7684\u90a3\u4e00\u4e2a\u3002\n\n\u8003\u8651\u4f7f\u7528\u4e3b\u5e2d\u6811\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u524d\u7f00\u7684\u4fe1\u606f\uff0c\u67e5\u8be2\u65f6\u76f4\u63a5\u4e3b\u5e2d\u6811\u4e0a\u4e8c\u5206\u5373\u53ef\uff0c\u590d\u6742\u5ea6\u4e3a $O((n+q)\\log n)$\u3002\n\n\u4ee3\u7801\uff08\u6ce8\u610f\u8fd9\u91cc\u5e76\u6ca1\u6709\u5bf9 $a_i$ \u79bb\u6563\u5316\uff09\uff1a\n```cpp\n#include<bits/stdc++.h>\n#include<bits/extc++.h>\nusing namespace std;\nusing namespace __gnu_pbds;\nconst int inf=2e9;\nint n,a[200005],root[200005];\nmt19937 rnd(random_device{}());\nmap<int,int> mp;\nstruct node{\n\tint lc,rc,val;\n};\nstruct segtree{\n\tnode tree[20000005];\n\tint cnt=0;\n\t#define M(l,r) (l+(r-l)/2)\n\tvoid clone(int &p)\n\t{\n\t\ttree[++cnt]=tree[p];\n\t\tp=cnt;\n\t}\n\tvoid pushup(int p)\n\t{\n\t\ttree[p].val=tree[tree[p].lc].val^tree[tree[p].rc].val;\n\t}\n\tvoid modify(int &p,int l,int r,int x,int k)\n\t{\n\t\tclone(p);\n\t\tif(l==r)\n\t\t{\n\t\t\ttree[p].val^=k;\n\t\t\treturn ;\n\t\t}\n\t\tint mid=M(l,r);\n\t\tif(x<=mid) modify(tree[p].lc,l,mid,x,k);\n\t\telse modify(tree[p].rc,mid+1,r,x,k);\n\t\tpushup(p);\n\t}\n\tint query(int p1,int p2,int l,int r)\n\t{\n\t\tif(l==r) return l;\n\t\tint lval=tree[tree[p1].lc].val^tree[tree[p2].lc].val;\n\t\tint mid=M(l,r);\n\t\tif(lval!=0) return query(tree[p1].lc,tree[p2].lc,l,mid);//\u4e3b\u5e2d\u6811\u4e0a\u4e8c\u5206\uff0c\u5982\u679c\u5de6\u5b50\u6811\u7684\u5f02\u6216\u548c\u4e0d\u4e3a 0\uff0c\u6211\u4eec\u53ef\u4ee5\u65ad\u8a00\u5de6\u5b50\u6811\u5185\u5fc5\u7136\u5b58\u5728\u4e00\u4e2a\u51fa\u73b0\u6b21\u6570\u4e3a\u5947\u6570\u7684\u6570\uff0c\u5f80\u5de6\u5b50\u6811\u8d70\u3002\n\t\telse return query(tree[p1].rc,tree[p2].rc,mid+1,r);//\u5426\u5219\u5f80\u53f3\u5b50\u6811\u8d70\n\t}\n}T;\nint main()\n{\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\tcout.tie(0);\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>a[i];\n\t\tif(!mp[a[i]]) mp[a[i]]=rnd();\n\t\troot[i]=root[i-1];\n\t\tT.modify(root[i],0,inf,a[i],mp[a[i]]);\n\t}\n\tint q;\n\tcin>>q;\n\tint lst=0;\n\twhile(q--)\n\t{\n\t\tint l,r;\n\t\tcin>>l>>r;\n\t\tl^=lst,r^=lst;\n\t\tlst=T.query(root[l-1],root[r],0,inf);\n\t\tif(lst==inf) lst=0;\n\t\tcout<<lst<<\"\\n\";\n\t}\n}\n```",
        "postTime": 1670822305,
        "uid": 122836,
        "name": "World_Creater",
        "ccfLevel": 0,
        "title": "CF1771F Hossam and Range Minimum Query"
    },
    {
        "content": "\u4ee5\u6b64\u7eaa\u5ff5\u81ea\u5df1 div2 \u6740\u5230\u4e86 A\u3002\n\n### \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a_i$\uff0c\u591a\u7ec4\u8be2\u95ee $[l, r]$ \u4e2d\u51fa\u73b0\u6b21\u6570\u4e3a\u5947\u6570\u7684\u6700\u5c0f\u503c\u3002\u82e5\u4e0d\u5b58\u5728\u8f93\u51fa $0$\u3002\u5f3a\u5236\u5728\u7ebf\u3002\n\n- $1\\leq n,q \\leq 2\\times 10^5,1\\leq a_i \\leq 10^9$\u3002\n\n### \u601d\u8def\n\n\u5bb9\u6613\u8054\u60f3\u5230\u4e00\u4e2a\u6570\u51fa\u73b0\u5947\u6570\u6b21\u5f02\u6216\u8d77\u6765\u662f\u5176\u672c\u8eab\uff0c\u5076\u6570\u6b21\u5f02\u6216\u8d77\u6765\u5c31\u662f $0$\u3002\u987a\u7740\u5c31\u80fd\u60f3\u5230\u4e00\u79cd\u4e0d\u5bb9\u6613\u51fa\u9519\u7684\u7b97\u6cd5\uff1a\n\n\u53ef\u6301\u4e45\u5316\u6743\u503c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u503c\u7684\u5f02\u6216\u548c\u3002\u53f6\u5b50\u8282\u70b9\u7b2c $i$ \u4e2a\u4f4d\u7f6e\u7b49\u4e8e $cnt_i \\times i$\uff0c\u5176\u4e2d $cnt_i$ \u8868\u793a\u6570 $i$ \u7684\u51fa\u73b0\u6b21\u6570\u6a21 $2$\u3002\u5176\u5b83\u8282\u70b9\u8868\u793a\u5de6\u53f3\u513f\u5b50\u7684\u5f02\u6216\u548c\u3002\n\n\u8be2\u95ee\u65f6\u4e3b\u5e2d\u6811\u4e0a\u4e8c\u5206\uff0c\u5982\u679c\u5de6\u533a\u95f4\u7684\u8fd9\u4e9b\u503c\u5f02\u6216\u8d77\u6765\u4e0d\u662f $0$\uff0c\u5c31\u5f80\u5de6\u8d70\uff1b\u53cd\u4e4b\uff0c\u5f80\u53f3\u8d70\u3002\n\n\u8fd9\u4e2a\u505a\u6cd5\u663e\u7136\u662f\u9519\u7684\uff0c\u6837\u4f8b 2 \u975e\u5e38\u826f\u5fc3\u5730 hack \u6389\u4e86\u3002\u4f8b\u5982 $(11000)_2,(00111)_2,(11111)_2$\u3002\u8fd9\u4e09\u4e2a\u6570\u90fd\u53ea\u51fa\u73b0\u4e86\u4e00\u6b21\uff0c\u4f46\u662f\u5f02\u6216\u8d77\u6765\u6b63\u597d\u662f $0$\uff0c\u5bfc\u81f4\u6211\u4eec\u4ee5\u4e3a\u8fd9\u91cc\u6ca1\u6709\u7b54\u6848\u3002\n\n\u8003\u8651\u6570\u636e\u968f\u673a\u65f6\uff0c\u8fd9\u6837\u7684\u60c5\u51b5\u6781\u96be\u51fa\u73b0\u3002[\u8fd9\u4e2a\u5e16\u5b50](https://www.luogu.com.cn/discuss/548009) \u7b80\u8981\u5730\u8bc1\u660e\u4e86\u5176\u6982\u7387\u662f\u5c0f\u4e8e\u7b49\u4e8e $\\dfrac{1}{V}$ \u7684\uff0c\u5176\u4e2d $V$ \u662f\u503c\u57df\u3002\n\n\u800c\u6b64\u9898\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u91cd\u65b0\u7ed9\u7ef4\u62a4\u7684\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u5b9a\u4e49\uff1a\u53f6\u5b50\u8282\u70b9\u7b2c $i$ \u4e2a\u4f4d\u7f6e\u7b49\u4e8e $cnt_i \\times w_i$\uff0c\u5176\u4e2d $cnt_i$ \u8868\u793a\u6570 $i$ \u7684\u51fa\u73b0\u6b21\u6570\u6a21 $2$\uff0c$w_i$ \u662f\u4e00\u4e2a\u968f\u673a\u7684\u56fa\u5b9a\u6743\u503c\u3002\n\n\u56e0\u6b64\uff0c\u4e3a\u4e86\u65b9\u4fbf\u4e3b\u5e2d\u6811\u52a8\u6001\u5f00\u70b9\u7684\u7a7a\u95f4\uff0c\u4f7f\u7528 mt19937 \u83b7\u5f97 unsigned int \u8303\u56f4\u5185\u7684\u968f\u673a\u6570\u5373\u53ef\u3002\u4ee3\u7801\u4e2d\u4e3a\u4e86\u907f\u514d\u5404\u79cd\u7ec6\u8282\u95ee\u9898\uff0c\u5c06 $w_i$ \u9650\u5b9a\u5728 $[1,2^{30}]$ \u4e4b\u95f4\u3002\u51fa\u9519\u6982\u7387\u5df2\u7ecf\u6781\u4f4e\uff0c\u7ea6 $\\frac{1}{10^9}$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(n\\log n)$\u3002\n\n[AC code record](https://www.luogu.com.cn/record/97890243)\n\n```cpp\nint n, q, a[MAXN], root[MAXN];\nconst int P = 1 << 30;\nmap <int, int> ep1;\n\nstruct setr {\n\tstruct {\n\t\tint lp, rp, sum;\n\t} t[MAXN * 35 << 1];\n\tint tot;\n\t\n\til void pushup(int x) {\n\t\tt[x].sum = t[t[x].lp].sum ^ t[t[x].rp].sum;\n\t}\n\t\n\til int upd(int x, int l, int r, int k, int p) {\n\t\tint now = ++tot; t[now] = t[x];\n\t\tif (l == r) return t[now].sum ^= p, now;\n\t\tint mid = l + r >> 1;\n\t\tif (k <= mid) t[now].lp = upd(t[x].lp, l, mid, k, p);\n\t\telse t[now].rp = upd(t[x].rp, mid + 1, r, k, p);\n\t\treturn pushup(now), now;\n\t}\n\t\n\til int query(int v1, int v2, int l, int r) {\n\t\tif (l == r) return t[v2].sum ^ t[v1].sum ? l : 0;\n\t\tint now = t[t[v2].lp].sum ^ t[t[v1].lp].sum, mid = l + r >> 1;\n\t\tif (now) return query(t[v1].lp, t[v2].lp, l, mid);\n\t\treturn query(t[v1].rp, t[v2].rp, mid + 1, r);\n\t}\n} T;\n\nint main() {\n\tmt19937 rand(time(0));\n\tread(n); rer(i, 1, n, a);\n\trep1(i, 1, n) {\n\t\tif (ep1.count(a[i])) continue;\n\t\tint now = (rand() & P - 1) + 1;\n\t\tep1[a[i]] = now;\n\t}\n\trep1(i, 1, n) root[i] = T.upd(root[i - 1], 1, P, a[i], ep1[a[i]]);\n\tread(q); int l, r, S = 0;\n\twhile (q--) {\n\t\tread(l, r); l ^= S; r ^= S;\n\t\tprintf(\"%d\\n\", S = T.query(root[l - 1], root[r], 1, P));\n\t}\n\trout;\n}\n```",
        "postTime": 1671880796,
        "uid": 409236,
        "name": "StayAlone",
        "ccfLevel": 6,
        "title": "CF1771F \u968f\u673a\u6743\u503c + \u4e3b\u5e2d\u6811\u677f\u5b50"
    },
    {
        "content": "\u600e\u4e48\u73b0\u6709\u9898\u89e3\u5168\u662f\u5f02\u6216\u54c8\u5e0c\uff1f\n\n\u8ba9\u6211\u6765\u4e00\u4e2a\u5b57\u7b26\u4e32\u54c8\u5e0c\u7684\u9898\u89e3\u3002\n\n\u5176\u5b9e\u601d\u8def\u662f\u548c\u5176\u4ed6\u4e24\u7bc7\u9898\u89e3\u4e00\u6837\u7684\uff1a\u5efa\u7acb\u4e00\u9897\u4e3b\u5e2d\u6811\uff0c\u7b2c $i$ \u68f5\u4e3b\u5e2d\u6811\u7684\u7b2c $j$ \u4e2a\u6570\u4ee3\u8868 $a_1,a_2\u2026\u2026a_i$ \u4e2d $j$ \u51fa\u73b0\u6b21\u6570\u7684\u5947\u5076\u6027\uff08$0$ \u8868\u793a\u5076\u6570 $1$ \u8868\u793a \u5947\u6570\uff09\u3002\n\n\u7136\u540e\u67e5\u8be2\u533a\u95f4 $[l,r]$ \u65f6\u76f4\u63a5\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u7b2c $l-1$ \u68f5\u6811\u548c\u7b2c $r$ \u68f5\u7b2c\u4e00\u4e2a\u4e0d\u4e00\u6837\u7684\u4f4d\u7f6e\u5c31\u662f\u7b54\u6848\u4e86\uff01\u53ef\u4ee5\u53c2\u8003 [\u3010\u6a21\u677f\u3011\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811 2](https://www.luogu.com.cn/problem/P3834)\u3002\n\n\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\uff0c\u6709\u4e24\u79cd\u65b9\u5f0f\uff0c\u7b2c\u4e00\u79cd\u5c31\u662f**\u5f02\u6216\u54c8\u5e0c**\uff0c\u7ed9\u6bcf\u4e00\u79cd\u503c\u8d4b\u4e00\u4e2a\u968f\u673a\u6743\u503c\uff0c\u7ebf\u6bb5\u6811\u4e0a\u8282\u70b9\u8bb0\u5f55\u533a\u95f4\u5185\u6240\u6709\u6743\u503c\u7684\u5f02\u6216\u548c\u5c31\u884c\u4e86\uff0c\u4f18\u70b9\u662f\u5e38\u6570\u5c0f\uff0c\u800c\u4e14\u4e0d\u53ef\u80fd\u88ab\u5361\u3002\n\n\u53e6\u4e00\u79cd\u65b9\u5f0f\u5c31\u662f\u628a\u4e3b\u5e2d\u6811\u7ef4\u62a4\u7684\u5e8f\u5217\u89c6\u4f5c\u5b57\u7b26\u4e32\uff0c\u8fdb\u884c**\u5b57\u7b26\u4e32\u54c8\u5e0c**\u3002\u548c\u4e0a\u9762\u7684\u5dee\u4e0d\u591a\uff0c\u4f46\u4ed6\u9664\u4e86\u672c\u9898\u4ee5\u5916\u8fd8\u6709\u66f4\u591a\u7528\u6cd5\uff0c\u6bd4\u5982[\u8fd9\u9898](https://www.luogu.com.cn/problem/P2757)\u3002\n\n\u4e0a\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\n#define INF 0x3f3f3f3f\n#define LINF 0x3f3f3f3f3f3f3f3f\nint read()\n{\n\tint x;scanf(\"%d\",&x);\n\treturn x;\n}\nll lread()\n{\n\tll x;scanf(\"%lld\",&x);\n\treturn x;\n}\n//file head over\nconst int N = 2e5;\nconst int M = 5e6;\nconst int Mod1 = 1011451423,Mod2 = 998244353;\nconst int bs1 = 19491001,bs2 = 13331;\nint a[N+5],n,m;\nint v[N+5],b[N+5];\nll pw1[N+5],pw2[N+5];\nint rt[N+5];\nint cnt,lc[M],rc[M];\nll val1[M],val2[M];\nint build(int l,int r)\n{\n\tint c = ++cnt;\n\tif(l == r) return c;\n\tint mid = l+r>>1;\n\tlc[c] = build(l,mid),rc[c] = build(mid+1,r);\n\treturn c;\n}\nint Upd(int fc,int l,int r,int x)\n{\n\tint c = ++cnt;\n\tif(l == r)\n\t{\n\t\tif(val1[fc]) val1[c] = val2[c] = 0;\n\t\telse val1[c] = val2[c] = 1;\n\t\treturn c; \n\t}\n\tint mid = (l+r>>1);\n\tif(mid >= x) lc[c] = Upd(lc[fc],l,mid,x),rc[c] = rc[fc];\n\telse rc[c] = Upd(rc[fc],mid+1,r,x),lc[c] = lc[fc];\n\tval1[c] = (val1[lc[c]]*pw1[r-mid] + val1[rc[c]])%Mod1;\n\tval2[c] = (val2[lc[c]]*pw2[r-mid] + val2[rc[c]])%Mod2;\n\t//cout<<val1[c]<<\" \";\n\treturn c;\n}\nint Qry(int c,int fc,int l,int r)\n{\n\tif(val1[c] == val1[fc] && val2[c] == val2[fc]) return 0;\n\tif(l == r) return l;\n\tint mid = (l+r>>1);\n\t//cout<<\"QQ\"<<val1[lc[c]]<<\" \"<<val1[lc[fc]]<<\"\\n\";\n\tif(val1[lc[c]] == val1[lc[fc]] && val2[lc[c]] == val2[lc[fc]]) return Qry(rc[c],rc[fc],mid+1,r);\n\telse return Qry(lc[c],lc[fc],l,mid);\n}\nint main()\n{\n\tn = read();\n\tpw2[0] = pw1[0] = 1;\n\tfor(int i = 1;i <= n;i++) v[i] = a[i] = read();\n\tfor(int i = 1;i <= n;i++) pw1[i] = pw1[i-1]*bs1%Mod1,pw2[i] = pw2[i-1]*bs2%Mod2;\n\tsort(v+1,v+1+n);\n\tm = unique(v+1,v+1+n)-v-1;\n\tfor(int i = 1;i <= n;i++) b[i] = lower_bound(v+1,v+1+m,a[i])-v;\n\trt[0] = build(1,m);\n\tfor(int i = 1;i <= n;i++){rt[i] = Upd(rt[i-1],1,m,b[i]);}\n\tint Q = read(),lst = 0;\n\twhile(Q--)\n\t{\n\t\tint ql = read()^lst,qr = read()^lst;\n\t\tint x = Qry(rt[qr],rt[ql-1],1,m);\n\t\tprintf(\"%d\\n\",lst = v[x]);\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1671096241,
        "uid": 310317,
        "name": "lzytag",
        "ccfLevel": 7,
        "title": "\u3010CF1771F\u3011Hossam and Range Minimum Query\u9898\u89e3"
    },
    {
        "content": "# CF1771F Solution\n\u8d5b\u65f6\u6ca1\u770b\u5230 F\uff0cC \u8fd8 FST \u4e86\u2026\u2026\n\n\u56e0\u4e3a\u5b83\u662f\u51fa\u73b0\u6b21\u6570\u5947\u6570\uff0c\u800c\u5bf9\u4e00\u4e2a\u6570\u5f02\u6216\u4e0a\u5947\u6570\u6b21\u6709\u4e00\u4e2a\u7f8e\u597d\u7684\u6027\u8d28\uff1a\u5b83\u4e0d\u4e3a $0$\u3002\u6211\u4eec\u8003\u8651**\u968f\u673a\u6743\u503c**\u3002\n\n\u5f00\u4e00\u68f5\u4e3b\u5e2d\u6811\uff0c\u7b2c $i$ \u68f5\u6811\u7ef4\u62a4 $[1,i]$ \u7684\u6743\u503c\u5f02\u6216\u548c\u3002\n\n\u82e5\u8be5\u533a\u95f4\u7684\u6743\u503c\u5f02\u6216\u548c\u4e3a $0$\uff0c\u8bf4\u660e\u8be5\u533a\u95f4\u5185\u6240\u6709\u6570\u7684\u51fa\u73b0\u6b21\u6570\u90fd\u662f\u5076\u6570\u3002\u53cd\u4e4b\uff0c\u5219\u8be5\u533a\u95f4\u5185\u4e00\u5b9a\u6709\u51fa\u73b0\u6b21\u6570\u662f\u5947\u6570\u7684\u6570\u3002\n\n\u5728\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u80fd\u5f80\u5de6\u5b50\u6811\u8d70\u5c31\u5c3d\u91cf\u5f80\u5de6\u5b50\u6811\u8d70\uff0c\u5982\u679c\u4e0d\u80fd\u5f80\u5de6\u5b50\u6811\u8d70\uff08\u5373\u5de6\u5b50\u6811\u6743\u503c\u5f02\u6216\u548c\u4e3a $0$\uff09\uff0c\u518d\u5f80\u53f3\u5b50\u6811\u8d70\u3002\n\n\u6ce8\u610f\u4e00\u4e0b\u79bb\u6563\u5316\uff0c\u7531\u4e8e ```rand()``` \u7684\u4e0a\u9650\u4ec5\u6709 $32767$\uff0c\u6240\u4ee5\u8fd9\u91cc\u91c7\u7528\u4e86 ```mt19937 rng(time(0))``` \u6765\u751f\u6210\u968f\u673a\u6743\u503c\u3002\n\n```cpp\n//FQDYanfei FQDWanhao FQDShenyuan\n//\u7b80\u516e\u7b80\u516e\uff0c\u65b9\u5c06\u4e07\u821e\u3002\u300a\u8bd7\u7ecf\u00b7\u7b80\u516e\u300b\n//\u6715\u8eac\u6709\u7f6a\uff0c\u65e0\u4ee5\u4e07\u65b9\uff1b\u4e07\u65b9\u6709\u7f6a\uff0c\u7f6a\u5728\u6715\u8eac\u3002\u300a\u8bba\u8bed\u00b7\u5c27\u66f0\u300b\n#include<bits/stdc++.h>\n#define int long long\n#define mem(a,b) memset(a,b,sizeof(a))\n#define pb push_back\n#define clr clear\n#define fi first\n#define se second\n#define mx3(a,b,c) ((a>b?a:b)>c?(a>b?a:b):c)\n#define mn3(a,b,c) ((a<b?a:b)<c?(a<b?a:b):c)\n#define infll 0x3f3f3f3f3f3f3f3f\n#define inf 0x3f3f3f3f\n#define ins insert\n#define pii pair<int,int>\n#define pqueue priority_queue\n#define F(i,a,b) for(int i=a;i<=(b);i++)\n#define F2(i,a,b) for(int i=a;i<(b);i++)\n#define dF(i,a,b) for(int i=a;i>=(b);i--)\n#define lowbit(x) (x&(-x))\n#define WH while\n#define wh(lzm) while(lzm--)\n#define CO continue\n#define BR break\n#define bctz __builtin_ctz\n#define bclz __builtin_clz\n#define bppc __builtin_popcount\n#define HH printf(\"\\n\")\n#define eb emplace_back\nusing namespace std;\ninline int read(){\n\tregister int x=0,f=1;char c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-') f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9') x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\treturn x*f;\n}\nconst int maxn=109109<<1;\nint ls[maxn<<5],rs[maxn<<5],t[maxn<<5],tot;\nint a[maxn],b[maxn],p[maxn],h[maxn];\nvoid build(int &o,int l,int r){\n\to=++tot;\n\tif(l==r) return;\n\tint mid=(l+r)>>1;\n\tbuild(ls[o],l,mid);\n\tbuild(rs[o],mid+1,r);\n}\nvoid update(int &o,int pre,int l,int r,int pos){\n\to=++tot;\n\tls[o]=ls[pre];rs[o]=rs[pre];t[o]=t[pre]^h[pos];\n\tint mid=(l+r)>>1;\n\tif(l==r) return;\n    if(pos<=mid) update(ls[o],ls[pre],l,mid,pos);\n    else update(rs[o],rs[pre],mid+1,r,pos);\n}\nint query(int o,int pre,int l,int r){\n    int mid=(l+r)>>1;\n    if(l==r) return l;\n    if(t[ls[o]]^t[ls[pre]]) return query(ls[o],ls[pre],l,mid);\n    else return query(rs[o],rs[pre],mid+1,r);\n}\nmt19937 rng(time(0));\nsigned main(){\n    int n=read(),ans=0;\n    F(i,1,n) b[i]=a[i]=read();\n    sort(b+1,b+n+1);\n    int len=unique(b+1,b+n+1)-b-1;\n    F(i,1,n) a[i]=lower_bound(b+1,b+1+len,a[i])-b;\n    F(i,1,n) h[i]=(int)rng();\n    F(i,1,n) update(p[i],p[i-1],1,len+1,a[i]);\n    int fqd=read();\n    wh(fqd){\n        int l=read(),r=read();\n        l^=ans;\n        r^=ans;\n        int pos=query(p[r],p[l-1],1,len+1);\n        if(pos>len) pos=n+1;\n        ans=b[pos];\n        printf(\"%lld\\n\",ans);\n    }\n}\n```",
        "postTime": 1670852515,
        "uid": 605313,
        "name": "Nullptr_qwq",
        "ccfLevel": 0,
        "title": "CF1771F Solution"
    },
    {
        "content": "\u9898\u610f\uff1a\u7ed9\u5b9a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a$\uff0c\u591a\u6b21\u8be2\u95ee $[l,r]$ \u5185**\u6700\u5c0f\u7684\u51fa\u73b0\u4e86\u5947\u6570\u6b21\u7684\u6570**\u3002\u5f3a\u5236\u5728\u7ebf\u3002$n\\le2\\times10^5$\u3002\n\n\u548c $\\text{CSP2022\\ T3}$ \u4e00\u6837\u7684\u5957\u8def\u3002\u51fa\u73b0\u6b21\u6570\u5947\u5076\u6027\uff1f\u968f\u673a\u6743\u503c\u5f02\u6216\u3002\n\n\u5f00\u4e00\u68f5\u503c\u57df\u4e3b\u5e2d\u6811\uff0c\u7ef4\u62a4\u503c\u57df\u533a\u95f4\u5185\u6743\u503c\u7684\u5f02\u6216\u548c\u3002\n\n\u8003\u8651\u4e3b\u5e2d\u6811\u4e0a\u4e8c\u5206\u3002\u6743\u503c\u5f02\u6216\u548c\u4e3a $0\\iff$ \u503c\u57df\u533a\u95f4\u5185\u6240\u6709\u6570\u5747\u51fa\u73b0\u4e86\u5076\u6570\u6b21\u3002\n\n\u7136\u540e\u5c31\u505a\u5b8c\u4e86\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ti chrono::system_clock::now().time_since_epoch().count()\n#define mid ((l + r) >> 1)\nconst int maxn = 2e5 + 10, maxm = 2e7;\nmt19937 gen(ti);\nuniform_int_distribution<> rnd(1, 1e9);\nint t[maxm], val[maxn], son[maxm][2], root[maxn], cnt;\nvoid pushup(int p){t[p] = (t[son[p][0]] ^ t[son[p][1]]);}\nvoid modify(int l, int r, int &p, int q, int pos){\n    p = ++cnt, t[p] = t[q], son[p][0] = son[q][0], son[p][1] = son[q][1];\n    if(l == r) return t[p] ^= val[l], void();\n    if(pos <= mid) modify(l, mid, son[p][0], son[q][0], pos);\n    else modify(mid + 1, r, son[p][1], son[q][1], pos);\n    pushup(p);\n}\nint query(int l, int r, int p1, int p2){\n    if(l == r) return l;\n    // cerr << l << ' ' << r << ' ' << (t[son[p1][0]] ^ t[son[p2][0]]) << endl;\n    if(t[son[p1][0]] ^ t[son[p2][0]]) return query(l, mid, son[p1][0], son[p2][0]);\n    if(!(t[son[p1][1]] ^ t[son[p2][1]])) return 0;\n    return query(mid + 1, r, son[p1][1], son[p2][1]);\n}\nvoid print(int l, int r, int p){\n    if(!p) return;\n    printf(\"%d ~ %d: %d\\n\", l, r, t[p]);\n    print(l, mid, son[p][0]), print(mid + 1, r, son[p][1]);\n}\nint n, a[maxn], b[maxn], m, q;\nsigned main(){\n    scanf(\"%d\", &n);\n    for(int i = 1; i <= n; i++) scanf(\"%d\", &a[i]), b[i] = a[i];\n    sort(b + 1, b + n + 1), m = unique(b + 1, b + n + 1) - b - 1;\n    for(int i = 1; i <= m; i++) val[i] = rnd(gen);\n    for(int i = 1; i <= n; i++){\n        a[i] = lower_bound(b + 1, b + m + 1, a[i]) - b;\n        modify(1, m, root[i], root[i - 1], a[i]);\n        // puts(\"-----------\");\n        // print(1, m, root[i]);\n    }\n    int lastans = 0;\n    scanf(\"%d\", &q);\n    while(q--){\n        int x, y; scanf(\"%d%d\", &x, &y);\n        x ^= lastans, y ^= lastans;\n        printf(\"%d\\n\", lastans = b[query(1, m, root[x - 1], root[y])]);\n    }\n    return 0;\n}\n```",
        "postTime": 1670824310,
        "uid": 170890,
        "name": "Cxny",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1771F Hossam and Range Minimum Query"
    },
    {
        "content": "\u505a\u6cd5\u548c [Odd Mineral Resource](https://www.luogu.com.cn/problem/CF1479D) \u5982\u51fa\u4e00\u8f99\u3002\n\n\u5947\u6570\u6b21\u51fa\u73b0\u8054\u60f3\u5230\u5f02\u6216\uff0c\u5148\u5bf9\u6bcf\u4e2a\u6570\u8d4b\u968f\u673a\u6743\u503c\u3002\u5bf9\u4e8e\u5168\u5c40\u67e5\u8be2\uff0c\u53ef\u4ee5\u7ef4\u62a4\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u5982\u679c\u4e00\u4e2a\u533a\u95f4\u7684\u5f02\u6216\u548c\u4e3a $0$\uff0c\u5219\u8ba4\u4e3a\u8fd9\u4e00\u6bb5\u4e0d\u5b58\u5728\u7b54\u6848\u3002\n\n\u8bbe\u968f\u673a\u6570\u503c\u57df\u4e3a $w$\uff0c\u7531\u4e8e\u6bcf\u4e2a\u6570\u90fd\u662f\u968f\u673a\u7684\uff0c\u6240\u4ee5\u4e00\u4e2a\u533a\u95f4\u7b54\u6848\u7684\u9519\u8bef\u7387\u4e3a $\\dfrac{1}{w}$\uff0c\u8db3\u591f\u5c0f\uff0c\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1\u3002\n\n\u672c\u9898\u662f\u533a\u95f4\u67e5\u8be2\uff0c\u53ea\u9700\u8981\u7ef4\u62a4\u4e3b\u5e2d\u6811\uff0c\u7136\u540e\u67e5\u8be2\u65f6\u7ebf\u6bb5\u6811\u4e8c\u5206\u5373\u53ef\u3002\u53ef\u4ee5\u5148\u79bb\u6563\u5316\u51cf\u5c0f\u5e38\u6570\u3002\n\n```cpp\n/* name: 1771F\n * author: 5ab\n * created at: 2022-12-12\n */\n#include <iostream>\n#include <algorithm>\n#include <chrono>\n#include <random>\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned ui;\nconstexpr int max_n = 200000, max_lgn = 18;\n\nstruct nd\n{\n\tint l, r; ui v;\n}\ntr[(1 << (max_lgn + 1)) + (max_lgn + 1) * max_n];\nint a[max_n], b[max_n], grt[max_n + 1], ind = 0;\nui rv[max_n];\n\ninline int nnode(ui val = 0)\n{\n\ttr[ind].l = tr[ind].r = -1;\n\ttr[ind].v = val;\n\treturn ind++;\n}\n\nint build(int l, int r)\n{\n\tint id = nnode();\n\tif (l < r)\n\t{\n\t\tint mid = (l + r) >> 1;\n\t\ttr[id].l = build(l, mid);\n\t\ttr[id].r = build(mid + 1, r);\n\t}\n\treturn id;\n}\n\nint modify(int rt, int l, int r, int pos, int val)\n{\n\tif (l == r)\n\t\treturn nnode(tr[rt].v ^ val);\n\tint mid = (l + r) >> 1, id = ind++;\n\ttr[id] = tr[rt];\n\t\n\tif (pos <= mid)\n\t\ttr[id].l = modify(tr[rt].l, l, mid, pos, val);\n\telse\n\t\ttr[id].r = modify(tr[rt].r, mid + 1, r, pos, val);\n\t\n\ttr[id].v = (tr[tr[id].l].v ^ tr[tr[id].r].v);\n\treturn id;\n}\n\nint query(int l, int r, int lrt, int rrt)\n{\n\tif ((tr[rrt].v ^ tr[lrt].v) == 0)\n\t\treturn r + 1;\n\tif (l == r)\n\t\treturn l;\n\tint mid = (l + r) >> 1, lrs = query(l, mid, tr[lrt].l, tr[rrt].l);\n\t\n\tif (lrs != mid + 1)\n\t\treturn lrs;\n\treturn query(mid + 1, r, tr[lrt].r, tr[rrt].r);\n}\n\nsigned main()\n{\n\tios_base::sync_with_stdio(false);\n\tcin.tie(nullptr);\n\t\n\tint n;\n\tmt19937 rnd(chrono::system_clock::now().time_since_epoch().count());\n\t\n\tcin >> n;\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tcin >> a[i];\n\t\tb[i] = a[i];\n\t}\n\tsort(b, b + n);\n\tint m = unique(b, b + n) - b;\n\tfor (int i = 0; i < m; i++)\n\t\trv[i] = rnd();\n\t\n\tgrt[0] = build(0, m - 1);\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tint pos = lower_bound(b, b + m, a[i]) - b;\n\t\tgrt[i + 1] = modify(grt[i], 0, m - 1, pos, rv[pos]);\n\t}\n\t\n\tint q, l, r, lastans = 0;\n\t\n\tcin >> q;\n\twhile (q--)\n\t{\n\t\tcin >> l >> r;\n\t\tl ^= lastans, r ^= lastans;\n\t\t\n\t\tint res = query(0, m - 1, grt[l - 1], grt[r]);\n\t\tcout << (lastans = (res < m ? b[res] : 0)) << \"\\n\";\n\t}\n\t\n\treturn 0;\n}\n// started coding at: 12-12 07:56:26\n// finished debugging at: 12-12 08:25:21\n```",
        "postTime": 1670821718,
        "uid": 119491,
        "name": "5ab_juruo",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011CF1771F Hossam and Range Minimum Query"
    },
    {
        "content": "\u9898\u610f\uff1a\u4e00\u4e2a\u6570\u5217 $a_1...a_n$\uff0c\u6709 $m$ \u6b21\u8be2\u95ee\u3002\u6bcf\u6b21\u7ed9\u51fa\u533a\u95f4 $[l,r]$\uff0c\u6c42\u51fa\u8be5\u533a\u95f4\u4e2d\u51fa\u73b0\u6b21\u6570\u4e3a\u5947\u6570\u7684\u6700\u5c0f\u6570\u3002\n\n\u5206\u6790\uff1a\n\n\u9002\u5f53\u62c6\u533a\u95f4 $[l,r]$\uff0c\u4ece $[1,r]$ \u548c $[1,l-1]$ \u65b9\u9762\u8003\u8651\u3002\n\n\u8bb0\u5f55\u96c6\u5408 $S[i]$ \u8868\u793a $[1,i]$ \u4e2d\u51fa\u73b0\u6b21\u6570\u4e3a\u5947\u6570\u7684\u6570\u5b57\u96c6\u5408\u3002\n\n\u53d1\u73b0\u5982\u679c $S[r]$ \u4e0e $S[l-1]$ \u5b8c\u5168\u76f8\u540c\uff0c\u90a3\u4e48 $[l,r]$ \u533a\u95f4\u4e2d\u6ca1\u6709\u51fa\u73b0\u6b21\u6570\u4e3a\u5947\u6570\u7684\u6570\u3002\n\n\u8bbe\u4e00\u4e2a\u6570 $p$\u3002\n\n\u8bb0 $Sp[i]$ \u4e3a $[1,i]$ \u4e2d\u5c0f\u4e8e\u7b49\u4e8e $p$ **\u4e14** \u51fa\u73b0\u6b21\u6570\u4e3a\u5947\u6570\u7684\u6570\u5b57\u96c6\u5408\u3002\n\n\u5982\u679c $Sp[r]$ \u4e0e $Sp[l-1]$ \u5b8c\u5168\u76f8\u540c\uff0c\u90a3\u4e48 $[l,r]$ \u4e2d\u6ca1\u6709\u5c0f\u4e8e\u7b49\u4e8e $p$ **\u4e14** \u51fa\u73b0\u6b21\u6570\u4e3a\u5947\u6570\u7684\u6570\u5b57\u96c6\u5408\u3002\n\n\u7c7b\u4f3c\u4e8e\u4e8c\u5206\u7684\u601d\u60f3\u3002\n\n\u5bb9\u6613\u60f3\u5230\u5229\u7528\u4e3b\u5e2d\u6811\u7ef4\u62a4\u8fd9\u4e00\u4e8c\u5206\uff0c\u96c6\u5408\u53ef\u4ee5\u54c8\u5e0c\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst ll maxn=2e5+10;\nll n,m,a[maxn],h[maxn],ht,l,r,lastans,rt[maxn],lc[maxn*24],rc[maxn*24],cnt;\nunsigned ll s1[maxn*24],s2[maxn*24],s3[maxn*24];\nvoid modify(ll &p,ll q,ll l,ll r,ll x)\n{\n\tp=++cnt;\n\tif(l==r)\n\t{\n\t\tif(!s1[q]) s1[p]=x,s2[p]=x*x,s3[p]=x*x*x;\n\t\treturn;\n\t}\n\tll mid=l+r>>1;\n\tlc[p]=lc[q]; rc[p]=rc[q];\n\tif(x<=mid) modify(lc[p],lc[q],l,mid,x);\n\telse modify(rc[p],rc[q],mid+1,r,x);\n\ts1[p]=s1[lc[p]]+s1[rc[p]];\n\ts2[p]=s2[lc[p]]+s2[rc[p]];\n\ts3[p]=s3[lc[p]]+s3[rc[p]];\n}\nll query(ll p,ll q,ll l,ll r)\n{\n\tif(l==r)\n\t{\n\t\tif(s1[p]==s1[q]&&s2[p]==s2[q]&&s3[p]==s3[q]) return 0;\n\t\treturn l;\n\t}\n\tll mid=l+r>>1;\n\tif(s1[lc[p]]==s1[lc[q]]&&s2[lc[p]]==s2[lc[q]]&&s3[lc[p]]==s3[lc[q]]) return query(rc[p],rc[q],mid+1,r);\n\treturn query(lc[p],lc[q],l,mid);\n}\nint main()\n{\n\tscanf(\"%lld\",&n);\n\tfor(ll i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%lld\",&a[i]);\n\t\th[++ht]=a[i];\n\t}\n\tsort(h+1,h+1+ht);\n\tht=unique(h+1,h+1+ht)-h-1;\n\tfor(ll i=1;i<=n;i++)\n\t{\n\t\ta[i]=lower_bound(h+1,h+1+ht,a[i])-h;\n\t\tmodify(rt[i],rt[i-1],1,ht,a[i]);\n\t}\n\tscanf(\"%lld\",&m);\n\twhile(m--)\n\t{\n\t\tscanf(\"%lld%lld\",&l,&r);\n\t\tl^=lastans; r^=lastans;\n\t\tprintf(\"%lld\\n\",lastans=h[query(rt[r],rt[l-1],1,ht)]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1672450618,
        "uid": 375953,
        "name": "Sktn0089",
        "ccfLevel": 7,
        "title": "\u3010\u9898\u89e3CF1771F\u3011Hossam and Range Minimum Query"
    },
    {
        "content": "\u4e00\u9053\u548c\u661f\u6218\u5dee\u4e0d\u591a\u597d\u7684 Sum Hash \u7ec3\u4e60\u9898\u3002\u987a\u4fbf\u8bb0\u5f55\u4e00\u4e0b\u4eba\u751f\u4e2d\u7b2c\u4e00\u6b21\u573a\u5207 2F\uff0c\u867d\u7136\u662f VP\u3002\n\n## \u601d\u8def\n\n\u8003\u8651\u5148\u7ed9\u6240\u6709\u6570\u8fdb\u884c\u79bb\u6563\u5316\uff0c\u5c06\u503c\u57df\u538b\u8fdb $10^5$\u3002\u4e0b\u6587\u4e2d\u6240\u6709\u7684 $a$ \u6307\u7684\u90fd\u662f\u79bb\u6563\u5316\u4e4b\u540e\u7684\u3002\n\n\u7136\u540e\u8003\u8651\u66b4\u529b\uff0c\u4ece $l$ \u5230 $r$ \u626b\u4e00\u904d\uff0c\u7ef4\u62a4\u4e00\u4e2a\u957f\u5ea6\u4e3a\u503c\u57df\u7684\u6570\u7ec4 $bol$\uff0c\u5982\u679c $a_i$ \u51fa\u73b0\u4e86\uff0c\u5c31\u7ed9 $bol_{a_i}$ \u5f02\u6216\u4e0a $1$\uff08\u4e5f\u5c31\u662f\u53d6\u53cd\uff09\u3002\u90a3\u4e48\u53ef\u4ee5\u53d1\u73b0\u626b\u5b8c\u4e4b\u540e\u6240\u6709 $bol$ \u662f $1$ \u7684\u4f4d\u7f6e\u90fd\u51fa\u73b0\u4e86\u5947\u6570\u6b21\u3002\n\n\u60f3\u8981\u5feb\u901f\u7ef4\u62a4\u8fd9\u4e2a\u6570\u7ec4\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u4e00\u9897\u4e3b\u5e2d\u6811\u3002\u6bcf\u6b21\uff0c\u5f53 $bol_{a_i}$ \u76ee\u524d\u662f $0$\uff0c\u6211\u4eec\u5c31\u628a\u4e3b\u5e2d\u6811\u91cc\u9762 $a_i$ \u5bf9\u5e94\u7684\u4f4d\u7f6e\u6539\u6210 $1$\uff0c\u5426\u5219\u6539\u6210 $0$\u3002\u6ce8\u610f\u64cd\u4f5c\u5b8c\u4e4b\u540e\u8981\u7ed9 $bol_{a_i}$ \u5f02\u6216\u4e0a $1$\u3002\n\n\u5bf9\u4e8e\u8be2\u95ee\uff0c\u6211\u4eec\u53d6\u51fa $rt_{l-1}$ \u5bf9\u5e94\u7684\u7ebf\u6bb5\u6811\u548c $rt_r$ \u5bf9\u5e94\u7684\u7ebf\u6bb5\u6811\uff0c\u8fd9\u4e24\u9897\u7ebf\u6bb5\u6811\u7684\u53f6\u5b50\u91cc\u9762\u8282\u70b9\u503c\u4e0d\u540c\u7684\uff08\u4e5f\u5c31\u662f\u4e00\u4e2a\u662f $0$\uff0c\u4e00\u4e2a\u662f $1$\uff09\uff0c\u5c31\u662f\u51fa\u73b0\u4e86\u5947\u6570\u6b21\u7684\u4f4d\u7f6e\u3002\n\n\u4e3a\u4e86\u627e\u5230\u6700\u5c0f\u7684\uff0c\u6211\u4eec\u8003\u8651\u4e3b\u5e2d\u6811\u4e0a\u4e8c\u5206\u3002\u6211\u4eec\u5728\u4e24\u9897\u7ebf\u6bb5\u6811\u4e0a\u540c\u65f6\u8d70\uff0c\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u5de6\u8fb9\u6709\u67d0\u4e2a $bol$ \u51fa\u73b0\u4e86\u4e0d\u540c\u7684\u503c\uff0c\u6211\u5c31\u8ba9\u4e24\u4e2a\u6307\u9488\u4e00\u8d77\u8d70\u5de6\u8fb9\uff0c\u5982\u679c\u53f3\u8fb9\u51fa\u73b0\u4e86\u4e0d\u540c\u5c31\u4e00\u8d77\u8d70\u53f3\u8fb9\uff0c\u5982\u679c\u76f8\u540c\u6211\u5c31\u8fd4\u56de $0$\u3002\n\n\u4e8e\u662f\u95ee\u9898\u8f6c\u5316\u4e3a\u5feb\u901f\u77e5\u9053\u67d0\u4e2a\u533a\u95f4\u662f\u5426\u6709\u67d0\u4e2a $bol$ \u5728 $l-1$ \u7684\u7ebf\u6bb5\u6811\u548c $r$ \u7684\u7ebf\u6bb5\u6811\u4e2d\u51fa\u73b0\u4e86\u4e0d\u540c\u7684\u503c\uff0c\u4e0d\u59a8\u4f7f\u7528 Sum Hash\uff0c\u6211\u7ed9\u6bcf\u4e2a $a_i$ \u4e00\u4e2a\u968f\u673a\u6743\u503c $w_{a_i}$\uff0c\u7136\u540e\u5728\u7ebf\u6bb5\u6811\u4e0a\u7ef4\u62a4\u6bcf\u4e2a\u8282\u70b9\u6240\u7ba1\u8f96\u533a\u95f4\u7684\u968f\u673a\u6743\u503c\u7684\u548c\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u7ef4\u62a4 $bol_{a_i}\\times w_{a_i}$ \u8fd9\u4e2a\u5f0f\u5b50\u7684\u548c\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u5982\u679c\u6709\u67d0\u4e2a $bol$ \u51fa\u73b0\u4e86\u4e0d\u540c\u7684\u503c\uff0c\u90a3\u4e48\u6240\u6709\u5305\u542b\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u8282\u70b9\u5728 $l-1$ \u53f7\u7ebf\u6bb5\u6811\u548c $r$ \u53f7\u7ebf\u6bb5\u6811\u4e0a\u7ef4\u62a4\u7684\u548c\u90fd\u4e0d\u540c\u3002\u548c\u661f\u6218\u7c7b\u4f3c\uff0c\u9519\u8bef\u7387\u975e\u5e38\u4f4e\u3002\n\n\u7531\u4e8e $bol_{a_i}$ \u53ea\u6709 $1\\to 0$ \u548c $0\\to 1$ \u4e24\u79cd\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u5206\u7c7b\u8ba8\u8bba\uff0c\u7136\u540e\u5728\u4e3b\u5e2d\u6811\u4e0a\u7ed9 $a_i$ \u5bf9\u5e94\u7684\u4f4d\u7f6e\u52a0\u4e0a\u4e00\u4e2a $w_{a_i}$ \u6216\u8005 $-w_{a_i}$ \u5373\u53ef\u3002\u67e5\u8be2\u65f6\u62ff\u51fa $l-1$ \u548c $r$ \u7684\u7ebf\u6bb5\u6811\uff0c\u5728\u4e24\u9897\u6811\u4e0a\u540c\u65f6\u8d70\uff0c\u5de6\u8fb9\u7ef4\u62a4\u7684\u548c\u4e0d\u540c\u5c31\u4e00\u8d77\u8d70\u5de6\u8fb9\uff0c\u53f3\u8fb9\u7ef4\u62a4\u7684\u548c\u4e0d\u540c\u5c31\u4e00\u8d77\u8d70\u53f3\u8fb9\uff0c\u76f8\u540c\u5c31\u76f4\u63a5\u8fd4\u56de $0$\u3002\n\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u4e0d\u91c7\u7528\u4e24\u4e2a\u6307\u9488\u540c\u65f6\u8d70\u7684 $O(\\log n)$ \u7b97\u6cd5\uff0c\u800c\u662f\u4f7f\u7528\u5728\u5916\u9762\u500d\u589e\uff0c\u7136\u540e\u6bcf\u6b21\u67e5\u8be2\u7684 $O(\\log^2n)$ \u7b97\u6cd5\u4f1a\u5728\u7b2c $10$ \u4e2a\u70b9 TLE\u3002\n\n\u4f7f\u7528 `rand()` \u4f1a\u5728\u7b2c $15$ \u4e2a\u70b9 WA\uff0c\u56e0\u4e3a `rand()` \u5728 CF \u8bc4\u6d4b\u673a\uff08\u4ee5\u53ca Windows\uff09\u7684\u4e0a\u9650\u662f $32767$\uff08\u6ce8\u610f\u67d0\u4e9b\u7248\u672c Linux \u4e0b\u7684\u4e0a\u9650\u53ef\u4ee5\u8fbe\u5230 `INT_MAX`\uff0c\u4f46 CF \u5e76\u4e0d\u53ef\u4ee5\uff09\uff0c\u53ef\u80fd\u6bd4 $n$ \u5c0f\uff0c\u8bf7\u4f7f\u7528\u66f4\u5927\u7684 `mt19937`\u3002\n\n## \u4ee3\u7801\n\n\u4e00\u4e9b\u5b9e\u73b0\u7ec6\u8282\u5728\u4ee3\u7801\u91cc\u9762\u8bf4\uff0c\u611f\u89c9\u6587\u5b57\u53d9\u8ff0\u8fd8\u662f\u4e0d\u6e05\u6670\u3002\n\n```\n//Author:Zealous_YH / Cream_H\n//Su Chanzi & Xiao Bao\n//Hey Left\n//Just enjoy the loneliness\n//Open a personal party always stay\n#include <bits/stdc++.h>\n#define ET return 0\n#define fi first\n#define se second\n#define mp make_pair\n#define pb emplace_back\n#define ll long long\n#define ull unsigned long long\n#define inf INT_MAX\n#define uinf INT_MIN\n#define pii pair<int,int>\n#define pll pair<ll,ll>\n#define debug puts(\"--------Chery AK IOI--------\");\n#define Yes cout<<\"Yes\"<<endl;\n#define No cout<<\"No\"<<endl;\n#define pt puts(\"\")\n#define fr1(i,a,b) for(int i=a;i<=b;i++)\n#define fr2(i,a,b) for(int i=a;i>=b;i--)\n#define fv(i,p) for(int i=0;i<p.size();i++)\n#define ld long double\n#define il inline\n#define ptc putchar\nusing namespace std;\nconst int N=2e5+10;\nint n;\nint a[N];\nint b[N];\nint tot;\nint bk[N];\nint w[N];\nint tf[N];\nint rt[N];\nint tnt;\nint q;\nll st;\nmap <int,int> p;\nmt19937 rnd(time(0));\n#define mid ((l+r)>>1)\nstruct Chairman_Segment_Tree{//\u666e\u901a\u4e3b\u5e2d\u6811\n    int has[N*50],ls[N*50],rs[N*50];\n    il void insert(int &p,int las,int l,int r,int d,int k){\n        if(!p){\n            tnt++;\n            p=tnt;\n        }\n        has[p]=has[las]+k;\n        if(l==r){\n            return;\n        }\n        if(d<=mid){\n            insert(ls[p],ls[las],l,mid,d,k);\n            rs[p]=rs[las];\n        }\n        else{\n            insert(rs[p],rs[las],mid+1,r,d,k);\n            ls[p]=ls[las];\n        }\n    }\n    il ll query(int p,int l,int r,int ml,int mr){\n        if(ml<=l&&r<=mr){\n            return has[p];\n        }\n        ll ans=0;\n        if(ml<=mid){\n            ans+=query(ls[p],l,mid,ml,mr);\n        }\n        if(mid<mr){\n            ans+=query(rs[p],mid+1,r,ml,mr);\n        }\n        return ans;\n    }\n    il int binary(int p1,int p2,int l,int r){//\u5728\u4e24\u9897\u7ebf\u6bb5\u6811\u4e0a\u540c\u65f6\u8d70\n        if(has[p1]==has[p2]){//\u54c8\u5e0c\u503c\u76f8\u540c\n            return tot+1;//\u548c\u8fd4\u56de0\u7684\u4f5c\u7528\u662f\u4e00\u6837\u7684\uff0c\u90fd\u662f\u4e3a\u4e86\u5728\u4e0b\u9762\u5f97\u5230\u7b54\u6848\u65f6\u5f97\u52300\n        }\n        if(l==r){\n            return l;\n        }\n        if(has[ls[p1]]!=has[ls[p2]]){//\u5de6\u513f\u5b50\u54c8\u5e0c\u548c\u4e0d\u4e00\u6837\u5c31\u8d70\u5de6\u513f\u5b50\n            return binary(ls[p1],ls[p2],l,mid);\n        }\n        else{//\u5426\u5219\u662f\u53f3\u513f\u5b50\n            return binary(rs[p1],rs[p2],mid+1,r);\n        }\n    }\n} T;\n#undef mid\nint main(){\n    ios::sync_with_stdio(false);\n    srand(time(0));\n    cin>>n;\n    fr1(i,1,n){\n        cin>>a[i];\n        b[i]=a[i];\n    }\n    sort(b+1,b+n+1);//\u79bb\u6563\u5316\n    fr1(i,1,n){\n        if(!p.count(b[i])){\n            tot++;\n            w[tot]=rnd();//\u7ed9\u76f8\u540c\u7684\u6570\u968f\u673a\u4e00\u4e2a\u76f8\u540c\u7684\u6743\u503c\n            p[b[i]]=tot;\n            bk[tot]=b[i];//\u5b58\u4e0b\u79bb\u6563\u524d\u7684\u503c\n        }\n    }\n    fr1(i,1,n){\n        a[i]=p[a[i]];\n    }\n    fr1(i,1,n){\n        if(tf[a[i]]==0){\n            tf[a[i]]^=1;\n            T.insert(rt[i],rt[i-1],1,tot,a[i],w[a[i]]);\n        }\n        else{\n            tf[a[i]]^=1;\n            T.insert(rt[i],rt[i-1],1,tot,a[i],-w[a[i]]);\n        }//\u7ef4\u62a4\u6587\u5b57\u4e2d\u8bf4\u7684bol\uff0c\u8fd9\u91cc\u53d6\u540d\u53ebtf\n    }\n    cin>>q;\n    int lst=0;\n    while(q--){\n        int l,r;\n        cin>>l>>r;\n        l^=lst;\n        r^=lst;\n        int now=T.binary(rt[l-1],rt[r],1,tot);//\u76f4\u63a5\u5728\u4e24\u68f5\u6811\u4e0a\u540c\u65f6\u8d70\u5373\u53ef\n        lst=bk[now];//\u6700\u540e\u8981\u5f97\u5230\u79bb\u6563\u524d\u7684\u503c\n        cout<<lst<<'\\n';\n    }\n    ET;\n}\n//Teens-in-Times\n//HJL 2004.06.15\n//YHX 2004.08.16\n//Everything For Ji, Lin, Hao, Shun, Hang and You.\n```\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n\\log n+q\\log n)$\u3002\u4e3b\u5e2d\u6811\u5e38\u6570\u6bd4\u8f83\u5927\uff0c\u56e0\u6b64\u8fd8\u662f\u6bd4\u8f83\u5361\u3002\n\n[AC \u8bb0\u5f55](https://www.luogu.com.cn/record/97870794)",
        "postTime": 1671855578,
        "uid": 399150,
        "name": "Shunpower",
        "ccfLevel": 7,
        "title": "CF1771F Hossam and Range Minimum Query Sol"
    },
    {
        "content": "\u6709\u8da3\u7684\u9898\u3002\n\n## \u9898\u76ee\u5927\u610f\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a_i$\uff0c\u4ee5\u53ca $q$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u533a\u95f4 $[l,r]$ \u5185\u51fa\u73b0\u6b21\u6570\u4e3a\u5947\u6570\u7684\u6570\u4e2d\u7684\u6700\u5c0f\u503c\u3002\n\n$n,q\\le 2\\cdot 10^5$\uff0c$a_i\\le 10^9$\uff0c\u5f3a\u5236\u5728\u7ebf\u3002\n\n## \u5927\u4f53\u601d\u8def\n\u4e0b\u9762\u4ecb\u7ecd\u4e09\u79cd\u601d\u8def\u3002\n\n### \u6211\u4f1a\u968f\u673a\u5316\uff01\n~~zyy\uff1a\u968f\u673a\u5316\u6ca1\u6709\u524d\u9014~~\u3002\n\n\u4e00\u79cd\u601d\u8def\u662f\u6765\u81ea\u4e8e $2202$ \u5e74 $\\texttt{CSP-S}$ \u7b2c\u4e09\u9898\uff0c\u5373\u9644\u4e0a\u968f\u673a\u6743\u503c\u3002\u672c\u9898\u4e2d\u4e5f\u53ef\u4ee5\u501f\u9274\u7c7b\u4f3c\u7684\u65b9\u6cd5\u3002\n\n\u6211\u4eec\u7ed9\u5e8f\u5217 $a_i$ \u79bb\u6563\u5316\uff0c\u7136\u540e\u4e3a\u6392\u540d\u4e3a $i$ \u7684\u503c\u9644\u4e0a\u968f\u673a\u6743\u503c $w_i$\u3002\n\n\u51fa\u73b0\u6b21\u6570\u7684\u5947\u5076\u5f88\u5bb9\u6613\u4e0e\u5f02\u6216\u8054\u60f3\u8d77\u6765\u3002\u56e0\u4e3a\u5947\u6570\u4e2a\u76f8\u540c\u7684\u6570\u7684\u5f02\u6216\u548c\u975e\u96f6\uff0c\u5076\u6570\u4e2a\u76f8\u540c\u7684\u6570\u7684\u5f02\u6216\u548c\u4e00\u5b9a\u4e3a\u96f6\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u5229\u7528\u4e3b\u5e2d\u6811\u8bb0\u5f55\u6bcf\u4e2a\u524d\u7f00\u7684\u60c5\u51b5\u3002\n\n\u6211\u4eec\u5047\u8bbe\u9047\u5230\u5f02\u6216\u548c\u4e3a $0$ \u8bf4\u660e\u6240\u6709\u6570\u4e00\u5b9a\u90fd\u51fa\u73b0\u5076\u6570\u6b21\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u7528\u7c7b\u4f3c\u4e3b\u5e2d\u6811\u4e0a\u4e8c\u5206\u7684\u65b9\u6cd5\uff0c\u5982\u679c\u5de6\u5b50\u6811\u5f02\u6216\u548c\u4e3a $0$ \u5219\u9012\u5f52\u53f3\u5b50\u6811\u3002\n\n\u867d\u7136\u8fd9\u4e00\u65b9\u6cd5\u6709\u4e00\u5b9a\u6982\u7387\u4e0d\u901a\u8fc7\uff0c\u4f46\u4e8b\u5b9e\u8bc1\u660e\u4f7f\u7528 `mt19937` \u751f\u6210\u7684\u5355\u968f\u673a\u5f02\u6216\u54c8\u5e0c\u8db3\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n\n\u7531\u4e8e $n,q$ \u540c\u9636\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n)$\u3002\n\n\u6ce8\u610f\u5230\u9898\u76ee\u8fd8\u8981\u6c42\u65e0\u89e3\u65f6\u8f93\u51fa $0$\uff0c\u53ef\u4ee5\u7528 `vector` \u5b9e\u73b0\u6570\u503c\u5206\u7c7b\u4f4d\u7f6e\u5217\u8868\uff0c\u6bcf\u6b21\u67e5\u8be2\u5230\u7b54\u6848\u540e\u4e8c\u5206\u5224\u65ad\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u8fd9\u91cc\u9644\u4e0a [\u53e6\u4e00\u9053\u9898](https://www.luogu.com.cn/problem/CF1746F)\uff0c\u540c\u6837\u53ef\u4ee5\u7528\u968f\u673a\u6743\u503c\u6765\u641e\uff0c\u4f46\u662f\u53ea\u505a\u4e00\u904d\u968f\u673a\u53ef\u80fd\u4e0d\u591f\uff0c\u9700\u8981\u591a\u6b21\uff0c\u53ef\u4ee5\u7528\u7c7b\u4f3c\u6a21\u62df\u9000\u706b\u65f6\u7684\u5361\u65f6\u95f4\u6765\u641e\u3002\n\n### \u6211\u4f1a\u83ab\u961f\uff01\n\u5982\u679c\u8fd9\u9053\u9898\u4e0d\u5f3a\u5236\u5728\u7ebf\uff0c\u5b8c\u5168\u53ef\u4ee5\u7528\u4e00\u4e2a `set` \u88c5\u6240\u6709\u51fa\u73b0\u6b21\u6570\u4e3a\u5947\u6570\u7684\u6570\uff0c\u542c\u8d77\u6765\u590d\u6742\u5ea6\u662f\u6839\u53f7\u8fd8\u5e26 $\\log$\u3002\u4f46\u6211\u4e5f\u6ca1\u4ed4\u7ec6\u60f3\uff0c\u56e0\u4e3a\u8fd9\u9053\u9898\u5f3a\u5236\u5728\u7ebf\u3002\n\n### \u6211\u4f1a\u66b4\u529b\uff01\n\u6211\u4eec\u4e0d\u59a8\u56de\u8fc7\u5934\u60f3\uff0c\u600e\u4e48\u66b4\u529b\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u524d\u7f00\uff0c\u7528\u4e00\u4e2a $n$ \u4f4d\u7684\u4e8c\u8fdb\u5236\u4e32\u8bb0\u5f55\u6bcf\u4e2a\u6570\u51fa\u73b0\u6b21\u6570\u7684\u5947\u5076\u6027\u3002\u67e5\u8be2\u65f6\u5f02\u6216\u4e00\u4e0b\uff0c\u627e\u5230\u6700\u4f4e\u7684\u975e\u96f6\u4f4d\u5373\u53ef\u3002\n\n\u8fd9\u6837\u505a\u552f\u4e00\u7684\u7f3a\u70b9\u5728\u4e8e\u7a7a\u95f4\u7206\u70b8\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u8fbe\u5230\u4e86\u60ca\u4eba\u7684 $O(n^2)$\uff0c\u4f46\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u8f83\u5c0f\u3002\n\n\u8fd9\u65f6\u5019\u4f60\u53ef\u80fd\u60f3\u5230\u4e86 `bitset`\uff0c\u4f46\u5373\u4f7f\u4f7f\u7528 `bitset` \u5b58 $n$ \u4f4d $01$ \u4e32\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4f9d\u7136\u6709 $O\\left(\\dfrac {n^2}{\\omega}\\right)$\uff0c\u88ab $2\\cdot 10^5$ \u5361\u6b7b\u4e86\u3002\n\n\u4f46\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u65f6\u95f4\u6362\u7a7a\u95f4\u3002\u6211\u4eec\u53ef\u4ee5\u5bf9\u539f\u5e8f\u5217\u5206\u5757\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u6574\u5757\u672b\u5c3e\u65f6\u7684\u60c5\u51b5\uff0c\u8fd9\u6837\u7a7a\u95f4\u4e0a\u53d8\u6210\u4e86 $O\\left(\\dfrac{n^{1.5}}{\\omega}\\right)$\uff0c\u53ef\u4ee5\u63a5\u53d7\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O\\left(\\left(\\dfrac n {\\omega}+\\sqrt n\\right)q\\right)$\u3002\n\n\u6839\u636e CF \u5b98\u65b9\u7684\u8bf4\u6cd5\uff0c\u624b\u5199\u4e00\u4e2a\u538b $64$ \u4f4d\u7684 `bitset` \u5c31\u53ef\u4ee5\u8279\u8fc7\u8fd9\u9053\u9898\u4e86\u3002\n\n## \u4ee3\u7801\n\u7ed9\u51fa\u7684\u662f\u89e3\u6cd5 $1$ \u7684\u4ee3\u7801\u3002\n\n```cpp\nint n, q, a[maxn], rt[maxn];\nint as[maxn], rk[maxn], wei[maxn];\nstruct node {\n\tint ls, rs, val;\n\t#define ls(u) tr[u].ls\n\t#define rs(u) tr[u].rs\n} tr[maxn * 60];\nint nV;\ninline void expand(int &u) {\n\ttr[++ nV] = tr[u];\n\tu = nV;\n}\ninline void pushup(int u) {\n\ttr[u].val = tr[ls(u)].val ^ tr[rs(u)].val;\n}\ninline void modify(int &u, int l, int r, int x, int v) {\n\texpand(u);\n\tif(l == r) {\n\t\ttr[u].val ^= v;\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tif(x <= mid) modify(ls(u), l, mid, x, v);\n\telse modify(rs(u), mid + 1, r, x, v);\n\tpushup(u);\n}\ninline int query(int u, int v, int l, int r) {\n\tif(l == r) return l;\n\tint lval = tr[ls(u)].val ^ tr[ls(v)].val;\n\tint mid = (l + r) >> 1;\n\tif(lval != 0) return query(ls(u), ls(v), l, mid);\n\telse return query(rs(u), rs(v), mid + 1, r);\n}\nvector <int> pos[maxn];\nint main () {\n\tmt19937 rnd(time(0));\n\tread(n);\n\trep(i, 1, n) read(a[i]), as[i] = a[i];\n\tsort(as + 1, as + n + 1);\n\tint nA = unique(as + 1, as + n + 1) - (as + 1);\n\trep(i, 1, n) {\n\t\trk[i] = lower_bound(as + 1, as + nA + 1, a[i]) - as;\n\t\tif(!wei[rk[i]]) wei[rk[i]] = rnd();\n\t\trt[i] = rt[i - 1];\n\t\tmodify(rt[i], 1, nA, rk[i], wei[rk[i]]);\n\t\tpos[rk[i]].push_back(i);\n\t}\n\tint ans = 0;\n\tread(q);\n\twhile(q --) {\n\t\tint l, r;\n\t\tread(l); read(r);\n\t\tl ^= ans;\n\t\tr ^= ans;\n\t\tans = query(rt[l - 1], rt[r], 1, nA);\n\t\tint tim = upper_bound(pos[ans].begin(), pos[ans].end(), r) - lower_bound(pos[ans].begin(), pos[ans].end(), l);\n\t\tif(!(tim & 1)) ans = 0;\n\t\twriteln(ans = as[ans]);\n\t}\n\t\n\treturn 0;\n}\n```",
        "postTime": 1671702684,
        "uid": 279197,
        "name": "Mars_Dingdang",
        "ccfLevel": 6,
        "title": "Hossam and Range Minimum Query"
    }
]