[
    {
        "content": "### \u9898\u610f\n\n\u7ed9\u51fa\u4e00\u4e2a\u957f\u5ea6\u4e3a $n ~ (3 \\le n \\le 2 \\cdot 10 ^ 5)$ \u7684\u5e8f\u5217 $a$\uff0c$q ~ (1 \\le q \\le 2 \\cdot 10 ^ 5)$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u51fa\u4e00\u6bb5\u533a\u95f4 $[l, r]$\uff0c\u9700\u8981\u627e\u5230 $[a_l, a_{l + 1}, \\ldots, a_r]$ \u4e2d\u6700\u957f\u7684\u4e00\u4e2a\u5b50\u5e8f\u5217 $b$\uff0c\u6ee1\u8db3 $b$ \u4e2d\u7684\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u548c\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u90fd\u4e0d\u8d85\u8fc7 $3$\u3002\n\n### \u9898\u89e3\n\n\u9996\u5148\u6709\u4e00\u4e2a\u7ed3\u8bba\uff0c$b$ \u7684\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc7 $4$\u3002\n\n\u8bc1\u660e\u4e0d\u96be\uff0c\u5047\u8bbe $b$ \u7684\u957f\u5ea6\u4e3a $5$\uff0c\u6211\u4eec\u6c42\u5b83\u7684\u6700\u957f\u4e0b\u964d\u5b50\u5e8f\u5217\u957f\u5ea6\uff0c\u4e0d\u59a8\u8bbe\u4e3a $l$\u3002\n\n- \u5f53 $l \\ge 3$ \u65f6\uff0c\u4e0d\u6ee1\u8db3\u6761\u4ef6\u3002\n- \u5f53 $l \\le 2$ \u65f6\uff0c\u6839\u636e [Dilworth \u5b9a\u7406](https://www.luogu.com.cn/problem/P1020)\uff0c\u6700\u5c11\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u5212\u5206\u6570\u7b49\u4e8e\u6700\u957f\u4e0b\u964d\u5b50\u5e8f\u5217\u957f\u5ea6\uff0c\u90a3\u4e48\u8bf4\u660e\u5b58\u5728\u4e00\u4e2a\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u957f\u5ea6 $\\ge 3$\u3002\u4e5f\u4e0d\u6ee1\u8db3\u6761\u4ef6\u3002\n\n\u56e0\u6b64\u5047\u8bbe\u4e0d\u6210\u7acb\uff0c\u7ed3\u8bba\u5f97\u8bc1\u3002\n\n\u5f00\u59cb\u7740\u624b\u89e3\u51b3\u95ee\u9898\u3002\n\n\u4e3a\u4e86\u5904\u7406\u591a\u7ec4\u8be2\u95ee\uff0c\u6211\u4eec\u8003\u8651\u8fd9\u6837\u4e00\u79cd\u65b9\u6cd5\uff1a\n\n- \u9884\u5904\u7406\u65f6\uff0c\u6211\u4eec\u5bf9\u6bcf\u4e00\u4e2a $1 \\sim n$ \u4e4b\u95f4\u7684 $i$\uff0c\u7ef4\u62a4\u5f53\u5b83\u4f5c\u4e3a $b_1$ \u65f6\uff0c\u6700\u8fd1\u7684 $b_3$\uff08\u6216 $b_4$\uff09\u9700\u8981\u5728\u54ea\u91cc\u3002\n\n- \u5bf9\u4e8e\u6bcf\u7ec4\u8be2\u95ee\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728 $[l, r]$ \u4e2d\u627e\u5230\u6700\u5c0f\u503c\u548c\u6700\u5c0f\u503c\u4f4d\u7f6e\uff0c\u5224\u65ad\u4e00\u4e0b\u6700\u5c0f\u503c\u662f\u5426 $\\le r$ \u5373\u53ef\u77e5\u9053\u662f\u5426\u5b58\u5728\u8fd9\u6837\u7684 $b$\u3002\n\n\u6211\u4eec\u5bf9 $b$ \u7684\u957f\u5ea6\u4e3a $3$ \u548c $4$ \u5206\u7c7b\u8ba8\u8bba\u3002\n\n#### b \u7684\u957f\u5ea6\u4e3a 3\n\n\u5b58\u5728\u4e00\u4e2a\u957f\u5ea6\u4e3a $3$ \u7684 $b$\uff0c\u53ea\u9700\u8981\u5e8f\u5217 $a$ \u5728 $[l, r]$ \u4e2d\u4e0d\u5355\u8c03\u3002\n\n\u5bf9\u6bcf\u4e00\u4e2a\u4f4d\u7f6e $i$ \u5904\u7406\u51fa\u5b83\u524d\u9762\u7b2c\u4e00\u4e2a\u4e0d\u540c\u4e8e $a_i$ \u7684\u4f4d\u7f6e $pre_i$\uff0c\u5b83\u540e\u9762\u7b2c\u4e00\u4e2a\u4e0d\u540c\u4e8e $a_i$ \u7684\u4f4d\u7f6e $nxt_i$\uff0c\u5982\u679c\u6709 $(a_i - a_{pre_i})(a_i - a_{nxt_i}) \\gt 0$\uff0c\u5219\u5b58\u5728\u4e00\u4e2a\u957f\u5ea6\u4e3a $3$ \u7684 $b$ $\\{a_{pre_i}, a_i, a_{nxt_i}\\}$\u3002\n\n\u5728 $b_1 = pre_i$ \u4e0a\u8bb0\u5f55\u4e00\u4e2a\u53ef\u80fd\u7684 $b_3 = nxt_i$\uff0cST \u8868\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\u548c\u6700\u5c0f\u503c\u4f4d\u7f6e\u5373\u53ef\u3002\n\n#### b \u7684\u957f\u5ea6\u4e3a 4\n\n\u5b58\u5728\u4e00\u4e2a\u957f\u5ea6\u4e3a $4$ \u7684 $b$\uff0c\u9700\u8981\u6ee1\u8db3 $b_1, b_4$ \u65e2\u4e0d\u662f $b$ \u4e2d\u7684\u6700\u5927\u503c\uff0c\u4e5f\u4e0d\u662f $b$ \u4e2d\u7684\u6700\u5c0f\u503c\u3002\n\n\u4ece\u540e\u5f80\u524d\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u4e0d\u964d\u7684\u5355\u8c03\u6808 $stk_1$ \u548c\u4e00\u4e2a\u5355\u8c03\u4e0d\u5347\u7684\u5355\u8c03\u6808 $stk_2$\u3002\u8fd9\u8868\u793a\u7684\u610f\u4e49\u662f\uff0c\u505a\u5230\u7b2c $i$ \u4e2a\u4f4d\u7f6e\u65f6\uff0c$stk_1$ \u4e2d\u7684\u5143\u7d20\u662f\u53ef\u80fd\u6210\u4e3a $b$ \u4e2d\u6700\u5927\u503c\u7684\u4f4d\u7f6e\uff0c$stk_2$ \u4e2d\u7684\u5143\u7d20\u662f\u53ef\u80fd\u6210\u4e3a $b$ \u4e2d\u6700\u5c0f\u503c\u7684\u4f4d\u7f6e\u3002\n\n\u4e3a\u4e86\u4f7f $b_1, b_4$ \u4e0d\u6210\u4e3a $b$ \u4e2d\u7684\u6700\u5927\u6216\u6700\u5c0f\u503c\uff0c\u53ef\u63a8\u65ad\u51fa $b_4$ \u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a\n\n- $b_4$ \u65e2\u4e0d\u5728 $stk_1$ \u4e2d\uff0c\u4e5f\u4e0d\u5728 $stk_2$ \u4e2d\u3002\n- \u5728 $b_4$ \u4e4b\u524d\uff0c\u5b58\u5728\u4e00\u4e2a $x$\uff0c\u6ee1\u8db3 $x$ \u5728 $stk_1$ \u4e2d\u4e14 $a_x \\neq a_i$\uff0c\u5b58\u5728\u4e00\u4e2a $y$\uff0c\u6ee1\u8db3 $y$ \u5728 $stk_2$ \u4e2d\u4e14 $a_y \\neq a_i$\u3002\n\n\u4e5f\u5c31\u662f\u627e\u5230 $stk_1$ \u4e2d\u7b2c\u4e00\u4e2a\u4e25\u683c\u5927\u4e8e $a_i$ \u7684\u4f4d\u7f6e $gt$ \u548c $stk_2$ \u4e2d\u7b2c\u4e00\u4e2a\u4e25\u683c\u5c0f\u4e8e $a_i$ \u7684\u4f4d\u7f6e $lt$\uff0c\u7136\u540e\u5728 $(\\max(gt, lt), n]$ \u4e2d\u627e\u5230\u65e2\u4e0d\u5728 $stk_1$ \u4e2d\u4e5f\u4e0d\u5728 $stk_2$ \u4e2d\u7684\u6700\u5c0f\u4f4d\u7f6e\uff0c\u8fd9\u5c31\u662f\u7b26\u5408\u6761\u4ef6\u7684\u6700\u5c0f $b_4$\u3002\n\n\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u7528 $\\texttt{std::set}$ \u8fdb\u884c\u7ef4\u62a4\u3002\n\n\u6700\u540e\u540c\u6837\u7684\uff0c\u5f97\u5230\u4e86\u6bcf\u4e2a $b_1$ \u5bf9\u5e94\u7684\u6700\u8fd1 $b_4$\uff0c\u7528 ST \u8868\u7ef4\u62a4\u4e00\u4e0b\u6700\u5c0f\u503c\u548c\u6700\u5c0f\u503c\u4f4d\u7f6e\u5373\u53ef\u3002\n\n\u5982\u679c $b$ \u7684\u957f\u5ea6\u4e3a $3$ \u4e3a $4$ \u90fd\u4e0d\u6ee1\u8db3\uff0c\u90a3\u5c31\u662f $0$ \u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n \\log n + q)$\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <set>\n\nconst int MaxN = 200000, MaxLog = 18;\n\nint N, M, Q;\nint A[MaxN + 5];\nint PreDif[MaxN + 5], NxtDif[MaxN + 5];\nint Stk1[MaxN + 5], Tp1, Stk2[MaxN + 5], Tp2;\nint MinJ[MaxN + 5], Nx1[MaxN + 5], Nx2[MaxN + 5];\nint Buc[MaxN + 5], Pop1[MaxN + 5], Pop2[MaxN + 5];\nint X[MaxN + 5], R[MaxN + 5];\nint St[MaxLog + 2][MaxN + 5], St2[MaxLog + 2][MaxN + 5];\nstd::set<int> S;\n\nvoid init() {\n  scanf(\"%d %d\", &N, &Q);\n  for (int i = 1; i <= N; ++i) scanf(\"%d\", &A[i]);\n  for (int i = 1; i <= N; ++i) {\n    if (A[i - 1] != A[i]) PreDif[i] = i - 1;\n    else PreDif[i] = PreDif[i - 1];\n  }\n  for (int i = N; i >= 1; --i) {\n    if (A[i + 1] != A[i]) NxtDif[i] = i + 1;\n    else NxtDif[i] = NxtDif[i + 1];\n  }\n  R[0] = N + 1;\n  for (int i = 1; i <= N; ++i) {\n    if (PreDif[i] == 0 || NxtDif[i] == N + 1) continue;\n    if (1LL * (A[i] - A[PreDif[i]]) * (A[i] - A[NxtDif[i]]) > 0) {\n      M++;\n      X[M] = i, R[M] = NxtDif[i];\n      if (R[M] < R[St2[0][PreDif[i]]]) St2[0][PreDif[i]] = M;\n    }\n  }\n}\n\ninline int gt(int x) {\n  int lbound = 1, rbound = Tp1, ans = N + 1;\n  while (lbound <= rbound) {\n    int mid = (lbound + rbound) >> 1;\n    if (A[Stk1[mid]] > x) {\n      ans = Stk1[mid];\n      lbound = mid + 1;\n    } else rbound = mid - 1;\n  }\n  return ans;\n}\n\ninline int lt(int x) {\n  int lbound = 1, rbound = Tp2, ans = N + 1;\n  while (lbound <= rbound) {\n    int mid = (lbound + rbound) >> 1;\n    if (A[Stk2[mid]] < x) {\n      ans = Stk2[mid];\n      lbound = mid + 1;\n    } else rbound = mid - 1;\n  }\n  return ans;\n}\n\ninline int query(int l, int r) {\n  int k = 31 - __builtin_clz(r - l + 1);\n  int ls = St[k][l], rs = St[k][r - (1 << k) + 1];\n  if (MinJ[ls] <= MinJ[rs]) return ls;\n  else return rs;\n}\n\ninline int query2(int l, int r) {\n  int k = 31 - __builtin_clz(r - l + 1);\n  int ls = St2[k][l], rs = St2[k][r - (1 << k) + 1];\n  if (R[ls] <= R[rs]) return ls;\n  else return rs;\n}\n\nvoid solve() {\n  S.insert(N + 1);\n  for (int i = N; i >= 1; --i) {\n    while (Tp1 > 0 && A[Stk1[Tp1]] < A[i]) {\n      Buc[Stk1[Tp1]]--;\n      Pop1[Stk1[Tp1]] = i;\n      if (Buc[Stk1[Tp1]] == 0) S.insert(Stk1[Tp1]);\n      Tp1--;\n    }\n    Stk1[++Tp1] = i, Buc[i]++;\n    while (Tp2 > 0 && A[Stk2[Tp2]] > A[i]) {\n      Buc[Stk2[Tp2]]--;\n      Pop2[Stk2[Tp2]] = i;\n      if (Buc[Stk2[Tp2]] == 0) S.insert(Stk2[Tp2]);\n      Tp2--;\n    }\n    Stk2[++Tp2] = i, Buc[i]++;\n    Nx1[i] = gt(A[i]), Nx2[i] = lt(A[i]);\n    MinJ[i] = *(S.lower_bound(std::max(Nx1[i], Nx2[i])));\n  }\n  for (int i = 1; i <= N; ++i) St[0][i] = i;\n  for (int i = 1; (1 << i) <= N; ++i)\n    for (int j = 1; j + (1 << i) - 1 <= N; ++j) {\n      int ls = St[i - 1][j], rs = St[i - 1][j + (1 << (i - 1))];\n      if (MinJ[ls] <= MinJ[rs]) St[i][j] = ls;\n      else St[i][j] = rs;\n      ls = St2[i - 1][j], rs = St2[i - 1][j + (1 << (i - 1))];\n      if (R[ls] <= R[rs]) St2[i][j] = ls;\n      else St2[i][j] = rs;\n    }\n  for (int q = 1; q <= Q; ++q) {\n    int l, r;\n    scanf(\"%d %d\", &l, &r);\n    int minpos = query(l, r);\n    if (MinJ[minpos] <= r) {\n      int x = Pop1[MinJ[minpos]], y = Pop2[MinJ[minpos]];\n      if (A[minpos] < A[MinJ[minpos]]) y = Nx2[minpos];\n      else x = Nx1[minpos];\n      printf(\"%d\\n\", 4);\n      printf(\"%d %d %d %d\\n\", minpos, std::min(x, y), std::max(x, y), MinJ[minpos]);\n    } else {\n      int k = query2(l, r);\n      if (R[k] <= r) {\n        printf(\"%d\\n\", 3);\n        printf(\"%d %d %d\\n\", PreDif[X[k]], X[k], R[k]);\n      } else printf(\"%d\\n\\n\", 0);\n    }\n  }\n}\n\nint main() {\n  init();\n  solve();\n  return 0;\n}\n```\n\n",
        "postTime": 1585788434,
        "uid": 48843,
        "name": "Tweetuzki",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1332G \u3010No Monotone Triples\u3011"
    },
    {
        "content": "Upd on 2022.9.17\uff1a\u4fee\u6539\u9898\u89e3\u3002\n\n> [CF1332G No Monotone Triples](https://www.luogu.com.cn/problem/CF1332G)\n\n\u597d\u9898\u3002\n\n\u9996\u5148\u6839\u636e Dilworth \u5b9a\u7406\u8bc1\u660e\u957f\u5ea6\u53ea\u80fd\u662f $3$ \u6216 $4$\u3002\n\n\u5bf9\u4e8e\u957f\u5ea6\u4e3a $3$ \u7684\uff0c\u8003\u8651\u4e00\u4e2a\u503c\u76f8\u540c\u7684\u6781\u957f\u8fde\u7eed\u6bb5 $[l + 1, r]$\uff0c\u82e5\u5b83\u662f\u5173\u4e8e\u4e0e\u5b83\u76f8\u90bb\u7684\u4e24\u4e2a\u4f4d\u7f6e\u7684\u6781\u503c\u70b9\uff0c\u90a3\u4e48 $(l, l + 1, r + 1)$ \u5408\u6cd5\u3002\u7ef4\u62a4 $lst_i$ \u8868\u793a\u4ece $i$ \u5f00\u59cb\u7b2c\u4e00\u4e2a\u8fd9\u6837\u7684 $l$\uff0c$rt_i$ \u8868\u793a $i$ \u4e0b\u4e00\u4e2a\u4e0e\u5b83\u4e0d\u540c\u7684\u540e\u7ee7\u7684\u4f4d\u7f6e\uff0c\u67e5\u8be2\u65f6\u68c0\u67e5\u662f\u5426\u6709 $rt_{lst_l + 1} + 1 \\leq r$\uff0c\u5219 $(lst_l, lst_l + 1, rt_{lst_l + 1})$ \u4e3a\u4e00\u4e2a\u5408\u6cd5\u7b54\u6848\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u7ebf\u6027\u3002\n\n\u5bf9\u4e8e\u957f\u5ea6\u4e3a $4$ \u7684\uff0c\u5fc5\u7136\u662f $b_2, b_3$ \u53d6\u6781\u503c\uff0c$b_1, b_4$ \u843d\u5728\u503c\u57df\u4e2d\u95f4\u4e14\u4e0d\u7b49\u4e8e\u6781\u503c\u3002\u8003\u8651\u4ece\u540e\u5f80\u524d\u679a\u4e3e\u6bcf\u4e2a\u4f4d\u7f6e $p$ \u5e76\u7ef4\u62a4\u4ece $p$ \u5f00\u59cb **\u975e\u4e25\u683c** \u524d\u7f00\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u7684\u5355\u8c03\u6808\uff0c\u90a3\u4e48\u53ea\u6709\u843d\u5728\u5355\u8c03\u6808\u91cc\u9762\u7684\u5143\u7d20\u624d\u4f1a\u6210\u4e3a\u6781\u503c\u3002\u4f8b\u5982\uff0c\u82e5 $p < i < j$ \u4e14 $a_i < a_j < a_p$\uff0c\u90a3\u4e48\u663e\u7136\u662f $a_i$ \u66f4\u9002\u5408\u505a\u6700\u5c0f\u503c\u3002\u5bf9\u4e8e\u6700\u5927\u503c\u540c\u7406\u3002\n\n\u6838\u5fc3\u89c2\u5bdf\uff1a\u4f5c\u4e3a $b_4$ \u7684\u4f4d\u7f6e $p_4$ \u4e00\u5b9a\u4e0d\u4f1a\u843d\u5728\u5355\u8c03\u6808\u5185\uff0c\u56e0\u4e3a\u5355\u8c03\u6808\u5185\u662f\u524d\u7f00\u6700\u5927\u503c\u6216\u524d\u7f00\u6700\u5c0f\u503c\u3002\u540c\u65f6\uff0c\u5982\u679c $p_4$ \u6ca1\u6709\u843d\u5728\u5355\u8c03\u6808\u5185\uff0c\u5219\u8003\u8651 $p_4$ \u843d\u5728\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u5355\u8c03\u6808\u5185\u7684\u524d\u9a71\u4f4d\u7f6e $u, v$\uff0c\u5219\u5fc5\u7136\u6709 $a_u > a_{p_4}$ \u4e14 $a_v < a_{p_4}$\uff0c\u5426\u5219 $p_4$ \u6210\u4e3a\u67d0\u4e2a\u5355\u8c03\u6808\u5185\u7684\u5143\u7d20\u3002\n\n\u8003\u8651 set \u7ef4\u62a4\u6240\u6709\u4e0d\u5728\u5355\u8c03\u6808\u5185\u7684\u4f4d\u7f6e $S$\uff0c\u6bcf\u6b21\u53ea\u8981\u67e5\u4e24\u4e2a\u5355\u8c03\u6808\u7b2c\u4e00\u4e2a\u4e0d\u7b49\u4e8e $a_p$ \u7684\u4f4d\u7f6e $mnp$ \u548c $mxp$ \u7684\u8f83\u5927\u503c\u5728 $S$ \u4e2d\u7684\u540e\u7ee7 $q$\uff0c\u90a3\u4e48\u5f53 $p_1 = p$ \u65f6\uff0c$p_4$ \u6700\u5c0f\u7684\u5408\u6cd5\u53d6\u503c\u5373 $q$\uff0c$p_2, p_3$ \u7684\u5408\u6cd5\u53d6\u503c\u4e5f\u53ef\u4ee5\u5728\u6808\u5185\u4e8c\u5206\u6700\u540e\u4e00\u4e2a\u5728 $q$ \u4e4b\u524d\u7684\u4f4d\u7f6e\u5f97\u5230\u3002$mnp$ \u548c $mxp$ \u540c\u6837\u53ef\u4ee5\u6808\u5185\u4e8c\u5206\u6216\u9012\u63a8\u9884\u5904\u7406\u3002\n\n\u81f3\u4e8e\u56de\u7b54\u8be2\u95ee\uff0c\u65e2\u7136\u5df2\u7ecf\u5bf9\u6bcf\u4e2a $p$ \u6c42\u5f97 $p_1 = p$ \u65f6 $p_4$ \u6700\u5c0f\u7684\u5408\u6cd5\u53d6\u503c $c_p$\uff0c\u79bb\u7ebf\u626b\u63cf\u7ebf\u6216\u5bf9 $c_i$ \u5efa\u7ebf\u6bb5\u6811\u5747\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n\\log n)$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define fi first\n#define se second\n#define TIME 1e3 * clock() / CLOCKS_PER_SEC\nusing ll = long long;\nusing pii = pair<int, int>;\nusing pll = pair<ll, ll>;\nusing ull = unsigned long long;\ninline ll read() {\n  ll x = 0, sgn = 0;\n  char s = getchar();\n  while(!isdigit(s)) sgn |= s == '-', s = getchar();\n  while(isdigit(s)) x = x * 10 + s - '0', s = getchar();\n  return sgn ? -x : x;\n}\ninline void print(int x) {\n  if(x < 0) return putchar('-'), print(-x);\n  if(x >= 10) print(x / 10);\n  putchar(x % 10 + '0');\n}\nbool Mbe;\nconstexpr int N = 2e5 + 5;\nint n, q, a[N], in[N], lst[N], rt[N];\nset<int> exist;\nset<pii> query;\nstruct stack {\n  int tp, stc[N];\n  bool empty() {return !tp;}\n  int top() {return stc[tp];}\n  void pop() {\n    int val = stc[tp--];\n    if(!--in[val]) exist.insert(val);\n  }\n  void push(int val) {\n    stc[++tp] = val;\n    if(!in[val]++) exist.erase(val);\n  }\n  int binary(int val) {\n    if(a[stc[1]] == a[val]) return n;\n    int l = 1, r = tp;\n    while(l < r) {\n      int m = l + r + 2 >> 1;\n      if(a[stc[m]] == a[val]) r = m - 1;\n      else l = m;\n    }\n    return stc[l];\n  }\n  int pref(int val) {\n    int l = 1, r = tp;\n    while(l < r) {\n      int m = l + r >> 1;\n      if(stc[m] < val) r = m;\n      else l = m + 1;\n    }\n    return stc[l];\n  }\n} mn, mx;\nvector<int> ans[N];\nvector<pii> buc[N];\nbool Med;\nint main() {\n  fprintf(stderr, \"%.3lf MB\\n\", (&Mbe - &Med) / 1048576.0);\n  #ifdef ALEX_WEI\n    FILE* IN = freopen(\"1.in\", \"r\", stdin);\n    FILE* OUT = freopen(\"1.out\", \"w\", stdout);\n  #endif\n  cin >> n >> q, lst[n + 1] = rt[n + 1] = n + 1;\n  for(int i = 1; i <= n; i++) a[i] = read();\n  for(int i = n; i; i--) {\n    exist.insert(i);\n    rt[i] = a[i] == a[i + 1] ? rt[i + 1] : i + 1;\n    if(rt[i + 1] <= n && 1ll * (a[i + 1] - a[i]) * (a[i + 1] - a[rt[i + 1]]) > 0) lst[i] = i;\n    else lst[i] = lst[i + 1];\n  }\n  exist.insert(n + 1);\n  for(int i = 1; i <= q; i++) {\n    int l = read(), r = read();\n    if(lst[l] <= n && rt[lst[l] + 1] <= r) {\n      ans[i].push_back(lst[l]);\n      ans[i].push_back(lst[l] + 1);\n      ans[i].push_back(rt[lst[l] + 1]);\n    }\n    if(r - l + 1 >= 4) {\n      buc[r - 3].push_back({i, r});\n      buc[l - 1].push_back({-i, r});\n    }\n  }\n  for(int i = n; i; i--) {\n    while(!mx.empty() && a[i] > a[mx.top()]) mx.pop();\n    while(!mn.empty() && a[i] < a[mn.top()]) mn.pop();\n    mx.push(i), mn.push(i);\n    for(pii it : buc[i]) {\n      int id = abs(it.first), r = it.second;\n      if(it.first < 0) {\n        auto pt = query.find({r, id});\n        if(pt != query.end()) query.erase(pt);\n      }\n      else query.insert({r, id});\n    }\n    if(!query.empty()) {\n      int pos = *exist.upper_bound(max(mn.binary(i), mx.binary(i)));\n      if(pos > n) continue;\n      while(!query.empty()) {\n        auto pt = --query.end();\n        if(pt->first >= pos) {\n          int id = pt->second;\n          ans[id].clear();\n          ans[id].push_back(i);\n          ans[id].push_back(mn.pref(pos));\n          ans[id].push_back(mx.pref(pos));\n          ans[id].push_back(pos);\n          query.erase(pt);\n        }\n        else break;\n      }\n    }\n  }\n  for(int i = 1; i <= q; i++) {\n    if(ans[i].size()) {\n      putchar(ans[i].size() + '0'), putchar('\\n');\n      sort(ans[i].begin(), ans[i].end());\n      for(int it : ans[i]) print(it), putchar(' ');\n    }\n    else putchar('0');\n    putchar('\\n');\n  }\n  cerr << TIME << \" ms\\n\";\n  return 0;\n}\n/*\n2022/9/16\nauthor: Alex_Wei\nstart coding at 22:43\nfinish debugging at 23:46\n*/\n```",
        "postTime": 1648649196,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "CF1332G No Monotone Triples"
    },
    {
        "content": "[Codeforces \u9898\u76ee\u4f20\u9001\u95e8](https://codeforces.com/contest/1332/problem/G) & [\u6d1b\u8c37\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1332G)\n\n\u9996\u5148~~\u6253\u8868~~\u5373\u53ef\u53d1\u73b0\u5bf9\u4e8e\u4efb\u610f\u957f\u5ea6 $\\ge 5$ \u7684\u5e8f\u5217\u603b\u5b58\u5728\u4e00\u4e2a Monotone triple\uff0c\u8bc1\u660e~~\u4e0d\u4f1a~~\u5b9e\u5728\u4e0d\u884c\u76f4\u63a5 $5^5$ \u679a\u4e3e\u76f8\u5bf9\u4f4d\u7f6e\u5927\u5c0f\u90fd\u53ef\u4ee5\u53d1\u73b0\uff0c\u56e0\u6b64\u7b54\u6848\u8981\u4e48\u662f $0$\uff0c\u8981\u4e48\u662f $3$\uff0c\u8981\u4e48\u662f $4$\uff0c\u6211\u4eec\u8003\u8651\u5bf9\u4e09\u79cd\u60c5\u51b5\u5206\u522b\u5206\u7c7b\u8ba8\u8bba\uff0c\u5373\u68c0\u67e5\u533a\u95f4\u5185\u662f\u5426\u5b58\u5728\u957f\u5ea6\u4e3a $3$ \u7684 Monotone triple free \u7684\u5b50\u5e8f\u5217\uff0c\u518d\u68c0\u67e5\u533a\u95f4\u5185\u662f\u5426\u5b58\u5728\u957f\u5ea6\u4e3a $4$ \u7684 Monotone triple free \u7684\u5b50\u5e8f\u5217\uff0c\u8fd9\u6837\u5373\u53ef\u786e\u5b9a\u7b54\u6848\u3002\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5927\u81f4\u5c06\u9898\u76ee\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff1a\n\n### 1. \u68c0\u9a8c\u533a\u95f4\u4e2d\u662f\u5426\u5b58\u5728\u957f\u5ea6\u4e3a $3$ \u7684 Monotone triple free \u7684\u5b50\u5e8f\u5217\n\n\u9996\u5148\u663e\u7136\u4e09\u4e2a\u4f4d\u7f6e $i,j,k(i<j<k)$ \u80fd\u591f\u6784\u6210 Monotone triple free \u7684\u5e8f\u5217\u5f53\u4e14\u4ec5\u5f53\u4e2d\u95f4\u4f4d\u7f6e\u7684\u503c**\u4e25\u683c\u5c0f\u4e8e**\u8fb9\u4e0a\u4e24\u4e2a\u6570\u7684\u503c\uff0c\u6216\u8005\u4e2d\u95f4\u4f4d\u7f6e\u7684\u503c**\u4e25\u683c\u5927\u4e8e**\u8fb9\u4e0a\u4e24\u4e2a\u6570\u7684\u503c\u3002\n\n\u8003\u8651\u679a\u4e3e\u4e2d\u95f4\u4f4d\u7f6e $p$\uff0c\u6211\u4eec\u8d2a\u5fc3\u5730\u60f3\uff0c\u6211\u4eec\u5e0c\u671b\u8fd9\u4e09\u4e2a\u4f4d\u7f6e\u90fd\u5728\u533a\u95f4 $[l,r]$ \u4e2d\uff0c\u56e0\u6b64\u8fb9\u4e0a\u4e24\u4e2a\u4f4d\u7f6e\u80af\u5b9a\u79bb\u4e2d\u95f4\u4f4d\u7f6e\u8d8a\u7d27\u51d1\u8d8a\u597d\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5148\u9884\u5904\u7406\u51fa\u56db\u4e2a\u6570\u7ec4\uff1a$mxl_i$ \u8868\u793a\u5728 $i$ \u524d\u9762\u4e14\u5927\u4e8e $a_i$ \u7684\u79bb $i$ \u6700\u8fd1\u7684\u4f4d\u7f6e\uff0c$mxr_i$ \u8868\u793a\u5728 $i$ \u540e\u9762\u4e14\u5927\u4e8e $a_i$ \u7684\u79bb $i$ \u6700\u8fd1\u7684\u4f4d\u7f6e\uff0c$mnl_i,mnr_i$ \u4e5f\u53ef\u4ee5\u7c7b\u4f3c\u5730\u5b9a\u4e49\uff0c\u5355\u8c03\u6808\u53ef\u4ee5\u6c42\u51fa\u3002\u90a3\u4e48\u5bf9\u4e8e\u4ee5 $p$ \u4e3a\u4e2d\u5fc3\u7684\u957f\u5ea6\u4e3a $3$ \u7684\u5e8f\u5217\uff0c$(mnl_p,p,mnr_p),(mxl_p,p,mxr_p)$ \u5fc5\u7136\u90fd\u662f\u7684 Monotone triple free \u7684\u5e8f\u5217\uff0c\u5e76\u4e14\u8fd9\u4e24\u4e2a\u5e8f\u5217\u5206\u522b\u662f\u4e0a\u8ff0\u4e24\u79cd\u60c5\u51b5\u4e2d\u6700\u7d27\u51d1\u7684\u5e8f\u5217\u2014\u2014\u5982\u679c\u5b83\u4eec\u90fd\u4e0d\u80fd\u5305\u542b\u5728 $[l,r]$ \u4e2d\u90a3\u4e48\u6240\u6709\u4ee5 $p$ \u4e3a\u4e2d\u5fc3\u7684\u957f\u5ea6\u4e3a $3$ \u7684 Monotone triple free \u5e8f\u5217\u80af\u5b9a\u90fd\u4e0d\u80fd\u5305\u542b\u5728 $[l,r]$ \u4e2d\u4e86\u3002\n\n\u56e0\u6b64\u9898\u76ee\u8f6c\u5316\u4e3a\uff0c\u662f\u5426 $\\exists p\\in[l,r]$ \u6ee1\u8db3 $mnl_p\\ge l,mnr_p\\le r$ \u6216\u8005 $mxl_p\\ge l,mxr_p\\le r$\u3002\u8003\u8651\u4e00\u4e2a\u79bb\u7ebf\u505a\u6cd5\uff0c\u6211\u4eec\u5c06\u6240\u6709\u8be2\u95ee\u90fd\u6302\u5728 $l$ \u5904\uff0c\u7136\u540e\u5f00\u4e00\u4e2a\u6307\u9488 $i$ \u4ece\u53f3\u5230\u5de6\u626b\u63cf\uff0c\u518d\u5efa\u7acb\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u6bcf\u6b21\u5f53\u6307\u9488\u4ece $i+1$ \u53d8\u5230 $i$ \u65f6\u90fd\u679a\u4e3e\u6240\u6709 $mnl_p=i$ \u7684 $p$ \u5e76\u7528 $mnr_p$ \u66f4\u65b0\u7ebf\u6bb5\u6811\u4e0a $p$ \u4f4d\u7f6e\u4e0a\u7684\u503c\uff0c$mxl$ \u4e5f\u540c\u7406\uff0c\u56de\u7b54\u8be2\u95ee\u65f6\u53ea\u9700\u68c0\u9a8c\u7ebf\u6bb5\u6811\u4e0a $[l,r]$ \u4f4d\u7f6e\u4e0a\u7684\u6700\u5c0f\u503c\u662f\u5426 $\\le r$ \u5373\u53ef\uff0c\u8f93\u51fa\u65b9\u6848\u53ea\u9700\u518d\u8bb0\u5f55\u4e00\u4e2a\u53d6\u5230\u6700\u5c0f\u503c\u7684\u4f4d\u7f6e\u518d\u7a0d\u5fae\u5206\u4e0b\u7c7b\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $n\\log n$\n\n### 2. \u68c0\u9a8c\u533a\u95f4\u4e2d\u662f\u5426\u5b58\u5728\u957f\u5ea6\u4e3a $4$ \u7684 Monotone triple free \u7684\u5b50\u5e8f\u5217\n\n\u8fd9\u4e2a\u770b\u8d77\u6765\u6709\u4ebf\u70b9\u70b9\u68d8\u624b\uff0c\u56e0\u6b64\u6211\u4eec\u5148\u6765\u6316\u6398\u4e0b\u6027\u8d28\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u957f\u5ea6\u4e3a $4$ \u7684\u5e8f\u5217\u800c\u8a00\uff0c\u5982\u679c\u5b83\u7684\u6700\u5927\u503c\u4e0d\u552f\u4e00\u90a3\u80af\u5b9a\u4e0d\u5408\u6cd5\u2014\u2014\u5982\u679c\u8fd9\u4e24\u4e2a\u6700\u5927\u503c\u6709\u4e00\u4e2a\u5728\u4e2d\u95f4\u4e24\u4e2a\u4f4d\u7f6e\u5c31\u80af\u5b9a\u5b58\u5728\u4e00\u4e2a\u4e09\u5143\u7ec4\u6ee1\u8db3\u5de6\u8fb9\u4e24\u4e2a\u6570\u6216\u53f3\u8fb9\u4e24\u4e2a\u6570\u76f8\u540c\uff0c\u5426\u5219\u4e0d\u8bba\u4e2d\u95f4\u4e24\u4e2a\u6570\u5927\u5c0f\u5173\u7cfb\u5982\u4f55\u4e5f\u90fd\u4f1a\u5b58\u5728 monotone triple\u3002\u56e0\u6b64\u8fd9\u56db\u4e2a\u6570\u53ea\u80fd\u6709\u552f\u4e00\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u800c\u5982\u679c\u8fd9\u552f\u4e00\u7684\u6700\u5927\u503c/\u6700\u5c0f\u503c\u5728\u4e24\u8fb9\uff0c\u4e0d\u59a8\u4ee5\u6700\u5927\u503c\u5728\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u4e3a\u4f8b\uff0c\u5982\u679c\u540e\u4e09\u4e2a\u6570\u5b58\u5728\u9006\u5e8f\u5bf9\u90a3\u8fd9\u4e2a\u6700\u5927\u503c\u4e0e\u8fd9\u4e2a\u9006\u5e8f\u5bf9\u5c31\u5b58\u5728 monotone triple\uff0c\u5426\u5219\u8fd9\u4e09\u4e2a\u6570\u5c31\u6784\u6210\u4e86 monotone triple\uff0c\u56e0\u6b64\u56db\u4e2a\u6570\u6784\u6210 Monotone triple free \u5e8f\u5217\u7684\u5145\u8981\u6761\u4ef6\u662f\uff1a\u5b58\u5728\u552f\u4e00\u7684\u6700\u5927/\u5c0f\u503c\uff0c\u5e76\u4e14\u6700\u5927/\u5c0f\u503c\u5206\u522b\u5728\u7b2c\u4e8c\u3001\u4e09\u4e2a\u4f4d\u7f6e\u3002\n\n\u6211\u4eec\u8003\u8651\u56fa\u5b9a\u7b2c\u4e00\u3001\u56db\u4e2a\u4f4d\u7f6e $i,l$\uff0c\u90a3\u4e48\u6211\u4eec\u80af\u5b9a\u4f1a\u9009\u62e9\u533a\u95f4 $(i,l)$ \u7684\u6700\u5927\u503c&\u6700\u5c0f\u503c\u4f5c\u4e3a\u7b2c\u4e8c\u3001\u4e09\u4e2a\u4f4d\u7f6e\uff0c\u5373\u5b58\u5728\u5408\u6cd5\u7684\u5e8f\u5217\u5f53\u4e14\u4ec5\u5f53\u533a\u95f4 $(i,l)$ \u7684\u6700\u5927\u503c $>\\max(a_i,a_l)$\uff0c\u4e14\u6700\u5c0f\u503c $<\\min(a_i,a_l)$\uff0c\u76f4\u63a5\u679a\u4e3e\u80af\u5b9a\u884c\u4e0d\u901a\u3002\u6211\u4eec\u8003\u8651\u9884\u5904\u7406 $r3_i$ \u8868\u793a\u6700\u5c0f\u7684 $r$ \u6ee1\u8db3 $(i,r]$ \u6700\u5927\u503c $>a_i$ \u4e14\u6700\u5c0f\u503c $<a_i$\uff0c$l3_i$ \u8868\u793a\u6700\u5927\u7684 $l$ \u6ee1\u8db3 $[l,i)$ \u6700\u5927\u503c $>a_i$ \u4e14\u6700\u5c0f\u503c $<a_i$\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u4e8c\u5206+ST \u8868\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u4e0a\u9762\u6c42\u51fa\u7684 $mnl_i,mnr_i,mxl_i,mxr_i$\uff0c\u90a3\u4e48\u5f53\u6211\u4eec\u56fa\u5b9a\u4f4f $i$ \u4e4b\u540e\uff0c\u5408\u6cd5\u7684 $l$ \u5fc5\u987b $>r3_i$\uff0c\u5e76\u4e14 $l3_l>i$\u3002\n\n\u6211\u4eec\u518d\u6c42\u51fa $r4_i$ \u8868\u793a\u6700\u5c0f\u7684 $l$ \u6ee1\u8db3 $l>r3_i,l3_l>i$\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7\u5bf9 $l3$ \u6570\u7ec4\u5efa ST \u8868\u4e4b\u540e\u4e8c\u5206\u6c42\u51fa\uff0c\u90a3\u4e48 $i,r4_i$ \u6070\u597d\u5206\u522b\u5bf9\u5e94\u4e00\u4e2a\u957f\u5ea6\u4e3a $4$ \u7684 Monotone triple free \u5e8f\u5217\u7684 $i,l$\uff0c\u5e76\u4e14\u8fd9\u80af\u5b9a\u662f\u4ee5 $i$ \u4e3a\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u4e0b\u6807\u6700\u5c0f\u7684\u5408\u6cd5\u5e8f\u5217\uff0c\u56e0\u6b64\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\u6211\u4eec\u9700\u68c0\u9a8c\u662f\u5426\u5b58\u5728\u4e00\u4e2a $i\\in[l,r]$ \u6ee1\u8db3 $r4_i\\le r$\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u518d\u5bf9 $r4$ \u5efa ST \u8868\u6c42\u51fa\u3002\u6700\u540e\u8f93\u51fa\u65b9\u6848\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u53d6\u5230\u6700\u5c0f\u503c\u7684\u4f4d\u7f6e\u6c42\u51fa\u8fb9\u4e0a\u4e24\u4e2a\u5143\u7d20\uff0c\u518d\u6839\u636e\u8fd9\u4e24\u4e2a\u4f4d\u7f6e\u4e4b\u95f4\u6700\u5927\u503c\u3001\u6700\u5c0f\u503c\u7684\u4f4d\u7f6e\u6c42\u51fa\u4e2d\u95f4\u4e24\u4e2a\u5143\u7d20\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $n\\log n$\u3002\n\n~~\u90a3\u4e48\u95ee\u9898\u5c31\u6765\u4e86\uff0c\u4e3a\u4ec0\u4e48\u6c42\u957f\u5ea6\u4e3a $3$ \u7684\u5e8f\u5217\u65f6\u79bb\u7ebf\u4e86\uff0c\u6c42\u957f\u5ea6\u4e3a $4$ \u7684\u5e8f\u5217\u65f6\u53cd\u800c\u6ca1\u6709\u79bb\u7ebf\u5462~~\n\n```cpp\nconst int MAXN=2e5;\nconst int LOG_N=17;\nconst int INF=0x3f3f3f3f;\nint n,qu,a[MAXN+5],L[MAXN+5],R[MAXN+5];\nvector<pii> ql[MAXN+5];\nint mnl[MAXN+5],mxl[MAXN+5],mnr[MAXN+5],mxr[MAXN+5];\nnamespace solve3{\n\tvector<pii> pl[MAXN+5];\n\ttuple<int,int,int> ans[MAXN+5];\n\tstruct node{int l,r;pii val;} s[MAXN*4+5];\n\tpii merge(pii x,pii y){\n\t\tpii ret;ret.fi=min(x.fi,y.fi);\n\t\tif(ret.fi==x.fi) ret.se=x.se;\n\t\telse ret.se=y.se;\n\t\treturn ret;\n\t}\n\tvoid pushup(int k){s[k].val=merge(s[k<<1].val,s[k<<1|1].val);}\n\tvoid build(int k,int l,int r){\n\t\ts[k].l=l;s[k].r=r;if(l==r){s[k].val=mp(INF,l);return;}\n\t\tint mid=l+r>>1;build(k<<1,l,mid);build(k<<1|1,mid+1,r);pushup(k);\n\t}\n\tvoid modify(int k,int x,int v){\n\t\tif(s[k].l==s[k].r) return chkmin(s[k].val.fi,v),void();\n\t\tint mid=s[k].l+s[k].r>>1;\n\t\t(x<=mid)?modify(k<<1,x,v):modify(k<<1|1,x,v);\n\t\tpushup(k);\n\t}\n\tpii query(int k,int l,int r){\n\t\tif(l<=s[k].l&&s[k].r<=r) return s[k].val;\n\t\tint mid=s[k].l+s[k].r>>1;\n\t\tif(r<=mid) return query(k<<1,l,r);\n\t\telse if(l>mid) return query(k<<1|1,l,r);\n\t\telse return merge(query(k<<1,l,mid),query(k<<1|1,mid+1,r));\n\t}\n\tvoid solve(){\n\t\tbuild(1,1,n);\n\t\tfor(int i=1;i<=n;i++) pl[mxl[i]].pb(mp(i,mxr[i]));\n\t\tfor(int i=1;i<=n;i++) pl[mnl[i]].pb(mp(i,mnr[i]));\n//\t\tfor(int i=1;i<=n;i++) printf(\"%d %d %d %d\\n\",mnl[i],mxl[i],mnr[i],mxr[i]);\n\t\tfor(int i=n;i;i--){\n\t\t\tfor(pii p:pl[i]) modify(1,p.fi,p.se);\n\t\t\tfor(pii p:ql[i]){\n\t\t\t\tint x=p.fi,id=p.se;\n\t\t\t\tpii mn=query(1,i,x);\n\t\t\t\tif(mn.fi<=x){\n\t\t\t\t\tint pos=mn.se;\n\t\t\t\t\tif(mnl[pos]>=i&&mnr[pos]<=x) ans[id]=make_tuple(mnl[pos],pos,mnr[pos]);\n\t\t\t\t\tif(mxl[pos]>=i&&mxr[pos]<=x) ans[id]=make_tuple(mxl[pos],pos,mxr[pos]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nnamespace solve4{\n\ttemplate<typename T> struct st_table{\n\t\tT v[MAXN+5][LOG_N+2];int op;\n\t\tvoid build(){\n\t\t\tfor(int i=1;i<=LOG_N;i++) for(int j=1;j+(1<<i)-1<=n;j++)\n\t\t\t\tv[j][i]=(op)?max(v[j][i-1],v[j+(1<<i-1)][i-1]):min(v[j][i-1],v[j+(1<<i-1)][i-1]);\n\t\t}\n\t\tT query(int l,int r){\n\t\t\tint k=31-__builtin_clz(r-l+1);\n\t\t\treturn (op)?max(v[l][k],v[r-(1<<k)+1][k]):min(v[l][k],v[r-(1<<k)+1][k]);\n\t\t}\n\t};\n\tst_table<int> st3;\n\tst_table<pii> mn,mx,st4;\n\tint l3[MAXN+5],r3[MAXN+5],r4[MAXN+5];\n\ttuple<int,int,int,int> ans[MAXN+5];\n\tvoid solve(){\n\t\tmx.op=st3.op=1;\n\t\tfor(int i=1;i<=n;i++) mn.v[i][0]=mx.v[i][0]=mp(a[i],i);\n\t\tmn.build();mx.build();\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tr3[i]=max(mxr[i],mnr[i]);\n\t\t\tl3[i]=min(mxl[i],mnl[i]);\n\t\t\tst3.v[i][0]=l3[i];\n\t\t} st3.build();\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tint l=r3[i]+1,r=n,p=n+1;\n\t\t\twhile(l<=r){\n\t\t\t\tint mid=l+r>>1;\n\t\t\t\tif(st3.query(r3[i]+1,mid)>i) p=mid,r=mid-1;\n\t\t\t\telse l=mid+1;\n\t\t\t} r4[i]=p;st4.v[i][0]=mp(r4[i],i);\n//\t\t\tprintf(\"%d\\n\",r4[i]);\n\t\t} st4.build();\n\t\tfor(int i=1;i<=qu;i++){\n\t\t\tpii p=st4.query(L[i],R[i]);\n//\t\t\tprintf(\"%d\\n\",p.fi);\n\t\t\tif(p.fi<=R[i]){\n\t\t\t\tint i1=p.se,i4=p.fi;\n\t\t\t\tint i2=mn.query(i1,i4).se,i3=mx.query(i1,i4).se;\n\t\t\t\tif(i2>i3) i2^=i3^=i2^=i3;\n//\t\t\t\tprintf(\"%d %d %d %d\\n\",i1,i2,i3,i4);\n\t\t\t\tans[i]=make_tuple(i1,i2,i3,i4);\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tscanf(\"%d%d\",&n,&qu);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n\tstack<int> stk;\n\tfor(int i=1;i<=n;i++){\n\t\twhile(!stk.empty()&&a[stk.top()]<=a[i]) stk.pop();\n\t\tmxl[i]=((stk.empty())?0:stk.top());stk.push(i);\n\t} while(!stk.empty()) stk.pop();\n\tfor(int i=1;i<=n;i++){\n\t\twhile(!stk.empty()&&a[stk.top()]>=a[i]) stk.pop();\n\t\tmnl[i]=((stk.empty())?0:stk.top());stk.push(i);\n\t} while(!stk.empty()) stk.pop();\n\tfor(int i=n;i;i--){\n\t\twhile(!stk.empty()&&a[stk.top()]<=a[i]) stk.pop();\n\t\tmxr[i]=((stk.empty())?n+1:stk.top());stk.push(i);\n\t} while(!stk.empty()) stk.pop();\n\tfor(int i=n;i;i--){\n\t\twhile(!stk.empty()&&a[stk.top()]>=a[i]) stk.pop();\n\t\tmnr[i]=((stk.empty())?n+1:stk.top());stk.push(i);\n\t} while(!stk.empty()) stk.pop();\n\tfor(int i=1;i<=qu;i++) scanf(\"%d%d\",&L[i],&R[i]),ql[L[i]].pb(mp(R[i],i));\n\tsolve3::solve();solve4::solve();\n\tfor(int i=1;i<=qu;i++){\n\t\tif(!get<0>(solve3::ans[i])) printf(\"0\\n\");\n\t\telse if(!get<0>(solve4::ans[i]))\n\t\t\tprintf(\"3\\n%d %d %d\\n\",get<0>(solve3::ans[i]),get<1>(solve3::ans[i]),get<2>(solve3::ans[i]));\n\t\telse printf(\"4\\n%d %d %d %d\\n\",get<0>(solve4::ans[i]),get<1>(solve4::ans[i]),get<2>(solve4::ans[i]),get<3>(solve4::ans[i]));\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1624252890,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1332G No Monotone Triples"
    }
]