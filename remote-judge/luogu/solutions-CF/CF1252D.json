[
    {
        "content": "\u6c34\u9898\u89e3.gif\n\n\u8fd9\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u5339\u914d\u95ee\u9898\uff0c\u56e0\u6b64\u60f3\u5230kmp/AC\u81ea\u52a8\u673a\u7b49\u7b97\u6cd5\u3002\u56e0\u4e3a\u6709\u591a\u4e2a\u6a21\u5f0f\u4e32\uff0c\u6240\u4ee5\u8003\u8651\u7528AC\u81ea\u52a8\u673a\u6765\u89e3\u51b3\u3002\n\n\u9996\u5148\u628a\u67e5\u8be2\u79bb\u7ebf\u4e0b\u6765\uff0c\u5bf9\u6240\u6709\u7684\u67e5\u8be2\u4e32\u5efaAC\u81ea\u52a8\u673a\uff0c\u8003\u8651\u8ba1\u7b97\u6bcf\u4e2aL\u578b\u5b57\u7b26\u4e32\u5bf9\u81ea\u52a8\u673a\u4e0a\u5b57\u7b26\u4e32\u5339\u914d\u6b21\u6570\u7684\u8d21\u732e\u3002\n\n\u9996\u5148\u679a\u4e3eL\u578b\u5b57\u7b26\u4e32\u62d0\u70b9\u6240\u5728\u884c\u5217$i,j$\u3002\u6211\u4eec\u60f3\u8981\u8ba1\u7b97\u6240\u6709\u62d0\u70b9\u4e3a$(i,j)$\u7684L\u578b\u5b57\u7b26\u4e32\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u3002\n\n\u8003\u8651$(x,y)$\u5230$(a,b)$\u7684L\u578b\u8def\u5f84\u4e0a\u6240\u6709\u5b50\u8def\u5f84\u5bf9\u5e94\u7684L\u578b\u5b57\u7b26\u4e32\uff0c\u5c06\u5b83\u4eec\u7684\u8d21\u732e\u4e4b\u548c\u8bb0\u4e3a$f(x,y,a,b)$\uff0c\u90a3\u4e48$f(x,y,a,b)$\u53ef\u4ee5\u901a\u8fc7\u628a$(x,y)$\u5230$(a,b)$\u7684L\u578b\u5b57\u7b26\u4e32\u4e0eAC\u81ea\u52a8\u673a\u8fdb\u884c\u5339\u914d\u6765\u7edf\u8ba1\u3002\n\n\u8fd9\u6837\u4e00\u6765\uff0c\u5f53\u524d\u7684\u8d21\u732e\u4f3c\u4e4e\u8ddf$f(i,1,n,j)$\u5f88\u6709\u5173\u7cfb\u3002\u7136\u800c\uff0c\u8fd9\u4e2d\u95f4\u4f1a\u5305\u542b\u5197\u4f59\uff1a$f(i,1,n,j)$\u4e2d\u5305\u542b\u4e86\u4e00\u4e9b\u62d0\u70b9\u4e0d\u662f$(i,j)$\u7684\u5b57\u7b26\u4e32\u7684\u8d21\u732e\uff0c\u5b83\u4eec\u5e94\u8be5\u662f$(i,1)$\u5230$(i,j-1)$\u7684\u6a2a\u5411\u5b57\u7b26\u4e32\u6216\u8005$(i+1,j)$\u5230$(n,j)$\u7684\u7ad6\u5411\u5b57\u7b26\u4e32\u7684\u5b50\u4e32\u3002\u6240\u4ee5\u51cf\u6389\u5c31\u597d\u4e86\u3002\n\n\u90a3\u4e48\u5f53\u524d\u8d21\u732e\u5c31\u662f$f(i,1,n,j)-f(i,1,i,j-1)-f(i+1,j,n,j)$\u3002\n\n\u6ce8\u610f\u5728\u5339\u914d\u5e76\u7edf\u8ba1\u8d21\u732e\u65f6\uff0c\u4e0d\u80fd\u66b4\u529b\u8df3fail\u6307\u9488\uff0c\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f\u9519\u8bef\u7684\uff08\u8be6\u89c1\n[AC\u81ea\u52a8\u673a\u6a21\u677f\u4e8c\u6b21\u52a0\u5f3a](https://www.luogu.com.cn/problem/P5357)\uff09\n\n\u6b63\u786e\u7684\u505a\u6cd5\u5e94\u8be5\u662f\u6839\u636efail\u6307\u9488\u5efa\u7acb\u6709\u6839\u6811\uff0c\u5339\u914d\u65f6\u4e0d\u8df3fail\u800c\u662f\u53ea\u52a0\u5f53\u524d\u70b9\uff1b\u7edf\u8ba1\u4e00\u4e2a\u4e32\u53d7\u5230\u7684\u8d21\u732e\u65f6\uff0cdfs\u8ba1\u7b97\u5176\u5bf9\u5e94\u7ed3\u70b9\u7684\u5b50\u6811\u548c\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u4e24\u5c42\u5faa\u73af\u662f$O(nm)$\u7684\uff0c\u800c\u5355\u6b21\u5339\u914d\u7684\u590d\u6742\u5ea6\u662f\u6587\u672c\u4e32\u957f\u5ea6$O(n+m)$\uff1b\u6784\u5efaAC\u81ea\u52a8\u673a\u548c\u6700\u540edfs\u7684\u590d\u6742\u5ea6\u90fd\u662f$O(\\sum |S|)$\u3002\u4e8e\u662f\u603b\u590d\u6742\u5ea6\u4e3a$O(nm(n+m)+\\sum |S|)$\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <algorithm>\n\nusing namespace std;\ntypedef long long ll;\nconst int MAXN = 200005; \nint n,m,q;\nchar str[MAXN],tmp[1005],map[505][505];\nint ch[MAXN][26],fail[MAXN],tot;\nint num[MAXN],ans[MAXN],root;\ninline int insert(char *s)\n{\n\tint len = strlen(s+1), pos = root;\n\tfor(int i = 1; i<=len; i++)\n\t{\n\t\tint c = s[i]-'A';\n        if(!ch[pos][c])\n            ch[pos][c] = ++tot;\n        pos = ch[pos][c];\n\t}\n\treturn pos;\n}\nint qq[MAXN],front,rear;\ninline void getFail()\n{\n\tfront = rear = 0;\n\tfor(int i = 0; i<26; i++)\n\t    if(ch[root][i])\n\t        qq[rear++] = ch[root][i];\n\twhile(front<rear)\n\t{\n        int u = qq[front++];\n        for(int i = 0; i<26; i++)\n        {\n            if(ch[u][i])\n            {\n                fail[ch[u][i]] = ch[fail[u]][i];\n                qq[rear++] = ch[u][i];\n\t\t\t}\n\t\t\telse\n                ch[u][i] = ch[fail[u]][i];\n\t\t}\n\t}\n}\nstruct Node\n{\n\tint u,v;\n\tNode *next;\n}*h[MAXN],pool[MAXN<<1];\nint tcnt = 0;\ninline void addEdge(int u, int v)\n{\n\tNode *p = &pool[++tcnt], *q = &pool[++tcnt];\n\tp->v = v; p->next = h[u]; h[u] = p;\n\tq->v = u; q->next = h[v]; h[v] = q;\n}\ninline void modify(char *s, int f)\n{\n\tint len = strlen(s+1), pos = root;\n\tfor(int i = 1; i<=len; i++)\n\t{\n        pos = ch[pos][s[i]-'A'];\n        ans[pos] += f;\n\t}\n}\ninline void dfs(int u, int fa)\n{\n\tfor(Node *p = h[u]; p; p=p->next)\n\t    if(p->v!=fa)\n\t        dfs(p->v,u), ans[u] += ans[p->v];\n}\ninline void makeTmp(int x, int y, int a, int b)\n{\n\tint len = 0;\n\tfor(int i = y; i<=b; i++)\n\t    tmp[++len] = map[x][i];\n\tfor(int i = x+1; i<=a; i++)\n\t    tmp[++len] = map[i][b];\n\ttmp[len+1] = '\\0';\n}\n\nint main()\n{\n    cin >> n >> m >> q;\n    for(int i = 1; i<=n; i++)\n        cin >> map[i]+1;\n    for(int i = 1; i<=q; i++)\n    {\n        cin >> str+1;\n        num[i] = insert(str);\n\t}\n\tgetFail();\n\tfor(int i = 1; i<=tot; i++)\n\t    addEdge(i,fail[i]);\n\tfor(int k = 1; k<=m; k++)\n        for(int i = 1; i<=n; i++)\n        {\n        \tmakeTmp(i,1,n,k), modify(tmp,1);\n        \tmakeTmp(i,1,i,k-1), modify(tmp,-1);\n        \tmakeTmp(i+1,k,n,k), modify(tmp,-1);\n\t\t}\n\tdfs(root,0);\n    for(int i = 1; i<=q; i++)\n        cout << ans[num[i]] << endl;\n\treturn 0;\n}\n\n```\n",
        "postTime": 1582353357,
        "uid": 31098,
        "name": "Caro23333",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1252D \u3010Find String in a Grid\u3011"
    },
    {
        "content": "#### \n\n\u591a\u6a21\u5339\u914d\u9996\u5148\u8003\u8651\u628a\u6240\u6709\u4e32\u79bb\u7ebf\u4e0b\u6765\u585e\u8fdb\u4e00\u4e2a$AC$\u81ea\u52a8\u673a\u3002\n\n\u8003\u8651\u679a\u4e3e$L$\u5f62\u7684\u62d0\u70b9$x,y$\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u8003\u8651\u6700\u957f\u7684\u90a3\u4e00\u4e2a\uff0c\u5373$(x,1)\\to(x,y)\\to(n,y)$\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u4e2d\u6bcf\u79cd\u8be2\u95ee\u4e32\u6709\u591a\u5c11\u5373\u53ef\u3002\u4f46\u8fd9\u6837\u505a\u4f1a\u591a\u51fa\u4e00\u4e9b\u4e0d\u5408\u6cd5\u89e3\uff0c\u539f\u56e0\u662f\u56e0\u4e3a\u6709\u4e9b\u4e32\u6ca1\u6709\u62d0\u5f2f\uff0c\u90a3\u4e48\u4e5f\u5c31\u662f\u8bf4\u5b83\u7684\u62d0\u70b9\u4e0d\u5728\u8fd9\u91cc\uff0c\u5728\u5176\u4ed6\u5730\u65b9\u6211\u4eec\u5df2\u7ecf\u8ba1\u7b97\u8fc7\u4e86\u3002\u90a3\u6211\u4eec\u51cf\u53bb\u8fd9\u79cd\u4e32\u7684\u8d21\u732e\u5373\u53ef\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#include<vector>\n#define pb push_back\n#define N 200005\nusing namespace std;\nint read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}\n\treturn x*f;\n}\nchar str[N],a[505][505];\nint n,m,q,ch[N][26],fail[N],pos[N],cnt,ans[N];\nvector<int>G[N];\nint insert(char *s)\n{\n\tint len=strlen(s+1),now=0;\n\tfor(int i=1;i<=len;i++)\n\t{\n\t\tint c=s[i]-'A';\n\t\tif(!ch[now][c])ch[now][c]=++cnt;\n\t\tnow=ch[now][c];\n\t}\n\treturn now;\n}\nvoid getfail()\n{\n\tqueue<int>q;\n\tfor(int i=0;i<=25;i++)if(ch[0][i])fail[ch[0][i]]=0,q.push(ch[0][i]);\n\twhile(!q.empty())\n\t{\n\t\tint c=q.front();q.pop();\n\t\tfor(int i=0;i<=25;i++)\n\t\t{\n\t\t\tif(ch[c][i])fail[ch[c][i]]=ch[fail[c]][i],q.push(ch[c][i]);\n\t\t\telse ch[c][i]=ch[fail[c]][i];\n\t\t}\n\t}\n}\nvoid doit(int A,int B,int C,int D)\n{\n\tint len=0;\n\tfor(int i=B;i<=D;i++)str[++len]=a[A][i];\n\tfor(int i=A+1;i<=C;i++)str[++len]=a[i][D];\n\tstr[len+1]='\\0';\n}\nvoid query(char *s,int op)\n{\n\tint len=strlen(s+1),now=0;\n\tfor(int i=1;i<=len;i++)\n\t{\n\t\tnow=ch[now][str[i]-'A'];\n\t\tans[now]+=op;\n\t}\n}\nvoid dfs(int x)\n{\n\tint siz=G[x].size();\n\tfor(int i=0;i<siz;i++)\n\t{\n\t\tdfs(G[x][i]);\n\t\tans[x]+=ans[G[x][i]];\n\t}\n}\nint main()\n{\n\tn=read();m=read();q=read();\n\tfor(int i=1;i<=n;i++)scanf(\"%s\",a[i]+1);\n\tfor(int i=1;i<=q;i++)\n\t{\n\t\tscanf(\"%s\",str+1);\n\t\tpos[i]=insert(str);\n\t}\n\tgetfail();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tdoit(i,1,n,j);query(str,1);\n\t\t\tdoit(i,1,i,j-1);query(str,-1);\n\t\t\tdoit(i+1,j,n,j);query(str,-1);\n\t\t}\n\t}\n\tfor(int i=1;i<=cnt;i++)G[fail[i]].pb(i);\n\tdfs(0);\n\tfor(int i=1;i<=q;i++)printf(\"%d\\n\",ans[pos[i]]);\n\treturn 0;\n\t\n}\n\n```\n\n",
        "postTime": 1613655586,
        "uid": 179600,
        "name": "shao0320",
        "ccfLevel": 8,
        "title": "CF1252D Find String in a Grid"
    }
]