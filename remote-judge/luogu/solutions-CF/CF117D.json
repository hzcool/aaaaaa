[
    {
        "content": "# \u6d1b\u8c37\u96be\u5ea6\u6700\u7384\u5b66\u7684\u7070\u9898\n\u9996\u5148\u8fd9\u9053\u9898\u7684$n$\u5f88\u5927\uff0c\u6709$10^{18}$,\u90a3\u4e48\u66b4\u529b\u4ec0\u4e48\u7684\u90fd\u4e0d\u53ef\u80fd\u4e86\n\n\u8003\u8651\u4e00\u4e0b\u80fd\u8fc7$10^{18}$\u7684\u590d\u6742\u5ea6\uff1a$O(log_2n)$\u6216\u8005$O(1)$,\u4f46\u4f5c\u4e3a\u4e00\u4e2a**Not Quick Transformation**\uff0c$O(1)$\u8fd8\u662f\u5f88\u96be\u63a8\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u8003\u8651$O(log_2n)$\u7684\u7b97\u6cd5\uff1a\u5206\u6cbb\n\n\u6211\u4eec\u7528$ans(lim,first,num,d,len)$\u8868\u793a\u9879\u4e3afirst\uff0c\u516c\u5dee\u4e3ad\uff0c\u9879\u6570\u4e3alen\u7684\u7b49\u5dee\u6570\u5217\u3002\u8981\u8ba1\u7b97\u8fd9\u4e2a\u5e8f\u5217\u53d8\u6362\u5b8c\u4ee5\u540e\u533a\u95f4[1,num]\u4e2d\u6240\u6709\u4e0d\u8d85\u8fc7lim\u7684\u6570\u7684\u548c\n\n\u5f53\u4e00\u4e2a\u6570\u53d8\u6362\u524d\u5728$[u,v]$\u5e76\u4e14\u53d8\u6362\u540e\u5728$[L,R]$\u5185\uff0c\u624d\u4f1a\u5bf9\u7b54\u6848\u6709\u8d21\u732e\uff0c\u6211\u4eec\u4e0d\u59a8\u53ea\u8003\u8651\u5728\u53d8\u6362\u540e$[1,R]$\u5185\u4ee5\u53ca\u53d8\u6362\u524d$[1,v]$\u5185\uff0c\u7528\u5bb9\u65a5\u539f\u7406\u51cf\u4e00\u51cf\u5c31\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\n\n\u663e\u7136\uff0c$[1,R]$\u5230$[1,v]$\u7684\u7b54\u6848\u6570\u4e3a$ans(v,1,1,R,n)$\n\n\u73b0\u5728\u6211\u4eec\u53ea\u9700\u8003\u8651$ans$\u7684\u6c42\u6cd5\n\n\u8bbe$mid=\\lceil \\frac {len} 2\\rceil$\n\n\u5f53\u524d\u7b49\u5dee\u6570\u5217\u7ecf\u8fc7\u4e00\u6b21\u53d8\u6362\u4f1a\u53d8\u6210\u4e00\u4e2a\u9996\u9879\u4e3a$first$\uff0c\u516c\u5dee\u4e3a$d*2$\uff0c\u9879\u6570\u4e3a$mid$\u7684\u7b49\u5dee\u6570\u5217\uff08\u539f\u7b49\u5dee\u6570\u5217\u7684\u7b2c\u5947\u6570\u9879\uff09\u52a0\u4e0a\u4e00\u4e2a\u9996\u9879\u4e3a$first+d$,\u516c\u5dee\u4e3a$d*2$\uff0c\u9879\u6570\u4e3a$len-mid$\u7684\u7b49\u5dee\u6570\u5217\uff08\u539f\u7b49\u5dee\u6570\u5217\u7684\u7b2c\u5076\u6570\u9879\uff09\n\n\u5982\u679c$mid\\leq num$\uff0c\u90a3\u4e48\u5de6\u8fb9\u7684\u7b49\u5dee\u6570\u5217\u65e0\u8bba\u600e\u4e48\u53d8\u6362\uff0c\u5b83\u90fd\u662f\u8981\u5168\u90e8\u7b97\u8fdb\u53bb\u7684\uff0c\u90a3\u4e48\u76f4\u63a5\u8ba1\u7b97\u5176\u4e2d\u4e0d\u8d85\u8fc7$lim$\u7684\u6570\u7684\u548c\u5373\u53ef\uff0c\u7136\u540e\u9012\u5f52\u53f3\u8fb9$ans(lim,first+d,num\u2212mid,d\u22172,len\u2212mid)$\n\n\u5426\u5219\uff0c\u9012\u5f52\u5de6\u8fb9$ans(lim,first,num,d\u22172,mid)$\n\n\u590d\u6742\u5ea6:$O(mlog_2n)$\n\n```cpp\n#pragma optimize(2)\n#include<bits/stdc++.h>\nusing namespace std;\ntemplate<typename T>\ninline void read(T &x){\n\tx=0;char c=getchar();bool f=false;\n\tfor(;!isdigit(c);c=getchar())f!=c=='-';\n\tfor(;isdigit(c);c=getchar())x=x*10+c-'0';\n\tif(f)x=-x;\n}\ntemplate<typename T ,typename ...Arg>\ninline void read(T &x,Arg &...args){\n\tread(x);read(args...);\n}\ntemplate<typename T>\ninline void write(T x){\n\tif(x<0)putchar('-'),x=-x;\n\tif(x>=10)write(x/10);\n\tputchar(x%10+'0');\n}\ntypedef long long ll;\nll n,m,mod;\n#define mul(x,y) ((x)%mod)*((y)%mod)%mod\n#define add(x,y) ((x)+(y))%mod\nll get(ll fs,ll num,ll lim,ll d){\n\tif(lim<fs)return 0;\n\tlim=(lim-fs)/d*d+fs;\n\tll ls=min(lim,fs+d*(num-1));\n\tll v1=(ls-fs)/d+1,v2=(fs+ls);\n\tif(v1%2==0)v1/=2;\n\telse v2/=2;\n\treturn mul(v1,v2);\n}\nll solve(ll lim,ll fs,ll d,ll num,ll len){\n\tif(num==0)return 0;\n\tif(len==1)return fs<=lim?fs:0;\n\tll mid=(len+1)/2;\n\tif(num>=mid)return add(get(fs,mid,lim,d*2),solve(lim,fs+d,d*2,num-mid,len-mid));\n\telse return solve(lim,fs,d*2,num,mid);\n}\nsigned main(){\n\tread(n,m,mod);\n\twhile(m--){\n\t\tll l,r,x,y;\n\t\tread(l,r,x,y);\n\t\twrite((((solve(y,1,1,r,n)-solve(x-1,1,1,r,n)+mod)%mod-(solve(y,1,1,l-1,n)-solve(x-1,1,1,l-1,n)+mod)%mod)+mod)%mod);\n\t\tputchar('\\n');\n\t}\n}\n```",
        "postTime": 1589952664,
        "uid": 174304,
        "name": "jun\u5934\u5409\u5409",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF117D \u3010Not Quick Transformation\u3011"
    }
]