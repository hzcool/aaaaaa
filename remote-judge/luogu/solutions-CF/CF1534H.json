[
    {
        "content": "\u5148\u601d\u8003\u5b83\u4ea4\u4e92\u5668\u8fd4\u56de\u7684\u662f\u4ec0\u4e48\uff0c\u5176\u5b9e\u5c31\u662f\u70b9 $r$ \u5230 $a,b$ \u8def\u5f84\u4e0a\u7684\u6700\u8fd1\u70b9\u3002\u90a3\u4ee5\u5b83\u4e3a\u6839\u5c31\u4e0d\u91cd\u8981\u4e86\uff0c\u6211\u4eec\u8003\u8651\u4ee5 $f$ \u4e3a\u6839\u3002\n\n\u6211\u4eec\u8be2\u95ee $x$ \u7684\u4e00\u4e2a\u513f\u5b50 $y$\uff0c\u82e5\u8fd4\u56de\u7684\u662f $x$\uff0c\u8bf4\u660e $x$ \u5728 $a,b$ \u7684\u8def\u5f84\u4e0a\uff0c\u800c $y$ \u4e0d\u5728\uff1b\u82e5\u8fd4\u56de\u7684\u662f $y$\uff0c\u90a3\u4e48 $x,y$ \u5728 $a,b$ \u7684\u8def\u5f84\u4e0a\uff1b\u82e5\u8fd4\u56de\u7684\u662f $x$ \u7684\u7956\u5148\uff0c\u8bf4\u660e $x,y$ \u90fd\u4e0d\u5728\u8def\u5f84\u4e0a\uff0c\u800c\u8fd4\u56de\u7684\u90a3\u4e2a\u70b9\u5728\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u8bbe\u8ba1\u51fa\u4e00\u4e2a\u4ea4\u4e92\u6b65\u9aa4\uff0c\u9012\u5f52\u5165\u6811\uff0c\u5148\u8be2\u95ee\u53f6\u5b50\uff0c\u5982\u679c\u53f6\u5b50\u5728\u8def\u5f84\u4e0a\u90a3\u5b83\u4e00\u5b9a\u662f\u4e00\u4e2a\u7aef\u70b9\uff0c\u5426\u5219\u4e00\u76f4\u5230\u53f6\u5b50\u8fd4\u56de\u7684\u90a3\u4e2a\u70b9\u524d\u90fd\u4e0d\u662f\u8def\u5f84\u4e0a\u70b9\uff0c\u800c\u5728\u53f6\u5b50\u8fd4\u56de\u7684\u90a3\u4e2a\u70b9\u518d\u5f80\u53e6\u4e00\u8fb9\u9012\u5f52\uff0c\u5982\u679c\u90fd\u8fd4\u56de\u5b83\u90a3\u5b83\u5c31\u662f\u7aef\u70b9\uff0c\u5426\u5219\u5728\u53e6\u5916\u4e00\u8fb9\u9012\u5f52\u65f6\u5c31\u4f1a\u627e\u5230\uff08\u7c7b\u4f3c\u7b2c\u4e00\u6b21\u7684\u60c5\u51b5\uff09\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u80fd\u627e\u5230\u4e24\u4e2a\u7aef\u70b9\u4e86\u3002\n\n\u4f46\u8fd9\u5b58\u5728\u4e00\u4e2a\u95ee\u9898\uff0c\u4ea4\u4e92\u6b21\u6570\u7684\u95ee\u9898\uff0c\u5b83\u8981\u6c42\u6211\u4eec\u6309\u6700\u5c0f\u4ea4\u4e92\u6b21\u6570\u8f93\u51fa\uff0c\u8fd9\u8be5\u600e\u4e48\u529e\u5462\uff1f\n\n\u6211\u4eec\u518d\u91cd\u65b0\u8003\u8651\u6700\u5c0f\u6b21\u6570\u662f\u591a\u5c11\u3002\u8bbe $f_x$ \u4e3a\u77e5\u9053 $x$ \u7684\u5b50\u6811\u4e2d\u6709\u65e0\u7aef\u70b9\uff08\u82e5\u6709\uff0c\u9700\u8981\u77e5\u9053\u4f4d\u7f6e\uff09\u7684\u6700\u5c11\u8be2\u95ee\u6b21\u6570\u3002\u6839\u636e\u4e0a\u8ff0\u601d\u8003\uff0c\u6211\u4eec\u6bcf\u6b21\u8be2\u95ee\u53ea\u4f1a\u662f\u53f6\u5b50\uff0c\u4e8e\u662f\u8003\u8651\u5f53\u524d\u8be2\u95ee\u4e86 $x$ \u7684\u513f\u5b50 $y$ \u5b50\u6811\u4e2d\u7684\u4e00\u4e2a\u53f6\u5b50 $r$\u3002\u82e5\u5b83\u8fd4\u56de\u662f $x$\uff0c\u9664\u975e\u5b83\u662f $x$ \u7684\u5206\u652f\u4e2d\u6700\u540e\u4e00\u6b21\u8be2\u95ee\u7684\u4e86\uff0c\u4e0d\u7136\u8fd9\u6b21\u64cd\u4f5c\u4e0d\u80fd\u786e\u5b9a\u7aef\u70b9\u4f4d\u7f6e\uff0c\u800c\u8fd9\u6b21\u8be2\u95ee\u5c31\u4e0d\u4f1a\u88ab $f_y$ \u6db5\u76d6\u3002\u82e5\u5b83\u8fd4\u56de\u7684\u4e0d\u662f $x$\uff0c\u90a3\u4e48\u610f\u5473\u7740\u7aef\u70b9\u5728 $y$ \u7684\u5b50\u6811\u5185\uff0c\u8bf4\u660e\u901a\u8fc7\u5bf9 $y$ \u5b50\u6811\u7684\u8be2\u95ee\u5c31\u53ef\u4ee5\u8ba9\u6211\u4eec\u77e5\u9053\u7aef\u70b9\u7684\u4f4d\u7f6e\uff0c\u4e0e $x$ \u5df2\u7ecf\u65e0\u5173\u4e86\uff0c\u800c\u4e14\u8fd9\u6b21\u8be2\u95ee\u5df2\u7ecf\u88ab $f_y$ \u6240\u6db5\u76d6\u3002\n\n\u6211\u4eec\u5229\u7528\u8fd9\u4e1c\u897f\u8f6c\u79fb\uff0c\u6700\u574f\u60c5\u51b5\u80af\u5b9a\u662f\u60f3\u8981\u524d\u9762\u82e5\u5e72\u6b21\u8be2\u95ee\u90fd\u662f\u65e0\u6548\u7684\uff08\u65e0\u6548\u5c31\u4e0d\u4f1a\u8ba9\u6211\u4eec\u9012\u5f52\u5165\u5b50\u6811\uff09\uff0c\u76f4\u5230\u5f53\u524d\u6709\u6548\u662f\u6700\u5927\u7684\u624d\u597d\u3002\u6570\u5b57\u5316\u8868\u793a\uff0c\u5c31\u662f $f_x=\\max_{i=0}^{t-1} f_y+i$\u3002\u800c\u6211\u4eec\u60f3\u8981 $f_x$ \u6700\u5c0f\uff0c\u90a3\u4e48\u8d2a\u5fc3\u5730\u60f3\uff0c\u80af\u5b9a\u8981 $f_y$ \u4ece\u5927\u5230\u5c0f\u6392\u597d\uff0c\u8fd9\u6837\u8f6c\u79fb\u80af\u5b9a\u662f\u6700\u4f18\u7684\u3002\u7ef4\u62a4\u8fd9\u4e2a\u8f6c\u79fb\u6211\u4eec\u4f7f\u7528\u5e73\u8861\u6811\uff0c\u6bcf\u6b21\u63d2\u5165\u4e00\u4e2a\u65b0\u7684\u6570\u5c31\u8ba9\u6bd4\u5c0f\u7684\u6570\u7684\u6743\u503c\u52a0\u4e00\uff0c\u90a3\u4e48\u7ef4\u62a4\u7684\u5c31\u662f\u6743\u503c\u6700\u5927\u4e86\u3002\n\n\u5b83\u9898\u76ee\u8981\u6c42\u6211\u4eec\u8f93\u51fa\u6240\u6709\u7684 $f$ \u7684\u60c5\u51b5\uff0c\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u505a\u6362\u6839 $\\mathrm{dp}$\uff0c\u4e8e\u662f\u5c31\u53ef\u4ee5\u505a\u4e86\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n\u6700\u7ec8\u8981\u6c42\u51fa\u4e24\u4e2a\u7aef\u70b9\uff0c\u90a3\u6211\u4eec\u8003\u8651\u679a\u4e3e $f$ \u7684\u4e24\u4e2a\u513f\u5b50\uff0c\u5206\u522b\u8ba1\u7b97\u5b83\u4eec\u786e\u5b9a\u7aef\u70b9\u7684\u6700\u5c0f\u6b21\u6570\uff0c\u5373 $\\max_{0\\leq i<j<t} j-1+f_{y}+f_{y'}$\u3002\n\n\u8fd9\u4e2a\u4e1c\u897f\u4e5f\u662f\u53ef\u4ee5\u8d2a\u5fc3\u5730\uff0c\u60f3\u8981\u6700\u5c0f\uff0c\u53ef\u4ee5\u53d1\u73b0\u4e5f\u662f\u6309 $f_y$ \u4ece\u5927\u5230\u5c0f\u7684\u987a\u5e8f\uff0c$f_x$ \u6362\u6839 $\\mathrm{dp}$ \u53ef\u4ee5\u7ef4\u62a4\uff0c\u4e8e\u662f\u5c31\u6c42\u51fa\u4e86\u7b54\u6848\u3002\n\n\u800c\u5982\u4f55\u4ea4\u4e92\u7684\u95ee\u9898\u4e5f\u8fce\u5203\u800c\u89e3\u4e86\uff0c\u662f\u4ece\u6700\u5927\u7684 $f_y$ \u5f00\u59cb\u4ea4\u4e92\u5373\u53ef\u3002\n\n\u5751\uff1a1. \u56e0\u4e3a\u6709\u4e24\u4e2a ```split```\uff0c\u6211\u4e00\u624b\u8d31\u5c31\u6df7\u7528\u4e86\uff0c\u8c03\u4e86\u597d\u4e45\u3002\n\n2. \u5927\u5c0f\u987a\u5e8f\u5bb9\u6613\u5199\u9519\uff0c\u6ce8\u610f\u4e00\u4e0b\u3002\n\n```cpp\n//2021.9.6 by ljz\n//email 573902690@qq.com\n//if you find any bug in my code\n//please tell me\nconst int N=1e5+10;\nnamespace MAIN{\n    int n;\n    vector<int> G[N];\n    int f[N];\n    struct Treap{\n        int mx,son[2],val,laz,sz,va,pri;\n    }tr[N*3];\n    int rt[N],tot,st[N*3],top;\n    inline int newnode(const res &va,const res &val){\n        res cur=0;\n        if(top)cur=st[top--];\n        else cur=++tot;\n        tr[cur].va=va,tr[cur].mx=tr[cur].val=val,tr[cur].sz=1,tr[cur].pri=rng(),tr[cur].son[0]=tr[cur].son[1]=tr[cur].laz=0;\n        return cur;\n    }\n    inline void change(const res &x,const res &v){\n        if(!x)return;\n        tr[x].mx+=v,tr[x].val+=v,tr[x].laz+=v;\n    }\n    inline void pushdown(const res &x){\n        if(!tr[x].laz||!x)return;\n        change(tr[x].son[0],tr[x].laz),change(tr[x].son[1],tr[x].laz),tr[x].laz=0;\n    }\n    inline void pushup(const res &x){\n        tr[x].mx=max({tr[tr[x].son[0]].mx,tr[tr[x].son[1]].mx,tr[x].val});\n        tr[x].sz=tr[tr[x].son[0]].sz+tr[tr[x].son[1]].sz+1;\n    }\n    int merge(res x,res y){\n        if(!x||!y)return x|y;\n        pushdown(x),pushdown(y);\n        if(tr[x].pri<tr[y].pri){\n            tr[x].son[1]=merge(tr[x].son[1],y);\n            pushup(x);\n            return x;\n        }\n        else {\n            tr[y].son[0]=merge(x,tr[y].son[0]);\n            pushup(y);\n            return y;\n        }\n    }\n    void split(res now,res k,res &x,res &y){\n        if(!now){x=y=0;return;}\n        pushdown(now);\n        if(tr[now].va<=k)x=now,split(tr[now].son[1],k,tr[now].son[1],y);\n        else y=now,split(tr[now].son[0],k,x,tr[now].son[0]);\n        pushup(now);\n    }\n    void split_sz(res now,res k,res &x,res &y){\n        if(!now){x=y=0;return;}\n        pushdown(now);\n        if(tr[tr[now].son[0]].sz<k)x=now,split_sz(tr[now].son[1],k-tr[tr[now].son[0]].sz-1,tr[now].son[1],y);\n        else y=now,split_sz(tr[now].son[0],k,x,tr[now].son[0]);\n        pushup(now);\n    }\n    inline void insert(res &RT,const res &v){\n        res a,b;\n        split(RT,v,a,b),change(a,1),RT=merge(merge(a,newnode(v,v+tr[b].sz)),b);\n    }\n    void dfs(res x,res fax){\n        rt[x]=0;\n        for(auto tox:G[x]){\n            if(tox==fax)continue;\n            dfs(tox,x),insert(rt[x],f[tox]);\n        }\n        f[x]=max(1,tr[rt[x]].mx);\n    }\n    inline void erase(res &RT,const res &v){\n        res a,b,c,d;\n        split(RT,v,a,b),split_sz(a,tr[a].sz-1,c,d);\n        if(d)st[++top]=d;\n        change(c,-1),RT=merge(c,b);\n    }\n    inline int get(res &RT){\n        res a,b,ret=0;\n        split_sz(RT,tr[RT].sz-1,a,b),ret=tr[b].va-1+max(1,tr[a].mx);\n        RT=merge(a,b);\n        return ret;\n    }\n    int ans;\n    void Dfs(res x,res fax){\n        ans=max(ans,get(rt[x]));\n        for(auto tox:G[x]){\n            if(tox==fax)continue;\n            res F=f[x],G=f[tox];\n            erase(rt[x],f[tox]),f[x]=max(1,tr[rt[x]].mx);\n            insert(rt[tox],f[x]),f[tox]=max(1,tr[rt[tox]].mx);\n            Dfs(tox,x),f[x]=F,f[tox]=G,insert(rt[x],f[tox]);\n        }\n    }\n    inline bool cmp(const res &x,const res &y){\n        return f[x]>f[y];\n    }\n    int Ans[2],Ansx;\n    inline int ask(const res &x){\n        printf(\"? %d\\n\",x),fflush(stdout);\n        return read();\n    }\n    int get(res x,res fax){\n        sort(G[x].begin(),G[x].end(),cmp);\n        res r=0;\n        for(auto tox:G[x]){\n            if(tox==fax)continue;\n            res ret=get(tox,x);\n            if(x!=ret)return ret;\n            r=1;\n        }\n        if(!r)return ask(x);\n        return x;\n    }\n    inline void MAIN(){\n        n=read();\n        for(res i=1;i<n;i++){\n            res u=read(),v=read();\n            G[u].pb(v),G[v].pb(u);\n        }\n        dfs(1,0),Dfs(1,0),printf(\"%d\\n\",ans),fflush(stdout),tot=top=0;\n        res f=read();\n        dfs(f,0),sort(G[f].begin(),G[f].end(),cmp);\n        for(auto tox:G[f]){\n            res tmp=get(tox,f);\n            if(tmp==f)continue;\n            Ans[Ansx++]=tmp;\n            if(Ansx==2)break;\n        }\n        if(!Ans[0])Ans[0]=f;\n        if(!Ans[1])Ans[1]=f;\n        printf(\"! %d %d\\n\",Ans[0],Ans[1]),fflush(stdout);\n    }\n}\n```",
        "postTime": 1630977623,
        "uid": 32878,
        "name": "foreverlasting",
        "ccfLevel": 7,
        "title": "CF1534H"
    },
    {
        "content": "\u7b2c\u4e00\u6b21 DP \u7684\u90e8\u5206\u548c\u540e\u9762\u4ea4\u4e92\u7684\u90e8\u5206\u73b0\u6709\u7684\u4e24\u7bc7\u9898\u89e3\u90fd\u8bb2\u7684\u6bd4\u8f83\u6e05\u695a\u4e86\uff0c\u8fd9\u91cc\u6ce8\u610f\u8865\u5145\u89e3\u91ca\u4e00\u4e0b\u6362\u6839\u548c\u8ba1\u7b97\u7b54\u6848\u7684\u90e8\u5206\uff0c\uff08\u8ba9\u50cf\u6211\u8fd9\u6837\u7684\u83dc\u9e21\u5bb9\u6613\u7406\u89e3\u4e00\u70b9\uff09\u3002\n\n\u6211\u4eec\u5148\u5217\u51fa\u7b2c\u4e00\u6b21 DP \u7684\u5f0f\u5b50\uff1a\n$$\nf_u=\\max\\limits_{i=0}^{size-1} f_v+i\n$$\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u5f53\u524d\u8282\u70b9\u662f $u$ \uff0c\u65b0\u7684\u6839\u662f $v$\uff0c\u90a3\u4e48\u6b64\u65f6\u6211\u4eec\u8981\u629b\u5f03\u6389 $v$ \u5bf9 $u$ \u7684\u8d21\u732e\u5e76\u4e14\u52a0\u5165 $fa_u$ \u5bf9 $u$ \u7684\u8d21\u732e\u3002\u8003\u8651\u76f4\u63a5\u5c06\u4e0e $u$ \u76f8\u8fde\u7684\u6240\u6709\u70b9\u6309 $f$ \u503c\u8fdb\u884c\u6392\u5e8f\uff0c\u90a3\u4e48\u6bcf\u6b21\u7684 $v$ \u5c06\u6574\u4e2a\u6570\u7ec4\u5206\u5272\u6210\u4e00\u4e2a\u524d\u7f00\u548c\u4e00\u4e2a\u540e\u7f00\uff0c\u5f0f\u5b50\u5176\u5b9e\u5c31\u662f\u4e0a\u9762\u90a3\u4e2a\u5f0f\u5b50\uff0c\u4f46\u662f\u540e\u7f00\u90e8\u5206\u7684 $i$ \u8981\u51cf\u53bb\u5f53\u524d\u8fd9\u4e2a $v$ \u6240\u591a\u7b97\u7684 $1$\u3002\u56e0\u6b64\u4e0d\u9700\u8981\u4ec0\u4e48\u5e73\u8861\u6811\uff0c\u53ea\u7528\u9884\u5904\u7406\u524d\u7f00\u6700\u5927\u503c\u3001\u540e\u7f00\u6700\u5927\u503c\uff0c\u4e2d\u95f4\u518d\u5408\u5e76\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\n\n\u8ba1\u7b97\u7b54\u6848\u7684\u90e8\u5206\u5219\u662f\u7b80\u5355\u7684\u5206\u7c7b\u8ba8\u8bba\u3002\u6211\u4eec\u5728\u8ba1\u7b97\u524d\u4ecd\u7136\u9700\u8981\u5bf9\u6240\u6709\u513f\u5b50\u6309 $f$ \u503c\u6392\u5e8f\u3002\u5bf9\u4e8e\u5f53\u524d\u6839\u662f $u$ \uff0c\u6709 $3$ \u79cd\u60c5\u51b5\uff1a\n\n1. \u8be2\u95ee\u7684\u4e24\u4e2a\u70b9\u5206\u522b\u5728\u5f53\u524d\u8282\u70b9\u7684\u4e24\u4e2a\u4e0d\u540c\u5b50\u6811\u5185\uff0c\u5219\u8d21\u732e\u4e3a $\\max f_{v0}+f_{vi}+i-1$\uff1b\n2. \u8be2\u95ee\u7684\u4e24\u4e2a\u70b9\u4e2d\u6709\u4e00\u4e2a\u662f\u5f53\u524d\u6839\uff0c\u5219\u8d21\u732e\u4e3a $f_{v0}+deg_u-1$\uff1b\n3. \u8be2\u95ee\u7684\u4e24\u4e2a\u70b9\u90fd\u662f\u5f53\u524d\u7684\u6839\uff0c\u5219\u8d21\u732e\u4e3a $deg_u$\u3002\n\n\u653e\u4e00\u4e0b\u8fd9\u4e2a\u5173\u952e\u7684 DFS \u90e8\u5206\u7684\u4ee3\u7801\uff1a\n\n```\nbool cmp(int x,int y){\n\treturn f[x]>f[y];\n}\nvoid dfs2(int u,int fa){\n\tsort(e[u].begin(),e[u].end(),cmp);\n\tfor(int i=1;i<e[u].size();i++)maxm=max(maxm,f[e[u][0]]+f[e[u][i]]+i-1);\n\tmaxm=max(maxm,max(f[e[u][0]]+(int)e[u].size()-1,(int)e[u].size()));\n\tpre[0]=suf[e[u].size()+1]=0;\n\tfor(int i=0;i<e[u].size();i++)pre[i+1]=max(pre[i],f[e[u][i]]+i);\n\tfor(int i=e[u].size()-1;i>=0;i--)suf[i+1]=max(suf[i+2],f[e[u][i]]+i);\n\tfor(int i=0;i<e[u].size();i++){\n\t\tres[e[u][i]]=max(pre[i],suf[i+2]-1);\n\t}\n\tfor(int i=0;i<e[u].size();i++){\n\t\tif(e[u][i]==fa)continue;\n\t\tf[u]=max((int)e[u].size()-1,res[e[u][i]]);\n\t\tdfs2(e[u][i],u);\n\t}\n}\n```\n\n",
        "postTime": 1676365013,
        "uid": 342873,
        "name": "\u6709\u8da3\u7684\u95ee\u9898",
        "ccfLevel": 0,
        "title": "CF1534H  \u9898\u89e3"
    },
    {
        "content": "*[CF1534H Lost Nodes](https://www.luogu.com.cn/problem/CF1534H)\n\n\u56e0\u4e3a\u7b2c\u4e00\u95ee\u8574\u542b\u7b2c\u4e8c\u95ee\uff0c\u8003\u8651\u5148\u56de\u7b54\u7b2c\u4e8c\u95ee\u3002\u4e0b\u6587\u7684 $r$ \u8868\u793a\u9898\u76ee\u7684 $f$\u3002\n\n\u4ee5 $r$ \u4e3a\u6839\uff0c\u5219 $a, b$ \u4f4d\u4e8e $r$ \u7684\u4e0d\u540c\u5b50\u6811\u5185\uff0c\u4e5f\u53ef\u80fd\u7b49\u4e8e $r$\uff0c\u4e0d\u8fc7\u540e\u8005\u662f\u5e73\u51e1\u7684\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5c06\u95ee\u9898\u7b80\u5316\u81f3\u5728\u67d0\u4e2a\u5b50\u6811\u5185\u786e\u5b9a\u4e00\u4e2a\u7aef\u70b9\u3002\n\n\u8bbe $f_i$ \u8868\u793a\u5728 $i$ \u7684\u5b50\u6811\u5185\u786e\u5b9a\u4e00\u4e2a\u7aef\u70b9\u7684\u6700\u5c0f\u4ee3\u4ef7\uff0c\u7136\u540e\u8003\u8651\u7b56\u7565\uff1a\u5728 $i$ \u7684\u67d0\u4e2a\u513f\u5b50 $u$ \u7684\u5b50\u6811\u5185\u8be2\u95ee\uff0c\u82e5\u56de\u7b54\u5728 $u$ \u7684\u5b50\u6811\u5185\uff0c\u8bf4\u660e\u7aef\u70b9\u5728 $u$ \u7684\u5b50\u6811\u5185\uff0c\u5426\u5219\u56de\u7b54\u4e3a $i$\uff0c\u7aef\u70b9\u5728 $i$ \u7684\u5b50\u6811\u51cf\u53bb $u$ \u7684\u5b50\u6811\u7684\u8303\u56f4\u5185\u3002\u8fdb\u4e00\u6b65\u5730\uff0c\u6211\u4eec\u53d1\u73b0\u6ca1\u6709\u5fc5\u8981\u5148\u8be2\u95ee\u4e00\u6b21\u786e\u5b9a\u5728 $u$ \u7684\u5b50\u6811\u5185\uff0c\u800c\u662f\u5c06 $u$ \u5b50\u6811\u7684\u51b3\u7b56\u7684\u7b2c\u4e00\u6b21\u8be2\u95ee\u4f5c\u4e3a\u786e\u5b9a\u662f\u5426\u5728 $u$ \u7684\u5b50\u6811\u5185\u7684\u8be2\u95ee\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u8be2\u95ee\u67d0\u5b50\u6811\u7684\u56de\u7b54\u5c31\u6709\u53ef\u80fd\u662f $i$ \u7684\u7956\u5148 $t$\uff0c\u8868\u793a $i$ \u5b50\u6811\u5185\u4e5f\u6ca1\u6709\u7aef\u70b9\uff0c\u9700\u8981\u56de\u5230 $t$\u3002\n\n\u5047\u8bbe\u6211\u4eec\u6309 $u_0, u_1, \\cdots, u_{c - 1}$ \u7684\u987a\u5e8f\u786e\u5b9a\u7aef\u70b9\u662f\u5426\u5728\u8fd9\u4e9b\u5b50\u6811\u5185\uff0c\u5219\u4ee3\u4ef7\u4e3a $\\max\\limits_{p = 0} ^ {c - 1} f_{u_p} + p$\uff0c\u56e0\u4e3a\u5728\u5c1d\u8bd5\u786e\u5b9a\u662f\u5426\u5728 $u_p$ \u5b50\u6811\u5185\u65f6\uff0c\u5728\u6b64\u4e4b\u524d\u6211\u4eec\u82b1\u4e86 $p$ \u6b21\u8be2\u95ee\u7684\u4ee3\u4ef7\u6392\u9664\u4e86 $u_0 \\sim u_{p - 1}$ \u7684\u53ef\u80fd\u3002\u663e\u7136\u5bf9 $u_p$ \u6309 $f_{u_p}$ \u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u6700\u4f18\u3002\n\n\u5173\u4e8e\u4ea4\u4e92\u8fc7\u7a0b\uff0c\u6211\u4eec\u6309 $f_{u_p}$ \u4ece\u5927\u5230\u5c0f\u7684\u987a\u5e8f\u8bbf\u95ee\u6bcf\u4e2a\u5b50\u6811\uff0c\u5e76\u8fd4\u56de\u5df2\u7ecf\u786e\u5b9a\u7684\u7aef\u70b9\u6216\u8981\u8fd4\u56de\u5230\u7684\u7956\u5148\u3002\u9047\u5230\u53f6\u5b50\u8282\u70b9\u65f6\uff0c\u76f4\u63a5\u8fd4\u56de\u5411\u4ea4\u4e92\u5e93\u8be2\u95ee\u5b83\u7684\u8fd4\u56de\u503c\u3002\u5bf9\u4e8e $i$ \u548c\u8bbf\u95ee\u5b83\u7684\u513f\u5b50 $u_p$ \u7684\u8fd4\u56de\u503c $s$\uff0c\u82e5 $s \\neq i$\uff0c$s$ \u8981\u4e48\u5728 $u_p$ \u5b50\u6811\u5185\u8868\u793a\u5df2\u7ecf\u786e\u5b9a\u7684\u7aef\u70b9\uff0c\u8981\u4e48\u4e3a $i$ \u7684\u7956\u5148\u8868\u793a\u8981\u8fd4\u56de\u5230\u7684\u7956\u5148\uff0c\u56e0\u6b64\u76f4\u63a5\u8fd4\u56de $s$\uff0c\u5426\u5219\u7ee7\u7eed\u8003\u8651 $u_{p + 1}$ \u76f4\u5230 $u_{p + 1}$ \u4e0d\u5b58\u5728\uff0c\u6b64\u65f6\u7aef\u70b9\u5728 $i$ \u7684\u5b50\u6811\u5185\u4f46\u4e0d\u5728 $i$ \u7684\u6bcf\u4e2a\u513f\u5b50\u5b50\u6811\u5185\uff0c\u7aef\u70b9\u53ea\u80fd\u4e3a $i$\uff0c\u8fd4\u56de $i$\u3002\n\n\u5bf9\u4e8e\u6839 $r$\uff0c\u82e5 $a, b$ \u5747\u4e0d\u7b49\u4e8e $r$\uff0c\u5219\u4ee3\u4ef7\u4e3a $\\max\\limits_{0\\leq i < j < c} f_{u_i} + f_{u_j} + j - 1$\uff0c\u6700\u574f\u60c5\u51b5\u4e0b\u4e3a $f_{u_0} +\\max\\limits_{j = 1} ^ {c - 1} f_{u_j} + j - 1$\u3002\u82e5 $a, b$ \u6709\u4e00\u4e2a\u7b49\u4e8e $r$\uff0c\u5219\u4ee3\u4ef7\u4e3a $\\max\\limits_{i = 0} ^ {c - 1} f_{u_i} + c - 1$ \u6700\u574f\u60c5\u51b5\u4e0b\u4e3a $f_{u_0} + c - 1$\u3002\u82e5 $a, b$ \u5747\u7b49\u4e8e $r$\uff0c\u5219\u4ee3\u4ef7\u4e3a $c$\u3002\n\n\u5bb9\u6613\u6362\u6839 DP \u5bf9\u6bcf\u4e2a $r$ \u6c42\u7b54\u6848\u3002\u8fc7\u7a0b\u4e2d\u9700\u8981\u52a8\u6001\u63d2\u5165\u5220\u9664\u67e5\u6700\u503c\uff0c`multiset` \u7ef4\u62a4\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n\\log n)$\u3002[\u4ee3\u7801](https://codeforces.com/contest/1534/submission/181253357)\u3002",
        "postTime": 1668648382,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "CF1534H Lost Nodes"
    }
]