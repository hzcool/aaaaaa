[
    {
        "content": "\u8fd9\u91cc\u662f\u8fd9\u9898\u7684\u5b98\u65b9\u9898\u89e3\n\n\u6709\u5173 pretest \u7684\u5410\u69fd\u8bf7\u4e0a cf \u5173\u4e8e\u6211\u5728 cf \u4e0a\u89e3\u91ca\u7684\u5410\u69fd\u8bf7\u5148\u5b66\u82f1\u8bed\n\n\u53e6\u5916\u662f\u6211\u7684\u5410\u69fd \u5148\u5b58\u4e2a\u6863 \u73b0\u5728\u7684\u8bc4\u5206\u662f\u7eff\u9898:\n\n> \u5982\u679c Anton \u80fd\u770b\u61c2 \u6d1b\u8c37 \u8bc4\u5206\u7684\u8bdd\u4ed6\u4e00\u5b9a\u5f00\u59cb\u751f\u6c14\u4e86\n\n\u6211\u4eec\u7ea6\u5b9a: $f_i$ \u8868\u793a\u7b2c $i$ \u4e2a fib\u6570\n\n\u4e0b\u9762\u5f00\u59cb\u8fd9\u9898:\n\n\u9996\u5148\u6211\u4eec\u5f88\u5bb9\u6613\u53d1\u73b0 \u4e00\u4e2a\u5927\u5c0f\u4e3a $f_i$ \u7684\u6811\u7ecf\u8fc7\u4e00\u6b21\u5206\u5272\u4e00\u5b9a\u4f1a\u88ab\u5272\u6210 \u4e00\u68f5\u5927\u5c0f\u4e3a $f_{i-1}$ \u548c \u4e00\u68f5\u5927\u5c0f\u4e3a $f_{i-2}$ \u7684\u6811\n\n\u4e0d\u96be\u53d1\u73b0\u6211\u4eec\u5bf9\u4e8e\u4e00\u79cd\u6811 \u6211\u4eec\u53ef\u80fd\u6709\u4e24\u79cd\u5272\u6cd5 \u6211\u5c06\u8bc1\u660e\u8fd9\u4e24\u79cd\u5272\u6cd5\u662f\u7b49\u4ef7\u7684\n\n1. \u4e0d\u96be\u8bc1\u660e $f_3$ \u65f6\u7ed3\u8bba\u6b63\u786e\n2. \u5047\u8bbe $f_n$ \u662f\u6211\u4eec\u7684\u7ed3\u8bba\u6b63\u786e\n3. \u8003\u8651\u5bf9\u4e8e $f_{n+1}$ \u6211\u4eec\u6709\u4e24\u79cd\u5272\u6cd5 \u6211\u4eec\u9009\u53d6\u5176\u4e2d\u4e00\u79cd \u53e6\u5916\u4e00\u6761\u8fb9\u4e00\u5b9a\u5728\u5927\u5c0f\u662f $f_n$ \u7684\u6811\u5185 \u6839\u636e 2 \u4e2d\u5047\u8bbe\u53ef\u4ee5\u5f97\u5230\u6211\u4eec\u7ed3\u8bba\u6b63\u786e\n\n\u6240\u4ee5\u5bf9\u4e8e\u4e00\u68f5\u6811 \u6211\u4eec\u4efb\u9009\u9700\u8981\u5272\u7684\u8fb9\u5373\u53ef \u7c7b\u4f3c\u4e8e\u70b9\u5206\u6cbb\u7684\u5199\u6cd5 \u8fd9\u91cc\u4e0d\u8fc7\u591a\u9610\u91ca\u4e86\n\n\u8003\u8651\u5230 fib\u6570 \u7684\u589e\u957f\u901f\u5ea6 \u6211\u4eec\u6700\u591a\u53ea\u4f1a\u5207 $\\mathcal O(\\log_\\phi n)$ \u6b21 \u6240\u4ee5\u6700\u7ec8\u7684\u590d\u6742\u5ea6\u662f $\\mathcal O(n\\log_{\\phi}n)$ \u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u800c\u4e14\u975e\u5e38\u4e0d\u5361\u5e38 \u4e5f\u6ca1\u4ec0\u4e48\u5f88\u7279\u6b8a\u7684\u7ec6\u8282",
        "postTime": 1614603612,
        "uid": 68030,
        "name": "serverkiller",
        "ccfLevel": 0,
        "title": "CF1491E Fib-tree"
    },
    {
        "content": "\u5982\u679c\u6309\u7167\u5728\u6bd4\u8d5b\u65f6\u7b97\u7684\u8bdd\u88ab\u6263\u4e86 $300pts$ \uff0c\u7f5a\u65f6\u5403\u9971\u3002         \n\n\u9996\u5148\uff0c\u8fd9\u9053\u9898\u4e00\u6765\u5c31\u7ed9\u4eba\u4e00\u79cd\u5f88\u8be1\u5f02\u7684\u611f\u89c9\uff0c\u4e0d\u8fc7\u6211\u4eec\u8fd8\u662f\u53ef\u4ee5\u4ece\u4e2d\u627e\u5230\u4e00\u4e9b\u5f88\u663e\u7684\u4e1c\u897f\uff0c\u4f60\u770b\u7740 fib \u5728 $2 \\times 10 ^ 5$ \u4ee5\u5185\u53ea\u6709 $26$ \u9879\uff0c\u5c31\u53ef\u4ee5\u611f\u89c9\u5728\u4e0a\u9762\u505a\u4e1c\u897f\u3002       \n\n\u6211\u6700\u5f00\u59cb\u7684\u60f3\u6cd5\u5c31\u662f\u60f3\u5f00\u4e2a $26$ \u4f4d\u7684 bitset\uff0c\u7136\u540e\u4e00\u53e3\u4e00\u53e3\u5f80\u4e0a\u4f20\u7136\u540e\u505a\u7684\u65f6\u5019\u76f4\u63a5\u53bb\u526a\u5c31\u597d\u4e86\uff0c\u63a5\u7740\u5c31\u53d1\u73b0\u8fd9\u4e2a\u505a\u6cd5\u597d\u50cf\u4e0d\u662f\u5f88\u597d\u641e\uff0c\u867d\u7136\u6309\u7406\u6765\u8bf4\u8fd8\u662f\u80fd\u8fc7\u9898\u3002           \n\n\u8bb0 $f_i$ \u4e3a\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u7b2c $i$ \u9879\u3002\n\n\u63a5\u7740\u5c31\u611f\u89c9\u51fa\u9898\u4eba\u4e0d\u4f1a\u53ea\u628a fib \u62ff\u51fa\u6765\u51fa\u4e00\u4e2a\u8fd9\u4e48\u663e\u7684\u6027\u8d28\u62ff\u6765\u505a\u9898\uff0c\u600e\u4e48\u4e5f\u5f97\u9700\u8981\u4e00\u4e2a\u6027\u8d28\uff0c\u7136\u540e\u5c31\u53d1\u73b0\u4e86 $f_{i - 1} \\times 2 \\geq f_i - 1 , f_{ i - 2} \\times 3 \\geq f_i - 1$ \u7684\u6027\u8d28\uff0c\u8fd9\u53ef\u4ee5\u600e\u4e48\u62ff\u6765\u8f6c\u5316\u5462\uff1f\u5982\u679c\u4f60\u5bf9\u6811\u7684\u91cd\u5fc3\u5f88\u6709\u611f\u89c9\uff0c\u90a3\u4e48\u4f60\u5c31\u4f1a\u53d1\u73b0\u8fd9\u79cd\u4e1c\u897f\u5176\u5b9e\u5c31\u662f\u6765\u9650\u5236\u5b50\u6811\u4e2a\u6570\u7684\uff0c\u5373\uff0c\u5728\u5927\u5c0f\u4e3a $f_i$ \u7684\u6811\u4e2d\uff0c\u5927\u5c0f\u4e3a $f_{i - 1}$ \u7684\u5b50\u6811\u81f3\u591a\u53ea\u4f1a\u6709\u4e00\u4e2a\uff0c\u5927\u5c0f\u4e3a $f_{i - 2}$ \u7684\u5b50\u6811\u81f3\u591a\u53ea\u4f1a\u6709\u4e24\u4e2a\u3002         \n\n\u6709\u4e86\u8fd9\u4e2a\u73a9\u610f\u513f\u6211\u4eec\u5c31\u53ef\u4ee5\u60f3\u5230\uff0c\u5f53\u524d\u7684\u5272\u6811\u65b9\u6cd5\u5176\u5b9e\u662f\u6bd4\u8f83\u6709\u9650\u7684\uff0c\u6211\u4eec\u76f4\u63a5\u66b4\u529b\u603c\u4e00\u4e2a\u6570\u5b66\u5f52\u7eb3\u6cd5\u4e0a\u53bb\uff1a       \n\n- \u73b0\u5728\u5bf9\u4e8e\u4efb\u610f\u4e00\u68f5 $f_n$ \u5b50\u6811\u90fd\u6709\u4e24\u79cd\u5272\u6811\u65b9\u6cd5\uff0c\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u5047\u8bbe\u5982\u679c\u6709\u4e00\u68f5\u5b50\u6811\u5927\u5c0f\u4e3a $f_{n - 1}$ \uff0c\u90a3\u4e48\u7b97\u4e0a\u6839\u7ed3\u70b9\u540e\uff0c\u5c31\u6709\u4e14\u53ea\u5269\u4e0b\u4e00\u68f5 $f_{n - 2}$ \u7684\u5b50\u6811\u662f\u5b83\u7684\u5b50\u6811\uff0c\u6b64\u65f6\u6709\u4e24\u79cd\u5272\u6811\u65b9\u6cd5\uff1b\u8fd8\u6709\u5c31\u662f\u4e0d\u5b58\u5728 $f_{n - 1}$ \u7684\u5b50\u6811\uff0c\u53ea\u6709\u4e24\u9897 $f_{n - 2}$ \u7684\u5b50\u6811\uff0c\u6b64\u65f6\u4e5f\u53ea\u6709\u4e24\u79cd\u5272\u6811\u65b9\u6cd5\u3002\u7efc\u4e0a\u6bcf\u68f5 $f_n$ \u7684\u5b50\u6811\u90fd\u6709\u4e24\u79cd\u5272\u6811\u65b9\u6cd5\u3002       \n\n- \u4e0d\u8fc7\u600e\u4e48\u8bf4\uff0c\u8fd9\u68f5\u5b50\u6811\u90fd\u53ea\u4f1a\u88ab\u5272\u6210\u4e00\u68f5 $f_{n - 1}$ \u548c $f_{n - 2}$\u7684\u5b50\u6811\uff0c\u6211\u4eec\u73b0\u5728\u5c1d\u8bd5\u8bc1\u660e\u4efb\u610f\u4e24\u79cd\u60c5\u51b5\u4e0b\u7684\u5272\u6811\u65b9\u6cd5\u7b49\u4ef7\u3002         \n\n- \u91c7\u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\u3002\u9996\u5148\u6211\u4eec\u5047\u8bbe\u4efb\u610f $f_{n - 1}$ \u7684\u5b50\u6811\u6ee1\u8db3\u8fd9\u4e2a\u6027\u8d28\uff0c\u90a3\u4e48\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u5148\u5272\u51fa\u53bb\u4e00\u68f5 $f_{n - 1}$ \uff0c\u7136\u540e\u518d\u628a\u5b50\u6811\u91cc\u9762 $f_{n - 2}$ \u7684\u90a3\u68f5\u5b50\u6811\u5272\u6389\uff0c\u548c\u6211\u4eec\u5148\u5272 $f_{n - 2}$ \uff0c\u518d\u628a $f_{n - 1}$ \u548c $f_n$ \u65ad\u5f00\u7684\u6548\u679c\u4e0d\u5c31\u662f\u4e00\u6837\u7684\u4e86\u5417\uff1f\u7ed3\u8bba\u6210\u7acb\u3002\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u5148\u5272\u51fa\u4e00\u68f5 $f_{n - 2}$ \uff0c\u518d\u63a5\u7740\u6211\u4eec\u628a\u53e6\u5916\u4e00\u4e2a $f_{n - 2}$ \u5728\u5269\u4e0b\u7684 $f_{n - 1}$ \u91cc\u9762\u65ad\u5f00\uff0c\u548c\u5148\u65ad\u540e\u4e00\u68f5 $f_{n - 1}$ \u540e\u65ad\u524d\u4e00\u68f5 $f_{n - 1}$ \u4e0d\u5c31\u4e00\u6837\u4e86\u5417\uff1f\u753b\u753b\u56fe\u5c31\u597d\u4e86\u3002         \n\n\u63a5\u7740\u6211\u4eec\u5c31\u53ef\u4ee5\u5f88\u66b4\u529b\u7684\u5f00\u6302\u505a\u4e86\uff0c\u6211\u4eec\u6bcf\u6b21\u968f\u4fbf\u627e\u5230\u4e00\u6761\u5408\u6cd5\u8fb9\u8003\u8651\u66b4\u529b\u5272\u6389\uff0c\u5148\u628a\u539f\u6811\u7684 $siz$ \u90fd\u5904\u7406\u4e00\u4e0b\uff0c\u7136\u540e\u66b4\u529b\u7ee7\u7eed\u770b\u5206\u51fa\u53bb\u7684\u4e24\u4e2a\u6811\u662f\u5426\u5408\u6cd5\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5f88\u660e\u663e\u662f\u4e00\u4e2a\u9012\u5f52\u7684\u8fc7\u7a0b\uff0c\u770b\u4f3c\u662f\u4e00\u4e2a $O(2 ^ {26} \\times n)$ \u7684\u8fc7\u7a0b\uff0c\u5176\u5b9e\u65f6\u95f4\u590d\u6742\u5ea6\u53ea\u6709 $O(26n)$ \u3002       \n\n\u8fd9\u4e2a\u4e5f\u5f88\u597d\u8bc1\u660e\uff0c\u6211\u4eec\u628a\u9012\u5f52\u8fc7\u7a0b\u5f53\u6210\u4e00\u68f5\u6811\uff0c\u9996\u5148\u8fd9\u662f\u4e00\u68f5\u4e8c\u53c9\u6811\uff08\u5c3d\u7ba1\u8fd9\u4e2a\u6027\u8d28\u6ca1\u7528\uff09\uff0c\u63a5\u7740\u6211\u4eec\u5728\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u6267\u884c\u4e86\u4e00\u4e2a\u9012\u5f52\u64cd\u4f5c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(siz_x)$ \uff0c\u800c\u7531\u4e8e\u6211\u4eec\u7684\u6bcf\u4e00\u5c42\u8282\u70b9\u4e4b\u548c\u52a0\u8d77\u6765\u5c31\u662f\u4e00\u4e2a\u539f\u6811\u5927\u5c0f\uff0c\u90a3\u4e48\u6211\u4eec\u4e00\u5c42\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f $O(n)$ \uff0c\u6590\u6ce2\u90a3\u5951\u5728 $2 \\times 10 ^ 5$ \u4ee5\u5185\u62c6\u4e0b\u6765\u6700\u591a $26$ \u5c42\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5f97\u8bc1\u3002        \n\n\u4e0d\u662f\u4e00\u9053\u5f88\u96be\u7684\u9898\uff0c\u653e $E$ \u771f\u7684\u7b80\u5355\u4e86\u70b9\uff0c\u53ea\u4e0d\u8fc7\u521a\u5f00\u59cb\u771f\u7684\u88ab\u8fd9\u4e2a\u8bc1\u660e\u5751\u5230\u4e86\uff08\u4e0d\u8fc7\u8fd9\u8c8c\u4f3c\u4e0d\u5f71\u54cd\u505a\u9898\u2026\u2026\uff09 \u3002\u8bc4\u84dd\u771f\u7684\u4e0d\u80fd\u518d\u9ad8\u4e86\u3002       \n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<vector>\nusing namespace std;\nconst int Len = 2e5 + 5;\nint n,m,F[31],siz[Len],fa[Len];\nvector<int> v[Len];\nint flag[Len];\nint num;\nvoid add(int from,int to){v[from].push_back(to);}\nvoid dfs(int x,int f)\n{\n\tsiz[x] = 1;\n\tfa[x] = f;\n\tfor(int i = 0 ; i < v[x].size() ; i ++)\n\t{\n\t\tint to = v[x][i];\n\t\tif(to == f) continue;\n\t\tdfs(to , x);\n\t\tsiz[x] += siz[to];\n\t}\n}\nvoid DFS(int x,int id)\n{\n\tif(siz[x] == F[id] || siz[x] == F[id - 1]) num = x;\n\tfor(int i = 0 ; i < v[x].size() ; i ++)\n\t{\n\t\tint to = v[x][i];\n\t\tif(to == fa[x]) continue;\n\t\tDFS(to , id);\n\t}\n} \nbool Check(int x,int id)//\u5f53\u524d\u6839\u662fx\uff0cFib\u6570\u5217\u7684\u7b2ci\u9879 \n{\n\tif(siz[x] <= 1) return true; \n\tnum = -1;\n\tDFS(x , id - 1);\n\tif(num == -1) return false;\n\tint f = fa[num] , pst = num , val = siz[num];\n\tvector<int>::iterator itor;\n\tfor(itor = v[f].begin(); itor != v[f].end(); itor ++) if (*itor == num){itor = v[f].erase(itor);break;}\n\tfor(itor = v[num].begin(); itor != v[num].end(); itor ++) if(*itor == f){itor = v[num].erase(itor);break;}\n\twhile(f != x)\n\t{\n\t\tsiz[f] -= val;\n\t\tf = fa[f];\t\n\t}\n\tsiz[x] -= val;\n\tif(val == F[id - 1]) return Check(x , id - 2) && Check(pst , id - 1);\n\telse return Check(x , id - 1) && Check(pst , id - 2);\n} \nint main()\n{\n\tF[0] = F[1] = 1;\n\tflag[1] = 1;\n\tfor(int i = 2 ; i <= 26 ; i ++) \n\t{\n\t\tF[i] = F[i - 1] + F[i - 2];\n\t\tflag[F[i]] = i;\n\t}\n\tscanf(\"%d\",&n);\n\tfor(int i = 1 ; i < n ; i ++) \n\t{\n\t\tint x,y;scanf(\"%d %d\",&x,&y);\n\t\tadd(x , y) , add(y , x);\n\t}\n\tdfs(1 , 0);\n\tif(!flag[n]) printf(\"NO\\n\");\n\telse (Check(1 , flag[n])) ? puts(\"YES\") : puts(\"NO\"); \n\treturn 0;\n}\n```",
        "postTime": 1614951209,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1491E Fib-tree"
    },
    {
        "content": "upd:\u611f\u8c22\u8bc4\u8bba\u533a\u8001\u54e5\u63d0\u9192\uff0c\u524d\u9762\u4e24\u53e5\u5410\u69fd\u5df2\u7ecf\u5220\u6389\u2026\u2026\n\n\u4e0b\u9762\u7528 $F_n$ \u8868\u793a\u7b2c $n$ \u4e2a\u6590\u6ce2\u90a3\u5951\u6570\u3002\n\n\u6211\u4eec\u8003\u8651\u7528\u5206\u6cbb\u6765\u89e3\u51b3\u8fd9\u4e2a\u9898\u76ee\u3002\n\n\u9996\u5148\u65e0\u6839\u6811\u5f88\u9ebb\u70e6\uff0c\u6211\u4eec\u5c31\u9009\u4e00\u4e2a\u6839\uff0c\u628a\u5b83\u5f53\u4f5c\u6709\u6839\u6811\u6765\u770b\u3002\n\n\u9009\u54ea\u4e2a\u6839\u5462\uff1f\u9009\u91cd\u5fc3\u5427\uff0c\u8fd9\u6837\u9009\u7684\u597d\u5904\u4e00\u4f1a\u5c31\u80fd\u4f53\u73b0\u4e86\u3002\n\n\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u62c6\u6389\u4e00\u6761\u8fb9\u5206\u51fa\u6765\u7684\u4e24\u68f5\u6811\u6709\u4e00\u68f5\u662f\u539f\u6709\u6839\u6811\u7684\u5b50\u6811\u3002\n\n\u800c\u4e14\u6839\u636e\u91cd\u5fc3\u7684\u6027\u8d28\uff0c\u8fd9\u68f5\u5b50\u6811\u7684\u5927\u5c0f\u4e00\u5b9a\u5c0f\u4e8e\u5206\u51fa\u6765\u7684\u53e6\u4e00\u68f5\u6811\u3002\n\n\u7136\u540e\u5976\u4e00\u53e3 $F_n(n\\geq3)$ \u53ea\u80fd\u88ab\u5206\u6210\u4e00\u5bf9\u6590\u6ce2\u90a3\u5951\u6570\u7684\u548c\uff0c\u5c31\u662f $F_{n-1}$ \u548c $F_{n-2}$\u3002\n\n\uff08\u597d\u50cf\u633a\u663e\u7136\u7684\uff0c\u4e0d\u4f1a\u7684\u81ea\u5df1\u53bb bdfs \u6216\u770b\u5b98\u65b9\u9898\u89e3\u5427\u2026\u2026\uff09\n\n\u663e\u7136 $F_{n-2}<F_{n-1}$ \uff0c\u6240\u4ee5\u90a3\u68f5\u5b50\u6811\u7684\u5927\u5c0f\u4e00\u5b9a\u662f $F_{n-2}$\u3002\n\n\u4f1a\u53d1\u73b0\u6574\u68f5\u6811\u91cc\u9762\u6700\u591a\u53ef\u80fd\u6709\u4e24\u68f5\u5927\u5c0f $F_{n-2}$ \u7684\u5b50\u6811\uff0c\u4efb\u9009\u4e00\u4e2a\u5206\u5f00\uff0c\u7136\u540e\u9012\u5f52\u5904\u7406\u5373\u53ef\u3002\n\n\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u4efb\u9009\u4e00\u4e2a\u5462\uff1f\u56e0\u4e3a\u53cd\u6b63\u53e6\u5916\u4e00\u68f5\u5b50\u6811\u5728\u63a5\u4e0b\u6765\u7684\u5206\u6cbb\u8fc7\u7a0b\u4e2d\u8fd8\u8981\u5206\u5f00\u7684\u3002\n\n\u7136\u540e\u4e0d\u5927\u4e8e $2\\times10^5$ \u7684\u6590\u6ce2\u90a3\u5951\u6570\u53ea\u6709 $26$ \u4e2a\uff0c\u5e76\u4e14\u4f60\u4f1a\u53d1\u73b0\u6574\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u4f60\u904d\u5386\u7684\u5927\u5c0f\u540c\u4e3a $F_i$ \u7684\u5b50\u6811\u90fd\u4e0d\u4f1a\u4ea4\u53c9\u3002\n\n\u548c\u70b9\u5206\u6cbb\u7c7b\u4f3c\uff0c\u6574\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u770b\u6210\u662f\u8fd1\u4f3c $O(n\\log n)$ \u7684\uff0c\u80fd\u8fc7\u5c31\u884c\u4e86\u3002\n\n\uff08\u805a\u805a\u4eec\u522b D \u6211\uff0c\u5b98\u65b9\u9898\u89e3\u8bf4\u5176\u5b9e\u662f $O(nlog_\\phi n)$\uff09\n\n\u8003\u573a\u4ee3\u7801\u6709\u70b9\u4e11\u2026\u2026\u56e0\u4e3a\u5168\u5c40\u53d8\u91cf\u5b58\u8fd4\u56de\u503c\u51fa\u4e86\u70b9\u9505\u8fd8 WA \u4e86\u4e00\u53d1\u2026\u2026\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int _maxn = 200011;\nint t, n, pdif[_maxn], u, v, firs[_maxn], neig[_maxn << 1], arri[_maxn << 1], valu[_maxn << 1], size[_maxn], dcen, rans, dans, tosi[_maxn];\nvoid dfs2(int at, int fa, int fr, int da) {\n  size[at] = 1;\n  for(int i = firs[at]; i; i = neig[i]) {\n    if(valu[i] && arri[i] != fa) {\n      dfs2(arri[i], at, i, da);\n      size[at] += size[arri[i]];\n    }\n  }\n  if(pdif[size[at]] == da) {\n    rans = fr;\n    dans = at;\n  }\n}//\u627e\u5927\u5c0f\u4e3aFn-2\u7684\u6811\nvoid dfs3(int at, int fa, int al) {\n  int pd = 1;\n  size[at] = 1;\n  for(int i = firs[at]; i; i = neig[i]) {\n    if(arri[i] != fa && valu[i]) {\n      dfs3(arri[i], at, al);\n      size[at] += size[arri[i]];\n      if(size[arri[i]] * 2 > al) {\n        pd = 0;\n      }\n    }\n  }\n  if(pd && size[at] * 2 >= al) {\n    dcen = at;\n  }\n}//\u627e\u91cd\u5fc3\nint dfs1(int at, int da/*\u5f53\u524d\u5b50\u6811\u5927\u5c0f\u5728\u6590\u6ce2\u90a3\u5951\u6570\u5217\u4e2d\u7684\u5e8f\u53f7*/) {\n  int cp;\n  if(da == 1 || da == 2) {\n    return 1;\n  }\n  dfs3(at, 0, tosi[da]);\n  at = dcen;\n  dans = 0;//\u5b58\u7684\u662f\u5927\u5c0f\u4e3a Fn-2 \u7684\u5b50\u6811\u6839\n  rans = 0;//\u5b58\u7684\u662f dans \u6307\u5411\u7236\u4eb2\u7684\u8fb9\n  dfs2(at, 0, 0, da - 2);\n  if(!rans) {\n    return 0;\n  }\n  cp = rans;\n  valu[cp] = valu[cp ^ 1] = 0;//valu[i] \u4e3a 0 \u8868\u793a i \u88ab\u62c6\u4e86\n  if(dfs1(dans, da - 2) && dfs1(arri[cp ^ 1], da - 1)) {\n    return 1;\n  } else {\n    return 0;\n  }\n}//\u5206\u6cbb\u8fc7\u7a0b\nint main() {\n  scanf(\"%d\", &n);\n  for(int i = 1; i < n; ++i) {\n    scanf(\"%d%d\", &u, &v);\n    neig[i << 1] = firs[u];\n    firs[u] = i << 1;\n    arri[i << 1] = v;\n    valu[i << 1] = 1;\n    neig[i << 1 | 1] = firs[v];\n    firs[v] = i << 1 | 1;\n    arri[i << 1 | 1] = u;\n    valu[i << 1 | 1] = 1;\n  }\n  for(int a = 1, b = 1, c, i = 1; a <= n; ++i) {\n    tosi[pdif[a] = i] = a;\n    c = b;\n    b = a;\n    a = b + c;\n  }\n  //pdif[i] \u8868\u793a\u6590\u6ce2\u90a3\u5951\u6570 i \u7684\u5e8f\u53f7\uff0ci \u4e0d\u662f\u6590\u6ce2\u90a3\u5951\u6570\u5219\u4e3a 0\uff08\u8bbe F2=2\uff09\n  //tosi[i] \u76f8\u53cd\uff0c\u8868\u793a\u7b2c i \u4e2a\u6590\u6ce2\u90a3\u5951\u6570\n  if(!pdif[n]) {\n    printf(\"NO\");\n    return 0;\n  }\n  if(dfs1(1, pdif[n])) {\n    printf(\"YES\");\n  } else {\n    printf(\"NO\");\n  }\n  return 0;\n}\n```\n\n\u6b22\u8fce\u6765\u53c9\uff01",
        "postTime": 1614557828,
        "uid": 336630,
        "name": "dcmfqw",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1491E \u3010Fib-tree\u3011"
    },
    {
        "content": "## \u601d\u8def\n\n\u8fd9\u9053\u9898\u770b\u4e0a\u53bb\u5f88\u68d8\u624b\u3002\u4f46\u662f\u601d\u8003\u4e00\u4f1a\u5c31\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u6027\u8d28\uff1a\u6590\u6ce2\u90a3\u5951\u6570\u5217\u662f\u4ee5\u6307\u6570\u7ea7\u589e\u957f\u7684\uff0c\u56e0\u6b64\u5c0f\u4e8e $n$ \u7684\u6590\u6ce2\u90a3\u5951\u6570\u7684\u7ea7\u522b\u53ea\u662f $\\log n$ \u7684\u3002\n\n\u6240\u4ee5\u5c31\u8bde\u751f\u4e86\u4e00\u4e2a\u66b4\u529b\u505a\u6cd5\uff1a\u6bcf\u6b21\u904d\u5386\u5f53\u524d\u7684\u4e00\u6574\u68f5\u6811\uff0c\u8ba1\u7b97\u6240\u6709\u5b50\u6811\u7684 $size$\u3002\u5982\u679c\u5b58\u5728 $v$ \u4f7f\u5f97 $size_v = F_{k-2}$ \u6216 $size_v = F_{k-1}$\uff0c\u5c31\u66b4\u529b\u5272\u65ad\u8fde\u63a5 $fa_v,v$ \u7684\u8fb9\uff0c\u7136\u540e\u7ee7\u7eed\u9012\u5f52\u4e24\u68f5\u5b50\u6811\u3002\n\n\u56e0\u4e3a\u9012\u5f52\u5927\u7ea6 $\\log n$ \u6b21 $F_k$ \u5c31\u4f1a\u53d8\u6210 $1$\uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u7ea6\u662f $O(n \\log n)$\u3002\n\n## \u4ee3\u7801\n\n[code](https://pastebin.ubuntu.com/p/dP5WqVFpdk/)",
        "postTime": 1644312847,
        "uid": 275273,
        "name": "zltqwq",
        "ccfLevel": 0,
        "title": "CF1491E \u9898\u89e3"
    },
    {
        "content": "$2400$ \u5c31\u8fd9\uff1f\n\n\u4e8b\u5b9e\u4e0a\u8fd9\u9898\u975e\u5e38\u7b80\u5355\uff0c\u4e0d\u9700\u8981\u4efb\u4f55\u7684\u9ad8\u79d1\u6280\uff0c\u7eaf\u7cb9\u7684\u66b4\u529b\u3002\n\n\u6211\u4eec\u53bb\u601d\u8003\u4e00\u4e2a\u95ee\u9898\uff0c\u4e00\u68f5\u6811\u7684\u8282\u70b9\u6570\u662f $F_k$ \u5982\u679c\u80fd\u591f\u88ab\u5206\u6210\u4e24\u9897\u5b50\u6811\uff0c\u90a3\u4e48\u5fc5\u5b9a\u662f\u5206\u89e3\u6210\u4e24\u9897\u70b9\u6570\u4e3a $F_{k-1}$ \u548c $F_{k-2}$\u3002\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u5206\u89e3\u4e00\u9897\u6811\u53d8\u6210\u4e24\u4e2a\u90e8\u5206\uff0c\u8fd9\u4e24\u4e2a\u90e8\u5206\u80af\u5b9a\u662f\u552f\u4e00\u786e\u5b9a\u7684\uff0c\u6216\u8005\u8bf4\u6211\u4eec\u968f\u4fbf\u5206\u89e3\u4e00\u4e2a\u90fd\u662f\u5bf9\u7684\u3002\n\n\u4e0a\u8ff0\u7ed3\u8bba\u6211\u4e0d\u4f1a\u8bc1\u660e\uff0c\u4f46\u662f\u53ef\u4ee5\u601d\u8003\u4e00\u6761\u94fe\u7684\u60c5\u51b5\uff0c\u53d1\u73b0\u4ed6\u633a\u5bf9\u7684\u3002\n\n\u8865\u5145\u8bc1\u660e\uff1a\n\n\u5982\u679c\u4e00\u4e2a\u6811\u7684\u70b9\u7684\u4e2a\u6570\u4e3a $F_k$\uff0c\u90a3\u4e48\u4e00\u5b9a\u662f $F_{k-1}$ \u548c $F_{k-2}$\uff0c\u56e0\u4e3a\u5982\u679c\u4e0d\u662f\u7684\u8bdd\uff0c\u90a3\u4e48\u540e\u9762\u7684\u4e00\u5b9a\u662f\u4e0d\u591f\u7684\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u81ea\u5df1\u7406\u89e3\u4e00\u4e0b\u3002\n\n\u7136\u540e\u6211\u4eec\u9700\u8981\u7684\u5c31\u662f\u627e\u51fa\u4e00\u4e2a\u5b50\u6811\u4f7f\u5f97\u4ed6\u7b49\u4e8e $F_{k-1}$ \u6216\u8005 $F_{k-2}$\uff0c\u7136\u540e\u8fd9\u6837\u6211\u4eec\u66b4\u529b\u628a\u8fd9\u4e2a\u8fb9\u7ed9\u65ad\u6389\uff0c\u7136\u540e\u5c31\u597d\u4e86\u3002\n\n\u8ba9\u6211\u4eec\u6765\u4e25\u683c\u5206\u6790\u4e00\u4e0b\u8fd9\u4e2a\u590d\u6742\u5ea6\uff0c\u6211\u4eec\u628a\u5728\u51e0\u9897\u5b50\u6811\u5185\u65ad\u4e00\u6b21\u8fb9\u5c31\u89c6\u4e3a\u4e00\u5c42\u9012\u5f52\u3002\n\n\u7531\u4e8e\u6590\u6ce2\u90a3\u5951\u6570\u5217\u662f\u975e\u5e38\u4f18\u7f8e\uff0c$F_{k-1}$ \u548c $F_k$ \u975e\u5e38\u63a5\u8fd1\uff0c\u56e0\u6b64\u65ad\u5f00\u4f1a\u4f7f\u5f97\u4ed6\u53d8\u6210\u8fd1\u4f3c\u4e8e $\\dfrac{n}{2}$\u3002\n\n\u7136\u540e\u53ef\u5f97\u590d\u6742\u5ea6\u9012\u63a8\u5f0f\u662f $T(n)=2 \\times T(\\dfrac{n}{2})+n$\uff0c\u7531\u4e3b\u5b9a\u7406\u53ef\u5f97\u8fd9\u4e1c\u897f\u662f $O(n \\log n)$\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long \nusing namespace std;\nconst int INF=1e6+5;\nstruct _node_edge{\n\tint to_,next_;\n}edge[INF<<1];\nint n,head[INF],tot,sz[INF],f[INF],y,z,fl,vis[INF],vis1[INF],cnt;\nmap <int,int> Map;\nvoid add_edge(int x,int y) {\n\tedge[++tot]=(_node_edge){y,head[x]};\n\thead[x]=tot;return ;\n}\nvoid DFS(int x) {\n\tif (vis[x]==cnt) return ;\n\tif (fl) return ;\n\tvis[x]=cnt;sz[x]=1;\n\tfor (int i=head[x];i;i=edge[i].next_) {\n\t\tint v=edge[i].to_;\n\t\tif (vis1[i]) continue;\n\t\tif (vis[v]==cnt) continue;\n\t\tDFS(v);\n\t\tsz[x]+=sz[v];\n\t}\n\treturn ;\n}\nvoid DFS1(int x) {\n\tif (vis[x]==cnt) return ;\n\tif (fl) return ;\n\tvis[x]=cnt;sz[x]=1;\n\tfor (int i=head[x];i;i=edge[i].next_) {\n\t\tint v=edge[i].to_;\n\t\tif (vis1[i]) continue;\n\t\tif (vis[v]==cnt) continue;\n\t\tDFS1(v);\n\t\tif (fl) return ;\n//\t\tcout<<x<<\" \"<<v<<\" \"<<sz[v]<<\" \"<<y<<\" \"<<z<<\" yiw\\n\";\n\t\tif (sz[v]==y || sz[v]==z) {\n\t\t\tvis1[i]=vis1[i^1]=1;\n\t\t\tfl=1;\n\t\t\treturn ;\n\t\t}\n\t\tsz[x]+=sz[v];\n\t}\n\treturn ;\n}\nsigned main()\n{\n\tios::sync_with_stdio(false);\n\tcin>>n;tot=1;\n\tfor (int i=1;i<n;i++) {\n\t\tint x=0,y=0;cin>>x>>y;\n\t\tadd_edge(x,y);add_edge(y,x);\n\t}\n\tf[0]=1;f[1]=1;\n\tfor (int i=2;i<=55;i++) {\n\t\tf[i]=f[i-1]+f[i-2];\n\t\tMap[f[i]]=i;\n\t}\n\tint T=-1;\n\twhile (T--) {\n\t\tint K=0;\n\t\tfor (int i=1;i<=n;i++)\n\t\t\tif (!vis[i]) {\n\t\t\t\tfl=0;\n\t\t\t\tcnt++;\n\t\t\t\tDFS(i);\n\t\t\t\tif (sz[i]==1) continue;\n\t\t\t\tK=1;\n\t\t\t\tint xx=Map[sz[i]];\n\t\t\t\tif (!xx) {cout<<\"NO\\n\";return 0;}\n\t\t\t\ty=f[xx-1],z=f[xx-2];fl=0;\n\t\t\t\tcnt++;\n\t\t\t\tDFS1(i);\n\t\t\t\tif (!fl) {cout<<\"NO\\n\";return 0;}\n\t\t\t}\n\t\tif (!K) break;\n\t\tfor (int i=1;i<=n;i++) vis[i]=0;\n\t}\n\tcout<<\"YES\\n\";\n\treturn 0;\n}\n```\n",
        "postTime": 1667205711,
        "uid": 208653,
        "name": "_edge_",
        "ccfLevel": 0,
        "title": "CF1491E"
    }
]