[
    {
        "content": "\u4e8c\u5206\u8d2a\u5fc3\u7684\u8bdd\uff0c\u53ef\u4ee5\u505a\u5230 $O((k\\log k+n)\\log 2e9)$\u3002\n\n\u4e8c\u5206\u7b54\u6848\uff0c\u5373\u65f6\u95f4\u4e0a\u9650\uff0c\u7136\u540e\u628a\u65f6\u95f4\u62c6\u6210\u4e24\u4e2a\u90e8\u5206\uff1a\u4eba\u62ff\u94a5\u5319\u7684\u65f6\u95f4\uff0c\u94a5\u5319\u5230\u529e\u516c\u5ba4\u7684\u65f6\u95f4\u3002\n\n\u5bf9\u4e8e\u4e00\u628a\u94a5\u5319\u6765\u8bf4\uff0c\u5176\u5230\u529e\u516c\u5ba4\u7684\u65f6\u95f4\u662f\u56fa\u5b9a\u7684\uff0c\u7531\u4e8e\u6211\u4eec\u4e8c\u5206\u4e86\u65f6\u95f4\u4e0a\u9650\uff0c\u6240\u4ee5\u4e00\u628a\u94a5\u5319\u4f1a\u5bf9\u5e94\u7740\u4e00\u4e2a\u5750\u6807\u533a\u95f4\uff0c\u5728\u8fd9\u4e2a\u533a\u95f4\u5185\u7684\u4eba\u53ef\u4ee5\u5728\u65f6\u9650\u5185\u62ff\u5230\u8be5\u94a5\u5319\u540e\u518d\u53bb\u529e\u516c\u5ba4\u3002\n\n\u8fd9\u6837\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u7ecf\u5178\u7684\u533a\u95f4\u8d2a\u5fc3\u95ee\u9898\uff1a\u6709\u82e5\u5e72\u4e2a\u533a\u95f4\u548c $n$ \u4e2a\u70b9\uff0c\u80fd\u5426\u4f7f\u6bcf\u4e2a\u70b9\u90fd\u843d\u5230\u4e00\u4e2a\u533a\u95f4\u5185\uff0c\u4e14\u4e00\u4e2a\u533a\u95f4\u81f3\u591a\u5305\u542b\u4e00\u4e2a\u70b9\uff1f\n\n\u8d2a\u5fc3\u7b56\u7565\u662f\u628a\u533a\u95f4\u6309\u7167\u53f3\u7aef\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u53f3\u7aef\u70b9\u76f8\u540c\u7684\u6309\u7167\u5de6\u7aef\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7136\u540e\u4ece\u5c0f\u5230\u5927\u904d\u5386\u6240\u6709\u70b9\uff0c\u540c\u65f6\u904d\u5386\u533a\u95f4\u627e\u80fd\u5426\u5305\u542b\u8be5\u70b9\u3002\n\n\u904d\u5386\u533a\u95f4\u7684\u8fc7\u7a0b\u53ef\u4ee5\u7528\u4e00\u4e2a\u4e0b\u6807\u8bb0\u5f55\uff0c\u5728\u5305\u542b\u4e86\u4e00\u4e2a\u70b9\u540e\uff0c\u4e0b\u4e00\u4e2a\u70b9\u5bf9\u5e94\u7684\u533a\u95f4\u53ef\u4ee5\u4ece\u4e0a\u4e00\u4e2a\u70b9\u4e4b\u540e\u5f00\u59cb\u3002\n\n\u9644 AC \u4ee3\u7801\uff08Golang\uff09:\n\n```go\npackage main\n\nimport (\n\t. \"fmt\"\n\t\"sort\"\n)\n\ntype pair struct{ l, r int }\n\nfunc main() {\n\tvar n, m, o int\n\tScan(&n, &m, &o)\n\ta := make([]int, n)\n\tfor i := range a {\n\t\tScan(&a[i])\n\t}\n\tsort.Ints(a)\n\tk := make([]int, m)\n\tfor i := range k {\n\t\tScan(&k[i])\n\t}\n\n\tans := sort.Search(2e9, func(t int) bool {\n\t\tps := []pair{}\n\t\tfor _, p := range k {\n\t\t\tq := p - o\n\t\t\tif q < 0 {\n\t\t\t\tq = -q\n\t\t\t}\n\t\t\tif d := t - q; d >= 0 {\n\t\t\t\tps = append(ps, pair{p - d, p + d})\n\t\t\t}\n\t\t}\n\t\tsort.Slice(ps, func(i, j int) bool { a, b := ps[i], ps[j]; return a.r < b.r || a.r == b.r && a.l < b.l })\n\t\ti := -1\n\t\tfor _, p := range a {\n\t\t\tfor i++; i < len(ps) && ps[i].r < p; i++ {\n\t\t\t}\n\t\t\tif i == len(ps) || p < ps[i].l {\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t\treturn true\n\t})\n\tPrint(ans)\n}\n\n```\n",
        "postTime": 1590763024,
        "uid": 266651,
        "name": "\u7075\u8336\u5c71\u827e\u5e9c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF830A \u3010Office Keys\u3011"
    },
    {
        "content": "## \u601d\u8def\n\n\u5148\u770b\u9898\u76ee\uff1a\n\n\u5728\u4e00\u6761\u76f4\u7ebf\u4e0a\u6709 $n$ \u4eba\u548c $k$ \u4e2a\u94a5\u5319\u3002\u6bcf\u4e2a\u4eba\u90fd\u60f3\u5230\u8fbe\u4f4d\u4e8e\u7ebf\u8def\u4e0a\u7684\u529e\u516c\u5ba4\u3002\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u4ed6\u9700\u8981\u5230\u4e00\u4e2a**\u6709\u94a5\u5319\u7684\u70b9\u4e0a**\uff0c**\u62ff\u5230\u94a5\u5319**\u7136\u540e\u53bb\u529e\u516c\u5ba4\u3002\n\n\u4e00\u65e6\u6709\u4eba\u62ff\u8d70\u94a5\u5319\uff0c**\u4efb\u4f55\u4eba\u90fd\u4e0d\u80fd\u62ff\u8d70\u94a5\u5319**\u3002\n\n\u60a8\u9700\u8981\u786e\u5b9a\u6240\u6709\u4eba\u7528\u94a5\u5319\u5230\u8fbe\u529e\u516c\u5ba4\u7684\u6700\u77ed\u65f6\u95f4\u3002 \u5982\u679c\u4e24\u4e2a\u4eba\u540c\u65f6\u62ff\u5230\u94a5\u5319\uff0c\u4ed6\u4eec\u4e2d**\u53ea\u6709\u4e00\u4e2a**\u53ef\u4ee5\u62ff\u94a5\u5319\u3002\u800c\u4e00\u4e2a\u4eba\u53ea\u80fd\u901a\u8fc7\u90a3\u4e2a\u70b9\u800c**\u4e0d\u80fd\u83b7\u53d6\u94a5\u5319**\u3002\n\n\u521d\u770b\u9898\u76ee\uff0c\u8d2a\u5fc3\u5730\u5c06 $n$ \u4e2a\u4eba\u7684\u8d77\u59cb\u4f4d\u7f6e**\u4ece\u5c0f\u5230\u5927**\u6392\u5e8f\uff0c\u4e4b\u540e\u518d\u5c06 $k$ \u628a\u94a5\u5319\u7684\u4f4d\u7f6e\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u65b9\u4fbf\u4e4b\u540e\u7684\u5904\u7406\u3002\uff08\u8fd9\u91cc\u5efa\u8bae\u4f7f\u7528 `stable_sort`\uff0c\u56e0\u4e3a\u5b83\u66f4\u7a33\u5b9a\uff09\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u5f00\u59cb\u66b4\u529b\u4e86\uff0c\u7528 $n$ \u4e2a\u4eba\u4e14\u4fdd\u8bc1 $n \\le k$\uff0c\u4e8e\u662f\u4e0d\u9700\u8981\u53d6 $k-n+1$ \u628a\u94a5\u5319\uff0c\u7136\u540e\u7528 `abs` \u5904\u7406\u4e00\u4e0b\u8ddd\u79bb\uff08\u6ce8\u610f\u662f\u8fd9\u4e2a\u4eba\u5230\u94a5\u5319\u7684\u8ddd\u79bb\u52a0\u4e0a\u94a5\u5319\u5230\u529e\u516c\u5ba4\u7684\u8ddd\u79bb\uff09\u3002\n\n\u8f93\u51fa\u7b54\u6848\u2026\u2026\n\n## code\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nll n,k,p,a[1005],b[2005],ans=LONG_LONG_MAX;\nint main(){\n\tscanf(\"%lld %lld %lld\",&n,&k,&p);\n\tfor(int i=1;i<=n;i++)scanf(\"%lld\",&a[i]);\n\tfor(int i=1;i<=k;i++)scanf(\"%lld\",&b[i]);\n\tstable_sort(a+1,a+1+n),stable_sort(b+1,b+1+k);\n\tfor(int i=1;i<=k-n+1;i++){\n\t\tll sum=0;\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tsum=max(sum,abs(b[i+j-1]-a[j])+abs(b[i+j-1]-p));\n\t\t}\n\t\tans=min(ans,sum);\n\t}\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1638767658,
        "uid": 482869,
        "name": "cqbzhyf",
        "ccfLevel": 5,
        "title": "CF830A Office Keys\u9898\u89e3"
    },
    {
        "content": "\u6458\u81ea\u6211\u7684\u535a\u5ba2\u6587\u7ae0\uff1a[\u94a5\u5319\u9898\u4e13\u9879\u8bad\u7ec3](https://www.luogu.com.cn/blog/666666new/keys-tm)\u3002\n\n### \u9898\u76ee\u63cf\u8ff0\n\n\u6709 $n$ \u4e2a\u5e08\u5085\u5fd8\u6487\u94a5\u5319\uff0c\u7ed9\u51fa\u6240\u6709\u5e08\u5085\u7684\u5750\u6807 $a$\uff0c$k$ \u4e32\u94a5\u5319\u7684\u5750\u6807 $b$ \u4ee5\u53ca\u5de5\u5730\u7684\u5750\u6807 $p$\uff0c\u53ef\u4ee5\u8ba9\u4efb\u610f\u4e00\u4e2a\u5e08\u5085\u8dd1\u53bb\u6487\u4efb\u610f\u4e00\u4e32\u94a5\u5319\u56de\u5de5\u5730\u6765\u5f00\u9501\uff0c\u5e08\u5085\u90fd\u662f\u4e00\u79d2\u8d70\u4e00\u683c\uff0c\u6240\u6709\u5e08\u5085\u540c\u65f6\u79fb\u52a8\uff0c\u95ee\u6700\u5c11\u591a\u957f\u65f6\u95f4\u624d\u80fd\u90fd\u8fdb\u5de5\u5730\u3002\n\n### \u9898\u89e3\n\n\u8fd9\u9053\u9898\u8fd8\u662f\u76f8\u5f53\u57fa\u7840\u7684\u5f97\u54a9\u3002\u6211\u4eec\u628a\u5e08\u5085\u4e9b\u8ddf\u94a5\u5319\u6392\u4e2a**\u5e8f**\uff0c\u8bbe $dp_{i,j}$ \u8868\u793a\u8003\u8651\u524d $i$ \u4e2a\u5e08\u5085\u548c\u524d $j$ \u4e32\u94a5\u5319\u7684\u6700\u5c0f\u603b\u65f6\u95f4\u3002\u8003\u8651 $i$ \u5e08\u5085\u53bb\u4e0d\u53bb\u6487\u94a5\u5319 $j$ \u634f\uff1f\u5982\u679c\u53bb\u7684\u8bdd\u603b\u5171\u5c31\u4f1a\u82b1\u8d39 $\\max\\{dp_{i-1,j-1},|a_i-b_j|+|b_j-p|\\}$ \u7684\u65f6\u95f4\u3002\u5426\u5219\u5c31\u662f $dp_{i,j-1}$\u3002\u5219\u6709\n\n$$dp_{i,j}=\\min\\{\\max\\{dp_{i-1,j-1},|a_i-b_j|+|b_j-p|\\},dp_{i,j-1}\\}$$\n\n\u66b4\u529b DP \u5c31\u505a\u5b8c\u4e86\u5f97\u54a9\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n^2)$\uff0c\u8dd1\u5f97\u98ce\u5feb\uff01\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```c\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=2008,K=2009;\nint n,k,p,a[N],b[K],dp[N][K];\nint main()\n {\n  scanf(\"%d%d%d\",&n,&k,&p);\n for(int i=1;i<=n;++i)scanf(\"%d\",&a[i]);\n  for(int i=1;i<=k;++i)scanf(\"%d\",&b[i]);\nsort(a+1,a+n+1),sort(b+1,b+k+1);\n for(int i=1;i<2008;++i)\nfor(int j=0;j<2009;++j)\n {dp[i][j]=2147483647;}\n for(int i=1;i<=n;++i)\n   for(int j=1;j<=k;++j)\n  {\n   dp[i][j]=min(max(dp[i-1][j-1],abs(a[i]-b[j])+abs(b[j]-p)),dp[i][j-1]);\n   }\n cout<<dp[n][k];\nreturn 0;\n}\n```",
        "postTime": 1679963261,
        "uid": 337548,
        "name": "myyes",
        "ccfLevel": 0,
        "title": "CF830A \u529e\u516c\u5ba4\u94a5\u5319"
    },
    {
        "content": "## \u601d\u8def\n\u7b2c\u4e00\u773c\u770b\u9898\uff0c$n \\le 1000, n \\le k \\le 2000$ ,\u611f\u89c9\u53ef\u4ee5\u6253\u4e00\u4e2a $O(nk)$ \u7684 $dp$ , \u4f46\u6bcf\u4e2a\u4eba\u7684\u53d6\u6570\u90fd\u4f1a\u5f71\u54cd\u540e\u9762\u6240\u6709\u4eba\u53d6\u6570\uff0c\u90a3\u4e48\uff0c\u6211\u4eec\u4f1a\u5f88\u81ea\u7136\u7684\u60f3\u5230\u8d2a\u5fc3\u3002\n\n\u9996\u5148\u628a\u4eba\u7684\u4f4d\u7f6e\u548c\u94a5\u5319\u7684\u4f4d\u7f6e\u6392\u5e8f\uff0c\u518d\u628a\u7b2c $i$ \u4e2a\u4eba\u62ff\u7b2c $j$ \u628a\u94a5\u5319\u518d\u56de\u53bb\u7684\u65f6\u95f4\u7528\u4e00\u4e2a $dis$ \u6570\u7ec4\u6765\u5b58\u4e00\u4e0b\uff0c\u5982\u4e0b:( $a,b$ \u4e3a\u4eba\u7684\u4f4d\u7f6e\u548c\u8f66\u7684\u4f4d\u7f6e )\n\n$$dis[i][j]=abs(a[i]-b[j])+abs(b[j]-p);$$\n\n\u53ef\u4ee5\u81ea\u7136\u7684\u60f3\u5230\u5b9a\u4e49\u4e00\u4e2a $dp[i][j]$\uff08$i$ \u8868\u793a\u524d $i$ \u4e2a\u4eba\uff0c $j$ \u8868\u793a\u524d $j$ \u628a\u94a5\u5319, $dp[i][j]$ \u8868\u793a\u6700\u5c11\u7684\u65f6\u95f4\uff09\u3002\n\n\u5982\u679c\u53d6\u7b2c $i$ \u4e2a\u4eba\u53d6\u7b2c $j$ \u628a\u94a5\u5319\uff0c\u90a3\u4e48\n\n$$dp[i][j]=max(dp[i-1][j-1],dis[i][j]);$$\n\n\u5982\u679c\u7b2c $i$ \u4e2a\u4eba\u4e0d\u53d6\u7684 $j$ \u628a\u94a5\u5319\uff0c\u90a3\u4e48\n\n$$dp[i][j]=dp[i][j-1];$$\n\n\u7efc\u4e0a\uff0c\u9012\u63a8\u5f0f\u4e3a\n\n$$dp[i][j]=min(dp[i][j-1],max(dp[i-1][j-1],dis[i][j]));$$\n\n\n\u5927\u5bb6\u53ef\u80fd\u4f1a\u7591\u60d1\uff0c\u4e3a\u4ec0\u4e48\u975e\u8981\u6392\u5e8f\uff0c~~\u56e0\u4e3a\u4e0d\u6392\u5e8f\u4e0d`AC`\u554a~~\uff0c\u8fd9\u662f\u56e0\u4e3a\u5982\u679c\u4e0d\u6392\u5e8f\uff0c\u7b2c $i$ \u4e2a\u4eba\u4e0d\u4e00\u5b9a\u6bd4\u7b2c $i-1$ \u4e2a\u4eba\u7684\u5750\u6807\u5927\uff0c\u6240\u4ee5\u4e0d\u4e00\u5b9a $i$ \u53ef\u4ee5\u6bd4 $i-1$ \u540e\u53d6\u5230\uff0c\u8fd9\u6837\u8fd9\u4e2a\u9012\u63a8\u5f0f\u5c31\u6709\u5f88\u5927\u7684\u6f0f\u6d1e\u4e86\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h> \nusing namespace std;\nconst int inf=1<<30;\nint n,k,p,ans=inf;\nint a[1005],b[2005],dis[1005][2005],dp[1005][2005];\nint main(){\n\tcin>>n>>k>>p;\n\tfor(int i=1;i<=n;i++)cin>>a[i];\n\tfor(int i=1;i<=k;i++)cin>>b[i];\n\tsort(a+1,a+n+1),sort(b+1,b+k+1);\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=0;j<=k;j++){\n\t\t\tdis[i][j]=fabs(a[i]-b[j])+fabs(b[j]-p);\n\t\t\tdp[i][j]=inf;\n\t\t}\n\t}\n\tfor(int i=0;i<=k;i++)dp[0][i]=0;\n\tfor(int i=1;i<=n;i++)for(int j=1;j<=k;j++)dp[i][j]=min(dp[i][j-1],max(dp[i-1][j-1],dis[i][j]));\n\tfor(int i=n;i<=k;i++)ans=min(ans,dp[n][i]);\n\tcout<<ans;\n\treturn 0;\n}\n```",
        "postTime": 1635573692,
        "uid": 487078,
        "name": "Light_in_Dark",
        "ccfLevel": 0,
        "title": "CF830A Office Keys \u9898\u89e3"
    },
    {
        "content": "### \u601d\u8def\n\n\u9996\u5148\u770b\u5230\u6b64\u9898\uff0c\u63a8\u4e00\u4e2a\u7ed3\u8bba\uff1a\n\n$$\\forall a_i\\leq a_j\\ ,\\ c_i\\leq c_j$$\n\n$c_i$ \u4e3a\u5bf9\u94a5\u5319\u4f4d\u7f6e\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u540e\u7b2c $i$ \u4e2a\u4eba\u9009\u62e9\u7684\u94a5\u5319\u7f16\u53f7\u3002\n\n\u600e\u4e48\u8bc1\u660e\uff1f\n\n\u56e0\u4e3a\u94a5\u5319\u5230\u529e\u516c\u5ba4\u7684\u8ddd\u79bb\u4e00\u6837\uff0c\u6240\u4ee5\u770b\u4eba\u5230\u529e\u516c\u5ba4\u8ddd\u79bb\u3002\n\n\u4e24\u8005\u82e5\u4ea4\u53c9\uff0c\u90fd\u4f1a\u53d8\u5927\u65f6\uff0c\u81ea\u7136\u4e0d\u9009\uff1b\u82e5\u6709\u5176\u4e2d\u4e00\u4e2a\u53d8\u5c0f\u65f6\uff0c\u5219\u4e0d\u6309\u4e0a\u8ff0\u9009\u62e9\uff0c\u5176\u4e2d\u4e00\u4e2a\u4e00\u5b9a\u4f1a\u5927\u4e8e\u4e0a\u8ff0\u9009\u62e9\uff08\u56e0\u4e3a\u662f\u8ba1\u7b97\u6700\u5927\u503c\uff0c\u5176\u4e2d\u4e00\u4e2a\u5c0f\u6ca1\u6709\u7528)\u3002\n\n\u6240\u4ee5\u5f97\u5230\u8fd9\u4e2a\u7ed3\u8bba\u540e\uff0c\u76f4\u63a5 dp\u3002\n\n\u5b9a\u4e49 $dp_{i,j}$ \u4e3a\u524d $i$ \u4e2a\u4eba\u5728\u524d $j$ \u628a\u94a5\u5319\u9009\u7684\u6700\u5927\u503c\u7684\u6700\u5c0f\u503c\u3002\n\n\u5219\u9009\u6216\u4e0d\u9009\uff1a$dp_{i-1,j}$ \u548c $\\max\\{dp_{i-1,j-1},|a_i-b_j|+|b_j-p|\\}$\u3002\n\n**\u521d\u59cb\u5316\u65f6\u8981 $dp_{0,j}$ \u90fd\u7f6e\u4e3a 0 ,\u5176\u4ed6\u7f6e\u4e3a\u6700\u5927\u503c\u3002**\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\nlong long x[1005],y[2005],p;\nlong long dp[1005][2005];\nint main() {\n    scanf(\"%d %d %lld\",&n,&m,&p);\n    for (int i=1;i<=n;i++) {\n        scanf(\"%lld\",&x[i]);\n    }\n    for (int i=1;i<=m;i++) {\n        scanf(\"%lld\",&y[i]);\n    }\n    sort(x+1,x+n+1);\n    sort(y+1,y+m+1);\n    memset(dp,63,sizeof dp);\n    for (int i=0;i<=m;i++) dp[0][i]=0;\n    for (int i=1;i<=n;i++) {\n        for (int j=1;j<=m;j++) {\n            if (i>j) continue;\n            if (i==j) {\n                dp[i][j]=max(dp[i-1][j-1],abs(x[i]-y[j])+abs(p-y[j]));\n            }\n            if (i<j) {\n                dp[i][j]=min(dp[i][j-1],max(dp[i-1][j-1],abs(x[i]-y[j])+abs(p-y[j])));\n            }\n        }\n    }\n    printf(\"%lld\",dp[n][m]);\n    return 0;\n}\n```",
        "postTime": 1633001765,
        "uid": 407223,
        "name": "TulipeNoire",
        "ccfLevel": 7,
        "title": "CF830A Office Keys"
    },
    {
        "content": "# 0x00 \u601d\u8def\n\u5148\u770b\u9898\u3002\n>\u5728\u4e00\u6761\u76f4\u7ebf\u4e0a\u6709 $n$ \u4e2a\u4eba\u548c $k$ \u4e2a\u94a5\u5319\u3002\u6bcf\u4e2a\u4eba\u90fd\u60f3\u5230\u8fbe\u4f4d\u4e8e\u7ebf\u8def\u4e0a\u7684\u529e\u516c\u5ba4\u3002\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u4ed6\u9700\u8981\u5230\u4e00\u4e2a**\u6709\u94a5\u5319\u7684\u70b9**\u4e0a\uff0c\u62ff\u5230\u94a5\u5319**\u7136\u540e**\u53bb\u529e\u516c\u5ba4\u3002\n>1. \u4e00\u65e6\u6709\u4eba**\u62ff\u8d70\u94a5\u5319**\uff0c**\u4efb\u4f55\u4eba**\u90fd\u4e0d\u80fd\u62ff\u8d70\u94a5\u5319\u3002\n>1. \u4eba\u4eec\u6bcf $1$ \u79d2\u79fb\u52a8\u4e00\u4e2a\u5355\u4f4d\u8ddd\u79bb\u3002 \u60a8\u9700\u8981\u786e\u5b9a**\u6240\u6709\u4eba**\u7528\u94a5\u5319\u5230\u8fbe\u529e\u516c\u5ba4\u7684**\u6700\u77ed\u65f6\u95f4**\u3002 \u5982\u679c\u4e24\u4e2a\u4eba\u540c\u65f6\u5230\u8fbe\u94a5\u5319\u6240\u5728\u4f4d\u7f6e\uff0c\u4ed6\u4eec\u4e2d**\u53ea\u6709\u4e00\u4e2a**\u53ef\u4ee5\u62ff\u94a5\u5319\u3002\u800c\u4e00\u4e2a\u4eba\u53ea\u80fd\u901a\u8fc7\u90a3\u4e2a\u70b9\u800c\u4e0d\u80fd\u83b7\u53d6\u94a5\u5319\u3002\n\n\u5373\u4e00\u4e2a\u70b9\u53ea\u6709\u4e00\u628a\u94a5\u5319\uff0c\u53ea\u6709\u4e00\u4e2a\u4eba\u53ef\u4ee5\u62ff\u5230\uff0c\u4e14\u6240\u6709\u4eba\u90fd\u9700\u8981\u5230\u8fbe\u529e\u516c\u5ba4\uff0c\u6c42\u6700\u77ed\u65f6\u95f4\u3002\n\n\u7531\u4e8e $k\\ge n$\uff0c\u6240\u4ee5\u5f88\u81ea\u7136\u7684\u53ef\u4ee5\u60f3\u5230\u7528 `dp` \u89e3\u51b3\u3002\n\n# 0x02 \u5b9a\u4e49\u72b6\u6001\n\u5b9a\u4e49 `dp[i][j]` \u4e3a\u524d `i` \u4e2a\u4eba\u7528\u524d `j` \u628a\u94a5\u5319\u5230\u8fbe\u529e\u516c\u5ba4\u7684\u6700\u77ed\u7528\u65f6\u3002\n\n# 0x03 \u72b6\u6001\u8f6c\u79fb\n- \u9996\u5148\u7b97\u51fa\u5f53\u524d\u6700\u540e\u4e00\u4eba\u5230\u8fbe\u529e\u516c\u5ba4\u7684\u6700\u5c0f\u65f6\u95f4(\u7531\u4e8e\u4f1a\u6709\u8d1f\u6570\u6240\u4ee5\u9700\u8981\u52a0\u4e0a `abs` )\uff1a`abs(people[i]-keys[j])+abs(keys[j]-m)`\u3002\n\n- \u63a5\u7740\u56e0\u4e3a\u5f53\u524d\u4e00\u4eba\u4f7f\u7528\u4e86\u4e00\u628a\u94a5\u5319\uff0c\u6240\u4ee5\u9700\u548c\u524d `i-1` \u4e2a\u4eba\u4e2d\u6700\u540e\u5230\u8fbe\u529e\u516c\u5ba4\u7684\u65f6\u95f4\u53d6\u6700\u5927\u503c\uff1a`max(dp[i-1][j-1],abs(people[i]-keys[j])+abs(keys[j]-m))`\u3002\n\n- \u6700\u540e\u4e0e\u4e0d\u7528\u8fd9\u628a\u94a5\u5319\u7684\u6700\u77ed\u65f6\u95f4\u8fdb\u884c\u6bd4\u8f83\u53d6\u8f83\u5c0f\u503c\uff08\u5176\u4e2d\u4e0e `dp[i][j]` \u6bd4\u8f83\u662f\u4e07\u4e00\u5b83\u6bd4\u8f83\u5c0f\u5462\u5bf9\u5427\uff0c\u4ee5\u9632\u4e07\u4e00\uff09\uff1a`min(min(dp[i][j],max(dp[i-1][j-1],abs(people[i]-keys[j])+abs(keys[j]-m))),dp[i][j-1])`\u3002\n\n\u6240\u4ee5\u6700\u540e\u7684\u8f6c\u79fb\u65b9\u7a0b\u5c31\u51fa\u73b0\u4e86\uff01\uff08\u4f46\u5f88\u957f\uff09\n\n`dp[i][j]=min(min(dp[i][j],max(dp[i-1][j-1],abs(people[i]-keys[j])+abs(keys[j]-m))),dp[i][j-1]);`\n\n# 0x04 \u521d\u59cb\u5316\n\n## \u5bf9\u4e8e\u94a5\u5319\u548c\u4eba\n\u7531\u4e8e\u53ea\u6709\u6700\u5de6\u8fb9\u7684\u4eba\u4f7f\u7528\u9009\u62e9\u7684\u6700\u5de6\u8fb9\u7684\u94a5\u5319\u624d\u4f1a\u4f7f\u5f97\u65f6\u95f4\u6700\u5c0f\uff0c\u5176\u4f59\u540c\u7406\u3002\u6240\u4ee5\u6211\u4eec\u5e94\u5148\u5206\u522b\u5bf9\u4eba\u7684\u4f4d\u7f6e\u548c\u94a5\u5319\u7684\u4f4d\u7f6e\u8fdb\u884c\u6392\u5e8f\u3002\n\n## \u5bf9\u4e8e dp\n\u7531\u4e8e\u8981\u6c42\u6700\u5c0f\u503c\uff0c\u6240\u4ee5\u9700\u5148\u8d4b\u4e00\u4e2a\u8f83\u5927\u503c\u3002\u4e14\u5f53\u6ca1\u6709\u4eba\u7684\u65f6\u5019\u6700\u77ed\u65f6\u95f4\u4e3a $0$\u3002\n\n## \u6ce8\u610f\n\u7531\u4e8e\u6570\u636e\u8303\u56f4 \n$1\\le n\\le 1000,n\\le k\\le 2000,1<=p<=10^{9}$ \u8f83\u5927\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4f7f\u7528  `long long` \u8fdb\u884c\u5b58\u50a8\u3002\n\n# code\n```c\n#include<bits/stdc++.h>\nusing namespace std;\nlong long people[1005],keys[2005],d[1005][2005];//\u4eba\uff0c\u94a5\u5319\uff0cdp\nint main()\n{\n\tint n,k,m,i,j;\n\tscanf(\"%d %d %d\",&n,&k,&m);\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%lld\",&people[i]);\n\tsort(people+1,people+1+n);\n\tfor(i=1;i<=k;i++)\n\t\tscanf(\"%lld\",&keys[i]);\n\tsort(keys+1,keys+1+k);\n   //\u521d\u59cb\u5316\n\tmemset(d,0x3f,sizeof(d));\n\tfor(i=0;i<=k;i++)\n\t\td[0][i]=0;\n   //dp-ing\n\tfor(i=1;i<=n;i++)\n\t\tfor(j=i;j<=k;j++)\n\t\t\td[i][j]=min(min(d[i][j],max(d[i-1][j-1],abs(people[i]-keys[j])+abs(keys[j]-m))),d[i][j-1]);\n\tprintf(\"%lld\",d[n][k]);\n\treturn 0;\n}\n```",
        "postTime": 1632976165,
        "uid": 465692,
        "name": "Harry_Hedwig",
        "ccfLevel": 6,
        "title": "CF830A Office Keys \u9898\u89e3"
    },
    {
        "content": "### \u601d\u8def\n\u9996\u5148\u8bfb\u5165\u540e\uff0c\u6309\u7167\u4f4d\u7f6e\u5206\u522b\u6392\u5e8f\uff0c\u7136\u540e\u5904\u7406\u4e00\u4e2adis\u6570\u7ec4\uff0c\u8868\u793a\u7b2ci\u4e2a\u4eba\u62ff\u4e86\u7b2cj\u628a\u94a5\u5319\u540e\u53bb\u529e\u516c\u5ba4\u7684\u8def\u7a0b\u3002\n\u7136\u540e\u5c31\u662f\u4e00\u4e2a01\u80cc\u5305\uff0c\u6700\u5f00\u59cb\u7684\u65f6\u5019\u4eba\u662f\u74f7\u7684\uff0c\u5199\u4e86\u4e09\u91cd\u5faa\u73af\uff0c\u4e00\u76f4TLE\uff0c\u9644\u4e0a\u78c1\u73e0\u4ee3\u7801(\u4e0d\u4fdd\u8bc1\u5bf9\u54e6)233333\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<math.h>\nusing namespace std;\nint n,k,p;\nint man[1005];\nint key[2005];\nint dis[1005][2005];\nint dp[1005][2005];\ninline int cmp(int a,int b){\n\treturn a<b;\n}\nint minn(int a,int b){\n\tif(a>=b)return b;\n\treturn a;\n}\nint maxx(int a,int b){\n\tif(a>=b)return a;\n\treturn b;\n}\nint main(){\n\t//freopen(\"1.in\",\"r\",stdin);\n\tcin>>n>>k>>p;\n\tfor(register int i=1;i<=n;i++){\n\t\tcin>>man[i];\n\t}\n\tfor(register int i=1;i<=k;i++){\n\t\tcin>>key[i];\n\t}\n\tsort(man+1,man+n+1,cmp);\n\tsort(key+1,key+k+1,cmp);\n\tfor(register int i=1;i<=n;i++){\n\t\tfor(register int j=1;j<=k;j++){\n\t\t\tdis[i][j]=fabs(man[i]-key[j])+fabs(key[j]-p);\n\t\t\tdp[i][j]=999999999;\n\t\t}\n\t}\n\tdp[0][0]=0;\n\t//cout<<\"fuck\"<<endl;\n\tfor(register int i=1;i<=n;i++){  //1-ige re \n\t\tfor(register int j=i;j<=k;j++){ //1-j zhongxuanze\n\t\t\tint xx=minn(j,n);\n\t\t\tfor(register int kk=i;kk<=xx;kk++){\n\t\t\t\tif(kk<1)continue;\n\t\t\t\tdp[i][j]=minn(dp[i][j],maxx(dp[i-1][kk-1],dis[kk][j]));\n//\t\t\t\tcout<<i<<' '<<j<<' '<<kk<<endl;\n//\t\t\t\tcout<<dp[i][j]<<' '<<dp[i-1][kk]<<' '<<dis[kk][j]<<endl<<endl;\n\t\t\t}\n\t\t}\n\t}\n\t// while(1){\n\t// \tint x,y;\n\t// \tcin>>x>>y;\n\t// \tcout<<dp[x][y]<<endl;\n\t// }\n\tint ans=999999999;\n\tfor(register int i=n;i<=k;i++){\n\t\tans=min(ans,dp[n][i]);\n\t}\n\tcout<<ans<<endl;\n}\n```\n\u5f53\u65f6\u7528kk\u6765\u8868\u793ai-1\u4e2a\u4eba\u4e00\u5171\u62ff\u5230\u7b2ckk\u628a\u94a5\u5319\u662f\u7684\u6700\u5927\u6b65\u6570\u7684\u6700\u5c0f\u503c\uff0c\u5c31\u662f\u56e0\u4e3a\u679a\u4e3e\u8fd9\u4e2akk\u7136\u540e\u6302\u4e86\uff0c\u540e\u6765\u53d1\u73b0\u4e0d\u9700\u8981\u679a\u4e3ekk\uff0c\u56e0\u4e3adp[i][j]\u53ea\u80fd\u4ecedp[i][j-1]\u548cdp[i-1][j-1]\u4e24\u79cd\u60c5\u51b5\u8f6c\u79fb\u8fc7\u6765\uff0c\u5206\u522b\u8868\u793a\u4e0d\u9009\u7b2cj\u628a\u94a5\u5319\u548c\u7b2ci\u4e2a\u4eba\u9009\u4e86\u7b2cj\u628a\u94a5\u5319\u7684\u60c5\u51b5\u3002\n\n\u53ef\u4ee5\u5f97\u5230\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\ndp[i][j]=min(dp[i][j-1],max(dp[i-1][j-1],dis[i][j]));\n\n\u8fd8\u6709\uff0c\u521d\u59cb\u5316\u5f88\u91cd\u8981qwq\uff0c\u6240\u6709\u7684dp[0][i]\u90fd\u7b49\u4e8e0\uff0c\u5269\u4e0b\u7684\u6240\u6709\u90fd\u662f2147483647\u3002\n\n#### \u9644\u4e0a\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<math.h>\nusing namespace std;\nint n,k,p;\nint man[1005];\nint key[2005];\nint dis[1005][2005];\nint dp[1005][2005];\ninline int cmp(int a,int b){\n\treturn a<b;\n}\nint minn(int a,int b){\n\tif(a>=b)return b;\n\treturn a;\n}\nint maxx(int a,int b){\n\tif(a>=b)return a;\n\treturn b;\n}\nint main(){\n\t//freopen(\"1.in\",\"r\",stdin);\n\tcin>>n>>k>>p;\n\tfor(register int i=1;i<=n;i++){\n\t\tcin>>man[i];\n\t}\n\tfor(register int i=1;i<=k;i++){\n\t\tcin>>key[i];\n\t}\n\tsort(man+1,man+n+1,cmp);\n\tsort(key+1,key+k+1,cmp);\n\tfor(register int i=0;i<=n;i++){\n\t\tfor(register int j=0;j<=k;j++){\n\t\t\tdis[i][j]=fabs(man[i]-key[j])+fabs(key[j]-p);\n\t\t\tdp[i][j]=2147483647;\n\t\t}\n\t}\n\tfor(register int i=0;i<=k;i++){\n\t\tdp[0][i]=0;\n\t}\n\t//cout<<\"fuck\"<<endl;\n\tfor(register int i=1;i<=n;i++){  //1-ige re \n\t\tfor(register int j=1;j<=k;j++){ //1-j zhongxuanze\n\t\t\tdp[i][j]=minn(dp[i][j-1],maxx(dp[i-1][j-1],dis[i][j]));\n\t\t}\n\t}\n\t// while(1){\n\t// \tint x,y;\n\t// \tcin>>x>>y;\n\t// \tcout<<dp[x][y]<<endl;\n\t// }\n\tint ans=2147483647;\n\tfor(register int i=n;i<=k;i++){\n\t\tans=min(ans,dp[n][i]);\n\t}\n\tcout<<ans<<endl;\n}\n```\n",
        "postTime": 1519296471,
        "uid": 48560,
        "name": "AC\u81ea\u52a8\u673a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF830A \u3010Office Keys\u3011"
    },
    {
        "content": "\u4e8c\u5206\u7b54\u6848\u3002\n\n\u9996\u5148\u89c2\u5bdf\u9898\u9762\uff0c\u6709\u63d0\u5230\u201c\u4e00\u4eba\u5bf9\u5e94\u4e00\u628a\u94a5\u5319\u201d\uff0c\u5bb9\u6613\u60f3\u5230\u4e8c\u5206\u56fe\u5339\u914d\uff0c\u6211\u4eec\u4e8c\u5206\u7b54\u6848 $mid$\uff0c\u7136\u540e\u66b4\u529b\u627e\u51fa\u6240\u6709\u6ee1\u8db3 $|a[i]-b[j]|+|b[j]-p|\\leq mid$ \u7684 $(i,j)$\uff0c\u5728\u4ed6\u4eec\u4e2d\u95f4\u8fde\u8fb9\uff0c\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u4e8c\u5206\u56fe\uff0c\u5bf9\u5b83\u8dd1\u6700\u5927\u5339\u914d\u3002\n\n\u4f46\u662f\uff0c\u7531\u4e8e\u5efa\u8fb9\u7684\u590d\u6742\u5ea6\u4e3a $\\text{O}(nk)$\uff0c$\\texttt{Dinic}$ \u6c42\u6700\u5927\u5339\u914d\u7684\u590d\u6742\u5ea6\u4e3a $\\text{O}(n\\sqrt{m})$\uff0c\u800c\u4e8c\u5206\u7684\u590d\u6742\u5ea6\u4e3a $\\text{O}(\\log 2e9)$\uff0c\u6700\u574f\u60c5\u51b5\u7684\u8fd0\u7b97\u6b21\u6570\u9ad8\u8fbe $2e8$\uff0c\u663e\u7136\u4f1a $\\texttt{TLE}$\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u8981\u60f3\u4e00\u4e2a\u66f4\u597d\u7684\u529e\u6cd5\u68c0\u9a8c $mid$\u3002\n\n\u90a3\u4e48\u8fd9\u4e2a\u529e\u6cd5\uff0c\u5c31\u662f\u8d2a\u5fc3\u3002\u6211\u4eec\u5bf9\u6570\u636e\u6392\u5e8f\uff0c\u5bf9\u6240\u6709 $\\leq p$ \u7684 $a[i]$\uff0c\u4ece\u5de6\u5411\u53f3\u627e\u5230\u7b2c\u4e00\u4e2a\u7b26\u5408\u7b54\u6848\u7684 $b[j]$\uff1b\u5bf9\u6240\u6709 $>p$ \u7684 $a[i]$\uff0c\u4ece\u53f3\u5411\u5de6\u627e\u5230\u7b2c\u4e00\u4e2a\u7b26\u5408\u7b54\u6848\u7684 $b[j]$\uff0c\u663e\u7136\u8fd9\u5c31\u662f\u6700\u4f18\u7684\u65b9\u6848\u3002\u800c\u5b83\u7684\u590d\u6742\u5ea6\u662f $\\text{O}(nk)$\uff0c\u53ef\u4ee5\u8fc7\u6b64\u9898\u3002\n\n\uff08\u4e8b\u5b9e\u4e0a\u5728\u6a21\u62df\u8d5b\u7684\u6570\u636e\u4e0b\uff0c\u4f7f\u7528 $\\texttt{Dinic}$ \u4e5f\u53ef\u4ee5 AC\uff0c\u4f46\u7531\u4e8e CF \u6570\u636e\u592a\u5f3a\uff0c\u5e76\u4e0d\u80fd AC\u3002\uff09\n\n\u7f51\u7edc\u6d41\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define MAXN 10005\n#define MAXM 5000005\n#define reg register\n#define inl inline\n#define inf 2147483647\n#define int long long\n#define getchar() (p1==p2 && (p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1<<21],*p1=buf,*p2=buf;\nusing namespace std;\nqueue <int> q;\nint cnt,fst[MAXN],nxt[MAXM<<1],to[MAXM<<1],w[MAXM<<1],cur[MAXN];\nint n,k,p,a[MAXN],b[MAXN],S,T,ans,dep[MAXN];\ntemplate <typename T> inl void Read(reg T &x)\n{\n    x=0;\n    reg int fu=1;\n    reg char ch=getchar();\n    for(;!isdigit(ch);ch=getchar()) if(ch=='-') fu=-1;\n    for(;isdigit(ch);ch=getchar()) x=(x<<3)+(x<<1)+(ch-48);\n    x*=fu;\n}\ninl void AddEdge(reg int u,reg int v,reg int c)\n{\n    to[++cnt]=v;\n    nxt[cnt]=fst[u];\n    fst[u]=cnt;\n    w[cnt]=c;\n}\ninl bool Bfs()\n{\n    memset(dep,0,sizeof(dep));\n    q.push(S);\n    dep[S]=1;\n    while(!q.empty())\n    {\n        reg int u=q.front();\n        q.pop();\n        for(reg int i=fst[u];i;i=nxt[i])\n        {\n            reg int v=to[i];\n            if(!dep[v] && w[i])\n            {\n                dep[v]=dep[u]+1;\n                q.push(v);\n            }\n        }\n    }\n    return dep[T]!=0;\n}\nint Dfs(reg int u,reg int flow)\n{\n    if(u==T || !flow) return flow;\n    reg int used=0;\n    for(reg int &i=cur[u];i;i=nxt[i])\n    {\n        reg int v=to[i];\n        if(w[i] && dep[v]==dep[u]+1)\n        {\n            reg int d=Dfs(v,min(w[i],flow));\n            if(d)\n            {\n                used+=d;\n                flow-=d;\n                w[i]-=d;\n                w[i^1]+=d;\n                if(!flow) break;\n            }\n        }\n    }\n    return used;\n}\ninl int Dinic()\n{\n    reg int sum=0,val;\n    while(Bfs())\n    {\n        memcpy(cur,fst,sizeof(fst));\n        while(val=Dfs(S,inf)) sum+=val;\n    }\n    return sum;\n}\ninl bool Check(reg int mid)\n{\n    cnt=1;\n    memset(fst,0,sizeof(fst));\n    for(reg int i=1;i<=n;++i)\n    {\n        for(reg int j=1;j<=k;++j)\n        {\n            reg int d=abs(a[i]-b[j])+abs(b[j]-p);\n            if(d<=mid)\n            {\n                AddEdge(i,j+n,1);\n                AddEdge(j+n,i,0);\n            }\n        }\n    }\n    for(reg int i=1;i<=n;++i)\n    {\n        AddEdge(S,i,1);\n        AddEdge(i,S,0);\n    }\n    for(reg int i=1;i<=k;++i)\n    {\n        AddEdge(i+n,T,1);\n        AddEdge(T,i+n,0);\n    }\n    return Dinic()==n;\n}\nsigned main()\n{\n    Read(n);\n    Read(k);\n    Read(p);\n    S=0;\n    T=n+k+1;\n    for(reg int i=1;i<=n;++i) Read(a[i]);\n    for(reg int i=1;i<=k;++i) Read(b[i]);\n    reg int l=0,r=2e9;\n    while(l<=r)\n    {\n        reg int mid=l+r>>1;\n        if(Check(mid))\n        {\n            ans=mid;\n            r=mid-1;\n        }\n        else l=mid+1;\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```\n\n\u8d2a\u5fc3\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define MAXN 10005\n#define MAXM 5000005\n#define reg register\n#define inl inline\n#define inf 2147483647\n#define int long long\nusing namespace std;\nint n,k,p,a[MAXN],b[MAXN],ans;\nbool fg[MAXN];\ntemplate <typename T> inl void Read(reg T &x)\n{\n\tx=0;\n\treg int fu=1;\n\treg char ch=getchar();\n\tfor(;!isdigit(ch);ch=getchar()) if(ch=='-') fu=-1;\n\tfor(;isdigit(ch);ch=getchar()) x=(x<<3)+(x<<1)+(ch-48);\n\tx*=fu;\n}\ninl bool Check(reg int mid)\n{\n\tmemset(fg,0,sizeof(fg));\n\tfor(reg int i=1;i<=n;i++)\n\t{\n\t\tif(a[i]<=p)\n\t\t{\n\t\t\treg int cnt=-1;\n\t\t\tfor(reg int j=1;j<=k;j++)\n\t\t\t{\n\t\t\t\tif(!fg[j] && abs(a[i]-b[j])+abs(b[j]-p)<=mid)\n\t\t\t\t{\n\t\t\t\t\tcnt=j;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(cnt==-1) return 0;\n\t\t\tfg[cnt]=1;\n\t\t}\n\t\telse break;\n\t}\n\tfor(reg int i=n;i>=1;i--)\n\t{\n\t\tif(a[i]>p)\n\t\t{\n\t\t\treg int cnt=-1;\n\t\t\tfor(reg int j=k;j>=1;j--)\n\t\t\t{\n\t\t\t\tif(!fg[j] && abs(a[i]-b[j])+abs(b[j]-p)<=mid)\n\t\t\t\t{\n\t\t\t\t\tcnt=j;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(cnt==-1) return 0;\n\t\t\tfg[cnt]=1;\n\t\t}\n\t\telse break;\n\t}\n\treturn 1;\n}\nsigned main()\n{\n\tRead(n);\n\tRead(k);\n\tRead(p);\n\tfor(reg int i=1;i<=n;++i) Read(a[i]);\n\tfor(reg int i=1;i<=k;++i) Read(b[i]);\n\tsort(a+1,a+n+1);\n\tsort(b+1,b+k+1);\n\treg int l=0,r=2e9;\n\twhile(l<=r)\n\t{\n\t\treg int mid=l+r>>1;\n\t\tif(Check(mid))\n\t\t{\n\t\t\tans=mid;\n\t\t\tr=mid-1;\n\t\t}\n\t\telse l=mid+1;\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1565605089,
        "uid": 23243,
        "name": "VenusM1nT",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF830A \u3010Office Keys\u3011"
    }
]