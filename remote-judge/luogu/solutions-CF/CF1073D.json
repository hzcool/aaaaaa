[
    {
        "content": "\u6b64\u9898\u5176\u5b9e\u4e0d\u96be\n\n\u9996\u5148\u6211\u4eec\u66b4\u529b\u7684\u628a\u6bcf\u4e00\u6b21\u8f6c\u4e00\u5708\u6240\u6d88\u8017\u7684\u94b1\u7b97\u51fa\u6765\u3002\n\n\u4e4b\u540e\u5c31\u7528m\u5bf9\u8f6c\u4e00\u5708\u6d88\u8017\u7684\u94b1\u53d6\u819c\uff0c\u8868\u793a\u53ef\u4ee5\u8f6c\u8fd9\u4e48\u591a\u5708\n\n\u7531\u4e8e\u6bcf\u6b21\u819c\u6570\u5c0f\u4e8em\uff0c\u6240\u4ee5m\u6bcf\u6b21\u81f3\u5c11\u53d8\u4e3a\u539f\u6765\u4e00\u534a\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6nlogm\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define MAXN 200005\n#define LL long long\nLL n,m,s,ans,rs;\nLL a[MAXN];\n\nvoid rd()\n{\n    cin >> n >> m;\n    for(int i = 1; i <= n; i ++)\n    { \n        cin >> a[i]; \n    }\n}\n\nint main()\n{\n    rd();\n    while(s > 0)\n    {\n        s = 0;rs = 0;//s\u7edf\u8ba1\u8fd9\u6837\u6d88\u8017\u7684\u94b1\u6570\uff0crs\u8868\u793a\u6bcf\u6b21\u8fd9\u6837\u8f6c\u80fd\u4e70\u591a\u5c11\u7cd6\n        for(int i = 1; i <= n; i ++)\n            if(s+a[i] <= m)\n            {\n                s += a[i]; \n                rs ++;\n            }\n            if(s == 0) break;\n            ans += m / s * rs;\n            m %= s;\n    }\n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1540564622,
        "uid": 124721,
        "name": "Ynoi",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1073D \u3010Berland Fair\u3011"
    },
    {
        "content": "~~\u7adf\u7136\u5728\u6a21\u62df\u8d5b\u4e0a\u81ea\u5df1\u505a\u51fa\u6765\u4e86\u554a\u54c8\u54c8\u8d76\u7d27\u5199\u7bc7\u9898\u89e3\u3002~~\n\n\u8fd9\u9053\u9898\u66b4\u529b\u4e00\u5b9a\u4f1a\u8d85\u65f6\u7684\u3002\u90a3\u4e48\u6211\u4eec\u8003\u8651\u4e0b\u9762\u4e00\u4e2a\u95ee\u9898\uff1a\n\n\u5982\u679c\u8f6c\u4e86\u4e00\u5708\u4ee5\u540e\u8fd8\u80fd\u4e70\u7684\u7cd6\u679c\u6570\u91cf\u548c\u6240\u9700\u94b1\u6570\u548c\u4e0a\u4e00\u5708\u4e00\u6837\u7684\u8bdd\u6211\u4eec\u8fd8\u9700\u8981\u518d\u6a21\u62df\u4e00\u904d\u5417\uff1f\n\n\u5f88\u663e\u7136\u4e0d\u7528\u4e86\u3002\n\n\u56e0\u6b64\u6211\u4eec\u8003\u8651\u5148\u628a\u6bcf\u8f6c\u4e00\u5708\u80fd\u4e70\u7684\u7cd6\u679c\u6570\u91cf\u548c\u6240\u9700\u94b1\u6570\u7b97\u51fa\u6765\uff0c\u7136\u540e\u7528 $O(1)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u7b97\u51fa\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u603b\u5171\u82b1\u7684\u94b1\u6570\u4ee5\u53ca\u80fd\u4e70\u5230\u7684\u7cd6\u679c\u6570\u3002\u5728\u7528 $O(n)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u66b4\u529b\u91cd\u65b0\u7b97\u4e00\u4e0b\u5f53\u524d\u6bcf\u8f6c\u4e00\u5708\u8fd8\u80fd\u4e70\u7684\u7cd6\u679c\u6570\u91cf\u548c\u6240\u9700\u94b1\u6570\uff0c\u76f4\u5230\u4e0d\u80fd\u4e70\u4e86\u4e3a\u6b62\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n\nusing namespace std;\n\nconst int N = 200010;\n\ntypedef unsigned long long LL;\n\nLL n;\nLL t, res, sum, cnt;\nLL a[N];\n\nint main()\n{\n    scanf (\"%llu%llu\", &n, &t);\n    for (int i = 1; i <= n; i ++ )\n    {\n        scanf(\"%llu\", &a[i]);\n        if(t - sum >= a[i])\n        {\n            sum += a[i];\n            cnt ++;\n        }\n    }\n    while (sum > 0 && t > 0)\n    {\n        res += t / sum * cnt; // \u7b54\u6848\u52a0\u4e0a\u80fd\u8d70\u7684\u5708\u6570\u4e58\u4e0a\u6bcf\u8d70\u4e00\u5708\u53ef\u4ee5\u4e70\u5230\u7684\u7cd6\u679c\u6570\u3002\n        t %= sum;\n        sum = 0; cnt = 0;\n        for (int i = 1; i <= n; i ++ )\n        {\n            if(t - sum >= a[i])\n            {\n                sum += a[i];\n                cnt ++;\n            }\n        }\n    }\n    printf(\"%llu\\n\", res);\n\n    return 0;\n}\n```\n\n\u6ce8\uff1a\u4ee3\u7801\u4e2d\u7684\u51e0\u4e2a\u53d8\u91cf\u610f\u4e49\u5982\u4e0b\uff1a\n\n* $cnt$ \u8868\u793a\u5f53\u524d\u8d70\u4e00\u5708\u80fd\u4e70\u5230\u7684\u7cd6\u679c\u6570\u3002\n* $sum$ \u8868\u793a\u5f53\u524d\u8d70\u4e00\u5708\u4e70 $cnt$ \u9897\u7cd6\u679c\u6240\u9700\u94b1\u6570\u3002\n* $t$ \u8868\u793a\u73b0\u5728\u8fd8\u5269\u591a\u5c11\u94b1\u3002",
        "postTime": 1664700010,
        "uid": 314625,
        "name": "\u4fe1\u606f\u5411\u9633\u82b1\u6728",
        "ccfLevel": 4,
        "title": "CF1073D Berland Fair"
    },
    {
        "content": "## \u9898\u89e3\uff1a\n\n~~\u4e0d\u592a\u660e\u767d\u8fd9\u9898\u4e3a\u5565\u662f\u4e2a\u7d2b\u9898~~\n\n**\u9898\u76ee\u5927\u610f\uff1a**\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a$N$\u7684\u5e8f\u5217\uff0c\u6709\u4e00\u4e2a\u6570$K$\uff0c\u6bcf\u6b21\u904d\u5386\u5e8f\u5217\u65f6\u5982\u679c$K\\ge a_i$\uff0c\u90a3\u4e48\uff0c$ans++$\uff0c$K-=a_i$\u3002\u5982\u679c\u4f4d\u7f6e\u4e3a$N$\uff0c\u4e0b\u4e00\u6b21\u904d\u5386\u4f1a\u8fd4\u56de$1$.\u95ee$ans$\u6700\u540e\u662f\u591a\u5c11\u3002\n\n\uff08\u6765\u81ea\u56fd\u8d5b\u91d1\u724c\u96c6\u8bad\u961f\u5927\u4f6c$Winniechen$\u7684\u6a21\u62df\u8d5b\uff09\n\n\u8003\u8bd5\u7684\u65f6\u5019\u5c31\u60f3\u5230\u4e86\u8fd9\u6837\u7684\u601d\u8def\uff1a\n\n\u5148\u8dd1\u524d\u7f00\u548c\uff0c\u7136\u540e\u6bd4\u8f83$K$\u548c$sum[N]$\u7684\u503c\uff0c\u4ee5$N$\u4e3a\u5355\u4f4d\u6765\u8dd1\uff0c\u8fd9\u6837\u5c31\u7701\u65f6\u95f4\uff0c\u4ec0\u4e48\u65f6\u5019\u4e0d\u80fd\u7ee7\u7eed\u51cf\u4e86\uff0c\u5c31\u4e00\u76f4\u4ece$1-N$\u8dd1\uff0c\u76f4\u5230$K$\u4e00\u4e2a\u6570\u4e5f\u4e0d\u80fd\u518d\u51cf\u4e3a\u6b62\uff0c\u8f93\u51fa$ans$\uff0c\u6709\u4e86\u4e0b\u9762\u8fd9\u4efd\u4ee3\u7801\uff1a\n\n```c++\n#include<cstdio>\n#include<algorithm>\n#define ll long long\nusing namespace std;\nconst int maxn=2*1e5+1;\nll n,k,ans,minn=1e9+10;\nll a[maxn];\nll sum[maxn];\nint main()\n{\n    //freopen(\"fairs.in\",\"r\",stdin);\n    //freopen(\"fairs.out\",\"w\",stdout);\n    scanf(\"%lld%lld\",&n,&k);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%lld\",&a[i]);\n        sum[i]=sum[i-1]+a[i];\n        minn=min(minn,a[i]);\n    }\n    while(k>=sum[n])\n    {\n        ans+=n;\n        k-=sum[n];\n    }\n    while(k>=minn)\n    {\n        for(int i=1;i<=n;i++)\n            if(k>=a[i])\n            {\n                ans++;\n                k-=a[i];\n            }\n    }\n    printf(\"%lld\",ans);\n    return 0;\n}\n```\n\n\u671f\u671b\u5f97\u5206\uff1a100\uff0c\u5b9e\u9645\u5f97\u5206\uff1a100.\n\n\u4f46\u662f\u673a\u623f\u6709\u5f88\u591a\u5927\u4f6c\u4e0d\u76f8\u4fe1\u672c\u849f\u84bb\u80fd\u5207\u8fd9\u9053\u9898\uff0c\u6240\u4ee5\u4ed6\u4eec\u6765check\u4e86\u6211\u7684\u4ee3\u7801\uff0c\u540e\u6765\u5206\u6790\u590d\u6742\u5ea6\uff0c\u5f97\u51fa\u6211\u7684\u786e\u5207\u4e0d\u6389\u8fd9\u9898\uff0c\u53ea\u662f$Winniechen$\u7684\u6570\u636e\u5f88\u6c34\u7f62\u4e86\u3002\u4e0d\u670d\u6c14\u7684\u6211\u627e\u5230\u4e86\u539f\u9898\u63d0\u4ea4...\n\n\u7136\u540eT\u4e86\u3002~~\uff08\u771f\u9999\uff09~~\n\n\u540e\u6765\u82e6\u601d\u51a5\u60f3\uff0c\u601d\u8def\u6ca1\u6709\u53d8\uff0c\u4f46\u662f\u60f3\u5230\u4e86\u8fd9\u4efd\u66b4\u529b\u679a\u4e3e\u4ee3\u7801\u7684\u79cd\u79cd\u4f18\u5316\uff1a\n\n\u9996\u5148\uff0c\u4e0d\u7528\u8dd1\u524d\u7f00\u548c\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u80fd\u7528\u5230$sum[N]$\uff0c\u5f00\u524d\u7f00\u6570\u7ec4\u7eaf\u5c5e\u6d6a\u8d39\u7a7a\u95f4\u3002\n\n\u5176\u6b21\uff0c\u4e0d\u7528\u7528while\u5faa\u73af\u4e00\u6b21\u4e00\u6b21\u51cf\uff0c\u53ea\u9700\u8981\u7528\u4e00\u4e2a\u4e58\u6cd5\u7b97\u5f0f\u5373\u53ef\u3002\n\n\u7136\u540e\uff0c\u4e0d\u7528\u6bcf\u6b21\u90fd\u4ece$1 - N$\u679a\u4e3e\uff0c\u56e0\u4e3a\u5982\u679c$K$\u4e0d\u80fd\u51cf\u53bb\u8fd9\u4e2a\u6570\uff0c\u5b83\u5c31\u6c38\u8fdc\u4e5f\u4e0d\u53ef\u80fd\u518d\u80fd\u51cf\u53bb\u8fd9\u4e2a\u6570\uff0c\u6240\u4ee5\u7528\u6807\u8bb0\u6570\u7ec4\uff0c\u78b0\u5230\u51cf\u4e0d\u4e0b\u53bb\u7684\u5c31\u76f4\u63a5\u6807\u8bb0\uff0c\u4ee5\u540e\u904d\u5386\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u8df3\u8fc7\u4e86\u3002\n\n\u4e3a\u4e86\u5b9e\u73b0\u4ee5\u4e0a\u601d\u8def\uff0c\u9700\u8981\u7528\u4e00\u4e2a\u201d\u6b7b\u5faa\u73af\u201c\u4ee5\u53ca\u4e00\u4e2aflag\u53d8\u91cf\u6807\u8bb0\uff0c\u5177\u4f53\u7ec6\u8282\u4e0d\u8bb2\u4e86\uff0c\u8bf7\u770b\u5b98\u4eec\u76f4\u63a5\u6b23\u8d4f\u4ee3\u7801\uff1a\n\n```c++\n#include<cstdio>\n#define ll long long\nusing namespace std;\nconst int maxn=1e5*2+1;\nll n,k;\nll a[maxn];\nbool v[maxn];\nll sum,ans,tot;\nint main()\n{\n    scanf(\"%lld%lld\",&n,&k);\n    tot=n;\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%lld\",&a[i]);\n        sum+=a[i];\n    }\n    while(1)\n    {\n        ans+=tot*(k/sum);\n        k%=sum;\n        int flag=0;\n        for(int i=1;i<=n;i++)\n        {\n            if(v[i])\n                continue;\n            if(k>=a[i])\n            {\n                ans++;\n                k-=a[i];\n                flag=1;\n            }\n            else\n            {\n                v[i]=1;\n                sum-=a[i];\n                tot--;\n            }\n        }\n        if(flag==0)\n            break;\n    }\n    printf(\"%lld\",ans);\n    return 0;\n}\n```",
        "postTime": 1567231083,
        "uid": 175131,
        "name": "\u5085\u601d\u7ef4666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1073D \u3010Berland Fair\u3011"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/yifusuyi/p/10220109.html)\n\n## Description\n\n\u7ed9\u5b9a $n$ \u4e2a\u5546\u5e97\uff0c\u4ed6\u4eec\u56f4\u6210\u4e00\u4e2a\u5706\u5708\uff0c\u6309\u7167\u987a\u65f6\u9488\u4ece $1$ \u5230 $n$ \u7f16\u53f7\u3002\u4f60\u6709 $T$ \u5143\u94b1\uff0c\u4ece $1$ \u53f7\u70b9\u5f00\u59cb\u6309\u7167\u987a\u65f6\u9488\u65b9\u5411\u8d70\uff0c\u6bcf\u5230\u4e00\u4e2a\u5546\u5e97\uff0c\u53ea\u8981\u94b1\u591f\u5c31\u5fc5\u987b\u4e70\u8fd9\u4e2a\u5546\u5e97\u7684\u7269\u54c1\u3002\u5546\u5e97\u4e2d\u7269\u54c1\u662f\u65e0\u9650\u7684\uff0c\u5373\u591a\u6b21\u5230\u8fbe\u53ef\u80fd\u591a\u6b21\u8d2d\u4e70\u3002\u6c42\u4f1a\u4e70\u591a\u5c11\u4ef6\u7269\u54c1\n\n## Input\n\n\u7b2c\u4e00\u884c\u662f\u4e00\u4e2a\u6574\u6570 $n$\n\n\u4e0b\u9762\u4e00\u884c $n$ \u4e2a\u6574\u6570 $a_i$\uff0c\u4ee3\u8868\u6bcf\u4e2a\u5546\u5e97\u7269\u54c1\u7684\u4ef7\u683c\n\n## Output\n\n\u4e00\u884c\u4e00\u4e2a\u6574\u6570\u4ee3\u8868\u7b54\u6848\n\n## Hint\n\n$1~\\leq~n~\\leq~2~\\times~10^5~,~1~\\leq~T~\\leq~10^{18}~,~1~\\leq~a_i~\\leq~10^9$\n\n## Solution\n\n\u89e3\u6cd5\u4e00\uff1a\n\n\u663e\u7136\u5728\u94b1\u6570\u5145\u8db3\u662f\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u9664\u4e00\u4e0b\u5f97\u5230\u6211\u4eec\u53ef\u4ee5\u8f6c\u591a\u5c11\u5708\uff0c$O(1)$ \u7edf\u8ba1\u8fd9\u90e8\u5206\u7b54\u6848\uff0c\u7136\u540e\u628a\u94b1\u6570\u53d6\u6a21\u5373\u4e3a\u8fd9\u4e9b\u5708\u8f6c\u5b8c\u540e\u6211\u4eec\u5269\u4e0b\u7684\u94b1\uff0c\u8fd9\u65f6\u7684\u94b1\u6570\u662f\u4e0d\u8db3\u4ee5\u8f6c\u5b8c\u4e00\u5708\u7684\u3002\n\n\u4e0b\u9762\u6211\u4eec\u8003\u8651\u7528\u8fd9\u4e9b\u94b1\u53ef\u4ee5\u8fde\u7eed\u8d70\u591a\u8fdc\uff0c\u5373\u4f1a\u5230\u54ea\u4e00\u4e2a\u5546\u5e97\u505c\u4e0b\u6765\u3002\u6ce8\u610f\u5230\u8fd9\u4e2a\u503c\u662f\u53ef\u4ee5\u4e8c\u5206\u7684\uff0c\u5177\u4f53\u7684\uff0c\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u524d\u7f00\u548c\uff0c\u4e8c\u5206\u54ea\u4e2a\u4f4d\u7f6e\u7684\u524d\u7f00\u548c\u662f\u6700\u5927\u7684\u5c0f\u4e8e\u94b1\u6570\u7684\u5373\u53ef\u3002\u7136\u540e\u5269\u4e0b\u90a3\u4e2a\u4f4d\u7f6e\u7684\u5546\u5e97\u663e\u7136\u518d\u4e5f\u4e0d\u4f1a\u88ab\u8d2d\u4e70\u5230\u4e86\uff0c\u4e8e\u662f\u53ef\u4ee5\u5c06\u5b83\u76f4\u63a5\u5220\u53bb\uff0c\u7136\u540e\u7edf\u8ba1\u8fd9\u4e00\u6bb5\u8fde\u7eed\u8d70\u7684\u4f4d\u7f6e\u7684\u7b54\u6848\u3002\u5220\u9664\u8fd9\u4e2a\u4f4d\u7f6e\u540e\u7684\u524d\u7f00\u548c\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u6216\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u4e00\u6bb5\u533a\u95f4\u4e2d\u8fd8\u5269\u591a\u5c11\u4e2a\u6ca1\u6709\u88ab\u5220\u53bb\u7684\u4f4d\u7f6e\u4e5f\u53ef\u4ee5\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u4f4d\u7f6e\u540e\u9762\u80fd\u8fde\u7eed\u8d70\u5230\u54ea\u91cc\uff0c\u6211\u4eec\u4f9d\u7136\u53ef\u4ee5\u4e8c\u5206\u8fd9\u4e2a\u503c\uff0c\u4ee5\u6b64\u7c7b\u63a8\u76f4\u5230\u4e00\u5708\u8d70\u5b8c\uff0c\u7136\u540e\u4ece\u5934\u5f00\u59cb\u91cd\u590d\u6d41\u7a0b\u5373\u53ef\u3002\n\n\u6ce8\u610f\u5230\u6bcf\u6b21\u4e8c\u5206\u6211\u4eec\u4e00\u5b9a\u4f1a\u5220\u9664\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u6240\u4ee5\u6211\u4eec\u4f1a\u4e8c\u5206 $O(n)$ \u6b21\uff0c\u76f4\u63a5\u4e8c\u5206+\u6811\u72b6\u6570\u7ec4/\u7ebf\u6bb5\u6811\u7684\u8bdd\uff0c\u5355\u6b21\u4e8c\u5206\u590d\u6742\u5ea6 $O(\\log^2 n)$\uff0c\u603b\u590d\u6742\u5ea6 $O(n \\log^2 n)$\u3002\u5982\u679c\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\uff0c\u5355\u6b21\u590d\u6742\u5ea6\u53ef\u4ee5\u505a\u5230 $O(\\log n)$\uff0c\u603b\u590d\u6742\u5ea6 $O(n \\log n)$\u3002\n\n~~\u4f46\u662f\u5929\u77e5\u9053\u4e3a\u4ec0\u4e48\u6211\u7684\u4e24\u4e2alog\u7b97\u6cd5\u8dd1\u7684\u6bd4\u4e00\u4e2alog\u7684\u8fd8\u5feb~~\n\n\u89e3\u6cd5\u4e8c\uff1a\n\n\u7b97\u51fa\u5f53\u524d\u7684\u94b1\u6570\u53ef\u4ee5\u8d70\u591a\u5c11\u5708\u7684\u65b9\u6cd5\u540c\u4e0a\uff0c\u7136\u540e\u8003\u8651\u6211\u4eec\u66b4\u529b\u8dd1\u4e00\u5708\uff0c\u7edf\u8ba1\u6709\u54ea\u4e9b\u4f4d\u7f6e\u7684\u662f\u4e0d\u80fd\u88ab\u8d2d\u4e70\u5230\u7684\uff0c\u76f4\u63a5\u5220\u6389\u3002\u7136\u540e\u7528\u5269\u4e0b\u7684\u94b1\u518d\u53d6\u6a21\u3002\n\n\u6ce8\u610f\u5230 $T$ \u6bcf\u6b21\u53d6\u6a21\u65f6\u7684\u6a21\u6570\u4e00\u5b9a\u5c0f\u4e8e $T$\uff0c\u800c\u4e00\u4e2a\u6570\u88ab\u6bd4\u81ea\u5df1\u5c0f\u7684\u6570\u53d6\u6a21\u81f3\u5c11\u51cf\u5c11\u4e8c\u5206\u4e4b\u4e00\uff0c\u8bc1\u660e\u4e0a\u53ef\u4ee5\u5206\u6a21\u6570\u5927\u4e8e\u6216\u5c0f\u4e8e\u7b49\u4e8e $\\frac{m}{2}$ \u8fdb\u884c\u8ba8\u8bba\u3002\u4e8e\u662f $T$ \u88ab\u53d6\u6a21 $O(\\log T)$ \u6b21\uff0c\u6bcf\u6b21\u5bf9\u5e94\u4e00\u6b21 $O(n)$ \u7684\u7edf\u8ba1\u7b54\u6848\uff0c\u4e8e\u662f\u603b\u590d\u6742\u5ea6 $O(n \\log T)$\u3002\n\n## Code\n\n\u4f9d\u636e\u89e3\u6cd5\u4e00\u5199\u6210\u3002\n\n$O(n \\log^2n)$\n\n```cpp\n#include <cstdio>\n#ifdef ONLINE_JUDGE\n#define freopen(a, b, c)\n#endif\n#define rg register\n#define ci const int\n#define cl const long long\n\ntypedef long long  ll;\n\nnamespace IPT {\n\tconst int L = 1000000;\n\tchar buf[L], *front=buf, *end=buf;\n\tchar GetChar() {\n\t\tif (front == end) {\n\t\t\tend = buf + fread(front = buf, 1, L, stdin);\n\t\t\tif (front == end) return -1;\n\t\t}\n\t\treturn *(front++);\n\t}\n}\n\ntemplate <typename T>\ninline void qr(T &x) {\n\trg char ch = IPT::GetChar(), lst = ' ';\n\twhile ((ch > '9') || (ch < '0')) lst = ch, ch=IPT::GetChar();\n\twhile ((ch >= '0') && (ch <= '9')) x = (x << 1) + (x << 3) + (ch ^ 48), ch = IPT::GetChar();\n\tif (lst == '-') x = -x;\n}\n\ntemplate <typename T>\ninline void ReadDb(T &x) {\n\trg char ch = IPT::GetChar(), lst = ' ';\n\twhile ((ch > '9') || (ch < '0')) lst = ch, ch = IPT::GetChar();\n\twhile ((ch >= '0') && (ch <= '9')) x = x * 10 + (ch ^ 48), ch = IPT::GetChar();\n\tif (ch == '.') {\n\t\tch = IPT::GetChar();\n\t\tdouble base = 1;\n\t\twhile ((ch >= '0') && (ch <= '9')) x += (ch ^ 48) * ((base *= 0.1)), ch = IPT::GetChar();\n\t}\n\tif (lst == '-') x = -x;\n}\n\nnamespace OPT {\n\tchar buf[120];\n}\n\ntemplate <typename T>\ninline void qw(T x, const char aft, const bool pt) {\n\tif (x < 0) {x = -x, putchar('-');}\n\trg int top=0;\n\tdo {OPT::buf[++top] = x % 10 + '0';} while (x /= 10);\n\twhile (top) putchar(OPT::buf[top--]);\n\tif (pt) putchar(aft);\n}\n\nconst int maxn = 200010;\n\nint n;\nll t, ans;\nint MU[maxn];\nll tree[maxn], val[maxn];\n\ninline int lowbit(ci x) {return x & (-x);}\n\nll ask(ll*, int);\nint check(int, ll);\nvoid update(ll*, int, ci);\n\nsigned main() {\n\tfreopen(\"1.in\", \"r\", stdin);\n\tqr(n); qr(t);\n\tfor (rg int i = 1; i <= n; ++i) {qr(MU[i]); update(tree, i, MU[i]); update(val, i, 1);}\n\tll s = ask(tree, n); int cnt = n;\n\twhile (cnt) {\n\t\tif (!t) break;\n\t\tans += t / s * cnt; t %= s;\n\t\tint k = 0;\n\t\tdo {\n\t\t\tint pre = k;\n\t\t\tk = check(k, t);\n\t\t\tif (k > n) {\n\t\t\t\tt -= ask(tree, n) - ask(tree, pre);\n\t\t\t\tans += ask(val, n) - ask(val, pre);\n\t\t\t\tbreak;\n\t\t\t};\n\t\t\tupdate(tree, k, -MU[k]); update(val, k, -1); --cnt;\n\t\t\tt -= ask(tree, k - 1) - ask(tree, pre);\n\t\t\ts -= MU[k];\n\t\t\tans += ask(val, k) - ask(val, pre);\n\t\t} while (cnt && t);\n\t}\n\tqw(ans, '\\n', true);\n}\n\nvoid update(ll *ar, int x, ci v) {\n\twhile (x <= n) {\n\t\tar[x] += v;\n\t\tx += lowbit(x);\n\t}\n}\n\nll ask(ll* ar, int x) {\n\tll _ret = 0;\n\twhile (x) {\n\t\t_ret += ar[x];\n\t\tx -= lowbit(x);\n\t}\n\treturn _ret;\n}\n\nint check(int pre, ll x) {\n\tint l = pre, r = n + 1, mid = l, _ret = 0;\n\twhile (l <= r) {\n\t\tmid = (l + r) >> 1;\n\t\tif ((ask(tree, mid) - ask(tree, pre)) <= x) _ret = mid, l = mid + 1;\n\t\telse r = mid - 1;\n\t}\n\treturn _ret + 1;\n}\n```\n\n$O(n \\log n)$\n\n```cpp\n#include <ctime>\n#include <cstdio>\n#ifdef ONLINE_JUDGE\n#define freopen(a, b, c)\n#endif\n#define rg register\n#define ci const int\n#define cl const long long\n\ntypedef long long ll;\n\nnamespace IPT {\n\tconst int L = 1000000;\n\tchar buf[L], *front=buf, *end=buf;\n\tchar GetChar() {\n\t\tif (front == end) {\n\t\t\tend = buf + fread(front = buf, 1, L, stdin);\n\t\t\tif (front == end) return -1;\n\t\t}\n\t\treturn *(front++);\n\t}\n}\n\ntemplate <typename T>\ninline void qr(T &x) {\n\trg char ch = IPT::GetChar(), lst = ' ';\n\twhile ((ch > '9') || (ch < '0')) lst = ch, ch=IPT::GetChar();\n\twhile ((ch >= '0') && (ch <= '9')) x = (x << 1) + (x << 3) + (ch ^ 48), ch = IPT::GetChar();\n\tif (lst == '-') x = -x;\n}\n\ntemplate <typename T>\ninline void ReadDb(T &x) {\n\trg char ch = IPT::GetChar(), lst = ' ';\n\twhile ((ch > '9') || (ch < '0')) lst = ch, ch = IPT::GetChar();\n\twhile ((ch >= '0') && (ch <= '9')) x = x * 10 + (ch ^ 48), ch = IPT::GetChar();\n\tif (ch == '.') {\n\t\tch = IPT::GetChar();\n\t\tdouble base = 1;\n\t\twhile ((ch >= '0') && (ch <= '9')) x += (ch ^ 48) * ((base *= 0.1)), ch = IPT::GetChar();\n\t}\n\tif (lst == '-') x = -x;\n}\n\nnamespace OPT {\n\tint buf[120];\n}\n\ntemplate <typename T>\ninline void qw(T x, const char aft, const bool pt) {\n\tif (x < 0) {x = -x, putchar('-');}\n\trg int top=0;\n\tdo {OPT::buf[++top] = int(x % 10 + '0');} while (x /= 10);\n\twhile (top) putchar(OPT::buf[top--]);\n\tif (pt) putchar(aft);\n}\n\nconst int maxn = 200010;\nconst int maxt = 400010;\n\nint n;\nll t, ans;\nint tree[maxn], MU[maxn];\n\nstruct Tree {\n\tTree *ls, *rs;\n\tint l, r;\n\tll v;\n\t\n\tinline void pushup() {\n\t\tthis->v = this->ls ? (this->rs ? this->ls->v + this->rs->v : this->ls->v) : this->rs->v;\n\t}\n};\nTree *pool[maxt], qwq[maxt], *rot;\nint top;\n\ninline int lowbit(ci x) {return x & -x;}\n\nint check(int, ll);\nvoid buildpool();\nvoid build(Tree*, ci, ci);\nvoid update(int, ci);\nvoid update(Tree*, ci);\nll ask(Tree*, ci, ci);\nint ask(int);\nint ask(Tree*, cl);\n\nsigned main() {\n\tfreopen(\"1.in\", \"r\", stdin);\n\tqr(n); qr(t); ll s = 0; \n\tfor (rg int i = 1; i <= n; ++i) {qr(MU[i]); s+= MU[i]; update(i, 1);}\n\tint cnt = n;\n\tbuildpool();\n\tbuild(rot, 1, n);\n\twhile (cnt) {\n\t\tif (!t) break;\n\t\tans += t / s * cnt; t %= s;\n\t\tint k = 0;\n\t\tdo {\n\t\t\tint pre = k;\n\t\t\tk = check(k, t);\n\t\t\tif (k > n) {\n\t\t\t\tt -= ask(rot, pre + 1, n);\n\t\t\t\tans += ask(n) - ask(pre);\n\t\t\t\tbreak;\n\t\t\t};\n\t\t\tupdate(rot, k); update(k, -1); --cnt;\n\t\t\tt -= ask(rot, pre, k - 1);\n\t\t\ts -= MU[k];\n\t\t\tans += ask(k) - ask(pre);\n\t\t} while (cnt && t);\n\t}\n\tqw(ans, '\\n', true);\n}\n\n\nint check(int pre, ll x) {\n\tx += ask(rot, 1, pre);\n\tll s = ask(rot, 1, n);\n\tif (s <= x) return n + 1;\n\treturn ask(rot, x);\n}\n\nvoid buildpool() {\n\tfor (rg int i = 0; i < maxt; ++i) pool[i] = qwq + i;\n\trot = pool[maxt - 1];  top = maxt - 2;\n}\n\nvoid build(Tree *u, ci l, ci r) {\n\tu->l = l; u->r = r;\n\tif (l == r) {u->v = MU[l]; return;}\n\tint mid = (l + r) >> 1;\n\tif (l <= mid) build(u->ls = pool[top--], l, mid);\n\tif (mid < r) build(u->rs = pool[top--], mid + 1, r);\n\tu->pushup();\n}\n\nvoid update(int x,ci v) {\n\twhile (x <= n) {\n\t\ttree[x] += v;\n\t\tx += lowbit(x);\n\t}\n}\n\nvoid update(Tree* u, ci x) {\n\tif ((u->l > x) || (u->r < x)) return;\n\tif (u->l == u->r) {u->v = 0; return;}\n\tif (u->ls) update(u->ls, x);\n\tif (u->rs) update(u->rs, x);\n\tu->pushup();\n}\n\nint ask(int x) {\n\tint _ret = 0;\n\twhile (x) {\n\t\t_ret += tree[x];\n\t\tx -= lowbit(x);\n\t}\n\treturn _ret;\n}\n\nll ask(Tree *u, ci l, ci r) {\n\tif ((u->l > r) || (u->r < l)) return 0;\n\tif ((u->l >= l) && (u->r <= r)) return u->v;\n\treturn u->ls ? (u->rs ? ask(u->ls, l, r) + ask(u->rs, l, r) : ask(u->ls, l, r)) : ask(u->rs, l, r);\n}\n\nint ask(Tree *u, cl v) {\n\tif (u->l == u->r) return u->l;\n\tif (u->ls->v <= v) return ask(u->rs, v - u->ls->v);\n\telse return ask(u->ls, v);\n}\n```\n\n## Summary\n\n\u8be5define int ll\u5c31\u8981define\u554a= =\u8981\u4e0d\u7136\u53ef\u80fd\u4f1afst\u7684\u5f88\u60e8= =\n\n\u4e00\u4e2a\u6570\u5bf9\u6bd4\u81ea\u5df1\u5c0f\u7684\u6570\u53d6\u6a21\u4e00\u6b21\u81f3\u5c11\u51cf\u5c11\u4e00\u534a\u3002",
        "postTime": 1546586910,
        "uid": 65363,
        "name": "\u4e00\u6276\u82cf\u4e00",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1073D \u3010Berland Fair\u3011"
    },
    {
        "content": "\u6709\u4e00\u4e9b\u96c6\u5e02\u6309\u987a\u5e8f\u56f4\u6210\u4e00\u5708\uff0c\u6bcf\u4e2a\u96c6\u5e02\u4e0a\u90fd\u5356\u7cd6\u679c\u4e14\u6709\u4e0d\u540c\u7684\u4ef7\u683c\u3002\u4e00\u4e2a\u4eba\u4ece1\u53f7\u96c6\u5e02\u51fa\u53d1\uff0c\u5982\u679c\u94b1\u591f\u5c31\u4e70\u4e00\u4e2a\u7cd6\u679c\uff0c\u7136\u540e\u8d70\u5230\u4e0b\u4e00\u4e2a\u96c6\u5e02\uff0c\u5426\u5219\u76f4\u63a5\u8d70\u5230\u4e0b\u4e00\u4e2a\u96c6\u5e02\uff0c\u76f4\u5230\u6ca1\u6709\u7cd6\u679c\u53ef\u4e70\u4e3a\u6b62\u3002\u6c42\u6700\u7ec8\u53ef\u4ee5\u4e70\u591a\u5c11\u7cd6\u679c\n\n\u611f\u89c9\u548c\u7ea6\u745f\u592b\u6709\u70b9\u50cf\u662f\u4e0d\u662f\uff1f\u9996\u5148\u53ef\u4ee5\u6ce8\u610f\u5230\u4e24\u4e2a\u4e8b\u5b9e\n\n1.\u5982\u679c\u94b1\u5145\u8db3\uff0c\u90a3\u4e48\u8d70\u4e00\u5708\u53ef\u4ee5\u4e70\u5230\u4e00\u5b9a\u6570\u91cf\u7684\u7cd6\u679c\n\n2.\u5982\u679c\u8d70\u5230\u67d0\u4e00\u4e2a\u96c6\u5e02\u65f6\u4e0d\u80fd\u4e70\u7cd6\u679c\uff0c\u90a3\u4e48\u5c31\u4e0d\u53ef\u80fd\u5728\u8fd9\u4e2a\u96c6\u5e02\u4e70\u7cd6\u679c\u4e86\n\n\u6240\u4ee5\u6211\u4eec\u5148\u8003\u8651\u53ef\u4ee5\u8d70\u591a\u5c11\u4e2a\u4e00\u6574\u5708\uff1b\u4e0d\u80fd\u8d70\u4e00\u6574\u5708\u540e\uff0c\u7528$O(n)$\u7684\u590d\u6742\u5ea6\u8d70\u4e00\u5708\uff0c\u628a\u4e0d\u80fd\u4e70\u5230\u7cd6\u679c\u7684\u5730\u65b9\u6dd8\u6c70\u51fa\u53bb\u3002\u91cd\u590d\u8fd9\u4e24\u4e2a\u6b65\u9aa4\u5373\u53ef\n\n~~\u590d\u6742\u5ea6\uff1f\u9b3c\u77e5\u9053\uff0c\u6240\u4ee5\u5e94\u8be5\u4f1a\u88abhack\uff08\u53cd\u6b63\u6bd4\u8d5b\u8dd1\u8fc7\u4e86x~~\n\n\u9644\u4e0aAC\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\ntypedef long long LL;\nconst LL maxn=200010;\nusing namespace std;\n\nLL n,tot;\nLL a[maxn],nn,ns; \n///nn\u662f\u5f53\u524d\u8d70\u4e00\u5708\u53ef\u4ee5\u4e70\u5230\u7cd6\u679c\u7684\u6570\u91cf\uff0cns\u662f\u5f53\u524d\u8d70\u4e00\u5708\u7684\u82b1\u8d39\nbool vis[maxn];\nLL ans;\n\nint main()\n{\n    scanf(\"%I64d%I64d\",&n,&tot);\n    for(LL i=1;i<=n;i++) scanf(\"%I64d\",&a[i]),ns+=a[i],nn++;\n    while(1)\n    {\n        ans+=nn*(tot/ns),tot%=ns;\n        bool b=false; ///\u5bfb\u627e\u8fd8\u6709\u6ca1\u6709\u53ef\u4ee5\u4e70\u7cd6\u679c\u7684\u96c6\u5e02\n        for(LL i=1;i<=n;i++)\n        {\n            if(vis[i]) continue;\n            if(tot>=a[i]) tot-=a[i],ans++,b=true;\n            else vis[i]=true,nn--,ns-=a[i];\n        }\n        if(!b) break;\n    }\n    printf(\"%I64d\",ans);\n    return 0;\n}\n```\n",
        "postTime": 1540530868,
        "uid": 44580,
        "name": "JMercury",
        "ccfLevel": 7,
        "title": "CF1073D Berland Fair"
    },
    {
        "content": "# Berland Fair\n\n[Luogu CF1073D](https://www.luogu.com.cn/problem/CF1073D)\n\n[Codeforces 1073D](https://codeforces.com/problemset/problem/1073/D)\n\n## Solution\n\n\u8bdd\u8bf4\u6211\u8fd9\u4e2a\u5e94\u8be5\u4e0d\u662f\u6700\u4f18\u89e3\u7b2c\u4e00\uff0c\u5e94\u8be5\u53ea\u662f\u7b2c\u4e00\u9875\u800c\u5df2\uff0c\u4e0d\u8fc7\u597d\u50cf\u56e0\u4e3a\u8ba1\u65f6\u7684\u65b9\u5f0f\u6539\u53d8\u4e86\u5bfc\u81f4\u6211\u7684\u8017\u65f6\u4f4e\u4e8e\u7b2c\u4e8c\uff0c\u6700\u6162\u70b9 62ms\u3002\n\n[\u63d0\u4ea4\u8bb0\u5f55](https://www.luogu.com.cn/record/90770461)\n\n\u5047\u8bbe\u5728\u73af\u5185\u8f6c\u5708\uff0c\u90a3\u4e48\u8fd9\u4e2a\u73af\u4e2d\u6743\u503c\u6700\u5927\u7684\u4f4d\u7f6e\u4e00\u5b9a\u662f\u7b2c\u4e00\u4e2a\u4e70\u4e0d\u5230\u7684\uff08\u53ef\u80fd\u4e70\u4e0d\u8d77\u505c\u4e0b\u7684\u4f4d\u7f6e\u4e0d\u662f\u5728\u6700\u5927\u7684\u4f4d\u7f6e\uff0c\u4f46\u662f\u65e2\u7136\u66f4\u5c0f\u7684\u4f4d\u7f6e\u90fd\u4e70\u4e0d\u8d77\u4e86\uff0c\u6700\u5927\u7684\u4e00\u5b9a\u4e5f\u4e70\u4e0d\u8d77\uff09\uff0c\u8003\u8651\u7528\u4f18\u5148\u961f\u5217\u7ef4\u62a4\u8fd9\u6837\u4e00\u4e2a\u6743\u503c\u6700\u5927\u7684\u503c\uff0c\u8bb0\u961f\u5185\u5143\u7d20\u7684\u548c\u4e3a $sum$\uff0c\u90a3\u4e48\u4f1a\u53d1\u73b0\u5982\u679c $T\\ge sum$\uff0c\u5c31\u610f\u5473\u7740\u5f53\u524d\u4e00\u5b9a\u80fd\u591f\u7ed5\u5168\u90e8\u4e00\u5708\uff0c\u5e76\u4e14\u8f6c\u7684\u5708\u6570\u4e5f\u662f\u53ef\u4ee5\u901a\u8fc7\u6570\u5b66\u65b9\u5f0f\u8ba1\u7b97\u7684\uff0c\u4e3a $\\displaystyle\\lfloor\\frac T {sum} \\rfloor$\uff0c\u6bcf\u4e00\u5708\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5c31\u662f\u961f\u5217\u957f `q.size()`\u3002\n\n\u5982\u679c\u6b64\u65f6 $T< sum$\uff0c\u5c31\u8bf4\u660e\u6709\u7684\u70b9\u4e0d\u53ef\u80fd\u518d\u4e70\u5f97\u5230\u4e86\uff0c\u6240\u4ee5\u5c31\u628a\u8fd9\u4e9b\u70b9\u4ece\u4f18\u5148\u961f\u5217\u7684\u961f\u5934\u8e22\u6389\uff0c\u8e22\u51fa\u961f\u5217\u7684\u540c\u65f6\u5c06\u8fd9\u4e9b\u70b9\u5bf9\u4e8e\u961f\u5217\u5143\u7d20\u4e4b\u548c $sum$ \u7684\u8d21\u732e\u5254\u9664\u3002\u4f1a\u53d1\u73b0\u6b64\u65f6\u53ef\u80fd\u4ecd\u7136\u53ef\u80fd\u51fa\u73b0 $T<sum$ \u7684\u60c5\u51b5\uff0c\u5e76\u4e14\u961f\u5934\u5143\u7d20\u662f\u5c0f\u4e8e $T$ \u7684\uff0c\u56e0\u6b64\u8fd9\u65f6\u5019\u9700\u8981\u5728\u5e8f\u5217\u4e2d\u679a\u4e3e\u4e00\u904d\uff08\u4e0d\u7528\u62c5\u5fc3\u5df2\u7ecf\u5220\u6389\u7684\u70b9\u5f71\u54cd\u7ed3\u679c\uff0c\u56e0\u4e3a\u5220\u6389\u7684\u70b9\u7684\u6743\u503c\u4e00\u5b9a\u5927\u4e8e\u73b0\u5728\u7684 $T$\uff0c\u56e0\u6b64\u4e0d\u4f1a\u5bf9\u7b54\u6848\u4ea7\u751f\u5f71\u54cd\uff09\u3002\u770b\u4ee3\u7801\u53ef\u80fd\u66f4\u597d\u7406\u89e3\u3002\n\n\u56e0\u4e3a\u6bcf\u4e2a\u5143\u7d20\u53ea\u4f1a\u8fdb\u961f\u51fa\u961f\u4e00\u6b21\uff0c\u961f\u5217\u662f\u4f18\u5148\u961f\u5217\uff0c\u56e0\u6b64\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n(\\log n + \\log m))$ \u7684\uff08$\\log m$ \u662f\u56e0\u4e3a\u6bcf\u6b21\u53d6\u6a21\u81f3\u5c11\u53d8\u6210\u539f\u6765\u7684 $0.5$ \u500d\uff09\uff0c\u53ef\u80fd\u56e0\u4e3a\u4f18\u5148\u961f\u5217\u820d\u53bb\u4e86\u5f88\u591a\u65e0\u7528\u72b6\u6001\uff0c\u6240\u4ee5\u5e38\u6570\u5f88\u5c0f\uff0c\u8dd1\u7684\u98de\u5feb\u3002\n\n**Code**\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconstexpr int _SIZE = 2e5;\nint n, T, a[_SIZE + 5], ans, sum;\npriority_queue<int> q;\nsigned main() {\n\tios::sync_with_stdio(0);\n\tcin.tie(0); cout.tie(0);\n\tcin >> n >> T;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> a[i];\n\t\tsum += a[i]; q.push(a[i]); // \u6bcf\u4e2a\u70b9\u5165\u961f\n\t}\n\twhile (!q.empty()) {\n\t\tif (T >= sum) ans += T / sum * q.size(), T %= sum; // \u53ef\u4ee5\u8f6c\u6574\u5708\n\t\twhile (!q.empty() && T < q.top()) sum -= q.top(), q.pop(); // \u8e22\u6389\u4e0d\u53ef\u80fd\u518d\u505a\u8d21\u732e\u7684\u70b9\n\t\tfor (int i = 1; i <= n; i++) if (a[i] <= T) T -= a[i], ans++; // \u679a\u4e3e\u6563\u70b9\uff0c\u9700\u8981\u6ce8\u610f\u8fd9\u90e8\u5206\u4e0d\u80fd\u653e\u5230\u5faa\u73af\u5916\n\t}\n\tcout << ans << '\\n';\n\treturn 0;\n}\n```",
        "postTime": 1666312972,
        "uid": 345225,
        "name": "Hanx16QwQ",
        "ccfLevel": 0,
        "title": "CF1073D Berland Fair"
    },
    {
        "content": "\u8fd9\u9898\u53ea\u9700\u4e00\u8f6e\u4e00\u8f6e\u7684\u6a21\u62df\uff0c\u76f4\u81f3\u518d\u4e5f\u4e70\u4e0d\u8d77\u7cd6\u679c\u4e3a\u6b62\u3002\n\n\u5b9a\u4e49\u4e24\u4e2a\u53d8\u91cf\uff1a$s,w$\uff0c\u5176\u4e2d $s$ \u8868\u793a\u5f53\u524d\u8fd9\u4e00\u8f6e\u4e70\u7cd6\u679c\u6d88\u8017\u7684\u94b1\uff0c$w$ \u8868\u793a\u4e70\u7cd6\u679c\u7684\u4e2a\u6570\u3002\n\n\u63a5\u7740\u679a\u4e3e\u5e97\u94fa\uff0c\u5982\u679c\uff1a\n$$s+a_i\\le t$$\n\u5219\uff1a\n~~~cpp\ns+=a[i];\nw++;\n~~~\n\u7136\u540e\u5224\u65ad\uff0c\u5982\u679c $s$ \u4e0d\u7b49\u4e8e $0$,\u5219\uff08ans\u8868\u793a\u7cd6\u679c\u4e2a\u6570\uff09\n~~~cpp\nans+=t/s*w;\nt%=s;\n\n~~~\n### \u4ec0\u4e48\u65f6\u5019\u624d\u7b97\u6240\u6709\u7cd6\u679c\u90fd\u4e70\u4e0d\u8d77\uff1f\n\n\u6211\u4eec\u53ea\u8981\u5224\u65ad\u5728\u679a\u4e3e\u5b8c\u5e97\u94fa\u540e\uff0c\u5224\u65ad $s$ \u662f\u4e0d\u662f\u5927\u4e8e $0$ \u5373\u53ef\uff08\u56e0\u4e3a\u5982\u679c $s=0$ \u5c31\u4ee3\u8868\u6ca1\u6709\u4e70\u7cd6\u679c\uff0c\u4e0d\u8fc7\u8fd9\u4e2a\u662f\u5728\u5faa\u73af\u7684\u5224\u65ad\u6761\u4ef6\u91cc\u505a\u7684\uff09\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nlong long n,t,a[200010],ans,s=1,w;\nint main(){\n\tcin>>n>>t;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>a[i];\n\t}\n\twhile(s>0){//\u5224\u65ad\u6240\u6709\u7cd6\u679c\u662f\u5426\u4e70\u4e0d\u8d77\u3002\n\t\ts=w=0;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif(s+a[i]<=t){\n\t\t\t\ts+=a[i];\n\t\t\t\tw++;\n\t\t\t}\n\t\t}\n\t\tif(s==0){\n\t\t\tcontinue;\n\t\t}\n\t\tans+=t/s*w;\n\t\tt%=s;\n\t}\n\tcout<<ans<<endl;\n\tr0;\n}\n```\n",
        "postTime": 1657191708,
        "uid": 528325,
        "name": "fengxiaoyi",
        "ccfLevel": 0,
        "title": "CF1073D Berland Fair\u9898\u89e3"
    },
    {
        "content": "\u6628\u665a$cf$\u53ea\u5207\u4e86\u56db\u9053\u9898\u7684\u849f\u84bb\u6765\u5199\u4e2a\u9898\u89e3\n\n\u8fd9\u9053\u9898\u5f88\u7b80\u5355\u554a...\u6bd4$C$\u7b80\u5355\u591a\u4e86\n\n\u9996\u5148\u6211\u4eec\u8003\u8651\u66b4\u529b\u679a\u4e3e\uff0c\u4e00\u4e2a\u4e00\u4e2a\u8f6c\u5708\u5708\uff0c\u80af\u5b9a\u662f\u8d85\u65f6\n\n\u7136\u540e\u5927\u5bb6\u90fd\u4f1a\u60f3\u5230\u4e00\u4e2a\u4f18\u5316\uff0c\u5c31\u662f\u628a\u6240\u6709\u70b9\u7684\u603b\u548c\u627e\u5230\uff0c\u7136\u540e\u627e\u5f53\u524d\u94b1\u53ef\u4ee5\u628a\u4e00\u5708\u4e70\u591a\u5c11\u904d\uff0c\u7136\u540e\u628a\u94b1\u5bf9\u603b\u548c\u53d6\u6a21\u518d\u66b4\u529b\u6551\u661f\n\n\u53ef\u662f\u8fd9\u6837\u4f1a\u88ab\u5361\u6b7b\uff0c\u5982\u679c\u6211\u53ea\u6709\u4e00\u4e2a\u7684\u4ef7\u94b1\u662f$1e8$\uff0c\u5176\u4ed6\u90fd\u662f$1$\uff0c\u66b4\u529b\u6781\u9650\u8fd8\u662f\u4f1a\u5faa\u73af$1e8$\u6b21\u5de6\u53f3\n\n\u6211\u4eec\u63a5\u7740\u524d\u9762\u7684\u601d\u8def\uff0c\u5982\u679c\u5f53\u524d\u70b9\u7684\u4ef7\u94b1\u5df2\u7ecf\u5927\u4e8e\u5269\u4e0b\u7684\u94b1\u6570\uff0c\u6211\u4eec\u5c31\u628a$sum$\u51cf\u53bb\u8fd9\u4e2a\u70b9\u7684\u4ef7\u94b1\uff0c\u518d\u7528\u521a\u624d\u7684\u65b9\u6cd5\uff0c\u628a\u5269\u4e0b\u7684\u94b1\u9664\u4ee5\u8fd9\u4e2a\u503c\uff0c\u770b\u5176\u4ed6\u7684\u4e1c\u897f\u8fd8\u80fd\u591f\u4e70\u51e0\u5708\uff0c\u7136\u540e\u53d6\u6a21\u5c31\u884c\u4e86\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long \nll n,t;\nll a[200020];\nll sum;\nint main()\n{\n    cin>>n>>t;\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%lld\",&a[i]);\n        sum+=a[i];\n    }\n    ll ans=0;\n    ll pp=t/sum;\n    ans+=pp*n;\n    t=t-pp*sum;\n    int flag=0;\n    int i=1;\n    int now=n;\n    while(1)\n    {\n        if(i==1)\n        {\n            flag=0;\n        }\n        if(a[i]<=t)\n        {\n            t-=a[i];\n            flag=1;\n            ans++;\n        }\n        else\n        {\n            sum-=a[i];\n            if(!sum)\n            {\n                break;\n            }\n            now--;\n            ll qaq=t/sum;\n            ans+=now*qaq;\n            t=t-qaq*sum;\n        }\n        if(i==n&&!flag)\n        {\n            break;\n        }\n        else if(i==n)\n        {\n            i=1;\n            continue;\n        }\n        i++;\n    }\n    cout<<ans;\n}\n```",
        "postTime": 1540563753,
        "uid": 48265,
        "name": "decoqwq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1073D \u3010Berland Fair\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a$Polycarp$\u6709$T$\u5143\u94b1\uff0c\u6709$n$\u4e2a\u5546\u94fa\uff0c\u6bcf\u5bb6\u5546\u94fa\u51fa\u552e\u76f8\u540c\u7684\u7cd6\u679c\uff0c\u4ef7\u683c\u4e3a$a[i]$\u5143\uff0c$Polycarp$\u73b0\u5728\u6309$1,2,...n,1,2..$\u7684\u987a\u5e8f\u8bbf\u95ee\u6bcf\u5bb6\u5546\u94fa\uff0c\u5982\u679c\u4ed6\u624b\u4e0a\u7684\u94b1$>=a[i]$\uff0c\u4ed6\u5c31\u8d2d\u4e70\u4e00\u4e2a\u7cd6\u679c\uff0c\u5e76\u524d\u5f80\u4e0b\u4e00\u5bb6\u5e97\uff08\u4e70\u4e0d\u8d77\u5c31\u76f4\u63a5\u524d\u5f80\u4e0b\u4e00\u5bb6\u5e97\uff09\u3002\u95ee\u4ed6\u4e00\u5171\u80fd\u4e70\u5230\u591a\u5c11\u4e2a\u7cd6\u679c\uff1f\n\u9898\u76ee\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u7684\uff0c\u4f5c\u4e3a$D$\u9898\u6765\u8bf4\u5f88\u6c34\uff0c\u8003\u8651\u5230\u5982\u679c\u4ed6\u8fd9\u4e00\u6b21\u8bbf\u95ee\u7b2c$i$\u5bb6\u65f6\u4e70\u4e0d\u8d77\uff0c\u90a3\u4ed6\u4ee5\u540e\u5c31\u90fd\u4e70\u4e0d\u8d77\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u94fe\u8868\u7ef4\u62a4\u8fd9$n$\u5bb6\u5546\u94fa\uff0c\u5f53\u4ed6\u624b\u4e0a\u7684\u94b1\u4e0d\u591f\u65f6\uff0c\u5c31\u628a\u8fd9\u5bb6\u5e97\u4ece\u94fe\u8868\u91cc\u5220\u9664\u3002\u5177\u4f53\u7ec6\u8282\u770b\u4ee3\u7801\uff1a  \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=200005;\ntypedef long long ll;\nint n;ll T;\nll a[N];int nxt[N],la[N];\nint main()\n{\n    scanf(\"%d%I64d\",&n,&T);\n    ll sum=0,mn=2147483647;\n    for(int i=1;i<=n;i++) scanf(\"%I64d\",&a[i]),sum+=a[i],nxt[i]=i+1,la[i]=i-1,mn=min(mn,a[i]);\n    ll ans=0,num=n;int st=1;\n    while(T>=mn) \n    {\n        ans+=(T/sum)*num;T%=sum; //\u5f53T\u8db3\u591f\u5927\u65f6\u6bcf\u5bb6\u5e97\u90fd\u53ef\u4ee5\u4e70\uff0c\u51cf\u5c0f\u679a\u4e3e\u91cf\n        if(T<mn) break;\n        for(int i=st,flag=0;i!=n+1;i=nxt[i])\n            if(T>=a[i]){\n                T-=a[i];ans++;if(T<mn) break;\n                if(!flag) st=i,flag=1;\n            }\n            else nxt[la[i]]=nxt[i],la[nxt[i]]=la[i],sum-=a[i],num--;\n    }\n    printf(\"%I64d\",ans);\n    return 0;\n}\n```",
        "postTime": 1540542876,
        "uid": 27030,
        "name": "ustze",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1073D \u3010Berland Fair\u3011"
    }
]