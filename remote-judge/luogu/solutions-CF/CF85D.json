[
    {
        "content": ">### [\u6d1b\u8c37\u9898\u76ee\u9875\u9762\u4f20\u9001\u95e8](https://www.luogu.org/problem/CF85D) & [CodeForces\u9898\u76ee\u9875\u9762\u4f20\u9001\u95e8](https://codeforces.com/contest/85/problem/D)\n\n>\u6709\u4e00\u4e2a\u96c6\u5408$s$\uff0c\u4f60\u9700\u8981\u652f\u6301\u4ee5\u4e0b$3$\u79cd$q$\u6b21\u64cd\u4f5c\uff1a\n>1. $\\texttt{add}\\ x$\uff1a\u4ee4$s=s\\cup\\{x\\}$\uff0c\u4fdd\u8bc1\u5728\u6267\u884c\u4e4b\u524d$x\\notin s$\uff0c$x\\in\\left[1,10^9\\right]$\uff1b\n>2. $\\texttt{del}\\ x$\uff1a\u4ee4$s=s-\\{x\\}$\uff0c\u4fdd\u8bc1\u5728\u6267\u884c\u4e4b\u524d$x\\in s$\uff0c$x\\in\\left[1,10^9\\right]$\uff1b\n>3. $\\texttt{sum}$\uff1a\u8bbe\u5c06$s$\u4e2d\u6240\u6709\u5143\u7d20\u6392\u5e8f\u540e\u5f97\u52301-indexed\u5e8f\u5217$a$\uff0c\u67e5\u8be2$\\sum\\limits_{i\\in[1,|a|],i\\bmod5=3}a_i$\u3002\n\n>$q\\in\\left[1,10^5\\right]$\u3002\n\n\u8fd9\u5176\u5b9e\u662f\u4e00\u4e2a\u6bd4\u8f83\u7b80\u5355\u7684DS\u9898\uff0c\u6bd5\u7adf\u96be\u5ea6\u53ea\u6709$^*2200$\u3002\u53ea\u4e0d\u8fc7\u8fd9\u9898\u6bd4\u8f83nb\uff0c\u4e00\u9898\u56db\u89e3\u3002\n\n### \u89e3\u6cd5$1$\uff1a\u79bb\u6563\u5316+\u7ebf\u6bb5\u6811\n\n\u8003\u8651\u5efa\u4e00\u68f5\u503c\u57df\u7ebf\u6bb5\u6811\uff0c\u8bbe\u8282\u70b9$i$\u8868\u793a\u533a\u95f4$[l_i,r_i]$\uff0c\u90a3\u4e48\u8282\u70b9$i$\u5b58\u50a8$[l_i,r_i]$\u5185$\\in s$\u7684\u6570\u7684\u6570\u91cf$cnt_i$\uff0c\u548c$\\forall j\\in[0,5)$\uff0c\u533a\u95f4$[l_i,r_i]$\u5185\u6240\u6709$\\in s$\u7684\u5143\u7d20\u6392\u5e8f\u540e\u6240\u6709\u4e0b\u6807$\\bmod5=j$\u7684\u6570\u7684\u548c$sum_{i,j}$\u3002\u90a3\u4e48\u4e0a\u4f20\u65f6\u4ee4$cnt_i=cnt_{lson_i}+cnt_{rson_i},sum_{i,j}=sum_{lson_i,j}+sum_{rson_i,\\left(j-cnt_{lson_i}\\right)\\bmod5}$\u5373\u53ef\u3002\u4e00\u6b21\u4e0a\u4f20\u65f6\u95f4\u590d\u6742\u5ea6$\\mathrm O(1)$\u3002\n\n\u7531\u4e8e\u503c\u57df\u5927\u5c0f\u4e3a$10^9$\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6240\u6709\u64cd\u4f5c\u79bb\u7ebf\u4e0b\u6765\u5e76\u79bb\u6563\u5316\u6240\u6709\u6570\u503c\u3002\n\n\u6b64\u65f6$\\texttt{add},\\texttt{del}$\u64cd\u4f5c\u90fd\u662f\u7b80\u5355\u7684\u5355\u70b9\u4fee\u6539\uff0c$\\mathrm O(\\log q)$\uff1b$\\texttt{sum}$\u64cd\u4f5c\u662f\u6574\u4f53\u67e5\u8be2\uff0c\u76f4\u63a5\u8c03\u7528$sum_{root,3}$\u5373\u53ef\uff0c$\\mathrm O(1)$\u3002\n\n\u603b\u7a7a\u95f4\u590d\u6742\u5ea6$\\mathrm O(q)$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$\\mathrm O(q\\log q)$\u3002\n\n\u4e0b\u9762\u662fAC\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define pb push_back\nconst int QU=100000;\nint qu;//\u64cd\u4f5c\u6570 \nstruct query{int tp,x;}qry[QU+1];//\u64cd\u4f5c \nvector<int> nums;//\u79bb\u6563\u5316\u6570\u7ec4 \nvoid discrete(){//\u79bb\u6563\u5316 \n\tsort(nums.begin(),nums.end());\n\tnums.resize(unique(nums.begin(),nums.end())-nums.begin());\n\tfor(int i=1;i<=qu;i++)if(qry[i].tp!=2)qry[i].x=lower_bound(nums.begin(),nums.end(),qry[i].x)-nums.begin();\n}\nstruct segtree{//\u7ebf\u6bb5\u6811 \n\tstruct node{int l,r,sum[5],cnt;}nd[QU<<2];\n\t#define l(p) nd[p].l\n\t#define r(p) nd[p].r\n\t#define sum(p) nd[p].sum\n\t#define cnt(p) nd[p].cnt\n\tvoid bld(int l=0,int r=(int)(nums.size())-1,int p=1){//\u5efa\u6811 \n\t\tif(l>r)return;\n\t\tl(p)=l;r(p)=r;sum(p)[0]=sum(p)[1]=sum(p)[2]=sum(p)[3]=sum(p)[4]=cnt(p)=0;\n\t\tif(l==r)return;\n\t\tint mid=l+r>>1;\n\t\tbld(l,mid,p<<1);bld(mid+1,r,p<<1|1);\n\t} \n\tvoid init(){bld();}//\u7ebf\u6bb5\u6811\u521d\u59cb\u5316 \n\tvoid sprup(int p){//\u4e0a\u4f20 \n\t\tcnt(p)=cnt(p<<1)+cnt(p<<1|1);\n\t\tfor(int i=0;i<5;i++)sum(p)[i]=sum(p<<1)[i]+sum(p<<1|1)[(((i-cnt(p<<1))%5)+5)%5];\n\t}\n\tvoid add(int x,int p=1){//add\u64cd\u4f5c \n\t\tif(l(p)==r(p))return sum(p)[1]=nums[x],cnt(p)=1/*\u6b64\u6570in s*/,void();\n\t\tint mid=l(p)+r(p)>>1;\n\t\tadd(x,p<<1|(x>mid));\n\t\tsprup(p);\n\t}\n\tvoid del(int x,int p=1){//del\u64cd\u4f5c \n\t\tif(l(p)==r(p))return sum(p)[1]=cnt(p)=0/*\u6b64\u6570notin s*/,void();\n\t\tint mid=l(p)+r(p)>>1;\n\t\tdel(x,p<<1|(x>mid));\n\t\tsprup(p);\n\t}\n\tint _sum()/*sum\u64cd\u4f5c*/{return nums.size()?sum(1)[3]:0;} \n}segt;\nsigned main(){\n\tcin>>qu;\n\tfor(int i=1;i<=qu;i++){//\u79bb\u7ebf \n\t\tstring tp;\n\t\tcin>>tp;\n\t\tif(tp==\"add\")qry[i].tp=0,cin>>qry[i].x,nums.pb(qry[i].x);\n\t\telse if(tp==\"del\")qry[i].tp=1,cin>>qry[i].x,nums.pb(qry[i].x);\n\t\telse qry[i].tp=2;\n\t}\n\tdiscrete();//\u79bb\u6563\u5316 \n\tsegt.init();//\u7ebf\u6bb5\u6811\u521d\u59cb\u5316 \n\tfor(int i=1;i<=qu;i++){ \n\t\tint tp=qry[i].tp,x=qry[i].x;\n\t\tif(tp==0)segt.add(x);\n\t\telse if(tp==1)segt.del(x);\n\t\telse cout<<segt._sum()<<\"\\n\";\n\t}\n\treturn 0;\n}\n```\n\n### \u89e3\u6cd5$2$\uff1a\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\n\n\u7ebf\u6bb5\u6811\u90e8\u5206\u7684\u601d\u8def\u4e0e\u89e3\u6cd5$1$\u5b8c\u5168\u4e00\u6837\uff0c\u4e0d\u8fc7\u6b64\u65b9\u6cd5\u5229\u7528\u52a8\u6001\u5f00\u70b9\u6765\u5904\u7406\u503c\u57df\u8fc7\u5927\u95ee\u9898\uff0c\u5b9e\u73b0\u4e86\u5728\u7ebf\u6267\u884c\u64cd\u4f5c\u3002\n\n\u603b\u7a7a\u95f4\u590d\u6742\u5ea6$\\mathrm O(q\\log q)$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$\\mathrm O(q\\log q)$\u3002\n\n\u4e0b\u9762\u662fAC\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nconst int QU=100000,A_I=1000000000,LOG_A_I=30;\nint qu;//\u64cd\u4f5c\u6570 \nstruct segtree{//\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811 \n\tint sz;//\u70b9\u6570 \n\tstruct node{int l,r,lson,rson,sum[5],cnt;}nd[QU*LOG_A_I+1];\n\t#define l(p) nd[p].l\n\t#define r(p) nd[p].r\n\t#define lson(p) nd[p].lson\n\t#define rson(p) nd[p].rson\n\t#define sum(p) nd[p].sum\n\t#define cnt(p) nd[p].cnt\n\tint nwnd(int l=1,int r=A_I){return nd[++sz]=node({l,r,0,0,{0,0,0,0,0},0}),sz;}//\u65b0\u5efa\u8282\u70b9 \n\tvoid init(){nd[0]=node({0,0,0,0,{0,0,0,0,0},0});sz=0;nwnd();}//\u7ebf\u6bb5\u6811\u521d\u59cb\u5316 \n\tvoid sprup(int p){//\u4e0a\u4f20 \n\t\tcnt(p)=cnt(lson(p))+cnt(rson(p));\n\t\tfor(int i=0;i<5;i++)sum(p)[i]=sum(lson(p))[i]+sum(rson(p))[(((i-cnt(lson(p)))%5)+5)%5];\n\t}\n\tvoid add(int x,int p=1){//add\u64cd\u4f5c \n\t\tif(l(p)==r(p))return sum(p)[1]=x,cnt(p)=1/*\u6b64\u6570in s*/,void();\n\t\tint mid=l(p)+r(p)>>1;\n\t\tif(x<=mid)add(x,lson(p)=lson(p)?lson(p):nwnd(l(p),mid));\n\t\telse add(x,rson(p)=rson(p)?rson(p):nwnd(mid+1,r(p)));\n\t\tsprup(p);\n\t}\n\tvoid del(int x,int p=1){//del\u64cd\u4f5c \n\t\tif(l(p)==r(p))return sum(p)[1]=cnt(p)=0/*\u6b64\u6570notin s*/,void();\n\t\tint mid=l(p)+r(p)>>1;\n\t\tif(x<=mid)del(x,lson(p)=lson(p)?lson(p):nwnd(l(p),mid));\n\t\telse del(x,rson(p)=rson(p)?rson(p):nwnd(mid+1,r(p)));\n\t\tsprup(p);\n\t}\n\tint _sum()/*sum\u64cd\u4f5c*/{return sum(1)[3];} \n}segt;\nsigned main(){\n\tcin>>qu;\n\tsegt.init();//\u7ebf\u6bb5\u6811\u521d\u59cb\u5316 \n\twhile(qu--){\n\t\tstring tp;int x;\n\t\tcin>>tp;\n\t\tif(tp==\"add\")cin>>x,segt.add(x);\n\t\telse if(tp==\"del\")cin>>x,segt.del(x);\n\t\telse cout<<segt._sum()<<\"\\n\";\n\t}\n\treturn 0;\n}\n```\n\n### \u89e3\u6cd5$3$\uff1a\u5206\u5757\n\n~~\u5206\u5757\u662f\u65e0\u6240\u4e0d\u80fd\u7684~~\n\n\u5176\u5b9e\u4e0a\u9762\u90a3\u53e5\u8bdd\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u662f\u6b63\u786e\u7684\n\n\u8003\u8651\u5bf9$s$\u4e2d\u6240\u6709\u5143\u7d20\u6392\u5e8f\u540e\u5f97\u5230\u76841-indexed\u5e8f\u5217$a$\u5206\u5757\u3002\u7531\u4e8e\u6709\u63d2\u5165\u3001\u5220\u9664\u64cd\u4f5c\uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u4e2a\u52a8\u6001\u8c03\u6574\u5757\u5185\u5143\u7d20\u7684\u5206\u5757\u3002\n\n\u8003\u8651\u7ef4\u62a4`set`$s$\u3002\u5757$i$\u5185\u5b58$a$\u7684\u67d0\u4e00\u4e2a\u5b50\u6bb5$a'_i$\uff0c\u548c$\\forall j\\in[0,5)$\uff0c\u8be51-indexed\u5b50\u6bb5$a'_i$\u5185\u6240\u6709\u4e0b\u6807$\\bmod5=j$\u7684\u6570\u7684\u548c$sum_{i,j}$\u3002\n\n\u626b\u63cf\uff1a\u8c03\u6574\u6240\u6709\u5757\u5185\u5143\u7d20\u4f7f\u5f97\u6bcf\u5757\u5185\u5143\u7d20\u6570\u91cf\u4e0d\u8d85\u8fc7$sz1$\u3002\u4ece\u5de6\u5f80\u53f3\u4f9d\u6b21\u626b\u63cf\u6bcf\u4e2a\u5757$i$\uff0c\u5982\u679c$|a'_i|>sz1$\uff08\u6b64\u65f6\u5fc5\u7136\u6709$|a'_i|=sz1+1$\uff0c\u56e0\u4e3a\u6bcf\u6b21$\\texttt{add}$\u64cd\u4f5c\u4e4b\u540e\u90fd\u8fdb\u884c\u626b\u63cf\uff09\uff0c\u90a3\u4e48\u5c06$a'_{i,|a'_i|}$\u653e\u5230$a'_{i+1}$\u7684\u524d\u9762\uff0c\u5e76$\\mathrm O(1)$\u91cd\u7b97$sum_i,sum_{i+1}$\u3002\u7531\u4e8e\u8981\u5728\u4e24\u7aef\u64cd\u4f5c\uff0c\u6240\u4ee5$a'_i$\u5e94\u8be5\u5b9a\u4e49\u4e3a`deque<int>`\u3002\u65f6\u95f4\u590d\u6742\u5ea6$\\mathrm O\\!\\left(\\dfrac q{sz1}\\right)$\u3002\n\n\u5bf9\u4e8e$\\texttt{add}$\u64cd\u4f5c\uff1a\u901a\u8fc7$s$\u4e8c\u5206\u627e\u5230\u8ddd\u79bb$x$\u6700\u8fd1\u7684$\\in s$\u7684\u5143\u7d20$x'$\uff0c\u627e\u5230$x'$\u6240\u5728\u5757\u5e76\u5c06$x$\u63d2\u5165\u8be5\u5757\u4e14\u7ef4\u62a4\u6709\u5e8f\u6027\u3002\u66b4\u529b\u91cd\u7b97\u8be5\u5757\u5185\u7684$sum$\u3002\u66f4\u65b0$s$\u3002\u626b\u63cf\u4e00\u904d\u3002\u65f6\u95f4\u590d\u6742\u5ea6$\\mathrm O\\!\\left(\\log q+sz1+\\dfrac q{sz1}\\right)$\u3002\n\n\u5bf9\u4e8e$\\texttt{del}$\u64cd\u4f5c\uff1a\u627e\u5230$x$\u6240\u5728\u5757\u5e76\u5c06$x$\u5220\u9664\u3002\u66b4\u529b\u91cd\u7b97\u8be5\u5757\u5185\u7684$sum$\u3002\u66f4\u65b0$s$\u3002\u626b\u63cf\u4e00\u904d\u3002\u65f6\u95f4\u590d\u6742\u5ea6$\\mathrm O\\!\\left(sz1+\\dfrac q{sz1}\\right)$\u3002\n\n\u5bf9\u4e8e$\\texttt{sum}$\u64cd\u4f5c\uff1a\u4ece\u5de6\u5f80\u53f3\u8ba9\u6bcf\u4e2a\u5757\u8d21\u732e\u7b54\u6848\u5373\u53ef\uff0c\u8fd9\u6837\u662f$\\mathrm O\\!\\left(\\dfrac q{sz1}\\right)$\u7684\u3002\u7136\u9e45\u5176\u5b9e\u53ef\u4ee5\u4f18\u5316\u5230$\\mathrm O(1)$\uff0c\u5c31\u662f\u6bcf\u6b21\u626b\u63cf\u65f6\u987a\u4fbf\u7b97\u51fa\u7b54\u6848\u5e76\u8bb0\u5f55\u4e0b\u6765\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u3002\n\n\u4ee4$sz1=\\left\\lfloor \\sqrt q\\right\\rfloor$\uff0c\u8fd9\u6837\u603b\u65f6\u95f4\u590d\u6742\u5ea6$\\mathrm O(q\\sqrt q)$\u3002\u7a7a\u95f4\u590d\u6742\u5ea6$\\mathrm O(q)$\u3002\n\n\u7136\u540e\u5f00\u5f00\u68ee\u68ee\u7684\u4ea4\u4e0a\u53bb\uff0cT\u4e86\uff1f\u662f\u56e0\u4e3a\u8fd9\u5de8\u5927\u7684\u590d\u6742\u5ea6\u4e58\u4e0a\u5de8\u5927\u7684\u5e38\u6570\u3002\u4e8e\u662f\u5f00\u59cb\u5361\u5e38\u3002\n\n\u5148\u5c06$\\texttt{add},\\texttt{del}$\u5185\u7684\u201c\u66b4\u529b\u91cd\u7b97\u8be5\u5757\u5185\u7684$sum$\u201d\u7528\u6307\u9488\u5bfb\u5740\u4f18\u5316\u4e00\u4e0b\uff08\u56e0\u4e3a`deque`\u7684\u968f\u673a\u8bbf\u95ee\u5f88\u6162\uff09\u3002\u6b64\u65f6$\\texttt{add},\\texttt{del}$\u524d\u9762\u4e00\u90e8\u5206\u7684\u5e38\u6570\u4e0e\u6700\u540e\u7684\u626b\u63cf\u7684\u5e38\u6570\u5f62\u6210\u4e86\u9c9c\u660e\u7684\u5bf9\u6bd4\uff0c\u56e0\u4e3a\u626b\u63cf\u8fd8\u5e26\u4e00\u4e2a$5$\u7684\u5e38\u6570\u3002\u4e8e\u662f\u8c03\u53c2\u8981\u4ece\u5a03\u5a03\u6293\u8d77\uff0c\u6211\u4eec\u5c06$sz1$\u7a0d\u5fae\u8c03\u5927\u4e00\u70b9\uff0c\u6765\u5b9e\u73b0\u5e38\u6570\u4e0a\u7684\u5c3d\u91cf\u5e73\u8861\u3002\u4ee4$sz1=3\\left\\lfloor \\sqrt q\\right\\rfloor$\u5373\u53efAC\u3002\n\n\u4e0b\u9762\u662fAC\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define pf push_front\n#define ppb pop_back\n#define pb push_back\nconst int QU=100000,DB_SZ=500;\nint qu;\nstruct dvdblk{//\u5206\u5757 \n\tint sz1,ans/*\u4efb\u610f\u65f6\u523b\u7684\u7b54\u6848*/;\n\tstruct block{\n\t\tdeque<int> a;int sum[5];\n\t\tblock(){sum[0]=sum[1]=sum[2]=sum[3]=sum[4]=0;}\n\t}blk[DB_SZ];\n\t#define a(p) blk[p].a\n\t#define sum(p) blk[p].sum\n\tset<int> all;\n\tvoid init(){ans=0;sz1=3*sqrt(qu);}//\u5206\u5757\u521d\u59cb\u5316 \n\tvoid scn(){//\u626b\u63cf \n\t\tint now=0;\n\t\tans=0;\n\t\tfor(int i=1;i<=(qu+sz1-1)/sz1;i++){\n\t\t\tif(a(i).size()>sz1){\n\t\t\t\ta(i+1).pf(a(i).back());//\u5c06\u6b64\u5757\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u653e\u5230\u540e\u9762\u4e00\u5757 \n\t\t\t\tint tmp[]={sum(i+1)[0],sum(i+1)[1],sum(i+1)[2],sum(i+1)[3],sum(i+1)[4]};\n\t\t\t\tfor(int j=0;j<5;j++)sum(i+1)[j]=tmp[(j-1+5)%5];\n\t\t\t\tsum(i+1)[1]+=a(i+1)[0];//O(1)\u8c03\u6574sum[i+1] \n\t\t\t\tsum(i)[a(i).size()%5]-=a(i).back();//O(1)\u8c03\u6574sum[i] \n\t\t\t\ta(i).ppb();//\u5c06\u6b64\u5757\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u653e\u5230\u540e\u9762\u4e00\u5757  \n\t\t\t}\n\t\t\tans+=sum(i)[((3-now)%5+5)%5];//\u8ba1\u7b97\u5f53\u524d\u7684\u7b54\u6848 \n\t\t\tnow+=a(i).size();\n\t\t}\n\t}\n\tvoid add(int x){//add\u64cd\u4f5c \n\t\tif(all.empty())a(1).pb(x),sum(1)[1]=x;//\u7279\u5224s\u4e3a\u7a7a\u7684\u60c5\u51b5 \n\t\telse{\n\t\t\tset<int>::iterator fd=all.lower_bound(x);\n\t\t\tif(fd==all.end())fd--;\n\t\t\tint p;\n\t\t\tfor(int i=1;;i++)if(a(i)[0]<=*fd&&*fd<=a(i).back()){p=i;break;}//\u627e\u5230\u5373\u5c06\u63d2\u5165\u7684\u5757 \n\t\t\ta(p).insert(lower_bound(a(p).begin(),a(p).end(),x),x);//\u63d2\u5165 \n\t\t\tsum(p)[0]=sum(p)[1]=sum(p)[2]=sum(p)[3]=sum(p)[4]=0;\n\t\t\tint now=1;\n\t\t\tdeque<int>::iterator end=a(p).end();\n\t\t\tfor(deque<int>::iterator i=a(p).begin();i!=end;++i,++now,now==5&&(now=0))sum(p)[now]+=*i;//\u66b4\u529b\u91cd\u7b97sum[p]\uff08\u5bfb\u5740\u4f18\u5316\u540e\uff09 \n\t\t}\n\t\tall.insert(x);//\u7ef4\u62a4s \n\t\tscn();//\u626b\u63cf \n\t}\n\tvoid del(int x){//del\u64cd\u4f5c \n\t\tint p;\n\t\tfor(int i=1;;i++)if(a(i)[0]<=x&&x<=a(i).back()){p=i;break;}//\u627e\u5230\u5373\u5c06\u63d2\u5165\u7684\u5757 \n\t\ta(p).erase(lower_bound(a(p).begin(),a(p).end(),x));//\u5220\u9664 \n\t\tsum(p)[0]=sum(p)[1]=sum(p)[2]=sum(p)[3]=sum(p)[4]=0;\n\t\tint now=1;\n\t\tdeque<int>::iterator end=a(p).end();\n\t\tfor(deque<int>::iterator i=a(p).begin();i!=end;++i,++now,now==5&&(now=0))sum(p)[now]+=*i;//\u66b4\u529b\u91cd\u7b97sum[p]\uff08\u5bfb\u5740\u4f18\u5316\u540e\uff09 \n\t\tall.erase(x);//\u7ef4\u62a4s \n\t\tscn();//\u626b\u63cf \n\t}\n\tint _sum()/*sum\u64cd\u4f5c*/{return ans;}\n}db;\nsigned main(){\n\tcin>>qu;\n\tdb.init();//\u5206\u5757\u521d\u59cb\u5316 \n\tfor(int i=1;i<=qu;i++){ \n\t\tstring tp;int x;\n\t\tcin>>tp;\n\t\tif(tp==\"add\")cin>>x,db.add(x);\n\t\telse if(tp==\"del\")cin>>x,db.del(x);\n\t\telse cout<<db._sum()<<\"\\n\";\n\t}\n\treturn 0;\n}\n```\n\n### \u89e3\u6cd5$4$\uff1a\u5e73\u8861\u6811\n\n\u770b\u5230\u5f80\u96c6\u5408\u91cc\u6dfb\u52a0\u3001\u5220\u9664\uff0c\u4e0d\u96be\u60f3\u5230\u5e73\u8861\u6811\u3002\u8fd9\u91cc\u4f7f\u7528fhq-Treap\u3002\n\n\u8282\u70b9$i$\u5b58\u50a8\u6b64\u8282\u70b9\u7684\u6743\u503c$v_i$\uff0c\u4ee5$i$\u4e3a\u6839\u7684\u5b50\u6811\u7684\u5927\u5c0f$sz_i$\uff0c\u548c$\\forall j\\in[0,5)$\uff0c\u4ee5$i$\u4e3a\u6839\u7684\u5b50\u6811\u5185\u6240\u6709\u5143\u7d20\u6392\u5e8f\u540e\u6240\u6709\u4e0b\u6807$\\bmod5=j$\u7684\u6570\u7684\u548c$sum_{i,j}$\u3002\u90a3\u4e48\u4e0a\u4f20\u65f6\u4ee4$sz_i=sz_{lson_i}+1+sz_{rson_i},sum_{i,j}=sum_{lson_i,j}+[j=sz_{lson_i}+1]v_i+sum_{rson_i,\\left(j-cnt_{lson_i}-1\\right)\\bmod5}$\u5373\u53ef\u3002\u4e00\u6b21\u4e0a\u4f20\u65f6\u95f4\u590d\u6742\u5ea6$\\mathrm O(1)$\u3002\n\n\u6b64\u65f6$\\texttt{add},\\texttt{del}$\u64cd\u4f5c\u90fd\u662f\u7b80\u5355\u7684\u5355\u70b9\u63d2\u5165/\u5220\u9664\uff0c$\\mathrm O(\\log q)$\uff1b$\\texttt{sum}$\u64cd\u4f5c\u662f\u6574\u4f53\u67e5\u8be2\uff0c\u76f4\u63a5\u8c03\u7528$sum_{root,3}$\u5373\u53ef\uff0c$\\mathrm O(1)$\u3002\n\n\u603b\u7a7a\u95f4\u590d\u6742\u5ea6$\\mathrm O(q)$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$\\mathrm O(q\\log q)$\u3002\n\n\u4e0b\u9762\u662fAC\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define pb push_back\n#define mp make_pair\n#define X first\n#define Y second\nmt19937 rng(20060617/*\u4fe1\u4ef0\u4f18\u5316*/);\nconst int QU=100000;\nint qu;//\u64cd\u4f5c\u6570\nstruct fhq_treap{//fhq-Treap \n\tint sz/*\u70b9\u6570*/,root/*\u6839*/;\n\tstruct node{unsigned key;int lson,rson,sz,v,sum[5];}nd[QU+1];\n\t#define key(p) nd[p].key\n\t#define lson(p) nd[p].lson\n\t#define rson(p) nd[p].rson\n\t#define sz(p) nd[p].sz\n\t#define v(p) nd[p].v\n\t#define sum(p) nd[p].sum\n\tvoid init(){nd[sz=root=0]=node({0,0,0,0,0,{0,0,0,0,0}});}//fhq-Treap\u521d\u59cb\u5316 \n\tvoid sprup(int p){//\u4e0a\u4f20 \n\t\tsz(p)=sz(lson(p))+1+sz(rson(p));\n\t\tfor(int i=0;i<5;i++)sum(p)[i]=sum(lson(p))[i]+sum(rson(p))[(((i-sz(lson(p))-1)%5)+5)%5];\n\t\tsum(p)[(sz(lson(p))+1)%5]+=v(p);\n\t}\n\tpair<int,int> split(int x,int p=-1){~p||(p=root); \n\t\tif(!x)return mp(0,p);\n\t\tpair<int,int> sp;\n\t\tif(x<=sz(lson(p)))return sp=split(x,lson(p)),lson(p)=sp.Y,sprup(p),mp(sp.X,p);\n\t\treturn sp=split(x-sz(lson(p))-1,rson(p)),rson(p)=sp.X,sprup(p),mp(p,sp.Y);\n\t}\n\tint mrg(int p,int q){\n\t\tif(!p||!q)return p|q;\n\t\tif(key(p)<key(q))return rson(p)=mrg(rson(p),q),sprup(p),p;\n\t\treturn lson(q)=mrg(p,lson(q)),sprup(q),q;\n\t}\n\tint lss(int v,int p=-1/*\u6bd4v\u5c0f\u7684\u6570\u7684\u4e2a\u6570*/){~p||(p=root); \n\t\tif(!p)return 0;\n\t\tif(v(p)<v)return sz(lson(p))+1+lss(v,rson(p));\n\t\treturn lss(v,lson(p));\n\t}\n\tint nwnd(int v){return nd[++sz]=node({rng(),0,0,1,v,{0,v,0,0,0}}),sz;}//\u65b0\u5efa\u8282\u70b9 \n\tvoid add(int v){//add\u64cd\u4f5c \n\t\tpair<int,int> sp=split(lss(v));\n\t\troot=mrg(mrg(sp.X,nwnd(v)),sp.Y);\n\t}\n\tvoid del(int v){//del\u64cd\u4f5c \n\t\tpair<int,int> sp=split(lss(v)),sp0=split(1,sp.Y);\n\t\troot=mrg(sp.X,sp0.Y);\n\t}\n\tint _sum()/*sum\u64cd\u4f5c*/{return sum(root)[3];}\n}trp;\nsigned main(){\n\tcin>>qu;\n\ttrp.init();//fhq-Treap\u521d\u59cb\u5316 \n\twhile(qu--){\n\t\tstring tp;int x;\n\t\tcin>>tp;\n\t\tif(tp==\"add\")cin>>x,trp.add(x);\n\t\telse if(tp==\"del\")cin>>x,trp.del(x);\n\t\telse cout<<trp._sum()<<\"\\n\";\n\t}\n\treturn 0;\n}\n```\n\n### $4$\u79cd\u89e3\u6cd5\u7684\u6bd4\u8f83\n\n||\u79bb\u6563\u5316+\u7ebf\u6bb5\u6811|\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811|\u5206\u5757|\u5e73\u8861\u6811|\n|:-:|:-:|:-:|:-:|:-:|\n|**\u64cd\u4f5c\u76f8\u5e94\u65f6\u95f4**|\u79bb\u7ebf|\u5728\u7ebf|\u5728\u7ebf|\u5728\u7ebf|\n|**\u65f6\u95f4\u590d\u6742\u5ea6**|$\\mathrm O(q\\log q)$|$\\mathrm O(q\\log q)$|$\\mathrm O(q\\sqrt q)$|$\\mathrm O(q\\log q)$\n|**\u7a7a\u95f4\u590d\u6742\u5ea6**|$\\mathrm O(q)$|$\\mathrm O(q\\log q)$|$\\mathrm O(q)$|$\\mathrm O(q)$\n|**\u6700\u6162\u7684\u70b9\u8fd0\u884c\u65f6\u957f**|$996\\mathrm{ms}$|$1340\\mathrm{ms}$|$2494\\mathrm{ms}$|$1746\\mathrm{ms}$|\n\n\u770b\u8d77\u6765\u5e73\u8861\u6811\u5168\u65b9\u4f4d\u540a\u6253\u5176\u4ed6\u6240\u6709\u89e3\u6cd5\uff0c\u4f46\u662f\u5b83\u7684\u5e38\u6570\u8fd8\u662f\u6bd4\u4e0d\u8fc7\u7ebf\u6bb5\u6811\u3002",
        "postTime": 1587185938,
        "uid": 138400,
        "name": "chenxia25",
        "ccfLevel": 9,
        "title": "CodeForces 85D - Sum of Medians"
    },
    {
        "content": "### \u67d0\u4e01\u59d3\u5927\u4f6c\u5728\u4e00\u4e2a\u6c34\u73ed\u4e2d\u63d0\u5230\u4e86\u8fd9\u4e00\u9898\u82b1\u4e86\u4e00\u4e2a\u5c0f\u65f6\u7ec8\u4e8e\u8270\u96be\u5730\u7528\u7ebf\u6bb5\u6811a\u4e86qwq\n### ~~\u7136\u800c\u5199\u8fd9\u7bc7\u72d7\u5c41\u4e0d\u901a\u7684\u9898\u89e3\u53c8\u82b1\u4e86\u4e00\u4e2a\u5c0f\u65f6~~\n### \u8fd9\u9053\u9898\u5e94\u8be5\u4e00\u770b\u5c31\u662f\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7684 \u95ee\u9898\u662f\u600e\u4e48\u7ef4\u62a4\u6bcf\u4e2a\u6570\u7684\u4e0b\u6807mod5\u7684\u503c\n### \u90a3\u4e48\u5148\u6765\u601d\u8003\u4e00\u4e0b\u63d2\u5165\u4e00\u4e2a\u6570\u7684\u65f6\u5019\u5176\u4ed6\u6570\u7684\u4e0b\u6807\u7684\u53d8\u5316\u3002\u6211\u4eec\u4f1a\u60ca\uff08xian\uff09\u5947\uff08ran\uff09\u5730\u53d1\u73b0\u53ea\u6709\u6bd4\u8fd9\u4e2a\u6570\u5927\u7684\u6570\u4e0b\u6807\u624d\u4f1a\u52a0\u4e00\uff0c\u6bd4\u8fd9\u4e2a\u6570\u5c0f\u7684\u6570\u7684\u4e0b\u6807\u662f\u4e0d\u4f1a\u53d1\u751f\u53d8\u5316\u7684~\u518d\u6df1\u5165\u601d\u8003\u4e00\u4e0b\uff0c\u5f53\u4e00\u4e2a\u6570\u7684\u5750\u6807\u53f3\u79fb5\u4f4d\u65f6\u4e0e\u6ca1\u6709\u79fb\u4e00\u6837\uff01\uff01\uff01\uff08MOD5\u7684\u503c\u4e00\u6837\u561bqwq\uff09\n### \u53c8\u56e0\u4e3a\u9898\u76ee\u4e2d\u8bf4\u6bcf\u4e2a\u6570\u52a0\u5165\u96c6\u5408\u65f6\u96c6\u5408\u6ca1\u6709\u76f8\u540c\u7684\u6570QAQ\n## \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u4ee5\u4e94\u4e2a\u5355\u5143\u4e3a\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u7ebf\u6bb5\u6811\u7ef4\u62a4\u8fd9\u4e9b\u6570\u7684\u4e0b\u6807MOD5\u7684\u4f4d\u7f6e\uff01\n### \u90a3\u4e94\u4e2a\u5355\u5143\u5b58\u7684\u662f\u4e00\u4e2a\u6570\u5f53\u524d\u4e0b\u6807mod5\u7684\u60c5\u51b5\u8fd9\u4e9b\u5355\u5143\u5728\u6ca1\u6709\u63d2\u5165\u5b83\u5bf9\u5e94\u5927\u5c0f\u7684\u6570\u65f6\u53ef\u4ee5\u662f\u7a7a\u7684\n### \uff08ex\uff1a\u5f53\u63d2\u51651\u65f6\u7b2c\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u5185\u60c5\u51b5\uff1a0\uff0c1\uff0c0\uff0c0\uff0c0\uff0c0\uff1b\u6b64\u65f6\u96c6\u5408\uff1a1 \n### \u63d2\u51653\u65f6\u7b2c\u4e8c\u4e2a\u53f6\u5b50\u8282\u70b9\u60c5\u51b5\uff1a0 \uff0c0\uff0c3\uff0c0\uff0c0\uff0c0 \u6b64\u65f6\u96c6\u5408\uff1a1\uff0c3  ~~\u5f53\u7136\u5728\u521a\u5f00\u59cb\u63d2\u8fdb\u53bb\u7684\u65f6\u5019\u5176\u5b9e3\u5728\u7b2c\u4e00\u4f4d\u8fd9\u4e2a\u8981\u770b\u4ee3\u7801~~\uff09\n### \u90a3\u4e48\u6211\u4eec\u518d\u601d\u8003\u5728\u7ebf\u6bb5\u6811\u80fd\u600e\u4e48\u66f4\u65b0\u6bcf\u4e2a\u5b50\u8282\u70b9\u56e0\u4e3a\u524d\u9762\u63d2\u5165\u7684\u8282\u70b9\u800c\u79fb\u52a8\u7684\u4f4d\u6570\u5462\uff1f\n### \u7b54\u6848\u662f\u5f15\u8fdb\u6570\u7ec4num\u4ee3\u8868\u7ebf\u6bb5\u6811\u4e2d\u67d0\u8282\u70b9\u7684\u6570\u5411\u53f3\u79fb\u7684\u4f4d\u6570\u3002\u6bcf\u63d2\u5165\u4e00\u4e2a\u6570\u65f6\u7ef4\u62a4\u8be5\u6570\u7684\u53f6\u5b50\u8282\u70b9num\u503c\u52a0\u4e00\uff08\u63d2\u51651\u65f6\u6db5\u76d61\u7684\u53f6\u5b50\u8282\u70b90,1,0,0,0 num\u503c\u52a0\u4e00\uff09\uff0c\u5728\u4e00\u8def\u56de\u6eaf\u7684\u8fc7\u7a0b\u4e2d\u6bcf\u4e2a\u8282\u70b9\u7684num\u503c\u90fd\u4f1a\u88ab\u66f4\u65b0(\u7ebf\u6bb5\u6811\u7684pushup\u8fc7\u7a0b)\n### \u5728\u56de\u6eaf\u8fc7\u7a0b\u4e2d\u901a\u8fc7num\u503c\u7ef4\u62a4\u5f53\u524d\u8282\u70b9\u4e0b\u6807mod5\u4f59i\u7684\u6570\u4e4b\u548c\uff08\u5de6\u5b50\u6811\u4e0d\u53d1\u751f\u79fb\u52a8\uff0c\u53f3\u5b50\u6811\u5f53\u524d\u4e0b\u6807mod5\u4f59i\u7684\u6570\u524d\u4f4d\u7f6e\u5e94\u8be5\u7b49\u4e8ei-\u5de6\u5b50\u6811\u79fb\u52a8\u4f4d\u6570~~\u5373\u5de6\u5b50\u6811num~~\uff09\n### \u81f3\u4e8e\u4e3a\u4ec0\u4e48\u79bb\u7ebf\u8bf7\u770b\u4e00\u4e0b\u6570\u636e\u8303\u56f4\u5c31\u61c2\u4e86\u5e94\u8be5\u4e0d\u7528\u591a\u8bf4qwq\n### \u547c\u3002\u3002\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\u5927\u6982\u5c31\u662f\u8fd9\u6837\u5427\u3002\u3002\u5c0f\u6e23\u6ed3\u8bf7\u5927\u4f6c\u4eec\u8f7b\u55b7QAQ\n\n```\n#include <iostream>\n#include <string.h>\n#include<cstdlib>\n#include <map>\n#include <algorithm>\n#define ll long long\nusing namespace std;\nll n,x;\nll tree[800005][6],add[400005],pan[400005],shu[400005];\nll num[800005];\nchar a[10];\nmap <ll,ll> id;\ninline ll read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9') {if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nll ls(ll k)\n{\n\treturn k<<1;\n}\nll rs(ll k)\n{\n\treturn k<<1|1;\n}\nvoid push_up(ll i)\n{\n\tnum[i]=num[ls(i)]+num[rs(i)];//\u66f4\u65b0\u53f3\u79fb\u4f4d\u6570\n\tfor(ll j=0;j<=4;j++)\n\t{\n\t\ttree[i][j]=tree[ls(i)][j]+tree[rs(i)][((j-num[ls(i)])%5+5)%5];//\u66f4\u65b0\u5f53\u524d\u4e0b\u6807\u4f59i\u7684\u6570\u4e4b\u548c\n\t}\n } \ninline void in(ll left,ll right,ll i,ll wei,ll wor,ll sum)\n{\n\tif(left==right)\n\t{\n\t\ttree[i][1]+=wor;\n\t\tnum[i]+=sum;\n\t\treturn;//\u5355\u70b9\u66f4\u65b0\n\t}\n\telse\n\t{\n\t\tll mid=(left+right)/2;\n\t\tif(wei<=mid) in(left,mid,ls(i),wei,wor,sum);\n\t\telse in(mid+1,right,rs(i),wei,wor,sum);\n\t\tpush_up(i);\n\t}\n}\nint main()\n{\n\tll cnt=0;\n\tn=read();\n\tfor(ll i=1;i<=n;i++)\n\t{\n\t\tcin>>a;\n\t\tif(a[0]=='a') \n\t\t{\n\t\t    x=read();\n\t\t\tadd[++cnt]=x;\n\t\t\tshu[i]=x;\n\t\t\tpan[i]=1;\n\t\t}\n\t\tif(a[0]=='d')\n\t\t{\n\t\t\tx=read();\n\t\t\tshu[i]=x;\n\t\t\tpan[i]=-1;\n\t\t}\n\t } //\u79bb\u7ebf \n\t sort(add+1,add+cnt+1);\n\t ll sum=1;\n\t for(ll i=1;i<=cnt;i++)\n\t {\n\t \tif(id[add[i]]==0) \n\t\t {\n\t\t \tid[add[i]]=sum;\n\t \t\tsum++;\n\t \t}\n\t }//\u79bb\u6563\u5316 \n\t for(ll i=1;i<=n;i++)\n\t {\n\t \tif(pan[i]==0) printf(\"%lld\\n\",tree[1][3]);\n\t \telse\n\t \t{\n\t \t\tin(1,n,1,id[shu[i]],pan[i]*shu[i],pan[i]);\n\t\t }\n\t }\n\t return 0;\n}\n```",
        "postTime": 1538828842,
        "uid": 84637,
        "name": "\u6789\u5374\u4e1c\u98ce",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF85D \u3010Sum of Medians\u3011"
    },
    {
        "content": "\u539f\u672c\u4e0e\u67d0\u4eba\u7ea6\u5b9a@lisuier\u662f\u6211\u5199\u7ebf\u6bb5\u6811\u5979\u5199vector\u7684\uff0c\u4f46\u7531\u4e8e\u672c\u4eba\u8fc7\u4e8e\u849f\u84bb\uff0c\u5bf9\u4e8e\u90a3\u4e2a\u8d85\u7ea7\u9ebb\u70e6\u7684\u7ebf\u6bb5\u6811\u65e0\u80fd\u4e3a\u529b\uff0c\u8fd8\u662f\u9000\u800c\u6c42\u5176\u6b21\uff0c\u4ecb\u7ecd\u4e00\u4e0bvector\u7684\u8d85\u7ea7\u66b4\u529b\u5199\u6cd5(OI\u751f\u6daf\u7b2c\u4e09\u6b21\u5199vector\u7eaa\u5ff5)\n\n------------\n\n\u5148\u4ecb\u7ecd\u4e00\u4e0b\u5c06\u8981\u7528\u5230\u7684\u51e0\u4e2a\u51fd\u6570:\n1.lower_bound\uff1a\n\n\u5728algorithm\u5e93\u91cc\u3002\n\n```cpp\nint a[100001],n,x,pos;\npos=lower_bound(a+1,a+n+1,x)-a;\n//\u62ec\u53f7\u91cca+1,a+n+1\u662f\u56e0\u4e3a\u6211\u7684\u4e60\u60ef\u662f\u6570\u7ec4\u4ece1\u5f00\u59cb\u5b58,\u8be6\u60c5\u542b\u4e49\u53c2\u89c1sort\u51fd\u6570\u4e2d\u7684\u540c\u6837\u7684\u4e00\u90e8\u5206\n```\n\n\u5f53a\u6570\u7ec4\u4e3a\u4e00\u4e2a\u9012\u589e\u6570\u7ec4\u65f6\u5c06\u4f1a\u8fd4\u56de\u7b2c\u4e00\u4e2aa[i]>=x\u7684i\uff08\u5373\u4e0a\u5f0f\u4e2d\u7684pos\uff09\u3002\n\n\u5982\u679c\u662fvector\u5199\u6cd5\u4e3a\uff1a\n```cpp\nlower_bound(v.begin(),v.end(),x)//(\u4e0d\u5fc5-v),\u4f46\u4e5f\u4e0d\u80fdint pos=lower_bound(v.begin(),v.end(),x);\n```\n\n2.vector\u4e2d\u7684insert\u51fd\u6570\n\n\u7b80\u800c\u8a00\u4e4b\u5c31\u662f\uff1a\n\n```cpp\n//\u4f2a\u4ee3\u7801\nvector<int>v;\nv.insert(\u63d2\u5165\u4e4b\u540e\u8be5\u6570\u7684\u4e0b\u6807/*\u5373\u8be5\u6570\u4f60\u60f3\u8981\u63d2\u5728\u54ea\u91cc*/,\u8981\u63d2\u5165\u7684\u90a3\u4e2a\u6570);\n```\n\n3.vector\u4e2d\u7684erase\u51fd\u6570\n\n\u8fd8\u662f\u76f4\u63a5\u4e0a\u4f2a\u4ee3\u7801\uff1a\n\n```cpp\nvector<int>v;\nv.erase(\u4f60\u60f3\u8981\u5220\u9664\u7684\u8be5\u6570\u7684\u4e0b\u6807);\n```\n\n------------\n\n\u8a00\u5f52\u6b63\u4f20\uff0c\u56de\u5230\u8fd9\u9053\u9898\u3002\u8bf4\u767d\u4e86\u5c31\u662f\u4e00\u4e2a\u5e8f\u5217\uff0cadd\u5c31\u662f\u6dfb\u52a0\u4e00\u4e2a\u6570\uff0cdel\u5c31\u662f\u5220\u9664\u4e00\u4e2a\u6570,sum\u8ba9\u4f60\u6c42\u5c06\u8be5\u5e8f\u5217\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u540e\u6240\u6709v[i](i%5==3)\u7684v[i]\u7684\u548c\u3002\n\u90a3\u4e48\uff0c\u5c31\u66b4\u529b\u5427\u3002\n\u7528lower_bound\u67e5\u627e\u51fa\u5b83\u7684\u4e0b\u6807(\u6216\u63d2\u5165\u5e76\u6392\u5e8f\u540e\u5b83\u7684\u4e0b\u6807),\u7136\u540einsert\u6216del.\n\u67e5\u548c\u66f4\u66b4\u529b\u4e00\u70b9\uff1a\u56e0\u4e3avector\u662f\u4ece0\u5f00\u59cb\u7684\uff0c\u90a3\u4e48\u8dd1\u4e2afor\u5faa\u73af,i=2;i<v.size();i+=5\u628a\u6bcf\u4e00\u4e2av[i]\u52a0\u8d77\u6765\uff0c\u7ed3\u675f\u4e86\u3002\n\n------------\n\n\u5f02\u5e38\u66b4\u529b\u7684\u5199\u6cd5\uff0c\u65f6\u6548\u8fd8\u8fc7\u5f97\u53bb\u2026\u2026\n\n------------\n\n\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<iostream>\n#include<vector>\n#include<cstring>\nusing namespace std;\nvector <int> v;\nint n;\nvoid solve(){\n\tscanf(\"%d\",&n);\n\twhile(n--){\n\t\tint x;\n\t\tchar op[3];\n\t\tscanf(\"%s\",op);\n\t\tif(op[0]=='a'){\n\t\t\tscanf(\"%d\",&x);\n\t\t\tv.insert(lower_bound(v.begin(),v.end(),x),x);\n\t\t}\n\t\tif(op[0]=='d'){\n\t\t\tint x;\n\t\t\tscanf(\"%d\",&x);\n\t\t\tv.erase(lower_bound(v.begin(),v.end(),x));\n\t\t}\n\t\tif(op[0]=='s'){\n\t\t\tlong long ans=0;//\u4e00\u5b9a\u8981\u5f00long long\uff0c\u5426\u5219\u4f1a\u5361\u572890\u5206\n\t\t\tfor(int i=2;i<v.size();i+=5)\n\t\t\t\t\tans+=v[i];\n\t\t\tprintf(\"%lld\\n\",ans);\n\t\t}\n\t}\n}\nint main(){\n\tsolve();\n\treturn 0;\n}\n```\n\n------------\n\n\u540e\u8bb0\uff1a\n\u597d\u66b4\u529b\u554a\u2026\u2026\u4e0d\u8fc7\u80fd\u8fc7\u3002\u5199\u7684\u65f6\u5019\u8fd8\u662f\u5341\u5206\u987a\u5229\u7684\uff0c\u5361\u4e86\u6ca1\u51e0\u6b21\uff1a\u7b2c\u4e00\u6b21\u662f\u9009\u62e9lower_bound\u6216upper_bound\uff1b\u7b2c\u4e8c\u6b21\u662f\u5199vector\u7684lower_bound\uff1b\u7b2c\u4e09\u6b21\u662flong long\u2026\u2026\nSTL\u5927\u8d5e\uff01\uff01\uff01\uff01\uff01\uff01\uff01",
        "postTime": 1537688740,
        "uid": 61441,
        "name": "Erin\u975e\u964c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF85D \u3010Sum of Medians\u3011"
    },
    {
        "content": "\u6765\u4e00\u53d1\u5341\u5206\u66b4\u529b\u7684\u505a\u6cd5\n\n\u6211\u4eec\u5148\u6765\u770b $add$ \u64cd\u4f5c\uff0c\u5bb9\u6613\u53d1\u73b0\u63d2\u5165 $x$ \u4e4b\u540e\uff0c\u5728 $x$ \u540e\u9762\u7684\u8282\u70b9\u6392\u540d $\\%5$ \u90fd\u6070\u597d\u589e\u52a0\u4e86 $1$\u3002\n\n\u8003\u8651\u5bf9\u6240\u6709\u6392\u540d $\\%5$ \u540c\u4f59\u7684\u8282\u70b9\u5404\u5efa\u4e00\u68f5 $Treap$\uff0c\u8fd9\u5c31\u76f8\u5f53\u4e8e\u628a\u6bcf\u68f5\u6811\u5728 $x$ \u5904\u5206\u88c2\u4e3a $A_i$ \u548c $B_i$\uff0c\u5e76\u5c06 $B_i$ \u6574\u4f53\u540e\u79fb\u4e00\u4f4d\u3002$del$ \u64cd\u4f5c\u540c\u7406\uff0c\u53cd\u8fc7\u6765\u5c31\u884c\u4e86\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u770b\u4ee3\u7801\uff1a\n\n---\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n\n/* FHQ_Treap */\n\n#define HIM 19260817\nll seed = HIM;\nll rnd() {seed ^= seed << 13; seed ^= seed >> 7; seed ^= seed << 5; return seed;}\n\n#define M 3000007\nll val[M],sum[M],rd[M];\nint sz[M],ch[M][2],tot=0;\n\n#define lc(x) ch[x][0]\n#define rc(x) ch[x][1]\nint newnode(ll v) {tot++; rd[tot] = rnd(); val[tot] = sum[tot] = v; lc(tot) = rc(tot) = 0; sz[tot] = 1; return tot;}\nint pushup(int now) {sz[now] = sz[lc(now)] + sz[rc(now)] + 1; sum[now] = sum[lc(now)] + sum[rc(now)] + val[now];}\nvoid split_size(int now,int k,int &x,int &y){\n    if (!now) return void(x=y=0);\n    if (sz[lc(now)]+1<=k) x = now, split_size(rc(now),k-sz[lc(now)]-1,rc(x),y); else y = now, split_size(lc(now),k,x,lc(y));\n    pushup(now);\n}\nvoid split_val(int now,ll k,int &x,int &y){\n    if (!now) return void(x=y=0);\n    if (val[now]<=k) x = now, split_val(rc(now),k,rc(x),y); else y = now, split_val(lc(now),k,x,lc(y));\n    pushup(now);\n}\nint merge(int x,int y){\n    if (!x||!y) return x|y; int ret;\n    if (rd[x]<rd[y]) ret = x, rc(ret) = merge(rc(x),y); else ret = y, lc(ret) = merge(x,lc(y));\n    pushup(ret); return ret;\n}\n\nint T[5];\n\n#define pre(x) (((x)+4)%5)\n#define suc(x) (((x)+1)%5)\n\nvoid add(ll x){\n    int A[5],B[5],C[5],D[5];\n    for (int i=0;i<5;i++) split_val(T[i],x,A[i],B[i]);\n    for (int i=0;i<5;i++) split_size(A[i],sz[A[i]]-1,C[i],D[i]);\n    int tmp = 0; for (int i=0;i<5;i++) tmp = val[D[i]]>val[D[tmp]]?i:tmp; tmp = suc(tmp); //\u627e\u5230\u63d2\u5165\u4f4d\u7f6e\n    for (int i=0;i<5;i++) A[i] = merge(C[i],D[i]); A[tmp] = merge(A[tmp],newnode(x)); //\u63d2\u5165\u8282\u70b9\n    for (int i=0;i<5;i++) T[i] = merge(A[i],B[pre(i)]); //\u6574\u4f53\u540e\u79fb\n}\n\nvoid del(ll x){\n    int A[5],B[5],C[5],D[5];\n    for (int i=0;i<5;i++) split_val(T[i],x,A[i],B[i]);\n    for (int i=0;i<5;i++) split_size(A[i],sz[A[i]]-1,C[i],D[i]);\n    int tmp = 0; for (int i=0;i<5;i++) tmp = val[D[i]]>val[D[tmp]]?i:tmp; //\u627e\u5230\u5220\u9664\u4f4d\u7f6e\n    for (int i=0;i<5;i++) A[i] = i==tmp?C[i]:merge(C[i],D[i]); //\u5220\u9664\u8282\u70b9\n    for (int i=0;i<5;i++) T[i] = merge(A[i],B[suc(i)]); //\u6574\u4f53\u524d\u79fb\n}\n\nll getsum(){\n    return sum[T[3]]; //\u7531\u4e8e\u6309\u4f59\u6570\u5efa\u6811\uff0c\u76f4\u63a5\u7b97\u5c31\u597d\u4e86\n}\n\nint n;\n\nsigned main(){\n    scanf(\"%d\",&n);\n    for (int i=1;i<=n;i++){\n        char opt[10]; ll x;\n        scanf(\"%s\",opt);\n        switch(opt[0]){\n            case 'a' : scanf(\"%I64d\",&x); add(x); break;\n            case 'd' : scanf(\"%I64d\",&x); del(x); break;\n            case 's' : printf(\"%I64d\\n\",getsum()); break;\n        }\n    }\n    return 0;\n}\n\n```\n",
        "postTime": 1601733315,
        "uid": 31712,
        "name": "zrzluck99",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF85D \u3010Sum of Medians\u3011"
    },
    {
        "content": "~~\u542c\u8bf4 @hater \u7528\u5206\u5757\uff0c\u7136\u540e\u7784\u4e00\u773c\u9898\u89e3\u6ca1\u6709\u64cd\u4f5c\u5206\u5757\uff0c\u4e8e\u662f\u8865\u4e00\u4e0b\u3002~~\n\n\u9996\u5148\u6211\u4eec\u76f4\u63a5\u626b\u4e00\u904d\u5f53\u524d\u6240\u6709\u7684\u503c\u90a3\u4e48\u5355\u6b21\u590d\u6742\u5ea6 $O(n)$ \uff0c\u603b\u590d\u6742\u5ea6 $O(nq)$\uff0c\u7136\u540e\u6211\u4eec\u4e5f\u53ef\u4ee5\u5c06\u6240\u6709\u8be2\u95ee\u79bb\u7ebf\uff0c\u9884\u5904\u7406\u51fa\u6bcf\u4e00\u4e2a\u6a21\u540e\u7ed3\u679c\u6240\u5bf9\u5e94\u4f4d\u7f6e\u7684\u524d\u7f00\u548c\uff0c\u4e4b\u540e\u5bf9\u4e8e\u4e24\u4e2a\u76f8\u90bb\u7684\u88ab\u4fee\u6539\u7684\u503c\u4e4b\u95f4\u6ca1\u6709\u88ab\u4fee\u6539\u8fc7\u7684\u503c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u524d\u7f00\u548c\u5f88\u5feb\u7684\u7b97\u51fa\uff0c\u5bf9\u4e8e\u6240\u6709\u88ab\u4fee\u6539\u7684\u503c\u6211\u4eec\u66b4\u529b\u8ba1\u7b97\uff0c\u5355\u6b21\u590d\u6742\u5ea6 $O(n)$ \uff0c\u603b\u590d\u6742\u5ea6 $O(nq)$\u3002\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u6bcf $B$ \u6b21\u64cd\u4f5c\u91cd\u65b0\u626b\u4e00\u904d\u5f53\u524d\u7684\u503c\uff0c\u8fd9\u6837\u6211\u4eec\u91cd\u65b0\u626b\u5355\u6b21\u590d\u6742\u5ea6 $O(n)$ \uff0c\u603b\u590d\u6742\u5ea6 $O(n\\times\\frac{q}{B})$\uff0c\u4e4b\u540e\u6bcf\u6b21\u4fee\u6539\u7684\u503c\u7684\u4f4d\u7f6e\u5c31\u53ea\u6709 $O(B)$ \u4e2a\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5355\u6b21 $O(B)$ \u6c42\u51fa\u7b54\u6848\uff0c\u603b\u590d\u6742\u5ea6 $O(q\\times B)$\uff0c\u7406\u8bba\u4e0a $B = \\sqrt{n}$ \u6700\u4f18\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\sqrt{n})$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2e5 + 10;\nconst int block = 900;\nint t, n;\nint v[N], num;\nint op[N], X[N];\nlong long qzh[N][5], sum[N];\nint vis[N];\nint now[block + 10];\nint main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n;\n\tfor (int i = 1; i <= n; ++ i)\n\t{\n\t\tchar now[10];\n\t\tcin >> now;\n\t\tif(now[0] == 'a')\n\t\t{\n\t\t\top[i] = 1;\n\t\t\tcin >> X[i];\n\t\t\tv[++ num] = X[i];\n\t\t}\n\t\telse\n\t\tif(now[0] == 'd')\n\t\t{\n\t\t\top[i] = 2;\n\t\t\tcin >> X[i];\n\t\t}\n\t\telse\n\t\top[i] = 3;\n\t}\n\tsort(v + 1, v + 1 + num);\n\tint tot = unique(v + 1, v + 1 + num) - v - 1;\n\tfor (int i = 1; i <= n; ++ i)\n\t\tX[i] = lower_bound(v + 1, v + 1 + tot, X[i]) - v;\n\tfor (int l = 1; l <= n; l += block)\n\t{\n\t\tint r = min(n, l + block - 1);\n\t\tnum = 0;\n\t\tfor (int i = l; i <= r; ++ i)\n\t\t{\n\t\t\tif(op[i] <= 2)\n\t\t\tnow[++ num] = X[i];\n\t\t}\n\t\tnow[++ num] = tot + 1;\n\t\tsort(now + 1, now + 1 + num);\n\t\tnum = unique(now + 1, now + 1 + num) - now - 1;\n\t\tfor (int i = l; i <= r; ++ i)\n\t\t{\n\t\t\tif(op[i] == 1)\n\t\t\t{\n\t\t\t\tvis[X[i]] = 1;\n\t\t\t}\n\t\t\tif(op[i] == 2)\n\t\t\t{\n\t\t\t\tvis[X[i]] = 0;\n\t\t\t}\n\t\t\tif(op[i] == 3)\n\t\t\t{\n\t\t\t\tint zz = 0;\n\t\t\t\tlong long ans = 0;\n\t\t\t\tfor (int i = 1; i <= num; ++ i)\n\t\t\t\t{\n\t\t\t\t\tans += qzh[now[i] - 1][(3 - zz % 5 + 5) % 5] - qzh[now[i - 1]][(3 - zz % 5 + 5) % 5];\n\t\t\t\t\tif(vis[now[i]] != sum[now[i]] - sum[now[i] - 1])\n\t\t\t\t\t{\n\t\t\t\t\t\tif(vis[now[i]] == 0)\n\t\t\t\t\t\t-- zz;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t++ zz;\n\t\t\t\t\t}\n\t\t\t\t\tif(vis[now[i]])\n\t\t\t\t\t{\n\t\t\t\t\t\tif((sum[now[i]] + zz) % 5 == 3)\n\t\t\t\t\t\tans += v[now[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcout << ans << \"\\n\";\n\t\t\t}\n\t\t}\n\t\tfor (int i = 1; i <= n; ++ i)\n\t\t{\n\t\t\tsum[i] = sum[i - 1] + vis[i];\n\t\t\tfor (int j = 0; j < 5; ++ j)\n\t\t\tqzh[i][j] = qzh[i - 1][j];\n\t\t\tif(vis[i])\n\t\t\tqzh[i][sum[i] % 5] += v[i];\n\t\t}\n\t}\n}\n```\n",
        "postTime": 1636449114,
        "uid": 111728,
        "name": "\u5e7b\u5f71\u661f\u575a\u5f3a",
        "ccfLevel": 7,
        "title": "CF85D"
    },
    {
        "content": "> Codeforces 85D\n\n> - \u7ef4\u62a4\u4e00\u4e2a\u96c6\u5408 $S$\n> - \u652f\u6301\u63d2\u5165\u548c\u5220\u9664\uff0c\u548c\u67e5\u8be2\n> $$\\sum_{i \\bmod 5 =3} a_i$$\n> $\\quad\\ \\ $\u7684\u503c\n> - \u5176\u4e2d $a$ \u4e3a $S$ \u6392\u597d\u5e8f\u540e\u7684\u6570\u7ec4\uff0c\u4e0b\u6807\u4ece $1$ \u5f00\u59cb\n> - \u64cd\u4f5c\u6570\u4e0d\u8d85\u8fc7 $10^5$\n\n\u6b38\u597d\u50cf\u6ca1\u6709 $\\texttt{fhq-treap}$ \u7684\u9898\u89e3\uff0c\u6765\u53d1\u4e00\u7bc7\u3002\n\n\u770b\u5230\u8fd9\u79cd\u63d2\u5165\u5220\u9664\u7684\u64cd\u4f5c\uff0c\u53c8\u8981\u652f\u6301\u6392\u5e8f\uff0c\u4e0d\u96be\u53ef\u4ee5\u60f3\u5230 $\\texttt{fhq-treap}$ \u7684 $\\texttt{split}$ \u548c $\\texttt{merge}$ \u64cd\u4f5c\u3002\u6309\u6743\u503c\u5206\u88c2\u5e94\u8be5\u662f $\\texttt{fhq-treap}$ \u7684\u5e38\u89c4\u64cd\u4f5c\u5427\u3002\n\n\u5bf9\u4e8e\u67e5\u8be2\uff0c\u6211\u4eec\u5bf9\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u4e00\u4e2a\u957f\u5ea6\u4e3a $5$ \u7684\u6570\u7ec4 $sum$\uff0c\u5206\u522b\u7ef4\u62a4\u4ee5\u5f53\u524d\u8282\u70b9\u4e3a\u6839\uff0c\u4e2d\u5e8f\u904d\u5386\u4e2d\u4e0b\u6807\u6a21 $5$ \u4f59 $0,1,2,3,4$ \u7684\u503c\u7684\u548c\u3002\u53d1\u73b0\u8fd9\u4e2a $sum$ \u7684\u66f4\u65b0\u53ea\u548c\u5b83\u5de6\u53f3\u513f\u5b50\u7684 $sum$ \u548c\u5de6\u5b50\u6811\u5927\u5c0f\u6709\u5173\uff0c\u56e0\u6b64\u8fd8\u9700\u7ef4\u62a4\u5b50\u6811\u5927\u5c0f\uff0c\u8fd9\u6837\u66f4\u65b0\u5c31\u662f\u5e38\u6570\u7ea7\u522b\u7684\u3002\u67e5\u8be2\u7684\u7ed3\u679c\u5c31\u662f\u6839\u8282\u70b9\u7684 $sum_2$ \u7684\u503c\u3002\n\n```cpp\n//Coded by tzc_wk\n/*\n\u6570\u636e\u4e0d\u6e05\u7a7a\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u591a\u6d4b\u4e0d\u8bfb\u5b8c\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u8fb9\u754c\u4e0d\u7279\u5224\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u8d2a\u5fc3\u4e0d\u8bc1\u660e\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\nD P \u987a\u5e8f\u9519\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u5927\u5c0f\u5c11\u7b49\u53f7\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u53d8\u91cf\u4e0d\u7edf\u4e00\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u8d8a\u754c\u4e0d\u5224\u65ad\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u8c03\u8bd5\u4e0d\u6ce8\u91ca\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u6ea2\u51fa\u4e0d l l\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n#define fi\t\t\tfirst\n#define se\t\t\tsecond\n#define fz(i,a,b)\tfor(int i=a;i<=b;i++)\n#define fd(i,a,b)\tfor(int i=a;i>=b;i--)\n#define foreach(it,v) for(__typeof(v.begin()) it=v.begin();it!=v.end();it++)\n#define all(a)\t\ta.begin(),a.end()\n#define giveup(...) return printf(__VA_ARGS__),0;\n#define fill0(a)\tmemset(a,0,sizeof(a))\n#define fill1(a)\tmemset(a,-1,sizeof(a))\n#define fillbig(a)\tmemset(a,0x3f,sizeof(a))\n#define fillsmall(a) memset(a,0xcf,sizeof(a))\n#define mask(a)\t\t(1ll<<(a))\n#define maskx(a,x)\t((a)<<(x))\n#define _bit(a,x)\t(((a)>>(x))&1)\n#define _sz(a)\t\t((int)(a).size())\n#define filei(a)\tfreopen(a,\"r\",stdin);\n#define fileo(a)\tfreopen(a,\"w\",stdout);\n#define fileio(a) \tfreopen(a\".in\",\"r\",stdin);freopen(a\".out\",\"w\",stdout)\n#define eprintf(...) fprintf(stderr,__VA_ARGS__)\n#define put(x)\t\tputchar(x)\n#define eoln        put('\\n')\n#define space\t\tput(' ')\n#define y1\t\t\ty_chenxiaoyan_1\n#define y0\t\t\ty_chenxiaoyan_0\n#define int long long\ntypedef pair<int,int> pii;\ninline int read(){\n\tint x=0,neg=1;char c=getchar();\n\twhile(!isdigit(c)){\n\t\tif(c=='-')\tneg=-1;\n\t\tc=getchar();\n\t}\n\twhile(isdigit(c))\tx=x*10+c-'0',c=getchar();\n\treturn x*neg;\n}\ninline void print(int x){\n\tif(x<0){\n\t\tputchar('-');\n\t\tprint(abs(x));\n\t\treturn;\n\t}\n\tif(x<=9)\tputchar(x+'0');\n\telse{\n\t\tprint(x/10);\n\t\tputchar(x%10+'0');\n\t}\n}\ninline int qpow(int x,int e,int _MOD){\n\tint ans=1;\n\twhile(e){\n\t\tif(e&1)\tans=ans*x%_MOD;\n\t\tx=x*x%_MOD;\n\t\te>>=1;\n\t}\n\treturn ans;\n}\nstruct node{\n\tint ind,sz,val,sum[5],ch[2],add_lz,key;\n} s[100005];\nint ncnt=0,root=0;\ninline void pushup(int k){\n\tif(!k)\treturn;\n\ts[k].sz=s[s[k].ch[0]].sz+s[s[k].ch[1]].sz+1;\n\tfz(i,0,4){\n\t\ts[k].sum[i]=s[s[k].ch[0]].sum[i];\n\t}\t\n\ts[k].sum[s[s[k].ch[0]].sz%5]+=s[k].val;\n\tfz(i,0,4){\n\t\ts[k].sum[(i+s[s[k].ch[0]].sz+1)%5]+=s[s[k].ch[1]].sum[i];\n\t}\n}\ninline void split(int k,int val,int &a,int &b){\n\tpushup(k);\n\tif(!k){\n\t\ta=b=0;\n\t\treturn;\n\t}\n\tif(val<s[k].val){\n\t\tb=k;split(s[k].ch[0],val,a,s[k].ch[0]);\n\t}\n\telse{\n\t\ta=k;split(s[k].ch[1],val,s[k].ch[1],b);\n\t}\n\tpushup(a);\n\tpushup(b);\n}\ninline int merge(int a,int b){\n\tif(!a||!b)\treturn a+b;\n\tpushup(a);pushup(b);\n\tif(s[a].key<s[b].key){\n\t\ts[a].ch[1]=merge(s[a].ch[1],b);\n\t\tpushup(a);return a;\n\t}\n\telse{\n\t\ts[b].ch[0]=merge(a,s[b].ch[0]);\n\t\tpushup(b);return b;\n\t}\n}\ninline int newnode(int val,int ind){\n\ts[++ncnt].val=val;\n\ts[ncnt].key=rand()<<15|rand();\n\ts[ncnt].sum[ind%5]=val;\n\ts[ncnt].sz=1;\n\treturn ncnt;\n}\ninline void insert(int val){\n\tint k1,k2;\n\tsplit(root,val,k1,k2);\n\troot=merge(merge(k1,newnode(val,s[k1].sz)),k2);\n//\tcout<<k1<<\" \"<<k2<<\" \"<<root<<\" \"<<s[root].sum[1]<<endl;\n}\ninline void del(int val){\n\tint k1,k2,k3;\n\tsplit(root,val-1,k1,k2);\n\tsplit(k2,val,k2,k3);\n\troot=merge(k1,k3);\n}\nsigned main(){\n\tint T=read();\n\twhile(T--){\n\t\tchar opt[5];cin>>opt+1;\n\t\tif(opt[1]=='a'){\n\t\t\tint x=read();\n\t\t\tinsert(x); \n\t\t}\n\t\tif(opt[1]=='d'){\n\t\t\tint x=read();del(x);\n\t\t}\n\t\tif(opt[1]=='s'){\n\t\t\tcout<<s[root].sum[2]<<endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n~~\u6211\u4e3a\u4ec0\u4e48\u8981\u5199\u8fd9\u4e48\u6c34\u7684\u9898\u7684\u9898\u89e3~~",
        "postTime": 1587131267,
        "uid": 123543,
        "name": "ET2006",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF85D \u3010Sum of Medians\u3011"
    },
    {
        "content": "~~\u6240\u4ee5\u8fd9\u4e2a\u9898\u54ea\u8981\u4ec0\u4e48\u6570\u636e\u7ed3\u6784\u554a\u66b4\u529b\u4e0d\u5c31\u884c\u4e86\u5417~~\n\n\u6211\u4eec\u6559\u7ec3\u5e03\u7f6e\u4e86\u8fd9\u4e2a\u9898\u540e\u8bf4\u4e86\u4e00\u53e5\uff1a\n\n> \u8fd9\u4e2a\u9898\u53ef\u4ee5\u7528\u5206\u5757\u505a\uff0c\u4e0d\u8fc7\u6807\u51c6\u505a\u6cd5\u662f\u7ebf\u6bb5\u6811\u3002\n\n\u6211\uff1a\n\n> \u5b8c\u86cb\u6211\u90fd\u5199\u4e0d\u5bf9\u90a3\u6211\u5199\u66b4\u529b\u5427\u3002\n\n\u7ed3\u679c\uff1a\n\n$$\\large\\color{limegreen}\\text{Happy New Year!}$$\n\n\u8fd9\u4e2a\u9898\u7684\u66b4\u529b\u601d\u8def\u5176\u5b9e\u5f88\u7b80\u5355\uff1a\n\n\u7ef4\u62a4\u4e00\u4e2a ```std::vector```\u3002\n\n- \u5bf9\u4e8e `add` \u64cd\u4f5c\uff0c\u5728 `vector` \u4e2d\u4e8c\u5206\u67e5\u627e\u51fa\u5e94\u5f53\u63d2\u5165\u7684\u4f4d\u7f6e\u3002\n\n- \u5bf9\u4e8e `del` \u64cd\u4f5c\uff0c\u5728 `vector` \u4e2d\u4e8c\u5206\u67e5\u627e\u51fa\u5e94\u5f53\u5220\u9664\u7684\u4f4d\u7f6e\u3002\n\n- \u5bf9\u4e8e `sum` \u8be2\u95ee\uff0c\u5728 `vector` \u4e2d\u66b4\u529b\u76f8\u52a0\u3002\n\n\u5b9e\u9645\u4e0a\uff0c\u901a\u8fc7\u4e8c\u5206\u4f4d\u7f6e\uff0c\u6211\u4eec\u4fdd\u8bc1\u4e86 `vector` \u662f\u59cb\u7ec8\u6709\u5e8f\u7684\uff0c\u56e0\u6b64\u76f4\u63a5\u627e\u7b2c\u4e09\u4e2a\u52a0\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u5982\u4e0b\uff1a\n\n\u5b9a\u4e49 $s$ \u4e3a\u6b64\u65f6\u96c6\u5408\u7684\u5927\u5c0f\u3002\n\n\u5bf9\u4e8e\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\uff1a\u4e8c\u5206\u4f4d\u7f6e $O(\\log s)$\uff0c\u63d2\u5165/\u5220\u9664\u6700\u574f\u662f $O(s)$\u3002\u6574\u4f53\u6700\u574f\u662f $O(s)$\u3002\n\n\u5bf9\u4e8e\u67e5\u8be2\uff1a\u76f4\u63a5\u76f8\u52a0$O(s)$\u3002\n\n\u603b\u4f53\u6700\u574f\u590d\u6742\u5ea6 $O(ns)$\u3002\u4f46\u662f $s$ \u7684\u503c\u5728\u968f\u673a\u60c5\u51b5\u4e0b\u662f\u975e\u5e38\u5c0f\u7684\u3002\u63d2\u5165\u7684\u6570\u7684\u4f4d\u7f6e\u4e5f\u901a\u5e38\u4e0d\u4f1a\u5728\u6700\u524d\u9762\u3002\u5e38\u6570\u975e\u5e38\u5c0f\u3002\n\nCF \u4e0a\u7684\u6781\u9650\u6570\u636e\u662f $10^5$ \u4e2a `add` \u64cd\u4f5c\u3002\u6211\u7684\u4ee3\u7801\u8fd0\u884c\u65f6\u95f4\u662f $1622ms$\u3002\u4f5c\u4e3a\u53c2\u8003\uff0c\u5206\u5757\u7684 $O(n\\sqrt{n})$ \u505a\u6cd5\u8fd0\u884c\u65f6\u95f4\u5927\u7ea6\u5728 $400ms$ \u5de6\u53f3\u3002\u7ebf\u6bb5\u6811\u7684 $O(n \\log n)$ \u505a\u6cd5\u5927\u7ea6\u5728 $200 -300ms$\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\n#define pb push_back\n#define mp make_pair\n#define lsh(i) (1 << (i))\n#define lshll(i) (1LL << (i))\n#define repn(i, n) for (int (i) = 1; (i) <= (int)n; (i)++)\n#define rep(i, n) for (int (i) = 0; (i) < (int)n; (i)++)\nconst int INF = 0x3f3f3f3f;\nconst long double EPS = 1e-6;\nconst int BL = 5;\nconst int N = 100010;\nint size = 0;\nvector <int> a;\nint main() {\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\tint n; cin >> n;\n\twhile (n--) {\n\t\tstring op; cin >> op;\n\t\tif (op == \"add\") {\n\t\t\tint x;\n\t\t\tcin >> x;\n\t\t\ta.insert(lower_bound(a.begin(), a.end(), x), x);\n\t\t}\n\t\telse if (op == \"del\") {\n\t\t\tint x;\n\t\t\tcin >> x;\n\t\t\ta.erase(lower_bound(a.begin(), a.end(), x));\n\t\t}\n\t\telse if (op == \"sum\") {\n\t\t\tlong long ans = 0;\n\t\t\tfor (int i = 2; i < (int)a.size(); i += 5) ans += a[i];\n\t\t\tcout << ans << endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1577632139,
        "uid": 87696,
        "name": "Lily_White",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF85D \u3010Sum of Medians\u3011"
    },
    {
        "content": "## \u503c\u57df\u7ebf\u6bb5\u6811\u505a\u6cd5\n\n~~[qvzeyang](https://www.luogu.com.cn/user/422299)\u8bf4\uff1a\u201c\u5c31\u8fd9**\u9898\u4e5f\u80fd\u7d2b\uff1f\u9876\u591a\u662f\u4e2a\u7eff\u7684\uff01\u201d~~\n\n\u503c\u57df\u7ebf\u6bb5\u6811\uff08\u52a8\u6001\u5f00\u70b9\uff09\uff0c\u6bcf\u4e2a\u70b9\u7ef4\u62a4\u4e00\u4e2a\u6570\u7ec4 $d[i][j](j \\le 5)$\uff0c\u8868\u793a\u5728\u70b9 $i$ \u5bf9\u5e94\u7684\u533a\u95f4\u5185\u7b2c $k \\times 5 + j (k \\in   N)$ \u4e2a\u6570\u7684\u503c\u7684\u548c\u3002\n\n#### \u5982\u4f55 pushup\uff1f\n\n\u8bbe\u5f53\u5148\u5904\u7406\u5230\u70b9 $x$ \u4e86\uff0c\u5de6\u513f\u5b50\u8bb0\u4f5c $ls$\uff0c \u53f3\u513f\u5b50\u8bb0\u4f5c $rs$\uff0c $sz[i]$ \u8868\u793a $i$ \u5bf9\u5e94\u533a\u95f4\u5185\u7684\u70b9\u7684\u4e2a\u6570\u3002\n\n\u5148\u770b $ls$\uff0c \u663e\u7136\u6709 $d[x][j] = d[ls][j]$\uff1b\n\n\u5982\u679c $sz[ls] = 0$\uff0c\u76f4\u63a5\u6709 $d[x][j] = d[rs][j]$\uff1b\n\n\u5982\u679c $sz[ls] = 1$\uff0c\u90a3\u4e48\u53f3\u513f\u5b50\u8981\u7a7a 4 \u4e2a\u4f4d\u7f6e\uff0c\u6709 $d[x][j] = d[ls][j] + d[rs][(j + 5) \\mod 5]$\uff1b\n\n\u5982\u679c $sz[ls] = 2$\uff0c\u53f3\u513f\u5b50\u8981\u7a7a 3 \u4e2a\u4f4d\u7f6e\uff0c\u6709 $d[x][j] = d[ls][j] + d[rs][(j + 4) \\mod 5]$\uff1b\n\n\u4f9d\u6b64\u7c7b\u63a8\u3002\u3002\u3002\n\n\u6613\u5f97 $d[x][j] = d[ls][j] + d[rs][(j + (6 - sz[ls] \\mod 5) \\mod 5) \\mod 5] $\u3002\n\n\u5269\u4e0b\u7684\u5c31\u662f\u4e2a\u666e\u666e\u901a\u901a\u7684\u503c\u57df\u7ebf\u6bb5\u6811\u4e86\u3002\n\ncode:\n\n```\n#include<bits/stdc++.h>\n#define int long long\n//#define ls(x) x << 1\n//#define rs(x) x << 1 | 1\nusing namespace std;\nint n, m, root;\nchar c[20];\nint ch[2000010][2];\nint d[2000010][6], cnt, sz[2000010];\nvoid pushup(int x, int l, int r){//\u6838\u5fc3\u4ee3\u7801\n\tint rr = (6 - sz[ch[x][0]] % 5) % 5;\n\tfor(int i = 1, j = rr; i <= 5; i++){\n\t\td[x][i] = d[ch[x][0]][i] + d[ch[x][1]][j];\n\t\tj++;\n\t\tj %= 5;\n\t}\n\td[x][0] = d[x][5];\n\tsz[x] = sz[ch[x][0]] + sz[ch[x][1]];\n}\nvoid add(int &x, int l, int r, int pl, int dat){\n\tif(!x)//\u52a8\u6001\u5f00\u70b9\n\t\tx = ++cnt;\n\tif(l == r){\n\t\td[x][1] = dat == 1 ? pl : 0;//\u6ce8\u610f\u522b\u5fd8\u4e86\u5220\u9664\u64cd\u4f5c\n\t\tsz[x] += dat;\n\t\treturn;\n\t}\n\tint mid = l + r >> 1;\n\tif(pl <= mid)\n\t\tadd(ch[x][0], l, mid, pl, dat);\n\telse\n\t\tadd(ch[x][1], mid + 1, r, pl, dat);\n\tpushup(x, l, r);\n}\nsigned main(){\n\tscanf(\"%lld\", &n);\n\twhile(n--){\n\t\tscanf(\"%s\", c + 1);\n\t\tif(c[1] == 'a'){\n\t\t\tint x;\n\t\t\tscanf(\"%lld\", &x);\n\t\t\tadd(root, 1, 1000000000, x, 1);\n\t\t}\n\t\telse if(c[1] == 'd'){\n\t\t\tint x;\n\t\t\tscanf(\"%lld\", &x);\n\t\t\tadd(root, 1, 1000000000, x, -1);\n\t\t}\n\t\telse{\n\t\t\tprintf(\"%lld\\n\", d[root][3]);\n\t\t}\n\t}\n}\n```",
        "postTime": 1639966945,
        "uid": 169422,
        "name": "v\u0435ctorwyx",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF85D \u3010Sum of Medians\u3011"
    },
    {
        "content": "\u8003\u8651\u7ef4\u62a4\u7684\u4e1c\u897f\u548c\u6392\u5e8f\u540e\u7684\u4e0b\u6807\u5728 $5$ \u7684\u6a21\u610f\u4e49\u4e0b\u6709\u5173\u3002           \n\n\u7ef4\u62a4\u5e73\u8861\u6811\u4e0a\u6bcf\u4e2a\u8282\u70b9\uff0c\u5728\u5f53\u524d\u5b50\u6811\u5185\u6570\u6392\u5e8f\u751f\u6210\u7684\u5e8f\u5217\u4e0a\u7684\u6570\u7684\u4e0b\u6807\u5728\u6a21 $5$ \u4e3a $[0,4]$ \u65f6\u7684\u548c\u3002           \n\n\u7136\u540e\u4efb\u610f\u4e24\u4e2a\u513f\u5b50\u52a0\u4e0a\u7236\u4eb2\u53ef\u4ee5\u4ee5\u5982\u4e0b\u65b9\u5f0f\u5408\u5e76\uff1a\n\n```cpp\nvoid update(int x)\n{\n\tfhq[x].siz = fhq[fhq[x].l].siz + fhq[fhq[x].r].siz + 1;\n\tfor(int i = 0 ; i < 5 ; i ++) fhq[x].sum[i] = fhq[fhq[x].l].sum[i];\n\tfor(int i = 0 ; i < 5 ; i ++) fhq[x].sum[(fhq[fhq[x].l].siz + 1 + i) % 5] += fhq[fhq[x].r].sum[i];\n\tfhq[x].sum[(fhq[fhq[x].l].siz + 1) % 5] += fhq[x].val;\n}\n```\n\n\u7136\u540e\u5c31\u505a\u5b8c\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n)$\u3002\n\n",
        "postTime": 1636635497,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF85D Sum of Medians"
    },
    {
        "content": "# \u524d\u8a00\n[\u535a\u5ba2\u56ed\u4f53\u9a8c\u66f4\u4f73](https://www.cnblogs.com/C202202chenkelin/p/15002494.html)\n\n[\u9898\u76ee\u94fe\u63a5\uff1aCodeForces](https://codeforces.com/problemset/problem/85/D)\n\n\u7801\u5b8c\u4e4b\u540e\u53bb\u770b\u9898\u89e3\uff0c\u4ee3\u7801\u90fd\u597d\u77ed\u2026\u2026\n\n\u7ec8\u4e8e\u6ca1\u6709\u7528\u5feb\u8bfb\u5566~\n# \u9898\u610f\n\u5bf9\u4e8e\u4e00\u4e2a\u521d\u59cb\u4e3a\u7a7a\u7684\u96c6\u5408\uff0c\u6709\u4e09\u79cd\u64cd\u4f5c\uff1a\n1. add\uff1a\u5411\u96c6\u5408\u91cc\u52a0\u5165\u6570 $x$ \uff0c\u4fdd\u8bc1\u52a0\u5165\u524d\u96c6\u5408\u4e2d\u6ca1\u6709\u6570 $x$ \uff1b\n2. del\uff1a\u4ece\u96c6\u5408\u4e2d\u5220\u9664\u6570 $x$ \uff0c\u4fdd\u8bc1\u5220\u9664\u524d\u96c6\u5408\u4e2d\u6709 $x$ \uff1b\n3. sum\uff1a\u8be2\u95ee\u5c06\u96c6\u5408\u91cc\u7684\u6570\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u540e\uff0c\u6c42\u4e0b\u6807 $i$ \u6ee1\u8db3 $5$ \u4f59 $3$ \u7684\u6570\u7684\u548c\u3002\n\n\u73b0\u6709 $n$ \u6b21\u64cd\u4f5c\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u67e5\u8be2\u64cd\u4f5c\uff0c\u8f93\u51fa\u7b54\u6848\u3002\n# \u601d\u8def\n\u770b\u5230\u63d2\u5165\u3001\u5220\u9664\u3001\u533a\u95f4\u64cd\u4f5c\u800c\u4e14\u4e0d\u8003\u8651\u5e8f\u5217\u7684\u987a\u5e8f\uff0c\u9996\u5148\u5c31\u60f3\u5230\u4e86\u5e73\u8861\u6811\uff08splay\uff09\u3002\n\n\u5148\u6765\u8bf4 splay \u4e2d\u8282\u70b9\u5305\u542b\u7684\u4fe1\u606f\uff1a\n* $wei[5]$ \uff1a\u5f53\u524d\u8282\u70b9\u6392\u5e8f\u540e\u7684\u4e0b\u6807\u5bf9\u4e8e $5$ \u53d6\u6a21\u540e\u4e3a $wei$ \u7684\u4e0b\u6807\uff0c\u5e76\u5b58\u5165\u8be5\u70b9\u7684\u6743\u503c\u3002\u7b80\u5355\u6765\u8bf4\uff0c $wei[j]$ \u5c31\u662f\u5f53\u524d\u8282\u70b9\u5bf9\u4e8e\u4e0b\u6807 $i$ \u6ee1\u8db3 $5$ \u4f59 $j$ \u7684\u6570\u7684\u548c\u7684\u5355\u70b9\u8d21\u732e\u3002\n* $sum[5]$ \uff1a\u5f53\u524d\u8282\u70b9\u6392\u5e8f\u540e\uff0c\u5b50\u6811\u4e2d\u7684 $wei$ \u7684\u548c\u3002\n* \u5176\u4ed6\u7684\u5c31\u662f\u5e73\u5e38\u7684 splay \u4e86\uff0c\u80fd\u6253\u61d2\u6807\u8bb0\u5c31\u884c\u3002\n\n\u5728\u5411\u4e0a update \u91cd\u5851\u8282\u70b9\u4fe1\u606f\u7684\u65f6\u5019 \uff1a \n\n$sum[pos]=sum[ls] + sum[rs] + wei[pos]$\n\t\t\n\u9996\u5148\u5bf9\u4e8e $1$ \u64cd\u4f5c\uff0c\u4e8c\u8bdd\u4e0d\u8bf4\u9996\u5148 insert \u3002\n\n\u5e94\u5f53\u8003\u8651\u5f53\u524d\u8282\u70b9\u7684\u8d21\u732e $wei$ \u3002\u8d21\u732e\u7684\u5927\u5c0f $x$ \u5df2\u77e5\uff0c\u53ea\u9700\u8981\u5f04\u6e05\u695a\u6743\u503c\u5bf9 $1$ ~ $5$ \u54ea\u4e00\u4e2a $wei$ \u505a\u8d21\u732e\u7684\u95ee\u9898\u4e86\u3002\u53ea\u9700\u8981\u67e5\u8be2 $x$ \u524d\u9a71\u7684\u6392\u540d\u52a0 $1$ \u5373\u53ef\u3002\n\n\u518d\u662f\u8003\u8651\u63d2\u5165 $x$ \u5bf9\u4e8e\u5176\u4ed6\u70b9\u7684\u5f71\u54cd\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c\u63d2\u5165 $x$ \u5bf9\u4e8e\u5927\u4e8e $x$ \u7684\u6570\u6709\u5f71\u54cd\uff0c\u4f1a\u4f7f\u5f97\u8fd9\u4e9b\u70b9\u7684 $sum[i]$ \u548c $wei[i]$ \u53d8\u4e3a $sum[(i+1)\\mod5]$ \u548c $wei[(i+1)\\mod5]$ \u3002\u5c06\u6743\u503c\u4e3a $x$ \u7684\u70b9 splay \u5230\u6839\u8282\u70b9\uff0c\u5927\u4e8e $x$ \u7684\u6570\u5168\u90fd\u5728\u5176\u53f3\u5b50\u6811\u4e2d\u4e86\u3002\u7136\u540e\u53ea\u7528\u4fee\u6539\u53f3\u513f\u5b50\u7684 $wei$ \u548c $sum$ \uff0c\u5bf9\u4e8e\u53f3\u513f\u5b50\u7f8e\u7f8e\u5730\u6253\u4e0a\u61d2\u6807\u8bb0\u5c31\u884c\u4e86\u3002\n\n\u7136\u540e\u662f\u5220\u9664\u64cd\u4f5c\uff0c\u73b0\u5c06\u4ed6 splay \u5230\u6839\u8282\u70b9\uff0c\u628a\u4ed6\u7684\u6240\u6709\u6709\u5173\u6743\u503c\u7684\u4fe1\u606f\u6e05\u7a7a\u4e86\uff0c\u907f\u514d\u5bf9\u4e8e\u4e4b\u540e\u7684\u5220\u9664\u64cd\u4f5c\u9020\u6210\u6bc1\u706d\u6027\u7684\u5f71\u54cd\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u5220\u9664 $x$ \u5bf9\u4e8e\u5927\u4e8e $x$ \u7684\u6570\u6709\u5f71\u54cd\uff0c\u4f1a\u4f7f\u5f97\u8fd9\u4e9b\u70b9\u7684 $sum[i]$ \u548c $wei[i]$ \u53d8\u4e3a $sum[(i-1)\\mod5]$ \u548c $wei[(i-1)\\mod5]$ \u3002\u63a5\u4e0b\u6765\u7684\u64cd\u4f5c\u5c31\u7c7b\u4f3c\u4e8e\u64cd\u4f5c1\u91cc\u9762\u7684\u64cd\u4f5c\u4e86\u3002\n\n\u6700\u540e\uff0c\u5c31\u662f\u6700\u7b80\u5355\u7684\u67e5\u8be2\u64cd\u4f5c\u4e86\uff0c\u76f4\u63a5\u8bbf\u95ee\u6839\u8282\u70b9\u7684\u4fe1\u606f\u5c31\u884c\u4e86\u3002\n# Code\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(5n\\log n)$ \uff0c\u6700\u6162\u7684\u70b9 $1372ms$ \u3002\n```cpp\n#include <cstdio>\n#define INF 1e15\n#define int long long\nconst int MAXN = 1e5 + 5;\nstruct Splay_Node {\n\tint fa, cnt, siz, val, tag, son[2], wei[5], sum[5];\n\t#define ls t[pos].son[0]\n\t#define rs t[pos].son[1]\n};\nstruct Splay_Tree {\n\tSplay_Node t[MAXN];\n\tint root, tot, Top, stk[MAXN];\n\tbool Ident(int pos) {\n\t\treturn t[t[pos].fa].son[1] == pos;\n\t}\n\tvoid New(int val, int fa) {\n\t\tt[++tot].fa = fa;\n\t\tt[tot].val = val;\n\t\tt[tot].cnt = t[tot].siz = 1;\n\t}\n\tvoid Build() {\n\t\tNew(-INF, 0);\n\t\troot = tot;\n\t\tNew(INF, root);\n\t\tt[root].son[1] = tot;\n\t}\n\tvoid Update(int pos) {\n\t\tfor(int i = 0; i < 5; i++) t[pos].sum[i] = t[ls].sum[i] + t[rs].sum[i] + t[pos].wei[i];\n\t\tt[pos].siz = t[ls].siz + t[rs].siz + t[pos].cnt;\n\t}\n\tvoid Connect(int pos, int fa, int how) {\n\t\tt[pos].fa = fa;\n\t\tt[fa].son[how] = pos;\n\t}\n\tvoid Push_Down(int pos) {\n\t\tif(!t[pos].tag) return;\n\t\tint tmp[5];\n\t\tif(ls) {\n\t\t\tfor(int i = 0; i < 5; i++) tmp[(i + t[pos].tag + 5) % 5] = t[ls].sum[i];\n\t\t\tfor(int i = 0; i < 5; i++) t[ls].sum[i] = tmp[i];\n\t\t\tfor(int i = 0; i < 5; i++) tmp[(i + t[pos].tag + 5) % 5] = t[ls].wei[i];\n\t\t\tfor(int i = 0; i < 5; i++) t[ls].wei[i] = tmp[i];\n\t\t\tt[ls].tag = (t[ls].tag + t[pos].tag + 5) % 5;\n\t\t}\n\t\tif(rs) {\n\t\t\tfor(int i = 0; i < 5; i++) tmp[(i + t[pos].tag + 5) % 5] = t[rs].sum[i];\n\t\t\tfor(int i = 0; i < 5; i++) t[rs].sum[i] = tmp[i];\n\t\t\tfor(int i = 0; i < 5; i++) tmp[(i + t[pos].tag + 5) % 5] = t[rs].wei[i];\n\t\t\tfor(int i = 0; i < 5; i++) t[rs].wei[i] = tmp[i];\n\t\t\tt[rs].tag = (t[rs].tag + t[pos].tag + 5) % 5;\n\t\t}\n\t\tt[pos].tag = 0;\n\t}\n\tvoid Rotate(int pos) {\n\t\tint fa = t[pos].fa, grand = t[fa].fa;\n\t\tint how1 = Ident(pos), how2 = Ident(fa);\n\t\tConnect(pos, grand, how2);\n\t\tConnect(t[pos].son[how1 ^ 1], fa, how1);\n\t\tConnect(fa, pos, how1 ^ 1);\n\t\tUpdate(fa);\n\t\tUpdate(pos);\n\t}\n\tvoid Splay(int pos, int to) {\n\t\tint tmp = pos;\n\t\tTop = 0;\n\t\tstk[++Top] = tmp;\n\t\twhile(tmp) stk[++Top] = tmp = t[tmp].fa;\n\t\twhile(Top) Push_Down(stk[Top--]);\n\t\tfor(int fa = t[pos].fa; t[pos].fa != to; Rotate(pos), fa = t[pos].fa)\n\t\t\tif(t[fa].fa != to) Ident(pos) == Ident(fa) ? Rotate(fa) : Rotate(pos);\n\t\tif(!to) root = pos;\n\t}\n\tint Find(int pos, int val) {\n\t\tif(!pos) return 0;\n\t\tPush_Down(pos);\n\t\tif(val == t[pos].val) return pos;\n\t\telse if(val < t[pos].val) return Find(ls, val);\n\t\treturn Find(rs, val);\n\t}\n\tvoid Insert(int &pos, int val, int fa) {\n\t\tif(!pos) {\n\t\t\tNew(val, fa);\n\t\t\tSplay(pos = tot, 0);\n\t\t\treturn;\n\t\t}\n\t\tPush_Down(pos);\n\t\tif(val == t[pos].val) {\n\t\t\tt[pos].cnt++;\n\t\t\tSplay(pos, 0);\n\t\t}\n\t\telse if(val < t[pos].val) Insert(ls, val, pos);\n\t\telse Insert(rs, val, pos);\n\t}\n\tvoid Erase(int val) {\n\t\tint pos = Find(root, val);\n\t\tif(!pos) return;\n\t\tif(t[pos].cnt > 1) {\n\t\t\tt[pos].cnt--;\n\t\t\tSplay(pos, 0);\n\t\t\treturn;\n\t\t}\n\t\tSplay(pos, 0);\n\t\tint l = ls, r = rs;\n\t\twhile(t[l].son[1]) l = t[l].son[1];\n\t\twhile(t[r].son[0]) r = t[r].son[0];\n\t\tSplay(l, 0);\n\t\tSplay(r, l);\n\t\tt[r].son[0] = 0;\n\t}\n\tint Query_Rank(int pos, int val) {\n\t\tif(!pos) return 0;\n\t\tif(val == t[pos].val) {\n\t\t\tint res = t[ls].siz + 1;\n\t\t\tSplay(pos, 0);\n\t\t\treturn res;\n\t\t}\n\t\telse if(val < t[pos].val) return Query_Rank(ls, val);\n\t\tint res = t[ls].siz + t[pos].cnt;\n\t\treturn Query_Rank(rs, val) + res;\n\t}\n\tint Query_Pre(int val) {\n\t\tint pos, res, newroot;\n\t\tpos = newroot = root;\n\t\twhile(pos) {\n\t\t\tPush_Down(pos);\n\t\t\tif(t[pos].val < val) {\n\t\t\t\tres = t[pos].val;\n\t\t\t\tpos = rs;\n\t\t\t}\n\t\t\telse pos = ls;\n\t\t}\n\t\tSplay(newroot, 0);\n\t\treturn res;\n\t}\n};\nSplay_Tree tree;\nint n;\nsigned main() {\n\ttree.Build();\n\tscanf(\"%lld\", &n);\n\tchar opt[3];\n\tfor(int i = 1, x; i <= n; i++) {\n\t\tscanf(\"%s\", opt);\n\t\tif(opt[0] == 'a') {\n\t\t\tscanf(\"%lld\", &x);\n\t\t\ttree.Insert(tree.root, x, 0);\n\t\t\tint pre = tree.Query_Pre(x);\n\t\t\tint pos = tree.Find(tree.root, x);\n\t\t\tint prerk = tree.Query_Rank(tree.root, pre);\n\t\t\tprerk %= 5;\n\t\t\ttree.Splay(pos, 0);\n\t\t\ttree.t[pos].wei[prerk] = tree.t[pos].sum[prerk] = x;\n\t\t\tint tmp[5];\n\t\t\tif(tree.rs) {\n\t\t\t\tfor(int i = 0; i < 5; i++) tmp[(i + 1) % 5] = tree.t[tree.rs].sum[i];\n\t\t\t\tfor(int i = 0; i < 5; i++) tree.t[tree.rs].sum[i] = tmp[i];\n\t\t\t\tfor(int i = 0; i < 5; i++) tmp[(i + 1) % 5] = tree.t[tree.rs].wei[i];\n\t\t\t\tfor(int i = 0; i < 5; i++) tree.t[tree.rs].wei[i] = tmp[i];\n\t\t\t\ttree.t[tree.rs].tag += tree.t[pos].tag;\n\t\t\t}\n\t\t\ttree.t[tree.rs].tag++;\n\t\t\ttree.Update(pos);\n\t\t}\n\t\telse if(opt[0] == 'd') {\n\t\t\tscanf(\"%lld\", &x);\n\t\t\tint pos = tree.Find(tree.root, x);\n\t\t\ttree.Splay(pos, 0);\n\t\t\tint tmp[5];\n\t\t\tfor(int i = 0; i < 5; i++) tree.t[pos].wei[i] = tree.t[pos].sum[i] = 0;\n\t\t\tif(tree.rs) {\n\t\t\t\tfor(int i = 0; i < 5; i++) tmp[(i + 4) % 5] = tree.t[tree.rs].sum[i];\n\t\t\t\tfor(int i = 0; i < 5; i++) tree.t[tree.rs].sum[i] = tmp[i];\n\t\t\t\tfor(int i = 0; i < 5; i++) tmp[(i + 4) % 5] = tree.t[tree.rs].wei[i];\n\t\t\t\tfor(int i = 0; i < 5; i++) tree.t[tree.rs].wei[i] = tmp[i];\n\t\t\t\ttree.t[tree.rs].tag += tree.t[pos].tag;\n\t\t\t}\n\t\t\ttree.t[tree.rs].tag--;\n\t\t\ttree.Erase(x);\n\t\t}\n\t\telse printf(\"%lld\\n\", tree.t[tree.root].sum[3]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1626077950,
        "uid": 254733,
        "name": "Night_Bringer",
        "ccfLevel": 0,
        "title": "[\u9898\u89e3] CF85D Sum of Medians"
    },
    {
        "content": "\u56e0\u4e3a$sum$\u64cd\u4f5c\u662f\u6309\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u540e\u7edf\u8ba1\u7b54\u6848\u7684\n\n\u4e8e\u662f\u6211\u4eec\u8003\u8651\u6743\u503c\u7ebf\u6bb5\u6811\n\n$1 <= x <= 10^9$\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5 **\u79bb\u7ebf\u79bb\u6563\u5316** \u6216\u8005 **\u5728\u7ebf\u52a8\u6001\u5f00\u70b9**\n\n\u5148\u5b9a\u4e49\u6570\u7ec4\u5427\n\n$num[o]$\u8868\u793a\u8fd9\u4e00\u6bb5\u6743\u503c\u4e2d\u7684\u5e8f\u5217\u5927\u5c0f\n\n$tree[o][i]$\u8868\u793a\u8fd9\u4e00\u6bb5\u6743\u503c\u4e2d\u7684\u5e8f\u5217 % 5 == $i$\u7684\u548c\n\n$ls[o],rs[o]$\u52a8\u6001\u5f00\u70b9\u7684\u5de6\u53f3\u513f\u5b50\n\n\u52a0\u70b9\u5220\u70b9\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\n\n\u6211\u4eec\u91cd\u70b9\u8003\u8651\u5982\u4f55\u7ef4\u62a4$\\sum{a_i}$\u5176\u4e2d$i$ % 5 == 3\n\n\u8003\u8651\u7ebf\u6bb5\u6811\u5411\u4e0a\u5408\u5e76\n\n\u9996\u5148\u81ea\u7136\u662f$num[o] = num[ls[o]] += num[rs[o]]$\n\n\u7136\u540e\u662f$tree[o][i]$\n\n\u56e0\u4e3a\u7ebf\u6bb5\u6811\u662f\u6309\u7167\u503c\u57df\u5efa\u7acb\u7684\n\n\u6240\u4ee5\u5de6\u5b50\u6811\u7684$tree[ls[o]][i]$\u53ef\u4ee5\u76f4\u63a5\u52a0\u5230$tree[o][i]$\u4e0a\n\n\u53f3\u5b50\u6811\u7684\u5e8f\u5217\u5728\u5f53\u524d$o$\u7684\u5e8f\u53f7\u5e94\u8be5\u662f$num[lson] + pos$\uff0c$pos$\u8868\u793a\u5b83\u5728\u539f\u6765\u53f3\u5b50\u6811\u4e2d\u7684\u5e8f\u53f7\n\n\u6240\u4ee5\u53f3\u5b50\u6811\u7684\u5408\u5e76\u5c31\u662f$tree[rs[o]][(i + num[ls[o]])$% 5 $]$\n\n\u6700\u540e\u7b54\u6848\u5c31\u662f$tree[1][3]$\u5566\uff01\n\n\u6ce8\u610f\u7a7a\u95f4\u5e94\u8be5\u662f$nlog_2n$\n\n```cpp\n#define int long long\n#define mid ((l+r)>>1)\n#define lson (o<<1)\n#define rson (o<<1|1)\n#define R register\n\nconst int MAXN = 1e5 + 10;\nconst int N = 1e9;\n\nint T;\nint tree[MAXN << 5][5], num[MAXN << 5], ls[MAXN << 5], rs[MAXN << 5], tot;\n\ninline void pushup(int o)\n{\n\tnum[o] = num[ls[o]] + num[rs[o]];\n\tfor(R int i = 0; i < 5; i++) tree[o][i] = tree[ls[o]][i] + tree[rs[o]][((i - num[ls[o]]) % 5 + 5) % 5];\n}\n\ninline void add(int &o, int l, int r, int val)\n{\n\tif(!o) o = ++tot;\n\tif(l == r)\n\t{\n\t\tnum[o] = 1;\n\t\ttree[o][1] = val;\n\t\treturn;\n\t}\n\tif(val <= mid) add(ls[o], l, mid, val);\n\telse add(rs[o], mid + 1, r, val);\n\tpushup(o);\n}\n\ninline void del(int o, int l, int r, int val)\n{\n\tif(l == r)\n\t{\n\t\tnum[o] = 0;\n\t\ttree[o][1] = 0;\n\t\treturn;\n\t}\n\tif(val <= mid) del(ls[o], l, mid, val);\n\telse del(rs[o], mid + 1, r, val);\n\tpushup(o);\n}\n\nchar opt[10];\nint x, root;\n\nsigned main()\n{\n\tinto();\n\tcin >> T;\n\twhile(T--)\n\t{\n\t\tcin >> opt;\n\t\tif(opt[0] == 'a') cin >> x, add(root, 1, N, x);\n\t\tif(opt[0] == 'd') cin >> x, del(root, 1, N, x);\n\t\tif(opt[0] == 's') writeln(tree[1][3]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1605223864,
        "uid": 103023,
        "name": "AvA_sleeper",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF85D \u3010Sum of Medians\u3011"
    },
    {
        "content": "\u4f60\u8981\u7ef4\u62a4\u4e00\u4e2a\u96c6\u5408\uff0c\u652f\u6301\u52a0\u5165\u6216\u5220\u9664\u4e00\u4e2a\u6570\uff08\u4fdd\u8bc1\u4efb\u610f\u65f6\u523b\u5143\u7d20\u90fd\u6ca1\u6709\u91cd\u590d\uff0c\u4e14\u5f85\u5220\u9664\u7684\u6570\u4e00\u5b9a\u5728\u96c6\u5408\u91cc\uff09\n\n\u7136\u540e\u6bcf\u6b21\u8be2\u95ee\uff0c\u4f60\u8981\u56de\u7b54\u6392\u5e8f\u540e\uff08\u4ece\u5c0f\u5230\u5927\uff09\u4e0b\u6807\uff08\u4ece1\u5f00\u59cb\uff09\\(\\% 5=3\\)\u7684\u6240\u6709\u6570\u7684\u548c\u3002\n\n\u6240\u6709\u6570\u4e3a\u6b63\u6574\u6570\u4e14\u4e0d\u8d85\u8fc7\\(10^9\\)\n\n\u4e0b\u9762\u5927\u6982\u662f\u4e00\u4e2a\u4e0d\u8981\u52a8\u8111\u5b50\u7684\u505a\u6cd5\uff08\n\n\u9996\u5148\u5efa\u4e00\u68f5\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u7136\u540e\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u51e0\u4e2a\u4e1c\u897f\n\n- \\(cnt\\)\uff0c\u5373\u8fd9\u4e2a\u8282\u70b9\u6240\u4ee3\u8868\u7684\u503c\u57df\u533a\u95f4\u91cc\u6709\u591a\u5c11\u4e2a\u6570\n- \\(s[0..4]\\)\uff0c\\(s[i]\\)\u8868\u793a\u8fd9\u4e2a\u8282\u70b9\u5185\u7684\u6240\u6709\u6570\u6392\u5e8f\u540e\u4e0b\u6807\\(\\% 5=i\\)\u7684\u6570\u7684\u548c\n\u4e0a\u9762\u4e24\u4e2a\u4e1c\u897f\u968f\u4fbf\u7b97\u7b97\u5c31\u597d\u4e86\uff08\u5177\u4f53\u770b\u4ee3\u7801...\uff09\n\n\u7136\u540e\\(10^9\\)\u70b8\u4e86...\u90a3\u5c31\u52a8\u6001\u5f00\u70b9\u5457...\n\n\u975e\u5e38~~\u65e0\u8111~~\u4e14~~\u597d~~\u5199\u7684\u4ee3\u7801\uff1a\n```\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\nconst int N = 1e5 + 10;\n\nstruct node {\n  int lc, rc;\n  ll s[5]; int cnt;\n} t[N * 40];\nint rt = 0, siz = 0;\n\nvoid pushup(int x) {\n  int lc = t[x].lc, rc = t[x].rc, ls = t[lc].cnt;\n  // \u8ba8\u8bba\u5de6\u53f3\u8282\u70b9\n  for (int i = 0; i < 5; i++) t[x].s[i] = t[lc].s[i];\n  for (int i = 0; i < 5; i++) t[x].s[(i + ls) % 5] += t[rc].s[i]; // \u7ef4\u62a4s[0..4]\n  t[x].cnt = t[lc].cnt + t[rc].cnt;\n}\n\nvoid insert(int &x, int l, int r, int p, int v) { // p\u63d2\u5165\u7684\u6570\u7684\u503c\uff0cv=-1\u5220\u9664\uff0cv=1\u52a0\u5165\n  if (!x) x = ++siz; // \u52a8\u6001\u5f00\u70b9 \n  if (l == r) {\n    t[x].cnt += v;\n    t[x].s[1] += 1ll * l * v;\n    return;\n  }\n  int mid = (l + r) >> 1;\n  if (p <= mid) insert(t[x].lc, l, mid, p, v);\n  else insert(t[x].rc, mid + 1, r, p, v);\n  pushup(x);\n}\n\nint main() {\n  char s[23];\n  int _; for (scanf(\"%d\", &_); _; _--) {\n    scanf(\"%s\", s);\n    if (s[0] == 's') printf(\"%lld\\n\", t[rt].s[3]);\n    else {\n      int d = s[0] == 'd' ? -1 : 1, v;\n      scanf(\"%d\", &v);\n      insert(rt, 1, 1e9, v, d);\n    }\n  }\n  return 0;\n}\n\n```\n",
        "postTime": 1590062098,
        "uid": 324226,
        "name": "XSC2021_HZY",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF85D \u3010Sum of Medians\u3011"
    },
    {
        "content": "## Description\n\n\u8ba9\u4f60\u7ef4\u62a4\u4e00\u4e2a\u7c7b\u4f3cstd::set\u7684\u4e1c\u897f\uff0c\u5b9e\u73b0\u4e00\u4e2a\u652f\u6301\u63d2\u5165\u3001\u5220\u9664\u3001\u67e5\u8be2\u5347\u5e8f\u6392\u5e8f\u540e\u7684 $\\sum_{i=1}^{n}[i\\operatorname{mod}5=3]\\times A_{i}$ \u7684\u4e0d\u53ef\u91cd\u96c6\u5408\u3002\n\n## Solution\n\n\u6b63\u89e3\u7ebf\u6bb5\u6811\u6ca1\u8dd1\u3002\u4f46\u662f\u6211\u4eec\u770b\u52303S\u7684\u65f6\u9650 $10^{5}$ \u7684\u6570\u636e\u4ee5\u53ca\u4e00\u8d2f\u7684CF\u6570\u636e\u3002\u6211\u4eec\u6709\u7406\u7531\u8ba4\u4e3a\u8fd9\u9053\u9898vector\u6a21\u62df\u80fd\u8fc7\uff08\u6ed1\u7a3d\n\n\u7136\u540e\u5c31\u771f\u7684\u80fd\u8fc7\uff0cstd::lower_bound\u67e5\u627e\u63d2\u5165\u4ee5\u53ca\u5220\u9664\u7684\u4f4d\u7f6e\u3002\u67e5\u8be2\u7684\u8bdd\u5c31 $i$ \u4ece2\u5f00\u59cb\uff08vector\u4e0b\u6807\u4ece0\u5f00\u59cb\uff0c\u6240\u4ee5\u8981\u51cf\u4e00\uff09\uff0c\u6bcf\u6b21 $i=i+5$ \u7136\u540e\u7d2f\u52a0 $A_{i}$ \u5373\u53ef\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nstd::vector < int > vect;\n\nsigned main() {\n\tint n;\n\tscanf(\"%d\", &n);\n\tfor (int i = 0, x; i < n; ++i) {\n\t\tchar str[5];\n\t\tscanf(\"%s\", str);\n\t\tif (*str == 'a') {\n\t\t\tscanf(\"%d\", &x);\n\t\t\tvect.insert(std::lower_bound(vect.begin(), vect.end(), x), x);\n\t\t} else if (*str == 'd') {\n\t\t\tscanf(\"%d\", &x);\n\t\t\tvect.erase(std::lower_bound(vect.begin(), vect.end(), x));\n\t\t} else {\n\t\t\tlong long res = 0;\n\t\t\tfor (unsigned i = 2; i < vect.size(); i += 5) res += vect[i];\n\t\t\tprintf(\"%lld\\n\", res);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1588342119,
        "uid": 161849,
        "name": "cirnovsky",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF85D \u3010Sum of Medians\u3011"
    },
    {
        "content": "\u6709\u4e00\u4f4d\u5de8\u4f6c\u8bf4\u8001\u5e08\u6559\u4e86\u4ed6\u4eec\u5206\u5757 \u5e03\u7f6e\u4e863\u9053\u7ec3\u4e60 \n\n\u4ed6\u8bf4\u8fd9\u9053\u7d2b\u9898\u592a\u6c34\u4e86 \u4ee5\u81f3\u4e8e\u4ed6\u4e0d\u60f3\u5199 \u4e4b\u540e\u5c31\u8ba9\u7a9d\u6765\u5199\u5462\n\n\u663e\u7136\u7ebf\u6bb5\u6811\u8d3c\u597d\u505a \u4f46\u662f\u5206\u5757\u4e5f\u5f88\u57fa\u7840\n\n\u601d\u8def \uff1a \n\n\u5148\u628a\u6240\u6709\u7684\u64cd\u4f5c\u7684\u6570\u8bfb\u5165 \u79bb\u6563\u5316 \u5206\u5757 \n\n\u4e4b\u540e\u5b9a\u4e49 $Sum_{i}$ \u4e3a\u7b2ci\u5757\u7684\u8d21\u732e \n\n\u4f46\u662f\u7531\u4e8e\u524d\u9762\u6570\u7684\u4e2a\u6570\u4e0d\u540c \u4ea7\u751f\u7684\u8d21\u732e\u4e5f\u662f\u4e0d\u540c\u7684 \n\n\u663e\u7136 \u5728\u4e00\u4e2a\u5757\u7684\u524d\u9762 \u67091\u4e2a\u6570 \u6216\u662f 6\u6570 \u8fd9\u4e2a\u5757\u7684\u8d21\u732e\u662f\u4e00\u6837\u7684\n\n\u8fd9\u4e2a\u65f6\u5019\u53ea\u9700\u8981\u518d\u52a0\u4e00\u4f4d \u8868\u793a\u524d\u9762\u6570\u7684\u4e2a\u6570%5 \n\n\u4e4b\u540e\u5c31\u5f88\u7b80\u5355\u4e86 \u968f\u624b\u5207 \n\n```cpp\n#include <bits/stdc++.h> \n#define Rg register \n#define MAX 100005 \n#define LL long long  \n#define MAXK 5005 \nusing namespace std ; \nint n , pos[MAX] , pio[MAXK] , p[MAX] , len , _n ; \nLL Sum[MAXK][5] , b[MAX] , Tot[MAXK] , All[MAX] ;   \nstruct Node { \n   int opt ;  LL num ; \n} a[MAX] ; \nvoid Add( LL A ) { \n   int t = lower_bound( b+1 , b+1+_n , A ) - b ; \n   int w = pos[t] ; Tot[w] ++ ;  All[t] = A ; \n   memset( Sum[w] , 0 , sizeof(Sum[w] ) ) ;  \n   if( pio[w] == -1 || t < pio[w] ) p[t] = pio[w] , pio[w] = t ; \n   Rg int cnt = 3 ;  \n   for( Rg int i = pio[w] ; ; ) { \n      if( i == -1 ) return ; \n   \t  cnt = cnt == 0 ? 4 : cnt-1 ; \n   \t  Sum[w][cnt] += All[i] ; \n   \t  if( i < t && ( p[i] == -1 || t < p[i] ) ) \n   \t    p[t] = p[i] , p[i] = t ; \n   \t  i = p[i] ; \n   } return ; \n} \nvoid Del( LL A ) {  \n   int t = lower_bound( b+1 , b+1+_n , A ) - b ; \n   int w = pos[t] ; Tot[w] -- ;  All[t] = 0 ; \n   memset( Sum[w] , 0 , sizeof(Sum[w] ) ) ; \n   if( t == pio[w] )   pio[w] = p[t] , p[t] = -1 ; \n   Rg int cnt = 3 ;  \n   for( Rg int i = pio[w] ; ; ) { \n      if( i == -1 ) return ; \n   \t  cnt = cnt == 0 ? 4 : cnt-1 ; \n   \t  Sum[w][cnt] += All[i] ; \n   \t  if( p[i] == t ) p[i] = p[t] , p[t] = -1 ;  \n\t  i = p[i] ;   \n   } \n} \nLL Ask( ) {  \n   int cnt = 0 ; LL Ans = 0 ; \n   for(Rg int i=1; i<=pos[_n] ; i++ )  \n     Ans += Sum[i][cnt] , cnt = ( cnt+Tot[i] ) % 5 ; \n\treturn Ans ;  \n} \nsigned main() { string S ; \n  ios::sync_with_stdio(false) ; \n  cin.tie(0) ; cout.tie(0) ; \n  memset( p , -1 , sizeof(p) ) ; \n  memset( pio , -1 , sizeof(pio) ) ; \n  cin >> n ; \n  for(Rg int i=1; i<=n; i++) { \n    cin >> S  ;  \n    if( S[0] == 's' ) a[i].opt = 3 ;  \n    if( S[0] == 'a' ) a[i].opt = 1 , cin >> a[i].num , b[++len] = a[i].num ; \n    if( S[0] == 'd' ) a[i].opt = 2 , cin >> a[i].num ; \n  } sort( b+1 , b+1+len ) ; \n  _n = unique( b+1 , b+1+len ) -b-1 ; \n  Rg int block = sqrt( _n ) ; \n  for(Rg int i=1; i<=_n; i++) \n    pos[i] = (i-1)/block+1 ; \n  for(Rg int i=1; i<=n; i++) { \n    if( a[i].opt == 3 ) cout << Ask() << endl; \n    if( a[i].opt == 1 ) Add( a[i].num ) ; \n    if( a[i].opt == 2 ) Del( a[i].num ) ; \n  } \n  return 0 ; \n}\n```\n\n\n",
        "postTime": 1577790548,
        "uid": 100114,
        "name": "hater",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF85D \u3010Sum of Medians\u3011"
    },
    {
        "content": "\u770b\u5230CF\u4e0aRNG\u7684\u795e\u5947\u7ebf\u6bb5\u6811\uff0c\u8fc7\u6765\u5b89\u5229\u4e00\u6ce2\n\n\n#### \u524d\u7f6e\u4e00\u6ce2\u6280\u80fd\n1. \u5148\u770b\u4e00\u4e0b\u9898\u76ee\u6211\u4eec\u53d1\u73b0\u4f60\u6bcf\u63d2\u5165\u4e00\u4e2a\u6570\uff0c\u5bf9\u4e8e\u6bd4\u4ed6\u5c0f\u7684\u662f\u4e0d\u4f1a\u6709\u4efb\u4f55\u5f71\u54cd\u7684\uff0c\u5f71\u54cd\u7684\u53ea\u6709\u6bd4\u4ed6\u5927\u7684\uff0c\u4e5f\u5c31\u662f\u53f3\u534a\u8fb9\u7684\u6570\u3002\n2. \u660e\u786e\u4e00\u70b9\uff0c\u5982\u679c\u4e00\u4e2a\u6570\u88ab\u79fb\u4e865\u7684\u6574\u6570\u500d\u6b21\u90a3\u76f8\u5f53\u6ca1\u79fb\n\n\t(5\u4e2a\u4e00\u5212\u53d6\u6b63\u4e2d\uff0c\u8fd9\u4e2a\u6570\u53ea\u4e0d\u8fc7\u88ab\u79fb\u5230\u4e86\u53e6\u4e00\u7ec4\u7684\u76f8\u540c\u7684\u4f4d\u7f6e\u800c\u5df2\uff0c\u5bf9\u4e8e\u6700\u7ec8\u7b54\u6848\u7684\u8d21\u732e\u662f\u6ca1\u6709\u6539\u53d8\u7684)\n    \n    -->\u6240\u4ee5\u6211\u4eec\u5f97\u5230\u4e00\u4e2a\u7ed3\u8bba:\u4e00\u4e2a\u6570\u88ab\u79fb\u7684\u6b21\u6570\u76f8\u5f53\u4e8e\u5bf95\u53d6\u6a21\u539a\u5ea6\u540e\u7ed3\u679c \u5373 $cnt[i]mod 5 $ \n3. \u56e0\u4e3a\u63d2\u5165\u4e2d\u5939\u6742\u7740\u6c42\u548c\u64cd\u4f5c\uff0c\u6240\u4ee5\u4f60\u65e0\u6cd5\u9884\u6d4b\u5230\u6700\u7ec8\u5177\u4f53\u54ea\u4e2a\u6570\u4f1a\u6210\u4e3a\u6700\u7ec8\u7684$middle$\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u5f00\u59cb\u7ef4\u62a4\u65f6\uff0c\u5c31\u8981\u7ef4\u62a4\u6240\u6709\u5bf95\u53d6\u4f59\u540e\u6bcf\u4f4d\u4e0a\u7684\u5177\u4f53\u503c\u662f\u591a\u5c11\u3002\n   \u6ca1\u9519\uff0c\u6211\u4eec\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a45\u4e2a\u503c\uff0c\u5373\u533a\u95f4\u4e2d\u6240\u6709\u4e0b\u6807\u6240\u5bf9\u5e94\u7684\u503c\u3002\n4. \u5bf9\u4e8e\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u7684\u8bdd\uff0c\u53ef\u4ee5\u79bb\u7ebf\u5904\u7406.\n\n    \n\u63a5\u7740\u5c31\u8fdb\u5165\u6b63\u9898\n\n \u89c2\u5bdf\u9898\u76ee\uff0c\u9898\u76ee\u4e2d\u4fdd\u8bc1\u6ca1\u6709\u91cd\u590d\u7684\u6570\uff0c\u4e14\u53ea\u5305\u542b\u4e24\u79cd\u64cd\u4f5c\uff1a\u63d2\u5165\u548c\u5355\u70b9\u67e5\u8be2\u8fd9\u4e24\u79cd\u64cd\u4f5c \uff0c\u800c\u4e14\u8fd9\u4e2a\u67e5\u8be2\u8fd8\u662f\n  **\u5bf9\u4e8e\u5806\u9876\u7684\u5355\u70b9\u67e5\u8be2(\u5212\u91cd\u70b9)**\n  \n \u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u6784\u60f3\u521d\u8fd9\u6837\u4e00\u9897\u7ebf\u6bb5\u6811\uff0c\u5c06\u6240\u8c13\u7684$update$ \u548c$query$\n \u5168\u90e8\u8f6c\u6362\u6210\t\u76f4\u63a5\u5bf9\u53f6\u5b50\u8282\u70b9\u7684\u5355\u70b9\u4fee\u6539\uff0c\u548c\u76f4\u63a5\u5bf9\u5806\u9876\u7684\u67e5\u8be2\uff0c\u81f3\u4e8e$pushup$\u7684\u8bdd\u76f4\u63a5\u81ea\u5e95\u5411\u4e0a\u76f4\u63a5\u7ef4\u62a4\u5373\u53ef\n \n Code:\n ```\n \n#include<algorithm>\n#include<cstring>\n#include<iostream>\n#define mk make_pair\n#define foreach(c ,itr) for(__typeof((c).begin())itr=((c).begin());itr!=(c).end();itr++)\n#include <cstdio>\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N = 1<<17;\nint T;\nint n;\nstring s;\nvector<pair<int,int>>query;//first: \u8868\u793a\u5bf9\u5e94\u7684\u64cd\u4f5c second\uff1a\u8868\u793a\u5bf9\u5e94\u7684\u64cd\u4f5c\u503c\nmap<int,int>mp;\nint a[N];\nint cnt[N<<1];\nll sum[N<<1][5];\nint pm[100005];\nvoid pushup(int root){\n    int l = 2*root;\n    int r = 2*root+1;\n    cnt[root] = cnt[l]+cnt[r];\n    for(int i=0;i<5;i++){\n        sum[root][i] = sum[l][i] + sum[r][(i-cnt[l]%5+5)%5];//\u5f53\u524d\u4f4d\u7f6e\u6240\u5bf9\u5e94\u7684\u503c\u7b49\u4e8e\u6ca1\u6709\u53d7\u5230\u5f71\u54cd\u7684\u5de6\u534a\u8fb9\u548c\u5728\u79fb\u52a8\u4f4d\u7f6e\u524d\u7684\u503c\u7684\u548c\u3002\n    }\n}\nint main(){\n    int tmp;\n    scanf(\"%d\\n\",&n);\n    for(int i=0;i<n;i++){\n        cin>>s;\n        if(s[0]=='s'){\n           query.push_back(mk(2,0));//\u6253\u6807\u8bb0\uff0c\u8868\u793a\u5f53\u524d\u6c42\u548c\u64cd\u4f5c\n        }else{\n             scanf(\"%d\\n\",&tmp);\n            if(s[0]=='a')\n                query.push_back(mk(0,tmp));//\u6253\u6807\u8bb0\uff0c\u8868\u793aadd\u64cd\u4f5c\n            else\n                query.push_back(mk(1,tmp));//\u6253\u6807\u8bb0\uff0c\u8868\u793adel\u64cd\u4f5c\n            mp[tmp]=0;//\u8868\u793a\u5f53\u524d\u6570\u5b57\u5b58\u5728\u4e8emp\u4e2d\n        } \n    }\n    foreach(mp,itr){//\u79bb\u6563\u5316\n        (itr->second)=T;pm[T]=(itr->first);T++;\n    }\n    for(int i=0;i<n;i++){\n        int type = query[i].first,x = query[i].second;\n        if(type == 2){//\u9047\u5230\u6c42\u548c\u64cd\u4f5c\uff0c\u76f4\u63a5\u8f93\u51fa\u5806\u9876\u503c\u5373\u53ef\n            printf(\"%lld\\n\",sum[1][2]);\n        }else {\n            int id = N + mp[x];//\u8868\u793a\u4ece\u53f6\u5b50\u8282\u70b9\u5f00\u59cb\n            cnt[id] = 1 - type;//\u5bf9\u53f6\u5b50\u8282\u70b9\u7684\u4fee\u6539\n            sum[id][0]=(1-type)*x;\n            for(int j=id/2;j>=1;j/=2)pushup(j);//\u81ea\u5e95\u5411\u4e0a\u4e00\u6b21\u66f4\u65b0\n        }\n    }\n    return 0;\n}\n ```\n \n ",
        "postTime": 1556990055,
        "uid": 38852,
        "name": "Sakurajima_Mai",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF85D \u3010Sum of Medians\u3011"
    }
]