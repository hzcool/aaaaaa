[
    {
        "content": "\u8003\u8651\u7b2c $i$ \u4e2a\u8d77\u8df3\u70b9\u6784\u9020\u4e24\u4e2a\u7279\u6b8a\u70b9\uff0c\u5176\u5750\u6807\u5206\u522b\u4e3a $x_i-p_i$ \u548c $x_i+d_i$\uff0c\u540c\u65f6\u5c06\u8d77\u70b9\u7ec8\u70b9\u8bbe\u4e3a\u7279\u6b8a\u70b9\uff0c\u6700\u540e\u4f1a\u5f97\u5230\u82e5\u5e72\u7279\u6b8a\u70b9\uff0c\u8003\u8651\u4ee5\u5750\u6807\u4e3a\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u7136\u540e\u5728\u76f8\u90bb\u70b9\u4e4b\u95f4\u8fde\u6b63\u8fb9\u548c\u53cd\u8fb9\uff0c\u5bf9\u5e94\u5411\u5de6\u5411\u53f3\u8d70\uff1b\u5bf9\u4e8e\u6bcf\u4e2a\u8d77\u8df3\u70b9\uff0c\u76f4\u63a5\u4ece $x_i-p_i$ \u5411 $x_i+d_i$ \u8fde\u8fb9\uff0c\u6743\u503c\u4e3a $p_i+t_i$\uff0c\u82e5\u8d70\u8fd9\u6761\u8fb9\u5219\u4ee3\u8868\u7740\u5728\u7b2c $i$ \u4e2a\u70b9\u8d77\u8df3\uff0c\u6700\u540e\u8dd1\u6700\u77ed\u8def\u5c31\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\u3002  \n\u7136\u800c\u65b9\u6848\u5b9e\u5728\u662f\u592a\u8349\u4e86\uff0c\u4e0d\u77e5\u9053\u600e\u4e48\u641e\uff0c\u5148\u653e\u4e2a\u6c42\u6700\u77ed\u65f6\u95f4\u7684\u7a0b\u5e8f\u5728\u8fd9\u5427\u3002\n```cpp\n#include<bits/stdc++.h>\n#define N 500000\n#define reg register\n#define inl inline\nusing namespace std;\nmap <int,int> mp;\nmap <int,int> f;\nint cnt,fst[N+5],nxt[N+5],to[N+5],w[N+5];\nint n,L,nod[N+5],tot,x[N+5],d[N+5],t[N+5],p[N+5],S=1,T;\nlong long dis[N+5];\nstruct Node\n{\n\tint u;\n\tlong long dis;\n\tfriend bool operator < (const Node &x,const Node &y)\n\t{\n\t\treturn x.dis<y.dis;\n\t}\n};\npriority_queue <Node> q;\ninl void AddEdge(reg int u,reg int v,reg int c)\n{\n\t//printf(\"   # ( %d \u00a1\u00fa %d ) : %d\\n\",u,v,c);\n\tto[++cnt]=v;\n\tnxt[cnt]=fst[u];\n\tfst[u]=cnt;\n\tw[cnt]=c;\n}\ninl void Dijkstra()\n{\n\tmemset(dis,60,sizeof(dis));\n\tdis[S]=0;\n\tq.push((Node){S,dis[S]});\n\twhile(!q.empty())\n\t{\n\t\treg Node now=q.top();\n\t\tq.pop();\n\t\treg int u=now.u;\n\t\treg long long d=now.dis;\n\t\t//printf(\" $ : %d\\n\",u);\n\t\tif(d!=dis[u]) continue;\n\t\tfor(reg int i=fst[u];i;i=nxt[i])\n\t\t{\n\t\t\treg int v=to[i];\n\t\t\tif(dis[v]>dis[u]+w[i])\n\t\t\t{\n\t\t\t\tdis[v]=dis[u]+w[i];\n\t\t\t\tq.push((Node){v,dis[v]});\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d %d\",&n,&L);\n\tnod[++tot]=0; nod[++tot]=L;\n\tmp[0]=mp[L]=1;\n\tfor(reg int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d %d %d %d\",&x[i],&d[i],&t[i],&p[i]);\n\t\treg int n1=x[i]-p[i],n2=x[i]+d[i];\n\t\tif(n1>=0 && !mp[n1])\n\t\t{\n\t\t\tmp[n1]=1;\n\t\t\tnod[++tot]=n1;\n\t\t}\n\t\tif(n1>=0 && n2>=0 && !mp[n2])\n\t\t{\n\t\t\tmp[n2]=1;\n\t\t\tnod[++tot]=n2;\n\t\t}\n\t}\n\tsort(nod+1,nod+tot+1);\n\tfor(reg int i=1;i<tot;i++)// i \u00b5\u00e3\u00b1\u00e0\u00ba\u00c5   nod [ i ] \u00d7\u00f8\u00b1\u00ea \n\t{\n\t\treg int d=nod[i+1]-nod[i];\n\t\tAddEdge(i,i+1,d); AddEdge(i+1,i,d);\n\t\tif(nod[i]==L) T=i;\n\t\tmp[nod[i]]=i;\n\t}\n\tif(nod[tot]==L) T=tot;\n\tmp[nod[tot]]=tot;\n\t//for(reg int i=1;i<=tot;i++) printf(\" $ %d -> %d\\n\",nod[i],mp[nod[i]]);\n\tfor(reg int i=1;i<=n;i++)\n\t{\n\t\tif(x[i]-p[i]<0) continue;\n\t\treg int l=mp[x[i]-p[i]],r=mp[x[i]+d[i]];\n\t\tAddEdge(l,r,p[i]+t[i]);\n\t}\n\tDijkstra();\n\tprintf(\"%lld\\n\",dis[T]);\n\treturn 0;\n}\n```",
        "postTime": 1601903123,
        "uid": 23243,
        "name": "VenusM1nT",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF141D \u3010Take-off Ramps\u3011"
    },
    {
        "content": "\u9898\u610f\u5f88\u660e\u4e86\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8be6\u7ec6\u89e3\u91ca\u4e86\u3002   \n\u6211\u4eec\u5b9a\u4e49\u201c\u8d77\u8df3\u70b9\u201d\u4e3a$x_i-p_i$\u70b9\uff0c\u201c\u843d\u5730\u70b9\u201d\u4e3a$x_i+d_i$\uff0c\u5bf9\u8d77\u8df3\u70b9\u548c\u843d\u5730\u70b9\u5206\u522b\u6392\u5e8f\uff0c\u7136\u540e\u6309\u4e0b\u6807\u987a\u5e8f\u6392\u5e8f\uff0c\u5bf9\u4e8e\u76f8\u90bb\u8d77\u8df3\u70b9\u548c\u8d77\u8df3\u70b9\u4e4b\u95f4\u3001\u843d\u5730\u70b9\u4e0e\u843d\u5730\u70b9\u4e4b\u95f4\u8fde\u63a5\u4e00\u6761\u957f\u5ea6\u4e3a\u4e0b\u6807\u5dee\u7684\u53cc\u5411\u8fb9\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5bf9\u5e94\u7684\u8d77\u8df3\u70b9\u548c\u843d\u5730\u70b9\u8fde\u63a5\u4e00\u6761\u5355\u5411\u8fb9\uff0c\u8fb9\u6743\u4e3a$t_i+p_i$\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u843d\u5730\u70b9\uff0c\u4e0e\u79bb\u4ed6\u5411\u540e\u6700\u8fd1\u7684\u8d77\u8df3\u70b9\u8fde\u8fb9\uff0c\u7136\u540e\u5efa\u7acb\u4ee3\u8868$0$\u548c$L$\u7684\u6e90\u70b9\uff0c\u8dd1\u4e2a\u6700\u77ed\u8def\u5373\u53ef$AC$\n\n\u4e3a\u4e86\u65b9\u4fbf\u7406\u89e3\uff0c\u6837\u4f8b\u4e8c\u7684\u5efa\u56fe\u5982\u4e0b\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/gmtjnclf.png)",
        "postTime": 1601896497,
        "uid": 105922,
        "name": "Stay_Hungry",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF141D \u3010Take-off Ramps\u3011"
    },
    {
        "content": "\u7ed9\u51fa\u4e00\u79cd dp \u7684\u505a\u6cd5\u3002\n\n\u5148\u6309 $x_i$ \u6392\u4e2a\u5e8f\uff0c\u8bbe\u4e00\u4e2a $f_i$ \u8868\u793a\u5230\u8fbe\u7b2c $i$ \u4e2a\u8df3\u677f\u7684 $x_i$ \u5904\u4e14\u53ef\u4ee5\u4f7f\u7528\u7684\u60c5\u51b5\u4e0b\uff0c\u6240\u9700\u7684\u6700\u5c0f\u65f6\u95f4\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u80fd\u8f6c\u79fb\u5230 $i$ \u7684 $j$\uff0c\u4e00\u5b9a\u6ee1\u8db3 $x_j\\le x_i$\uff0c\u8fd9\u662f\u6392\u5e8f\u7684\u539f\u56e0\u3002\u4e14\u4e00\u5b9a\u662f\u5148\u4ece $x_j+d_j$ \u8d70\u5230 $x_i-p_i$\uff0c\u518d\u5230 $x_i$\uff0c\u624d\u80fd\u6ee1\u8db3\u80fd\u4f7f\u7528\u7684\u6761\u4ef6\uff0c\u53ef\u4ee5\u81ea\u5df1\u753b\u56fe\u7406\u89e3\u4e00\u4e0b\u3002\n\n\u8fd9\u6837\u5b50\u5c31\u53ef\u4ee5\u5199\u51fa dp \u5f0f\u5b50\uff08 \u8fdb\u884c\u4e86\u4e00\u5b9a\u7684\u7b80\u5316 \uff09\n\n$$\nf_i=\\min\\{f_j+t_j+dist(x_j+d_j,x_i-p_i)+p_i\\}\n$$\n\n$dist$ \u4e3a\u4e24\u8005\u4f5c\u5dee\u7684\u7edd\u5bf9\u503c\uff0c\u5373\u4e3a\u4e24\u70b9\u95f4\u8ddd\u79bb\n\n\u8003\u8651\u8fdb\u884c\u4f18\u5316\uff0c\u5c06\u5173\u4e8e $j$ \u7684\u9879\u548c $i$ \u5206\u5f00\uff0c\u7edd\u5bf9\u503c\u7684\u5904\u7406\u548c [\u8fd9\u9898](https://www.luogu.com.cn/problem/P2885) \u5f88\u7c7b\u4f3c\uff0c\u5c06\u5176\u5206\u4e3a $x_j+d_j\\le x_i-p_i$ \u548c $x_j+d_j\\ge x_i-p_i$ \u4e24\u79cd\u60c5\u51b5\uff0c\u4f5c\u5dee\u7684\u7edd\u5bf9\u503c\u5206\u522b\u4e3a $-(x_j+d_j)+(x_i-p_i)$ \u548c $(x_j+d_j)-(x_i-p_i)$\u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u5c06\u6709\u5173 $i$ \u548c $j$ \u7684\u9879\u5206\u5f00\uff0c\u7136\u540e\u7528\u524d\u3001\u540e\u7f00 min \u7ef4\u62a4\u5373\u53ef\u3002\n\n\u4f46\u662f $L$ \u5f88\u5927\uff0c\u6240\u4ee5\u8fd8\u8981\u628a\u70b9\u90fd\u79bb\u6563\u5316\u4e00\u4e0b\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u74f6\u9888\u5728\u6392\u5e8f\uff0c\u6240\u4ee5\u8fd8\u662f $O(n\\log n)$\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u53ca\u7ec6\u8282\u89c1\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define INF 0x3f3f3f3f3f3f3f3fll\nusing namespace std;\nstruct node {\n    ll x,d,t,p;\n    int id;\n} a[100005];\ninline bool cmpx(node u,node v) {\n    if(u.x==v.x) return u.id<v.id;\n    return u.x<v.x;\n}\nll f[100005];\nint pos[100005];\nmap<ll,int> val;\n//\u8fd9\u91cc\u6ca1\u6709\u7528\u6570\u7ec4\uff0c\u800c\u662f\u76f4\u63a5\u7528\u4e86\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u524d\u540e\u7f00min\n//\u4f46\u662f\u5bf9\u6574\u4f53\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5e76\u4e0d\u5f71\u54cd\n#define lowbit(x) x&-x\nll cnt,pre[200005],suf[200005];\nint prepos[200005],sufpos[200005];\ninline void addpre(ll x,ll k,int pos) {\n    for(; x<=cnt; x+=lowbit(x))\n        if(k<pre[x]) {\n            pre[x]=k;\n            prepos[x]=pos;\n        }\n}\ninline void addsuf(ll x,ll k,int pos) {\n    for(; x<=cnt; x+=lowbit(x))\n        if(k<suf[x]) {\n            suf[x]=k;\n            sufpos[x]=pos;\n        }\n}\ninline pair<ll,int> querypre(ll x) {\n    ll res=INF;\n    int pos=-1;\n    for(; x; x-=lowbit(x))\n        if(pre[x]<res) {\n            res=pre[x];\n            pos=prepos[x];\n        }\n    return make_pair(res,pos);\n}\ninline pair<ll,int> querysuf(ll x) {\n    ll res=INF;\n    int pos=-1;\n    for(; x; x-=lowbit(x))\n        if(suf[x]<res) {\n            res=suf[x];\n            pos=sufpos[x];\n        }\n    return make_pair(res,pos);\n}\nvector<ll> tmp;\nint main() {\n    ll n,L;\n    scanf(\"%lld%lld\",&n,&L);\n    for(int i=1; i<=n; i++) {\n        scanf(\"%lld%lld%lld%lld\",&a[i].x,&a[i].d,&a[i].t,&a[i].p),a[i].id=i;\n        tmp.push_back(a[i].x+a[i].d);\n        tmp.push_back(a[i].x-a[i].p);\n    }\n    //\u5728\u7ec8\u70b9\u4e5f\u5efa\u4e00\u4e2a\u8df3\u677f\uff0c\u65b9\u4fbf\u76f4\u63a5dp\u8f6c\u79fb\u7b97\u51fa\u7b54\u6848\n    sort(a+1,a+n+1,cmpx),n++,a[n].x=L,a[n].p=a[n].d=0,a[n].id=n;\n\n    //\u5bf9\u6709\u7528\u7684\u5750\u6807\u79bb\u6563\u5316\n    tmp.push_back(L),sort(tmp.begin(),tmp.end());\n    for(int i=0; i<tmp.size(); i++)\n        if(val.find(tmp[i])==val.end()) val[tmp[i]]=++cnt;\n\n    memset(f,0x3f,sizeof(f));\n    memset(pre,0x3f,sizeof(pre));\n    memset(suf,0x3f,sizeof(suf));\n    for(int i=1; i<=n; i++) {\n        if(a[i].x>=a[i].p) f[i]=a[i].x;\n        else continue;\n        //\u5f53\u4e0a\u4e2a\u8df3\u677f\u843d\u70b9\u5728\u8fd9\u4e2a\u70b9\u4e4b\u524d\n        pair<ll,int> preans=querypre(val[a[i].x-a[i].p]);\n        if(preans.first+(a[i].x-a[i].p)+a[i].p<f[i]) {\n            f[i]=preans.first+(a[i].x-a[i].p)+a[i].p;\n            pos[a[i].id]=preans.second;\n        }\n        //\u5f53\u4e0a\u4e2a\u8df3\u677f\u843d\u70b9\u5728\u8fd9\u4e2a\u70b9\u4e4b\u540e\n        pair<ll,int> sufans=querysuf(cnt-val[a[i].x-a[i].p]+1);\n        if(sufans.first-(a[i].x-a[i].p)+a[i].p<f[i]) {\n            f[i]=sufans.first-(a[i].x-a[i].p)+a[i].p;\n            pos[a[i].id]=sufans.second;\n        }\n        //\u66f4\u65b0\u524d\u540e\u7f00min\n        addpre(val[a[i].x+a[i].d],f[i]+a[i].t-(a[i].x+a[i].d),a[i].id);\n        addsuf(cnt-val[a[i].x+a[i].d]+1,f[i]+a[i].t+(a[i].x+a[i].d),a[i].id);\n        //\u6ce8\u610f\u6709\u5173pos\u7684\u76f8\u5173\u503c\u90fd\u8981\u7528\u539f\u4f4d\u7f6e\n    }\n    cout<<f[a[n].id]<<'\\n';\n    vector<int> ans;\n    int now=n;\n    while(pos[now]) {\n        ans.push_back(pos[now]);\n        now=pos[now];\n    }\n    cout<<ans.size()<<'\\n';\n    for(int i=ans.size()-1; i>=0; i--) cout<<ans[i]<<\" \";\n    return 0;\n}\n```",
        "postTime": 1646898502,
        "uid": 105865,
        "name": "Jur_Cai",
        "ccfLevel": 0,
        "title": "CF141D \u9898\u89e3"
    },
    {
        "content": "[\u9898\u9762](https://www.luogu.com.cn/problem/CF141D)\n\n\u70b9\u6570\uff1a2300\n\n#### \u6807\u7b7e\uff1a\n\n\u56fe\u7684\u5efa\u7acb\uff0c\u6700\u77ed\u8def\n\n#### \u5206\u6790\uff1a\n\n\u6ce8\u610f\u5230 $L \\leq 10^9$ \u8bf4\u660e\u590d\u6742\u5ea6\u4e0e $L$ \u65e0\u5173\uff08\u8fd9\u9898\u660e\u663e\u5f88\u56fe\u8bba\uff09\u3002\n\n\u8fd9\u9898\u4e2d\u53ea\u6709\u4e24\u79cd\u65b9\u6cd5\uff0c\u8d70\u548c\u8df3\u3002\u8003\u8651\u8df3\u7684\u95ee\u9898\u3002\u4e3a\u65b9\u4fbf\u5927\u4f6c\u4eec\u601d\u8003\uff0c\u4e0b\u6587\u4e2d\u5c06\u6211\u81ea\u5df1\u5efa\u7684\u70b9\u7edf\u79f0\u865a\u70b9\u3002\n\n\u6ce8\u610f\u9898\u76ee\u4e2d\u8df3\u53ea\u80fd\u5728\u8fde\u7eed\u8d70\u4e86 $p_i$ \u6b65\u4e4b\u540e\u5411\u53f3\u4fa7\u8df3 $d_i$ \u6b65\uff0c\u4e14\u4e0d\u80fd\u5f80\u56de\u8df3\uff0c\u4e0d\u96be\u60f3\u5230\u5728 $x_i-p_i$ \u7684\u5730\u65b9\u5efa\u4e00\u6761\u6307\u5411 $x_i+d_i$ \u7684\u8fb9\uff0c\u5e76\u5728\u8fd9\u4e24\u4e2a\u4f4d\u7f6e\u8bbe\u7f6e\u865a\u70b9\u3002\n\n\u4e3a\u65b9\u4fbf\u5904\u7406\u8d70\u7684\u60c5\u51b5\u6211\u4eec\u628a\u6240\u6709\u7684 $x_i$ \u548c $L$ \u8fd8\u6709 $0$ \u4e5f\u52a0\u5165\u865a\u70b9\u4e4b\u4e2d\u3002\u6700\u540e\u6211\u4eec\u628a\u865a\u70b9\u6309\u7167 $x$ \u5347\u5e8f\u6392\u5e8f\u5e76\u628a\u76f8\u90bb\u7684\u70b9\u8fde\u5728\u4e00\u8d77\uff0c\u5c31\u662f\u8d70\u7684\u60c5\u51b5\u3002\n\n#### \u6ce8\u610f\uff1a\n\n\u4e0d\u8981\u76f4\u63a5\u628a\u5efa\u865a\u70b9\u7684\u6570\u7ec4\u6392\u5e8f\u3002\u3002\u3002\u4e0d\u7136\u4f60\u524d\u9762\u5b58\u5728 map \u91cc\u7684\u7f16\u53f7\u5c31\u4e71\u4e86\u3002\u3002\u3002\uff08\u53ef\u80fd\u53ea\u662f\u6211\u592a\u83dc\u4e86\uff09\n\n\u628a\u7b2c $i$ \u4e2a\u70b9\u7684\u8df3\u8dc3\u8d77\u70b9\uff0c\u5373 $x_i-p_i$\uff0c\u76f4\u63a5\u8fde\u5230\u7b2c $i-1$ \u4e2a\uff0c\u5373\u7b2c $x_{i-1}$ \u4e2a\u865a\u70b9\u662f\u4e00\u79cd\u5178\u578b\u7684\u9519\u8bef\u60f3\u6cd5\uff0c\u56e0\u4e3a\u5982\u679c $p_i \\geq x_i-x_{i-1}$ \u7684\u8bdd $x_i-p_i$ \u5e94\u8be5\u8fde\u7b2c $i-2$ \u865a\u70b9\u800c\u4e0d\u662f\u7b2c $i-1$\u865a\u70b9\u3002\n\n\u6ce8\u610f\u8d70\u7684\u60c5\u51b5\u5e94\u8be5\u4e3a\u53cc\u5411\u8fb9\uff0c\u800c\u8df3\u7684\u60c5\u51b5\u5e94\u8be5\u4e3a\u5355\u5411\u8fb9\u3002\n\n\u56e0\u4e3a\u5728\u8d70\u5230\u53e6\u4e00\u4e2a\u865a\u70b9\u4e4b\u524d\u65e0\u6cd5\u8fdb\u884c\u8df3\uff0c\u6240\u4ee5\u8fd9\u6837\u5efa\u8fb9\u7684\u6b63\u786e\u6027\u662f\u663e\u7136\u7684\u3002\n\n\u4e3a\u4ec0\u4e48\u8981\u5efa\u865a\u70b9\u5462\uff1f\u56e0\u4e3a $L \\leq 10^9$ \u663e\u7136\u4e0d\u80fd\u4f7f\u7528\u5750\u6807\u4e3a\u70b9\u3002\n\n\u65b9\u6848\u7684\u8bdd\u5c31\u5728 dijkstra \u7684\u8fc7\u7a0b\u4e2d\u8bb0\u5f55\u8def\u5f84\u5373\u53ef\u3002\n\n\u603b\u590d\u6742\u5ea6\uff1a$O(\u6392\u5e8f\u590d\u6742\u5ea6+dijstra\u7684\u590d\u6742\u5ea6+map\u590d\u6742\u5ea6)$\uff0c\u5927\u81f4\u4e3a $O(m\\log m)$\uff0c\u5373 $O(\u80fd\u8fc7)$\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define mem(a,b) memset(a,b,sizeof(a));\n#define pc putchar\nusing namespace std;\ntypedef long long ll;\nconst ll LLINF=ll(1e18+7);\ninline ll read(){ll read_result=0,is_below_0=0;char now_ch=0;while(!isdigit(now_ch)){is_below_0|=now_ch=='-';now_ch=getchar();}while(isdigit(now_ch)){read_result=(read_result<<3)+(read_result<<1)+(now_ch^48);now_ch=getchar();}return is_below_0?-read_result:read_result;}\ninline void write(ll x){if(x<0){putchar('-');x=-x;}if(x>9){write(x/10);}putchar(x%10+'0');}\nconst ll MAXN=1e6+7,MAXM=1e6+7;\nll n,L,m;\nll head[MAXM],edgenum;\nstruct in\n{\n\tll x,d,t,p,id;\n\tbool operator<(const in& xx)const\n\t{\n\t\treturn x<xx.x;\n\t}\n}a[MAXM],b[MAXM];\nmap<ll,ll>mp,mp2;\nmap<ll,bool>mp1;\nstruct Edge\n{\n\tll u,v,nxt,w;\n}edge[MAXM];\nvoid add_edge(ll u,ll v,ll w)\n{\n\tedge[++edgenum].nxt=head[u];\n\tedge[edgenum].v=v;\n\tedge[edgenum].u=u;\n\tedge[edgenum].w=w;\n\thead[u]=edgenum;\n}\nvoid add(ll u,ll v,ll w){add_edge(u,v,w);add_edge(v,u,w);}\nstruct node\n{\n\tll x,num;\n}pre[MAXN];\nll dis[MAXM];\nbool book[MAXM];\npriority_queue<pair<ll,ll> >q;\nvoid dijkstra()\n{\n\tmem(book,0);\n\tfor(ll i=0;i<=m;i++)dis[i]=LLINF;\n\tdis[mp[0]]=0;\n\tq.push(make_pair(0,mp[0]));\n\twhile(q.size())\n\t{\n\t\tll x=q.top().second;q.pop();\n\t\tif(book[x])continue;\n\t\tbook[x]=1;\n\t\tfor(ll i=head[x];i;i=edge[i].nxt)\n\t\t{\n\t\t\tll tmp=edge[i].v;\n\t\t\tif(dis[tmp]>dis[x]+edge[i].w)\n\t\t\t{\n\t\t\t\tdis[tmp]=dis[x]+edge[i].w;\n\t\t\t\tpre[tmp].x=x;\n\t\t\t\tpre[tmp].num=i;\n\t\t\t\tq.push(make_pair(-dis[tmp],tmp));\n\t\t\t}\n\t\t}\n\t}\n}\nstack<ll>ans;\nint main()\n{\n\tn=read(),L=read();\n\tll cnt=0;\n\tfor(ll i=1;i<=n;i++)\n\t{\n\t\tll x=read(),d=read(),t=read(),p=read();\n\t\tif(!mp[x])\n\t\t{\n\t\t\tmp[x]=++m;a[m].x=x;\n\t\t}\n\t\tif(x-p>=0&&!mp[x-p])\n\t\t{\n\t\t\tmp[x-p]=++m;cnt++;\n\t\t\ta[m].x=x-p;mp1[x-p]=1;\n\t\t}\n\t\tif(!mp[x+d])\n\t\t{\n\t\t\tmp[x+d]=++m;cnt++;\n\t\t\ta[m].x=x+d;\n\t\t\tmp1[x+d]=1;\n\t\t}\n\t\tif(x-p>=0)\n\t\t\tadd_edge(mp[x-p],mp[x+d],t+p),mp2[edgenum]=i;//mp2\u6765\u8f93\u51fa\u65b9\u6848\n\t}\n\tif(!mp[L])mp[L]=++m,a[m].x=L;//\u4e0d\u80fd\u5fd8\u4e86\n\tif(!mp[0])mp[0]=++m,a[m].x=0;\n\tfor(ll i=1;i<=m;i++)//\u4e0d\u80fd\u5bf9a\u6392\u5e8f\uff0c\u4e0d\u7136\u5c31map\u5c31\u4e71\u4e86\n\t\tb[i].x=a[i].x;\n\tsort(b+1,b+m+1);\n\tfor(ll i=2;i<=m;i++)\n\t\tadd(mp[b[i-1].x],mp[b[i].x],b[i].x-b[i-1].x);\n\tdijkstra();\n\twrite(dis[mp[L]]),pc(10);\n\tll x=mp[L];\n\twhile(x)\n\t{\n\t\tif(mp2[pre[x].num])ans.push(mp2[pre[x].num]);\n\t\tx=pre[x].x;\n\t}\n\twrite(ans.size()),pc(10);//STL!\n\twhile(ans.size())\n\t{\n\t\twrite(ans.top()),pc(32);\n\t\tans.pop();\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1645855071,
        "uid": 395288,
        "name": "Yuby",
        "ccfLevel": 6,
        "title": "CF141D\u9898\u89e3"
    }
]