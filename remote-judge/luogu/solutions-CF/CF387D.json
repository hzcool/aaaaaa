[
    {
        "content": "# \u5514\u59c6\n\n\u4e00\u9053\u5341\u5206\u56e0\u7f3a\u601d\u5385\u7684\u9898\n\n---------\n- \u9996\u5148\uff0c\u770b\u6570\u636e\u8303\u56f4\u8fd9\u4e48\u5c0f\uff0c\u60f3\u90fd\u4e0d\u7528\u60f3\uff0c\u76f4\u63a5\u66b4\u529b\u679a\u4e3e\u4e2d\u5fc3\u70b9\uff08\u6ed1\u7a3d\uff09\n- \u7136\u540e\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u4e2d\u5fc3\u70b9\uff0c\u6211\u4eec\u90fd\u8981\u8bb0\u5f55\u4e0b\u6709\u591a\u5c11\u4e2a\u70b9\u8fde\u5411\u5b83\uff08\u8bb0\u4e3ainto\uff09\uff0c\u5b83\u53c8\u8fde\u5411\u591a\u5c11\u4e2a\u4e2a\u522b\u7684\u70b9\uff08\u8bb0\u4e3aout\uff09\u3002\u56e0\u4e3a\u9898\u76ee\u8bf4\u4e86\u83ab\u5f97\u91cd\u8fb9\uff0c\u6240\u4ee5\u5c31\u76f4\u63a5\u7edf\u8ba1\u8fb9\u7684\u4e2a\u6570\u597d\u4e86\u3002\uff08**\u6709\u4e00\u70b9\u9700\u8981\u6ce8\u610f\uff0c\u5982\u679c\u662f\u81ea\u73af\u7684\u8bdd\uff0c\u53ea\u80fd\u7b97\u4e00\u6b21**\uff09\u4e3a\u4e86\u6ee1\u8db3\u4e2d\u5fc3\u70b9\u7684\u7ea6\u675f\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u4e2d\u5fc3\u70b9\uff0c\u6211\u4eec\u90fd\u9700\u89812*n-1-into-out\u64cd\u4f5c\u3002\uff08**\u4e3a\u4ec0\u4e48-1\uff1f\u56e0\u4e3a\u4e2d\u5fc3\u70b9\u4e5f\u8981\u8fde\u5411\u81ea\u5df1\uff0cbut\u53ea\u9700\u8981\u4e00\u6b21\u64cd\u4f5c\u5c31\u53ef\u4ee5\u5b8c\u6210**\uff09\n- \u63a5\u7740\uff0c\u5728\u6ee1\u8db3\u4e2d\u5fc3\u70b9\u7684\u7ea6\u675f\u4e4b\u540e\uff0c\u5269\u4e0b\u7684\u70b9\u90fd\u53ea\u5269\u4e0b\u4e00\u4e2a\u5165\u5ea6\u548c\u4e00\u4e2a\u51fa\u5ea6\u4e86\u3002\u90a3\u4e48\u8fd9\u4e9b\u70b9\u65e0\u8bba\u5982\u4f55\u90fd\u662f\u5904\u4e8e\u4e00\u4e2a\u73af\u4e2d\uff08\u6709\u53ef\u80fd\u662f\u81ea\u73af\uff09\u3002\u4e5f\u5c31\u610f\u5473\u7740\uff0c\u5982\u679c\u60f3\u8981\u6700\u5c11\u7684\u6539\u53d8\u6b21\u6570\uff0c\u6211\u4eec\u8981\u5728\u73b0\u6709\u7684\u8fb9\u4e2d\uff0c\u5c3d\u91cf\u627e\u51fa\u7b26\u5408\u6761\u4ef6\u7684\u8fb9\u3002\n- \u65e2\u7136\u6bcf\u4e2a\u70b9\u53ea\u80fd\u5411\u522b\u7684\u70b9\u8fde\u4e00\u6b21\uff0c\u4e5f\u53ea\u80fd\u88ab\u522b\u4eba\u8fde\u4e00\u6b21\uff0c\u8fd9\u4e0d\u5c31\u662f\u6807\u51c6\u7684\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u9e2d\uff01\u6bcf\u6b21\u679a\u4e3e\u4e2d\u5fc3\u70b9\u91cd\u65b0\u5efa\u56fe\u5c31OK\u4e86\uff08\u8bb0\u5f97\u4e0d\u8981\u628a\u8fde\u5411\u4e2d\u5fc3\u70b9\u6216\u8005\u4ece\u4e2d\u5fc3\u70b9\u8fde\u51fa\u6765\u7684\u8fb9\u7ed9\u5339\u914d\u4e86\uff09\n- \u5728\u6c42\u51fa\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914dp\u4e4b\u540e\u6211\u4eec\u9700\u8981\u5982\u4e0b\u64cd\u4f5c\n  1. \u628a\u6ca1\u88ab\u5339\u914d\u7684\u8fb9\u5220\u6389\uff0c\u9700\u8981m-into-out-p\u6b21\u64cd\u4f5c\n  2. \u628a\u8981\u52a0\u7684\u8fb9\u52a0\u4e0a\uff0c\u9700\u8981n-1-p\u6b21\u64cd\u4f5c\n- \u7efc\u4e0a\u6240\u8ff0,ans=2*n-1-into-out+m-into-out-p+n-1-p\u3002\u5728\u679a\u4e3e\u4e2d\u5fc3\u70b9\u7684\u65f6\u5019\u4fdd\u7559\u6700\u5c0f\u7684ans\u5c31\u597d\u4e86\u3002\n\n\u653e\u4e0a\u6211\u5de8\u4e11\u65e0\u6bd4\u7684\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<queue>\n#define MAXN 11050\n#define MAXM 150005\nusing namespace std;\nint head[MAXN],nextt[MAXM*2],to[MAXM*2],w[MAXM*2];\nint n,m,S,T;\nint cnt=-1;\nint deep[MAXN];\nstruct line{\n       int from;\n       int to;\n}l[MAXM];\nvoid link(int a,int b,int c){\n     cnt++;\n     w[cnt]=c;\n     nextt[cnt]=head[a];\n     to[cnt]=b;\n     head[a]=cnt;\n     cnt++;\n     w[cnt]=0;\n     nextt[cnt]=head[b];\n     to[cnt]=a;\n     head[b]=cnt;\n}\nbool bfs(){\n     memset(deep,0,sizeof(deep));\n     queue<int> q;\n     while(!q.empty())q.pop();\n     q.push(S);\n     deep[S]=1;\n     while(!q.empty()){\n                       int now=q.front();\n                       q.pop();\n                       for(int i=head[now];i!=-1;i=nextt[i]){\n                               if (w[i]&&!deep[to[i]]){\n                                                       deep[to[i]]=deep[now]+1;\n                                                       q.push(to[i]);\n                               }\n                       }\n     }\n     if (deep[T])return 1;else return 0;\n}\nint dinic(int now,int last){\n    if (now==T||!last)return last;\n    int ret=0;\n    for(int i=head[now];i!=-1;i=nextt[i]){\n            if(deep[to[i]]-1==deep[now]&&w[i]){\n                                               int zgl=dinic(to[i],min(w[i],last-ret));\n                                               if (zgl){\n                                                        w[i]-=zgl;\n                                                        w[i^1]+=zgl;     \n                                                        ret+=zgl;\n                                               }\n            }\n    }\n    if (!ret)deep[now]=-1;\n    return ret;\n}\nint into[MAXN],out[MAXN];\nint main(){\n    cin>>n>>m;\n    S=0;T=MAXN-1;\n    memset(into,0,sizeof(into));\n    int a,b;\n    for(int i=1;i<=m;i++){\n            scanf(\"%d%d\",&a,&b);\n            l[i].from=a;l[i].to=b;\n            into[b]++;\n            out[a]++;\n            if (a==b)into[b]--;\n    }\n    int anss=MAXM;\n    for(int i=1;i<=n;i++){\n            memset(head,-1,sizeof(head));\n            cnt=-1;\n            int tmp=into[i]+out[i];\n            for(int j=1;j<=n;j++){\n                    link(S,j,1);\n                    link(j+500,T,1);\n            }\n            for(int j=1;j<=m;j++){\n                    if (l[j].to==i||l[j].from==i)continue;\n                    link(l[j].from,l[j].to+500,1);\n            }\n            int ans=0;        \n            while(bfs())\n                        ans+=dinic(S,9999999);\n            anss=min(anss,n-1-ans+m-ans+2*n-1-tmp*2);\n    }\n    cout<<anss<<endl;\n    return 0;\n}\n\n```\n",
        "postTime": 1551531461,
        "uid": 118273,
        "name": "\u543e\u738b\u7f8e\u5982\u753b",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF387D \u3010George and Interesting Graph\u3011"
    },
    {
        "content": "\u4e3a\u4ec0\u4e48\u5927\u4f6c\u4eec\u90fd\u6253\u7f51\u7edc\u6d41\u554a\uff1f\u5308\u7259\u5229\u7b97\u6cd5\u8dd1\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u7684\u7801\u91cf\u6bd4\u7f51\u7edc\u6d41\u5c0f\u591a\u4e86\u5462\uff0c\u849f\u84bb\u5c31\u53d1\u4e2a**\u5308\u7259\u5229\u7b97\u6cd5**\u7684\u9898\u89e3\u3002\n\n\u770b\u6570\u636e\u8303\u56f4\u53ef\u77e5\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u7ea6\u662f $O(n^3)$\uff0c\u6240\u4ee5\u679c\u65ad\u679a\u4e3e\u4e2d\u5fc3\u70b9\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n\n\u5728\u524d\u9762\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570\uff08\u8bb0\u4e3a $L_i$\uff0c\u81ea\u73af\u7684\u7279\u5224\uff09\uff0c\u5219\u5bf9\u4e8e\u5f53\u524d\u4e2d\u5fc3\u70b9\uff0c\u5173\u4e8e\u5b83\u7684\u64cd\u4f5c\u6b21\u6570\u662f $2n-1-L_i$\u3002\n\n\u7531\u4e8e\u4e2d\u5fc3\u70b9\u81ea\u5df1\u7684\u6761\u4ef6\u5df2\u6ee1\u8db3\uff0c\u5176\u4f59\u6bcf\u4e2a\u70b9\u51fa\u5165\u5ea6\u90fd\u53ea\u5269\u4e0b\u4e00\u3002\u4e8e\u662f\uff0c\u628a\u6bcf\u4e2a\u70b9\u62c6\u6210\u4e24\u4e2a\uff08\u4e00\u4e2a\u5165\uff0c\u4e00\u4e2a\u51fa\uff09\uff0c\u5de6\u53f3\u4e24\u8fb9\u8981\u6bcf\u4e2a\u70b9\u90fd\u88ab\u8fb9\u8fde\u5230\u4e14\u53ea\u8fde\u4e00\u6b21\uff0c\u8fb9\u4e5f\u4e0d\u91cd\u590d\uff0c\u7531\u4e8e\u8fb9\u6743\u5747\u4e3a\u4e00\uff0c\u8fd9\u4e0d\u5c31\u662f\u6700\u57fa\u7840\u7684\u4e8c\u5206\u56fe\u5339\u914d\u5417\uff1f\n\n\u5230\u8fd9\u91cc\uff0c\u5f88\u591a\u5927\u4f6c\u90fd\u7528\u7f51\u7edc\u6d41\u505a\uff0c\u4e0d\u8fc7\u6211\u89c9\u5f97\u5308\u7259\u5229\u7b97\u6cd5\u7684\u4ee3\u7801\u8981\u7b80\u6d01\u5f88\u591a\u3002\n\n\u8bc1\u4e0b\u8dd1\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u7684\u6b63\u786e\u6027\u5427\uff1a\u6211\u4eec\u8dd1\u7684\u662f\u4fdd\u7559\u4e0b\u6765\u7684\u6700\u5927\u8fb9\u6570\uff0c\u5b83\u8d8a\u5927\uff0c\u5220\u7684\u8fb9\u5c31\u5c11\uff0c\u9700\u8981\u52a0\u7684\u8fb9\u6570\u662f\u56fa\u5b9a\u7684\uff0c\u6240\u4ee5\u52a0\u7684\u8fb9\u4e5f\u4f1a\u5c11\uff0c\u8fd9\u6837\u4fdd\u7559\u4e0b\u7684\u8fb9\u53d6\u5230\u6700\u5927\uff0c\u7b54\u6848\u5c31\u4f1a\u6700\u5c0f\u3002\uff08\u7b54\u6848\u5bf9\u5e94\u7684\u8868\u8fbe\u5f0f\u633a\u7b80\u5355\u7684\uff0c\u6b64\u5904\u4e0d\u52a0\u8d58\u8ff0\uff0c\u8be6\u89c1\u4ee3\u7801\uff09\n\n\u6c42\u51fa\u4ee5\u4e0a\u6bcf\u4e2a\u4e2d\u70b9\u5f97\u51fa\u7684\u7b54\u6848\u540e\uff0c\u53d6\u4e2a\u6700\u5c0f\u503c\u8f93\u51fa\u5373\u53ef\u3002\n\n## Code\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define v e[i].y\n#define inf 0x3f3f3f3f3f3f3f3f\nusing namespace std;\nint na,n,m,L[505],o1,o2,ti,cnt,h[505],b[505],vis[505],Ans=inf,ans;\nstruct node{int y,nxt;}e[2000005];\nvoid add(int noi,int ioi){e[cnt].nxt=h[noi],e[cnt].y=ioi,h[noi]=cnt++;}\nbool dfs(int x){\n    for(int i=h[x];i!=-1;i=e[i].nxt)\n        if(b[v]<ti&&v!=na){\n            b[v]=ti;\n            if(!vis[v]||dfs(vis[v])){vis[v]=x;return 1;}\n        }\n    return 0;\n}\nsigned main(){\n    scanf(\"%lld%lld\",&n,&m),memset(h,-1,sizeof(h));\n    for(int i=1;i<=m;i++)scanf(\"%lld%lld\",&o1,&o2),add(o1,o2),L[o1]++,L[o2]+=(o1!=o2);\n    for(na=1;na<=n;na++,ans=0){\n        memset(vis,0,sizeof(vis));\n        for(int i=1;i<=n;i++)if(i!=na)ti++,ans+=dfs(i);\n        Ans=min(Ans,m-L[na]-ans+n-1-ans+2*n-1-L[na]);\n    }\n    printf(\"%lld\",Ans);\n    return 0;\n}\n```\n",
        "postTime": 1650075335,
        "uid": 484076,
        "name": "mcDinic",
        "ccfLevel": 6,
        "title": "CF387D George and Interesting Graph \u9898\u89e3"
    },
    {
        "content": "## \u3010\u9898\u610f\u3011\n\n\u5728\u6709\u5411\u56fe\u4e2d\uff0c\u901a\u8fc7\u52a0\u8fb9\u3001\u5220\u8fb9\u6ee1\u8db3\u4e24\u4e2a\u6761\u4ef6\u3002\n\n\u786e\u5b9a\u4e00\u4e2a\u4e2d\u5fc3\u70b9 $u$\uff0c\u5bf9\u4e8e\u4efb\u610f\u70b9 $v$\uff0c\u5b58\u5728 $(u,v)$ \u4e0e $(v,u)$\uff0c\u5305\u62ec $(u,u)$\u3002\n\n\u9664\u4e2d\u5fc3\u70b9\u5916\u7684\u70b9\u7684\u51fa\u5ea6\u3001\u5165\u5ea6\u90fd\u8981\u4e3a2\u3002\n\n\u6c42\u6700\u5c0f\u64cd\u4f5c\u6570\u3002\n\n## \u3010\u5206\u6790\u3011\n\n\u9996\u5148\u679a\u4e3e\u4e2d\u5fc3\u70b9 $u$\u3002\n\n\u4e0e $u$ \u76f4\u63a5\u76f8\u8fde\u7684\u8fb9\uff0c\u76f4\u63a5\u7edf\u8ba1\u53ef\u4ee5\u4fdd\u7559\u7684\u8fb9\u6570\u3002\n\n\u6392\u9664\u8fd9\u7c7b\u8fb9\u540e\uff0c\u8981\u8ba9\u975e\u4e2d\u5fc3\u70b9 $v$ \u7684\u5165\u5ea6\u4e0e\u51fa\u5ea6\u5747\u4e3a1\u3002\n\n\u5c06\u70b9 $x$ \u62c6\u4e3a\u5165\u70b9 $x_{in}$ \u548c\u51fa\u70b9 $x_{out}$\u3002\n\n\u5bf9\u4e8e\u8fb9 $(x,y)$\uff0c$x_{out}->y_{in}$\n\n\u5165\u70b9\u4e0e\u51fa\u70b9\u7684\u6700\u5927\u5339\u914d\u5c31\u662f\u6700\u591a\u80fd\u4fdd\u7559\u7684\u8fb9\u3002\n\n\u7f51\u7edc\u6d41\u6c42\u6700\u5927\u5339\u914d\u3002\n\n\u8bbe\u5171\u80fd\u4fdd\u7559 $x$ \u6761\u8fb9\u3002\n\n\u603b\u5171\u9700\u8981\u4e0e\u4e2d\u5fc3\u70b9\u76f8\u8fde\u7684 $2(n-1)+1$ \u6761\u8fb9\u3001\u4e0e\u4e2d\u5fc3\u70b9\u4e0d\u76f8\u8fde\u7684 $n-1$ \u6761\u8fb9\uff0c\u5171 $3n-2$\u3002\n\n\u9700\u8981\u52a0\u5165\u7684\u8fb9\u6570\u4e3a $3n-2-x$\uff0c\u9700\u8981\u5220\u9664\u7684\u8fb9\u6570\u4e3a $m-x$\u3002\n\n\u603b\u4ee3\u4ef7\u662f $3n-2+m-2x$\u3002\n\n## \u3010\u4ee3\u7801\u3011\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=505,maxt=maxn*2,maxm=1005,maxe=maxm*2+maxt*2,INF=1<<30;\nint n,m;\nstruct Dinic{\n    int S,T;\n    struct edge{\n        int to,nxt,f;\n    }e[maxe];\n    int tot,lnk[maxt];\n    void add_e(int x,int y,int f){\n        e[++tot]=(edge){y,lnk[x],f};\n        lnk[x]=tot;\n    }\n    void ADD(int x,int y,int f){\n        add_e(x,y,f),add_e(y,x,0);\n    }\n    int que[maxt],cur[maxt],dep[maxt];\n    bool BFS(){\n        int hed=0,til=1;\n        for(int i=1;i<=T;i++) cur[i]=lnk[i],dep[i]=INF;\n        que[1]=S,dep[S]=0;\n        while(hed!=til){\n            int x=que[++hed];\n            for(int j=lnk[x];j;j=e[j].nxt){\n                int y=e[j].to;\n                if(dep[y]==INF&&e[j].f){\n                    dep[y]=dep[x]+1;\n                    que[++til]=y;\n                }\n            }\n        }\n        return dep[T]!=INF;\n    }\n    int DFS(int x,int limit){\n        if(!limit||x==T) return limit;\n        int flow=0,f;\n        for(int j=cur[x];j;j=e[j].nxt){\n            cur[x]=j;\n            int y=e[j].to;\n            if(dep[y]==dep[x]+1&&(f=DFS(y,min(limit,e[j].f)))){\n                e[j].f-=f;\n                e[j^1].f+=f;\n                flow+=f;\n                limit-=f;\n            }\n            if(!limit) return flow;\n        }\n        return flow;\n    }\n    int calc(){\n        int ans=0;\n        while(BFS()) ans+=DFS(S,INF);\n        return ans;\n    }\n}D;\nint read(){\n\tint ret=0,f=1;char ch=getchar();\n\twhile(ch>'9'||ch<'0'){if(ch=='-')f=-f;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') ret=ret*10+ch-'0',ch=getchar();\n\treturn ret*f;\n}\nstruct data{\n\tint x,y;\n}a[maxm];\nbool vis[maxn][2];\nint ans=INF;\nint main(){\n\tfreopen(\"CF387D.in\",\"r\",stdin);\n\tfreopen(\"CF387D.out\",\"w\",stdout);\n\tn=read(),m=read();\n\tfor(int i=1;i<=m;i++) a[i].x=read(),a[i].y=read();\n\tfor(int i=1;i<=n;i++){\n\t\tmemset(vis,0,sizeof vis);\n\t\tint cnt=0;\n\t\tD.S=2*n+1,D.T=D.S+1,D.tot=1;\n\t\tmemset(D.lnk,0,sizeof D.lnk);\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tif(a[j].x==i&&!vis[a[j].y][0]) vis[a[j].y][0]=1,cnt++;else\n\t\t\tif(a[j].y==i&&!vis[a[j].x][1]) vis[a[j].x][1]=1,cnt++;else\n\t\t\tif(a[j].x!=i&&a[j].y!=i) D.ADD(a[j].x,a[j].y+n,1);\n\t\t}\n\t\tfor(int j=1;j<=n;j++) D.ADD(D.S,j,1),D.ADD(j+n,D.T,1);\n\t\tcnt+=D.calc();\n\t\tans=min(ans,3*n-2-cnt+m-cnt);\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1629206793,
        "uid": 116251,
        "name": "\u7834\u5fc6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF387D \u3010George and Interesting Graph\u3011"
    },
    {
        "content": "\u2460 \u9996\u5148\u6211\u4eec $O(n)$ \u679a\u4e3e\u4e00\u4e2a\u4e2d\u5fc3\u8282\u70b9\n\n\u2461 \u7136\u540e\u6211\u4eec\u6b64\u65f6\u5982\u679c\u641e\u5b9a\u4e86\u4e2d\u5fc3\u70b9\u7684\u7ea6\u675f\u4e4b\u540e\uff0c\u6211\u4eec\u8003\u8651\u5269\u4e0b $n-1$ \u4e2a\u70b9\uff0c\n\n\u6211\u4eec\u77e5\u9053\uff0c\u6700\u7ec8\u8981\u4f7f\u5f97\u8fd9 $n-1$ \u4e2a\u70b9\u7684\u51fa\u5165\u5ea6\u90fd\u662f $2$ \uff0c\n\n\u7136\u800c\u8fd9\u91cc\u5df2\u7ecf\u7528\u6389\u4e86\u4e00\u4e2a\u51fa\u5ea6\u8fde\u5165\u4e2d\u5fc3\u70b9\uff0c\n\n\u4e5f\u7528\u6389\u4e86\u4e00\u4e2a\u5165\u5ea6\uff0c\u4f7f\u5f97\u4e2d\u5fc3\u70b9\u8fde\u5165\uff0c\n\n\u90a3\u4e48\u6211\u4eec\u5269\u4e0b\u7684\u4efb\u52a1\u5c31\u662f\u5c06\u8fd9 $n-1$ \u4e2a\u70b9\u7684\u51fa\u5165\u5ea6\u90fd\u63a7\u5236\u5728 $1$ \u5373\u53ef\u3002\n\n\u2462\u5bf9\u4e8e\u5269\u4e0b\u7684\u8fb9\u6211\u4eec\u8fdb\u884c\u4e8c\u5206\u56fe\u5339\u914d\n\n\u5bf9\u4e8e\u4e00\u4e2a\u5339\u914d\u4e00\u5b9a\u6709\u4e24\u4e2a\u70b9\u7684\u51fa\u5ea6\u548c\u5165\u5ea6\u6ee1\u8db3\u6761\u4ef6\uff0c\u6240\u4ee5\n\n\u6c42\u5f97\u7684 n-1-\u6700\u5927\u5339\u914d\u6570 \u5c31\u662f\u5b50\u95ee\u9898\u7684\u7b54\u6848\n\n\u2463\u5bf9\u4e8e\u4e00\u4e2a\u4e2d\u5fc3\u70b9\u8fd8\u9700\u8981\u6ee1\u8db3 $center\\to u$ \u548c $u\\to center$\n\n\u90fd\u6709\u8fb9\uff0c\u5bf9\u4e8e\u6ca1\u6709\u7684\u8fb9\u6211\u4eec\u8981\u52a0\u4e0a\n\n\u2464\u6700\u540e\u7684\u7b54\u6848\u8fd8\u8981\u52a0\u4e0a\u4e8c\u5206\u56fe\u5339\u914d\u4e2d\u7684\u975e\u5339\u914d\u8fb9\n\n\u2465\u95ee\u9898\u7684\u7b54\u6848\u5c31\u662f\u6bcf\u4e2a\u5b50\u95ee\u9898\u7b54\u6848\u7684\u6700\u5c0f\u503c\n\n\u6211\u662f\u7528\u7f51\u7edc\u6d41\u6c42\u7684\u4e8c\u5206\u56fe\u5339\u914d\u7684\u6700\u5927\u5339\u914d\u6570\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<queue>\n#include<cstdio>\nusing namespace std;\nconst int maxn=100000*2+10,maxl=1000+111,inf=0x3f3f3f3f;\nstruct edge\n{\n\tint v,next;\n\tint w;\n}e[maxn];\nint head[maxl],cnt=0,dep[maxl],n,m,ans=0,s,t;\ninline void add(int u,int v,int w)\n{\n\te[cnt]=(edge){v,head[u],w};\n\thead[u]=cnt++;\n\te[cnt]=(edge){u,head[v],0};\n\thead[v]=cnt++;\n}\nbool bfs()\n{\n\tmemset(dep,-1,sizeof(dep));\n\tdep[s]=0;\n\tqueue<int>q;\n\tq.push(s);\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tfor(int i=head[u];~i;i=e[i].next)\n\t\t{\n\t\t\tint v=e[i].v;\n\t\t\tif(dep[v]==-1&&e[i].w>0)\n\t\t\t{\n\t\t\t\tdep[v]=dep[u]+1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn dep[t]>-1;\n}\nint dfs(int u,int cap)\n{\n\t\n\tif(u==t)return cap;\n\tint flow=0;\n\tfor(int i=head[u];~i;i=e[i].next)\n\t{\n\t\tint v=e[i].v;\n\t\tif(dep[v]==dep[u]+1&&e[i].w)\n\t\t{\n\t\t\tint temp=dfs(v,min(e[i].w,cap-flow));\n\t\t\tflow+=temp;\n\t\t\te[i].w-=temp;\n\t\t\te[i^1].w+=temp;\n\t\t\tif(flow==cap)return flow;\n\t\t}\n\t}\n\tif(!flow)dep[u]=-2;\n\treturn flow;\n}\nint dinic()\n{\n\tint solve=0,f;\n\twhile(bfs())\n\t{\n\t\twhile(f=dfs(s,inf))solve+=f;\n\t}\n\treturn solve;\n}\nint u[maxn],v[maxn],M,uu,vv,map[maxl][maxl];\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\ts=0,t=n*2+10;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d\",&uu,&vv);\n\t\tmap[uu][vv]=1;\n\t\tu[++M]=uu,v[M]=vv;\t\n\t}\n\tint ans1=inf;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tmemset(head,-1,sizeof(head));\n\t\tcnt=0;\n\t\tint temp=0,tp=0;\n\t\tfor(int j=1;j<=n;j++)add(s,j,1);\n\t\tfor(int j=1;j<=n;j++)add(j+n,t,1);\n\t\tfor(int j=1;j<=M;j++)\n\t\t{\n\t\t\tif(u[j]==i||v[j]==i)continue;\n\t\t\tadd(u[j],v[j]+n,1);\n\t\t\ttp++;\n\t\t}\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tif(!map[i][j])tp++;\n\t\t\tif(!map[j][i])tp++;\n\t\t}\n\t\tif(!map[i][i])tp--;\n\t\ttemp+=dinic();\n\t\tans1=min(n-temp+tp-1-temp,ans1);\n\t}\n\tans+=ans1;\n\tprintf(\"%d\\n\",ans);\n}\n```",
        "postTime": 1521686530,
        "uid": 19951,
        "name": "Reaepita",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF387D \u3010George and Interesting Graph\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\u7ed9\u5b9a\u4e00\u5f20\u65e0\u91cd\u8fb9\u6709\u53ef\u80fd\u6709\u81ea\u73af\u7684\u56fe\uff0c\u64cd\u4f5c\u4e00\u6b21\u53ef\u4ee5\u52a0\u4e0a\u4e00\u6761\u8fb9\u548c\u53bb\u6389\u4e00\u6761\u8fb9\uff0c\u95ee\u4f60\u81f3\u5c11\u64cd\u4f5c\u51e0\u6b21\u53ef\u4ee5\u4f7f\u5f97\u8fd9\u5f20\u56fe\u5b58\u5728\u4e00\u4e2a\u4e2d\u5fc3\u70b9 $x$\uff0c$x$ \u4e0e\u6240\u6709\u70b9 $y$ \u6709\u8fb9 $(x,y),(y,x)$\uff0c\u6ce8\u610f\u5fc5\u987b\u4e5f\u8981\u6709 $(x,x)$\uff0c\u7136\u540e\u9664\u4e86 $x$ \u7684\u5176\u4ed6\u70b9 $y$ \u7684\u51fa\u5165\u5ea6\u5747\u4e3a $2$\u3002$1\\le n\\le 500$\n\n\u9996\u5148\u679a\u4e3e\u4e2d\u5fc3\u70b9 $x$\uff0c\u7136\u540e\u628a\u4e0e\u4e2d\u5fc3\u70b9\u76f8\u8fde\u7684\u8fb9\u5904\u7406\u6389\uff0c\u7136\u540e\u5269\u4e0b\u7684\u95ee\u9898\u5c31\u662f\n\n\u7ed9\u5b9a\u4e00\u8eca\u70b9\u96c6\uff0c\u5b58\u5728\u6709\u5411\u8fb9\uff0c\u53ef\u80fd\u6709\u81ea\u73af\uff0c\u95ee\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\uff0c\u4f7f\u5f97\u9664\u4e86 $x$ \u7684\u5176\u4ed6\u70b9 $y$ \u7684\u51fa\u5165\u5ea6\u5747\u4e3a $1$\u3002\n\n\u663e\u7136\u7559\u4e0b\u6700\u591a\u7684\u8fb9\u662f\u6700\u597d\u7684\uff0c\u5269\u4e0b\u7684\u53ef\u4ee5\u81ea\u884c\u914d\u5408\u3002\n\n\u8fd9\u4e2a\u4e1c\u897f\u62c6\u4e00\u4e0b\u70b9\u8dd1\u7f51\u7edc\u6d41\u5c31\u884c\u4e86\u3002\n\n\u5269\u4e86 $n-1$ \u4e2a\u70b9\uff0c\u4ed6\u4eec\u4e4b\u95f4\u76f8\u8fde\u7684\u8fb9\u4e3a $m'$\uff0c\u5339\u914d\u4e86 $v$ \u7ec4\uff0c\u90a3\u4e48 $m'-v$ \u7684\u8fb9\u662f\u6ca1\u7528\u7684\uff0c\u53c8\u8981\u52a0\u4e0a $\\dfrac{2(n-1)-2v}2=n-1-v$ \u6761\u8fb9\u3002\n\n\u4e2d\u5fc3\u70b9\u7684\u76f8\u5173\u5206\u8ba8\u53ef\u80fd\u6709\u70b9\u6076\u5fc3\uff0c\u6211\u5148\u5199\u5199\u3002\n\n\u73b0\u5728\u662f $18:45$\uff0c\u770b\u6211\u4ec0\u4e48\u65f6\u5019\u5199\u5b8c\u3002\n\n\u73b0\u5728\u662f $18:57$\uff0c\u6211\u5199\u5b8c\u4e86\u3002\n\n```cpp\nusing _Tp = int;\nusing i64 = long long;\ni64 liu(vector<vector<pair<int,int>>>g,int S,int T){\n  vector<int>d(g.size());\n  vector<int>head(g.size(),-1),Next,ver,edge;\n  int tot=0;\n  auto add=[&](int x,int y,int z){\n    ver.push_back(y),edge.push_back(z);\n    Next.push_back(head[x]),head[x]=tot++;\n  };\n  for(int i=0;i<(int)g.size();i++)\n  for(int j=0;j<(int)g[i].size();j++)\n    add(i,g[i][j].first,g[i][j].second),add(g[i][j].first,i,0);\n  auto bfs=[&](){\n    queue<int>q;q.push(S);\n    for(int i=0;i<(int)g.size();i++)d[i]=0;d[S]=1;\n    while(q.size()){\n      int x=q.front();q.pop();\n      for(int i=head[x];~i;i=Next[i])\n      if(!d[ver[i]]&&edge[i]){\n        d[ver[i]]=d[x]+1;q.push(ver[i]);\n        if(ver[i]==T)return 1;\n      }\n    }\n    return 0;\n  };\n  function<int(int x,int flow)>dinic;\n  dinic=[&](int x,int flow){\n    if(x==T)return flow;\n    int rest=flow,k;\n    for(int i=head[x],y;y=ver[i],~i&&rest;i=Next[i])\n    if(edge[i]&&d[y]==d[x]+1){\n      k=dinic(y,min(rest,edge[i]));\n      if(!k)d[y]=0;\n      edge[i]-=k;\n      edge[i^1]+=k;\n      rest-=k;\n    }  \n    return flow-rest;\n  };\n  i64 ans=0;int u;\n  while(bfs())while(u=dinic(S,INT_MAX))ans+=u;\n  return ans;\n}\nsigned main(){\n  int n,m,S,T;\n  cin>>n>>m;\n  set<pair<int,int> >M;\n  while(m--){\n    int x,y;\n    cin>>x>>y,x--,y--;\n    M.emplace(x,y);\n  }\n  int ans=INT_MAX;\n  auto solve=[&](int mid){\n    vector<vector<pair<int,_Tp>>>g(2*n+2);\n    auto add=[&](int x,int y,_Tp z){g[x].push_back(make_pair(y,z));};\n    S=2*n,T=2*n+1;\n    int ans=2*(n-1)+1,m0=0;\n    for(auto[x,y]:M){\n      if(x==mid&&y==mid)ans--;\n      else if(x==mid)ans--;\n      else if(y==mid)ans--;\n      else add(y,x+n,1),m0++;\n    }\n    rep(i,0,n-1)add(S,i,1);\n    rep(i,n,2*n-1)add(i,T,1);\n    int v=liu(g,S,T);\n    return ans+n-1-v+m0-v;\n  };\n  rep(i,0,n-1)ans=min(ans,solve(i));\n  cout<<ans<<endl;\n}\n```",
        "postTime": 1647427484,
        "uid": 100325,
        "name": "peterwuyihong",
        "ccfLevel": 7,
        "title": "CF387D George and Interesting Graph"
    },
    {
        "content": "\u9996\u5148\u53ef\u4ee5\u53d1\u73b0\u5b9e\u9645\u4e0a\u9664\u4e86\u4e2d\u5fc3\u70b9\u4e4b\u5916\uff0c\u6bcf\u4e2a\u70b9\u7684\u5165\u5ea6\u548c\u51fa\u5ea6\u5982\u679c\u4e0d\u7b97\u5b83\u4eec\u548c\u4e2d\u5fc3\u70b9\u7684\u8fde\u8fb9\uff0c\u5176\u5b9e\u5e94\u8be5\u662f $1$\u3002\n\n\u6211\u4eec\u8003\u8651\u5148\u5220\u6389\u4e00\u4e9b\u8fb9\uff0c\u7559\u4e0b\u5c3d\u53ef\u80fd\u591a\u7684\u8fb9\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u70b9\u7684\u5165\u5ea6\u548c\u51fa\u5ea6**\u81f3\u591a**\u4e3a $1$\uff1b\u7136\u540e\u518d\u52a0\u4e0a\u5c11\u7684\u8fb9\u3002\n\n\u628a\u6bcf\u4e2a\u70b9 $u$ \u62c6\u6210 $2$ \u4e2a\u70b9 $u,u+n$\u3002\u5bf9\u4e8e\u539f\u56fe\u4e2d\u4e00\u6761\u8fb9 $(u,v)$\uff0c\u6211\u4eec\u8fde\u8fb9 $(u,v+n)$\u3002\n\n\u90a3\u4e48\u679a\u4e3e\u4e2d\u5fc3\u70b9\uff0c\u5728\u65b0\u56fe\u4e0a\u8dd1\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\uff0c\u5c31\u5f97\u5230\u4e86\u6700\u591a\u80fd\u7559\u4e0b\u7684\u8fb9\u6570\u3002\n\n\u8bbe\u5176\u4e3a $x$\uff0c\u5219\u7b54\u6848\u4e3a $n+m-2x$\u3002\u5176\u542b\u4e49\u662f\u5148\u5220 $m-x$ \u6761\u8fb9\uff0c\u518d\u52a0 $n-x$ \u6761\u8fb9\u3002\n\n\u5b9e\u73b0\u8d77\u6765\u65f6\u9700\u8981\u6ce8\u610f\uff0c\u679a\u4e3e\u5230\u4e2d\u5fc3\u70b9 $x$ \u65f6\uff1a\n\n- \u5269\u4e0b\u7684\u70b9\u6570\u5b9e\u9645\u4e0a\u662f $n-1$\uff0c\u8fb9\u6570\u662f $m-\\text{deg}_x$\u3002\u8fd9\u91cc $\\text{deg}$ \u5305\u62ec\u5165\u5ea6\u548c\u51fa\u5ea6\uff0c\u81ea\u73af\u7684\u5165\u5ea6\u548c\u51fa\u5ea6\u7b97\u4e00\u6b21\u3002\n- \u7b54\u6848\u8fd8\u9700\u8981\u52a0\u4e0a $2n-1-\\text{deg}_x$\uff0c\u8868\u793a\u8fde\u4e0a $x$ \u7684\u90a3 $2n-1$ \u6761\u8fb9\u3002\n\n\u590d\u6742\u5ea6\u5927\u6982\u662f $O(nm\\sqrt{n})$\uff0c\u5b9e\u9645\u4e0a\u5e94\u8be5\u5feb\u5f97\u591a\u3002\n\n```cpp\n#include<bits/stdc++.h>\n\n#define int long long\n\nusing namespace std;\n\ninline int read(){\n\tint x=0,f=1;char c=getchar();\n\tfor(;(c<'0'||c>'9');c=getchar()){if(c=='-')f=-1;}\n\tfor(;(c>='0'&&c<='9');c=getchar())x=x*10+(c&15);\n\treturn x*f;\n}\n\nint n,m;\nconst int MN=2e5+5;\nint head[MN],ver[MN],nxt[MN],edge[MN],tot=1;\nint u[MN],v[MN];\n\n#define C(p) (memset(p,0,sizeof(p)))\n\nvoid adde(int x,int y,int z){\n\tver[++tot]=y,edge[tot]=z,nxt[tot]=head[x],head[x]=tot;\n\tver[++tot]=x,edge[tot]=0,nxt[tot]=head[y],head[y]=tot;\n}\n\nqueue<int>q;\nint d[MN],now[MN],s,t;\n\nbool bfs(){\n\tmemset(d,0,sizeof(d));\n\twhile(q.size())q.pop();\n\tq.push(s),d[s]=1,now[s]=head[s];\n\twhile(q.size()){\n\t\tint x=q.front();q.pop();\n\t\tfor(int i=head[x];i;i=nxt[i]){\n\t\t\tif((!edge[i])||d[ver[i]])continue;\n\t\t\td[ver[i]]=d[x]+1,now[ver[i]]=head[ver[i]],q.push(ver[i]);\n\t\t\tif(ver[i]==t)return 1;\n\t\t}\n\t}\n\treturn 0;\n}\n\nint dinic(int x,int flow){\n\tif(x==t)return flow;\n\tint rest=flow;\n\tfor(int i=now[x];i&&rest;i=nxt[i]){\n\t\tnow[x]=i;int y=ver[i];\n\t\tif((!edge[i])||d[y]!=d[x]+1)continue;\n\t\tint k=dinic(y,min(rest,edge[i]));\n\t\trest-=k,edge[i]-=k,edge[i^1]+=k;\n\t}\n\treturn flow-rest;\n}\n\nint deg[MN],res;\nconst int INF=1e9;\n\nvoid solve(int x){\n\tC(head),C(nxt),C(ver),C(edge),tot=1;\n\n\tint ans=2*n-1-deg[x]+n-1+m-deg[x];\n\tfor(int i=1;i<=m;i++){\n\t\tif(u[i]==x||v[i]==x)continue;\n\t\tadde(u[i],v[i]+n,INF);\n\t}\n\tfor(int i=1;i<=n;i++)if(i!=x)adde(s,i,1),adde(i+n,t,1);\n\t\n\tint flow=0;\n\twhile(bfs()){\n\t\twhile(flow=dinic(s,INF))ans-=2*flow;\n\t}\n\tres=min(res,ans);\n}\n\nsigned main(void){\n\n\tn=read(),m=read();s=0,t=2*n+1,res=3*n-1+m;\n\tfor(int i=1;i<=m;i++)u[i]=read(),v[i]=read();\n\tfor(int i=1;i<=m;i++){deg[v[i]]++;if(u[i]!=v[i])deg[u[i]]++;}\n\tfor(int i=1;i<=n;i++)solve(i);cout<<res<<endl;\n\n\treturn 0;\n}\n```",
        "postTime": 1644917431,
        "uid": 307453,
        "name": "\u4e91\u6d45\u77e5\u5904",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF387D George and Interesting Graph"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5927\u6982\u5e94\u8be5\u662f\u7528\u4e8c\u5206\u56fe\u5339\u914d\u5427\n\n## \u9898\u610f\uff1a\n\u5728\u6709\u5411\u56fe\u4e2d\uff0c\u901a\u8fc7\u52a0\u8fb9\u3001\u5220\u8fb9\u6ee1\u8db3\u4e24\u4e2a\u6761\u4ef6\u3002\n\n\u786e\u5b9a\u4e00\u4e2a\u4e2d\u5fc3\u70b9 $u$\uff0c\u5bf9\u4e8e\u4efb\u610f\u70b9 $v$\uff0c\u5b58\u5728 $(u,v)$ \u4e0e $(v,u)$\uff0c\u5b58\u5728\u81ea\u73af\u3002\n\n\u9664\u4e2d\u5fc3\u70b9\u5916\u7684\u70b9\u7684\u51fa\u5ea6\u3001\u5165\u5ea6\u90fd\u8981\u4e3a2\u3002\n\n\u6c42\u6700\u5c0f\u64cd\u4f5c\u6570\u3002\n\n## \u5206\u6790\uff1a\n\u9996\u5148\u679a\u4e3e\u4e2d\u5fc3\u70b9 $u$\u3002\n\n\u4e0e $u$ \u76f8\u8fde\u7684\u8fb9\uff0c\u76f4\u63a5\u8ba1\u5165\u4fdd\u7559\u7684\u8fb9\u4e2d\u3002\n\n\u6b64\u5916\uff0c\u8fd8\u6709\u975e\u4e2d\u5fc3\u70b9 $v$\uff0c\u6ee1\u8db3\u5165\u5ea6\u4e0e\u51fa\u5ea6\u5747\u4e3a1\u3002\n\n\u4e0d\u59a8\u62c6\u4e00\u4e2a\u70b9 $x$ \u4e3a $x_{in}$ \u548c $x_{out}$\uff0c\u4e0d\u96be\u5f97\u5230\u4e00\u4e2a\u5c0f\u6027\u8d28\uff0c\u5bf9\u4e8e\u8fb9 $(x,y)$\uff0c$x_{out}$ \u6307\u5411 $y_{in}$\u3002\n\n\u90a3\u6240\u4ee5\uff0c\u5165\u70b9\u548c\u51fa\u70b9\u7684\u6700\u5927\u5339\u914d\u5c31\u662f\u6700\u591a\u4fdd\u7559\u7684\u8fb9\uff0c\u8003\u8651\u7528\u53ef\u7231\u7684\u7f51\u7edc\u6d41\u6765\u6c42\u89e3\u3002\n\n\u5982\u679c\u603b\u5171\u4fdd\u7559 $p$ \u6761\u8fb9\uff0c\u5305\u62ec\u4e0e\u4e2d\u5fc3\u76f8\u8fde\u7684 $2n-1$\uff0c\u4e0d\u76f8\u8fde\u7684 $n-1$\uff0c\u4e8e\u662f\u5f97\u5230\u603b\u7684\u64cd\u4f5c\u6570 $3n-2+m-2x$\uff0c\u5176\u4e2d $x$ \u5305\u542b\u5165\u8fb9\u3001\u51fa\u8fb9\u548c\u6700\u5927\u6d41\u7684\u503c\u3002\n\n## CODE\uff1a\n```cpp\n#include <bits/stdc++.h>\n#define int long long\n#define maxn 20005\n#define maxm 200005\nusing namespace std;\nnamespace q_wr {\n\tinline int read() {\n\t\tchar c = getchar();\n\t\tint x = 0, f = 1;\n\t\twhile (c < '0' || c > '9') {\n\t\t\tif (c == '-') f = -1;\n\t\t\tc = getchar();\n\t\t}\n\t\twhile (c >= '0' && c <= '9') {\n\t\t\tx = (x << 1) + (x << 3) + c - '0';\n\t\t\tc = getchar();\n\t\t}\n\t\treturn x * f;\n\t}\n\tinline void write(int x) {\n\t\tif (x < 0) {\n\t\t\tx = ~(x - 1);\n\t\t\tputchar('-');\n\t\t}\n\t\tif (x > 9)\n\t\t\twrite(x / 10);\n\t\tputchar(x % 10 + '0');\n\t}\n}\nusing namespace q_wr;\nstruct edge {\n\tint v, nxt, w;\n}e[maxm];\nstruct ledge {\n\tint u, v;\n}l[maxm];\nint n, m, s, t = maxn - 1, dep[maxn], head[maxn], k = 1;\ninline void add (int u, int v, int w) {\n\te[++k] = (edge){v, head[u], w};\n\thead[u] = k;\n}\ninline bool bfs () {\n\tmemset(dep, 0, sizeof dep);\n\tqueue <int> q;\n\tq.push(s);\n\tdep[s] = 1;\n\twhile (!q.empty()) {\n\t\tint u = q.front();\n\t\tq.pop();\n\t\tfor (int i = head[u]; i; i = e[i].nxt) {\n\t\t\tint v = e[i].v;\n\t\t\tif (e[i].w && !dep[v]) {\n\t\t\t\tdep[v] = dep[u] + 1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn dep[t];\n}\ninline int dfs (int u, int in) {\n\tif (u == t) return in;\n\tint out = 0;\n\tfor (int i = head[u]; i; i = e[i].nxt) {\n\t\tint v = e[i].v;\n\t\tif (e[i].w && dep[v] == dep[u] + 1) {\n\t\t\tint res = dfs(v, min(e[i].w, in));\n\t\t\tin -= res;\n\t\t\tout += res;\n\t\t\te[i].w -= res;\n\t\t\te[i ^ 1].w += res;\n\t\t}\n\t}\n\tif (!out) dep[u] = 0;\n\treturn out;\n}//\u6700\u5927\u6d41\nint in[maxn], out[maxn];\nsigned main () {\n\tn = read(), m = read();\n\tfor (int i = 0; i < m; i++) {\n\t\tint u = read(), v = read();\n\t\tl[i] = (ledge){u, v};\n\t\tin[v]++, out[u]++;\n\t\tif (u == v) \n\t\t\tin[v]--;\n\t}\n\tint res = maxm;\n\tfor (int i = 1; i <= n; i++) {\n\t\tmemset(head, 0, sizeof head);\n\t\tk = 1;\n\t\tint p = in[i] + out[i];\n\t\tfor (int j = 1; j <= n; j++) {\n\t\t\tadd(s, j, 1);\n\t\t\tadd(j, s, 0);\n\t\t\tadd (j + n, t, 1);\n\t\t\tadd (t, j + n, 0);\n\t\t}//\u62c6\u70b9\n\t\tfor (int j = 0; j < m; j++) {\n\t\t\tif (l[j].u == i || l[j].v == i) //\u4e2d\u5fc3\u70b9\n\t\t\t\tcontinue;\n\t\t\tadd (l[j].u, n + l[j].v, 1);\n\t\t\tadd (n + l[j].v, l[j].u, 0);\t\n\t\t}\n\t\tint ans = 0;\n\t\twhile (bfs()) \n\t\t\tans += dfs(s, 1e12);\n\t\tres = min(res, (n << 1) + n - 2 + m - (p << 1) - (ans << 1));\n\t}\n\twrite(res);\n}\n```\n",
        "postTime": 1633493555,
        "uid": 317495,
        "name": "JWRuixi",
        "ccfLevel": 7,
        "title": "Solution CF387D"
    },
    {
        "content": "### \u9898\u610f\u5206\u6790\n\n\u64cd\u4f5c\u6700\u5c11\u7684\u6b21\u6570\uff0c\u6784\u6210\u6709\u8da3\u56fe\uff0c\u6ce8\u610f\u65e0\u91cd\u8fb9\uff0c\u6709\u5411\u8fb9\u3002\n\n- \u64cd\u4f5c\u5206\u4e3a\u52a0\u8fb9\u548c\u5220\u8fb9\u3002\n- \u6709\u8da3\u56fe\u5b9a\u4e49\n  - \u6709\u4e00\u4e2a\u4e2d\u5fc3\uff0c\u6ee1\u8db3\u6b64\u70b9\u6709\u81ea\u73af\uff0c\u4e14\u4e0e\u5176\u4ed6\u7ed3\u70b9\u6709\u53cc\u5411\u8fb9\u3002\n  - \u9664\u4e2d\u5fc3\u70b9\u5916\u7684\u7ed3\u70b9\uff0c\u6ee1\u8db3\u51fa\u5ea6 = \u5165\u5ea6 = 2\u3002\n\n### \u7b97\u6cd5\u5206\u6790\n\n1\u3001\u4ed4\u7ec6\u5206\u6790\u6709\u8da3\u56fe\u7684\u5b9a\u4e49\uff0c\u53d1\u73b0\u5982\u4e0b\u6027\u8d28\uff1a\n\n- \u4e2d\u5fc3\u7684\u8fb9\u6570\u4e3a $(n-1)\\times 2+1$\uff0c\u4e5f\u5c31\u662f\u5b83\u4e0e\u5176\u4ed6\u7ed3\u70b9\u8981\u6709\u53cc\u5411\u8fb9\u518d\u52a0\u81ea\u5df1\u7684\u4e00\u4e2a\u81ea\u73af\uff0c\u65e0\u91cd\u8fb9\u6240\u4ee5\u6784\u9020\u4e2d\u5fc3\u70b9\u65f6\u4e0d\u53ef\u80fd\u505a\u5220\u9664\u64cd\u4f5c\uff0c\u53ea\u80fd\u52a0\u8fb9\u6216\u4e0d\u64cd\u4f5c\u3002\n- \u5176\u4ed6\u7ed3\u70b9\u7684\u51fa\u5165\u5ea6\u4e3a 2\uff0c\u6392\u9664\u6389\u4e0e\u4e2d\u5fc3\u70b9\u8fde\u63a5\u7684\u53cc\u5411\u8fb9\uff0c\u5176\u70b9\u7684\u5ea6\u4e00\u5b9a\u4e3a\u4e00\u8fdb\u4e00\u51fa\u3002\n\n2\u3001\u5982\u4f55\u5224\u65ad\u7ed3\u70b9\u7684\u5ea6\u6ee1\u8db3\u4e00\u8fdb\u4e00\u51fa\u3002\n\n![](https://cdn.jsdelivr.net/gh/SerokSSR/img/cf387d1.png)\n\n\u56fe\u4e00\uff0c\u56fe\u4e8c\u90fd\u662f\u6ee1\u8db3\u7ed3\u70b9\u5ea6\u4e00\u8fdb\u4e00\u51fa\u3002\u6240\u4ee5 $n$ \u4e2a\u7ed3\u70b9\u9700\u8981 $n$ \u6761\u76f8\u8fde\u8fb9\uff08\u9996\u5c3e\uff09\u3002\n\n![](https://cdn.jsdelivr.net/gh/SerokSSR/img/cf387d2.png)\n\n\u56fe\u4e09\u4e0d\u6ee1\u8db3\uff0c\u53ea\u6709\u4e24\u6761\u76f8\u8fde\u8fb9 $(e_1,e_2)$ \u6216\u8005\u9009\u62e9 $(e_1,e_3)$ \u5373\u6709\u7528\u8fb9,\u8fd8\u9700\u8981\u6dfb\u52a0 $n-2$ \u8fb9\u6709\u7528\u8fb9\uff0c\u540c\u65f6\u8fd8\u8981\u51cf\u6389 1 \u6761\u8fb9\uff0c\u5373\u603b\u8fb9\u6570\u51cf\u53bb\u6709\u7528\u8fb9\uff0c\u4e5f\u5c31\u662f\u8981\u5220\u9664\u7684\u65e0\u7528\u8fb9\u3002\n\n> \u65b9\u6cd51\uff1a\u62c6\u70b9\uff0c\u4e00\u4e2a\u70b9\u62c6\u4e3a\u8fdb\u70b9\u548c\u51fa\u70b9\uff0c\u5efa\u7acb\u4e8c\u5206\u56fe\u3002\n>\n> \u200b\t![](https://cdn.jsdelivr.net/gh/SerokSSR/img/cf387d3.png)\n>\n> \u5de6\u8fb9\u7684\u70b9\u6c42\u5339\u914d\uff0c\u6700\u5927\u5339\u914d\u5c31\u662f\u6709\u7528\u7684\u8fb9\u3002\n>\n> \u65b9\u6cd52\uff1a\u76f4\u63a5\u5c06\u56fe\u770b\u6210\u4e8c\u5206\u56fe\uff0c\u5229\u7528\u6709\u5411\u8fb9\u6bcf\u4e2a\u70b9\u90fd\u6c42\u5339\u914d\u3002\n\n3\u3001\u679a\u4e3e\u6bcf\u4e2a\u70b9\u505a\u4e2d\u5fc3\u70b9\u3002\n\n- \u4e2d\u5fc3\u70b9 V\uff0c\u8ba1\u7b97\u7ef4\u62a4\u4e2d\u5fc3\u9700\u8981\u7684\u8fb9 $(n-1)\\times 2+1-\\sum{V\u53d1\u51fa\u7684\u8fb9}$\n\n- \u5220\u9664 V \u70b9\uff0c\u4e5f\u5c31\u662f\u5305\u542b\u76f8\u5e94\u7684\u8fb9\n\n- \u5269\u4e0b\u7684\u56fe\uff0c\u8ba1\u7b97\u6700\u5927\u5339\u914d\uff0c\u6ee1\u8db3\u4e00\u8fdb\u4e00\u51fa\u7684\u8fb9\u6570\u9700\u8981\u7684\u64cd\u4f5c\uff08\u6dfb\u52a0\u8fb9 + \u5220\u9664\u8fb9\uff09\u3002\n\n```cpp\n#include <stdio.h>\n#include <string.h>\n#include <limits.h>\n#include <vector>\n#include <iostream>\nusing namespace std;\n\nconst int N = 550, INF = INT_MAX;\nvector<int> g[N];\nint c, n, m;\n\nint tag = 0, vis[N], match[N];\nbool mp[N][N];\n\nbool dfs(int u) {\n\tfor(int i = 0; i < g[u].size(); ++i) {\n\t\tint v = g[u][i];\n\t\tif(v == c) continue;\n\t\tif(vis[v] == tag) continue;\n\t\tvis[v] = tag;\n\t\tif(match[v] == 0 or dfs(match[v])) {\n\t\t\tmatch[v] = u;\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nint best = INF;\n\nint main() {\n\t\n\tscanf(\"%d%d\", &n, &m);\n\t\n\tint sum0 = 0;\n\tfor(int i=1, u, v; i<=m; ++i) {\n\t\tscanf(\"%d%d\", &u, &v);\n\t\tg[u].push_back(v);\n\t\tmp[u][v] = true;\n\t\t++sum0;\n\t}\n\t\n\tfor(int i=1; i<=n; ++i) {\n\t\tmemset(match, 0, sizeof match);\n\t\tc = i;\n\t\tint ans = 0;\n\t\tint sum1 = 0;\n\t\tfor(int j=1; j<=n; ++j) {\n\t\t\tif(j == c) {\n\t\t\t\tif(mp[c][c]) ++sum1;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(mp[j][c]) ++sum1;\n\t\t\tif(mp[c][j]) ++sum1;\n\t\t}\n\t\tans += 2*(n-1) + 1 - sum1;\n\t\t//printf(\"ans1 = %d\\n\", ans);\n\t\t//printf(\"sum1 = %d\\n\", sum1);\n\t\tint sum2 = 0;\n\t\tfor(int j=1; j<=n; ++j) {\n\t\t\t++tag;\n\t\t\tif(j == c) continue;\n\t\t\tif(dfs(j)) ++sum2;\n\t\t}\n\t\t\n\t\tans += sum0 - sum1 - sum2 + n-1 - sum2;\n\t\t\n\t\tbest = min(best, ans);\n\t\t//printf(\"ans2 = %d\\n\", ans);\n\t\t//printf(\"sum2 = %d\\n\", sum2);\n\t}\n\t\n\tprintf(\"%d\\n\", best);\n\treturn 0;\n}\n```",
        "postTime": 1606216947,
        "uid": 125032,
        "name": "SerokSSR",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF387D \u3010George and Interesting Graph\u3011"
    },
    {
        "content": "\u8003\u8651\u679a\u4e3e\u6bcf\u4e2a\u70b9\u4f5c\u4e3a\u8d77\u59cb\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u663e\u7136\u7684\u6027\u8d28\uff1a\n\n\u5f53\u6240\u6709\u70b9\u90fd\u6709\u5230\u4e2d\u70b9\u7684\u8fb9\u4e14\u4e2d\u70b9\u6709\u5230\u6240\u6709\u70b9\u7684\u8fb9\u65f6\uff0c\u9664\u4e2d\u70b9\u4ee5\u5916\u6240\u6709\u70b9\u8981\u4e48\u6784\u6210\u81ea\u73af\uff0c\u8981\u4e48\u5728\u4e00\u4e2a\u73af\u91cc\u9762\u3002\n\n\u8003\u8651\u628a\u6bcf\u4e2a\u70b9\u62c6\u70b9\uff0c\u8dd1\u4e8c\u5206\u56fe\u5339\u914d\uff0c\u770b\u5728\u539f\u56fe\u4e0a\u7684\u8fb9\u6700\u591a\u80fd\u6ee1\u8db3\u51e0\u6761\uff0c\u56e0\u4e3a\u6ca1\u6709\u91cd\u8fb9\uff0c\u6240\u4ee5\u5904\u7406\u5f88\u7b80\u5355\u3002\n\n\u6211\u4eec\u8bbe\u4e8c\u5206\u56fe\u4e2d\u7684\u8fb9\u6570\u4e3a $n$ \uff0c\u5339\u914d\u7684\u8fb9\u6570\u4e3a $n_1$\uff0c \u70b9\u7684\u4e2a\u6570\u4e3a $p$ \uff0c\u4ece\u4e2d\u70b9\u5230\u5176\u4ed6\u70b9\u8981\u52a0\u7684\u8fb9\u6570\u4e3a $cur$\n\n\u90a3\u4e48 $ans = min\\{(n - n_1) + (p - 1 - n_1) + cur\\}$\n\n\u4ee3\u7801\uff1a\n```\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n\nusing namespace std;\n\nbool conn[555][555];\nint inv[555],ouv[555];\nint link[555];\nint n,m;\nbool vis[555];\n\nbool dfs(int pos,int rt)\n{\n\tfor(int i = 1;i <= n; ++ i)\n\t{\n\t\tif(conn[pos][i] && i != rt && !vis[i])\n\t\t{\n\t\t\tvis[i] = 1;\n\t\t\tif(link[i] == -1 || dfs(link[i],rt))\n\t\t\t{\n\t\t\t\tlink[i] = pos;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i = 1;i <= m; ++ i)\n\t{\n\t\tint fr,to;\n\t\tscanf(\"%d%d\",&fr,&to);\n\t\tconn[fr][to] = 1;\n\t\tinv[to]++,ouv[fr]++;\n\t}\n\tint ouvx[555],invx[555];\n\tint minn = 0x3f3f3f3f;\n\tfor(int i = 1;i <= n; ++ i)\n\t{\n\t\tmemset(link,-1,sizeof(link));\n\t\tint cur = 0,tot = 0;\n\t\tmemcpy(invx,inv,sizeof(inv));\n\t\tmemcpy(ouvx,ouv,sizeof(ouv));\n\t\tint cnt = 0;\n\t\tint tmpm = m;\n\t\tfor(int j = 1;j <= n; ++ j)\n\t\t{\n\t\t\tif(j != i)\n\t\t\t{\n\t\t\t\tif(!conn[i][j])\n\t\t\t\t\tcur++;\n\t\t\t\telse\n\t\t\t\t\ttmpm--;\n\t\t\t\tif(!conn[j][i])\n\t\t\t\t\tcur++;\n\t\t\t\telse\n\t\t\t\t\ttmpm--;\n\t\t\t}\n\t\t\telse\n\t\t\t\tcur += conn[i][i] ^ 1,tmpm -= conn[i][i];\t\n\t\t\tif(j != i)\n\t\t\t{\n\t\t\t\tmemset(vis,0,sizeof(vis));\n\t\t\t\tif(dfs(j,i))\n\t\t\t\t\tcnt++;\n\t\t\t}\n\t\t}\n\t\tcur += tmpm - cnt,cur += (n - 1) - cnt;\n\t\tminn = min(minn,cur);\n\t}\n\tprintf(\"%d\\n\",minn);\n\treturn 0;\n}\n\n```",
        "postTime": 1521686252,
        "uid": 25308,
        "name": "Wen_kr",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF387D \u3010George and Interesting Graph\u3011"
    }
]