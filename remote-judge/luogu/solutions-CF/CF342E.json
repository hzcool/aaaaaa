[
    {
        "content": "[\u535a\u5ba2\u4f7f\u7528\u6548\u679c\u66f4\u4f73\uff0c\u52a0\u8f7d\u8f83\u6162\u8bf7\u7a0d\u5019\u7247\u523b](https://endsah.cf/blog/CF342E-Xenia-and-Tree/#more)\n\n# Solution\n\n\u70b9\u5206\u6811\u53ef\u4ee5\u505a\uff0c\u53c2\u8003\u53e6\u4e00\u7bc7\u9898\u89e3\u3002\u4e0d\u8fc7\u6709\u6bd4\u8fd9\u66f4\u7b80\u5355\u7684\u505a\u6cd5\u3002\n\n\u6709\u4e24\u79cd\u5f62\u5f0f\u7684\u66b4\u529b\uff1a\n\n1. \u5bf9\u6bcf\u4e2a\u8be2\u95ee\u70b9\uff0c\u90fd\u548c\u5728\u5176\u4e4b\u524d\u6240\u6709\u7684\u7ea2\u8272\u70b9\u6c42 LCA \u5e76\u8ba1\u7b97\u51fa\u8ddd\u79bb\uff0c\u518d\u53d6\u6700\u5c0f\u503c\u3002\n2. \u5bf9\u6bcf\u4e2a\u88ab\u4fee\u6539\u4e3a\u7ea2\u8272\u70b9\u7684\u70b9\uff0c\u90fd\u5728\u6811\u4e0a BFS \u5e76\u66f4\u65b0\u6240\u6709\u70b9\u5230\u7ea2\u8272\u70b9\u7684\u6700\u5c0f\u503c\u3002\n\n\u8fd9\u4e24\u4e2a\u66b4\u529b\u5404\u6709\u4f18\u52a3\uff0c\u5982\u4f55\u628a\u5b83\u4eec\u7684\u4f18\u52a3\u70b9\u7efc\u5408\u8d77\u6765\uff1f\n\n\u6700\u5e38\u7528\u7684\u64cd\u4f5c\u5c31\u662f\u5206\u5757\u3002\n\n\u8003\u8651\u5bf9\u64cd\u4f5c\u5e8f\u5217\u5206\u5757\uff0c\u8bbe\u5757\u5927\u5c0f\u4e3a $S$\u3002\n\n\u5982\u4f55\u56de\u7b54\u8be2\u95ee\uff1f\n\n\u9996\u5148\u5bf9\u4e8e\u5728\u8fd9\u4e2a\u8be2\u95ee\u6240\u5c5e\u5757\u4e4b\u524d\u7684\u90a3\u4e9b\u6574\u5757\u800c\u8a00\uff0c\u6bcf\u5757\u90fd\u628a\u6240\u6709\u7684\u4fee\u6539\u4e22\u5230\u961f\u5217\u91cc\u591a\u6e90 BFS \u4e00\u904d\uff0c\u6bcf\u5757\u590d\u6742\u5ea6 $O(n)$\uff1b\n\n\u4e0e\u8fd9\u4e2a\u8be2\u95ee\u5728\u540c\u4e00\u4e2a\u5757\u5185\u7684\u4fee\u6539\u70b9\uff0c\u76f4\u63a5\u66b4\u529b\u6c42 LCA \u5e76\u66f4\u65b0\u7b54\u6848\u5373\u53ef\uff0c\u590d\u6742\u5ea6 $O(S ^2 \\log n)$\u3002\n\n\u603b\u590d\u6742\u5ea6\u4e3a $O(n \\cdot \\frac m S + S ^2 \\log n \\cdot \\frac m S)$\uff0c\u6613\u77e5 $S$ \u53d6 $\\sqrt {\\frac n {\\log n}}$ \u6700\u4f18\uff0c\u6b64\u65f6\u603b\u590d\u6742\u5ea6\u4e3a $O(m \\cdot \\sqrt {n \\log n})$\u3002\n\n\u770b\u8d77\u6765\u8fd9\u4e2a\u590d\u6742\u5ea6\u5f88\u60ac\uff0c\u5b9e\u9645\u4e0a\u8fd8\u4f1a\u5e26\u4e0a\u5927\u7ea6 $\\frac 1 4$ \u7684\u5e38\u6570\uff0c\u5e76\u4e14\u6811\u5256\u7684 $\\log$ \u6839\u672c\u8dd1\u4e0d\u6ee1\uff0c\u6240\u4ee5\u80fd\u8f7b\u677e\u7684\u8fc7\u6389\u3002\n\n\u7c7b\u4f3c\u7684\u5206\u5757\u601d\u60f3\u7684\u9898\u4eca\u5e74 APIO \u4e5f\u51fa\u4e86\uff0c[[APIO2019]\u6865\u6881](https://www.luogu.org/problem/P5443)\uff0c\u53ef\u4ee5\u518d\u62ff\u8fd9\u9898\u7ec3\u4e0b\u624b\u3002\n\n# Code\n\n\u4e00\u904d\u8fc7\u4e86hhh\n\n```cpp\n/**********************************************************\n * Author        : EndSaH\n * Email         : hjxhb1@gmail.com\n * Created Time  : 2019-09-14 09:00\n * FileName      : wib.cpp\n * Website       : https://endsah.cf\n * *******************************************************/\n\n#include <cstdio>\n#include <cmath>\n#include <cctype>\n#include <cstring>\n#include <vector>\n#include <queue>\n\n#define debug(...) fprintf(stderr, __VA_ARGS__)\n#define Debug(s) debug(\"The message in line %d, Function %s: %s\\n\", __LINE__, __FUNCTION__, s)\n#define getchar() (ipos == iend and (iend = (ipos = _ibuf) + fread(_ibuf, 1, __bufsize, stdin), ipos == iend) ? EOF : *ipos++)\n#define putchar(ch) (opos == oend ? fwrite(_obuf, 1, __bufsize, stdout), opos = _obuf : 0, *opos++ = (ch))\n#define __bufsize (1 << 21 | 1)\n\nchar _ibuf[__bufsize], _obuf[__bufsize], _stk[50];\nchar *ipos = _ibuf, *iend = _ibuf, *opos = _obuf, *oend = _obuf + __bufsize, *stkpos = _stk;\n\nstruct END\n{ ~END() { fwrite(_obuf, 1, opos - _obuf, stdout); } }\n__;\n\ninline int read()\n{\n    register int x = 0, flag = 1;\n    register char ch;\n    while (!isdigit(ch = getchar()))\n        if (ch == '-')\n            flag = -1;\n    while (x = x * 10 + (ch & 15), isdigit(ch = getchar()));\n    return x * flag;\n}\n\ntemplate <typename _INT>\ninline void write(_INT x)\n{\n    if (x < 0)\n        putchar('-'), x = -x;\n    while (*++stkpos = x % 10 ^ 48, x /= 10, x);\n    while (stkpos != _stk)\n        putchar(*stkpos--);\n}\n\ntemplate <typename _Tp>\ninline bool Chkmax(_Tp& x, const _Tp& y)\n{ return x < y ? x = y, true : false; }\n\ntemplate <typename _Tp>\ninline bool Chkmin(_Tp& x, const _Tp& y)\n{ return x > y ? x = y, true : false; }\n\nconst int maxN = 1e5 + 5;\nconst int maxM = 1e5 + 5;\n\nint n, m, len;\nint dep[maxN], fa[maxN], top[maxN], son[maxN], size[maxN];\nint mindis[maxN], dis[maxN];\nint opt[maxM], node[maxM], id[maxM];\nstd::vector<int> G[maxN];\nstd::queue<int> q;\n\nvoid DFS1(int u)\n{\n    size[u] = 1;\n    for (int v : G[u])\n    {\n        if (fa[u] == v)\n            continue;\n        fa[v] = u, dep[v] = dep[u] + 1;\n        DFS1(v);\n        size[u] += size[v];\n        if (size[son[u]] < size[v])\n            son[u] = v;\n    }\n}\n\nvoid DFS2(int u)\n{\n    if (son[u])\n        top[son[u]] = top[u], DFS2(son[u]);\n    for (int v : G[u]) if (!top[v])\n        top[v] = v, DFS2(v);\n}\n\nint Dis(int u, int v)\n{\n    int res = dep[u] + dep[v];\n    while (top[u] != top[v])\n    {\n        if (dep[top[u]] < dep[top[v]])\n            std::swap(u, v);\n        u = fa[top[u]];\n    }\n    if (dep[u] > dep[v])\n        std::swap(u, v);\n    return res - (dep[u] << 1);\n}\n\nint main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\"wib.in\", \"r\", stdin);\n    freopen(\"wib.out\", \"w\", stdout);\n#endif\n    n = read(), m = read();\n    len = sqrt(n * log(n) / log(2));\n    for (int i = 2; i <= n; ++i)\n    {\n        int u = read(), v = read();\n        G[u].push_back(v), G[v].push_back(u);\n    }\n    DFS1(1), memcpy(mindis + 1, dep + 1, n * sizeof(int));\n    top[1] = 1, DFS2(1);\n    for (int i = 1; i <= m; ++i)\n        opt[i] = read(), node[i] = read();\n    id[0] = 1;\n    for (int i = 1; i <= m; ++i)\n        id[i] = (i - 1) / len + 1;\n    for (int i = 1; i <= m; ++i)\n    {\n        if (id[i] != id[i - 1])\n        {\n            memset(dis + 1, 0x3F, n * sizeof(int));\n            for (int j = i - len; j < i; ++j)\n                if (opt[j] == 1)\n                    q.push(node[j]), dis[node[j]] = 0;\n            while (!q.empty())\n            {\n                int u = q.front();\n                q.pop();\n                for (int v : G[u]) if (Chkmin(dis[v], dis[u] + 1))\n                    q.push(v);\n            }\n            for (int i = 1; i <= n; ++i)\n                Chkmin(mindis[i], dis[i]);\n        }\n        if (opt[i] == 2)\n        {\n            int ans = mindis[node[i]];\n            for (int j = i - 1; j and id[j] == id[i]; --j) if (opt[j] == 1)\n                Chkmin(ans, Dis(node[j], node[i]));\n            write(ans), putchar('\\n');\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1568426795,
        "uid": 91252,
        "name": "EndSaH",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF342E \u3010Xenia and Tree\u3011"
    },
    {
        "content": "[\u53ef\u80fd\u66f4\u597d\u7684\u4f53\u9a8c](https://mrsrz.github.io/2019/11/18/CF342E/)\n\n\u6709\u52a8\u6001\u70b9\u5206\u6cbb\u548c\u64cd\u4f5c\u5206\u5757\u7684\u505a\u6cd5\u4e86\uff0c\u8fd9\u91cc\u518d\u6765\u4e00\u4e2a\u4e0d\u4e00\u6837\u7684\u3002\n\n\u8003\u8651\u4e24\u70b9\u7684\u8ddd\u79bb\u7684\u8ba1\u7b97\u65b9\u6cd5\u4e3a $\\mathrm{dist}(u,v)=dep[u]+dep[v]-2\\times dep[\\mathrm{LCA}(u,v)]$\u3002\n\n\u8003\u8651\u65b0\u52a0\u5165\u4e00\u4e2a\u5173\u952e\u70b9\uff0c\u5728\u5176\u6240\u6709\u7956\u5148\u5904\u8bb0\u5f55\u4fe1\u606f\uff0c\u8be2\u95ee\u7684\u65f6\u5019\uff0c\u4e5f\u76f4\u63a5\u5728\u6bcf\u4e2a\u70b9\u7684\u7956\u5148\u4e0a\u8be2\u95ee\u3002\u76f8\u5f53\u4e8e\u679a\u4e3e\u6700\u8fd1\u516c\u5171\u7956\u5148\uff0c\u8ba1\u7b97\u5176\u6700\u5c0f\u8d21\u732e\u3002\n\n\u4f46\u662f\u66f4\u65b0\u7b54\u6848\u65f6\uff0c\u4f1a\u6d89\u53ca\u5230 $O(n)$ \u4e2a\u70b9\u7684\u4fee\u6539\uff0c\u800c\u4e14\u6bcf\u4e2a\u70b9\u4f5c\u4e3a LCA \u7684 $dep$ \u8981\u8ba1\u7b97\u8fdb\u53bb\u4ee5\u4fbf\u4e8e\u53d6\u6700\u5c0f\u503c\u3002\u6240\u4ee5\u52a0\u5165\u5173\u952e\u70b9\u65f6\uff0c\u66f4\u65b0\u7684\u7b54\u6848\u662f\u4e00\u4e2a\u7c7b\u4f3c\u7b49\u5dee\u6570\u5217\u3002\n\n\u8fd9\u91cc\u4e5f\u8bb8\u53ef\u4ee5\u4f7f\u7528\u6811\u5256+\u674e\u8d85\u6811\u5b9e\u73b0 $O(m\\log^3 n)$\uff0c\u4f46\u53ef\u80fd\u56e0\u4e3a\u4e00\u4e9b\u91cd\u590d\u8ba1\u7b97\u4e4b\u7c7b\u7684\u95ee\u9898\u800c\u51fa\u9519~~\u800c\u4e14\u590d\u6742\u5ea6\u770b\u8d77\u6765\u4e0d\u597d\u770b\u867d\u7136\u5e38\u6570\u633a\u5c0f~~\u3002\n\n\u8003\u8651\u6811\u94fe\u5256\u5206\u7ef4\u62a4\u8f7b\u513f\u5b50\u4fe1\u606f\uff0c\u6bcf\u4e2a\u70b9\u7ef4\u62a4\u8f7b\u513f\u5b50\u6240\u5728\u5b50\u6811\u548c\u81ea\u5df1\u8282\u70b9\u672c\u8eab\uff0c\u8282\u70b9\u6df1\u5ea6\u6700\u5c0f\u548c\u7b2c\u4e8c\u5c0f\u7684\u8282\u70b9\u7684\u6df1\u5ea6\u53ca\u6240\u5728\u5b50\u6811\u3002\u7136\u540e\uff0c\u4ee4\u6700\u5c0f\u7684\u6df1\u5ea6\u4e3a $d$\uff0c\u5c06 $d-2\\times dep[v]$ \u63d2\u5165 $v$ \u5bf9\u5e94\u7684\u7ebf\u6bb5\u6811\u8282\u70b9\u4e2d\uff0c\u7528\u4ee5\u67e5\u8be2\u6700\u5c0f\u503c\u3002\n\n\u66f4\u65b0\u7684\u65f6\u5019\uff0c\u663e\u7136\u53ea\u4f1a\u5728\u6bcf\u6761\u91cd\u94fe\u94fe\u9876\u66f4\u65b0\uff0c\u590d\u6742\u5ea6\u662f $O(\\log^2 n)$\u3002\n\n\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u5bf9\u4e8e\u91cd\u94fe\u4e0a\u7684\uff0c\u76f4\u63a5\u533a\u95f4\u67e5\u8be2\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n\u4f46\u662f\u5f53\u5207\u6362\u94fe\u7684\u65f6\u5019\u4f1a\u51fa\u73b0\u4e00\u4e9b\u60c5\u51b5\uff1a\n\n1. \u94fe\u9876\u7684\u7236\u4eb2\u8282\u70b9\u4fdd\u5b58\u7684\u6700\u5927\u503c\u5728\u94fe\u9876\u6240\u5728\u5b50\u6811\u4e2d\u3002\u8fd9\u91cc\u4e3a\u4e86\u9632\u6b62\u91cd\u590d\uff08\u5176\u5b9e\u4e0d\u4f1a\u9519\u8bef\u56e0\u4e3a\u8ba1\u7b97\u7684\u662f\u6700\u5c0f\u503c\uff0c\u51fa\u73b0\u6b64\u79cd\u60c5\u51b5\u6700\u5c0f\u503c\u5728\u4e4b\u524d\u5e94\u8be5\u5df2\u7ecf\u66f4\u65b0\u4e86\uff09\uff0c\u4f7f\u7528\u6b21\u5927\u503c\u8fdb\u884c\u8ba1\u7b97\u3002\n2. \u94fe\u9876\u7684\u7236\u4eb2\u8282\u70b9\u7684\u91cd\u513f\u5b50\u6240\u5728\u5b50\u6811\u672a\u8ba1\u7b97\u8d21\u732e\u3002\u90a3\u4e48\u6211\u4eec\u518d\u5f00\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u7528\u6765\u67e5\u8be2\u5b50\u6811\u4e2d\u6df1\u5ea6\u6700\u5c0f\u7684\u8282\u70b9\u7684\u6df1\u5ea6\uff0c\u7136\u540e\u76f4\u63a5\u67e5\u8be2\u91cd\u513f\u5b50\u4e2d\u7684\u6700\u5c0f\u6df1\u5ea6\uff0c\u8ba1\u7b97\u8d21\u732e\u5373\u53ef\u3002\n\n\u8fd9\u91cc\u7684\u590d\u6742\u5ea6\u4e5f\u662f $O(\\log^2 n)$ \u7684\u3002\n\n\u90a3\u4e48\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(m\\log^2 n)$\u3002\n\n## Code\uff1a\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nconst int N=1e5+6;\nstruct edge{\n\tint to,nxt;\n}e[N<<1];\nstruct info{\n\tint mx1,mx2,id1,id2;\n}f[N];\nint n,m,head[N],cnt,sz[N],son[N],dep[N],fa[N],top[N],dfn[N],idfn[N],idx;\nint d[N<<2],dd[N<<2];\nvoid build(int l,int r,int o){\n\tif(l==r)d[o]=(l==1)?-1:0x3f3f3f3f,dd[o]=d[o]==-1?1:d[o];else{\n\t\tconst int mid=l+r>>1;\n\t\tbuild(l,mid,o<<1),build(mid+1,r,o<<1|1);\n\t\td[o]=min(d[o<<1],d[o<<1|1]);\n\t\tdd[o]=min(dd[o<<1],dd[o<<1|1]);\n\t}\n}\nvoid modify1(int l,int r,int o,const int&pos,const int&val){\n\tif(l==r)d[o]=val;else{\n\t\tconst int mid=l+r>>1;\n\t\tif(pos<=mid)modify1(l,mid,o<<1,pos,val);else modify1(mid+1,r,o<<1|1,pos,val);\n\t\td[o]=min(d[o<<1],d[o<<1|1]);\n\t}\n}\nvoid modify2(int l,int r,int o,const int&pos,const int&val){\n\tif(l==r)dd[o]=val;else{\n\t\tconst int mid=l+r>>1;\n\t\tif(pos<=mid)modify2(l,mid,o<<1,pos,val);else modify2(mid+1,r,o<<1|1,pos,val);\n\t\tdd[o]=min(dd[o<<1],dd[o<<1|1]);\n\t}\n}\nint query1(int l,int r,int o,const int&L,const int&R){\n\tif(L<=l&&r<=R)return d[o];\n\tconst int mid=l+r>>1;\n\tint ret=0x3f3f3f3f;\n\tif(L<=mid)ret=query1(l,mid,o<<1,L,R);\n\tif(mid<R)ret=min(ret,query1(mid+1,r,o<<1|1,L,R));\n\treturn ret;\n}\nint query2(int l,int r,int o,const int&L,const int&R){\n\tif(L<=l&&r<=R)return dd[o];\n\tconst int mid=l+r>>1;\n\tint ret=0x3f3f3f3f;\n\tif(L<=mid)ret=query2(l,mid,o<<1,L,R);\n\tif(mid<R)ret=min(ret,query2(mid+1,r,o<<1|1,L,R));\n\treturn ret;\n}\ninline void update(int id,int sn,int depu){\n\tinfo&x=f[id];\n\tif(depu<x.mx1){\n\t\tx.mx2=x.mx1,x.id2=x.id1;\n\t\tx.mx1=depu,x.id1=sn;\n\t\tmodify1(1,n,1,dfn[id],depu-2*dep[id]);\n\t}else\n\t\tif(depu<x.mx2){\n\t\t\tx.mx2=depu,x.id2=sn;\n\t\t}\n}\nvoid dfs(int now){\n\tsz[now]=1;\n\tfor(int i=head[now];i;i=e[i].nxt)\n\tif(!dep[e[i].to]){\n\t\tdep[e[i].to]=dep[now]+1,fa[e[i].to]=now;\n\t\tdfs(e[i].to);\n\t\tsz[now]+=sz[e[i].to];\n\t\tif(!son[now]||sz[son[now]]<sz[e[i].to])son[now]=e[i].to;\n\t}\n}\nvoid dfs2(int now){\n\tidfn[dfn[now]=++idx]=now;\n\tif(son[now])top[son[now]]=top[now],dfs2(son[now]);\n\tfor(int i=head[now];i;i=e[i].nxt)\n\t\tif(e[i].to!=son[now]&&e[i].to!=fa[now])dfs2(top[e[i].to]=e[i].to);\n}\nvoid modify(int u){\n\tconst int du=dep[u];\n\tmodify2(1,n,1,dfn[u],du);\n\tupdate(u,u,du);\n\twhile(top[u]!=1){\n\t\tupdate(fa[top[u]],top[u],du);\n\t\tu=fa[top[u]];\n\t}\n}\nint query(int u){\n\tint ret=0x3f3f3f3f,depu=dep[u];\n\tret=min(ret,query2(1,n,1,dfn[u],dfn[u]+sz[u]-1)-depu);\n\tfor(;;){\n\t\tint x=top[u],y=fa[top[u]];\n\t\tret=min(ret,query1(1,n,1,dfn[x],dfn[u])+depu);\n\t\tif(y){\n\t\t\tret=min(ret,(f[y].id1==x?f[y].mx2:f[y].mx1)+depu-2*dep[y]);\n\t\t\tif(son[y])\n\t\t\t\tret=min(ret,query2(1,n,1,dfn[son[y]],dfn[son[y]]+sz[son[y]]-1)+depu-2*dep[y]);\n\t\t\tu=y;\n\t\t}else break;\n\t}\n\treturn ret;\n}\nint main(){\n\tios::sync_with_stdio(0),cin.tie(0),cout.tie(0);\n\tcin>>n>>m;\n\tfor(int i=1;i<n;++i){\n\t\tint u,v;\n\t\tcin>>u>>v;\n\t\te[++cnt]=(edge){v,head[u]},head[u]=cnt;\n\t\te[++cnt]=(edge){u,head[v]},head[v]=cnt;\n\t}\n\tdfs(dep[1]=1),dfs2(top[1]=1);\n\tbuild(1,n,1);\n\tmemset(f,0x3f,sizeof f);\n\tmodify(1);\n\twhile(m--){\n\t\tint op,u;\n\t\tcin>>op>>u;\n\t\tif(op==1)modify(u);else cout<<query(u)<<'\\n';\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1574082910,
        "uid": 6813,
        "name": "mrsrz",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF342E \u3010Xenia and Tree\u3011"
    },
    {
        "content": "\u8fd9\u9898\u662f [SPOJ2939. QTREE5 - Query on a tree V](https://www.spoj.com/problems/QTREE5/) \u7684\u4e25\u683c\u5f31\u5316\u7248\uff08\u4fee\u6539\u64cd\u4f5c\u53ea\u6709\u84dd\u53d8\u7ea2\uff09\uff0c\u4f46\u662f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u6ca1\u6709\u4eba\u5199 LCT \u7684\u9898\u89e3\u3002  \n\u6211\u4eec\u5b9a\u4e49 $lmin_x,rmin_x$ \u5206\u522b\u4ee3\u8868\u5728 splay \u4e2d $x$ \u7684\u5b50\u6811\u91cc\u6df1\u5ea6\u6700\u6d45\u7684\u70b9\u80fd\u591f\u5230\u8fbe\u6700\u8fd1\u7684\u767d\u70b9\u7684\u8ddd\u79bb\u548c\u6df1\u5ea6\u6700\u6df1\u7684\u70b9\u80fd\u591f\u5230\u8fbe\u6700\u8fd1\u7684\u767d\u70b9\u7684\u8ddd\u79bb\uff0c\u5e76\u4e14\u7528\u4e00\u4e2a `std::multiset` \u7ef4\u62a4\u4e00\u4e0b\u865a\u5b50\u6811\u4e2d\u7684 $lmin$ \u6700\u5c0f\u503c\u3002\u5408\u5e76\u7684\u65f6\u5019\u8003\u8651\u662f\u5426\u8de8\u8fc7\u6574\u68f5\u5b50\u6811\u5373\u53ef\u3002\n```cpp\n#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <numeric>\n#include <set>\nconstexpr int kInf = 1e9;\nchar Gc() {\n  static char now[1 << 20], *S, *T;\n  if (T == S) {\n    T = (S = now) + std::fread(now, 1, 1 << 20, stdin);\n    if (T == S) return EOF;\n  }\n  return *S++;\n}\ntemplate <typename T>\nvoid Read(T &x) {\n  x = 0;\n  int f = 1;\n  char c;\n  while ((c = Gc()) < '0' || c > '9')\n    if (c == '-') f = -1;\n  x = c - '0';\n  while ((c = Gc()) >= '0' && c <= '9') x = x * 10 + (c - '0');\n  x *= f;\n}\ntemplate <typename T, typename... Args>\nvoid Read(T &x, Args &...args) {\n  Read(x);\n  Read(args...);\n}\ntemplate <typename T>\nvoid checkmax(T &x, T y) {\n  if (x < y) x = y;\n}\ntemplate <typename T>\nvoid checkmin(T &x, T y) {\n  if (x > y) x = y;\n}\nstruct Edge {\n  int to, nxt;\n} e[200001];\nint n, q, E, head[100001], c[100001];\nstd::multiset<int> s[100001];\nint Min(int x) { return s[x].empty() ? kInf : *s[x].begin(); }\nclass LinkCutTree {\n public:\n  int lmin_[100001], rmin_[100001];\n  LinkCutTree() {}\n  void Pushup(int x) {\n    sz_[x] = sz_[ch_[x][0]] + sz_[ch_[x][1]] + 1;\n    lmin_[x] = std::min(\n        lmin_[ch_[x][0]],\n        sz_[ch_[x][0]] +\n            std::min(c[x] ? 0 : kInf, std::min(lmin_[ch_[x][1]], Min(x)) + 1));\n    rmin_[x] = std::min(\n        rmin_[ch_[x][1]],\n        sz_[ch_[x][1]] +\n            std::min(c[x] ? 0 : kInf, std::min(rmin_[ch_[x][0]], Min(x)) + 1));\n  }\n  void Splay(int x) {\n    while (NotRoot(x)) {\n      int y = fa_[x];\n      if (NotRoot(y)) Rotate(IsRson(x) == IsRson(y) ? y : x);\n      Rotate(x);\n    }\n    Pushup(x);\n  }\n  void Access(int x) {\n    for (int y = 0; x; x = fa_[y = x]) {\n      Splay(x);\n      s[x].emplace(lmin_[ch_[x][1]]);\n      if (auto it = s[x].find(lmin_[y]); it != s[x].end()) s[x].erase(it);\n      ch_[x][1] = y;\n      Pushup(x);\n    }\n  }\n  void Link(int x, int y) { fa_[x] = y; }\n  ~LinkCutTree() {}\n\n private:\n  int ch_[100001][2], fa_[100001], sz_[100001];\n  bool NotRoot(int x) { return ch_[fa_[x]][0] == x || ch_[fa_[x]][1] == x; }\n  bool IsRson(int x) { return ch_[fa_[x]][1] == x; }\n  void Rotate(int x) {\n    int y = fa_[x], z = fa_[y], d1 = IsRson(x), d2 = IsRson(y),\n        w = ch_[x][d1 ^ 1];\n    if (NotRoot(y)) ch_[z][d2] = x;\n    ch_[x][d1 ^ 1] = y;\n    ch_[y][d1] = w;\n    if (w) fa_[w] = y;\n    fa_[x] = z;\n    fa_[y] = x;\n    Pushup(y);\n    Pushup(x);\n  }\n} T;\nvoid Add(int f, int t) {\n  e[E].to = t;\n  e[E].nxt = head[f];\n  head[f] = E++;\n}\nvoid Dfs(int u, int fa) {\n  for (int i = head[u]; i != -1; i = e[i].nxt) {\n    int v = e[i].to;\n    if (v == fa) continue;\n    T.Link(v, u);\n    Dfs(v, u);\n  }\n}\nint main(int argc, char const *argv[]) {\n  std::memset(head, -1, sizeof(head));\n  Read(n, q);\n  for (int i = 1; i < n; i++) {\n    int u, v;\n    Read(u, v);\n    Add(u, v);\n    Add(v, u);\n  }\n  T.lmin_[0] = T.rmin_[0] = kInf;\n  Dfs(1, 0);\n  T.Access(1);\n  T.Splay(1);\n  c[1] ^= 1;\n  T.Pushup(1);\n  while (q--) {\n    int op, x;\n    Read(op, x);\n    T.Access(x);\n    T.Splay(x);\n    if (op == 1) {\n      c[x] ^= 1;\n      T.Pushup(x);\n    } else {\n      std::printf(\"%d\\n\", T.rmin_[x] > n ? -1 : T.rmin_[x]);\n    }\n  }\n  return 0;\n}\n```",
        "postTime": 1620872507,
        "uid": 68273,
        "name": "xyf007",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF342E \u3010Xenia and Tree\u3011"
    },
    {
        "content": "[CF342E Xenia and Tree](https://www.luogu.com.cn/problem/CF342E)\u89e3\u9898\u62a5\u544a\uff1a\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.luogu.com.cn/blog/xiaoziyaoxzy/solution-cf342e)\n\n\u5410\u69fd\uff1a\u597d\u5947\u602a\u5440\uff0c\u4e3a\u4ec0\u4e48\u4ea4\u4e86\u4e24\u4efd\u76f8\u540c\u7684\u4ee3\u7801\u4e00\u4efdAC\u4e00\u4efdWA\uff0c\u4e0d\u5e94\u8be5\u8fd4\u56de\u76f8\u540c\u7684\u7b54\u6848\u5417\u3002\n\n## \u9898\u610f\n- \u7ed9\u5b9a\u4e00\u4e2a$n$\u4e2a\u70b9\u7684\u6811\uff0c\u4e00\u5f00\u59cb\u7ed3\u70b9$1$\u4e3a\u7ea2\u70b9\uff0c\u5176\u4ed6\u70b9\u4e3a\u84dd\u70b9\uff1b\n- $m$\u6b21\u64cd\u4f5c\uff0c\u64cd\u4f5c\u5206\u4e24\u7c7b\uff1a\u628a\u4e00\u4e2a\u70b9\u53d8\u6210\u7ea2\u70b9\uff0c\u8be2\u95ee\u4e00\u4e2a\u70b9\u79bb\u6700\u8fd1\u7684\u7ea2\u70b9\u7684\u8ddd\u79bb\u3002\n- \u6570\u636e\u8303\u56f4\uff1a$1\\leqslant n,m\\leqslant 10^5$\u3002\n\n## \u5206\u6790\n\u64cd\u4f5c\u5206\u5757\u3002\n\n\u6211\u4eec\u8bbe\u5b9a\u4e00\u4e2a\u9608\u503c$S$\uff0c\u5bf9\u64cd\u4f5c\u5e8f\u5217\u6bcf$S$\u4e2a\u64cd\u4f5c\u5206\u4e00\u5757\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u8be2\u95ee\uff0c\u6211\u4eec\u5bf9\u7ea2\u70b9\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n- \u5bf9\u4e8e\u4e0d\u5728\u8fd9\u4e2a\u8be2\u95ee\u5757\u5185\u7684\u7ea2\u70b9\uff0c\u6211\u4eec\u9884\u5904\u7406\u51fa\u6765\u8fd9\u4e9b\u7ea2\u70b9\u5bf9\u4e8e\u8be2\u95ee\u7684\u70b9\u7684\u8ddd\u79bb\uff1b\n- \u5bf9\u4e8e\u5728\u8fd9\u4e2a\u8be2\u95ee\u5757\u5185\u7684\u7ea2\u70b9\uff0c\u6211\u4eec\u66b4\u529b\u679a\u4e3e\u7136\u540e\u6c42\u8ddd\u79bb\u3002\n\n\u5177\u4f53\u5730\uff0c\u6bcf\u8de8\u8d8a\u4e00\u6b21\u5757\uff0c\u6211\u4eec\u5c31\u628a\u8fd9\u4e2a\u5757\u5185\u6240\u6709\u7684\u7ea2\u70b9bfs\u4e00\u904d\uff0c\u66f4\u65b0\u5b83\u4eec\u5230\u6240\u6709\u70b9\u7684\u8ddd\u79bb\uff0c\u8fd9\u662f$O(n)$\u7684\uff0c\u4f46\u662f\u7531\u4e8e\u53ea\u4f1a\u8de8\u8d8a$O(\\frac{m}{S})$\u6b21\u5757\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u4e3a$O(n\\times\\frac{m}{S})$\u3002\n\n\u5bf9\u4e8e\u5728\u8fd9\u4e2a\u5757\u5185\u7684\u7ea2\u70b9\uff0c\u6211\u4eec\u679a\u4e3e\u5b83\u4eec\uff0c\u7136\u540e\u7528ST\u8868\u7684$O(n\\log n)-O(1)$\u7684lca\u6c42\u8ddd\u79bb\uff0c\u8fd9\u6837\u6211\u4eec\u7684\u590d\u6742\u5ea6\u4e3a$O(S)$\uff0c\u603b\u590d\u6742\u5ea6\u4e3a$O(m\\times S)$\u3002\n\n\u6545\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\uff1a$O(\\frac{n\\times m}{S}+m\\times S)$\uff0c\u5f88\u663e\u7136$S$\u53d6$\\sqrt{m}$\u65f6\u590d\u6742\u5ea6\u8f83\u4f18\uff0c\u4e3a$O((n+m)\\sqrt{m})$\u3002\n\n## \u4ee3\u7801\n\n\u5206\u5757\u5e38\u6570\u5c0f\uff0c\u52a0\u4e86\u4e2a\u5feb\u8bfb\u5c31\u5230\u6700\u4f18\u89e3\u4e86\u3002\n```\n#include<stdio.h>\n#include<math.h>\n#define inf 1000000000\nconst int maxn=100005,maxm=200005,maxk=20,maxt=405,maxq=100005;\nint n,m,e,qs,t,now;\nint start[maxn],to[maxm],then[maxm],lg[maxn<<1],ST[maxn<<1][maxk],dep[maxn],in[maxn],bl[maxt],br[maxt],opt[maxq],k[maxq],dis[maxn],q[maxn];\ninline int min(int a,int b){\n\treturn a<b? a:b;\n}\ninline int calc(int a,int b){\n\treturn dep[a]<dep[b]? a:b;\n}\ninline void swp(int &a,int &b){\n\ta+=b,b=a-b,a-=b;\n}\ninline void add(int x,int y){\n\tthen[++e]=start[x],start[x]=e,to[e]=y;\n}\nvoid dfs(int x,int last){\n\tdep[x]=dep[last]+1,in[x]=++qs,ST[qs][0]=x;\n\tfor(int i=start[x];i;i=then[i]){\n\t\tint y=to[i];\n\t\tif(y==last)\n\t\t\tcontinue;\n\t\tdfs(y,x);\n\t\tST[++qs][0]=x;\n\t}\n}\nvoid getST(){\n\tlg[0]=-1;\n\tfor(int i=1;i<=qs;i++)\n\t\tlg[i]=lg[i/2]+1;\n\tfor(int i=1;i<=18;i++)\n\t\tfor(int j=1;j+(1<<i)-1<=qs;j++)\n\t\t\tST[j][i]=calc(ST[j][i-1],ST[j+(1<<(i-1))][i-1]);\n}\nint lca(int a,int b){\n\tif(in[a]>in[b])\n\t\tswp(a,b);\n\tint l=in[a],r=in[b],k=lg[r-l+1];\n\treturn calc(ST[l][k],ST[r-(1<<k)+1][k]);\n}\nint getdis(int a,int b){\n\tint c=lca(a,b);\n\treturn dep[a]+dep[b]-2*dep[c];\n}\nvoid bfs(int a,int b){\n\tqs=0;\n\tif(a==-1)\n\t\tq[++qs]=1;\n\telse for(int i=a;i<=b;i++)\n\t\tif(opt[i]==1)\n\t\t\tq[++qs]=k[i];\n\tint now=1;\n\twhile(now<=qs){\n\t\tint x=q[now];\n\t\tnow++;\n\t\tfor(int i=start[x];i;i=then[i]){\n\t\t\tint y=to[i];\n\t\t\tif(dis[y]<=dis[x]+1)\n\t\t\t\tcontinue;\n\t\t\tdis[y]=dis[x]+1,q[++qs]=y;\n\t\t}\n\t}\n}\nint query(int x,int a,int b){\n\tint res=dis[x];\n\tfor(int i=a;i<=b;i++)\n\t\tif(opt[i]==1)\n\t\t\tres=min(res,getdis(x,k[i]));\n\treturn res;\n}\nvoid read(int &x){\n\tchar c=getchar();\n\tx=0;\n\tfor(;c<'0'||c>'9';c=getchar());\n\tfor(;c>='0'&&c<='9';c=getchar())\n\t\tx=x*10+c-48;\n}\nint main(){\n\tread(n),read(m);\n\tfor(int i=1;i<n;i++){\n\t\tint x,y;\n\t\tread(x),read(y);\n\t\tadd(x,y),add(y,x);\n\t}\n\tdfs(1,0),getST();\n\tt=sqrt(m);\n\tfor(int i=1;i<=t;i++)\n\t\tbl[i]=br[i-1]+1,br[i]=i*t;\n\tif(br[t]<m)\n\t\tt++,bl[t]=bl[t-1]+1,br[t]=m;\n\tfor(int i=1;i<=n;i++)\n\t\tdis[i]=inf;\n\tint last=1;\n\tdis[1]=0,bfs(-1,-1);\n\tfor(int i=1;i<=m;i++){\n\t\tif(i>br[last])\n\t\t\tbfs(bl[last],br[last]),last++;\n\t\tread(opt[i]),read(k[i]);\n\t\tif(opt[i]==1)\n\t\t\tdis[k[i]]=0;\n\t\tif(opt[i]==2)\n\t\t\tprintf(\"%d\\n\",query(k[i],bl[last],i));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1605407347,
        "uid": 35754,
        "name": "Verdandi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF342E \u3010Xenia and Tree\u3011"
    },
    {
        "content": "\u70b9\u5206\u6811\u5165\u95e8\u9898\uff0c\u5148\u91cd\u6784\u6811\u4f7f\u6bcf\u70b9\u5ea6\u6570\u8f6c\u4e3a3\uff0c\u5efa\u51fa\u6811\u540e\u81ea\u5e95\u5411\u4e0a\u66b4\u529b\u626b\u4e00\u904d\u6240\u6709\u5b50\u6811\u4fee\u6539+\u8be2\u95ee\uff08\u5ea6\u6570\u4e3a3\u590d\u6742\u5ea6\u6709\u4fdd\u8bc1\uff09\uff0c \u6bcf\u4e00\u7ea7\u8282\u70b9\u53ea\u9700\u8981\u4fdd\u5b58\u5b50\u6811\u4e2d\u79bb\u8282\u70b9\u6700\u8fd1\u7684\u503c\uff0c\u4fee\u6539O(3*logn),\u67e5\u8be2O(3*logn),\u91cd\u6784\u6811\u540e\u5927\u5c0f\u6700\u591a\u4e3a\u539f\u6811\u4e24\u500d\u5927\u5c0f\u3002\u590d\u6742\u5ea6O(6nlogn).  (\u5b9e\u9645\u4e0a\u5feb\u7684\u98de\u8d77\uff0c\u4e0d\u52a0\u5feb\u8bfb\u6240\u6709case3000ms\u90fd\u8dd1\u5b8c\u4e86...)\n\n\n```cpp\n#include<memory>\n#include<memory.h>\n#include<array>\n#include <iostream>\n#include<vector>\n#include<string>\n#include<list>\n#include<set>\n#include<queue>\n#include<map>\n#include<stack>\n#include<algorithm>\n#include<unordered_map>\n#include<unordered_set>\nusing namespace std;\nconst int MAXN = 200000 + 1;\nconst int MAXG = MAXN * 2 + 1;\nconst int MAX_LOG = 19;\nconst int inf = 0x3f3f3f3f;\nint n, q;\n\nstruct Edge {\n\tlong long v, w;\n\n\tEdge(int v, int w) : v(v), w(w) {}\n};\n\nstd::vector<Edge> edge[MAXN], g[MAXG];\nint a[MAXN];\nint tot;\n\ninline void addEdge(int u, int v, int w) {\n\t//cout << u <<\" \"<< v << endl;\n\tg[u].emplace_back(v, w);\n\tg[v].emplace_back(u, w);\n}\n\ninline void binarize(int u, int pre)\n{\n\tstatic std::vector<Edge *> now;\n\tnow.clear();\n\tfor (auto &p : edge[u])\n\t\tif (p.v != pre) now.push_back(&p);\n\tint o = u;\n\tfor (int i = 0; i < (int)now.size(); i++) {\n\t\taddEdge(o, now[i]->v, now[i]->w);\n\t\tif (now.size() - i > 2) {\n\t\t\taddEdge(o, ++tot, 0);\n\t\t\to = tot;\n\t\t}\n\t}\n\tfor (auto &p : edge[u])\n\t\tif (p.v != pre) binarize(p.v, u);\n}\n\nbool vis[MAXG],vis2[MAXG];\nlong long sz[MAXG], idx[MAXG], dep[MAXG], fa[MAXG], weight[MAXG];\nlong long dis[MAXG][MAX_LOG];\nlong long trans[MAXG][3];\n\nvoid dfsSize(int u, int pre) {\n\tsz[u] = 1;\n\tfor (auto &p : g[u]) {\n\t\tif (!vis[p.v] && p.v != pre) {\n\t\t\tdfsSize(p.v, u);\n\t\t\tsz[u] += sz[p.v];\n\t\t}\n\t}\n}\n\nint get(int u, int pre, int n) {\n\tfor (auto &p : g[u])\n\t\tif (!vis[p.v] && p.v != pre && sz[p.v] > n) return get(p.v, u, n);\n\treturn u;\n}\n\nvoid dfs(int u, int pre, int d, int kk) {\n\tfor (auto &p : g[u]) {\n\t\tif (!vis[p.v] && p.v != pre) {\n\t\t\tidx[p.v] = idx[u];\n\t\t\tdis[p.v][kk] = dis[u][kk] + p.w;\n\t\t\tif (p.v <= n && vis2[p.v] == 1)\n\t\t\t\ttrans[d][idx[p.v]] = min(trans[d][idx[p.v]], dis[p.v][kk]);\n\t\t\tdfs(p.v, u, d, kk);\n\t\t}\n\t}\n}\n\nvoid build(int u, int d, int f)\n{\n\tdfsSize(u, 0);\n\tvis[u = get(u, 0, sz[u] / 2)] = true;\n\tfa[u] = f;\n\tdep[u] = d;\n\tint c = 0;\n\tfor (auto &p : g[u]) {\n\t\tif (!vis[p.v]) {\n\t\t\tdis[p.v][d] = p.w;\n\t\t\tidx[p.v] = c++;\n\t\t\tif (p.v <= n && vis2[p.v] == 1)\n\t\t\t\ttrans[u][idx[p.v]] = min(trans[u][idx[p.v]], p.w);\n\t\t\tdfs(p.v, u, u, d);\n\t\t\tbuild(p.v, d + 1, u);\n\t\t}\n\t}\n}\nlong long L, R;\nlong long cur_ans;\nlong long query(int cur, int kk, int id)\n{\n\tif (!cur)\n\t\treturn 0;\n\tfor (int i = 0; i < 3; ++i)\n\t\tif (id != i)\n\t\t\tcur_ans = min(cur_ans, trans[cur][i] + dis[kk][dep[cur]]);\n\tif (vis2[cur])\n\t\tcur_ans = min(cur_ans, dis[kk][dep[cur]]);\n\tquery(fa[cur], kk, idx[cur]);\n}\nvoid update(int cur,int kk,int id)\n{\n\tif (!cur)\n\t\treturn;\n\tif (id != -1)\n\t\ttrans[cur][id] = min(trans[cur][id],dis[kk][dep[cur]]);\n\tupdate(fa[cur], kk, idx[cur]);\n}\nint32_t main()\n{\n\tios::sync_with_stdio(false);\n\tcin.tie(NULL);\n\tcout.tie(NULL);\n\tint  u, v, w, a, b,q,kk;\n\tcin >> n>>q;\n\t\n\tfor (int i = 0; i < 3; ++i)\n\t\tfor (int j = 0; j < MAXG; ++j)\n\t\t\ttrans[j][i] = inf;\n\tmemset(vis2, 0, sizeof(vis2));\n\tvis2[1] = 1;\n\tfor (int i = 0; i < n - 1; ++i)\n\t{\n\t\tcin >> u >> v;\n\t\tedge[u].push_back({ v,1 });\n\t\tedge[v].push_back({ u,1 });\n\t}\n\tint opt;\n\ttot = n;\n\tbinarize(1, 0);\n\tbuild(1, 1, 0);\n\twhile (q--)\n\t{\n\t\tcin >> opt>>kk;\n\t\tif (opt == 1)\n\t\t{\n\t\t\tif (vis2[kk] == 0)\n\t\t\t{\n\t\t\t\tvis2[kk] = 1;\n\t\t\t\tupdate(kk,kk,-1);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcur_ans = inf;\n\t\t\tif (vis2[kk])\n\t\t\t\tcout << 0 << '\\n';\n\t\t\telse\n\t\t\t{\n\t\t\t\tquery(kk, kk, -1);\n\t\t\t\tcout << cur_ans << '\\n';\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1560321433,
        "uid": 154957,
        "name": "qiyue7",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF342E \u3010Xenia and Tree\u3011"
    },
    {
        "content": "\u6c34 LA \u7684\u65f6\u5019\u6709\u4eba\u63d0\u5230\u8fd9\u9898\u5c31\u6765\u770b\u4e86\u3002\u4e00\u770b\uff0c\u8fd9\u4e0d\u662f\u70b9\u5206\u6811\u677f\u5b50\uff1f\u540e\u6765\u770b\u5230\u8bf4\u8fd9\u9898\u6ca1\u6709\u4eba\u5199\u6b63\u5e38\u70b9\u5206\uff08\u4e09\u5ea6\u5316\u3002\u3002\u3002\uff09\uff0c\u6211\u5c31\u6765\u5199\u4e00\u4e2a\u3002\n\n\u9996\u5148\u5efa\u51fa\u70b9\u5206\u6811\uff0c\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5206\u6cbb\u4e2d\u5fc3\u7ef4\u62a4\u79bb\u5b83\u6700\u8fd1\u7684\u7ea2\u70b9\u3002\n\n\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u4ece\u67e5\u8be2\u70b9\u5f80\u5206\u6cbb\u6811\u6839\u8df3\uff0c\u5bf9\u4e8e\u8df3\u5230\u7684\u6bcf\u4e00\u4e2a\u5206\u6cbb\u4e2d\u5fc3\uff0c\u8d21\u732e\u662f\uff1a\u5206\u6cbb\u4e2d\u5fc3\u5230\u67e5\u8be2\u70b9\u7684\u8ddd\u79bb \u52a0\u4e0a \u8ddd\u79bb\u5206\u6cbb\u4e2d\u5fc3\u6700\u8fd1\u7684\u7ea2\u70b9\u8ddd\u79bb\u3002\n\n\u4fee\u6539\u7684\u65f6\u5019\uff0c\u4e00\u8def\u8df3\u5230\u6839\uff0c\u66f4\u65b0\u6bcf\u4e00\u4e2a\u5206\u6cbb\u4e2d\u5fc3\u7684\u6700\u8fd1\u8ddd\u79bb\u5c31\u597d\u4e86\u3002\n\n\u67e5\u8be2\u8ddd\u79bb\u7528 ST\u8868 \u53ef\u4ee5 $O(1)$ \uff0c\u603b\u590d\u6742\u5ea6\u5c31\u662f $O((n+q)\\log n)$\u3002\n\n\u6839\u636e\u70b9\u5206\u6811\u6027\u8d28\uff0c\u4e00\u4e2a\u70b9\u5230\u6811\u4e0a\u6240\u6709\u70b9\u7684\u8def\u5f84 \u90fd\u4f1a\u6709\u4e00\u4e2a\u70b9\u5728\u5b83\u5230\u5206\u6cbb\u6839\u8def\u5f84\u4e0a\uff0c\u6240\u4ee5\u8df3\u5230\u6839\u53ef\u4ee5\u7ef4\u62a4\u51fa\u6240\u6709\u8def\u5f84\uff0c\u6b63\u786e\u6027\u5f97\u4ee5\u4fdd\u8bc1\u3002\n\n```cpp\nconst int N = 100005;\nconst int inf = 0x3f3f3f3f;\nint n, q;\nint hed[N], et;\nint vt[N], rt, mx[N], siz[N], tsz, val[N];\nint ST[20][N << 1], dep[N], tmr, dfn[N], lg[N << 1], pw2[40];\nbool used[N];\nstruct edge { int nx, to; } e[N << 1];\ninline void adde(int u, int v) {\n\te[++et].to = v, e[et].nx = hed[u], hed[u] = et;\n}\nvoid dfs(int u, int ft) {\n\tST[0][dfn[u] = ++tmr] = dep[u];\n\tfor(int i = hed[u]; i; i = e[i].nx) {\n\t\tint v = e[i].to; if(v == ft) continue;\n\t\tdep[v] = dep[u] + 1, dfs(v, u), ST[0][++tmr] = dep[u];\n\t}\n}\ninline void init_dis(){\n\tlg[0] = -1, pw2[0] = 1;\n\tfor(int i = 1; i <= tmr; ++i) lg[i] = lg[i >> 1] + 1;\n\tfor(int i = 1; i <= 20; ++i) pw2[i] = pw2[i - 1] << 1;\n\tfor(int i = 1; i <= lg[tmr]; ++i)\n\t\tfor(int j = 1; j + pw2[i] - 1<= tmr; ++j) \n\t\t\tST[i][j] = min(ST[i - 1][j], ST[i - 1][j + pw2[i - 1]]);\n}\ninline int dis(int x, int y) {\n\tint l = dfn[x], r = dfn[y];\n\tif(l > r) l ^= r ^= l ^= r;\n\tint t = lg[r - l + 1];\n\treturn dep[x] + dep[y] - (min(ST[t][l], ST[t][r - pw2[t] + 1]) << 1);\n}\nvoid getrt(int u, int ft) {\n\tsiz[u] = 1, mx[u] = 0;\n\tfor(int i = hed[u]; i; i = e[i].nx) {\n\t\tint v = e[i].to; if(v == ft || used[v]) continue;\n\t\tgetrt(v, u), siz[u] += siz[v], ckmax(mx[u], siz[v]);\n\t}\n\tckmax(mx[u], tsz - siz[u]);\n\tif(mx[u] < mx[rt]) rt = u;\n}\nvoid solve(int u) {\n\tused[u] = 1;\n\tint tmp = tsz;\n\tfor(int i = hed[u]; i; i = e[i].nx) {\n\t\tint v = e[i].to; if(used[v]) continue;\n\t\ttsz = siz[v] > siz[u] ? tmp - siz[u] : siz[v];\n\t\trt = 0, getrt(v, u), vt[rt] = u, solve(rt);\n\t}\n}\ninline void upd(int x) {\n\tfor(int i = x; i; i = vt[i]) ckmin(val[i], dis(x, i));\n}\ninline int ask(int x) {\n\tint res = inf;\n\tfor(int i = x; i; i = vt[i]) ckmin(res, val[i] + dis(x, i));\n\treturn res;\n}\nsigned main() {\n\tn = read(), q = read();\n\trep(i, 2, n) {\n\t\tint x = read(), y = read();\n\t\tadde(x, y), adde(y, x);\n\t}\n\tdfs(1, 0), init_dis();\n\tmx[rt = 0] = tsz = n, getrt(1, 0);\n\tsolve(rt);\n\tmemset(val, 0x3f, sizeof(val));\n\tupd(1);\n\twhile(q--) {\n\t\tint op = read(), x = read();\n\t\tif(op == 1) upd(x);\n\t\telse printf(\"%d\\n\", ask(x));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1615348125,
        "uid": 123384,
        "name": "tommy0221",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF342E Xenia and Tree"
    },
    {
        "content": "### \u9898\u610f\n\n> $n$ \u4e2a\u70b9\u7684\u6811\uff0c\u521d\u59cb\u6839\u8282\u70b9 $1$ \u662f\u9ed1\u8272\u5176\u4f59\u767d\u8272\u3002$q$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u628a\u4e00\u4e2a\u70b9\u67d3\u9ed1\u6216\u8be2\u95ee\u79bb\u67d0\u4e2a\u70b9\u6700\u8fd1\u7684\u9ed1\u8272\u70b9\u79bb\u5b83\u7684\u8ddd\u79bb\u3002$n,q\\le 10^5$\u3002\n\n### \u9898\u89e3\n\n\u8c8c\u4f3c\u505a\u6cd5\u5f88\u591a\uff0c\u9898\u89e3\u533a\u6811\u5256/LCT/\u70b9\u5206\u6811/\u5206\u5757\u795e\u4ed9\u6253\u67b6\uff0c\u6211\u53ea\u80fd\u60f3\u5230\u79bb\u7ebf\u505a CDQ \u5206\u6cbb\u3002\u3002\u3002\n\n\u66b4\u529b\u662f\u904d\u5386\u6240\u6709\u9ed1\u8272\u70b9\u7136\u540e\u53d6 $min$\uff0c\u8003\u8651 CDQ \u5206\u6cbb\uff0c\u90a3\u4e48\u4ee5\u4e00\u4e2a $\\log$ \u7684\u505a\u6cd5\u8f6c\u5316\u6210\uff1a\n\n> \u6709\u4e00\u68f5\u6811\uff0c\u82e5\u5e72\u4e2a\u70b9\u662f\u9ed1\u8272\uff0c\u7136\u540e\u7ed9\u51fa\u82e5\u5e72\u4e2a\u70b9\u5206\u522b\u8be2\u95ee\u79bb\u5b83\u6700\u8fd1\u7684\u9ed1\u8272\u70b9\u8ddd\u79bb\u3002\n\n\u8fd9\u4e2a\u663e\u7136\u53ef\u4ee5\u6362\u6839 DP $O(n)$ \u89e3\u51b3\uff0c\u4f46\u662f\u56e0\u4e3a\u662f CDQ \u5206\u6cbb\u6240\u4ee5\u4e0d\u80fd\u5728\u5b8c\u6574\u6811\u4e0a\u8dd1\u2026\u2026\u90a3\u5c31\u5efa\u68f5\u865a\u6811\u5457\u3002\n\n\u590d\u6742\u5ea6\u662f $O(n\\log n)$ \u7684\u3002\n\n[Code](https://codeforces.com/contest/342/submission/172351490)",
        "postTime": 1663335204,
        "uid": 233462,
        "name": "Umbrella_Leaf",
        "ccfLevel": 8,
        "title": "\u9898\u89e3CF342E Xenia and Tree"
    },
    {
        "content": "[$\\tt Link$](/problem/CF342E)\uff0c$\\tt^{\\ast}2400$\u3002\n\n\u660e\u660e\u662f $\\tt LCT$ \u6216\u70b9\u5206\u6811\uff0c\u6211\u5374\u53ea\u60f3\u64cd\u4f5c\u5206\u5757\u3002\n\n\u6211\u4eec\u628a\u64cd\u4f5c\u5e8f\u5217\u4ee5 $\\sqrt m$ \u4e3a\u5757\u957f\u5206\u5757\u3002\n\n\u4e00\u4e2a\u8be2\u95ee\u7684\u7b54\u6848\u662f\u5982\u4e0b\u7ea2\u70b9\u7684\u8d21\u732e\u7684 $\\min$\u3002\n\n+ \u548c\u8be2\u95ee\u540c\u5757\u7684\u4fee\u6539\n+ \u5728\u8be2\u95ee\u6240\u5728\u5757\u4e4b\u524d\u7684\u5757\u7684\u4fee\u6539\n\n\u7b2c\u4e00\u7c7b\uff0c\u6211\u4eec\u679a\u4e3e\u6bcf\u4e2a\u64cd\u4f5c\u5757\uff0c\u4ece\u524d\u5f80\u540e\u626b\uff0c\u8be2\u95ee\u76f4\u63a5\u7528\u5f53\u524d\u7684\u7ea2\u70b9\u7684\u8ddd\u79bb\u53d6 $\\min$\u3002\n\n\u4e00\u4e2a\u5757\u7684\u64cd\u4f5c\u4ec5\u4f1a\u5e26\u6765\u6839\u53f7\u4e2a\u7ea2\u70b9\u3002\u5982\u4f55\u5feb\u901f\u7b97\u8ddd\u79bb\uff1f\u8003\u8651 $O(n\\log n)-O(1)$ \u7684 $\\tt LCA$\u3002\n\n\u7b2c\u4e8c\u7c7b\uff0c\u6211\u4eec\u7528\u4e00\u4e2a $ans$ \u6570\u7ec4\u8bb0\u5f55\u4e0b\u5f53\u4e0a\u4e00\u4e2a\u64cd\u4f5c\u5757\u521a\u521a\u7ed3\u675f\u65f6\uff0c\u6bcf\u4e2a\u70b9\u7684\u7b54\u6848\u3002\n\n\u8fd9\u4e2a\u53ef\u4ee5\u5728\u626b\u5b8c\u8fd9\u4e2a\u5757\u4e4b\u540e\uff0c\u5728\u6811\u4e0a\u8dd1 $\\tt dfs$\uff0c\u66f4\u65b0\u8fd9\u6839\u53f7\u4e2a\u7ea2\u70b9\u7684\u65b0\u8d21\u732e\u3002\n\n\u51c6\u786e\u6765\u8bf4\u662f\u8dd1\u4e24\u904d $\\tt dfs$\uff0c\u7b2c\u4e00\u904d\u7528\u513f\u5b50\u66f4\u65b0\u7236\u4eb2\uff0c\u7b2c\u4e8c\u904d\u7528\u7236\u4eb2\u66f4\u65b0\u513f\u5b50\u3002\n\n\u603b\u590d\u6742\u5ea6 $O(m\\sqrt m)$\u3002",
        "postTime": 1661004284,
        "uid": 368107,
        "name": "xfrvq",
        "ccfLevel": 7,
        "title": "CF342E \u64cd\u4f5c\u5206\u5757"
    },
    {
        "content": "\u60f3\u5230\u70b9\u5206\u6811\u5c31\u505a\u5b8c\u4e86\uff08\n\n\u5047\u5982\u80fd\u7ef4\u62a4 $c_x$ \u4e3a $x$ \u5b50\u6811\u5185\u79bb $x$ \u6700\u8fd1\u7684\u7ea2\u8272\u70b9\u8ddd\u79bb\u3002\n\n\u4e00\u5f00\u59cb\u60f3\u7684\u662f\u6811\u5256\u8fd9\u4e2a\u4e1c\u897f\uff0c\u8be2\u95ee\u62c6\u6210\u67e5\u8be2\u5b83\u5230\u6839\u7684\u94fe\u4e2d\u6700\u4f4e\u7684\u7ea2\u70b9\uff0c\u548c\u4ee5\u5b83\u5230\u6839\u7684\u94fe\u4e2d\u7684\u70b9\u4e3a LCA \u7684\u7ea2\u70b9\u3002\u524d\u8005\u5f88\u5bb9\u6613\u6811\u5256\u4e24\u4e2a $\\log$ \u89e3\u51b3\u3002\u5982\u679c\u7ef4\u62a4\u7684 $c_x$ \u90fd\u662f\u52a0\u4e0a\u5b83\u5230\u91cd\u94fe\u5e95\u90e8\u7684\u8ddd\u79bb\u7684\u503c\uff0c\u8fd9\u6837\u67e5\u8be2\u5c31\u662f\u67e5\u8be2\u4e00\u4e2a\u6700\u5c0f\u503c\uff0c\u800c\u4fee\u6539\u53d8\u6210\u4e86\u516c\u5dee\u4e3a $2$ \u7684\u7b49\u5dee\u6570\u5217\u52a0\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u91cd\u94fe\u5f00\u4e00\u4e2a\u674e\u8d85\u6811\u652f\u6301\u533a\u95f4\u63d2\u5165\u7ebf\u6bb5\u67e5\u8be2\u533a\u95f4\u6700\u4f4e\u70b9\uff08\u4fee\u6539 $\\log^2$\uff0c\u67e5\u8be2 $\\log$ \uff09\u53ef\u4ee5\u505a\u5230 $\\log^3$\u3002\u603b\u590d\u6742\u5ea6\u5c31\u662f $\\mathcal{O}(n\\log^3 n)$\uff0c\u6ca1\u6709\u5b9e\u73b0\u662f\u53e3\u80e1\u7684\u6240\u4ee5\u53ef\u80fd\u6709\u8bef\u7684\u4e00\u4e2a\u60f3\u6cd5\uff08\n\n\u5982\u679c\u628a\u8be2\u95ee\u770b\u6210\u5bf9\u7aef\u70b9\u4e3a $x$ \u7684\u6240\u6709\u8def\u5f84\u770b\u54ea\u4e2a\u6700\u77ed\u8def\u5f84\u6ee1\u8db3\u7aef\u70b9\u4e3a\u7ea2\u8272\uff0c\u4ece\u800c\u60f3\u5230\u6811\u5206\u6cbb\u3002\u5efa\u51fa\u70b9\u5206\u6811\u4e4b\u540e\uff0c\u7aef\u70b9 $x$ \u7684\u8def\u5f84\u4e00\u5b9a\u7ecf\u8fc7 $x$ \u5728\u70b9\u5206\u6811\u5185\u7684\u7956\u5148\uff0c\u90a3\u4e48\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u5728\u70b9\u5206\u6811\u7684\u5b50\u6811\u5185\u7684\u7ea2\u70b9\uff0c\u5728\u539f\u6811\u91cc\u79bb\u5b83\u6700\u8fd1\u7684\u8ddd\u79bb\u662f\u591a\u5c11\uff0c\u67e5\u8be2\u7684\u65f6\u5019 $x$ \u52a0\u4e0a\u5230\u5b83\u70b9\u5206\u6811\u5185\u7956\u5148\u7684\u8ddd\u79bb\u52a0\u4e0a\u8fd9\u4e2a\u6700\u5c0f\u503c\uff0c\u53d6\u4e2a $\\min$ \u5c31\u597d\u3002\n\n\u4fee\u6539\u7684\u8bdd\u76f4\u63a5\u66b4\u529b\u8df3\u70b9\u5206\u6811\u91cc\u7684\u7236\u4eb2\u7136\u540e\u66f4\u65b0\u5c31\u53ef\u4ee5\u3002\u7edf\u8ba1\u5230\u7684\u8def\u5f84\u53ef\u80fd\u4f1a\u4ea7\u751f\u6298\u8fd4\uff0c\u4f46\u5176\u5b9e\u6bd4\u5b83\u4f18\u7684\u4e00\u5b9a\u80fd\u7edf\u8ba1\u5230\u6240\u4ee5\u65e0\u5173\u7d27\u8981\u3002\n\n[code](https://codeforces.com/contest/342/submission/127421460)",
        "postTime": 1630379366,
        "uid": 223298,
        "name": "do_while_true",
        "ccfLevel": 8,
        "title": "\u300c\u9898\u89e3\u300dCodeforces 342E Xenia and Tree"
    }
]