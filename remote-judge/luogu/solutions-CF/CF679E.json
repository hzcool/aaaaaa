[
    {
        "content": "\u6ce8\u610f\u5230\u5728\u53ef\u80fd\u7684\u503c\u57df\uff08\u7ea6\u4e3a ${10}^{14}$\uff09\u5185\uff0c$42$ \u7684\u6b21\u5e42\u5e76\u4e0d\u591a\uff0c\u5c1d\u8bd5\u4ece\u8fd9\u4e2a\u89d2\u5ea6\u8003\u8651\u3002\n\n\u64cd\u4f5c 3 \u6bd4\u8f83\u68d8\u624b\uff0c\u89e3\u51b3\u7684\u529e\u6cd5\u662f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5f53\u524d\u503c\u5230\u4e0b\u4e00\u4e2a $42$ \u7684\u6b21\u5e42\u7684\u5dee\u503c\u3002\n\n\u505a\u64cd\u4f5c\u65f6\u8ba9\u8fd9\u4e2a\u5dee\u503c\u505a\u533a\u95f4\u51cf\u6cd5\uff0c\u5728\u7ebf\u6bb5\u6811\u9012\u5f52\u7684\u65f6\u5019\uff0c\u5982\u679c\u5dee\u503c\u4f1a\u53d8\u6210\u8d1f\u6570\uff0c\u5c31\u9700\u8981\u518d\u9012\u5f52\u8fdb\u5b50\u533a\u95f4\u8fdb\u884c\u4fee\u6539\uff0c\u4f46\u662f\u5982\u679c\u8fd9\u4e2a\u533a\u95f4\u88ab\u6253\u4e0a\u4e86\u533a\u95f4\u8986\u76d6\u6807\u8bb0\uff0c\u5c31\u76f4\u63a5\u4fee\u6539\u8fd9\u4e2a\u6807\u8bb0\u5c31\u884c\u3002\n\n\u6267\u884c\u5b8c\u540e\uff0c\u5982\u679c\u5b58\u5728\u5dee\u503c\u4e3a $0$ \u7684\u4f4d\u7f6e\uff0c\u5c31\u518d\u6267\u884c\u4e00\u6b21\u3002\n\n\u8fd9\u4e2a\u505a\u6cd5\u7684\u590d\u6742\u5ea6\uff0c\u4f7f\u7528\u52bf\u80fd\u51fd\u6570\u53ef\u4ee5\u5206\u6790\u5f97\u51fa\u4e3a $\\mathcal O (q \\log n \\log_{42} v)$\u3002\n\n\u5177\u4f53\u5730\u8bf4\uff0c\u4ee4\u5f53\u524d\u7ebf\u6bb5\u6811\u7684\u52bf\u80fd\u51fd\u6570\u7b49\u4e8e\u6bcf\u4e2a\u503c\u76f8\u540c\u7684\u8fde\u7eed\u6bb5\uff0c\u6bd4\u6b64\u8fde\u7eed\u6bb5\u7684\u503c\u5927\u7684\uff0c\u5728\u503c\u57df\u5185\u7684 $42$ \u7684\u6b21\u5e42\u7684\u4e2a\u6570\u7684\u603b\u548c\uff0c\u4e58\u4ee5 $\\log n$\u3002\n\n\u5219\u64cd\u4f5c 2 \u548c\u64cd\u4f5c 3 \u7684\u644a\u8fd8\u4ee3\u4ef7\u90fd\u4e3a $\\mathcal O (\\log n \\log_{42} v)$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O ((n + q) \\log n \\log_{42} v)$\uff0c\u5176\u4e2d $v$ \u4e3a\u503c\u57df\uff0c\u7ea6\u4e3a ${10}^9 q$\uff0c[\u8bc4\u6d4b\u94fe\u63a5](https://codeforces.com/contest/679/submission/71983368)\u3002",
        "postTime": 1582819942,
        "uid": 10703,
        "name": "\u5c0f\u7c89\u5154",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF679E \u3010Bear and Bad Powers of 42\u3011"
    },
    {
        "content": "\u9996\u5148\u524d\u4e24\u4e2a\u64cd\u4f5c\u5c5e\u4e8e\u7ebf\u6bb5\u6811\u7684\u57fa\u672c\u64cd\u4f5c\u3002\u4f46\u662f\u7b2c\u4e09\u4e2a\u64cd\u4f5c\u770b\u4e0a\u53bb\u5c31\u6709\u70b9\u8fa3\u624b\u4e86\u3002\n\n\u5982\u679c\u6211\u4eec\u5728\u7ebf\u6bb5\u6811\u4e2d\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u5230\u5176\u6700\u8fd1\u7684 $42$ \u7684\u6574\u6b21\u5e42\u7684\u5dee\u503c\u7684\u6700\u5c0f\u503c\uff0c\u90a3\u4e48\u53ef\u4ee5\u6bcf\u6b21\u66b4\u529b\u4fee\u6539\u4e00\u6b21\u52a0\u64cd\u4f5c\u540e\u503c\u4e3a\u8d1f\u7684\u4f4d\u7f6e\uff0c\u6ca1\u6709\u4e8c\u64cd\u4f5c\u7684\u60c5\u51b5\u4e0b\uff0c\u6bcf\u4e2a\u70b9\u53ea\u4f1a\u88ab\u4fee\u6539\u6700\u591a $\\log_{42}val$ \u6b21\u3002\u6bcf\u6b21\u4fee\u6539\u590d\u6742\u5ea6 $O(\\log_{2} n)$\uff0c\u603b\u590d\u6742\u5ea6\u5c31\u662f $O((n + q) \\log_{2} n \\log_{42} val)$\u3002\n\n\u4f46\u662f\u4e8c\u64cd\u4f5c\u548c\u4e09\u64cd\u4f5c\u90fd\u6709\uff0c\u548b\u529e\u5462\uff1f\n\n\u6211\u4eec\u8003\u8651\u6bcf\u6b21\u8986\u76d6\uff0c\u53ea\u4fee\u6539\u8986\u76d6\u7684\u533a\u95f4\u7684\u6700\u53f3\u8fb9\u90a3\u4e2a\u70b9\u4e3a\u8981\u4fee\u6539\u7684\u503c\uff0c\u5176\u4ed6\u7684\u70b9\u8d4b\u503c\u4e3a $\\inf$\uff0c\u7136\u540e\u5728\u6bcf\u6b21\u64cd\u4f5c\u533a\u95f4 $[l, r]$ \u7684\u65f6\u5019\uff0c\u5c06 $l-1$ \u548c $r$ \u7684\u503c\u4fee\u6539\u4e3a\u53f3\u8fb9\u7b2c\u4e00\u4e2a\u4e0d\u4e3a $\\inf$ \u7684\u503c\u5373\u53ef\u3002\u67e5\u8be2\u4e5f\u662f\u67e5\u8be2\u53f3\u8fb9\u7b2c\u4e00\u4e2a\u4e0d\u4e3a $\\inf$ \u7684\u503c\u4f5c\u4e3a\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u503c\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u53ea\u6709\u6bcf\u6b21\u64cd\u4f5c\u7684\u65f6\u5019\u4f1a\u5e26\u6765\u81f3\u591a $2$ \u4e2a\u65b0\u7684\u503c\uff0c\u6bcf\u4e2a\u503c\u6700\u591a\u4fee\u6539 $\\log_{42}val$ \u6b21\u3002\u603b\u590d\u6742\u5ea6\u8fd8\u662f $O((n + q) \\log_{2} n \\log_{42} v)$\u3002\n\n\u5728\u627e\u53f3\u8fb9\u7b2c\u4e00\u4e2a\u4e0d\u662f $\\inf$ \u7684\u503c\u7684\u65f6\u5019\u53ef\u4ee5\u7528 STL \u7684 set \u65b9\u4fbf\u5730\u5b9e\u73b0\u3002\n\n\u4ee3\u7801\u8fd8\u7b97\u597d\u5199\u3002\n\n${\\rm Code}$\uff1a\n\n```cpp\nconst int MAXN = 100010;\nconst ll inf = 100000000000000000LL;\nconst ll pw[] = {1LL, 42LL, 1764LL, 74088LL, 3111696LL, 130691232LL, 5489031744LL, 230539333248LL, 9682651996416LL, 406671383849472LL, 17080198121677824LL, 717368321110468608LL, 1000000000000000000LL};\n\nset<int>pos;\nll a[MAXN];\nll ad[MAXN];\nint n;\n\ninline ll fdv(ll x) { return *lower_bound(pw, pw + 12, x); }\n\nstruct Segment_Tree {\n#define ls (x << 1)\n#define rs (x << 1 | 1)\n\n\tstruct Node {\n\t\tll v, tg, tv;\n\n\t\tNode():v(inf), tg(0), tv(0) {}\n\t} T[MAXN << 2];\n\n\tinline void pushup(int x) { T[x].v = min(T[ls].v, T[rs].v); }\n\tinline void pushdown(int x) {\n\t\tif(!T[x].tg && !T[x].tv) return ;\n\t\tNode &L = T[ls], &R = T[rs];\n\t\tif(T[x].tg) {\n\t\t\tL.v = L.tg = T[x].tg, L.tv = 0;\n\t\t\tR.v = R.tg = T[x].tg, R.tv = 0;\n\t\t\tT[x].tg = 0;\n\t\t}\n\t\tif(T[x].tv) {\n\t\t\tL.v += T[x].tv, L.tv += T[x].tv;\n\t\t\tR.v += T[x].tv, R.tv += T[x].tv;\n\t\t\tT[x].tv = 0;\n\t\t}\n\t}\n\n\tinline void build(int x, int l, int r) {\n\t\tif(l == r) return ad[l] = fdv(a[l]), T[x].v = ad[l] - a[l], void();\n\t\tint mid = (l + r) >> 1; build(ls, l, mid), build(rs, mid + 1, r), pushup(x);\n\t}\n\n\tinline void Assign(int x, int l, int r, int L, int R) {\n\t\tif(L <= l && r <= R) return T[x].v = T[x].tg = inf, T[x].tv = 0, void();\n\t\tint mid = (l + r) >> 1; pushdown(x);\n\t\tif(L <= mid) Assign(ls, l, mid, L, R);\n\t\tif(mid < R) Assign(rs, mid + 1, r, L, R);\n\t\tpushup(x);\n\t}\n\n\tinline void Modify(int x, int l, int r, int p, ll v) {\n\t\tif(l == r) return ad[l] = fdv(v), T[x].v = ad[l] - v, void();\n\t\tint mid = (l + r) >> 1; pushdown(x);\n\t\tp <= mid ? Modify(ls, l, mid, p, v) : Modify(rs, mid + 1, r, p, v);\n\t\tpushup(x);\n\t}\n\n\tinline void Dec(int x, int l, int r, int L, int R, ll v) {\n\t\tif(L <= l && r <= R) return T[x].v -= v, T[x].tv -= v, void();\n\t\tint mid = (l + r) >> 1; pushdown(x);\n\t\tif(L <= mid) Dec(ls, l, mid, L, R, v);\n\t\tif(mid < R) Dec(rs, mid + 1, r, L, R, v);\n\t\tpushup(x);\n\t}\n\n\tinline ll Qm(int x, int l, int r) {\n\t\tif(T[x].v >= 0) return T[x].v;\n\t\tif(l == r) {\n\t\t\tT[x].v = ad[l] - T[x].v;\n\t\t\tad[l] = fdv(T[x].v);\n\t\t\tT[x].v = ad[l] - T[x].v;\n\t\t\treturn T[x].v;\n\t\t} int mid = (l + r) >> 1;\n\t\tpushdown(x);\n\t\tQm(ls, l, mid), Qm(rs, mid + 1, r);\n\t\tpushup(x);\n\t\treturn T[x].v;\n\t}\n\n\tinline ll Qval(int x, int l, int r, int p) {\n\t\tif(l == r) return ad[p] - T[x].v;\n\t\tint mid = (l + r) >> 1; pushdown(x);\n\t\treturn p <= mid ? Qval(ls, l, mid, p) : Qval(rs, mid + 1, r, p);\n\t}\n\n\tinline void Split(int p) {\n\t\tint vp = *pos.lower_bound(p);\n\t\tif(vp == p) return ;\n\t\tad[p] = ad[vp], pos.insert(p);\n\t\tModify(1, 1, n, p, Qval(1, 1, n, vp));\n\t}\n\n#undef ls\n#undef rs\n}seg;\n\nint main() {\n\tn = ri; int q = ri;\n\tfor(int i = 1; i <= n; i++) pos.insert(i), a[i] = ri; seg.build(1, 1, n);\n\tfor(int i = 1; i <= q; i++) {\n\t\tint opt = ri;\n\t\tif(opt == 1) {\n\t\t\tint p = ri;\n\t\t\tprintf(\"%lld\\n\", seg.Qval(1, 1, n, *pos.lower_bound(p)));\n\t\t} else {\n\t\t\tint l = ri, r = ri, v = ri;\n\t\t\tif(l > 1) seg.Split(l - 1);\n\t\t\tseg.Split(r);\n\t\t\tif(opt == 2) {\n\t\t\t\tpos.erase(pos.lower_bound(l), pos.lower_bound(r));\n\t\t\t\tif(l < r) seg.Assign(1, 1, n, l, r - 1);\n\t\t\t\tseg.Modify(1, 1, n, r, v);\n\t\t\t} else for(seg.Dec(1, 1, n, l, r, v); !seg.Qm(1, 1, n); seg.Dec(1, 1, n, l, r, v));\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1580789489,
        "uid": 20782,
        "name": "CYJian",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF679E \u3010Bear and Bad Powers of 42\u3011"
    },
    {
        "content": "[\u565c\u5566\u565c\u5566\u54a7\u565c\u5566\u565c\u5566\u54a7\u7684\u9605\u8bfb\u4f53\u9a8c\uff01\uff01\uff01](https://www.cnblogs.com/dysyn1314/p/14139849.html)\n\n\n\n# CF679E Bear and Bad Powers of 42\n\n[\u9898\u76ee\u94fe\u63a5](https://codeforces.com/problemset/problem/679/E)\n\n## \u672c\u9898\u9898\u89e3\n\n> \u6839\u636e\u7b14\u8005\u7684\u4e60\u60ef\uff0c\u6211\u4eec\u79f0\u8981\u7ef4\u62a4\u7684\u5e8f\u5217\u4e3a $a_{1\\dots n}$\uff0c\u5373\u539f\u9898\u9762\u91cc\u7684 $t$\u3002\n\n\u8bbe\u7ecf\u8fc7\u4efb\u4f55\u64cd\u4f5c\u540e\uff0c\u5e8f\u5217\u91cc\u7684\u6700\u5927\u6570\u503c\u4e3a $\\text{maxValue}$\u3002\u5219 $\\text{maxValue}\\leq 10^9 + q\\times 10^9\\times \\log_{42}(\\text{maxValue})$\u3002\u5bb9\u6613\u53d1\u73b0 $\\text{maxValue}$ \u4e0d\u4f1a\u8d85\u8fc7 $\\texttt{long long}$ \u8303\u56f4\uff08\u8fd9\u53ea\u662f\u4e00\u4e2a\u7c97\u7565\u7684\u4f30\u8ba1\uff0c\u5b9e\u9645\u4e0a\u66f4\u5c0f\uff09\u3002\n\n\u56e0\u6b64\uff0c\u53ef\u80fd\u51fa\u73b0\u7684 $42$ \u7684\u5e42\u6570\u91cf\u975e\u5e38\u5c11\uff0c\u4e0d\u8d85\u8fc7 $\\log_{42}(\\text{maxValue})\\leq 13$ \u4e2a\u3002\n\n---\n\n\u5148\u4e0d\u8003\u8651\u64cd\u4f5c $2$\uff08\u533a\u95f4\u8d4b\u503c\uff09\u3002\n\n\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5e8f\u5217\uff0c\u652f\u6301\u533a\u95f4\u52a0\u3002\u8003\u8651\u5728\u8fdb\u884c\u64cd\u4f5c $3$\uff08\u533a\u95f4\u52a0\uff09\u65f6\uff0c\u5199\u4e00\u4e2a\u66b4\u529b\u7684 $\\texttt{while}$ \u5faa\u73af\uff1a\u53ea\u8981\u533a\u95f4\u91cc\u51fa\u73b0\u4e86 $42$ \u7684\u5e42\uff0c\u5c31\u518d\u52a0\u4e00\u6b21\u3002\u56e0\u4e3a\u6bcf\u4e2a\u6570\u6700\u591a\u53ea\u4f1a\u51fa\u73b0 $\\log_{42}(\\text{maxValue})$ \u6b21\u7b49\u4e8e $42$ \u7684\u5e42\u7684\u60c5\u51b5\uff0c\u56e0\u6b64\u603b\u7684\u64cd\u4f5c\u6b21\u6570\u662f $\\mathcal{O}(n\\times \\log_{42}(\\text{maxValue}))$ \u7684\u3002\n\n\u4e8e\u662f\u95ee\u9898\u8f6c\u5316\u4e3a\uff0c\u5982\u4f55\u5feb\u901f\u5224\u65ad\uff0c\u533a\u95f4\u91cc\u662f\u5426\u5b58\u5728 $42$ \u7684\u5e42\u3002\n\n\u5bf9\u4e8e\u5e8f\u5217\u91cc\u7684\u6bcf\u4e2a\u6570 $a_i$\uff0c\u8bb0\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e\u5b83\u7684\u3001$42$ \u7684\u5e42\u4e3a $b_i$\uff0c\u5373 $b_i = 42^{\\lceil\\log_{42}(a_i)\\rceil}$\u3002\u8003\u8651 $b_i - a_i$ \u8fd9\u4e2a\u5e8f\u5217\uff0c\u4e00\u6b21\u201c\u533a\u95f4\u52a0 $x$\u201d\uff0c\u76f8\u5f53\u4e8e\u4ee4\u8fd9\u4e2a\u5e8f\u5217\u4e0a\u6bcf\u4e2a\u4f4d\u7f6e\u51cf $x$\u3002\u5f53\u51fa\u73b0\u67d0\u4e2a\u4f4d\u7f6e\u4e0a\u6570\u503c $b_i - a_i < 0$ \u65f6\uff0c\u8bf4\u660e\u8be5\u4f4d\u7f6e\u7684 $b_i$ \u9700\u8981\u66f4\u65b0\u4e86\uff0c\u6211\u4eec\u66b4\u529b\u66f4\u65b0\uff08\u6839\u636e\u524d\u9762\u7684\u5206\u6790\uff0c\u603b\u66f4\u65b0\u6b21\u6570\u662f $\\mathcal{O}(n\\times \\log_{42}(\\text{maxValue}))$ \u7684\uff09\u3002\u66f4\u65b0\u5b8c\u540e\uff0c\u5982\u679c\u51fa\u73b0\u67d0\u4e2a\u4f4d\u7f6e\u4e0a $b_i - a_i = 0$\uff0c\u5c31\u8bf4\u660e\u539f\u5e8f\u5217\uff08$a$\uff09\u91cc\u5b58\u5728 $42$ \u7684\u5e42\uff0c\u6211\u4eec\u7ee7\u7eed\u6267\u884c\u533a\u95f4\u52a0\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u73b0\u5728\u6211\u4eec\u7ef4\u62a4 $b_i - a_i$ \u8fd9\u4e2a\u5e8f\u5217\uff0c\u652f\u6301\u533a\u95f4\u52a0\u3001\u5355\u70b9\u4fee\u6539\uff08\u66b4\u529b\u66f4\u65b0 $b_i$\uff09\u3001\u6c42\u533a\u95f4\u6700\u5c0f\u503c\u3002\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u5b9e\u73b0\uff0c\u8fd9\u6837\u5355\u6b21\u4fee\u6539\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\mathcal{O}(\\log_2(n))$ \u7684\u3002\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}((n + q)\\times \\log_{42}(\\text{maxValue})\\times \\log_2(n))$\u3002\n\n---\n\n\u518d\u8003\u8651\u6709\u64cd\u4f5c $2$ \u7684\u60c5\u51b5\u3002\u5982\u679c\u6211\u4eec\u76f4\u63a5\u5728\u7ebf\u6bb5\u6811\u4e0a\u6267\u884c\u533a\u95f4\u8d4b\u503c\uff0c\u5c31\u53ef\u80fd\u4f1a\u5f71\u54cd\u524d\u9762\u7684\u590d\u6742\u5ea6\u5206\u6790\uff1a\u56e0\u4e3a\u6b64\u65f6\u65e0\u6cd5\u4fdd\u8bc1 $a$ \u5e8f\u5217\u6bcf\u4e2a\u4f4d\u7f6e\u4e0a\u6570\u503c\u90fd\u968f\u65f6\u95f4\u5355\u8c03\u53d8\u5927\uff0c\u4e5f\u5c31\u65e0\u6cd5\u4fdd\u8bc1\u603b\u66f4\u65b0\u6b21\u6570\u53ea\u6709 $\\mathcal{O}(n\\times \\log_{42}(\\text{maxValue}))$ \u4e86\u3002\n\n\u8bbe\u4e00\u6b21\u64cd\u4f5c $2$ \u7684\u533a\u95f4\u4e3a $[l,r]$\uff0c\u8003\u8651\u53ea\u4fee\u6539 $r$\uff0c\u7136\u540e\u628a\u533a\u95f4 $[l,r - 1]$ \u8bbe\u4e3a\u4e00\u4e2a\u201c\u61d2\u60f0\u72b6\u6001\u201d\u3002\u5f62\u5f0f\u5316\u5730\uff0c\u61d2\u60f0\u72b6\u6001\u6ee1\u8db3\uff1a\n\n- \u5728\u533a\u95f4\u52a0\uff08\u64cd\u4f5c $3$\uff09\u68c0\u67e5\u66f4\u65b0 $b_i$ \u65f6\uff0c\u4e0d\u4f1a\u88ab\u66f4\u65b0\u5230\u3002\n- $a_n$ \u4e0d\u4f1a\u5904\u4e8e\u61d2\u60f0\u72b6\u6001\uff08\u56e0\u4e3a\u6bcf\u6b21\u53ea\u628a $[l,r - 1]$ \u8bbe\u4e3a\u61d2\u60f0\u72b6\u6001\uff0c\u663e\u7136 $r -1 < n$\uff09\u3002\n- \u5982\u679c $a_i$ \u5904\u4e8e\u61d2\u60f0\u72b6\u6001\uff0c\u5219 $a_i$ \u7684\u5b9e\u9645\u6570\u503c\uff0c\u7b49\u4e8e\u5b83\u540e\u9762\u7b2c\u4e00\u4e2a\u975e\u61d2\u60f0\u72b6\u6001\u7684\u503c\uff08\u6839\u636e\u4e0a\u4e00\u6761\uff0c\u8fd9\u6837\u7684\u503c\u4e00\u5b9a\u5b58\u5728\uff09\u3002\n\n\u4f8b\u5982\uff0c\u5728\u5b9e\u73b0\u65f6\uff0c\u6211\u4eec\u4ee4 $b_i$ \u4e0d\u53d8\uff0c\u628a $a_i$ \u53d8\u6210 $-\\infty$\uff0c\u8fd9\u6837 $b_i - a_i$ \u5c31\u6c38\u8fdc $> 0$\uff0c\u533a\u95f4\u52a0\u68c0\u67e5\u66f4\u65b0\u65f6\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u66f4\u65b0\u5230\u3002 \n\n\u521d\u59cb\u65f6\uff0c\u6240\u6709\u503c\u90fd\u5904\u4e8e\u975e\u61d2\u60f0\u72b6\u6001\u3002\u5728\u6267\u884c\u64cd\u4f5c $2$ \u65f6\uff0c\u628a\u533a\u95f4 $[l,r - 1]$ \u91cc\u6240\u6709\u503c\u66b4\u529b\u8bbe\u7f6e\u4e3a\u61d2\u60f0\u72b6\u6001\uff08\u7ebf\u6bb5\u6811\u5355\u70b9\u4fee\u6539\uff09\u3002\u5728\u6267\u884c\u64cd\u4f5c $2$ \u6216\u64cd\u4f5c $3$ \u524d\uff0c\u68c0\u67e5 $l - 1$, $r$ \u8fd9\u4e24\u4e2a\u4f4d\u7f6e\uff0c\u5982\u679c\u662f\u61d2\u60f0\u72b6\u6001\uff0c\u5219\u5c06\u5b83\u4eec\u66f4\u65b0\uff1a\u627e\u51fa\u5b83\u540e\u9762\u7b2c\u4e00\u4e2a\u975e\u61d2\u60f0\u72b6\u6001\u7684\u503c\uff0c\u628a\u88ab\u66f4\u65b0\u7684\u4f4d\u7f6e\u8d4b\u4e3a\u8fd9\u4e2a\u503c\u3002\n\n\u5b9e\u73b0\u65f6\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a $\\texttt{std::set}$ \u6765\u7ef4\u62a4\u6240\u6709\u975e\u61d2\u60f0\u72b6\u6001\u7684\u4f4d\u7f6e\u3002\u66f4\u65b0\u65f6\uff0c\u7528 $\\texttt{std::set}$ \u7684 $\\texttt{lower_bound}$ \u8fdb\u884c\u67e5\u627e\u3002\n\n\u5206\u6790\u8fd9\u6837\u505a\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u5728\u6bcf\u6b21\u64cd\u4f5c\u4e2d\uff0c\u53ea\u4f1a\u589e\u52a0 $\\mathcal{O}(1)$ \u4e2a\u975e\u61d2\u60f0\u72b6\u6001\uff08$l - 1$ \u548c $r$\uff09\uff0c\u56e0\u6b64\u6574\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u51fa\u73b0\u7684\u975e\u61d2\u60f0\u72b6\u6001\u603b\u6570\u662f $\\mathcal{O}(n + q)$ \u7684\uff0c\u8fd9\u6837\u63d2\u5165\u548c\u66b4\u529b\u5220\u9664\u7684\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662f $\\mathcal{O}((n + q)\\times \\log_2(n))$ \u7684\u3002\u540c\u65f6\uff0c\u5728\u7ebf\u6bb5\u6811\u4e2d\uff0c\u6211\u4eec\u53ea\u8fdb\u884c\u4e86 $\\mathcal{O}(n + q)$ \u6b21\u201c\u628a\u67d0\u4e2a\u4f4d\u7f6e\u7684\u503c\u91cd\u7f6e\u201d\u7684\u64cd\u4f5c\uff0c\u800c\u5176\u5b83\u60c5\u51b5\u4e0b\u503c\u90fd\u662f\u968f\u65f6\u95f4\u5355\u8c03\u53d8\u5927\u7684\uff0c\u4e8e\u662f\u53ef\u4ee5\u5957\u7528\u4e4b\u524d\u7684\u590d\u6742\u5ea6\u5206\u6790\u3002\n\n\u7efc\u4e0a\uff0c\u6211\u4eec\u5728 $\\mathcal{O}((n + q)\\times \\log_{42}(\\text{maxValue})\\times \\log_2(n))$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u89e3\u51b3\u4e86\u672c\u9898\u3002\n\n## \u53c2\u8003\u4ee3\u7801\n\n\n[\u52c7\u6562\u5411\u524d\u8fdb\uff0c\u524d\u8fdb\u6709\u5956\u54c1\uff01\uff01\uff01](https://www.cnblogs.com/dysyn1314/p/14139849.html)\n",
        "postTime": 1608024397,
        "uid": 100674,
        "name": "duyi",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF679E \u3010Bear and Bad Powers of 42\u3011"
    },
    {
        "content": "> [CF679E Bear and Bad Powers of 42](https://codeforces.com/contest/679/problem/E)\r\n\r\n## \u9898\u610f\r\n\r\n- \u5b9a\u4e49\u4e00\u4e2a\u6b63\u6574\u6570\u662f\u574f\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b83\u662f $42$ \u7684\u6b21\u5e42\uff0c\u5426\u5219\u5b83\u662f\u597d\u7684\u3002\r\n- \u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a_i$\uff0c\u4fdd\u8bc1\u521d\u59cb\u65f6\u6240\u6709\u6570\u90fd\u662f\u597d\u7684\u3002\r\n- \u6709 $q$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u6709\u4e09\u79cd\u53ef\u80fd\uff1a\r\n  - `1 i` \u67e5\u8be2 $a_i$\u3002\r\n  - `2 l r x` \u5c06 $a_{l\\dots r}$ \u8d4b\u503c\u4e3a\u4e00\u4e2a\u597d\u7684\u6570 $x$\u3002\r\n  - `3 l r x` \u5c06 $a_{l \\dots r}$ \u90fd\u52a0\u4e0a $x$\uff0c\u91cd\u590d\u8fd9\u4e00\u8fc7\u7a0b\u76f4\u5230\u6240\u6709\u6570\u90fd\u53d8\u597d\u3002\r\n- $n,q \\le 10^5$\uff0c$a_i,x \\le 10^9$\u3002\r\n\r\n## \u9898\u89e3\r\n\r\n\u8bbe $n,q$ \u540c\u9636\u3002\r\n\r\n\u8fd9\u4e2a\u5947\u5947\u602a\u602a\u7684 $42$ \u4e00\u70b9\u6027\u8d28\u90fd\u6ca1\u6709\uff0c\u4f46\u662f\u8fd9\u4e2a**\u6b21\u5e42**\u7684\u63d0\u793a\u6027\u5c31\u5f88\u660e\u663e\uff0c\u4e00\u5b9a\u8303\u56f4\u5185**\u6b21\u5e42**\u8fd9\u7834\u73a9\u610f\u513f\u7684\u4e2a\u6570\u518d\u600e\u4e48\u591a\u4e5f\u53ea\u6709 $\\mathcal O(\\log)$ \u4e2a\u3002\r\n\r\n\u56e0\u6b64\u5bf9\u4e8e\u4e00\u4e2a\u6570\uff0c\u5b83\u6700\u591a\u88ab\u989d\u5916\u52a0 $\\mathcal O(\\log_{42} w)$ \u6b21\u3002\u5728\u6ca1\u6709\u64cd\u4f5c 2 \u7684\u60c5\u51b5\u4e0b\uff0c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6bcf\u4e2a\u6570\u5230 $42$ \u7684\u6b21\u5e42\u7684\u5dee\u503c\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n \\log n \\log_{42} w)$\u3002\r\n\r\n\u6709\u533a\u95f4\u8d4b\u503c\u64cd\u4f5c\u65f6\uff0c\u6211\u4eec\u628a\u8fd9\u4e00\u6574\u6bb5\u7684\u503c\u8bb0\u5f55\u5728\u6700\u53f3\u8fb9\u7684\u4f4d\u7f6e\u4e0a\uff0c\u7136\u540e\u5728\u522b\u7684\u4f4d\u7f6e\u4e0a\u6253\u4e2a\u6807\u8bb0\u5c31\u597d\u4e86\u3002\u7531\u4e8e\u6bcf\u6b21\u8fd9\u6837\u7684\u64cd\u4f5c\u6700\u591a\u53ea\u4f1a\u4ea7\u751f\u4e24\u4e2a\u65b0\u7684\u503c\uff0c\u56e0\u6b64\u65f6\u95f4\u590d\u6742\u5ea6\u6ca1\u53d8\u3002\r\n\r\n## \u4ee3\u7801\r\n\r\n```cpp\r\nconst int N = 1e5 + 7;\r\nconst ll inf = 1e18;\r\nint n, q;\r\nll p[12] = {1}, a[N];\r\nset<int> s;\r\nstruct T {\r\n\tint l, r, o;\r\n\tll z;\r\n\tpair<ll, int> x;\r\n} t[N<<2];\r\n\r\ninline int f(ll x) {\r\n\treturn lower_bound(p, p + 12, x) - p; \r\n}\r\n\r\ninline void upd(int p) {\r\n\tt[p].x = min(t[ls].x, t[rs].x);\r\n}\r\n\r\ninline void build(int p, int l, int r) {\r\n\tt[p].l = l, t[p].r = r;\r\n\tif (l == r) return t[p].x = mp(::p[t[p].o=f(a[l])] - a[l], l), void();\r\n\tbuild(ls, l, md), build(rs, md + 1, r), upd(p);\r\n}\r\n\r\ninline void spd(int p) {\r\n\tt[ls].z = max(-inf, t[ls].z + t[p].z);\r\n\tt[rs].z = max(-inf, t[rs].z + t[p].z);\r\n\tt[ls].x.fi = min(inf, t[ls].x.fi - t[p].z);\r\n\tt[rs].x.fi = min(inf, t[rs].x.fi - t[p].z);\r\n\tt[p].z = 0;\r\n}\r\n\r\ninline ll ask(int p, int x) {\r\n\tif (t[p].l == t[p].r) return ::p[t[p].o] - t[p].x.fi;\r\n\tspd(p);\r\n\treturn ask(x <= md ? ls : rs, x);\r\n}\r\n\r\ninline void setx(int p, int o, ll x) {\r\n\tif (t[p].l == t[p].r)\r\n\t\treturn t[p].x = mp(::p[t[p].o=f(x)] - x, t[p].l), void();\r\n\tspd(p);\r\n\tsetx(o <= md ? ls : rs, o, x);\r\n\tupd(p);\r\n}\r\n\r\ninline void add(int p, int l, int r, ll x) {\r\n\tif (t[p].l >= l && t[p].r <= r)\r\n\t\treturn t[p].z += x, t[p].x.fi -= x, void();\r\n\tspd(p);\r\n\tif (l <= md) add(ls, l, r, x);\r\n\tif (r > md) add(rs, l, r, x);\r\n\tupd(p);\r\n}\r\n\r\ninline void work2(int l, int r, ll x) {\r\n\tif (l != 1) setx(1, l - 1, ask(1, *s.lower_bound(l - 1))), s.insert(l - 1);\r\n\ts.erase(s.lower_bound(l), s.upper_bound(r));\r\n\tsetx(1, r, x), s.insert(r);\r\n\tif (l < r) add(1, l, r - 1, -inf); \r\n}\r\n\r\ninline void upd(int p, int x) {\r\n\tif (t[p].l == t[p].r) {\r\n\t\tll k = ::p[t[p].o] - t[p].x.fi;\r\n\t\tt[p].x = mp(::p[t[p].o=f(k)] - k, t[p].l);\r\n\t\treturn;\r\n\t}\r\n\tspd(p);\r\n\tupd(x <= md ? ls : rs, x);\r\n\tupd(p);\r\n}\r\n\r\ninline void work3(int l, int r, ll x) {\r\n\tif (l != 1) setx(1, l - 1, ask(1, *s.lower_bound(l - 1))), s.insert(l - 1);\r\n\tsetx(1, r, ask(1, *s.lower_bound(r))), s.insert(r);\r\n\tdo {\r\n\t\tadd(1, l, r, x);\r\n\t\twhile (t[1].x.fi < 0) upd(1, t[1].x.se);\r\n\t} while (!t[1].x.fi);\r\n}\r\n\r\nint main() {\r\n\tfor (int i = 1; i < 12; i++) p[i] = p[i-1] * 42;\r\n\trd(n), rd(q), rda(a, n);\r\n\tfor (int i = 1; i <= n; i++) s.insert(i);\r\n\tbuild(1, 1, n);\r\n\tfor (int i = 1, o, x, l, r; i <= q; i++) {\r\n\t\trd(o);\r\n\t\tswitch (o) {\r\n\t\t\tcase 1 : rd(x), print(ask(1, *s.lower_bound(x))); break;\r\n\t\t\tcase 2 : rd(l), rd(r), rd(x), work2(l, r, x); break;\r\n\t\t\tcase 3 : rd(l), rd(r), rd(x), work3(l, r, x); break;\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n```",
        "postTime": 1582702067,
        "uid": 100544,
        "name": "xht",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF679E \u3010Bear and Bad Powers of 42\u3011"
    },
    {
        "content": "[\u63a8\u9500\u535a\u5ba2](https://foreverlasting1202.github.io/2019/07/03/CF679E/)\n\n\u4e00\u9053\u9700\u8981\u5206\u6790\u590d\u6742\u5ea6\u7684\u7ebf\u6bb5\u6811\u9898\u3002\n<!--more-->\n\n\u64cd\u4f5c$1$\u548c\u64cd\u4f5c$2$\u663e\u7136\u662f\u4e2a\u7ebf\u6bb5\u6811\u7684\u57fa\u672c\u64cd\u4f5c\uff0c\u4f46\u64cd\u4f5c$3$\u6709\u70b9\u5947\u602a\u3002\u6211\u4eec\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u4e0a\u6bcf\u4e00\u4e2a\u70b9\u7ef4\u62a4\u4e00\u4e2a$dis$\u8868\u793a\u5230\u79bb\u8be5\u70b9\u6700\u8fd1\u7684\u4e14\u6bd4\u8be5\u70b9\u5927\u7684\u597d\u6570\uff0c\u7136\u540e\u5bf9\u4e8e\u64cd\u4f5c$3$\u6bcf\u6b21\u66b4\u529b\u7ebf\u6bb5\u6811\u4e0a\u533a\u95f4\u52a0\uff0c\u76f4\u5230\u8fd9\u68f5\u6811\u7684\u6700\u5c0f$dis$\u4e3a$0$\u3002\u90a3\u4e48\u8fd9\u91cc\u5c31\u6709\u51e0\u4e2a\u95ee\u9898\uff1a\n\n\u4e00\u3001\u52a0\u5230\u8d85\u8fc7\u600e\u4e48\u529e\n\n\u4e8c\u3001\u590d\u6742\u5ea6\u600e\u4e48\u8bc1\n\n\u5176\u5b9e\u8fd9\u4e24\u4e2a\u95ee\u9898\u662f\u4e00\u4e2a\u95ee\u9898\u3002\u52a0\u5230\u8d85\u8fc7\u7684\u8bdd\u4f60\u53ef\u4ee5\u76f4\u63a5\u9009\u62e9\u66b4\u529b\u91cd\u6784\uff0c\u8fd9\u4e2a\u590d\u6742\u5ea6\u5176\u5b9e\u662f\u5bf9\u7684\u3002\u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\uff1a\u6bcf\u4e00\u6b21\u66b4\u529b\u91cd\u6784\uff0c\u6700\u591a\u8c03\u6574$12$\u6b21\uff08\u56e0\u4e3a\u4fdd\u8bc1\u4e86\u5c0f\u4e8e\u7b49\u4e8e$1e18$\uff09\uff0c\u90a3\u4e48\u603b\u7684\u8c03\u6574\u590d\u6742\u5ea6\u4e5f\u4e0d\u8d85\u8fc7$12nlogn$\u3002\u540c\u6837\u5730\uff0c\u7b2c\u4e8c\u4e2a\u95ee\u9898\u4e5f\u662f\u540c\u6837\u5206\u6790\u5f97\u51fa\uff0c\u56e0\u6b64\u8fd9\u9898\u5c31\u505a\u597d\u4e86\u3002\n\ncode:\n```cpp\n//2019.7.3 by ljz\n#include<bits/stdc++.h>\nusing namespace std;\n#define res register int\n#define LL long long\n#define inf 1100005\n#define INF 0x3f3f3f3f3f3f3f\n#define eps 1e-10\n#define RG register\n#define db double\n#define pc(x) __builtin_popcount(x)\ntypedef pair<int,int> Pair;\n#define mp make_pair\n#define fi first\n#define se second\n#define pi acos(-1.0)\n#define pb push_back\n#define gc getchar\n//inline char gc() {\n//    static char buf[100000],*p1,*p2;\n//    return p1==p2&&(p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++;\n//}\ninline int read() {\n    res s=0,ch=gc();\n    while(ch<'0'||ch>'9')ch=gc();\n    while(ch>='0'&&ch<='9')s=s*10+ch-'0',ch=gc();\n    return s;\n}\n//inline int read() {\n//    res s=0,ch=gc(),w=1;\n//    while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=gc();}\n//    while(ch>='0'&&ch<='9')s=s*10+ch-'0',ch=gc();\n//    return s*w;\n//}\n//inline LL Read() {\n//    RG LL s=0;\n//    res ch=gc();\n//    while(ch<'0'||ch>'9')ch=gc();\n//    while(ch>='0'&&ch<='9')s=s*10+ch-'0',ch=gc();\n//    return s;\n//}\n//inline LL Read() {\n//    RG LL s=0;\n//    res ch=gc(),w=1;\n//    while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=gc();}\n//    while(ch>='0'&&ch<='9')s=s*10+ch-'0',ch=gc();\n//    return s*w;\n//}\ninline void swap(res &x,res &y) {\n    x^=y^=x^=y;\n}\n//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\nconst int N=1e5+10;\nconst LL pw[]={1LL,42LL,1764LL,74088LL,3111696LL,130691232LL,5489031744LL,230539333248LL,9682651996416LL,406671383849472LL,17080198121677824LL,717368321110468608LL};\nnamespace MAIN{\n    int n,q;\n    LL di[N<<2],ad[N<<2],co[N<<2];\n    int lo[N<<2];\n    inline int Log(const RG LL &x){\n        return int(lower_bound(pw,pw+12,x)-pw);\n    }\n    void build(res rt,res l,res r){\n//        L[rt]=l,R[rt]=r;\n        if(l==r){\n            res x=read();\n            lo[rt]=Log(x),di[rt]=pw[lo[rt]]-x;\n            return;\n        }\n        res mid=(l+r)>>1;\n        build(rt<<1,l,mid),build(rt<<1|1,mid+1,r);\n        di[rt]=min(di[rt<<1],di[rt<<1|1]);\n    }\n//    inline void Change(const res &rt,const RG LL &Co,const RG LL &Ad){\n//        if(Co)lo[rt]=Log(Co),di[rt]=pw[lo[rt]]-Co,co[rt]=Co,ad[rt]=0,val[rt]=Co;\n//        if(Ad)di[rt]-=Ad,ad[rt]+=Ad,val[rt]+=Ad;\n//    }\n//    inline void Pushdown(const res &rt){\n//        Change(rt<<1,co[rt],ad[rt]),Change(rt<<1|1,co[rt],ad[rt]),co[rt]=ad[rt]=0;\n//    }\n//    void rebuild(res rt,res l,res r){\n//        if(l==r){\n//            lo[rt]=Log(val[rt]),di[rt]=pw[lo[rt]]-val[rt];\n//            return;\n//        }\n//        Pushdown(rt);\n//        res mid=(l+r)>>1;\n//        rebuild(rt<<1,l,mid),rebuild(rt<<1|1,mid+1,r);\n//        di[rt]=min(di[rt<<1],di[rt<<1|1]);\n//    }\n//    inline void change(const res &rt,const RG LL &Co,const RG LL &Ad){\n//        if(Co)lo[rt]=Log(Co),di[rt]=pw[lo[rt]]-Co,co[rt]=Co,ad[rt]=0;\n//        if(Ad){\n//            if(co[rt])co[rt]+=Ad;\n//            else di[rt]-=Ad,ad[rt]+=Ad;\n//        }\n////        if(di[rt]<0)rebuild(rt,L[rt],R[rt]);\n//    }\n    inline void add(const res &rt,const RG LL &Ad){\n        co[rt]?co[rt]+=Ad:ad[rt]+=Ad,di[rt]-=Ad;\n    }\n    inline void cov(const res &rt,const RG LL &Co){\n        lo[rt]=Log(Co),di[rt]=pw[lo[rt]]-Co,co[rt]=Co,ad[rt]=0;\n    }\n    inline void pushdown(const res &rt){\n        if(!co[rt]&&!ad[rt])return;\n        if(co[rt])cov(rt<<1,co[rt]),cov(rt<<1|1,co[rt]),co[rt]=0;\n        if(ad[rt])add(rt<<1,ad[rt]),add(rt<<1|1,ad[rt]),ad[rt]=0;\n    }\n    void modify(res rt,res l,res r,const res &L,const res &R,const res &co,const res &ad){\n        if(L<=l&&r<=R){co?cov(rt,co):add(rt,ad);return;}\n        pushdown(rt);\n        res mid=(l+r)>>1;\n        if(L<=mid)modify(rt<<1,l,mid,L,R,co,ad);\n        if(R>mid)modify(rt<<1|1,mid+1,r,L,R,co,ad);\n        di[rt]=min(di[rt<<1],di[rt<<1|1]);\n    }\n    LL get(res rt,res l,res r,const res &p){\n        if(l==r)return pw[lo[rt]]-di[rt];\n        pushdown(rt);\n        res mid=(l+r)>>1;\n        if(p<=mid)return get(rt<<1,l,mid,p);\n        return get(rt<<1|1,mid+1,r,p);\n    }\n    LL query(res rt,res l,res r){\n        if(di[rt]>=0)return di[rt];\n        if(l==r){\n            RG LL x=pw[lo[rt]]-di[rt];\n            lo[rt]=Log(x),di[rt]=pw[lo[rt]]-x;\n            return di[rt];\n        }\n        pushdown(rt);\n        res mid=(l+r)>>1;\n        query(rt<<1,l,mid),query(rt<<1|1,mid+1,r),di[rt]=min(di[rt<<1],di[rt<<1|1]);\n        return di[rt];\n    }\n    inline void MAIN(){\n        n=read(),q=read(),build(1,1,n);\n        while(q--){\n            res opt=read();\n            if(opt==2){\n                res l=read(),r=read(),x=read();\n                modify(1,1,n,l,r,x,0);\n            }\n            else if(opt==1){\n                res p=read();\n                printf(\"%lld\\n\",get(1,1,n,p));\n            }\n            else{\n                res l=read(),r=read(),x=read();\n                modify(1,1,n,l,r,0,x);\n                while(!query(1,1,n))modify(1,1,n,l,r,0,x);\n            }\n        }\n    }\n}\nint main() {\n//    srand((unsigned)time(NULL));\n    // freopen(\"zao.in\",\"r\",stdin);\n    // freopen(\"std.out\",\"w\",stdout);\n    MAIN::MAIN();\n    return 0;\n}\n```",
        "postTime": 1562157298,
        "uid": 32878,
        "name": "foreverlasting",
        "ccfLevel": 7,
        "title": "\u3010CF679E\u3011Bear and Bad Powers of 42"
    },
    {
        "content": "> [CF679E Bear and Bad Powers of 42](https://www.luogu.com.cn/problem/CF679E) *3100\n\n\u6ce8\u610f\u5230\u5728\u53ef\u80fd\u7684\u503c\u57df\u8303\u56f4\u5185\uff08\u7c97\u7565\u4f30\u8ba1\u4e3a $qV \\approx 10 ^ {14}$\uff09$42$ \u7684\u5e42\u7684\u4e2a\u6570\u6781\u5c11\uff0c\u56e0\u6b64\uff0c\u4e3a\u4e86\u5feb\u901f\u6c42\u51fa\u54ea\u4e9b\u4f4d\u7f6e\u662f\u574f\u7684\uff0c\u6211\u4eec\u5c1d\u8bd5\u8bb0\u5f55\u6bcf\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u503c\u4e0e\u4e0b\u4e00\u4e2a\u574f\u6570\u7684\u8ddd\u79bb\u3002\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u82e5\u5f53\u524d\u533a\u95f4\u6700\u5c0f\u503c\u5c0f\u4e8e\u589e\u52a0\u503c\uff0c\u5219\u9012\u5f52\u4e0b\u53bb\u66b4\u529b\u4fee\u6539\u3002\n\n\u8fd9\u90e8\u5206\u5229\u7528\u4e86\u7ebf\u6bb5\u6811\u7684\u52bf\u80fd\u5206\u6790\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u6700\u591a\u53ea\u4f1a\u88ab\u9012\u5f52\u4fee\u6539 $\\log_{42}qV$ \u6b21\u3002\n\n\u5bf9\u4e8e\u533a\u95f4\u8d4b\u503c\u64cd\u4f5c\uff0c\u7531\u4e8e\u5176\u6700\u591a\u53ea\u4f1a\u589e\u52a0 $\\mathcal{O}(1)$ \u4e2a\u76f8\u540c\u7684\u6570\u7684\u8fde\u7eed\u6bb5\uff0c\u56e0\u6b64\u589e\u52a0\u7684\u64cd\u4f5c\u6b21\u6570\u4e3a $\\log_{42} qV$\u3002\u6ce8\u610f\uff0c\u6211\u4eec\u662f\u5c06\u8fde\u7eed\u6bb5\u770b\u6210\u4e00\u4e2a\u6570\u5904\u7406\uff0c\u56e0\u6b64\u82e5\u5f53\u524d\u533a\u95f4\u88ab\u6253\u4e0a\u533a\u95f4\u8986\u76d6\u7684\u61d2\u6807\u8bb0\uff0c\u8bf4\u660e\u5f53\u524d\u533a\u95f4\u4ec5\u6709\u4e00\u79cd\u6570\uff08\u8fd9\u6bd4\u7528 set \u5904\u7406\u8fde\u7eed\u6bb5\u65b9\u4fbf\u4e00\u4e9b\uff09\u3002\n\n\u6ce8\u610f\u533a\u95f4\u52a0\u6cd5\u548c\u533a\u95f4\u8d4b\u503c\u7684\u61d2\u6807\u8bb0\u7684\u5148\u540e\u987a\u5e8f\uff0c\u7b14\u8005\u91c7\u7528\u4e86\u4f18\u5148\u533a\u95f4\u8d4b\u503c\u7684\u65b9\u6cd5\uff0c\u5373\u82e5\u5f53\u524d\u533a\u95f4\u88ab\u8d4b\u503c\u4e14\u88ab\u533a\u95f4\u52a0\uff0c\u5219\u8be5\u533a\u95f4\u52a0\u4f1a\u4f53\u73b0\u5728\u533a\u95f4\u8d4b\u503c\u4e0a\u3002\u56e0\u6b64\uff0c\u82e5\u6709\u533a\u95f4\u8d4b\u503c\u6807\u8bb0\uff0c\u5219\u65e0\u533a\u95f4\u52a0\u6cd5\u6807\u8bb0\uff0c\u8fd9\u6837\u65b9\u4fbf\u8003\u8651\u3002\n\n\u56e0\u4e3a\u6bcf\u6b21\u64cd\u4f5c\u5747\u4e3a $\\mathcal{O}(\\log n)$\uff0c\u6545\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n\\log_{42}(nV) \\log n)$\uff08\u89c6 $n, q$ \u540c\u9636\uff09\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 1e5 + 5;\nlong long pw[N], val[N << 2], add[N << 2], laz[N << 2];\nint n, q, a[N];\nlong long calc(long long a) {for(int i = 1; i <= 9; i++) if(pw[i] >= a) return pw[i] - a; assert(0);}\nvoid pushup(int x) {val[x] = min(val[x << 1], val[x << 1 | 1]);}\nvoid tagmo(int x, long long v) {val[x] = calc(laz[x] = v), add[x] = 0;}\nvoid tagad(int x, long long v) {if(laz[x]) val[x] = calc(laz[x] += v); else assert(val[x] >= v), val[x] -= v, add[x] += v;}\nvoid pushdown(int x) {\n\tif(laz[x]) tagmo(x << 1, laz[x]), tagmo(x << 1 | 1, laz[x]), laz[x] = 0, assert(!add[x]);\n\tif(add[x]) tagad(x << 1, add[x]), tagad(x << 1 | 1, add[x]), add[x] = 0;\n}\nvoid build(int l, int r, int x) {\n\tif(l == r) return val[x] = calc(laz[x] = a[l]), void();\n\tint m = l + r >> 1;\n\tbuild(l, m, x << 1), build(m + 1, r, x << 1 | 1);\n\tpushup(x); // add pushup =.=\n}\nvoid modifymo(int l, int r, int ql, int qr, int x, int v) {\n\tif(ql <= l && r <= qr) return tagmo(x, v);\n\tint m = l + r >> 1;\n\tpushdown(x);\n\tif(ql <= m) modifymo(l, m, ql, qr, x << 1, v);\n\tif(m < qr) modifymo(m + 1, r, ql, qr, x << 1 | 1, v);\n\tpushup(x);\n}\nvoid modifyad(int l, int r, int ql, int qr, int x, int v) {\n\tif(ql <= l && r <= qr && (laz[x] || val[x] >= v)) return tagad(x, v);\n\tint m = l + r >> 1;\n\tpushdown(x);\n\tif(ql <= m) modifyad(l, m, ql, qr, x << 1, v);\n\tif(m < qr) modifyad(m + 1, r, ql, qr, x << 1 | 1, v);\n\tpushup(x);\n}\nlong long query(int p) {\n\tint l = 1, r = n, x = 1;\n\twhile(l < r) {\n\t\tint m = l + r >> 1;\n\t\tpushdown(x);\n\t\tif(p <= m) r = m, x <<= 1;\n\t\telse l = m + 1, x = x << 1 | 1;\n\t}\n\treturn laz[x];\n}\nint main() {\n\tcin >> n >> q, pw[0] = 1;\n\tfor(int i = 1; i <= 9; i++) pw[i] = pw[i - 1] * 42;\n\tfor(int i = 1; i <= n; i++) cin >> a[i];\n\tbuild(1, n, 1);\n\tfor(int i = 1; i <= q; i++) {\n\t\tint op, l, r, x;\n\t\tcin >> op;\n\t\tif(op == 1) cin >> x, cout << query(x) << endl;\n\t\tif(op == 2) cin >> l >> r >> x, modifymo(1, n, l, r, 1, x);\n\t\tif(op == 3) {\n\t\t\tcin >> l >> r >> x;\n\t\t\tdo modifyad(1, n, l, r, 1, x);\n\t\t\twhile(val[1] == 0); \n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1647700298,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "CF679E Bear and Bad Powers of 42"
    },
    {
        "content": "\u5b89\u5229\u4e2a\u4eba blog\uff1ahttps://www.cnblogs.com/ET2006/\n\n[Codeforces \u9898\u76ee\u4f20\u9001\u95e8](https://codeforces.com/contest/679/problem/E) & [\u6d1b\u8c37\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF679E)\n\n\u8fd9\u4e2a $42$ \u7684\u6761\u4ef6\u975e\u5e38\u5947\u602a\uff0c\u4e0d\u8fc7\u6ce8\u610f\u5230\u672c\u9898 $a_i$ \u8303\u56f4\u7684\u6700\u5927\u503c\u4e3a $10^{14}$\uff0c\u800c\u5728\u503c\u57df\u8303\u56f4\u5185 $42$ \u7684\u5e42\u7684\u4e2a\u6570\u6700\u591a\u53ea\u6709 $13$ \u4e2a\uff0c\u6545\u8003\u8651\u7528\u7c7b\u4f3c\u4e8e seg-beats \u7684\u65b9\u6cd5\u89e3\u51b3\u8fd9\u9053\u9898\u3002\n\n\u9996\u5148\u4e0d\u8003\u8651\u64cd\u4f5c $2$\uff08\u533a\u95f4\u8d4b\u503c\u64cd\u4f5c\uff09\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u53d1\u73b0\u4e00\u4e2a\u6027\u8d28\uff0c\u90a3\u5c31\u662f\u6211\u4eec\u5bf9\u4e00\u4e2a\u533a\u95f4\u8fdb\u884c\u533a\u95f4\u52a0\u7684\u64cd\u4f5c\uff0c\u6bcf\u989d\u5916\u8fdb\u884c\u4e00\u6b21\uff0c\u90fd\u662f\u56e0\u4e3a\u5b58\u5728\u67d0\u4e2a\u6570 $a_i$ \u8fbe\u5230\u4e86 $42$ \u7684\u6574\u6570\u6b21\u5e42\uff0c\u800c\u6211\u4eec\u7684 $a_i$ \u662f\u5355\u8c03\u9012\u589e\u7684\uff0c\u6545\u6bcf\u4e2a\u6570\u6700\u591a\u53ea\u53ef\u80fd\u51fa\u73b0 $13$ \u6b21\u6210\u4e3a $42$ \u7684\u6574\u6570\u6b21\u5e42\u7684\u65f6\u523b\uff0c\u6545\u603b\u64cd\u4f5c\u6b21\u6570\u6700\u591a\u53ea\u6709 $1.3\\times 10^6$\uff0c\u4e8e\u662f\u66b4\u529b\u52a0\u662f\u4e0d\u4f1a\u51fa\u95ee\u9898\u7684\u3002\u6545\u73b0\u5728\u95ee\u9898\u8f6c\u5316\u4e3a\u600e\u6837\u6c42\u4e00\u4e2a\u533a\u95f4\u4e2d\u662f\u5426\u5b58\u5728 $42$ \u7684\u6574\u6570\u6b21\u5e42\u3002\n\n\u8003\u8651\u8bb0 $b_i$ \u4e3a $\\geq a_i$ \u7684\u6700\u5c0f\u7684 $42$ \u7684\u6574\u6570\u6b21\u5e42\u3002\u663e\u7136\u6211\u4eec\u5bf9\u533a\u95f4\u8fdb\u884c $+v$ \u64cd\u4f5c\u76f8\u5f53\u4e8e\u5c06\u5bf9\u5e94\u533a\u95f4 $b_i-a_i$ \u7684\u503c $-v$\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\u5f53\u7136\uff0c\u6211\u4eec\u8fdb\u884c\u4e00\u6b21 $-v$ \u64cd\u4f5c\u540e\u4f1a\u5bfc\u81f4\u67d0\u4e9b $b_i-a_i$ \u53d8\u6210\u8d1f\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6b64\u65f6\u7684 $b_i$ \u4e0d\u518d\u662f $\\geq a_i$ \u7684\u6700\u5c0f\u7684 $42$ \u7684\u6574\u6570\u6b21\u5e42\u4e86\uff0c\u6211\u4eec\u5bf9\u4e8e\u8fd9\u6837\u7684 $i$ \u66b4\u529b\u4fee\u6539 $b_i$ \u7684\u503c\uff0c\u5177\u4f53\u6765\u8bf4\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4 $b_i-a_i$ \u7684\u6700\u5c0f\u503c\uff0c\u6bcf\u6b21\u4fee\u6539\u540e\u5728\u7ebf\u6bb5\u6811\u4e0a\u8fdb\u884c\u4e00\u904d\u9012\u5f52\uff0c\u5f53\u9012\u5f52\u5230\u67d0\u4e2a\u533a\u95f4\u65f6\u82e5\u8be5\u533a\u95f4 $b_i-a_i$ \u7684\u6700\u5c0f\u503c $\\geq 0$ \u5219\u610f\u5473\u7740\u4e0d\u5b58\u5728 $b_i-a_i<0$ \u7684 $i$\uff0c\u76f4\u63a5 `return` \u5c31\u884c\u4e86\uff0c\u5426\u5219\u7ee7\u7eed\u9012\u5f52\u5de6\u53f3\u513f\u5b50\uff0c\u9012\u5f52\u5230\u53f6\u5b50\u8282\u70b9\u76f4\u63a5\u628a\u503c\u6539\u6389\u3002\u7531\u4e4b\u524d\u7684\u5206\u6790\u53ef\u77e5\u6700\u591a\u4fee\u6539\u6b21\u6570\u4e5f\u662f $1.3\\times 10^6$\uff0c\u5982\u6b64\u66b4\u529b\u8fdb\u884c\u4e0b\u53bb\u76f4\u5230\u5168\u5c40 $b_i-a_i$ \u4e0d\u4e3a $0$\uff08\u4e0d\u5b58\u5728 $a_i=b_i$\uff09\u5373\u53ef\uff0c\u590d\u6742\u5ea6 $q\\log_{42}(qa_i)\\log n$\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u52a0\u4e0a\u533a\u95f4\u8d4b\u503c\u64cd\u4f5c\u4e4b\u540e\u600e\u4e48\u5904\u7406\u3002\u7531\u4e8e\u6211\u4eec\u6709\u533a\u95f4\u8d4b\u503c\u64cd\u4f5c\uff0c\u6545\u521a\u624d\u603b\u64cd\u4f5c\u6b21\u6570 $1.3\\times 10^6$ \u7684\u590d\u6742\u5ea6\u4e0a\u754c\u5c31\u4e0d\u518d\u5b58\u5728\u4e86\uff08\u4e0d\u8fc7\u542c\u8bf4\u6309\u7167\u4e4b\u524d\u7684\u5957\u8def\u66b4\u529b\u8d4b\u503c\u4e5f\u80fd\u8fc7\uff1f\u5927\u6982\u662f\u56e0\u4e3a\u8fd9\u9898\u6570\u636e\u6bd4\u8f83\u96be\u5361\u7f62\uff09\u3002\u4e0d\u8fc7\u4f5c\u4e3a\u7cbe\u76ca\u6c42\u7cbe\u7684 OIer\uff0c\u6211\u4eec\u8981\u601d\u8003\u66f4\u4f18\u79c0\u7684\u505a\u6cd5\u3002\u4e0d\u96be\u53d1\u73b0\u8fdb\u884c\u4e00\u904d\u533a\u95f4\u8d4b\u503c\u4e4b\u540e\u4f1a\u4f7f\u5f88\u591a\u4f4d\u7f6e\u4e0a\u7684\u503c\u53d8\u6210\u540c\u4e00\u4e2a\u503c\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u533a\u95f4\u8d4b\u503c\u64cd\u4f5c\u4f1a\u5c06\u5e8f\u5217\u5212\u5206\u6210\u4e00\u6bb5\u6bb5\uff0c\u6211\u4eec\u8003\u8651\u7528 `multiset` \u7ef4\u62a4\u6bcf\u4e00\u6bb5\u7684\u53f3\u7aef\u70b9\uff0c\u8fd9\u6837\u67e5\u8be2\u7684\u65f6\u5019\u53ea\u7528\u67e5\u8be2\u5bf9\u5e94\u4f4d\u7f6e\u6240\u5728\u6bb5\u7684\u53f3\u7aef\u70b9\u7684\u503c\u5373\u53ef\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u521d\u59cb\u72b6\u6001\u4e0b\u6240\u6709\u5143\u7d20\u90fd\u5355\u72ec\u6210\u6bb5\uff0c\u4e5f\u5c31\u662f\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f\u5bf9\u5e94\u6bb5\u7684\u53f3\u7aef\u70b9\u3002\u5f53\u6211\u4eec\u8fdb\u884c $2$ \u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u76f8\u5f53\u4e8e $[l,r]$ \u6210\u4e3a\u4e86\u5b8c\u6574\u7684\u4e00\u6bb5\uff0c\u6545\u6211\u4eec\u5c06 `multiset` \u4e2d $[l,r-1]$ \u5185\u7684\u5143\u7d20\u5168\u90e8\u5220\u9664\u5e76\u63d2\u5165 $r$\uff0c\u7531\u4e8e\u6211\u4eec\u53ea\u5173\u5fc3\u6bb5\u7684\u53f3\u7aef\u70b9\u7684\u503c\u5373\u53ef\uff0c\u4e8e\u662f\u6211\u4eec\u5c06\u7ebf\u6bb5\u6811 $[l,r-1]$ \u4f4d\u7f6e\u4e0a\u8d4b\u4e0a INF\uff08\u4e3a\u4e86\u4fdd\u8bc1\u5b83\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u53d8\u6210\u8d1f\u6570\uff09\uff0c\u6682\u4e14\u5ffd\u7565\u5b83\u4eec\u7684\u5b58\u5728\uff0c\u5e76\u5c06 $r$ \u4f4d\u7f6e\u4e0a\u7684\u503c\u6539\u4e3a\u5f85\u8d4b\u7684\u503c\u3002\u5f53\u7136\uff0c\u8fd9\u6837\u4e5f\u4f1a\u5bfc\u81f4 $l-1$ \u6210\u4e3a\u65b0\u7684\u6bb5\u7684\u53f3\u7aef\u70b9\uff0c\u6545\u5728 `multiset` \u4e2d\u63d2\u5165 $l-1$\uff0c\u5e76\u5c06 $l-1$ \u4f4d\u7f6e\u4e0a\u7684\u503c\u6539\u4e3a\u771f\u5b9e\u503c\uff08\u539f\u672c $l-1$ \u6240\u5728\u6bb5\u7684\u53f3\u7aef\u70b9\u7684\u503c\uff09\u5373\u53ef\u3002\u5176\u4f59\u90fd\u548c\u4e0d\u8003\u8651\u64cd\u4f5c $2$ \u7684\u7248\u672c\u4e00\u6837\u3002\n\n\u590d\u6742\u5ea6\u8fd8\u662f $q\\log_{42}(qa_i)\\log n$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define fi first\n#define se second\n#define fill0(a) memset(a,0,sizeof(a))\n#define fill1(a) memset(a,-1,sizeof(a))\n#define fillbig(a) memset(a,63,sizeof(a))\n#define pb push_back\n#define ppb pop_back\n#define mp make_pair\ntemplate<typename T1,typename T2> void chkmin(T1 &x,T2 y){if(x>y) x=y;}\ntemplate<typename T1,typename T2> void chkmax(T1 &x,T2 y){if(x<y) x=y;}\ntypedef pair<int,int> pii;\ntypedef long long ll;\ntypedef unsigned int u32;\ntypedef unsigned long long u64;\nnamespace fastio{\n\t#define FILE_SIZE 1<<23\n\tchar rbuf[FILE_SIZE],*p1=rbuf,*p2=rbuf,wbuf[FILE_SIZE],*p3=wbuf;\n\tinline char getc(){return p1==p2&&(p2=(p1=rbuf)+fread(rbuf,1,FILE_SIZE,stdin),p1==p2)?-1:*p1++;}\n\tinline void putc(char x){(*p3++=x);}\n\ttemplate<typename T> void read(T &x){\n\t\tx=0;char c=getchar();T neg=0;\n\t\twhile(!isdigit(c)) neg|=!(c^'-'),c=getchar();\n\t\twhile(isdigit(c)) x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\t\tif(neg) x=(~x)+1;\n\t}\n\ttemplate<typename T> void recursive_print(T x){if(!x) return;recursive_print(x/10);putc(x%10^48);}\n\ttemplate<typename T> void print(T x){if(!x) putc('0');if(x<0) putc('-'),x=~x+1;recursive_print(x);}\n\tvoid print_final(){fwrite(wbuf,1,p3-wbuf,stdout);}\n}\nconst int MAXN=1e5;\nconst int LOG_42=13;\nconst ll INF=1e18;\nint n,qu;set<int> st;\nll pw42[LOG_42+2];\nll get42(ll v){return *lower_bound(pw42,pw42+LOG_42+1,v);}\nstruct node{int l,r;ll v,tag_lz,add_lz;} s[MAXN*4+5];\nll a[MAXN+5],nxt42[MAXN+5];\nvoid pushup(int k){s[k].v=min(s[k<<1].v,s[k<<1|1].v);}\nvoid pushdown(int k){\n\tif(s[k].tag_lz!=0){\n\t\ts[k<<1].v=s[k].tag_lz;s[k<<1|1].v=s[k].tag_lz;\n\t\ts[k<<1].tag_lz=s[k].tag_lz;s[k<<1|1].tag_lz=s[k].tag_lz;\n\t\ts[k].tag_lz=0;\n\t}\n\tif(s[k].add_lz!=0){\n\t\ts[k<<1].v+=s[k].add_lz;s[k<<1|1].v+=s[k].add_lz;\n\t\ts[k<<1].add_lz+=s[k].add_lz;s[k<<1|1].add_lz+=s[k].add_lz;\n\t\ts[k].add_lz=0;\n\t}\n}\nvoid build(int k,int l,int r){\n\ts[k].l=l;s[k].r=r;\n\tif(l==r){nxt42[l]=get42(a[l]);s[k].v=nxt42[l]-a[l];return;}\n\tint mid=l+r>>1;build(k<<1,l,mid);build(k<<1|1,mid+1,r);\n\tpushup(k);\n}\nvoid assign(int k,int l,int r,ll x){\n\tif(l<=s[k].l&&s[k].r<=r){s[k].tag_lz=s[k].v=x;return;}\n\tpushdown(k);int mid=s[k].l+s[k].r>>1;\n\tif(r<=mid) assign(k<<1,l,r,x);\n\telse if(l>mid) assign(k<<1|1,l,r,x);\n\telse assign(k<<1,l,r,x),assign(k<<1|1,mid+1,r,x);\n\tpushup(k);\n}\nvoid change_v(int k,int p,ll x){\n\tif(s[k].l==s[k].r){\n\t\tnxt42[s[k].l]=get42(x);s[k].v=nxt42[s[k].l]-x;return;\n\t} pushdown(k);int mid=s[k].l+s[k].r>>1;\n\tif(p<=mid) change_v(k<<1,p,x);\n\telse change_v(k<<1|1,p,x);\n\tpushup(k);\n}\nvoid add(int k,int l,int r,ll x){\n\tif(l<=s[k].l&&s[k].r<=r){s[k].add_lz+=x;s[k].v+=x;return;}\n\tpushdown(k);int mid=s[k].l+s[k].r>>1;\n\tif(r<=mid) add(k<<1,l,r,x);\n\telse if(l>mid) add(k<<1|1,l,r,x);\n\telse add(k<<1,l,r,x),add(k<<1|1,mid+1,r,x);\n\tpushup(k);\n}\nvoid killneg(int k){\n\tif(s[k].v>=0) return;\n\tif(s[k].l==s[k].r){\n\t\ts[k].v=nxt42[s[k].l]-s[k].v;\n\t\tnxt42[s[k].l]=get42(s[k].v);\n\t\ts[k].v=nxt42[s[k].l]-s[k].v;\n\t\treturn;\n\t} pushdown(k);killneg(k<<1);killneg(k<<1|1);\n\tpushup(k);\n}\nll getdif(int k,int p){\n\tif(s[k].l==s[k].r) return s[k].v;\n\tint mid=s[k].l+s[k].r>>1;pushdown(k);\n\tif(p<=mid) return getdif(k<<1,p);\n\telse return getdif(k<<1|1,p);\n}\nll query(int k,int p){\n\tif(s[k].l==s[k].r) return nxt42[s[k].l]-s[k].v;\n\tint mid=s[k].l+s[k].r>>1;pushdown(k);\n\tif(p<=mid) return query(k<<1,p);\n\telse return query(k<<1|1,p);\n}\nvoid split(int x){\n\tint nxt=*st.lower_bound(x);\n\tif(nxt==x) return;st.insert(nxt);\n\tchange_v(1,x,query(1,nxt));st.insert(x);\n}\nint main(){\n\tpw42[0]=1;for(int i=1;i<=LOG_42;i++) pw42[i]=pw42[i-1]*42ll;\n\tscanf(\"%d%d\",&n,&qu);\n\tfor(int i=1;i<=n;i++) scanf(\"%lld\",&a[i]),st.insert(i);\n\tbuild(1,1,n);\n\twhile(qu--){\n\t\tint opt;scanf(\"%d\",&opt);\n\t\tif(opt==1){int x;scanf(\"%d\",&x);printf(\"%lld\\n\",query(1,*st.lower_bound(x)));}\n\t\telse if(opt==2){\n\t\t\tint l,r,v;scanf(\"%d%d%d\",&l,&r,&v);\n\t\t\tif(l>1) split(l-1);split(r);\n\t\t\tst.erase(st.lower_bound(l),st.lower_bound(r));\n\t\t\tif(l<r) assign(1,l,r-1,INF);\n\t\t\tchange_v(1,r,v);\n\t\t} else {\n\t\t\tint l,r,v;scanf(\"%d%d%d\",&l,&r,&v);\n\t\t\tif(l>1) split(l-1);split(r);\n\t\t\tdo {\n\t\t\t\tadd(1,l,r,-v);killneg(1);\n\t\t\t} while(s[1].v==0);\n\t\t}\n\t}\n\treturn 0;\n}\n/*\n6 13\n40 1700 7 1672 4 1722\n3 2 4 42\n1 2\n1 3\n1 4\n3 2 6 50\n1 2\n1 4\n1 6\n2 3 4 41\n3 1 5 1\n1 1\n1 3\n1 5\n*/\n```\n\n",
        "postTime": 1614516789,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF679E\u3010Bear and Bad Powers of 42\u3011"
    }
]