[
    {
        "content": "\u8003\u8651\u82e5\u4e24\u4e2a\u4e32 $s_i$ \u4e0e $s_j$\uff0c\u6709 $s_i\\subset s_j$\uff08\u6307 $s_i$ \u7684 $1$ \u4f4d\u662f $s_j$ \u7684 $1$ \u4f4d\u7684\u5b50\u96c6\uff09\uff0c\u5219\u663e\u7136 $s_i$ \u53ef\u4ee5\u901a\u8fc7\u52a0\u8fb9\u52a0\u6210 $s_j$\u3002\u6211\u4eec\u5bf9\u6240\u6709\u6b64\u79cd $i,j$ \u5bf9\uff0c\u8fde\u4e00\u6761\u4ece $i$ \u5230 $j$ \u7684\u6709\u5411\u8fb9\u3002\u663e\u7136\uff0c\u8fb9\u6570\u6700\u591a\u662f\u5b50\u96c6\u6570\uff0c\u4e5f\u5373 $O(3^n)$ \u7ea7\u522b\u7684\uff0c\u53ef\u4ee5\u5efa\u51fa\u3002\n\n\u8003\u8651\u521d\u59cb\u7b54\u6848\u4e3a\u6240\u6709\u4e32\u90fd\u66b4\u529b\u5efa\u51fa\uff0c\u5373\u4e3a $\\sum|s_i|$\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u67d0\u4e2a $s_i$ \u53bb\u5339\u914d\u4efb\u4e00\u5305\u542b\u5b83\u7684 $j$\uff0c\u8fd9\u6837\u5b50\u5c31\u53ef\u4ee5\u5728 $s_i$ \u7684\u57fa\u7840\u4e0a\u5efa\u51fa $s_j$\uff0c\u4e5f\u5c31\u662f\u8bf4\u603b\u8d39\u7528\u51cf\u5c11\u4e86 $|s_i|$\u3002\u53c8\u56e0\u4e3a\u5305\u542b\u5173\u7cfb\u5fc5\u662fDAG\uff0c\u6545\u6211\u4eec\u4f1a\u53d1\u73b0\u8fd9\u662f\u4e00\u4e2aDAG\u4e0a\u6700\u5927\u8def\u5f84\u8986\u76d6\u95ee\u9898\u3002\n\n\u8003\u8651\u7528\u7f51\u7edc\u6d41\u89e3\u51b3\u3002\u8bbe $(x,y,z,c)$ \u8868\u793a\u4e00\u6761\u4ece $x$ \u5230 $y$ \u6d41\u91cf\u4e3a $z$ \u8d39\u7528\u4e3a $c$ \u7684\u8fb9\u3002\u4e8e\u662f\u6211\u4eec\u62c6\u70b9\uff0c\u5bf9\u4e8e\u539f\u56fe\u4e2d\u4e00\u6761\u8fb9 $(i,j)$\uff0c\u8fde\u8fb9 $(i,j',1,-|s_i|)$\uff0c\u5176\u4e2d $j'$ \u8868\u793a $j$ \u7684\u51fa\u70b9\u3002\u540c\u65f6\uff0c\u5bf9\u4e8e\u6240\u6709 $i$\uff0c\u8fde\u8fb9 $(S,i,1,|s_i|)$ \u4e0e $(i',T,1,0)$\u3002\u540c\u65f6\uff0c\u4e3a\u4e86\u8868\u793a\u4e00\u6761\u8def\u5f84\u7684\u7ec8\u70b9\u4eab\u53d7\u4e0d\u5230\u4f18\u60e0\u540c\u65f6\u8fd8\u8981\u591a\u82b1\u4e00\u6b21\u6765\u91cd\u7f6e\u72b6\u6001\uff0c\u6240\u4ee5\u8fde\u8fb9 $(i,T,1,1)$\u3002\u8fd9\u6837\u5b50\u8dd1\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u5c31\u5f97\u5230\u4e86\u7b54\u6848\uff08\u522b\u5fd8\u4e86\u51cf\u4e00\uff0c\u56e0\u4e3a\u6700\u540e\u4e00\u6b21\u4e0d\u7528\u91cd\u7f6e\uff09\u3002\u65b9\u6848\u53ef\u4ee5\u76f4\u63a5\u7531\u6b8b\u91cf\u7f51\u7edc\u6784\u9020\u5f97\u51fa\u3002\n\n\u70b9\u6570\u6700\u5927\u4e3a $2^n=1024$\uff0c\u8fb9\u6570\u6700\u5927\u4e3a $3^n=59049$\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,a[2010],res,nex[2010],las[2010];\nchar s[20];\nnamespace MCMF{\n\tconst int N=3000,M=2000000;\n\tint head[N],cnt,dis[N],fr[N],id[N],S,T,cost;\n\tstruct node{\n\t\tint to,next,val,cost;\n\t}edge[M];\n\tvoid ae(int u,int v,int w,int c){\n\t\tedge[cnt].cost=c,edge[cnt].next=head[u],edge[cnt].to=v,edge[cnt].val=w,head[u]=cnt++;\n\t\tedge[cnt].cost=-c,edge[cnt].next=head[v],edge[cnt].to=u,edge[cnt].val=0,head[v]=cnt++;\n\t}\n\tqueue<int>q;\n\tbool in[N];\n\tbool SPFA(){\n\t\tmemset(dis,0x3f,sizeof(dis)),dis[S]=0,q.push(S),in[S]=true;\n\t\twhile(!q.empty()){\n\t\t\tint x=q.front();q.pop(),in[x]=false;\n\t//\t\tprintf(\"%d\\n\",x);\n\t\t\tfor(int i=head[x];i!=-1;i=edge[i].next){\n\t\t\t\tif(!edge[i].val)continue;\n\t\t\t\tif(dis[edge[i].to]>dis[x]+edge[i].cost){\n\t\t\t\t\tdis[edge[i].to]=dis[x]+edge[i].cost,fr[edge[i].to]=x,id[edge[i].to]=i;\n\t\t\t\t\tif(!in[edge[i].to])in[edge[i].to]=true,q.push(edge[i].to);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(dis[T]==dis[0])return false;\n\t\tint x=T,mn=0x3f3f3f3f;\n\t\twhile(x!=S)mn=min(mn,edge[id[x]].val),x=fr[x];\n\t\tcost+=dis[T]*mn,x=T;\n\t\twhile(x!=S)edge[id[x]].val-=mn,edge[id[x]^1].val+=mn,x=fr[x];\n\t\treturn true;\n\t}\n}\nusing namespace MCMF;\nvector<int>v;\nint main(){\n\tscanf(\"%d%d\",&n,&m),memset(head,-1,sizeof(head)),S=2*m+1,T=2*m+2;\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%s\",s);\n\t\tfor(int j=0;j<n;j++)if(s[j]=='1')a[i]+=(1<<j),res++;\n\t\tae(S,i,1,__builtin_popcount(a[i])),ae(i+m,T,1,0),ae(i,T,1,1);\n\t}\n\tfor(int i=1;i<=m;i++)for(int j=1;j<=m;j++){\n\t\tif(i==j)continue;\n\t\tif((a[i]&a[j])==a[j])ae(j,m+i,1,-__builtin_popcount(a[j]));\n\t}\n\twhile(SPFA());\n\tfor(int i=1;i<=m;i++)for(int j=head[i];j!=-1;j=edge[j].next)if(!edge[j].val&&edge[j].to!=S&&edge[j].to!=T)nex[i]=edge[j].to-m,las[edge[j].to-m]=i;\n\tfor(int i=1;i<=m;i++){\n//\t\tprintf(\"%d %d\\n\",nex[i],las[i]);\n\t\tif(las[i])continue;\n\t\tfor(int j=i;j;j=nex[j])for(int k=0;k<n;k++)if((a[j]^a[las[j]])&(1<<k))v.push_back(k);\n\t\tv.push_back(-1);\n\t}\n\tprintf(\"%d\\n\",cost-1);\n\tv.pop_back();\n\tfor(auto i:v)putchar(i>=0?'0'+i:'R'),putchar(' ');putchar('\\n');\n\treturn 0;\n}\n```\n\n",
        "postTime": 1617615770,
        "uid": 123369,
        "name": "xtx1092515503",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1510B\u3010Button Lock\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5176\u5b9e\u4e0d\u9700\u8981\u679a\u4e3e\u5b50\u96c6\u5efa\u56fe\u554a\u2026\u2026~~\u4e3a\u4ec0\u4e48\u5b98\u65b9\u9898\u89e3\u4e5f\u662f\u8fd9\u4e2a\u554a\u2026\u2026~~\n\n\u6211\u5148\u8bf4\u8bf4\u6211\u4e00\u5f00\u59cb\u7684\u5047\u7684\u5efa\u56fe\uff1a\u628a\u6240\u670901\u4e32\u5f53\u6210\u666e\u901a\u70b9\uff0c\u5bf9\u6bcf\u4e2a\u5173\u952e\u72b6\u6001$i$\uff0c\u5411$T$\u8fde\u6d41\u91cf\u4e3a1\u8d39\u7528\u4e3a0\u7684\u8fb9\uff08\u8fd9\u6837\u662f\u4e3a\u4e86\u4fdd\u8bc1\u6700\u5927\u6d41\u7ecf\u8fc7\u4e86\u6240\u6709\u5173\u952e\u72b6\u6001\uff09\u3002\u5bf9\u4e8e\u6240\u6709\u7684$0...2^d-1$\uff0c\u679a\u4e3e\u81ea\u8eab\u4e3a0\u7684\u4f4d\uff0c\u628a\u8fd9\u4f4d\u586b\u62101\u540e\u8fde\u6d41\u91cf\u65e0\u9650\u8d39\u7528\u4e3a1\u7684\u8fb9\uff0c\u8868\u793a\u6309\u4e86\u4e00\u4f4d\u3002\u5e76\u4e14\u8ba9\u5b83\u4eec\u90fd\u54110\u8fde\u6d41\u91cf\u65e0\u9650\u8d39\u7528\u4e3a1\u7684\u8fb9\uff0c\u8868\u793a\u6309\u4e86Reset\u3002\u6700\u540e\u8ba9$S$\u54110\u8fde\u6d41\u91cf\u65e0\u9650\u7684\u8fb9\uff0c\u8868\u793a\u521d\u59cb\u72b6\u6001\u3002\n\n\u7136\u540e\u8fd9\u6837\u5efa\u56fe\u540e\u4f60\u53d1\u73b0\u8fde\u6837\u4f8b\u90fd\u8fc7\u4e0d\u53bb\u3002\u56e0\u4e3a\u6211\u4eec\u628a\u5173\u952e\u72b6\u6001\u5411$T$\u8fde\u4e86\u8fb9\uff0c\u7b2c\u4e00\u6b21\u5230\u8fbe\u8fd9\u4e2a\u5173\u952e\u72b6\u6001\u540e\uff0c\u6d41\u5c31\u4f1a\u6d41\u5230$T$\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u6211\u4eec\u8fd8\u662f\u53ef\u4ee5\u5728\u8fd9\u4e2a\u5173\u952e\u72b6\u6001\u57fa\u7840\u4e0a\u7ee7\u7eed\u8fdb\u884c\u64cd\u4f5c\u7684\uff0c\u5c31\u53ea\u80fd\u4ece$S$\u91cd\u65b0\u5f15\u4e00\u4e2a\u6d41\u6d41\u5230\u8fd9\uff0c\u4f1a\u4ea7\u751f\u989d\u5916\u7684\u8d39\u7528\u3002\n\n\u4e3a\u4e86\u89e3\u51b3\u4e0a\u9762\u7684\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u53d1\u73b0\u4e24\u4e2a\u6bd4\u8f83\u663e\u7136\u7684\u6027\u8d28\uff1a\n\n**1.\u6240\u6709\u5173\u952e\u72b6\u6001\u4e00\u5b9a\u90fd\u80fd\u88ab\u5230\u8fbe\u3002**\n\n**2.Reset\u4e00\u5b9a\u662f\u5728\u7b2c\u4e00\u6b21\u5230\u8fbe\u67d0\u4e2a\u5173\u952e\u72b6\u6001\u540e\u6309\u7684\u3002**\n\n\u5173\u952e\u72b6\u6001\u5fc5\u987b\u8981\u5411$T$\u8fde\u8fb9\uff0c\u90a3\u4e48\u8be5\u5982\u4f55\u89e3\u51b3\u201c\u7ee7\u7eed\u64cd\u4f5c\u201d\u7684\u95ee\u9898\u5462\uff1f\u6839\u636e\u6027\u8d281\uff0c\u53cd\u6b63\u6211\u8fdf\u65e9\u90fd\u8981\u5230\u8fbe\u67d0\u4e2a\u5173\u952e\u72b6\u6001\uff0c\u90a3\u4e48\u6211\u53ef\u4ee5\u628a\u7b2c\u4e00\u6b21\u5230\u8fbe\u5173\u952e\u72b6\u6001\u4e4b\u540e\u7684\u7ee7\u7eed\u64cd\u4f5c\uff0c\u89c6\u4f5c**\u4e0e\u5176\u65e0\u5173**\u7684\u4e00\u4e2a\u65b0\u7684\u5f00\u59cb\u3002\u5177\u4f53\u70b9\u8bf4\uff0c\u5c31\u662f\u6211\u5bf9\u6bcf\u4e2a\u5173\u952e\u72b6\u6001$i$\u90fd\u5efa\u7acb\u4e00\u4e2a\u526f\u672c$i'$\uff0c\u8ba9\u5b83\u8fde\u548c$i$\u4e00\u6837\u7684\u51fa\u8fb9\uff08\u9664\u4e86$T$\u4ee5\u5916\uff09\uff0c\u8ba9$S$\u76f4\u63a5\u5411$i'$\u8fde\u6d41\u91cf\u4e3a1\uff08\u56e0\u4e3a\u8fd9\u4ec5\u7528\u4e8e\u7b2c\u4e00\u6b21\u5230\u8fbe\u8be5\u5173\u952e\u72b6\u6001\uff09\u8d39\u7528\u4e3a0\u7684\u8fb9\u3002\u8fd9\u6837\uff0c$i'$\u662f\u4e0d\u662f\u88ab\u6d41\uff0c\u5c31\u548c$i$\u662f\u4e0d\u662f\u88ab\u5230\u8fbe\u8fc7\u6ca1\u6709\u4efb\u4f55\u76f4\u63a5\u5173\u7cfb\u4e86\uff0c\u56e0\u4e3a$i$\u4e00\u5b9a\u4f1a\u88ab\u5230\u8fbe\u8fc7\u3002\n\n\u81f3\u4e8eReset\u7684\u95ee\u9898\u53ef\u4ee5\u91c7\u7528\u7c7b\u4f3c\u7684\u89e3\u51b3\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5b83\u548c\u526f\u672c\u70b9\u4e00\u6837\uff0c\u90fd\u662f\u5728\u7b2c\u4e00\u6b21\u5230\u8fbe\u67d0\u4e2a\u5173\u952e\u72b6\u6001\u540e\u7684\u3002\u6211\u8ba9$S$\u54110\u8fde\u4e24\u6761\u8fb9\uff0c\u4e00\u6761\u6d41\u91cf\u4e3a1\u8d39\u7528\u4e3a0\uff0c\u8868\u793a\u6700\u521d\u7684\u72b6\u6001\uff0c\u4e00\u6761\u6d41\u91cf\u65e0\u9650\u8d39\u7528\u4e3a1\uff0c\u8868\u793a\u518d\u6b21\u4ece0\u5f00\u59cb\u9700\u8981\u6309Reset\u3002\n\n\u4e8e\u662f\u8fd9\u6837\u5efa\u7684\u56fe\u7684\u70b9\u6570\u662f$O(2^d)$\uff0c\u8fb9\u6570$O(d2^d)$\u3002\n\n\u81f3\u4e8e\u65b9\u6848\u7684\u6784\u9020\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6b8b\u91cf\u7f51\u7edc\uff0c\u63a8\u65ad\u51fa\u5bf9\u4e8e\u54ea\u4e2a01\u4e32\u6309\u4e86\u54ea\u4e00\u4f4d\uff0c\u53ef\u4ee5\u5efa\u4e00\u4e2a\u65b0\u7684\u666e\u901a\u6709\u5411\u56fe$G$\uff0c\u5728$G$\u4e2d\u4e92\u76f8\u8fde\u8fb9\u8868\u793a01\u4e32\u4e4b\u95f4\u7684\u8f6c\u79fb\u3002\u800cReset\uff0c\u6839\u636e\u6027\u8d282\uff0c\u5982\u679c\u67d0\u4e2a\u5173\u952e\u72b6\u6001\u7684\u526f\u672c\u70b9\u672a\u88ab\u7ecf\u8fc7\uff0c\u90a3\u4e48\u6211\u4eec\u5728\u7b2c\u4e00\u6b21\u5230\u8fbe\u8fd9\u4e2a\u5173\u952e\u72b6\u6001\u540e\u4e00\u5b9a\u6ca1\u6709\u7ee7\u7eed\u8fdb\u884c\u64cd\u4f5c\u3002\u8fd9\u5c31\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\u2460\u5b83\u662f\u7ec8\u6b62\u72b6\u6001\uff0c\u8fd9\u4ec5\u6709\u4e00\u4e2a\u3002\u2461\u5b83\u6309\u4e86Reset\u3002\u90a3\u4e48\u6211\u4eec\u4e0d\u59a8\u5047\u8bbe\u5b83\u4eec\u90fd\u662f\u2461\uff0c\u8ba9\u5b83\u4eec\u54110\u8fde\u8868\u793aReset\u7684\u8fb9\u3002\u7136\u540e\u5bf9$G$\u6c42\u4e00\u6761\u4ece0\u5f00\u59cb\u7684\u6b27\u62c9\u8def\u5373\u53ef\uff0c\u663e\u7136\uff0c\u6700\u540e\u7ecf\u8fc7\u7684\u4e00\u6761\u8fb9\u4e00\u5b9a\u662fReset\u8fb9\uff0c\u8fd9\u662f\u591a\u8d70\u7684\uff0c\u5220\u6389\u5373\u53ef\u3002\n\ncode:\n\n```cpp\n#pragma GCC optimize(2)\n#pragma GCC optimize(3)\n#pragma GCC optimize(\"Ofast\")\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<vector>\n#define N 2100\nusing namespace std;\nnamespace ywy{\n\ttypedef struct _b{\n\t\tint dest;int nxt;int len;int c;\n\t}bian;bian memchi[100000];\n\tint gn=2,heads[N],mincol[N],bv[N],que[100000],dis[N],gj[N],pre[N];\n\tinline void add(int s,int t,int l,int c){\n\t\tmemchi[gn].dest=t;memchi[gn].len=l;memchi[gn].c=c;memchi[gn].nxt=heads[s];heads[s]=gn;gn++;\t\n\t}\n\tinline int spfa(int s,int t){\n\t\tmemset(dis,0x3f,sizeof(dis));\n\t\tint head=0,tail=1;\n\t\tmincol[que[0]=s]=1234567890;\n\t\tdis[s]=0;\n\t\twhile(head<tail){\n\t\t\tint me=que[head++]; bv[me]=0;\n\t\t\tfor(int i=heads[me];i;i=memchi[i].nxt){\n\t\t\t\tif(!memchi[i].c)continue;\n\t\t\t\tif(dis[me]+memchi[i].len<dis[memchi[i].dest]){\n\t\t\t\t\tdis[memchi[i].dest]=dis[me]+memchi[i].len;\n\t\t\t\t\tpre[memchi[i].dest]=i;\n\t\t\t\t\tmincol[memchi[i].dest]=min(mincol[me],memchi[i].c);\n\t\t\t\t\tif(!bv[memchi[i].dest])bv[que[tail++]=memchi[i].dest]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(dis[t]==dis[0]) return(dis[0]);\n\t\tint ans=dis[t]*mincol[t],cur=t;\n\t\twhile(cur!=s){\n\t\t\tint me=pre[cur];memchi[me].c-=mincol[t];memchi[me^1].c+=mincol[t];cur=memchi[me^1].dest;\n\t\t}\n\t\treturn ans;\n\t}\n\tnamespace euler{\n\t\ttypedef struct _b{\n\t\t\tint dest;int nxt;char c;int vis;\n\t\t}bian;bian memchi[100001];int gn=1,heads[N];\n\t\tinline void add(int s,int t,char c){\n\t\t\tmemchi[gn].dest=t;memchi[gn].c=c;memchi[gn].nxt=heads[s];heads[s]=gn;gn++;\t\n\t\t}\n\t\tvoid solve(int pt,vector<char> &vec){\n\t\t\tfor(int i=heads[pt];i;i=memchi[i].nxt){\n\t\t\t\tif(memchi[i].vis) continue;\n\t\t\t\tmemchi[i].vis=1;\n\t\t\t\tsolve(memchi[i].dest,vec);\n\t\t\t\tvec.push_back(memchi[i].c);\t\n\t\t\t}\n\t\t}\n\t}\n\tvoid ywymain(){\n\t\tint d,n; cin>>d>>n;\n\t\tint cnt=0;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tchar str[12]; cin>>str;\n\t\t\tint x=0;\n\t\t\tfor(int j=0;j<d;j++)x=x*2+str[j]-'0';\n\t\t\tif(!x)continue;\n\t\t\tgj[x]=1; cnt++;\n\t\t}\n\t\tif(!cnt){\n\t\t\tcout<<0<<endl; return;\t\n\t\t}\n\t\tint s=(1<<d)*2+1,t=s+1;\n\t\tadd(s,1,0,1); add(1,s,0,0);\n\t\tadd(s,1,1,1234567890); add(1,s,-1,0);\n\t\tfor(int i=0;i<(1<<d);i++){\n\t\t\tif(gj[i]){\n\t\t\t\tadd(s,i+1,0,1); add(i+1,s,0,0);\n\t\t\t\tadd(i+(1<<d)+1,t,0,1); add(t,i+(1<<d)+1,0,0);\n\t\t\t}\t\n\t\t\tfor(int j=0;j<d;j++){\n\t\t\t\tif(!(i&(1<<j))){\n\t\t\t\t\tadd(i+1,i+(1<<j)+(1<<d)+1,1,1234567890);\n\t\t\t\t\tadd(i+(1<<j)+(1<<d)+1,i+1,-1,0);\n\t\t\t\t\tadd(i+(1<<d)+1,i+(1<<j)+(1<<d)+1,1,1234567890);\n\t\t\t\t\tadd(i+(1<<j)+(1<<d)+1,i+(1<<d)+1,-1,0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint ans=0;\n\t\twhile(1){\n\t\t\tint x=spfa(s,t);\n\t\t\tif(x==0x3f3f3f3f)break;\n\t\t\tans+=x;\t\n\t\t}\n\t\tfor(int i=0;i<(1<<d);i++){\n\t\t\tif(gj[i]){\n\t\t\t\tfor(int j=heads[i+1];j;j=memchi[j].nxt){\n\t\t\t\t\tif(memchi[j].dest==s&&!memchi[j].c){\n\t\t\t\t\t\teuler::add(i,0,'R'); break;\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int j=heads[i+1];j;j=memchi[j].nxt){\n\t\t\t\tif((j&1)||memchi[j].dest==t||memchi[j].dest==s) continue;\n\t\t\t\tchar op;\n\t\t\t\tfor(int k=0;k<d;k++){\n\t\t\t\t\tif(!(i&(1<<k))&&((memchi[j].dest-(1<<d)-1)&(1<<k))) op=d-k-1+'0';\t\n\t\t\t\t}\n\t\t\t\tfor(int k=0;k<memchi[j^1].c;k++) euler::add(i,memchi[j].dest-(1<<d)-1,op);\t\n\t\t\t}\n\t\t\tfor(int j=heads[i+(1<<d)+1];j;j=memchi[j].nxt){\n\t\t\t\tif((j&1)||memchi[j].dest==t||memchi[j].dest==s) continue;\n\t\t\t\tchar op;\n\t\t\t\tfor(int k=0;k<d;k++){\n\t\t\t\t\tif(!(i&(1<<k))&&((memchi[j].dest-(1<<d)-1)&(1<<k))) op=d-k-1+'0';\t\n\t\t\t\t}\n\t\t\t\tfor(int k=0;k<memchi[j^1].c;k++) euler::add(i,memchi[j].dest-(1<<d)-1,op);\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tvector<char> vec;\n\t\teuler::solve(0,vec);\n\t\tcout<<vec.size()-1<<endl;\n\t\tfor(int i=(int)vec.size()-1;i>=1;i--) cout<<vec[i]<<\" \";\n\t}\n}\nint main(){\n\tywy::ywymain();\n\treturn 0;\t\n}\n```",
        "postTime": 1617798609,
        "uid": 125124,
        "name": "ywy_c_asm",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1510B \u3010Button Lock\u3011"
    }
]