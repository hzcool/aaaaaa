[
    {
        "content": "\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u9053\u9898\u7684\u6811\u4e0a\u7ed3\u70b9\u6570\u975e\u5e38\u591a\uff08$2^k-1$ \u4e2a\uff09\uff0c\u4f46\u662f\u5173\u952e\u7ed3\u70b9\u6570\u5374\u5f88\u5c11\uff08$2\\times 10^3$ \u4e2a\uff09\uff0c\u4e0d\u96be\u60f3\u5230\u53ef\u4ee5\u5efa\u7acb\u4e00\u68f5\u865a\u6811\u8dd1 dp\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u5173\u952e\u7ed3\u70b9\uff0c\u5b83\u53ea\u4f1a\u5f71\u54cd\u4ece\u6839\u7ed3\u70b9\u5230\u5b83\u7684\u94fe\u3002\u6211\u4eec\u628a\u6bcf\u4e2a\u4ece\u6839\u7ed3\u70b9\u5230\u5173\u952e\u7ed3\u70b9\u7684\u94fe\u63d0\u53d6\u51fa\u6765\uff0c\u5c31\u5efa\u7acb\u4e86\u4e00\u68f5\u865a\u6811\uff0c\u8fd9\u68f5\u865a\u6811\u7684\u603b\u7ed3\u70b9\u6570\u7ea6\u4e3a $mk$\uff0c\u5927\u6982\u5728 $10^5$ \u8303\u56f4\u3002\n\n\u8bbe $f(i,j)$ \u8868\u793a\u5728\u7b2c $i$ \u4e2a\u7ed3\u70b9\uff0c\u989c\u8272\u4e3a $j$ \u7684\u65b9\u6848\u6570\uff0c\u5219\u6709\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$$f(i,j)=\\prod_{k\\in \\text{son}(i),l}f(k,l)$$\n\n\u5176\u4e2d\u989c\u8272 $j$ \u548c\u989c\u8272 $l$ \u53ef\u4ee5\u653e\u5728\u76f8\u90bb\u7ed3\u70b9\u3002\u5bf9\u4e8e\u5173\u952e\u7ed3\u70b9\uff0c\u7279\u5224\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u4e0d\u5728\u865a\u6811\u4e0a\u7684\u7ed3\u70b9\uff0c\u8bbe\u4ed6\u4eec\u5171\u6709 $s$ \u4e2a\uff0c\u5b83\u4eec\u5bf9\u7b54\u6848\u9020\u6210\u7684\u8d21\u732e\u4e3a $4^s$ \u4e2a\uff0c\u4e0e\u865a\u6811\u4e0a\u7684\u7b54\u6848\u4e58\u8d77\u6765\u5c31\u884c\u4e86\u3002\n\n\uff08\u8d5b\u65f6\u4ee3\u7801\uff0c\u9a6c\u8702\u53ef\u80fd\u6709\u4e9b\u6df7\u4e71\uff09\n\n```cpp\n#include<bits/stdc++.h>\n#define For(i,a,b) for(int i=(a);i<=(b);++i)\n#define int long long\nusing namespace std;\ntypedef pair<int,int> Pair;\nconst int Maxn=1e6,Mod=1e9+7;\n\ninline int read()\n{\n    int x=0,f=1;\n    char ch=getchar();\n    while(ch<'0' || ch>'9')\n    {\n        if(ch=='-') f=-1;\n        ch=getchar();\n    }\n    while(ch>='0' && ch<='9')\n    {\n        x=x*10+ch-'0';\n        ch=getchar();\n    }\n    return x*f;\n}\n\nint n,k,s,col[26];\nint f[Maxn+5][7],vis[Maxn+5],ch[Maxn+5][2];\nvector<Pair> v;\nvector<int> q;\n\n\ninline void Init()\n{\n    col['w'-'a']=1;\n    col['y'-'a']=2;\n    col['g'-'a']=3;\n    col['b'-'a']=4;\n    col['r'-'a']=5;\n    col['o'-'a']=6;\n}\ninline int Pow(int x,int y)\n{\n    int res=1;\n    while(y)\n    {\n        if(y&1) res=1ll*res*x%Mod;\n        x=1ll*x*x%Mod,y>>=1;\n    }\n    return res;\n}\ninline int Get(int x) {return lower_bound(q.begin(),q.end(),x)-q.begin()+1;}\n\ninline void dfs(int x) // \u52a8\u6001\u89c4\u5212\n{\n    if(!ch[x][0]) {f[x][vis[x]]=1; return;}\n    if(ch[x][0]) dfs(ch[x][0]);\n    if(ch[x][1]) dfs(ch[x][1]);\n    For(i,1,6)\n    {\n        if(vis[x]>0 && i!=vis[x]) continue;\n        int a1=0,a2=0;\n        if(ch[x][0])\n            For(j,1,6) if((i+1)/2!=(j+1)/2) a1=(a1+f[ch[x][0]][j])%Mod;\n        if(ch[x][1])\n            For(j,1,6) if((i+1)/2!=(j+1)/2) a2=(a2+f[ch[x][1]][j])%Mod;\n        if(!ch[x][1]) f[x][i]=a1;\n        else f[x][i]=a1*a2%Mod;\n    }\n}\n\nsigned main()\n{\n    Init();\n    cin>>n>>k; s=(1ll<<n)-1ll;\n    For(i,1,k)\n    {\n        int a; string b;\n        cin>>a>>b;\n        v.push_back(make_pair(a,col[b[0]-'a']));\n    }\n    q.push_back(1); // \u5efa\u7acb\u865a\u6811\n    for(auto i:v)\n    {\n        int a=i.first;\n        while(a) q.push_back(a),a/=2;\n    }\n    sort(q.begin(),q.end()),q.erase(unique(q.begin(),q.end()),q.end());\n    for(auto i:v)\n    {\n        int a=i.first,b=i.second,ma=a;\n        while(1)\n        {\n            int c=Get(a),d=Get(a/2);\n            if(vis[c]!=0) break;\n            vis[c]=-1;\n            if(a==1) break;\n            if(!ch[d][0]) ch[d][0]=c;\n            else ch[d][1]=c;\n            a/=2;\n        }\n        vis[Get(ma)]=b;\n    }\n    dfs(1);\n    int all=0;\n    For(i,1,6) all=(all+f[1][i])%Mod;\n    int siz=q.size(); // \u7edf\u8ba1\u975e\u865a\u6811\u7ed3\u70b9\u8d21\u732e\n    siz=s-siz;\n    cout<<all*Pow(4,siz)%Mod<<endl;\n    return 0;\n}\n```",
        "postTime": 1633824401,
        "uid": 148913,
        "name": "Graphcity",
        "ccfLevel": 8,
        "title": "\u9898\u89e3\u3010CF1594E2\u3011Rubik's Cube Coloring (hard version)"
    },
    {
        "content": "~~\u505a\u51fa\u6765\u4e86\u4f46\u662f\u6ca1\u4ea4~~\n\n--------------\n\n### \u9898\u610f\n\n\n\u767d\u8272\u8282\u70b9\u4e0d\u80fd\u4e0e\u767d\u8272\u548c\u9ec4\u8272\u8282\u70b9\u76f8\u90bb\uff1b\n\n\u9ec4\u8272\u8282\u70b9\u4e0d\u80fd\u4e0e\u767d\u8272\u548c\u9ec4\u8272\u8282\u70b9\u76f8\u90bb\uff1b\n\n\u7eff\u8272\u8282\u70b9\u4e0d\u80fd\u4e0e\u7eff\u8272\u548c\u84dd\u8272\u8282\u70b9\u76f8\u90bb\uff1b\n\n\u84dd\u8272\u8282\u70b9\u4e0d\u80fd\u4e0e\u7eff\u8272\u548c\u84dd\u8272\u8282\u70b9\u76f8\u90bb\uff1b\n\n\u7ea2\u8272\u8282\u70b9\u4e0d\u80fd\u4e0e\u7ea2\u8272\u548c\u6a59\u8272\u8282\u70b9\u76f8\u90bb\uff1b\n\n\u6a59\u8272\u8282\u70b9\u4e0d\u80fd\u4e0e\u7ea2\u8272\u548c\u6a59\u8272\u8282\u70b9\u76f8\u90bb\uff1b\n\n------\n\n\n\u636e\u6b64\u7ed9\u4e00\u4e2a\u9ad8\u4e3a $n$($n\\leq60$) \u7684**\u5b8c\u5168\u4e8c\u53c9\u6811**\u67d3\u8272\u3002\u6c42\u65b9\u6848\u6570:\n\n\u4e0d\u96be\u63a8\u51fa\u516c\u5f0f\uff1a\u8bbe$fi$\u8868\u793a\u4ee5\u9ad8\u5ea6\u4e3ai\u7684\u6811\uff0c\u786e\u5b9a\u6839\u8282\u70b9\u989c\u8272\uff0c\u6709\u591a\u5c11\u65b9\u6848\uff0c  $f_i=f_i^2*16$ (\u6839\u8282\u70b9\u786e\u5b9a\uff0c \u6bcf\u4e2a\u5b50\u8282\u70b9\u67094\u79cd\u53ef\u884c\u989c\u8272)\n\nE2\u5728E1\u7684\u57fa\u7840\u4e0a\uff0c**\u6709M($m\\leq2000$)\u4e2a\u70b9\u7684\u7684\u989c\u8272\u5df2\u7ecf\u7ed9\u51fa**\uff0c\u6c42\u7ed9\u5176\u4ed6\u70b9\u67d3\u8272\u7684\u65b9\u6848\u6570\u3002\n\n--------------\n\n### \u9898\u89e3\n\n\u6211\u4eec\u5148\u628aE1\u7684 $f_{i, j}$ \u6570\u7ec4\u9884\u5904\u7406\u51fa\u6765(\u9ad8\u5ea6\u4e3ai\u7684\u6811\u6ca1\u6709\u9884\u7ed9\u5b9a\u989c\u8272\uff0c\u4e14\u6839\u8282\u70b9\u989c\u8272\u4e3aj\u7684\u65b9\u6848\u6570)\n\n\u8003\u8651\u76f4\u63a5dp\uff1a\u5982\u679c\u8fd9\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u4e2d\u6ca1\u6709\u9884\u5b9a\u4e49\u8282\u70b9\uff0c\u76f4\u63a5\u8fd4\u56def\u6570\u7ec4\uff0c\u5426\u5219\u76f4\u63a5\u66b4\u529bdp\n\n\u6b64\u65f6\u9700\u8981\u5904\u7406\u7684\u8282\u70b9\u4e2a\u6570\u4e3a\u5b50\u6811\u4e2d\u5305\u542b\u9884\u5b9a\u4e49\u8282\u70b9\u7684\u8282\u70b9\u4e2a\u6570\uff0c\u53ef\u4ee5\u8bc1\u660e\u8fd9\u6837\u7684\u70b9\u6570\u91cf\u4e3a $O(nm)$ (\u6bcf\u4e2a\u9884\u5b9a\u4e49\u70b9\u90fd\u5728\u53f6\u5b50\u8282\u70b9\u6700\u5927)\n\n\u73b0\u5728\u7684\u95ee\u9898\u662f\u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u70b9\u662f\u5426\u5305\u542b\u9884\u5b9a\u4e49\u8282\u70b9\u5462\uff1a\n\u4e00\u79cd\u66b4\u529b\u7684\u505a\u6cd5\u662f\u76f4\u63a5\u679a\u4e3e\u6240\u6709\u7ed9\u51fa\u7684\u70b9\uff0c\u6c42\u51fa\u9ad8\u5ea6\u8fdb\u884c\u5224\u65ad\u3002~~\u4f46\u662f\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u591a\u4e86nm\u7684\u5e38\u6570~~\n\u8003\u8651\u53cd\u8fc7\u6765\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u9884\u5b9a\u4e49\u70b9\uff0c\u628a\u5b83\u7684\u6240\u6709\u7956\u5148\u7684\u6807\u8bb0\u4e00\u4e0b\uff0c\u4e0d\u96be\u60f3\u5230\uff0c\u8ba9\u8282\u70b9\u7f16\u53f7\u6bcf\u6b21\u96642\u5c31\u884c\u3002\u9700\u8981\u4e00\u4e2aset\u7ef4\u62a4\uff0c\u540c\u65f6\u8fd8\u9700\u8981\u4e00\u4e2amap\u6765\u8bb0\u5f55\u989c\u8272\u3002\n\n\u603b\u590d\u6742\u5ea6 $O(nm\\log(nm))$ \u4ee5\u53ca\u4e00\u4e2a\u8f83\u5927\u7684\u5e38\u6570\n\n-----------\n### \u5b9e\u73b0\n~~\u8d5b\u65f6\u4ee3\u7801\u8fc7\u4e11\u62b1\u6b49~~\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <vector>\n#include <string>\n#include <cassert>\n#include <cstdlib>\n#include <map>\n#include <set>\n#define int long long\nusing namespace std;\n\nint read(){\n\tint num=0, flag=1; char c=getchar();\n\twhile(!isdigit(c) && c!='-') c=getchar();\n\tif(c=='-') flag=-1, c=getchar();\n\twhile(isdigit(c)) num=1ll*num*10+c-'0', c=getchar();\n\treturn num*flag; \n}\n\nint readc(){\n\tchar c=getchar();\n\twhile(c<'a' || c>'z') c=getchar();\n\treturn c;\n}\n\nvoid reads(){\n\tchar c=getchar();\n\twhile(c<'a' || c>'z') c=getchar();\n\twhile(c>='a' && c<='z') c=getchar();\n}\n\nint checkColor(int a, int b){\n\tif(a > b) swap(a, b);\n\tif(a == b) return 1;\n\tif(a==4 && b==5) return 1;\n\tif(a==2 && b==3) return 1;\n\tif(a==0 && b==1) return 1;\n\treturn 0;\n}\n\nconst int N = 3055, M = 5e6;\nconst int mod = 1e9+7;\nint T, n, m;\nint r[M][6], sz=0;\nset<int> st;\nmap<int, int> col;\n\nint get(char s){\n\tif(s == 'w') return 0;\n\tif(s == 'y') return 1;\n\tif(s == 'g') return 2;\n\tif(s == 'b') return 3;\n\tif(s == 'r') return 4;\n\treturn 5; \n}\n\nint p[N], c;\nint res[N][6];\n\nint getlas(int id){\n\tint num = 0;\n\twhile(id) num++, id>>=1;\n\treturn n-num+1;\n}\n\nint cnt = 0;\n\nint check(int id){\n\treturn st.count(id);\n}\n\nint dp(int id, int h) {\n\tif(h == 1){\n\t\t\n\t\tint lres = (++sz)%M;\n\t\tif(col.count(id)) {\n\t\t\tfor(int i=0; i<6; i++) r[lres][i] = 0;\n\t\t\tr[lres][col[id]] = 1;\n\t\t\treturn lres;\n\t\t}else{\n\t\t\tfor(int i=0; i<6; i++) r[lres][i] = 1;\n\t\t\treturn lres;\n\t\t}\n\t}\n\t\n\tif(check(id)){\n\t\tint r1=dp(id*2, h-1), r2=dp(id*2+1, h-1);\n\t\t\n\t\tint lres = (++sz)%M;\n\t\tif(col.count(id)) {\n\t\t\tint i = col[id];\n\t\t\tfor(int j=0; j<6; j++) r[lres][j]=0;\n\t\t\t\n\t\t\tfor(int j=0; j<6; j++){\n\t\t\t\t\tfor(int k=0; k<6; k++){\n\t\t\t\t\t\tif(checkColor(i, j) || checkColor(i, k)) continue;\n\t\t\t\t\t\tr[lres][i] += r[r1][j]*r[r2][k]%mod;\n\t\t\t\t\t\tr[lres][i] %= mod;\n\t\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn lres;\n\t\t}else{\n\t\t\tfor(int j=0; j<6; j++) r[lres][j]=0;\n\t\t\tfor(int i=0; i<6; i++){\n\t\t\t\tfor(int j=0; j<6; j++){\n\t\t\t\t\tfor(int k=0; k<6; k++){\n\t\t\t\t\t\tif(checkColor(i, j) || checkColor(i, k)) continue;\n\t\t\t\t\t\tr[lres][i] += r[r1][j]*r[r2][k]%mod;\n\t\t\t\t\t\tr[lres][i] %= mod;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn lres;\n\t\t}\n\t\t\n\t}else{\n\t\tint lres = (++sz)%M;\n\t\tfor(int i=0; i<6; i++){\n\t\t\tr[lres][i] = res[h][i];\n\t\t}\n\t\treturn lres;\n\t}\n}\n\nsigned main(){\n\tn=read(), m=read();\n\tfor(int i=1; i<=m; i++){\n\t\tp[i]=read();\n\t\tc=get(readc()); reads();\n\t\t\n\t\tint cur = p[i];\n\t\twhile(cur) {\n\t\t\tif(!st.count(cur)) st.insert(cur);\n\t\t\tcur /= 2; \n\t\t} \n\t\tcol[p[i]] = c;\n\t}\n\t\n\tint num = 1;\n\tfor(int i=1; i<=n; i++){\n\t\tfor(int j=0; j<6; j++) res[i][j] = num;\n\t\tnum = (num*num%mod*16%mod); \n\t}\n\t\n\tint x = dp(1, n);\n\tint ans = 0;\n\tfor(int i=0; i<6; i++) ans = (ans + r[x][i]) % mod;\n\tcout << ans << endl;\n\t\n\treturn 0;\n}\n\n```",
        "postTime": 1633745677,
        "uid": 159375,
        "name": "ltdj",
        "ccfLevel": 7,
        "title": "CF1594E2"
    },
    {
        "content": "# CF1594E1&E2 \u9898\u89e3\n\n\u4e00\u9053\u6811\u4e0a\u7684DP\u8ba1\u6570\u9898\u3002\n\n\u5148\u8003\u8651 Easy Version \uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u6df1\u5ea6\u76f8\u540c\u7684\u6ee1\u4e8c\u53c9\u6811\u672c\u8d28\u7b49\u4ef7\uff0c\u6545\u6211\u4eec\u53ef\u4ee5\u663e\u7136\u7684\u5199\u51fa\u4e00\u4e2aDP\u5f0f\uff1a\n\n\u8bb0 $dp_{i,col}$ \u4ee3\u8868\u6df1\u5ea6\u4e3a $i$ \u7684\u6ee1\u4e8c\u53c9\u6811\uff0c\u6839\u8282\u70b9\u989c\u8272\u4e3a $col$ \u7684\u65b9\u6848\u6570\uff0c\u5219\u6709\uff1a\n\n$dp_{i,col} = dp_{i-1,c1} \\times dp_{i-1,c2}$ \uff0c\u8f6c\u79fb\u524d\u63d0\u662f\u989c\u8272 $col,c1$ \u4ee5\u53ca $col,c2$ \u5206\u522b\u5728\u9b54\u65b9\u4e2d\u76f8\u90bb\u3002\n\n\u8fd9\u4e2aDP\u5f0f\u8db3\u4ee5\u901a\u8fc7 Easy Version \uff0c\u4f46\u5728 Hard Version \u4e2d\uff0c\n\n\u8fd9\u4e2a\u5f0f\u5b50\u65e0\u6cd5\u5c06\u4e8b\u5148\u5df2\u9009\u989c\u8272\u7684\u8282\u70b9\u8ba1\u7b97\u8fdb\u53bb\uff0c\u6545\u6211\u4eec\u5148\u8003\u8651\u4e00\u79cd\u66f4\u66b4\u529b\u7684DP\u65b9\u6cd5\uff0c\u5373\uff1a\n\n\u8bb0 $dp_{u,col}$ \uff0c\u4ee3\u8868\u4e8c\u53c9\u6811\u4e2d\u7b2c $u$ \u4e2a\u70b9\u67d3\u4e86\u989c\u8272 $col$ \uff0c\u8fd9\u68f5\u4ee5 $u$ \u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u7684\u65b9\u6848\u6570\uff0c\n\n\u5219\u8f6c\u79fb\u5f0f\u4e3a\uff1a$dp_{u,col} = dp_{ls(u),c1} \\times dp_{rs(u),c2}$ \uff0c\u8f6c\u79fb\u524d\u63d0\u662f $col,c1$ \u4ee5\u53ca $col,c2$ \u5206\u522b\u5728\u9b54\u65b9\u4e2d\u76f8\u90bb\u3002\n\n\u8fd9\u4e2aDP\u5f0f\u53ef\u4ee5\u901a\u8fc7\u9650\u5236\u8282\u70b9\u4e0a\u989c\u8272\u7684\u9009\u53d6\u6765\u8ba1\u7b97\u4e8b\u5148\u5df2\u9009\u989c\u8272\u7684\u8282\u70b9\uff0c\u4f46\u76f4\u63a5\u8fd9\u6837\u8ba1\u7b97\u4f1a\u7206\u590d\u6742\u5ea6\uff0c\n\n\u6545\u6211\u4eec\u9700\u8981\u4f18\u5316\u8fd9\u4e2a\u505a\u6cd5\u3002\n\n\u6211\u4eec\u6ce8\u610f\u5230\uff0c\u5728\u67d0\u4e00\u68f5\u5b50\u6811\u91cc\uff0c\u4e0d\u5b58\u5728\u67d0\u4e2a\u8282\u70b9\u4e8b\u5148\u5df2\u9009\u597d\u4e86\u989c\u8272\uff0c\n\n\u90a3\u4e48\u68f5\u5b50\u6811\u7684\u65b9\u6848\u6570\u5c31\u662f\u4e0a\u9762 Easy Version \u4e2d\u7684DP\u503c\u3002\n\n\u8fd9\u4e2a\u6709\u4ec0\u4e48\u7528\u5462\uff1f\u6211\u4eec\u6765\u8fdb\u4e00\u6b65\u63a2\u7a76 Easy Version \u91ccDP\u5f0f\u7684\u6027\u8d28\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4efb\u610f\u4e00\u4e2a\u989c\u8272\uff0c\u4e0e\u5176\u76f8\u90bb\u7684\u989c\u8272\u6070\u6709 $4$ \u79cd\uff0c\u6240\u4ee5\u4e0a\u9762DP\u72b6\u6001\u4e2d\uff0c\u4e0d\u540c\u7684\u989c\u8272\u5e76\u4e0d\u5f71\u54cdDP\u503c\u7684\u5927\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u6709\uff1a\n\n $\\large dp_{1,col}=1$ \uff0c\n\n$\\large dp_{i,col} =(4 \\times dp_{i-1,col})^2$ .\n\n\u4e24\u4e2a\u5f0f\u5b50\u3002\n\n\u6211\u4eec\u8bb0 $\\large F_i = dp_{i,col} $ \uff0c$\\large T_i = 4^{2^i-2}$ \uff0c\n\n\u5219\u6709\uff1a $\\large { {F_i} \\over {T_i} } = { {16(F_{i-1})^2} \\over {T_i} }$ .\n\n\u6211\u4eec\u53d1\u73b0\uff0c$\\large \\sqrt { {T_i} \\over {16} } = 4^{2^{i-1}-2} = T_{i-1}$ \uff0c\n\n\u5373\uff1a$\\large { {F_i} \\over {T_i} } = { {(F_{i-1})^2} \\over {(T_{i-1})^2} }$ .\n\n\u90a3\u6211\u4eec\u518d\u8bb0 $\\large P_i =  { {F_i} \\over {T_i} } $ \uff0c\u5219\u6211\u4eec\u6709\uff1a\n\n$\\large P_1 = 1$ \uff0c\n\n$\\large P_i = (P_{i-1})^2$ .\n\n\u4e24\u4e2a\u5f0f\u5b50\u3002\n\n\u663e\u7136\uff0c\u4e0a\u5f0f\u91cc\uff0c $P_i$ \u6052\u4e3a $1$ \uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5f97\u51fa\u4e86\uff1a $dp_{i,col}=F_i = T_i =4^{2^i-2} $ .\n\n\u6545 $dp_{i,col}$ \u7684\u503c\u5b9e\u9645\u4e0a\u7b49\u4e8e $4^{2^i-2}$ \uff0c\u800c\u4e00\u9897\u6ee1\u4e8c\u53c9\u6811\u7684\u65b9\u6848\u6570\uff0c\u5f53\u6839\u8282\u70b9\u989c\u8272\u786e\u5b9a\u540e\uff0c\u4e5f\u5c31\u662f $4^{2^i-2}$ \u79cd\u3002\n\n\u90a3\u4e48\uff0c\u73b0\u5728\u6211\u4eec\u8003\u8651\u8fd9\u4e2a\u503c\u7684\u53e6\u4e00\u79cd\u542b\u4e49\uff1a\u6211\u4eec\u53d1\u73b0\uff0c\u4e00\u68f5\u6df1\u5ea6\u4e3a $i$ \u7684\u6ee1\u4e8c\u53c9\u6811\u91cc\uff0c\u9664\u53bb\u6839\u8282\u70b9\uff0c\u5176\u4f59\n\n\u8282\u70b9\u8fd8\u6709 $2^i-2$ \u4e2a\uff0c\u800c\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u6070\u6709 $4$ \u79cd\u9009\u62e9\uff0c\u6545$dp_{i,col}$ \u7684\u503c\u7b49\u4e8e $4^{2^i-2}$ .\n\n\u6240\u4ee5\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9 $u$ \uff0c\u82e5\u5176\u5b50\u6811\u4e2d\u6ca1\u6709\u4e8b\u5148\u5df2\u9009\u989c\u8272\u7684\u8282\u70b9\uff0c\u5219\u5b83\u6070\u6709 $4$ \u79cd\u67d3\u8272\u65b9\u6848\uff0c\u8fd9\u4e2a\u503c\u662f\u56fa\u5b9a\n\n\u7684\uff0c\u90a3\u6211\u4eec\u5c31\u4e0d\u9700\u8981\u8003\u8651\u8fd9\u4e2a\u8282\u70b9\uff0c\u800c\u662f\u628a\u6700\u540e\u7684\u7b54\u6848\u4e58\u4e0a\u8fd9\u4e2a $4$ \u7684\u8d21\u732e\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u73b0\u5728\u9700\u8981\u8003\u8651\u7684\u70b9\uff0c\u90fd\u5fc5\u987b\u6ee1\u8db3\u4ee5\u4e0b\u9650\u5236\u6761\u4ef6\uff1a\n\n\u5bf9\u4e8e\u4e00\u4e2a\u8981\u8003\u8651\u7684\u70b9 $v$ \uff0c$v$ \u6240\u5728\u5b50\u6811\u4e2d\u5fc5\u987b\u542b\u6709\u81f3\u5c11\u4e00\u4e2a\u4e8b\u5148\u5df2\u9009\u989c\u8272\u7684\u8282\u70b9\u3002\n\n\u6211\u4eec\u63a5\u4e0b\u6765\u8ba1\u7b97\uff0c\u6709\u54ea\u4e9b\u8282\u70b9\u9700\u8981\u6211\u4eec\u8003\u8651\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u4e8b\u5148\u5df2\u9009\u989c\u8272\u7684\u8282\u70b9\uff0c\u5176\u5230\u6839\u7684\u8def\u5f84\u4e0a\u6240\u6709\u7684\u70b9\u90fd\u9700\u8981\u8003\u8651\uff1b\n\n\u800c\u4e0d\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\u7684\u70b9\uff0c\u5219\u4e00\u5b9a\u4e0d\u9700\u8981\u8003\u8651\u3002\u800c\u8fd9\u6837\u7684\u70b9\u6700\u591a\u6709 $nk$ \u4e2a\uff0c\u5373\u4e8c\u53c9\u6811\u7684\u6df1\u5ea6\u4e58\u4e0a\n\n\u4e8b\u5148\u5df2\u9009\u989c\u8272\u8282\u70b9\u7684\u6570\u91cf\u3002\n\n\u5e76\u4e14\uff0c\u6211\u4eec\u8bbe\u5305\u542b\u8fd9\u4e9b\u70b9\u7684\u70b9\u96c6\u4e3a $S$ \uff0c\u5219 $S$ \u4e2d\u4efb\u610f\u4e24\u70b9 $u,v$ \uff0c\u90fd\u53ef\u4ee5\u53ea\u8d70 $S$ \u4e2d\u7684\u70b9\u76f8\u4e92\u5230\u8fbe\u3002\n\n\u8fd9\u65f6\u6211\u4eec\u53d1\u73b0\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u8fd9\u4e9b\u70b9\u62ff\u51fa\u6765\u8dd1\u4e00\u6b21\u6811\u5f62DP\uff0c\u518d\u5c06\u6700\u540e\u7b54\u6848\u4e58\u4e0a $4^{2^k-1-|S|}$ \u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6\u4e3b\u8981\u4f53\u73b0\u5728\u7528map\u9884\u5904\u7406\u4e0a\uff0c\u662f $O(nklog(nk))$ \u7684\u3002\n\n**E1 code:**\n\n```\n#define int long long\n\nconst int N (104);\nconst int mod (1e9 + 7);\n\nint f[N][10];\n\nsigned main() {\n\trep (i, 1, 6) f[1][i] = 1ll;\n\trep (i, 2, 80) rep (j, 1, 6) {\n\t\tint det = 1;\n\t\tif (j % 2 == 0) det = -1;\n\t\trep (le, 1, 6) rep (ri, 1, 6) {\n\t\t\tif (le != j && le != j + det && ri != j && ri != j+det)\n\t\t\tf[i][j] = (f[i][j] + (f[i-1][le] * f[i-1][ri]) % mod) % mod;\n\t\t}\n\t}\n\tint x = read(), ans = 0;\n\trep (i, 1, 6) ans = (ans + f[x][i]) % mod;\n\tcout << ans;\n}\n```\n\n**E2 code:**\n\n\uff08\u53c2\u8003\u4e86CF\u5b98\u89e3\u7684\u4ee3\u7801\uff09\n\n```\n#define int long long\n\nconst int N (1e6 + 10);\nconst int mod (1e9 + 7);\n\ninline int ksm(int a, int b) {\n\tint res = 1ll;\n\twhile (b) {\n\t\tif (b & 1ll) res = 1ll * res * a % mod;\n\t\ta = 1ll * a * a % mod, b >>= 1ll;\n\t} return res;\n}\n\nint k,n;\nint tot;\nint col[N];\nint dp[N][6];\nvector < int > G[N];\nmap < int , int > buk, vl;\nint color[6][6] = { {1, 2, 4, 5}, {0, 2, 3, 5}, {0, 1, 3, 4},\n\t\t\t\t\t{1, 2, 4, 5}, {0, 2, 3, 5}, {0, 1, 3, 4} };\n\ninline int dfs(int u, int c) {\n\tif (col[u] != -1 && col[u] != c) return 0;\n\tif (dp[u][c] != -1) return dp[u][c];\n\tint res = 0, sum[2] = {0}, siz = G[u].size();\n\trep (i, 0, 3) rep (j, 0, siz - 1) \n\t  sum[j] += dfs(G[u][j], color[c][i]), sum[j] %= mod;\n\tif (G[u].empty()) sum[0] = sum[1] = 1;\n\tif ((int)(G[u].size()) == 1) sum[1] = 1;\n\treturn dp[u][c] = res = sum[0] * sum[1] % mod;\n}\n\nsigned main() {\n\tmemset(col, -1, sizeof(col)), memset(dp, -1, sizeof(dp));\n\tk = read(), n = read();\n\tint rem = (1ll << k) - 1; map < string , int > val ;\n\tval[\"white\"] = 0, val[\"yellow\"] = 3, val[\"green\"] = 4;\n\tval[\"blue\"] = 1, val[\"red\"] = 2, val[\"orange\"] = 5;\n\trep (i, 1, n) {\n\t\tint x = read(), u; string s; cin >> s, vl[x] = val[s], u = x;\n\t\twhile (u >= 1 && !buk.count(u)) buk[u] = tot++, rem --, u >>= 1ll;\n\t}\n\tmap < int , int > ::iterator p ;\n\tfor (p = buk.begin(); p != buk.end(); p++) {\n\t\tint F = p -> fi, S = p -> se;\n\t\tif (vl.count(F)) col[S] = vl[F];\n\t\tif (buk.count(F << 1ll)) G[S].pb(buk[F << 1ll]);\n\t\tif (buk.count(F << 1ll | 1ll)) G[S].pb(buk[F << 1ll | 1ll]);\n\t}\n\tint res = ksm(4ll, rem), sum = 0;\n\trep (c, 0, 5) sum += dfs(buk[1], c), sum %= mod;\n\tcout << res * sum % mod;\n\treturn 0;\n}\n```\n\n",
        "postTime": 1633768112,
        "uid": 100091,
        "name": "GaryH",
        "ccfLevel": 6,
        "title": "CF1594E2 \u9898\u89e3"
    },
    {
        "content": "\u4e0e E1 \u4e0d\u540c\u7684\u5730\u65b9\u662f E2 \u5148\u94a6\u5b9a\u4e86 $n$ \u4e2a\u7ed3\u70b9\u7684\u989c\u8272\uff0c\u7136\u540e\u7ed9\u5176\u4f59\u70b9\u67d3\u8272\uff0c\u95ee\u5408\u6cd5\u65b9\u6848\u6570\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u79f0\u4e00\u4e2a\u7ed3\u70b9\u4e3a\u5173\u952e\u70b9\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b83\u7684\u989c\u8272\u88ab\u94a6\u5b9a\u6216\u5b83\u662f\u67d0\u4e2a\u88ab\u94a6\u5b9a\u70b9\u7684\u7956\u5148\u3002\u7531 E1\uff0c\u4e0d\u96be\u53d1\u73b0\u975e\u5173\u952e\u70b9\u7684\u8d21\u732e\u662f\u5e73\u51e1\u7684 $4$\uff0c\u800c\u5173\u952e\u70b9\u5747\u5728\u88ab\u94a6\u5b9a\u70b9\u5230\u6839\u7684\u8def\u5f84\u4e0a\u3002\u7531\u4e8e $k$ \u5f88\u5c0f\uff0c\u6240\u4ee5\u5173\u952e\u70b9\u7684\u6570\u91cf\u4e0d\u4f1a\u5f88\u591a\uff0c\u4e0d\u59a8\u4fdd\u7559\u6240\u6709\u5173\u952e\u70b9\uff0c\u8fd9\u4e9b\u5173\u952e\u70b9\u5f62\u6210\u4e86\u4e00\u68f5\u65b0\u6811\uff0c\u6211\u4eec\u5728\u65b0\u5f97\u5230\u7684\u6811\u4e0a\u505a\u6811\u5f62 dp \u5373\u53ef\uff0c\u590d\u6742\u5ea6 $O(36kn)$\u3002\u8fd9\u548c\u865a\u6811\u6709\u70b9\u76f8\u4f3c\uff0c\u4e0d\u8fc7\u865a\u6811\u662f\u628a\u5173\u952e\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\u7f29\u4e86\u8d77\u6765\uff0c\u8fd9\u91cc\u5219\u662f\u4fdd\u7559\u4e86\u5173\u952e\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define fo(i,x,y) for(int i=x;i<=y;++i)\n#define go(i,x,y) for(int i=x;i>=y;--i)\n#define sml(x,y) x=min(x,y)\n#define big(x,y) x=max(x,y)\n#define mk make_pair\n#define pb push_back\n#define int ll\n#define ll long long\n#define db double\nusing namespace std;\ninline void out(int *a,int l,int r){fo(i,l,r) printf(\"%d \",*(a+i));puts(\"\");}\ninline int read(){ int x=0,f=1; char ch=getchar(); while(!isdigit(ch)){ if(ch=='-') f=-1; ch=getchar(); } while(isdigit(ch)){ x=(x<<1)+(x<<3)+(ch^48); ch=getchar(); } return x*f; }\n\nconst int N=1e6,qlr=1e9+7;\nmap<int,int> vis,f[10],head,g,dep;\nint mp[N],tot;\nstruct Edge{\n\tint to,next;\n\tEdge(){}\n\tEdge(int x,int y){to=x,next=y;} \n}e[N];\nint res,k;\n\nvoid connect(int x,int y){\n\te[++tot]=Edge(y,head[x]);\n\thead[x]=tot; \n}\n\nvoid dfs(int x){\n\tif(g.count(x)) fo(i,1,6) f[i][x]=(i==mp[g[x]]);\n\telse fo(i,1,6) f[i][x]=1;\n\tfor(int qwq=head[x];qwq;qwq=e[qwq].next){\n\t\tint p=e[qwq].to;\n\t\tdfs(p);\n\t\tfo(i,1,6){\n\t\t\tint sum=0;\n\t\t\tfo(j,1,6) if(i!=j&&i+j!=7) sum=(f[j][p]+sum)%qlr;\n\t\t\tf[i][x]=f[i][x]*sum%qlr;\n\t\t}\n\t}\n}\n\nint ksm(int x,int y){\n\tint ans=1,t=x;\n\twhile(y){\n\t\tif(y&1) ans=ans*t%qlr;\n\t\tt=t*t%qlr;\n\t\ty>>=1;\n\t}\n\treturn ans;\n}\n\nsigned main(){\n\tk=read();int n=read();\n\tres=(1ll<<k)-2;\n\tmp['w']=1,mp['y']=6,mp['g']=2,mp['b']=5,mp['r']=3,mp['o']=4;\n\tfo(i,1,n){\n\t\tint x=read();\n\t\tstring s;cin>>s;\n\t\tg[x]=s[0];\n\t\tfor(int i=x;i>1&&!vis[i];i>>=1){\n\t\t\tvis[i]=1;\n\t\t\tres--;\n\t\t\tdep[i]++;\n\t\t\tconnect(i>>1,i);\n\t\t}\n\t}\n\tdfs(1);int ans=0,x=ksm(4,res);\n\tfo(i,1,6) ans=(ans+f[i][1])%qlr;\n\tcout<<ans*x%qlr;\n\treturn 0;\n}\n```\n",
        "postTime": 1633764808,
        "uid": 238408,
        "name": "vectorwyx",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1594E2 Rubik's Cube Coloring (hard version)"
    },
    {
        "content": "\u5bf9\u4e8e\u9898\u89e3\u4e2d\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(kmc^2)$\uff0c\u5176\u4e2d $c$ \u662f\u989c\u8272\u6570\uff0c\u6211\u63d0\u4f9b\u4e00\u79cd\u590d\u6742\u5ea6\u4e3a $O(k^\\epsilon c^3+mc^2)$ \u7684\u505a\u6cd5\u3002\n\n\u6211\u4eec\u628a\u7b54\u6848\u62c6\u6210\u5173\u952e\u70b9\u548c\u5173\u952e\u70b9\u5230\u94fe\u4e0a\u6240\u6709\u70b9\u7684\u8d21\u732e\u548c\u5176\u5b83\u7684\u8d21\u732e\uff0c\u5176\u4e2d\u7b2c\u4e8c\u90e8\u5206\u662f\u597d\u7b97\u7684\uff0c\u7b54\u6848\u5c31\u662f $4^\\text{\u70b9\u7684\u4e2a\u6570}$\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e00\u90e8\u5206\uff0c\u5efa\u7acb\u51fa\u865a\u6811\uff0c\u8fd9\u91cc\u7684\u865a\u6811\u6307\u5305\u542b\u6240\u6709\u7684 $m$ \u4e2a\u70b9\u548c\u4ed6\u4eec\u7684 $\\text{LCA}$ \u7684\u6700\u5c0f\u70b9\u96c6\uff0c\u663e\u7136\u865a\u6811\u7684\u70b9\u6570\u662f $O(m)$ \u7684\u3002\n\n\u6211\u4eec\u7528 $f_{i,j}$ \u8868\u793a\u7b2c $i$ \u4e2a\u70b9\u67d3\u8272 $j$ \u7684\u65b9\u6848\u6570\uff0c\u7528 $g(i,j)$ \u8868\u793a\u989c\u8272 $i, j$ \u662f\u5426\u80fd\u76f8\u90bb\u3002\u90a3\u4e48\u5bf9\u4e8e $i$ \u7684\u5b69\u5b50 $v$\uff0c$f_{i,j} = f_{i,j}\\sum_{g(j,k)}f_{v,k}$\uff0c\u6211\u4eec\u53d1\u73b0\u8f6c\u79fb\u4e2d\u53ea\u6709\u865a\u6811\u4e0a\u7684\u70b9\u662f\u53ef\u80fd\u4e0d\u5e73\u51e1\u7684\uff0c\u5176\u5b83\u7684\u8f6c\u79fb\u90fd\u662f\u4e00\u6837\u7684\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u8f6c\u79fb\u662f\u4e00\u4e2a\u4e58\u4e0a\u77e9\u9635\u7684\u5f62\u5f0f\uff0c\u6240\u4ee5\u8bf4\u865a\u6811\u4e0a\u70b9\u548c\u70b9\u95f4\u7684\u7684\u90a3\u6761\u94fe\u7684\u8f6c\u79fb\u53ef\u4ee5\u7528\u77e9\u9635\u5e42\u8fd0\u7b97\u7ef4\u62a4\uff0c\u9884\u5904\u7406\u597d\u8fd9\u4e2a\u77e9\u9635\u7684\u5e42\u5c31\u53ef\u4ee5\u505a\u5230 $O(k^\\epsilon c^3+mc^2)$\u3002",
        "postTime": 1682045868,
        "uid": 615348,
        "name": "zhouershan",
        "ccfLevel": 7,
        "title": "Rubik's Cube Coloring (hard version)"
    },
    {
        "content": "\u540c\u65f6\u4f5c\u4e3a $E1$ \u9898\u89e3\u4e86\u3002\n\n[$MyBlog$](https://www.cnblogs.com/h-lka/)\n\n## \u9898\u76ee\u63cf\u8ff0\n\n\u7ed9\u5b9a $2^n-1$ \u4e2a\u8282\u70b9\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u6bcf\u4e2a\u70b9\u6709\u516d\u79cd\u989c\u8272\uff0c\u989c\u8272\u6709\u4e92\u65a5\u6027\u8d28\uff0c\u6c42\u6240\u6709\u5408\u6cd5\u7684\u4e8c\u53c9\u6811\u67d3\u8272\u65b9\u6848\u3002\n\n### Easy version\n\n\u8fd9\u4e2a\u6bd4\u8f83\u7b80\u5355\uff0c\u4f46\u6211\u4e5f\u6389\u8fdb\u5751\u91cc\u4e86\uff09\u9996\u5148\u5148\u624b\u73a9\u4e00\u4e0b\uff0c\u770b\u5230\u6837\u4f8b $n=3$ \u7684\u65f6\u5019\u6570\u5b57\u5c31\u90a3\u4e48\u5927\uff0c\u7edd\u5bf9\u6709\u4ec0\u4e48\u6b21\u5e42\u6027\u8d28\u3002\n\n\u4e00\u4e2a\u70b9\u7684\u7b54\u6848\u663e\u7136\u662f\u516d\u79cd\u3002\u8003\u8651\u4e0d\u65ad\u5411\u4e0a\u5408\u5e76\uff0c\u6bcf\u4e00\u4e2a\u8282\u70b9\u53ef\u4ee5\u9009\u62e9\u516d\u79cd\u989c\u8272\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u4e00\u79cd\u989c\u8272\u518d\u4e58\u56de\u53bb\u5373\u53ef\u3002\n\n\u53d1\u73b0\uff0c\u5bf9\u4e8e\u9009\u5b9a\u4e00\u79cd\u989c\u8272\uff0c\u4e24\u8fb9\u5747\u6709\u56db\u79cd\u989c\u8272\u53ef\u4ee5\u9009\uff0c\u4e58\u8d77\u6765\u5c31\u662f $16$ \u79cd\uff0c\u6700\u540e\u7684\u7b54\u6848\u5fc5\u7136\u5f62\u5982 $6\\times 4^{x}.$ \u6211\u4eec\u628a\u624b\u63a8\u7684\u4e00\u4e9b\u5199\u4e0b\u6765\uff1a\n\n$$0,2,6,14,30...$$\n\n\u5230\u8fd9\u91cc\u89c4\u5f8b\u4e5f\u5c31\u5f88\u660e\u663e\u4e86\uff0c\u4e5f\u53ef\u4ee5\u7ed9\u51fa\u4e25\u8c28\u63a8\u5bfc\u3002\u8bbe\u5de6\u53f3\u5b50\u6811\u6bcf\u79cd\u989c\u8272\u7684\u5bf9\u5e94\u65b9\u6848\u6570\u4e3a $4^x,$ \u5219\u5bf9\u4e8e\u4e00\u79cd\u989c\u8272\uff0c\u5de6\u4fa7\u53f3\u4fa7\u5747\u6709 $4^{x+1}$ \u79cd\u53ef\u80fd\uff0c\u4e58\u8d77\u6765\u5c31\u662f $4^{2x+2}$ \u79cd\u3002\n\n\u6240\u4ee5\u5bf9\u4e8e $4$ \u6307\u6570\u4e0a\u7684\u9012\u63a8\u5c31\u641e\u5b9a\u4e86\u3002**\u4f46\u662f\u6ce8\u610f\uff0c\u5bf9\u4e8e\u6307\u6570\u4e0a\u9762\u7684\u53d6\u6a21\uff0c\u6211\u4eec\u8981\u5bf9 $\\varphi(p)=(10^9+6)$ \u53d6\u6a21\uff0c\u8fd9\u91cc\u5229\u7528\u6b27\u62c9\u5b9a\u7406**\n\n\u4e8e\u662f\u7b80\u5355\u7248\u672c\u5c31\u505a\u5b8c\u4e86\u3002\n\n### Hard version\n\n\u6811\u592a\u5927\u4e86\uff0c~~\u5fcd\u4e0d\u4e86~~\uff0c\u600e\u4e48\u529e\uff1f\n\n\u53d1\u73b0\u6709\u6548\u7684\u70b9\u53ea\u6709\u4e24\u5343\u4e2a\uff0c\u7b97\u4e0a\u628a\u5b83\u4eec\u5168\u90e8\u94a9\u6784\u9020\u6210\u5b8c\u6574\u7ed3\u6784\u7684\u4e5f\u4e0d\u591a\uff0c\u6240\u4ee5\u76f4\u63a5\u8003\u8651\u5efa\u7acb\u865a\u6811\u8fdb\u884c $dp.$\n\n\u663e\u7136\u7684\u6027\u8d28\u662f\u53ea\u6709\u5176\u7956\u5148\u6709\u7528\uff0c\u800c\u7531\u4e8e\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u6240\u4ee5\u7956\u5148\u4e2a\u6570\u53ea\u6709 $O(\\log n)$ \u4e2a\uff0c\u4e8e\u662f\u70b9\u6570\u5c31\u53ef\u4ee5\u63a5\u53d7\u4e86\u3002\n\n\u540c\u65f6\u6211\u4eec\u4e5f\u53d1\u73b0\uff0c\u8fd9\u4e2a\u4e0d\u540c\u4e8e\u4e00\u822c\u7684\u865a\u6811\uff0c\u8fd9\u91cc\u6211\u4eec\u5efa\u7acb\u4e00\u5b9a\u662f\u8981\u628a\u4ece\u8fd9\u4e2a\u70b9\u5230\u6839\u8282\u70b9\u7684\u4e00\u6574\u6761\u94fe\u5168\u90e8\u5efa\u7acb\u51fa\u6765\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u90fd\u662f\u5fc5\u987b\u70b9\u3002**\u6240\u4ee5\u6211\u4eec\u6700\u540e\u8981 $dp$ \u7684\u6811\u5c31\u662f\u666e\u901a\u7684\u6811\uff0c\u4f46\u662f\u5176\u6240\u6709\u9690\u5f0f\u8282\u70b9\uff0c\u6216\u8005\u8bf4\u6ca1\u6709\u88ab\u5efa\u7acb\u7684\u8282\u70b9\uff0c\u5176\u503c\u4e0d\u53d7\u56fa\u5b9a\u989c\u8272\u70b9\u7684\u5e72\u6270\u3002**\n\n\u8003\u8651\u666e\u901a\u6811\u600e\u4e48 $dp:$ \u8bbe $f[x][1..3]$ \u8868\u793a\u5bf9\u5e94\u4e09\u79cd\u4e0d\u540c\u5212\u5206\u989c\u8272\u5bf9\u5e94\u7684\u65b9\u6848\u6570\u3002\uff08\u4e09\u79cd\u662f\u56e0\u4e3a\u8fd9\u9898\u4e92\u65a5\u6027\u8d28\u4e24\u4e2a\u989c\u8272\u76f8\u5bf9\uff09\n\n\u90a3\u4e48\u8f6c\u79fb\u5c31\u662f\u76f4\u63a5\u628a\u4e24\u4e2a\u5b50\u6811\u4e58\u8d77\u6765\u3002\n\n\u90a3\u4e48\u73b0\u5728\u8003\u8651\u5b9a\u521d\u503c\u3002\u521d\u503c\u663e\u7136\u4e0d\u53d7\u5176\u4ed6\u5e26\u989c\u8272\u70b9\u5f71\u54cd\uff0c\u6240\u4ee5\u76f4\u63a5\u7528\u7b2c\u4e00\u95ee\u7684\u65b9\u6cd5\uff0c**\u53d6 $\\frac{1}{6}$ \u5373\u53ef\u3002**\n\n\u77e5\u9053\u521d\u503c\u548b\u6c42\u4e86\uff0c\u8fd9 $dp$ \u7684\u65b9\u7a0b\u4e5f\u77e5\u9053\u4e86\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u4e00\u4e2a $dfs$ \u7684\u4e8b\u60c5\u4e86\u3002\n\n\u6ce8\u610f\u7528 ```map<int,int>``` \u4e00\u5f00\u59cb\u6709\u4e00\u4e2a\u6570\u7ec4\u5fd8\u8bb0\u5f00 RE \u4e86\u597d\u51e0\u6b21\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef double db;\n#define int long long\nconst int mod=1e9+7;\nconst db eps=1e-10;\ninline int Max(int x,int y){return x>y?x:y;}\ninline int Min(int x,int y){return x<y?x:y;}\ninline db Max(db x,db y){return x-y>eps?x:y;}\ninline db Min(db x,db y){return x-y<eps?x:y;}\ninline int Add(int x,int y,int M=mod){return (x+y)%M;}\ninline int Mul(int x,int y,int M=mod){return 1ll*x*y%M;}\ninline int Dec(int x,int y,int M=mod){return (x-y+M)%M;}\ninline int Abs(int x){return x<0?-x:x;}\ninline int read(){\n\tint s=0,w=1;\n\tchar ch=getchar();\n\twhile(!isdigit(ch)){\n\t\tif(ch=='-')w=-1;\n\t\tch=getchar();\n\t}\n\twhile(isdigit(ch)){\n\t\ts=s*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn s*w;\n}\ninline void write(int x){\n\tif(x<0)putchar('-'),x=-x;\n\tif(x>9)write(x/10);\n\tputchar(x%10+'0');\n}\nconst int N=2e5+10;\nint k,n;\nint F[61];\nstring s;\ntypedef long long ll;\nmap<ll,ll>pa,col,lson,rson,f[4];\nvector<ll>Node;\ninline int qpow(int x,int y){\n\tint res=1;\n\twhile(y){\n\t\tif(y&1)res=Mul(res,x);\n\t\tx=Mul(x,x);y>>=1;\n\t}\n\treturn res;\n}\ninline int Getdep(int v){return log2(v)+1;}\nvoid Treat(){\n\tfor(auto v:Node){\n\t\tif(lson[v]||rson[v])continue;\n\t\tint Dep=k-Getdep(v)+1;\n\t\tif(col[v])f[col[v]][v]=Mul(1,qpow(4,F[Dep]));\n\t\telse for(int i=1;i<=3;++i)f[i][v]=Mul(2,qpow(4,F[Dep]));\n\t}\n}\nvoid DP(ll x){\n\tif(!lson[x]&&!rson[x])return;\n\tif(lson[x])DP(lson[x]);\n\tif(rson[x])DP(rson[x]);\n\tll L1=f[1][lson[x]],L2=f[2][lson[x]],L3=f[3][lson[x]],R1=f[1][rson[x]],R2=f[2][rson[x]],R3=f[3][rson[x]];\n\tif(!lson[x]){L1=L2=L3=Mul(2,qpow(4,F[k-Getdep(x*2)+1]));}\n\tif(!rson[x]){R1=R2=R3=Mul(2,qpow(4,F[k-Getdep(x*2)+1]));}\n\tif(!col[x]){\n\t\tf[1][x]=Mul(2,Mul(Add(L2,L3),Add(R2,R3)));\n\t\tf[2][x]=Mul(2,Mul(Add(L1,L3),Add(R1,R3)));\n\t\tf[3][x]=Mul(2,Mul(Add(L2,L1),Add(R2,R1)));\n\t}\n\telse{\n\t\tif(col[x]==1)f[1][x]=Mul(Add(L2,L3),Add(R2,R3));\n\t\tif(col[x]==2)f[2][x]=Mul(Add(L1,L3),Add(R1,R3));\n\t\tif(col[x]==3)f[3][x]=Mul(Add(L2,L1),Add(R2,R1));\n\t}\n}\nsigned main(){\n \tfreopen(\"My.out\",\"r\",stdin);\n\tk=read();\n\tF[1]=0;\n\tfor(int i=2;i<=60;++i){\n\t\tF[i]=Add(F[i-1],1,mod-1);\n\t\tF[i]=Mul(F[i],2,mod-1);\n\t}\n\tn=read();\n\tfor(int i=1;i<=n;++i){\n\t\tint pos=read();\n\t\tcin>>s;\n\t\tif(s==\"orange\"||s==\"red\")col[pos]=1;\n\t\tif(s==\"white\"||s==\"yellow\")col[pos]=2;\n\t\tif(s==\"blue\"||s==\"green\")col[pos]=3;\n\t\twhile(pos){\n\t\t\tNode.emplace_back(pos);\n\t\t\tpa[pos]=pos/2;\n\t\t\tif(pos%2==0)lson[pos/2]=pos;\n\t\t\telse rson[pos/2]=pos;\n\t\t\tpos/=2;\n\t\t}\n\t}\n\tsort(Node.begin(),Node.end());\n\tll root=1;\n\tTreat();\n\tDP(root);\n\tint res=Add(f[3][root],Add(f[1][root],f[2][root]));\n\twrite(res);putchar('\\n');\n\treturn 0;\n}\n```\n",
        "postTime": 1633760207,
        "uid": 128591,
        "name": "Refined_heart",
        "ccfLevel": 9,
        "title": "CF1594E2 Rubik's Cube Coloring (hard version) \u9898\u89e3"
    },
    {
        "content": "## Content\n\n\u7ed9\u4e00\u4e2a\u6df1\u5ea6\u4e3a $k$ \u7684\u6ee1\u4e8c\u53c9\u6811\uff0c\u7528 $6$ \u79cd\u989c\u8272\u67d3\u8272\uff0c\u4f7f\u5f97\u67d3\u8272\u65b9\u6848\u7b26\u5408\u4ee5\u4e0b\u89c4\u5b9a\u3002\uff08\u6839\u8282\u70b9\u6df1\u5ea6\u4e3a $1$\uff09\n\n\u89c4\u5b9a\uff1a\n\n- \u5982\u679c\u4e00\u4e2a\u8282\u70b9\u662f\u767d\u8272\u7684\uff0c\u90a3\u4e48\u76f8\u90bb\u8282\u70b9\u4e0d\u80fd\u662f\u767d\u8272\u7684\u6216\u9ec4\u8272\u7684\u3002\n- \u5982\u679c\u4e00\u4e2a\u8282\u70b9\u662f\u9ec4\u8272\u7684\uff0c\u90a3\u4e48\u76f8\u90bb\u8282\u70b9\u4e0d\u80fd\u662f\u767d\u8272\u7684\u6216\u9ec4\u8272\u7684\u3002\n- \u5982\u679c\u4e00\u4e2a\u8282\u70b9\u662f\u7eff\u8272\u7684\uff0c\u90a3\u4e48\u76f8\u90bb\u8282\u70b9\u4e0d\u80fd\u662f\u7eff\u8272\u7684\u6216\u84dd\u8272\u7684\u3002\n- \u5982\u679c\u4e00\u4e2a\u8282\u70b9\u662f\u84dd\u8272\u7684\uff0c\u90a3\u4e48\u76f8\u90bb\u8282\u70b9\u4e0d\u80fd\u662f\u7eff\u8272\u7684\u6216\u84dd\u8272\u7684\u3002\n- \u5982\u679c\u4e00\u4e2a\u8282\u70b9\u662f\u7ea2\u8272\u7684\uff0c\u90a3\u4e48\u76f8\u90bb\u8282\u70b9\u4e0d\u80fd\u662f\u7ea2\u8272\u7684\u6216\u6a59\u8272\u7684\u3002\n- \u5982\u679c\u4e00\u4e2a\u8282\u70b9\u662f\u6a59\u8272\u7684\uff0c\u90a3\u4e48\u76f8\u90bb\u8282\u70b9\u4e0d\u80fd\u662f\u7ea2\u8272\u7684\u6216\u6a59\u8272\u7684\u3002\n\n\u73b0\u7ed9\u5b9a $n$ \u4e2a\u70b9\u7684\u989c\u8272\uff0c\u8bd5\u6c42\u67d3\u8272\u65b9\u6848\u6570\u3002\n\n$1\\le k\\le60,1\\le n\\le2\\times10^3$\n\n## Solution\n\n\u5f88\u660e\u663e\u662f\u4e00\u4e2a dp\u3002\n\n\u4f46\u662f\u4e00\u5171\u6709 $2^{60}-1$ \u4e2a\u70b9\uff0c\u6240\u4ee5\u76f4\u63a5\u4e0a dp \u80af\u5b9a\u662f\u4e0d\u884c\u7684\u3002\n\n\u7531 $\\texttt{E1}$ \u53ef\u77e5\uff0c\u4e00\u4e2a\u975e\u6839\u8282\u70b9\uff0c\u4e14\u5468\u56f4\u6ca1\u6709\u67d3\u8272\u7684\u70b9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a $4$\u3002\n\n\u89c2\u5bdf\u9898\u76ee\u6027\u8d28\uff0c\u53ef\u4ee5\u53d1\u73b0\u6bcf\u4e00\u4e2a\u88ab\u89c4\u5b9a\u4e86\u989c\u8272\u7684\u70b9\uff0c\u90fd\u53ea\u4f1a\u5bf9\u4ed6\u4e34\u8fd1\u7684\u70b9\u67d3\u8272\u7684\u65b9\u6848\u6570\u9020\u6210\u5f71\u54cd\u3002\n\n\u867d\u7136\u6811\u7684\u70b9\u5f88\u591a\uff0c\u4f46\u662f\u6709\u989c\u8272\u7684\u70b9\u53ea\u6709 $2000$ \u4e2a\uff0c\u6240\u4ee5\u53ef\u4ee5\u5efa\u7acb\u4e00\u68f5\u865a\u6811\uff0c\u5728\u865a\u6811\u4e0a\u8dd1 dp\u3002\n\n\u5efa\u597d\u4e86\u865a\u6811\uff0cdp\u5c31\u5f88\u663e\u7136\u4e86\u3002\n\n\u8bbe $f_{i,j}$ \u8868\u793a\u4ee5\u7b2c $i$ \u4e2a\u865a\u6811\u4e0a\u7684\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u67d3\u7b2c $j$ \u79cd\u989c\u8272\u7684\u65b9\u6848\u6570\u3002\n\n\u5219 $f_{i,j} = \\prod\\limits_{u\\in son(i)}\\sum\\limits_{k\\in col(j)}f_{u,k}$\n\n\u5176\u4e2d $son(i)$ \u8868\u793a\u70b9 $i$ \u513f\u5b50\uff0c$col(j)$ \u8868\u793a\u4e0d\u4e0e $j$ \u51b2\u7a81\u7684\u989c\u8272\u3002\n\n\u5373\u5c06\u70b9 $i$ \u7684\u5de6\u53f3\u4e24\u513f\u5b50\u67d3\u5404\u79cd\u53ef\u80fd\u989c\u8272\u7684\u65b9\u6848\u6570\u6c42\u548c\uff0c\u7136\u540e\u4e24\u7ed3\u679c\u76f8\u4e58\u3002\n\n\u76f4\u63a5\u6811\u5f62dp\uff0c\u7136\u540e\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002\n\n\u6700\u540e\u5c06\u4e0d\u5728\u865a\u6811\u4e2d\u7684\u70b9\u7684\u65b9\u6848\u6570\u4e58\u5230\u7b54\u6848\u4e2d\u5373\u53ef\u3002\n\n## Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\n\nconst int N = 1e6+5, P = 1e9 + 7;\nint n, k;\nint f[N][7], vis[N];\nint son[N][2];\nvector<pair<int,int> > col;\nvector<int> g;\n\nint get_c(char c) {\n\tif(c == 'w') return 0;\n\tif(c == 'y') return 1;\n\tif(c == 'g') return 2;\n\tif(c == 'b') return 3;\n\tif(c == 'o') return 4;\n\tif(c == 'r') return 5;\n\treturn 0;\n}\n\n//\u67e5\u8be2\u5f53\u524d\u70b9\u5728\u865a\u6811\u4e2d\u4f4d\u7f6e\nint get(int x) {\n\treturn lower_bound(g.begin(), g.end(), x) - g.begin() + 1;\n}\n\n//\u68c0\u67e5\u989c\u8272\u662f\u5426\u51b2\u7a81\nbool check(int a, int b) {\n\tif(a > b) swap(a, b);\n\tif(a == b || a == 0 && b == 1 || a == 2 && b == 3 || a == 4 && b == 5) return true;\n\treturn false;\n}\n\n//\u6811\u5f62dp\u8ba1\u7b97\nvoid dfs(int u) {\n\tif(!son[u][0]) {\n\t\tf[u][vis[u]] = 1;\n\t\treturn ;\n\t}\n\tif(son[u][0]) dfs(son[u][0]);\n\tif(son[u][1]) dfs(son[u][1]);\n\tfor(int i = 0;i < 6;i ++) {\n\t\tint a = 0, b = 0;\n\t\tif(vis[u] >= 0 && vis[u] <= 5 && vis[u] != i) continue;\n\t\tfor(int j = 0;j < 6;j ++) {\n\t\t\tif(check(i, j)) continue;\n\t\t\tif(son[u][0]) a = (a + f[son[u][0]][j]) % P;\n\t\t\tif(son[u][1]) b = (b + f[son[u][1]][j]) % P;\n\t\t}\n\t\tif(son[u][1]) f[u][i] = (a * b) % P;\n\t\telse f[u][i] = a % P;\n\t}\n}\n//\u5feb\u901f\u5e42\u8ba1\u7b97\u4e0d\u5728\u865a\u6811\u4e2d\u70b9\u7684\u65b9\u6848\nlong long qmi(int a, int t) {\n\tlong long sum = 1;\n\twhile(t) {\n\t\tif(t & 1) sum = sum * a % P;\n\t\ta = a * a % P;\n\t\tt >>= 1;\n\t}\n\treturn sum;\n}\n\nsigned main() {\n\tmemset(vis, -1, sizeof vis);\n\tcin >> k >> n;\n\tfor(int i = 1;i <= n;i ++) {\n\t\tint a;\n\t\tstring s;\n\t\tcin >> a >> s;\n\t\tcol.push_back(make_pair(a, get_c(s[0])));\n\t}\n   \t//\u5efa\u7acb\u865a\u6811\n\tg.push_back(1);\n\tfor(int i = 0;i < col.size();i ++) {\n\t\tint j = col[i].first;\n\t\twhile(j) g.push_back(j), j /= 2; \n\t}\n\tsort(g.begin(), g.end());\n\tg.erase(unique(g.begin(), g.end()), g.end());\n    \t//\u5904\u7406\u51fa\u865a\u6811\u4e0a\u70b9\u7684\u7236\u5b50\u5173\u7cfb\n\tfor(int i = 0;i < col.size();i ++) {\n\t\tint j = col[i].first, w = col[i].second;\n\t\twhile(true) {\n\t\t\tint a = get(j), b = get(j / 2);\n\t\t\tif(vis[a] != -1) break;\n\t\t\tvis[a] = 10;\n\t\t\tif(j == 1) break;\n\t\t\tif(son[b][0]) son[b][1] = a;\n\t\t\telse son[b][0] = a;\n\t\t\tj /= 2; \n\t\t}\n\t\tvis[get(col[i].first)] = w;\n\t}\n    \n\tdfs(1);\n\tint ans = 0;\n\tfor(int i = 0;i < 6;i ++) ans = (ans + f[1][i]) % P;\n\tcout << ans * qmi(4, (1ll<<k) - 1 - (int)g.size()) % P;\n\treturn 0;\n} \n```",
        "postTime": 1635331757,
        "uid": 195388,
        "name": "alvis",
        "ccfLevel": 5,
        "title": "CF1594E2"
    },
    {
        "content": "\u5f00 VP \u7684\u65f6\u5019\u975e\u5e38\u52c7\uff0c\u5efa\u4e86\u4e00\u68f5\u6807\u51c6\u7684\u865a\u6811\uff0c\u5e76\u6ca1\u6709\u53bb\u628a\u70b9\u5230\u6839\u8def\u5f84\u4e0a\u7684\u6240\u6709\u70b9\u90fd\u52a0\u8fdb\u53bb\uff0c\u7136\u540e\u5c31\u5f88\u96be\u5199\uff08\n\n\u8fd9\u91cc\u6211\u4eec\u8bb0 orange \u4e3a 0\uff0cred \u4e3a 1\uff0cblue \u4e3a 2\uff0cgreen \u4e3a 3\uff0cwhite \u4e3a 4\uff0cyellow \u4e3a 5\uff0c\u8fd9\u6837\u76f8\u5bf9\u7684\u989c\u8272\u5f02\u6216\u8d77\u6765\u4e3a 1\uff0c\u5904\u7406\u8d77\u6765\u65b9\u4fbf\u4e00\u4e9b\n\n\u5957\u8def\u5730\u8bb0 $f_{u,i}$ \u4e3a\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c $u$ \u7684\u989c\u8272\u4e3a $i$ \u7684\u65b9\u6848\u6570\n\n\u9996\u5148\u628a\u6240\u6709\u7684\u6df1\u5ea6\u6700\u5927\u7684\u5173\u952e\u8282\u70b9\u627e\u51fa\u6765\uff0c\u5bf9\u4e8e\u8fd9\u4e9b\u8282\u70b9\u6211\u4eec\u6709 $f_{u,c_u}=4^{size_u-1}$\n\n\u7136\u540e\u628a\u8f6c\u79fb\u77e9\u9635\u5199\u51fa\u6765\n\n$$\n\\begin{bmatrix}\n0~~0~~1~~1~~1~~1\\\\\n0~~0~~1~~1~~1~~1\\\\\n1~~1~~0~~0~~1~~1\\\\\n1~~1~~0~~0~~1~~1\\\\\n1~~1~~1~~1~~0~~0\\\\\n1~~1~~1~~1~~0~~0\n\\end{bmatrix}\n\\times\n\\begin{bmatrix}\nf_{u,0}\\\\\nf_{u,1}\\\\\nf_{u,2}\\\\\nf_{u,3}\\\\\nf_{u,4}\\\\\nf_{u,5}\\\\\n\\end{bmatrix}\n=\n\\begin{bmatrix}\nf_{fa,0}\\\\\nf_{fa,1}\\\\\nf_{fa,2}\\\\\nf_{fa,3}\\\\\nf_{fa,4}\\\\\nf_{fa,5}\\\\\n\\end{bmatrix}\n$$\n\n\u8f6c\u79fb\u7684\u65f6\u5019\u9884\u5904\u7406\u51fa\u8f6c\u79fb\u77e9\u9635\u7684 $1$ \u5230 $k$ \u6b21\u5e42\u5c31\u884c\u4e86\n\n\u5bf9\u4e8e $u$ \u5b50\u6811\u4e2d\u90a3\u4e9b\u65e2\u4e0d\u5728\u5173\u952e\u70b9\u5230 $u$ \u8def\u5f84\u4e0a\uff0c\u53c8\u4e0d\u5728\u5173\u952e\u70b9\u7684\u5b50\u6811\u5185\u90e8\u7684\u70b9\uff0c\u76f8\u5f53\u4e8e\u662f easy version\uff0c\u4e58\u4e0a $4^{cnt}$ \u5c31\u884c\u4e86\n\n\u90a3\u4e48\u70b9\u6309 dfs \u5e8f\u6392\u5e94\u8be5\u600e\u4e48\u5f04\u5462\n\n\u5bf9\u4e8e\u8282\u70b9 $u,v$\uff0c\u6211\u4eec\u5148\u628a\u6df1\u5ea6\u8f83\u5927\u7684\u8df3\u5230\u53e6\u4e00\u4e2a\u70b9\u7684\u6df1\u5ea6\uff0c\u7136\u540e\u6bd4\u8f83\u6b64\u65f6\u8fd9\u4e24\u4e2a\u6570\u7684\u5927\u5c0f\uff0c\u5982\u679c\u5927\u5c0f\u76f8\u540c\u7684\u8bdd\uff0c\u5c31\u6bd4\u8f83\u539f\u6765 $u,v$ \u7684\u6df1\u5ea6\u5c31\u884c\u4e86\n\n\u8fd9\u91cc\u7684 dfs \u5e8f\u5176\u5b9e\u5c31\u662f\u4e8c\u53c9\u6811\u7684\u524d\u5e8f\u904d\u5386\n\n\u4ee3\u7801\u4e0d\u662f\u5f88\u597d\u5199\uff0c\u5927\u81f4\u5982\u4e0b\n\n```cpp\n#include<stdio.h>\n#include<math.h> \n#include<string.h>\n#include<algorithm> \n#include<vector>\n#include<map>\nusing namespace std;\n \ntypedef long long ll;\n \ninline int read() {\n\tint res=0,f=1;char ch;\n\twhile(ch=getchar(),ch<'0'||ch>'9') if(ch=='-') f=-1;\n\twhile(ch>='0'&&ch<='9') res=res*10+ch-'0',ch=getchar();\n\treturn res*f;\n}\n \ninline ll readll() {\n\tll res=0,f=1;char ch;\n\twhile(ch=getchar(),ch<'0'||ch>'9') if(ch=='-') f=-1;\n\twhile(ch>='0'&&ch<='9') res=res*10+ch-'0',ch=getchar();\n\treturn res*f;\n}\n \nconst int N=4005,P=1e9+7;\n \nll qpow(ll a,ll b) {\n\tll ans=1;b%=(P-1);\n\tfor(;b;b>>=1,(a*=a)%=P) if(b&1) (ans*=a)%=P;\n\treturn ans;\n}\n \nchar str[154];\n \nstruct node {\n\tll id;int val;\n\tinline node (ll I=0,int V=0) : id(I),val(V) {}\n}p[N];\n \nint k,m,t;\n \ninline int getlen(ll x) {\n\tint l=0;while(x) x>>=1,++l;\n\treturn l;\n}\n \ninline bool cmp(node a,node b) {\n\tll x=a.id,y=b.id;int la=getlen(x),lb=getlen(y);\n\tif(la<lb) {\n\t\ty>>=(lb-la);\n\t\treturn x<=y;\n\t}\n\telse {\n\t\tx>>=(la-lb);\n\t\treturn x<y;\n\t}\n}\n \ninline ll LCA(ll a,ll b) {\n\tint la=getlen(a),lb=getlen(b);\n\tif(la<lb) swap(a,b),swap(la,lb);\n\twhile(la>lb) a>>=1,--la;\n\twhile(a!=b) a>>=1,b>>=1;\n\treturn a;\n}\n \nstruct matrix {\n\tll a[6][6];\n\tinline void clear() {\n\t\tfor(int i=0;i<6;++i)\n\t\t\tfor(int j=0;j<6;++j)\n\t\t\t\ta[i][j]=0;\n\t}\n}tmp,base,I,ml,mr,tp[61];\n \ninline matrix operator * (const matrix &a,const matrix &b) {\n\ttmp.clear();\n\tfor(int i=0;i<6;++i)\n\t\tfor(int k=0;k<6;++k)\n\t\t\tif(a.a[i][k])\n\t\t\t\tfor(int j=0;j<6;++j)\n\t\t\t\t\t(tmp.a[i][j]+=a.a[i][k]*b.a[k][j]%P)%=P;\n\treturn tmp;\n}\n \nstruct Node {\n\tll size,lc,rc,f[6],id;\n\tint c;\n};\n \nll s[N];\n \nmap <ll,Node> w;\n \ninline ll getsize(ll len) {return (2ll<<k-len)-1;}\n \nvoid dfs(ll u) {\n\tw[u].size=getsize(getlen(u));\n\tif(w[u].lc) {\n\t\tll lc=w[u].lc,rc=w[u].rc;\n\t\tif(lc) dfs(lc);if(rc) dfs(rc);\n\t\tint l1=getlen(lc)-getlen(u)-1,l2=getlen(rc)-getlen(u)-1;\n\t\tif(l1<0) l1=0;if(l2<0) l2=0;\n\t\tll rem=qpow(4,w[u].size-1-w[lc].size-w[rc].size-l1-l2);\n\t\tml=tp[l1],mr=tp[l2];\n\t\tfor(int i=0;i<6;++i)\n\t\t\tif(w[u].c==6||w[u].c==i) {\n\t\t\t\tll c1=0,c2=0;\n\t\t\t\tfor(int j=0;j<6;++j)\n\t\t\t\t\tif((i^j)>1) {\n\t\t\t\t\t\tfor(int k=0;k<6;++k) (c1+=ml.a[k][j]*w[lc].f[k]%P)%=P;\n\t\t\t\t\t}\n\t\t\t\tfor(int j=0;j<6;++j)\n\t\t\t\t\tif((i^j)>1) {\n\t\t\t\t\t\tfor(int k=0;k<6;++k) (c2+=mr.a[k][j]*w[rc].f[k]%P)%=P;\n\t\t\t\t\t}\n\t\t\t\tif(rc) w[u].f[i]=c1*c2%P*rem%P;\n\t\t\t\telse w[u].f[i]=c1*rem%P;\n\t\t\t}\n\t}\n\telse {\n\t\tfor(int i=0;i<6;++i)\n\t\t\tif(w[u].c==6||w[u].c==i)\n\t\t\t\tw[u].f[i]=qpow(4,w[u].size-1);\n\t}\n}\n \nint main() {\n\tk=read(),m=read();\n\tfor(int i=0;i<6;++i)\n\t\tfor(int j=0;j<6;++j)\n\t\t\tI.a[i][j]=(i==j);\n\tfor(int i=0;i<6;++i)\n\t\tfor(int j=0;j<6;++j)\n\t\t\tbase.a[i][j]=((i^j)>1);\n\ttp[0]=I;\n\tfor(int i=1;i<=60;++i) tp[i]=tp[i-1]*base;\n\tfor(int i=1;i<=m;++i) {\n\t\tll x=readll();int c;scanf(\"%s\",str);\n\t\tif(str[0]=='o') c=0;\n\t\telse if(str[0]=='r') c=1;\n\t\telse if(str[0]=='b') c=2;\n\t\telse if(str[0]=='g') c=3;\n\t\telse if(str[0]=='w') c=4;\n\t\telse c=5;\n\t\tp[i]=node(x,c),w[x].c=c;\n\t}\n\tsort(p+1,p+m+1,cmp);\n\tfor(int i=1;i<m;++i)\n\t\tif(p[i].id==p[i+1].id>>1&&p[i].val==p[i+1].val) return !printf(\"0\");\n\t\telse if(p[i].id==p[i+1].id&&p[i].val!=p[i+1].val) return !printf(\"0\");\n\ts[t=1]=1,w[1].c=6;\n\tfor(int i=1;i<=m;++i) {\n\t\tif(p[i].id==s[t]) {w[s[t]].c=p[i].val;continue ;}\n\t\tif(LCA(s[t],p[i].id)==s[t]) {s[++t]=p[i].id;continue ;}\n\t\twhile(t&&(t==1||LCA(s[t-1],p[i].id)!=s[t-1])) {\n\t\t\tif(!w[s[t-1]].lc) w[s[t-1]].lc=s[t];\n\t\t\telse w[s[t-1]].rc=s[t];\n\t\t\t--t;\n\t\t}\n\t\tll lca=LCA(s[t],p[i].id);\n\t\tif(w[lca].lc) w[lca].rc=s[t];\n\t\telse w[lca].lc=s[t];\n\t\tif(lca!=s[t-1]) s[t]=lca,w[lca].c=6;\n\t\telse --t;\n\t\ts[++t]=p[i].id;\n\t}\n\twhile(t) {\n\t\tif(w[s[t-1]].lc) w[s[t-1]].rc=s[t];\n\t\telse w[s[t-1]].lc=s[t];\n\t\t--t;\n\t}\n\tdfs(1);\n\tll res=0;\n\tfor(int i=0;i<6;++i) (res+=w[1].f[i])%=P;\n\tprintf(\"%lld\",res);\n\treturn 0;\n}\n```",
        "postTime": 1634461292,
        "uid": 79075,
        "name": "mzgwty",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1594E2 Rubik's Cube Coloring (hard version)"
    },
    {
        "content": "\n## \u9898\u610f  \n\n\u6709\u4e00\u68f5\u6df1\u5ea6\u4e3a $k$ \u7684\u6ee1\u4e8c\u53c9\u6811\uff08\u6839\u8282\u70b9\u6df1\u5ea6\u4e3a $1$\uff09\u3002  \n\u4f60\u8981\u7528 $6$ \u79cd\u989c\u8272\u53bb\u67d3\u8272\uff0c\u4f7f\u5f97\u76f8\u90bb\u8282\u70b9\u989c\u8272\u4e0d\u540c\uff0c\u5e76\u4e14\u4e5f\u4e0d\u4f1a\u662f\u9b54\u65b9\u5bf9\u9762\u7684\u4e24\u4e2a\u9762\u7684\u989c\u8272\u3002  \n\u5177\u4f53\u6765\u8bf4\uff1a  \n- \u5982\u679c\u4e00\u4e2a\u8282\u70b9\u662f\u767d\u8272\u7684\uff0c\u90a3\u4e48\u76f8\u90bb\u8282\u70b9\u4e0d\u80fd\u662f\u767d\u8272\u7684\u6216\u9ec4\u8272\u7684\u3002 \n- \u5982\u679c\u4e00\u4e2a\u8282\u70b9\u662f\u9ec4\u8272\u7684\uff0c\u90a3\u4e48\u76f8\u90bb\u8282\u70b9\u4e0d\u80fd\u662f\u767d\u8272\u7684\u6216\u9ec4\u8272\u7684\u3002 \n- \u5982\u679c\u4e00\u4e2a\u8282\u70b9\u662f\u7eff\u8272\u7684\uff0c\u90a3\u4e48\u76f8\u90bb\u8282\u70b9\u4e0d\u80fd\u662f\u7eff\u8272\u7684\u6216\u84dd\u8272\u7684\u3002 \n- \u5982\u679c\u4e00\u4e2a\u8282\u70b9\u662f\u84dd\u8272\u7684\uff0c\u90a3\u4e48\u76f8\u90bb\u8282\u70b9\u4e0d\u80fd\u662f\u7eff\u8272\u7684\u6216\u84dd\u8272\u7684\u3002 \n- \u5982\u679c\u4e00\u4e2a\u8282\u70b9\u662f\u7ea2\u8272\u7684\uff0c\u90a3\u4e48\u76f8\u90bb\u8282\u70b9\u4e0d\u80fd\u662f\u7ea2\u8272\u7684\u6216\u6a59\u8272\u7684\u3002 \n- \u5982\u679c\u4e00\u4e2a\u8282\u70b9\u662f\u6a59\u8272\u7684\uff0c\u90a3\u4e48\u76f8\u90bb\u8282\u70b9\u4e0d\u80fd\u662f\u7ea2\u8272\u7684\u6216\u6a59\u8272\u7684\u3002 \n\n\u73b0\u5728\u5df2\u77e5\u4e86 $n$ \u4e2a\u8282\u70b9\u7684\u989c\u8272\u4fe1\u606f\uff08\u5728 E1 \u4e2d\u4e3a 0\uff09\uff0c\u6c42\u7ed9\u6574\u68f5\u6811\u67d3\u8272\u7684\u65b9\u6848\u6570\u3002  \n\n## \u9898\u89e3  \n\n[\u4e0a\u63a5 E1 \u9898\u89e3](https://www.luogu.com.cn/blog/FOOLISH-JUSTIN/solution-cf1594e1)  \n\n\u6211\u4eec\u8003\u8651\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u81ea\u8eab\u53ca\u6240\u6709\u540e\u4ee3\u90fd\u6ca1\u6709\u88ab\u94a6\u5b9a\u8fc7\u989c\u8272\uff0c\u90a3\u4e48\u4ed6\u7684\u8d21\u732e\u53ef\u4ee5\u76f4\u63a5\u7528\u516c\u5f0f\u6765\u7b97\u3002  \n\u90a3\u4e48\u6211\u4eec\u53d1\u73b0\uff0c\u4e0d\u80fd\u7528\u516c\u5f0f\u6765\u7b97\u7684\u989c\u8272\u4e0d\u8d85\u8fc7 $nk$ \u4e2a\u3002  \n\u6211\u4eec\u8003\u8651\u8ba1\u7b97\u51fa\u4e00\u4e2a\u8282\u70b9\uff0c\u94a6\u5b9a\u5b83\u662f\u4ec0\u4e48\u989c\u8272\uff0c\u5b83\u7684\u5b50\u6811\u7684\u67d3\u8272\u65b9\u6848\u6570\uff0c\u5e76\u4e14\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u3002   \n\n\u7136\u540e\u76f4\u63a5\u4ece\u513f\u5b50\u90a3\u91cc\u8f6c\u79fb\u5c31\u884c\u4e86\uff0c\u590d\u6742\u5ea6\u662f $O(c^3 nk)$\uff0c\u5176\u4e2d $c=6$ \u8868\u793a\u989c\u8272\u6570\u91cf\u3002  \n\u5e38\u6570\u53ef\u80fd\u6bd4\u8f83\u5927\uff0c\u53cd\u6b63\u52a0\u4e0a\u9884\u7f16\u8bd1\u547d\u4ee4\u80fd\u8fc7\u3002\n\n## \u4ee3\u7801\n\n```cpp\n\n#include<bits/stdc++.h>\n#define int long long\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native\")\n#define rd(x) x=read()\n#define wt(x) write(x)\n#define endl \"\\n\"\nusing namespace std;\nconst int N=2e6+5;\nconst int mod=1e9+7;\nint read(){int x=0,f=1;char ch=getchar();while(ch>'9'||ch<'0'){if (ch=='-')f=-1;ch=getchar();}while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}return x*f;}\nvoid write(int x){if(x<0){putchar('-');x=-x;}if(x>=10)write(x/10);putchar(x%10+'0');}\nint ksm(int x,int y=mod-2,int z=mod){int ret=1;while (y){if (y&1) ret=(ret*x)%z;x=(x*x)%z;y>>=1;}return ret;}\n\nint n,m,k,ans,cnt;\nunordered_map<int,int> Map;\nint L(int x){for (int i=60;i>=0;i--) if (x>>i&1) return i;}\nint G(int k){if (k==0) return 1;int t=(ksm(2,k,mod-1)-2+mod-1)%(mod-1);return ksm(4,t);}\nbool chk(int x,int y){if (x==y || x+y==7) return 0;return 1;}\nunordered_map<int,int> f[7];\nunordered_map<int,int> v[7];\nint F(int x,int y)\n{\n\tif (v[y][x]) return f[y][x];\n\tint ret=0;\n\tif (!Map[x]) return G(k-L(x));\n\tif (Map[x]==7)\n\t{\n\t\tif (k-L(x)==1) return 1;\n\t\tfor (int a=1;a<=6;a++) if (chk(a,y)) for (int b=1;b<=6;b++) if (chk(b,y)) ret=(ret+F(x*2,a)*F(x*2+1,b))%mod;\n\t} else \n\t{\n\t\tif (Map[x]!=y) return 0;\n\t\tif (k-L(x)==1) return 1;\n\t\tfor (int a=1;a<=6;a++) if (chk(a,y)) for (int b=1;b<=6;b++) if (chk(b,y)) ret=(ret+F(x*2,a)*F(x*2+1,b))%mod;\n\t}\n\tv[y][x]=1;\n\treturn f[y][x]=ret;\n}\nchar s[N];\nvoid insert(int x,int c)\n{\n\tif (x==0) return;\n\tif (Map[x]!=7 && Map[x]!=0 && Map[x]!=c && c!=7) {puts(\"0\");exit(0);}\n\tif (!Map[x] || Map[x]==7) Map[x]=c;\n\tinsert(x/2,7);\n}\nsigned main()\n{\n\trd(k);rd(n);\n\twhile (n--)\n\t{\n\t\tint x;rd(x);scanf(\"%s\",s);\n\t\tif (s[0]=='w') insert(x,1);\n\t\tif (s[0]=='r') insert(x,2);\n\t\tif (s[0]=='g') insert(x,3);\n\t\tif (s[0]=='b') insert(x,4);\n\t\tif (s[0]=='o') insert(x,5);\n\t\tif (s[0]=='y') insert(x,6);\n\t}\n\tfor (int i=1;i<=6;i++) ans+=F(1,i);\n\tcout<<ans%mod<<endl;\n}\n```",
        "postTime": 1633761852,
        "uid": 167006,
        "name": "WitheredZeal",
        "ccfLevel": 0,
        "title": "CF1594E2"
    }
]