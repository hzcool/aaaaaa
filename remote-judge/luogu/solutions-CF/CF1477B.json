[
    {
        "content": "## E - Nezzar and Binary String\n\n\nA \u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u4e8c\u8fdb\u5236\u4e32 S\uff0c\u4ed6\u60f3\u8ba9\u81ea\u5df1\u6700\u597d\u7684\u670b\u53cb B \u770b\uff0cB\u5c06\u4f1a\u7528 $q$ \u5929\u7684\u65f6\u95f4\u6765\u68c0\u67e5\u8fd9\u4e2a\u4e8c\u8fdb\u5236\u4e32\u3002\n\u7b2c $i$ \u5929\uff0c B\u4f1a\u5728\u8fd9\u4e00\u5929\u65e9\u4e0a\u68c0\u67e5\u8fd9\u4e2a\u4e8c\u8fdb\u5236\u4e32\u7684\u4e00\u4e2a\u533a\u95f4 $[l_i,r_i]$ \uff0c\u5982\u679c\u8fd9\u4e2a\u533a\u95f4\u5185\u7684\u6570\u5b57\u5168\u90e8\u90fd\u662f\u4e00\u81f4\u7684\uff0c\u4e5f\u5c31\u662f\u5168\u90e8\u90fd\u4e3a $1$ \u6216\u8005\u5168\u90e8\u90fd\u4e3a $0$ \uff0cB\u5c31\u4f1a\u5f88\u5f00\u5fc3\uff0c\u5426\u5219\u5979\u5c31\u4f1a\u4e0d\u5f00\u5fc3\u3002\nA\u4e3a\u4e86\u4f7f B \u6bcf\u6b21\u68c0\u67e5\u90fd\u80fd\u53d8\u5f97\u5f00\u5fc3\uff0c\u6240\u4ee5 A \u4f1a\u5728\u6bcf\u5929 B \u68c0\u67e5\u4e4b\u540e\u7684\u5f53\u5929\u665a\u4e0a\u5077\u5077\u5730\u53bb\u4fee\u6539\u8fd9\u4e2a\u4e8c\u8fdb\u5236\u4e32\uff0c\u4f7f\u5f97 B \u7b2c\u4e8c\u5929\u68c0\u67e5\u7684\u65f6\u5019\u80fd\u591f\u5f00\u5fc3\u3002\u4e3a\u4e86\u4e0d\u88ab B \u53d1\u73b0\uff0cA \u6bcf\u6b21\u53ea\u80fd\u4fee\u6539\u4eca\u5929\u65e9\u4e0a B \u68c0\u67e5\u8fc7\u7684\u90a3\u4e2a\u533a\u95f4 $[l_i,r_i]$\uff0c\u5e76\u4e14\u4fee\u6539\u7684\u5b57\u7b26\u7684\u4e2a\u6570\u5fc5\u987b**\u5c0f\u4e8e**\u8fd9\u4e2a\u533a\u95f4\u5b57\u7b26\u603b\u6570\u7684\u4e00\u534a\uff0c\n\n\u4e0e\u6b64\u540c\u65f6\uff0cA\u8fd8\u6709\u4e00\u4e2a\u4efb\u52a1\uff0c\u5c31\u662f\u4ed6\u5e0c\u671b\u53ef\u4ee5\u901a\u8fc7\u8fd9 $q$ \u5929\u7684\u4fee\u6539\uff0c\u5c06\u4e8c\u8fdb\u5236\u4e32 $s$ \u53d8\u6210 $f$ \u3002\u8bf7\u95ee A \u80fd\u591f\u5728\u6bcf\u5929\u90fd\u4fdd\u8bc1 B \u5f00\u5fc3\u7684\u540c\u65f6\uff0c\u5c06\u4e8c\u8fdb\u5236\u4e32 $s$ \u4fee\u6539\u4e3a $f$ \u5462\u5417\uff1f\n\n$T$ \u7ec4\u6570\u636e\uff0c\u6bcf\u7ec4\u8f93\u5165\u4e24\u4e2a\u6574\u6570 $n$ \u548c $q$ \uff0c\u7136\u540e\u8f93\u5165\u4e24\u4e2a\u4e8c\u8fdb\u5236\u4e32 $s$ \u548c $f$\uff0c\u63a5\u7740\u8f93\u5165 $q$ \u4e2a\u533a\u95f4\u3002\u82e5 A \u80fd\u5728\u4fdd\u8bc1 B \u6bcf\u6b21\u90fd\u5f00\u5fc3\u7684\u524d\u63d0\u4e0b\uff0c\u5b8c\u6210\u8fd9\u4e2a\u4efb\u52a1\uff0c\u5219\u8f93\u51fa `YES` \u5426\u5219\u8f93\u51fa `NO`\u3002\n\n$1 \\le t \\le 2 \\cdot 10^5,1 \\le n \\le 2 \\cdot 10^5,0 \\le q \\le 2 \\cdot 10^5$\n\n```cpp\n4\n5 2\n00000\n00111\n1 5\n1 3\n2 1\n00\n01\n1 2\n10 6\n1111111111\n0110001110\n1 10\n5 9\n7 10\n1 7\n3 5\n6 10\n5 2\n10000\n11000\n2 5\n1 3\n```\n\n```cpp\nYES\nNO\nYES\nNO\n```\n**Solution**\n\n\u6211\u4eec\u672c\u6765\u6309\u7167\u9898\u610f\u7684\u987a\u5e8f\uff0c\u662f\u5979\u5148\u67e5\u770b\uff0c\u6211\u4eec\u518d\u4fee\u6539\uff0c\u4f46\u662f\u6bcf\u6b21\u6539\u90fd\u8981\u53d7\u5230\u4e4b\u540e\u5979\u67e5\u770b\u7684\u533a\u95f4\u7684\u5f71\u54cd\u3002\n\n\u6bd4\u5982\u6837\u4f8b\u4e00\uff1a\n\n> \u7b2c\u4e00\u5929\uff0c\u5979\u8981\u770b $[1,5]$ \uff0c\u5f88\u5f00\u5fc3\u8d70\u4e86 ~ \n> \n> ------\n> \u7b2c\u4e00\u5929\u665a\u4e0a\uff0c\u6211\u53ef\u4ee5\u6539 $[1,5]$ \uff0c**\u4f46\u662f**\u5979\u660e\u5929\u8981\u770b $[1,3]$ \uff0c\u6240\u4ee5\u6211\u8981**\u5148\u4fdd\u8bc1** $[1,3]$ \u662f\u6ca1\u6709 $0,1$ \u540c\u65f6\u5b58\u5728\u7684\uff0c\u518d\u770b\u80fd\u4e0d\u80fd\u6539 $[1,5]$ \u7684\u5176\u4ed6\u5143\u7d20\u4f7f\u5f97$s\\to f$\uff0c\u5c31\u5f88\u602a\uff0c\u5f53\u524d\u7684\u64cd\u4f5c\u9700\u8981\u8003\u8651\u4e4b\u540e\u7684\u5f71\u54cd\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u63d0\u524d\u77e5\u9053\u4e0b\u4e00\u6b21\u7684\u64cd\u4f5c\u533a\u95f4\uff0c\u5c31\u5f88\u5947\u602a\u3002\n> \n> ------\n> \u7b2c\u4e8c\u5929\uff0c\u5979\u8981\u770b $[1,3]$\uff0c\u56e0\u4e3a\u524d\u4e00\u5929\u665a\u4e0a\u6211\u7684\u52aa\u529b\uff0c\u5979\u5f88\u5f00\u5fc3\u7684\u8d70\u4e86 ~\n> \n> ------\n> \u7b2c\u4e8c\u5929\u665a\u4e0a\uff0c\u6211\u53ef\u4ee5\u6539 $[1,3]$\uff0c\u660e\u5929\u5979\u4e0d\u770b\u4e86\uff0c\u6211\u5c31\u5c3d\u91cf\u6539\n> $[1,3]$ \u4f7f\u5f97$s\\to f$\n\n\u4f46\u662f\u5982\u679c\u6211\u4eec\u53cd\u8fc7\u6765\uff0c\u53d8\u6210\u6211\u4eec\u5148\u6539\uff0c\u5979\u518d\u770b\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u65e9\u4e0a\u5148\u6539\uff0c\u665a\u4e0a\u5979\u518d\u770b\uff0c\u5c31\u5f88\u8212\u670d\u3002\n\n>\u7b2c\u4e00\u5929\u65e9\u4e0a\uff0c\u6211\u53ef\u4ee5\u6539 $[1,3]$ \uff0c**\u56e0\u4e3a**\u5979\u665a\u4e0a\u8981\u770b $[1,3]$ \uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u4fdd\u8bc1 $[1,3]$ \u662f\u6ca1\u6709 $0,1$ \u540c\u65f6\u5b58\u5728\u7684\uff0c\u518d\u5c3d\u91cf\u671d\u7740 $f\\to s$ \u7684\u65b9\u5411\u6539 $[1,3]$ \u3002\n> \n> ------\n>\u7b2c\u4e00\u5929\u665a\u4e0a\uff0c\u5979\u770b\u5b8c $[1,3]$ \uff0c\u5f00\u5fc3\u5730\u8d70\u4e86 ~\n> \n> ------\n>\u7b2c\u4e8c\u5929\u65e9\u4e0a\uff0c\u6211\u53ef\u4ee5\u6539 $[1,5]$\uff0c\u56e0\u4e3a\u5979\u665a\u4e0a\u8981\u770b $[1,5]$\uff0c\u6211\u4eec\u5c31\u4fdd\u8bc1 $[1,5]$ \u662f\u6ca1\u6709 $0,1$ \u540c\u65f6\u5b58\u5728\u7684\uff0c\u518d\u5c3d\u91cf\u671d\u7740 $f\\to s$ \u7684\u65b9\u5411\u6539 $[1,5]$ \uff0c\u56e0\u4e3a\u8fd9\u662f\u6700\u540e\u4e00\u5929\u4e86\uff0c\u6211\u53d1\u73b0\u53ef\u4ee5\u76f4\u63a5\u628a $f$ \u53d8\u6210 $s$ \uff0c\u5e76\u4e14 $s$ \u4e32\u5168\u662f $0$\uff0c\u5979\u770b\u4e86\u4e00\u5b9a\u5f88\u5f00\u5fc3 (\u25cf\u02c7\u2200\u02c7\u25cf) \uff0c\u6211\u5c31\u8fd9\u4e48\u505a\u4e86\n> \n> ------\n>\u7b2c\u4e8c\u5929\uff0c\u5979\u8981\u770b $[1,5]$\uff0c\u56e0\u4e3a\u65e9\u4e0a\u6211\u7684\u52aa\u529b\uff0c\u5979\u5f00\u5fc3\u5730\u8e66\u8e66\u8df3\u8df3\u7684\u8d70\u4e86 ~\n\n\u5176\u5b9e\u6b63\u5e8f\u505a\u4e0d\u53ea\u662f\u5f88\u505a\u8d77\u6765\uff0c\u800c\u4e14\u6700\u5173\u952e\u7684\u662f\uff0c\u6211\u4eec\u9700\u8981\u81ea\u5df1\u8003\u8651\u6700\u4f18\u89e3\uff0c\u8fd9\u662f\u975e\u5e38\u56f0\u96be\u7684\uff0c\u800c\u6211\u4eec\u4ea4\u6362\u987a\u5e8f\u5bf9\u9898\u76ee\u7684\u7b54\u6848\u4e0d\u4f1a\u9020\u6210\u4efb\u4f55\u5f71\u54cd\uff0c\u4f46\u662f\u5374\u4f1a\u7ed9\u6211\u4eec\u7684\u5b9e\u73b0\u5e26\u6765\u5f88\u5927\u7684\u65b9\u4fbf\uff0c\u5e76\u4e14\u7a0d\u5fae\u5206\u6790\u4e00\u4e0b\u5c31\u4f1a\u53d1\u73b0\uff0c\u9006\u5e8f\u505a\uff0c\u4e0d\u9700\u8981\u6211\u4eec\u6709\u4efb\u4f55\u64cd\u4f5c\u7a7a\u95f4\u3002\n\n\u4f7f\u7528\u9006\u5411\u601d\u7ef4\uff0c\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u7b80\u5316\u8fd9\u4e2a\u95ee\u9898\u3002\u7136\u540e\u6211\u4eec\u6765\u8003\u8651\u600e\u4e48\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u6211\u4eec\u5c06\u4f1a\u4ece $f$ \u51fa\u53d1\uff0c\u6ee1\u8db3\u6bcf\u6b21\u533a\u95f4\u7684\u4e00\u81f4\u6027\uff0c\u81f4\u529b\u4e8e\u5f97\u5230 $s$ \u3002\n\n\u7531\u4e8e\u6211\u4eec\u53ea\u6709\u4e00\u4e2a\u64cd\u4f5c\uff1a\u4fee\u6539\u5b9a\u533a\u95f4\u5185\u7684\u4e8c\u8fdb\u5236\u4e32\uff0c\u5e76\u4e14\u6bcf\u6b21\u6700\u591a\u53ea\u80fd\u4fee\u6539\u4e2a\u6570**\u5c0f\u4e8e**\u533a\u95f4\u957f\u5ea6\u7684**\u4e00\u534a**\u3002\n\n\u5b9e\u9645\u4e0a\u8fd9\u5c31\u4ee3\u8868\u7740\u6211\u4eec\u53ea\u80fd\u6709\u4e00\u79cd\u4fee\u6539\u65b9\u5f0f\uff1a\u5c06 $0,1$ \u4e2d\u6570\u91cf\u5c11\u7684\u90a3\u4e00\u65b9\u4fee\u6539\u4e3a\u53e6\u4e00\u65b9\uff0c\u56e0\u4e3a\u53ea\u6709\u8fd9\u6837\u4fee\u6539\uff0c\u6211\u4eec\u624d\u65e2\u80fd\u4fdd\u8bc1\u533a\u95f4\u5185\u7684\u5b57\u7b26\u5b8c\u5168\u76f8\u540c\uff0c\u53c8\u80fd\u4fdd\u8bc1\u4fee\u6539\u7684\u6570\u91cf\u4e0d\u8d85\u8fc7\u533a\u95f4\u957f\u5ea6\u7684\u4e00\u534a\u3002\n\n\u4f46\u662f\u5982\u679c\u533a\u95f4\u5185 $0,1$ \u7684**\u6570\u91cf\u76f8\u540c**\uff0c\u90a3\u5c31\u6ca1\u529e\u6cd5\u4fee\u6539\u4e86\uff0c\u65e0\u8bba\u504f\u8892\u54ea\u4e00\u65b9\u90fd\u4e0d\u80fd\u5728\u4fee\u6539\u5c0f\u4e8e\u533a\u95f4\u957f\u5ea6\u7684\u4e00\u534a\u7684\u6761\u4ef6\u4e0b\u4fee\u6539\u6210\u540c\u4e00\u4e2a\u6570\u5b57\uff0c\u76f4\u63a5\u8f93\u51fa `NO` \u5373\u53ef\u3002\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u4f1a\u8ddf\u7740\u8fd9\u4e2a\u533a\u95f4\u7684\u8bbe\u5b9a\uff0c\u4e00\u6b65\u4e00\u6b65**\u6ca1\u6709\u4efb\u4f55\u64cd\u4f5c\u7a7a\u95f4**\u5730\u4ece\u5934\u4fee\u6539\u5230\u6700\u540e\uff0c\u6240\u4ee5\u5982\u679c\u6700\u540e\u6211\u4eec\u5f97\u5230\u7684\u5b57\u7b26\u4e32\uff0c\u5982\u679c\u5c31\u662f $s$\uff0c\u90a3\u4e48\u606d\u559c\u4f60\uff0c\u6210\u529f\u5b8c\u6210\u4e86\u8fd9\u4e2a\u4efb\u52a1\uff0c\u4f60\u4f1a\u5f88\u5f00\u5fc3\uff0c\u5979\u4f1a\u5f88\u5f00\u5fc3\uff0c\u6211\u4eec\u90fd\u83b7\u5f97\u4e86\u5feb\u4e50\uff0c\u76f4\u63a5\u8f93\u51fa `YES` \u5373\u53ef\u3002\n\n\u540c\u7406\uff0c\u5982\u679c\u6700\u540e\u5f97\u5230\u7684\u4e0d\u662f $s$\uff0c\u90a3\u4e48\u62b1\u6b49\uff0c\u8f93\u51fa `NO` \u3002\n\n\u6700\u540e\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u5feb\u901f\u5730\u5b9e\u73b0\u533a\u95f4\u4fee\u6539\u5462\uff1f\n\n\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u53ea\u9700\u8981\u6709\u4e24\u4e2a\u64cd\u4f5c\u5373\u53ef\uff1a\u533a\u95f4\u5168\u90e8\u4fee\u6539\uff08\u533a\u95f4\u67d3\u8272\uff09\uff0c\u533a\u95f4\u67e5\u8be2\uff08\u67e5\u8be2 $0,1$ \u7684\u4e2a\u6570\uff09\n\n\u800c\u6570\u636e\u5f88\u5927\uff1a$1 \\le t \\le 2 \\cdot 10^5,1 \\le n \\le 2 \\cdot 10^5,0 \\le q \\le 2 \\cdot 10^5$\uff0c\u9700\u8981 $O(Tqlogn)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4ee5\u53ca\u9ad8\u8d85\u7684\u5361\u5e38\u6280\u5de7\uff0c\u8fd9\u4e00\u5207\u65e0\u4e0d\u6307\u5f15\u7740\u4e00\u4e2a\u795e\u5947\u7684\u6570\u636e\u7ed3\u6784\uff1a\u7ebf\u6bb5\u6811 ~ \n\n\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u533a\u95f4\u548c\u5c31\u884c\u4e86\uff0c\u56e0\u4e3a\u533a\u95f4\u548c\u5c31\u662f1\u7684\u4e2a\u6570\u3002\n\n\u7531\u4e8e\u9700\u8981\u533a\u95f4\u67e5\u8be2\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u52a0\u4e0alazytag\uff0c\u5c31\u662f\u6211\u4eec\u4fee\u6539\u7684\u65f6\u5019\uff0c\u533a\u95f4\u662f $0$ \u8fd8\u662f $1$\u3002\u7531\u4e8e\u4e0d\u80fd\u521d\u59cb\u5316\u4e3a $0$ \uff0c\u91cd\u590d\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u8bb0\u5f97\u521d\u59cb\u5316\u4e3a `-1` \u5c31\u597d\u3002\n\n\u7136\u540e\u5c31\u662f\u5f88\u7b80\u5355\u7684\u4ee3\u7801\u4e86\uff1a\n\n**Code**\n\n\u6ce8\u610f\uff1a\u6bd2\u7624\u51fa\u9898\u4eba\u628a\u6570\u636e\u5f00\u5230\u4e86 $2\\times 10^5$\uff0c\u800c\u7ebf\u6bb5\u6811\u9700\u8981\u5f00\u56db\u500d\u7a7a\u95f4\u3002\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <map>\n#include <vector>\n#include <unordered_map>\n\nusing namespace std;\ntypedef long long ll;\ntypedef int itn;\nconst int N = 3e5 + 7, mod = 1e9 + 7;\nconst ll INF = 1e18 + 7;\n\nint n, m, q;\nint L[N], R[N];\nchar s[N], f[N];\n\nstruct Tree\n{\n    int l, r;\n    int sum;//\u7ef4\u62a4 1 \u7684\u4e2a\u6570, \u56e0\u4e3a 0 \u6c42\u548c\u8fd8\u662f 0 \u548c\u5c31\u662f 1 \u7684\u4e2a\u6570\n    int lz;//1 / 0\n}tr[N << 2];\n\nvoid push_up(int p)\n{\n    tr[p].sum = tr[p << 1].sum +  tr[p << 1 | 1].sum;\n}\n\nvoid push_down(int p)\n{\n     if(tr[p].lz == -1) return ;\n     tr[p << 1].lz = tr[p].lz;\n     tr[p << 1 | 1].lz = tr[p].lz;\n     tr[p << 1].sum = (tr[p << 1].r - tr[p << 1].l + 1) * tr[p].lz;//\u90fd\u662f\u7b49\u4e8e\u800c\u4e0d\u662f\u52a0\n     tr[p << 1 | 1].sum = (tr[p << 1 | 1].r - tr[p << 1 | 1].l + 1) * tr[p].lz;\n     tr[p].lz = -1;\n}\n\nvoid build(int p, int l, int r)//f\n{\n    tr[p].l = l, tr[p].r = r, tr[p].lz = -1;\n    if(l == r) {\n        tr[p].sum = f[l] - '0';\n        tr[p].lz = -1;\n        return ;\n    }\n    int mid = l + r >> 1;\n    build(p << 1, l, mid);\n    build(p << 1 | 1, mid + 1, r);\n    push_up(p);\n}\n\nvoid modify(int p, int l, int r, int val)\n{\n    if(tr[p].l >= l && tr[p].r <= r) {\n        tr[p].sum = (tr[p].r - tr[p].l + 1) * val;//\u8fd9\u91cc\u5168\u90e8\u53d8\u6210 1 \uff0csum \u7b49\u4e8e\u533a\u95f4\u957f\u5ea6\uff0c\u5168\u90e8\u53d8\u6210 0, sum \u5c31\u662f 0\n        tr[p].lz = val;\n        return ;\n    }\n    push_down(p);\n    int mid = tr[p].l + tr[p].r >> 1;\n    if(l <= mid) modify(p << 1, l, r, val);\n    if(r > mid) modify(p << 1 | 1, l, r, val);\n    push_up(p);\n}\n\nint query(int p, int l, int r)\n{\n    if(tr[p].l >= l && tr[p].r <= r) {\n        return tr[p].sum;\n    }\n    push_down(p);\n    int mid = tr[p].l + tr[p].r >> 1;\n    int res = 0;\n    if(l <= mid) res += query(p << 1, l, r);\n    if(r > mid) res += query(p << 1 | 1, l, r);\n    return res;\n}\n\nbool check()\n{\n    for(int i = 1; i <= n; ++ i) {\n        if(query(1, i, i) != s[i] - '0') {\n            return false;\n        }\n    }\n    return true;\n}\n\nbool solve()\n{\n    scanf(\"%d %d\", &n, &q);\n    scanf(\"%s %s\", s + 1, f + 1);\n    for (int i = 1; i <= q; ++ i) {\n        scanf(\"%d %d\", &L[i], &R[i]);\n    }\n    build (1, 1, n);\n    for(int i = q; i >= 1; -- i) {\n        int l = L[i], r = R[i];\n        int num1 = query(1, l, r);//sum\n        int len = r - l + 1;\n        if (num1 * 2 == len) return false;// 0 \u548c 1 \u7684\u957f\u5ea6\u76f8\u7b49 \n        else if(num1 * 2 < len) modify(1, l, r, 0);\n        else modify(1, l, r, 1);\n    }\n\n    if (!check()) {\n        return false;\n    }\n    return true;\n}\n\nitn t;\n\nint main()\n{\n    scanf(\"%d\", &t);\n    while (t -- ) {\n        if (solve()) {\n            puts(\"YES\");\n        }\n        else {\n            puts(\"NO\");\n        }\n    }\n    return 0;\n}\n```\n",
        "postTime": 1612497734,
        "uid": 262605,
        "name": "fanfansann",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1477B \u3010Nezzar and Binary String\u3011"
    },
    {
        "content": "\u9898\u76ee\u94fe\u63a5\uff1a\n\n[\u6d1b\u8c37](https://www.luogu.com.cn/problem/CF1477B \"\u6d1b\u8c37\")\n\n[Codeforces](http://codeforces.com/problemset/problem/1477/B \"Codeforces\")\n## Solution\n\u6211\u4e00\u5f00\u59cb\u4ee5\u4e3a\u662f\u9053\u7ed3\u8bba\u9898\uff0c\u4e00\u76f4\u60f3\u8d2a\u5fc3\u7b56\u7565\uff0c\u540e\u6765\u5361\u4e86\u4e8c\u5341\u591a\u5206\u949f\uff0c\u611f\u89c9\u4e0d\u884c\uff0c\u8d76\u7d27\u6362\u65b9\u6cd5\u3002\n\n\u8fd9\u9898\u4e0d\u80fd\u6b63\u7740\u505a\uff0c\u53ea\u80fd\u53cd\u8fc7\u6765\uff0c\u4ece\u7b54\u6848\u4e32\u5f80\u539f\u4e32\u63a8\uff0c\u56e0\u4e3a\u6b63\u7740\u505a\u6709\u540e\u6548\u6027\uff0c\u5341\u5206\u6076\u5fc3\u3002\u53cd\u8fc7\u6765\u505a\u4ee5\u540e\uff0c\u987a\u5e8f\u5c31\u53d8\u4e86\uff0c\u5373\u5148\u6539\u540e\u770b\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u68c0\u67e5\u7684\u533a\u95f4 $[l,r]$\uff0c\u6211\u4eec\u8fd9\u6b21\u4fee\u6539\uff0c\u4e00\u5b9a\u8981\u6539\u6210\u5168\u4e3a $0$ \u6216 $1$\uff0c\u7531\u4e8e\u6211\u4eec\u53ea\u80fd\u6539\u5c0f\u4e8e\u4e00\u534a\u7684\u5b57\u7b26\uff0c\u6240\u4ee5\u53ea\u80fd\u628a\u6570\u91cf\u5c0f\u7684\u53d8\u4e3a\u6570\u91cf\u591a\u7684\uff0c\u5982\u679c\u76f8\u540c\uff0c\u5219\u65e0\u6cd5\u6539\uff0c\u76f4\u63a5\u5224\u4e3a\u4e0d\u80fd\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u73b0\u5728\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898\u4e3a\uff1a\n+ \u67e5\u8be2\u533a\u95f4 $1$ \u7684\u4e2a\u6570\n+ \u5c06\u533a\u95f4\u5168\u90e8\u4fee\u6539\u4e3a $0$ \u6216 $1$\n\n\u5bf9\u4e8e\u95ee\u9898 $1$\uff0c\u76f4\u63a5\u533a\u95f4\u6c42\u548c\u5373\u53ef\u3002\u7ebf\u6bb5\u6811\u5373\u53ef\u5b8c\u7f8e\u89e3\u51b3\u3002\n\n\u6700\u540e\uff0c\u544a\u8beb\u5927\u5bb6\uff0c\u6c38\u8fdc\u4e0d\u8981\u76f8\u4fe1 memset \u7684\u590d\u6742\u5ea6\uff0c\u80fd\u4e0d\u7528\u5c31\u4e0d\u7528\u3002\u8fd9\u9898\u8981\u628a lazy \u6807\u8bb0\u6700\u5f00\u59cb\u6253\u6210 $-1$\uff0c\u4e0d\u8981 memset\uff0c\u5efa\u6811\u65f6\u89e3\u51b3\u5c31\u53ef\u4ee5\u4e86\uff0c\u4e0d\u7136\u4f1a T\u3002\n## Code\n```cpp\n#include<bits/stdc++.h>\n#define ls p*2\n#define rs p*2+1\nusing namespace std;\nvoid read(int &x)\n{\n\tchar ch=getchar();\n\tint r=0,w=1;\n\twhile(!isdigit(ch))w=ch=='-'?-1:1,ch=getchar();\n\twhile(isdigit(ch))r=(r<<3)+(r<<1)+(ch^48),ch=getchar();\n\tx=r*w;\n}\nconst int N=2e5+7;\nchar c[N],t[N];\nint sum[N*4],lazy[N*4],size[N*4],ans;\nvoid update(int p)\n{\n\tsize[p]=size[ls]+size[rs];\n\tsum[p]=sum[ls]+sum[rs];\n}\nvoid build(int p,int l,int r)\n{\n\tlazy[p]=-1;\n\tif(l==r)\n\t{\n\t\tsum[p]=t[l]-'0';\n\t\tsize[p]=1;\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tbuild(ls,l,mid);\n\tbuild(rs,mid+1,r);\n\tupdate(p);\n}\nvoid pushdown(int p)\n{\n\tlazy[ls]=lazy[p];\n\tsum[ls]=size[ls]*lazy[p];\n\tlazy[rs]=lazy[p];\n\tsum[rs]=size[rs]*lazy[p];\n\tlazy[p]=-1;\n}\nvoid change(int p,int l,int r,int x,int y,int k)\n{\n\tif(x<=l&&r<=y)\n\t{\n\t\tlazy[p]=k;\n\t\tsum[p]=size[p]*k;\n\t\treturn;\n\t}\n\tif(lazy[p]!=-1)pushdown(p);\n\tint mid=l+r>>1;\n\tif(x<=mid)change(ls,l,mid,x,y,k);\n\tif(y>mid)change(rs,mid+1,r,x,y,k);\n\tupdate(p);\n}\nvoid query(int p,int l,int r,int x,int y)\n{\n\tif(x<=l&&r<=y)\n\t{\n\t\tans+=sum[p];\n\t\treturn;\n\t}\n\tif(lazy[p]!=-1)pushdown(p);\n\tint mid=l+r>>1;\n\tif(x<=mid)query(ls,l,mid,x,y);\n\tif(y>mid)query(rs,mid+1,r,x,y);\n}\nint qx[N],qy[N];\nvoid solve()\n{\n\tint n,q;\n\tread(n);read(q);\n\tscanf(\"%s\",c+1);scanf(\"%s\",t+1);\n\tbuild(1,1,n);\n\tfor(int i=1;i<=q;i++)\n\t\tread(qx[i]),read(qy[i]);\n\tfor(int i=q;i>=1;i--)\n\t{\n\t\tans=0;\n\t\tint x=qx[i],y=qy[i];\n\t\tint len=y-x+1;\n\t\tquery(1,1,n,x,y);\n\t\tif(ans==len-ans){puts(\"NO\");return;}\n\t\tif(ans<len-ans)change(1,1,n,x,y,0);\n\t\telse change(1,1,n,x,y,1);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tans=0;\n\t\tquery(1,1,n,i,i);\n\t\tif(ans!=c[i]-'0'){puts(\"NO\");return;}\n\t}\n\tputs(\"YES\");\n}\nint main()\n{\n\tint T;\n\tread(T);\n\twhile(T--)solve();\n\treturn 0;\n}\n```",
        "postTime": 1660656233,
        "uid": 415256,
        "name": "Epoch_L",
        "ccfLevel": 5,
        "title": "CF1477B Nezzar and Binary String"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\nA \u548c B \u5728\u73a9\u6e38\u620f\uff0c\u5982\u679c\u6709\u4e00\u5929 B \u6765\u68c0\u67e5\u5b57\u7b26\u4e32\u7684\u4e00\u6bb5\u533a\u95f4\u4e0d\u662f\u5168\u662f 1 \u6216 \u5168\u662f 0\uff0c\u90a3\u4e48 B \u5c31\u4f1a\u4e0d\u723d\uff0c\u4e8e\u662f\u6bcf\u6b21 B \u68c0\u67e5\u524d A \u90fd\u53ef\u4ee5\u5bf9\u4e00\u6bb5\u533a\u95f4\u505a\u4fee\u6539\uff08\u5168\u6539\u4e3a 1 \u6216 0\uff09\u3002\u73b0\u5728\u8981\u6c42\u5728 B \u6bcf\u5929\u90fd\u5f00\u5fc3\u7684\u60c5\u51b5\u4e0b\uff0c\u5c06\u5b57\u7b26\u4e32 S \u6539\u4e3a \u5b57\u7b26\u4e32 T\u3002\n\n## \u601d\u8def\n\n\u6211\u4eec\u6a21\u62df\u4e00\u4e0b\u6837\u4f8b\u7684\u8fc7\u7a0b\uff0c\u53d1\u73b0\u6b63\u7740\u4e0d\u597d\u505a\uff0c\u8003\u8651\u53cd\u8fc7\u6765\uff0c\u5373\u5c06 T \u6539\u4e3a F\u3002\n\n\u5bf9\u4e8e \u4e00\u6bb5\u533a\u95f4 $ [l_i,r_i] $\n\n- \u5982\u679c 01 \u6570\u91cf\u76f8\u540c\uff0c\u4e0d\u80fd\u6539\u53d8\u5b57\u7b26\u4e32\u3002\n- \u5982\u679c 1 \u7684\u6570\u91cf\u8d85\u8fc7\u4e00\u534a\uff0c\u5c31\u53ea\u80fd\u628a\u6240\u6709 0 \u6539\u4e3a 1\u3002\n- \u5982\u679c 1 \u7684\u6570\u91cf\u6ca1\u8d85\u8fc7\u4e00\u534a\uff0c\u5c31\u53ea\u628a\u6240\u6709 1 \u6539\u4e3a 0\u3002\n\n\u518d\u770b\u5230\u8fd9\u4e2a\u6570\u636e\u8303\u56f4\uff1a\n \n$ 1 \\leq t \\leq 2 \\cdot 10^5 $\n\n$ 1 \\leq n \\leq 2 \\cdot 10^5 $\n\n$ 0 \\leq q \\leq 2 \\cdot 10^5 $\n\n~~\u6bd2\u7624\u554a~~\u5c31\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u5427\uff0c\u663e\u7136\u53ea\u7528\u7ef4\u62a4 1 \u7684\u4e2a\u6570\u3002\n\n\u7136\u540e\u5c31\u662f\u7b80\u5355\u7684\u6a21\u677f\u8fc7\u7a0b\u3002\u4e0d\u4f1a\u7684\u8df3\u8f6c\u81f3 [P3372](https://www.luogu.com.cn/problem/P3372)\n\n## \u4ee3\u7801\n\n```cpp\n\n//\u795d\u5927\u5bb6\u5b66\u4e60\u6109\u5feb!\n#include <bits/stdc++.h>\n\nconst int maxn=2e5+10;\nint a[maxn],b[maxn];\nchar s[maxn],t[maxn];\nint n,m;\n\nstruct Tree{\n\tint l,r;\n\tint sum,lz;\n}tree[maxn<<2];\n\ninline void pushdown(int x){\n\tif(tree[x].lz==-1) return;\n\tint l=tree[x].l,r=tree[x].r,mid=(l+r)>>1;\n\ttree[x<<1].sum=(mid-l+1)*tree[x].lz;\n\ttree[x<<1|1].sum=(r-mid)*tree[x].lz;\n\ttree[x<<1].lz=tree[x].lz;\n\ttree[x<<1|1].lz=tree[x].lz;\n\ttree[x].lz=-1;\n}\ninline void pushup(int x){\n\ttree[x].sum=tree[x<<1].sum+tree[x<<1|1].sum;\n}\n\ninline void build(int now,int l,int r){\n\ttree[now].l=l;\n\ttree[now].r=r;\n\ttree[now].lz=-1;\n\tif(l==r){\n\t\ttree[now].sum=t[l]-'0';\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(now<<1,l,mid);\n\tbuild(now<<1|1,mid+1,r);\n\tpushup(now);\n}\nvoid update(int now,int l,int r,int ql,int qr,int val){\n\tif(ql<=l&&qr>=r){\n\t\ttree[now].sum=(r-l+1)*val;\n\t\ttree[now].lz=val;\n\t\treturn;\n\t}\n\tpushdown(now);\n\tint mid=(l+r)>>1;\n\tif(ql<=mid) update(now<<1,l,mid,ql,qr,val);\n\tif(qr>mid) update(now<<1|1,mid+1,r,ql,qr,val);\n\tpushup(now);\n}\nint query(int now,int l,int r,int ql,int qr){\n\tif(ql<=l&&qr>=r) return tree[now].sum;\n\tpushdown(now);\n\tint mid=(l+r)>>1,sum=0;\n\tif(ql<=mid) sum+=query(now<<1,l,mid,ql,qr);\n\tif(qr>mid) sum+=query(now<<1|1,mid+1,r,ql,qr);\n\treturn sum;\n}\n\ninline bool check(){\n\tfor(int i=1;i<=n;i++){\n\t\tif(query(1,1,n,i,i)!=s[i]-'0') return 0;\n\t}\n\treturn 1;\n}\n\ninline bool solve(){\n\tfor(int i=m;i>=1;i--){\n\t\tint l=a[i],r=b[i];\n\t\tint num1=query(1,1,n,l,r),len=r-l+1;\n\t\tif(num1*2==len) return 0;\n\t\telse if(num1*2<len) update(1,1,n,l,r,0);\n\t\telse update(1,1,n,l,r,1);\n\t}\n\tif(check()) return 1;\n\telse return 0;\n}\n\nint main(){\n\t\n\tint q;\n\t\n\tscanf(\"%d\",&q);\n\t\n\twhile(q--){\n\t\tscanf(\"%d %d\",&n,&m);\n\t\tscanf(\"%s %s\",s+1,t+1);\n\t\tfor(int i=1;i<=m;i++) scanf(\"%d %d\",&a[i],&b[i]);\n\t\tbuild(1,1,n);\n\t\tif(solve()) puts(\"YES\");\n\t\telse puts(\"NO\");\n\t}\n\t\n\treturn 0;\n}\n\n```\n",
        "postTime": 1640412413,
        "uid": 234469,
        "name": "hxyqwq",
        "ccfLevel": 6,
        "title": "CF1477B \u9898\u89e3"
    },
    {
        "content": "# CF1478E & CF1477B\n\n## [\u6d1b\u8c37\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1477B)\n\n## [CF\u4f20\u9001\u95e8](http://codeforces.com/problemset/problem/1477/B)\n\n## $Question \\ Meaning$\n\n\u6709$A$\u548c$B$\u5728\u73a9\u5b57\u7b26\u4e32\u6e38\u620f\uff1a\n\n\u7ed9\u5b9a\u5b57\u7b26\u4e32$s$\uff0c\u73b0\u5728\u6709$q$\u5929\uff0c\u6bcf\u5929\u90fd\u8981\u67e5\u8be2\u4e00\u6bb5$l_i \\sim r_i$\uff0c$B$\u95ee\u662f\u4e0d\u662f\u5168\u662f$0$\u6216$1$\uff0c\u5982\u679c\u4e0d\u662f\uff0c$B$\u5c31\u4f1a\u4e0d\u723d\u3002\u4f46\u662f\u5728\u8fd9\u4e4b\u524d\uff0c$A$\u80fd\u5c06\u5176\u6539\u53d8\u4e0d\u8d85\u8fc7\u4e00\u534a\u7684\u5b57\u7b26\uff0c\u4e0d\u8ba9$B$\u53d8\u5f97\u4e0d\u723d\uff0c\u95ee\u80fd\u4e0d\u80fd\u5728\u4e0d\u8ba9$B$\u53d8\u5f97\u723d\u7684\u540c\u65f6\uff0c\u8ba9$s$\u5728$q$\u5929\u540e\u53d8\u6210$t$\u3002\n\n## $Solution$\n\n\u6211\u4eec\u624b\u73a9\u6837\u4f8b\u5f97\u4ee5\u53d1\u73b0\uff0c\u6b63\u7740\u6c42\u5e76\u4e0d\u4f1a\u90a3\u4e48\u597d\u505a\uff0c\u56e0\u4e3a\u5f53\u524d\u7684\u6bcf\u4e00\u6b65\u5173\u7cfb\u7740\u4ee5\u540e\u7684\u6bcf\u4e00\u6b65\u3002\n\n\u90a3\u4e48\u5728\u8fd9\u79cd\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u8003\u8651**\u53cd\u7740\u6c42**\n\n\u5bf9\u4e8e\u6bcf\u4e00\u7ec4$l_i \\sim r_i$\uff0c\u5206\u7c7b\u8ba8\u8bba\u5176\u4e2d$01$\u6570\u91cf\uff1a\n\n1. \u82e5\u5176\u4e2d\u8d85\u8fc7\u4e00\u534a\u662f$1$\uff0c\u6b64\u65f6\u4e00\u5b9a\u6709\u4e0d\u8db3\u4e00\u534a\u7684$0$\uff0c\u90a3\u4e48\u6211\u4eec\u5c06\u6240\u6709\u7684$0$\u6539\u6210$1$\u5373\u53ef\u3002\n\n2. \u82e5\u5176\u4e2d\u4e0d\u8db3\u4e00\u534a\u7684$1$\uff0c\u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u5c06\u6240\u6709\u7684$1$\u6539\u6210$0$\u5373\u53ef\u3002\n\n3. \u82e5\u5176\u4e2d\u7684$01$\u6570\u91cf\u76f8\u7b49\uff0c\u5219\u6211\u4eec\u4e0d\u80fd\u6539\u52a8\u5b57\u7b26\u4e32\u3002\n\n\u6839\u636e\u4e0a\u9762\u7684\u5206\u7c7b\u8ba8\u8bba\u53ef\u77e5\uff0c\u5bf9\u4e8e$1st$\u3001$2nd$\u7684\u60c5\u51b5\u6211\u4eec\u53ef\u4ee5\u56de\u590d\uff0c\u4f46\u662f$3rd$\u4e0d\u53ef\u4ee5\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u4e8e\u6bcf\u4e00\u6bb5\u6539\u5b83\u7684$0$\u548c$1$\uff0c\u5224\u65ad\u533a\u95f4\u5185$01$\u6570\u91cf\uff0c\u6539\u5b8c\u4e4b\u540e\u8be2\u95ee\u4e24\u5b57\u7b26\u4e32\u662f\u5426\u76f8\u7b49\u5373\u53ef\u3002\n\n## $Code$\n```cpp\n#include <algorithm>\n#include <iostream>\n\nusing namespace std;\n\nconst int N = 2e5 + 10;\n\nint T, n, q;\nchar s[N], f[N];\nint l[N], r[N];\n\nstruct segement_tree {\n  int l, r;\n  int sum, lazy;\n} t[N << 2];\n\nvoid build(int root, int l, int r) {\n  t[root].lazy = -1;\n  t[root].l = l, t[root].r = r;\n  if (l >= r) return;\n  int mid = (l + r) >> 1;\n  build(root << 1, l, mid);\n  build(root << 1 | 1, mid + 1, r);\n}\n\nvoid pushup(int root) {\n  t[root].sum = t[root << 1].sum + t[root << 1 | 1].sum;\n}\n\nvoid pushdown(int root) {\n  if (t[root].lazy != -1) {\n    int& s = t[root].lazy;\n    t[root << 1].lazy = t[root << 1 | 1].lazy = s;\n    t[root << 1].sum = (t[root << 1].r - t[root << 1].l + 1) * s;\n    t[root << 1 | 1].sum = (t[root << 1 | 1].r - t[root << 1 | 1].l + 1) * s;\n    t[root].lazy = -1;\n  }\n}\n\nvoid update(int root, int l, int r, int v) {\n  int L = t[root].l, R = t[root].r;\n  if (l <= L && R <= r) {\n    t[root].lazy = v;\n    t[root].sum = (R - L + 1) * v;\n    return;\n  }\n  pushdown(root);\n  int mid = (L + R) >> 1;\n  if (l <= mid) update(root << 1, l, r, v);\n  if (r > mid) update(root << 1 | 1, l, r, v);\n  pushup(root);\n}\n\nint query(int root, int l, int r) {\n  int L = t[root].l, R = t[root].r;\n  if (l <= L && R <= r) {\n    return t[root].sum;\n  }\n  pushdown(root);\n  int mid = (L + R) >> 1;\n  if (r <= mid) return query(root << 1, l, r);\n  if (l > mid) return query(root << 1 | 1, l, r);\n  return query(root << 1, l, r) + query(root << 1 | 1, l, r);\n}\n\nbool check(bool ok) {\n  for (int i = 1; i <= n; i++) {\n    if (query(1, i, i) != s[i] - '0') {\n      return 0;\n    }\n  }\n  return 1 && ok;\n}\n\nvoid solve() {\n  scanf(\"%d %d\", &n, &q);\n  scanf(\"%s %s\", s + 1, f + 1);\n  for (int i = 0; i < q; i++) {\n    scanf(\"%d %d\", &l[i], &r[i]);\n  }\n  build(1, 1, n);\n  for (int i = 1; i <= n; i++) {\n    update(1, i, i, f[i] - '0');\n  }\n  bool ok = 1;\n  for (int i = q - 1; i >= 0 && ok; i--) {\n    int num = query(1, l[i], r[i]);\n    if (num * 2 == r[i] - l[i] + 1) {\n      ok = 0;\n    } else if (num * 2 < r[i] - l[i] + 1) {\n      update(1, l[i], r[i], 0);\n    } else {\n      update(1, l[i], r[i], 1);\n    }\n  }\n  puts(check(ok) ? \"YES\" : \"NO\");\n}\n\nint main() {\n  scanf(\"%d\", &T);\n  while (T--) {\n    solve();\n  }\n  return 0;\n}\n```\n\n## $After \\ the \\ problem \\ is \\ solved$\n\n\u5176\u5b9e\u5bf9\u4e8e\u6240\u6709\u9898\u76ee\u6765\u8bb2\uff0c\u5982\u679c\u6b63\u9762\u4e0d\u597d\u6c42\u7684\u8bdd\uff0c\u6700\u597d\u7684\u601d\u8def\u5c31\u662f\u4ece\u53cd\u9762\u5165\u624b\u3002\n\n**Update 2021/2/2 \u589e\u52a0\u4e86\u4ee3\u7801**",
        "postTime": 1612254658,
        "uid": 369251,
        "name": "\u80d6\u5934\u9c7c\u5b66\u5458",
        "ccfLevel": 5,
        "title": "CF1478E & CF1477B"
    },
    {
        "content": "\u7b80\u5355\u6570\u636e\u7ed3\u6784\u3002              \n\n\u6211\u4eec\u53d1\u73b0\u539f\u9898\u8981\u6c42\u67e5\u8be2\u4e00\u6b21\uff0c\u4fee\u6539\u4e00\u6b21\u3002\u8fd9\u6837\u7684\u64cd\u4f5c\u8ba9\u4eba\u5f88\u96be\u4e0b\u624b\uff0c\u6bd5\u7adf\u6211\u4eec\u4e0d\u77e5\u9053\u8981\u6539\u54ea\u4e9b\u3002               \n\n\u6240\u4ee5\u5148\u6765\u627e\u6027\u8d28\uff0c\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\u5982\u679c\u6211\u4eec\u662f\u5148\u4fee\u6539\u533a\u95f4\u518d\u67e5\u8be2\u533a\u95f4\u7684\u8bdd\uff0c\u5c31\u770b 1 \u548c 0 \u8c01\u591a\u5c31\u597d\u4e86\u7136\u540e\u533a\u95f4\u8986\u76d6\uff0c\u6700\u540e\u5224\u65ad\u4e00\u4e0b\u662f\u4e0d\u662f\u8fd8\u539f\u6210\u4e86\u539f\u5e8f\u5217\u5373\u53ef\u3002                 \n\n\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u7ed9\u5b9a\u4e86\u521d\u72b6\u6001\uff0c\u53c8\u7ed9\u5b9a\u4e86\u672b\u72b6\u6001\uff0c\u7528\u5e38\u89c1\u7684 trick \u5012\u5e8f\u5904\u7406\uff0c\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\u8fd9\u9053\u9898\u53d8\u6210\u4e86\u4e0a\u8ff0\u7684\u95ee\u9898\uff0c\u76f4\u63a5\u6a21\u62df\u5c31\u597d\u4e86\u3002                     \n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int Len = 1e6 + 5;\nint n,m,ans[Len << 2],tag[Len << 2];\nchar s[Len],ss[Len];\nstruct node\n{\n\tint l,r;\n}Sec[Len];\nint ls(int x){return x << 1;}\nint rs(int x){return x << 1 | 1;}\nvoid push_up(int x){ans[x] = ans[ls(x)] + ans[rs(x)];}\nvoid push_down(int p,int l,int r)\n{\n\tif(tag[p] != -1)\n\t{\n\t\tint mid = (l + r) >> 1;\n\t\tans[ls(p)] = tag[p] * (mid - l + 1) , tag[ls(p)] = tag[p];\n\t\tans[rs(p)] = tag[p] * (r - mid) , tag[rs(p)] = tag[p];\n\t\ttag[p] = -1;\n\t}\n}\nvoid build(int p,int l,int r)\n{\n\ttag[p] = -1;\n\tif(l == r)\n\t{\n\t\tans[p] = (ss[l] == '1');\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tbuild(ls(p) , l , mid);\n\tbuild(rs(p) , mid + 1 , r);\n\tpush_up(p);\n}\nvoid update(int p,int l,int r,int nl,int nr,int w)\n{\n\tif(nl <= l && nr >= r)\n\t{\n\t\tans[p] = (r - l + 1) * w;\n\t\ttag[p] = w;\n\t\treturn;\n\t}\n\tpush_down(p , l , r);\n\tint mid = (l + r) >> 1;\n\tif(nl <= mid) update(ls(p) , l , mid , nl , nr , w);\n\tif(nr > mid) update(rs(p) , mid + 1 , r , nl , nr , w);\n\tpush_up(p);\n}\nint query(int p,int l,int r,int nl,int nr)\n{\n\tif(nl <= l && nr >= r) return ans[p];\n\tpush_down(p , l , r);\n\tint mid = (l + r) >> 1 , res = 0;\n\tif(nl <= mid) res += query(ls(p) , l , mid , nl , nr);\n\tif(nr > mid) res += query(rs(p) , mid + 1 , r , nl , nr);\n\treturn res;\n}\nbool check()\n{\n\tbuild(1 , 1 , n);\n\tfor(int i = m ; i >= 1 ; i --) \n\t{\n\t\tint num = query(1 , 1 , n , Sec[i].l , Sec[i].r);\n\t\tif(num * 2 == Sec[i].r - Sec[i].l + 1) return 0;\n\t\tif(num * 2 > Sec[i].r - Sec[i].l + 1) update(1 , 1 , n , Sec[i].l , Sec[i].r , 1);\n\t\telse update(1 , 1 , n , Sec[i].l , Sec[i].r , 0);\n\t}\n\t//query(1 , 1 , n , 3 , 3); \n\tfor(int i = 1 ; i <= n ; i ++) \n\t{\n\t\tint sim = s[i] - '0';\n\t\tif(query(1 , 1 , n , i , i) != sim) return 0;\n\t}\n\treturn 1;\n}\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t --)\n\t{\n\t\tscanf(\"%d %d\",&n,&m);scanf(\"%s\",s + 1);\n\t\tscanf(\"%s\",ss + 1);\n\t\tfor(int i = 1 ; i <= m ; i ++) scanf(\"%d %d\",&Sec[i].l,&Sec[i].r);\n\t\tif(check()) puts(\"YES\");\n\t\telse puts(\"NO\");\n\t}\n\treturn 0;\n} \n```",
        "postTime": 1620398263,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1477B Nezzar and Binary String"
    },
    {
        "content": "#### [\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/isonder/p/14348325.html)\n\n#### \u4e2d\u6587\u9898\u610f:\n\n$T$ \u7ec4\u6570\u636e\n\n\u7ed9\u4f60\u4e24\u4e2a\u957f\u5ea6\u4e3a $n$ \u768401\u4e32 $s,f,$\u6709 $q$ \u6b21\u8be2\u95ee\u3002\n\n\u6bcf\u6b21\u8be2\u95ee\u6709\u533a\u95f4 $[\\ l,r\\ ]$ ,\u5982\u679c $[\\ l,r\\ ]$ \u540c\u65f6\u5305\u542b$0$\u548c$1$\uff0c\u5219\u8be2\u95ee\u7ec8\u6b62\uff0c\u5426\u5219\u4f60\u53ef\u4ee5\u6539\u53d8\u533a\u95f4$[\\ l,r\\ ]$ \u5185\u4e25\u683c\u5c0f\u4e8e $len_{lr}$ \u7684\u6570\u5b57\u3002\n\n\u95ee\u662f\u5426\u53ef\u4ee5\u4f7f\u5f97\u8be2\u95ee\u4e0d\u7ec8\u6b62\uff0c\u4e14\u7ecf\u8fc7 $q$ \u6b21\u8be2\u95ee\u540e\u53ef\u4ee5\u5c06$s$\u6539\u4e3a$f$\u3002\n\n#### \u524d\u7f6e\u77e5\u8bc6:\n\n###### \u7ebf\u6bb5\u6811\n\n~~\u6ca1\u4e86~~\n\n#### \u601d\u8def:\n\n\u53d1\u73b0\u6ca1\u6cd5\u6b63\u5e8f\u63a8\u8fc7\u53bb(~~\u53cd\u6b63\u6211\u4e0d\u4f1a~~)\uff0c\u8003\u8651\u6839\u636e\u8be2\u95ee\u9006\u63a8\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e $f$ ,\u548c $q_{1},q_{2}$\u00b7\u00b7\u00b7$q_{n}$ ,\u7528 $l_{i},r_{i}$ \u6765\u8868\u793a $q_{i}$ , $s_{i}$\u8868\u793a\u7ecf\u8fc7\u524d $i$ \u6b21\u8be2\u95ee\u540e\u7684\u5b57\u7b26\u4e32 $s$ \u3002\n\n\u5bf9\u4e8e\u7b2c $n$ \u6b21\u8be2\u95ee\uff0c\u5f53\u4e14\u4ec5\u5f53 $s_{n-1}$\u4e2d\u7684 $[l_{n},r_{n}]$ \u5168\u4e3a $k$ ( $k$ $\\in$ $(0,1)$ ) ,$f$ \u5728 $[l_{n},r_{n}]$ \u5185($k\\oplus  1$)\u7684\u6570\u91cf$num_{k\\oplus  1}$ $<$ $len_{lr}$ \u65f6,\n\n$s_{n-1}$ \u53ef\u8f6c\u5316 $f$ \u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e $f$ \u4ece $n$ \u5f00\u59cb\u5411\u524d\u904d\u5386\u8be2\u95ee\u3002\u5bf9\u4e8e $[l_{i},r_{i}]$ , \u5c06  $[l_{i},r_{i}]$  \u5185\u6570\u91cf\u8f83\u5c11\u7684\u6570\u5b57\u6539\u4e3a\u53e6\u4e00\u4e2a\u6570\u5b57\u3002\n\n~~\u663e\u7136~~\uff0c\u5f53 $[l_{i},r_{i}]$ \u5185 $num_{1} = num_{0}$ \u65f6\uff0c\u8be2\u95ee\u4f1a\u7ec8\u6b62\uff0c\u56e0\u4e3a\u6539\u53d8\u91cf\u5fc5\u987b\u4e25\u683c\u5c0f\u4e8e\u533a\u95f4\u957f\u5ea6\u7684\u4e00\u534a\u3002\n\n\u904d\u5386\u5230\u6700\u540e\u5224\u65ad $s$ \u548c\u7ecf\u8fc7\u8f6c\u5316\u7684 $f$ \u662f\u5426\u76f8\u540c\u5c31\u884c\u4e86\u3002\n\n#### \u505a\u6cd5:\n\n\u5bf9\u4e8e\u533a\u95f4\uff0c\u67e5\u8be2\u548c\u6539\u53d8\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u5728 $log\\ n$ \u7684\u590d\u6742\u5ea6\u4e0b\u89e3\u51b3\u3002\n\n\u9996\u5148\u5bf9\u4e8e $f$ \u5efa\u7acb\u7ebf\u6bb5\u6811\uff0c\u7ef4\u62a4\u533a\u95f4\u5185 $1$ \u7684\u6570\u91cf\u3002\n\n\u5bf9\u4e8e\u533a\u95f4\u4fee\u6539\uff0c\u5efa\u7acb  $lazy$  \u6807\u8bb0\uff0c$-1$ \u8868\u793a\u4e0d\u53d8\uff0c$0$ \u8868\u793a  $lazy$  \u4e0b\u7684\u533a\u95f4\u5168\u4e3a$0$\uff0c$1$ \u8868\u793a  $lazy$  \u4e0b\u7684\u533a\u95f4\u5168\u4e3a$1$\u3002\n\n$pusdown$ \u64cd\u4f5c:\n```cpp\ninline void pushdown(int p,int l,int r)\n{\n\tif(laz[p]==-1)//\u672a\u88ab\u6807\u8bb0\u8df3\u8fc7\n\t\treturn ;\n\tint mid=(l+r)>>1;\n\tif(laz[p])//\u6807\u8bb0\u4e3a1\n\t{\n\t\ttr[p<<1]=(mid-l+1);\n\t\ttr[p<<1|1]=(r-mid);\n\t\tlaz[p<<1]=laz[p<<1|1]=1;\n\t\tlaz[p]=-1;\n\t\treturn ;\n\t}\n\ttr[p<<1]=tr[p<<1|1]=0;//\u6807\u8bb0\u4e3a0\n\tlaz[p<<1]=laz[p<<1|1]=0;\n\tlaz[p]=-1;\n}\n```\n\u5269\u4e0b\u7684\u5c31\u662f\u7ebf\u6bb5\u6811\u7684\u57fa\u672c\u64cd\u4f5c\u4e86\u3002\n\n#### Code:\n```cpp\n#include<bits/stdc++.h>\n#define N 240000\nusing namespace std;\n \nint t,n,q;\nchar s[N],f[N];\nint ql[N],qr[N],tr[N<<2],laz[N<<2];\n \ninline int read()\n{\n\tchar a=0;int w=1,x=0;\n\twhile(a<'0'||a>'9'){if(a=='-')w=-1;a=getchar();}\n\twhile(a<='9'&&a>='0'){x=(x<<3)+(x<<1)+(a^48);a=getchar();}\n\treturn x*w;\n}\n \ninline void pushdown(int p,int l,int r)\n{\n\tif(laz[p]==-1)//\u672a\u88ab\u6807\u8bb0\u8df3\u8fc7\n\t\treturn ;\n\tint mid=(l+r)>>1;\n\tif(laz[p])//\u6807\u8bb0\u4e3a1\n\t{\n\t\ttr[p<<1]=(mid-l+1);\n\t\ttr[p<<1|1]=(r-mid);\n\t\tlaz[p<<1]=laz[p<<1|1]=1;\n\t\tlaz[p]=-1;\n\t\treturn ;\n\t}\n\ttr[p<<1]=tr[p<<1|1]=0;//\u6807\u8bb0\u4e3a0\n\tlaz[p<<1]=laz[p<<1|1]=0;\n\tlaz[p]=-1;\n}\n \nvoid build(int p,int l,int r)//\u5efa\u6811\n{\n\tlaz[p]=-1;\n\tif(l==r)\n\t{\n\t\ttr[p]=(f[l]^48);\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(p<<1,l,mid);\n\tbuild(p<<1|1,mid+1,r);\n\ttr[p]=tr[p<<1]+tr[p<<1|1];\n}\n \nint que(int p,int l,int r,int L,int R)//\u67e5\u8be21\u7684\u6570\u91cf\n{\n\tif(L<=l&&r<=R)\n\t\treturn tr[p];\n\tpushdown(p,l,r);\n\tint mid=(l+r)>>1;\n\tint ans=0;\n\tif(mid>=L)\n\t\tans+=que(p<<1,l,mid,L,R);\n\tif(mid<R)\n\t\tans+=que(p<<1|1,mid+1,r,L,R);\n\treturn ans;\n}\n \nvoid modify(int p,int l,int r,int L,int R,int opt)//\u533a\u95f4\u4fee\u6539\n{\n\tif(L<=l&&r<=R)\n\t{\n\t\ttr[p]=opt*(r-l+1);\n\t\tlaz[p]=opt;\n\t\treturn ;\n\t}\n\tpushdown(p,l,r);\n\tint mid=(l+r)>>1;\n\tif(mid>=L)\n\t\tmodify(p<<1,l,mid,L,R,opt);\n\tif(mid<R)\n\t\tmodify(p<<1|1,mid+1,r,L,R,opt);\n\ttr[p]=tr[p<<1]+tr[p<<1|1];\n}\n \nint main()\n{\n\tt=read();\n\twhile(t--)\n\t{\n\t\tn=read();\n\t\tq=read();\n\t\tint flag=1;\n\t\tscanf(\"%s%s\",(s+1),(f+1));\n\t\tfor(register int i=1;i<=q;i++)\n\t\t{\n\t\t\tql[i]=read();\n\t\t\tqr[i]=read();\n\t\t}\n\t\tbuild(1,1,n);\n\t\tfor(register int i=q;i>=1;i--)\n\t\t{\n\t\t\tint len=qr[i]-ql[i]+1;//\u533a\u95f4\u957f\u5ea6\n\t\t\tint num=que(1,1,n,ql[i],qr[i]);//\u67e5\u8be2\u533a\u95f4\u51851\u7684\u6570\u91cf\n\t\t\tif( num==len-num )//\u533a\u95f4\u51850\u7684\u6570\u91cf\u4e3a len-num , 0\u548c1\u6570\u91cf\u76f8\u540c\u65f6\u4e0d\u53ef\u80fd\u6210\u7acb\n\t\t\t{\n\t\t\t\tflag=0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmodify(1,1,n,ql[i],qr[i],num>(len-num) );//\u533a\u95f4\u4fee\u6539\n\t\t}\n\t\tif(!flag)\n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tfor(register int i=1;i<=n;i++)\n\t\t{\n\t\t\tint num=que(1,1,n,i,i);//\u53d6\u51fa\u7ecf\u8fc7q\u6b21\u8be2\u95ee\u540ef\u7684\u7b2ci\u4f4d\n\t\t\tif(num!=(s[i]^48))//\u5224\u65adf\u548cs\u662f\u5426\u76f8\u7b49\uff0c\u4e0d\u76f8\u7b49\u9000\u51fa\n\t\t\t{\n\t\t\t\tflag=0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!flag)\n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tprintf(\"YES\\n\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1612440730,
        "uid": 242234,
        "name": "\u4e58\u6e58\u53bb",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1477B \u3010Nezzar and Binary String\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5982\u679c\u4ece $a$ \u4e32\u6b63\u5e8f\u5904\u7406\u5904\u7406\u6210 $b$ \u4e32\u4f1a\u975e\u5e38\u96be\u505a\uff0c\u4e0d\u59a8\u6211\u4eec\u8003\u8651\u4ece $b$ \u4e32\u5012\u5e8f\u5904\u7406\u5904\u7406\u6210 $a$ \u4e32\uff0c\u56e0\u4e3a\u6211\u4eec\u77e5\u9053\u5012\u5e8f\u5904\u7406\u6bcf\u6b21\u53ea\u4f1a\u51fa\u73b0\u4e00\u79cd\u7ed3\u679c\uff0c\u6240\u4ee5\u5f97\u5230\u7684 $a$ \u4e32\u552f\u4e00\uff0c\u73b0\u5728\u6211\u4eec\u6765\u8003\u8651\u6bcf\u6b21\u5904\u7406\u51fa\u73b0\u7684\u7ed3\u679c\uff0c\u6bcf\u79cd\u7ed3\u679c\u53ef\u80fd\u5206\u4e09\u7c7b\uff1a\n\n$1$\u3001\u5f53\u533a\u95f4 $[l_i,r_i]$ \u7684 $1$ \u7684\u6570\u91cf\u5927\u4e8e $0$ \u7684\u6570\u91cf\u65f6\uff0c\u5219\u5c06\u533a\u95f4\u5185\u6240\u6709 $0$ \u53d8\u4e3a $1$\u3002\n\n$2$\u3001\u5f53\u533a\u95f4 $[l_i,r_i]$ \u7684 $1$ \u7684\u6570\u91cf\u7b49\u4e8e $0$ \u7684\u6570\u91cf\u65f6\uff0c\u5219\u8bf4\u660e\u81f3\u5c11\u8981\u6539\u6574\u4e2a\u533a\u95f4\u4e00\u534a\u7684\u6570\uff0c\u8bf4\u660e\u4e0d\u80fd\u5b8c\u6210\u6b64\u6b21\u4efb\u52a1\uff0c\u76f4\u63a5\u8f93\u51fa `NO` \u5373\u53ef\u3002\n\n$3$\u3001\u5f53\u533a\u95f4 $[l_i,r_i]$ \u7684 $1$ \u7684\u6570\u91cf\u5c0f\u4e8e $0$ \u7684\u6570\u91cf\u65f6\uff0c\u5219\u5c06\u533a\u95f4\u5185\u6240\u6709 $1$ \u53d8\u4e3a $0$\u3002\n\n\u5f53\u5904\u7406\u5b8c\u6210\u540e\uff0c\u5c06\u5f97\u5230\u7684\u4e32\u4e0e\u9898\u76ee\u4e2d\u7ed9\u5b9a\u7684 $a$ \u4e32\u8fdb\u884c\u5339\u914d\uff0c\u82e5\u5339\u914d\u6210\u529f\uff0c\u5219\u8f93\u51fa `YES`\uff1b\u53cd\u4e4b\uff0c\u5219\u8f93\u51fa `NO`\u3002\n\n\u73b0\u5728\u6211\u4eec\u53ea\u9700\u8981\u652f\u6301\u533a\u95f4 $01$ \u4fee\u6539\uff0c\u533a\u95f4\u548c\u67e5\u8be2\uff08\u533a\u95f4\u548c\u67e5\u8be2\u5373\u4e3a\u533a\u95f4 $1$ \u7684\u4e2a\u6570\u67e5\u8be2\uff09\u5c31\u884c\u4e86\u3002\n\n\u5728\u8fd9\u91cc\u4f60\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5206\u5757\uff0c\u6211\u8fd9\u91cc\u4f7f\u7528\u7684\u662f\u5206\u5757\uff0c\u5199\u8d77\u6765\u6bd4\u8f83\u7b80\u5355\u3002\n\n\u6bcf\u6b21\u5c06\u4e00\u6574\u4e2a\u5757\u7684\u6570\u8fdb\u884c\u4fee\u6539\u65f6\uff0c\u53ea\u9700\u8981\u5c06\u5b83\u7684\u533a\u95f4\u548c\u8fdb\u884c\u4fee\u6539\u5373\u53ef\uff0c\u7b49\u9700\u8981\u5bf9\u8fd9\u4e2a\u5757\u7684\u90e8\u5206\u6570\u8fdb\u884c\u4fee\u6539\u65f6\uff0c\u5148\u5c06\u6b64\u533a\u95f4\u8d4b\u6210\u76f8\u5e94\u7684\u503c\uff0c\u518d\u8fdb\u884c\u4fee\u6539\uff0c\u76f8\u5f53\u4e8e\u505a\u4e86\u4e2a lazy \u6807\u8bb0\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n+q\\sqrt n)$\n\n# AC code:\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nchar a[200005],c[200005];\nbool b[452][454];\nint sum[452],summ;\npair<int,int> p[200005];\nvoid modify1(int k,int l,int r,bool x){\n\tint i;\n\tfor(i=l;i<=r;++i){\n\t\tb[k][i]=x;\n\t}\n}\nvoid modify(int k,int l,int r,bool x){\n\tint i;\n\tfor(i=l;i<=r;++i){\n\t\tsumm+=x-b[k][i];\n\t    sum[k]+=x-b[k][i];\n\t    b[k][i]=x;\n\t}\n} \nvoid update(bool x,int kl,int ll,int len,int kr,int lr){\n\tint i;\n\tfor(i=kl+1;i<kr;++i){\n\t\tsum[i]=x*len;\n\t}\n\tmodify(kl,ll,len,x);\n\tif(kl!=kr){\n\t\tmodify(kr,1,lr,x);\n\t}\n}\nint main(){\n\tint t,k=0,len=0;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tint n,q,i,j,cnt=0;\n\t\tbool no=0;\n\t\tfor(i=1;i<=k;++i){\n\t\t\tfor(j=1;j<=len;++j){\n\t\t\t\tb[i][j]=0;\n\t\t\t}\n\t\t\tsum[i]=0;\n\t\t}\n\t\tscanf(\"%d%d\",&n,&q);\n\t\tscanf(\"%s\",c+1);\n\t\tscanf(\"%s\",a+1);\n\t\tk=sqrt(n);\n\t\tlen=(n+k-1)/k;\n\t\tfor(i=1;i<=k;++i){\n\t\t\tfor(j=1;j<=len;++j){\n\t\t\t\tb[i][j]=a[++cnt]-48;\n\t\t\t\tif(b[i][j]&1){\n\t\t\t\t\t++sum[i];\n\t\t\t\t}\n\t\t\t\tif(cnt==n){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(cnt==n){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tfor(i=1;i<=q;++i){\n\t\t\tscanf(\"%d%d\",&p[i].first,&p[i].second);\n\t\t}\n\t\tfor(j=q;j;--j){\n\t\t\tint l,r,kl,kr,ll,lr;\n\t\t\tsumm=0;\n\t\t\tl=p[j].first;\n\t\t\tr=p[j].second;\n\t\t\tkl=(l+len-1)/len;\n\t\t\tkr=(r+len-1)/len;\n\t\t\tif(sum[kl]==len){\n\t\t\t\tmodify1(kl,1,len,1);\n\t\t\t}\n\t\t\tif(!sum[kl]){\n\t\t\t\tmodify1(kl,1,len,0);\n\t\t\t}\n\t\t\tif(sum[kr]==len){\n\t\t\t\tmodify1(kr,1,len,1);\n\t\t\t}\n\t\t\tif(!sum[kr]){\n\t\t\t\tmodify1(kr,1,len,0);\n\t\t\t}\n\t\t\tfor(i=kl+1;i<kr;++i){\n\t\t\t\tsumm+=sum[i];\n\t\t\t}\n\t\t\tll=(l-1)%len+1;\n\t\t\tlr=(r-1)%len+1;\n\t\t\tint u;\n\t\t\tif(kl==kr){\n\t\t\t\tu=lr;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tu=len;\n\t\t\t}\n\t\t\tif(sum[kl]==len){\n\t\t\t\tsumm+=u-ll+1;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(sum[kl]){\n\t\t\t\t\tfor(i=ll;i<=u;++i){\n\t\t\t\t        if(b[kl][i]){\n\t\t\t\t        \tsumm++;\n\t\t\t\t\t\t}\n\t\t\t        }\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(kl!=kr){\n\t\t\t\tif(sum[kr]==len){\n\t\t\t\t    summ+=lr;\n\t\t\t    }\n\t\t\t    else{\n\t\t\t\t    if(sum[kr]){\n\t\t\t\t\t    for(i=1;i<=lr;++i){\n\t\t\t\t            if(b[kr][i]){\n\t\t\t\t        \t    summ++;\n\t\t\t\t\t\t    }\n\t\t\t            }\n\t\t\t\t    }\n\t\t\t    }\n\t\t\t}\n\t\t\tif(summ*2==r-l+1){\n\t\t\t\tprintf(\"NO\\n\");\n\t\t\t\tno=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(summ>(r-l+1)/2){\n\t\t\t\tupdate(1,kl,ll,u,kr,lr);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tupdate(0,kl,ll,u,kr,lr);\n\t\t\t}\n\t\t}\n\t\tif(no){\n\t\t\tcontinue; \n\t\t}\n\t\tcnt=0;\n\t\tfor(i=1;i<=k;++i){\n\t\t\tif(sum[i]==len){\n\t\t\t\tfor(j=1;j<=len;j++){\n\t\t\t\t\tb[i][j]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(sum[i]==0){\n\t\t\t\tfor(j=1;j<=len;j++){\n\t\t\t\t\tb[i][j]=0;\n\t\t\t\t}\n\t\t\t} \n\t\t\tfor(j=1;j<=len;++j){\n\t\t\t\tif(b[i][j]!=c[++cnt]-48){\n\t\t\t\t\tprintf(\"NO\\n\");\n\t\t\t\t\tno=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(cnt==n){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(cnt==n||no){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!no){\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1613057677,
        "uid": 80614,
        "name": "ZCPB",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1477B \u3010Nezzar and Binary String\u3011"
    },
    {
        "content": "\u5bf9\u4e8e\u6bcf\u6b21\u4fee\u6539\u6211\u4eec\u53d1\u73b0\u5f88\u5934\u75bc\uff0c\u56e0\u4e3a\u53ef\u80fd\u5bf9\u540e\u9762\u591a\u4e2a\u64cd\u4f5c\u90fd\u6709\u5f71\u54cd\uff0c\u5c31\u597d\u50cf\u4ece\u51b3\u7b56\u6811\u7684\u6839\u5411\u4e0b\u8d70\u3002\u4e8e\u662f\u6211\u4eec\u60f3\u5230\u4ece\u53f6\u5b50\u5f80\u4e0a\u8d70\u53ea\u6709\u4e00\u6761\u8def\uff0c\u5f88\u65b9\u4fbf\uff0c\u5373**\u5012\u7740\u505a**\u3002\n\n\u73b0\u5728\u5c31\u53d8\u6210\u6bcf\u6b21\u68c0\u67e5\u524d\u4fee\u6539\u4e00\u6b21\uff0c\u4fee\u6539\u540e\u5fc5\u987b\u6ee1\u8db3\u6761\u4ef6\uff08\u5168\u662f0\u62161\uff09\u3002\n\n\u4ec0\u4e48\u65f6\u5019\u65e0\u89e3\u5462\uff1f\u4fee\u6539\u524d\u53d1\u73b0\u533a\u95f4\u91cc\u6070\u597d\u4e00\u534a\u662f0\uff0c\u4e00\u534a\u662f1\u3002\n\n\u6709\u89e3\u5219\u5c06\u533a\u95f4\u51850\u62161\u4e2d\u51fa\u73b0\u6b21\u6570\u8f83\u5c11\u7684\u6539\u6210\u8f83\u591a\u7684\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8981\u652f\u6301\u4ec0\u4e48\u64cd\u4f5c\uff1f\u533a\u95f4\u67e5\u8be2\uff0c\u533a\u95f4\u67d3\u8272\u3002\n\n\u7ebf\u6bb5\u6811\u5c31\u884c\u4e86\u3002\n\n\u4ee3\u7801\uff08 $O(nlogn)$ \uff09\uff1a\n```cpp\n#include <cstdio>\ntypedef long long ll;\nconst int N=2e5+5;\nint t,n,k,x[N],y[N];\nint sum[N<<2][2],tag[N<<2];\nchar c1[N],c2[N];\nstruct node {\n\tint x,y;\n\tnode operator +(const node &w)const {\n\t\treturn (node){x+w.x,y+w.y};\n\t}\n}now;\ninline int read() {\n\tint x=0,flag=0;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){flag|=(ch=='-');ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();}\n\treturn flag?-x:x;\n}\ninline int mx(int x,int y) {return x>y?x:y;}\ninline int mn(int x,int y) {return x<y?x:y;}\n \ninline void pu(int ht) {\n\tsum[ht][0]=sum[ht<<1][0]+sum[ht<<1|1][0];\n\tsum[ht][1]=sum[ht<<1][1]+sum[ht<<1|1][1];\n}\nvoid build(int l,int r,int ht) {\n\ttag[ht]=-1;\n\tif(l==r) {\n\t\tsum[ht][c2[l]-'0']=1;\n\t\tsum[ht][!(c2[l]-'0')]=0;\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(l,mid,ht<<1);\n\tbuild(mid+1,r,ht<<1|1);\n\tpu(ht);\n}\ninline void pd(int ht,int ln,int rn) {\n\tif(tag[ht]!=-1) {\n\t\ttag[ht<<1]=tag[ht<<1|1]=tag[ht];\n\t\tsum[ht<<1][tag[ht]]=ln;\n\t\tsum[ht<<1][!tag[ht]]=0;\n\t\tsum[ht<<1|1][tag[ht]]=rn;\n\t\tsum[ht<<1|1][!tag[ht]]=0;\n\t\ttag[ht]=-1;\n\t}\n}\nvoid update(int l,int r,int ht,int x,int y,int s) {\n\tif(x<=l&&r<=y) {\n\t\ttag[ht]=s;\n\t\tsum[ht][s]=r-l+1;\n\t\tsum[ht][!s]=0;\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tpd(ht,mid-l+1,r-mid);\n\tif(x<=mid) update(l,mid,ht<<1,x,y,s);\n\tif(y>mid)  update(mid+1,r,ht<<1|1,x,y,s);\n\tpu(ht);\n}\nnode query(int l,int r,int ht,int x,int y) {\n\tif(x<=l&&r<=y) return (node){sum[ht][0],sum[ht][1]};\n\tint mid=(l+r)>>1;\n\tpd(ht,mid-l+1,r-mid);\n\tif(x<=mid) {\n\t\tif(y>mid) return query(l,mid,ht<<1,x,y)+query(mid+1,r,ht<<1|1,x,y);\n\t\telse return query(l,mid,ht<<1,x,y);\n\t}\n\telse return query(mid+1,r,ht<<1|1,x,y);\n}\nbool ch(int l,int r,int ht) {\n\tif(l==r) {\n\t\tif((sum[ht][0]==1&&c1[l]=='0')||(sum[ht][1]==1&&c1[l]=='1')) return 1;\n\t\telse return 0;\n\t}\n\tint mid=(l+r)>>1;\n\tpd(ht,mid-l+1,r-mid);\n\treturn ch(l,mid,ht<<1)&ch(mid+1,r,ht<<1|1);\n}\nint main() {\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\tt=read();\n\twhile(t--) {\n\t\tn=read();k=read();\n\t\tscanf(\"%s\\n%s\",c1+1,c2+1);\n\t\tbuild(1,n,1);\n\t\tfor(int i=1;i<=k;++i)\n\t\t\tx[i]=read(),y[i]=read();\n\t\tbool flag=1;\n\t\tfor(int i=k;i>=1;--i) {\n\t\t\tnow=query(1,n,1,x[i],y[i]);\n\t\t\tif(now.x==now.y) {\n\t\t\t\tflag=0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(now.x<now.y) update(1,n,1,x[i],y[i],1);\n\t\t\telse update(1,n,1,x[i],y[i],0);\n\t\t}\n\t\tif(flag&&ch(1,n,1)) printf(\"YES\\n\");\n\t\telse printf(\"NO\\n\");\n\t}\n\treturn 0;\n}\n```\n-\u5b8c-",
        "postTime": 1612165113,
        "uid": 114830,
        "name": "Kostlin",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1477B \u3010Nezzar and Binary String\u3011"
    }
]