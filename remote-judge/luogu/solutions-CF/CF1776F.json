[
    {
        "content": "\u9898\u610f\uff1a\u6709\u4e00\u4e2a $n$ \u70b9 $m$ \u8fb9\u7b80\u5355\u65e0\u5411\u8fde\u901a\u56fe\uff0c\u8bf7\u7528\u82e5\u5e72\uff08\u81f3\u5c11\u4e3a $2$\uff09\u79cd\u989c\u8272\u5bf9\u6bcf\u6761\u8fb9\u67d3\u8272\uff0c\u4f7f\u5f97\uff1a\n\n- \u5bf9\u4e8e\u6bcf\u79cd\u989c\u8272\uff0c\u4ec5\u7531\u8be5\u989c\u8272\u7684\u8fb9\u7ec4\u6210\u7684\u751f\u6210\u5b50\u56fe\u4e0d\u8fde\u901a\u3002\n- \u5bf9\u4e8e\u6bcf\u4e24\u79cd\u989c\u8272\uff0c\u4ec5\u7531\u8be5\u989c\u8272\u7684\u8fb9\u7ec4\u6210\u7684\u751f\u6210\u5b50\u56fe\u8fde\u901a\u3002\n\n---\n\n\u4e0d\u96be\u60f3\u5230\u5982\u4e0b\u601d\u8def\uff1a\n\n- \u627e\u51fa\u4e00\u4e2a\u8282\u70b9 $u$\uff0c\u5c06\u6240\u6709\u4e0e $u$ \u76f8\u8fde\u7684\u8fb9\u5206\u914d\u989c\u8272 $1$\u3002\n- \u5c06\u5176\u4ed6\u8fb9\u5206\u914d\u989c\u8272 $2$\u3002\n\n\u6b64\u65f6\uff0c\u6574\u5f20\u56fe\u53ea\u6709\u4e24\u79cd\u989c\u8272\uff0c\u56e0\u6b64\u7b2c\u4e8c\u4e2a\u8981\u6c42\u663e\u7136\u6210\u7acb\u3002\u540c\u65f6\uff0c$u$ \u5fc5\u7136\u4e0d\u4e0e\u5176\u4ed6\u70b9\u8fde\u901a\uff0c\u989c\u8272 $2$ \u7684\u7b2c\u4e00\u4e2a\u8981\u6c42\u4e5f\u6210\u7acb\u3002\u53ea\u9700\u8003\u8651\u989c\u8272 $1$ \u7684\u7b2c\u4e00\u4e2a\u8981\u6c42\u3002\n\n\u5982\u679c\u627e\u5230\u8282\u70b9 $u$\uff0c\u4f7f\u5f97 $d(u)<n$\uff0c\u6b64\u65f6\u81f3\u5c11\u4e00\u4e2a\u8282\u70b9\u4e0d\u4e0e $u$ \u8fde\u901a\uff0c\u672c\u9898\u5c31\u505a\u5b8c\u4e86\u3002\n\n\u53ea\u6709\u5728\u539f\u56fe\u662f\u5b8c\u5168\u56fe\u7684\u65f6\u5019\u624d\u627e\u4e0d\u5230\u8fd9\u6837\u7684\u8282\u70b9 $u$\uff0c\u6b64\u65f6\u62ff\u51fa\u4e00\u4e2a\u989c\u8272 $1$ \u7684\u8fb9\uff0c\u5c06\u5176\u6539\u4e3a\u989c\u8272 $3$ \u5373\u53ef\u3002\u663e\u7136\u8fd9\u79cd\u6784\u9020\u7b26\u5408\u8981\u6c42\u3002\n\n```cpp\n// Problem: F. Train Splitting\n// Contest: Codeforces - SWERC 2022-2023 - Online Mirror (Unrated, ICPC Rules, Teams Preferred)\n// URL: https://codeforces.com/contest/1776/problem/F\n// Memory Limit: 256 MB\n// Time Limit: 2000 ms\n// \n// Powered by CP Editor (https://cpeditor.org)\n\n//By: OIer rui_er\n#include <bits/stdc++.h>\n#define rep(x,y,z) for(int x=(y);x<=(z);x++)\n#define per(x,y,z) for(int x=(y);x>=(z);x--)\n#define debug(format...) fprintf(stderr, format)\n#define fileIO(s) do{freopen(s\".in\",\"r\",stdin);freopen(s\".out\",\"w\",stdout);}while(false)\n#define likely(exp) __builtin_expect(!!(exp), 1)\n#define unlikely(exp) __builtin_expect(!!(exp), 0)\nusing namespace std;\ntypedef long long ll;\nconst int N = 55;\n\nint T, n, m, deg[N], ans[N*N];\nvector<pair<int, int>> e[N];\ntemplate<typename T> void chkmin(T& x, T y) {if(x > y) x = y;}\ntemplate<typename T> void chkmax(T& x, T y) {if(x < y) x = y;}\n\nint main() {\n\tfor(scanf(\"%d\", &T); T; T--) {\n\t\tscanf(\"%d%d\", &n, &m);\n\t\trep(i, 1, m) {\n\t\t\tint u, v;\n\t\t\tscanf(\"%d%d\", &u, &v);\n\t\t\te[u].emplace_back(v, i);\n\t\t\te[v].emplace_back(u, i);\n\t\t\t++deg[u]; ++deg[v];\n\t\t}\n\t\tif(*min_element(deg+1, deg+1+n) < n - 1) {\n\t\t\tint u = min_element(deg+1, deg+1+n) - deg;\n\t\t\tputs(\"2\");\n\t\t\trep(i, 0, deg[u]-1) ans[e[u][i].second] = 1;\n\t\t\trep(i, 1, m) if(!ans[i]) ans[i] = 2;\n\t\t}\n\t\telse {\n\t\t\tputs(\"3\");\n\t\t\tans[e[1][0].second] = 1;\n\t\t\trep(i, 1, deg[1]-1) ans[e[1][i].second] = 2;\n\t\t\trep(i, 1, m) if(!ans[i]) ans[i] = 3;\n\t\t}\n\t\trep(i, 1, m) printf(\"%d%c\", ans[i], \" \\n\"[i==m]);\n\t\trep(i, 1, n) e[i].clear();\n\t\trep(i, 1, n) deg[i] = 0;\n\t\trep(i, 1, m) ans[i] = 0;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1677416869,
        "uid": 122461,
        "name": "rui_er",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1776F\u3010Train Splitting\u3011"
    }
]