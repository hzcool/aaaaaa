[
    {
        "content": "upd\uff1a\u66f4\u65b0\u4e86\u5173\u4e8e\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u8bf4\u6cd5\u3002\n\n\u6700\u8fd1\u5237 CF \u65f6\u9047\u5230\u7684\u9898\uff0c\u867d\u7136\u53e4\u65e9\uff0c\u4f46\u5374\u6ca1\u6709\u9898\u89e3\u3002\u90a3\u6211\u5c31\u6765\u8d21\u732e\u4e00\u53d1\u5427\u3002\n\n\u9996\u5148 $|a-b|=1$\uff0c\u5426\u5219\u65e0\u89e3\u3002\u7136\u540e\u5c31\u53d8\u6210 $k$ \u4e2a\u7ea2\u68cb\u5b50\u4e0e $k$ \u4e2a\u84dd\u68cb\u5b50\u3002\n\n\u4e4d\u4e00\u770b\u662f\u4e8c\u5206\u56fe\u5339\u914d\u3002\u4f46\u5b9e\u9645\u4e0a\u6bcf\u4e2a\u683c\u5b50\u53ea\u80fd\u5bb9\u7eb3\u4e00\u5bf9\u68cb\u5b50\uff0c\u6545\u4e0d\u80fd\u76f4\u63a5\u5957\u7528\u3002\n\n\u7c7b\u4f3c\u4e8c\u5206\u56fe\uff0c\u6211\u4eec\u4e0d\u96be\u60f3\u5230\u7528\u7f51\u7edc\u6d41\u6765\u89e3\u51b3\u8fd9\u79cd\u5339\u914d\u95ee\u9898\u3002\u56e0\u4e3a\u6bcf\u4e2a\u68cb\u5b50\u5230\u4efb\u610f\u683c\u5b50\u7684\u8ddd\u79bb\u662f\u5df2\u77e5\u7684\uff0c\u6545\u5c1d\u8bd5\u4e8c\u5206\u7b54\u6848\u3002\n\n\u9996\u5148\u5c06\u6bcf\u4e2a\u683c\u5b50\u62c6\u4e3a\u5165\u70b9\u548c\u51fa\u70b9\uff0c\u5176\u95f4\u8fde\u4e00\u6761\u8fb9\u3002\u4f9d\u6b21\u8003\u8651\u7ea2\u68cb\u5b50 $i$ \u4e0e\u683c\u5b50 $j$\uff0c\u5982\u679c $i$ \u5230 $j$ \u7684\u65f6\u95f4\u4e0d\u5927\u4e8e\u5f53\u524d\u4e8c\u5206\u7684 $mid$\uff0c\u5219\u4ece $i$ \u8fde\u4e00\u6761\u8fb9\u5230 $j$ \u7684\u5165\u70b9\u3002\u540c\u7406\uff0c\u5982\u679c\u84dd\u68cb\u5b50 $i$ \u5230\u683c\u5b50 $j$ \u7684\u65f6\u95f4\u4e0d\u5927\u4e8e $mid$\uff0c\u5219\u4ece $j$ \u7684\u51fa\u70b9\u8fde\u4e00\u6761\u8fb9\u5230 $i$\u3002\u518d\u4ece\u6e90\u70b9\u5230\u6240\u6709\u7ea2\u68cb\u5b50\u8fde\u8fb9\uff0c\u4ece\u6240\u6709\u84dd\u68cb\u5b50\u5230\u6c47\u70b9\u8fde\u8fb9\u3002\u6240\u6709\u8fb9\u7684\u5bb9\u91cf\u5747\u4e3a $1$\u3002\u8dd1\u6700\u5927\u6d41\uff0c\u5224\u65ad\u5176\u662f\u5426\u7b49\u4e8e $k$ \u5373\u53ef\u3002\n\n\u8fd9\u79cd\u505a\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^6 \\log a)$\uff0c\u5176\u4e2d $a$ \u4e3a\u6700\u5927\u65f6\u95f4\u3002\u663e\u7136\u4e0d\u80fd\u901a\u8fc7\u3002\n\n\u53d1\u73b0\u74f6\u9888\u5728\u4e8e\u4e8c\u5206\u7b54\u6848\u3002\u56e0\u4e3a\u7f51\u7edc\u6d41\u6709\u4e00\u4e2a\u5f88\u597d\u7684\u6027\u8d28\uff1a\u5f80\u7f51\u7edc\u4e2d\u52a0\u8fb9\uff0c\u4e0d\u5fc5\u91cd\u6784\u7f51\u7edc\uff0c\u76f4\u63a5\u8dd1\u5c31\u53ef\u4ee5\u5f97\u51fa\u65b0\u7684\u6700\u5927\u6d41\u3002\u4e8e\u662f\u5c1d\u8bd5\u53e6\u4e00\u79cd\u65b9\u5f0f\uff1a\u5bf9\u4e8e\u6240\u6709\u8fde\u63a5\u68cb\u5b50\u4e0e\u683c\u5b50\u7684\u8fb9\uff0c\u6309\u7167\u5176\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u52a0\u5165\u3002\u6bcf\u52a0\u4e00\u6761\u8fb9\u8dd1\u4e00\u6b21\u6700\u5927\u6d41\u3002\u5219\u5f53\u6700\u5927\u6d41\u7b49\u4e8e $k$ \u65f6\uff0c\u52a0\u5165\u7684\u8fb9\u7684\u65f6\u95f4\u5c31\u662f\u7b54\u6848\u3002\u590d\u6742\u5ea6\u4e3a $O(n^4 \\times n^4)=O(n^8)$\u3002\n\n\u8fd9\u6837\u5c31\u6709\u65b0\u7684\u4f18\u5316\u7a7a\u95f4\u4e86\u3002\u8003\u8651\u5c06\u8fb9\u5206\u5757\uff1a\u8bbe\u6709 $t$ \u6761\u8fb9\uff0c\u6bcf $\\sqrt t$ \u6761\u5206\u4e3a\u4e00\u7ec4\u3002\u6bcf\u6b21\u52a0\u5165\u4e00\u7ec4\u5e76\u8dd1\u6700\u5927\u6d41\u3002\u5f53\u6700\u5927\u6d41\u7b49\u4e8e $k$ \u65f6\uff0c\u518d\u5c06\u8fd9\u7ec4\u7684\u8fb9\u91cd\u65b0\u4e00\u6761\u6761\u52a0\u5165\u3002\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u4e3a $O(\\sqrt{n^4} \\times n^4)=O(n^6)$\u3002\u53ef\u4ee5\u901a\u8fc7\u3002\n\n\u4f46\u5b9e\u9645\u4e0a\u56e0\u4e3a\u5927\u5e38\u6570\uff0c\u4f60\u8fd8\u662f\u4f1a TLE on test 87\u3002\u89e3\u51b3\u529e\u6cd5\u662f\u5361\u5e38\uff0c\u6216\u8005\u50cf\u6211\u4e00\u6837\uff1a\u5206\u5757\u5957\u5206\u5757\u3002\u8bbe\u4e00\u4e2a\u9608\u503c $\\alpha$\uff0c\u5148\u5c06\u5757\u957f\u8bbe\u4e3a $t^{\\alpha}$\uff0c\u7b49\u6700\u5927\u6d41\u7b49\u4e8e $k$ \u65f6\uff0c\u518d\u5c06\u5f53\u524d\u5757\u5206\u5757\uff0c\u5757\u957f\u4e3a $t^{\\alpha^2}$\u3002\u5219\u590d\u6742\u5ea6\u4e3a $O((t^{1-\\alpha}+t^{\\alpha(1-\\alpha)}+t^{\\alpha^2})\\times n^4)$\uff0c\u6613\u77e5 $\\alpha=\\frac{\\sqrt5-1}{2}$\uff0c\u5316\u7b80\u4e00\u4e0b\u5c31\u662f $n^{5.528}$\u3002\u53ef\u4ee5\u901a\u8fc7\u3002\n\nPS\uff1a\u5b9e\u9645\u4e0a\u56e0\u4e3a\u7f51\u7edc\u6d41\u7684\u590d\u6742\u5ea6\u672c\u8eab\u5c31\u662f $O(n^6)$ \uff0c\u6545\u8fd9\u4e5f\u53ea\u662f\u51cf\u5c11\u5e38\u6570\u800c\u975e\u4f18\u5316\u590d\u6742\u5ea6\u3002\u4f46\u56e0\u4e3a\u7f51\u7edc\u6d41\u5b9e\u9645\u8fbe\u4e0d\u5230\u8fd9\u4e2a\u4e0a\u754c\uff0c\u800c\u5206\u5757\u540e\u6bcf\u6b21\u5efa\u7acb\u5206\u5c42\u56fe\u5374\u662f\u94c1\u6253\u7684 $O(n^4)$\uff0c\u6545\u4f18\u5316\u6548\u679c\u663e\u8457\u3002\n\n\u8865\u4e2a\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int N=25,V=1940,E=939930,INF=0x3f3f3f3f;\nconst int dx[4]={-1,0,1,0},dy[4]={0,1,0,-1};\nint n,m,K,ka,kb,mp[N][N],d[N][N][N][N],t,maxflow;\nint head[V],nxt[E],ver[E],edge[E],tot,dis[V],cur[V],S,T;\nstruct {int x,y,t;} a[V],b[V];\nstruct edge {\n\tint x,y; ll t;\n\tbool operator <(const edge &o) const {return t<o.t;}\n} e[E];\nint read() {\n    int x=0; char c=getchar();\n    for(;c<'0'||c>'9';c=getchar()) if(c=='.'||c=='#') return c=='.';\n    for(;c>='0'&&c<='9';c=getchar()) x=x*10+c-48;\n    return x;\n}\nvoid bfs(int u,int v) {\n\tqueue<pair<int,int>> q;\n\td[u][v][u][v]=0; q.push({u,v});\n\twhile(!q.empty()) {\n\t\tint x=q.front().first,y=q.front().second; q.pop();\n\t\tfor(int i=0;i<4;i++) {\n\t\t\tint sx=x+dx[i],sy=y+dy[i];\n\t\t\tif(sx<1||sx>n||sy<1||sy>m||!mp[sx][sy]||~d[u][v][sx][sy]) continue;\n\t\t\td[u][v][sx][sy]=d[u][v][x][y]+1; q.push({sx,sy});\n\t\t}\n\t}\n}\nint get(int x,int y) {return (x-1)*m+y;}\nvoid add(int x,int y,int z) {\n\tnxt[++tot]=head[x]; head[x]=tot; ver[tot]=y; edge[tot]=z;\n}\nvoid addedge(int x,int y,int z) {add(x,y,z); add(y,x,0);}\nbool bfs() {\n\tqueue<int> q;\n\tmemset(dis,0,sizeof(dis));\n\tq.push(S); dis[S]=1; cur[S]=head[S];\n\twhile(!q.empty()) {\n\t\tint x=q.front(); q.pop();\n\t\tfor(int i=head[x];i;i=nxt[i]) {\n\t\t\tint y=ver[i];\n\t\t\tif(edge[i]&&!dis[y]) {\n\t\t\t\tdis[y]=dis[x]+1; cur[y]=head[y];\n\t\t\t\tif(y==T) return 1;\n\t\t\t\tq.push(y);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\nint dinic(int x,int limit) {\n\tif(x==T) return limit;\n\tint flow=0;\n\tfor(int &i=cur[x];i&&flow<limit;i=nxt[i]) {\n\t\tint y=ver[i],z=edge[i];\n\t\tif(z&&dis[y]==dis[x]+1) {\n\t\t\tint v=dinic(y,min(limit-flow,z));\n\t\t\tif(!v) dis[y]=0;\n\t\t\tedge[i]-=v; edge[i^1]+=v; flow+=v;\n\t\t}\n\t}\n\treturn flow;\n}\nvoid init() {\n\ttot=1; memset(head,0,sizeof(head)); maxflow=0;\n\tfor(int i=1;i<=n*m;i++) addedge(i,n*m+i,1);\n\tfor(int i=1;i<=K;i++) {addedge(S,2*n*m+i,1); addedge(2*n*m+K+i,T,1);}\n}\nint main() {\n\tn=read(); m=read(); ka=read(); kb=read();\n\tfor(int i=1;i<=n;i++) for(int j=1;j<=m;j++) mp[i][j]=read();\n\tif(abs(ka-kb)!=1) {puts(\"-1\"); return 0;}\n\tK=max(ka,kb);\n\t(ka<kb?a[1]:b[1])={read(),read(),read()};\n\tfor(int i=1;i<=ka;i++) a[i+(ka<kb)]={read(),read(),read()};\n\tfor(int i=1;i<=kb;i++) b[i+(ka>kb)]={read(),read(),read()};\n\tmemset(d,-1,sizeof(d));\n\tfor(int i=1;i<=n;i++) for(int j=1;j<=m;j++) if(mp[i][j]) bfs(i,j);\n\tfor(int i=1;i<=K;i++)\n\t\tfor(int j=1;j<=n;j++) for(int k=1;k<=m;k++) if(~d[a[i].x][a[i].y][j][k])\n\t\t\te[++t]={2*n*m+i,get(j,k),(ll)d[a[i].x][a[i].y][j][k]*a[i].t};\n\tfor(int i=1;i<=K;i++)\n\t\tfor(int j=1;j<=n;j++) for(int k=1;k<=m;k++) if(~d[b[i].x][b[i].y][j][k])\n\t\t\te[++t]={n*m+get(j,k),2*n*m+K+i,(ll)d[b[i].x][b[i].y][j][k]*b[i].t};\n\tsort(e+1,e+t+1);\n\tS=2*n*m+2*K+1; T=S+1; init();\n\tdouble alpha=(sqrt(5)-1)/2;\n\tint len=max(1,(int)pow(t,alpha));\n\tfor(int i=1,ii=(t-1)/len+1;i<=ii;i++) {\n\t\tint l=(i-1)*len+1,r=min(i*len,t);\n\t\tfor(int j=l;j<=r;j++) addedge(e[j].x,e[j].y,1);\n\t\twhile(bfs()) maxflow+=dinic(S,INF);\n\t\tif(maxflow!=K) continue;\n\t\tinit();\n\t\tfor(int j=1;j<l;j++) addedge(e[j].x,e[j].y,1);\n\t\tint Len=max(1,(int)pow(len,alpha));\n\t\tfor(int j=1,jj=(r-l)/Len+1;j<=jj;j++) {\n\t\t\tint L=(j-1)*Len+l,R=min(j*Len,r-l+1)+l-1;\n\t\t\tfor(int k=L;k<=R;k++) addedge(e[k].x,e[k].y,1);\n\t\t\twhile(bfs()) maxflow+=dinic(S,INF);\n\t\t\tif(maxflow!=K) continue;\n\t\t\tinit();\n\t\t\tfor(int k=1;k<L;k++) addedge(e[k].x,e[k].y,1);\n\t\t\tfor(int k=L;k<=R;k++) {\n\t\t\t\taddedge(e[k].x,e[k].y,1);\n\t\t\t\twhile(bfs()) maxflow+=dinic(S,INF);\n\t\t\t\tif(maxflow==K) {printf(\"%lld\\n\",e[k].t); return 0;}\n\t\t\t}\n\t\t}\n\t}\n\tputs(\"-1\");\n\treturn 0;\n}\n```",
        "postTime": 1672896435,
        "uid": 217452,
        "name": "Yu_Jie",
        "ccfLevel": 0,
        "title": "CF513F2 \u9898\u89e3"
    }
]