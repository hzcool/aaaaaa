[
    {
        "content": "\u8fd9\u9898\u9664\u4e86\u4fdd\u5b58\u9700\u8981\u7528\u5230\u4e00\u4e0b\u90bb\u63a5\u8868\u4ee5\u5916\uff0c\u51e0\u4e4e\u6ca1\u4ec0\u4e48\u662f\u548c\u56fe\u8bba\u6709\u5173\u7684\u3002\u5c31\u662f\u4e00\u4e2a\u7eaf\u6a21\u62df\u3002\n\n\u9898\u76ee\u5927\u81f4\u7684\u610f\u601d\u662f\uff0c\u5728\u4e00\u4e2a\u6709\u5411\u56fe $G$ \u4e2d\u627e\u5230\u4e00\u4e2a\u70b9\u96c6 $S$ \u3002\u6ee1\u8db3\uff1a\n\n1. \u70b9\u96c6\u4e2d\u4e0d\u80fd\u6709\u4e24\u70b9\u4e4b\u95f4\u6709\u8fb9\u76f8\u8fde\u3002\n\n2. \u4ece $S$ \u4e2d\u7684\u70b9\u51fa\u53d1\uff0c2\u6b65\u4e4b\u5185\u53ef\u4ee5\u5230\u8fbe $G$ \u4e2d\u4efb\u4f55\u4e00\u4e2a\u70b9\u3002\n\n\u3000\n\n**\u7b97\u6cd5\u5206\u4e3a\u4e24\u6b65\uff1a**\n\n\u5148\u5f00\u4e24\u4e2a\u5e03\u5c14\u6570\u7ec4 $vis_i$ \u4ee3\u8868\u70b9 $i$ \u6709\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\u3002 $cse_i$ \u4ee3\u8868\u9009\u4e0d\u9009\u70b9 $i$ \u3002 \n\n1. \u4ece\u5c0f\u5230\u5927\u5c06\u6240\u6709\u7684\u70b9\u626b\u4e00\u904d\uff0c\u5982\u679c\u6ca1\u6709\u8bbf\u95ee\u8fc7( $vis_i==true$ )\u5c31\u540c\u65f6\u6807\u8bb0 $vis_i$ \u548c $cse_i$ \u4e3a\u771f\uff0c\u5e76\u5c06\u6240\u6709\u7684 $vis_j$ \u6807\u8bb0\u4e3a\u5047\u3002(\u5982\u679c\u4ece $i$ \u51fa\u53d1\u80fd\u591f\u76f4\u63a5\u5230\u8fbe $j$ )\n\n2. \u4ece\u5927\u5230\u5c0f\u5c06\u6240\u6709\u7684\u70b9\u626b\u4e00\u904d\uff0c\u5982\u679c\u8fd9\u4e2a\u70b9\u5df2\u7ecf\u88ab\u9009( $cse_i==true$ ),\u5c06\u6240\u6709 $cse_j$ \u6807\u8bb0\u4e3a\u5047\u3002(\u5982\u679c\u4ece $i$ \u51fa\u53d1\u80fd\u591f\u76f4\u63a5\u5230\u8fbe $j$ )\n\n\u6700\u540e\u518d\u626b\u4e00\u904d\u6240\u6709\u7684\u70b9\uff0c\u8fd9\u65f6 $cse_i$ \u5c31\u662f\u70b9 $i$ \u6700\u7ec8\u662f\u5426\u88ab\u9009\u62e9\u7684\u60c5\u51b5\u4e86\u3002\n\n\u3000\n\n**\u8fd9\u4e2a\u7b97\u6cd5\u4e3a\u4ec0\u4e48\u662f\u6b63\u786e\u7684\uff1f**\n\n\u5047\u8bbe\u6bcf\u6761\u8fb9\u957f\u5ea6\u90fd\u662f1.\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\u7684\u662f\uff0c\u6267\u884c\u6b65\u9aa41\u4e4b\u540e\u6ee1\u8db3\u6761\u4ef62\uff0c\u56e0\u4e3a\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u70b9\u79bb $S$ \u4e2d\u6700\u8fd1\u7684\u70b9 $t$ \u8ddd\u79bb\u8d85\u8fc72\uff0c\u90a3\u4e48\u4ed6\u4eec\u4e2d\u95f4\u4e00\u5b9a\u95f4\u9694\u4e86\u81f3\u5c112\u4e2a\u70b9\uff0c\u800c\u8fd9\u4e24\u4e2a\u70b9\u4e2d\u6709\u4e00\u4e2a\u662f\u4e00\u5b9a\u53ef\u9009\u7684\uff0c\u5982\u679c\u4e0d\u53ef\u9009\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u79bb $S$ \u4e2d\u6700\u8fd1\u7684\u70b9\u4e00\u5b9a\u4e0d\u662f $t$, \u800c\u662f\u53e6\u5916\u4e00\u4e2a\u8ddd\u79bb\u4e3a2\u7684\u70b9\u3002\n\n\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u795f\u968f\u4fbf\u5217\u4e3e\u4e00\u4e9b\u6570\u636e\u5c31\u53ef\u4ee5\u77e5\u9053\uff0c\u7531\u4e8e\u6211\u4eec\u5728\u9009\u62e9\u4e00\u4e2a\u70b9\u4e4b\u540e\u53ea\u6807\u8bb0\u8fd9\u4e2a\u70b9\u8ddd\u79bb\u4e3a1\u7684\u8bf4\u6709\u70b9\u4e0d\u53ef\u9009\uff0c\u6240\u4ee5\u73b0\u5728\u4e0d\u4ec5\u6ee1\u8db3\u6761\u4ef62\uff0c\u800c\u4e14\u6761\u4ef62\u4e2d\u7684\u8ddd\u79bb\u6700\u5927\u53ea\u53ef\u80fd\u662f1.\n\n\u4f46\u662f\uff0c\u6b65\u9aa41\u6267\u884c\u5b8c\u6210\u4e4b\u540e\u5f88\u53ef\u80fd\u4e0d\u6ee1\u8db3\u6761\u4ef61\uff0c\u53ea\u8981\u5b58\u5728\u70b9 $s$ \u548c $t$ \u6ee1\u8db3\u7f16\u53f7 $s>t$, \u800c\u4e14\u6709\u4e00\u6761\u8fb9\u4ece $s$ \u5230 $t$.\n\n\u8fd9\u65f6\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u53bb\u6389\u4e86 $t$\uff0c \u4ecd\u7136\u662f\u6ee1\u8db3\u6761\u4ef62\u7684\uff0c\u8fd9\u65f6\u7684\u6700\u5927\u8ddd\u79bb\u53ef\u80fd\u6070\u5de7\u5c31\u4e3a2\u4e86\uff0c\u4f46\u662f\u4ecd\u7136\u6ee1\u8db3\u3002\u800c\u4e14\u53bb\u6389\u4e86\u6240\u6709\u4e0d\u6ee1\u8db3\u6761\u4ef61\u7684\u77db\u76fe\u3002\n\n\u5982\u679c\u53bb\u6389 $s$ \u4f1a\u600e\u4e48\u6837\uff1f\u8fd9\u6837\u6709\u53ef\u80fd $s$ \u5165\u5ea6\u4e3a0\uff0c\u4e0d\u53ef\u80fd\u4ece\u4efb\u4f55\u4e00\u4e2a $S$ \u4e2d\u7684\u70b9\u51fa\u53d1\u5230\u8fbe $s$.\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define MAXPOINTS 1000005\nvector<int> G[MAXPOINTS], arr;\nbool vis[MAXPOINTS], book[MAXPOINTS];\n\nint main()\n{\n\tint totNode, totEdge, a, b;\n\n\tcin >> totNode >> totEdge;\n\tfor (int i = 0; i < totEdge; i++) {\n\t\tscanf(\"%d%d\", &a, &b);\n\t\tG[--a].push_back(--b);\n\t}\n\n\tmemset(vis, false, sizeof(vis)); memset(book, false, sizeof(book));\n\tfor (int i = 0; i < totNode; i++)\n\t\tif (!vis[i]) {\n\t\t\tvis[i] = book[i] = true;\n\t\t\tfor (const auto &it : G[i])\n\t\t\t\tvis[it] = true;\n\t\t}\n\tfor (int i = totNode - 1; i >= 0; i--) \n\t\tif (book[i]) {\n\t\t\tfor (const auto &it : G[i])\n\t\t\t\tbook[it] = false;\n\t\t}\n\n\tfor (int i = 0; i < totNode; i++)\n\t\tif (book[i])arr.push_back(i + 1);\n\n\tcout << arr.size() << endl;\n\tfor (const auto &it : arr)\n\t\tprintf(\"%d \", it);\n\tputchar('\\n');\n\n\t//system(\"pause\");\n\treturn 0;\n}\n```",
        "postTime": 1534345868,
        "uid": 78371,
        "name": "Mickey_snow",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1019C \u3010Sergey's problem\u3011"
    },
    {
        "content": "#### \u9898\u610f\n\n\u6709\u4e00\u5f20\u6709\u5411\u56fe\uff0c\u6784\u9020\u4e00\u4e2a\u70b9\u96c6\uff0c\u4f7f\u5f97\u70b9\u96c6\u4e2d\u7684\u70b9\u4e24\u4e24\u4e4b\u95f4\u6ca1\u6709\u8fb9\uff0c\u4e14\u70b9\u96c6\u5916\u7684\u4efb\u610f\u4e00\u70b9\u5747\u53ef\u4ee5\u7531\u70b9\u96c6\u4e2d\u7684\u70b9\u5728\u4e24\u6b65\u5185\u5230\u8fbe\u3002\n\n$\\left|V\\right|,\\left|E\\right|\\le 10^6$\n\n#### \u5206\u6790\n\n\u5c0f\u6e05\u65b0\u6784\u9020\u9898\u3002\n\n\u7b2c\u4e00\u773c\u770b\u4e0a\u53bb\u6709\u4e2a\u5f88\u663e\u7136\u662f\u5047\u7684\u8d2a\u5fc3\uff0c\u6bcf\u6b21\u968f\u4fbf\u9009\u62e9\u4e00\u4e2a\u70b9 $v$\uff0c\u7136\u540e\u5220\u6389\u6240\u6709 $v$ \u6240\u6709\u76f8\u90bb\u7684\u9876\u70b9\u3002\u8fd9\u6837\u53ef\u4ee5\u5f97\u5230 $V$ \u7684\u4e00\u4e2a\u70b9\u96c6 $V^{\\prime}$ \u4f7f\u5f97 $V$ \u4e2d\u4efb\u610f\u4e00\u70b9\u53ef\u4ee5\u7531 $V^{\\prime}$ \u4e2d\u7684\u70b9\u5728\u4e00\u6b65\u5185\u5230\u8fbe\u3002\n\n\u8fd9\u662f\u9519\u7684\u662f\u56e0\u4e3a\u67d0\u4e00\u6b21\u9009\u62e9\u7684\u70b9 $v_0$ \u53ef\u80fd\u6709\u4e00\u4e2a\u76f8\u90bb\u7684\u70b9 $u_0$ \u662f\u5df2\u7ecf\u88ab\u9009\u62e9\u7684\uff0c\u4e09\u5143\u73af\u5c31\u662f\u4e00\u4e2a\u53cd\u4f8b\u3002\n\n\u6211\u4eec\u89c2\u5bdf\u4e0a\u9762\u9009\u51fa\u6765\u7684\u8fd9\u4e2a\u70b9\u96c6 $V^{\\prime}$ \u6709\u4ec0\u4e48\u7279\u70b9\u3002\n\n\u53ef\u4ee5\u53d1\u73b0 $G$ \u4e2d $V^{\\prime}$ \u7684\u8bf1\u5bfc\u5b50\u56fe $G^{\\prime}\\left(V^{\\prime},E^{\\prime}\\right)$\u662f\u4e00\u4e2a DAG\n\n\u5bf9\u4e8e $E^{\\prime}$ \u4e2d\u4efb\u610f\u4e00\u6761\u8fb9 $u\\rightarrow v$ \uff0c$v$ \u5728\u4e0a\u9762\u8d2a\u5fc3\u8fc7\u7a0b\u4e2d\u88ab\u201c\u9009\u62e9\u201d\u7684\u65f6\u523b\u4e25\u683c\u5c0f\u4e8e $u$ \u7684\u65f6\u523b\uff0c\u5426\u5219\u5728 $u$ \u88ab\u9009\u62e9\u540e $v$ \u4f5c\u4e3a $u$ \u7684\u76f8\u90bb\u8282\u70b9\u5c31\u4f1a\u7acb\u523b\u88ab\u5220\u9664\u3002\n\n\u6240\u4ee5 $G^{\\prime}$ \u4e2d\u4e0d\u5b58\u5728\u73af\uff0c\u5373\u4e3a\u4e00\u4e2a DAG \u3002\u6b64\u65f6\u6211\u4eec\u518d\u5728\u8fd9\u4e2a\u56fe\u4e0a\u9762\u6309\u62d3\u6251\u5e8f\u8dd1\u4e00\u8fb9\u8d2a\u5fc3\u7b97\u6cd5\uff0c\u5f97\u5230 $V^{\\prime}$ \u7684\u4e00\u4e2a\u5b50\u96c6 $V_0$ \uff0c\u6b64\u65f6 $V_0$ \u4e2d\u4efb\u610f\u4e24\u70b9\u95f4\u4e00\u5b9a\u6ca1\u6709\u8fb9\uff0c\u4e14 $V^{\\prime}$ \u4e2d\u4efb\u610f\u4e00\u70b9\u53ef\u4ee5\u7531 $V_0$ \u4e2d\u7684\u70b9\u5728\u4e00\u6b65\u5185\u5230\u8fbe\u3002\n\n\u56e0\u6b64 $V_0$ \u662f\u4e00\u4e2a\u7b26\u5408\u539f\u9898\u7684\u70b9\u96c6\u3002\n\n#### Code\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <vector>\n#include <vector>\n#include <queue>\nusing namespace std;\nconstexpr int N=1000010;\nvector<int> es[N],ans;\n#define pb emplace_back\nnamespace fr{\n\t#include <ctype.h>\n\tchar buf[1<<23],*p1=buf,*p2=buf,obuf[1<<23],*O=obuf;\n\t// #define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\n\t// #define putchar(c) (((O==obuf+(1<<23))?(fwrite(obuf,1,O-obuf,stdout),O=obuf):O),*O++=(c))\n\ttemplate<class T> void rd(T &x){\n\t    T ret=0;bool flg=false;char c=getchar();while(!isdigit(c) && c!='-') c=getchar();\n\t    if(c=='-') c=getchar(),flg=true;while(isdigit(c)) ret=(ret<<1)+(ret<<3)+c-'0',c=getchar();\n\t    if(flg) x=-ret;else x=ret;\n\t}\n\tvoid pc(char c){putchar(c);}\n\ttemplate<class T>\n\tvoid wr(T x){\n\t\tif(x<0) putchar('-');if(x==0) putchar('0');\n\t\tstatic int cnt,stk[110];cnt=0;\n\t\twhile(x) stk[++cnt]=x%10,x/=10;\n\t\tfor(int i=cnt;i;--i)\n\t\t\tputchar(stk[i]+'0');\n\t}\n\tvoid flush(){fwrite(obuf,1,O-obuf,stdout),O=obuf;}\n}\nusing fr::rd;\nusing fr::pc;\nusing fr::wr;\nusing fr::flush;\nint n,m,d[N],conn[N];bool del[N],chs[N];\nint main(){\n\tint n,m;rd(n),rd(m);\n\tfor(int i=1,a,b;i<=m;++i){\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tes[a].pb(b);\n\t}\n\tfor(int i=1;i<=n;++i) if(!del[i]){\n\t\tdel[i]=true;chs[i]=true;\n\t\tfor(int v:es[i])\n\t\t\tdel[v]=true;\n\t}\n\tfor(int i=1;i<=n;++i) if(chs[i])\n\t\tfor(int v:es[i]) if(chs[v])\n\t\t\t++d[v];\n\tqueue<int> q;\n\tfor(int i=1;i<=n;++i) if(chs[i] && !d[i])\n\t\tq.push(i);\n\twhile(!q.empty()){\n\t\tint u=q.front();q.pop();\n\t\tif(!conn[u]) ans.pb(u);\n\t\tfor(int v:es[u]) if(chs[v]){\n\t\t\tconn[v]|=(conn[u]^1);\n\t\t\tif(!(--d[v])) q.push(v);\n\t\t}\n\t}\n\twr((int)ans.size());pc('\\n');\n\tfor(int v:ans)\n\t\twr(v),pc(' ');\n\tpc('\\n');flush();\n\treturn 0;\n}\n```",
        "postTime": 1646054870,
        "uid": 151623,
        "name": "xiaoyaowudi",
        "ccfLevel": 9,
        "title": "[\u9898\u89e3] CF1019C Sergey's Problem"
    },
    {
        "content": "# \u9898\u610f\n\n\u590d\u8ff0\u4e00\u4e0b\u9898\u610f\uff1a\n\n\u7ed9\u5b9a\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u4fdd\u8bc1\u56fe\u8fde\u901a\uff0c\u8981\u6c42\u53d6\u51fa\u5176\u4e2d$x$\u4e2a\u70b9\u4f5c\u4e3a\u96c6\u5408$G$\uff0c\u4f7f\u5f97$G$\u5185\u90e8\u7684\u6240\u6709\u70b9\u4e4b\u95f4\u6ca1\u6709\u76f4\u63a5\u76f8\u8fde\u7684\u8fb9\n\n\u4e14\u56fe\u4e0a\u7684\u4efb\u4f55\u4e00\u4e2a\u70b9\u90fd\u6ee1\u8db3\uff1a\u4ece\u96c6\u5408$G$\u5185\u7684\u67d0\u4e2a\u70b9\u51fa\u53d1\uff0c\u5728\u4e24\u6b65\u4e4b\u5185\u5230\u8fbe\uff08\u7ecf\u8fc7\u4e00\u6761\u8fb9\u5373\u8d70\u4e86\u4e00\u6b65\uff09\n\n\u7b80\u800c\u8a00\u4e4b\u5c31\u662f\u4e24\u6761\uff1a\n\n$1.$\u5206\u9694\u6027\uff08\u4e0d\u76f4\u63a5\u76f8\u8fde\uff09\n\n$2.$\u53ef\u8fbe\u6027\uff08\u4e24\u6b65\u4e4b\u5185\u5230\u8fbe\u4efb\u610f\u70b9\uff09\n\n# \u601d\u8def\n\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u6784\u9020\u4e00\u4e2a\u8fd9\u6837\u7684\u65b9\u6848\uff1a\n\n\u5bf9\u4e8e\u4e00\u4e2a\u56fe\uff0c\u6211\u4eec\u6bcf\u6b21\u9694\u4e00\u5c42\u6765\u9009\u70b9\uff08\u4e00\u5c42\u6307$BFS$\u904d\u5386\u4e2d\u7684\u904d\u5386\u5c42\u6570\uff09\n\n\u6bd4\u5982\u8fd9\u6837\uff1a\n\n![](https://images.cnblogs.com/cnblogs_com/scwjx/1892045/o_210108100417image-20210108120553603.png)\n\n\u5176\u4e2d\u6211\u4eec\u4ece$1$\u7ed3\u70b9\u5f00\u59cb\uff08\u7b2c\u4e00\u5c42\uff09\uff0c\u90a3\u4e48$2,3$\u5c31\u662f\u7b2c\u4e8c\u5c42\uff0c$4,5$\u662f\u7b2c\u4e09\u5c42\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u9009\u7b2c\u4e00\u5c42\u548c\u7b2c\u4e09\u5c42\uff08\u5373\u9009\u5947\u6570\u5c42\uff09\n\n$Q1:$\u60f3\u4e00\u60f3\uff0c\u6211\u4eec\u8fd9\u6837\u9009\u4fdd\u8bc1\u4e86\u4ec0\u4e48$?$\n\n$A1:$\u4fdd\u8bc1\u4e86**\u53ef\u8fbe\u6027**\n\n\u5373\u8fd9\u6837\u9009\uff0c\u7edd\u5bf9\u4e0d\u4f1a\u9020\u6210\u67d0\u4e2a\u70b9\u6211\u4eec**\u4e24\u6b65**\u4e4b\u5185\u5230\u4e0d\u4e86\u7684\u60c5\u51b5\uff08\u5176\u5b9e\u56e0\u4e3a\u6211\u4eec\u662f\u9694**\u4e00\u5c42**\u9009\u4e00\u4e2a\uff0c\u8fd9\u4e2a\u6761\u4ef6\u5728\u8fd9\u91cc\u66f4\u662f\u88ab\u52a0\u5f3a\u5230\u4e86**\u4e00\u6b65**\u4e4b\u5185\u53ef\u4ee5\u5230\u8fbe\u4efb\u610f\u7ed3\u70b9\uff09\n\n\u4e8e\u662f\u6211\u4eec\u73b0\u5728\u5c31\u53ef\u4ee5\u8003\u8651\u4e00\u4e0b\u8fd9\u6837\u6765\u9009\uff0c\u90a3\u4e48\u73b0\u5728\u7684\u95ee\u9898\u662f\uff1a\n\n\u6211\u4eec\u8fd9\u6837\u505a\u53ef\u4ee5\u4fdd\u8bc1**\u53ef\u8fbe\u6027**\uff0c\u4f46\u662f**\u5206\u9694\u6027**\u5462\uff1f\n\n\u6211\u4eec\u80fd\u591f\u786e\u4fdd\u4e00\u5b9a\u4e0d\u4f1a\u540c\u65f6\u9009\u5230\u4e24\u4e2a\u540c\u4e00\u5c42\u7684\u70b9\u5417\uff1f\uff08\u6362\u800c\u8a00\u4e4b\uff0c\u6211\u4eec\u8fd9\u6837\u4f1a\u628a\u6240\u4ee5\u5904\u4e8e\u5947\u6570\u5c42\u7684\u70b9\u90fd\u9009\u4e86\uff0c\u4f46\u662f\u5176\u5b9e\u5728\u8fd9\u4e00\u5c42\u4e2d\u7684\u4e24\u4e2a\u70b9\u4e5f\u662f\u6709\u53ef\u80fd\u6709\u8fde\u8fb9\u7684\uff09\n\n\u7b54\u6848\u662f**\u663e\u7136\u4e0d\u80fd**\uff0c\u6bd4\u5982\u6211\u4eec\u5728\u521a\u521a\u56fe\u7684\u57fa\u7840\u4e0a\uff0c\u52a0\u4e00\u6761$5-4$\u7684\u8fb9\uff1a\n\n![](https://images.cnblogs.com/cnblogs_com/scwjx/1892045/o_210108100615wyhsb.png)\n\n\u73b0\u5728\u6211\u4eec\u8fd8\u662f\u4f1a\u9009\u5230$1,4,5$\u4e09\u4e2a\u70b9\uff0c\u56e0\u4e3a\u6b64\u65f6$1$\u5728\u7b2c\u4e00\u5c42\uff0c$4,5$\u90fd\u5728\u7b2c\u4e09\u5c42\uff0c\u6211\u4eec\u8981\u9009\u5947\u6570\u5c42\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u73b0\u5728\u4f1a\u9009\u5230$1,4,5$\n\n\u4f46\u662f\uff0c\u8fd9\u6837\u9009\u5bf9\u5417\uff1f\n\n**\u4e0d\u5bf9\u3002**\n\n\u56e0\u4e3a\u6211\u4eec\u53d1\u73b0\uff0c\u6b64\u65f6\u6709\u4e86\u8fb9$(5,4)$\uff0c\u8fd9\u4f1a\u5bfc\u81f4$4,5$\u4e24\u4e2a\u70b9\u4e0d\u80fd\u540c\u65f6\u9009\uff0c\u6700\u591a\u53ea\u80fd\u9009\u4e00\u4e2a\uff08\u56e0\u4e3a$G$\u96c6\u5408\u5185\u7684\u70b9\u4e0d\u80fd\u76f4\u63a5\u76f8\u8fde\uff09\n\n\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u77e5\u9053\uff0c\u521a\u521a\u6211\u4eec\u8bbe\u8ba1\u7684\u6784\u9020\u65b9\u6cd5\u662f\u4e0d\u6b63\u786e\u7684\uff0c\u5b83\u53ea\u4fdd\u8bc1\u4e86**\u53ef\u8fbe\u6027**\uff0c\u5374\u4e0d\u80fd\u4fdd\u8bc1**\u5206\u9694\u6027**\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4f18\u5316\u521a\u521a\u7684\u505a\u6cd5\uff0c\u53bb\u9664\u6389\u4e24\u4e2a\u76f8\u90bb\u70b9\u4e2d\u7684\u67d0\u4e00\u4e2a\u4ee5\u4fdd\u8bc1**\u5206\u9694\u6027**\n\n\u4e3a\u4ec0\u4e48\u662f\u53bb\u6389\u4e24\u4e2a\u4e2d\u7684\u67d0\u4e00\u4e2a\u5462\uff1f\n\n\u56e0\u4e3a\u6211\u4eec\u521a\u521a\u4e5f\u63d0\u5230\u4e86\uff0c\u6211\u4eec\u4e4b\u524d\u7684\u8fd9\u79cd\u6784\u9020\u529e\u6cd5\u4f1a\u52a0\u5f3a\u6211\u4eec**\u53ef\u8fbe\u6027**\u7684\u6761\u4ef6\uff0c\u4ece**\u4e24\u6b65**\u53d8\u6210**\u4e00\u6b65**\uff0c\u800c\u6211\u4eec\u628a\u4e0d\u6ee1\u8db3\u5206\u9694\u6027\u7684\u67d0\u4e00\u5bf9\u70b9\u4e2d\u7684\u4e00\u4e2a\u70b9\u5220\u6389\uff08\u5373\u4e0d\u9009\u8fd9\u4e2a\u70b9\uff09\u3002\n\n\u8fd9\u6837\u505a\u4f1a\u4ea7\u751f\u7684\u5f71\u54cd\u5c31\u662f\u5bfc\u81f4\u7531\u8fd9\u4e2a\u70b9\u6240**\u7ea6\u675f**\u7684**\u5468\u56f4\u4e00\u5708\u70b9**\u53ef\u80fd\u4f1a\u4e0d\u6ee1\u8db3**\u53ef\u8fbe\u6027**\u4e86\n\n\u7ea6\u675f\u6307\u7684\u662f\uff0c\u56e0\u4e3a\u5728\u4e4b\u524d\u6211\u4eec\u6bcf\u4e2a\u70b9\u90fd\u80fd\u4e00\u6b65\u5230\u8fbe\u5176\u5468\u56f4\u4e00\u5708\u7684\u70b9\uff0c\u8ba9\u8fd9\u4e00\u5708\u7684\u70b9\u90fd\u4e0d\u4f1a\u5f71\u54cd\u5230**\u53ef\u8fbe\u6027**\uff0c\u56e0\u4e3a\u6211\u4eec\u6b64\u65f6\u96c6\u5408\u5185\u5df2\u7ecf\u6709\u4e86\u70b9\u53ef\u4ee5\u4e00\u6b65\u5230\u8fbe\u8fd9\u4e00\u5708\u70b9\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\n\n\u4e8e\u662f\u6211\u4eec\u5220\u6389$G$\u96c6\u5408\u5185\u7684\u4e00\u4e2a\u70b9\uff08\u5047\u8bbe\u70b9\u7f16\u53f7\u4e3a$x$\uff09\u4ea7\u751f\u7684\u5f71\u54cd\u5c31\u662f\u8fd9\u6837\uff1a\u539f\u672c\u88ab$x$\u7ea6\u675f\u7740\u7684\u6240\u6709\u70b9$y$\uff08\u5373$y \\in son_x$\uff09\u6709\u53ef\u80fd\u73b0\u5728\u5c31\u4e0d\u80fd\u5728\u4e24\u6b65\u4e4b\u5185\u5230\u8fbe\u4e86\u3002\n\n\u4f46\u662f\uff0c\u5176\u5b9e\u8fd9\u6837\u5220\uff08\u6307\u5982\u679c\u51fa\u73b0\u4e24\u4e2a\u540c\u5c42\u4e14\u6709\u8fde\u8fb9\u7684\u70b9\uff09\u662f**\u6ca1\u6709\u5f71\u54cd**\u7684\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u6765**\u8bc1\u660e**\u8fd9\u4e2a\u7ed3\u8bba\uff1a\n\n\u4e0d\u59a8\u8bbe\u4e24\u4e2a\u70b9\u7684\u7f16\u53f7\u5206\u522b\u662f$x,y$\u4e14$x\\leq y$\uff0c\u5047\u8bbe\u8fd9\u6761\u8fb9\u662f$(y,x)$\uff0c\u5373\u4ece$y$\u6307\u5411$x$\n\n\u90a3\u4e48\u73b0\u5728\u6211\u4eec\u5c31\u5220\u6389$x$\uff0c\u56e0\u4e3a\u6b64\u65f6\u6211\u4eec\u77e5\u9053\uff1a\n\n$1.y$\u53ef\u4ee5\u4e00\u6b65\u5230\u8fbe$x$ $\\quad$ [\u6709\u8fb9$(y,x)$]\n\n$2.$\u5220\u6389$x$\u4e4b\u540e\u4f1a\u6709\u5f71\u54cd\u7684\u53ea\u662f$x$\u5468\u56f4\u4e00\u5708\u7684\u70b9\uff08\u5373$x$\u53ef\u4ee5\u4e00\u6b65\u5230\u8fbe\u7684\u6240\u6709\u70b9\uff09\n\n\u90a3\u4e48\u56e0\u4e3a$y-x$\u9700\u8981\u4e00\u6b65\uff0c$x-$**\u6709\u5f71\u54cd\u7684\u70b9** \u9700\u8981\u4e00\u6b65\uff0c\u5219 $y-$**\u6709\u5f71\u54cd\u7684\u70b9** \u9700\u8981**\u4e24\u6b65**\n\n\u800c\u9898\u76ee\u8981\u6c42\u7684**\u53ef\u8fbe\u6027**\u4e5f\u5c31\u662f**\u4e24\u6b65**\u4e4b\u5185\u8981\u80fd\u591f\u5230\u8fbe\n\n\u4e8e\u662f\u6211\u4eec\u4fbf\u611f\u6027\u8bc1\u660e\u4e86\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5220\u6389$x$\uff0c\u5bf9\u7b54\u6848\u7684**\u53ef\u8fbe\u6027\u6ca1\u6709\u5f71\u54cd**\uff0c\u800c\u6211\u4eec\u5220\u6389$x$\u7684\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u53c8\u4f1a\u4fdd\u8bc1\u7b54\u6848\u7684**\u5206\u9694\u6027**\uff0c\u90a3\u4e48\u8fd9\u4e0d\u5c31\u4e24\u4e2a\u6761\u4ef6\u90fd\u6ee1\u8db3\u4e86$?$\n\n\u95ee\u9898\u4e5f\u5c31\u89e3\u51b3\u4e86\u3002\n\n# \u5b9e\u73b0\n\n\u90a3\u4e48\u73b0\u5728\u8003\u8651\u600e\u4e48\u5b9e\u73b0\u3002\n\n\u5b9a\u4e49\u4e24\u4e2a$bool$\u6807\u8bb0\uff0c\u4e00\u4e2a$sel$\u8868\u793a\u5f53\u524d\u70b9\u88ab\u9009\u6ca1\u6709\uff0c\u4e00\u4e2a$vis$\u8868\u793a\u5f53\u524d\u70b9\u88ab\u8bbf\u95ee\u8fc7\u6ca1\u6709\n\n\u9996\u5148\u6211\u4eec\u4ece$1-n$\u679a\u4e3e\u6bcf\u4e2a\u70b9\uff0c\u6bcf\u6b21\u5148\u5224\u65ad\u5f53\u524d\u70b9\u88ab\u8bbf\u95ee\u8fc7\u6ca1\u6709\uff0c\u5982\u679c\u6709\u5c31\u76f4\u63a5\u8df3\u8fc7\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u628a$vis$\u6807\u8bb0\u4e3a\u8bbf\u95ee\u8fc7\uff0c\u7136\u540e\u628a$sel$\u6807\u8bb0\u4e3a$true$\uff0c\u628a\u5f53\u524d\u8fd9\u4e2a\u70b9\u9009\u8fdb\u96c6\u5408\uff0c\u7136\u540e\u904d\u5386\u8fd9\u4e2a\u70b9\u7684\u6240\u6709\u51fa\u8fb9\uff0c\u628a\u5468\u56f4\u4e00\u5708\u7684\u70b9\uff08\u5373\u4e00\u90e8\u5c31\u53ef\u4ee5\u5230\u8fbe\u7684\u70b9\uff09\u7684$vis$\u8bbe\u4e3a\u8bbf\u95ee\u8fc7\u4e86\n\n\u63a5\u4e0b\u6765\u662f\u5220\u9664\u7684\u8fc7\u7a0b\uff1a\n\n\u6211\u4eec\u4ece$n-1$\u679a\u4e3e\u6bcf\u4e2a\u70b9\uff0c\u7136\u540e\u6bcf\u6b21\u770b\u5f53\u524d\u70b9\u88ab\u9009\u6ca1\u6709\uff0c\u5982\u679c\u6ca1\u6709\u76f4\u63a5\u8df3\u8fc7\uff0c\u5982\u679c\u6709\uff0c\u90a3\u4e48\u628a\u8fd9\u4e2a\u70b9\u5468\u56f4\u7684\u4e00\u5708$sel$\u6807\u8bb0\u8bbe\u4e3a$false$\uff0c\u5373\u5220\u9664\u5f53\u524d\u8fd9\u4e2a\u70b9\u5468\u56f4\u7684\u6240\u6709\u4e4b\u524d\u88ab\u9009\u5165\u96c6\u5408\u7684\u70b9\uff08\u56e0\u4e3a\u5f53\u524d\u8fd9\u4e2a\u70b9\u65e2\u7136\u8981\u9009\u5c31\u5fc5\u987b\u5f97\u5220\u6389\u548c\u5b83\u76f8\u90bb\u7684\u53c8\u88ab\u9009\u4e86\u7684\uff09\n\n\u6700\u540e\u5f53\u524d$sel$\u6807\u8bb0\u4e3a$true$\u7684\u5c31\u662f\u8981\u9009\u7684\u7b54\u6848\u96c6\u5408\u4e2d\u7684\u5143\u7d20\uff0c\u5373\u7b54\u6848\n\n\u73b0\u5728\u8003\u8651\u8fd9\u6837\u505a\u7684\u6b63\u786e\u6027\uff1a\n\n\u5728\u7b2c\u4e00\u4e2a\u5faa\u73af\u4e2d\uff0c\u6211\u4eec\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u66f4\u65b0\uff0c\n\n\u4e00\u662f\u4fdd\u8bc1\u4e86**\u53ef\u884c\u6027**\uff1a\u6bcf\u4e2a\u70b9\u53ea\u4f1a\u88ab\u5468\u56f4\u4e00\u5708\u7684\u70b9\u9650\u5236\uff0c\u6ca1\u6709\u88ab\u9650\u5236\u7684\u90fd\u88ab\u9009\u5165\u96c6\u5408\u4e86\n\n\u4e8c\u662f\u4fdd\u8bc1\u4e86\u6700\u540e\u4f1a\u5f71\u54cd\u5230\u7b54\u6848\u7684\u4e00\u5bf9\u70b9\u4e00\u5b9a\u662f **\u7f16\u53f7\u5927$-$\u7f16\u53f7\u5c0f**\uff08\u5373\u7f16\u53f7\u5927\u7684\u70b9\u6307\u5411\u7f16\u53f7\u5c0f\u7684\u70b9\uff09\uff0c\u56e0\u4e3a\u5982\u679c\u662f**\u7f16\u53f7\u5c0f$-$\u7f16\u53f7\u5927**\u7684\u8fb9\uff0c\u6211\u4eec\u4e00\u5b9a\u4f1a\u5728\u904d\u5386\u5230**\u7f16\u53f7\u5c0f**\u7684\u70b9\u7684\u65f6\u5019\u5c31\u76f4\u63a5\u628a**\u7f16\u53f7\u5927**\u7684\u70b9\u7ed9\u53c9\u6389\u4e86\uff08\u56e0\u4e3a\u6211\u4eec\u8981\u53c9\u6389\u5468\u56f4\u4e00\u5708\u561b\uff09\uff0c\u6b64\u65f6\u5927\u7684\u5c31\u6839\u672c\u4e0d\u4f1a\u88ab\u9009\uff0c\u4e5f\u5c31\u66f4\u6ca1\u6709\u5220\u6389\u4e00\u8bf4\u4e86\n\n\u5728\u7b2c\u4e8c\u4e2a\u5faa\u73af\u4e2d\uff0c\u6211\u4eec\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\uff0c\u8fd9\u5c31\u80fd\u4fdd\u8bc1\uff1a\u53ea\u4f1a\u662f\u5927\u7684\u70b9\u53c9\u6389\u5c0f\u7684\u70b9\uff0c\u5373\u5927\u7684\u70b9\u4f1a\u88ab\u4fdd\u7559\uff0c\u5220\u6389\u5c0f\u7684\u70b9\uff0c\u4e3a\u4ec0\u4e48\u4fdd\u7559\u5927\u70b9\u5220\u6389\u5c0f\u70b9\u5462\uff1f\u56e0\u4e3a\u4e4b\u524d\u6211\u4eec\u4e0d\u662f\u8bf4\u4e86\u8981\u5220\u6389\u88ab\u6307\u5411\u7684\u90a3\u4e2a\u70b9\u5417\uff0c\u4e4b\u524d\u7b2c\u4e00\u4e2a\u5faa\u73af\u53c8\u4fdd\u8bc1\u4e86\u4e00\u5b9a\u662f\u7f16\u53f7\u5927\u7684\u70b9\u6307\u5411\u7f16\u53f7\u5c0f\u7684\u70b9\uff0c\u6240\u4ee5\u88ab\u6307\u7740\u7684\u4e00\u5b9a\u662f\u7f16\u53f7\u5c0f\u7684\uff0c\u8fd9\u624d\u8981\u5012\u7740\u5220\uff0c\u8fd9\u6837\u5220\u7684\u8bdd\u5927\u7684\u53ea\u4f1a\u5220\u6389\u5c0f\u7684\uff0c\u800c\u5c0f\u7684\u65e0\u6cd5\u5220\u6389\u5927\u7684\uff08\u56e0\u4e3a\u5982\u679c\u53ef\u4ee5\u90a3\u8fd9\u4e2a\u5c0f\u7684\u65e9\u5c31\u88ab\u5927\u70b9\u7387\u5148\u5220\u6389\u4e86\uff09\n\n\u90a3\u4e48\u6700\u540e\u7edf\u8ba1\u4e00\u904d\u7b54\u6848\u5c31\u884c\u4e86\n\n# \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntemplate <typename T>\ninline void read(T &x){\n    x=0;char ch=getchar();bool f=false;\n    while(!isdigit(ch)){if(ch=='-'){f=true;}ch=getchar();}\n    while(isdigit(ch)){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n    x=f?-x:x;\n    return ;\n}\ntemplate <typename T,typename... Args> inline void read(T& t, Args&... args){read(t);read(args...);}\ntemplate <typename T>\ninline void write(T x){\n    if(x<0) putchar('-'),x=-x;\n    if(x>9) write(x/10);\n    putchar(x%10^48);\n    return ;\n}\ntemplate <typename T>\ninline void print(T x){write(x),putchar(' ');}\n#define ll long long\n#define ull unsigned long long\n#define inc(x,y) (x+y>=MOD?x+y-MOD:x+y)\n#define dec(x,y) (x-y<0?x-y+MOD:x-y)\n#define min(x,y) (x<y?x:y)\n#define max(x,y) (x>y?x:y)\nconst int N=1e6+5,M=1e6+5,MOD=1e9+7;\nint n,m;\nint head[N],nex[M],to[M],idx;\nbool vis[N],f[N];\nvoid add(int u,int v){\n    nex[++idx]=head[u];\n    to[idx]=v;\n    head[u]=idx;\n    return ;\n}\nint main(){\n    read(n);read(m);\n    for(int i=1;i<=m;i++){\n        int u,v;\n        read(u,v);\n        add(u,v);\n    }\n    for(int i=1;i<=n;i++){\n        if(!vis[i]){\n            vis[i]=true;\n            f[i]=true;\n            for(int j=head[i];j;j=nex[j]){\n                int y=to[j];\n                vis[y]=true;\n            }\n        }\n    }\n    for(int i=n;i>=1;i--){\n        if(vis[i]){\n            if(f[i]){\n                for(int j=head[i];j;j=nex[j]){\n                    int y=to[j];\n                    f[y]=false;\n                }\n            }\n        }\n    }\n    int ans=0;\n    for(int i=1;i<=n;i++) if(f[i]) ans++;\n    write(ans);putchar('\\n');\n    for(int i=1;i<=n;i++) if(f[i]) write(i),putchar(' ');\n    return 0;\n}\n``",
        "postTime": 1610090414,
        "uid": 130387,
        "name": "_Anchor",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1019C \u3010Sergey's problem\u3011"
    },
    {
        "content": "## \u89e3\u6790\n\n\u8fd9\u91cc\u8bb2\u4e24\u79cd\u601d\u8def\uff1b\u524d\u4e00\u79cd\u662f\u6211\u770b\u5b8c std \u7684\u5b9e\u73b0\u518d\u7ed3\u5408\u8d5b\u65f6\u7684\u601d\u8003\u5f97\u51fa\u7684\uff0c\u540e\u4e00\u79cd\u5c31\u662f\u793e\u8bba\u7684\u601d\u8def\n\n### \u601d\u8def\u4e00\n\n\u6211\u4eec\u5148\u601d\u8003\u4e0b\u539f\u56fe\u4e3a DAG \u7684\u60c5\u51b5\u65f6\u8be5\u600e\u4e48\u505a\uff1b\n\n\u53ef\u4ee5\u60f3\u5230\u5bf9 DAG \u505a\u4e00\u6b21\u62d3\u6251\u6392\u5e8f\uff0c\u6309\u62d3\u6251\u5e8f\u8d2a\u5fc3\u9009\u4e00\u6b21\u5373\u53ef\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u9009\u62e9\u524d\u68c0\u67e5\u8be5\u7ed3\u70b9\u662f\u5426\u5df2\u88ab\u8bbf\u95ee\uff0c\u9009\u62e9\u540e\u5c06\u8be5\u7ed3\u70b9\u4ee5\u53ca\u8be5\u7ed3\u70b9\u4e00\u6b65\u80fd\u5230\u8fbe\u7684\u7ed3\u70b9\u90fd\u8bbe\u4e3a\u5df2\u8bbf\u95ee\n\n\u4e0d\u96be\u53d1\u73b0\u8fd9\u6837\u6784\u9020\u51fa\u7684\u7b54\u6848 $Q$\uff0c\u56fe\u4e2d\u6240\u6709\u4e0d\u5728 $Q$ \u4e2d\u7684\u7ed3\u70b9\u90fd\u662f\u80fd\u88ab $Q$ **\u4e00\u6b65\u5230\u8fbe**\u7684\n\n\u63a5\u7740\u518d\u8003\u8651\u539f\u56fe\u975e DAG \u65f6\u8be5\u600e\u4e48\u505a\uff1b\n\n\u53ef\u4ee5\u60f3\u5230\uff0c\u5148\u6309\u4efb\u610f\u987a\u5e8f\u626b\u4e00\u904d\uff0c\u9009\u62e9\u7b56\u7565\u548c\u521a\u624d\u76f8\u540c\uff0c\u8fd9\u6837\u6784\u9020\u51fa\u4e00\u5f20\u56fe $G'$\u3002\u4e8e\u662f\u539f\u56fe $G$ \u4e2d\u7684\u6bcf\u4e2a\u7ed3\u70b9\u90fd\u80fd\u88ab $G'$ \u4e00\u6b65\u5230\u8fbe\uff0c\u4e14\u80fd\u53d1\u73b0 $G'$ \u662f\u4e00\u4e2a **DAG**\uff08\u82e5\u5b58\u5728\u73af\uff0c\u8981\u4e48\u73af\u53ef\u80fd\u88ab\u67d0\u4e2a\u80fd\u4e00\u6b65\u5230\u8fbe\u73af\u7684\u7ed3\u70b9\u7684\u68c0\u67e5 \u201c\u622a\u65ad\u201d\uff1b\u8981\u4e48\u8003\u8651\u73af\u4e2d\u7b2c\u4e00\u4e2a\u88ab\u68c0\u67e5\u7684\u7ed3\u70b9\uff0c\u4e00\u5b9a\u4f1a\u628a\u73af \u201c\u622a\u65ad\u201d\uff09\n\n\u4e8e\u662f\u518d\u5c06 $G'$ \u6309\u62d3\u6251\u5e8f\u4ee5\u540c\u6837\u7684\u7b56\u7565\u5f97\u5230\u4e00\u4e2a\u7b54\u6848 $Q$\u3002$G'$ \u4e2d\u7684\u7ed3\u70b9\u90fd\u80fd\u88ab $Q$ \u81f3\u591a\u4e00\u6b65\u5230\u8fbe\uff0c\u800c $G$ \u4e2d\u7684\u7ed3\u70b9\u90fd\u80fd\u88ab $Q$ \u81f3\u591a\u4e24\u6b65\u5230\u8fbe\n\n### \u601d\u8def\u4e8c\n\n\u5148\u8003\u8651\u5f52\u7eb3\u8bc1\u660e\u89e3\u4e00\u5b9a\u5b58\u5728\n\n1. \u9996\u5148\u4ec5\u6709\u4e00\u4e2a\u7ed3\u70b9\u65f6\uff0c\u89e3\u663e\u7136\u5b58\u5728\n2. \u82e5\u6211\u4eec\u80fd\u627e\u5230\u81f3\u591a $k$ \u4e2a\u7ed3\u70b9\u7684\u56fe\u7684\u89e3\uff0c\u8003\u8651\u5f80\u56fe\u4e2d\u518d\u52a0\u5165\u4e00\u4e2a\u7ed3\u70b9\uff0c\u662f\u5426\u8fd8\u80fd\u627e\u5230\u89e3\u3002\u9996\u5148\u6211\u4eec\u628a\u65b0\u52a0\u5165\u7ed3\u70b9 $u$ \u4e00\u6b65\u80fd\u5230\u8fbe\u7684\u8282\u70b9\u90fd\u5148\u4ece\u56fe $G$ \u4e2d\u5220\u9664\uff0c\u518d\u627e\u5230\u5269\u4e0b\u7684\u56fe $G'$ \u7684\u4e00\u4e2a\u89e3 $Q$\u3002\u63a5\u7740\u5982\u679c $Q$ \u80fd\u4e00\u6b65\u5230\u8fbe $u$\uff0c\u90a3\u4e48 $Q$ \u4e5f\u662f $G$ \u7684\u4e00\u4e2a\u89e3\uff1b\u5426\u5219\u5c31\u5c06 $u$ \u52a0\u5165 $Q$\uff0c\u5c31\u80fd\u5f97\u5230 $G$ \u7684\u4e00\u4e2a\u89e3\n\n\u5177\u4f53\u5b9e\u73b0\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5148\u8d2a\u5fc3\u5730\u53d6 $\\{u_i\\}$\u2014\u2014\u6bcf\u4e2a $u_i$ \u5b9e\u9645\u4e0a\u5c31\u662f\u8be5 $u_i$ \u4e0e\u5b83\u4e00\u6b65\u80fd\u5230\u8fbe\u7684\u7ed3\u70b9\uff0c\u7684\u5bfc\u51fa\u5b50\u56fe\u7684\u89e3\uff1b\u63a5\u7740\u6211\u4eec\u518d\u8003\u8651\u4e00\u4e2a\u4e2a \u201c\u5408\u5e76\u201d \u8fd9\u4e9b\u89e3\uff08\u5177\u4f53\u53ef\u4ee5\u8003\u8651\u6309 $\\{u_i\\}$ \u7684\u62d3\u6251\u5e8f\u5408\u5e76\uff1b\u76f4\u63a5\u5730\u6309\u4efb\u610f\u987a\u5e8f\u5408\u5e76\u53ef\u80fd\u6bcf\u6b21\u90fd\u8981\u68c0\u67e5\u4e24\u4e2a\u7ed3\u70b9\u7684\u6240\u6709\u51fa\u8fb9\uff0c\u5bfc\u81f4\u590d\u6742\u5ea6\u7206\u70b8\uff09\u3002\u201c\u5408\u5e76\u201d \u7684\u6b63\u786e\u6027\u8bc1\u660e\u548c\u521a\u624d\u7684\u8bc1\u660e\u76f8\u4f3c\n\n## CODE\n\n\u4e24\u79cd\u601d\u8def\u90fd\u53ef\u4ee5\u89e3\u91ca\u8fd9\u79cd\u5b9e\u73b0\n\n```cpp\n#include <cstdio>\n#include <vector>\nusing std::vector;\n\nconst int MAXN =1e6+20;\n\n/*------------------------------IO------------------------------*/\n\nint read(){\n\tint x =0; char c =getchar(); bool f =0;\n\twhile(c < '0' || c > '9') (c == '-') ? f =1, c =getchar() : c =getchar();\n\twhile(c >= '0' && c <= '9') x =(x<<1)+(x<<3)+(48^c), c =getchar();\n\treturn (f) ? -x : x;\n}\n\nvoid write(const int &x){\n\tif(x/10)\n\t\twrite(x/10);\n\tputchar('0'+x%10);\n}\n\n/*------------------------------Main------------------------------*/\n\nvector<int> E[MAXN];\n\nbool vis[MAXN], chosen[MAXN];\n\nint main(){\n\tint n =read(), m =read();\n\tfor(int i =0; i < m; ++i){\n\t\tint u =read(), v =read();\n\t\tE[u].push_back(v);\n\t}\n\t\n\tint cnt =0;\n\tfor(int i =1; i <= n; ++i)\n\t\tif(!vis[i]){\n\t\t\tif(chosen[i] == 0)\n\t\t\t\t++cnt;\n\t\t\tchosen[i] =1;\n\t\t\tvis[i] =1;\n\t\t\tfor(int j:E[i])\n\t\t\t\tvis[j] =1;\n\t\t}\n\tfor(int i =n; i >= 1; --i)\n\t\tif(chosen[i])\n\t\t\tfor(int j:E[i]){\n\t\t\t\tif(chosen[j] == 1)\n\t\t\t\t\t--cnt;\n\t\t\t\tchosen[j] =0;\n\t\t\t}\n\t\n\twrite(cnt), putchar('\\n');\n\tfor(int i =1; i <= n; ++i)\n\t\tif(chosen[i])\n\t\t\twrite(i), putchar(' ');\n}\n```",
        "postTime": 1605617510,
        "uid": 105254,
        "name": "Piwry",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1019C \u3010Sergey's problem\u3011"
    },
    {
        "content": "\u597d\u7384\u5b66\u7684\u4e1c\u897f...\n\n\u6838\u5fc3\u601d\u60f3\uff1afor\u5faa\u73af\uff01\n\n\u9996\u5148\uff0c\u6211\u4eec\u4ece\u524d\u5411\u540e\u626b\u6240\u6709\u7684\u70b9\uff0c\u5982\u679c\u8fd9\u4e2a\u70b9\u6ca1\u88ab\u6807\u8bb0\u6210\u4e0d\u53ef\u7528\u5c31\u628a\u8fd9\u4e2a\u70b9\u6807\u8bb0\u6210\u5df2\u4f7f\u7528\uff0c\u7136\u540e\u628a\u6240\u6709\u4e0e\u8fd9\u4e2a\u70b9\u76f4\u63a5\u76f8\u8fde\u7684\u70b9\u6807\u8bb0\u6210\u4e0d\u53ef\u7528\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u4ece\u540e\u5411\u524d\u626b\u6240\u6709\u7684\u70b9\uff0c\u5982\u679c\u8fd9\u4e2a\u70b9\u88ab\u6807\u8bb0\u6210\u5df2\u4f7f\u7528\u5c31\u628a\u4e0e\u8fd9\u4e2a\u70b9\u6240\u6709\u76f4\u63a5\u76f8\u8fde\u7684\u4e5f\u88ab\u6807\u8bb0\u5df2\u4f7f\u7528\u7684\u70b9\u8fbe\u6210\u4e0d\u80fd\u4f7f\u7528\uff0c\u6700\u540e\u6807\u8bb0\u6210\u53ef\u4f7f\u7528\u7684\u5c31\u662f\u96c6\u5408\u4e2d\u7684\u70b9\n\n\u8bc1\u660e\u4e00\u4e0b\u8fd9\u4e2a\u7b97\u6cd5\u7684\u6b63\u786e\u6027\uff1a\n\n\u9996\u5148\uff0c\u7ecf\u8fc7\u7b2c\u4e00\u6b65\u64cd\u4f5c\u540e\uff0c\u7b2c\u4e8c\u4e2a\u8981\u6c42\u4e00\u5b9a\u80fd\u591f\u6ee1\u8db3\uff0c\u56e0\u4e3a\u73b0\u5728\u96c6\u5408\u4e2d\u7684\u70b9\u548c\u96c6\u5408\u5916\u7684\u70b9\u7684\u8ddd\u79bb\u81f3\u591a\u662f1\uff01\uff08\u5982\u679c\u8fd9\u4e2a\u70b9\u4e0d\u5728\u96c6\u5408\u91cc\uff0c\u8bf4\u660e\u8fd9\u4e2a\u70b9\u4e00\u5b9a\u5df2\u7ecf\u88ab\u4e00\u4e2a\u5728\u96c6\u5408\u91cc\u7684\u70b9\u6807\u8bb0\u4e0a\u4e86\uff0c\u6240\u4ee5\u96c6\u5408\u91cc\u7684\u70b9\u5230\u96c6\u5408\u5916\u7684\u70b9\u7684\u8ddd\u79bb\u6700\u5927\u662f1\uff09\n\n\u53ef\u662f\u8fd9\u6837\u505a\u4f1a\u4ea7\u751f\u4e00\u4e9b\u4e0d\u5408\u6cd5\u7684\u60c5\u51b5\uff0c\u8fd9\u4e9b\u60c5\u51b5\u7684\u4ea7\u751f\u539f\u56e0\u662f\u6211\u4eec\u5728\u8fdb\u884c\u7b2c\u4e00\u6b65\u64cd\u4f5c\u65f6\uff0c\u53ea\u80fd\u591f\u6392\u9664\u7531\u7f16\u53f7\u8f83\u5c0f\u7684\u70b9\u5411\u7f16\u53f7\u8f83\u5927\u7684\u70b9\u8fde\u8fb9\u7684\u60c5\u51b5\uff0c\u4f46\u662f\u5982\u679c\u6709\u7f16\u53f7\u8f83\u5927\u7684\u70b9\u5411\u7f16\u53f7\u8f83\u5c0f\u7684\u70b9\u8fde\u8fb9\u8fd9\u79cd\u60c5\u51b5\u662f\u65e0\u6cd5\u5904\u7406\u7684\n\n\u6240\u4ee5\u6211\u4eec\u7b2c\u4e8c\u6b21\u518d\u4ece\u540e\u5411\u524d\u626b\u70b9\uff0c\u5c06\u4e0e\u626b\u5230\u7684\u6240\u6709\u8ba1\u5212\u4f7f\u7528\u7684\u70b9\u6709\u8fde\u8fb9\u7684\u70b9\u6807\u8bb0\u4e3a\u4e0d\u53ef\u7528\uff0c\u8fd9\u6837\u5c31\u80fd\u4fdd\u8bc1\u96c6\u5408\u4e2d\u7684\u70b9\u4e92\u76f8\u6ca1\u6709\u8fde\u8fb9\u4e86\n\n\u81f3\u4e8e\u8fd9\u4e48\u505a\u662f\u5426\u80fd\u6ee1\u8db3\u8ddd\u79bb\u7684\u8981\u6c42\uff0c\u6211\u4eec\u601d\u8003\uff1a\u7ecf\u8fc7\u7b2c\u4e00\u6b65\u64cd\u4f5c\u540e\uff0c\u6211\u4eec\u80fd\u4fdd\u8bc1\u7684\u662f\u6240\u6709\u96c6\u5408\u5916\u7684\u70b9\u4e0e\u96c6\u5408\u5185\u7684\u70b9\u8ddd\u79bb\u4e3a1\n\n\u90a3\u4e48\u6211\u4eec\u5220\u9664\u4e00\u4e2a\u96c6\u5408\u5185\u7684\u70b9\u7684\u6761\u4ef6\u8fd9\u4e2a\u70b9\u4e0e\u96c6\u5408\u4e2d\u522b\u7684\u70b9\u6709\u8fde\u8fb9\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u8fd9\u4e2a\u70b9\u88ab\u5220\u6389\u4e86\uff0c\u8fd9\u4e2a\u70b9\u4e0e\u96c6\u5408\u7684\u8ddd\u79bb\u5c31\u4f1a\u53d8\u62101\uff0c\u90a3\u4e48\u6700\u7cdf\u7684\u60c5\u51b5\u65e0\u975e\u5c31\u662f\u53e6\u4e00\u4e2a\u96c6\u5408\u5916\u7684\u70b9\u53ea\u4e0e\u8fd9\u4e2a\u70b9\u76f8\u8fde\uff0c\u8fd9\u6837\u7684\u60c5\u51b5\u7684\u8bdd\u5916\u9762\u7684\u70b9\u5230\u96c6\u5408\u7684\u8ddd\u79bb\u65e0\u975e\u5c31\u662f2\n\uff0c\u6240\u4ee5\u4e5f\u662f\u5408\u6cd5\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u6837\u64cd\u4f5c\u540e\u83b7\u5f97\u7684\u60c5\u51b5\u4e00\u5b9a\u662f\u4e00\u79cd\u5408\u6cd5\u60c5\u51b5\uff01\n\n```cpp\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <cstdlib>\n#include <iostream>\n#include <algorithm>\n#include <queue>\n#include <stack>\nusing namespace std;\nstruct Edge\n{\n    int next;\n    int to;\n}edge[1000005];\nint head[1000005];\nbool used[1000005];\nbool vis[1000005];\nint cnt=1;\nint n,m;\nvoid init()\n{\n    memset(head,-1,sizeof(head));\n    cnt=1;\n}\nvoid add(int l,int r)\n{\n    edge[cnt].next=head[l];\n    edge[cnt].to=r;\n    head[l]=cnt++;\n}\n \nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    init();\n    for(int i=1;i<=m;i++)\n    {    \n        int x,y;    \n        scanf(\"%d%d\",&x,&y);\n        add(x,y);\n    }\n    for(int i=1;i<=n;i++)\n    {\n        if(!used[i])\n        {\n            vis[i]=1;\n            used[i]=1;\n            for(int j=head[i];j!=-1;j=edge[j].next)\n            {\n                int to=edge[j].to;\n                used[to]=1;\n            }\n        }\n    }\n    for(int i=n;i>=1;i--)\n    {\n        if(vis[i])\n        {\n            for(int j=head[i];j!=-1;j=edge[j].next)\n            {\n                int to=edge[j].to;\n                vis[to]=0;\n            }\n        }\n    }\n    int ret=0;\n    for(int i=1;i<=n;i++)\n    {\n        if(vis[i])\n        {\n            ret++;\n        }\n    }\n    printf(\"%d\\n\",ret);\n    for(int i=1;i<=n;i++)\n    {\n        if(vis[i])\n        {\n            printf(\"%d \",i);\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1540297157,
        "uid": 66905,
        "name": "leozhang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1019C \u3010Sergey's problem\u3011"
    },
    {
        "content": "\u672c\u6587\u540c\u6b65\u53d1\u8868\u4e8e\u4e2a\u4eba\u535a\u5ba2\uff1a[Link](https://www.watertomato.com/cf1019c-sergeys-problem-%e9%a2%98%e8%a7%a3/)\u3002\n\n## \u9898\u610f\n\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/CF1019C)\u3002\n\n\u7ed9\u5b9a\u4e00\u5f20\u6709\u5411\u65e0\u81ea\u73af\u56fe\uff0c\u6c42\u4e00\u4e2a\u70b9\u96c6\u6ee1\u8db3\uff1a\n\n1. \u70b9\u96c6\u5185\u4efb\u610f\u4e24\u4e2a\u4e0d\u540c\u70b9\u8ddd\u79bb\u4e0d\u5c0f\u4e8e $2$\uff08\u5373\u65e0\u8fb9\u76f8\u8fde\uff09\u3002\n2. \u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u4e0d\u5728\u70b9\u96c6\u5185\u7684\u70b9\uff0c\u5b58\u5728\u4e00\u4e2a\u70b9\u96c6\u5185\u7684\u70b9\u5230\u5b83\u7684\u8ddd\u79bb\u4e0d\u5927\u4e8e $2$\uff08\u5373\u4e24\u6b65\u80fd\u8fbe\uff09\u3002\n\n## \u89e3\u6790\n\n\u7b97\u6cd5\u5b9e\u73b0\u4e0e @Mickey_snow\u3001@_Anchor \u7b49\u9898\u89e3\u7c7b\u4f3c\uff0c\u672c\u7bc7\u9898\u89e3\u4e3b\u8981\u91cd\u7533\u4e00\u79cd\u53ef\u80fd\u66f4\u6e05\u6670\u7684\u8bc1\u660e\u4ee5\u53ca\u9519\u89e3\u7684 Hack\u3002\n\n\u7b80\u5355\u9610\u8ff0\u89e3\u6cd5\uff1a\n\n1. \u5148\u6309\u5e8f\u53f7\u4ece\u5c0f\u5230\u5927\u5faa\u73af\uff0c\u4f9d\u6b21\u9009\u4e2d\u6ca1\u6709\u88ab\u6807\u8bb0\u7684\u70b9\uff0c\u5e76\u5c06\u5176\u6240\u80fd\u4e00\u6b65\u5230\u8fbe\u4e14\u5e8f\u53f7\u6bd4\u5176\u5927\u7684\u70b9\u90fd\u6253\u4e0a\u6807\u8bb0\u3002\n2. \u518d\u6309\u5e8f\u53f7\u4ece\u5927\u5230\u5c0f\u5faa\u73af\uff0c\u540c\u6837\u9009\u4e2d\u6ca1\u6709\u88ab\u6807\u8bb0\u7684\u70b9\uff0c\u5e76\u5c06\u5176\u6240\u80fd\u4e00\u6b65\u5230\u8fbe\u7684\u70b9\u90fd\u6253\u4e0a\u6807\u8bb0\u3002\n3. \u4ecd\u672a\u88ab\u6253\u4e0a\u6807\u8bb0\u7684\u70b9\u5373\u4e3a\u7b54\u6848\u70b9\u96c6\u3002\n\n### \u8bc1\u660e\n\n\u6839\u636e\u9898\u610f\u4e2d\u7684\u4e24\u4e2a\u6761\u4ef6\uff0c\u8bc1\u660e\u4e5f\u5206\u4e3a\u4e24\u90e8\u5206\u3002\u6211\u4eec\u8bb0\u201c\u70b9\u96c6\u5185\u4efb\u610f\u4e24\u4e2a\u4e0d\u540c\u70b9\u8ddd\u79bb\u4e0d\u5c0f\u4e8e $2$\uff08\u5373\u65e0\u8fb9\u76f8\u8fde\uff09\u201d\u4e3a\u6761\u4ef6 1\uff0c\u8bb0\u201c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u4e0d\u5728\u70b9\u96c6\u5185\u7684\u70b9\uff0c\u5b58\u5728\u4e00\u4e2a\u70b9\u96c6\u5185\u7684\u70b9\u5230\u5b83\u7684\u8ddd\u79bb\u4e0d\u5927\u4e8e $2$\uff08\u5373\u4e24\u6b65\u80fd\u8fbe\uff09\u201d\u4e3a\u6761\u4ef6 2\u3002\n\n**\u6761\u4ef6 1 \u8bc1\u660e\uff1a**\n\n\u8bb0\u70b9 $u$ \u53ef\u4ee5\u4e00\u6b65\u5230\u8fbe $v$ \u4e3a $u \\rightarrow v$\uff0c\u8bb0\u6700\u7ec8\u5f97\u5230\u7684\u70b9\u96c6\u4e3a $S$\u3002\n\n1. \u7531\u89e3\u6cd5\u7684\u7b2c\u4e00\u6b65\u53ef\u77e5\uff0c$S$ \u4e2d\u4e0d\u5b58\u5728 $u\\rightarrow v$ \u4e14 $u<v$\uff0c\u56e0\u4e3a\u70b9 $v$ \u80af\u5b9a\u5728\u904d\u5386\u5230 $u$ \u5c31\u88ab\u6253\u4e0a\u6807\u8bb0\u4e86\u3002\n2. \u7531\u89e3\u6cd5\u7684\u7b2c\u4e8c\u6b65\u53ef\u77e5\uff0c$S$ \u4e2d\u4e0d\u5b58\u5728 $u\\rightarrow v$ \u4e14 $u>v$\uff0c\u56e0\u4e3a\u70b9 $v$ \u80af\u5b9a\u5728\u904d\u5386\u5230 $u$ \u5c31\u88ab\u6253\u4e0a\u6807\u8bb0\u4e86\u3002\n3. \u7efc\u4e0a\uff0c$S$ \u4e2d\u4e0d\u5b58\u5728 $u\\rightarrow v$\u3002\n\n**\u6761\u4ef6 2 \u8bc1\u660e\uff1a**\n\n\u8bb0\u89e3\u6cd5\u7b2c\u4e00\u6b65\u4e2d\u88ab\u6253\u4e0a\u6807\u8bb0\u7684\u70b9\u4e3a $S_1$\uff0c\u7b2c\u4e8c\u6b65\u4e2d\u88ab\u6253\u4e0a\u6807\u8bb0\u7684\u70b9\u4e3a $S_2$\uff0c\u6700\u7ec8\u5f97\u5230\u7684\u70b9\u96c6\u4e3a $S$\u3002\n\n1. \u7531\u89e3\u6cd5\u7684\u7b2c\u4e8c\u6b65\u53ef\u77e5\uff0c\u5bf9\u4e8e $S_2$ \u4e2d\u4efb\u610f\u4e00\u70b9 $v$\uff0c\u5b58\u5728 $S$ \u4e2d\u4e00\u70b9 $u$ \u53ef\u4e00\u6b65\u5230\u8fbe $v$\u3002\n2. \u7531\u89e3\u6cd5\u7684\u7b2c\u4e00\u6b65\u53ef\u77e5\uff0c\u5bf9\u4e8e $S_1$ \u4e2d\u4efb\u610f\u4e00\u70b9 $v$\uff0c\u5b58\u5728 $S$ \u6216 $S_2$ \u4e2d\u4e00\u70b9 $u$ \u53ef\u4e00\u6b65\u5230\u8fbe $v$\u3002\n3. \u7efc\u4e0a\uff0c\u5bf9\u4e8e $S_1$ \u4e2d\u4efb\u610f\u4e00\u70b9 $v$\uff0c\u5b58\u5728 $S$ \u4e2d\u4e00\u70b9 $u$ \u53ef\u4e00\u6b65\u6216\u4e24\u6b65\u5230\u8fbe $v$\u3002\n4. \u7efc\u5408 1\u30013\uff0c\u5bf9\u4e8e $S_1$ \u6216 $S_2$ \u4e2d\u4efb\u610f\u4e00\u70b9 $v$\uff0c\u5b58\u5728 $S$ \u4e2d\u4e00\u70b9 $u$ \u53ef\u4e00\u6b65\u6216\u4e24\u6b65\u5230\u8fbe $v$\uff0c\u5f97\u8bc1\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e6+5;\nstruct node{\n\tint to,nxt;\n}e[N];\nint head[N],cnt,ans,n,m;\ninline void add(int u,int v){\n\te[++cnt].to=v;\n\te[cnt].nxt=head[u];\n\thead[u]=cnt;\n}\nbool vis[N];\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1,u,v;i<=m;i++){\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tadd(u,v);\n\t}\n\tfor(int u=1;u<=n;u++){//\u7b2c\u4e00\u6b65\n\t\tif(!vis[u]){\n\t\t\tfor(int i=head[u];i;i=e[i].nxt){\n\t\t\t\tint v=e[i].to;\n\t\t\t\tif(v>u) vis[v]=1;//\u53ea\u6807\u8bb0\u6bd4\u5b83\u5927\u7684\n\t\t\t}\t\n\t\t}\n\t}\n\tfor(int u=n;u>=1;u--){//\u7b2c\u4e8c\u6b65\n\t\tif(!vis[u]){\n\t\t\tfor(int i=head[u];i;i=e[i].nxt){\n\t\t\t\tint v=e[i].to;\n\t\t\t\tvis[v]=1;//\u4e0d\u9700\u8981\u5224\u5b9a\uff0c\u56e0\u4e3a\u4e0d\u53ef\u80fd\u51fa\u73b0\u5c0f\u7684\u6807\u8bb0\u5927\u7684\uff08\u7b2c\u4e00\u6b65\u4e2d\u5df2\u6267\u884c\uff09\u3002\n\t\t\t}\t\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++) if(!vis[i]) ans++;\n\tprintf(\"%d\\n\",ans);\n\tfor(int i=1;i<=n;i++) if(!vis[i]) printf(\"%d \",i);\n\treturn 0;\n}\n```\n\n## \u53ef\u80fd\u7684\u9519\u89e3\n\n\u53ef\u80fd\u6709\u4eba\u4f1a\u6709\u7591\u60d1\uff0c\u4e3a\u4ec0\u4e48\u7b2c\u4e00\u6b65\u4e2d\u8981\u89c4\u5b9a\u53ea\u6807\u8bb0\u5e8f\u53f7\u6bd4\u5b83\u5927\u7684\uff1f\u80fd\u5426\u53bb\u6389\u7b2c\u4e00\u6b65\u4e2d\u7684 `if(u>v)` \u8fd9\u6bb5\u4ee3\u7801\u5462\uff08\u540c\u65f6\u4f60\u8fd8\u53d1\u73b0\u7b2c\u4e8c\u6b65\u5c31\u65e0\u610f\u4e49\u4e86\uff0c\u751a\u81f3\u53ef\u4ee5\u53bb\u9664\uff09\uff1f\u4f46\u662f\u5f88\u9057\u61be\uff0c\u8fd9\u662f\u9519\u8bef\u7684\u3002\u4e0b\u9762\u5148\u7ed9\u51fa\u4e00\u7ec4 Hack \u6570\u636e\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/snetytjd.png)\n\n\u5728\u9519\u89e3\u7684\u7b2c\u4e00\u6b65\u4e2d\uff0c\u70b9 $1$ \u4f1a\u7ed9\u70b9 $2$ \u6253\u4e0a\u6807\u8bb0\uff0c\u70b9 $3$ \u4f1a\u7ed9\u70b9 $1,4$ \u6253\u4e0a\u6807\u8bb0\uff0c\u70b9 $5$ \u4f1a\u7ed9\u70b9 $3$ \u6253\u4e0a\u6807\u8bb0\uff0c\u6700\u7ec8\u5c31\u53ea\u5269\u4e0b\u4e86\u70b9 $5$ \u663e\u7136\u4e0d\u7b26\u5408\u9898\u610f\u3002\n\n\u800c\u6211\u4eec\u518d\u770b\u6b63\u89e3\uff0c\u7b2c\u4e00\u6b65\u4e2d\uff0c\u70b9 $1$ \u4f1a\u7ed9\u70b9 $2$ \u6253\u4e0a\u6807\u8bb0\uff0c\u70b9 $3$ \u4f1a\u7ed9\u70b9 $4$ \u6253\u4e0a\u6807\u8bb0\u3002\u7b2c\u4e8c\u6b65\u4e2d\uff0c\u70b9 $5$ \u4f1a\u7ed9\u70b9 $3$ \u6253\u4e0a\u6807\u8bb0\uff0c**\u7136\u540e\u70b9 $3$ \u5c31\u4e0d\u4f1a\u518d\u904d\u5386\u4e86**\uff0c\u56e0\u6b64\u70b9 $1$ \u4ecd\u7136\u5b58\u5728\uff0c\u7b54\u6848\u4e3a $1,5$ \u662f\u6b63\u786e\u7684\u3002\n\n\u4e8e\u662f\u9519\u89e3\u7684\u9519\u8bef\u5c31\u663e\u7136\u4e86\uff0c\u5bf9\u4e8e\u90a3\u4e9b\u5728\u7b2c\u4e8c\u6b65\u4e2d\u88ab\u6807\u8bb0\u7684\u70b9\uff0c\u5b9e\u9645\u4e0a\u5b83\u662f\u4e0d\u4f1a\u7ed9\u5176\u4ed6\u70b9\u6253\u6807\u8bb0\u7684\uff0c\u800c\u5728\u9519\u89e3\u4e2d\u5374\u8ba9\u5b83\u4eec\u8fdb\u884c\u4e86\u6253\u6807\u8bb0\u64cd\u4f5c\uff0c\u4ece\u800c\u5bfc\u81f4\u8bef\u4f24\u4e86\u4e0d\u8be5\u88ab\u53bb\u9664\u7684\u70b9\u3002\n\n\u81f3\u6b64\uff0c\u672c\u9898\u7684\u89e3\u6cd5\u4e0e\u9519\u89e3\u90fd\u8bf4\u660e\u5b8c\u6bd5\u3002",
        "postTime": 1620386730,
        "uid": 195229,
        "name": "water_tomato",
        "ccfLevel": 7,
        "title": "CF1019C Sergey's problem \u9898\u89e3"
    },
    {
        "content": "\u9009\u51fa\u539f\u56fe\u4efb\u4e00\u4e2a\u6781\u5927\u72ec\u7acb\u96c6 $S$\uff08\u8ba4\u4e3a\u8fb9\u65e0\u5411\uff09\u3002\u5982\u679c\u5bf9\u4e8e\u67d0\u4e2a $u\\notin S$\uff0c\u5b58\u5728 $v\\in S$\uff0c\u4f7f\u5f97\u5b58\u5728\u6709\u5411\u8fb9 $v\\to u$\uff0c\u90a3 $u$ \u5df2\u7ecf\u6ee1\u8db3\u6761\u4ef6\u4e86\u3002\u6ce8\u610f\u5230\u72ec\u7acb\u96c6\u662f\u6781\u5927\u7684\uff0c\u8fd9\u610f\u5473\u7740\u4efb\u610f $u\\notin S$\uff0c\u8981\u4e48\u5b58\u5728 $v\\in S$ \u4f7f\u5f97\u5b58\u5728\u6709\u5411\u8fb9 $v\\to u$\uff0c\u8981\u4e48\u5b58\u5728 $v\\in S$ \u4f7f\u5f97\u6709\u5411\u8fb9 $u\\to v$\u3002\u56e0\u6b64\uff0c\u5982\u679c\u4e0a\u8ff0\u65b9\u6848\u4e0d\u5408\u6cd5\uff0c\u5c31\u8bf4\u660e\u5b58\u5728 $u\\notin S$\uff0c\u4f7f\u5f97\u5176\u90bb\u96c6\u5185\u6240\u6709\u5728 $S$ \u4e2d\u7684\u70b9 $v$ \u90fd\u662f $u$ \u7684\u540e\u7ee7\uff08\u90fd\u662f $u\\to v$\uff09\u3002\n\n\u8003\u5bdf\u6240\u6709\u8fd9\u6837\u7684 $u$ \u7ec4\u6210\u7684\u96c6\u5408 $T$\u3002\u8bbe $G'$ \u662f $T$ \u5728 $G$ \u4e2d\u7684\u5bfc\u51fa\u5b50\u56fe\u3002\u8bbe $S'$ \u662f $G'$ \u7684\u4e00\u79cd\u5408\u6cd5\u65b9\u6848\u3002\u5982\u679c\u6211\u4eec\u77e5\u9053 $S'$\uff0c\u90a3\u5c31\u80fd\u901a\u8fc7\u4ee5\u4e0b\u65b9\u6cd5\u8c03\u6574 $S$ \u6765\u5f97\u5230 $G$ \u7684\u4e00\u79cd\u5408\u6cd5\u65b9\u6848\uff1a\n\n- \u5bf9\u4e8e $u\\in S'$\uff0c\u5c06 $u$ \u52a0\u5165 $S$\uff0c\u5e76\u5220\u9664 $S$ \u4e2d $N(u)\\cap S$ \u7684\u5143\u7d20\uff08$N(u)$ \u8868\u793a $u$ \u90bb\u96c6\uff09\u3002\n\n\u56e0\u6b64\u9012\u5f52 $(T,G')$ \u6784\u9020\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6\u4e0d\u592a\u4f1a\u5206\u6790\uff0c\u6700\u574f\u662f $O(nm)$\uff0c\u6309\u5b9e\u9645\u8868\u73b0\u770b\u4e0a\u53bb\u53ef\u80fd\u662f $O(m\\sqrt m)$\u3002",
        "postTime": 1650859896,
        "uid": 42156,
        "name": "feecle6418",
        "ccfLevel": 0,
        "title": "CF1019C Sergey's problem \u4e71\u641e"
    },
    {
        "content": "\u5148\u4ece\u5de6\u5f80\u53f3\u626b\u4e00\u904d\uff0c\u628a\u4e00\u4e2a\u672a\u9009\u70b9\u76f8\u8fde\u7684\u90fd\u6807\u8bb0\u4e3a\u4e0d\u53ef\u9009\u3002 \u7136\u540e\u518d\u4ece\u53f3\u5f80\u5de6\u626b\uff0c\n\n\u628a\u4e00\u4e2a\u5df2\u9009\u70b9\u76f8\u8fde\u7684\u5168\u90fd\u6807\u8bb0\u4e3a\u4e0d\u53ef\u9009\u3002\n\n\u6b63\u786e\u6027yy\u3002\n\n```cpp\n#include<cstdio>\nusing namespace std;\ninline int read(){int x=0,f=1,ch=getchar(); while(ch<'0'||ch>'9'){if(ch=='-') f=-1; ch=getchar();} while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();} return x*f;}\ninline void write(int x){if (x<0) putchar('-'),x=-x; if (x>=10) write(x/10); putchar(x%10+'0');}\ninline void writeln(int x){write(x); puts(\"\");}\nconst int N=1e6+5;\nstruct edge{\n\tint link,next;\n}e[N];\nint n,m,head[N],tot;\ninline void add_edge(int u,int v){\n\te[++tot]=(edge){v,head[u]}; head[u]=tot;\n}\ninline void init(){\n\tn=read(); m=read();\n\tfor (int i=1;i<=m;i++){\n\t\tint u=read(),v=read();\n\t\tadd_edge(u,v);\n\t}\n}\nint ans;\nbool vis[N],cho[N];\ninline void solve(){\n\tfor (int u=1;u<=n;u++){\n\t\tif (!vis[u]){\n\t\t\tfor (int i=head[u];i;i=e[i].next){\n\t\t\t\tint v=e[i].link;\n\t\t\t\tvis[v]=1;\n\t\t\t}\n\t\t\tvis[u]=1; cho[u]=1;\n\t\t}\n\t}\n\tfor (int u=n;u;u--){\n\t\tif (cho[u]){\n\t\t\tfor (int i=head[u];i;i=e[i].next){\n\t\t\t\tint v=e[i].link;\n\t\t\t\tcho[v]=0;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i=1;i<=n;i++) ans+=cho[i];\n\twriteln(ans);\n\tfor (int i=1;i<=n;i++) if (cho[i]) write(i),putchar(' ');\n} \nint main(){\n\tinit();\n\tsolve();\n\treturn 0;\n}\n```",
        "postTime": 1536672648,
        "uid": 34444,
        "name": "\u5927\u83dc\u9e21fks",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1019C \u3010Sergey's problem\u3011"
    }
]