[
    {
        "content": "\u8fd9\u9898\u8d5b\u573a\u4e0a\u6211\u7528\u7684\u8d2a\u5fc3\uff0cWA\u5728\u4e86\u7b2c8\u4e2a\u70b9\u3002\u8d5b\u540e\u7528**dp**\u8fc7\u4e86\u3002\n\n\n------------\n\n\u601d\u8def\uff1a\n\n\u6700\u5f00\u59cb\u7684\u65f6\u5019\u5148\u9884\u5904\u7406**\u4eba\u7684\u4f4d\u7f6e**\u3002\n\n\u90a3\u4e48 $f_{i,j}$ \u5c31\u8868\u793a**\u5728\u524d $j$ \u4e2a\u6905\u5b50\u4e2d\uff0c\u524d $i$ \u4e2a\u4eba\u5df2\u7ecf\u5750\u5728\u4e86\u539f\u5148\u6ca1\u4eba\u7684\u4f4d\u7f6e**\u3002\u6240\u4ee5 $f_{0,k}=0(0\\leq k\\leq n)$\u3002\u72b6\u6001\u8f6c\u79fb\u5982\u4e0b\uff1a\n\n- \u5982\u679c\u8fd9\u4e2a\u4f4d\u7f6e\u6ca1\u6709\u4eba\uff0c\u90a3\u4e48\u53ef\u4ee5\u8ba9\u8fd9\u4e2a\u4eba\u5750\u5728\u8fd9\u91cc\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u505a\uff0c\u5c31\u662f\uff1a$f_{i,j}=\\min(f_{i,j-1},f_{i-1,j-1}+|b_i-j|)($\u5176\u4e2d  $b_i$ \u4e3a\u7b2c $i$ \u4e2a\u4eba\u7684\u4f4d\u7f6e$)$\n- \u5982\u679c\u8fd9\u4e2a\u4f4d\u7f6e\u6709\u4eba\uff0c\u90a3\u4e48\u5c31\u53ea\u80fd:$f_{i,j}=f_{i,j-1}$\n\n\u6700\u540e\u8f93\u51fa $f_{cnt,n}(cnt$ $\u4e3a\u603b\u4eba\u6570)$ \u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint t,n,a[5005],f[5005][5005],b[5005];\nint main() {\n\tcin>>n;\n\tmemset(f,0x3f3f3f,sizeof(f));\n\tint cnt=0;\n\tfor(int i=1;i<=n;i++) {\n\t\tcin>>a[i];\n\t\tif(a[i]==1)b[++cnt]=i;\n\t}\n\tfor(int i=0;i<=n;i++)f[0][i]=0;\n\tfor(int i=1;i<=cnt;i++) {\n\t\tfor(int j=1;j<=n;j++) {\n\t\t\tif(a[j]==0)  \n\t\t\t\tf[i][j]=min(f[i][j-1],f[i-1][j-1]+abs(b[i]-j));\n\t\t\telse \n\t\t\t\tf[i][j]=f[i][j-1];\n\t\t}\n\t}\n\tcout<<f[cnt][n]<<endl;\n}\n```\n\n\n\n------------\n\u6700\u540e\u611f\u8c22 @\u4e91\u6d45\u77e5\u5904 \u7684\u6307\u5bfc\uff01\n\n",
        "postTime": 1621661330,
        "uid": 57779,
        "name": "LRL65",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1525D \u3010Armchairs\u3011"
    },
    {
        "content": "\u88f8\u7684 dp \u9898\u3002![fad](https://cdn.luogu.com.cn/upload/pic/62250.png)![fad](https://cdn.luogu.com.cn/upload/pic/62250.png)![fad](https://cdn.luogu.com.cn/upload/pic/62250.png)\n\n\u9996\u5148\uff0c\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u4eba\u7684\u4e0b\u6807\u548c\u7a7a\u6905\u5b50\u7684\u4e0b\u6807\u3002\n\n\u6211\u4eec\u8bbe $f_{i,j}$ \u662f\u7b2c $i$ \u4e2a\u4eba\u5750\u5728 $j$ \u53f7\u7a7a\u6905\u5b50\u4e0a\uff0c\u7531\u6b64\u53ef\u4ee5\u5f97\u5230\u4e0b\u9762\u9012\u63a8\u5f0f\u5b50\uff1a\n\n$$\nf_{i,j}=\\min(f_{i,j-1},f_{i-1,j-1}+|p_i-c_j|)\n$$\n\n\u5176\u4e2d\uff0c $p_i$ \u6307\u7b2c $i$ \u4e2a\u4eba\u7684\u4f4d\u7f6e\uff0c$c_i$ \u6307\u7b2c $j$ \u4e2a\u6905\u5b50\u7684\u4f4d\u7f6e\u3002\n\n$f$ \u6570\u7ec4\u521d\u503c\u5e94\u8be5\u662f\u65e0\u9650\u5927\uff0c\u8fb9\u754c\uff08$f_{0,j}$\uff09\u5e94\u8be5\u5bf9\u4e8e\u6240\u6709 $1\\le j\\le$ \u6905\u5b50\u4e2a\u6570\uff0c\u5168\u662f $0$\u3002\n\n```cpp\n#include<iostream>\n#include<vector>\nusing namespace std;\nint getc(int a,int b){\n\tif(a>=b)\n\t\treturn a-b;\n\treturn b-a;\n}\nint main(){\n\tint n;\n\tcin>>n;\n\tvector<int>si(1,-1);\n\tvector<int>pe(1,-1);\n\tfor(int i=1;i<=n;++i){\n\t\tint x;\n\t\tcin>>x;\n\t\tif(x==1)\n\t\t\tpe.push_back(i);\n\t\telse\n\t\t\tsi.push_back(i);\n\t}\n\tn=pe.size()-1;\n\tint m=si.size()-1;\n\tint dp[n+1][m+1];\n\tfor(int i=1;i<=n;++i)\n\t\tfor(int j=0;j<=m;++j)\n\t\t\tdp[i][j]=100000000;\n\tfor(int j=0;j<=m;++j)\n\t\tdp[0][j]=0;\n\tfor(int i=1;i<=n;++i)\n\t\tfor(int j=1;j<=m;++j)\n\t\t\tdp[i][j]=min(dp[i][j-1],dp[i-1][j-1]+getc(si[j],pe[i]));\n\tint minv=100000000;\n\tfor(int i=1;i<=m;++i)\n\t\tminv=min(minv,dp[n][i]);\n\tcout<<minv<<endl;\n}\n```",
        "postTime": 1621241728,
        "uid": 317899,
        "name": "oimaster",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1525D \u3010Armchairs\u3011"
    },
    {
        "content": "\u9664\u4e86 dp\uff0c\u672c\u9898\u8fd8\u6709\u53e6\u5916\u4e00\u79cd\u663e\u800c\u6613\u89c1\u7684\u505a\u6cd5\u2014\u2014\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u3002  \n\n\u8bbe\u6e90\u70b9\u4e3a $S$ \uff0c\u6c47\u70b9\u4e3a $T$\u3002  \n\u76f8\u90bb\u4e24\u70b9\u4e92\u76f8\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $n$ \uff0c\u8d39\u7528\u4e3a $1$ \u7684\u8fb9\u3002  \n\u4ece $S$ \u5411\u6240\u6709\u521d\u59cb\u4e3a $1$ \u7684\u70b9\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\u3002  \n\u4ece\u6240\u6709\u521d\u59cb\u4e3a $0$ \u7684\u70b9\u5411 $T$ \u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\u3002  \n\n\u7136\u540e\u8dd1\u8d39\u7528\u6d41\u5373\u53ef\u3002\u4ee3\u7801\u5982\u4e0b\uff08[\u7f3a\u7701\u6e90](https://www.luogu.com.cn/blog/andyli/read-template)\uff09\uff1a\n```cpp\n#include <cstring>\n#include <queue>\n\nstruct MCMF {\n    static constexpr int maxn = 5005, maxm = 30005;\n    static constexpr LL INF = 0x3f3f3f3f3f3f3f3fLL;\n    struct Edge {\n        int next, to, cap, flow, cost;\n        Edge() {}\n        Edge(int next, int to, int cap, int flow, int cost) : next(next), to(to), cap(cap), flow(flow), cost(cost) {}\n    } edges[maxm << 1];\n\n    int head[maxn], cur[maxn], cnt = 1;\n    LL dis[maxn];\n    bool vis[maxn];\n    void AddEdge(int u, int v, int c, int w) {\n        edges[++cnt] = Edge(head[u], v, c, 0, w);\n        head[u] = cnt;\n        edges[++cnt] = Edge(head[v], u, 0, 0, -w);\n        head[v] = cnt;\n    }\n    bool SPFA(int s, int t) {\n        memset(dis, 0x3f, sizeof(dis));\n        memcpy(cur, head, sizeof(head));\n        std::queue<int> q;\n        q.push(s);\n        dis[s] = 0;\n        while (!q.empty()) {\n            int u = q.front();\n            q.pop();\n            vis[u] = false;\n            for (int i = head[u]; i; i = edges[i].next) {\n                int v = edges[i].to;\n                if (edges[i].cap > edges[i].flow && dis[v] > dis[u] + edges[i].cost) {\n                    dis[v] = dis[u] + edges[i].cost;\n                    if (!vis[v])\n                        q.push(v), vis[v] = true;\n                }\n            }\n        }\n        return !!(dis[t] ^ INF);\n    }\n    int dfs(int u, int a, int t, LL& cost) {\n        if (u == t || !a)\n            return a;\n        vis[u] = true;\n        int flow = 0, f;\n        for (int& i = cur[u]; i; i = edges[i].next) {\n            int v = edges[i].to;\n            if (!vis[v] && edges[i].cap > edges[i].flow && dis[v] == dis[u] + edges[i].cost && (f = dfs(v, std::min(a, edges[i].cap - edges[i].flow), t, cost))) {\n                edges[i].flow += f;\n                edges[i ^ 1].flow -= f;\n                flow += f;\n                a -= f;\n                cost += 1LL * f * edges[i].cost;\n                if (!a)\n                    break;\n            }\n        }\n        vis[u] = false;\n        return flow;\n    }\n    auto mcmf(int s, int t) {\n        int flow = 0, f;\n        LL cost = 0;\n        while (SPFA(s, t))\n            while ((f = dfs(s, 0x3f3f3f3f, t, cost)))\n                flow += f;\n        return std::pair(flow, cost);\n    }\n} s;\nint A[MCMF::maxn];\n\nint main() {\n    dR(int, n).readArray(A + 1, A + n + 1);\n\n    const int S = n + 1, T = n + 2;\n    for (int i = 1; i < n; i++)\n        s.AddEdge(i, i + 1, n, 1), s.AddEdge(i + 1, i, n, 1);\n    for (int i = 1; i <= n; i++)\n        if (A[i])\n            s.AddEdge(S, i, 1, 0);\n        else\n            s.AddEdge(i, T, 1, 0);\n    writeln(s.mcmf(S, T).second);\n    return 0;\n}\n```",
        "postTime": 1621259190,
        "uid": 84282,
        "name": "andyli",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1525D"
    },
    {
        "content": "\u7535\u4fe1\u8bc8\u9a97\uff01\uff01\uff01                \n                \n                \n\u53ef\u4ee5\u8bc1\u660e\u5bf9\u4e8e\u9700\u8981\u632a\u7684\u4e24\u4e2a\u4f4d\u5b50 $a , b$ \u4e14 $a \\leq b$ \u4ee5\u53ca\u4e24\u4e2a\u7a7a\u4f4d $c , d$ \u4e14 $c \\leq d$,$a$ \u632a\u5230 $c$ \u5e76\u4e14 $b$ \u632a\u5230 $d$ \u4f1a\u4e0d\u52a3\u3002                        \n\n\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u5229\u7528\u8fd9\u4e2a\u6027\u8d28\u8fdb\u884c DP ,\u5b9a\u4e49 $dp_{i,j}$ \u8868\u793a\u7684\u662f\u524d i \u4e2a\u9700\u8981\u632a\u52a8\u7684\u4f4d\u7f6e\u632a\u5230\u524d j \u4e2a\u7a7a\u4f4d\u7f6e\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002                \n\n\u63a5\u7740\u6211\u4eec\u76f4\u63a5\u66b4\u529b\u8f6c\u79fb\u5c31\u597d\u4e86\uff0c\u6bd4\u8d5b\u7684\u65f6\u5019\u56e0\u4e3a\u5728 DP \u5185\u90e8\u53d6 min \u8f93\u51fa\u88ab\u5236\u88c1\u4e86 4 \u53d1\u2026\u2026                           \n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nconst int Len = 5005;\nint n,m,a[Len],b[Len],c[Len],tot1,tot2,dp[Len][Len],pre[Len][Len];\ninline int Iabs(int x){return x < 0 ? -x : x;}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i = 1 ; i <= n ; i ++) scanf(\"%d\",&a[i]);\n\tfor(int i = 1 ; i <= n ; i ++) \n\t{\n\t\tif(a[i] == 1) b[++ tot1] = i; \n\t\telse c[++ tot2] = i;\n\t}\n\tif(!tot1)\n\t{\n\t\tputs(\"0\");\n\t\treturn 0;\n\t}\n\tfor(int i = 0 ; i <= n ; i ++)\n\t\tfor(int j = 0 ; j <= n ; j ++) dp[i][j] = 1e9;\n\tint minn = 1e9 , ans = 1e9;\n\tfor(int i = 1 ; i <= tot2 ; i ++)\n\t{\n\t\tminn = min(minn , Iabs(b[1] - c[i]));\n\t\tdp[1][i] = minn;\n\t}\n\tfor(int i = 2 ; i <= tot1 ; i ++)\n\t\tfor(int j = i ; j <= tot2 ; j ++)\n\t\t\tdp[i][j] = min(dp[i][j - 1] , dp[i - 1][j - 1] + Iabs(b[i] - c[j]));\n\tprintf(\"%d\\n\", dp[tot1][tot2]);\n\treturn 0;\n}\n```",
        "postTime": 1621389718,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1525D Armchairs"
    },
    {
        "content": "\u8d39\u7528\u6d41\u6a21\u677f\u3002\n\n\u5bf9\u4e8e\u4e3a $1$ \u7684\u70b9\uff0c\u4ece\u6e90\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a $1$ \uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\u3002\n\n\u5bf9\u4e8e\u4e3a $0$ \u7684\u70b9\uff0c\u5411\u6c47\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a $1$ \uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a $i$ \uff0c\u70b9 $i$ \u5411\u70b9 $i-1$ \u548c\u70b9 $i+1$ \u5206\u522b\u8fde\u5bb9\u91cf\u4e3a $n$ \uff0c\u8d39\u7528\u4e3a $1$ \u7684\u8fb9\u3002\n\n\u6700\u540e\u8dd1\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u80fd\u8fc7\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define rep(i,a,b) for(int i=a;i<=b;i++)\n#define pre(i,a,b) for(int i=a;i>=b;i--)\n#define N 5005\n#define M 50005\nusing namespace std;\nint n,m,s,t,h[N],tot=1;\nstruct edge{int to,nxt,cap,val;}e[M<<1];\nvoid add(int x,int y,int z,int w){\n\te[++tot].nxt=h[x];h[x]=tot;e[tot].to=y;e[tot].val=w;e[tot].cap=z;\n\te[++tot].nxt=h[y];h[y]=tot;e[tot].to=x;e[tot].val=-w;e[tot].cap=0;\n}\nqueue<int>q;int v[N],d[N],pre[N],cur[N],flow,ans;\nbool bfs(){\n\tmemset(d,0x3f,sizeof(d));\n\tmemset(v,0,sizeof(v));\n\td[s]=0;q.push(s);cur[s]=0x7fffffff;cur[t]=0;\n\twhile(!q.empty()){\n\t\tint x=q.front();q.pop();\n\t\tv[x]=0;\n\t\tfor(int i=h[x];i;i=e[i].nxt)if(e[i].cap&&d[x]+e[i].val<d[e[i].to]){\n\t\t\td[e[i].to]=d[x]+e[i].val;pre[e[i].to]=i;cur[e[i].to]=min(cur[x],e[i].cap);\n\t\t\tif(!v[e[i].to])v[e[i].to]=1,q.push(e[i].to);\n\t\t}\n\t}\n\treturn cur[t]?1:0;\n}\nvoid updata(){\n\tflow+=cur[t];\n\tans+=cur[t]*d[t];\n\tint x=t;\n\twhile(x!=s){\n\t\te[pre[x]].cap-=cur[t];\n\t\te[pre[x]^1].cap+=cur[t];\n\t\tx=e[pre[x]^1].to;\n\t}\n}\nint main(){\n\tscanf(\"%d\",&n);s=n+1;t=s+1;\n\trep(i,1,n){\n\t\tint x;scanf(\"%d\",&x);\n\t\tif(x==1)add(s,i,1,0);\n\t\telse add(i,t,1,0);\n\t}\n\trep(i,1,n-1)add(i,i+1,n,1);\n\trep(i,2,n)add(i,i-1,n,1);\n\twhile(bfs())updata();\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1621256462,
        "uid": 119261,
        "name": "7KByte",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011CF1525D Armchairs"
    }
]