[
    {
        "content": "> [CF566E Restoring Map](https://codeforces.com/contest/566/problem/E)\n\n## \u9898\u610f\n\n- \u6709\u4e00\u68f5 $n$ \u4e2a\u70b9\u7684\u6811\uff0c\u4f60\u4e0d\u77e5\u9053\u8fd9\u68f5\u6811\u7684\u8fb9\u662f\u600e\u4e48\u8fde\u7684\u3002\n- \u4f60\u5f97\u5230\u4e86 $n$ \u6761\u5173\u4e8e\u6bcf\u4e2a\u70b9\u4fe1\u606f\uff0c\u6bcf\u6761\u4fe1\u606f\u8bb0\u5f55\u4e86\u8ddd\u79bb\u67d0\u4e00\u4e2a\u70b9 $\\le 2$ \u7684\u6240\u6709\u70b9\u3002\n- \u4f46\u4f60\u4e0d\u77e5\u9053\u6bcf\u6761\u4fe1\u606f\u5177\u4f53\u662f\u54ea\u4e2a\u70b9\u7684\u3002\n- \u4f60\u9700\u8981\u6784\u9020\u4e00\u68f5\u6ee1\u8db3\u8fd9\u4e9b\u4fe1\u606f\u7684\u6811\u3002\n- $n \\le 10^3$\u3002\n\n## \u9898\u89e3\n\n\u6211\u4eec\u5c06**\u53f6\u5b50\u8282\u70b9**\u5b9a\u4e49\u4e3a**\u5ea6\u6570\u4e3a $1$** \u7684\u8282\u70b9\uff0c**\u975e\u53f6\u8282\u70b9**\u5b9a\u4e49\u4e3a**\u5ea6\u6570 $>1$** \u7684\u8282\u70b9\u3002\n\n\u9996\u5148\u6211\u4eec\u6765\u8003\u8651\u5927\u90e8\u5206\u60c5\u51b5\uff0c\u5373**\u81f3\u5c11\u6709\u4e09\u4e2a\u975e\u53f6\u8282\u70b9**\u7684\u60c5\u51b5\u3002\n\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c**\u4e24\u4e2a\u975e\u53f6\u8282\u70b9 $(x,y)$ \u4e4b\u95f4\u5b58\u5728\u8fb9\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728\u4e24\u4e2a\u96c6\u5408\u7684\u4ea4\u4e3a $\\{x,y\\}$**\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u5f97\u5230\u6240\u6709\u975e\u53f6\u8282\u70b9\u4e4b\u95f4\u7684\u8fde\u8fb9\uff0cbitset \u4f18\u5316\u5373\u53ef\u505a\u5230 $\\mathcal O(\\frac{n^3}w)$\u3002\n\n**\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u5982\u679c\u5f53\u5b58\u5728\u4e24\u4e2a\u96c6\u5408\u7684\u4ea4\u96c6\u5927\u5c0f\u4e3a $2$ \u65f6\uff0c\u5bf9 bitset \u66b4\u529b `for` \u5faa\u73af\u627e\u503c\u4e3a $1$ \u7684\u4f4d\u7f6e\uff0c\u590d\u6742\u5ea6\u5e76\u4e0d\u4f1a\u9664\u4ee5\u90a3\u4e2a $w$\uff0c\u662f\u9519\u7684\uff0c\u53ef\u4ee5\u88ab\u5361\u6389\uff0c\u4f46\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48 CF \u6ca1\u6709\u5361\uff0c\u4e5f\u8bb8\u662f\u56e0\u4e3a CF \u8bc4\u6d4b\u673a\u592a\u5feb\u4e86\u3002\u6b63\u786e\u7684\u5199\u6cd5\u662f\u501f\u7528 `_Find_first()` \u548c `_Find_next()` \u51fd\u6570\uff0c\u524d\u8005\u662f\u627e\u5230 bitset \u4e2d\u4ece\u4f4e\u4f4d\u5230\u9ad8\u4f4d\u7b2c\u4e00\u4e2a $1$ \u7684\u4f4d\u7f6e\uff0c\u540e\u8005\u662f\u627e\u5230\u5f53\u524d\u4f4d\u7f6e\u7684\u4e0b\u4e00\u4e2a\u4e3a $1$ \u7684\u4f4d\u7f6e\uff0c\u8fd9\u6837\u590d\u6742\u5ea6\u624d\u4f1a\u9664\u4ee5\u90a3\u4e2a $w$\u3002**\n\n\u73b0\u5728\uff0c\u6211\u4eec\u77e5\u9053\u6bcf\u4e2a\u70b9\u662f\u5426\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u63a5\u4e0b\u6765\u8003\u8651\u5982\u4f55\u627e\u5230\u53f6\u5b50\u8282\u70b9\u5728\u6811\u4e2d\u7684\u7236\u4eb2\u3002\n\n\u663e\u7136\uff0c**\u5bf9\u4e8e\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\uff0c\u5728\u6240\u6709\u5305\u542b\u5b83\u7684\u96c6\u5408\u4e2d\uff0c\u8282\u70b9\u6570\u6700\u5c11\u7684\u96c6\u5408\u4e00\u5b9a\u5c31\u662f\u6b64\u53f6\u5b50\u8282\u70b9\u7684\u96c6\u5408**\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u5bf9\u5e94\u7684\u96c6\u5408\u662f\u54ea\u4e2a\u3002\n\n\u5982\u679c\u6211\u4eec\u628a**\u8fde\u8fb9\u96c6\u5408**\u5b9a\u4e49\u4e3a**\u4e00\u4e2a\u975e\u53f6\u8282\u70b9\u4e0e\u548c\u5b83\u76f8\u8fde\u7684\u975e\u53f6\u8282\u70b9**\u6784\u6210\u7684\u96c6\u5408\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c**\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u96c6\u5408\u4e2d\u53bb\u6389\u6240\u6709\u53f6\u5b50\u8282\u70b9**\u7b49\u4e8e**\u5176\u7236\u4eb2\u7684\u8fde\u8fb9\u96c6\u5408**\uff0c\u800c\u6240\u6709\u975e\u53f6\u8282\u70b9\u7684\u8fde\u8fb9\u96c6\u5408\u4e00\u5b9a\u4e92\u4e0d\u76f8\u540c\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u786e\u5b9a\u6240\u6709\u53f6\u5b50\u8282\u70b9\u7684\u7236\u4eb2\u4e86\uff0c\u8fd9\u91cc\u540c\u6837\u53ef\u4ee5 bitset \u4f18\u5316\u3002\n\n\u6700\u540e\u6765\u8003\u8651\u975e\u53f6\u8282\u70b9\u6570\u91cf\u5c11\u4e8e\u4e09\u4e2a\u7684\u60c5\u51b5\u3002\n\n\u5982\u679c\u4e0d\u5b58\u5728\u975e\u53f6\u8282\u70b9\uff0c\u5219 $n=2$\uff0c\u53ef\u4ee5\u76f4\u63a5\u5224\u6389\u3002\n\n\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u975e\u53f6\u8282\u70b9\uff0c\u90a3\u5c31\u610f\u5473\u7740\u6240\u6709\u96c6\u5408\u90fd\u662f $\\{1,2,\\cdots n\\}$\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5224\u6389\u3002\n\n\u5982\u679c\u6709\u4e24\u4e2a\u975e\u53f6\u8282\u70b9\uff0c\u6211\u4eec\u5148\u91c7\u7528\u81f3\u5c11\u4e09\u4e2a\u975e\u53f6\u8282\u70b9\u7684\u65b9\u6cd5\u627e\u5230\u8fd9\u4e24\u4e2a\u975e\u53f6\u8282\u70b9\uff0c\u7136\u540e\u4f1a\u53d1\u73b0\u8fd9\u4e24\u4e2a\u975e\u53f6\u8282\u70b9\u7684\u8fde\u8fb9\u96c6\u5408\u662f\u4e00\u6837\u7684\u3002\u4f46\u662f\uff0c\u8fd9\u4e2a\u65f6\u5019\u53f6\u5b50\u7684\u96c6\u5408\u5c31\u53ea\u6709\u4e24\u79cd\uff0c\u9009\u5176\u4e2d\u4e00\u79cd\u91cc\u7684\u53f6\u5b50\u6302\u5728\u4e00\u4e2a\u975e\u53f6\u8282\u70b9\u4e0b\uff0c\u53e6\u4e00\u79cd\u91cc\u7684\u53f6\u5b50\u6302\u5728\u53e6\u5916\u4e00\u4e2a\u975e\u53f6\u8282\u70b9\u4e0b\u5c31\u597d\u4e86\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(\\frac{n^3}w)$\u3002\n\n## \u4ee3\u7801\n\n```cpp\nconst int N = 1e3 + 7;\nint n, v[N], w[N], cnt;\nbitset<N> a[N], b[N], e[N];\n\nint main() {\n\trd(n);\n\tif (n == 2) return prints(\"1 2\"), 0;\n\tbool ok = 1;\n\tfor (int i = 1, j, k; i <= n; i++) {\n\t\trd(k);\n\t\tif (k != n) ok = 0;\n\t\twhile (k--) rd(j), a[i][j] = 1;\n\t}\n\tif (ok) {\n\t\tfor (int i = 1; i < n; i++) print(n, ' '), print(i);\n\t\treturn 0;\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = i + 1; j <= n; j++) {\n\t\t\tbitset<N> o = a[i] & a[j];\n\t\t\tif (o.count() != 2) continue;\n\t\t\tint x = o._Find_first(), y = o._Find_next(x);\n\t\t\tif (e[x][y]) continue;\n\t\t\tprint(x, ' '), print(y);\n\t\t\te[x][y] = e[y][x] = 1, v[x] = v[y] = 1;\n\t\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tif (!v[i]) {\n\t\t\tint s = n + 1, o = 0;\n\t\t\tfor (int j = 1; j <= n; j++)\n\t\t\t\tif (!w[j] && a[j][i]) {\n\t\t\t\t\tint c = a[j].count();\n\t\t\t\t\tif (c < s) s = c, o = j;\n\t\t\t\t}\n\t\t\tb[i] = a[o], w[o] = 1;\n\t\t} else e[i][i] = 1, ++cnt;\n\tif (cnt == 2) {\n\t\tint x, y;\n\t\tfor (int i = 1; i <= n; i++)\n\t\t\tif (v[i]) x = i;\n\t\tfor (int i = n; i; i--)\n\t\t\tif (v[i]) y = i;\n\t\tfor (int i = 1; i <= n; i++)\n\t\t\tif ((int)a[i].count() != n) {\n\t\t\t\tfor (int j = 1; j <= n; j++) {\n\t\t\t\t\tif (v[j]) continue;\n\t\t\t\t\tif (a[i][j]) print(x, ' ');\n\t\t\t\t\telse print(y, ' ');\n\t\t\t\t\tprint(j);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\treturn 0;\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tif (!v[i]) {\n\t\t\tfor (int j = 1; j <= n; j++)\n\t\t\t\tif (!v[j]) b[i][j] = 0;\n\t\t\tfor (int j = 1; j <= n; j++)\n\t\t\t\tif (v[j] && b[i] == e[j]) {\n\t\t\t\t\tprint(i, ' '), print(j);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t}\n\treturn 0;\n}\n```",
        "postTime": 1581586780,
        "uid": 100544,
        "name": "xht",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF566E \u3010Restoring Map\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5927\u81f4\u601d\u8def\u5f88\u7b80\u5355\uff0c\u4ee3\u7801\u4e5f\u5f88\u7b80\u5355\uff0c\u4f46\u662f\u6709\u597d\u591a\u7e41\u7410\u7684\u7ec6\u8282\uff0c\u8981\u4e25\u683c\u8bc1\u660e\u662f\u771f\u9ebb\u70e6\u3002\uff08\u5927\u6982\u4e5f\u662f\u672c\u849f\u84bb\u601d\u8def\u6e05\u5947\uff0c\u4e00\u4e9b\u4e1c\u897f\u53ef\u80fd\u6bd4\u8f83\u663e\u7136\u4e5f\u8981\u8bc1\u660e\u4e00\u901a\uff0cdalao\u53ef\u4ee5\u653e\u5fc3\u8df3\u8fc7\uff09\n\n\u6784\u9020\u4e00\u68f5\u6811\uff0c\u53ef\u4ee5\u60f3\u5230\uff08~~\u6839\u672c\u60f3\u4e0d\u5230~~\uff09\u628a\u6811\u4e0a\u8282\u70b9\u5206\u4e3a\u53f6\u5b50\u548c\u975e\u53f6\u5b50\uff0c\u7136\u540e\u5c31\u8003\u8651\u600e\u6837\u6839\u636e\u5df2\u77e5\u5224\u65ad\u53f6\u5b50\u548c\u975e\u53f6\u5b50\u3002\n\n**\u5982\u679c\u5b58\u5728\u4e24\u4e2a\u8282\u70b9\u7684\u90bb\u5c45\u96c6\u5408\u4ea4\u96c6\u4e2d\u53ea\u6709\u4e24\u4e2a\u8282\u70b9\uff0c\u90a3\u4e48\u4ea4\u96c6\u4e2d\u7684\u8fd9\u4e24\u4e2a\u8282\u70b9\u90fd\u662f\u975e\u53f6\u5b50\u8282\u70b9\u5e76\u4e14\u6709\u8fde\u8fb9\u3002**\n\n### **\u4ee5\u4e0b\u9ed8\u8ba4\u8fd9\u662f\u4e00\u68f5\u975e\u53f6\u5b50\u8282\u70b9\u6570>2\u7684\u6811\uff0c\u975e\u53f6\u5b50\u8282\u70b9\u6570<=2\u7684\u60c5\u51b5\u5355\u72ec\u8ba8\u8bba\u3002**\n\n**\u5fc5\u8981\u6027**\u8bc1\u660e\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/bs80kgpr.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u5982\u56fe\uff0c\u8282\u70b91\u30012\u662f\u4e24\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u4e14\u6709\u8fde\u8fb9\uff0c\u70b93\u30014\u5c31\u6ee1\u8db3\u90bb\u5c45\u96c6\u5408\u7684\u4ea4\u96c6\u4e2d\u53ea\u6709\u4e24\u4e2a\u8282\u70b9\uff0c1\u548c2\u3002\n\n\u5982\u679c3\u30014\u4e0b\u9762\u6709\u5b50\u6811\uff0c\u663e\u7136\u4e0d\u4f1a\u5f71\u54cd\u5b83\u4eec\u7684\u90bb\u5c45\u4ea4\u96c6\u3002\n\n\u5982\u679c\u6709\u70b9\u52301\u62162\u7684\u8ddd\u79bb\u4e3a1\uff0c\u90a3\u5b83\u53ea\u80fd\u6210\u4e3a3\u62164\u5176\u4e00\u7684\u90bb\u5c45\u3002\u56e0\u4e3a\u6811\u4e0a\u6ca1\u6709\u73af\uff0c\u6240\u4ee5\u4e0d\u53ef\u80fd\u7531\u70b9\u52301\u30012\u7684\u8ddd\u79bb\u90fd\u4e3a1\u3002\n\n\u56e0\u6b64\uff0c\u4e0d\u7ba1\u6811\u6709\u591a\u590d\u6742\uff0c\u5efa\u7acb\u5728\u8fd9\u4e2a\u57fa\u672c\u6a21\u578b\u4e0a\uff0c\u5fc5\u8981\u6027\u662f\u4e00\u5b9a\u6210\u7acb\u7684\u3002\n\n**\u5145\u5206\u6027**\u8bc1\u660e\uff1a\n\n1\u3001\u8bc1\u660e\uff1a**\u5982\u679c\u5b58\u5728\u4e24\u4e2a\u8282\u70b9\u7684\u90bb\u5c45\u96c6\u5408\u4ea4\u96c6\u4e2d\u53ea\u6709\u4e24\u4e2a\u8282\u70b9\uff0c\u90a3\u4e48\u4ea4\u96c6\u4e2d\u7684\u8fd9\u4e24\u4e2a\u8282\u70b9\u6709\u8fde\u8fb9\u3002**\n\n\u901a\u8fc7\u601d\u8003\u53ef\u4ee5\u60f3\u5230\u4e00\u4e2a\u5c0f\u7ed3\u8bba\uff1a**\u5982\u679c\u6709\u4e24\u4e2a\u70b9a,b\u90fd\u5728\u70b9x\u7684\u90bb\u5c45\u96c6\u5408\u4e2d\uff0c\u4e14a\u4e0eb\u4e4b\u95f4\u6ca1\u6709\u8fde\u8fb9\uff0c\u90a3\u4e48\u4ecea\u5230b\u8def\u5f84\u4e0a\u7684\u6240\u6709\u70b9\u90fd\u5728\u70b9x\u7684\u90bb\u5c45\u96c6\u5408\u4e2d\u3002**\n\n\u8fd9\u4e2a\u8fd8\u662f\u6bd4\u8f83\u597d\u60f3\u7684\uff0c\u4e00\u4e2a\u70b9\u7684\u90bb\u5c45\u96c6\u5408\u4e2d\u53ea\u6709\u8fd9\u51e0\u7c7b\u70b9\uff1a\u7237\u7237\uff0c\u7236\u4eb2\uff0c\u5144\u5f1f\uff0c\u81ea\u5df1\uff0c\u513f\u5b50\uff0c\u5b59\u5b50\u3002\uff08\u5f53\u6210\u6709\u6839\u6811\u6bd4\u8f83\u597d\u60f3\uff09\n\n\u4e24\u4e24\u679a\u4e3e\u4e00\u4e0b\u6ca1\u6709\u76f4\u63a5\u8fde\u8fb9\u7684\u70b9\u5373\u53ef\u3002\n\n\u56e0\u6b64\uff0c\u82e5\u90bb\u5c45\u96c6\u5408\u4ea4\u96c6\u4e2d\u53ea\u6709\u4e24\u4e2a\u8282\u70b9\uff0c\u90a3\u4e48\u4ea4\u96c6\u4e2d\u7684\u8fd9\u4e24\u4e2a\u8282\u70b9\u6709\u8fde\u8fb9\u3002\uff08\u82e5\u6ca1\u6709\u8fde\u8fb9\uff0c\u90a3\u5b83\u4eec\u8def\u5f84\u4e0a\u7684\u70b9\u4e5f\u4f1a\u5728\u4ea4\u96c6\u4e2d\uff0c\u4ea4\u96c6\u4e2d\u5c31\u4e0d\u6b62\u6709\u4e24\u4e2a\u70b9\u4e86\uff09\n\n2\u3001\u8bc1\u660e\uff1a**\u5982\u679c\u5b58\u5728\u4e24\u4e2a\u8282\u70b9\u7684\u90bb\u5c45\u96c6\u5408\u4ea4\u96c6\u4e2d\u53ea\u6709\u4e24\u4e2a\u8282\u70b9\uff0c\u90a3\u4e48\u4ea4\u96c6\u4e2d\u7684\u8fd9\u4e24\u4e2a\u8282\u70b9\u90fd\u662f\u975e\u53f6\u5b50\u8282\u70b9\u3002**\n\n\u53cd\u8bc1\u6cd5\uff1a\n\n1\uff09\u5047\u8bbe**\u8fd9\u4e24\u4e2a\u8282\u70b9\u90fd\u662f\u53f6\u5b50\u8282\u70b9**\uff1a\n\n\u53f6\u5b50\u8282\u70b9\u5ea6\u6570\u4e3a1\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u7684\u90bb\u5c45\u96c6\u5408\u4e2d\u6709\u53f6\u5b50\u8282\u70b9\uff0c\u5c31\u5fc5\u7136\u6709\u5b83\u7684\u7236\u4eb2\u3002\n\n\u6240\u4ee5\u5982\u679c\u4e24\u4e2a\u8282\u70b9\u90fd\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u90a3\u4e48\u4ea4\u96c6\u4e2d\u4e00\u5b9a\u4e5f\u6709\u5b83\u4eec\u7684\u7236\u4eb2\u8282\u70b9\uff0c\u4e0d\u6b62\u4e24\u4e2a\u70b9\u3002\u5047\u8bbe\u4e0d\u6210\u7acb\u3002\n\n2\uff09\u5047\u8bbe**\u8fd9\u4e24\u4e2a\u8282\u70b9\u4e00\u4e2a\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u4e00\u4e2a\u4e0d\u662f\u3002**\n\n\u7531 1\uff09\u5f97\uff0c\u5b83\u4eec\u53ea\u80fd\u662f\u53f6\u5b50\u548c\u53f6\u5b50\u7684\u7236\u4eb2\u3002\uff08\u4ee5\u201c\u53f6\u5b50\u201d\u548c\u201c\u7236\u4eb2\u201d\u4ee3\u66ff\uff09\n\n\u8fd9\u65f6\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a\u70b9a\uff0c\u5230\u7236\u4eb2\u7684\u8ddd\u79bb\u4e3a1\u3002\uff08\u56e0\u4e3a\u7236\u4eb2\u4e0d\u662f\u53f6\u5b50\u561b\uff0c\u5ea6\u6570\u80af\u5b9a>1\uff09\n\n\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u7684\u90bb\u5c45\u96c6\u5408\u4e2d\u6709\u53f6\u5b50\u548c\u7236\u4eb2\uff0c\u5c31\u4e00\u5b9a\u6709a\uff0c\u6240\u4ee5\u4ea4\u96c6\u4e0d\u53ea\u6709\u4e24\u4e2a\u70b9\uff0c\u5047\u8bbe\u4e0d\u6210\u7acb\u3002\n\n\u8bc1\u6bd5\u3002\n\n\u6240\u4ee5\u8fd9\u4e2a~~\u83ab\u540d\u5176\u5999\u7684~~\u7ed3\u8bba\u7684\u5145\u5206\u6027\u548c\u5fc5\u8981\u6027\u90fd\u662f\u4e00\u5b9a\u6210\u7acb\u7684\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u786e\u5b9a**\u6bcf\u4e00\u4e2a\u70b9\u662f\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u4ee5\u53ca\u6240\u6709\u975e\u53f6\u5b50\u8282\u70b9\u7684\u8fde\u8fb9\u60c5\u51b5\u3002**\n\n\u4e3a\u4ec0\u4e48\u6240\u6709\u7684\u90fd\u80fd\u786e\u5b9a\u5462\uff1f\u65e2\u7136\u662f\u5728\u975e\u53f6\u5b50\u8282\u70b9\u6570>2\u7684\u524d\u63d0\u4e0b\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\uff0c\u4e0e\u5176\u76f8\u8fde\u7684\u4e0d\u53ef\u80fd\u5168\u90e8\u90fd\u662f\u53f6\u5b50\u8282\u70b9\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\uff0c\u90fd\u81f3\u5c11\u6709\u4e00\u6761\u8fb9\u662f\u8fde\u5411\u53e6\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u7684\u3002\u56e0\u6b64\u901a\u8fc7\u4e0a\u9762\u7684\u7ed3\u8bba\uff0c\u53ef\u4ee5\u786e\u5b9a\u6bcf\u4e00\u4e2a\u70b9\u662f\u4e0d\u662f\u53f6\u5b50\u3002\n\n\u63a5\u4e0b\u6765\u53ea\u8981\u786e\u5b9a**\u6bcf\u4e2a\u53f6\u5b50\u7684\u7236\u4eb2**\u5c31\u641e\u5b9a\u4e86\u3002\n\n\u4e00\u4e2a\u6bd4\u8f83\u663e\u7136\u7684\u7ed3\u8bba\uff1a**\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u90bb\u5c45\u96c6\u5408\u4e2d\u53bb\u6389\u6240\u6709\u7684\u53f6\u5b50\u8282\u70b9\uff08\u5305\u62ec\u5b83\u81ea\u5df1\uff09\uff0c\u5f97\u5230\u7684\u96c6\u5408\u4e0e\u5b83\u7684\u7236\u4eb2\u5df2\u7ecf\u786e\u5b9a\u7684\u8fde\u8fb9\u96c6\u5408\uff08\u5373\u6240\u6709\u4e0e\u5b83\u7236\u4eb2\u8ddd\u79bb\u4e3a1\u7684\u975e\u53f6\u5b50\u8282\u70b9\u96c6\u5408\uff0c\u8bb0\u4e3a\u96c6\u5408A\uff09\u662f\u4e00\u81f4\u7684\u3002**\n\n\u8fd9\u6837\u5c31\u51fa\u73b0\u4e86\u4e24\u4e2a\u95ee\u9898\uff1a\n\n**1\u3001\u786e\u5b9a\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u90bb\u5c45\u96c6\u5408\u662f\u54ea\u4e2a\u3002**\n\n**2\u3001\u8bc1\u660e\u975e\u53f6\u5b50\u8282\u70b9\u7684\u96c6\u5408A\u5177\u6709\u4e92\u5f02\u6027\u3002**\n\n**\u95ee\u98981\uff1a**\n\n**\u4e00\u4e2a\u5c0f\u7ed3\u8bba\uff1a\u5728\u6240\u6709\u5305\u542b\u53f6\u5b50\u8282\u70b9a\u7684\u90bb\u5c45\u96c6\u5408\u4e2d\uff0c\u53f6\u5b50\u8282\u70b9a\u7684\u90bb\u5c45\u96c6\u5408\u5305\u542b\u7684\u8282\u70b9\u6700\u5c11\u3002**\n\n\u8fd8\u662f\u5f88\u663e\u7136\u7684\uff1a\u53f6\u5b50\u8282\u70b9\u7684\u90bb\u5c45\u96c6\u5408\u4e2d\u53ea\u6709\u53f6\u5b50\u3001\u7236\u4eb2\u3001\u4e0e\u7236\u4eb2\u8ddd\u79bb\u4e3a1\u7684\u8282\u70b9\u3002\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u7684\u90bb\u5c45\u96c6\u5408\u4e2d\u6709\u53f6\u5b50\u8282\u70b9\uff0c\u5b83\u4e0e\u7236\u4eb2\u7684\u8ddd\u79bb\u4e00\u5b9a<=1\uff0c\u4e8e\u662f\u5c31\u4e00\u5b9a\u5305\u542b\u4e0a\u8ff0\u8282\u70b9\uff0c\u8282\u70b9\u6570\u53ea\u591a\u4e0d\u5c11\u3002\n\n**\u95ee\u98982\uff1a**\n\n\u628a\u8fd9\u68f5\u6811\u770b\u6210\u4e00\u68f5\u6709\u6839\u6811\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e24\u4e2a\u76f8\u8fde\u7684\uff08\u4e0d\u76f8\u8fde\u7684\u663e\u7136\u96c6\u5408A\u4e0d\u53ef\u80fd\u4e00\u6837\uff09\u975e\u53f6\u5b50\u8282\u70b9a\u3001b\uff0c\u4ee4a\u662fb\u7684\u7236\u4eb2\uff08\u5728b\u7684\u4e0a\u9762\uff09\uff1a\n\n1\uff09\u5982\u679ca\u7684\u4e0a\u9762\u3001b\u7684\u4e0b\u9762\u90fd\u8fde\u7740\u975e\u53f6\u5b50\u8282\u70b9\uff0c\u5b83\u4eec\u7684\u96c6\u5408A\u663e\u7136\u4e0d\u540c\u3002\n\n2\uff09\u5982\u679ca\u7684\u4e0a\u9762\u4e3a\u53f6\u5b50\u8282\u70b9\uff0cb\u7684\u4e0b\u9762\u4e3a\u975e\u53f6\u5b50\u8282\u70b9\uff0c\u90a3\u4e48b\u7684\u4e0b\u9762\u7684\u975e\u53f6\u5b50\u8282\u70b9\u53ea\u5c5e\u4e8eb\u7684\u96c6\u5408A\uff0c\u4e0d\u5c5e\u4e8ea\u7684\u96c6\u5408A\u3002a\u3001b\u7684\u96c6\u5408A\u4e0d\u540c\u3002\n\na\u7684\u4e0a\u9762\u4e3a\u975e\u53f6\u5b50\u8282\u70b9\uff0cb\u7684\u4e0b\u9762\u4e3a\u53f6\u5b50\u8282\u70b9\u540c\u7406\u3002\n\n3\uff09\u5982\u679ca\u7684\u4e0a\u9762\u548cb\u7684\u4e0b\u9762\u90fd\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u4e3a\u4e86\u6ee1\u8db3\u975e\u53f6\u5b50\u8282\u70b9\u6570>2\u7684\u524d\u63d0\uff0ca\u4e00\u5b9a\u6709\u5176\u4ed6\u975e\u53f6\u5b50\u513f\u5b50c\uff08\u4e5f\u5c31\u662fb\u7684\u5144\u5f1f\uff09\uff0c\u8fd9\u65f6c\u53ea\u5c5e\u4e8ea\u7684\u96c6\u5408A\uff0c\u4e0d\u5c5e\u4e8eb\u7684\u96c6\u5408A\u3002a\u3001b\u7684\u96c6\u5408A\u4e0d\u540c\u3002\n\n\u8bc1\u6bd5\u3002\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u987a\u5229\u5730\u5e2e\u52a9\u6240\u6709\u53f6\u5b50\u8282\u70b9\u627e\u5230\u7236\u4eb2\u4e86\uff0c\u672c\u9898\u7684\u5927\u591a\u6570\u60c5\u51b5\u4e5f\u5c31\u89e3\u51b3\u4e86\u3002\n\n\u7279\u6b8a\u60c5\u51b5\uff1a\n\n1\u3001\u5982\u679c\u662f\u4e00\u4e2a\u957f\u6210\u8fd9\u6837\u7684\u83ca\u82b1\u56fe\uff1a**\uff08\u975e\u53f6\u5b50\u8282\u70b9\u6570==1\uff09**\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ojb2qv5b.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u6211\u4eec\u5c31\u4f1a\u60ca\u5947\u5730\u53d1\u73b0\uff0c\u6240\u6709\u8282\u70b9\u7684\u90bb\u5c45\u96c6\u5408\u90fd\u662f\u4e00\u6837\u7684\u3002\u8fd9\u6837\u5c31\u968f\u4fbf\u9009\u4e00\u4e2a\u70b9\u5411\u5176\u4ed6\u6240\u6709\u70b9\u8fde\u8fb9\u5373\u53ef\u3002\n\n2\u3001\u5982\u679c**\u975e\u53f6\u5b50\u8282\u70b9\u6570==2\uff1a**\n\n\u5728\u627e\u51fa\u4e24\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u540e\uff0c\u6211\u4eec\u53c8\u4f1a\u60ca\u5947\u5730\u53d1\u73b0\uff0c\u65e0\u8bba\u662f\u4e24\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u7684\u96c6\u5408A\uff0c\u8fd8\u662f\u53f6\u5b50\u8282\u70b9\u7684\u90bb\u5c45\u96c6\u5408\u53bb\u6389\u6240\u6709\u53f6\u5b50\u540e\u5f97\u5230\u7684\u96c6\u5408\uff0c\u90fd\u662f\u4e00\u6837\u7684\u3002\n\n\u8fd9\u65f6\u6240\u6709\u53f6\u5b50\u8282\u70b9\u7684\u90bb\u5c45\u96c6\u5408\u4e2d\uff0c\u4e0d\u5305\u542b\u4e0d\u662f\u5144\u5f1f\u7684\u53f6\u5b50\u8282\u70b9\uff1b\u4e24\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u7684\u90bb\u5c45\u96c6\u5408\u90fd\u662f\u5168\u96c6\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u968f\u4fbf\u627e\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u90bb\u5c45\u96c6\u5408\uff0c\u628a\u6240\u6709\u5728\u91cc\u9762\u7684\u53f6\u5b50\u8282\u70b9\u7ed9\u4e00\u4e2a\u7236\u4eb2\uff0c\u4e0d\u5728\u91cc\u9762\u7684\u53f6\u5b50\u8282\u70b9\u7ed9\u53e6\u4e00\u4e2a\u7236\u4eb2\u3002\n\n\u6ce8\u610f\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\uff1a\u5982\u679c\u6574\u5f20\u56fe\u53ea\u6709\u4e24\u4e2a\u70b9\uff0c\u7a0b\u5e8f\u4f1a\u8ba4\u4e3a\u5b83\u4eec\u90fd\u662f\u975e\u53f6\u5b50\u8282\u70b9\uff08\u7b26\u5408\u975e\u53f6\u5b50\u8282\u70b9\u7684\u5224\u5b9a\u5416\uff09\uff0c\u8fd9\u4e2a\u6839\u636e\u4ee3\u7801\u5b9e\u73b0\u7684\u4e0d\u540c\u65b9\u5f0f\u53ef\u80fd\u9700\u8981\u7279\u5224\u3002\n\n\u4e0a\u4ee3\u7801~\n\n```\n#include <cstdio>\n#include <bitset>\nusing namespace std;\nconst int N=1005;\nconst int INF=2000;\nint n,x,y,minn;\nbitset <N> a[N],p,unleaf,edge[N];\nint read()\n{\tchar x=getchar();\n\twhile(x<48||x>57) x=getchar();\n\tint ans=0;\n\twhile(x>=48&&x<=57)\n\t{\tans=(ans<<1)+(ans<<3)+(x^48);\n\t\tx=getchar();\n\t}\n\treturn ans;\n}\nvoid init()//\u786e\u5b9a\u6240\u6709\u975e\u53f6\u5b50\u8282\u70b9\u53ca\u5176\u8fde\u8fb9\n{\tfor(int i=1;i<=n;i++)\n\t{\tfor(int j=1;j<i;j++)\n\t\t{\tp=a[i]&a[j];\n\t\t\tif(p.count()==2)\n\t\t\t{\tx=0;y=0;\n\t\t\t\tfor(int k=1;k<=n;k++)\n\t\t\t\t{\tif(p[k])\n\t\t\t\t\t{\tif(x) {y=k;break;}\n\t\t\t\t\t\tx=k;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!edge[x][y])\n\t\t\t\t{\tedge[x][y]=edge[y][x]=1;\n\t\t\t\t\tedge[x][x]=edge[y][y]=1;\n\t\t\t\t\tunleaf[x]=unleaf[y]=1;\n\t\t\t\t\tprintf(\"%d %d\\n\",x,y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nvoid solve()//\u7ed9\u53f6\u5b50\u8282\u70b9\u627e\u7236\u4eb2\n{\tfor(int i=1;i<=n;i++)\n\t{\tif(!unleaf[i])\n\t\t{\tminn=INF;\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t{\tif(a[j][i]&&(a[j]&unleaf).count()<minn)\n\t\t\t\t{\tp=a[j]&unleaf;\n\t\t\t\t\tminn=p.count();\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t{\tif(edge[j]==p)\n\t\t\t\t{\tprintf(\"%d %d\\n\",i,j);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\tn=read();\n\tfor(int i=1;i<=n;i++)\n\t{\tx=read();\n\t\tfor(int j=1;j<=x;j++)\n\t\t{\ty=read();a[i][y]=1;}\n\t}\n\tinit();\n\tif(!unleaf.any())//\u7279\u5224\n\t{\tfor(int i=2;i<=n;i++) printf(\"%d %d\\n\",1,i);\n\t\treturn 0;\n\t}\n\tif(unleaf.count()==2)//\u7279\u5224\n\t{\tif(n==2) return 0;//\u5728\u8fd9\u91cc\u4e0d\u52a0\u4e5f\u53ef\u4ee5\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\tif(a[i].count()==n) continue;\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t{\tif(j!=x&&j!=y)\n\t\t\t\t{\tif(a[i][j]) printf(\"%d %d\\n\",x,j);\n\t\t\t\t\telse printf(\"%d %d\\n\",y,j);\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\treturn 0;\n\t}\n\tsolve();\n\treturn 0;\n}\n```\n",
        "postTime": 1580614407,
        "uid": 125270,
        "name": "flyfree",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF566E \u3010Restoring Map\u3011"
    },
    {
        "content": "\u6807\u7b7e: \u6784\u9020, bitset\u4f18\u5316.\n\n\u8bbe $f_u$ \u8868\u793a\u6240\u6709\u5230 $u$ \u8ddd\u79bb $\\leqslant 2$ \u70b9\u6784\u6210\u7684\u96c6\u5408.\n\n\u9996\u5148\u7279\u5224\u70b9\u6570\u4e3a $1,2$ \u7684\u60c5\u51b5.\n\n\u7a0d\u4f5c\u8ba8\u8bba\u53ef\u77e5, \u5bf9\u4e8e\u4efb\u610f\u4e24\u70b9 $u,v$, \u82e5 $f_u\\cap f_v$ \u6070\u597d\u5305\u542b\u4e24\u4e2a\u5143\u7d20(\u8bb0\u4e3a $a,b$) , \u5219 $a,b$ \u5fc5\u7136\u76f8\u8fde, \u4e14 $a,b$ \u4e3a\u975e\u53f6\u5b50\u8282\u70b9. \u5e76\u4e14\u5bf9\u4e8e\u4efb\u610f\u4e24\u4e2a\u975e\u53f6\u5b50\u8282\u70b9 $a,b$ , \u5fc5\u7136\u5b58\u5728\u81f3\u5c11\u4e00\u7ec4\u5bf9\u5e94\u7684 $u,v$.\n\n\u90a3\u4e48\u6211\u4eec\u679a\u4e3e $u,v$ , \u5c31\u53ef\u4ee5\u5c06\u6240\u6709\u7684\u975e\u53f6\u5b50\u8282\u70b9\u4e4b\u95f4\u7684\u8fb9\u8fde\u63a5\u8d77\u6765\u4e86, \u63a5\u4e0b\u6765\u53ea\u9700\u8981\u8003\u8651\u53f6\u5b50\u8282\u70b9\u548c\u975e\u53f6\u5b50\u8282\u70b9\u4e4b\u95f4\u7684\u8fde\u8fb9\u5c31\u597d\u4e86.\n\n\u6839\u636e\u4e0a\u9762\u7684\u8fde\u8fb9\u6211\u4eec\u540c\u65f6\u53ef\u4ee5\u5904\u7406\u51fa\u975e\u53f6\u5b50\u8282\u70b9\u96c6\u5408 $leaf$ \u548c $\\forall u\\in leaf$ , \u4e0e\u5176\u8ddd\u79bb $\\leqslant 1$ \u7684\u975e\u53f6\u5b50\u8282\u70b9\u7684\u96c6\u5408 $g_u$.\n\n\u7279\u5224\u4e00\u4e0b\u83ca\u82b1\u6811, \u975e\u53f6\u5b50\u8282\u70b9\u53ea\u6709\u4e24\u4e2a\u7684\u60c5\u51b5, \u6b64\u65f6 $\\forall v\\notin leaf$, \u4e0e\u5176\u76f8\u8fde\u7684 $u\\in leaf$ \u5fc5\u7136\u6ee1\u8db3 $g_u=f_v\\cap leaf$ , \u679a\u4e3e\u8fde\u8fb9\u5373\u53ef.\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(\\frac{n^3}{\\omega})$.\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint read();\nint n;\n\nbitset<1003> f[1003], g[1003], vis, dn, tmp, ttmp;\n\nint main() {\n    n = read();\n    if (n == 1) return 0;\n    if (n == 2) return puts(\"1 2\"), 0;\n    for (int i = 1; i <= n; ++i)\n        for (int j = 1, k = read(); j <= k; ++j) f[i][read()] = 1;\n    int flg = 0;\n    for (int i = 1; i <= n; ++i) {\n        for (int j = 1; j <= n; ++j) {\n            tmp = f[i] & f[j];\n            if (tmp.count() != 2) continue;\n            int u[2], c = 0;\n            for (int k = 1; k <= n; ++k)\n                if (tmp[k]) u[c++] = k;\n            if (!g[u[0]][u[1]]) {\n                printf(\"%d %d\\n\", u[0], u[1]), ++flg;\n                vis[u[0]] = vis[u[1]] = g[u[0]][u[1]] = g[u[1]][u[0]] = 1;\n            }\n        }\n    }\n    if (!flg) {\n        for (int i = 2; i <= n; ++i) printf(\"1 %d\\n\", i);\n        return 0;\n    }\n    if (flg == 1) {\n        int u[2], c = 0;\n        for (int i = 1; i <= n; ++i)\n            if (vis[i]) u[c++] = i;\n        for (int i = 1; i <= n; ++i) {\n            if (f[i].count() < n) {\n                for (int j = 1; j <= n; ++j)\n                    if (!vis[j]) printf(\"%d %d\\n\", j, u[f[i][j]]);\n                break;\n            }\n        }\n        return 0;\n    }\n    for (int i = 1; i <= n; ++i)\n        if (vis[i]) g[i][i] = dn[i] = 1;\n    for (int i = 1; i <= n; ++i) {\n        if (dn[i]) continue;\n        // find which f is for i: the smallest one\n        tmp.set();\n        for (int j = 1; j <= n; ++j)\n            if (f[j][i] && f[j].count() < tmp.count()) tmp = f[j];\n\n        ;\n        ttmp = tmp & (~vis), tmp = tmp & vis;\n        for (int j = 1; j <= n; ++j)\n            if (tmp == g[j])\n                for (int k = 1; k <= n; ++k)\n                    if (ttmp[k]) dn[k] = 1, printf(\"%d %d\\n\", j, k);\n    }\n    return 0;\n}\nconst int _SIZE = 1 << 22;\nchar ibuf[_SIZE], *iS = ibuf, *iT = ibuf;\n#define gc                                                         \\\n    (iS == iT ? iT = ((iS = ibuf) + fread(ibuf, 1, _SIZE, stdin)), \\\n     (iS == iT ? EOF : *iS++) : *iS++)\nint read() {\n    int x = 0, f = 1;\n    char c = gc;\n    while (!isdigit(c)) f = (c == '-') ? -1 : f, c = gc;\n    while (isdigit(c)) x = x * 10 + c - '0', c = gc;\n    return x * f;\n}\n```\n\n",
        "postTime": 1581567168,
        "uid": 51237,
        "name": "Kinandra",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF566E \u3010Restoring Map\u3011"
    },
    {
        "content": "\u6784\u9020 + bitset\n\n> \u7ed9\u51fa\u4e00\u68f5 $n$ \u4e2a\u8282\u70b9\u7684\u6811\u3002\u4e71\u5e8f\u7ed9\u51fa\u4e0e\u6bcf\u4e2a\u70b9\u8ddd\u79bb $\\leq 2$ \u7684\u70b9\u96c6\uff08\u4e0d\u77e5\u9053\u6bcf\u4e2a\u70b9\u96c6\u5bf9\u5e94\u54ea\u4e2a\u70b9\uff09\u3002\u6c42\u6784\u9020\u4e00\u68f5\u5408\u6cd5\u7684\u6811\u3002\n>\n> $2\\leq n\\leq 10^3$\u3002\n\n\u5bf9\u4e8e\u6709\u8fb9\u76f8\u8fde\u7684\u975e\u53f6\u5b50 $x,y$\uff0c\u8003\u8651\u5b83\u4eec\u4e24\u4fa7\u7684\u4e24\u70b9 $i,j$\uff0c\u540c\u65f6\u4e0e $i,j$ \u8ddd\u79bb $\\leq 2$ \u7684\u70b9\u53ea\u6709 $\\{x,y\\}$\u3002\u6545\u4e24\u4e2a\u975e\u53f6\u5b50 $x,y$ \u6709\u8fb9\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728\u4e24\u4e2a\u70b9\u96c6\u7684\u4ea4\u96c6 $=\\{x,y\\}$\uff0c\u8fd9\u6837\u53ef\u4ee5\u5efa\u51fa\u201c\u975e\u53f6\u5b50\u6811\u201d\u3002\u66b4\u529b\u679a\u4e3e + bitset \u4f18\u5316\u3002\n\n\u7136\u540e\u5bf9\u6bcf\u4e2a\u53f6\u5b50\u627e\u51fa\u5b83\u7684\u7236\u4eb2\u3002\u6ce8\u610f\u5230\u4e00\u4e2a\u53f6\u5b50\u5bf9\u5e94\u7684\u70b9\u96c6\uff0c\u5c31\u662f\u5305\u542b\u5b83\u7684\u3001\u5927\u5c0f\u6700\u5c0f\u7684\u90a3\u4e2a\u3002\u53bb\u6389\u8fd9\u4e2a\u70b9\u96c6\u7684\u6240\u6709\u53f6\u5b50\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u7236\u4eb2\u5728\u975e\u53f6\u5b50\u6811\u4e0a\u7684\u8fde\u8fb9\u96c6\u5408\u4e0e\u7236\u4eb2\u81ea\u8eab\u7684\u5e76\u3002\u800c\u5f53\u975e\u53f6\u5b50\u4e2a\u6570 $>2$ \u65f6\uff0c\u6bcf\u4e2a\u975e\u53f6\u5b50\u5728\u975e\u53f6\u5b50\u6811\u4e0a\u7684\u8fde\u8fb9\u96c6\u5408\u4e0e\u81ea\u8eab\u7684\u5e76\u4e24\u4e24\u4e0d\u540c\uff0c\u627e\u5230\u552f\u4e00\u4e00\u4e2a\u7b26\u5408\u6761\u4ef6\u7684\u5c31\u80fd\u5f97\u5230\u7236\u4eb2\u3002\n\n\u7279\u5224\uff1a\n\n- \u53ea\u6709 $1$ \u4e2a\u975e\u53f6\u5b50\uff0c\u5fc5\u5b9a\u662f\u83ca\u82b1\u56fe\uff0c\u6bcf\u4e2a\u70b9\u96c6\u90fd\u662f\u6240\u6709\u70b9\uff0c\u6545\u4efb\u610f\u8f93\u51fa\u4e00\u5f20\u83ca\u82b1\u56fe\u5373\u53ef\u3002\n- \u53ea\u6709 $2$ \u4e2a\u975e\u53f6\u5b50\uff0c\u5f62\u6001\u662f\u4e24\u4e2a\u975e\u53f6\u5b50 $x,y$ \u4e24\u4fa7\u5206\u522b\u6302\u7740\u70b9\u96c6 $L,R$\u3002$L$ \u91cc\u70b9\u5bf9\u5e94\u7684\u70b9\u96c6\u5747\u4e3a $L\\cup\\{x,y\\}$\uff0c$R$ \u91cc\u70b9\u7684\u70b9\u96c6\u5747\u4e3a $R\\cup\\{x,y\\}$\uff0c$x,y$ \u7684\u70b9\u96c6\u5747\u4e3a\u5168\u96c6\uff0c\u90a3\u4e48\u4ea4\u6362 $x,y$ \u5f97\u5230\u7684\u6811\u4ecd\u6ee1\u8db3\u6761\u4ef6\u3002\u56e0\u6b64\uff0c\u4efb\u53d6\u4e00\u4e2a\u4e0d\u4e3a\u5168\u96c6\u7684\u70b9\u96c6\uff0c\u53bb\u6389 $x,y$ \u540e\u5373\u5f97 $L$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(\\frac{n^3}{\\omega})$\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define F(i,b) for(int i=b._Find_first();i^b.size();i=b._Find_next(i))\nusing namespace std;\nconst int N=1e3+5;\nint n,k,x,y,cnt;\nbitset<N>b[N],g[N],lf,tmp,t;\nsigned main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&k),g[i].set(i),lf.set(i);\n\t\twhile(k--) scanf(\"%d\",&x),b[i].set(x);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=i+1;j<=n;j++) if((tmp=b[i]&b[j]).count()==2){\n\t\t\tx=tmp._Find_first(),y=tmp._Find_next(x);\n\t\t\tif(!g[x].test(y)) cnt++,g[x].set(y),g[y].set(x),lf.reset(x),lf.reset(y);\n\t\t}\n\tif(!cnt){\n\t\tfor(int i=2;i<=n;i++) printf(\"%d %d\\n\",1,i); exit(0);\n\t}\n\telse if(cnt==1){\t//\u975e\u53f6\u5b50\u6811\u4e0a\u53ea\u6709\u4e00\u6761\u8fb9\n\t\tfor(int i=1,k;i<=n;i++) if(b[i].count()^n){\n\t\t\tF(j,lf) k=b[i].test(j)?x:y,g[j].set(k),g[k].set(j);\n\t\t\tbreak;\n\t\t}\n\t}\n\telse F(i,lf){\n\t\t\tt.set();\n\t\t\tfor(int j=1;j<=n;j++) if(b[j].test(i))\n\t\t\t\tif(b[j].count()<t.count()) t=b[j];\t//\u627e\u5230\u53f6\u5b50 i \u5bf9\u5e94\u7684\u70b9\u96c6\n\t\t\tt&=~lf;\n\t\t\tF(j,t) if((g[j]&~lf)==t){g[i].set(j),g[j].set(i);break;}\n\t\t}\n\tfor(int i=1;i<=n;i++)\n\t\tF(j,g[i]) if(i<j) printf(\"%d %d\\n\",i,j);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1665208189,
        "uid": 381985,
        "name": "lkytxdy",
        "ccfLevel": 0,
        "title": "CF566E Restoring Map"
    },
    {
        "content": "[Codeforces \u9898\u76ee\u4f20\u9001\u95e8](https://codeforces.com/contest/566/problem/E) & [\u6d1b\u8c37\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF566E)\n\n~~\u672c\u6765\u8bf4\u597d\u7684\u4e0d\u505a\uff0c\u7ed3\u679c\u4eca\u65e9\u53c8\u5fcd\u4e0d\u4f4f\u5f00\u4e86\u9053\u9898/qiao~~\n\n\u6211\u4eec\u79f0\u5ea6\u4e3a $1$ \u7684\u70b9\u4e3a\u53f6\u8282\u70b9\uff0c\u5ea6\u5927\u4e8e $1$ \u7684\u70b9\u4e3a\u975e\u53f6\u8282\u70b9\u3002\n\n\u9996\u5148\u8003\u8651\u5982\u4f55\u6c42\u51fa\u53f6\u8282\u70b9\u53ca\u5176\u8fde\u8fb9\u60c5\u51b5\uff0c\u8fd9\u91cc\u4e0d\u59a8\u5047\u8bbe\u53f6\u8282\u70b9\u4e2a\u6570 $\\ge 3$\u200b\uff0c\u5bf9\u4e8e $\\le 2$\u200b \u7684\u60c5\u51b5\u7279\u5224\u6389\uff0c\u5177\u4f53\u5982\u4f55\u7279\u5224\u89c1\u4e0b\u6587\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e24\u4e2a\u975e\u53f6\u8282\u70b9 $x,y$\u200b\uff0c\u5982\u679c\u5b83\u4eec\u4e4b\u95f4\u5b58\u5728\u8fb9\u76f8\u8fde\uff0c\u90a3\u4e48\u5c31\u4e00\u5b9a\u5b58\u5728\u4e24\u4e2a\u70b9\uff0c\u5230\u5b83\u4eec\u4e4b\u95f4\u8ddd\u79bb $\\le 2$\u200b \u7684\u70b9\u7684\u96c6\u5408**\u6070\u597d\u662f** $\\{x,y\\}$\u200b\uff0c\u5177\u4f53\u6784\u9020\u5c31\u662f\u53d6\u4e00\u4e2a\u4e0e $x$\u200b \u76f8\u8fde\u4e14 $\\ne y$\u200b \u7684\u70b9\uff0c\u518d\u53d6\u4e00\u4e2a\u4e0e $y$\u200b \u76f8\u8fde\u4e14 $\\ne x$\u200b \u7684\u70b9\u3002\u800c\u5982\u679c\u5b58\u5728\u4e24\u4e2a\u70b9\uff0c\u6ee1\u8db3\u5b83\u4eec\u4ea4\u96c6\u6070\u597d\u662f $\\{x,y\\}$\u200b\uff0c\u90a3 $x,y$\u200b \u4e4b\u95f4\u5fc5\u7136\u5b58\u5728\u8fb9\u76f8\u8fde\uff0c\u5426\u5219\u5982\u679c $x,y$\u200b \u8ddd\u79bb\u4e3a $2$\u200b\uff0c\u90a3\u4e48\u8fd9\u4e24\u70b9\u7684\u4ea4\u96c6\u4e2d\u5982\u679c\u5305\u542b $x,y$\u200b\uff0c\u90a3\u4e48\u5fc5\u7136\u5305\u542b $x,y$\u200b \u7684\u516c\u5171\u90bb\u5c45\uff0c\u4e5f\u5c31\u662f $x,y$\u200b \u4e2d\u95f4\u5939\u7740\u7684\u90a3\u4e2a\u70b9\uff0c\u5982\u679c $x,y$\u200b \u8ddd\u79bb\u4e3a $3$\u200b\uff0c\u90a3\u4e48\u9053\u7406\u4e5f\u662f\u7c7b\u4f3c\u7684\uff0c\u5982\u679c\u8fd9\u4e24\u70b9\u7684\u4ea4\u96c6\u4e2d\u5982\u679c\u5305\u542b $x,y$\u200b\uff0c\u90a3\u4e48\u5fc5\u7136\u5305\u542b $x,y$\u200b \u7684\u4e4b\u95f4\u7684\u4e24\u4e2a\u70b9\uff0c\u5982\u679c $x,y$ \u8ddd\u79bb $\\ge 4$ \u90a3\u4e48\u4e0d\u53ef\u80fd\u5b58\u5728\u4e24\u4e2a\u70b9\uff0c\u5230\u5b83\u4eec\u8ddd\u79bb $\\le 2$ \u7684\u70b9\u96c6\u4e2d\u90fd\u5305\u542b $x,y$\u200b\u3002\u8fd9\u4e2a\u53ef\u4ee5\u4f7f\u7528 `bitset` \u53ca\u5176\u81ea\u5e26 `_Find_first` \u548c `_Find_next` \u51fd\u6570\u89e3\u51b3\u3002\n\n\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u975e\u53f6\u8282\u70b9\u4e4b\u95f4\u7684\u8fde\u8fb9\u60c5\u51b5\uff0c\u63a5\u4e0b\u6765\u8003\u8651\u5982\u4f55\u5c06\u53f6\u5b50\u6302\u4e0a\u53bb\u3002\u9996\u5148\u601d\u8003\u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u70b9\u662f\u5426\u5bf9\u5e94\u4e00\u4e2a\u53f6\u8282\u70b9\u7684\u96c6\u5408\uff0c\u663e\u7136\u5bf9\u4e8e\u4e00\u4e2a\u975e\u53f6\u8282\u70b9 $x$ \u53ca\u4e00\u4e2a\u4e0e\u5176\u76f8\u8fde\u7684\u53f6\u8282\u70b9 $y$\uff0c\u5fc5\u7136\u6709 $y$ \u5bf9\u5e94\u7684\u96c6\u5408\u5b8c\u5168\u5305\u542b\u5728 $x$ \u5bf9\u5e94\u7684\u96c6\u5408\u4e2d\uff0c\u8fd9\u6837\u6211\u4eec\u904d\u5386\u5230\u4e00\u4e2a\u70b9\u65f6\uff0c\u6211\u4eec\u68c0\u9a8c\u662f\u5426\u5b58\u5728\u53e6\u4e00\u4e2a\u96c6\u5408\u5b8c\u5168\u5305\u542b\u5728\u8be5\u96c6\u5408\u4e2d\uff0c\u5982\u679c\u6709\u5219\u8df3\u8fc7\u8fd9\u4e2a\u96c6\u5408\u3002\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u6211\u4eec\u904d\u5386\u5230\u7684\u6240\u6709\u96c6\u5408\u8981\u4e48\u5c5e\u4e8e\u4e00\u4e2a\u53f6\u8282\u70b9\uff0c\u8981\u4e48\u5c5e\u4e8e\u4e00\u4e2a\u4e0d\u4e0e\u4efb\u4f55\u70b9\u76f8\u8fde\u7684\u975e\u53f6\u8282\u70b9\uff0c\u5bf9\u4e8e\u540e\u8005\u800c\u8a00\u663e\u7136\u4e0d\u4f1a\u5bf9\u7b54\u6848\u4ea7\u751f\u4efb\u4f55\u5f71\u54cd\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u8df3\u8fc7\u5b83\u4e5f\u7f62\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u5982\u4f55\u5224\u5b9a\u4e00\u4e2a\u53f6\u8282\u70b9\u7684\u96c6\u5408\u8fde\u5411\u7684\u662f\u54ea\u4e2a\u975e\u53f6\u8282\u70b9\uff0c\u6211\u4eec\u53bb\u6389\u8be5\u96c6\u5408\u4e2d\u6240\u6709\u53f6\u5b50\u8282\u70b9\uff08\u663e\u7136\u5728\u7b2c\u4e00\u6b65\u4e2d\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u54ea\u4e9b\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u800c\u54ea\u4e9b\u4e0d\u662f\uff09\uff0c\u90a3\u4e48\u53ef\u4ee5\u53d1\u73b0\uff0c\u53bb\u6389\u53f6\u5b50\u8282\u70b9\u540e\u7684\u96c6\u5408\uff0c\u7b49\u4e8e\u6240\u6709\u548c\u4e0e\u5176\u76f8\u8fde\u7684\u975e\u53f6\u8282\u70b9\u7684\u975e\u53f6\u8282\u70b9\u7ec4\u6210\u7684\u96c6\u5408\uff0c\u800c\u5bf9\u4e8e\u6bcf\u4e2a\u975e\u53f6\u8282\u70b9\uff0c\u6211\u4eec\u662f\u77e5\u9053\u54ea\u4e9b\u975e\u53f6\u8282\u70b9\u4e0e\u5176\u76f8\u8fde\u7684\uff0c\u8fd9\u4e2a\u540c\u6837\u53ef\u4ee5 `bitset` \u4f18\u5316\u3002\n\n\u63a5\u4e0b\u6765\u627e\u51fa\u8fd9\u4e2a\u975e\u53f6\u8282\u70b9\u4e4b\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u77e5\u9053**\u6240\u6709\u4e0e\u8fd9\u4e2a\u975e\u53f6\u8282\u70b9\u76f8\u90bb\u7684\u53f6\u8282\u70b9**\u4e86\u3002\u5177\u4f53\u65b9\u6cd5\u5c31\u662f\u627e\u5230\u8fd9\u4e2a\u96c6\u5408\u4e2d\u6240\u6709\u53f6\u8282\u70b9\uff0c\u663e\u7136\u8fd9\u4e9b\u53f6\u8282\u70b9\u90fd\u4e0e\u8fd9\u4e2a\u975e\u53f6\u8282\u70b9\u76f8\u90bb\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u5b8c\u7f8e\u5730\u5904\u7406\u4e86\u975e\u53f6\u8282\u70b9\u4e2a\u6570 $\\ge 3$ \u7684\u60c5\u51b5\uff0c\u90a3\u5982\u679c\u975e\u53f6\u8282\u70b9\u4e2a\u6570 $\\le 3$ \u600e\u4e48\u529e\u5462\uff1f\n\n\u663e\u7136\u5982\u679c\u975e\u53f6\u8282\u70b9\u4e2a\u6570 $=1$\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f\u4e2a\u83ca\u82b1\u56fe\uff0c\u968f\u4fbf\u6784\u9020\u4e00\u4e2a\u83ca\u82b1\u56fe\u5c31\u884c\u4e86\u3002\n\n\u5982\u679c\u975e\u53f6\u8282\u70b9\u4e2a\u6570 $=2$\uff0c\u90a3\u4e48\u6240\u6709\u53f6\u5b50\u8282\u70b9\u5bf9\u5e94\u7684\u96c6\u5408\u5927\u5c0f\u90fd $<n$\uff0c\u800c\u8fd9\u79cd\u60c5\u51b5\u8fde\u5411\u4ec0\u4e48\u975e\u53f6\u8282\u70b9\u662f\u4e0d\u91cd\u8981\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u4eff\u7167\u4e0a\u9762\u7684\u8fc7\u7a0b\uff0c\u5373\u5bf9\u4e8e\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u5bf9\u5e94\u7684\u96c6\u5408\uff0c\u6211\u4eec\u627e\u51fa\u96c6\u5408\u4e2d\u6240\u6709\u53f6\u5b50\u8282\u70b9\uff0c\u90a3\u4e48\u8fd9\u4e9b\u53f6\u5b50\u8282\u70b9\u90fd\u5e94\u8fde\u5411\u540c\u4e00\u4e2a\u975e\u53f6\u8282\u70b9\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\dfrac{n^3}{\\omega}$\u3002\n\n```cpp\nconst int MAXN=1000;\nint n;\nbitset<MAXN+5> a[MAXN+5],b[MAXN+5],is;\nint main(){\n\tscanf(\"%d\",&n);bool flg=1;\n\tfor(int i=1;i<=n;i++){\n\t\tint len;scanf(\"%d\",&len);flg&=(len==n);\n\t\twhile(len--){int x;scanf(\"%d\",&x);a[i][x]=1;}\n\t} if(flg){\n\t\tfor(int i=1;i<n;i++) printf(\"%d %d\\n\",i,n);\n\t\treturn 0;\n\t} vector<pii> res;\n\tfor(int i=1;i<=n;i++) for(int j=1;j<=n;j++){\n\t\tbitset<MAXN+5> tmp=a[i]&a[j];\n\t\tif(tmp.count()==2){\n\t\t\tint x=tmp._Find_first(),y=tmp._Find_next(x);\n\t\t\tif(b[x][y]) continue;\n\t\t\tb[x].set(y);b[y].set(x);is[x]=is[y]=1;\n\t\t\tb[x][x]=b[y][y]=1;res.pb(mp(x,y));\n\t\t}\n\t} if(is.count()==2){\n\t\tint r1=0,r2=0;\n\t\tstatic int vis[MAXN+5];\n\t\tfor(int i=1;i<=n;i++) if(is[i]) (r1)?(r2=i):(r1=i);\n\t\tfor(int i=1;i<=n;i++) if(a[i].count()<n){\n\t\t\tfor(int j=1;j<=n;j++) if(!is[j]&&a[i][j]) vis[j]=1;\n\t\t\tbreak;\n\t\t}\n\t\tfor(int i=1;i<=n;i++) if(!is[i]){\n\t\t\tif(vis[i]) res.pb(mp(r1,i));\n\t\t\telse res.pb(mp(r2,i));\n\t\t} for(pii e:res) printf(\"%d %d\\n\",e.fi,e.se);\n\t} else {\n\t\tstatic bool vis[MAXN+5];\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tbool flg=1;\n\t\t\tfor(int j=1;j<=n;j++) if((a[i]&a[j])==a[j]&&a[i]!=a[j])\n\t\t\t\tflg=0;\n\t\t\tif(!flg) continue;\n\t\t\tbitset<MAXN+5> tmp=a[i]&is;\n\t\t\tfor(int j=1;j<=n;j++) if(tmp[j]&&b[j]==tmp){\n\t\t\t\tif(!vis[j]){\n\t\t\t\t\tfor(int k=1;k<=n;k++) if(!is[k]&&a[i][k]) res.pb(mp(j,k));\n\t\t\t\t\tvis[j]=1;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} for(pii e:res) printf(\"%d %d\\n\",e.fi,e.se);\n\t}\n\treturn 0;\n}\n/*\n5\n5 1 2 3 4 5\n4 1 3 4 5\n4 3 4 5 2\n3 2 5 4\n3 1 4 3\n*/\n```\n\n",
        "postTime": 1634782972,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF566E Restoring Map"
    },
    {
        "content": "\u4e00\u4e2a\u663e\u7136\u7684\u65b9\u6cd5\u5c31\u662f\u51cf\u5c0f\u6570\u636e\u5927\u5c0f\u9012\u5f52\u6c42\u89e3\uff0c\u8003\u8651\u5982\u4f55\u627e\u51fa\u6811\u7684\u67d0\u4e9b\u53f6\u5b50\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u5b58\u5728 $x$ \u4e2a\u96c6\u5408\u4e00\u6837\u4e14\u8fd9\u4e9b\u96c6\u5408\u7684\u5927\u5c0f\u4e3a $x+2$ \uff0c\u90a3\u4e48\u8fd9\u4e9b\u96c6\u5408\u5bf9\u5e94\u7684\u70b9\u5c31\u662f\u4e00\u5806\u53f6\u5b50\uff0c\u5982\u679c\u53ea\u770b\u8fd9\u4e9b\u53f6\u5b50\u548c\u5b83\u4eec\u7684\u7236\u4eb2\u5c31\u662f\u4e00\u4e2a\u83ca\u82b1\u56fe\uff0c\u663e\u7136\u4efb\u4f55\u5f62\u6001\u7684\u6811\u90fd\u5b58\u5728\u8fd9\u4e00\u7ed3\u6784\uff0c\u5982\u679c\u80fd\u627e\u5230\u53e6\u5916\u4e00\u4e2a\u96c6\u5408\u548c\u8fd9\u79cd\u96c6\u5408\u7684\u4ea4\u7684\u5927\u5c0f\u4e3a $2$ \uff0c\u663e\u7136\u5728\u4ea4\u4e2d\u7684\u70b9\u4e0d\u662f\u53f6\u5b50\uff0c\u8fd9\u5c31\u610f\u5473\u7740\uff0c\u5f53\u76ee\u524d\u7684\u6811\u7684\u9ad8\u5ea6\u5927\u4e8e $2$ \u65f6\uff0c\u6211\u4eec\u4e00\u5b9a\u53ef\u4ee5\u9760\u8fd9\u79cd\u65b9\u6cd5\u627e\u51fa\u8fd9\u4e00\u7ed3\u6784\u5e76\u627e\u51fa\u53f6\u5b50\uff0c\u7136\u540e\u5c06\u53ef\u4ee5\u51cf\u5c0f\u89c4\u6a21\u9012\u5f52\u6c42\u89e3\u3002\n\n\u5f53\u6811\u7684\u9ad8\u5ea6\u5c0f\u4e8e\u7b49\u4e8e $2$ \u65f6\uff0c\u90a3\u4e48\u76ee\u524d\u7684\u6811\u662f\u4e00\u4e2a\u83ca\u82b1\u56fe\uff0c\u5269\u4e0b\u7684\u6240\u6709\u96c6\u5408\u90fd\u5e94\u8be5\u662f\u76f8\u540c\u7684\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u539f\u96c6\u5408\u548c\u73b0\u5728\u7684\u96c6\u5408\u4ea4\u7684\u5927\u5c0f\u4e3a $1$ \uff0c\u90a3\u4e48\u5728\u4ea4\u4e2d\u7684\u70b9\u4e00\u5b9a\u4e0d\u662f\u6839\uff0c\u5982\u679c\u4ea4\u7684\u5927\u5c0f\u4e3a $2$ \uff0c\u90a3\u4e48\u5728\u4ea4\u4e2d\u7684\u70b9\u4e00\u5b9a\u5305\u542b\u4e86\u6839\uff0c\u7136\u540e\u679a\u4e3e\u4e00\u904d\u505a\u4ea4\u5c31\u53ef\u4ee5\u627e\u51fa\u6839\u4e86\u3002\n\n\u7136\u540e\u4ece\u6839\u5f80\u56de\u9012\u5f52\uff0c\u8bb0\u5f97\u5b58\u4e4b\u524d\u627e\u51fa\u7684\u53f6\u5b50\u7684\u7236\u4eb2\u548c\u7237\u7237\u8282\u70b9\uff0c\u6839\u636e\u5df2\u7ecf\u5f62\u6210\u7684\u6811\u5224\u65ad\u90a3\u4e24\u4e2a\u70b9\u54ea\u4e2a\u4e3a\u7236\u4eb2\u54ea\u4e2a\u4e3a\u7237\u7237\u3002\n\n\u627e\u53f6\u5b50\u65f6\u9700\u8981\u627e\u5230\u51fa\u4e00\u4e2a\u4ea4\u4e3a $2$ \u7684\u70b9\uff0c\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u54ea\u4e24\u4e2a\u96c6\u5408\u4ea4\u4e3a $2$ \uff0c\u5224\u65ad\u4ea4\u8981\u7528 bitset \u4f18\u5316\uff0c\u590d\u6742\u5ea6\u53ef\u964d\u4e3a $\\mathcal{O(\\frac{n^3}{w})}$ \u3002\n\n\u5224\u65ad\u4e24\u4e2a\u96c6\u5408\u662f\u5426\u76f8\u540c\u53ef\u4ee5\u7528\u968f\u673a\u5316 hash \uff0c\u5bf9\u6bcf\u4e2a\u70b9\u6253\u4e0a\u4e00\u4e2a $[1,2^{64}]$ \u7684\u968f\u673a\u6570\uff0c\u7136\u540e\u4e00\u4e2a\u96c6\u5408\u7684 hash \u503c\u5c31\u662f\u96c6\u5408\u7684\u70b9\u7684\u968f\u673a\u6570\u7684\u5f02\u6216\u548c\uff0c\u5220\u9664\u4e00\u4e2a\u70b9\u5c31\u518d\u5f02\u6216\u8fd9\u4e2a\u70b9\u7684\u968f\u673a\u6570\uff0c\u53ef\u4ee5\u53d1\u73b0\u51fa\u9505\u6982\u7387\u5927\u6982\u662f $\\frac{1}{2^{64}}$ \u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u7ec6\u8282\uff1a\n\n1. \u8981\u5bf9 $n=2$ \u7279\u5224\u3002\n\n2. \u6bcf\u6b21\u627e\u53f6\u5b50\u5c31\u53ea\u627e\u540c\u4e00\u4e2a\u7236\u4eb2\u7684\u53f6\u5b50\u5220\u9664\uff0c\u4e0d\u7136\u8fde\u6837\u4f8b 2 \u90fd\u8fc7\u4e0d\u4e86\uff08\u5176\u5b9e\u662f\u6211\u7684\u65b9\u6cd5\u6709\u4e00\u70b9\u5c0f\u9505\uff0c\u4f46\u662f\u6211\u8fd8\u6ca1\u6709\u60f3\u5230\u600e\u4e48\u6837\u624d\u80fd\u89e3\u51b3\uff09\u3002\n\n\u5df2\u7ecf\u53bb\u6389\u4e86 3K \u7684\u8c03\u8bd5\u4ee3\u7801\u540e\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define ll long long\nconst int M=1005;\n\nint read(){\n\tint x=0,y=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9') y=(ch=='-')?-1:1,ch=getchar();\n\twhile(ch>='0'&&ch<='9') x=x*10+ch-'0',ch=getchar();\n\treturn x*y;\n}\n\nll RAND(){\n\tll res=0;\n\tfor(int i=1;i<=17;i++) res=res*10ll+rand()%10;\n\treturn res;\n}\n\nint tot=0,first[M];\nstruct Edge{ int nxt,to; }e[M*M];\nvoid add(int x,int y){\n\te[++tot]=(Edge){first[x],y};\n\tfirst[x]=tot;\n}\n\nll IH[M],Hash[M];\nint n,sy,SZ[M],fa[M][2];bool vis1[M],vis2[M],vis3[M];\nvector<int> cun[M],hhh[M];bitset<M> jh[M],fuc[M],fz;\nstruct FUCK{ ll h;int id; }FFF[M];\nbool cmp(FUCK x,FUCK y){ return x.h<y.h; }\nint MDFK[M];//\u83ab\u961f\u5206\u5757\uff08\u786e\u4fe1\uff09\nvoid work(int cs){\n\tint cnt=0,CNT=0;\n\tfor(int i=1;i<=n;i++) if(!vis1[i]) FFF[++CNT]=(FUCK){Hash[i],i};\n\tsort(FFF+1,FFF+CNT+1,cmp);\n\tfor(int i=1;i<=CNT;i++){\n\t\tint j=i;\n\t\twhile(j<CNT&&FFF[j+1].h==FFF[i].h) j++;\n\t\tif(j-i+1==SZ[FFF[i].id]-2) for(int k=i;k<=j;k++) MDFK[++cnt]=FFF[k].id;\n\t\ti=j;\n\t}\n\tint minn=1e9,u=1;\n\tfor(int i=1;i<=cnt;i++){\n\t\tif(Hash[MDFK[i]]!=Hash[MDFK[i+1]]||i==cnt){\n\t\t\tif(SZ[MDFK[i]]<minn) minn=SZ[MDFK[i]],u=i;\n\t\t}\n\t}\n\tint fzcnt=0;ll NH=Hash[MDFK[u]];\n\tfor(int i=1;i<=cnt;i++) if(Hash[MDFK[i]]==NH) MDFK[++fzcnt]=MDFK[i];\n\tcnt=fzcnt;\n\tif(!cnt){\n\t\tint rt=1,u;\n\t\tfor(int i=1;i<=n;i++) if(!vis1[i]) u=i;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif(!vis1[i]) continue ;\n\t\t\tfz=fuc[i]&jh[u];\n\t\t\tif(fz.count()==1) for(int j=1;j<=n;j++) if(fz[j]) vis3[j]=1;\n\t\t\tif(fz.count()==2) for(int j=1;j<=n;j++) if(!fz[j]) vis3[j]=1;\n\t\t}\n\t\tfor(int i=1;i<=n;i++) if(!vis2[i]&&!vis3[i]) rt=i;\n\t\tfor(int i=1;i<=n;i++) if(!vis2[i]&&i!=rt) printf(\"%d %d\\n\",fa[i][0]=rt,i);\n\t\treturn ;\n\t}\n\tfor(int l=1;l<=cnt;l++){\n\t\tint i=MDFK[l],u;\n\t\tfor(int j=first[i];j;j=e[j].nxt){\n\t\t\tint v=e[j].to;\n\t\t\tif(!vis1[v]) u=v;\n\t\t}\n\t\tfz=fuc[i]&fuc[u];\n\t\tint x=fz._Find_first(),y=fz._Find_next(x);\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(jh[i][j]&&j!=x&&j!=y){\n\t\t\t\tif(vis2[j]) continue ;\n\t\t\t\tvis2[j]=1;hhh[cs].push_back(j);\n\t\t\t\tfa[j][0]=x,fa[j][1]=y;\n\t\t\t\tint sz=cun[j].size();\n\t\t\t\tfor(int k=0;k<sz;k++){\n\t\t\t\t\tint v=cun[j][k];\n\t\t\t\t\tjh[v][j]=0;Hash[v]^=IH[j];SZ[v]--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=cnt;i++) vis1[MDFK[i]]=1;\n\twork(cs+1);\n\tint FUKC=hhh[cs].size();\n\tfor(int i=0;i<FUKC;i++){\n\t\tint j=hhh[cs][i];\n\t\tif(fa[fa[j][1]][0]==fa[j][0]) swap(fa[j][0],fa[j][1]);\n\t\tprintf(\"%d %d\\n\",fa[j][0],j);\n\t}\n}\nvoid solve(){\n\tsy=n=read();\n\tfor(int i=1;i<=n;i++) IH[i]=RAND();\n\tfor(int i=1;i<=n;i++){\n\t\tint sz=read(),x;\n\t\tfor(int j=1;j<=sz;j++) x=read(),jh[i][x]=fuc[i][x]=1,cun[x].push_back(i),Hash[i]^=IH[x];\n\t}\n\tif(n==2) return (void)(printf(\"1 2\\n\"));\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=i;j<=n;j++){\n\t\t\tint x=(jh[i]&jh[j]).count();\n\t\t\tif(i==j) SZ[i]=x;\n\t\t\telse if(x==2) add(i,j),add(j,i);\n\t\t}\n\twork(0);\n}\n\nsigned main(){\n\tsrand(time(NULL));\n\tsolve();\n}\n```",
        "postTime": 1612407430,
        "uid": 116015,
        "name": "bellmanford",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF566E \u3010Restoring Map\u3011"
    },
    {
        "content": "# \u601d\u8def\n\n\u9996\u5148\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e24\u4e2a\u96c6\u5408\uff0c\u5982\u679c\u5176\u4ea4\u96c6\u6709\u4e14\u4ec5\u6709\u4e24\u4e2a\u70b9 $x$ \u548c $y$ \uff0c\u5219 $x,y$ \u4e4b\u95f4\u4e00\u5b9a\u6709\u4e00\u6761\u8fb9\uff0c\u5e76\u4e14 $x$ \u548c $y$ \u5747\u4e0d\u4e3a\u53f6\u5b50\u8282\u70b9\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u6bcf\u4e2a\u8282\u70b9\u662f\u5426\u662f\u53f6\u5b50\u8282\u70b9\u3002\u7136\u540e\uff0c\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230\u6240\u6709\u53f6\u5b50\u8282\u70b9\u7684\u7236\u4eb2\u5373\u53ef\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u6240\u6709\u5305\u542b\u53f6\u5b50\u8282\u70b9 $i$ \u7684\u96c6\u5408\u4e2d\uff0c\u96c6\u5408\u5927\u5c0f\u6700\u5c0f\u7684\u96c6\u5408\u5373\u70b9 $i$ \u5bf9\u5e94\u7684\u96c6\u5408 $S_i$ \u3002\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u6bcf\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u7684\u975e\u53f6\u5b50\u8fde\u8fb9\u96c6\u5408\uff08\u5373\u8be5\u975e\u53f6\u5b50\u8282\u70b9\u7684\u8fde\u5411\u5176\u4ed6\u975e\u53f6\u5b50\u8282\u70b9\u7684\u6240\u6709\u8fb9\uff09\u4e3a\u96c6\u5408 $E_i$ \u3002\u5bb9\u6613\u8bc1\u660e\uff0c\u53bb\u6389$S_i$\u6240\u6709\u53f6\u5b50\u8282\u70b9\u540e\u5f97\u5230\u7684\u96c6\u5408 $V_i=E_{father[i]}$ \u3002\u7531\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u6240\u6709\u53f6\u5b50\u8282\u70b9\u7684\u7236\u4eb2\u3002\n\n\u6700\u540e\u5c06\u6240\u6709\u7684\u8fb9\u8f93\u51fa\u5373\u53ef\u3002\u6ce8\u610f\u8981\u7528bitset\u7684\u4f18\u5316\uff08~~\u4e0d\u8fc7\u4e0d\u7528\u597d\u50cf\u4e5f\u80fd\u8fc7\uff1f~~\uff09\u3002\n\n\u6ce8\u610f\uff0c\u4ee5\u4e0a\u65b9\u6cd5\u4ec5\u5728\u975e\u53f6\u5b50\u8282\u70b9\u4e2a\u6570 $>=3$ \u65f6\u6210\u7acb\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u8fdb\u884c\u7279\u5224\u3002\n\n\u5f53\u603b\u70b9\u6570 $=2$ \u65f6\uff0c\u76f4\u63a5\u8fde\u63a5 $1-2$ \u5373\u53ef\u3002\n\n\u5f53\u975e\u53f6\u5b50\u8282\u70b9\u4e2a\u6570\u4e3a $1$ \u65f6\uff0c\u5168\u90e8\u5f80\u5b83\u8fde\u8fb9\u5373\u53ef\u3002\n\n\u5f53\u975e\u53f6\u5b50\u8282\u70b9\u4e2a\u6570\u4e3a $2$ \u65f6\uff0c\u627e\u5230\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u5bf9\u5e94\u96c6\u5408\uff0c\u7136\u540e\u5c06\u5176\u4e2d\u7684\u53f6\u5b50\u8282\u70b9\u8fde\u5411\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\uff0c\u5176\u4f59\u7684\u53f6\u5b50\u8282\u70b9\u8fde\u5411\u53e6\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u5373\u53ef\u3002",
        "postTime": 1625068046,
        "uid": 73711,
        "name": "HC20050615",
        "ccfLevel": 6,
        "title": "CF566E \u9898\u89e3"
    },
    {
        "content": "### CF 566E\n#### Solution\n\u5148\u8003\u8651\u4e00\u822c\u60c5\u51b5\uff0c\u5373\u975e\u53f6\u7ed3\u70b9\u4e2a\u6570\u5927\u4e8e\u7b49\u4e8e$3$\n\n\u4e0d\u96be\u53d1\u73b0\u4e24\u4e2a\u975e\u53f6\u8282\u70b9$u,v$\u6709\u8fb9\uff0c\u5f53\u4e14\u4ec5\u5f53**\u5b58\u5728\u4e24\u4e2a\u96c6\u5408\u7684\u4ea4\u4ec5\u4e14\u4ec5\u542b\u6709\u4e24\u4e2a\u5143\u7d20$u,v$**\uff0c\u7528 $\\mathrm{bitset}$ \u4f18\u5316\u5c31\u53ef\u4ee5\u5f97\u5230\u6240\u6709\u975e\u53f6\u8282\u70b9\u4e4b\u95f4\u7684\u8fb9\u4e86\u3002\n\n\u7136\u540e\u8003\u8651\u53f6\u8282\u70b9\uff0c\u53f6\u8282\u70b9\u5bf9\u5e94\u7684\u96c6\u5408\u4e00\u5b9a\u662f\u6240\u6709\u5305\u542b\u5b83\u7684\u96c6\u5408\u91cc\u6700\u5c0f\u7684\u90a3\u4e2a\uff0c\u627e\u51fa\u4e00\u4e00\u5bf9\u5e94\u4e4b\u540e\uff0c\u53d1\u73b0\u53bb\u6389\u8fd9\u4e2a\u96c6\u5408\u91cc\u6240\u6709\u53f6\u8282\u70b9\uff0c\u5c31\u7b49\u4e8e\u5b83\u6240\u8fde\u7684\u975e\u53f6\u8282\u70b9\u7684\u8fde\u8fb9\u96c6\u5408\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u627e\u5230\u5b83\u6240\u8fde\u7684\u975e\u53f6\u8282\u70b9\u4e86\u3002\n\n\u5269\u4e0b\u7684\u7279\u6b8a\u60c5\u51b5\u8ba8\u8bba\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(\\frac{n^3}{\\omega})$\n#### Code\n```cpp\nint n,cnt;\nbool notleaf[MAXN];\nbitset<MAXN> a[MAXN],adj[MAXN],vis;\n\nint main(){\n    scanf(\"%d\",&n);\n    for(int i = 1,x,y;i <= n;i++){\n        scanf(\"%d\",&x);\n        for(int j = 1;j <= x;j++)\n            scanf(\"%d\",&y), a[i][y] = 1;\n    }\n    for(int i = 1;i <= n;i++){\n        for(int j = i + 1;j <= n;j++){\n            if((a[i] & a[j]).count() == 2){\n                bitset<MAXN> tmp = a[i] & a[j];\n                int x = tmp._Find_first(), y = tmp._Find_next(x);\n                if(!adj[x][y]){\n                    cnt += 1; printf(\"%d %d\\n\",x,y); vis[x] = vis[y] = 1;\n                    adj[x][y] = adj[y][x] = adj[x][x] = adj[y][y] = 1;\n                    notleaf[x] = notleaf[y] = 1;\n                }\n            }\n        }\n    }\n    if(cnt == 0){\n        for(int i = 2;i <= n;i++) printf(\"%d %d\\n\",1,i);\n        return 0;\n    }\n    if(cnt == 1){\n        int x = 0, y = 0;\n        for(int i = 1;i <= n;i++)\n            if(notleaf[i]) {x = i; break;}\n        for(int i = x + 1;i <= n;i++)\n            if(notleaf[i]) {y = i; break;}\n        for(int i = 1;i <= n;i++){\n            if((int)a[i].count() != n){\n                for(int j = 1;j <= n;j++)\n                    if(!notleaf[j]) printf(\"%d %d\\n\",j,a[i][j] ? x : y);\n                break;\n            }\n        }\n        return 0;\n    }\n    for(int i = 1;i <= n;i++){\n        if(notleaf[i]) continue;\n        int minn = INF, p = 0;\n        for(int j = 1;j <= n;j++)\n            if(a[j][i] && (int)a[j].count() < minn)\n                minn = a[j].count(), p = j;\n        bitset<MAXN> tmp = a[p] & vis;\n        for(int j = 1;j <= n;j++){\n            if(tmp[j] && tmp == adj[j]){\n                printf(\"%d %d\\n\",i,j);\n                break;\n            }\n        }       \n    }\n    return 0;\n}",
        "postTime": 1612099819,
        "uid": 108894,
        "name": "\u5173\u6000\u4ed6\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF566E \u3010Restoring Map\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7684\u5751\u70b9\uff1a\u6ca1\u6709\u8bf4\u54ea\u4e2a\u90bb\u5c45\u96c6\u5408\u662f\u8c01\u7684\u3002\n\n\u9996\u5148\uff0c\u5982\u679c\u4e24\u4e2a\u90bb\u5c45\u96c6\u5408\u7684\u4ea4\u96c6\u5927\u5c0f\u521a\u597d\u4e3a $2$\uff0c\u90a3\u4e48\u8bf4\u660e\u8fd9\u4e24\u4e2a\u70b9\u80af\u5b9a\u76f8\u8fde\u3002\u53cd\u8bc1\uff1a\u5982\u679c\u4e0d\u662f\u7684\u8bdd\uff0c\u90a3\u5b83\u4eec\u4e24\u4e2a\u4e2d\u95f4\u7684\u70b9\u96be\u9053\u4e0d\u884c\u5417\uff1f\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u6c42\u5f97\u4e86\u54ea\u4e24\u4e2a\u975e\u53f6\u8282\u70b9\u76f8\u8fde\uff0c\u63a5\u4e0b\u6765\u5c31\u9700\u8981\u6c42\u51fa\u6bcf\u4e00\u4e2a\u53f6\u8282\u70b9\u6302\u5728\u54ea\u91cc\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u53f6\u8282\u70b9 $x$\uff0c\u5305\u542b $x$ \u7684\u90bb\u5c45\u96c6\u5408\u4e2d\u5143\u7d20\u4e2a\u6570\u6700\u5c0f\u7684\u96c6\u5408\u5c31\u662f $x$ \u7684\u90bb\u5c45\u96c6\u5408\u3002\u56e0\u4e3a\u53f6\u8282\u70b9\u5904\u4e8e\u672b\u7aef\uff0c\u80af\u5b9a\u6bd4\u5b83\u65c1\u8fb9\u96c6\u5408\u770b\u7684\u8981\u8fd1\u3002\n\n\u6240\u4ee5\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e $x$\uff0c\u7136\u540e\u518d\u679a\u4e3e\u5b83\u7684\u90bb\u5c45\u4eec\uff08\u975e\u53f6\u8282\u70b9\uff09\uff0c\u8fd9\u91cc\u7684\u90bb\u5c45\u5206\u4e3a\u4e09\u79cd\uff1a\n\n\u7236\u8282\u70b9\n\n\u7956\u7236\u8282\u70b9\n\n\u5e73\u884c\u975e\u53f6\u8282\u70b9\uff08\u540c\u7236\uff09\n\n\u90a3\u4e48\u7236\u8282\u70b9\u80af\u5b9a\u548c\u8fd9\u4e9b\u90bb\u5c45\u975e\u53f6\u8282\u70b9\u7684\u76f8\u90bb\u5173\u7cfb\u6700\u591a\uff0c\u6240\u4ee5\u53ea\u8981\u5224\u65ad\u8fd9\u4e9b\u70b9\u76f8\u90bb\u5143\u7d20\u7684\u96c6\u5408\u548c $x$ \u7684\u90bb\u5c45\u96c6\u5408\u7684\u4ea4\u6700\u5927\u7684\u5c31\u662f\u7236\u8282\u70b9\u3002\n\n\u53ef\u80fd\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ec6\u8282\u95ee\u9898\uff0c\u5927\u5bb6\u53ef\u4ee5\u81ea\u5df1\u7814\u7a76\u4e00\u4e0b\uff0c\u975e\u5e38\u7b80\u5355\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nbitset<1005>b[1005];\nbitset<1005>mp[1005];\nint vist[1005],f[1005];\nint main()\n{\n\tint n;\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint k;\n\t\tcin>>k;\n\t\tfor(int j=1;j<=k;j++)\n\t\t{\n\t\t\tint x;\n\t\t\tscanf(\"%d\",&x);\n\t\t\tb[i][x]=1;\n\t\t}\n\t}\n\tint flag=0;\n\tfor(int i=1;i<=n;i++)for(int j=i+1;j<=n;j++)\n\t{\n\t\tbitset<1005>bb=b[i]&b[j];\n\t\tif(bb.count()!=2)continue;\n\t\tint l1=bb._Find_first();\n\t\tint l2=bb._Find_next(l1);\n\t\tvist[l1]=vist[l2]=1;\n\t\tmp[l1][l2]=mp[l2][l1]=1;\n\t\tflag++;\n\t}\n\tif(!flag)vist[1]=1;\n\tflag=0;\n\tfor(int i=1;i<=n;i++)if(!vist[i])\n\t{\n\t\tint s=INT_MAX,w;\n\t\tfor(int j=1;j<=n;j++)if(b[j][i]==1&&s>b[j].count())\n\t\t{\n\t\t\ts=b[j].count();\n\t\t\tw=j;\n\t\t}\n\t\tint s1=INT_MIN,s2=INT_MAX,ww;\n\t\tfor(int j=1;j<=n;j++)if(b[w][j]==1&&vist[j])\n\t\t{\n\t\t\tbitset<1005> bb=mp[j]&b[w];\n\t\t\tint tt=bb.count(),t2=mp[j].count();\n\t\t\tif(s1<tt)\n\t\t\t{\n\t\t\t\ts1=tt;\n\t\t\t\ts2=t2;\n\t\t\t\tww=j;\n\t\t\t}else if(s1==tt&&s2>t2)\n\t\t\t{\n\t\t\t\ts2=t2;\n\t\t\t\tww=j;\n\t\t\t}\n\t\t}\n\t\tint w2=0;\n\t\tfor(int j=1;j<=n;j++)if(b[w][j]==1&&vist[j])\n\t\t{\n\t\t\tbitset<1005> bb=mp[j]&b[w];\n\t\t\tint tt=bb.count(),t2=mp[j].count();\n\t\t\tif(s1==tt&&s2==t2&&j!=ww)\n\t\t\t{\n\t\t\t\tw2=j;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!w2)cout<<i<<\" \"<<ww<<endl,f[i]=ww;\n\t\telse\n\t\t{\n\t\t\tint flag=1;\n\t\t\tfor(int j=1;j<=n;j++)if(f[j]==ww||f[j]==w2)\n\t\t\t{\n\t\t\t\tif(b[w][j]&&f[j]==ww||!b[w][j]&&f[j]==w2)\n\t\t\t\t{\n\t\t\t\t\tcout<<i<<\" \"<<ww<<endl;\n\t\t\t\t\tf[i]=ww;\n\t\t\t\t}else\n\t\t\t\t{\n\t\t\t\t\tcout<<i<<\" \"<<w2<<endl;\n\t\t\t\t\tf[i]=w2;\n\t\t\t\t}\n\t\t\t\tflag=0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(flag)\n\t\t\t{\n\t\t\t\tcout<<i<<\" \"<<ww<<endl;\n\t\t\t\tf[i]=ww;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)for(int j=i+1;j<=n;j++)\n\t\tif(mp[i][j])cout<<i<<\" \"<<j<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1602134555,
        "uid": 107484,
        "name": "wmy_goes_to_thu",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF566E \u3010Restoring Map\u3011"
    }
]