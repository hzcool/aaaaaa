[
    {
        "content": "\u4f60\u9700\u8981\u6309\u7167\u4e00\u4e2a\u5b57\u7b26\u4e32\u884c\u8d70\uff0c\u4f46\u4f60\u6536\u5230\u4e86\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u95ee\u4f60\u4f9d\u7136\u5728\u6700\u540e\u8d70\u5230\u6b63\u786e\u7684\u5730\u65b9\u7684\u6982\u7387\u3002\n\n\u770b\u770b\u6570\u636e\u8303\u56f4\uff0c10\u3002\u663e\u7136\u66b4\u641c\uff0c\u6700\u540e\u5bf9\u4e8e\u6240\u6709\u7684\u60c5\u51b5\u7b97\u5230\u8fbe\u7684\u60c5\u51b5\u7684\u5360\u6bd4\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n  #include<bits/stdc++.h>\n  using namespace std;\n  int n,k,ans,sum;\n  char a[15],b[15];\n  void dfs(int x,int cnt){\n      if(x>n){\n          sum++;//\u5b8c\u4e86\n          if(cnt==k)ans++;//\u6210\u529f\u5230\u8fbe\n          return;\n      }\n      if(b[x]=='+')dfs(x+1,cnt+1);\n      else if(b[x]=='-')dfs(x+1,cnt-1);\n      else{\n          dfs(x+1,cnt-1);\n          dfs(x+1,cnt+1);//\u2018?\u2019\u679a\u4e3e\n      }\n  }\n  signed main()\n  {\n      scanf(\"%s%s\",a+1,b+1);\n      n=strlen(a+1);\n      for(int i=1;i<=n;i++){\n          if(a[i]=='+')k++;\n          else k--;\n      }\n      dfs(1,0);\n      printf(\"%.7lf\",1.0*ans/sum);//\u8ba1\u7b97\u5360\u6bd4\n      return 0;\n  }\n```",
        "postTime": 1660609145,
        "uid": 428358,
        "name": "cqbztzl",
        "ccfLevel": 5,
        "title": "CF476B\u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9053\u9898\u662f\u4e00\u9053\u6982\u7387\u95ee\u9898\uff0c\u6709\u591a\u79cd\u89e3\u6cd5\uff1a\n\n\u5148\u8bb2\u4e00\u4e2a\u6bd4\u8f83\u66b4\u529b\u7684\u7b97\u6cd5\uff0c\nbitmask\u7b97\u6cd5\n\n\u601d\u8def\u662f\uff1a\u66b4\u529b\u679a\u4e3e\u6bcf\u4e00\u4e2a'?'\u662f\u52a0\u8fd8\u662f\u51cf\uff0c\u7136\u540e\u4e0e\u5df2\u7ecf\u8d70\u5230\u8def\u7a0b\u76f8\u52a0\uff0c\u5982\u679c\u7b49\u4e8eWifi\u7684\u4f4d\u7f6e\u90a3\u4e48\u65b9\u6848\u6570\u91cf+1\uff0c\u6700\u540e\u62ff\u65b9\u6848\u6570\u9664\u4ee52\u7684('?'\u7684\u4e2a\u6570)\u6b21\u65b9\n\n\u65f6\u95f4\u590d\u6742\u5ea6O(|s| * 2\u7684|s|\u6b21\u65b9)\n\n\u4ee3\u7801\uff1a\n```\n#include <bits/stdc++.h>\nusing namespace std;\nstring s,t;\nint a,b,cnt=0;//a\u7528\u6765\u8bb0\u5f55Wifi\u7684\u4f4d\u7f6e\uff0cb\u7528\u6765\u8bb0\u5f55\u6839\u636e\u5df2\u77e5\u7684\u4fe1\u606f\u6240\u8d70\u5230\u7684\u4f4d\u7f6e\nint main(){\n\tcout<<fixed<<setprecision(12);//\u8c03\u6574\u8f93\u51fa\u7cbe\u5ea6\n\tcin>>s>>t;\n\tfor(int i=0;i<s.size();i++){\n\t\tif(s[i]=='+')\ta++;\n\t\telse if(s[i]=='-')\ta--;\n\t}\n\tfor(int i=0;i<t.size();i++){\n\t\tif(t[i]=='+')\tb++,cnt++;\n\t\telse if(t[i]=='-')\tb--,cnt++;\n\t}\n\tint ret=0;\n\tdouble ans;\n\tint n=t.size()-cnt;//n\u8868\u793a\u5b57\u7b26\u4e32t\u4e2d'?'\u7684\u4e2a\u6570\n\tfor(int i=0;i<(1<<n);i++){//i\u7528\u4e8c\u8fdb\u5236\u8868\u793a\u6bcf\u4e00\u4f4d\u4e0a\u5982\u679c\u662f1\uff0c\u8868\u793a\u8fd9\u4e2a\u4f4d\u7f6e\u4e3a+\uff0c\u5426\u5219\u8fd9\u4e2a\u4f4d\u7f6e\u4e3a-\n\t\tint tmp=b;//tmp\u9996\u5148\u5148\u8d4b\u4e0ab\u56e0\u4e3ab\u662f\u5df2\u7ecf\u786e\u5b9a\u7684\u4f4d\u6240\u884c\u8d70\u7684\u8def\u7a0b\uff0c\u6ca1\u6cd5\u589e\u52a0\u6216\u51cf\u5c11\n\t\tfor(int j=0;j<n;j++){\n\t\t\tif(i>>j&1)\ttmp++;//bitmask\u57fa\u672c\u6280\u5de7,\u5224\u65ad\u4ece\u53f3\u5f80\u5de6\u6570\u7b2c(j+1)\u4f4d\u662f\u5426\u4e3a1\n\t\t\telse\ttmp--;\n\t\t}\n\t\tif(tmp==a)\tret++;//\u7ed3\u679c\u52a01\n\t}\n\tans=(ret*1.0)/(double)(1<<n);\n\tcout<<ans<<endl;\n}\n```\n\u7136\u800c\u8fd8\u6709\u4e00\u79cd\u66f4\u9ad8\u6548\u7684\u89e3\u6cd5\uff1aDP\u89e3\u6cd5\n\ndp[i][j]\u8868\u793a\u8d70\u5230\u7b2ci\u4e2a\u95ee\u53f7,\u5750\u6807\u4e3aj\u65f6\u7684\u6982\u7387.\u56e0\u4e3a\u5750\u6807\u53ef\u80fd\u4e3a\u8d1f,\u6240\u4ee5\u6570\u7ec4\u524d\u79fb10\u8ddd\u79bb.\n\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1adp[i][j]=dp[i-1][j-1] * 0.5+dp[i-1][j+1] * 0.5\n\n\u65f6\u95f4\u590d\u6742\u5ea6O(|s|\u65b9)\n```\n#include <bits/stdc++.h>\nusing namespace std;\ndouble dp[40][40]={0};\nstring s,t;\nint main(){\n    cout<<fixed<<setprecision(12);\n    cin>>s>>t;\n    int len=s.size();\n    int pos1=0,pos2=0,pos3=0;//\u8ddf\u4e0a\u6b21a,b,n\u7c7b\u4f3c\n    for (int i=0;i<len;i++){\n        if(s[i]=='+')\tpos1++;\n        else\tpos1--;\n        if(t[i]=='+')\tpos2++;\n        else if (t[i]=='-')\tpos2--;\n        else\tpos3++;\n    }\n    dp[0+10][pos2+10]=1;\n    //\u5c06\u6240\u6709\u5df2\u7ecf\u8bc6\u522b\u7684\u4fe1\u53f7\u626b\u8fc7\u4e4b\u540e\uff0c\u4e5f\u5c31\u662f\u626b\u5230\u7b2c0\u4e2a\u95ee\u53f7\u7684\u6240\u5728\u7684\u4f4d\u7f6e\u4e00\u5b9a\u662fpos2\uff0c\u56e0\u4e3a\u6574\u4e2adp\u90fd\u5411\u53f3\u79fb\u4e8610\u683c\uff0c\u6240\u4ee5\u8981+10\n    for(int i=1;i<=pos3;i++)\n        for(int j=-10;j<=len;j++)\n            dp[i+10][j+10]=dp[i-1+10][j-1+10]*0.5+dp[i-1+10][j+1+10]*0.5;//dp\u72b6\u6001\u8f6c\u79fb\uff0c\u4e0a\u9762\u5df2\u7ecf\u89e3\u91ca\u8fc7\u4e86\n    cout<<dp[pos3+10][pos1+10];//\u8f93\u51fa\u626b\u5b8c\u4e86\u6240\u6709\u95ee\u53f7\u4f4d\u7f6epos1\u7684\u6982\u7387\n    return 0;\n}\n```",
        "postTime": 1542561902,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF476B \u3010Dreamoon and WiFi\u3011"
    },
    {
        "content": "# \u9898\u76ee\u610f\u601d\n\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 $a$ \u548c\u5b57\u7b26\u4e32 $b$,\u4f60\u8981\u6309\u7167 $a$ \u8def\u7ebf\u8d70\u4e00\u6b21\uff0c\u627e\u5230\u7ec8\u70b9\u7684\u4f4d\u7f6e\uff0c\u518d\u6309\u7167 $b$ \u8def\u7ebf\u8d70\u4e00\u6b21\uff0c\u6c42\u8d70\u5230\u7ec8\u70b9\u7684\u6982\u7387\u4e3a\u591a\u5c11\uff08\u4fdd\u7559 $12$ \u4f4d\u5c0f\u6570\uff09\uff0c\u5df2\u77e5\u5f53\u7b26\u53f7\u4e3a\u52a0\u53f7\u65f6\u4ee3\u8868\u5411\u524d\u8d70\u4e00\u683c\uff0c\u51cf\u53f7\u4ee3\u8868\u5411\u540e\u8d70\u4e00\u683c\uff0c\u95ee\u53f7\u4ee3\u8868\u5411\u524d\u8d70\u4e00\u683c\u6216\u5411\u540e\u8d70\u4e00\u683c\uff0c\u4e14\u4f60\u7684\u521d\u59cb\u4f4d\u7f6e\u4e3a $0$\u3002\n# \u4ee3\u7801\u601d\u8def\n~~\u8fd9\u9898\u6bd4\u8f83\u6c34\uff0c\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u641c\u7d22\u3002~~\n\n\u9996\u5148\u6211\u4eec\u6309\u7167 $a$ \u8def\u7ebf\u8d70\u4e00\u6b21\uff0c\u627e\u5230\u7ec8\u70b9\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u4ece $0$ \u5f00\u59cb\u8d70\uff0c\u5e76\u4ece\u7b2c $1$ \u4e2a\u5b57\u7b26\u5f00\u59cb\u8bfb\u53d6\uff0c\u5f53\u8be5\u5b57\u7b26\u4e0d\u4e3a $?$ \u65f6\uff0c\u6211\u4eec\u5c31\u4f9d\u9898\u610f\u8d70\uff0c\u5982\u679c\u8be5\u5b57\u7b26\u4e3a $?$\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5206\u522b\u628a\u5b83\u5f53\u505a $+$ \u548c $-$ \u5404\u8d70\u4e00\u904d\uff0c\u5f53\u8def\u7ebf\u8d70\u5b8c\u65f6\uff0c\u5c31\u628a $zf$ \u52a0\u4e0a $1$\uff0c\u518d\u5224\u65ad\u8fd9\u4e2a\u65b9\u6848\u53ef\u5426\u5230\u8fbe\u7ec8\u70b9\uff0c\u5982\u679c\u53ef\u4ee5\u5c31\u628a $kx$ \u52a0\u4e0a $1$\uff0c\u6700\u540e\u8f93\u51fa\u3002\n# \u4ee3\u7801\u5b9e\u73b0\n```\n#include<bits/stdc++.h>\nusing namespace std;\nstring a,b;\nint zf,kx,aa,zd;\nvoid f(int n,int y){\n\tif(n>aa){\n\t\tzf++;//\u8bb0\u5f55\u603b\u65b9\u6848\n\t\tif(y==zd)kx++;//\u8bb0\u5f55\u53ef\u884c\u89e3\n\t\treturn ;\n\t}\n\tif(b[n]=='+')f(n+1,y+1);\n\telse if(b[n]=='-')f(n+1,y-1);\n   \t//\u5f53\u8be5\u5b57\u7b26\u4e0d\u4e3a?\u65f6\n\telse{\n\t\tf(n+1,y+1);\n\t\tf(n+1,y-1);\n        \t//\u5f53\u8be5\u5b57\u7b26\u4e3a?\u65f6\n\t}\n}\nint main(){\n\tcin>>a>>b;\n\taa=a.length();\n\ta=' '+a;\n\tb=' '+b; \n\tfor(int i=1;i<=aa;i++){\n\t\tif(a[i]=='+')zd++;\n\t\tif(a[i]=='-')zd--;\n     \t\t//\u6c42\u7ec8\u70b9\u7684\u4f4d\u7f6e\n\t}\n\tf(1,0);//\u5f00\u59cb\u641c\u7d22\n\tprintf(\"%.12lf\",kx*1.00/zf);\n\treturn 0;\n}\n```\n",
        "postTime": 1680871074,
        "uid": 866692,
        "name": "zjhzs666",
        "ccfLevel": 0,
        "title": "CF476B Dreamoon and WiFi \u9898\u89e3"
    },
    {
        "content": "# \u9898\u76ee\u5206\u6790\n\n\u660e\u663e\u6982\u7387\u9898\uff0cbitmask \u6b63\u89e3\uff0c\u53ef\u662f\u6211\u771f\u7684\u592a\u84bb\u4e86\uff0c\u4f46\u662f\uff0c\u6211\u4eec\u60f3\u4e00\u60f3\uff0c\u5982\u679c\u9700\u8981\u6c42\u5230\u8fbe\u7ec8\u70b9\u7684\u6982\u7387\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u5230\u8fbe\u7ec8\u70b9\u7684\u65b9\u6848\u6709\u591a\u5c11\u79cd\uff0c\u548c\u603b\u5171\u7684\u65b9\u6848\u6709\u591a\u5c11\u79cd\uff0c\u9664\u4e00\u4e0b\u5c31\u641e\u5b9a\u4e86\u3002\n\n# \u601d\u8def\u89e3\u6790\n\n\u8003\u8651\u76f4\u63a5\u4f7f\u7528\u7206\u641c\uff0c\u5148\u5bf9\u4e8e\u539f\u4e32\u8ba1\u7b97\u51fa\u7ec8\u70b9\u4f4d\u7f6e\uff0c\u5728\u5bf9\u4e8e\u542b\u6709\u95ee\u53f7\u7684\u5b57\u7b26\u4e32\u8fdb\u884c\u641c\u7d22\uff0c\u662f\u52a0\u5c31\u52a0\uff0c\u662f\u51cf\u5c31\u51cf\uff0c\u662f\u95ee\u53f7\u5c31\u4e24\u79cd\u90fd\u641c\u4e00\u641c\uff0c\u6700\u540e\u7edf\u8ba1\u5373\u53ef\uff0c\u590d\u6742\u5ea6 $2$ \u7684\u4e32\u7684\u957f\u5ea6\u6b21\u65b9\u3002\n\n# AC CODE\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 20;\nchar a[maxn], b[maxn];\nint n, ans1, ans2, pos;\nvoid dfs(int step, int now) {\n\tif (step > n) {\n\t\tans1++; // \u6bcf\u4e00\u79cd\u65b9\u6848\u90fd\u5bf9\u603b\u65b9\u6848\u505a\u8d21\u732e\n\t\tif (now == pos)\n\t\t\tans2++; // \u80fd\u5230\u8fbe\u7ec8\u70b9\u7684\u65b9\u6848\u5355\u72ec\u7edf\u8ba1\n\t\treturn;\n\t}\n\tif (b[step] == '+') dfs(step + 1, now + 1);\n\telse if (b[step] == '-') dfs(step + 1, now - 1);\n\telse {\n\t\tdfs(step + 1, now + 1);\n\t\tdfs(step + 1, now - 1);\n\t} // \u5206\u60c5\u51b5\u8ba8\u8bba\u5373\u53ef\n}\nint main() {\n\tcin >> (a + 1) >> (b + 1);\n\tn = strlen(a + 1); \n\tfor (int i = 1; i <= n; i++) {\n\t\tif (a[i] == '+') pos++;\n\t\tif (a[i] == '-') pos--;\n\t} // \u8ba1\u7b97\u7ec8\u70b9\n\tdfs(1, 0);\n\tprintf(\"%.12lf\", ans2 * 1.0 / ans1); // \u6982\u7387\n\treturn 0;\n} \n```\n",
        "postTime": 1661338341,
        "uid": 525056,
        "name": "I_love_LPN_Forever",
        "ccfLevel": 4,
        "title": "CF476B \u9898\u89e3"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF476B)\n\n### \u601d\u8def\n\n~~\u7206\u641c\u6c34\u9898\u3002~~\n\n\u9996\u5148\u6839\u636e\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u627e\u51fa\u7ec8\u70b9\uff0c\u7136\u540e\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e32\u76f4\u63a5\u641c\u7d22\uff0c\u5982\u679c\u9047\u5230\u95ee\u53f7\u5c31\u8ba9\u4ed6\u5148 `+` \u4e00\u6b21\uff0c\u518d `-` \u4e00\u6b21\uff0c\u5176\u4f59\u7684\u76f4\u63a5\u8ddf\u9898\u610f\u6765\u3002\u6700\u540e\u628a\u80fd\u591f\u5230\u7ec8\u70b9\u7684\u65b9\u6848\u9664\u4ee5\u603b\u65b9\u6848\u5c31\u662f\u6982\u7387\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n;\nchar a[15],b[15];\nint xx;\nint ans,anss;\nvoid dfs(int step,int x)\n{\n\tif(step>n)\n\t{\n\t\tanss++;\n\t\tif(xx==x) ans++;\n\t\treturn;\n\t}\n\tif(b[step]=='?')\n\t{\n\t\tdfs(step+1,x+1);\n\t\tdfs(step+1,x-1);\n\t}\n\telse if(b[step]=='-')\n\t{\n\t\tdfs(step+1,x-1);\n\t}\n\telse\n\t{\n\t\tdfs(step+1,x+1);\n\t}\n}\nint main()\n{\n\tscanf(\"%s%s\",a+1,b+1);\n\tn=strlen(a+1);\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tif(a[i]=='+') xx++;\n\t\telse xx--;\n\t}\n\tdfs(1,0);\n\tprintf(\"%.10lf\",ans/(anss*1.0));\n\treturn 0;\n}\n```",
        "postTime": 1660652098,
        "uid": 428690,
        "name": "Zhy_never_giveup_jtl",
        "ccfLevel": 0,
        "title": "CF476B Dreamoon and WiFi \u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\uff0c\u53ef\u4ee5\u5f97\u5230\u6807\u51c6\u7684 WIFI \u4f4d\u7f6e\uff0c\u7136\u540e\uff0c\u56e0\u4e3a $|s|\\le 10$\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5bf9\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e32\u66b4\u529b\u6c42\u89e3\uff0c\u6c42\u51fa\u603b\u5171\u7684\u65b9\u6848\u6570 $b$ \u548c\u6b63\u597d\u5230\u8fbe\u6807\u51c6\u4f4d\u7f6e\u7684\u65b9\u6848\u6570 $a$\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f $\\dfrac{a}{b}$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(2^{|s|})$\u3002",
        "postTime": 1660577448,
        "uid": 556362,
        "name": "UnnamedOrNamed",
        "ccfLevel": 5,
        "title": "CF476B Dreamoon and WiFi \u9898\u89e3"
    },
    {
        "content": "CF \u91cc\u627e dp \u9898\u627e\u5230\u4e86\u8fd9\u9898\uff0c\u4e8e\u662f\u5199\u4e86 dfs\u3002\n\n\u6ce8\u610f\u5230\u5b57\u7b26\u4e32\u957f\u5ea6\u6700\u591a\u5c31 $10$\uff08\u53ef\u4ee5\u5728\u539f\u9898\u9762\u4e2d\u770b\u5230\uff09\uff0c\u6240\u4ee5\u663e\u7136\u53ef\u4ee5 dfs\u3002\n\n\u7531\u4e8e\u53ea\u6709\u4f4d\u7f6e\u662f\u6211\u4eec\u5173\u5fc3\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9996\u5148\u9700\u8981\u8bb0\u5f55\u786e\u5b9a\u7684\u5b57\u7b26\u4f1a\u5e26\u4ed6\u5230\u54ea\u4e2a\u4f4d\u7f6e\u3002\n\n\u53ef\u4ee5\u8bb0 $pos_1$ \u8868\u793a\u6b63\u786e\u7684\u5730\u70b9\uff0c\u90a3\u663e\u7136\u6211\u4eec\u5f53 $s_i = \\texttt{+}$ \u65f6\uff0c\u5c31\u8ba9 $pos_1$ \u52a0\u4e0a $1$\uff0c\u5426\u5219\u51cf\u53bb $1$\uff0c\u8bb0 $pos_2$ \u8868\u793a\u4ed6\u5df2\u7ecf\u786e\u5b9a\u7684\u8def\u7ebf\u8d70\u5230\u7684\u4f4d\u7f6e\uff0c\u7b97\u6cd5\u4e0e $pos_1$ \u76f8\u540c\uff0c\u4e0d\u770b\u95ee\u53f7\u5c31\u884c\u3002\n\n\u6211\u4eec\u8bb0 $q$ \u8868\u793a\u95ee\u53f7\u7684\u6570\u91cf\uff0c\u7136\u540e\u5199\u4e00\u4e2a `dfs(q, pos1, pos2)`\uff0c\u5f53 $q = 0$ \u65f6\uff0c\u82e5 $pos_1 = pos_2$\uff0c\u90a3\u5c31\u6b63\u786e\u4e86\uff0c\u6211\u4eec\u8ba9\u8ba1\u6570\u5668 $ans$ \u52a0\u4e0a $1$\u3002\n\n\u7136\u540e\u6bcf\u6b21 dfs\uff0c\u6211\u4eec\u5206\u522b `dfs(q - 1, pos1, pos2 + 1)` \u548c `dfs(q - 1, pos1, pos2 - 1)`\uff0c$q-1$ \u662f\u56e0\u4e3a\u6bcf\u6b21 dfs \u4e00\u6b21\u5c31\u4f1a\u591a\u4e00\u4e2a\u786e\u5b9a\u7684\u4f4d\u7f6e\uff0c$pos_2 \\pm 1$ \u662f\u56e0\u4e3a\u6bcf\u6b21\u4f1a\u5411\u6b63\u65b9\u5411\u4e00\u6b65\u6216\u5411\u8d1f\u65b9\u5411\u4e00\u6b65\u3002\n\n\u6700\u540e\u6211\u4eec\u663e\u7136\u53d1\u73b0\u4e00\u5171\u6709 $2^q$ \u79cd\u53ef\u80fd\uff0c\u90a3\u7b54\u6848\u5c31\u662f $\\dfrac{ans}{2^q}$\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u8f7b\u677e\u7684\u5199\u51fa\u4ee3\u7801\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint ans;\n\nvoid dfs(int ques, int pos1, int pos2) {\n  if (ques == 0) {\n    if (pos1 == pos2) {\n      ++ans;\n    }\n    return ;\n  }\n  dfs(ques - 1, pos1, pos2 + 1);\n  dfs(ques - 1, pos1, pos2 - 1);\n}\n\nint main() {\n  string s1, s2;\n  cin >> s1 >> s2;\n  int truepos = 0, walkpos = 0, questionMark = 0;\n  for (auto i : s1) truepos += (i == '+' ? 1 : -1);\n  for (auto i : s2) {\n    if (i == '+') ++walkpos;\n    else if (i == '-') --walkpos;\n    else ++questionMark;\n  }\n  dfs(questionMark, truepos, walkpos);\n  int tot = (1 << questionMark);\n  cout << fixed << setprecision(12) << (double(ans) / tot) << endl;\n}\n```",
        "postTime": 1659356344,
        "uid": 219791,
        "name": "tZERO\u3061\u3083\u3093",
        "ccfLevel": 0,
        "title": "CF476B Dreamoon and WiFi"
    },
    {
        "content": "# \u6ce8\u610f\uff01\u7edd\u975e\u6b63\u89e3\uff01\n\u8fd9\u91cc\u7ed9\u51fa\u4e00\u79cd\u849f\u84bb\u7684\u601d\u8def\u3002\u7531\u4e8e\u672c\u849f\u84bb\u4e0d\u4f1a$DP$\uff0c\u56e0\u800c\u6211\u4eec\u53ef\u91c7\u7528\u4e8c\u8fdb\u5236\u7684\u601d\u8def\u2014\u2014\u5373\uff0c\u5148\u5904\u7406\u8f93\u5165\uff0c\u5f97\u5230\u4e24\u79cd\u7684\u6700\u7ec8\u5750\u6807\uff0c\u7136\u540e\u4e00\u4e00\u679a\u4e3e\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing std::queue;\nqueue<bool>s;\nchar ch;\nll x,y,z,cnt,ans,n;\nvoid f(ll n)//\u9012\u5f52\u4e8c\u8fdb\u5236\n{\n    if(n>0)\n    {\n        f(n/2);\n        s.push(n%2);\n    }\n}\nint main()\n{\n    do//do-while\u8f93\u5165\n    {\n        ch=getchar();\n        if(ch!='\\n')x+=ch=='+'?1:-1;//\u5982\u679c\u4e3a+\u5c31\u52a01\u5426\u5219\u51cf1\n    }while(ch!='\\n');\n    do//\u540c\u7406\n    {\n        ch=getchar();\n        if(ch!='\\n')y+=ch=='+'?1:ch=='-'?-1:0;\n        cnt+=ch=='?';\n    }while(ch!='\\n');\n    if(!cnt)//\u5982\u679c\u6ca1\u6709\u95ee\u53f7\u7684\u8bdd\u8981\u4e48\u662f0\u8981\u4e48\u662f1\n    {\n        printf(\"%d\",x==y);\n        return 0;\n    }\n    n=1<<cnt;//\u5de6\u79fb\u901f\u5ea6\u66f4\u5feb\uff0c\u7b49\u540c\u4e8epow(2,cnt)\n    for(ll i=0;i<n;i++)//\u5faa\u73af\n    {\n        z=y;//\u4fdd\u5b58\n        f(i);//\u4e8c\u8fdb\u5236\n        while(!s.empty())//\u961f\u5217\u51fa\u961f\n        {\n            if(s.front())z++;//\u5982\u679cbool\u503c\u4e3a1\u5c31\u52a01\uff0c\u5426\u5219\u51cf1\n            else z--;\n            s.pop();//\u5f39\u51fa\u9876\u90e8\u5143\u7d20\n        }\n        if(z==x)ans++;//ans\u52a01\n    }\n    printf(\"%.10f\",1.0*ans/n);\n}\n```",
        "postTime": 1586145557,
        "uid": 137367,
        "name": "hensier",
        "ccfLevel": 6,
        "title": "CF476B Dreamoon and WiFi \u9898\u89e3"
    }
]