[
    {
        "content": "### \u672c\u7bc7\u9898\u89e3\u5bf9\u89e3\u7684\u5b58\u5728\u6027\u7ed9\u51fa\u4e86\u4e25\u8c28\u800c\u5b8c\u6574\u7684\u8bc1\u660e\u3002\n\n* \u5176\u4ed6\u51e0\u7bc7\u9898\u89e3\u5927\u90fd\u8df3\u8fc7\u4e86\u5173\u952e\u6b65\u9aa4\uff0c\u6240\u4ee5\u6211\u53ea\u597d\u5047\u5b9a\u4ed6\u4eec\u5728\u8df3\u8fc7\u7684\u6b65\u9aa4\u4e2d\u4f7f\u7528\u4e86\u6210\u7acb\u7684\u8bc1\u660e...\u66f4\u4e0d\u8981\u63d0\u4e00\u4e9b\u6709\u903b\u8f91\u9519\u8bef\u7684\u3002\u3002\n\n* \u4e0b\u9762\u662f\u6b63\u6587\u3002\n\n### \u7ea6\u5b9a\n* \u5b9a\u4e49 $sq=\\lceil\\sqrt{n}\\rceil$\u3002\n\n### \u7b80\u5355\u73af\u6784\u9020\n* \u9996\u5148\u539f\u56fe\u4fdd\u8bc1\u8fde\u901a\u3001\u65e0\u91cd\u8fb9\u3001\u65e0\u81ea\u73af\u3002\u8fd9\u5f88\u91cd\u8981\u3002\n\n* \u8003\u8651\u5efa\u51fa dfs \u6811\uff0c\u65e0\u5411\u56fe\u4e0b\u975e\u6811\u8fb9\u663e\u7136\u662f\u8fd4\u7956\u8fb9\u3002\n\n* **\u56e0\u4e3a\u65e0\u91cd\u8fb9\uff0c\u6240\u4ee5\u4efb\u610f $1$ \u6761\u8fd4\u7956\u8fb9\u4e00\u5b9a\u6784\u6210\u4e00\u4e2a\u5927\u5c0f\u81f3\u5c11\u4e3a $3$ \u7684\u7b80\u5355\u73af\u3002\u63a8\u5e7f\u53ef\u5f97\uff0c\u5b58\u5728\u4efb\u610f $x$ \u6761\u8fd4\u7956\u8fb9\u5219\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a\u5927\u5c0f\u81f3\u5c11\u4e3a $x+2$ \u7684\u7b80\u5355\u73af\u3002**\n\n* \u6240\u4ee5\u6211\u4eec\u5148\u5728 dfs \u6811\u4e0a\u5c1d\u8bd5\u6784\u9020\u7b80\u5355\u73af\u3002\u663e\u7136\u7528\u6808\u6216\u8005\u6df1\u5ea6\u8bb0\u5f55\u4e00\u4e0b\u5f88\u5bb9\u6613\u6c42\u5f97\u3002\n\n* \u5982\u679c\u4e0d\u6210\u7acb\uff0c\u90a3\u4e48\u8fdb\u884c\u72ec\u7acb\u96c6\u6784\u9020\u3002\n\n### \u72ec\u7acb\u96c6\u6784\u9020\n* \u65e2\u7136\u4e0d\u5b58\u5728\u7b80\u5355\u73af\uff0c\u5219\u4e0d\u5b58\u5728\u4efb\u610f\u4e00\u4e2a\u70b9\u6709 $sq-2$ \u6761\u8fd4\u7956\u8fb9\u3002\u6362\u8a00\u4e4b\u4e00\u4e2a\u70b9\u6700\u591a\u6709 $sq-3$ \u6761\u975e\u6811\u8fb9\u3002\n\n* \u53d6 dfs \u6811\u7684\u968f\u4fbf\u4e00\u4e2a\u53f6\u8282\u70b9\u6765\u8003\u5bdf\uff0c\u5bb9\u6613\u8bc1\u660e\u5c06\u5b83\u62ff\u8d70\u53ea\u4f1a\u4f7f\u603b\u70b9\u6570\u51cf\u5c11 $sq-3+1+1$\uff08\u975e\u6811\u8fb9\u3001\u81ea\u5df1\u3001\u7236\u4eb2\uff09$=sq-1=\\lceil\\sqrt{n}\\rceil-1\\leqslant \\lfloor\\sqrt{n}\\rfloor$\u3002\n\n* \u7ee7\u7eed\u8003\u8651\u53d6\u8d70\u8fd9\u4e2a\u70b9\u53ca\u4e0e\u5176\u76f8\u8fde\u7684\u70b9\u4e4b\u540e\u7684 dfs \u6811\u3002\n\n* \u6b64\u65f6\u5b83\u53ef\u80fd\u4e0d\u8fde\u901a\u4f46\u6211\u4eec\u65e0\u6240\u8c13\uff0c\u8f6c\u800c\u627e\u4e00\u4e2a\u6df1\u5ea6\u6700\u5927\u7684\u70b9\u3002\n\n* \u5bb9\u6613\u8bc1\u660e\u8be5\u8282\u70b9\u5728\u5f53\u524d\u7684 dfs \u6811\u4e0a\u4e00\u5b9a\u6ca1\u6709\u513f\u5b50\uff0c\u53ef\u80fd\u6709\u7236\u4eb2\uff0c\u53ef\u80fd\u8fd8\u6709\u81f3\u591a $sq-3$ \u6761\u975e\u6811\u8fb9\uff0c\u52a0\u5728\u4e00\u8d77\u8fd8\u662f $sq-3+1+1=sq-1=\\lceil\\sqrt{n}\\rceil-1\\leqslant \\lfloor\\sqrt{n}\\rfloor$ \u4e2a\u70b9\u3002\n\n* \u663e\u7136\uff0c\u4e0a\u9762\u7684\u8fc7\u7a0b\u53ef\u4ee5\u53cd\u590d\u81f3\u5c11 $\\lfloor\\sqrt{n}\\rfloor^2\\leqslant n$ \u6b21\u3002\n\t* \u5982\u679c\u53d6\u7b49\uff0c\u90a3\u4e48 $\\lfloor\\sqrt{n}\\rfloor=\\lceil\\sqrt{n}\\rceil$\uff0c\u4ece\u800c\u6211\u4eec\u5df2\u7ecf\u53d6\u591f\u9898\u76ee\u8981\u6c42\u7684\u70b9\u6570\u4e86\u3002\n    \n   * \u5982\u679c\u662f $<$\uff0c\u5219\u4e00\u5b9a\u81f3\u5c11\u8fd8\u6709 $1$ \u4e2a\u70b9\uff0c\u5c06\u5b83\u53d6\u4e0a\u6211\u4eec\u6709 $\\lfloor\\sqrt{n}\\rfloor+1 \\geqslant \\lceil\\sqrt{n}\\rceil$ \u4e2a\u70b9\u3002\n   \n   * \u4ece\u800c\u6211\u4eec\u7ed9\u51fa\u4e86\u4e00\u79cd\u4e00\u5b9a\u5408\u6cd5\u7684\u6784\u9020\u65b9\u6848\u3002\n\n### \u5bf9\u51e0\u79cd\u8f83\u5bb9\u6613\u60f3\u5230\u7684\u4f2a\u8bc1\u7684\u8bc1\u4f2a\n* \u672c\u90e8\u5206\u65e0\u6cd5\u4e3e\u51fa\u53cd\u4f8b\uff0c\u56e0\u4e3a\u53cd\u4f8b\u672c\u6765\u5c31\u4e0d\u5b58\u5728\u3002\n\n* \u4e5f\u8bf7\u4e0d\u8981\u8bf4\u8fd9\u4e9b\u8bc1\u4f2a\u8fdd\u80cc\u5b9e\u9645\u2014\u2014\u89e3\u672c\u6765\u5c31\u662f\u4e00\u5b9a\u5b58\u5728\u7684\uff0c\u8fd9\u91cc\u53ea\u80fd\u4ece\u8fd9\u4e9b\u4f2a\u8bc1\u7684\u9519\u8bef\u5047\u8bbe/\u8fc7\u5f31\u7684\u6761\u4ef6\u51fa\u53d1\u5728\u5f62\u5f0f\u903b\u8f91\u548c\u6570\u5b66\u4e0a\u8bc1\u4f2a\u5b83\u4eec\u3002\n\n* \u987a\u7740 @ybwowen \u7684\u9898\u89e3\u4e2d\u7684\u8bc1\u660e\u8865\u4e00\u4e2a\u770b\u4f3c\u5f88\u5bf9\u7684\u63a8\u5bfc\u8fc7\u7a0b\uff1a\n\t* \u201c\u6bcf\u4e2a\u8282\u70b9\u6700\u591a\u53ea\u4f1a\u6709 $sq-2$ \u4e2a\u975e\u6811\u8fb9\uff0c\u6545\u6bcf\u53d6\u4e00\u4e2a\u70b9\uff0c\u53ea\u4f1a\u4f7f\u70b9\u6570\u51cf\u5c11 $\\lceil\\sqrt{n}\\rceil-1\\leqslant \\lfloor\\sqrt{n}\\rfloor$ \u4e2a\uff0c\u4ece\u800c\u81f3\u5c11\u80fd\u53d6 $\\lceil\\sqrt{n}\\rceil$ \u6b21\uff0c\u5373\u5b58\u5728\u4e00\u4e2a $\\lceil\\sqrt{n}\\rceil$ \u7684\u72ec\u7acb\u96c6\u3002\u201d\n    \n\t* \u9519\u8bef\u3002\u88ab\u53d6\u8d70\u7684\u70b9\u53ef\u80fd\u6709\u513f\u5b50\u8282\u70b9\u4e0e\u4e4b\u76f8\u8fde\uff0c\u4e14\u4e00\u5b9a\u6709\u7236\u8282\u70b9\u4e0e\u4e4b\u76f8\u8fde\uff0c\u53d6\u4e00\u6b21\u7684\u70b9\u6570\u51cf\u5c11\u91cf\u4e0b\u754c\u4e3a $\\lceil\\sqrt{n}\\rceil$\uff0c\u4e0a\u754c\u4e3a $n$\u3002\n    \n   * \u987a\u4fbf\u4e00\u63d0\uff0c\uff08\u6211\u8ba4\u4e3a\uff09\u6bcf\u4e2a\u70b9\u6700\u591a\u6709 $sq-2$ \u6761\u975e\u6811\u8fb9\u8fd9\u4e00\u4e2d\u95f4\u7ed3\u8bba\u4e0d\u591f\u5f3a\uff0c\u63a8\u4e0d\u51fa\u7ed3\u8bba\uff08\u6bd5\u7adf\u6211\u662f\u628a\u5b83\u5361\u5230\u4e86 $sq-3$ \u624d\u5f97\u8bc1\u7684\uff0c\u4ed6\u7684\u8fd9\u4e2a\u4e2d\u95f4\u7ed3\u8bba\u4e0d\u591f specific\uff0c\u5728\u653e\u5c11\u91cf\u7684\u4e92\u4e0d\u76f8\u4ea4\u7684\u91cd\u8fb9\u7684\u56fe\u4e0b\u4f9d\u7136\u6210\u7acb...\uff09\u3002\n   \n   * \u5982\u679c\u6709\u4ec0\u4e48\u80fd\u4ece $sq-2$ \u76f4\u63a5\u63a8\u51fa\u7ed3\u8bba\u7684\u65b9\u5f0f\u8bf7\u8e39\u6211\u4e00\u4e0b\uff0c\u5c06\u6211\u62db\u9b42\u8fc7\u6765~~\u819c\u62dc~~\u5b66\u4e60\u3002\n\n* \u987a\u7740 @QwQcOrZ \u7684\u9898\u89e3\u7684\u8bc1\u660e\uff1a\n\t* \u201c\u4f46\u662f\u6839\u636e\u9e3d\u5de2\u539f\u7406...\u201d\uff08\u8bf7\u81ea\u884c\u53c2\u9605\u4e0a\u4e0b\u6587\u3002\u7279\u522b\u5730\uff0c\u56e0\u4e3a\u6211\u5b9e\u5728\u4e0d\u7406\u89e3\u201c\u72ec\u7acb\u96c6\u975e\u6cd5\u201d\u662f\u6307\u72ec\u7acb\u96c6\u4e0d\u72ec\u7acb\u8fd8\u662f\u6307\u72ec\u7acb\u96c6\u4e0d\u591f\u5927\uff0c\u6240\u4ee5\u6211\u5e08\u5fc3\u81ea\u7528\u5730\u4ece\u4e0a\u4e0b\u6587\u8ba4\u4e3a\u662f\u4e0d\u591f\u5927\uff09\n\t\n   * \u6211\u8ba4\u4e3a\u8fd9\u4e2a\u662f\u4f2a\u8bc1\u3002\u7531\uff08\u5bf9\u5e94\u9898\u89e3\u7684\uff09\u4e0a\u6587\uff0c\u6211\u4eec\u6b64\u65f6\u6784\u9020\u51fa\u4e86\u4e00\u4e2a $< \\lceil\\sqrt{n}\\rceil$ \u7684\u72ec\u7acb\u96c6\uff0c\u8be5\u72ec\u7acb\u96c6\u4e0d\u80fd\u8fdb\u4e00\u6b65\u6269\u5927\uff0c\u4f46\u6211\u8ba4\u4e3a\u8fd9\u4e0d\u80fd\u8bf4\u660e\u8fd9\u4e2a\u72ec\u7acb\u96c6\u4e2d\u4e00\u5b9a\u6709\u81f3\u5c11\u4e00\u4e2a\u70b9\u7684\u5ea6\u6570 $d\\geqslant \\lceil\\sqrt{n}\\rceil-1$\u3002\n   \n   * \u8fd9\u91cc\u9e3d\u5de2\u539f\u7406\u7684\u8fd0\u7528\uff0c\u81f3\u5c11\u5728\u6211\u770b\u6765\u662f\u6307\uff1a\n       * \u5982\u679c\u72ec\u7acb\u96c6\u4e2d\u7684\u6240\u6709 $sq-1$ \u4e2a\u70b9\u90fd\u6ee1\u8db3 $d<sq-1$\uff08\u7528\u4e00\u4e0b\u6211\u7684\u7b26\u53f7\u4e0d\u597d\u610f\u601d\uff09\uff0c\u5219\u6bcf\u4e2a\u70b9\u8fde\u540c\u4ed6\u81ea\u5df1\u548c\u5ea6\u6570\u5360\u7528\u4e86\u81f3\u591a $sq$ \u4e2a\u70b9\uff0c\u4ece\u800c $\\geqslant \\lceil\\sqrt{n}\\rceil$ \u7684\u72ec\u7acb\u96c6\u4e00\u5b9a\u5b58\u5728\uff0c\u56e0\u4e3a $(sq-1)\\times sq<n $\u3002\n       \n     \t* \u4f46\u8fd9\u663e\u7136\u4e0d\u6210\u7acb\uff0c\u8b6c\u5982\u6211\u4eec\u53ef\u4ee5\u53d6 $n=5$\uff0c\u4ece\u800c $sq=3$\u3002\n        \n       * \u5982\u679c\u6ca1\u6709\u53d6\u6574\u7b26\u53f7\u5c31\u6210\u7acb\u3002\n   \n   * \u53ef\u80fd\u663e\u5f97\u6709\u70b9\u94bb\u725b\u89d2\u5c16\uff0c\u6bd5\u7adf\u5bf9\u5e94\u7ed3\u8bba\u5b9e\u9645\u4e0a\u5728\u9898\u8bbe\u4e0b\u6210\u7acb\uff0c\u4f46\u5bf9\u5e94\u9898\u89e3\u4f3c\u4e4e\u3001\u5e76\u6ca1\u6709\u63f4\u5f15\u5bf9\u5e94\u9898\u8bbe\u4f5c\u4e3a\u6761\u4ef6\u6765\u8bf4\u660e\u8fd9\u91cc\u4e00\u5b9a\u6210\u7acb\uff08\u5176\u5b9e\u6211\u4e5f\u4e0d\u77e5\u9053\u600e\u4e48\u4ece\u9898\u8bbe\u51fa\u53d1\u8bc1\u660e\u8fd9\u91cc\u9e3d\u5de2\u539f\u7406\u7528\u5bf9\u4e86...\uff09\u3002\n   \n* @MikukuOvO\uff1a\n\t* \u6211\u8ba4\u4e3a\u5176\u4e2d\u7684 $\\sqrt{n}$ \u5e94\u4e3a $\\lceil\\sqrt{n}\\rceil$\u3002\u3002\n    \n   * \u4ece\u800c\u8fd9\u548c ybwowen \u7684\u601d\u8def\u540c\u6784\uff0c\u4e5f\u662f\u53ea\u5361\u5230\u4e86 $sq-2$\u3002\n       * \u5176\u4e2d\u7684\u201c\u7236\u8fb9\u201d\u6ca1\u6709\u5b9a\u4e49\uff0c\u6211\u4e0d\u77e5\u9053\u7b97\u4e0d\u7b97\u6811\u4e0a\u7236\u5b50\u4e4b\u95f4\u7684\u8fb9\uff0c\u5982\u679c\u7b97\u4e0a\u4ed6\u5c31\u5361\u5bf9\u4e86\u3002\uff08$sq-2$ \u6761\u8fb9\u5c31\u662f\u4e00\u6761\u4e0e\u7236\u4eb2\u7684\u548c $sq-3$ \u6761\u975e\u6811\u8fd4\u7956\u8fb9\uff09\n       * \u4e0d\u8fc7\u5c31\u7b97\u7b97\u4e86\u4ed6\u8fd8\u662f\u9519\u7684\uff0c\u770b\u4e0b\u4e00\u6761\u3002\n   \n   * \u800c\u4e14\u903b\u8f91\u9519\u8bef\uff0c\u7531\u201c\u6709 $\\sqrt{n}-2$ \u6761\u7236\u8fb9\u201d\u63a8\u51fa\u4e86\u201c\u5982\u679c\u9009\u62e9\u4e00\u4e2a\u70b9\uff0c\u6700\u591a\u4f1a\u6709 $\\sqrt{n}-2$ \u4e2a\u70b9\u65e0\u6cd5\u9009\u62e9\u201d\u3002\u6ca1\u6709\u8003\u8651\u8fd9\u4e2a\u70b9\u672c\u8eab\u3002\n\n* @Clever_Jimmy\uff1a\n\t* \u524d\u9762\u57fa\u672c\u6ca1\u6709\u5728\u8bc1\u660e\u3002\u770b\u5173\u952e\u7684\u201c\u4e71\u53e3\u80e1\u201d\u524d\u9762\u3002\n    \n   * \u56e0\u4e3a\u627e\u4e0d\u5230\u6ee1\u8db3\u9898\u610f\u7684\u73af\uff0c\u7b49\u4ef7\u4e8e\u6bcf\u4e2a\u70b9\u6700\u591a\u8fde\u5411 $q-1$ \u4e2a\u70b9\uff0c\u5219\u6700\u540e\u4e00\u5b9a\u4f1a\u6709\u5927\u4e8e\u7b49\u4e8e $q$ \u4e2a\u70b9\uff08\u4ed6\u7684 $q$ \u5c31\u662f\u6211\u7684 $sq$\uff09\u3002\n   \n   * \u8fd9\u4e2a\u201c\u7b49\u4ef7\u201d\u662f\u9519\u7684\uff0c\u5bf9\u8fd9\u4e2a\u6211\u751a\u81f3\u80fd\u4e3e\u53cd\u4f8b\uff1a\u83ca\u82b1\u56fe\u3002\n\n* @ZCPB\uff1a\n\t* \u9996\u5148\u8fd9\u548c ybwowen \u7684\u601d\u8def\u540c\u6784\uff0c\u4e5f\u53ea\u5361\u5230\u4e86 $sq-2$\u3002\n    \n   * \u7136\u540e\u5361\u9519\u4e86\uff01\n   \n   * \u201c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u6700\u591a\u4e0e\u5b83 $\\left\\lceil\\sqrt n\\right\\rceil-2$ \u4e2a\u7956\u5148\u8fde\u8fb9\uff0c\u6240\u4ee5\uff0c\u5f53\u5b83\u88ab\u9009\u62e9\u65f6\uff0c\u6700\u591a\u6709 $\\left\\lceil\\sqrt n\\right\\rceil-2$ \u4e2a\u70b9\u4e0d\u80fd\u9009\u3002\u201d\n   \n   * \u8fd9\u4e2a\u6211\u4eec\u5728 MikukuOvO \u90a3\u91cc\u89c1\u8fc7\u4e86\uff0c\u53c8\u662f\u6ca1\u6709\u8003\u8651\u672c\u8eab\u3002\n   \n   * \u66f4\u4e0d\u8981\u63d0\u513f\u5b50\u7684\u95ee\u9898...\u6211\u4eec\u59d1\u4e14\u8ba4\u4e3a\u8fd9\u91cc\u7684\u610f\u601d\u662f\u4e00\u76f4\u5728\u62ff\u5f53\u524d\u53f6\u8282\u70b9\u5427\uff0c\u90a3\u5c31\u6ca1\u6709\u513f\u5b50\u4e86\u3002\n   \n   * \u76f8\u5bf9\u7684\uff0cybwowen \u7684\u9898\u89e3\u91cc\u628a\u8fd9\u4e00\u6b65\u8df3\u8fc7\u4e86\uff0c\u6240\u4ee5\u6211\u53ea\u80fd\u5047\u8bbe\u4ed6\u662f\u5bf9\u7684\u3002\n   \n* @\u4e07\u5f18\uff1a\n\t* \u548c ZCPB \u9519\u7684\u4e00\u6a21\u4e00\u6837\uff0c\u9996\u5148\u662f\u548c ybwowen \u540c\u6784\u6ca1\u6709\u5361\u5230 $sq-3$ \u6761\u8fd4\u7956\u8fb9\u3002\n    \n   * \u5f53\u7136\uff0c\u5982\u679c\u7236\u5411\u8fb9\u5305\u62ec\u6811\u4e0a\u90a3\u6761\u7236\u5b50\u8fb9\uff0c\u90a3\u4e48\u5361\u5bf9\u4e86\u3002\n   \n   * \u201c\u6bcf\u4e2a\u70b9\u81f3\u591a\u6709 $lim-2$ \u6761\u7236\u5411\u8fb9 $\\rightarrow$ \u9009\u62e9\u4e00\u4e2a\u70b9\u81f3\u591a\u5bfc\u81f4 $lim-2$ \u4e2a\u70b9\u65e0\u6cd5\u9009\u62e9\u201d\n   \n   * \u597d\u5427\uff0c\u8fd9\u53c8\u662f\u4e2a\u6ca1\u8003\u8651\u90a3\u4e2a\u70b9\u672c\u8eab\u7684\u3002\n   \n* \u4e3a\u4ec0\u4e48\u6ca1\u6709 huayucaiji\uff1f...\u5bf9\u65b9\u8ba4\u4e3a\u8fd9\u662f\u5c0f\u5b66\u5965\u6570\u3002\n\n* \u5982\u679c\u5192\u72af\u4e86\uff0c\u81f4\u6b49\u3002",
        "postTime": 1662709640,
        "uid": 601360,
        "name": "wei_xin",
        "ccfLevel": 7,
        "title": "CF1325F Ehab's Last Theorem \u9898\u89e3"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u4e2a\u4e0d\u9700\u8981 dfs \u751f\u6210\u6811\u7684\u65b0\u505a\u6cd5\u3002\n\n\u8003\u8651\u6784\u9020\u72ec\u7acb\u96c6\uff0c\u6bcf\u6b21\u9009\u51fa\u4e00\u4e2a\u5ea6\u6570\u6700\u5c0f\u7684\u70b9\uff08\u8bb0\u5176\u5ea6\u6570\u4e3a $d$\uff09\uff0c\u5c06\u8fd9\u4e2a\u70b9\u52a0\u5165\u72ec\u7acb\u96c6\u4e2d\uff0c\u5220\u53bb\u8fd9\u4e2a\u70b9\u4ee5\u53ca\u4e0e\u8fd9\u4e2a\u70b9\u76f8\u90bb\u7684\u70b9\uff0c\u91cd\u590d\u6b64\u8fc7\u7a0b\u76f4\u81f3\u56fe\u4e3a\u7a7a\u3002\n\n\u663e\u7136\u8fd9\u6837\u6784\u9020\u51fa\u7684\u72ec\u7acb\u96c6\u7684\u5927\u5c0f\u53ef\u80fd\u5c0f\u4e8e $\\lceil\\sqrt n\\rceil$\u3002\n\n\u4f46\u662f\u6839\u636e\u9e3d\u5de2\u539f\u7406\uff0c\u72ec\u7acb\u96c6\u975e\u6cd5\u65f6\u9009\u51fa\u7684\u70b9\u4e2d\u4e00\u5b9a\u6709\u81f3\u5c11\u4e00\u4e2a\u7684 $d\\geq\\lceil\\sqrt n\\rceil-1$\uff0c\u5426\u5219\u53ef\u4ee5\u6784\u9020\u51fa\u5408\u6cd5\u7684\u72ec\u7acb\u96c6\u3002\n\n\u90a3\u4e48\u5728 $d\\geq\\lceil\\sqrt n\\rceil-1$ \u65f6\uff0c\u5269\u4e0b\u7684\u56fe\u4e2d\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570\u90fd $\\geq\\lceil\\sqrt n\\rceil-1$\u3002\n\n\u6709\u5f15\u7406\uff1a\u4e00\u5f20 $n$ \u4e2a\u70b9\u7684\u65e0\u5411\u7b80\u5355\u56fe\uff0c\u82e5\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570\u90fd\u4e0d\u5c0f\u4e8e $k-1$\uff0c\u90a3\u4e48\u8fd9\u5f20\u56fe\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a\u957f\u5ea6\u4e0d\u5c0f\u4e8e $k$ \u7684\u73af\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u6267\u884c\u6784\u9020\u72ec\u7acb\u96c6\u7684\u8fc7\u7a0b\u4e2d\uff0c\u82e5\u5f53\u524d $d\\geq\\lceil\\sqrt n\\rceil-1$\uff0c\u5219\u53ef\u4ee5\u7528\u5269\u4e0b\u7684\u56fe\u6784\u9020\u51fa\u4e00\u4e2a\u5408\u6cd5\u7684\u73af\uff0c\u5426\u5219\u4e00\u5b9a\u53ef\u4ee5\u6784\u9020\u51fa\u4e00\u4e2a\u5408\u6cd5\u7684\u72ec\u7acb\u96c6\u3002\n\n\u90a3\u4e48\u5269\u4e0b\u7684\u95ee\u9898\u5c31\u662f\u5982\u4f55\u6784\u9020\u4e00\u4e2a\u5408\u6cd5\u7684\u73af\uff0c\u5982\u679c\u5b58\u5728\u6784\u9020\u65b9\u6cd5\u90a3\u4e48\u663e\u7136\u5f15\u7406\u4e5f\u5f97\u5230\u4e86\u8bc1\u660e\u3002\n\n\u8003\u8651\u4ece\u56fe\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u70b9\u5f00\u59cb\u904d\u5386\uff0c\u6bcf\u6b21\u8d70\u5411\u4e00\u4e2a\u76f8\u90bb\u7684\u6ca1\u6709\u904d\u5386\u8fc7\u7684\u70b9\uff0c\u76f4\u5230\u5f53\u524d\u70b9\u6bcf\u4e2a\u76f8\u90bb\u7684\u70b9\u90fd\u88ab\u904d\u5386\u4e3a\u6b62\u3002\n\n\u8fd9\u6837\u53ef\u4ee5\u62c9\u51fa\u6765\u4e00\u6761\u94fe\uff0c\u663e\u7136\u6700\u540e\u4e00\u4e2a\u70b9\u6240\u6709\u76f8\u90bb\u7684\u70b9\u90fd\u5728\u94fe\u4e2d\u3002\n\n\u8bb0\u94fe\u4e0a\u6700\u540e\u4e00\u4e2a\u70b9\u4e3a $u$\uff0c$u$ \u76f8\u90bb\u70b9\u4e2d\u79bb\u5b83\u94fe\u4e0a\u8ddd\u79bb\u6700\u8fdc\u7684\u70b9\u4e3a $v$\u3002\n\n\u7531\u4e8e\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570\u90fd\u4e0d\u5c0f\u4e8e $\\lceil\\sqrt n\\rceil-1$\uff0c\u800c\u4e14\u56fe\u4e2d\u6ca1\u6709\u91cd\u8fb9\uff0c\u6240\u4ee5 $u$ \u5230 $v$ \u7684\u8fd9\u6bb5\u94fe\u4e0a\u7684\u70b9\u6570\u663e\u7136\u81f3\u5c11\u6709 $\\lceil\\sqrt n\\rceil$ \u4e2a\u3002\n\n\u90a3\u4e48\u76f4\u63a5\u628a\u8fd9\u6bb5\u94fe\u4e0a\u7684\u70b9\u62a0\u51fa\u6765\u7ec4\u6210\u7684\u73af\u5c31\u80fd\u5f97\u5230\u4e00\u4e2a\u5408\u6cd5\u7684\u73af\u3002\n\n$\\text{Code Below}$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e5+5;\n\nint read()\n{\n\tint s=0;\n\tchar c=getchar(),lc='+';\n\twhile (c<'0'||'9'<c) lc=c,c=getchar();\n\twhile ('0'<=c&&c<='9') s=s*10+c-'0',c=getchar();\n\treturn lc=='-'?-s:s;\n}\nvoid write(int x)\n{\n\tif (x<0) putchar('-'),x=-x;\n\tif (x<10) putchar(x+'0');\n\telse write(x/10),putchar(x%10+'0');\n}\nvoid print(int x,char c='\\n')\n{\n\twrite(x);\n\tputchar(c);\n}\nvector<int>e[N],a;\nint siz[N],id[N],cnt=0,k;\nbool vis[N];\npriority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>q;\nvoid dfs(int now)\n{\n\tvis[now]=1;\n\tid[now]=++cnt;\n\ta.push_back(now);\n\tfor (int to:e[now])\n\tif (!vis[to]) return dfs(to);\n\telse if (id[to]&&cnt-id[to]+1>=k) return;\n}\nvoid solve(int n)\n{\n\tfor (int i=1;i<=n;i++) if (!vis[i]){dfs(i);break;}\n\tint mn=n,flag=0;\n\tfor (int to:e[a.back()]) if (id[to]) mn=min(mn,id[to]);\n\tvector<int>ans;\n\tfor (int i:a)\n\t{\n\t\tif (id[i]==mn) flag=1;\n\t\tif (flag) ans.push_back(i);\n\t}\n\tputs(\"2\");\n\tprint(ans.size());\n\tfor (int i:ans) print(i,' ');\n}\n\nsigned main(signed bangumi,char *ss1672[])\n{\n\t(void)bangumi,(void)ss1672;\n\tint n=read(),m=read(); k=ceil(sqrt(n));\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tint u=read(),v=read();\n\t\te[u].push_back(v);\n\t\te[v].push_back(u);\n\t\tsiz[u]++,siz[v]++;\n\t}\n\tvector<int>ans;\n\tfor (int i=1;i<=n;i++) q.push(make_pair(siz[i],i));\n\twhile ((int)ans.size()<k)\n\t{\n\t\tint now=q.top().second; q.pop();\n\t\tif (vis[now]) continue;\n\t\tif (siz[now]>=k-1) return solve(n),0;\n\t\tvis[now]=1;\n\t\tans.push_back(now);\n\t\tfor (int to:e[now])\n\t\tif (!vis[to])\n\t\t{\n\t\t\tvis[to]=1;\n\t\t\tfor (int i:e[to]) if (!vis[i]) q.push(make_pair(--siz[i],i));\n\t\t}\n\t}\n\tputs(\"1\");\n\tfor (int i:ans) print(i,' ');\n\t\n\treturn 0;\n}\n```\n\n\n\n",
        "postTime": 1634208015,
        "uid": 61120,
        "name": "QwQcOrZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1325F \u3010Ehab's Last Theorem\u3011"
    },
    {
        "content": "\u8fd9\u9898\u662f\u4e00\u9053\u7ec3\u4e60dfs tree\u7684\u597d\u9898\u76ee\u3002\n\n\u5982\u679c\u4f60\u4e0d\u719f\u6089dfs tree\u7684\u8bdd\uff0c\u5efa\u8bae\u770b\u4e00\u4e0bCF\u4e0a\u7684[\u8fd9\u7bc7\u535a\u5ba2](https://codeforces.ml/blog/entry/68138)\uff1a\n\n\u8fd9\u91cc\u6211\u7a0d\u5fae\u63d0\u4e00\u4e0b\n\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e00\u904ddfs\u6765\u5bfb\u627e\u8fd9\u4e2a\u56fe\u7684\u4e00\u9897\u751f\u6210\u6811\u3002\u8fd9\u65f6\uff0c\u6240\u6709\u8fb9\u90fd\u53ef\u4ee5\u88ab\u5206\u4e3a**\u6811\u8fb9**\u548c**\u975e\u6811\u8fb9**\u3002 \n\n![](https://cdn.luogu.com.cn/upload/image_hosting/z2vhimvq.png)\n\n\u5728\u8fd9\u5f20\u56fe\u91cc\u9762\uff0c\u7c97\u7684\u8fb9\u5c31\u662f\u6811\u8fb9\uff0c\u7ec6\u7684\u8fb9\u5c31\u662f\u975e\u6811\u8fb9\u3002\n\n\u8fd9\u91cc\u6211\u4eec\u5c31\u8981\u7528\u5230dfs\u6811\u4e00\u4e2a\u53ca\u5176\u91cd\u8981\u7684\u6027\u8d28\uff1a\n\n> **\u4e00\u6761\u975e\u6811\u8fb9\u8fde\u63a5\u4e86\u4e00\u4e2a\u70b9\u548c\u5b83\u5728\u751f\u6210\u6811\u4e2d\u7684\u4e00\u4e2a\u540e\u4ee3**\n\n\u8bc1\u660e\uff1a\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u6761\u8fb9$(u,v)$\uff0c\u5e76\u4e14\u73b0\u5728\u6211\u4eecdfs\u5230\u4e86$u$\u3002\n\n1.\u5982\u679c$v$\u6ca1\u6709\u88ab\u8bbf\u95ee\uff0c\u90a3\u4e48$(u,v)$\u5c31\u662f\u4e00\u6761\u6811\u8fb9\n\n2.\u5982\u679c$v$\u5df2\u7ecf\u88ab\u8bbf\u95ee\u4e86\uff0c\u5c31\u8bf4\u660e\u8981\u4e48$v$\u662f$u$\u7684\u7956\u5148\uff0c\u8981\u4e48$v$\u5728$u$\u7684\u4e00\u4e2a\u513f\u5b50\u7684\u4e00\u4e2a\u5b50\u6811\u4e2d\uff08\u56e0\u4e3a$v$\u5df2\u7ecf\u88ab\u8bbf\u95ee\u4e86\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4$v$\u662f$u$\u7684\u540e\u4ee3\u3002\n\n\u8bc1\u6bd5\u3002\n\n\u6240\u4ee5\u8fd9\u9898\u6211\u4eec\u5c31\u53ef\u4ee5\u8fd9\u4e48\u5e72\uff1a\n\n\u4ee4$sq=\\lceil \\sqrt{n}\\rceil$\n\n\u6211\u4eec\u5148\u627e\u5230\u4e00\u4e2adfs tree\uff0c\u6807\u8bb0\u8282\u70b9\u7684\u6df1\u5ea6\u3002\u5982\u679c\u4e00\u6761\u975e\u6811\u8fb9\u8fde\u63a5\u7684\u4e24\u4e2a\u70b9\u7684\u6df1\u5ea6\u7684\u5dee\u5927\u4e8e\u7b49\u4e8e$sq-1$\uff0c\u90a3\u4e48\u6211\u4eec\u5df2\u7ecf\u627e\u5230\u4e00\u4e2a\u73af\u4e86\uff0c\u5c31\u8f93\u51fa\u5b83\u3002\n\n\u5982\u679c\u6240\u6709\u7684\u975e\u6811\u8fb9\u90fd\u4e0d\u6ee1\u8db3\u4e0a\u4e2a\u6761\u4ef6\u7684\u8bdd\uff0c\u90a3\u4e48\u6bcf\u4e2a\u8282\u70b9\u6700\u591a\u53ea\u4f1a\u6709$sq-2$\u4e2a\u975e\u6811\u8fb9\uff08\u56e0\u4e3a\u5982\u679c\u6709$sq-1$\u4e2a\u7684\u8bdd\uff0c\u6839\u636e\u6211\u4eec\u521a\u521a\u8bc1\u660e\u7684\u7ed3\u8bba\uff0c\u4e24\u70b9\u4e4b\u95f4\u6df1\u5ea6\u5dee\u81f3\u5c11\u4e3a$sq-1$\uff09\uff0c\u4e8e\u662f\u6211\u4eec\u80af\u5b9a\u80fd\u627e\u5230\u4e00\u4e2a\u542b\u6709$sq$\u4e2a\u8282\u70b9\u7684\u70b9\u6700\u5927\u72ec\u7acb\u96c6\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u4ee3\u7801\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4e0d\u5fc5dfs\u5b8c\u518d\u53bb\u627e\u975e\u6811\u8fb9\uff0c\u6211\u4eec\u53ef\u4ee5\u8fb9dfs\u7684\u65f6\u5019\u5c31\u53bb\u627e\u975e\u6811\u8fb9\uff0c\u8fd9\u6837\u65b9\u4fbf\u8f93\u51fa\u3002\u8be6\u60c5\u89c1\u4ee3\u7801\uff08~~\u5343\u4e07\u4e0d\u8981\u50cf\u6211\u4e00\u6837\u5f00\u5c0f\u7a7a\u95f4\u8c03\u597d\u4e45~~\uff09\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=2e5+5;\nint n,m;\nnamespace Graph{\n\tstruct Node{\n\t\tint from;\n\t\tint to;\n\t\tint next;\n\t}edge[maxn<<1]; \n\tint head[maxn],cnt=1;\n\tinline void add(int x,int y){\n\t\tedge[++cnt].next=head[x];\n\t\tedge[cnt].from=x;\n\t\tedge[cnt].to=y;\n\t\thead[x]=cnt;\n\t}\n}\nusing namespace Graph;\nint v[maxn];\nint tag[maxn];\nint dep[maxn];\nint sq;\nvector<int>ans;\nvector<int>vec;\ninline void dfs(int x){\n\tvec.push_back(x); \n\tdep[x]=vec.size();\n\tfor(int i=head[x];i!=0;i=edge[i].next){\n\t\tint k=edge[i].to;\n\t\tif(!dep[k]) dfs(k);\n\t\telse if(dep[x]-dep[k]>=sq-1){\n\t\t\tprintf(\"2\\n\");\n\t\t\tprintf(\"%d\\n\",dep[x]-dep[k]+1);\n\t\t\tfor(int i=dep[k]-1;i<dep[x];i++) printf(\"%d \",vec[i]);\n\t\t\tprintf(\"\\n\"); exit(0);\n\t\t}\n\t}\n\tif(!tag[x]){\n\t\tans.push_back(x);\n\t\tfor(int i=head[x];i!=0;i=edge[i].next){\n\t\t\tint k=edge[i].to;\n\t\t\ttag[k]=1;\n\t\t}\n\t} \n\tvec.pop_back();\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++){\n\t\tint x,y; scanf(\"%d%d\",&x,&y);\n\t\tadd(x,y); add(y,x);\n\t}\n\tsq=sqrt(n-1)+1;\n\tdfs(1);\n\tprintf(\"1\\n\");\n\tfor(int i=0;i<sq;i++) printf(\"%d \",ans[i]);\n\tprintf(\"\\n\"); \n\treturn 0;\n}\n```\n",
        "postTime": 1584253928,
        "uid": 54066,
        "name": "ybwowen",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1325F \u3010Ehab's Last Theorem\u3011"
    },
    {
        "content": "\u9996\u5148\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ea\u8981$dfs$\u51fa\u4e00\u68f5\u6811\uff0c\u7136\u540e\u5224\u65ad\u662f\u5426\u5b58\u5728\u4e00\u6761\u975e\u6811\u8fb9\u8fde\u63a5\u7684\u4e24\u4e2a\u70b9\u6df1\u5ea6\u5dee$\\ge \\sqrt{n}-1$\u5373\u53ef\u3002\n\n\u8fd9\u91cc\u5c31\u6709\u4e00\u4e2a\u6709\u8da3\u7684\u4e8b\u60c5\uff0c\u5982\u679c\u627e\u4e0d\u5230\u6ee1\u8db3\u7b2c\u4e00\u4e2a\u95ee\u9898\u7684\u73af\uff0c\u90a3\u4e48\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a$\\ge \\sqrt{n}$\u7684\u72ec\u7acb\u70b9\u96c6\u3002\n\n\u8003\u8651\u6ca1\u6709\u91cd\u8fb9\uff0c\u7531\u4e8e\u4e0d\u5b58\u5728\u4e00\u6761\u975e\u6811\u8fb9\u8fde\u63a5\u7684\u4e24\u4e2a\u70b9\u6df1\u5ea6\u5dee$\\ge \\sqrt{n}-1$\uff0c\u90a3\u4e48\u4e00\u4e2a\u70b9\u81f3\u591a\u6709$\\sqrt{n}-2$\u6761\u7236\u8fb9\uff0c\u4e5f\u5c31\u662f\u5982\u679c\u9009\u62e9\u4e00\u4e2a\u70b9\uff0c\u6700\u591a\u4f1a\u6709$\\sqrt{n}-2$\u4e2a\u70b9\u65e0\u6cd5\u9009\u62e9\uff0c\u4e0d\u96be\u5f97\u5230\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a$\\ge \\sqrt{n}$\u7684\u72ec\u7acb\u70b9\u96c6\u3002\n\n\u5173\u4e8e\u627e\u72ec\u7acb\u70b9\u96c6\u6211\u4eec\u67d3\u4e2a\u8272\u5c31\u597d\u4e86\u3002\n\n[$code$](https://pastebin.com/w1wGKTJ9)",
        "postTime": 1584948259,
        "uid": 208081,
        "name": "MikukuOvO",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1325F \u3010Ehab's Last Theorem\u3011"
    },
    {
        "content": "#### F. Ehab's Last Theorem [\u9898\u76ee\u94fe\u63a5](https://codeforces.ml/contest/1325/problem/F)\n\n\u4e0d\u59a8\u8bbe $q = \\lceil\\sqrt{n}\\rceil$\u3002\n\n\u9996\u5148\u8dd1\u51fa\u4efb\u610f\u4e00\u4e2a dfs \u6811\uff0c\u5bf9\u4e8e\u6811\u4e2d\u7684\u67d0\u4e2a\u70b9 $u$\uff1a\n\n\u5982\u679c\u5b83\u6709\u5927\u4e8e\u7b49\u4e8e $q$ \u4e2a\u524d\u5411\u8fb9\uff0c\u90a3\u4e48\u5c31 **\u4e00\u5b9a** \u80fd\u627e\u5230\u4e00\u4e2a\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e $q$ \u7684\u73af\u3002\n\n\u5426\u5219\uff0c\u5c06\u5b83\u653e\u5230\u6700\u5927\u72ec\u7acb\u96c6\u4e2d\uff0c\u5e76\u5c06\u5b83\u7684\u6240\u6709\u90bb\u70b9\u6253\u4e0a\u6807\u8bb0\uff08\u8868\u793a\u4e0d\u80fd\u53d6\uff09\u3002\n\n\u5982\u679c\u80fd\u6ee1\u8db3\u4efb\u52a1 $2$\uff0c\u627e\u5230\u4e86\u65b9\u6848\u8981\u76f4\u63a5 `exit(0)`\uff0c\u5426\u5219\u4f1a TLE\u3002\n\n\u6700\u540e\u6ca1\u6709\u88ab\u6253\u6807\u8bb0\u7684\u70b9\u5373\u4e3a\u6700\u5927\u72ec\u7acb\u96c6\u4e2d\u7684\u70b9\uff08\u53ea\u80fd\u8f93\u51fa **\u6070\u597d** $q$ \u4e2a\uff09\u3002\n\n\u4e3a\u4ec0\u4e48\u6ca1\u6709\u627e\u4e0d\u5230\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e $q$ \u7684\u73af\u4e00\u5b9a\u4f1a\u6709\u6700\u5927\u72ec\u7acb\u96c6\u7684\u5927\u5c0f\u5927\u4e8e\u7b49\u4e8e $q$\uff1f\n\n\u56e0\u4e3a\u627e\u4e0d\u5230\u6ee1\u8db3\u9898\u610f\u7684\u73af\uff0c\u7b49\u4ef7\u4e8e\u6bcf\u4e2a\u70b9\u6700\u591a\u8fde\u5411 $q - 1$ \u4e2a\u70b9\uff0c\u5219\u6700\u540e\u4e00\u5b9a\u4f1a\u6709\u5927\u4e8e\u7b49\u4e8e $q$ \u4e2a\u70b9\u3002\uff08\u4e71\u53e3\u80e1\uff09\n\n[code](https://codeforces.ml/contest/1325/submission/73311347)",
        "postTime": 1584269763,
        "uid": 78407,
        "name": "Clever_Jimmy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1325F \u3010Ehab's Last Theorem\u3011"
    },
    {
        "content": "\u7ecf\u5178 dfs tree \u5165\u95e8\u9898\uff0c\u4e5f\u662f\u672c\u849f\u84bb\u7b2c\u4e00\u6b21\u505a\u51fa dfs tree \u7684\u9898\u3002\n\ndfs tree \u539f\u7406\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u968f\u4fbf\u9009\u62e9\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u8fdb\u884c dfs\uff0c\u6bcf\u4e2a\u70b9\u53ea\u80fd\u7ecf\u8fc7\u4e00\u904d\uff0c\u8fd9\u6837\u7684\u8bdd\u6240\u6709\u70b9\u548c\u7ecf\u8fc7\u7684\u6240\u6709\u8fb9\u5c31\u4f1a\u6784\u6210\u4e00\u68f5\u751f\u6210\u6811\uff0c\u6211\u4eec\u628a\u8fd9\u4e9b\u8fb9\u53eb\u505a**\u6811\u8fb9**\uff0c\u5176\u5b83\u8fb9\u53eb\u505a**\u975e\u6811\u8fb9**\u3002\n\ndfs tree \u6709\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u6027\u8d28\uff0c\u90a3\u5c31\u662f\u5b83\u6ca1\u6709\u6a2a\u53c9\u8fb9\uff0c\u8fd9\u4e2a\u5927\u5bb6\u5b66 tarjan \u7684\u65f6\u5019\u4e5f\u90fd\u77e5\u9053\uff0c\u8bc1\u660e\u8fc7\u7a0b\u4e5f\u975e\u5e38\u7b80\u5355\uff0c\u5047\u5982\u6709\u6a2a\u53c9\u8fb9\u7684\u8bdd\uff0c\u4e00\u5b9a\u662f\u4e00\u4e2a\u70b9\u4e0d\u80fd\u5230\u53e6\u4e00\u4e2a\u70b9\u800c\u53e6\u4e00\u4e2a\u70b9\u80fd\u5230\uff0c\u4e0d\u7136\u7684\u8bdd\u8fd9\u4e2a\u70b9\u5c31\u53ef\u4ee5\u76f4\u63a5\u904d\u5386\u5230\u53e6\u4e00\u4e2a\u70b9\u6210\u4e3a\u524d\u5411\u8fb9\uff0c\u4f46\u662f\u56e0\u4e3a dfs tree \u5168\u662f\u65e0\u5411\u8fb9\uff0c\u6240\u4ee5\u4e0d\u5b58\u5728\u6a2a\u53c9\u8fb9\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u89e3\u8fd9\u9053\u9898\u3002\n\n\u9996\u5148\u627e\u5230\u4e00\u4e2a\u5927\u5c0f\u81f3\u5c11\u4e3a $\\left\\lceil\\sqrt n\\right\\rceil$ \u7684\u73af\u5f88\u5bb9\u6613\uff0c\u56e0\u4e3a\u975e\u6811\u8fb9\u4e00\u5b9a\u4e0d\u662f\u6a2a\u53c9\u8fb9\uff0c\u6240\u4ee5\u53ea\u8981\u627e\u5230\u4e00\u6761\u975e\u6811\u8fb9\u4f7f\u5f97\u975e\u6811\u8fb9\u8fde\u63a5\u7684\u4e24\u4e2a\u70b9\u6df1\u5ea6\u5dee\u4e0d\u5c0f\u4e8e $\\left\\lceil\\sqrt n\\right\\rceil-1$ \u5373\u53ef\u3002\n\n\u90a3\u5982\u4f55\u8bc1\u660e\u627e\u4e0d\u5230\u5c31\u4e00\u5b9a\u5b58\u5728\u5927\u5c0f\u4e3a $\\left\\lceil\\sqrt n\\right\\rceil$ \u7684\u72ec\u7acb\u96c6\u5462\uff1f\n\n\u56e0\u4e3a\u6bcf\u6761\u975e\u6811\u8fb9\u4e24\u4e2a\u70b9\u6df1\u5ea6\u5dee\u5c0f\u4e8e $\\left\\lceil\\sqrt n\\right\\rceil-1$\uff0c\u6240\u4ee5\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u6700\u591a\u4e0e\u5b83 $\\left\\lceil\\sqrt n\\right\\rceil-2$ \u4e2a\u7956\u5148\u8fde\u8fb9\uff0c\u6240\u4ee5\uff0c\u5f53\u5b83\u88ab\u9009\u62e9\u65f6\uff0c\u6700\u591a\u6709 $\\left\\lceil\\sqrt n\\right\\rceil-2$ \u4e2a\u70b9\u4e0d\u80fd\u9009\uff0c\u90a3\u4e48\u5047\u8bbe\u73b0\u5728\u9009\u62e9\u4e86 $\\left\\lceil\\sqrt n\\right\\rceil-1$ \u4e2a\u70b9\u4f5c\u4e3a\u72ec\u7acb\u96c6\uff0c\u90a3\u4e48\u8bf4\u660e\u81f3\u591a\u6709 $(\\left\\lceil\\sqrt n\\right\\rceil-1)^2$ \u4e2a\u70b9\u88ab\u9009\u62e9\u6216\u88ab\u6392\u9664\uff0c\u518d\u9009\u62e9 $1$ \u4e2a\u70b9\u5c31\u662f $(\\left\\lceil\\sqrt n\\right\\rceil^2-2\\left\\lceil\\sqrt n\\right\\rceil+2)$ \u4e2a\u70b9\u3002\u53ea\u9700\u8981\u5224\u65ad\u8fd9\u4e2a\u6570\u662f\u5426\u4e0d\u8d85\u8fc7 $n$ \u5373\u53ef\uff0c\u5f88\u663e\u7136\uff0c\u6700\u574f\u7684\u60c5\u51b5\u4e0b\uff0c$(\\left\\lceil\\sqrt n\\right\\rceil-1)^2$ \u6b63\u597d\u548c $n$ \u5dee $1$\uff08\u5f53 $n=k^2+1$ \u65f6\uff09\u3002\u518d\u52a0 $1$ \u6b63\u597d\u3002\u6240\u4ee5\u5982\u679c\u627e\u4e0d\u5230\u5c31\u4e00\u5b9a\u5b58\u5728\u5927\u5c0f\u4e3a $\\left\\lceil\\sqrt n\\right\\rceil$ \u7684\u72ec\u7acb\u96c6\u3002\n\n\u5728\u627e\u72ec\u7acb\u96c6\u7684\u65f6\u5019\uff0c\u5fc5\u987b\u4ece\u56de\u6eaf\u65f6\u5f00\u59cb\u627e\uff08~~\u5426\u5219 CF \u4e0a\u7b2c $20$ \u4e2a\u70b9\u7684\u83ca\u82b1\u56fe\u4f1a\u628a\u4f60\u5361\u5230\u6000\u7591\u4eba\u751f~~\uff0c\u521a\u624d\u8bc1\u660e\u7684\u65f6\u5019\u4e5f\u662f\u53ea\u8003\u8651\u5b83\u7684\u7956\u5148\u8282\u70b9\uff09\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n+m)$\n\n## AC code\n```cpp\n#include<cstdio>\n#include<cmath> \n#include<vector>\n#include<cstdlib>\nusing namespace std;\ntemplate<typename T> T &read(T &x){\n\tx=0;\n\tbool f=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){\n\t\tif(ch=='-'){\n\t\t\tf=1;\n\t\t}\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9'){\n\t\tx=(x<<1)+(x<<3)+(ch^48);\n\t\tch=getchar();\n\t}\n\tif(f){\n\t\tx=-x;\n\t}\n\treturn x;\n}\nvector<int> edge[100005];\nint fa[100005],dep[100005],num,cnt,sq,ans[100005];\nbool vis[100005],vis1[100005];\nvoid dfs(int x,int f){\n\tbool no=0;\n\tdep[x]=num++;\n\tfa[x]=f;\n\tvis[x]=1;\n\tfor(int i=0;i<edge[x].size();i++){\n\t\tif(!vis[edge[x][i]]){\n\t\t\tdfs(edge[x][i],x);\n\t\t}\n\t\telse{\n\t\t\tif(dep[x]-dep[edge[x][i]]>=sq-1){\n\t\t\t\tputs(\"2\");\n\t\t\t\tprintf(\"%d\\n\",dep[x]-dep[edge[x][i]]+1);\n\t\t\t\tfor(int j=x;j!=edge[x][i];j=fa[j]){\n\t\t\t\t\tprintf(\"%d \",j);\n\t\t\t\t}\n\t\t\t\tprintf(\"%d\",edge[x][i]);\n\t\t\t\texit(0);\n\t\t\t}\n\t\t}\n\t}\n\tif(!vis1[x]){\n\t\tans[++cnt]=x;\n\t\tvis1[x]=1;\n\t\tno=1;\n\t\tfor(int i=0;i<edge[x].size();i++){\n\t\t\tvis1[edge[x][i]]=1;\n\t\t}\n\t}\n\tnum--;\n}\nint main(){\n\tint n=read(n),m=read(m);\n\tsq=ceil(sqrt(n));\n\twhile(m--){\n\t\tint u=read(u),v=read(v);\n\t\tedge[u].push_back(v);\n\t\tedge[v].push_back(u); \n\t}\n\tdfs(1,0);\n\tputs(\"1\");\n\tfor(int i=1;i<=sq;i++){\n\t\tprintf(\"%d \",ans[i]);\n\t} \n\treturn 0;\n}\n```",
        "postTime": 1627023703,
        "uid": 80614,
        "name": "ZCPB",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1325F \u3010Ehab's Last Theorem\u3011"
    },
    {
        "content": "upd at 11/1 : \u611f\u8c22 @do_while_true \u6307\u51fa\u4e86\u4e00\u4e2a\u9519\u8bef\uff0c\u5df2\u4fee\u590d\u3002\n\n\u9898\u610f\uff1a\u7ed9\u4e00\u4e2a $ n $ \u4e2a\u70b9\u7684\u65e0\u5411\u56fe\uff08\u65e0\u91cd\u8fb9\u3001\u81ea\u73af\uff09\uff0c\u8981\u627e\u51fa\u5305\u542b\u4e0d\u5c11\u4e8e $ \\lceil \\sqrt n\\rceil  $ \u4e2a\u70b9\u7684\u7b80\u5355\u73af\u6216\u72ec\u7acb\u96c6\u3002  \n\n $ n\\le 10^5,m\\le 2\\times 10^5 $ \n\u6b64\u9898\u5176\u5b9e\u6697\u793a\u4e00\u4e2a\u6027\u8d28\uff1a\u5982\u679c\u65e0\u5411\u56fe\u4e2d\u4e0d\u5b58\u5728\u4e0d\u5c11\u4e8e $ \\lceil \\sqrt n\\rceil  $ \u4e2a\u70b9\u7684\u7b80\u5355\u73af\uff0c\u5219\u5fc5\u7136\u5b58\u5728\u4e0d\u5c11\u4e8e $ \\lceil \\sqrt n\\rceil  $ \u4e2a\u70b9\u7684\u72ec\u7acb\u96c6\u3002  \n\n\u8bc1\u660e\u7684\u8fc7\u7a0b\u4e5f\u5c31\u662f\u6c42\u89e3\u7684\u8fc7\u7a0b\u3002\u8bbe $ lim=\\lceil \\sqrt n\\rceil $ \n\n\u8003\u8651\u627e\u51fa\u4e00\u4e2a\u641c\u7d22\u6811\uff08\u7c7b\u4f3c`tarjan`\u7b97\u6cd5\u7684\u641c\u7d22\u6811\uff09\u3002\u539f\u56fe\u4e2d\u7684\u6bcf\u4e2a\u73af\u5fc5\u7136\u5305\u542b\u4e00\u6761\u7236\u5411\u8fb9\u3002\u5728\u8003\u8651\u70b9 $ u $ \u7684\u53ef\u8fbe\u70b9 $ v $ \u7684\u65f6\u5019,\u5982\u679c $ v $ \u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\u5c31\u8bbf\u95ee $ v $ ,\u5426\u5219\u5982\u679c $ v $ \u662f $ u $ \u7684\u7956\u5148\uff0c\u5e76\u4e14\u4ed6\u4eec\u4e4b\u95f4\u5f62\u6210\u7684\u73af\uff08\u5305\u542b\u7684\u70b9\u6570\u662f\u8ddd\u79bb+1\uff09\u4e0d\u5c11\u4e8e $ lim $ \u4e2a\u70b9\uff0c\u90a3\u4e48\u5c31\u662f\u4e00\u79cd\u53ef\u884c\u7684\u7b54\u6848\u3002\n\n\n\u63a5\u4e0b\u6765\u8bc1\u660e\u82e5\u65e0\u6cd5\u627e\u5230\uff0c\u5219\u5fc5\u7136\u5b58\u5728\u4e0d\u5c11\u4e8e $ lim $ \u4e2a\u70b9\u7684\u72ec\u7acb\u96c6\uff1a\n\n\u5f15\u7406\uff1a\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6bcf\u4e2a\u70b9\u81f3\u591a\u6709 $ lim-2 $ \u6761\u7236\u5411\u8fb9\u3002\n\n\u8bc1\u660e\uff1a\u53cd\u8bc1\u3002\u5047\u8bbe\u67d0\u4e2a\u70b9\u6709\u8d85\u8fc7 $ lim-2 $ \u6761\u7236\u5411\u8fb9\uff0c\u7531\u4e8e\u56fe\u4e2d\u65e0\u91cd\u8fb9\uff0c\u5219\u5fc5\u7136\u5f62\u6210\u4e00\u4e2a\u5927\u5c0f\u8d85\u8fc7 $ lim $ \u7684\u73af\uff0c\u4e0e\u5df2\u77e5\u77db\u76fe\u3002\u8bc1\u6bd5\u3002\n\n\u6bcf\u4e2a\u70b9\u81f3\u591a\u6709 $ lim-2 $ \u6761\u7236\u5411\u8fb9 $ \\rightarrow $ \u9009\u62e9\u4e00\u4e2a\u70b9\u81f3\u591a\u5bfc\u81f4 $ lim-2 $ \u4e2a\u70b9\u65e0\u6cd5\u9009\u62e9 $ \\rightarrow $  \u81f3\u5c11\u53ef\u4ee5\u9009\u51fa\u5927\u5c0f\u4e3a $ \\lfloor n/(lim-1)\\rfloor  $ \u7684\u72ec\u7acb\u96c6\u3002\u539f\u547d\u9898\u8bc1\u6bd5\u3002  \n\n\u65f6\u95f4\u590d\u6742\u5ea6 $ \\mathcal O(n+m) $ \n\n```cpp\n#define MAXN 200011\nstruct Edge\n{\n    ll v,nxt;\n}e[MAXN<<1|1];\nll cnt=0,last[MAXN];\nvoid adde(ll u,ll v)\n{\n    e[++cnt].v=v;\n    e[cnt].nxt=last[u],last[u]=cnt;\n}\n\nll s[MAXN],top=0,dep[MAXN],lim,tag[MAXN];\nvoid dfs(ll u,ll now_dep=1,ll fa=0)\n{\n    s[++top]=u;dep[u]=now_dep;\n    for(ll i=last[u];i;i=e[i].nxt)\n    {\n        ll v=e[i].v;\n        if(v==fa)continue;\n        if(!dep[v])dfs(v,now_dep+1,u);\n        else if(dep[u]-dep[v]+1>=lim)\n        {\n            printf(\"2\\n%lld\\n\",dep[u]-dep[v]+1);\n            for(ll p=dep[u]-dep[v]+1;p;--p)printf(\"%lld \",s[top--]);\n            exit(0);\n        }\n    }\n    if(!tag[u])\n    {\n        for (ll i = last[u]; i ; i=e[i].nxt)\n            tag[e[i].v]=1;\n    }\n    --top;\n}\nint main()\n{\n    ll n=read(),m=read();\n    lim=sqrt(n);\n    if(lim*lim<n)++lim;\n    for(ll i=1;i<=m;++i)\n    {\n        ll u=read(),v=read();\n        adde(u,v),adde(v,u);\n    }\n    dfs(1);\n    puts(\"1\");\n    ll u=1;\n    while(lim)\n    {\n        while(tag[u])++u;\n        printf(\"%lld \",u);\n        ++u;\n        --lim;\n    }\n    return 0;\n}\n```",
        "postTime": 1584348638,
        "uid": 73142,
        "name": "\u4e07\u5f18",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1325F \u3010Ehab's Last Theorem\u3011"
    },
    {
        "content": "\u6700\u540e\u4e00\u9053\u9898\uff0c\u5f88\u6709\u8d28\u91cf\uff0c\u662f\u4e00\u9053\u597d\u7684\u56fe\u8bba\u9898\u3002\n\n\u6211\u4eec\u5b9a\u4e49 $sq=\\lceil \\sqrt n\\rceil$\u3002\u6211\u4eec\u628a\u539f\u9898\u4e2d\u6837\u4f8b2\u7684\u56fe\u642c\u8fc7\u6765\u4f5c\u4e3a\u4e3e\u4f8b\uff1a\n\n![F](http://image.qingtengbc.com/2020/03/18/4d02aaca97fdd.png)\n\n\u9996\u5148\uff0c\u6211\u4eec\u968f\u4fbf\u4ee5\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u8d77\u70b9\u8fdb\u884c DFS\u3002\u6211\u4eec\u4ee51\u4f4d\u8d77\u70b9\u3002\u90a3\u4e48\uff0c\u6211\u628aDFS\u4e2d\u7ecf\u8fc7\u8fc7\u7684\u8fb9\uff08\u4e5f\u5c31\u662fDFS\u6811\uff09\uff0c\u8fb9\u6743\u4e3a $1$\uff0c\u5176\u4ed6\u4e3a $0$\u3002\u90a3\u4e48\u539f\u56fe\u5c31\u53d8\u6210\u4e86\u8fd9\u4e2a\u6837\u5b50\uff1a\n\n![F2](http://image.qingtengbc.com/2020/03/19/56979c11e7fc4.png)\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u7531 $1$ \u8fb9\u6784\u6210\u7684\u56fe\u662f\u4e00\u68f5\u6811\uff0c\u867d\u7136\u8fd9\u4e2a\u6027\u8d28\u5bf9\u6211\u4eec\u7684\u89e3\u9898\u6beb\u65e0\u7528\u5904\uff0c\u4f46\u8fd9\u4e2aDFS\u6811\u771f\u7684\u662f\u6ca1\u4ec0\u4e48\u7528\uff0c\u4e86\u89e3\u5c31\u597d\uff0c\u4ed6\u5bf9\u6211\u4eec\u7684\u601d\u8def\u542f\u53d1\u662f\u6709\u4e00\u70b9\u4f5c\u7528\u7684\u3002\u6211\u4eec\u7ee7\u7eed\u8bb2\u9898\uff0c\u73b0\u5728\uff0c\u5982\u679c\u5728DFS\u65f6\uff0c\u6211\u4eec\u4ece $u$ \u51fa\u53d1\uff0c\u627e\u5230\u4e86\u4e00\u4e2a\u70b9 $v$\uff0c\u5982\u679c\u4e4b\u524d $v$ \u5df2\u7ecf\u88ab\u641c\u5230\u8fc7\u4e86\uff0c\u800c\u4e14 $u,v$ \u7684\u5728DFS\u6811\u4e0a\u6df1\u5ea6\u5dee\u5927\u4e8e\u7b49\u4e8e $sq-1$\uff0c\u5c31\u53ef\u4ee5\u627e\u5230\u4e00\u4e2a\u957f\u5ea6\u81f3\u5c11\u4e3a $sq$ \u7684\u73af\uff0c\u5c31\u53ef\u4ee5\u56de\u7b54\u7b2c\u4e8c\u4e2a\u95ee\u9898\u4e86\u3002\u5982\u679c\u6ca1\u6709\u8fd9\u6837\u7684\u8fb9\uff0c\u90a3\u4e48\u6211\u4eec\u4e00\u5b9a\u53ef\u4ee5\u56de\u7b54\u7684\u4e00\u4e2a\u95ee\u9898\uff0c\u5177\u4f53\u8bc1\u660e\u5f88\u7b80\u5355\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\uff0c\u5e94\u8be5\u662f\u4e00\u4e2a\u5c0f\u5b66\u5965\u6570\u7684\u8bc1\u660e\u5427\u3002\n\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u5feb\u4e50\u5730\u5199\u4ee3\u7801\u5566\uff01\n\n```cpp\n//#pragma GCC optimize(\"Ofast\",\"-funroll-loops\",\"-fdelete-null-pointer-checks\")\n//#pragma GCC target(\"ssse3\",\"sse3\",\"sse2\",\"sse\",\"avx2\",\"avx\")\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\n\nint read() {\n\tchar ch=getchar();\n\tint f=1,x=0;\n\twhile(ch<'0'||ch>'9') {\n\t\tf=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9') {\n\t\tx=x*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn f*x;\n}\n\nconst int maxn=1e5+10;\n\nint n,cnt,h[maxn],d[maxn],sq,m;\nset<pair<int,int> > s;\nvector<int> ans;\nbool vis[maxn];\n\nstruct edge {\n\tint v,next;\n}e[maxn<<2];\n\nvoid addedge(int u,int v) {\n\te[++cnt].next=h[u];\n\te[cnt].v=v;\n\th[u]=cnt;\n} \n\nvoid dfs(int u,int father) {\n\td[u]=d[father]+1;\n\tans.push_back(u);\n\tfor(int i=h[u];i;i=e[i].next) {\n\t\tint v=e[i].v;\n\t\tif(!d[v]) {\n\t\t\tdfs(v,u);\n\t\t}\n\t\tif(d[u]-d[v]+1>=sq) {\n\t\t\tprintf(\"2\\n%lld\\n\",d[u]-d[v]+1);\n\t\t\tfor(int i=d[v]-1;i<d[u];i++) {\n\t\t\t\tcout<<ans[i]<<\" \";\n\t\t\t}\n\t\t\texit(0);\n\t\t}\n\t}\n\tif(!vis[u]) {\n\t\tfor(int i=h[u];i;i=e[i].next) {\n\t\t\tvis[e[i].v]=1;\n\t\t}\n\t}\n\tans.pop_back();\n} \n\nsigned main() {\n\t\n\tn=read(),m=read();\n\tsq=ceil(sqrt(n));\n\tfor(int i=1;i<=m;i++) {\n\t\tint a=read(),b=read();\n\t\taddedge(a,b);\n\t\taddedge(b,a);\n\t}\n\tdfs(1,0);\n\tcout<<1<<endl;\n\tint tot=1;\n\tfor(int i=1;tot<=sq;++i)  {\n\t\tif(!vis[i]) {\n\t\t\tprintf(\"%d \", i);\n\t\t\ttot++;\n\t\t}\n\t}\n\treturn 0;\n}\n\n```\n#### *UPD1:\u611f\u8c22 @ dezhonger \u6307\u51fa\u56fe\u7247\u9519\u8bef*",
        "postTime": 1584501955,
        "uid": 132976,
        "name": "huayucaiji",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1325F \u3010Ehab's Last Theorem\u3011"
    }
]