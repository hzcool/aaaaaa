[
    {
        "content": "\u6709\u4e00\u4e2a dp\uff1a$f(x,i,j)$ \u8868\u793a\u524d $x$ \u4f4d\uff0c\u7b2c\u4e00\u4e2a\u4e32\u5339\u914d\u5230 Trie \u6811\u4e0a $i$ \u53f7\u70b9\uff0c\u7b2c\u4e8c\u4e2a\u4e32\u5339\u914d\u5230 Trie \u6811\u4e0a $j$ \u53f7\u70b9\uff0c\u7684\u65b9\u6848\u6570\uff0c\u8fd9\u6837\u662f $O((\\sum len)^2n)$ \u7684\u3002\n\n\u663e\u7136\u7b54\u6848\u662f\u4e0d\u8d85\u8fc7 $(\\sum len)^2$ \u9636\u7684\u5e38\u7cfb\u6570\u9f50\u6b21\u7ebf\u6027\u9012\u63a8\u6570\u5217\uff0c\u8fdb\u4e00\u6b65\u5206\u6790\u53d1\u73b0\u6709\u7528\u7684\u72b6\u6001\u5176\u5b9e\u4e0d\u8d85\u8fc7 $\\sum len^2$ \u4e2a\uff08\u4e00\u5b9a\u6709 $i,j$ \u6709\u4e00\u4e2a\u662f\u53e6\u4e00\u4e2a\u7684\u540e\u7f00\uff09\uff0c\u56e0\u6b64\u66b4\u529b\u7b97\u51fa\u524d $2\\sum len^2$ \u4e2a\u7b54\u6848\uff0c\u7136\u540e\u7528 BM+\u591a\u9879\u5f0f\u53d6\u6a21\u7b97\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6\uff1a$O((\\sum len^2)\\times (\\sum len^2)\\times |\\Sigma|+(\\sum len^2)\\log (\\sum len^2)\\log n)$\u3002\u622a\u6b62 2021.10.15 \u662f\u6d1b\u8c37\u6700\u4f18\u89e3\u3002\n\n~~\u6240\u4ee5\u53ef\u4ee5\u51fa\u5230 $\\sum len^2\\le 2000$~~",
        "postTime": 1634300332,
        "uid": 42156,
        "name": "feecle6418",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1511F\u3010Chainword\u3011"
    },
    {
        "content": "\u5982\u4f55\u5224\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 $s$ \u80fd\u5426\u88ab\u62c6\u4e3a\u82e5\u5e72\u6bb5\u5b57\u5178\u4e2d\u7684\u5355\u8bcd\u5462\uff1f\n\n\u8003\u8651\u5bf9\u5b57\u5178\u5efa\u7acb trie \u6811\uff0c\u5f53\u5728 $s$ \u7684\u672b\u5c3e\u589e\u52a0\u4e00\u4e2a\u5b57\u7b26\u7684\u65f6\u5019\uff0c\u5c31\u76f8\u5f53\u4e8e\u662f\u5728 trie \u6811\u4e0a\u4ece\u4e00\u4e2a\u7ed3\u70b9 $u$ \u6cbf\u7740\u67d0\u4e00\u6761\u8f6c\u79fb\u8fb9\u8d70\u5230\u53e6\u5916\u4e00\u4e2a\u7ed3\u70b9 $v$\u3002\u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5728\u67d0\u4e2a\u5b57\u7b26\u4e32\u7684\u7ed3\u675f\u4f4d\u7f6e\u4e0d\u7ee7\u7eed\u5f80\u4e0b\u8d70\uff0c\u800c\u662f\u56de\u5230\u6839\u8282\u70b9\u3002\n\n\u5047\u5982\u53ea\u6709\u4e00\u9053\u63d0\u793a\u7ebf\uff0c\u90a3\u4e48\u6839\u636e\u5957\u8def\uff0c\u53ef\u4ee5\u7528 $f_{i, u}$ \u8868\u793a $s$ \u52a0\u5165\u4e86 $i$ \u4e2a\u5b57\u7b26\uff0c\u5f53\u524d\u5728 trie \u7684\u7ed3\u70b9 $u$ \u4e0a\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7684\u65b9\u6848\u6570\u3002\u8f6c\u79fb\u662f\u663e\u7136\u7684\u3002\n\n\u4f46\u73b0\u5728\u6709\u4e24\u9053\u63d0\u793a\u7ebf\uff0c\u4eff\u7167\u8fd9\u6837\u7684\u601d\u8def\uff0c\u4f7f\u7528 $f_{i, u, v}$ \u8868\u793a $s$ \u52a0\u5165\u4e86 $i$ \u4e2a\u5b57\u7b26\uff0c\u4e0a\u65b9\u7684\u7ebf\u5728 trie \u7684\u7ed3\u70b9 $u$ \u4e0a\uff0c\u4e0b\u65b9\u7684\u7ebf\u5728 trie \u7684\u7ed3\u70b9 $v$ \u4e0a\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7684\u65b9\u6848\u6570\u3002\n\n\u5f88\u5bb9\u6613\u53d1\u73b0\u8fd9\u4e2a DP \u4e0e $i$ \u5176\u5b9e\u6ca1\u4ec0\u4e48\u5173\u7cfb\uff0c\u53ef\u4ee5\u4f7f\u7528\u77e9\u9635\u5feb\u901f\u5e42\u4f18\u5316\u3002\u4f46\u662f\u603b\u72b6\u6001\u6570\u662f\u81f3\u591a\u7ea6 $1600$ \u7684\u3002\u5f88\u663e\u7136\uff0c\u77e9\u9635\u5feb\u901f\u5e42\u5e76\u4e0d\u80fd\u8dd1\u5f97\u52a8\u3002\n\n\u73b0\u5728\u8003\u8651\u5220\u51cf\u6709\u6548\u72b6\u6001\uff1a\n\n1. \u8bb0 $root \\to u$ \u7684\u8def\u5f84\u7684\u5b57\u7b26\u4e32\u4e3a $S$\uff0c$root \\to v$ \u7684\u8def\u5f84\u7684\u5b57\u7b26\u4e32\u4e3a $T$\uff0c\u663e\u7136\u6709 $S$ \u662f $T$ \u7684\u540e\u7f00\uff0c\u6216\u8005 $T$ \u662f $S$ \u7684\u540e\u7f00\u3002\n2. $f_{i, u, v} = f_{i, v, u}$\uff0c\u6240\u4ee5 $(u, v)$ \u548c $(v, u)$ \u53ef\u4ee5\u89c6\u4f5c\u540c\u4e00\u4e2a\u72b6\u6001\u3002\n\n\u52a0\u5165\u8fd9\u4e24\u4e2a\u9650\u5236\u540e\uff0c\u72b6\u6001\u6570\u5c31\u88ab\u5220\u51cf\u5230\u4e86\u7ea6 $l = 160$\uff0c\u8fd9\u65f6\u5019\u5957\u7528\u77e9\u9635\u5feb\u901f\u5e42\u4f18\u5316\u5373\u53ef\u3002\n\n\u4e00\u4e2a\u5b9e\u73b0\u4e0a\u7684\u7ec6\u8282\u662f\uff0c\u5982\u4f55\u627e\u5230\u6ee1\u8db3\u7b2c\u4e00\u79cd\u8981\u6c42\u7684\u72b6\u6001\u5462\uff1f\u5176\u5b9e\u4ece $(0,0)$ \u5f00\u59cb BFS / DFS\uff0c\u6bcf\u6b21\u8f6c\u79fb\u7684\u65f6\u5019\u679a\u4e3e\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\uff0c\u6240\u6709\u80fd\u8bbf\u95ee\u5230\u7684\u7ed3\u70b9\u5c31\u662f\u6211\u4eec\u60f3\u8981\u7684\u7ed3\u70b9\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(l^3 \\log m)$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 50, M = 161, MOD = 998244353;\nstruct matrix\n{\n\tint val[M][M];\n\tmatrix() { memset(val, 0, sizeof(val)); }\n\tmatrix operator * (const matrix &oth) const\n\t{\n\t\tmatrix res;\n\t\tfor(int i = 0; i < M; i++)\n\t\t\tfor(int j = 0; j < M; j++)\n\t\t\t\tfor(int k = 0; k < M; k++)\n\t\t\t\t\tres.val[i][j] = (res.val[i][j] + 1LL * val[i][k] * oth.val[k][j] % MOD) % MOD;\n\t\treturn res;\n\t}\n} trans; \nmatrix Qpow(matrix a, long long power)\n{\n\tmatrix res;\n\tfor(int i = 0; i < M; i++) res.val[i][i] = 1;\n\twhile(power)\n\t{\n\t\tif(power & 1) res = res * a;\n\t\ta = a * a;\n\t\tpower >>= 1;\n\t}\n\treturn res;\n}\nstruct trie\n{\n\tint siz;\n\tstruct node\n\t{\n\t\tbool ext;\n\t\tint ch[26];\n\t\tnode() { ext = false; memset(ch, -1, sizeof(ch)); }\n\t} o[N];\n\ttrie() { siz = 0; } \n\tvoid Insert(char *str)\n\t{\n\t\tint cur = 0;\n\t\tfor(int i = 1; str[i]; i++)\n\t\t{\n\t\t\tif(o[cur].ch[str[i] - 'a'] == -1) o[cur].ch[str[i] - 'a'] = ++siz;\n\t\t\tcur = o[cur].ch[str[i] - 'a'];\n\t\t}\n\t\to[cur].ext = true;\n\t}\n} tr;\nint n;\nlong long m;\nchar s[N];\nqueue<pair<int, int>> que;\nmap<pair<int, int>, int> idx;\nint GetID(pair<int, int> p)\n{\n\tif(p.first > p.second) swap(p.first, p.second);\n\tif(!idx.count(p))\n\t{\n\t\tint k = idx.size();\n\t\tidx[p] = k;\n\t\tque.push(p);\n\t}\n\treturn idx[p];\n}\nint main()\n{\n\tios::sync_with_stdio(false);\n\tcin >> n >> m;\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tcin >> (s + 1);\n\t\ttr.Insert(s); \n\t}\n\tque.push(make_pair(0, 0));\n\tidx[make_pair(0, 0)] = 0;\n\twhile(!que.empty())\n\t{\n\t\tpair<int, int> cur = que.front();\n\t\tque.pop();\n\t\tint x = GetID(cur);\n\t\tfor(int c = 0; c < 26; c++)\n\t\t{\n\t\t\tpair<int, int> nxt = make_pair(tr.o[cur.first].ch[c], tr.o[cur.second].ch[c]);\n\t\t\tif(nxt.first == -1 || nxt.second == -1) continue;\n\t\t\ttrans.val[x][GetID(nxt)]++;\n\t\t\tif(tr.o[nxt.first].ext) trans.val[x][GetID(make_pair(0, nxt.second))]++;\n\t\t\tif(tr.o[nxt.second].ext) trans.val[x][GetID(make_pair(nxt.first, 0))]++;\n\t\t\tif(tr.o[nxt.first].ext && tr.o[nxt.second].ext) trans.val[x][0]++;\n\t\t}\n\t}\n\tcout << Qpow(trans, m).val[0][0] << endl; \n\treturn 0;\n}\n```",
        "postTime": 1619523277,
        "uid": 51971,
        "name": "syksykCCC",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1511F \u3010Chainword\u3011"
    }
]