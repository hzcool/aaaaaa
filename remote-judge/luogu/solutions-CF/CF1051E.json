[
    {
        "content": "\u5173\u4e8edp\u8fd9\u4e00\u90e8\u5206\uff0c Dilute\u5927\u4f6c\u8bb2\u5f97\u975e\u5e38\u597d\uff0c\u5927\u5bb6\u53ef\u4ee5\u53bb%\u4e00\u4e0b\uff0c\u8fd9\u91cc\u4e3b\u8981\u662f\u63d0\u51fa\u4e00\u70b9\u590d\u6742\u5ea6\u7684\u4f18\u5316\u3002\n\n\u7531\u4e8e\u6211\u4eec\u5728dp\u8f6c\u79fb\u5224\u65ad\u7684\u65f6\u5019\uff0c\u9700\u8981\u6c42\u51fa\u4e00\u4e2a\u6a21\u5f0f\u4e32\u548c\u539f\u5b57\u7b26\u4e32\u4e2d\u4e00\u6bb5\u7684LCP\uff0c\u5982\u679c\u91c7\u7528\u4e8c\u5206+\u54c8\u5e0c\u7684\u8bdd\uff0c\u590d\u6742\u5ea6\u662f$O(n\\log n)$\u7684\u3002\n\n\u4f46\u662f\u6211\u4eec\u5b9e\u9645\u4e0a\u53ef\u4ee5\u628a\u8fd9\u4e2a\u770b\u6210\u6a21\u5f0f\u4e32\u4e0e\u539f\u4e32\u7684\u4e00\u4e2a\u540e\u7f00\u6c42LCP\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u7528exkmp\uff08z\u51fd\u6570\uff09\u8fdb\u884c$O(n)$\u9884\u5904\u7406\uff0c\u7136\u540e$O(1)$\u6c42LCP\u3002\n\n\u5982\u679c\u4f60\u4e0d\u77e5\u9053\u4ec0\u4e48\u662fexkmp\uff0c\u53ef\u4ee5\u53bb\u6a21\u677f\u533a\u770b\u770b\u3002\n\n[P5410 \u3010\u6a21\u677f\u3011\u6269\u5c55 KMP\uff08Z \u51fd\u6570\uff09](https://www.luogu.com.cn/problem/P5410)\n\n## \u4ee3\u7801\n\n\u4e00\u4e9bdp\u5b9e\u73b0\u7684\u7ec6\u8282\u4e0a\u53c2\u8003\u4e86Dilute\u5927\u4f6c\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define MAX 2000005\n#define ll long long\n#define P 998244353\nusing namespace std;\n\nstruct exkmp{\n    int n;\n    int z[MAX], p[MAX];\n    char str[MAX];\n    void build(char *s){\n        n = strlen(s+1);\n        z[1] = n, str[1] = s[1];\n        for(int i = 2, l = 0, r = 0; i <= n; i++){\n            str[i] = s[i];\n            if(i <= r) z[i] = min(z[i-l+1], r-i+1);\n            while(i+z[i] <= n && s[i+z[i]] == s[z[i]+1]) z[i]++;\n            if(i+z[i]-1 > r) r = i+z[i]-1, l = i;\n        }\n    }\n    void get_lcp(char *s){\n        int m = strlen(s+1);\n        for(int i = 1, l = 0, r = 0; i <= m; i++){\n            if(i <= r) p[i] = min(z[i-l+1], r-i+1);\n            while(i+p[i] <= m && s[i+p[i]] == str[p[i]+1]) p[i]++;\n            if(i+p[i]-1 > r) r = i+p[i]-1, l = i;\n        }\n    }\n}L, R;\n\nchar a[MAX], l[MAX], r[MAX];\nint n;\nll f[MAX], g[MAX];\n\nvoid add(ll &a, ll b){\n    a += b;\n    if(a >= P) a -= P;\n    if(a < 0) a += P;\n}\n\nbool chk(int x, int len){\n    int p = L.p[x], f1 = 0, f2 = 0;\n    if(L.n < len || p == L.n || L.str[p+1] < a[x+p]) f1 = 1;\n    p = R.p[x];\n    if(R.n > len || p == R.n || R.str[p+1] > a[x+p]) f2 = 1;\n    return (f1 && f2);\n}\n\nint main()\n{\n    scanf(\"%s%s%s\", a+1, l+1, r+1);\n    n = strlen(a+1);\n    L.build(l), R.build(r);\n    L.get_lcp(a), R.get_lcp(a);\n    f[0] = 1;\n    for(int i = 0; i <= n; i++){\n        if(i) add(g[i], g[i-1]), add(f[i], g[i]);\n        if(a[i+1] == '0'){\n            if(L.n == 1 && L.str[1] == '0') add(f[i+1], f[i]);\n            continue;\n        }\n        if(L.n < R.n) add(g[i+L.n+1], f[i]), add(g[i+R.n], -f[i]);\n        if(chk(i+1, L.n)) add(f[i+L.n], f[i]);\n        if(R.n != L.n && chk(i+1, R.n)) add(f[i+R.n], f[i]);\n    }\n    cout << f[n] << endl;\n\n    return 0;\n}\n```",
        "postTime": 1584281735,
        "uid": 22991,
        "name": "fighter",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1051E \u3010Vasya and Big Integers\u3011"
    },
    {
        "content": "[$$\\color{darkblue}\\huge\\texttt{\u5728\u672c\u4ebablog\u98df\u7528\u66f4\u4f73}$$](https://dilute.xyz/2019/05/28/Solutions/Solution-CF1051E/)\n\n## \u54c8\u5e0c + \u4e8c\u5206 + DP\n\n\u9996\u5148\u770b\u5230\u9898\u9762\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u4e00\u4e2a$DP$\uff0c\u4ee4$f[i]$\u4e3a\u5212\u5206\u5230$i$\u4e3a\u6b62\u7684\u65b9\u6848\u6570\u3002\n\n\u7136\u540e\u6734\u7d20\u7684\u66b4\u529b\u8f6c\u79fb\u662f$O(n^2)$\u7684\uff0c\u975e\u5e38\u663e\u7136\u4e00\u4e2a\u72b6\u6001$i$\u80fd\u591f\u8f6c\u79fb\u5230\u7684$j$\u662f\u4e00\u6bb5\u8fde\u7eed\u7684\uff0c\u8fdb\u800c\u60f3\u5230\u4f7f\u7528\u524d\u7f00\u548c\u4f18\u5316\u3002\n\n<!--more-->\n\n\u4ee4$l$\u7684\u957f\u5ea6\u4e3a$sl$\uff0c$r$\u7684\u957f\u5ea6\u4e3a$sr$\uff0c\u90a3\u4e48\u957f\u5ea6\u4e3a$len$\uff08$sl < len < sr$\uff09\u7684\u4e00\u6bb5\u6570\u5b57$s$\u5fc5\u5b9a\u6ee1\u8db3$l < s < r$\u3002\u7136\u540e\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u5f53\u524d\u72b6\u6001$i$\u7684\u65f6\u5019$[i, i + sl)$\u548c$[i,i + sr)$\u8fd9\u4e24\u6bb5\u533a\u95f4\u5206\u522b\u548c$l,r$\u7684\u5927\u5c0f\u5173\u7cfb\u3002\n\n\u5982\u679c\u6211\u4eec\u6211\u4eec\u8981\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32$a$\u548c$b$\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u6211\u4eec\u5b8c\u5168\u5148\u7279\u5224\u6389\u4e24\u4e2a\u5b8c\u5168\u4e00\u6837\u7684\u60c5\u51b5\uff0c\u7136\u540e\u518d\u6c42\u51fa\u5b83\u4eec\u7684$lcp$\uff0c\u7136\u540e\u90a3\u4e48$a$\u548c$b$\u7684\u5927\u5c0f\u5173\u7cfb\u5c31\u662f$a[lcp + 1]$\u548c$b[lcp + 1]$\u7684\u5927\u5c0f\u5173\u7cfb\u4e86\u3002\n\n$lcp$\u53ef\u4ee5\u54c8\u5e0c + \u4e8c\u5206\u89e3\u51b3\uff0c\u63a5\u4e0b\u6765\u7684\u4e8b\u60c5\u5c31\u662f$DP$\u7684\u4e86\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\n#include<bits/stdc++.h>\n\n#define ll long long\n#define INF 2147483647\n#define mod 998244353\n#define px 11\n#define mul(a, b) ((ll)(a) * (ll)(b) % mod)\n\nint inp(){\n    char c = getchar();\n    while(c < '0' || c > '9')\n        c = getchar();\n    int sum = 0;\n    while(c >= '0' && c <= '9'){\n        sum = sum * 10 + c - '0';\n        c = getchar();\n    }\n    return sum;\n}\n\nchar s[1000010], l[1000010], r[1000010];\nll f[1000010], sum[1000010];\nint n, sl, sr, pl[1000010], pr[1000010], hshs[1000010], hshl[1000010], hshr[1000010], fpow[1000010];\n\nbool ok1(int x){\n    if(x + sl - 1 > n)\n        return false;\n    if(sl == pl[x])\n        return true;\n    return l[pl[x] + 1] < s[x + pl[x]];\n}\n\nbool ok2(int x){\n    if(x + sr - 1 > n)\n        return false;\n    if(pr[x] == sr)\n        return true;\n    return r[pr[x] + 1] > s[x + pr[x]];\n}\n\nint get_hsh(int *hsh, int l, int r){\n    return (hsh[r] - mul(hsh[l - 1], fpow[r - l + 1]) + mod) % mod;\n}\n\nvoid solve(int *s, int *hsh, int len){ // \u6c42lcp\n    for(int i = 1; i <= n - len + 1; i++){\n        int l = 0;\n        int r = len;\n        while(l < r){\n            int mid = (l + r + 1) >> 1;\n            if(get_hsh(hshs, i, i + mid - 1) == get_hsh(hsh, 1, mid))\n                l = mid;\n            else\n                r = mid - 1;\n        }\n        s[i] = l;\n    }\n}\n\nvoid gethash(char *str, int *hsh, int len){\n    for(int i = 1; i <= len; i++)\n        hsh[i] = ((ll)(hsh[i - 1]) * (ll)(px) + str[i] - '0' + 1) % mod;\n}\n\nint main(){\n    fpow[0] = 1;\n    for(int i = 1; i <= 1000000; i++)\n        fpow[i] = mul(fpow[i - 1], px);\n    scanf(\"%s\", s + 1);\n    scanf(\"%s\", l + 1);\n    scanf(\"%s\", r + 1);\n    n = strlen(s + 1);\n    sl = strlen(l + 1);\n    sr = strlen(r + 1);\n    gethash(l, hshl, sl);\n    gethash(r, hshr, sr);\n    gethash(s, hshs, n);\n    f[0] = 1;\n    solve(pl, hshl, sl);\n    solve(pr, hshr, sr);\n    // for(int i = 1; i <= n; i++)\n    //     printf(\"%d \", pl[i]);\n    // putchar('\\n');\n    // for(int i = 1; i <= n; i++)\n    //     printf(\"%d \", pr[i]);\n    // putchar('\\n');\n    for(int i = 0; i <= n; i++){\n        if(i){\n            sum[i] += sum[i - 1];\n            f[i] += sum[i];\n            f[i] %= mod;\n        }\n        // printf(\"f[%d] = %d\\n\", i, f[i]);\n        if(s[i + 1] == '0'){\n            if(sl == 1 && l[1] == '0'){\n                f[i + 1] += f[i];\n                f[i + 1] %= mod;\n            }\n            continue;\n        }\n        if(sl < sr){\n            sum[sl + i + 1] += f[i];\n            sum[sl + i + 1] %= mod;\n            sum[sr + i] += mod - f[i];\n            sum[sr + i] %= mod;\n        }\n        if(sl == sr){\n            if(ok1(i + 1) && ok2(i + 1)){\n                f[i + sl] += f[i];\n                f[i + sl] %= mod;\n            }\n        } else {\n            if(ok1(i + 1)){\n                f[i + sl] += f[i];\n                f[i + sl] %= mod;\n            }\n            if(ok2(i + 1)){\n                f[i + sr] += f[i];\n                f[i + sr] %= mod;\n            }\n        }\n        // printf(\"f[%d] = %d\\n\", i, f[i]);\n    }\n    std::cout << f[n] << std::endl;\n}\n```\n\n",
        "postTime": 1559044109,
        "uid": 36362,
        "name": "Dilute",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1051E \u3010Vasya and Big Integers\u3011"
    },
    {
        "content": "$\\quad\\rm ExKMP+$\u524d\u7f00\u548c\u4f18\u5316 $\\rm DP$\u3002\n\n$\\quad$\u8bb0 $f_i$ \u8868\u793a $a_{1\\sim i}$ \u6709\u591a\u5c11\u79cd\u5408\u6cd5\u7684\u5212\u5206\u65b9\u6848\uff0c\u663e\u7136\u6709\u4e00\u4e2a $\\Theta(n^2)$ \u7684\u66b4\u529b $\\rm DP$\uff0c\u5373\u5f80\u524d\u679a\u4e3e\u8f6c\u79fb\u70b9 $j$\uff0c\u5224\u65ad\u8f6c\u79fb\u662f\u5426\u5408\u6cd5\u540e\u7d2f\u52a0\u5373\u53ef\u3002\n\n$\\quad$\u89c2\u5bdf\u5230\u5408\u6cd5\u7684\u8f6c\u79fb\u70b9\u662f\u4e00\u6bb5\u8fde\u7eed\u7684\u533a\u95f4\uff0c\u82e5\u4ee4 $len_l$ \u548c $len_r$ \u5206\u522b\u8868\u793a\u4e24\u9650\u5236\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff0c\u663e\u7136\u5bf9\u4e8e\u6ee1\u8db3 $len_l<i-j<len_r$ \u7684\u8f6c\u79fb\u70b9 $j$\uff0c\u8fd9\u4e2a\u8f6c\u79fb\u90fd\u662f\u5408\u6cd5\u7684\uff0c\u73b0\u5728\u7684\u95ee\u9898\u5728\u4e8e\u5224\u65ad\u5f53 $j=i-len_l$ \u6216 $j=i-len_r$ \u7684\u65f6\u5019\u8f6c\u79fb\u662f\u5426\u5408\u6cd5\u3002\n\n$\\quad$\u8003\u8651\u7528 $\\rm ExKMP$ \u5bf9\u4efb\u610f\u4e00\u4e2a $i$\uff0c \u6c42 $\\rm LCP(s_{i\\sim n},l)$ \u548c $\\rm LCP(s_{i\\sim n},r)$\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5feb\u901f\u6c42\u51fa $s_{i-len_l+1\\sim i}$ \u4e0e $l$ \u7684\u6700\u957f\u516c\u5171\u524d\u7f00 $zl_{i-len_l+1}$\uff0c\u5e76\u901a\u8fc7\u6bd4\u8f83 $s_{i-len_l+1+z_{i-len_l+1}}$ \u4e0e $l_{z_{i-len_l+1}+1}$ \u7684\u5927\u5c0f\u5224\u65ad\u5f53 $j=i-len_l$ \u65f6\u8f6c\u79fb\u662f\u5426\u5408\u6cd5\uff0c\u540c\u7406\uff0c\u5f53 $j=i-len_r$ \u65f6\u8f6c\u79fb\u662f\u5426\u5408\u6cd5\u4e5f\u53ef\u4ee5\u901a\u8fc7\u76f8\u540c\u65b9\u5f0f\u5224\u65ad\u3002\n\n$\\quad$\u8fd9\u6837\uff0c\u5408\u6cd5\u8f6c\u79fb\u70b9\u7684\u533a\u95f4\u5c31\u5728 $\\Theta(1)$ \u7684\u65f6\u95f4\u5185\u6c42\u51fa\u6765\u4e86\uff0c\u5269\u4e0b\u7684\u7528\u524d\u7f00\u548c\u8bb0\u5f55\u4e00\u4e0b\u5373\u53ef\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7531\u4e8e\u4e0d\u80fd\u51fa\u73b0\u524d\u5bfc\u96f6\uff0c\u6240\u4ee5\u5f53\u8f6c\u79fb\u70b9\u7684\u540e\u4e00\u4f4d\u4e3a '$0$' \u65f6\u4e0d\u80fd\u5c06\u5176\u52a0\u5165\u524d\u7f00\u548c\u6570\u7ec4\u3002\n\n$\\quad$\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(n)$.",
        "postTime": 1623161565,
        "uid": 78645,
        "name": "C\u3000C\u3000A",
        "ccfLevel": 6,
        "title": "[CF1051E]Vasya and Big Integers"
    }
]