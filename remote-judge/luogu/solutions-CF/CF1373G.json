[
    {
        "content": "\u63d0\u4f9b\u4e00\u4e2a\u975e\u4e8c\u5206\u56fe\u505a\u6cd5\n\n\u9996\u5148\u5c06\u95ee\u9898\u8f6c\u5316\u6210\u76f4\u7ebf\u4e0a\u7684\u95ee\u9898\uff0c\u663e\u7136\u4e24\u4e2a\u95ee\u9898\u662f\u7b49\u4ef7\u7684\uff1a\n\n\u76f4\u7ebf\u4e0a\u6709\u4e00\u5806\u70b9\uff0c\u70b9\u4e0a\u6709\u4e00\u4e9b\u7403\uff08\u4e00\u4e2a\u70b9\u4e0a\u6709\u5f88\u591a\u7403\uff09\uff0c\u540c\u65f6\u628a\u6240\u6709\u7403\u653e\u5f00\uff0c\u7403\u4f1a\u5f80\u524d\u6eda\u5230\u7b2c\u4e00\u4e2a\u7a7a\u7684\u70b9\u505c\u5728\u90a3\uff0c\u95ee\u6700\u540e\u4e00\u4e2a\u7403\u4f1a\u6eda\u5230\u90a3\uff1b\u652f\u6301\u52a0\u7403\u3001\u51cf\u7403\u3002\n\n\u8003\u8651\u76f4\u63a5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u8bb0 $f_i$ \u8868\u793a\u7b2c $i$ \u4e2a\u70b9\u4f1a\u6709\u51e0\u4e2a\u7403\u7ecf\u8fc7\uff08\u5305\u62ec\u505c\u4e0b\u6765\u7684\u90a3\u4e2a\uff09\n\n\u663e\u7136\u6700\u540e\u7684\u5c40\u9762\u548c\u653e\u7403\u7684\u987a\u5e8f\u65e0\u5173\uff0c\u90a3\u4e48\u52a0\u4e00\u4e2a\u7403\u5c31\u627e\u5230\u53f3\u8fb9\u7b2c\u4e00\u4e2a $f_i=0$ \u7684 $j$\uff0c\u7136\u540e $f_{i}\\sim f_j$ \u52a0 $1$\n\n\u6eda\u8fc7\u4e00\u4e2a\u70b9\u7684 $f_i$ \u4e2a\u5c0f\u7403\u6839\u672c\u6ca1\u6709\u533a\u522b\uff0c\u6240\u4ee5\u51cf\u4e00\u4e2a\u7403\u5c31\u662f\u627e\u5230\u7b2c\u4e00\u4e2a $f_i=1$ \u7684 $j$\uff0c\u7136\u540e $f_{i}\\sim f_j$ \u51cf $1$\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u7b2c\u4e8c\u7c7b\u64cd\u4f5c\u7684 $f_i=1$ \u524d\u9762\u4e0d\u53ef\u80fd\u51fa\u73b0 $f_i=0$\uff0c\u5426\u5219\u5c31\u662f\u4e00\u4e2a\u4f4d\u7f6e\u505c\u4e86\u4e24\u4e2a\u7403\n\n\u90a3\u4e48\u76f4\u63a5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6700\u5c0f\u503c\u3001\u4e25\u683c\u6b21\u5c0f\u503c\u5373\u53ef\uff0c\u6ce8\u610f\u4e0b\u6807\u8981\u5f00\u5927\n\n\u590d\u6742\u5ea6 $O(n+m\\log n)$\n\n\u4ee3\u7801\u56e0\u4e3a `pushup` \u56fe\u7701\u4e8b\u6240\u4ee5\u5e38\u6570\u6781\u5927\uff0c\u8981\u8dd1 2.9s\n\n```cpp\n// Problem: CF1373G Pawns\n// Contest: Luogu\n// URL: https://www.luogu.com.cn/problem/CF1373G\n// Memory Limit: 250 MB\n// Time Limit: 3000 ms\n\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n#define fi first\n#define se second\n#define mp make_pair\n#define pb push_back\n#define pf push_front\n#define rep(i, s, t) for (int i = s; i <= t; ++i)\n#define per(i, s, t) for (int i = t; i >= s; --i)\n\n/*template ends here*/\n\nconst int N = 6e5 + 5;\nconst int inf = 0x3f3f3f3f;\n\nstruct Node {\n\tint lazy;\n\tint mx, mxpos;\n\tint smx, smxpos;\n\tNode() : mx(inf), smx(inf) {}\n\tNode(int lazy, int mx, int mxpos, int smx, int smxpos) : lazy(lazy), mx(mx), mxpos(mxpos), smx(smx), smxpos(smxpos) {}\n};\n\nNode tree[N<<2];\nset<pair<int, int>> s;\n\ninline Node merge(const Node& x, const Node& y) {\n\tvector<pair<int, int>> v;\n\tv.pb(mp(x.mx, x.mxpos)); v.pb(mp(x.smx, x.smxpos));\n\tv.pb(mp(y.mx, y.mxpos)); v.pb(mp(y.smx, y.smxpos));\n\tsort(v.begin(), v.end());\n\tif(v[0].fi >= inf) return Node(0, inf, 0, inf, 0);\n\tvector<pair<int, int>> ret;\n\tret.pb(v[0]);\n\tfor(int i = 1; i < v.size(); i++) {\n\t\tif(v[i].fi != v[i-1].fi) {\n\t\t\tret.pb(v[i]);\n\t\t}\n\t}\n\treturn Node(0, ret[0].fi, ret[0].se, ret[1].fi, ret[1].se);\n}\n\ninline void pushup(int cur) {\n\ttree[cur] = merge(tree[cur << 1], tree[cur << 1 | 1]);\n}\n\ninline void setlazy(int cur, int x) {\n\ttree[cur].lazy += x;\n\ttree[cur].mx += x;\n\ttree[cur].smx += x;\n}\n\ninline void pushdown(int cur) {\n\tif(tree[cur].lazy) {\n\t\tsetlazy(cur << 1, tree[cur].lazy);\n\t\tsetlazy(cur << 1 | 1, tree[cur].lazy);\n\t\ttree[cur].lazy=  0;\n\t}\n}\n\ninline void add(int cur, int ql, int qr, int x, int l, int r) {\n\tif(ql <= l && r <= qr) return setlazy(cur, x), void();\n\tpushdown(cur);\n\tint mid = l + r >> 1;\n\tif(ql <= mid) add(cur << 1, ql, qr, x, l, mid);\n\tif(mid < qr) add(cur << 1 | 1, ql, qr, x, mid + 1, r);\n\tpushup(cur);\n}\n\nNode qres; bool isfirst;\n\ninline void query(int cur, int ql, int qr, int l, int r) {\n\tif(ql <= l && r <= qr) {\n\t\tif(isfirst) qres = tree[cur], isfirst = 0;\n\t\telse qres = merge(qres, tree[cur]);\n\t\treturn;\n\t}\n\tpushdown(cur);\n\tint mid = l + r >> 1;\n\tif(ql <= mid) query(cur << 1, ql, qr, l, mid);\n\tif(mid < qr) query(cur << 1 | 1, ql, qr, mid + 1, r);\t\n}\n\ninline void build(int cur, int l, int r) {\n\tif(l == r) {\n\t\ttree[cur] = Node(0, 0, l, inf, l);\n\t\treturn;\n\t}\n\tint mid = l + r >> 1;\n\tbuild(cur << 1, l, mid);\n\tbuild(cur << 1 | 1, mid + 1, r);\n\tpushup(cur);\n}\n\ninline int querypos(int cur, int l, int r) {\n\tif(l == r) return l;\n\tpushdown(cur);\n\tint mid = l + r >> 1;\n\tauto check = [&](int x) { return 0 < x && x < inf; };\n\tif(check(tree[cur<<1|1].mx) || check(tree[cur<<1|1].smx)) return querypos(cur << 1 | 1, mid + 1, r);\n\telse return querypos(cur << 1, l, mid);\n}\n\nint n, m, k;\n\nint main() {\n\tios::sync_with_stdio(false);\n\tcin.tie(nullptr), cout.tie(nullptr);\n\tcout << fixed << setprecision(15); \n\tcerr << fixed << setprecision(15);\n\t\n\tcin >> n >> k >> m;\n\t\n\tbuild(1, 1, n*2+m);\n\t\n\tint q = m;\n\twhile(q--) {\n\t\tint x, y;\n\t\tcin >> x >> y;\n\t\tint p = y + abs(x - k);\n\t\t\t\n\t\tif(s.count(mp(x, y))) {\n\t\t\ts.erase(mp(x, y));\n\t\t\tisfirst = 1;\n\t\t\tquery(1, p, n*2+m, 1, n*2+m);\n\t\t\tint pos = qres.mx == 1 ? qres.mxpos : qres.smxpos;\n\t\t\tadd(1, p, pos, -1, 1, n*2+m);\n\t\t} else {\n\t\t\ts.insert(mp(x, y));\n\t\t\tisfirst = 1;\n\t\t\tquery(1, p, n*2+m, 1, n*2+m);\n\t\t\tint pos = qres.mxpos;\n\t\t\tadd(1, p, pos, 1, 1, n*2+m);\n\t\t}\n\t\tcout << max(0, querypos(1, 1, n*2+m) - n) << \"\\n\";\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1632120813,
        "uid": 95103,
        "name": "KellyFrog",
        "ccfLevel": 9,
        "title": "\u9898\u89e3\u3010CF1373G Pawns\u3011"
    },
    {
        "content": "\u5c0f\u6e05\u65b0\u7ebf\u6bb5\u6811\u9898\uff08\uff08\n\n\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u8fb9\u53ea\u80fd\u5411\u9760\u53f3\u7684\u4e09\u4e2a\u65b9\u5411\u8d70\uff0c\u6700\u540e\u8981\u8d70\u5230\u4e00\u6761\u57fa\u51c6\u7ebf\u4e0a\u3002\u5373\u5bf9\u4e8e\u4e00\u4e2a\u70b9 $(x, y)$\uff0c\u5b83\u6700\u540e\u5e94\u8be5\u843d\u5728 $(k, y + |k - x|)$\u3002\n\n\u58eb\u5175\u53ef\u4ee5\u4e00\u4e2a\u4e00\u4e2a\u8fdb\u884c\u79fb\u52a8\uff0c\u6240\u4ee5\u4e92\u76f8\u7684\u79fb\u52a8\u884c\u7a0b\u4e0d\u4f1a\u4e92\u76f8\u5e72\u6270\u3002\u8003\u8651\u5229\u7528\u8fd9\u4e2a\u6027\u8d28\u5c06\u9898\u76ee\u4ece\u4e8c\u7ef4\u8f6c\u6362\u4e3a\u4e00\u7ef4\u3002\n\n\u5373\uff1a\u6709\u4e00\u961f\u58eb\u5175\u6392\u597d\u961f\uff0c\u6bcf\u4e2a\u58eb\u5175\u6709\u4e00\u4e2a\u9884\u9009\u5b9a\u7684\u4f4d\u7f6e\u3002\u5f53\u8f6e\u5230\u7b2c $i$ \u4f4d\u58eb\u5175\u9009\u4f4d\u7f6e\u65f6\uff0c\u82e5\u9884\u9009\u5b9a\u4f4d\u7f6e\u6709\u5176\u5b83\u58eb\u5175\uff0c\u5219\u9009\u62e9\u5f53\u524d\u9009\u5b9a\u4f4d\u7f6e\u53f3\u8fb9\u7d27\u6328\u7740\u7684\u4f4d\u7f6e\uff0c\u76f4\u5230\u5f53\u524d\u9009\u5b9a\u4f4d\u7f6e\u4e0a\u4e0d\u518d\u6709\u5176\u4ed6\u58eb\u5175\u540e\u7ad9\u5165\u8be5\u4f4d\u7f6e\u3002\u8bd5\u95ee\u81f3\u5c11\u9700\u8981\u65b0\u52a0\u5165\u591a\u5c11\u4e2a\u683c\u5b50\u53ef\u4ee5\u6536\u5bb9\u6240\u6709\u58eb\u5175\u3002\n\n\u76f2\u76ee\u611f\u89c9\u8fd9\u79cd\u201c\u5f53\u524d\u653e\u4e0d\u4e86\u5c31\u8003\u8651\u4e0b\u4e00\u4e2a\u201d\u7684\u9898\u76ee\u5e38\u5e38\u4f1a\u8003\u8651\u7ef4\u62a4\u4e00\u4e9b\u540e\u7f00\uff0c\u6240\u4ee5\u63a5\u4e0b\u6765\u6211\u4eec\u5f15\u5165\u540e\u7f00\u3002\n\n\u5982\u679c\u6784\u9020\u4e00\u4e2a\u6570\u7ec4 $A$\uff0c\u4e14\u521d\u59cb\u65f6 $\\forall A_i = -1 \\space s.t. i \\in [1, n]$\u3002\u4e14\u5b9a\u4e49\u6570\u7ec4 $f$\uff0c\u8868\u793a\u6709 $f_i$ \u4e2a\u58eb\u5175\u9884\u9009\u5b9a\u4e86 $i$ \u8fd9\u4e2a\u4f4d\u7f6e\u3002\u5219\u7b54\u6848\u4e3a\u5e8f\u5217 $A + f$ \u7684\u540e\u7f00\u548c\u6700\u5927\u503c\u3002\uff08\u5efa\u8bae\u81ea\u5df1\u624b Rua \u4e00\u4e0b\u3002\n\n\u4f46\u5bf9\u4e8e $i > n$ \u7684\u90e8\u5206\uff0c\u8fd9\u6837\u662f\u4e0d\u597d\u5904\u7406\u7684\u3002\u56e0\u4e3a\u5728\u539f\u9898\u4e2d\uff0c\u8fd9\u4e9b\u4f4d\u7f6e\u4e5f\u5e94\u8be5\u53c2\u4e0e\u5230\u201c\u65b0\u52a0\u5165\u4f4d\u7f6e\u201d\u7684\u8d21\u732e\u4e2d\u3002\u4e8e\u662f\u66f4\u6539 $A$ \u7684\u6784\u9020\u65b9\u5f0f\u3002\n\n\u5728 $i \\in [1, n]$ \u7684\u90e8\u5206\uff0c\u6211\u4eec\u76f4\u63a5\u4ee4 $A_i = -(n - i + 1)$\uff0c\u5373\u76f4\u63a5\u50a8\u5b58\u540e\u7f00\u3002\n\n\u800c $i > n$ \u7684\u90e8\u5206\uff0c\u6211\u4eec\u5c1d\u8bd5\u5206\u6790\u5176\u8d21\u732e\u3002\u5982\u679c\u8981\u4f7f\u7528 $n + 2$ \u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u5219\u6211\u4eec\u9700\u8981\u5148\u6dfb\u52a0\u4e00\u4e2a $n + 1$ \u7684\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u662f\u7b2c $n + 2$ \u9879\u521d\u503c\u5e94\u8be5\u4e3a $1$\u3002\u540c\u7406\u53ef\u77e5 $n + 1 \\dots n + n$ \u7b49\u4f4d\u7f6e\uff0c\u6545\u4e5f\u53ef\u4ee4 $i > n$ \u7684\u90e8\u5206\u4e2d $A_i = -(n - i + 1)$\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u73b0\u5728\u7b54\u6848\u4e3a $\\max \\{ A_i + g_i \\} \\space s.t. i \\in [1, w]$\uff0c\u5176\u4e2d $w$ \u662f\u9884\u9009\u5b9a\u4f4d\u7f6e\u6700\u9760\u53f3\u7684\u4e00\u4e2a\uff0c$g$ \u662f $f$ \u7684\u540e\u7f00\u5e8f\u5217\u3002\n\n$f$ \u662f\u52a8\u6001\u66f4\u65b0\u7684\uff0c\u6bcf\u6b21\u66f4\u65b0\u4f1a\u5148\u533a\u95f4\u4fee\u6539 $g$\uff0c\u6700\u7ec8\u4f5c\u7528\u4e8e $A + f$\u3002\u6545 $A + g$ \u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u533a\u4fee\u533a\u67e5\u7684\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002$w$ \u4f7f\u7528 `set`\uff0c\u52a0\u4e00\u4e2a\u8ba1\u6570\u5668\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n)$\u3002\u8fd9\u91cc\u4f7f\u7528\u7684\u662f\u5e38\u6570\u8f83\u5c0f\u7684 zkw \u7ebf\u6bb5\u6811\u3002\n\n```cpp\n#include <map>\n#include <set>\n#include <cstdio>\nusing namespace std;\n\nint Abs (int x) { return x < 0 ? -x : x; }\nint Max (int x, int y) { return x > y ? x : y; }\nint Min (int x, int y) { return x < y ? x : y; }\n\nint Read () {\n    int x = 0, k = 1;\n    char s = getchar ();\n    while (s < '0' || s > '9') {\n        if (s == '-')\n            k = -1;\n        s = getchar ();\n    }\n    while ('0' <= s && s <= '9') \n        x = (x << 3) + (x << 1) + (s ^ 48), s = getchar ();\n    return x * k;\n}\n\nvoid Write (int x) {\n    if (x < 0)\n        putchar ('-'), x = -x;\n    if (x > 9)\n        Write (x / 10);\n    putchar (x % 10 + '0');\n}\n\nvoid Print (int x, char s) { Write (x), putchar (s); }\n\nconst int Inf = 1e9;\nconst int Maxn = 4e5 + 5;\n\nset <int> s;\nmap <int, int> Vis[Maxn];\nint a[Maxn], Tr[Maxn * 3], Lazy[Maxn * 3], Cnt[Maxn], p;\n\nvoid Make_Tree (int n) {\n    p = 1;\n    while (p < n + 2)\n        p <<= 1;\n\tTr[p + n + 1] = Tr[p] = -Inf;\n    for (int i = 1; i <= n; i++)\n        Tr[p + i] = a[i];    \n    for (int i = p + n + 1; i > 1; i--)\n        Tr[i >> 1] = Max (Tr[i], Tr[i ^ 1]);\n}\n\nvoid Update (int l, int r, int x) {\n    for (l += p - 1, r += p + 1; (l ^ r) != 1; l >>= 1, r >>= 1) {\n        if (!(l & 1))\n            Tr[l ^ 1] += x, Lazy[l ^ 1] += x;\n        if (r & 1)\n            Tr[r ^ 1] += x, Lazy[r ^ 1] += x;\n        Tr[l >> 1] = Max (Tr[l], Tr[l ^ 1]) + Lazy[l >> 1];\n        Tr[r >> 1] = Max (Tr[r], Tr[r ^ 1]) + Lazy[r >> 1];\n    }\n    for (; l > 1; l >>= 1)\n        Tr[l >> 1] = Max (Tr[l], Tr[l ^ 1]) + Lazy[l >> 1];\n}\n\nint Query (int l, int r) {\n    int Res = -Inf, Resl = -Inf, Resr = -Inf;\n    for (l += p - 1, r += p + 1; (l ^ r) != 1; l >>= 1, r >>= 1) {\n        if (!(l & 1))\n            Resl = Max (Resl, Tr[l ^ 1]);\n        if (r & 1)\n            Resr = Max (Resr, Tr[r ^ 1]);\n        Resl += Lazy[l >> 1], Resr += Lazy[r >> 1];\n    }\n    Res = Max (Resl, Resr);\n    for (; l > 1; l >>= 1)\n        Res += Lazy[l >> 1];\n    return Res;\n}\n\nint main () {\n    int n = Read (), k = Read (), m = Read ();\n    for (int i = 1; i <= 2 * n; i++)\n        a[i] = -(n - i + 1);\n    Make_Tree (n << 1);\n    for (int i = 1, x, y; i <= m; i++) {\n        x = Read (), y = Read ();\n        if (!Vis[x][y]) {\n            if (!Cnt[y + Abs (x - k)])\n                s.insert (y + Abs (x - k));\n            Cnt[y + Abs (x - k)]++;\n            Update (1, y + Abs (x - k), 1), Vis[x][y] = true;\n        }\n        else {\n            Cnt[y + Abs (x - k)]--;\n            if (!Cnt[y + Abs (x - k)])\n                s.erase (y + Abs (x - k));            \n            Update (1, y + Abs (x - k), -1), Vis[x][y] = false;\n        }\n        if (s.empty ())\n            Print (0, '\\n');\n        else \n            Print (Max (0, Query (1, *s.rbegin ())), '\\n');   \n    }\n    return 0;\n}\n```",
        "postTime": 1657021962,
        "uid": 266779,
        "name": "STrAduts",
        "ccfLevel": 6,
        "title": "Solution -\u300cCF1373G\u300dPawns"
    },
    {
        "content": "\u9996\u5148\u7531\u4e8e\u6709 $(x,y+1)$ \u7684\u64cd\u4f5c\uff0c\u90a3\u4e48\u5b8c\u5168\u6ca1\u6709\u5fc5\u8981\u8003\u8651\u6210\u4e8c\u7ef4\u95ee\u9898\uff0c\u76f4\u63a5\u5c06\u6bcf\u4e2a\u70b9\u7684\u5750\u6807\u8bbe\u4e3a $y+|x-k|$\uff0c\u5373\u76f4\u63a5\u8d70\u8fc7\u53bb\u7684\u4f4d\u7f6e\u5373\u53ef\u3002   \n\u90a3\u4e48\u5728\u4e00\u6761\u7ebf\u6bb5\u4e0a\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u53ea\u80fd\u653e\u4e00\u4e2a\u7403\uff0c\u7403\u53ea\u80fd\u5411\u53f3\u79fb\u52a8\uff0c\u6700\u5c11\u8981\u79fb\u52a8\u591a\u5c11\u5462\uff1f    \n\u5982\u679c\u628a\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u7403\u7684\u6570\u91cf\u51cf\u4e00\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f\u6700\u5927\u540e\u7f00\u548c\u3002   \n\u4e8e\u662f\u95ee\u9898\u53d8\u4e3a\u5355\u70b9\u4fee\u6539\uff0c\u6700\u5927\u540e\u7f00\u548c\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\u3002    \n\u9700\u8981\u6ce8\u610f\u7684\u7ec6\u8282\u662f\u9700\u8981\u6c42\u6700\u540e\u4e00\u4e2a\u7403\u6240\u5728\u4f4d\u7f6e\u7684\u6700\u5927\u540e\u7f00\u548c\uff08\u8fd9\u4e2a\u4f4d\u7f6e\u7528 $multiset$ \u7ef4\u62a4\uff09\uff0c\u56e0\u6b64\u7ebf\u6bb5\u6811\u4e0a\u8fd8\u5f97\u6765\u4e2a\u4e8c\u5206\u3002\n\n\u975e\u5e38\u7b80\u77ed\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define mp make_pair\nconst int maxn=4e5+5;\nint n,k,m,x,y;\nmultiset<int>s;map<pair<int,int>,int>vis;\nint read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-')f=-1;ch=getchar();}\n\twhile(isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n\treturn x*f;\n}\nstruct Seg{int l,r,rmx,sum;}t[maxn*4];\nvoid update(Seg &p,Seg ls,Seg rs){\n\tp.sum=ls.sum+rs.sum;\n\tp.rmx=max(rs.rmx,ls.rmx+rs.sum);\n}\nvoid build(int p,int l,int r){\n\tt[p].l=l,t[p].r=r;t[p].rmx=t[p].sum=-1;\n\tint mid=l+r>>1;if(l==r)return ;\n\tbuild(p<<1,l,mid),build(p<<1|1,mid+1,r);\n\treturn update(t[p],t[p<<1],t[p<<1|1]);\n}\nvoid change(int p,int pos,int op){\n\tif(t[p].l==t[p].r)return t[p].rmx+=op,t[p].sum+=op,void();\n\tint mid=t[p].l+t[p].r>>1;change(p<<1|(pos>mid),pos,op);\n\treturn update(t[p],t[p<<1],t[p<<1|1]);\n}\nSeg ask(int p,int pos){\n\tif(t[p].r<=pos)return t[p];\n\tint mid=t[p].l+t[p].r>>1;Seg res;\n\tif(pos<=mid)return ask(p<<1,pos);\n\tupdate(res,ask(p<<1,pos),ask(p<<1|1,pos));\n\treturn res;\n}\nint main(){\n\tn=read(),k=read(),m=read();build(1,1,n+m);\n\tfor(int i=1;i<=m;i++){\n\t\tx=read(),y=read();\n\t\tint op=(vis[mp(x,y)]?-1:1),pos=y+abs(x-k);\n\t\tvis[mp(x,y)]+=op;change(1,pos,op);\n\t\top==1?s.insert(pos):s.erase(s.find(pos));\n\t\tif(!s.size()){puts(\"0\");continue;}\n\t\tint mx=max(n,*--s.end());Seg res=ask(1,mx);\n\t\tprintf(\"%d\\n\",max(0,mx-n+res.rmx));\n\t}\n\treturn 0;\n}\n````",
        "postTime": 1653266842,
        "uid": 232987,
        "name": "yangchenxiao",
        "ccfLevel": 9,
        "title": "CF1373G Pawns \u9898\u89e3"
    },
    {
        "content": "## \u9898\u89e3 CF1373F Pawns\n\n\u9996\u5148\uff0c\u53d1\u73b0\u201c\u632a\u52a8\u8fc7\u7a0b\u4e2d\uff0c\u6bcf\u4e2a\u683c\u5b50\u91cc**\u4e0d\u80fd\u6709\u591a\u4e2a\u68cb\u5b50**\u201d\uff0c\u8fd9\u4e2a\u8981\u6c42\u5e76\u4e0d\u91cd\u8981\uff1a\u6211\u4eec\u53ea\u8981\u4fdd\u8bc1\u4e86**\u6700\u7ec8\u5c40\u9762\u4e0b**\u6bcf\u4e2a\u683c\u5b50\u91cc\u4e0d\u8d85\u4e8e\u4e00\u4e2a\u68cb\u5b50\uff0c\u90a3\u5728\u79fb\u52a8\u7684\u8fc7\u7a0b\u4e2d\uff0c\u603b\u80fd\u5de7\u5999\u5730\u5b89\u6392\u5148\u540e\u987a\u5e8f\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u8fc7\u7a0b\u6ee1\u8db3\u6761\u4ef6\u3002\n\n\u5bf9\u6bcf\u4e2a\u68cb\u5b50$i$\uff0c\u5b83\u4f1a\u6709\u4e00\u4e2a\u81f3\u5c11\u8981\u8fbe\u5230\u7684$y$\u5750\u6807\uff0c\u4e0d\u59a8\u8bbe\u4e3a$a_i$\u3002\u5bb9\u6613\u53d1\u73b0\uff1a$a_i=y_i+|x_i-k|$\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8e\u4efb\u610f$j\\geq a_i$\uff0c\u68cb\u5b50$i$\u6700\u7ec8\u79fb\u52a8\u5230$(k,j)$\u90fd\u662f\u5408\u6cd5\u7684\u3002\n\n\u8bbe\u7b54\u6848\u4e3a$s$\u3002\u6709\u8fd9\u6837\u4e00\u4e2a\u6bd4\u8f83\u81ea\u7136\u7684\u7ed3\u8bba\uff1a$s$\u53ef\u884c\uff0c\u5f53\u4e14\u4ec5\u5f53$\\forall j\\in\\{a_i\\}$\uff0c\u3010$a_i\\geq j$\u7684$i$\u7684\u6570\u91cf\u3011\u5c0f\u4e8e\u7b49\u4e8e\u3010$s-j+1$\u3011\u3002\u5982\u679c$s\\geq \\max\\{a_i\\}$\uff0c\u5219\u8fd9\u4e2a\u6761\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u8868\u8ff0\u4e3a\uff1a$\\forall j\\in[1,s]$\uff0c......\u3002\n\n\u8fd9\u4e2a\u7ed3\u8bba\uff0c\u53ef\u4ee5\u7528Hall\u5b9a\u7406\u6765\u8bc1\u660e\uff1a\u628a\u6bcf\u4e2a\u68cb\u5b50$i$\u770b\u505a\u4e8c\u5206\u56fe\u5de6\u90e8\u7684\u70b9\uff0c\u6bcf\u4e2a\u683c\u5b50$j$\u770b\u505a\u4e8c\u5206\u56fe\u53f3\u90e8\u7684\u70b9\u3002\u4ece$i$\u5411\u6240\u6709$j\\in[a_i,s]$\u8fde\u8fb9\u3002\u90a3\u4e48\u5b58\u5728\u5b8c\u7f8e\u5339\u914d\uff0c\u5f53\u4e14\u4ec5\u5f53\u5bf9\u5de6\u8fb9\u7684\u4efb\u610f\u4e00\u4e2a\u70b9\u96c6$S$\uff0c\u53f3\u8fb9\u201c\u4e0e$S$\u91cc\u81f3\u5c11\u4e00\u4e2a\u70b9\u76f8\u90bb\u201d\u7684\u70b9\u7684\u6570\u91cf\u5927\u4e8e\u7b49\u4e8e$|S|$\u3002\u8fd9\u4e0e\u6211\u4eec\u7684\u7ed3\u8bba\u662f\u7b49\u4ef7\u7684\u3002\n\n\u5f53\u7136\uff0c\u73b0\u5728\u6211\u4eec\u8fd8\u4e0d\u77e5\u9053$s$\u7684\u503c\uff0c\u8fd9\u662f\u6211\u4eec\u8981\u6c42\u51fa\u7684\u3002\u5bf9\u6240\u6709$j\\in[1,2n]$\uff0c\u6211\u4eec\u8bb0$f(j)$\u8868\u793a\u3010$a_i\\geq j$\u7684$i$\u7684\u6570\u91cf\u3011\u3002\u6839\u636e\u524d\u9762\u7684\u8ba8\u8bba\uff0c\u4e00\u4e2a$s$ ($s\\geq\\max\\{a_i\\}$)\u80fd\u4f5c\u4e3a\u7b54\u6848\uff0c\u5f53\u4e14\u4ec5\u5f53$\\forall j\\in[1,s]:f(j)\\leq s-j+1$\u3002\u79fb\u9879\u5f97\uff1a$s\\geq f(j)+j-1$\u3002\u53c8\u56e0\u4e3a\u5bf9\u4e8e$j\\in(\\max\\{a_i\\},s]$\uff0c$f(j)+j-1$\u4e00\u5b9a\u5c0f\u4e8e$s$\uff0c\u6240\u4ee5\u4e0d\u7528\u8003\u8651\u4ed6\u4eec\u3002\u6211\u4eec\u53ea\u8981\u5bf9$j\\in[1,\\max\\{a_i\\}]$\uff0c\u67e5\u8be2$f(j)+j-1$\u7684**\u533a\u95f4\u6700\u5927\u503c**\u5373\u53ef\u3002\n\n\u5f53\u65b0\u52a0\u5165\u4e00\u4e2a$a_i$\u65f6\uff0c\u9020\u6210\u7684\u5f71\u54cd\u662f\uff0c\u5bf9$j\\in[1,a_i]$\u8fd9\u4e2a\u533a\u95f4\uff0c\u6240\u6709$f(j)$\u4f1a\u52a0$1$\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u652f\u6301**\u533a\u95f4\u52a0**\u3002\u5bf9$\\max\\{a_i\\}$\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a$\\texttt{multiset}$\u7ef4\u62a4\uff0c\u6bd4\u8f83\u7b80\u5355\u3002\n\n\u603b\u7ed3\u6765\u8bf4\uff0c\u6211\u4eec\u4e3b\u8981\u9700\u8981\u7ef4\u62a4\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u652f\u6301\u533a\u95f4\u52a0\u3001\u67e5\u8be2\u533a\u95f4\u6700\u5927\u503c\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7ebf\u6bb5\u6811\u7684\u503c\u57df\uff08\u4e5f\u5c31\u662f$\\max\\{a_i\\}$\u7684\u7406\u8bba\u6700\u5927\u503c\uff09\uff0c\u662f$2n$\u800c\u4e0d\u662f$n$\u3002\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n//problem:CF1373G\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define pb push_back\n#define mk make_pair\n#define lob lower_bound\n#define upb upper_bound\n#define fi first\n#define se second\n#define SZ(x) ((int)(x).size())\n\ntypedef unsigned int uint;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int,int> pii;\n\ntemplate<typename T>inline void ckmax(T& x,T y){x=(x>y?x:y);}\n\nconst int MAXN=4e5;\nint n,K,m;\n\nstruct SegmentTree{\n\tint maxv[MAXN*5+5],tag[MAXN*4+5];\n\tvoid push_up(int p){\n\t\tmaxv[p]=max(maxv[p<<1],maxv[p<<1|1]);\n\t}\n\tvoid build(int p,int l,int r){\n\t\tif(l==r){\n\t\t\tmaxv[p]=l-1;\n\t\t\treturn;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tbuild(p<<1,l,mid);\n\t\tbuild(p<<1|1,mid+1,r);\n\t\tpush_up(p);\n\t}\n\tvoid upd(int p,int v){\n\t\ttag[p]+=v;\n\t\tmaxv[p]+=v;\n\t}\n\tvoid push_down(int p){\n\t\tif(tag[p]){\n\t\t\tupd(p<<1,tag[p]);\n\t\t\tupd(p<<1|1,tag[p]);\n\t\t\ttag[p]=0;\n\t\t}\n\t}\n\tvoid range_add(int p,int l,int r,int ql,int qr,int v){\n\t\tif(ql<=l && qr>=r){\n\t\t\tupd(p,v);\n\t\t\treturn;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tpush_down(p);\n\t\tif(ql<=mid)\n\t\t\trange_add(p<<1,l,mid,ql,qr,v);\n\t\tif(qr>mid)\n\t\t\trange_add(p<<1|1,mid+1,r,ql,qr,v);\n\t\tpush_up(p);\n\t}\n\tint query_max(int p,int l,int r,int ql,int qr){\n\t\tif(ql<=l && qr>=r)\n\t\t\treturn maxv[p];\n\t\tint mid=(l+r)>>1;\n\t\tpush_down(p);\n\t\tint res=0;\n\t\tif(ql<=mid)\n\t\t\tres=query_max(p<<1,l,mid,ql,qr);\n\t\tif(qr>mid)\n\t\t\tckmax(res,query_max(p<<1|1,mid+1,r,ql,qr));\n\t\tpush_up(p);\n\t\treturn res;\n\t}\n\tSegmentTree(){}\n}T;\n\nint main() {\n\tcin>>n>>K>>m;\n\tT.build(1,1,n*2);\n\tset<pii>s1;\n\tmultiset<int>s2;\n\ts2.insert(n+1);\n\tfor(int i=1;i<=m;++i){\n\t\tint x,y;cin>>x>>y;\n\t\tif(!s1.count(mk(x,y))){\n\t\t\t//\u52a0\u5165\n\t\t\ts1.insert(mk(x,y));\n\t\t\tint p=y+abs(x-K);\n\t\t\t//cout<<\"ins \"<<p<<endl;\n\t\t\ts2.insert(p);\n\t\t\tint maxp=(*s2.rbegin());\n\t\t\tT.range_add(1,1,n*2,1,p,1);\n\t\t\tcout<<T.query_max(1,1,n*2,1,maxp)-n<<endl;\n\t\t}\n\t\telse{\n\t\t\t//\u5220\u9664\n\t\t\ts1.erase(mk(x,y));\n\t\t\tint p=y+abs(x-K);\n\t\t\t//cout<<\"del \"<<p<<endl;\n\t\t\ts2.erase(s2.find(p));\n\t\t\tint maxp=(*s2.rbegin());\n\t\t\tT.range_add(1,1,n*2,1,p,-1);\n\t\t\tcout<<T.query_max(1,1,n*2,1,maxp)-n<<endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1594178468,
        "uid": 100674,
        "name": "duyi",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1373G \u3010Pawns\u3011"
    }
]