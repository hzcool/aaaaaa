[
    {
        "content": "### $\\text{Difficulty : 2400}$\n---\n### \u89e3\u9898\u601d\u8def\uff1a\n\n\u9996\u5148\u7edf\u8ba1\u51fa\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u88ab\u7ecf\u8fc7\u7684\u6b21\u6570\u3002\u7531\u4e8e\u7aef\u70b9\u7684\u7279\u6b8a\u6027\uff0c\u5c06\u6bcf\u4e00\u4e2a\u7aef\u70b9\u7684\u7ecf\u8fc7\u6b21\u6570\u4e58 $2$\uff0c\u65b9\u4fbf\u5904\u7406\u3002\u8ba4\u4e3a\u5728\u7aef\u70b9\u4e4b\u5916\u6709\u4e00\u4e2a\u7279\u6b8a\u70b9\uff0c\u9047\u5230\u8fd9\u4e2a\u70b9\u65f6\u8f6c\u5411\uff0c\u5e76\u4e14\u4e0d\u4f1a\u4ea7\u751f\u8ddd\u79bb\u3002\n\n\u5bf9\u4e8e\u8d77\u70b9\u548c\u7ec8\u70b9\u4e0d\u540c\u7684\u5e73\u51e1\u60c5\u51b5\uff0c\u6574\u4e2a\u8def\u5f84\u7684\u60c5\u51b5\u5176\u5b9e\u975e\u5e38\u6e05\u6670\uff0c\u6b64\u65f6\u6709\u4e14\u4ec5\u6709\u4e24\u79cd\u6570\u503c\u51fa\u73b0\u3002\u4e00\u79cd\u60c5\u51b5\u662f\u4ece\u4e24\u6bb5\u5f00\u59cb\u7684\u82e5\u5e72\u957f\u5ea6\u7ecf\u8fc7\u6b21\u6570\u6bd4\u4e2d\u95f4\u7684\u82e5\u5e72\u591a\uff0c\u6b64\u65f6\u662f\u4ece\u4e00\u4e2a\u53d8\u5316\u70b9\u5411\u9760\u8fd1\u7684\u4e00\u7aef\u8d70\u5230\u53e6\u4e00\u4e2a\u53d8\u5316\u70b9\u3002\u53e6\u4e00\u79cd\u5219\u76f8\u53cd\uff0c\u662f\u4ece\u4e00\u4e2a\u53d8\u5316\u70b9\u8d70\u5230\u8ddd\u79bb\u8f83\u8fdc\u7684\u90a3\u4e00\u4e2a\u7aef\u70b9\u8fd4\u56de\u6216\u8005\u76f4\u63a5\u6ca1\u6709\u7ecf\u8fc7\u7aef\u70b9\u3002\n\n\u6362\u8a00\u4e4b\uff0c\u5c31\u662f\u4e00\u6761\u8def\u5f84\u7684\u7ecf\u8fc7\u6b21\u6570\u6070\u597d\u7b49\u4e8e\u8fde\u4e2a\u7aef\u70b9\u4e2d\u7ecf\u8fc7\u6b21\u6570\u8f83\u5c11\u7684\u90a3\u4e00\u4e2a\u3002\n\n---\n\u7279\u6b8a\u7684\uff0c\u5982\u679c\u8d77\u70b9\u548c\u7ec8\u70b9\u4e00\u6837\uff0c\u6b64\u65f6\u8def\u5f84\u65e0\u6cd5\u88ab\u786e\u5b9a\uff0c\u8868\u73b0\u4e3a\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u7ecf\u8fc7\u6b21\u6570\u90fd\u76f8\u7b49\u3002\u7531\u4e8e\u6709\u4e14\u4ec5\u6709\u4e00\u6761\u8def\u5f84\u88ab\u7ecf\u8fc7\u7684\u6b21\u6570\u6bd4\u522b\u7684\u5c11\u4e00\u6b21\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u5e94\u5f53\u8f93\u51fa $-1$\uff0c\u4f46\u5982\u679c\u6240\u6709\u7684\u8def\u5f84\u7684\u957f\u5ea6\u90fd\u76f8\u7b49\uff0c\u4e5f\u662f\u53ef\u4ee5\u786e\u5b9a\u8def\u5f84\u957f\u5ea6\u7684\u3002\n\n---\n\u6ce8\u610f\u5f00 $\\text{long long}$\u3002\n\n---\n\n\u5c31\u8fd9\u4e5f $\\text{2400}$\uff1f\n\n---\n### \u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n#define int long long\nint n,m,p[200005],x,a[200005],dis[200005],ans;\nbool check(int *c){\n\tfor(int i=2;i<=n;i++)\n\tif(c[i]!=c[i-1])\n\treturn 0;\n\treturn 1;\n}\nsigned main(){\n\tscanf(\"%lld\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%lld\",&a[i]);\n\t\tdis[i]=a[i]-a[i-1];\n\t}\n\tdis[1]=dis[2];\n\tscanf(\"%lld\",&m);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%lld\",&x);\n\t\tp[x]++;\n\t}\n\tp[1]*=2;p[n]*=2;\n\tif(check(p)){\n\t\tif(check(dis))printf(\"%lld\\n\",p[1]*(n-1)*dis[1]-dis[1]);\n\t\telse printf(\"-1\\n\");\n\t\treturn 0;\n\t}\n\tfor(int i=2;i<=n;i++)\n\tans+=dis[i]*min(p[i-1],p[i]);\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1665190667,
        "uid": 223559,
        "name": "qxp101",
        "ccfLevel": 6,
        "title": "CF534E Berland Local Positioning System \u9898\u89e3"
    },
    {
        "content": "\u5047\u8bbe\u8f66\u4ece\u70b91\u5411\u53f3\uff08\u4f4d\u7f6e\u9012\u589e\u7684\u65b9\u5411\uff09\u5f00\u51fa\uff0c\u884c\u9a76\u4e86$m$\u4e2a\u7ad9\u70b9\u540e\u505c\u6b62\u3002\u8bb0\u5f55\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u5230\u8fbe\u6b21\u6570$c$\u3002\u5982\u679c$b$\u4e0e\u8f93\u5165\u7684\u8be2\u95ee\u5e8f\u5217\u4e2d\u6bcf\u4e2a\u6570\u5b57\u51fa\u73b0\u7684\u6b21\u6570$c$\u76f8\u540c\uff0c\u5219\u672c\u6b21\u8f66\u7a0b\u7684\u8ddd\u79bb\u73c2\u4ee5\u6210\u4e3a\u7b54\u6848\u3002\n\n\u7528\u4e24\u4e2a\u6307\u9488$l$\uff0c$r$\u4ee3\u8868\u4e00\u6b21\u8f66\u7a0b\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\u3002\u6bcf\u6b21\u8ba1\u7b97\u5b8c\u5f53\u524d\u8f66\u7a0b\u540e\uff0c\u5c31\u5c06$l$\uff0c$r$\u5404\u81ea\u5f80\u5bf9\u5e94\u7684\u65b9\u5411\u632a\u4e00\u6b65\u5e76\u8fdb\u884c\u76f8\u5173\u4fe1\u606f\u7684\u66f4\u65b0\u3002\u65f6\u95f4\u590d\u6742\u5ea6$O(N)$\n```cpp\nint n, m, a[N], cnt, b[N], c[N];\nstruct Pos\n{\n    int p, d;\n};\nvoid move(Pos &p)\n{\n    if (p.p == 1 && p.d == -1)\n        p.d = 1;\n    if (p.p == n && p.d == 1)\n        p.d = -1;\n    p.p += p.d;\n}\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin >> n;\n    ll cur = 0;\n    for (int i = 1; i <= n; i++)\n        cin >> a[i];\n    int t1;\n    cin >> m;\n    for (int i = 1; i <= m; i++)\n        cin >> t1, ++b[t1];\n    Pos l{1, 1}, r{1, 1};\n    ++c[1];\n    for (int i = 1; i <= m - 1; i++)\n    {\n        int last = r.p;\n        move(r);\n        ++c[r.p];\n        cur += abs(a[last] - a[r.p]);\n    }\n    for (int i = 1; i <= n; i++)\n        if (b[i] != c[i])\n            ++cnt;\n    ll ans = -1;\n    for (int i = 1; i <= n * 2; i++)\n    {\n        if (!cnt)\n        {\n            if (ans == -1 || ans == cur)\n                ans = cur;\n            else\n            {\n                cout << -1 << endl;\n                return 0;\n            }\n        }\n        if (--c[l.p] == b[l.p])\n            --cnt;\n        else if (c[l.p] + 1 == b[l.p])\n            ++cnt;\n        int ll = l.p, rr = r.p;\n        move(l);\n        move(r);\n        cur -= abs(a[l.p] - a[ll]);\n        cur += abs(a[r.p] - a[rr]);\n        if (++c[r.p] == b[r.p])\n            --cnt;\n        else if (c[r.p] - 1 == b[r.p])\n            ++cnt;\n    }\n    cout << ans << endl;\n    return 0;\n}\n```",
        "postTime": 1581762113,
        "uid": 92602,
        "name": "SIGSEGV",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF534E \u3010Berland Local Positioning System\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\n\n\u9898\u76ee\u4fdd\u8bc1\u4e00\u5b9a\u6709\u8def\u5f84\u4e86,\u4ee4\u6bcf\u4e2a\u70b9\u7ecf\u8fc7\u7684\u6b21\u6570\u4e3abi,\u7279\u522b\u7684:\u9996\u5c3e\u7aef\u70b9\u662f\u8bfb\u5165\u7684\u4e24\u500d \n\n\u90a3\u4e48\u8fde\u63a5i,j\u7684\u8fb9\u7684\u7ecf\u8fc7\u6b21\u6570\u5c31\u662fmin(bi,bj)\n\n\u6211\u4eec\u53d1\u73b0,\u5f53\u4e14\u4ec5\u5f53\u9996\u5c3e\u90fd\u5b58\u5728\u65f6\uff0c\u5e76\u4e14\u8fb9\u6743\u4e0d\u662f\u4e24\u4e24\u76f8\u540c\u65f6\u624d\u4f1a\u662f-1 \n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ninline ll read()\n{\n\tll s=0; bool f=0; char ch=' ';\n\twhile(!isdigit(ch)) {f|=(ch=='-'); ch=getchar();}\n\twhile(isdigit(ch)) {s=(s<<3)+(s<<1)+(ch^48); ch=getchar();}\n\treturn (f)?(-s):(s);\n}\n#define R(x) x=read()\ninline void write(ll x)\n{\n\tif(x<0) {putchar('-'); x=-x;}\n\tif(x<10) {putchar(x+'0'); return;}\n\twrite(x/10); putchar((x%10)+'0');\n}\n#define W(x) write(x),putchar(' ')\n#define Wl(x) write(x),putchar('\\n')\nconst int N=200005;\nint n,m,a[N],dis[N],b[N];\nint main()\n{\n\tint i,x; bool limit=1,flg; ll jyl=0;\n\tR(n); a[0]=0; for(i=1;i<=n;i++) R(a[i]),dis[i]=a[i]-a[i-1];\n\tR(m); for(i=1;i<=m;i++) R(x),b[x]++,b[x]+=(x==1||x==n)?1:0;\n\tfor(i=2;i<=n;i++) limit&=(b[i]==b[i-1]);\n\tif(limit)\n\t{\n\t\tflg=1;\n\t\tfor(i=2;i<=n-1&&flg;i++) flg&=(dis[i]==dis[i+1]);\n\t\tjyl=(ll)(1ll*(a[n]-a[1])*b[1]-dis[2]);\n\t\tWl((flg)?jyl:-1);\n\t}\n\telse\n\t{\n\t\tfor(i=2;i<=n;i++) jyl=1ll*(jyl+1ll*dis[i]*min(b[i],b[i-1]));\n\t\tWl(jyl);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1573107246,
        "uid": 140492,
        "name": "sunben",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF534E \u3010Berland Local Positioning System\u3011"
    }
]