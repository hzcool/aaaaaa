[
    {
        "content": "\u9996\u5148\u6309\u4f4d\u7f6e\u5947\u5076\u5206\u7c7b\uff0c\u53ea\u6709\u5947\u5076\u6027\u76f8\u540c\u624d\u4f1a\u76f8\u649e\u3002\n\n\u4e0d\u8003\u8651\u53cd\u5f39\u7684\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u8bb0 $\\texttt R$ \u4e3a $\\texttt ($\uff0c$\\texttt L$ \u4e3a $\\texttt )$\uff0c\u90a3\u4e48\u78b0\u649e\u60c5\u51b5\u7b49\u4e8e\u62ec\u53f7\u5339\u914d\u60c5\u51b5\uff0c\u7528\u6808\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u8003\u8651\u4ece $x=0$ \u53cd\u5f39\uff0c\u90a3\u4e48\u5982\u679c\u5f53\u524d\u51fa\u73b0\u4e86\u4e00\u4e2a\u5931\u914d\u7684\u53f3\u62ec\u53f7\uff0c\u5b83\u4e0d\u53ef\u80fd\u4e0e\u524d\u9762\u7684\u62ec\u53f7\u5339\u914d\uff0c\u7b49\u4ef7\u4e8e\u5750\u6807\u53d8\u4e3a $-x$ \u5e76\u5411\u53f3\u8d70\u3002\u56e0\u6b64\u53ef\u4ee5\u7ffb\u8f6c\u62ec\u53f7\u5e76\u6539\u53d8\u5750\u6807\uff0c\u5165\u6808\u3002\n\n\u8003\u8651\u4ece $x=m$ \u53cd\u5f39\uff0c\u663e\u7136\u662f\u8fdb\u884c\u5b8c\u6240\u6709\u62ec\u53f7\u5339\u914d\u540e\u5269\u4e0b\u7684 $\\texttt ($ \u6709\u4e00\u90e8\u5206\u53cd\u5f39\uff0c\u4e14\u53cd\u5f39\u7684\u6070\u597d\u4e3a\u5269\u4e0b\u7684\u4e00\u534a\u3002\u90a3\u4e48\u540c\u6837\u5750\u6807\u53d8\u4e3a $2m-x$ \u518d\u7ffb\u8f6c\u62ec\u53f7\u5373\u53ef\u3002\n\n```cpp\nstruct Q\n{\n\tint u,v,w;//\u5750\u6807\uff0c\u662f\u5426\u4e3a L\uff0c\u539f\u4e0b\u6807\n\tbool operator<(const Q &o) const {return u<o.u;}\n};\nvoid cal()\n{\n\tsort(a+1,a+n+1);tp=0;\n\tfor (i=1;i<=n;i++) if (a[i].v)\n\t{\n\t\tif (!tp)\n\t\t{\n\t\t\ta[i].u=-a[i].u;a[i].v=0;\n\t\t\tst[++tp]=a[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tans[a[i].w]=ans[st[tp].w]=a[i].u-st[tp].u>>1;\n\t\t\t--tp;\n\t\t}\n\t}\n\telse\n\t{\n\t\tst[++tp]=a[i];\n\t}\n\tif (tp<=1) return;\n\tif (tp&1) {for (i=1;i<tp;i++) st[i]=st[i+1];--tp;}\n\tfor (i=2;i<=tp;i+=2) st[i].u=2*m-st[i].u;\n\tfor (i=1;i<=tp;i+=2) ans[st[i].w]=ans[st[i+1].w]=st[i+1].u-st[i].u>>1;\n}\n```",
        "postTime": 1621184861,
        "uid": 29826,
        "name": "SSerxhs",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1525C \u3010Robot Collisions\u3011"
    },
    {
        "content": "[\u4f20\u9001\u95e8](http://codeforces.com/problemset/problem/1525/C)\n## \u9898\u76ee\u5927\u610f\n\u5728\u4e00\u6761\u6570\u8f74\u4e0a\u6709 $n$ \u4e2a\u673a\u5668\u4eba\uff0c\u6bcf\u4e2a\u673a\u5668\u4eba\u6709\u4e00\u4e2a\u521d\u59cb\u7684\u671d\u5411\uff0c\u4e4b\u540e\u6bcf\u4e00\u79d2\uff0c\u5b83\u4f1a\u5411\u7740\u5b83\u671d\u5411\u7684\u65b9\u5411\u8d70\u4e00\u4e2a\u5355\u4f4d\uff0c\u5982\u679c\u5230\u8fbe\u4e86 $0$ \u6216\u8005 $m$ \u90a3\u4e48\u5c31\u4f1a\u7acb\u5373\u6389\u5934\u3002\u5982\u679c\u591a\u4e2a\u673a\u5668\u4eba\u5728\u540c\u4e00\u6574\u6570\u70b9\u76f8\u9047\uff0c\u90a3\u4e48\u5b83\u4eec\u5c31\u4f1a\u78b0\u649e\u70b8\u6389\uff0c\u5728\u6b64\u4e4b\u540e\u5c31\u4e0d\u4f1a\u4e0e\u5176\u4ed6\u673a\u5668\u4eba\u78b0\u649e\u4e86\u3002\u73b0\u9700\u8981\u4f60\u6c42\u51fa\u6bcf\u4e2a\u673a\u5668\u4eba\u6700\u65e9\u5728\u7b2c\u51e0\u65f6\u523b\u70b8\u6389\uff0c\u5982\u679c\u4e0d\u4f1a\uff0c\u5219\u8f93\u51fa `-1`\u3002\n\n## Solution\n\u9996\u5148\u662f\u6ce8\u610f\u4e00\u70b9\uff1a\u5f53\u4e14\u4ec5\u5f53\u4e24\u4e2a\u673a\u5668\u4eba\u5947\u5076\u6027\u76f8\u540c\u65f6\u624d\u4f1a\u76f8\u649e\uff0c\u5e76\u4e14\u6ca1\u6709\u610f\u5916\u662f\u4e00\u5b9a\u4f1a\u76f8\u649e\u7684\u3002\n\n\u53ef\u4ee5\u5f88\u7b80\u5355\u5730\u8bc1\u4e00\u4e0b\uff0c\u6bcf\u4e00\u6b21\u79fb\u52a8\u6bcf\u4e00\u4e2a\u673a\u5668\u4eba\u7684\u4f4d\u7f6e\u5947\u5076\u6027\u90fd\u4f1a\u6539\u53d8\uff0c\u5982\u679c\u4e24\u4e2a\u673a\u5668\u4eba\u7684\u5947\u5076\u6027\u4e0d\u540c\uff0c\u90a3\u4e48\u4efb\u610f\u65f6\u523b\u5176\u5947\u5076\u6027\u90fd\u662f\u4e0d\u540c\u7684\uff0c\u4e5f\u5c31\u4e0d\u53ef\u80fd\u540c\u65f6\u5728\u4e00\u4e2a\u6574\u6570\u70b9\u76f8\u9047\u4e86\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u70b9\u8fdb\u884c\u5947\u5076\u5206\u7c7b\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u7ec4\uff0c\u6211\u4eec\u8003\u8651\u673a\u5668\u4eba\u76f8\u649e\uff0c\u53ef\u4ee5\u53d1\u73b0\u5982\u679c\u4e24\u4e2a\u673a\u5668\u4eba\u662f\u76f8\u5bf9\u7684\u5e76\u4e14\u4e2d\u95f4\u6ca1\u6709\u5176\u4ed6\u673a\u5668\u4eba\uff0c\u90a3\u4e48\u5fc5\u5b9a\u662f\u8fd9\u4e24\u4e2a\u673a\u5668\u4eba\u76f8\u649e\u2026\u2026\u7b49\u7b49\uff0c\u8fd9\u4e0d\u5c31\u662f\u62ec\u53f7\u5339\u914d\u4e48\u3002\u6240\u4ee5\u7528\u4e00\u4e2a\u6808\u7ef4\u62a4\u4e00\u4e0b\u5c31\u53ef\u4ee5\u628a\u6240\u6709\u76f8\u5bf9\u7684\u673a\u5668\u4eba\u5904\u7406\u6389\uff0c\u6700\u540e\u53ea\u5269\u4e0b\uff1a`L...LR...R` \u8fd9\u6837\u7684\u671d\u5411\uff0c\u6b64\u65f6\uff0c\u6211\u4eec\u5bf9\u4e24\u8fb9\u5206\u522b\u8fdb\u884c\u5904\u7406\uff0c\u5bf9\u4e8e\u5411\u5de6\u7684\uff0c\u6700\u5de6\u8fb9\u8f6c\u5411\u540e\u5fc5\u5b9a\u548c\u5de6\u8fb9\u7b2c\u4e8c\u4e2a\u76f8\u649e\uff0c\u5de6\u8fb9\u7b2c\u4e09\u4e2a\u5fc5\u5b9a\u8f6c\u5411\u540e\u548c\u5de6\u8fb9\u7b2c\u56db\u4e2a\u76f8\u649e\u2026\u2026\u53f3\u8fb9\u4e5f\u662f\u540c\u7406\u3002\n\n\u8fd9\u6837\u5904\u7406\u5b8c\u540e\uff0c\u53ef\u80fd\u4f1a\u5269\u4e0b $1$ \u4e2a\u6216\u8005 $2$ \u4e2a\u673a\u5668\u4eba\uff0c\u5982\u679c\u662f $1$ \u4e2a\uff0c\u90a3\u4e48\u6ca1\u6709\u4eba\u4e0e\u4e4b\u76f8\u649e\uff0c\u5219\u7b54\u6848\u4e3a `-1`\uff0c\u5426\u5219\uff0c\u5269\u4e0b $2$ \u4e2a\u671d\u5411\u662f\u8fd9\u6837\u7684\uff1a`LR`\uff0c\u8ba9\u5b83\u4eec\u4e24\u4e2a\u8d70\u5230\u5934\u518d\u8f6c\u5411\u56de\u6765\u76f8\u649e\u5373\u53ef\u3002\n\n## Code\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define inf 1<<30\n#define int long long\nusing namespace std;\nconst int MAXN=3e5+10;\nstruct node{\n\tint pos,id;\n\tchar dir;\n\tnode(){}\n\tnode(int _pos,int _id,char _dir){\n\t\tpos=_pos;id=_id;dir=_dir;\n\t}\n\tbool friend operator<(node a,node b){\n\t\treturn a.pos<b.pos;\n\t}\n}odd[MAXN],eve[MAXN],bas[MAXN];\nint stk[MAXN],top,ans[MAXN];\nint bin[MAXN],hed;\nvoid solve(){\n\tint n,m,ocnt=0,ecnt=0;\n\tscanf(\"%lld%lld\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%lld\",&bas[i].pos),bas[i].id=i;\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\" %c\",&bas[i].dir);\n\tsort(bas+1,bas+1+n);//\u8bb0\u5f97\u6392\u5e8f\n\tfor(int i=1;i<=n;i++){\n\t\tif(bas[i].pos&1) odd[++ocnt]=bas[i];\n\t\telse eve[++ecnt]=bas[i];\n\t}//\u5947\u5076\u5206\u7ec4\n\t\n\ttop=0;hed=0;\n\tfor(int i=1;i<=ocnt;i++){\n\t\tif(odd[i].dir=='R') stk[++top]=i;\n\t\telse{\n\t\t\tif(!top) bin[++hed]=i;//\u5982\u679c\u6808\u7a7a\uff0c\u8bf4\u660e\u8fd9\u4e2a\u5411\u5de6\u7684\u662f\u591a\u51fa\u6765\u7684\uff0c\u5b58\u7740\u5c31\u884c\n\t\t\telse{\n\t\t\t\tint j=stk[top--];\n\t\t\t\tans[odd[i].id]=ans[odd[j].id]=(odd[i].pos-odd[j].pos)/2;\n\t\t\t}\n\t\t}\n\t}//\u505a\u62ec\u53f7\u5339\u914d\uff0c\u628a\u76f8\u5bf9\u7684\u6d88\u53bb\uff0c\u53d8\u6210 L...LR...R \u7684\u5f62\u5f0f\n\tfor(int i=1;i<hed;i+=2){\n\t\tans[odd[bin[i]].id]=ans[odd[bin[i+1]].id]=(odd[bin[i+1]].pos-odd[bin[i]].pos)/2+odd[bin[i]].pos;\n\t}//\u5904\u7406\u5411\u5de6\u591a\u51fa\u6765\u7684\u90e8\u5206\uff0c\u4e24\u4e24\u76f8\u649e\n\tfor(int i=top;i>1;i-=2){\n\t\tans[odd[stk[i]].id]=ans[odd[stk[i-1]].id]=(odd[stk[i]].pos-odd[stk[i-1]].pos)/2+m-odd[stk[i]].pos;\n\t}//stk \u4e2d\u591a\u51fa\u6765\u7684\u5c31\u662f\u5411\u53f3\u591a\u4f59\u7684\uff0c\u4e5f\u662f\u4e00\u6837\u5904\u7406\n\tif(hed%2&&top%2){//\u5982\u679c\u4e24\u4e2a\u90fd\u6709 1 \u4e2a\u5269\u4f59\uff0c\u90a3\u4e48\u628a\u5b83\u4eec\u7ee7\u7eed\u649e\n\t\tans[odd[bin[hed]].id]=ans[odd[stk[1]].id]=(odd[bin[hed]].pos+m-odd[stk[1]].pos+m)/2;\n\t}else if(hed%2) ans[odd[bin[hed]].id]=-1;\n\telse if(top%2) ans[odd[stk[1]].id]=-1;//\u5426\u5219\u7b54\u6848\u5c31\u662f -1\n\t/*                \u5904\u7406\u5947\u6570                  */\n\ttop=0;hed=0;\n\tfor(int i=1;i<=ecnt;i++){\n\t\tif(eve[i].dir=='R') stk[++top]=i;\n\t\telse{\n\t\t\tif(!top) bin[++hed]=i;\n\t\t\telse{\n\t\t\t\tint j=stk[top--];\n\t\t\t\tans[eve[i].id]=ans[eve[j].id]=(eve[i].pos-eve[j].pos)/2;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<hed;i+=2){\n\t\tans[eve[bin[i]].id]=ans[eve[bin[i+1]].id]=(eve[bin[i+1]].pos-eve[bin[i]].pos)/2+eve[bin[i]].pos;\n\t}for(int i=top;i>1;i-=2){\n\t\tans[eve[stk[i]].id]=ans[eve[stk[i-1]].id]=(eve[stk[i]].pos-eve[stk[i-1]].pos)/2+m-eve[stk[i]].pos;\n\t}if(hed%2&&top%2){\n\t\tans[eve[bin[hed]].id]=ans[eve[stk[1]].id]=(eve[bin[hed]].pos+m-eve[stk[1]].pos+m)/2;\n\t}else if(hed%2) ans[eve[bin[hed]].id]=-1;\n\telse if(top%2) ans[eve[stk[1]].id]=-1;\n\t//\u548c\u5947\u6570\u5b8c\u5168\u4e00\u6837\n\t/*                \u5904\u7406\u5076\u6570                  */\n\tfor(int i=1;i<=n;i++)\n\t\tprintf(\"%lld \",ans[i]);\n\tprintf(\"\\n\");\n}\nsigned main()\n{\n\tint T;\n\tfor(scanf(\"%lld\",&T);T--;)\n\t\tsolve();\n}\n```",
        "postTime": 1621391279,
        "uid": 292315,
        "name": "ZCETHAN",
        "ccfLevel": 7,
        "title": "CF1525C Robot Collisions"
    },
    {
        "content": "\u663e\u7136\u5750\u6807\u5947\u5076\u6027\u4e0d\u540c\u7684\u673a\u5668\u4eba\u4e0d\u4f1a\u76f8\u649e\u3002\n\n\u90a3\u4e48\u6309\u7167\u5750\u6807\u5947\u5076\u6027\u5206\u4e3a\u4e24\u7ec4\u3002\u5bf9\u4e8e\u6bcf\u4e00\u7ec4\uff0c\u6309\u5750\u6807\u6392\u5e8f\uff0c\u7136\u540e\u7528\u6808\u6765\u7ef4\u62a4\u76f8\u649e\uff0c\u7c7b\u4f3c\u62ec\u53f7\u5339\u914d\u7684\u8fc7\u7a0b\uff0c\u628a\u5411\u53f3\u7684\u5f53\u6210\u662f\u5de6\u62ec\u53f7\uff0c\u5411\u5de6\u7684\u5f53\u6210\u662f\u53f3\u62ec\u53f7\uff0c\u6bcf\u4e00\u5bf9\u62ec\u53f7\u5c31\u662f\u4e00\u6b21\u76f8\u649e\u3002\n\n\u649e\u5b8c\u4e4b\u540e\u5269\u4e0b\u7684\u673a\u5668\u4eba\uff0c\u5fc5\u7136\u662f\u82e5\u5e72\u4e2a\u5411\u5de6\u7684\uff0c\u4ee5\u53ca\u82e5\u5e72\u4e2a\u5411\u53f3\u7684\u3002\n\n\u8fd9\u4e9b\u5411\u5de6\u7684\u4f1a\u4e0e\u5728\u9047\u5230\u5899\u4e4b\u540e\u53cd\u5411\uff0c\u7136\u540e\u4e0e\u5176\u4ed6\u5411\u5de6\u7684\u76f8\u649e\u3002\u5bf9\u4e8e\u5411\u53f3\u7684\u540c\u7406\u3002\n\n\u6700\u540e\u5411\u5de6\u7684\u81f3\u591a\u5269\u4e0b\u4e00\u4e2a\uff0c\u5411\u53f3\u7684\u81f3\u591a\u5269\u4e0b\u4e00\u4e2a\u3002\u82e5\u90fd\u5269\u4e0b\u4e00\u4e2a\uff0c\u90a3\u5c31\u518d\u649e\u4e00\u6b21\u3002\n\nAC \u4ee3\u7801\uff1a\uff08Golang\uff09\n\n```go\npackage main\n\nimport (\n\t\"bufio\"\n\t. \"fmt\"\n\t. \"os\"\n\t\"sort\"\n)\n\ntype robot struct {\n\tx, i  int\n\tright bool\n}\n\nfunc main() {\n\tin := bufio.NewReader(Stdin)\n\tout := bufio.NewWriter(Stdout)\n\tdefer out.Flush()\n\n\tvar T, n, m int\n\tvar dir string\n\tfor Fscan(in, &T); T > 0; T-- {\n\t\tFscan(in, &n, &m)\n\t\trobots := [2][]robot{}\n\t\tpos := make([]int, n)\n\t\tfor i := range pos {\n\t\t\tFscan(in, &pos[i])\n\t\t}\n\t\tfor i, x := range pos {\n\t\t\tFscan(in, &dir)\n\t\t\trobots[x&1] = append(robots[x&1], robot{x, i, dir == \"R\"})\n\t\t}\n\n\t\tans := make([]int, n)\n\t\tfor _, a := range robots {\n\t\t\tsort.Slice(a, func(i, j int) bool { return a[i].x < a[j].x })\n\t\t\tvar l, r []robot\n\t\t\tfor _, p := range a {\n\t\t\t\tif p.right {\n\t\t\t\t\tr = append(r, p)\n\t\t\t\t} else if len(r) == 0 {\n\t\t\t\t\tl = append(l, p)\n\t\t\t\t} else {\n\t\t\t\t\tq := r[len(r)-1]\n\t\t\t\t\tr = r[:len(r)-1]\n\t\t\t\t\tt := (p.x - q.x) / 2\n\t\t\t\t\tans[p.i] = t\n\t\t\t\t\tans[q.i] = t\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor len(l) > 1 {\n\t\t\t\tp, q := l[0], l[1]\n\t\t\t\tl = l[2:]\n\t\t\t\tt := (p.x + q.x) / 2\n\t\t\t\tans[p.i] = t\n\t\t\t\tans[q.i] = t\n\t\t\t}\n\t\t\tfor len(r) > 1 {\n\t\t\t\tp, q := r[len(r)-1], r[len(r)-2]\n\t\t\t\tr = r[:len(r)-2]\n\t\t\t\tt := (2*m - p.x - q.x) / 2\n\t\t\t\tans[p.i] = t\n\t\t\t\tans[q.i] = t\n\t\t\t}\n\t\t\tif len(l) == 1 && len(r) == 1 {\n\t\t\t\tp, q := l[0], r[0]\n\t\t\t\tt := (2*m - q.x + p.x) / 2\n\t\t\t\tans[p.i] = t\n\t\t\t\tans[q.i] = t\n\t\t\t}\n\t\t}\n\t\tfor _, t := range ans {\n\t\t\tif t == 0 {\n\t\t\t\tt = -1\n\t\t\t}\n\t\t\tFprint(out, t, \" \")\n\t\t}\n\t\tFprintln(out)\n\t}\n}\n```",
        "postTime": 1621263699,
        "uid": 266651,
        "name": "\u7075\u8336\u5c71\u827e\u5e9c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1525C \u3010Robot Collisions\u3011"
    }
]