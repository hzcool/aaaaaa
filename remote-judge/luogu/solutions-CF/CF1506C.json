[
    {
        "content": "\u6211\u4eec\u5bf9\u9898\u610f\u8fdb\u884c\u9002\u5f53\u8f6c\u5316\uff0c\u7531\u4e8e\u53ea\u80fd\u5728 a \uff0c b \u9996\u5c3e\u8fdb\u884c\u64cd\u4f5c\uff0c\u6240\u4ee5\u6700\u540e\u5f97\u5230\u7684\n\n\u80af\u5b9a\u662f a \uff0c b \u7684\u6700\u957f\u516c\u5171\u5b50\u4e32\uff0c\u6240\u4ee5\u6700\u5c11\u64cd\u4f5c\u5373\u4e3a a \u4e32\u7684\u957f\u5ea6\u52a0 b \u4e32\u957f\u5ea6\uff0c\n\n\u518d\u51cf\u53bb 2 \u500d\u7684\u6700\u957f\u516c\u5171\u5b50\u4e32\uff0c\u81f3\u4e8e\u6c42\u6700\u957f\u516c\u5171\u5b50\u4e32\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651 dp \uff0c\u6211\u4eec\n\n\u7528 k \u8868\u793a a \uff0c b \u5f53\u524d\u7684\u6700\u957f\u516c\u5171\u5b50\u4e32\uff0c\u82e5 $a(i+k)$ \u7b49\u4e8e $b(i+k)$ \u5219\u66f4\u65b0 k \u7684\u957f\u5ea6\n\n\u6700\u540e k \u5373\u4e3a\u7b54\u6848\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() \n{\n\tstring a, b;\n\tcin >> a >> b;\n\tint maxk = 0;\n\tfor (int i=0; i<a.size(); i++) \n\t{\n\t\tfor (int j=0; j<b.size(); j++) \n\t\t{\n\t\t\tint k = 0;\n\t\t\twhile (i+k < a.size() && j+k < b.size() && a[i+k] == b[j+k])k++;\n\t\t\tif (k > maxk) maxk = k;\n\t\t}\n\t}\n\tcout << a.size() + b.size() -2*maxk << endl;\n}\n\nint main() \n{\n\tint T;\n\tcin >> T;\n\tfor (int i=1; i<=T; i++)solve();\n}\n\n```\n\n\u4ee3\u7801\u5e94\u8be5\u662f\u9898\u89e3\u533a\u6700\u77ed\u7684\u4e86\u3002\n",
        "postTime": 1618404077,
        "uid": 468175,
        "name": "_xbn",
        "ccfLevel": 0,
        "title": "CF1506C Double-ended Strings"
    },
    {
        "content": "\u7406\u89e3\u9898\u610f\u3002\n\n\u73b0\u6709\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u80fd\u4ece\u5934\u5c3e\u5220\u9664\u5b57\u7b26\uff0c\u4f7f\u5f97\u4e24\u4e2a\u5b57\u7b26\u4e32\u76f8\u7b49\u3002\n\n**\u56e0\u4e3a\u53ea\u80fd\u4ece\u5934\u5c3e\u5220\u9664\uff0c\u6240\u4ee5\u4e2d\u95f4\u7684\u5143\u7d20\u4e0d\u4f1a\u6539\u53d8\uff0c\u6240\u4ee5\u8fd9\u4e00\u9898\u662f\u5728\u53d8\u76f8\u5730\u6c42\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u6700\u957f\u516c\u5171\u5b50\u4e32\u3002**\n\n\u6ce8\u610f\uff1a\u4e2d\u95f4\u5143\u7d20\u4e0d\u4f1a\u6539\u53d8\uff0c\u6240\u4ee5\u60f3\u8981\u4f7f\u5f97\u4e24\u4e2a\u5b57\u7b26\u4e32\u76f8\u540c\uff0c\u5fc5\u987b\u662f\u8fde\u7eed\u7684\u5b50\u4e32\u800c\u975e\u4e0d\u8fde\u7eed\u7684\u5b50\u5e8f\u5217\u3002\n\n\u6211\u4eec\u518d\u770b\u4e00\u4e0b\u6570\u636e\u8303\u56f4\uff0c $N\\leqslant20$\uff0c$T\\leqslant100$ \u90a3\u4e48\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7528 $O(N^3T)$ \u7684\u5927\u66b4\u529b\u5c31\u80fd\u89e3\u51b3\u8fd9\u9898\u3002\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstring s1,s2,ans=\"\",sum=\"\";\nint Max=-1,l1,l2,l=0;\nvoid In(){\n\tcin>>s1>>s2;\n\tans=\"\";Max=-1;\n\tl1=s1.size(),l2=s2.size();//\u6ce8\u610f .size()\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u7684O(N)\u7684\uff0c\u6240\u4ee5\u4e0d\u80fd\u653e\u5728\u5faa\u73af\u4e2d\u3002\n}\nvoid Work(){\n\tMax=-1;\n\tfor(int i=0;i<l1;i++){\n\t\tfor(int j=0;j<l2;j++){\n\t\t\tsum=\"\";int k;\n\t\t\tfor(k=0;k+j<l2&&k+i<l1;k++){//\u4e09\u91cd\u66b4\u529b\u3002\n\t\t\t\tif(s1[i+k]!=s2[j+k]){\n\t\t\t\t\tif(Max<k){\n\t\t\t\t\t\tans=sum;\n\t\t\t\t\t\tMax=k;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tsum+=s1[i+k];\n\t\t\t}\n\t\t\tif(Max<k){\n\t\t\t\tans=sum;\n\t\t\t\tMax=k;\n\t\t\t}\n\t\t}\n\t}\n\tcout<<l1-Max+l2-Max<<endl;\n}\nint main(){\n\tint t;cin>>t;\n\twhile(t--){\n\t\tIn();\n\t\tWork();\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1627691375,
        "uid": 107527,
        "name": "chenkaiwen",
        "ccfLevel": 7,
        "title": "CF1506C Double-ended Strings"
    },
    {
        "content": "### \u9898\u610f\uff1a\n\u7ed9\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u4f60\u53ef\u4ee5\u5220\u9664\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u9996\u5c3e\u5143\u7d20\uff0c\u6c42\u4f7f\u4e24\u4e2a\u5b57\u7b26\u4e32\u5b8c\u5168\u76f8\u7b49\u6240\u9700\u7684\u6700\u5c11\u5220\u9664\u6b21\u6570\u3002\n### \u601d\u8def\uff1a\n\u5728\u53ea\u5220\u9664\u9996\u5c3e\u5143\u7d20\u7684\u60c5\u51b5\u4e0b\uff0c\u6bcf\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\u7684\u8fde\u7eed\u6027\u662f\u65e0\u6cd5\u66f4\u6539\u7684\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u53ea\u80fd\u53d6\u6bcf\u4e2a\u5b57\u7b26\u4e32\u4e2d\u4e00\u6bb5\u8fde\u7eed\u7684\u90e8\u5206\uff0c\u60f3\u8981\u8ba9\u4e24\u4e2a\u5b57\u7b26\u4e32\u5728\u53ea\u5220\u9664\u9996\u5c3e\u5143\u7d20\u7684\u60c5\u51b5\u4e0b\u76f8\u7b49\u4e5f\u53ea\u80fd\u662f\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u6709\u67d0\u4e00\u6bb5\u8fde\u7eed\u90e8\u5206\u76f8\u7b49\u3002\u4e3a\u4e86\u8ba9\u5220\u9664\u6b21\u6570\u6700\u5c11\uff0c\u81ea\u7136\u5c31\u662f\u8ba9\u8fd9\u4e2a\u90e8\u5206\u6700\u957f\u3002\u8fd9\u4e2a\u6700\u957f\u8fde\u7eed\u90e8\u5206\u4e5f\u5c31\u662f $a$ \u4e0e $b$ \u7684\u6700\u957f\u8fde\u7eed\u516c\u5171\u5b50\u5e8f\u5217\uff0c\u6211\u4eec\u628a\u5b83\u547d\u540d\u4e3a $s$\u3002\n\n\u9664 $s$ \u5916\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u5176\u5b83\u4e1c\u897f\u90fd\u8981\u88ab\u5220\u9664\u3002 $s$ \u5c31\u662f\u6700\u957f\u7684\u4e86\uff0c\u5176\u5b83\u4efb\u4f55\u8fde\u7eed\u516c\u5171\u5b57\u7b26\u5217\u90fd\u6ca1\u6709 $s$ \u957f\uff0c\u53ea\u4fdd\u7559\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d $s$ \u8fd9\u4e00\u90e8\u5206\u5c31\u80fd\u5728\u5220\u9664\u6b21\u6570\u6700\u5c11\u7684\u60c5\u51b5\u4e0b\u4fdd\u8bc1 $a$ \u4e0e $b$ \u5b8c\u5168\u76f8\u7b49\u3002\n\n##### \u6700\u5c0f\u5220\u9664\u6b21\u6570\u5c31\u662f $|a|+|b|-s-s$\u3002\n\u4e3a\u4ec0\u4e48\u8981\u51cf\u4e24\u4e2a $s$\uff1f\u56e0\u4e3a $s$ \u662f $a$ \u4e0e $b$ \u5171\u6709\u7684\u4e00\u90e8\u5206\u3002\n### \u5b9e\u73b0\uff1a\n\u961f\u91cc\u7684\u5de8\u4f6c\u90fd\u4f1a\u7528 DP\uff0c\u53ea\u6709\u6211\u4e0d\u4f1a\uff0c\u6240\u4ee5\u7ed9\u51fa\u66b4\u529b\u505a\u6cd5\u3002\n\n\u4ece $a$ \u91cc\u627e\u4e00\u5757\u4e0e $b$ \u76f8\u540c\u7684\u90e8\u5206\uff0c\u90a3\u4e48\u5c31\u679a\u4e3e $a$ \u4e0e $b$ \u4e2d\u7684\u6bcf\u4e00\u90e8\u5206\uff0c\u7136\u540e\u5faa\u73af\u8bb0\u5f55\u6700\u957f\u7684\u8fde\u7eed\u516c\u5171\u5b50\u5e8f\u5217\uff0c\u8f93\u51fa\u5373\u53ef\u3002\n\n### \u4ee3\u7801\uff1a\n```c\n#include<iostream>\n#include<cstring>\nusing namespace std;\ninline int read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n\twhile (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n\treturn x*f;\n}\nint t;//\u6570\u636e\u7ec4\u6570 \nchar o1[100];//a\u548cb \nchar o2[100];\nint far;//\u6bcf\u4e00\u6b21\u7684\u8fde\u7eed\u516c\u5171\u5b50\u5e8f\u5217\u957f\u5ea6 \nint ans;//\u6700\u957f\u8fde\u7eed\u516c\u5171\u5b50\u5e8f\u5217 \nint main(){\n\tt=read();\n\twhile(t--){\n\t\tcin>>o1>>o2;\n\t\tans=0;\n\t\tint lo1=strlen(o1);\n\t\tint lo2=strlen(o2);//\u53d6a\uff0cb\u957f\u5ea6 \n\t\tfor(int i=0;i<lo1;i++){//\u66b4\u529b\u679a\u4e3ea\u4e0eb\u4e2d\u76f8\u540c\u7684\u90e8\u5206 \n\t\t\tfor(int j=0;j<lo2;j++){\n\t\t\t\tfar=0;\n\t\t\t\tint v1=i;\n\t\t\t\tint v2=j;\n\t\t\t\twhile(v1<lo1&&v2<lo2&&o1[v1]==o2[v2]){//\u5bfb\u627e\u8fde\u7eed\u516c\u5171\u5b50\u5e8f\u5217 \n\t\t\t\t\tfar++;\n\t\t\t\t\tv1++;\n\t\t\t\t\tv2++; \n\t\t\t\t}\n\t\t\t\tans=max(ans,far);//\u6c42\u6700\u957f\u8fde\u7eed\u516c\u5171\u5b50\u5e8f\u5217 \n\t\t\t}\n\t\t}\n\t\tcout<<lo1+lo2-ans-ans<<endl;//\u8f93\u51fa\u7ed3\u679c \n\t}\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1628049417,
        "uid": 448875,
        "name": "Dragonbell_exp",
        "ccfLevel": 4,
        "title": "CF1506C Double-ended Strings \u9898\u89e3"
    },
    {
        "content": "\u9898\u76ee\u4f20\u9001\u95e8\uff1a[CF1506C](https://www.luogu.com.cn/problem/CF1506C)\n\n\u73b0\u5728 $div.3$ \u7684C\u9898\u53d8\u96be\u4e86\u554a\u3002\u4e00\u822c $D$\u3001$E$ \u9898\u624d\u4f1a\u8003\u8fd9\u79cd\u9898\u554a\u3002\n\n\u4e0d\u8fc7\u7406\u89e3\u8d77\u6765\u4e0d\u662f\u5f88\u96be\uff0c\u6709\u70b9\u50cfKMP\u5b57\u7b26\u4e32\u5339\u914d\u7684\u53cd\u914d\u9898\u3002\n\n\u800c\u4e14\u6570\u636e\u8303\u56f4\u4e5f\u5f88\u5c0f\uff01\uff01\uff01\n\n### \u9898\u610f\u6982\u8ff0\uff1a\n\n\u5bf9\u4e8e\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u53ea\u80fd\u5220\u6389\u4ed6\u4eec\u7684\u5934\u6216\u8005\u5c3e\u3002\u5982\u679c\u8981\u4f7f\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u662f\u5339\u914d\u7684\uff0c\u6c42\u6700\u5c11\u9700\u8981\u7684\u5220\u9664\u64cd\u4f5c\u4e4b\u548c\u3002\n\n## \u601d\u8def\uff1a\n\u4f53\u9762\u975e\u5e38\u4e0d\u96be\u7406\u89e3\uff0c\u601d\u8def\u4e5f\u662f\u6bd4\u8f83\u597d\u60f3\u7684\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u4ece\u4fa7\u9762\u770b\u4e00\u4e0b\u8fd9\u4e2a\u9898\u9762\u4e2d**\u53ea\u80fd\u5220\u5934\u548c\u5c3e**\u8fd9\u4e00\u6bb5\u5185\u5bb9\u3002\u56e0\u4e3a\u53ea\u80fd\u53bb\u5934\u6216\u53bb\u5c3e\uff0c\u6240\u4ee5\u6700\u7ec8\u5220\u5b8c\u5f97\u5230\u90e8\u5206\u7684\u4e00\u5b9a\u662f\u8fde\u7740\u7684\u3002\u6839\u636e\u8fd9\u4e00\u7ed3\u8bba\uff0c\u6211\u4eec\u4e0d\u96be\u60f3\u5230\u8fd9\u9053\u9898\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u53d6\u6700\u957f\u516c\u5171\u5b50\u4e32\u957f\u5ea6\u7684\u9898\u3002\n### \u9996\u5148\u8003\u8651\u66b4\u529b\uff1a\u4e24\u79cd\u65b9\u6cd5\u3002\n1.\u76f4\u63a5\u4ece\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u6bcf\u4e2a\u4f4d\u7f6e\u4e0a\u67e5\u627e\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e32\u7684\u76f8\u5e94\u4f4d\u7f6e\uff0c\u7136\u540e\u66b4\u529b\u8bb0\u5f55\u6700\u957f\u516c\u5171\u90e8\u5206\u3002\n\n2.\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\uff0c\u90fd\u5728\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e32\u4e2d\u627e\u76f8\u540c\u7684\uff0c\u7136\u540e\u5728\u6bcf\u4e2a\u4f4d\u7f6e\u4e0a\u5f80\u540e\u5339\u914d\u3002\n\n\u867d\u7136\u590d\u6742\u5ea6\u5f88\u9ad8\uff0c\u4f46\u662f\u6570\u636e\u8303\u56f4\u5c0f\u554a\uff0c\u6211\u4eec\u53ef\u4ee5\u968f\u4fbf\u970d\u970d\uff08bushi\uff09\u3002\n\n\u8fd8\u662f\u60f3\u4e00\u60f3\u6709\u6ca1\u6709\u4ec0\u4e48\u597d\u7684\u529e\u6cd5\uff1f\u5f53\u7136\u6709\uff0c\u8fd8\u6709\u597d\u591a\u3002\u6211\u4eec\u4ecd\u7136\u9009\u62e9\u597d\u7528\u7684DP\u6765\u505a\u3002\n\n### \u65e2\u7136\u662fDP\uff0c\u90a3\u5c31\u8981\u8003\u8651 \uff1a      **\u72b6\u6001\u548c\u8f6c\u79fb**\u3002\n\n\n#### \u72b6\u6001\uff1a\n\u8bbe\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u5206\u522b\u4e3aa\u548cb\uff0c\u7136\u540e\u8bbe $dp_{i,j}$ \u4e3a\u4ee5 $a_{i-1}$ \u548c $b_{j-1}$ \n\u4f5c\u4e3a\u7ed3\u5c3e\u7684\u4e24\u4e2a\u516c\u5171\u5b50\u4e32\u7684\u957f\u5ea6\uff0c\u521d\u59cb\u503c\u4e3a0\u3002\n\n#### \u8f6c\u79fb\uff1a\n\n1.\u5982\u679c $a_i$ \u4e0e $b_j$ \u662f\u4e00\u6837\u7684\uff0c\u8bf4\u660e\u8fd9\u91cc\u53ef\u80fd\u662f\u516c\u5171\u5b50\u4e32\u7684\u5f00\u5934\uff0c\u4e5f\u6709\u53ef\u80fd\u8fd9\u4e2a\u5730\u65b9\u53ef\u4ee5\u627f\u63a5\u4e4b\u524d\u7684\u516c\u5171\u5b50\u4e32\uff0c\u90a3\u4e48\u7ee7\u7eed\u5f80\u540e\u626b\uff0c\u516c\u5171\u5b50\u4e32\u7684\u957f\u5ea6\u4e5f\u5c31\u52a0\u4e00\u3002\u6240\u4ee5\u8f6c\u79fb\u65b9\u7a0b\u5c31\u5f88\u5bb9\u6613\u5f97\u51fa :\n\n###   $dp_    {i+1,j+1}=dp_{i,j}+1$ .\n                   \n2.\u5982\u679c $a_i$ \u4e0e $b_j$ \u662f\u4e0d\u540c\u7684\uff0c\u8bf4\u660e\u8fd9\u65f6\u516c\u5171\u5b50\u4e32\u7684\u7ed3\u5c3e\u662f\u4ed6\u4eec\u7684\u4e0a\u4e00\u4e2a\u5b57\u7b26\uff0c\u90a3\u4e48\u6b64\u65f6\u4ee5\u8fd9\u4e24\u4e2a\u5730\u65b9\u4e3a\u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32\u6700\u957f\u516c\u5171\u5b50\u4e32\u957f\u5ea6\u4e3a $0$ \u3002\u90a3\u4e48\u8f6c\u79fb\u65b9\u7a0b\u4e5f\u5c31\u547c\u4e4b\u6b32\u51fa\uff1a\n\n###    $dp_{i+1,j+1}=0$ .\n\n\n#### \u6700\u540e\u5904\u7406\u7b54\u6848\uff1a\n\u65e2\u7136\u8981\u6c42\u5220\u6389\u7684\u6b21\u6570\uff0c\u90a3\u5c31\u6c42\u51fa\u6765\u5269\u4e0b\u7684\uff0c\u56e0\u4e3a\u5269\u4e0b\u7684\u4e1c\u897f\u5728\u4e24\u4e2a\u4e32\u91cc\u662f\u4e00\u6837\u7684\uff0c\u90a3\u7b54\u6848\u5c31\u662f\uff1a\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u548c\u51cf\u53bb\u6700\u957f\u516c\u5171\u5b50\u4e32\u7684\u957f\u5ea6\u7684\u4e24\u500d\u3002\n\n\u601d\u8def\u5df2\u7ecf\u5f88\u660e\u786e\u4e86\u5427\uff0c\u4e0b\u9762\u76f4\u63a5\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<string>\nusing namespace std;\nint dp[25][25];\nstring a,b;\nint t,maxl;\nint main(){\n\tcin>>t;\n    while(t--){\n        cin>>a>>b;\n        maxl=0;\n        memset(dp,0,sizeof(dp));\n        for(int i=0;i<a.size();i++){ \n            for(int j=0;j<b.size();j++){\n            \tif(a[i]==b[j]) dp[i+1][j+1]=dp[i][j]+1;\n            \telse dp[i+1][j+1]=0;\n                maxl=max(maxl,dp[i+1][j+1]);\n            }\n\t\t} \n        cout<<a.size()+b.size()-maxl*2<<endl;\n    }\n    return 0;\n}\n```\n",
        "postTime": 1627991934,
        "uid": 453610,
        "name": "Infinity_Detail",
        "ccfLevel": 3,
        "title": "CF1506C--\u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\uff0c\u8fd9\u9053\u9898\u7684\u8981\u6c42\u662f\u7ed9\u4e24\u4e2a\u5b57\u7b26\u4e32 $a,b$\uff0c\u5220\u6389\u5b83\u4eec\u7b2c\u4e00\u4e2a\u5b57\u7b26\u6216\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u4efb\u610f\u6b21\uff0c\u6c42\u6700\u5c11\u51e0\u6b21\u80fd\u591f\u4f7f\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u76f8\u7b49\u3002\n\n\u7531\u4e8e\u53ea\u80fd\u5220\u6389\u524d\u7f00\u6216\u540e\u7f00\uff0c\u6240\u4ee5\u5269\u4e0b\u7684\u90e8\u5206\u5728\u6e90\u5b57\u7b26\u4e32\u4e2d\u5fc5\u987b\u662f**\u8fde\u7eed\u7684**\uff0c\u8fd9\u9053\u9898\u672c\u8d28\u4e0a\u5c31\u662f\u6c42\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684**\u6700\u957f\u516c\u5171\u5b50\u4e32**\u3002\n\n\u6211\u4eec\u8003\u8651\u52a8\u6001\u89c4\u5212\uff1a$dp_{i,j}$ \u8868\u793a\u4ee5 $a_{i-1}$ \u548c $b_{j-1}$ \u8fd9\u4e24\u4e2a\u4f4d\u7f6e\u4e3a\u7ed3\u5c3e\u7684\u6700\u957f\u516c\u5171\u5b57\u4e32\u957f\u5ea6\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n1. \u5982\u679c $a_i=b_i$\uff0c\u90a3\u4e48\u8fd9\u91cc\u5176\u5b9e**\u53ef\u4ee5\u627f\u63a5\u524d\u9762\u7684\u6700\u957f\u516c\u5171\u5b50\u4e32**\uff1b\n2. \u5982\u679c $a_i\\not=b_i$\uff0c\u90a3\u4e48\u524d\u9762\u7684\u6700\u957f\u516c\u5171\u5b50\u4e32\u5230\u4e0a\u4e00\u4e2a\u4f4d\u7f6e\u5c31**\u7ed3\u675f\u4e86**\uff0c\u4ee5\u8fd9\u4e24\u4e2a\u4f4d\u7f6e\u4e3a\u7ed3\u675f\u5b57\u7b26\u7684\u6700\u957f\u516c\u5171\u5b50\u4e32\u957f\u5ea6\u4e3a $0$\u3002\n\n\u56e0\u6b64\u6211\u4eec\u5f97\u5230\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b\uff1a\n$$\ndp_{i+1,j+1}=\\begin{cases}\ndp_{i,j}+1 & (a_i=b_j) \\\\\n0 & (a_i\\not=b_j)\n\\end{cases}\n$$\n\u66f4\u65b0\u7b54\u6848\uff1a\u5728\u6bcf\u6b21\u8f6c\u79fb $dp$ \u65f6\u8fdb\u884c\u6c42\u6700\u5927\u503c\uff08\u867d\u7136\u8fd9\u6837\u53ef\u80fd\u4e0d\u662f\u6700\u4f18\uff0c\u4f46\u662f\u4fdd\u9669\uff09\n\n\u6700\u540e\u6c42\u89e3\u7b54\u6848\u3002\u9898\u76ee\u6c42\u7684\u662f**\u6700\u5c11\u5220\u53bb\u591a\u5c11\u5b57\u7b26**\uff0c\u56e0\u4e3a\u9664\u4e86\u6700\u957f\u516c\u5171\u5b50\u4e32\u4ee5\u5916\u90fd\u8981\u5220\u6389\uff0c\u6240\u4ee5\u7b54\u6848\u5c31\u662f\u4e24\u5b57\u7b26\u4e32\u957f\u5ea6\u4e4b\u548c\u51cf\u53bb\u6700\u957f\u516c\u5171\u5b50\u4e32\u957f\u7684\u7684**\u4e24\u500d**\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```C++\n#include<iostream>\n#include<cstring>\n#define N 20\nusing namespace std;\n\nint dp[N][N];\nint main() {\n    string a, b;\n    int q, as, bs, mx; cin >> q;\n    while (q--) {\n        cin >> a >> b, mx = 0, as = a.size(), bs = b.size();\n        memset(dp, 0, sizeof(dp));\n        for (int i=0; i<as; i++)\n            for (int j=0; j<bs; j++)\n                dp[i+1][j+1] = a[i] == b[j] ? dp[i][j] + 1 : 0,\n                mx = max(mx, dp[i+1][j+1]);\n        cout << as + bs - mx * 2 << endl;\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1621739669,
        "uid": 360214,
        "name": "nalemy",
        "ccfLevel": 6,
        "title": "CF1506C\u9898\u89e3"
    },
    {
        "content": "[\u6d1b\u8c37\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1506C)\n\n[CF\u4f20\u9001\u95e8](http://codeforces.com/problemset/problem/1506/C)\n## \u601d\u8def\n\u56e0\u4e3a\u5f53\u7559\u4e0b\u6765\u7684\u5b57\u6bcd\u6700\u957f\u65f6\uff0c\u8981\u5220\u9664\u7684\u5b57\u7b26\u6700\u77ed\uff0c\u6240\u4ee5\u7528 $dp$ \u6c42\u6700\u957f\u516c\u5171\u5b50\u4e32\u3002 \u6700\u540e\u7528\u603b\u957f\u5ea6\u51cf\u53bb\u7559\u4e0b\u7684\u957f\u5ea6\u3002\n```cpp\nn+m-2*ans\n```\n\n\n$dp[i][j]$ \u8868\u793a\u5f53\u5f53\u524d\u5b57\u7b26\u662f $s1[i]$ \u548c $s2[j]$ \u65f6\u7684\u6700\u957f\u516c\u5171\u5b50\u4e32\u3002\n\n\u8f6c\u79fb\u65b9\u7a0b\uff1a \n```cpp\nif(s1[i]==s2[j]) dp[i][j]=dp[i-1][j-1]\n```\n## \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\nchar s1[31],s2[31];\nint dp[31][31];\nsigned main()\n{\n\tint t;\n\tcin>>t;\n\twhile(t--)\n\t{\n\t\tmemset(dp,0,sizeof(dp));//\u6e05\u96f6 \n\t\tcin>>s1>>s2;\n\t\tint n=strlen(s1),m=strlen(s2),ans=0;\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tfor(int j=0;j<m;j++)\n\t\t\t{\n\t\t\t\tif(s1[i]==s2[j])//\u5982\u679c\u5f53\u524d\u5b57\u7b26\u4e00\u6837\uff0c\u5219\u4ecei-1\u548cj-2\u8f6c\u79fb\u8fc7\u6765 \n\t\t\t\t{\n\t\t\t\t\tif(i==0||j==0)//\u5982\u679c\u662f\u5934\u7684\u8bdd \u5219dp[i][j]\u4e3a1\uff0c\u5426\u5219\u4f1a\u8d8a\u754c \n\t\t\t\t\t{\n\t\t\t\t\t\tdp[i][j]=1;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tdp[i][j]=dp[i-1][j-1]+1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tfor(int j=0;j<m;j++)\n\t\t\t{\n\t\t\t\tans=max(ans,dp[i][j]);\n\t\t\t\t//cout<<dp[i][j]<<' ';\n\t\t\t}\n\t\t\t//cout<<endl;\n\t\t}\n\t\tcout<<n+m-2*ans<<endl;\n\t}\n    return 0;\n}\n```\n\u6ce8\u610f\uff1a\u5e76\u975e\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217",
        "postTime": 1618560999,
        "uid": 406947,
        "name": "Allanljx",
        "ccfLevel": 5,
        "title": "CF1506C\u9898\u89e3"
    },
    {
        "content": "\u9898\u610f\uff1a\u53eb\u6211\u4eec\u628a\u4e24\u4e2a\u5b57\u7b26\u4e32\u4ece\u5934\u6216\u5c3e\u5206\u522b\u5e72\u6389\u51e0\u4e2a\u5b57\u6bcd\uff0c\u4f7f\u4e24\u4e2a\u5b57\u7b26\u4e32\u76f8\u7b49\u3002\u53eb\u6211\u4eec\u6c42\u6700\u5c0f\u7684\u5220\u9664\u6b21\u6570\u3002\n\n\u601d\u8def\uff1a\u5982\u679c\u76f4\u63a5\u4ece\u5220\u5b57\u6bcd\u7684\u89d2\u5ea6\u6765\u8bf4\uff0c\u662f\u6709\u70b9\u56f0\u96be\u7684\u3002\u90a3\u6211\u4eec\u5c31\u6362\u4e00\u4e2a\u770b\u6cd5\uff0c\u9898\u76ee\u53eb\u6211\u5220\u5c3d\u91cf\u5c11\u7684\u5b57\u6bcd\uff0c\u4e0d\u5c31\u662f\u60f3\u8981\u8ba9\u7559\u4e0b\u6765\u7684\u5b57\u7b26\u4e32\u76f8\u540c\u4e14\u957f\u4e00\u70b9\u5417\uff01\u90a3\u4e48\u6a21\u578b\u5c31\u53d8\u6210\u4e86\u6c42\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u3002\n\n\u7531\u4e8e\u9898\u76ee\u95ee\u6211\u4eec\u7684\u662f\u5220\u6389\u51e0\u4e2a\u5b57\u6bcd\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u52a0\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u51cf\u53bb\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u7684\u4e24\u500d\u3002\u7531\u4e8e\u672c\u9898\u5b57\u7b26\u4e32\u957f\u5ea6\u8f83\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u54c8\u5e0c\u6765\u89e3\u51b3\u3002\u5148\u679a\u4e3e\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\u957f\u5ea6\uff0c\u7136\u540e\u770b\u4e00\u4e0b\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u548c\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e32\u4e2d\u662f\u5426\u90fd\u6709\u3002\u53d6\u6700\u5927\u503c\u7528\u4e8e\u8ba1\u7b97\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint T,W=37,w[25],s[25],p[25];\nchar a[25],b[25];\nbool flg;\ninline int read(){\n\tint ret=0,f=1;char ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-')f=-f;ch=getchar();}\n\twhile(isdigit(ch))ret=ret*10+ch-'0',ch=getchar();\n\treturn ret*f;\n}//\u5feb\u8bfb\nint main(){\n\tT=read();w[0]=1;\n\tfor(int i=1;i<=20;i++)w[i]=w[i-1]*W;\n\twhile(T--){\n\t\tscanf(\"%s\",a+1);int len=strlen(a+1);\n\t\tscanf(\"%s\",b+1);int Len=strlen(b+1);\n\t\tfor(int i=1;i<=len;i++)s[i]=s[i-1]*W+a[i]-'a'+1;//\u6784\u9020hash\u6570\u7ec4\n\t\tfor(int i=1;i<=Len;i++)p[i]=p[i-1]*W+b[i]-'a'+1;//\u6784\u9020hash\u6570\u7ec4\n\t\tint first=0; \n\t\tfor(int k=min(len,Len);k>=0;k--){//\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\u957f\u5ea6\n\t\t\tfor(int i=k;i<=len;i++){//\u5f00\u59cb\u627e\n\t\t\t\tfirst=s[i]-s[i-k]*w[k];\n\t\t\t\tfor(int j=k;j<=Len;j++){\n\t\t\t\t\tif(first==p[j]-p[j-k]*w[k]){//\u6709\u7684\u8bdd\u5c31\u76f4\u63a5\u8f93\u51fa\n\t\t\t\t\t\tprintf(\"%d\\n\",Len+len-2*k);\n\t\t\t\t\t\tflg=1;break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(flg)break;\n\t\t\t}\n\t\t\tif(flg)break;\n\t\t}\n\t\tflg=0;\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1617460263,
        "uid": 370354,
        "name": "yxy666",
        "ccfLevel": 5,
        "title": "CF1506C \u9898\u89e3"
    },
    {
        "content": "# \u6982\u8ff0\n|\u9898\u53f7|\u96be\u5ea6|$AC$\u65f6\u95f4\u53ca\u8bb0\u5f55|\n| :----: | :----: | :----: |\n|$\\texttt{CF1506C}$|$\\texttt{\u6d1b\u8c37\u96be\u5ea6:\u6682\u65e0\u8bc4\u5b9a}$|[$\\texttt{On 2021/03/26}$](https://www.luogu.com.cn/record/48474878)|\n# \u89e3\u6790\n\u8fd9\u662f\u4e00\u9053\u7b80\u5355\u9898\u3002\n\n\u9898\u610f\u4e0d\u96be\u7406\u89e3\u3002\n\n\u5176\u5b9e\uff0c\u6211\u4eec\u7a0d\u5fae\u60f3\u4e00\u60f3\uff0c\u5c31\u77e5\u9053\uff1a\n- \u5982\u679c $a$ \u975e\u7a7a\uff0c\u5220\u9664 $a$ \u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u3002\n- \u5982\u679c $a$ \u975e\u7a7a\uff0c\u5220\u9664 $a$ \u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u3002\n- \u5982\u679c $b$ \u975e\u7a7a\uff0c\u5220\u9664 $b$ \u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u3002\n- \u5982\u679c $b$ \u975e\u7a7a\uff0c\u5220\u9664 $b$ \u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u3002\n\n\u8fd9\u4e00\u5927\u6bb5\u8bdd\uff0c\u610f\u601d\u5c31\u662f\uff1a\n- \u6c42 $a$ \u548c $b$ \u7684**\u6700\u957f\u516c\u5171\u5b50\u4e32**\u3002\n\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a $\\mathcal{O(nm)}$ \u7684 $Dp$ \u6c42\u51fa\u89e3\u3002\n\n\u8fd9\u4e2a\u4e0d\u4f1a\u8bf7\u81ea\u5df1\u767e\u5ea6\u5427\u3002\n\n\uff08$n$\uff0c$m$ \u662f\u4e24\u5b57\u7b26\u4e32\u957f\u5ea6\uff09\n\n\u987a\u4fbf\u8fd8\u662f\u8bf4\u4e00\u53e5\uff1a\u6c42\u51fa\u6700\u957f\u516c\u5171\u5b50\u4e32\u4ee5\u540e\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5904\u7406\u4e00\u4e0b\u7b54\u6848\u3002![jk](https://cdn.luogu.com.cn/upload/pic/62234.png)\n```cpp\nAA=A.size(),BB=B.size();\ncout<<AA+BB-2*findLength(A,B)<<endl;\n```\n# \u4ee3\u7801\n```cpp\n/*\nAuthor:Xsmyy\nProblem:CF1506C\nDate:2021/03/25\n*/\n#include<bits/stdc++.h>\n#define BetterIO ios::sync_with_stdio(false)\nusing namespace std;\nint N,K;\nbool Flag[101];\ninline int findLength(string A,string B) {\n    int asize=A.size();\n    int bsize=B.size();\n    int dp[asize][bsize];\n    int max = 0;\n\n    for(int i=0,j=0; i<asize; i++){\n        if(A[i] == B[j]){\n            dp[i][j] = 1;\n            max = 1;\n        }else{\n            dp[i][j] = 0;\n        }\n    }\n\n    for(int i=0,j=0; j<bsize; j++){\n        if(A[i] == B[j]){\n            dp[i][j] = 1;\n            max = 1;\n        }else{\n            dp[i][j] = 0;\n        }\n    }\n\n    for(int i=1; i<asize; i++){\n        for(int j = 1; j<bsize; j++){\n            if(A[i] == B[j]){\n                dp[i][j] = dp[i-1][j-1] + 1;\n            }else{\n                dp[i][j] = 0;\n            }\n\n            if(dp[i][j] > max){\n                max = dp[i][j];\n            }\n        }\n    }\n\n    return max;\n}\nint main(void)\n{\n\tBetterIO;\n\tregister int Case;\n\tcin>>Case;\n\twhile(Case--)\n\t{\n\t\tregister string A,B;\n\t\tcin>>A>>B;\n\t\tregister int AA,BB;\n\t\tAA=A.size(),BB=B.size();\n\t\tcout<<AA+BB-2*findLength(A,B)<<endl;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1617023319,
        "uid": 132168,
        "name": "_Clown_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1506C \u3010Double-ended Strings\u3011"
    },
    {
        "content": "- **\u9898\u610f**\uff1a\n\n\u7ed9\u4f60\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u4f60\u6bcf\u6b21\u53ef\u4ee5\u5220\u9664\u5176\u4e2d\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u9996\u5b57\u7b26\u6216\u8005\u5c3e\u5b57\u7b26\uff0c\u6c42\u6700\u5c11\u64cd\u4f5c\u6b21\u6570\u4f7f\u5f97\u4e24\u4e2a\u5b57\u7b26\u4e32\u76f8\u7b49\u3002\n\n- $Solution$:\n\n\u9274\u4e8e\u8fd9\u662f div3 \uff0c\u6211\u4eec\u91c7\u7528\u6734\u7d20\u505a\u6cd5\u3002\u76f4\u63a5\u66b4\u529b\u641c\u7d22\uff0c\u7528\u8f83\u77ed\u7684\u5b57\u7b26\u4e32\u679a\u4e3e\u5220\u9996\u5b57\u7b26\u6216\u8005\u672b\u5c3e\u5b57\u7b26\uff0c\u7136\u540e\u6bcf\u6b21 $O(n^2)$ \u5224\u65ad\u8be5\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u8f83\u957f\u5b57\u7b26\u4e32\u7684\u4e00\u4e2a\u5b50\u4e32\uff0c\u66f4\u65b0\u7b54\u6848\u5373\u53ef\u3002\n\n\u5f53\u7136\uff0c\u6211\u4eec\u5e94\u8be5\u9002\u5f53\u526a\u679d\uff1a\u5224\u65ad\u76ee\u524d\u679a\u4e3e\u7684\u5b57\u7b26\u4e32\u662f\u5426\u679a\u4e3e\u8fc7\u3002\u8fd9\u4e2a\u53ef\u4ee5\u7528 `hash` \u5b9e\u73b0\uff0c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u7528\u4e86 `map` \u6765\u5224\u91cd\u3002\n\n- [\u4ee3\u7801](https://www.luogu.com.cn/paste/368tih9k)",
        "postTime": 1616768585,
        "uid": 225755,
        "name": "LinkZelda",
        "ccfLevel": 8,
        "title": "CF1506C"
    },
    {
        "content": "## Content\n\u6709\u4e24\u4e2a\u5b57\u7b26\u4e32 $a,b$\u3002\u6211\u4eec\u6bcf\u6b21\u64cd\u4f5c\u53ef\u4ee5\u5c06\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7684\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u6700\u524d\u9762\u4e00\u4e2a\u5b57\u7b26\u6216\u8fd9\u6700\u540e\u9762\u4e00\u4e2a\u5b57\u7b26\u5220\u53bb\uff08**\u53ef\u4ee5\u5c06\u67d0\u4e2a\u5b57\u7b26\u4e32\u901a\u8fc7\u82e5\u5e72\u6b21\u64cd\u4f5c\u53d8\u4e3a\u7a7a\u4e32**\uff09\u3002\u6c42\u9700\u8981\u591a\u5c11\u6b21\u64cd\u4f5c\u624d\u80fd\u591f\u4f7f $a,b$ \u4e24\u4e2a\u5b57\u7b26\u4e32\u662f\u76f8\u540c\u7684\u3002\n\n**\u6570\u636e\u8303\u56f4\uff1a$t$ \u7ec4\u6570\u636e\uff0c$1\\leqslant t\\leqslant 100$\uff0c$1\\leqslant |a|,|b|\\leqslant 20$\u3002**\n## Solution\n\u6211\u4eec\u53d1\u73b0\u53ea\u8981\u4f60\u80fd\u591f\u627e\u5230 $a,b$ \u4e24\u4e2a\u5b57\u7b26\u4e32\u4e4b\u95f4\u7684\u516c\u5171\u90e8\u5206\uff0c\u4f60\u5c31\u53ea\u9700\u8981\u53bb\u5220\u8fd9\u516c\u5171\u90e8\u5206\u4e4b\u5916\u7684\u5176\u5b83\u7684\u90e8\u5206\u5c31\u597d\uff0c\u6240\u4ee5\u8fd9\u9053\u9898\u76ee\u672c\u8d28\u4e0a\u8bb2\u5c31\u662f\u8981\u6211\u4eec\u53bb\u6c42 $a,b$ \u7684**\u6700\u957f\u516c\u5171\u5b50\u4e32\u7684\u957f\u5ea6**\u3002\u800c\u53c8\u56e0\u4e3a $a,b$ \u7684\u957f\u5ea6\u5b9e\u5728\u662f\u5c0f\u5f97\u53ef\u601c\uff0c\u56e0\u6b64\u6211\u4eec\u8003\u8651\u76f4\u63a5\u679a\u4e3e\u3002\n\n\u9996\u5148\u679a\u4e3e $a,b$ \u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u5b50\u4e32\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u7136\u540e\u518d\u679a\u4e3e\u957f\u5ea6\uff0c\u4e4b\u540e\u7528 STL \u4e2d\u81ea\u5e26\u7684 `substr` \u51fd\u6570\u53bb\u63d0\u53d6\u51fa\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u5b50\u4e32\uff0c\u5982\u679c\u8fd9\u4e24\u4e2a\u5b50\u4e32\u76f8\u7b49\uff0c\u5c31\u53bb\u6bd4\u8f83\u5148\u524d\u7684\u7b54\u6848\uff0c\u53d6\u957f\u5ea6\u7684\u8f83\u5927\u503c\u3002\u8bbe\u6211\u4eec\u6700\u7ec8\u5f97\u5230\u7684\u6700\u957f\u516c\u5171\u5b50\u4e32\u4e3a $s$\uff0c\u5219\u7b54\u6848\u5c31\u662f $|a|+|b|-2\\cdot|s|$\u3002\n## Code\n```cpp\nstring a, b;\n\nint main() {\n\tMT {\n\t\tcin >> a; int len1 = a.size(); cin >> b; int len2 = b.size();\n        int ans = 0;\n\t\tF(int, i, 0, len1 - 1) F(int, j, 0, len2 - 1) F(int, k, 0, len1 - i) F(int, l, 0, len2 - j) {\n\t\t\tif(k != l) continue; //\u8fde\u957f\u5ea6\u90fd\u4e0d\u4e00\u6837\uff0c\u8fd9\u4e24\u4e2a\u5b50\u4e32\u80af\u5b9a\u4e0d\u76f8\u540c\uff0c\u8df3\u8fc7\u3002\n\t\t\tstring s1 = a.substr(i, k), s2 = b.substr(j, l);\n\t\t\tif(s1 == s2) ans = max(ans, (int)s1.size());\n\t\t}\n\t\tprintln(len1 + len2 - ans * 2);\n\t}\n    return 0;\n}\n```",
        "postTime": 1616750508,
        "uid": 112917,
        "name": "Eason_AC",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1506C \u3010Double-ended Strings\u3011"
    },
    {
        "content": "## Description\n\n\u7ed9\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u4ece\u5934\u6216\u5c3e\u5220\u9664\u5b57\u6bcd\u4f7f\u5f97\u4e24\u4e2a\u5b57\u7b26\u4e32\u76f8\u7b49\uff0c\u6700\u5c0f\u5316\u5220\u9664\u6b21\u6570\uff08\u7a7a\u4e32\u4e5f\u76f8\u7b49\uff09\u3002\n\n## Solution\n\n\u6211\u4eec\u4f1a\u53d1\u73b0\u6309\u7167\u8fd9\u6837\u7684\u5220\u9664\u65b9\u5f0f\uff0c\u53ea\u6709\u8fde\u7eed\u7684\u516c\u5171\u5b50\u4e32\u4e0d\u4f1a\u88ab\u5220\u9664\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u95ee\u9898\u8f6c\u5316\u6210\u6c42\u4e24\u4e2a\u5b50\u4e32\u7684\u6700\u957f\u8fde\u7eed\u516c\u5171\u5b50\u4e32\u957f\u5ea6\u3002\u5373\uff1a\n\n\u8bbe\u5b57\u7b26\u4e32\u4e3a $s,t$\uff0c **$f[i][j]$ \u8868\u793a $s$ \u4ee5 $s_i$ \u7ed3\u5c3e\uff0c$t$ \u4ee5 $t_j$ \u7ed3\u5c3e\u7684\u6700\u957f\u8fde\u7eed\u5b50\u4e32\u957f\u5ea6**\uff0c\u5219\u53ef\u4ee5\u5206\u7c7b\u8f6c\u79fb\uff1a\n\n$$\\begin{cases}\nf[i][j]=f[i-1][j-1]\\quad(s[i]=s[j])\\\\\nf[i][j]=0\\quad otherwise\\\\\n\\end{cases}$$\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta(ta_{length}b_{length})$\n\n## Code\n\n```cpp\n/*If you are full of hope,you will be invincible*/\n#define ri register int\ntypedef long long ll;\nstd::mt19937 hpy(time(nullptr)+(unsigned long long)(new char));\nusing std::cin;\nusing std::cout;\nconstexpr int inf=0x3f3f3f3f;\nstd::string s1,s2;\nint ans;\nint f[30][30];\nint t;\ninline void solve() {\n    memset(f,0,sizeof f);\n    int len1 = s1.size(),len2 = s2.size();\n    for(int i = 0;i < len1;++i) {\n        for(int j = 0;j < len2;++j) {\n            if(s1[i] == s2[j]) {\n                if(!i || !j) f[i][j] = 1;\n                else f[i][j] = f[i-1][j-1] + 1;\n            }\n        }\n    }\n    int mx = 0;\n    for(int i = 0;i < len1;++i) {\n        for(int j = 0;j < len2;++j) mx = std::max(f[i][j],mx);\n    }\n\n    ans = len1 + len2 - mx*2;//\u6700\u957f\u516c\u5171\u5b50\u4e32\u7684\u8d21\u732e\u4e3a\u5176\u957f\u5ea6\u7684\u4e24\u500d\uff08\u5728a\u4e2d\u7684\u8d21\u732e\u548c\u5728b\u4e2d\u7684\u8d21\u732e\uff09\n}\nint main(int argc,const char *argv[]){\n\tstd::ios::sync_with_stdio(false);\n    cin >> t;\n    while(t--) {\n        cin >> s1 >> s2;\n        solve();\n         cout << ans << '\\n';\n    }\n\treturn 0;\n}\n```",
        "postTime": 1616749467,
        "uid": 413147,
        "name": "_Alejandro_",
        "ccfLevel": 0,
        "title": "CF1506C\u9898\u89e3"
    },
    {
        "content": "#  **\u9898\u76ee\u7ffb\u8bd1** \n\n\n\n\n\u672c\u9898\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 $a$ \u548c $b$\uff0c\u5728\u4e24\u4e2a\u5b57\u7b26\u4e32\u975e\u7a7a\u65f6\u6211\u4eec\u53ef\u4ee5\u628a\u4e24\u4e2a\u5b57\u7b26\u4e32\u5176\u4e2d\u4e00\u4e2a\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u6216\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u622a\u6389\u8bb0\u4e3a\u4e00\u6b21\u64cd\u4f5c\uff0c\u6c42\u6700\u5c11\u591a\u5c11\u6b21\u64cd\u4f5c\u53ef\u4ee5\u4f7f\u4e24\u4e2a\u5b57\u7b26\u4e32\u76f8\u540c\u3002\n\n\u672c\u9898\u6570\u636e\u8303\u56f4\uff1a\u6709 $t\\leq100$ \u7ec4\u6570\u636e\uff0c\u4e14\u4e32 $a$ \u548c\u4e32 $b$ \u7684\u957f\u5ea6\u8303\u56f4\u4e3a $1\\leq\\vert a \\vert,\\vert b\\vert\\leq20$\u3002\n\n\u6ce8\u610f\uff1a\u4e24\u4e2a\u7a7a\u4e32\u4e5f\u53ef\u89c6\u4e3a\u76f8\u540c\uff01\n\n# **\u601d\u8def**\n\n\n\n\n\u5206\u6790\u9898\u610f\u6211\u4eec\u53ef\u4ee5\u77e5\u9053 \n\n  - \u8be5\u9898\u7684\u672c\u8d28\u662f\u6c42\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684**\u6700\u957f\u516c\u5171\u5b50\u4e32**\u3002\n  -  $a$ \u548c\u4e32 $b$ \u7684\u957f\u5ea6\u8303\u56f4\u4e3a $1\\leq\\vert a\\vert,\\vert b\\vert\\leq20$\uff0c\u5b8c\u5168\u53ef\u4ee5\u4f7f\u7528**\u66b4\u529b\u679a\u4e3e**\u7684\u65b9\u6cd5\u679a\u4e3e\u516c\u5171\u5b57\u4e32\u6240\u6709\u53ef\u80fd\u5b50\u4e32\u3002\uff08\u957f\u5ea6\u4ece1\u5230  $a$ \u4e32\u548c $b$ \u4e32\u4e2d\u957f\u5ea6\u8f83\u77ed\u7684\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff09\n  - \u5728\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u66b4\u529b\u679a\u4e3e\u6240\u6709\u5b50\u5b57\u7b26\u4e32\uff0c\u82e5\u627e\u5230\u516c\u5171\u5b50\u4e32\uff0c\u8bb0\u5f55\u4e0b\u8be5\u516c\u5171\u5b57\u4e32\u7684\u957f\u5ea6\uff0c\u76f4\u5230\u679a\u4e3e\u5b8c\u6240\u6709\u5b57\u4e32\uff0c\u5f97\u5230\u7684\u6700\u957f\u7684\u957f\u5ea6\u4fbf\u662f\u6700\u957f\u516c\u5171\u5b57\u4e32\u7684\u957f\u5ea6\uff0c\u6700\u540e $a$ \u4e32\u548c $b$ \u4e32\u7684\u957f\u5ea6\u4e0e\u6700\u957f\u516c\u5171\u5b57\u4e32\u7684\u957f\u5ea6\u76f8\u51cf\u7684\u5dee\u4e4b\u548c\u4fbf\u662f\u6700\u5c11\u6240\u9700\u64cd\u4f5c\u6b21\u6570\u3002\n\n\n\n# **AC\u4ee3\u7801**\n\n\n\n\n\n\n```\n\n#include <iostream>\n\nusing namespace std;\n\nint main()\n{\n    int n;\n    cin>>n;\n\n    while (n--)\n    {\n        string a,b;\n        cin>>a>>b;\n        int maxn=0;//\u5f53\u4e24\u4e2a\u5b57\u4e32\u5b8c\u5168\u4e0d\u76f8\u540c\u65f6\u6700\u957f\u516c\u5171\u5b50\u4e32\u957f\u5ea6\u4e3a0\n\n        int l1=a.size(),l2=b.size();\n\n        for (int len=1;len<=min(l1,l2);len++\n        {\n            for (int i=0;i+len-1<l1;i++)\n            {\n                for (int j=0;j+len-1<l2;j++)\n                {\n                    if (a.substr(i,len)==b.substr(j,len)) //substr(\u8d77\u59cb\u4e0b\u6807\uff0c(\u5b50\u4e32\u957f\u5ea6))\uff0c\u8fd4\u56de\u5b50\u4e32\n                        maxn=max(maxn,len);\n                }\n            }\n        }\n        cout<<(l1-maxn)+(l2-maxn)<<'\\n';\n    }\n    return 0;\n}\n```\n",
        "postTime": 1616753600,
        "uid": 428310,
        "name": "thhxxx",
        "ccfLevel": 0,
        "title": "CF1506C\u9898\u89e3"
    }
]