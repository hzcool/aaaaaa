[
    {
        "content": "[\u9898\u9762](https://www.luogu.com.cn/problem/CF212E)\n\n\u6839\u636e\u9898\u76ee\u7684\u8981\u6c42\u3002\u6211\u4eec\u5148\u753b\u4e00\u9897\u6811\u6765\u5b9e\u9a8c\u4e00\u4e0b\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/d4c480oe.png)\n\n\u56e0\u4e3a\u9898\u76ee\u8981\u6c42\u67d3\u8272\u7684\u70b9\u7684\u6570\u91cf\u6700\u591a\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u5168\u90e8\u67d3\u6210\u540c\u4e00\u4e2a\u989c\u8272\u3002\u4f46\u662f\uff0c\u9898\u76ee\u8981\u6c42\u7ea2\u8272\u548c\u84dd\u8272\u90fd\u8981\u51fa\u73b0\uff0c\u6240\u4ee5\u4fbf\u6709\u4e86\u4e0b\u4e00\u5f20\u56fe\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/c6z6x9yb.png)\n\n\u4f46\u8fd9\u6837\u6253\u4e86\u7eff\u8272\u5706\u5708\u7684\u8fb9\u7684\u4e24\u8fb9\u5c31\u662f\u4e0d\u4e00\u6837\u7684\u989c\u8272\u4e86\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u5fc5\u987b\u4e0d\u7ed9 4 \u53f7\u70b9\u67d3\u8272\uff0c\u5373\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/4k13k5ot.png)\n\n\u5176\u4f59\u60c5\u51b5\u53ef\u4ee5\u81ea\u5df1\u63a8\u4e00\u4e0b\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u6211\u4eec\u53ea\u80fd\u5c06\u4e00\u4e2a\u7ed3\u70b9\u4e0d\u67d3\u8272\uff0c\u7136\u540e\u5c06\u5176\u5220\u53bb\uff0c\u5176\u4f59\u7684\u8fde\u901a\u5757\u5185\u90e8\u67d3\u6210\u540c\u4e00\u79cd\u989c\u8272\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u8fd9\u4e2a\u8282\u70b9\uff0c\u7136\u540e 0-1 \u80cc\u5305\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n  #include<bits/stdc++.h>\n  using namespace std;\n  int n,cnt,tot,h[5005],w[5005],c[5005];\n  bitset<5005>ans,dp;//0-1\u80cc\u5305\n  struct edge{\n      int v,nxt;\n  }e[10005];\n  void adde(int u,int v){\n      e[++cnt].nxt=h[u];\n      h[u]=cnt;\n      e[cnt].v=v;\n  }//\u94fe\u5f0f\u524d\u5411\u661f\n  void dfs(int x,int fa){\n      w[x]++;\n      for(int i=h[x];i;i=e[i].nxt){\n          if(e[i].v==fa)continue;\n          dfs(e[i].v,x);\n          w[x]+=w[e[i].v];\n      }\n  }//\u6c42\u4ee51\u4e3a\u6839\u65f6\u5206\u522b\u4ee5\u6bcf\u4e2a\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u7684\u8282\u70b9\u6570\n  void dfs1(int x,int fa){\n      int tot=0,sum=0;\n      for(int i=h[x];i;i=e[i].nxt){\n          if(e[i].v==fa)continue;\n          c[++tot]=w[e[i].v];\n          sum+=w[e[i].v];\n      }\n      c[++tot]=n-sum-1;\n      dp.reset();\n      dp[0]=1;\n      for(int i=1;i<=tot;i++){\n          for(int j=n;j>=c[i];j--){\n              if(dp[j-c[i]])dp[j]=1;\n          }\n      }\n      ans|=dp;//0-1\u80cc\u5305\n      for(int i=h[x];i;i=e[i].nxt){\n          if(e[i].v==fa)continue;\n          dfs1(e[i].v,x);\n      }\n  }\n  int main()\n  {\n      scanf(\"%d\",&n);\n      for(int i=2,a,b;i<=n;i++)scanf(\"%d%d\",&a,&b),adde(a,b),adde(b,a);\n      dfs(1,0);\n      dfs1(1,0);\n      tot=0;\n      for(int i=1;i<n-1;i++)if(ans[i])tot++;//\u4e00\u5171\u6709\u591a\u5c11\u89e3\n      printf(\"%d\\n\",tot);\n      for(int i=1;i<n-1;i++)if(ans[i])printf(\"%d %d\\n\",i,n-i-1);//\u8f93\u51fa\n      return 0;\n  }\n```",
        "postTime": 1647659457,
        "uid": 428358,
        "name": "cqbztzl",
        "ccfLevel": 5,
        "title": "CF212E\u9898\u89e3"
    },
    {
        "content": "~~\u9898\u76ee\u592a\u4e0d\u53cb\u597d\u4e86\uff0cCF \u4e0a\u6ca1\u9898\u89e3\uff0c\u6d1b\u8c37\u4e0a\u53ea\u6709\u4e00\u7bc7\u8fd8\u770b\u4e0d\u61c2\u7684\u9898\u89e3\u3002~~\n\n\u9996\u5148\u58f0\u660e\u4e00\u4e0b\uff0c\u8fd9\u9898\u76ee\u548c\u6811\u5f62 DP \u4e00\u70b9\u5173\u7cfb\u4e5f\u6ca1\u6709\uff0c\u7eaf\u7cb9\u7528\u4e86 DP \u548c \u6811\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5148\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u7ed3\u8bba\uff0c$a+b$ \u6700\u5927\u53ef\u4ee5\u53d6 $n-1$\u3002\n\n\u8bc1\u660e\uff1f\u8003\u8651\u4e00\u4e2a\u8282\u70b9\u4f5c\u4e3a\u4e0d\u67d3\u8272\u7684\u8282\u70b9\uff0c\u90a3\u4e48\u5982\u679c\u5b83\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5b83\u7684\u5b50\u6811\u662f\u80af\u5b9a\u80fd\u6ee1\u8db3 $a>0$ \u4e14 $b>0$\uff0c\u56e0\u4e3a\u5b83\u7684\u5b50\u6811\u4e2a\u6570\u4e0d\u53ef\u80fd\u5c11\u4e8e $2$ \u4e2a\u3002\n\n\u800c $n \\ge 3$ \uff0c\u6240\u4ee5\u5c31\u5f88\u663e\u7136\u4e86\u3002\n\n\u90a3\u4e48\u77e5\u9053\u4e86\u6700\u5927\u53ef\u4ee5\u53d6 $n-1$\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u679a\u4e3e\u90a3\u4e2a\u4e0d\u67d3\u8272\u7684\u8282\u70b9\uff0c\u5e76\u4e14\u641c\u51fa\u5b50\u6811\u5927\u5c0f\u3002\n\n\u5728\u6b64\u57fa\u7840\u4e0a\uff0c\u5b50\u6811\u5927\u5c0f\u5fc5\u5b9a\u662f\u8981\u67d3\u6210\u540c\u6837\u4e00\u4e2a\u989c\u8272\u7684\u3002\n\n\u6240\u4ee5\u8fd9\u4e2a\u6a21\u578b\u5c31\u8f6c\u5316\u4e3a\u4e86\uff0c\u7ed9\u5b9a\u51e0\u4e2a\u6570\uff0c\u6c42\u51fa\u4ed6\u4eec\u80fd\u62fc\u51fa\u7684\u6570\u3002\n\n\u5f53\u7136\uff0c\u77e5\u9053\u4e86 $a$ \u4e4b\u540e $n-1-a$ \u5373\u4e3a $b$\u3002\n\n\u6240\u4ee5\uff0c\u8fd9\u9898\u76ee\u5c31\u5f88\u7b80\u5355\u7684\u89e3\u51b3\u4e86\uff0c\u65b9\u6848\u6570\u6700\u5927\u4e0d\u4f1a\u8d85\u8fc7 $n$\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u8f93\u51fa\u3002~~\u4e0d\u8fc7\u50cf\u8fd9\u79cd\u8f93\u51fa\u65b9\u6848\u7684\u9898\u76ee\uff0c\u65b9\u6848\u6570\u771f\u7684\u4f1a\u5f88\u5927\u4e48\uff1f~~\n\ncode\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\nconst int INF=5005;\nstruct _node_edge {\n        int to_,next_;\n} edge[INF<<1];\nint n,head[INF],tot,in[INF],ans1,size1[INF],f[INF],ans[INF];\nbool vis[INF];\nvoid add_edge(int x,int y) {\n        edge[++tot]=(_node_edge){y,head[x]};\n        head[x]=tot; in[y]++; return;\n}\nint ksm(int x,int y) {\n        int ans=1,res=x;\n        while (y) {\n                if (y&1) ans=(ans*res);\n                res*=res;\n                y>>=1;\n        }\n        return ans;\n}\nint DFS(int x) {\n        if (vis[x]) return 0; vis[x]=true;\n        int sum=1;\n        for (int i=head[x]; i; i=edge[i].next_)\n                sum+=DFS(edge[i].to_);\n        return sum;\n}\nsigned main()\n{\n        scanf(\"%d\",&n);\n        for (int i=1; i<n; i++) {\n                int x=0,y=0; scanf(\"%d %d\",&x,&y);\n                add_edge(x,y); add_edge(y,x);\n        }\n        for (int i=1; i<=n; i++) {\n                if (in[i]==1) continue;\n                memset(vis,false,sizeof vis);\n                memset(f,0,sizeof f);\n                memset(size1,0,sizeof size1);\n                vis[i]=true; int tot=0;\n                for (int j=head[i]; j; j=edge[j].next_) {\n                        if (vis[edge[j].to_]) continue;\n                        size1[++tot]=DFS(edge[j].to_);\n                }\n                f[0]=1;\n                for (int j=1; j<=tot; j++) {\n                        for (int k=n; k>=size1[j]; k--) {\n                                f[k]|=f[k-size1[j]];\n                                ans[k]|=f[k];\n                        }\n                }\n        }\n        for (int i=1; i<n-1; i++) {\n                if (!ans[i]) continue;\n                ans1++;\n        }\n        cout<<ans1<<\"\\n\";\n        for (int i=1; i<n-1; i++) {\n                if (!ans[i]) continue;\n                cout<<i<<\" \"<<n-1-i<<\"\\n\";\n        }\n        return 0;\n}\n\n```\n",
        "postTime": 1620997814,
        "uid": 208653,
        "name": "_edge_",
        "ccfLevel": 0,
        "title": "CF212E \u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\u4e3a $n-1$\uff0c\u56e0\u4e3a\u6211\u4eec\u9009\u5b9a\u4e00\u4e2a\u70b9\u4e0d\u6d82\uff0c\u90a3\u4e48\u5176\u5b83\u7684\u5b50\u6811\u5c31\u53ef\u4ee5\u6d82\u989c\u8272\uff0c\u6240\u4ee5\u5c31\u53ea\u6709\u4e00\u4e2a\u70b9\u4e0d\u6d82\u3002\n\n\u90a3\u4e48\u5269\u4e0b\u7684\u5b50\u6811\u6c42\u51fa\u5b83\u7684 `size`\uff0c\u6bcf\u4e2a\u5b50\u6811\u6709\u4e24\u79cd\u72b6\u6001\uff1a\u7ea2\u3001\u84dd\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u53ea\u9700\u8981 `01` \u80cc\u5305\u5373\u53ef\u3002\n\n\u81f3\u4e8e\u8f93\u51fa\uff0c\u628a\u53ef\u4ee5\u7684\u60c5\u51b5\u7528 `bool` \u6807\u8bb0\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2)$\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nvector<int> G[5005];\nint n,sz[5005],a[5005],tot;\nbool dp[5005],f[5005];\nvoid init(int u,int fa){\n\tsz[u]=1; \n\tfor(int i=0,len=G[u].size();i<len;++i){\n\t\tint v=G[u][i];\n\t\tif(v==fa)\n\t\t\tcontinue;\n\t\tinit(v,u);\n\t\tsz[u]+=sz[v];\n\t}\n}\nvoid dfs(int u){\n\tfor(int i=0,len=G[u].size();i<len;++i){\n\t\tint v=G[u][i];\n\t\tfor(int j=n-1;j>=sz[v];--j)\n\t\t\tdp[j]|=dp[j-sz[v]];\n\t}\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1,u,v;i<n;++i){\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tG[u].push_back(v);\n\t\tG[v].push_back(u); \n\t} \n\tfor(int i=1;i<=n;++i){\n\t\tmemset(sz,0,sizeof(sz));\n\t\tmemset(dp,0,sizeof(dp));\n\t\tdp[0]=1;\n\t\tinit(i,0);\n\t\tdfs(i);\n\t\tfor(int j=1;j<=n-2;++j)\n\t\t\tif(dp[j])\n\t\t\t\tf[j]=1;\n\t}\n\tfor(int i=1;i<=n-2;++i)\n\t\tif(f[i])\n\t\t\ta[++tot]=i;\n\tprintf(\"%d\\n\",tot);\n\tfor(int i=1;i<=tot;++i)\n\t\tprintf(\"%d %d\\n\",a[i],n-1-a[i]);\n\treturn 0;\n}\n```",
        "postTime": 1647656329,
        "uid": 556362,
        "name": "UnnamedOrNamed",
        "ccfLevel": 5,
        "title": "CF212E IT Restaurants \u9898\u89e3"
    },
    {
        "content": "# Solution\n\n\u56e0\u4e3a\u8981\u6c42\u67d3\u8272\u8282\u70b9\u591a\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\u4e0d\u67d3\u8272\uff0c\u5176\u4f59\u8282\u70b9\u90fd\u9700\u8981\u67d3\u8272\u3002\n\n\u5047\u8bbe\u5f53\u524d $u$ \u8282\u70b9\u4e0d\u67d3\u8272\u3002\n\n\u6240\u4ee5\u5bf9\u4e8e $u$ \u5b83\u7684\u5b50\u6811\u5305\u62ec\u4e86\u5b83\u7684\u672c\u6765\u7684\u5b50\u6811\u548c\u9664\u4ed6\u4ee5\u5916\u7684\u3002\n\n\u56e0\u4e3a\u53ea\u8981\u6839\u8282\u70b9\u88ab\u67d3\u6210\u4e86\u4ec0\u4e48\uff0c\u90a3\u4e48\u5b83\u7684\u5b50\u8282\u70b9\u5c31\u4f1a\u67d3\u6210\u4ec0\u4e48\u3002\n\n\u6211\u4eec\u53d1\u73b0\u6709\u4e00\u70b9\u50cf $0/1$ \u80cc\u5305\u3002\n\n\u80cc\u5305\u8dd1\u7684\u662f\u8fd9\u4e2a\u989c\u8272\u6709\u6ca1\u6709\u4f7f\u7528\u8fc7\u3002\n\n\u7136\u540e\u5728\u5bf9\u7b54\u6848\u8fdb\u884c\u6216\u8fd0\u7b97\u4e00\u4e0b\u5c31\u884c\u4e86\u3002\n\n# Code\n\n```cpp\n#include<cmath>\n#include<cstdio>\n#include<vector>\n#include<iostream>\n#include<algorithm>\n#define mem(a,x) memset(a,x,sizeof(a))\n#define max(a,b) (a>b?a:b)\n#define min(a,b) (a<b?a:b)\n#define lowbot(x) x&-x\n#define inf 0x3f3f3f3f\n#define re register\n#define il inline\nusing namespace std;\nconst int N=5e3+5;\nil int qr(){\n\tint s=0,f=1;\n\tchar ch=getchar();\n\twhile(!isdigit(ch)) ch=='-'?f=-1:1,ch=getchar();\n\twhile(isdigit(ch)) s=s*10+ch-'0',ch=getchar();\n\treturn s*f;\n}\nil void qw(int x){\n\tif(x<0) putchar('-'),x=-x;\n\tif(x>9) qw(x/10);\n\tputchar(x%10+'0');\n}\nint n;\nint sz[N];\nbool ans[N];\nvector<int>G[N];\nvector<pair<int,int> >q;\nvoid DFS_SZ(int pos,int fa){\n\tsz[pos]=1;\n\tfor(int i=0;i<G[pos].size();i++){\n\t\tint kid=G[pos][i];\n\t\tif(kid!=fa){\n\t\t\tDFS_SZ(kid,pos);\n\t\t\tsz[pos]+=sz[kid];\n\t\t} \n\t}\n}\nvoid DFS(int pos,int fa){\n\tvector<int>C;\n\tC.push_back(n-sz[pos]);\n\tbool dp[N]={0};\n\tfor(int i=0;i<G[pos].size();i++){\n\t\tint kid=G[pos][i];\n\t\tif(kid!=fa){\n\t\t\tDFS(kid,pos);\n\t\t\tC.push_back(sz[kid]);\n\t\t}\n\t}\n\tdp[0]=1;\n\tfor(int i=0;i<C.size();i++)\n\t\tfor(int j=n;j>=C[i];j--) dp[j]|=dp[j-C[i]];\n\tfor(int i=0;i<=n;i++) ans[i]|=dp[i]; \n}\nint main(){\n\tn=qr();\n\tfor(re int i=1;i<n;i++){\n\t\tint u,v;\n\t\tu=qr(),v=qr();\n\t\tG[u].push_back(v);\n\t\tG[v].push_back(u);\n\t}\n\tDFS_SZ(1,-1);\n\tDFS(1,-1);\n\tint res=0;\n\tfor(int i=1;i<n-1;i++) res+=ans[i]; \n\tqw(res);\n\tputchar('\\n');\n\tfor(int i=1;i<n-1;i++) ans[i]?(qw(i),putchar(' '),qw(n-i-1),putchar('\\n')):1;\n\treturn 0;\n}\n```",
        "postTime": 1647655980,
        "uid": 364122,
        "name": "BigJoker",
        "ccfLevel": 6,
        "title": "CF212E IT Restaurants-\u9898\u89e3\u62a5\u544a"
    },
    {
        "content": "# 0x00 \u601d\u8def\n\u5148\u770b\u9898\u3002\n>\u7ed9\u5b9a\u4e00\u4e2a $n$\uff0c\u8868\u793a\u6709 $n$ \u4e2a\u8282\u70b9\uff08$1\\sim n$\uff09\u4ee5\u53ca\u63a5\u4e0b\u6765 $n-1$ \u6761\u8fb9\u7684**\u6811**\uff0c\u73b0\u7528\u4e24\u79cd\u989c\u8272\uff08\u7ea2\uff0c\u84dd\uff09\u5bf9\u8fd9\u9897\u6811\u7684\u8282\u70b9\u67d3\u8272\uff0c\u67d3\u8272\u89c4\u5219\u662f\uff0c\u6bcf\u4e2a\u8282\u70b9\u6709**\u4e09**\u79cd\u72b6\u6001\uff0c**\u8981\u4e48\u67d3\u6210\u7ea2\u8272\uff0c\u8981\u4e48\u67d3\u6210\u84dd\u8272\uff0c\u8981\u4e48\u4e0d\u67d3\u8272**\uff0c\u5e76\u4e14\u89c4\u5b9a**\u7528\u4e00\u6761\u8fb9\u8fde\u63a5\u7684\u4e24\u4e2a\u8282\u70b9\u8981\u4e48\u67d3\u6210\u989c\u8272\u76f8\u540c\uff0c\u8981\u4e48\u4e00\u4e2a\u67d3\u8272\u4e00\u4e2a\u4e0d\u67d3\u8272**\u3002\u95ee\u5728\u4fdd\u8bc1**\u67d3\u8272\u8282\u70b9\u6700\u591a**\u7684\u6761\u4ef6\u4e0b\uff0c\u7ea2\u8272\u4e0e\u84dd\u8272\u7684\u4e2a\u6570\u7684\u60c5\u51b5\u3002\uff08\u8981\u6c42\u662f**\u81f3\u5c11\u6709\u4e00\u4e2a\u8282\u70b9\u88ab\u67d3\u6210\u7ea2\u8272\uff0c\u81f3\u5c11\u4e00\u4e2a\u8282\u70b9\u88ab\u67d3\u6210\u84dd\u8272**\uff09\u3002\n\n\u636e\u9898\uff0c\u4e24\u79cd\u4e0d\u540c\u4e14\u67d3\u4e86\u8272\u7684\u8282\u70b9\u4e2d\u95f4\u5fc5\u5b9a\u6709\u4e00\u4e2a\u672a\u6d82\u8272\u7684\u8282\u70b9\u3002\u56e0\u6b64\u4e3a\u4fdd\u8bc1\u6700\u591a\u4e14\u542b\u6709\u4e24\u79cd\u4e0d\u540c\u989c\u8272\uff0c\u5c31\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u8282\u70b9\u4e0d\u67d3\u8272\u3002\u4e3a\u4e86\u8ba9\u6b64\u9898\u6613\u4e8e\u89e3\u51b3\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba9\u90a3\u4e2a\u4e0d\u6d82\u8272\u7684\u8282\u70b9\u4f5c\u4e3a\u6839\u8282\u70b9\uff08\u56e0\u4e3a\u65e0\u5411\u8fb9\uff09\uff0c\u90a3\u4e48\u5b83\u7684\u6bcf\u4e00\u4e2a\u5b50\u6811\u5185\u90e8\u989c\u8272\u4e00\u5b9a\u76f8\u540c\uff0c\u5426\u5219\u65e0\u6cd5\u6ee1\u8db3\u6700\u5927\u8fd9\u4e2a\u6761\u4ef6\u3002\u5f53\u7136\uff0c\u6bcf\u4e2a\u5b50\u6811\u989c\u8272\u90fd\u662f\u53ef\u4ee5\u81ea\u9009\u7684\u3002\u6240\u4ee5\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5\u8bf7\u51fa dp \u5927\u6cd5\u4e86\u3002\n\n**\u54e6\u5bf9\u4e86\uff0c\u4e0d\u8fc7\u4e0d\u8981\u5fd8\u4e86\u6392\u9664\u53f6\u5b50\u8282\u70b9\uff0c\u56e0\u4e3a\u53f6\u5b50\u8282\u70b9\u6709\u4e14\u53ea\u6709\u4e00\u68f5\u5b50\u6811\u65e0\u6cd5\u6ee1\u8db3\u81f3\u5c11\u6709\u4e00\u4e2a\u84dd\u8272\u8282\u70b9\u548c\u4e00\u4e2a\u7ea2\u8272\u8282\u70b9\u3002**\n# 0x01 \u5b9a\u4e49\u72b6\u6001\n\u5b9a\u4e49 `dp[i]` \uff1a\u8868\u793a\u5728\u6811\u4e0a\u6709 `i` \u4e2a\u7ea2\u8272\u8282\u70b9\u662f\u5426\u53ef\u884c\u3002\u56e0\u6b64 `dp[i]` \u53ef\u4ee5\u4e3a `bool` \u6570\u7ec4\u8282\u7701\u7a7a\u95f4\u3002\n\n# 0x02 \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\n\u7531\u4e8e\u6211\u4eec\u53ef\u4ee5\u56fa\u5b9a\u4e00\u4e2a\u5b50\u6811\u4f7f\u5176\u989c\u8272\u4e3a\u7ea2\u8272\u3002\u5047\u8bbe\u6b64\u5b50\u6811\u5927\u5c0f\u4e3a $size$\uff0c\u90a3\u4e48 `dp[k]` \u53ef\u884c\u5f53\u4e14\u4ec5\u5f53 `dp[k-size]` \u53ef\u884c\uff08`k` \u7684\u5927\u5c0f\u4ece $size$ \u5230 $n$\u3002\uff09\u3002\u7531\u4e8e\u5b50\u6811\u5f88\u591a\uff0c\u6709\u4e00\u4e2a `dp[k-size]==1` \u5373\u53ef\uff0c\u6240\u4ee5\u7528\u6216\u8fd0\u7b97\u5b9e\u73b0\uff08`|`\uff09\u3002\n\n# 0x03 \u8fb9\u754c\u60c5\u51b5\n- `dp[0]=1`\n\n\t\u8fd9\u662f\u4e00\u5b9a\u53ef\u884c\u7684\uff0c\u4f46\u7531\u4e8e\u9898\u76ee\u9650\u5236\u800c\u4e0d\u53ef\u8f93\u51fa\u3002\n    \n## code\n```c\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<string>\n#include<vector>\nusing namespace std;\nint d[5005],ans[5005],num,size[5005];\nbool book[5005];\nvector<int>V[5005];//\u90bb\u63a5\u8868\u5b58\u56fe\nint Go(int now)//\u627e\u5b50\u6811 size\n{\n    int i,sum=1;\n    if(book[now])\n        return 0;\n    book[now]=1;\n    for(i=0;i<V[now].size();i++)\n       sum+=Go(V[now][i]);\n    return sum;\n}\nint main()\n{\n\tint n,i,j,u,v,tot,k;\n    scanf(\"%d\",&n);\n    for(i=1;i<n;i++)\n    {\n        scanf(\"%d %d\",&u,&v);\n        V[u].push_back(v);\n        V[v].push_back(u);\n    }\n    for(i=1;i<=n;i++)\n    {\n        if(V[i].size()==1)\n            continue;\n       //\u6bcf\u4e00\u4e2a\u8282\u70b9\u4f5c\u4e3a\u6839\u8282\u70b9\u7684\u65f6\u5019\u9700\u8981\u6e05\u7a7a\uff0c\u56e0\u6b64ans\u6570\u7ec4\u7528\u6765\u5b58\u50a8\u6700\u540e\u7684\u7b54\u6848\n        memset(book,0,sizeof(book));\n        memset(d,0,sizeof(d));\n        memset(size,0,sizeof(size));\n        tot=0;\n        book[i]=1;\n        for(j=0;j<V[i].size();j++)\n        {\n            if(book[V[i][j]])\n                continue;\n            size[++tot]=Go(V[i][j]);\n        }\n        d[0]=1;\n        for(j=1;j<=tot;j++)//dp\u8f6c\u79fb\n        {\n            for(k=n;k>=size[j];k--)\n            {\n                d[k]|=d[k-size[j]];\n                ans[k]|=d[k];\n            }\n        }\n    }\n    for(i=1;i<n-1;i++)\n    {\n        if(ans[i])\n            num++;\n    }\n    printf(\"%d\\n\",num);\n    for(i=1;i<n-1;i++)\n    {\n        if(!ans[i])\n            continue;\n        printf(\"%d %d\\n\",i,n-i-1);\n    }\n\treturn 0;\n}\n```",
        "postTime": 1647651219,
        "uid": 465692,
        "name": "Harry_Hedwig",
        "ccfLevel": 6,
        "title": "CF212E IT Restaurants \u9898\u89e3"
    },
    {
        "content": "Codeforces 212E IT Restaurants\n\n\u9898\u610f\uff1a\u7ed9\u4f60\u4e00\u4e2a\u65e0\u5411\u6811\uff0c\u73b0\u5728\u7528\u4e24\u79cd\u989c\u8272\u53bb\u7ed9\u8fd9\u9897\u6811\u4e0a\u7684\u8282\u70b9\u67d3\u8272\u3002\u7528\uff08a,b\uff09\u8868\u793a\u4e24\u79cd\u989c\u8272\u5206\u522b\u67d3\u7684\u8282\u70b9\u6570\u3002\n\n\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a\n\n1.\u4efb\u4f55\u4e00\u79cd\u989c\u8272\u81f3\u5c11\u4f7f\u7528\u4e00\u6b21\uff0c\u5373$a>=1\\&\\&b>=1$\u3002\n\n2.\u4e24\u79cd\u989c\u8272\u67d3\u7684\u8282\u70b9\u4e0d\u80fd\u76f8\u90bb\uff0c\u5373\u4e0d\u80fd\u6709\u8fb9\u7684\u4e24\u7aef\u67d3\u4e0d\u540c\u8272\u3002\n\n\u8981\u4f60\u4f7fa+b\u503c\u6700\u5927\u4e0b\u8f93\u51fa\u4e0d\u540c\u7684\uff08a,b),\u6309\u7167a\u5347\u5e8f\u8f93\u51fa\u3002\n\n\u5206\u6790\uff1a\n\n\u5f88\u5bb9\u6613\u5f97\u51fa\u4e00\u4e2a\u7ed3\u8bba\uff1aa+b\u7684\u6700\u5927\u503c\u5c31\u662f\u53d6n-1\uff0c\u5373\u53ea\u6709\u4e00\u4e2a\u70b9\u4e0d\u67d3\u8272\u3002\u6211\u4eec\u5c31\u60f3\u5230\u6811\u5f62dp\u3002\n\n\u5148dfs\u6c42\u51fa\u4ee5\u6bcf\u4e2a\u8282\u70b9\u4e3a\u6839\u7684\u6811\u7684\u8282\u70b9\u6570\u3002\n\n\u5047\u5982\u6211\u4eec\u8ba8\u8bba\u4ee5u\u4e3a\u6839\u7684\u6811\u7684\u67d3\u8272\u65b9\u6848\uff0c\u6211\u4eec\u5c31\u8981\u77e5\u9053u\u7684\u5b57\u6811\u4e0e\u7236\u4eb2\u4e0a\u9762\u7684\u8282\u70b9\u6570\u80fd\u591f\u51d1\u51fa\u7684\u4e0d\u540ca(\u77e5\u9053a\uff0c\u5c31\u77e5\u9053\u4e86b)\u3002\n\n\u8fd9\u4e2a\u5730\u65b9\u5c31\u8981\u7528\u5230\u80cc\u5305\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <map>\n#include <set>\n#include <cmath>\n#include <ctime>\n#include <queue>\n#include <stack>\n#include <vector>\n#include <bitset>\n#include <cstdio>\n#include <cctype>\n#include <string>\n#include <cstring>\n#include <cassert>\n#include <climits>\n#include <cstdlib>\n#include <iostream>\n#include <algorithm>\n#include <functional>\nusing namespace std ;\n\n#define rep(i, a, b) for (int (i) = (a); (i) <= (b); (i)++)\n#define Rep(i, a, b) for (int (i) = (a) - 1; (i) < (b); (i)++)\n#define REP(i, a, b) for (int (i) = (a); (i) >= (b); (i)--)\n#define clr(a) memset(a, 0, sizeof(a))\n#define Sort(a, len, cmp) sort(a + 1, a + len + 1, cmp)\n#define ass(a, sum) memset(a, sum, sizeof(a))\n\n#define ls ((rt) << 1)\n#define rs ((rt) << 1 | 1)\n#define lowbit(x) (x & -x)\n#define mp make_pair\n#define pb push_back\n#define fi first\n#define se second\n#define endl '\\n'\n#define ENDL cout << endl\n#define SZ(x) ((int)x.size())\n\ntypedef long long ll ;\ntypedef unsigned long long ull ;\ntypedef vector <int> Vi ;\ntypedef pair <int, int> Pii ;\ntypedef pair <ll, ll> Pll ;\ntypedef map <int, int> mii ;\ntypedef map <string, int> msi ;\ntypedef map <ll, ll> mll ;\n\nconst int N = 5010 ;\nconst double eps = 1e-8 ;\nconst int iinf = INT_MAX ;\nconst ll linf = 2e18 ;\nconst double dinf = 1e30 ;\nconst int MOD = 1000000007 ;\n\ninline int read(){\n    int X = 0,w = 0 ;\n    char ch = 0;\n    while(!isdigit(ch)) {w |= ch == '-';ch = getchar();}\n    while(isdigit(ch)) X = (X<<3) + (X<<1) + (ch ^ 48),ch = getchar();\n    return w ? -X : X;\n}\n\nvoid write(int x){\n     if(x < 0) putchar('-'),x = -x;\n     if(x > 9) write(x / 10);\n     putchar(x%10 + '0');\n}\n\nvoid print(int x) {\n    cout << x << endl ;\n    exit(0) ;\n}\n\nvoid PRINT(string x) {\n    cout << x << endl ;\n    exit(0) ;\n}\n\nvoid douout(double x){\n     printf(\"%lf\\n\", x + 0.0000000001) ;\n}\n\nint flag[N] ;\nint dp[N][N] ;  //dp[i][j]\u8868\u793a\u4ee5i\u4e3a\u6839\u7684\u6570\uff0c\u662f\u5426\u80fd\u591f\u51d1\u51fa\u4e00\u4e2aa\u4e3aj\u7684\u6570\nint size[N] ;\nvector <int> e[N] ;\n\nint n ;\n\nvoid dfs(int now, int fat) {\n    size[now] = 1 ;\n    dp[now][0] = 1 ;\n    for (int i = 0; i < SZ(e[now]); i++) {\n        int to = e[now][i] ;\n        if (to == fat) continue ;\n        dfs(to, now) ;\n        size[now] += size[to] ;\n        for (int i = n - 1; i >= 0; i--) dp[now][i + size[to]] |= dp[now][i] ;\n    }\n    for (int i = n - 1; i >= 0; i--) dp[now][i + n - size[now]] |= dp[now][i] ;\n    for (int i = 1; i < n - 1; i++) flag[i] |= dp[now][i] ;\n}\n\nint main() {\n    scanf(\"%d\", &n) ;\n    for (int i = 1; i < n; i++) {\n        int a, b ;\n        scanf(\"%d%d\", &a, &b) ;\n        e[a].pb(b) ;\n        e[b].pb(a) ;\n    }\n    dfs(1, -1) ;\n    int ans = 0 ;\n    for (int i = 1; i < n; i++) if (flag[i]) ans++ ;\n    cout << ans << endl ;\n    for (int i = 1; i < n - 1; i++) if (flag[i]) cout << i << \" \" << n - i - 1 << endl ;\n}\n\n```",
        "postTime": 1543191710,
        "uid": 54900,
        "name": "__Hacheylight__",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF212E \u3010IT Restaurants\u3011"
    }
]