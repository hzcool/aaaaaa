[
    {
        "content": "\u672c\u849f\u84bb ~~\u7b2c\u4e00\u7bc7~~ \u7b2c\u4e8c\u7bc7\u9898\u89e3\uff0c\u6765\u6c34\u4e00\u9053 ~~\uff08\u4e2a\u4eba\u4e3b\u89c2\u611f\u89c9\uff09~~ \u7ea2/\u6a59\u9898\u3002\n\n\u672c\u9898\u4e2d\uff0cAlice \u7684\u8def\u5f84\u6709\u4ee5\u4e0b\u51e0\u79cd\u60c5\u51b5\uff1a\n\n1. \u4e00\u76f4\u5411\u53f3\uff0c\u7ed3\u679c\u662f\u4e00\u6392 `R`\u3002\n2. \u4e00\u76f4\u5411\u5de6\uff0c\u7ed3\u679c\u662f\u4e00\u6392 `L`\u3002\n3. \u5148\u5411\u5de6\u518d\u5411\u53f3\uff0c\u7ed3\u679c\u662f\u4e00\u6392 `R` \u53f3\u9762\u662f\u4e00\u6392 `L`\u3002\n4. \u5148\u5411\u53f3\u518d\u5411\u5de6\uff0c\u7ed3\u679c\u662f\u4e00\u6392 `L` \u5de6\u9762\u662f\u4e00\u6392 `R`\u3002\n5. \u5148\u5411\u5de6\uff0c\u518d\u5411\u53f3\uff0c\u6700\u540e\u518d\u5411\u5de6\uff0c\u7ed3\u679c\u662f\u4e00\u6392 `R` \u53f3\u9762\u4e00\u6392 `L`\u3002\n6. \u5148\u5411\u53f3\uff0c\u518d\u5411\u5de6\uff0c\u6700\u540e\u518d\u5411\u53f3\uff0c\u7ed3\u679c\u662f\u4e00\u6392 `R` \u53f3\u9762\u4e00\u6392 `L`\u3002\n\n\u56e0\u6b64\u6211\u4eec\u63a8\u65ad\u51fa\uff0c\u6700\u7ec8\u53ea\u6709\u4e09\u79cd\u60c5\u51b5\uff1a\u4e00\u6392 `L`\u3001\u4e00\u6392 `R`\u3001\u4e00\u6392 `R` \u53f3\u8fb9\u4e00\u6392 `L`\u3002\n\n\u5982\u679c\u4f60\u89c9\u5f97\u6b64\u63a8\u8bba\u4ecd\u9700\u52a0\u4ee5\u8bc1\u660e\uff0c\u90a3\u4e48\u6211\u5c31\u8bc1\u660e\u4e00\u4e0b\u3002\n\n\u56e0\u4e3a\u811a\u5370\u8e29\u5728\u6765\u65f6\u7684\u4f4d\u7f6e\u800c\u975e\u5f53\u524d\u4f4d\u7f6e\uff0c\u6240\u4ee5\u5982\u679c\u6298\u8fd4\uff0c\u65b0\u7684\u4e0d\u540c\u65b9\u5411\u7684\u811a\u5370\u4f1a\u5b8c\u5168\u8986\u76d6\u539f\u6765\u7684\u811a\u5370\u3002\u56e0\u6b64\uff0c\u4e0d\u53ef\u80fd\u51fa\u73b0\u4e24\u6bb5\u540c\u5411\u811a\u5370\u4e4b\u95f4\u51fa\u73b0\u53cd\u5411\u811a\u5370\uff0c\u811a\u5370\u4e5f\u4e0d\u53ef\u80fd\u65ad\u5f00\u3002\n\n\u800c\u5982\u679c\u6298\u8fd4\uff0c`L` \u4e00\u5b9a\u662f\u4ece\u53f3\u4fa7\u5f00\u59cb\u8986\u76d6 `R` \u7684\uff1b`R` \u4e5f\u4e00\u5b9a\u662f\u4ece\u5de6\u4fa7\u5f00\u59cb\u8986\u76d6 `L` \u7684\u3002\u6240\u4ee5\uff0c\u4e0d\u53ef\u80fd\u5de6\u8fb9\u662f `L`\uff0c\u53f3\u8fb9\u662f `R`\u3002\n\n\u770b\u5230\u8fd9\u91cc\uff0c\u4f60\u53ef\u80fd\u5df2\u7ecf\u6709\u601d\u8def\u4e86\u3002\u6211\u4eec\u518d\u89c2\u5bdf\u5230\u9898\u76ee\u4e2d\u7684\u4e00\u53e5\u8bdd\uff08\u82f1\u6587\uff09\uff1a\n\n`If there are several possible solutions you can print any of them.`\n\n\u53ea\u8981\u89e3\u6ee1\u8db3\u8981\u6c42\uff0c\u90fd\u89c6\u4e3a\u6b63\u786e\u7b54\u6848\u3002\n\n\u601d\u8def\uff1a\u521a\u624d\u5217\u4e3e\u7684\u51e0\u79cd\u60c5\u51b5\u4e2d\uff0c\u5047\u5b9a\u4e00\u5b9a\u662f 1\u30012\u30013 \u4e09\u7c7b\u3002\u5373\uff1a\n\n+ \u5982\u679c\u8f93\u5165\u4e2d\u6ca1\u6709 `L`\uff0c\u5219\u4e3a\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u4ece\u6700\u5de6\u4fa7\u7684 `R` \u65b9\u683c\u5f00\u59cb\uff0c\u5230\u6700\u53f3\u4fa7\u7684 `R` \u65b9\u683c\u53f3\u4fa7\u7684 `.` \u65b9\u683c\u7ed3\u675f\u3002\n+ \u5982\u679c\u8f93\u5165\u4e2d\u6ca1\u6709 `R`\uff0c\u5219\u4e3a\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u4ece\u6700\u53f3\u4fa7\u7684 `L` \u65b9\u683c\u5f00\u59cb\uff0c\u5230\u6700\u5de6\u4fa7\u7684 `L` \u65b9\u683c\u5de6\u4fa7\u7684 `.` \u65b9\u683c\u7ed3\u675f\u3002\n+ \u5982\u679c\u8f93\u5165\u4e2d `L` \u548c `R` \u90fd\u6709\uff0c\u5219\u4e3a\u7b2c\u4e09\u79cd\u60c5\u51b5\uff0c\u4ece\u6700\u53f3\u4fa7\u7684 `L` \u65b9\u683c\u5f00\u59cb\uff0c\u5230\u6700\u53f3\u4fa7\u7684 `R` \u65b9\u683c\u53f3\u4fa7\u7684 `L` \u65b9\u683c\u7ed3\u675f\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint n;\nchar s[1010];\n\nint main()\n{\n    cin >> n >> s + 1;\n    \n    // \u7edf\u8ba1\u662f\u5426\u6709 L \u548c R\n    bool l = false,r = false;\n    for (int i = 1; i <= n; i++)\n        if (s[i] == 'L') l = true;\n        else if (s[i] == 'R') r = true;\n    \n    if (l == false)\n    {\n        int a,b;\n        for (int i = 1; i <= n; i++)\n            if (s[i] == 'R') {a = i; break;} // \u5bfb\u627e\u7b2c\u4e00\u4e2a R \u683c\n        for (int i = n; i >= 1; i--)\n            if (s[i] == 'R') {b = i; break;} // \u5bfb\u627e\u6700\u540e\u4e00\u4e2a R \u683c\n        cout << a << \" \" << b + 1 << endl;\n    }\n    else if (r == false)\n    {\n        int a,b;\n        for (int i = 1; i <= n; i++)\n            if (s[i] == 'L') {a = i; break;} // \u5bfb\u627e\u7b2c\u4e00\u4e2a L \u683c\n        for (int i = n; i >= 1; i--)\n            if (s[i] == 'L') {b = i; break;} // \u5bfb\u627e\u6700\u540e\u4e00\u4e2a L \u683c\n        cout << b << \" \" << a - 1 << endl;\n    }\n    else\n    {\n        int a,b;\n        for (int i = n; i >= 1; i--)\n            if (s[i] == 'R') {a = i; break;} // \u5bfb\u627e\u6700\u540e\u4e00\u4e2a R \u683c\n        for (int i = n; i >= 1; i--)\n            if (s[i] == 'L') {b = i; break;} // \u5bfb\u627e\u6700\u540e\u4e00\u4e2a L \u683c\n        cout << b << \" \" << a + 1 << endl;\n    }\n    \n    return 0;\n}\n```",
        "postTime": 1668829334,
        "uid": 531709,
        "name": "LuoJingjia",
        "ccfLevel": 0,
        "title": "CF298A Snow Footprints \u9898\u89e3"
    },
    {
        "content": "## \u601d\u8def\n\n$L$ \u4ee3\u8868\u4ece\u53f3\u8fb9\u8d70\u8fc7\u6765\uff0c\u8d70\u5411\u5de6\uff1b$R$ \u4ee3\u8868\u4ece\u5de6\u8fb9\u8d70\u8fc7\u6765\uff0c\u8d70\u5411\u53f3\u3002\n\n\u6211\u4eec\u4e0d\u59a8\u5206\u6790\u4e00\u4e0b\u3002\n\n\u9996\u5148\uff0c\u6240\u6709\u7684 $L$ \u548c $R$ \u5fc5\u987b\u5168\u90e8\u6328\u5728\u4e00\u8d77\uff0c\u4e0d\u7136\u7684\u8bdd\uff0c\u5c31\u4e00\u5b9a\u4f1a\u5b58\u5728\u4e00\u6bb5\uff0c\u4f7f\u5f97\u8fd9\u4e00\u6bb5\u5448\uff1a\n\n$1$\u3001```LRL``` \u72b6\uff1a$L$ \u5728\u4e24\u8fb9 $R$ \u5728\u4e2d\u95f4\uff0c\u6b64\u65f6\u4e24\u4e2a $L$ \u4e0d\u80fd\u540c\u65f6\u8d70\u5230\uff0c\u4e0d\u6210\u7acb\uff1b\n\n$2$\u3001```RLR``` \u72b6\uff1a$R$ \u5728\u4e24\u8fb9 $L$ \u5728\u4e2d\u95f4\uff0c\u540c\u7406\uff0c\u4e24\u4e2a $R$ \u4e5f\u4e0d\u80fd\u540c\u65f6\u8d70\u5230\uff0c\u4e0d\u6210\u7acb\u3002\n\n\u7efc\u4e0a\uff0c$L$ \u4e0e $R$ \u5fc5\u987b\u540c\u7c7b\u6328\u5728\u4e00\u8d77\uff0c\u5448 ```LR``` \u6216 ```RL``` \u72b6\u3002\n\n\u7136\u800c\uff0c```LR``` \u5176\u5b9e\u662f\u4e0d\u6210\u7acb\u7684\u3002\n\n\u5206\u6790\u4e00\u4e0b\uff0c\u5728\u5de6\u7aef\u6709 $L$\uff0c\u53f3\u6bb5\u6709 $R$\uff0c\u610f\u4e3a\u4f60\u9700\u8981\u4ece\u53f3\u8fb9\u8d70\u5230\u6700\u5de6\u8fb9\u540c\u65f6\u4ece\u5de6\u8fb9\u8d70\u5230\u6700\u53f3\u8fb9\uff0c\u6b64\u65f6\u53ea\u80fd\u6ee1\u8db3\u4e00\u4e2a\uff0c\u800c\u53e6\u4e00\u4e2a\u4f1a\u88ab\u8986\u76d6\u4e0d\u540c\u7684\u811a\u5370\uff0c\u7edd\u5bf9\u4e0d\u53ef\u80fd\u662f ```LR``` \u72b6\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u603b\u7ed3\u4e00\u4e0b\uff0c\u7b26\u5408\u89c4\u5f8b\u7684\u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a\n\n$1$\u3001\u5168\u662f $L$\uff0c\u4f8b\uff1a```LLLLLL```\u3002\u6b64\u65f6\u7b54\u6848\u4e3a\u4ece\u6700\u53f3\u8fb9\u8d70\u5230\u6700\u5de6\u8fb9\u3002\n\n$2$\u3001\u5168\u662f $R$\uff0c\u4f8b\uff1a```RRRRR```\u3002\u6b64\u65f6\u7b54\u6848\u4e3a\u4ece\u6700\u5de6\u8fb9\u8d70\u5411\u6700\u53f3\u8fb9\u3002\n\n$3$\u3001\u5de6\u8fb9 $R$\u3001\u53f3\u8fb9 $L$\uff0c\u4f8b\u5982\uff1a```RRRRLLL```\u3002\u6b64\u65f6\u7b54\u6848\u4e3a\u4ece $R$ \u7b2c\u4e00\u4e2a\u5230 $R$ \u6700\u540e\u4e00\u4e2a\uff0c\u6216\u8005\u4ece $L$ \u6700\u540e\u4e00\u4e2a\u5230 $L$ \u7b2c\u4e00\u4e2a\u3002\u6211\u4eec\u6ce8\u610f\u5230\u4e00\u53e5\u8bdd\uff1a```The first test sample is the one in the picture.```\uff0c\u6240\u4ee5\u4e24\u79cd\u90fd\u53ef\u4ee5\uff0c\u6211\u4eec\u5c31\u7528\u7b2c\u4e00\u79cd\uff1a\u4ece $R$ \u7b2c\u4e00\u4e2a\u8d70\u5230 $R$ \u6700\u540e\u4e00\u4e2a\u5c31\u884c\u4e86\u3002\n\n## AC Code\n\n\u5df2\u7ecf\u8bba\u8bc1\u4e86\u60c5\u51b5\u6570\uff0c\u5b9e\u73b0\u5c31\u975e\u5e38\u7b80\u5355\u3002\n\n\u5177\u4f53\u7684\u4ee3\u7801\u5b9e\u73b0\uff0c\u770b\u6ce8\u91ca\u3002\n\n```cpp\n#include<btis/stdc++.h>\nusing namespace std;\n\nint main()\n{\n    string s; // \u539f\u96ea\u5730\u811a\u5370\n    int Rfst, Rlst, Lfst, Llst, n; \n    // R \u7684\u7b2c\u4e00\u4e2a\u3001R \u7684\u6700\u540e\u4e00\u4e2a\uff1bL \u7684\u7b2c\u4e00\u4e2a\u3001L\u7684\u6700\u540e\u4e00\u4e2a\uff1bs \u957f\u5ea6\n    cin >> s;\n    n = s.size(); // \u5b58\u957f\u5ea6\u4e8e n\n    s = \" \" + 1; // \u4ece 1 \u5f00\u59cb\n    for (int i = 1; i <= n; i++)\n        if (s[i] == 'R')\n        {\n            Rlst = i; // \u56e0\u4e3a\u6b63\u5e8f\u6700\u540e\u4e00\u4e2a R \u80af\u5b9a\u662f\u6700\u540e\u4e00\u4e2a\uff0c\u5ea7\u6905\u76f4\u63a5\u8986\u76d6\n            if (Rfst == 0) Rfst = i; // \u53ea\u6709\u524d\u9762\u6ca1\u6709 R \u624d\u662f\u7b2c\u4e00\u4e2a\n        }\n        else if (s[i] == 'L')\n        {\n            Llst = i; // \u4e0e R\u540c\u7406 \n            if (Lfst == 0) Lfst = i; // \u4e0e R \u540c\u7406\n        }\n    // 1\u3001\u6ca1\u6709 L\uff0c\u53ea\u6709 R\uff0c\u5373 L \u8fde\u7b2c\u4e00\u4e2a\u90fd\u6ca1\u6709\n    if (Lfst == 0) cout << Rfst << \" \" << Rlst << endl;\n    // 2\u3001\u6ca1\u6709 R\uff0c\u53ea\u6709 L\uff0c\u5373 R \u8fde\u7b2c\u4e00\u4e2a\u90fd\u6ca1\u6709\n    else if (Rfst == 0) cout << Llst << \" \" << Lfst << endl;\n    // 3\u3001RRRRLLLL\n    else cout << Rfst << \" \" << Rlst << endl;\n    return 0;\n}\n```\n\n\u601d\u7ef4\u9898\uff0c\u53ea\u8981\u60f3\u901a\u4e86\u5c31\u975e\u5e38\u7b80\u5355\u4e86\uff0c\u9884\u5904\u7406\u548c\u7b80\u5355\u5224\u65ad\u5c31\u8fc7\u4e86\u3002",
        "postTime": 1670640318,
        "uid": 548203,
        "name": "KK_lang",
        "ccfLevel": 5,
        "title": "Snow Footprints \u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u6211\u4eec\u6765\u60f3\u60f3\u8fd9\u4e2a\u5b57\u7b26\u4e32\u4f1a\u662f\u4ec0\u4e48\u6837\u5b50\u7684\u3002\n\n\u6211\u4eec\u5148\u8bd5\u8bd5\uff0c\u968f\u4fbf\u79fb\u52a8\u3002\u53d1\u73b0\u8fd9\u4e2a\u5b57\u7b26\u4e32\u53ea\u6709 $3$ \u79cd\u60c5\u51b5\uff0c\u5373 $\\texttt{RRR}$ \u5f62\uff0c$\\texttt{LLL}$ \u5f62 \u548c $\\texttt{RRRLLL}$ \u5f62\u3002\n\n\u600e\u4e48\u53ef\u80fd\u53ea\u6709\u8fd9 $3$ \u79cd\u5462\uff1f\n\n\u663e\u7136\u4e0d\u53ef\u80fd\u6709 $\\texttt{LLLRRR}$ \u5f62\u3002\u5982\u679c\u6709\u7684\u8bdd\uff0c\u4f60\u5fc5\u987b\u53bb $\\texttt{L}$ \u8fde\u901a\u5757\u7684\u6700\u5de6\u4fa7\uff0c\u4e5f\u5fc5\u987b\u53bb $\\texttt{R}$ \u8fde\u901a\u5757\u7684\u6700\u53f3\u4fa7\u3002\u4f46\u8fd9\u4e24\u8005\u4e0d\u80fd\u540c\u65f6\u8fdb\u884c\uff0c\u4f60\u5fc5\u987b\u5148\u53bb\u5176\u4e2d\u4e00\u4e2a\uff0c\u518d\u53bb\u53e6\u4e00\u4e2a\u3002\u4f46\u662f\u8fd9\u6837\u5148\u53bb\u7684\u65b9\u5411\u7684\u811a\u5370\u5c31\u4f1a\u88ab\u540e\u53bb\u7684\u65b9\u5411\u811a\u5370\u8986\u76d6\u6389\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u8fdb\u4e00\u6b65\u63a8\u51fa\u6ca1\u6709\u4e00\u4e32\u5408\u6cd5\u7684\u811a\u5370\u542b\u6709 $\\texttt{LLLRRR}$ \u5f62\u7684\u5b50\u4e32\u3002\u5982\u679c\u4e00\u4e32\u811a\u5370\u7684\u8fde\u901a\u5757\u4e2a\u6570\u8d85\u8fc7 $2$ \u4e2a\uff0c\u5fc5\u5b9a\u4f1a\u542b\u6709 $\\texttt{LLLRRR}$ \u5f62\u7684\u5b50\u4e32\u3002\u6240\u4ee5\u6211\u4eec\u5f97\u51fa\u7ed3\u8bba\uff0c\u80af\u5b9a\u53ea\u6709\u8fd9 $3$ \u79cd\u5f62\u5f0f\u7684\u811a\u5370\u3002\n\n\u5c31\u8fd9\u4e09\u79cd\u4e0d\u5c31\u597d\u529e\u4e86\uff1f\uff1f\uff1f\n\n\u5982\u679c\u662f $\\texttt{RRR}$ \u6216 $\\texttt{LLL}$ \u5f62\u7684\u5c31\u76f4\u63a5\u5f80\u540c\u4e00\u4e2a\u65b9\u5411\u8d70\u3002\u5982\u679c\u662f $\\texttt{RRRLLL}$ \u5f62\uff0c\u53ef\u4ee5\u5148\u5411\u5de6\u518d\u5411\u53f3\uff0c\u4e5f\u53ef\u4ee5\u5148\u5411\u53f3\u518d\u5411\u5de6\uff0c\u968f\u4fbf\u54ea\u4e2a\u90fd\u884c\u3002\u8bb0\u5f55 $\\texttt{R}$ \u548c $\\texttt{L}$ \u8fde\u901a\u5757\u7684\u5de6\u53f3\u7aef\u70b9\uff0c\u7136\u540e\u6839\u636e\u60c5\u51b5\u9009\u4ed6\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\u5c31\u884c\u4e86\u3002\u4f46\u662f\u8981\u6ce8\u610f\u7ec8\u70b9\u7684\u4f4d\u7f6e\u8fd8\u6ca1\u6709\u8e29\u4e0a\u811a\u5370\u3002\n\nAC \u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\nusing namespace std;\nchar a[1010];\nint main()\n{\n    int n,Rl=0,Rr=0,Ll=0,Lr=0;//Rl,Rr,Ll,Lr \u5206\u522b\u8bb0\u5f55 R \u7684\u5de6\u53f3\u7aef\u70b9\u548c L \u7684\u5de6\u53f3\u7aef\u70b9\u3002\n    cin>>n;\n    a[0]='.',a[n+1]='.';\n    for(int i=1;i<=n+1;i++)\n    {\n        if(i<=n)cin>>a[i];\n        if(a[i]=='R'&&a[i-1]!=a[i])Rl=i;\n        if(a[i]=='L'&&a[i-1]!=a[i])Ll=i;\n        if(a[i-1]=='R'&&a[i-1]!=a[i])Rr=i-1;\n        if(a[i-1]=='L'&&a[i-1]!=a[i])Lr=i-1;\n    }\n    //RRR \u5f62\n    if(Ll==0&&Lr==0)cout<<Rl<<\" \"<<Rr+1<<endl;//\u4e00\u76f4\u5411\u53f3\n    //LLL \u5f62\n    else if(Rl==0&&Rr==0)cout<<Lr<<\" \"<<Ll-1<<endl;//\u4e00\u76f4\u5411\u5de6\n    //RRRLLL \u5f62\n    else cout<<Rl<<\" \"<<Ll-1<<endl;//\u6211\u9009\u7684\u662f\u5148\u5411\u53f3\u518d\u5411\u5de6\n    return 0;\n}\n```",
        "postTime": 1667744473,
        "uid": 554145,
        "name": "Netherite_sword_666",
        "ccfLevel": 5,
        "title": "Snow Footprints \u9898\u89e3"
    },
    {
        "content": "\u6ce8\u610f\u770b\u9898\u76ee \uff1a\u00a0\n\n\u5c31\u662f solar bear \u5fc5\u987b\u8d70\u8fc7\u8fd9\u683c\u4e4b\u540e\u624d\u4f1a\u9020\u6210\u5370\u8ff9\u7684\u53d8\u5316 \u8fd9\u70b9\u662f\u9700\u8981\u6ce8\u610f\u7684\u3002\n\n\u7ed3\u679c\u5c31\u53ea\u6709\u8fd9\u4e09\u79cd\u60c5\u51b5\u4e86\n\n\uff081\uff09RRRRR \u00a0\u4ece1\u8d70\u52306\n\n\uff082\uff09LLLLLL \u4ece6\u8d70\u52301\n\n\uff083\uff09RRRRLLLLL \u00a0\u8fd9\u79cd\u60c5\u51b5\u6211\u662f\u8003\u8651 \u7b2c\u4e00\u4e2aR\u51fa\u73b0\u7684\u4f4d\u7f6e\u4e3a\u8d77\u59cb\u4f4d\u7f6e\uff0c\u7b2c\u4e00\u4e2aL\u51fa\u73b0\u7684\u4f4d\u7f6e\u4e3a\u7ec8\u6b62\u4f4d\u7f6e\uff0c\u8fd9\u662f\u6700\u7ec8\u7684\u7ed3\u679c\u7684\u5176\u4e2d\u4e00\u9879\u3002\n\n### \u4e0d\u5b58\u5728 LLLLRRRR\u8fd9\u6837\u7684\u60c5\u51b5\n```cpp\n#include<bits/stdc++.h>\nchar s[3000];\nusing namespace std;\nint main()\n{\n    int n;\n    while(scanf(\"%d\",&n)!=EOF)\n    {\n         scanf(\"%s\",s);\n         int R=0,L=0,posR=n+10,posL=n+10;\n         for(int i=0;i<n;i++)\n         {\n            if(s[i]=='R')\n            {   //\u627e\u5230\u7b2c\u4e00\u4e2a\u51fa\u73b0\u7684R\n               R++;\n               if(posR>i)\n               {\n                  posR=i;\n               }\n            }\n            if(s[i]=='L')\n            {   //\u627e\u5230\u7b2c\u4e00\u4e2a\u51fa\u73b0\u7684L\n               L++;\n               if(posL>i)\n               {\n                  posL=i;           \n            }\n            }          \n         }\n         if(L==0){printf(\"%d %d\\n\",posR+1,posR+R+1);continue;}    //\u5168\u662fR\u7684\u60c5\u51b5\n         if(R==0){printf(\"%d %d\\n\",posL+L,posL);continue;}        //\u5168\u662fL\u7684\u60c5\u51b5\n         printf(\"%d %d\\n\",posR+1,posL);                           //\u7b2c\u4e09\u79cd\u60c5\u51b5\n    }                          \n    return 0;                          \n}    \n```\n",
        "postTime": 1553517343,
        "uid": 121907,
        "name": "LionShiZi",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF298A \u3010Snow Footprints\u3011"
    }
]