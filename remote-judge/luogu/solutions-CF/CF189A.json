[
    {
        "content": "\u770b\u4f3c\u5b8c\u5168\u80cc\u5305\u6a21\u677f\u9898\uff0c\u5b9e\u9645\u4e0a\u8fd8\u662f\u6709\u4e0d\u5c11\u5751\u70b9\u7684QAQ\n\n\u5148\u8c08\u8c08\u4e3a\u4ec0\u4e48\u8fd9\u9053\u9898\u7528\u5b8c\u5168\u80cc\u5305\u6765\u89e3\u3002\n\n\u9898\u76ee\u4e2d\u8bf4\u53ef\u4ee5\u5c06\u957f\u5ea6\u4e3a$n$\u7684\u7ef8\u5e26\u5207\u6210\u957f\u5ea6\u5206\u522b\u4e3a$a$\u3001$b$\u3001$c$\u4e09\u79cd\u957f\u5ea6\u7684\u7ef8\u5e26\uff0c\u6c42\u6700\u591a\u5207\u6210\u591a\u5c11\u6bb5\u3002\n\n\u6211\u4eec\u6765\u8fd9\u6837\u7406\u89e3\uff1a\u6709\u4e00\u4e2a\u5bb9\u91cf\u4e3a$n$\u7684\u80cc\u5305\uff0c\u6709\u4e09\u79cd\u7269\u54c1\uff0c\u6bcf\u4e2a\u7269\u54c1\u7684\u4f53\u79ef\u4e3a$a$\u3001$b$\u3001$c$\uff0c\u6c42\u6700\u591a\u80fd\u5230\u653e\u8fdb\u51e0\u4e2a\u7269\u54c1\u3002\n\n**so?**\n\n\u8fd9\u5c31\u662f\u5b8c\u5168\u80cc\u5305\u88f8\u9898\u55bd\u3002\n\n**\u4f46\u662f**\uff0c\u4ed4\u7ec6\u63e3\u6469\u539f\u9898\uff0c\u4f60\u4f1a\u53d1\u73b0\uff1a\u7ef8\u5e26\u5207\u6210\u7684\u5c0f\u7ef8\u5e26\u957f\u5ea6\u4e00\u5b9a\u8981\u5c5e\u4e8e$a$\uff0c$b$\uff0c$c$\u4e2d\u7684\u4e00\u79cd\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8f6c\u5316\u6210\u80cc\u5305\u95ee\u9898\uff0c**\u80cc\u5305\u4e00\u5b9a\u8981\u88c5\u6ee1\uff01\uff01\uff01**\n\n\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1f\n\n\u9996\u5148\uff0c\u5c06\u8ba1\u7b97\u6700\u5927\u6570\u91cf\u7684$f$\u6570\u7ec4\u5168\u90e8\u53d6$-1$\uff0c\u8dd1\u5b8c\u5168\u80cc\u5305\u7684\u65b9\u7a0b\u65f6\uff0c**\u8bb0\u4f4f\u5224\u65ad\u653e\u5165\u8fd9\u4e2a\u7269\u54c1\u524d\u65f6\u7684f\u6570\u7ec4\u662f\u4e0d\u662f-1**\uff0c\u5982\u679c\u4e0d\u662f\uff0c\u518d\u6267\u884c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u3002\n\n\u4f60\u4ee5\u4e3a\u7ed3\u675f\u4e86\uff1f\n\n**NO!**\n\n\u5982\u679c\u4f60\u5c31\u8fd9\u6837\u4e56\u4e56\u5730\u7167\u7740\u4e0a\u9762\u7684\u601d\u8def\u6253\u7684\u8bdd\uff0c\u4f60\u4f1a\u53d1\u73b0\u7a0b\u5e8f\u4e00\u76f4\u8f93\u51fa$-1$!\n\n**why\uff1f**\n\n\u5982\u679c\u4f60\u5168\u8d4b\u503c\u6210$-1$\uff0c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5c06\u6c38\u8fdc\u4e0d\u4f1a\u6267\u884c\uff0c$f[n]$\u4e5f\u4e00\u76f4\u662f$-1$!\n\n**How to solve this problem?**\n\n\u6839\u636e\u5e38\u8bc6\uff0c\u4e00\u4e2a\u957f\u5ea6\u4e3a$0$\u7684\u7ef8\u5e26\uff0c\u65e0\u8bba$a$\u3001$b$\u3001$c$\u662f\u591a\u5c11\uff0c\u90fd\u53ea\u80fd\u5207\u6210$0$\u6bb5\u3002\n\n**so?**\n\n\u5c06$f[0]$\u8d4b\u4e3a$0$\u5373\u53ef\u3002\n\n$AC$ $Code$\n\n```cpp\n#include<iostream>\n#include<cstring>\nusing namespace std;\n\nint n,w[4],f[4010];\n\nint main(){\n    cin>>n;\n    for(int i=1;i<=3;i++)\n        cin>>w[i];\n    memset(f,-1,sizeof(f));\n    f[0]=0;\n    for(int i=1;i<=3;i++)\n        for(int j=w[i];j<=n;j++){\n            if(f[j-w[i]]!=-1)\n                f[j]=max(f[j],f[j-w[i]]+1);\n        }\n    cout<<f[n]<<endl;\n    return 0;\n}\n```",
        "postTime": 1549545548,
        "uid": 88213,
        "name": "zhangyuhan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF189A \u3010Cut Ribbon\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5c31\u662f\u4e00\u4e2a\u88f8\u7684\u5b8c\u5168\u80cc\u5305\n\n\u53ef\u662f\u80cc\u5305\u5fc5\u987b\u8981\u88c5\u6ee1\u3002\n\n\u53ef\u662f\u524d\u9762\u6ca1\u6709\u770b\u51fa\u6765~~\u4e00\u5b9a\u662f\u6211\u82f1\u6587\u592a\u5dee~~\n\n\u6240\u4ee5\u5b8c\u5168\u80cc\u5305\u5927\u5bb6\u90fd\u4f1a\u5427\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n,a[12],f[120000];\n\nint main() {\n    cin>>n>>a[1]>>a[2]>>a[3];\n    memset(f,-1,sizeof f);\n    f[0]=0;\n    for(int i=1;i<=3;i++)\n        for(int j=a[i];j<=n;j++){\n            if(f[j-a[i]]<0) continue;\n            f[j]=max(f[j],f[j-a[i]]+1);\n        }\n    cout<<f[n];\n    return 0;\n}\n\n\u795e\u7287\u8f7b\u55b7~~\n\n```",
        "postTime": 1532086377,
        "uid": 83859,
        "name": "wky32768",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF189A \u3010Cut Ribbon\u3011"
    },
    {
        "content": "\u5b8c\u5168\u80cc\u5305\u6a21\u677f\u9898\n\n\u6bd5\u7adf\u4e5f\u662fA\u9898\n\n\u5b8c\u5168\u80cc\u5305\u5dee\u4e0d\u591a\u5c31\u662f\u62c6\u5206\u621001\u80cc\u5305\u5c31\u662f\u4e8c\u8fdb\u5236\u4f18\u5316\u5427\n\n\u4e0a\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cmath>\n#include<cstring>\n#include<string>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<map>\n#include<stack>\n#include<set>\n#include<array>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int inf=(int)2e9+99;\nconst int N=4e4+5;\n\nint x,y,z;\nint n,a[3],b[N];\n\nint main()\n{\n    cin>>n>>a[0]>>a[1]>>a[2];\n    memset(b,-1,sizeof(b));\n    b[0]=0;\n    for(int i=0;i<3;i++)\n        for(int j=0;j<=n;j++)\n            if(b[j]!=-1&&b[j]+1>b[j+a[i]]) b[j+a[i]]=b[j]+1;\n    cout<<b[n];\n    return 0;\n}\n```",
        "postTime": 1545538740,
        "uid": 41868,
        "name": "\u54d4\u54e9\u54d4\u54e9",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF189A  Cut Ribbon"
    }
]