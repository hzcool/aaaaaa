[
    {
        "content": "\u840c\u65b0\u521d\u5b66 cdq \u5206\u6cbb\uff0c\u53d1\u4e00\u7bc7\u9898\u89e3\u52a0\u6df1\u4e00\u4e0b\u5370\u8c61\u3002\n\n\u9898\u76ee\u8981\u6c42\u533a\u95f4\u548c\u5c0f\u4e8e t \u7684\u533a\u95f4\u6570\u91cf\uff0c\u9996\u5148\u80af\u5b9a\u60f3\u5230\u9884\u5904\u7406\u524d\u7f00\u548c\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u8003\u8651\n\n\u5206\u6cbb\uff0c\u5206\u6cbb\u533a\u95f4\u4e3a 0 \u5230 n\uff0c\u7c7b\u4f3c\u4e8e\u5f52\u5e76\u6392\u5e8f\uff0c\u5728\u5206\u6cbb\u8fc7\u7a0b\u4e2d\u6211\u4eec\u5148\u5206\u6cbb l \u5230 mid\uff0c\n\n\u518d\u5206\u6cbb $mid+1$ \u5230 r\uff0c\u6700\u540e\u6211\u4eec\u5904\u7406\u8de8\u8d8a\u533a\u95f4\u7684\u95ee\u9898\u3002\u5bf9\u4e8e\u8de8\u533a\u95f4\u6211\u4eec\u7528\u961f\u5217\n\n\u7ef4\u62a4\u7b54\u6848\uff0c\u82e5\u7b54\u6848\u5927\u4e8e t\uff0c\u961f\u5934\u6307\u9488\u52a0\u52a0\uff0c\u6700\u540e\u6574\u4e2a\u961f\u5217\u961f\u603b\u7b54\u6848\u7684\u8d21\u732e\u5373\u4e3a\u961f\u5217\n\n\u957f\u5ea6\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nint L,R,ans,s[210000];\nvoid cdq(int l,int r)\n{\n    if(l==r)return ;\n    int mid=(l+r)/2;\n    cdq(l,mid),cdq(mid+1,r);\n    int head=l,tail=mid;\n    for(int i=mid+1;i<=r;i++)\n    {\n        //while(tail+1<=mid && s[i]>=s[tail+1]+L)tail++;\n        while(head<=mid && s[i]>=s[head]+R)head++;\n        ans+=tail-head+1;\n    }\n    sort(s+l,s+r+1);\n}//cdq\u5206\u6cbb\nsigned main()\n{\n    int n;\n    scanf(\"%lld%lld\",&n,&R);\n    for(int i=1;i<=n;i++)\n    {\n        int x;\n        scanf(\"%lld\",&x);\n        s[i]=s[i-1]+x;\n    }\n    cdq(0,n);\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```\n\n",
        "postTime": 1618489367,
        "uid": 503899,
        "name": "_byta",
        "ccfLevel": 0,
        "title": "CF1042D Petya and Array"
    },
    {
        "content": "emm...\u867d\u7136\u5df2\u7ecf\u6709\u6743\u503c\u7ebf\u6bb5\u6811\u505a\u6cd5\u4e86\uff0c\u4f46\u8fd9\u79cd\u505a\u6cd5\u5176\u5b9e\u662f\u4e0d\u7528\u79bb\u6563\u5316\u7684\uff0c\u56e0\u4e3a\u6743\u503c\u7ebf\u6bb5\u6811\u53ef\u4ee5\u52a8\u6001\u5f00\u70b9\u3002\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u7684\u64cd\u4f5c\u4e5f\u53ea\u8981 $insert$ \u548c $query$ \u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6216\u8bb8\u6211\u7684\u4ee3\u7801\u4f1a\u66f4\u7b80\u6d01\u4e00\u70b9\uff1f\uff08\u96fe\uff09\u3002\n\n- \u7531\u4e8e\u5b58\u5728\u8d1f\u6570\uff0c\u7ebf\u6bb5\u6811\u5904\u7406\u4e0d\u4e86\uff0c\u4e8e\u662f\u53ef\u4ee5\u52a0\u4e0a\u4e00\u4e2a\u5f88\u5927\u7684\u6570 $(1e15)$ \u3002\n\n\u5177\u4f53\u64cd\u4f5c\u770b\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\ntemplate<class T>inline void read(T &x)\n{\n\tx=0;int f=0;char ch=getchar();\n\twhile(!isdigit(ch))\tf=ch=='-',ch=getchar();\n\twhile(isdigit(ch))\tx=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n\tx=f?-x:x;\n}\nconst int MAXN=1e7+5,N=2e5+5,G=1e15;\nint tree[MAXN],lson[MAXN],rson[MAXN],tot,n,t,a[N],rt,ans;\n#define mid (l+r>>1)\ninline void make(int &k){if(!k)\tk=++tot;}\nvoid insert(int l,int r,int &k,int x)\n{\n\tmake(k);\n\tif(l==r)\treturn tree[k]++,void();\n\tif(x<=mid)\tinsert(l,mid,lson[k],x);\n\telse\tinsert(mid+1,r,rson[k],x);\n\ttree[k]=tree[lson[k]]+tree[rson[k]];\n}\nint query(int l,int r,int k,int x,int y)\n{\n\tif(l>=x&&r<=y)\treturn tree[k];\n\tint res=0;\n\tif(x<=mid)\tres+=query(l,mid,lson[k],x,y);\n\tif(y>mid)\tres+=query(mid+1,r,rson[k],x,y);\n\treturn res;\n}\n#undef mid\nsigned main()\n{\n\tread(n),read(t);\n\tfor(int i=1;i<=n;i++)\tread(a[i]),a[i]+=a[i-1];\n\tfor(int i=n;i;i--)\tinsert(1,G<<1,rt,a[i]+G),ans+=query(1,G<<1,rt,1,a[i-1]+t+G-1);//\u63d2\u5165\u4ee5i\u4e3a\u53f3\u7aef\u70b9\u7684\u524d\u7f00\u548c\uff0c\u6c42\u51fa\u4ee5i\u4e3a\u5de6\u7aef\u70b9\u6709\u591a\u5c11\u533a\u95f4\u3002\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1591794762,
        "uid": 304995,
        "name": "PanH",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1042D Petya and Array"
    },
    {
        "content": "# \u9898\u89e3 CF1042D \u3010Petya and Array\u3011\n\n\u8fd9\u9053\u9898\u5176\u5b9e\u8981\u6c42\u7684\u5c31\u662f$$\\sum^n_{r=1}\\sum^{r-1}_{l=1}\\sum^r_{i=l}a[i] < t$$\n\u7684$(l,r)$\u5bf9\u6570\u91cf\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n^3)$\n\n\u53ef\u4ee5\u7528\u524d\u7f00\u548c\u4f18\u5316\u5230$O(n^2)$\n\n\u53ef\u662f\u8fd8\u662f\u65e0\u6cd5AC\n\n\u600e\u4e48\u529e\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\uff1a\n\n* \u7531\u4e8e$|t|\\leq10^{14}$\uff0c\u6240\u4ee5\u79bb\u6563\u5316\n\n* \u626b\u4e00\u904d$1-n$\uff0c\u5bf9\u4e8e\u6bcf\u4e2ai,\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u7edf\u8ba1\u524d\u9762\u7684\u6709\u591a\u5c11\u4e2a\u4f4d\u7f6e\u6ee1\u8db3$sum[j-1]\\leq sum[i]-t$\u7684\uff0c\u5c06$i-cnt$\u8ba1\u5165\u7b54\u6848\n\n* \u5c06$sum[i]$\u52a0\u5165\u6811\u72b6\u6570\u7ec4\n\n\u6ce8\u610f\uff1a\u5f00\u59cb\u65f6\u8981\u628a$0$\u6254\u8fdb\u6811\u72b6\u6570\u7ec4\uff01\uff01\uff01\uff08\u539f\u56e0\uff1a$sum[0]=0$\uff09\n\n**Code:**\n\n```cpp\n#include <bits/stdc++.h>\n\n#define lowbit(x) (x & (-x))\n\nconst int MaxN = 200010;\n\nint n;\nint cnt;\nlong long t;\nint c[MaxN << 2];\nlong long a[MaxN], s[MaxN];\nstd::map<long long, int>m;\n\nint query(int x)\n{\n    int ans = 0;\n    while(x)\n        ans += c[x], x -= lowbit(x);\n    return ans;\n}\n\nvoid add(int x, int val)\n{\n    while(x <= cnt)\n        c[x] += val, x += lowbit(x);\n}\n\nint main()\n{\n    scanf(\"%d%lld\", &n, &t);\n    m[0] = 1;\n    for(int i = 1; i <= n; i++)\n        scanf(\"%lld\", &a[i]), s[i] = s[i - 1] + a[i], m[s[i] - t] = m[s[i]] = 1;//\u524d\u7f00\u548c\n    for(std::map<long long, int>::iterator it = m.begin(); it != m.end(); it++)\n        it -> second = ++cnt;//\u79bb\u6563\u5316\n    long long ans = 0;\n    add(m[0], 1);\n    for(int i = 1; i <= n; i++)\n    {\n        ans += i - query(m[s[i] - t]);//\u8ba1\u5165\u7b54\u6848\n        add(m[s[i]], 1);//\u66f4\u65b0\n    }  \n    printf(\"%lld\", ans);\n    return 0;\n}\n```",
        "postTime": 1542981646,
        "uid": 61966,
        "name": "little_sun",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1042D \u3010Petya and Array\u3011"
    },
    {
        "content": "## Meaning\uff1a\n\n\u9898\u76ee\u4e2d\u8bf4\u7684\u5f88\u660e\u786e\u4e86\uff0c\u5373\u6ee1\u8db3 $\\displaystyle \\sum_{i=l}^{r}a[i]<t $ \u7684\u533a\u95f4\u7684\u4e2a\u6570\u3002\n\n## Sol:\n\n\u77e5\u8bc6\u70b9\uff1a\u6743\u503c\u7ebf\u6bb5\u6811\u548c\u52a8\u6001\u5f00\u70b9\u3002\n\n\u770b\u522b\u7684\u9898\u89e3\u90fd\u8981\u5c06\u8d1f\u6743\u8f6c\u6b63\uff0c\u90a3\u6211\u5199\u4e00\u4e2a\u4e0d\u7528\u8f6c\u6b63\u7684\u52a8\u6001\u5f00\u70b9\u3002\n\n\u9898\u76ee\u8ddf\u533a\u95f4\u548c\u6709\u5173\uff0c\u81ea\u7136\u60f3\u5230\u524d\u7f00\u548c\uff0c\u90a3\u4e48\u67ff\u5b50\u5c31\u53d8\u6210\u4e86 $Q[r]-Q[l-1]<t$ \u7684\u4e2a\u6570\u3002\u5c06\u67ff\u5b50\u79fb\u9879\u5f97\u5230 $Q[l-1]>Q[r]-t$\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e $Q[r]$\uff0c\u7136\u540e\u5c06\u95ee\u9898\u8f6c\u5230\u6743\u503c\u7ebf\u6bb5\u6811\u4e0a\uff0c\u6211\u4eec\u53ea\u9700\u67e5\u627e $[Q[r]-t+1,INF)$ \u5373\u53ef\uff0c\u5f53\u7136\u5728\u67e5\u627e\u4e4b\u524d\u6211\u4eec\u5fc5\u987b\u5148\u63d2\u5165 $Q[l-1]$\uff0c\u4e0d\u7136\u4f1a\u5bf9\u67e5\u627e\u4ea7\u751f\u5f71\u54cd\u3002\n\n\u53e6\u5916\u6ce8\u610f\u5185\u5b58\uff0c\u6570\u7ec4\u5f00\u5408\u9002\u5927\u5c0f\u5373\u53ef\uff0c\u90fd\u5f00\u5230 $10^{7}$ \u4f1a `MLE`\u3002\n\n\u5177\u4f53\u7ebf\u6bb5\u6811\u7684\u64cd\u4f5c\u4ee3\u7801\u4e2d\u4f53\u73b0\uff0c\u603b\u7684\u6765\u8bf4\u4e0d\u96be\uff0c~~\u65e2\u7136\u4f60\u80fd\u770b\u8fd9\u9898\u5c31\u4e00\u5b9a\u80fd\u770b\u61c2\u4ee3\u7801\u3002~~\n\n## Code\uff1a\n\n```cpp\n/*\nWork by : Dreamcatcher\nKnowledge : \uff1f\uff1f\nTime : O(\u80fd\u8fc7)\n*/\n#include<cmath>\n#include<queue>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define int long long\nusing namespace std;\n\nconst int M=1e14;\nconst int N=1e7+7;\n\nint read() {\n\tint x=0,f=0;char ch=getchar();\n\tfor(;!isdigit(ch);ch=getchar()) f|=(ch=='-');\n    for(;isdigit(ch);ch=getchar()) x=(x<<1)+(x<<3)+(ch&15);\n\treturn f?-x:x;\n}\n\nvoid print(int x) {\n\tif(x<0) putchar('-'),x=-x;\n\tif(x>9) print(x/10);\n    putchar(x%10+48);\n}\n\nint n,L,R,root=1,tot=1,Q[N],Ans;\n\nnamespace Seg{\n    struct Tree{int sum,lson,rson;}tree[N];\n    \n    void Insert(int &pos,int l,int r,int k){\n        if(!pos) pos=++tot,tree[pos].sum=tree[pos].lson=tree[pos].rson=0;\n        ++tree[pos].sum;if(l==r) return;int mid=l+r>>1;\n        if(k<=mid) Insert(tree[pos].lson,l,mid,k);\n        else Insert(tree[pos].rson,mid+1,r,k); \n    }\n    \n    int Query(int pos,int l,int r,int L,int R){\n        if(!pos) return 0;\n        if(l>=L&&r<=R) return tree[pos].sum;\n        int mid=l+r>>1,res=0;\n        if(L<=mid) res+=Query(tree[pos].lson,l,mid,L,R);\n        if(R>mid) res+=Query(tree[pos].rson,mid+1,r,L,R);\n        return res; \n    }\n}\n\nsigned main() {\n   n=read();L=read();\n   for(int i=1;i<=n;i++) Q[i]=read()+Q[i-1];\n   for(int i=1;i<=n;i++) Seg::Insert(root,-M,M,Q[i-1]),Ans+=Seg::Query(root,-M,M,Q[i]-L+1,M);\n   return print(Ans),0;\n}\n\n```\n\u559c\u6b22\u7684\u70b9\u4e2a\u8d5e\u5427\u3002\n",
        "postTime": 1645279636,
        "uid": 397317,
        "name": "Gym_nastics",
        "ccfLevel": 0,
        "title": "CF1042D Petya and Array \u9898\u89e3"
    },
    {
        "content": "### \u5c45\u7136\u6ca1\u6709\u6743\u503c\u7ebf\u6bb5\u6811\u89e3\u6cd5\uff01\uff01\uff01\n\n\u90a3\u6211\u6765\u4e00\u4e2a\n\n\u672c\u9898\u7ec6\u8282\u771f\u7684\u5de8\u591a\uff0c\u601d\u8def1\u5206\u949f\uff0c\u4ee3\u78015\u5c0f\u65f6\u3002\u3002\u3002\n\n\u9996\u5148\uff0c\u4e3a\u4e86\u80fd$O(1)$\u6c42\u51fa\u533a\u95f4\u548c\uff0c\u6211\u4eec\u5bf9\u539f\u5e8f\u5217\u524d\u7f00\u548c\u5e76\u8bb0\u4e3a\u5e8f\u5217$a$\n\n\u7136\u540e\u8003\u8651\u9898\u8bbe\u9650\u5236\n\n\u6c42\u6709\u591a\u5c11\u4e2a\u533a\u95f4$[l,r]$\u6ee1\u8db3$sum(l,r)<t$\n\n\u7531\u4e8e\u524d\u7f00\u548c\u7684\u5b58\u5728,$sum(l,r)=a(r)-a(l-1)<t$\n\n### \u4e8e\u662f\u53d8\u6210\u4e86$a(r)<a(l-1)+t$\n\n### \u4e8e\u662f\u53ef\u4ee5\u626b\u63cf\u4e00\u904d$a$,\u5728\u6bcf\u4e2a\u524d\u7f00$l$\u5904\u6211\u4eec\u53ea\u9700\u6c42\u51fa\u6709\u591a\u5c11\u6570$r$\u6ee1\u8db3\u4e0a\u5f0f\n\n\u53ef\u4ee5\u7528\u6743\u503c\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4,\u53ea\u9700\u6c42\u51fa$a(l-1)+t$\u7684\u6392\u540d\u5373\u53ef,\u5bf9\u5e94\u5230\u7ebf\u6bb5\u6811\u4e0a\u5c31\u662f\u6c42\u51fa\u533a\u95f4\u548c\n\n\u7531\u4e8e\u6c42\u7684\u524d\u7f00\u4e0d\u5305\u62ecl-1\u81ea\u8eab,\u6240\u4ee5\u8fd8\u8981\u5728\u8fdb\u5165\u4e0b\u4e00\u4e2a\u524d\u7f00\u524d\u5220\u9664\u4e0b\u4e00\u4e2a\u524d\u7f00\n\n\u56e0\u4e3a\u6570\u5f88\u5927,\u9700\u8981\u79bb\u6563\u5316,\u5177\u4f53\u5b9e\u73b0\u7565\u5fae\u590d\u6742\n\n\u6211\u6700\u5f00\u59cb\u7684\u65f6\u5019\u53f3\u513f\u5b50\u6253\u6210\u5de6\u513f\u5b50,\u8c03\u4e86\u4e00\u5c0f\u65f6,\u540e\u6765\u79bb\u6563\u5316\u4ee5\u540e\u6ca1\u5f00long long\u53c8\u82b1\u4e86\u51e0\u5c0f\u65f6...\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define update(o) sz[o]=sz[o<<1]+sz[o<<1|1]\nusing namespace std;\nconst int MAXN=200005;\nll val[200005];\nint cnt[200005];\nint n,m;;\nll ans;\nll pref;\nll t,a[200005];\nll num[200005];\nint id[200005];\nint sz[MAXN<<2];\nmap<ll,int>times;\ntemplate<typename type>\nvoid read(type& x)\n{\n    char c=getchar();\n    int f=1;x=0;\n    while(c<'0'||c>'9')\n    {\n        if(c=='-')f*=-1;\n        c=getchar();\n    }\n    while(c>='0'&&c<='9')\n    {\n        x=x*10+c-'0';\n        c=getchar();\n    }\n    x*=f;\n}\nvoid build(int o,int l,int r)\n{\n    if(l==r)\n    {\n        sz[o]=cnt[l];\n        return ;\n    }\n    int mid=(l+r)>>1;\n    build(o<<1,l,mid);\n    build(o<<1|1,mid+1,r);\n    update(o);\n}\nint query(int o,int l,int r,int k)\n{\n    if(!k)return 0;\n    if(r<=k)\n    {\n        return sz[o];\n    }\n    int mid=(l+r)>>1,sum=0;\n    sum+=query(o<<1,l,mid,k);\n    if(k>mid)sum+=query(o<<1|1,mid+1,r,k);\n    return sum;\n}\nvoid remove(int o,int l,int r,int k)\n{\n    if(l==r)\n    {\n        sz[o]--;\n        return ;\n    }\n    int mid=(l+r)>>1;\n    if(k<=mid)remove(o<<1,l,mid,k);\n    else remove(o<<1|1,mid+1,r,k);\n    update(o);\n}\nint main()\n{\n    read(n);\n    read(t);\n    for(int i=1;i<=n;i++)\n    {\n        read(num[i]);\n        a[i]=a[i-1]+num[i];\n        times[a[i]]++;\n    }\n    sort(a+1,a+n+1);\n    m=unique(a+1,a+n+1)-a-1;\n    for(int i=0;i<m;i++)\n    {\n        val[i+1]=a[i+1];\n        cnt[i+1]=times[a[i+1]];\n    }\n    build(1,1,m);\n    for(int i=0;i<n;i++)\n    {\n        pref+=num[i];\n        int k=lower_bound(val+1,val+m+1,pref+t-1)-val;\n        if(k>m)k=m;\n        if(val[k]>=pref+t)k--;\n        if(k)ans+=(ll)query(1,1,m,k);\n        int p=lower_bound(val+1,val+m+1,pref+num[i+1])-val;\n        remove(1,1,m,p);\n    }\n    printf(\"%lld\\n\",ans);\n}\n```\n",
        "postTime": 1555156773,
        "uid": 68207,
        "name": "CreeperLordVader",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1042D \u3010Petya and Array\u3011"
    },
    {
        "content": "\u770b\u5230\u7b2c\u4e00\u773c\u5c31\u89c9\u5f97\u662f\u6570\u636e\u7ed3\u6784\u9898, \u786e\u5207\u5730\u8bf4\u5c31\u662f\u7ebf\u6bb5\u6811\u6811\u72b6\u6570\u7ec4\u8fd9\u7c7b\u7684(\u56e0\u4e3a\u6211\u4e5f\u53ea\u4f1a\u8fd9\u4fe9?), \u518d\u770b\u4e00\u4e0b\u5341\u4e07\u7ea7\u522b\u7684\u6570\u636e\u8303\u56f4, \u5c31\u60f3\u5230\u7528\u6811\u72b6\u6570\u7ec4\u505a.\n\n\u90a3\u4e48\u5177\u4f53\u600e\u4e48\u505a\u5462? \u663e\u7136\u6211\u4eec\u8981\u5148\u6c42\u4e00\u4e2a\u524d\u7f00\u548c, \u8bb0\u4f5c sum[] , \u90a3\u4e48\u95ee\u9898\u5c31\u8f6c\u53d8\u6210\u4e86\u6c42\n\nsum[r] - sum[l - 1] < t\n\n\u7684(l, r)\u6570\u5bf9\u7684\u6570\u91cf, \u4e5f\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a r, \u8981\u6c42\u6240\u6709\u7684 l, \u4f7f\u5f97\n\nsum[l - 1] > sum[r] - t\n\n\u6211\u4eec\u5148\u5bf9\u6240\u6709\u7684\u524d\u7f00\u548c\u6392\u4e00\u4e2a\u964d\u5e8f, \u7136\u540e\u53bb\u91cd, \u5e76\u5efa\u7acb\u4e00\u68f5\u4e0e\u4e4b\u5e8f\u53f7\u4e00\u4e00\u5bf9\u5e94\u7684\u6811\u72b6\u6570\u7ec4. \u5728\u8fd9\u91cc\u8981\u5c0f\u5fc3\u6709\u4e00\u4e2a sum[0] = 0 , \u7136\u800c\u6811\u72b6\u6570\u7ec4\u4e00\u822c\u90fd\u662f\u4ece\u4e0b\u6807 1 \u5f00\u59cb\u7684, \u6240\u4ee5\u6211\u4eec\u8981\u628a\u6574\u4e2a\u6570\u7ec4\u5411\u53f3\u5e73\u79fb\u4e00\u683c. \u7ef4\u62a4\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4, \u521d\u503c\u5747\u4e3a 0 . \u7136\u540e\u8bb0\u5f55\u4e00\u4e2a\u524d\u7f00\u548cprer, \u4ece\u5de6\u5f80\u53f3\u626b\u4e00\u904d, \u4e8c\u5206\u67e5\u627e prer - t \u7684\u4f4d\u7f6e, \u628a\u8fd9\u4e2a\u4f4d\u7f6e\u5de6\u8fb9\u7684\u548c\u52a0\u8d77\u6765\u52a0\u8fdb ans , \u7136\u540e\u628a prer \u8fd9\u4e2a\u4f4d\u7f6e\u52a0\u4e0a 1 . \u8fd9\u662f\u56e0\u4e3a\u8fd9\u4e2a\u4f4d\u7f6e\u5de6\u8fb9\u7684\u5168\u90e8\u90fd\u662f\u6bd4 sum[r] - t \u5927\u7684 sum[l - 1] , \u6211\u4eec\u6bcf\u626b\u8fc7\u4e00\u4e2a sum \u5c31\u8bb0\u5f55\u4e00\u4e2a 1 , \u52a0\u8d77\u6765\u4fbf\u662f\u5bf9\u4e8e\u8fd9\u4e2a r \u7684\u7b54\u6848. \u8fd9\u6837\u626b\u7684\u65f6\u95f4\u662f O(n) , \u6bcf\u4e00\u6b21\u6c42\u548c\u548c\u52a0\u4e00\u7684\u65f6\u95f4\u7528\u6811\u72b6\u6570\u7ec4\u5373\u53ef\u5b8c\u6210, \u662f O(lgn) \u7684, \u6240\u4ee5\u603b\u5171\u662f O(nlgn) \u7684\u65f6\u95f4, \u53ef\u4ee5\u901a\u8fc7\u6b64\u9898.\n\n\u4e0d\u8fc7\u8981\u6ce8\u610f\u4e24\u70b9, \u4e00\u662f\u5728\u5f00\u59cb\u626b\u4e4b\u524d\u5c31\u8981\u628a 0 \u8fd9\u4e2a\u4f4d\u7f6e\u7ed9\u8bb0\u5f55\u4e00\u4e0b, \u53e6\u4e00\u4e2a\u662f\u8981\u6ce8\u610f\u4f7f\u7528 lower_bound \u8fd8\u662f upper_bound .\n\n\u8bb2\u8d77\u6765\u6bd4\u8f83\u5403\u529b, \u5bf9\u6811\u72b6\u6570\u7ec4\u6bd4\u8f83\u719f\u7684\u540c\u5b66\u53ef\u80fd\u4f1a\u7406\u89e3\u5f97\u5feb\u4e00\u4e9b, \u5177\u4f53\u53ef\u4ee5\u770b\u4ee3\u7801.\n\n```cpp\n#include<iostream>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;\n\nint n, f[200902], ls;\nll a[200902], sum[200902];\n\ninline int lowbit(int x){\n    return x & -x;\n}\n\nvoid add(int x){\n    for(int i = x; i <= ls; i += lowbit(i)){\n        ++f[i];\n    }\n}\n\nint get(int x){\n    int ret = 0;\n    for(int i = x; i > 0; i -= lowbit(i)){\n        ret += f[i];\n    }\n    return ret;\n}\n\ninline bool cmp(ll x, ll y){\n    return x > y;\n}\n\nint main(){\n    ll t;\n    cin >> n >> t;\n    for(register int i = 1; i <= n; ++i){\n        cin >> a[i];\n        sum[i] = sum[i - 1] + a[i];\n    }\n    sort(sum, sum + n + 1, cmp);\n    int rs = 1;\n    ls = 0;\n    while(rs <= n){\n        if(sum[ls] != sum[rs])\n            sum[++ls] = sum[rs];\n        ++rs;\n    }\n    for(register int i = ls; i >= 0; --i){\n        sum[i + 1] = sum[i];\n    }\n    ++ls;\n    ll ans = 0ll, prer = 0;\n    add(lower_bound(sum + 1, sum + ls + 1, 0ll, cmp) - sum);\n    for(register int i = 1; i <= n; ++i){\n        prer += a[i];\n        int npos = lower_bound(sum + 1, sum + ls + 1, prer - t, cmp) - sum;\n        ans += get(npos - 1);\n        int k = lower_bound(sum + 1, sum + ls + 1, prer, cmp) - sum;\n        add(k);\n    }\n    cout << ans << endl;\n    return 0;\n}\n\n\n```",
        "postTime": 1538031669,
        "uid": 85028,
        "name": "shs_ryf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1042D \u3010Petya and Array\u3011"
    },
    {
        "content": "\u6bd4\u8f83\u5178\u7684\u4e00\u4e2a\u9898\u3002\n\n\u7ecf\u9a8c\u9898\uff1a[P2717](https://www.luogu.com.cn/problem/P2717) [P5459](https://www.luogu.com.cn/problem/P5459)\n\n\u9898\u610f\uff1a\u7ed9\u5b9a $\\{a_n\\},t$\uff0c\u6c42 $\\sum\\limits_{l=1}^n\\sum\\limits_{r=l}^n[\\sum\\limits_{i=l}^ra_i<t]$\u3002\n# \u601d\u8def\n\u4ee4 $s_x=\\sum\\limits_{i=1}^xa_i$\uff0c\u5219\u539f\u5f0f\u7b49\u4e8e $\\sum\\limits_{l=1}^n\\sum\\limits_{r=l}^n[s_r-s_{l-1}<t]$\u3002\n\n\u8003\u8651\u679a\u4e3e $r$\uff0c\u7edf\u8ba1 $l-1<r\\bigwedge s_{l-1}>s_r-t$ \u7684 $l-1$ \u7684\u4e2a\u6570\u3002\n\n\u53d1\u73b0\u662f\u4e2a\u4e8c\u7ef4\u504f\u5e8f\uff0c\u7528\u6743\u503c\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4e4b\uff0c\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n# \u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <cctype>\n#include <algorithm>\n#define F(x) v[m++] = x\n#define H(x) lower_bound(v, v + m, x) - v + 1\nusing namespace std;\ninline long long R()\n{\n    long long r = 0;bool b = 0;char c = getchar();\n    while(!isdigit(c)) b = c == '-', c = getchar();\n    while(isdigit(c)) r = r * 10 + c - '0', c = getchar();\n    return b ? -r : r;\n}\nint n, m = 1, c[400050];long long t, q, a[200050], v[400050];\nvoid C(int x) {for(;x <= m;x += x & -x) ++c[x];}\nint Q(int x)\n{\n    int q = 0, y = m;for(--x;y > x;y &= y - 1) q += c[y];\n    for(;x > y;x &= x - 1) q -= c[x];return q;\n}\nint main()\n{\n    n = R();t = R();for(int i = 1;i <= n;++i)\n    F(a[i] = a[i - 1] + R()), F(a[i] - t + 1);\n    sort(v, v + m);m = unique(v, v + m) - v;C(H(0));\n    for(int i = 1;i <= n;++i) q += Q(H(a[i] - t + 1)), C(H(a[i]));\n    return printf(\"%lld\", q), 0;\n}\n```\n",
        "postTime": 1663146963,
        "uid": 388651,
        "name": "5k_sync_closer",
        "ccfLevel": 7,
        "title": "CF1042D Petya and Array \u9898\u89e3"
    },
    {
        "content": "\u672c\u4eba\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\uff0c\u82e5\u6709\u4e0d\u59a5\u7684\u5730\u65b9\u8bf7\u6307\u51fa\u3002\n\n\u63d0\u4f9b\u4e00\u79cd\u4e0d\u7528\u79bb\u6563\u5316\u7684\u505a\u6cd5\u3002\n\n\u770b\u5230\u8fde\u7eed\u7684\u533a\u95f4 $[l,r]$ \uff0c\u53ef\u4ee5\u8003\u8651\u524d\u7f00\u548c\uff0c\u5c06\u9898\u76ee\u6240\u7ed9\u5f0f\u5b50\u53d8\u5f62\u4e3a\uff1a\n $sum(r)-sum(l-1) < t$\n\n\u4e8e\u662f\u6709\uff1a $sum(l-1)>sum(r)-t$\n\n\u5176\u7b49\u4ef7\u4e3a $sum(l) \\geq\\ sum(r)-t+1$ \u7684\u5f62\u5f0f\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u52a8\u6001\u5f00\u70b9\u7684\u65b9\u6cd5\uff0c\u5c06 $sum$ \u7684\u6570\u503c\u63d2\u5165\u6743\u503c\u7ebf\u6bb5\u6811\u4e2d\uff0c\u4e8e\u662f\u95ee\u9898\u53d8\u6210\u626b\u63cf\u5230\u4e00\u4e2a\u70b9 $r$ \u65f6\u8fdb\u884c\u5355\u70b9\u52a0\u4e00\u64cd\u4f5c\uff0c\u5e76\u5bf9\u5176\u524d\u9762\u7684\u6240\u6709 $sum$ \u503c\u8fdb\u884c\u533a\u95f4\u67e5\u8be2\uff0c\u5373\u67e5\u8be2\u4e0b\u6807\u4e3a $[1,r)$ \uff0c\u503c\u57df\u4e3a $[sum(r)-t+1,inf]$ \u7684\u533a\u95f4\u548c\u3002\n\n\u6ce8\u610f\u6b64\u5904\u7684\u5dee\u53ef\u80fd\u4e3a\u8d1f\u6570\uff0c\u6240\u4ee5\u9700\u8981\u52a0\u4e0a\u4e00\u4e2a\u8f83\u5927\u7684\u6570\uff0c\u6839\u636e\u9898\u76ee\u6761\u4ef6\uff0c $\\Delta$ \u53ef\u53d6 $2e14$\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst long long M=2e14;\n\nint n,newp,sum[10000005],ls[10000005],rs[10000005],rt;\nlong long a[200005],t,ans;\n\nvoid pushup(int k){\n\tsum[k]=sum[ls[k]]+sum[rs[k]];\n}\n\nvoid doUpdate(int &k,long long l,long long r,long long x){\n\tif(!k) k=++newp;\n\tif(l==r){\n\t\tsum[k]++;\n\t\treturn ;\n\t}\n\tlong long mid=(l+r)>>1;\n\tif(x<=mid) doUpdate(ls[k],l,mid,x);\n\telse doUpdate(rs[k],mid+1,r,x);\n\tpushup(k);\n}\n\nlong long doQuery(int k,long long L,long long R,long long l,long long r){ \n    if(l<=L&&R<=r) return sum[k];\n    if(L>r||R<l) return 0;\n    long long mid=(L+R)>>1;\n    return doQuery(ls[k],L,mid,l,r)+doQuery(rs[k],mid+1,R,l,r);\n}\n\nint main(){\n\tscanf(\"%d%lld\",&n,&t);\n\tfor(int i=1;i<=n;i++) scanf(\"%lld\",&a[i]);\n\tfor(int i=1;i<=n;i++) a[i]+=a[i-1];\n\tfor(int i=1;i<=n;i++){\n\t    doUpdate(rt,0,M<<1,a[i-1]+M); \n\t\tans=ans+doQuery(rt,0,M<<1,a[i]-t+1+M,M<<1);\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1644509356,
        "uid": 69024,
        "name": "Kevin_James",
        "ccfLevel": 5,
        "title": "CF1042D Petya and Array \u9898\u89e3"
    },
    {
        "content": "**\u6b65\u9aa4\u4e00**\uff1a\u591a\u6b21\u7edf\u8ba1\u533a\u95f4\u548c\u4e14\u4e0d\u4fee\u6539\uff0c\u6240\u4ee5\u8981\u7528\u524d\u7f00\u548c\u6765\u83b7\u53d6\u533a\u95f4\u548c\n\n**\u6b65\u9aa4\u4e8c**\uff1a\u6c42\u6709\u591a\u5c11\u5bf9 $ [l,r] $ \u6ee1\u8db3\u6761\u4ef6\uff0c\u5c31\u662f\u5728\u95ee\u201c\u5bf9\u6bcf\u4e00\u4e2a $ r $\uff0c \u6709\u51e0\u4e2a $ l $ \u6ee1\u8db3 $ (0\\le l<r)\\wedge (S_r-S_l<t) $ \u201d\u3002\u4e5f\u5c31\u662f\u6ee1\u8db3 $ S_l>S_r-t $ \u7684\u6240\u6709 $ l $\u3002\n\n**\u6b65\u9aa4\u4e09**\uff1a\u53ef\u4ee5\u7528\u5f88\u591a\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u4e0a\u9762\u7684 $ S_i $\uff0c\u6743\u503c\u7ebf\u6bb5\u6811\u662f\u5176\u4e2d\u4e00\u79cd\u3002\u6211\u7684\u505a\u6cd5\u662f\u7ef4\u62a4\u6700\u5927\u8303\u56f4\uff08$ [-T,T]$ \uff09\u5185\u6240\u6709\u6570\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u6dfb\u52a0\u503c\u65f6\u4ece\u6700\u5927\u533a\u95f4\u5f00\u59cb\uff0c\u9009\u62e9\u5de6\u53f3\u533a\u95f4\u7684\u4e00\u4e2a\u5f80\u4e0b\u9012\u5f52\uff08\u5982\u679c\u6ca1\u6709\u51fa\u73b0\u8fc7\u5c31\u65b0\u5efa\u8282\u70b9\uff09\uff0c\u6bcf\u4e2a\u8282\u70b9\u8bb0\u5f55\u533a\u95f4\u5185\u6240\u6709\u8282\u70b9\u51fa\u73b0\u7684\u6b21\u6570\u3002\n\n\u9012\u5f52\u662f\u4ece\u4e0a\u5f80\u4e0b\u7684\u4e00\u6761\u94fe\uff0c\u5982\u679c\u4ece\u4e0a\u5f80\u4e0b\u90fd\u662f\u6ca1\u6709\u4e4b\u524d\u51fa\u73b0\u8fc7\u7684\u533a\u95f4\uff0c\u4e5f\u81f3\u591a\u65b0\u589e $ \\log_2(T) =\\log_2(2\\times 10^{14})\\approx 41$\u4e2a\u8282\u70b9\u3002\u7a7a\u95f4\u5b8c\u5168\u53ef\u4ee5\u627f\u53d7\u3002\n\n\u53e6\u5916 $ S_i $ \u7684\u6700\u5927\u503c\u662f $a_iN=2\\times 10^{14}$\uff0c\u4e0e $ T $ \u76f8\u7b49\u3002\u56e0\u6b64\u4e5f\u4e0d\u7528\u62c5\u5fc3\u67e5\u8be2\u65f6\u8d8a\u754c\u3002\n\n```cpp\n#include <cstdio>\nusing i64 = long long;\n\nconstexpr int MAXN = 2e5 + 5;\nconstexpr i64 MAXT = 2e14 + 5;\n\nint N;\ni64 T, ans, a[MAXN];\n\nclass Segtree\n{\n    struct Node{\n        i64 num;\n        Node *ls, *rs;\n    }pool[MAXN * 42], *null = pool;//\u7a7a\u95f4\u662fN*log(T)\u7684\n\n    Node* NEW() {\n        static Node *p = pool;\n        *(++p) = Node{0, null, null};\n        return p;\n    }\n\n    public:\n    Node *root = NEW();\n    i64 sum(Node *p, i64 l, i64 r, const i64 val) {\n        if (p == null) return 0;\n        if (l > val) return p->num;\n        if (r < val) return 0;\n\n        i64 mid = l + r >> 1;\n        return sum(p->ls, l, mid, val) + sum(p->rs, mid+1, r, val);\n    }\n    void add(Node *&p, i64 l, i64 r, const i64 val) {\n        if (p == null) p = NEW();\n        if (l == r) {\n            p->num++;\n            return;\n        }\n        i64 mid = l + r >> 1;\n        val>mid ? add(p->rs, mid+1, r, val) : add(p->ls, l, mid, val);\n        p->num = p->ls->num + p->rs->num;\n    }\n}Seg;\n\nint main() {  \n    #define INILIST Seg.root, -MAXT, MAXT //! add\u548csum\u5165\u53e3\u7684\u53c2\u6570\n    \n    scanf(\"%d%lld\", &N, &T);    \n    Seg.add(INILIST, 0);\n    for (int i = 1; i <= N; i++) {\n        scanf(\"%lld\", &a[i]), a[i] += a[i-1];\n\n        ans += Seg.sum(INILIST, a[i]-T); //! \u4e4b\u524d\u7684S[0..i-1]\u6709\u54ea\u4e9b\u6ee1\u8db3S[i] - S[j] < T\u7684\n        Seg.add(INILIST, a[i]);//! \u7edf\u8ba1\u5b8c\u7b54\u6848\u540e\u52a0\u5165\u81ea\u5df1\n    } printf(\"%lld\\n\", ans);\n}\n```",
        "postTime": 1642766864,
        "uid": 73489,
        "name": "NyaRu_Official",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1042D \u3010Petya and Array\u3011"
    },
    {
        "content": "\u5176\u5b9e\u53ef\u4ee5 CDQ \u5206\u6cbb\u3002\u3002\n\n\u5c06\u9898\u76ee\u4e2d\u7684\u9650\u5236\u5199\u6210\u524d\u7f00\u548c\u7684\u5f62\u5f0f $sum[r]-sum[l]<t\\ (l<r)$ \uff08\u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbf\u7701\u53bb\u4e86 $-1$\uff09\n\n\u7136\u540e\u79fb\u9879\u5f97\u5230 $sum[l]+t>sum[r]$\n\n\u8fd9\u4e2a\u5c31\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u7528 CDQ \u6765\u8ba1\u7b97\u4e86\n\n```cpp\n#include <iostream>\n#include <cstdio>\n\ntypedef long long LL;\n\nconst int MAXN = 200000;\n\nLL ans, m;\nLL a[MAXN | 1], tmp[MAXN | 1];\nint n;\n\ninline int read() {\n\tregister int x = 0, v = 1;\n\tregister char ch = getchar();\n\twhile (!isdigit(ch)) {\n\t\tif (ch == '-') v = -1;\n\t\tch = getchar();\n\t}\n\twhile (isdigit(ch)) {\n\t\tx = x * 10 + ch - '0';\n\t\tch = getchar();\n\t}\n\treturn x * v;\n}\n\nvoid CDQ(int l, int r) {\n\tif (l == r) return;\n\tint mid = (l + r) >> 1;\n\tCDQ(l, mid);\n\tCDQ(mid + 1, r);\n\tint pl = l, pr = mid + 1, tot = l - 1;\n\twhile (pl <= mid && pr <= r) {\n\t\tif (a[pl] > a[pr]) {\n\t\t\ttmp[++tot] = a[pl];\n\t\t\t++pl;\n\t\t} else {\n\t\t\ttmp[++tot] = a[pr];\n\t\t\t++pr;\n\t\t}\n\t}\n\twhile (pl <= mid) tmp[++tot] = a[pl++];\n\twhile (pr <= r) tmp[++tot] = a[pr++];\n\tpl = l; \n\tpr = mid + 1;\n\tint cnt = 0;\n\twhile (pl <= mid && pr <= r) {\n\t\tif (a[pl] + m > a[pr]) {\n\t\t\t++cnt;\n\t\t\t++pl;\n\t\t} else {\n\t\t\tans += cnt;\n\t\t\t++pr;\n\t\t}\n\t}\n\t// while (pr <= r) ans += cnt, ++pr;\n\tans += 1LL * cnt * (r - pr + 1);\n\tfor (int i = l; i <= r; ++i) a[i] = tmp[i];\n}\n\nint main() {\n\tn = read();\n\tscanf(\"%lld\", &m);\n\tfor (int i = 1; i <= n; ++i) a[i] = a[i - 1] + read();\n\tCDQ(0, n);\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}\n```\n\n\n\n\n\n\n",
        "postTime": 1553239209,
        "uid": 24878,
        "name": "iodwad",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1042D \u3010Petya and Array\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a$n$\u7684\u6570\u7ec4$a$\uff0c\u6c42\u51fa\u6709\u591a\u5c11\u5bf9$l, r$\u6ee1\u8db3$\\sum_{i=l}^r a[i] < k$\n\n## solution\n\u6c42\u51fa\u539f\u6570\u7ec4\u7684\u524d\u7f00\u548c$sum[i]$\uff0c\u90a3\u4e48\u539f\u5f0f\u53ef\u4ee5\u8f6c\u5316\u4e3a$sum[r]-sum[l-1]<k$\n\n\u79fb\u9879\u5f97$sum[r]<k+sum[l-1]$\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u4e2a$sum[l-1]$\uff0c\u5728$sum$\u6570\u7ec4\u91cc\u627e\u6240\u6709\u5408\u6cd5\u7684\u89e3\n\n\u76f4\u63a5\u6c42\u89e3\u662f$O(n^2)$\u7684\uff0c\u8003\u8651\u4f18\u5316\u627e\u5408\u6cd5\u89e3\u7684\u8fc7\u7a0b\n\n\u53d1\u73b0\u53ef\u4ee5\u5bf9$sum$\u6570\u7ec4\u6392\u5e8f\u540e\u8fdb\u884c\u4e8c\u5206\u67e5\u627e\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5df2\u7ecf\u67e5\u627e\u8fc7\u7684$sum$\u6807\u8bb0\u4e00\u4e0b\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u91cd\u590d\uff0c\u6807\u8bb0\u7684\u8fc7\u7a0b\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u6765\u8fdb\u884c\n\n\u590d\u6742\u5ea6$O(nlogn)$\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <bitset>\n#include <vector>\n#include <queue>\n#include <set>\n#include <map>\n\nusing namespace std;\n\nstruct FastIO {\n    inline FastIO& operator >> (int& x) {\n        x = 0; char f = 0, ch = getchar();\n        while(ch > '9' || ch < '0') f |= (ch == '-'), ch = getchar();\n        while(ch <= '9' && ch >= '0') x = x * 10 + ch - 48, ch = getchar();\n        return x = (f ? -x : x), *this;\n    }\n    inline FastIO& operator >> (long long& x) {\n        x = 0; char f = 0, ch = getchar();\n        while(ch > '9' || ch < '0') f |= (ch == '-'), ch = getchar();\n        while(ch <= '9' && ch >= '0') x = x * 10 + ch - 48, ch = getchar();\n        return x = (f ? -x : x), *this;\n    }\n    inline FastIO& operator >> (double& x) {\n        x = 0; char f = 0, ch = getchar();\n        double d = 0.1;\n        while(ch > '9' || ch < '0') f |= (ch == '-'), ch = getchar();\n        while(ch <= '9' && ch >= '0') x=x * 10 + ch - 48, ch = getchar();\n        if(ch == '.') {\n            ch = getchar();\n            while(ch <= '9' && ch >= '0') x += d * (ch ^ 48), d *= 0.1, ch = getchar();\n        }\n        return x = (f ? -x : x), *this;\n    }\n}rin;\nconst int N = 1e6 + 50;\nint n, to[N];\nlong long K, f[N], sum[N]; \nstruct tree_array {\n\tint t[N];\n\tvoid insert(int x) {for(int i = x ; i <= n ; i += i & -i) t[i] ++;}\n\tint query(int x) {int ans = 0; for(int i = x ; i ; i &= i - 1) ans += t[i]; return ans;}\n}T;\nstruct node {long long v; int p;}k[N];\nbool operator < (const node &a, const node &b) {return a.v < b.v;}\nint main() {\n\trin >> n >> K;\n\tlong long ans = 0;\n\tfor(int i = 1 ; i <= n ; ++ i) rin >> f[i], sum[i] = sum[i - 1] + f[i];\n\tfor(int i = 1 ; i <= n ; ++ i) k[i].v = sum[i], k[i].p = i;\n\tsort(k + 1, k + 1 + n);\n\tfor(int i = 1 ; i <= n ; ++ i) to[k[i].p] = i;\n\tfor(int i = 1 ; i <= n ; ++ i) {\n\t\tlong long p = K + sum[i - 1];\n\t\tint l = 0, r = n;\n\t\twhile(l < r) {\n\t\t\tint mid = (l + r + 1) >> 1;\n\t\t\tif(k[mid].v < p) l = mid;\n\t\t\telse r = mid - 1;\n\t\t}\n\t\tans += l - T.query(l);\n\t\tT.insert(to[i]);\n\t}\n\tprintf(\"%I64d\\n\", ans);\n\treturn 0;\n}\n\n\n```\n",
        "postTime": 1544794651,
        "uid": 44777,
        "name": "djh123",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1042D \u3010Petya and Array\u3011"
    }
]