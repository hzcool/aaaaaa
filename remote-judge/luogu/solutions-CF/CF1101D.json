[
    {
        "content": "## [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1101D)\n\n## [\u4e00\u79cd\u66f4\u597d\u7684\u9898\u89e3\u98df\u7528\u65b9\u5f0f](https://www.cnblogs.com/yang-RA-NOI/p/12594636.html)\n\n# \u9898\u76ee\u5927\u610f\uff1a\n\n$\u7ed9\u51fa\u4e00\u68f5n\u4e2a\u8282\u70b9\u7684\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u4e0a\u6709\u70b9\u6743a_i$\n\n$\u6c42\u6700\u957f\u7684\u6811\u4e0a\u8def\u5f84\uff0c\u6ee1\u8db3\u6761\u4ef6\uff1a$\n\n$\u8def\u5f84\u4e0a\u7ecf\u8fc7\u8282\u70b9\uff08\u5305\u62ec\u4e24\u4e2a\u7aef\u70b9\uff09\u70b9\u6743\u7684gcd\u548c\u4e0d\u7b49\u4e8e1$\n\n###\u6570\u636e\u8303\u56f4\n\n$\\circ$ $n\\le2\\times10^5$\n\n$\\circ$ $1\\le a_i\\le2\\times10^5$\n\n#\u9898\u89e3\n\n\u9996\u5148\u5f53\u7136\u4f1a\u60f3\u5230\n\n\u82e5\u8981\u51e0\u4e2a\u7684gcd\u4e0d\u7b49\u4e8e0\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u4ed6\u4eec\u7684\u5176\u4e2d\u4e00\u4e2a\u975e1\u7684\u56e0\u6570DP\n\n\u5411\u4e0bDP\u663e\u7136\u4e0d\u5999\uff0c\u4e8e\u662f\u51b3\u5b9aDFS\u6811\uff0c\u56de\u6eaf\u65f6\u53bbDP\n\n\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u70b9\uff0c\u904d\u5386\u4ed6\u7684\u513f\u5b50\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5b50\u8282\u70b9\u56de\u6eaf\u65f6\u627e\u4ed6\u4eec\u4e24\u4e2a\u7684\u6240\u6709\u76f8\u540c\u8d28\u56e0\u5b50\n\n\u8fdb\u884cDP\uff0c\u540c\u65f6\u66f4\u65b0\u7b54\u6848\n\n\u6700\u540e\u8f93\u51fa\u7b54\u6848\u5373\u53ef\n\n\u5bf9\u4e8e\u627e\u5171\u540c\u8d28\u56e0\u5b50\uff0c\u53ea\u8981\u9884\u5148\u5904\u7406\uff1a\n\n    \n   \u5148\u627e\u5230\u8d28\u6570\u5bb6\u65cf\uff0c\n   \u518d\u4e00\u4e2a\u4e00\u4e2a$a_i$\u5206\u89e3\u8d28\u56e0\u6570\uff0c\u628a\u5b83\u4eec\u653e\u5728\u6570\u7ec4\u91cc\u50a8\u5b58\u3002\n    \n\u6015\u6570\u7ec4\u7a7a\u95f4\u70b8\uff1f\u4e0d\u7528\u62c5\u5fc3\uff0c\u4e00\u4e2a\u6570\u6700\u591a\u4e5f\u5c31$7,8$\u4e2a\u4e0d\u540c\u7684\u8d28\u56e0\u5b50\n\n$2\\times3\\times5\\times7\\times11\\times13\\times17\\times23>2\\times10^5$\n\n\u6240\u4ee5\u5c31\u95ee\u9898\u4e0d\u5927\u4e86\uff01\u8be6\u89c1\u4e0b\u65b9\u4ee3\u7801\u2193\u2193\u2193\n\n#AC\u4ee3\u7801\uff1a\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint tot=0,n,cnt,head[200010];\nint maxx=200010,a[200010],vis[300010],f[200010][10],y[200010][10],ans,p[200010];\n//p\u662f\u8d28\u6570\u5bb6\u65cf \uff0cy[i][j]\u662f\u6307a[i]\u7684\u7b2cj\u5927\u7684\u8d28\u56e0\u5b50 \nstruct abc{\n\tint to,nxt;\n}e[800010];\nvoid add(int u,int v){\n\te[++cnt].nxt=head[u];\n\te[cnt].to=v;\n\thead[u]=cnt;\n}\nvoid make_zhi(){//\u6c42\u8d28\u6570\u7684\u6b27\u62c9\u7b5b\uff0c\u4e0d\u61c2\u81ea\u884c\u767e\u5ea6\uff08\u76f8\u4fe1\u5404\u4f4d\u5927\u4f6c\u5b9a\u4f1a\u7684\uff09 \n\tfor(int i=2;i<=maxx;i++){\n\t\tif(!vis[i])p[++tot]=i;\n\t\tfor(int j=1;j<=tot&&p[j]*i<=maxx;j++){\n\t\t\tvis[i*p[j]]=1;\n\t\t\tif(i%p[j]==0)break;\n\t\t}\n\t}\n\t//cout<<p[10]<<endl;\n}\nvoid dfs(int u,int fa){\n\tfor(int i=head[u];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tif(fa==v)continue;\n\t\tdfs(v,u);\n\t\tfor(int j=1;j<=y[u][0];j++){\n\t\t\tfor(int k=1;k<=y[v][0];k++){\n\t\t\t\tif(y[u][j]==y[v][k]){\n\t\t\t\t\tans=max(ans,f[u][j]+f[v][k]+1);\n\t\t\t\t\tf[u][j]=max(f[u][j],f[v][k]+1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tmake_zhi();\n\tint ff=1;\n\tcin>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>a[i];\n\t\tif(a[i]!=1)ff=0;\n\t}\n\tfor(int i=1;i<n;i++){\n\t\tint u,v;\n\t\tcin>>u>>v;\n\t\tadd(u,v);add(v,u);\n\t}\n\tif(ff){//\u7279\u5224\u51681\u65f6 \n\t\tcout<<0;\n\t\treturn 0;\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;p[j]*p[j]<=a[i];j++){\n\t\t\tif(a[i]==1)break;\n\t\t\tif(a[i]%p[j]==0){\n\t\t\t\ty[i][++y[i][0]]=p[j];//\u592a\u61d2\u4e8e\u662f\u7528y[i][0]\u5b58\u8d28\u6570\u4e2a\u6570 \n\t\t\t\twhile(a[i]%p[j]==0)a[i]/=p[j];//\u7edf\u7edf\u9664\u6389 \n\t\t\t}\n\t\t}\n\t\tif(a[i]!=1)y[i][++y[i][0]]=a[i];//\u5269\u4e0b\u4e86\u4ed6\u81ea\u5df1\u600e\u4e48\u529e\uff1f\u9760\u4ed6\u4e86 \n\t}\n\tdfs(1,0);\n\tcout<<ans+1;\n} \n//\u52a0\u4e00\u4ec0\u4e48\u7684\u591a\u8c03\u51e0\u6b21\u5c31\u4f1a\u53d1\u73b0\u7684\u4e86 \n```\n\n### \u652f\u6301\u4e00\u4e0b\u5427\uff0c\u5173\u6ce8\uff0c\u70b9\u8d5e\uff0c\u8bc4\u8bba\u90fd\u597d\n\n# THE END\n",
        "postTime": 1586686738,
        "uid": 227864,
        "name": "Realityang",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1101D \u3010GCD Counting\u3011"
    },
    {
        "content": "## \u9898\u610f\n\u7ed9\u5b9a\u4e00\u68f5 $n$ \u68f5\u8282\u70b9\u7684\u5e26\u6743\u6811\uff0c\u6c42\u4e00\u6761\u6700\u957f\u7684\u94fe\uff08\u8bbe\u957f\u5ea6\u4e3a $ans$\uff0c\u8def\u5f84\u4e0a\u6bcf\u4e2a\u70b9\u8bb0\u4e3a $r_i$\uff09\uff0c\u8981\u6c42 $\\gcd(r_1,r_2,\\cdots,r_n)>1$\u3002\n\n## \u601d\u8def\u53ca\u7b97\u6cd5\n\u672c\u9898\u662f\u4e00\u9053**\u70b9\u5206\u6cbb**\u88f8\u9898\u3002\n\n\u8bbe\u5f53\u524d\u5904\u7406\u5230\u4ee5\u8282\u70b9 $u$ \u4e3a\u6839\u7684\u5b50\u6811\uff0c\u90a3\u4e48\u6240\u6709\u7684\u8def\u5f84\u4e2d\uff0c\u8981\u4e48\u7a7f\u8fc7 $u$\uff0c\u8981\u4e48\u4e0d\u7ecf\u8fc7 $u$\u3002\u5bf9\u4e8e\u7a7f\u8fc7 $u$ \u7684\u8def\u5f84\uff0c\u5148\u5c06\u5176~~\u6253\u5165\u51b7\u5bab~~\uff0c\u5f85\u5230\u56de\u6eaf\u65f6\u518d\u8fdb\u884c\u5904\u7406\u3002\u800c\u5bf9\u4e8e\u6ca1\u6709\u7ecf\u8fc7 $u$ \u7684\u8def\u5f84\uff0c\u6211\u4eec\u5c31\u5c06 $u$ \u8fd9\u4e2a\u8282\u70b9~~\u5047\u88c5~~\u5220\u6389\uff0c$u$ \u7684\u5b50\u8282\u70b9\u4eec\u5c31\u5404\u81ea\u6210\u4e3a\u6839\u8282\u70b9\uff0c\u7ee7\u7eed\u50cf $u$ \u4e00\u6837\u5904\u7406\uff08\u5f88\u660e\u663e\u662f\u4e00\u4e2a**\u9012\u5f52\u7ed3\u6784**\uff09\u3002\n\n### \u90a3\u4e48\uff0c\u5982\u4f55\u5904\u7406\u5462\uff1f\n\u9996\u5148\uff0c\u6211\u4eec\u8981\u627e\u5230**\u5f53\u524d\u5b50\u6811\u7684\u91cd\u5fc3**\uff08\u81f3\u4e8e\u4e3a\u4ec0\u4e48\uff0c\u5927\u5bb6\u753b\u4e00\u6761\u94fe\uff0c\u6bd4\u8f83\u4e00\u4e0b\u4ece\u6839\u8282\u70b9\u51fa\u53d1\u548c\u4ece\u91cd\u5fc3\u51fa\u53d1\u904d\u5386\u7684\u590d\u6742\u5ea6\u533a\u522b\u5c31\u77e5\u9053\u4e86\uff09\u3002\n\n\u7136\u540e\u4ece\u91cd\u5fc3\u51fa\u53d1\uff0c\u5148\u5c06\u91cd\u5fc3\u5206\u89e3\u8d28\u56e0\u6570\uff0c\u7136\u540e\u66b4\u529b\u5f80\u4e0b\u679a\u4e3e\uff0c\u6c42\u6574\u6761\u94fe\u7684\u516c\u56e0\u6570\uff08\u7528 $\\gcd$ \u6570\u7ec4\u8868\u793a\uff09\u3002\u7136\u540e\u8bb0\u5f55 $val_i$ \u4e3a**\u76ee\u524d\u904d\u5386\u5230\u7684\u94fe\u9664\u5916**\u7684\u4ee5 $i$ \u4e3a\u516c\u56e0\u6570\u7684\u94fe\u7684\u6700\u957f\u957f\u5ea6\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u5982\u679c\u6709\u91cd\u5fc3\u7684\u67d0\u4e24\u6761\u94fe $\\gcd$ \u76f8\u540c\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u62fc\u8d77\u6765\uff0c\u65b0\u957f\u5ea6\u662f $l+val_i+1$\uff1a\u5176\u4e2d $l$ \u662f\u5f53\u524d\u94fe\u957f\u5ea6\uff0c$l$ \u662f\u73b0\u5728\u65f6\uff0c$val$ \u662f\u8fc7\u53bb\u5f0f\uff0c\u6240\u4ee5\u80af\u5b9a\u4e0d\u662f\u76f8\u540c\u94fe\uff0c\u800c\u4ed6\u4eec\u90fd\u4e0d\u5305\u542b $u$\uff0c\u6240\u4ee5\u8981 $+1$\uff08\u5f53\u7136\u5982\u679c\u4f60\u5199\u7684\u662f\u5305\u542b $u$ \u7684\uff0c\u90a3\u5c31\u662f $-1$\uff09\u3002\n\n\u70b9\u5206\u6cbb\u7684\u9898\u601d\u8def\u662f\u6700\u96be\u5199\u7684\uff0c\u7ed3\u5408\u4ee3\u7801\u7406\u89e3\u4f1a\u4f7f\u4f60\u5bb9\u6613\u7406\u89e3\u4e00\u4e9b\u3002\n## \u7ec6\u8282\n- \u6c42\u91cd\u5fc3\u524d\u4e00\u5b9a\u8981\u6ce8\u610f\uff01\uff01\u4e0d\u8981 $u,v$ \u653e\u9519\u4e86\uff0c\u4e0d\u7136\u65f6\u95f4\u590d\u6742\u5ea6\u76f4\u63a5\u7206\u70b8\uff1b\n- $val$ \u521d\u59cb\u5316\u522b\u5fd8\u4e86\uff0c``memset`` \u53ef\u4ee5\u8d4b $-1$\uff1b\n- \u5355\u4e2a\u70b9\u4e5f\u53ef\u6210\u8def\u5f84\uff0c\u5982\u679c\u70b9\u5206\u6cbb\u5b8c\u6210\u540e $ans$ \u4e3a $0$ \u4e14\u67d0\u4e2a\u8282\u70b9\u6743\u503c\u4e0d\u4e3a $1$\uff0c$ans$ \u662f\u53ef\u4ee5\u4e3a $1$ \u7684\uff1b\n- \u5199\u4ee3\u7801\u65f6\u6ce8\u610f\uff0c\u5982\u679c\u4e00\u65e6\u51fa\u73b0 $1$\uff0c\u5c31\u6ca1\u5fc5\u8981\u8fdb\u884c\u540e\u7eed\u64cd\u4f5c\u4e86\uff0c\u80af\u5b9a\u4e0d\u5408\u6cd5\u3002\n- \u672c\u4eba\u559c\u6b22 ``vector``\uff0c\u4f46\u672c\u9898\u4e5f\u7528\u4e86\u94fe\u5f0f\u524d\u5411\u661f\uff0c\u6015 T\u3002\n- \u5efa\u8bae\u4f7f\u7528 ``scanf`` \u548c ``printf``\uff0c\u5373\u4f7f\u662f\u5173\u95ed\u540c\u6b65\u6d41\u7684 ``cin``\u3001``cout`` \u4e5f\u6bd4\u5b83\u4eec\u6162\u3002\n## \u4ee3\u7801\n\u4ee5\u4e0b\u662f\u53c2\u8003\u4ee3\u7801\uff0c\u5927\u5bb6\u53ef\u4ee5\u5bf9\u7740\u4ee3\u7801\u7406\u89e3 `\u601d\u8def\u53ca\u7b97\u6cd5` \u4e00\u7ae0\u7684\u5185\u5bb9\u3002 \n\nCode\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int N = 200000 + 10;\nint n, ans, a[N];\nint rt, sum, mson[N], sz[N];\nint len, cnt, st[N], visit[N], gcd[N], dis[N], val[N];\npair<int, int> pr[N];\nint head[N], etot;\nstruct Edge{\n    int v, nxt;\n} g[N << 1];\n\ninline void add_edge(int v, int u){\n    g[++etot].nxt = head[u], g[etot].v = v, head[u] = etot;\n    g[++etot].nxt = head[v], g[etot].v = u, head[v] = etot;\n}\n\ninline void getrt(int u, int fa){\n\tsz[u] = 1, mson[u] = 0;\n\tfor(int i=head[u];i;i=g[i].nxt){\n    \tint v = g[i].v; \n\t\tif(v != fa && !visit[v]){\n\t\t\tgetrt(v, u);\n\t\t\tmson[u] = max(mson[u], sz[v]);\n\t\t\tsz[u] += sz[v];\n\t\t}\n\t}\n\tmson[u] = max(mson[u], sum - sz[u]);\n\tif(mson[u] < mson[rt])\trt = u; \n}//\u627e\u91cd\u5fc3\u4e0d\u89e3\u91ca\uff0c\u90fd\u80fd\u6765\u505a\u7d2b\u9898\u4e86\u8fd8\u4e0d\u4f1a\uff1f \n\ninline void getdis(int u, int fa){\n\tgcd[u] = __gcd(a[u], gcd[fa]);//gcd[u]\u4ee3\u8868\u8fd9\u6761\u94fe\u4e0a\u7684\u6700\u5927\u516c\u56e0\u6570\uff0c\u66f4\u65b0\n\tif(gcd[u] == 1)\treturn ;//\u5982\u679c\u662f 1\uff0c\u5c31\u6ca1\u5fc5\u8981\u7ee7\u7eed\u5f80\u4e0b\u4e86\uff0c\u76f4\u63a5\u7ed3\u675f \n\tpr[++len] = make_pair(gcd[u], dis[u]);//\u5c06\u8fd9\u6761\u94fe\u7684gcd\u548c u \u5230\u91cd\u5fc3\u7684\u8ddd\u79bb\u5b58\u8fdb pair\u91cc\u5907\u7528 \n\tfor(int i=head[u];i;i=g[i].nxt){//\u904d\u5386 \n\t\tint v = g[i].v;\n\t\tif(v == fa || visit[v])\tcontinue;\n\t\tdis[v] = dis[u] + 1;//\u66f4\u65b0\u8ddd\u79bb \n\t\tgetdis(v, u);\n\t}\n}\n\ninline void query(int x, int l){\n\tfor(int i=2;i*i<=x;i++){\n\t\tif(x % i == 0){\n\t\t\twhile(x % i == 0)\tx /= i;\n\t\t\tif(val[i] != -1)\tans = max(ans, l + val[i] + 1);\n\t\t\t//\u5982\u679c\u4e24\u6761\u94fe gcd \u76f8\u540c\uff0c\u53ef\u4ee5\u76f4\u63a5\u62fc\u8d77\u6765\uff08\u524d\u63d0\u662f\u6709\uff0c\u6240\u4ee5\u8981\u5224-1\uff09 \n\t\t}\n\t}\n\tif(val[x] != -1 && x != 1)\tans = max(ans, l + val[x] + 1);//\u540c\u4e0a \n}\n\ninline void solve(int x, int l){\n\tfor(int i=2;i*i<=x;i++){//\u679a\u4e3e\u6240\u6709\u53ef\u80fd\u56e0\u5b50 \n\t\tif(x % i == 0){\n\t\t\twhile(x % i == 0)\tx /= i;//\u9664\u5230\u5c3d \n\t\t\tif(val[i] == -1)\tst[++cnt] = i;//i\u9996\u6b21\u51fa\u73b0\uff0c\u653e\u8fdbst\u4e2d\u5907\u7528 \n\t\t\tval[i] = max(val[i], l);//\u5c1d\u8bd5\u66f4\u65b0\u957f\u5ea6 \n\t\t\t//val[i] \u8868\u793a\u4ee5 i \u4e3a\u516c\u56e0\u6570\u7684\u94fe\u7684\u6700\u957f\u957f\u5ea6 \n\t\t}\n\t}\n\tif(x != 1){//\u7279\u5224 x \u8fd8\u662f\u4e2a\u8d28\u6570\u7684\u60c5\u51b5 \n\t\tif(val[x] == -1)\tst[++cnt] = x;\n\t\tval[x] = max(val[x], l);//\u540c\u4e0a \n\t}\n\treturn ;\n}\n\ninline void calc(int u){\n\tdis[u] = cnt = 0, gcd[u] = a[u];//\u521d\u59cb\u5316\uff0c\u56e0\u4e3a\u5355\u4e2a\u70b9\u4e5f\u53ef\u4ee5\u662f\u8def\u5f84\uff0c\u6240\u4ee5\u4e00\u5f00\u59cbgcd\u662f\u4ed6\u672c\u8eab \n\tsolve(gcd[u], 0);//\u66f4\u65b0\u4e00\u4e0b\uff0c\u73b0\u5728\u8fd8\u6ca1\u6709\u6c42\u51fa\u94fe\u7684\u957f\u5ea6\uff0c\u5148\u4f200 \n\tfor(int i=head[u];i;i=g[i].nxt){\n\t\tint v = g[i].v;\n\t\tif(visit[v])\tcontinue;\n\t\tdis[v] = 1, len = 0;//u\u662f\u91cd\u5fc3\uff0cv\u662fu\u7684\u513f\u5b50\uff0c\u6240\u4ee5\u8ddd\u79bb\u662f1 \n\t\tgetdis(v, u);//\u66f4\u65b0v\u53ca\u5176\u5b50\u6811\u5230\u91cd\u5fc3\u7684\u8ddd\u79bb\uff0c\u5e76\u4e14\u8bd5\u56fe\u66f4\u65b0\u7b54\u6848\u957f\u5ea6 \n\t\tfor(int j=1;j<=len;j++)\tquery(pr[j].first, pr[j].second);//\u80fd\u5426\u627e\u5230\u66f4\u4f18\u7b54\u6848\uff1f \n\t\tfor(int j=1;j<=len;j++)\tsolve(pr[j].first, pr[j].second);//\u627e\u5b8c\u7b54\u6848\u4e4b\u540e\u518d\u6b21\u66f4\u65b0 val \n\t}\n\tfor(int i=1;i<=cnt;i++)\tval[st[i]] = -1;//st\u8fd9\u4e2a\u6808\u552f\u4e00\u7684\u4f5c\u7528\u5c31\u662f\u5e2e\u52a9\u6e05\u96f6\uff0c\u51c6\u5907\u5904\u7406\u4e0b\u4e00\u4e2a\u70b9 \n}\n\ninline void divide(int u){\n\tvisit[u] = 1;\n\tif(a[u] > 1)\tcalc(u);//\u5982\u679c\u672c\u8eab\u6743\u503c\u4e3a 1 \u5c31\u6ca1\u5fc5\u8981\u5904\u7406\uff0c\u80af\u5b9a\u4e0d\u5408\u6cd5 \n\tfor(int i=head[u];i;i=g[i].nxt){\n\t\tint v = g[i].v;\n\t\tif(visit[v])\tcontinue;\n        sum = sz[v], mson[rt] = 1e9;\n        getrt(v, 0);\n        divide(rt);\n\t}\n\treturn ;\n}\nint main(){\n\tmemset(val, -1, sizeof(val));//\u521d\u59cb\u5316\u522b\u5fd8\u4e86 \n\tscanf(\"%d\", &n);\n\tfor(int i=1;i<=n;i++)\tscanf(\"%d\", &a[i]);\n\tfor(int i=1;i<n;i++){\n\t\tint u, v;\n\t\tscanf(\"%d%d\", &u, &v);\n\t\tadd_edge(u, v);\n\t}\n\tsum = n, mson[rt] = 1e9;\n\tgetrt(1, 0);\n\tdivide(rt);\n\tfor(int i=1;i<=n;i++)\tif(a[i] > 1)\tans = max(ans, 1);\n\t//\u5355\u4e2a\u70b9\u4e5f\u53ef\u6210\u8def\u5f84\uff0c\u5982\u679cans\u4e3a0\u4e14\u672c\u8eab\u6743\u503c\u4e0d\u4e3a 1\uff0c\u662f\u6709\u4fdd\u5e95\u957f\u5ea6\u7684 \n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n```\n\u4ee3\u7801\u8fd8\u662f\u633a\u957f\u7684\uff0c\u7406\u89e3\u4e5f\u6709\u4e00\u70b9\u96be\u5ea6\uff08\u6216\u8005\u662f\u6211\u592a $\\mathrm{rubbish}$ \u4e86\uff09\u3002\n\n\u7801\u5b57\u4e0d\u6613\uff0c\u5e0c\u671b\u4e0d\u8981\u541d\u556c\u60a8\u7684\u8d5e\u54e6\uff01",
        "postTime": 1645252949,
        "uid": 363036,
        "name": "chlchl",
        "ccfLevel": 5,
        "title": "CF1101D GCD Counting \u9898\u89e3"
    },
    {
        "content": "\u867d\u7136\u8bf4\u8fd9\u9898\u6709\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u53ef\u662f\u8fd9\u5176\u5b9e\u662f\u4e2a\u70b9\u5206\u6cbb\u88f8\u9898\u6b38\n\n\u5047\u8bbe\u5f53\u524d\u7684\u5206\u6cbb\u5230\u7684\u91cd\u5fc3\u4e3a$x$\uff0c\u5f88\u663e\u7136\uff0c\u7ecf\u8fc7$x$\u7684\u90a3\u4e9b\u5408\u6cd5\u7684\u94fe\uff0c\u80af\u5b9a\u94fe\u4e2d\u6bcf\u4e2a\u6570\u90fd\u542b\u6709\u8d77\u7801\u4e00\u4e2a\u76f8\u540c\u7684$a[x]$\u7684\u8d28\u56e0\u5b50\uff0c\u56e0\u4e3a$gcd|a[x]$\u561b\u3002\u628a$a[x]$\u5206\u89e3\u8d28\u56e0\u6570\uff0c\u7136\u540e\u5bf9\u6bcf\u4e2a\u8d28\u56e0\u5b50$p$\uff0c\u90fd\u505a\u4e00\u6b21dfs\uff0c\u6c42\u51fa\u79bb$x$\u6700\u8fdc\u7684\u4e24\u4e2a\u70b9$u,v$\uff0c\u8fd9\u4e24\u4e2a\u70b9\u5230x\u7684\u8def\u5f84\u4e0a\u7684\u6570\u5f53\u7136\u90fd\u8981\u88ab$p$\u6574\u9664\uff0c\u7136\u540e$ans=max(ans,dis(u)+dis(v))$\uff0c$dis(u)$\u8868\u793a$u$\u5230$x$\u7684\u8ddd\u79bb\u3002\u8981\u6ce8\u610f$u,v$\u4e0d\u80fd\u5728\u4e00\u4e2a\u5b50\u6811\u5185\u3002\n\n\u7136\u540e\u6bcf\u6b21\u627e\u91cd\u5fc3\uff0c\u4e0d\u505c\u628a\u6811\u5206\u5272\u5c31\u884c\u4e86\u3002\n\n\u70b9\u5206\u6cbb\u7801\u91cf\u6bd4\u8f83\u5927\uff0c\u4f46\u662f\u719f\u7ec3\u4e4b\u540e\u6253\u8d77\u6765\u5176\u5b9e\u8fd8\u662f\u633a\u5feb\u7684\u3002\u3002~~\u5927\u591a\u90fd\u662f\u677f\u5b50\uff0c\u6bd4\u8d5b\u7684\u65f6\u5019\u590d\u5236\u7c98\u8d3423333~~\n\n\u6211\u662f\u849f\u84bb\uff0c\u6709\u5565\u95ee\u9898\u8ddf\u6211\u8bf4\u54c8\uff08QQ\u79c1\u4fe1Email\u4e4b\u7c7b\u968f\u4fbf\u5565\u90fd\u884c\uff09  \n\u7136\u540e\u5ba3\u4f20\u4e00\u6ce2[\u535a\u5ba2](https://blog.csdn.net/ymzqwq/article/details/88697367)\n\n```cpp\n#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#define ll long long\n#define fr(i,x,y) for(int i=(x);i<=(y);i++)\n#define rf(i,x,y) for(int i=(x);i>=(y);i--)\n#define frl(i,x,y) for(int i=(x);i<(y);i++)\nusing namespace std;\nconst int N=200002;\nconst int M=N<<1;\nint n,a[N];\nint cnt,head[N],Next[M],v[M];\nint b[N];\nint rt,mx,mxx;\nint sz[N],mmx[N],s[M];\nint ans=-1;\nvector<int> p[N];\n\nvoid read(int &x){\n\tchar ch=getchar();x=0;\n\tfor(;ch<'0'||ch>'9';ch=getchar());\n\tfor(;ch>='0'&&ch<='9';ch=getchar()) x=(x<<3)+(x<<1)+ch-'0';\n}\n\nvoid add(int x,int y){\n\tNext[++cnt]=head[x];\n\thead[x]=cnt;\n\tv[cnt]=y;\n}\n\nint findrt(int x,int fa,int n){ //\u627e\u91cd\u5fc3\n    sz[x]=1;mmx[x]=0;\n    int ans=0,tt;\n    for(int i=head[x];i;i=Next[i])\n     if (v[i]!=fa&&!b[v[i]]){\n        tt=findrt(v[i],x,n);\n        if (mmx[tt]<mmx[ans]) ans=tt;\n        sz[x]+=sz[v[i]];\n        mmx[x]=max(mmx[x],sz[v[i]]);\n     }\n    mmx[x]=max(mmx[x],n-sz[x]);\n    if (mmx[x]<mmx[ans]) ans=x;\n    return ans;\n}\n\nint getdis(int x,int fa,int vv){\n\tint mx=0;\n\tfor(int i=head[x];i;i=Next[i])\n\t if (v[i]!=fa&&!b[v[i]]&&a[v[i]]%vv==0)\n\t  mx=max(mx,getdis(v[i],x,vv));\n\treturn mx+1;\n}\n\nint cal(int x,int vv){ //\u627e\u6700\u8fdc\u7684\u4e24\u4e2a\u70b9\n\tans=max(ans,0);\n\tint mx=-1,mxx=-1;\n\tfor(int i=head[x];i;i=Next[i])\n\t if (!b[v[i]]&&a[v[i]]%vv==0){\n\t \tint xx=getdis(v[i],x,vv);\n\t \tif (xx>mx) mx=xx;\n\t \tif (mx>mxx) swap(mx,mxx);\n\t }\n\treturn max(mx+mxx,mxx);\n}\n\nvoid dfs(int x,int n){ //\u5206\u5272\u6811\n\tb[x]=1;int tmp=a[x];\n\tfrl(i,0,p[tmp].size())\n\t ans=max(ans,cal(x,p[tmp][i])); //\u5bf9\u6bcf\u4e2a\u8d28\u56e0\u5b50\u90fd\u627e\u6700\u8fdc\u7684\n\tfor(int i=head[x];i;i=Next[i])\n\t if (!b[v[i]]){\n\t \tint rt=findrt(v[i],0,sz[v[i]]);\n\t \tassert(rt>0);\n\t \tdfs(rt,s[i]);\n\t }\n}\n\nvoid init(){ //\u5206\u89e3\u8d28\u56e0\u6570\n\tfrl(i,2,N)\n\t if (!b[i]){\n\t \tp[i].push_back(i);\n\t \tfor(int j=2*i;j<N;j+=i)\n\t \t p[j].push_back(i),b[j]=1;\n\t }\n\tmemset(b,0,sizeof b);\n}\n\nint main(){\n\tinit();\n\tread(n);\n\tfr(i,1,n) read(a[i]);\n\tint x,y;\n\tfr(i,2,n){\n\t\tread(x);read(y);\n\t\tadd(x,y);add(y,x);\n\t}\n\t//int rt=findrt(1,0,n);\n\tmmx[0]=2e9;\n\tdfs(findrt(1,0,n),n);\n\tcout<<ans+1<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1553081702,
        "uid": 6174,
        "name": "\u591c\u732b\u5b50\u9a71\u868a\u5668",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1101D \u3010GCD Counting\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1101D)\n\n---\n\n\u76f4\u63a5\u66b4\u529b\u641c\u7d22\u53ef\u80fd\u4f1a $\\operatorname T$\uff0c\u770b\u9898\u76ee\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u6811\u5f62 $\\text{dp}$\uff0c\u600e\u4e48 $\\operatorname d$ \u5462\uff1f\n\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5176\u5b9e\u4e00\u4e2a\u6570\u7684\u8d28\u56e0\u6570\u4e0d\u662f\u5f88\u591a\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5148\u5206\u89e3\u8d28\u56e0\u6570\u3002\n\n\u6709\u6ca1\u6709\u76f8\u540c\u7684\u8d28\u56e0\u6570\uff0c\u6709\u7684\u8bdd\uff0c\u5c31\u8bf4\u660e\u8fd9\u4e24\u4e2a\u6570\u7684 $\\gcd$ \u4e0d\u4e3a1\u3002\n\n\u5b9a\u4e49 $dp_{u,x}$ \u8868\u793a\u4ee5 $\\operatorname u$ \u4e3a\u65ad\u70b9\u6700\u957f\u7684\u4e00\u6761\u94fe\uff0c\u8d28\u56e0\u6570\u662fx\u3002\n\n\u6ce8\u610f\u7b54\u6848\u7edf\u8ba1\uff0c\u8981\u7b97\u4e24\u6761\u94fe\u5408\u8d77\u6765\u7684\u8def\u5f84\u3002\n\n```cpp\n#include <cmath>\n#include <vector>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\ntemplate<typename T>void read(T &x) {\n    T f = 1;x = 0;char s = getchar();\n    while(s < '0' || s > '9') {if(s == '-')f = -1;s = getchar();}\n    while(s >= '0' && s <= '9') {x = x * 10 + s - '0';s = getchar();}\n    x *= f;\n}\ntemplate<typename T>void print(T x) {\n    if(x < 0) putchar('-'),x = -x;\n    if(x > 9) print(x / 10);\n    putchar(x % 10 + '0');\n}\n\nconst int maxn = 200005;\n\nint nxt[maxn << 1],ver[maxn << 1],head[maxn],tot;\nvoid addEdge(int x,int y) {\n    nxt[++ tot] = head[x];ver[tot] = y;head[x] = tot;\n}\n\nint n,col[maxn],a[maxn],sz[maxn],ans;\nvector<int> dp[maxn];\nvector<int> prime[maxn];\n\nvoid dfs(int u,int fa) {\n\tfor (int e = head[u] ; e ; e = nxt[e]) {\n\t\tint v = ver[e];\n\t\tif (v == fa) continue;\n\t\tdfs(v,u);\n\t\tfor (int i = 0 ; i < prime[u].size() ; ++ i) {\n\t\t\tfor (int j = 0 ; j < prime[v].size() ; ++ j) {\n\t\t\t\tif (prime[u][i] == prime[v][j]) {\n\t\t\t\t\tans = max(ans,dp[v][j] + dp[u][i]);\n\t\t\t\t\tdp[u][i] = max(dp[u][i],dp[v][j] + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main () {\n\tread(n);\n\tfor (int i = 1 ; i <= n ; ++ i) {\n\t\tread(a[i]);\n\t\tif (a[i] ^ 1) ans = 1;\n\t\tfor (int j = 2 ; j * j <= a[i] ; ++ j) {\n\t\t\tif (a[i] % j == 0) {\n\t\t\t\tprime[i].push_back(j);\n\t\t\t\tdp[i].push_back(1);\n\t\t\t\twhile (a[i] % j == 0) a[i] /= j;\n\t\t\t}\n\t\t}\n\t\tif (a[i] ^ 1) prime[i].push_back(a[i]),dp[i].push_back(1);\n\t}\n\tint x,y;\n\tfor (int i = 1 ; i < n ; ++ i) {\n\t\tread(x);read(y);\n\t\taddEdge(x,y);\n\t\taddEdge(y,x);\n\t}\n\tdfs(1,0);\n\tprint(ans);\n    return 0;\n}\n```",
        "postTime": 1598169911,
        "uid": 163516,
        "name": "Strelitzia",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1101D \u3010GCD Counting\u3011"
    },
    {
        "content": "\u9996\u5148\u5bb9\u6613\u53d1\u73b0\u6211\u4eec\u53ea\u9700\u8981\u8bb0\u5f55\u6bcf\u4e2a\u6570\u6709\u54ea\u4e9b\u8d28\u56e0\u5b50\u5c31\u53ef\u4ee5\u4e86\u3002\u6211\u4eec\u5e76\u4e0d\u5173\u5fc3\u4ed6\u4eec\u7684\u6b21\u6570\u3002\n\n\u53d1\u73b0\u4e0d\u540c\u8d28\u56e0\u5b50\u4e2a\u6570\u975e\u5e38\u5c11\u3002\u90a3\u6709\u4e2a\u60f3\u6cd5\u5c31\u662f\u5728dp\u7684\u65f6\u5019\u8bb0\u5f55\u5f53\u524d\u4f59\u4e0b\u7684\u8d28\u56e0\u5b50\u6709\u54ea\u4e9b\u3002\n\n\u7136\u540e\u4f60\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u8f6c\u79fb\u8d85\u7ea7\u52b2\u7206\u3002\u590d\u6742\u5ea6\u4e5f\u5f88\u9ad8\u3002\n\n\u8003\u8651\u4f18\u5316\u72b6\u6001\u3002\n\n\u4e00\u6761\u94fe\u4e0a\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2a\u5171\u540c\u7684\u8d28\u56e0\u6570\u5c31\u53ef\u4ee5\u4f7f\u5176\u6ee1\u8db3\u9898\u610f\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u8bb0\u5f55\u8fd9\u4e2a\u8d28\u56e0\u6570\u5373\u53ef\u3002\n\n\u5b9e\u73b0\u6280\u5de7\u89c1\u4ee3\u7801\uff1a\nhttps://www.luogu.com.cn/paste/of0x9c7e",
        "postTime": 1596781191,
        "uid": 55078,
        "name": "YLWang",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1101D \u3010GCD Counting\u3011"
    },
    {
        "content": "[Blog \u94fe\u63a5](http://blog.flyinthesky.win/Codeforces1101D/)\n\n\u9898\u610f\uff1a\u7ed9\u51fa\u4e00\u68f5\u65e0\u5411\u5e26\u70b9\u6743\u6811\uff0c\u5b9a\u4e49$dist(x,y)$\u4e3a$x,y$\u4e4b\u95f4\u7684\u70b9(\u5305\u542b$x,y$)\u7684\u4e2a\u6570\uff0c$g(x,y)$\u4e3a$x,y$\u4e4b\u95f4\u6240\u6709\u70b9\u6743$gcd$\uff0c\u6c42\u6700\u5927\u7684$dist(x,y)$\uff0c\u5e76\u4e14$g(x,y) \\geq 2$\n\n\u7531\u4e8e$2 \\times 10^5$\u4ee5\u5185\u7684\u6570\u6700\u591a$7$\u79cd\u8d28\u6570\u76f8\u4e58\uff0c\u6240\u4ee5\u53ef\u4ee5\u5bf9\u70b9\u6743\u5206\u89e3\u8d28\u56e0\u6570\uff0c\u6307\u6570\u4e0d\u91cd\u8981\uff0c\u53ea\u8003\u8651\u8d28\u56e0\u5b50\uff0c\u56e0\u4e3a\u8d28\u56e0\u5b50\u76f8\u540c\u7684$gcd$\u4e00\u5b9a$\\geq 2$\u3002\n\n\u6240\u4ee5\u6211\u4e00\u5f00\u59cb\u60f3\u5bf9\u6bcf\u4e2a\u8d28\u56e0\u5b50\u5efa\u4e00\u68f5\u6811\uff0c\u7136\u540e\u5728\u6811\u4e0a\u505a\u7c7b\u4f3c\u76f4\u5f84\u7684DP\u3002\n\u8fd9\u6837\u7684\u6811\u7684\u603b\u5927\u5c0f\u4e0d\u4f1a\u8d85\u8fc7$7n$\uff0c\u4f46\u662f\u7a7a\u95f4\u5c31\u6bd4\u8f83\u7206\u70b8\uff0c\u867d\u7136\u53ef\u4ee5\u7528`map`\u4e4b\u7c7b\u7684\u641e\u4f46\u662f\u9ebb\u70e6\u5f97\u8981\u6b7b\u8fd8\u5e26\u4e86$log$\u3002\n\n\u5176\u5b9e\u4e0d\u9700\u8981\u5efa\u90a3\u4e48\u591a\u68f5\u6811\uff0c\u76f4\u63a5\u4e00\u6b21DFS\uff0c\u627e\u5230\u5b69\u5b50\u5982\u679c\u548c\u81ea\u5df1\u6709\u516c\u8d28\u56e0\u6570\uff0c\u90a3\u4e48\u50cf\u6811\u76f4\u5f84DP\u90a3\u6837\u8f6c\u79fb\u5373\u53ef\uff0c\u6bcf\u4e2a\u70b9\u521d\u59cb\u5316\u957f\u5ea6\u66f4\u65b0\u4e3a1\u3002\n\n\u6ce8\u610f\u8fd9\u91cc\u8ddd\u79bb\u4e3a\u70b9\u7684\u4e2a\u6570\u800c\u4e0d\u662f\u8fb9\u7684\u6761\u6570\uff0cDP \u65b9\u7a0b\u8981\u7279\u522b\u6ce8\u610f\n\n\u8d5b\u573a\u4e0a\u6ca1\u8c03\u51fa\u6765...\u5c31\u662f\u56e0\u4e3a\u4e0a\u9762\u90a3\u4e2a\u95ee\u9898\n\n```c++\n//==========================Head files==========================\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<cmath>\n#include<set>\n#include<iostream>\n#include<map>\n#define LL long long\n#define db double\n#define mp make_pair\n#define pr pair<int, int>\n#define fir first\n#define sec second\n#define pb push_back\n#define ms(i, j) memset(i, j, sizeof i)\nusing namespace std;\n//==========================Templates==========================\ninline int read() {\n    int x = 0, f = 1; char c = getchar();\n    while(c < '0' || c > '9'){if (c == '-') f = -1; c = getchar();}\n    while(c >= '0' && c <= '9'){x = x * 10 + c - '0'; c = getchar();}\n    return x * f;\n}\ninline LL readl() {\n    LL x = 0, f = 1; char c = getchar();\n    while(c < '0' || c > '9'){if (c == '-') f = -1; c = getchar();}\n    while(c >= '0' && c <= '9'){x = x * 10 + c - '0'; c = getchar();}\n    return x * f;\n}\nint power(int a, int b) {\n\tint ans = 1;\n\twhile (b) {\n\t\tif(b & 1) ans = ans * a;\n\t\tb >>= 1; a = a * a;\n\t}\n\treturn ans;\n}\nint power_mod(int a, int b, int mod) {\n\ta %= mod;\n\tint ans = 1;\n\twhile (b) {\n\t\tif(b & 1) ans = (ans * a) % mod;\n\t\tb >>= 1, a = (a * a) % mod;\n\t}\n\treturn ans;\n}\nLL powerl(LL a, LL b) {\n\tLL ans = 1ll;\n\twhile (b) {\n\t\tif(b & 1ll) ans = ans * a;\n\t\tb >>= 1ll;a = a * a;\n\t}\n\treturn ans;\n}\nLL power_modl(LL a, LL b, LL mod) {\n\ta %= mod;\n\tLL ans = 1ll;\n\twhile (b) {\n\t\tif(b & 1ll) ans = (ans * a) % mod;\n\t\tb >>= 1ll, a = (a * a) % mod;\n\t}\n\treturn ans;\n}\nLL gcdl(LL a, LL b) {return b == 0 ? a : gcdl(b, a % b);}\nLL abssl(LL a) {return a > 0 ? a : -a;}\nint gcd(int a, int b) {return b == 0 ? a : gcd(b, a % b);}\nint abss(int a) {return a > 0 ? a : -a;}\n//==========================Main body==========================\n#define LD \"%I64d\"\n#define D \"%d\"\n#define pt printf\n#define sn scanf\n#define pty printf(\"YES\\n\")\n#define ptn printf(\"NO\\n\")\n//==========================Code here==========================\nconst LL MAXN = 200000 + 5;\n\nLL n, a[MAXN], ans = 1ll;\nvector<LL > st_a[MAXN];\nvector<LL > G[MAXN];\nvector<pair<LL, LL> > st_dfs[MAXN];\n\nvoid dfs(LL u, LL fa) {\n\tfor (LL i = 0; i < (LL)st_a[u].size(); ++i) st_dfs[u].push_back(make_pair(st_a[u][i], 1));\n\tfor (LL i = 0; i < (LL)G[u].size(); ++i) {\n\t\tLL v = G[u][i];\n\t\tif (v != fa) {\n\t\t\tdfs(v, u);\n\t\t\tfor (LL j = 0; j < (LL)st_dfs[v].size(); ++j) { // st_dfs[v][j]\n\t\t\t\tLL whw = st_dfs[v][j].first;\n\t\t\t\tfor (LL k = 0; k < (LL)st_dfs[u].size(); ++k) { // st_dfs[u][k]\n\t\t\t\t\tLL gg = st_dfs[u][k].first;\n\t\t\t\t\tif (whw == gg) {\n\t\t\t\t\t\tans = max(ans, st_dfs[u][k].second + st_dfs[v][j].second);\n\t\t\t\t\t\t\n\t\t\t\t\t\t//printf(\"ans=%d, u=%d, v=%d, whw=%d\\n\", ans, u, v, whw);\n\t\t\t\t\t\t\n\t\t\t\t\t\tst_dfs[u][k].second = max(st_dfs[u][k].second, st_dfs[v][j].second + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main() {\n\tcin >> n;\n\tfor (LL i = 1; i <= n; ++i) scanf(\"%lld\", &a[i]);\n\tint fl = 0;\n\tfor (LL i = 1; i <= n; ++i) if (a[i] != 1) fl = 1;\n\tif (!fl) return printf(\"0\\n\"), 0;\n\tfor (LL u = 1; u <= n; ++u) {\n\t\tLL tmp = a[u];\n\t\tfor (LL i = 2; i * i <= tmp; ++i) if (tmp % i == 0) {\n\t\t\tst_a[u].push_back(i);\n\t\t\twhile (tmp % i == 0) tmp /= i;\n\t\t}\n\t\tif (tmp != 1) st_a[u].push_back(tmp);\n\t\tsort(st_a[u].begin(), st_a[u].end());\n\t}\n\t\n\tfor (LL x, y, i = 1; i < n; ++i) {\n\t\tscanf(\"%lld%lld\", &x, &y);\n\t\tG[x].push_back(y), G[y].push_back(x);\n\t}\n\t\n\tdfs(1, 0);\n\t\n\tcout << ans;\n\t\n\treturn 0;\n}\n\n```",
        "postTime": 1547282289,
        "uid": 12943,
        "name": "FlyInTheSky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1101D \u3010GCD Counting\u3011"
    },
    {
        "content": "\u662f\u4e00\u9053\u6bd4\u8f83\u6709\u601d\u8003\u6027\u7684\u70b9\u5206\u6cbb\u7ec3\u4e60\u9898\u3002\n\n\u6bcf\u6b21\u90fd\u6df1\u641c\u5e76\u5bfb\u627e\u8def\u5f84\u7684 $gcd$ \uff0c\u8fd9\u6837\u590d\u6742\u5ea6\u8fc7\u9ad8\u3002  \n\u90a3\u4e48\u53ef\u4ee5\u53cd\u5411\u601d\u8003\uff0c\u56fa\u5b9a\u4e00\u4e2a\u6570\u4e3a $gcd$\uff0c\u5e76\u5bfb\u627e\u76f8\u5e94\u7684\u6700\u957f\u8def\u5f84\u3002\u4f46\u662f\u8fd9\u6837\u76f4\u63a5\u6df1\u641c\u4e5f\u4e0d\u5408\u9002\u3002   \n\n\u8fd9\u65f6\u5019\u8003\u8651\u70b9\u5206\u6cbb\uff1a\u627e\u4e00\u4e2a**\u4e2d\u7ee7\u8282\u70b9**\uff0c\u6bcf\u6b21\u4ee5\u4e00\u4e2a\u8d28\u6570\u4e3a\u94fe\u7684 $gcd$ \u4ece\u8be5\u8282\u70b9\u5f80\u4e0b\u6df1\u641c\u3002\u8fd9\u6837\uff0c\u62e5\u6709\u540c\u4e00\u4e2a $gcd$ \u7684\u4e24\u6761\u6700\u957f\u94fe\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u8282\u70b9\u8fde\u63a5\u8d77\u6765\uff0c\u5c31\u5f62\u6210\u4e86\u4e00\u6761\u66f4\u957f\u7684\u94fe\u3002   \n\n\u663e\u7136\u5e94\u8be5\u9009\u62e9\u5b50\u6811\u7684\u91cd\u5fc3\u4f5c\u4e3a\u4e2d\u7ee7\u8282\u70b9\uff0c\u5e76\u5c06\u91cd\u5fc3\u6743\u503c\u7684\u6bcf\u4e2a\u4e0d\u540c\u7684\u8d28\u56e0\u5b50\u4f5c\u4e3a\u94fe\u7684 $gcd$ \u4e00\u6b21\u8fdb\u884c\u4e0a\u8ff0\u7684\u6df1\u641c\u64cd\u4f5c\u3002\n\n### \u601d\u8def\n1. \u6bcf\u6b21\u5148\u627e\u5230**\u5f53\u524d\u5b50\u6811**\u7684\u91cd\u5fc3\uff1b\n2. \u5206\u522b\u4ee5**\u5f53\u524d\u5b50\u6811\u91cd\u5fc3**\u6743\u503c\u7684\u8d28\u56e0\u5b50\u4f5c\u4e3a\u5f53\u524d\u94fe\u7684 $gcd$ \uff0c\u5411\u4e0b\u6df1\u641c\uff1a\u82e5\u5f53\u524d\u8282\u70b9\u7684\u6743\u503c\u4e0d\u542b\u8be5\u8d28\u56e0\u5b50\u5219\u8fd4\u56de\uff1b\n3. \u8bb0\u5f55\u4ee5**\u4e0d\u540c\u8d28\u56e0\u5b50**\u8fdb\u884c\u6df1\u641c\u7684\u6700\u957f\u7684\u4e24\u6761\u94fe\uff08\u4e0d\u542b\u5b50\u6811\u7684\u6839\u8282\u70b9\uff09\u7684\u957f\u5ea6\uff0c\u5219\u8fd9\u68f5\u5b50\u6811\u4e2d\u7684\u6700\u957f\u94fe\u7684\u957f\u5ea6\u4e3a\u8fd9\u4e24\u6761\u94fe\u957f\u5ea6\u4e4b\u548c +1\u3002\n\n\u6ce8\u610f\u7684\u662f\u8981\u5148\u7528\u7ebf\u6027\u7b5b\u6cd5\u7b5b\u51fa\u7d20\u6570\u8868\uff0c\u5728\u8fdb\u884c\u5206\u6cbb\u7684\u65f6\u5019\u5bf9\u91cd\u5fc3\u7684\u6743\u503c\u8fdb\u884c\u8d28\u56e0\u6570\u5206\u89e3\uff0c\u518d\u8fdb\u884c\u6df1\u641c\u3002\n\n\n------------\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn=9e5+5;\nstruct Edge\n{\n\tint v,next;\n} edge[maxn<<1];\nint n,m,cnt,node,tot,sum,ans,maxd,pNum;\nint head[maxn],siz[maxn],mxpt[maxn],w[maxn],prime[maxn];\nbool vis[maxn],isPrime[maxn];\ninline int gcd(int a,int b)\n{\n\tif(!b) return a;\n\treturn gcd(b,a%b);\n}\ninline void add(int u,int v)\n{\n\tedge[++cnt] = {v,head[u]};\n\thead[u] = cnt;\n\tedge[++cnt] = {u,head[v]};\n\thead[v] = cnt;\n\treturn;\n}\ninline void getPrime(int x)   //\u7ebf\u6027\u7b5b \n{\n\tfor(register int i=2;i<=x;i++)\n\t{\n\t\tif(!isPrime[i])\n\t\t{\n\t\t\tprime[++pNum] = i;\n\t\t}\n\t\tfor(register int j=1;j<=pNum&&i*prime[j]<=x;j++)\n\t\t{\n\t\t\tisPrime[i*prime[j]] = true;\n\t\t\tif(i%prime[j]==0) break;\n\t\t}\n\t}\n\treturn;\n}\ninline void dfs(int u,int fath)    //\u5bfb\u627e\u5b50\u6811\u7684\u91cd\u5fc3 \n{\n\tsiz[u] = 1;\n\tmxpt[u] = 0;\n\tfor(register int i=head[u];i!=-1;i=edge[i].next)\n\t{\n\t\tint v = edge[i].v;\n\t\tif(v==fath||vis[v]) continue;\n\t\tdfs(v,u);\n\t\tsiz[u] += siz[v];\n\t\tmxpt[u] = max(mxpt[u],siz[v]); \n\t}\n\tmxpt[u] = max(mxpt[u],tot-siz[u]);\n\tif(mxpt[u]<mxpt[node])\n\t{\n\t\tnode = u;\n\t}\n\treturn;\n}\ninline void query(int u,int fath,int dist,int val)\n{\t\n\tif(gcd(w[u],val)!=val) return;       //\u5982\u679c\u5f53\u524d\u70b9\u7684\u6743\u503c\u4e0d\u542b\u8be5\u8d28\u56e0\u5b50\uff0c\u5219\u76f4\u63a5\u8fd4\u56de \n\tmaxd = max(maxd,dist);               //\u5bfb\u627e\u5b50\u6811\u4e2d\u7684\u6700\u957f\u94fe \n\tfor(register int i=head[u];i!=-1;i=edge[i].next)\n\t{\n\t\tint v = edge[i].v;\n\t\tif(v==fath||vis[v]) continue;\n\t\tquery(v,u,dist+1,val);\n\t}\n\treturn;\n}\ninline void calc(int u,int val)\n{\n\tint dep1=0,dep2=0;\n\tfor(register int i=head[u];i!=-1;i=edge[i].next)\n\t{\n\t\tint v = edge[i].v;\n\t\tif(vis[v]) continue;\n\t\tmaxd = 0;\n\t\tquery(v,u,1,val);\n\t\tif(maxd>dep1) dep2=dep1,dep1=maxd;       //\u4fdd\u5b58\u4e24\u6761\u6700\u957f\u94fe\u7684\u957f\u5ea6 \n\t\telse if(maxd>dep2) dep2=maxd;\n\t}\n\tans = max(ans,dep1+dep2+1);           //\u5c06\u8fd9\u4e24\u6761\u94fe\u901a\u8fc7\u8282\u70b9u\u63a5\u8d77\u6765 \n\treturn;\n}\ninline void solve(int u)\n{\n\tvis[u] = true;\n\tint tmp = w[u];\n\tfor(register int i=1;prime[i]*prime[i]<=tmp;i++)    //\u5206\u89e3\u8d28\u56e0\u6570 \n\t{\n\t\tif(tmp%prime[i]==0) calc(u,prime[i]);\n\t\twhile(tmp%prime[i]==0)\n\t\t{\n\t\t\ttmp/=prime[i];\n\t\t}\n\t}\n\tif(tmp!=1) calc(u,tmp);\n\tfor(register int i=head[u];i!=-1;i=edge[i].next)\n\t{\n\t\tint v = edge[i].v;\n\t\tif(vis[v]) continue;\n\t\tnode = 0;\n\t\ttot = siz[v];\n\t\tdfs(v,u);              //\u5bfb\u627e\u5b50\u6811\u91cd\u5fc3 \n\t\tsolve(node);           //\u70b9\u5206\u6cbb \n\t}\n\treturn;\n}\nint main()\n{\n\tgetPrime(2e5);\n\tmemset(head,-1,sizeof(head));\n\tmemset(siz,0x3f3f3f,sizeof(siz)); \n\tscanf(\"%d\",&n);\n\tfor(register int i=1;i<=n;i++) scanf(\"%d\",&w[i]);\n\tfor(register int i=1;i<n;i++)\n\t{\n\t\tint u,v;\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tadd(u,v);\n\t}\n\tmxpt[0] = n;\n\ttot = n;\n\tdfs(1,0);\n\tsolve(node);\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1645846724,
        "uid": 320282,
        "name": "\u6211\u548c\u9c7c\u8fc7\u4e0d\u53bb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1101D \u3010GCD Counting\u3011"
    },
    {
        "content": "### [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1101D)\n\uff08\u5982\u679c $\\LaTeX$ \u70b8\u4e86\uff0c\u8bf7\u5230\u535a\u5ba2[\u89c2\u770b](https://www.luogu.com.cn/blog/thats-me/ti-xie-cf1101d-gcd-counting)\uff09\n\n$\\Large\\mathscr{Part\\,\\,1\\;\\;}\\text{\u57fa\u672c\u601d\u8def}$\n\n\u9898\u76ee\u8981\u6c42\u6811\u4e0a\u6709\u9650\u5236\u7684\u6700\u957f\u94fe\uff0c\u8003\u8651\u5206\u6790\u8fd9\u4e2a\u9650\u5236\u3002\n\n\u65e2\u7136\u70b9\u6743\u7684\u8303\u56f4\u5728 $2 \\times 10^5$ \u4ee5\u5185\uff0c\u90a3\u4e48\u5176\u81f3\u591a\u4f1a\u62e5\u6709 $6$ \u4e2a\u4e0d\u540c\u8d28\u56e0\u6570 $(2 \\times 3 \\times 5 \\times 7 \\times 11 \\times 13 \\times 17 = 510510 > 2 \\times 10^5)$\uff0c\u90a3\u4e48\u4e0d\u96be\u60f3\u5230\u5bf9\u4e8e\u6bcf\u4e2a\u62e5\u6709\u76f8\u540c\u8d28\u56e0\u5b50\u7684\u70b9\u6c42\u4e00\u6b21\u76f4\u5f84\u3002\u7531\u4e8e\u6bcf\u4e2a\u70b9\u81f3\u591a\u51fa\u73b0 $6$ \u6b21\uff0c\u518d\u8003\u8651\u5230\u5229\u7528\u53bb\u91cd\u50a8\u5b58\u5f85\u904d\u5386\u7684\u8d28\u56e0\u5b50\u4f7f\u7528\u4e86 $\\text{map}$ \u6216\u8005 $\\text{set}$\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u79cd $\\Theta(n\\log n)$ \u7684~~\u4f18\u79c0~~\u505a\u6cd5\u3002\n\n\u66f4\u8fdb\u4e00\u6b65\u5730\uff0c\u6211\u4eec\u53d1\u73b0\u6bcf\u6b21\u6c42\u76f4\u5f84\u7684\u6d41\u7a0b\u662f\u96f7\u540c\u7684\uff0c\u6240\u4ee5\u4e3a\u4e86~~\u51cf\u5c11\u7801\u91cf~~\u4f18\u5316\u590d\u6742\u5ea6\uff0c\u53ef\u4ee5\u5c06\u6b63\u5e38\u7684\u6c42\u76f4\u5f84\u7684\u8fc7\u7a0b\uff08\u5f53\u524d\u8282\u70b9\u6700\u957f\u94fe+\u904d\u5386\u5230\u7684\u5b50\u8282\u70b9\u6700\u957f\u94fe\uff09\u8f6c\u5316\u4e3a\u6709\u9650\u5236\u7684\u8f6c\u79fb\uff0c\u6761\u4ef6\u5373\u4e3a\u4e24\u70b9\u6709\u76f8\u540c\u8d28\u56e0\u5b50\u3002\u53c8\u56e0\u4e3a\u6bcf\u4e2a\u8d28\u56e0\u5b50\u4e4b\u95f4\u662f\u72ec\u7acb\u7684\uff0c\u6240\u4ee5\u8981\u7528 $6$ \u500d\u7684\u6570\u7ec4\u6765\u8bb0\u5f55\u4e0d\u540c\u8d28\u56e0\u5b50\u7684\u60c5\u51b5\u3002 \n\n$\\Large\\mathscr{Part\\,\\,2\\;\\;}\\text{Code}$\n\n```cpp\n#include <cstdio>\n#include <vector>\nusing namespace std;\nconst int N=2e5+5,V=2e5+5,M=10;\nint n,u,v,tot,ans,isnp[V],prm[V],nxt[V],val[N][M],f[N][M]; // f[x][j] \u8868\u793a\u8d28\u56e0\u5b50\u4e3a val[x][j] \u65f6\u4ee5 x \u4e3a\u6839\u6700\u5927\u7684\u6df1\u5ea6\n// nxt[x] \u8868\u793a x \u7684\u6700\u5c0f\u8d28\u56e0\u5b50\uff0cval[x][0] \u8868\u793a x \u7684\u8d28\u56e0\u5b50\u4e2a\u6570\uff0cval[x] \u50a8\u5b58 x \u7684\u8d28\u56e0\u5b50\nvector<int> vec[N];\nvoid pre(){\n\tisnp[1]=1;\n\tfor(int i=2; i<V; i++){\n\t\tif(!isnp[i]) prm[++tot]=i,nxt[i]=i;\n\t\tfor(int j=1; j<=tot&&1LL*prm[j]*i<V; j++){\n\t\t\tisnp[i*prm[j]]=1;\n\t\t\tnxt[i*prm[j]]=prm[j];\n\t\t\tif(!(i%prm[j])) break;\n\t\t}\n\t}\n}\nvoid dfs(int x,int fa){\n\tfor(int j=1; j<=val[x][0]; j++) f[x][j]=1;\n\tfor(int i=0; i<vec[x].size(); i++){\n\t\tint y=vec[x][i];\n\t\tif(y==fa) continue;\n\t\tdfs(y,x);\n\t\tfor(int j=1,k=1; j<=val[x][0]; j++){\n\t\t\twhile(val[y][k]<val[x][j]&&k<val[y][0]) ++k;\n\t\t\tif(val[y][k]==val[x][j]){\n\t\t\t\tans=max(ans,f[x][j]+f[y][k]);\n\t\t\t\tf[x][j]=max(f[x][j],f[y][k]+1);\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tpre();\n\tscanf(\"%d\",&n);\n\tfor(int i=1; i<=n; i++){\n\t\tscanf(\"%d\",&u);\n\t\tif(u!=1) ans=1;\n\t\twhile(u!=1){\n\t\t\twhile(nxt[u]==nxt[u/nxt[u]]) u/=nxt[u];\n\t\t\tval[i][++val[i][0]]=nxt[u];\n\t\t\tu/=nxt[u];\n\t\t}\n\t}\n\tfor(int i=1; i<n; i++){\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tvec[u].push_back(v);\n\t\tvec[v].push_back(u);\n\t}\n\tdfs(1,0);\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(n)$\u3002",
        "postTime": 1628088680,
        "uid": 238421,
        "name": "A_Pikachu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1101D \u3010GCD Counting\u3011"
    },
    {
        "content": "\u8003\u70b9\uff1a\u6811\u5f62Dp\u3001\u8d28\u56e0\u6570\u5206\u89e3\n\n__\u5904\u7406\u94fe $(u,v)$ \u7684\u95ee\u9898\u4e00\u822c\u662f\u62c6\u6210 $(u,lca_{u,v})$ \u548c $(v,lca_{u,v})$ \u89e3\u51b3__ \uff0c\u56e0\u6b64\u6bcf\u4e00\u4e2a\u70b9\u53ea\u9700\u8981\u8003\u8651\u5176\u5b50\u8282\u70b9\u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u4f7f\u7528\u6811\u5f62DP\u89e3\u51b3\u3002\n\n\u7531\u4e8e\u6700\u5927\u516c\u7ea6\u6570\u53ea\u4e0e\u70b9\u6743\u7684\u6240\u6709\u8d28\u56e0\u5b50\u6709\u5173\uff0c\u4e14\u70b9\u6743\u6700\u5927\u53ea\u6709 $2\\times 10^5$ \uff0c\u62c6\u6210\u8d28\u56e0\u5b50\u4e4b\u540e\u5176\u4e2a\u6570\u4ec5\u6709\u4e0d\u5230 $10$ \u4e2a\uff0c\u540c\u65f6\u5176\u5bf9\u7b54\u6848\u6709\u5f71\u54cd~~\u5e9f\u8bdd~~ \uff0c\u53ef\u4ee5\u8003\u8651\u5c06\u6bcf\u4e2a\u6570\u8d28\u56e0\u6570\u5206\u89e3\uff0c\u5e76\u5c06\u5206\u89e3\u540e\u7684\u8d28\u56e0\u5b50\u4f5c\u4e3aDP\u7684\u4e00\u7ef4\u3002\n\n\u8bbe $f_{u,i}$ \u8868\u793a\u70b9 $u$ \u7b2c $i$ \u4e2a\u8d28\u56e0\u5b50\u4f5c\u4e3a __\u4ee5$u$\u4e3a\u8d77\u70b9\u7684__ \u94fe\u4e0a\u6240\u6709\u70b9\u6743\u7684\u516c\u7ea6\u6570\u65f6\u94fe\u7684\u6700\u5927\u957f\u5ea6\uff08\u6ce8\u610f\u8fd9\u91cc\u4e0d\u662f\u6700\u5927\u516c\u7ea6\u6570\uff09\uff0c\u5f88\u5bb9\u6613\u5c31\u53ef\u4ee5\u63a8\u51fa\u65b9\u7a0b\uff1a\n\n$$f_{u,i}=\\max\\limits_{v\\in son_u,fac_{u,i}=fac_{v,j}}(f_{v,j})+1$$\n\n\u8fd9\u91cc\u7684 $fac_{i,j}$ \u8868\u793a\u70b9 $i$ \u7684\u7b2c $j$ \u4e2a\u8d28\u56e0\u5b50\u3002\n\n\u7136\u540e\uff0c\u56de\u5230\u4e00\u5f00\u59cb\u65f6\u7684\u62c6\u94fe\u64cd\u4f5c\uff0c\u73b0\u5728\u5408\u5e76\uff0c\u5c06\u540c\u4e00\u4e2a\u70b9\u7684 $f$ \u5408\u5e76\u5728\u4e00\u8d77\u3002\u5b9a\u4e49 $g_{u,i}$ \u8868\u793a\u4ee5 $u$ \u4e3a\u9876\u70b9\u3001\u6240\u6709\u70b9\u6743\u7684\u56e0\u6570\u4e3a $i$ \u7684\u6700\u957f\u94fe\uff0c\u4e5f\u5c31\u662f\u7b54\u6848\uff0c\u6709\uff1a\n\n$$g_{u,i}=\\max\\limits_{v,w\\in son_u,fac_{v,j}=fac_{w,k}=fac_{u,i}}(f_v,j+f_w,k)$$\n\n\u770b\u7740\u5f88\u590d\u6742\uff0c\u4f46\u5b9e\u9645\u4e0a\u548c\u7b2c\u4e00\u4e2a\u5f0f\u5b50\u6709\u5f88\u591a\u76f8\u4f3c\u4e4b\u5904\uff0c\u53ef\u4ee5\u540c\u65f6\u8f6c\u79fb\u3002\u5177\u4f53\u53ef\u4ee5\u89c1\u4ee3\u7801\u3002\n\n```cpp\n//\u71ca\uff0c\u6211\u7684\u71ca~\n#include<cstdio>\n#include<iomanip>\n\nusing namespace std;\nconst int N=2e5+50,M=34;\nstruct edge{\n\tint to,nxt;\n}a[N<<1];\nint head[N],f[N][M],g[N][M],cnt,n,ans;\nint Fac[N][M],Cnt[N],w[N];\ninline int Max(int a,int b){return a>b?a:b;}\nvoid Div(int x,int pos)//\u8d28\u56e0\u6570\u5206\u89e3 \n{\n\tfor(int i=2;i*i<=x;i++){\n\t\tif(x%i==0) Fac[pos][++Cnt[pos]]=i;\n\t\twhile(x%i==0) x/=i;\n\t}\n\tif(x>1) Fac[pos][++Cnt[pos]]=x;\n}\nvoid add(int u,int v)\n{\n\tcnt++;\n\ta[cnt].to=v;\n\ta[cnt].nxt=head[u];\n\thead[u]=cnt;\n}\nvoid DFS(int u,int fa)\n{\n\tfor(int k=head[u];k;k=a[k].nxt){\n\t\tint v=a[k].to;\n\t\tif(v!=fa){\n\t\t\tDFS(v,u);\n\t\t\tfor(int i=1;i<=Cnt[u];i++){\n\t\t\t\tfor(int j=1;j<=Cnt[v];j++){\n\t\t\t\t\tif(Fac[u][i]==Fac[v][j]){\n\t\t\t\t\t\tg[u][i]=Max(g[u][i],f[u][i]+f[v][j]);\n\t\t\t\t\t\t//\u8fd9\u4e2a\u5730\u65b9\uff0c\u662f\u5728\u8f6c\u79fb\u5f53\u524d\u7684 $f_{u,i}$ \u4e4b\u524d\u3002\n\t\t\t\t\t\t//\u6b64\u65f6 $f_{u,i}$ \u5df2\u7ecf\u4ee3\u8868\u4e86\u6b64\u524d\u8bbf\u95ee\u8fc7\u7684\u6240\u6709 u \u7684\u513f\u5b50\u4e2d\u7b26\u5408\u8981\u6c42\u4e14\u6700\u957f\u7684\u94fe\n\t\t\t\t\t\t//\u53ea\u9700\u8981\u4e0e\u5f53\u524d\u6240\u8f6c\u79fb\u7684 f[v][j]\u6c42\u548c\u5373\u53ef  \n\t\t\t\t\t\t\n\t\t\t\t\t\t//\u5982\u679c\u4e0d\u61c2\u7684\u8bdd\uff0c\u53ef\u4ee5\u7c7b\u6bd4\u4e00\u4e0b\u6c42\u4e00\u4e2a\u5e8f\u5217\u4e2d\u6700\u5927\u503c\u548c\u6b21\u5927\u503c\u7684\u548c \n\t\t\t\t\t\tf[u][i]=Max(f[u][i],f[v][j]+1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&w[i]);\n\t\tDiv(w[i],i);\n\t}\n\tint u,v;\n\tfor(int i=1;i<=n-1;i++){\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tadd(u,v),add(v,u);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=Cnt[i];j++) f[i][j]=g[i][j]=1;\n\t}//\u4e00\u5f00\u59cb\u6bcf\u4e00\u4e2a\u70b9\u90fd\u662f\u4e00\u6761\u94fe \n\tDFS(1,0);\n\t\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=Cnt[i];j++) ans=Max(ans,g[i][j]);\n\t\t//\u8fd9\u91cc\u6ce8\u610f\u6bcf\u4e00\u4e2a\u70b9\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u94fe\u7684\u9876\u70b9 \n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\n\u8bb2\u5b8c\u529bOrz",
        "postTime": 1657109903,
        "uid": 67493,
        "name": "Higanbana_",
        "ccfLevel": 5,
        "title": "CF1101D GCD Counting \u9898\u89e3"
    },
    {
        "content": "#### \u524d\u7f6e\u77e5\u8bc6\uff1a\n\n\u7d20\u6570\u5224\u65ad\uff08$Miller Rabin$ \u7d20\u6570\u63a2\u6d4b\u53ef\u7528\u53ef\u4e0d\u7528\u5427\uff0c\u56e0\u4e3a\u672c\u9898\u6570\u636e\u6ca1\u6709\u9488\u5bf9\u8d28\u56e0\u6570\u5206\u89e3\uff09 + $DFS$\u6c42\u76f4\u5f84\n\n#### \u5177\u4f53\u505a\u6cd5\n\n\u89c2\u5bdf\u9898\u76ee\uff0c\u53d1\u73b0\u9898\u76ee\u8981\u6c42\u6211\u4eec\u6c42 $gcd$ \u4e0d\u7b49\u4e8e $1$ \u7684\u4e00\u6761\u6700\u957f\u94fe\u3002\n\n\u90a3\u4e48\u5982\u679c\u8fd9\u6761\u94fe\u4e0a\u6240\u6709\u7684\u8282\u70b9\u7684 $gcd$ \u90fd\u4e0d\u4e3a $1$\uff0c\u90a3\u4e48\u5b83\u4eec\u80af\u5b9a\u6709\u7740\u81f3\u5c11\u4e00\u4e2a\u76f8\u540c\u7684\u8d28\u56e0\u5b50\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8003\u8651\u5c06\u62e5\u6709\u76f8\u540c\u8d28\u56e0\u5b50\u7684\u8282\u70b9\u653e\u5728\u4e00\u8d77\u5904\u7406\uff0c\u7136\u540e\u5bf9\u4e8e\u5177\u6709\u76f8\u540c\u8d28\u56e0\u5b50\u7684\u8282\u70b9\u4e2d\u6c42\u4e00\u6761\u6700\u957f\u94fe\u5c31\u884c\u4e86\u3002\n\n\u53e6\u5916\u8fd9\u4e2a\u9898\u8981\u7279\u5224\u5168\u90e8\u90fd\u662f $1$ \u7684\u60c5\u51b5\uff0c\u8fd9\u6837\u7684\u8bdd\u7b54\u6848\u5c31\u662f $0$\u3002\n\n\u6c42\u6700\u957f\u94fe\u7684\u8fc7\u7a0b\u7528 $DFS$ \u5b9e\u73b0\u5373\u53ef\u3002\n\n\u4e8e\u662f\u8fd9\u4e2a\u9898\u76ee\u7684\u89e3\u51b3\u6d41\u7a0b\u662f\u8fd9\u6837\u5b50\u7684\uff1a\n```plain\n\n\u5bf9\u4e8e\u6240\u6709\u7684\u7ed9\u51fa\u7684\u8282\u70b9\u7684\u6743\u503c\u8fdb\u884c\u8d28\u56e0\u6570\u5206\u89e3\u3002\n\u6709\u7740\u76f8\u540c\u8d28\u56e0\u5b50\u7684\u6570\u6211\u4eec\u5c31\u653e\u5165 map \u4e2d\uff0c\u5b9a\u4e49\u4e00\u4e2a <int,vector<int> > \u7c7b\u578b\u7684 map \u5373\u53ef\u3002\n\n\u7136\u540e\u904d\u5386\u6240\u6709\u51fa\u73b0\u8fc7\u7684\u8d28\u56e0\u5b50\uff08\u53ef\u4ee5\u7528\u53e6\u5916\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\uff0c\u5e76\u4e14\u7528 map \u6765\u9632\u6b62\u91cd\u590d\u5165\u961f\uff09\n\n\u5bf9\u4e8e\u6709\u7740\u76f8\u540c\u8d28\u56e0\u5b50\u7684\u6240\u6709\u8282\u70b9\u5404\u6c42\u6700\u957f\u94fe\u3002\n\n\u6c42\u51fa\u6700\u5927\u503c\u5373\u53ef\u3002\n```\n\n\u8fd9\u4e2a\u9898\u76ee\u7684\u590d\u6742\u5ea6\u770b\u4f3c\u65e0\u6cd5\u4fdd\u8bc1\u3002\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u5206\u6790\u4e00\u4e0b\u8fd9\u9053\u9898\u76ee\u7684\u6700\u574f\u60c5\u51b5\u4e0b\u7684\u590d\u6742\u5ea6\u3002\n\n\u6211\u4eec\u7684\u4e3b\u8981\u76ee\u6807\u5c31\u662f\u8981\u4f7f\u5f97 $map$ \u4e2d\u8bb0\u5f55\u7684\u8282\u70b9\u6700\u591a\u3002\uff08\u56e0\u4e3a\u5bf9\u4e8e $map$ \u4e2d\u7684\u8282\u70b9\u6211\u4eec\u6bcf\u4e00\u4e2a\u90fd\u4f1a\u8bbf\u95ee\u4e00\u6b21\uff09\n\n\u90a3\u4e48\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8e\u540c\u4e00\u4e2a\u6570\uff0c\u6211\u4eec\u603b\u662f\u5e0c\u671b\u5b83\u88ab\u5206\u5728\u4e0d\u540c\u7684\u7ec4\u91cc\u9762\uff0c\u8fd9\u6837\u5b50\u5c31\u80fd\u4f7f\u5f97\u8fd9\u4e2a\u7a0b\u5e8f\u88ab\u5361(bushi\u3002\n\n\u4f46\u662f\u5bf9\u4e8e\u4e00\u4e2a $2e5$ \u4ee5\u5185\u7684\u6570\uff0c\u5b83\u6700\u591a\u6709 $6$ \u4e2a**\u4e0d\u540c** \u7684\u8d28\u56e0\u5b50\uff0c\u6240\u4ee5\u6574\u4e2a $map$ \u4e2d\u7684\u8282\u70b9\u6700\u591a\u662f $n * 6$ \u4e2a\uff0c\u5e76\u4e14\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u4f7f\u5f97\u8fd9\u4e2a\u7a0b\u5e8f\u8dd1\u6ee1\u7684\u90a3\u4e00\u4e2a\u6743\u503c\uff1a $180180 = 2^2 * 3^2 * 5 * 7 * 11 * 13$\n\n\u7b14\u8005\u95f2\u7740\u65e0\u804a\u5c31\u5199\u4e86\u4e00\u4e2a $Miller-Rabin$ \u4ee5\u5e94\u5bf9 $a_i$ \u66f4\u5927\u7684\u60c5\u51b5.....\n\n\u4e8e\u662f\u8fd9\u4e2a\u9898\u76ee\u7684\u6700\u574f\u590d\u6742\u5ea6\u5927\u6982\u5c31\u662f $O(n * 6 * log(n))$\uff0c\u975e\u6781\u9650\u60c5\u51b5\u590d\u6742\u5ea6\u5927\u6982\u662f $O(nlogn)$ ($log$ \u662f\u6765\u81ea $map$ \u7684)\u3002\n\n#### Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 2e5 + 50;\n#define int long long\nint n,start[MAXN], data[MAXN];\nint Prime[MAXN],tot = 0 ,cnt = 0, book[MAXN];\nint vis[MAXN],D[MAXN * 11],dis[MAXN] , tail = 0 , q[MAXN];\nint Ans = 1,Mod,A[11] = {0,2,3,5,7,11,13,17,19,23,61}; // A\u5c31\u662fMiller Rabin \u63a2\u6d4b\u7684\u5e95\u6570\nunordered_map <int,vector<int> > mp;\nunordered_map <int,int > M;//\u8bb0\u5f55\u54ea\u4e00\u4e9b\u8d28\u56e0\u5b50\u51fa\u73b0\u8fc7\n  \nstruct Edge {\n    int next,to;\n    void add(int from,int To) {to = To , next = start[from], start[from] = tot;}\n} edge[MAXN * 2];\n  \ninline int read() {\n    int x = 0 , flag = 1;\n    char ch = getchar();\n    for( ; ch > '9' || ch < '0' ; ch = getchar()) if(ch == '-') flag = -1;\n    for( ; ch >= '0' && ch <= '9' ; ch = getchar()) x = (x << 3) + (x << 1) + ch - '0';\n    return x * flag;\n}\n  \nvoid GetPrime() {//\u7d20\u6570\u7b5b\u9009\n    for(int i = 2 ; i <= 5e4 ; i ++) {\n        if(!book[i]) Prime[++cnt] = i;\n        for(int j = 1 ; j <= cnt ; j ++) {\n            if(Prime[j] * i > 5e4) break;\n            book[Prime[j] * i] = 1;\n            if(i % Prime[j] == 0) break;\n        }\n    }\n    return ;\n}\n  \nlong long quickpower(long long x,long long y) {\n    long long ans = 1 , op = x;\n    while(y) {\n        if(y & 1ll) ans *= op , ans %= Mod;\n        op *= op , op %= Mod;\n        y >>= 1ll;\n    }\n    return ans;\n}\n  \nint Miller_Rabin(int x) {//\u7d20\u6570\u63a2\u6d4b\u7b97\u6cd5\n    Mod = x;\n    int s = 0;\n    if(x == 2) return 1;\n    if(x % 2 == 0 || x == 1) return 0;\n    int p = x - 1 ;\n    while(p % 2 == 0) p/= 2 , s ++;\n    for(int j = 1 ; j <= 5 ; j ++) {\n        long long B = quickpower(A[j] , p);\n        for(int i = 1 ; i <= s ; i ++) {\n            long long K = (B * B) % Mod;\n            if(K == 1ll && B != 1ll && B != Mod - 1) return 0;//\u5982\u679c\u4e8c\u6b21\u63a2\u6d4b\u53d1\u73b0\u8fd9\u4e2a\u4e0d\u662f\u8d28\u6570\n            B = K;\n        }\n        if(B != 1ll) return 0;//\u5229\u7528\u8d39\u9a6c\u5c0f\u5b9a\u7406\u5224\u65ad\n    }\n    return 1;//\u63a2\u6d4b\u6b63\u5e38\u7ed3\u675f\n}\n  \nvoid DFS(int x,int P,int from) {\n    vis[x] = 1;//\u5904\u7406\u4e0e x \u70b9\u5728\u540c\u4e00\u4e2a\u8fde\u901a\u5757\u7684\u60c5\u51b5\u3002\n    q[++tail] = x;\n    dis[x] = dis[from] + 1;\n    for(int i = start[x] ; i ; i = edge[i].next) {\n        int to = edge[i].to;\n        if(to == from) continue;\n        if(data[to] % P == 0)\n        DFS(to,P,x);\n    }\n    return ;\n}\n  \nint solve(int x,int P) {//\u7b14\u8005\u91c7\u7528\u4e24\u6b21DFS\u6c42\u76f4\u5f84\u7684\u65b9\u6cd5\u6765\u6c42\u51fa\u6700\u957f\u94fe\n    tail = 0;\n    int ans = 0;\n    vis[x] = 1;\n    DFS(x,P,0);//\u8fdb\u884c\u4e00\u6b21DFS\u6c42\u51fa\u79bb\u5f53\u524d\u70b9\u6700\u8fdc\u7684\u70b9P\n    int f = 0;\n    for(int i = 1 ; i <= tail ; i ++)\n        if(dis[q[i]] > dis[f]) f = q[i];//\u627e\u51fa\u79bb\u81ea\u5df1\u6700\u8fdc\u7684\n        for(int i = 1 ; i <= tail ; i ++) dis[q[i]] = 0;\n    tail = 0;\n    DFS(f,P,0);//\u7b2c\u4e8c\u6b21DFS\n    f = 0;\n    for(int i = 1 ; i <= tail ; i ++)\n        if(dis[q[i]] > dis[f]) f = q[i];//\u627e\u51fa\u79bbP\u6700\u8fdc\u7684\u70b9Q\n    return dis[f];//\u8fd9\u4e2a\u8fde\u901a\u5757\u7684\u6700\u957f\u94fe\n}\n  \nsigned main() {\n    n = read();\n    GetPrime();\n    memset(data,0,sizeof(data));\n    for(int i = 1 ; i <= n ; i ++) data[i] = read();\n    for(int i = 1 ; i <= n - 1; i ++) {\n        int u = read() , v = read();\n        edge[++tot].add(u,v);\n        edge[++tot].add(v,u);\n    }\n    cnt = 0;\n    for(int i = 1 ; i <= n ; i ++) {\n        int x = data[i];\n        int p = Miller_Rabin(x);\n        if(p == 1) {//\u5982\u679c\u662f\u8d28\u6570\u5c31\u76f4\u63a5\u5165\u5217\n            mp[x].push_back(i);\n            if(M[x] != 1) M[x] = 1 , D[++cnt] = x;//\u65b0\u51fa\u73b0\u7684\u8d28\u56e0\u5b50\n            continue;\n        }\n        for(int j = 1 ; Prime[j] * Prime[j] <= x ; j ++)\n            while(x % Prime[j] == 0) { //\u5206\u89e3\u8d28\u56e0\u6570\n                x /= Prime[j] , mp[Prime[j]].push_back(i);\n                if(M[Prime[j]] == 0) M[Prime[j]] = 1 , D[++cnt] = Prime[j];\n            }\n        if(x != 1) {\n            mp[x].push_back(i);\n            if(M[x] != 1) M[x] = 1 , D[++cnt] = x;\n        }\n    }\n    for(int i = 1 ; i <= cnt ; i ++) {\n        int len = mp[D[i]].size();\n        for(int j = 0 ; j < len ; j ++)\n        if(!vis[mp[D[i]][j]]) Ans = max (Ans , solve(mp[D[i]][j],D[i])) ;//\u8fd8\u6ca1\u88ab\u904d\u5386\u7684\u8bdd\u5c31\u904d\u5386\n        for(int j = 0 ; j < len ; j ++) vis[mp[D[i]][j]] = 0 , dis[mp[D[i]][j]] = 0;\n    }\n    for(int i = 1 ; i <= n ; i ++)\n        if(data[i] != 1)//\u7279\u5224\u662f\u5426\u5168\u90e8\u4e3a1\n        {cout << Ans; return 0;}\n    cout << 0;\n    return 0;\n}\n```",
        "postTime": 1612486555,
        "uid": 67817,
        "name": "MuYC",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1101D \u3010GCD Counting\u3011"
    }
]