[
    {
        "content": "\u7531\u4e8e\u53ea\u6709 $0$ ~ $9$ \u9700\u8981\u5206\u89e3\uff0c\u8003\u8651\u5bf9\u6bcf\u4e2a\u6570\u6240\u80fd\u5206\u89e3\u51fa\u7684\u9636\u4e58\u6253\u8868\u3002\n\n\u4ee5 $9$ \u4e3a\u4f8b\uff0c\u8003\u8651\u5bf9 $9!$ \u5206\u89e3\u8d28\u56e0\u6570\uff0c\u5f97\u5230 $9! = 2^7 \\times 3^4 \\times 5 \\times 7$\u3002\u663e\u7136\u5730\uff0c\u9700\u8981\u4ece\u5176\u4e2d\u6700\u5927\u7684\u8d28\u6570\u5f00\u59cb\u5206\u89e3\u3002\u5206\u89e3\u51fa $7!$ \u540e\uff0c\u8fd8\u5269 $2^3 \\times 3^2$\u3002\u7531\u4e8e\u5206\u89e3\u5f0f\u91cc\u6709 $2$ \u4e2a $3$\uff0c\u8003\u8651\u5206\u89e3\u51fa $(3!)^2$\uff0c\u8fd8\u5269 $2$\u3002\u6b64\u65f6\u518d\u5206\u89e3\u51fa\u4e00\u4e2a $2!$ \u5373\u53ef\u3002\n\n\u4ee5\u6b64\u7c7b\u63a8\uff0c\u6bcf\u4e2a\u6b64\u8303\u56f4\u5185\u7684\u6570\u5747\u53ef\u5206\u89e3\u3002~~\u5982\u679c\u4e0d\u60f3\u81ea\u5df1\u63a8\uff0c\u53ef\u4ee5\u53c2\u8003\u6211\u7684\u4ee3\u7801\u3002~~\n\n\u6700\u540e\u5c06\u6bcf\u4e2a\u9636\u4e58\u5206\u89e3\u51fa\u7684\u6240\u6709\u9636\u4e58\u4ece\u5927\u5230\u5c0f\u8f93\u51fa\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <stdio.h>\n\nint cnt[17];\n\nint main(){\n\tint n;\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; i++){\n\t\tint a;\n\t\tscanf(\"%1d\", &a);\n\t\tif (a == 2){\n\t\t\tcnt[2]++;\n\t\t} else if (a == 3){\n\t\t\tcnt[3]++;\n\t\t} else if (a == 4){\n\t\t\tcnt[2] += 2;\n\t\t\tcnt[3]++;\n\t\t} else if (a == 5){\n\t\t\tcnt[5]++;\n\t\t} else if (a == 6){\n\t\t\tcnt[3]++;\n\t\t\tcnt[5]++;\n\t\t} else if (a == 7){\n\t\t\tcnt[7]++;\n\t\t} else if (a == 8){\n\t\t\tcnt[2] += 3;\n\t\t\tcnt[7]++;\n\t\t} else if (a == 9){\n\t\t\tcnt[2]++;\n\t\t\tcnt[3] += 2;\n\t\t\tcnt[7]++;\n\t\t}\n\t}\n\tfor (int i = 1; i <= cnt[7]; i++){\n\t\tprintf(\"7\");\n\t}\n\tfor (int i = 1; i <= cnt[5]; i++){\n\t\tprintf(\"5\");\n\t}\n\tfor (int i = 1; i <= cnt[3]; i++){\n\t\tprintf(\"3\");\n\t}\n\tfor (int i = 1; i <= cnt[2]; i++){\n\t\tprintf(\"2\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1624071642,
        "uid": 201007,
        "name": "Leasier",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF515C \u3010Drazil and Factorial\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u7528\u4e00\u79cd\u5947\u602a\u7684\u65b9\u6cd5\u8fc7\u4e86\u8fd9\u9053\u9898\uff0c\u672c\u8d28\u4e0a\u662f\u901a\u8fc7\u627e\u89c4\u5f8b\u6765\u4f18\u5316dp  \n\u5e0c\u671b\u8fd9\u7bc7\u9898\u89e3\u80fd\u8ba9\u50cf\u6211\u8fd9\u6837\u7684\u849f\u84bb\u4e5f\u80fd\u77e5\u9053\u662f\u600e\u4e48\u53d1\u73b0\u89c4\u5f8b\u7684  \n\n\n------------\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\u7684\u9636\u4e58\uff0c\u90fd\u53ef\u4ee5\u76f4\u63a5\u5bf9\u5176\u8d28\u56e0\u6570\u5206\u89e3~~\u5e94\u8be5\u90fd\u80fd\u60f3\u5230\u5427~~  \n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5bf9\u8bfb\u5165\u7684x\u5f97\u5230\u4e0b\u9762\u8fd9\u6837\u4e00\u4e2a\u6570\u7ec4  \n```cpp\nwhile(x){\n        switch (x%10)\n        {\n            case 1:\n            break;\n            case 2:\n            num[2]++;\n            break;\n            case 3:\n            num[2]++;\n            num[3]++;\n            break;\n            case 4:\n            num[2]+=3;\n            num[3]++;\n            break;\n            case 5:\n            num[2]+=3;\n            num[3]++;\n            num[5]++;\n            break;\n            case 6:\n            num[2]+=4;\n            num[3]+=2;\n            num[5]++;\n            break;\n            case 7:\n            num[2]+=4;\n            num[3]+=2;\n            num[5]++;\n            num[7]++;\n            break;\n            case 8:\n            num[2]+=7;\n            num[3]+=2;\n            num[5]++;\n            num[7]++;\n            break;\n            case 9:\n            num[2]+=7;\n            num[3]+=4;\n            num[5]++;\n            num[7]++;\n            break;\n        }\n        x/=10;\n    }\n```\n~~\u8fd9\u9898\u5b8c\u5168\u6ca1\u6709\u7528\u5230n~~  \n\u5176\u5b9e\u76f4\u63a5\u6539\u79f0num[1,2,3,4]\u4f1a\u5feb\u5f88\u591a\uff0c\u5185\u5b58\u5730\u5740\u4e0a\u76f4\u63a5\u662f\u8fde\u7eed\u7684\uff0c\u8bbf\u95ee\u4e5f\u4f1a\u5feb\u4e00\u4e9b\uff0c\u4f46\u662f\u75282\uff0c3\uff0c5\uff0c7\u6bd4\u8f83\u76f4\u89c2  \n\n\u8bbe$f[x][y][z][v]$\u8868\u793a\u6700\u5927\u7684\u6709x\u4e2a2\uff0cy\u4e2a3\uff0cz\u4e2a5,v\u4e2a\u4e03\u6784\u6210\u7684F(a)  \n\u6bcf\u6b21\u5f80\u524d\u52a0\u5165\u4efb\u610f\u4e00\u4e2a\u6570j\uff0c\u8bbe\u80fd\u591a\u589e\u52a0now[2,3,5,7]\u4e2a\u56e0\u6570  \n\u4e8e\u662f\u53ef\u4ee5\u5f97\u5230\u8f6c\u79fb\u65b9\u7a0b  \n$f[x][y][z][v]=max(f[x][y][z][v],j+f[x-now[2]][y-now[3]][z-now[5]][v-now[7]])$  \n  \n\u8fd9\u91cc\u7684+\u6307\u7684\u662f\u6570\u7801\u4e0a\u7684\u52a0\uff0c\u5c31\u662f\u628a\u4e00\u4e2a\u6570xxxyyy\u53d8\u6210jxxxyyy  \n\u800c\u5b57\u7b26\u4e32\u4e2d\u6709\u8fd9\u6837\u4e00\u4e2a\u6027\u8d28\uff1aa+b=ab  \n\u7528string\u7c7b\u578b\u5c31\u53ef\u4ee5\u5f88\u8f7b\u677e\u7684\u5b9e\u73b0\u4e0a\u9762\u7684\u8f6c\u79fb\uff01    \n\u7528\u4ee3\u7801\u5b9e\u73b0\u5373\u53ef  \n```cpp\n for(ri i=1;i<=num[2];++i){//\u6700\u591a\u628a\u5b83\u53d8\u62102222222...\u7684\u5f62\u5f0f\uff0c\u6240\u4ee5\u679a\u4e3enum[2]\u6b21\n        for(ri j=2;j<=9;++j){\n            if(j!=2&&j!=3&&j!=5&&j!=7) continue;\n            memset(now,0,sizeof(now));\n            switch (j)\n            {\n                case 1:\n                break;\n                case 2:\n                now[2]=1;\n                break;\n                case 3:\n                now[2]=1;\n                now[3]=1;\n                break;\n                case 4:\n                now[2]=3;\n                now[3]=1;\n                break;\n                case 5:\n                now[2]=3;\n                now[3]=1;\n                now[5]=1;\n                break;\n                case 6:\n                now[2]=4;\n                now[3]=2;\n                now[5]=1;\n                break;\n                case 7:\n                now[2]=4;\n                now[3]=2;\n                now[5]=1;\n                now[7]=1;\n                break;\n                case 8:\n                now[2]=7;\n                now[3]=2;\n                now[5]=1;\n                now[7]=1;\n                break;\n                case 9:\n                now[2]=7;\n                now[3]=4;\n                now[5]=1;\n                now[7]=1;\n                break;\n            }\n            for(ri x=min(7*(i-1)+now[2],num[2]);x>=now[2];--x){\n                for(ri y=min(4*(i-1)+now[3],num[3]);y>=now[3];--y){\n                    for (ri   z = min(i-1+now[5],num[5]);z >= now[5]; --z)\n                    {\n                        for (ri v = min(i-1+now[7],num[7]); v >= now[7]; --v)\n                        {\n                            if(f[x-now[2]][y-now[3]][z-now[5]][v-now[7]].length()>=i-1){//\u53ef\u4ee5\u628a\u4e00\u4e9b\u4e0d\u5408\u6cd5\u7684\u201c\u201d\u7ed9\u7b5b\u6389\uff0c\u5176\u5b9e\u4e0d\u52a0\u4e5f\u884c  \n                                    f[x][y][z][v]=mx((char)(j+'0')+f[x-now[2]][y-now[3]][z-now[5]][v-now[7]],f[x][y][z][v]);    \n                            }\n                        }                        \n                    }\n                }\n            }\n        }\n    }\n```\n\u6ce8\u610f\u6b64\u5904f\u6211\u662f\u7528string\u7c7b\u578b\u7684\uff0c\u6bd4\u8f83\u4e24\u4e2astring\u5927\u5c0f\u7684\u51fd\u6570\u8981\u81ea\u5df1\u5199\u4e00\u4e0b  \n```cpp\nil string mx(string a,string b){\n    if(a.length()>b.length()) return a;\n    else if(a.length()<b.length()) return b;\n    for(ri i=0;i<=a.length();++i){\n        if(a[i]>b[i]) return a;\n        else if(a[i]<b[i]) return b;\n    }\n    \n```\n\n------------\n\u8fd9\u5c31\u5b8c\u4e86\uff1f  \n\u5f53\u7136\u6ca1\u6709  \n\u89c2\u5bdf\u6700\u6781\u7aef\u7684\u60c5\u51b5999999999999999,\u5b83\u6700\u540e\u7684\u7ed3\u679c\u7684\u4f4d\u6570\u662f60\u4f4d\u5de6\u53f3\uff0c\u4e00\u5171\u6709105\u4e2ax\uff0c60\u4e2ay\uff0c15\u4e2az\u548c15\u4e2av\uff0c\u52a0\u4e0a\u6bcf\u6b21\u90fd\u8981\u679a\u4e3e2\uff5e9\u7684\u6570\u5b57  \n\u5f97\u5230\u4e86$O(60*60*105*15*15*8)=O(680400000)$,\u663e\u7136\u4f1aT\uff0c\u5b9e\u6d4b\u53ea\u80fd\u8fc7\u524d15\u4e2a\u70b9  \n\u4e8e\u662f\u5f00\u59cb\u8fdb\u5165\u6b63\u9898\u5982\u4f55\u4f18\u5316  \n\u9996\u5148\u901a\u8fc7\u6d4b\u8bd5\u53d1\u73b0\u6700\u5916\u5c42\u7684for\u5728\u5bf9\u6781\u9650\u6570\u636e999999999999999\u53ea\u8981\u5faa\u73af\u4e09\u5341\u6b21\u5c31\u53ef\u4ee5\u5f97\u5230\u7ed3\u679c\u4e86\uff0c\u4e8e\u662f\u628a\u6700\u5916\u5c42\u7684\u5faa\u73af\u6b21\u6570\u6539\u79f030\u6b21\uff0c\u6210\u529f\u4f18\u5316\u4e86\u4e00\u534a  \n\n\u662f\u8fdb\u884c\u7b2c\u4e8c\u6b65\u4f18\u5316  \n\u901a\u8fc7\u89c2\u5bdf\u53ef\u4ee5\u53d1\u73b0\uff0c\u51e0\u7ec4\u6d4b\u8bd5\u51fa\u6765\u7684\u6570\u636e\u7b54\u6848\u90fd\u53ea\u67092\uff0c3\uff0c5\uff0c7  \n\u96be\u9053\u662f\u5de7\u5408\uff1f  \n\u7528\u4e0a\u9762\u7684\u7a0b\u5e8f\u6d4b\u8bd5\uff0c\u53d1\u73b0\u53ef\u4ee54,6,8,9\u90fd\u662f\u53ef\u4ee5\u8f6c\u6362\u62102,3,5,7\u7684  \n9 7332  \n8 7222  \n6 53  \n4 322  \n\u800c2\uff0c3\uff0c5\uff0c7\u4e4b\u95f4\u4e0d\u80fd\u8f6c\u6362  \n\u540c\u65f6\u4e5f\u4e0d\u96be\u8bc1\u660e\u5bf9\u4e8e\u4e00\u4e32\u6570\u5b57xxxxxxx4xxxx  \n\u628a\u8fd9\u4e2a4\u53d8\u6210332\u5e76\u4e0d\u5f71\u54cd\u5176\u4ed6\u7684x,\u4e14\u4e00\u5b9a\u80fd\u4f7f\u7ed3\u679c\u589e\u5927  \n\u5bf9\u4e8e\u6570\u7801\u7684\u6392\u5217\u4e5f\u6682\u65f6\u4e0d\u7528\u7ba1\uff0c\u6700\u540e\u53ea\u8981sort\u4e00\u4e0b\u5c31\u80fd\u5f97\u5230\u6700\u5927\u7684\u6392\u5217  \n\u5230\u8fd9\u91cc\u5df2\u7ecf\u53ef\u4ee5\u76f4\u63a5\u7528$O(n)$\u7684\u8d2a\u5fc3A\u6389\u8fd9\u9053\u9898\u4e86  \n~~\u6211\u820d\u4e0d\u5f97\u6211\u7684DP\u554a~~  \n\u4e8e\u662f\u5728\u539fDP\u4e0a\u8fdb\u884c\u4fee\u6539\uff0c\u5176\u5b9e\u6ca1\u6539\u4ec0\u4e48\u4e1c\u897f\uff0c\u53ea\u662f\u628a\u6bcf\u6b21\u679a\u4e3e2~9\u7684j\u6539\u6210\u4e862\uff0c3\uff0c5\uff0c7  \n\u73b0\u5728\u5b83\u7684\u590d\u6742\u5ea6\u6211\u4e5f\u4e0d\u4f1a\u7b97\u4e86,\u770b\u8d77\u6765\u6ca1\u4ec0\u4e48\u53d8\u5316\uff0c\u4f46\u662f\u5b83\u5df2\u7ecf\u53d8\u6210$O(\\texttt{\u80fd\u8fc7})$\u4e86  \n\u5f80\u6bd4\u8f83\u51fd\u6570\u91cc\u52a0\u4e86\u4e00\u4e2acnt\uff0c\u53d1\u73b0\u5bf9\u4e8e999999999999999\uff0c\u53ea\u8981\u6bd4\u8f834037653\u6b21\u5c31\u80fd\u51fa\u7ed3\u679c\u4e86\uff0c\u8fd8\u662f\u86ee\u5feb\u7684  \n\n\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u575a\u6301\u7528DP\uff0c\u90a3\u5f97\u95ee\u4e3a\u4ec0\u4e48\u8fd9\u9898\u4f1a\u51fa\u73b0\u5728\u67d0\u6821DP\u4e13\u9879\u8bad\u7ec3\u4e2d\u4e86\n\n------------\n\u6700\u540e\u8d34\u4e0aAC\u4ee3\u7801  \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define il inline\n#define ri register int\n#define ll long long\nconst bool krimson=true;\nil ll read(){\n    bool f=true;ll x=0;\n    register char ch=getchar();\n    while(ch<'0'||ch>'9') {if(ch=='-') f=false;ch=getchar();}\n    while(ch>='0'&&ch<='9') x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\n    if(f) return x;\n    return ~(--x);\n}\nil void write(const ll &x){if(x>9) write(x/10);putchar(x%10+'0');}\nil int max(const int &a,const int &b){return a>b?a:b;}\nil int min(const int &a,const int &b){return a<b?a:b;}\n/*\n5443200\n*/\nll cnt;\nil string mx(string a,string b){\n    ++cnt;\n    if(a.length()>b.length()) return a;\n    else if(a.length()<b.length()) return b;\n    for(ri i=0;i<=a.length();++i){\n        if(a[i]>b[i]) return a;\n        else if(a[i]<b[i]) return b;\n    }\n    return a;\n}\n/*\n9 7332\n8 7222\n6 53\n4 322\n*/\nstring  f[106][61][16][16];\nll n,x;\nint num[10];\nint main(){\n    // freopen(\"rand.in\",\"r\",stdin);\n    // freopen(\"1.out\",\"w\",stdout);\n    n=read();\n    x=read();\n    while(x){\n        switch (x%10)\n        {\n            case 1:\n            break;\n            case 2:\n            num[2]++;\n            break;\n            case 3:\n            num[2]++;\n            num[3]++;\n            break;\n            case 4:\n            num[2]+=3;\n            num[3]++;\n            break;\n            case 5:\n            num[2]+=3;\n            num[3]++;\n            num[5]++;\n            break;\n            case 6:\n            num[2]+=4;\n            num[3]+=2;\n            num[5]++;\n            break;\n            case 7:\n            num[2]+=4;\n            num[3]+=2;\n            num[5]++;\n            num[7]++;\n            break;\n            case 8:\n            num[2]+=7;\n            num[3]+=2;\n            num[5]++;\n            num[7]++;\n            break;\n            case 9:\n            num[2]+=7;\n            num[3]+=4;\n            num[5]++;\n            num[7]++;\n            break;\n        }\n        x/=10;\n    }\n    int now[10]={};\n    int len=num[7]+num[5]-num[7]+(num[3]-2*num[7]-2*(num[5]-num[7]))+num[2]-num[7]*4-(num[5]-num[7])*3-(num[3]-2*num[7]-2*(num[5]-num[7]));\n    for(ri i=1;i<=min(len,30);++i){\n        for(ri j=2;j<=9;++j){\n            if(j!=2&&j!=3&&j!=5&&j!=7) continue;\n            memset(now,0,sizeof(now));\n            switch (j)\n            {\n                case 1:\n                break;\n                case 2:\n                now[2]=1;\n                break;\n                case 3:\n                now[2]=1;\n                now[3]=1;\n                break;\n                case 4:\n                now[2]=3;\n                now[3]=1;\n                break;\n                case 5:\n                now[2]=3;\n                now[3]=1;\n                now[5]=1;\n                break;\n                case 6:\n                now[2]=4;\n                now[3]=2;\n                now[5]=1;\n                break;\n                case 7:\n                now[2]=4;\n                now[3]=2;\n                now[5]=1;\n                now[7]=1;\n                break;\n                case 8:\n                now[2]=7;\n                now[3]=2;\n                now[5]=1;\n                now[7]=1;\n                break;\n                case 9:\n                now[2]=7;\n                now[3]=4;\n                now[5]=1;\n                now[7]=1;\n                break;\n            }\n            for(ri x=min(7*(i-1)+now[2],num[2]);x>=now[2];--x){\n                for(ri y=min(4*(i-1)+now[3],num[3]);y>=now[3];--y){\n                    for (ri   z = min(i-1+now[5],num[5]);z >= now[5]; --z)\n                    {\n                        for (ri v = min(i-1+now[7],num[7]); v >= now[7]; --v)\n                        {\n                            if(f[x-now[2]][y-now[3]][z-now[5]][v-now[7]].length()>=i-1){\n                                    f[x][y][z][v]=mx((char)(j+'0')+f[x-now[2]][y-now[3]][z-now[5]][v-now[7]],f[x][y][z][v]);    \n                            }\n                        }                        \n                    }\n                }\n            }\n        }\n    }\n    int ans[114514]={};\n    for(ri i=0;i<f[num[2]][num[3]][num[5]][num[7]].length();++i) ans[i+1]=f[num[2]][num[3]][num[5]][num[7]][i]-'0';\n    len=f[num[2]][num[3]][num[5]][num[7]].length();\n    sort(ans+1,ans+len+1);\n    for(ri i=len;i>=1;--i) write(ans[i]);\n    return 0;\n}\n```\n",
        "postTime": 1603809309,
        "uid": 206998,
        "name": "Krimson",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF515C \u3010Drazil and Factorial\u3011"
    },
    {
        "content": "\u770b\u4e86\u4e0b\u9898\u89e3\uff0c\u611f\u89c9\u6211\u7684\u6bd4\u8f83\u597d\u4e00\u4e9b\uff0c\u6211\u7528\u7684\u662fvector,\u7528sort\u7b80\u5355\u4e00\u904d\u8fc7 ~~\uff08\u7f16\u8bd1\u90fd\u4e0d\u5e26\u7f16\u8bd1\u7684~~\n\n\u4ee3\u7801\uff1a\n```\n//#include<bits/stdc++.h>\n\n#include<iostream>\n#include<algorithm>\n#include<stdio.h>\n#include<cstdio>\n\n#include<vector>\n#include<string>\n#include<cmath>\n#include<map>\n\nusing namespace std;\nvector <int> g;\nint main()\n{\n    int n;\n    char c;\n    cin>>n;\n    for(int i=0;i<n;i++)\n    {\n        cin>>c;\n        if(c=='6')\n        {\n            g.push_back(5);//\u624b\u7b97\u7ed3\u679c\n            g.push_back(3);//ctrl+c ctrl+v\u5927fa\u597d\uff01\n        }\n        else if(c=='8')\n        {\n            g.push_back(7);\n            g.push_back(2);\n            g.push_back(2);\n            g.push_back(2);\n        }\n        else if(c=='9')\n        {\n            g.push_back(7);\n            g.push_back(3);\n            g.push_back(3);\n            g.push_back(2);\n        }\n        else if(c=='4')\n        {\n            g.push_back(3);\n            g.push_back(2);\n            g.push_back(2);\n        }\n        else if(c!='0'&&c!='1')//\u5982\u679c\u90fd\u6ca1\u6709\u5c31\u76f4\u63a5\u538b\u8fdb\u53bb\n            g.push_back(c-'0');\n    }\n    sort(g.begin(),g.end());\n    reverse(g.begin(),g.end());\n    for(int i=0;i<g.size();i++)\n        cout<<g[i];\n    return 0;\n}\n```\n\u54e6\u5bf9\u4e86\u524d\u9762``tryrtj`` dalao\u4e0d\u662f\u8bf4``\u4e0d\u77e5\u4e3a\u5565\u5c31\u60f3\u5230\u7684\u5206\u89e3\u8d28\u56e0\u6570``\u5417\uff0c\u6211\u6765\u89e3\u7b54\u4e00\u4e0b\uff1a\u9996\u5148\uff0c\u9898\u76ee\u8bf4``\u6700\u5927``\uff0c\u4f17\u6240\u5468\u77e5\uff0c2\u4f4d\u6570\u5927\u4e8e1\u4f4d\u6570\uff0c\u800c\u5206\u89e3\u8d28\u56e0\u6570\u53ef\u4ee5\u4f7f\u4f4d\u6570\u6700\u5927\u5316\uff0c\u518d``sort+reverse``\u5c31\u53ef\u4ee5\u4e86\n\nThe End.",
        "postTime": 1559462868,
        "uid": 122605,
        "name": "\u7075\u5149\u4e00\u95ea",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF515C \u3010Drazil and Factorial\u3011"
    },
    {
        "content": "~~\u4f17\u6240\u5468\u77e5\uff0c\u6253\u8868\u662f\u63d0\u9ad8\u7684\u57fa\u7840~~\n\n#### \u601d\u8def\n\n\u4e00\u9053~~\u6bd4\u8f83\u7b80\u5355\u7684~~\u6253\u8868\u9898\u3002\n\n\u505a\u8fd9\u9053\u9898\uff0c\u9700\u8981\u4e09\u6b65\u3002\n\n1. \u62ff\u51fa\u7b14\u548c\u7eb8\u3002\n\n2. \u624b\u7b97\u51fa\u6bcf\u4e2a\u6570\u7684\u62c6\u5206\u3002\n\n3. \u5199\u4ee3\u7801\u3002\n\n\u81f3\u4e8e\u5982\u4f55\u624b\u7b97\uff0c\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u679a\u4e3e\u3002\n\n\u9700\u8981\u9075\u4ece**\u5c3d\u91cf\u591a\u62c6**\u7684\u539f\u5219\u3002\n\n\u56e0\u4e3a\u53ea\u8981\u6570\u4f4d\u53d8\u5927\u4e86\uff0c\u6574\u4e2a\u6570\u81ea\u7136\u5c31\u53d8\u5927\u4e86\u3002\n\n\u624b\u7b97\u7684\u8868\u6211\u4eec\u9009\u62e9\u7528\u6876\u88c5\u3002\n\n\u56e0\u4e3a\u6570\u636e\u5f88\u5c0f\uff0c\u6876\u6bd4\u8f83\u5feb\u3002\n\n\u81f3\u4e8e\u4ee3\u7801\u5c31\u5f88\u7b80\u5355\u4e86\u3002\n\n#### Code\n\n\u8868\u89c1\u7a0b\u5e8f\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n, m, num[15];\n\nint read()\n{\n    int s = 0, f = 1;\n    char ch = getchar();\n    while (ch < '0' || ch > '9')\n    {\n        if (ch == '-')\n            f = -1;\n        ch = getchar();\n    }\n    while (ch >= '0' && ch <= '9')\n    {\n        s = s * 10 + ch - '0';\n        ch = getchar();\n    }\n    return s * f;\n}\n\nint main()\n{\n    m = read();\n    for (int i = 1; i <= m; i++)\n    {\n        int y; \n        scanf(\"%1d\", &y);\n        if (y == 2) num[2]++;\n        else if (y == 3) num[3]++;\n        else if (y == 4) num[2] += 2 , num[3]++;\n        else if (y == 5) num[5]++;\n        else if (y == 6) num[3]++ , num[5]++;\n        else if (y == 7) num[7]++;\n        else if (y == 8) num[2] += 3 , num[7]++;\n        else if (y == 9) num[2]++ , num[3] += 2 , num[7]++;\n    }\n    for (int i = 1; i <= num[7]; i++) cout << 7;\n    for (int i = 1; i <= num[5]; i++) cout << 5;\n    for (int i = 1; i <= num[3]; i++) cout << 3;\n    for (int i = 1; i <= num[2]; i++) cout << 2;\n    return 0;\n}\n\n```\n\n\u5b8c\u7ed3\u6492\u82b1\uff01",
        "postTime": 1633951558,
        "uid": 320933,
        "name": "Mfeitveer",
        "ccfLevel": 0,
        "title": "CF515C Drazil and Factorial\u9898\u89e3"
    },
    {
        "content": "\n#  ~~\u6253\u8868\u8fc7\u84dd\u9898~~\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\u5b57\uff0c\u59826\n\n\u6211\u4eec\u628a\u5b83\u5206\u6210**\u51e0\u4e2a\u9636\u4e58\u76f8\u4e58\u7684\u5f62\u5f0f**\n\n\u8ba9\u80fd\u5206\u7684\u9636\u4e58\u6570\u5c3d\u91cf\u5730\u591a\uff0c\u6700\u540e\u6784\u6210\u7684\u6570\u5fc5\u7136\u6700\u5927\n\n\u4f60\u53ef\u752810\u5206\u949f\u624b\u7b97\n\n$1!=1!$\n\n$2!=2!$\n\n$3!=3!$\n\n$4!=3!*2!*2!$\n\n$5!=5!$\n\n$6!=5!*3!$\n\n$7!=7!$\n\n$8!=7!*2!*2!*2!$\n\n$9!=7!*3!*3!*2!$\n\n\u628a\u8fd9\u4e9b\u6570\u653e\u5165\u4e00\u4e2a\u6570\u7ec4\uff0c\u518d\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u8f93\u51fa\u7b54\u6848\n\n```cpp\n#include<bits/stdc++.h>\n#define LL long long\nusing namespace std;\nLL n,x,cnt,ans[100010];\ninline LL read(){\n\tLL f=1,x=0;char c=getchar();\n\twhile(c<48||c>57){if(c=='-')f=-1;c=getchar();}\n\twhile(c>=48&&c<=57){x=(x<<3)+(x<<1)+(c^48);c=getchar();}\n\treturn f*x;\n}\nint main()\n{\n\t//freopen(\".in\",\"r\",stdin);\n\t//freopen(\".out\",\"w\",stdout);\n\tn=read();x=read();\n\twhile(x){\n\t\tif(x%10==1||x%10==0){\n\t\t\tx/=10;\n\t\t\tcontinue;\n\t\t}\n\t\telse if(x%10==4){\n\t\t\tans[++cnt]=3;\n\t\t\tans[++cnt]=2;\n\t\t\tans[++cnt]=2;\n\t\t}\n\t\telse if(x%10==6){\n\t\t\tans[++cnt]=5;\n\t\t\tans[++cnt]=3;\n\t\t}\n\t\telse if(x%10==8){\n\t\t\tans[++cnt]=7;\n\t\t\tans[++cnt]=2;\n\t\t\tans[++cnt]=2;\n\t\t\tans[++cnt]=2;\n\t\t}\n\t\telse if(x%10==9){\n\t\t\tans[++cnt]=7;\n\t\t\tans[++cnt]=3;\n\t\t\tans[++cnt]=3;\n\t\t\tans[++cnt]=2;\n\t\t}\n\t\telse ans[++cnt]=x%10;\n\t\tx/=10;\n\t}\n\tsort(ans+1,ans+cnt+1);\n\tfor(int i=cnt;i>=1;i--)\n\t\tcout<<ans[i];\n\tfclose(stdin);fclose(stdout);\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1566222850,
        "uid": 128882,
        "name": "cyy233",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF515C \u3010Drazil and Factorial\u3011"
    },
    {
        "content": "\u5148\u58f0\u660e\u4e00\u4e0b\uff0c\u8fd9\u9898\u771f\u7684\u597d\u96be\u60f3\n\n\u521a\u5f00\u59cb\u4e00\u770b\u9898\uff0c\u54c8\u54c8\uff0c\u679a\u4e3e\uff1f\u6c42\u9636\u4e58\uff1f\u6bcf\u4e00\u4f4d\u4e0d\u5c31\u6700\u59279\u561b\uff0c\u5728\u4e00\u770b\uff0c\u8bf6\uff1f\uff01\u9636\u4e58\u7684\u4e58\u79ef\uff1f\u83ab\u975e\u662f\u3002\u3002\u3002\u9ad8\u7cbe\u5ea6\uff1f\u518d\u4e00\u770b\u9898\uff0cn<=15\u3002\u3002\u3002\u679a\u4e3e\u6cd5\u51c9\u51c9\n\n\u4e0d\u77e5\u4e3a\u5565\u5c31\u60f3\u5230\u7684\u5206\u89e3\u8d28\u56e0\u6570\uff0c\u8fd9\u9898\u771f\u7684\u662f\u5206\u89e3\u8d28\u56e0\u6570\u561e\n\n\u4e8e\u662f\u5f00\u59cb\u5206\n\n2 \n\n2 3\n\n2 2 2 3 \n\n2 2 2 3 5\n\n2 2 2 2 3 3 5 \n\n2 2 2 2 3 3 5 7\n\n2 2 2 2 2 2 2 3 3 5 7 \n\n2 2 2 2 2 2 2 3 3 3 3 5 7 \n\n\u771f\u597d\uff0c\u7136\u540e\u8bb0\u4e0b\u6765\uff0c\u66f4\u76f4\u89c2\u4e9b\u5c31\u662f\n\n1=1\n\n2=2\n\n3=3\n\n4=2+2+3\n\n5=5\n\n6=5+3\n\n7=7\n\n8=2+2+2+7\n\n9=2+3+3+7\n\n\u53ea\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u6570\u7ec4\u6765\u5b58\u50a8\u5c31\u884c\u5566\u3002\n\n\u73b0\u5728\u5f00\u59cb\u89e3\u91ca\uff1a\u56e0\u4e3a\u6570\u5b57\u7684\u4f4d\u6570\u8d8a\u591a\uff0c\u6570\u5b57\u5c31\u8d8a\u5927\uff0c\u6240\u4ee5\u8981\u5c3d\u5168\u529b\u628a\u6570\u5b57\u5206\u6210\u66f4\u591a\u4f4d\uff0c\u8fd9\u65f6\u5c31\u7528\u5230\u4e86\u5206\u89e3\u8d28\u56e0\u6570\uff0c\u5c06n!\u5206\u89e3\u6210n1!*n2!*...\u7684\u5f62\u5f0f\u3002\n\n\u4e3e\u4e2a\u6817\u5b50\uff1a\n\n```\n8=1*2*3*4*5*6*7*8\n=2*2*2*2*2*2*2*3*3*3*3*5*7\n=2!*2!*2!*7!\n```\n\n\u7136\u540e\u7528\u5b57\u7b26\u4e32\u8bfb\u5165\uff0c\u6bcf\u4e00\u4f4d\u5224\u65ad\u5c31\u884c\u4e86\n\n#### \u6e29\u99a8\u63d0\u793a\uff1a\u4e00\u5b9a\u8981\u7ec6\u5fc3\n\n\u6211\u5c31\u662f\u56e0\u4e3a\u7b97\u9519\u4e00\u4e2a\u6570\u800cWA\u4e86\u4e00\u6b21\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```\n#include<iostream>\n#include<string>\nusing namespace std;\nint a[20]={0};\nint main(){\n\tint n;\n\tcin>>n;\n\tstring s;\n\tcin>>s;\n\tfor(int i=0;i<n;i++){\n\t\tint t=s[i]-'0';\n\t\tif(t==2)a[2]++;\n\t\tif(t==3){\n\t\t\ta[3]++;\n\t\t}\n\t\tif(t==4){\n\t\t\ta[2]+=2;\n\t\t\ta[3]++;\n\t\t}\n\t\tif(t==5){\n\t\t\ta[5]++;\n\t\t}\n\t\tif(t==6){\n\t\t\ta[3]++;\n\t\t\ta[5]++;\n\t\t}\n\t\tif(t==7){\n\t\t\ta[7]++;\n\t\t}\n\t\tif(t==8){\n\t\t\ta[2]+=3;\n\t\t\ta[7]++;\n\t\t}\n\t\tif(t==9){\n\t\t\ta[2]++;\n\t\t\ta[3]+=2;\n\t\t\ta[7]++;\n\t\t}\n\t}\n\tfor(int i=9;i>1;i--){\n\t\tfor(int j=0;j<a[i];j++){\n\t\t\tcout<<i;\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1542111859,
        "uid": 118852,
        "name": "tryrtj",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF515C \u3010Drazil and Factorial\u3011"
    }
]