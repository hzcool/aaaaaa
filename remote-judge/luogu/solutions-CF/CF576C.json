[
    {
        "content": "~~\u65e0\u803b\u7684~~\u5ba3\u4f20\u535a\u5ba2->[link](https://blog.csdn.net/BWzhuzehao/article/details/110496321)\n\n\u8fd9\u9053\u9898\u662f\u4e00\u9053\u6784\u9020\u9898\uff0c\u5f88\u6709 CF \u7684\u98ce\u683c\u3002\n\n\u9996\u5148\uff0c\u89c2\u5bdf $x,y \\leq 10^6$ ,\u4e0d\u96be\u60f3\u5230\u4e00\u4e2a\u601d\u8def\uff1a\u6392\u5e8f\uff0c $x$ \u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c $y$ \u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u3002\u4f46\u663e\u7136\u8fd9\u6837\u662f\u9519\u7684\u3002\u56e0\u4e3a\u6211\u4eec\u53ea\u8981\u6784\u9020\u4e00\u7ec4\u8de8\u5ea6\u8db3\u591f\u5927\u7684\u6570\u636e\uff0c\u5c31\u53ef\u4ee5\u628a\u8fd9\u4e2a\u505a\u6cd5\u5361\u6389\u3002\n\n\u4f46\u662f\uff0c**\u6392\u5e8f** \u7684\u601d\u8def\u662f\u503c\u5f97\u6211\u4eec\u63a2\u8ba8\u7684\uff0c\u53ea\u662f\u5982\u4f55\u6392\u5e8f\u7684\u95ee\u9898\u3002\n\n\u60f3\u4e00\u60f3\uff0c\u6211\u4eec\u8981\u4f7f\u5f97\u66fc\u54c8\u987f\u8ddd\u79bb\u4e4b\u548c\u6700\u5c0f\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u5c06\u8fd9\u4e9b\u70b9 **\u5212\u5206\u6210\u51e0\u4e2a\u90e8\u5206**\uff0c\u4f7f\u5f97\u6bcf\u4e00\u4e2a\u90e8\u5206 **\u5185\u90e8\u8ddd\u79bb\u548c\u8db3\u591f\u5c0f** \uff0c\u5e76\u4e14\u51e0\u4e2a\u90e8\u5206\u4e4b\u95f4 **\u79fb\u52a8\u7684\u8ddd\u79bb\u4e5f\u9700\u8981\u8db3\u591f\u5c0f**\u3002\n\n\u6240\u4ee5\uff0c\u6839\u636e\u4e0a\u8ff0\u5206\u6790\uff0c\u6211\u4eec\u80fd\u60f3\u5230\u4ec0\u4e48\uff1f\u83ab\u961f\uff01\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u4e8c\u7ef4\u5750\u6807 $(x,y)$ \u770b\u4f5c\u4e00\u7ef4\u533a\u95f4 $[l,r]$ \uff0c\u5c06\u76f8\u90bb\u4e24\u4e2a\u70b9\u7684\u79fb\u52a8\u53d8\u6210\u533a\u95f4\u7684\u79fb\u52a8\uff0c\u8981\u4f7f\u533a\u95f4\u79fb\u52a8\u6b21\u6570\u5c3d\u91cf\u5c0f\uff0c\u8fd9\u4e0d\u662f\u83ab\u961f\u7ecf\u5e38\u5e72\u7684\u4e8b\u5417qwq\u3002\n\n\u4e0d\u8fc7\uff1a\u5982\u679c\u6211\u4eec\u6309\u7167\u5e38\u89c4\u83ab\u961f\u7684\u5957\u8def\uff08\u6309\u7167\u5de6\u7aef\u70b9\u6240\u5728\u5757\u6570\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u53f3\u7aef\u70b9\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\uff09\uff0c\u4f1a\u53d1\u73b0\u53ea\u8981\u6784\u9020\u8fd9\u6837\u4e00\u7ec4\u6570\u636e\u5c31\u4f1a WA\uff1a\n\n```cpp\n\u5047\u8bbe\u6b64\u65f6\u5750\u6807\u5df2\u7ecf\u6392\u8fc7\u5e8f\u4e86\uff1a\n1e3,0\n1e3,1\n1e3,2\n...\n1e3,1e6\n2e3,0\n...\n2e3,1e6\n3e3,0\n...\n3e3,1e6\n4e3,0\n...\n```\n\n\u8fd9\u6837\uff0c\u672c\u6765\u53ef\u4ee5\u6bcf\u4e00\u4e2a\u70b9\u53ea\u8d70\u4e00\u6b21\uff0c\u4f46\u662f\u9664\u4e86 $x=10^3$ \u7684\u70b9\u7531\u4e8e\u83ab\u961f\u7684\u6392\u5e8f\u65b9\u5f0f\u90fd\u88ab\u8d70\u4e86\u4e24\u6b21\uff0c\u5c31\u4f1a\u5bfc\u81f4\u8def\u7a0b\u6d6a\u8d39\uff0c\u5f97\u4e0d\u507f\u5931\u3002\n\n\u6240\u4ee5\uff0c\u8fd9\u4e2a\u5730\u65b9\u9700\u8981\u52a0\u5165\u4e00\u4e2a\u5e38\u89c1\u7684\u83ab\u961f\u4f18\u5316\uff08\u4e4b\u6240\u4ee5\u8bf4\u662f\u5e38\u89c1\u662f\u56e0\u4e3a\u5728\u5f88\u591a\u83ab\u961f\u7b97\u6cd5\u8bb2\u89e3\u7684\u535a\u5ba2\u4e2d\u90fd\u8bb2\u5230\u4e86\u8fd9\u4e2a\u4f18\u5316\uff09\uff1a\u5047\u8bbe\u5f53\u524d\u5de6\u7aef\u70b9\u5728\u7b2c $b$ \u5757\uff0c\u5982\u679c $b$ \u4e3a\u5947\u6570\uff0c\u90a3\u4e48\u53f3\u7aef\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5426\u5219\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u80fd\u5b8c\u7f8e\u89e3\u51b3\u4e0a\u8ff0\u95ee\u9898\u3002\n\n\u7531\u4e8e\u82f1\u6587\u9898\u9762\u4e2d\u6709 `It is guaranteed that the answer exists.`\uff0c\u6240\u4ee5\u65e0\u9700\u8003\u8651\u65e0\u89e3\u60c5\u51b5\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a $O(nlogn)$\uff0c\u4e00\u6b21\u5feb\u6392\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int MAXN=1e6+10;\nint n,block;\nstruct node\n{\n\tint l,r,id,b;\n}que[MAXN];\n\nint read()\n{\n\tint sum=0,fh=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9') {if(ch=='-') fh=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') {sum=(sum<<3)+(sum<<1)+(ch^48);ch=getchar();}\n\treturn sum*fh;\n}\n\nbool cmp(const node &fir,const node &sec)\n{\n\tif(fir.b!=sec.b) return fir.b<sec.b;\n\tif(fir.b&1) return fir.r<sec.r;\n\treturn fir.r>sec.r;\n}\n\nint main()\n{\n\tn=read();block=1000;//\u6b64\u5904\u8bbe\u5757\u957f\u4e3a 1000\uff0c\u65e0\u9700\u62c5\u5fc3\u88ab\u4e0a\u8ff0\u53cd\u4f8b\u5361\u6389\uff08\u5404\u4f4d\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u8ba1\u7b97\u662f\u5426\u4f1a\u88ab\u5361\u6389\uff09\n\tfor(int i=1;i<=n;i++) {que[i].l=read();que[i].r=read();que[i].id=i;que[i].b=(que[i].l-1)/block+1;}\n\tsort(que+1,que+n+1,cmp);\n\tfor(int i=1;i<=n;i++) cout<<que[i].id<<\" \";\n\tcout<<\"\\n\";\n\treturn 0;\n}\n```",
        "postTime": 1606910100,
        "uid": 134000,
        "name": "Plozia",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF576C \u3010Points on Plane\u3011"
    },
    {
        "content": "\u4e00\u53e5\u8bdd\u9898\u610f\uff1a\u6309\u4e00\u79cd\u65b9\u5f0f\u91cd\u6392\u5e8f\u5217\u4f7f\u76f8\u90bb\u70b9\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u5c3d\u91cf\u5c0f\u3002\n\n\u770b\u5230\u8fd9\u4e2a\u66fc\u54c8\u987f\u8ddd\u79bb\uff0c\u5176\u5b9e\u6709\u4e00\u79cd\u5f88\u5947\u5999\u7684\u8f6c\u5316\uff1a\u5c06\u5750\u6807 $(x, y)$ \u8f6c\u5316\u4e3a\u533a\u95f4 $[x, y]$\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e24\u4e2a\u70b9 $a_i$\uff0c$a_{i + 1}$\uff0c\u5176\u66fc\u54c8\u987f\u8ddd\u79bb\u5c31\u662f\u6307\u9488 $lt$\uff0c$rt$ \u4ece $x_i$\uff0c$y_i$ \u79fb\u52a8\u5230 $x_{i + 1}$\uff0c$y_{i + 1}$ \u7684\u8ddd\u79bb\uff0c\u4e0d\u96be\u53d1\u73b0\u5f88\u50cf\u4e00\u4e2a\u83ab\u961f\u7684\u6307\u9488\u79fb\u52a8\u3002\u800c\u6211\u4eec\u53c2\u7167\u83ab\u961f\u7684\u6392\u5e8f\u65b9\u5f0f\uff08\u5947\u5076\u6392\u5e8f\uff09\u6765\u786e\u5b9a\u987a\u5e8f\u5373\u53ef\u8fbe\u5230\u8f83\u4f18\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5c06 $(x, y)$ \u5f53\u4f5c\u533a\u95f4\u7684\u8be2\u95ee\u8fdb\u884c\u83ab\u961f\u5947\u5076\u6392\u5e8f\u5373\u53ef\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int N = 1e6 + 5;\nint n, t;\nstruct Qr{\n    int l, r, id;\n    bool operator <(const Qr &b) const {\n        if(l / t == b.l / t) {\n            if((l / t) & 1) return r < b.r;\n            return r > b.r;\n        }\n        return l < b.l;\n    }\n}qr[N];\n\nint main() {\n    scanf(\"%d\", &n); t = sqrt(n);\n    for (int i = 1; i <= n; ++i) scanf(\"%d%d\", &qr[i].l ,&qr[i].r), qr[i].id = i;\n    sort(qr + 1, qr + n + 1);\n    for (int i = 1; i <= n; ++i) printf(\"%d \", qr[i].id);\n    puts(\"\");\n    return 0;\n}\n```",
        "postTime": 1679201730,
        "uid": 483928,
        "name": "Ziqqurat",
        "ccfLevel": 5,
        "title": "CF576C \u9898\u89e3"
    },
    {
        "content": "\u5c0f\u6e05\u65b0\u6784\u9020\u9898\u3002\n\n## \u9898\u610f\n\n\u7ed9\u5b9a $N$ \u4e2a\u70b9\uff0c\u6c42\u4e00\u4e2a\u6392\u5217\uff0c\u4f7f\u5f97\u76f8\u90bb\u4e24\u70b9\u7684\u8ddd\u79bb\u6bd4\u8f83\u5c0f\uff08\u4e0d\u662f\u6700\u5c0f\uff09\u3002\n\n## \u601d\u8def\n\n\u8fd9\u4e2a\u9898\u5982\u679c\u628a $x$ \u770b\u6210\u5de6\u6307\u9488\uff0c$y$ \u770b\u6210\u53f3\u6307\u9488\uff0c\u90a3\u4e48\u5230\u65b0\u7684\u70b9 $|x_{p_i}-x_{p_{i-1}}|$ \u5c31\u76f8\u5f53\u4e8e\u5de6\u6307\u9488\u632a\u52a8\uff0c$|y_{p_i}-y_{p_{i-1}}|$ \u5c31\u76f8\u5f53\u4e8e\u53f3\u6307\u9488\u632a\u52a8\u3002\n\n\u8fd9\u5c31\u7c7b\u4f3c\u83ab\u961f\u7684\u632a\u52a8\u6307\u9488\uff0c\u6240\u4ee5\u6309\u83ab\u961f\u7684\u6392\u5e8f\u6765\u6392\u5373\u53ef\u3002\n\n\u83ab\u961f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(N\\sqrt N)$\uff0c\u6bcf\u4e00\u6b21\u79fb\u52a8\u6307\u9488\u90fd\u662f $O(1)$ \u7684\uff0c\u76f8\u5f53\u4e8e\u70b9\u4e4b\u95f4\u7684\u4e00\u683c\u8ddd\u79bb\u3002\u6240\u4ee5 $10^6\\times10^3\\leq2.5\\times10^9$\uff0c\u80fd\u8fc7\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e6 + 5;\nint n, slen, pos[N];\nstruct node {\n\tint l, r, id;\n\tbool operator < (const node& x) const {\n\t\tif (pos[l] != pos[x.l]) return l < x.l;\n\t\treturn (pos[l] & 1 ? r < x.r : r > x.r);\n\t}\n} s[N];\nint main() {\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n, slen = sqrt(n);\n\tfor (int i = 1; i <= n; i ++)\n\t\tpos[i] = (i - 1) / slen + 1;\n\tfor (int i = 1; i <= n; i ++)\n\t\tcin >> s[i].l >> s[i].r, s[i].id = i;\n\tsort(s + 1, s + 1 + n);\n\tfor (int i = 1; i <= n; i ++)\n\t\tcout << s[i].id << '\\n';\n\treturn 0;\n}\n```\n",
        "postTime": 1659429187,
        "uid": 560516,
        "name": "\u55b5\u4ed4\u725b\u5976",
        "ccfLevel": 0,
        "title": "CF576C Points on Plane \u9898\u89e3"
    },
    {
        "content": "### \u9898\u610f\uff1a\n\n\u7ed9\u51fa $N$ \u4e2a\u6574\u70b9 $(x_i,y_i)$ \uff0c\u6c42\u4e00\u4e2a\u6392\u5217 $p_i$ \uff0c\u4f7f\u5f97$\\sum\\limits_{i=2}^N |x_{p_i} - x_{p_{i-1}}| + |y_{p_i} - y_{p_{i-1}}| \\leq 25 \\times 10^8$ \u3002\n\n## solution\n\n\u6211\u4eec\u901a\u8fc7~~\u770b\u9898\u76ee\u6807\u7b7e~~\u89c2\u5bdf\u6cd5\uff0c\u53d1\u73b0\u6211\u4eec\u5982\u679c\u5c06\u70b9 $(x,y)$ \u770b\u505a\u8be2\u95ee $(l,r)$ \u8fd9\u6837\u8fd9\u4e2a\u67ff\u5b50\u5c31\u53d8\u6210\u4e86\u83ab\u961f\u7684\u590d\u6742\u5ea6\u3002\n\n\u800c\u901a\u8fc7~~\u5e38\u8bc6~~\u8bc1\u660e\uff0c\u83ab\u961f\u7684\u590d\u6742\u5ea6\u662f $O(n\\sqrt n)$ \u7684\uff0c\u800c $10^6\\times \\sqrt {10^6} = 10^9 \\le 25 \\times 10^8$ \u3002\n\n\u6ce8\u610f\u8fd9\u91cc\u9700\u8981\u4f7f\u7528\u83ab\u961f\u7684\u4e00\u4e2a\u5c0f\u4f18\u5316\u3002\n\n\u5982\u679c\u5f53\u524d\u5de6\u7aef\u70b9\u6240\u5728\u7684\u5757\u4e3a\u5947\u6570\uff0c\u5219\u6309\u7167\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5426\u5219\u6309\u7167\u4ece\u5927\u5230\u5c0f\u6392\u3002\u8fd9\u4e2a\u4f18\u5316\u5f88\u6709\u7528\u3002\u7ecf\u6d4b\u8bd5\uff0c\u53ef\u4ee5\u505a\u5230 $4.6\\times10^9 \\rightarrow 1.3\\times 10^9$ \uff08\u592a\u84bb\u4e86\uff0c\u4e0d\u4f1a\u8bc1\uff09\n\n## code\n\n```cpp\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nconst int N=1e6+1000,SN=1000;\ntypedef long long ll;\nint n,sn;\nstruct de{\n\tint l,r,id;\n};\nde d[N];\nint a[N];\ninline int blk(int x){\n\treturn (x-1)/SN;\n}\ninline int cmp(de x,de y){\n    int dlx=blk(x.l),dly=blk(y.l);\n    return dlx!=dly?(dlx<dly):(dlx&1)?(x.r<y.r):(x.r>y.r);\n}\nstatic char buf[100000],*pa=buf,*pd=buf;\n#define gc pa==pd&&(pd=(pa=buf)+fread(buf,1,100000,stdin),pa==pd)?EOF:*pa++\ninline int read(){\n    register int x(0);register char c(gc);\n    while(c<'0'||c>'9')c=gc;\n    while(c>='0'&&c<='9')x=(x<<1)+(x<<3)+(c^48),c=gc;\n    return x;\n}\ninline void write(register int x){\n\tif (x > 9) write(x / 10);\n\tputchar(x % 10 + '0');\n}\nint main(){\n\tn=read();\n\tfor(int i=1;i<=n;i++){\n\t\tint l,r;\n\t\tl=read();\n\t\tr=read();\n\t\td[i].l=l,d[i].r=r;\n\t\td[i].id=i;\n\t}\n\tsort(d+1,d+n+1,cmp);\n\tfor(int i=1;i<=n;i++){\n\t\twrite(d[i].id);\n\t\tputchar(' ');\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1656485197,
        "uid": 397982,
        "name": "\u5c0f\u53ef\u7231\u840c\u840c\u54d2",
        "ccfLevel": 4,
        "title": "CF576C\u9898\u89e3"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u79cd\u7ebf\u6027\u505a\u6cd5\u3002\u5c06\u5e73\u9762\u5206\u6210 $1000\\cdot 1000$ \u5927\u5c0f\u7684\u5757\uff0c\u7531\u4e8e\u5750\u6807\u8303\u56f4\u5728 $[0,10^6]$ \u5185\uff0c\u8fd9\u6837\u53ef\u4ee5\u5f97\u5230 $1001\\cdot 1001$ \u4e2a\u5757\u3002\n\n\u7136\u540e\u904d\u5386\u6bcf\u4e2a\u5757\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u4ece\u4e00\u4e2a\u5757\u5230\u53e6\u4e00\u5757\u65f6\uff0c\u76f8\u90bb\u70b9\u7684\u8ddd\u79bb\u5c3d\u53ef\u80fd\u5730\u5c0f\uff0c\u53ef\u4ee5\u6309\u7167\u5076\u6570\u884c\u4ece\u5de6\u81f3\u53f3\uff0c\u5947\u6570\u884c\u4ece\u53f3\u81f3\u5de6\u7684\u65b9\u5f0f\u904d\u5386\u3002\u5bf9\u4e8e\u6bcf\u4e00\u5757\u5185\u90e8\uff0c\u53d6\u7eb5\u5750\u6807\u6700\u5c0f\u6700\u5927\u7684\u4e24\u4e2a\u70b9 $p$ \u548c $q$\uff0c\u82e5\u8be5\u5757\u4f4d\u4e8e\u5076\u6570\u884c\u5219\u5148\u8f93\u51fa $p$\uff0c\u4ee5\u53ca\u975e $p$ \u975e $q$ \u7684\u5176\u4f59\u70b9\uff0c\u7136\u540e\u8f93\u51fa $q$\uff1b\u82e5\u8be5\u5757\u4f4d\u4e8e\u5947\u6570\u884c\u5219\u5148\u8f93\u51fa $q$\uff0c\u4ee5\u53ca\u975e $p$ \u975e $q$ \u7684\u5176\u4f59\u70b9\uff0c\u7136\u540e\u8f93\u51fa $p$\u3002\n\nAC \u4ee3\u7801\uff1a\uff08Golang\uff09\n\n```go\npackage main\n\nimport (\n\t\"bufio\"\n\t. \"fmt\"\n\t\"os\"\n)\n\nfunc main() {\n\tin := bufio.NewReader(os.Stdin)\n\tout := bufio.NewWriter(os.Stdout)\n\tdefer out.Flush()\n\ttype pair struct{ x, y int }\n\n\tvar n int\n\tFscan(in, &n)\n\tg := [1001][1001][]int{}\n\tps := make([]pair, n+1)\n\tfor i := 1; i <= n; i++ {\n\t\tFscan(in, &ps[i].x, &ps[i].y)\n\t\tx, y := ps[i].x/1000, ps[i].y/1000\n\t\tif x&1 > 0 {\n\t\t\ty = 1000 - y\n\t\t}\n\t\tg[x][y] = append(g[x][y], i)\n\t}\n\tfor i := 0; i < 1001; i++ {\n\t\tfor j := 0; j < 1001; j++ {\n\t\t\tids := g[i][j]\n\t\t\tif len(ids) == 0 {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tminI, maxI := ids[0], ids[0]\n\t\t\tfor _, id := range ids[1:] {\n\t\t\t\tif ps[id].x < ps[minI].x {\n\t\t\t\t\tminI = id\n\t\t\t\t} else if ps[id].x > ps[maxI].x {\n\t\t\t\t\tmaxI = id\n\t\t\t\t}\n\t\t\t}\n\t\t\tif i&1 > 0 {\n\t\t\t\tminI, maxI = maxI, minI\n\t\t\t}\n\t\t\tFprint(out, minI, \" \")\n\t\t\tfor _, id := range ids {\n\t\t\t\tif id != minI && id != maxI {\n\t\t\t\t\tFprint(out, id, \" \")\n\t\t\t\t}\n\t\t\t}\n\t\t\tif maxI != minI {\n\t\t\t\tFprint(out, maxI, \" \")\n\t\t\t}\n\t\t}\n\t}\n}\n```\n",
        "postTime": 1615630553,
        "uid": 266651,
        "name": "\u7075\u8336\u5c71\u827e\u5e9c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF576C \u3010Points on Plane\u3011"
    },
    {
        "content": "\u4e00\u9053\u6709\u8da3\u7684\u6784\u9020\u9898\uff0c\u53ea\u9700\u8981\u4e86\u89e3\u83ab\u961f\u7684\u590d\u6742\u5ea6\u5c31\u53ef\u4ee5\u8f7b\u677e\u8fc7\u9898\u3002\n\n\u6211\u4eec\u91c7\u7528\u83ab\u961f\u601d\u60f3\uff0c\u6309\u7167 $\\sqrt {10^6}$ \u7ed9\u6743\u503c\u5206\u5757\uff0c\u6309\u7167\u83ab\u961f\u7684\u6392\u5e8f\u65b9\u6cd5\uff0c\u8fd9\u6837\u53ef\u4ee5\u6784\u9020\u51fa $\\sum\\limits_{i=2}^N |x_{p_i} - x_{p_{i-1}}| + |y_{p_i} - y_{p_{i-1}}| \\leq 3.5 \\times 10^9$ \u7684\u65b9\u6848\u3002\n\n\u6765\u770b\u770b\u662f\u600e\u4e48\u7b97\u51fa\u6765\u7684\uff08\u4e0b\u6587\u4e2d\u7684\u201c\u5757\u201d\u6307\u7684\u662f\u5de6\u7aef\u70b9\u540c\u4e2a\u5757\u7684\u90a3\u4e9b\u70b9\uff09\u3002\u5de6\u7aef\u70b9\u8d21\u732e\u4e0d\u8d85\u8fc7 $10^6*10^3$\uff0c\u5373\u70b9\u6570\u4e58\u4ee5\u6bcf\u4e2a\u70b9\u6700\u591a\u7684\u8d21\u732e\u3002\n\n\u7136\u800c\u53f3\u7aef\u70b9\u53ef\u80fd\u5728\u6bcf\u5230\u8fbe\u4e00\u4e2a\u65b0\u7684\u5757\u4e2d\u65f6\u4f1a\u4ea7\u751f $10^6$\uff0c\u8fd9\u79cd\u60c5\u51b5\u6700\u591a\u6709 $10^3$ \u79cd\uff0c\u518d\u8003\u8651\u5757\u4e2d\u7684\u79fb\u52a8\uff0c\u6bcf\u4e2a\u5757\u5185\u90e8\u7684\u53f3\u7aef\u70b9\u4f1a\u4ea7\u751f\u5757\u7684\u4e2a\u6570\u4e58\u4ee5\u6743\u503c\u8303\u56f4\u7684\u8d21\u732e\u5373 $10^3*10^6$\u3002\n\n\u4e0a\u8ff0\u4e09\u8005\u76f8\u52a0\u662f $3 \\times 10^9$\uff0c\u4f46\u7531\u4e8e\u6709\u5730\u65b9\u4f1a\u591a\u51fa\u4e00\u4e9b\uff0c\u6545\u800c $3 \\times 10^9$ \u53d8\u6210\u4e86 $3.5 \\times 10^9$\u3002\u81f3\u4e8e\u54ea\u91cc\u591a\u7b97\uff0c\u4e0b\u9762\u4f1a\u63d0\u5230\u3002\n\n\u6211\u4eec\u8003\u8651\u600e\u4e48\u4f18\u5316\u53f3\u7aef\u70b9\uff0c\u8fd9\u65f6\u4f1a\u81ea\u7136\u800c\u7136\u5730\u60f3\u5230\u83ab\u961f\u5947\u5076\u6027\u4f18\u5316\uff0c\u4f7f\u4e00\u4e2a\u5757\u5230\u4e00\u4e2a\u65b0\u7684\u5757\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u53f3\u7aef\u70b9\u7684\u5927\u5e45\u5ea6\u79fb\u52a8\u6d88\u5931\u4e86\u3002\u5177\u4f53\u7684\uff0c\u53f3\u7aef\u70b9\u7684\u79fb\u52a8\u53ea\u5269\u6bcf\u4e2a\u5757\u5185\u90e8\u7684\u53f3\u7aef\u70b9\u4f1a\u4ea7\u751f\u5757\u7684\u4e2a\u6570\u4e58\u4ee5\u6743\u503c\u8303\u56f4\u7684\u8d21\u732e $10^3*10^6$ \u4e86\u3002\n\n\u518d\u770b\u54ea\u91cc\u4f30\u8ba1\u5c11\u4e86\uff0c\u53d1\u73b0\u5de6\u7aef\u70b9\u4e00\u4e2a\u5757\u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\u5757\u65f6\uff0c\u6700\u591a\u4f1a\u6709 $2 \\times 10^3$ \u7684\u79fb\u52a8\u8ddd\u79bb\uff0c\u4e0d\u8fc7\u8fd9\u6837\u7684\u8d21\u732e\u6700\u591a\u53ea\u6709 $10^3$ \u4e2a\uff0c\u4e5f\u5c31\u662f\u5757\u6570\u4e2a\u3002\n\n[\u4ee3\u7801](https://codeforces.com/contest/576/submission/201206025)\u3002",
        "postTime": 1680923800,
        "uid": 341946,
        "name": "zac2010",
        "ccfLevel": 7,
        "title": "CF576C \u9898\u89e3"
    },
    {
        "content": "\u6ce8\u610f\u5230 $\\sum\\limits_{i=2}^N |x_{p_i} - x_{p_{i-1}}| + |y_{p_i} - y_{p_{i-1}}|$\u3002 \u672c\u8d28\u4e0a\u662f\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684**\u66fc\u54c8\u987f\u8ddd\u79bb** \u3002\n\n\u800c\u66fc\u54c8\u987f\u6700\u5c0f\u8ddd\u79bb\u751f\u6210\u6811\u8981 $O(n^2 \\log n)$ \uff0c\u663e\u7136\u8fc7\u4e0d\u4e86\u3002\n\n\u6ce8\u610f\u5230\u6211\u4eec\u5199\u8fc7\u4e00\u4e2a\u53eb\u83ab\u961f\u7684\u4e1c\u897f\u3002\n\n\u800c\u83ab\u961f\u7684\u590d\u6742\u5ea6\u4e3a $O(n \\sqrt n)$  \uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u8981\u6c42\u7684\u4e1c\u897f\u3002\n\n\u52a0\u4e00\u70b9\u5c0f\u4f18\u5316\uff0c\u5947\u5076\u6392\u5e8f\u3002\n\n\u5c31\u53ef\u4ee5\u8fc7\u4e86\u3002\n\n\u600e\u4e48\u8bc1\u660e\uff1f\n\n\u53ef\u4ee5\u770b\u4e00\u770b[\u8fd9\u4e00\u7bc7\u535a\u5ba2](https://www.cnblogs.com/WAMonster/p/10118934.html)\n\n\u7cbe\u7b80\u6765\u8bf4\u5c31\u662f\u63a7\u5236\u4e86\u5de6\u53f3\u6307\u9488\u8de8\u8d8a\u5757\u7684\u6570\u91cf\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=1000001;\nstruct query{\n    int l,r,id;\n}q[maxn];\nint n;\nint sq;\nbool cmp(query a,query b)\n{\n    if(a.l/sq==b.l/sq)\n    {\n        if(a.l/sq&1)\n        {\n            return a.r<b.r;\n        }\n        else\n        {\n            return a.r>b.r;\n        }\n    }\n    else\n    {\n        return a.l<b.l;\n    }\n}\nint main()\n{\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n    sq=1145;\n    cin>>n;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>q[i].l>>q[i].r;\n        q[i].id=i;\n    }\n    sort(q+1,q+n+1,cmp);\n    for(int i=1;i<=n;i++)\n        cout<<q[i].id<<' ';\n}\n```\n\n",
        "postTime": 1672042761,
        "uid": 520748,
        "name": "_ChiFAN_",
        "ccfLevel": 4,
        "title": "CF576C \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u4e00\u9053\u9898\u5982\u4f55\u8f6c\u5316\u6210\u83ab\u961f\u95ee\u9898\u5176\u4ed6\u9898\u89e3\u5df2\u7ecf\u8bb2\u7684\u5f88\u6e05\u695a\u4e86\uff0c\u6240\u4ee5\u6211\u6765\u6ce8\u91cd\u8bb2\u4e00\u8bb2\u6b64\u9898\u6240\u7528\u7684\u5947\u5076\u6392\u5e8f\u4f18\u5316\u3002\n\n\u6211\u4eec\u53d1\u73b0\u5982\u679c\u6309\u7167\u666e\u901a\u83ab\u961f\u6392\u5e8f\u7684\u8bdd\u4e8c\u5143\u7ec4\u7684 $x_i , y_i$ \u8d8b\u5411\u4f1a\u53d8\u6210\u8fd9\u4e2a\u6837\u5b50(\u6a2a\u4e3a $x$ \u7ad6\u4e3a $y$)\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/nekyv77w.png)\n\n\u800c\u5947\u5076\u6392\u5e8f\u4f18\u5316\u4e3b\u8981\u5c31\u662f\u901a\u8fc7\u5176\u5947\u5076\u6027\u6765\u51b3\u5b9a\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u8fd8\u662f\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u4f7f\u5f97\u4ed6\u53d8\u6210\u8fd9\u4e2a\u6837\u5b50\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/dapb0f6f.png)\n\n\u4e3b\u8981\u539f\u7406\u662f\u53f3\u6307\u9488\u8df3\u5b8c\u5947\u6570\u5757\u4e4b\u540e\u56de\u8df3\u65f6\u80fd\u987a\u8def\u628a\u5076\u6570\u5757\u8df3\u5b8c\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u8fd9\u6837\u5c31\u8d77\u5230\u4e86\u4f18\u5316\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u6548\u679c\uff0c\u4e5f\u53ef\u4ee5\u5b8c\u7f8e\u7684\u901a\u8fc7\u7b2c\u4e00\u7bc7\u9898\u89e3\u4e2d\u7ed9\u51fa\u7684hack\u6837\u4f8b\u3002",
        "postTime": 1667824910,
        "uid": 453460,
        "name": "End1essSummer",
        "ccfLevel": 6,
        "title": "Points on Plane\u9898\u89e3"
    },
    {
        "content": "**Solution**\n\n\u5bf9\u4e8e\u8f93\u5165\u7684\u6bcf\u4e00\u4e2a\u70b9 $(x_i, y_i)$ \u53ef\u4ee5\u5c06\u5176\u770b\u505a\u4e3a\u4e00\u4e2a\u201c\u533a\u95f4\u201d $[x_i, y_i]$\u3002\u7136\u540e\u8dd1\u83ab\u961f\u3002\n\n\u7136\u800c\u83ab\u961f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\mathcal O(n\\times \\sqrt n)$ \u7684\uff0c\u8fd9\u6837\u660e\u663e\u4f1a\u8d85\u65f6\u3002\n\n\u7136\u540e\u770b\u9898\u89e3\u53d1\u73b0\u83ab\u961f\u6709\u4e00\u4e2a\u795e\u5947\u7684\u7384\u5b66\u4f18\u5316\uff1a\u5f53\u5f53\u524d\u5757\u7684\u7f16\u53f7\u4e3a\u5947\u6570\u7684\u65f6\u5019\uff0c\u6309\u7167\u7eb5\u5750\u6807\u964d\u5e8f\u6392\u5217\uff0c\u5426\u5219\u6309\u7167\u7eb5\u5750\u6807\u5347\u5e8f\u6392\u5217\u3002\n\n\u7136\u540e CodeForces \u7684\u8bc4\u6d4b\u673a\u8dd1\u7684\u5f88\u5feb\uff0c\u5c31\u8fc7\u53bb\u4e86\u3002\n\n\u6ce8\u610f\uff1a\u6bcf\u4e00\u4e2a\u5757\u662f\u6309\u7167 $x_i$ \u4ece\u5c0f\u5230\u5927\u5206\u7684\uff01\n\n[\u83ab\u961f\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790](https://blog.csdn.net/qq_39562952/article/details/90376886)\n\n**Code**\n\n```cpp\n// Think twice, code once.\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nstruct Node {\n    int l, r, id;\n};\nvector <Node> z[1145];\n\nsigned main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(nullptr);\n    mt19937 gen(chrono::system_clock::now().time_since_epoch().count());\n    uniform_int_distribution <int> rnd(1000, 1000);\n    int n, mx = 0;\n    cin >> n;\n    int block = rnd(gen); // \u8c03\u6574\u5757\u957f\n    for (int i = 1; i <= n; i ++) {\n        Node p;\n        cin >> p.l >> p.r;\n        p.id = i;\n        z[p.l / block].emplace_back(p);\n        // mx = max(mx, i / block);\n    }\n    for (int i = 0; i <= block; i ++)\n        if (i & 1)\n            sort (begin(z[i]), end(z[i]), [&] (const Node &lhs, const Node &rhs) {\n                return lhs.r < rhs.r;\n            });\n        else\n            sort (begin(z[i]), end(z[i]), [&] (const Node &lhs, const Node &rhs) {\n                return lhs.r > rhs.r;\n            });\n    for (int i = 0; i <= block; i ++)\n        for (int j = 0; j < z[i].size(); j ++)\n            cout << z[i][j].id << ' ';\n    cout << '\\n';\n    return 0;\n}\n\n```\n\n\n\n\n\n",
        "postTime": 1659055835,
        "uid": 378467,
        "name": "willem248",
        "ccfLevel": 5,
        "title": "CF576C"
    },
    {
        "content": "\u9898\u76ee\u8ba9\u6211\u4eec\u6c42\u66fc\u54c8\u987f\u8ddd\u79bb $\\text{dist}\\le 2.5 \\times 10^9$ \u3002\n\n\u5b9e\u9645\u4e0a\u5c31\u662f\u8ba9\u8fd9\u4e2a\u66fc\u54c8\u987f\u8ddd\u79bb\u5c3d\u53ef\u80fd\u7684\u5c0f\uff0c\u6bd5\u7adf\u5982\u679c\u4f60\u80fd\u8fbe\u5230\u6700\u4f18\u7684\u8bdd\u8fd9\u4e2a\u8fd9\u4e2a\u9650\u5236\u80af\u5b9a\u6ca1\u7528\u3002\n\n\u90a3\u600e\u4e48\u505a\uff0c\u5982\u679c\u4f60\u53bb\u95ee\u4e00\u4e2a\u521d\u5b66\u8005\u7684\u8bdd\u4ed6\u80af\u5b9a\u544a\u8bc9\u4f60 **\u6392\u5e8f** \u5c31\u884c\u4e86\u3002\n\n\u5177\u4f53\u600e\u4e48\u6392\u5e8f\u5462\uff1f\u5148\u6309\u7167 $x$ \u6392\u5e8f\uff0c\u5982\u679c\u8981\u662f\u76f8\u7b49\u7684\u8bdd\u6309\u7167 $y$ \u6765\u6392\u5e8f\u5457\u3002\n\n\u4f46\u8fd9\u6837\u663e\u7136\u662f\u9519\u7684\uff0c\u53ea\u8981\u4f60\u6570\u636e\u8de8\u5ea6\u8db3\u591f\u5927\uff0c\u90a3\u5c31\u6ca1\u8f99\u4e86\u3002\n\n\u90a3\u8fd9\u6837\u662f\u5426\u610f\u5473\u7740\u6392\u5e8f\u884c\u4e0d\u901a\u5462\uff1f\u7b54\u6848\u662f\u4e0d\u4e00\u5b9a\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u66fc\u54c8\u987f\u8ddd\u79bb\u6700\u5c0f\uff0c\u610f\u5473\u7740\u6211\u4eec\u8981\u628a\u8fd9\u4e9b\u70b9\u5206\u5757\uff0c\u4f7f\u5f97\u5757\u5185\u7684\u8d21\u732e\u8db3\u591f\u5c0f\uff0c\u4e24\u4e2a\u5757\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e5f\u8db3\u591f\u5c0f\u3002\n\n\u7136\u540e\u6211\u4eec\u53c8\u53d1\u73b0\uff0c\u5982\u679c\u6211\u4eec\u628a\u70b9 $(x,y)$ \u770b\u505a\u4e00\u4e2a\u533a\u95f4 $[l,r]$ \uff0c\u90a3\u4e48\u5047\u8bbe\u6211\u4eec\u77e5\u9053\u4e86 $[l,r]$ \u7684\u7b54\u6848\uff0c\u90a3\u4e48 $[l+1,r],[l-1,r],[l,r+1],[l,r-1]$ \u7684\u7b54\u6848\u6211\u4eec\u90fd\u53ef\u4ee5\u6c42\u3002\u56e0\u4e3a\u662f\u76f8\u90bb\u7684\u70b9\uff0c\u6240\u4ee5\u8f6c\u79fb\u5230\u8fd9\u4e9b\u7b54\u6848\u7684\u590d\u6742\u5ea6\u662f $O(1)$ \u7684\u3002\n\n\u90a3\u4e48\u4e00\u4e2a\u7b97\u6cd5\u5c31\u663e\u7136\u4e86\uff0c\u83ab\u961f\u3002\n\n\u65e2\u7136\u662f\u83ab\u961f\u5c31\u5fc5\u987b\u8003\u8651\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u4f55\u6392\u5e8f\uff1f\n\n\u663e\u7136\u6309\u7167\u521a\u624d\u8bb2\u7684\u6392\u5e8f\u65b9\u6cd5\u662f\u884c\u4e0d\u901a\u7684\uff0c\u90a3\u4e48\u83ab\u961f\u8fd8\u6709\u54ea\u4e9b\u5e38\u89c1\u7684\u6392\u5e8f\u65b9\u6cd5\u5462\uff1f\u5947\u5076\u6392\u5e8f\uff01\n\n\u7136\u540e\u5c31\u505a\u5b8c\u4e86\u3002\n\n\u6700\u540e\u6ce8\u610f\u8c03\u4e0b\u5757\u957f\u5427\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int N=1e6+10;\nint n,block;\nstruct node\n{\n\tint l,r,id,ans;\n}ask[N];\nbool cmp(node x,node y)\n{\n    if(x.ans==y.ans)\n\t{\n        if (x.ans&1==1) return x.r<y.r;\n        else return x.r>y.r;\t\n    }\n    else return x.ans<y.ans;\n}\n\nint main()\n{\n\tios::sync_with_stdio(false);\n\tcin>>n;\n\tblock=1000;\n\tfor(int i=1;i<=n;i++) \n\t{\n\t\tcin>>ask[i].l;\n\t\tcin>>ask[i].r;\n\t\task[i].id=i;\n\t\task[i].ans=(ask[i].l-1)/block+1;//\u5c5e\u4e8e\u54ea\u4e2a\u5757 \n\t}\n\tsort(ask+1,ask+1+n,cmp);\n\tfor(int i=1;i<=n;i++) cout<<ask[i].id<<\" \";\n\treturn 0;\n}\n```\n\n\u770b\u5230\u8fd9\u4e2a\u4ee3\u7801\u80af\u5b9a\u4f1a\u6709\u4eba\u95ee\uff0c\u8bf6\u83ab\u961f\u66f4\u65b0\u7b54\u6848\u4e0d\u5e94\u8be5\u662f\n\n```cpp\n    while (l > q.l) move(--l, 1);\n    while (r < q.r) move(r++, 1);\n    while (l < q.l) move(l++, -1);\n    while (r > q.r) move(--r, -1);\n```\n\n\u8fd9\u6837\u7684\u5417\uff1f\n\n\u4f46\u4e0e\u5176\u4ed6\u7684\u9898\u4e0d\u540c\uff0c\u8fd9\u9053\u9898\u8981\u6c42\u7ed9\u51fa\u7684\u662f **\u6392\u5217** \u6240\u4ee5\u5e76\u4e0d\u9700\u8981\u66f4\u65b0\u7b54\u6848\u3002",
        "postTime": 1655518203,
        "uid": 369904,
        "name": "zplqwq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF576C Points on Plane"
    },
    {
        "content": "\u8fd9\u9053\u9898\u662f\u9053\u601d\u7ef4\u9898\n\n\u9996\u5148\u662f\u9898\u610f\uff1a\u5b9a\u4e49\u66fc\u54c8\u987f\u8ddd\u79bb\u4e3a\u4e24\u70b9\u4e4b\u95f4x\u5750\u6807\u5dee\u7684\u7edd\u5bf9\u503c\u4e0ey\u5750\u6807\u5dee\u7684\u7edd\u5bf9\u503c\uff0c\u5728\u5b9a\u4e49\u54c8\u5bc6\u987f\u8def\u5f84\u4e3a\u6240\u6709\u76f8\u90bb\u4e24\u70b9\u95f4\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u4e4b\u548c\uff0c\u7ed9\u51fa\u4e00\u4e9b\u70b9\u7684xy\u5750\u6807\uff0c\u6c42\u4e00\u4e2a\u70b9\u6392\u5217\u4f7f\u54c8\u5bc6\u987f\u8def\u5f84\u5c0f\u4e8e25*1e8\n\n\u9996\u5148\u770b\u5230\u70b9\u7684xy\u5750\u6807\u5747\u57281e6\u4ee5\u5185\uff0c\u7136\u540e\u5982\u679c\u6309\u7167\u76f4\u63a5\u4f18\u5148x\u518dy\u7684\u987a\u5e8f\u6392\u5e8f\uff0c\u53ea\u9700\u8981\u4e00\u7ec4x\u5750\u68071-5e5\u7684\u6570\u636e\uff0c\u6bcf\u4e2ax\u5750\u6807\u7684y\u5750\u6807\u4e3a1e6\u548c0\uff0c\u7136\u540e\u8ddd\u79bb\u5c31\u88ab\u5361\u5230\u4e865e11\u3002\n\n\u867d\u7136\u4e0a\u9762\u7684\u601d\u60f3\u6709\u9519\u8bef\uff0c\u4f46\u662f\u662f\u6709\u501f\u9274\u610f\u4e49\u7684\uff0c\u5982\u679c\u5c06\u54c8\u5bc6\u987f\u8def\u5f84\u7406\u89e3\u4e3a\u590d\u6742\u5ea6\uff0c\u957f\u5ea6\u7406\u89e3\u4e3a\u53d8\u91cf\uff0c\u8fd9\u663e\u7136\u662fn^2\u7684\uff0c\u7136\u540e\u4f60\u4f1a\u60f3\u5230\u4e00\u4e9b\u4f18\u5316\u7684\u65b9\u6cd5\uff0c\u6bd4\u5982\u8bf4\u83ab\u961f\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u6839\u636e\u83ab\u961f\u7684\u601d\u60f3\u5c06x\u5750\u6807\u5206\u5757\uff0c\u5206\u62100-999,1000-1999\u2026\u2026\u76841000\u5757\uff0c\u6bcf\u5757\u91cc\u6309\u7167y\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u6392\u5e8f\uff0c\u8fd9\u6837\u5b50\u5757\u5185y\u662f\u5355\u8c03\u9012\u589e\u7684\uff0c\u6700\u591a\u589e\u59271e6\uff0cx\u5c31\u7b97\u4e0a\u4e0b\u4e71\u8df3\uff0c\u4e5f\u6700\u591a\u53d8\u53161e3*1e3=1e6\uff0c\u603b\u53d8\u5316\u6700\u591a2e9\n\n\u4f46\u662f\u8fd8\u662f\u6709\u70b9\u9505\uff0c\u5c31\u662f\u5757\u4e0e\u5757\u4e4b\u95f4\u5207\u6362\u7684\u65f6\u5019\uff0c\u5982\u679c\u662f\u4ece\u6700\u5927y\u5207\u5230\u4e0b\u4e00\u5750\u6807\u6700\u5c0fy\uff0c\u6700\u591a\u8981\u8df31e6\uff0c\u603b\u53d8\u5316\u4f1a\u591a\u589e\u52a01e9\n\n\u6240\u4ee5\u6309\u7167\u4e00\u4e2a\u5757y\u9012\u589e\uff0c\u4e0b\u4e00\u4e2a\u5757y\u9012\u51cf\u7684\u987a\u5e8f\u6392\u5217\uff0c\u8fd9\u6837\u5b50\u5c31\u7a33\u4e86\n\n\u7136\u540e\u4f60\u5c31\u80fdA\u6389\u4ed6\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n\nstruct node\n{\n\tint x,y,kd;\n};\n\nvector<node> g[1010];\nint n;\n\nint cmp1(node x,node y)\n{\n\treturn x.y<y.y;\n}\n\nint cmp2(node x,node y)\n{\n\treturn x.y>y.y;\n}\n\nint main()\n{\n\tnode tmp;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d%d\",&tmp.x,&tmp.y);\n\t\ttmp.kd=i;\n\t\tg[tmp.x/1000].push_back(tmp);\n\t}\n\tfor(int i=0;i<=1000;i++)\n\t{\n\t\tif(i&1)\n\t\t{\n\t\t\tsort(g[i].begin(),g[i].end(),cmp1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsort(g[i].begin(),g[i].end(),cmp2);\n\t\t}\n\t}\n\tfor(int i=0;i<=1000;i++)\n\t{\n\t\tfor(int j=0;j<g[i].size();j++)\n\t\t{\n\t\t\tprintf(\"%d \",g[i][j].kd);\n\t\t}\n\t}\n}\n```",
        "postTime": 1532564695,
        "uid": 48740,
        "name": "Styx",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF576C \u3010Points on Plane\u3011"
    }
]