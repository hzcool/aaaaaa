[
    {
        "content": "\u6b64\u9898\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u8d39\u7528\u6d41\n\n\u6211\u4eec\u8003\u8651\u5efa\u51fa\u4e00\u5f20 $n+2$ \u4e2a\u70b9\u7684\u56fe\uff08\u672c\u6587\u5b57\u7b26\u4e32\u4e0b\u6807\u4ece $1$ \u5f00\u59cb\uff09\n\n\u9996\u5148\u5bf9\u4e8e $s$ \u7684\u4e00\u4e2a\u5b50\u4e32 $s_{l\\dots r}$\uff0c\u5982\u679c\u5b83\u53ef\u4ee5\u548c\u4e00\u4e2a\u6743\u503c\u4e3a $w$  \u7684\u4e32\u5339\u914d\u4e0a\uff0c\u90a3\u4e48\u5c31\u5efa\u7acb\u4e00\u6761\u4ece $l$ \u4e2a\u70b9\u51fa\u53d1\uff0c\u8fde\u5411\u7b2c $r+1$ \u4e2a\u70b9\uff0c\u6d41\u91cf\u4e3a1\uff0c\u8d39\u7528\u4e3a $w$ \u7684\u8fb9\uff1b\n\n\u7136\u540e\uff0c\u6211\u4eec\u5bf9\u4e8e\u6240\u6709\u7684 $1 \\le i \\le n+1$\uff0c\u5efa\u7acb\u4e00\u6761\u4ece $i$ \u53f7\u70b9 \u51fa\u53d1\uff0c\u8fde\u5411 $i+1$ \u53f7\u70b9\uff0c\u6d41\u91cf\u4e3a $x$ \uff08\u5982\u9898\u76ee\u6240\u7ed9\uff0c\u4e00\u4e2a\u5b57\u7b26\u80fd\u88ab\u8986\u76d6\u7684\u6700\u5927\u6b21\u6570\uff09\uff0c\u8d39\u7528\u4e3a0\u3002\n\n\u7136\u540e\u4ee5 $1$ \u53f7\u70b9\u4e3a\u6e90\u70b9\uff0c$n+2$ \u53f7\u70b9\u4e3a\u6c47\u70b9\uff0c\u8dd1\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u7136\u540e\u89e3\u91ca\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u5efa\u56fe\u662f\u6b63\u786e\u7684\uff1a\n\n\u5efa\u7acb\u4ece $l$ \u5230 $r$\uff0c\u6d41\u91cf\u4e3a $1$ \u7684\u8fb9\u5f88\u597d\u7406\u89e3\uff0c\u5c31\u662f\u4e3a\u4e86\u6ee1\u8db3\u9898\u76ee\u4e2d\u6240\u7ed9\u7684\u201c\u6bcf\u4e2a\u4e32\u5728\u6bcf\u4e2a\u4f4d\u7f6e\u53ea\u80fd\u5339\u914d\u4e00\u6b21\u201d\u7684\u6761\u4ef6\uff1b\n\n\u90a3\u4e48\u4e3a\u4ec0\u4e48\u5efa\u7acb\u4ece $i$ \u5230 $i+1$\uff0c\u6d41\u91cf\u4e3a $x$ \u7684\u8fb9\u5c31\u53ef\u4ee5\u6ee1\u8db3\u9898\u76ee\u4e2d\u8981\u6c42\u201c\u4e00\u4e2a\u5b57\u7b26\u80fd\u88ab\u8986\u76d6\u7684\u6700\u5927\u6b21\u6570\u4e3a $x$ \u201d\u7684\u6761\u4ef6\u5462\uff1f\n\n\u6211\u4eec\u8003\u8651\u4e00\u4e0b\uff0c\u628a\u90a3 $n+1$ \u4e2a\u70b9\u5e73\u94fa\u5728\u4e00\u4e2a\u5750\u6807\u8f74\u4e0a\uff0c\u8fd9\u5f20\u6d41\u91cf\u7f51\u7edc\u5927\u6982\u957f\u6210\u4ec0\u4e48\u6837\uff1a\uff08\u6837\u4f8b\uff0c\u8fb9\u7684\u65b9\u5411\u90fd\u662f\u4ece\u524d\u5f80\u540e\uff0c\u7eff\u8272\u4e3a\u8d39\u7528\uff0c\u84dd\u8272\u4e3a\u6d41\u91cf\uff09\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/e8ircc2w.png)\n\n\n\u7136\u540e\u6211\u4eec\u518d\u5c1d\u8bd5\u7740\u628a\u8fd9\u5f20\u56fe\u62cd\u6241\u3002\n\n\u5982\u679c\u5bf9\u4e8e\u4e00\u4e2a\u70b9\uff0c\u5b83\u5bf9\u5e94\u7684\u5b57\u7b26\u51fa\u73b0\u4e86\u591a\u4e8e $x$ \u6b21\uff0c\u4f1a\u51fa\u73b0\u4ec0\u4e48\u60c5\u51b5\uff1f\n\n\u5b83\u4e0a\u9762\u90a3\u4e9b\u201c\u9ad8\u901f\u516c\u8def\u201d\u4e0a\u7684\u6d41\u91cf\uff0c\u6700\u7ec8\u4e00\u5b9a\u4f1a\u90fd\u6d41\u5230\u201c\u4e3b\u8def\u201d\u4e0a\uff01\n\n\u7136\u800c\uff0c\u5982\u679c\u4ed6\u5bf9\u5e94\u4e86\u591a\u4f59 $x$ \u6b21\uff0c\u90a3\u4e48\u5b83\u4e0a\u65b9\u7684\u201c\u9ad8\u901f\u516c\u8def\u201d\u4e0a\u7684\u6d41\u91cf\u5c31\u4f1a\u5927\u4e8e $x$\uff0c\u5c31\u8d85\u8fc7\u4e86\u4e3b\u8def\u4e0a\u76f8\u90bb\u4e24\u70b9\u4e4b\u95f4\u6d41\u91cf $\\le x$ \u7684\u9650\u5236\u3002\n\n\u90a3\u4e48\u4e3a\u4ec0\u4e48\u8981\u5efa\u7acb\u8fd9\u770b\u4f3c\u591a\u4f59\u7684\u7b2c $n+2$ \u4e2a\u8282\u70b9\u5462\uff1f\n\n\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u4e07\u4e00\u6709\u5f88\u591a\u9ad8\u901f\u516c\u8def\u5728 $n+1$ \u53f7\u8282\u70b9\u4e0a\u624d\u4e0b\u6765\uff0c\u8fd9\u5c31\u4e0d\u4f1a\u53d7\u5230\u4e3b\u8def\u7684\u6d41\u91cf\u9650\u5236\u4e86\u554a\uff01\u6211\u4eec\u518d\u8fde\u4e00\u6761\u4ece $n+1$ \u53f7\u70b9\u901a\u5f80 $n+2$ \u53f7\u70b9\u7684\u8fb9\uff0c\u6d41\u91cf\u4e3a $x$\uff0c\u5c31\u6b63\u597d\u5904\u7406\u4e86\u8fd9\u79cd\u7279\u6b8a\u60c5\u51b5\u3002\n\n---\n\nCode:\n\n```cpp\n#include<bits/stdc++.h>\n#define mp make_pair\n#define pii pair<int,int>\nusing namespace std;\nconst int mxv=5005;\nconst int mxn=50005;\nconst int inf=1000000007;\nstruct edge{int to,cap,cost,rev;};\nint V,m,s,t;\nvector<edge>g[mxv],tmpg[mxv];\nint h[mxv],dist[mxv],prevv[mxv],preve[mxv];\ninline void add_edge(int from,int to,int cap,int cost){\n\tg[from].push_back((edge){to,cap,cost,g[to].size()});\n\tg[to].push_back((edge){from,0,-cost,g[from].size()-1});\n}\ninline int min_cost_flow(int f){\n\tint res=0;\n\tfill(h,h+V+1,0);\n\twhile(f>0){\n\t\tpriority_queue<pii,vector<pii>,greater<pii> >que;\n\t\tfill(dist,dist+V+1,inf);\n\t\tdist[s]=0;\n\t\tque.push(mp(0,s));\n\t\tfor(;!que.empty();){\n\t\t\tpii p=que.top();\n\t\t\tque.pop();\n\t\t\tint v=p.second;\n\t\t\tif(dist[v]<p.first)continue;\n\t\t\tfor(int i=0;i<g[v].size();++i){\n\t\t\t\tedge&e=g[v][i];\n\t\t\t\tif(e.cap>0 and dist[e.to]>dist[v]+e.cost+h[v]-h[e.to]){\n\t\t\t\t\tdist[e.to]=dist[v]+e.cost+h[v]-h[e.to];\n\t\t\t\t\tprevv[e.to]=v;\n\t\t\t\t\tpreve[e.to]=i;\n\t\t\t\t\tque.push(mp(dist[e.to],e.to));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(dist[t]==inf) return -1;\n\t\tfor(int v=1;v<=V;++v) h[v]+=dist[v];\n\t\tint d=f;\n\t\tfor(int v=t;v!=s;v=prevv[v]) d=min(d,g[prevv[v]][preve[v]].cap);\n\t\tf-=d;\n\t\tres+=d*h[t];\n\t\tfor(int v=t;v!=s;v=prevv[v]){\n\t\t\tedge&e=g[prevv[v]][preve[v]];\n\t\t\te.cap-=d;\n\t\t\tg[v][e.rev].cap+=d; \n\t\t}\n\t}\n\treturn res;\n}\nint lev[mxn],iter[mxn];\ninline void bfs(){\n\tmemset(lev,-1,sizeof(lev));\n\tqueue<int>q;\n\tlev[s]=0;\n\tq.push(s);\n\tfor(;q.size();){\n\t\tint v=q.front();q.pop();\n\t\tfor(int i=0;i<g[v].size();++i){\n\t\t\tedge&e=g[v][i];\n\t\t\tif(e.cap>0 and lev[e.to]<0){\n\t\t\t\tlev[e.to]=lev[v]+1;\n\t\t\t\tq.push(e.to);\n\t\t\t}\n\t\t}\n\t}\n}\nint dfs(int v,int t,int f){\n\tif(v==t)return f;\n\tfor(int&i=iter[v];i<g[v].size();++i){\n\t\tedge&e=g[v][i];\n\t\tif(e.cap>0 and lev[v]<lev[e.to]){\n\t\t\tint d=dfs(e.to,t,min(f,e.cap));\n\t\t\tif(d>0){\n\t\t\t\te.cap-=d;\n\t\t\t\tg[e.to][e.rev].cap+=d;\n\t\t\t\treturn d;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0; \n}\ninline int max_flow(){\n\tint flow=0;\n\tfor(;;){\n\t\tbfs();\n\t\tif(lev[t]==-1)return flow;\n\t\tmemset(iter,0,sizeof(iter));\n\t\tint f=0;\n\t\tfor(;;){\n\t\t\tf=dfs(s,t,inf);\n\t\t\tif(f==0) break;\n\t\t\tflow+=f;\n\t\t}\n\t}\n\treturn flow;\n}\ninline void prep(){for(int i=1;i<=V;++i)tmpg[i]=g[i];}\ninline void updg(){for(int i=1;i<=V;++i)g[i]=tmpg[i];}\nint n,w,x;string ss;\ninline void read(){\n\tcin>>n>>ss>>w;\n\tfor(int i=1;i<=w;++i){\n\t\tstring tt;int v;\n\t\tcin>>tt>>v;\n\t\tfor(int j=0;j<ss.size()-tt.size()+1;++j){\n\t\t\tbool fit=1;\n\t\t\tfor(int k=0;k<tt.size();++k){\n\t\t\t\tif(tt[k]!=ss[j+k]){\n\t\t\t\t\tfit=0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(fit==1)add_edge(j+1,j+tt.size()+1,1,-v);//\u8fd9\u662f\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u7684\u677f\u5b50\uff0c\u8981\u5904\u7406\u6700\u5927\u8d39\u7528\u6d41\u7684\u8bdd\uff0c\u5c31\u8981\u5c06\u8fb9\u6743\u53d6\u8d1f\uff0c\u8dd1\u6700\u5c0f\u8d39\u7528\u6d41\uff0c\u518d\u5c06\u7b54\u6848\u53d6\u8d1f\u5c31\u53ef\u4ee5\u4e86\n\t\t}\n\t}\n\ts=1,t=n+2;\n\tV=n+2;\n\tcin>>x;\n\tfor(int i=1;i<=n+1;++i)add_edge(i,i+1,x,0);\n\tprep();\n}\nint main(){\n\tread();\n\tint MaxFlow=max_flow();\n\tupdg();\n\tcout<<-min_cost_flow(MaxFlow)<<endl;\n}\n```",
        "postTime": 1643980530,
        "uid": 226760,
        "name": "RedLycoris",
        "ccfLevel": 7,
        "title": "CF717G Underfail \u9898\u89e3"
    },
    {
        "content": "\u533a\u95f4k\u8986\u76d6 \u5355\u7eaf\u5f62\u66b4\u529b\u5373\u53ef\n\n0-1\u7ebf\u6027\u89c4\u5212\n\n\u6bcf\u4e2a\u80fd\u8986\u76d6\u7684\u533a\u95f4\u770b\u4f5c\u4e00\u4e2a\u5e26\u67430-1\u53d8\u91cf\n\n\u5219\u7ea6\u675f\u6761\u4ef6\u4e3a\u6bcf\u4e2a\u4f4d\u7f6e\u6700\u591a\u53ef\u53d6\u7684\u53d8\u91cf\u6570<=x\n\n\u5feb\u7684\u98de\u8d77\n```cpp\n#include<cstdio>\n#include<map>\n#include<cstring>\n#include<algorithm>\n#include<iostream>\n#include<string>\n#include<vector>\nusing namespace std;\nusing namespace std;\n \nconst int N = 10000;\nconst double eps = 1e-8;\n \ndouble a[2100][N], ans[N];\nint n, m, t, id[N << 1];\n \nvoid pivot(int l, int e) {\n\tswap(id[e], id[n + l]);\n\tdouble k = a[l][e];\n\ta[l][e] = 1;\n\tfor (int i = 0; i <= n; ++i)\n\t\ta[l][i] /= k;\n\tfor (int i = 0; i <= m; ++i)\n\t\tif (i != l && fabs(a[i][e]) > eps)\n\t\t{\n\t\t\tk = a[i][e];\n\t\t\ta[i][e] = 0;\n\t\t\tfor (int j = 0; j <= n; ++j)\n\t\t\t\ta[i][j] -= a[l][j] * k;\n\t\t}\n}\nbool solve()\n{\n\tint i, j, l, e;\n\tdouble k, kk;\n\tfor (j = 1; j <= n; ++j)\n\t\tid[j] = j;\n\twhile (1)\n\t{\n\t\tint e = 0, l = 0;\n\t\tfor (int i = 1; i <= m; ++i)\n\t\t\tif (a[i][0] < -eps && (!l || (rand() & 1)))\n\t\t\t\tl = i;\n\t\tif (!l)break;\n\t\tfor (int i = 1; i <= n; ++i)\n\t\t\tif (a[l][i] < -eps && (!e || (rand() & 1)))\n\t\t\t\te = i;\n\t\tif (!e)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t\tpivot(l, e);\n\t}\n \n\twhile (1)\n\t{\n\t\tint e = 0, l = 0;\n\t\tdouble mi = 1e15;\n\t\tfor (int i = 1; i <= n; ++i)\n\t\t\tif (a[0][i] > eps)\n\t\t\t{\n\t\t\t\te = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tif (!e)\n\t\t\tbreak;\n\t\tfor (int i = 1; i <= m; ++i)\n\t\t\tif (a[i][e] > eps&&a[i][0] / a[i][e] < mi)\n\t\t\t{\n\t\t\t\tmi = a[i][0] / a[i][e];\n\t\t\t\tl = i;\n\t\t\t}\n\t\tif (!l)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t\tpivot(l, e);\n\t}\n\tfor (i = 1; i <= m; ++i)\n\t\tans[id[n + i]] = a[i][0];\n\treturn true;\n}\nmap<string, int> trans;\nint32_t main()\n{\n\tios::sync_with_stdio(false);\n\tcin.tie(NULL);\n\tcout.tie(NULL);\n\tcin >> m;\n\tstring ss,b;\n\tcin >> ss;\n\tint p,val,sss=ss.size();\n\tcin >> p;\n\tn = 0;\n\tint x;\n\tfor (int i = 1; i <= p; ++i)\n\t{\n\t\tcin >> b>> val ;\n\t\ttrans[b] = max(trans[b], val);\n\t}\n\tcin >> x;\n\tfor (int i = 1; i <= sss; ++i)\n\t\ta[i][0] = x;\n\tfor (auto &kk : trans)\n\t{\n\t\tauto pp = kk.first;\n\t\tint k2 = pp.size();\n\t\tbool flag = 1;\n\t\tfor (int i = 0; i <= sss - k2; ++i)\n\t\t{\n\t\t\tflag = 1;\n\t\t\tfor (int j = 0; j < k2; ++j)\n\t\t\t{\n\t\t\t\tif (ss[i + j] != pp[j])\n\t\t\t\t{\n\t\t\t\t\tflag = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (flag)\n\t\t\t{\n\t\t\t\tn++;\n\t\t\t\ta[0][n] = kk.second;\n\t\t\t\ta[sss + n][0] = 1;\n\t\t\t\ta[sss+n][n] = 1;\n\t\t\t\tm++;\n\t\t\t\tfor (int j = 0; j < k2; ++j)\n\t\t\t\t\ta[i + j + 1][n] = 1;\n\t\t\t}\n\t\t}\n\t}\n\tif (n == 0)\n\t\tcout << 0 << endl;\n\telse\n\t{\n\t\tsolve();\n\t\tcout << -(long long)(a[0][0]-0.1) << endl;\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1569584032,
        "uid": 154957,
        "name": "qiyue7",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF717G \u3010Underfail\u3011"
    }
]