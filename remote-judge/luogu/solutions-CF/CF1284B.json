[
    {
        "content": "### CF1284B\u9898\u89e3\n\n~~\u849f\u84bb\u7684\u7b2c\u4e8c\u7bc7\u9898\u89e3~~\n\n\u6211\u4eec\u8003\u8651\u4ee5\u4e0b\u51e0\u70b9\uff1a\n\n1. \u5982\u679c\u4e00\u4e2a\u6570\u5217**\u672c\u8eab\u5c31\u7b26\u5408\u8981\u6c42**\uff0c\u90a3\u4e48\u5b83\u8ddf\u8c01\u62fc\u8d77\u6765\u90fd**\u7b26\u5408\u8981\u6c42**\uff0c\u6211\u4eec\u5c31\u4e0d\u7528\u8003\u8651\u5b83\uff08\u540e\u9762\u51e0\u70b9\u9ed8\u8ba4\u4e0d\u662f\u8fd9\u79cd\u60c5\u51b5\uff09\n2. \u4e24\u4e2a\u6570\u5217$a,b$\u7b26\u5408\u8981\u6c42\u7684**\u5145\u8981\u6761\u4ef6**\u662f$a_{min}<b_{max}$\uff0c\u6240\u4ee5\u6211\u4eec\u5bf9\u4e8e\u4e00\u4e2a\u6570\u5217$a$\u53ea\u7528\u5b58\u4e0b$a_{min},a_{max}$\u5373\u53ef\n3. \u6240\u4ee5\u5bf9\u4e8e\u4e00\u4e2a\u6570\u5217$a$\uff0c**\u4e0d\u80fd\u63a5\u5728**$a$\u540e\u9762\u7684\u4e2a\u6570\u5b9e\u9645\u4e0a\u5c31\u662f\u6ee1\u8db3$a_{min}\\ge b_{max}$\u7684$b$\u7684\u4e2a\u6570\uff08\u8fd9\u91cc\u6211\u4eec\u8003\u8651**\u4e0d\u80fd\u6ee1\u8db3**$a$\u7684\u6570\u5217\u4e2a\u6570\u662f\u56e0\u4e3a\u6709\u7b2c\u4e00\u70b9~~\u8fd9\u6837\u6076\u5fc3\u7684\u5b58\u5728~~\uff0c\u5982\u679c\u8003\u8651**\u6ee1\u8db3**$a$\u7684\u6570\u5217\u4e2a\u6570\u7684\u8bdd\u4e0d\u597d\u8ba1\u7b97\uff09\n\n\u987a\u4fbf\u8bf4\u4e00\u58f0\uff1a \n\n## STL\u5927\u6cd5\u597d\uff01\n\n\u6211\u4eec\u53ef\u4ee5\u7528`upper_bound`\u6765\u8ba1\u7b97\u6570\u5217\u91cc\u9762\u5c0f\u4e8e\u67d0\u4e2a\u5b9a\u503c\u7684\u6570\uff08\u56e0\u4e3a\u5b83\u8fd4\u56de\u7684\u662f\u7b2c\u4e00\u4e2a\u5927\u4e8e\u5b83\u7684\u6570\u7684\u4f4d\u7f6e\uff0c\u628a\u8d77\u59cb\u4f4d\u7f6e\u4e00\u51cf\u5c31\u662f\u5c0f\u4e8e\u7b49\u4e8e\u5b83\u7684\u4e2a\u6570\u4e86\uff09\n\n\u4e0b\u9762\u7ed9AC\u4ee3\u7801\uff1a\n\n```C++\n#include<algorithm>\n#include<iostream>\n#include<climits>\n#define Inf INT_MAX\n#define N 100000\nusing namespace std;\ntypedef long long ll;\n\nint mx[N], mn[N];\nint main() {\n    bool flg;\n    ll n, l = 0, cnt = 0; cin >> n;\n    for (int i=0, m, x; i<n; i++) {\n        cin >> m, mx[l] = 0, mn[l] = Inf, flg = false;\n        for (int j=0; j<m; j++) {\n            cin >> x, mn[l] = min(mn[l], x), mx[l] = max(mx[l], x);\n            if (x > mn[l]) flg = true;  // \u9a8c\u8bc1\u662f\u4e0d\u662f\u7b2c\u4e00\u79cd\u60c5\u51b5\n        }\n        if (!flg) l++;  // \u5982\u679c\u662f\u7b2c\u4e00\u79cd\u60c5\u51b5\u5c31\u4e0d\u8bb0\u5f55\u5b83\u4e86\uff0c\u5426\u5219\u8bb0\u5f55\u4e0a\n    }\n    sort(mx, mx+l);  // \u6392\u5b8c\u5e8fupper_bound\u624d\u80fd\u7528\n    for (int i=0; i<l; i++)\n        cnt += upper_bound(mx, mx+l, mn[i]) - mx;  // \u52a0\u4e0a\u4e0d\u80fd\u6ee1\u8db3\u6570\u5217s_i\u7684\u4e2a\u6570\n    cout << n * n - cnt;  // \u7528\u603b\u65b9\u6848\u6570\u51cf\u53bb\u4e0d\u53ef\u884c\u7684\u65b9\u6848\u6570\uff08\u5bb9\u65a5\u539f\u7406\uff09\n    return 0;\n}\n```",
        "postTime": 1616846683,
        "uid": 360214,
        "name": "nalemy",
        "ccfLevel": 6,
        "title": "CF1284B\u9898\u89e3"
    },
    {
        "content": "### **\u9898\u610f\uff1a\u4e3a\u4e24\u4e2a\u5e8f\u5217\u7ecf\u8fc7\u62fc\u51d1\u7ec4\u5408\u540e\uff0c\u53ea\u8981\u5b58\u5728\u524d\u540e\u6709\u4e00\u5bf9\u5143\u7d20\u9012\u589e\u5173\u7cfb\uff0c\u95ee\u6709\u591a\u5c11\u5bf9\u8fd9\u6837\u7684\u5e8f\u5217\u3002**\n\n### **\u601d\u8def\uff1a\u6211\u662f\u53cd\u5411\u6765\u505a\u7684\uff0c\u5c31\u662f\u5148\u4ece\u6240\u7ed9\u5e8f\u5217\u4e2d\u627e\u51fa\u975e\u4e25\u683c\u9012\u51cf\u5e8f\u5217\uff0c\u4e24\u4e24\u7ec4\u5408\uff0c\u7ee7\u7eed\u627e\u975e\u4e25\u683c\u9012\u51cf\u5e8f\u5217\uff0c\u56e0\u4e3a\u53ea\u8981\u4e0d\u662f\u975e\u4e25\u683c\u9012\u51cf\u5e8f\u5217\uff0c\u5c31\u5b58\u5728\u524d\u540e\u6709\u4e00\u5bf9\u5143\u7d20\u9012\u589e\u5173\u7cfb\u3002\u5229\u7528\u7ed3\u6784\u8bb0\u5f55\u975e\u4e25\u683c\u9012\u51cf\u5e8f\u5217\u7684\u5f00\u5934\uff0c\u7ed3\u5c3e\uff0c\u6392\u5e8f\u540e\u5229\u7528\u4e8c\u5206\u4e24\u4e24\u7ec4\u5408\uff08\u4e24\u4e2afor\u5faa\u73af\u4f1a\u8d85\u65f6\uff09\uff0c\u627e\u975e\u4e25\u683c\u9012\u51cf\u5e8f\u5217\uff0c\u8bb0\u5f55\u4e2a\u6570sum\uff0c\u6700\u540e\u7b54\u6848\u5c31\u662fn\u65b9-sum\u3002**\n\n### **\u4ee3\u7801\u5982\u4e0b\uff1a**\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nstruct node\n{\n    int s,e;\n} num[100005];\nbool cmp(node a,node b)\n{\n    return a.s>b.s;\n}\nint bf(int i,int j,int k)\n{\n    int l=i,r=j;\n    while(l<=r)\n    {\n        int mid=l+r>>1;\n        if(num[k].e<num[mid].s)\n            l=mid+1;\n        else\n            r=mid-1;\n    }\n    return l;\n}\nint main()\n{\n    int ans,id=1,st,ed,te,flag,temp;\n    ll n,sum=0;\n    scanf(\"%lld\",&n);\n    for(int i=1; i<=n; ++i)\n    {\n        flag=0;\n        scanf(\"%d\",&ans);\n        scanf(\"%d\",&st);\n        temp=st;\n        if(ans!=1)\n        {\n            for(int j=2; j<=ans-1; ++j)\n            {\n                scanf(\"%d\",&te);\n                if(flag==0&&te>st)\n                    flag=1;\n                st=te;\n            }\n            scanf(\"%d\",&ed);\n            if(!flag)\n            {\n                if(st>=ed)\n                    num[id].s=temp,num[id++].e=ed;\n            }\n        }\n        else\n            num[id].s=st,num[id++].e=st;\n    }\n    sort(num+1,num+id,cmp);\n    for(int i=1; i<id; ++i)\n        sum+=id-bf(1,id-1,i);\n    cout<<n*n-sum<<endl;\n    return 0;\n}\n```\n\n",
        "postTime": 1578272645,
        "uid": 265539,
        "name": "Mint_Flipped",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1284B \u3010New Year and Ascent Sequence\u3011"
    },
    {
        "content": "# \u9898\u89e3 CF1284B \u3010New Year and Ascent Sequence\u3011\n\n[\u672c\u573a\u6bd4\u8d5b\u7684\u9898\u89e3](https://www.cnblogs.com/nblyz2003/p/12151883.html)\n\u9898\u76ee\u5927\u610f\uff1a\u7ed9\u4f60n\u4e2a\u5e8f\u5217\uff0c\u6bcf\u6b21\u53d6\u4efb\u610f\u4e24\u4e2a\u5e8f\u5217\uff08\u53ef\u4ee5\u53d6\u540c\u4e00\u4e2a\uff0c\u5e76\u4e14\u4ea4\u6362\u524d\u540e\u987a\u5e8f\u7b97\u4e0d\u540c\u79cd\uff09\u63a5\u8d77\u6765\uff08\u6bd4\u5982\u8bf4\u201811\u2019\u548c\u201822\u2019\u5c31\u662f\u20181122\u2019\uff09\u3002\u95ee\u8fd9n2\u4e2a\u63a5\u6210\u5e8f\u5217\u4e2d\u5171\u6709\u591a\u5c11\u4e2a\u5e8f\u5217\u4e2d\u5b58\u5728\u987a\u5e8f\u5bf9\u3002\n\n\u4e0d\u96be\u770b\u51fa\uff0c\u5982\u679c\u4e00\u4e2a\u5e8f\u5217\u4e2d\u672c\u8eab\u5b58\u5728\u987a\u5e8f\u5bf9\uff0c\u63a5\u6210\u7684\u5e8f\u5217\u4e5f\u80af\u5b9a\u5b58\u5728\u987a\u5e8f\u5bf9\u3002\n\n\u5224\u65ad\u65b9\u6cd5\n\nif(x > minx) flag = 1;\n\n \u5c06\u5b83\u4eec\u627e\u51fa\u6765\u540e\u76f4\u63a5\u7edf\u8ba1\u5165\u7b54\u6848\uff0c\u5957\u4e0a\u4e00\u4e2a\u5c0f\u5b66\u5b66\u7684\u5bb9\u65a5\u539f\u7406\n\nans = 1ll * 2 * cnt1 * n - 1ll * cnt1 * cnt1;\n\n \u7136\u540e\u4e3b\u8981\u95ee\u9898\u5c31\u662f\u8fd9\u4e9b\u5269\u4e0b\u7684\u6ca1\u6709\u987a\u5e8f\u5bf9\u7684\u5e8f\u5217\u3002\n\n\u5f88\u663e\u7136\u51e1\u662f\u6700\u5927\u503c\u6bd4\u8fd9\u4e2a\u5e8f\u5217\u6700\u5c0f\u503c\u5927\u7684\uff0c\u5c31\u53ef\u4ee5\u548c\u8fd9\u4e2a\u5e8f\u5217\u63a5\u8d77\u6765\u3002\n\n\u5c06\u6700\u5927\u503c\u6392\u5e8f\u540e\u4e8c\u5206\u4e00\u4e0b\u6700\u5c0f\u7684\u6700\u5927\u503c\u5c31\u597d\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <vector>\n#define rep(x, l, r) for(int x = l; x <= r; x++)\n#define repd(x, r, l) for(int x = r; x >= l; x--)\n#define clr(x, y) memset(x, y, sizeof(x))\n#define all(x) x.begin(), x.end()\n#define pb push_back\n#define mp make_pair\n#define MAXN 100005\n#define fi first\n#define se second\n#define SZ(x) ((int)x.size())\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef pair<int, int> pii;\nconst int INF = 1 << 30;\nconst int p = 1000000009;\nint lowbit(int x){ return x & (-x);}\nint fast_power(int a, int b){ int x; for(x = 1; b; b >>= 1){ if(b & 1) x = 1ll * x * a % p; a = 1ll * a * a % p;} return x % p;}\n\nvi a, b;\n\nint main(){\n\tint n;\n\tscanf(\"%d\", &n);\n\tint cnt1 = 0, cnt2 = 0;\n\trep(i, 1, n){\n\t\tint k;\n\t\tscanf(\"%d\", &k);\n\t\tint minx = INF, maxx = -INF;\n\t\tbool flag = 0;\n\t\trep(j, 1, k){\n\t\t\tint x;\n\t\t\tscanf(\"%d\", &x);\n\t\t\tif(x > minx) flag = 1;\n\t\t\tminx = min(minx, x);\n\t\t\tmaxx = max(maxx, x);\n\t\t}\n\t\tif(flag) cnt1++;\n\t\telse{\n\t\t\tcnt2++;\n\t\t\ta.pb(minx);\n\t\t\tb.pb(maxx);\n\t\t}\n\t}\t\n\tsort(all(b));\n\tll ans = 1ll * 2 * cnt1 * n - 1ll * cnt1 * cnt1;\n\trep(i, 0, SZ(b) - 1){\n\t\tans += cnt2 - (upper_bound(all(b), a[i]) - b.begin());\n\t}\n\tprintf(\"%I64d\\n\", ans);\n    return 0;\n}\n\n```\n",
        "postTime": 1578198343,
        "uid": 149312,
        "name": "wze\u63cd\u6241\u4e86nm",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1284B \u3010New Year and Ascent Sequence\u3011"
    },
    {
        "content": "\u5982\u679c\u4e00\u4e2a\u5e8f\u5217\u7b26\u5408\u8981\u6c42\uff0c\u90a3\u4e48\u5c06\u5b83\u548c\u4efb\u4f55\u4e00\u4e2a\u5176\u4ed6\u7684\u5e8f\u5217\u653e\u5728\u4e00\u8d77\u90fd\u6ee1\u8db3\u8981\u6c42\u3002\n\n\u5982\u679c\u5e8f\u5217$a$\uff0c$b$\u90fd\u4e0d\u7b26\u5408\u8981\u6c42\uff0c\u90a3\u4e48$a+b$\u7b26\u5408\u8981\u6c42\u5f53\u4e14\u4ec5\u5f53$max(b[j])>min(a[i])$\n\n\u53ef\u4ee5\u7528\u524d\u7f00\u548c/\u6811\u72b6\u6570\u7ec4\u7b49\u8bb0\u5f55\u4e0b\u6bcf\u4e2a\u4e0d\u7b26\u5408\u8981\u6c42\u7684\u5e8f\u5217\u7684\u6700\u5c0f\u503c\u3002\n\n\u6700\u540e\u5c06\u6bcf\u4e2a\u5e8f\u5217\u626b\u4e00\u904d\uff0c\u518d\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define re register\ninline int read(){\n\tre int t=0;\n\tre char v=getchar();\n\twhile(v<'0'||v>'9')v=getchar();\n\twhile(v>='0'&&v<='9'){\n\t\tt=(t<<3)+(t<<1)+(v^48);\n\t\tv=getchar();\n\t}\n\treturn t;\n}\nlong long n,m,l[100002],a[100002],v[100002],num[1000002],mn[100002],mx[100002],pp;\nlong long ans;\nint main(){\nn=pp=read();\nmemset(mn,127,sizeof(mn));\nfor(re int i=1;i<=n;++i){\n\tl[i]=read();\n\tfor(re int j=1;j<=l[i];++j){\n\t\ta[j]=read();\n\t\tif(a[j]>mx[i])mx[i]=a[j];\n\t\tif(a[j]<mn[i])mn[i]=a[j];\n\t\tif(j!=1&&a[j]>a[j-1]){\n\t\t\tv[i]=1;\n\t\t}\n\t}\n\tif(v[i])ans+=pp+pp-1,--pp;\n\telse ++num[mn[i]];\n}\nfor(re int i=1;i<=1000000;++i)num[i]+=num[i-1];\nfor(re int i=1;i<=n;++i){\n\tif(!v[i]){\n//\t\tcout<<i<<\" \"<<num[mx[i]-1]<<endl;\n\t\tans+=num[mx[i]-1];\n\t}\n}\nprintf(\"%lld\",ans);\n}\n\n```\n",
        "postTime": 1578193737,
        "uid": 41476,
        "name": "gyh20",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1284B \u3010New Year and Ascent Sequence\u3011"
    }
]