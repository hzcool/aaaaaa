[
    {
        "content": "~~\u6211\u5bb6\u7acb\u534e\u594f\u7279\u522b\u7231\u5403\u9ebb\u5a46\u8c46\u8150\uff0c\u6211\u5929\u5929\u505a\u7ed9\u5979\u5403\uff0c\u5979\u5403\u7684\u53ef\u9999\u4e86\uff01~~\n\n~~\u6211\u662f\u4e0d\u4f1a\u544a\u8bc9\u4f60\u6211\u662f\u56e0\u4e3a\u9898\u76ee\u540d\u79f0\u624d\u70b9\u8fdb\u6765\u7684\u3002~~\n\n\u4e00\u770b\u5230\u8fd9\u79cd\u591a\u6a21\u5f0f\u4e32\u5339\u914d\u7684\u95ee\u9898\uff0c\u5c31\u80fd\u60f3\u5230\u7528 AC \u81ea\u52a8\u673a\u3002\u7136\u540e\u53c8\u662f\u6c42 $[l,r]$ \u4e2d\u7684\u65b9\u6848\u6570\uff0c\u5c31\u80fd\u60f3\u5230\u662f\u6570\u4f4d dp\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49 $f(x,now,lim,p0,v)$ \u8868\u793a\u76ee\u524d\u8003\u8651\u5230\u4e86\u6570\u7684\u7b2c $x$ \u4f4d\uff0c\u5728 AC \u81ea\u52a8\u673a\u4e0a\u7684 $now$ \u70b9\uff0c\u662f/\u5426\u538b\u7740\u4e0a\u9650\uff0c\u73b0\u5728\u662f/\u5426\u5728\u524d\u5bfc $0$ \u4e2d\uff0c\u76ee\u524d\u6743\u503c\u662f $v$ \u7684\u65b9\u6848\u6570\u3002\u7b54\u6848\u5c31\u662f $f(1,root,0,0,0)$\u3002\n\n\u6211\u4eec\u8003\u8651\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u8f6c\u79fb\u3002\u6bcf\u6b21\u679a\u4e3e\u5f53\u524d\u4f4d\u586b\u4ec0\u4e48\u6570\u5b57\uff08\u6ce8\u610f\u8fd9\u9898\u6570\u5b57\u8303\u56f4\u662f $0\\sim m-1$\uff09\u3002\u7136\u540e AC \u81ea\u52a8\u673a\u4e0a\u8d70\u5230\u5bf9\u5e94\u5b50\u8282\u70b9\uff0c\u6743\u503c\u52a0\u4e0a\u5f53\u524d\u70b9\u7684 $ed$ \u503c\uff0c\u5982\u679c\u65b0\u6743\u503c $\\leq k$\uff0c\u5c31\u53ef\u4ee5\u63a5\u7740\u5f80\u4e0b\u8f6c\u79fb\u3002\n\n\u6709\u51e0\u4e2a\u5c0f\u7ec6\u8282\u9700\u8981\u6ce8\u610f\uff1a\u5982\u679c\u5f53\u524d\u4ecd\u7136\u5904\u4e8e\u524d\u5bfc $0$ \u4e2d\uff0c\u7b2c\u4e8c\u7ef4\u7684 $now$ \u662f\u4e0d\u9700\u8981\u52a8\u7684\u3002\u8fd8\u6709\u8ba1\u7b97\u65f6 $l$ \u9700\u8981\u51cf $1$\uff0c\u8981\u5c0f\u5fc3\u662f $m$ \u8fdb\u5236\u3002\n\n\u5f53\u7136\uff0c\u8fd9\u4e2a\u9898\u5982\u679c\u5199\u9012\u63a8\u7684\u8bdd\u8981\u6bd4\u8bb0\u5fc6\u5316\u641c\u7d22\u5feb\u5f88\u591a\u3002~~\u4f46\u4ed7\u7740 CF \u673a\u5b50\u5feb\u52a0\u4e0a $5s$ \u65f6\u9650\uff0c\u6211\u8fd8\u662f\u6210\u529f\u5361\u8fc7\u53bb\u4e86\u3002~~\n\n\u4e0b\u9762\u662f AC \u4ee3\u7801\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int M = 1e9+7ll;\n\n#define int long long\n\nint n,m,k,lenl,dl[205],lenr,dr[205],ans;\nint root=0,cnt,ch[205][20],ed[205],fail[205];\nint len,a[205];\nint dig[205],f[205][205][2][205];\n\nvoid insert(int n,int v)\n{\n\tint now=root;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(!ch[now][a[i]])\n\t\t\tch[now][a[i]] = ++cnt;\n\t\tnow = ch[now][a[i]];\n\t}\n\ted[now] += v;\n\ted[now] %= M; \n}\n\nvoid getfail()\n{\n\tfail[root] = root;\n\tqueue<int> q;\n\tfor(int i=0;i<m;i++)\n\t\tif(ch[root][i])\n\t\t{\n\t\t\tfail[ch[root][i]] = root;\n\t\t\tq.push(ch[root][i]);\n\t\t}\n\twhile(!q.empty())\n\t{\n\t\tint x=q.front(); q.pop();\n\t\tfor(int i=0;i<m;i++)\n\t\t{\n\t\t\tif(ch[x][i])\n\t\t\t{\n\t\t\t\tfail[ch[x][i]] = ch[fail[x]][i];\n\t\t\t\tq.push(ch[x][i]);\n\t\t\t\ted[ch[x][i]] += ed[fail[ch[x][i]]];\n\t\t\t\ted[ch[x][i]] %= M;\n\t\t\t}\n\t\t\telse\n\t\t\t\tch[x][i] = ch[fail[x]][i];\n\t\t}\n\t}\n}\n\nint dp(int x,int now,int lim,int p0,int v)\n{\n\tif(x==len+1)\n\t\treturn (p0 && v<=k);\n\tif(lim && f[x][now][p0][v]>=0)\n\t\treturn f[x][now][p0][v];\n\tint res=0;\n\tfor(int i=0;i<m;i++)\n\t{\n\t\tif(!lim && i>dig[x])\n\t\t\tbreak;\n\t\tint to=ch[now][i],v1=v;\n\t\tif(p0 || i>0)\n\t\t\tv1 += ed[to];\n\t\tif(v1<=k)\n\t\t\tres += dp(x+1,((p0 || i>0) ? to : now),(lim || i<dig[x]),(p0 || i>0),v1);\n\t\tres %= M;\n\t}\n\tif(lim)\n\t\tf[x][now][p0][v] = res%M;\n\treturn res%M;\n}\n\nsigned main()\n{\n\tcin>>n>>m>>k;\n\tcin>>lenl;\n\tfor(int i=1;i<=lenl;cin>>dl[i++]);\n\tfor(int i=lenl;i>=1;i--)\n\t{\n\t\tif(dl[i]>0)\n\t\t{\n\t\t\tdl[i]--;\n\t\t\tbreak;\n\t\t}\n\t\tdl[i] = m-1;\n\t}\n\tcin>>lenr;\n\tfor(int i=1;i<=lenr;cin>>dr[i++]);\n\tfor(int i=1,v;i<=n&&cin>>len;i++)\n\t{\n\t\tfor(int j=1;j<=len;cin>>a[j++]);\n\t\tcin>>v;\n\t\tinsert(len,v);\n\t}\n\tgetfail();\n\tlen = lenr;\n\tfor(int i=1;i<=lenr;i++)\n\t\tdig[i] = dr[i];\n\tmemset(f,-1,sizeof(f));\n\tans = dp(1,root,0,0,0);\n\tlen = lenl;\n\tfor(int i=1;i<=lenl;i++)\n\t\tdig[i] = dl[i];\n\tmemset(f,-1,sizeof(f));\n\tans = (ans-dp(1,root,0,0,0)+M)%M;\n\tcout<<ans<<endl;\n\t\n\treturn 0;\n}\n```\n\n\u795d\u5927\u5bb6 AC \u6109\u5feb\uff01",
        "postTime": 1631435149,
        "uid": 123298,
        "name": "kouylty",
        "ccfLevel": 7,
        "title": "\u9898\u89e3\u3010CF433E Tachibana Kanade's Tofu\u3011"
    },
    {
        "content": "[\u5b89\u5229blog](https://ctz45562.github.io/2019/10/15/Codeforces433E-Tachibana-Kanade-s-Tofu/)\n\n\n[\u4f20\u9001\u95e8](https://www.luogu.org/problem/CF433E)\n\n\u8fd9\u7ffb\u8bd1\u8ddf\u90a3\u5565\u4e00\u6837\u3002\u3002\u3002\u590d\u8ff0\u4e00\u904d\u9898\u610f\uff1a\n\n> \u7ed9\u5b9a$n$\u4e2a$m$\u8fdb\u5236\u6570\uff08\u53ef\u80fd\u5305\u542b\u524d\u5bfc$0$\uff09\uff0c\u6bcf\u4e2a\u6570\u6709\u4e00\u4e2a\u4ef7\u503c$v_i$\u3002\u5b9a\u4e49\u4e00\u4e2a$m$\u8fdb\u5236\u6570\u7684\u6743\u503c\u4e3a$\\sum\\limits_{i=1}^ncnt_i\\times v_i$\uff0c\u5176\u4e2d$cnt_i$\u4e3a\u7b2c$i$\u4e2a\u6570\u5728\u8be5\u6570\u4e2d\u4f5c\u4e3a\u5b50\u4e32\u51fa\u73b0\u7684\u6b21\u6570\u3002\u6c42$[L,R]$\u4e2d\uff08$L,R$\u5747\u4e3a$m$\u8fdb\u5236\u6570\uff09\uff0c\u6743\u503c\u4e0d\u8d85\u8fc7$K$\u4e14\u4e0d\u542b\u524d\u5bfc\u96f6\u7684$m$\u8fdb\u5236\u6570\u7684\u4e2a\u6570\u3002\n\n\u5f88\u5957\u8def\u7684$AC$\u81ea\u52a8\u673a\u4e0a\u6570\u4f4d$DP$\u3002\n\n\u8bbe$f(i,0/1,0/1,j,k)$\u4e3a\u586b\u5230\u7b2c$i$\u4f4d\u3001\u662f\u5426\u9876\u4e0a\u754c\u3001\u662f\u5426\u6709\u524d\u5bfc\u96f6\u3001\u4f4d\u4e8e$AC$\u81ea\u52a8\u673a\u7684$j$\u8282\u70b9\u3001\u6743\u503c\u4e3a$k$\u7684\u65b9\u6848\u6570\u3002\n\n\u679a\u4e3e\u6570\u5b57\u5237\u8868\u8f6c\u79fb\u5373\u53ef\u3002\n\n\u8f6c\u79fb\u65f6\u8981\u7279\u522b\u6ce8\u610f\u524d\u5bfc\u96f6\u3002\u5982\u679c\u8f6c\u79fb\u540e\u7684\u72b6\u6001\u4f9d\u7136\u6709\u524d\u5bfc\u96f6\uff0c\u6743\u503c$k$\u4e0d\u4f1a\u6539\u53d8\uff0c**$AC$\u81ea\u52a8\u673a\u4e5f\u4e0d\u4f1a\u5f80\u4e0b\u8d70**\uff0c\u56e0\u4e3a\u8fd9\u70b9\u8c03\u4e86\u4e00\u4e2a\u5c0f\u65f6$QAQ$\u3002\n\n\u590d\u6742\u5ea6$O(4lenK\\sum|S|m)$\uff0c\u7b97\u51fa\u6765\u662f$O(1.6\\times 10^9)$\uff0c\u5237\u8868\u65f6\u8df3\u8fc7\u4e0d\u5408\u6cd5\u72b6\u6001\u518d\u52a0\u4e0a\u6eda\u52a8\u6570\u7ec4\u5c31\u80fd\u8fc7\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n\n``` cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n\n#define maxn 205\n#define inf 0x3f3f3f3f\n\nconst int mod = 1e9 + 7;\n\nusing namespace std;\n\ninline int read(){\n\tint x=0,y=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')y=1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9')x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n\treturn y?-x:x;\n}\n#define son(x,y) son[x][y]\nint en[maxn],line[maxn],son[maxn][20],pre[maxn],L[maxn],R[maxn],s[maxn],f[2][2][2][maxn][505],cnt=1,m,K;\nvoid insert(int len,int v){\n\tint node=1;\n\tfor(register int i=1;i<=len;++i){\n\t\tif(!son(node,s[i]))son(node,s[i])=++cnt;\n\t\tnode=son(node,s[i]);\n\t}\n\ten[node]+=v;\n}\nvoid build(){\n\tint head=0,tail=1;\n\tline[1]=1;\n\tfor(register int i=0;i<m;++i)son(0,i)=1;\n\twhile(head<tail){\n\t\tint node=line[++head],x;\n\t\ten[node]+=en[pre[node]];\n\t\tfor(register int i=0;i<m;++i){\n\t\t\tx=son(node,i);\n\t\t\tif(x)pre[x]=son(pre[node],i),line[++tail]=x;\n\t\t\telse son(node,i)=son(pre[node],i);\n\t\t}\n\t}\n}\ninline void add(int &x,int y){x+=y;if(x>=mod)x-=mod;}\nint solve(int *tp){\n\tint len=tp[0],ans=0;\n\tmemset(f,0,sizeof f);\n\tf[len&1][1][1][1][0]=1;\n\tfor(register int i=len;i;--i)\n\t\tfor(register int j=0;j<2;++j)\n\t\t\tfor(register int k=0;k<2;++k)\n\t\t\t\tfor(register int l=1;l<=cnt;++l)\n\t\t\t\t\tfor(register int p=0;p<=K;++p){\n\t\t\t\t\t\tif(!f[i&1][j][k][l][p])continue;\n\t\t\t\t\t\tfor(register int q=j?tp[i]:m-1;~q;--q)\n\t\t\t\t\t\t\tif((k&&!q)||p+en[son(l,q)]<=K)\n\t\t\t\t\t\t\t\tadd(f[i&1^1][j&&q==tp[i]][k&&!q][(k&&!q)?l:son(l,q)][(k&&!q)?p:p+en[son(l,q)]],f[i&1][j][k][l][p]);\n\t\t\t\t\t\tf[i&1][j][k][l][p]=0;\n\t\t\t\t\t}\n\tfor(register int i=1;i<=cnt;++i)\n\t\tfor(register int j=0;j<=K;++j)\n\t\t\tadd(ans,(f[0][0][0][i][j]+f[0][1][0][i][j])%mod);\n\treturn ans;\n}\nint main(){\n\tint n=read();\n\tm=read(),K=read(),L[0]=read();\n\tfor(register int i=1;i<=L[0];++i)L[L[0]-i+1]=read();\n\tR[0]=read();\n\tfor(register int i=1;i<=R[0];++i)R[R[0]-i+1]=read();\n\twhile(n--){\n\t\tint len=read();\n\t\tfor(register int i=1;i<=len;++i)s[i]=read();\n\t\tinsert(len,read());\n\t}\n\tbuild();\n\tint node=1,ans,sum=0;\n\tfor(register int i=L[0];i;--i)node=son(node,L[i]),sum+=en[node];\n\tans=sum<=K;\n\tprintf(\"%d\\n\",(solve(R)-solve(L)+ans+mod)%mod);\n}\n\n```\n",
        "postTime": 1571223299,
        "uid": 111762,
        "name": "_ctz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF433E \u3010Tachibana Kanade's Tofu\u3011"
    }
]