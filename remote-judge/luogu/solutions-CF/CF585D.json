[
    {
        "content": "\u9898\u9762\uff1a\n\n\u6709 $(n \\leqslant 25)$ \u4e2a\u4efb\u52a1\u548c\u4e09\u4e2a\u4eba\uff0c\u6bcf\u6b21\u4efb\u52a1\u7ed9\u51fa\u6bcf\u4e2a\u4eba\u80fd\u5f97\u5230\u7684\u503c\uff0c\u6bcf\u6b21\u4efb\u52a1\u9009\u4e24\u4e2a\u4eba\uff0c\u4f7f $n$ \u4e2a\u4efb\u52a1\u7ed3\u675f\u540e\u4e09\u4e2a\u4eba\u5f97\u5230\u7684\u503c\u662f\u4e00\u6837\u7684\uff0c\u4e14\u5c3d\u91cf\u5927\u3002\u8f93\u51fa\u6bcf\u6b21\u8981\u6d3e\u54ea\u4e24\u4e2a\u4eba\uff0c\u5982\u679c\u4e0d\u884c\u8f93\u51fa `Impossible`\u3002\n\n\u89e3\u6cd5\uff1a\n\n\u89c2\u5bdf\u6570\u636e\u8303\u56f4\uff0c\u53d1\u73b0 $n\\leqslant25$\uff0c\u611f\u89c9\u53ef\u4ee5\u7528\u641c\u7d22\uff0c\u4f46\u662f\u6734\u7d20\u641c\u7d22\u7684 $O(3^{25})$ \u663e\u7136\u8fc7\u4e0d\u53bb\uff0c\u56e0\u4e3a\u8db3\u8db3\u6709 $847288609443$ \u6b21\u8fd0\u7b97\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651 meet in middle\u3002\n\n\u5148\u641c\u7d22\u524d\u9762\u4e00\u534a\uff0c\u4f46\u662f\u5982\u679c\u6734\u7d20\u7684\u5b58\u50a8\u4e09\u4e2a\u503c\u7684\u8bdd\u540e\u9762\u5408\u5e76\u4f1a\u5f88\u9ebb\u70e6\uff0c\u56e0\u4e3a\u8981\u6c42\u4e09\u4e2a\u503c\u4e00\u6837\uff0c\u6240\u4ee5\u5b58\u50a8\u5dee\u503c\u5373\u53ef\uff0c\u4f46\u662f\u8fd8\u8981\u4fdd\u8bc1\u6700\u5927\uff0c\u56e0\u6b64\u8fd8\u5f97\u5b58\u50a8\u4e00\u4e2a\u7b2c\u4e00\u4e2a\u7684\u503c\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5 $O(3^{13})$ \u8fc7\u6389\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<map>\n#include<algorithm>\nusing namespace std;\nstruct Node\n{\n\tint now[17];\n\tint a;\n};\nint mxvalue;\nint opt[28];\nint now[28];\nmap<pair<int,int>,Node>record;\nint n;\nstruct node\n{\n\tint a,b,c;\n}object[26];\nbool have_ans;\nvoid dfs1(int dep,int a,int b,int c)\n{\n\tif(dep==n/2+1)\n\t{\n\t\tint x1 = b-a;\n\t\tint x2 = c-b;\n\t\tif(record.find(make_pair(x1,x2))!=record.end())\n\t\t{\n\t\t\tif(a<record[make_pair(x1,x2)].a)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tint i,j;\n\t\tNode x;\n\t\tfor(i=1;i<=n/2;i++)\n\t\t{\n\t\t\tx.now[i] = now[i]; \n\t\t}\n\t\tx.a = a;\n\t\trecord[make_pair(b-a,c-b)] = x;\n\t\treturn;\n\t}\n\tnow[dep] = 3;//\u8bb0\u5f55\u64cd\u4f5c\u76f4\u63a5\u8bb0\u5f55\u4e0d\u9009\u7684\uff0c\u66f4\u65b9\u4fbf\n\tdfs1(dep+1,object[dep].a+a,object[dep].b+b,c);\n\tnow[dep] = 2;\n\tdfs1(dep+1,object[dep].a+a,b,object[dep].c+c);\n\tnow[dep] = 1;\n\tdfs1(dep+1,a,object[dep].b+b,object[dep].c+c);\n}\nvoid dfs2(int dep,int a,int b,int c)\n{\n\tif(dep==n+1)\n\t{\n\t\tint x1,x2;\n\t\tx1 = a-b;\n\t\tx2 = b-c;//\u53cd\u8fc7\u6765\uff0c\u56e0\u4e3a\u6bd4\u5982\u524d\u9762\u662f 3 4 5\u7684\u8bdd\uff0c\u540e\u97625 4 3\u5dee\u503c\u4e0e\u524d\u9762\u662f\u53cd\u8fc7\u6765\u7684\n\t\tif(record.find(make_pair(x1,x2))==record.end())\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\thave_ans = true;//\u6709\u65e0\u7b54\u6848\n\t\tif(a+record[make_pair(x1,x2)].a>mxvalue)\n\t\t{\n\t\t\tmxvalue = a+record[make_pair(x1,x2)].a;\n\t\t\tint i,j;\n\t\t\tfor(i=1;i<=n/2;i++)\n\t\t\t{\n\t\t\t\topt[i] = record[make_pair(x1,x2)].now[i];\n\t\t\t}\n\t\t\tfor(i=n/2+1;i<=n;i++)\n\t\t\t{\n\t\t\t\topt[i] = now[i];\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\tnow[dep] = 3;\n\tdfs2(dep+1,object[dep].a+a,object[dep].b+b,c);\n\tnow[dep] = 2;\n\tdfs2(dep+1,object[dep].a+a,b,object[dep].c+c);\n\tnow[dep] = 1;\n\tdfs2(dep+1,a,object[dep].b+b,object[dep].c+c);\n}\nint main()\n{\n\tint i,j;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&object[i].a,&object[i].b,&object[i].c);\n\t}\n\tmxvalue = -1145141919;//\u4e0d\u8981\u8ba9\u4ed6\u9ed8\u8ba4\u4e3a0\uff0c\u56e0\u4e3a\u503c\u5b58\u5728\u8d1f\u6570\n\tdfs1(1,0,0,0);\n\tdfs2(n/2+1,0,0,0);\n\tif(!have_ans)\n\t{\n\t\tputs(\"Impossible\");\n\t\treturn 0;\n\t}\n\telse\n\t{\n\t\tfor(i=1;i<=n;i++)\n\t\t{\n\t\t\tif(opt[i]==3)\n\t\t\t{\n\t\t\t\tputs(\"LM\");\n\t\t\t}\n\t\t\telse if(opt[i]==2)\n\t\t\t{\n\t\t\t\tputs(\"LW\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tputs(\"MW\"); \n\t\t\t}\n\t\t}\n\t}\n}\n```\n",
        "postTime": 1678692595,
        "uid": 229801,
        "name": "mmdxm",
        "ccfLevel": 5,
        "title": "CF585D \u9898\u89e3"
    },
    {
        "content": "\u60f3\u60f3\u633a\u7b80\u5355\u7684 $2300$\u3002\n\n\u4f46\u662f\u6709\u70b9\u5c0f\u7ec6\u8282\u8981\u7a0d\u5fae\u5904\u7406\u4e00\u4e0b\u3002\n\n\u9996\u5148\u770b\u5230\u8fd9\u9053\u9898\uff0c\u5c31\u4f1a\u53d1\u73b0\u4ed6\u5b9e\u9645\u4e0a\u662f\u4e0d\u5f31\u4e8e\u80cc\u5305\u7684\uff0c\u6240\u4ee5\u5e94\u8be5\u662f\u6ca1\u6709\u4e0d\u4f9d\u8d56\u4e8e\u503c\u57df\u7684\u591a\u9879\u5f0f\u505a\u6cd5\u3002\n\n\u56e0\u6b64\u6211\u4eec\u53bb\u601d\u8003\u67d0\u4e9b\u5947\u602a\u7684\u590d\u6742\u5ea6\u3002\n\n\u5c1d\u8bd5\u66b4\u529b\uff1f\u90a3\u5c31\u662f\u6bcf\u6b21\u6709\u4e09\u79cd\u51b3\u7b56\uff0c\u7136\u540e\u9012\u5f52\u4e0b\u53bb\uff0c\u590d\u6742\u5ea6\u662f $O(3^n)$\u3002\n\n\u7136\u540e\u4f1a\u53d1\u73b0\u8fd9\u4e1c\u897f\u53ef\u4ee5\u5206\u524d\u534a\u6bb5\u548c\u540e\u534a\u6bb5\uff0c\u6211\u4eec\u641c\u7d22\u7684\u65f6\u5019\u8bb0\u5f55\u8fd9\u6837\u4e00\u4e2a\u4e09\u5143\u7ec4\uff0c$(a2,a3,a4)$ \u8868\u793a\u7b2c\u4e00\uff0c\u4e8c\uff0c\u4e09\u4e2a\u4eba\u7528\u4e86\u591a\u5c11\u3002\n\n\u7136\u540e\u6211\u4eec\u5bf9\u4e8e\u524d\u540e\u8fdb\u884c\u5339\u914d\uff0c\u601d\u8003\u5982\u4f55\u5339\u914d\uff1f\n\n\u4e00\u79cd\u53ef\u884c\u7684\u60f3\u6cd5\u662f\uff0c\u6211\u4eec\u628a $(a3-a2,a4-a2)$ \u8fd9\u6837\u4e00\u4e2a\u4e8c\u5143\u7ec4\u6254\u5230\u4e00\u4e2a\u6876\u91cc\u9762\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u67e5\u8be2 $(a2-a3,a2-a4)$ \u662f\u5426\u5b58\u5728\uff0c\u8fd9\u6837\u4e24\u4e2a\u4e09\u5143\u7ec4\u62fc\u8d77\u6765\u4e00\u5b9a\u662f\u5168\u90fd\u76f8\u7b49\u7684\u3002\n\n\u7136\u540e\u8fd9\u4e1c\u897f\u53ef\u4ee5\u968f\u624b\u62ff unordered_map \u5b58\u4e0b\u6765\u3002\n\n\u7136\u540e\u8bb0\u5f55\u8def\u5f84\u4e4b\u7c7b\u7684\uff0c\u9700\u8981\u4e00\u70b9\u6570\u7ec4\u538b\u6210 long long \u7684\u6280\u5de7\u3002\n\n```cpp\n/*\nL M W\n*/\n#include <bits/stdc++.h>\n#include<ext/pb_ds/assoc_container.hpp>\n#include<ext/pb_ds/hash_policy.hpp>\n#define ll long long \n#define pii pair<int,int>\n#define fi first\n#define se second\n#define pb push_back\nusing namespace std;\nusing namespace __gnu_pbds;\nconst int INF=27;\nconst int INFN=13;\nconst int INFM=1e6+5;\nint n,a[INF][5],ans[INF][3],p[INF][3],res,tot,B;\nll v[INFM];\npii vv[INFM];\nunordered_map <int,unordered_map<int,pii > >Map;\nvoid DFS(int a1,int a2,int a3,int a4) {\n\tif (a1>B) {\n\t\tll c=0;\n\t\tfor (int i=1;i<=B;i++) {\n\t\t\tc=1ll*c*3+p[i][0];c=1ll*c*3+p[i][1];\n\t\t}\n\t\tv[tot]=c;++tot;\n\t\tif (Map[a3-a2][a4-a2].se==0 || Map[a3-a2][a4-a2].fi<a1) \n\t\t\tMap[a3-a2][a4-a2]={a2,tot};\n\t\tvv[++tot]={a3-a2,a4-a2};\n\t\treturn ;\n\t}\n\tp[a1][0]=0;p[a1][1]=1;\n\tDFS(a1+1,a2+a[a1][0],a3+a[a1][1],a4);\n\tp[a1][0]=1;p[a1][1]=2;\n\tDFS(a1+1,a2,a3+a[a1][1],a4+a[a1][2]);\n\tp[a1][0]=0;p[a1][1]=2;\n\tDFS(a1+1,a2+a[a1][0],a3,a4+a[a1][2]);\n\treturn ;\n}\nvoid DFS1(int a1,int a2,int a3,int a4) {\n\tif (a1>n) {\n\t\tpii it={a2-a3,a2-a4};\n\t\tint it1=lower_bound(vv+1,vv+1+tot,it)-vv;\n\t\tif (it1>tot) return ;\n\t\tif (vv[it1].fi!=a2-a3 || vv[it1].se!=a2-a4) return ;\n\t\tif (Map[a2-a3][a2-a4].se==0) return ;\n\t\tint xx=Map[a2-a3][a2-a4].fi+a2;\n\t\tif (xx>res) {\n\t\t\tres=xx;\n\t\t\tint id=Map[a2-a3][a2-a4].se;ll xx=v[id-1];\n\t\t\tfor (int i=B;i>=1;i--) {\n\t\t\t\tans[i][1]=xx%3,xx/=3,ans[i][0]=xx%3,xx/=3;\n//\t\t\t\tcout<<xx%3<<\" \"<<xx%3<<\" fad?\\n\";\n\t\t\t}\n\t\t\tfor (int i=B+1;i<=n;i++)\n\t\t\t\tans[i][0]=p[i][0],ans[i][1]=p[i][1];\n\t\t}\n\t\treturn ;\n\t}\n\tp[a1][0]=0;p[a1][1]=1;\n\tDFS1(a1+1,a2+a[a1][0],a3+a[a1][1],a4);\n\tp[a1][0]=1;p[a1][1]=2;\n\tDFS1(a1+1,a2,a3+a[a1][1],a4+a[a1][2]);\n\tp[a1][0]=0;p[a1][1]=2;\n\tDFS1(a1+1,a2+a[a1][0],a3,a4+a[a1][2]);\n}\nsigned main()\n{\n\tios::sync_with_stdio(false);\n\tcin>>n;\n\tfor (int i=1;i<=n;i++)\n\t\tcin>>a[i][0]>>a[i][1]>>a[i][2];\n\tB=n/2;\n\tif (B>11) B=11;\n\tDFS(1,0,0,0);\n\tsort(vv+1,vv+1+tot);\n\tres=-2e9;\n\tDFS1(B+1,0,0,0);\n\tif (res<-1e9) {cout<<\"Impossible\\n\";return 0;}\n\tfor (int i=1;i<=n;i++) {\n\t\tif (ans[i][0]==0 || ans[i][1]==0) cout<<\"L\";\n\t\tif (ans[i][0]==1 || ans[i][1]==1) cout<<\"M\";\n\t\tif (ans[i][0]==2 || ans[i][1]==2) cout<<\"W\";\n\t\tcout<<\"\\n\";\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1670391471,
        "uid": 208653,
        "name": "_edge_",
        "ccfLevel": 0,
        "title": "CF585D"
    },
    {
        "content": "\u9898\u9762\u6211\u662f\u4e0d\u4f1a\u5495\u7684\uff08\u6ca1\u6709\u771f\u9999\uff09\uff1a\n\n\u6709$n(n \\leqslant 25)$\u4e2a\u4efb\u52a1\u548c\u4e09\u4e2a\u4eba\uff0c\u6bcf\u6b21\u4efb\u52a1\u7ed9\u51fa\u6bcf\u4e2a\u4eba\u80fd\u5f97\u5230\u7684\u503c\uff0c\u6bcf\u6b21\u4efb\u52a1\u9009\u4e24\u4e2a\u4eba\uff0c\u4f7f$n$\u4e2a\u4efb\u52a1\u7ed3\u675f\u540e\u4e09\u4e2a\u4eba\u5f97\u5230\u7684\u503c\u662f\u4e00\u6837\u7684\uff0c\u4e14\u5c3d\u91cf\u5927\u3002\u8f93\u51fa\u6bcf\u6b21\u8981\u6d3e\u54ea\u4e24\u4e2a\u4eba\uff0c\u5982\u679c\u4e0d\u884c\u8f93\u51fa$Impossible$\u3002\n\n\u66b4\u529b\u662f$O(3 ^ {25})$\uff0c\u5fc5\u5b9a\u8fc7\u4e0d\u53bb\uff0c\u4f46\u662f\u5982\u679c\u4e00\u534a$O(3 ^ {13})$\u5c31\u521a\u597d\u53ef\u4ee5\u8fc7\u4e86\uff0c\u56e0\u6b64\u60f3\u5230\u6298\u534a\u641c\u7d22\u3002\n\n\u4ee4\u641c\u5230\u7684\u524d\u4e00\u534a\u7684\u7ed3\u679c\u4e3a$a, b, c$\uff0c\u540e\u4e00\u534a\u4e3a$x, y, z$\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u7684\u662f$a + x = b + y = c + z$\uff0c\u5176\u4e2d$a + x$\u8981\u5c3d\u91cf\u5927\u3002\n\n\u6839\u636e\u6298\u534a\u641c\u7d22\u7684\u65b9\u7a0b\u6a21\u578b\uff0c\u628a\u4e0a\u5f0f\u53d8\u5f62\uff0c\u5f97\u5230$a - c = z - x, a - b = y - x$\u3002\n\u56e0\u6b64\u6211\u4eec\u641c\u524d\u4e00\u534a\uff0c\u8bb0\u5f55$a - c$\u548c$a - b$\u7684\u503c\uff0c\u5e76\u4e14\u5982\u679c\u6709\u76f8\u540c\u7684\uff0c\u53d6$a$\u6700\u5927\u7684\u3002\n\n\u7136\u540e\u641c\u540e\u4e00\u534a\uff0c\u770b$z - x$\u548c$y - x$\u8fd9\u4e00\u5bf9\u51fa\u6ca1\u51fa\u73b0\u8fc7\uff0c\u6709\u7684\u8bdd\u5c31\u5c1d\u8bd5\u7528$a + z$\u66f4\u65b0\u7b54\u6848\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u8f93\u51fa\u65b9\u6848\uff1a\u91c7\u7528\u4e09\u8fdb\u5236\u5373\u53ef\u3002\n\n\u5b9e\u73b0\u7684\u65f6\u5019\u5f00\u4e00\u4e2a$map$\uff0c\u4e0b\u6807\u662f\u4e00\u4e2a$pair$\u578b\uff0c\u4e24\u4e2a\u53c2\u6570\u662f$a - c, a - b$\uff0c\u503c\u4e5f\u662f\u4e00\u4e2a$pair$\u578b\uff0c\u8bb0\u5f55\u6b64\u65f6\u6700\u5927\u7684$a$\u548c\u4e09\u8fdb\u5236\u65b9\u6848$f$\u3002\u603b\u590d\u6742\u5ea6$O(n ^ {\\frac{n}{2}} * \\log{\\frac{n}{2}})$\n\n\u8f93\u51fa\u65b9\u6848\u7684\u65f6\u5019\u522b\u5fd8\u4e86\u524d\u4e00\u534a\u5012\u53d9\u3002\n```c++\n#include<cstdio>\n#include<iostream>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#include<cstdlib>\n#include<cctype>\n#include<vector>\n#include<stack>\n#include<queue>\n#include<map>\nusing namespace std;\n#define enter puts(\"\") \n#define space putchar(' ')\n#define Mem(a, x) memset(a, x, sizeof(a))\n#define rg register\ntypedef long long ll;\ntypedef double db;\nconst int INF = 0x3f3f3f3f;\nconst db eps = 1e-8;\nconst int maxn = 30;\ninline ll read()\n{\n  ll ans = 0;\n  char ch = getchar(), last = ' ';\n  while(!isdigit(ch)) last = ch, ch = getchar();\n  while(isdigit(ch)) ans = (ans << 1) + (ans << 3) + ch - '0', ch = getchar();\n  if(last == '-') ans = -ans;\n  return ans;\n}\ninline void write(ll x)\n{\n  if(x < 0) x = -x, putchar('-');\n  if(x >= 10) write(x / 10);\n  putchar(x % 10 + '0');\n}\n\nint n, m, a[maxn], b[maxn], c[maxn];\nstruct Node\n{\n  int b, c;\n  bool operator < (const Node& oth)const\n  {\n  \treturn b < oth.b || (b == oth.b && c < oth.c);\n  }\n};\nmap<Node, Node> mp;\n\nvoid dfs(int stp, int x, int y, int z, int f)\n{\n  if(stp > m)\n    {\n      Node tp1 = (Node){x - z, x - y};\n      if(mp.find(tp1) != mp.end())\n\t{\n\t  if(mp[tp1].b < x) mp[tp1] = (Node){x, f};\n\t}\n      else mp[tp1] = (Node){x, f};\n      return;\n    }\n  dfs(stp + 1, x + a[stp], y + b[stp], z, f * 3);\n  dfs(stp + 1, x + a[stp], y, z + c[stp], f * 3 + 1);\n  dfs(stp + 1, x, y + b[stp], z + c[stp], f * 3 + 2);\n}\nint ans = -INF, path1, path2;\nvoid dfs2(int stp, int x, int y, int z, int f)\n{\n  if(stp <= m)\n    {\n      Node tp1 = (Node){z - x, y - x};\n      if(mp.find(tp1) != mp.end())\n      {\n      \tif(mp[tp1].b + x > ans)\n      \t{\n      \t\tans = mp[tp1].b + x;\n      \t\tpath1 = mp[tp1].c; path2 = f;\n      \t}\n      }\n      return;\n    }\n  dfs2(stp - 1, x + a[stp], y + b[stp], z, f * 3);\n  dfs2(stp - 1, x + a[stp], y, z + c[stp], f * 3 + 1);\n  dfs2(stp - 1, x, y + b[stp], z + c[stp], f * 3 + 2);\n}\n\nconst char ch[3][3] = {\"LM\", \"LW\", \"MW\"};\nint num[maxn], cnt = 0;\nvoid print()\n{\n\tcnt = 0;\n\tfor(int i = 1; i <= m; path1 /= 3, ++i) num[++cnt] = path1 % 3;\n\tfor(int i = cnt; i; --i) puts(ch[num[i]]);\n\tfor(int i = m + 1; i <= n; path2 /= 3, ++i) puts(ch[path2 % 3]);\n}\n\nint main()\n{\n  n = read(); m = n >> 1;\n  for(int i = 1; i <= n; ++i) a[i] = read(), b[i] = read(), c[i] = read();\n  dfs(1, 0, 0, 0, 0);\n  dfs2(n, 0, 0, 0, 0);\n  if(ans == -INF) puts(\"Impossible\");\n  else print();\n  return 0;\n}\n```",
        "postTime": 1543282297,
        "uid": 55965,
        "name": "mrclr",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF585D \u3010Lizard Era: Beginning\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7684\u9898\u610f\u8fd8\u6709\u70b9\u96be\u7406\u89e3\uff0c\u56e0\u6b64\u7ed9\u51fa\u5927\u81f4\u9898\u610f\r\n\r\n\u7ed9\u4f60\u4e09\u4e2a\u6570\u7ec4 $a_n,b_n,c_n$\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $i\\in[1,n]$\uff0c\u4f60\u8981\u4ece $a_i,b_i,c_i$ \u4e2d\u9009\u4e24\u4e2a\uff0c\u5e76\u5c06\u9009\u51fa\u6765\u7684\u4e24\u4e2a\u5206\u522b\u52a0\u5165 $A,B,C$ \u4e2d\u7684\u5bf9\u5e94\u6570\u4e2d\u3002\u6700\u540e\u8981\u6c42\u5728 $A=B=C$ \u7684\u524d\u63d0\u4e0b\u4f7f\u5f97\u8fd9\u4e09\u4e2a\u6570\u6700\u5927\u3002\r\n\r\n\u9996\u5148\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $i$ \u6211\u4eec\u90fd\u6709\u4e09\u79cd\u9009\u62e9\uff1a\u9009 $a,b$\uff1b\u9009 $a,c$\uff1b\u9009 $b,c$\u3002\r\n\r\n\u7531\u6b64\u6211\u4eec\u60f3\u5230\u641c\u7d22\u3002\u800c\u666e\u901a\u7684 DFS \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(3^{25})$\uff0c\u4e00\u770b\u5c31\u5047\u4e86\u3002\u6211\u4eec\u53ef\u4ee5\u91c7\u7528**\u6298\u534a\u641c\u7d22**\u7684\u529e\u6cd5\u3002\r\n\r\n## \u5982\u4f55\u6298\u534a\u641c\u7d22\r\n\r\n\u6d41\u7a0b\u5982\u4e0b\uff1a\r\n\r\n1. \u641c\u7d22\u5de6\u534a\u8fb9\uff0c\u7edf\u8ba1\u7ed3\u679c\r\n2. \u641c\u7d22\u53f3\u534a\u8fb9\uff0c\u7edf\u8ba1\u7ed3\u679c\r\n3. \u5408\u5e76\u4e24\u8fb9\r\n\r\n\u7b2c 1\u30012 \u6b65\u76f8\u5bf9\u7b80\u5355\uff0c\u800c\u7b2c 3 \u6b65\u901a\u5e38\u5c31\u662f\u6298\u534a\u641c\u7d22\u7684\u91cd\u70b9\u3001\u96be\u70b9\u3002\r\n\r\n## \u5982\u4f55\u5408\u5e76\r\n\r\n\u5047\u8bbe\u73b0\u5728\u641c\u5b8c\u4e86\u4e24\u8fb9\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $i$ \u90fd\u505a\u51fa\u4e86\u4e00\u79cd\u9009\u62e9\u3002\u6211\u4eec\u63a5\u4e0b\u6765\u7684\u8ba8\u8bba\u90fd\u4f1a\u57fa\u4e8e\u8fd9\u7ec4\u9009\u62e9\u8fdb\u884c\u3002\r\n\r\n\u5047\u8bbe $A,B,C$ \u4e2d\u5de6\u534a\u8fb9\u641c\u51fa\u7684\u4e3a\u90e8\u5206\u4e3a $x_1,x_2,x_3$\uff0c\u53f3\u534a\u8fb9\u7684\u4e3a $y_1,y_2,y_3$\u3002\r\n\r\n\u663e\u7136 $A=x_1+y_1,B=x_2+y_2,C=x_3+y_3$\u3002\r\n\r\n\u56e0\u4e3a\u8fd9\u79cd\u9009\u62e9\u8981\u5408\u6cd5\uff0c\u9700\u8981 $A=B=C$\uff0c\u5373 $x_1+y_1=x_2+y_2=x_3+y_3$\u3002\r\n\r\n\u7ed9\u5b83\u79fb\u9879\u540e\u5f97\u5230 $x_1-x_2=-(y_1-y_2),x_1-x_3=-(y_1-y_3)$\r\n\r\n\u627e\u5230\u89c4\u5f8b\u4e86\u5417\uff1f\u5224\u65ad\u8fd9\u7ec4\u9009\u62e9\u662f\u5426\u5408\u6cd5\u53ea\u7528\u5224\u65ad\u4e0a\u9762\u4e24\u4e2a\u5f0f\u5b50\u662f\u5426\u6210\u7acb\u5c31\u597d\u4e86\u3002\r\n\r\n\u66f4\u8fdb\u4e00\u6b65\u5730\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u641c\u7d22\u4e2d\u628a\u6bcf\u4e00\u7ec4\u9009\u62e9 $x_1-x_2$ \u548c $x_1-x_3$ \u4f5c\u4e3a\u952e\u5b58\u5728 $map\\ A$ \u91cc\uff0c$y_1-y_2$ \u548c $y_1-y_3$ \u4f5c\u4e3a\u952e\u5b58\u5728 $map\\ B$ \u91cc\u3002\r\n\r\n\u5408\u5e76\u65f6\u904d\u5386 $map\\ A$\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u952e $(p, q)$ \u5728 $map\\ B$ \u4e2d\u5bfb\u627e $(-p,-q)$\u3002\u5982\u679c\u5b58\u5728\uff0c\u90a3\u4e48\u8fd9\u5c31\u662f\u4e00\u7ec4\u5408\u6cd5\u89e3\u3002\r\n\r\n## \u5982\u4f55\u6c42\u6700\u503c\r\n\r\n\u6211\u4eec\u7684 $map\\ A$ \u7684\u952e\u5b58\u7684\u662f $(x_1-x_2,x_1-x_3)$\uff0c\u90a3\u4e48\u5b83\u7684\u503c\u5b58\u4ec0\u4e48\uff1f\r\n\r\n\u7531\u4e8e\u6211\u4eec\u9700\u8981\u6c42\u5f97 $x_1+y_1$ \u7684\u6700\u5927\u503c\uff0c\u6211\u4eec\u9700\u8981\u628a $x_1,y_1$ \u5206\u522b\u5b58\u5728 $map\\ A$ \u548c $map\\ B$ \u7684\u503c\u91cc\u3002\r\n\r\n\u5728\u5408\u5e76\u65f6\u6bcf\u4e00\u6b21\u627e\u5230\u5408\u6cd5\u89e3\u540e\u66f4\u65b0\u6700\u5927\u503c\u3002\r\n\r\n## \u5982\u4f55\u8bb0\u5f55\u9009\u62e9\r\n\r\n\u8981\u8bb0\u5f55\u6211\u4eec\u5728\u6df1\u641c\u65f6\u505a\u51fa\u7684\u9009\u62e9\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u6808\uff0c\u4f46\u662f\u65e0\u6cd5\u5728 $map$ \u4e2d\u5b58\u50a8\u3002\u6211\u4eec\u8003\u8651\u53ea\u7528**\u72b6\u6001\u538b\u7f29**\u7684\u65b9\u5f0f\u3002\r\n\r\n\u7528\u4e00\u4e2a\u4e09\u8fdb\u5236\u6570\u6765\u8868\u793a\u72b6\u6001\u3002\u6bd4\u5982 $120$ \u8868\u793a\uff1a\u7b2c\u4e09\u6b21\u662f\u7b2c2\u79cd\u9009\u62e9\uff0c\u7b2c\u4e8c\u6b21\u662f\u7b2c3\u79cd\u9009\u62e9\uff0c\u7b2c\u4e00\u6b21\u662f\u7b2c1\u4e2d\u9009\u62e9\u3002\r\n\r\n\u6ce8\u610f\u8fd9\u662f\u5012\u5e8f\u50a8\u5b58\u7684\uff0c\u56e0\u4e3a\u5728\u8f93\u51fa\u65f6\u66f4\u65b9\u4fbf\u3002\r\n\r\n\u540c\u65f6\u5b58\u5728 $map$ \u7684\u503c\u91cc\u3002\u8fd9\u9053\u9898\u5c31\u641e\u5b9a\u5566\uff01\r\n\r\n## \u4ee3\u7801\r\n\r\n```C++\r\n#include<iostream>\r\n#include<climits>\r\n#include<cmath>\r\n#include<map>\r\n#define N 25\r\n#define Dnf INT_MIN\r\n#define arg 0, 0, 0, 0\r\nusing namespace std;\r\ntypedef pair<int, int> pii;\r\n\r\nint arr[N][3], n, m, s, e; string t[] = {\"LM\", \"LW\", \"MW\"};\r\nvoid dfs(int now, int sa, int sb, int sc, int f, map<pii, pii> &mp) {\r\n    // f \u6807\u8bb0\u5f53\u65f6\u7684\u72b6\u51b5\r\n    if (now == e) {\r\n        // \u8bb0\u5f55\r\n        pii tmp = make_pair(sa - sb, sa - sc);\r\n        if (mp.find(tmp) != mp.end() && mp[tmp].first < sa || mp.find(tmp) == mp.end())\r\n            mp[tmp] = make_pair(sa, f);\r\n        return;\r\n    }\r\n    dfs(now+1, sa+arr[now][0], sb+arr[now][1], sc, f, mp);\r\n    dfs(now+1, sa+arr[now][0], sb, sc+arr[now][2], f + pow(3, now - s), mp);\r\n    dfs(now+1, sa, sb+arr[now][1], sc+arr[now][2], f + pow(3, now - s) * 2, mp);\r\n}\r\nint main() {\r\n    int n, m, ans = Dnf, f1, f2; cin >> n, m = n >> 1;\r\n    map<pii, pii> mpa, mpb;\r\n    for (int i=0; i<n; i++)\r\n        for (int j=0; j<3; j++) cin >> arr[i][j];\r\n    s = 0, e = m, dfs(s, arg, mpa);\r\n    s = m, e = n, dfs(s, arg, mpb);\r\n    // \u904d\u5386 mpa \u5bf9\u5e94 mpb\r\n    for (map<pii, pii>::iterator it=mpa.begin(); it != mpa.end(); it++) {\r\n        pii a = it->first, b = it->second; a.first = -a.first, a.second = -a.second;\r\n        if (mpb.find(a) != mpb.end() && b.first + mpb[a].first > ans)\r\n            ans = b.first + mpb[a].first, f1 = b.second, f2 = mpb[a].second;\r\n    }\r\n    if (ans == Dnf) return cout << \"Impossible\", 0;\r\n    // cout << ans << endl;\r\n    for (int i=0; i<m; i++) cout << t[f1 % 3] << endl, f1 /= 3;\r\n    for (int i=m; i<n; i++) cout << t[f2 % 3] << endl, f2 /= 3;\r\n    return 0;\r\n}\r\n```\r\n\r\n",
        "postTime": 1625380638,
        "uid": 360214,
        "name": "nalemy",
        "ccfLevel": 6,
        "title": "CF585D \u9898\u89e3"
    }
]