[
    {
        "content": "### \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a$\uff0c\u6709 $m$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u53ef\u4ee5\u5c06 $a$ \u4e2d\u7684\u8fde\u7eed $w$ \u4e2a\u5143\u7d20\u589e\u52a0 $1$\uff0c\u6700\u5927\u5316\u6700\u7ec8\u5e8f\u5217\u7684\u6700\u5c0f\u503c\u3002\n\n$\\texttt{Data Range:}1\\leq w\\leq n\\leq 10^5,1\\leq m\\leq 10^5$\n\n### \u9898\u89e3\n\n[\u4e0d\u4e00\u5b9a\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/Karry5307/p/13584410.html)\n\n~~\u548b\u4e00\u5230\u6570\u636e\u7ed3\u6784\u9898\u5c31\u7f29\u5375\u5462\uff0c\u4e8e\u662f\u5c31\u7406\u6240\u5f53\u7136\u7684\u88ab\u795e $\\texttt{x\\color{red}gzc}$ \u6559\u80b2\u4e86 >_<~~\n\n[![db9tRU.jpg](https://s1.ax1x.com/2020/08/30/db9tRU.jpg)](https://imgchr.com/i/db9tRU)\n\n\u770b\u5230\u8fd9\u79cd\u6700\u5c0f\u503c\u6700\u5927\u8fd9\u4e1c\u897f\u8003\u8651\u4e8c\u5206\u7b54\u6848\uff0c\u4e8e\u662f\u53ea\u9700\u8981\u5bf9\u4e8e\u4e8c\u5206\u51fa\u7684\u7b54\u6848 $x$ \u5224\u5b9a $m$ \u6b21\u64cd\u4f5c\u4e4b\u540e\u6700\u5c0f\u503c\u662f\u5426\u4e0d\u5c0f\u4e8e $x$\u3002\n\n\u8003\u8651\u8d2a\u5fc3\u641e\u3002\u5982\u679c $a$ \u4e2d\u5b58\u5728\u4e00\u4e2a\u503c\u5c0f\u4e8e $x$ \u6211\u4eec\u5c31\u628a\u4ed6\u52a0\u5230\u5927\u4e8e\u7b49\u4e8e $x$ \u5373\u53ef\uff0c\u4f46\u662f\u4e3a\u4e86\u4e0d\u6d6a\u8d39\u64cd\u4f5c\u6b21\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u52a0\u5230 $x$\u3002\u8fd9\u91cc\u6211\u7684\u5b9e\u73b0\u662f\u4ee5\u8fd9\u4e2a\u6570\u4e3a\u5de6\u7aef\u70b9\u6765\u8003\u8651\u3002\n\n\u4f46\u662f\u6709\u4e00\u4e9b\u4f4d\u7f6e\u4e0d\u53ef\u80fd\u6210\u4e3a\u957f\u5ea6\u4e3a $w$ \u7684\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u3002\u8fd9\u4e2a\u65f6\u5019\u8003\u8651\u5b8c\u524d\u9762\u6240\u6709\u7684\u64cd\u4f5c\u4e4b\u540e\u76f4\u63a5\u628a $[n-w+1,n]$ \u8fd9\u4e2a\u533a\u95f4\u52a0\u4e0a\u5269\u4e0b\u7684\u64cd\u4f5c\u6b21\u6570\u5373\u53ef\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef int ll;\ntypedef long long int li;\nconst ll MAXN=2e5+51; \nll n,m,w,l,r,mid,res;\nll x[MAXN],diff[MAXN];\ninline ll read()\n{\n    register ll num=0,neg=1;\n    register char ch=getchar();\n    while(!isdigit(ch)&&ch!='-')\n    {\n        ch=getchar();\n    }\n    if(ch=='-')\n    {\n        neg=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch))\n    {\n        num=(num<<3)+(num<<1)+(ch-'0');\n        ch=getchar();\n    }\n    return num*neg;\n}\ninline ll check(ll mid)\n{\n\tll c=0,cur=m,p;\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tdiff[i]=x[i]-x[i-1];\n\t}\n\tfor(register int i=1;i<=n-w+1;i++)\n\t{\n\t\tc+=diff[i];\n\t\tif(cur>0&&c<mid)\n\t\t{\n\t\t\tp=min(cur,mid-c),diff[i]+=p,diff[i+w]-=p,cur-=p,c+=p;\n\t\t}\n\t}\n\tdiff[n-w+1]+=cur,diff[n+1]-=cur,c=0;\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tc+=diff[i];\n\t\tif(c<mid)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 1;\n}\nint main()\n{\n\tn=read(),m=read(),w=read(),l=0x3f3f3f3f,r=0x3f3f3f3f;\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tx[i]=read(),l=min(l,x[i]);\n\t}\n\twhile(l<=r)\n\t{\n\t\tll mid=(l+r)>>1;\n\t\tcheck(mid)?l=mid+1,res=mid:r=mid-1;\n\t}\n\tprintf(\"%d\\n\",res);\n}\n```",
        "postTime": 1598750185,
        "uid": 60990,
        "name": "Karry5307",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF460C \u3010Present\u3011"
    },
    {
        "content": "\u4e8c\u5206\u7b54\u6848\uff0c\u7528\u5dee\u5206\u6570\u5217O(n)\u5224\u65ad\u662f\u5426\u53ef\u884c\u3002\n\n\u4e8c\u5206\u7b54\u6848\uff0c\u8bbe\u5f53\u524d\u7b54\u6848\u4e3ax\uff0c\u4e5f\u5c31\u662f\u7889\u503c\u6700\u4f4e\u7684\u8bdd\u7684\u7889\u503c\u6700\u5927\u503c\u4e3ax\u3002\n\n\u4ece\u5934\u5230\u5c3e\u89c2\u5bdf\u82b1\uff0c\u82e5a[i]<x\uff0c\u5219\u5bf9a[i]\u5f00\u5934\u7684w\u76c6\u82b1\u6012\u6d47(x-a[i])\u5929\uff0c\u8ba9\u5176\u7889\u503c\u8fbe\u5230x\u3002\u8ba9\u6240\u6709\u7684a[i]\u90fd>=x\u3002\u82e5\u6012\u6d47\u7684\u5929\u6570\u548c\u5c0f\u4e8e\u7b49\u4e8em\uff0c\u5219\u53ef\u884c\u3002\n\n\u800c\u8fd9\u4e2a\u6012\u6d47\u64cd\u4f5c\u53ef\u4ee5\u7528\u5dee\u5206\u961f\u5217\u5b9e\u73b0\n\n\u56e0\u4e3a\u5dee\u5206\u6570\u5217b[i]=a[i]-a[i-1]\uff0c\u5219\u5f53\u524d\u70b9\u7684\u503c\u4e3anow\uff0c\u4e0b\u4e00\u4e2a\u70b9\u7684\u503c\u5c31\u4e3anow+b[i+1]\u3002\u5dee\u5206\u6570\u5217\u7684L\u5230R\u5168\u52a0D\u64cd\u4f5c\uff1a    b[L]+=x; b[R+1]-=x;\uff08\u6ce8\u610f\u8fd9\u9898R\u53ef\u80fd\u4f1a\u6012\u8d85\u8fb9\u754c\uff0c\u8bb0\u5f97\u7279\u6b8a\u5904\u7406\u4e00\u4e0b\u6216\u8005\u6570\u7ec4\u5f00\u5927\u70b9\uff09\n\n\u9996\u5148\u6211\u4eec\u80fd\u591f\u5f97\u5230\u5168\u90e8\u82b1\u7684\u6700\u77ee\u9ad8\u5ea6\u5373\u7b54\u6848\u7684\u4e0b\u754c\uff0c\u7ed9\u8fd9\u4e2a\u82b1\u6d47m\u5929\u5373\u662f\u7b54\u6848\u7684\u4e0a\u754c\n\n\u7136\u540e\u4e8c\u5206\u679a\u4e3e\u7b54\u6848\uff0c\u68c0\u9a8c\u5408\u6cd5\u6027\u3002\n\n \n\n\u600e\u6837\u68c0\u9a8c\u5408\u6cd5\u6027\n\n \u7c7b\u4f3c\u4e8e\uff1a\n\n\u6211\u4eec\u7528\u4e2a\u6570\u7ec4\u6765\u8bb0\u5f55need[i]\u8868\u793a i\u70b9\u987b\u8981\u6d47\u7684\u6b21\u6570\uff08\u4ecei\u70b9\u958b\u59cb\u7684\u533a\u95f4\uff09\n\n\u6211\u4eec\u518d\u7528\u4e00\u4e2a\u53d8\u91cfhas\u6765\u7ef4\u62a4 i\u70b9\u5df2\u7ecf\u88ab\u6d47\u4e86\u7684\u6b21\u6570\uff08\u7531i\u70b9\u4e4b\u524d\u7684\u5728\u6d47\u82b1\u8303\u56f4\u5185\u7684\u70b9\u6d47\u8fc7\u7684\u6b21\u6570\u548c\uff09\n\n\u52a8\u6001\u5730\u7ef4\u62a4\u8fd9\u4e24\u4e2a\u503c\u5c31\u53ef\u4ee5\n\n\u5047\u8bbe\u4e0d\u591f\u6d47\u7684\u3002need[i]\u524d\u7f00\u548c\u5df2\u7ecf\u5927\u4e8em\u5929\u3002\u5219return false;\n\n\u4e0d\u7136 return true;\n\n```\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#include <iostream>\nusing namespace std;\nconst int NN=111111;\nint n,m,w;\nint need[NN];\nint f[NN];\nbool can(int s){\n\tint a=0;int b=m;\n\tfor(int i=1;i<=n;i++){\n\t\tif(i>=w)\n\t\t\ta-=need[i-w];\n\t\tneed[i]=max((int)0,s-a-f[i]);\n\t\ta+=need[i];\n\t\tb-=need[i];\n\t\tif(b<0)\n\t\t\treturn false;\n\t}\n\treturn true;\n}\nint main(){\n#ifndef ONLINE_JUDGE\n\tfreopen(\"G:/in.txt\",\"r\",stdin);\n\t//freopen(\"G:/myout.txt\",\"w\",stdout);\n#endif\n\tcin>>n>>m>>w;\n\tint minn=(1<<30);\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>f[i];\n\t\tminn=min(f[i],minn);\n\t}\n\tint maxn=minn+m;\n\tint mid=(minn+maxn)/2+1;\n\twhile(minn<maxn){\n\t\tif(can(mid)){\n\t\t\tminn=mid;\n\t\t}else{\n\t\t\tmaxn=mid-1;\n\t\t}\n\t\tmid=(minn+maxn)/2+1;\n\t}\n\tcout<<minn<<endl;\n}\n```\n",
        "postTime": 1551502366,
        "uid": 48439,
        "name": "YuRuiH_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF460C \u3010Present\u3011"
    },
    {
        "content": "\u9996\u5148\u8fd9\u9898\u600e\u4e48\u7740\u4e5f\u4e0d\u80fd\u662f\u5165\u95e8\u5427\u3002\u3002\u3002\n\n## \u7ffb\u8bd1\n\nLittle Beaver\u7684\u4fe1\u606f\u5b66\u6559\u5e08\u8981\u8fc7\u751f\u65e5\u4e86\uff0c\u4ed6\u79cd\u4e86$n$\u6735\u82b1\u60f3\u5f53\u4f5c\u793c\u7269\uff0c\u4f46\u662f\u4e00\u6bb5\u65f6\u95f4\u540e\u4ed6\u53d1\u73b0\u82b1\u4e0d\u957f\u4e86\uff0c\u4ed6\u8ba4\u4e3a\u9001\u7279\u522b\u5c0f\u7684\u82b1\u662f\u4e0d\u597d\u7684\u884c\u4e3a\uff0c\u5c31\u60f3\u4e86\u4e00\u79cd\u65b9\u6848\uff1a\n\n\u6bcf\u4e00\u5929\uff0c\u4ed6\u4f1a\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4$(i, i+w-1)$\u8fdb\u884c\u4e00\u79cd\u7279\u6b8a\u7684\u6d47\u6c34\uff0c\u8ba9\u8be5\u533a\u95f4\u5185\u6240\u6709\u82b1\u7684\u9ad8\u5ea6\u90fd\u589e\u52a01\u3002\n\n\u73b0\u5728\uff0c\u8ddd\u79bb\u751f\u65e5\u8fd8\u6709$m$\u5929\uff0c\u4ed6\u60f3\u8ba9\u82b1\u7684\u6700\u5c0f\u9ad8\u5ea6\u6700\u5927\u3002\n\n### \u8f93\u5165\u683c\u5f0f\n\n\u7b2c\u4e00\u884c\u6709\u4e09\u4e2a\u6570\uff0c\u5206\u522b\u4e3a$n$,$m$,$w$;\n\n\u7b2c\u4e8c\u884c\u6709$n$\u4e2a\u6570\uff0c\u4e3a\u6bcf\u4e00\u6735\u82b1\u7684\u521d\u59cb\u9ad8\u5ea6\n\n### \u8f93\u51fa\u683c\u5f0f\n\n\u4e00\u4e2a\u6570\uff0c\u8868\u793a\u6700\u5927\u7684\u6700\u5c0f\u9ad8\u5ea6\n\n### \u8bf4\u660e\n\n$1<=n,m,w<=10^{5},a[i]<=10^{9}$\n\n## \u601d\u8def\n\n1.\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u6a21\u62df\uff0c\u4f46\u662f\u590d\u6742\u5ea6\u4e3a$O(N^{2})$\uff0c\u5bf9\u4e8e$10^{5}$\u662f\u8fc7\u4e0d\u4e86\u7684\uff0c\u4e8e\u662f\u5c06\u76ee\u6807\u8f6c\u5411$O(NlogN)$\u3002\n\n2.\u7531log\u5f88\u5bb9\u6613\u60f3\u5230\u4e8c\u5206\uff0c\u7136\u800c\u5f00\u59cb\u5199\u4e86\uff0c\u5374\u53d1\u73b0\u5224\u65ad\u53ef\u884c\u5904\u4f9d\u7136\u8981$O(N^{2})$\u590d\u6742\u5ea6\uff0c\u5982\u4f55\u5199\u51fa$O(N)$\u5224\u65ad\u5462\uff1f\n\n## \u7b54\u6848\uff1a\u5dee\u5206\u6570\u7ec4\u3002\n\n\u7528\u5dee\u5206\u6570\u7ec4\u6c42\u51fa$a[i]$,\u53ea\u9700\u8981\u6c42\u51fa$c[1]+c[2]+c[3]+...+c[i]$\u5373\u53ef\u3002\u7528\u4e00\u4e2acur\u53d8\u91cf\u8bb0\u5f55\u76ee\u524d\u548c\uff0c\u53ef\u4ee5$O(1)$\u904d\u5386\u6570\u7ec4\u3002\n\n\u533a\u95f4$(L,R)$\u52a0x\u65f6\uff0c\u53ea\u9700\u8981$c[L]+x,c[R+1]-x$\u5373\u53ef\uff0c$O(1)$\u5b8c\u6210\u66f4\u6539\uff01\u91cd\u5927\u7a81\u7834\uff01\n\n\u4e8e\u662f\uff0c$O(N)$\u5224\u65ad\u5b9e\u73b0\u4e86\uff0c\u770b\u4ee3\u7801\u5427\u3002\n\n```cpp\n#include <iostream>\n#include <cmath>\n#include <cstring>\n#include <cstdio>\nusing namespace std;\nlong long N, M, W;\n//h\u4e3a\u9ad8\u5ea6\uff0cdis\u4e3a\u5dee\u5206\nlong long h[100010], dis[100010];\n//\u5224\u65ad\nbool check(long long H)//H\u4e3a\u76ee\u6807\u6700\u5c0f\u9ad8\u5ea6\n{\n\tlong long cur = 0, dsum = 0;\n\tfor (int i = 1;i <= N;i++)\n\t{\n\t\tcur += dis[i];//\u904d\u5386\n\t\tif (cur < H)//\u9700\u8981\u6d47\u6c34\n\t\t{\n\t\t\tdsum += H - cur;//\u589e\u52a0\u5929\u6570\n            //\u66f4\u6539\n\t\t\tdis[i] += H - cur;\n            //\u6ce8\u610f\u8d8a\u754c\u95ee\u9898\n\t\t\tif(i + W <= N) dis[i + W] -= H - cur;\n\t\t\tcur += H - cur;//dis\u52a0\u4e86\uff0ccur\u5f53\u7136\u4e5f\u8981\u52a0\u4e86\n\t\t}\n\t\t//for (int i = 1;i <= N;i++) printf(\"%d \",dis[i]);\n\t\t//printf(\"\\n\");\n\t}\n\treturn dsum <= M;\n}\nint main()\n{\n\tscanf(\"%lld%lld%lld\", &N, &M, &W);\n\tlong long l = 111111111, r = -1;\n\tfor (int i = 1;i <= N;i++)\n\t{\n\t\tscanf(\"%lld\", &h[i]);\n        //\u5f00\u5dee\u5206\u6570\u7ec4\n\t\tdis[i] = h[i] - h[i - 1];\n        //l\u8981\u4fdd\u8bc1\u5408\u6cd5\uff0c\u53d6\u6700\u5c0f\n\t\tl = min(h[i], l);\n        //r\u8981\u4fdd\u8bc1\u4e0d\u5408\u6cd5\uff0c\u53d6\u6700\u5927\uff0c\u4e0b\u9762\u518d\u52a0\uff08\u5929\u6570+1\uff09\n\t\tr = max(h[i], r);\n\t}\n\t//for (int i = 1;i <= N;i++) printf(\"%d \",dis[i]);\n\t//printf(\"\\n\");\n\tr += M + 1;\n    //\u4e8c\u5206\n\twhile (l < r - 1)\n\t{\n\t\tlong long m = (l + r) / 2;\n\t\tif (check(m)) l = m;//\u5408\u6cd5\n\t\telse r = m;//\u4e0d\u5408\u6cd5\n\t\t//cout<<l<<\" \"<<r<<\" \"<<m<<endl;\n        //\u91cd\u65b0\u8ba1\u7b97\u5dee\u5206\u6570\u7ec4\uff08check\u5df2\u7ecf\u5c06\u5176\u66f4\u6539\uff09\n\t\tfor (int i = 1;i <= N;i++)\n\t\t\tdis[i] = h[i] - h[i - 1];\n\t}\n\tprintf(\"%lld\", l);//\u8f93\u51fa\u5408\u6cd5\u503c\n\treturn 0;\n}\n```",
        "postTime": 1528378911,
        "uid": 61088,
        "name": "Solystic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF460C \u3010Present\u3011"
    },
    {
        "content": "\u7ed9\u51fa\u4e00\u79cd\u4e0d\u9700\u8981\u4e8c\u5206\u7684 $\\Theta(m\\log n)$ \u89e3\u6cd5\u3002\r\n\r\n\u5c06\u5e8f\u5217\u770b\u4f5c\u4e00\u4e2a\u6728\u6876\u7684\u677f\u5b50\u9ad8\u5ea6\u3002\u6211\u4eec\u60f3\u8981\u8ba9\u8fd9\u4e2a\u6876\u88c5\u5c3d\u53ef\u80fd\u591a\u7684\u6c34\uff0c\u5c31\u8981\u628a\u6700\u77ed\u7684\u677f\u5c3d\u53ef\u80fd\u53d8\u9ad8\u3002~~\u8fd9\u4e2a\u7406\u8bba\u5927\u5bb6\u60f3\u5fc5\u90fd\u4ece\u5bb6\u957f\u6216\u8005\u8001\u5e08\u90a3\u91cc\u591a\u591a\u5c11\u5c11\u542c\u8fc7~~\r\n\r\n\u4e8e\u662f\u6211\u4eec\u8003\u8651\u6bcf\u6b21\u64cd\u4f5c\u627e\u5230\u5f53\u524d\u5e8f\u5217\u6700\u5c0f\u503c\u4e2d\u6700\u5de6\u8fb9\u7684\u90a3\u4e2a\uff0c\u5c06\u5176\u4f5c\u4e3a\u4e00\u6b21\u64cd\u4f5c\u7684\u5de6\u7aef\u70b9\u3002\u82e5\u5bf9\u5e94\u7684\u53f3\u7aef\u70b9\u8d85\u51fa\u8303\u56f4\u5c31\u8ba9\u53f3\u7aef\u70b9\u9876\u9f50\u6700\u53f3\u4fa7\u3002\u8fd9\u4e2a\u53ef\u4ee5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u4e0b\u3002\r\n\r\n\u7531\u4e8e\u6700\u5c0f\u503c\u4e0e\u4e25\u683c\u6b21\u5c0f\u503c\u7684\u5dee\u5927\u4e8e\u7b49\u4e8e\u6bcf\u6b21\u64cd\u4f5c\u52a0\u4e0a\u7684 $1$\uff0c\u6240\u4ee5\u6211\u4eec\u611f\u6027\u7406\u89e3\u4e00\u4e0b\u8fd9\u4e2a\u8d2a\u5fc3\u7684\u6b63\u786e\u6027\uff1a\r\n\r\n- \u5982\u679c\u6211\u4eec\u5f53\u524d\u52a0\u7684\u533a\u95f4\u91cc\u6ca1\u6709\u6700\u5c0f\u503c\u90a3\u4e48\u8fd9\u6b21\u64cd\u4f5c\u6ca1\u6709\u610f\u4e49\u3002\u56e0\u4e3a\u6700\u5c0f\u503c\u662f\u4e0d\u53d8\u7684\u3002\r\n\r\n- \u6211\u4eec\u8981\u5728\u6700\u5c11\u6b21\u64cd\u4f5c\u5185\u6d88\u9664\u6700\u5c0f\u503c\u3002\r\n\r\n\u4f46\u662f\u5230\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u7591\u95ee\u5728\u4e8e\u5982\u679c\u6709\u591a\u4e2a\u533a\u95f4\u90fd\u5305\u542b\u4e86\u540c\u6837\u4e2a\u6570\u7684\u6700\u5c0f\u503c\uff0c\u90a3\u4e48\u5176\u4f1a\u4e0d\u4f1a\u5f71\u54cd\u540e\u9762\u7684\u64cd\u4f5c\u7684\u7ed3\u679c\u3002\u7b54\u6848\u662f\u4e0d\u4f1a\u3002\r\n\r\n\u5047\u8bbe\u6709\u8fd9\u6837\u4e00\u4e2a\u6570\u636e\uff1a\r\n\r\n```\r\n5 2 4\r\n2 1 1 1 114514\r\n```\r\n\r\n\u89c2\u4f17\u8001\u7237\u5982\u679c\u7528\u81ea\u5df1\u4eba\u7c7b\u7684\u601d\u7ef4\u60f3\u90fd\u4f1a\u89c9\u5f97\u5148\u52a0 $[1,4]$ \u662f\u6700\u597d\u7684\u3002\u4f46\u662f\u5176\u5b9e\u52a0 $[2,5]$ \u6548\u679c\u662f\u4e00\u6837\u7684\u3002\u4e3a\u4ec0\u4e48\u5462\uff1f\r\n\r\n\u56e0\u4e3a\u6700\u5c0f\u503c\u6bcf\u6b21\u52a0\u4e00\uff0c\u5176\u5b83\u6570\u53ef\u4ee5\u4f5c\u4e3a\u966a\u886c\uff0c\u6700\u7ec8\u7684\u7ed3\u679c\u53ea\u4e0e\u6700\u5c0f\u503c\u6709\u5173\u3002\u8fd9\u91cc\u9700\u8981\u4e00\u70b9\u611f\u6027\u7406\u89e3\u5427\uff01\u8fc7\u4e8e\u4e25\u8c28\u7684\u8bc1\u660e\u8fd9\u91cc\u6ca1\u6709\u5c55\u5f00~~\u5176\u5b9e\u662f\u6211\u4e0d\u4f1a~~\u3002\r\n\r\n\u8fd9\u6837\u6211\u4eec\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6700\u5de6\u7684\u6700\u5c0f\u503c\u4e0b\u6807\u5c31\u80fd\u505a\u5230 $m\\log n$ \u4e86\u3002\r\n\r\n\u4ee3\u7801\u5728\u8fd9\u91cc\uff1a[Link](https://www.luogu.com.cn/discuss/597223)\u3002",
        "postTime": 1681742940,
        "uid": 362750,
        "name": "TernaryTree",
        "ccfLevel": 0,
        "title": "CF460C \u9898\u89e3"
    },
    {
        "content": "\u9898\u76ee\u8981\u6c42\u6700\u5c0f\u503c\u6700\u5927\uff0c\u90a3\u4e48\u4e0d\u96be\u60f3\u5230\u4e8c\u5206\u3002\u6700\u5c0f\u503c\u8d8a\u5927\uff0c\u663e\u7136\u64cd\u4f5c\u6b21\u6570\u4e5f\u8d8a\u591a\u3002\u6570\u5217\u4e2d\u5c0f\u4e8e\u5f53\u524d\u4e8c\u5206\u5230\u7684\u6700\u5c0f\u503c\u7684\u6570\u90fd\u5e94\u8be5\u8fdb\u884c\u64cd\u4f5c\u3002\u81f3\u4e8e\u5982\u4f55\u5224\u5b9a\u5f53\u524d\u65b9\u6848\u662f\u5426\u53ef\u884c\uff0c\u8fd9\u91cc\u7ed9\u51fa\u4e24\u79cd\u65b9\u6cd5\u3002\n\n## \u65b9\u6cd5\u4e00\uff1a\u4e8c\u5206+\u6811\u72b6\u6570\u7ec4/\u7ebf\u6bb5\u6811\n\n\u5728\u4ece\u5de6\u5f80\u53f3\u64cd\u4f5c\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u6765\u5230\u4e86 $a_i$\uff0c\u5c31\u8981\u4f7f $[1,i-1]$ \u5185\u7684\u6570\u5168\u90e8\u5408\u6cd5\uff08\u5927\u4e8e\u6216\u7b49\u4e8e\u6700\u5c0f\u503c\uff09\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u4e0d\u5408\u6cd5\u7684 $a_i$\uff0c\u6211\u4eec\u53ea\u9700\u8003\u8651\u5bf9 $a_i$ \u53ca $a_i$ \u53f3\u8fb9\u7684\u6570\u8fdb\u884c\u64cd\u4f5c\u3002\u5f53\u524d\u64cd\u4f5c\u7684\u533a\u95f4\u5c31\u5e94\u4e3a $[i,i+w-1]$\uff0c\u64cd\u4f5c\u6b21\u6570\u4e3a $mid-a_i$\uff08$mid$ \u662f\u5f53\u524d\u4e8c\u5206\u5230\u7684\u6700\u5c0f\u503c\uff09\u3002\n\n\u90a3\u4e48\u53ea\u8981\u533a\u95f4\u52a0\uff0c\u5355\u70b9\u67e5\u8be2\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u6216\u7ebf\u6bb5\u6811\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $\\operatorname{O}(n\\log m\\log n)$\u3002\n\n## \u65b9\u6cd5\u4e8c\uff1a\u4e8c\u5206+\u524d\u7f00\u548c\n\n\u8fd8\u662f\u4e8c\u5206\uff0c\u8fd8\u662f\u7528\u524d\u9762\u63d0\u5230\u7684\u64cd\u4f5c\u7b56\u7565\u3002\u539f\u6765\u6211\u4eec\u8ba1\u7b97 $a_i$ \u5bf9\u5176\u4ed6\u6570\u7684\u5f71\u54cd\uff0c\u4e0d\u59a8\u6362\u4e00\u4e2a\u89d2\u5ea6\uff0c\u5bf9\u4e8e\u6bcf\u4e2a $a_i$\uff0c\u8003\u8651\u5176\u4ed6\u6570\u5bf9\u5b83\u7684\u5f71\u54cd\u3002\n\n\u4ee4 $b_i$ \u8868\u793a $[i,i+w-1]$ \u7684\u533a\u95f4\u64cd\u4f5c\u4e86\u591a\u5c11\u6b21\u3002\u80fd\u591f\u5bf9 $a_i$ \u4ea7\u751f\u5f71\u54cd\u7684\u64cd\u4f5c\u533a\u95f4\u662f $[i-w+1,i],[i-w+2,i+1]\\dots[i-1,i+w-2]$\uff08$[i,i+w-1]$ \u662f\u5f53\u524d\u6c42\u7684\u533a\u95f4\uff0c\u4e0d\u7b97\u5728\u5185\uff09\u3002\u90a3\u4e48 $a_i$ \u5c31\u53d8\u6210\u4e86 $a_i+\\sum\\limits_{k=i-w+1}^{i-1}b_k$\uff0c\u82e5\u73b0\u5728\u7684 $a_i$ \u4ecd\u4e0d\u5408\u6cd5\uff0c$b_i$ \u5e94\u4e3a $mid-a_i$\u3002\u8ba1\u7b97\u533a\u95f4\u548c\uff0c\u5e76\u4e14\u53ea\u5728\u672b\u5c3e\u63d2\u5165\u4e00\u4e2a\u6570\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528\u524d\u7f00\u548c\u5904\u7406\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\operatorname{O}(n\\log m)$\u3002\n\n## \u6ce8\u610f\n\n1. \u9632\u6b62\u6570\u7ec4\u8d8a\u754c\uff0c\u5f53\u4e0b\u6807\u53ef\u80fd\u4e3a\u8d1f\u6570\u7684\u65f6\u5019\u4e0e $0$ \u53d6 $\\max$\uff0c\u53ef\u80fd\u8d85\u8fc7 $n$ \u7684\u65f6\u5019\u4e0e $n$ \u53d6 $\\min$\u3002\n\n2. \u7ecf\u8fc7 $m$ \u6b21\u64cd\u4f5c\uff0c\u6570\u5217\u4e2d\u6700\u5c0f\u503c\u4e00\u5b9a\u4e0d\u8d85\u8fc7 $\\min\\{a_i\\}+m$\u3002\u6240\u4ee5\u4e8c\u5206\u8fb9\u754c\u4e3a $\\min\\{a_i\\}$ \u548c $\\min\\{a_i\\}+m$\u3002\n\n## \u53c2\u8003\u4ee3\u7801\n\n### \u65b9\u6cd5\u4e00\n\n```cpp\ninline void add(int i, int x) {\n\tfor(; i <= n; i += i & -i) bit[i] += x;\n}\n\ninline int query(int i) {\n\tint res = 0;\n\tfor(; i; i -= i & -i) res += bit[i];\n\treturn res;\n}\n\nbool check(int k) {\n\tint x, res = 0;\n\tmemset(bit, 0, sizeof(bit));\n\trep(i, 1, n) add(i, a[i] - a[i - 1]);\n\trep(i, 1, n) {\n\t\tx = query(i);\n\t\tif(x >= k) continue;\n\t\tres += k - x;\n\t\tif(res > m) return false;\n\t\tadd(i, k - x);\n\t\tadd(min(i + w, n + 1), x - k);\n\t}\n\treturn true;\n}\n\nsigned main() {\n\tint l = 1e9, r = 0, mid, ans = 0;\n\tn = read(); m = read(); w = read();\n\trep(i, 1, n) {\n\t\ta[i] = read();\n\t\tl = min(l, a[i]);\n\t}\n\tr = l + m;\n\twhile(l <= r) {\n\t\tmid = l + r >> 1;\n\t\tif(check(mid)) ans = mid, l = mid + 1;\n\t\telse r = mid - 1;\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n```\n### \u65b9\u6cd5\u4e8c\n\n```cpp\nbool check(int k) {\n\tint x, res = 0;\n\tmemset(bit, 0, sizeof(bit));\n\trep(i, 1, n) {\n\t\tx = a[i] + bit[i - 1] - bit[max(i - w, 0)];\n\t\tbit[i] = bit[i - 1];\n\t\tif(x >= k) continue;\n\t\tbit[i] += k - x;\n\t\tif(bit[i] > m) return false;\n\t}\n\treturn true;\n}\n//main \u7565\n```",
        "postTime": 1598160977,
        "uid": 214437,
        "name": "IntrepidStrayer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF460C \u3010Present\u3011"
    },
    {
        "content": "#### \u7b97\u6cd5\n\n\u4e8c\u5206\u7b54\u6848+\u7ebf\u6bb5\u6811\n\n#### \u601d\u8def\n\n\u663e\u7136\uff0c\u8fd9\u9898\u6b63\u7740\u4e0d\u592a\u597d\u63a8\uff0c\u90a3\u4e48\u5c31\u8003\u8651\u4e8c\u5206\u7b54\u6848\uff0c\u6709\u4e00\u4e2a\u5f88\u5927\u7684\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u5728$O(n\\log n)$\u6216\u8005$O(n)$\u7684\u65f6\u95f4\u5185\u5224\u65ad\u6211\u4eec\u4e8c\u5206\u7b54\u6848\u7684\u53ef\u884c\u6027\u3002\u9996\u5148\u80af\u5b9a\u60f3\u5230\u8d2a\u5fc3\uff0c\u4f46\u662f\u4f60\u4f1a\u53d1\u73b0\u6bcf\u4e00\u4e2a\u5143\u7d20\u9700\u8981\u52a0\u7684\u503c\u4e0d\u4e00\u6837\uff0c\u52a0\u4e86\u503c\u4ee5\u540e\u5f71\u54cd\u7684\u8303\u56f4\u4e5f\u4e0d\u4e00\u6837\uff0c\u5e76\u4e0d\u597d\u7ef4\u62a4\u3002\n\n\u56e0\u4e3a\u6d89\u53ca\u5230\u533a\u95f4\u4fee\u6539\uff0c\u8003\u8651\u4f7f\u7528\u7ebf\u6bb5\u6811\u3002\u6211\u4eec\u7ef4\u62a4\u6bcf\u4e00\u4f4d\u7f6e\u5df2\u7ecf\u52a0\u4e86\u591a\u5c11\u3002\n\n\u9996\u5148\u660e\u786e\u4ec0\u4e48\u60c5\u51b5\u4e0b\u662f\u5fc5\u987b\u64cd\u4f5c\u4e00\u6b21\u7684\uff08\u5f53\u524d\u503c\u5c0f\u4e8e\u4e8c\u5206\u6240\u5f97\u7684\u6700\u5c0f\u503c\u7684\u524d\u63d0\u4e0b\uff09\uff1a\n\n+ \u5f53\u524d\u8282\u70b9\u5df2\u7ecf\u52a0\u7684\u503c\u5c0f\u4e8e\u9700\u8981\u52a0\u7684\u503c\n\n\u800c\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u65b9\u4fbf\u5730\u8fdb\u884c\u533a\u95f4\u52a0\u3002\u81f3\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u5df2\u7ecf\u52a0\u7684\u503c\uff0c\u5355\u70b9\u67e5\u8be2\u5c31\u53ef\u4ee5\u4e86\u3002\n\n#### \u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n\nusing namespace std;\n\nconst int maxn = 1e5 + 10;\nint n,m,w,a[maxn];\n\nstruct Seg_Tree{\n    #define lc(x) x << 1\n    #define rc(x) x << 1 | 1\n    int c[maxn << 2],tag[maxn << 2];\n    \n    void clear(){\n        memset(c,0,sizeof(c));\n        memset(tag,0,sizeof(tag));\n    }\n    \n    void f(int l, int r, int p, int x){\n        c[p] += (r - l + 1) * x;\n        tag[p] += x;\n    }\n    \n    void downdate(int l, int r, int p){\n        if(tag[p]){\n            int mid = (l + r) >> 1;\n            f(l, mid, lc(p), tag[p]);\n            f(mid + 1, r, rc(p), tag[p]);\n            tag[p] = 0;\n        }\n    }\n    \n    void add(int L, int R, int l, int r, int p, int x){\n        if(L <= l && R >= r){\n            f(l, r, p, x);\n            return;\n        }\n        downdate(l, r, p);\n        int mid = (l + r) >> 1;\n        if(mid >= L) add(L, R, l, mid, lc(p), x);\n        if(mid < R) add(L, R, mid + 1, r, rc(p), x);\n        c[p] = c[lc(p)] + c[rc(p)];\n    }\n    \n    int query(int l, int r, int p, int pos){\n        if(l == r) return c[p];\n        downdate(l, r, p);\n        int mid = (l + r) >> 1;\n        if(mid >= pos) return query(l, mid, lc(p), pos);\n        else return query(mid + 1, r, rc(p), pos);\n    }\n}tree;\n\ninline int check(int mid){\n    int cnt = 0, flag = 1; tree.clear();  //\u8bb0\u5f97\u6e05\u7a7a\n    for(int i = 1; i <= n; ++ i){\n        if(a[i] < mid){\n            int val = tree.query(1, n, 1, i);\n            if(val < mid - a[i]){\n                cnt += mid - a[i] - val;\n                tree.add(i, i + w - 1, 1, n, 1, mid - a[i] - val);\n            } \n        } \n        if(cnt > m){flag = 0; break;}\n    }\n    if(cnt > m || !flag) return 0;\n    else return 1;\n}\n\nint main(){\n    int h = 0x3f3f3f3f, l = 0x3f3f3f3f, mid; //\u8fd9\u91cch\u4e0d\u80fd\u8bbe\u62101e9+10\uff0c\u56e0\u4e3a\u7b54\u6848\u53ef\u80fd\u4f1a\u5927\u4e8e\u5b83\n    scanf(\"%d%d%d\", &n, &m, &w);\n    for(int i = 1; i <= n; ++ i){\n        scanf(\"%d\", a + i);\n        l = min(l, a[i]);\n    }\n    \n    while(h >= l){\n        mid = (h + l) >> 1;\n        if(!check(mid)) h = mid - 1;\n        else l = mid + 1;\n    } printf(\"%d\\n\", l - 1);\n    return 0;\n}\n```\n\n",
        "postTime": 1604495926,
        "uid": 120351,
        "name": "When",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF460C \u3010Present\u3011"
    },
    {
        "content": "\u9996\u5148\u901a\u8fc7\u9898\u76ee\u5bf9\u4e8e\u7b54\u6848\u201c\u6700\u5c0f\u503c\u6700\u5927\u201d\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u4f7f\u7528\u4e8c\u5206\u7b54\u6848\u6765\u67e5\u627e\u6700\u7ec8\u7684\u7ed3\u679c\u3002\n\n\u7136\u540e\u5c31\u662f\u6bcf\u6b21\u7684check\u51fd\u6570\u3002\u6211\u4eec\u9700\u8981\u628a\u6240\u6709\u7684\u5143\u7d20\u90fd\u52a0\u5230\u6211\u4eec\u4e8c\u5206\u7684ans.\u800c\u901a\u8fc7\u8d2a\u5fc3\u6211\u4eec\u53d1\u73b0\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u6700\u5de6\u7aef\u5f00\u59cb\uff0c\u4f9d\u6b21\u5411\u53f3\u8fb9\u627e\u5230\u5c0f\u4e8e\u7b54\u6848\u7684\u6570\uff0c\u7136\u540e\u4ee5\u4ed6\u4eec\u4e3a\u5de6\u7aef\u70b9\u626b(\u540e\u9762w\u4e2a\u5143\u7d20\u52a01)\uff0c\u76f4\u5230\u5b83\u53d8\u62100\u3002\u6211\u4eec\u518d\u8bb0\u5f55\u52a0\u7684\u6b21\u6570\uff0c\u8ba9\u5b83\u5c0f\u4e8em\u5219\u6b64\u7b54\u6848\u662f\u53ef\u884c\u3002\n\n\u4ee5\u4e0a\u8fc7\u7a0b\u53ef\u4ee5\u7b80\u5316\u5230\u4ee5\u4e0b\u505a\u6cd5\uff1a\n\t\n    cnt = 0;\n\tfor i = 1 to n\n    {\n    \tif a[i] < ans\n        {\n        \ta[i, i + w - 1] += ans - a[i];\n            cnt += ans - a[i];\n            if cnt > m\n            \tbreak;\n        }\n\t}\n\n\u800c\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u6765\u7ef4\u62a4\u533a\u95f4\u52a0\u51cf\u548c\u5355\u70b9\u67e5\u8be2\u3002\u6811\u72b6\u6570\u7ec4\u5373\u53ef\u3002\n\ncode:\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <cstring>\n#include <algorithm>\n#include <string>\n#define NO 100005\n#define INF 0x3f3f3f3f\ntypedef long long ll;\n//by Oliver\nusing namespace std;\nll read()\n{\n    char ch = ' ', last;\n    ll ans = 0;\n    while(ch < '0' || ch > '9')\n        last = ch, ch = getchar();\n    while(ch >= '0' && ch <= '9')\n        ans *= 10, ans += ch - '0', ch = getchar();\n    if(last == '-')\n        return -ans;\n    return ans;\n}\n//head\n\nll n, m, w, a[NO], d[NO], k;\n//variable\n\nll lowbit(ll x)\n{\n    return x & -x;\n}\nvoid add(ll pos, ll val)\n{\n    for(int i = pos; i <= n; i += lowbit(i))\n        d[i] += val;\n}\nll ask(ll pos)\n{\n    ll ans = 0;\n    for(ll i = pos; i; i -= lowbit(i))\n        ans += d[i];\n    return ans;\n}\nvoid init()\n{\n    n = read(), m = read(), w = read();\n    for(ll i = 1; i <= n; i++)\n        a[i] = read();\n}\nbool check(ll ans)\n{\n    memset(d, 0, sizeof(d));\n    ll last = 0;\n    for(ll i = 1; i <= n; i++)\n        add(i, a[i] - ans - last), last = a[i] - ans;\n    ll cnt = 0;\n    for(ll i = 1; i <= n; i++)\n    {\n        ll askn = ask(i);\n        if(askn < 0)\n        {\n            cnt += -askn;\n            if(cnt > m)\n                return false;\n            add(i, -askn), add(i + w, askn);\n        }\n    }\n    return true;\n}\n//functinos\n\nint main()\n{\n    init();  \n    ll l = 1, r = 1000200000;//\u6ce8\u610f\u8fd9\u91cc\u3002\u7b54\u6848\u53ef\u80fd\u5230m + amax = 1e9 + 1e5, \u4ee5\u9632\u4e07\u4e00\u6211\u4eec\u5f00\u52301e9 + 2e5.\n    while(l <= r)\n    {\n        ll mid = (l + r) / 2;\n        if(check(mid))\n            l = mid + 1;\n        else\n            r = mid - 1;\n    }\n    cout<<l - 1<<endl;\n    return 0;\n}\n//main\n```",
        "postTime": 1548671983,
        "uid": 78369,
        "name": "Harmony",
        "ccfLevel": 7,
        "title": "CF460C Present \u9898\u89e3"
    },
    {
        "content": "\u641e\u6bdb\u7ebf\u554a\n\n\u8868\u793a\u6211\u4ee3\u7801\u53c8\u81ed\u53c8\u957f\u590d\u6742\u5ea6\u8fd8\u52a3\uff0c\u4f46\u662f\u662f\u53e6\u4e00\u79cd\u65b9\u6cd5\uff0c\u5c31\u53d1\u4e0b\u5427\n\n\u7ebf\u6bb5\u6811\uff0c\u67e5\u8be2\u5355\u70b9\u4fe1\u606f\uff0c\u533a\u95f4\u4fee\u6539\u6bcf\u6b21\u5efa\u6811\n\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n#define int long long\nint n, m, w, a[100005], sum[100005];\nstruct SegmentTree\n{\n\tint l, r, mi, lazy;\n}Tree[100005 << 3];\ninline void pushup(int x)\n{\n\tTree[x].mi = min(Tree[x << 1].mi, Tree[x << 1 | 1].mi);\n\treturn;\n}\ninline void pushdown(int x)\n{\n\tint oo = Tree[x].lazy;\n\tTree[x << 1].lazy += oo;\n\tTree[x << 1].mi += oo;\n\tTree[x << 1 | 1].lazy += oo;\n\tTree[x << 1 | 1].mi += oo;\n\tTree[x].lazy = 0;\n\treturn;\n}\ninline void build(int l, int r, int x)\n{\n\tTree[x].l = l;\n\tTree[x].r = r;\n\tTree[x].lazy = 0;\n\tif (l == r)\n\t{\n\t\tTree[x].mi = a[l];\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tbuild(l, mid, x << 1);\n\tbuild(mid + 1, r, x << 1 | 1);\n\tpushup(x);\n\treturn;\n}\ninline int query(int pos, int x)\n{\n\tif (Tree[x].l == Tree[x].r)\n\treturn Tree[x].mi;\n\tif (Tree[x].lazy != 0)\n\tpushdown(x);\n\tint mid = (Tree[x].l + Tree[x].r) >> 1;\n\tif (pos <= mid)\n\treturn query(pos, x << 1);\n\telse\n\treturn query(pos, x << 1 | 1);\n}\ninline void updata(int l, int r, int x, int val)\n{\n\tif (l <= Tree[x].l && Tree[x].r <= r)\n\t{\n\t\tTree[x].lazy += val;\n\t\tTree[x].mi += val;\n\t\treturn;\n\t}\n\tif (Tree[x].lazy != 0) pushdown(x);\n\tif (Tree[x].l > r || Tree[x].r < l) return;\n\tint mid = (Tree[x].l + Tree[x].r) >> 1;\n\tif (l <= mid) updata(l, r, x << 1, val);\n\tif (mid <= r) updata(l, r, x << 1 | 1, val);\n\tpushup(x);\n}\ninline bool judge(int mid)\n{\n\tint mm = m;\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tint pp = query(i, 1);\n\t\tif (pp < mid)\n\t\t{\n\t\t\tint oo = mid - pp;\n\t\t\tmm -= oo;\n\t\t\tif (mm < 0) \n\t\t\treturn false;\n\t\t\telse\n\t\t\tupdata(i, min(i + w - 1, n), 1, oo);\n\t\t}\n\t}\n\treturn true;\n}\nsigned main()\n{\n\twhile(~ scanf(\"%lld%lld%lld\", &n, &m, &w))\n\t{\n\t\tfor(int i = 1; i <= n; i++)\n\t\tscanf(\"%lld\", &a[i]);\n\t\tint l = 1, r = 1e15;\n\t\twhile(l <= r)\n\t\t{\n\t\t\tbuild(1, n, 1);\n\t\t\tint mid = (l + r) >> 1;\n\t\t\tif (judge(mid))\n\t\t\tl = mid + 1;\n\t\t\telse\n\t\t\tr = mid - 1;\n\t\t}\n\t\tprintf(\"%lld\\n\", r);\n\t}\n}\n```",
        "postTime": 1534994168,
        "uid": 83235,
        "name": "\u4e25\u4f73\u6960",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF460C \u3010Present\u3011"
    },
    {
        "content": "# \u4e8c\u5206\u7b54\u6848 + \u5dee\u5206\n\n\u9898\u76ee\u8ba9\u6211\u4eec\u6700\u5927\u5316\u6700\u5c0f\u503c\uff0c\u867d\u7136\u6709\u7740\u7ebf\u6bb5\u6811\u7684\u6807\u7b7e\uff0c\u4f46\u4e0d\u96be\u60f3\u5230\u53ef\u4ee5\u7528\u4e8c\u5206\u7b54\u6848\u6765\u505a\n\n## \u5355\u8c03\u6027\u8bc1\u660e\n\n\u6bcf\u4e2a\u5143\u7d20\uff0c\u64cd\u4f5c\u4e00\u6b21\u5143\u7d20\u503c\u52a0\u4e00\uff0c\u64cd\u4f5c\u7684\u8d8a\u591a\uff0c\u503c\u8d8a\u9ad8\n\n\u6240\u4ee5\u5143\u7d20\u503c\u968f\u64cd\u4f5c\u6b21\u6570\u7684\u589e\u52a0\u800c\u589e\u52a0\n\n\u4e0d\u96be\u770b\u51fa\u662f\u5355\u8c03\u9012\u589e\n\n## \u5982\u4f55\u4e8c\u5206\n\n\u8003\u8651\u7ed9\u5b9a\u4e00\u4e2a\u6700\u4f4e\u9650\u5ea6\u503c$mid$\n\n\u5373\u5c1d\u8bd5\u8ba9\u6bcf\u4e2a\u5143\u7d20\u90fd\u8fbe\u5230\u6700\u4f4e\u9650\u5ea6\u503c$mid$\uff0c\u770b\u770b\u9700\u8981\u64cd\u4f5c\u7684\u6b21\u6570\u662f\u5426\u5c0f\u4e8e\u7ed9\u5b9a\u7684\u6b21\u6570$m$\n\n\u5982\u679c\u5c0f\u4e8e\u7ed9\u5b9a\u6b21\u6570$m$\uff0c\u5219\u4e8c\u5206\u63d0\u9ad8\u6700\u4f4e\u9650\u5ea6\u503c$mid$\n\n\u5426\u5219\uff0c\u4e8c\u5206\u964d\u4f4e\u6700\u4f4e\u9650\u5ea6\u503c$mid$\n\n## \u4e8c\u5206\u8303\u56f4\n\n\uff08\u5176\u5b9e\u76f4\u63a50 ~ 1e10\u4e5f\u6ca1\u5565\u5927\u95ee\u9898\uff09\n\n\uff081e10\u8981\u8bb0\u5f97\u5f00long long\uff09\n\n\u8003\u8651\u6700\u4f18\u60c5\u51b5\uff0c\u627e\u5230\u4e00\u4e2a\u6700\u5c0f\u5143\u7d20$a_i$\uff0c\u628a\u6240\u6709\u7684\u64cd\u4f5c\u90fd\u7ed9\u5b83\uff0c\u5b83\u5de7\u597d\u8fd8\u662f\u6700\u5c0f\u503c\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f$a_i + m$\n\n\u8003\u8651\u6700\u5dee\u60c5\u51b5\uff0c\u5c31\u662f\u5e8f\u5217\u4e2d\u7684\u6700\u5c0f\u503c$a_i$\n\n## \u5dee\u5206\u4f18\u5316\n\n\u56e0\u4e3a\u540c\u65f6\u64cd\u4f5c\u7684\u662f\u4e00\u4e2a\u5e8f\u5217\uff0c\u6240\u4ee5\u66b4\u529b\u52a0\u503c\u592a\u6162\u4e86\uff0c\u5bb9\u6613T\u6389\n\n\u56e0\u6b64\u53ef\u4ee5\u7528\u5dee\u5206\u6765\u7ef4\u62a4\u8fd9\u4e2a\u5e8f\u5217\n\n\u6ce8\u610f\u6bcf\u6b21\u4e8c\u5206\u540e\u90fd\u8981\u5c06\u8fd9\u4e2a\u5e8f\u5217\u91cd\u65b0\u8d4b\u503c\uff0c\u56e0\u4e3a\u4e0a\u4e00\u6b21\u4e8c\u5206\u65f6\u5df2\u7ecf\u5c06\u5b83\u7684\u503c\u6539\u53d8\u4e86\n\n### \u53cc\u624b\u5949\u4e0aAC\u4ee3\u7801\n\n```cpp\n/*\nWork by: Suzt_ilymics\nKnowledge: ??\nTime: O(??)\n*/\n#include<iostream>\n#include<cstdio>\n#define INF 1000010000\nusing namespace std;\nconst int MAXN = 1e5+5;\nlong long n, m, w, ans, minn = INF;\nlong long a[MAXN], b[MAXN], cnt[MAXN];\nbool vis[MAXN];\nlong long tree[MAXN << 1];\n\nint lowbit(int x){return x & (-x); }\n\nvoid add(int x, int k){\n\tfor(int i = x; i <= n; i += lowbit(i))\n\t\ttree[i] += k; \n}\n\nint getsum(int x){\n\tint ans = 0;\n\tfor(int i = x; i > 0; i -= lowbit(i)) ans+=tree[i];\n}\n\nbool check(int mid){\n\tfor(int i = 1; i <= n; ++i) tree[i] = b[i];\n\tlong long day = 0, sum = 0;\n\tfor(int i = 1; i <= n; ++i){\n\t\tsum += tree[i];\n\t\tif(sum < mid){\n\t\t\tday += mid - sum;\n\t\t\ttree[i] += (mid - sum);\n\t\t\ttree[i + w] += (sum - mid);\n\t\t\t//add(i, (mid - sum));\n\t\t\t//add(i + w + 1, (sum - mid));\n\t\t\tsum = mid;\n\t\t}\n\t}\n\tif(day <= m) return true;\n\telse\t\t return false;\n}\n\nvoid ef(int l, int r){\n\tlong long mid;\n\tmid = ((l + r) /2);\n\t//------\n\t//cnt[mid]++;\n\t//cout<<l<<\" \"<<mid<<\" \"<<r<<endl;\n\t//if(cnt[mid] >= 10) return ;\n\t//-------\n\tif(l > r) return ;\n\tif(check(mid))\t{//l = 9, r = 10, mid = 9, check(9) = true\n\t\tans = mid;\n\t\tef(mid + 1, r);\t\n\t}\n\telse{\n\t\tef(l, mid - 1);\t\n\t} \t\n}\n\nint main()\n{\n\tscanf(\"%d%d%d\", &n ,&m, &w);\n\tfor(int i = 1; i <= n; ++i)\t{\n\t\tscanf(\"%d\", &a[i]),\tb[i] = a[i] - a[i-1];\n\t\tminn = min(minn, a[i]);\n\t}\n\t\n\tef(minn - 1, minn + m + 1);\n\t\n\tprintf(\"%d\", ans);\n\t\n\treturn 0;\t\n}\n```\n",
        "postTime": 1603615727,
        "uid": 230580,
        "name": "Suzt_ilymtics",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF460C \u3010Present\u3011"
    },
    {
        "content": "# [Present](https://www.luogu.com.cn/problem/CF460C)\n\n## \u9898\u76ee\u5927\u610f:\n\n\u5148\u7ed9\u4f60\u4e00\u4e32\u5e8f\u5217,\u4f60\u81f3\u591a\u6709$\\text{m}$\u6b21\u64cd\u4f5c\u4f7f\u5f97\u4e00\u6bb5\u957f\u5ea6\u4e3a$w$\u7684\u533a\u95f4\u52a0\u4e00\n\n\u95ee\u8fd9\u4e32\u5e8f\u5217\u7684\u6700\u5c0f\u503c\u6700\u5927\u53ef\u4ee5\u662f\u591a\u5c11?\n\n## \u5206\u6790:\n\u6700\u5c0f\u503c\u6700\u5927\u6216\u8005\u6700\u5927\u503c\u6700\u5c0f,\u6211\u4eec\u7684\u7b2c\u4e00\u53cd\u5e94\u53ef\u80fd\u90fd\u662f\u4e8c\u5206\u7b54\u6848\n> \u7b80\u5355\u8bc1\u660e\u4e00\u4e0b:\n> > \u5982\u679c\u6700\u5c0f\u503c\u6700\u5927\u4e3a$x$,\u90a3\u4e48\u53ea\u8981\u6211\u4eec\u5c11\u505a\u4e00\u6b21\u64cd\u4f5c,\u90a3\u4e48$x-1$\u4e5f\u662f\u53ef\u884c\u7684\n\n> > \u8fd9\u6ee1\u8db3\u4e8c\u5206\u7b54\u6848\u7684\u6027\u8d28,\u6240\u4ee5\u5462\u4e8c\u5206\u7b54\u6848\u6ca1\u6709\u95ee\u9898\u7684\n\n\u90a3\u4e48\u5173\u4e8e$check$\u51fd\u6570\u7684\u8bdd,\u5982\u679c\u5f53\u524d\u6211\u4eec\u679a\u4e3e\u5230\u7684\u6570\u4ed6\u5c0f\u4e8e\u8fd9\u4e2a\u6211\u4eec$\\text{check}$\u7684\u503c,\u90a3\u4e48\u6211\u4eec\u5c31\u7ed9\u8fd9\u4e00\u6bb5\u533a\u95f4\u52a0\u4e0a\u8fd9\u4e2a\u5dee\u503c(\u5982\u679c\u53ef\u4ee5\u52a0,\u5426\u5219\u8fd4\u56de\u96f6)\n\n\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u6982\u5c31\u662f$O(\\log10^9*n)$,\u53ef\u4ee5\u63a5\u53d7\u7684\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\nconst ll maxn = 1e5 + 10;\nconst ll mod = 1e9 + 7;\n\ninline ll __read()\n{\n    ll x(0), t(1);\n    char o (getchar());\n    while (o < '0' || o > '9') {\n        if (o == '-') t = -1;\n        o = getchar();\n    }\n    for (; o >= '0' && o <= '9'; o = getchar()) x = (x << 1) + (x << 3) + (o ^ 48);\n    return x * t;\n}\n\nll n, m, w, a[maxn];\nll CF[maxn], temp[maxn];\nll l(0x7fffffff), r, ans;\n\ninline bool Check(ll x) \n{\n    memcpy(temp + 1, CF + 1, sizeof(ll) * n);\n    ll now(0), rest(m);\n    for (ll i = 1; i <= n; ++i) {\n        now += temp[i];\n        if (now >= x) continue;\n        if (now + rest < x) return 0;\n        ll get = x - now;\n        rest -= get;\n        now += get;\n        if (i + w <= n) temp[i + w] -= get;\n    }\n    return 1;\n}\n\nsigned main()\n{\n    n = __read(), m = __read(), w = __read();\n    for (ll i = 1; i <= n; ++i)  {\n        a[i] = __read();\n        CF[i] = a[i] - a[i - 1];\n        l = min(l, a[i]), r = max(r, a[i]);\n    }\n    r += m;\n    while (l <= r) {\n        ll mid = (l + r) >> 1;\n        if (Check(mid)) ans = mid, l = mid + 1;\n        else r = mid - 1;\n    }\n    printf (\"%lld\\n\", ans);\n    system(\"pause\");\n}\n```",
        "postTime": 1600067111,
        "uid": 57896,
        "name": "STPGUY",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF460C \u3010Present\u3011"
    },
    {
        "content": "\u6700\u5c0f\u6700\u5927\uff0c\u76f4\u63a5\u6761\u4ef6\u6027\u53cd\u5c04\u4e0a\u4e8c\u5206  \n\u672c\u9898\u5751\u4e0d\u591a\uff0c\u6ce8\u610f\u4e8c\u5206\u7684\u8fb9\u754c\u95ee\u9898\u548c\u7ebf\u6bb5\u6811\u6bcf\u6b21\u6e050  \n```cpp\n#include<bits/stdc++.h>\n#define lc (p<<1)\n#define rc (p<<1|1)\nusing namespace std;\nlong long a[100010];\nstruct Node{\n\tint l,r;long long lazy,sum;\n}T[400010];\ninline void pushup(int p){\n\tT[p].sum=min(T[lc].sum,T[rc].sum);\n}\nvoid build(int p,int l,int r){\n\tT[p].l=l,T[p].r=r;\n\tif(l==r){\n\t\tT[p].sum=a[l];return;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(lc,l,mid);\n\tbuild(rc,mid+1,r);\n\tpushup(p);\n}\ninline void pushnow(int p,int v){\n\tT[p].sum+=v;T[p].lazy+=v;\n}\nvoid pushdown(int p){\n\tif(T[p].lazy){\n\t\tpushnow(lc,T[p].lazy);\n\t\tpushnow(rc,T[p].lazy);\n\t\tT[p].lazy=0;\n\t}\n}\nvoid update(int p,int ql,int qr,long long v){\n\tif(ql<=T[p].l&&T[p].r<=qr){\n\t\tpushnow(p,v);return;\n\t}\n\tpushdown(p);\n\tint mid=(T[p].l+T[p].r)>>1;\n\tif(ql<=mid)update(lc,ql,qr,v);\n\tif(qr>mid)update(rc,ql,qr,v);\n\tpushup(p);\n}\nlong long query(int p,int ql,int qr){\n\tif(ql<=T[p].l&&T[p].r<=qr)\n\t\treturn T[p].sum;\n\tpushdown(p);\n\tint mid=(T[p].l+T[p].r)>>1;\n\tlong long ans=0;\n\tif(ql<=mid)ans+=query(lc,ql,qr);\n\tif(qr>mid)ans+=query(rc,ql,qr);\n\treturn ans;\n}\nint n,m,w;\nint check(int mid){\n\t//cout<<mid<<endl;\n\tmemset(T,0,sizeof(T));\n\tbuild(1,1,n);\n\tint rest=m;\n\tfor(int i=1;i<=n;++i){\n\t\tint now=query(1,i,i);\n\t\tif(now<mid)\n\t\t\tupdate(1,i,min(i+w-1,n),mid-now),rest-=(mid-now);\n\t\tif(rest<0)return 0;\n\t\t//cout<<rest<<\" \";\n\t}\n\t//cout<<endl;\n\t//if(rest<0)return 0;\n\treturn 1;\n}\nint main(){\n\t//freopen(\"std.in\",\"r\",stdin);\n\t//freopen(\"my.out\",\"w\",stdout);\n\tscanf(\"%d%d%d\",&n,&m,&w);\n\tfor(int i=1;i<=n;++i)\n\t\tscanf(\"%lld\",&a[i]);\n\tbuild(1,1,n);\n\tint l=T[1].sum,r=T[1].sum+m,ans;\n\twhile(l<=r){\n\t\tint mid=(l+r)>>1;\n\t\tif(check(mid)==1)ans=mid,l=mid+1;\n\t\telse r=mid-1;\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1566810986,
        "uid": 138543,
        "name": "\u6597\u795e_\u541b\u83ab\u7b11",
        "ccfLevel": 0,
        "title": "\u7ebf\u6bb5\u6811-6"
    }
]