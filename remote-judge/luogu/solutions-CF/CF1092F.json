[
    {
        "content": "## Codeforces Round 527 Div.3 F\n\n\u8fd9\u9898\u771f\u7684\u6ca1\u6709F\u7684\u96be\u5ea6\u3002\u3002\u3002\n\n_____\n\n\u56e0\u4e3a\u8d85\u8fc7Div.3\u7684Rating\u8981\u6c42\uff0c\u6240\u4ee5\u8fd9\u573a\u6211\u6ca1\u6709\u6253\uff0c\u672c\u6765\u662f\u60f3\u56f4\u89c2\u4e00\u4e0b\u6709\u6ca1\u6709__\u6bd2\u7624\u6570\u636e\u7ed3\u6784__\u9898\uff08\u6bd4\u59822018.12.15\u7684E\uff09\u7684\u3002\u3002\u3002\n\n\u770b\u5230\u8fd9\u6b21\u7684F\u53c8\u662f\u6811\u636e\u7ed3\u6784\u9898\uff08\u8bf6\uff1f\u6211\u4e3a\u4ec0\u4e48\u8bf4\u53c8\u662f\uff1f\uff09\uff0c\u5c31\u8fc7\u6765\u819c\u62dc\u4e24\u4e0b\uff0c\u987a\u4fbf\u770b\u770b\u8bc4\u4f30\u4e00\u4e0b\u96be\u5ea6\uff0c\u81ea\u5df1\u8fd8\u8981\u51e0\u5e74\u624d\u80fd\u505a\u51fa\u8fd9\u79cd\u9898\u3002\n\n\u7ed3\u679c\u7adf\u7136\u662f\u9053\u4e8c\u6b21\u6362\u6839\u4e00\u773c\u9898\uff1f\uff01\n\n\u51c6\u786e\u6765\u8bb2\uff0c\u5c31\u662f\u6570\u636e\u7a0d\u5927\u4e00\u4e9b\u7684[P2986 \u4f1f\u5927\u7684\u5976\u725b\u805a\u96c6](https://www.luogu.org/problemnew/show/P2986)\n\n\u90a3\u9053\u9898\u53ef\u80fd\u8fd8\u7a0d\u7a0d\u96be\u4e00\u70b9\uff0c\u56e0\u4e3a\u6bcf\u6761\u8fb9\u5728\u90a3\u9053\u9898\u91cc\u6709\u957f\u5ea6\u3002\n\n_____\n\n\u4e0b\u9762\u8fdb\u5165\u6b63\u9898\u3002\n\n\u770b\u5230\u672c\u9898\u9898\u610f\uff0c\u5c31\u662f\u7ed9\u4f60\u4e00\u68f5\u65e0\u6839\u6811\uff0c\u4efb\u9009\u4e00\u4e2a\u8282\u70b9\u4f5c\u6839\uff0c\u6c42$\\sum dep(i)\\times a_i$\u7684\u6700\u5927\u503c\u3002\n\nP2986\u5219\u662f\u6c42$\\sum dep(i) \\times a_i$\u7684\u6700\u5c0f\u503c\u3002\n\n\u8fd9\u6709\u4ec0\u4e48\u533a\u522b\u561b\uff01\u5b8c\u5168\u5c31\u662f\u4e00\u9053\u53cc\u500d\u7ecf\u9a8c\u9898\uff08\u597d\u50cf\u8bf4\u6f0f\u5634\u4e86\uff09\uff01\n\n\u5982\u679c\u628a$n$\u653e\u5c0f\u4e00\u70b9\uff0c$n\\le 2000$\uff0c\u53ef\u4ee5\u600e\u4e48\u529e\uff1f\n\n\u81ea\u7136\uff0c\u6211\u4eec\u76f4\u63a5\u679a\u4e3e\u6bcf\u4e2a\u8282\u70b9\u4f5c\u6839\uff0c\u7136\u540e\u4e00\u904d$dfs$\u51fa\u89e3\uff0c$n$\u904d\u53d6\u4e2a\u6700\u5927\u503c\u5c31\u597d\u4e86\u3002\u603b\u65f6\u95f4\u590d\u6742\u5ea6$O(n^2)$\u3002\n\n\u4f46\u662f\u5230\u4e86$n\\le 200000$\u7684\u65f6\u5019\uff0c\u8fd9\u5c31\u65e0\u6cd5\u627f\u53d7\u4e86\uff0c\u80af\u5b9a\u8981$O(n)$\u6216\u8005$O(nlogn)$\u3002\u6839\u636e\u6211\u4eec\u505a\u8fd9\u79cd\u4e0d\u5e26\u8d2a\u5fc3\u7684\u6811\u7684\u9898\u7684\u5e38\u89c4\u5957\u8def\uff0c\u80af\u5b9a\u662f$O(n)$\uff0c\u4e5f\u5c31\u662f\u8981\u4e00\u904d\u6216\u4e24\u904d$dfs$\u51fa\u89e3\u3002\n\n\u5148\u4efb\u9009\u4e00\u4e2a\u8282\u70b9\u4e3a\u6839\u3002\u6211\u662f\u76f4\u63a5\u75281\u7684\u3002\n\n\uff08\u5728\u6b64\u62a8\u51fb@Parabola\u4f7f\u7528srand(19260817)\u7684\u884c\u4e3a\uff09\n\n\u9996\u5148\u662f\u7b2c\u4e00\u904dDFS\u3002\u4e0d\u7528\u60f3\u592a\u591a\uff0c\u4e00\u822c\u5c31\u662f\u628a\u5b50\u6811\u7684\u6743\u503c\u548c\u6c42\u51fa\u6765\u3002\u672c\u9898\u8fd8\u8981\u6c42\u4e00\u4e2a\u201c\u8d39\u7528\u201d\uff0c\u76f4\u63a5\u4e00\u8d77\u6c42\u6389\u5c31\u597d\u4e86\u3002\n\n```cpp\nvoid dfs1(int u,int fa){\n\ts[u]=a[u]; s2[u]=0;\n\tfor(int i=h[u],v;i;i=nex[i]){//\u94fe\u5f0f\u524d\u5411\u661f\n\t\tif((v=to[i])==fa)continue;\n\t\tdfs1(v,u);\n\t\ts[u]+=s[v];\n\t\ts2[u]+=s[v]+s2[v];\n\t}\n}\n```\n\n\u5176\u4e2d\uff0cs2[u]\u8868\u793a\u4ee5u\u4e3a\u6839\u7684\u5b50\u6811\u7684\u8d39\u7528\uff0cs[u]\u8868\u793a\u5b50\u6811\u7684\u6743\u503c\u548c\u3002\n\n\u4e3a\u4ec0\u4e48$s2[u]=s[v]+s2[v]$\u5462\uff1f\n\n\u56e0\u4e3a\uff0c\u6bcf\u4e2a$v$\u7684\u5b50\u6811\u4e2d\u7684\u8282\u70b9\u5728\u901a\u8fc7$(u,v)$\u8fd9\u6761\u8fb9\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u5bf9$u$\u7684\u7b54\u6848\u9020\u6210\uff08$s[v]\\times dist(u,v)$\uff09\u7684\u8d21\u732e\uff0c\u4e5f\u5c31\u662f$s[v]$\u3002\u56e0\u6b64\uff0c$u$\u7684\u8d39\u7528\u6bd4$v$\u989d\u5916\u591a\u51fa\u4e00\u4e2a$s[v]$\u3002\n\n\u7b2c\u4e8c\u6b21\u5e94\u8be5\u53c8\u5982\u4f55\u5462\uff1f\u6211\u4eec\u8003\u8651\u4f7f\u7528\u7236\u4eb2\u7684\u8d39\u7528\uff08\u6ce8\u610f\uff0c\u73b0\u5728\u5f00\u59cb\u6307\u7684\u662f\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u6839\u7684\u6574\u68f5\u6811\u7684\u8d39\u7528\u4e86\uff09\u53bb\u63a8\u513f\u5b50\u7684\u8d39\u7528\u3002\n\n\u6211\u4eec\u628a\u6811\u753b\u6210\u8fd9\u4e2a\u6837\u5b50\uff1a\n\n![](https://i.loli.net/2018/12/19/5c1a4ed12d2f6.png)\n\n\u90a3\u4e48\uff0c\u5728\u201c\u4eceu\u8d70\u5230v\u201d\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4ee5v\u4e3a\u6839\u7684\u5b50\u6811\u4ee3\u4ef7\u51cf\u53bb$s[v]$\uff0c\u800c\u5176\u4f59\u6240\u6709\u8282\u70b9\u7684\u4ee3\u4ef7\u52a0\u4e0a$sum-s[v]$\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u5199\u51fa\u7b2c\u4e8c\u4e2aDFS\uff1a\n\n```cpp\nvoid dfs2(int u,int fa,ll sum){\n\tfor(int i=h[u],v;i;i=nex[i]){\n\t\tif((v=to[i])==fa)continue;\n\t\tdp[v]=(sum+s[u]-s[v])+dp[u]-s[v];\n\t\tdfs2(v,u,sum+s[u]-s[v]);\n\t}\n}\n```\n\n\u8fd9\u91cc\u7684$sum$\u5c31\u4ee3\u8868$sum-s[v]$\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u628a\u4ee5\u6240\u6709\u70b9\u4e3a\u6839\u7684\u6811\u7684\u8d39\u7528\u6c42\u51fa\u6765\u4e86\u3002\u6700\u540e\u53d6\u4e2a\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int iz=2e5+5;\ntypedef long long ll;\nint h[iz],to[iz<<1],nex[iz<<1],tot=0;\nint n;\nll dp[iz],s[iz],a[iz],s2[iz];\ninline void add(int x,int y){to[++tot]=y; nex[tot]=h[x]; h[x]=tot;}\nvoid dfs1(int u,int fa){\n\ts[u]=a[u]; s2[u]=0;\n\tfor(int i=h[u],v;i;i=nex[i]){\n\t\tif((v=to[i])==fa)continue;\n\t\tdfs1(v,u);\n\t\ts[u]+=s[v];\n\t\ts2[u]+=s[v]+s2[v];\n\t}\n}//\u7b2c\u4e00\u6b21\nvoid dfs2(int u,int fa,ll sum){\n\tfor(int i=h[u],v;i;i=nex[i]){\n\t\tif((v=to[i])==fa)continue;\n\t\tdp[v]=(sum+s[u]-s[v])+dp[u]-s[v];\n\t\tdfs2(v,u,sum+s[u]-s[v]);\n\t}\n}//\u7b2c\u4e8c\u6b21\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)scanf(\"%lld\",&a[i]);\n\tfor(int i=1,x,y;i<n;i++){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd(x,y); add(y,x);\n\t}\n\tdfs1(1,0);\n\tdp[1]=s2[1];//dp[1]\u5c31\u662fs2[1]\n\tdfs2(1,0,0);\n\tll ans=-2e18;\n\tfor(int i=1;i<=n;i++)ans=max(ans,dp[i]);//\u53d6\u6700\u5927\u503c\n\tprintf(\"%I64d\",ans);\n}\n```\n\n\u6211\u7684s2\u5728\u8fd9\u91cc\u662f\u6ca1\u5fc5\u8981\u7684~~\uff0c\u6211\u53ea\u662f\u5077\u61d2\u6ca1\u6539\u800c\u5df2~~\u3002\n\n\u8c22\u8c22\u5927\u5bb6\uff01QwQ",
        "postTime": 1545228328,
        "uid": 52913,
        "name": "CreeperK",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1092F \u3010Tree with Maximum Cost\u3011"
    },
    {
        "content": "[\u9898\u76ee\u9875\u9762](https://www.luogu.com.cn/problem/CF1092F)\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\uff1f](https://www.luogu.com.cn/blog/yinjun2024/solution-cf1092f)\n\n\u8fd9\u9053\u9898\u6211\u4eec\u8003\u8651\u6811\u5f62DP\u4e2d\u7684\u6362\u6839\u6cd5\n\n\u9996\u5148\uff0c\u6211\u4eec\u6307\u5b9a\u4e00\u4e2a\u6839 $1$\uff0c \u5904\u7406\u51fa\u6bcf\u4e2a\u8282\u70b9\u7684\u6df1\u5ea6\u4ee5\u53ca\u4ee5\u5b83\u4e3a\u6839\u7684\u5b50\u6811 $a$ \u503c\u7684\u603b\u548c\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u6c42\u51fa $u = 1$ \u65f6\u7684\u7b54\u6848\uff1a $\\sum\\{depth_i*a_i\\}$\u3002\n\n\u63a5\u7740\uff0c\u6211\u4eec\u8003\u8651\u6362\u6839DP\uff0c\u5982\u4e0b\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/0epxy6fd.png)\n\n\u5f53\u6839 $u$ \u6362\u5230\u6839 $v$ \u65f6\uff0c\u4ee5 $v$ \u4e3a\u5b50\u6811\u7684\u8282\u70b9\u7684\u8d21\u732e\u5404\u51cf\u5c11 1\uff0c\u5171\u51cf\u5c11$size_v$\uff0c\u5176\u4f59\u90e8\u5206\u7684\u8d21\u732e\u5404\u589e\u52a0 1\uff0c\u5171\u589e\u52a0$\\sum\\{a_i\\} - size_v$\uff0c\u56e0\u6b64\u5f53\u8282\u70b9 $v$ \u5f53\u6839\u65f6\uff0c $ans_v = ans_u + sum - 2size_v$\u3002\n\n\u6700\u540e\u7684\u7b54\u6848\u5c31\u662f $\\max\\{ans_u\\}$\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <algorithm>\n#define int long long\nusing namespace std;\nconst int MAXN = 1000001;\nint depth[MAXN], size[MAXN], dp[MAXN];\nint n, QwQ;\nint a[MAXN];\nstruct edge {\n\tint to, nxt;\n} edges[MAXN * 2];\nint head[MAXN], tot;\nvoid add(int u, int v) {\n\tedges[++tot].to = v;\n\tedges[tot].nxt = head[u];\n\thead[u] = tot;\n}\nvoid dfs1(int x, int fa, int dep) {\n\tdepth[x] = dep;\n\tsize[x] = a[x];\n\tfor (int i = head[x]; i; i = edges[i].nxt) {\n\t\tint v = edges[i].to;\n\t\tif (v == fa) continue;\n\t\tdfs1(v, x, dep + 1);\n\t\tsize[x] += size[v];\n\t}\n}\nvoid dfs2(int x, int fa) {\n\tif (x != 1) dp[x] = dp[fa] + QwQ - size[x] - size[x];\n\tfor (int i = head[x]; i; i = edges[i].nxt) {\n\t\tint v = edges[i].to;\n\t\tif (v == fa) continue;\n\t\tdfs2(v, x);\n\t}\n}\nsigned main() {\n\tscanf(\"%lld\", &n);\n\tfor (int i = 1; i <= n; i++) {\n\t\tscanf(\"%lld\", &a[i]);\n\t\tQwQ += a[i];\n\t}\n\tfor (int i = 1; i < n; i++) {\n\t\tint u, v;\n\t\tscanf(\"%lld %lld\", &u, &v);\n\t\tadd(u, v);\n\t\tadd(v, u);\n\t}\n\tdfs1(1, 0, 0);\n\tfor (int i = 1; i <= n; i++) {\n\t\tdp[1] += depth[i] * a[i];\n\t}\n\tdfs2(1, 0);\n\tint ans = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tans = max(ans, dp[i]);\n\t}\n\tprintf(\"%lld\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1601803810,
        "uid": 109114,
        "name": "_l_l_",
        "ccfLevel": 8,
        "title": "\u3010\u9898\u89e3\u3011CF1092F\u3010Tree with Maximum Cost\u3011"
    },
    {
        "content": "\u6821\u5185\u505a\u8fc7\u4e00\u9053\u52a0\u5f3a\u7248\uff0c\u5c31\u662f\u8ba9\u4f60\u6c42 $min{\\sum_{i=1}^{n} dist(i,v)^2*a_i}$\n\n\u601d\u8def\u5176\u5b9e\u5dee\u4e0d\u591a\uff0c\u5c31\u662f\u66b4\u529b\u6362\u6839dp\uff0c\u6211\u4eec\u8003\u8651\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684\u5b50\u8282\u70b9\u7684\u6743\u503c\u603b\u548c\uff0c\u8bb0\u4f5c $s_i$\n\n\u7528 $f_v$ \u8bb0\u5f55 $\\sum_{i=1}^{n} dist(i,v)^2*a_i$\n\n\u5728\u6362\u6839\u7684\u65f6\u5019\uff0c\u5047\u8bbe $u->v$ \u6709\u4e00\u6761\u8fb9\uff0c$f_v=f_u-s_v+sum-s_v$\n\n\u5176\u4e2d $sum$ \u8868\u793a $\\sum_{i=1}^n a_i$\uff0c\u6ce8\u610f\u8981\u5148\u7b97\u51fa $f_1$ \u7684\u503c\u624d\u80fd\u5f00\u59cb\u6362\u6839\n\n**Code:**\n\n```cpp\n#include<bits/stdc++.h>\n\n#define rd(x) x=read()\n\n#define N 200005\n#define int long long\n\nusing namespace std;\n\nint n,m;\nvector<int>e[N];\nint a[N],s[N],f[N],t[N];//t[N]\u7528\u6765\u8ba1\u7b97f[1]\n\ninline void addEdge(int u,int v){e[u].push_back(v);}\n\ninline int read()\n{\n    int x=0,f=1;char ch=getchar();\n    while(ch>'9'||ch<'0'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\n\ninline void write(int x)\n{\n    if(x<0){putchar('-');x=-x;}\n    if(x>=10)write(x/10);\n    putchar(x%10+'0');\n}\n\nint ans,sum;\n\nvoid dfs(int u,int fa)\n{\n    s[u]=a[u];\n    for(int i=0;i<e[u].size();i++)\n    {\n        int v=e[u][i];\n        if(v==fa)continue;\n        dfs(v,u),t[u]+=t[v]+s[v],s[u]+=s[v];\n\t}\n}\n\nvoid dfss(int u,int fa)\n{\n    for(int i=0;i<e[u].size();i++)\n    {\n        int v=e[u][i];\n        if(v==fa)continue;\n        f[v]=f[u]-s[v]+sum-s[v],dfss(v,u);\n\t}\n}\n\nsigned main()\n{\n    rd(n);\n    for(int i=1;i<=n;i++)rd(a[i]),sum+=a[i];\n    for(int i=1,u,v;i<n;i++)rd(u),rd(v),addEdge(u,v),addEdge(v,u);\n    dfs(1,0),f[1]=t[1],dfss(1,0);for(int i=1;i<=n;i++)ans=max(ans,f[i]);\n    cout<<ans<<endl;\n    \n    \n    return 0;\n}\n```",
        "postTime": 1573729236,
        "uid": 53807,
        "name": "Erusel",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1092F \u3010Tree with Maximum Cost\u3011"
    },
    {
        "content": "\u5957\u8def\u7684\u6362\u6839\uff0c\u719f\u6089\u7684\u914d\u65b9\u2026\u2026\n\n\u5982\u679c\u6ca1\u6709\u70b9\u6743 $a_i$\uff0c\u90a3\u4e48\u8fd9\u9898\u5c31\u662f [\u4e00\u9053\u7eff\u9898](https://www.luogu.com.cn/problem/P3478)\u3002\n\n\u73b0\u5728\u6709\u4e86\u70b9\u6743 $a_i$\u3002\u7b2c\u4e00\u6b21 dfs \u6211\u4eec\u9700\u8981\u7ef4\u62a4 $s_u$ \uff08\u5b50\u6811\u70b9\u6743\u548c\uff09\uff0c$d_u$ \uff08\u6df1\u5ea6\uff09\u548c $f_u$ \uff08\u5b50\u6811\u7684 $\\sum dist$\uff09\u3002\u7b2c\u4e8c\u6b21 dfs \u6211\u4eec\u7b97\u51fa $g_u$ \uff08$u$ \u4e3a\u6839\u65f6\u7684\u7b54\u6848\uff09 \u3002\n\n\u5176\u4e2d\u5bf9\u4e8e\u7b2c\u4e8c\u6b21 dfs \u79cd\u8ba1\u7b97 $ans$ \u7684\u90e8\u5206\uff0cans \u4ece u \u8f6c\u5230 v\uff0c$v$ \u5b50\u6811\u5185\u90e8\u505a\u51fa\u7684\u8d21\u732e\u51cf\u5c11\u4e86\uff0c$v$ \u5b50\u6811\u5916\u90e8\u505a\u51fa\u7684\u8d21\u732e\u51cf\u5c11\u4e86\uff0c\u6240\u4ee5\u603b\u4f53\u6765\u8bf4\uff0c$ans_v=ans_u-s_v+(sum-s_v)$\uff0c\u5373 $ans_v=ans_u+sum-2s_v$\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int N=2e5+9;\nstruct edge {int to,nxt;}e[N*2]; int hd[N],tot;\nvoid add(int u,int v) {e[++tot]=(edge){v,hd[u]};hd[u]=tot;}\n\nint n,a[N],sum;\n\nint s[N],f[N],d[N];\nvoid dfs1(int u,int fa){\n\ts[u]=a[u];\n\tfor(int i=hd[u],v;i;i=e[i].nxt) {\n\t\tif((v=e[i].to)==fa) continue;\n\t\td[v]=d[u]+1;\n\t\tdfs1(v,u);\n\t\ts[u]+=s[v], f[u]+=(f[v]+s[v]);\n\t}\n} \n\nint ans[N],anss;\nvoid dfs2(int u,int fa){\n\tif(u==1) ans[u]=f[u];\n\tfor(int i=hd[u],v;i;i=e[i].nxt){\n\t\tif((v=e[i].to)==fa) continue;\n\t\tans[v]=ans[u]+sum-2*s[v];\n\t\tdfs2(v,u);\n\t}\n\tanss=max(anss,ans[u]);\n}\n\nsigned main() {\n\tscanf(\"%lld\",&n);\n\tfor(int i=1;i<=n;i++) scanf(\"%lld\",&a[i]), sum+=a[i];\n\tfor(int i=1,u,v;i<n;i++)\n\t\tscanf(\"%lld%lld\",&u,&v),\n\t\tadd(u,v), add(v,u);\n\tdfs1(1,0), dfs2(1,0);\n\tprintf(\"%lld\",anss);\n\treturn 0;\n} \n```",
        "postTime": 1593358076,
        "uid": 180652,
        "name": "_lgswdn",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1092F \u3010Tree with Maximum Cost\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5462\uff0c\u7528\u6362\u6839DP\u6765\u505a\u3002\n\n\u6211\u4eec\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u6765\u6c42\u51fa\u8fd9\u4e2a\u70b9\u7684\u8d21\u732e\u662f\u591a\u5c11\u3002\n\n\u90a3\u4e48\uff0c\u5206\u4e3a\u5b50\u6811\u5185\u7684\u90e8\u5206\u548c\u5b50\u6811\u5916\u7684\u90e8\u5206\u3002\n\n\u4e24\u90e8\u5206\u5927\u81f4\u76f8\u540c\u3002\u4ee5\u5b50\u6811\u5185\u7684\u90e8\u5206\u4e3a\u4f8b\u3002\n\n\u6211\u4eec\u8bbe$sum_i$\u8868\u793a\u5b50\u6811\u5185\u7684\u603b\u8d21\u732e\u662f\u591a\u5c11\uff0c\u90a3\u4e48\u8003\u8651\u4ece\u513f\u5b50\u8f6c\u79fb\u800c\u6765\uff0c\u8d21\u732e\u5c31\u662f\u8fd9\u4e2a\u513f\u5b50\u7684sum\u52a0\u4e0a\u5b50\u6811\u5185\u7684$a_i$\u548c\uff0c\u56e0\u4e3a\u7ecf\u8fc7\u4e86\u4e00\u6761\u8fb9\uff0c\u6240\u6709\u7684$a_i$\u5e94\u8be5\u90fd\u52a0\u4e00\u6b21\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u7ef4\u62a4\u5b50\u6811\u5185\u7684\u8d21\u732e\u548c\u5b50\u6811\u5185\u7684$a_i$\u548c\u5373\u53ef\u3002\n\n\u5b50\u6811\u5916\u7684\u60c5\u51b5\u5dee\u4e0d\u591a\u7c7b\u4f3c\u3002\n\n\u8be6\u89c1\u4ee3\u7801\uff1a\n```cpp\n#include <map>\n#include <set>\n#include <cmath>\n#include <queue>\n#include <vector>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\ntypedef long long ll;\ntypedef unsigned int uint;\ntypedef unsigned long long ull;\nnamespace IO\n{\n\tchar buf[1 << 20 | 1] , *f1 = buf , *f2 = buf , pbuf[1 << 24 | 1] , *f3 = pbuf , sta[100];\n\t#define gc() ((f1 == f2) && (f2 = (f1 = buf) + fread(buf,1,sizeof buf,stdin),f1 == f2) ? EOF : *f1 ++)\n\t#define gt() getchar()\n\tinline int read()\n\t{\n\t\tint x = 0 , f = 1; char ch = gt();\n\t\twhile(ch < '0' || ch > '9')\t{if(ch == '-')\tf = -1; ch = gt();}\n\t\twhile(ch >= '0' && ch <= '9') {x = (x << 3) + (x << 1) + (ch ^ 48); ch = gt();}\n\t\treturn x * f;\n\t}\n\ttemplate <class T> inline void write(T x)\n\t{\n\t\tif(!x) return (void)(*f3 ++ = 48 , *f3 ++ = ' ');\n\t\tif(x < 0) *f3 ++ = '-' , x = ~x + 1;\n\t\tchar *top = sta;\n\t\twhile(x) *top ++ = x % 10 + 48 , x /= 10;\n\t\twhile(top != sta) *f3 ++ = *-- top;\n\t\t*f3 ++ = ' ';\n\t}\n\tinline void put(std::string s)\n\t{\n\t\tint len = s.length();\n\t\tfor(int i = 0;i < len;i ++) *f3 ++ = s[i];\n\t\t*f3 ++ = ' ';\n\t}\n\tinline void endline() { *f3 ++ = '\\n';}\n\t#define flush() fwrite(pbuf,1,f3 - pbuf,stdout)\n\ttemplate <class T> inline T abs(T a) { return a < 0 ? -a : a;}\n\ttemplate <class T> inline T max(T a,T b) { return a > b ? a : b;}\n\ttemplate <class T> inline T min(T a,T b) { return a < b ? a : b;}\n\ttemplate <class T> inline void swap(T &a,T &b) { T t = a; a = b; b = t;}\n}\nusing namespace IO;\nconst int N = 2e5 + 5;\nint n;\nll size[N] , sum[N] , S[N] , s[N];\nstruct Edge\n{\n\tint to; Edge *nxt;\n\tEdge(int to = 0,Edge *nxt = NULL) : to(to) , nxt(nxt) { }\n} *head[N] , pool[N << 1] , *tail = pool;\ninline void add(int u,int v) { head[u] = new (tail ++) Edge(v,head[u]);}\nvoid dfs1(int x,int fa)\n{\n\tfor(Edge *i = head[x];i;i = i -> nxt)\n\t{\n\t\tint to = i -> to;\n\t\tif(to == fa) continue;\n\t\tdfs1(to,x);\n\t\tsize[x] += size[to];\n\t\tsum[x] += sum[to] + size[to];\n\t}\n}\nvoid dfs2(int x,int fa)\n{\n\tfor(Edge *i = head[x];i;i = i -> nxt)\n\t{\n\t\tint to = i -> to;\n\t\tif(to == fa) continue;\n\t\ts[to] = s[x] + size[x] - size[to];\n\t\tS[to] = S[x] + sum[x] - sum[to] - size[to] + s[to];\n\t\tdfs2(to,x);\n\t}\n}\nint main()\n{\n\tn = read();\n\tfor(int i = 1;i <= n;i ++) size[i] = read();\n\tfor(int i = 1 , u , v;i < n;i ++) u = read() , v = read() , add(u,v) , add(v,u);\n\tdfs1(1,0); dfs2(1,0); ll ans = 0;\n\tfor(int i = 1;i <= n;i ++) ans = max(ans,sum[i] + S[i]);\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1588158856,
        "uid": 153898,
        "name": "Treaker",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1092F \u3010Tree with Maximum Cost\u3011"
    },
    {
        "content": "\u6362\u6839DP\u88f8\u9898\uff1f\n\n\u9898\u89e3\u6dc0\u7c89\u8d28\u771f\u7684\u795e\u4ed9 orz\n\n\u4f55\u8c13\u6362\u6839DP\uff1f\n\n\u6458\u81ealyd\u7684\u8fdb\u9636\u6307\u5357\uff1a\n\n1.\u7b2c\u4e00\u6b21\u626b\u63cf\u65f6\uff0c\u4efb\u9009\u4e00\u4e2a\u70b9\u4e3a\u6839\uff0c\u518d\u201c\u6709\u6839\u6811\u201d\u4e0a\u6267\u884c\u4e00\u6b21**\u6811\u5f62DP**\uff0c\u4e5f\u5c31\u662f\u56de\u6eaf\u65f6\u53d1\u751f\u7684 \u81ea\u5e95\u5411\u4e0a\u7684\u72b6\u6001\u8f6c\u79fb\n\n2.\u7b2c\u4e8c\u6b21\u626b\u63cf\u65f6\uff0c\u4ece\u521a\u624d\u4efb\u9009\u7684\u6839\u51fa\u53d1\uff0c\u5bf9\u6574\u68f5\u6811\u6267\u884c\u4e00\u6b21**\u6df1\u5ea6\u4f18\u5148\u904d\u5386**\uff0c\u5728\uff0c\u6bcf\u6b21\u9012\u5f52\u94b1\u8fdb\u884c\u81ea\u9876\u5411\u4e0b\u7684\u63a8\u5bfc\uff0c\u8ba1\u7b97\u51fa\u6362\u6839\u540e\u7684\u65b0\u89e3\n\n\u5957\u8def\u6bd4\u8f83\u660e\u663e\n\n\u6765\u770b\u8fd9\u9053\u9898 \u8981\u6c42\u6211\u4eec\u9009\u62e9\u4e00\u4e2a\u70b9 \u4f7f\u5f97\u5176\u4ed6\u70b9\u7684\u6df1\u5ea6\u4e58\u6743\u503c\u4e4b\u548c\u6700\u5927\n\n\u6211\u4eec\u5148\u4ee5\u4e00\u53f7\u70b9\u4e3a\u6839\u7136\u540e\u8fdb\u884c\u9884\u5904\u7406 \u6c42\u51fa\u6765\u5b50\u6811\u7684\u6743\u503c\u548c \u4ee5\u53ca1\u53f7\u8282\u70b9\u4e3a\u6839\u7684DP\u503c\n\n\u8003\u8651\u7b2c\u4e8c\u6b21\u626b\u63cf\n\n\u5f53\u6211\u4eec\u679a\u4e3e\u5230u-v\u8fd9\u6761\u8fb9\u65f6 \u56fe\u88ab\u5206\u6210\u4e24\u90e8\u5206 \u753b\u56fe\u5f88\u663e\u7136\u53ef\u5f97 u\u8282\u70b9\u6240\u5728\u7684\u90e8\u5206\u6df1\u5ea6\u90fd+1 v\u8282\u70b9\u6240\u5728\u6df1\u5ea6\u90fd-1\n\n\u6240\u4ee5DP\u65b9\u7a0b\u547c\u4e4b\u6b32\u51fa\uff1a\n\nf[v]=f[u]+sum-size[v]-size[v]\n\n\nO(n)DFS\u5373\u53ef\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int N=1e6+10;\ninline int read(){\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){\n\t\tif(ch=='-')f=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9'){\n\t\tx=(x<<1)+(x<<3)+(ch^48);\n\t\tch=getchar(); \n\t}\n\treturn x*f;\n}\nint n,head[N],cnt;\nll siz[N],sum,f[N],ans=0,a[N],dep[N];\nstruct edge{\n\tint nxt,to;\n}e[N<<1];\ninline void add(int x,int y){\n\te[++cnt].nxt=head[x];\n\te[cnt].to=y;\n\thead[x]=cnt;\n}\ninline void dfs1(int x,int fa){\n\tsiz[x]=a[x];\n\tfor(int i=head[x];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tif(v==fa) continue;\n\t\tdep[v]=dep[x]+1;\n\t\tf[1]=f[1]+(ll)(a[v]*dep[v]);\n\t\tdfs1(v,x);\n\t\tsiz[x]+=siz[v];\n\t} \n}\ninline void dfs2(int x,int fa){\n\tfor(int i=head[x];i;i=e[i].nxt){\n\t\tint y=e[i].to;\n\t\tif(y==fa) continue;\n\t\tf[y]=f[x]+sum-siz[y]-siz[y];\n\t\tdfs2(y,x);\n\t}\n}\nint main(){\n\tn=read();\n\tfor(int i=1;i<=n;i++){\n\t\ta[i]=read();\n\t\tsum+=a[i];\n\t}\n\tfor(int i=1;i<n;i++){\n\t\tint u,v;\n\t\tu=read(),v=read(); \n\t\tadd(u,v);\n\t\tadd(v,u);\n\t}\n\tdfs1(1,0);\n\tdfs2(1,0);\n\tfor(int i=1;i<=n;i++){\n\t\tans=max(f[i],ans);\n\t}\n\tprintf(\"%lld\",ans);\n\treturn 0; \n}\n```\n\n\u8bb0\u5f97long long\uff01\n\n",
        "postTime": 1571313974,
        "uid": 142373,
        "name": "Kendrick_Z",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1092F \u3010Tree with Maximum Cost\u3011"
    },
    {
        "content": "\u7ed9\u4e2a\u52a8\u6001\u70b9\u5206\u505a\u6cd5 \u4f18\u70b9\u662f\u505a\u6cd5\u6bd4\u8f83\u65e0\u8111  \u7f3a\u70b9\u662f\u5206\u7c7b\u8ba8\u8bba\u7ec6\u8282\u5f88\u591a\u3002\n\n~~\u9759\u6001\u70b9\u5206\u6ca1\u6709\u5f88\u597d\u7684\u60f3\u6cd5\u6240\u4ee5\u5c31\u76f4\u63a5\u79bb\u7ebf\u8f6c\u5728\u7ebf\u505a\u4e86\uff08~~\n\n\n\u9898\u76ee\u4e2d\u7684\u5f0f\u5b50\u6211\u4eec\u76f4\u63a5\u62c6\u89e3\uff0c\u5219\u95ee\u9898\u8f6c\u5316\u4e3a\uff1a\u7ed9n\uff08n<=200000\uff09\u4e2a\u8be2\u95ee  \u6bcf\u4e00\u7ec4\u8be2\u95ee\u7ed9\u51fa\u4e00\u4e2a\u6811\u4e0a\u70b9\uff0c\u6c42\u70b9\u5230\u6811\u4e2d\u6240\u6709\u5176\u4ed6\u70b9\u7684  \u8ddd\u79bb * \u70b9\u6743\u548c  \u6700\u540e\u8f93\u51fa\u6240\u6709\u8be2\u95ee\u7684\u6700\u5927\u503c\u3002 \u90a3\u6211\u4eec\u5148\u628a\u5957\u677f\u5b50\u628a\u70b9\u5206\u6811\u5b9e\u5316\u51fa\u6765\u7136\u540e\u5728\u7ebfO\uff08log n\uff09 \u5728\u7ebf\u56de\u7b54\u6bcf\u7ec4\u8be2\u95ee\u5373\u53ef   \n\n~~\u70b9\u5206\u5904\u7406\u4fe1\u606f\u7684\u8fc7\u7a0b\u5c31\u662f\u5927\u578b\u5206\u7c7b\u8ba8\u8bba~~\n \n\u603b\u590d\u6742\u5ea66*nlogn\u8dd1\u6ee1 \n\nAC\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 220000 + 1;\nconst int MAXG = MAXN * 2 + 1;\nconst int MAX_LOG = 19;\nconst int inf = 0x3f3f3f3f;\nint n, q;\n \nstruct Edge {\n    long long v, w;\n \n    Edge(int v, int w) : v(v), w(w) {}\n};\n \nstd::vector<Edge> edge[MAXN], g[MAXG];\nint a[MAXN];\nint tot;\n \ninline void addEdge(int u, int v, int w) {\n    g[u].emplace_back(v, w);\n    g[v].emplace_back(u, w);\n}\n \ninline void binarize(int u, int pre)\n{\n    static std::vector<Edge *> now;\n    now.clear();\n    for (auto &p : edge[u])\n        if (p.v != pre) now.push_back(&p);\n    int o = u;\n    for (int i = 0; i < (int)now.size(); i++) {\n        addEdge(o, now[i]->v, now[i]->w);\n        if (now.size() - i > 2) {\n            addEdge(o, ++tot, 0);\n            o = tot;\n        }\n    }\n    for (auto &p : edge[u])\n        if (p.v != pre) binarize(p.v, u);\n}\n \nbool vis[MAXG], vis2[MAXG];\nlong long sz[MAXG], idx[MAXG], dep[MAXG], fa[MAXG], weight[MAXG];\nlong long dis[MAXG][MAX_LOG];\nlong long trans[MAXG][3],sz2[MAXG][3],trans2[MAXG][3];\n \nvoid dfsSize(int u, int pre) {\n    sz[u] = 1;\n    for (auto &p : g[u]) {\n        if (!vis[p.v] && p.v != pre) {\n            dfsSize(p.v, u);\n            sz[u] += sz[p.v];\n        }\n    }\n}\n \nint get(int u, int pre, int n) {\n    for (auto &p : g[u])\n        if (!vis[p.v] && p.v != pre && sz[p.v] > n) return get(p.v, u, n);\n    return u;\n}\n \nvoid dfs(int u, int pre, int d, int kk) {\n    for (auto &p : g[u]) {\n        if (!vis[p.v] && p.v != pre) {\n            idx[p.v] = idx[u];\n            dis[p.v][kk] = dis[u][kk] + p.w;\n            if (p.v <= n)\n            {\n                trans[d][idx[p.v]] += dis[p.v][kk]*weight[p.v];\n                trans2[d][idx[p.v]] += weight[p.v];\n                sz2[d][idx[p.v]]++;\n            }\n            dfs(p.v, u, d, kk);\n        }\n    }\n}\n \nvoid build(int u, int d, int f)\n{\n    dfsSize(u, 0);\n    vis[u = get(u, 0, sz[u] / 2)] = true;\n    fa[u] = f;\n    dep[u] = d;\n    int c = 0;\n    for (auto &p : g[u]) {\n        if (!vis[p.v]) {\n            dis[p.v][d] = p.w;\n            idx[p.v] = c++;\n            if (p.v <= n)\n            {\n                sz2[u][idx[p.v]]++;\n                trans[u][idx[p.v]] += p.w*weight[p.v];\n                trans2[u][idx[p.v]] += weight[p.v];\n            }\n            dfs(p.v, u, u, d);\n            build(p.v, d + 1, u);\n        }\n    }\n}\nlong long L, R;\nlong long query(int cur, int kk, int id)\n{\n    if (!cur)\n        return 0;\n    long long  cur_ans = 0;\n    int p = 0;\n    for (int i = 0; i < 3; ++i)\n        if (id != i)\n            cur_ans +=trans[cur][i]+trans2[cur][i]*dis[kk][dep[cur]],p+=sz2[cur][i];\n    if (cur != kk)\n    {\n        if (cur <= n)\n            cur_ans += dis[kk][dep[cur]] * weight[cur];\n    }\n    return cur_ans+query(fa[cur], kk, idx[cur]);\n}\nint32_t main()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(NULL);\n    cout.tie(NULL);\n    int  u, v, w, a, b, q, kk;\n    cin >> n;\n    memset(trans, 0, sizeof(trans));\n    for (int i = 1; i <= n; ++i)\n        cin >> weight[i];\n    for (int i = 0; i < n - 1; ++i)\n    {\n        cin >> u >> v;\n        edge[u].push_back({ v,1 });\n        edge[v].push_back({ u,1 });\n    }\n    int opt;\n    tot = n;\n    binarize(1, 0);\n    build(1, 1, 0);\n    long long Max = 0;    \n    for (int i = 1; i <= n; ++i)\n    {\n        Max = max(Max, query(i, i, -1));\n    }\n    cout << Max << endl;\n    \n    return 0;\n}\n```\n\n",
        "postTime": 1562404417,
        "uid": 154957,
        "name": "qiyue7",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1092F \u3010Tree with Maximum Cost\u3011"
    },
    {
        "content": "\u6211\u4eec\u8003\u8651\u8bbex\u4e3a\u6839\uff0c\u73b0\u5728\u5df2\u7ecf\u6c42\u51fa\u4e86x\u4e3a\u6839\u65f6\u5019\u7684\u7b54\u6848ans\uff0c\u80fd\u4e0d\u80fd\u5728O(1)\u7684\u65f6\u95f4\u5185\u5f97\u5230k(x->k)\u4e3a\u6839\u7684\u7b54\u6848\u5462\uff1f  \n\u5f53\u524d\u6839\u4e3ax\uff0c\u5982\u679c\u6839\u201c\u4e0b\u79fb\u201d\u5230k\uff0c\u90a3\u4e48\u663e\u7136\u6839\u5230k\u5b50\u6811\u5185\u7684\u6240\u6709\u70b9\u8ddd\u79bb\u90fd-1\uff0c\u7b54\u6848\u5176\u5b9e\u5c31\u51cf\u6389\u4e86k\u5b50\u6811\u5185\u7684\u70b9\u6743\u548c\uff0c\u800c\u4e0d\u662fk\u5b50\u6811\u5185\u7684\u70b9\u5230\u6839\u7684\u8ddd\u79bb\u90fd+1\uff0c\u7b54\u6848\u5c31\u8981\u52a0\u4e0a\u9664\u4e86k\u5b50\u6811\u4ee5\u5916\u7684\u70b9\u6743\u548c  \n\u90a3\u505a\u6cd5\u5c31\u5f88\u660e\u663e\u4e86\uff0c\u5148\u8bbe1\u4e3a\u6839\uff0c\u9884\u5904\u7406\u51fa\u6bcf\u4e00\u4e2a\u5b50\u6811\u7684\u70b9\u6743\u548c\uff0c\u7136\u540e\u4ece1\u5f00\u59cbdp\u63a8\u51fa\u6240\u6709\u7b54\u6848\uff0c\u53d6\u6700\u5927\u503c\n```cpp\n#include <bits/stdc++.h>\n#define rg register\n#define inl inline\ntypedef long long ll;\n#define jh(x,y) (x^=y^=x^=y)\n#define lowbit(x) (x&-x)\nconst double PI = 3.1415926535898, eps = 0;\nconst int N = 4e5 + 10, mod = 998244353;\nusing namespace std;\nnamespace fast_IO {\n    long long read()\n    {\n        rg long long num = 0;\n        rg char ch;\n        rg bool flag = false;\n        while ((ch = getchar()) == ' ' || ch == '\\n' || ch == '\\r');\n        if (ch == EOF)return ch; if (ch == '-')flag = true; else num = ch ^ 48;\n        while ((ch = getchar()) >= '0'&&ch <= '9')\n            num = (num << 1) + (num << 3) + (ch ^ 48);\n        if (flag)return -num; return num;\n    }\n    long long modread()\n    {\n        rg long long num = 0;\n        rg char ch;\n        rg bool flag = false;\n        while ((ch = getchar()) == ' ' || ch == '\\n' || ch == '\\r');\n        if (ch == EOF)return ch; if (ch == '-')flag = true; else num = ch ^ 48;\n        while ((ch = getchar()) >= '0'&&ch <= '9')\n            (num = (num << 1) + (num << 3) + (ch ^ 48)) %= mod;\n        if (flag)return -num; return num;\n    }\n    double dread()\n    {\n        rg double num = 0, mi = 1;\n        rg char ch;\n        rg bool flag = false, point = false;\n        while ((ch = getchar()) == ' ' || ch == '\\n' || ch == '\\r');\n        if (ch == EOF)return ch; if (ch == '-')flag = true; else num = ch ^ 48;\n        while ((ch = getchar()) != ' '&&ch != '\\n'&&ch != '\\r'&&~ch)\n        {\n            if (ch == '.')point = true;\n            else if (point)num += (ch ^ 48)*(mi *= 0.1);\n            else num = num * 10 + (ch ^ 48);\n        }\n        if (flag)return -num; return num;\n    }\n    char cread()\n    {\n        rg char ch;\n        while ((ch = getchar()) == ' ' || ch == '\\n' || ch == '\\r');\n        return ch;\n    }\n    int chread(rg char s[])\n    {\n        rg char ch;\n        rg int len = 0;\n        while ((ch = getchar()) == ' ' || ch == '\\n' || ch == '\\r');\n        s[len++] = ch;\n        while ((ch = getchar()) != ' '&&ch != '\\n'&&ch != '\\r'&&~ch)\n            s[len++] = ch;\n        s[len] = 0;\n        return len;\n    }\n    ll max(rg ll a, rg ll b) { if (a > b)return a; return b; }\n    ll min(rg ll a, rg ll b) { if (a < b)return a; return b; }\n    int getnum(rg int num, ...)\n    {\n        va_list vl;\n        va_start(vl, num);\n        for (rg int i = 0; i != num; ++i)\n            if (!~(*va_arg(vl, int*) = read()))return EOF;\n        return num;\n    }\n    int getnumd(rg int num, ...)\n    {\n        va_list vl;\n        va_start(vl, num);\n        for (rg int i = 0; i != num; ++i)\n            if ((*va_arg(vl, double*) = dread()) == -1)return EOF;\n        return num;\n    }\n    void write(rg ll x) { if (x < 0)putchar('-'), x = -x; if (x >= 10)write(x / 10); putchar(x % 10 ^ 48); }\n    inl ll exgcd(rg ll a, rg ll b, rg ll &x, rg ll &y)\n    {\n        if (b == 0)\n        {\n            x = 1, y = 0;\n            return a;\n        }\n        rg ll yu = exgcd(b, a%b, x, y);\n        rg ll tmp = x; x = y;\n        y = tmp - a / b * y;\n        return yu;\n    }\n    inl ll gcd(rg ll a, rg ll b) { while (b ^= a ^= b ^= a %= b); return a; }\n    inl ll ksm(rg ll a, rg ll b)\n    {\n        rg ll ans = 1;\n        while (b)\n        {\n            if (b & 1)(ans *= a) %= mod;\n            (a *= a) %= mod;\n\n        }\n        return ans;\n    }\n};\nll v[N], ans, sumv[N];\nint nt[N], b[N], p[N], num;\ninl void add(rg int x, rg int y)\n{\n    b[++num] = y, nt[num] = p[x], p[x] = num;\n    b[++num] = x, nt[num] = p[y], p[y] = num;\n}\ninl void dfs1(rg int x, rg int fa, rg ll dep)\n{\n    sumv[x] = v[x]; ans += dep * v[x];\n    for (rg int e = p[x]; e; e = nt[e])\n    {\n        rg int k = b[e];\n        if (k == fa)continue;\n        dfs1(k, x, dep + 1);\n        sumv[x] += sumv[k];\n    }\n}\ninl void dfs2(rg int x, rg int fa, rg ll sum)\n{\n    ans = fast_IO::max(ans, sum);\n    for (rg int e = p[x]; e; e = nt[e])\n    {\n        rg int k = b[e];\n        if (k == fa)continue;\n        dfs2(k, x, sum + sumv[1] - sumv[k] * 2);\n    }\n}\n\nint main()\n{\n    rg int n = fast_IO::read();\n    for (rg int i = 1; i <= n; ++i)v[i] = fast_IO::read();\n    for (rg int i = 1; i != n; ++i)add(fast_IO::read(), fast_IO::read());\n    dfs1(1, 0, 0), dfs2(1, 0, ans);\n    fast_IO::write(ans);\n    return 0;\n}\n\n```",
        "postTime": 1545230352,
        "uid": 87283,
        "name": "Zechariah",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1092F \u3010Tree with Maximum Cost\u3011"
    }
]