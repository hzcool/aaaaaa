[
    {
        "content": "\u505a\u9898\u7684\u65f6\u5019\u968f\u624bhack\u4e86\u4e24\u7bc7\u9898\u89e3\n\n\u6240\u4ee5\u6211\u6765\u8865\u4e2a\u9898\u89e3\uff08\u5927\u96fe\n\n\u8981\u8ba9\u6bcf\u4e2a\u5b50\u6811\u5927\u5c0f\u90fd\u5c0f\u4e8e\u7b49\u4e8e$\\left\\lfloor\\dfrac {n} {2}\\right\\rfloor$\n\n\u5982\u679c\u8fd9\u4e2a\u5b50\u6811\u672c\u8eab\u5c31\u53ef\u4ee5\u4f5c\u4e3a\u91cd\u5fc3\uff0c\u5c31\u4e0d\u7528\u6539\u53d8\n\n\u8003\u8651\u5982\u679c\u672c\u8eab\u4e0d\u80fd\u4f5c\u4e3a\u91cd\u5fc3\uff0c\u8bf4\u660e\u4e00\u5b9a\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u5b50\u6811\u5927\u5c0f\u5927\u4e8e$\\left\\lfloor\\dfrac {n} {2}\\right\\rfloor$\n\n\u6211\u4eec\u4e00\u5b9a\u662f\u4ece\u8fd9\u4e2a\u5b50\u6811\u91cc\u9762\u9009\u4e00\u4e2a\u5b50\u6811\u63a5\u5728\u5f53\u524d\u7684\u6839\u4e0a\u9762\uff0c\u5426\u5219\u4e0d\u662f\u6700\u4f18\u7684\n\n\u90a3\u4e48\u5c31\u8981\u4ece\u8be5\u5b50\u6811\u91cc\u9762\u627e\u5230\u4e00\u4e2a\u5c0f\u4e8e\u7b49\u4e8e$\\left\\lfloor\\dfrac {n} {2}\\right\\rfloor$\u7684\u6700\u5927\u5b50\u6811\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u8fdb\u884c\u5224\u65ad\u4e86\n\n\u8003\u8651\u5982\u4f55\u5feb\u901f\u6c42\u51fa\u8fd9\u4e2a\u503c\n\n\u770b\u4e0a\u53bb\u5c31\u5f88\u50cf\u4e00\u4e2a\u6362\u6839DP\n\n\u5148\u8003\u8651$dp[u]$\u4e3a$u$\u5b50\u6811\u5185\u8be5\u503c\u7684\u5927\u5c0f\n\n\u5bf9\u4e8e\u4e00\u4e2a\u70b9$v\\in son_u$\n\n$dp[u]=\\begin{cases}\\max(siz[v])&siz[v]<=\\left\\lfloor\\dfrac {n} {2}\\right\\rfloor\\\\\\max(dp[v])&\\text{otherwise}\\end{cases}$\n\n\u8003\u8651\u6362\u6839\uff0c\u90a3\u6211\u4eec\u8981\u5f97\u5230\u5b50\u6811\u5916\u80fd\u79fb\u9664\u6700\u5927\u5b50\u6811\u7684\u5927\u5c0f\n\n\u8003\u8651$dp'[v]$\u5982\u4f55\u5f97\u5230\n\n\u8003\u8651$dp[u]$\u7684\u6700\u4f73\u8f6c\u79fb\u70b9\uff0c\u5982\u679c$dp[u]$\u6700\u4f73\u8f6c\u79fb\u70b9\u5c31\u662f$v$\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u5f97\u5230\u4e00\u4e2a\u70b9\u7b2c\u4e8c\u5927\u7684\u80fd\u591f\u53bb\u9664\u7684\u5b50\u6811\u5927\u5c0f\n\n\u6240\u4ee5\u5fc5\u987b\u8003\u8651\u7ef4\u62a4\u4e24\u4e2a\u4e2a$dp$\u503c\uff0c$dp[u][0]$\u8868\u793a\u7b2c\u4e00\u5927\u7684\u503c\uff0c$dp[u][1]$\u8868\u793a\u7b2c\u4e8c\u5927\u7684\u503c\n\n\u7136\u540e\u5982\u679c$v$\u662f$u$\u6700\u4f73\u8f6c\u79fb\u70b9\n\n\u90a3\u4e48$dp'[v]$\u53ef\u53d6\u503c\u4e3a$dp[u][1]$\u548c$n-siz[u](n-size[u]<=\\left\\lfloor\\dfrac {n} {2}\\right\\rfloor)$\n\n\u5426\u5219\u53ef\u53d6\u503c\u4e3a$dp[u][0]$\u548c$n-siz[u](n-size[u]<=\\left\\lfloor\\dfrac {n} {2}\\right\\rfloor)$\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#include<cstdlib>\n#include<cctype>\n#include<set>\n#include<queue>\n#define M 1000100\n#define inf 0x3f3f3f3f\n#define LL long long\nconst int mod=988244353;\nusing namespace std;\ninline int read(){\n\tint f=1,x=0;char s=getchar();\n\twhile (!isdigit(s)){if(s=='-')f=-1;s=getchar();}\n\twhile (isdigit(s)){x=(x<<1)+(x<<3)+(s^48),s=getchar();}\n\treturn x*f;\n}\nint t,n,head[M],cnt,dp[M][2],pos[M],dpp[M],ans[M],siz[M],maxsiz[M];\nstruct edge{int to,nxt;}e[M<<1];\ninline void add_edge(int u,int v){e[++cnt].nxt=head[u],head[u]=cnt,e[cnt].to=v;} \ninline void dfs(int rt,int fa){\n\tsiz[rt]=1;\n\tfor (int i=head[rt];i;i=e[i].nxt){\n\t\tif (e[i].to==fa) continue;\n\t\tdfs(e[i].to,rt);int v;\n\t\tsiz[rt]+=siz[e[i].to];\n\t\tif (siz[e[i].to]>siz[maxsiz[rt]]) maxsiz[rt]=e[i].to;\n\t\tif (siz[e[i].to]<=n/2) v=siz[e[i].to];\n\t\telse v=dp[e[i].to][0];\n\t\tif (dp[rt][0]<v) dp[rt][1]=dp[rt][0],dp[rt][0]=v,pos[rt]=e[i].to;\n\t\telse if (dp[rt][1]<v) dp[rt][1]=v;\n\t}\n}\ninline void redfs(int rt,int fa){\n\tans[rt]=1;\n\tif (siz[maxsiz[rt]]>n/2) ans[rt]=(siz[maxsiz[rt]]-dp[maxsiz[rt]][0]<=n/2);\n\telse if (n-siz[rt]>n/2) ans[rt]=(n-siz[rt]-dpp[rt]<=n/2);\n\tfor (int i=head[rt];i;i=e[i].nxt){\n\t\tif (e[i].to==fa) continue;int v;\n\t\tif (n-siz[rt]>n/2) v=dpp[rt];\n\t\telse v=n-siz[rt];\n\t\tdpp[e[i].to]=max(dpp[e[i].to],v);\n\t\tif (pos[rt]==e[i].to) dpp[e[i].to]=max(dpp[e[i].to],dp[rt][1]);\n\t\telse dpp[e[i].to]=max(dpp[e[i].to],dp[rt][0]);\n\t\tredfs(e[i].to,rt);\n\t}\n}\nsigned main(void){\n\tn=read();\n\tfor (int i=1;i<=n-1;i++){\n\t\tint u=read(),v=read();\n\t\tadd_edge(u,v),add_edge(v,u);\n\t}\n\tdfs(1,0),redfs(1,0);\n\tfor (int i=1;i<=n;i++) printf(\"%d \",ans[i]);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1590485414,
        "uid": 78290,
        "name": "Polaris_Dane",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF708C \u3010Centroids\u3011"
    },
    {
        "content": "# $\\mathsf{Solution\\space For\\space CF708C}$  \nUpd:\u975e\u5e38\u975e\u5e38\u4e0d\u597d\u610f\u601d\uff0c\u8fd9\u4e2a\u5c51\u8d34\u9519\u4e86\u4ee3\u7801\uff0c\u73b0\u5728\u5df2\u7ecf\u66f4\u65b0  \n~~\u88ab\u8fd9\u4e2a\u95ee\u9898\u56f0\u6270\u5230\u7684\u6b22\u8fce\u79c1\u4fe1D\u6b7b\u8fd9\u4e2a\u5c51~~ \n\n\n------------\n\n$\\mathcal{By\\space ShadderLeave}$  \n\u63d0\u4f9b\u4e00\u79cd\u601d\u60f3\u4e0a\u548c\u5176\u4ed6\u9898\u89e3\u4e0d\u4e00\u6837\uff08\u4e5f\u8bb8\u4f1a\u66f4\u5bb9\u6613\u7406\u89e3\uff1f\uff09\u7684\u89e3\u6cd5  \n\n\n------------\n## $\\mathsf{Description}$  \n\u7ed9\u51fa\u4e00\u68f5\u6811\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9\u65ad\u6389\u5176\u4e2d\u7684\u4e00\u6761\u8fb9\u5c06\u5176\u91cd\u65b0\u8fde\u63a5\u5230\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\u4e0a\uff0c\u4f7f\u5176\u5f62\u6210\u4e00\u68f5\u65b0\u6811\uff0c\u8bf7\u95ee\u6709\u591a\u5c11\u4e2a\u8282\u70b9\u53ef\u4ee5\u901a\u8fc7\u8fd9\u79cd\u64cd\u4f5c\u6210\u4e3a\u6811\u7684\u91cd\u5fc3\uff1f  \n\u8f93\u51fa\u4e00\u884c $N$ \u4e2a\u6570\uff0c\u7b2c $i$ \u4e2a\u6570\u5b57\u662f $0/1$ \u8868\u793a\u7b2c $i$ \u4e2a\u8282\u70b9 \u53ef\u4ee5/\u4e0d\u53ef\u4ee5 \u6210\u4e3a\u91cd\u5fc3  \n$0\\le N\\le 4\\times 10^5$  \n## $\\mathsf{Analysis}$  \n\u91cd\u5fc3\u7ed9\u51fa\u7684\u5b9a\u4e49\u662f\u6240\u6709\u7684\u5b50\u6811\u5927\u5c0f\u90fd\u5c0f\u4e8e\u7b49\u4e8e $\\lfloor \\dfrac{N}{2}\\rfloor$ \u7684\u8282\u70b9\uff0c\u6240\u4ee5\u8bf4\uff0c\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u4e0d\u662f\u91cd\u5fc3\uff0c\u5c31\u8868\u793a\u8fd9\u4e2a\u8282\u70b9\u6709\u4e00\u4e2a\u5b50\u6811\u7684\u5927\u5c0f\u8d85\u51fa\u4e86 $\\lfloor \\dfrac{N}{2}\\rfloor$\uff08\u800c\u4e14\u53ea\u6709\u4e00\u4e2a\uff09\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u8fd9\u4e2a\u8d85\u51fa\u4e86 $\\lfloor\\dfrac{N}{2}\\rfloor$ \u7684\u5b50\u6811\u4e2d\u6311\u9009\u4e00\u4e2a\u66f4\u5c0f\u5b50\u6811\u65ad\u6389\u4ed6\u7136\u540e\u8fde\u5230\u5f53\u524d\u8282\u70b9\u4e0a\u6765\u3002  \n\n\u95ee\u9898\u662f\uff0c\u8fd9\u4e2a\u5927\u5c0f\u8d85\u51fa $\\lfloor \\dfrac{N}{2}\\rfloor$ \u7684\u5b50\u6811\u4e2d\u6709\u6ca1\u6709\u8fd9\u79cd\u65ad\u6389\u4e4b\u540e\u53ef\u4ee5\u4f7f\u5f97\u5176\u5927\u5c0f\u51cf\u5c0f\u5230 $\\lfloor \\dfrac{N}{2}\\rfloor$ \u4ee5\u4e0b\u7684\u8fd9\u79cd\u5c0f\u5b50\u6811\u5462\uff1f  \n\n\u800c\u4e14\u8fd9\u662f\u4e00\u68f5\u65e0\u6839\u6811\uff0c\u5f62\u6001\u786e\u5b9a\u4e0d\u4e86\uff0c\u73b0\u5728\u6240\u53d9\u8ff0\u7684 \u201c\u5b50\u6811\u201d \u53ef\u80fd\u662f\u5176\u7236\u4eb2\u8282\u70b9\uff0c\u4e00\u5207\u90fd\u4f3c\u4e4e\u53d8\u5f97\u5f88\u9ebb\u70e6....  \n\n\u4f46\u662f\u73b0\u5728\u5982\u679c\u6211\u4eec\u4e8b\u5148\u5c31\u5148\u627e\u5230\u4e00\u4e2a\u91cd\u5fc3\u4f5c\u4e3a\u6839\uff0c\u4f3c\u4e4e\u5c31\u4f1a\u6709\u4e00\u4e9b\u7f8e\u5999\u7684\u6027\u8d28\u3002  \n\n\u5982\u679c\u4e00\u4e2a\u8282\u70b9 $u$ \u4e0d\u662f\u91cd\u5fc3\uff0c\u90a3\u4e48\u4e00\u5b9a\u662f\u5176\u7236\u8282\u70b9\u6240\u5728\u7684\u5927\u5c0f\u4e3a $N-sz[u]$ \u7684\u5b50\u6811\u8d85\u51fa\u4e86\u9650\u5236\uff08\u56e0\u4e3a\u4ee5\u91cd\u5fc3\u4e3a\u6839\u7684\u65f6\u5019\u6240\u6709\u5b50\u6811\u7684\u5927\u5c0f\u90fd\u4e0d\u4f1a\u8d85\u8fc7 $\\lfloor \\dfrac{N}{2}\\rfloor$\uff0c\u7ee7\u7eed\u5411\u4e0b\u8d70\u7684\u65f6\u5019\u6df1\u5ea6\u66f4\u6df1\u7684\u5b50\u6811\u5927\u5c0f\u53ea\u4f1a\u66f4\u5c0f\uff0c\u6240\u4ee5\u95ee\u9898\u4e00\u5b9a\u51fa\u5728\u7236\u8282\u70b9\u5904\uff09  \n\n\u8fd9\u5c31\u542f\u53d1\u6211\u4eec\u8bb0\u5f55\u4e00\u4e2a\u4fe1\u606f\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9 $u$\uff0c\u8bb0\u5f55\u4e00\u4e2a\u9664\u4e86\u5b50\u6811 $u$ \u4ee5\u5916\u7684\u3001\u5927\u5c0f\u6700\u5927\u4f46\u662f\u4e0d\u8d85\u51fa $\\lfloor \\dfrac{N}{2}\\rfloor$ \u7684\u5b50\u6811\u5927\u5c0f\uff0c\u8bbe\u4e3a $cut[u]$\uff0c\u56e0\u4e3a\u95ee\u9898\u4e00\u5b9a\u662f\u51fa\u5728\u975e\u5b50\u6811 $u$ \u7684\u90e8\u5206\uff0c\u6240\u4ee5\u5f53\u4e00\u4e2a\u8282\u70b9\u4e0d\u662f\u91cd\u5fc3\u7684\u65f6\u5019\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad $N-sz[u]-cut[u]\\le\\lfloor\\dfrac{N}{2}\\rfloor$ \u662f\u5426\u6210\u7acb\u5373\u53ef   \n\n\u7b80\u5316\u5b8c\u4e00\u5708\uff0c\u5c31\u662f\u8981\u6c42\u6240\u6709\u8282\u70b9\u9664\u4e86\u672c\u8eab\u4ee5\u5916\u7684\u90e8\u5206\u4e2d\u4e0d\u8d85\u51fa $\\lfloor\\dfrac{N}{2}\\rfloor$ \u7684\u6700\u5927\u5b50\u6811\u5927\u5c0f\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u6362\u6839DP\u95ee\u9898\u4e86\u3002  \n\n\u8bbe $Max[u]$ \u4e3a\u5b50\u6811 $u$ \u4e2d\u7684\u4e0d\u8d85\u51fa\u9650\u5236\u7684\u6700\u5927\u5b50\u6811\u5927\u5c0f\uff0c\u5728\u8fdb\u884cdfs\u7684\u65f6\u5019\u6211\u4eec\u5e26\u4e00\u4e2a\u53c2\u6570\uff0c\u5373\u8282\u70b9 $u$ \u7684\u7956\u5148\u4e2d\u7684\u6700\u5927\u7684\u4e0d\u8d85\u51fa\u9650\u5236\u7684\u5b50\u6811\u5927\u5c0f\uff0c\u8bbe\u4e3a $maxx$\uff0c\u90a3\u4e48\u6709\uff1a  \n$$maxx=max(maxx,N-sz[u])\\space \\mathsf{if}(N-sz[u]\\le\\lfloor\\dfrac{N}{2}\\rfloor)$$  \n\u540c\u65f6 $cut$ \u7684\u8f6c\u79fb\u5199\u6210\n$$cut[v]=max(maxx,Max[u])\\space v\\in son[u]$$  \n\u5982\u679c\u4f60\u8fd9\u4e48\u5199\u7684\u8bdd\u90a3\u4f60\u5c31\u592anaive\u4e86\uff08\u4e00\u8f6c\u653b\u52bf  \n\n\u56e0\u4e3a\u5f88\u660e\u663e $Max[u]$ \u5f88\u6709\u53ef\u80fd\u5c31\u662f\u5b50\u6811 $v$ \u7684\u5927\u5c0f\uff0c\u8fd9\u65f6\u5019\u5e94\u8be5\u9009\u53d6\u5b50\u6811 $u$ \u4e2d\u7684\u6b21\u5927\u503c\uff0c\u6240\u4ee5\u8981\u540c\u65f6\u8bb0\u5f55\u6700\u5927\u548c\u6b21\u5927\uff0c\u5206\u522b\u4e3a $Max[u][0/1]$  \n$$cut[v]=max(maxx,Max[u][0])\\space \\mathsf{if}(sz[v]\\ne Max[u][0])$$\n$$cut[v]=max(maxx,Max[u][1])\\space \\mathsf{if}(sz[v]==Max[u][0])$$\n\n\u8fd8\u6709\u5565\u7ec6\u8282\u5c31\u770b\u4ee3\u7801\u5427qaq  \n## $\\mathsf{Code}$  \n```\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nconst int maxn=400007;\nint N;\nstruct E{\n\tint u,v;\n}e[maxn<<1];\nint first[maxn],nt[maxn<<1],ES;\ninline void addE(int u,int v)\n{\n\te[++ES]=(E){u,v};\n\tnt[ES]=first[u];\n\tfirst[u]=ES;\n\treturn ;\n}\ninline int R()\n{\n\tchar c;\n\tint re;\n\twhile((c=getchar())>'9'||c<'0');\n\tre=c-48;\n\twhile((c=getchar())>='0'&&c<='9')\n\tre=re*10+c-48;\n\treturn re;\n}\nint fa[maxn],sz[maxn];\nint rt;//rt\u662f\u627e\u5230\u7684\u91cd\u5fc3 \nvoid dfs1(int u)\n{\n\tint v;\n\tsz[u]=1;\n\tbool f=true;\n\tfor(int i=first[u];i;i=nt[i])\n\t{\n\t\tv=e[i].v;\n\t\tif(v==fa[u]) continue;\n\t\tfa[v]=u;\n\t\tdfs1(v);\n\t\tsz[u]+=sz[v];\n\t\tif(sz[v]>N/2) f=false;\n\t}\n\tif(N-sz[u]>N/2) f=false;\n\tif(f) rt=u;\n\treturn ;\n}\nint Max[maxn][2];//\u5b50\u6811u\u4e2dsize\u6700\u5927\u7684/\u6b21\u5927\u7684\u5b50\u6811\u5927\u5c0f\nvoid dfs2(int u)\n{\n\tint v;\n\tsz[u]=1;\n\tfor(int i=first[u];i;i=nt[i])\n\t{\n\t\tv=e[i].v;\n\t\tif(v==fa[u]) continue;\n\t\tfa[v]=u;\n\t\tdfs2(v);\n\t\tsz[u]+=sz[v];\n\t\tif(sz[v]>N/2) continue;//\u6392\u9664\u6389\u5927\u4e8eN/2\u7684\n\t\tif(sz[v]>Max[u][0]) Max[u][1]=Max[u][0],Max[u][0]=sz[v];\n\t\telse if(sz[v]>Max[u][1]) Max[u][1]=sz[v];\n\t}\n\treturn ;\n}\nint cut[maxn];\nbool ans[maxn];\nvoid dfs3(int u,int maxx)\n{\n\tint v;\n\tcut[u]=maxx;\n\tfor(int i=first[u];i;i=nt[i])\n\t{\n\t\tv=e[i].v;\n\t\tif(v==fa[u]) continue;\n\t\tif(N-sz[u]<=N/2) maxx=max(maxx,N-sz[u]);//\u4e5f\u8bb8\u7236\u4eb2\u7684\u90e8\u5206\u80fd\u76f4\u63a5\u6784\u6210\u5b50\u6811 \n\t\tif(Max[u][0]==sz[v]) dfs3(v,max(maxx,Max[u][1]));//\u5982\u679cv\u5373\u4e3a\u6700\u5927\u7684\u5b50\u6811\u90a3\u4e48\u8981\u7528\u6b21\u5927\u503c\n\t\telse dfs3(v,max(maxx,Max[u][0]));\n\t}\n\tif(N-sz[u]-cut[u]<=N/2||u==rt) ans[u]=true;\n\treturn ;\n}\nint main()\n{\n\tN=R();\n\tint u,v;\n\tfor(int i=1;i<N;i++)\n\t{\n\t\tu=R();v=R();\n\t\taddE(u,v);\n\t\taddE(v,u);\n\t}\n\tdfs1(1);\n\tfa[rt]=0;//\u6ce8\u610f\u6e05\u7a7afa \n\tdfs2(rt);\n\tdfs3(rt,0);\n\tfor(int i=1;i<=N;i++)\n\tif(ans[i]) putchar('1'),putchar(32);\n\telse putchar('0'),putchar(32);\n\treturn 0;\n}\n```  \n$\\huge \\mathcal{The\\space End}$  \n\u8c22\u8c22\u7ba1\u7406\u5927\u5927\u5ba1\u6838^_^",
        "postTime": 1596281597,
        "uid": 215697,
        "name": "LeavingZ",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF708C \u3010Centroids\u3011"
    },
    {
        "content": "\u770b\u5230\u8f6c\u5316\u4e3a\u91cd\u5fc3\uff0c\u9996\u5148\u53ef\u4ee5\u4ece\u91cd\u5fc3\u7684\u6027\u8d28\u60f3\u5230\u53ef\u4ee5\u901a\u8fc7\u6539\u9020\u53d8\u4e3a\u91cd\u5fc3\u7684\u6761\u4ef6\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9 $x$ \uff0c\u5982\u679c\u672c\u8eab\u5c31\u662f\u91cd\u5fc3\uff0c\u5c31\u65e0\u9700\u6539\u9020\uff0c\u5426\u5219\u5c31\u5fc5\u7136\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u513f\u5b50\u7684\u5b50\u6811\u5927\u4e8e n/2 \u3002\n\n\u5982\u679c\u53ef\u4ee5\u4ece\u8fd9\u4e2a\u513f\u5b50\u7684\u5b50\u6811\u4e2d\u62ff\u51fa\u4e00\u4e2a\u5b50\u6811\u63a5\u5230\u8282\u70b9 $x$ \u4e0a\uff0c\u4f7f\u5f97\u63a5\u4e0a\u7684\u5b50\u6811\u5927\u5c0f\u4e0d\u8d85\u8fc7 n/2 \u4e14\u5269\u4e0b\u7684\u5b50\u6811\u5927\u5c0f\u4e5f\u4e0d\u8d85\u8fc7 n/2 \uff0c\u90a3\u4e48\u8282\u70b9 $x$ \u5c31\u662f\u53ef\u4ee5\u6539\u9020\u4e3a\u91cd\u5fc3\u7684\u3002\n\n\u4e00\u4e2a\u8282\u70b9\u4f5c\u4e3a\u6839\u8282\u70b9\u65f6\uff0c\u513f\u5b50\u6709\u76ee\u524d\u7684\u513f\u5b50\u4ee5\u53ca\u4ece\u7236\u4eb2\u4e0a\u53bb\u7684\u513f\u5b50\u3002\n\n\u90a3\u4e48\u53ef\u4ee5\u7ef4\u62a4\u5bf9\u4e8e\u8282\u70b9 $x$ \uff0c\u4ece\u5b50\u6811\u4e2d\u53ef\u4ee5\u627e\u5230\u7684\u6700\u5927\u4e14\u4e0d\u8d85\u8fc7 n/2 \u7684\u5b50\u6811\u5927\u5c0f\u4ee5\u53ca\u6574\u68f5\u6811\u53bb\u9664\u4ee5\u8282\u70b9 $x$ \u4e3a\u6839\u7684\u5b50\u6811\u5269\u4e0b\u7684\u6811\u91cc\u53ef\u4ee5\u627e\u5230\u7684\u6700\u5927\u4e14\u4e0d\u8d85\u8fc7 n/2 \u7684\u5b50\u6811\u5927\u5c0f\u3002\n\n\u7b2c\u4e00\u4e2a\u5f88\u597d\u7ef4\u62a4\uff0c\u5982\u679c\u6574\u68f5\u5b50\u6811\u5927\u5c0f\u4e0d\u5927\u4e8e n/2 \uff0c\u90a3\u4e48\u5c31\u9009\u6574\u68f5\u5b50\u6811\uff0c\u4e0d\u7136\u5728\u513f\u5b50\u4e2d\u627e\u6700\u5927\u7684\u3002\n\n\u7b2c\u4e8c\u4e2a\u7c7b\u4f3c\uff0c\u5982\u679c\u5269\u4e0b\u7684\u6811\u5927\u5c0f\u4e0d\u5927\u4e8e n/2 \uff0c\u90a3\u4e48\u5c31\u9009\u5269\u4e0b\u7684\u6811\u7684\u5168\u90e8\uff0c\u4e0d\u7136\u5c31\u8981\u5728\u7236\u4eb2\u5411\u4e0a\u7684\u6811\u7684\u6700\u5927\u503c\u548c\u7236\u4eb2\u7684\u5269\u4f59\u513f\u5b50\u91cc\u7684\u5411\u4e0b\u7684\u6700\u5927\u503c\u4e2d\u9009\u6700\u5927\u7684\u3002\n\n\u5982\u679c\u8bbe\u7b2c\u4e00\u79cd\u662f $dp1$ \uff0c\u7b2c\u4e8c\u79cd\u662f $dp2$ \u90a3\u4e48\u6709\n\n$dp1_x=\\begin{cases}sz_x&sz_x\\le n/2\\\\max_{y\\in son(x)}\\{ dp1_y\\}&otherwise\\end{cases}$ \n\n$dp2_x=\\begin{cases}n-sz_x&n-sz_x\\le n/2\\\\max(dp2_{fa(x)},max_{y\\in son(fa(x))\\& y\\neq x}\\{ dp1_y\\})&otherwise\\end{cases}$\n\n\u6700\u540e\u5bf9\u4e8e\u8282\u70b9 $x$ \uff0c\u627e\u5230\u4ee5 $x$ \u4e3a\u6839\u65f6\u6709\u6700\u5927\u5b50\u6811\u5927\u5c0f\u7684\u513f\u5b50\uff0c\u51cf\u53bb\u76f8\u5e94\u7684 dp \u503c\u770b\u662f\u5426\u5c0f\u4e8e n/2 \u5c31\u53ef\u4ee5\u5224\u65ad\u4e86\u3002 \n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int M=4e5+5;\n\nint max(int x,int y){ return x>y?x:y; }\nint min(int x,int y){ return x<y?x:y; }\n\nint n;\nint read(){\n\tint x=0,y=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9') y=(ch=='-')?-1:1,ch=getchar();\n\twhile(ch>='0'&&ch<='9') x=x*10+ch-'0',ch=getchar();\n\treturn x*y;\n}\n\nint tot=0,first[M];\nstruct Edge{\n\tint nxt,to;\n}e[M<<1];\nvoid add(int x,int y){\n\te[++tot]=(Edge){first[x],y};\n\tfirst[x]=tot;\n}\n\nint sz[M],msz[M],msz2[M],dp1[M],dp2[M],Ans[M];\nvoid dfs(int u,int fa){\n\tsz[u]=1;dp1[u]=dp2[u]=0;\n\tfor(int i=first[u];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tif(v==fa) continue ;\n\t\tdfs(v,u);\n\t\tsz[u]+=sz[v];\n\t\tdp1[u]=max(dp1[u],dp1[v]);\n\t\tif(sz[msz[u]]<sz[v]) msz2[u]=msz[u],msz[u]=v;\n\t\telse if(sz[msz2[u]]<sz[v]) msz2[u]=v;\n\t}\n\tif(sz[u]<=n/2) dp1[u]=sz[u];\n}\nvoid dfs2(int u,int fa){\n\tfor(int i=first[u];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tif(v==fa) continue ;\n\t\tif(n-sz[v]<=n/2) dp2[v]=n-sz[v];\n\t\telse if(v!=msz[u]) dp2[v]=max(dp2[u],dp1[msz[u]]);\n\t\telse dp2[v]=max(dp2[u],dp1[msz2[u]]);\n\t\tdfs2(v,u);\n\t}\n\tif(n-sz[u]>sz[msz[u]]) Ans[u]=(n-sz[u]-dp2[u]<=n/2);\n\telse Ans[u]=(sz[msz[u]]-dp1[msz[u]]<=n/2);\n}\n\nvoid solve(){\n\tn=read();\n\tfor(int i=1;i<n;i++){\n\t\tint x=read(),y=read();\n\t\tadd(x,y),add(y,x);\n\t}\n\tdfs(1,0),dfs2(1,0);\n\tfor(int i=1;i<=n;i++) printf(\"%d \",Ans[i]);\n\tprintf(\"\\n\");\n}\n\nsigned main(){\n\tsolve();\n}\n```\n",
        "postTime": 1605109196,
        "uid": 88615,
        "name": "szwyue012",
        "ccfLevel": 0,
        "title": "\u3010\u6811\u5f62dp\u8bb0\u5f55\u3011\u9898\u89e3 CF708C \u3010Centroids\u3011"
    },
    {
        "content": "CF708C \u3010Centroids\u3011\u9898\u89e3\n\n### \u66f4\u65b0\uff1a\n\nupd on 2020.08.04 fixed a typo\n\n### \u9898\u610f\u7b80\u8ff0\uff1a\n\n\u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u70b9\u7684\u6811\uff0c\u4f60\u53ef\u4ee5\u5220\u9664\u4e00\u6761\u8fb9\u5e76\u589e\u52a0\u4e00\u6761\u8fb9\uff0c\u5f62\u6210\u4e00\u68f5\u65b0\u6811\u3002\n\n\u95ee\u6bcf\u4e2a\u70b9\u5728\u8fdb\u884c\u8fd9\u6837\u7684\u64cd\u4f5c\u540e\uff0c\u662f\u5426\u53ef\u80fd\u6210\u4e3a\u65b0\u6811\u7684\u91cd\u5fc3\u3002\n\n$1 \\le n \\le 4\\cdot 10^5$\u3002\n\n[\u9898\u76ee\u94fe\u63a5](https://codeforces.com/problemset/problem/708/C)\n\n### \u89e3\u9898\u601d\u8def\uff1a\n\n\u4e00\u4e2a\u4e0d\u53ef\u5426\u8ba4\u7684\u4e8b\u5b9e\u662f\uff0c\u5982\u679c\u4e00\u4e2a\u8282\u70b9 $u$ \u662f\u539f\u6811\u7684\u91cd\u5fc3\uff0c\u90a3\u4e48\u5b83\u4e00\u5b9a\u53ef\u4ee5\u6210\u4e3a\u65b0\u6811\u7684\u91cd\u5fc3\u3002\n\n\u5982\u679c\u4e00\u4e2a\u8282\u70b9 $u$ \u6709\u4e00\u68f5\u5b50\u6811 $v$ \u7684\u5927\u5c0f\u5927\u4e8e $\\left\\lfloor\\dfrac{n}{2}\\right\\rfloor$\uff0c\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u7740\u5c06 $v$ \u7684\u5b50\u6811\u4e2d\u6700\u5927\u7684\u4e00\u68f5\u63a5\u5230 $u$ \u4e0a\uff0c\u770b\u80fd\u5426\u4f7f $u$ \u6210\u4e3a\u91cd\u5fc3\u3002\n\n\u663e\u7136\u8fd9\u6837\u7684\u5b50\u6811 $v$ \u5bf9\u4e8e $u$ \u800c\u8a00\u6700\u591a\u53ea\u6709\u4e00\u4e2a\u3002\n\n\u4ee4\uff1a\n\n$$\n\\begin{aligned}\n & \\textrm{siz}(u) =\n \\begin{cases}\n  1 & \\textrm{son}(u) = \\varnothing\n  \\\\\n  1 + \\sum\\limits_{v \\in \\textrm{son}(u)}\\textrm{siz}(v) & \\textrm{son}(u) \\neq \\varnothing\n \\end{cases}\n \\\\\n & \\textrm{maxson}(u) =\n \\begin{cases}\n  0 & \\textrm{son}(u) = \\varnothing\n  \\\\\n  \\max\\limits_{v \\in \\textrm{son}(u)}\\textrm{siz}(v) & \\textrm{son}(u) \\neq \\varnothing\n \\end{cases}\n \\\\\n & f(u, 0) = \\max\\limits_{v \\in \\textrm{son}(u)}\n \\begin{cases}\n  \\textrm{siz}(v) & \\textrm{siz}(v) \\le \\left\\lfloor\\dfrac{n}{2}\\right\\rfloor\n  \\\\\n  f(v, 0) & \\textrm{otherwise}\n  \\end{cases}\n \\\\\n & f(u, 1) = \\mathop{\\operatorname{second max}}\\limits_{v \\in \\textrm{son}(u)}\n \\begin{cases}\n  \\textrm{siz}(v) & \\textrm{siz}(v) \\le \\left\\lfloor\\dfrac{n}{2}\\right\\rfloor\n  \\\\\n  f(v, 0) & \\textrm{otherwise}\n \\end{cases}\n \\\\\n & g(u) = \\mathop{\\operatorname{argmax}}\\limits_{v \\in \\textrm{son}(u)}\n \\begin{cases}\n  \\textrm{siz}(v) & \\textrm{siz}(v) \\le \\left\\lfloor\\dfrac{n}{2}\\right\\rfloor\n  \\\\\n  f(v, 0) & \\textrm{otherwise}\n \\end{cases}\n\\end{aligned}\n$$\n\u81f3\u6b64\uff0c\u6211\u4eec\u6c42\u51fa\u6765\u4e86\u6bcf\u4e2a\u8282\u70b9 $u$ \u7684\u91cd\u513f\u5b50 $\\textrm{son}(u)$\uff0c\u6700\u5927\u7684\u5c0f\u4e8e $\\left\\lfloor\\dfrac{n}{2}\\right\\rfloor$ \u7684\u5b50\u6811 $g(u)$ \u4ee5\u53ca\u5176\u5927\u5c0f $f(u, 0)$\uff0c\u6b21\u5927\u7684\u5c0f\u4e8e $\\left\\lfloor\\dfrac{n}{2}\\right\\rfloor$ \u7684\u5b50\u6811\u5927\u5c0f $f(u, 1)$ \u3002\n\n\u5bf9\u4e00\u4e2a\u8282\u70b9 $u$ \u6c42\u4e0a\u8ff0\u6240\u6709\u503c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n)$\u3002\n\n\u90a3\u4e48\u5982\u4f55\u89e3\u51b3\u95ee\u9898\u5462\uff1f\n\n\u8003\u8651\u6362\u6839dp\uff0c\u7528 $h(u)$ \u6765\u7ef4\u62a4\u4e0d\u662f $u$ \u7684\u5b50\u6811\u4e2d\uff0c\u5c0f\u4e8e\u7b49\u4e8e $\\left\\lfloor\\dfrac{n}{2}\\right\\rfloor$ \u7684\u6700\u5927\u5b50\u6811\u5927\u5c0f\u3002\n\n\u4ee4\uff1a\n\n$$\nu = \\textrm{parent}(v), h(v) = \\max\\{\n\\begin{cases}\n n - \\textrm{siz}(u) & n - \\textrm{siz}(u) \\le \\left\\lfloor\\dfrac{n}{2}\\right\\rfloor\n \\\\\n h(u) & n - \\textrm{siz}(u) > \\left\\lfloor\\dfrac{n}{2}\\right\\rfloor\n \\\\\n f(u, 1) & g(u) = v\n \\\\\n f(u, 0) & g(u) \\neq v\n\\end{cases}\n\\}\n$$\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u7528 $h(u)$ \u6765\u89e3\u51b3\u300c\u539f\u6765 $v$ \u662f $u$ \u7684\u5b69\u5b50\u4f46\u73b0\u5728 $u$ \u662f $v$ \u7684\u5b69\u5b50\u300d\u7684\u60c5\u51b5\u4e86\u3002\n\n\u6700\u540e\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff1a\n\n- \u5982\u679c $\\textrm{siz}(\\textrm{maxson}(u)) > \\left\\lfloor\\dfrac{n}{2}\\right\\rfloor$\n\n  \u6211\u4eec\u5c31\u53ea\u9700\u8981\u68c0\u67e5 $\\textrm{siz}(\\textrm{maxson}(u)) - f(\\textrm{maxson}(u), 0)$ \u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e $\\left\\lfloor\\dfrac{n}{2}\\right\\rfloor$ \u5373\u53ef\uff1b\n  \n- \u5982\u679c $n - \\textrm{siz}(u) > \\left\\lfloor\\dfrac{n}{2}\\right\\rfloor$\n\n  \u6211\u4eec\u5c31\u53ea\u9700\u8981\u68c0\u67e5 $n - \\textrm{siz}(u) - h(u)$ \u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e $\\left\\lfloor\\dfrac{n}{2}\\right\\rfloor$ \u5373\u53ef\uff1b\n\n### \u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define LL long long\n\nconst int N = 4e5 + 5;\nconst int M = 8e5 + 5;\n\nint n, cnt, first[N], siz[N], maxson[N], f[N][2], g[N], h[N], ans[N];\n\nstruct EDGE {\n    int to, _next;\n} e[M];\n\nvoid add(int u, int v) {\n    e[cnt].to = v, e[cnt]._next = first[u];\n    first[u] = cnt++;\n}\n\nvoid dfs1(int x, int p) {\n    siz[x] = 1;\n    for(int i = first[x]; ~i; i = e[i]._next) {\n        int y = e[i].to;\n        if(y == p)\n            continue;\n        dfs1(y, x);\n        siz[x] += siz[y];\n        if(siz[y] > siz[maxson[x]])\n            maxson[x] = y;\n        \n        int cur = (siz[y] <= n / 2) ? siz[y] : f[y][0];\n        \n        if(cur > f[x][0]) {\n            f[x][1] = f[x][0];\n            f[x][0] = cur;\n            g[x] = y;\n        }\n        else if(cur > f[x][1])\n            f[x][1] = cur;\n    }\n}\n\nvoid dfs2(int x, int p) {\n    ans[x] = 1;\n    if(siz[maxson[x]] > n / 2)\n        ans[x] = (siz[maxson[x]] - f[maxson[x]][0] <= n / 2);\n    else if(n - siz[x] > n / 2)\n        ans[x] = (n - siz[x] - h[x] <= n / 2);\n    \n    for(int i = first[x]; ~i; i = e[i]._next) {\n        int y = e[i].to;\n        if(y == p)\n            continue;\n        \n        int cur = (n - siz[x] <= n / 2) ? (n - siz[x]) : h[x];\n        \n        h[y] = std::max(h[y], cur);\n        h[y] = std::max(h[y], f[x][g[x] == y]);\n        \n        dfs2(y, x);\n    }\n}\n\nint32_t main() {\n    scanf(\"%d\", &n);\n    memset(first, -1, sizeof(first));\n    for(int i = 1; i <= n - 1; ++i) {\n        int u, v;\n        scanf(\"%d %d\", &u, &v);\n        add(u, v), add(v, u);\n    }\n    dfs1(1, 0), dfs2(1, 0);\n    for(int i = 1; i <= n; ++i)\n        printf(\"%d \", ans[i]);\n    return 0;\n}\n```\n",
        "postTime": 1593957605,
        "uid": 78407,
        "name": "Clever_Jimmy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF708C \u3010Centroids\u3011"
    },
    {
        "content": "\u8003\u8651\u5f53\u6211\u4eec\u5df2\u7ecf\u786e\u5b9a\u4e86\u4e00\u68f5\u6811\u7684\u91cd\u5fc3\u5e76\u4ee5\u91cd\u5fc3\u4e3a\u6839\uff0c\u6709\u4e00\u4e2a\u663e\u7136\u7684\u7ed3\u8bba\uff0c\u5bf9\u4e8e\u4efb\u4e00\u5b50\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u5927\u5c0f\u4e00\u5b9a\u4e0d\u8d85\u8fc7$\\lfloor\\frac{n}{2} \\rfloor$\u3002\n\n\u56e0\u4e3a\u53bb\u6389\u91cd\u5fc3\uff0c\u6811\u6240\u5269\u4e0b\u7684\u6bcf\u4e2a\u90e8\u5206\u4e00\u5b9a\u4e0d\u8d85\u8fc7$\\lfloor\\frac{n}{2} \\rfloor$\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u90e8\u5206\u7684\u6bcf\u68f5\u5b50\u6811\u7684\u5927\u5c0f\u53ea\u80fd\u66f4\u5c0f\u3002\n\n\u56e0\u6b64\u5982\u679c\u6211\u4eec\u4ee5\u6811\u7684\u91cd\u5fc3\u4e3a\u6839\uff0c\u5982\u679c\u4e00\u4e2a\u70b9$x$\u4e0d\u80fd\u6210\u4e3a\u91cd\u5fc3\uff0c\u4e00\u5b9a\u662f$n-size(x)>\\lfloor\\frac{n}{2} \\rfloor$\u3002\n\n\u4f8b\u5982\u4e0b\u9762\u8fd9\u68f5\u6811\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ljn19og2.png)\n\n\u4ee5\u91cd\u5fc3$2$\u4e3a\u6839\uff0c\u70b9$3$\u663e\u7136\u4e0d\u80fd\u6210\u4e3a\u91cd\u5fc3\uff0c\u5176\u539f\u56e0\u662f$n-size(3)=8>5$\u5373$B$\u90e8\u5206\u7684\u5927\u5c0f\u5927\u4e8e$\\lfloor\\frac{n}{2} \\rfloor$\n\n\u63a5\u4e0b\u6765\u8003\u8651\u5bf9\u8fd9\u68f5\u6811\u8fdb\u884c\u6539\u9020\uff1a\n\n\u6211\u4eec\u8981\u5728$Part_A$\u4e2d\u9009\u4e00\u6761\u8fb9\u5220\u9664\uff0c\u5c06\u5176\u5206\u88c2\u6210\u4e24\u4e2a\u4e0d\u8fde\u7eed\u7684\u90e8\u5206\uff0c\u518d\u5c06\u5176\u4e2d\u4e00\u90e8\u5206\u4e0e$3$\u8fde\u63a5\u3002\n\n\u4e0b\u9762\u662f\u4e00\u79cd\u6539\u9020\u8fc7\u7a0b\uff1a\n\n1.\u5220\u9664\u8fb9$<1,2>$\uff0c\u4f7f\u5176$Part_A$\u5206\u88c2\u6210\u4e24\u90e8\u5206\n![](https://cdn.luogu.com.cn/upload/image_hosting/jrqpl91p.png)\n\n2.\u6dfb\u52a0\u8fb9$<2,3>$\uff0c\u5c06\u5206\u88c2\u51fa\u53bb\u7684\u90e8\u5206\u63a5\u6210\u70b9$3$\u7684\u5b50\u6811\n![](https://cdn.luogu.com.cn/upload/image_hosting/61kkk3vo.png)\n\n\u8fd9\u6837\uff0c\u7ecf\u8fc7\u6539\u9020\u70b9$3$\u53ef\u4ee5\u6210\u4e3a\u6811\u7684\u91cd\u5fc3\u3002\n\n\u90a3\u4e48\uff0c\u4e3a\u4e86\u4ee4\u6211\u4eec\u5f53\u524d\u7684\u70b9$x$\u5c3d\u53ef\u80fd\u7684\u6210\u4e3a\u91cd\u5fc3\uff0c\u6211\u4eec\u5c31\u9700\u8981\u4f7f\u5f97\u5206\u88c2\u51fa\u53bb\u7684\u90e8\u5206\u5c3d\u53ef\u80fd\u5730\u5927\uff0c\u5e76\u76f4\u63a5\u63a5\u5728\u70b9$x$\u4e0a\u3002\n\n\u5373\u6211\u4eec\u8981\u5728$n-size(x)$\u7684\u90e8\u5206\u627e\u6700\u5927\u7684\u4e14\u5927\u5c0f\u4e0d\u8d85\u8fc7$\\lfloor\\frac{n}{2} \\rfloor$\u8fde\u7eed\u7684\u4e00\u90e8\u5206\uff0c\u8bb0\u5176\u5927\u5c0f\u4e3a$f(x)$\u3002\n\n\u5982\u679c$n-size(x)-f(x)\\le \\lfloor\\frac{n}{2} \\rfloor$\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u5c31\u53ef\u4ee5\u6210\u4e3a\u91cd\u5fc3\uff0c\u53cd\u4e4b\u5219\u4e0d\u53ef\u4ee5\u3002\n\n\u90a3\u4e48\u63a5\u4e0b\u6765\u6211\u4eec\u8981\u8003\u8651\u5982\u4f55\u8ba1\u7b97\u51fa$f(x)$\n\n\u8bb0$fa(x)$\u4e3a$x$\u7684\u7236\u8282\u70b9\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/785049kb.png)\n\n\n\u8003\u8651$f(2)$\u7684\u6240\u6709\u51b3\u7b56:\n\n\n$1.$ $n-size(2)\\le\\lfloor\\frac{n}{2} \\rfloor$\u65f6\uff1a$n-size(2)$\n\n$2.$\u5176\u5144\u5f1f$3$\u7684\u5b50\u6811\u5185\uff0c\u5927\u5c0f\u4e0d\u8d85\u8fc7$\\lfloor\\frac{n}{2} \\rfloor$\u7684\u6700\u5927\u5b50\u6811\u5927\u5c0f\u3002\n\n\u518d\u6765\u8003\u8651$2$\u7684\u513f\u5b50\u7684\u51b3\u7b56\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/4gi5vvry.png)\n\n$n-size(x)$\u5927\u4f53\u5206\u6210\u4e24\u90e8\u5206\uff1a$x$\u7684\u5144\u5f1f\uff0c\u548c\u9664\u4e86$x$\u4e0e$x$\u5144\u5f1f\u7684\u90e8\u5206\u3002\n\n\u5e76\u4e14\u8fd9\u4e24\u90e8\u5206\u4e92\u4e0d\u5e72\u6270\uff1a\n\n\u9996\u5148\uff0c\u5982\u679c$n-size(x)>\\lfloor\\frac{n}{2} \\rfloor$\uff0c\u5176\u65ad\u5f00\u7684\u8fb9\u4e0d\u53ef\u80fd\u662f\u4e0e\u5176\u7236\u8282\u70b9\u76f8\u8fde\u7684\u8fb9$<fa(x),x>$\u3002\n\n\u90a3\u4e48\u6240\u5220\u7684\u4e00\u6761\u8fb9\u53ea\u80fd\u662f\u5176\u5144\u5f1f\u5b50\u6811\u4e0e\u7236\u8282\u70b9\u76f8\u8fde\u7684\u4e00\u6761\u8fb9\u6216\u4e0d\u5305\u62ec$fa(x)$\u7684\u90e8\u5206\u7684\u4e00\u6761\u8fb9\u3002\n\n\u8bbe$d(x)$\u4e3a\u4ee5$x$\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u5927\u5c0f\u4e0d\u8d85\u8fc7$\\lfloor\\frac{n}{2} \\rfloor$\u7684\u6700\u5927\u5b50\u6811\uff0c\u8bbe$B(x)$\u4e3a$x$\u7684\u5144\u5f1f\u8282\u70b9\u96c6\u5408\u3002\n\n\u90a3\u4e48\u6709\u8f6c\u79fb\u65b9\u7a0b\n$$\nf(x)=\\max\\left\\{ \n\\begin{aligned}\n&n-size(x)\\ (n-size(x) \\le \\lfloor \\frac{n}{2}\\rfloor)\\\\\n&\\max\\limits_{j\\in B(x),j\\not=x}\\{d(j)\\} \\\\\n&f(fa(x))\n\\end{aligned}\n\\right.\n$$\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u5e38\u7528\u6280\u5de7\uff1a\u4ee4$d(x,0)$\u4e3a\u6700\u5927\uff0c$d(x,1)$\u4e3a\u6b21\u5927\n\u90a3\u4e48\u6709\u8f6c\u79fb\u65b9\u7a0b\uff1a\n$$\n\nf(x)=\\max\\left\\{ \n\\begin{aligned}\n&n-size(x)\\ \\ \\ (n-size(x) \\le \\lfloor \\frac{n}{2}\\rfloor)\\\\\n& d(fa(x),0)\\ \\ \\ (d(x,0)\\not=d(fa(x),0))\\\\ \n& d(fa(x),1)\\ \\ \\ (d(x,0)=d(fa(x),0))\\\\\n&f(fa(x))\n\\end{aligned}\n\\right.\n$$\n\u63a5\u4e0b\u6765\u8003\u8651\u8ba1\u7b97$d(x)$\n\n\u56e0\u4e3a\u6211\u4eec\u4ee5\u91cd\u5fc3\u4e3a\u6839\uff0c\u56e0\u6b64$d(x,0)$\u5373\u4e3a\u4ee5$x$\u7684\u5b50\u8282\u70b9\u4e3a\u6839\u7684\u6700\u5927\u7684\u5b50\u6811\u7684\u5927\u5c0f\u3002\u5728\u66f4\u65b0$d(x,0)$\u65f6\u987a\u4fbf\u66f4\u65b0$d(x,1)$:\n$$\n\\begin{aligned}\n&event:size(son)>d(x,0): \\\\\n&do:d(x,1)=d(x,0),d(x,0)=size(son)\\\\\n&envet:d(x,0)\\ge size(son)>d(x,1):\\\\\n&do:d(x,1)=size(son)\n\\end{aligned}\n$$\n\n\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f$O(n)$\u7684\u3002\n\n\u4ee3\u7801:\n```cpp\n#include <iostream>\n#include <cstring>\n\nnamespace wxy{\n    const int N = 4e5 + 10;\n    int size[N],head[N],fail[N << 1],edge[N << 1],tot = 0;\n    int n,root = 1,ans = 1e9;\n    bool vis[N];\n    int d[N][3],f[N];\n    inline void add(int x,int y){\n        edge[++tot] = y;\n        fail[tot] = head[x];\n        head[x] = tot;\n    }\n    inline void insert(int x,int y){add(x,y);add(y,x);}\n    void dfs_root(int u){\n        int max_part = 0;\n        size[u] = 1;\n        vis[u] = true;\n        for (int i = head[u];i;i = fail[i]){\n            int v = edge[i];\n            if (vis[v]) continue;\n            dfs_root(v);\n            size[u] += size[v];\n            max_part = std::max(max_part,size[v]);\n        }\n        max_part = std::max(max_part,n - size[u]);\n        if (max_part < ans){\n            ans = max_part;\n            root = u;\n        }\n    }\n    void dfs_d(int u){\n        vis[u] = true;\n        size[u] = 1;\n        for (int i = head[u];i;i = fail[i]){\n            int v = edge[i];\n            if (vis[v]) continue;\n            dfs_d(v);\n            size[u] += size[v];\n            if (size[v] > d[u][0]){\n                d[u][1] = d[u][0];\n                d[u][0] = size[v];\n            }else if (size[v] > d[u][1]){\n                d[u][1] = size[v];\n            }\n        }\n    }\n    void dfs_f(int u,int fa){\n        vis[u] = true;\n        if (d[fa][0] == size[u]) f[u] = std::max(d[fa][1],f[fa]);\n        else f[u] = std::max(d[fa][0],f[fa]);\n        if (n - size[u] <= n / 2) f[u] = std::max(f[u],n - size[u]);\n        if (u == root) f[u] = 0;\n        for (int i = head[u];i;i = fail[i]){\n            int v = edge[i];\n            if (vis[v]) continue;\n            dfs_f(v,u);\n        }\n    }\n    void main(){\n        std::cin >> n;\n        for (int i = 1; i < n; i++){\n            int x,y;\n            std::cin >> x >> y;\n            insert(x,y);\n        }\n        dfs_root(1);\n        \n        memset(vis,false,sizeof vis);\n        memset(size,0,sizeof size);\n        dfs_d(root);\n        memset(vis,false,sizeof vis);\n        dfs_f(root,0);\n        //for (int i = 1; i <= n; i++) std::cout << f[i] << \" \";\n        //std::cout << std::endl;\n        for (int i = 1; i <= n; i++){\n            if (size[i] >= n / 2) std::cout << 1 << \" \";\n            else if (n - size[i] - f[i] <= n / 2) std::cout << 1 << \" \";\n            else std::cout << 0 << \" \";\n        }\n        \n    }\n}signed main(){wxy::main();return 0;}\n```\n\n\n\n\n",
        "postTime": 1596691154,
        "uid": 317459,
        "name": "RyexAwl",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF708C \u3010Centroids\u3011"
    },
    {
        "content": "## \u524d\u8a00\n2021.8.16 \u6811\u4e0a\u95ee\u9898\u6a21\u62df\u8d5b\uff0c\u8001\u5e08\u52a0\u96be\u5ea6\uff0c\u51fa\u4e86\u8fd9\u9053\u539f\u9898\u4f5c\u4e3a T1\uff0c\u8003\u573a\u5199\u4e86\u4e2a\u6c42\u91cd\u5fc3\uff0c\u7ed3\u679c\u591a\u6d4b\u5fd8\u6e05\u7a7a\u4e86\uff08\u539f\u9898\u4e0d\u662f\u591a\u6d4b\uff09\uff0c\u542c\u5b8c\u540e\u89c9\u5f97\u81ea\u5df1\u53ef\u4ee5\u5207\u8fd9\u9053\u9898\uff0c\u51b3\u5b9a\u5199\u4e2a\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0b  \n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF708C)  \n## \u9898\u610f  \n\u5df2\u77e5\u6709\u4e00\u68f5 $n$ \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u5b9a\u4e49\u5bf9\u6811\u7684\u91cd\u6784\u64cd\u4f5c\uff0c\u5220\u53bb\u6811\u4e2d\u7684\u4e00\u6761\u8fb9\uff0c\u5728\u4e24\u4e2a\u8fde\u901a\u5757\u4e2d\u5404\u9009\u53d6\u4e00\u4e2a\u70b9\u8fde\u8fb9\uff0c\u95ee\u5bf9\u4e8e\u6811\u4e2d\u7684\u6bcf\u4e00\u4e2a\u70b9\uff0c\u80fd\u5426\u901a\u8fc7\u81f3\u591a\u4e00\u6b21\u91cd\u6784\u4f7f\u5176\u79f0\u4e3a\u6811\u7684\u91cd\u5fc3\u3002\u8f93\u5165\u8f93\u51fa\u683c\u5f0f\u8be6\u89c1\u9898\u9762\u3002  \n## \u6570\u636e\u8303\u56f4  \n\u6570\u636e\u6709 $2\\leq n\\leq 400000$  \n##  \u5206\u6790  \n\u89c2\u5bdf\u5230\u6570\u636e\u8303\u56f4\uff0c\u663e\u7136 $O(n^3)$ \u7684\u66b4\u529b\u7b97\u6cd5\u4e0d\u8db3\u4ee5\u901a\u8fc7\u672c\u9898\uff0c\u8003\u8651\u66f4\u4f18\u79c0\u7684\u505a\u6cd5\u3002  \n\u5bf9\u4e8e\u4efb\u610f\u7684\u4e00\u4e2a\u8282\u70b9 $x$\uff0c\u5219\u5bf9\u4e8e\u4efb\u610f\u4e00\u79cd\u91cd\u6784\uff0c\u663e\u7136\u76f4\u63a5\u5c06\u4e0d\u5305\u542b $x$ \u7684\u8fde\u901a\u5757\u4e0e $x$ \u76f4\u63a5\u8fde\u8fb9\u6700\u4f18\u3002  \n\u4e0d\u59a8\u4ee5 $x$ \u4e3a\u6839\u8003\u8651\uff0c\u6211\u4eec\u65e2\u8981\u4f7f\u780d\u4e0b\u6765\u7684\u5b50\u6811\u4e0d\u8d85\u8fc7 $\\frac{n}{2}$\uff0c\u53c8\u8981\u4f7f\u5269\u4e0b\u7684\u70b9\u6570\u5c3d\u53ef\u80fd\u5c11\uff0c\u6240\u4ee5\u780d\u4e0b\u6765\u7684\u5b50\u6811\u5c3d\u53ef\u80fd\u5927\u3002\u6240\u4ee5\u6211\u4eec\u8981\u6c42\u51fa\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u80fd\u780d\u4e0b\u7684\u6700\u5927\u7684\u5927\u5c0f\u4e0d\u8d85\u8fc7 $\\frac{n}{2}$ \u7684\u771f\u5b50\u6811\u7684\u5927\u5c0f\u3002  \n\u8003\u8651\u7ef4\u62a4\u4e24\u4e2a\u6570\u7ec4 $f[i]$ \u548c $g[i]$\uff0c\u5f53\u6574\u68f5\u6811\u4ee5 1 \u4e3a\u6839\u65f6\uff0c$f[i]$ \u8868\u793a\u4ee5 $i$ \u4e3a\u6839\u7684\u5b50\u6811\u5185\u80fd\u780d\u4e0b\u7684\u6700\u5927\u7684\u5927\u5c0f\u4e0d\u8d85\u8fc7 $\\frac{n}{2}$ \u7684\u771f\u5b50\u6811\u7684\u5927\u5c0f\uff0c$g[i]$ \u8868\u793a\u4ee5 $i$ \u4e3a\u6839\u7684\u5b50\u6811\u5916\u80fd\u780d\u4e0b\u7684\u6700\u5927\u7684\u5927\u5c0f\u4e0d\u8d85\u8fc7 $\\frac{n}{2}$ \u7684\u771f\u5b50\u6811\u7684\u5927\u5c0f\u3002    \n\u8fd9\u5c31\u7c7b\u4f3c\u4e8e\u6362\u6839 dp \u7684\u601d\u60f3\u3002  \n\u663e\u7136\uff0c$f[i]$ \u6bd4\u8f83\u597d\u7ef4\u62a4\uff0c\u5728\u7b2c\u4e00\u6b21 dfs \u65f6\u5c31\u53ef\u4ee5\u6c42\u51fa\uff1a  \n$f[i] = \\max\\limits_{v \\in son[i]}\\begin{cases}f[v]&siz[v] > \\frac{n}{2}\\cr siz[v]&siz[v]\\leq\\frac{n}{2}\\end{cases}$  \n\u5bf9\u4e8e $g$ \u6570\u7ec4\uff0c\u5229\u7528\u6362\u6839 dp\uff0c\u8003\u8651\u7531\u7236\u4eb2\u8282\u70b9 $i$ \u5411\u513f\u5b50 $v$ \u7684\u8f6c\u79fb\u3002\u53ef\u4ee5\u662f\u4ece $g[i]$ \u8f6c\u79fb\u5230 $g[v]$\uff0c\u53ef\u4ee5\u7236\u4eb2\u5b50\u6811\u4ee5\u5916\u6240\u6709\u8282\u70b9\u5168\u90e8\u780d\u6389\uff0c\u4e5f\u53ef\u662f\u7236\u4eb2\u7684\u53e6\u4e00\u68f5\u5b50\u6811\u3002\u8fd9\u91cc\u6bd4\u8f83\u9ebb\u70e6\uff0c\u8fd8\u8981\u8bb0\u5f55\u4e00\u4e0b\u5f53\u524d\u5b50\u6811\u662f\u5426\u4e3a\u7236\u4eb2\u7684\u6700\u5927\u5b50\u6811\uff0c\u662f\u7684\u8bdd\u8fd8\u8981\u7ef4\u62a4\u4e00\u4e2a\u6b21\u5927\u503c\uff0c\u7c7b\u4f3c\u4e8e\u6811\u5f62 dp \u6c42\u76f4\u5f84\u3002\u5b9a\u4e49 $sec[i]$ \u4e3a\u6b21\u5927\u503c\uff0c$maxson[i]$ \u4e3a\u6700\u5927\u5b50\u6811\u7f16\u53f7\uff0c\u5219\u6709\uff1a  \n$g[v] = \\max\\limits_{v \\in son[u]}\\begin{cases}g[u]\\cr n-siz[v]&n-siz[v]\\leq\\frac{n}{2}\\cr sec[u]&v = maxson[u]\\cr f[u]&v\\neq maxson[u]\\end{cases}$  \n\u901a\u8fc7\u5224\u65ad\u5373\u53ef\u6c42\u51fa\u7b54\u6848\u6570\u7ec4\u3002  \n\u4e0a\u4ee3\u7801\u3002  \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 400000 + 10,M = 800000 + 10;\nint T,n,tot;\nint siz[N],f[N],g[N],ans[N],sec[N],maxson[N],maxn[N];\nint ver[M],Next[M],head[N];\nvoid add(int x,int y)\n{\n\tver[++tot] = y,Next[tot] = head[x],head[x] = tot;\n}\nvoid dfs(int u,int fa)\n{\n\tsiz[u] = 1,f[u] = 0,sec[u] = 0,maxson[u] = 0,maxn[u] = 0;\n\tfor(int i = head[u];i;i = Next[i])\n\t{\n\t\tint v = ver[i];\n\t\tif(v == fa) continue;\n\t\tdfs(v,u);\n\t\tsiz[u] += siz[v];\n\t\tif(siz[v] > siz[maxn[u]]) maxn[u] = v;\n\t\tif(siz[v] > n / 2)\n\t\t{\n\t\t\tif(f[v] > f[u]) sec[u] = f[u],f[u] = f[v],maxson[u] = v;\n\t\t\telse if(f[v] > sec[u]) sec[u] = f[v];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(siz[v] > f[u]) sec[u] = f[u],f[u] = siz[v],maxson[u] = v;\n\t\t\telse if(siz[v] > sec[u]) sec[u] = siz[v];\n\t\t}\n\t}\n}\nvoid bdfs(int u,int fa)\n{\n\tfor(int i = head[u];i;i = Next[i])\n\t{\n\t\tint v = ver[i];\n\t\tif(v == fa) continue;\n\t\tg[v] = max(g[v],g[u]);\n\t\tif(n - siz[v] <= n / 2) g[v] = max(g[v],n - siz[v]);\n\t\tif(v == maxson[u]) g[v] = max(g[v],sec[u]);\n\t\telse g[v] = max(g[v],f[u]); \n\t\tbdfs(v,u);\n\t}\n}\nbool check(int u)\n{\n\tif(siz[maxn[u]] > n / 2) return siz[maxn[u]] - f[maxn[u]] <= n / 2;\n\tif(n - siz[u] > n / 2) return n - siz[u] - g[u] <= n / 2;\n\treturn true;\n}\nsigned main()\n{\n\tT = 1;\n\twhile(T--)\n\t{\n\t\ttot = 1;\n\t\tfor(int i = 1;i <= n;i++)\n\t\t    ans[i] = f[i] = g[i] = 0;\n\t\tmemset(head,0,sizeof(head));\n\t\tmemset(Next,0,sizeof(Next));\n\t\tscanf(\"%d\",&n);\n\t\tfor(int i = 1;i < n;i++)\n\t\t{\n\t\t\tint u,v;\n\t\t\tscanf(\"%d%d\",&u,&v);\n\t\t\tadd(u,v);\n\t\t\tadd(v,u);\n\t\t}\n\t\tdfs(1,0);\n\t\tg[1] = 0;\n\t\tbdfs(1,0);\n\t\tfor(int i = 1;i <= n;i++)\n\t\t    if(check(i)) ans[i] = 1;\n\t\tfor(int i = 1;i <= n;i++)\n\t\t\tprintf(\"%d \",ans[i]);\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n```\n\u5b8c\u7ed3\u6492\u82b1\uff01\uff01\uff01",
        "postTime": 1629948775,
        "uid": 367629,
        "name": "\u4e1c\u53a2\u5934\u573a\u96ea",
        "ccfLevel": 4,
        "title": "CF708C\u9898\u89e3"
    },
    {
        "content": "~~\u4eba\u751f\u7b2c\u4e00\u4e2a\u6700\u4f18\u89e3\uff08\u76ee\u524d\uff09\u8d76\u7d27\u5199\u7bc7\u9898\u89e3\u5e86\u795d\u4e00\u4e0b\u3002~~\n\n\u5f53\u7136\u4f60\u5f97\u5148\u770b\u5b8c[\u8fd9\u4e2a](https://www.luogu.com.cn/blog/150384/shu-di-zhong-xin-xiang-guan-gai-nian-yu-zheng-ming)\u3002\n\n\u8bc1\u660e\u770b\u4e0d\u61c2\u4e5f\u6ca1\u5173\u7cfb\u3002~~\u6211\u90fd\u4e0d\u77e5\u9053\u6211\u5f53\u5e74\u600e\u4e48\u53e3\u80e1\u7684\u3002~~ \u4f46\u6027\u8d28\u4e09\u4e00\u5b9a\u8981\u770b\u4e00\u770b\uff0c\u540e\u9762\u6709\u7528\u3002\n\n\u5176\u5b9e\u662f\u4e00\u9053\u633a\u503c\u5f97\u60f3\u7684\u95ee\u9898\uff0c\u5206\u4e94\u4e2a\u6b65\u9aa4\u3002\u5efa\u8bae\u5728\u770b\u6bcf\u4e2a\u6b65\u9aa4\u524d\u5148\u601d\u8003\uff0c\u60f3\u4e0d\u51fa\u4e86\u518d\u770b\u3002\n# Step 1\n\u6539\u9020\uff1f\u628a\u4e00\u6761\u8fb9\u62c6\u4e0b\u6765\u518d\u88c5\u4e0a\u53bb\uff1f\u600e\u4e48\u5f04\uff1f\n\n\u9996\u5148\u8fd9\u662f\u4e00\u4e2a\u65e0\u6839\u6811\uff0c\u6211\u4eec\u628a\u5b83\u53d8\u6210\u6709\u6839\u6811\u66f4\u597d\u5904\u7406\u3002\u7136\u540e\u4e00\u6b65\u4e00\u6b65\u6765\u770b\u3002\n\n\u5148\u662f\u62c6\u8fb9\uff0c\u53d1\u73b0\u6bcf\u6761\u8fb9\u5bf9\u5e94\u4e00\u5bf9\u7236\u5b50\u5173\u7cfb\uff0c\u62c6\u6389\u4e4b\u540e\u5c31\u4f1a\u628a\u513f\u5b50\u6240\u5bf9\u5e94\u7684\u5b50\u6811\u4e0e\u5916\u754c\u9694\u7edd\u3002\n\n\u7136\u540e\u52a0\u8fb9\u3002\u4e3a\u4e86\u4f7f\u52a0\u5b8c\u540e\u8fd8\u662f\u4e00\u68f5\u6811\uff0c\u6211\u4eec\u9700\u8981\u5c06\u52a0\u5165\u7684\u8fb9\u7684\u4e00\u5934\u63a5\u5230\u8fd9\u4e2a\u5b50\u6811\u7684\u67d0\u4e2a\u8282\u70b9\u4e0a\uff0c\u53e6\u4e00\u5934\u63a5\u5230\u5916\u754c\u7684\u67d0\u4e2a\u8282\u70b9\u4e0a\u3002\n\n\u7136\u800c\u8fd9\u4e2a\u5916\u754c\u7684\u8282\u70b9\u5df2\u7ecf\u6709\u7236\u4eb2\u4e86\uff0c\u6240\u4ee5\u8fd9\u4e2a\u5b50\u6811\u5c31\u53ea\u80fd\u5f53\u5b83\u7684\u4e00\u68f5\u5b50\u6811\u4e86\u3002\n\n~~\u603b\u800c\u8a00\u4e4b\u780d\u4e00\u5757\u6811\u4e0b\u6765\u518d\u8865\u4e0a\u53bb\u3002~~\n# Step 2\n\u9898\u76ee\u95ee\u6211\u4eec\u90a3\u4e9b\u70b9\u53ef\u4ee5\u901a\u8fc7\u6539\u9020\u53d8\u6210\u91cd\u5fc3\uff0c\u90a3\u6211\u4eec\u4e00\u4e2a\u4e00\u4e2a\u770b\u3002\n\n\u5bf9\u4e8e\u672c\u6765\u5c31\u662f\u91cd\u5fc3\u7684\u8282\u70b9\uff0c\u6211\u4eec\u4e0d\u7528\u7ba1\u5b83\u3002\n\n\u5bf9\u4e8e\u672c\u6765\u975e\u91cd\u5fc3\u7684\u8282\u70b9\uff0c\u5b83\u548c\u91cd\u5fc3\u7684\u533a\u522b\u5c31\u5728\u4e8e\u6709\u4e00\u68f5\u5b50\u6811~~\u751f\u957f\u6fc0\u7d20\u5206\u6ccc\u8fc7\u591a\u5bfc\u81f4~~\u8fc7\u4e8e\u5e9e\u5927\u3002\n\n\u90a3\u6211\u4eec\u7684\u4efb\u52a1\u5c31\u662f\u628a\u8fd9\u4e2a~~\u75c5\u53d8\u7684~~\u5b50\u6811\u901a\u8fc7\u6539\u9020\u780d\u6210\u6b63\u5e38\u7684\u4e5f\u5c31\u662f\u5c0f\u4e8e\u7b49\u4e8e\u5168\u6811\u7684\u4e00\u534a\u5c31\u884c\u4e86\u3002\n\n\u4e0d\u8fc7\u780d\u4e0b\u6765\u7684\u90e8\u5206\u8fd8\u8981\u63a5\u5230\u4e00\u68f5\u5b50\u6811\u4e0a\u53bb\uff0c\u6211\u4eec\u540c\u65f6\u4e0d\u80fd\u8ba9\u8fd9\u4e2a\u5b50\u6811\u53d8\u5f97\u8fc7\u5927\u3002\n\n\u90a3\u4e48\u8bbe $a$ \u662f\u88ab\u780d\u7684\u5b50\u6811\u7684\u5927\u5c0f\uff0c$b$ \u662f\u8981\u88ab\u63a5\u4e0a\u53bb\u7684\u5b50\u6811\u7684\u5927\u5c0f\uff0c$s$ \u662f\u5168\u6811\u7684\u5927\u5c0f\uff0c$l$ \u662f\u780d\u4e0b\u6765\u7684\u6811\u7684\u5927\u5c0f\u3002\n\n\u5217\u4e0d\u7b49\u5f0f\uff0c\u5f97\uff1a\n$$\\begin{cases}\na-l\\le\\frac{s}{2}\\\\\nb+l\\le\\frac{s}{2}\\\\\n\\end{cases}$$\n\n\u89e3\u5f97\uff1a\n$$a-\\frac{s}{2}\\le l\\le\\frac{s}{2}-b$$\n# Step 3\n\u76f4\u63a5\u62ff\u8fd9\u4e2a\u4e1c\u897f\u548c\u5e73\u8861\u6811\u4e0a\u662f\u4f1a\u53d1\u751f TLE/MLE \u60b2\u5267\u7684\u3002\u6211\u4eec\u9700\u8981\u5206\u6790\u5b83\u3002\n\n\u7531\u4e8e $l$ \u7684\u53d6\u503c\u8303\u56f4\u7684\u5de6\u8fb9\u754c\u662f\u56fa\u5b9a\u7684\uff0c\u6211\u4eec\u5904\u7406\u53f3\u8fb9\u754c\u3002\u5148\u5904\u7406\u5b50\u6811\u622a\u4e0b\u6765\u8981\u63a5\u5230\u8c01\u4e0a\u9762\u7684\u95ee\u9898\u3002\n\n\u5f53\u7136\uff0c\u4e3a\u4e86\u4f7f $l$ \u6709\u66f4\u591a\u53d6\u503c\uff0c$\\frac{s}{2}-b$ \u8d8a\u5927\u8d8a\u597d\u3002\u800c $\\frac{s}{2}$ \u662f\u56fa\u5b9a\u7684\uff0c\u90a3\u4e48\u8981\u8ba9 $b$ \u5c3d\u53ef\u80fd\u7684\u5c0f\u3002\n\n\u90a3\u4ec0\u4e48\u65f6\u5019 $b$ \u6700\u5c0f\u5462\uff1f\u76f4\u63a5\u63a5\u5230\u6839\u4e0a\u9762\uff0c\u90a3\u6837 $b$ \u5c31\u4e3a 0 \u4e86\u3002\n\n\u6240\u4ee5\u8fd9\u4e2a\u5f0f\u5b50\u53d8\u6210\u4e86\u8fd9\u6837\uff1a\n$$a-\\frac{s}{2}\\le l\\le\\frac{s}{2}$$\n# Step 4\n\u597d\u50cf\u601d\u8def\u9047\u5230\u6b7b\u80e1\u540c\u4e86\uff1f\u8003\u8651\u4e00\u4e0b\u91cd\u5fc3\u3002\n\n\u6211\u4eec\u4f1a\u53d1\u73b0\u88ab\u780d\u7684\u5b50\u6811\u4e00\u5b9a\u662f\u5305\u542b\u91cd\u5fc3\u7684\u5b50\u6811\uff0c\u800c\u4e14\u780d\u7684\u65f6\u5019**\u53ea\u8981\u4e0d\u628a\u91cd\u5fc3\u780d\u4e0b\u6765\uff0c\u4e00\u5b9a\u53ef\u4ee5\u6ee1\u8db3\u53f3\u8fb9\u754c\u7684\u6761\u4ef6**\u3002\n\n\u4e3a\u4f55\u52a0\u7c97\u5462\uff1f\u56e0\u4e3a\u60f3\u901a\u4e86\u8fd9\u4e2a\uff0c\u8fd9\u9898\u5c31\u5dee\u4e0d\u591a\u4e86\u3002\u81f3\u4e8e\u4e3a\u4ec0\u4e48\uff0c\u81ea\u5df1\u601d\u8003\u3002~~\u6211\u4e0d\u4f1a\u544a\u8bc9\u4f60\u6211\u662f\u61d2\u5f97\u753b\u56fe\u7684\u3002~~\n\n\u90a3\u4e48\u65e2\u7136\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u780d\u91cd\u5fc3\u7684\u5404\u4e2a\u5b50\u6811\u3002\u6211\u4eec\u4ece\u4e2d\u9009\u53d6\u6700\u5927\u7684\u5b50\u6811\u4ee5\u5c3d\u91cf\u6ee1\u8db3\u5de6\u8fb9\u754c\u6761\u4ef6\u3002\u5982\u679c\u4ecd\u7136\u4e0d\u80fd\u6ee1\u8db3\u5c31\u65e0\u80fd\u4e3a\u529b\u4e86\uff0c\u8bf4\u660e\u5f53\u524d\u8be2\u95ee\u7684\u70b9\u672c\u8eab\u5c31\u4e0d\u884c\u3002\n# Step 5\n\u7136\u800c\u4f60\u76f4\u63a5\u8fd9\u4e48\u5e72\u8fd8\u662f\u4f1a WA on test 3 \u7684\uff0c\u6b7b\u56e0\u662f\u6ca1\u6709\u8003\u8651\u6709\u4e24\u4e2a\u91cd\u5fc3\u7684\u60c5\u51b5\u3002\n\n\u9047\u5230\u8fd9\u79cd\u60c5\u51b5\u53ef\u4ee5\u6362\u4e2a\u91cd\u5fc3\u8dd1\u4e24\u904d\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8f93\u51fa\u5168 1\uff0c\u539f\u56e0\u81ea\u5df1\u601d\u8003\u5427\uff08~~\u518d\u6b21\u5077\u61d2~~\uff09\u3002\n# Code\n\u6309\u4e0a\u9762\u641e\u5b8c\u5c31\u4f60\u8c37\u6700\u4f18\u89e3\u4e86\uff0c\u518d\u6362\u4e2a\u8bed\u8a00\u5361\u4e2a\u5e38\u5c31 CF \u7b2c\u4e8c\u89e3\u4e86\u3002\n\n~~\u5728\u7ebf\u819c CF \u6700\u4f18\u89e3\u3002~~\n\n\u6ce8\u610f\uff1a\u4ee3\u7801\u653e\u7ed9\u4f60\u662f\u7528\u6765\u5bf9\u62cd\u3001\u67e5\u9519\u7684\uff0c\u4e0d\u662f\u7528\u6765\u6284\u88ad\u7684\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define MAXN 400011\nint n,u,v,firs[MAXN],neig[MAXN<<1],arri[MAXN<<1],size[MAXN],cent,ncen,rans[MAXN],smax=INT_MIN,nmax=INT_MIN;\nint read()\n{\n    register int re(0),ch;\n    do\n        ch=getchar();\n    while('9'<ch||ch<'0');\n    do\n        re=re*10+ch-'0';\n    while('0'<=(ch=getchar())&&ch<='9');\n    return re;\n}\nint dfs1(int at,int fa)\n{\n    register int ce(1);\n    size[at]=1;\n    for(int i=firs[at]; i; i=neig[i])\n        if(arri[i]!=fa)\n        {\n            size[at]+=dfs1(arri[i],at);\n            if(size[arri[i]]*2>n)\n                ce=0;\n        }\n    if(ce&&size[at]*2>=n)\n    {\n        if(cent)\n            ncen=at;\n        else\n            cent=at;\n        rans[at]=1;\n    }\n    return size[at];\n}\nint dfs2(int at,int fa)\n{\n    size[at]=1;\n    for(int i=firs[at]; i; i=neig[i])\n        if(arri[i]!=fa)\n            size[at]+=dfs2(arri[i],at);\n    return size[at];\n}\nvoid dfs3(int at,int fa,int si)\n{\n    if(size[at]*2+si*2>=n)\n        rans[at]=1;\n    for(int i=firs[at]; i; i=neig[i])\n        if(arri[i]!=fa)\n            dfs3(arri[i],at,si);\n}\nint main()\n{\n    n=read();\n    for(int i=1; i<n; ++i)\n    {\n        u=read();\n        v=read();\n        neig[i<<1]=firs[u];\n        firs[u]=i<<1;\n        arri[i<<1]=v;\n        neig[i<<1|1]=firs[v];\n        firs[v]=i<<1|1;\n        arri[i<<1|1]=u;\n    }\n    dfs1(1,0);\n    if(ncen)\n    {\n        for(int i=1;i<=n;++i)\n        {\n            putchar('1');\n            putchar(' ');\n        }\n        return 0;\n    }\n    dfs2(cent,0);\n    for(int i=firs[cent]; i; i=neig[i])\n    {\n        if(size[arri[i]]>=smax)\n        {\n            nmax=smax;\n            smax=size[arri[i]];\n        }\n        else if(size[arri[i]]>=nmax)\n            nmax=size[arri[i]];\n    }\n    for(int i=firs[cent]; i; i=neig[i])\n        dfs3(arri[i],cent,size[arri[i]]==smax?nmax:smax);\n    for(int i=1; i<=n; ++i)\n    {\n        putchar('0'+rans[i]);\n        putchar(' ');\n    }\n    return 0;\n}\n```",
        "postTime": 1588348842,
        "uid": 150384,
        "name": "pyqpyq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF708C \u3010Centroids\u3011"
    },
    {
        "content": "## \u524d\u7f6e\u829d\u58eb\n**\u4e0d\u7528\u6362\u6839dp\uff01\uff01\uff01**\uff08~~\u56e0\u4e3a\u6211\u4e0d\u4f1a~~\uff09\n~~\u53ea\u7528~~\u7ebf\u6bb5\u6811\u3001\u961f\u5217\u3001\u4e8c\u5206\u3001dfs\u5e8f\u3001\u8d2a\u5fc3\u3001\u7b80\u5355\u7684\u6811\u5f62\u201c\u9012\u63a8\u201d\uff08\u56e0\u4e3a\u51e0\u4e4e\u79f0\u4e0d\u4e0adp\uff09\n## step1:\u8d2a\u5fc3\u7406\u89e3\n\u8bbe\u8282\u70b91\u4e3a\u539f\u6811\u7684\u6839\u3002\n\u9996\u5148\uff0c\u8003\u8651\u5728\u6ca1\u6709\u8fdb\u884c\u64cd\u4f5c\u65f6\u628a\u8282\u70b9 $x$ \u5220\u9664\uff0c\u5206\u51fa\u7684\u82e5\u5e72\u68f5\u5b50\u6811\u4e2d**\u6700\u591a\u53ea\u6709**\u4e00\u68f5\u5b50\u6811\u7684\u5927\u5c0f $>\\frac{n}{2}$\u3002(\u5982\u679c\u4e00\u68f5\u90fd\u6ca1\u6709\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u5c31\u662f\u539f\u6811\u7684\u8d28\u5fc3\uff0c\u80af\u5b9a $ans_x=1$\uff09\u90a3\u4e48\u8003\u8651\u901a\u8fc7\u64cd\u4f5c\u6765\u5206\u88c2\u8fd9\u9897\u4e0d\u6ee1\u8db3\u7684\u5b50\u6811 $T_s$\u3002\u65b9\u6cd5\u5c31\u662f\u5c06\u67d0\u4e2a\u8282\u70b9 $y \\in T_s$ \u5230\u5176\u7236\u4eb2\u8282\u70b9\u7684\u8fb9\u5220\u9664\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a\u4ee5 $y$ \u4e3a\u6839\u7684 $T_s$ \u5b50\u6811\u6302\u5230\u8fd9\u4e2a $y$ \u4e0a\uff08\u5982\u56fe1\uff09\u3002\u4f46\u662f\uff0c\u54ea\u91cc\u6709\u70b9\u4e0d\u5bf9\u3002\u5982\u679c $y$ \u5728\u4ece $x$ \u7684\u5230\u6839\u8def\u5f84\u4e0a\uff0c\u90a3\u4e48\u8fd9\u6837\u5728\u539f\u6811\u4e0a\u64cd\u4f5c\u540e\u539f\u6811\u5c31\u4e0d\u662f\u6811\u4e86\uff08\u5982\u56fe2\uff09\n![](https://cdn.luogu.com.cn/upload/image_hosting/yua9uehe.png)(\u56fe1)\n![](https://cdn.luogu.com.cn/upload/image_hosting/jmu2yjmk.png)(\u56fe2\uff09\n\n\u96be\u9053 $y$ \u5c31\u771f\u7684\u4e0d\u80fd\u5728 $x$ \u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u5417\uff1f\u4e0d\u662f\u7684\uff01\u9664\u4e86\u5c06 $y$ \u6302\u5230 $x$ \u4e0a\uff0c\u8fd8\u53ef\u4ee5\u5c06 $y$ \u7684\u8865\u96c6\u6302\u5230 $x$ \u4e0a\u53bb\u3002\u5177\u4f53\u5730\uff0c\u5220\u9664\u64cd\u4f5c\u76f8\u540c\uff0c\u4f46\u662f\u8fd9\u56de\u662f\u5c06\u6839\u8282\u70b9\u6302\u5230 $x$ \u4e0a\u53bb\uff08\u5982\u56fe3\uff09(\u800c\u4e14\u8fd9\u4e48\u4e00\u641e $x$ \u5c31\u53d8\u6210\u4e86\u6839\u8282\u70b9\uff09\u3002\n![](https://cdn.luogu.com.cn/upload/image_hosting/ket3rnmu.png)\n\n\u6839\u636e**\u8d2a\u5fc3**\u601d\u60f3\uff0c\u6211\u4eec\u5e0c\u671b\u5206\u88c2\u51fa\u6765\u7684\u4ee5 $y$ \u4e3a\u6839\u7684\u5b50\u6811\u5728\u4e0d\u5927\u4e8e $\\frac{n}{2}$ \u7684\u6761\u4ef6\u4e0b\u8d8a\u5927\u8d8a\u597d\u3002(1)\n## step2:\u7b80\u5355\u6811\u5f62\u201c\u9012\u63a8\u201d\n\u5bf9\u4e0d\u6ee1\u8db3\u7684\u5b50\u6811 $T_s$ \u53ea\u6709\u4e24\u79cd\u60c5\u51b5\uff0c\u4e00\u79cd\u662f $Ts$ \u5305\u542b $x$ \u7684\u7236\u4eb2\uff0c\u53e6\u4e00\u79cd\u662f\u4e0d\u5305\u542b\uff08\u5373 $T_s$ \u662f $x$ \u7684\u4e00\u68f5\u5b50\u6811\uff09\n\n\u5148\u8003\u8651\u8f83\u4e3a\u7b80\u5355\u7684\u7b2c\u4e8c\u79cd\uff0c\u90a3\u4e48\u6839\u636e\u7ed3\u8bba(1),\u6211\u4eec\u9700\u8981\u6c42\u51fa\u4e00\u9897\u5b50\u6811\u7684\u6700\u5927\u7684\u5b50\u6811\u5927\u5c0f\uff0c\u4e14\u8fd9\u4e2a\u5927\u5c0f\u9700\u8981\u4e0d\u5927\u4e8e $\\frac{n}{2}$ \u3002\u8fd9\u5341\u5206\u7684\u5bb9\u6613\uff0c\u8bbe $f(x)$\u4e3a\u8fd9\u4e2a\u6700\u5927\u503c\uff0c\u90a3\u4e48\u53ef\u5f97\uff1a\n$$f(x)=\n\\begin{cases}\n size_x & size_x \\leq \\frac{n}{2}\\\\\n\\max\\{y \\in child(x)|f(y)\\}&size_x>\\frac{n}{2}\n\\end{cases}\n$$\n## step3:dfs\u5e8f\u914d\u5408\u7ebf\u6bb5\u6811\uff08\u6216\u6811\u72b6\u6570\u7ec4\uff09\n\u518d\u8003\u8651\u8f83\u4e3a\u56f0\u96be\u7684\u7b2c\u4e00\u79cd\uff0c\u8fd9\u79cd\u60c5\u5f62\u4e0b\uff0c\u5bf9\u4e8e\u5206\u88c2\u8282\u70b9 $y$ \u53c8\u6709\u4e24\u79cd\u60c5\u51b5\uff08\u5176\u5b9e\u4e0a\u6587\u8bb2\u8fc7\u4e86\uff09\uff0c\u4e00\u662f\u5728\u4ece $x$ \u5230\u6839\u7684\u8def\u5f84\u4e0a\uff0c\u53e6\u4e00\u79cd\u4e0d\u662f\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u60c5\u5f62\uff0c\u8f83\u4e3a\u7b80\u5355\u3002\u5728dfs\u7684\u8fc7\u7a0b\u4e2d\u7ef4\u62a4\u4e00\u4e2a\u53c2\u6570 $tmp$,\u8868\u793a\u6240\u6709\u7b26\u5408\u6761\u4ef6\u7684\u5206\u88c2\u8282\u70b9  $y$ \u7684\u5b50\u6811\u5927\u5c0f\u7684\u6700\u5927\u503c\u3002\u8bbe\u5f53\u524d\u6240\u5728\u7684\u8282\u70b9\u4e3a $u$ ,\u5c06\u8981 dfs \u7684\u5b69\u5b50 $v$ \uff0c\u6613\u89c1\uff0c$tmp$ \u5411\u4e0b\u9012\u5f52\u4f20\u9012\u7684\u8fc7\u7a0b\u4e2d\uff0c\u53ea\u9700\u7528 $u$ \u6240\u6709\u975e $v$ \u7684\u5b69\u5b50 $w$ \u7684 $f(w)$\u66f4\u65b0 $tmp$ \u5373\u53ef\u3002\u5f53\u7136\uff0c\u8981\u5148\u4fdd\u5b58\u4e2a\u526f\u672c\uff0cdfs\u5b8c\u4e86\u9700\u8981\u518d\u628a $tmp$ \u8fd8\u539f\u56de\u53bb\u3002\n\nHowever, \u600e\u4e48\u66f4\u65b0\u5462\uff1f\u66b4\u529b\u80af\u5b9a\u662f\u4e0d\u884c\u7684\u3002\u6211\u4eec\u60f3\u5230\u4e86\u7ebf\u6bb5\u6811\uff01\u7ebf\u6bb5\u6811\u5904\u7406\u6811\u4e0a\u95ee\u9898\u80af\u5b9a\u662f\u8981\u7528 dfs \u5e8f\u7684\u3002\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u8282\u70b9\u7684 $dp$ \u503c\uff0c\u5373\u5982\u679c\u5927\u5c0f\u7b26\u5408 $n/2$ \u7684\u6761\u4ef6\uff0c$dp_x=size_x$ ; \u5426\u5219  $dp_x=0$\n## step4:\u961f\u5217\u601d\u60f3\n\u73b0\u5728\u53ea\u5269\u4e0b\u7b2c\u4e00\u79cd\u60c5\u5f62\u4e86\uff0c\u5373 $y$ \u5728\u4ece $x$ \u5230\u6839\u7684\u8def\u5f84\u4e0a\u3002\u5728 dfs \u7684\u8fc7\u7a0b\u4e2d\uff0c\u7ef4\u62a4\u4e00\u4e2a\u961f\u5217\uff0c\u4ece\u6839\u5230\u5f53\u524d\u8282\u70b9 $u$ \u8def\u5f84\u4e0a\u6240\u6709\u7684\u8282\u70b9\u7684 $size$ \u503c\u3002\u90a3\u4e48\uff0c\u5f53\u6bcf\u5f53\u5373\u5c06 dfs \u5b69\u5b50\u8282\u70b9 $v$ \u65f6\uff0c\u5c31\u4e0d\u65ad\u5730\u4ece\u961f\u9996\u5f39\u51fa\u5143\u7d20\uff0c\u76f4\u5230 $Q[top]-size[v]\\leq \\frac{n}{2}$ (\u6ce8\u610f\uff0c\u961f\u5217\u8981\u7528\u6570\u7ec4\u7ef4\u62a4\u800c\u4e0d\u80fd\u4f7f\u7528 STL \uff0c\u56e0\u4e3a\u4f7f\u7528\u6570\u7ec4\u53ea\u9700\u8fd8\u539f top \u7684\u503c\u5373\u53ef\u8fd8\u539f\u961f\u5217\uff09\n## step5:\u4e8c\u5206\u4f18\u5316\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5df2\u7ecf\u53ef\u4ee5\u5199\u51fa\u4e00\u4efd\u4e0d\u4f1a WA \u7684\u4ee3\u7801\u4e86\uff0c\u751a\u81f3\u5bf9\u4e8e\u5927\u591a\u6570\u60c5\u5f62\u90fd\u662f\u53ef\u4ee5 AC \u7684\u3002\uff08\u5b9e\u6d4b\uff1a\u81f3\u5c11\u80fd\u901a\u8fc7\u524d 86 \u4e2a\u6d4b\u8bd5\u70b9\uff09\u3002\u5bf9\u4e8e\u7b2c87\u4e2a\u6d4b\u8bd5\u70b9\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u68f5\u6811\uff08\u56fe4\uff09\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/w70gmb3m.png)\n(\u56fe4)\n\n\u5728\u8fd9\u79cd\u6781\u7aef\u60c5\u5f62\u4e0b\uff0c\u961f\u5217\u5f39\u51fa\u4f1a\u53d8\u5f97\u5341\u5206\u4f4e\u6548\uff0c\u91cd\u590d\u5f88\u591a\u6b21\uff0c\u6d6a\u8d39\u65f6\u95f4\uff0cTLE\n\n\u5982\u4f55\u89e3\u51b3\uff1f\u5176\u5b9e\u4e5f easy \u3002\u6ce8\u610f\u5230\u961f\u5217\u7684\u5143\u7d20\u90fd**\u5355\u8c03\u9012\u51cf**\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u4e8c\u5206 top ,\u53ef\u4ee5\u4f7f\u7528 lower_bound\u51fd\u6570\u8f7b\u677e\u89e3\u51b3\u3002\n\n## \u4ee3\u7801\n$\\text{Now,the difficult problem has been solved!}$\n```cpp\n#include <bits/stdc++.h>\n#define MAXN 400009\nusing namespace std;\n\nint head[MAXN], nxt[MAXN << 1], to[MAXN << 1], cnt;\nint size[MAXN], dp[MAXN], f[MAXN], id[MAXN], fa[MAXN], exc[MAXN], ans[MAXN];\nint a[MAXN], T[MAXN<<2];\nint Q[MAXN], top = 1, tail;\nint n;\nvoid match(int u, int v)\n{\n    ++cnt;\n    to[cnt] = v;\n    nxt[cnt] = head[u];\n    head[u] = cnt;\n}\nvoid build(int l, int r, int p)\n{\n    if (l == r)\n    {\n        T[p] = a[l];\n        return;\n    }\n    int m = l + r >> 1;\n    build(l, m, p << 1);\n    build(m + 1, r, p << 1 | 1);\n    T[p] = max(T[p << 1], T[p << 1 | 1]);\n}\nint __query(int l, int r, int p, int ll, int rr)\n{\n    if (ll <= l && r <= rr)\n        return T[p];\n    if (rr < l || ll > r)\n        return 0;\n    int m = l + r >> 1;\n    return max(__query(l, m, p << 1, ll, rr), __query(m + 1, r, p << 1 | 1, ll, rr));\n}\ninline int query(int l, int r)\n{\n    return __query(1, n, 1, l, r);\n}\ninline int except(int x)\n{\n    return max(query(id[fa[x]] + 1, id[x] - 1), query(id[x] + size[x], id[fa[x]] + size[fa[x]] - 1));\n}\nvoid dfs1(int u, int fat, int &dfstime)\n{\n    size[u] = 1;\n    fa[u] = fat;\n    id[u] = ++dfstime;\n    for (int i = head[u]; i; i = nxt[i])\n    {\n        int v = to[i];\n        if (v == fa[u])\n            continue;\n        dfs1(v, u, dfstime);\n        size[u] += size[v];\n        f[u] = max(f[u], f[v]);\n    }\n    if (size[u] <= n / 2)\n        dp[u] = f[u] = size[u];\n    a[id[u]] = dp[u];\n}\nvoid dfs2(int u, int greedy, int tmp)\n{\n    ans[u] = 1;\n    if (n - size[u] >= n / 2)\n    {\n        if (n - size[u] - greedy > n / 2)\n            ans[u] = 0;\n        else\n            ans[u] = 1;\n    }\n    else\n    {\n        for (int i = head[u]; i; i = nxt[i])\n        {\n            int v = to[i];\n            if (v == fa[u])\n                continue;\n            if (size[v] >= n / 2)\n            {\n                if (size[v] - f[v] > n / 2)\n                    ans[u] = 0;\n                else\n                    ans[u] = 1;\n                break;\n            }\n        }\n    }\n    int ttop = top, ttmp = tmp, tgreedy = greedy;\n    Q[++tail] = size[u];\n    for (int i = head[u]; i; i = nxt[i])\n    {\n        int v = to[i];\n        if (v == fa[u])\n            continue;\n        /*\n        while (tail - top + 1 >= 1 && Q[top] - size[v] > n / 2)\n            top++;\n        */\n        top=lower_bound(Q+top,Q+tail+1,n/2+size[v],greater<int>())-Q;\n        int data;\n        if (tail - top + 1 == 0)\n            data = 0;\n        else\n            data = Q[top];\n        tmp = max(tmp, exc[v]);\n        greedy = max(data - size[v], tmp);\n        dfs2(v, greedy, tmp);\n        greedy = tgreedy;\n        tmp = ttmp;\n        top = ttop;\n    }\n    --tail;\n}\nint main()\n{\n    //freopen(\"read.in\",\"r\",stdin);\n    //freopen(\"write.out\",\"w\",stdout);\n\n    int t = 0;\n    scanf(\"%d\", &n);\n    for (int i = 1; i < n; i++)\n    {\n        int u, v;\n        scanf(\"%d%d\", &u, &v);\n        match(u, v);\n        match(v, u);\n    }\n    dfs1(1, 0, t);\n    build(1, n, 1);\n    for (int i = 1; i <= n; i++)\n        exc[i] = except(i);\n    dfs2(1, 0, 0);\n    for (int i = 1; i <= n; i++)\n        printf(\"%d \", ans[i]);\n    return 0;\n}\n```\n## \u7ed3\u675f\u8bed\n\u5199\u5b8c\u7ffb\u4e00\u773c\u9898\u89e3\uff0c\u53d1\u73b0\u7adf\u6ca1\u4ec0\u4e48\u4eba\u8ddf\u6211\u7684\u505a\u6cd5\u4e00\u6837\u3002\u8fd9\u4e5f\u8bf4\u660e\uff0c\u9898\u89e3\u6c38\u8fdc\u53ea\u662f\u4e00\u79cd\u8f85\u52a9\uff0c\u4e0d\u80fd\u8ba9\u9898\u89e3\u9650\u5236\u4e86\u4f60\u7684\u601d\u7ef4\u3002\u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u5e94\u61c2\u5f97\u53d6\u5176\u7cbe\u534e\u53bb\u5176\u7cdf\u7c95\uff0c\u5438\u6536\u9898\u89e3\u6709\u76ca\u7684\u90e8\u5206\uff08\u6bd4\u5982\u6211\u9a6c\u4e0a\u8981\u53bb\u5b66\u4e60\u4e00\u6ce2\u6362\u6839dp\uff09\n\n\u6700\u540e\u7684\u6700\u540e\u63a8\u8350\u4e00\u4e2a\u975e\u5b98\u65b9\u7684 codeforces \u955c\u50cf\u7f51\u7ad9\uff0c\u4e0d\u7981\u901f\u5ea6\u98de\u8d77\uff0c\u723d\u4e0d\u5df2\uff0c\u9042\u5206\u4eab\u6b64\u7ad9\u4e8e\u541b\n[https://codeforces.ml/](https://codeforces.ml/)\n\u4ee5\u53ca\u4e00\u4e2a\u8f85\u52a9\u6211\u753b\u6811\u7684\u8f6f\u4ef6 Graphviz\uff08\u8fd9\u4e2a\u81ea\u884cdfs\uff09",
        "postTime": 1638608092,
        "uid": 482921,
        "name": "meizhuhe",
        "ccfLevel": 6,
        "title": "CF708C Centroids \u9898\u89e3"
    },
    {
        "content": "\u672c\u6587\u540c\u6b65\u53d1\u8868\u5728[\u6211\u7684blog](https://www.cnblogs.com/TEoS/p/13597264.html)\n\n------------\n**\u9898\u610f\u5206\u6790**\n\n\u7ed9\u51fa\u4e00\u68f5\u6811\uff0c\u6c42\u6709\u591a\u5c11\u4e2a\u8282\u70b9\u6ee1\u8db3\u5728\u6811\u4e0a\u5220\u53bb\u4e00\u6761\u8fb9\u518d\u52a0\u5165\u4e00\u6761\u8fb9\u540e\u53ef\u4ee5\u6210\u4e3a\u6811\u7684\u91cd\u5fc3\u3002\n\n**\u601d\u8def\u5206\u6790**\n\n\u8bbe\u5f53\u524d\u8282\u70b9\u4e3a $x$ \u3002\u7ecf\u8fc7\u5206\u6790\u540e\u5f88\u5bb9\u6613\u53d1\u73b0\uff0c\u9898\u76ee\u4e2d\u8981\u6c42\u7684\u64cd\u4f5c\u4e00\u5b9a\u662f\u5728\u4ee5\u5f53\u524d\u8282\u70b9\u4e3a\u6839\u65f6\uff0c\u5c06\u5176\u4e2d\u4e00\u68f5\u5b50\u6811\u63a5\u5230\u6839\u8282\u70b9\u4e0a\uff0c\u8bbe\u8fd9\u68f5\u5b50\u6811\u7684\u6839\u8282\u70b9\u4e3a $p_x$\u3002\u5219\u82e5 $x$ \u5df2\u7ecf\u662f\u91cd\u5fc3\uff0c\u5219\u4e0d\u7528\u64cd\u4f5c\uff1b\u82e5 $x$ \u4e0d\u662f\u91cd\u5fc3\uff0c\u5219\u6709\u4e14\u53ea\u6709\u4e00\u68f5 $x$ \u7684\u76f4\u63a5\u5b50\u6811\uff08\u5373\u4ee5 $x$ \u7684\u513f\u5b50\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\uff09\u7684\u5927\u5c0f $>\\left \\lfloor  \\frac{n}{2}\\right \\rfloor$\uff0c\u56e0\u6b64\u4e00\u5b9a\u8981\u628a\u8fd9\u68f5\u76f4\u63a5\u5b50\u6811\u4e2d\u7684\u4e00\u68f5\u5b50\u6811\u63a5\u5230 $x$ \u4e0a\u3002\u663e\u7136\uff0c\u8fd9\u68f5\u88ab\u79fb\u52a8\u7684\u5b50\u6811\u5e94\u8be5\u662f\u8fd9\u68f5\u76f4\u63a5\u5b50\u6811\u4e2d\u7684\u6700\u5927\u7684\u5927\u5c0f\u4e0d\u8d85\u8fc7 $\\frac{n}{2}$ \u7684\u5b50\u6811\u3002\u53ef\u4ee5\u8bc1\u660e\u8fd9\u4e2a\u79fb\u52a8\u7b56\u7565\u4e00\u5b9a\u662f\u6700\u4f18\u7684\u3002\u7136\u540e\u5224\u65ad\u79fb\u52a8\u540e $x$ \u662f\u5426\u4e3a\u91cd\u5fc3\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u90fd\u91cd\u65b0\u8ba1\u7b97\u663e\u7136\u590d\u6742\u5ea6\u592a\u9ad8\uff0c\u53d1\u73b0\u5f88\u591a\u4fe1\u606f\u53ef\u4ee5\u91cd\u590d\u5229\u7528\uff0c\u8003\u8651\u6362\u6839\u3002\u5bf9\u4e8e\u4e00\u4e2a\u666e\u901a\u8282\u70b9 $x$ \uff0c $p_x$ \u53ef\u80fd\u4f4d\u4e8e\u4ee5 $x$ \u4e3a\u6839\u7684\u5b50\u6811\u5f53\u4e2d\uff0c\u4e5f\u6709\u53ef\u80fd\u4e0d\u4f4d\u4e8e\u3002\u5bf9\u8fd9\u4e24\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u5206\u4e24\u8def\u8fdb\u884c\u9012\u63a8\u3002\n\n1. $p_x$ \u5728\u4ee5 $x$ \u4e3a\u6839\u7684\u5b50\u6811\u5f53\u4e2d\n\n\u627e\u5230 $x$ \u7684\u6700\u5927\u76f4\u63a5\u5b50\u6811\uff0c\u82e5\u8be5\u5b50\u6811\u7684\u5927\u5c0f $>\\left \\lfloor  \\frac{n}{2}\\right \\rfloor$ \uff0c\u90a3\u4e48\u5c31\u4ece\u8fd9\u68f5\u5b50\u6811\u4e2d\u627e\u51fa\u6700\u5927\u7684\u4e0d\u8d85\u8fc7 $\\frac{n}{2}$ \u7684\u5b50\u6811\uff0c\u8fd9\u68f5\u5b50\u6811\u7684\u6839\u8282\u70b9\u5373\u4e3a $p_x$ \u3002\u82e5\u6ca1\u6709\uff0c\u8bf4\u660e $p_x$ \u4e0d\u5728\u8fd9\u6216\u8005 $x$ \u539f\u672c\u5c31\u662f\u91cd\u5fc3\u3002\n\n2. $p_x$ \u4e0d\u5728\u4ee5 $x$ \u4e3a\u6839\u7684\u5b50\u6811\u5f53\u4e2d\n\n\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n-  $p_x$ \u5728\u4ee5 $x$  \u7684\u7236\u4eb2\u4e3a\u6839\u7684\u5b50\u6811\u5f53\u4e2d\n\n\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u901a\u8fc7\u8bb0\u5f55\u6bcf\u4e2a\u8282\u70b9\u7684\u6700\u5927\u7684\u6ee1\u8db3\u5927\u5c0f $\\leq\\left \\lfloor  \\frac{n}{2}\\right \\rfloor$ \u7684\u5b50\u6811\u3002\u6ce8\u610f\uff0c\u5982\u679c $x$ \u6070\u597d\u5728\u8be5\u5b50\u6811\u5f53\u4e2d\uff0c\u5219\u9700\u8981\u9009\u62e9\u7b2c\u4e8c\u5927\u7684\u5408\u6cd5\u5b50\u6811\uff0c\u56e0\u6b64\u9700\u8981\u5b58\u50a8\u6700\u5927\u7684\u548c\u7b2c\u4e8c\u5927\u7684\u4e24\u4e2a\u4fe1\u606f\u3002\n\n-  $p_x$ \u4e0d\u5728\u4ee5 $x$  \u7684\u7236\u4eb2\u4e3a\u6839\u7684\u5b50\u6811\u5f53\u4e2d\n\n\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u76f4\u63a5\u5c06\u6574\u68f5\u6811\u53bb\u6389\u4ee5 $x$ \u7684\u7236\u4eb2\u4e3a\u6839\u7684\u90e8\u5206\u770b\u4f5c\u4e00\u4e2a\u5b50\u6811\uff0c\u7528\u7c7b\u4f3c\u4e8e\u201c $p_x$ \u5728\u4ee5 $x$ \u4e3a\u6839\u7684\u5b50\u6811\u5f53\u4e2d\u201d\u7684\u65b9\u6cd5\u53bb\u5904\u7406\u5373\u53ef\u3002\n\n**\u5177\u4f53\u5b9e\u73b0**\n\n\u6839\u636e\u4e0a\u9762\u7684\u5206\u6790\uff0c\u9700\u8981\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c\u9700\u8981\u5b58\u50a8\u4ee5\u4e0b\u4fe1\u606f\uff1a\n\n- $son_{x,0},son_{x,1}$ \u5206\u522b\u5b58\u50a8\u4ee5 $x$ \u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u6700\u5927\u7684\u548c\u6b21\u5927\u7684\u5927\u5c0f $\\leq\\left \\lfloor  \\frac{n}{2}\\right \\rfloor$ \u7684\u5b50\u6811\u7684\u5927\u5c0f\uff1b\n- $fa_x$ \u5b58\u50a8\u6574\u68f5\u6811\u9664\u53bb\u4ee5 $x$ \u4e3a\u6839\u7684\u5b50\u6811\u5916\u6700\u5927\u7684\u5927\u5c0f $\\leq\\left \\lfloor  \\frac{n}{2}\\right \\rfloor$ \u7684\u5b50\u6811\u7684\u5927\u5c0f\uff1b\n- $siz_x$ \u5b58\u50a8\u4ee5 $x$ \u4e3a\u6839\u7684\u5b50\u6811\u7684\u5927\u5c0f\uff1b\n- $ansp_x$ \u5b58\u50a8 $p_x$\uff1b\n- $maxson_x$ \u5b58\u50a8 $x$ \u7684\u91cd\u513f\u5b50\uff0c\u5373\u5b50\u6811\u6700\u5927\u7684\u513f\u5b50\uff1b\n- $ans_x$ \u5b58\u50a8 $x$ \u7684\u7b54\u6848\u3002\n\n1. \u9884\u5904\u7406\n\n\u9884\u5904\u7406\u51fa $siz,maxson,son,ansp$ \u56db\u4e2a\u6570\u7ec4\u7684\u503c\u3002\u524d\u4e24\u4e2a\u6570\u7ec4\u7684\u5904\u7406\u5f88\u7b80\u5355\uff0c\u5c31\u4e0d\u8d58\u8ff0\u4e86\uff1b $son$ \u6570\u7ec4\uff0c\u5bf9\u4e8e\u5f53\u524d\u626b\u63cf\u5230\u7684\u5b50\u8282\u70b9\uff0c\u82e5\u4ee5\u8be5\u5b50\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u5927\u5c0f $\\leq\\left \\lfloor  \\frac{n}{2}\\right \\rfloor$ \uff0c\u5219\u7528\u5176\u66f4\u65b0 $son$ \u6570\u7ec4\uff0c\u5426\u5219\u7528\u8be5\u5b50\u8282\u70b9\u7684 $son_0$ \u8fdb\u884c\u66f4\u65b0\u3002\u5904\u7406 $son$ \u6570\u7ec4\u65f6\uff0c\u82e5\u51b3\u7b56\u66f4\u4f18\uff0c\u5219\u66f4\u65b0 $ansp$ \u6570\u7ec4\u3002\n\n```c++\nvoid check(int x,int y,int p)\n{\n\tif(y>son[x][0] && y<=n/2)//\u4e0e\u6700\u5927\u7684\u6bd4\u8f83\n\t\tson[x][1]=son[x][0],son[x][0]=y,ansp[x]=p;\n\telse\n\t\tif(y>son[x][1] && y<=n/2)//\u6bd4\u6700\u5927\u7684\u5c0f\uff0c\u5219\u4e0e\u6b21\u5927\u7684\u6bd4\u8f83\n\t\t\tson[x][1]=y;\n}//\u5224\u65ad\u51b3\u7b56\u662f\u5426\u66f4\u4f18\n\nvoid pre(int x,int f)\n{\n\tsiz[x]=1;\n\tfor(int i=head[x];i;i=Next[i])\n\t{\n\t\tint y=ver[i];\n\t\tif(y==f)\n\t\t\tcontinue;\n\t\tpre(y,x);\n\t\tsiz[x]+=siz[y];\n\t\tif(siz[y]>siz[maxson[x]])\n\t\t\tmaxson[x]=y;//\u627e\u91cd\u513f\u5b50\n\t\tcheck(x,siz[y]<=n/2?siz[y]:son[y][0],y);//\u6ce8\u610f\u4e0d\u80fd\u8ba9\u540c\u4e00\u5b50\u8282\u70b9\u8d21\u732e\u4e24\u4e2a\u51b3\u7b56\n\t}\n}\n```\n\n2. \u5904\u7406 $fa$ \u540c\u65f6\u6c42\u89e3\n\n\u7528\u7c7b\u4f3c\u4e8e\u5904\u7406 $son$ \u6570\u7ec4\u7684\u65b9\u6cd5\u5904\u7406 $fa$ \u6570\u7ec4\uff0c\u8fd9\u91cc\u5c31\u4e0d\u8d58\u8ff0\u4e86\u3002\u7136\u540e\u5206\u522b\u5224\u65ad\u7236\u8282\u70b9\u65b9\u5411\u548c\u5b50\u6811\u65b9\u5411\u7684\u4e24\u79cd\u60c5\u51b5\u662f\u5426\u5408\u6cd5\uff0c\u4ee5\u53ca\u5176\u672c\u8eab\u662f\u5426\u5c31\u662f\u91cd\u5fc3\uff0c\u4ece\u800c\u6c42\u89e3\u3002\n\n```c++\nvoid checkfa(int x,int y)\n{\n\tif(y>fa[x] && y<=n/2)\n\t\tfa[x]=y;\n}//\u5224\u65ad\u51b3\u7b56\u662f\u5426\u66f4\u4f18\n\nvoid solve(int x,int f)\n{\n\tcheckfa(x,n-siz[f]<=n/2?n-siz[f]:fa[f]);\n\tif(ansp[f]==x)//\u672c\u8eab\u5728\u6700\u5927\u5b50\u6811\uff0c\u5219\u91c7\u7528\u6b21\u5927\u4f5c\u4e3a\u51b3\u7b56\n\t\tcheckfa(x,son[f][1]);\n\telse//\u5426\u5219\u91c7\u7528\u6700\u5927\n\t\tcheckfa(x,son[f][0]);\n\tif(siz[maxson[x]]>n/2)//\u5728\u5b50\u6811\u5185\n\t\tans[x]=(siz[maxson[x]]-son[maxson[x]][0]<=n/2);\n\telse\n\t\tif(n-siz[x]>n/2)//\u5728\u7236\u8282\u70b9\u65b9\u5411\n\t\t\tans[x]=(n-siz[x]-fa[x]<=n/2);\n\t\telse\n\t\t\tans[x]=1;//\u539f\u672c\u5c31\u662f\u91cd\u5fc3\n\tfor(int i=head[x];i;i=Next[i])\n\t{\n\t\tint y=ver[i];\n\t\tif(y==f)\n\t\t\tcontinue;\n\t\tsolve(y,x);\n\t}\n}\n```\n\n**\u56fe\u4f8b\u89e3\u91ca**\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/anvhwp9h.png)\n\n\u4ee5\u4e0a\u56fe\u4e3a\u4f8b\uff08\u9ed8\u8ba4\u8282\u70b9 $1$ \u4f5c\u4e3a\u6839\u8282\u70b9\uff09\uff1a\uff08\u4e3a\u4e86\u65b9\u4fbf\uff0c\u4ee5\u4e0b\u7684\u6700\u5927\u5b50\u6811\u5747\u6307 $\\leq\\left \\lfloor  \\frac{n}{2}\\right \\rfloor$ \u7684\u5b50\u6811\uff09\n\n- \u6700\u5927\u5b50\u6811\u4f4d\u4e8e\u5b50\u6811\u65b9\u5411\u4e14\u4e3a\u76f4\u63a5\u5b50\u6811\uff1a9\n- \u6700\u5927\u5b50\u6811\u4f4d\u4e8e\u5b50\u6811\u65b9\u5411\u4e14\u4e0d\u4e3a\u76f4\u63a5\u5b50\u6811\uff1a1\u30012\u30016\u300110\n- \u6700\u5927\u5b50\u6811\u4f4d\u4e8e\u7236\u4eb2\u65b9\u5411\u4e14\u4e3a\u76f4\u63a5\u5b50\u6811\uff1a7\n- \u6700\u5927\u5b50\u6811\u4f4d\u4e8e\u7236\u4eb2\u65b9\u5411\u4e14\u4e0d\u4e3a\u76f4\u63a5\u5b50\u6811\uff1a3\u30014\u30015\u30018\n\n```c++\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nconst int N=1e6+100;\nint n,tot;\nint head[N],ver[2*N],Next[2*N];\nint siz[N],ans[N],ansp[N],maxson[N],fa[N],son[N][2];\nvoid add(int x,int y)\n{\n\tver[++tot]=y,Next[tot]=head[x],head[x]=tot;\n\tver[++tot]=x,Next[tot]=head[y],head[y]=tot;\n}//\u90bb\u63a5\u8868\nvoid check(int x,int y,int p)\n{\n\tif(y>son[x][0] && y<=n/2)\n\t\tson[x][1]=son[x][0],son[x][0]=y,ansp[x]=p;\n\telse\n\t\tif(y>son[x][1] && y<=n/2)\n\t\t\tson[x][1]=y;\n}//\u5b50\u6811\u65b9\u5411\u66f4\u65b0\nvoid checkfa(int x,int y)\n{\n\tif(y>fa[x] && y<=n/2)\n\t\tfa[x]=y;\n}//\u7236\u4eb2\u65b9\u5411\u66f4\u65b0\nvoid pre(int x,int f)\n{\n\tsiz[x]=1;\n\tfor(int i=head[x];i;i=Next[i])\n\t{\n\t\tint y=ver[i];\n\t\tif(y==f)\n\t\t\tcontinue;\n\t\tpre(y,x);\n\t\tsiz[x]+=siz[y];\n\t\tif(siz[y]>siz[maxson[x]])\n\t\t\tmaxson[x]=y;\n\t\tcheck(x,siz[y]<=n/2?siz[y]:son[y][0],y);\n\t}\n}//\u9884\u5904\u7406\nvoid solve(int x,int f)\n{\n\tcheckfa(x,n-siz[f]<=n/2?n-siz[f]:fa[f]);\n\tif(ansp[f]==x)\n\t\tcheckfa(x,son[f][1]);\n\telse\n\t\tcheckfa(x,son[f][0]);\n\tif(siz[maxson[x]]>n/2)\n\t\tans[x]=(siz[maxson[x]]-son[maxson[x]][0]<=n/2);\n\telse\n\t\tif(n-siz[x]>n/2)\n\t\t\tans[x]=(n-siz[x]-fa[x]<=n/2);\n\t\telse\n\t\t\tans[x]=1;\n\tfor(int i=head[x];i;i=Next[i])\n\t{\n\t\tint y=ver[i];\n\t\tif(y==f)\n\t\t\tcontinue;\n\t\tsolve(y,x);\n\t}\n}//\u5904\u7406 fa \u540c\u65f6\u6c42\u89e3\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1,x,y;i<n;i++)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd(x,y);\n\t}\n\tpre(1,0),solve(1,0);\n\tfor(int i=1;i<=n;i++)\n\t\tprintf(\"%d \",ans[i]);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1598951713,
        "uid": 91534,
        "name": "TEoS",
        "ccfLevel": 6,
        "title": "CF708C Centroids"
    },
    {
        "content": "[CF708C Centroids](http://codeforces.com/problemset/problem/708/C)\n\n\u8003\u8651\u4e00\u79cd\u548cCSP 2019 Day T3 ~~\u4e00\u6837~~ \u5f88\u50cf\u7684\u505a\u6cd5\n\nThe Solution\n------------\n\n\u5982\u679c\u4e00\u4e2a\u7ed3\u70b9 $u$ \u4e0d\u662f\u91cd\u5fc3\uff0c\u90a3\u4e48\u5b83\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a$siz_v \\ge n/2$ \uff08\u91cd\u513f\u5b50\uff09\n\n\u5219\u8981\u5728\u91cd\u513f\u5b50\u627e\u4e00\u68f5\u5927\u5c0f\u4e3a $S$ \u7684\u6811\uff0c\u6ee1\u8db3\n\n$$\n\\left\\{\\begin{matrix}\n 2 \\times (siz_v - S) \\le n\\\\\n 2\\times S \\le n\\\\\n\n\\end{matrix}\\right.\n$$\n\n\u5316\u7b80\u540e\u5f97\u5230 $siz_v - n/2 \\le S \\le n/2$\n\n\n\n------------\n\u8fdb\u4e00\u6b65\u5730\uff0c\n\n\u5047\u8bbe\u662f\u4e00\u68f5\u4ee5\u91cd\u5fc3\u4e3a\u6839\u7684\u6709\u6839\u6811\uff0c\u5219\u5bf9\u4e8e\u7ed3\u70b9 $u \\ne root$ \n\n\u5176\u91cd\u513f\u5b50\u5927\u5c0f\u4e3a $n - siz_u$ \uff0c\u53ca\u65ad\u6389 $u$ \u4e0e\u5176 $fa$ \u7684\u8fde\u8fb9\u540e\u7684\u53e6\u4e00\u68f5\u6811\n\n\u95ee\u9898\u8f6c\u5316\u4e3a\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $u$ \u5224\u65ad\u4e0a\u8fb9\u6709\u65e0\u4e00\u68f5\u5927\u5c0f\n\n\u6ee1\u8db3 **\u4e0d\u5728 $u$ \u7684\u5b50\u6811\u5185**( _~~Obviosly~~_ ) \u4e14 $n/2-siz_u \\le S \\le n/2$  \u7684\u6811\n\n------------\n\n\u5177\u4f53\u5b9e\u73b0\u5c31\u662f\u7ef4\u62a4\u4e24\u4e2a**\u6743\u503c\u6811\u72b6\u6570\u7ec4**\uff0c\u8bb0 $t1$ \u548c $t2$\n\n$t1[i]$ \u7ef4\u62a4\u5168\u5c40\u7684\u5927\u5c0f\u5c0f\u4e8e $i$ \u7684\u4e2a\u6570\n\n$t2[i]$ \u7ef4\u62a4  **\u5f53\u524d\u626b\u8fc7\u70b9\u7684\u5b50\u6811\u4e2d**  \u5927\u5c0f\u5c0f\u4e8e $i$ \u7684\u4e2a\u6570\n\n\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a $u$ \uff0c\u5176\u5b50\u6811\u5185\u6ee1\u8db3\u6761\u4ef6\u7684\u6570\u91cf\u5c31\u662f\u626b\u5b8c $u$ \u4e4b\u540e\uff0c$t2$ \u7684**\u53d8\u5316\u91cf**\uff0c\u662f\u9700\u8981\u51cf\u53bb\u7684\n\nThe Code\n------------\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=400005;\nint n,E,root,siz[N],ans[N],t1[N],t2[N];\nint pnt[N*2],nxt[N*2],head[N];\nvoid add_e(int u,int v) {pnt[++E]=v,nxt[E]=head[u],head[u]=E;}\nvoid prp(int u,int f) {\n\tsiz[u]=1;\n\tbool ok=1;\n\tfor(int i=head[u];i;i=nxt[i]) {\n\t\tint v = pnt[i];\n\t\tif(v == f) continue;\n\t\tprp(v,u);\n\t\tsiz[u] += siz[v];\n\t\tif(siz[v] > n/2) ok=0;\n\t}\n\tif(n-siz[u] > n/2) ok=0;\n\tif(ok) root=u, ans[u]=1;\n}\nvoid add(int a[],int x,int v) {if(x<=0) return;for(++x;x<=n+1;x+=x&-x) a[x]+=v;}\nint ask(int a[],int x) {\n\tif(x <= 0) return 0;\n\tint res = 0;\n\tfor(++x;x;x-=x&-x) res += a[x];\n\treturn res;\n}\nvoid solve(int u,int fa) {\t\n\tint t=0;\n\tadd(t1,siz[fa],-1);\n\tadd(t1,n-siz[u],1);\n\tif(ans[u] == 0) {\n\t\tt += ask(t1,n/2);\n\t\tt -= ask(t1,(n-2*siz[u]+1)/2-1);\n\t\tt += ask(t2,n/2);\n\t\tt -= ask(t2,(n-2*siz[u]+1)/2-1);\n\t}\n\tadd(t2,siz[u],1);\n\tfor(int i=head[u];i;i=nxt[i]) {\n\t\tint v = pnt[i];\n\t\tif(v==fa) continue;\n\t\tsolve(v,u);\n\t}\n\tadd(t1,siz[fa],1);\n\tadd(t1,n-siz[u],-1);\n\tif(ans[u] == 0) {\n\t\tt -= ask(t2,n/2);\n\t\tt += ask(t2,(n-2*siz[u]+1)/2-1);\n\t\tif(t > 0) ans[u]=1;\n\t}\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int u,v,i=1;i<n;i++) {\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tadd_e(u,v), add_e(v,u);\n\t}\n\tprp(1,0);\n\tprp(root,0);\n\tfor(int i=0;i<=n;i++) add(t1,siz[i],1);\n\tsolve(root,0);\n\tfor(int i=1;i<=n;i++) printf(\"%d \",ans[i]);\n\treturn printf(\"\\n\"),0;\n}\n```",
        "postTime": 1600775671,
        "uid": 95246,
        "name": "MoonPie",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF708C \u3010Centroids\u3011"
    },
    {
        "content": "\u4e00\u4e2a\u66b4\u529b\u5927\u5e38\u6570\uff0c\u4f46\u662f\u597d\u7406\u89e3\u7684\u505a\u6cd5\u3002\u4e5f\u6709\u9002\u7528\u6027\u3002\n\n\u5148\u8fdb\u884c\u5206\u6790\uff1a\n\n\u4e00\u4e2a\u70b9\uff0c\u5982\u679c\u5b83\u5728\u539f\u6811\u4e0a\u5c31\u662f\u91cd\u5fc3\uff0c\u90a3\u4e48\u968f\u4fbf\u627e\u4e00\u6761\u8fb9\u5220\u4e86\u518d\u8fde\u5373\u53ef\u3002\n\n\u5982\u679c\u4e0d\u662f\uff0c\u90a3\u4e48\u5b83\u4e00\u5b9a\u6709\u60df\u4e00\u4e00\u4e2a\u5b50\u6811\u5927\u5c0f\u5927\u4e8e $\\lfloor \\dfrac n 2 \\rfloor$\uff0c\u6211\u4eec\u79f0\u4e3a\u4e0d\u5408\u6cd5\u5b50\u6811\uff08\u53cd\u4e4b\u4e3a\u5408\u6cd5\u5b50\u6811\uff09\u3002\u6211\u4eec\u8003\u8651\u5c06\u5b83\u4e4b\u4e2d\u7684\u4e00\u4e2a\u5408\u6cd5\u5b50\u6811\u63d0\u51fa\uff0c\u7136\u540e\u63a5\u5230\u8be5\u70b9\u4e0b\u3002\u5982\u679c\u53ef\u4ee5\u8ba9\u5269\u4e0b\u7684\u5b50\u6811\u5408\u6cd5\uff0c\u8be5\u70b9\u5c31\u53ef\u4ee5\u6210\u4e3a\u91cd\u5fc3\u3002\n\n\u4e3a\u65b9\u4fbf\u5904\u7406\uff0c\u6211\u4eec\u5148\u8ba4\u4e3a $1$ \u53f7\u70b9\u4e3a\u6839\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u6c42\u51fa\u6bcf\u4e2a\u5b50\u6811\u4e2d\u6700\u5927\u7684\u5408\u6cd5\u5b50\u6811\u5927\u5c0f\uff0c\u8fd8\u8981\u6c42\u51fa\u6bcf\u4e2a\u70b9\u5b50\u6811\u8865\u6811\u4e2d\u6700\u5927\u7684\u5408\u6cd5\u5b50\u6811\u5927\u5c0f\u3002\n\n\u4e24\u8005\u90fd\u5305\u542b\u6574\u68f5\u6811\u5408\u6cd5\u7684\u60c5\u51b5\u3002\n\n\u8bb0\u524d\u8005\u4e3a $f_i$\uff0c\u540e\u8005\u4e3a $g_i$\u3002\n\n$f_i$ \u53ef\u4ee5\u76f4\u63a5 dp\uff1b\u8003\u8651\u5b50\u6811\u548c\u81ea\u8eab\u5408\u6cd5\u7684\u60c5\u51b5\u3002\u7565\u4e86\u3002\n\n$g_i$ \u5c31\u6709\u4e9b\u9ebb\u70e6\u4e86\u3002\u5982\u4f55\u7edf\u8ba1\u5230\u53cd\u65b9\u5411\u7684\u6240\u6709\u5b50\u6811\uff1f\n\n\u6211\u4eec\u91c7\u7528\u8fd9\u6837\u4e00\u79cd\u505a\u6cd5\uff1a\u8003\u8651\u6240\u6709\u7956\u5148\uff08\u5305\u62ec\u81ea\u5df1\uff09\u6574\u68f5\u6811\u7684\u8865\u6811\uff0c\u548c\u7956\u5148\u7684\u6240\u6709\u5144\u5f1f\u5b50\u6811\u7684\u5b50\u6811\u3002\n\n\u753b\u4e2a\u56fe\u5c31\u660e\u767d\u4e86\u3002\n\n\u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u8003\u8651\u4e00\u4e2a\u70b9\u5144\u5f1f\u7684 $f_u$ \u503c $\\max$\u3002\n\n\u8fd9\u4e2a\u53ef\u4ee5\u5bf9\u6240\u6709\u5144\u5f1f\u6307\u5b9a\u987a\u5e8f\u540e\u6c42\u524d\u7f00\u540e\u7f00 $\\max$ \u5f97\u5230\u3002\n\n\u7136\u540e\uff0c\u4ece\u6839\u7ed3\u70b9\u5411\u4e0b\u9012\u63a8\uff0c\u5373\u53ef\u63a8\u51fa $g_v$\u3002\n\n\u65f6\u7a7a\u590d\u6742\u5ea6 $\\mathcal O(n)$\u3002\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#include <queue>\n#include <vector>\n#include <ctime>\n\nconst int N = 400001;\ntypedef std::vector <int>::iterator it;\n\nchar buf[1 << 25] ,*p1 = buf ,*p2 = buf;\n#define getchar() (p1 == p2 && (p2 = (p1 = buf) + fread(buf ,1 ,1 << 21 ,stdin) ,p1 == p2) ? EOF : *p1++)\ninline int read() {\n    int x = 0, f = 1; char ch = getchar();\n    while(ch > '9' || ch < '0') { if(ch == '-') f = -1; ch = getchar(); }\n    while(ch >= '0' && ch <= '9') x = x * 10 + ch - 48, ch = getchar();\n    return x * f;\n}\n\nint n,f[N],sz[N],p[N],q[N],mx[N],mxt[N],g[N];\nstd::vector <int> vec[N];\n\nvoid Dfs(int v,int fa) {\n    sz[v] = 1;\n    int l = vec[v].size();\n    for(it i = vec[v].begin();i != vec[v].end();i++)\n        if(*i == fa) { vec[v].erase(i); break; }\n    l = vec[v].size();\n    for(int i = 0;i < l;i++) {\n        int u = vec[v][i];\n        Dfs(u,v), sz[v] += sz[u];\n    }\n    for(int i = 0;i < l;i++) p[i] = q[i] = 0;\n    for(int i = 0;i < l;i++) {\n        int u = vec[v][i];\n        if(mx[v] < sz[u]) mx[v] = sz[u], mxt[v] = u;\n        if(i > 0) p[i] = p[i - 1];\n        p[i] = std::max(p[i],f[u]);\n    }\n    if(mx[v] < n - sz[v]) mx[v] = n - sz[v], mxt[v] = -1;\n    \n    for(int i = l - 1;i >= 0;i--) {\n        int u = vec[v][i];\n        if(i < l - 1) q[i] = q[i + 1];\n        q[i] = std::max(q[i],f[u]);\n    }\n    for(int i = 0;i < l;i++) {\n        int u = vec[v][i];\n        if(i > 0) g[u] = std::max(g[u],p[i - 1]);\n        if(i < l - 1) g[u] = std::max(g[u],q[i + 1]);\n    }\n    if(n - sz[v] <= n / 2) g[v] = std::max(g[v],n - sz[v]);\n    f[v] = l ? q[0] : 0;\n    if(sz[v] <= n / 2) f[v] = std::max(f[v],sz[v]);\n    return;\n}\n\nint ans[N];\n\nvoid Dfs1(int v) {\n    if(mxt[v] == -1) { if(mx[v] - g[v] <= n / 2) ans[v] = true; }\n    else if(mx[v] - f[mxt[v]] <= n / 2) ans[v] = true;\n    for(int i = 0;i < (int)vec[v].size();i++) {\n        int u = vec[v][i];\n        g[u] = std::max(g[u],g[v]);\n        Dfs1(u);\n    }\n    return;\n}\n\nint main() {\n    n = read();\n    for(int i = 1;i < n;i++) {\n        int v = read(), u = read();\n        vec[v].push_back(u);\n        vec[u].push_back(v);\n    }\n    Dfs(1,0);\n    Dfs1(1);\n    for(int i = 1;i <= n;i++) std::printf(\"%d \",ans[i]);\n    std::puts(\"\");\n    return 0;\n}\n\n```",
        "postTime": 1632727179,
        "uid": 219595,
        "name": "Vocalise",
        "ccfLevel": 9,
        "title": "\u6362\u6839 dp --- CF708C \u3010Centroids\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd3\u6b21\uff085\u6b21\uff09$dfs$\u7684\u65b9\u6cd5\n\n\u9996\u5148\u8003\u8651\u6211\u4eec\u5207\u5f00\u4e00\u5200\u7684\u60c5\u51b5\n\n\u663e\u7136\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u70b9\uff0c\u6211\u4eec\u4ee4\u8fd9\u4e2a\u70b9\u4e3a\u6839\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u8981\u5728\u8fd9\u4e2a\u70b9\u7684\u6240\u6709\u8fde\u8fb9\u4e2d$siz$\u6700\u5927\u7684\u5730\u65b9\u5207\uff0c\u5207\u5230\u8fd9\u4e2a$siz\\leq\\frac{n}{2}$\uff0c\u90a3\u4e48\u5207\u4e0b\u6765\u7684\u90e8\u5206\u5462\uff1f\u76f4\u63a5\u63a5\u5230\u8fd9\u4e2a\u70b9\u663e\u7136\u66f4\u4f18\n\n\u90a3\u5207\u4e0b\u6765\u591a\u5c11\u5462\uff1f\u6211\u4eec\u8003\u8651\u5207\u4e0b\u6765\u7684\u5927\u5c0f\u53ea\u8981$\\leq\\frac{n}{2}$\u968f\u4fbf\u600e\u4e48\u5207\u90fd\u53ef\u4ee5\n\n\u6240\u4ee5\u601d\u8def\u5c31\u662f\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u4e3a\u6839\u7684\u65f6\u5019\uff0c\u80fd\u591f\u5207\u4e0b\u6765\u7684\u6700\u5927\u7684\u5927\u5c0f\u4e0d\u8d85\u8fc7$\\frac{n}{2}$\u7684\u5b50\u6811\u662f\u591a\u5c11\n\n\u90a3\u4e48\u5c31\u662f\u4e00\u4e2a\u6362\u6839$dp$\u95ee\u9898\u4e86\uff0c\u4f46\u662f\u5728\u6211\u4eec\u4efb\u610f\u6307\u5b9a\u6839\u8282\u70b9\u7684\u65f6\u5019\uff0c$dfs$\u5230\u67d0\u4e2a\u70b9\uff0c\u6211\u4eec\u8981\u6c42\u7684\u65e2\u53ef\u80fd\u5728\u4ed6\u5b50\u6811\u4e2d\uff0c\u4e5f\u53ef\u80fd\u5728\u53e6\u4e00\u90e8\u5206\n\n\u6709\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u5c31\u662f\u697c\u4e0a\u7684\u5206\u7c7b\u8ba8\u8bba\n\n\u4e0d\u60f3\u5206\u7c7b\u8ba8\u8bba\u600e\u4e48\u529e\uff1f\n\n\u6211\u4eec\u6c42\u4e00\u4e0b\u6811\u7684\u91cd\u5fc3\uff0c\u90a3\u4e48\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u8981\u6c42\u7684\u90e8\u5206\u4e00\u5b9a\u90fd\u4e0d\u5728\u4ed6\u7684\u5b50\u6811\u5f53\u4e2d\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u518d\u7ef4\u62a4\u5c31\u5f88\u597d\u7ef4\u62a4\u4e86\n\n\u6211\u4eec\u9996\u5148\u7ef4\u62a4$f_i$\u8868\u793a\u5728\u4ee5$i$\u4e3a\u6839\u8282\u70b9\u5b50\u6811\u4e2d\u7684\u6700\u5927\u503c\uff0c$g_i$\u8868\u793a\u5728\u4ee5$i$\u4e3a\u6839\u8282\u70b9\u5b50\u6811\u4e2d\u7684\u6b21\u5927\u503c\uff08\u6362\u6839$dp$\u5957\u8def\u4e86\uff09\n\n\u90a3\u4e48\u600e\u4e48\u8ba1\u7b97\u80fd\u591f\u5207\u4e0b\u6765\u7684\u6700\u5927\u7684\u5927\u5c0f\u4e0d\u8d85\u8fc7$\\frac{n}{2}$\u7684\u5b50\u6811\u8fd9\u4e2a\u4e1c\u897f$h_i$\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u5217\u51fa\u8fd9\u6837\u4e00\u4e2a\u8f6c\u79fb\u65b9\u7a0b\n\n$$h_v=\n\\begin{cases}\n\\max(h_u,f_i),siz_v\\neq f_i \\\\\n\\max(h_u,g_i),siz_v=f_i\n\\end{cases}$$\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9$i$\uff0c\u5982\u679c$n-siz_i-h_i\\leq \\frac{n}{2}$\uff0c\u5c31\u662f$true$\uff0c\u5426\u5219\u662f$false$\n\n\u4f46\u662f\u6ce8\u610f\u4e00\u68f5\u6811\u6700\u591a\u53ef\u80fd\u62e5\u6709\u4e24\u4e2a\u91cd\u5fc3\uff0c\u6240\u4ee5\u5728\u6709\u4e24\u4e2a\u91cd\u5fc3\u65f6\u6211\u4eec\u9700\u8981\u5206\u522b\u4ee4\u8fd9\u4e24\u4e2a\u91cd\u5fc3\u4e3a\u6839\uff0c\u6700\u540e\u628a\u7b54\u6848\u6216\u4ee5\u4e0b\u5c31\u597d\u4e86\n\n****\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u884c\u4e09\u6b21$dfs$,$dfs1$\u6c42\u51fa\u91cd\u5fc3\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u91cd\u5fc3\uff0c\u6211\u4eec\u518d\u8fdb\u884c\u4e24\u6b21$dfs$,$dfs2$\u9884\u5904\u7406\u51fa\u5f53\u524d\u91cd\u5fc3\u4e3a\u6839\u65f6\u7684$siz,f,g$\uff0c$dfs3$\u8fdb\u884c\u6362\u6839$dp$\uff0c\u7136\u540e\u628a\u4e24\u4e2a\u91cd\u5fc3\u4e3a\u6839\u7684\u7b54\u6848\u6216\u8d77\u6765\n\n\u590d\u6742\u5ea6$O(n)$\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n# define Rep(i,a,b) for(int i=a;i<=b;i++)\n# define _Rep(i,a,b) for(int i=a;i>=b;i--)\n# define RepG(i,u) for(int i=head[u];~i;i=e[i].next)\n\ntypedef long long ll;\n\nconst int N=4e5+5;\n\ntemplate<typename T> void read(T &x){\n   x=0;int f=1;\n   char c=getchar();\n   for(;!isdigit(c);c=getchar())if(c=='-')f=-1;\n   for(;isdigit(c);c=getchar())x=(x<<1)+(x<<3)+c-'0';\n    x*=f;\n}\n\nint n;\nint head[N],cnt;\nint f[N],g[N],h[N],siz[N];\nint cen1,cen2,sizmin=1e9;\nbool out[N];\n\nstruct Edge{\n    int to,next;\n}e[N<<1];\n\nvoid add(int x,int y){\n    e[++cnt]=(Edge){y,head[x]},head[x]=cnt;\n}\n\nvoid dfs1(int u,int fa){\n    siz[u]=1;\n    RepG(i,u){\n        int v=e[i].to;\n        if(v==fa)continue;\n        dfs1(v,u);\n        siz[u]+=siz[v];\n        f[u]=max(f[u],siz[v]);\n    }\n    f[u]=max(f[u],n-siz[u]);\n}\n\nvoid dfs2(int u,int fa){\n    siz[u]=1;\n    RepG(i,u){\n        int v=e[i].to;\n        if(v==fa)continue;\n        dfs2(v,u);\n        siz[u]+=siz[v];\n        if(siz[v]>siz[f[u]])g[u]=f[u],f[u]=v;\n        else if(siz[v]>siz[g[u]])g[u]=v;\n    }\n}\n\nvoid dfs3(int u,int fa){\n    out[u]|=(n-siz[u]-h[u]<=n/2);\n    RepG(i,u){\n        int v=e[i].to;\n        if(v==fa)continue;\n        if(v==f[u])h[v]=max(h[u],siz[g[u]]);\n        else h[v]=max(h[u],siz[f[u]]);\n        dfs3(v,u);\n    }\n}\n\nint main()\n{\n    memset(head,-1,sizeof(head));\n    read(n);\n    Rep(i,1,n-1){\n        int x,y;\n        read(x),read(y);\n        add(x,y),add(y,x);\n    }\n    if(n==1)return puts(\"1 1\"),0;\n    dfs1(1,0);\n    Rep(i,1,n)\n        if(f[i]<sizmin){\n            sizmin=f[i];\n            cen1=i,cen2=0;\n        }\n        else if(f[i]==sizmin)cen2=i;\n    memset(f,0,sizeof(f));\n    dfs2(cen1,0);\n    out[cen1]=true;\n    RepG(i,cen1){\n        int v=e[i].to;\n        if(v==f[cen1])h[v]=max(h[cen1],siz[g[cen1]]);\n        else h[v]=max(h[cen1],siz[f[cen1]]);\n        dfs3(v,cen1);\n    }\n    if(cen2){\n        memset(f,0,sizeof(f));\n        memset(g,0,sizeof(g));\n        memset(h,0,sizeof(h));\n        dfs2(cen2,0);\n        out[cen2]=true;\n        RepG(i,cen2){\n            int v=e[i].to;\n            if(v==f[cen2])h[v]=max(h[cen2],siz[g[cen2]]);\n            else h[v]=max(h[cen2],siz[f[cen2]]);\n            dfs3(v,cen2);\n        }\n    }\n    Rep(i,1,n)printf(\"%d \",out[i]);\n    puts(\"\");\n    return 0;\n}\n```\n",
        "postTime": 1588320584,
        "uid": 97344,
        "name": "devout",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF708C \u3010Centroids\u3011"
    }
]