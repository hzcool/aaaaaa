[
    {
        "content": "\u86ee\u6e05\uff08du\uff09\u65b0 \uff08liu\uff09\u7684A\u9898\r\n\r\n\u601d\u8def\u5927\u81f4\u662f\u8fd9\u6837\u7684\uff1a\r\n\r\n\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\uff0c\u6ee1\u8db3\u8981\u6c42\u7684\u5e8f\u5217\u4e2d\u53ef\u4ee5\u63d0\u53d6\u51fa\u4e00\u4e2a\u975e\u4e25\u683c\u5355\u8c03\u9012\u589e\u5e8f\u5217\uff0c\u5e76\u4e14\u4e24\u4e2a\u6570\u5b57\u4e4b\u95f4\u6700\u591a\u5939\u4e00\u4e2a\u5176\u4ed6\u6570\u5b57\r\n\r\n\u56e0\u6b64\u8003\u8651 dp \uff0c\u5206\u4e24\u79cd\u60c5\u51b5\uff1a\r\n\r\n1. \u679a\u4e3e\u201c\u5176\u4ed6\u6570\u5b57\u201d\u5e76\u5728\u4e4b\u524d\u7684\u5df2\u7ecf\u6c42\u597d\u7684\u5e8f\u5217\u4e2d\u627e\u6700\u5927\u503c+2\r\n2. \u76f4\u63a5\u63a5\u5c0f\u4e8e\u7b49\u4e8e\u5f53\u524d\u626b\u5230\u7684\u6570\u5b57\u7684 dp \u6700\u5927\u503c+1\r\n\r\n\u8003\u8651\u7ec6\u8282\u65f6\u53d1\u73b0\u201c\u5176\u4ed6\u6570\u5b57\u201d\u5fc5\u987b\u5927\u4e8e\u7b49\u4e8e\u5f53\u524d\u6570\u5b57\u624d\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\uff0c\u201c\u5176\u4ed6\u6570\u5b57\u201d\u6700\u9760\u8fd1\u5f53\u524d\u6570\u5b57\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u6700\u4f18\r\n\r\n\u53ef\u4ee5\u5229\u7528\u5355\u8c03\u6808 $O(n)$ \u6c42\u51fa\u6bcf\u4e2a\u6570\u7684\u6700\u9760\u8fd1\u7684\u201c\u5176\u4ed6\u6570\u5b57\u201d\r\n\r\n```cpp\r\nfor(int i=n;i>0;--i)\r\n{\r\n    while(!stk.empty()&&a[i]>=a[stk.top()])\r\n    {\r\n        fax[stk.top()]=i;\r\n        stk.pop();\r\n    }\r\n    stk.push(i);\r\n}\r\n```\r\n\r\n\u7136\u540e\u6c42\u533a\u95f4 dp \u6700\u5927\u503c\u65f6\u6ce8\u610f\u5230\u672c\u8d28\u4e0a\u662f\u201c\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\u201d\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\r\n\r\n\u4ee5\u4e0b\u662f\u5b8c\u6574\u4ee3\u7801\uff1a\r\n\r\n```cpp\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int N=5e5+10;\r\npair<int,int> a[N]; int n; int fax[N],tr[N],dp[N]; \r\nvoid add(int x,int l)\r\n{\r\n    for(;l<=n;l+=l&(-l)) tr[l]=max(tr[l],x); \r\n}\r\nint ask(int x)\r\n{\r\n    int ans=0; \r\n    for(;x;x-=x&(-x)) ans=max(ans,tr[x]); \r\n    return ans; \r\n}\r\nstack<int>stk;\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d\",&n); for(int i=0;i<=n;++i) tr[i]=0; \r\n        for(int i=1;i<=n;++i) dp[i]=fax[i]=0; \r\n        for(int i=1;i<=n;++i) \r\n        {\r\n            scanf(\"%d\",&a[i].first); a[i].second=i; \r\n        }\r\n        \r\n        \r\n        for(int i=n;i>0;--i)\r\n        {\r\n            while(!stk.empty()&&a[i]>=a[stk.top()])\r\n            {\r\n                fax[stk.top()]=i;\r\n                stk.pop();\r\n            }\r\n            stk.push(i);\r\n        }\r\n        sort(a+1,a+n+1);\r\n       // for(int i=1;i<=n;++i) printf(\"%d \",fax[i]); puts(\"\");\r\n        for(int i=1;i<=n;++i)\r\n        {\r\n            int w=i; i=a[i].second; \r\n            dp[i]=max(dp[i],ask(i-1)+1);\r\n            if(fax[i])dp[i]=max(dp[i],ask(fax[i]-1)+2);\r\n            add(dp[i],i); i=w;\r\n        }\r\n        printf(\"%d\\n\",ask(n));\r\n        while(!stk.empty()) stk.pop();\r\n    }\r\n    return 0; \r\n}\r\n```",
        "postTime": 1633855186,
        "uid": 236929,
        "name": "Monaco",
        "ccfLevel": 0,
        "title": "CF1468A \u89e3\u9898\u62a5\u544a"
    },
    {
        "content": "\u6765\u4e00\u4e2a\u7b80\u5355\u597d\u60f3\u7684\u505a\u6cd5\u3002\n\n\u5148\u8003\u8651\u6ee1\u8db3\u9898\u76ee\u6240\u7ed9\u7684\u6027\u8d28\u7684\u5e8f\u5217\u8fd8\u6ee1\u8db3\u4ec0\u4e48\u6027\u8d28\u3002\n\n\u53d1\u73b0\u6ee1\u8db3\u8fd9\u6837\u6027\u8d28\u7684\u5e8f\u5217\u4e00\u5b9a\u53ef\u4ee5\u4ece\u4e2d\u627e\u5230\u4e00\u4e2a\u975e\u4e25\u683c\u5355\u8c03\u9012\u589e\u7684\u5b50\u5e8f\u5217\u4e14\u5b50\u5e8f\u5217\u4e2d\u76f8\u90bb\u7684\u6570\u5728\u539f\u5e8f\u5217\u4e2d\u8ddd\u79bb\u4e0d\u8d85\u8fc7 $1$ \uff0c\u4e2d\u95f4\u7684\u6570\u5927\u4e8e\u5de6\u8fb9\u7684\u6570\u3002\n\n\u90a3\u4e48\u8003\u8651\u5728\u7ed9\u51fa\u7684\u5e8f\u5217\u4e2d\u627e\u5230\u4e00\u4e2a\u975e\u4e25\u683c\u5355\u8c03\u9012\u589e\u7684\u5e8f\u5217\u518d\u5728\u76f8\u90bb\u6570\u4e2d\u95f4\u63d2\u5165\u5176\u4ed6\u6570\uff0c\u663e\u7136\u8fd9\u4e2a\u63d2\u5165\u7684\u6570\u4e0d\u80fd\u5c0f\u4e8e\u88ab\u63d2\u5165\u7684\u4e24\u4e2a\u6570\u4e2d\u7684\u524d\u4e00\u4e2a\u7684\u4e0a\u4e00\u4e2a\u6570\u3002\n\n\u5982\u679c\u8981\u8003\u8651 $dp$ \u6c42\u89e3\u5c31\u4e0d\u5f97\u4e0d\u7ef4\u62a4\u4e0a\u4e00\u4e2a\u7684\u6570\u503c\uff0c\u8fd9\u6837\u663e\u7136\u4e0d\u53ef\u884c\uff0c\u518d\u770b\u770b\u7b2c\u4e09\u6bb5\uff0c\u53d1\u73b0\u6839\u672c\u65e0\u9700\u7ef4\u62a4\u4e0a\u4e00\u4e2a\u7684\u6570\u503c\uff0c\u90a3\u4e48\u8003\u8651 $dp_i$ \u4e3a\u4ee5\u7b2c $i$ \u4e2a\u6570\u4e3a\u7ed3\u5c3e\u7684\u6ee1\u8db3\u9898\u76ee\u8981\u6c42\u7684\u5e8f\u5217\u7684\u6700\u957f\u957f\u5ea6\uff0c\u4e14\u7b2c $i$ \u4e2a\u6570\u662f\u8fd9\u4e2a\u5e8f\u5217\u627e\u51fa\u7684\u975e\u4e25\u683c\u5355\u8c03\u9012\u589e\u7684\u5b50\u5e8f\u5217\u7684\u6700\u540e\u4e00\u4e2a\u3002\n\n\u90a3\u4e48\u6709\n\n$$dp_i=max\\{dp_j+[MAX(j+1,i)\\ge a_j]\\}+1\\ (1\\le j<i\\ ,\\ a_j\\le a_i)$$ \n\n\u5176\u4e2d $MAX(l,r)$ \u4ee3\u8868 $l$ \u5230 $r$ \u4e4b\u95f4\u7684\u6700\u5927\u503c\u3002\n\n\u663e\u7136\u8fd9\u4e2a $dp$ \u53ef\u4ee5\u7528 DS \u6765\u7ef4\u62a4\uff0c\u7531\u4e8e\u5de6\u7aef\u70b9\u56fa\u5b9a\u53f3\u7aef\u70b9\u589e\u5927\u7684\u533a\u95f4\u7684\u6700\u5927\u503c\u662f\u9012\u589e\u7684\uff0c\u8003\u8651\u4f7f\u7528\u4e00\u4e2a\u5747\u644a\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4 $[MAX(j+1,i)\\ge a_j]$ \uff0c\u5269\u4e0b\u7684\u53d6\u524d\u7f00 $max$ \u53ef\u4ee5\u7528\u4e00\u4e2a\u503c\u57df\u6811\u72b6\u6570\u7ec4\u6765\u7ef4\u62a4\uff0c\u603b\u6548\u7387\u4e3a $\\mathcal{O(n\\log n)}$ \u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int M=5e5+5;\n \nint read(){\n    int x=0,y=1;char ch=getchar();\n    while(ch<'0'||ch>'9') y=(ch=='-'?-1:1),ch=getchar();\n    while(ch>='0'&&ch<='9') x=x*10+ch-'0',ch=getchar();\n    return x*y;\n}\n \nint n,w[M],dp[M],tr[M],minn[M<<2];\nint lowbit(int x){ return x&(-x); }\nvoid Add(int x,int y){ for(;x<=n;x+=lowbit(x)) tr[x]=max(tr[x],y); }\nint Max(int x){ int res=0;for(;x;x-=lowbit(x)) res=max(res,tr[x]);return res; }\nvoid pushup(int u){ minn[u]=min(minn[u<<1],minn[u<<1|1]); }\nvoid Build(int u,int l,int r){\n\tif(l==r) return (void)(minn[u]=w[l]);\n\tint mid=(l+r)>>1;\n\tBuild(u<<1,l,mid),Build(u<<1|1,mid+1,r);\n\tpushup(u);\n}\nvoid Change(int u,int l,int r,int L,int R,int x){\n\tif(minn[u]>=x||l>R||r<L) return ;\n\tif(l==r) return (void)(minn[u]=1e9,Add(w[l],dp[l]+1));\n\tint mid=(l+r)>>1;\n\tChange(u<<1,l,mid,L,R,x),Change(u<<1|1,mid+1,r,L,R,x);\n\tpushup(u);\n}\nvoid solve(){\n    n=read();int Ans=1;dp[0]=w[0]=0;\n    for(int i=1;i<=n;i++) w[i]=read(),tr[i]=0;\n    Build(1,1,n);\n    for(int i=1;i<=n;i++){\n    \tdp[i]=(i==1?1:2);\n        dp[i]=max(dp[i],Max(w[i])+1);\n        Add(w[i],dp[i]);\n        Change(1,1,n,1,i,w[i]);\n        Ans=max(Ans,dp[i]);//\u6839\u636edp\u5f0f\u53ef\u4ee5\u53d1\u73b0\u6700\u540e\u7b54\u6848\u7684\u5e8f\u5217\u7684\u6700\u540e\u4e00\u4e2a\u4e00\u5b9a\u662f\u975e\u4e25\u683c\u5355\u8c03\u9012\u589e\u5b50\u5e8f\u5217\u7684\u6700\u540e\u4e00\u4e2a \n    }\n    printf(\"%d\\n\",Ans);\n}\n \nsigned main(){\n    int T=read();\n    while(T--) solve();\n}\n```\n",
        "postTime": 1609071558,
        "uid": 116015,
        "name": "bellmanford",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1468A \u3010LaIS\u3011"
    }
]