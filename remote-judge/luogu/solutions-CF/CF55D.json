[
    {
        "content": "# \u849f\u84bb\u64cd\u4f5c\u4e00\u6ce2\u7ec8\u4e8eA\u8fc7\u4e86\u8fd9\u9053\u6c34\u9898\n**\u672c\u849f\u84bb\u524d\u51e0\u5929\u624d\u5b66\u6570\u4f4dDP\uff0c\u4e2a\u4eba\u611f\u89c9\u8fd9\u9053\u9898\u4e0e[P2657 windy\u6570](https://www.luogu.org/problem/P2657)\u6709\u5f02\u66f2\u540c\u5de5\u4e4b\u5999\uff08\u771f\u7684\u53ea\u662f\u4e2a\u4eba\u611f\u89c9\uff09**      \n**Warning\uff1a\u5982\u679c\u8fd8\u4e0d\u719f\u7ec3\u6570\u4f4dDP\u5eb7\u8fd9\u9053\u9898\u53ef\u80fd\u4f1a\u6b7b\u5927\u91cf\u8111\u7ec6\u80de**\n\n**\u4e0e\u5176\u4ed6\u7684\u9ed1\u9898\u76f8\u6bd4\uff0c\u8fd9\u9053\u9898\u771f\u7684\u7b80\u5355\u592a\u591a\u4e86\uff08\u867d\u7136\u6211\u4e5f\u662f\u5728\u9898\u89e3dalao\u4eec\u7684\u542f\u53d1\u4e0b\u505a\u51fa\u6765\u7684\uff09\uff0c\u6240\u4ee5\u6211\u6253\u7b97\u5199\u4e00\u7bc7\u901a\u4fd7\u6613\u61c2\u70b9\u7684\u9898\u89e3\uff0c\u4e5f\u7b97\u662f\u5bf9\u5176\u4ed6dalao\u4eec\u7684\u8865\u5145**\n\n## \u8fdb\u5165\u6b63\u9898\n\u5148\u8bf4\u5728\u524d\u9762\uff0c\u56e0\u4e3a\u6570\u636e\u91cf\u6781\u5927\uff0c\u6240\u4ee5\u4e00\u4e2a\u4e2a\u7684\u679a\u4e3e\u662f\u4e0d\u884c\u7684\uff01\uff01\uff01\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06[l,r]\u7684\u533a\u95f4\u53d8\u6210[1,r]-[1,l-1]\uff0c\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u5dee\u5206\u3002\n\n\u4e3a\u4e86\u89e3\u51b3\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u4e86\u89e3\u4e24\u70b9\u5c0f\u5b66\u6570\u5b66\u77e5\u8bc6\uff1a  \n1.\u4e00\u4e2a\u6570\u5982\u679c\u53ef\u4ee5\u88ab\u51e0\u4e2a\u6570\u6574\u9664\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u4e5f\u53ef\u4ee5\u88ab\u90a3\u51e0\u4e2a\u6570\u7684\u6700\u5c0f\u516c\u500d\u6570\u6574\u9664\uff1b   \n2.\"1,2,3,4,5,6,7,8,9\"\u7684\u6700\u5c0f\u516c\u500d\u6570\u4e3a2520 ~~\uff08\u5e9f\u8bdd\uff09~~ \u3002\n\n\u77e5\u9053\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u89e3\u9898\u4e86\u3002  \n\u9996\u5148\uff0c\u56e0\u4e3a\u662fDP\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e00\u4e2aDP\u6570\u7ec4\u6765\u5c06\u5b9d\u8d35\u4e2d\u95f4\u7684\u8fd0\u7b97\u7ed3\u679c\u50a8\u5b58\u4e0b\u6765\uff0c\u4e4b\u540e\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\uff08\u56e0\u4e3aDP\u4f7f\u7528\u7684\u662fDFS\uff0c\u6240\u4ee5\u4e5f\u53ef\u4ee5\u770b\u4f5c\u8bb0\u5fc6\u5316\u526a\u679d\uff09\u3002  \n\n\u63a5\u7740\uff0c\u56e0\u4e3a\u662f\u6570\u4f4dDP\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981DP\u6570\u7ec4\u5f00\u4e00\u4e2a\u7ef4\u5ea6\u6765\u50a8\u5b58\u5f53\u524d\u4f4d\u6570\u3002  \n\n\u5176\u6b21\uff0c\u56e0\u4e3a\u6700\u540e\u8981\u68c0\u6d4b\u8fd9\u4e2a\u6570\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\uff1a _\u80fd\u88ab\u5b83\u81ea\u5df1\u7684\u6bcf\u4e00\u4f4d\u6570\u4e0a\u7684\u6570\u6574\u9664_ \uff08\u4e5f\u5c31\u662f\u88ab\u6bcf\u4e00\u4f4d\u4e0a\u7684\u6570\u7684\u6700\u5c0f\u516c\u500d\u6570\u6574\u9664\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u53c8\u9700\u8981\u5f00\u4e24\u4e2a\u7ef4\u5ea6\uff1a\u4e00\u4e2a\u5b58\u6570\u7684\u503c\uff0c\u4e00\u4e2a\u5b58\u8fd9\u4e2a\u6570\u6bcf\u4e00\u4f4d\u4e0a\u7684\u6570\u7684\u6700\u5c0f\u516c\u500d\u6570\u3002   \n\n\u4f46\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\uff0c\u60f3\u5b589*10\uff0818\uff09\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u53c8\u56e0\u4e3a\u9898\u76ee\u6700\u540e\u662f\u68c0\u6d4b\u8fd9\u4e2a\u6570\u80fd\u5426\u88ab\u6bcf\u4e00\u4f4d\u4e0a\u7684\u6570\u7684\u6700\u5c0f\u516c\u500d\u6570\u6574\u9664\uff0c\u5047\u8bbe\u8fd9\u4e2a\u6570\u4e3aA\uff0c\u90a3\u4e48A\u4e0e\uff08A%2520\uff09\u5176\u5b9e\u662f\u7b49\u6548\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4e0d\u5b58A\u800c\u5b58\uff08A%2520\uff09\uff0c\u8fd9\u6837\u95ee\u9898\u5c31\u89e3\u51b3\u4e86   \n       \n\u4e8e\u662f\u6211\u4eec\u5c31\u5f00\u4e86\u4e00\u4e2a\u6570\u7ec4\uff1aDP[20(\u56e0\u4e3a\u603b\u5171\u5c3119\u4f4d\u6570)][2521][2521]\uff08DP\u6570\u7ec4\u5185\u7684\u6570\u636e\u8868\u793a\u6ee1\u8db3\u5f53\u524d\u60c5\u51b5\u7684 _Beautiful numbers_ \u7684\u4e2a\u6570\uff09\uff0c\u51c6\u5907\u76f4\u63a5\u5f00\u59cb\u8dd1\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5750\u7b49~~AC~~\u5185\u5b58\u8d85\u9650\u4e86\u3002  \n\n\u6240\u4ee5\u95ee\u9898\u53c8\u6765\u4e86\uff1a\u6570\u7ec4\u5f00\u4e0d\u4e0b\u3002\u4e8e\u662f\u6211\u4eec\u601d\u8003\u600e\u4e48\u51cf\u5c0f\u6570\u7ec4\uff1a\u7b2c\u4e00\u4e8c\u4f4d\u5df2\u7ecf\u5230\u6700\u5c0f\u4e86\uff0c\u53ea\u80fd\u6539\u7b2c\u4e09\u7ef4\u3002\u6211\u4eec\u901a\u8fc7\u8ba1\u7b97\u53d1\u73b0\uff0c1~2520\u4e2d\uff0c2520\u7684\u56e0\u6570\u53ea\u670948\u4e2a\uff0c\u4e5f\u5c31\u662f\u6ee1\u8db3\u6761\u4ef6\u7684\u60c5\u51b5\u53ea\u670948\u79cd\uff0c\u6240\u4ee5\u7b2c\u4e09\u7ef4\u5927\u5c0f\u76f4\u63a5\u53d8\u4e3a48\uff08\u8fd9\u5230\u5e95\u662f\u5c5e\u4e8e\u649e\u9e2d\u8fd8\u662f\u79bb\u6563\u5316\uff1f\u849f\u84bb\u50bb\u50bb\u5206\u4e0d\u6e05\uff09\n\n### \u4e0a\u4ee3\u7801\uff08\u8fd8\u6709\u4e9b\u7ec6\u8282\u90e8\u5206\u4f1a\u5728\u4ee3\u7801\u4e2d\u6ce8\u91ca\uff09\n\n**\uff01\uff01\uff01\u56e0\u4e3a\u501f\u9274\u4e86\u9898\u89e3dalao\u4eec\u7684\u601d\u8def\uff0c\u6240\u4ee5\u4ee3\u7801\u4f1a\u5f88\u76f8\u50cf\uff01\uff01\uff01**\n\n```cpp\n#define Tokisaki return  //\u72c2\u4e09\u6211\u8001\u5a46\uff01\uff01\uff01\n#define Kurumi 0;      //\u72c2\u4e09\u8d5b\u9ad8\uff01\uff01\uff01\n#include <cstdio>\n#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <cstring>\n\n#define rint register int   //\u52a0\u901f\u7528\u7684\uff0c\u76f4\u63a5\u7528int\u4e5f\u53ef\u4ee5\ntypedef long long ll;\n\nusing namespace std;\n\nconst int MOD=2520;\nint t,book[MOD+1];\nvector <int> shu;\nll l,r,dp[25][MOD+1][50];   //\u7279\u522b\u6ce8\u610f\uff1aDP\u6570\u7ec4\u4e00\u5b9a\u8981\u5f00long long\u7c7b\u578b\uff0c\u4e0d\u7136\u4f1a\u70b8\n\ninline int gcd (int x,int y) //gcd\u51fd\u6570\uff0c\u867d\u7136STL\u91cc\u9762\u81ea\u5e26\uff08\u4e3a__gcd\uff09\uff0c\u4f46\u8fd8\u662f\u81ea\u5df1\u624b\u5199\u4e86\u4e00\u4e2a\n{\n\tif(x>y) swap(x,y);\n\tif(y%x==0) return x;\n\treturn gcd(x,y%x);\n}\n\ninline int _lcm (int x,int y)  //lcm\u51fd\u6570\uff0c\u6c42\u6700\u5c0f\u516c\u7ea6\u6570\n{\n\treturn x*y/gcd(x,y);\n}\n\ninline void init()         //\u521d\u59cb\u5316\u7528\u7684\u51fd\u6570\n{\n\tmemset(dp,-1,sizeof(dp));  //\u5c06DP\u6570\u7ec4\u521d\u59cb\u5316\n\trint num=0;\n\tfor(rint i=1;i<=MOD;i++)   //\u79bb\u6563\u5316\uff0c\u5c062520\u7684\u56e0\u6570\u4eec\u4ece1\u5f00\u59cb\u6807\u8bb0\n\t{\n\t\tif(MOD%i==0)\n\t\t{\n\t\t\tnum++;\n\t\t\tbook[i]=num;\n\t\t}\n\t}\n}\n\nll dfs(int pos,int he,int lcm,int sp)  //\u6570\u4f4dDP\u4e3b\u8981\u5185\u5bb9\n//pos:\u5f53\u524d\u5904\u7406\u5230\u7b2c\u51e0\u4f4d\uff1b     \n//he\uff1apos\u4f4d\u4e4b\u524d\u7684\u6570%2520\uff1b\n//lcm\uff1apos\u4f4d\u4e4b\u524d\u7684\u6570\u7684\u6bcf\u4e00\u4f4d\u6570\u7684\u6700\u5c0f\u516c\u500d\u6570\uff1b\n//sp\uff1a\u7279\u5224\u5f53\u524d\u662f\u5426\u4e3a\u8303\u56f4\u5185\u7684\u6700\u5927\u503c\n{\n\tif(pos==-1) return he%lcm==0;    //\u5982\u679c\u5904\u7406\u5b8c\u4e86\u6700\u540e\u4e00\u4f4d\uff0c\u6570\u5982\u679c\u6ee1\u8db3\u6761\u4ef6\uff0c\u8fd4\u56de1\uff0c\u5426\u5219\u8fd4\u56de0\n\tif(sp==0&&dp[pos][he][book[lcm]]!=-1) return dp[pos][he][book[lcm]];      //\u5982\u679c\u4e0d\u662f\u6700\u5927\u503c\u7684\u60c5\u51b5\uff0c\u5e76\u4e14\u5f53\u524d\u60c5\u51b5\u4ee5\u5904\u7406\u8fc7\uff0c\u76f4\u63a5\u8fd4\u56de\u503c\n\tll ans=0;\n\tint MAX=sp==1?shu[pos]:9;  //\u5982\u679c\u524d\u51e0\u4f4d\u662f\u6700\u5927\u503c\u60c5\u51b5\uff0c\u90a3\u4e48\u5f53\u524d\u4f4d\u6700\u5927\u503c\u4e3a\u8fd9\u4e00\u4f4d\u7684\u6570\uff0c\u5426\u5219\u4e3a9\n\tfor(rint i=0;i<=MAX;i++)  //\u4ece0\u679a\u4e3e\n\t{\n\t\tint next_he=(he*10+i)%MOD;  //\u8ba1\u7b97\u5305\u542b\u5f53\u524d\u4f4d\u65f6\u6570\u7684\u503c\n\t\tint next_lcm=lcm;  \n\t\tif(i)\n\t\t{\n\t\t\tnext_lcm=_lcm(next_lcm,i);//\u8ba1\u7b97\u5305\u542b\u5f53\u524d\u4f4d\u65f6\u6240\u6709\u4f4d\u4e0a\u7684\u6570\u7684\u6700\u5c0f\u516c\u500d\u6570\uff08\u5f53\u524d\u4f4d\u6240\u9009\u6570\u4e0d\u4e3a0\uff0c\u5982\u679c\u4e3a\u96f6\u5c31\u662f\u539f\u6570\uff09\n\t\t}\n\t\tans+=dfs(pos-1,next_he,next_lcm,sp&&i==MAX); //\u5411\u4e0b\u641c\u7d22\uff0c\u5982\u679c\u524d\u51e0\u4f4d\u662f\u6700\u5927\u503c\u60c5\u51b5\uff0c\u5e76\u4e14\u5f53\u524d\u4f4d\u4e3a\u6700\u5927\u503c\u65f6\uff0csp=1\n\t}\n\tif(sp==0)   //\u5982\u679c\u4e0d\u662f\u6700\u5927\u503c\u60c5\u51b5\uff0c\u8bb0\u5f55\u8fd0\u7b97\u7ed3\u679c\n\t{\n\t\tdp[pos][he][book[lcm]]=ans;\n\t}\n\treturn ans;\n}\n\ninline ll work (ll num)   //\u5904\u7406\u6570\u636e\u52a0\u6c42\u503c\u51fd\u6570\n{\n\t\n\tshu.clear();     //\u4e00\u5b9a\u8981\u8bb0\u5f97\u6e05\u7a7a\n\twhile(num)       //\u5c06\u6570\u503c\u6309\u4e3a\u5b58\u5165\n\t{\n\t\tshu.push_back(num%10);\n\t\tnum/=10;\n\t}\n\treturn dfs(shu.size()-1,0,1,1); //\u4ece\u6700\u9ad8\u4f4d\u5f00\u59cb\u641c\u7d22\n}\n\nint main ()\n{\n\tinit();  //\u521d\u59cb\u5316\n\tcin>>t;\n\tfor(int i=1;i<=t;i++)\n\t{\n\t\tcin>>l>>r;\n\t\tcout<<work(r)-work(l-1)<<endl;\n\t}\n\tTokisaki Kurumi   //\u72c2\u4e09\u6211\u8001\u5a46\uff0c\u4e0d\u670d\u618b\u7740\n}\n```\n\n\u90a3\u4e48\u8fd9\u4fbf\u662f\u4ee3\u7801\u4e86\uff08\u597d\u50cf\u6df7\u5165\u4e86\u4ec0\u4e48\u5947\u602a\u7684\u4e1c\u897f\uff09\n\n## \u9898\u76ee\u89e3\u51b3\uff0c\u606d\u559c\u4f60\u901a\u8fc7\u4e00\u9053\u9ed1\u9898\uff01\uff01\uff01",
        "postTime": 1566145473,
        "uid": 235566,
        "name": "_agKc_",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF55D \u3010Beautiful numbers\u3011"
    },
    {
        "content": "## G - Beautiful numbers\n\n\u9898\u76ee\u7f51\u5740\uff1ahttps://vjudge.net/contest/243352#problem/G\n\n\u9898\u76ee\u6765\u6e90\uff1aCF 55D http://codeforces.com/problemset/problem/55/D\n\ntime limit per test $4$ seconds\n\nmemory limit per test $256$ megabytes\n\nVolodya is an odd boy and his taste is strange as well. It seems to him that a positive integer number is beautiful if and only if it is divisible by each of its nonzero digits. We will not argue with this and just count the quantity of beautiful numbers in given ranges.\n\n#### Input\n\nThe first line of the input contains the number of cases $t$ ($1\\le t\\le 10$). Each of the next t lines contains two natural numbers $l_i$ and $r_i$ ($1\\le l_i\\le r_i\\le 9\\times 10^{18}$).\n\nPlease, do not use $\\%lld$ specificator to read or write $64-bit$ integers in $C++$. It is preffered to use $cin$ (also you may use $\\%I64d$).\n\n#### Output\n\nOutput should contain $t$ numbers \u2014 answers to the queries, one number per line \u2014 quantities of beautiful numbers in given intervals (from $l_i$ to $r_i$, inclusively).\n#### Examples\n**Input**\n```\n1\n1 9\n```\n**Output**\n```\n9\n```\n**Input**\n```\n1\n12 15\n```\n**Output**\n```\n2\n```\n\n\u9898\u76ee\u5927\u610f\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u6b63\u6574\u6570$n$\uff0c\u53ef\u4ee5\u88ab\u5176\u6bcf\u4e00\u4e2a\u6570\u4f4d\u4e0a\u7684\u6570\u6574\u9664\uff0c\u5373\u82e5$n$\u53ef\u4ee5\u8868\u793a\u4e3a$\\sum_{i=0}^{m}a_i\\times 10^i (0\\le a_i\\le 9)$\uff0c\u6709$\\forall a_i,a_i|n$\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u88ab\u79f0\u4e3a$Beautiful~Number$\u3002\u73b0\u5728\uff0c\u9700\u8981\u4f60\u6c42\u51fa\u533a\u95f4\u91cc\u7684$Beautiful~Number$\u7684\u4e2a\u6570\u3002\n\n\u6570\u4f4d$DP$\u6a21\u677f\u9898\u3002\u770b\u5230\u6c42\u533a\u95f4\u5185\u6ee1\u8db3\u67d0\u79cd\u6761\u4ef6\u7684\u4e2a\u6570\u7684\u9898\u76ee\uff0c\u9996\u5148\u60f3\u5230\u7684\u5c31\u662f\u5dee\u5206\uff0c\u5c06\u6c42\u533a\u95f4$[l,r]$\u5185\u6ee1\u8db3\u6761\u4ef6\u7684\u6570\u7684\u4e2a\u6570\u8f6c\u5316\u4e3a\u6c42\u4e24\u4e2a\u533a\u95f4$[1,r],[1,l-1]$\u5185\u6ee1\u8db3\u6761\u4ef6\u7684\u6570\u7684\u4e2a\u6570\u7684\u5dee\u3002\n\n\u6211\u4eec\u53d1\u73b0\u5982\u679c\u4e00\u4e2a\u6570\u80fd\u6574\u9664\u5b83\u7684\u6240\u6709\u6570\u4f4d\u4e0a\u7684\u6570\uff0c\u90a3\u4e48\u5b83\u4e00\u5b9a\u80fd\u6574\u9664\u6240\u6709\u8fd9\u4e9b\u6570\u4f4d\u4e0a\u7684\u6570\u7684\u6700\u5c0f\u516c\u500d\u6570\uff08\u6027\u8d28$1$\uff09\uff0c\u800c$1$\u5230$9$\u7684\u6700\u5c0f\u516c\u500d\u6570\u662f$2520$\uff0c\u6240\u6709\u6570\u53ef\u80fd\u5f62\u6210\u7684\u6570\u4f4d\u4e0a\u6240\u6709\u6570\u7684\u6700\u5c0f\u516c\u500d\u6570\u4e00\u5b9a\u662f$2520$\u7684\u56e0\u6570\u3002\uff08\u6027\u8d28$2$\uff09\u4ee5\u5b83\u7684\u5e73\u65b9\u4e3a\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u63a5\u53d7\u3002\n\n\u6211\u4eec\u5b9a\u4e49$f[i][j][k]$\u8868\u793a\u5269\u4e0b$i$\u4f4d\u9700\u8981\u89c4\u5212\uff0c\u8fd9\u524d$i$\u4f4d\u6a21$2520$\u7684\u4f59\u6570\u662f$j$\uff0c\u5f53\u524d\u7684\u524d$i$\u4f4d\u6570\u7684\u6700\u5c0f\u516c\u500d\u6570\u662f$k$\uff0c\u6ee1\u8db3\u8fd9\u4e9b\u6761\u4ef6\u7684$Beautiful~Number$\u7684\u4e2a\u6570\u3002\n\n\u7531\u4e8e\u6027\u8d28$1$,\u5982\u679c\u6700\u540e\u7684\u6570\u80fd\u6574\u9664$k$\uff0c\u90a3\u4e48\u5b83\u4e00\u5b9a\u80fd\u6574\u9664\u5b83\u5404\u4f4d\u6570\u5b57\u7684\u6700\u5c0f\u516c\u500d\u6570\u3002\u7531\u4e8e\u6027\u8d28$2$,\u6240\u6709\u53ef\u80fd\u51fa\u73b0\u7684$k$\u90fd\u662f$2520$\u7684\u56e0\u6570\uff0c\u501f\u52a9\u8fd9\u4e00\u6027\u8d28\uff0c\u5c06$j$\u53d6\u6a21$2520$\uff0c\u82e5\u6240\u5f97\u7684\u7ed3\u679c\u6574\u9664$k$\uff0c\u90a3\u4e48\u539f\u6765\u7684\u6570\u4e5f\u4e00\u5b9a\u6574\u9664$k$\u3002\n\n\u7531f\u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\n\n$f[i][j][k]=\\sum f[i-1][(j\\times10+x)~mod~2520][lcm(k,x)]~~~[1\\le x\\le maxx]$\n\n\u5728\u8f6c\u79fb\u7684\u8fc7\u7a0b\u4e2d\uff0c\u9700\u8981\u6ce8\u610f\u524d\u7f00$0$\u7684\u5904\u7406\u3002\n\n\u7136\u800c\uff0c\u6211\u4eec\u53d1\u73b0$f$\u6570\u7ec4\u5360\u7528\u4e86$18\\times 2520\\times2520=114307200$\u7684\u5185\u5b58\uff0c\u5f88\u663e\u7136\u592a\u5927\u4e86\u3002\u4f46\u662f$1$\u5230$9$\u4e2d\u4efb\u53d6\u4e00\u4e9b\u6570\u4f5c$lcm$\uff0c\u6709\u5f88\u591a\u503c\u662f\u6839\u672c\u53d6\u4e0d\u5230\u7684\uff0c\u6d6a\u8d39\u4e86\u5f88\u591a\u7a7a\u95f4\u3002\u6211\u4eec\u9884\u5904\u7406\u4e00\u4e0b\uff0c\u6700\u591a\u53ea\u6709$48$\u79cd\u53ef\u80fd\uff0c\u8fdc\u8fdc\u5c0f\u4e8e$2520$\uff0c\u5efa\u7acb\u6620\u5c04\u7684\u5173\u7cfb\uff0c\u5c06\u5176\u4e2d\u7684\u4e00\u7ef4\u538b\u6210$50$\uff0c\u5927\u5927\u51cf\u5c0f\u4e86\u7a7a\u95f4\u5360\u7528\uff0c\u4f7f\u5f97\u7a7a\u95f4\u53d8\u5f97\u53ef\u4ee5\u63a5\u53d7\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<vector>\nusing namespace std;\ntypedef long long ll;\nconst int maxn=20;\nconst int mod=2520;\nint T,cur,a[mod+1];\nll l,r,f[20][mod+1][50];\nvector<int>dim;\nint gcd(int x,int y){return x%y?gcd(y,x%y):y;}\nint lcm_(int x,int y){if(!y)return x;return x/gcd(x,y)*y;}\nll dfs(int x,int mode,int lcm,bool op)\n{\n    if(!x)return mode%lcm==0?1:0;\n    if(!op&&f[x][mode][a[lcm]])return f[x][mode][a[lcm]];\n    int maxx=op?dim[x]:9;ll ret=0;\n    for(int i=0;i<=maxx;i++)ret+=dfs(x-1,(mode*10+i)%mod,lcm_(lcm,i),op&(i==maxx));\n    if(!op)f[x][mode][a[lcm]]=ret;\n    return ret;\n}\nll solve(ll x)\n{\n    dim.clear();\n    dim.push_back(-1);\n    ll t=x;\n    while(t)dim.push_back(t%10),t/=10;\n    return dfs(dim.size()-1,0,1,1);\n}\nmain()\n{\n    for(int i=1;i<=mod;i++)if(mod%i==0)a[i]=++cur;\n    scanf(\"%d\",&T);\n    while(T--)scanf(\"%lld%lld\",&l,&r),printf(\"%lld\\n\",solve(r)-solve(l-1));\n    return 0;\n}\n```",
        "postTime": 1533285931,
        "uid": 43486,
        "name": "hsfzLZH1",
        "ccfLevel": 7,
        "title": "HSFZ_NOI_DIGIT_DP G \u9898\u89e3"
    },
    {
        "content": "\u524d\u6392$orz$ @\u52a0\u85e4\u5723\u6559_\u5c01\u4ed9 \u592a\u5f3a\u5566\uff0c\u6bcf\u6b21\u6211$AC$\u4e86\u4ee5\u540e\u90fd\u80fd\u770b\u5230\u4f60\u7684\u9898\u89e3%%%\n\n\u8fd9\u9898\u505a\u6cd5\u6bd4\u8f83\u5957\u8def\uff0c\u4e2a\u4eba\u89c9\u5f97\u7701\u9009/NOI-\u5c31\u591f\u4e86\uff0cNOI/NOI+CTSC\u6709\u70b9\u865a\u9ad8\n\n\u6570\u4f4d$dp$\uff0c\u53d1\u73b0\u5b83\u53ea\u8ddf\u5f53\u524d\u6570\u6a21$lcm(1,2,...,9)=2520$\u548c\u6570\u4f4d\u4e0a\u51fa\u73b0\u4e86$1..9$\u8fd9\u4e9b\u6570\u5b57\u6709\u5173\uff0c\u90a3\u4e48\u8bb0\u5f55$dp[len][pre][lcm]$\u8868\u793a\u5f53\u524d\u7b2c$len$\u4f4d$pre\\ mod \\ 2520$\u548c\u6700\u540e\u6570\u4f4d\u5404\u4e2a\u6570\u5b57\u7684$lcm$\uff0c\u90a3\u4e48\u53ef\u4ee5\u8fdb\u884c\u8bb0\u5fc6\u5316\u641c\u7d22\n\n\u6838\u5fc3\u4ee3\u7801\uff1a\n```cpp\nlong long ret=0;int ed=limit?digit[len]:9;\nfor(int i=0;i<=ed;i++)\n\tret+=dfs(len-1,(pre*10+i)%2520,i==0?lcm:lcm*i/gcd(lcm,i),limit&&i==ed);\n```\n\n$Code\\ Below:$\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nint digit[20],mp[2521],cnt;\nll dp[20][2521][50];\n\nint gcd(int a,int b){\n    return b==0?a:gcd(b,a%b);\n}\n\nll dfs(int len,int pre,int mod,int limit){\n    if(!len) return pre%mod==0;\n    if(!limit&&dp[len][pre][mp[mod]]!=-1) return dp[len][pre][mp[mod]];\n    ll ret=0;int ed=limit?digit[len]:9;\n    for(int i=0;i<=ed;i++)\n        ret+=dfs(len-1,(pre*10+i)%2520,i==0?mod:mod*i/gcd(mod,i),limit&&i==ed);\n    if(!limit) dp[len][pre][mp[mod]]=ret;\n    return ret;\n}\n\nll calc(ll n){\n    int len=0;\n    while(n){\n        digit[++len]=n%10;\n        n/=10;\n    }\n    return dfs(len,0,1,1);\n}\n\nint main()\n{\n\tmemset(dp,-1,sizeof(dp));\n    for(int i=1;i<=2520;i++)\n        if(2520%i==0) mp[i]=++cnt;\n    int T;ll l,r;\n    cin>>T;\n    while(T--){\n        cin>>l>>r;\n        cout<<calc(r)-calc(l-1)<<endl;\n    }\n    return 0;\n}\n```\n\u8bdd\u8bf4\u6211\u628a$memset(dp,-1,sizeof(dp))$\u653e\u6700\u524d\u9762\u5c31$AC$\u4e86\uff0c\u800c\u4e14\u6d1b\u8c37\u5f53\u524d$rank\\ 3$...\u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff0c\u53cd\u6b63\u5c31\u662f\u8dd1\u7684\u98de\u5feb",
        "postTime": 1540559142,
        "uid": 35069,
        "name": "Owen_codeisking",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF55D \u3010Beautiful numbers\u3011"
    },
    {
        "content": "\u9996\u5148\u6709\u4e2a\u7ed3\u8bba\uff0c\u5bf9\u4e8e $n$ \u4e2a\u6570 $a_{1...n}$\uff0c\u8bbe\u5b83\u4eec\u7684 $LCM$ \u4e3a $L$\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e2a $i$ \u548c\u4e00\u4e2a\u81ea\u7136\u6570 $x$\uff0c$x\\ \\operatorname{mod}\\ a_i=x\\ \\operatorname{mod}\\ L\\ \\operatorname{mod}\\ a_i$\n\n\u8bc1\u660e\u663e\u7136\n\n\u4e5f\u5c31\u662f\u8bf4\u5bf9\u4e8e\u6bcf\u4e2a\u6570\uff0c\u6211\u4eec\u53ea\u5728\u610f\u5b83 $\\operatorname{mod\\ lcm}\\{1,2,3,...,9\\}$ \u7684\u503c\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u5b83\u662f\u5426\u6574\u9664 $1$ \u5230 $9$ \u4e2d\u7684\u67d0\u4e9b\u6570\uff08$Tips$\uff1a$\\operatorname{lcm}\\{1,2,3,...,9\\}=2520$\uff09\n\n\u8fd8\u6709\u4e00\u4e2a\u7ed3\u8bba\uff1a\u4e00\u4e2a\u6570 $x$ \u8981\u6ee1\u8db3\u88ab $y_1,y_2,y_3,...,y_n$ \u8fd9\u4e9b\u6570\u6574\u9664\uff0c\u5145\u5206\u5fc5\u8981\u6761\u4ef6\u4e3a $x$ \u88ab $\\operatorname{lcm}\\{y_1,y_2,y_3,...,y_n\\}$ \u6574\u9664\n\n\u8bc1\u660e\u4f9d\u7136\u5f88\u663e\u7136\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u6570\u4f4d $dp$ \u4e86\uff01\n\n\u8bbe $f_{i,j,k,0/1}$ \u8868\u793a\u5f53\u524d\u8f6c\u79fb\u5230\u4e86\u4e0a\u754c\u7684\u524d $i$ \u9ad8\u4f4d\uff0c\u6ee1\u8db3\u6a21 $2520$ \u540e\u4e3a $j$\uff0c\u5404\u4f4d\u6570\u4f4d\u7684 $\\operatorname{lcm}$ \u4e3a $k$\uff0c\u5e76\u4e14\u5f53\u524d\u586b\u7684\u6570\u662f$/$\u5426\u8fbe\u5230\u4e0a\u754c\u7684\u6570\u6709\u591a\u5c11\u4e2a\n\n\u7136\u540e\u7b80\u5355\u8f6c\u79fb\u5373\u53ef\n\n\u6700\u540e\u6ee1\u8db3 $j\\ \\operatorname{mod}\\ k=0$ \u7684\u6240\u6709 $f_{n,j,k,0/1}$ \u7684\u548c\u5373\u4e3a\u7b54\u6848\n\n------------\n\n\u7136\u540e\u4f60\u5c31\u53d1\u73b0 `TLE on test 11` \u4e86\n\n\u53ef\u4ee5\u53d1\u73b0 $f_{i,j,k,0/1}$ \u4e2d\u6709\u610f\u4e49\u7684 $k$ \u503c\u4e0d\u591a\uff08$k$ \u4e3a $1$ \u5230 $9$ \u4e2d\u67d0\u4e9b\u6570\u7684 $\\operatorname{lcm}$ \u65f6\u624d\u6709\u610f\u4e49\uff09\n\n\u90a3\u4e48\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u6240\u6709\u5408\u6cd5\u7684 $k$ \u503c\uff0c\u7136\u540e\u62ff\u8fd9\u4e9b\u503c\u53bb $dp$ \u5373\u53ef\n\n------------\n\n\u7136\u540e\u4f60\u5c31\u53d1\u73b0\u4f60\u53c8 `TLE on test 11` \u4e86\n\n\u8003\u8651 $dp$ \u65f6\u6240\u6709\u6570\u90fd\u5c0f\u4e8e $2520$ \u90a3\u4e48\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u6240\u6709\u6570\u5bf9\u7684 $\\operatorname{lcm}$ \u6216\u8005\u5728\u6c42 $\\operatorname{lcm}$ \u65f6\u8bb0\u5fc6\u5316\uff0c\u5373\u53ef\u5c06\u6c42 $\\operatorname{lcm}$ \u7684\u8fc7\u7a0b\u4f18\u5316\u5230 $\\mathcal{O(1)}$\n\n------------\n\n\u7136\u540e\u4f60\u5c31\u53d1\u73b0\u4f60\u8fd8\u662f `TLE on test 11` \u4e86\n\n\u8003\u8651\u7ee7\u7eed\u4f18\u5316\uff0c\u56e0\u4e3a\u5728 $f_{i,j,k,0/1}$ \u4e2d\u5982\u679c\u6700\u540e\u4e00\u7ef4\u4e3a $1$\uff0c\u90a3\u4e48\u5408\u6cd5\u7684\u60c5\u51b5\u53ea\u6709\u4e00\u79cd\uff0c\u800c\u6bcf\u6b21\u90fd\u8981\u8f6c\u79fb\u4f1a\u589e\u5927\u5e38\u6570\u3002\u7136\u540e\u6700\u540e\u4e00\u7ef4\u4e3a $0$ \u65f6\u5176\u5b9e\u4e5f\u662f\u6709\u4e00\u90e8\u5206\u662f\u6ca1\u6709\u60c5\u51b5\u4f1a\u6ee1\u8db3\u7684\n\n\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528\u5237\u8868\u6cd5\uff0c\u7136\u540e\u5f53\u5f53\u524d\u679a\u4e3e\u5230\u7684 $f$ \u6ca1\u6709\u503c\u65f6\u5c31\u4e0d\u8fdb\u884c\u8f6c\u79fb\uff0c\u53ef\u4ee5\u4f7f\u5e38\u6570\u9aa4\u51cf\n\n------------\n\n\u7136\u540e\u4f60\u5c31\u53d1\u73b0\u4f60 `Accepted` \u4e86\uff01\n\n$Code\\ Below$\n\n```cpp\n#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#define ll long long\nusing namespace std;\nconst int N=2525;\nconst int M=50;\nconst int p=2520;\n\nll read()\n{\n\tll s=0;\n\tchar c=getchar(),lc='+';\n\twhile (c<'0'||'9'<c) lc=c,c=getchar();\n\twhile ('0'<=c&&c<='9') s=s*10+c-'0',c=getchar();\n\treturn lc=='-'?-s:s;\n}\nvoid write(ll x)\n{\n\tif (x<0)\n\t{\n\t\tputchar('-');\n\t\tx=-x;\n\t}\n\tif (x<10) putchar(x+'0');\n\telse\n\t{\n\t\twrite(x/10);\n\t\tputchar(x%10+'0');\n\t}\n}\nvoid print(ll x=-1,char c='\\n')\n{\n\twrite(x);\n\tputchar(c);\n}\nint MOD[114514];\nint Mod(register int x)//\u4f18\u5316\u53d6\u6a21\uff0c\u4f46\u5176\u5b9e\u5e76\u6ca1\u4ec0\u4e48\u7528\uff0c\u5f53\u65f6\u5361\u5e38\u65f6\u5199\u7684\n{\n\tif (~MOD[x]) return MOD[x];\n\treturn MOD[x]=x%p;\n}\nll gcd(register ll x,register ll y)\n{\n\treturn !y?x:gcd(y,x%y);\n}\nint LCM[N][N];\ninline ll lcm(register ll x,register ll y)//\u8bb0\u5fc6\u5316\u6c42 lcm\uff0c\u6ce8\u610f\u7279\u5224\u4e0e 0 \u53d6 lcm \u7684\u60c5\u51b5\n{\n\tif (!x||!y) return x|y;\n\tif (LCM[x][y]) return LCM[x][y];\n\treturn LCM[x][y]=x/gcd(x,y)*y;\n}\nint nd[N],d[M],cnt=0,a[21];\nll dp[21][N][M][2];\nll calc(register ll n)\n{\n\tregister ll tmp=n;\n\tregister int m=0;\n\twhile (tmp)\n\t{\n\t\ta[++m]=tmp%10;\n\t\ttmp/=10;\n\t}\n\tmemset(dp,0,sizeof(dp));\n\tdp[m+1][0][1][1]=1;\n\tfor (register int i=m;i>=1;i--)\n\tfor (register int j=0;j<p;j++)\n\tfor (register int k=1;k<=cnt;k++)\n\t{\n\t\tif (dp[i+1][j][k][0]) for (register int t=0;t<=9;t++) dp[i][Mod(j*10+t)][nd[lcm(d[k],t)]][0]+=dp[i+1][j][k][0];\n\t\tif (dp[i+1][j][k][1])\n\t\t{\n\t\t\tfor (register int t=0;t<a[i];t++) dp[i][Mod(j*10+t)][nd[lcm(d[k],t)]][0]+=dp[i+1][j][k][1];\n\t\t\tdp[i][Mod(j*10+a[i])][nd[lcm(d[k],a[i])]][1]+=dp[i+1][j][k][1];\n\t\t}\n\t}\n\tll ret=0;\n\tfor (register int j=0;j<p;j++)\n\tfor (register int k=1;k<=cnt;k++)\n\tif (j%d[k]==0)\n\tret+=dp[1][j][k][0]+dp[1][j][k][1];\n\treturn ret;\n}\n\nsigned main(int Recall,char *_902_[])\n{\n\tmemset(MOD,-1,sizeof(MOD));\n\tfor (int i=1;i<=p;i++)\n\tif (p%i==0)\n\t{\n\t\td[++cnt]=i;\n\t\tnd[i]=cnt;\n\t}\n\tint T=read();\n\twhile (T--)\n\t{\n\t\tll l=read(),r=read();\n\t\tprint(calc(r)-calc(l-1));\n\t}\n\n\treturn 0;\n}\n```",
        "postTime": 1606824139,
        "uid": 61120,
        "name": "QwQcOrZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF55D \u3010Beautiful numbers\u3011"
    },
    {
        "content": "\u9898\u89e3\u5217\u8868\u4e2d\u53ea\u6709\u8bb0\u5fc6\u5316\u641c\u7d22\u7684\u5199\u6cd5\uff0c\u8fd9\u91cc\u8865\u5145\u4e00\u4e0b for \u5faa\u73af\u7684\u5199\u6cd5\uff1a\n\n\u8bbe\u72b6\u6001 $d[i][j][k][l]$ \u4e3a\u6ee1\u8db3\u9898\u4e49\u6761\u4ef6\u6570\u5b57\u7684\u4e2a\u6570\uff0c\u5176\u4e2d $i$ \u8868\u793a\u5f53\u524d\u679a\u4e3e\u6570\u4f4d\uff0c$j$ \u8868\u793a\u5f53\u524d\u72b6\u6001\u6a21 $\\text{lcm}(1\\sim 9) = 2520$ \u7684\u4f59\u6570 \uff0c $k$ \u8868\u793a\u5f53\u524d\u72b6\u6001\u4e0e\u4e0a\u754c\u7684\u5173\u7cfb ($1$ \u4ee3\u8868\u7b49\u4e8e\uff0c$0$ \u4ee3\u8868\u5c0f\u4e8e) \uff0c $l$ \u901a\u8fc7 $\\text {lcm}$ \u538b\u7f29\u72b6\u6001\u8868\u793a $1\\sim 9$ \u5728\u6570\u4f4d\u4e2d\u51fa\u73b0\u7684\u60c5\u51b5\u3002 \n\n\u6ce8\u610f $\\text {lcm}$ \u9700\u8981\u9884\u5148\u5904\u7406\uff0c $2520$ \u7684\u56e0\u5b50\u4e5f\u8fdb\u884c\u9884\u5904\u7406\u5e76\u79bb\u6563\u5316\uff0c$l$ \u7528 $\\text {lcm}$ \u7f16\u53f7\u8868\u793a\u3002\n\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a\n\n$$\np=d[i+1][(j\\times 10+x)\\bmod 2520][k\\ \\text{and}\\ x = top][id[\\mathrm {lcm}(id[x], l)]]\\\\\n\np\\gets p+d[i][j][k][l];\n$$\n\n\u5176\u4e2d $x$ \u4e3a\u5f53\u524d\u679a\u4e3e\u7684\u6570\u4f4d\uff0c$top$ \u662f\u5f53\u524d\u4f4d\u7684\u4e0a\u754c\uff0c$id$ \u662f $2520$ \u56e0\u5b50\u7684\u79bb\u6563\u5316\u6570\u7ec4\u3002\n\n```c++\n#include<bits/stdc++.h>\n#define ULL long long \nusing namespace std;\nconst int mod = 2520;\nint id[3000];\nULL d[30][3000][2][50], LCM[50][50];\nULL fac[50] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 18, 20, 21, 24, 28, 30, 35, 36, 40, 42, 45, 56, 60, 63, 70, 72, 84, 90, 105, 120, 126, 140, 168, 180, 210, 252, 280, 315, 360, 420, 504, 630, 840, 1260, 2520};\nULL gcd(ULL x, ULL y){\n\tif(!y) return x;\n\treturn gcd(y, x % y);\n}\nULL lcm(ULL x, ULL y){\n\treturn x / gcd(x, y) * y;\n}\nULL Getans(ULL num){\n\tif(!num) return 1ll;\n\tmemset(d, 0, sizeof(d));\n\tint a[30], b[30];\n\tint cnt = 0;\n\twhile(num){\n\t\tb[++cnt] = num % 10;\n\t\tnum /= 10;\n\t}\n\tfor(int i = 1; i <= cnt; i++) a[i] = b[cnt-i+1];\n\tULL ans = 0;\n\td[0][0][1][1] = 1;\n\tfor(int i = 0; i < cnt; i++)\n\t\tfor(int j = 0; j < mod; j++)\n\t\t\tfor(int k = 0; k <= 1; k++)\n\t\t\t\tfor(int l = 1; l <= 48; l++)\n\t\t\t\t\tif(d[i][j][k][l]){\n\t\t\t\t\t\tint top = k ? a[i+1] : 9;\n\t\t\t\t\t\tfor(int x = 0; x <= top; x++){\n\t\t\t\t\t\t\td[i+1][(j*10+x)%mod][k && x == top][x ? id[LCM[l][id[x]]] : l] += d[i][j][k][l];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\tfor(int j = 1; j <= 48; j++){\n\t\tfor(int i = 0; i < mod; i+=fac[j]){\n\t\t\tif(!(i % fac[j]))\n\t\t\t\tans += d[cnt][i][1][j] + d[cnt][i][0][j];\n\t\t}\n\t}\n\treturn ans;\n}\ninline ULL read(void){\n\tULL num = 0, f = 1;\n\tchar ch;\n\twhile(!isdigit(ch=getchar())) if(ch == '-') f = -1;\n\twhile(isdigit(ch)) num = num*10 + ch-'0', ch = getchar();\n\treturn num * f;\n}\nint main()\n{\n\tfor(int i = 1; i <= 48; i++) id[fac[i]] = i;\n\tfor(int i = 1; i <= 48; i++)\n\t\tfor(int j = 1; j <= 48; j++)\n\t\t\tLCM[j][i] = LCM[i][j] = lcm(fac[i], fac[j]);\n\tint T = read();\n\twhile(T--){\n\t\tULL l = read(), r = read();\n\t\tprintf(\"%lld\\n\", Getans(r) - Getans(l-1));\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1600335371,
        "uid": 73709,
        "name": "Michmh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF55D \u3010Beautiful numbers\u3011"
    },
    {
        "content": "## \u5206\u6790\n\u4e00\u53e5\u8bdd\u9898\u610f\uff1a\u6709T\u7ec4\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u533a\u95f4[l, r]\u4e2d\u7684beautiful number\u6709\u591a\u5c11\u3002beautiful number\u662f\u6307\u8fd9\u4e2a\u6570\u53ef\u4ee5\u88ab\u7ec4\u6210\u5b83\u7684\u6570\u5b57\u6574\u9664\u3002\u4f8b\u598215\u662fbeautiful number,\u56e0\u4e3a15\u53ef\u4ee5\u88ab1\u6574\u9664\uff0c\u4e5f\u53ef\u4ee5\u88ab5\u6574\u9664\u300225\u4e0d\u662fbeautiful number, 25\u4e0d\u80fd\u88ab2\u6574\u9664\u3002\n\n\u8fd9\u9053\u9898\u6570\u636e\u8303\u56f4\u8fbe\u5230\u4e869e18\uff0c\u5982\u679c\u66b4\u529b\u679a\u4e3e\u7684\u8bdd\u4e00\u5b9a\u4f1aT\u6389\n\n\u6240\u4ee5\u6211\u4eec\u8981\u501f\u52a9\u4e00\u4e2a\u795e\u5947\u7684\u4e1c\u897f-\u2014\u2014\u6570\u4f4dDP\n## 0x00 \u524d\u7f6e\u77e5\u8bc6\uff1a\u6570\u4f4dDP\n\u5f15\u7528\u81ea[StungYep](https://www.cnblogs.com/StungYep/p/12254173.html#2662535644)\u7684\u535a\u5ba2\n### \u5b9a\u4e49\n\u6570\u4f4ddp(Digit Entry DP)\u662f\u4e00\u79cd\u8ba1\u6570\u7528\u7684dp\uff0c\u4e00\u822c\u5c31\u662f\u8981\u7edf\u8ba1\u533a\u95f4[l,r]\u5185\u6ee1\u8db3\u4e00\u4e9b\u6761\u4ef6\u7684\u6570\u7684\u4e2a\u6570\u3002\u6240\u8c13\u6570\u4f4ddp\uff0c\u5b57\u9762\u610f\u601d\u5c31\u662f\u5728\u6570\u4f4d\u4e0a\u8fdb\u884cdp\u3002\u6570\u4f4d\u7684\u542b\u4e49\uff1a\u4e00\u4e2a\u6570\u6709\u4e2a\u4f4d\u3001\u5341\u4f4d\u3001\u767e\u4f4d\u3001\u5343\u4f4d......\u6570\u7684\u6bcf\u4e00\u4f4d\u5c31\u662f\u6570\u4f4d\u5566\uff01\n\n### \u6570\u4f4ddp\u7684\u601d\u60f3\n\u6570\u4f4ddp\u7684\u5b9e\u8d28\u5c31\u662f\u6362\u4e00\u79cd\u66b4\u529b\u679a\u4e3e\u7684\u65b9\u5f0f\uff0c\u4f7f\u5f97\u65b0\u7684\u679a\u4e3e\u65b9\u5f0f\u6ee1\u8db3dp\u7684\u6027\u8d28\uff0c\u7136\u540e\u8bb0\u5fc6\u5316\u5c31\u53ef\u4ee5\u4e86\u3002\n### \u6a21\u677f\n```cpp\ntypedef long long ll;\nint a[20];\nll dp[20][state];   //\u4e0d\u540c\u9898\u76ee\u72b6\u6001\u4e0d\u540c\nll dfs(int pos,int state,bool lead,bool limit)       //\u53d8\u91cf\uff0c\u72b6\u6001\uff0c\u524d\u5bfc0\uff0c\u6570\u4f4d\u4e0a\u754c\uff1b\u6ce8\u610f\u4e0d\u662f\u6bcf\u9898\u90fd\u8981\u5224\u65ad\u524d\u5bfc\u96f6\n{\n    if(pos==0) return 1;    //\u9012\u5f52\u8fb9\u754c\uff0c\u4e00\u822c\u4e00\u79cd\u9012\u5f52\u5230\u7ed3\u675f\u53ea\u80fd\u4ea7\u751f\u4e00\u79cd\u60c5\u51b5\n    if(!limit && !lead && dp[pos][state]!=-1) return dp[pos][state];    //\u8bb0\u5fc6\u5316\n    int up=limit?a[pos]:9;  //\u679a\u4e3e\u4e0a\u754c\n    ll ans=0;               //\u8ba1\u6570\n    for(int i=0;i<=up;i++)  //\u679a\u4e3e\uff0c\u7136\u540e\u628a\u4e0d\u540c\u60c5\u51b5\u7684\u4e2a\u6570\u52a0\u5230ans\u5c31\u53ef\u4ee5\u4e86\n    {\n        if() ...\n        else if()...        //\u4e00\u4e0b\u6761\u4ef6\n        ans+=dfs(pos-1,/*\u72b6\u6001\u8f6c\u79fb*/,lead && i==0,limit && i==a[pos]) //\u6700\u540e\u4e24\u4e2a\u53d8\u91cf\u4f20\u53c2\u90fd\u662f\u8fd9\u6837\u5199\u7684\n        //state\u72b6\u6001\u8f6c\u79fb\u8981\u4fdd\u8bc1i\u7684\u5408\u6cd5\u6027\uff0c\u6bd4\u5982\u4e0d\u80fd\u670962\uff0c\u90a3\u4e48\u5f53pre==6&&i==2\u5c31\u4e0d\u5408\u6cd5\uff0c\u8fd9\u91cc\u7528state\u8bb0\u5f55pre\u662f\u5426\u4e3a6\u5373\u53ef\u3002\n    }\n    if(!limit && !lead) dp[pos][state]=ans;\n    return ans;\n}\nll solve(ll x)\n{\n    int tot=0;\n    while(x)\n    {\n        a[++tot]=x%10;\n        x/=10;\n    }\n    return dfs(tot/*\u4ece\u6700\u9ad8\u4f4d\u5f00\u59cb\u679a\u4e3e*/,/*\u4e00\u7cfb\u5217\u72b6\u6001 */,true,true);//\u521a\u5f00\u59cb\u6700\u9ad8\u4f4d\u90fd\u662f\u6709\u9650\u5236\u5e76\u4e14\u6709\u524d\u5bfc\u96f6\u7684\uff0c\u663e\u7136\u6bd4\u6700\u9ad8\u4f4d\u8fd8\u8981\u9ad8\u7684\u4e00\u4f4d\u89c6\u4e3a0\u561b\n}\nint main()\n{\n    ll le,ri;\n    while(~scanf(\"%lld%lld\",&le,&ri))\n    {\n        //\u521d\u59cb\u5316dp\u6570\u7ec4\u4e3a-1,\u8fd9\u91cc\u8fd8\u6709\u66f4\u52a0\u4f18\u7f8e\u7684\u4f18\u5316,\u540e\u9762\u8bb2\n        printf(\"%lld\\n\",solve(ri)-solve(le-1));\n    }\n}\n```\n## 0x01 \u7279\u5f81\n\u5bf9\u4e8e\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u4ec0\u4e48\u60c5\u51b5\u4e0b\u5b83\u624d\u80fd\u88ab\u7ec4\u6210\u5b83\u7684\u975e\u96f6\u6570\u5b57\u6574\u9664\u5462\n\n\u8fd9\u4e2a\u5e94\u8be5\u6bd4\u8f83\u597d\u60f3\uff0c\u53ea\u6709\u5f53\u8fd9\u4e2a\u6b63\u6574\u6570\u80fd\u88ab\u5b83\u6240\u6709\u6570\u4f4d\u7684\u6700\u5c0f\u516c\u500d\u6570\u6574\u9664\u65f6\uff0c\u5b83\u624d\u80fd\u88ab\u6bcf\u4e00\u4e2a\u6570\u4f4d\u6574\u9664\n\n\u800c\u4e14\uff0c\u6211\u4eec\u8fd8\u77e5\u90531\uff0c2\uff0c3\uff0c4\uff0c5\uff0c6\uff0c7\uff0c8\uff0c9\u7684\u6700\u5c0f\u516c\u500d\u6570\u662f2520\uff08\u540e\u9762\u8981\u7528\u5230\uff09\n\n## 0x02 \u6570\u7ec4\u5b9a\u4e49\n\u6211\u4eec\u8981\u8fdb\u884cDP\u7684\u8bdd\uff0c\u80af\u5b9a\u8981\u5b9a\u4e49\u4e00\u4e2af \u6570\u7ec4\u5b58\u50a8\u6211\u4eec\u8ba1\u7b97\u8fc7\u7684\u503c\n\n\u56e0\u4e3a\u8fd9\u9053\u9898\u548c\u6570\u4f4d\u6709\u5173\uff0c\u6240\u4ee5\u7b2c\u4e00\u4f4d\u6211\u4eec\u8981\u5b9a\u4e49\u5f53\u524d\u904d\u5386\u5230\u4e86\u7b2c\u51e0\u4f4d\n\n\u800c\u4e14\u6211\u4eec\u8fd8\u8981\u5224\u65ad\u5f53\u524d\u7684\u6570\u662f\u5426\u80fd\u88ab\u5b83\u6240\u6709\u6570\u4f4d\u7684\u6700\u5c0f\u516c\u500d\u6570\u6574\u9664\n\n\u6240\u4ee5\u6211\u4eec\u8fd8\u8981\u5f00\u4e24\u7ef4\u8bb0\u5f55\u5f53\u524d\u7684\u6570\u548c\u5b83\u6240\u6709\u6570\u4f4d\u7684\u6700\u5c0f\u516c\u500d\u6570\n\n\u6240\u4ee5\uff0c\u6700\u540e\u7684f\u6570\u7ec4\u5c31\u662ff[\u5f53\u524d\u679a\u4e3e\u5230\u4e86\u7b2c\u51e0\u4f4d][\u5f53\u524d\u7684\u6570][\u5f53\u524d\u6570\u6240\u6709\u6570\u4f4d\u7684\u6700\u5c0f\u516c\u500d\u6570]\n\n\u9898\u76ee\u4e2d\u7ed9\u51fa\u7684\u6700\u5927\u7684\u6570\u5c31\u662f9e18\uff0c\u6240\u4ee5\u6700\u591a\u670919\u4f4d\uff0c\u90a3\u4e48\u7b2c\u4e00\u7ef4\u6211\u4eec\u5f0020\u5c31\u53ef\u4ee5\u4e86\n\n\u7b2c\u4e8c\u7ef4\u6211\u4eec\u663e\u7136\u4e0d\u80fd\u5f00\u52309e18\uff0c\u4f1a\u8d85\u5185\u5b58\n\n\u56e0\u4e3a\u6211\u4eec\u6700\u7ec8\u7edf\u8ba1\u7684\u662f\u8fd9\u4e2a\u6570\u80fd\u5426\u88ab\u5b83\u6240\u6709\u6570\u4f4d\u7684\u6700\u5c0f\u516c\u500d\u6570\u6574\u9664\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u5fc5\u8981\u8bb0\u5f55\u539f\u6570\u7684\u503c\n\n\u6211\u4eec\u53ea\u9700\u8981\u8bb0\u5f55\u539f\u6570\u5bf92520\u53d6\u6a21\u7684\u7ed3\u679c\u5c31\u53ef\u4ee5\uff0c\u56e0\u4e3a2520\u662f1\u52309\u7684\u6700\u5c0f\u516c\u500d\u6570\uff0c\u6240\u4ee5\u53d6\u6a21\u4e4b\u540e\u4e0d\u4f1a\u6709\u5f71\u54cd\uff0cx\u4e0ex%2520\u662f\u7b49\u6548\u7684\n\n\u8fd9\u65f6\u6211\u4eec\u7b97\u4e00\u4e0b\u5185\u5b5820*2520*2520\uff0c\u8fd8\u662f\u4f1aM\u6389\n\n\u6240\u4ee5\u6211\u4eec\u8003\u8651\u51cf\u7701\u4e00\u4e0b\u7b2c\u4e09\u7ef4\uff0c\u7531\u4e8e\u7b2c\u4e09\u7ef4\u8bb0\u5f55\u7684\u662f\u6240\u6709\u6570\u4f4d\u7684\u6700\u5c0f\u516c\u500d\u6570\uff0c\u6240\u4ee5\u6709\u5f88\u591a\u6570\u5e76\u4e0d\u4f1a\u51fa\u73b0\n\n\u6bd4\u598211\u300113\u300117\u300119\u2026\u2026\u5b83\u4eec\u5e76\u4e0d\u662f1\u52309\u4e2d\u4efb\u610f\u51e0\u4e2a\u6570\u7684\u6700\u5c0f\u516c\u500d\u6570\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u8bb0\u5f552520\u7684\u56e0\u6570\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u6837\u7684\u6570\u670948\u4e2a\uff0c\u6240\u4ee5\u6211\u4eec\u5f0050\u5c31\u53ef\u4ee5\u4e86\n\n\u964448\u4e2a\u6570\uff1a\n\n1 2 3 4 5 6 7 8 9 10 12 14 15 18 20 21 24 28 30 35 36 40 42 45 56 60 63 70 72 84 90 105 120 126 140 168 180 210 252 280 315 360 420 504 630 840 1260 2520 \n## 0x03:\u4e3b\u51fd\u6570\n\u5148\u4e0a\u4ee3\u7801\n```cpp\nint main(){\n    int t;\n    scanf(\"%d\",&t);\n    for(ll i=1,j=0;i<=2520;i++){\n        if(2520%i==0){\n            lcm[i]=j++;\n        }\n    }\n    memset(f,-1,sizeof(f));\n    while(t--){\n        ll aa,bb;\n        scanf(\"%lld%lld\",&aa,&bb);\n        ll ans=solve(bb)-solve(aa-1);\n        printf(\"%lld\\n\",ans);\n    }\n    return 0;\n}\n```\n\u524d\u4e09\u884c\u6ca1\u6709\u4ec0\u4e48\u597d\u8bf4\u7684\uff0c\u6211\u4eec\u6765\u770b\u4e00\u4e0b4\u52308\u884c\uff0c\u8fd9\u91cc\u5c31\u662f\u5efa\u7acb\u4e86\u4e00\u79cd\u6620\u5c04\u5173\u7cfb\uff0c\u628a\u524d\u9762\u768448\u4e2a\u6570\u5206\u522b\u770b\u62100\u523047\n\n\u8fd9\u5176\u5b9e\u548c\u79bb\u6563\u5316\u5dee\u4e0d\u591a\n\n\u7b2c\u4e5d\u884c\u662f\u521d\u59cb\u5316\uff0c\u6211\u4eec\u8fd9\u91cc\u628a\u5b83\u5199\u5728\u8be2\u95ee\u7684\u5916\u9762\u662f\u56e0\u4e3a\u4e4b\u540e\u7684\u8be2\u95ee\u53ef\u80fd\u4f1a\u7528\u5230\u524d\u9762\u7684\u503c\uff0c\u8fd9\u6837\u6bd4\u8f83\u5feb\u4e00\u4e9b\n\n\u7b2c13\u884c\u7684solve\u51fd\u6570\u6211\u4eec\u5728\u4e0b\u9762\u4f1a\u63d0\u5230\n\n\u8fd9\u91cc\u7684solve(bb)-solve(aa-1)\u5b9e\u9645\u4e0a\u662f\u7528\u5230\u4e86\u4e00\u79cd\u5dee\u5206\u7684\u601d\u60f3\n\n\n## 0x04:solve\u51fd\u6570\n```cpp\nll solve(ll x){\n    ll cnt=0;\n    memset(num,0,sizeof(num));\n    while(x!=0){\n        num[cnt++]=x%10;\n        x/=10;\n    }\n    return asd(cnt-1,0,1,1);\n}\n```\n\u8fd9\u91cc\u7684cnt\u662f\u7528\u6765\u8bb0\u5f55\u5f53\u524d\u7684\u6570\u6709\u591a\u5c11\u4f4d\uff0cnum\u6570\u7ec4\u662f\u7528\u6765\u8bb0\u5f55\u8fd9\u4e2a\u6570\u6bcf\u4e00\u4f4d\u4e0a\u7684\u6570\u5b57\u7684\n\n\u8fd9\u4e2a\u51fd\u6570\u7684\u53d8\u91cf\u53ea\u6709\u4e00\u4e2axx,\u8fd4\u56de\u503c\u662f0\u5230xx\u4e4b\u95f4beautiful number\u7684\u4e2a\u6570\n\n\u4e0b\u9762\u7684\u4e00\u4e2aasd\u51fd\u6570\u662f\u6700\u91cd\u8981\u7684\u90e8\u5206\n\nll asd(ll now,ll mod,ll gbs,ll jud){\n\u5b83\u7684\u56db\u4e2a\u53c2\u6570\u5206\u522b\u4e3a:\u5f53\u524d\u5904\u7406\u5230\u7b2cnow\u4f4d\uff1b now\u4f4d\u4e4b\u524d\u7684\u6570%2520\uff1b now\u4f4d\u4e4b\u524d\u7684\u6570\u7684\u6bcf\u4e00\u4f4d\u6570\u7684\u6700\u5c0f\u516c\u500d\u6570\uff1bjud\u7279\u5224\u524d\u4e00\u4f4d\u662f\u5426\u4e3a\u8303\u56f4\u5185\u7684\u6700\u5927\u503c\n\n\u524d\u4e09\u4e2a\u53c2\u6570\u6bd4\u8f83\u597d\u7406\u89e3\uff0c\u6211\u4eec\u7740\u91cd\u6765\u8bb2\u4e00\u4e0b\u7b2c\u56db\u4e2a\u53c2\u6570jud\n\n\u6211\u4eec\u6765\u4e3e\u4e00\u4e2a\u4f8b\u5b50\n\n\u6bd4\u5982\u8bf4\u6211\u4eec\u8981\u6c42\u7684\u6570\u4e3a5456\n\n\u6211\u4eec\u628a\u5b83\u7684\u5343\u4f4d\u8bbe\u4e3a\u7b2c3\u4f4d\uff0c\u767e\u4f4d\u8bbe\u4e3a\u7b2c2\u4f4d\uff0c\u5341\u4f4d\u8bbe\u4e3a\u7b2c1\u4f4d\uff0c\u4e2a\u4f4d\u8bbe\u4e3a\u7b2c0\u4f4d\n\n \u5f53\u5b83\u7684\u7b2c\u4e09\u4f4d\u4e3a0\u30011\u30012\u30013\u30014\u65f6\uff0c\u5b83\u7684\u7b2c\u4e8c\u4f4d\u53ef\u4ee5\u4ece0\u679a\u4e3e\u52309\n\n\u4f46\u662f\u5f53\u5b83\u7684\u7b2c\u4e09\u4f4d\u679a\u4e3e\u52305\u65f6\uff0c\u7b2c\u4e8c\u4f4d\u7684\u6570\u5c31\u53ea\u80fd\u679a\u4e3e\u52304\n\n\u6240\u4ee5\u6211\u4eec\u7528\u4e00\u4e2a\u53d8\u91cfjud\u8bb0\u5f55\u524d\u4e00\u4f4d\u80fd\u4e0d\u80fd\u8fbe\u5230\u6700\u5927\u503c\uff0c\u5982\u679c\u4e0a\u4e00\u4f4d\u8fbe\u5230\u4e86\u6700\u5927\u503c\uff0c\u90a3\u4e48\u8fd9\u4e00\u4f4d\u5c31\u53ea\u80fd\u679a\u4e3e\u5230\u5f53\u524d\u4f4d\u4e0a\u7684\u6570\n\n\u5982\u679c\u4e0a\u4e00\u4f4d\u6ca1\u6709\u8fbe\u5230\u6700\u5927\u503c\uff0c\u90a3\u4e48\u8fd9\u4e00\u4f4d\u5c31\u53ef\u4ee5\u4ece0\u52309\u968f\u4fbf\u679a\u4e3e\n\n## 0x05:asd\u51fd\u6570\n```cpp\nll asd(ll now,ll mod,ll gbs,ll jud){\n    if(now<0){\n        if(mod%gbs==0) return 1;\n        else return 0;\n    }\n    if(jud==0 && f[now][mod][lcm[gbs]]!=-1){\n        return f[now][mod][lcm[gbs]];\n    }\n    ll mmax=9,mans=0;\n    if(jud==1) mmax=num[now];\n    for(ll i=0;i<=mmax;i++){\n         mans+=asd(now-1,(mod*10+i)%2520,i!=0?i*gbs/gcd(i,gbs):gbs,jud&&i==mmax);\n    }\n    if(jud==0) f[now][mod][lcm[gbs]]=mans;\n    return mans;\n}\n```\n\u7b2c\u4e00\u884c\u7684\u53c2\u6570\u6211\u4eec\u5df2\u7ecf\u5728\u4e0a\u9762\u8bb2\u8fc7\u4e86\n\n\u90a3\u4e48\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u6700\u5f00\u59cb\u4f20\u7684\u53c2\u6570 cnt-1,0,1,1\n\ncnt\u662f\u6211\u4eec\u8981\u6c42\u7684\u90a3\u4e2a\u6570\u7684\u4f4d\u6570\uff0c\u56e0\u4e3a\u6211\u662f\u4ece0\u5f00\u59cb\u7f16\u53f7\uff0c\u6240\u4ee5\u8981\u4f20cnt-1\uff0c\u5c31\u662f\u8be5\u6570\u7684\u6700\u9ad8\u4f4d\n\n\u56e0\u4e3a\u6700\u9ad8\u4f4d\u524d\u6ca1\u6709\u6570\uff0c\u6240\u4ee5\u7b2c\u4e8c\u4e2a\u53c2\u6570\u6211\u4eec\u4f200\n\n\u7b2c\u4e09\u4e2a\u6570\u662f\u524d\u9762\u6240\u6709\u4f4d\u6570\u7684\u6700\u5c0f\u516c\u500d\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4e0d\u53ef\u4ee5\u4f200\u5462\n\n\u5e94\u8be5\u662f\u4e0d\u53ef\u4ee5\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u5982\u679c\u4f200\u7684\u8bdd\uff0c\u6709\u53ef\u80fd\u4f1a\u51fa\u73b0RE\uff08\u56e0\u4e3a\u4e00\u4e2a\u6570\u4e0d\u80fd\u5bf90\u53d6\u6a21\uff09\u7684\u60c5\u51b5\n\n\u6240\u4ee5\u6211\u4eec\u6700\u597d\u8fd8\u662f\u4f20\u4e00\u4e2a1\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\u56e0\u4e3a1\u4e0e\u5176\u4ed6\u4f4d\u53bb\u6c42\u6700\u5c0f\u516c\u500d\u6570\u7684\u8bdd\uff0c\u4e0d\u4f1a\u5f71\u54cd\u6700\u7ec8\u7684\u7ed3\u679c\n\n\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u662f\u5224\u65ad\u524d\u4e00\u4f4d\u662f\u5426\u4e3a\u8303\u56f4\u5185\u7684\u6700\u5927\u503c\uff0c\u663e\u7136\u662f\uff0c\u6240\u4ee5\u6211\u4eec\u4f201\n\n2\u52305\u884c\u662f\u4e00\u4e2a\u7ec8\u6b62\u6761\u4ef6\n```cpp\nif(now<0){\n        if(mod%gbs==0) return 1;\n        else return 0;\n    }\n```\n\u5982\u679c\u5f53\u524d\u7684\u4f4d\u6570\u5c0f\u4e8e0\uff0c\u8bf4\u660e\u8fd9\u4e2a\u6570\u6211\u5df2\u7ecf\u5904\u7406\u5b8c\u4e86\uff0c\u90a3\u6211\u4eec\u53ea\u8981\u5224\u65admod\uff08\u8be5\u6570%2520\uff09\u80fd\u5426\u88abgbs\uff08\u6700\u5c0f\u516c\u500d\u6570\uff09\u6574\u9664\u5c31\u53ef\u4ee5\u4e86\n\n\u5982\u679c\u80fd\u591f\u6574\u9664\u8fd4\u56de1\uff0c\u5426\u5219\u8fd4\u56de0\n\n6\u52308\u884c\u662f\u4e00\u4e2a\u7279\u6b8a\u5224\u65ad\uff0c\u53ef\u4ee5\u63d0\u5347\u6211\u4eec\u7684\u6548\u7387\n```cpp\nif(jud==0 && f[now][mod][lcm[gbs]]!=-1){\n        return f[now][mod][lcm[gbs]];\n    }\n```\n\u5982\u679c\u5f53\u524d\u7684f\u503c\u5df2\u7ecf\u6c42\u51fa\u6765\u8fc7\uff0c\u5e76\u4e14\u6ca1\u6709\u6570\u4f4d\u9650\u5236\uff0c\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u7528\n\n\u5982\u679c\u6709\u6570\u4f4d\u9650\u5236\uff0c\u90a3\u6211\u4eec\u5c31\u4e0d\u80fd\u76f4\u63a5\u7528\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u77e5\u9053\u8fd9\u4e24\u6b21\u7684\u6570\u4f4d\u9650\u5236\u662f\u5426\u76f8\u7b49\n```cpp\nll mmax=9,mans=0;\n    if(jud==1) mmax=num[now];\n```\n\u7b2c9\u300110\u884c\u5219\u662f\u5224\u65ad\u8be5\u6570\u4f4d\u53ef\u4ee5\u679a\u4e3e\u5230\u51e0\n\n\u5982\u679c\u4e0a\u4e00\u4e2a\u6570\u4f4d\u6ca1\u6709\u8fbe\u5230\u6700\u5927\u503c\uff0c\u90a3\u6211\u4eec\u5c31\u628a\u53ef\u4ee5\u679a\u4e3e\u5230\u7684\u6700\u5927\u6570\u7f6e\u4e3a9\n\n\u5426\u5219\uff0c\u53ef\u4ee5\u679a\u4e3e\u5230\u7684\u6700\u5927\u6570\u5c31\u7531\u5f53\u524d\u8fd9\u4e00\u4f4d\u51b3\u5b9a\n```cpp\nfor(ll i=0;i<=mmax;i++){\n         mans+=asd(now-1,(mod*10+i)%2520,i!=0?i*gbs/gcd(i,gbs):gbs,jud&&i==mmax);\n    }\n    if(jud==0) f[now][mod][lcm[gbs]]=mans;\n    return mans;\n```\n\u6700\u540e\u51e0\u884c\u5219\u662f\u666e\u901a\u60c5\u51b5\uff0c\u5373\u6ca1\u6709\u8fbe\u5230\u8fb9\u754c\n\n\u8fd9\u662f\u6211\u4eec\u5c31\u8981\u4e00\u4f4d\u4e00\u4f4d\u5730\u53bb\u679a\u4e3e\u4e0b\u4e00\u4f4d\u7684\u72b6\u6001\n\n\u9996\u5148\u6211\u4eec\u6765\u770b\u8fd9\u53e5\u8bdd\n```cpp\nmans+=asd(now-1,(mod*10+i)%2520,i!=0?i*gbs/gcd(i,gbs):gbs,jud&&i==mmax);\n```\n\u8fd9\u53e5\u8bdd\u5176\u5b9e\u5c31\u662f\u5411\u4e0b\u4f20\u53c2\u6570\uff0c\u9012\u5f52\u89e3\u51b3\u95ee\u9898\n\n\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f4d\u6570\u80af\u5b9a\u8981\u51cf\u53bb1\u53d8\u6210now-1\n\n\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5219\u662f\u4e4b\u524d\u7684\u6570\u4f4d\u8868\u793a\u7684\u6570\u4e5810\u518d\u52a0\u4e0a\u5f53\u524d\u8fd9\u4e00\u4f4d\u7684\u6570\uff0c\u518d\u5bf92520\u53d6\u6a21\n\n\u4e3a\u4ec0\u4e48\u8981\u4e5810\u5462\uff0c\u8fd9\u5c31\u8981\u8054\u7cfb\u6570\u5b57\u7684\u5b9e\u9645\u610f\u4e49\n\n\u6bd4\u598225\uff0c\u5b83\u7684\u503c\u662f2*10+5\n\n2345\uff0c\u5b83\u7684\u503c\u662f2*1000+3*100+4*10+5\n\n\u6211\u4eec\u5c31\u62ff2345\u6765\u4e3e\u4f8b\u5b50\uff0c\u5b83\u4e00\u5171\u67094\u4f4d\uff0c\u8981\u904d\u53865\u6b21\n\n\u7b2c\u4e00\u6b21\u5b83\u6ca1\u6709\u4e5810\uff0c\u6700\u540e\u4e00\u6b21\u904d\u5386\u65f6\u4f1a\u5728\u7b2c\u4e8c\u53e5\u8bdd\u90a3\u91cc\u89e6\u53d1\u7ec8\u6b62\u6761\u4ef6\uff0c\u4e5f\u5c31\u662f\u8bf4\n\n2\u4f1a\u4e583\u6b2110\uff0c3\u4f1a\u4e582\u6b2110\uff0c4\u4f1a\u4e581\u6b2110\uff0c5\u4e00\u6b21\u4e5f\u4e0d\u4f1a\u4e58\n\n\u628a\u8fd9\u4e2a\u8fc7\u7a0b\u52a0\u8d77\u6765\u6b63\u597d\u662f\u539f\u6570\uff0c\u5728\u4e2d\u95f4\u53d6\u4e00\u4e0b\u6a21\u5e76\u4e0d\u4f1a\u5f71\u54cd\u7ed3\u679c\n\n\u7b2c\u4e09\u4e2a\u53c2\u6570\u6bd4\u8f83\u957f\uff0c\u6211\u4eec\u628a\u5b83\u5c55\u5f00\u5c31\u662f\n```cpp\nif(\u5f53\u524d\u4f4d\u4e0a\u7684\u6570\u5b57\u4e3a0){\n    \u6700\u5c0f\u516c\u500d\u6570\u4e0d\u53d8\n} else {\n    \u548c\u4e4b\u524d\u6570\u4f4d\u4e0a\u7684\u6570\u5b57\u53d6\u6700\u5c0f\u516c\u500d\u6570\n}\n```\na\u548cb\u7684\u6700\u5c0f\u516c\u500d\u6570\u5c31\u662fa*b/a\u548cb\u7684\u6700\u5927\u516c\u56e0\u6570\n\n\u4e0b\u9762\u662f\u6c42\u6700\u5927\u516c\u56e0\u6570\u7684\u51fd\u6570\n```cpp\nll gcd(ll a,ll b){\n    if(b==0) return a;\n    return gcd(b,a%b);\n}\n```\n\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u662f\u5224\u65ad\u6700\u9ad8\u4f4d\n\n==\u7684\u4f18\u5148\u7ea7\u8981\u9ad8\u4e8e\u4f4d\u8fd0\u7b97\uff0c\u6240\u4ee5\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u5224\u65ad\u5f53\u524d\u6570\u5b57\u662f\u5426\u4e3a\u8be5\u4f4d\u4e0a\u7684\u6700\u5927\u6570\u5b57\u7684\u64cd\u4f5c\n\n\u5982\u679c\u4e0a\u4e00\u4f4d\u6709\u9650\u5236\u5e76\u4e14\u5f53\u524d\u679a\u4e3e\u5230\u7684\u662f\u8be5\u6570\u4f4d\u4e0a\u5408\u6cd5\u7684\u6700\u5927\u7684\u6570\u5b57\uff0c\u6211\u4eec\u5c31\u4f201\uff0c\u5426\u5219\u4f200\n\n\u6bd4\u59822345\n\n\u5f53\u6211\u4eec\u7684\u5343\u4f4d\u4e0a\u679a\u4e3e\u52301\uff0c\u767e\u4f4d\u4e0a\u679a\u4e3e\u52309\u65f6\uff0c\u867d\u71369\u662f\u6700\u5927\u7684\u6570\u5b57\u3002\u4f46\u662f\u7b2c\u4e00\u4e2a\u6761\u4ef6jud==1\u5e76\u4e0d\u6ee1\u8db3\uff0c\u6240\u4ee5\u8fd9\u65f6\u6211\u4eec\u8981\u4f200\n\n\u5f53\u6211\u4eec\u7684\u5343\u4f4d\u4e0a\u679a\u4e3e\u52302\uff0c\u767e\u4f4d\u4e0a\u679a\u4e3e\u52303\u65f6\uff0c\u8fd9\u65f6\u4e24\u4e2a\u6761\u4ef6\u90fd\u6ee1\u8db3\uff0c\u6240\u4ee5\u8fd9\u65f6\u6211\u4eec\u8981\u4f201\n\n\u6700\u540e\u4e0d\u8981\u5fd8\u4e86\u66f4\u65b0f\u7684\u503c\n\n## 0x06:\u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;\nll lcm[3000],f[20][3000][55],num[55];\nll gcd(ll a,ll b){\n    if(b==0) return a;\n    return gcd(b,a%b);\n}\nll asd(ll now,ll mod,ll gbs,ll jud){\n    if(now<0){\n        if(mod%gbs==0) return 1;\n        else return 0;\n    }\n    if(jud==0 && f[now][mod][lcm[gbs]]!=-1){\n        return f[now][mod][lcm[gbs]];\n    }\n    ll mmax=9,mans=0;\n    if(jud==1) mmax=num[now];\n    for(ll i=0;i<=mmax;i++){\n         mans+=asd(now-1,(mod*10+i)%2520,i!=0?i*gbs/gcd(i,gbs):gbs,jud&&i==mmax);\n    }\n    if(jud==0) f[now][mod][lcm[gbs]]=mans;\n    return mans;\n}\nll solve(ll x){\n    ll cnt=0;\n    memset(num,0,sizeof(num));\n    while(x!=0){\n        num[cnt++]=x%10;\n        x/=10;\n    }\n    return asd(cnt-1,0,1,1);\n}\nint main(){\n    int t;\n    scanf(\"%d\",&t);\n    for(ll i=1,j=0;i<=2520;i++){\n        if(2520%i==0){\n            lcm[i]=j++;\n        }\n    }\n    memset(f,-1,sizeof(f));\n    while(t--){\n        ll aa,bb;\n        scanf(\"%lld%lld\",&aa,&bb);\n        ll ans=solve(bb)-solve(aa-1);\n        printf(\"%lld\\n\",ans);\n    }\n    return 0;\n}\n```\n",
        "postTime": 1587095818,
        "uid": 316322,
        "name": "hzoi_liuchang",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF55D \u3010Beautiful numbers\u3011"
    },
    {
        "content": "\u9996\u5148\u770b\u5230\u6570\u636e\u8303\u56f4\uff0c$9e18$\uff0c\u518d\u770b\u9898\u9762\uff0c\u5f88\u660e\u663e\u7684\u6570\u4f4dDP\u3002\n\n## \u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\uff1a\n$0$ \u53ef\u4ee5\u6574\u9664\u6240\u6709\u6570\u3002\u3002\u3002\n\u7b54\u6848\u53ef\u80fd\u4f1a\u5927\u4e8e $18$ \u4f4d\uff0c\u6240\u4ee5 $int$ \u5b58\u4e0d\u4e0b\uff01\uff01\uff01\n\n## \u5206\u6790\n\n\u7136\u540e\u6211\u4eec\u5148\u786e\u5b9a $dp$ \u6570\u7ec4\u7684\u4e0b\u6807\uff0c\u663e\u7136\u662f\u4e00\u4e2a\u4e09\u7ef4\u7684\u6570\u7ec4 \u2014\u2014 $dp[pos][rar][sta]$\u3002\n\n> \u6211\u4eec\u7528 $pos$ \u8868\u793a\u5f53\u524d\u4f4d\u6570\uff0c$rar$ \u538b\u7f29\u4e00\u4e2a\u72b6\u6001\uff0c\u5f53\u5148\u6570\u4f4d\u4e0a\u6709\u54ea\u4e9b\u6570\u5b57\uff0c\u7528 $sta$ \u6765\u8868\u793a\u539f\u6570\u3002\n\n\u4f46\u5f88\u663e\u7136\uff0c\u76f4\u63a5\u5b58 $sta$ \u662f\u5b58\u4e0d\u4e0b\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u60f3\u5230\u4e86 $mod$\uff0c\u90a3\u4e48\u6211\u4eec\u5c06**\u6a21\u6570**\u8bbe\u4e3a\u4ec0\u4e48\u597d\u5462\uff1f\u2014\u2014 $1~9$ \u7684 $lcm$ \u4e5f\u5c31\u662f $2520$\u3002\n\n\u4e8e\u662f\u6211\u5b9a\u4e49\u4e86 $dp[20][1024][2521]$\uff0c\u7ecf\u8fc7\u8ba1\u7b97\u540e\u53d1\u73b0\uff0c\u53ea\u8981\u5f00 $int$ \u5c31\u4e0d\u4f1a\u70b8\u7a7a\u95f4\uff0c\u4e8e\u662f\u6211\u5c31\u5f88\u9ad8\u5174\u7684\u5f00\u4e86 $int$ \u3002\u3002\u3002\n\n> \u201c\u4e8e\u662f\u5b83\u98de\u5feb\u5730 WA \u6389\u4e86\u201d\u2014\u2014 \u67d0dalao\n\n\u540e\u6765\u53d1\u73b0\u4e86\u7b54\u6848\u53ef\u80fd\u5f88\u5927\u3002\u3002\u3002\u770b\u5230\u9898\u89e3\u533a\u90fd\u662f\u5c06 $2520$ \u8fdb\u884c\u79bb\u6563\u5316\uff0c\u4f46\u6211 ~~\u5b9e\u5728\u592a\u5f31\u4e86\u3002\u3002\u3002\u6ca1\u60f3\u5230~~ \u53d1\u73b0\u5bf9\u4e8e $0$ \u548c $1$ \u90fd\u662f\u53ef\u4ee5\u4e0d\u8ba1\u5165\u72b6\u6001\u4e2d\u7684\uff0c\u56e0\u4e3a\u4efb\u610f\u4e00\u4e2a\u6570\uff08\u975e $0$ \uff09\u90fd\u53ef\u4ee5\u88ab\u5b83\u4eec\u6574\u9664\u3002\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u7b2c\u4e8c\u4f4d\u7684\u4e0a\u9650\u6539\u4e3a $512$\uff0c\u5927\u5c0f\u53d8\u6210\u4e86\u539f\u6765\u7684 $\\frac{1}{2}$ \u6211\u4eec\u5c31\u53ef\u4ee5\u5f00 $long long$ \u5566\u3002 ~~```#define int long long```~~\n\n\u7136\u540e\u6211\u4eec\u786e\u5b9a $dfs$ \u4e2d\u7684\u5f62\u53c2\uff0c\u5f88\u663e\u7136\u5c31\u662f $pos\uff0crar\uff0csta\uff0climit$\uff0c$limit$ \u8868\u793a\u662f\u5426\u5230\u8fbe\u4e0a\u9650\u3002\u81f3\u4e8e\u524d\u5bfc\u96f6\u7684\u5224\u65ad\uff0c\u672c\u9898\u5e76\u4e0d\u9700\u8981\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u6709\u4e24\u79cd\u8f6c\u79fb\uff0c\u5f53 $i \\leq 1$ \u65f6\uff1a\uff08 $up$ \u8868\u793a\u4e0a\u9650\uff09\n```cpp\ntem += dfs(pos - 1, rar, (sta * 10 + i) % MOD, (i == up) && limit);\n```\n\u800c\u5f53 $2 \\leq i$ \u65f6\uff1a\uff08 ~~\u4e0d\u4f1a\u6253 $ ~~latex~~ $ \u7684\u5927\u4e8e\u7b49\u4e8e QAQ~~\n```cpp\ntem += dfs(pos - 1, rar | (1 << (i - 2)), (sta * 10 + i) % MOD, (i == up) && limit);\n```\n\n## \u4e0b\u9762\u653e\u4e0a\u4ee3\u7801\uff08\u5b9e\u6d4b $AC$\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define inc(i) (++ (i))\n#define dec(i) (-- (i))\n#define Rep(i, a, b) for(register int i = (a) , i##Limit = (b) ; i <= i##Limit ; inc(i))\n#define Dep(i, a, b) for(register int i = (a) , i##Limit = (b) ; i >= i##Limit ; dec(i))\n\nusing namespace std;\n\nconst int MOD = 2520;\nint a, b, T;\nint res[21], dp[20][512][2521];\n\nint dfs(int pos, int rar, int sta, bool limit) {\n\tif(!pos) {\n\t\tint num = 1;\n\t\twhile(rar) {\n\t\t\tinc(num);\n\t\t\tif(rar & 1 && sta % num != 0) return 0;\n\t\t\trar >>= 1;\n\t\t}\n\t\treturn 1;\n\t}\n\tif(dp[pos][rar][sta] != -1 && !limit) return dp[pos][rar][sta];\n\tint up, tem = 0;\n\tif(limit) up = res[pos];\n\telse up = 9;\n\tRep(i,0,up) {\n\t\tif(i <= 1) tem += dfs(pos - 1, rar, (sta * 10 + i) % MOD, (i == up) && limit);\n\t\telse tem += dfs(pos - 1, rar | (1 << (i - 2)), (sta * 10 + i) % MOD, (i == up) && limit);\n\t}\n\tif(!limit) dp[pos][rar][sta] = tem;\n\treturn tem;\n}\n\nint solve(int x) {\n\tint pos = 0;\n\twhile(x) {\n\t\tres[inc(pos)] = x % 10;\n\t\tx /= 10; \n\t}\n\treturn dfs(pos, 0, 0, 1);\n}\n\nsigned main()\n{\n\tcin>>T;\n\tmemset(dp, -1, sizeof(dp));\n\twhile(T --) {\n\t\tcin>>a>>b;\n\t\tprintf(\"%lld\\n\", solve(b) - solve(a - 1));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1603368190,
        "uid": 54713,
        "name": "\u827e\u5f8b\u7a1a\u6717\u5815",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF55D \u3010Beautiful numbers\u3011"
    },
    {
        "content": "[\u9898\u9762](https://www.luogu.org/problemnew/show/CF55D)\n\n\u6570\u4f4dDP+\u72b6\u538b\u3002\n\n\u9996\u5148\uff0c\u6309\u7167\u6570\u4f4d$DP$\u7684\u57fa\u672c\u5957\u8def\uff0c\u6bcf\u4e2a\u4e2a\u4f4d\u6570\u7684\u6700\u5c0f\u516c\u500d\u6570\u4e3a2520\uff0c\u6240\u4ee5\u53ea\u7528\u8003\u8651\u6a212520\u7684\u60c5\u51b5\u3002\u8003\u8651\u4e00\u4e2a$DP$\u3002$dp[i][j][k]$\u8868\u793a\u5f53\u524d\u662f\u7b2c$i$\u4f4d\uff0c2~9\u7684\u6570\u7684\u96c6\u5408\u4e3a$j$\uff0c\u6a212520\u4e3a$k$\u7684\u65b9\u6848\u6570\u3002\u7136\u540e\uff0c\u5c31\u662f\u6570\u4f4d$DP$\u7684\u57fa\u672c\u5957\u8def\u89e3\u51b3\u8fd9\u9053\u9898\u3002\n\ncode:\n```\n//2018.10.22 by ljz\n#include<bits/stdc++.h>\nusing namespace std;\n#define res register LL\n#define LL long long\n#define inf 0x3f3f3f3f\n#define eps 1e-15\ninline LL read(){\n    res s=0;\n    bool w=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')w=1;ch=getchar();}\n    while(ch>='0'&&ch<='9')s=s*10+ch-'0',ch=getchar();\n    return w?-s:s;\n}\ninline void _swap(res &x,res &y){\n    x^=y^=x^=y;\n}\ninline LL _abs(const res &x){\n    return x>0?x:-x;\n}\ninline LL _max(const res &x,const res &y){\n    return x>y?x:y;\n}\ninline LL _min(const res &x,const res &y){\n    return x<y?x:y;\n}\nconst int kcz=2520;\nconst int N=19+10;\nnamespace MAIN{\n\tLL Q;\n\tinline LL get(const res &i,const res &S){\n\t\treturn i<2?S:S|(1<<(i-2));\n\t}\n\tLL dp[N][256+10][kcz+10],a[N];\n\tLL DP(const res &dep,const res &S,const res &sum,const bool &flag){\n\t\tif(dep==0){\n\t\t\tfor(res i=2;i<=9;i++)if(S&(1<<(i-2))&&sum%i)return 0;\n\t\t\treturn 1;\n\t\t}\n\t\tif(!flag&&dp[dep][S][sum]>=0)return dp[dep][S][sum];\n\t\tres pos=flag?a[dep]:9,ret=0;\n\t\tfor(res i=0;i<=pos;i++)ret+=DP(dep-1,get(i,S),(sum*10+i)%kcz,flag&(i==pos));\n\t\tif(!flag)dp[dep][S][sum]=ret;\n\t\treturn ret;\n\t}\n\tinline LL solve(res x){\n\t\tres len=0;\n\t\twhile(x)a[++len]=x%10,x/=10;\n\t\treturn DP(len,0,0,1);\n\t}\n\tinline void MAIN(){\n\t\tQ=read();\n\t\tmemset(dp,-1,sizeof(dp));\n\t\twhile(Q--){\n\t\t\tres l=read(),r=read();\n\t\t\tprintf(\"%lld\\n\",solve(r)-solve(l-1));\n\t\t}\n\t} \n}\nint main(){\n    MAIN::MAIN();\n    return 0;\n}\n```",
        "postTime": 1540214802,
        "uid": 32878,
        "name": "foreverlasting",
        "ccfLevel": 7,
        "title": "\u3010CF55D\u3011Beautiful numbers"
    },
    {
        "content": "\u8fd9\u9898\u505a\u4e86\u534a\u5929\u3002\u7f8e\u4e3d\u7684\u6570\u7684\u5b9a\u4e49\u662f\u201c\u53ef\u4ee5\u88ab\u81ea\u5df1\u7684\u6240\u6709\u975e\u96f6\u6570\u4f4d\u6574\u9664\u7684\u6570\u201d\u3002\u505a\u6570\u4f4dDP\uff0c\u60f3\u7684\u5c31\u662f\u6bcf\u4e2a\u72b6\u6001\u9700\u8981\u4ec0\u4e48\u53c2\u91cf\u6765\u8868\u793a\u3002\u6ce8\u610f\u5230\u8fd9\u4e2a\u5b9a\u4e49\u7684\u9650\u5236\u5e76\u4e0d\u5728\u9009\u53d6\u6bcf\u4e2a\u6570\u4f4d\u7684\u65f6\u5019\uff0c\u800c\u662f\u5728\u6574\u4e2a\u6570\u5b57\u9009\u5b8c\u4e4b\u540e\u624d\u80fd\u505a\u4e00\u4e2a\u6574\u4f53\u5224\u65ad\u3002\n\n\u5f88\u81ea\u7136\u5730\uff0c\u9996\u5148\u60f3\u5230\u9700\u8981\u77e5\u9053\u6211\u4eec\u5df2\u7ecf\u5728$2, 3, \\dots, 9$\u4e2d\u9009\u4e86\u54ea\u4e9b\u6570\u5b57\uff0c\u8fd9\u53ef\u4ee5\u7528\u4e00\u4e2a$7$\u4f4d\u4e8c\u8fdb\u5236\u6570\u6765\u8868\u793a\u3002\u8fd9\u4e2a\u60f3\u6cd5\u867d\u7136\u6b63\u786e\uff0c\u4f46\u5728\u672c\u9898\u4e2d\u65f6\u95f4\u6548\u7387\u4e0d\u591f\u3002\u80fd\u591f\u89c2\u5bdf\u5230\uff0c\u5047\u5982\u6211\u4eec\u9009\u4e86$9$\u800c\u6ca1\u6709\u9009$3$\uff0c\u8fd9\u79cd\u60c5\u51b5\u5728\u6700\u540e\u9700\u8981\u7684\u5224\u65ad\uff0c\u548c\u65e2\u9009\u4e86$9$\u4e5f\u9009\u4e86$3$\u662f\u7b49\u4ef7\u7684\u3002\u8fd9\u4e0d\u514d\u8ba9\u6211\u4eec\u610f\u8bc6\u5230\uff0c\u53ef\u4ee5\u62ff\u6211\u4eec\u5df2\u9009\u7684\u6240\u6709\u6570\u4f4d\u5728$2, 3, 5, 7$\u7684\u6700\u9ad8\u6b21\u5e42\u5206\u522b\u4f5c\u4e3a\u4e00\u4e2a\u72b6\u6001\u53c2\u91cf\uff0c\u5b83\u4e00\u5171\u6709$4\\times3\\times2\\times2=48$\u79cd\u53ef\u80fd\u53d6\u503c\uff0c\u6bd4\u4e00\u4e2a$7$\u4f4d\u4e8c\u8fdb\u5236\u6570\u6765\u5f97\u5c0f\u5f88\u591a\u3002\u8fd9\u6837\u505a\u5176\u5b9e\u662f\u53ef\u4ee5\u7684\uff0c\u4f46\u5199\u8d77\u6765\u7a0d\u5fae\u9ebb\u70e6\u4e00\u70b9\u3002\u6211\u4eec\u4f9d\u7136\u53ef\u4ee5\u66f4\u8fdb\u4e00\u6b65\uff1a\u80fd\u591f\u88ab\u6211\u4eec\u7684\u6240\u6709\u6570\u4f4d\u6574\u9664\uff0c\u5c31\u7b49\u4ef7\u4e8e\u80fd\u591f\u88ab\u6211\u4eec\u7684\u6240\u6709\u6570\u4f4d\u7684\u6700\u5c0f\u516c\u500d\u6570\u6574\u9664\u3002\u867d\u7136\u8fd9\u4e2a\u6700\u5c0f\u516c\u500d\u6570\u6700\u5927\u80fd\u8fbe\u5230$2520$\uff0c\u4f46\u6839\u636e\u521a\u624d\u7684\u8bba\u8ff0\uff0c\u5b83\u53ea\u6709$48$\u4e2a\u53ef\u80fd\u7684\u53d6\u503c\uff0c\u5bf9\u5e94\u7684\u662f$2520$\u7684\u6240\u6709\u56e0\u6570\uff0c\u7b80\u5355\u79bb\u6563\u5316\u5373\u53ef\u3002\n\n\u6211\u4eec\u9700\u8981\u5224\u65ad\u7684\u662f\u6574\u4e2a\u6570\u80fd\u5426\u88ab\u6240\u6709\u6570\u4f4d\u7684\u6700\u5c0f\u516c\u500d\u6570\u6574\u9664\u3002\u6700\u7406\u60f3\u7684\u505a\u6cd5\u662f\u8bb0\u5f55\u72b6\u6001\u53c2\u91cf\u5305\u62ec\u201c\u6bcf\u4e00\u6b65\u9009\u5b8c\u540e\u7684\u6570\u524d\u7f00\u201d\u6a21\u201c\u6211\u4eec\u6240\u9009\u7684\u6240\u6709\u6570\u4f4d\u7684\u6700\u5c0f\u516c\u500d\u6570\u201d\u7684\u503c\u3002\u4f46\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u56e0\u4e3a\u5728\u9009\u53d6\u7684\u6bcf\u4e00\u6b65\uff0c\u6211\u4eec\u65e0\u6cd5\u9884\u77e5\u540e\u9762\u7684\u6b65\u9aa4\u4f1a\u9009\u62e9\u4ec0\u4e48\uff0c\u4e5f\u5c31\u65e0\u6cd5\u9884\u77e5\u8fd9\u4e2a\u6700\u5c0f\u516c\u500d\u6570\u662f\u51e0\u3002\u4f46\u6240\u5e78\u5176\u5b9e\u53ea\u8981\u662f\u8fd9\u4e2a\u6700\u5c0f\u516c\u500d\u6570\u7684\u500d\u6570\u4f5c\u4e3a\u6a21\u6570\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u7528\u4f59\u6570\u6765\u5224\u65ad\u539f\u6570\u5bf9\u6700\u5c0f\u516c\u500d\u6570\u7684\u6574\u9664\u6027\u3002\u56e0\u6b64\u6700\u540e\u6211\u4eec\u9009\u53d6\u7684\u6a21\u6570\u76f8\u7b49\u4e8e\u662f\u201c\u6240\u6709\u6700\u5c0f\u516c\u500d\u6570\u7684\u6700\u5c0f\u516c\u500d\u6570\u201d\uff0c\u4e0d\u96be\u53d1\u73b0\u8fd9\u4e2a\u865a\u5f20\u58f0\u52bf\u7684\u8bf4\u6cd5\u7b49\u4ef7\u4e8e$2, 3, \\dots, 9$\u7684\u6700\u5c0f\u516c\u500d\u6570$2520$\u3002\n\n\u7406\u8bba\u4e0a\u8fd9\u9053\u9898\u5c31\u505a\u5b8c\u4e86\u3002\u4f46\u662f\u6211\u53c8\u88ab\u5361\u65f6\u95f4\u4e86\u3002\u8fd9\u65f6\u5019\u6211\u610f\u8bc6\u5230\u6570\u4f4dDP\u672a\u5fc5\u975e\u8981\u8d70\u5957\u8def\uff1a\u5148\u6c42\u5c0f\u4e8e\u7b49\u4e8e$n$\u7684\u201c\u6ee1\u8db3\u6761\u4ef6\u7684\u6570\u201d\uff0c\u518d\u62ff\u533a\u95f4\u4e24\u4e2a\u7aef\u70b9\u6c42\u51fa\u7684\u503c\u51cf\u4e00\u4e0b\u2014\u2014\u5176\u5b9e\u53ef\u4ee5\u641c\u7d22\u7684\u65f6\u5019\u540c\u65f6\u5361\u4e24\u4e2a\u7aef\u70b9\uff0c\u7136\u540e\u4e00\u904d\u5c31\u641c\u5b8c\u4e86\u3002\u505a\u6cd5\u5c31\u662f\u4e0d\u4ec5\u8bb0\u5f55\u201c\u5df2\u9009\u62e9\u7684\u6240\u6709\u6570\u4e2d\u662f\u5426\u5747\u548c\u53f3\u7aef\u70b9\u5bf9\u5e94\u6570\u4f4d\u76f8\u7b49\u201d\uff0c\u4e5f\u8bb0\u5f55\u201c\u5df2\u9009\u62e9\u7684\u6240\u6709\u6570\u4e2d\u662f\u5426\u5747\u548c\u5de6\u7aef\u70b9\u5bf9\u5e94\u6570\u4f4d\u76f8\u7b49\u201d\uff0c\u8fd9\u4e24\u4e2a\u72b6\u6001\u5206\u522b\u5f71\u54cd\u6bcf\u4e00\u6b65\u80fd\u9009\u62e9\u7684\u6570\u7684\u4e0a\u754c\u548c\u4e0b\u754c\u3002\u8fd9\u4e48\u505a\u7684\u597d\u5904\u5728\u4e8e\uff0c\u7531\u6b64\u641c\u7d22\u7684\u590d\u6742\u5ea6\u5c31\u53ea\u548c\u533a\u95f4\u957f\u5ea6\u6709\u5173\uff0c\u548c\u5de6\u53f3\u7aef\u70b9\u6570\u7684\u5927\u5c0f\u672c\u8eab\u65e0\u5173\u4e86\u3002\u6362\u8a00\u4e4b\uff0c\u5bf9\u4e8e\u539f\u5148\u5de6\u53f3\u7aef\u70b9\u90fd\u5f88\u5927\u3001\u4f46\u533a\u95f4\u957f\u5ea6\u672a\u5fc5\u5927\u7684\u6570\u636e\uff0c\u8fd9\u6837\u505a\u663e\u7136\u80fd\u7f29\u77ed\u8fd0\u884c\u65f6\u95f4\uff1b\u5bf9\u4e8e\u5176\u4ed6\u6570\u636e\uff0c\u4e5f\u4e0d\u4f1a\u660e\u663e\u52a3\u4e8e\u4e4b\u524d\u7684\u7b97\u6cd5\uff08\u672a\u4e25\u683c\u8bc1\u660e\uff09\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i,from,to) for(register int i=(int)from;i<=(int)to;++i)\n#define For(i,to) for(register int i=0;i<(int)to;++i)\ntypedef long long ll;\ninline ll read(){\n    ll x=0; ll sign=1; char c=getchar();\n    while(c>'9' || c<'0') {if (c=='-') sign=-1;c=getchar();}\n    while(c>='0' && c<='9'){x=(x<<3)+(x<<1)+c-'0';c=getchar();}\n    return x*sign;\n}\nconst ll M = 2520;\n\nll l, r;\nll f[20][50][2521];\nint fac[2521];\nint dim_l[25]; int dim_l_size;\nint dim_r[25]; int dim_r_size;\n\nint gcd(int a, int b){ return b ? gcd(b, a % b) : a; }\ninline int lcm(int a, int b) { return a / gcd(a, b) * b;}\n\nll dp(int x, int scm, int st, int opl, int opr) {\n    if (x == -1) { return (st % scm) == 0; }\n    ll &mem = f[x][fac[scm]][st];\n    if (!opl && !opr && mem > -1) return mem;\n    ll ret = 0;\n    int maxx = opr ? dim_r[x] : 9;\n    int minx = opl ? dim_l[x] : 0;\n    rep(i, minx, maxx) {\n        ret += dp(x - 1, (i == 0) ? scm : lcm(i, scm), ((st * 10 + i) % M), \n            (opl & (i == minx)), (opr & (i == maxx)));\n    }\n    if(!opl && !opr) mem = ret;\n    return ret;\n}\n\ninline void cal_dim(ll n, int* dim, int &dim_size) {\n    dim_size = 0;\n    while(n) {\n        dim[dim_size++] = n % 10; n /= 10;\n    }\n}\n\nll solve(ll l, ll r) {\n    memset(dim_l, 0, sizeof(dim_l));\n    memset(dim_r, 0, sizeof(dim_r));\n    cal_dim(l, dim_l, dim_l_size);\n    cal_dim(r, dim_r, dim_r_size);\n    memset(f, -1, sizeof(f));\n    return dp(dim_r_size-1, 1, 0, 1, 1);\n}\n\nint main() {\n#ifdef D\n    freopen(\"CF55D.in\", \"r\", stdin);\n    double TIMEA = clock();\n#endif\n\n    int cnt = 0;\n    for(int i = 1; i <= M; ++i) {\n        if (M % i == 0) fac[i] = ++cnt;\n    }\n\n    int T; T = read();\n    while(T--) {\n        l = read(); r = read();\n        ll ans = solve(l, r);\n        cout << ans << \"\\n\";\n    }\n\n#ifdef D\n    double TIMEB=clock();\n    printf(\"\\n# Time consumed: %.3fs.\\n\", (TIMEB-TIMEA)/1000);\n#endif\n    return 0;\n}\n```\n\n\n\n",
        "postTime": 1608103228,
        "uid": 81690,
        "name": "EricWay1024",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF55D \u3010Beautiful numbers\u3011"
    },
    {
        "content": "\u515c\u515c\u8f6c\u8f6c\u603b\u7b97\u8fc7\u4e86\u8fd9\u9898\u3002\n\n\u5148\u6765\u770b\u9898\uff0c\u5c31\u662f\u7ed9\u4f60\u4e00\u4e2a\u8303\u56f4[l,r]\uff0c\u6c42\u8fd9\u4e2a\u8303\u56f4\u4e2d\u6709\u591a\u5c11\u4e2a\u6570\u5b57\u80fd\u6ee1\u8db3\u8fd9\u4e2a\u6570\u5b57\u80fd\u6574\u9664\u6bcf\u4e2a\u6570\u4f4d\u7684\u6570\u5b57\u3002\n\n\u6bd4\u598212,12%2=0,12%1=0\uff0c\u6240\u4ee512\u5c31\u662f\u6ee1\u8db3\u9898\u76ee\u6761\u4ef6\u7684\u3002\u800c13%1=0,13%3!=0\uff0c\u8fd9\u5c31\u4e0d\u7b26\u5408\u3002\n\n\u6c42\u67d0\u4e2a\u8303\u56f4\u5185\u7684\u6ee1\u8db3\u67d0\u4e9b\u6761\u4ef6\u7684\u6570\u5b57\u4e00\u5171\u6709\u591a\u5c11\u4e2a\uff0c\u89e3\u51b3\u8fd9\u7c7b\u95ee\u9898\u5e38\u7528\u7684\u89e3\u6cd5\u5c31\u662f\u6570\u4f4ddp\u3002\u5bf9\u4e8e\u5927\u90e8\u5206\u6570\u4f4ddp\u9898\uff0c\u5957\u8def\u4e5f\u5927\u591a\u662f\u8fd9\u4e2a\u3002\n\n\u4e0b\u9762\uff0c\u6211\u5c31\u4ece\u6570\u4f4ddp\u7684\u60ef\u5e38\u5957\u8def\u5165\u624b\u3002\n\n```\nll Solve(ll x)//\u6570\u4f4d\u5206\u89e3\n{\n\n    tot=0;\n    while(x)\n    {\n        a[++tot]=x%10;\n        x/=10;\n    }\n    return dfs(tot,1,1,0);\n}\nint main()//\u4e3b\u51fd\u6570\n{\n    memset(dp,-1,sizeof(dp));\n    int t;\n    cin>>t;\n    lsh();\n    while(t--)\n    {\n        ll l,r;\n        cin>>l>>r;\n        cout<<Solve(r)-Solve(l-1)<<'\\n';\n    }\n    return 0;\n}\n```\n\u5148\u4e0a\u4e00\u4e0b\u4e3b\u51fd\u6570\u548cSolve\u51fd\u6570\uff0c\u6570\u4f4d\u5206\u89e3\u548c\u4e3b\u51fd\u6570\u8fd9\u4e48\u5199\u7684\u90fd\u662f\u5fc5\u5907\u7684\uff0c\u6709\u7a0d\u5fae\u5b66\u4e60\u8fc7\u6570\u4f4ddp\u90fd\u80fd\u660e\u767d\u3002\n\n\u7136\u540e\u5c31\u662f\u5199dfs\u548c\u5f00dp\u6570\u7ec4\u4e86\uff0c\u8bb0\u5fc6\u5316\u641c\u7d22\u5c31\u662f\u6570\u4f4ddp\u7684\u7cbe\u9ad3\uff0c\u4e5f\u53ef\u4ee5\u8bf4\u662f\u4f18\u5316\u7684\u66b4\u529b\u3002dp\u6570\u7ec4\u4e5f\u5c31\u662f\u8bb0\u5fc6\u5df2\u7ecf\u641c\u7d22\u8fc7\u5e76\u4e14\u662f\u201c\u901a\u7528\u7684\u72b6\u6001\u201d\uff0c\u4fdd\u8bc1\u4e0d\u4f1a\u91cd\u590d\u641c\u7d22\u5230\uff0c\u4ece\u800c\u8fbe\u5230\u964d\u4f4e\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u505a\u6cd5\u3002\n\n\u6211\u4eec\u518d\u56de\u5934\u770b\u770b\u9898\u76ee\u3002\n\n\u6211\u4eec\u77e5\u9053dp\u6570\u7ec4\u662f\u4fdd\u5b58\u72b6\u6001\u7684\u3002\u521d\u770b\u9898\u76ee\uff0c\u6211\u4eec\u8981\u4ec0\u4e48\u5462\uff1f\u5f88\u663e\u7136\u662f\u4f4d\u7f6epos\u3001\u6570\u5b57x\u3001\u8fd8\u6709\u5176\u6bcf\u4e00\u4f4d\u6570\u4f4d\u4e0a\u7684\u6570\u5b57\u3002\n\n\u9996\u5148\u6570\u4f4d\u6709\u5f88\u591a\uff0c\u6211\u4eec\u4e0d\u53ef\u80fd\u5f00\u592a\u591a\u7ef4\u7684\u6570\u7ec4\uff0c\u6240\u4ee5\u6211\u4eec**\u53ea\u4fdd\u5b58\u6700\u5c0f\u516c\u500d\u6570\uff0c\u5982\u679c\u8fd9\u4e2a\u6570\u5b57\u53ef\u4ee5\u9664\u4ee5\u6bcf\u4e00\u6570\u4f4d\u7684\u6570\u5b57\uff0c\u90a3\u4e48\u4e00\u5b9a\u80fd\u9664\u4ee5\u6570\u4f4d\u8fd9\u4e9b\u6570\u5b57\u7684\u6700\u5c0f\u516c\u500d\u6570**\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c1\u2014\u20149\u6240\u6709\u6570\u5b57\u7684\u6700\u5927\u7684\u6700\u5c0f\u516c\u500d\u6570\u662f2520\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7528x%2520\uff0c\u6765\u4fdd\u5b58\u6570\u5b57x\uff0c\u6240\u4ee5\u4fdd\u5b58\u6570\u5b57\u7684\u7ef4\u5ea6\u5f002521\u5de6\u53f3\u5373\u53ef\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\uff0c\u8fd8\u5dee\u4e00\u4e2a\u7ef4\u5ea6\u4fdd\u5b58\u6700\u5c0f\u516c\u500d\u6570\u5c31\u5b8c\u6210\u4e86\uff0c\u4f46\u662f\u8fd9\u4e2a\u6570\u7ec4\u7ef4\u5ea6\u4e0d\u53ef\u80fd\u518d\u5f00\u52302520\u4ee5\u4e0a\u4e86\uff0c\u56e0\u4e3adp[20][2521][2521]\u8fd9\u6837\u7684\u6570\u7ec4\u4e00\u5b9a\u4f1aMLE\u7684\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5\u91c7\u7528\u79bb\u6563\u5316\uff0c\u4f7f\u5f97\u6bcf\u4e00\u4e2a\u6700\u5c0f\u516c\u500d\u6570\u5bf9\u5e941\u30012\u30013......n\u7684\u7f16\u53f7\u3002\u7528in\u6570\u7ec4\u4fdd\u5b58\u3002\n\n```\nvoid lsh()//\u79bb\u6563\u5316\uff0c\u6bcf\u4e00\u4e2a\u6700\u5c0f\u516c\u500d\u6570\u5bf9\u5e94\u4e00\u4e2a\u7f16\u53f7\n{\n    ll i;\n    tot=0;\n    for(i=1; i<=2520; i++)\n    {\n        if(2520%i==0)\n            in[i]=tot++;\n    }\n}\n```\n\n\u8fdb\u884c\u5b8c\u51fd\u6570\u4e4b\u540e\uff0c\u53ef\u4ee5\u53d1\u73b0tot\u4e0d\u8fc7\u5c3148\u800c\u5df2\uff0c\u4e5f\u5c31\u662f48\u4e2a\u6570\u5b57\uff0c\u90a3\u4e48\u79bb\u6563\u5316\u4e4b\u540e\uff0c\u7b2c\u4e09\u7ef4\u53ea\u7528\u5f0050+\u5373\u53ef\u3002\n\n\u5f53\u7136\uff0c\u8ba1\u7b97\u6700\u5c0f\u516c\u500d\u6570\u8fd8\u9700\u8981\u4e00\u4e2a**a*b/gcd(a,b)**\u8fd9\u6837\u7684\u516c\u5f0f\uff0c\u8fd9\u4e2a\u662f\u5f88\u5bb9\u6613\u7684\uff0c\u5c31\u4e0d\u591a\u8bf4\u4e86\u3002\n\n\u518d\u91cd\u590d\u4e00\u6b21\uff0c\u6570\u4f4ddp\u5f88\u591a\u5730\u65b9\u90fd\u662f\u5957\u8def\uff0c\u8fd9\u9898\u53ea\u8981\u80fd\u60f3\u5230\u79bb\u6563\u5316\u5c31\u5dee\u4e0d\u591a\u80fd\u89e3\u51b3\u4e86\uff01\n\n\u4e0b\u9762\u662fAC\u4ee3\u7801\u3002\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nint in[2521];\nll dp[20][2521][49];\nint a[20];\nint tot;\nvoid lsh()//\u79bb\u6563\u5316\uff0c\u6bcf\u4e00\u4e2a\u6700\u5c0f\u516c\u500d\u6570\u5bf9\u5e94\u4e00\u4e2a\u7f16\u53f7\n{\n    int i;\n    tot=0;\n    for(i=1; i<=2520; i++)\n    {\n        if(2520%i==0)\n            in[i]=tot++;\n    }\n}\ninline ll read()\n{\n    ll x=0,f=1;\n    char c=getchar();\n    for(;!isdigit(c);c=getchar())if(c=='-')f=-1;\n    for(;isdigit(c);c=getchar())x=x*10+c-'0';\n    return x*f;\n}\nint gcd(int a,int b)//\u6700\u5c0f\u516c\u56e0\u6570\n{\n    return a%b==0?b:gcd(b,a%b);\n}\nll dfs(int pos,bool f,int lcm,int x)\n{\n    if(pos==0)\n        return !(x%lcm)?1:0;\n    if(!f&&dp[pos][x][in[lcm]]!=-1)\n        return dp[pos][x][in[lcm]];\n    int up=f?a[pos]:9;\n    ll ans=0;\n    //\u4ee5\u4e0a\u90fd\u662f\u5957\u8def\n    for(int i=0; i<=up; i++)\n    {\n        if(i)\n            ans+=dfs(pos-1,f&(i==up),i/gcd(lcm,i)*lcm,(x*10+i)%2520);//\u4fdd\u5b58\u6700\u5c0f\u516c\u500d\u6570\u5373\u53ef\n        else\n            ans+=dfs(pos-1,f&(i==up),lcm,(x*10+i)%2520);\n    }\n    if(f)\n        return ans;\n    else\n        return dp[pos][x][in[lcm]]=ans;\n}\nll Solve(ll x)\n{\n    tot=0;\n    while(x)\n    {\n        a[++tot]=x%10;\n        x/=10;\n    }\n    return dfs(tot,1,1,0);\n}\nint main()\n{\n    memset(dp,-1,sizeof(dp));\n    int t;\n    scanf(\"%d\",&t);\n    lsh();\n    while(t--)\n    {\n        ll l,r;\n        l=read();\n        r=read();\n        printf(\"%lld\\n\",Solve(r)-Solve(l-1));\n    }\n    return 0;\n}\n\n```\n\u9898\u76ee\u5efa\u8bae\u4f7f\u7528cin\u4e86\uff08\u6211\u4e0d\u61c2\u4e3a\u4ec0\u4e48\uff09\uff0c\u5feb\u8bfb\u662f\u53ef\u4ee5\u7684\uff0c\u8fd9\u9898\u6570\u636e\u4e5f\u4e0d\u662f\u5f88\u591a\uff0c\u76f4\u63a5\u83bdcin\u3001cout\u4e5f\u884c\u3002\u8fd9\u9898cin\u3001cout\u4e5f\u4e0d\u8fc7\u662f1s\u8dd1\u5b8c\uff0c\u8fd9\u9898\u5f00\u7684\u65f6\u95f4\u8fd8\u662f\u5f88\u591f\u7684\uff0c\u7b97\u6cd5\u5927\u81f4\u601d\u8def\u5bf9\u4e86\uff0c\u5f88\u591a\u7ec6\u8282\u6ca1\u6709\u4f18\u5316\u4f9d\u7136\u53ef\u4ee5\u8f7b\u677e\u8fc7\u3002\n\n",
        "postTime": 1585911942,
        "uid": 277023,
        "name": "YuanZhizheng",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF55D \u3010Beautiful numbers\u3011"
    },
    {
        "content": "\u6211\u4eec\u53d1\u73b0\u6570\u4f4d\u4e0a\u53ea\u4f1a\u6709 $0,1,\\cdots ,9$ \u8fd9\u4e9b\u6570\u5b57\u3002\u8fd9\u4e48\u5c0f\uff0c\u6709\u6ca1\u6709\u4ec0\u4e48\u7528\u5462\uff1f\n\n\u800c $\\operatorname{lcm}(1,2,\\dots ,9)=2520$\uff0c\u4e5f\u5c31\u662f\u8bf4\u6240\u6709\u53ef\u80fd\u8981\u6c42\u4e00\u4e2a\u6570\u6574\u9664\u7684\u6570\u90fd\u662f $2520$ \u7684\u56e0\u5b50\u3002\u4e8e\u662f\u6211\u4eec\u5c31\u5904\u7406\u5b8c $2520$ \u7684\u56e0\u5b50\uff0c\u8fd9\u53c8\u6709\u4ec0\u4e48\u7528\u5462\uff1f\n\n\u6682\u5148\u629b\u5f00\u4e0a\u9762\u7684\u601d\u8003\u3002\u8003\u8651\u6570\u4f4d dp\u3002\u5b9a\u4e49 $dp_{i,j,k}$ \u4e3a\u5f53\u524d\u586b\u5230\u7b2c $i$ \u4f4d\uff0c\u4ea7\u751f\u7684\u6570\u4e3a $j$\uff0c\u5f53\u524d\u5e94\u8be5\u6574\u9664\u7684\u6570\u4e3a $k$\u3002\u4ea7\u751f\u7684\u6570\u662f $9 \\times 10^{18}$ \u7ea7\u522b\u7684\uff0c\u8003\u8651\u4e00\u4e2a\u65b9\u6cd5\u53bb\u6a21\u6389\u5b83\u3002\n\n\u5b9a\u7406\uff1a\u82e5 $a \\equiv 0(\\bmod \\ s),a\\equiv 0(\\bmod \\ t)$\uff0c\u90a3\u4e48 $a \\equiv 0(\\bmod \\ \\operatorname{lcm}(s,t))$\u3002\n\n\u663e\u7136\u3002\n\n\u6240\u4ee5\u8bf4\u6211\u4eec\u5c06\u4e00\u822c\u6a21\u6570\u5b9a\u6210 $2520$\uff0c\u7136\u540e $sum$ \u5411\u5176\u53d6\u6a21\u5373\u53ef\u3002\n\n\u7a7a\u95f4\u590d\u6742\u5ea6 $O(20 \\times 2520 \\times 2520)$\u3002\u3002\u3002\u70b8\u4e86\u3002\n\n\u4e8e\u662f\u5c06\u56e0\u5b50\u79bb\u6563\u5316\uff0c\u53ea\u6709 $50$ \u591a\u4e2a\uff0c\u7136\u540e\u5c31\u80fd\u4f18\u5316\u7a7a\u95f4\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nLL a[21],n,lsh[2521],dp[21][2521][51];\nLL gcd(LL a,LL b){return !b?a:gcd(b,a%b);}\nLL lcm(LL a,LL b){return a/gcd(a,b)*b;}\nLL DP(LL pos,LL limit,LL sum,LL mod)\n{\n\tif(!pos)\treturn sum%mod==0;\n\tif(!limit && ~dp[pos][sum][lsh[mod]])\treturn dp[pos][sum][lsh[mod]];\n\tLL up=limit?a[pos]:9,ans=0;\n\tfor(LL i=0;i<=up;++i)\tans+=DP(pos-1,limit && i==up,(sum*10+i)%2520,i?lcm(i,mod):mod);\n\tif(!limit)\tdp[pos][sum][lsh[mod]]=ans;\n\treturn ans;\n}\nLL calc(LL up)\n{\n\tn=0;\n\twhile(up)\ta[++n]=up%10,up/=10;\n\treturn DP(n,1,0,1);\n}\nint main(){\n\tmemset(dp,-1,sizeof dp);\n\tLL s=0;\n\tfor(LL i=1;i<=2520;++i)\tif(2520%i==0)\tlsh[i]=++s;\n\tLL T;\n\tscanf(\"%lld\",&T);\n\twhile(T-->0)\n\t{\n\t\tLL l,r;\n\t\tscanf(\"%lld %lld\",&l,&r);\n\t\tprintf(\"%lld\\n\",calc(r)-calc(l-1));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1597836509,
        "uid": 184977,
        "name": "pomelo_nene",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF55D \u3010Beautiful numbers\u3011"
    },
    {
        "content": "## \u5206\u6790\n\u770b\u5230\u8fd9\u9053\u9898\u7684\u65f6\u5019\u6211\u60f3\u5230\u7684\u662f\u72b6\u538bDP\uff0c\u538b\u4e00\u4e0b0~9\u662f\u5426\u51fa\u73b0\u8fc7\uff0c\u4f46\u53d1\u73b0\u4e4b\u540e\u5c31\u4e0d\u597d\u5f04\u4e86\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4ec5\u53ef\u80fd\u51fa\u73b0\uff0c\u800c\u4e14\u8fd8\u4f1a\u51fa\u73b0\u5f88\u591a\u6b21\uff0c\u770b\u6570\u636e\u8303\u56f4\u5c31\u77e5\u9053\u66b4\u529b\u80af\u5b9a\u4e0d\u53ef\u80fd\u7684\uff0c\u8fd9\u6570\u636e\u5927\u5c0f\u5c31\u7b97\u8dd1\u4e00\u904d\u5faa\u73af\u4e5f\u80fdT\u6389\uff0c\u6240\u4ee5\u8fd9\u91cc\u5c31\u8981\u7528\u5230\u6570\u4f4dDP\u4e86\u3002\n\n\u72b6\u538bDP\u662f\u7528\u4e00\u4e2a\u5341\u8fdb\u5236\u6570\u6765\u8868\u793a\u4e8c\u8fdb\u5236\u7684\u72b6\u6001\uff0c\u672c\u8d28\u4e0a\u8fd8\u662f\u66b4\u529b\uff0c\u4e0d\u8fc7\u662f\u4f18\u5316\u4e86\u3002**\u5e38\u7528\u5230\u4f4d\u8fd0\u7b97**\n\n\u6570\u4f4dDP\u8ddf\u5b83\u4e5f\u5dee\u4e0d\u591a\uff0c\u7b97\u662f\u4e00\u79cd\u66b4\u529b\uff0c\u4e3b\u8981\u7528\u6765\u89e3\u51b3\u6570\u4f4d\u4e0a\u8ba1\u6570\u7684\u95ee\u9898\uff0c\u6bd4\u5982\u672c\u9898\u3002**\u4e3b\u8981\u662f\u901a\u8fc7\u8bb0\u5fc6\u5316\u641c\u7d22\u6765\u5b9e\u73b0**\n\n\u56e0\u4e3a\u67e5\u8be2\u65f6\u67e5\u8be2\u4e00\u4e2a\u533a\u95f4\u5f88\u4e0d\u65b9\u4fbf\uff0c\u6240\u4ee5\u5c06\u4ed6\u62c6\u6210\u4e24\u4e2a\u533a\u95f4\u76f8\u51cf\u7684\u5f62\u5f0f\uff0c\u8fd9\u4e2a\u5730\u65b9\u5e94\u8be5\u4e0d\u96be\u770b\u51fa\u6765\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u6570\u4f4dDP\u7684\u5185\u5bb9\u4e86\uff0c\u5148\u8003\u8651\u6700\u539f\u59cb\u7684\u7248\u672c\uff0c\u56e0\u4e3a\u6211\u8981\u4e00\u4f4d\u4e00\u4f4d\u7684\u53bb\u8003\u8651\uff0c\u6240\u4ee5\u4f4d\u6570\u5360\u4e86\u4e00\u7ef4\uff0c\u53c8\u56e0\u4e3a\u8981\u5224\u65ad\u662f\u5426\u662f\u8fd9\u4ec0\u4e48\u4ec0\u4e48$Numbers$\uff0c\u6240\u4ee5\u4f4d\u6570\u6240\u8868\u793a\u7684\u5341\u8fdb\u5236\u6570\u4e5f\u8981\u5b58\u4e0b\u6765\uff0c\u90a3\u4e48\u600e\u4e48\u5224\u65ad\u662f\u4e0d\u662f\u8fd9\u79cd\u6570\u5b57\u5462\uff1f\u6700\u574f\u7684\u60c5\u51b5\u662f\u542b\u4e860\u52309\u7684\u6240\u6709\u6570\u5b57\uff0c\u65e2\u7136\u6bcf\u4e2a\u6570\u5b57\u90fd\u80fd\u6574\u9664\uff0c\u90a3\u4e48\u5fc5\u5b9a\u53ef\u4ee5\u6574\u9664\u5b83\u4eec\u7684\u6700\u5c0f\u516c\u500d\u6570\uff0c\u6240\u4ee5\u516c\u500d\u6570\u4e5f\u8981\u5360\u4e00\u7ef4\uff0c\u4e8e\u662f\u5b9a\u4e49$dp_{i,j,k}$\u4e3a\u8fd8\u5269\u4e0b$i$\u4f4d\uff0c\u5e76\u4e14\u524d$i$\u4f4d\u8868\u793a\u7684\u6570\u4e3a$j$\uff0c\u8fd9$i$\u4f4d\u6570\u5b57\u7684\u6700\u5c0f\u516c\u500d\u6570\u4e3a$k$\u65f6\u7684\n\u7b54\u6848\u662f\u591a\u5c11\uff0c\u8fd9\u91cc\u89e3\u91ca\u4e00\u4e0b$i$\u8fd9\u4e00\u7ef4\uff0c\u6bd4\u5982123456\uff0c\u524d\u4e09\u4f4d\u5206\u522b\u662f1\uff0c2\uff0c3\uff0c\u8868\u793a\u7684\u6570\u5373\u4e3a123\uff0c\u7136\u540e\u5c31\u80fd\u901a\u8fc7\u679a\u4e3e\u5f97\u5230$dp_{i,j,k}=\\sum_{i=0}^{Max}dp_{i-1,j*10+i,lcm(k,i)}$,lcm\u8868\u793a\u7684\u5c31\u662f\u6700\u5c0f\u516c\u500d\u6570\uff0c\u8fd9\u4e2a\u5e94\u8be5\u4e5f\u80fd\u770b\u61c2\uff0c\u4ed6\u5176\u5b9e\u5c31\u662f\u66b4\u529b\u7684\u679a\u4e3e\u4e86\u6bcf\n\u4e00\u4f4d\u4e0a\u7684\u6570\u5b57\u3002\n\n\u8fd9\u4e2a\u6570\u7ec4\u5f00\u4e86\u4e4b\u540e\u80af\u5b9a\u4f1aMLE\uff0c\u8003\u8651\u4e00\u4e0b\u4f18\u5316\uff0c1~9\u7684\u6700\u5c0f\u516c\u500d\u6570\u4e3a$5*7*8*9==2520$\uff0c\u4e5f\u5c31\u662f\u8bf4\u7b2c\u4e09\u7ef4\u7684\u72b6\u6001\u4e0d\u53ef\u80fd\u6bd42520\u8fd8\u8981\u5927\uff0c\u4f46\u5f002520\u8fd8\u662f\u4f1aMLE\uff0c\u7ee7\u7eed\u601d\u8003\uff0c1\u52302520\u5f88\u591a\u6570\u5b57\u6211\u4eec\u90fd\u662f\u7528\u4e0d\u5230\u7684\uff0c\u6211\u4eec\u7528\u5230\u7684\u5b9e\u9645\u4e0a\u53ea\u67092520\u7684\u56e0\u6570\uff0c\u6240\u4ee5\u53ef\u4ee5\u63d0\u524d\u9884\u5904\u7406\u51fa\u6765\uff0c\u7136\u540e\u628a\u7b2c\u4e09\u7ef4\u7684\u72b6\u6001\u6539\u6210\u6700\u5c0f\u516c\u500d\u6570\u5bf9\u5e94\u7684\u6570\u5b57\u4e3a$k$\uff0c\u76f8\u5f53\u4e8e\u4e00\u4e2a\u79bb\u6563\u5316\u3002\n\n\u6700\u68d8\u624b\u7684\u4e1c\u897f\u8fd8\u662f\u4e2d\u95f4\u8fd9\u4e00\u7ef4\uff0c\u76f4\u63a5\u8bb0\u5f55\u7684\u8bdd\u4f1a\u53d1\u73b0\u5b83\u6700\u5927$9*10^{18}$\u6b21\u65b9\uff0c\u90a3\u4e48\u6709\u6ca1\u6709\u4ec0\u4e48\u597d\u7684\u529e\u6cd5\u6765\u538b\u4e00\u4e0b\u8fd9\u4e2a\u5927\u5c0f\u5462\uff1f\u5148\u601d\u8003\u4e00\u4e0b\uff0c\u6211\u4eec\u6700\u540e\u5224\u65ad\u7684\u662f\u4ec0\u4e48\uff0c\u5c31\u662f\u8fd9\u4e2a\u6570$mod$\u5b83\u6bcf\u4e2a\u4f4d\u6570\u5b57\u4e0a\u7684\u6700\u5c0f\u516c\u500d\u6570\u662f\u5426==0\uff0c\u8bbe\u8fd9\u4e2a\u6570\u4e3a$x$\uff0c\u6700\u5c0f\u516c\u500d\u6570\u4e3a$lcm$\uff0c\u56e0\u4e3a\u6d89\u53ca\u5230$mod$\uff0c\u6240\u4ee5\u4ece\u540c\u4f59\u7684\u89d2\u5ea6\u6765\u8003\u8651\u3002\n\n\u5f15\u7406:\u5982\u679c$a$\u662f$b$\u7684\u56e0\u5b50\uff0c\u90a3\u4e48$x$\u540c\u4f59$x$%$b(mod$ $a)$\n\n\u8bc1\u660e:\u56e0\u4e3a$a$\u662f$b$\u7684\u56e0\u5b50\uff0c\u6240\u4ee5\u53ef\u4ee5\u8bbe$b=na,n$\u662f\u6b63\u6574\u6570\n\n\u4e0d\u59a8\u8bbe$x=qb+r,r=0,1,2....b-1$\n\n\u6240\u4ee5$x \\equiv x-qna$               $(mod$ $a)$\n\n\u5373$x\\equiv x-qb$                  $(mod$ $a)$\n\n$x-qb$\u5373\u4e3a$r$\u53c8\u56e0\u4e3a$r$\u662f$x$%$b$       $(mod$ $a)$\n\n\u6240\u4ee5$x \\equiv x$%$b$ $(mod$ $a)$\n\n\u6709\u4e86\u8fd9\u4e2a\u5f15\u7406\uff0c\u5c31\u597d\u529e\u591a\u4e86\uff0c\u6240\u6709\u7684lcm\u90fd\u4e00\u5b9a\u662f2520\u7684\u56e0\u5b50\uff0c\u6240\u4ee5$x \\equiv x$%$2520$ $(mod$ $lcm)$\n\u4e5f\u5c31\u662f\u8bf4\uff0c$x$\u4e0e$x$%$2520$\u5b9e\u9645\u4e0a\u662f\u7b49\u4ef7\u7684\uff0c\u90a3\u4e3a\u4ec0\u4e48\u6211\u4eec\u4e0d\u628a\u5b83%\u4e00\u4e0b\uff0c\u4e8e\u662f\u7b2c\u4e8c\u7ef4\u4e5f\u5c31\u53ea\u9700\u8981\u5f002520\uff0c\u7a7a\u95f4\u95ee\u9898\u5c31\u89e3\u51b3\u4e86\uff0c\u52a0\u4e0a\u4e4b\u524d\u7684\u4e00\u4e9b\u5206\u6790\uff0c\u8fd9\u4e2a\u95ee\u9898\u57fa\u672c\u89e3\u51b3\u3002\n\n##\u7ec6\u8282\n\n1.\u8bb0\u5fc6\u5316\n\n\u53cd\u6b63\u90fd\u641c\u8fc7\u4e86\uff0c\u4e0d\u8bb0\u767d\u4e0d\u8bb0\u3002\u4f46\u662f\u8bb0\u5f55\u7684\u65f6\u5019\u8981\u6ce8\u610f\uff0c\u56e0\u4e3a\u679a\u4e3e\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u65f6\u5019\uff0c\u4e0d\u80fd\u8d85\u8fc7\u8fd9\u4e2a\u6570\u539f\u672c\u7684\u503c\uff0c\u8d85\u8fc7\u4e86\u5c31\u4f1a\u591a\u8bb0\u7b54\u6848\uff0c\u6240\u4ee5\u5f53\u5f53\u524d\u4f4d\u662f\u6700\u5927\u503c\u7684\u65f6\u5019\uff0c\u4e0d\u80fd\u8bb0\u5fc6\uff0c\u540c\u7406\u8fd4\u56de\u503c\u65f6\u4e5f\u662f\u3002\u6bd4\u5982113\uff0c\u679a\u4e3e\u767e\u4f4d\u65f6\u663e\u7136\u4e0d\u80fd\u679a\u4e3e\u52302\uff0c\u4f46\u5f53\u767e\u4f4d\u662f0\u65f6\uff0c\u5341\u4f4d\u5374\u80fd\u591f\u52309\uff0c\u6240\u4ee5\u5224\u65ad\u6700\u5927\u503c\u65f6\u8981\u4fdd\u8bc1\u6bcf\u4e00\u4f4d\u90fd\u662f\u6700\u5927\u503c\u3002\n\n2.longlong\n\n\u8fd9\u9898\u4e0d\u5f00longlong\u7b49\u7740WA\u5427\u3002\n\n3.\u6700\u5927\u516c\u7ea6\u6570\u548c\u6700\u5c0f\u516c\u500d\u6570\n\u6700\u5927\u516c\u7ea6\u6570\u6211\u7528\u7684\u8f97\u8f6c\u76f8\u9664\u6cd5\uff0c\u539f\u7406\u633a\u7b80\u5355\uff0c\u5c31\u4e00\u76f4\u9664\uff0c\u76f4\u5230\u53ef\u4ee5\u9664\u5c3d\u4e3a\u6b62\u3002\n\u6700\u5c0f\u516c\u500d\u6570\u5c31\u662f\u4e24\u6570\u7684\u4e58\u79ef\u9664\u4ee5\u6700\u5927\u516c\u7ea6\u6570\uff0c\u8fd9\u4e2a\u5c31\u6839\u636e\u6700\u5c0f\u516c\u500d\u6570\u7684\u5b9a\u4e49\u81ea\u884c\u7406\u89e3\u5427\n```\n#include<iostream>\n#define ll long long\nusing namespace std;\nconst int N=2525;\nll dp[20][N][50];\nint p[N],hh,num[20],top;\nint gcd(int a,int b){\n    return a%b?gcd(b,a%b):b;\n}\nint Lcm(int a,int b){\n    return b==0?a:a/gcd(a,b)*b;\n}\nll dfs(int x,int sum,int lcm,bool ismx){\n    if(x==0)return sum%lcm==0;\n    if(!ismx&&dp[x][sum][p[lcm]])return dp[x][sum][p[lcm]];\n    int Max=ismx==1?num[x]:9;\n    ll ans=0;\n    for(int i=0;i<=Max;i++)\n        ans+=dfs(x-1,(sum*10+i)%2520,Lcm(lcm,i),ismx&&i==Max);\n    if(!ismx)dp[x][sum][p[lcm]]=ans;\n    return ans;\n}\nll calc(ll x){\n    top=0;\n    while(x){\n        num[++top]=x%10ll;\n        x/=10ll;\n    }\n    return dfs(top,0,1,1);\n}\nint main(){\n    for(int i=1;i<=2520;i++)\n        if(2520%i==0)p[i]=++hh;\n    int t;\n    cin>>t;\n    while(t--){\n        ll l,r;\n        cin>>l>>r;\n        cout<<calc(r)-calc(l-1)<<'\\n';\n    }\n}\n```",
        "postTime": 1587108199,
        "uid": 305262,
        "name": "Su_Zipei",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF55D \u3010Beautiful numbers\u3011"
    },
    {
        "content": "\u663e\u7136\u6570\u4f4ddp\u3002\n\n\u9996\u5148\uff0c\u6574\u9664\u6bcf\u4e00\u4f4d\u7b49\u540c\u4e8e\u6574\u9664lcm\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u8bb0\u5f55lcm\u3002\n\n\u6570\u7ec4\u663e\u7136\u4f1a\u51fa\u5927\u95ee\u9898\u3002\n\n\u524d\u7f6e\uff1a$lcm(1,2,3,4,5,6,7,8,9)=2520$\n\n\u6240\u4ee5\u6211\u4eec\u8003\u8651\u7528%2520\u7684\u4f59\u6570\u6765\u8868\u793a\u6570\u5b57\uff0c\u8fd9\u6837\u4e0d\u4f1a\u6539\u53d8\u6570\u5b57\u6574\u9664\u6027\u3002\n\n\u7136\u540e\u8003\u8651\u4f18\u5316lcm\uff0c\u6211\u4eec\u53d1\u73b0\u5f88\u591a\u60c5\u51b5\u5176\u5b9e\u662f\u4e0d\u53ef\u80fd\u4e3alcm\uff08\u4f8b\u5982\u5927\u4e8e9\u7684\u8d28\u6570\uff0c$2^k(k>3)$)\uff0c\u7136\u540e\u5c31\u8bb0\u5f55\u4e00\u4e0b\u7f16\u53f7\u4e0e\u6570\u7684\u5bf9\u5e94\u5173\u7cfb(code\u4e2d\u7684map,remap)\u3002\n\n\u7136\u540e\u53ef\u8fc7\u3002\n___\n\u6ce8\u610f\uff1a\u672c\u9898\u53ef\u4ee5\u4e0d\u8bb0\u5f55\u524d\u5bfc0\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u6392\u96640\u8ba1\u7b97lcm\uff0c**0\u5df2\u7ecf\u88ab\u6392\u9664\u4e86**.\n___\ncode:\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<cstring>\n#define ll long long\nusing namespace std;\nvoid read(ll &x)\n{\n\tint flag=1;\n\tx=0;\n\tchar c=getchar();\n\twhile(!isdigit(c))\n\t{\n\t\tif(c=='-')flag=-1;\n\t\tc=getchar();\n\t}\n\twhile(isdigit(c))\n\t{\n\t\tx=(x<<3)+(x<<1)+c-'0';\n\t\tc=getchar();\n\t}\n\tx*=flag;\n}\nint gcd(int a,int b){return !b?a:gcd(b,a%b);}\nint lcm(int a,int b){return a/gcd(a,b)*b;}\nint map[2521],remap[2521],cnt,num[25];\nll f[25][2521][55];\nll dfs(int now,int temp,int product,bool limits)\n{\n\tif(!now)return temp%product==0;\n\tif(!limits&&~f[now][temp][remap[product]])return f[now][temp][remap[product]];\n\tll ret=0;\n\tint maxn=limits?num[now]:9,i;\n\tfor(i=0;i<=maxn;++i)ret+=dfs(now-1,(temp*10+i)%2520,i?lcm(i,product):product,limits&&i==maxn);\n\treturn limits?ret:f[now][temp][remap[product]]=ret;\n}\nll solve(ll x)\n{\n\tint dig;\n\tfor(dig=0;x;x/=10)num[++dig]=x%10;\n\treturn dfs(dig,0,1,1);\n}\nvoid prepare()\n{\n\tmemset(f,-1,sizeof f);\n\tint i;\n\tfor(i=1;i<=2520;++i)\n\tif(2520%i==0)\n\t{\n\t\tmap[++cnt]=i;\n\t\tremap[i]=cnt;\n\t}\n}\nint main()\n{\n\tprepare();\n\tll t,l,r;\n\tread(t);\n\twhile(t--)\n\t{\n\t\tread(l);read(r);\n\t\tprintf(\"%lld\\n\",solve(r)-solve(l-1));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1574502257,
        "uid": 53264,
        "name": "zhangyuxing",
        "ccfLevel": 0,
        "title": "CF55D Beautiful numbers"
    }
]