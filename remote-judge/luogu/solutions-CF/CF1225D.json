[
    {
        "content": "# [CF1225D Power Products](https://www.luogu.com.cn/problem/CF1225D)\n\n### \u9898\u76ee\uff1a\n\n\u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217 $a$ \uff0c\u8981\u4f60\u6c42\u5e8f\u5217\u4e2d\u4e24\u4e2a\u6570\u4e58\u8d77\u6765\u7b49\u4e8e\u4e00\u4e2a\u6570\u7684 $k$ \u6b21\u65b9\u7684\u4e2a\u6570\u3002\n\n\u5f62\u8c61\u5316\u7684\uff0c\u5373\u8be2\u95ee\u5e8f\u5217\u4e2d $ a_i * a_j = x^k$ \u7684 $i,j$  $(i<j)$\u5bf9\u4e2a\u6570 \u3002\u9898\u76ee\u7ed9\u51fa $k$ \u3002\n\n### \u9898\u89e3\uff1a\n\n\u6211\u4eec\u5c06 $a_i$ \u548c $a_j$ \u5206\u89e3\u8d28\u56e0\u6570\uff0c\u4f1a\u5f97\u5230 \n\n$ a_i = p_1^{A_1} + p_2^{A_2} + p_3^{A_3} + \u2026 + p_t^{A_t}$\n\n$ a_j = p_1^{B_1} + p_2^{B_2} + p_3^{B_3} + \u2026 + p_t^{B_t}$\n\n\u90a3\u4e48\u8981\u6c42\u6211\u4eec\u5f97\u5230\u7684 $ a_i * a_j $ \u662f\u67d0\u6570\u7684 k \u6b21\u65b9\uff0c\u4e5f\u5c31\u662f\u8981\u6c42 $A_1 + B_1$ \u5230 $A_t + B_t$ \u90fd\u662f $k$ \u7684 \u500d\u6570\u3002 \u5373 $ (A_i + B_i) \\bmod k = 0$ \u3002\n\n\u73b0\u5728\u5230\u4e86\u600e\u4e48\u5339\u914d\u7684\u95ee\u9898\uff0c\u6211\u4eec\u628a\u6bcf\u4e2a\u6570\u7684 $A_i$ \u5148\u5bf9 $k$ \u53d6\u4e2a\u6a21\uff0c\u6c42\u4e2a\u54c8\u5e0c\u503c\uff0c\u7136\u540e\u585e\u5230 $map$ \u91cc\u9762\uff0c\u7136\u540e\u5728\u5bf9\u6bcf\u4e2a\u6570\u7684\u54c8\u5e0c\u503c\u627e\u4e0e\u4ed6\u4e92\u8865\u7684\u503c\u5373\u53ef\u3002\n\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n#define ull unsigned long long \nconst int maxn=1e6+7;\nconst int base=131;\nconst int mod=1e9+7; \nll read() \n{\n\tll res=0,f=1;\n\tchar c=getchar();\n\twhile(!isdigit(c) && c!='-') c=getchar();\n\tif(c=='-') f=-1,c=getchar();\n\twhile(isdigit(c)) res=(res<<1)+(res<<3)+c-48,c=getchar();\n\treturn res*f;\n}\nmap<ll,ll> mp;\nint tot,n,k;\nll ans;\null p[maxn];\nint isp[maxn],P[maxn],Pid[maxn],a[maxn];\nvoid shai(int n)     //\u7b5b\u4e00\u904d\u8d28\u6570 \n{\n\tisp[1]=1;\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\tif(!isp[i])\tP[++tot]=i,Pid[i]=tot;\n\t\tfor(int j=1;j<=tot && i*P[j]<=n;j++)\n\t\t{\n\t\t\tisp[i*P[j]]=1;\n\t\t\tif(i%P[j]==0) break;\n\t\t} \n\t}\n\treturn ; \n} \nint main()\n{\n//    freopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\tn=read(),k=read();\n\tfor(int i=1;i<=n;i++) a[i]=read();\n\tshai(100000);\n\tp[0]=1;\n\tfor(int i=1;i<=tot;i++)\n\t\tp[i]=p[i-1]*(ull)base;\n\tfor(int l=n;l;l--)\n\t{\n\t\tint x=a[l];\n\t\tull ha=0,ah=0;\n\t\tfor(int i=1;i<=tot;i++)\n\t\t{\n\t\t\tint cnt=0;\n\t\t\tif(x==1) break;\n\t\t\tif(P[i]*P[i]>x) break;\n\t\t\tif(x%P[i]) continue;\n\t\t\twhile(x%P[i]==0) { x/=P[i]; cnt++;} \n\t\t\tcnt%=k;\n\t\t\tif(cnt==0) continue;\n\t\t\tha+=p[i]*cnt; ah+=p[i]*(k-cnt);\n\t\t}\n\t\tif(!isp[x])\n\t\t\tha+=p[Pid[x]], ah+=p[Pid[x]]*(k-1);\n\t\tans+=mp[ah]; mp[ha]++;\n\t } \n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n \n```\n\n\u70b9\u4e2a\u8d5e\u5427qwq",
        "postTime": 1624412119,
        "uid": 78331,
        "name": "Melon_Musk",
        "ccfLevel": 5,
        "title": "CF1225D Power Products \u9898\u89e3"
    },
    {
        "content": "CF1225D\uff1a\n\n\u9898\u610f\uff1a$a_i * a_j = x^k$ \u6c42\u6709\u591a\u5c11\u7ec4\u4e0d\u540c\u7684$(i,j)$\u5bf9\n\n\u5f88\u5999\u7684\u4e00\u9053hash\u9898/\u96fe\n\n\u5bf9\u4e8e\u539f\u6765\u7684\u67ff\u5b50\uff1a\n$a_i * a_j = x^k$\n\n\u6211\u4eec\u53ef\u4ee5\u8f6c\u5316\u6210\u4e00\u79cd\u4ec0\u4e48\u95ee\u9898\u5462\uff1f\n\n\u770b\u5230\u540e\u9762\u7684 $x^k$\u4f60\u5c31\u4f1a\u60f3\u5230\u5206\u89e3\u539f\u5f0f\uff0c\u5229\u7528\u552f\u4e00\u5206\u89e3\u5b9a\u7406\u53ef\u4ee5\u5f97\u51fa\uff1a\n\n$$a_i = \\prod_{i = 1}^{n}{p_i}^{A_i}$$\n$$b_i = \\prod_{i = 1}^{n}{p_i}^{B_i}$$\n$$x = \\prod_{i = 1}^{n}{p_i}^{C_i}$$\n\n\u518d\u770b\u56de\u539f\u6765\u7684\u67ff\u5b50\uff0c\u53ef\u4ee5\u5f97\u5230\uff1a\n\n$$\\prod_{i = 1}^{n}{p_i}^{A_i} * \\prod_{i = 1}^{n}{p_i}^{B_i} = \\prod_{i = 1}^{n}{p_i}^{C_i^{k}}$$\n\n\u5316\u7b80\uff1a\n\n$$\\prod_{i = 1}^{n}{p_i}^{A_i + B_i} = \\prod_{i = 1}^{n}{p_i}^{C_i^{k}}$$\n\n\u56e0\u4e3a\u5bf9\u4e8e\u6240\u6709 $p_i$\u90fd\u662f\u8d28\u6570\uff0c\u4e14\u5bf9\u4e8e\u6240\u6709 $C_i$\u90fd\u662f\u672a\u5b9a\u7684\u503c\uff0c\u6240\u4ee5\u53ea\u8981\u6ee1\u8db3\uff1a\n$A_i + B_i = k * t$ \u5373 $(A_i + B_i) \\% k = 0$\n\n\u90a3\u4e48\u8fd9\u4e2a\u95ee\u9898\u89e3\u51b3\u4e86\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u8981\u5339\u914d\u4e86\uff0c\u80af\u5b9a\u4e0d\u53ef\u4ee5 ~~$n^2$\u66b4\u529b~~ \n\n\u90a3\u4e48\u5c31\u662fhash\u51fa\u573a\u4e86\uff0c\u4f17\u6240\u5468\u77e5 $hash$ \u662f\u4e2a\u5f88\u7384\u5b66\u7684\u4e1c\u897f\uff0c\u4f60\u628a\u6bcf\u4e2a $a_i$\u5206\u89e3\u51fa\u6765\u7684 $A_i$ \u770b\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5e76\u5bf9\u5b83$(A_i)$\u548c\u5b83\u7684\u4e92\u8865$hash$\u4e32$(B_i)$\u8fdb\u884c $hash$\u8fd0\u7b97\u8bb0\u5f55\u4e0b\u6765\uff0c\u5e76\u4e14\u7528\u795e\u5668$map$\u8bb0\u5f55\u6bcf\u4e2a$hash$\u51fa\u73b0\u7684\u4e2a\u6570\uff0c\u7136\u540e\u6700\u540e\u53ea\u8981$O(n)$\u7edf\u8ba1\u4e00\u4e0b\u5b83\u7684\u4e92\u8865$hash$\u4e32\u7684\u4e2a\u6570\u5c31\u884c\u4e86\u3002\n",
        "postTime": 1587270788,
        "uid": 155767,
        "name": "Tarsal",
        "ccfLevel": 0,
        "title": "CF1225D \u9898\u89e3"
    },
    {
        "content": "## 0x01 \u5927\u4f53\u601d\u8def\n\n\u5bf9\u4e8e\u4e00\u4e2a\u6570\uff0c\u627e\u5230\u548c\u5b83\u76f8\u4e58\u7b26\u5408\u9898\u610f\u7684\u6570\u6709\u591a\u5c11\u4e2a\uff0c\u52a0\u5165\u7b54\u6848\n\n## 0x02 \u7b80\u5355\u63a8\u5bfc\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u8bbe\u5f53\u524d\u6b63\u5904\u7406\u7684\u6570\u4e3a $i$\uff0c\u5c06\u5176\u5206\u89e3\u8d28\u56e0\u6570\u8fc7\u540e\u7684\u7ed3\u679c\u4e3a\n\n$i = {p_1}^{x_1}{p_2}^{x_2}{p_3}^{x_3}...{p_t}^{x_t}$\n\n\u7b26\u5408\u4e0e$i$\u914d\u5bf9\u7684\u6570$j$\uff0c\u5f53\u4e14\u4ec5\u5f53\u5c06$j$\u5206\u89e3\u8d28\u56e0\u6570\u540e\n\n$j = {p_1}^{y_1}{p_2}^{y_2}{p_3}^{y_3}...{p_t}^{y_t}$\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8d28\u56e0\u6570$p_i$\uff0c$x_i+y_i$\u4e3a$k$\u7684\u6574\u6570\u500d\u7684\u65f6\u5019\uff0c$i$\u4e0e$j$\u6210\u529f\u914d\u5bf9\n\n\u56e0\u4e3a $i * j = {p_1}^{x_1+y_1}{p_2}^{x_2+y_2}{p_3}^{x_3+y_3}...{p_t}^{x_t+y_t}$\uff0c\u6b64\u65f6$i*j$\u5fc5\u4e3a\u67d0\u6570$X^k$\n\n## 0x03 \u95ee\u9898\u8f6c\u5316\n\n\u73b0\u5728\u7684\u95ee\u9898\u53d8\u4e3a\u5bf9\u4e8e\u5f53\u524d\u5904\u7406\u7684$i$\uff0c\u5982\u4f55\u627e\u5230\u7b26\u5408**0x02**\u6240\u63d0\u5230\u7684\u6027\u8d28\u7684\u6570\u6709\u591a\u5c11\u4e2a\n\n\u4f46\u662f\u8981\u627e\u5bf9\u5e94\u8d28\u56e0\u6570\u6307\u6570\u52a0\u8d77\u6765\u4e3a$k$\u500d\u6570\u7684\uff0c\u53ef\u80fd\u52a0\u8d77\u6765\u4e3a$k$\u7684\u4e00\u500d\uff0c\u4e5f\u53ef\u80fd\u4e24\u500d...\u7b49\u7b49\u5f88\u591a\u60c5\u51b5\n\n\u4e3a\u4e86\u5316\u7b80\u8fd9\u6837\u7684\u95ee\u9898\uff0c\u8fd9\u91cc\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u6570\u90fd\u5206\u89e3\u8d28\u56e0\u6570\uff0c\u7136\u540e\u5c06\u6bcf\u4e2a\u8d28\u56e0\u6570\u7684\u6307\u6570\u5bf9$k$\u53d6\u4e2a\u6a21\uff0c\u8fd9\u6837\u5c31\u76f8\u5f53\u4e8e\u8981\u627e\u5230\u6709\u54ea\u4e00\u4e9b\u6570$j$\u548c\u5f53\u524d\u7684\u8fd9\u4e2a\u6570$i$\u7684\u5bf9\u5e94\u8d28\u56e0\u6570\u6307\u6570\u76f8\u52a0\u8d77\u6765\u4e3a$k$\u5c31\u884c\u4e86\u3002\n\n## 0x04 \u5b9e\u73b0\u8fc7\u7a0b\n\n\u5bf9\u4e8e\u5bfb\u627e\u7b26\u5408\u8981\u6c42\u7684\u6570$j$\u6709\u591a\u5c11\u4e2a\uff0c\u8fd9\u91cc\u53ef\u4ee5\u91c7\u7528\u7684\u65b9\u6cd5\u4e3a**\u54c8\u5e0c + std::map**\n\n\u6211\u4eec\u5bf9\u6bcf\u4e2a\u6570\u8d28\u56e0\u6570\u6307\u6570\u60c5\u51b5\u505a\u4e00\u6b21\u54c8\u5e0c\uff0c\u6307\u6570\u60c5\u51b5\u76f8\u540c\u7684\u6570\u5c06\u5f97\u5230\u76f8\u540c\u7684\u54c8\u5e0c\u503c\n\n\u6211\u4eec\u4f7f\u7528`std::map`\u5b58\u50a8\u5bf9\u5e94\u54c8\u5e0c\u503c\u4e0b\u6709\u591a\u5c11\u4e2a\u6570\uff0c\u7136\u540e\u4ece\u540e\u5f80\u524d\u5904\u7406\u6bcf\u4e00\u4e2a\u6570\n\n\u5c06\u6bcf\u4e00\u4e2a\u6570\u5206\u89e3\u8d28\u56e0\u6570\uff0c\u8fb9\u5206\u89e3\u7684\u540c\u65f6\uff0c\u53ef\u4ee5\u8fb9\u8ba1\u7b97\u51fa\u5f53\u524d\u8fd9\u4e2a\u6570$i$\u7684\u54c8\u5e0c\u503c**xhash**\uff0c\u4ee5\u53ca\u7b26\u5408\u4e0e$i$\u5339\u914d\u7684$j$\u7684\u54c8\u5e0c\u503c**aimhash**\u3002\n\n\u6700\u540e\uff0c\u67e5\u627emap\u91cc\u9762\u662f\u5426\u6709\u7b26\u5408\u8981\u6c42\u7684$j$\u7684\u54c8\u5e0c\u503c**aimhash**\uff0c\u5982\u679c\u6709\uff0c\u90a3\u4e48\u7b54\u6848\u52a0\u4e0a\u54c8\u5e0c\u503c\u4e3a**aimhash**\u7684\u6570\u7684\u4e2a\u6570\n\n\u6700\u540e\u5728**xhash**\u7684\u4f4d\u7f6e\u4e2a\u6570+1\n\n## 0x05 \u4ee3\u7801\n\n\u8fd9\u91cc\u4f7f\u7528\u7684\u662f`unsigned long long` \u81ea\u7136\u6ea2\u51fa\u7248\u672c\u7684\u54c8\u5e0c\uff0c$hashbase=2333$\n\n```cpp\n# pragma G++ optimize \"O2\"\n# pragma GCC optimize \"O2\"\n# pragma G++ optimize \"O3\"\n# pragma GCC optimize \"O3\"\n# pragma G++ optimize \"Ofast\"\n# pragma GCC optimize \"Ofast\"\n#include <bits/stdc++.h>\n#define LL(x) static_cast<long long>(x)\nusing namespace std;\n#define rg register\ntypedef long long ll;\ntypedef unsigned long long ull;\ninline int read(){\n\trg char ch = getchar();\n\tregister int ret = 0;\n\twhile(!(ch >= '0' && ch <= '9')) ch = getchar();\n\twhile(ch >= '0' && ch <= '9') ret = (ret << 3) + (ret << 1) + (ch ^ 48),ch = getchar();\n\treturn ret;\n}\nint n,k;\nconst int maxn = 200010;\nconst int hashbase = 2333;\nconst int maxcnt = 60000;\nint a[maxn];\nint prime[maxn],cnt=0;\nint primeid[maxn];\nbool vis[maxn];\null hashfac[maxn];\nvoid initPrime(){\n\tvis[1] = 1;\n\tfor(rg int i=2;i<100010;i++){\n\t\tif(!vis[i]) {\n\t\t\tprime[++cnt] = i;\n\t\t\tprimeid[i] = cnt;\n\t\t}\n\t\tfor(rg int j=1;j<=cnt;j++){\n\t\t\tif(prime[j] * i >= 100010) break;\n\t\t\tvis[prime[j] * i] = true;\n\t\t\tif(i % prime[j]) break;\n\t\t}\n\t}\n}\nvoid initHash(){\n\thashfac[1] = hashbase;\n\tfor(rg int i=2;i<=maxcnt;i++) hashfac[i] = hashfac[i-1] * hashbase;\n}\nmap<ull,int> mp;\nll ans = 0;\nvoid solve(int x){\n\tull xhash = 0;\n\tull aimhash = 0;\n\tint bakx = x;\n\tfor(rg int i=1;i<=cnt;i++){\n\t\tif(x == 1) break;\n\t\tif(prime[i] * prime[i] > x) break;\n\t\tif(x % prime[i] == 0){\n\t\t\tint pcnt = 0;\n\t\t\twhile(x % prime[i] == 0){\n\t\t\t\tx /= prime[i];\n\t\t\t\tpcnt++;\n\t\t\t\tif(pcnt >= k) pcnt -= k;\n\t\t\t}\n\t\t\txhash += hashfac[i] * pcnt;\n\t\t\tif(pcnt != 0){\n\t\t\t\taimhash += hashfac[i] * (k - pcnt);\n\t\t\t}\n\t\t}\n\t}\n\tif(x != 1){\n\t\txhash += hashfac[primeid[x]];\n\t\taimhash += hashfac[primeid[x]] * (k-1);\n\t}\n\tif(mp.count(aimhash)){\n\t\tans += mp[aimhash];\n\t}\n\tmp[xhash]++;\n}\nint main(){\n\tn = read(),k = read();\n\tfor(rg int i=1;i<=n;i++){\n\t\ta[i] = read();\n\t}\n\tinitPrime();\n\tinitHash();\n\t\n\tfor(rg int i=n;i>=1;i--){\n\t\tsolve(a[i]);\n\t}\n\t\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n\n```",
        "postTime": 1572230729,
        "uid": 83266,
        "name": "aRenBigFather",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1225D \u3010Power Products\u3011"
    },
    {
        "content": "\u9898\u76ee\u4ee5\u4e3a\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u8ba1\u7b97\u6709\u591a\u5c11\u7ec4\u6570\u7684\u4e58\u79ef\u5f00$k$\u6b21\u65b9\u662f\u6574\u6570\u4e14\u4e00\u7ec4\u6570\u5012\u8fc7\u6765\u7b97\u662f\u76f8\u540c\u7684\uff08\u56e0\u4e3a\u8981\u6c42$i<j$\uff09\n\n\u5bf9\u4e8e\u4e00\u4e2a\u53ef\u4ee5\u5f00$k$\u6b21\u65b9\u7684\u6570\uff0c\u5206\u89e3\u5176\u8d28\u56e0\u5b50\uff0c\u5fc5\u7136\u6709\u6bcf\u4e2a\u8d28\u56e0\u5b50\u7684\u6570\u91cf\u90fd\u662f$k$\u7684\u500d\u6570\uff0c\u4e3e\u4f8b\u6bd4\u5982$k$\u4e3a$2$\uff0c$1600$\u5206\u89e3\u8d28\u56e0\u5b50\u4e3a$1600=2*2*2*2*2*2*5*5$\uff0c\u5176\u4e2d\u6709$3k$\u4e2a$2$\u548c$k$\u4e2a$5$\uff0c\u5f00$k(2)$\u6b21\u65b9\u540e\u4e3a$40=2*2*2*5$\uff0c\u5305\u542b$3$\u4e2a$2$\u548c$1$\u4e2a5\uff0c\u6240\u4ee5\u53ef\u89c1\uff0c\u5982\u679c\u4e24\u4e2a\u6570\u7684\u4e58\u79ef\u5f00$k$\u6b21\u65b9\u662f\u6574\u6570\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u6570\u4e00\u5b9a\u5305\u542b\u52a0\u8d77\u6765\u662f$k$\u7684\u500d\u6570\u4e2a\u76f8\u540c\u7684\u8d28\u56e0\u5b50\uff0c\u90a3\u4e48\u8fd9\u4e2a\u95ee\u9898\u5c31\u8f6c\u53d8\u6210\u4e86\u6c42\u51fa\u4e00\u4e2a\u6570\u7684\u8d28\u56e0\u5b50\u5e8f\u5217\uff0c\u5bfb\u627e\u4e0e\u5b83\u4e92\u8865\u7684\u8d28\u56e0\u5b50\u5e8f\u5217\uff08\u4e92\u8865\uff1a\u4e24\u4e2a\u6570\u6240\u6709\u8d28\u56e0\u5b50\u4e2a\u6570\u52a0\u5728\u4e00\u8d77\u90fd\u662f$k$\u7684\u500d\u6570\uff09\n\n\u4e8e\u662f\u672c\u9898\u5f97\u89e3\uff0c\u5bf9\u4e8e\u5e8f\u5217\u6570\u91cf\u53ef\u4ee5\u4f7f\u7528$map$\u4fdd\u5b58\uff0c$map$\u7684\u952e\u503c\u9ed8\u8ba4\u662f$0$\uff0c\u6bcf\u6b21\u626b\u5230\u4e00\u4e2a\u6570\u5c31\u628a\u8fd9\u4e2a\u6570\u5e8f\u5217\u5bf9\u5e94\u7684\u952e\u503c++\u5c31\u53ef\u4ee5\u4e86\n\n**\u7531\u4e8e\u849f\u84bb\u6211\u662f\u770b\u4e86dalao\u7684\u4ee3\u7801\u624d\u60f3\u51fa\u6765\u7684\uff0c\u53ef\u80fd\u4ee3\u7801\u4e0e\u4e00\u4e9bdalao\u76f8\u4f3c\u5ea6\u5f88\u9ad8\uff0c\u7279\u6b64\u58f0\u660e\u7edd\u975e\u6284\u88ad**\n\n```cpp\n#include<iostream>\n#include<vector>\n#include<map>\nusing namespace std;\n\ntypedef pair<int, int> intpair;\n\nconst int maxn = 100010;\n\nint minprime[maxn];\nmap<vector<intpair>, int>cnt;\nvector<intpair>sub;\nvector<intpair>csub;\nint n, k;\nint a[maxn];\nunsigned long long int ans;\t//ans\u5f88\u5927\uff0c\u4f1a\u8d85\u51faint\u8303\u56f4\n\nvoid init()\n{//\u6c42\u51fa\u6240\u6709\u6570\u7684\u6700\u5c0f\u8d28\u56e0\u5b50\uff0c\u7701\u53bb\u5bf9\u8d28\u56e0\u5b50\u4e2a\u6570\u5e8f\u5217\u8fdb\u884c\u6392\u5e8f\u7684\u9ebb\u70e6\n\tfor (int i = 2; i <= maxn; i++)\n\t{\n\t\tif (minprime[i]) continue;\t//\u4e0d\u662f\u8d28\u6570\n\t\tminprime[i] = i;\t//\u8d28\u6570\u7684\u6700\u5c0f\u8d28\u56e0\u5b50\u662f\u81ea\u5df1\n\t\tfor (int j = i; j <= maxn; j += i)\n\t\t{\n\t\t\tif (!minprime[j]) minprime[j] = i;\n            //j\u662fi\u7684\u500d\u6570\uff0cj\u7684\u6700\u5c0f\u8d28\u56e0\u5b50\u662fi\n\t\t}\n\t}\n}\n\ninline void divide(int a)\n{\n\tint pro;\t//\u8868\u793a\u8d28\u56e0\u5b50\u6570\u91cf\n\tint t;\n\twhile (a != 1)\n\t{\n\t\tt = minprime[a];\n\t\tpro = 0;\n\t\twhile (a != 1 && !(a % t))\n\t\t{\n\t\t\ta /= t;\n\t\t\t(pro += 1) %= k;\t\n            //\u7531\u4e8e\u8d28\u56e0\u5b50\u6570\u91cf\u548c\u53ea\u8981\u662fk\u7684\u500d\u6570\u5c31\u53ef\u4ee5\u4e86\uff0c\u6240\u4ee5\u5bf9k\u53d6\u6a21\n\t\t}\n\t\tif (pro)\t\n        //\u5982\u679c\u67d0\u8d28\u56e0\u5b50\u7684\u4e2a\u6570\u672c\u6765\u5c31\u662fk\u7684\u6574\u6570\u500d\uff0c\u90a3\u5c31\u4e0d\u5fc5\u52a0\u5165\u5e8f\u5217\n\t\t{\n\t\t\tsub.push_back(intpair(t, pro));\t\n            //sub\u4e3a\u8fd9\u4e2a\u6570\u7684\u8d28\u56e0\u5b50\u6570\u91cf\u5e8f\u5217\n\t\t\tcsub.push_back(intpair(t, k - pro));\n            //csub\u4e3a\u8fd9\u4e2a\u6570\u7684\u4e92\u8865\u5e8f\u5217\n\t\t}\n\t}\n}\n\nint main()\n{\n\tinit();\n\tcin >> n >> k;\n\tfor (int i = 1; i <= n; i++) cin >> a[i];\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tdivide(a[i]);\n\t\tans += cnt[csub];\t//ans+=\u4e92\u8865\u5e8f\u5217\u7684\u6570\u91cf\n\t\tcnt[sub]++;\t//\u8fd9\u79cd\u5e8f\u5217\u7684\u6570\u91cf++\n\t\tsub.clear();\n\t\tcsub.clear();\n\t}\n\tcout << ans;\n\treturn 0;\n}\n```",
        "postTime": 1572172510,
        "uid": 205228,
        "name": "thjkhdf12",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1225D \u3010Power Products\u3011"
    },
    {
        "content": "\u672c\u6587\u5c06\u540c\u6b65\u5230 [Hexo \u535a\u5ba2](https://mraymes.github.io/).\n\n\u9898\u76ee\u8ba9\u4f60\u6c42 ${ a_1, a_2, a_3, \\cdots, a_n }$ \u4e2d\u80fd\u6ee1\u8db3\u79ef\u4e3a\u5f62\u5982 $x^k$ \u7684\u6570\u7684\u6570\u5bf9\u4e2a\u6570 ($k$ \u662f\u7ed9\u5b9a\u7684), \u7b2c\u4e00\u53cd\u5e94\u4fbf\u662f\u5c06\u6240\u6709\u53ef\u80fd\u7684 $x^k$ \u679a\u4e3e\u51fa\u6765, \u5e76\u4e14\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\u90fd\u679a\u4e3e\u4e00\u904d\u56e0\u5b50, \u8ba1\u7b97\u7b26\u5408\u6761\u4ef6\u7684\u6570\u5bf9\u4e2a\u6570.\n\n<!--more-->\n\n\u5bf9\u4e8e $k > 2$ \u7684\u60c5\u51b5, \u8fd9\u79cd\u65b9\u6cd5\u80fd\u5361\u8fdb\u65f6\u9650, \u800c\u5bf9\u4e8e $k = 2$ \u7684\u60c5\u51b5\u6765\u8bb2, \u8fd9\u79cd\u65b9\u6cd5\u4f1a\u8d85\u65f6, \u56e0\u6b64\u6211\u4eec\u5c31\u8981\u60f3\u4e00\u79cd\u9002\u7528 $k = 2$ \u5e76\u4e14\u66f4\u52a0\u9ad8\u6548\u7684\u65b9\u6cd5.\n\n\u5982\u679c\u4e00\u4e2a\u6570 $n$ \u4e2d\u5df2\u7ecf\u6709\u4e86\u5f62\u5982 $x^2$ \u7684\u56e0\u5b50, \u90a3\u4e48\u5c06 $\\dfrac{n}{x^2}$ \u4e0e\u4efb\u4f55\u4e00\u4e2a\u6570\u76f8\u4e58\u662f\u4e0d\u4f1a\u5f71\u54cd\u79ef\u662f\u5426\u662f\u4e00\u4e2a\u5b8c\u5168\u5e73\u65b9\u6570. \u6362\u4e00\u53e5\u8bdd\u8bf4, \u5982\u679c $nm$ \u662f\u4e00\u4e2a\u5b8c\u5168\u5e73\u65b9\u6570, \u90a3\u4e48 $\\dfrac{nm}{x^2}$ \u4e5f\u662f\u4e00\u4e2a\u5b8c\u5168\u5e73\u65b9\u6570; \u5982\u679c $\\dfrac{nm}{x^2}$ \u4e0d\u662f\u5b8c\u5168\u5e73\u65b9\u6570, \u90a3\u4e48 $nm$ \u4e5f\u4e0d\u662f\u5b8c\u5168\u5e73\u65b9\u6570.\n\n\u5f53\u6211\u4eec\u5bf9 $a$ \u4e2d\u6240\u6709\u7684\u6570\u90fd\u5982\u6b64\u5904\u7406\u540e, \u6570\u5bf9\u7684\u4e2a\u6570\u5c31\u7b49\u4e8e\u65b0\u6570\u7ec4\u4e2d, \u6ee1\u8db3\u4e24\u4e2a\u6570\u76f8\u7b49\u7684\u6570\u5bf9\u7684\u4e2a\u6570. \u5982\u679c\u4e24\u4e2a\u6570\u4e0d\u7b49, \u90a3\u4e48\u80af\u5b9a\u4e0d\u80fd\u76f8\u4e58\u5f97\u5230\u5b8c\u5168\u5e73\u65b9\u6570, \u56e0\u4e3a\u6240\u6709\u5b8c\u5168\u5e73\u65b9\u56e0\u5b50\u5df2\u7ecf\u53bb\u9664\u4e86.\n\n\u6700\u540e\u6709\u4e00\u4e2a\u5751\u70b9: \u4e0d\u8981\u7528\u5feb\u901f\u5e42\u6c42\u7b26\u5408\u6761\u4ef6\u7684\u5f62\u5982 $x^k$ \u7684\u6570. \u641e\u4e0d\u597d\u5c31\u4f1a\u9519. \u53d6\u6a21\u7684\u64cd\u4f5c\u4e5f\u662f\u4e0d\u53ef\u53d6\u7684, \u56e0\u4e3a\u8d85\u51fa\u4e86\u8303\u56f4\u4e5f\u65e0\u6cd5\u77e5\u9053. ~~\u8fd9\u662f\u4e2a\u4eba\u4eb2\u8eab\u7ecf\u5386~~\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nusing ll = long long;\n\nint n;\nint m;\nint exponent; // \u6307\u6570\nll pmax;\nint nmax;\nint a[100001];\nll b[100001];\nint cnt[100001];\nll ans = 0;\n\ntemplate <typename T>\ninline T read() {\n    T x = 0;\n    T multiplier = 1;\n    char ch = getchar();\n    while (ch < '0' || ch > '9') {\n        if (ch == '-') {\n            multiplier = -1;\n        }\n        ch = getchar();\n    }\n    while (ch >= '0' && ch <= '9') {\n        x = (x << 3) + (x << 1) + (ch & 15);\n        ch = getchar();\n    }\n    return x * multiplier;\n}\n\nint main() {\n    n = read<int>(), exponent = read<int>();\n    for (int i = 1; i <= n; i++) {\n        a[i] = read<int>();\n    }\n\n    if (exponent == 2) { // \u6307\u6570\u4e3a 2\n        for (int i = 1; i <= n; i++) {\n            for (int j = 2; j * j <= a[i]; j++) {\n                while (a[i] % (j * j) == 0) { // \u6709\u5b8c\u5168\u5e73\u65b9\u56e0\u5b50\n                    a[i] /= j * j; // \u53bb\u9664\u56e0\u5b50\n                }\n            }\n            cnt[a[i]]++; // \u6876\n            nmax = max(nmax, a[i]); // \u6700\u5927\u503c\n        }\n\n        for (int i = 1; i <= nmax; i++) {\n            // \u5904\u7406\u540e\u503c\u4e3a i \u7684\u6570\u4e2d\u4efb\u9009\u4e24\u4e2a, C(cnt[i], 2)\n            ans += 1LL * cnt[i] * (cnt[i] - 1) / 2;\n        }\n        printf(\"%lld\\n\", ans);\n    } else {\n        for (int i = 1; i <= n; i++) {\n            cnt[a[i]]++; // \u8fd8\u662f\u6876\n        }\n\n        // \u6392\u5e8f\u4ee5\u4fbf\u53d6\u6700\u5927\u503c (nmax) \u4ee5\u53ca\u6210\u7ee9\u6700\u5927\u503c (pmax)\n        sort(a + 1, a + n + 1);\n        nmax = a[n];\n        pmax = 1LL * a[n - 1] * a[n];\n\n        // b[i] \u4e3a i \u7684 k \u6b21\u65b9\n        for (int i = 1; true; i++) {\n            b[i] = 1;\n            for (int j = 1; j <= exponent; j++) {\n                b[i] *= i;\n                if (b[i] > pmax) { // \u8d8a\u754c\u5c31\u9000\u51fa\n                    b[i] = -1;\n                    break;\n                }\n            }\n            if (!~b[i]) { // \u7b49\u4ef7\u4e8e b[i] == -1\n                m = i - 1; // m \u4e3a\u6700\u5927\u5e95\u6570\n                break;\n            }\n        }\n\n        for (int i = 1; i <= m; i++) {\n            // \u679a\u4e3e\u56e0\u5b50\n            for (int j = 1; 1LL * j * j <= b[i]; j++) {\n                if (b[i] % j == 0) {\n                    ll k = b[i] / j;\n                    if (k > nmax) { // \u8d8a\u754c\u4e86\n                        continue;\n                    }\n                    if (j ^ k) { // \u4e24\u4e2a\u56e0\u5b50\u4e0d\u76f8\u7b49, \u76f4\u63a5\u76f8\u4e58\n                        ans += 1LL * cnt[j] * cnt[k];\n                    } else { // \u4e24\u4e2a\u56e0\u5b50\u76f8\u7b49, C(cnt[j], 2)\n                        ans += 1LL * cnt[j] * (cnt[j] - 1) / 2;\n                    }\n                }\n            }\n        }\n\n        printf(\"%lld\\n\", ans);\n    }\n\n    return 0;\n}\n```\n\n",
        "postTime": 1572352316,
        "uid": 22227,
        "name": "mraymes",
        "ccfLevel": 7,
        "title": "Solution for Codeforces Problem 1246B - Power Products"
    },
    {
        "content": "\u6628\u5929\u7b2c\u4e00\u6b21\u6253CF\uff0c\u867d\u7136\u76f4\u63a5specialist, 1462\uff0c\u4f46\u5361\u5728\u4e86\u8fd9\u9898\u3002\n\n\u5148\u7ed9\u51fa\u5b98\u65b9\u9898\u89e3\uff1a\n\nhttps://codeforces.com/blog/entry/70898  \n\n\u9898\u610f\u7b80\u6790\uff1a\u4ecen\u4e2a\u6570\u4e2d\u9009\u51fa\u4e24\u4e2a\u6570\uff0c\u4f7f\u4e24\u4e2a\u6570\u7684\u79ef\u4e3ak\u6b21\u65b9\u6570\uff0c\u6c42\u7b26\u5408\u9898\u610f\u7684\u65b9\u6848\u6570\u3002\n\n\u5b98\u65b9\u65b9\u6cd5\u662f\u7528\u4e86map\uff0c\u4f46\u6211\u8003\u8bd5\u65f6\u60f3\u5230\u4e86\u4e00\u79cd\u7279\u6b8a\u7684\u65b9\u6cd5\u3002\u6211\u6628\u5929\u505a\u4e86[LOJ10050 The XOR Largest Pair](https://loj.ac/problem/10050)\u8fd9\u9898\uff0c\u4e8e\u662f\u60f3\u5230\u4e86\u7528\u5b57\u5178\u6811\u7684\u89e3\u6cd5\uff1a\u56e0\u4e3a\u8fd9\u4e9b\u6570\u53ef\u4ee5\u552f\u4e00\u5206\u89e3\uff0c\u6240\u4ee5\u7528\u5b57\u5178\u6811\u7684\u8fb9\u5b58\u50a8\u8d28\u6570\u7684\u6307\u6570\uff0c\u6839\u636e\u5f53\u524d\u8282\u70b9\u7684\u6df1\u5ea6\u5224\u65ad\u8fd9\u4e2a\u8282\u70b9\u5f80\u4e0b\u8fde\u7684\u8fb9\u5bf9\u5e94\u7684\u8d28\u6570\u3002\n\n\u7ed3\u679c\u6211\u53d1\u73b0\u8fd9\u4e2a\u505a\u6cd5\u7684\u7ec6\u8282\u975e\u5e38\u591a\uff0c\u5bfc\u81f4\u6211\u540e\u6765\u53c8\u8c03\u4e86\u4e24\u4e2a\u5c0f\u65f6\u3002  \n\n\u9996\u5148\u662f\u56e0\u4e3a\u5b57\u5178\u6811\u7a7a\u95f4\u5927\uff0c\u6240\u4ee5\u9700\u8981\u63a7\u5236\u5b57\u5178\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\u7684\u8fb9\u6570\u3002\u867d\u7136`k<=100`\uff0c\u4f46\u662f\u6211\u4eec\u77e5\u9053$2^{16}=65536,2^{17}>100000$\u3002\u6211\u4e00\u5f00\u59cb\u6ca1\u6709\u4ed4\u7ec6\u601d\u8003\uff0c\u53ea\u8bbe\u5b9a\u8fb9\u6570\u4e3a16\u3002\u4f46\u5361\u5728\u4e86\u7b2c9\u7ec4\u6570\u636e\uff08\u7b2c9\u7ec4\u6570\u636en=100000\uff0ck=32\uff0c\u4e00\u534a\u662f1\uff0c\u4e00\u534a\u662f65536\uff0c\u53ef\u4ee5\u7528\u8fd9\u7ec4\u6570\u636e\u5bf9\u62cd\uff09\u3002\u6240\u4ee5\u8fb9\u6570\u5e94\u4e3a32\uff08\u56e0\u4e3ak\u6700\u5927\u4e3a32\uff0c\u5373\u4e24\u4e2a65536\u76f8\u4e58\uff09\u3002\n\n\u4f46\u662f\uff0c\u8fd9\u5e76\u4e0d\u4ee3\u8868k>32\u65f6\u5c31\u53ef\u4ee5\u8f93\u51fa0\uff0c\u56e0\u4e3a\u6b64\u65f6\u8fd8\u6709\u4e24\u4e2a1\u76f8\u4e58\u7684\u60c5\u51b5\uff0c\u9700\u8981\u7279\u5224\u4e00\u4e0b\uff08\u7b2c8\u7ec4\u6570\u636e\u5c31\u662f100000\u4e2a1\uff09\u3002\u7ed3\u679c\u6211\u6ca1\u6709\u5f00long long\uff0c\u53c8\u6d6a\u8d39\u4e86\u63d0\u4ea4\u6b21\u6570\u3002  \n\u8bbe$a={p_1}^{c_1}{p_2}^{c_2}...{p_m}^{c_m}$\uff0c\u5f53$ab=x^k$\uff0c\u6709$b={p_1}^{d_1}{p_2}^{d_2}...{p_n}^{d_n}$\uff0c\u4e14$c_i+d_i=yk(y \\in Z)$\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u4e24\u4e2a\u6570\u5206\u89e3\u8d28\u56e0\u6570\u540e\u5f97\u5230\u7684\u8d28\u6570\u7684\u6b21\u6570\u6a21\u4e00\u4e0bk\u3002\u6211\u4eec\u6bcf\u6b21\u63d2\u5165\u4e00\u4e2a\u6570\uff0c\u5e76\u5728\u5df2\u63d2\u5165\u7684\u6570\u5b57\u4e2d\u5bfb\u627e\u4e0e\u8fd9\u4e2a\u6570\u76f8\u4e58\u6ee1\u8db3\u9898\u610f\u7684\u6570\u3002\u5f53\u6211\u4eec\u63d2\u5165\u4e00\u4e2a\u6570\uff0c\u7528`p`\u8868\u793a\u6240\u5728\u8282\u70b9\uff0c\u7528`p1`\u8868\u793a\u5f80\u7b54\u6848\u65b9\u5411\u8d70\u7684\u8282\u70b9\uff0c\u5982\u679c\u5c06\u8981\u5f80`trie[p][sum]`\u8d70\uff08sum\u662f\u5f53\u524d\u8282\u70b9\u6240\u5728\u5b57\u5178\u6811\u5c42\u6570\u5bf9\u5e94\u7684\u8d28\u6570\u6a21k\u7684\u503c\uff09\uff0c\u5c31\u628a`p1`\u5f80`trie[p1][(k-sum)%k]`\u8d70\uff0c\u5982\u4e0d\u80fd\u8d70\u5219\u65e0\u89e3\u3002\n\n\u5f53$p$\u5230\u8fbe\u4e86\u6700\u7ec8\u4f4d\u7f6e\u65f6\uff0c\u6211\u4eec\u7528\u4e00\u7ec4vector\u5b58\u4e00\u4e0b\u8fd9\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\u3002\n\n\u4e3a\u4e86\u51cf\u5c11\u65f6\u95f4\u548c\u7a7a\u95f4\uff0c\u6211\u53ea\u628a$sqrt(100000)=317$\u4ee5\u5185\u7684\u8d28\u6570\u548c\u4ed6\u4eec\u7684\u6b21\u6570\u5b58\u5728\u5b57\u5178\u6811\uff0c\u5f53x\u9664\u5c3d317\u4ee5\u4e0b\u7684\u8d28\u6570\u65f6\uff0cx\u6700\u591a\u53ea\u5269\u4e0b\u4e00\u4e2a\u5927\u4e8e317\uff0c\u4e14\u6b21\u6570\u4e3a1\u7684\u8d28\u6570\u3002\u6211\u4eec\u540c\u6837\u653e\u5230\u4e00\u4e2avector\u91cc\uff0c\u8bbf\u95ee\u5230\u6700\u7ec8\u8282\u70b9\u65f6\uff0c\u5728\u8fd9\u4e2a\u8282\u70b9\u7684vector\u91cc\u9010\u4e2a\u6bd4\u8f83\u3002\n\n\u4f46\u5b57\u5178\u6811\u7684\u5927\u5c0f\u6bd4\u8f83\u96be\u786e\u5b9a\u3002\u672c\u5730\u7684\u968f\u673a\u6570\u636e\u4e0b\u5b57\u5178\u6811\u4e0d\u8d85\u8fc7$2n$\u5c42\uff0c\u4f46\u5b9e\u9645\u4e0b\u6211\u4e3a\u4e86\u4fdd\u9669\uff0c\u5f00\u4e865000000\u5361\u7a7a\u95f4\u3002\n\n\u597d\u50cf\u8bf4\u5f97\u4e0d\u662f\u975e\u5e38\u6e05\u695a\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\u8bb2\u89e3\u5427\u3002\n\n```\n#include<cstdio>\n#include<vector>\nusing namespace std;\nconst int N=500000;\nint trie[N][33],tot;\nint a[N];\nint n,k;\nlong long ans;\nint prime[70],cnt;\nvector<int> v[N],vis[N];\nvoid pri(){//\u7b5b\u6389371\u4ee5\u5185\u7684\u8d28\u6570\n\tbool vis[420]={};\n\tfor(int i=2;i<=317;i++){\n\t\tif(!vis[i])prime[++cnt]=i;\n\t\tfor(int j=i*i;j<=317;j+=i)vis[j]=1;\n\t}\n}\nvoid insert(int x){//\u63d2\u5165\u4e00\u4e2a\u6570\uff0c\u540c\u65f6\u67e5\u627e\u4e4b\u524d\u63d2\u5165\u7684\u6570\u4e2d\u4e0ex\u76f8\u4e58\u6ee1\u8db3\u9898\u610f\u7684\u6570\n\tint p=0,p1=0;//p\u662f\u63d2\u5165\u7684\u6570\u7684\u5f53\u524d\u8282\u70b9\uff0cp1\u662f\u67e5\u627e\u4e4b\u524d\u5bf9\u5e94\u7684\u6570\u7684\u8282\u70b9\n\tfor(int i=1;i<=cnt;i++){\n\t\tint sum=0;\n\t\twhile(x%prime[i]==0)x/=prime[i],sum++;\n\t\tsum%=k;\n\t\tif(!trie[p][sum])trie[p][sum]=++tot;\n\t\tp=trie[p][sum];\n\t\tif(p1!=-1&&trie[p1][(k-sum)%k])p1=trie[p1][(k-sum)%k];//p1\u4e0ep\u5f80\u521a\u597d\u76f8\u53cd\u7684\u65b9\u5411\u8d70\n\t\telse p1=-1;\n\t}\n\tif(p1!=-1){\n\t\tfor(int i=0;i<v[p1].size();i++){//\u6bd4\u8f83\u4e00\u4e0b\uff0c\u66f4\u65b0\u7b54\u6848\n\t\t\tif(v[p1][i]==x){\n\t\t\t\tans+=vis[p1][i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tbool flag=0;\n\tfor(int i=0;i<v[p].size();i++){//\u63d2\u5165\n\t\tif(v[p][i]==x){\n\t\t\tflag=1;\n\t\t\tvis[p][i]++;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(!flag){\n\t\tv[p].push_back(x);\n\t\tvis[p].push_back(1);\n\t}\n}\nint main(){\n\tscanf(\"%d%d\",&n,&k);\n\tif(k>32){//\u7279\u5224\n\t\tlong long sum=0;\n\t\tfor(int i=1,x;i<=n;i++){\n\t\t\tscanf(\"%d\",&x);\n\t\t\tif(x==1)sum++;\n\t\t}\n\t\tprintf(\"%lld\",sum*(sum-1)/2);\n\t\treturn 0;\n\t}\n\tpri();\n\tfor(int i=1;i<=n;i++){\n\t\tint x;\n\t\tscanf(\"%d\",&x);\n\t\tinsert(x);\n\t}\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1572179799,
        "uid": 144740,
        "name": "\u9006\u6d41\u4e4b\u65f6",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1225D \u3010Power Products\u3011"
    },
    {
        "content": "\u7ed9\u4e2a\u6bd4\u8f83\u79bb\u8c31\u7684\u505a\u6cd5\u5427\u3002\n\n\u503c\u57df\u53ea\u6709 $10^5$\uff0c\u56e0\u6b64\u4e24\u4e2a\u6570\u7684\u4e58\u79ef\u53ea\u6709 $10^{10}$ \u7ea7\u522b\uff0c\u5728 $k \\ge 3$ \u7684\u65f6\u5019\u53ea\u6709\u4e0d\u5230 $3 \\times 10^3$ \u4e2a\u6709\u6548\u7684 $x$ \u80fd\u6ee1\u8db3 $x^k$ \u5728\u8303\u56f4\u5185\u3002\u6240\u4ee5\u8fd9\u90e8\u5206\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u3002\n\n$k = 2$ \u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u4e00\u4e2a\u6570 $n$ \u53ea\u6709\u4e0d\u8d85\u8fc7\u4e00\u4e2a $> \\sqrt n$ \u7684\u8d28\u56e0\u5b50\uff0c\u6240\u4ee5\u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a\u8d28\u56e0\u5b50\u5c06\u6240\u6709\u7684\u6570\u5206\u7c7b\uff0c\u90a3\u4e48\u53ea\u6709\u540c\u7c7b\u7684\u6570\u4e4b\u95f4\u624d\u80fd\u4ea7\u751f\u8d21\u732e\uff08\u53ea\u6709\u540c\u65f6\u5177\u6709\u8fd9\u4e2a\u8d28\u56e0\u5b50\u624d\u80fd\u4f7f\u5f97\u4e58\u79ef\u8fd9\u4e2a\u8d28\u56e0\u5b50\u7684\u6307\u6570\u4e3a\u5076\u6570\uff09\u3002\n\n\u5bf9\u4e8e $\\le \\sqrt n$ \u7684\u8d28\u56e0\u5b50\uff0c\u5c06\u5b83\u4eec\u6307\u6570\u7684\u5947\u5076\u6027\u538b\u6210\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\uff0c\u5728\u540c\u7c7b\u6570\u7684\u54c8\u5e0c\u8868\u5185\u67e5\u8be2\u76f8\u540c\u5947\u5076\u6027\u7684\u6570\u4e2a\u6570\u5373\u53ef\u3002\n\n\u8fd9\u90e8\u5206\u6709\u4e2a\u5751\u70b9\u662f $< \\lceil\\sqrt{10^5}\\rceil = 317$ \u7684\u8d28\u6570\u4e2a\u6570\u7565\u5927\u4e8e $64$\uff0c\u56e0\u6b64\u7528\u4e00\u4e2a $64$ \u4f4d\u6574\u6570\u662f\u538b\u4e0d\u4e0b\u7684\uff0c\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u662f\u76f4\u63a5\u5f00 `__int128`\u3002vp \u7684\u65f6\u5019\u56e0\u4e3a\u8fd9\u4e2a\u9001\u4e86\u597d\u51e0\u53d1\u7f5a\u65f6/px\n\n\n```cpp\n#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/hash_policy.hpp>\n\ntypedef long long LL;\n\nconst int Maxn = 1e5 + 5, A = 317;\n\n__gnu_pbds::gp_hash_table<long long, int> c;\nstd::map<__int128, int> g[Maxn];\n\nbool vis[Maxn]; int pri[Maxn], cp;\n\nvoid sieve(int N) {\n\tfor(int i = 2; i <= N; ++i) {\n\t\tif(!vis[i]) pri[++cp] = i;\n\t\tfor(int j = 1; j <= cp && pri[j] <= N / i; ++j) {\n\t\t\tvis[i * pri[j]] = 1;\n\t\t\tif(i % pri[j] == 0) break;\n\t\t}\n\t}\n}\n\nLL pk[Maxn]; int cc;\n\nconst __int128 I = 1;\n\nint main() {\n\tLL ans = 0;\n\tint n, k, x; std::cin >> n >> k;\n\tif(k >= 3) {\n\t\tfor(int i = 1; i <= 3000; ++i) {\n\t\t\tpk[i] = 1;\n\t\t\tbool flag = 1;\n\t\t\tfor(int j = 1; j <= k; ++j) {\n\t\t\t\tpk[i] *= i;\n\t\t\t\tif(pk[i] > 10000000000ll) {\n\t\t\t\t\tflag = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!flag) break; cc = i;\n\t\t}\n\t\twhile(n--) {\n\t\t\tstd::cin >> x;\n\t\t\tfor(int i = 1; i <= cc; ++i) {\n\t\t\t\tif(pk[i] % x) continue;\n\t\t\t\tans += c[pk[i] / x];\n\t\t\t}\n\t\t\tc[x]++;\n\t\t}\n\t} else {\n\t\tsieve(100000);\n\t\twhile(n--) {\n\t\t\tstd::cin >> x; __int128 S = 0;\n\t\t\tfor(int i = 1; pri[i] <= 100000 / pri[i]; ++i) {\n\t\t\t\tint p = pri[i];\n\t\t\t\twhile(x % p == 0) {\n\t\t\t\t\tx /= p;\n\t\t\t\t\tS ^= (I << (i - 1));\n\t\t\t\t}\n\t\t\t}\n\t\t\tans += g[x][S];\n\t\t\tg[x][S]++; \n\t\t}\n\t\tstd::cout << ans;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1636285562,
        "uid": 119009,
        "name": "int1",
        "ccfLevel": 0,
        "title": "1246B"
    },
    {
        "content": "\u8fd9\u9898\u8fd8\u662f\u6709\u70b9\u5751\u7684\u3002\n\n\u5148\u8bb2\u4e00\u4e2a\u9519\u8bef\u7684\u601d\u8def\uff1a\n\n\u6211\u4eec\u628a\u6240\u6709\u5f62\u5982$x^k$\u5f62\u5f0f\u7684\u6570\u5168\u90e8\u627e\u51fa\u6765\uff0c\u7edf\u8ba1\u6bcf\u4e2a\u6570\u5728$a$\u4e2d\u51fa\u73b0\u4e86\u51e0\u6b21\u3002\u7136\u540e\u679a\u4e3e\u6bcf\u4e00\u4e2a$a_i$\uff0c\u5224\u65ad\u6b21\u6570\n\n\u8fd9\u4e2a\u505a\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(n log_k \\sum_{i=1}^n a_i)$\n\n\u5728$k \\geq 3$\u7684\u65f6\u5019\u53ef\u4ee5\u901a\u8fc7\uff0c\u4f46\u8fd9\u9898\u6076\u5fc3\u5c31\u6076\u5fc3\u5728\u6709$k==2$\u7684\u60c5\u51b5\u3002\n\n\u6ce8\u610f\u6709\u4e00\u4e2a\u7279\u6b8a\u6027\u8d28\uff1a\u5982\u679c\u4e24\u4e2a\u6570\u4e4b\u79ef\u662fk\u6b21\u65b9\uff0c\u90a3\u4e48\u4e8c\u8005\u7684\u8d28\u56e0\u5b50\u6b21\u6570\u4e4b\u548c\u4e00\u5b9a\u662f$k$\u7684\u500d\u6570\u3002\n\n\u4e00\u79cd\u6b63\u786e\u601d\u8def\u662f\u5bf9$k==2$\u7684\u60c5\u51b5\u505a\u7279\u522b\u5904\u7406\uff0c\u628a\u6bcf\u4e00\u4e2a$a_i$\u5206\u89e3\u8d28\u56e0\u6570\u4e4b\u540e\u5224\u65ad$a_i$\u4e2d\u6709\u51e0\u4e2a\u8d28\u56e0\u5b50$k$\uff0c\u7136\u540e\u76f4\u63a5\u9664\u3002\n\n\u53e6\u5916\u5c31\u662f\u7528map\u76f4\u63a5\u505a\u4e86\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#include<iostream>\n#include<cstdio>\n#define ll long long\n#define ull unsigned long long\nusing namespace std;\n\nconst ll N=200010,base=19260817;\nll n,k,ans,cnt,a[N],v[N],prime[N],primeid[N];\null mi[N];\nmap<ull,ll> mp;\n\ninline ll read(){\n    ll x=0,tmp=1;\n    char ch=getchar();\n    while(!isdigit(ch)){\n        if(ch=='-') tmp=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch)){\n        x=(x<<3)+(x<<1)+(ch^48);\n        ch=getchar();\n    }\n    return tmp*x;\n}\n\ninline void getprime(){\n    v[1]=1;\n    for(ll i=2; i<=100010; i++){\n        if(!v[i]){\n            prime[++cnt]=i;\n            primeid[i]=cnt;\n        }\n        for(ll j=1; j<=cnt; j++){\n            if(prime[j]*i>=100000) break;\n            v[prime[j]*i]=1;\n            if(i%prime[j]) break;\n        }\n    }\n}\n\ninline void gethash(){\n    mi[0]=1;\n    for(ll i=1; i<=60000; i++) mi[i]=mi[i-1]*base;\n}\n\ninline void solve(ll t){\n    ull x=0,y=0;\n    ll bak=t;\n    for(ll i=1; i<=cnt; i++){\n        if(x==1) break;\n        if(prime[i]*prime[i]>t) break;\n        if(t%prime[i]==0){\n            ll p=0;\n            while(t%prime[i]==0){\n                t/=prime[i];\n                p=(p+1)%k;\n            }\n            x+=mi[i]*p;\n            if(p) y+=mi[i]*(k-p);\n        }\n    }\n    if(t!=1){\n        x+=mi[primeid[t]];\n        y+=mi[primeid[t]]*(k-1);\n    }\n    ans+=mp[y];\n    mp[x]++;\n}\n\nint main(){\n    n=read(); k=read();\n    for(ll i=1; i<=n; i++) a[i]=read();\n    getprime(); gethash();\n    for(ll i=n;  i>=1; i--) solve(a[i]);\n    cout<<ans<<endl;\n    return 0;\n}\n```",
        "postTime": 1575881525,
        "uid": 27924,
        "name": "xukuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1225D \u3010Power Products\u3011"
    },
    {
        "content": "#### CF #596 Div. 2, D (CF1225D), Power Products\n\n\u8fd9\u9898\u975e\u5e38\u5de7\u5999\uff0c\u975e\u5e38\u503c\u5f97\u4e00\u505a\uff01\n\n\u4e24\u4e2a\u6570\u7684\u79ef\u4e3a $k$ \u6b21\u65b9\u6570\uff0c\u5f53\u4e14\u4ec5\u5f53\u6bcf\u4e00\u8d28\u56e0\u5b50\u7684\u6b21\u6570\u548c\u90fd\u662f $k$ \u7684\u500d\u6570\u3002\n\n\u6211\u4eec\u628a\u6bcf\u4e00\u4e2a\u6570\u7684\u8d28\u56e0\u6570\u5206\u89e3\u7684\u6bcf\u4e00\u4e2a\u6b21\u6570\u90fd\u6a21 $k$\uff0c\u90a3\u4e48\u540c\u4e00\u5bf9\u91cc\u7684\u4e24\u4e2a\u6570\uff0c\u4e00\u4e2a\u7684\u6b21\u6570\u4e3a $t$\uff0c\u53e6\u4e00\u4e2a\u7684\u6b21\u6570\u5c31\u5fc5\u987b\u662f $-t$\uff08$\\mod{k}$ \u540c\u4f59\u610f\u4e49\u4e0b\uff09\u3002\n\n\u9996\u5148\u5f53\u7136\u662f\u6709\u4e00\u4e2a\u66b4\u529b\u679a\u4e3e\u7684\u601d\u8def\u2014\u2014\u679a\u4e3e\u6570\u5bf9\u4e2d\u9760\u540e\u7684\u4e00\u4e2a\u6570\uff0c\u627e\u5b83\u4e4b\u524d\u6709\u591a\u5c11\u53ef\u4ee5\u4e0e\u5b83\u7ec4\u6210\u201c\u5408\u6cd5\u6570\u5bf9\u201d\uff08\u6ee1\u8db3\u4e0a\u4e00\u6bb5\u6240\u8ff0\u6761\u4ef6\uff09\u7684\u6570\uff0c\u7d2f\u52a0\u5373\u53ef\u3002\n\n\u6cbf\u7528\u66b4\u529b\u679a\u4e3e\u7684\u601d\u8def\uff0c\u5982\u679c\u201c\u627e\u201d\u8fd9\u4e00\u6b65\u80fd\u7528 $O(\\log n)$ \u7684\u590d\u6742\u5ea6\u89e3\u51b3\uff0c\u90a3\u4e48\u95ee\u9898\u5c31\u89e3\u51b3\u4e86\u3002\n\n\u5982\u679c\u6211\u4eec\u628a\u6574\u6570\u7528\u8d28\u56e0\u6570\u5206\u89e3\u5411\u91cf\u5f62\u5f0f\u8868\u793a\uff0c\u90a3\u4e48\u6211\u4eec\u4e5f\u5c31\u9700\u8981\u5bf9\u4e8e\u4e00\u4e2a\u7279\u5b9a\u7684 $(a_2,a_3,a_5,\\cdots)$\uff08\u6307\u8fd9\u4e2a\u6570 $2,3,5,\\cdots$ \u7684\u6b21\u6570\uff09\uff0c\u627e\u5230\u5411\u91cf $(-a_2,-a_3,-a_5)$ \u7684\u4e2a\u6570\u3002\n\n\u5411\u91cf\u548c\u5b57\u7b26\u4e32\u975e\u5e38\u7c7b\u4f3c\uff08\u4e8b\u5b9e\u4e0a\u5411\u91cf (vector) \u5c31\u662f\u5e8f\u5217\u561b\uff0c\u5b57\u7b26\u4e32\u4e5f\u4e0d\u5c31\u662f vector<char> \u561b\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7528\u5b57\u7b26\u4e32\u7684\u65b9\u6cd5\u6765\u89e3\u9898\u3002\uff08\u4e8b\u5b9e\u4e0a\u8fd9\u53e5\u8bdd\u662f\u8d5b\u540e\u603b\u7ed3\u5404\u79cd\u505a\u6cd5\u7684\u65f6\u5019\u624d\u609f\u51fa\u6765\u7684\u3002\uff09\n\n\u4ece\u5b57\u7b26\u4e32\u7684\u89d2\u5ea6\u8003\u8651\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u2014\u2014\u63d2\u5165\u5b57\u7b26\u4e32\u3001\u67e5\u8be2\u5b57\u7b26\u4e32\u51fa\u73b0\u6b21\u6570\u7684\u95ee\u9898\u3002\n\n\u8fd9\u4e2a\u95ee\u9898\u6709\u4e24\u79cd\u89e3\u6cd5\u3002\n\n\u4e00\u662f\u5229\u7528 Trie\u3002\u5f53\u7136\u8fd9\u9898\u4e2d Trie \u6709\u5f88\u591a\u9700\u8981\u8c03\u6574\u7684\u5730\u65b9\uff0c\u6bd4\u5982\u76f4\u63a5\u5f00\u4f1a MLE\uff0c\u9700\u8981\u5404\u79cd\u5206\u6761\u4ef6\u4f18\u5316\u7b49\uff08\u6bd4\u5982\u628a\u8d28\u56e0\u5b50\u6309 $\\sqrt{n}$ \u5206\u6cbb\uff09\u3002\u8fd9\u4e2a\u53ef\u4ee5\u53c2\u8003 [$\\textcolor{red}{\\text{\u9006\u6d41\u4e4b\u65f6}}$](https://www.luogu.org/space/show?uid=144740) \u7684[\u9898\u89e3](https://www.luogu.org/blog/returntime/solution-cf1225d)\u3002\n\n\u4e8c\u662f\u5229\u7528 Hash\uff08Hana~!\uff09\u3002\u5982\u679c\u6211\u4eec\u80fd\u6709\u4e00\u79cd\u628a\u8fd9\u4e9b\u5411\u91cf\u51c6\u786e\u5730 Hash \u7684\u65b9\u6cd5\uff0c\u5c31\u5f88\u5bb9\u6613\u5224\u65ad\u662f\u5426\u5b58\u5728\u4e86\u3002\n\n\u56de\u5fc6\u4e00\u4e0b\u54e5\u5fb7\u5c14\u4e0d\u5b8c\u5907\u5b9a\u7406\u7684\u8bc1\u660e\u8fc7\u7a0b\uff0c\u54e5\u5fb7\u5c14\u662f\u628a\u903b\u8f91\u516c\u5f0f\u7684\u5b57\u7b26\u8868\u793a\u6210\u6570\uff0c\u518d\u628a\u6570\u7684\u5411\u91cf hash \u6210\u81ea\u7136\u6570\u7684\u5427\uff1f\n\n\u8fd9\u4e2a hash \u65b9\u6cd5\u5bf9\u4e8e\u4e00\u822c\u5b57\u7b26\u4e32\u6765\u8bf4\u5b8c\u5168\u4e0d\u53ef\u884c\uff0c\u56e0\u4e3a hash \u503c\u968f\u968f\u4fbf\u4fbf\u5c31\u4f1a\u53d8\u5f97\u5f88\u5927\u3002\n\n\u4f46\u6211\u4eec\u7684\u5411\u91cf\u672c\u6765\u4e0d\u5c31\u662f\u8d28\u56e0\u6570\u5206\u89e3\u5411\u91cf\u561b\uff01\u8fd9\u5c31\u8bf4\u660e\u5373\u4f7f\u628a\u6211\u4eec\u7684\u5411\u91cf\u7528\u8d28\u56e0\u6570\u5206\u89e3\u65b9\u6cd5\u8868\u793a\uff0c\u5b83\u4e5f\u4e0d\u4f1a\u5f88\u5927\uff01\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u7684\u601d\u8def\u5c31\u662f\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\uff0c\u7528\u4e00\u4e2a\u201c\u6307\u6570\u6a21 $k$ \u540e\u7684\u6570\u201d\u6765**\u4ee3\u8868**\u5b83\u3002\n\n\u4f8b\u5982\uff0c\u5f53 $k=3$ \u65f6\uff0c$2^4\\times 3^3 \\times 7^2 \\times 11^1$ \u53ef\u4ee5\u7528 $2^1\\times 3^0 \\times 7^2 \\times 11^1$ \u6765\u4ee3\u8868\u3002\n\n\u6211\u4eec\u6bcf\u6b21\u5bfb\u627e\u65f6\u53ea\u9700\u5bfb\u627e\u8fd9\u4e2a\u6570\u6240\u9700\u7684\u5411\u91cf\u7684\u4ee3\u8868\u6570\uff0c\u5982\u4e0a\u4f8b\u4e2d\u6570\u8981\u914d\u5bf9\u53ea\u9700\u5bfb\u627e $2^2\\times 3^0 \\times 7^1 \\times 11^2$ \u5373\u53ef\u3002\n\n\u63a5\u4e0b\u6765\u4f3c\u4e4e\u5c31\u6ca1\u6709\u95ee\u9898\u4e86\u3002\u5b58\u54c8\u5e0c\u503c\u7528\u4e00\u4e2a multiset \u5c31\u53ef\u4ee5\u4e86\u5427\u3002\n\n\u7136\u800c\u2026\u2026lower_bound \u548c upper_bound \u4e4b\u95f4\u7684\u8ddd\u79bb\u600e\u4e48\u7b97\u5462\uff1f\n\n\u7528 std::distance \u5427\uff1f\u7136\u800c\uff0c\u590d\u6742\u5ea6\uff1a**\u7ebf\u6027**\u3002\n\n\u5e72\u8106\u7528 multiset::count \u5427\uff1f\u590d\u6742\u5ea6\uff1a\u4e0e\u5bb9\u5668\u5927\u5c0f\u7684\u5bf9\u6570\u548c\u627e\u5230\u5143\u7d20\u7684\u4e2a\u6570\u6210**\u7ebf\u6027**\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u590d\u6742\u5ea6\u662f $O(v+\\log n)$ \u7684\uff0c\u5176\u4e2d $v$ \u6307 count \u7684\u8fd4\u56de\u503c\u3002\n  \n\u4e0a\u8ff0\u4e24\u4e2a\u590d\u6742\u5ea6\u7684\u53c2\u8003\u8d44\u6599\uff1a\n\n[std::distance](https://zh.cppreference.com/w/cpp/iterator/distance)\n  \n> \u7ebf\u6027\u3002\n\n> \u7136\u800c\uff0c\u82e5 InputIt \u989d\u5916\u6ee1\u8db3\u9057\u7559\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668 (LegacyRandomAccessIterator) \u7684\u8981\u6c42\uff0c\u5219\u590d\u6742\u5ea6\u662f\u5e38\u6570\u3002\n  \n[std::multiset::count](https://zh.cppreference.com/w/cpp/container/multiset/count)\n\n> \u4e0e\u5bb9\u5668\u5927\u5c0f\u6210\u5bf9\u6570\uff0c\u52a0\u4e0a\u4e0e\u627e\u5230\u7684\u5143\u7d20\u6570\u6210\u7ebf\u6027\u3002 \n\n\u6240\u4ee5\u6700\u7ec8\u6211\u4eec\u8fd8\u662f\u9009\u62e9\u4e86 map\u2026\u2026\n\n\u56e0\u6b64\u8fd9\u9898\u6709\u4e00\u4e2a\u989d\u5916\u7684\u4ef7\u503c\uff0c\u90a3\u5c31\u662f\u79d1\u666e\u4e86\u4e0a\u8ff0\u4e24\u4e2a\u51fd\u6570\u7684\u590d\u6742\u5ea6\uff0c\u5c24\u5176\u662f multiset::count \u7684\u8be1\u5f02\u590d\u6742\u5ea6\u3002\n\n\u9644\u4ee3\u7801\u3002\n\n\uff08\u6211\u7b2c\u4e00\u6b21\u4ea4\u8fd9\u7bc7\u9898\u89e3\u7684\u65f6\u5019\u770b\u9519\u9898\u53f7\u4e86\u2026\u2026\u4ea4\u5230\u4e86 CF 596D \u4e0a\u53bb\u2026\u2026\u592a\u4e22\u4eba\u4e86\uff09\n\n```cpp\n#include <cstdio>\n#include <cctype>\n#include <map>\n#include <algorithm>\n#define MAXIOLG 25\n#define FILENAME(x) \\\nfreopen(x\".in\",\"r\",stdin); \\\nfreopen(x\".out\",\"w\",stdout);\n#define MD(x) (((x)>=MOD)?((x)-=MOD):(0))\n#define MAXN 100005\n#define N 100000\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef ll io_t;\n\nio_t shin[MAXIOLG];\nio_t seto(void); //\u5feb\u8bfb\nvoid ayano(io_t x,char spliter='\\n'); //\u5feb\u5199\n    \nint minp[MAXN]={0};\nint prime[MAXN],pr=0; //\u8d28\u6570\u7b5b\nint a[MAXN];\nint mxdg[MAXN]; //\u9632\u8d8a\u754c\u5904\u7406,\u6bcf\u4e2a\u6570\u4e0d\u8d85\u8fc7 1e5 \u7684\u6700\u5927\u6b21\u5e42\nmap<ll,int> st;\nvoid make_p(int n); //\u7ebf\u6027\u7b5b\nll kasumi(ll a,ll b);\n    \nint main(void){\n    make_p(100000);\n    int n,k;\n    ll ans=0;\n    n=seto(),k=seto();\n    for (int i=1;i<=n;i++)\n        a[i]=seto();\n    mxdg[1]=0; //\u65e0\u610f\u4e49\n    //\u8ba1\u7b97\u6bcf\u4e2a\u6570\u4e0d\u8d85\u8fc7 1e5 \u7684\u6700\u5927\u5e42\n    for (int i=2;i<=N;i++){\n        int tans=1;\n        ll tx=i;\n        while (tx*i<=N)\n            tans++,tx*=i;\n        mxdg[i]=tans;\n    }\n    for (int i=1;i<=n;i++){\n        ll x=a[i]; //\u5f53\u524d\u679a\u4e3e\u6570\u5217\u7684\u540e\u4e00\u4e2a\u6570\u4e3a x\n        ll y=1; //x \u7684 hash \u4e3a y\n        ll u=1; //x \u6240\u5339\u914d\u7684 hash \u4e3a u\n        int uok=1; //\u9632\u6ea2\u51fa\u5904\u7406, \u5982\u679c x \u6240\u5339\u914d\u7684\u6570\u8d85\u8fc7\u4e86\u8303\u56f4\u5219\u6b64\u53d8\u91cf\u4e3a 0\n        while (x>1){\n            int tdeg=0; //\u6b64\u8d28\u56e0\u6570\u7684\u6b21\u6570\n            //\u8d28\u56e0\u6570\u5206\u89e3\n            int tminp=minp[x];\n            while (minp[x]==tminp)\n                x/=tminp,tdeg++;\n            tdeg%=k; //\u6b21\u6570\u6a21 k\n            y*=kasumi(tminp,tdeg); //\u8ba1\u7b97 x \u7684 hash\n    \n            int udeg; //x \u6240\u5339\u914d\u7684\u6570\u7684\u6b64\u9879\u6b21\u6570\n            udeg=(k-tdeg)%k;\n            \n            if (udeg>mxdg[tminp]) //\u5982\u679c\u8d85\u8fc7\u4e86 1e5 \u7684\u8303\u56f4\n                uok=0;\n            else\n                u*=kasumi(tminp,udeg);\n        }\n        (uok && st.count(u))?(ans+=st[u]):(0); //\u5982\u679c\u5b58\u5728 x \u6240\u5339\u914d\u7684\u6570, \u5219\u7d2f\u52a0\n        //\u5c06 x \u7684 hash \u52a0\u5165 map\n        if (st.count(y))\n            st[y]++;\n        else\n            st[y]=1;\n        \n    }\n    ayano(ans); //\u8f93\u51fa\u7b54\u6848\n    return 0;\n}\n    \nvoid make_p(int n){\n    //\u7ebf\u6027\u7b5b\n    int nd2=n>>1;\n    minp[1]=0;//No meaning\n    for (int i=2;i<=n;i++){\n        if (!minp[i]){\n            minp[i]=i;\n            prime[pr++]=i;\n        }\n        int t;\n        for (int j=0;j<pr && (t=prime[j]*i)<=n;j++){\n            minp[t]=prime[j];\n            if (prime[j]==minp[i])\n                break;\n        }\n    }\n}\n    \nll kasumi(ll a,ll b){\n    //\u5feb\u901f\u5e42\n    ll ans=1;\n    while (b){\n        (b&1)?(ans*=a):(0);\n        a*=a,b>>=1;\n    }\n    return ans;\n}\n    \nio_t seto(void){\n    //\u5feb\u8bfb\n    io_t x=0;\n    char ch=getchar();\n    int symbol=0;\n    while (!isdigit(ch))\n        (ch=='-')?(symbol=1):(0),ch=getchar();\n    while (isdigit(ch))\n        x=(x*10)+(ch-'0'),ch=getchar();\n    return (symbol)?(-x):(x);\n}\nvoid ayano(io_t x,char spliter){\n    //\u5feb\u5199\n    if (!x){\n        putchar('0'),putchar(spliter);\n        return;\n    }\n    if (x<0)\n        putchar('-'),x=-x;\n    int len=0;\n    while (x){\n        io_t d=x/10;\n        shin[len++]=x-d*10;\n        x=d;\n    }\n    while (len--)\n        putchar(shin[len]+'0');\n    putchar(spliter);\n}\n```",
        "postTime": 1572327660,
        "uid": 25008,
        "name": "Sweetlemon",
        "ccfLevel": 9,
        "title": "\u6574\u6570\uff1f\u5b57\u7b26\u4e32\uff01\u2014\u2014Power Products"
    },
    {
        "content": "~~\u597d\u4e0d\u5bb9\u6613\u627e\u5230\u4e00\u4e2adiv1\u7684~~\n\n\u8fd9\u9898\u8981\u4e58\u79ef\u662f\u4e00\u4e2a\u6570\u7684$k$\u6b21\n\n\u663e\u7136\u610f\u5473\u7740\u6bcf\u4e00\u4e2a\u8d28\u56e0\u6570\u7684\u6307\u6570\u548c\u8981\u662f$k$\u7684\u500d\u6570\n\n\u7528\u4e00\u4e2a$vector$\u5b58\u4e0b\u6bcf\u4e00\u4e2a\u6570\u7684\u8d28\u56e0\u6570\u5206\u89e3\u7ed3\u679c\u4e3a$x$\uff0c\u6ce8\u610f\u6307\u6570\u8981$mod$ $k$\uff0c\u5e76\u4e14\u4e0d\u8bb0\u5f55$mod $ $k=0$\u7684\u60c5\u51b5\n\n\u6bcf\u4e00\u4e2a\u6570\u5728\u8d28\u56e0\u6570\u5206\u89e3\u7684\u65f6\u5019\u8bb0\u5f55\u4e0e$x$\u76f8\u540c\u8d28\u56e0\u6570\u76f8\u52a0\u662f$k$\u7684\u500d\u6570\u7684\u72b6\u6001\u4e3a$x1$\n\n\u7528map\u7ef4\u62a4\u6bcf\u4e00\u4e2a\u72b6\u6001\u7684\u5408\u6cd5\u603b\u6570\uff0c\u7b54\u6848\u52a0\u4e0a$mp[x1]$,\u628a$mp[x]$$+1$\u5c31\u597d\u4e86\n\ncode::\n\n```cpp\n#include <iostream>\n#include <stdio.h>\n#include <string.h>\n#include <map>\n#include <vector>\nusing namespace std;\nmap <vector< pair<int,int> > , int > mp;\nvector<pair<int,int>> x,x1; \nint n,k,a[300005];\nlong long ans=0;\nint main() {\n\tscanf(\"%d%d\",&n,&k);\n\tfor (int i=1;i<=n;++i) {\n\t\tscanf(\"%d\",&a[i]);\n\t\tx.clear();x1.clear();\n\t\tint aa=a[i];\n\t\tfor (int j=2;j*j<=a[i];++j) {\n\t\t\tint tot=0;\n\t\t\twhile(aa%j==0) {\n\t\t\t\t++tot;\n\t\t\t\taa/=j;\n\t\t\t\ttot%=k;\n\t\t\t}\n\t\t\tif(!tot) continue;\n\t\t\tx.push_back({j,tot});\n\t\t\tx1.push_back({j,k-tot});\n\t\t}\n\t\tif(aa!=1) {\n\t\t\tx.push_back({aa,1});\n\t\t\tx1.push_back({aa,k-1});\n\t\t}\n\t\tans=ans+mp[x1];\n\t\t++mp[x];\n\t}\n\tprintf(\"%lld\\n\",ans);\n}\n\t\t\n```",
        "postTime": 1572169014,
        "uid": 78187,
        "name": "zjjcth330",
        "ccfLevel": 0,
        "title": "\u9898\u89e3-CF1225D"
    },
    {
        "content": "### \u5e9f\u8bdd\uff1a\n\n- \u56e2\u961f\u91cc\u76f4\u63a5\u5c31\u201c\u6570\u8bba \u7ec3\u4e603\u201d\uff0c\u4e5f\u6ca1\u60f3hash\uff0c\u4e5f\u7528\u4e0d\u7740\u5440\uff01\u4e3a\u5565\u9898\u89e3\u90fd\u8bf4hash\uff1f\n\n\t~~\u5c31\u662f\u6570\u5b66\u778e\u641e~~\n\n- \u4e00\u5f00\u59cb\u7adf\u7136\u60f3\u7684\u601d\u8def\uff1a\n\n\tk>4\u7684\u65f6\u5019\u627e\u51fa\u6240\u6709\u8303\u56f4\u5185\u7684\u53ef\u80fd\u7684k\u6b21\u65b9\u6570\uff08\u4e0d\u5230300\u4e2a\uff09\uff0c\u7136\u540e\u53cc\u6307\u9488\u7edf\u8ba1\u4e58\u79ef\u7b49\u4e8e\u6bcf\u4e2a\u6570\u7684\u65b9\u6848\u6570\n\n\t2<=k<=4\u7684\u65f6\u5019\u7528\u73b0\u5728\u60f3\u7684\u8fd9\u4e2a\u6b63\u89e3\u3002\u3002\u3002\u3002\u3002\u3002\n\n\t\u7136\u540e\u53d1\u73b0\u6b63\u89e3\u76f4\u63a5\u7528\u5c31\u884c~\n\n### \u524d\u7f6e\u77e5\u8bc6\uff1a\n\n1. \u7ebf\u6027\u7b5b\u8d28\u6570\n\n1. \u5feb\u901f\u5e42\n\n1. ~~\u5feb\u8bfb~~\n\n1. ~~\u7b80\u5355\u7684\u538b\u884c\u6280\u5de7~~\n\n### Solution\uff1a\n\n- \u80af\u5b9a\u5148\u60f3\u5230\u4ec0\u4e48\u6bcf\u4e2a\u8d28\u56e0\u5b50\u6307\u6570\u4e4b\u548c\u90fd\u662fk\u7684\u500d\u6570\u4e4b\u7c7b\u7684\u3002\u3002\u3002\n\n\t\u7136\u540e\u5c31**\u663e\u7136**\u53ef\u4ee5\u53d1\u73b0\u5bf9\u4e00\u4e2a\u6570\uff0c\u5b83\u81ea\u5df1\u6709k\u4e2a\u662f\u6ca1\u7528\u7684\uff0c\u6240\u4ee5\u8bfb\u5165\u7684\u65f6\u5019\uff0c\u5c06\u5b83\u8d28\u56e0\u5b50\u5206\u89e3\uff0c\u6307\u6570\u5927\u4e8ek\u7684\u76f4\u63a5%k\n\n\t\u63a5\u4e0b\u6765\u5bf9\u4e8e\u4e00\u4e2a\u5143\u7d20\u6765\u8bf4\uff0c\u5b83\u8981\u627e\u7684\u5c31\u662f\u4e0e\u5b83\u8d28\u56e0\u5b50\u6307\u6570\u5173\u4e8ek\u4e92\u8865\u7684\uff0c\u56e0\u4e3a\u4e0d\u4f1a\u51fa\u73b0\u4e58\u79ef\u91cc\u6709\u5b83\u6ca1\u6709\u7684\u8d28\u56e0\u5b50\u7684\u60c5\u51b5\uff08\u8fd9\u6837\u7684\u8bdd\uff0c\u8fd9\u4e2a\u8d28\u56e0\u5b50\u6307\u6570\u4e3ak\u7684\u500d\u6570\uff0c\u5df2\u7ecf\u88ab\u5b8c\u5168\u6d88\u53bb\u4e86\uff09\n\n- \u8d28\u56e0\u5b50\u5206\u89e3\u7684\u8bdd\uff0c\u8bd5\u9664\u6cd5\u80af\u5b9a\u662f\u4e0d\u884c\u7684\uff08\u5927\u91cf\u4e0d\u662f\u7ea6\u6570\u7684\u6570\u6d6a\u8d39\u65f6\u95f4\uff09\n\n\t\u7ebf\u6027\u7b5b\u8d28\u6570\u7684\u65f6\u5019\u4e0d\u662f\u628amindiv\u7b5b\u51fa\u6765\u4e86\u561b\uff0c\u7528\u5440\uff01\u80af\u5b9a\u4e0d\u4f1a\u88ab\u4e0d\u662f\u7ea6\u6570\u7684\u6570\u6253\u6270\u4e86\u5427\uff01\u590d\u6742\u5ea6\u4e0d\u4f1a\u9ad8\u4e8elog\n\n- \u6700\u540e\u4e00\u4e2aPart\u4e86\uff0c\u53ef\u80fd\u662f\u8ddfhash\u6709\u70b9\u5173\u7cfb\u5427\n\n\t\u4efb\u52a1\uff1a\u5df2\u7ecf\u786e\u5b9a\u6bcf\u4e2a\u6570\u7684\u76ee\u6807~~\u53e6\u4e00\u534a\uff08/xyx\uff09~~\uff0c\u7edf\u8ba1\u5bf9\u6570\n    \n    \u8003\u8651\u4e00\u5bf9\u4e2d\u540e\u9762\u90a3\u4e2a\u70b9\u6765\u8868\u793a\u8fd9\u4e00\u5bf9\uff0c\u6bcf\u5230\u4e00\u4e2a\u70b9\uff0c\u76f4\u63a5\u627e\u4ed6\u524d\u9762\u8bb0\u5f55\u8fc7\u7684\u76ee\u6807\u6570\u5c31\u884c\u4e86\uff0c\u76ee\u6807\u6570\uff1f\u6876\u5440\n\n### Code\uff1a\n\n\uff08\u4f17\u5927\u4f6c\u4e3a\u4ec0\u4e48\u90fd\u5199\u90a3\u4e48\u957f\u5440\uff1f\uff09\n\n```\nconst int N=100010;\nil int power(re int a,re int b){int res=1;for(;b;b>>=1,a*=a)if(b&1)res*=a;return res>=N?-1:res;}\nint b[N],minv[N],pri[N],cnt,ans;\nil void euler(re int n=N-9){\n\tfor(re int i=2;i<=n;++i){\n\t\tif(!minv[i])minv[i]=i,pri[++cnt]=i;\n\t\tfor(re int j=1;j<=cnt;++j){\n\t\t\tif(i*pri[j]>n)break;minv[i*pri[j]]=pri[j];if(i%pri[j]==0)break;\n\t\t}\n\t}\n}\nsigned main(){\n\teuler(); int n,k; read(n),read(k);\n\tfor(re int i=1,a,c=1,d=1;i<=n;++i,c=1,d=1){\n\t\tread(a);\n\t\twhile(a!=1){\n\t\t\tint now=minv[a],tot=0;\n\t\t\twhile(a%now==0)a/=now,++tot;\n\t\t\ttot=(tot+k)%k;\n\t\t\tif(tot>0)c*=power(now,tot),d*=power(now,k-tot);if(d<0)d=N;\n\t\t}\n\t\tif(d<N)ans+=b[d]; ++b[c];\n\t}\n\treturn cout<<ans,0;\n}\n```\n\n### \u5410\u69fd\uff1a\n\n\u4e3a\u4ec0\u4e48T2\u7eff\u6bd4T1\u7d2b\u8fd8\u96be\u3002\u3002\u3002",
        "postTime": 1600864134,
        "uid": 286239,
        "name": "ql12345",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1225D \u3010Power Products\u3011"
    },
    {
        "content": "\u505a\u4eba\u597d\u96be\u554a\uff0c\u6211\u53c8\u6765\u6c34\u9898\u89e3\u4e86\n\n\u9898\u610f\uff1a\u6709\u591a\u5c11\u7ec4\u6570\u4e00\u4e00\u914d\u5bf9\u4e58\u8d77\u6765\u540e\u521a\u597d\u662f\u4e00\u4e2a\u6570\u7684k\u6b21\u65b9\n\n\u6beb\u65e0\u5934\u7eea\uff1f\n## \u54c8\u5e0c\uff01\n\n\u5c06\u6bcf\u4e2a\u6570\u5206\u89e3\u56e0\u6570\uff08\u8d28\u56e0\u6570\u4e5f\u884c\uff09\u5c06\u8fd9\u4e2a\u56e0\u6570\u7684\u6307\u6570\u54c8\u5e0c\u4e0b\u6765\n\n\u6254\u8fdb\u8868\u91cc\uff0c$nlog(n)$\u67e5\u4e00\u4e0b\u7edf\u8ba1\u7b54\u6848\u5c31\u597d\u4e86\n\n```cpp\n//Code by : Y-k-y\n#include <iostream>\n#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <queue>\n#include <vector>\n#include <set>\n#include <map>\n#define int unsigned long long\nconst int N=100010;\n#define base 1331\nusing namespace std;\ninline int rnd(){\n\tint res=0,f=1;char ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-')f=-1;ch=getchar();}\n\twhile(isdigit(ch)){res=res*10+ch-'0';ch=getchar();}\n\treturn res*f;\n}\ninline void wr(int x){\n\tif(x<0){putchar('-');x=-x;}if(x>9) wr(x/10);putchar(x%10+'0');\n}\nint n,k,ans;\nint aa[N],fac[N],bb[N];\nsigned main(){\n\tcin>>n>>k;\n\tfor(int i=1,x;i<=n;i++){\n\t\tx=rnd();\n\t\tint sq=sqrt(x);\n\t\tint &a=aa[i],&b=bb[i];\n\t\tfor(int j=2;j<=sq;j++){\n\t\t\tint num=0;\n\t\t\tif(x%j==0){\n\t\t\t\twhile(x%j==0){\n\t\t\t\t\tnum++;x/=j;\n\t\t\t\t}\n\t\t\t}\n\t\t\tnum%=k;\n\t\t\tif(num){\n\t\t\t\ta=a*base+j;\n\t\t\t\ta=a*base+num;\n\t\t\t\tb=b*base+j;\n\t\t\t\tb=b*base+k-num;\n\t\t\t}\n\t\t\tif(x==1)break;\n\t\t}\n\t\tif(x!=1){\n\t\t\ta=a*base+x;\n\t\t\ta=a*base+1;\n\t\t\tb=b*base+x;\n\t\t\tb=b*base+k-1;\n\t\t}\n\t\tif(a==b)ans--;\n\t}\n\tsort(aa+1,aa+1+n);\n\tfor(int i=1;i<=n;i++){\n\t\tans+=upper_bound(aa+1,aa+1+n,bb[i])-lower_bound(aa+1,aa+1+n,bb[i]);\n\t}\n\twr(ans/2);\n\treturn 0;\n}\n\n```\n\u62dc\u62dc",
        "postTime": 1572148515,
        "uid": 71844,
        "name": "\u6768\u94e0\u8fdc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1225D \u3010Power Products\u3011"
    }
]