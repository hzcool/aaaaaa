[
    {
        "content": "\u4e2a\u4eba\u8ba4\u4e3a\u633a\u5de7\u5999\u7684\u4e00\u9053\u9898\uff0c\u7ed3\u679c\u5728\u795e\u4ed9\u773c\u91cc\u5c31\u662f\uff1a\n\n![image.png](https://i.loli.net/2020/08/23/awjUhYGvAzJsDi1.png)\n\n~~\uff08\u8bed\u8a00\u7ecf\u8fc7\u5220\u8282\uff09~~\n\n------\n\n\u64cd\u4f5c\u5199\u7684\u4e0d\u662f\u4eba\u8bdd\uff0c\u7ffb\u8bd1\u4e00\u4e0b\u56db\u4e2a\u64cd\u4f5c\uff1a\n\n1. $\\operatorname{\\large{R}\\small{PLACE}}\\normalsize{(x, k)}$\uff0c\u5355\u70b9\u4fee\u6539 $a_x \\gets k$\uff1b\n2. $\\operatorname{\\large{R}\\small{EVERSE}}\\normalsize{(k)}$\uff0c\u4ece\u5de6\u5230\u53f3\u5212\u5206\u4e3a\u82e5\u5e72\u4e2a\u957f\u5ea6\u4e3a $2^k$ \u7684\u533a\u95f4\uff0c\u5c06\u6bcf\u4e2a\u533a\u95f4\u7ffb\u8f6c\uff1b\n3. $\\operatorname{\\large{S}\\small{WAP}}\\normalsize{(k)}$\uff0c\u4ece\u5de6\u5230\u53f3\u5212\u5206\u4e3a\u82e5\u5e72\u4e2a\u957f\u5ea6\u4e3a $2^k$ \u7684\u533a\u95f4\uff0c\u76f8\u90bb\u4e24\u4e2a\u533a\u95f4\u4ea4\u6362\u4f4d\u7f6e\uff1b\n4. $\\operatorname{\\large{S}\\small{UM}}\\normalsize{(l, r)}$\uff0c\u6c42 $\\sum\\limits_{i=l}^r a_i$\u3002\n\n~~\u6211\u4f1a\u505a 1 \u548c 4 \uff01~~\n\n\u8003\u8651\u5de7\u5999\u5229\u7528\u7ebf\u6bb5\u6811\uff0c\u56e0\u4e3a\u4fdd\u8bc1\u5e8f\u5217\u7684\u957f\u5ea6\u4e3a $2^n$\uff0c\u6240\u4ee5\uff0c\u7ebf\u6bb5\u6811\u7684\u5f62\u72b6\u4e3a\uff1a\u5171 $n+1$ \u5c42\uff0c\u4ee4\u53f6\u5b50\u7ed3\u70b9\u4e3a\u7b2c $0$ \u5c42\uff0c\u6839\u8282\u70b9\u4e3a\u7b2c $n$ \u5c42\uff0c\u5219\u7b2c $k$ \u5c42\u7684\u6bcf\u4e2a\u7ed3\u70b9\uff0c\u7ef4\u62a4\u7684\u90fd\u662f\u957f\u5ea6\u4e3a $2^k$ \u7684\u533a\u95f4\u3002\n\n\u89c2\u5bdf\u64cd\u4f5c 2 \u548c 3\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u7ebf\u6bb5\u6811\u7b2c $k$ \u5c42\u7684\u6240\u6709\u7ed3\u70b9\uff0c\u6070\u597d\u5c31\u662f\u6211\u4eec\u6240\u60f3\u8981\u4fee\u6539\u7684\u533a\u95f4\uff01\n\n\u5b9a\u4e49\u4e00\u4e2a\u6807\u8bb0 $\\text{rev}_{dep}$\uff0c\u5982\u679c\u4e3a $1$ \u8868\u793a\u7b2c $dep$ \u5c42\u7684\u5de6\u53f3\u7ed3\u70b9\u7684\u5de6\u53f3\u513f\u5b50\u5206\u522b\u4e92\u6362\uff0c\u4e3a $0$ \u5219\u4e0d\u53d8\u3002\n\n\u5148\u6765\u770b\u64cd\u4f5c 3\uff0c\u5982\u679c\u6211\u4eec\u5c06 $\\text{rev}_{k+1}$ \u6539\u53d8\uff0c\u662f\u4e0d\u662f\uff0c\u6070\u597d\u76f8\u90bb\u4e24\u4e2a\u957f\u5ea6\u4e3a $2^k$ \u7684\u533a\u95f4\u90fd\u4e92\u6362\u4e86\u5462\uff1f\n\n\u4e0b\u56fe\u5c55\u793a $n = 3$\uff0c$\\operatorname{\\large{S}\\small{WAP}}\\normalsize{(1)}$\uff1a\n\n![image.png](https://i.loli.net/2020/08/23/KlV9ivdQgxZs2tk.png)\n\n\u518d\u770b\u64cd\u4f5c 4\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u5b83\u7b49\u4ef7\u4e8e\u6539\u53d8\u6240\u6709\u7684 $\\text{rev}_0 \\sim \\text{rev}_k$\u3002\u8fd9\u5f88\u597d\u7406\u89e3\uff0c$\\text{rev}_{k}$ \u6539\u53d8\u540e\uff0c\u76f8\u5f53\u4e8e\u662f\u6bcf\u4e2a\u957f\u5ea6\u4e3a $2^k$ \u7684\u533a\u95f4\u5185\u90e8\uff0c\u524d $2^{k-1}$ \u548c\u540e $2^{k-1}$ \u4e2a\u8c03\u6362\u4e86\u4f4d\u7f6e\uff0c\u4f46\u8fd9\u4e24\u90e8\u5206**\u5185\u90e8\u5206\u522b\u6709\u5e8f**\uff0c\u6240\u4ee5\u8981\u7ee7\u7eed\u8c03\u6362\u4e0b\u53bb\u3002\n\n\u5728\u52a0\u5165\u4e86 $\\text{rev}$ \u6570\u7ec4\u540e\uff0c\u7ebf\u6bb5\u6811\u4e5f\u4e0d\u96be\u5b9e\u73b0\uff0c\u5982\u679c\u5f53\u524d\u5904\u5728 $\\text{rev}_{dep}=1$ \u7684\u4e00\u5c42\uff0c\u5c31\u628a\u53f3\u513f\u5b50\u5f53\u4f5c\u5de6\u513f\u5b50\uff0c\u5de6\u513f\u5b50\u5f53\u4f5c\u53f3\u513f\u5b50\u597d\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(qn)$\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int N = 20, S = 1 << N;\nint n, q;\nbool rev[N];\nstruct segment_tree\n{\n\tint o[S << 2];\n\tvoid build(int l, int r, int rt)\n\t{\n\t\tif(l == r) { scanf(\"%lld\", &o[rt]); return; }\n\t\tint mid = l + r >> 1;\n\t\tbuild(l, mid, rt << 1); build(mid + 1, r, rt << 1 | 1);\n\t\to[rt] = o[rt << 1] + o[rt << 1 | 1];\n\t}\n\tvoid modify(int l, int r, int rt, int dep, int p, int v)\n\t{\n\t\tif(l == r) { o[rt] = v; return; }\n\t\tint mid = l + r >> 1;\n\t\tif(p <= mid) modify(l, mid, rt << 1 | rev[dep], dep - 1, p, v);\n\t\telse modify(mid + 1, r, rt << 1 | rev[dep] ^ 1, dep - 1, p, v);\n\t\to[rt] = o[rt << 1] + o[rt << 1 | 1];\n\t}\n\tint query(int l, int r, int rt, int dep, int ql, int qr)\n\t{\n\t\tif(ql <= l && r <= qr) return o[rt];\n\t\tint mid = l + r >> 1, res = 0;\n\t\tif(ql <= mid) res += query(l, mid, rt << 1 | rev[dep], dep - 1, ql, qr);\n\t\tif(qr > mid) res += query(mid + 1, r, rt << 1 | rev[dep] ^ 1, dep - 1, ql, qr);\n\t\treturn res;\n\t}\n} sgt;\n#define Replace(x, k) sgt.modify(1, 1 << n, 1, n, x, k)\n#define Sum(l, r) sgt.query(1, 1 << n, 1, n, l, r)\n#define Swap(k) rev[k + 1] ^= 1\ninline void Reverse(int k) { for(int i = 0; i <= k; i++) rev[i] ^= 1; }\nsigned main()\n{\n\tscanf(\"%lld %lld\", &n, &q);\n\tsgt.build(1, 1 << n, 1);\n\twhile(q--)\n\t{\n\t\tint opt, x, y;\n\t\tscanf(\"%lld\", &opt);\n\t\tswitch(opt)\n\t\t{\n\t\t\tcase 1:\n\t\t\t\tscanf(\"%lld %lld\", &x, &y); Replace(x, y); break;\n\t\t\tcase 2:\n\t\t\t\tscanf(\"%lld\", &x); Reverse(x); break;\n\t\t\tcase 3:\n\t\t\t\tscanf(\"%lld\", &x); Swap(x); break;\n\t\t\tcase 4:\n\t\t\t\tscanf(\"%lld %lld\", &x, &y); printf(\"%lld\\n\", Sum(x, y)); break;\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1598176974,
        "uid": 51971,
        "name": "syksykCCC",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1401F \u3010Reverse and Swap\u3011"
    },
    {
        "content": "# \u9898\u89e3 - $\\mathrm{CF1401F}$\n\n## \u9898\u76ee\u610f\u601d\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1401F)\n\n## $\\mathrm{Sol}$\n\n\u4e00\u9053\u4e0d\u96be\u7684ds\u9898\n\n\u6211\u4eec\u8003\u8651\u628a\u5e8f\u5217\u653e\u5230\u7ebf\u6bb5\u6811\u4e0a\uff0c$2^n$ \u4e2a\u6570\u76f8\u5f53\u4e8e\u7ebf\u6bb5\u6811\u7684\u53f6\u5b50\u7ed3\u70b9\u4e0a\u7684\u6570\u3002\n\n\u5bf9\u4e8e $1\\sim 4$ \u7684\u64cd\u4f5c\u4e5f\u5c31 $2,3$ \u6bd4\u8f83\u96be\u7ef4\u62a4\uff0c\u6211\u4eec\u8003\u8651\u5bf9\u4e8e $2$ \u64cd\u4f5c\uff0c\u5047\u8bbe\u7b2c $i$ \u4e2a\u8282\u70b9\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e3a\u7b2c $d$ \u5c42\uff08$1$\u8282\u70b9\u4e3a\u7b2c $n$ \u5c42\uff09\u3002\u90a3\u4e48\u53cd\u8f6c\u64cd\u4f5c\u76f8\u5f53\u4e8e\u628a\u4e0b\u9762\u6240\u6709\u5c42\u7684\u5de6\u53f3\u513f\u5b50\u5206\u522b\u53cd\u8f6c\uff0c\u4e8e\u662f\u6211\u4eec\u5bf9 $0\\sim d$ \u5c42\u6253\u4e0a\u6807\u8bb0\u5373\u53ef\u3002\u5bf9\u4e8e $3$ \u64cd\u4f5c\u6211\u4eec\u76f8\u5f53\u4e8e\u5c31\u662f\u5728 $d+1$ \u5c42\u6253\u5546\u6807\u673a\u5c31\u53ef\u4ee5\u5b9e\u73b0\u76f8\u90bb\u5757\u7684\u4ea4\u6362\u4e86\u3002\n\n\u5bf9\u4e8e\u6253\u4e0a\u6807\u8bb0\u7684\u5c42\u6211\u4eec\u53cd\u5411\u9012\u5f52\u5373\u53ef\uff0c\u5176\u4f59\u7684\u5c31\u662f\u7ebf\u6bb5\u6811\u533a\u95f4\u6c42\u548c\u5566\uff0c\u5177\u4f53\u53ef\u4ee5\u770b\u4ee3\u7801\u5b9e\u73b0\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(2^{18}\\times 18)$\n\n## $\\mathrm{Code}$\n\n```cpp\nconst int mo=998244353;\nconst int N=1<<18;\n\nint n,m,S,a[N+5],t[N*4+5],flg[21];\n\ninline void Fix(int x,int l,int r,int p,int val,int d)\n{\n\tif(p>r||p<l) return;\n\tif(l==r)\n\t{\n\t\tt[x]=val;\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tif(flg[d]) Fix(x<<1|1,l,mid,p,val,d-1),Fix(x<<1,mid+1,r,p,val,d-1);\n\telse Fix(x<<1,l,mid,p,val,d-1),Fix(x<<1|1,mid+1,r,p,val,d-1);\n\tt[x]=t[x<<1]+t[x<<1|1];\n}\n\ninline int Ask(int x,int l,int r,int ll,int rr,int d)\n{\n\tif(ll>r||rr<l) return 0;\n\tif(ll<=l&&r<=rr) return t[x];\n\tint mid=l+r>>1;\n\tint ans=0;\n\tif(flg[d]) ans=Ask(x<<1,mid+1,r,ll,rr,d-1)+Ask(x<<1|1,l,mid,ll,rr,d-1);//\u5982\u679c\u6253\u4e0a\u6807\u8bb0\uff0c\u90a3\u4e48\u5bf9\u4e8e\u5de6\u513f\u5b50\u8981\u5728[mid+1,r]\u91cc\u9012\u5f52\u4e0b\u53bb\n\telse ans=Ask(x<<1,l,mid,ll,rr,d-1)+Ask(x<<1|1,mid+1,r,ll,rr,d-1); \n\treturn ans;\n}\n\nsigned main()\n{\n\tio.read(n),io.read(m);\n\tS=(1ll<<n);\n\tFor(i,1,S) \n\t{\n\t\tio.read(a[i]);\n\t\tFix(1,1,S,i,a[i],n);\n\t}\n\tfor (;m--;)\n\t{\n\t\tint type,x,y;\n\t\tio.read(type);\n\t\tio.read(x);\n\t\tif((type^2)&&(type^3)) io.read(y);\n\t\tif(type==1) Fix(1,1,S,x,y,n);\n\t\tif(type==3) flg[x+1]^=1;\n\t\tif(type==2) For(i,0,x) flg[i]^=1;\n\t\tif(type==4) io.write(Ask(1,1,S,x,y,n)),puts(\"\");\n\t}\n\treturn 0;\n}\n\t\t\t\n\t\t\n\t\n\t\n```\n",
        "postTime": 1598105936,
        "uid": 308464,
        "name": "\u5947\u7c73",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1401F \u3010Reverse and Swap\u3011"
    },
    {
        "content": "## \u5206\u6790\n\n\u9996\u5148\uff0c\u6570\u7ec4\u5927\u5c0f\u4e3a $2^n$\uff0c\u6240\u4ee5\u53ef\u4ee5\u786e\u4fdd2\u548c3\u64cd\u4f5c\u90fd\u80fd\u8986\u76d6\u5230\u6574\u4e2a\u6570\u7ec4\uff0c\u800c\u4e14\u6211\u4eec\u53ef\u4ee5\u5c06\u6574\u4e2a\u6570\u7ec4\u5206\u4e3a $n+1$ \u5c42\u3002\n\n\u5728\u5206\u5c42\u4e4b\u540e\uff0c\u6211\u4eec\u8be5\u600e\u4e48\u5904\u74062\u64cd\u4f5c\u548c3\u64cd\u4f5c\u5462\uff1f\u9996\u5148\u7406\u89e33\u64cd\u4f5c\uff0c\u5c06\u9898\u9762\u7b80\u5316\u5c31\u662f\u5c06\u6bcf\u4e2a\u5927\u5c0f\u4e3a $2^{k+1}$ \u91cc\u9762\u7684\u5de6\u53f3\u4e24\u5757\u6574\u4f53\u4ea4\u6362\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8fdb\u4e00\u6b65\u7406\u89e32\u64cd\u4f5c\uff0c\u76f8\u5f53\u4e8e $i \u4ece $k$ \u4e00\u76f4\u52301\uff0c\u5c06\u5927\u5c0f\u4e3a $2^i$ \u5185\u7684\u5de6\u53f3\u4e24\u90e8\u5206\u6574\u4f53\u4ea4\u6362\uff0c\u53ef\u4ee5\u81ea\u5df1\u753b\u4e2a\u8349\u56fe\u7406\u89e3\u4e00\u4e0b\u3002\n\n\u5bf9\u4e8e\u5927\u5c0f\u4e3a $2^i$ \u7684\u5de6\u53f3\u8c03\u6362\u5982\u4f55\u7b80\u5316\u5462\uff0c\u4e0a\u9762\u5df2\u7ecf\u8bf4\u4e86\uff0c2\u548c3\u64cd\u4f5c\u80fd\u8986\u76d6\u6574\u4e2a\u6570\u7ec4\uff0c\u56e0\u6b64\u5bf9\u4e8e\u8fd9\u6837\u7684\u4e00\u4e2a\u8c03\u6362\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u7b2c $i$ \u5c42\u6253\u4e0a\u6807\u8bb0\uff0c\u90a3\u6211\u4eec\u5728\u4fee\u6539\u548c\u67e5\u503c\u65f6\uff0c\u5982\u679c\u8be2\u95ee\u5230\u8fd9\u4e00\u5c42\uff0c\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u5c31\u53ef\u4ee5\u7406\u89e3\u4e3a\u5b83\u7684\u5de6\u513f\u5b50\u548c\u53f3\u513f\u5b50\u8fdb\u884c\u4e86\u8c03\u6362\uff0c\u5982\u679c\u6709\u6807\u8bb0\u5c31\u53bb\u672c\u4e0d\u4f1a\u53bb\u7684\u90a3\u4e00\u4e2a\u513f\u5b50\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5177\u4f53\u64cd\u4f5c\u53ef\u4ee5\u770b\u4ee3\u7801\uff0c\u76ee\u524d\u6700\u4f18\u89e3\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define ls (rt<<1)\n#define rs ((rt<<1)^1)\n\nint n,q,rot[20],a[600000],p;\n\ninline void read(int &res){\n\tres=0;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9')c=getchar();\n\twhile(c>='0'&&c<='9')res=(res<<1)+(res<<3)+c-48,c=getchar();\n}\n\nvoid build(int l,int r,int rt){//\u5de6\u7aef\u70b9\uff0c\u53f3\u7aef\u70b9\uff0c\u7f16\u53f7 \n\tif(l==r){\n\t\tread(a[rt]);//\u6b64\u5904\u8bfb\u5165\u6613\u8bc1\u5176\u6b63\u786e\u6027\uff0c\u5c31\u4e0d\u8bc1\u660e\u4e86 \n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(l,mid,ls),build(mid+1,r,rs);\n\ta[rt]=a[ls]+a[rs];//\u53d6\u548c \n}\n\ninline void modify(int mb,int L,int R,int rt,int fz,int ccs){//\u76ee\u6807\u4f4d\u7f6e\uff0c\u5de6\u7aef\u70b9\uff0c\u53f3\u7aef\u70b9\uff0c\u533a\u95f4\u7f16\u53f7\uff0c\u6b32\u4fee\u6539\u503c\uff0c\u5c42\u6570 \n\tif(L==R){//\u627e\u5230\u76ee\u6807\u4f4d\u7f6e\uff0c\u8fdb\u884c\u4fee\u6539 \n\t\ta[rt]=fz;\n\t\treturn;\n\t}\n\tint mid=(L+R)>>1;\n\tif(mid>=mb)modify(mb,L,mid,ls^rot[ccs],fz,ccs-1);//\u5f02\u6216\u5373\u53ef\u6539\u53d8\u662f\u5426\u53bb\u53e6\u4e00\u4e2a\u5b50\u533a\u95f4 \n\tif(mid<mb)modify(mb,mid+1,R,rs^rot[ccs],fz,ccs-1);\n\ta[rt]=a[ls]+a[rs];\n}\n\nint query(int l,int r,int L,int R,int rt,int ccs){//\u76ee\u6807\u5de6\u7aef\u70b9\uff0c\u76ee\u6807\u53f3\u7aef\u70b9\uff0c\u5de6\u7aef\u70b9\uff0c\u53f3\u7aef\u70b9\uff0c\u533a\u95f4\u7f16\u53f7\uff0c\u5c42\u6570 \n\tif(L>=l&&r>=R)return a[rt];\n\tint mid=(L+R)>>1,ll=0,rr=0;\n\tif(mid>=l)ll=query(l,r,L,mid,ls^rot[ccs],ccs-1);\n\tif(mid<r)rr=query(l,r,mid+1,R,rs^rot[ccs],ccs-1);\n\treturn ll+rr;\n}\n\nsigned main()\n{\n\tread(n);read(p);\n\tint xx=1<<n;\n\tbuild(1,xx,1);\n\tint op,ll,rr;\n\tfor(register int i=1;i<=p;i++){\n\t\tread(op);\n\t\tif(op==1){\n\t\t\tread(ll);read(rr);\n\t\t\tmodify(ll,1,xx,1,rr,n);\n\t\t}\n\t\tif(op==2){\n\t\t\tread(ll);\n\t\t\tfor(int i=0;i<=ll;i++)rot[i]^=1;\n\t\t}\n\t\tif(op==3){\n\t\t\tread(ll);rot[ll+1]^=1;\n\t\t}//2\u30013\u64cd\u4f5c\u7684\u542b\u4e49\u4e8e\u9898\u76ee\u4e2d\u5df2\u89e3\u91ca\u8fc7\u4e86 \n\t\tif(op==4){\n\t\t\tread(ll);read(rr);\n\t\t\tprintf(\"%lld\\n\",query(ll,rr,1,xx,1,n));\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1616763175,
        "uid": 166410,
        "name": "\u6f20\u5bd2",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1401F Reverse and Swap"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/CF1401F)\n## \u601d\u7ef4\u5386\u7a0b\n\u770b\u5230\u5bf9\u533a\u95f4\u4fee\u6539\u548c\u67e5\u8be2\u4ee5\u53ca\u6570\u636e\u8303\u56f4 $2^{18}$\uff0c\u60f3\u5230\u7ebf\u6bb5\u6811\uff0c\u8003\u8651\u5982\u4f55\u7ef4\u62a4\u7ffb\u8f6c\u548c\u4ea4\u6362\u7684\u64cd\u4f5c\uff0c\u7531\u4e8e\u662f\u5927\u90e8\u5206\u6574\u4f53\u64cd\u4f5c\uff0c\u76f4\u63a5\u4ea4\u6362\u5fc5\u7136\u4f1a\u8d85\u65f6\u3002\n\n\u89c2\u5bdf\u5230\u9898\u5e72\u4e2d\u6240\u6709\u8303\u56f4\u90fd\u662f\u548c $2^k$ \u6709\u5173\uff0c\u800c\u4e14\u7ebf\u6bb5\u6811\u7684\u7b2c $k$ \u5c42\uff08\u6839\u662f\u7b2c $n$ \u5c42\uff09\u63a7\u5236\u8303\u56f4\u90fd\u4e5f\u521a\u597d\u662f $2^k$\uff0c\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u76f4\u63a5\u4f7f\u7528\u61d2\u6807\u8bb0\u5728\u67e5\u8be2\u65f6\u76f4\u63a5\u4ea4\u6362\u8bbf\u95ee\u5de6\u53f3\u5b50\u6811\u65f6\u7684\u4e0b\u6807\uff0c\u4e14\u7531\u4e8e\u53ea\u662f\u5bf9\u5355\u5c42\u8fdb\u884c\u8bbf\u95ee\u8303\u56f4\u4e92\u6362\uff0c\u6240\u4ee5\u5bf9\u4e8e\u66f4\u4e0b\u9762\u7684\u513f\u5b50\u8282\u70b9\u672c\u8eab\u7684\u6709\u5e8f\u6027\u4ecd\u65e7\u80fd\u591f\u4fdd\u8bc1\u3002\n\n\u8fd9\u6837 Swap \u5c31\u53ef\u4ee5\u76f4\u63a5\u5bf9 $k+1$ \u5c42\u6253\u61d2\u6807\u8bb0\uff08\u7531\u4e8e\u662f\u4e24\u4e2a $2^k$ \u5c42\u4ea4\u6362\uff0c\u6240\u4ee5\u5e94\u5f53\u64cd\u4f5c\u4ed6\u4eec\u7684\u7236\u4eb2\u8282\u70b9\uff09\uff0c\u540e\u9762\u4e0d\u8bba\u662f\u4fee\u6539\u8fd8\u662f\u6c42\u503c\u5c31\u76f8\u5f53\u4e8e\u8fdb\u884c\u4e86\u7ffb\u8f6c\u3002\n\n\u6700\u540e\u8003\u8651 Reverse \u64cd\u4f5c\u5982\u4f55\u7528\u5df2\u6709\u7684\u61d2\u6807\u8bb0\u7ffb\u8f6c\u533a\u95f4\u8fdb\u884c\u7ef4\u62a4\uff0c\u5982\u679c\u76f4\u63a5\u5bf9\u6574\u4e2a\u533a\u95f4\u7ffb\u8f6c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4fdd\u8bc1\u5bf9\u4e8e\u4e24\u8fb9 $2^{k-1}$ \u7684\u8303\u56f4\u7684\u6570\uff0c\u867d\u7136\u4ed6\u4eec\u5185\u90e8\u4ecd\u65e7\u662f\u539f\u672c\u7684\u987a\u5e8f\uff0c\u4f46\u662f\u5728\u8fdb\u884c\u7ffb\u8f6c\u540e**\u4e24\u8fb9\u7684\u6bcf\u4e2a\u6570\u5fc5\u7136\u90fd\u5728\u5b8c\u5168\u7ffb\u8f6c\u540e\u5e94\u5f53\u5b58\u5728\u7684 $2^{k-1}$ \u8303\u56f4\u5185**\u3002\n\n\u6bd4\u5982\u64cd\u4f5c\u6570\u5217 $7,8,9,10$ \u5b8c\u5168\u7ffb\u8f6c\uff0c\u5e94\u5f53\u5f97\u5230 $10,9,8,7$\uff0c\u5148\u5bf9\u7b2c $2$ \u5c42\u64cd\u4f5c\uff0c\u5f97\u5230\u7ed3\u679c\u4e3a $9,10,7,8$\uff0c\u53ef\u4ee5\u53d1\u73b0\u867d\u7136\u6ca1\u5f97\u5230\u6700\u7ec8\u7ed3\u679c\uff0c\u4f46\u662f\u7b2c $1$ \u5c42\u7684\u4e24\u4e2a\u533a\u95f4\u4e2d\u7684\u503c\u4e0d\u8003\u8651\u987a\u5e8f\u7684\u60c5\u51b5\u4e0b\u548c\u7b54\u6848\u4e00\u6837\uff0c\u8fdb\u800c\u5bf9\u7b2c $1$ \u5c42\u64cd\u4f5c\uff0c\u5f97\u5230\u6700\u7ec8\u7ed3\u679c $10,9,8,7$\u3002\n\n\u8fdb\u800c\u8003\u8651\u6bcf\u6b21\u90fd\u5bf9\u533a\u95f4\u76f4\u63a5\u7ffb\u8f6c\uff0c\u7ef4\u62a4\u6574\u4f53\u6b63\u786e\u6027\u540e\u7ee7\u7eed\u5bf9\u513f\u5b50\u533a\u95f4\u8fdb\u884c\u7ffb\u8f6c\uff0c\u6700\u7ec8\u8fbe\u5230\u80fd\u591f\u4fdd\u8bc1\u6240\u6709\u6570\u7684\u6b63\u786e\u6027\u3002\n\n**\u4e00\u4e2a\u5c0f\u4f18\u5316**\uff1a\u7531\u4e8e\u533a\u95f4\u7ffb\u8f6c\u4e24\u6b21\u65f6\u76f8\u5f53\u4e8e\u6ca1\u6709\u7ffb\u8f6c\uff0c\u6240\u4ee5\u5e94\u5f53\u4f7f\u7528\u5f02\u6216\u7ef4\u62a4\u61d2\u6807\u8bb0\u3002\n\n~~\u672c\u4eba\u62d9\u89c1\uff0c\u5982\u6709\u5dee\u9519\uff0c\u8bf7\u8d50\u6559\u3002~~\n\n## \u4ee3\u7801\n##### \u6709\u6ce8\u91ca\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define void inline void\n#define ls rt<<1\n#define rs rt<<1|1\nusing namespace std;\nconst ll N=(1<<18)+10;\nll n,q,x,y,type,a[N],lazy[110];\nstruct node{\n\tll tl,tr,sum;\n}t[N<<2];\ninline ll read(){\n\tchar ch=getchar();ll res=0,f=1;\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') res=res*10+ch-'0',ch=getchar();\n\treturn res*f;\n}\nvoid push_up(ll rt){\n\tt[rt].sum=t[ls].sum+t[rs].sum;\n}\nvoid build(ll rt,ll l,ll r){\n\tif(l==r){t[rt].sum=a[l];return ;}\n\tll mid=(l+r)>>1;\n\tbuild(ls,l,mid),build(rs,mid+1,r);\n\tpush_up(rt);\n}\nvoid Replace(ll rt,ll L,ll R,ll x,ll k,ll depth){\n\tif(x<L||x>R) return ;\n\tif(L==R){t[rt].sum=k;return ;}\n\tll mid=(L+R)>>1;\n\tif(lazy[depth]) Replace(ls,mid+1,R,x,k,depth-1),Replace(rs,L,mid,x,k,depth-1);//\u5bf9\u8c03\u5de6\u53f3\u513f\u5b50\u8bbf\u95ee\u8303\u56f4\uff0c\u5373\u533a\u95f4\u7ffb\u8f6c\u3002 \n\telse Replace(ls,L,mid,x,k,depth-1),Replace(rs,mid+1,R,x,k,depth-1);\n\tpush_up(rt);\n}\nvoid Reverse(ll k){\n\tfor(ll i=0;i<=k;i++)//\u8bb0\u5f97\u4ece0\u5f00\u59cb\uff0c\u53f6\u5b50\u8282\u70b9\u6df1\u5ea6\u4e3a0 \u3002\n\t\tlazy[i]^=1;\n}\nvoid Swap(ll k){\n\tlazy[k+1]^=1;//\u5fc5\u987b\u662fk+1\uff0c\u56e0\u4e3a\u662f\u5bf9\u4e24\u4e2a2^k\u4ea4\u6362\u3002\n}\ninline ll Sum(ll rt,ll L,ll R,ll l,ll r,ll depth){\n\tif(R<l||r<L) return 0;\n\tif(l<=L&&R<=r)\treturn t[rt].sum;\n\tll mid=(L+R)>>1;\n\tif(lazy[depth]) return Sum(ls,mid+1,R,l,r,depth-1)+Sum(rs,L,mid,l,r,depth-1);\n\telse return Sum(ls,L,mid,l,r,depth-1)+Sum(rs,mid+1,R,l,r,depth-1);\n}\nint main(){\n\tn=read(),q=read();\n\tfor(ll i=1;i<=(1<<n);i++) a[i]=read();//\u6570\u636e\u8303\u56f4\u4e3a1<<n\uff0c\u4e0d\u8981\u9519\u5199\u6210n\u3002\n\tbuild(1,1,1<<n);\n\twhile(q--){\n\t\ttype=read();\n\t\tif(type==1) x=read(),y=read(),Replace(1,1,1<<n,x,y,n);\n\t\tif(type==2) x=read(),Reverse(x);\n\t\tif(type==3) x=read(),Swap(x);\n\t\tif(type==4) x=read(),y=read(),printf(\"%lld\\n\",Sum(1,1,1<<n,x,y,n));\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1661829827,
        "uid": 365166,
        "name": "\u795e\u5149qwq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1401F Reverse and Swap"
    },
    {
        "content": "## \u9898\u610f\n\u64cd\u4f5c 1\uff1a\u5355\u70b9\u8d4b\u503c\u3002  \n\u64cd\u4f5c 2\uff1b\u533a\u95f4\u53cd\u8f6c\u3002  \n\u64cd\u4f5c 3\uff1a\u533a\u95f4\u4ea4\u6362\u3002  \n\u64cd\u4f5c 4\uff1a\u533a\u95f4\u6c42\u548c\u3002\n## Solution\n\u770b\u5230\u5355\u70b9\u4fee\u6539\u533a\u95f4\u6c42\u548c\uff0c\u6211\u4eec\u4f1a\u60f3\u5230\u7ebf\u6bb5\u6811\uff1b\u800c\u770b\u5230\u533a\u95f4\u53cd\u8f6c\u6211\u4eec\u53c8\u4f1a\u60f3\u5230\u5e73\u8861\u6811\u3002\n\n\u8003\u8651\u5230\u6570\u7ec4\u957f\u5ea6\u53ca\u5927\u90e8\u5206\u64cd\u4f5c\u4e0e $2$ \u7684\u6b21\u5e42\u76f4\u63a5\u76f8\u5173\uff0c\u6211\u4eec\u5c3d\u91cf\u5f80\u7ebf\u6bb5\u6811\u4e0a\u9762\u9760\u3002\n\n\u6570\u7ec4\u957f\u5ea6\u662f $2$ \u7684\u6b21\u5e42\u6709\u4ec0\u4e48\u597d\u5904\u5462\uff1f\n\n\u7ebf\u6bb5\u6811\u5212\u5206\u5b50\u8282\u70b9\u65f6\uff0c\u5b50\u8282\u70b9\u7684\u957f\u5ea6\u4f1a**\u6b63\u597d**\u53d8\u4e3a\u7236\u8282\u70b9\u4e00\u534a\u3002\n\n\u6362\u53e5\u8bdd\u8bf4\uff0c**\u5b50\u8282\u70b9\u7684\u957f\u5ea6\u4e5f\u4f1a\u662f $2$ \u7684\u6b21\u5e42**\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u4e1c\u897f\uff1a\u64cd\u4f5c 2 \u548c 3 \u5b9e\u9645\u4e0a\u5c31\u662f\u5bf9\u7ebf\u6bb5\u6811\u4e0a\u957f\u5ea6\u4e3a\u5b9a\u503c\u7684\u8282\u70b9\u8fdb\u884c\u64cd\u4f5c\u3002\n\n\u4e8e\u662f\u6211\u4eec\u7528\u5e73\u8861\u6811\u4e00\u6837\u5904\u7406\u533a\u95f4\u53cd\u8f6c\u7684\u65b9\u5f0f\uff0c\u5728\u8282\u70b9\u4e0a\u6253\u6807\u8bb0\u3002\n\n\u56e0\u4e3a\u64cd\u4f5c 2 \u548c 3 \u6d89\u53ca\u7684\u4fee\u6539\u90fd\u662f\u6574\u5c42\uff0c\u6211\u4eec\u76f4\u63a5\u5728\u5c42\u53f7\u4e0a\u6253\u6807\u8bb0\u3002\n\n### \u505a\u6cd5 \n\n\u4ee5\u4e0b\u8bb0**\u957f\u5ea6\u4e3a $2^k$ \u7684\u8282\u70b9\u4e3a\u7b2c $k$ \u5c42\u8282\u70b9**\u3002\n\n\u5b9a\u4e49 $rev_k$ \u4e3a\u662f\u5426\u53cd\u8f6c\u7b2c $k$ \u5c42\u8282\u70b9\u7684\u5b50\u8282\u70b9\u7684\u6807\u8bb0\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c 2\uff0c\u6211\u4eec\u9700\u8981\u5c06\u7b2c $k$ \u5c42\u53ca\u4ee5\u4e0b\u7684\u8282\u70b9\u53cd\u8f6c\u3002  \n\u4e8e\u662f\u6211\u4eec\u5c06 $0\\le i\\le k$ \u7684 $rev_i$ \u53d6\u53cd\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c 3\uff0c\u6211\u4eec\u9700\u8981\u53cd\u8f6c\u76f8\u90bb\u6210\u5bf9\u7684\u7b2c $k$ \u5c42\u8282\u70b9\u3002  \n\u76f8\u5f53\u4e8e\u53cd\u8f6c\u7b2c $k+1$ \u5c42\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\uff0c\u4e8e\u662f\u5c06 $rev_{k+1}$ \u53d6\u53cd\u3002\n\n$rev$ \u6734\u7d20\u4fee\u6539\u5373\u53ef\u3002\uff08~~\u60a8\u53ef\u4ee5\u518d\u5efa\u4e00\u68f5\u7ebf\u6bb5\u6811~~\n\n\u5269\u4e0b\u7684\u5c31\u662f\u7ebf\u6bb5\u6811\u6a21\u677f\u4e86\uff0c\u8bbf\u95ee\u5de6\u53f3\u8282\u70b9\u65f6\u8003\u8651 $rev$ \u7684\u5f71\u54cd\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(qn)$\u3002\n## Code\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N=(1<<18)+5;\nint n,q;\nll a[N];\nnamespace SegTr{\n\tint tlen;\n\tbool rev[20];\n\tstruct segtr{int son[2];ll dat;}t[N*2];\n\t#define lc (t[p].son[rev[dep]])\n\t#define rc (t[p].son[!rev[dep]])\n\tvoid upd(int p){t[p].dat=t[t[p].son[0]].dat+t[t[p].son[1]].dat;}\n\tint build(int l,int r){\n\t\tint p=++tlen;\n\t\tif(l==r)t[p].dat=a[l];\n\t\telse{\n\t\t\tint mid=(l+r)>>1;\n\t\t\tt[p].son[0]=build(l,mid);\n\t\t\tt[p].son[1]=build(mid+1,r);\n\t\t\tupd(p);\n\t\t}\n\t\treturn p;\n\t}\n\t//\u64cd\u4f5c 1 \n\tvoid replace(int p,int l,int r,int dep,int x,ll k){\n\t\tif(l==r){t[p].dat=k;return;}\n\t\tint mid=(l+r)>>1;\n\t\tif(x<=mid)replace(lc,l,mid,dep-1,x,k);\n\t\telse replace(rc,mid+1,r,dep-1,x,k);\n\t\tupd(p);\n\t}\n\t//\u64cd\u4f5c 2 \n\tvoid reverse(int k){for(int i=k;i>=0;i--)rev[i]^=1;}\n\t//\u64cd\u4f5c 3 \n\tvoid swap(int k){rev[k+1]^=1;}\n\t//\u64cd\u4f5c 4 \n\tll sum(int p,int l,int r,int dep,int x,int y){\n\t\tif(l>=x&&r<=y)return t[p].dat;\n\t\tint mid=(l+r)>>1;ll res=0;\n\t\tif(x<=mid)res+=sum(lc,l,mid,dep-1,x,y);\n\t\tif(y>mid)res+=sum(rc,mid+1,r,dep-1,x,y);\n\t\treturn res;\n\t}\n}\nint main(){\n\tscanf(\"%d%d\",&n,&q);\n\tfor(int i=1;i<=(1<<n);i++)scanf(\"%lld\",&a[i]);\n\tSegTr::build(1,1<<n);\n\twhile(q--){\n\t\tint op;\n\t\tscanf(\"%d\",&op);\n\t\tif(op==1){\n\t\t\tint x;ll k;\n\t\t\tscanf(\"%d%lld\",&x,&k);\n\t\t\tSegTr::replace(1,1,1<<n,n,x,k);\n\t\t}\n\t\tif(op==2){\n\t\t\tint k;\n\t\t\tscanf(\"%d\",&k);\n\t\t\tSegTr::reverse(k);\n\t\t}\n\t\tif(op==3){\n\t\t\tint k;\n\t\t\tscanf(\"%d\",&k);\n\t\t\tSegTr::swap(k);\n\t\t}\n\t\tif(op==4){\n\t\t\tint l,r;\n\t\t\tscanf(\"%d%d\",&l,&r);\n\t\t\tprintf(\"%lld\\n\",SegTr::sum(1,1,1<<n,n,l,r));\n\t\t}\n\t}\n}\n```\n",
        "postTime": 1672122246,
        "uid": 654546,
        "name": "ScatteredHope",
        "ccfLevel": 5,
        "title": "CF1401F \u9898\u89e3"
    },
    {
        "content": "[\u539f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/CF1401F)\n\n## \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $2^n$ \u7684\u6570\u7ec4 $a$\uff0c\u73b0\u5728\u9700\u8981\u5904\u7406 $q$ \u4e2a\u8be2\u95ee\uff0c\u6bcf\u4e2a\u8be2\u95ee\u662f\u4ee5\u4e0b $4$ \u79cd\u7c7b\u578b\u4e4b\u4e00\uff1a\n\n1. $Replace(x, k)$ \u628a $a_x$ \u4fee\u6539\u4e3a $k$\u3002\n\n2. $Reverse(k)$ \u5bf9\u4e8e\u6bcf\u4e00\u4e2a $i(i\\ge 1)$ \uff0c\u628a\u533a\u95f4 $[(i-1)\\cdot 2^k+1, i\\cdot 2^k]$ \u7684\u5143\u7d20\u7ffb\u8f6c\u3002\n\n3. $Swap(k)$ \u5bf9\u4e8e\u6bcf\u4e00\u4e2a  $i(i\\ge 1)$ \uff0c\u4ea4\u6362\u533a\u95f4 $[(2i-2)\\cdot2^k+1,(2i-1)\\cdot2^k]$ \u548c $[(2i-1)\\cdot2^k+1,2i\\cdot2^k]$ \u7684\u6240\u6709\u5143\u7d20\u3002\n\n4. $Sum(l,r)$ \u8f93\u51fa\u533a\u95f4 $[l,r]$ \u4e2d\u6240\u6709\u5143\u7d20\u7684\u548c\u3002\n\n#### \u6570\u636e\u8303\u56f4\n\n$0\\leq n \\leq 18,1\\leq n \\leq 10^5,0\\leq a_i\\leq10^9$\u3002\n\n## \u601d\u8def\n\n\u6ce8\u610f\u5230\u6570\u7ec4\u7684\u957f\u5ea6\u548c\u64cd\u4f5c\u7684\u533a\u95f4\u6bd4\u8f83\u7279\u6b8a\u3002\u4e0d\u96be\u53d1\u73b0\u5efa\u7acb\u7ebf\u6bb5\u6811\u4ee5\u540e\uff0c\u6bcf\u6b21 $2,3$ \u64cd\u4f5c\u7684\u533a\u95f4\u5fc5\u7136\u5bf9\u5e94\u5230\u7ebf\u6bb5\u6811\u4e0a\u76f8\u5e94\u7684\u82e5\u5e72\u5b8c\u6574\u7684\u8282\u70b9\u3002\n\n\u8bbe\u7ebf\u6bb5\u6811\u7684\u6839\u8282\u70b9\u4e3a\u7b2c $n$ \u5c42\uff0c\u5c42\u6570\u4f9d\u6b21\u5f80\u4e0b\u9012\u51cf\uff0c\u90a3\u4e48\u7b2c $k$ \u5c42\u81ea\u5de6\u5411\u53f3\u7b2c $i$ \u4e2a\u8282\u70b9\u5c31\u5bf9\u5e94\u5230\u539f\u6570\u7ec4\u7684\u533a\u95f4 $[(i-1)\\cdot 2^k+1, i\\cdot 2^k]$\u3002\u8bb0 $rev_i$ \u8868\u793a\u7b2c $i$ \u5c42\u8282\u70b9\u7684\u5de6\u53f3\u513f\u5b50\u662f\u5426\u4ea4\u6362\u3002\n\n\u5bf9\u4e8e Replace \u548c Sum \u64cd\u4f5c\uff0c\u76f4\u63a5\u5728\u7ebf\u6bb5\u6811\u4e0a\u9012\u5f52\u4fee\u6539\u6216\u67e5\u8be2\u5373\u53ef\u3002\n\n\u5bf9\u4e8e Reverse \u64cd\u4f5c\uff0c\u5728\u7ebf\u6bb5\u6811\u4e0a\u5bf9\u5e94\u5230\u5c06\u7b2c $k$ \u5c42\u7684\u6240\u6709\u8282\u70b9\u5bf9\u5e94\u7684\u533a\u95f4\u7ffb\u8f6c\uff0c\u5b9e\u8d28\u4e0a\u5c31\u662f\u4ea4\u6362\u7b2c $1 \\sum k$ \u5c42\u7684\u6240\u6709\u8282\u70b9\u7684\u5de6\u53f3\u513f\u5b50\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u5c06\u5bf9\u5e94\u7684 $rev_i$ \u4fee\u6539\u5373\u53ef\u3002\n\n\u5bf9\u4e8e Swap \u64cd\u4f5c\uff0c\u4e0d\u96be\u53d1\u73b0\u5c31\u662f\u4ea4\u6362\u7b2c $k+1$ \u5c42\u6240\u6709\u8282\u70b9\u7684\u5de6\u53f3\u513f\u5b50\uff0c\u53ea\u9700\u8981\u4fee\u6539 $rev_{k+1}$ \u5373\u53ef\u3002\n\n## code\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int N=5e5+10;\n#define LL long long\nint n,m;bool rev[N];LL val[N<<2];\nvoid push_up(int p){val[p]=val[p<<1]+val[p<<1|1];}\nvoid build(int p,int l,int r)\n{\n\tif(l==r) return scanf(\"%lld\",&val[p]),void();int mid=l+r>>1;\n\tbuild(p<<1,l,mid),build(p<<1|1,mid+1,r);push_up(p);\n}\nvoid update(int p,int l,int r,int x,int k,int dep)\n{\n\tif(l==r) return val[p]=k,void();int mid=l+r>>1;\n\tif(x<=mid) update(p<<1|rev[dep],l,mid,x,k,dep-1);\n\telse update(p<<1|rev[dep]^1,mid+1,r,x,k,dep-1);\n\tpush_up(p);\n}\nLL query(int p,int l,int r,int L,int R,int dep)\n{\n\tif(L<=l&&r<=R) return val[p];int mid=l+r>>1;LL res=0;\n\tif(L<=mid) res+=query(p<<1|rev[dep],l,mid,L,R,dep-1);\n\tif(R>mid) res+=query(p<<1|rev[dep]^1,mid+1,r,L,R,dep-1);\n\treturn res;\n}\nvoid Reverse(int k){for(int i=0;i<=k;i++) rev[i]^=1;}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);build(1,1,1<<n);\n\twhile(m--)\n\t{\n\t\tint opt,x,y;scanf(\"%d\",&opt);\n\t\tif(opt==1) scanf(\"%d%d\",&x,&y),update(1,1,1<<n,x,y,n);\n\t\tif(opt==2) scanf(\"%d\",&x),Reverse(x);\n\t\tif(opt==3) scanf(\"%d\",&x),rev[x+1]^=1;\n\t\tif(opt==4) scanf(\"%d%d\",&x,&y),printf(\"%lld\\n\",query(1,1,1<<n,x,y,n));\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1666168158,
        "uid": 288192,
        "name": "ListenSnow",
        "ccfLevel": 7,
        "title": "CF1401F Reverse and Swap"
    },
    {
        "content": "\u5f88\u4e45\u4ee5\u524d\u5c31\u53d1\u73b0\u7684\u4e00\u9053~~\u6c34~~\u9898\uff0c\u56e0\u4e3a\u7b2c\u4e00\u6b21\u770b\u5230 $F$ \u9898\u662f\u4e2a\u84dd\u5c31\u89c9\u5f97\u5f88\u6de6\uff0c\u6240\u4ee5\u628a\u5b83\u653e\u8fdb\u9898\u5355\u91cc\u9762\u5403\u4e86\u5f88\u4e45\u571f\uff0c\u4eca\u5929\u6574\u7406\u9898\u5355\u65f6\u987a\u4fbf\u62ff\u51fa\u6765\u8865\u4e86\u8865\u3002    \n\u5176\u5b9e\u5982\u679c\u4f60\u4f1a\u5e73\u8861\u6811\uff0c\u4f1a\u533a\u95f4\u53cd\u8f6c\u5c31\u77e5\u9053\u8fd9\u9898\u8be5\u600e\u4e48\u505a\u4e86\u3002      \n\n\u6211\u4eec\u9996\u5148\u624b\u73a9\u4e00\u4e0b\uff0c\u53d1\u73b0\u5b83\u7684\u96be\u70b9\u64cd\u4f5c\u90fd\u5728 $2 , 3$ \u4e0a\uff0c\u6211\u4eec\u5c1d\u8bd5\u7a81\u7834\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u3002       \n\n\u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbf\u63cf\u8ff0\uff0c\u4ee4\u53f6\u8282\u70b9\u4e3a $0$ \u5c42\uff0c\u6839\u8282\u70b9\u4e3a $n$ \u5c42\u3002\n\n\u6211\u4eec\u5148\u601d\u8003\u64cd\u4f5c $2$ \uff0c\u53d1\u73b0\u5b83\u5176\u5b9e\u5c31\u662f\u628a\u7b2c $k$ \u5c42\u7684\u70b9\u6267\u884c\u4e86\u4e00\u4e2a $rev$ \u64cd\u4f5c\uff0c\u800c\u5bf9\u4e8e\u6211\u4eec\u5bf9 $rev$ \u64cd\u4f5c\u7684\u4e00\u822c\u505a\u6cd5\uff0c\u5c31\u662f\u6765\u4e2a\u61d2\u6807\u8bb0\u7136\u540e\u5f80\u4e0b\u9762\u4f20\u4f20\u4f20\uff0c\u53ef\u662f\u8fd9\u9053\u9898\u7684\u8bdd\u8fd9\u4e48\u505a\u5c82\u4e0d\u662f\u4f1a\u88ab\u5361\u5417\uff1f\u6bd4\u5982\u8bf4\u6211\u5168\u7ed9\u4f60\u4e00\u4e2a\u5c42\u6570\u5728\u53f6\u5b50\u8282\u70b9\u7684 $rev$ \u64cd\u4f5c\u5c31\u59a5\u59a5\u7684 $O(mn)$ \u5403\u571f\u3002       \n\n\u53d1\u73b0\u6bcf\u5c42\u7684\u4ea4\u6362\u5176\u5b9e\u662f\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u66b4\u529b\u8bb0\u5f55\u6bcf\u4e00\u5c42\u7684\u4fee\u6539\u60c5\u51b5\u3002   \n\n\u8bb0 $Swap_x$ \u8868\u793a\u7b2c $x$ \u5c42\u7684\u513f\u5b50\u4eec\u7684\u4ea4\u6362\u60c5\u51b5\uff0c $0$ \u8868\u793a\u4e0d\u4ea4\u6362\uff0c $1$ \u8868\u793a\u4ea4\u6362\u3002   \n\n\u5bf9\u4e8e $2$ \u64cd\u4f5c\uff0c\u6211\u4eec\u66b4\u529b\u628a $Swap_0 \\sim Swap_k$ \u90fd\u66b4\u529b\u7ef4\u62a4\u4e00\u4e0b\u3002    \n\n\u5bf9\u4e8e $3$ \u64cd\u4f5c\uff0c\u6211\u4eec\u53d1\u73b0\u5b83\u5176\u5b9e\u5c31\u662f\u628a $k + 1$ \u5c42\u7684\u6240\u6709\u70b9\u7684\u513f\u5b50\u4eec\u4ea4\u6362\u4e00\u4e0b\uff0c$Swap_k + 1$ \u6539\u4e00\u6539\u76f4\u63a5 $O(1)$ \u4fee\u6539\u4e86\u597d\u5417\uff1f       \n\n\u7136\u540e\u7ebf\u6bb5\u6811\u64cd\u4f5c\u4e00\u4e0b\uff0c\u53ea\u4e0d\u8fc7\u5728\u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbf\u5b9e\u73b0\uff0c\u6211\u4eec\u4e0d\u5b9e\u9645\u4ea4\u6362\u5de6\u53f3\u513f\u5b50\uff0c\u5f80\u4e0b\u9012\u5f52\u65f6\u770b\u4ea4\u6362\u513f\u5b50\u6ca1\u6709\u5373\u53ef\u3002       \n\n\u4e0d\u5f97\u4e0d\u8bf4\u6ca1\u6709\u4ec0\u4e48\u96be\u70b9\uff0c\u8fd9\u573aCF\u548c\u6700\u8fd1~~\u67d0\u573aCF~~\u4e00\u6837\u5e94\u8be5\u662f\u9001\u5206\u573a\u3002     \n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n#define int long long\nconst int Len = (1 << 18) + 5;\nint N,n,m,a[Len],ls[Len << 2],rs[Len << 2],ans[Len << 2],Swap[23];\nvoid push_up(int x){ans[x] = ans[ls[x]] + ans[rs[x]];}\ninline void build(int p,int l,int r)\n{\n\tls[p] = p << 1;\n\trs[p] = p << 1 | 1;\n\tif(l == r) \n\t{\n\t\tans[p] = a[l];\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tbuild(ls[p] , l , mid);\n\tbuild(rs[p] , mid + 1 , r);\n\tpush_up(p);\n} \nvoid update(int p,int l,int r,int idx,int w,int dep)\n{\n\tif(l == r)\n\t{\n\t\tans[p] = w;\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tint Lson = ls[p] , Rson = rs[p];\n\tif(Swap[dep]) swap(Lson , Rson);\n\tif(idx <= mid) update(Lson , l , mid , idx , w , dep - 1);\n\telse update(Rson , mid + 1 , r , idx , w , dep - 1);\n\tpush_up(p);\n}\nint query(int p,int l,int r,int nl,int nr,int dep)\n{\n\tif(nl <= l && nr >= r) return ans[p];\n\tint mid = (l + r) >> 1 , res = 0;\n\tint Lson = ls[p] , Rson = rs[p];\n\tif(Swap[dep]) swap(Lson , Rson);\n\tif(nl <= mid) res = res + query(Lson , l , mid , nl , nr , dep - 1);\n\tif(nr > mid) res = (res + query(Rson , mid + 1 , r , nl , nr , dep - 1));\n\treturn res;\n}\nsigned main()\n{\n\tscanf(\"%lld %lld\",&N,&m);n = 1 << N;\n\tfor(int i = 1 ; i <= n ; i ++) scanf(\"%lld\",&a[i]);\n\tbuild(1 , 1 , n);\n\tfor(int i = 1 ; i <= m ; i ++)\n\t{\n\t\tint opt,x,k;scanf(\"%lld\",&opt);\n\t\tif(opt == 1){scanf(\"%lld %lld\",&x,&k);update(1 , 1 , n , x , k , N);}\n\t\tif(opt == 2){scanf(\"%lld\",&k);for(int i = 0 ; i <= k ; i ++) Swap[i] ^= 1;}\n\t\tif(opt == 3){scanf(\"%lld\",&k);Swap[k + 1] ^= 1;}\n\t\tif(opt == 4){scanf(\"%lld %lld\",&x,&k);printf(\"%lld\\n\",query(1 , 1 , n , x , k , N));}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1612579851,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1401F \u3010Reverse and Swap\u3011"
    },
    {
        "content": "${\\ }{\\ }{\\ }{\\ }{\\ }{\\ }{\\ }$\u9996\u5148\u4e00\u5171\u6709\u56db\u4e2a\u64cd\u4f5c\uff0c\u7b2c\u4e00\u4e2a\u548c\u7b2c\u56db\u4e2a\u90fd\u662f\u7ebf\u6bb5\u6811\u7684\u57fa\u672c\u64cd\u4f5c\uff0c\u76f4\u63a5\u7528\u7ebf\u6bb5\u6811\u5b9e\u73b0\u3002\n\u2003\u2003\n  \n${\\ }{\\ }{\\ }{\\ }{\\ }{\\ }{\\ }$\u7b2c\u4e8c\u4e2a\u548c\u7b2c\u4e09\u4e2a\u64cd\u4f5c\u90fd\u662f\u5728\u5206\u6210 $2 ^ k$ \u957f\u5ea6\u533a\u95f4\u64cd\u4f5c\uff0c\u5e76\u4e14\u9898\u76ee\u4e2d\u7684\u5e8f\u5217\u4e00\u5171\u6709 $2^n$ \u4e2a\u8282\u70b9\uff0c\u5982\u679c\u653e\u5230\u7ebf\u6bb5\u6811\u91cc\u6b63\u597d\u662f $n+1$ \u5c42\uff0c\u6bcf\u5c42\u90fd\u7531 $2 ^ k$ \u957f\u5ea6\u533a\u95f4\u6784\u6210\u3002\u7b2c $0$ \u5c42\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u7b2c $n$ \u5c42\u4e3a\u6839\u8282\u70b9\n\u2003\u2003\n  \n${\\ }{\\ }{\\ }{\\ }{\\ }{\\ }{\\ }$\u5bf9\u4e8e\u7b2c\u4e09\u4e2a\u64cd\u4f5c $swap$ \uff1a\u76f8\u5f53\u4e8e\u4ea4\u6362\u7ebf\u6bb5\u6811\u4e24\u4e2a\u76f8\u90bb\u4e14\u957f\u5ea6\u4e3a $2^k$ \u7684\u533a\u95f4\uff0c\u7531\u4e8e\u672c\u9898\u4e00\u5171\u6709 $p = 1e5$ \u4e2a\u4fee\u6539\u67e5\u8be2\u64cd\u4f5c\uff0c\u6240\u4ee5\u5982\u679c\u6bcf\u6b21\u4fee\u6539\u90fd\u4fee\u6539\u7684\u8bdd\u54ea\u6015\u662f\u7ebf\u6bb5\u6811\u4e5f\u4e00\u5b9a\u4f1a\u8d85\u65f6\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u53d6\u5de7\uff0c\u4e0d\u771f\u6b63\u5730\u8fdb\u884c\u4fee\u6539\uff0c\u800c\u662f\u6bcf\u6b21\u67e5\u8be2\u6216\u8005\u4fee\u6539\u5355\u70b9\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u6839\u636e\u4fee\u6539\u6807\u8bb0\u6765\u8bbf\u95ee\u5230\u76f8\u90bb\u7684\u533a\u95f4\u3002\u4e5f\u5c31\u662f\u76f8\u5f53\u4e8e\u60f3\u8981\u8bbf\u95ee\u8be5\u8282\u70b9\u7684\u5de6\uff08\u53f3\uff09\u5b50\u6811\u65f6\u5019\uff0c\u7531\u4e8e\u533a\u95f4\u7ffb\u8f6c\u4e86\uff0c\u6211\u4eec\u76f4\u63a5\u8bbf\u95ee\u53e6\u4e00\u4e2a\u53f3\uff08\u5de6\uff09\u5b50\u6811\u533a\u95f4\u5373\u53ef\u3002\u53ef\u4ee5\u7528\u4e00\u4e2a\u53d8\u91cf\u6765\u8bb0\u5f55\u4ee5\u4e0b\u662f\u5426\u9700\u8981\u6539\u53d8\u8bbf\u95ee\u7684\u5de6\u53f3\u7ed3\u70b9\u3002\u6bd4\u5982\u5f53\u524d$swap$\u7684\u662f\u7b2c $k$ \u5c42 \uff0c\u90a3\u4e48\u53ea\u9700\u8981\u6807\u8bb0\u7b2c $k + 1$ \u5c42\uff0c\u8fd9\u6837\u6211\u4eec\u8bbf\u95ee\u5230\u8be5\u8282\u70b9\u7684\u7b2c $k + 1$\u5c42\u7684\u65f6\u5019\uff0c\u6839\u636e\u6807\u8bb0\u7684\u6307\u5f15\u5c31\u4f1a\u8df3\u8f6c\u5230\u7b2c$k$\u5c42\u7684\u76f8\u90bb\u533a\u95f4\uff0c\u6ee1\u8db3\u9898\u610f\u3002\n\u2003\u2003\n  \n  \n${\\ }{\\ }{\\ }{\\ }{\\ }{\\ }{\\ }$\u7b2c\u4e8c\u4e2a\u540c\u7406\uff0c\u533a\u95f4\u7ffb\u8f6c\u6211\u4eec\u53c2\u8003[\u6587\u827a\u5e73\u8861\u6811](https://www.luogu.com.cn/problem/P3391)\u8fd9\u9053\u9898\uff0c\u60f3\u8981\u5b9e\u73b0\u533a\u95f4\u7ffb\u8f6c\uff0c\u53ea\u9700\u8981\u628a\u533a\u95f4\u91cc\u7684\u6240\u6709\u5de6\u53f3\u5b50\u6811\u5168\u90e8\u4ea4\u6362\u5373\u53ef\u3002\u800c\u5de6\u53f3\u5b50\u6811\u6b63\u597d\u90fd\u662f\u76f8\u90bb\u7684\u533a\u95f4\uff0c\u90a3\u4e48\u6211\u4eec\u5bf9\u6574\u4e2a\u533a\u95f4\u90fd\u505a\u4e00\u6b21\u7c7b\u4f3c\u64cd\u4f5c\u4e09\u7684\u6807\u8bb0\u5373\u53ef\u3002\u5047\u5982\u5f53\u524d\u9700\u8981$reverse$\u7b2c $k$ \u5c42\uff0c\u56e0\u4e3a\u7ebf\u6bb5\u6811\u662f\u4e00\u9897\u6ee1\u4e8c\u53c9\u6811\uff0c\u5728\u6211\u4eec\u5bfb\u627e\u8be5\u533a\u95f4\u7684\u65f6\u5019\u5982\u679c\u5230\u8fbe\u7b2c$k$\u5c42\u7684\u65f6\u5019\uff0c\u8be5\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u5c31\u8868\u793a\u6574\u4e2a\u8981\u627e\u7684\u533a\u95f4\uff0c\u6211\u4eec\u9700\u8981\u5c06\u7b2c $k$ \u5c42\u4ee5\u4e0b\u7684\u5c42\u5168\u90e8\u7ffb\u8f6c\uff0c\u4e5f\u5c31\u662f\u5c06$0$ ~ $k$ \u5c42\u7684\u8282\u70b9\u90fd\u6253\u8d4f\u6807\u8bb0\u5373\u53ef\u3002\n\u2003\u2003\n  \n  \n${\\ }{\\ }{\\ }{\\ }{\\ }{\\ }{\\ }$\u5177\u4f53\u7ec6\u8282\u770b\u4ee3\u7801\uff0c\u662f\u5728\u7ebf\u6bb5\u6811\u6a21\u677f\u7684\u57fa\u7840\u4e4b\u4e0a\u8fdb\u884c\u6539\u8fdb\u5f97\u5230\u7684\u3002\n  \n  \n\n**\u8fd9\u91cc\u6709\u4e24\u4e2a\u6613\u9519\u70b9\uff1a**\n\n\n\u2003\u2003\n- \u56e0\u4e3a\u7ebf\u6bb5\u6811\u7ffb\u8f6c\u95ee\u9898\u7684\u89e3\u51b3\u529e\u6cd5\u662f\u5728\u7ffb\u8f6c\u534a\u533a\u95f4\u6253\u4e0a\u6807\u53f7\uff0c\u6709\u6807\u8bb0\u7684\u8282\u70b9\u5de6\u53f3\u5b50\u6811\u4e92\u6362\uff08\u5b9e\u9645\u4f53\u73b0\u5c31\u662f\u67e5\u627e\u7684\u65f6\u5019\u4ea4\u6362\u5373\u53ef\uff0c\u6574\u68f5\u6811\u5b9e\u9645\u4e0a\u662f\u4e0d\u7528\u52a8\u7684\uff09\uff0c\u56e0\u6b64\u6240\u6709\u64cd\u4f5c\u5728\u5bfb\u627e\u9884\u5b9a\u533a\u95f4\u7684\u65f6\u5019\u5c31\u4e0d\u80fd\u5728\u6839\u636e\u5f53\u524d\u6839\u8282\u70b9\u5bfb\u627e\u9884\u5b9a\u533a\u95f4\uff0c\u56e0\u4e3a\u8fd9\u91cc\u7684p\u5df2\u7ecf\u53ef\u80fd\u53d8\u4e86\uff0c\u5c31\u4e0d\u80fd\u7528 $tr[p].l$ \u548c $tr[p].r$ \u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u518d\u4f20\u5165\u53c2\u6570 $l$ \u548c $r$ \u6765\u8f85\u52a9\u5bfb\u627e\u9884\u5b9a\u533a\u95f4\u3002\n- \u51e1\u662f\u6d89\u53ca\u5230\u4f4d\u8fd0\u7b97\u7684\u90fd\u8981\u75af\u72c2\u52a0\u62ec\u53f7\uff01\uff01\uff01\u4f4d\u8fd0\u7b97\u7684\u4f18\u5148\u7ea7\u5b9e\u5728\u662f\u592a\u7cdf\u7cd5\u4e86\n\n```cpp\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<iostream>\n\ntypedef long long ll;\nusing namespace std;\nconst int N = 2000005;\n\nint n, m;\nint a[N];\nint rev[N], cnt;\nstruct tree{\n    int l, r;\n    ll sum;\n}tr[N << 2];\n\nvoid pushup(int p)\n{\n    tr[p].sum = tr[p << 1].sum + tr[p << 1 | 1].sum;\n}\n\nvoid build(int p, int l, int r)\n{\n    tr[p] = {l, r, 0};\n    if(l == r){\n        tr[p].sum = a[r];\n        return ;\n    }\n    int mid = l + r >> 1;\n    build(p << 1, l, mid);\n    build(p << 1 | 1, mid + 1, r);\n    pushup(p);\n}\n\nvoid modify(int l, int r, int p, int x, int val, int depth)\n{\n    if(l == r){\n        tr[p].sum = val;\n        return ;\n    }\n    int mid = l + r >> 1;\n    if(x <= mid)modify(l, mid, (p << 1) + (rev[depth] == 1), x, val, depth - 1);\n    else modify(mid + 1, r, (p << 1 | 1) - (rev[depth] == 1), x, val, depth - 1);\n    pushup(p);\n}\n\nll query(int rl, int rr, int p, int l, int r, int depth)\n{\n\n    if(rl >= l && rr <= r)\n        return tr[p].sum;\n    int mid = rl +rr >> 1;\n    ll ans = 0;\n    if(l <= mid)ans += query(rl, mid, (p << 1) + (rev[depth] == 1), l, r, depth - 1);\n    if(r > mid)ans += query(mid + 1, rr, (p << 1 | 1) - (rev[depth] == 1), l, r, depth - 1);\n    return ans ;\n}\n\nint main()\n{\n    scanf(\"%d%d\", &n, &m);\n    for(int i = 1; i <= (1 << n); ++ i)\n        scanf(\"%d\", &a[i]);\n    build(1, 1, 1 << n);\n    while(m -- ){\n        int op, x, y;\n        scanf(\"%d%d\", &op, &x);\n        if(op == 1){\n            scanf(\"%d\", &y);\n            modify(1, 1 << n, 1, x, y, n);// 2^n \u4e2a\u8282\u70b9, \u7ebf\u6bb5\u6811\u4e00\u5171\u4f1a\u6709n+1\u5c42\u7b2c0\u5c42\u4e3a\u53f6\u5b50\u8282\u70b9,\u7b2cn\u5c42\u4e3a\u6839\u8282\u70b9\n        }\n        else if(op == 2)for(int i = 0; i <= x; ++ i)rev[i] ^= 1;\n        else if(op == 3)rev[x + 1] ^= 1;\n        else {\n            scanf(\"%d\", &y);\n            printf(\"%lld\\n\", query(1, 1 << n, 1, x, y, n));\n        }\n    }\n    return 0;\n}\n\n```\n",
        "postTime": 1598752653,
        "uid": 262605,
        "name": "fanfansann",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1401F \u3010Reverse and Swap\u3011"
    },
    {
        "content": "### \u9898\u76ee\u63cf\u8ff0\n\n\u6709\u4e00\u4e2a\u603b\u957f\u5ea6\u4e3a$2^n$\u7684\u6570\u7ec4\uff0c\u8981\u6c42\u652f\u6301\u4ee5\u4e0b\u56db\u79cd\u64cd\u4f5c\uff1a\n\n- $replace(x,k)$\uff0c\u5c06\u4f4d\u7f6e$x$\u5904\u7684\u6570\u8bbe\u4e3a$k$\n- $reverse(k)$\uff0c\u5c06\u6bcf\u4e00\u6bb5\u957f\u5ea6\u4e3a$2^k$\u7684\u5b50\u533a\u95f4\u5012\u5e8f\n- $swap(k)$\uff0c\u4ea4\u6362\u6bcf\u4e24\u6bb5\u76f8\u90bb\u7684\u957f\u5ea6\u4e3a$2^k$\u7684\u5b50\u533a\u95f4\n- $sum(l,r)$\uff0c\u6c42$[l,r]$\u8303\u56f4\u5185\u6240\u6709\u6570\u7684\u548c\n\n### \u9898\u89e3\n\n\u6574\u4e2a\u6570\u7ec4\u53ef\u4ee5\u7528\u4e00\u4e2a\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff08\u5e76\u4e14\u8fd9\u4e2a\u7ebf\u6bb5\u6811\u662f\u4e00\u4e2a\u5b8c\u5168\u4e8c\u53c9\u6811\uff09\uff0c\u9ebb\u70e6\u7684\u662f\u5982\u4f55\u5904\u7406\u5012\u5e8f\u548c\u4ea4\u6362\u8fd9\u4e24\u79cd\u64cd\u4f5c\u3002\n\n\u65e0\u8bba\u5012\u5e8f\u8fd8\u662f\u4ea4\u6362\uff0c\u76f8\u540c\u7684\u64cd\u4f5c\u8fde\u7eed\u8fdb\u884c\u4e24\u6b21\uff0c\u7b49\u4ef7\u4e8e\u6ca1\u6709\u8fdb\u884c\u64cd\u4f5c\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u5c42\uff0c\u5b83\u7684\u4e24\u4e2a\u5b69\u5b50\u7684\u5206\u7ec4\u5173\u7cfb\u662f\u6052\u5b9a\u4e0d\u53d8\u7684\uff0c\u4f1a\u6539\u53d8\u7684\u53ea\u6709\u5b83\u4eec\u7684\u5de6\u53f3\u4f4d\u7f6e\u548c\u5185\u90e8\u987a\u5e8f\u3002\u4ee5$[1,2,3,4,5,6,7,8]$\u4e3a\u4f8b\uff0c\u65e0\u8bba\u662f\u8fdb\u884c\u5012\u5e8f\uff0c\u8fd8\u662f\u4ea4\u6362\uff0c\u90fd\u4e0d\u4f1a\u6539\u53d8$\\{1,2,3,4\\}$\u548c$\\{5,6,7,8\\}$\u8fd9\u6837\u7684\u5206\u7ec4\u5173\u7cfb\uff1b\u540c\u6837\uff0c\u5411\u4e0b\u4e00\u5c42\uff0c$\\{1,2\\}$\u548c$\\{3,4\\}$\u7684\u5206\u7ec4\uff0c$\\{5,6\\}$\u548c$\\{7,8\\}$\u7684\u5206\u7ec4\u4e5f\u662f\u59cb\u7ec8\u4fdd\u6301\u7684\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e24\u4e2a\u4e8c\u8fdb\u5236\u6570\uff0c\u4e00\u4e2a\u8bb0\u5f55\u5f53\u524d\u7684\u5012\u5e8f\u64cd\u4f5c\uff0c\u53e6\u4e00\u4e2a\u8bb0\u5f55\u5f53\u524d\u7684\u4ea4\u6362\u64cd\u4f5c\u3002\u6bcf\u6b21\u6709\u65b0\u7684\u64cd\u4f5c\uff0c\u5c31\u4e0e\u5f53\u524d\u7684\u72b6\u6001\u8fdb\u884c\u5f02\u6216\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u5012\u5e8f\u548c\u4ea4\u6362\u8fd9\u4e24\u79cd\u64cd\u4f5c\uff0c\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u5bf9\u7ebf\u6bb5\u6811\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c\uff0c\u76f4\u63a5\u4fee\u6539\u5bf9\u5e94\u7684\u72b6\u6001\u5373\u53ef\u3002\u5b9e\u9645\u9700\u8981\u5b9e\u73b0\u7684\u7ebf\u6bb5\u6811\u64cd\u4f5c\u5c31\u662f\u5355\u70b9\u8d4b\u503c\u548c\u533a\u95f4\u67e5\u8be2\u3002\u8fd9\u91cc\u7684\u96be\u70b9\u5728\u4e8e\uff0c\u64cd\u4f5c\u4e2d\u7ed9\u51fa\u7684\u4f4d\u7f6e\uff0c\u5e76\u4e0d\u4e00\u5b9a\u5bf9\u5e94\u5b9e\u9645\u7684\u4f4d\u7f6e\uff0c\u800c\u9700\u8981\u6211\u4eec\u6839\u636e\u5f53\u524d\u7684\u5012\u5e8f\u548c\u4ea4\u6362\u72b6\u6001\uff0c\u5c06\u5176\u8fdb\u884c\u53d8\u6362\uff0c\u4ee5\u5f97\u5230\u6700\u7ec8\u7684\u5b9e\u9645\u4f4d\u7f6e\u3002\n\n\u8d4b\u503c\u7684\u60c5\u51b5\u76f8\u5bf9\u7b80\u5355\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u9700\u8981\u5904\u7406\u4e00\u4e2a\u70b9\u3002\u5982\u679c\u5f53\u524d\u5c42\u6709\u5012\u5e8f\u64cd\u4f5c\uff0c\u6211\u4eec\u5c31\u628a\u8fd9\u4e2a\u70b9\u7ffb\u8f6c\u5230\u5bf9\u79f0\u70b9\u4e0a\uff1b\u5982\u679c\u8fd8\u6709\u4ea4\u6362\u64cd\u4f5c\uff0c\u6211\u4eec\u5c31\u518d\u5c06\u8fd9\u4e2a\u70b9\u8fdb\u884c\u4e00\u4e2a\u5faa\u73af\u5e73\u79fb\u3002\n\n\u67e5\u8be2\u65f6\u6211\u4eec\u9700\u8981\u5904\u7406\u4e00\u4e2a\u533a\u95f4\uff0c\u8fd9\u65f6\u6211\u4eec\u4e0d\u80fd\u7b80\u5355\u5730\u53ea\u5904\u7406\u4e24\u4e2a\u7aef\u70b9\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u4e24\u4e2a\u7aef\u70b9\u8de8\u8d8a\u4e86\u5f53\u524d\u533a\u95f4\u4e2d\u70b9\u7684\u60c5\u5f62\uff0c\u8fd9\u6bb5\u8fde\u7eed\u533a\u95f4\u5b9e\u9645\u4e0a\u4f1a\u5bf9\u5e94\u4e24\u4e2a\u4e0d\u8fde\u7eed\u7684\u533a\u95f4\u3002\u6bd4\u5982\uff0c\u6570\u7ec4$[1,2,3,4,5,6,7,8]$\u7ecf\u8fc7$swap(2)$\u548c$reverse(3)$\u64cd\u4f5c\u540e\uff0c\u53d8\u4e3a\u4e86$[4,3,2,1,8,7,6,5]$\u3002\u8fd9\u65f6\uff0c\u5047\u8bbe\u6211\u4eec\u67e5\u8be2$[3,7]$\uff0c\u56e0\u4e3a\u5728\u6700\u4e0a\u5c42\u6709\u5012\u5e8f\u64cd\u4f5c\uff0c\u6240\u4ee5\u6211\u4eec\u7ffb\u8f6c\u533a\u95f4\uff0c\u5c06\u5176\u53d8\u4e3a$[2,6]$\uff1b\u7136\u540e\uff0c\u56e0\u4e3a\u6709\u4ea4\u6362\u64cd\u4f5c\uff0c\u4e24\u4e2a\u7aef\u70b9\u4f1a\u53d8\u4e3a$6$\u548c$2$\uff0c\u4f46\u6b64\u65f6\uff0c\u5982\u679c\u6211\u4eec\u7ee7\u7eed\u6309\u7167$[2,6]$\u6765\u8fdb\u884c\u64cd\u4f5c\uff0c\u663e\u7136\u4f1a\u53d1\u751f\u9519\u8bef\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8fd9\u6bb5\u533a\u95f4\u5bf9\u5e94\u7684\u503c\u662f$[2,1,8,7,6]$\uff0c\u5b9e\u9645\u4e0a\u662f$[1,2]$\u548c$[6,8]$\u8fd9\u4e24\u6bb5\u4e0d\u8fde\u7eed\u7684\u533a\u95f4\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u8981\u628a\u5012\u5e8f\u540e\u5f97\u5230\u7684$[2,6]$\u9996\u5148\u62c6\u5206\u4e3a$[2,4]$\u548c$[5,6]$\uff0c\u7136\u540e\u5bf9\u8fd9\u4e24\u6bb5\u533a\u95f4\u5206\u522b\u8fdb\u884c\u5e73\u79fb\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230$[1,2]$\u548c$[6,8]$\u4e86\u3002\u800c\u5982\u679c\u4e24\u4e2a\u7aef\u70b9\u5728\u5f53\u524d\u533a\u95f4\u4e2d\u70b9\u7684\u540c\u4e00\u4fa7\uff0c\u5219\u4e0d\u9700\u8981\u8fdb\u884c\u8fd9\u4e00\u989d\u5916\u5904\u7406\u3002\n\n### \u53c2\u8003\u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#define MAXN 300005\n#define lson (idx << 1)\n#define rson (idx << 1 | 1)\n\nusing namespace std;\ntypedef long long ll;\n\ntemplate <typename T> void read(T &x) {\n  x = 0;\n  char c = getchar();\n  T sig = 1;\n  for (; !isdigit(c); c = getchar())\n    if (c == '-')\n      sig = -1;\n  for (; isdigit(c); c = getchar())\n    x = (x << 3) + (x << 1) + c - '0';\n  x *= sig;\n}\n\nint a[MAXN], ss = 0, rr = 0;\nll s[MAXN << 2];\n\nvoid calc(int idx) { s[idx] = s[lson] + s[rson]; }\n\nvoid build(int idx, int l, int r) {\n  if (l == r) {\n    s[idx] = a[l];\n    return;\n  }\n  int mid = (l + r) >> 1;\n  build(lson, l, mid);\n  build(rson, mid + 1, r);\n  calc(idx);\n}\n\nvoid move(int &idx, int level) { idx = ((idx - 1) ^ (1 << (level - 1))) + 1; }\n\nvoid update(int idx, int pos, int val, int level, int cl, int cr) {\n  if (level == 0) {\n    s[idx] = val;\n    return;\n  }\n  bool fr = (rr & (1 << level));\n  bool fs = (ss & (1 << level));\n  int mid = (cl + cr) >> 1;\n  if (fr)\n    pos = cl + cr - pos;\n  if (fs)\n    move(pos, level);\n  if (pos <= mid)\n    update(lson, pos, val, level - 1, cl, mid);\n  else\n    update(rson, pos, val, level - 1, mid + 1, cr);\n  calc(idx);\n}\n\nll query(int idx, int l, int r, int level, int cl, int cr) {\n  if (cl >= l && cr <= r)\n    return s[idx];\n  ll ans = 0;\n  bool fr = (rr & (1 << level));\n  bool fs = (ss & (1 << level));\n  int mid = (cl + cr) >> 1;\n  if (fr)\n    l = cl + cr - l, r = cl + cr - r, swap(l, r);\n  if (r <= mid || l >= mid + 1) {\n    if (fs)\n      move(l, level), move(r, level);\n    if (l <= mid)\n      ans += query(lson, l, r, level - 1, cl, mid);\n    else\n      ans += query(rson, l, r, level - 1, mid + 1, cr);\n  } else {\n    int le = mid, rs = mid + 1;\n    if (fs)\n      move(l, level), move(le, level), move(rs, level), move(r, level);\n    if (l > rs)\n      swap(l, rs), swap(le, r);\n    ans += query(lson, l, le, level - 1, cl, mid);\n    ans += query(rson, rs, r, level - 1, mid + 1, cr);\n  }\n  return ans;\n}\n\nclass Solution {\npublic:\n  void solve() {\n    int n, q;\n    read(n), read(q);\n    int R = 1 << n;\n    for (int i = 1; i <= R; ++i)\n      read(a[i]);\n    build(1, 1, R);\n    while (q--) {\n      int t, x, k, l, r;\n      read(t);\n      switch (t) {\n      case 1:\n        read(x), read(k);\n        update(1, x, k, n, 1, R);\n        break;\n      case 2:\n        read(k);\n        rr ^= (1 << k);\n        break;\n      case 3:\n        read(k);\n        ss ^= (1 << (k + 1));\n        break;\n      default:\n        read(l), read(r);\n        printf(\"%lld\\n\", query(1, l, r, n, 1, R));\n      }\n    }\n  }\n};\n\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  Solution solution = Solution();\n  solution.solve();\n}\n```",
        "postTime": 1598073273,
        "uid": 232112,
        "name": "lucifer1004",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1401F \u3010Reverse and Swap\u3011"
    },
    {
        "content": "E \u6ca1\u8c03\u51fa\u6765\u7adf\u7136\u8fd8\u6709 rnk 16 /jk\n\n---\n\n\u6bd4\u8f83\u7b80\u5355\u7684 Div2 F\uff0c\u6709\u4e24\u79cd\u505a\u6cd5\u3002**\u4ee5\u4e0b\u89e3\u6cd5\u4e2d\u4e0b\u6807\u4ece $0$ \u5f00\u59cb\uff0c\u4e0d\u540c\u4e8e\u9898\u76ee\u63cf\u8ff0\uff01**\n\n## $O(qn^2)$ \u505a\u6cd5\n\n**\u5f15\u7406 1**\uff1a\u4e00\u6b21 $swap(x)$ \u64cd\u4f5c\u76f8\u5f53\u4e8e $rev(x)$ \u518d $rev(x+1)$\u3002\n\n**\u5f15\u7406 2**\uff1a$rev$ \u64cd\u4f5c\u7684\u987a\u5e8f\u4e0d\u5f71\u54cd\u7b54\u6848\u3002\n\n\u4ee5\u4e0a\u4e24\u6761\u5f15\u7406\u662f\u663e\u7136\u7684\uff0c\u8bc1\u660e\u7565\u53bb\u3002\n\n\u6839\u636e\u4ee5\u4e0a\u5f15\u7406\uff0c\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a rev \u6807\u8bb0\u4ee3\u8868\u6bcf\u4e00\u4f4d\u662f\u5426\u6709 rev \u8fc7\uff0c\u6bcf\u6b21 rev \u64cd\u4f5c\u7684\u65f6\u5019\u5c31\u8ba9 `rev[x]^=1`\uff0c\u90a3\u4e48\u67e5\u8be2\u65f6 rev \u6709\u503c\u5373\u76f8\u5f53\u4e8e\u8fd9\u4e00\u4f4d\u9700\u8981 rev \u4e00\u4e0b\u3002\n\n**\u5f15\u7406 3**\uff1a\u5bf9\u533a\u95f4 $[i2^k,(i+1)2^k-1]$ \u6267\u884c\u7684 $rev(x)$ \u64cd\u4f5c\uff0c\u4ec5\u5728 $x>k$ \u65f6\u6709\u6548\u3002\n\n**\u5f15\u7406 4**\uff1a\u533a\u95f4 $[i2^k,(i+1)2^k-1]$ \u6267\u884c $rev(x)$ \u64cd\u4f5c\uff08$x>k$\uff09\u53bb\u5230\u7684\u65b0\u533a\u95f4\uff0c\u76f8\u5f53\u4e8e\u628a\u4e24\u4e2a\u7aef\u70b9\u4ea4\u6362\uff0c\u518d\u5206\u522b rev\uff0c\u5f97\u5230\u7684\u4e24\u4e2a\u65b0\u7aef\u70b9\u7ec4\u6210\u7684\u533a\u95f4\u3002\n\n\u8bc1\u660e\uff1a\u56e0\u4e3a $x>k$\uff0c\u6240\u4ee5 $rev(x)$ \u64cd\u4f5c\u6240\u7ffb\u8f6c\u7684\u533a\u95f4\u4e2d\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a\u6070\u597d\u5305\u542b $[i2^k,(i+1)2^k-1]$\uff0c\u56e0\u6b64\u4e24\u4e2a\u7aef\u70b9 rev \u540e\u4ecd\u7136\u8fd8\u5728\u8fd9\u4e2a\u5927\u533a\u95f4\u5185\u3002\n\n\u7531\u5f15\u7406 $3,4$ \u5c31\u53ef\u4ee5\u5f97\u5230\u67e5\u8be2\u548c\u7684\u65b9\u6cd5\uff1a\u628a $[l,r]$ \u62c6\u5206\u6210\u82e5\u5e72\u4e2a\u5f62\u5982 $[i2^k,(i+1)2^k-1]$ \u7684\u533a\u95f4\uff08\u53d1\u73b0\u4e86\u4ec0\u4e48\uff1f\u8fd9\u5c31\u662f**\u7ebf\u6bb5\u6811**\u505a\u7684\u4e8b\u60c5\u554a\uff01\uff09\uff0c\u7136\u540e\u5bf9\u6bcf\u4e2a\u533a\u95f4\u679a\u4e3e\u6bcf\u4e2a\u6709 rev \u6807\u8bb0\u7684\u4f4d\u5206\u522b\u5904\u7406\u5de6\u53f3\u7aef\u70b9\uff0c\u6700\u7ec8\u5c31\u80fd\u5f97\u5230\u53e6\u5916\u82e5\u5e72\u4e2a\u5f62\u5982 $[i2^k,(i+1)2^k-1]$ \u7684\u533a\u95f4\uff0c\u5bf9\u8fd9\u4e9b\u533a\u95f4\u5185\u7684\u6570\u6c42\u548c\u5373\u53ef\u3002\n\n\u5355\u70b9\u4fee\u6539\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u5148\u628a\u8981\u6539\u7684\u4f4d\u7f6e $x$ rev \u56de\u53bb\uff0c\u5355\u70b9\u4fee\u6539\u5373\u53ef\u3002\u7531\u4e8e\u9700\u8981\u67e5\u8be2\u533a\u95f4\u548c\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a<https://codeforces.ml/contest/1401/submission/90594866>\u3002\u8fd9\u91cc\u6211\u628a $[l,r]$ \u62c6\u6210\u4e86 $[0,l-1]$ \u548c $[0,r]$\uff0c\u518d\u6309\u7167\u4e8c\u8fdb\u5236\u4f4d\u62c6\u5206\uff0c\u7565\u4e0d\u540c\u4e8e\u4e0a\u9762\u6240\u8bf4\u7684\u7528\u7ebf\u6bb5\u6811\u62c6\u5206\u3002\n\n## $O(qn)$ \u505a\u6cd5\n\n\u62c6\u5206\u51fa\u533a\u95f4\u540e\u7528\u4f4d\u8fd0\u7b97\u76f4\u63a5 $O(1)$ \u5f97\u5230\u65b0\u533a\u95f4\u3002\u53d1\u73b0\u67e5\u8be2\u7684\u548c\u5728\u6811\u72b6\u6570\u7ec4\u4e0a\u6070\u597d\u5c31\u662f $[i-lowbit(i)+1,i]$ \u7684\u5f62\u5f0f\uff0c\u56e0\u6b64\u76f4\u63a5 $O(1)$ \u67e5\u8be2\u5373\u53ef\u3002",
        "postTime": 1598063206,
        "uid": 42156,
        "name": "feecle6418",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1401F \u3010Reverse and Swap\u3011"
    }
]