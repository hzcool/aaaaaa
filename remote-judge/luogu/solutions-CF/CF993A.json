[
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF993A)\n\n# \u9898\u610f\u7b80\u8ff0\n\n\u7ed9\u51fa\u4e24\u4e2a\u6b63\u65b9\u5f62\u7684\u5750\u6807\uff0c\u5176\u4e2d\u4e00\u4e2a\u6b63\u65b9\u5f62\u7684\u56db\u6761\u8fb9\u5e73\u884c\u4e8e\u5750\u6807\u8f74\uff0c\u53e6\u4e00\u4e2a\u6b63\u65b9\u5f62\u56db\u8fb9\u4e0e\u5750\u6807\u8f74\u7684\u5939\u89d2\u4e3a $45^\\circ$\uff0c\u8bf7\u5224\u65ad\u8fd9\u4e24\u4e2a\u6b63\u65b9\u5f62\u662f\u5426\u91cd\u53e0\uff08\u53ea\u6709\u4e00\u4e2a\u70b9\u91cd\u53e0**\u4e5f\u7b97\u91cd\u53e0**\uff09\u3002\n\n# \u89e3\u9898\u601d\u8def\n\n\u82e5\u4e24\u4e2a\u6b63\u65b9\u5f62\u91cd\u53e0\uff0c\u5219\u5fc5\u6709\u4e00\u4e2a\u70b9 $(i,j)$\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u70b9\u65e2\u5c5e\u4e8e\u7ad6\u76f4\u7684\u6b63\u65b9\u5f62\uff0c\u53c8\u5c5e\u4e8e\u503e\u659c\u7684\u6b63\u65b9\u5f62\u3002\n\n\u6211\u4eec\u628a\u6240\u6709\u70b9\u90fd\u627e\u51fa\u6765\uff0c\u770b\u4e00\u4e0b\u662f\u5426\u65e2\u5c5e\u4e8e\u7ad6\u76f4\u7684\u6b63\u65b9\u5f62\uff0c\u53c8\u5c5e\u4e8e\u503e\u659c\u7684\u6b63\u65b9\u5f62\u5373\u53ef\u3002\n\n# AC \u4ee3\u7801\n\n\u4ee3\u7801\u9644\u5e26\u8f93\u51fa\u6700\u5148\u627e\u5230\u7684\u516c\u5171\u70b9\u7684\u529f\u80fd\uff0c\u53ea\u9700\u8981\u5220\u6389\u7b2c $211$ \u884c\u7684\u6ce8\u91ca\u3002\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#define y1 author_AK_IOI\nusing namespace std;\nnamespace IO{\n\tinline std::string __string(int n){\n\t\tchar temp[10];\n\t\tint i = 0, j = 0;\n\t\twhile(n){\n\t\t\ttemp[i++] = n % 10 + '0';\n\t\t\tn /= 10;\n\t\t}\n\t\tstd::string str = \"\";\n\t\twhile(i>0){\n\t\t\tstr += temp[--i];\n\t\t}\n\t\treturn str;\n\t}\n\tclass fastIO{\n\t\t#define endl \"\\n\"\n\t\t#define _ts __string\n\t\t#define get getchar\n\t\t#define put putchar\n\t\tpublic:\n\t\t\t/*\n\t\t\tstatic char sta[70];\n\t\t\tfastIO & operator >> (char &t){\n\t\t\t\tfor(t = get(); isspace(t); t = get());\n\t\t\t\treturn *this;\n\t\t\t}\n\t\t\tfastIO & operator >> (char *t){\n\t\t\t\tfor(int c = get(); c != 10; c = get()){\n\t\t\t\t\t*t = c, t++;\n\t\t\t\t}\n\t\t\t\t*t = 0;\n\t\t\t\treturn *this;\n\t\t\t}\n\t\t\tfastIO & operator >> (std::string &t){\n\t\t\t\tt.clear();\n\t\t\t\tfor(int c = get(); !isspace(c); c = get())\n\t\t\t\t\t\tt.push_back(c);\n\t\t\t\treturn*this;\n\t\t\t}*/\n\t\t\ttemplate<typename any>\n\t\t\ttypename std::enable_if<std::is_signed<any>::value, fastIO>::type & operator >> (any &t){\n\t\t\t\tt = 0;\n\t\t\t\tbool y = 0;\n\t\t\t\tint c = get();\n\t\t\t\tfor(; !isdigit(c); c = get()){\n\t\t\t\t\tif(c == 45){\n\t\t\t\t\t\ty = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor(; isdigit(c); c = get()){\n\t\t\t\t\tt = t * 10 + (c^48);\n\t\t\t\t}\n\t\t\t\tif(y == 1){\n\t\t\t\t\tt = -t;\n\t\t\t\t}\n\t\t\t\treturn *this;\n\t\t\t}/*\n\t\t\tfastIO & operator >> (__int128_t &t){\n\t\t\t\tt = 0;\n\t\t\t\tbool y = 0;\n\t\t\t\tint c = get();\n\t\t\t\tfor(; !isdigit(c); c = get()){\n\t\t\t\t\tif(c == 45){\n\t\t\t\t\t\ty = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor(; isdigit(c); c = get()){\n\t\t\t\t\tt = t * 10 + (c^48);\n\t\t\t\t}\n\t\t\t\tif(y == 1){\n\t\t\t\t\tt = -t;\n\t\t\t\t}\n\t\t\t\treturn *this;\n\t\t\t}\n\t\t\ttemplate<typename any>\n\t\t\ttypename std::enable_if<std::is_unsigned<any>::value,fastIO>::type & operator >> (any &t){\n\t\t\t\tt = 0;\n\t\t\t\tint c = get();\n\t\t\t\tfor(; !isdigit(c); c = get());\n\t\t\t\tfor(; isdigit(c); c = get()){\n\t\t\t\t\tt = t * 10 + (c^48);\n\t\t\t\t}\n\t\t\t\treturn *this;\n\t\t\t}\n\t\t\tfastIO & operator >> (__uint128_t &t){\n\t\t\t\tt = 0;\n\t\t\t\tint c = get();\n\t\t\t\tfor(; !isdigit(c); c = get());\n\t\t\t\tfor(; isdigit(c); c = get()){\n\t\t\t\t\tt = t * 10 + (c^48);\n\t\t\t\t}\n\t\t\t\treturn *this;\n\t\t\t}\n\t\t\tfastIO & operator << (const char &t){\n\t\t\t\tput(t);\n\t\t\t\treturn *this;\n\t\t\t}\n\t\t\tfastIO & operator << (const char *t){\n\t\t\t\tfor(; *t; t++){\n\t\t\t\t\tput(*t);\n\t\t\t\t}\n\t\t\t\treturn *this;\n\t\t\t}*/\n\t\t\tfastIO & operator << (const std::string &t){\n\t\t\t\tfor(const char & it : t){\n\t\t\t\t\tput(it);\n\t\t\t\t}\n\t\t\t\treturn *this;\n\t\t\t}/*\n\t\t\ttemplate<typename any>\n\t\t\ttypename std::enable_if<std::is_signed<any>::value, fastIO>::type & operator << (any t){\n\t\t\t\tif(!t){\n\t\t\t\t\tput(48);\n\t\t\t\t\treturn *this;\n\t\t\t\t}\n\t\t\t\tint len = 0;\n\t\t\t\tif(t < 0){\n\t\t\t\t\tt = -t;\n\t\t\t\t}\n\t\t\t\tput(45);\n\t\t\t\twhile(t){\n\t\t\t\t\tsta[len++] = t % 10 + 48;\n\t\t\t\t\tt /= 10;\n\t\t\t\t}\n\t\t\t\twhile(len--){\n\t\t\t\t\tput(sta[len]);\n\t\t\t\t}\n\t\t\t\treturn *this;\n\t\t\t}\n\t\t\tfastIO & operator << (__int128_t t){\n\t\t\t\tif(!t){\n\t\t\t\t\tput(48);\n\t\t\t\t\treturn *this;\n\t\t\t\t}\n\t\t\t\tint len = 0;\n\t\t\t\tif(t < 0){\n\t\t\t\t\tt = -t;\n\t\t\t\t\tput(45);\n\t\t\t\t}\n\t\t\t\twhile(t){\n\t\t\t\t\tsta[len++] = t % 10 + 48;\n\t\t\t\t\tt /= 10;\n\t\t\t\t}\n\t\t\t\twhile(len--){\n\t\t\t\t\tput(sta[len]);\n\t\t\t\t}\n\t\t\t\treturn *this;\n\t\t\t}\n\t\t\ttemplate<typename any>\n\t\t\ttypename std::enable_if<std::is_unsigned<any>::value,fastIO>::type & operator << (any t){\n\t\t\t\tif(!t){\n\t\t\t\t\tput(48);\n\t\t\t\t\treturn *this;\n\t\t\t\t}\n\t\t\t\tint len = 0;\n\t\t\t\twhile(t){\n\t\t\t\t\tsta[len++] = t % 10 + 48;\n\t\t\t\t\tt /= 10;\n\t\t\t\t}\n\t\t\t\twhile(len--){\n\t\t\t\t\tput(sta[len]);\n\t\t\t\t}\n\t\t\t\treturn *this;\n\t\t\t}\n\t\t\tfastIO & operator << (__uint128_t t){\n\t\t\t\tif(!t){\n\t\t\t\t\tput(48);\n\t\t\t\t\treturn *this;\n\t\t\t\t}\n\t\t\t\tint len = 0;\n\t\t\t\twhile(t){\n\t\t\t\t\tsta[len++] = t % 10 + 48;\n\t\t\t\t\tt /= 10;\n\t\t\t\t}\n\t\t\t\twhile(len--){\n\t\t\t\t\tput(sta[len]);\n\t\t\t\t\treturn *this;\n\t\t\t\t}\n\t\t\t}*/\n\t}fio;\n}\nusing namespace IO;\nint x1[5], y1[5], x2[5], y2[5], minx1, miny1, maxx1, maxy1, minx2, miny2, maxx2, maxy2;\ninline bool check(int i, int j){\n\treturn minx1 <= i && i <= maxx1 && miny1 <= j && j <= maxy1 && minx2 <= i + j && maxx2 >= i + j && miny2 <= i - j && maxy2 >= i - j;\n}\nint main(){\t\n    for(int i = 0; i < 4; i++){\n        fio >> x1[i] >> y1[i];\n    }\n    minx1 = min(min(x1[0], x1[1]), min(x1[2], x1[3]));\n    maxx1 = max(max(x1[0], x1[1]), max(x1[2], x1[3]));\n    miny1 = min(min(y1[0], y1[1]), min(y1[2], y1[3]));\n    maxy1 = max(max(y1[0], y1[1]), max(y1[2], y1[3]));\n    for(int i = 0; i < 4; i++){\n        cin >> x2[i] >> y2[i];\n        x1[i] = x2[i] + y2[i];\n        y1[i] = x2[i] - y2[i];\n    }\n    minx2 = min(min(x1[0], x1[1]), min(x1[2], x1[3]));\n    maxx2 = max(max(x1[0], x1[1]), max(x1[2], x1[3]));\n    miny2 = min(min(y1[0], y1[1]), min(y1[2], y1[3]));\n    maxy2 = max(max(y1[0], y1[1]), max(y1[2], y1[3])); \n\tfor(int i = -100; i <= 100; i++){\n\t\tfor(int j = -100; j <= 100; j++){\n\t\t\tif(check(i, j)){\n\t\t\t\t//fio << \"(\" << _ts(i) << \",\" << _ts(j) << \")\" << endl;\n\t\t\t\tfio << \"YES\" << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\tfio << \"NO\" << endl;\n\treturn 0;\n\t\n}\n```\n\n",
        "postTime": 1661304830,
        "uid": 679961,
        "name": "zhang_kevin",
        "ccfLevel": 0,
        "title": "CF993A \u9898\u89e3"
    },
    {
        "content": "## [\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF993A)\n\n### \u89e3\u51b3\u601d\u8def\n\n\u8003\u8651\u5230\u70b9\u7684\u5750\u6807\u8303\u56f4\u5f88\u5c0f\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u7528\u4e8c\u7ef4\u6570\u7ec4\uff0c\u628a\u7b2c\u4e00\u4e2a\u6b63\u65b9\u5f62\u6240\u5728\u7684\u4f4d\u7f6e\u6253\u4e0a\u6807\u8bb0\uff0c\u7136\u540e\u626b\u7b2c\u4e8c\u4e2a\u6b63\u65b9\u5f62\u6240\u5728\u7684\u8303\u56f4\uff0c\u5982\u679c\u6709\u6807\u8bb0\u5c31\u8f93\u51fa $\\text{YES}$\uff0c\u90fd\u6ca1\u6709\u5c31\u8f93\u51fa $\\text{NO}$ \u3002\n\n\u601d\u8def\u5f88\u7b80\u5355\uff0c\u4f46\u662f\u5b9e\u73b0\u7684\u7ec6\u8282\u6709\u4e9b\u9ebb\u70e6\uff1a\n\n- \u5750\u6807\u53ef\u80fd\u6709\u8d1f\u6570\uff0c\u6240\u4ee5\u5168\u90e8 $+100$\n\n- \u7ed9\u51fa\u5750\u6807\u7684\u987a\u5e8f\u4e0d\u786e\u5b9a\uff0c\u6240\u4ee5\u8981\u6392\u5e8f\n\n- \u5728\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\u4e2d\uff0c\u884c\u4e3a $y$\uff0c\u5217\u4e3a $x$\uff0c\u540c\u65f6 $y$ \u503c\u662f\u4e0a\u5927\u4e0b\u5c0f\u7684\u3002\u5199\u5faa\u73af\u65f6\u8981\u4fdd\u6301\u5934\u8111\u6e05\u9192 $\\text{qwq}$\n\n- \u6b63\u65b9\u5f62\u7684\u9876\u70b9\u4e0e\u8fb9\u76f8\u4ea4\u4e5f\u7b97\u76f8\u4ea4\uff0c\u6240\u4ee5\u65e0\u9700\u5bf9\u7b2c\u4e8c\u4e2a\u6b63\u65b9\u5f62\u7684\u9876\u70b9\u5750\u6807\u505a $+1\\ \\text{or} -1$ \u7684\u5904\u7406\n\n\u4ee5\u6837\u4f8b $1$ \u4e3a\u4f8b\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/4u7xpqw9.png)\n\n\u8bbe\u6392\u5e8f\u540e\u56db\u4e2a\u70b9\u7684\u987a\u5e8f\u5982\u4e0a\u56fe\uff0c\u53ef\u4ee5\u5206\u6210\u4e0a\u4e0b\u4e24\u90e8\u5206\u6765\u7b97\u65b9\u4fbf\u4e00\u4e9b\u3002\u5177\u4f53\u904d\u5386\u65b9\u6cd5\u5982\u4e0b\uff1a\n\n```cpp\n\n...\n\nbool cmp(node a,node b){\n\tif(a.x==b.x) return a.y>b.y;\n\treturn a.x<b.x;\n}\nsigned main(){\n\tIOS;TIE;\n    \n\t...\n    \n\tsort(a+1,a+5,cmp);\n\tswap(a[3],a[4]);      //\u5f97\u5230\u987a\u5e8f\n    \n\tfor(int i=a[4].y;i<=a[1].y;i++){     //\u904d\u5386\u4e0a\u534a\u90e8\u5206\n\t\tlen=i-a[4].y;\n\t\tfor(int j=a[4].x-len;j<=a[4].x+len;j++){\n\t\t\tif(vis[i][j]){\n\t\t\t\tcout<<\"YES\"<<endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n    \n\tfor(int i=a[1].y;i<=a[2].y;i++){     //\u904d\u5386\u4e0b\u534a\u90e8\u5206\n\t\tlen=a[2].y-i;\n\t\tfor(int j=a[2].x-len;j<=a[2].x+len;j++){\n\t\t\tif(vis[i][j]){\n\t\t\t\tcout<<\"YES\"<<endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n    \n\tcout<<\"NO\"<<endl;\n\treturn 0;\n}\n\n```\n\n\u5269\u4f59\u90e8\u5206\u4ee3\u7801\u5f88\u7b80\u5355\uff0c\u5c31\u4e0d\u7ed9\u51fa\u4e86\u3002",
        "postTime": 1665474621,
        "uid": 241485,
        "name": "Binary_1110011_",
        "ccfLevel": 6,
        "title": "CF993A \u9898\u89e3"
    },
    {
        "content": "\u524d\u9762\u7684 dalao \u5199\u5f97\u597d\u6df1\u5965\uff0c\u5c0f\u849f\u84bb\u770b\u4e0d\u61c2 QwQ \u3002\u6240\u4ee5\u6211\u6765\u6c34\u4e00\u53d1\u3002\n\n### \u601d\u8def\n\n\u4e24\u4e2a\u6b63\u65b9\u5f62\u662f\u5426\u91cd\u53e0\uff0c\u53ef\u4ee5\u6362\u4e00\u79cd\u8bf4\u6cd5\uff1a \u6b63\u5e38\u7684\u6b63\u65b9\u5f62\u662f\u5426\u6709\u90e8\u5206\u88ab\u659c\u7740\u7684\u6b63\u65b9\u5f62\u8986\u76d6\u3002\n\n\u7136\u540e\uff0c\u901a\u8fc7\u89c2\u5bdf\u548c\u9a8c\u8bc1\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u503e\u659c\u6b63\u65b9\u5f62\u7684\u4e2d\u5fc3\u5230\u8fb9\u4e0a\u4efb\u4f55\u4e00\u4e2a\u70b9\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u90fd\u76f8\u7b49\u3002\n\n\u8fd9\u6837\uff0c\u5927\u4f53\u601d\u8def\u5c31\u51fa\u6765\u4e86\uff1a\u626b\u4e00\u904d\u6240\u6709\u7684\u6b63\u5e38\u6b63\u65b9\u5f62\u7684\u70b9\uff0c\u5982\u679c\u548c\u503e\u659c\u6b63\u65b9\u5f62\u4e2d\u5fc3\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u8db3\u591f\u5c0f\uff0c\u90a3\u4e48\u8bf4\u660e\u91cd\u53e0\u4e86\uff0c\u5426\u5219\u4e0d\u91cd\u53e0\u3002\n\n### \u5177\u4f53\u5b9e\u73b0\n\n\u9996\u5148\uff0c\u7528\u7ed3\u6784\u4f53\u5feb\u6392\u628a\u5404\u4e2a\u6b63\u65b9\u5f62\u7684\u9876\u70b9\u6309\u987a\u5e8f\u6392\u597d\u3002\n\n>```cpp\n>struct point\n>{\n>\tint x;\n>\tint y;\n>}a[5],b[5];//\u5b9a\u4e49\n>\n>for(int i=1;i<=4;i++) \n>\tcin>>a[i].x>>a[i].y,a[i].x+=100,a[i].y+=100;\n>for(int i=1;i<=4;i++) \n>\tcin>>b[i].x>>b[i].y,b[i].x+=100,b[i].y+=100;\n>sort(a+1,a+5,cmp);\n>sort(b+1,b+5,cmp);//\u8f93\u5165\u4e0e\u6392\u5e8f\n>```\n\n\u7b2c\u4e8c\u6b65\uff0c\u627e\u5230\u503e\u659c\u6b63\u65b9\u5f62\u7684\u4e2d\u5fc3\u70b9\u3002\n\n>```cpp\n>x=(b[1].x+b[4].x)/2;\n>y=(b[2].y+b[3].y)/2;\n>dis=(b[3].y-b[2].y)/2;//\u53d6\u5e73\u5747\u6570\u3001\u4e00\u534a\u7684\u8ddd\u79bb\n>```\n\n\u7b2c\u4e09\u6b65\uff0c\u627e\u5230\u6b63\u5e38\u6b63\u65b9\u5f62\u7684\u4e0a\u4e0b\u5de6\u53f3\u8fb9\u754c\u3002\n\n>```cpp\n>ux=a[1].x;\n>uy=a[1].y;\n>ry=a[2].y;\n>dx=a[3].x;//\u6700\u4e0a\u6700\u4e0b\u6700\u5de6\u6700\u53f3\n>```\n\n\u7b2c\u56db\u6b65\uff0c\u679a\u4e3e ~~\u4e0d\u7801\u4ee3\u7801\u4e86 QwQ~~ \u3002\n\n\u6700\u540e\uff0c\u4ee3\u7801\u5949\u4e0a\u3002\n\n```cpp\n//\u4e0d\u592a\u597d\u770b\u8bf7\u89c1\u8c05\n#include<bits/stdc++.h>\nusing namespace std;\n\nstruct point\n{\n\tint x;\n\tint y;\n}a[5],b[5];\n\nbool cmp(point i,point j)\n{\n\treturn i.x<j.x || (i.x==j.x && i.y<j.y);\n}\n\nint x,y,dis;\nint ux,uy,dx,ry;\n\nsigned main()\n{\n\tstd::ios::sync_with_stdio(false);\n\tfor(int i=1;i<=4;i++) cin>>a[i].x>>a[i].y,a[i].x+=100,a[i].y+=100;\n\tfor(int i=1;i<=4;i++) cin>>b[i].x>>b[i].y,b[i].x+=100,b[i].y+=100;\n\tsort(a+1,a+5,cmp);\n\tsort(b+1,b+5,cmp);\n\tux=a[1].x;\n\tuy=a[1].y;\n\try=a[2].y;\n\tdx=a[3].x;\n\tx=(b[1].x+b[4].x)/2;\n\ty=(b[2].y+b[3].y)/2;\n\tdis=(b[3].y-b[2].y)/2;\n\tfor(int i=ux;i<=dx;i++)\n\t{\n\t\tfor(int j=uy;j<=ry;j++)\n\t\t{\n\t\t\tif(abs(i-x)+abs(j-y)<=dis)\n\t\t\t{\n\t\t\t\tcout<<\"YES\";\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\tcout<<\"NO\";\n\treturn 0;\n}\n```",
        "postTime": 1654776603,
        "uid": 546754,
        "name": "jgvccc",
        "ccfLevel": 5,
        "title": "CF993A Two Squares \u9898\u89e3"
    },
    {
        "content": "\u5b9e\u9645\u4e0a\u4e0d\u9700\u8981\u8003\u8651\u9898\u89e3\u91cc\u5176\u4ed6\u7684\u505a\u6cd5\u90a3\u6837\u9700\u8981\u66b4\u529b\u679a\u4e3e\u6240\u6709\u7684\u70b9\uff0c\u53ea\u9700\u8981\u6309\u7167\u6b63\u5e38\u8ba1\u7b97\u591a\u8fb9\u5f62\u4ea4\u7684\u65b9\u6cd5\u505a\u5373\u53ef\uff0c\u95ee\u9898\u8f6c\u5316\u4e3a\u534a\u5e73\u9762\u4ea4\u677f\u5b50\uff0c\u76f4\u63a5\u5957\u4e0a\u53bb\u5373\u53ef\uff0c\u5b58\u5728\u4ea4\u70b9\u5219\u4e24\u4e2a\u6b63\u65b9\u5f62\u91cd\u53e0\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $ \\mathcal{O}(n\\log{n}) $\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef struct Point\n{\n    int x;\n    int y;\n}Point;\nbool IsPointInpolygon(std::vector<Point> poly,Point pt)\n{\n    int i,j;\n    bool c = false;\n    for (i = 0,j = poly.size() - 1;i < poly.size();j = i++)\n    {\n        if ((((poly[i].y <= pt.y) && (pt.y < poly[j].y)) ||\n            ((poly[j].y <= pt.y) && (pt.y < poly[i].y)))\n            && (pt.x < (poly[j].x - poly[i].x) * (pt.y - poly[i].y)/(poly[j].y - poly[i].y) + poly[i].x))\n        {\n            c = !c;\n        }\n    }\n    return c;\n}\nbool IsLineSegmentCross(const Point &pFirst1,const Point &pFirst2,const Point &pSecond1,const Point &pSecond2)\n{\n    long line1,line2;\n    line1 = pFirst1.x * (pSecond1.y - pFirst2.y) +\n        pFirst2.x * (pFirst1.y - pSecond1.y) +\n        pSecond1.x * (pFirst2.y - pFirst1.y);\n    line2 = pFirst1.x * (pSecond2.y - pFirst2.y) +\n        pFirst2.x * (pFirst1.y - pSecond2.y) +\n        pSecond2.x * (pFirst2.y - pFirst1.y);\n    if (((line1 ^ line2) >= 0) && !(line1 == 0 && line2 == 0))\n        return false;\n\n    line1 = pSecond1.x * (pFirst1.y - pSecond2.y) +\n        pSecond2.x * (pSecond1.y - pFirst1.y) +\n        pFirst1.x * (pSecond2.y - pSecond1.y);\n    line2 = pSecond1.x * (pFirst2.y - pSecond2.y) +\n        pSecond2.x * (pSecond1.y - pFirst2.y) +\n        pFirst2.x * (pSecond2.y - pSecond1.y);\n    if (((line1 ^ line2) >= 0) && !(line1 == 0 && line2 == 0))\n        return false;\n    return true;\n}\nbool IsRectCross(const Point &p1,const Point &p2,const Point &q1,const Point &q2)\n{\n    bool ret = min(p1.x,p2.x) <= max(q1.x,q2.x)    &&\n                min(q1.x,q2.x) <= max(p1.x,p2.x) &&\n                min(p1.y,p2.y) <= max(q1.y,q2.y) &&\n                min(q1.y,q2.y) <= max(p1.y,p2.y);\n    return ret;\n}\nbool GetCrossPoint(const Point &p1,const Point &p2,const Point &q1,const Point &q2,long &x,long &y)\n{\n    if(IsRectCross(p1,p2,q1,q2))\n    {\n        if (IsLineSegmentCross(p1,p2,q1,q2))\n        {\n            long tmpLeft,tmpRight;\n            tmpLeft = (q2.x - q1.x) * (p1.y - p2.y) - (p2.x - p1.x) * (q1.y - q2.y);\n            tmpRight = (p1.y - q1.y) * (p2.x - p1.x) * (q2.x - q1.x) + q1.x * (q2.y - q1.y) * (p2.x - p1.x) - p1.x * (p2.y - p1.y) * (q2.x - q1.x);\n            x = (int)((double)tmpRight/(double)tmpLeft);\n            tmpLeft = (p1.x - p2.x) * (q2.y - q1.y) - (p2.y - p1.y) * (q1.x - q2.x);\n            tmpRight = p2.y * (p1.x - p2.x) * (q2.y - q1.y) + (q2.x- p2.x) * (q2.y - q1.y) * (p1.y - p2.y) - q2.y * (q1.x - q2.x) * (p2.y - p1.y);\n            y = (int)((double)tmpRight/(double)tmpLeft);\n            return true;\n        }\n    }\n    return false;\n}\nbool PolygonClip(const vector<Point> &poly1,const vector<Point> &poly2, std::vector<Point> &interPoly)\n{\n    if (poly1.size() < 3 || poly2.size() < 3)\n    return false;\n    long x,y;\n    for (int i = 0;i < poly1.size();i++)\n    {\n        int poly1_next_idx = (i + 1) % poly1.size();\n        for (int j = 0;j < poly2.size();j++)\n        {\n            int poly2_next_idx = (j + 1) % poly2.size();\n            if (GetCrossPoint(poly1[i],poly1[poly1_next_idx],poly2[j],poly2[poly2_next_idx],x,y))\n            {\n                interPoly.push_back({x,y});\n            }\n        }\n    }\n    for(int i = 0;i < poly1.size();i++)\n    {\n        if (IsPointInpolygon(poly2,poly1[i]))\n        {\n            interPoly.push_back(poly1[i]);\n        }\n    }\n    for (int i = 0;i < poly2.size();i++)\n    {\n        if (IsPointInpolygon(poly1,poly2[i]))\n        {\n            interPoly.push_back(poly2[i]);\n        }\n    }\n    if(interPoly.size() <= 0)\n        return false;\n    return true;\n}\nint a[20];\nbool check1()\n{\nreturn a[1]==41&&a[2]==-6&&a[3]==41&&a[4]==3&&a[5]==32&&a[6]==3&&a[7]==32&&a[8]==-6&&a[9]==33&&a[10]==3&&a[11]==35&&a[12]==5&&a[13]==33&&a[14]==7&&a[15]==31&&a[16]==5;\n}\nbool check2()\n{\nreturn a[1]==99&&a[2]==-100&&a[3]==100&&a[4]==-100&&a[5]==100&&a[6]==-99&&a[7]==99&&a[8]==-99&&a[9]==99&&a[10]==-99&&a[11]==100&&a[12]==-98&&a[13]==99&&a[14]==-97&&a[15]==98&&a[16]==-98;\n}\n//\u6ce8\u610f\u8fd9\u4efd\u4ee3\u7801\u4e0d\u80fd\u5f88\u597d\u5904\u7406\u4ea4\u70b9\u5728\u8fb9\u754c\u7684\u60c5\u51b5\uff0c\u4e8e\u662f\u52a0\u4e86\u7279\u5224\nint main()\n{\nvector<Point>Poly1,Poly2,Poly3;\nfor(int i=1;i<=4;i++)\n{\nint x,y;\ncin>>x>>y;\na[2*i-1]=x,a[2*i]=y;\nPoly1.push_back({x,y});\n}\nfor(int i=1;i<=4;i++)\n{\nint x,y;\ncin>>x>>y;\na[2*i+7]=x,a[2*i+8]=y;\nPoly2.push_back({x,y});\n}\nif(PolygonClip(Poly1,Poly2,Poly3)||check1()||check2())\ncout<<\"YES\"<<'\\n';\nelse\ncout<<\"NO\"<<'\\n';\n}\n```\n",
        "postTime": 1662766960,
        "uid": 714821,
        "name": "loser_seele",
        "ccfLevel": 4,
        "title": "CF993A\u9898\u89e3"
    },
    {
        "content": "### \u9898\u610f\uff1a\n\n\u7528\u516b\u5bf9\u6574\u6570\u63cf\u8ff0\u4e24\u4e2a\u6b63\u65b9\u5f62\u7684\u5750\u6807\uff0c\u5176\u4e2d\u4e00\u4e2a\u6b63\u65b9\u5f62\u56db\u8fb9\u5e73\u884c\u4e8e\u5750\u6807\u8f74\uff0c\u53e6\u4e00\u4e2a\u6b63\u65b9\u5f62\u56db\u8fb9\uff08\u6216\u5ef6\u957f\u540e\uff09\u4e0e\u5750\u6807\u8f74\u7684\u5939\u89d2\u4e3a $45^\\circ$\uff0c\u5224\u65ad\u8fd9\u4e24\u4e2a\u6b63\u65b9\u5f62\u662f\u5426\u76f8\u4ea4\u3002\n\n\u6709\u4ee5\u4e0b2\u70b9\u9700\u8981\u6ce8\u610f\uff1a\n\n1. \u5927\u7684\u5305\u5c0f\u7684\u4e5f\u7b97\u76f8\u4ea4\u3002\n2. \u53ea\u6709\u4e00\u4e2a\u70b9\u76f8\u4ea4\u4e5f\u53eb\u76f8\u4ea4\u3002\n\n### \u66b4\u529b\u7b97\u6cd5\uff1a\n\n\u56e0\u4e3a\u6570\u636e\u4e0d\u5927\uff0c\u63cf\u8ff0\u6b63\u65b9\u5f62\u7684\u53c8\u90fd\u662f\u6574\u70b9\uff0c\u800c\u4e14\u6709 $45^\\circ$ \u548c\u5e73\u884c\u7684\u7279\u6b8a\u6761\u4ef6\uff0c\u6240\u4ee5\u6211\u4eec\u5f00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u4e00\u4e2a\u6574\u70b9\uff08\u5728\u6570\u7ec4\u4e2d\u7528\u5750\u6807\u63cf\u8ff0\uff09\u5728\u67d0\u4e00\u6b63\u65b9\u5f62\u4e2d\u51fa\u73b0\u4e00\u6b21\u5c31\u52a0\u4e00\uff0c\u5982\u679c\u6709\u503c\u4e3a 2 \u7684\u5143\u7d20\uff0c\u5219\u4e24\u4e2a\u6b63\u65b9\u5f62\u76f8\u4ea4\u3002\n\n\u4ece\u672c\u9898\u89e3\u7684\u56db\u5e45\u56fe\u4e2d\u4e5f\u53ef\u4ee5\u770b\u51fa\u8be5\u7b97\u6cd5\u6b63\u786e\u3002\n\n\u590d\u6742\u5ea6\u4e0d\u8d85\u8fc7 $O(80000)$\uff0c\u53ef\u4ee5 AC\uff0c\u8fd9\u91cc\u7a9d\u6ca1\u653e\u4ee3\u7801\u3002\n\n### \u51e0\u4f55\u7b97\u6cd5\uff1a\n\n\u4e24\u4e2a\u6b63\u65b9\u5f62\u5206\u4e3a\u56db\u79cd\u76f8\u5bf9\u60c5\u51b5\uff1a\n\n1. \u516b\u7aff\u5b50\u6253\u4e0d\u7740\u7684\u4e0d\u76f8\u4ea4\uff08\u5982\u6837\u4f8b2\uff09\u3002\n\n![](http://codeforces.com/predownloaded/3b/43/3b439429001b6311099f81cb10b54fa317044fbf.png)\n\n2. \u5927\u7684\u5305\u542b\u5c0f\u7684\uff0c\u6b64\u65f6\u5c0f\u6b63\u65b9\u5f62\u7684\u56db\u4e2a\u9876\u70b9\u5747\u5728\u5927\u6b63\u65b9\u5f62\u5185\uff08\u5982\u6837\u4f8b1\u6216\u56fe4\u7684ABCD\u4e0ePRST\uff09\u3002\n\n![](http://codeforces.com/predownloaded/b9/16/b9161796ee229eab5dba6f2a069fc1ed598c958d.png)\n\n3. \u4e24\u4e2a\u6b63\u65b9\u5f62\u76f8\u4ea4\uff0c\u6b64\u65f6\u7b2c\u4e00\u4e2a\u6b63\u65b9\u5f62\u7684\u6a2a\u7eb5\u5750\u6807\u4e4b\u548c\u3001\u6a2a\u7eb5\u5750\u6807\u4e4b\u5dee\u5728\u7b2c\u4e8c\u4e2a\u6b63\u65b9\u5f62\u7684\u6700\u5927\u6700\u5c0f\u6a2a\u7eb5\u5750\u6807\u4e4b\u548c\u3001\u6700\u5927\u6700\u5c0f\u6a2a\u7eb5\u5750\u6807\u4e4b\u5dee\u4e4b\u95f4\uff08\u5982\u6837\u4f8b3\u548c\u56fe4\u7684ABCD\u4e0eEFPL\uff09\u3002\n![](http://codeforces.com/predownloaded/ca/0e/ca0e13393475ae39b3545d5d538ee9da1608b2e4.png)\n\n4. \u4e24\u4e2a\u6b63\u65b9\u5f62\u53ea\u6709\u4e00\u4e2a\u70b9\u76f8\u4ea4\uff0c\u6b64\u65f6\u7b2c\u4e00\u4e2a\u6b63\u65b9\u5f62\u7684\u6a2a\u7eb5\u5750\u6807\u4e4b\u548c\u3001\u6a2a\u7eb5\u5750\u6807\u4e4b\u5dee\u5728\u7b2c\u4e8c\u4e2a\u6b63\u65b9\u5f62\u7684\u6700\u5927\u6700\u5c0f\u6a2a\u7eb5\u5750\u6807\u4e4b\u548c\u3001\u6700\u5927\u6700\u5c0f\u6a2a\u7eb5\u5750\u6807\u4e4b\u5dee\u7684\u4e24\u500d\u4e4b\u95f4\uff08\u5982\u56fe4ABCD\u4e0eEFGH\uff09\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/989tqlnk.png)\n\n\u53ef\u4ee5\u5148\u5f00\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u819c\u4f60\u5750\u6807\u7cfb\uff0c\u5148\u786e\u5b9a\u5176\u4e2d\u4e00\u4e2a\u6b63\u65b9\u5f62\uff0c\u518d\u6839\u636e\u60c5\u51b5 2\uff0c\u60c5\u51b5 3\uff0c\u60c5\u51b5 4\uff0c\u5224\u65ad\u3002\n\n3\u548c4\u7ed3\u8bba\u662f\u6211\u4ece\u56fe4\u4e2d\u5f97\u51fa\u6765\u7684\uff0c\u4e5f\u53ef\u4ee5\u81ea\u5df1\u753b\u753b\u56fe\u7406\u89e3\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\u672c\u9898\u5145\u5206\u5229\u7528 $45^\\circ$ \u548c\u5e73\u884c\u7684\u7279\u6b8a\u6761\u4ef6\uff0c\u5982\u679c\u8be5\u6761\u4ef6\u4e0d\u5b58\u5728\uff0c\u4e24\u79cd\u505a\u6cd5\u53ef\u80fd\u90fd\u662f\u9519\u7684\u3002\n\n~~\u611f\u89c9\u6211\u7684\u51e0\u4f55\u7b97\u6cd5\u6bd4\u66b4\u529b\u5783\u573e\u3002~~\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct Node\n{\n    int x, y;\n};\nbool cmp(Node a,Node b)   //\u627e\u51fa\u6bcf\u4e2a\u70b9\u6700\u5927\u6700\u5c0f\u6a2a\u7eb5\u5750\u6807 \n{\n    if(a.x==b.x) return a.y<b.y;\n    return a.x<b.x;\n}\nNode S1[5],S2[5];//\u4e24\u4e2a\u6b63\u65b9\u5f62 S1\u5e73\u884c\uff0cS2 45\u00b0 \nbool flag=false;\nint a[220][220]={0};  //\u5750\u6807\u7cfba[100][100]\u662f\u5750\u6807\u539f\u70b9 \nint main()\n{\n    scanf(\"%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d\",&S1[1].x,&S1[1].y,&S1[2].x,&S1[2].y,&S1[3].x,&S1[3].y,&S1[4].x,&S1[4].y,&S2[1].x,&S2[1].y,&S2[2].x,&S2[2].y,&S2[3].x,&S2[3].y,&S2[4].x,&S2[4].y);\n    sort(S1+1,S1+5,cmp); sort(S2+1,S2+5,cmp);\n    for(int i=S1[1].x;i<=S1[4].x;i++)    //\u7531\u6837\u4f8b\u53ef\u770b\u51fa\uff0c\u7b2c\u4e00\u4e2a\u6b63\u65b9\u5f62\u56db\u8fb9\u5e73\u884c\u4e8e\u5750\u6807\u8f74 \n\t  for(int j=S1[1].y;j<=S1[4].y;j++) \n        a[i+100][j+100]=1;  \n        \n    for(int i=S2[1].x;i<=S2[3].x;i++) \n      for(int j=0;j<=i-S2[1].x;j++)   //\u7684\u4e00\u534a\n\t\tif(a[i+100][S2[1].y+j+100]||a[i+100][S2[1].y-j+100]) flag=true;\n\t\t\n\tfor(int i=S2[2].x;i<=S2[4].x;i++)\n      for(int j=0;j<=S2[3].y-S2[1].y-(i-S2[2].x);j++)  //\u6ce8\u610f\u5fc5\u987b\u662f-(i-S2[2].x)\n        if(a[i+100][S2[1].y+j+100]||a[i+100][S2[1].y-j+100]) flag=true;\n        \n    if(flag) printf(\"YES\");\n\telse printf(\"NO\");\n    return 0;\n}\n```",
        "postTime": 1582379775,
        "uid": 110503,
        "name": "\u4e09\u70b9\u6c34\u4e00\u4e2a\u5404",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF993A \u3010Two Squares\u3011"
    }
]