[
    {
        "content": "\u53d1\u73b0\u8fd8\u6ca1\u6709 CDQ \u5206\u6cbb\u7684\u9898\u89e3\uff0c\u6765\u5199\u4e00\u4e2a\u3002\n\n\u4e00\u4e2a\u6700\u6d45\u663e\u7684\u601d\u8def\uff0c\u5c31\u662f\u627e\n\n$$ x_i<x_j$$\n$$x_i+r_i\\ge x_j$$\n$$x_i\\ge x_j-r_j$$\n$$\\left|f_i-f_j\\right|\\le k$$\n\n\u6ee1\u8db3\u4ee5\u4e0a\u56db\u4e2a\u6761\u4ef6\u7684\u70b9\u5bf9\u6570\u91cf\u3002\u8fd9\u56db\u4e2a\u504f\u5e8f\u5173\u7cfb\u8ba9\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230 CDQ \u5206\u6cbb\u3002\n\n~~\u6240\u4ee5\u5c31\u76f4\u63a5\u4e0a\u56db\u7ef4 CDQ \u5427~~\u3002\n\n\u8fd9\u6837\u4f1a\u8d85\u65f6\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u8003\u8651\u7b80\u5316\u6761\u4ef6\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5c31\u662f\u628a\u51e0\u4e2a\u4e0d\u7b49\u5f0f\u5408\u5e76\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5c1d\u8bd5 CDQ \u4e86\u3002\n\n\u5f88\u5bb9\u6613\u53d1\u73b0\u4e00\u4e8c\u4e09\u5f0f\u53ef\u4ee5\u6574\u5408\u6210 \n\t\n $$\\left|x_i-x_j\\right|\\le \\min(r_i,r_j)$$\n \n \u4f46\u662f\u6211\u4eec\u65e2\u7136\u8981\u4f7f\u7528 CDQ \uff0c\u6211\u4eec\u4e00\u5b9a\u8981\u4fdd\u8bc1\u4e0d\u7b49\u5f0f\u4e24\u8fb9\u4e0d\u4f1a\u6709\u76f8\u4e92\u7684\u5173\u7cfb\u3002\u4ee5\u4e0a\u8fd9\u4e2a\u5f0f\u5b50\u4e0d\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u62c6\u6389\u7edd\u5bf9\u503c\uff0c\u6216\u8005 $\\min$\u3002\u4f46\u663e\u7136\uff0c\u5047\u5982\u6211\u4eec\u62c6\u6389\u7edd\u5bf9\u503c\uff0c\u90a3\u5f0f\u5b50\u5c31\u62c6\u56de\u53bb\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u62c6\u53f3\u8fb9\u3002\u90a3\u4e48\u6761\u4ef6\u53ef\u4ee5\u5316\u6210\uff1a\n \n $$ r_j\\le r_i$$\n\n$$\\left|x_i-x_j\\right|\\le r_j$$\n\n$$\\left|f_i-f_j\\right|\\le k$$\n\n\u6240\u4ee5\u6211\u4eec\u5148\u5c06\u6240\u6709\u70b9\u6309 $r_i$ \u6392\u5e8f\uff0c\u8003\u8651\u5982\u4f55\u6ee1\u8db3\u4e0b\u9762\u4e24\u4e2a\u5f0f\u5b50\u3002\n\n\u8fd9\u91cc\u6211\u4eec\u8003\u8651 $\\mathrm{i}$ \u5411  $\\mathrm{j}$ \u505a\u8d21\u732e\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5047\u5982\u6211\u4eec\u4f7f\u7528\u53cc\u6307\u9488\u7684\u65b9\u5f0f\u6765\u7ef4\u62a4\u4e8c\u5f0f\uff0c\u9996\u5148\u5c31\u662f\u8981\u5bf9\u4e8e $x_i$ \u8fdb\u884c\u6392\u5e8f\uff0c\u8fd9\u53ef\u80fd\u5bfc\u81f4\u6211\u4eec\u5c06\u524d\u9762\u7684\u6392\u9664\u540e\uff0c\u5bfc\u81f4\u540e\u9762\u7684\u6ca1\u6709\u7edf\u8ba1\u5230\uff0c\u4f46\u662f\u4e09\u5f0f $k$ \u4e3a\u5b9a\u503c\uff0c\u6240\u4ee5\u5f97\u51fa\u4ee5\u4e0b\u987a\u5e8f\u3002\n\n1. \u6392\u5e8f\u6ee1\u8db3\u4e00\u5f0f\n\n2. CDQ \u6ee1\u8db3\u4e09\u5f0f\uff08\u5355\u8fb9\u53cc\u6307\u9488\u5b9e\u73b0\uff09\n\n4. \u6570\u636e\u7ed3\u6784\u6ee1\u8db3\u4e8c\u5f0f\n\n\u8fd9\u6837\u8fd9\u4e2a\u9898\u76ee\u5c31\u5f97\u4ee5\u89e3\u51b3\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define lb(x) x&-x\n#define N 100005\nusing namespace std;\nint n,k,m;\nlong long ans;\nint pos1[N],pos2[N];\nstruct node{\n\tint x,y,z,L,R;\n\tint id,flag; \n}p[N];\nbool cmp1(node a,node b){\n\tif(a.y!=b.y) return a.y>b.y;\n\tif(a.z!=b.z) return a.z<b.z;\n\treturn a.x<b.x; \n}\nbool cmp2(node a,node b){\n\tif(a.z!=b.z) return a.z<b.z;\n\tif(a.x!=b.x) return a.x<b.x;\n\treturn a.y>b.y;\n}\nint c[3*N];\nvoid add(int x,int v){\n\tfor(;x<=m;x+=lb(x)) c[x]+=v;\n}\nint ask(int x){\n\tint sum=0;\n\tfor(;x;x-=lb(x)) sum+=c[x];\n\treturn sum; \n} \nvoid clear(int x){\n\tfor(;x<=m;x+=lb(x)){\n\t\tif(!c[x]) return ;\n\t\tc[x]=0;\n\t}\n}\nvoid solve(int l,int r){\n\tif(l==r) return ;\n\tint mid=(l+r)>>1;\n\tsolve(l,mid),solve(mid+1,r);\n\tsort(p+l,p+mid+1,cmp2);\n\tsort(p+mid+1,p+r+1,cmp2);\n\tint j1=l,j2=l-1;\n\tfor(int i=mid+1;i<=r;i++){\n\t\twhile(j1<=mid&&p[i].z-p[j1].z>k) add(p[j1].x,-1),j1++;\n\t\twhile(j2<mid&&p[j2+1].z-p[i].z<=k){\n\t\t\tj2++; \n\t\t\tadd(p[j2].x,1);\n\t\t}\n\t\tans+=ask(p[i].R)-ask(p[i].L-1); \n\t}\n\tfor(int i=j1;i<=j2;i++)add(p[i].x,-1);\n}\nint b[3*N],cnt;\nint main(){\n\tscanf(\"%d%d\",&n,&k);\n\tfor(int i=1;i<=n;i++){\n\t\tint a,r,c;\n\t\tscanf(\"%d%d%d\",&a,&r,&c);\n\t\tp[i].x=a;\n\t\tp[i].y=r;\n\t\tp[i].z=c;\n\t\tp[i].L=max(0,a-r);\n\t\tp[i].R=a+r;\n\t\tb[++cnt]=p[i].x;\n\t\tb[++cnt]=p[i].L;\n\t\tb[++cnt]=p[i].R;\n\t}\n\tsort(b+1,b+cnt+1);\n\tm=unique(b+1,b+cnt+1)-b-1;\n\tfor(int i=1;i<=n;i++){\n\t\tp[i].x=lower_bound(b+1,b+m+1,p[i].x)-b;\n\t\tp[i].L=lower_bound(b+1,b+m+1,p[i].L)-b;\n\t\tp[i].R=lower_bound(b+1,b+m+1,p[i].R)-b;\n\t}\n\tsort(p+1,p+n+1,cmp1);\n\tsolve(1,n);\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n} \n```\n\n\u7ecf\u8fc7\u8fd9\u4e2a\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u5173\u4e8e CDQ \u7ef4\u62a4\u504f\u5e8f\u95ee\u9898\u65f6\u7684\u4e24\u4e2a\u5c0f\u6280\u5de7\u3002\n\n1. \u5bf9\u4e8e\u6709\u4ea4\u53c9\u5173\u7cfb\u7684\u504f\u5e8f\u5f0f\u5b50\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u5408\u5e76\u548c\u7b80\u5316\u3002\uff08\u5b9e\u9645\u4e0a\u672c\u9898\u5e76\u6ca1\u6709\u51cf\u5c11\u4e0d\u7b49\u5f0f\u7684\u6570\u91cf\uff0c\u4f46\u662f\u6211\u4eec\u628a\u5b83\u8f6c\u5316\u6210\u53ef\u4ee5\u7528 CDQ \u89e3\u51b3\u7684\u5f62\u5f0f\uff09\n\n2. \u8f83\u590d\u6742\u7684\u4e0d\u7b49\u5f0f\u4f18\u5148\u4f7f\u7528\u6570\u636e\u7ed3\u6784\u89e3\u51b3\u3002\n\n\n\n",
        "postTime": 1616413233,
        "uid": 128870,
        "name": "chen_qian",
        "ccfLevel": 7,
        "title": "CF762E"
    },
    {
        "content": "[**\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c**](https://www.cnblogs.com/MnZnOIerLzy/articles/17181529.html)\n\n# $\\texttt{Description}$\n\n**[CodeForces \u9898\u76ee\u94fe\u63a5](https://codeforces.com/problemset/problem/762/E \"CodeForces \u9898\u76ee\u94fe\u63a5\")**\n\n**[\u6d1b\u8c37\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/CF762E \"\u6d1b\u8c37\u9898\u76ee\u94fe\u63a5\")**\n\n> - \u6709 $n$ \u4e2a\u4e09\u5143\u7ec4 $(x_i,r_i,f_i)$\uff0c\u6c42\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u7684\u65e0\u5e8f\u4e8c\u5143\u7ec4 $(u,v)$ \u4e2a\u6570\uff1a\n>\n>   - $|f_u-f_v|\\le k$\u3002\n>\n>   - $x_u-r_u\\le x_v\\le x_u+r_u$\u3002\n>\n>   - $x_v-r_v\\le x_u\\le x_v+r_v$\u3002\n>\n> - $n\\le 10^5$\uff0c$k\\le 10$\uff0c$x_i,r_i\\le 10^9$\uff0c$f_i\\le 10^4$\u3002\n\n# $\\texttt{Solution}$\n\n\u5148\u5c06\u6240\u6709\u4e09\u5143\u7ec4\u6309\u7167 $r_i$ **\u4ece\u5927\u5230\u5c0f**\u6392\u5e8f\uff0c\u8003\u8651\u7528 $r$ \u5c0f\u7684\u53bb\u8986\u76d6 $r$ \u5927\u7684\uff0c\u56e0\u4e3a\u8fd9\u6837 $r$ \u5927\u7684\u4e00\u5b9a\u80fd\u591f\u8986\u76d6\u5230 $r$ \u5c0f\u7684\u3002\n\n\u7136\u540e\u679a\u4e3e $n$ \u4e2a\u4e09\u5143\u7ec4\u3002\u5bf9\u4e8e\u7b2c $i$ \u4e2a\u4e09\u5143\u7ec4\uff0c\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42 $|f_j-f_i|\\le k$ \u4e14 $x_i-r_i\\le x_j\\le x_i+r_i$ \u7684 $j$ \u7684\u4e2a\u6570\u3002\u6ce8\u610f\u5230 $k\\le 10$\uff0c\u679a\u4e3e\u6bcf\u4e00\u79cd\u667a\u5546\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u667a\u5546\u5f00\u4e00\u68f5**\u6743\u503c\u7ebf\u6bb5\u6811**\uff0c\u67e5\u8be2 $[x_i-r_i,x_i+r_i]$ \u4e2d\u6570\u7684\u4e2a\u6570\u3002\u8fd9\u6837\u7a7a\u95f4\u8f83\u5927\uff0c\u65e0\u6cd5\u63a5\u53d7\uff0c\u6240\u4ee5\u4f7f\u7528**\u52a8\u6001\u5f00\u70b9**\u4ee5\u53ca**\u79bb\u6563\u5316**\u7b56\u7565\u3002\u67e5\u5b8c\u540e\u518d\u628a\u5f53\u524d\u4e09\u5143\u7ec4\u4fee\u6539\u5230\u6743\u503c\u7ebf\u6bb5\u6811\u4e0a\u3002\n\n\u8fd9\u6837\u4e0d\u4f1a\u591a\u6570\u5c11\u6570\uff0c\u4e14\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(nk\\log n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(n\\log n)$\uff0c\u53ef\u4ee5\u63a5\u53d7\u3002\n\n# $\\texttt{Code}$\n\n\u5b9e\u73b0\u7ec6\u8282\uff1a\n\n- \u53ef\u4ee5\u7528\u6307\u4ee4\u96c6\u5361\u5e38\u3002\n\n- \u6211\u7528\u6307\u9488\u5b9e\u73b0\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\uff0c\u6ce8\u610f\u65f6\u523b\u5224\u65ad\u8282\u70b9\u662f\u5426\u4e3a `nullptr`\uff08\u4fee\u6539\u4e2d\u5c31\u65b0\u5efa\u8282\u70b9\uff0c\u67e5\u8be2\u4e2d\u5c31\u8fd4\u56de $0$\uff09\u3002\u5e76\u4e14 CodeForces \u7684\u7ed3\u6784\u4f53\u6307\u9488\u521d\u59cb\u5316**\u4e0d\u4e3a `nullptr`**\uff0c\u8981\u5199\u6784\u9020\u51fd\u6570\u3002\n\n- \u79bb\u6563\u5316\u53ef\u4ee5\u7528 `set` \u548c `map` \u5b9e\u73b0\uff0c\u8282\u7701\u7801\u91cf\u3002`map` \u4e5f\u53ef\u4ee5\u7528 `unordered_map`\uff0c\u4f46\u662f\u9047\u5230\u7279\u610f\u5361\u54c8\u5e0c\u7684\u6570\u636e\u5c31\u4e0d\u53ef\u884c\u4e86\uff08\u4e0b\u540c\uff09\u3002\n\n- \u7531\u4e8e\u667a\u5546\u7684\u503c\u57df\u8f83\u5927\uff0c\u6240\u4ee5\u6bcf\u79cd\u667a\u5546\u5bf9\u5e94\u7684\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u7684\u6839\u7528 `map` \u6620\u5c04\u4e00\u4e0b\u3002\n\n- \u67e5\u8be2\u7684\u65f6\u5019\uff0c\u5224\u65ad\u4e00\u4e0b\u5f53\u524d\u667a\u5546\u4e2d\u662f\u5426\u6709\u503c\uff0c\u53ef\u4ee5\u7528 `find` \u5b9e\u73b0\uff0c\u5426\u5219\u76f4\u63a5\u8bbf\u95ee `map` \u4f1a\u65b0\u5efa\u8282\u70b9\uff0c\u5e26\u6765\u66f4\u5927\u7684\u7a7a\u95f4\u3002\n\n- \u4e0d\u5f00 `long long` \u89c1\u7956\u5b97\u3002\n\n**[\u8bc4\u6d4b\u8bb0\u5f55](https://codeforces.com/contest/762/submission/196077650 \"\u8bc4\u6d4b\u8bb0\u5f55\")**\n\n```cpp\n//Orz treenology\n#pragma GCC optimize(\"Ofast,no-stack-protector,unroll-loops,fast-math\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4.1,sse4.2,avx,avx2,popcnt,tune=native\")\n#include<bits/stdc++.h>\n#define N 100005\n#define ls x->lson\n#define rs x->rson\nusing namespace std;\nint n,k,lsh;\nlong long ans;\nset<int>s;\nunordered_map<int,int>mp;\nstruct radio{\n    int x,r,f;\n    bool operator<(const radio&b)const{\n        return r>b.r;\n    }\n}a[N];\nstruct node{\n    int sum;\n    node*lson,*rson;\n    node(){\n        sum=0;\n        lson=rson=nullptr;\n    }\n};\nmap<int,node*>rt;\nvoid up(node*&x){\n    x->sum=0;\n    if(ls!=nullptr){\n        x->sum+=ls->sum;\n    }\n    if(rs!=nullptr){\n        x->sum+=rs->sum;\n    }\n}\nvoid modify(node*&x,int l,int r,int k,int v){\n    if(x==nullptr){\n        x=new node;\n    }\n    if(l^r){\n        int m=(l+r)>>1;\n        if(k<=m){\n            modify(ls,l,m,k,v);\n        }else{\n            modify(rs,m+1,r,k,v);\n        }\n        up(x);\n    }else{\n        x->sum+=v;\n    }\n}\nint query(node*x,int l,int r,int ql,int qr){\n    if(ql<=l&&r<=qr){\n        return x->sum;\n    }\n    int m=(l+r)>>1,ret=0;\n    if(ls!=nullptr&&ql<=m){\n        ret+=query(ls,l,m,ql,qr);\n    }\n    if(rs!=nullptr&&qr>m){\n        ret+=query(rs,m+1,r,ql,qr);\n    }\n    return ret;\n}\nint main(){\n    scanf(\"%d%d\",&n,&k);\n    for(int i=1;i<=n;++i){\n        scanf(\"%d%d%d\",&a[i].x,&a[i].r,&a[i].f);\n        s.insert(a[i].x);\n        s.insert(a[i].x-a[i].r);\n        s.insert(a[i].x+a[i].r);\n    }\n    for(int i:s){\n        mp[i]=++lsh;\n    }\n    sort(a+1,a+1+n);\n    for(int i=1,x,l,r;i<=n;++i){\n        x=mp[a[i].x];\n        l=mp[a[i].x-a[i].r];\n        r=mp[a[i].x+a[i].r];\n        for(int j=a[i].f-k;j<=a[i].f+k;++j){\n            auto it=rt.find(j);\n            if(it!=rt.end()){\n                ans+=query(it->second,1,lsh,l,r);\n            }\n        }\n        modify(rt[a[i].f],1,lsh,x,1);\n    }\n    printf(\"%lld\\n\",ans);\n}\n```\n\n\n# $\\texttt{Reference}$\n\n[\u3010\u9898\u89e3\u3011CF1045G AI Robots](https://www.luogu.com.cn/blog/explodingkonjac/solution-cf1045g \"\u3010\u9898\u89e3\u3011CF1045G AI Robots\") by [ExplodingKonjac](https://www.luogu.com.cn/user/279800 \"ExplodingKonjac\")\u3002",
        "postTime": 1678019077,
        "uid": 539211,
        "name": "\u849f\u84bb\u00b7\u5ed6\u5b50\u9633",
        "ccfLevel": 5,
        "title": "CF762E Radio stations"
    },
    {
        "content": "\u5199\u7ed9 CDQ \u521d\u5b66\u8005\u7684\u4e00\u7bc7\uff1a\n\n### CDQ \u4fdd\u59c6\u7ea7\u9898\u89e3\n\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/CF762E)\n\n\u9898\u76ee\u91cc\u6709\u4e24\u6761\u5f0f\u5b50\uff0c$|x_i-x_j| \\le \\min(r_i, r_j)$\uff0c$|f_i-f_j| \\le k$\uff0c\u5f0f\u5b50\u91cc\u6709\u4e24\u4e2a\u7edd\u5bf9\u503c\u548c\u4e00\u4e2a\u6700\u5c0f\u503c\uff0c\u4e0d\u597d\u7b97\uff0c\u5eb7\u5eb7\u80fd\u4e0d\u80fd\u62c6\u5f00\u3002\n\n\u6309\u7167\u4e00\u822c\u7684 CDQ \u601d\u8def\uff0c\u6211\u4eec\u6709\u4e00\u7ef4\u662f\u4e8b\u5148\u6392\u5e8f\u597d\u7684\uff0c\u6709\u5e8f\u6570\u5217\u5c31\u53ef\u4ee5\u4e0d\u7ba1\u7edd\u5bf9\u503c\u548c\u6700\u5c0f\u503c\u4e86\u3002\u90a3\u8981\u6392\u5e8f\u54ea\u4e00\u7ef4\u5462\uff0c\u8fd9\u9898\u91cc\u662f $r$\uff0c\u4f46\u662f\u6211\u5e76\u4e0d\u660e\u767d\u600e\u4e48\u624d\u80fd\u770b\u51fa\u6765\u54ea\u7ef4\u662f\u7528\u6765\u6392\u5e8f\u7684\uff0c\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/akd17wdf.png)\n\n---\n\n\u5148\u4e0d\u8003\u8651 $f$ \u548c $k$\u3002\u6211\u4eec\u5c06\u7ed3\u6784\u4f53\u6570\u7ec4\u4ee5 $r$ \u4e3a\u5173\u952e\u5b57\u4ece**\u5927\u5230\u5c0f**\u6392\u5e8f\uff0c\u90a3\u4e48 $\\min(r_i, r_j)=r_{\\max(i, j)}$\uff0c\u539f\u6765\u7684\u5f0f\u5b50\u53ef\u4ee5\u53d8\u6210 $|x_i-x_j| \\le r_j \\space(i \\le j)$\uff0c\u53d1\u73b0\u5b83\u53ef\u4ee5\u62c6\u5f00\u53d8\u6210 $x_j-r_j \\le x_i \\le x_j+r_j$\u3002\u5728 CDQ \u7684\u4e00\u6b21\u64cd\u4f5c\u4e2d\uff0c\u6211\u4eec\u7528\u6811\u72b6\u6570\u7ec4\u7edf\u8ba1\u7b54\u6848\uff0c$x_i$ \u7528\u4e8e\u4fee\u6539\uff0c\u8be2\u95ee\u65f6\u7b54\u6848\u589e\u52a0 $query(x_j+r_j)-query(x_j-r_j-1)$\uff0c\u6b64\u5904 $i \\in [le, mid], j \\in [mid+1, ri]$\u3002$x, r$ \u7684\u8303\u56f4\u5f88\u5927\uff0c\u9700\u8981\u8fdb\u884c\u7b80\u5355\u7684\u79bb\u6563\u5316\u3002\n\n\u73b0\u5728\u8003\u8651 $f$ \u548c $k$\uff0c\u7ef4\u62a4\u5de6\u53f3\u533a\u95f4 $f$ \u9012\u589e\u3002 \u5f0f\u5b50 $|f_i-f_j| \\le k$ \u4e2d\u7edd\u5bf9\u503c\u7684\u9650\u5236\u8ba9\u539f\u5148\u901a\u7528\u7684\u53cc\u6307\u9488\u4e0d\u518d\u901a\u7528\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u7528\u4e09\u4e2a\u6307\u9488\uff0c$i_{dn}, i_{up}, j \\space ( i_{dn}, i_{up} \\in [ le, mid ], j \\in [ mid+1, ri ] ) $\uff0c\u7ef4\u62a4 $f_{i_{dn}} \\le f_j \\le f_{i_{up}} $\uff0c\u6b64\u65f6 $|f_i-f_j| \\le k$ \u53ef\u4ee5\u8f6c\u5316\u4e3a $f_j-f_{i_{dn}} > k$ \u548c $f_{i_{up}}-f_j \\le k$ \u4e24\u6761\u5f0f\u5b50\uff0c\u90a3\u4e48\u5bf9\u8be2\u95ee\u6709\u8d21\u732e\u7684\u70b9 $ i \\in [ i_{dn},  i_{up} ] $\u3002\u5728\u79fb\u52a8 $i_{dn}$ \u65f6\u5728\u6811\u72b6\u6570\u7ec4\u4e2d\u5220\u9664\uff0c\u79fb\u52a8 $i_{up}$ \u65f6\u5728\u6811\u72b6\u6570\u7ec4\u4e2d\u6dfb\u52a0\u3002\n\n---\n\n\u5c31\u53ef\u4ee5\u5199\u4e86\uff0c\u4e0a\u4ee3\u7801\u3002\n\n\u6211\u6811\u72b6\u6570\u7ec4\u7684\u6e05\u7a7a\u64cd\u4f5c\u7528\u4e86\u7c7b\u4f3c\u61d2\u6807\u8bb0\u7684\u4e1c\u897f\uff0c\u53ef\u4ee5\u51cf\u5c0f\u5e38\u6570\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n#define rep(i, a, b) for(int i=(a), i##up=(b); i<=i##up; ++i)\n#define repf(i, a) for(int i=1, i##up=(a); i<=i##up; ++i)\n#define rrep(i, a, b) for(int i=(a), i##dn=(b); i>=i##dn; --i)\n#define repe(e, u) for(int e=head[u]; e; e=nxt[e])\n\nint read() {\n\tint t=0, f=1; char c;\n\twhile(!isdigit(c=getchar())) f=c^45;\n\twhile(isdigit(c)) t=(t<<1)+(t<<3)+(c^48), c=getchar();\n\treturn f? t: -t;\n}\n\nconst int N=1e5+10, inf=1e9;\n\nint n, k;\nll ans;\n\nstruct BIT {\n\t#define lb(x) ((x)&-(x))\n\tstatic const int X=3e5;\n\tint c[X+10], tik[X+10], tim;\n\tinline void modify(int x, int v=1) {\n\t\tfor(; x<=X; x+=lb(x)) if(tik[x]==tim) c[x]+=v; else tik[x]=tim, c[x]=v;\n\t}\n\tinline int query(int x, int v=0) {\n\t\tfor(; x; x^=lb(x)) if(tik[x]==tim) v+=c[x]; else tik[x]=tim, c[x]=0;\n\t\treturn v;\n\t}\n\tinline void clear() { tim++; }\n}tre;\n\nint px[N*3], siz;\ninline int find(int x) {\n\treturn lower_bound(px+1, px+1+siz, x)-px;\n}\nstruct state {\n\tint x, r, f, le, ri;\n\tstate() {}\n\tstate(int a, int b, int c): x(a), r(b), f(c) {}\n\tinline void get() {\n\t\tx=read(), r=read(), f=read();\n\t\tle=max(1, x-r), ri=min(inf, x+r);\n\t\tpx[++siz]=x, px[++siz]=le, px[++siz]=ri;\n\t}\n\tinline void reset() {\n\t\tx=find(x), le=find(le), ri=find(ri);\n\t}\n}st[N];\nbool cmpr(state a, state b) {\n\tif(a.r==b.r) return a.f<b.f||a.f==b.f&&a.x<b.x;\n\treturn a.r>b.r;\n}\nbool cmpf(state a, state b) {\n\tif(a.f==b.f) return a.r>b.r||a.r==b.r&&a.x<b.x;\n\treturn a.f<b.f;\n}\n\nvoid sol(int le, int ri) {\n\tif(le==ri) return;\n\tint mid=le+ri>>1;\n\tsol(le, mid), sol(mid+1, ri), tre.clear();\n\tsort(st+le, st+mid+1, cmpf), sort(st+mid+1, st+ri+1, cmpf);\n\tint pi_dn=le, pi_up=le, pj=mid+1;\n\twhile(pj<=ri) {\n\t\twhile(st[pj].f-st[pi_dn].f>k&&pi_dn<=mid) tre.modify(st[pi_dn++].x, -1);\n\t\twhile(st[pi_up].f-st[pj].f<=k&&pi_up<=mid) tre.modify(st[pi_up++].x);\n\t\tans+=tre.query(st[pj].ri)-tre.query(st[pj].le-1), pj++;\n\t}\n}\n\nint main() {\n\tn=read(), k=read();\n\trepf(i, n) st[i].get();\n\tsort(px+1, px+1+siz), siz=unique(px+1, px+1+siz)-px-1;\n\trepf(i, n) st[i].reset();\n\tsort(st+1, st+1+n, cmpr);\n\tsol(1, n);\n\tprintf(\"%lld\", ans);\n}\n```\n\n\u7279\u522b\u9e23\u8c22\uff1a[\u963f\u4e11](https://www.luogu.com.cn/user/364963)",
        "postTime": 1628605664,
        "uid": 428154,
        "name": "\u5b50\u4e11",
        "ccfLevel": 7,
        "title": "CF762E Radio stations"
    },
    {
        "content": "\n\n\n[\u66f4\u597d\u7684\u4f53\u9a8c?](https://www.luogu.com.cn/blog/qq-2056188203/solution-cf762e)\n\n\n## \u9898\u610f\n\n\u5728\u4e00\u7ef4\u5750\u6807\u8f74\u4e0a\u5206\u5e03\u4e86 $n$ \u4e2a\u673a\u5668\u4eba\uff0c\u7b2c\u4e2a\u673a\u5668\u4eba\u7684\u5750\u6807\u662f $x_i$ \u3002\n\n\u7b2c $i$ \u4e2a\u673a\u5668\u4eba\u7684\u89c6\u91ce\u662f $r_i$ \u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u7b2c $i$ \u4e2a\u673a\u5668\u4eba\u80fd\u770b\u5230 $[x_i-r_i,x_i+r_i]$ \u8303\u56f4\u5185\u7684\u6240\u6709\u5176\u4ed6\u673a\u5668\u4eba\u3002\n\n\u7b2c $i$ \u4e2a\u673a\u5668\u4eba\u7684\u667a\u5546\u662f $f_i$ \u5982\u679c\u6709\u4e00\u5bf9\u673a\u5668\u4eba\u53ef\u4ee5\u4e92\u76f8\u770b\u5230\uff0c\u5e76\u4e14\u5b83\u4eec\u7684\u667a\u5546\u76f8\u5dee\u4e0d\u8d85\u8fc7 $k$ \uff0c\u90a3\u4e48\u5b83\u4eec\u5c31\u53ef\u4ee5\u4e92\u76f8\u4ea4\u6d41\u3002\n\n\u4f60\u9700\u8981\u6c42\u51fa\u6765\u6709\u591a\u5c11\u5bf9\u673a\u5668\u4eba\u53ef\u4ee5\u4e92\u76f8\u4ea4\u6d41\u3002\n\n\n## \u9898\u89e3\n\n\u8bbe $i$ , $j$ \u6ee1\u8db3 $1\\leq i \\leq j \\leq n$\n\n\u6709\u4e24\u4e2a\u663e\u7136\u7684\u5f0f\u5b50\uff1a\n$$\\begin{cases} |x_i-x_j|\\leq \\min(r_i,r_j) \\\\ |f_i-f_j|\\leq k \\end{cases}$$\n\n\u6211\u4eec\u5148\u5ffd\u7565\u6389\u7b2c\u4e8c\u4e2a\u5f0f\u5b50\n\n\u7136\u540e\u53d1\u73b0\u7b2c\u4e00\u4e2a\u5f0f\u5b50\u6709 $\\min$ \u64cd\u4f5c\uff0c~~\u633a\u4e0d\u597d\u770b\u7684~~,\u8003\u8651\u4ee5 $r$ \u4e3a\u5173\u952e\u5b57\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u540e\uff0c\u5316\u7b80\u5f97:\n\n$$|x_i-x_j|\\leq r_j$$\n\n~~\u53d1\u73b0\u7edd\u5bf9\u503c\u4e5f\u633a\u4e0d\u597d\u770b\u7684~~\uff0c\u6240\u4ee5\u53bb\u6389\u7edd\u5bf9\u503c:\n\n$$\\begin{cases} x_i-x_j\\leq r_j \\\\ x_j-x_i\\leq r_j \\end{cases}$$\n\n\u8f6c\u6362\u5f97\u5230:\n\n$$x_i-r_i\\leq x_j\\leq x_i+r_i$$\n\n\u6240\u4ee5\u7b54\u6848\u5c31\u8f6c\u6362\u4e3a\u4e86\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $i$ \uff0c\u6ee1\u8db3 $x_i-r_i\\leq x_j\\leq x_i+r_i$ \u7684 $j$ \u7684\u4e2a\u6570\u548c\uff0c\u8fd9\u4e2a\u5f88\u597d\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u8fd9\u65f6\u6211\u4eec\u518d\u6765\u770b\u770b\u7b2c\u4e8c\u4e2a\u5f0f\u5b50:\n\n$$|f_i-f_j|\\leq k$$\n\n\u540c\u6837\u53ef\u4ee5\u8f6c\u6362\u4e3a\uff1a\n\n$$f_i-k\\leq f_j \\leq f_i+k$$\n\n\u518d\u770b\u770b $f$ \u7684\u8303\u56f4\u4e3a$10^4$\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u5f00$10^4$\u4e2a\u7ebf\u6bb5\u6811\uff0c\u7136\u540e\u518d\u5206\u522b\u7ef4\u62a4\u6bcf\u4e2a\u7ebf\u6bb5\u6811\u5c31\u884c\u4e86\u3002\n\n## \u4ee3\u7801\n\n\u56e0\u4e3a\u6211\u4eec\u8003\u8bd5\u7684\u65f6\u5019f\u7684\u6570\u636e\u8303\u56f4\u8f83\u5927\uff0c\u7528\u4e86\u79bb\u6563\u5316\uff0c~~\u4f46\u662f\u4e0d\u5f71\u54cd\u8fc7\u9898~~\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define int ll \n\nint lsh[200005];\nint len=0;\n\nstruct ss{\n\tint x,r,q;\n}a[200005];\nbool cmp(ss x,ss y){\n\tif(x.r==y.r)\n\t\treturn x.x<y.x;\n\treturn x.r>y.r;\n}\nint n,k;\n\nstruct zz{\n\tint l,r;\n\tint val;\n};\n\nint tot=0;\nzz t[4000005];\nint rt[200005];\nint New_Node(){\n\ttot++;\n\tt[tot].l=t[tot].r=t[tot].val=0;\n\treturn tot;\n}\t\nstruct Tree{\n\t#define lc t[p].l\n\t#define rc t[p].r\n\tvoid Push_up(int p){\n\t\tint now=0;\n\t\tif(lc)\tnow+=t[lc].val;\n\t\tif(rc) \tnow+=t[rc].val;\n\t\tt[p].val=now;\n\t}\n\tvoid Change_Tree(int p,int l,int r,int x){\n\t\tif(l==r){\n\t\t\tt[p].val++;\n\t\t\treturn ;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tif(x<=mid){\n\t\t\tif(!lc)\tlc=New_Node();\n\t\t\tChange_Tree(lc,l,mid,x);\n\t\t}\n\t\telse{\n\t\t\tif(!rc)\trc=New_Node();\n\t\t\tChange_Tree(rc,mid+1,r,x);\n\t\t}\n\t\tPush_up(p);\n\t}\n\tint Find_Tree(int p,int l,int r,int L,int R){\n\t\tif(L<=l&&r<=R){\n\t\t\treturn t[p].val;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tint now=0;\n\t\tif(L<=mid&&lc)\n\t\t\tnow+=Find_Tree(lc,l,mid,L,R);\n\t\tif(mid+1<=R&&rc)\n\t\t\tnow+=Find_Tree(rc,mid+1,r,L,R);\n\t\treturn now;\n\t} \n}T[200005];\n\nsigned main(){\n\tint Max=0,Min=0x3f3f3f3f;\n\tcin>>n>>k;\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%lld%lld%lld\",&a[i].x,&a[i].r,&a[i].q);\n\t\tlsh[++len]=a[i].q;\n\t\tMax=max(Max,a[i].x+a[i].r);\n\t\tMin=min(Min,a[i].x-a[i].r);\n\t}\t\n\tsort(a+1,a+n+1,cmp);\n\tsort(lsh+1,lsh+len+1);\n\tlen=unique(lsh+1,lsh+len+1)-(lsh+1);\n\tfor(int i=1;i<=n;i++)\n\t\trt[i]=New_Node();\n\tint ans=0;\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=a[i].q-k;j<=a[i].q+k;j++){\n\t\t\tint now=lower_bound(lsh+1,lsh+len+1,j)-lsh;\n\t\t\tif(lsh[now]!=j)\n\t\t\t\tcontinue;\n\t\t\tans+=T[now].Find_Tree(rt[now],Min,Max,a[i].x-a[i].r,a[i].x+a[i].r);\n\t\t}\n\t\tint now=lower_bound(lsh+1,lsh+len+1,a[i].q)-lsh;\n\t\tT[now].Change_Tree(rt[now],Min,Max,a[i].x); \n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n\n```\n\n\n",
        "postTime": 1630675509,
        "uid": 225883,
        "name": "MiRaciss",
        "ccfLevel": 7,
        "title": "CF762E \u9898\u89e3"
    },
    {
        "content": "\u66b4\u529b:  \n$O(n^2)$ \u679a\u4e3e\u6240\u6709\u70b9\u5bf9  \n\u4f18\u5316:  \n\u65e2\u7136\u4e00\u4e2a\u70b9\u88ab\u679a\u4e3e\u8fc7,\u90a3\u4e48\u6211\u4eec\u77e5\u9053\u4e86\u5b83\u7684\u4fe1\u606f,\u4e0d\u9700\u8981\u518d\u679a\u4e3e\u5b83\u4e86\u3002  \n\u901a\u5e38\u5bf9\u4e8e\u70b9\u5bf9\u6211\u4eec\u90fd\u662f\u7528\u4e00\u4e9b\u4e1c\u897f\u6765\u7ef4\u62a4\u4e4b\u524d\u7684\u70b9\u4ee5\u4fbf\u5feb\u901f\u67e5\u8be2\u5f53\u524d\u70b9\u4e0e\u4e4b\u524d\u7684\u70b9\u7684\u5173\u7cfb\u3002  \n\u6211\u4eec\u8981\u5b58\u50a8\u4fe1\u606f\u5219\u8981\u89e3\u51b3 $x,r,f$ \u7684\u5173\u7cfb\u3002  \n\u6211\u4eec\u6ce8\u610f\u5230 $k \\leqslant 10$ \u8fd9\u8bf4\u660e\u6211\u4eec\u53ef\u4ee5\u628a\u4e4b\u524d\u7684\u70b9\u6309\u7167\u9891\u7387\u5206\u5f00\u7edf\u8ba1,\u5bf9\u4e8e\u5f53\u524d\u7684\u70b9\u66b4\u529b\u679a\u4e3e\u6240\u6709\u7b26\u5408\u7684\u9891\u7387,\u8fd9\u4e0d\u8d85\u8fc720\u79cd\u3002  \n\u7136\u540e\u5bf9\u4e8e $x$ \u5982\u6b64\u5927\u7684\u503c\u57df\u5c31\u8981\u7528\u5230\u52a8\u6001\u7684\u533a\u95f4\u7ef4\u62a4\u7684\u7ed3\u6784,\u8fd9\u91cc\u91c7\u7528\u4e86\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u3002  \n\u5bf9\u4e8e $r$ \u7684\u7ef4\u62a4\u65b9\u5f0f\u662f:\u663e\u7136\u6211\u4eec\u5f53\u524d\u6709\u7684\u4fe1\u606f\u662f\u8be5\u70b9\u7684\u534a\u5f84,\u6211\u4eec\u9700\u8981\u4fdd\u8bc1\u4e4b\u524d\u7684\u70b9\u82e5\u5728\u8be5\u534a\u5f84\u5185\u5fc5\u7136\u6ee1\u8db3\u6761\u4ef6\u3002\u5c31\u628a$r$\u964d\u5e8f\u6392\u5217,\u8fd9\u6837\u4e4b\u524d\u7684\u534a\u5f84\u4e00\u5b9a\u5927\u4e8e\u5f53\u524d\u7684\u3002  \n\u5177\u4f53\u5730,\u5bf9$r$\u964d\u5e8f\u6392\u5e8f\u3002\u5bf9\u6bcf\u4e2a$f$\u5efa\u7acb\u6743\u503c\u7ebf\u6bb5\u6811\u3002\u8003\u8651\u6bcf\u4e2a\u7535\u53f0,\u679a\u4e3e\u6240\u6709\u7b26\u5408\u6761\u4ef6\u7684 $f$ ,\u67e5\u8be2 $[x-r, x+r]$ \u7684\u70b9\u7684\u4e2a\u6570\u7edf\u8ba1\u7b54\u6848,\u518d\u628a\u5f53\u524d\u70b9\u52a0\u5165\u9891\u7387\u4e3a$f$\u7684\u7ebf\u6bb5\u6811\u5373\u53ef\u3002  \n\u590d\u6742\u5ea6$O(knlogn)$\n```cpp\n#include <cstdio>\n#include <algorithm>\n#define ll long long\n\nusing namespace std;\n\nconst int F = 12345, QlogL = 4567890, N = 123456;\nint root[F], ls[QlogL], rs[QlogL], dat[QlogL], tot = 1;\ninline int newnode() {\n\tls[tot] = rs[tot] = dat[tot] = 0;\n\treturn tot++;\n}\n\ninline void update(int p) { \n\tdat[p] = (ls[p]?dat[ls[p]]:0) + (rs[p]?dat[rs[p]]:0); \n}\n\nvoid insert(int p, int lp, int rp, int x) {\n\tif(lp == rp) {\n\t\t++dat[p];\n\t\treturn;\n\t}\n\tint mid = (lp + rp) >> 1;\n\tif(x <= mid) {\n\t\tif(!ls[p]) ls[p] = newnode();\n\t\tinsert(ls[p], lp, mid, x);\n\t}\n\telse {\n\t\tif(!rs[p]) rs[p] = newnode();\n\t\tinsert(rs[p], mid+1, rp, x);\n\t}\n\tupdate(p);\n}\n\nint qry(int p, int lp, int rp, int l, int r) {\n\tif(l <= lp && rp <= r) return dat[p];\n\tint mid = (lp + rp) >> 1;\n\tint ans = 0;\n\tif(l <= mid && ls[p]) ans += qry(ls[p], lp, mid, l, r);\n\tif(r > mid && rs[p]) ans += qry(rs[p], mid+1, rp, l, r);\n\treturn ans;\n}\n\nstruct node {\n\tint x, r, f;\n} dt[N];\ninline bool cmp1(node& a, node&b) { return a.r > b.r; }\n\nint main() {\n\tint n, k, xm = 0;\n\tscanf(\"%d %d\", &n, &k);\n\tfor(int i = 1; i <= n; ++i) {\n\t\tscanf(\"%d %d %d\", &dt[i].x, &dt[i].r, &dt[i].f);\n\t\txm = max(dt[i].x, xm);\n\t\troot[dt[i].f] = newnode();\n\t}\n\tsort(dt + 1, dt + n + 1, cmp1);\n\tll cnt = 0;\n\tfor(int i = 1; i <= n; ++i) {\n\t\tfor(int ft = dt[i].f - k; ft <= dt[i].f + k; ++ft) {\n\t\t\tcnt += qry(root[ft], 1, xm, dt[i].x - dt[i].r, dt[i].x + dt[i].r);\n\t\t}\n\t\tinsert(root[dt[i].f], 1, xm, dt[i].x);\n\t}\n\tprintf(\"%lld\\n\", cnt);\n\treturn 0;\n}\n```",
        "postTime": 1573624568,
        "uid": 88735,
        "name": "\u5bd2\u9e3d\u513f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF762E \u3010Radio stations\u3011"
    }
]