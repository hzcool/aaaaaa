[
    {
        "content": "### \u601d\u8def\uff1a\n\n\u5b9a\u4e49\u4e00\u4e2a\u6743\u503c\u5e76\u67e5\u96c6\uff0c\u6743\u503c\u4fdd\u5b58\u8fd9\u4e2a\u96c6\u5408\u8fd8\u53ef\u4ee5\u5b58\u4e0b\u591a\u5c11\u6c34\u3002\n\n\u5982\u679c\u8fd9\u4e2a\u96c6\u5408\u53ef\u4ee5\u5b58\u653e\u7684\u6c34\u5df2\u7ecf\u5c0f\u4e8e\u8981\u88c5\u5165\u7684\u6c34\uff0c\u5c31\u5c06\u8fd9\u4e2a\u96c6\u5408\u4e0e\u4e0b\u4e00\u4e2a\u96c6\u5408\u5408\u5e76\u3002\n\n\u5426\u5219\uff0c\u76f4\u63a5\u628a\u8fd9\u4e2a\u96c6\u5408\u53ef\u4ee5\u5b58\u653e\u7684\u6c34\u51cf\u53bb\u8981\u88c5\u5165\u7684\u6c34\u7684\u4f53\u79ef\u3002\n\n### \u4ee3\u7801\uff1a\n\n```\n\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long LL;\n\nconst int N = 200010;\n\nint n, m;\nint fa[N];\nLL g[N], b[N];\n\nint find(int x) {\n    if (x == fa[x]) return x;\n    return fa[x] = find(fa[x]);\n}\n\nint merge(int x, int y) {\n    int fx = find(x), fy = find(y);\n    if (fx == fy) return fx;\n    fa[fx] = fy;\n    g[fy] += g[fx];\n    return fy;\n}\n\nvoid init() {\n    for (int i = 1; i <= n; i++) fa[i] = i;\n}\n\nvoid modify(int x, LL v) {\n    x = find(x);\n    while (true) {\n        if (g[x] >= v || x >= n) break;\n        x = merge(x, x + 1);\n    }\n    g[x] = max(0ll, g[x] - v);\n}\n\nvoid query(int x) {\n    int fx = find(x);\n    if (fx == x) cout << b[x] - g[x] << '\\n';\n    else cout << b[x] << '\\n';\n}\n\nint main() {\n    #ifdef DEBUG\n    freopen(\"D:/Exercise/Test.in\", \"r\", stdin);\n    clock_t st, ed;\n    cout << \"===================START===================\" << endl;\n    st = clock();\n    #endif\n\n    cin >> n;\n    for (int i = 1; i <= n; i++) cin >> g[i], b[i] = g[i];\n    init();\n    cin >> m;\n    int opt, a;\n    LL b;\n    for (int i = 1; i <= m; i++) {\n        cin >> opt;\n        if (opt == 1) { cin >> a >> b; modify(a, b); }\n        else { cin >> a; query(a); }\n    }\n\n    #ifdef DEBUG\n    ed = clock();\n    cout << \"====================END====================\" << endl;\n    cout << \"Time:\" << (ed - st) * 1.0 / CLOCKS_PER_SEC << \" sec\" << endl;\n    #endif\n    return 0;\n}\n```",
        "postTime": 1683206377,
        "uid": 520333,
        "name": "SmallestRubbish",
        "ccfLevel": 0,
        "title": "CF371D\u9898\u89e3"
    },
    {
        "content": "\u6c42\u7ba1\u7406\u5458\u7ed9\u8fc7\u3002\n\n\u9996\u5148\u8fd9\u9898\u7684 50 \u5206\u505a\u6cd5\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u4e00\u4e2a\u4e00\u4e2a\u5f80\u4e0b\u627e\u5c31\u53ef\u4ee5\u4e86\u3002\n\n100 \u5206\u505a\u6cd5\uff1a\n\n\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\u6709\u5f88\u591a\u5df2\u7ecf\u88c5\u6ee1\u7684\u6c99\u6f0f\uff0c\u8fd9\u4e9b\u6ca1\u7528\u7684\u6c99\u6f0f\u5982\u679c\u8df3\u8fc7\uff0c\u90a3\u4e48\u65f6\u6548\u4f1a\u597d\u5f88\u591a\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\uff0c\u6bcf\u6b21\u4e00\u4e2a\u88c5\u6ee1\u5c31\u628a\u4e0a\u4e00\u4e2a\u76f4\u63a5\u8fde\u5230\u4e0b\u4e00\u4e2a\uff0c\u5c31\u53ef\u4ee5 AC \u4e86\u3002\n\n\u6bd4\u5982\u8bf4 $i$ \u6c99\u6f0f\u6ee1\u4e86\uff0c\u5c31\u53ef\u4ee5\u628a $i-1$ \u7684\u4e0b\u4e00\u4e2a\u8bbe\u6210 $i+1$\uff0c\u8fd9\u6837\uff0c\u5f53\u4e0b\u4e00\u6b21\u6211\u8bbf\u95ee\u5230 $i-1$ \u65f6\uff0c\u5b83\u7684\u4e0b\u4e00\u4e2a\u5c31\u662f $i+1$ \u4e86\uff0c\u8df3\u8fc7\u4e86 $i$\uff0c\u8282\u7ea6\u4e86\u590d\u6742\u5ea6\u3002\n\n\u603b\u590d\u6742\u5ea6 $O(n+m)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 200010;\nint water[N], a[N], n, nxt[N];\nint find(int x){return nxt[x] == x ? x : nxt[x] = find(nxt[x]);}\ninline int read() //\u5feb\u8bfb\u4f18\u5316\n{\n\tint x = 0; char ch = getchar();\n\twhile(ch < '0' || ch > '9') ch = getchar();\n\twhile(ch >= '0' && ch <='9') x = x * 10 + (ch ^ 48), ch = getchar();\n\treturn x;\n}\nvoid add(int x) //\u5747\u644aO(1)\n{\n\tint y = read();\n\tint i;\n\twater[x] += y;\n\twhile(x <= n && water[x] > a[x])\n\t{\n\t\tnxt[find(x - 1)] = find(x); //\u7cbe\u534e\uff0c\u8df3\u8fc7x\u8282\u70b9\n\t\ti = find(x) + 1;\n\t\twater[i] += water[x] - a[x];\n\t\twater[x] = a[x];\n\t\tx = i;\n\t}\n}\nint main()\n{\n\tn = read();\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\ta[i] = read();\n\t\tnxt[i] = i;\n\t}\n\tint Q = read();\n\twhile(Q--)\n\t{\n\t\tint op = read(), x = read();\n\t\tif(op == 1) add(x);\n\t\tif(op == 2) printf(\"%d\\n\", water[x]);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1661921150,
        "uid": 675466,
        "name": "Stitch0711",
        "ccfLevel": 5,
        "title": "CF371D"
    },
    {
        "content": "\u9898\u76ee\u94fe\u63a5\uff1a<https://www.luogu.com.cn/problem/CF371D>\n\n\u4ecb\u7ecd\u4e00\u4e2a $\\mathcal O(m+n)$ \u7684\u5e76\u67e5\u96c6\u505a\u6cd5\u3002\n\n\u8003\u8651\u4f18\u5316\u66b4\u529b\u3002\u53d1\u73b0\u5982\u679c\u4e00\u4e2a\u6c99\u6f0f\u6ee1\u4e86\u540e\uff0c\u5728 $1$ \u64cd\u4f5c\u7684\u5faa\u73af\u4e2d\u5c31\u4e0d\u7528\u770b\u5b83\u4e86\u3002\u8fd9\u4f3c\u4e4e\u53ef\u4ee5\u4f18\u5316\u66b4\u529b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u5206\u6790\u4e00\u4e0b\uff1a\u5728 $1\\ u\\ x$ \u64cd\u4f5c\u4e2d\uff0c\u5982\u679c $u$ \u8fd9\u4e2a\u6c99\u6f0f\u6839\u672c\u6ca1\u88ab\u5012\u6ee1\uff0c\u90a3\u4e48\u53ea\u5faa\u73af\u4e86 $1$ \u6b21\uff1b\u5982\u679c $u$ \u88ab\u5012\u6ee1\u4e86\uff0c\u6d41\u5230 $u+1$ \u540e\u6ca1\u6709\u6ee1\uff0c\u90a3\u4e48\u5faa\u73af\u4e86 $2$ \u6b21\uff0c\u53e6\u5916\u6709 $1$ \u4e2a\u6c99\u6f0f\u6ee1\u4e86\uff0c\u4e5f\u5c31\u662f\u8bf4\u4ee5\u540e\u4e0d\u4f1a\u518d\u770b\u4e86\uff1b\u5982\u679c\u6d41\u5230 $u+1$ \u4e5f\u6ee1\u4e86\uff0c\u6d41\u5230 $u+2$ \u6ca1\u6709\u6ee1\uff0c\u90a3\u4e48\u5faa\u73af\u4e86 $3$ \u6b21\uff0c\u6709 $2$ \u4e2a\u6c99\u6f0f\u4ee5\u540e\u4e0d\u4f1a\u518d\u770b\u4e86\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c\u6bcf\u4e2a $1$ \u64cd\u4f5c\u4f1a\u5148\u5faa\u73af\u4e00\u6b21\uff0c\u4e4b\u540e\u5faa\u73af\u4e86\u591a\u5c11\u6b21\u5c31\u4f1a\u6709\u591a\u5c11\u4e2a\u6c99\u6f0f\u88ab\u5012\u6ee1\u3002\u800c\u6700\u591a\u53ea\u6709 $n$ \u4e2a\u6c99\u6f0f\u4f1a\u88ab\u5012\u6ee1\uff0c\u6240\u4ee5\u5982\u679c\u6709\u4e00\u79cd\u65b9\u6cd5\u80fd\u505a\u5230\u4e00\u4e2a\u6c99\u6f0f\u88ab\u5012\u6ee1\u4e4b\u540e\u4e00\u904d\u4e5f\u4e0d\u4f1a\u770b\u5b83\uff0c\u90a3\u4e48\u590d\u6742\u5ea6\u5c31\u662f $\\mathcal O(m+n)$ \u7684\u3002\n\n\u8003\u8651\u5e76\u67e5\u96c6\uff0c$x$ \u7684\u7956\u5148\u662f $y$ \u8868\u793a $x$ \u540e\u7b2c\u4e00\u4e2a\u6ca1\u6709\u88ab\u5012\u6ee1\u7684\u8282\u70b9\u662f $y+1$\u3002\u8fd9\u6b63\u597d\u5bf9\u5e94\u4e86\u5e76\u67e5\u96c6\u4e00\u5f00\u59cb\u5c06\u6240\u6709\u8282\u70b9\u7684\u7956\u5148\u8bbe\u7f6e\u6210\u5b83\u672c\u8eab\u3002\u5bf9\u4e8e\u4e00\u4e2a $1$ \u64cd\u4f5c\uff0c\u6bcf\u6b21\u901a\u8fc7\u5e76\u67e5\u96c6\u6c42\u7956\u5148\u7684\u64cd\u4f5c $\\mathcal O(1)$ \u8df3\u5230\u5b83\u4e4b\u540e\u7b2c\u4e00\u4e2a\u6ca1\u6709\u88ab\u5012\u6ee1\u7684\u3002\u5982\u679c\u5faa\u73af\u5230\u8282\u70b9 $x$ \u5e76\u4e14\u5b83\u88ab\u5012\u6ee1\u4e86\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6240\u6709\u5c06 $x$ \u5f53\u505a\u7b2c\u4e00\u4e2a\u6ca1\u6709\u6ee1\u7684\u6c99\u6f0f\u7684\u6c99\u6f0f\uff08\u5373\u7956\u5148\u662f $x-1$ \u7684\u6c99\u6f0f\uff09\uff0c\u4ed6\u4eec\u90fd\u5e94\u8be5\u88ab\u66f4\u65b0\u4e3a $x$ \u7684\u7956\u5148\uff0c\u4e8e\u662f\u6211\u4eec\u9700\u8981\u5c06 $x-1$ \u5408\u5e76\u5230 $x$ \u4e0a\u3002\u67e5\u8be2\u65f6\u76f4\u63a5\u8f93\u51fa\u7b54\u6848\u5373\u53ef\u3002\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namepace std;\nint a[200010],fa[200010],ans[200010];\ninline int read()\n{\n\tchar c=getchar();\n\tint x=0;\n\twhile(c<'0'||c>'9')\n\t\tc=getchar();\n\twhile(c>='0'&&c<='9')\n\t{\n\t\tx=(x<<3)+(x<<1)+c-'0';\n\t\tc=getchar();\n\t}\n\treturn x;\n}\nint get(int x)\n{\n\tif(fa[x]!=x)\n\t\treturn fa[x]=get(fa[x]);\n\treturn x;\n}\nint main()\n{\n\tint n=read(),m,i,o,x;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\ta[i]=read();\n\t\tfa[i]=i;\n\t}\n\tm=read();\n\twhile(m--)\n\t{\n\t\to=read();\n\t\tx=read();\n\t\tif(o-1)\n\t\t\tprintf(\"%d\\n\",ans[x]);\n\t\telse\n\t\t{\n\t\t\tans[x]+=read();\n\t\t\twhile(x<=n&&ans[x]>a[x])//\u5982\u679c\u6c34\u5728x\u5904\u6ea2\u51fa\u4e86\u5c31\u4e00\u76f4\u5faa\u73af\n\t\t\t{\n\t\t\t\tfa[get(x-1)]=get(x);//\u5c06x-1\u5408\u5e76\u5230x\u4e0a\n\t\t\t\to=get(x)+1;\n\t\t\t\tans[o]+=ans[x]-a[x];//\u4e0b\u4e00\u4e2a\u6c99\u6f0f\u52a0\u4e0a\u6ea2\u51fa\u7684\u6c34\n\t\t\t\tans[x]=a[x];\n\t\t\t\tx=o;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1626492621,
        "uid": 150522,
        "name": "b6e0_",
        "ccfLevel": 9,
        "title": "CF371D Vessels \u9898\u89e3"
    },
    {
        "content": "#### \u524d\u8a00\n\n\u8fd9\u9053\u9898\u7684\u5e38\u89c4\u5199\u6cd5\u5927\u6982\u6709\uff1a\u94fe\u8868\uff0c\u7ebf\u6bb5\u6811\u3002\n\n\u6211\u505a\u7684\u65f6\u5019\u4ec0\u4e48\u4e5f\u6ca1\u60f3\uff0c\u5c31\u76f4\u63a5\u7ebf\u6bb5\u6811\u5e72\u5c31\u5b8c\u4e86.....\u56e0\u4e3a\u6211\u6ca1\u6709\u8111\u5b50......\n\n\u4f46\u662f\u5b9e\u9645\u4e0a\u53ef\u4ee5\u7528\u94fe\u8868\u505a\u5230\u590d\u6742\u5ea6 O($n$) \u7ea7\u522b\u3002\n\n#### \u5177\u4f53\u505a\u6cd5\n\n+ 1.**\u7ebf\u6bb5\u6811**\n\n\u7ebf\u6bb5\u6811\u505a\u6cd5\u9700\u8981\u652f\u6301\u7684\u64cd\u4f5c\u4e3a\uff1a\n\n\u533a\u95f4\u8986\u76d6\uff0c\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\uff0c\u5355\u70b9\u67e5\u8be2\u3002\n\n\u8fd9\u9053\u9898\u76ee\u7684\u96be\u70b9\u5c31\u5728\u4e8e\u600e\u4e48\u6837\u7ef4\u62a4\u6c34\u4e00\u76f4\u5f80\u4e0b\u9762\u6d41\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u60f3\u5230**\u4e8c\u5206**\u6765\u5224\u65ad\u6c34\u4f1a\u6d41\u6ee1\u54ea\u4e00\u4e9b\u6c99\u6f0f\uff0c\u7136\u540e\u5bf9\u4e8e\u8fd9\u6bb5\u533a\u95f4\u5b9e\u884c**\u533a\u95f4\u8986\u76d6**\uff0c\u7528\u4e00\u4e2a**\u524d\u7f00\u548c\uff08\u524d\u7f00\u548c\u91cc\u9762\u5b58\u7684\u662f\u5bb9\u91cf\u7684\u524d\u7f00\u548c)\uff09 + \u533a\u95f4\u67e5\u8be2\u76ee\u524d\u6c34\u91cf\u533a\u95f4\u548c**\u6765\u8f85\u52a9**\u4e8c\u5206**\u3002\u6700\u540e\u6211\u4eec\u53d1\u73b0\u4f1a\u5269\u4e0b\u4e00\u70b9\u6c34\u65e0\u6cd5\u6ce8\u6ee1\u4e0b\u4e00\u4e2a\u6f0f\u6597\uff0c\u7136\u540e\u91c7\u7528**\u5355\u70b9\u4fee\u6539**\uff0c\u5c06\u6c34\u6ce8\u5165\u4e0d\u80fd\u6ce8\u6ee1\u7684\u6c99\u6f0f\u5373\u53ef\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u8be2\u95ee\u5c31\u76f4\u63a5\u5355\u70b9\u67e5\u503c\u5373\u53ef\u3002\n\n#### Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\nchar buf[1 << 22],*p1 = buf,*p2 = buf;\n#define mid ((L[x] + R[x]) >> 1)\n#define getchar() (p1 == p2 && (p2 = (p1 = buf) + fread(buf , 1 , 1 << 21 , stdin),p1 == p2) ? EOF: *p1++)\ninline int read() {\n    int x = 0 , flag = 1;\n    char ch = getchar();\n    for( ; ch > '9' || ch < '0' ; ch = getchar()) if(ch == '-') flag = -1;\n    for( ; ch >= '0' && ch <= '9' ; ch = getchar()) x = (x << 3) + (x << 1) + ch - '0';\n    return x * flag;\n}\n\ntypedef long long LL;\nconst int MAXN = 2e5 + 50;\nint n,m;\nint A[MAXN],S[MAXN];//A\u5b58\u5bb9\u91cf\uff0cS\u5b58\u5bb9\u91cf\u7684\u524d\u7f00\u548c\n\nstruct SegmentTree {\n    LL sum[MAXN << 2],laz[MAXN << 2],L[MAXN << 2],R[MAXN << 2];\n    void build(int x,int l,int r) {\n        sum[x] = laz[x] = 0;\n        L[x] = l , R[x] = r;\n        if(l == r) return ;\n        build(x << 1 , l , mid);\n        build(x << 1 | 1 , mid + 1 , r);\n        return ;\n    }\n\n    void ad(int x,LL k) {\n        laz[x] = 1;\n        sum[x] = S[R[x]] - S[L[x] - 1];//\u5168\u90e8\u6ce8\u6ee1\n        return ;\n    }\n\n    void changepos(int x,int pos,int k) {\n        if(pos > n) return ;\n        if(L[x] == R[x] && L[x] == pos) {\n            sum[x] += k; return;\n        }\n        pushdown(x);\n        if(pos <= mid) changepos(x << 1 , pos , k);\n        if(pos  > mid) changepos(x << 1 | 1 , pos , k);\n        sum[x] = sum[x << 1] + sum[x << 1 | 1];\n        return ;\n    }\n\n    void change(int x,int l,int r,LL k) {\n        if(l > r) return ;\n        if(L[x] >= l && R[x] <= r) {\n            ad(x,k); return ;\n        }\n        if(l <= mid) change(x << 1 , l , r , k);\n        if(r  > mid) change(x << 1 | 1 , l , r , k);\n        sum[x] = sum[x << 1] + sum[x << 1 | 1];\n        return ;\n    }\n\n    void pushdown(int x) {//\u4e0b\u4f20\u6807\u8bb0\n        if(laz[x] == 0) return ;\n        ad(x << 1 , laz[x]);\n        ad(x << 1 | 1 , laz[x]);laz[x] = 0;\n        return ;\n    }\n\n    int GetVal(int x,int l,int r) {\n        if( l > r) return 0;\n        int s = 0;\n        if(L[x] >= l && R[x] <= r) return sum[x];\n        pushdown(x);\n        if(l <= mid) s += GetVal(x << 1 , l , r);\n        if(r  > mid) s += GetVal(x << 1 | 1 , l , r);\n        return s;\n    }\n} T;\n\nint check(int u,int val) {//\u4e8c\u5206\u627e\u51fa\u53ef\u4ee5\u6ce8\u6ee1\u7684\u6c99\u6f0f\u7684\u533a\u95f4\u53f3\u7aef\u70b9\n    int s = u - 1;//\u6ce8\u610f\u8fd9\u4e2a\u5730\u65b9\u521d\u503c\u8981\u5199\u6210u-1\n    for(int i = log2(n - u + 1) ; i >= 0 ; i --) {\n        int C = s + (1 << i);\n        if(C > n) continue;\n        if(val >= (S[C] - S[u - 1] - T.GetVal(1,u,C))) s += (1 << i);//\u4e8c\u5206\n    }\n    return s;\n}\n\nsigned main() {\n    n = read();\n    for(int i = 1 ; i <= n ; i ++) A[i] = read(),S[i] = S[i - 1] + A[i];\n    m = read();\n    T.build(1 , 1 , n + 1);\n    while(m --) {\n        int op = read(),u,x;\n        if(op == 1) {\n            u = read() , x = read();\n            int l = u , r = check(u,x),val = x - (S[r] - S[l - 1] - T.GetVal(1,l,r));\n            //val\u4ee3\u8868\u7684\u662f\u5269\u4e0b\u7684\u6c34\n            T.change(1, l, r, 1);//\u533a\u95f4\u8986\u76d6\n            T.changepos(1,r + 1,val);//\u5355\u70b9\u4fee\u6539\n        }\n        else {\n            u = read();\n            cout << T.GetVal(1,u,u) << endl;\n        }\n    }\n    return 0;\n}\n```\n\n+ \u94fe\u8868\n\n\u7b2c\u4e00\u7bc7\u9898\u89e3\u8bb2\u5f97\u5f88\u8be6\u7ec6\uff0c\u8fd9\u91cc\u6211\u5c31\u4e0d\u5c55\u5f00\u8bb2\u4e86\u3002\n\n\u5927\u6982\u601d\u8def\uff1a\n\n\u94fe\u8868\u91cc\u5b58\u7684\u662f\u4e0b\u4e00\u4e2a\u6ca1\u6709\u88ab\u88c5\u6ee1\u7684\u6c34\u6876\u3002\u521d\u59cb\u503c\u5373\u4e3a $nxt[i] = i + 1$\uff0c\u5f53\u4e00\u4e2a\u6c34\u6876\u88ab\u88c5\u6ee1\u7684\u65f6\u5019\uff0c\u6211\u4eec\u6bcf\u6b21\u8df3\u5176$nxt[]$ \u5373\u53ef\uff0c\u8fd9\u6837\u5b50\u8df3\u4e0b\u53bb\uff0c\u76f4\u5230\u8df3\u5230\u6c34\u6ca1\u4e86\uff0c\u7136\u540e\u518d\u66f4\u65b0\u8def\u5f84\u4e0a\u7684 $nxt$ \u6570\u7ec4\u3002\u8fd9\u4e2a\u65b9\u6cd5\u4e0d\u96be\u53d1\u73b0\u5747\u644a\u4e0b\u6765\u662f O($n$) \u7684\u3002\u4ee3\u7801\u77ed\u4e86\u4e0d\u6b62\u4e00\u70b9\u70b9\uff0c\u5feb\u4e86\u4e0d\u6b62\u4ebf\u70b9\u70b9\u3002\n\n#### Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\nchar buf[1 << 22],*p1 = buf,*p2 = buf;\n#define getchar() (p1 == p2 && (p2 = (p1 = buf) + fread(buf , 1 , 1 << 21 , stdin),p1 == p2) ? EOF: *p1++)\ninline int read() {\n    int x = 0 , flag = 1;\n    char ch = getchar();\n    for( ; ch > '9' || ch < '0' ; ch = getchar()) if(ch == '-') flag = -1;\n    for( ; ch >= '0' && ch <= '9' ; ch = getchar()) x = (x << 3) + (x << 1) + ch - '0';\n    return x * flag;\n}\n\ntypedef long long LL;\nconst int MAXN = 2e5 + 50;\nint n,m;\nint A[MAXN],nxt[MAXN],N[MAXN];\n\nsigned main() {\n    n = read();\n    for(int i = 1 ; i <= n ; i ++) A[i] = read(),nxt[i] = i + 1;\n    m = read();\n    while(m --) {\n        int op = read(),u,x;\n        if(op == 1) {\n            u = read() , x = read();\n            int now = u;\n            while(nxt[now]) {\n                if(x + N[now] >= A[now]) x -= (A[now] - N[now]), N[now] = A[now];\n                else {N[now] += x ; break;}\n                now = nxt[now];\n            }\n            int t;\n            while(u != now) t = u , u = nxt[u] , nxt[t] = now;\n        }\n        else {\n            u = read();\n            cout << N[u] << endl;\n        }\n    }\n    return 0;\n}\n```\n\n#### \u603b\u7ed3\n\n\u4ee5\u540e\u4e00\u5b9a\u8981\u52a8\u8111\u5b50\u601d\u8003\u95ee\u9898\uff0c\u4e0d\u8981\u4e00\u4e0a\u6765\u5c31\u6253\u66b4\u529b\uff0c\u8fd9\u4e2a\u4e60\u60ef\u4e0d\u597d......\n",
        "postTime": 1612870677,
        "uid": 67817,
        "name": "MuYC",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF371D \u3010Vessels\u3011"
    },
    {
        "content": "\u8003\u8651\u4e00\u4e2a\u5341\u5206naive\u7684\u66b4\u529b\uff1a  \n- \u76f4\u63a5\u7ef4\u62a4\u6bcf\u4e00\u4e2a\u5bb9\u5668\u4e2d\u7684\u6c34\u91cf\n- \u5bf9\u4e8e\u64cd\u4f5c1\uff0c\u6211\u4eec\u76f4\u63a5\u52a0\u6c34\uff0c\u5982\u679c\u6c34\u6ea2\u51fa\u4e86\u5c31\u6267\u884c`downflow`\u64cd\u4f5c\uff0c\u66b4\u529b\u5411\u4e0b\u904d\u5386\u6240\u6709\u5bb9\u5668\n- \u5bf9\u4e8e\u64cd\u4f5c2\uff0c\u6211\u4eec\u76f4\u63a5\u8f93\u51fa\u5bf9\u5e94\u7684\u6c34\u91cf\n\n\u53d1\u73b0\u6b64\u65f6\u74f6\u9888\u5728`downflow`\u64cd\u4f5c\u4e0a\uff0c\u6bcf\u6b21\u6ea2\u51fa\u6211\u4eec\u6700\u574f\u8981\u904d\u5386$O(n)$\u4e2a\u5bb9\u5668\u624d\u80fd\u5b8c\u6210\u3002\n\n\u901a\u8fc7\u4e00\u4e9b\u7ec6\u81f4\u7684\u89c2\u5bdf\uff0c\u53ef\u4ee5\u53d1\u73b0\u5982\u679c\u5bb9\u5668$i$\u4e2d\u7684\u6c34\u6ea2\u51fa\u4e86\uff0c\u90a3\u4e48\u6ea2\u51fa\u7684\u8fd9\u4e00\u90e8\u5206\u5f71\u54cd\u5230\u7684\u7b2c\u4e00\u4e2a\u5bb9\u5668\u5e94\u8be5\u662f$i$\u4e0b\u65b9\u7b2c\u4e00\u4e2a\u6ca1\u6709\u6ee1\u7684\u5bb9\u5668\u3002\u66b4\u529b\u7684\u505a\u6cd5\u662f\u6bcf\u6b21\u4e00\u4e2a\u4e00\u4e2a\u904d\u5386\u5bb9\u5668\uff0c\u663e\u7136\u5b83\u8fd0\u4f5c\u5341\u5206\u7f13\u6162\u3002\n\n\u8003\u8651\u5bf9\u4e8e\u7b2c$i$\u4e2a\u5bb9\u5668\uff0c\u7ef4\u62a4\u5b83\u4e0b\u65b9\u7b2c\u4e00\u4e2a\u6ca1\u6709\u6ee1\u7684\u5bb9\u5668$nxt_i$\u3002\u5f00\u59cb\u7684\u65f6\u5019$nxt_i=i+1$\uff0c\u90a3\u4e48\u6bcf\u6b21\u6267\u884c`downflow`\u65f6\u6211\u4eec\u53ea\u8981\u68c0\u67e5$nxt_i$\u662f\u5426\u4f1a\u6ea2\u51fa\uff0c\u4f1a\u7684\u8bdd\u5219\u9012\u5f52\u6267\u884c`downflow`\uff0c\u66f4\u65b0$nxt_i=nxt_{nxt_i}$\u3002\n\n\u8fd9\u4e48\u505a\u770b\u8d77\u6765\u6bcf\u6b21`downflow`\u6700\u574f\u8fd8\u662f$O(n)$\u7684\uff0c\u597d\u50cf\u6ca1\u53d8\uff1f  \n\u5206\u6790\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u9996\u5148$nxt$\u6570\u7ec4\u6709\u4e00\u4e2a\u6027\u8d28\uff1a\u8fd9\u91cc\u9762\u7684\u6bcf\u4e2a\u5143\u7d20\u53ea\u4f1a\u53d8\u5927\uff0c\u4e0d\u4f1a\u53d8\u5c0f\u3002  \n\u5176\u6b21\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u5982\u679c\u4e00\u6b21\u64cd\u4f5c\u4e2d$nxt_i$\u7684\u503c\u589e\u52a0\u4e86$d$\uff0c\u90a3\u4e48\u8fd9\u6b21`downflow`\u64cd\u4f5c\u6700\u591a\u904d\u5386\u4e86$d+1$\u4e2a\u5bb9\u5668\u3002\u56e0\u4e3a\u6709\u7684\u65f6\u5019\uff0c\u5982\u679c`downflow`\u8fc7\u7a0b\u4e2d\u53d1\u73b0$nxt_u=n+1$\uff0c\u6b64\u65f6$nxt_i$\u5230$nxt_u$\u90fd\u4f1a\u53d8\u6210$n+1$\uff0c\u800c\u8fd9\u79cd\u53d8\u5316\u6839\u636e\u6027\u8d28\uff0c\u6700\u591a\u53d1\u751f$n$\u6b21\uff0c\u4e5f\u5c31\u662f\u6b64\u65f6\u7684`downflow`\u662f\u5747\u644a$O(n)$\u7684\u3002  \n\u6839\u636e$nxt$\u6570\u7ec4\u7684\u5b9a\u4e49\uff0c\u4e5f\u56e0\u4e3a`downflow`\u64cd\u4f5c\u662f\u9012\u5f52\u6267\u884c\u7684\uff0c\u6240\u4ee5\u5982\u679c\u4e00\u6b21\u64cd\u4f5c\u4e2d$nxt_i$\u7684\u503c\u589e\u52a0\u4e86$d$\uff0c\u90a3\u4e48\u4e00\u76f4\u5230$nxt_n$\u4e3a\u6b62\uff0c\u8fd9\u4e9b\u4f4d\u7f6e\u4e0a\u7684$nxt$\u503c\u4e00\u5b9a\u4e0d\u4f1a\u5c0f\u4e8e$nxt_i$\u3002\u800c\u8fd9\u4e9b\u66f4\u65b0\u90fd\u662f\u5728\u540c\u4e00\u6b21`downflow`\u64cd\u4f5c\u4e2d\u5b8c\u6210\u7684\u3002  \n\u6700\u540e\uff0c\u56e0\u4e3a$nxt_1$\u7684\u521d\u503c\u4e3a$2$\uff0c\u5b83\u6700\u591a\u53d8\u5927\u5230$n+1$\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u6700\u591a\u4f1a\u904d\u5386$O(n)$\u4e2a\u5bb9\u5668\uff0c\u6574\u4e2a$nxt$\u6570\u7ec4\u5c31\u5168\u90e8\u7b49\u4e8e$n+1$\uff0c\u4e0d\u4f1a\u518d\u53d1\u751f\u53d8\u5316\u4e86\u3002\n\n\u6240\u4ee5\uff0c\u6700\u7ec8\u7684\u590d\u6742\u5ea6\u662f\u5747\u644a$O(n)$\u7684\u3002\n\n[code](https://www.luogu.org/paste/ss363pfs)",
        "postTime": 1573651818,
        "uid": 44534,
        "name": "Kirisame_Marisa_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF371D \u3010Vessels\u3011"
    }
]