[
    {
        "content": "\u5b9a\u4e8e $lst_i$ \u8868\u793a\u80fd\u5230\u8fbe\u4f4d\u7f6e $i$ \u6700\u5de6\u8fb9\u7684\u7aef\u70b9\u3002\u90a3\u4e48\u663e\u7136\u53ef\u4ee5\u9012\u63a8\u5f97\u5230 $lst_i=\\max\\{lst_{i-1},1,i-a_i+1\\}$\uff0c\u663e\u7136\u7b54\u6848\u5c31\u662f $\\sum\\limits_{i=1}^n i-lst_i+1$\uff0c\u663e\u7136\u6b64\u65f6\u7684 $lst$ \u5177\u6709\u5355\u8c03\u6027\u3002\n\n\u5bf9\u4e8e\u6bcf\u6b21\u4fee\u6539\uff0c$lst_p$ \u4f1a\u6709 $3$ \u79cd\u53ef\u80fd\u7684\u7ed3\u679c\u3002\n\n* $lst_p$ \u7684\u503c\u4e0d\u53d8\u3002\u90a3\u4e48\u5bf9\u4e8e\u7b54\u6848\u4e5f\u4e0d\u4f1a\u53d8.\n\n* $lst_p$ \u7684\u503c\u53d8\u5927\uff0c\u4e8c\u5206\u627e\u5230\u540e\u9762\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e $i$ \u4f7f\u5f97 $lst_i \\leq lst_p$\uff0c\u4f1a\u5bf9\u7b54\u6848\u9020\u6210\u5f71\u54cd\u7684\u5c31\u662f\u533a\u95f4 $[p,i]$\uff0c\u5bf9\u7b54\u6848\u9020\u6210\u7684\u5f71\u54cd\u662f $\\sum\\limits_{j=p}^{i}lst_j-lst_p$\uff0c\u641e\u4e00\u4e2a\u524d\u7f00\u548c\u53ef\u4ee5\u8f7b\u677e\u89e3\u51b3\u3002\n* $lst_p$ \u7684\u503c\u53d8\u5c0f\uff0c\u4e8c\u5206\u627e\u5230\u540e\u9762\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e $i$ \u4f7f\u5f97 $lst_i\\leq lst_p$\uff0c\u4f1a\u5bf9\u7b54\u6848\u9020\u6210\u5f71\u54cd\u7684\u5c31\u662f\u533a\u95f4 $[p,i]$\uff0c\u5bf9\u7b54\u6848\u9020\u6210\u7684\u5f71\u54cd\u662f $\\sum\\limits_{j=p}^i lst_j-\\max(lst_{j-1},j-a_j+1)$\u3002\n\n\u4e3a\u4e86\u7ef4\u62a4\u540e\u9762\u7684\u90a3\u4e00\u5768\u51cf\u53f7\uff0c\u8003\u8651\u79bb\u7ebf\u8be2\u95ee\uff0c\u5c06\u8be2\u95ee\u6309\u7167 $p$ \u7684\u964d\u5e8f\u6392\u5217\u3002\n\n\u5efa\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u7ef4\u62a4 $\\max\\limits_{j=p}^i\\{j-a_j+1\\}$\u3002\u5bf9\u4e8e\u6bcf\u6b21\u662f\u53d8\u5c0f\u7684\u8be2\u95ee\uff0c\u4e8c\u5206\u627e\u5230\u6700\u540e\u4e00\u4e2a\u5c0f\u4e8e $x=\\max(lst_{p-1},p-a_p+1)$ \u7684\u4f4d\u7f6e $pos$\uff0c\u540e\u9762\u90a3\u4e00\u5806\u5c31\u662f $\\sum\\limits_{i=pos+1}^I Tree_i+(pos-i+1)x$\u3002\u81f3\u4e8e\u6bcf\u6b21\u66f4\u65b0\u5c31\u662f\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u627e\u6700\u540e\u4e00\u4e2a\u5c0f\u4e8e\u7b49\u4e8e $p-a_p+1$ \u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u533a\u95f4\u8d4b\u503c\u3002\u7efc\u4e0a\uff0c\u7ebf\u6bb5\u6811\u8981\u652f\u6301\u7684\u64cd\u4f5c\u5c31\u662f\u533a\u95f4\u8d4b\u503c\uff0c\u533a\u95f4\u6c42\u548c\uff0c\u4e8c\u5206\u67e5\u8be2\uff0c\u6240\u4ee5\u8981\u7ef4\u62a4\u533a\u95f4\u548c\uff0c\u533a\u95f4\u6700\u5927\u503c\u3002\n",
        "postTime": 1667444466,
        "uid": 341110,
        "name": "starry_lasky",
        "ccfLevel": 0,
        "title": "\u6028\u79cd\u505a\u6cd5"
    },
    {
        "content": "\u63d0\u51fa\u4e00\u4e2a\u65f6\u95f4\u7a7a\u95f4\u4e3a\u7ebf\u6027\u7684\u505a\u6cd5\u3002\n\n\u9996\u5148\u5ef6\u627f C1 \u7684\u505a\u6cd5\u3002\u8ba9\u6240\u6709 $a_i \\gets a_i-i$\uff0c\u5224\u65ad\u4e00\u4e2a\u5b50\u533a\u95f4 $[l,r]$ \u662f\u5426\u5408\u6cd5\uff0c\u5c31\u76f8\u5f53\u4e8e $\\displaystyle \\min_{i=l}^r a_i \\geq (1-l)$\u3002\n\n\u6ce8\u610f\u5230\u5982\u679c\u5b50\u533a\u95f4 $[l,r]$ \u5408\u6cd5\uff0c\u90a3\u4e48 $[l+1,r]$ \u4e00\u5b9a\u5408\u6cd5\uff0c\u4e8e\u662f\u53ef\u4ee5\u4f7f\u7528\u53cc\u6307\u9488\uff0c\u5728\u9759\u6001\u7684\u95ee\u9898\u4e2d $O(n)$ \u6c42\u89e3\u3002\u5177\u4f53\u7684\u505a\u6cd5\u662f\uff0c\u5bf9\u4e8e\u4e00\u4e2a $i$ \u6c42\u51fa\u5176\u6781\u957f\u7684\u5408\u6cd5\u5b50\u533a\u95f4 $[i,p_i]$\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f $\\displaystyle \\sum_{i=1}^n p_i-i+1$\u3002\u6ce8\u610f\u5230\u91cc\u9762\u6709\u4e00\u4e9b\u53ea\u8ddf $i$ \u548c\u5e38\u6570\u6709\u5173\u7684\u4e1c\u897f\u53ef\u4ee5\u63d0\u51fa\u6765\u505a\u5176\u4ed6\u7684\u8ba1\u7b97\uff0c\u5bf9\u4e8e\u8fd9\u90e8\u5206\u7b80\u5355\u5904\u7406\u4e0d\u518d\u8d58\u8ff0\u3002\n\n\u73b0\u5728\u95ee\u9898\u5e26\u4e0a\u4e86\u4fee\u6539\uff0c\u6211\u4eec\u8fd8\u662f\u76f4\u63a5\u8003\u8651\u7ef4\u62a4 $p_i$ \u7684\u503c\uff0c\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n- \u5982\u679c $a_x$ \u4fee\u6539\u4e4b\u540e\u53d8\u5c0f\u4e86\uff1a\u4e4b\u524d\u6709\u4e00\u4e9b\u4f4d\u7f6e\u80fd\u8d8a\u8fc7 $x$\uff0c\u4f46\u662f\u5728\u4fee\u6539\u4e4b\u540e\u53ea\u80fd\u505c\u5728 $x-1$\uff1b   \n- \u5426\u5219\uff1a\u4e4b\u524d\u6709\u4e00\u4e9b\u4f4d\u7f6e\u88ab\u5361\u5728\u4e86 $x-1$\uff0c\u73b0\u5728\u80fd\u8d8a\u8fc7 $x$ \u4e86\uff0c\u88ab\u5361\u5728\u66f4\u524d\u9762\u7684\u4f4d\u7f6e\u4e0d\u53ef\u80fd\u8d8a\u8fc7 $x$\u3002\n\n\u5148\u6765\u89e3\u51b3\u7b2c\u4e00\u4e2a\u95ee\u9898\u3002\u6211\u4eec\u9700\u8981\u5148\u627e\u5230\u7b2c\u4e00\u4e2a\u80fd\u8d8a\u8fc7 $x$ \u7684\u4f4d\u7f6e $u$\uff0c\u5e76\u4e14\u627e\u5230\u4fee\u6539\u540e\u6700\u8fdc\u7684**\u53ef\u80fd\u53ef\u4ee5**\u8d8a\u8fc7 $x$ \u7684\u4f4d\u7f6e $d$\uff08\u8fd9\u4e2a\u610f\u601d\u662f\u8bf4\uff0c\u6bd4\u5982\u5f53\u524d $a_i$ \u88ab\u4fee\u6539\u6210\u4e86 $-1$\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6700\u8fdc\u7684\u4f4d\u7f6e\u5c31\u662f $2$\uff0c\u56e0\u4e3a $1-2 = -1$\uff09\u3002\u90a3\u4e48\u73b0\u5728 $\\max(d,u)$ \u5c31\u662f\u5b9e\u9645\u80fd\u8d8a\u8fc7 $x$ \u7684\u4f4d\u7f6e\uff0c\u5b83\u4eec\u7684 $p$ \u503c\u662f\u4e0d\u4f1a\u53d8\u7684\u3002\u5269\u4e0b\u7684\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u662f $[u,d-1]$\uff08\u53ef\u80fd\u662f\u7a7a\u533a\u95f4\uff09\u5c31\u53ea\u80fd\u5230 $x-1$ \u4e86\u3002\u53d1\u73b0\u6211\u4eec\u9700\u8981\u7ef4\u62a4 $p$ \u503c\u7684\u524d\u540e\u7f00\u548c\uff0c\u4e2d\u95f4 $[u,d-1]$ \u7684 $p$ \u503c\u90fd\u662f $x-1$\uff0c\u8fd9\u6837\u5c31\u80fd\u76f4\u63a5\u7b97\u4e86\u3002\n\n\u518d\u6765\u770b\u7b2c\u4e8c\u4e2a\u95ee\u9898\u3002\u5148\u627e\u5230\u88ab\u5361\u5728 $x-1$ \u7684\u6240\u6709\u4f4d\u7f6e\uff0c\u518d\u627e\u5230\u4fee\u6539\u540e\u6700\u8fdc\u7684**\u53ef\u80fd\u53ef\u4ee5**\u8d8a\u8fc7 $x$ \u7684\u4f4d\u7f6e $d$\uff08\u610f\u4e49\u540c\u4e0a\u561b\uff09\u3002\u6ce8\u610f\u5230 $p$ \u5355\u8c03\uff0c\u88ab\u5361\u5728 $x-1$ \u7684\u6240\u6709\u4f4d\u7f6e\u4e00\u5b9a\u6784\u6210\u4e00\u4e2a\u8fde\u7eed\u7684\u533a\u95f4 $[l,r]$\u3002\u5f53\u7136\u56e0\u4e3a\u8981\u53ef\u4ee5\u8d8a\u8fc7 $x$\uff0c\u6240\u4ee5\u9700\u8981\u8ba9 $l \\gets \\max(l,d), r \\gets \\max(r,d)$\u3002\u7136\u540e $[l,r]$ \u91cc\u9762\u7684\u6240\u6709 $p$ \u4f1a\u53d1\u751f\u76f8\u540c\u7684\u53d8\u5316\uff0c\u5177\u4f53\u7684\uff0c$p_l'$ \u4e3a $l$ \u4e4b\u540e\uff0c\u4ece\u5de6\u5f80\u53f3\u7b2c\u4e8c\u4e2a $i$ \u6ee1\u8db3 $a_i < 1-l$\u3002\u6ce8\u610f\u5230\u8fd9\u4e2a\u4ecd\u7136\u6ee1\u8db3\u5355\u8c03\u6027\uff0c\u4e8e\u662f\u6c42\u51fa $p$ \u4e4b\u540e\u53ef\u4ee5\u518d\u4e00\u6b21\u53cc\u6307\u9488\u6c42\u51fa $p'$\u3002\u5bf9 $p'$ \u505a\u4e00\u4e2a\u524d\u7f00\u548c\uff0c\u5c31\u53ef\u4ee5\u56de\u7b54\u67e5\u8be2\u3002\n\n\u73b0\u5728\u7559\u4e0b\u6765\u7684\u4e0d\u80fd\u7ebf\u6027\u505a\u51fa\u7684\u95ee\u9898\u6709\u627e\u5230\u7b2c\u4e00\u4e2a\u80fd\u8d8a\u8fc7 $x$ \u7684\u4f4d\u7f6e $u$ \u548c\u627e\u5230\u88ab\u5361\u5728 $x-1$ \u7684\u6240\u6709\u4f4d\u7f6e\u3002\u6ce8\u610f\u5230 $x$ \u7684\u503c\u57df\u53ea\u6709 $O(n)$\uff0c\u4e8e\u662f\u53ef\u4ee5 $O(n)$ \u9884\u5904\u7406\u8fd9\u4e9b\u4fe1\u606f\u3002\n\n\u65f6\u95f4\u4e0e\u7a7a\u95f4\u590d\u6742\u5ea6\u5747\u4e3a $O(n)$\u3002\u5177\u4f53\u5b9e\u73b0\u53ef\u4ee5\u770b[\u63d0\u4ea4\u8bb0\u5f55](https://codeforces.com/problemset/submission/1736/175849599)\u3002\n\nWonderhoy!",
        "postTime": 1665650917,
        "uid": 340163,
        "name": "OotoriEmu",
        "ccfLevel": 0,
        "title": "CF1736C2 Sol"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1736C2)\n\n\n------------\n## \u601d\u8def\uff1a\n\n\u6211\u4eec\u8003\u8651\u6ca1\u6709\u4fee\u6539\u65f6\uff08\u4e5f\u5c31\u662f C1\uff09\u8be5\u600e\u4e48\u505a\uff1a\n\n\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a $c$ \u6570\u7ec4\uff0c\u5176\u4e2d $c_i = \\max(i-a_i+1, 1)$\uff0c\u4e5f\u5c31\u662f\u53ea\u8003\u8651 $a_i$ \u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u5c0f\u7684\u8d77\u59cb\u4f4d\u7f6e\u5728\u54ea\u91cc\u3002\n\n\u5bf9\u4e8e $a_i$\uff0c\u663e\u7136\u5b83\u7684\u6700\u5c0f\u8d77\u59cb\u4f4d\u7f6e\u5e94\u8be5\u662f $\\max\\{c_j\\},~j\\le i$\uff0c\u8bb0\u4e3a $p_i$\u3002\n\n\u90a3\u4e48\u6700\u7ec8\u7b54\u6848\u5c31\u662f $\\frac{n(n+1)}{2}+n-\\sum_{i=1}^n p_i$\n\n\u5982\u679c\u6709\u4fee\u6539\u5462\uff1f\n\n\u5047\u8bbe\u6211\u4eec\u5c06 $a_x$ \u6539\u4e3a $y$\uff0c$c_x$ \u4e5f\u76f8\u5e94\u6539\u4e3a $\\max(x - y + 1,1)$\uff1b\u4f46\u5bf9\u4e8e $p_x$\uff0c\u5982\u679c\u6211\u4eec\u66b4\u529b\u4fee\u6539\uff0c\u90a3\u4e48\u6539\u4e00\u6b21\u5c31\u4f1a\u662f $O(n)$ \u7684\u3002\n\n\u6211\u4eec\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4 $p$\u3002\n\n\u5bf9\u4e8e\u6bcf\u6b21\u4fee\u6539\uff0c\u6211\u4eec\u5c31\u50cf[ \u697c\u623f\u91cd\u5efa\u8fd9\u9898 ](https://www.luogu.com.cn/problem/P4198)\u4e00\u6837\uff0c\u8ba1\u7b97\u5de6\u534a\u90e8\u5206\u5bf9\u53f3\u534a\u90e8\u5206\u7684\u5f71\u54cd\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(q\\log^2n)$\n\n\n------------\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define LL long long\n#define FOR(i, x, y) for(int i = (x); i <= (y); i++)\n#define ROF(i, x, y) for(int i = (x); i >= (y); i--)\n#define PFOR(i, x) for(int i = he[x]; i; i = r[i].nxt)\ninline int rd()\n{\n    int sign = 1, re = 0; char c = getchar();\n    while(!isdigit(c)){if(c == '-') sign = -1; c = getchar();}\n    while(isdigit(c)){re = re * 10 + (c - '0'); c = getchar();}\n    return sign * re;\n}\nint T, a[200005];\nLL tr[800005]; int mx[800005], mn[800005];\n#define ls (now << 1)\n#define rs ((now << 1) | 1)\nLL calc(int now, int l, int r, int v)\n{\n    if(mn[now] >= v) return tr[now];\n    if(mx[now] <= v) return 1ll * (r - l + 1) * v;\n    int mid = (l + r) >> 1;\n    if(mx[ls] <= v) return calc(rs, mid + 1, r, v) + 1ll * (mid - l + 1) * v;\n    else return calc(ls, l, mid, v) + tr[now] - tr[ls];\n}\ninline void up(int now, int l, int r)\n{\n    int mid = (l + r) >> 1;\n    mn[now] = min(mn[ls], mn[rs]); mx[now] = max(mx[ls], mx[rs]);\n    tr[now] = tr[ls] + calc(rs, mid + 1, r, mx[ls]);\n}\nvoid build(int now, int l, int r)\n{\n    if(l == r)\n    {\n        a[l] = tr[now] = mx[now] = mn[now] = max(l - rd() + 1, 1);\n        return;\n    }\n    int mid = (l + r) >> 1;\n    build(ls, l, mid), build(rs, mid + 1, r);\n    up(now, l, r);\n}\nvoid modify(int now, int l, int r, int to, int val)\n{\n    if(l == r)\n    {\n        mx[now] = mn[now] = tr[now] = val;\n        return;\n    }\n    int mid = (l + r) >> 1;\n    if(to <= mid) modify(ls, l, mid, to, val);\n    else modify(rs, mid + 1, r, to, val);\n    up(now, l, r);\n}\ninline void solve()\n{\n    int n = rd();\n    build(1, 1, n);\n    int m = rd();\n    FOR(i, 1, m)\n    {\n        int x = rd(), y = rd();\n        modify(1, 1, n, x, max(x - y + 1, 1));\n        // printf(\"%lld\\n\", tr[1]);\n        printf(\"%lld\\n\", 1ll * n * (n + 1) / 2 + n - tr[1]);\n        modify(1, 1, n, x, a[x]);\n    }\n}\nsigned main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\"test.in\", \"r\", stdin);\n    freopen(\"test.out\", \"w\", stdout);\n#endif\n    T = 1;\n    while(T--) solve();\n    return 0;\n}\n```\n",
        "postTime": 1665728662,
        "uid": 69288,
        "name": "zuytong",
        "ccfLevel": 7,
        "title": "CF1736C2 Good Subarrays (Hard Version)"
    },
    {
        "content": "\u5148\u505a\u4e2a\u7b80\u5355\u8f6c\u5316\uff1a\n\n$a_i\\geq i-l+1$ \u8f6c\u5316\u4e3a $l\\geq i+1-a_i$\u3002\n\n\u8003\u8651\u66f4\u6539\u4e00\u6b21\u540e\u4f1a\u5bf9\u7b54\u6848\u6709\u4ec0\u4e48\u5f71\u54cd\u2026\u2026\n\n\u5982\u679c\u53d8\u5c0f\u4e86\uff0c\u53ef\u80fd\u5bfc\u81f4\u6709\u4e9b\u5b50\u533a\u95f4\u539f\u672c\u5230\u4e86\u8fd9\u5c31\u505c\u4f4f\u4e86\uff0c\u4f46\u66f4\u6539\u5b8c\u5c31\u53ef\u4ee5\u8fc7\u53bb\uff1b\u5f53\u7136\uff0c\u53cd\u4e4b\u4e5f\u6709\u53ef\u80fd\u3002\n\n\u8bbe\u66f4\u6539\u7684\u4f4d\u7f6e\u4e3a $p$\uff0c\u66f4\u6539\u7684\u6570\u4e3a $x$\u3002\n\n\u5148\u5904\u7406\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u73b0\u5728\u66f4\u6539\u5b8c\u53ef\u4ee5\u8d8a\u8fc7\u53bb\u4e86\uff0c\u4e8e\u662f\u6211\u4eec\u9700\u8981\u5728\u9884\u5904\u7406\u65f6\u5148\u5904\u7406\u51fa\u8df3\u8fc7\u8fd9\u4e2a\u70b9\uff08\u5c31\u5148\u4e0d\u7ba1\u5b83\u5408\u4e0d\u5408\u6cd5\uff09\u53ef\u4ee5\u5230\u8fbe\u7684\u6700\u8fdc\u4f4d\u7f6e\uff0c\u8bbe\u5176\u4e3a $c$\u3002\u4e3a\u4e86\u8ba1\u7b97\u51fa\u4ece\u54ea\u4e9b\u70b9\u53ef\u4ee5\u8d8a\u8fc7\u53bb\uff0c\u6211\u4eec\u8fd8\u8981\u8ba1\u7b97\u539f\u672c\u53ef\u4ee5\u8d8a\u8fc7\u53bb\u7684\u5b50\u533a\u95f4\u4e2d $l$ \u6700\u5c0f\u662f\u591a\u5c11\uff0c\u8bbe\u8fd9\u4e9b $l$ \u6240\u7ec4\u6210\u7684\u6570\u7ec4\u4e3a $from$\u3002\u5148\u8003\u8651\u8fd9\u4e2a\u70b9\u662f\u4e0d\u662f\u5173\u952e\u70b9\uff08\u8fd9\u4e2a\u70b9\u4e3a\u5173\u952e\u70b9\u5373\u4e3a\u8fd9\u4e2a\u70b9\u662f\u67d0\u4e00\u4e2a\u5de6\u7aef\u70b9\u6240\u80fd\u5230\u8fbe\u7684\u6700\u53f3\u8fb9\u7684\u7aef\u70b9\uff09\uff0c\u5982\u679c\u4e0d\u662f\uff0c\u660e\u663e\u4e0d\u7528\u8003\u8651\uff0c\u76f4\u63a5\u8f93\u51fa\u539f\u59cb\u7b54\u6848\uff1b\u5982\u679c\u662f\uff0c\u5219\u53ef\u4ee5\u5728\u9884\u5904\u7406\u4e2d\u5904\u7406\u51fa\u8be5\u70b9\u662f\u54ea\u4e2a\u5de6\u7aef\u70b9\u7684\u5173\u952e\u70b9\uff0c\u7559\u4e0b\u6700\u9760\u5de6\u7684\uff0c\u8bbe\u5176\u7ec4\u6210\u7684\u6570\u7ec4\u4e3a $impl$ \u6545\u4f1a\u53d7\u5230\u5f71\u54cd\u7684\u7684\u533a\u95f4\u4e3a\uff1a $(from_i-1)$ \u81f3 $impl_i$\u3002\n\n\u7136\u540e\u7528\u524d\u7f00\u548c\u5904\u7406\u51fa $c$ \u6570\u7ec4\u5373\u53ef\uff0c\u8bbe\u5176\u4e3a $csum$\uff0c\u5219\u8fd9\u6bb5\u533a\u95f4\u7b54\u6848\u53d8\u4e3a\uff1a$csum_{from_p}-csum_{max(p-x,impl_p-1)}$\u3002\n\n\u518d\u8003\u8651\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u5219\u4ece $p-x$ \u81f3 $from_p$ \u90fd\u4e0d\u884c\u4e86\uff08\u8fd0\u7528\u4e00\u5f00\u59cb\u7684\u8f6c\u5316\uff09\uff0c\u53d1\u73b0\u8fd9\u4e2a\u662f\u4e00\u6bb5\u8fde\u7eed\u7684\u533a\u95f4\uff0c\u4e8e\u662f\u53ef\u4ee5\u4f7f\u7528\u524d\u7f00\u548c\u5feb\u901f\u8ba1\u7b97\uff0c\u7136\u540e\u8fd9\u4e00\u6bb5\u533a\u95f4\u6240\u6709\u7684\u5de6\u7aef\u70b9\u6240\u80fd\u8fbe\u5230\u7684\u6700\u53f3\u7aef\u70b9\u5373\u4e3a $p-1$\uff0c\u7b97\u4e00\u4e0b\u5373\u53ef\u3002",
        "postTime": 1669362617,
        "uid": 377440,
        "name": "Y2y7m",
        "ccfLevel": 6,
        "title": "Good Subarrays (Hard Version)\u9898\u89e3"
    },
    {
        "content": "\u5bf9\u4e8e C1\uff0c\u6709\u4e00\u79cd\u505a\u6cd5\u662f\u56fa\u5b9a\u53f3\u7aef\u70b9\uff0c\u8bbe $f_i$ \u4e3a $i$ \u7ed3\u5c3e\u7684\u533a\u95f4\u6700\u957f\u4e3a\u591a\u5c11\uff0c\u8f6c\u79fb\u65b9\u7a0b $f_i=\\min(f_{i-1} + 1, a_i)$\u3002\n\n\u6211\u4eec\u5728\u8fd9\u4e2a\u57fa\u7840\u4e0a\u89e3\u51b3 C2\u3002\n\n\u5047\u8bbe\u4fee\u6539\u662f $(p, x)$\uff0c\u90a3\u4e48\u5bf9\u4e8e $i < p$\uff0c$f'_i=f_i$\u3002\uff08$f'$ \u8868\u793a\u4fee\u6539\u540e\u7684 dp \u6570\u7ec4\uff09\n\n\u5982\u679c\u6211\u4eec\u80fd\u627e\u5230\u8fd9\u6837\u4e00\u4e2a\u6700\u5c0f\u7684 $q$\uff0c\u4f7f\u5f97 $f'_q = a_q$\uff0c\u90a3\u4e48\u5bf9\u4e8e $i\\ge q$ \u7684 $f'_i$\uff0c\u503c\u662f\u56fa\u5b9a\u7684\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u5904\u7406\u51fa\u8fd9\u4e48\u4e00\u4e2a $g_i$\uff0c\u8868\u793a\u94a6\u5b9a $f_i=a_i$ \u65f6\uff0c\u540e\u7f00 $f_i$ \u7684\u503c\u3002\u5373 $g_i=\\displaystyle\\sum_{j=i}^n f_j$\u3002\n\n\u5047\u8bbe\u627e\u51fa\u4e86\u8fd9\u4e48\u4e00\u4e2a $q$\uff0c\u90a3\u4e48\u7b54\u6848\u53ef\u4ee5\u76f4\u63a5\u52a0\u4e0a $g_q$\u3002\n\n\u8fd8\u5269\u4e0b $i\\in[p, q)$ \u7684 $f'_i$\u3002\u56e0\u4e3a\u8fd9\u90e8\u5206\u7684 $f'_i < a_i$\uff0c\u6240\u4ee5\u6709 $f'_i=f'_{i-1}+1$\u3002\n\n\u63a5\u4e0b\u6765\u95ee\u9898\u662f\uff0c$q$ \u600e\u4e48\u627e\uff0c$g_i$ \u600e\u4e48\u5904\u7406\u3002\n\n\u5bf9\u4e8e\u627e $q$\uff0c\u8003\u8651\u4ec0\u4e48\u65f6\u5019 $(i, a_i)$ \u53ef\u4ee5\u6210\u4e3a\u8be2\u95ee $(p, x)$ \u5176\u4e2d\u4e00\u4e2a\u53ef\u884c $q$\uff0c\u5373\u4ec0\u4e48\u65f6\u5019\u4f1a\u9650\u5236\u8be2\u95ee $(p, x)$ \u7684 $f'_i$ \u589e\u957f\u3002\n\n\u9996\u5148\u7531 $f_p=\\min(f_{p-1} + 1, x)$\uff0c\u6211\u4eec\u4ee4 $x \\gets f_p$\uff0c\u90a3\u4e48\u5982\u679c\u6ca1\u6709\u9650\u5236\uff0c$f_p\\sim f_i$ \u5e94\u8be5\u4e3a $x, x+1, x+2, x+3, \\dots$\uff0c\u6240\u4ee5\u5f53 $x+i-p > a_i$ \u65f6\u4f1a\u4ea7\u751f\u5f71\u54cd\u3002\u79fb\u9879\u5f97 $x-p > a_i-i$\u3002\n\n\u4e8e\u662f\u6211\u4eec\u628a\u8be2\u95ee $(p, x)$ \u548c\u539f\u6570\u7ec4 $(i, a_i)$ \u6254\u5230\u4e00\u8d77\uff0c\u5bf9\u4e8e\u6240\u6709\u4e8c\u5143\u7ec4 $(p, x)$\uff0c\u4e0d\u59a8\u6309 $x - p$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u4e0d\u65ad\u52a0\u5165\u9650\u5236\uff0c\u67e5\u8be2\u65f6\u76f4\u63a5\u5728\u6240\u6709\u9650\u5236\u4e2d `upper_bound` \u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u8ba1\u7b97 $g_i$\uff0c\u5176\u5b9e\u4e5f\u53ef\u4ee5\u7528\u7c7b\u4f3c\u8ba1\u7b97\u8be2\u95ee\u7684\u65b9\u6cd5\uff0c\u627e\u5230\u4e00\u4e2a\u6700\u5c0f\u7684 $q(q>i)$\uff0c\u4f7f\u5f97 $f_q=a_q$\uff0c$g_i=g_q+S(q-i-1)+(q-i)\\times f_{i}$\u3002\n\n\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```plain\nsort ALL by (x - p)\nfor (p, x, op) in ALL\n    if op is ASK\n        q = upper_bound(p) in S\n        update(op)\n    else \n        q = upper_bound(p) in S\n        insert p into S\n        update(g[p])\n```\n\n```cpp\n// Problem: C2. Good Subarrays (Hard Version)\n// URL: https://codeforces.com/contest/1736/problem/C2\n// Group: Codeforces - Codeforces Round #825 (Div. 2)\n// Time: 2022-10-10 22:36\n// Author: lingfunny\n\n#include <bits/stdc++.h>\n#define LL long long\nusing namespace std;\nconst int mxn = 2e5 + 10;\nint q, n, a[mxn], m, f[mxn];\nLL S[mxn], res[mxn], pre[mxn], g[mxn];\n\nstruct ASK {\n\tint op, x, p;\n} ask[mxn * 2];\n\nsigned main() {\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; ++i) {\n\t\tscanf(\"%d\", a + i);\n\t\tf[i] = min(f[i - 1] + 1, a[i]);\n\t\tS[i] = S[i - 1] + i;\n\t\tpre[i] = pre[i - 1] + f[i];\n\t\task[++m] = { 0, a[i], i };\n\t}\n\tscanf(\"%d\", &q);\n\tfor (int i = 1; i <= q; ++i) {\n\t\tint p, x;\n\t\tscanf(\"%d%d\", &p, &x);\n\t\tx = min(x, f[p - 1] + 1);\n\t\task[++m] = { i, x, p };\n\t}\n\tsort(ask + 1, ask + m + 1, [&](const ASK &a, const ASK &b) {\n\t\tint wa = a.x - a.p, wb = b.x - b.p;\n\t\tif (wa == wb) return a.op > b.op;\n\t\telse return wa < wb;\n\t});\n\tset<int> ava = { n + 1 };\n\tfor (int i = 1; i <= m; ++i) {\n\t\tauto [op, x, p] = ask[i];\n\t\tif (!op) {\n\t\t\tq = *ava.upper_bound(p);\n\t\t\tg[p] = g[q] + S[q - p] + (LL)(q - p) * (a[p] - 1);\n\t\t\tava.insert(p);\n\t\t} else {\n\t\t\tq = *ava.upper_bound(p);\n\t\t\tres[op] = pre[p - 1] + S[q - p] + (LL)(q - p) * (x - 1) + g[q];\n\t\t}\n\t}\n\tfor (int i = 1; i <= m - n; ++i) printf(\"%lld\\n\", res[i]);\n\treturn 0;\n}\n```",
        "postTime": 1665618550,
        "uid": 280800,
        "name": "lingfunny",
        "ccfLevel": 7,
        "title": "CF1736C2 Good Subarrays (Hard Version)"
    },
    {
        "content": "## Description\n\n[link](https://www.luogu.com.cn/problem/CF1736C2)\n\n## Solution\n\n\u5148\u8003\u8651\u4e00\u4e0b C1 \u600e\u4e48\u505a\u3002\n\nC1 \u5c31\u662f\u8bbe $b_i=a_i-i$\uff0c\u5982\u679c\u533a\u95f4  $[l,r]$ \u6ee1\u8db3\u6761\u4ef6\uff0c\u90a3\u4e48 $\\min\\{b_l,b_{l+1},\\dots, b_r\\}+(l-1)\\geq 0$\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $l$ \u4e8c\u5206\u4e00\u4e0b $r$ \u5373\u53ef\u3002\n\n---\n\n\u7136\u540e\u601d\u8003\u600e\u4e48\u505a C2\u3002\n\n\u8bbe $res_i$ \u8868\u793a\u4ee5 $i$ \u4e3a\u5de6\u7aef\u70b9\uff0c\u53f3\u7aef\u70b9\u7684\u6700\u5927\u503c\uff0c\u6613\u77e5 $res_i$ \u662f\u5355\u8c03\u9012\u589e\u7684\u3002\n\n\u5982\u679c $a_p=x$\uff0c\u5bf9\u7b54\u6848\u6ca1\u6709\u8d21\u732e\u3002\n\n\u5982\u679c $a_p<x$\uff0c\u90a3\u4e48\u6709\u4e00\u4e9b\u539f\u6765\u4e0d\u5408\u6cd5\u7684\u533a\u95f4\u4f1a\u53d8\u5f97\u5408\u6cd5\u3002\u5982\u679c $[l,r]$ \u539f\u6765\u4e0d\u5408\u6cd5\uff0c\u540e\u6765\u53d8\u5f97\u5408\u6cd5\uff0c\u5219 $\\min\\{b_l,\\dots,b_{p-1},x-p,b_{i+1},\\dots,b_r\\}+(l-1)\\geq 0\\space\\space(l\\leq p\\leq r)$\uff0c\u8fd9\u5c31\u610f\u5473\u7740 $p=res_l+1$ \u4e14 $x-p\\geq -(l-1)$\u3002\n\n\u7531\u4e8e\u8fd9\u6837\u7684 $l$ \u662f\u8fde\u7eed\u7684\uff0c\u6240\u4ee5\u9884\u5904\u7406\u51fa $r_i$\uff0c\u8868\u793a\u628a $res_i$ \u53d8\u5f97\u53ef\u884c\u540e\u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u7136\u540e\u6c42\u51fa $r_i$ \u7684\u524d\u7f00\u548c\u5373\u53ef\u3002\n\n\u5982\u679c $a_p>x$\uff0c\u90a3\u4e48\u6709\u4e00\u4e9b\u539f\u6765\u5408\u6cd5\u7684\u533a\u95f4\u4f1a\u53d8\u5f97\u4e0d\u5408\u6cd5\u3002\u5982\u679c $[l,r]$ \u539f\u6765\u5408\u6cd5\uff0c\u540e\u6765\u53d8\u5f97\u4e0d\u5408\u6cd5\uff0c\u5219 $\\min\\{b_l,\\dots,b_{p-1},x-p,b_{i+1},\\dots,b_r\\}+(l-1)< 0\\space\\space(l\\leq p\\leq r)$\uff0c\u90a3\u4e48 $p\\leq res_l$ \u4e14 $x-p<-(l-1)$\u3002\n\n\u90a3\u4e48 $l$ \u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5c31\u662f $-(res_l-p+1)$\uff0c\u7136\u540e\u6c42\u51fa $res_i$ \u7684\u524d\u7f00\u548c\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O((n+q)\\log n)$\u3002\n\n## Code\n\n```cpp\n#include <bits/stdc++.h>\n\n#define int long long\n\nusing namespace std;\n\nconst int kMaxN = 2e5 + 5;\n\nint n, q;\nint a[kMaxN], b[kMaxN], f[kMaxN][20], lg[kMaxN], res[kMaxN], rr[kMaxN], k[kMaxN];\nint sumr[kMaxN], sumres[kMaxN];\n\nvoid prework() {\n  lg[0] = -1;\n  for (int i = 1; i <= n; ++i) {\n    lg[i] = lg[i >> 1] + 1;\n    f[i][0] = b[i];\n  }\n  for (int i = 1; i <= lg[n]; ++i) {\n    for (int j = 1; j + (1 << i) - 1 <= n; ++j) {\n      f[j][i] = min(f[j][i - 1], f[j + (1 << i - 1)][i - 1]);\n    }\n  }\n}\n\nint query(int l, int r) {\n  int k = lg[r - l + 1];\n  return min(f[l][k], f[r - (1 << k) + 1][k]);\n}\n\nvoid solve() {\n  cin >> n;\n  for (int i = 1; i <= n; ++i) {\n    cin >> a[i];\n    b[i] = a[i] - i;\n  }\n  prework();\n  long long ans = 0;\n  for (int i = 1; i <= n; ++i) {\n    int L = i - 1, R = n + 1;\n    res[i] = i;\n    while (L + 1 < R) {\n      int mid = (L + R) >> 1;\n      if (query(i, mid) + (i - 1) >= 0) L = res[i] = mid;\n      else R = mid;\n    }\n    ans += res[i] - i + 1;\n    L = res[i] + 1, R = n + 1;\n    if (res[i] < n) rr[i] = 1;\n    while (L + 1 < R) {\n      int mid = (L + R) >> 1;\n      if (query(res[i] + 2, mid) + (i - 1) >= 0) L = mid, rr[i] = mid - res[i];\n      else R = mid;\n    }\n    // if(res[i] < n)cerr << res[i] << ' ' << query(res[i] + 2, n) + (i - 1) << '\\n';\n    sumr[i] = sumr[i - 1] + rr[i];\n    sumres[i] = sumres[i - 1] + res[i];\n    assert(res[i] >= res[i - 1]);\n  }\n  // for (int i = 1; i <= n; ++i) {\n  //   cerr << res[i] << ' ';\n  // }\n  res[n + 1] = 1e9;\n  cin >> q;\n  for (int cs = 1; cs <= q; ++cs) {\n    int i, x;\n    cin >> i >> x;\n    // cerr << i << ' ' << x << ' ' << q << '\\n';\n    if (a[i] < x) {\n      int resl = lower_bound(res + 1, res + 2 + n, i - 1) - res;\n      int resr = lower_bound(res + 1, res + 2 + n, i) - res - 1;\n      resl = max(resl, i - x + 1);\n      resr = min(resr, i);\n      if (resl > resr || res[resl] != i - 1) cout << ans << '\\n';\n      else cout << ans + sumr[resr] - sumr[resl - 1] << '\\n';\n    } else if (a[i] == x) {\n      cout << ans << '\\n';\n    } else {\n      int resl = lower_bound(res + 1, res + 2 + n, i) - res;\n      int resr = i;\n      resr = min(resr, i - x);\n      if (resl > resr) cout << ans << '\\n';\n      else cout << ans - (sumres[resr] - sumres[resl - 1] - (i - 1) * (resr - resl + 1)) << '\\n';\n    }\n  }\n}\n\nsigned main() {\n#ifdef ORZXKR\n  freopen(\"in.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n#endif\n  ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n  int T = 1;\n  while (T--) solve();\n  return 0;\n}\n```",
        "postTime": 1674640645,
        "uid": 176843,
        "name": "Scarab",
        "ccfLevel": 0,
        "title": "CF1736C2 Good Subarrays (Hard Version) \u9898\u89e3"
    }
]