[
    {
        "content": "## CF1614E\n### \u9898\u610f\u7b80\u8ff0\n- \u6709 $n$ \u5929\uff0c\u6bcf\u5929\u6709\u4e00\u4e2a\u6e29\u5ea6 $T_i$\u3002\n- \u8bbe\u5f53\u5929\u5c4b\u5185\u7684\u6e29\u5ea6\u4e3a $P$\uff0c\u5219\u5728\u6bcf\u5929\u6e29\u5ea6\u4f1a\u53d1\u751f\u5982\u4e0b\u53d8\u5316\uff1a\n\n$$P=\\left\\{\n\\begin{aligned}\nP+1 & & {P < T_i}\\\\\nP-1 & & {P > T_i}\\\\\nP & & {P = T_i}\n\\end{aligned}\n\\right.\n$$\n\n- \u6bcf\u5929\u6709 $k_i$ \u4e2a\u8be2\u95ee\uff0c\u95ee\u4f60\u5982\u679c\u7b2c\u4e00\u5929\u65e9\u4e0a\u5c4b\u5185\u7684\u6e29\u5ea6\u4e3a $t_{i,j}$\uff0c\u5219\u5230\u73b0\u5728\u5c4b\u5185\u7684\u6e29\u5ea6\u662f\u591a\u5c11\u3002\n- $1 \\leq n,\\sum k_i \\leq 2 \\times 10^5,0 \\leq T_i,x_i \\leq 10^9$\u3002\n- \u5f3a\u5236\u5728\u7ebf\u3002\n\n### \u5206\u6790\n\u672c\u9898\u6709\u4e00\u79cd\u7ebf\u6bb5\u6811\u4e8c\u5206\u7684\u505a\u6cd5\uff0c\u53ef\u4ee5\u53c2\u89c1\u5176\u4ed6\u9898\u89e3\u3002\n\n\u8fd9\u91cc\u4ecb\u7ecd\u53e6\u4e00\u79cd\u505a\u6cd5\uff1a\u76f4\u63a5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u539f\u6765\u6e29\u5ea6\u5728\u533a\u95f4 $[l,r]$ \u65f6\u5b9e\u9645\u6e29\u5ea6\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u3002\n\n\u5728\u66f4\u65b0\u4e00\u4e2a $T_i$ \u65f6\uff0c\u6211\u4eec\u8ba8\u8bba\u5f53\u524d\u8282\u70b9\u7ef4\u62a4\u7684\u4fe1\u606f\u4e0e $T_i$ \u7684\u5173\u7cfb\u3002\n\n\u5047\u8bbe $tree[rt].max<T_i$\uff1a\u76f4\u63a5\u5bf9 $rt$ \u7ef4\u62a4\u7684\u533a\u95f4\u8fdb\u884c\u533a\u95f4\u52a0 $1$ \u7684\u64cd\u4f5c\u5373\u53ef\u3002\n\n\u5047\u8bbe $tree[rt].min>T_i$\uff1a\u76f4\u63a5\u5bf9 $rt$ \u7ef4\u62a4\u7684\u533a\u95f4\u8fdb\u884c\u533a\u95f4\u51cf $1$ \u7684\u64cd\u4f5c\u5373\u53ef\u3002\n\n\u5047\u8bbe $tree[rt].max=tree[rt].min=T_i$\uff1a\u76f4\u63a5\u8fd4\u56de\u5373\u53ef\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u4e0a\u8ff0\u4e09\u79cd\u60c5\u51b5\u5df2\u7ecf\u8986\u76d6\u4e86\u6240\u6709\u8282\u70b9\u3002\n\n\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u52a8\u6001\u5f00\u70b9\uff0c\u6309\u4e0a\u8ff0\u65b9\u5f0f\u7ef4\u62a4\u5373\u53ef\u3002\n\nCode\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconstexpr int mod=1e9+1; \nint n,tot;\nstruct SegmentTree\n{\n\tint ls,rs,mx,mn,laz;\n\t#define ls(i) tree[i].ls\n\t#define rs(i) tree[i].rs\n\t#define mx(i) tree[i].mx\n\t#define mn(i) tree[i].mn\n\t#define laz(i) tree[i].laz\n}tree[30000010];\ninline int New(int mn,int mx){tree[++tot]=(SegmentTree){0,0,mx,mn,0};return tot;}\ninline void pushup(int rt)\n{\n\tmx(rt)=max(mx(ls(rt)),mx(rs(rt)));\n\tmn(rt)=min(mn(ls(rt)),mn(rs(rt)));\n}\ninline void pushdown(int rt)\n{\n\tif(!laz(rt))return;\n\tint l=ls(rt),r=rs(rt);\n\tmx(l)+=laz(rt),mn(l)+=laz(rt),laz(l)+=laz(rt);\n\tmx(r)+=laz(rt),mn(r)+=laz(rt),laz(r)+=laz(rt);\n\tlaz(rt)=0; \n}\ninline void upd(int rt,int l,int r,int op)\n{\n\tif(mx(rt)<op){mx(rt)++,mn(rt)++,laz(rt)++;return;}\n\tif(mn(rt)>op){mx(rt)--,mn(rt)--,laz(rt)--;return;}\n\tif(mx(rt)==op&&mn(rt)==op)return;\n\tint mid=(l+r)>>1;\n\tif(!ls(rt))ls(rt)=New(l,mid);\n\tif(!rs(rt))rs(rt)=New(mid+1,r);\n\tpushdown(rt);\n\tupd(ls(rt),l,mid,op),upd(rs(rt),mid+1,r,op);\n\tpushup(rt);\n}\ninline int query(int rt,int l,int r,int t)\n{\n\tif(l==t&&r==t){return mx(rt);}\n\tint mid=(l+r)>>1;\n\tif(!ls(rt))ls(rt)=New(l,mid);\n\tif(!rs(rt))rs(rt)=New(mid+1,r);\n\tpushdown(rt);\n\tif(t<=mid)return query(ls(rt),l,mid,t);\n\treturn query(rs(rt),mid+1,r,t);\n}\ntemplate<typename T>inline void read(T &x) \n{\n\tx=0;int f=1;char c=getchar();\n\tfor(;!isdigit(c);c=getchar())if(c=='-')f=-1;\n\tfor(;isdigit(c);c=getchar())x=(x<<1)+(x<<3)+(c^48);\n\tx*=f;\n}\nint main()\n{\n\tread(n);\n\tint lst=0,rt=New(0,mod-1);\n\twhile(n--)\n\t{\n\t\tint t,k,x;\n\t\tread(t);read(k);\n\t\tupd(1,0,mod-1,t);\n\t\tfor(int i=1;i<=k;i++)\n\t\t{\n\t\t\tread(x);x=(x+lst)%mod;\n\t\t\tlst=query(1,0,mod-1,x);\n\t\t\tprintf(\"%d\\n\",lst);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1638515237,
        "uid": 333574,
        "name": "Tyyyyyy",
        "ccfLevel": 7,
        "title": "CF1614E\u9898\u89e3"
    },
    {
        "content": "~~\u4e2a\u4eba\u8ba4\u4e3a\u8fd9\u573a E \u6bd4 C \u7b80\u5355\uff0c\u4f46\u8fd8\u662f\u592a\u83dc\u4e86\uff0c\u6ca1\u505a\u51fa\u6765~~\n\n\u8003\u8651\u7ef4\u62a4\u6bcf\u6b21\u63d2\u5165\u4e00\u4e2a\u6c14\u6e29\u540e\uff0c\u6240\u6709\u521d\u59cb\u7684\u5ba4\u6e29\u53d8\u5316\u540e\u7684\u7ed3\u679c\u3002\u5176\u663e\u7136\u5355\u8c03\u4e0d\u51cf\u3002\u5efa\u4e00\u68f5 $[-1,MaxT+1]$ \uff08\u89c4\u907f\u8fb9\u754c\u7279\u5224\uff09\u8303\u56f4\u7684\u52a8\u6001\u5f00\u70b9\u503c\u57df\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e4b\u3002\n\n\u6bcf\u6b21\u63d2\u5165\u4e00\u4e2a\u6c14\u6e29 $T_i$ \u540e\uff0c\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u4ee5\u5f97\u5230\u53d8\u5316\u540e\u7684\u5ba4\u6e29\u4e3a $T_i$ \u7684\u533a\u95f4 $[l,r]$\uff0c\u4e4b\u540e $[-1,l)$ \u533a\u95f4 $+1$\uff0c$(r,MaxT+1]$ \u533a\u95f4 $-1$ \u5373\u53ef\u3002\n\n~~\u8d5b\u65f6\u6ca1 A \u662f\u8fb9\u754c\u95ee\u9898~~\n\n\u9644\u4e0a~~\u6781\u5176\u4e11\u964b\u7684~~\u4fee\u6539\u540e\u8d5b\u65f6\u4ee3\u7801\uff1a\n\n```cpp\nll T,tp,k,x,lans;\ncst ll lim=12000005;\ncst ll ar=1000000001;\ncst ll ra=-1;\nint del[lim],led[lim],tg[lim],ls[lim],rs[lim],cnt;\nil int newp(int l,int r)\n{++cnt;ls[cnt]=rs[cnt]=tg[cnt]=0;del[cnt]=r;led[cnt]=l;ret cnt;}\nil void pushup(int i){del[i]=del[rs[i]];led[i]=led[ls[i]];}\nil void pushdown(int i,int l,int r)\n{\n\tll mid=(l+r)>>1;\n\tif(!ls[i])ls[i]=newp(l,mid);\n\tif(!rs[i])rs[i]=newp(mid+1,r);\n\tdel[ls[i]]+=tg[i],del[rs[i]]+=tg[i];\n\tled[ls[i]]+=tg[i],led[rs[i]]+=tg[i];\n\ttg[ls[i]]+=tg[i],tg[rs[i]]+=tg[i];\n\ttg[i]=0;\n}\nil void modify(int lt,int rt,int x,int i=1,int l=ra,int r=ar)\n{\n\tif(l>r||l>rt||r<lt)ret;\n\tif(l>=lt&&r<=rt)ret del[i]+=x,led[i]+=x,tg[i]+=x,void();\n\tpushdown(i,l,r);ll mid=(l+r)>>1;\n\tif(lt<=mid)modify(lt,rt,x,ls[i],l,mid);\n\tif(rt>mid)modify(lt,rt,x,rs[i],mid+1,r);\n\tpushup(i);\n}\nil ll query(int p,int i=1,int l=ra,int r=ar)\n{\n\tif(l>r||l>p||r<p)ret 0;\n\tif(l==p&&r==p)ret del[i];\n\tpushdown(i,l,r);ll mid=(l+r)>>1,res;\n\tif(p<=mid)res=query(p,ls[i],l,mid);\n\telse res=query(p,rs[i],mid+1,r);\n\tpushup(i);ret res;\n}\nil ll getpos(int v,int i=1,int l=ra,int r=ar)\n{\n\tif(l==r)ret l;\n\tpushdown(i,l,r);ll mid=(l+r)>>1,res;\n\tif(del[ls[i]]>=v)res=getpos(v,ls[i],l,mid);\n\telse res=getpos(v,rs[i],mid+1,r);\n\tpushup(i);ret res;\n}\nil ll getpo5(int v,int i=1,int l=ra,int r=ar)\n{\n\tif(l==r)ret r;\n\tpushdown(i,l,r);ll mid=(l+r)>>1,res;\n\tif(led[rs[i]]<=v)res=getpo5(v,rs[i],mid+1,r);\n\telse res=getpo5(v,ls[i],l,mid);\n\tpushup(i);ret res;\n}\ncst ll ycz=1000000001;\nint main()\n{\n\tT=rd();newp(0,ar);//cerr<<sizeof(del)/1048576.0*5<<endl;\n\tfor(int cD=1;cD<=T;++cD)\n\t{\n\t\ttp=rd();cst ll pos=getpos(tp),po5=getpo5(tp);\n\t\tmodify(ra,pos-1,1);modify(po5+1,ar,-1);\n\t\tk=rd();\n\t\twhile(k --> 0)\n\t\t{\n\t\t\tx=(lans+rd())%ycz;lans=query(x);\n\t\t\tprt(lans);\n\t\t}\n\t}\n\tret 0;\n}\n```",
        "postTime": 1638082855,
        "uid": 224991,
        "name": "Presentation_Emitter",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1614E \u3010Divan and a Cottage\u3011"
    },
    {
        "content": "\u5728\u6b64\u4e4b\u524d\uff0c\u6211\u4e00\u76f4\u4ee5\u4e3a\u7ebf\u6bb5\u6811\u5fc5\u987b\u8981\u4ece $0$ \u5f00\u5230 $10^9$\u3002\n\n\u5728\u8fd9\u91cc\u8bbe $ans_i$ \u4e3a\u521d\u59cb\u6e29\u5ea6\u4e3a $i$ \u5ea6\u65f6\u7684\u6700\u7ec8\u6e29\u5ea6\u3002\n\n\u9996\u5148\u6709\u4e24\u4e2a\u5f15\u7406\uff1a\n\n\u5f15\u7406\u4e00\uff1a\n\n> \u82e5 $i<j$\uff0c\u5219 $ans_i\\le ans_j$\n\n\u5f15\u7406\u4e00\u5f88\u5bb9\u6613\u8bc1\u660e\uff0c\u5047\u8bbe $ans_i>ans_j$\uff0c\u7531\u4e8e\u7b54\u6848\u6bcf\u6b21\u6700\u591a\u53d8\u5316 $1$\uff0c\u90a3\u4e48\u5fc5\u5b9a\u6709\u4e00\u4e2a\u65f6\u523b\u662f $ans_i=ans_j$\uff0c\u90a3\u4e48 $ans_i$ \u8981\u4e0a\u5347\uff0c$ans_j$ \u8981\u4e0b\u964d\uff0c\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\u3002\n\n\u5f15\u7406\u4e8c\uff1a\n\n> \u5bf9\u4e8e\u4efb\u610f\u7684 $[l,r]$\uff0c$ans_l,ans_{l+1},\u2026\u2026ans_r$ \u59cb\u7ec8\u5f62\u6210\u4e00\u6bb5\u8fde\u7eed\u7684\u533a\u95f4\u3002\n\n\u5f15\u7406\u4e8c\u53ef\u4ee5\u901a\u8fc7\u6570\u5b66\u5f52\u7eb3\u6cd5\u8bc1\uff1a\u5047\u8bbe\u521d\u59cb\u6e29\u5ea6\u5728 $[l,r]$ \u5185\u7684\u6700\u7ec8\u6e29\u5ea6\u8303\u56f4\u5f62\u6210\u4e86\u4e00\u6bb5\u533a\u95f4 $[l',r']$\uff0c\u90a3\u4e48\u4f1a\u6709\u4e94\u79cd\u60c5\u51b5\uff1a\n\n\uff08$l'=r'$ \u7684\u60c5\u51b5\u8fd9\u91cc\u4e0d\u518d\u9610\u8ff0\uff09\n\n$1$\u3001$[l'+1,r'+1]$\uff08$T>r'$\uff09\n\n$2$\u3001$[l'-1,r'-1]$\uff08$T<l'$\uff09\n\n$3$\u3001$[l',r'-1]$\uff08$T=l'$\uff09\n\n$4$\u3001$[l'+1,r']$\uff08$T=r'$\uff09\n\n$5$\u3001$[l'+1,r'-1]$\uff08$l'<T<r'$\uff09\n\n\u4f1a\u53d1\u73b0\u8fd9 $5$ \u79cd\u60c5\u51b5\u7684\u6700\u7ec8\u6e29\u5ea6\u8303\u56f4\u4ecd\u4f1a\u5f62\u6210\u4e00\u4e2a\u533a\u95f4\u3002\n\n\u7531\u4e8e\u521d\u59cb\u72b6\u6001\u4e0b $[0,10^9]$ \u662f\u4e00\u6bb5\u533a\u95f4\uff0c\u6240\u4ee5\u65e0\u8bba\u5982\u4f55\u53d8\u5316\u7b54\u6848\u8303\u56f4\u59cb\u7ec8\u662f\u4e00\u6bb5\u533a\u95f4\u3002\n\n\u7136\u540e\u6211\u4eec\u9700\u8981\u652f\u6301\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\n$1$\u3001\u5c06\u6240\u6709\u7684 $ans_x<T$ \u52a0\u4e00\u3002\n\n$2$\u3001\u5c06\u6240\u6709\u7684 $ans_x>T$ \u51cf\u4e00\u3002\n\n$3$\u3001\u67e5\u8be2 $ans_x$\u3002\n\n\u524d\u4e24\u4e2a\u64cd\u4f5c\u90fd\u9700\u8981\u627e\u5230\u6700\u503c\u7684 $x$\u3002\n\n\u6839\u636e\u5f15\u7406\u4e00\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7ebf\u6bb5\u6811\u4e8c\u5206\uff08\u540c\u65f6\u9700\u8981\u6ce8\u610f\u8fb9\u754c\u95ee\u9898\uff09\u3002\n\n\u7531\u4e8e\u533a\u95f4\u957f\u5ea6\u4e3a $10^9+1$\uff0c\u4e0d\u80fd\u76f4\u63a5\u5f00\u7ebf\u6bb5\u6811\u505a\uff0c\u540c\u65f6\u53c8\u56e0\u4e3a\u8fd9\u9898\u5f3a\u5236\u5728\u7ebf\uff0c\u53c8\u4e0d\u80fd\u79bb\u6563\u5316\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u52a8\u6001\u5f00\u70b9\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ea\u6709\u5728\u771f\u6b63\u8fdb\u884c\u4fee\u6539\u548c\u67e5\u8be2\u8fd9\u4e2a\u8282\u70b9\u7684\u65f6\u5019\uff0c\u6211\u4eec\u624d\u53bb\u5f00\u8fd9\u4e00\u4e2a\u8282\u70b9\u3002\n\n\u8fd9\u4e2a\u5176\u5b9e\u5f88\u597d\u529e\uff0c\u5728 pushdown \u7684\u65f6\u5019\u5982\u679c\u8fd9\u4e2a\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u90a3\u4e48\u5b83\u5fc5\u7136\u9700\u8981\u65b0\u5f00\u4e24\u4e2a\u8282\u70b9\u4f5c\u4e3a\u5b83\u7684\u4e24\u4e2a\u513f\u5b50\u3002\n\n\u8bbe $maxn_x$ \u548c $minn_x$ \u5206\u522b\u4e3a\u8fd9\u4e2a\u8282\u70b9\u6240\u5b58\u50a8\u7684\u6240\u6709 $ans$ \u503c\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u5e76\u8bbe $mid=\\left\\lfloor \\dfrac{maxn_x+minn_x}{2}\\right\\rfloor$\u3002\n\n\u6839\u636e\u5f15\u7406\u4e8c\uff0c\u8fd9\u4e24\u4e2a\u513f\u5b50\u7684 $minn,maxn$ \u503c\u5206\u522b\u4e3a\uff1a$minn_x,mid,mid+1,maxn_x$\u3002\n\n\u7531\u4e8e\u8282\u70b9\u6570\u91cf\u6bd4\u8f83\u7384\u5b66\uff0c\u6240\u4ee5\u8981\u5728\u4e0d MLE \u7684\u60c5\u51b5\u4e0b\u5c3d\u91cf\u5f00\u5927\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n\\log T)$\n# AC code\n```cpp\nconst int num=1e7;\nint ls[num],rs[num],maxn[num],minn[num],tot,lazy[num];\ninline void addnode(int &x,int l,int r){x=++tot,minn[x]=l,maxn[x]=r;}\ninline void pushup(int x){minn[x]=min(minn[ls[x]],minn[rs[x]]),maxn[x]=max(maxn[ls[x]],maxn[rs[x]]);}\ninline void pushdown(int x){\n\tif(!ls[x]){\n\t\tint mid=minn[x]+maxn[x]>>1;\n\t\taddnode(ls[x],minn[x],mid),addnode(rs[x],mid+1,maxn[x]);\n\t}\n\telse minn[ls[x]]+=lazy[x],maxn[ls[x]]+=lazy[x],minn[rs[x]]+=lazy[x],maxn[rs[x]]+=lazy[x],lazy[ls[x]]+=lazy[x],lazy[rs[x]]+=lazy[x];lazy[x]=0;\n}\nvoid modify(int x,int l,int r,int l1,int r1,int v){\n\tif(l>r) return ;\n\tif(l<=l1&&r1<=r){maxn[x]+=v,minn[x]+=v,lazy[x]+=v;return ;}\n\tpushdown(x);\n\tint mid=l1+r1>>1;\n\tif(l<=mid) modify(ls[x],l,r,l1,mid,v);\n\tif(mid<r) modify(rs[x],l,r,mid+1,r1,v);\n\tpushup(x);\n}\nint ql(int x,int l,int r,int v){\n\tif(l==r) return l;\n\tpushdown(x);\n\tint mid=l+r>>1;\n\tif(maxn[ls[x]]>v) return ql(ls[x],l,mid,v);\n\treturn ql(rs[x],mid+1,r,v);\n}\nint qr(int x,int l,int r,int v){\n\tif(l==r) return l;\n\tpushdown(x);\n\tint mid=l+r>>1;\n\tif(minn[rs[x]]<v) return qr(rs[x],mid+1,r,v);\n\treturn qr(ls[x],l,mid,v);\n}\nint query(int x,int l,int r,int pos){\n\tif(l==r) return maxn[x];\n\tpushdown(x);\n\tint mid=l+r>>1;\n\tif(pos<=mid) return query(ls[x],l,mid,pos);\n\treturn query(rs[x],mid+1,r,pos);\n}\nint main(){\n\tint n=read(n),lstans=0,rt;\n\taddnode(rt,0,1e9);\n\twhile(n--){\n\t\tint t=read(t),k=read(k);\n\t\tif(minn[1]<t) modify(1,0,qr(1,0,1e9,t),0,1e9,1);\n\t\tif(maxn[1]>t) modify(1,ql(1,0,1e9,t),1e9,0,1e9,-1);\n\t\twhile(k--){\n\t\t\tint x=(read(x)+lstans)%inf;print(lstans=query(1,0,1e9,x)),enter;\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1638078205,
        "uid": 80614,
        "name": "ZCPB",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1614E"
    },
    {
        "content": "\u7b80\u8981\u9898\u610f\uff1a\n\n> \u7ed9\u5b9a\u4e00\u4e2a\u7528\u6574\u6570\u8868\u793a\u7684\u64cd\u4f5c\u5e8f\u5217 $A=\\{T_i\\}$\uff0c\u64cd\u4f5c $T_i$ \u4f5c\u7528\u5728 $x$ \u4e0a\u65f6\uff0c\u4f1a\u4f7f\u5f97 $x$ \u5411 $T_i$ \u9760\u8fd1\u4e00\u4f4d\u3002\u5177\u4f53\u5730\uff0c\u82e5 $x<T_i$\uff0c\u5219 $x\\rightarrow x+1$\uff0c\u82e5 $x>T_i$\uff0c\u5219 $x\\rightarrow x-1$\uff0c\u5426\u5219 $x$ \u4e0d\u53d8\u3002\u6211\u4eec\u8bb0 $f_A(x)$ \u8868\u793a $x$ \u4f9d\u6b21\u88ab $A$ \u4e2d\u6240\u6709\u64cd\u4f5c\u4f5c\u7528\u540e\u7684\u7ed3\u679c\u3002\u5171\u6709 $n$ \u6b21\u67e5\u8be2\uff0c\u7b2c $i$ \u6b21\u4f1a\u5728 $A$ \u4e2d `push_back` \u4e00\u4e2a\u65b0\u7684 $T_i$\uff0c\u5e76\u8fdb\u884c $k_i$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u51fa\u4e00\u4e2a $x$\uff0c\u6c42 $f_A(x)$ \u7684\u503c\u3002\u6570\u636e\u8303\u56f4\u89c1\u539f\u9898\u9762\u3002\n\n\u7528 $[0,maxV]$ \u7684\u52a8\u6001\u5f00\u70b9\u6743\u503c\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4 $f_A(x)$\u3002\u8003\u8651\u5bf9 $A$ `push_back` \u4e00\u4e2a $T$ \u65f6\uff0c\u5404 $f_A(x)$ \u5c06\u5982\u4f55\u53d8\u5316\uff1a\u5bf9\u4e8e $f_A(x)<T$ \u7684\uff0c\u6211\u4eec\u4ee4 $f_A(x)\\rightarrow f_A(x)+1$\uff0c\u5927\u4e8e $T$ \u7684\u60c5\u51b5\u540c\u7406\u3002\u6211\u4eec\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u5f15\u7406\uff1a\n\n**Lemma.** $f_A(x)$ \u5173\u4e8e $x$ \u5355\u8c03\u4e0d\u964d\u3002  \n\u8bc1\u660e\uff1a\u5bf9\u4e8e $y<x$\uff0c\u5982\u679c $T_i\\le x$\uff0c\u90a3\u4e48 $T_i$ \u4f5c\u7528\u5728 $y$ \u4e0a\u4e4b\u540e $y$ \u4f9d\u7136\u4e0d\u8d85\u8fc7 $x$\u3002\u800c\u5982\u679c $T_i>x$\uff0c\u90a3\u4e48 $x,y$ \u4f1a\u540c\u65f6\u589e\u52a0\u3002\u56e0\u6b64\u4efb\u610f\u4e00\u6b21\u64cd\u4f5c\u90fd\u4e0d\u53ef\u80fd\u4f7f\u5f97\u5f53\u524d\u5c0f\u7684\u6570\u53cd\u8d85\u5f53\u524d\u5927\u7684\u6570\uff0c\u5f97\u8bc1\u3002\n\n\u6839\u636e\u5982\u4e0a\u7684\u5f15\u7406\uff0c\u6ee1\u8db3 $f_A(x)<T$ \u548c $f_A(x)>T$ \u7684\u5206\u522b\u662f\u4e00\u6bb5\u524d\u7f00\u548c\u540e\u7f00\u3002\u901a\u8fc7\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u627e\u51fa\u5bf9\u5e94\u7684\u524d\u7f00\u548c\u540e\u7f00\uff0c\u533a\u95f4\u52a0\u5373\u53ef\u7ef4\u62a4\u3002\u8be2\u95ee $f_A(x)$ \u5c31\u662f\u5355\u70b9\u67e5\u8be2\u3002\n\n\u7531\u4e8e\u6211\u7684\u5b9e\u73b0\u4e0d\u4f18\u7f8e\uff0c\u9700\u8981\u7279\u5224\uff08\u4ee3\u7801\u4e2d\u4f1a\u8bf4\u660e\uff09\u3002~~\u8d5b\u65f6\u4e5f\u56e0\u4e3a\u8fd9\u4e2a\u7279\u5224\u9519\u5931\u4e86 $E$ \u9898\u8fd8\u5403\u4e86\u4e00\u5806\u7f5a\u65f6\u3002~~ \u4f46\u662f\u8fd9\u4e2a\u7279\u5224\u6211\u89c9\u5f97\u662f\u53ef\u4ee5 `hack` \u7684\uff1a\u53ea\u9700\u8981\u6784\u9020\u6070\u597d\u9700\u8981\u628a $f_A(0)$ \u52a0\u4e00\u7684\u6570\u636e\u5373\u53ef\u3002\u4e0d\u77e5\u9053\u4e3a\u5565\u6ca1\u6709\u4eba\u5361\u8fd9\u4e2a\u3002\u5982\u679c\u89c9\u5f97\u4e0d\u4fdd\u9669\u53ef\u4ee5\u6bcf\u6b21\u5355\u70b9\u67e5\u8be2\u4e00\u4e0b $f_A(0)$ \u548c $f_A(maxV)$ \u8fdb\u4e00\u6b65\u7279\u5224\uff0c\u8fd9\u6837\u6b63\u786e\u6027\u5c31\u4e00\u5b9a\u4e0d\u4f1a\u6709\u95ee\u9898\u3002\n\nupd : \u5df2\u7ecf\u88ab hack \u4e86\uff0c\u56e0\u6b64\u4ee3\u7801\u5df2\u7ecf\u52a0\u4e0a\u4e86\u4e0a\u8ff0\u7684\u7279\u5224\u3002\n\n\u6ce8\u610f\uff1a\u7531\u4e8e\u5386\u53f2\u9057\u7559\u95ee\u9898\uff0c\u8bf7\u6ce8\u610f\u4ee3\u7801\u4e2d\u7684\u6ce8\u91ca ``` mod - 1 \u662f maxV, md \u624d\u662f\u771f\u6b63\u7684\u6a21\u6570\u3002```\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nnamespace io {\n#define BUFS 100000\n\tchar in[BUFS], *p = in, *pp = in;\n#define gc (p == pp && (pp = (p = in) + fread(in, 1, BUFS, stdin), p == pp) ? EOF : *p++)\n\tinline int read() {\n\t\tint x = 0; char ch, f = 0;\n\t\twhile (!isdigit(ch = gc)) f |= ch == '-';\n\t\twhile (isdigit(ch)) x = (x << 1) + (x << 3) + (ch ^ 48), ch = gc;\n\t\treturn f ? -x : x;\n\t}\n}\n#define rd io :: read\nconst int N = 2e5 + 10, mod = 2e9 + 1, md = 1e9 + 1; // mod - 1 \u662f maxV, md \u624d\u662f\u771f\u6b63\u7684\u6a21\u6570\u3002\nint n, t[N], ptr;\nstruct Node {\n\tint mi, mx, tag, ls, rs;\n} seg[10000010];\ninline void pushup(int k) {\n\tseg[k].mi = min(seg[seg[k].ls].mi, seg[seg[k].rs].mi);\n\tseg[k].mx = max(seg[seg[k].ls].mx, seg[seg[k].rs].mx);\n}\ninline void pushdown(int k, int l, int r) {\n\tif (seg[k].tag) {\n\t\tint mid = (long long)l + r >> 1;\n\t\tif (!seg[k].ls) seg[k].ls = ++ptr, seg[ptr].mi = l, seg[ptr].mx = mid;\n\t\tif (!seg[k].rs) seg[k].rs = ++ptr, seg[ptr].mi = mid + 1, seg[ptr].mx = r;\n\t\tseg[seg[k].ls].mx += seg[k].tag, seg[seg[k].ls].mi += seg[k].tag, seg[seg[k].ls].tag += seg[k].tag;\n\t\tseg[seg[k].rs].mx += seg[k].tag, seg[seg[k].rs].mi += seg[k].tag, seg[seg[k].rs].tag += seg[k].tag;\n\t\tseg[k].tag = 0;\n\t}\n}\nvoid modify(int&k, int l, int r, int ql, int qr, int v) {\n\tif (!k) k = ++ptr, seg[k].mi = l, seg[k].mx = r;\n\tif (ql <= l && r <= qr) {\n\t\tseg[k].mi += v, seg[k].mx += v, seg[k].tag += v;\n\t\treturn ;\n\t}\n\tint mid = (long long)l + r >> 1;\n\tpushdown(k, l, r);\n\tif (ql <= mid) modify(seg[k].ls, l, mid, ql, qr, v);\n\tif (mid  < qr) modify(seg[k].rs, mid + 1, r, ql, qr, v);\n\tpushup(k);\n}\nint query1(int k, int l, int r, int v) {\n\tif (l == r || seg[k].mi == seg[k].mx && seg[k].mi < v) return r;\n\tint mid = (long long)l + r >> 1;\n\tif (!seg[k].ls) seg[k].ls = ++ptr, seg[ptr].mi = l, seg[ptr].mx = mid;\n\tif (!seg[k].rs) seg[k].rs = ++ptr, seg[ptr].mi = mid + 1, seg[ptr].mx = r;\n\tpushdown(k, l, r);\n\tif (seg[seg[k].rs].mi < v) return query1(seg[k].rs, mid + 1, r, v);\n\treturn query1(seg[k].ls, l, mid, v);\n}\nint query2(int k, int l, int r, int v) {\n\tif (seg[k].mi == seg[k].mx && seg[k].mx > v) return l;\n\tint mid = (long long)l + r >> 1;\n\tif (!seg[k].ls) seg[k].ls = ++ptr, seg[ptr].mi = l, seg[ptr].mx = mid;\n\tif (!seg[k].rs) seg[k].rs = ++ptr, seg[ptr].mi = mid + 1, seg[ptr].mx = r;\n\tpushdown(k, l, r);\n\tif (seg[seg[k].ls].mx > v) return query2(seg[k].ls, l, mid, v);\n\treturn query2(seg[k].rs, mid + 1, r, v);\n}\nint query(int k, int l, int r, int p) {\n\tif (l == r) return seg[k].mi;\n\tint mid = (long long)l + r >> 1;\n\tpushdown(k, l, r);\n\tif (!seg[k].ls) seg[k].ls = ++ptr, seg[ptr].mi = l, seg[ptr].mx = mid;\n\tif (!seg[k].rs) seg[k].rs = ++ptr, seg[ptr].mi = mid + 1, seg[ptr].mx = r;\n\treturn p <= mid ? query(seg[k].ls, l, mid, p) : query(seg[k].rs, mid + 1, r, p);\n}\nint main() {\n\tn = rd();\n\tint lstans = 0, root = ptr = 1;\n\tseg[1].mi = 0, seg[1].mx = mod - 1;\n\tfor (int i = 1; i <= n; ++i) {\n\t\tt[i] = rd();\n\t\tint L = query1(1, 0, mod - 1, t[i]);\n\t\tint R = query2(1, 0, mod - 1, t[i]);\n\t\tif (L) modify(root, 0, mod - 1, 0, L, 1);\n\t\tif (R < mod - 1) modify(root, 0, mod - 1, R, mod - 1, -1);\n        // \u4e0a\u9762\u4e24\u53e5\u5c31\u662f\u7279\u5224\uff0c\u56e0\u4e3a\u5982\u679c\u6ca1\u6709\u9700\u8981\u52a0\u7684\u6570\uff0c\u5219 L \u5c06\u8fd4\u56de 0\uff0c\u8fd9\u65f6\u533a\u95f4\u52a0 [0,L] \u5c31\u4f1a\u53d1\u751f\u9519\u8bef\uff0c0 \u88ab\u591a\u52a0\u4e86\u4e00\u6b21\u3002R \u7684\u7279\u5224\u540c\u7406\u3002\n                if (L == 0 && query(1, 0, mod - 1, L) < t[i]) modify(root, 0, mod - 1, 0, L, 1);\n\t\tif (R == mod - 1 && query(1, 0, mod - 1, R) > t[i]) modify(root, 0, mod - 1, R, mod - 1, -1);\n\t\tint k = rd();\n\t\tfor (int j = 1; j <= k; ++j) {\n\t\t\tint x = (rd() + lstans) % md;\n\t\t\tprintf(\"%d\\n\", lstans = query(1, 0, mod - 1, x) % md);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1638015902,
        "uid": 75765,
        "name": "Starlight237",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1614E \u3010Divan and a Cottage\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a $n$ \u5929\u7684\u6c14\u6e29 $T_i$\uff0c\u8bbe\u7b2c $i$ \u5929\u6e29\u5ea6\u4e3a $P$\uff0c\u5219\u7b2c $i+1$ \u5929\u7684\u6e29\u5ea6\u4e3a\uff1a\n\n* $P+1 ( P < T_i)$\n\n* $P-1 ( P >T_i)$\n\n* $P(P = T_i)$\n\n\u5bf9\u7b2c $i$ \u5929\u6709 $k_i$ \u4e2a\u8be2\u95ee\uff0c\u95ee\u82e5\u7b2c $0$ \u5929\u7684\u6e29\u5ea6\u4e3a $x$ \uff0c\u90a3\u4e48\u7b2c $i$ \u5929\u7684\u6e29\u5ea6\u662f\u591a\u5c11\u3002\n\n\u5f3a\u5236\u5728\u7ebf\u3002\n\n## \u89e3\u9898\u601d\u8def\n\n\u663e\u7136\uff0c\u6240\u6709\u521d\u59cb\u7684\u5ba4\u6e29\u53d8\u5316\u540e\u7684\u7ed3\u679c\u6ee1\u8db3\u5355\u8c03\u3002\n\n\u90a3\u7528\u4e00\u68f5\u52a8\u6001\u5f00\u70b9\u503c\u57df\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6240\u6709\u521d\u59cb\u7684\u5ba4\u6e29\u53d8\u5316\u540e\u7684\u7ed3\u679c\u5373\u53ef\u3002\n\n\u5177\u4f53\u5730\uff0c\u6bcf\u6b21\u63d2\u5165\u4e00\u4e2a\u6c14\u6e29 $T_i$ \u540e\uff0c\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u4ee5\u5f97\u5230\u53d8\u5316\u540e\u7684\u5ba4\u6e29\u4e3a $T_i$ \u7684\u533a\u95f4 $\\left[l,r\\right]$\uff0c\u4e4b\u540e $[-1,l)$ \u533a\u95f4 $+1$\uff0c$\\left(r,MaxT+1\\right]$ \u533a\u95f4 $-1$ \u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n \\log w)$\uff0c\u5176\u4e2d $w$ \u4e3a\u503c\u57df\u3002\n\n## CODE\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\ninline ll read()\n{\n    ll x = 0, f = 1;\n    char c = getchar();\n    while ((c < '0' || c > '9') && (c != '-'))\n        c = getchar();\n    if (c == '-')\n        f = -1, c = getchar();\n    while (c >= '0' && c <= '9')\n        x = x * 10 + c - '0', c = getchar();\n    return x * f;\n}\n\nconst int N = 2e5 + 10, mod = 1e9 + 1;\n\nint n, m;\n\nconst int M = 4e7 + 10;\n\nint tot, mn[M], mx[M], tag[M], ls[M], rs[M];\n\ninline int New(int l, int r)\n{\n    ++tot, mn[tot] = l, mx[tot] = r;\n    return tot;\n}\n\ninline void upd(int u, int x)\n{\n    mn[u] += x, mx[u] += x, tag[u] += x;\n}\n\ninline void push_down(int u, int l, int r, int mid)\n{\n    if (!tag[u])\n        return;\n    if (!ls[u])\n        ls[u] = New(l, mid);\n    if (!rs[u])\n        rs[u] = New(mid + 1, r);\n    upd(ls[u], tag[u]), upd(rs[u], tag[u]);\n    tag[u] = 0;\n}\n\ninline void update(int &u, int l, int r, int ql, int qr, int x)\n{\n    if (ql > qr)\n        return;\n    if (!u)\n        u = New(l, r);\n    if (l >= ql && r <= qr)\n    {\n        upd(u, x);\n        return;\n    }\n    int mid = l + r >> 1;\n    push_down(u, l, r, mid);\n    if (ql <= mid)\n        update(ls[u], l, mid, ql, qr, x);\n    if (qr > mid)\n        update(rs[u], mid + 1, r, ql, qr, x);\n    mn[u] = min(!ls[u] ? l : mn[ls[u]], !rs[u] ? mid + 1 : mn[rs[u]]);\n    mx[u] = max(!ls[u] ? mid : mx[ls[u]], !rs[u] ? r : mx[rs[u]]);\n}\n\ninline int Findl(int u, int l, int r, int x)\n{\n    if ((!u ? l : mn[u]) >= x)\n        return -1;\n    if (l == r)\n        return l;\n    int mid = l + r >> 1;\n    push_down(u, l, r, mid);\n    int ret = Findl(rs[u], mid + 1, r, x);\n    if (ret != -1)\n        return ret;\n    return Findl(ls[u], l, mid, x);\n}\n\ninline int Findr(int u, int l, int r, int x)\n{\n    if ((!u ? r : mx[u]) <= x)\n        return mod;\n    if (l == r)\n        return l;\n    int mid = l + r >> 1;\n    push_down(u, l, r, mid);\n    int ret = Findr(ls[u], l, mid, x);\n    if (ret != mod)\n        return ret;\n    return Findr(rs[u], mid + 1, r, x);\n}\n\ninline int Query(int u, int l, int r, int ql)\n{\n    if (l == r)\n        return !u ? l : mn[u];\n    int mid = l + r >> 1;\n    push_down(u, l, r, mid);\n    if (ql <= mid)\n        return Query(ls[u], l, mid, ql);\n    return Query(rs[u], mid + 1, r, ql);\n}\n\nsigned main()\n{\n    n = read();\n    ll lasans = 0;\n    int rt = 0;\n    for(int i = 1; i <= n; ++i)\n    {\n        int x = read();\n        int l = Findl(rt, 0, 1e9, x), r = Findr(rt, 0, 1e9, x);\n        update(rt, 0, 1e9, 0, l, +1);\n        update(rt, 0, 1e9, r, 1e9, -1);\n        m = read();\n        for(int j = 1; j <= m; ++j)\n        {\n            int x = (read() + lasans) % mod;\n            printf(\"%lld\\n\", lasans = Query(rt, 0, 1e9, x));\n        }\n    }\n}\n```",
        "postTime": 1640583712,
        "uid": 257146,
        "name": "orz_z",
        "ccfLevel": 0,
        "title": "CF1614E Divan and a Cottage"
    },
    {
        "content": "### \u601d\u8def\n\n\u6211\u4eec\u8bbe\u5982\u679c\u6700\u5f00\u59cb\u6e29\u5ea6\u4e3a $i$\uff0c\u90a3\u4e48\u7b2c $j$ \u5929\u6e29\u5ea6\u4e3a $f_{i,j}$\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u6027\u8d28\uff1a\u5bf9\u4e8e $i,j$ \u6ee1\u8db3 $i<j$ \u90a3\u4e48\u5bf9\u4e8e\u4efb\u610f $k$\uff0c$f_{i,k}\\leq f_{j,k}$\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u7ef4\u62a4\u6bcf\u4e00\u5929\u7684 $f$ \u6570\u7ec4\uff0c\u7b2c $i$ \u5929\uff0c\u5bf9\u4e8e\u6bcf\u4e2a $j$\uff0c\u82e5 $f_{i,j}<T_i$\uff0c\u6211\u4eec\u5c06 $f_{i,j}$ \u52a0\u4e0a 1\uff0c\u82e5 $f_{i,j}>T_i$\uff0c\u6211\u4eec\u5c06 $f_{i,j}$ \u51cf\u53bb 1\u3002\n\n\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u80fd\u652f\u6301\u533a\u95f4\u52a0\u548c\u5355\u70b9\u67e5\u8be2\u7684\u6570\u636e\u7ed3\u6784\u3002\u7531\u4e8e $T_i$ \u7684\u8303\u56f4\u5f88\u5927\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\uff0c\u6bcf\u6b21\u4e8c\u5206\u67e5\u8be2\u66f4\u65b0\u7684\u8fb9\u754c\u3002\n\n\u590d\u6742\u5ea6\u4e3a $O(n \\log^2 n)$\u3002\n\n### Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define forr(i, a, n) for (int i = a; i <= n; i++)\n#define rep(i, n) forr(i, 0, n - 1)\n#define repp(i, n) forr(i, 1, n)\n#define pb push_back\n#define mp make_pair\n#define init(a, i) memset(a, i, sizeof(a))\n#define fi first\n#define se second\n#define mod 1000000007\n#define MOD 998244353\n#define MAXN 1000000000\nint T, case_;\nint tree[10000007], ls[10000007], rs[10000007], cnt = 2;\nint query(int node, int l, int r, int n, int sum)\n{\n    if (!node)\n        return n + sum;\n    if (l == r)\n        return n + tree[node] + sum;\n    int mid = l + r >> 1;\n    if (mid >= n)\n        return query(ls[node], l, mid, n, sum + tree[node]);\n    else\n        return query(rs[node], mid + 1, r, n, sum + tree[node]);\n}\nvoid add(int node, int l, int r, int L, int R, int val)\n{\n    if (L <= l && r <= R)\n    {\n        tree[node] += val;\n        return;\n    }\n    int mid = l + r >> 1;\n    if (mid >= L)\n    {\n        if (!ls[node])\n            ls[node] = cnt++;\n        add(ls[node], l, mid, L, R, val);\n    }\n    if (mid < R)\n    {\n        if (!rs[node])\n            rs[node] = cnt++;\n        add(rs[node], mid + 1, r, L, R, val);\n    }\n}\nint n, t, q, x, ans = 0;\nvoid solve()\n{\n    scanf(\"%d\", &n);\n    rep(i, n)\n    {\n        scanf(\"%d\", &t);\n        int l = 0, r = MAXN, mid, L = -1, R = -1;\n        while (l <= r)\n        {\n            mid = l + r >> 1;\n            if (query(1, 0, MAXN, mid, 0) < t)\n                L = mid, l = mid + 1;\n            else\n                r = mid - 1;\n        }\n        l = 0, r = MAXN;\n        while (l <= r)\n        {\n            mid = l + r >> 1;\n            if (query(1, 0, MAXN, mid, 0) > t)\n                R = mid, r = mid - 1;\n            else\n                l = mid + 1;\n        }\n        if (L != -1)\n            add(1, 0, MAXN, 0, L, 1);\n        if (R != -1)\n            add(1, 0, MAXN, R, MAXN, -1);\n        scanf(\"%d\", &q);\n        while (q--)\n        {\n            scanf(\"%d\", &x);\n            x = (x + ans) % (MAXN + 1);\n            ans = query(1, 0, MAXN, x, 0);\n            printf(\"%d\\n\", ans);\n        }\n    }\n}\nint main()\n{\n    T = 1;\n    // cin>>T;\n    for (case_ = 1; case_ <= T; case_++)\n        solve();\n    return 0;\n}\n```\n",
        "postTime": 1639036534,
        "uid": 407564,
        "name": "Rushroom",
        "ccfLevel": 7,
        "title": "CF1614E Divan and a Cottage"
    }
]