[
    {
        "content": "\u7ed9\u5b9a $N$ \u4e2a\u7269\u54c1\uff0c\u6bcf\u4e2a\u7269\u54c1\u6709\u4e00\u4e2a\u989c\u8272 $c_i$ \u548c\u5927\u5c0f $s_i$ \uff0c\u4f60\u9700\u8981\u627e\u51fa\u4e00\u4e9b\u7269\u54c1\u6392\u6210\u4e00\u6392\uff0c\u4f7f\u5f97\u53ea\u6709\u4e24\u79cd\u989c\u8272\u4e14\u4e24\u79cd\u989c\u8272\u4ea4\u66ff\u6392\u5217\uff0c\u8981\u6700\u5927\u5316\u9009\u51fa\u7269\u54c1\u7684$\\sum s_i$ \u3002\n\n\u8003\u8651\u679a\u4e3e\u4e00\u4e2a\u989c\u8272\uff0c\u7136\u540e\u627e\u5230\u80fd\u548c\u5b83\u5339\u914d\u7684\u6700\u4f18\u989c\u8272\u3002\n\n\u6211\u4eec\u5c06\u76f8\u540c\u989c\u8272\u7684\u7269\u54c1\u6392\u5728\u4e00\u8d77\uff0c\u5305\u542b\u7269\u54c1\u591a\u7684\u989c\u8272\u6392\u5728\u524d\u9762\uff0c\u76f8\u540c\u7684\u989c\u8272\u4e2d$s_i$\u5927\u7684\u7269\u54c1\u6392\u5728\u524d\u9762\u3002\n\n\u7136\u540e\u4f9d\u6b21\u8003\u8651\u6bcf\u79cd\u989c\u8272\u3002\n\n\u7531\u4e8e\u524d\u9762\u7684\u989c\u8272\u6570\u91cf\u4e00\u5b9a\u4e0d\u5c0f\u4e8e\u5f53\u524d\u989c\u8272\u6570\u91cf\uff0c\u6240\u4ee5\u5f53\u524d\u989c\u8272\u7684\u7269\u54c1\u4e00\u5b9a\u53ef\u4ee5\u5168\u9009\u3002\n\n\u6211\u4eec\u518d\u8bb0\u5f55\u4e00\u4e0b $a_i$ \u8868\u793a\u9009\u62e9 $i$ \u4e2a\u76f8\u540c\u989c\u8272\u7684\u7269\u54c1\u80fd\u83b7\u5f97\u7684\u6700\u5927\u4ef7\u503c\u5373\u53ef\u3002\n\n\u6392\u5e8f\u51fd\u6570\u4e2d\u7528\u4e86$\\rm map$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$\\rm O(N\\log^2 N)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define rep(i,a,b) for(int i=a;i<=b;i++)\n#define pre(i,a,b) for(int i=a;i>=b;i--)\n#define N 100005\n#define int long long \nusing namespace std;\nmap<int,int>h,ll,rr;\nstruct node{\n\tint c,s,op;\n\tbool operator<(const node o)const{\n\t\tif(c!=o.c){\n\t\t\tif(h[c]!=h[o.c])return h[c]>h[o.c];\n\t\t\treturn c<o.c;\n\t\t}\n\t\treturn s>o.s;\n\t}\n}u[N];\nint n,mx,p,q;\npair<int,int>c[N];\nvoid calc(int l,int r){\n\tint sum=0;\n\trep(i,l,r){\n\t\tsum+=u[i].s;\n\t\tif(c[i-l+1].second&&sum+c[i-l+1].first>mx)mx=sum+c[i-l+1].first,p=u[i].c,q=c[i-l+1].second;\n\t\tif(c[i-l+2].second&&sum+c[i-l+2].first>mx)mx=sum+c[i-l+2].first,p=u[i].c,q=c[i-l+2].second;\n\t\tif(sum>c[i-l+1].first)c[i-l+1].first=sum,c[i-l+1].second=u[i].c;\n\t}\n}\nvoid solve(){\n\tif(rr[p]-ll[p]==rr[q]-ll[q]){\n\t\tint ans=0;\n\t\trep(i,ll[p],rr[p])ans+=u[i].s+u[ll[q]+i-ll[p]].s;\n\t\tprintf(\"%lld\\n\",ans);\n\t\tprintf(\"%lld\\n\",(rr[p]-ll[p]+1)*2);\n\t\trep(i,ll[p],rr[p])printf(\"%lld %lld \",u[i].op,u[ll[q]+i-ll[p]].op);\n\t}\n\telse{\n\t\tint ans=0;\n\t\trep(i,ll[p],rr[p])ans+=u[i].s+u[ll[q]+i-ll[p]].s;\n\t\tans+=u[ll[q]+rr[p]-ll[p]+1].s;\n\t\tprintf(\"%lld\\n\",ans);\n\t\tprintf(\"%lld\\n\",(rr[p]-ll[p]+1)*2+1);\n\t\trep(i,ll[p],rr[p])printf(\"%lld %lld \",u[ll[q]+i-ll[p]].op,u[i].op);\n\t\tprintf(\"%lld\\n\",u[ll[q]+rr[p]-ll[p]+1].op);\n\t}\n}\nsigned main(){\n\tscanf(\"%lld\",&n);\n\trep(i,1,n)scanf(\"%lld%lld\",&u[i].c,&u[i].s),h[u[i].c]++,u[i].op=i;\n\tsort(u+1,u+n+1);\n\tint pre=1;\n\trep(i,2,n){\n\t\tif(u[i].c!=u[i-1].c)ll[u[i-1].c]=pre,rr[u[i-1].c]=i-1,calc(pre,i-1),pre=i;\n\t}\n\tll[u[n].c]=pre;rr[u[n].c]=n;calc(pre,n);\n\t//rep(i,1,n)printf(\"ss  %lld %lld  %lld %lld\\n\",u[i].c,u[i].s,ll[u[i].c],rr[u[i].c]);\n\t//cout<<p<<\" \"<<q<<endl;\n\tsolve();\n\treturn 0;\n}\n```",
        "postTime": 1619508196,
        "uid": 119261,
        "name": "7KByte",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011CF159E Zebra Tower"
    }
]