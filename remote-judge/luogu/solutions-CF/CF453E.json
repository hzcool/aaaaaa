[
    {
        "content": "\u5206\u5757\u4fe1\u4ef0\uff08\n\n[CF453E Little Pony and Lord Tirek](https://www.luogu.com.cn/problem/CF453E)\n\n> \u7ed9\u5b9a $n$ \u4e2a\u70b9\u53ca\u5176\u521d\u59cb\u503c $s_i$\uff0c\u4ee5\u53ca\u6700\u5927\u503c $m_i$ \u548c\u589e\u957f\u503c $k_i$\u3002\n>\n> \u6bcf\u4e2a\u65f6\u95f4\u5355\u4f4d\u8fdb\u884c\u64cd\u4f5c\uff1a$s_i=\\min(s_i+k_i,m_i)$\uff0c\u540c\u65f6\u652f\u6301\u533a\u95f4\u6c42\u548c\u5e76\u6e05\u96f6\u3002\n\n\u8003\u8651\u5206\u5757\uff0c\u9884\u5904\u7406\u51fa $f(i,k)$ \u8868\u793a\u7b2c $i$ \u5757\u4ece\u5168\u96f6\u5f00\u59cb\uff0c$k$ \u4e2a\u5355\u4f4d\u65f6\u95f4\u540e\u7684\u548c\u3002\n\n- \u6211\u4eec\u79f0\u4e00\u4e2a\u5757\u662f\u201c\u975e\u9650\u5236\u201d\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b83\u5728\u67d0\u4e00\u5386\u53f2\u65f6\u523b\u88ab\u6e05\u96f6\uff0c\u4e14\u4ece\u672a\u6709\u8fc7\u5355\u70b9\u4fee\u6539\u3002\n\n  \u8fd9\u4e9b\u5757\u53ef\u4ee5\u5229\u7528\u9884\u5904\u7406\u7684 $f$ \u5feb\u901f\u8ba1\u7b97\u8d21\u732e\uff0c\u5e76\u53ef\u5c06\u65f6\u95f4\u6302\u5728\u6700\u5de6\u8fb9\u8282\u70b9\u4e0a\u3002\n\n- \u5426\u5219\u79f0\u4e00\u4e2a\u5757\u662f\u201c\u9650\u5236\u201d\u7684\uff0c\u5b83\u53ea\u80fd\u66b4\u529b\u7edf\u8ba1\u8d21\u732e\u3002\n\n\u4e00\u5f00\u59cb\u6240\u6709\u5757\u90fd\u662f\u201c\u9650\u5236\u201d\u7684\uff0c\u6bcf\u6b21\u4fee\u6539\u81f3\u591a\u5c06\u4e24\u4e2a\u5757\u53d8\u6210\u201c\u9650\u5236\u201d\u7684\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u6ca1\u6709\u95ee\u9898\u3002\n\n\u9884\u5904\u7406\u90e8\u5206\uff0c\u53ef\u4ee5\u5229\u7528\u4e24\u6b21\u524d\u7f00\u548c\u8fbe\u5230 $O(N^2/M)$ \u7684\u590d\u6742\u5ea6\uff0c\u5176\u4e2d $M$ \u4e3a\u5757\u957f\u3002\n\n\u4e3a\u4e86\u907f\u514d\u7a7a\u95f4\u7206\u70b8\uff0c\u5e94\u5f53\u9002\u5f53\u8c03\u6574\u5757\u957f\uff0c\u800c\u975e\u4e00\u5b9a\u662f $\\sqrt N$\uff0c\u8fd9\u91cc\u53d6 $M=400$\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n\ntypedef long long LL;\nconst int N = 1e5 + 10, T = 1e5;\nconst int M = 400, S = N / M + 10;\n\nint n, tim[N];\nint t, L[S], R[S], pos[N];\nbool limit[S];\nLL f[S][N], g[N], s[N], m[N], k[N];\n\nint read(){\n\tint x = 0, f = 1; char c = getchar();\n\twhile(c < '0' || c > '9') f = (c == '-') ? - 1 : 1, c = getchar();\n\twhile(c >= '0' && c <= '9') x = x * 10 + c - 48, c = getchar();\n\treturn x * f;\n}\n\nvoid Pre_Work() {\n\tt = n / M;\n\tfor(int i = 1; i <= t; i ++)\n\t\tL[i] = R[i - 1] + 1, R[i] = M * i; \n\tif(R[t] < n) t ++, L[t] = R[t - 1] + 1, R[t] = n;\n\n\tfor(int i = 1; i <= t; i ++) {\n\t\tfor(int j = L[i]; j <= R[i]; j ++)\n\t\t\tif(k[j]) g[1] += k[j], g[m[j] / k[j] + 1] -= k[j];\n\t\tfor(int j = 1; j <= T; j ++) g[j] += g[j - 1];\n\t\tfor(int j = L[i]; j <= R[i]; j ++)\n\t\t\tif(k[j]) g[m[j] / k[j] + 1] += m[j] % k[j];\n\n\t\tfor(int j = 1; j <= T; j ++) g[j] += g[j - 1];\n\t\tf[i][0] = 0;\n\t\tfor(int j = 1; j <= T; j ++) f[i][j] = g[j], g[j] = 0;\n\t\t\n\t\tfor(int j = L[i]; j <= R[i]; j ++) pos[j] = i;\n\t\tlimit[i] = true;\n\t}\n}\n\nLL Modify(int t, int l, int r, int nxt) {\n\tLL ans = 0;\n\tif(limit[t]) {\n\t\tfor(int i = l; i <= r; i ++)\n\t\t\tans += min(m[i], s[i] + k[i] * (nxt - tim[i])), s[i] = 0, tim[i] = nxt;\n\t\treturn ans;\n\t}\n\telse {\n\t\tlimit[t] = true; int rec = tim[L[t]];\n\t\tfor(int i = l; i <= r; i ++)\n\t\t\tans += min(m[i], k[i] * (nxt - rec)), s[i] = 0, tim[i] = nxt;\n\t\tfor(int i = L[t]; i < l; i ++) tim[i] = rec, s[i] = 0;\n\t\tfor(int i = r + 1; i <= R[t]; i ++) tim[i] = rec, s[i] = 0;\n\t\treturn ans;\n\t}\n}\n\nLL Query(int t, int l, int r) {\n\tint p = pos[l], q = pos[r]; LL ans = 0;\n\tif(p == q) return Modify(p, l, r, t);\n\tans += Modify(p, l, R[p], t) + Modify(q, L[q], r, t);\n\tif(p == q - 1) return ans;\n\n\tfor(int i = p + 1; i <= q - 1; i ++) {\n\t\tif(!limit[i]) {\n\t\t\tans += f[i][min(t - tim[L[i]], T)];\n\t\t\ttim[L[i]] = t;\n\t\t}\n\t\telse {\n\t\t\tfor(int j = L[i]; j <= R[i]; j ++)\n\t\t\t\tans += min(m[j], s[j] + k[j] * (t - tim[j]));\n\t\t\ttim[L[i]] = t, limit[i] = false;\n\t\t}\n\t}\n\treturn ans;\n}\n\nint main() {\n\tn = read();\n\tfor(int i = 1; i <= n; i ++)\n\t\ts[i] = read(), m[i] = read(), k[i] = read();\n\tPre_Work();\n\tint q = read();\n\twhile(q --) {\n\t\tint t = read(), l = read(), r = read();\n\t\tprintf(\"%lld\\n\", Query(t, l, r));\n\t}\n\treturn 0;\n}\n```\n\n\u8dd1\u5f97\u53ef\u80fd\u6bd4\u5927\u5e38\u6570\u7684 $O(n\\log^2 n)$ \u7684\u505a\u6cd5\u8fd8\u5feb\u4e00\u70b9 QwQ\u3002",
        "postTime": 1631068682,
        "uid": 117941,
        "name": "_LPF_",
        "ccfLevel": 9,
        "title": "CF453E Little Pony and Lord Tirek"
    },
    {
        "content": "## CF453E \u9898\u89e3\n\n\u7ec8\u4e8e\u8fc7\u4e86\u8fd9\u9898\uff0c\u5199\u7bc7\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0b\u3002\n\n### \u601d\u8def\n\n\u8003\u8651\u989c\u8272\u6bb5\u5747\u644a\u7684\u505a\u6cd5\uff0c\u7528\u4e00\u4e2a set \u7ef4\u62a4\u88ab\u66f4\u6539\u7684\u65f6\u95f4\u76f8\u540c\u7684\u989c\u8272\u6bb5\u3002\n\n\u7531\u4e8e\u53ea\u6709\u533a\u95f4\u8d4b\u503c\u64cd\u4f5c\uff0c\u4e14\u67e5\u8be2\u540e\u7acb\u5373\u8d4b\u503c\uff0c\u6240\u4ee5\u6bcf\u4e2a\u989c\u8272\u6bb5\u53ea\u4f1a\u5bf9\u540e\u9762\u7684\u4e00\u6b21\u67e5\u8be2\u4ea7\u751f\u5f71\u54cd\u3002\u800c\u4e14\u6bcf\u6b21\u8d4b\u503c\u53ea\u4f1a\u589e\u52a0 $O(1)$ \u4e2a\u989c\u8272\u6bb5\uff0c\u6240\u4ee5\u603b\u7684\u989c\u8272\u6bb5\u6570\u91cf\u662f $O(m)$ \u7ea7\u522b\u7684\u3002\n\n\u6211\u4eec\u5bf9\u4e8e\u6574\u4f53\u5efa\u7acb\u4e24\u68f5\u53ef\u6301\u4e45\u5316\u6743\u503c\u7ebf\u6bb5\u6811\uff08\u4e3b\u5e2d\u6811\uff09\uff0c\u4e00\u68f5\u5728\u76f8\u5e94\u7684 $\\frac{m_i}{r_i}$ \u5904\u5b58 $r_i$ \u7684\u548c\uff0c\u53e6\u4e00\u68f5\u5b58 $m_i$ \u7684\u548c\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a $(l,r,t)$ \u7684\u8be2\u95ee\uff0c\u5c06 $[l,r]$ \u901a\u8fc7 set \u4e2d\u7684\u989c\u8272\u6bb5\u5206\u6210\u4e00\u4e9b\u533a\u95f4\uff0c\u6bcf\u4e2a\u533a\u95f4\u5185\u88ab\u4fee\u6539\u7684\u65f6\u95f4\u76f8\u540c\u3002\n\n- \u5047\u5982\u4e00\u4e2a\u533a\u95f4\u6ca1\u6709\u88ab\u4fee\u6539\u8fc7\uff08\u4e5f\u5c31\u610f\u5473\u7740\u5b83\u6709\u521d\u503c\uff09\uff1a\u76f4\u63a5\u66b4\u529b\u7b97\u5373\u53ef\u3002\n\n- \u5047\u5982\u4e00\u4e2a\u533a\u95f4\u88ab\u4fee\u6539\u8fc7\uff0c\u4e14\u4e0a\u6b21\u4fee\u6539\u7684\u65f6\u95f4\u4e3a $t_0$\uff1a\u6b64\u65f6\u521d\u503c\u5bf9\u7b54\u6848\u5df2\u7ecf\u6ca1\u6709\u5f71\u54cd\u4e86\uff0c\u6240\u4ee5\u663e\u7136\u5f53\u5c0f\u9a6c\u7684 $\\frac{m_i}{r_i}<t-t_0$ \u65f6\uff0c\u7b54\u6848\u4f1a\u52a0\u4e0a $m_i$\uff1b\u5f53\u5c0f\u9a6c\u7684 $\\frac{m_i}{r_i}\\ge t-t_0$ \u65f6\uff0c\u7b54\u6848\u4f1a\u52a0\u4e0a $(t-t_0)r_i$\u3002\u5bf9\u4e8e\u8fd9\u4e24\u79cd\u60c5\u51b5\u5728\u4e3b\u5e2d\u6811\u4e0a\u67e5\u8be2\u5373\u53ef\u3002\n\n\u7136\u540e\u8fd8\u6709\u4e00\u4e9b\u4ee3\u7801\u7684\u7ec6\u8282\u95ee\u9898\uff0c\u5bfc\u81f4\u6211\u8c03\u4e86\u597d\u51e0\u4e2a\u5c0f\u65f6\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O((n+m)\\log n)$\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <cctype>\n#include <algorithm>\n#include <set>\nusing namespace std;\n#define For(Ti,Ta,Tb) for(int Ti=(Ta);Ti<=(Tb);++Ti)\n#define Dec(Ti,Ta,Tb) for(int Ti=(Ta);Ti>=(Tb);--Ti)\ntemplate<typename T>\ninline bool chkmax(T &i,const T&j){return i<j?(i=j,1):0;}\ntemplate<typename T>\ninline bool chkmin(T &i,const T&j){return i>j?(i=j,1):0;}\ntemplate<typename T> void Read(T &x){\n\tx=0;int f=1;\n\tchar ch=getchar();\n\twhile(!isdigit(ch)) f=(ch=='-'?-1:f),ch=getchar();\n\twhile(isdigit(ch)) x=x*10+(ch^48),ch=getchar();\n\tx=x*f;\n}\ntypedef long long ll;\n#define INF 0x3f3f3f3f\nconst int N=1e5+5,SIZ=1e7+5,V=1e5+5;\nint n,s[N],mx[N],r[N];\n#define ls(xx) t[xx].ls\n#define rs(xx) t[xx].rs\nint tot=0,root[N],root1[N];\nstruct Node{\n\tint l,r,ls,rs;ll v;\n}t[SIZ];\nvoid Pushup(int p){t[p].v=t[ls(p)].v+t[rs(p)].v;}\nvoid Build(int p,int l,int r){//\u5efa\u7acb\u4e00\u68f5\u7a7a\u7684\u4e3b\u5e2d\u6811\n\tt[p].l=l,t[p].r=r;\n\tif(t[p].l==t[p].r) return;\n\tint mid=(l+r)>>1;\n\tBuild(ls(p)=++tot,l,mid);Build(rs(p)=++tot,mid+1,r);\n}\nint Add(int p,int x,ll k){//\u5728\u4e0a\u4e00\u4e2a\u7248\u672c\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u5355\u70b9\u4fee\u6539\n\tint np=++tot;t[np]=t[p];\n\tif(t[np].l==t[np].r){\n\t\tt[np].v+=k;return np;\n\t}int mid=(t[np].l+t[np].r)>>1;\n\tif(x<=mid) ls(np)=Add(ls(p),x,k);\n\telse rs(np)=Add(rs(p),x,k);\n\tPushup(np);return np;\n}\nll QLe(int p,int x){//\u67e5\u627e\u4e3b\u5e2d\u6811\u4e2d\u2264x\u7684\u548c\n\tif(t[p].r<=x) return t[p].v;\n\tint mid=(t[p].l+t[p].r)>>1;ll res=0;\n\tif(ls(p)) res+=QLe(ls(p),x);\n\tif(x>mid) res+=QLe(rs(p),x);\n\treturn res;\n}\nll QGe(int p,int x){//\u67e5\u627e\u4e3b\u5e2d\u6811\u4e2d\u2265x\u7684\u548c\n\tif(t[p].l>=x) return t[p].v;\n\tint mid=(t[p].l+t[p].r)>>1;ll res=0;\n\tif(x<=mid) res+=QGe(ls(p),x);\n\tif(rs(p)) res+=QGe(rs(p),x);\n\treturn res;\n}\nstruct Seg{//orig\u7528\u6765\u5b58\u533a\u95f4\u662f\u5426\u6709\u521d\u503c\uff08\u662f\u5426\u88ab\u533a\u95f4\u8d4b\u503c\u8fc7\uff09\uff0clst\u8bb0\u5f55\u533a\u95f4\u4e0a\u6b21\u88ab\u4fee\u6539\u7684\u65f6\u95f4\n\tint l,r,orig,lst;\n};\nbool operator<(const Seg &x,const Seg &y){\n\treturn x.l<y.l;\n}\ntypedef set<Seg>::iterator Iter;\nset<Seg> st;\nll Bf(const Seg &it,int t){//\u66b4\u529b\n\tll res=0;\n\tFor(i,it.l,it.r){\n\t\tres+=min(1LL*mx[i],s[i]+1LL*(t-it.lst)*r[i]);\n\t\ts[i]=0;\n\t}return res;\n}\nll Qry(const Seg &it,int t){\n\tif(it.orig) return Bf(it,t);\n\tt-=it.lst;\n\treturn 1LL*t*(QGe(root1[it.r],t)-QGe(root1[it.l-1],t))+QLe(root[it.r],t-1)-QLe(root[it.l-1],t-1);\n}\nint m;\nint main(){\n\tRead(n);\n\troot[0]=tot=1;t[tot].l=0,t[tot].r=V;\n\tBuild(root[0],0,V);\n\troot1[0]=++tot;t[tot].l=0,t[tot].r=V;\n\tBuild(root1[0],0,V);\n\tFor(i,1,n){\n\t\tRead(s[i]);Read(mx[i]);Read(r[i]);\n\t\tif(r[i]==0){//\u5bf9\u4e8er[i]==0\u7684\u60c5\u51b5\u8981\u7279\u5224\n\t\t\troot[i]=Add(root[i-1],0,0);\n\t\t\troot1[i]=Add(root1[i-1],0,0);\n\t\t\tcontinue;\n\t\t}\n\t\troot[i]=Add(root[i-1],mx[i]/r[i],mx[i]);\n\t\troot1[i]=Add(root1[i-1],mx[i]/r[i],r[i]);\n\t}\n\tRead(m);\n\tst.insert(Seg{1,n,1,0});\n\tint t=0,l,r;\n\twhile(m--){\n\t\tRead(t);Read(l);Read(r);\n\t\tll ans=0;\n\t\tIter it1=--st.upper_bound(Seg{l,0,0,0}),it2=--st.upper_bound(Seg{r,0,0,0});\n\t\tif(it1==it2){//l,r\u5728set\u5185\u5904\u4e8e\u540c\u4e00\u4e2a\u533a\u95f4\n\t\t\tans+=Qry(Seg{l,r,it1->orig,it1->lst},t);\n\t\t\tSeg is=*it1;\n\t\t\tst.erase(it1);\n\t\t\tif(l!=is.l) st.insert(Seg{is.l,l-1,is.orig,is.lst});\n\t\t\tst.insert(Seg{l,r,0,t});\n\t\t\tif(r!=is.r) st.insert(Seg{r+1,is.r,is.orig,is.lst});\n\t\t}else{\n\t\t\tans+=Qry(Seg{l,it1->r,it1->orig,it1->lst},t);\n\t\t\tSeg is1=*it1,is2=*it2;\n\t\t\tfor(Iter it=st.erase(it1);it!=it2&&it!=st.end();it=st.erase(it)){\n\t\t\t\tans+=Qry(*it,t);\n\t\t\t}\n\t\t\tans+=Qry(Seg{it2->l,r,it2->orig,it2->lst},t);\n\t\t\tst.erase(it2);\n\t\t\tif(is1.l<=l-1) st.insert(Seg{is1.l,l-1,is1.orig,is1.lst});\n\t\t\tif(is2.r>=r+1) st.insert(Seg{r+1,is2.r,is2.orig,is2.lst});\n\t\t\tst.insert(Seg{l,r,0,t});\n\t\t}\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1615980896,
        "uid": 225625,
        "name": "Alan_Zhao",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF453E \u3010Little Pony and Lord Tirek\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n- \u7ef4\u62a4\u4e00\u4e2a\u957f\u5ea6\u4e3a $n(1\\le n \\le 10^5)$ \u7684\u6570\u7ec4 $s$\uff0c\u521d\u503c\u7ed9\u5b9a\u4e14 $0 \\le s_i \\le 10^5$\u3002\n- \u6bcf\u8fc7 $1$ \u5355\u4f4d\u65f6\u95f4\uff0c\u90fd\u4f1a\u5bf9\u4e8e\u6240\u6709 $[1,n]$ \u4e4b\u95f4\u7684\u6574\u6570 $i$\uff0c\u6267\u884c $s_i \\gets \\min\\{m_i,s_i+r_i\\}$\u3002\u5176\u4e2d $m_i$ \u548c $r_i$ \u7ed9\u5b9a\u4e14 $0 \\le m_i, r_i \\le 10^5$\u3002\n- \u7ef4\u62a4 $m(1\\le m \\le 10^5)$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u65f6\u4f1a\u5c06\u65f6\u95f4\u8bbe\u4e3a $t(0 \\le t \\le 10^9)$\uff0c\u5e76\u4e14\u67e5\u8be2 $s$ \u6570\u7ec4 $[l,r]$ \u533a\u95f4\u548c\u3002\u6bcf\u6b21\u64cd\u4f5c\u7ed3\u675f\u540e\u4f1a\u5c06 $s$ \u6570\u7ec4\u7684 $[l,r]$ \u533a\u95f4\u63a8\u5e73\u4e3a $0$\uff0c\u4fdd\u8bc1\u6bcf\u6b21\u8be2\u95ee\u7684 $t$ \u4e25\u683c\u9012\u589e\u3002\n- \u521d\u59cb\u6ca1\u6709\u8fdb\u884c\u64cd\u4f5c\u65f6\u65f6\u95f4\u4e3a $0$\u3002\n\n## \u7b80\u8981\u505a\u6cd5\n\n\u9898\u89e3\u533a\u91cc\u597d\u50cf\u90fd\u662f\u4e9b\u795e\u5947 polylog \u505a\u6cd5\uff0c\u6211\u8fd9\u91cc\u8bb2\u4e00\u4e2a\u6bd4\u8f83\u597d\u60f3\u7684\u6839\u53f7\u505a\u6cd5\u5427\u3002\n\n\u9996\u5148\u5bf9 $s$ \u5e8f\u5217\u5206\u5757\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u5757\u7ef4\u62a4\u4e00\u4e2a\u63a8\u5e73 tag \u548c\u8fd9\u4e2a\u5757\u4e0a\u6b21\u88ab\u64cd\u4f5c\u7684\u65f6\u95f4\u6233\u3002\u67e5\u8be2\u65f6\u5206\u4e09\u79cd\u60c5\u51b5\uff1a\n\n- \u5bf9\u4e8e\u6563\u5757\uff0c\u76f4\u63a5\u66b4\u529b\u505a\u3002\n- \u5bf9\u4e8e\u6ca1\u6709\u63a8\u5e73 tag \u7684\u6574\u5757\uff0c\u540c\u6563\u5757\u4e00\u6837\u66b4\u529b\u52a0\u548c\uff0c\u7136\u540e\u628a\u8fd9\u4e2a\u5757\u6253\u4e0a\u4e00\u4e2a\u63a8\u5e73 tag\u3002\n- \u5bf9\u4e8e\u6709\u63a8\u5e73 tag \u7684\u6574\u5757\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a $O(1)$ \u7684\u65b9\u6cd5\u6765\u6c42\u51fa\u5b83\u7684\u7b54\u6848\uff0c\u5177\u4f53\u65b9\u6cd5\u4e0b\u9762\u518d\u8bf4\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u7531\u4e8e\u6bcf\u6b21\u67e5\u8be2\u90fd\u4f1a\u505a\u4e00\u6b21\u533a\u95f4\u63a8\u5e73\uff0c\u5373\u6bcf\u6b21\u64cd\u4f5c\u5747\u644a\u4e0b\u6765\u53ea\u4f1a\u4fee\u6539 $O(1)$ \u4e2a\u5757\u7684 tag\u3002\u6240\u4ee5\u8fd9\u4e2a\u505a\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u5747\u644a $O(n\\sqrt n)$\u3002\n\n\u73b0\u5728\u7684\u95ee\u9898\u662f\u600e\u4e48\u8ba9\u7b2c\u4e09\u79cd\u60c5\u51b5 $O(1)$ \u8ba1\u7b97\u8d21\u732e\u3002\u8003\u8651\u5728\u6700\u5f00\u59cb\u7684\u65f6\u5019\u5bf9\u6240\u6709\u5757\u8fdb\u884c\u9884\u5904\u7406\uff1a\u5047\u8bbe\u8fd9\u4e2a\u5757\u5728\u65f6\u95f4\u6233\u4e3a $0$ \u7684\u65f6\u5019\u533a\u95f4\u63a8\u5e73\u4e3a $0$\uff0c\u9884\u5904\u7406\u51fa\u8be5\u5757\u5728\u65f6\u95f4\u6233 $k$ \u7684\u65f6\u5019\u7684\u533a\u95f4\u548c $pre(\\text{block},k)$\u3002\u6ce8\u610f\u5230 $k$ \u6ca1\u6709\u5fc5\u8981\u53d6\u5230 $10^9$ \u7ea7\u522b\uff0c\u56e0\u4e3a\u9898\u76ee\u4fdd\u8bc1 $0\\le s_i,m_i,r_i \\le 10^5$\uff0c\u5373\u8be5\u5757\u5728\u63a8\u5e73\u540e $10^5$ \u4e2a\u5355\u4f4d\u65f6\u95f4\u540e\u533a\u95f4\u548c\u5c31\u4e0d\u4f1a\u53d8\u4e86\u3002\n\n\u7136\u540e\u4f60\u4f1a\u53d1\u73b0\u5982\u679c\u4f60\u5bf9 $[0,10^5]$ \u4e4b\u95f4\u7684\u6bcf\u4e2a\u65f6\u95f4\u6233\u90fd\u66b4\u529b\u8ba1\u7b97\u6bcf\u4e2a\u5757\u7684\u8d21\u732e\uff0c\u590d\u6742\u5ea6\u5c06\u9000\u5316\u4e3a $O(n^2)$\u3002\u6362\u4e00\u79cd\u65b9\u6cd5\uff0c\u8003\u8651\u6bcf\u4e2a\u5143\u7d20\u5bf9\u4e8e\u4e0d\u540c\u65f6\u95f4\u6233\u7684\u8d21\u732e\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e\u5143\u7d20 $(s_i,m_i,r_i)$\uff0c\u5728\u7b2c $\\left\\lfloor\\dfrac {m_i} {r_i} \\right\\rfloor$ \u5355\u4f4d\u65f6\u95f4\u6216\u4e4b\u524d\uff0c\u8be5\u5143\u7d20\u8d21\u732e\u4e3a $r_i$\uff0c\u5728\u7b2c $\\left\\lfloor\\dfrac {m_i} {r_i} \\right\\rfloor+1$ \u5355\u4f4d\u65f6\u95f4\uff0c\u8be5\u5143\u7d20\u8d21\u732e\u4e3a $m_i \\bmod r_i$\uff0c\u4e4b\u540e\u8be5\u5143\u7d20\u8d21\u732e\u90fd\u4e3a $0$\u3002\u8003\u8651\u7ef4\u62a4 $pre(\\text{block},k)$ \u7684\u5dee\u5206\u7684\u5dee\u5206\uff0c\u6b64\u65f6\u6bcf\u4e2a\u5143\u7d20\u53ea\u4f1a\u5bf9\u5dee\u5206\u7684\u5dee\u5206\u6539\u53d8\u81f3\u591a\u4e09\u4e2a\u6570\u3002\u5bf9\u4e8e\u5757\u5185\u6240\u6709\u5143\u7d20\u90fd\u8ba1\u7b97\u51fa\u8d21\u732e\u540e\uff0c\u505a\u4e24\u904d\u524d\u7f00\u548c\uff0c\u5c31\u80fd\u5f97\u5230\u539f\u6570\u7ec4\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e0b\u964d\u4e3a $O(n\\sqrt n)$\u3002\n\n## \u4ee3\u7801\u53c2\u8003\n\n```cpp\nconst int N=1e5+9;\nconst int B=409;\nstruct Node{int mx,dl;}a[N];\nint n,sz,bl[N],lbl[N],rbl[N],pre[B][N],tim[B],c[N];\nbool typ[B];\n\nvoid Init(){\n  sz=min<int>(sqrt(n),250);\n  re(i,n)bl[i]=(i-1)/sz+1,lbl[i]=(bl[i]-1)*sz+1,rbl[i]=min(bl[i]*sz,n);\n  static int cnt[N],lst[N],qzh[N];\n  ste(x,1,n,sz){\n    int b=bl[x];\n    memset(qzh,0,sizeof qzh);\n    rep(i,lbl[x],rbl[x])if(a[i].dl)\n      cnt[i]=a[i].mx/a[i].dl,lst[i]=a[i].mx%a[i].dl,qzh[1]+=a[i].dl,qzh[cnt[i]+1]-=a[i].dl-lst[i],qzh[cnt[i]+2]-=lst[i];\n    re(t,1e5)qzh[t]+=qzh[t-1];\n    re(t,1e5)qzh[t]+=qzh[t-1],pre[b][t]=qzh[t];\n  }\n}\n\nvoid Down(int t,int x){\n  int b=bl[x];\n  if(typ[b]){\n    typ[b]=0;\n    rep(i,lbl[x],rbl[x])c[i]=0;\n  }\n  int delt=min<int>(1e5,t-tim[b]);\n  rep(i,lbl[x],rbl[x])c[i]=min<ll>(a[i].mx,1ll*delt*a[i].dl+c[i]);\n  tim[b]=t;\n}\n\nll Ask(int t,int l,int r){\n  ll res=0;\n  if(bl[l]==bl[r]){\n    Down(t,l);\n    rep(i,l,r)res+=c[i],c[i]=0;\n    return res;\n  }\n  res+=Ask(t,l,rbl[l]);\n  ste(i,lbl[l]+sz,rbl[r]-sz,sz){\n    int b=bl[i],delt=min<int>(1e5,t-tim[b]);\n    if(typ[b])res+=pre[b][delt];\n    else res+=Ask(t,lbl[i],rbl[i]);\n    typ[b]=1,tim[b]=t;\n  }\n  res+=Ask(t,lbl[r],r);\n  return res;\n}\n\nsigned main() {\n  ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n  cin>>n;re(i,n)cin>>c[i]>>a[i].mx>>a[i].dl;\n  Init();\n  int m;cin>>m;while(m--){\n    int t,l,r;cin>>t>>l>>r;\n    ll res=Ask(t,l,r);\n    cout<<res<<'\\n';\n  }\n  return 0;\n}\n```\n\n",
        "postTime": 1645574316,
        "uid": 207996,
        "name": "yzy1",
        "ccfLevel": 9,
        "title": "CF453E \u9898\u89e3"
    },
    {
        "content": "### P.S.\n\u524d\u60c5\u56de\u987e\uff1a  \n\u53bb\u5e74 9 \u6708\u4efd\uff0c@[$\\color{gray}\\text{leapfrog}$](https://www.luogu.com.cn/user/44805) \u521a\u5b66 Chtholly Tree\uff0cChtholly \u6ca1\u4ec0\u4e48\u597d\u9898\uff0c\u90fd\u88ab\u6bd2\u7624\u521d\u9898\u4eba\u5361\u5149\u4e86\u3002  \n\u8fd9\u53e5\u8bdd\u88ab\u7ecf\u8fc7\u7684 @[$\\color{black}\\text{F}\\color{red}\\text{lying2018}$](https://www.luogu.com.cn/user/52902) \u795e\u4ed9\u542c\u5230\u4e86\uff0c\u5c31\u7ed9 @[$\\color{gray}\\text{leapfrog}$](https://www.luogu.com.cn/user/52902) \u63a8\u4e86\u8fd9\u9053\u795e\u4ed9\u9898\u3002  \n\u7136\u540e\u83dc\u83dc\u7684 @[$\\color{gray}\\text{leapfrog}$](https://www.luogu.com.cn/user/44805) \u4e0d\u4f1a\u505a\uff0c\u53ea\u80fd\u52a0\u5165\u6536\u85cf\u8ba1\u5212\u3002  \n\u5f53\u65f6\u8fd8\u662f\u9ed1\u9898\uff0c\u73b0\u5728\u56de\u6765\u4e00\u770b\uff0c\u53d1\u73b0\u7d2b\u4e86\uff0c@[$\\color{gray}\\text{leapfrog}$](https://www.luogu.com.cn/user/44805) \u770b\u4e86\u9898\u89e3\u624d\u4f1a\u505a\u3002  \n~~\u6c42\u8d5e~~\n\n### Description.\n\u6709 $n$ \u4e2a\u6570\uff0c\u6bcf\u79d2\u7b2c $i$ \u4e2a\u6570 $x_i$ \u4f1a\u53d8\u6210 $\\min(m_{i},x_i+k_i)$\u3002  \n\u6bcf\u6b21\u64cd\u4f5c\u8be2\u95ee\u533a\u95f4\u548c\uff0c\u5e76\u628a\u533a\u95f4 $x_i$ \u6e05\u96f6\u3002  \n\n### Solution.\n\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u5b50\u95ee\u9898\uff0c\u6bcf\u6b21\u64cd\u4f5c\u90fd\u9488\u5bf9\u6574\u4e2a\u5e8f\u5217\u3002  \n\u6211\u4eec\u53ef\u4ee5\u6309\u7167 $x_i$ \u662f\u5426\u7b49\u4e8e $m_i$ \u5206\u7c7b\u3002  \n$x_i$ \u7b49\u4e8e $m_i$ \u7684\u4e00\u7c7b\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7edf\u8ba1\u533a\u95f4 $m_i$ \u548c\u3002  \n$x_i$ \u4e0d\u7b49\u4e8e $m_i$ \u7684\u4e00\u7c7b\uff0c\u6211\u4eec\u76f4\u63a5\u7edf\u8ba1\u533a\u95f4 $k_i$ \u548c\uff0c\u4e58\u4e0a\u65f6\u95f4\u5dee\u5c31\u597d\u4e86\u3002  \n\u95ee\u9898\u662f\u600e\u4e48\u5206\u7c7b\u3002~~\u8fd9\u4e0d\u662f\u6709\u624b\u5c31\u884c~~  \n\u6309\u7167 $\\frac{m_i}{k_i}$ \u6392\u5e8f\uff0c\u7136\u540e\u6bcf\u6b21\u80af\u5b9a\u662f\u4e00\u4e2a\u524d\u7f00 $x_i$ \u4e0d\u7b49\u4e8e $m_i$\uff0c\u540e\u7f00\u90fd\u7b49\u4e8e\u3002  \n\u76f4\u63a5\u4e8c\u5206\u627e\u5230\u7b2c\u4e00\u4e2a $k_i=x_i$ \u7684\u4f4d\u7f6e\u3002  \n\u7136\u540e\u524d\u7f00\u548c\u8ba1\u7b97 $\\sum k_i$\uff0c\u540e\u7f00\u548c\u8ba1\u7b97 $\\sum m_i$ \u5373\u53ef\u3002  \n\n\u4f46\u662f\u73b0\u5728\u662f\u5bf9\u67d0\u4e2a\u5b50\u533a\u95f4\u8fdb\u884c\u64cd\u4f5c\u3002  \n\u6211\u4eec\u5e76\u4e0d\u80fd\u5bf9\u6574\u4e2a\u5e8f\u5217\u6392\u5e8f\u6c42\u524d\u7f00\u548c\u3002  \n\u6211\u4eec\u73b0\u5728\u76f8\u5f53\u4e8e\u8981\u6c42 $\\frac{m_i}{k_i}\\le qwq,pos\\in[l,r]$ \u7684\u6240\u6709 $k_i$ \u548c\u3002  \n\u6211\u4eec\u53ef\u4ee5\u6309\u7167 $\\frac{m_i}{k_i}$ \u6392\u5e8f\u5e76\u79bb\u6563\u5316\uff0c\u7136\u540e\u4e00\u4f4d\u4e00\u4f4d\u52a0\u5165\u4e3b\u5e2d\u6811\u3002  \n\u8fd9\u6837\u5c31\u76f8\u5f53\u4e8e\u67e5\u8be2\u4e3b\u5e2d\u6811\u4e0a\u4e00\u4e2a\u524d\u7f00\u7684\u548c\u4e86\u3002  \n\u8fd9\u8fb9\u8fd8\u6709\u4e00\u4e2a tips\uff0c\u5c31\u662f\u4e00\u9897\u4e3b\u5e2d\u6811\u53ef\u4ee5\u540c\u65f6\u7ef4\u62a4\u90a3\u4e24\u4e2a\u503c\u3002  \n\n\u8fd8\u6709\u53e6\u5916\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u56e0\u4e3a\u4fee\u6539\u5e76\u4e0d\u5bf9\u4e8e\u6574\u4e2a\u5e8f\u5217\u3002  \n\u6240\u4ee5\u6bcf\u6b21\u8be2\u95ee\u6240\u6709\u7684\u4e0a\u4e00\u6b21\u65f6\u95f4\u662f\u4e0d\u4e00\u5b9a\u4e00\u6837\u7684\u3002  \n\u800c\u4e0a\u4e00\u6b21\u65f6\u95f4\u662f\u51b3\u5b9a\u4e86\u67d0\u4e00\u4e2a\u6570\u5e94\u8be5\u8d21\u732e\u5165 $k$ \u8fd8\u662f $m$ \u7684\u3002  \n\u76f8\u5f53\u4e8e\u4e0a\u9762\u7684 $qwq$ \u548c\u4e0a\u4e00\u6b21\u65f6\u95f4\u662f\u6709\u5173\u7cfb\u7684\u3002  \n\u6240\u4ee5\u6211\u4eec\u53ea\u80fd\u66b4\u529b\u7ef4\u62a4\uff0c\u76f4\u63a5\u4e0a Chtholly Tree\u3002  \n\u800c\u56e0\u4e3a\u8fd9\u9898\u6bcf\u6b21\u8be2\u95ee\u4e4b\u540e\u4f1a\u5bf9\u8be2\u95ee\u533a\u95f4\u533a\u95f4\u8986\u76d6\uff0c\u6240\u4ee5 Chtholly Tree \u65f6\u95f4\u590d\u6742\u5ea6\u6b63\u786e\u3002  \n\u8bc1\u660e\u5c31\u8003\u8651\uff0c\u6bcf\u6b21\u4fee\u6539\u81f3\u591a\u591a $O(1)$ \u4e2a\u533a\u95f4\uff0c\u6bcf\u6b21\u67e5\u8be2\u904d\u5386\u5230\u7684\u6240\u6709\u533a\u95f4\u90fd\u4f1a\u88ab\u5220\u9664\u3002  \n\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u6b63\u786e\u3002  \n\n\u8fd9\u8fb9\u8fd8\u6709\u4e00\u4e2a\u5c0f tips\uff0c\u6709\u4e9b\u5c0f\u9a6c\u521d\u59cb\u6709\u6743\u503c\uff0c\u53ef\u4ee5\u5f53\u505a\u4e0a\u4e00\u6b21\u4fee\u6539\u662f\u8d1f\u65f6\u95f4\u3002  \n\n### Coding.\n```cpp\n//\u662f\u554a\u2026\u2026\u4f60\u5c31\u662f\u90a3\u53ea\u9b3c\u4e86\u2026\u2026\u6240\u4ee5\u88ab\u4f60\u78b0\u5230\u4ee5\u540e\uff0c\u5c31\u8f6e\u5230\u6211\u53d8\u6210\u9b3c\u4e86{{{\n#include<bits/stdc++.h>\nusing namespace std;typedef long long ll;\ntemplate<typename T>inline void read(T &x)\n{\n\tx=0;char c=getchar(),f=0;\n\tfor(;c<'0'||c>'9';c=getchar()) if(c=='-') f=1;\n\tfor(;c>='0'&&c<='9';c=getchar()) x=(x<<1)+(x<<3)+(c^48);\n\tif(f) x=-x;\n}/*}}}*/\nint n,Q,K[100005],M[100005],id[100005];\nstruct data{ll k,b;inline data operator+(data x) const {return(data){k+x.k,b+x.b};}};\nstruct node{int ls,rs;data vl;}T[2000005];int tt,rt[100005];\ninline void pushup(int x) {T[x].vl=T[T[x].ls].vl+T[T[x].rs].vl;}\ninline void build(int &x,int l,int r)\n{\n\tint md=(l+r)>>1;x=++tt;if(l==r) return T[x].vl=(data){K[l],0},void();\n\tbuild(T[x].ls,l,md),build(T[x].rs,md+1,r),pushup(x);\n}\ninline void modif(int &x,int y,int l,int r,int dw)\n{\n\tT[x=++tt]=T[y];if(l==r) return T[x].vl=(data){0,M[l]},void();\n\tif(dw<=((l+r)>>1)) modif(T[x].ls,T[y].ls,l,(l+r)>>1,dw),pushup(x);\n\telse modif(T[x].rs,T[y].rs,((l+r)>>1)+1,r,dw),pushup(x);\n}\ninline data query(int x,int l,int r,int dl,int dr)\n{\n\tif(l>dr||dl>r) return(data){0,0};else if(dl<=l&&r<=dr) return T[x].vl;\n\treturn query(T[x].ls,l,(l+r)>>1,dl,dr)+query(T[x].rs,((l+r)>>1)+1,r,dl,dr);\n}\nstruct Chtholly{int l,r;mutable double v;char operator<(Chtholly b) const {return l<b.l;}};\ntypedef set<Chtholly>::iterator IT;set<Chtholly>S;\ninline IT split(int wh)\n{\n\tIT it=S.lower_bound((Chtholly){wh,114,514});\n\tif(it!=S.end()&&it->l==wh) return it;else it--;\n\tint l=it->l,r=it->r;double v=it->v;S.erase(it);\n\treturn S.insert((Chtholly){l,wh-1,v}),S.insert((Chtholly){wh,r,v}).first;\n}\ninline data calc(double vl,int l,int r)\n{\n\tint le=1,ri=n,rs=0;\n\twhile(le<=ri) {int md=(le+ri)>>1;if(M[id[md]]<=vl*K[id[md]]) rs=md,le=md+1;else ri=md-1;}\n\treturn query(rt[rs],1,n,l,r);\n}\nset<pair<int,int> >s;\ninline char cmp(int a,int b) {return 1ll*M[a]*K[b]<1ll*M[b]*K[a];}\nint main()\n{\n\tread(n);for(int i=1,x;i<=n;i++)\n\t{\n\t\tread(x),read(M[i]),read(K[i]),id[i]=i;\n\t\tif(!M[i]&&!K[i]) M[i]=1;\n\t\tif(K[i]) S.insert((Chtholly){i,i,-1.0*x/K[i]});\n\t\telse S.insert((Chtholly){i,i,0}),s.insert(make_pair(i,x));\n\t}\n\ts.insert(make_pair(n+1,0)),build(rt[0],1,n),sort(id+1,id+n+1,cmp);\n\tfor(int i=1;i<=n;i++) modif(rt[i],rt[i-1],1,n,id[i]);\n\tfor(read(Q);Q--;)\n\t{\n\t\tset<pair<int,int> >::iterator it;int t,l,r;ll res=0;read(t),read(l),read(r);\n\t\twhile(s.size()>1ull&&(it=s.lower_bound(make_pair(l,0)))->first<=r) res+=it->second,s.erase(it);\n\t\tIT ir=split(r+1),il=split(l);for(IT i=il;i!=ir;i++)\n\t\t\t{data x=calc(t-i->v,i->l,i->r);res+=x.b+(ll)(x.k*(t-i->v)+0.5);}\n\t\tS.erase(il,ir),S.insert((Chtholly){l,r,1.0*t}),printf(\"%lld\\n\",res);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1618194154,
        "uid": 44805,
        "name": "Leap_Frog",
        "ccfLevel": 7,
        "title": "CF453E Little Pony and Lord Tirek\uff08\u9898\u89e3\uff09"
    },
    {
        "content": "[Codeforces \u9898\u76ee\u4f20\u9001\u95e8](https://codeforces.com/contest/453/problem/E) & [\u6d1b\u8c37\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF453E)\n\n\u4e00\u9053\u96be\u5ea6 *3100 \u7684 DS\uff0c\u800c\u4e14\u88ab\u6211\u81ea\u5df1\u641e\u51fa\u6765\u4e86\uff01\n\n\u4e0d\u8fc7\u6211\u7ec8\u7a76\u8fd8\u662f\u6280\u4e0d\u5982\u4eba\uff0c\u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2a $n\\log^2n$ + \u5927\u5e38\u6570\u7684\u8fa3\u9e21\u505a\u6cd5\uff0c\u51e0\u4e4e\u662f\u5361\u7740\u65f6\u7a7a\u9650\u5236\u8fc7\u53bb\u7684\u2026\u2026\n\n\u9996\u5148\u6ce8\u610f\u5230\u5bf9\u4e8e\u6bcf\u4e2a\u5c0f\u9a6c\uff0c\u5728\u4efb\u610f\u65f6\u523b\u5b83\u7684\u6cd5\u529b\u503c\u53ea\u6709\u4e09\u79cd\u53ef\u80fd\uff1a\n\n- $s_i+kr_i(k\\in\\mathbb{Z})$\n- $kr_i(k\\in\\mathbb{Z})$\n- $m_i$\n\n\u6211\u4eec\u8003\u8651\u5bf9\u8fd9\u4e09\u79cd\u60c5\u51b5\u4e00\u4e00\u5206\u6790\uff0c\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u60c5\u51b5\u8fd9\u91cc\u7684 $k$ \u53ea\u53ef\u80fd\u7b49\u4e8e\u6211\u4eec\u5f85\u67e5\u8be2\u7684 $t$\uff0c\u5e76\u4e14\u8fd9\u79cd\u60c5\u51b5\u53ef\u80fd\u53d1\u751f\u5f53\u4e14\u4ec5\u5f53 $i$ \u6ca1\u6709\u88ab\u6e05\u7a7a\u8fc7\uff0c\u5e76\u4e14 $s_i+kr_i\\le m_i$\uff0c\u7b2c\u4e8c\u4e2a\u6761\u4ef6\u597d\u529e\uff0c\u6211\u4eec\u5982\u679c\u8bbe $a_i=\\lfloor\\dfrac{m_i-s_i}{r_i}\\rfloor$\uff08\u5982\u679c $r_i=0$ \u90a3\u4e48 $a_i=\\infty$\uff09\uff0c\u90a3\u4e48 $i$ \u7b26\u5408\u7b2c\u4e8c\u4e2a\u6761\u4ef6\u5f53\u4e14\u4ec5\u5f53 $a_i\\ge t$\uff0c\u7b2c\u4e00\u4e2a\u6761\u4ef6\u867d\u7136\u770b\u8d77\u6765\u68d8\u624b\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a `set` \u8868\u793a\u6ca1\u6709\u88ab\u6e05\u7a7a\u8fc7\u7684\u96c6\u5408\uff0c\u6bcf\u6b21\u8fdb\u884c\u67e5\u8be2\u64cd\u4f5c\u5c31\u5c06\u8fd9\u4e2a `set` \u4e2d\u5c5e\u4e8e $[l,r]$ \u7684\u5143\u7d20\u5168\u90e8\u5220\u9664\uff0c\u4e0d\u96be\u53d1\u73b0\u6bcf\u4e2a\u6570\u6700\u591a\u88ab\u5220\u9664\u4e00\u6b21\uff0c\u56e0\u6b64\u590d\u6742\u5ea6\u662f $n\\log n$ \u7684\u3002\u63a5\u4e0b\u6765\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u5982\u4f55\u7ef4\u62a4\u8fd9\u4e2a\u503c\uff0c\u663e\u7136\u5b83\u53ef\u4ee5\u8f6c\u5316\u4e3a $\\sum\\limits_{i=l}^r[a_i\\ge t]s_i+t\\sum\\limits_{i=l}^r[a_i\\ge t]r_i$\uff0c\u4e24\u90e8\u5206\u7ed3\u6784\u7c7b\u4f3c\uff0c\u56e0\u6b64\u7ef4\u62a4\u65b9\u6cd5\u4e5f\u7c7b\u4f3c\uff0c\u6ce8\u610f\u5230\u8fd9\u91cc\u6d89\u53ca\u4e24\u7ef4\uff0c$i\\in[l,r]$ \u548c $a_i\\ge t$\uff0c\u90a3\u4e48\u8be5\u64cd\u4f5c\u76f8\u5f53\u4e8e\u67e5\u8be2\u77e9\u5f62 $(l,a_i),(r,\\infty)$ \u4e2d\u6743\u503c\u7684\u548c\uff0c\u8fd9\u4e2a\u79bb\u6563\u5316+\u5efa\u7acb\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u5c31\u53ef\u4ee5\u641e\u5b9a\u4e86\uff0c\u5177\u4f53\u6765\u8bf4\u5148\u5c06\u6240\u6709 $(i,a_i)$ \u770b\u4f5c\u4e00\u4e2a\u70b9\u5e76\u66f4\u65b0\u5176\u5728\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u4e0a\u7684\u6743\u503c\uff0c\u6bcf\u6b21\u6211\u4eec\u5c06\u4e00\u4e2a\u6570\u4ece `set` \u4e2d\u5220\u9664\u5c31\u5c06\u5bf9\u5e94\u7684 $(i,a_i)$ \u7684\u8d21\u732e\u64a4\u9500\u6389\uff0c\u6b63\u786e\u6027\u663e\u7136\u3002\n\n\u641e\u6e05\u695a\u8fd9\u4e2a\u60c5\u51b5\u540e\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u987a\u5e26\u7740\u628a $i$ \u6ca1\u6709\u88ab\u6e05\u7a7a\u8fc7\u7684\u8d21\u732e\u90fd\u641e\u6e05\u695a\uff0c\u82e5 $i$ \u6ca1\u6709\u88ab\u6e05\u7a7a\u8fc7\uff0c\u53ef\u4ee5\u5206\u4e24\u79cd\u60c5\u51b5\uff0c$a_i\\ge t$ \u90a3\u4e48\u8d21\u732e\u4e3a $s_i+tr_i$\uff0c\u8fd9\u4e2a\u521a\u521a\u5df2\u7ecf\u63a2\u7a76\u8fc7\u4e86\uff0c$a_i<t$ \u90a3\u4e48\u8d21\u732e\u4e3a $m_i$\uff0c\u4e0d\u96be\u53d1\u73b0\u8fd9\u4e2a\u4e5f\u53ef\u4ee5\u5199\u6210\u77e9\u5f62\u548c\u7684\u5f62\u5f0f\uff0c\u540c\u6837\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u8ff0\u4e86\u3002\n\n$i$ \u6ca1\u6709\u88ab\u6e05\u7a7a\u8fc7\u7684\u60c5\u51b5\u641e\u6e05\u695a\u4e86\uff0c\u63a5\u4e0b\u6765\u8003\u8651 $i$ \u88ab\u6e05\u7a7a\u8fc7\u7684\u60c5\u51b5\uff0c\u663e\u7136\u5bf9\u4e8e\u4e00\u4e2a\u88ab\u6e05\u7a7a\u8fc7\u7684 $i$ \u5b83\u90fd\u6709\u4e00\u4e2a\u4e0a\u6b21\u88ab\u6e05\u7a7a\u7684\u65f6\u95f4 $T_i$\uff0c\u5728\u8fd9 $t-T_i$ \u5206\u949f\u5185\u5b83\u7684\u6cd5\u529b\u503c\u6700\u591a\u53ef\u4ee5\u4e0a\u6da8 $r_i(t-T_i)$\uff0c\u90a3\u4e48\u5b83\u7684\u8d21\u732e\u5c31\u662f $\\min(m_i,r_i(t-T_i))$\uff0c\u8fd8\u662f\u6309\u7167\u4e4b\u524d\u7684\u5957\u8def\uff0c\u8bb0 $b_i=\\lfloor\\dfrac{m_i}{r_i}\\rfloor$\uff0c\u8fd8\u662f\u5206\u4e24\u79cd\u60c5\u51b5\uff0c\u82e5 $b_i\\ge t-T_i$\uff0c\u90a3\u4e48\u8d21\u732e\u4e3a $r_i(t-T_i)$\uff0c\u5426\u5219\u8d21\u732e\u4e3a $m_i$\uff0c\u8fd9\u6837\u8fd8\u662f\u4e0d\u597d\u505a\uff0c\u56e0\u4e3a\u8fd9\u91cc\u7684 $T_i$ \u90fd\u662f\u4e92\u4e0d\u76f8\u540c\u7684\uff0c\u65e0\u6cd5\u76f4\u63a5\u7ef4\u62a4\u3002\u4e0d\u8fc7\u4e0d\u96be\u53d1\u73b0\u4e00\u4e2a\u6027\u8d28\uff0c\u90a3\u5c31\u662f\u4efb\u610f\u65f6\u523b $T_i$ \u90fd\u662f\u6210\u6bb5\u5206\u5e03\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u76f8\u540c\u7684 $T_i$ \u90fd\u662f\u4e00\u6bb5\u4e00\u6bb5\u7684\uff0c\u6211\u4eec\u8bb0\u4e09\u5143\u7ec4 $(l,r,t)$ \u8868\u793a $\\forall i\\in[l,r],T_i=t$\uff0c\u6211\u4eec\u8003\u8651\u5f00\u4e00\u4e2a `set` \u7ef4\u62a4\u6240\u6709\u4e09\u5143\u7ec4\u5e76\u5bf9\u6bcf\u4e2a\u4e09\u5143\u7ec4\u8ba1\u7b97\u8d21\u732e\u2014\u2014\u8fd9\u4e2a\u5c31\u53ef\u4ee5\u6309\u7167\u4e0a\u9762\u7684\u5957\u8def\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u4e86\uff0c\u76f8\u4fe1\u5982\u679c\u7406\u89e3\u4e86\u524d\u9762\u7684\u90e8\u5206\u90a3\u8fd9\u8fb9\u5e94\u8be5\u7684\u76f8\u5f53\u5bb9\u6613\u7684\u3002\u6211\u4eec\u8fd8\u53ef\u4ee5\u53d1\u73b0\u6240\u6709\u8ba1\u7b97\u8fc7\u8d21\u732e\u7684\u4e09\u5143\u7ec4 $(l',r',t')$ \u5fc5\u5b9a\u6ee1\u8db3 $l\\le l'\\le r'\\le r$\uff0c\u8fd9\u6837\u7684\u4e09\u5143\u7ec4\u5728\u67e5\u8be2\u8fc7\u540e\u90fd\u4f1a\u4ece `set` \u4e2d\u5220\u9664\uff0c\u6807\u51c6\u7684 ODT \u6a21\u578b\uff0c\u6309\u7167 P4690 [Ynoi2016] \u955c\u4e2d\u7684\u6606\u866b \u7684\u5957\u8def \u7ef4\u62a4\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $n\\log^2n$\uff0c\u7531\u4e8e\u8981\u7ef4\u62a4\u4e94\u4e2a\u4e8c\u7ef4\u7ebf\u6bb5\u6811\uff0c\u5e38\u6570\u5de8\u5927\uff0c\u4f46\u8fd8\u597d\u5361\u8fc7\u53bb\u4e86\uff08\uff08\uff08\n\n\u6700\u540e\u8bf4\u4e00\u53e5\uff0cwtm \u4e0d\u662f sb\uff0c\u53c8\u62ff\u672a\u53bb\u91cd\u7684\u6570\u7ec4\u79bb\u6563\u5316\uff0c\u8bdd\u8bf4[\u6070\u597d\u4e00\u5e74\u524d\u7684\u4eca\u5929](https://www.cnblogs.com/ET2006/p/12731774.html)\u4e5f\u72af\u8fc7\u8fd9\u4e2a\u9519\u8bef\u6765\u7740\u7684\uff1f\n\n```cpp\nconst int MAXN=1e5;\nconst int MAXP=MAXN*20;\nconst int INF=0x3f3f3f3f;\nint n,s[MAXN+5],r[MAXN+5],mx[MAXN+5],lim1[MAXN+5],lim2[MAXN+5];\nint key1[MAXN+5],key2[MAXN+5],uni1[MAXN+5],uni2[MAXN+5],num1=0,num2=0;\nstruct seg2d{\n\tstruct node{int ch[2];ll sum;} s[MAXP+5];\n\tint rt[MAXN+5],ncnt;\n\tseg2d(){ncnt=0;memset(rt,0,sizeof(rt));}\n\tvoid add_in(int &k,int l,int r,int x,int v){\n\t\tif(!k) k=++ncnt;s[k].sum+=v;\n\t\tif(l==r) return;int mid=l+r>>1;\n\t\tif(x<=mid) add_in(s[k].ch[0],l,mid,x,v);\n\t\telse add_in(s[k].ch[1],mid+1,r,x,v);\n\t}\n\tll query_in(int k,int l,int r,int ql,int qr){\n\t\tif(ql>qr||!k) return 0;int mid=l+r>>1;\n\t\tif(ql<=l&&r<=qr) return s[k].sum;\n\t\tif(qr<=mid) return query_in(s[k].ch[0],l,mid,ql,qr);\n\t\telse if(ql>mid) return query_in(s[k].ch[1],mid+1,r,ql,qr);\n\t\telse return query_in(s[k].ch[0],l,mid,ql,mid)+query_in(s[k].ch[1],mid+1,r,mid+1,qr);\n\t}\n\tvoid add_out(int x,int p,int v){\n\t\tfor(int i=x;i<=n;i+=(i&(-i))) add_in(rt[i],1,max(num1,num2),p,v);\n\t}\n\tll query_out(int x,int l,int r){\n\t\tll ret=0;\n\t\tfor(int i=x;i;i&=(i-1)) ret+=query_in(rt[i],1,max(num1,num2),l,r);\n\t\treturn ret;\n\t}\n\tll query(int l1,int r1,int l2,int r2){return query_out(r1,l2,r2)-query_out(l1-1,l2,r2);}\n} t_s,t_r,t_m,T_r,T_m;\nset<int> fst;\nstruct event{\n\tint l,r,t;\n\tevent(int _l=0,int _r=0,int _t=0):l(_l),r(_r),t(_t){}\n\tbool operator <(const event &rhs) const{return l<rhs.l;}\n};\nset<event> st;\nvoid split(int x){\n\tif(st.empty()) return;\n\tset<event>::iterator it=st.lower_bound(event(x+1,0,0));\n\tif(it==st.begin()) return;\n\t--it;event val=*it;if(val.r<=x) return;\n\tst.erase(st.find(val));\n\tst.insert(event(val.l,x,val.t));\n\tst.insert(event(x+1,val.r,val.t));\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++) scanf(\"%d%d%d\",&s[i],&mx[i],&r[i]);\n\tfor(int i=1;i<=n;i++){\n\t\tif(r[i]){\n\t\t\tlim1[i]=mx[i]/r[i];\n\t\t\tlim2[i]=(mx[i]-s[i])/r[i];\n\t\t} else lim1[i]=lim2[i]=INF;\n\t}\n\tfor(int i=1;i<=n;i++) key1[i]=lim1[i],key2[i]=lim2[i];\n\tsort(key1+1,key1+n+1);sort(key2+1,key2+n+1);key1[0]=-INF;key2[0]=-INF;\n\tfor(int i=1;i<=n;i++) if(key1[i-1]!=key1[i]) uni1[++num1]=key1[i];\n\tfor(int i=1;i<=n;i++) if(key2[i-1]!=key2[i]) uni2[++num2]=key2[i];\n\tfor(int i=1;i<=n;i++){\n\t\tlim1[i]=lower_bound(uni1+1,uni1+num1+1,lim1[i])-uni1;//remember to unique\n\t\tlim2[i]=lower_bound(uni2+1,uni2+num2+1,lim2[i])-uni2;\n//\t\tprintf(\"%d %d\\n\",lim1[i],lim2[i]);\n\t}\n\tfor(int i=1;i<=n;i++) fst.insert(i);\n\tfor(int i=1;i<=n;i++){\n\t\tt_s.add_out(i,lim2[i],s[i]);\n\t\tt_r.add_out(i,lim2[i],r[i]);\n\t\tt_m.add_out(i,lim2[i],mx[i]);\n\t} int qu;scanf(\"%d\",&qu);\n\twhile(qu--){\n\t\tint t,L,R;scanf(\"%d%d%d\",&t,&L,&R);\n\t\tint pos=lower_bound(uni2+1,uni2+num2+1,t)-uni2;\n\t\tll sums=t_s.query(L,R,pos,num2);\n\t\tll sumr=t_r.query(L,R,pos,num2);\n\t\tll summ=t_m.query(L,R,1,pos-1);\n//\t\tprintf(\"%d %lld %lld %lld\\n\",pos,sums,sumr,summ);\n//\t\tprintf(\"%lld\\n\",summ+sums+sumr*t);\n\t\tll sum=summ+sums+sumr*t;\n\t\tif(L!=1) split(L-1);split(R);\n\t\twhile(1){\n\t\t\tset<event>::iterator it=st.lower_bound(event(L,0,0));\n\t\t\tif(it==st.end()||(it->l)>R) break;event val=*it;\n\t\t\tint pp=lower_bound(uni1+1,uni1+num1+1,t-val.t)-uni1;\n\t\t\tll ssumr=T_r.query(val.l,val.r,pp,num1);\n\t\t\tll ssumm=T_m.query(val.l,val.r,1,pp-1);\n//\t\t\tprintf(\"%d %d %d %d\\n\",val.l,val.r,t-val.t,pp);\n//\t\t\tprintf(\"%lld %lld\\n\",ssumr,ssumm);\n\t\t\tsum+=ssumm+ssumr*(t-val.t);st.erase(st.find(val));\n\t\t} st.insert(event(L,R,t));\n\t\twhile(1){\n\t\t\tset<int>::iterator it=fst.lower_bound(L);\n\t\t\tif(it==fst.end()||(*it)>R) break;\n\t\t\tint x=(*it);\n\t\t\tt_s.add_out(x,lim2[x],-s[x]);\n\t\t\tt_r.add_out(x,lim2[x],-r[x]);\n\t\t\tt_m.add_out(x,lim2[x],-mx[x]);\n\t\t\tT_r.add_out(x,lim1[x],r[x]);\n\t\t\tT_m.add_out(x,lim1[x],mx[x]);\n\t\t\tfst.erase(fst.find(x));\n\t\t} printf(\"%lld\\n\",sum);\n\t}\n\treturn 0;\n}\n/*\n10\n0 4 2\n0 3 0\n0 96 7\n0 25 9\n0 90 4\n0 93 5\n0 87 3\n0 58 3\n0 65 8\n0 30 0\n10\n3 3 4\n10 1 7\n11 8 9\n19 4 9\n28 3 10\n33 5 10\n38 4 5\n45 5 7\n48 5 9\n58 1 4\n*/\n```\n\n",
        "postTime": 1618833826,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF453E Little Pony and Lord Tirek"
    },
    {
        "content": "\u60f3\u4e86\u4e00\u4e2a\u4e71\u641e\u505a\u6cd5\u5199\u4e86\u4e00\u4e2a\u665a\u4e0a\u2026\u2026\u5199\u7bc7\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0b\u901d\u53bb\u7684\u4e00\u4e2a\u665a\u4e0a\u2026\u2026\n\n### `FBI WARNING: Please don't imitate.`\n\n\u6211\u4eec\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u6570\u9700\u8981\u591a\u5c11\u65f6\u95f4\u8fbe\u5230\u6ee1\u9b54\u529b\u503c\uff0c\u5148\u79f0\u4e3a $b$ \u5427\u3002\u82e5 $r=0$, $b=+\\infty$\n\n\u56e0\u4e3a\u6709\u533a\u95f4\u6e05\u96f6\u64cd\u4f5c\uff0c\u6240\u4ee5\u6211\u4eec\u5bf9\u521d\u59cb\u503c\u4e3a $s$ \u548c $0$ \u90fd\u9700\u8981\u505a\u4e00\u6b21\u3002\n\n\u5982\u679c\u4e00\u4e2a\u4f4d\u7f6e\u662f\u5728 $t_0$ \u88ab\u6e05\u96f6\u7684\uff0c\u5b83\u9700\u8981 $b$ \u79d2\u8fbe\u5230\u6ee1\u9b54\u529b\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u5728 $[t,t+b)$ \u8fd9\u6bb5\u65f6\u95f4\u5185\u662f\u6ca1\u6ee1\u7684\uff0c$[t+b,+\\infty)$ \u662f\u6ee1\u7684\u3002\n\n\u5982\u679c\u4e00\u4e2a\u6bb5 $t_0$ \u76f8\u540c\uff0c\u6211\u4eec\u662f\u53ef\u4ee5\u5728\u4e3b\u5e2d\u6811\u8ba8\u8bba\u4e00\u4e0b $\\log n$ \u5f97\u5230\u7684\u3002\n\n\u90a3\u4e48\u89e3\u6cd5\u5c31\u5f88\u66b4\u529b\u4e86\u5427\u2026\u2026\u7528 $\\text{ODT}$ + \u4e3b\u5e2d\u6811\u53ef\u4ee5\u5f97\u5230\u770b\u4f3c $O(n\\log^2 n)$ \u7684\u89e3\u6cd5\u3002\n\n\u540e\u6765\u6211\u53d1\u73b0\u5c45\u7136\u662f $O(n\\log n)$ \u7684\uff01\n\n\u4e0b\u9762\u662f\u590d\u6742\u5ea6\u5206\u6790\uff1a\n\n\u4f60\u4e00\u6b21\u64cd\u4f5c\u6700\u591a\u589e\u52a0\u4e24\u4e2a $t_0$ \u76f8\u540c\u7684\u6bb5\uff0c\u6bcf\u6b21\u904d\u5386\u5b8c $[l,r]$ \u4e2d\u76f8\u540c\u7684\u6bb5\u540e\u4f1a\u628a\u8fd9\u4e9b\u6bb5\u5220\u6389\uff0c\u6240\u4ee5\u6700\u591a\u4f1a\u6709 $2\\times n$ \u6b21\u8be2\u95ee\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\n\n$Code\\ Below:$\n\n```cpp\n// Why always UKE???\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int maxn=100000+10;\nconst int inf=0x3f3f3f3f;\nint n,m,S[maxn],M[maxn],R[maxn],b[maxn],c[maxn];ll sumM[maxn];\n\n#define pll pair<ll,ll>\ninline pll operator + (pll a,pll b) {return make_pair(a.first+b.first,a.second+b.second);}\n\nstruct CM\n{\n    int op,rt[maxn],ls[maxn*20],rs[maxn*20],sz;\n    ll val[maxn*20],sum[maxn*20],w[maxn*20];\n    void update(int &x,int y,int l,int r,int pos,int p)\n    {\n        x=++sz;ls[x]=ls[y];rs[x]=rs[y];val[x]=val[y]+R[p];sum[x]=sum[y]+M[p]-((op==0)?S[p]:0);\n        if(l == r) return ;\n        int mid=(l+r)>>1;\n        if(pos <= mid) update(ls[x],ls[y],l,mid,pos,p);\n        else update(rs[x],rs[y],mid+1,r,pos,p);\n    }\n    pll query(int u,int v,int L,int R,int l,int r)\n    {\n        if(L <= l && r <= R) return make_pair(val[v]-val[u],sum[v]-sum[u]);\n        int mid=(l+r)>>1;pll ans=make_pair(0,0);\n        if(L <= mid) ans=ans+query(ls[u],ls[v],L,R,l,mid);\n        if(R > mid) ans=ans+query(rs[u],rs[v],L,R,mid+1,r);\n        return ans;\n    }\n}T[2];\n\nstruct node\n{\n    int l,r,val;\n    node(int _l=0,int _r=0,int _val=0):l(_l),r(_r),val(_val){}\n};\nset<node> s;\ninline bool operator < (const node &a,const node &b) {return a.l<b.l;}\n#define IT set<node>::iterator\ninline IT split(int x)\n{\n    IT it=s.lower_bound(node(x));\n    if(it!=s.end()&&it->l==x) return it;\n    it--;\n    int l=it->l,r=it->r,val=it->val;\n    s.erase(it);\n    s.insert(node(l,x-1,val));\n    return s.insert(node(x,r,val)).first;\n}\ninline ll ask(int t,int x,int y)\n{\n    IT R=split(y+1),L=split(x);\n    int l,r,val;ll ans=sumM[y]-sumM[x-1];pll res;\n    for(IT it=L;it!=R;it++)\n    {\n        l=it->l;r=it->r;val=it->val;\n        if(val==0) res=T[0].query(T[0].rt[l-1],T[0].rt[r],min(100001,t-val+1),100001,0,100001);\n        else res=T[1].query(T[1].rt[l-1],T[1].rt[r],min(100001,t-val+1),100001,0,100001);\n        ans+=res.first*(t-val)-res.second;\n    }\n    s.erase(L,R);\n    s.insert(node(x,y,t));\n    return ans;\n}\n\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++) scanf(\"%d%d%d\",&S[i],&M[i],&R[i]);\n    for(int i=1;i<=n;i++)\n    {\n        b[i]=(R[i]==0)?100001:(M[i]-S[i])/R[i]+((M[i]-S[i])%R[i]>0);\n        c[i]=(R[i]==0)?100001:M[i]/R[i]+(M[i]%R[i]>0);\n        sumM[i]=sumM[i-1]+M[i];\n    }\n    T[0].op=0;T[1].op=1;\n    for(int i=1;i<=n;i++) T[0].rt[i]=T[0].rt[i-1],T[0].update(T[0].rt[i],T[0].rt[i],0,100001,b[i],i);\n    for(int i=1;i<=n;i++) T[1].rt[i]=T[1].rt[i-1],T[1].update(T[1].rt[i],T[1].rt[i],0,100001,c[i],i);\n    s.insert(node(1,n,0));s.insert(node(n+1,n+1,0));\n    scanf(\"%d\",&m);\n    int t,l,r;\n    while(m--)\n    {\n        scanf(\"%d%d%d\",&t,&l,&r);\n        printf(\"%I64d\\n\",ask(t,l,r));\n    }\n    return 0;\n}\n```",
        "postTime": 1557971263,
        "uid": 35069,
        "name": "Owen_codeisking",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF453E \u3010Little Pony and Lord Tirek\u3011"
    },
    {
        "content": "\u53ef\u80fd\u6211\u6bd4\u8f83\u8822\uff0c\u4e00\u770b\u5230\u9898\u89e3\u533a\u91cc\u5199\u7684 polylog \u7684\u63cf\u8ff0\u5c31\u5934\u5927\uff0c\u4e8e\u662f\u7f16\u4e86\u4e2a\u601d\u8def\u6bd4\u8f83\u7b80\u5355\u7684\u505a\u6cd5\u3002\n\n\u5148\u4e0a\u4e2a set \u7ef4\u62a4\u989c\u8272\u6bb5\uff0c\u521d\u59cb\u7684\u90a3\u4e2a\u7279\u6b8a\u5904\u7406\u4e00\u4e0b\u3002\u73b0\u5728\u95ee\u9898\u53d8\u6210\u4e86 $\\mathcal{O}(n+m)$ \u6b21\u8be2\u95ee\u521d\u59cb\u5168 $0$\uff0c\u533a\u95f4 $[l,r]$ \u5728\u65f6\u95f4 $k$ \u65f6\u5019\u7684\u548c\uff0c\u5dee\u5206\u6210 $[1,r]$ \u7684\u51cf\u53bb $[1,l-1]$ \u7684\u3002\n\n\u626b\u63cf\u7ebf\u626b\u5e8f\u5217\u7ef4\uff0c\u5728\u65f6\u95f4\u7ef4\u4e0a\u6bcf\u6b21\u5c31\u662f\u4e00\u4e2a\u7b49\u5dee\u6570\u5217\u52a0\u548c\u4e00\u4e2a\u533a\u95f4\u52a0\u3002\u7136\u540e\u8be2\u95ee\u4e00\u4e2a\u5355\u70b9\u7684\u548c\u3002\u5bf9\u5dee\u5206\u6570\u7ec4\u5c31\u662f\u4e00\u4e2a \u533a\u95f4\u52a0 \u524d\u7f00\u548c \u95ee\u9898\uff0c\u4e0a\u7ebf\u6bb5\u6811\u5c31\u884c\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}((n+m)\\log m)$\uff0e\n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<queue>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#include<ctime>\n#include<random>\n#include<assert.h>\n#include<set>\n#define pb emplace_back\n#define mp make_pair\n#define fi first\n#define se second\n#define dbg(x) cerr<<\"In Line \"<< __LINE__<<\" the \"<<#x<<\" = \"<<x<<'\\n';\n#define dpi(x,y) cerr<<\"In Line \"<<__LINE__<<\" the \"<<#x<<\" = \"<<x<<\" ; \"<<\"the \"<<#y<<\" = \"<<y<<'\\n';\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int,int>pii;\ntypedef pair<ll,int>pli;\ntypedef pair<ll,ll>pll;\ntypedef pair<int,ll>pil;\ntypedef vector<int>vi;\ntypedef vector<ll>vll;\ntypedef vector<pii>vpii;\ntypedef vector<pil>vpil;\ntemplate<typename T>T cmax(T &x, T y){return x=x>y?x:y;}\ntemplate<typename T>T cmin(T &x, T y){return x=x<y?x:y;}\ntemplate<typename T>\nT &read(T &r){\n\tr=0;bool w=0;char ch=getchar();\n\twhile(ch<'0'||ch>'9')w=ch=='-'?1:0,ch=getchar();\n\twhile(ch>='0'&&ch<='9')r=r*10+(ch^48),ch=getchar();\n\treturn r=w?-r:r;\n}\ntemplate<typename T1,typename... T2>\nvoid read(T1 &x,T2& ...y){read(x);read(y...);}\nconst int mod=998244353;\ninline void cadd(int &x,int y){x=(x+y>=mod)?(x+y-mod):(x+y);}\ninline void cdel(int &x,int y){x=(x-y<0)?(x-y+mod):(x-y);}\ninline int add(int x,int y){return (x+y>=mod)?(x+y-mod):(x+y);}\ninline int del(int x,int y){return (x-y<0)?(x-y+mod):(x-y);}\nconst int N=100010;\nconst int M=100000;\nint n,m;\nint chu[N],lim[N],dt[N];\nll ans[N];\nstruct Node{\n\tint l,r,c;\n\tbool operator<(const Node &y)const{\n\t\treturn l==y.l?r<y.r:l<y.l;\n\t}\n};\nset<Node>S;\nauto split(int pos){\n\tif(pos==n+1)return S.end();\n\tauto it=S.lower_bound({pos,0,0});\n\tif(it->l==pos)return it;\n\t--it;\n\tint L=it->l,R=it->r,C=it->c;\n\tS.erase(it);\n\tS.insert({L,pos-1,C});\n\treturn S.insert({pos,R,C}).fi;\n}\nvpii vec[N];\n#define ls (x<<1)\n#define rs ((x<<1)|1)\nstruct SGT{\n\tll sum,tag;\n}tree[N<<2];\ninline void pushup(int x){\n\ttree[x].sum=tree[ls].sum+tree[rs].sum;\n}\ninline void pushdown(int x,int l,int r){\n\tif(tree[x].tag){\n\t\tll p=tree[x].tag,mid=(l+r)>>1;tree[x].tag=0;\n\t\ttree[ls].sum+=(mid-l+1)*p;tree[rs].sum+=(r-mid)*p;\n\t\ttree[ls].tag+=p;tree[rs].tag+=p;\n\t}\n}\nvoid modify(int x,int tl,int tr,int l,int r,ll v){\n\tif(tl>=l&&tr<=r){\n\t\ttree[x].sum+=(tr-tl+1)*v;\n\t\ttree[x].tag+=v;\n\t\treturn ;\n\t}\n\tint mid=(tl+tr)>>1;pushdown(x,tl,tr);\n\tif(mid>=l)modify(ls,tl,mid,l,r,v);\n\tif(mid<r)modify(rs,mid+1,tr,l,r,v);\n\tpushup(x); \n}\nll query(int x,int tl,int tr,int l,int r){\n\tif(tl>=l&&tr<=r)return tree[x].sum;\n\tint mid=(tl+tr)>>1;pushdown(x,tl,tr);ll s=0;\n\tif(mid>=l)s+=query(ls,tl,mid,l,r); \n\tif(mid<r)s+=query(rs,mid+1,tr,l,r);\n\tpushup(x);\n\treturn s;\n}\nsigned main(){\n\t#ifdef do_while_true\n//\t\tassert(freopen(\"data.in\",\"r\",stdin));\n//\t\tassert(freopen(\"data.out\",\"w\",stdout));\n\t#endif\n\tread(n);\n\tfor(int i=1;i<=n;i++)read(chu[i],lim[i],dt[i]);\n\tS.insert({1,n,0});\n\tread(m);\n\tfor(int i=1;i<=m;i++){\n\t\tint t,l,r;read(t,l,r);\n\t\tauto itr=split(r+1),itl=split(l),it=itl;\n\t\tfor(;it!=itr;++it){\n\t\t\tint l=it->l,r=it->r,c=it->c;\n\t\t\tif(c==0){\n\t\t\t\tfor(int j=l;j<=r;j++)\n\t\t\t\t\tans[i]+=min(chu[j]+1ll*dt[j]*t,1ll*lim[j]);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tvec[r].pb(mp(i,min(M,t-c)));\n\t\t\t\tif(l>1)vec[l-1].pb(mp(-i,min(M,t-c)));\n\t\t\t}\n\t\t}\n\t\tS.erase(itl,itr);\n\t\tS.insert({l,r,t});\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(dt[i]){\n\t\t\tif(dt[i]<=lim[i]){\n\t\t\t\t//[1,p] +dt +2dt +3dt + ... + p*dt\n\t\t\t\t//[p+1,M] : +lim[i]\n\t\t\t\tint p=lim[i]/dt[i];\n\t\t\t\tmodify(1,1,M,1,p,dt[i]);\n\t\t\t\tif(p<M)\n\t\t\t\t\tmodify(1,1,M,p+1,p+1,lim[i]-dt[i]*p);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tmodify(1,1,M,1,1,lim[i]);\n\t\t\t}\n\t\t}\n\t\tfor(auto j:vec[i]){\n\t\t\tint id=j.fi,p=j.se;\n\t\t\tif(id>0)ans[id]+=query(1,1,M,1,p);\n\t\t\telse ans[-id]-=query(1,1,M,1,p);\n\t\t}\n\t}\n\tfor(int i=1;i<=m;i++)cout << ans[i] << '\\n';\n    #ifdef do_while_true\n\t\tcerr<<'\\n'<<\"Time:\"<<1.0*clock()/CLOCKS_PER_SEC*1000<<\" ms\"<<'\\n';\n\t#endif\n\treturn 0;\n}\n```",
        "postTime": 1678450707,
        "uid": 223298,
        "name": "do_while_true",
        "ccfLevel": 8,
        "title": "\u300c\u9898\u89e3\u300dCodeforces 453E Little Pony and Lord Tirek"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u79cd\u4e0d\u9700\u8981\u4e3b\u5e2d\u6811\u7684\u79bb\u7ebf\u5355 log \u505a\u6cd5\u3002\n\n# \u9898\u610f\n\u7ed9\u51fa\u6570\u7ec4 $lim,c$\u3002\n\n\u7ef4\u62a4\u4e00\u4e2a\u6570\u7ec4 $s$\uff0c\u6bcf\u4e00\u79d2\u949f\uff0c$s_i=\\min(lim_i,s_i+c_i)$\uff0c\u6bcf\u6b21\u533a\u95f4\u8be2\u95ee\uff0c\u7ed9\u51fa\u5f53\u524d\u65f6\u95f4 $t$\uff0c\u95ee $s$ \u5f53\u524d\u65f6\u523b\u7684\u533a\u95f4\u548c\u662f\u591a\u5c11\u3002\n\n**\u6bcf\u6b21\u8be2\u95ee\u5b8c\u540e\u5c06 $s$ \u6570\u7ec4\u533a\u95f4\u7f6e\u4e3a $0$**\n\n## \u601d\u8def\n\n\u9996\u5148\u6211\u4eec\u770b\u5230\u63a8\u5e73\u64cd\u4f5c\u4e0d\u96be\u60f3\u5230 odt\uff0c\u6211\u4eec\u4f7f\u7528 odt \u7ef4\u62a4\u533a\u95f4\u65f6\u95f4\uff0c\u5c06\u8be2\u95ee\u62c6\u6210\u4e00\u4e2a\u4e00\u4e2a\u989c\u8272\u6bb5\u6765\u89e3\u51b3\uff0c\u6bcf\u6b21 assign \u7684\u65f6\u5019\u904d\u5386\u5f53\u524d\u533a\u95f4\u4e2d\u7684\u6bb5\u770b\u5f53\u524d\u6bb5\u65f6\u95f4\u8f83\u4e0a\u6b21\u66f4\u6539\u6539\u53d8\u4e86\u591a\u5c11\uff0c\u7531\u4e8e\u6bcf\u6b21\u64cd\u4f5c\u6700\u591a\u4ea7\u751f\u4e24\u4e2a\u533a\u95f4\uff0c\u6240\u4ee5\u533a\u95f4\u603b\u6570\u4e00\u5b9a\u662f $O(m)$ \u7ea7\u522b\u7684\u3002\n\n\u7ecf\u8fc7\u8fd9\u4e00\u6b21\u8f6c\u5316\u540e\u6211\u4eec\u5c31\u53ea\u9700\u8981\u5904\u7406\u4e00\u6bb5\u6570\u7ecf\u8fc7 $dt$ \u65f6\u95f4\u53d8\u5316\u540e\u7684\u548c\u4e86\uff0c\u533a\u95f4\u4e2d\u7684 $dt$ \u90fd\u76f8\u540c\uff0c\u521d\u59cb\u503c\u90fd\u4e3a $0$ \uff08\u9664\u4e86\u521d\u59cb\u72b6\u6001\uff09,\u5f62\u5f0f\u5316\u7684\uff0c\u6211\u4eec\u53ea\u8981\u6c42\u51fa\u4e0b\u9762\u8fd9\u4e2a\u5f0f\u5b50\u5373\u53ef\uff1a\n$$\n\\sum_{i=l}^r\\min(lim_i,dt\\cdot c_i)\n$$\n\u8fd9\u91cc\uff0c\u5904\u7406\u65b9\u5f0f\u5c31\u975e\u5e38\u591a\u4e86\u3002\n\n\u8fd9\u91cc\u7531\u4e8e $s$ \u6570\u7ec4\u521d\u59cb\u6709\u503c\uff0c\u53ef\u4ee5\u7279\u5224\u7b2c\u4e00\u6b21\u4fee\u6539\u5230\u5f53\u524d\u533a\u95f4\u7684\u60c5\u51b5\uff0c\u6b64\u65f6\u76f4\u63a5\u66b4\u529b\u5373\u53ef\uff0c\u66b4\u529b\u590d\u6742\u5ea6\u4e4b\u548c\u4e00\u5b9a\u662f $O(n)$ \u7684\uff0c\u539f\u56e0\u663e\u7136\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u6700\u591a\u88ab\u66b4\u529b\u8ba1\u7b97\u4e00\u6b21\u3002\n\n\u7136\u540e\u5176\u4ed6\u7684\u533a\u95f4\u90fd\u662f\u4e00\u6837\u7684\u5904\u7406\u65b9\u5f0f\uff0c\u6211\u4eec\u77e5\u9053\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u90fd\u4f1a\u6709\u4e00\u4e2a\u5206\u754c\u65f6\u523b\uff0c\u5728\u8fd9\u4e2a\u65f6\u523b\u4e4b\u524d $\\min$ \u53d6\u540e\u9762\u4e00\u90e8\u5206\uff0c\u4e4b\u540e\u53d6\u540e\u9762\u4e00\u90e8\u5206\uff0c\u89e3\u4e0d\u7b49\u5f0f\u5f97\u51fa $dt\\ge\\frac{lim_i}{c_i}$\uff0c\u5373\uff1a$\\left\\lceil\\frac{lim_i}{c_i}\\right\\rceil$\u3002\n\n\n\n\u8fd9\u91cc\u4ee3\u4ef7\u5c31\u53d8\u6210\u4e86\uff1a\n$$\ndt\\cdot\\sum_{i=l}^r c_i[dt<\\left\\lceil\\frac{lim_i}{c_i}\\right\\rceil]+\\sum_{i=l}^rlim_i[dt\\ge\\left\\lceil\\frac{lim_i}{c_i}\\right\\rceil\n$$\n\n\u8fd9\u91cc\u5c06\u8be2\u95ee\u79bb\u7ebf\u4e0b\u6765\u6309\u7167 $dt$ \u6392\u5e8f\uff0c\u4f4d\u7f6e\u6309\u7167 $\\left\\lceil\\frac{lim_i}{c_i}\\right\\rceil$ \u6392\u5e8f\uff0c\u6309\u987a\u5e8f\u5904\u7406\u8be2\u95ee\uff0c\u6bcf\u6b21\u5904\u7406\u8be2\u95ee\u524d\u8003\u8651\u8ba1\u7b97\u65b9\u5f0f\u53d1\u751f\u53d8\u5316\u7684\u4f4d\u7f6e\uff0c\u8fd9\u91cc\u7528\u4e00\u4e2a\u6307\u9488\u7ef4\u62a4\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u4e24\u4e2a$\\sum$ \u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u53ea\u4f1a\u6539\u53d8\u4e00\u6b21\u8ba1\u7b97\u65b9\u5f0f\uff0c\u6240\u4ee5\u8fd9\u4e00\u6bb5\u7684\u590d\u6742\u5ea6\u662f $O(n\\log n+m\\log n)$\n \u7684\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4+\u6392\u5e8f\u7684\u5c0f log \u901a\u8fc7\u8fd9\u9053\u9898\u3002\n\n\n## code\n\u6ca1\u6709\u5361\u5e38\uff0c\u5728\u6d1b\u8c37\u4e0a\u7b97\u8dd1\u7684\u6bd4\u8f83\u5feb\u7684\u3002\n```cpp\nstruct node\n{\n\tint l,r;\n\tmutable int w;\n\tinline node(int L,int R=0,int w=0):l(L),r(R),w(w){}\n\tinline bool operator<(const node& b)const{return l<b.l;}\n};\nset<node>s;\ninline set<node>::iterator split(int pos)\n{\n\tauto ii=s.lower_bound(node(pos));\n\tif(ii!=s.end()&&ii->l==pos)return ii;ii--;\n\tint l,r,w;l=ii->l,r=ii->r,w=ii->w;\n\ts.erase(ii);\n\ts.insert(node(l,pos-1,w));\n\treturn s.insert(node(pos,r,w)).X;\n}\nstruct ask\n{\n\tint l,r,t,i;\n\tinline bool operator<(const ask&b)const\n\t{\n\t\treturn t<b.t;\n\t}\t\n};\nvector<ask>v;\nconst int MAXN=1e5+10;\nint a[MAXN],lim[MAXN],c[MAXN];\npii op[MAXN];\nll ans[MAXN];\ninline void baoli(int l,int r,int t,int id)\n{\n\tfor(int i=l;i<=r;i++)ans[id]+=min((ll)lim[i],(ll)a[i]+(ll)c[i]*t);\t\n}\nstruct BIT\n{\n\tll t[MAXN];\n\tinline void add(int x,ll k)\n\t{\n\t\tfor(;x<MAXN;x+=x&-x)t[x]+=k;\n\t}\n\tinline ll ask(int x)\n\t{\n\t\tll ans=0;\n\t\tfor(;x;x-=x&-x)ans+=t[x];\n\t\treturn ans;\n\t}\n\tinline ll ask(int ii,int it){return ask(it)-ask(ii-1);}\n}t[2];\nsigned main()\n{\t\n\tios::sync_with_stdio(0),cin.tie(0),cout.tie(0);\n\tint n;cin>>n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>a[i]>>lim[i]>>c[i];\n\t\tif(c[i]) op[i]={(lim[i]+c[i]-1)/c[i],i};\n\t\telse op[i]={(int)1e9,i};\n\t}\n\ts.insert(node(1,n,-1));\n\tsort(op+1,op+n+1);\n\tint m;cin>>m;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint l,r,t;\n\t\tcin>>t>>l>>r;\n\t\tauto rr=split(r+1),L=split(l);\n\t\tfor(auto ii=L;ii!=rr;ii++)\n\t\t{\n\t\t\tif(ii->w>=0) v.push_back({ii->l,ii->r,t-ii->w,i});\n\t\t\telse baoli(ii->l,ii->r,t,i);\n\t\t}\n\t\ts.erase(L,rr);\n\t\ts.insert(node(l,r,t));\n\t}\n\tsort(v.begin(),v.end());\n\tfor(int i=1;i<=n;i++) t[0].add(i,c[i]);\n\tint j=1;\n\tfor(auto&p:v)\n\t{\n\t\tcmin(p.t,100000);\n\t\twhile(j<=n&&op[j].X<=p.t)\n\t\t{\n\t\t\tt[0].add(op[j].Y,-c[op[j].Y]);\n\t\t\tt[1].add(op[j].Y,lim[op[j].Y]);\n\t\t\tj++;\n\t\t}\n\t\tans[p.i]+=t[0].ask(p.l,p.r)*p.t+t[1].ask(p.l,p.r);\n\t}\n\tfor(int i=1;i<=m;i++)cout<<ans[i]<<'\\n';\n\treturn 0;\n} \n```\n",
        "postTime": 1671181325,
        "uid": 571229,
        "name": "__stick",
        "ccfLevel": 7,
        "title": "CF453E Little Pony and Lord Tirek"
    },
    {
        "content": "\u505a\u6cd5\u5c31\u662f\u8003\u8651\u4ece\u7b2c $1$ \u53f7\u9a6c\u5411\u7b2c $n$ \u79bb\u7ebf\u5904\u7406\uff0c\u5f53\u626b\u5230\u4e00\u4e2a\u8be2\u95ee\u7684\u5de6\u7aef\u70b9\u65f6\u5c06\u5176\u52a0\u5165\uff0c\u626b\u5230\u53f3\u7aef\u70b9\u65f6\u5c06\u5176\u5220\u9664\u3002~~\u8fd9\u5f88\u626b\u63cf\u7ebf~~\n\n\u73b0\u5728\u6211\u4eec\u9700\u8981\u8003\u8651\u7ef4\u62a4\u8fd9\u6837\u4e00\u4e2a\u4e1c\u897f\uff1a\u5bf9\u4e8e\u7b2c $k$ \u4e2a\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee $i$ \uff0c\u6211\u4eec\u5b9a\u4e49 $val_i$ \u4e3a\u5176\u4e0e\u4e0a\u4e00\u4e2a\u8be2\u95ee\u4e4b\u95f4\u7684\u8be2\u95ee\u5dee\u3002\u90a3\u4e48\u65b0\u589e\u7684\u7b54\u6848\u663e\u7136\u53ea\u4e0e $val_i$ \u6709\u5173\u3002\n\n\u5bf9\u4e8e $val_i \\leq \\lceil \\frac{m_k}{r_k} \\rceil$\uff0c$k$ \u5bf9 $i$ \u7684\u8d21\u732e\u4e3a $val_i \\cdot r_k$\u3002\n\n\u5bf9\u4e8e $val_i > \\lceil \\frac{m_k}{r_k} \\rceil$\uff0c$k$ \u5bf9 $i$ \u7684\u8d21\u732e\u4e3a $m_i$\u3002\n\n\u53ef\u4ee5\u5229\u7528\u4e00\u9897\u5e73\u8861\u6811\u6765\u89e3\u51b3\uff0c\u7528\u4e24\u79cdtag\u6765\u7ef4\u62a4\u5b9e\u73b0\u3002\n\n\u63d2\u5165\u7684\u65f6\u5019\u53ea\u4f1a\u6709\u4e00\u4e2a\u8be2\u95ee\u7684 $val$ \u53d1\u751f\u6539\u53d8\uff0c\u6211\u4eec\u628a\u5b83\u5220\u6389\uff0c\u7edf\u8ba1\u7b54\u6848\uff0c\u6539\u53d8 $val$ \u518d\u63d2\u56de\u53bb\u5373\u53ef\u3002\n\n\u5220\u9664\u65f6\u540c\u7406\uff0c\u53ea\u6709\u4e00\u4e2a $val$ \u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u5220\u6389\u540e\u52a0\u5165\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log{n})$ \n\n\u4ee3\u7801\u5982\u4e0b\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int N=100005,INF=1e9+7;\nint n;\nmap<int,int> ori;\nint s[N],r[N],m[N],t[N];\nvector<int> add[N],del[N];\n\ninline int read(){\n\tint ans=0;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9')c=getchar();\n\twhile(c>='0'&&c<='9')ans=(ans<<1)+(ans<<3)+c-'0',c=getchar();\n\treturn ans;\n}\n\nint son[N][2],f[N],sz[N],pd1[N],pd2[N],val[N],as[N],root;\nint ss[N],sl;\nbool get_s(int x){return son[f[x]][1]==x;}\nvoid ad1(int x,int vl){\n\tpd1[x]+=vl;\n\tas[x]+=vl*val[x];\n}\nvoid ad2(int x,int vl){\n\tpd2[x]+=vl;\n\tas[x]+=vl;\n}\nvoid pushdown(int x){\n\tif(son[x][1]){\n\t\tad1(son[x][1],pd1[x]);\n\t\tad2(son[x][1],pd2[x]);\n\t}\n\tif(son[x][0]){\n\t\tad1(son[x][0],pd1[x]);\n\t\tad2(son[x][0],pd2[x]);\n\t}\n\tpd1[x]=pd2[x]=0;\n}\nvoid rotate(int x){\n\tint fx=f[x],k=get_s(x);\n\tf[x]=f[fx];if(f[fx])son[f[fx]][get_s(fx)]=x;\n\tif(son[x][k^1])f[son[x][k^1]]=fx;son[fx][k]=son[x][k^1];\n\tson[x][k^1]=fx;f[fx]=x;\n}\nvoid splay(int x,int aim=0){\n\tint y=x;\n\tss[sl=1]=y;\n\twhile(f[y])ss[++sl]=y=f[y];\n\twhile(sl)pushdown(ss[sl--]);\n\twhile(f[x]!=aim){\n\t\tif(f[f[x]]!=aim){\n\t\t\tif(get_s(f[x])==get_s(x))rotate(f[x]);\n\t\t\telse rotate(x);\n\t\t}\n\t\trotate(x);\n\t}\n\tif(!aim)root=x;\n}\nvoid build(){\n\troot=N-2;\n\tval[root]=-INF;\n\tson[root][1]=N-1;\n\tf[N-1]=root;\n\tval[N-1]=INF;\n}\nbool cmp(int x,int y){\n\tif(val[x]==val[y])return x<y;\n\treturn val[x]<val[y];\n}\nint pre(){\n\tint nw=son[root][0];\n\twhile(son[nw][1])nw=son[nw][1];\n\treturn nw;\n}\nint suf(){\n\tint nw=son[root][1];\n\twhile(son[nw][0])nw=son[nw][0];\n\treturn nw;\n}\nvoid insert(int x){\n\tint nw=root;\n\tpushdown(nw);\n\twhile(son[nw][cmp(nw,x)])nw=son[nw][cmp(nw,x)],pushdown(nw);\n\tson[nw][cmp(nw,x)]=x;\n\tf[x]=nw;\n\tsplay(x);\n}\nvoid dfss(int u){\n\tpushdown(u);\n\tif(son[u][0])dfss(son[u][0]);\n\tif(son[u][1])dfss(son[u][1]);\n}\nvoid delet(int x){\n\tsplay(x);\n\tint sf=suf(),pr=pre();\n\tsplay(sf);\n\tsplay(pr,sf);\n\tson[pr][1]=0;\n}\nset<int> st;\nset<int>::iterator it;\nvoid ad(int x){\n\tit=st.lower_bound(t[x]);\n\tif(it!=st.end()){\n\t\tint nxt=ori[*it];\n\t\tdelet(nxt);\n\t\tval[nxt]=t[nxt]-t[x];\n\t\tinsert(nxt);\n\t}\n\tint nm=*(--it);\n\tval[x]=t[x]-nm;\n\tinsert(x);\n\tst.insert(t[x]);\n}\nvoid de(int x){\n\tit=st.lower_bound(t[x]);\n\tint nm=*(--it);\n\t++it;++it;\n\tif(it!=st.end()){\n\t\tint nxt=ori[*it];\n\t\tdelet(nxt);\n\t\tval[nxt]=t[nxt]-nm;\n\t\tinsert(nxt);\n\t}\n\tdelet(x);\n\tst.erase(t[x]);\n}\nvoid solve(int x){\n\tif(r[x]){\n\t\tval[N-3]=m[x]/r[x];\n\t\tinsert(N-3);\n\t\tad1(son[root][0],r[x]);\n\t\tad2(son[root][1],m[x]);\n\t\tdelet(N-3);\n\t\tit=st.begin();\n\t\tit++;if(it==st.end())return;\n\t\tint nm=ori[*it];\n\t\tif(t[nm]>val[N-3])as[nm]-=m[x];\n\t\telse as[nm]-=r[x]*t[nm];\n\t\tas[nm]+=min(r[x]*t[nm]+s[x],m[x]);\t\n\t}\n\telse{\n\t\tit=st.begin();\n\t\tit++;if(it==st.end())return;\n\t\tint nm=ori[*it];\n\t\tas[nm]+=s[x];\n\t}\n}\nsigned main(){\n\tscanf(\"%lld\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\ts[i]=read();\n\t\tm[i]=read();\n\t\tr[i]=read();\n\t}\n\tint mm;\n\tscanf(\"%lld\",&mm);\n\tfor(int i=1;i<=mm;i++){\n\t\tt[i]=read();\n\t\tint l=read(),r=read();\n\t\tadd[l].push_back(i);\n\t\tdel[r].push_back(i);\n\t\tori[t[i]]=i;\n\t}\n\tst.insert(0);\n\tbuild();\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=0;j<(int)add[i].size();j++)ad(add[i][j]);\n\t\tsolve(i);\n\t\tfor(int j=0;j<(int)del[i].size();j++)de(del[i][j]);\n\t}\n\tfor(int i=1;i<=mm;i++)printf(\"%lld\\n\",as[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1648435818,
        "uid": 181521,
        "name": "\u73c8\u4e50\u552f\u6bd2",
        "ccfLevel": 7,
        "title": "CF453E\u9898\u89e3"
    },
    {
        "content": "\u5bf9\u4e00\u4e2a\u4e0a\u9650\u53d6 $\\min$ \u611f\u89c9\u5f88\u6076\u5fc3\uff0c\u6240\u4ee5\u62ff\u6700\u66b4\u529b\u7684\u5206\u5757\u53bb\u641e\u3002\n\n\u6563\u5757\u66b4\u529b\u641e\u5c31\u884c\u3002\n\n\u6574\u5757\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e2a\u4e1c\u897f\u5230\u8fbe\u7684\u4e0a\u9650\u7684\u65f6\u95f4\u7b97\u51fa\u6765\uff0c\u7136\u540e\u653e\u5230\u5757\u91cc\u6392\u5e8f\u3002\u5047\u8bbe\u5757\u91cc\u4e0a\u6b21\u7684\u63a5\u89e6\u65f6\u95f4\u662f\u7edf\u4e00\u7684\uff0c\u90a3\u4e48\u8fd9\u6b21\u67e5\u8be2\u4f1a\u662f\u6392\u5e8f\u540e\u4e00\u6bb5\u524d\u7f00\u7684\u4e0a\u9650\u7684\u548c\uff0c\u548c\u4e00\u6bb5\u540e\u7f00\u7684\u589e\u957f\u901f\u5ea6\u7684\u548c\u3002\u7531\u4e8e\u8fd9\u4e9b\u4e1c\u897f\u662f\u4e0d\u4f1a\u53d8\u7684\u6240\u4ee5\u6211\u4eec\u9884\u5904\u7406\u5373\u53ef\u3002\u7136\u540e\u4e8c\u5206\u3002\n\n\u4e0d\u7edf\u4e00\u600e\u4e48\u529e\uff1f\u6211\u4eec\u8003\u8651\u8fd8\u662f\u76f4\u63a5\u66b4\u529b\u904d\u5386\u6574\u4e2a\u5757\u3002\u56e0\u4e3a\u6bcf\u6b21\u8be2\u95ee\u81f3\u591a\u53ea\u4f1a\u8d21\u732e $O(1)$ \u4e2a\u4e0d\u6574\u7684\u5757\u3002\u6240\u4ee5\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f\u6b63\u786e\u7684\u3002\n\n\u603b\u590d\u6742\u5ea6\u662f $O(n\\sqrt n\\log n)$\u3002\u53ef\u4ee5\u901a\u8fc7\u3002\n\nhttps://codeforces.com/contest/453/submission/190186598\n\n\u53d1\u73b0\u590d\u6742\u5ea6\u74f6\u9888\u5728\u4e8c\u5206\u3002\n\n\u6211\u4eec\u53d1\u73b0\u6bcf\u6b21\u65b0\u589e\u7684\u65f6\u95f4\u5982\u679c $\\ge 10^5$\uff0c\u90a3\u5176\u5b9e\u548c $10^5$ \u6ca1\u5565\u533a\u522b\u3002\u8fd9\u542f\u53d1\u6211\u4eec\u5bf9\u6bcf\u4e2a\u5757\u9884\u5904\u7406\u3002\n\n\u76f4\u63a5\u8bb0\u5f55\u4e00\u4e2a $pre_{p,i}$ \u548c $suf_{p,i}$ \u8868\u793a\u5728\u5757 $p$ \u91cc\u67e5\u8be2 $i$ \u65f6\u67e5\u8be2\u5230\u7684\u524d\u7f00\u548c\u540e\u7f00\u7684\u503c\u5373\u53ef\u3002\n\n\u8fd9\u6837\u7406\u8bba\u590d\u6742\u5ea6\u4e3a $O(n\\sqrt n)$\u3002\u4f46\u662f\u7531\u4e8e\u7a7a\u95f4\u95ee\u9898\u6240\u4ee5\u8981\u9002\u5f53\u8c03\u5927\u5757\u957f\uff0c\u6700\u7ec8\u6548\u7387\u4e0d\u5982 $O(n\\sqrt n\\log n)$\u3002\n\nhttps://codeforces.com/contest/453/submission/190189004",
        "postTime": 1674465842,
        "uid": 115936,
        "name": "\u6cf7\u6cfd\u4e09\u6708",
        "ccfLevel": 0,
        "title": "CF453E"
    },
    {
        "content": "\u4e3a\u4e86\u548c\u6211\u7684\u4ee3\u7801\u7edf\u4e00\uff0c$r_i$ \u8868\u793a\u7684\u662f\u4e0a\u9650\uff0c$k_i$ \u8868\u793a\u7684\u662f\u589e\u957f\u901f\u5ea6\u3002\n\n\u6211\u4eec\u8003\u8651\uff0c\u5982\u679c\u4e00\u4e2a\u533a\u95f4 $[l, r]$ \u5728 $t$ \u9700\u8981\u6e05\u96f6\uff0c\u800c\u4e0a\u4e00\u6b21\u6e05\u96f6\u7684\u65f6\u95f4 $t_0$ \u4e5f\u76f8\u540c\uff0c\u90a3\u4e48\u8fd9\u4e00\u6b21\u7684\u7b54\u6848\u4e3a\u5bf9\u4e8e $\\frac{r_i}{k_i}\\geq t-t_0$ \u7684\u4f4d\u7f6e $i$ \u7684 $(t-t_0)\\sum k_i$ \u52a0\u4e0a $\\frac{r_i}{k_i}<t-t_0$ \u7684\u4f4d\u7f6e $i$ \u7684 $\\sum r_i$\u3002\n\n\u8fd9\u662f\u4e00\u4e2a\u4e8c\u7ef4\u6570\u70b9\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e3b\u5e2d\u6811\u89e3\u51b3\u3002\n\n\u4e4b\u540e\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u77e5\u9053\u54ea\u4e9b\u533a\u95f4\u7684 $t_0$ \u76f8\u540c\u3002\u5c31\u50cf $\\text{ODT}$ \u7684\u90a3\u6837\uff0c\u8003\u8651\u7528 `std::set` \u7ef4\u62a4\uff0c\u6bcf\u6b21\u533a\u95f4\u6e05\u96f6\u5c31\u628a\u65e7\u533a\u95f4\u5220\u9664\uff0c\u65b0\u7684\u533a\u95f4\u63d2\u5165\u3002\u6bcf\u6b21\u53ea\u4f1a\u63d2\u5165\u4e00\u4e2a\uff0c\u6240\u4ee5\u5143\u7d20\u4e2a\u6570\u662f $O(n)$ \u7684\u3002\n\n\u521d\u59cb\u503c\u4e0d\u592a\u597d\u641e\uff0c\u6211\u4eec\u53e6\u5f00\u4e00\u4e2a set \u8ba1\u7b97\u5c31\u597d\uff08\u5e76\u67e5\u96c6\uff0c\u7ebf\u6bb5\u6811\uff0c\u5565\u90fd\u884c\uff09\u3002\n\n\u6ce8\u610f $k_i=0$ \u4ee5\u53ca $k_i=r_i=0$ \u4e24\u79cd\u60c5\u51b5\u7684\u7279\u5224\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n\\log n)$\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int Maxn = 100005;\nint n, q, tree_ct, k[Maxn], r[Maxn], ord[Maxn], Head[Maxn];\nstruct Tree\n{\n\tint lson, rson;\n\tlong long k, b;\n} tree[24 * Maxn];\nvoid build_first(int root, int lt, int rt)\n{\n\tif (lt + 1 == rt)\n\t\ttree[root].k = k[lt], tree[root].b = 0;\n\telse\n\t{\n\t\tint mid = (lt + rt) >> 1;\n\t\ttree[root].lson = ++tree_ct;\n\t\ttree[root].rson = ++tree_ct;\n\t\tbuild_first(tree[root].lson, lt, mid);\n\t\tbuild_first(tree[root].rson, mid, rt);\n\t\ttree[root].k = tree[tree[root].lson].k + tree[tree[root].rson].k;\n\t\ttree[root].b = tree[tree[root].lson].b + tree[tree[root].rson].b;\n\t}\n}\nvoid build(int root, int las, int lt, int rt, int pos)\n{\n\tif (lt + 1 == rt)\n\t\ttree[root].k = 0, tree[root].b = r[lt];\n\telse\n\t{\n\t\tint mid = (lt + rt) >> 1;\n\t\tif (pos >= mid)\n\t\t{\n\t\t\ttree[root].rson = ++tree_ct;\n\t\t\ttree[root].lson = tree[las].lson;\n\t\t\tbuild(tree[root].rson, tree[las].rson, mid, rt, pos);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttree[root].lson = ++tree_ct;\n\t\t\ttree[root].rson = tree[las].rson;\n\t\t\tbuild(tree[root].lson, tree[las].lson, lt, mid, pos);\n\t\t}\n\t\ttree[root].k = tree[tree[root].lson].k + tree[tree[root].rson].k;\n\t\ttree[root].b = tree[tree[root].lson].b + tree[tree[root].rson].b;\n\t}\n}\npair <long long, long long> operator + (pair <long long, long long> a, pair <long long, long long> b)\n{\n\treturn make_pair(a.first + b.first, a.second + b.second);\n}\npair <long long, long long> ask(int root, int lt, int rt, int L, int R)\n{\n\tif (lt == L && rt == R) return make_pair(tree[root].k, tree[root].b);\n\telse\n\t{\n\t\tint mid = (lt + rt) >> 1;\n\t\tif (L >= mid) return ask(tree[root].rson, mid, rt, L, R);\n\t\telse if (R <= mid) return ask(tree[root].lson, lt, mid, L, R);\n\t\telse return ask(tree[root].lson, lt, mid, L, mid) + ask(tree[root].rson, mid, rt, mid, R);\n\t}\n}\nstruct sta\n{\n\tint lt, rt;\n\tdouble t;\n\tbool operator < (const sta &tmp) const\n\t{\n\t\treturn lt < tmp.lt;\n\t}\n};\nset <sta> Se;\nset <sta> :: iterator spilt(int x)\n{\n\tif (x > n) return Se.end();\n\tsta tmp = *(--Se.upper_bound((sta){x, 0, 0}));\n\tSe.erase(tmp);\n\tif (tmp.lt != x) Se.insert((sta){tmp.lt, x - 1, tmp.t});\n\treturn Se.insert((sta){x, tmp.rt, tmp.t}).first;\n}\npair <long long, long long> cal(double t, int lt, int rt)\n{\n\tint L = 0, R = n;\n\twhile (L + 1 <= R)\n\t{\n\t\tint mid = (L + R + 1) >> 1;\n\t\tif (r[ord[mid]] > t * k[ord[mid]]) R = mid - 1;\n\t\telse L = mid;\n\t}\n\treturn ask(Head[L], 1, n + 1, lt, rt + 1);\n}\nset <pair <int, int> > S;\nint main()\n{\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tint x;\n\t\tscanf(\"%d%d%d\", &x, &r[i], &k[i]), ord[i] = i;\n\t\tif (!r[i] && !k[i]) r[i] = 1;\n\t\tif (k[i])\n\t\t\tSe.insert((sta){i, i, -x / (double) k[i]});\n\t\telse Se.insert((sta){i, i, 0}), S.insert(make_pair(i, x));\n\t}\n\tS.insert(make_pair(n + 1, 0));\n\tHead[0] = ++tree_ct;\n\tbuild_first(Head[0], 1, n + 1);\n\tsort(ord + 1, ord + 1 + n, [](int x, int y){return r[x] * (long long) k[y] < r[y] * (long long) k[x];});\n\tfor (int i = 1; i <= n; i++)\n\t\tHead[i] = ++tree_ct, build(Head[i], Head[i - 1], 1, n + 1, ord[i]);\n\tscanf(\"%d\", &q);\n\twhile (q--)\n\t{\n\t\tint t, lt, rt;\n\t\tlong long ans = 0;\n\t\tscanf(\"%d%d%d\", &t, &lt, &rt);\n\t\tset <pair <int, int> > :: iterator it;\n\t\twhile (S.size() > 1 && (it = S.lower_bound(make_pair(lt, 0))) -> first <= rt)\n\t\t{\n\t\t\tans += it -> second;\n\t\t\tS.erase(it);\n\t\t}\n\t\tset <sta> :: iterator it_r = spilt(rt + 1), it_l = spilt(lt), tmp_it;\n\t\ttmp_it = it_l;\n\t\tfor (; it_l != it_r; it_l++)\n\t\t{\n\t\t\tpair <long long, long long> now = cal(t - it_l -> t, it_l -> lt, it_l -> rt);\n\t\t\tans += now.second + (long long) (now.first * (t - it_l -> t) + 0.5);\n\t\t}\n\t\tSe.erase(tmp_it, it_r);\n\t\tSe.insert((sta){lt, rt, (double) t});\n\t\tprintf(\"%lld\\n\", ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1603248304,
        "uid": 49093,
        "name": "_sys",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF453E \u3010Little Pony and Lord Tirek\u3011"
    },
    {
        "content": " http://www.elijahqi.win/archives/3943\n https://blog.csdn.net/elijahqi/article/details/81013860\n \n \u9898\u76ee\u80cc\u666f\n\n\u534a\u4eba\u9a6c\u63d0\u96f7\u514b\u662f\u201c\u6211\u7684\u5c0f\u9a6c\u9a79\uff1a\u53cb\u8c0a\u662f\u9b54\u6cd5\u201d\u7b2c\u56db\u5b63\u6700\u540e\u4e24\u96c6\u7684\u5927\u53cd\u6d3e\u3002\u5728\u201c\u95ea\u95ea\u738b\u56fd\uff08\u4e0a\uff09\u201d\u4e2d\uff0c\u63d0\u96f7\u514b\u4ece\u5854\u4ed6\u6d1b\u65af\u9003\u4e86\u51fa\u6765\u3002\u4e3a\u4e86\u53d8\u5f97\u66f4\u52a0\u5f3a\u5927\uff0c\u4ed6\u8fd8\u5438\u53d6\u4e86\u5c0f\u9a6c\u4eec\u7684\u9b54\u6cd5\u3002\n\n\u9898\u76ee\u63cf\u8ff0\n\n\u63d0\u96f7\u514b\u7684\u6838\u5fc3\u6280\u80fd\u662f\u6cd5\u529b\u5438\u53d6\u3002\u8fd9\u4e2a\u6280\u80fd\u53ef\u4ee5\u5438\u6536\u4e00\u4e2a\u9b54\u6cd5\u751f\u7269\u7684\u6240\u6709\u9b54\u529b\u5e76\u628a\u5b83\u4eec\u4ea4\u7ed9\u65bd\u6cd5\u8005\u3002\n\n\u73b0\u5728\u6211\u4eec\u628a\u8fd9\u4e2a\u95ee\u9898\u7b80\u5316\uff0c\u5047\u8bbe\u4f60\u6709n\u53ea\u5c0f\u9a6c\uff08\u7f16\u53f7\u4ece1\u5230n\uff09\u3002\u6bcf\u53ea\u5c0f\u9a6c\u6709\u4e09\u79cd\u5c5e\u6027\u3002\n\nsi\uff1a\u65f6\u95f4\u4e3a0\u65f6\u8fd9\u53ea\u5c0f\u9a6c\u62e5\u6709\u7684\u6cd5\u529b\u503c\n\nmi\uff1a\u8fd9\u53ea\u5c0f\u9a6c\u53ef\u4ee5\u62e5\u6709\u7684\u6700\u5927\u6cd5\u529b\u503c\n\nri\uff1a\u8fd9\u53ea\u5c0f\u9a6c\u5355\u4f4d\u65f6\u95f4\u5185\u56de\u590d\u7684\u6cd5\u529b\u503c\n\n\u63d0\u96f7\u514b\u4f1a\u7ed9\u51fam\u6761\u6307\u4ee4\uff0c\u6bcf\u4e00\u6761\u90fd\u53ef\u4ee5\u88ab\u63cf\u8ff0\u4e3a3\u4e2a\u6574\u6570\uff1ati\uff0cli\uff0cri\u3002\u8868\u793a\u5728\u65f6\u95f4\u4e3ati\u65f6\uff0c\u63d0\u96f7\u514b\u4f1a\u4ece\u7f16\u53f7\u4e3ali~ri\u7684\u5c0f\u9a6c\u4e2d\u5438\u53d6\u9b54\u529b\uff08\u5305\u62ecli\uff0cri\uff09\uff0c\u6211\u4eec\u4f1a\u6709\u5e8f\u5730\u7ed9\u51fam\u6761\u6307\u4ee4\uff0c\u8bf7\u4f60\u7b97\u51fa\u6bcf\u4e00\u6761\u6307\u4ee4\u4e4b\u540e\u63d0\u96f7\u514b\u53ef\u4ee5\u5438\u53d6\u591a\u5c11\u70b9\u9b54\u529b\u3002\n\n\u8f93\u5165\u8f93\u51fa\u683c\u5f0f\n\n\u8f93\u5165\u683c\u5f0f\uff1a\n\n\u7b2c\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u6574\u6570N\uff081\u2009\u2264\u2009N\u2009\u2264\u20091e5\uff09-\u5c0f\u9a6c\u7684\u7f16\u53f7\u3002\u63a5\u4e0b\u6765\u7684n\u884c\u6bcf\u884c\u5305\u542b\u4e09\u4e2a\u6574\u6570Si\uff0c\u2009mi\uff0c\u2009ri\uff080\u2009\u2264\u2009si\u2009\u2264\u2009mi \u2264\u20091e5\uff1b0\u2009\u2264\u2009ri\u2009\u2264\u20091e5\uff09\uff0c\u8868\u793a \u4e00\u53ea\u5c0f\u9a6c\u3002\n\n\u4e0b\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u6574\u6570m\uff081\u2009\u2264\u2009M\u2009\u2264\u20091e5\uff09-\u6307\u4ee4\u6570\u3002\u63a5\u4e0b\u6765\u7684m\u884c\u5305\u542b\u4e09\u4e2a\u6574\u6570Ti\uff0c\u2009li\uff0c\u2009ri\uff080\u2009\u2264\u2009ti\u2009\u2264\u20091e9\uff1b1\u2009\u2264\u2009li\u2009\u2264\u2009ri\u2009\u2264\u2009N\uff09\uff0c\u8868\u793a\u63d0\u96f7\u514b\u7684\u6307\u4ee4\u3002\u6240\u6709\u7684\u6307\u4ee4\u5728ti\u9012\u589e\u7684\u987a\u5e8f\u4e0b\u7ed9\u51fa\u3002\n\n\u8f93\u51fa\u683c\u5f0f\uff1a\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6307\u4ee4\uff0c\u8f93\u51fa\u4e00\u884c\uff0c\u5305\u542b\u4e00\u4e2a\u6574\u6570\uff1a\u63d0\u96f7\u514b\u8fd9\u4e00\u6b21\u4e00\u5171\u5438\u6536\u4e86\u591a\u5c11\u9b54\u529b\u3002\n\n\u8bbetag\u8868\u793a \u4e00\u4e2a\u533a\u95f4\u662f\u5426\u88ab\u4ece\u521d\u59cb\u72b6\u6001\u4fee\u6539\u8fc7 \u5982\u679c\u4fee\u6539\u8fc7 \u8fd9\u4e2a\u533a\u95f4\u662f\u5426\u88ab\u5b8c\u6574\u7684\u4fee\u6539\u8fc7\n\n\u5982\u679c\u5b8c\u6574\u7684\u4fee\u6539\u8fc7 \u90a3\u4e48\u5c31\u9488\u5bf9\u6574\u4e2a\u533a\u95f4\u5185\u751f\u957f\u65f6\u95f4\u6392\u5e8f \u7136\u540e\u4e8c\u5206\u51fa\u6211\u4e0a\u4e00\u6b21\u4fee\u6539\u5230\u8fd9\u6b21\u8be2\u95ee\u65f6\u95f4\u5728\u54ea\u91cc \u7136\u540e\u524d\u9762\u7684\u5c31\u662f\u5168\u90e8\u90fd\u957f\u6ee1\u7684 \u540e\u9762\u5c31\u662f\u6ca1\u6709\u957f\u6ee1\u7684 \u90a3\u4e48\u9884\u5904\u7406\u51fa\u5173\u4e8em\u7684\u524d\u7f00\u548c\u518d\u9884\u5904\u7406\u51fa\u5173\u4e8er\u7684\u540e\u7f00\u548c \u56de\u7b54\u7684\u65f6\u5019\u4e8c\u5206\u4e00\u4e0b\u518do(1)\u56de\u7b54\u5373\u53ef\n\n\u5982\u679c\u4e24\u4e2a\u533a\u95f4\u88ab\u4fee\u6539\u6210\u4e00\u6837\u7684\u9700\u8981\u5408\u5e76\u6807\u8bb0 \u53ea\u6709\u5f53\u6807\u8bb0\u4e0d\u540c\u7684\u65f6\u5019\u624d\u9700\u8981\u4e0b\u653e \u5982\u679c\u533a\u95f4\u6807\u8bb0\u4e0d\u540c\u5219\u9700\u8981\u7ee7\u7eed\u5206\u6cbb\u4e0b\u53bb\u505a \u8fd9\u6837\u590d\u6742\u5ea6\u53ef\u4ee5\u8bc1\u660e\u662f$n\\times log(n)^2$\u7684 \u8003\u8651\u6bcf\u6b21\u8986\u76d6\u4e00\u4e2a\u533a\u95f4\u6700\u591a\u628a\u4e00\u4e2a\u533a\u95f4\u53d8\u6210\u4e24\u4e2a \u6211\u5982\u679c\u9700\u8981\u66b4\u529b\u53bb\u505a\u8fd9\u6837\u5f88\u591a\u6bb5\u7684\u533a\u95f4\u7684\u8bdd\u6211\u540e\u9762\u4e00\u5b9a\u4f1a\u628a\u4ed6\u4eec\u518d\u5408\u6210\u4e00\u6bb5\u7684\n```\n#include<bits/stdc++.h>\n#define lc (x<<1)\n#define rc (x<<1|1)\n#define ll long long\nusing namespace std;\ninline char gc(){\n\tstatic char now[1<<16],*S,*T;\n\tif (T==S){T=(S=now)+fread(now,1,1<<16,stdin);if (T==S) return EOF;}\n\treturn *S++;\n}\ninline int read(){\n\tint x=0,f=1;char ch=gc();\n\twhile(!isdigit(ch)) {if (ch=='-')f=-1;ch=gc();}\n\twhile(isdigit(ch)) x=x*10+ch-'0',ch=gc();\n\treturn x*f;\n}\nconst int N=1e5+10;\nconst int inf=0x3f3f3f3f;\nstruct node1{\n\tint s,m,r,t;\n}a[N];\nstruct node{\n\tvector<ll> pre,suc;vector<node1> f;vector<int> tim;\n\tint tag;\n\tinline void merge(const vector<node1> &a,const vector<node1> &b){\n\t\tint n1=a.size(),n2=b.size();int now1=0,now2=0;\n\t\twhile(now1<n1&&now2<n2){\n\t\t\tif (a[now1].t<b[now2].t) f.push_back(a[now1]),++now1;\n\t\t\telse f.push_back(b[now2]),++now2;\n\t\t}\n\t\twhile(now1<n1) f.push_back(a[now1]),++now1;\n\t\twhile(now2<n2) f.push_back(b[now2]),++now2;ll pre1=0,suc1=0;\n\t\tfor (int i=0;i<f.size();++i) pre1+=f[i].m,pre.push_back(pre1),tim.push_back(f[i].t);\n\t\tsuc.resize(f.size()+10);for (int i=f.size()-1;~i;--i) suc1+=f[i].r,suc[i]=suc1;\n\t}\n\tinline ll gao(int t){\n\t\tt=t-tag;int p=lower_bound(tim.begin(),tim.end(),t)-tim.begin();\n\t\tll tmp=0;if (p) tmp+=pre[p-1];\n\t\tif(p!=tim.size()) tmp+=(ll)suc[p]*t;return tmp;\n\t}\n}tree[N<<2];\nint n,t,m;\ninline void update(int x){\n\tif (tree[lc].tag==-2||tree[rc].tag==-2) {tree[x].tag=-2;return;}\n\tif (tree[lc].tag==tree[rc].tag&&tree[lc].tag>=0) {tree[x].tag=tree[lc].tag;return;}\n\ttree[x].tag=-1;\n}\ninline void build(int x,int l,int r){\n\ttree[x].tag=-2;\n\tif(l==r) {\n\t\ttree[x].f.push_back(a[l]);tree[x].pre.push_back(a[l].m);\n\t\ttree[x].tim.push_back(a[l].t);tree[x].suc.push_back(a[l].r);return;\n\t}int mid=l+r>>1;\n\tbuild(lc,l,mid);build(rc,mid+1,r);\n\ttree[x].merge(tree[lc].f,tree[rc].f);\n}\ninline void pushdown(int x){\n\tif (tree[x].tag>=0) tree[lc].tag=tree[rc].tag=tree[x].tag;\n}\ninline ll query(int x,int l,int r,int l1,int r1){\n\tif (l==r&&tree[x].tag==-2){\n\t\tll tmp=a[l].s;tmp+=(ll)t*a[l].r;tmp=min(tmp,(ll)a[l].m);\n\t\ttree[x].tag=t;return tmp;\n\t}\n\tif (l1<=l&&r1>=r&&tree[x].tag>=0){\n\t\tll tmp=tree[x].gao(t);tree[x].tag=t;return tmp;\n\t}\n\tint mid=l+r>>1;pushdown(x);ll tmp=0;\n\tif (l1<=mid) tmp+=query(lc,l,mid,l1,r1);\n\tif (r1>mid) tmp+=query(rc,mid+1,r,l1,r1);\n\tupdate(x);return tmp;\n}\nint main(){\n\tfreopen(\"cf.in\",\"r\",stdin);\n\tn=read();\n\tfor (int i=1;i<=n;++i) {\n\t\ta[i].s=read(),a[i].m=read(),a[i].r=read();\n\t\ta[i].t=a[i].r?a[i].m/a[i].r:inf;\n\t}build(1,1,n);m=read();\n\tfor (int i=1;i<=m;++i){\n\t\tint l,r;t=read();l=read();r=read();\n\t\tprintf(\"%lld\\n\",query(1,1,n,l,r));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1531409347,
        "uid": 5037,
        "name": "elijahqi",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF453E \u3010Little Pony and Lord Tirek\u3011"
    }
]