[
    {
        "content": "\u770b\u5230\u9898\u89e3\u533a\u4e00\u5806 KMP \u548c Z \u51fd\u6570\u7684\uff0c\n\n\u53ef\u662f\uff0c**\u6211\u4fe1\u4ef0\u5b57\u7b26\u4e32\u54c8\u5e0c\u795e\u6559\uff01**\n\n\u9996\u5148\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u6027\u8d28\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u524d\u7f00 $T$\uff0c\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u4e0d\u5728\u6700\u5de6\u8fb9\u4e5f\u4e0d\u5728\u6700\u53f3\u8fb9\u7684\u5b50\u4e32 $U$\uff0c\u90a3\u4e48\u4e00\u4e2a\u6bd4 $T$ \u77ed\u7684\u524d\u7f00\u4e5f\u4e00\u5b9a\u80fd\u627e\u5230\u5bf9\u5e94\u7684 $U'$\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5148 $O(n)$ \u627e\u51fa\u6240\u6709\u5408\u6cd5\u7684\u524d\u7f00 $T$ \uff08\u6709\u5bf9\u5e94\u7684\u540e\u7f00\uff09\uff0c\u7136\u540e\u4e8c\u5206\u5c31\u884c\u4e86\uff0c\u5224\u65ad\u662f\u5426\u5b58\u5728 $U$ \u7684\u65f6\u5019 $O(n)$ \u5224\uff0c\u603b\u590d\u6742\u5ea6 $\\mathcal O(n\\log n)$\n\n```cpp\n// This code wrote by chtholly_micromaker(MicroMaker)\n#include <bits/stdc++.h>\n#define reg register\n#define int long long\n#define ln std::puts(\"\")\n#define pb push_back\nconst int base=233;\nconst int p=998244353;\nconst int MaxN=1e6+50;\ntemplate <class t> inline void read(t &s){s=0;\nreg int f=1;reg char c=getchar();while(!isdigit(c)){if(c=='-')f=-1;c=getchar();}\nwhile(isdigit(c))s=(s<<3)+(s<<1)+(c^48),c=getchar();s*=f;return;}\ntemplate <class t> inline void write(t x){if(x<0)putchar('-'),x=-x;\nint buf[21],top=0;while(x)buf[++top]=x%10,x/=10;if(!top)buf[++top]=0;\nwhile(top)putchar(buf[top--]^'0');return;}\nchar s[MaxN];\nint f[MaxN],g[MaxN],n;\ninline int calc(int l,int r)\n{\n\treturn (f[r]-f[l-1]*g[r-l+1]%p+p)%p;\n}\ninline bool check(int len,int val)\n{\n\tfor(int i=2;i+len-1<n;++i)\n\t\tif(val==calc(i,i+len-1))\n\t\t\treturn true;\n\treturn false;\n}\nsigned main(void)\n{\n\tstd::scanf(\"%s\",s+1),n=std::strlen(s+1);\n\tg[0]=1;\n\tfor(int i=1;i<=n;++i)\n\t\tg[i]=g[i-1]*base%p;\n\tfor(int i=1;i<=n;++i)\n\t\tf[i]=(f[i-1]*base%p+s[i])%p;\n\tstd::vector<int> dr;\n\tfor(int i=1;i<=n-2;++i)\n\t\tif(calc(1,i)==calc(n-i+1,n))\n\t\t\tdr.pb(i);\n\treg int l=0,r=(int)dr.size()-1,ans=0,mid;\n\twhile(l<=r)\n\t{\n\t\tmid=(l+r)>>1;\n\t\tif(check(dr[mid],calc(1,dr[mid])))\n\t\t\tans=dr[mid],l=mid+1;\n\t\telse\n\t\t\tr=mid-1;\n\t}\n\tif(!ans)\n\t\treturn std::puts(\"Just a legend\"),0;\n\tfor(int i=1;i<=ans;++i)\n\t\tstd::putchar(s[i]);ln;\n\treturn 0;\n}\n\n\n```\n\n",
        "postTime": 1611062520,
        "uid": 51376,
        "name": "MyukiyoMekya",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF126B \u3010Password\u3011"
    },
    {
        "content": "## \u4e00\u53e5\u8bdd\u9898\u610f\uff1a\n\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32S\uff08|S|<=1000000\uff09\uff0c\u627e\u5230\u65e2\u662fS\u524d\u7f00\u53c8\u662fS\u540e\u7f00\u53c8\u5728S\u4e2d\u95f4\u51fa\u73b0\u8fc7\uff08\u65e2\u4e0d\u662fS\u524d\u7f00\u53c8\u4e0d\u662fS\u540e\u7f00\uff09\u7684\u5b50\u4e32\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u8f93\u51fa\u201cJust a legend\u201d\u3002\n## \u5206\u6790\uff1a\n\u6211\u4eec\u53ef\u4ee5\u5148\u627e\u5230\u65e2\u662fS\u524d\u7f00\u53c8\u662fS\u540e\u7f00\u7684\u5b50\u4e32\uff0c\u7528KMP\u6c42\u51fanext\u6570\u7ec4\u5373\u53ef\u5b9e\u73b0\u3002\u4e4b\u540e\u6211\u4eec\u53ea\u9700\u4ece2\u679a\u4e3e\u5230n-1\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u65e2\u4e0d\u662f\u524d\u7f00\u4e5f\u4e0d\u662f\u540e\u7f00\uff0c\u5982\u679cnext[i]=next[n]\u90a3\u4e48\u5c31\u627e\u5230\u4e86\u6700\u5927\u7684\u5b50\u4e32\u3002\u6211\u4eec\u8fd8\u9700\u8981\u9884\u5904\u7406\u4e00\u4e0b\uff0c\u5728\u6c42next\u6570\u7ec4\u65f6\u8bb0\u5f55\u4e0bmax{next[1~n-1]}\uff0c\u90a3\u4e48\u5f53next[n]>max\u65f6\u663e\u7136\u4e0d\u80fd\u5c06next[n]\u4f5c\u4e3a\u6700\u957f\u5b50\u4e32\u7684\u957f\u5ea6\uff08\u8fd9\u6837\u5c31\u4f1a\u65e0\u6cd5\u627e\u5230\uff0c\u8f93\u51fa\u201cJust a legend\u201d\uff09\uff0c\u6240\u4ee5\u5f53x=next[n]>max\u65f6\uff0c\u4ee4x=next[x]\uff0c\u76f4\u5230x<=max\uff0c\u6ce8\u610f\u5982\u679c\u8fd9\u65f6next[x]=0\u8fd8\u662f\u65e0\u89e3\u3002\n## \u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nchar a[1000010];\nint next[1000010],n,maxx=0;\nvoid cal()//\u6c42\u51fanext\u6570\u7ec4\n{\n    next[1]=0;\n    for(int i=2,j=0;i<=n;i++){\n        while(j&&a[i]!=a[j+1])j=next[j];\n        if(a[i]==a[j+1])j++;\n        next[i]=j;\n        if(i!=n)maxx=max(next[i],maxx);\n        //\u627e\u5230next\u6570\u7ec4\u7684\u6700\u5927\u503c\n    }\n}\nint main()\n{\n    cin>>a+1;\n    n=strlen(a+1);\n    cal();\n    int x=next[n];\n    if(x==0)printf(\"Just a legend\\n\");\n    else{\n        while(x>maxx)x=next[x];\n        //\u627e\u5230\u5c0f\u4e8emax{next[1~n-1]}\u7684\u6700\u5927\u5339\u914d\u957f\u5ea6\n        if(x==0){\n        \tprintf(\"Just a legend\\n\");\n        \treturn 0;\n\t\t}\n        for(int i=2;i<n;i++)\n         if(x==next[i]){\n            for(int j=i-next[i]+1;j<=i;j++)\n         //i-next[i]+1\u4e3a\u7b54\u6848\u5b50\u4e32\u7684\u5de6\u7aef\u70b9\n             printf(\"%c\",a[j]);\n            printf(\"\\n\");\n            return 0;\n         }\n    }\n    return 0;\n} \n```",
        "postTime": 1529499751,
        "uid": 60120,
        "name": "Chemist",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF126B \u3010Password\u3011"
    },
    {
        "content": "\u4e3b\u8981\u601d\u8def\u662f\u5229\u7528kmp\u7684nxt\u6570\u7ec4\u6765\u8ba1\u7b97\u76f8\u7b49\u524d\u540e\u7f00\u7684\u957f\u5ea6\n\n\u627e\u4e00\u4e2a**\u65e2\u662fS\u7684\u524d\u7f00\u53c8\u662fS\u7684\u540e\u7f00\u540c\u65f6\u53c8\u5728S\u4e2d\u95f4\u51fa\u73b0\u8fc7\u7684\u6700\u957f\u5b50\u4e32**\n\n\u5176\u5b9e\u5c31\u662f\u627e\u4e00\u4e2a\u4ece$0$\u5f00\u59cb\u7684\u4e00\u4e2a\u5b50\u4e32\u4f7f\u5f97\u5b83\u7684$nxt>=nxt[len]$\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n\u56e0\u4e3a\u662f\u4ece$0$\u5f00\u59cb,\u6240\u4ee5\u8fd9\u4e2a\u5b50\u4e32\u7684\u7ed3\u5c3e\u5176\u5b9e\u5c31\u662f\u8981\u6c42\u7684\u4e2d\u95f4\u7684\u90a3\u4e2a\u5b50\u4e32\n\n**\u4e3a\u4ec0\u4e48\u662f$nxt[i]>=nxt[len]$\u800c\u4e0d\u80fd\u662f\u5c0f\u4e8e\u5462\uff1f**\n\n\u4e3e\u4e2a\u6817\u5b50\n\n**$abcdeababc$**\n\n\n\u5b83\u7ed3\u5c3e\u4e3ac\u4f46\u4e4b\u95f4\u4f1a\u6709\u4e00\u4e2a$nxt==2$,\u4f46ab\u5e76\u4e0d\u7b26\u5408\u6761\u4ef6,\u5bf9\u4ece\u5f00\u5934\u5230$len-1$\u7684\u5b57\u7b26\u4e32\u8fdb\u884c\u67e5\u8be2,\u627e\u51fa\u6700\u5927\u7684$nxt$,\u8bb0\u5f55\u4e0b\u503c$MAXN$,\u518d\u5bf9$k$\u8fdb\u884c\u51cf\uff0c\u76f4\u5230$k<=MAXN$\u5f97\u51fa\u7b54\u6848\n\n\u82e5$k==0$ \u5219\u8bc1\u660e\u6ca1\u6709\u6ee1\u8db3\u7684\u5b50\u4e32,\u8f93\u51faJust a legend\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nchar as[10001000];\nint k,nxt[10010000];\nint main() {\n\tcin>>as+1;\n\tint len=strlen(as+1);\n\tfor(int i=2;i<=len;i++) {\n\t\twhile(k!=0&&as[k+1]!=as[i]) k=nxt[k];\n\t\tif(as[k+1]==as[i]) k++;\n\t\tnxt[i]=k;\n\t}\n\tk=0;\n\tint maxn=0;\n\tfor(int i=2;i<=len-1;i++) {\n\t\tmaxn=max(nxt[i],maxn);\n\t}\n\tk=nxt[len];\t\n\twhile(k>maxn) k=nxt[k];\n\tif(k) {\n\t\tfor(int i=1;i<=k;i++) cout<<as[i];\n\t}\n\telse cout<<\"Just a legend\";\n\treturn 0;\n}\n```\n\nend\n",
        "postTime": 1611959075,
        "uid": 122757,
        "name": "PrefixAMS",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF126B \u3010Password\u3011"
    },
    {
        "content": "\u53d1\u8fd9\u4e2a\u9898\u89e3\u53ea\u662f\u56e0\u4e3a\u2026\u5927\u591a\u6570\u4eba\u7684 Z \u51fd\u6570\u89e3\u6cd5\u590d\u6742\u5ea6\u6839\u672c\u4e0d\u5bf9\u2026\n\n\u4ee5\u4e0b\u662f\u8fd9\u9898\u7528 Z \u51fd\u6570\u5404\u79cd\u4e0d\u5bf9\u7684\u590d\u6742\u5ea6\u505a\u6cd5\uff1a\n\n1\u3001\u679a\u4e3e\u6bcf\u4e00\u4e2a\u540e\u7f00\uff0c\u901a\u8fc7 Z \u53ef\u4ee5\u6c42\u51fa\u4e0e\u524d\u7f00\u7684 LCP \u7136\u540e\u53bb\u4e32\u91cc\u9762\u66b4\u529b\u627e\u5b50\u4e32\u3002\n\n2\u3001\u679a\u4e3e\u6bcf\u4e00\u4e2a\u4e2d\u95f4\u4e32\uff0c\u901a\u8fc7 Z \u53ef\u4ee5\u6c42\u51fa\u4e0e\u524d\u7f00\u7684 LCP \uff0c\u5c06\u8fd9\u4e9b\u957f\u5ea6\u66b4\u529b\u67d3\u8272\uff0c\u9047\u5230\u540e\u7f00\u5c31\u5224\u4e00\u4e0b\u3002\n\n\u2026\u2026\u7136\u540e\u8fd9\u4e24\u79cd\u590d\u6742\u5ea6\u90fd\u4e0d\u5bf9\u3002\u8003\u8651\u600e\u4e48\u4f18\u5316\u4e00\u4e0b\u3002\u53d1\u73b0\u6211\u4eec\u53ea\u5173\u5fc3\u6700\u957f\u80fd\u591f\u5339\u914d\u7684\u524d\u7f00\uff0c\u56e0\u4e3a\u524d\u7f00\u662f\u56fa\u5b9a\u7684\u3002\u4e8e\u662f\u8bb0\u5f55\u4e00\u4e0b\u8fd9\u4e2a\u6700\u5927\u503c\u5c31\u597d\u4e86\u3002\u590d\u6742\u5ea6\u7ebf\u6027\u3002\n\n```cpp\n\nnamespace Z_F{\n    int L ;\n    int Q ;\n    int l, r ;\n    int Z[N] ;\n    int Pz[N] ;\n\tvoid gao(int bg, int L){\n\t\tfor (int i = bg ; i < bg + L ; ++ i) Z[i] -- ;\n        Z[bg] = L ;\n\t}\n    int get_Z(char *s, int bg, int oo = 0){\n        L = strlen(s + bg) ;\n        l = bg, r = 0 ; Z[bg] = 0 ;\n        for (int i = bg + 1 ; i < bg + L ; ++ i){\n            if (r < i) Z[i] = 1 ;\n            else Z[i] = min(Z[i - l + 1], r - i + 1) ;\n            while (s[Z[i]] == s[i + Z[i] - 1]) ++ Z[i] ;\n            if (r < i + Z[i] - 1) r = i + Z[i] - 1, l = i ;\n        }\n        if (!oo) gao(bg, L) ;\n\t\treturn L ;\n    }\n    int exKMP(char *s, int bg, char *t, int gb){\n        int q = get_Z(s, bg, 1) ; s[q + 1] = '#' ;\n        L = strlen(t + gb) ; l = gb, r = 0 ;\n        for (int i = gb ; i < gb + L ; ++ i){\n            if (r < i) Pz[i] = 1 ;\n            else Pz[i] = min(Z[i - l + 1], r - i + 1) ;\n            while (s[Pz[i]] == t[i + Pz[i] - 1]) ++ Pz[i] ;\n            if (r < i + Pz[i] - 1) r = i + Pz[i] - 1, l = i ;\n        }\n        for (int i = gb ; i < gb + L ; ++ i) Pz[i] -- ;\n\t\treturn L ;\n    }\n}\n\nint mx ;\nint res ;\nint Z1[N] ;\nint Z2[N] ;\nint tmp[N] ;\nint ans[N] ;\n\nint n, p ;\nchar s[N] ;\nchar t[N] ;\n\nusing namespace Z_F ;\n\nint main(){\n    scanf(\"%s\", s + 1) ;\n    n = get_Z(s, 1) ; res = 0 ;\n    for (int i = 2 ; i <= n ; ++ i){\n        if (i + Z[i] - 1 == n && Z[i] <= mx)\n            if (res < Z[i]) res = Z[i], p = i ;\n        chkmax(mx, Z[i]) ;\n    }\n    if (!res)\n        return puts(\"Just a legend\"), 0 ;\n    for (int i = p ; i <= p + res - 1 ; ++ i)\n        putchar(s[i]) ; return puts(\"\"), 0 ;\n}\n\n```",
        "postTime": 1589933354,
        "uid": 28313,
        "name": "\u768e\u6708\u534a\u6d12\u82b1",
        "ccfLevel": 7,
        "title": "\u300c\u6dfc\u300dCF126B Password"
    },
    {
        "content": "### \u9898\u76ee\u63cf\u8ff0\n\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 $S$\uff0c\u6211\u4eec\u89c4\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 $P$ \u662f\u53ef\u884c\u89e3\uff0c$P$ \u9700\u8981\u6ee1\u8db3\uff1a\n\n1. $P$ \u662f $S$ \u7684\u524d\u7f00\n2. $P$ \u662f $S$ \u7684\u540e\u7f00\n3. $P$ \u51fa\u73b0\u5728 $S$ \u4e2d\u65e2\u4e0d\u662f\u524d\u7f00\u4e5f\u4e0d\u662f\u540e\u7f00\u7684\u5730\u65b9\n\n\u9898\u76ee\u8981\u6c42\u51fa\u6ee1\u8db3\u6761\u4ef6\u7684\u957f\u5ea6\u6700\u5927\u7684 $P$\uff0c\u82e5\u5b58\u5728\u8f93\u51fa\u8be5\u5b57\u7b26\u4e32\uff0c\u82e5\u4e0d\u5b58\u5728\u5219\u8f93\u51fa`Just a legend`  \n\u6570\u636e\u8303\u56f4\uff1a$1\\leq |S|\\leq 10^6$\n\n----\n### \u89e3\u9898\u601d\u8def\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u5207\u5165\u70b9\uff1a  \n\u5bf9\u4e8e\u6211\u4eec\u627e\u5230\u7684\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u5b57\u7b26\u4e32 $P$\uff0c\uff08\u5047\u8bbe\u5b83\u5728 $S$ \u4e2d\u7684\u8d77\u59cb\u548c\u7ec8\u70b9\u5750\u6807\u5206\u522b\u4e3a $l,r$\uff09  \n\u90a3\u4e48\u6211\u4eec\u53d1\u73b0\uff08\u8bbe $|S|=n$\uff09\uff1a\n\n+ $P$ \u65e2\u662f $S[1...r]$ \u7684\u524d\u7f00\uff0c\u4e5f\u662f $S[1...r]$ \u7684\u540e\u7f00\n+ $P$ \u65e2\u662f $S[l...n]$ \u7684\u524d\u7f00\uff0c\u4e5f\u662f $S[l...n]$ \u7684\u540e\u7f00\n\n\u6709\u6ca1\u6709\u60f3\u5230\u4ec0\u4e48\uff1f\u6ca1\u9519\uff01$\\text{KMP}$  \n\u800c\u4e14\u6211\u4eec\u8fd8\u53ef\u4ee5\u53d1\u73b0\u4e0a\u8ff0\u6027\u8d28\u5c31\u662f $P$ \u6ee1\u8db3\u6761\u4ef6\u7684\u5145\u8981\u6761\u4ef6\uff01  \n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u6c42\u51fa\u6b63\u53cd\u4e24\u4e2a $next$ \u6570\u7ec4\uff0c\u7136\u540e\u518d\u679a\u4e3e $l$ \uff0c\u5224\u65ad\u662f\u5426\u7b26\u5408\u6761\u4ef6\u5373\u53ef\u3002  \n\u603b\u7684\u590d\u6742\u5ea6\u662f $O(n)$ \u7684\u3002\n\n----\n### \u7ec6\u8282\u6ce8\u610f\u4e8b\u9879\n+ \u8fd9\u9898\u4e0d\u8981\u628a $S$ \u590d\u5236\u4e24\u6b21\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 `reverse` \u51fd\u6570\u5c06 $S$ \u53cd\u8f6c\uff08\u56e0\u4e3a\u8fd9\u9898\u7a7a\u95f4\u5f00\u5f97\u4e0d\u5927\uff09\n+ \u6ce8\u610f\u5b57\u7b26\u4e32\u4e0b\u6807\u95ee\u9898\n\n----\n### \u53c2\u8003\u4ee3\u7801\n```cpp\n/*--------------------------------\n--Author: The Ace Bee-------------\n--Blog: www.cnblogs.com/zsbzsb----\n--This code is made by The Ace Bee\n--------------------------------*/\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdlib>\n#include <cstdio>\n#include <cctype>\n#include <cmath>\n#include <ctime>\n#define rg register\n#define clr(x, y) memset(x, y, sizeof x)\nusing namespace std;\n\nconst int _ = 1000010;\n\nchar s[_]; int p[2][_];\n\nint main() {\n\tscanf(\"%s\", s + 1);\n\tint n = strlen(s + 1);\n\tp[0][1] = 0;\n\tfor (rg int j = 0, i = 1; i <= n; ++i) {\n\t\twhile (s[j + 1] != s[i + 1] && j) j = p[0][j];\n\t\tif (s[j + 1] == s[i + 1]) ++j;\n\t\tp[0][i + 1] = j;\n\t}\n\treverse(s + 1, s + n + 1);\n\tp[1][1] = 0;\n\tfor (rg int j = 0, i = 1; i <= n; ++i) {\n\t\twhile (s[j + 1] != s[i + 1] && j) j = p[1][j];\n\t\tif (s[j + 1] == s[i + 1]) ++j;\n\t\tp[1][i + 1] = j;\n\t}\n\tint pos = 0, mx = 0;\n\tfor (rg int i = 1; i <= n; ++i)\n\t\tif (p[0][i] == p[1][n - i + p[0][i]])\n\t\t\tif (mx < p[0][i]) mx = p[0][i], pos = i;\n\treverse(s + 1, s + n + 1);\n\tif (pos == 0) puts(\"Just a legend\");\n\telse { for (rg int i = pos - mx + 1; i <= pos; ++i) putchar(s[i]); puts(\"\"); }\n\treturn 0;\n}\n```\n----\n**\u5b8c\u7ed3\u6492\u82b1 $qwq$**\n",
        "postTime": 1570542868,
        "uid": 87839,
        "name": "Sangber",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF126B \u3010Password\u3011"
    },
    {
        "content": "# \u4e00\u9053KMP\u7684\u9898\u3002\n## \u5efa\u8bae\u524d\u5f80\u535a\u5ba2\u98df\u7528\u6548\u679c\u66f4\u4f73\uff1ahttp://www.cnblogs.com/xyj1\n### \u8bf4\u6b63\u9898\uff1a\u9996\u5148\u60f3\u5230\u662f\u770b\u6587\u672c\u4e32\u524d\u7f00\u4e0e\u540e\u7f00\u7684\u6700\u957f\u76f8\u540c\u957f\u5ea6\uff0c\u4e0d\u96be\uff0c\u666e\u901aKMP\u3002\u5982\u679c\u4e0d\u4f1aKMP\u7684\u8bdd\uff0c\u53ef\u4ee5\u524d\u5f80\u8fd9\u91cchttps://www.cnblogs.com/xyj1/p/10445843.html\n#### \u63a5\u4e0b\u6765\uff0c\u8003\u8651\u4e2d\u95f4\u4e32\u5339\u914d\u3002\u9996\u5148\uff0c\u5f97\u5230\u6587\u672c\u4e32\u524d\u7f00\u4e0e\u540e\u7f00\u7684\u6700\u957f\u76f8\u540c\u957f\u5ea6\uff0c\u8bbe\u4e3aS\uff0c\n\u5982\u679c\u5728\u4e32\u7684\u4e2d\u95f4\u627e\u5230S\uff0c\u76f4\u63a5\u8f93\u51fa\u3002\u5b9e\u73b0\n```cpp\n\tfor(int i = k + 1;i < lena;i++)\n\t{\n\t\tif(kmp[i] >= k)\n\t\t{\n\t\t\tif(k != 0)\n\t\t\tfor(int i = 1;i <= k;i++)printf(\"%c\",c[i]);\n\t\t\treturn 0;\n\t\t}\n\t}\n```\n##### \u5982\u679c\u6ca1\u627e\u5230\uff0c\u90a3\u5c31\u662f\u6587\u672c\u4e32\u7684\u6700\u957f\u4e0e\u540e\u7f00\u76f8\u540c\u7684\u524d\u7f00\u7684\u524d\u7f00\u4e0e\u540e\u7f00\u7684\u6700\u957f\u76f8\u540c\u957f\u5ea6\uff08\u6709\u70b9\u96be\u7406\u89e3\uff0c\u5176\u5b9e\u5c31\u662fkmp[kmp[i]]\uff09\u3002\u4e3a\u4ec0\u4e48\u5462\u3002\u9996\u5148\uff1a\u524d\u7f00\u7684\u524d\u7f00\u7b49\u4e8e\u540e\u7f00\u7684\u540e\u7f00\uff08\u524d\u7f00\u7b49\u4e8e\u540e\u7f00\uff09\uff08KMP\u4e2d\u7684\u524d\u7f00\u4e0e\u540e\u7f00\uff0c\u5373\u4e3aS\uff09\uff0c\u524d\u7f00\u7684\u524d\u7f00\u7b49\u4e8e\u524d\u7f00\u7684\u540e\u7f00\uff08\u524d\u7f00\u7b49\u4e8e\u4e2d\u95f4\u4e32\uff09\uff0c\u56e0\u5176\u662f\u6587\u672c\u4e32\u7684\u524d\u7f00\u7684\u524d\u7f00\u4e0e\u540e\u7f00\u7684\u6700\u957f\u76f8\u540c\u957f\u5ea6\uff0c\u6545\u5176\u4e3a\u6700\u5927\u3002\n \n \u8d34\u4ee3\u7801\n ```cpp\n #include <bits/stdc++.h>\nusing namespace std;\nchar c[3000002];\nint kmp[3000002];\nint lena;\nint main()\n{\n\tscanf(\"%s\",c + 1);\n\tlena = strlen(c + 1);\n\tint j = 0;\n\tfor(int i = 2;i <= lena;i++)\n\t{\n\t\twhile(j && c[j + 1] != c[i])j = kmp[j];\n\t\tif(c[j + 1] == c[i])j++;\n\t\tkmp[i] = j;\n\t}\n\tint k = kmp[lena];\n\tif(k == 0)\n\t{\n\t\tprintf(\"Just a legend\");\n\t\treturn 0;\n\t}\n\tfor(int i = k + 1;i < lena;i++)\n\t{\n\t\tif(kmp[i] >= k)\n\t\t{\n\t\t\tif(k != 0)\n\t\t\tfor(int i = 1;i <= k;i++)printf(\"%c\",c[i]);\n\t\t\treturn 0;\n\t\t}\n\t}\n\tif(kmp[k] == 0 || k == 0)\n\t{\n      printf(\"Just a legend\");\n\t\treturn 0;\n\t}\n\telse \n\t{\n\t\tfor(int i = 1;i <= kmp[k];i++)printf(\"%c\",c[i]);\n\t\treturn 0;\n\t}\n\t\n\treturn 0;\n}\n ```\n \u6ce8\u610f0\uff01\uff01\uff01\uff01\uff01",
        "postTime": 1551765980,
        "uid": 104656,
        "name": "xyj1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF126B \u3010Password\u3011"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF126B)\n\n&emsp;&emsp;~~\u5927\u4f6c\u4eec\u90fd\u6253\u4ec0\u4e48 Z \u7b97\u6cd5\uff0c\u6211\u8fd9\u4e2a\u849f\u84bb\u53ea\u80fd\u7528 KMP \u6765\u6c34\u4e00\u53d1~~\n\n&emsp;&emsp;\u6211\u4eec\u6ce8\u610f\u5230\"\u524d\u540e\u7f00\"\u90fd\u662f\u53ef\u4ee5\u76f4\u63a5\u7528 KMP \u91cc\u7684 $next$ \u6570\u7ec4\u6c42\u51fa\u6765\u7684\u3002\u5173\u952e\u5728\u4e8e\u4e00\u4e2a\u4f4d\u4e8e\u4e2d\u95f4\u7684\u5b57\u4e32 $T$\u3002\n\n&emsp;&emsp;**\u82e5\u5728\u4e2d\u95f4\u7684\u5b57\u4e32 $T$ \u7ed3\u675f\u4e8e $str[i]$\uff0c\u90a3\u4e48 $T$ \u4e00\u5b9a\u662f $str[1..i]$ \u7684\u516c\u5171\u524d\u540e\u7f00**\u3002\u770b\u5230\u516c\u5171\u524d\u540e\u7f00\uff0c\u81ea\u7136\u800c\u7136\u6211\u4eec\u53ef\u4ee5\u518d\u6b21\u4f7f\u7528 KMP\u3002\n\n&emsp;&emsp;\u53c8\u56e0\u4e3a\u4e2d\u95f4\u7684\u90a3\u4e2a\u5b57\u4e32 $T$ \u7684\u7ed3\u5c3e\u53ea\u53ef\u80fd\u5728 $str[2] ...str[n-1]$\u4e4b\u95f4\uff0c\u90a3\u4e48\u6211\u4eec\u6700\u540e\u5b57\u4e32\u7684\u957f\u5ea6\u5c31\u4e0d\u4f1a\u8d85\u8fc7 $\\max(kmp[2..n-1])$ \u3002\u6211\u4eec\u628a\u8fd9\u4e2a\u6700\u5927\u503c\u8bb0\u4f5c $maxn$\n\n&emsp;&emsp;\u90a3\u4e48\u8fd9\u4e2a $T$ \u53c8\u662f\u6574\u4f53\u7684\u516c\u5171\u524d\u540e\u7f00\uff0c\u90a3\u4e48\u6211\u4eec\u4ece $kmp[n]$ \u5f00\u59cb\u679a\u4e3e\u3002\u5982\u679c\u957f\u5ea6\u8d85\u8fc7 $maxn$ \u4e86\uff0c\u6211\u4eec\u5c31\u8df3\u8f6c\u5230 $kmp[kmp[n]]$\uff1b\u4ee5\u6b64\u7c7b\u63a8\u76f4\u5230\u4e3a 0\uff0c\u5982\u679c\u4e3a 0 \u4e86\uff0c\u76f4\u63a5\u8f93\u51fa ```Just a legend``` \u5373\u53ef\u3002\n\n&emsp;&emsp;\u5f53\u6211\u4eec\u5f53\u524d\u7684\u957f\u5ea6 $len <= maxn$ \u540e\uff0c\u5c31\u8981\u770b\u4e2d\u95f4\u662f\u5426\u5b58\u5728\u4e00\u4e2a $kmp[k] = len$ \u7684\u4e86\u3002\u5728\u8fd9\u91cc\u6211\u8ba4\u4e3a KMP \u7684\u9898\u89e3\u91cc\u6700\u540e\u904d\u5386 $kmp[2..n-1]$ \uff0c\u770b\u54ea\u4e2a\u7b49\u4e8e $len$\uff0c\u518d\u76f4\u63a5\u8f93\u51fa\u7684\u505a\u6cd5\u662f\u4e0d\u5fc5\u8981\u7684\u3002\u6211\u4eec\u5f88\u5bb9\u6613\u5c31\u53ef\u4ee5\u8bc1\u660e $kmp[2..n-1]$ \u4e2d\u4e00\u5b9a\u6709\u4e00\u4e2a\u7684\u503c\u662f\u7b49\u4e8e $len$ \u7684\uff0c\u5373\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a\u4f4d\u4e8e\u4e2d\u95f4\u7684\u8ddf\u957f\u5ea6\u4e3a $len$ \u7684\u524d\uff08\u540e\uff09\u7f00\u76f8\u540c\u7684\u5b57\u4e32 $T$\u3002\n\n&emsp;&emsp;\u539f\u56e0\u4f55\u5728\uff1f\u56de\u60f3\u4e00\u4e0b\u6211\u4eec $kmp$ \u6570\u7ec4\u7684\u63a8\u5bfc\u8fc7\u7a0b\uff0c\u9664\u4e86 $kmp[i] = 0$ \u7684\u60c5\u51b5\uff0c**\u6240\u6709\u7684 $kmp[i]$\uff0c\u90fd\u4e00\u5b9a\u662f\u4ece\u4e00\u4e2a\u6bd4\u5b83\u5c11 1 \u7684 $kmp$ \u503c +1\u5f97\u6765\u7684**\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u82e5 $kmp[1..n]$ \u91cc\u6709\u4e00\u4e2a\u503c\u4e3a 3 \u7684\uff0c\u975e\u5e38\u663e\u7136\u4e5f\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a 2 \u7684 $kmp$ \u503c\u3002\uff08\u4f60\u7684\u4ee3\u7801\u91cc\u662f\u4e0d\u662f\u6709\u4e00\u4e2a \"if \u76f8\u7b49 \uff1a j++\" \u7684\u8bed\u53e5\uff1f\uff09\n\n&emsp;&emsp;\u90a3\u4e48\u6211\u4eec\u5c31\u5f97\u51fa\u4e86\u4e00\u4e2a\u7ed3\u8bba\uff1a**1~maxn** \u8fd9\u4e9b\u503c\u90fd\u5b58\u5728\u4e8e $kmp[2..n-1]$ \u4e2d\u3002\u53c8\u77e5\u9053\u8fd9\u4e2a $len$ \u4e00\u5b9a\u6ee1\u8db3 $1<=len<=maxn$\uff0c\u90a3\u4e48\uff0c$kmp[2..n-1]$ \u4e00\u5b9a\u6709\u4e00\u4e2a\u503c\u4e3a $len$\u3002\u56e0\u6b64\u6211\u4eec\u76f4\u63a5\u8f93\u51fa $str[1..j]$ \u5373\u53ef\u3002\n\n&emsp;&emsp;\u6700\u540e\u8d34\u4e0aAC\u4ee3\u7801\uff0c\u4f9b\u5404\u4f4d dalao \u53c2\u8003\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int MAXN=1e6+10;\nchar str[MAXN];\nint fail[MAXN],n,maxn=0;\nint main(){\n\tcin>>(str+1);\n\tn=strlen(str+1);\n\tfail[1]=0;\n\tint j=0;\n\tfor(int i=2;i<=n;i++){\n\t\twhile(j&&str[j+1]!=str[i]){\n\t\t\tj=fail[j];\n\t\t}\n\t\tif(str[j+1]==str[i])j++;\n\t\tfail[i]=j;\n\t\tif(i!=n){\n\t\t\tmaxn=max(maxn,j);\n\t\t} \n\t}\n\tj=fail[n];\n\tif(maxn==0 || j==0){\n\t\tprintf(\"Just a legend\");\n\t\treturn 0;\n\t}\n\twhile(j>maxn){\n\t\tj=fail[j];\n\t}\n\tif(j==0){\n\t\tprintf(\"Just a legend\");\n\t\treturn 0; \n\t}\n\tfor(int k=1;k<=j;k++){\n\t\tprintf(\"%c\",str[k]);\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}\n```\n",
        "postTime": 1597905989,
        "uid": 340632,
        "name": "Cry_For_theMoon",
        "ccfLevel": 8,
        "title": "\u5b57\u7b26\u4e32\u7ec3\u4e60\uff1aPassword"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9898\u6211\u5e76\u4e0d\u89c9\u5f97\u6709\u7d2b\u9898\u7684\u96be\u5ea6\uff0c\u5145\u5176\u91cf\u4e5f\u5c31\u662f\u4e2a\u7eff\u9898\n\n\u9996\u5148\u7b80\u8ff0\u9898\u610f\uff1a\n\n\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 $S$ \uff0c\u627e\u5230\u4e00\u4e2a\u6700\u957f\u7684\u4e32\uff0c\u4e14\u6ee1\u8db3\u5176\u662f $S$ \u7684\u524d\u7f00\u3001\u540e\u7f00\u548c\u4e2d\u95f4\u7684\u4e00\u4e2a\u4e0d\u662f\u524d\u7f00\u540e\u7f00\u7684\u5b50\u4e32\u3002\n\n\u6211\u4eec\u9996\u5148\u601d\u8003\u4e0d\u8003\u8651\u6700\u540e\u4e00\u4e2a\u6761\u4ef6\u7684\u60c5\u51b5\uff0c\u8bbe $len$ \u4e3a $S$ \u7684\u957f\u5ea6\uff0c\u90a3\u4e48 $KMP$ \u7b97\u6cd5\u4e2d\u7684\u5931\u914d\u6570\u7ec4 $fail_{len}$ \u5c31\u662f\u7b54\u6848\u3002\u56e0\u4e3a\u5931\u914d\u6570\u7ec4 $fail$ \u7684\u5b9a\u4e49\u5c31\u662f\u5728 $1$~$i$ \u7684\u5b50\u4e32\u4e2d\uff0c\u524d\u7f00\u548c\u540e\u7f00\u957f\u5ea6\u4e0d\u7b49\u4e8e $i$ \u65f6\u76f8\u540c\u7684\u6700\u957f\u957f\u5ea6\u3002\n\n\u63a5\u4e0b\u6765\u52a0\u4e0a\u7b2c\u4e09\u4e2a\u6761\u4ef6\uff0c\u6211\u4eec\u4e0d\u4ec5\u8981\u627e\u5230\u4e00\u4e2a\u4e32\u6ee1\u8db3\u662f $S$ \u7684\u524d\u7f00\u540e\u7f00\uff0c\u8fd8\u8981\u5728\u4e2d\u95f4\u51fa\u73b0\u8fc7\u3002\u987a\u7740\u521a\u624d\u7684\u601d\u8def\u601d\u8003\u4e0b\u53bb\uff0c\u5982\u679c\u5f53 $i=2$~$n-1$ \u65f6\u6709 $fail_i$ = $fail_{len}$ \u8bf4\u660e\u5728\u4e2d\u95f4\u51fa\u73b0\u4e86\u4e00\u4e2a\u5b50\u4e32\u65e2\u662f\u524d\u7f00\uff0c\u4e5f\u662f\u540e\u7f00\u3002\n\n\u5982\u679c\u4e2d\u95f4\u6ca1\u6709\u51fa\u73b0\u4e0a\u9762\u8fd9\u79cd\u60c5\u51b5\uff0c\u8bf4\u660e\u7b54\u6848\u957f\u5ea6\u53ef\u80fd\u662f $2$~$len-1$ \u4e2d\u67d0\u70b9 $i$ \u7684 $fail_i$ \u3002\u6240\u4ee5\u63a5\u4e0b\u6765\u5c31\u662f\u5173\u4e8e\u6bcf\u4e2a\u4e0d\u7b49\u4e8e $0$ \u7684 $fail_i$ \u5224\u65ad\u4e32 $S$ \u662f\u5426\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a $fail_i$ \u7684\u540e\u7f00\u3002\u5f88\u660e\u663e\uff0c\u5982\u679c\u76f4\u63a5\u5224\u65ad\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\Theta(len^2)$ \u7684\uff0c\u660e\u663e\u8fc7\u4e0d\u4e86\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u52a0\u5feb\u5224\u65ad\u7684\u901f\u5ea6\uff0c\u4f7f\u7528\u795e\u5668\u2014\u2014 $hash$ \u3002\u5bf9\u4e8e\u6bcf\u4e2a $i$ \uff0c\u4ee4 $hash_i=hash_{i-1} \\times base+s_i$ \u7136\u540e\u63d0\u524d\u9884\u5904\u7406\u51fa $base$ \u7684\u4e58\u65b9\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728 $O(1)$ \u7684\u65f6\u95f4\u5185\u7528\u79e6\u4e5d\u97f6\u7b97\u6cd5\u5feb\u901f\u6c42\u51fa $l$~$r$ \u7684 $hash$ \u503c\uff1a\n\n$(hash_r-hash_{l-1}\\times base^{r-l+1})\\mod\\ p$\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5728 $O(n)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u91cc\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u4ee3\u7801\u90e8\u5206\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define re register\ntypedef unsigned long long ull; //\u4ee3\u7801\u4e2d\u7684 mod p \u91c7\u7528\u7684\u662f\u81ea\u7136\u6ea2\u51fa\nstring s;\null hsh[1000010],base[1000010];\nint fail[1000010],len,maxn,num;\nint main(){\n    cin>>s;\n    s=' '+s;\n    int j=0;\n    base[0]=1;\n    base[1]=1231;\n    len=s.size()-1;\n    for(re int i=2;i<=len;++i){\n        base[i]=base[i-1]*base[1];\n    }\n    for(re int i=1;i<=len;++i){\n        hsh[i]=hsh[i-1]*base[1]+s[i];\n        while(j&&s[i+1]!=s[1+j])j=fail[j];\n        if(s[i+1]==s[1+j])++j;\n        fail[i+1]=j;\n        if(i!=len)maxn=max(fail[i],maxn);\n    }\n    if(maxn==0){\n        puts(\"Just a legend\");\n        return 0;\n    }\n    for(re int i=2;i<len;++i){\n        if(fail[len]!=0&&fail[i]==fail[len]){\n            for(re int j=1;j<=fail[len];++j){\n                printf(\"%c\",s[j]);\n            }\n            return 0;\n        }\n    }\n    for(re int i=2;i<len;++i){\n        if(fail[i]==0)continue;\n        if(hsh[len]-hsh[len-fail[i]]*base[fail[i]]==hsh[fail[i]]){\n            if(fail[i]>fail[num]){\n                num=i;\n            }\n        }\n    }\n    if(num!=0){\n        for(re int j=1;j<=fail[num];++j){\n            printf(\"%c\",s[j]);\n        }\n        return 0;\n    }\n    puts(\"Just a legend\");\n    return 0;\n}\n```",
        "postTime": 1613812012,
        "uid": 181566,
        "name": "after_the_end",
        "ccfLevel": 7,
        "title": "\u3010\u9898\u89e3\u3011126B"
    },
    {
        "content": "\u4e00\u53e5\u8bdd\u9898\u610f\uff1a\u5728$S$\u4e2d\u627e\u5230\u4e00\u4e2a\u65e2\u662f\u524d\u7f00\uff0c\u53c8\u662f\u540e\u7f00\uff0c\u5e76\u4e14\u8fd8\u51fa\u73b0\u8fc7\u81f3\u5c11$3$\u6b21\u7684\u5b50\u4e32\u3002\n\n\u63d0\u5230`\u524d\u7f00`\u3001`\u540e\u7f00`\u8fd9\u6837\u654f\u611f\u7684\u8bcd\u8bed\uff0c\u6211\u4eec\u4e00\u5b9a\u4f1a\u60f3\u5230\u90a3\u4e2a$Z$\u7b97\u6cd5\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u53ef\u4ee5\u5728\u7ebf\u6027\u7684\u65f6\u95f4\uff08\u5747\u644a\u7684\uff09\u5185\u9012\u63a8\u51fa$z$\u6570\u7ec4\uff0c\u5373\u6bcf\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u7684\u6700\u957f\u7684\u4e0e\u67d0\u4e2a\u524d\u7f00\u76f8\u540c\u7684\u5b50\u4e32\u7684\u957f\u5ea6\u3002~~\uff08\u5f88\u7ed5\u5bf9\u5427\uff1f\u6211\u4e5f\u8fd9\u4e48\u89c9\u5f97\u2026\u2026\uff09~~\n\n\u770b\u4e2a\u4f8b\u5b50\uff1a\n\n$S$=\"abaab\"\n\n\u663e\u7136\uff0c$z_0$\u5c31\u662f\u8fd9\u4e2a\u4e32\u672c\u8eab\u7684\u957f\u5ea6\uff0c\u6211\u4eec\u4fbf\u4e0d\u505a\u8ba8\u8bba\u3002$z_1$\u662f$0$\uff0c\u56e0\u4e3a$S[1]$\u662f'b'\uff0c\u800c$S$\u6ca1\u6709\u4ee5$b$\u5f00\u5934\u7684\u524d\u7f00\uff1b$z_2$\u662f$1$\uff0c\u56e0\u4e3a$S[2]==S[0]$\u4f46\u662f\uff0c$S[3]\\ne S[1]$\u6240\u4ee5\u957f\u5ea6\u4e3a$1$\uff1b$z_3$\u662f$2$\uff0c\u56e0\u4e3a$S[3]==S[0],S[4]==S[1]$\uff0c\u6240\u4ee5\u957f\u5ea6\u4e3a$2$\uff1b\u663e\u7136\uff0c$z_4$\u5c31\u662f$0$\u4e86\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5148\u770b\u4ee3\u7801\uff08\u6ce8\u91ca\u5728\u4ee3\u7801\u91cc\u6709\uff09\uff1a\n\n```\n#include<bits/stdc++.h>\n#define F(i,l,r) for(register int i=l;i<=r;i++)\n#define ll long long\n#define mem(a,b) memset(a,b,sizeof(a))\n#define p_b push_back\n#define m_p make_pair\n#define il inline\nusing namespace std;\nconst int N=1e6+5;\nint z[N],n;\nchar s1[N];\nil void get_z(char *s1){//\u83b7\u5f97\u4e32s1\u7684z\u6570\u7ec4\n\tint L=0,R=0;//\u8fd9\u4e2aL\uff0cR\u6700\u540e\u662f\u7528\u6765\u770b\u5f53\u524d\u5f00\u59cb\u7684\u6700\u5927\u5339\u914d\u957f\u5ea6\u7684\n\tF(i,1,n-1) {\n\t\tif(i>R) {//\u5982\u679ci>R\uff0c\u90a3\u4e48\u8bf4\u660e\u8fd9\u4e2a\u533a\u95f4\u7684\u4fe1\u606f\u4e00\u70b9\u70b9\u90fd\u6ca1\u6709\u88ab\u521a\u521a\u7684\u9012\u63a8\u6240\u66f4\u65b0\u5230\uff0c\u90a3\u4e48\u600e\u4e48\u529e\u5462\uff1f\u53ea\u80fd\u4e00\u4e2a\u4e00\u4e2a\u533a\u5339\u914d\u54af\u3002\n\t\t\tL=i,R=i;\n\t\t\twhile(R<n&&s1[R-L]==s1[R]) R++;//\u8fd9\u91cc\u7684\u4e00\u4e2a\u4e00\u4e2a\u5339\u914d\u770b\u4e0a\u53bb\u6700\u52a3\u7684\u590d\u6742\u5ea6\u662fO(n)\u7684\uff0c\u90a3\u4e48\u6574\u4e2a\u7b97\u6cd5\u4e0d\u5c31\u662fO(n^2)\u4e86\u4e48\uff1f\n            //\u4f46\u662f\u4f60\u60f3\uff0c\u6211\u4eec\u8fd9\u91cc\u7684\u9012\u63a8\u662f\u56e0\u4e3a\u5f53\u524d\u7684\u70b9i\u662f\u6ca1\u6709\u88ab\u4e4b\u524d\u7684\u9012\u63a8\u6240\u8986\u76d6\u5230\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u4e0d\u77e5\u9053\u8fd9\u91cc\u5230\u5e95\u662f\u4e2a\u4ec0\u4e48\u60c5\u51b5\u3002\u4f46\u662f\u5f53\u6211\u4eec\u6b64\u5904\u9012\u63a8\u4e86\u5f88\u591a\uff0c\u90a3\u540e\u9762\uff08\u770b\u540e\u9762else\u7684\u7b2c\u4e00\u4e2aif\uff09\u662f\u4e0d\u662f\u4e0d\u7528\u9012\u63a8\uff0c\u76f4\u63a5O(1)\u83b7\u5f97\u7b54\u6848\u4e86\uff1f\n\t\t\tz[i]=--R-L+1;//\u6700\u540e\u7684R\u591a\u52a0\u4e86\u4e00\u4e2a\uff0c\u624b\u52a8\u6a21\u62df\u5c31\u60f3\u6e05\u695a\u4e86\n\t\t}\n\t\telse {\n\t\t\tint k=i-L;//\u90a3\u4e48\u6b64\u5904\u5c31\u662fZ\u7b97\u6cd5\u7684\u7cbe\u534e\u4e86\uff0c\u5b83\u5229\u7528\u4e86L\uff0cR\u5355\u8c03\u4e0d\u51cf\u7684\u7279\u6027\u6c42\u51fa\u4e86i\u8fd9\u4e2a\u4f4d\u7f6e\u4e00\u5b9a\u662f\u5728\u54ea\u91cc\u88ab\u6c42\u8fc7z\u4e86\u7684\n\t\t\tif(z[k]<R-i+1) z[i]=z[k];//\u5982\u679ci\u8fd9\u4e2a\u4f4d\u7f6e\u7684z\u5168\u90e8\u90fd\u88ab\u6c42\u8fc7\u4e86\uff0c\u90a3\u4e48\u76f4\u63a5\u66f4\u65b0\uff08\u5e94\u8be5\u662fz[k]+i-1<R\uff0c\u8fd9\u6837\u5e94\u8be5\u66f4\u597d\u7406\u89e3\uff09\n\t\t\telse {//\u4e0d\u7136\u5c31\u8bf4\u660e\u6211\u4eec\u53ea\u6709\u4e00\u90e8\u5206\u88ab\u66f4\u65b0\u4e86\uff0c\u90a3\u4e48\u628a\u5269\u4e0b\u7684\u70c2\u644a\u5b50\u7ee7\u7eed\u4e00\u4e2a\u4e2a\u5339\u914d\u5b8c\u5373\u73c2\n\t\t\t\tL=i;\n\t\t\t\twhile(R<n&&s1[R-L]==s1[R]) R++;\n\t\t\t\tz[i]=--R-L+1;\n\t\t\t}\n\t\t}\n\t}\n}\nint maxn=-10,pos;//maxn\u662f\u672c\u9898\u7684\u53e6\u4e00\u4e2a\u6838\u5fc3\n//maxn\u662f\u6765\u770b\u5f53\u524d\u6700\u5927\u7684z[i]\u7684\uff0c\u5982\u679c\u8bf4\u6211\u4eec\u5df2\u7ecf\u627e\u5230\u4e86\u4e00\u4e2a\u540e\u7f00\u524d\u7f00\uff0c\u5e76\u4e14\u5728i\u524d\u9762\u7684\u6700\u5927\u7684z[i]\u662f\u8981\u6bd4n-i\u957f\u7684\uff0c\u8bf4\u660e\u5728\u4e2d\u95f4\u81f3\u5c11\u4e5f\u51fa\u73b0\u4e86\u4e00\u4e2a\u76f8\u540c\u7684\u5b50\u4e32\uff08\u4e3e\u4e2a\u6817\u5b50\u5c31\u80fd\u61c2\u5566\uff01\uff09\nint main() {\n\tscanf(\"%s\",s1);\n\tn=strlen(s1);\n\tget_z(s1);\n\tF(i,1,n-1) {\n\t\tif(z[i]+i==n&&maxn>=n-i) {//\u663e\u7136,z[i]+i==n\u5c31\u8bf4\u660e\u4e86\u8fd9\u4e2a\u4e32\u65e2\u662f\u524d\u7f00\u53c8\u662f\u540e\u7f00\uff0c\u56e0\u4e3ai+\u4e0e\u4ecei\u5f00\u59cb\u4e0e\u603b\u4e32\u7684\u524d\u7f00\u5339\u914d\u957f\u5ea6\u7684\u6700\u5927\u503c\u4e00\u65e6\u7b49\u4e8e\u4e86n\uff0c\u90a3\u4e48\u8bf4\u660e\u8fd9\u4e2a\u4e32\u4ecei\u5f00\u59cb\u4e00\u76f4\u63a5\u5230\u4e86\u6700\u540e\u3002\n\t\t\tpos=i;//\u5982\u679c\u7b26\u5408\u6761\u4ef6\u5c31\u8bb0\u5f55\u4e00\u4e0b\u5408\u6cd5\u7684\u4f4d\u7f6e\n            //\u6b64\u5904\u6ca1\u6709\u5224\u65ad\u6700\u5927\u957f\u5ea6\u662f\u56e0\u4e3a\u6211\u679a\u4e3e\u7684\u5faa\u73af\u5c31\u5df2\u7ecf\u4fdd\u8bc1\u4e86\u957f\u5ea6\u662f\u7531\u5927\u5411\u5c0f\u9012\u51cf\u7684\u4e86\n\t\t\tbreak;//break;\n\t\t}\n\t\tmaxn=max(maxn,z[i]);//\u5bfb\u627e\u6700\u5927\u7684z[i]\n\t}\n\tif(!pos) puts(\"Just a legend\");//\u6ca1\u6709\u5c31\u8f93\u51fa\u8fd9\u4e2a\n\telse F(i,0,n-pos-1) printf(\"%c\",s1[i]);//\u6709\u5c31\u8f93\u51fa\u5457\n\treturn 0;\n}\n```",
        "postTime": 1596744017,
        "uid": 117648,
        "name": "tuzhewen",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF126B \u3010Password\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u4e2asam\u7684\u505a\u6cd5\uff0c\u867d\u7136\u8fc7\u4e0d\u53bb\u4f46\u662f\u8fd9\u662f\u4e00\u4e2a\u826f\u597d\u7684\u601d\u8def\n\n\u9996\u5148\u7528sam\u5224\u65ad\u4e00\u4e2a\u5b50\u4e32\u662f\u5426\u5728\u53e6\u4e00\u4e2a\u5b50\u4e32\u91cc\u51fa\u73b0\u8fc7\n\n\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u6bcf\u4e2a\u8282\u70b9\u5b50\u6811\u7684right\u96c6\u5408\n\n\u770b\u957f\u5ea6\u4e3a$len$\u7684\u5b50\u4e32\u662f\u4e0d\u662f\u5728\u5b50\u4e32$[l,r]$\u4e2d\uff0c\u5c31\u627e\u5230\u5b83\u5bf9\u5e94\u7684\u8282\u70b9$p$\uff0c\u5728\u5176\u7ebf\u6bb5\u6811\u4e0a\u770b$[+len-1,r]$\u7684\u533a\u95f4\u548c\u662f\u4e0d\u662f\u5927\u4e8e0\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u524d\u7f00$i$\uff0c\u7528$pos[i]$\u8868\u793a\u5176\u5bf9\u5e94\u8282\u70b9\uff0c\u5b83\u540c\u65f6\u662f\u4e2a\u540e\u7f00\u7684\u8bdd\uff0c\u90a3\u5b83\u5c31\u4f1a\u5728$[n-i+1,n]$\u51fa\u73b0\u8fc7\uff0c\u5728$pos[i]$\u7684\u7ebf\u6bb5\u6811\u4e0a\u67e5\u6709\u6ca1\u6709$[n,n]$\u5373\u53ef\n\n\u8fd8\u6709\u4e00\u4e2a\u7ea6\u675f\u5c31\u662f\u5b58\u5728\u6709\u4e00\u4e2a\u65e2\u4e0d\u662f\u524d\u7f00\u4e5f\u4e0d\u662f\u540e\u7f00\u7684\u5b50\u4e32\u8ddf\u5b83\u4e00\u6837\uff0c\u90a3\u5c31\u770b\u662f\u4e0d\u662f\u5728$[2,n-1]$\u4e2d\u51fa\u73b0\u8fc7\u5373\u53ef\uff0c\u540c\u7406\n\n```cpp\n#include<cstdio>\n#include<cstring>\ntemplate<class type>inline const void read(type &in)\n{\n\tin=0;char ch=getchar();bool f=0;\n\twhile (ch<48||ch>57){if (ch=='-')f=1;ch=getchar();}\n\twhile (ch>47&&ch<58)in=(in<<3)+(in<<1)+(ch&15),ch=getchar();\n\tif (f)in=-in;\n}\nconst int N=1e6+10;\nint n;\nchar s[N];\ntemplate<int maxn>class Segment_Tree\n{\n\tprivate:\n\t\tstruct tree\n\t\t{\n\t\t\tint sum;\n\t\t\ttree *lson,*rson;\n\t\t\tinline const void pushup()\n\t\t\t{\n\t\t\t\tsum=lson->sum+rson->sum;\n\t\t\t}\n\t\t}*root[maxn],memory_pool[maxn*42],*tail,*null;\n\t\tinline const void init()\n\t\t{\n\t\t\ttail=memory_pool;\n\t\t\tnull=tail++;\n\t\t\tnull->lson=null->rson=null;\n\t\t\tfor (int i=1;i<maxn;i++)root[i]=null;\n\t\t}\n\t\tinline tree *spawn()\n\t\t{\n\t\t\ttree *p=tail++;\n\t\t\tp->lson=p->rson=null;\n\t\t\treturn p;\n\t\t}\n\t\tinline const void insert(tree *&p,int l,int r,int pos)\n\t\t{\n\t\t\tif (p==null)p=spawn();\n\t\t\tp->sum++;\n\t\t\tif (l==r)return;\n\t\t\tint mid=l+r>>1;\n\t\t\tif (pos<=mid)insert(p->lson,l,mid,pos);\n\t\t\telse insert(p->rson,mid+1,r,pos);\n\t\t}\n\t\tinline const int query(tree *p,int l,int r,int L,int R)\n\t\t{\n\t\t\tif (p==null)return 0;\n\t\t\tif (l>R||r<L)return 0;\n\t\t\tif (l>=L&&r<=R)return p->sum;\n\t\t\tint mid=l+r>>1;\n\t\t\treturn query(p->lson,l,mid,L,R)+query(p->rson,mid+1,r,L,R);\n\t\t}\n\t\tinline tree *merge(tree *a,tree *b,int l,int r)\n\t\t{\n\t\t\tif (a==null&&b==null)return null;\n\t\t\tif (a==null)return b;\n\t\t\tif (b==null)return a;\n\t\t\ttree *p=spawn();\n\t\t\tif (l==r)return p->sum=a->sum|b->sum,p;\n\t\t\tint mid=l+r>>1;\n\t\t\tp->lson=merge(a->lson,b->lson,l,mid);\n\t\t\tp->rson=merge(a->rson,b->rson,mid+1,r);\n\t\t\tp->pushup();\n\t\t\treturn p;\n\t\t}\n\tpublic:\n\t\tinline Segment_Tree(){init();}\n\t\tinline const void insert(int p,int k)\n\t\t{\n\t\t\tinsert(root[p],1,n,k);\n\t\t}\n\t\tinline const int query(int p,int l,int r)\n\t\t{\n\t\t\treturn query(root[p],1,n,l,r);\n\t\t}\n\t\tinline const void merge(int a,int b)\n\t\t{\n\t\t\troot[a]=merge(root[a],root[b],1,n);\n\t\t}\n};\ntemplate<int maxn,int maxc>class Suffix_Automaton\n{\n    private:\n        static const int maxs=maxn<<1;\n        Segment_Tree<maxs>sgt;\n        int head[maxs],edc,to[maxs],next[maxs];\n        int len[maxs],last,cnt,son[maxs][maxc],pos[maxn],fa[maxs];\n        inline const void addedge(int u,int v)\n        {\n            next[++edc]=head[u];to[head[u]=edc]=v;\n        }\n        inline const void extend(int id,int c)\n        {\n            int p=last,np=++cnt;\n            sgt.insert(np,id);\n            len[pos[id]=last=np]=len[p]+1;\n            for (;p&&!son[p][c];p=fa[p])son[p][c]=np;\n            if (!p)return fa[np]=1,void();\n            int q=son[p][c];\n            if (len[q]==len[p]+1)return fa[np]=q,void();\n            int nq=++cnt;len[nq]=len[p]+1;\n            memcpy(son[nq],son[q],sizeof(son[q]));\n            fa[nq]=fa[q];fa[q]=fa[np]=nq;\n            for (;son[p][c]==q;p=fa[p])son[p][c]=nq;\n        }\n        inline const void dfs(int p)\n        {\n            for (int i=head[p];i;i=next[i])dfs(to[i]),sgt.merge(p,to[i]);\n        }\n        inline const bool exist(int p,int l,int r)\n        {\n        \treturn sgt.query(pos[p],l+p-1,r);\n        }\n    public:\n        inline const void build()\n        {\n            cnt=last=1;\n            for (int i=1;i<=n;i++)extend(i,s[i]-'a');\n            for (int i=2;i<=cnt;i++)addedge(fa[i],i);\n            dfs(1);\n        }\n        inline const int query()\n        {\n        \tfor (int i=n-1;i;i--)\n        \t\tif (exist(i,n-i+1,n)&&exist(i,2,n-1))\n        \t\t\treturn i;\n        }\n};\nSuffix_Automaton<N,26>sam;\nint main()\n{\n\tscanf(\"%s\",s+1);\n\tn=strlen(s+1);\n\tsam.build();\n\tint p=sam.query();\n\tif (!p)puts(\"Just a legend\");\n\telse for (int i=1;i<=p;i++)putchar(s[i]);\n\treturn 0;\n}\n}\n```",
        "postTime": 1571575559,
        "uid": 14374,
        "name": "zhengrunzhe",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF126B \u3010Password\u3011"
    },
    {
        "content": "# [\u987e](https://www.luogu.org/blog/RPdreamer/#)[z](https://www.cnblogs.com/-guz/)\n\n~~\u4f60\u6ca1\u6709\u53d1\u73b0\u4e24\u4e2a\u5b57\u91cc\u7684blog\u90fd\u4e0d\u4e00\u6837\u561b~~ qwq\n\n\n### \u4e00\u53e5\u8bdd\u9898\u610f\n\n\u6c42\u4e00\u4e2a\u7ed9\u5b9a\u4e32$s$\u7684\u4e00\u4e2a\u5b50\u4e32$T$.\n\n\u6ee1\u8db3\n\n- $T$\u662f$s$\u7684\u524d\u7f00\n- $T$\u662f$s$\u7684\u540e\u7f00\n- $T$\u5728$s$\u4e2d\u95f4\u51fa\u73b0\u8fc7\n\n### ~~xjb~~\u5206\u6790\n\n\u9996\u5148\u660e\u786e\u6211\u4eec\u8981\u627e\u7684\u662f\u8fd9\u79cd\u60c5\u51b5.\n\n![](https://i.loli.net/2018/10/14/5bc3019c59b88.png)\n\n\u6b64\u65f6,\u6211\u4eec\u53d1\u73b0,\u84dd\u8272\u90e8\u5206\u597d\u50cf\u662f\u4ec0\u4e48\u4e1c\u897f?\n\n$KMP$\u7b97\u6cd5\u4e2d\u7684$next$! (\u6700\u957f\u516c\u5171\u524d\u540e\u7f00\u7684\u957f\u5ea6\n\n\u73b0\u5728\u660e\u786e\u4e86\u6211\u4eec\u7684\u89e3\u9898\u65b9\u6cd5,$KMP$\n\n\u90a3\u4e48\u73b0\u5728\u7684\u95ee\u9898\u5c31\u662f\u8981\u627e\u56fe\u4e2d\u7ea2\u8272\u90e8\u5206.\n\n#### \u5982\u4f55\u53bb\u627e\u7ea2\u8272\u90e8\u5206?\n\n\u6211\u4eec\u53d1\u73b0,\u53ef\u4ee5\u5c06\u56fe\u7247\u770b\u6210\u8fd9\u6837.\n\n![](https://i.loli.net/2018/10/14/5bc301d3db0e8.png)\n\n\u8fd9\u6837\u53c8\u6210\u4e86$KMP$\u7b97\u6cd5\u4e2d\u7684$next$\n\n\u90a3\u4e48\u73b0\u5728\u6211\u4eec\u9700\u8981\u77e5\u9053\u6700\u957f\u7684\u957f\u5ea6.\n\n\u663e\u7136,\u4e2d\u95f4\u90e8\u5206\u7684\u957f\u5ea6\u53ef\u80fd\u6bd4$s$\u7684\u524d\u7f00\u6216\u540e\u7f00\u957f\u4ea6\u53ef\u80fd\u77ed,\u4f46\u662f\u957f\u5ea6\u6700\u5927\u53ea\u53ef\u80fd\u662f$next[n]$.\n\n\u5373\u771f\u5b9e\u7b54\u6848$ans \\leq next[n]$\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5728$2 $\u5230$n-1$\u4e2d\u627e\u5230\u7b2c\u4e00\u4e2a\u6bd4$next[n]$\u5c0f\u7684\u4f4d\u7f6e\u3002\n\n\u800c,\u6211\u4eec\u9700\u8981\u8bb0\u5f55\u4e00\u4e0b$mxx=\\sum_{i=2}^{n-1}next_i$\n\n\u6709\u4ec0\u4e48\u7528?\n\n> \u8003\u8651\u4e00\u4e0b\u6211\u4eec\u7684\u4e2d\u95f4\u90e8\u5206\u7684\u5b50\u4e32\u957f\u5ea6\u53ea\u53ef\u80fd\u662f$\\leq next[n]$\u7684,\u56e0\u6b64\u6211\u4eec\u8981\u4e00\u76f4\u8df3\u8f6c$next[n]$\u77e5\u9053\u67d0\u4e2a\u4f4d\u7f6e\u5c0f\u4e8e\u7b49\u4e8e\u4e2d\u95f4\u90e8\u5206\u6700\u957f\u5b50\u4e32\u7684\u957f\u5ea6.\n\n\u8fd9\u4e2a\u65f6\u5019\u95ee\u9898\u5f97\u4ee5\u89e3\u51b3.\n\n\u5224\u65ad\u65e0\u89e3\u7684\u8bdd\u53ea\u9700\u8981\u5224\u65ad\u8df3\u8f6c\u5230\u7684$next$\u662f\u5426\u4e3a$0$\u8f93\u51fa$Just\\ a\\ legend$\u5373\u53ef\u3002\n\n\u6700\u540e\u53ea\u9700\u8981\u679a\u4e3e$i$\u4ece$2$\u5230$n-1$\u53bb\u627e\u90a3\u4e2a$next[i]$\u5373\u53ef.\n\n\u7136\u540e\u76f4\u63a5\u8f93\u51fa\u5373\u53ef.\n\n``\u4ee3\u7801``\n\n```c++\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#define R register\nusing namespace std;\nchar s[1000080];\nint len,nex[1000080],k,mxx,now;\ninline void judge()\n{\n\tif(!now)\n\t{\n\t\tputs(\"Just a legend\");\n\t\texit(0);\n\t}\n}\nint main()\n{\n\tscanf(\"%s\",s+1);\n\tlen=strlen(s+1);nex[1]=0;\n\tfor(R int i=2;i<=len;i++)\n\t{\n\t\twhile(k and s[k+1]!=s[i])k=nex[k];\n\t\tif(s[i]==s[k+1])k++;\n\t\tnex[i]=k;\n\t\tif(i!=len)mxx=max(nex[i],mxx);\n\t}\n\tnow=nex[len];\n\tjudge();while(now>mxx)now=nex[now];judge();\n\tfor(R int i=2;i<len;i++)\n\t\tif(now==nex[i])\n\t\t{\n\t\t\tfor(R int j=i-now+1;j<=i;j++)\n\t\t\t\tprintf(\"%c\",s[j]);\n\t\t\texit(0);\n\t\t}\n}\n```",
        "postTime": 1539506699,
        "uid": 87960,
        "name": "\u987ez",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF126B \u3010Password\u3011"
    },
    {
        "content": "\u672c\u9898\u7684\u9898\u610f\u9898\u76ee\u4e2d\u5df2\u7ecf\u8bf4\u5f97\u5f88\u6e05\u695a\u4e86\u3002\n\n\u5f62\u5f0f\u5316\u5730\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 $S$ \uff0c\u627e\u5230\u65e2\u662f $S$ \u7684\u524d\u7f00\u53c8\u662f $S$ \u7684\u540e\u7f00\u540c\u65f6\u53c8\u5728 $S$ \u4e2d\u95f4\u51fa\u73b0\u8fc7\u7684\u6700\u957f\u5b50\u4e32\u3002\n\n\u90a3\u4e48\u8fd9\u9053\u9898\u5c31\u5f88\u6c34\u4e86\uff0c\u9996\u5148\u4f60\u9700\u8981\u660e\u767d$next$\u6570\u7ec4\u7684\u542b\u4e49\uff1a\u4ee5\u5f53\u524d\u70b9\u4e3a\u7ec8\u70b9\u7684\u5b50\u4e32\u4e0e\u6bcd\u4e32\u7684 $LCP$ \u957f\u5ea6\u3002\u77e5\u9053\u4e86\u8fd9\u4e00\u70b9\u5c31\u53ef\u4ee5\u5f88\u8f7b\u677e\u5730\u5207\u4e86\u8fd9\u9053\u9898\uff0c\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n\u53ef\u4ee5\u60f3\u5230\uff1a\u5176\u5b9e\u6240\u6c42\u5b50\u4e32\u7684\u957f\u5ea6\u5373\u4e3a$Min(Max(next[1$~$n-1]),next[n])$\uff0c\u6211\u4eec\u5c06\u95ee\u9898\u5206\u89e3\u4e3a\u4e24\u6b65:\n\n\u2460\u627e\u5230\u65e2\u662f $S$ \u7684\u524d\u7f00\u53c8\u662f $S$ \u7684\u540e\u7f00\u7684\u5b50\u4e32\u3002\n\n\u2461\u627e\u5230\u6ee1\u8db3\u6761\u4ef6\u2460\u5e76\u4e14\u5728 $S$ \u4e2d\u95f4\u51fa\u73b0\u8fc7\u7684\u6700\u957f\u5b50\u4e32\n\n\u95ee\u9898\u2460\u5927\u5bb6\u90fd\u53ef\u4ee5\u5f88\u8f7b\u677e\u5730\u505a\u51fa\uff0c\u6240\u6c42\u5b50\u4e32\u957f\u5ea6\u5373\u4e3a$next[n]$\n\n\u800c\u95ee\u9898\u2461\u5462\uff1f\u5176\u5b9e\u548c\u2460\u5927\u81f4\u76f8\u540c\uff0c\u4f60\u53ea\u9700\u8981\u627e\u51fa$next[1$~$n-1]$\u4e2d\u7684\u6700\u5927\u503c\uff0c\u4ee5\u8fd9\u4e2a\u6700\u5927\u503c\u4e3a\u957f\u5ea6\u7684\u5b50\u4e32\u662f\u6ee1\u8db3\u65e2\u662f $S$ \u7684\u524d\u7f00\u53c8\u5728 $S$ \u4e2d\u95f4\u51fa\u73b0\u8fc7\u7684\u6700\u957f\u5b50\u4e32\u7684\u6761\u4ef6\uff0c\u4f46\u662f\u540c\u65f6\u4f60\u8fd8\u8981\u6ee1\u8db3\u5b83\u662f $S$ \u7684\u540e\u7f00\uff0c\u6240\u4ee5$Min(Max(next[1$~$n-1]),next[n])$\u5373\u4e3a\u6240\u6c42\u5b50\u4e32\u7684\u957f\u5ea6\u3002\u4ee5\u4e0b\u662f\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int N = 1e6 + 5;\nint nxt[N];\nstring temp;\nchar s[N];\nint main()\n{\n\tint maxx = 0;\n\tcin >> temp;\n\tfor (int i = 0; i < temp.size();i++)\n\t\ts[i + 1] = temp[i];\n\tint n = temp.size();\n\tfor (int i = 2, j = 0; i <= n; i++)\n\t{\n\t\twhile(j&&s[i]!=s[j+1])\n\t\t\tj = nxt[j];\n\t\tif(s[i]==s[j+1])\n\t\t\tj++;\n\t\tnxt[i] = j;\n\t\tif(i!=n)\n\t\t    maxx = max(maxx, nxt[i]);\n\t}\n\tif(!nxt[n])\n\t{\n\t\tputs(\"Just a legend\");\n\t\treturn 0;\n\t}\n\tint x = nxt[n];\n\twhile(x>maxx)\n\t\tx = nxt[x];\n\tif(!x)\n\t{\n\t\tputs(\"Just a legend\");\n\t\treturn 0;\n\t}\n\tfor (int i = 1; i <= x; i++)\n\t\tcout << s[i];\n\tputs(\"\");\n    return 0;\n}\n```\n",
        "postTime": 1609811974,
        "uid": 278481,
        "name": "Link_Space",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF126B \u3010Password\u3011"
    },
    {
        "content": "\u7b2c\u4e00\u904d\u8bfb\u5b8c\u8fd9\u9053\u9898\uff0c\u8fd9\u4e0d\u5c31\u662f\u4e2a\u88f8\u7684KMP\u677f\u5b50\u5417\uff0c\u7136\u540e\u8fc5\u901f\u6253\u51fa\u4e86KMP\uff0c\u53d1\u73b0\u5e76\u8fc7\u4e0d\u4e86\u6837\u4f8b2\uff0c\u4e8e\u662f\u53c8\u4ed4\u7ec6\u8bfb\u4e86\u4e00\u4e0b\u9898\uff0c\u53d1\u73b0\u8bfb\u6f0f\u4e86\u4e00\u4e2a\u6761\u4ef6\uff0c\u5373\u9700\u8981\u5728\u4e2d\u95f4\u4e5f\u51fa\u73b0\u8fc7\uff0c\u56e0\u4e3a\u6211\u4eec\u77e5\u9053,KMP\u4e2d\u7684next\u6570\u7ec4\u5b58\u7684\u662f\u76f8\u540c\u7684\u524d\u7f00\u548c\u540e\u7f00\u7684\u957f\u5ea6,\u90a3\u4e48\u53ea\u9700\u8981\u627e\u5728\u4e2d\u95f4\u51fa\u73b0\u8fc7\u524d\u7f00\u957f\u5ea6,\u5e76\u6807\u8bb0\u4e00\u4e0b\u5c31\u884c\u4e86,\u6700\u540e\u5728\u5339\u914d\u7684\u65f6\u5019\u591a\u5224\u65ad\u4e00\u4e0b\u3002\n\n\u8be6\u89c1\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nconst int N = 1e6 + 5;\n\nstring s;\nint net[N], num[N];\nbool is[N];\n\nint main()\n{\n    cin >> s;\n    for (int i = 1, j = 0; s[i]; i++)\n    {\n        while (j && s[i] != s[j])\n            j = net[j - 1];\n        if (s[i] == s[j])\n            j++;\n        net[i] = j;\n    }//\u6c42next\n    int len = s.length();\n    for (int i = 1, j = 0; i < len - 1; i++)\n    {\n        while (j && s[i] != s[j])\n            j = net[j - 1];\n        if (s[i] == s[j])\n            j++;\n        is[j] = true;\n    }//\u627e\u51fa\u4e2d\u95f4\u51fa\u73b0\u8fc7\u7684\u524d\u7f00\u7684\u957f\u5ea6\n    int j = 0;\n    for (int i = 0; i < len; i++)\n    {\n        while (j && s[i] != s[j])\n            j = net[j - 1];\n        if (s[i] == s[j])\n            j++;\n        while (j && !is[j])\n            j = net[j - 1];//\u5224\u65ad\u662f\u5426\u5728\u4e2d\u95f4\u51fa\u73b0\u8fc7\n    }//\u5339\u914d\n    if (!j)\n        cout << \"Just a legend\";\n    else\n        for (int i = 0; i < j; i++)\n            cout << s[i];\n    return 0;\n}\n```\n",
        "postTime": 1609199692,
        "uid": 277863,
        "name": "BzhH",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF126B \u3010Password\u3011"
    },
    {
        "content": "- Z  \u7b97\u6cd5\n\n\u8003\u8651\u5230\u8fd9\u4e2a\u73a9\u610f\u662f\u524d\u7f00\uff0c\u662f\u540e\u7f00\uff0c\u8fd8\u8981\u5728\u4e0d\u662f\u524d\u7f00\u4e0d\u662f\u540e\u7f00\u7684\u4f4d\u7f6e\u51fa\u73b0\u8fc7\u3002\n\n\u5c31\u53ef\u4ee5\u7528\u4e00\u4e2a $vis$ \u6570\u7ec4\u6765\u5224\u65ad\u8fd9\u4e2a\u548c\u524d\u7f00 LCP \u6709\u6ca1\u6709\u51fa\u73b0\u8fc7\uff0c\u5c31\u6ca1\u6709\u4e86\u3002\n\n\u5982\u679c\u8981\u7528 SAM \u7684\u8bdd\uff0c\u53ef\u4ee5\u542f\u53d1\u5f0f\u5408\u5e76 \uff0c\u5224\u65ad\u8fd9\u4e2a\u8282\u70b9\u4e0a\u6709\u6ca1\u6709 ed \u4e3a $len_u$ \u548c $n$ \u7684\uff0c\u4ee5\u53ca\u96c6\u5408\u5927\u5c0f\u8981\u5927\u4e8e\u7b49\u4e8e3\uff0c\u5c31\u53ef\u4ee5\u4e86\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <cstring>\nconst int maxn = 1e6 + 61;\n\nint main() {\n\t\n\tauto getZ = [&](char*s, int len) {\n\t\tstd::vector <int> Z(len + 1, 0);\n\t\tZ[1] = len;\n\t\tfor(int i = 2, l = 0, r = 0; i <= len; i++) {\n\t\t\tif(i < r)\n\t\t\t\tZ[i] = std::min(Z[i - l + 1], r - i + 1);\n\t\t\twhile(i + Z[i] <= len && s[i + Z[i]] == s[1 + Z[i]])\n\t\t\t\t++Z[i];\n\t\t\tif(i + Z[i] - 1 > r)\n\t\t\t\tl = i, r = i + Z[i] - 1;\n\t\t}\n\t\treturn Z;\n\t};\n\t\n\tstatic char s[maxn];\n\tstatic int n;\n\tscanf(\"%s\", s + 1), n = strlen(s + 1);\n\tstd::vector <int> Z = getZ(s, n), vis(n + 1, 0);\n\tfor(int i = 2; i <= n; i++)\n\t\tif(!vis[Z[i]]) while(!vis[Z[i]]) vis[Z[i]--] = 1;\n\t\telse if(i + Z[i] - 1 == n) { int p = i; while(p <= n) putchar(s[p++]); putchar('\\n'); return 0; }\n\tprintf(\"Just a legend\\n\");\n\treturn 0;\n}\n```",
        "postTime": 1588856014,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF126B \u3010Password\u3011"
    },
    {
        "content": "**\u4e00\u4e2a\u6709\u70b9\u66b4\u529b\u7684\u76f4\u767d\u60f3\u6cd5**\n\n------------\n\n\u5148\u5efa\u597dnext\u6570\u7ec4\uff0c\u627e\u4e00\u4e2aint\u53d8\u91cfsig=next[n-1]\uff08\u8fd9\u91ccsig=0\u65f6\u76f4\u63a5\u8f93\u51fa\u201cJust a legend\u201d\uff09\uff0c\u7136\u540e\u4ece1~n-2\u904d\u5386next\u6570\u7ec4\uff0c\u6709\u76f8\u540c\u7684\u957f\u5ea6\u5c31\u8f93\u51fa\uff0c\u5426\u5219\u5c31sig=next[sig-1]\u627e\u4e0b\u4e00\u4e2a\u66f4\u77ed\u7684\u65e2\u662f\u524d\u7f00\u53c8\u662f\u540e\u7f00\u7684\u5b50\u4e32\u957f\u5ea6\uff0c\u5f53sig=0\u65f6\u8f93\u51fa\u201cJust a legend\u201d\u3002\n\n------------\n```\n#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define db double\n#define ull unsigned long long\n#define Pi 3.1415926535\nconst int MaxN =1000005;\nchar s[MaxN];int nxt[MaxN];\nvoid prefix_function(char *s,int *pi) {\n    int n = strlen(s);\n    pi[0]=0;\n    for (int i = 1; i < n; i++) {\n        int j = pi[i - 1];\n        while (j > 0 && s[i] != s[j]) j = pi[j - 1];\n        if (s[i] == s[j]) j++;\n        pi[i] = j;\n    }\n}\nint main() {\n    cin>>s;\n    prefix_function(s,nxt);\n    int n=strlen(s);\n    int sig=nxt[n-1];\n    if(sig==0)cout<<\"Just a legend\"<<endl;\n    else{\n        while (sig){\n            for (int i = 1; i <n-1 ; ++i) {\n                if(nxt[i]==sig){\n                    for (int j = 0; j <nxt[i] ; ++j) {\n                        cout<<s[j];\n                    }\n                    return 0;\n                }\n            }\n            sig=nxt[sig-1];\n        }\n        cout<<\"Just a legend\"<<endl;\n    }\n\t return 0;\n}\n```\n",
        "postTime": 1578993082,
        "uid": 239864,
        "name": "Bazoka13",
        "ccfLevel": 0,
        "title": "\u6bd4\u8f83\u66b4\u529b\u7684\u9898\u89e3 CF126B \u3010Password\u3011"
    }
]