[
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\u9996\u5148\u5b9a\u4e49\u82b1\uff1a\n\n\u4e00\u6735 $n$ \u9636\u7684\u82b1\u5c31\u662f\u7531\u4e00\u4e2a $n$ \u8fb9\u5f62\uff08$n>2$\uff09\uff0c\u5728\u6bcf\u4e2a\u9876\u70b9\u4e0a\u518d\u62d3\u5c55\u4e00\u4e2a $n$ \u8fb9\u5f62\u6240\u6784\u6210\u7684\u56fe\u5f62\u3002\n\n![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1811F/e34e743f4528bb273ae01a80cb827e1aa6e9fba5.png)\n\n\u8fd9\u662f\u4e00\u4e2a $3$ \u9636\u7684\u82b1\u3002\n\n\u7ed9\u4f60\u4e00\u4e2a\u56fe\uff0c\u95ee\u4f60\u5b83\u662f\u4e0d\u662f\u4e00\u6735\u82b1\u3002\n\n\u6bcf\u4e2a\u70b9\u6709 $T$ \u7ec4**\u591a\u6d4b**\u6570\u636e\u3002\n\n### \u89e3\u9898\u601d\u8def\n\u9996\u5148\u5f88\u5bb9\u6613\u77e5\u9053\uff0c\u8fd9\u5f20\u56fe\u4e0a\u53ea\u4f1a\u6709\u4e24\u79cd\u70b9\uff0c\u4e00\u79cd\u5ea6\u4e3a $2$\uff0c\u4e00\u79cd\u5ea6\u4e3a $4$\u3002\u90a3\u4e48\u6211\u4eec\u5728\u5efa\u56fe\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u5224\u65ad\u67d0\u4e9b\u56fe\u662f\u5426\u662f\u82b1\u3002\n\n\u7136\u540e\u53c8\u5f88\u5bb9\u6613\u60f3\u5230\u5982\u679c\u4e00\u5f20\u56fe\u662f\u82b1\uff0c\u90a3\u4e48\u5ea6\u4e3a $4$ \u7684\u70b9\u4e00\u5b9a\u662f\u4e2d\u95f4\u7684\u90a3 $n$ \u4e2a\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u7edf\u8ba1\u4e00\u4e0b\u8fd9\u79cd\u70b9\u7684\u6570\u91cf\uff0c\u8fd9\u5c31\u662f\u8fd9\u4e2a\u53ef\u80fd\u7684\u82b1\u7684\u9636\u6570\u3002\u5176\u4ed6\u7684\u70b9\u56e0\u4e3a\u6bcf $n-1$ \u4e2a\u5c31\u5bf9\u5e94\u7740\u4e00\u4e2a\u4e2d\u95f4\u591a\u8fb9\u5f62\u7684\u70b9\uff0c\u6240\u4ee5\u663e\u7136 $cnt3=cnt4\\times (cnt4-1)$\uff0c\u6b64\u5904 $cnt3$ \u8868\u793a\u5ea6\u4e3a $2$ \u7684\u70b9\u7684\u4e2a\u6570\uff0c$cnt4$ \u8868\u793a\u5ea6\u4e3a $4$ \u7684\u70b9\u7684\u4e2a\u6570\u3002\n\n\u63a5\u4e0b\u6765\u4fbf\u662f\u4ece\u4e2d\u95f4\u7684 $n$ \u4e2a\u70b9\u5165\u624b\u3002\u9996\u5148\u8fd9 $n$ \u4e2a\u70b9\u4e00\u5b9a\u8981\u662f\u6210\u4e00\u4e2a\u73af\uff0c\u5e76\u4e14\u73af\u4e0a\u6bcf\u4e2a\u4e0d\u76f8\u90bb\u7684\u70b9\u4e4b\u95f4\u4e0d\u80fd\u76f4\u63a5\u8054\u901a\u3002\u505a\u5b8c\u8fd9\u4e00\u6b65\u4e4b\u540e\u6211\u4eec\u518d\u4ece\u8fd9\u4e9b\u70b9\u51fa\u53d1\uff0c\u627e\u957f\u5ea6\u540c\u6837\u4e3a $n$\uff0c\u4f46\u662f\u5176\u4ed6\u8282\u70b9\u7684\u5ea6\u7686\u4e3a $2$ \u7684\u73af\uff0c\u8981\u6c42\u548c\u524d\u4e00\u6b65\u4e00\u6837\uff0c\u73af\u4e0a\u6bcf\u4e2a\u4e0d\u76f8\u90bb\u7684\u70b9\u4e4b\u95f4\u4e0d\u80fd\u76f4\u63a5\u8054\u901a\u3002\u5982\u679c\u4e0d\u6ee1\u8db3\u8fd9\u4e9b\u6761\u4ef6\u90a3\u8fd9\u5f20\u56fe\u4e00\u5b9a\u4e0d\u662f\u82b1\uff0c\u5426\u5219\u5c31\u662f\u82b1\u3002\n\n### \u4e00\u4e9b\u5efa\u8bae\n\u867d\u7136\u5404\u4f4d\u90fd\u662f\u795e\u7287\uff0c\u4f46\u662f\u5728\u6e05\u7a7a\u56fe\u7684\u65f6\u5019\u8fd8\u662f\u8981\u5c0f\u5fc3\uff0c\u6ce8\u610f\u6570\u636e\u7ec4\u6570\u548c\u8303\u56f4\u3002\n\n### AC \u4ee3\u7801\nDEBUG \u90e8\u5206\u56e0\u4e3a\u9519\u7684\u592a\u9891\u7e41\uff0c\u6240\u4ee5\u8c03\u4e86\u4e00\u4e0b\uff0c\u6709\u70b9\u4e11\uff0c\u8fd8\u8bf7\u89c1\u8c05\u3002\n```#include<bits/stdc++.h>\n#define ll long long\n#define db double\n#define pii pair<int,int>\n#define pll pair<ll,ll>\n#define pdd pair<db,db>\n#define F first\n#define S second\n#define DEBUG\nusing namespace std;\nconst int N=2e5+5;\nint t,n,m,u,v;\nvector<int> e[N],q;\nmap<int,int> mp;\nint main(){\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tfor(int i=1;i<=n;++i) e[i].clear();\n\t\tmp.clear();\n\t\tq.clear();\n\t\tfor(int i=1;i<=m;++i){\n\t\t\tscanf(\"%d%d\",&u,&v);\n\t\t\te[u].push_back(v);\n\t\t\te[v].push_back(u);\n\t\t}\n\t\tfor(int i=1;i<=n;++i){\n\t\t\t++mp[e[i].size()];\n\t\t}\n\t\t#ifdef DEBUG\n\t\tprintf(\"%d\\n\",mp.size());\n\t\t#endif\n\t\tif(mp.size()!=2){\n\t\t\tprintf(\"NO\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tint cnt[5]={0,0,0},pos,fa=0;\n\t\tfor(pii to:mp){\n\t\t\tcnt[++cnt[0]]=to.F;\n\t\t\tcnt[cnt[0]+2]=to.S;\n\t\t}\n\t\tif(2*cnt[1]!=cnt[2] || cnt[3]!=cnt[4]*cnt[4]-cnt[4] || cnt[1]!=2){\n\t\t\t#ifdef DEBUG\n\t\t\tprintf(\"%d %d %d %d\\n\",cnt[1],cnt[2],cnt[3],cnt[4]);\n\t\t\t#endif\n\t\t\tprintf(\"NO\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tfor(int i=1;i<=n;++i){\n\t\t\tif(e[i].size()==cnt[2]){\n\t\t\t\tpos=i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tbool flag=0;\n\t\tq.push_back(pos);\n\t\tfor(int i=1;i<=cnt[4];++i){\n\t\t\t#ifdef DEBUG\n\t\t\tprintf(\"%d | \",pos);\n\t\t\t#endif\n\t\t\tfor(int to:e[pos]){\n\t\t\t\tif(e[to].size()==cnt[2] && fa!=to){\n\t\t\t\t\t#ifdef DEBUG\n\t\t\t\t\tprintf(\"%d \",to);\n\t\t\t\t\t#endif\n\t\t\t\t\tfa=pos;\n\t\t\t\t\tpos=to;\n\t\t\t\t\tif(i!=cnt[4]) q.push_back(to);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t#ifdef DEBUG\n\t\t\tputs(\"\");\n\t\t\t#endif\n\t\t\tif(pos==q[0] && i!=cnt[4]){\n\t\t\t\tflag=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t#ifdef DEBUG\n\t\tfor(int p:q) printf(\"%d \",p);\n\t\tputs(\"\");\n\t\t#endif\n\t\tif(pos!=q[0] || flag || q.size()!=cnt[4]){\n\t\t\tprintf(\"NO\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tfor(int p:q){\n\t\t\tfa=0;\n\t\t\tint cc=0;\n\t\t\tpos=p;\n\t\t\tfor(int i=1;i<cnt[4];++i){\n\t\t\t\t#ifdef DEBUG\n\t\t\t\tprintf(\"%d \",pos);\n\t\t\t\t#endif\n\t\t\t\tfor(int to:e[pos]){\n\t\t\t\t\tif(e[to].size()==cnt[1] && fa!=to){\n\t\t\t\t\t\tfa=pos;\n\t\t\t\t\t\tpos=to;\n\t\t\t\t\t\t++cc;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(pos==p){\n\t\t\t\t\tflag=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t#ifdef DEBUG\n\t\t\tprintf(\"%d\\n\",pos);\n\t\t\t#endif\n\t\t\tif(flag) break;\n\t\t\tfor(int to:e[pos]){\n\t\t\t\tif(e[to].size()==cnt[2] && fa!=to){\n\t\t\t\t\tfa=pos;\n\t\t\t\t\tpos=to;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(pos!=p || flag || cc!=cnt[4]-1){\n\t\t\t\tflag=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flag){\n\t\t\tprintf(\"NO\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tprintf(\"YES\\n\");\n\t}\n\treturn 0;\n}\n```\n\n\u4ee3\u7801\u5f88\u957f\uff0c\u4f46\u662f\u8fd8\u8bf7\u4e0d\u8981\u5077\u61d2\uff0c\u6bd5\u7adf\u8fd9\u4efd\u4ee3\u7801\u4e5f\u4ea4\u4e0d\u4e86\uff08\u5077\u7b11\uff09\u3002",
        "postTime": 1685422570,
        "uid": 601130,
        "name": "MYiFR",
        "ccfLevel": 4,
        "title": "Codeforces Round 863 (Div. 3) F - Is It Flower?"
    },
    {
        "content": "\u4e3a\u6570\u4e0d\u591a\u7684\uff0c\u81ea\u5df1\u60f3\u51fa\u505a\u6cd5\u5e76 AC \u7684 2100 \u4ee5\u4e0a\u7684\u9898\u3002  \n\n\u663e\u7136\uff0c$k = \\sqrt{n}$\u3002  \n\u5982\u679c $k$ \u4e0d\u662f\u6574\u6570\uff0c\u76f4\u63a5 NO\u3002  \n\n\u7136\u540e\uff0c\u663e\u7136\uff0cflower \u7684\u4e2d\u5fc3\u7684\u73af\u4e0a\u7684\u70b9\u5ea6\u6570\u90fd\u662f $4$\uff0c\u800c\u73af\u4e0a\u6bcf\u4e2a\u70b9\u90fd\u5904\u4e8e\u53e6\u4e00\u4e2a\u73af\u4e0a\uff0c\u6682\u4e14\u79f0\u5176\u4e3a\u82b1\u74e3\uff0c\u663e\u7136\u82b1\u74e3\u4e0a\u7684\u70b9\uff08\u9664\u4e86\u90a3\u4e2a\u540c\u65f6\u5904\u4e8e\u4e2d\u5fc3\u73af\u4e0a\u7684\u70b9\uff09\u5ea6\u6570\u90fd\u4e3a $2$\u3002  \n\n\u9996\u5148\u5224\u65ad\u56fe\u8054\u901a\uff0c\u5982\u679c\u4e0d\u8054\u901a\uff0c\u76f4\u63a5 NO\uff0c\u5982\u679c\u4e0d\u5224\u65ad\u4f1a WA on test70\u3002  \n\n\u7136\u540e\u5224\u65ad\u662f\u5426\u6709\u70b9\u5ea6\u6570\u65e2\u4e0d\u662f $2$ \u4e5f\u4e0d\u662f $4$\uff0c\u5982\u679c\u6709\uff0c\u663e\u7136 NO\u3002  \n\n\u7136\u540e\u4ece\u6bcf\u4e2a\u70b9\u51fa\u53d1\uff0c\u641c\u7d22\u4e0e\u81ea\u5df1\u8054\u901a\u5e76\u4e14\u5ea6\u6570\u76f8\u540c\u7684\u70b9\uff0c\u5982\u679c\u8fd9\u4e9b\u70b9\u7684\u5ea6\u6570\u4e3a $2$\uff0c\u90a3\u4e48\u5c06\u5b83\u4eec\u89c6\u4e3a\u4e00\u4e2a\u82b1\u74e3\uff0c\u5982\u679c\u70b9\u6570\u4e0d\u662f $k-1$\uff0c\u90a3\u4e48 NO\uff1b\u5982\u679c\u8fd9\u4e9b\u70b9\u5ea6\u6570\u4e3a $4$\uff0c\u90a3\u4e48\u5c06\u5b83\u4eec\u89c6\u4e3a\u82b1\u7684\u4e2d\u5fc3\u73af\uff0c\u5982\u679c\u70b9\u6570\u4e0d\u662f $k$\uff0c\u90a3\u4e48 NO\u3002  \n\n\u5982\u679c\u4efb\u610f\u4e00\u4e2a\u82b1\u74e3\u8fde\u63a5\u4e86\u8d85\u8fc7\u4e00\u4e2a\u4e2d\u5fc3\u73af\u4e0a\u7684\u70b9\uff0c\u90a3\u4e48 NO\uff0c\u5982\u679c\u4e0d\u5224\u65ad\u8fd9\u4e2a\u4f1a WA on test38\u3002  \n\n\u5982\u679c\u82b1\u74e3\u51fa\u73b0\u6b21\u6570\u4e0d\u4e3a $k$\uff0c\u6216\u8005\u82b1\u4e2d\u5fc3\u73af\u51fa\u73b0\u6b21\u6570\u4e0d\u4e3a $1$\uff0c\u90a3\u4e48\u5f88\u663e\u7136 NO\u3002  \n\n\u5224\u65ad\u5230\u8fd9\u91cc\u6ca1\u5bc4\uff0c\u90a3\u4e48\u663e\u7136\uff0c\u6240\u6709\u6761\u4ef6\u5747\u4ee5\u6ee1\u8db3\uff0cYES\u3002    \n\n```cpp  \n// LUOGU_RID: 111603262\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 2e5 + 5;\nint t;\nint n, m;\nint head[maxn];\nstruct EDGE\n{\n    int to, nxt;\n} edge[maxn << 1];\nint cnt;\nvoid add(int u, int v)\n{\n    edge[++cnt].to = v;\n    edge[cnt].nxt = head[u];\n    head[u] = cnt;\n}\nint d[maxn];\nint good_sqrt(int x)\n{\n    int _ = sqrt(x);\n    while ((_ + 1) * (_ + 1) <= x)\n        _++;\n    while ((_ - 1) * (_ - 1) >= x)\n        _--;\n    return _;\n}\nbool vis[maxn];\nint cntnodes;\nint mark2=-1;\nbool gg=0;// \u662f\u5426\u51fa\u73b0 dfs \u7684\u82b1\u74e3\u540c\u65f6\u63a5\u89e6\u4e24\u4e2a\u4e2d\u5fc3\u70b9\nvoid dfs(int u, int mark)\n{// mark = \u627e\u7684\u70b9\u7684\u5ea6\u6570\n // mark2 = \u8fde\u63a5\u5b83\u4eec\u7684 flower \u4e2d\u5fc3\u70b9\n    vis[u] = 1;\n    cntnodes++;\n    for (int i = head[u]; i; i = edge[i].nxt)\n    {\n        int to = edge[i].to;\n        if(d[to]==4&&mark==2)\n        {\n            if(mark2!=-1&&mark2!=to)\n            {\n                gg=1;\n                return;\n            }\n            else mark2=edge[i].to;\n        }\n        if (d[to] == mark && !vis[to])\n        {\n            dfs(to, mark);\n        }\n    }\n}\nbool con[maxn];\nint connectsum=0;\nvoid dfscon(int u)\n{\n    con[u]=1;\n    connectsum++;\n    for(int i=head[u];i;i=edge[i].nxt)\n    {\n        int to=edge[i].to;\n        if(!con[to])\n            dfscon(to);\n    }\n}\nint main()\n{\n    scanf(\"%d\", &t);\n    while (t--)\n    {\n        scanf(\"%d%d\", &n, &m);\n        for (int i = 1; i <= m; i++)\n        {\n            int u, v;\n            scanf(\"%d%d\", &u, &v);\n            add(u, v);\n            add(v, u);\n            d[u]++;\n            d[v]++;\n        }\n        dfscon(1);\n        int k = good_sqrt(n);\n        if (k * k != n || k < 3)\n        {\n            puts(\"NO\");\n        }\n        else if(connectsum!=n)\n        {\n            puts(\"NO\");\n        }\n        else\n        {\n            bool ok = 1;\n            int cnt4 = 0,cnt2=0;\n            for (int i = 1; i <= n; i++)\n            {\n                if (!vis[i])\n                {\n                    cntnodes = 0;\n                    mark2=-1;\n                    dfs(i, d[i]);\n                    if(gg)\n                    {\n                        ok=0;\n                        break;\n                    }\n                    if (d[i] == 2)\n                    {\n                        cnt2++;\n                        if (cntnodes != k - 1)\n                        {\n                            ok = 0;\n                            break;\n                        }\n                    }\n                    else if (d[i] == 4)\n                    {\n                        cnt4++;\n                        if (cntnodes != k)\n                        {\n                            ok = 0;\n                            break;\n                        }\n                    }\n                    else\n                    {\n                        ok = 0;\n                        break;\n                    }\n                }\n            }\n            ok &= (cnt4 == 1&&cnt2==k);\n            puts(ok ? \"YES\" : \"NO\");\n        }\n        gg=0;\n        for (int i = 1; i <= n; i++)\n        {\n            d[i] = head[i] = 0;\n        }\n        for (int i = 1; i <= n; i++)\n        {\n            vis[i] = 0;\n            con[i]=0;\n        }\n        cnt = 0;\n        connectsum=0;\n    }\n    return 0;\n}\n```",
        "postTime": 1685426950,
        "uid": 763552,
        "name": "cancan1234567",
        "ccfLevel": 0,
        "title": "CF1811F \u9898\u89e3"
    }
]