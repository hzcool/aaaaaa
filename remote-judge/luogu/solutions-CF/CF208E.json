[
    {
        "content": "**CF208E Blood Cousins** / **[\u539f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/CF208E)** / **[\u66f4\u597d\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/BlankAo/p/13995154.html)**\n\n---\n\n\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7528 **\u7ebf\u6bb5\u6811\u5408\u5e76** \u505a\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u628a\u8be2\u95ee\u79bb\u7ebf\u5b58\u50a8\u8d77\u6765\uff0c\u5e76\u4e14\u7528**\u500d\u589e**\u7b97\u6cd5\u6c42\u51fa\u6bcf\u4e2a\u8be2\u95ee\u4e2d\uff0c\u6bcf\u4e2a\u70b9\u7684 $K$ \u8f88\u7956\u5148\u662f\u8c01\u3002\u8fd9\u6837\uff0c\u9898\u76ee\u5c31\u8f6c\u5316\u4e3a\u4e86 \u201c\u6c42\u67d0\u4e2a\u70b9\u6709\u591a\u5c11\u4e2a $K$ \u8f88\u513f\u5b50\u201d \u4e86\uff0c\u8be2\u95ee\u53ef\u4ee5\u7528\u94fe\u8868\u6216\u8005 vector \u5b58\u3002\n\n\u7136\u540e\u6211\u4eec\u5bf9\u4e8e\u68ee\u6797\u4e2d\u7684\u6bcf\u4e00\u68f5\u6811\u5206\u522b\u8003\u8651\u3002\u5047\u8bbe\u67d0\u4e00\u4e2a\u8be2\u95ee\uff0c\u8f6c\u5316\u540e\u662f\u6c42\u70b9 $A$ \u7684 $K$ \u8f88\u513f\u5b50\u6570\u91cf\uff0c\u90a3\u6211\u4eec\u53ea\u7528\u6c42\u8fd9\u68f5\u6811\u91cc\u6709\u591a\u5c11\u4e2a\u70b9 $i$ \u4f7f\u5f97 $dep_A+K=dep_i$ \u3002\u56e0\u4e3a\u53ea\u6709 $A$ \u7684\u5b50\u6811\u4e2d\u624d\u4f1a\u51fa\u73b0\u5408\u6cd5\u7684\u70b9 $i$ \u3002\u6240\u4ee5\u95ee\u9898\u53c8\u8f6c\u5316\u4e3a\u201c\u67d0\u4e2a\u70b9 $A$ \u7684\u5b50\u6811\u4e2d\u6709\u591a\u5c11\u4e2a\u70b9 $i$ \u4f7f\u5f97 $dep_A+K=dep_i$ \u201d\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c dfs \uff0c\u7ed9\u6bcf\u4e00\u4e2a\u70b9\u5efa\u7acb\u4e00\u4e2a\u7ebf\u6bb5\u6811\uff0c\u5176\u4e2d\u70b9 $o$ \u4e0a\u5efa\u7acb\u7684\u7ebf\u6bb5\u6811\u4e2d\uff0c\u8282\u70b9 $l \\sim r$ \u4ee3\u8868\u70b9 $o$ \u5b50\u6811\u4e2d $dep$ \u503c\u4e3a $l \\sim r$ \u7684\u70b9\u6709\u591a\u5c11\u4e2a\u3002\u6545\u6bcf\u904d\u5386\u5230\u4e00\u4e2a\u70b9 $o$\uff0c\u5148\u5c06 $dep_o$ \u63d2\u5165\u7ebf\u6bb5\u6811\uff0c\u7136\u540e\u4e0e\u5b50\u6811\u7684\u7ebf\u6bb5\u6811\u5408\u5e76\uff0c\u6700\u540e\u4f9d\u6b21\u67e5\u8be2\u5b83\u8eab\u4e0a\u7684\u8be2\u95ee\u3002\n\n\u4e0b\u9762\u662f\u4ee3\u7801\uff1a\n\n```c++\n#include<bits/stdc++.h>\n#define rep(i,x,y) for(int i=x;i<=y;i++)\n#define per(i,x,y) for(int i=x;i>=y;i--)\n#define mar(o) for(int E=fst[o];E;E=e[E].nxt)\n#define v e[E].to\n#define lsn tre[ tre[o].lv ]\n#define rsn tre[ tre[o].rv ]\nusing namespace std;\nconst int n7=101234,m7=201234,t7=4001234;\nstruct dino{int to,nxt;}e[m7];\nstruct elep{int l,r,lv,rv,val;}tre[t7];\nstruct galo{int o,ned;}qq[n7];\nint n,T,ecnt,fst[n7],cnt,dep[n7],fc[n7][22],ans[n7],rot[n7],rotc;\nvector <int> vec[n7];\n\nvoid edge(int sta,int edn){\n\tecnt++;\n\te[ecnt]=(dino){edn,fst[sta]};\n\tfst[sta]=ecnt;\n}\n\nvoid puhigh(int o){tre[o].val=lsn.val+rsn.val;}\n\nvoid updat(int o,int num){\n\tif(tre[o].l==tre[o].r){tre[o].val++;return;}\n\tint mid=(tre[o].l+tre[o].r)>>1;\n\tif(num<=mid){\n\t\tif(!tre[o].lv){\n\t\t\tcnt++,tre[o].lv=cnt;\n\t\t\ttre[cnt]=(elep){tre[o].l,mid};\n\t\t}\n\t\tupdat(tre[o].lv,num);\n\t}\n\tif(mid+1<=num){\n\t\tif(!tre[o].rv){\n\t\t\tcnt++,tre[o].rv=cnt;\n\t\t\ttre[cnt]=(elep){mid+1,tre[o].r};\n\t\t}\n\t\tupdat(tre[o].rv,num);\n\t}\n\tpuhigh(o);\n}\n\nint merge(int o1,int o2){\n\tif(!o2)return o1;\n\tif(!o1)return o2;\n\tif(tre[o1].l==tre[o1].r){tre[o1].val+=tre[o2].val;return o1;}\n\ttre[o1].lv=merge(tre[o1].lv,tre[o2].lv);\n\ttre[o1].rv=merge(tre[o1].rv,tre[o2].rv);\n\tpuhigh(o1);\n\treturn o1;\n}\n\nint query(int o,int num){\n\tif(!o)return 0;\n\tif(tre[o].l==tre[o].r)return tre[o].val;\n\tint mid=(tre[o].l+tre[o].r)>>1;\n\tif(num<=mid)  return query(tre[o].lv,num);\n\tif(mid+1<=num)return query(tre[o].rv,num);\n}\n\nvoid dfs2(int o){\n\tupdat(o,dep[o]);\n\tmar(o){\n\t\tif(dep[v]<dep[o])continue;\n\t\tdep[v]=dep[o]+1;\n\t\tdfs2(v);\n\t\tmerge(o,v);\n\t}\n\tint siz=vec[o].size()-1;\n\trep(i,0,siz)ans[ vec[o][i] ]=query(o,qq[ vec[o][i] ].ned)-1;\n}\n\nvoid dfs1(int o){\n\trep(i,1,17)fc[o][i]=fc[ fc[o][i-1] ][i-1];\n\tmar(o){\n\t\tif(dep[v])continue;\n\t\tfc[v][0]=o;\n\t\tdep[v]=dep[o]+1;\n\t\tdfs1(v);\n\t}\n}\n\nvoid fimd(int id){\n\tgalo z=qq[id];\n\tper(i,17,0){\n\t\tif((1<<i)>z.ned)continue;\n\t\tz.o=fc[z.o][i];\n\t\tz.ned=z.ned-(1<<i);\n\t}\n\tqq[id].o=z.o;\n\tqq[id].ned=qq[id].ned+dep[z.o];\n\tvec[z.o].push_back(id);\n}\n\nint main(){\n\tscanf(\"%d\",&n);\n\trep(i,1,n)tre[i]=(elep){1,100000};\n\tcnt=n;\n\trep(i,1,n){\n\t\tint x;scanf(\"%d\",&x);\n\t\tif(x)edge(x,i);\n\t\telse rotc++,rot[rotc]=i;\n\t}\n\trep(i,1,rotc){\n\t\tdep[ rot[i] ]=1,dfs1( rot[i] );\n\t}\n\tscanf(\"%d\",&T);\n\trep(i,1,T){\n\t\tscanf(\"%d%d\",&qq[i].o,&qq[i].ned);\n\t\tfimd(i);\n\t}\n\trep(i,1,rotc)dfs2( rot[i] );\n\trep(i,1,T)printf(\"%d \",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1605603348,
        "uid": 99623,
        "name": "BlankAo",
        "ccfLevel": 0,
        "title": "CF208E \u9898\u89e3"
    },
    {
        "content": "$$\\text{\u5173\u4e8e\u672c\u9898}$$\n\n$\\quad$ $Dsu$ $on$ $Tree$\u6a21\u677f\u9898\uff0c\u6ca1\u6709\u505a\u8fc7\u7684\u53ef\u4ee5\u505a\u505a[CF600E Lomsat gelral](https://www.luogu.com.cn/problem/CF600E)\uff0c\u4e5f\u662f\u4e00\u9053\u6a21\u677f\u9898\uff0c\u4e0b\u9762\u5c31\u7b80\u5355\u8bb2\u8bb2\u6811\u4e0a\u542f\u53d1\u5f0f\u5408\u5e76 ($DSU$ $on$ $Tree$)\u7b97\u6cd5\uff0c\u5982\u679c\u6709\u4e0d\u61c2\u7684\u53ef\u4ee5\u63d0\u51fa\u6765\u3002\n\n$\\quad$\u672c\u9898\u94fe\u63a5\uff1a[CF208E Blood Cousins](https://www.luogu.com.cn/problem/CF208E)\n\n### \u601d\u8def\uff1a\n\n$\\quad$\u8fd9\u9898\u7684\u601d\u8def\u51e0\u4e4e\u548c[CF570D Tree Requests](https://www.luogu.com.cn/problem/CF570D)\u4e00\u6837\uff0c\u53ea\u9700\u8981\u7a0d\u5fae\u4fee\u6539\u4e00\u4e0b\uff0c\u56e0\u4e3a\u662f\u627e\u4e00\u4e2a\u70b9\u4e0e\u591a\u5c11\u4e2a\u70b9\u62e5\u6709\u5171\u540c\u7684 $K$ \u7ea7\u7956\u5148\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5148\u628a\u5b83\u7684 $K$ \u7ea7\u7956\u5148\u627e\u51fa\u6765(\u4f7f\u7528\u500d\u589e)\uff0c\u7136\u540e\u5728\u627e\u8fd9\u4e2a\u70b9\u6709\u51e0\u4e2a $K$ \u7ea7\u540e\u4ee3\uff0c\u6216\u8005\u7528\u6df1\u5ea6\u8868\u793a\u6210 $dep_x+k$ \uff0c\u6ce8\u610f\u8fd9\u4e2a\u56fe\u4e0d\u662f\u8fde\u901a\u7684\uff0c\u6bcf\u6b21\u8981\u6e05\u7a7a\u6570\u7ec4\u3002\n\n$$\\text{\u5173\u4e8e\u6811\u4e0a\u542f\u53d1\u5f0f\u5408\u5e76(Lsu)\u524d\u7f6e\u77e5\u8bc6}$$\n\n$\\quad$\u5b66\u8fd9\u4e2a\u4e4b\u524d\u9700\u8981\u5bf9\u6811\u4e0a\u64cd\u4f5c\u3001 $dfs$ \u5e8f\u548c\u8f7b\u91cd\u94fe\u5256\u5206\u7b49\u77e5\u8bc6\u6709\u4e00\u5b9a\u4e86\u89e3\uff0c\u6700\u597d\u5df2\u7ecf\u638c\u63e1\u4e86\u6811\u94fe\u5256\u5206\u3002\n\n$$\\text{\u7b97\u6cd5\u601d\u60f3}$$\n\n$\\quad$\u6811\u4e0a\u542f\u53d1\u5f0f\u5408\u5e76 ($DSU$ $on$ $Tree$)\uff0c\u662f\u4e00\u4e2a\u5728 $O(nlogn)$ \u65f6\u95f4\u5185\u89e3\u51b3\u8bb8\u591a\u6811\u4e0a\u95ee\u9898\u7684\u6709\u529b\u7b97\u6cd5\uff0c\u5bf9\u4e8e\u67d0\u4e9b\u6811\u4e0a\u79bb\u7ebf\u95ee\u9898\u53ef\u4ee5\u901f\u5ea6\u5927\u4e8e\u7b49\u4e8e\u5927\u90e8\u5206\u7b97\u6cd5\u4e14\u66f4\u6613\u4e8e\u7406\u89e3\u548c\u5b9e\u73b0\u3002\n\n$\\quad$\u5148\u60f3\u4e00\u4e0b\u66b4\u529b\u7b97\u6cd5\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u8be2\u95ee\u90fd\u904d\u5386\u6574\u68f5\u5b50\u6811\uff0c\u7136\u540e\u7edf\u8ba1\u7b54\u6848\uff0c\u6700\u540e\u518d\u6e05\u7a7acnt\u6570\u7ec4\uff0c\u6700\u574f\u60c5\u51b5\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^2)$ \uff0c\u5bf9\u4e8e $10^5$ \u7684\u6570\u636e\u80af\u5b9a\u662f\u8fc7\u4e0d\u53bb\u7684\u3002\n\n$\\quad$\u73b0\u5728\u8003\u8651\u4f18\u5316\u7b97\u6cd5\uff0c\u66b4\u529b\u7b97\u6cd5\u8dd1\u5f97\u6162\u7684\u539f\u56e0\u5c31\u662f\u591a\u6b21\u904d\u5386\uff0c\u591a\u6b21\u6e05\u7a7a\u6570\u7ec4\uff0c\u4e00\u4e2a\u663e\u7136\u7684\u4f18\u5316\u5c31\u662f\u5c06\u8be2\u95ee\u540c\u4e00\u4e2a\u5b50\u6811\u7684\u8be2\u95ee\u653e\u5728\u4e00\u8d77\u5904\u7406\uff0c\u4f46\u8fd9\u6837\u8fd8\u662f\u6ca1\u6709\u5904\u7406\u5230\u5173\u952e\uff0c\u6700\u574f\u60c5\u51b5\u65f6\u95f4\u590d\u6742\u5ea6\u8fd8\u662f $O(n^2)$ \uff0c\u8003\u8651\u5230\u8be2\u95ee $x$ \u8282\u70b9\u65f6\uff0c $x$ \u7684\u5b50\u6811\u5bf9\u7b54\u6848\u6709\u8d21\u732e\uff0c\u6240\u4ee5\u53ef\u4ee5\u4e0d\u7528\u6e05\u7a7a\u6570\u7ec4\uff0c\u5148\u7edf\u8ba1 $x$ \u7684\u5b50\u6811\u4e2d\u7684\u7b54\u6848\uff0c\u518d\u7edf\u8ba1 $x$ \u7684\u7b54\u6848\uff0c\u8fd9\u6837\u5c31\u9700\u8981\u63d0\u524d\u5904\u7406\u597d $dfs$ \u5e8f\u3002\n\n$\\quad$\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e00\u4e2a\u4f18\u5316\uff0c\u904d\u5386\u5230\u6700\u540e\u4e00\u4e2a\u5b50\u6811\u65f6\u662f\u4e0d\u7528\u6e05\u7a7a\u7684\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4f1a\u4ea7\u751f\u5bf9\u5176\u4ed6\u8282\u70b9\u5f71\u54cd\u4e86\uff0c\u6839\u636e\u8d2a\u5fc3\u7684\u601d\u60f3\u6211\u4eec\u5f53\u7136\u8981\u628a\u8282\u70b9\u6570\u6700\u591a\u7684\u5b50\u6811\uff08\u5373\u91cd\u513f\u5b50\u5f62\u6210\u7684\u5b50\u6811\uff09\u653e\u5728\u6700\u540e\uff0c\u4e4b\u540e\u6211\u4eec\u5c31\u6709\u4e86\u4e00\u4e2a\u770b\u4f3c\u6bd4\u8f83\u5feb\u7684\u7b97\u6cd5\uff0c\u5148\u904d\u5386\u6240\u6709\u7684\u8f7b\u513f\u5b50\u8282\u70b9\u5f62\u6210\u7684\u5b50\u6811\uff0c\u7edf\u8ba1\u7b54\u6848\u4f46\u662f\u4e0d\u4fdd\u7559\u6570\u636e\uff0c\u7136\u540e\u904d\u5386\u91cd\u513f\u5b50\uff0c\u7edf\u8ba1\u7b54\u6848\u5e76\u4e14\u4fdd\u7559\u6570\u636e\uff0c\u6700\u540e\u518d\u904d\u5386\u8f7b\u513f\u5b50\u4ee5\u53ca\u7236\u8282\u70b9\uff0c\u5408\u5e76\u91cd\u513f\u5b50\u7edf\u8ba1\u8fc7\u7684\u7b54\u6848\u3002\n\n$\\quad$\u5176\u5b9e\u6811\u4e0a\u542f\u53d1\u5f0f\u5408\u5e76\u7684\u57fa\u672c\u601d\u8def\u5c31\u662f\u8fd9\u6837\uff0c\u53ef\u4ee5\u770b\u4e00\u4e0b\u4ee3\u7801\u7406\u89e3\u3002\n\n```\nil int check(int x)//\u7edf\u8ba1\u7b54\u6848\n{\n  int num=0,ret=0;\n  for(re i=1;i<=n;i++)\n    {\n      if(cnt[i]==num){ret+=i;}\n      else if(cnt[i]>num){num=cnt[i],ret=i;}\n    }\n  return ret;\n}\nil void add(int x){cnt[col[x]]++;}//\u5355\u70b9\u589e\u52a0\nil void del(int x){cnt[col[x]]--;}//\u5355\u70b9\u51cf\u5c11\nil void raise(int x){for(re i=seg[x];i<=seg[x]+size[x]-1;i++)add(rev[i]);}//\u589e\u52a0x\u5b50\u6811\u7684\u8d21\u732e\nil void clear(int x){for(re i=seg[x];i<=seg[x]+size[x]-1;i++)del(rev[i]);}//\u6e05\u7a7ax\u5b50\u6811\u7684\u8d21\u732e\nil void dfs1(int x,int fa)\n{\n  dep[x]=dep[fa]+1;father[x]=fa;//\u5904\u7406\u6df1\u5ea6\uff0c\u7236\u4eb2\n  seg[x]=++seg[0];rev[seg[x]]=x;size[x]=1;//\u5b50\u6811\u5927\u5c0f\uff0cdfs\u5e8f\n  for(re i=head[x],y;i,y=go[i];i=next[i])\n    {\n      if(y==fa)continue;dfs1(y,x);\n      size[x]+=size[y];\n      if(size[y]>size[son[x]])son[x]=y;//\u91cd\u513f\u5b50\n    }\n}\nil void dfs2(int x,int flag)//flag\u8868\u793a\u662f\u5426\u4e3a\u91cd\u513f\u5b50\uff0c1\u8868\u793a\u91cd\u513f\u5b50\uff0c0\u8868\u793a\u8f7b\u513f\u5b50\n{\n  for(re i=head[x],y;i,y=go[i];i=next[i])\n    {\n      if(y==son[x]||y==father[x])continue;\n      dfs2(y,0);//\u5148\u904d\u5386\u8f7b\u513f\u5b50\n    }\n  if(son[x])dfs2(son[x],1);//\u518d\u904d\u5386\u91cd\u513f\u5b50\n  for(re i=head[x],y;i,y=go[i];i=next[i])\n    {\n      if(y==son[x]||y==father[x])continue;\n      raise(y);//\u66f4\u65b0\u8f7b\u513f\u5b50\u7684\u8d21\u732e\n    }add(x);//\u52a0\u4e0ax\u7ed3\u70b9\u672c\u8eab\u7684\u8d21\u732e\n  ans[x]=check(x);//\u66f4\u65b0\u7b54\u6848\n  if(!flag)clear(x);//\u5982\u679c\u662f\u8f7b\u513f\u5b50\uff0c\u5c31\u6e05\u7a7a\n}\n```\n$\\quad$\u4e0a\u9762\u7684\u53ea\u662f\u6a21\u677f\u7684\u4ee3\u7801\uff0c\u6b64\u9898\u7684\u5b8c\u6574\u4ee3\u7801\u5728\u4e0b\u9762\u3002(\u9644\u5e26\u6ce8\u91ca)\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<queue>\nusing namespace std;\n#define re register int\n#define int long long\n#define LL long long\n#define il inline\n#define next nee\n#define inf 1e18\nil int read()\n{\n  int x=0,f=1;char ch=getchar();\n  while(!isdigit(ch)&&ch!='-')ch=getchar();\n  if(ch=='-')f=-1,ch=getchar();\n  while(isdigit(ch))x=(x<<1)+(x<<3)+ch-'0',ch=getchar();\n  return x*f;\n}\nil void print(int x)\n{\n  if(x<0)putchar('-'),x=-x;\n  if(x/10)print(x/10);\n  putchar(x%10+'0');\n}\nconst int N=1e5+5;\nint n,m,next[N],go[N],head[N],tot,father[N][20],ans[N],dep[N],son[N],seg[N],rev[N],size[N],cnt[N];\nstruct node{int k,id;};\nvector<node>q[N];\nil int Max(int x,int y){return x>y?x:y;}//\u6c42\u8f83\u5927\u503c\nil void Add(int x,int y)//\u94fe\u5f0f\u524d\u5411\u65b0\n{next[++tot]=head[x];head[x]=tot;go[tot]=y;}\nil void add(int x){cnt[dep[x]]++;}//\u5355\u70b9\u589e\u52a0\nil void raise(int x){for(re i=seg[x];i<=seg[x]+size[x]-1;i++)add(rev[i]);}//\u7b97\u4e0ax\u5b50\u6811\u7684\u8d21\u732e\nil void del(int x){cnt[dep[x]]=0;}//\u5355\u70b9\u51cf\u5c11\nil void clear(int x){for(re i=seg[x];i<=seg[x]+size[x]-1;i++)del(rev[i]);}//\u6e05\u7a7ax\u5b50\u6811\nil void dfs1(int x,int fa)\n{\n  dep[x]=dep[fa]+1;size[x]=1;seg[x]=++seg[0];rev[seg[x]]=x;\n  for(re i=1;i<=18;i++)father[x][i]=father[father[x][i-1]][i-1];//\u500d\u589e\n  for(re i=head[x],y;i,y=go[i];i=next[i])\n    {\n      dfs1(y,x);size[x]+=size[y];\n      if(size[y]>size[son[x]])son[x]=y;\n    }\n}\nil void dfs2(int x,int flag)\n{\n  for(re i=head[x],y;i,y=go[i];i=next[i])\n    {\n      if(y==son[x])continue;\n      dfs2(y,0);//\u5148\u904d\u5386\u8f7b\u513f\u5b50\n    }\n  if(son[x])dfs2(son[x],1);//\u518d\u904d\u5386\u91cd\u513f\u5b50\n  for(re i=head[x],y;i,y=go[i];i=next[i])\n    {if(y==son[x])continue;raise(y);}//\u66f4\u65b0\u8f7b\u513f\u5b50\u7684\u8d21\u732e\n  add(x);//\u52a0\u4e0ax\u7ed3\u70b9\u672c\u8eab\u7684\u8d21\u732e\n  for(re i=0;i<q[x].size();i++)\n    ans[q[x][i].id]=cnt[dep[x]+q[x][i].k];//\u66f4\u65b0\u7b54\u6848\n  if(!flag)clear(x);//\u5982\u679c\u662f\u8f7b\u513f\u5b50\uff0c\u5c31\u6e05\u7a7a\n}\nil int find_father(int x,int y)//\u627ex\u7684\u7b2cy\u7ea7\u7956\u5148\n{\n  for(re i=18;i>=0;i--){if(y>=(1<<i))y-=(1<<i),x=father[x][i];}\n  return x;\n}\nsigned main()\n{\n  n=read();\n  for(re i=1,x;i<=n;i++)x=read(),father[i][0]=x,Add(x,i);\n  for(re i=1;i<=n;i++)if(father[i][0]==0)dfs1(i,0);//\u9884\u5904\u7406\uff0c\u500d\u589e\u6570\u7ec4\u3001dfs\u5e8f\u7b49\u6811\u4e0a\u4fe1\u606f\n  m=read();\n  for(re i=1,x,y,z;i<=m;i++){x=read(),y=read(),z=find_father(x,y);if(z)q[z].push_back((node){y,i});}\n  for(re i=1;i<=n;i++)if(father[i][0]==0)dfs2(i,0);//\u627e\u6bcf\u68f5\u6811\u7684\u6839\u8282\u70b9\uff0c0\u8868\u793a\u8f7b\u513f\u5b50\uff0c\u8fd9\u6837\u4e0d\u7528\u624b\u52a8\u6e05\u7a7a\u6570\u7ec4\n  for(re i=1;i<=m;i++)print(Max(ans[i]-1,0)),putchar(' ');//\u6ce8\u610f\u8f93\u51fa\u8981\u51cf\u4e00\uff0c\u8981\u53bb\u9664\u8be2\u95ee\u8282\u70b9\n  return 0;\n}\n```",
        "postTime": 1605706950,
        "uid": 109220,
        "name": "Farkas_W",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF208E \u3010Blood Cousins\u3011"
    },
    {
        "content": "[\u6b22\u8fce\u6765\u6211\u7684\u65b0\u535a\u5ba2\u73a9](https://athousandtsuki.github.io/2019/07/22/CF208E-Blood-Cousins/)\n\n\u9996\u5148\u6211\u4eec\u8981\u6c42$x$\u7684$K$\u7ea7\u7956\u5148\uff0c\u5176\u5b9e\u4e0d\u7528\u4ec0\u4e48\u957f\u94fe\u5256\u5206\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u662f\u79bb\u7ebf\u7684\u3002\n\n\u6211\u4eec\u5728dfs\u7684\u8fc7\u7a0b\u4e2d\u7528\u4e00\u4e2a\u6808\u7ef4\u62a4$1$\u5230$x$\u8fd9\u6761\u94fe\u4e0a\u7684\u70b9\uff0c$x$\u7684$K$\u7ea7\u7956\u5148\u5c31\u662f\u6808\u4ece\u4e0a\u5230\u4e0b\u7684\u7b2c$K$\u4e2a\u3002\n\n\u7136\u540e\u6211\u4eec\u8981\u6c42$x$\u7684$K$\u7ea7\u513f\u5b50\u6709\u591a\u5c11\u4e2a\uff0c\u8fd9\u4e2a\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u957f\u94fe\u5256\u5206\uff0c\u7528$dp_{x,i}$\u8868\u793a$x$\u7684$i$\u7ea7\u513f\u5b50\u6709\u591a\u5c11\u4e2a\uff0c\u6bcf\u6b21\u8bb2$x$\u7684\u957f\u513f\u5b50$v$\u76f4\u63a5\u7ee7\u627f\u5230$x$\u4e0a\uff0c\u8fd9\u4e2a\u7528\u6307\u9488\u5b9e\u73b0\u53ef\u4ee5\u7528$dp_x=dp_v+1$\uff0c\u5176\u4ed6\u7684\u513f\u5b50\u5c31\u66b4\u529b\u7d2f\u52a0\u4e0a\u53bb\u3002\n\n\u8fd9\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(n)$\u7684\uff08\u4f46\u662f\u5c45\u7136\u6bd4\u7ebf\u6bb5\u6811\u5408\u5e76\u603b\u65f6\u95f4\u53ea\u5feb\u4e862s\uff09\n\n```cpp\n#include<bits/stdc++.h>\n#define Rint register int\nusing namespace std;\nconst int N = 1000003;\nint n, m, U[N], K[N], head[N], to[N], nxt[N], fa[N], wson[N], len[N], dep[N], sta[N], top, ans[N];\nint tot, headq[N], k[N], id[N], nxtq[N];\ninline void add(int a, int b){\n    static int cnt = 0;\n    to[++ cnt] = b; nxt[cnt] = head[a]; head[a] = cnt;\n}\ninline void addq(int u, int _k, int _id){\n    k[++ tot] = _k; id[tot] = _id; nxtq[tot] = headq[u]; headq[u] = tot;\n}\ninline void dfs(int x){\n    sta[++ top] = x;\n    dep[x] = dep[fa[x]] + 1;\n    for(Rint i = headq[x];i;i = nxtq[i])\n        ans[id[i]] = (top > k[i]) ? sta[top - k[i]] : 0;\n    for(Rint i = head[x];i;i = nxt[i]){\n        dfs(to[i]);\n        if(len[to[i]] > len[wson[x]]) wson[x] = to[i];\n    }\n    len[x] = len[wson[x]] + 1;\n    -- top;\n}\nint tmp[N], *now = tmp, *dp[N];\ninline void calc(int x){\n    dp[x][0] = 1;\n    if(wson[x]){\n        dp[wson[x]] = dp[x] + 1; calc(wson[x]);\n        for(Rint i = head[x];i;i = nxt[i])\n            if(to[i] != wson[x]){\n                dp[to[i]] = now; now += len[to[i]];\n                calc(to[i]);\n                for(Rint j = 1;j <= len[to[i]];j ++) dp[x][j] += dp[to[i]][j - 1];\n            }\n        for(Rint i = headq[x];i;i = nxtq[i])\n            ans[id[i]] = dp[x][k[i]];\n    }\n}\nint main(){\n    scanf(\"%d\", &n);\n    for(Rint i = 1;i <= n;i ++){\n        scanf(\"%d\", fa + i);\n        if(fa[i]) add(fa[i], i);\n    }\n    scanf(\"%d\", &m);\n    for(Rint i = 1;i <= m;i ++){\n        scanf(\"%d%d\", U + i, K + i);\n        addq(U[i], K[i], i);\n    }\n    for(Rint i = 1;i <= n;i ++)\n    \tif(!fa[i]) dfs(i);\n    memset(headq, 0, sizeof headq); tot = 0;\n    for(Rint i = 1;i <= m;i ++)\n        if(ans[i]) addq(ans[i], K[i], i);\n    memset(ans, 0, sizeof ans);\n    for(Rint i = 1;i <= n;i ++)\n    \tif(!fa[i]){\n    \t\tdp[i] = now; now += len[i];\n    \t\tcalc(i);\n    \t}\n    for(Rint i = 1;i <= m;i ++) printf(\"%d \", max(ans[i] - 1, 0));\n}\n```",
        "postTime": 1563784573,
        "uid": 68148,
        "name": "watermoon",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF208E \u3010Blood Cousins\u3011"
    },
    {
        "content": "\u539f\u9898\u94fe\u63a5\uff1a[CF208E Blood Cousins](https://www.luogu.com.cn/problem/CF208E)\n\n## \u9898\u610f\u7b80\u8ff0\n\n- \u7ed9\u5b9a $n$ \u4e2a\u7ed3\u70b9\u7684\u68ee\u6797\uff0c\u8fb9\u6743\u4e3a $1$\uff1b\u4e00\u5171 $m$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u4e00\u4e2a\u7ed3\u70b9 $p$ \u4e0e\u591a\u5c11\u4e2a\u7ed3\u70b9\u62e5\u6709\u5171\u540c\u7684 $K$ \u7ea7\u7956\u5148\u3002\n\n- $1 \\le n, m \\le 10^5$\n\n## \u601d\u8def\u4e0e\u89e3\u7b54\n\n- \u9996\u5148\u8003\u8651\u6c42\u51fa\u8be2\u95ee\u4e2d\u6bcf\u4e2a\u7ed3\u70b9\u7684 $K$ \u7ea7\u7956\u5148\uff0c\u5c31\u53ef\u4ee5\u5c06\u95ee\u9898\u8f6c\u5316\u4e3a\u5bf9\u4e8e\u4e00\u4e2a\u7ed3\u70b9 $u$\uff0c\u5728\u5b83\u7684\u5b50\u6811\u4e2d\u6709\u591a\u5c11\u4e2a\u4e0e\u5b83\u8ddd\u79bb\u4e3a $K$ \u7684\u7ed3\u70b9\uff0c\u5176\u4e2d $u$ \u662f\u5bf9\u5e94\u7684 $p$ \u7684 $K$ \u7ea7\u7956\u5148\u3002\n\n- \u6bcf\u4e00\u6b21\u8be2\u95ee\u7684\u7b54\u6848\u5c31\u662f\u4e0a\u4e00\u6b65\u6c42\u51fa\u7684\u7b54\u6848\u51cf\u4e00\uff08\u56e0\u4e3a\u8981\u53bb\u9664 $p$\uff09\n\n- \u7136\u540e\u53ef\u4ee5\u628a\u8fd9\u9053\u9898\u5206\u6210\u4e24\u90e8\u5206\uff1a\u7b2c\u4e00\u90e8\u5206\u662f\u6c42\u51fa $K$ \u7ea7\u7956\u5148\uff0c\u7b2c\u4e8c\u90e8\u5206\u662f\u5bf9\u4e8e\u4e0a\u4e00\u6b65\u4e2d\u7684\u6bcf\u4e00\u4e2a $K$ \u7ea7\u7956\u5148\u6c42\u51fa\u7b54\u6848\u3002\n\n---\n\n- \u9996\u5148\u6765\u770b\u7b2c\u4e00\u90e8\u5206\n\n- \u8fd9\u663e\u7136\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u95ee\u9898\uff0c\u8fd0\u7528\u957f\u94fe\u5256\u5206\u53ef\u4ee5\u505a\u5230 $\\Theta(m)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff1b\u4f46\u662f\u4f60\u53d1\u73b0\u8fd9\u9898\u5e76\u6ca1\u6709\u5361\u6389\u5e26 $\\log$ \u7684\u505a\u6cd5\uff0c\u6240\u4ee5\u9884\u5904\u7406\u4e00\u4e0b\uff0c\u7136\u540e\u500d\u589e\u8df3\u7956\u5148\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(m \\log n)$\u3002\n\n- \u8fd9\u4e00\u90e8\u5206\u5c31\u7ed3\u675f\u5566~\n\n---\n\n- \u7136\u540e\u662f\u7b2c\u4e8c\u90e8\u5206\n\n- \u53d1\u73b0\u8fd9\u662f\u4e00\u4e2a\u5b50\u6811\u4e2d\u7684\u7edf\u8ba1\u95ee\u9898\uff0c\u4f60\u9700\u8981\u7edf\u8ba1\u5b50\u6811\u4e2d\u6df1\u5ea6\u4e0e $p$ \u76f8\u540c\u7684\u7ed3\u70b9\u7684\u6570\u91cf\uff0c\u6240\u4ee5\u8003\u8651 **dsu on tree**\n\n- \u5982\u679c\u4f60\u4e0d\u77e5\u9053\u4ec0\u4e48\u662f **dsu on tree**\uff0c\u53ef\u4ee5\u5b66\u4e60\u4e00\u4e0b[\u8fd9\u4e2a\u89c6\u9891](https://www.bilibili.com/video/BV1JE411d7tD?from=search&seid=3893625750051302378)\uff08\u4e0d\u662f\u5e7f\u544aQAQ\uff09\uff0c\u6211\u5c31\u662f\u4ece~~\u540c\u5b66\u7684\u8bb2\u8bfe\u548c~~\u8fd9\u91cc\u5b66\u4f1a\u7684\u3002\n\n- \u8003\u8651\u4f60\u9700\u8981\u7ef4\u62a4\u4ec0\u4e48\u4fe1\u606f\uff0c\u4e0d\u59a8~~\u6309\u7167\u5957\u8def~~\u5f00\u4e00\u4e2a\u6876\uff0c\u8bb0\u5f55\u5f53\u524d\u7ed3\u70b9\u7684\u5b50\u6811\u4e2d\u6df1\u5ea6\u4e3a $x$ \u7684\u70b9\u7684\u6570\u91cf\u3002\n\n- \u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee\uff0c\u5728\u904d\u5386\u5230 $K$ \u7ea7\u7956\u5148\u65f6\uff0c~~\u6309\u7167\u60ef\u4f8b~~\u4fdd\u7559\u91cd\u513f\u5b50\u7684\u8d21\u732e\u3001\u66b4\u529b\u7edf\u8ba1\u8f7b\u513f\u5b50\u7684\u8d21\u732e\uff0c\u7136\u540e\u770b\u770b\u548c\u5f53\u524d\u8be2\u95ee\u7684 $p$ \u7684\u6df1\u5ea6\u76f8\u540c\u7684\u70b9\u6709\u591a\u5c11\u4e2a\uff08\u8fd9\u4e1c\u897f\u5df2\u7ecf\u5f00\u6876\u7ef4\u62a4\u4e86\uff09\uff0c\u53ea\u8981\u628a\u8fd9\u4e2a\u6570\u91cf\u51cf\u4e00\u5c31\u662f\u7b54\u6848\u4e86\uff08\u597d\u50cf\u521a\u624d\u5df2\u7ecf\u8bf4\u8fc7\u4e86\uff09\u3002\n\n- \u8fd9\u90e8\u5206\u7684\u590d\u6742\u5ea6\u5c31\u662f $\\Theta(n \\log n)$\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u5c31\u662f $\\Theta(m \\log n + n \\log n)$\n\n## Code\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int MAXN = 100010;\n\nint n, m;\n\nstruct edge{\n\tint ne, to;\n}e[MAXN];\nint fir[MAXN], num = 0;\ninline void join(int a, int b)\n{\n\te[++num].ne = fir[a];\n\te[num].to = b;\n\tfir[a] = num;\n}\nint rt[MAXN], tot = 0;\n\nint siz[MAXN], son[MAXN], f[MAXN][24], dep[MAXN], lg[MAXN];\n\nvoid dfs1(int u)\n{\n\tsiz[u] = 1; dep[u] = dep[f[u][0]] + 1;\n\tfor(int i=1;i<=lg[dep[u]];i++)\n\t\tf[u][i] = f[f[u][i-1]][i-1];\n\tfor(int i=fir[u];i;i=e[i].ne)\n\t{\n\t\tint v = e[i].to;\n\t\tdfs1(v);\n\t\tsiz[u] += siz[v];\n\t\tif(siz[son[u]] < siz[v]) son[u] = v;\n\t}\n}\ninline int kthparent(int u, int k)\n{\n\tfor(int i=lg[dep[u]];i>=0;i--)\n\t\tif(dep[u] - dep[f[u][i]] <= k) k -= dep[u] - dep[f[u][i]], u = f[u][i];\n\treturn u;\n}\n\nstruct qrys{\n\tint x, k, pa, ans;\n}a[MAXN];\nvector<int> vp[MAXN];\n\nint cnt[MAXN], nowson = 0;\nvoid calc(int u, int val)\n{\n\tcnt[dep[u]] += val;\n\tfor(int i=fir[u];i;i=e[i].ne)\n\t{\n\t\tint v = e[i].to;\n\t\tif(v == nowson) continue;\n\t\tcalc(v, val);\n\t}\n}\n\nvoid dfs(int u, bool is)\n{\n\tfor(int i=fir[u];i;i=e[i].ne)\n\t{\n\t\tint v = e[i].to;\n\t\tif(v == son[u]) continue;\n\t\tdfs(v, 0);\n\t}\n\tif(son[u]) \n\t{\n\t\tdfs(son[u], 1);\n\t\tnowson = son[u];\n\t}\n\tcalc(u, 1);\n\tnowson = 0;\n\tfor(int i=0;i<vp[u].size();i++)\n\t\ta[vp[u][i]].ans = cnt[dep[a[vp[u][i]].x]]-1;\n\tif(!is) calc(u, -1);\n}\n\nint main()\n{\n\tscanf(\"%d\",&n);\n\tlg[0] = -1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&f[i][0]);\n\t\tif(f[i][0]) join(f[i][0], i);\n\t\telse rt[++tot] = i;\n\t\tlg[i] = lg[i>>1] + 1;\n\t}\n\tfor(int i=1;i<=tot;i++)\n\t\tdfs1(rt[i]);\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d\",&a[i].x,&a[i].k);\n\t\ta[i].pa = kthparent(a[i].x, a[i].k);\n\t\tvp[a[i].pa].push_back(i);\n\t}\n\tfor(int i=1;i<=tot;i++)\n\t\tdfs(rt[i], 0);\n\tfor(int i=1;i<=m;i++)\n\t\tprintf(\"%d%c\",a[i].ans,\" \\n\"[i==m]);\n\treturn 0;\n}\n```\n",
        "postTime": 1595865653,
        "uid": 151601,
        "name": "Aphros",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF208E \u3010Blood Cousins\u3011"
    },
    {
        "content": "\u65e0\u4efb\u4f55\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u3002\n\n\u672c\u9898\u5206\u4e3a\u4e24\u90e8\u5206\uff1a\n\n1. \u4e00\u90e8\u5206\u662f\u6c42\u51fa\u6811\u4e0a k \u7ea7\u7956\u5148\uff0c\u76f4\u63a5\u500d\u589e\u8df3\u5c31\u53ef\u4ee5\u3002\n\n2. \u53e6\u4e00\u90e8\u5206\u662f\u6c42\u51fa\u6811\u4e0a k \u7ea7\u5b50\u5b59\u7684\u6570\u91cf\uff0c\u8fd9\u4e00\u90e8\u5206\u6bd4\u8f83\u590d\u6742\u3002\n\n    \u9996\u5148\u4e00\u4e2a\u70b9\u7684 k \u7ea7\u5b50\u5b59\u7684\u6df1\u5ea6\u663e\u7136\u90fd\u662f\u4e00\u6837\u7684\uff0c\u56e0\u4e3a\u662f\u5728\u540c\u4e00\u5b50\u6811\u5185\uff0c\u6240\u4ee5\uff0c\u5982\u679c\u6211\u4eec\u628a dep \u4e3a x \u7684\u70b9\u7684 dfs \u5e8f\u4ece\u5c0f\u5230\u5927\u5b58\u8d77\u6765\u5c31\u4f1a\u53d1\u73b0\u5b83\u4eec\u662f\u8fde\u7eed\u7684\u3002\n\n    \u628a\u5b83\u4eec\u5b58\u8d77\u6765\u4e4b\u540e\uff0c\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u7edf\u8ba1\u4e00\u4e2a\u5355\u8c03\u9012\u589e\u7684\u5e8f\u5217\u4e2d\u6570\u503c\u5728 l~r \u5185\u7684\u6570\u7684\u4e2a\u6570\u3002\u8fd9\u4e2a\u95ee\u9898\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u89e3\u51b3\uff0c\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u51fa\u5c0f\u4e8e $r$ \u7684\u6570\u7684\u6700\u5927\u7684\u4f4d\u7f6e\uff0c\u6c42\u51fa\u53ef\u884c\u7b54\u6848\u7684\u53f3\u7aef\u70b9\uff0c\u518d\u4e8c\u5206\u51fa\u5de6\u7aef\u70b9\u5c31\u53ef\u4ee5\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define log(a) cerr<<\"\\033[32m[DEBUG] \"<<#a<<'='<<(a)<<\" @ line \"<<__LINE__<<\"\\033[0m\"<<endl\n#define LL long long\n#define SZ(x) ((int)x.size()-1)\n#define ms(a,b) memset(a,b,sizeof a)\n#define F(i,a,b) for(int i=(a);i<=(b);++i)\n#define DF(i,a,b) for(int i=(a);i>=(b);--i)\nusing namespace std;\ninline int read(){char ch=getchar(); int w=1,c=0;\n\tfor(;!isdigit(ch);ch=getchar()) if (ch=='-') w=-1;\n\tfor(;isdigit(ch);ch=getchar()) c=(c<<1)+(c<<3)+(ch^48);\n\treturn w*c;\n}\ntemplate<typename T>inline void write(T x){\n    unsigned long long y=0;T l=0;\n    if(x<0)x=-x,putchar(45);\n    if(!x){putchar(48);return;}\n    while(x){y=y*10+x%10;x/=10;l++;}\n    while(l){putchar(y%10+48);y/=10;l--;}\n}\ntemplate<typename T>inline void writeln(T x){write(x);puts(\"\");}\ntemplate<typename T>inline void writes(T x){write(x);putchar(32);}\nconst int N=1e6+10;\nint fa[10][N],dep[N],cnt,l[N],r[N],h[N],a[N],t[N],tot,hd[N],nxt[N],to[N];\ninline void add(int x,int y){\n\tto[++tot]=y;\n\tnxt[tot]=hd[x];\n\thd[x]=tot;\n}\nvoid dfs(int x){\n\tl[x]=++cnt;\n\ta[x]=++h[dep[x]];\n\tfor(int i=hd[x];i;i=nxt[i])dfs(to[i]);\n\tr[x]=cnt;\n}\nsigned main(){\n\tint n=read();\n\tF(i,1,n){\n\t\tfa[0][i]=read();\n\t\tif(!fa[0][i]){\n\t\t\tdep[i]=1;\n\t\t\tcontinue;\n\t\t}\n\t\tadd(fa[0][i],i);\n\t\tdep[i]=dep[fa[0][i]]+1;\n\t\tF(j,1,9)fa[j][i]=fa[j-1][fa[j-1][fa[j-1][fa[j-1][i]]]];\n\t}\n\tF(i,1,n)\n\t\tif(!fa[0][i])dfs(i);\n\tF(i,2,n)h[i]+=h[i-1];\n\tF(i,1,n)t[h[dep[i]-1]+a[i]]=l[i];\n\tint q=read();\n\twhile(q--){\n\t\tint x=read(),k=read(),z=dep[x];\n\t\tDF(i,9,0){\n\t\t\tint z=(1<<(i<<1));\n\t\t\tif(k>=z)k-=z,x=fa[i][x];\n\t\t\tif(k>=z)k-=z,x=fa[i][x];\n\t\t\tif(k>=z)k-=z,x=fa[i][x];\n\t\t}\n\t\tint l=h[z-1],r=h[z]+1;\n\t\twhile(l+1<r){\n\t\t\tint mid=(l+r)>>1;\n\t\t\tif(mid<0)break;\n\t\t\tif(t[mid]<::l[x])l=mid;\n\t\t\telse r=mid;\n\t\t}\n\t\tint kl=l+1,kr=h[z]+1;\n\t\twhile(kl+1<kr){\n\t\t\tint kmid=(kl+kr)>>1;\n\t\t\tif(t[kmid]<=::r[x])kl=kmid;\n\t\t\telse kr=kmid;\n\t\t}\n\t\twrites(kl-l-1);\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1628242870,
        "uid": 180242,
        "name": "orzdevinwang",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF208E \u3010Blood Cousins\u3011"
    },
    {
        "content": "## Tag\n\n\u4e3b\u5e2d\u6811\uff0c\u6811\u94fe\uff08\uff1f\uff09\u5256\u5206\u3002\n\n## Preface\n\n\u548b\u6e05\u4e00\u8272\u7684\u79bb\u7ebf\u505a\u6cd5\uff1f\u8fd9\u9898\u5728\u7ebf\u4e0d\u56f0\u96be\u5427\u2026\u2026\n\n## Description\n\n\u7ed9\u4e00\u9897\u4e00\u5171 $n$ \u4e2a\u8282\u70b9\u7684\u68ee\u6797\uff0c$m$ \u6b21\u8be2\u95ee\uff0c\u6c42\u591a\u5c11\u4e2a\u8282\u70b9\u4e0e\u7b2c $x$ \u4e2a\u8282\u70b9\u7684 $k$ \u7ea7\u7956\u5148\u76f8\u540c\u3002\n\n$\\texttt{data range:} n\\leq 10^5$.\n\n## Solution\n\n\u9996\u5148\u5f88\u5bb9\u6613\u60f3\u5230\u500d\u589e\u7684\u6c42\u51fa $k$ \u7ea7\u7956\u5148\u7136\u540e\u53ea\u5904\u7406 $k$ \u7ea7\u7956\u5148\u7684\u5b50\u6811\u4e2d\u6709\u591a\u5c11\u4e2a\u4e0e $x$ \u70b9\u76f8\u540c\u6df1\u5ea6\u7684\u8282\u70b9\u3002\n\n\u90a3\u4e48\u6839\u636e\u6811\u94fe\u5256\u5206\u7684\u6027\u8d28\uff0c**\u4e00\u9897\u5b50\u6811\u7684 dfs \u5e8f\u662f\u8fde\u7eed\u7684**\uff0c\u90a3\u4e48\u5c06 dfs \u5e8f\u6c42\u51fa\u6765\u4e4b\u540e\u5c31\u53ef\u4ee5\u5c06\u6811\u4e0a\u95ee\u9898\u8f6c\u5316\u4e3a\u5e8f\u5217\u7684\u533a\u95f4\u95ee\u9898\u4e86\u3002\n\n\u60f3\u5fc5\u4e0a\u9762\u7684\u4e1c\u897f\u7406\u89e3\u4e86\u4e4b\u540e\u540e\u9762\u7684\u5c31\u5f88\u597d\u60f3\u4e86\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4\u800c\u8a00\uff0c\u6211\u4eec\u53ea\u7528\u6c42\u51fa\u8fd9\u4e2a\u533a\u95f4\u6709\u591a\u5c11\u4e2a\u6743\u503c\u4e3a $d_x$ \u7684\u70b9\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u91cc\u7684 $d_x$ \u8868\u793a\u7684\u662f $x$ \u70b9\u7684\u6df1\u5ea6\u3002\n\n~~\u8fd8\u4e0d\u5e26\u4fee\u6539\uff0c\u4ec0\u4e48\u7b97\u6cd5\u90fd\u80fd\u8fc7\u53bb\u5427\u3002~~\n\n### \u89e3\u6cd51\n\n\u7528\u53ef\u6301\u4e45\u6743\u503c\u7ebf\u6bb5\u6811\u5c31\u53ef\u4ee5\u5f88\u5bb9\u6613\u505a\u5230\u5728\u7ebf\u7684\u8be2\u95ee\u4e86\u3002\uff08\u679c\u7136\u8fd8\u662f\u5728\u7ebf\u7684\u7b97\u6cd5\u66f4\u52a0\u4f18\u7f8e\u554a\uff09\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\lg n)$.\n\n### \u89e3\u6cd52\n\n\u5982\u679c\u4e0d\u4f1a\u53ef\u6301\u4e45\u6743\u503c\u7ebf\u6bb5\u6811\u7684\u540c\u5b66\u53ef\u4ee5\u628a\u8be2\u95ee\u79bb\u7ebf\u7136\u540e\u7528\u83ab\u961f\u67e5\u8be2\u7b54\u6848\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\sqrt n)$.\n\n## Code\n\n\u8fd9\u91cc\u6211\u53ea\u653e\u4e00\u4e0b\u524d\u4e00\u79cd\u505a\u6cd5\u7684\u4ee3\u7801\u5427\u2026\u2026\n\n```cpp\nconst int N = 1e5 + 1;\n\nstruct ChairManTree {\n    int ls[N << 5], rs[N << 5], su[N << 5], cnt = 0;\n    \n    void bld(int &x ,int lef, int rig) {\n        if(!x) x = ++cnt;\n        if(lef == rig) return ;\n        int mid = (lef + rig) >> 1;\n        bld(ls[x], lef, mid);\n        bld(rs[x], mid + 1, rig);\n        return ;\n    }\n    \n    void upd(int&x, int y, int lef, int rig, int k) {\n        if(!x) x = ++cnt;\n        if(lef == rig) return void(su[x] = su[y] + 1);\n        int mid = (lef + rig) >> 1;\n        if(k <= mid) rs[x] = rs[y], upd(ls[x] ,ls[y], lef, mid, k);\n        else ls[x] = ls[y], upd(rs[x], rs[y], mid + 1, rig, k);\n        return ;\n    }\n    \n    int qry(int u, int v, int lef, int rig, int k) {\n        if(lef == rig) return su[v] - su[u];\n        int mid = (lef + rig) >> 1;\n        if(k <= mid) return qry(ls[u], ls[v], lef, mid, k);\n        else return qry(rs[u], rs[v], mid + 1, rig, k);\n    }\n    \n} T;\n\nint rt[N], n, m, f[N][20], d[N], sz[N], tot;\nint id[N];\nvector<int> e[N], stk;\n\ninline void input() {\n    n = rd;\n    for(int i = 1; i <= n; i++) {\n        int fa = rd;\n        if(fa) e[fa].push_back(i);\n        else stk.push_back(i);\n    }\n    return ;\n}\n\nvoid dfs(const int u, const int pre) {\n    d[u] = d[pre] + 1, f[u][0] = pre, sz[u] = 1;\n    id[u] = ++tot, T.upd(rt[tot], rt[tot - 1], 1, n, d[u]);\n    for(int v : e[u]) {\n        dfs(v, u);\n        sz[u] += sz[v];\n    }\n    return ;\n}\n\ninline void init() {\n    T.bld(rt[0], 1, n);\n    for(int x : stk) dfs(x, 0);\n    for(int j = 1; j < 20; j++)\n    for(int i = 1; i <= n; i++)\n    f[i][j] = f[ f[i][j - 1] ][j - 1];\n    return ;\n}\n\ninline int Kfa(int x, int k) {\n    for(int i = 19; ~i; i--) \n    if(d[x] - d[f[x][i]] <= k)\n    k -= d[x] - d[f[x][i]], x = f[x][i];\n    return x;\n}\n\ninline void work() {\n    int m = rd;\n    while( m-- ) {\n        int x = rd, k = rd, fa = Kfa(x, k);\n        int lef = id[fa], rig = id[fa] + sz[fa] - 1;\n        if(fa == 0) cout << 0 << ' ';\n        else cout << T.qry(rt[lef], rt[rig], 1, n, d[x]) - 1 << ' ';\n    }\n    \n    return ;\n}\n\ninline void solve() {\n    input();\n    init();\n    work();\n    return ;\n}\n\n```\n\n",
        "postTime": 1633334035,
        "uid": 366935,
        "name": "KAMIYA_KINA",
        "ccfLevel": 7,
        "title": "CF208E Blood Cousins \u9898\u89e3"
    },
    {
        "content": "#### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u51fa\u4e00\u4e2a $n$ \u4e2a\u70b9\u6784\u6210\u7684\u68ee\u6797\uff0c\u6709 $m$ \u7ec4\u8be2\u95ee  \n\u6bcf\u6b21\u8be2\u95ee\u4e00\u4e2a\u70b9 $x$ \u4e0e\u591a\u5c11\u4e2a\u70b9\u62e5\u6709\u5171\u540c\u7684 $k$ \u7ea7\u7956\u5148\n\n#### \u9898\u89e3\n\n\u6211\u4eec\u7a0d\u5fae\u8f6c\u5316\u4e00\u4e0b\u9898\u610f\uff1a  \n\u8bbe $y$ \u4e3a $x$ \u7684\u6811\u4e0a $k$ \u7ea7\u7956\u5148\uff0c\u90a3\u4e48\u8be2\u95ee\u5c31\u53d8\u6210\u4e86\u5728 $y$ \u7684\u5b50\u6811\u4e2d\u6709\u591a\u5c11\u4e2a\u70b9\u4e0e $y$ \u7684\u8ddd\u79bb\u4e3a $k$\u3002\u6700\u540e\u8f93\u51fa\u65f6\u9700\u8981\u51cf\u4e00\n\n\u9996\u5148\uff0c\u6211\u4eecdfs\u6c42\u51fa\u6bcf\u4e2a\u70b9\u7684\u6df1\u5ea6  \n\u7136\u540e\uff0c\u7ed9\u6bcf\u4e00\u4e2a\u70b9 $x$ \u5f00\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u53ea\u9700\u8981\u652f\u6301\u5355\u70b9\u4fee\u6539\u548c\u5355\u70b9\u67e5\u8be2\u3002\u4f4d\u7f6e $i$ \u8bb0\u5f55 $x$ \u5b50\u6811\u4e2d\u6df1\u5ea6\u4e3a $i$ \u7684\u70b9\u7684\u51fa\u73b0\u6b21\u6570  \n\u6700\u540e\u8be2\u95ee\u65f6\uff0c\u76f4\u63a5\u67e5\u8be2 $y$ \u7684\u5b50\u6811\u4e2d\u8ddf $x$ \u6df1\u5ea6\u76f8\u540c\u7684\u8282\u70b9\u6570\uff08\u8bb0\u5f97\u51cf\u4e00\uff09  \n\u6ce8\u610f\u8981\u7279\u5224 $x$ \u6ca1\u6709 $k$ \u7ea7\u7956\u5148\u7684\u60c5\u51b5\n\n\u6734\u7d20\u590d\u6742\u5ea6 $\\operatorname{O}(n^2)$  \n\u7ebf\u6bb5\u6811\u5408\u5e76\u590d\u6742\u5ea6 $\\operatorname{O}(n\\log n)$\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nconst int Maxn=100000+10;\nconst int Maxm=5000000+10;\nconst int inf=0x3f3f3f3f;\nint root[Maxn],head[Maxn];\nint nxt[Maxn<<1],to[Maxn<<1];\nint f[Maxn][23],c[Maxn];\nint sum[Maxm],d[Maxn];\nint ls[Maxm],rs[Maxm];\nint n,m,edgecnt,idcnt,cnt;\ninline int read()\n{\n\tint s=0,w=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n\twhile(ch>='0' && ch<='9')s=(s<<3)+(s<<1)+(ch^48),ch=getchar();\n\treturn s*w;\n}\ninline void add(int x,int y)\n{\n\t++edgecnt;\n\tnxt[edgecnt]=head[x];\n\tto[edgecnt]=y;\n\thead[x]=edgecnt;\n}\ninline void push_up(int x)\n{\n\tsum[x]=sum[ls[x]]+sum[rs[x]];\n}\ninline void modify(int &x,int l,int r,int pos,int v)\n{\n\tif(!x)x=++idcnt;\n\tif(l==r)\n\t{\n\t\tsum[x]+=v;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif(pos<=mid)modify(ls[x],l,mid,pos,v);\n\telse modify(rs[x],mid+1,r,pos,v);\n\tpush_up(x);\n}\nint merge(int x,int y)\n{\n\tif(!x || !y)return x|y;\n\tint cur=++idcnt;\n\tsum[cur]=sum[x]+sum[y];\n\tls[cur]=merge(ls[x],ls[y]);\n\trs[cur]=merge(rs[x],rs[y]);\n\treturn cur;\n}\nint query(int x,int l,int r,int pos)\n{\n\tif(!x)return 0;\n\tif(l==r)return sum[x];\n\tint mid=(l+r)>>1;\n\tif(pos<=mid)return query(ls[x],l,mid,pos);\n\telse return query(rs[x],mid+1,r,pos);\n}\nvoid dfs(int x,int fa)\n{\n\tf[x][0]=fa,d[x]=d[fa]+1;\n\tfor(int i=1;i<=17;++i)\n\tf[x][i]=f[f[x][i-1]][i-1];\n\tfor(int i=head[x];i;i=nxt[i])\n\t{\n\t\tint y=to[i];\n\t\tif(y==fa)continue;\n\t\tdfs(y,x);\n\t\troot[x]=merge(root[x],root[y]);\n\t}\n\tmodify(root[x],1,n,d[x],1);\n}\nint find(int x,int k)\n{\n\tfor(int i=17;i>=0;--i)\n\tif(k & (1<<i))x=f[x][i];\n\treturn x;\n}\nint main()\n{\n//\tfreopen(\"in.txt\",\"r\",stdin);\n\tn=read();\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tint x=read();\n\t\tif(!x)c[++cnt]=i;\n\t\telse add(i,x),add(x,i);\n\t}\n\tfor(int i=1;i<=cnt;++i)\n\tdfs(c[i],0);\n\tm=read();\n\twhile(m--)\n\t{\n\t\tint x=read(),k=read();\n\t\tint pos=find(x,k);\n\t\tif(!pos)printf(\"0 \");\n\t\telse printf(\"%d \",query(root[pos],1,n,d[x])-1);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1605671378,
        "uid": 120362,
        "name": "Priori_Incantatem",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF208E \u3010Blood Cousins\u3011"
    },
    {
        "content": "\nUpdated On 2021.10.20\uff1a\u4fee\u6539\u4e86\u90e8\u5206 $\\LaTeX$ \u683c\u5f0f\u4e0e\u4ee3\u7801\u3002\n\n### \u9898\u76ee\u5927\u610f\n\n> \u7ed9\u4f60\u4e00\u7247 $n$ \u4e2a\u70b9\u7684\u68ee\u6797\uff0c$m$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u4e00\u4e2a\u70b9 $v_i$ \u4e0e\u591a\u5c11\u4e2a\u70b9\u62e5\u6709\u5171\u540c\u7684 $p_i$ \u7ea7\u7956\u5148\u3002\n>\n> $1 \\le n,m \\le 10^5, 1 \\le v_i,p_i \\le n$\u3002\n\n### \u89e3\u9898\u601d\u8def\n\n\u76f4\u63a5\u6c42\u4e00\u4e2a\u8282\u70b9\u7684 $k$ \u7ea7\u5144\u5f1f\u80af\u5b9a\u4e0d\u597d\u505a\uff0c\u6211\u4eec\u8003\u8651\u628a\u8be2\u95ee\u8f6c\u5316\u6210\u4e00\u4e2a\u7956\u5148\u6709\u591a\u5c11\u4e2a $k$ \u7ea7\u513f\u5b50\uff0c\u53ea\u8981\u6c42\u51fa $k$ \u7ea7\u513f\u5b50\u4e2a\u6570\u518d $-1$ \u5c31\u662f\u7b54\u6848\u4e86\u3002\n\n\u56e0\u6b64\u6211\u4eec\u5148\u500d\u589e\u9884\u5904\u7406\uff0c\u7136\u540e\u6bcf\u6b21\u8bfb\u5165\u8be2\u95ee\uff0c\u7528\u500d\u589e\u8df3  $k$ \u7ea7\u7956\u5148\uff0c\u628a\u8be2\u95ee\u6302\u5230\u7956\u5148\u4e0a\u3002\n\n\u5b8c\u6210\u95ee\u9898\u7684\u8f6c\u5316\u540e\uff0c\u6211\u4eec\u76f4\u63a5\u4ee5\u6df1\u5ea6\u5efa\u7acb\u7ebf\u6bb5\u6811\u5408\u5e76\u7ef4\u62a4\u6bcf\u4e2a\u6df1\u5ea6\u7684\u513f\u5b50\u51fa\u73b0\u51e0\u4e2a\uff0c\u6bcf\u6b21\u5982\u679c\u53d1\u73b0\u5f53\u524d\u8282\u70b9 $x$ \u6709\u88ab\u6302\u8be2\u95ee\u5c31\u5355\u70b9\u67e5\u8be2\u6df1\u5ea6\u4e3a $dep_x+k$ \u7684\u6709\u51e0\u4e2a\u3002\n\n\u4e8e\u662f\u5c31\u505a\u5b8c......\u4e86\uff1f\n\n\u786e\u5b9e\u505a\u5b8c\u4e86\uff0c\u4e0d\u8fc7\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f18\u5316\uff01\n\n\u9996\u5148\u6211\u4eec\u500d\u589e\u6c42 $k$ \u7ea7\u7956\u5148\u663e\u7136\u4e0d\u592a\u5f73\u4e8d\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u95ee\u9898\u5012\u662f\u4e0d\u5927\uff0c\u4f46\u662f\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n \\log\u2061 n)$ \u5374\u662f\u6bd4\u8f83\u5927\u7684\uff0c\u8003\u8651\u8fdb\u884c\u4f18\u5316\u3002\u6211\u4eec\u77e5\u9053 LCA \u9664\u4e86\u500d\u589e\u4e5f\u53ef\u4ee5\u7528**\u6811\u5256**\u6c42\u3002\u90a3\u6211\u4eec\u8003\u8651\u7528\u6811\u5256\u6c42 $k$ \u7ea7\u7956\u5148\u3002\u6bcf\u6b21\u8df3\u4e00\u6761\u91cd\u94fe\uff0c\u5c31\u628a $k$ \u51cf\u53bb\u8fd9\u6761\u91cd\u94fe\u7684\u957f\u5ea6\uff0c\u4e5f\u5c31\u662f $dfn_x-dfn_{top_x}$\uff08\u8fd9\u91cc\u4e0d\u7528 $+1$\u662f\u56e0\u4e3a\u6211\u4eec\u8fd9\u6761\u91cd\u94fe\u4e4b\u540e\u8df3\u7684\u662f $fa_{top_x}$\uff0c\u5177\u4f53\u7ec6\u8282\u8fd8\u662f\u5199\u4ee3\u7801\u7684\u65f6\u5019\u7ed3\u5408\u6837\u4f8b\u7422\u78e8\u4ebf\u4e0b\uff09\u3002\u5982\u679c\u53d1\u73b0 $k$ \u5df2\u7ecf\u4e0d\u5230\u8fd9\u6761\u91cd\u94fe\u7684\u957f\u5ea6\u4e86\uff0c\u6211\u4eec\u76f4\u63a5\u8fd4\u56de\u8fd9\u6761\u91cd\u94fe\u4e0a\u4ece\u4e0b\u5f80\u4e0a\u7684\u7b2c $k$ \u4e2a\u70b9\uff08\u5177\u4f53\u7ec6\u8282\u8fd8\u662f\u81ea\u5df1\u5b9a\uff09\uff0c\u56e0\u4e3a**\u91cd\u94fe\u4e0a\u7684\u8282\u70b9\u7f16\u53f7\u662f\u8fde\u7eed**\u7684\u3002 \u65f6\u95f4\u590d\u6742\u5ea6\u663e\u7136\u662f\u9884\u5904\u7406 $O(n)$ \uff0c\u5355\u6b21\u5904\u7406 $O(\\log\u2061 n)$ \u7684\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u5927\u5e38\u6570 $O(n)$\u3002\n\n\u4e0d\u8fc7\u6811\u5256\u7684\u4e24\u904d dfs \u9700\u8981\u5f88\u591a\u6570\u7ec4\uff01\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528**\u79bb\u7ebf dfs** \u6765\u6574\u4f53 $O(n)$ \u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u53ea\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u6808\uff0c\u7ef4\u62a4\u4ece\u6839\u8282\u70b9\u5230\u5f53\u524d\u8282\u70b9\u7684\u8def\u5f84\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee\uff0c\u76f4\u63a5\u5728\u6808\u4e2d\u627e\u5230\u6808\u9876\u5411\u4e0b\u7684\u7b2c $k$ \u4e2a\u503c\u5373\u53ef\u3002\n\n\u8fd9\u4e5f\u662f\u4e00\u4e2a\u51b7\u95e8\u7684\u5957\u8def\uff0c\u4e0d\u8fc7\u975e\u5e38\u597d\u7528\uff0c\u800c\u4e14\u53ea\u9700\u8981\u4e00\u4e2a\u6570\u7ec4\uff01\n\n\u7136\u540e\u8003\u8651\u4f18\u5316\u7ebf\u6bb5\u6811\u5408\u5e76\uff0c\u6211\u4eec**\u6309\u7167 $siz$ \u4ece\u5927\u5230\u5c0f\u904d\u5386\u5b69\u5b50\u5e76\u5408\u5e76\uff0c\u6bcf\u6b21\u5728\u5408\u5e76\u7ebf\u6bb5\u6811\u540e\u628a\u65e7\u7684\u7ebf\u6bb5\u6811\u7684\u65e0\u7528\u8282\u70b9\u56de\u6536**\u5373\u53ef\u3002\u8fd9\u6837\u53ef\u4ee5\u628a\u7a7a\u95f4\u590d\u6742\u5ea6\u4f18\u5316\u4e00\u4e9b\u3002\n\n### Code\n\n\u8fd9\u91cc\u63d0\u4f9b\u6700\u6734\u5b9e\u7684\u500d\u589e\u505a\u6cd5\u7684\u4ee3\u7801\uff0c\u4ee5\u53ca\u5176\u4ed6\u4e24\u79cd\u505a\u6cd5\u7684\u90e8\u5206\u4ee3\u7801\u3002\n\n\u6734\u5b9e\u505a\u6cd5\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=200005,LogN=20;\n\nbool St;\n\nstruct Edge{\n\tint vet,nxt;\n}e[N<<1];\n\nstruct Ques{\n\tint val,ord;\n};\n\nstruct Node{\n\tint lson,rson;\n\tint cnt;\n}tree[N*LogN];\n\nint n,m,edge=0,logN=0,head[N];\nint fa[N][LogN],dep[N];\nint ans[N],rt[N],cntNode=0;\nbool isrt[N];\nvector <Ques> q[N];\n\ninline int read(){\n\tint x=0,f=1; char ch=getchar();\n\twhile (!isdigit(ch)){ if (ch=='-') f=-1; ch=getchar(); }\n\twhile (isdigit(ch)){ x=x*10+ch-'0'; ch=getchar(); }\n\treturn x*f;\n}\n\ninline void addedge(int x,int y){\n\te[++edge].vet=y;\n\te[edge].nxt=head[x];\n\thead[x]=edge;\n}\n\ninline void dfs(int x,int fath){\n\tfa[x][0]=fath; dep[x]=dep[fath]+1;\n\tfor (int i=1;i<=logN;++i)\n\t\tfa[x][i]=fa[fa[x][i-1]][i-1];\n\tfor (int i=head[x];i;i=e[i].nxt){\n\t\tint v=e[i].vet;\n\t\tif (v==fath) continue;\n\t\tdfs(v,x);\n\t}\n}\n\ninline int jump(int x,int k){\n\tfor (int i=logN;i>=0;--i)\n\t\tif ((1<<i)<=k)\n\t\t\tk-=(1<<i),x=fa[x][i];\n\treturn x;\n}\n\n#define lid (tree[id].lson)\n#define rid (tree[id].rson)\n\ninline void pushup(int id){\n\ttree[id].cnt=tree[lid].cnt+tree[rid].cnt;\n}\n\ninline void Insert(int& id,int l,int r,int val){\n\tif (!id) id=++cntNode;\n\tif (l==r){\n\t\t// printf(\"Ins dep=%d\\n\",l);\n\t\t++tree[id].cnt;\n\t\treturn void();\n\t}\n\tint mid=(l+r)>>1;\n\tif (val<=mid) Insert(lid,l,mid,val);\n\telse Insert(rid,mid+1,r,val);\n\tpushup(id);\n}\n\ninline int Merge(int x,int y,int l,int r){\n\tif (!x) return y;\n\tif (!y) return x;\n\tif (l==r){\n\t\ttree[x].cnt+=tree[y].cnt;\n\t\treturn x;\n\t}\n\tint mid=(l+r)>>1;\n\ttree[x].lson=Merge(tree[x].lson,tree[y].lson,l,mid);\n\ttree[x].rson=Merge(tree[x].rson,tree[y].rson,mid+1,r);\n\tpushup(x);\n\treturn x;\n}\n\ninline int Query(int id,int l,int r,int val){\n\tif (!id) return 0;\n\tif (l>r) return 0;\n\tif (l==r){\n \t\t// printf(\"Qry dep=%d\\n\",l);\n\t\treturn tree[id].cnt;\n\t}\n\tint mid=(l+r)>>1;\n\tif (val<=mid) return Query(lid,l,mid,val);\n\telse return Query(rid,mid+1,r,val);\n}\n\ninline void Dfs(int x,int fath){\n\t// printf(\"x=%d fath=%d dep[x]=%d\\n\",x,fath,dep[x]);\n\trt[x]=++cntNode;\n\tInsert(rt[x],1,n+1,dep[x]);\n\tfor (int i=head[x];i;i=e[i].nxt){\n\t\tint v=e[i].vet;\n\t\tif (v==fath) continue;\n\t\tDfs(v,x);\n\t\trt[x]=Merge(rt[x],rt[v],1,n+1);\n\t}\n\tfor (auto it : q[x]){\n\t\tans[it.ord]=Query(rt[x],1,n+1,it.val);\n\t\t// printf(\"%d : Query(%d)\\n\",x,it.val);\n\t}\n}\n\nint main(){\n\t//freopen(\"CF208E.in\",\"r\",stdin);\n\t//freopen(\"CF208E.out\",\"w\",stdout);\n\tn=read(); logN=(int)(log2(n)+1);\n\tfor (int i=1;i<=n;++i){\n\t\tint x=read();\n\t\tif (x==0){ isrt[i]=true; continue; }\n\t\taddedge(x,i);\n\t\taddedge(i,x);\n\t}\n\tm=read();\n\tfor (int i=1;i<=n;++i)\n\t\tif (isrt[i]) dfs(i,0);\n\tfor (int i=1;i<=m;++i){\n\t\tint x=read(),y=read();\n\t\t// printf(\"jump(%d,%d)=%d\\n\",x,y,jump(x,y));\n\t\tint anc=jump(x,y);\n\t\tif (anc) q[anc].push_back((Ques){dep[x],i});\n\t}\n\tfor (int i=1;i<=n;++i)\n\t\tif (isrt[i]) Dfs(i,0);\n\tfor (int i=1;i<=m;++i)\n\t\tprintf(\"%d \",max(ans[i]-1,0));\n\tprintf(\"\\n\");\n\tbool Ed; cerr<<\"MemoryUsed:\"<<1.0*(&St-&Ed)/1024/1024<<endl;\n\treturn 0;\n}\n```\n\n\u6811\u5256\u6c42 $k$ \u7ea7\u7956\u5148\uff1a\n\n```cpp\nnamespace TCP{\n\n\tint son[N],newid[N],top[N],rev[N],timer=0;\n\t\n\tinline void dfs1(int x){\n\t\tson[x]=0;\n\t\tfor (int i=head[x];i;i=e[i].nxt){\n\t\t\tint v=e[i].vet;\n\t\t\tdfs1(v);\n\t\t\tif (siz[v]>siz[son[x]]) son[x]=v;\n\t\t}\n\t}\n\n\tinline void dfs2(int x,int tp){\n\t\ttop[x]=tp; newid[x]=++timer;\n\t\trev[timer]=x;\n\t\tif (son[x]) dfs2(son[x],tp);\n\t\tfor (int i=head[x];i;i=e[i].nxt){\n\t\t\tint v=e[i].vet;\n\t\t\tif ((v==fa[x]) || (v==son[x])) continue;\n\t\t\tdfs2(v,v);\n\t\t}\n\t}\n\n\tinline int jump(int x,int k){\n\t\tint len=0;\n\t\twhile (true){\n\t\t\tif (!x) return x;\n\t\t\tlen+=newid[x]-newid[top[x]];\n\t\t\t// printf(\"x=%d len=%d k=%d return %d\\n\",x,len,k,rev[newid[top[x]]+(len-k)]);\n\t\t\tif (len>=k) return rev[newid[top[x]]+(len-k)];\n\t\t\tx=fa[top[x]]; ++len;\n\t\t}\n\t}\n}\n```\n\n\u79bb\u7ebf dfs \u6c42 $k$ \u7ea7\u7956\u5148\uff1a\n\n```cpp\nnamespace k_fath{\n\tvoid dfss(int x){\n\t\tsta[++top]=x;\n\t\tfor (int i=Hed[x];i;i=Q[i].nxt){\n\t\t\tint k=Q[i].val,ord=Q[i].ord;\n\t\t\tint anc=(k>=top) ? (0) : (sta[top-k]);\n\t\t\tif (anc) addquery(anc,dep[x],Q[i].ord);\n\t\t}\n\t\tfor (int i=head[x];i;i=e[i].nxt)\n\t\t\tdfss(e[i].vet);\n\t\t--top;\n\t}\n}\n```\n\n",
        "postTime": 1634612000,
        "uid": 119264,
        "name": "Alkaid_Star",
        "ccfLevel": 0,
        "title": "CF208E Blood Cousins\uff08\u7ebf\u6bb5\u6811\u5408\u5e76\uff09\u9898\u89e3"
    },
    {
        "content": "## Description\n\n\u7ed9\u5b9a\u542b\u6709 $n$ \u4e2a\u70b9\u7684\u68ee\u6797\uff0c$m$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u5305\u542b\u4e24\u4e2a\u53c2\u6570 $v,p$\uff0c\u6c42\u6709\u591a\u5c11\u4e2a\u8282\u70b9\u4e0e\u8282\u70b9 $v$ \u542b\u6709\u76f8\u540c\u7684 $p$ \u7ea7\u7956\u5148\u3002\n\n$1\\le n\\le 10^5$\n\n## Solution\n\n\u770b\u5230\u7ebf\u6bb5\u6811\u5408\u5e76\u7684\u9898\u89e3\u90a3\u4e48\u5c11\uff0c\u5c31\u6765\u8865\u4e00\u7bc7\u5427\u3002\n\n### \u524d\u7f6e\u77e5\u8bc6\n\n- \u7ebf\u6bb5\u6811\u5408\u5e76\n\n### \u89e3\u6cd5\n\n\u6211\u4eec\u8003\u8651\u5c06\u95ee\u9898\u8f6c\u6362\u4e00\u4e0b\uff1a\u9996\u5148\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\uff0c\u6c42\u51fa\u5176 $p$ \u7ea7\u7956\u5148\uff0c\u8bb0\u4f5c\u70b9 $u$\uff0c\u95ee\u9898\u5b9e\u9645\u4e0a\u8f6c\u5316\u4e3a\u4e86\u70b9 $u$ \u7684 $p$ \u7ea7\u5b50\u5b59\u6570\u91cf\u3002\n\n\u7136\u540e\u8003\u8651\u70b9 $c$ \u82e5\u80fd\u6210\u4e3a $u$ \u7684 $p$ \u7ea7\u5b50\u5b59\uff0c$c$ \u5b9e\u9645\u4e0a\u8981\u6ee1\u8db3\u5982\u4e0b\u4e24\u4e2a\u6761\u4ef6\uff1a\n\n-  \u5728 $u$ \u7684\u5b50\u6811\u5185\n- $\\operatorname{dep}_c=\\operatorname{dep}_u+p$ \n\n\u4e8e\u662f\u95ee\u9898\u8f6c\u5316\u4e3a $u$ \u5b50\u6811\u5185\u6709\u591a\u5c11\u4e2a\u70b9\u6ee1\u8db3 $\\operatorname{dep}_c=\\operatorname{dep}_u+p$ \uff0c\u8003\u8651\u4f7f\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u89e3\u51b3\u8be5\u95ee\u9898\u3002\n\n\u5bf9\u8be2\u95ee\u79bb\u7ebf\uff0c\u6302\u5728\u6bcf\u4e2a\u70b9\u4e0a\uff08\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u7528 `vector` \uff09\uff0c\u8fd9\u91cc\u6307\u7684\u662f\u6c42\u51fa\u4e86 $p$ \u7ea7\u7956\u5148\u4e4b\u540e\u7684\u8be2\u95ee\u3002\n\n\u4f7f\u7528\u52a8\u6001\u5f00\u70b9\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u8bbe\u8282\u70b9 $x$ \u7684\u533a\u95f4\u4e3a $[l,r]$\uff0c\u5219\u8282\u70b9 $x$ \u7ef4\u62a4\u5f53\u524d\u6709\u591a\u5c11\u4e2a\u70b9\u6ee1\u8db3 $\\operatorname{dep}$ \u5728 $[l,r]$ \u4e4b\u95f4\u3002\n\n\u8fdb\u884c\u4e00\u6b21 dfs\uff0c\u9996\u5148\u6dfb\u52a0\u70b9 $u$ \u7684\u4fe1\u606f\uff0c\u7136\u540e\u518d\u5c06\u5176\u5b50\u6811\u7684\u7ebf\u6bb5\u6811\u4e0e\u5176\u8fdb\u884c\u5408\u5e76\uff0c\u6700\u540e\u5bf9\u6302\u5728\u8be5\u70b9\u7684\u8be2\u95ee\u8fdb\u884c\u67e5\u8be2\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$\\mathcal O(n\\log n)$\u3002 \n\n## Code \n\n```cpp\nconstexpr int N = 1e5 + 5 ;\n\nint n,tot,m;\nint fa[N][20],dep[N],ans[N],head[N],to[N << 1],nxt[N << 1],srt[N],rt[N]; \n\nstd::vector<std::pair<int,int> > q[N] ;\n//first k,second id\n\ninline void add(int u,int v) {\n    static int cnt = 0 ;\n\n    to[++cnt] = v,nxt[cnt] = head[u],head[u] = cnt ;\n}\n\nvoid dfs1(int x,int f) {\n    dep[x] = dep[f] + 1,fa[x][0] = f ;\n\n    for (int i = 1; i < 20; ++i) \n        fa[x][i] = fa[fa[x][i - 1]][i - 1] ;\n\n    for (int i = head[x]; i; i = nxt[i]) \n        if (int v = to[i]; v != f) \n            dfs1(v,x);\n}\n\ninline int jump(int x,int k) {\n    for (int i = 19; ~i; --i)\n        if (k & (1 << i)) \n            x = fa[x][i] ;\n        \n    return x ;\n}\n\nnamespace seg {\n\n#define mid ((l + r) >> 1)\n\nconstexpr int MAX_NODE = N << 5 ;\n\nint cnt = 0 ;\nint ls[MAX_NODE],rs[MAX_NODE],sum[MAX_NODE] ;\n\nvoid check(int x,int l,int r) {\n    if (!x) \n        return ;\n    \n    //std::cout << \"sum \" << l << \"~\"  << r << \" = \" <<  sum[x] << '\\n' ;\n    check(ls[x],l,mid),check(rs[x],mid + 1,r) ; \n}\n\ninline void pushup(int x) {\n    sum[x] = sum[ls[x]] + sum[rs[x]] ;\n}\n\ninline void change(int &x,int l,int r,int pos) {\n    x = !x ? ++cnt : x ;\n\n    if (l == r) \n        return ++sum[x],void() ;\n    \n    if (pos <= mid) \n        change(ls[x],l,mid,pos) ;\n    else \n        change(rs[x],mid + 1,r,pos) ;\n    \n    pushup(x) ;\n}\n\nint merge(int x,int y,int l,int r) {\n    if (!x || !y) \n        return x | y ;\n\n    if (l == r) \n        return sum[x] += sum[y],x ;\n    \n    return ls[x] = merge(ls[x],ls[y],l,mid),rs[x] = merge(rs[x],rs[y],mid + 1,r),pushup(x),x ;\n}\n\nint query(int x,int l,int r,int pos) {\n    if (l == r) \n        return sum[x] ;\n    \n    if (pos <= mid) \n        return query(ls[x],l,mid,pos) ;\n    else \n        return query(rs[x],mid + 1,r,pos) ;\n}\n\n\n\n}\n\nvoid dfs2(int x) {\n    seg::change(srt[x],1,n,dep[x]) ;\n    \n    //std::cout << \"x = \" << x << '\\n' ;\n    //seg::check(srt[x],1,n) ;\n    \n    for (int i = head[x]; i; i = nxt[i]) \n        if (int v = to[i]; v != fa[x][0]) \n            dfs2(v),srt[x] = seg::merge(srt[x],srt[v],1,n);\n     \n    for (auto it : q[x]) \n        ans[it.second] = seg::query(srt[x],1,n,it.first) - 1;\n}\n\nint main(int argc, const char **argv) {\n#ifdef helios\n    freopen(\"std.in\", \"r\", stdin);\n    freopen(\"std.ans\", \"w\", stdout);\n#endif\n    std::ios::sync_with_stdio(false), std::cin.tie(nullptr), std::cout.tie(nullptr);\n    in(n) ;\n\n    for (int i = 1,x; i <= n; ++i) {\n        in(x) ;\n\n        if (x) \n            add(x,i),add(i,x) ;\n        else \n            rt[++tot] = i ;\n    }\n\n    for (int i = 1; i <= tot; ++i) \n        dep[rt[i]] = 1,dfs1(rt[i],0) ; \n\n    in(m) ;\n\n    for (int i = 1,x,k; i <= m; ++i) {\n        in(x,k) ;\n\n        int ac = jump(x,k) ;\n\n        if (ac == 0) {\n            ans[i] = 0 ;\n            continue ;\n        }\n\n        q[ac].push_back(std::make_pair(k + dep[ac],i)) ;\n    }\n\n    for (int i = 1; i <= tot; ++i) \n        dfs2(rt[i]) ;\n\n    for (int i = 1; i <= m; ++i) \n        out(' ',ans[i]) ;\n\n    seg::check(srt[1],1,n) ;\n\n    std::cerr << \"This program costs \" << clock() << \" ms\" ;\n    return 0 ;\n}\n```\n\n\u5bf9\u4ee3\u7801\u6709\u7591\u95ee\u53ef\u4ee5\u79c1\u4fe1\u6211\u3002",
        "postTime": 1630405016,
        "uid": 413147,
        "name": "_Alejandro_",
        "ccfLevel": 0,
        "title": "CF208E Blood Cousin \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9898\u7684\u5728\u7ebf\u505a\u6cd5\u597d\u5c11\u554a\uff0c\u6211\u6765\u8d21\u732e\u4e2a\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u7684\u9898\u89e3\u5427\u3002\n\n## \u524d\u7f6e\u77e5\u8bc6\n- [\u53ef\u6301\u4e45\u5316\u6570\u7ec4](https://www.luogu.com.cn/problem/P3919)\uff1b\n- [\u6811\u4e0a k \u7ea7\u7956\u5148](https://www.luogu.com.cn/problem/P5903)\uff0c\u4e0d\u7528\u4f1a\u957f\u94fe\u5256\u5206\u7684\u89e3\u6cd5\uff0c\u8fd9\u9898\u500d\u589e\u591f\u7528\u4e86\uff1b\n- \u83b7\u5f97\u4e00\u68f5\u6811\u7684 dfs \u5e8f\u3002\n\n## \u8fdb\u5165\u6b63\u9898\n\u62ff\u5230\u68ee\u6797\u540e\uff0c\u6211\u4eec\u5148\u901a\u8fc7\u4e00\u904d dfs \u5904\u7406\u51fa\u500d\u589e\u6570\u7ec4\u5e76\u5f97\u5230 dfs \u5e8f\uff0c\u5728 dfs \u5e8f\u4e0a\u5efa\u7acb\u4e3b\u5e2d\u6811\uff0c\u4e3b\u5e2d\u6811\u5185\u5b58\u6bcf\u4e2a\u70b9\u7684\u6df1\u5ea6\u3002\n\ndfs \u5e8f\u7684\u6027\u8d28\uff1a\u4e00\u9897\u5b50\u6811\u7684 dfs \u5e8f\u8fde\u7eed\u3002\n\n\u901a\u8fc7\u8fd9\u4e2a\u6027\u8d28\uff0c\u5728\u6211\u4eec\u627e\u5230 k \u7ea7\u7956\u5148\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u539f\u95ee\u9898\u8f6c\u5316\u4e3a\uff0c\u5728\u4e00\u68f5\u5b50\u6811\u5185\uff0c\u6709\u591a\u5c11\u70b9\u6df1\u5ea6\u4e0e\u8be2\u95ee\u70b9\u76f8\u540c\u3002\u663e\u7136\uff0c\u4e3b\u5e2d\u6811\u5b8c\u5168\u53ef\u4ee5\u80dc\u4efb\uff0c\u61d2\u5f97\u5199\u4e3b\u5e2d\u6811\u7684\u53ef\u4ee5\u5199\u5206\u5757\uff0c\u4e5f\u80fd\u8fc7\u3002\n\n## \u4ee3\u7801\n\u601d\u8def\u8bb2\u7684\u5f88\u6e05\u695a\u4e86\uff0c\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\nint n,m,rt[100010],head[100010],to[200010],nxt[200010],cnt,dfn[100010],rk[100010],f[100010][22],d[100010],bel[100010],sz[100010];\nvoid add(int const &x,int const &y){\n\tto[++cnt]=y,nxt[cnt]=head[x],head[x]=cnt;\n}\nvoid dfs(int const &x,int const &fa){\n\tbel[x]=bel[fa],dfn[x]=++cnt,sz[x]=1,d[x]=d[fa]+1,f[x][0]=fa,rk[cnt]=x;\n\tfor(int i=1;i<=20;i++)f[x][i]=f[f[x][i-1]][i-1];\n\tfor(int i=head[x];i;i=nxt[i])\n\t\tif(to[i]!=fa)\n\t\t\tdfs(to[i],x),sz[x]+=sz[to[i]];\n}\nstruct node{\n\tint v,ls,rs;\n}tr[4000010];\ninline void clone(int &x){tr[++cnt]=tr[x],x=cnt;}\nvoid update(int const &p,int &x,int const &l=1,int const &r=n){\n\tclone(x);\n\ttr[x].v++;\n\tif(l==r) return;\n\tint mid=(l+r)>>1;\n\tif(p<=mid) update(p,tr[x].ls,l,mid);\n\telse update(p,tr[x].rs,mid+1,r);\n}\nint query(int const &p,int const &x1,int const &x2,int const &l=1,int const &r=n){\n\tif(l==r) return tr[x1].v-tr[x2].v;\n\tint mid=(l+r)>>1;\n\tif(p<=mid) return query(p,tr[x1].ls,tr[x2].ls,l,mid);\n\telse return query(p,tr[x1].rs,tr[x2].rs,mid+1,r);\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1,x;i<=n;i++)scanf(\"%d\",&x),add(x,i);\n\tcnt=0;\n\tfor(int i=1;i<=n;i++)if(!bel[i])bel[0]=i,dfs(i,0);\n\tbel[0]=cnt=0;\n\tfor(int i=1;i<=n;i++)update(d[rk[i]],rt[i]=rt[i-1]);\n\tscanf(\"%d\",&m);\n\twhile(m--){\n\t\tint x,k,p;\n\t\tscanf(\"%d%d\",&x,&k);\n\t\tif(d[x]<=k){printf(\"0 \");continue;}\n\t\tp=d[x];\n\t\tfor(int i=20;~i;i--)\n\t\t\tif(d[f[x][i]]>=p-k)\n\t\t\t\tx=f[x][i];\n\t\tprintf(\"%d \",query(p,rt[dfn[x]+sz[x]-1],rt[dfn[x]-1])-1);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1601737008,
        "uid": 55707,
        "name": "gxy001",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF208E"
    },
    {
        "content": "\u4e00\u4e2a\u5947\u5947\u602a\u602a\u7684\u590d\u6742\u5ea6\u5f88\u5783\u573e\u7684\u7ebf\u6bb5\u6811\u5408\u5e76\u89e3\u6cd5\n\n\u672c\u6587\u540c\u6b65\u53d1\u8868\u5728[\u6211\u7684blog](https://www.cnblogs.com/TEoS/p/12977020.html)\n\n------------\n\n\n\u901a\u8fc7\u5206\u6790\u53ef\u4ee5\u53d1\u73b0\uff0c\u8981\u627e$x$\u7684$k$\u8f88\u5144\u5f1f\uff0c\u53ea\u9700\u8981\u627e\u5230$x$\u7684$k$\u8f88\u7956\u5148\uff0c\u7136\u540e\u67e5\u627e\u4ee5\u8be5\u7956\u5148\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u548c$x$\u6df1\u5ea6\u76f8\u540c\u7684\u8282\u70b9\u4e2a\u6570$-1$\u5373\u53ef\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8be2\u95ee\u53ea\u4e0e\u6df1\u5ea6\u6709\u5173\uff0c\u4e0e\u5177\u4f53\u662f\u54ea\u4e2a\u8282\u70b9\u65e0\u5173\u3002\n\n\u5177\u4f53\u600e\u4e48\u5b9e\u73b0\u5462\uff1f\u60f3\u5230dfs\u5904\u7406\uff0c\u663e\u7136\u5728\u904d\u5386\u8fc7$x$\u540e\u4f1a\u56de\u6eaf\u5230$x$\u7684$k$\u8f88\u7956\u5148\uff0c\u56e0\u6b64\u6709\u4e00\u4e2a\u60f3\u6cd5\uff0c\u5c31\u662f\u5728\u56de\u6eaf\u5230$x$\u7684$k$\u8f88\u7956\u5148\u65f6\u6267\u884c\u67e5\u8be2\u5bf9\u5e94\u7684\u67e5\u8be2\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u6837\u662f\u4e00\u4e2a\u79bb\u7ebf\u7684\u505a\u6cd5\u3002\u76ee\u524d\u7684\u95ee\u9898\u5c31\u662f\uff0c\u5982\u4f55\u80fd\u5728$x$\u7684$k$\u8f88\u7956\u5148\u65f6\u6267\u884c\u67e5\u8be2\u3002\n\n\u6709\u4e00\u4e2a\u505a\u6cd5\u5c31\u662f\u63d0\u524d\u5904\u7406\u51fa$x$\u7684\u7956\u5148\uff0c\u7136\u540e\u628a\u8be2\u95ee\u63d2\u5165\u5230$x$\u7684$k$\u8f88\u7956\u5148\u5904\uff0c\u7b49\u5230\u56de\u6eaf\u5230\u7684\u65f6\u5019\u8fdb\u884c\u67e5\u8be2\uff1b\u53e6\u4e00\u79cd\u5c31\u662f\u4e00\u79cd\u6bd4\u8f83\u5947\u5947\u602a\u602a\u7684\u505a\u6cd5\uff0c\u5229\u7528\u5927\u6839\u5806\u7ef4\u62a4\u8be2\u95ee\uff0c\u628a\u7956\u5148\u8282\u70b9\u7684\u6df1\u5ea6\u4f5c\u4e3a\u5173\u952e\u5b57\uff0c\u5f53\u904d\u5386\u5230\u4e00\u4e2a\u8282\u70b9\u65f6\uff0c\u5904\u7406\u6df1\u5ea6\u76f8\u540c\u7684\u8be2\u95ee\u3002\u5177\u4f53\u8be2\u95ee\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u5c31\u53ef\u4ee5\u5904\u7406\u4e86\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u53ef\u4ee5\u4f18\u5316\u7684\u5730\u65b9\uff0c\u5982\u679c\u6709\u7956\u5148\u8282\u70b9\u548c\u67e5\u8be2\u8282\u70b9\u7684\u6df1\u5ea6\u90fd\u76f8\u540c\u7684\u8be2\u95ee\uff0c\u7b54\u6848\u76f8\u540c\uff0c\u4e0d\u9700\u8981\u91cd\u590d\u67e5\u8be2\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<queue>\nusing namespace std;\nconst int N=1e5+100;\nstruct Seg\n{\n\tint lson,rson,sum;\n\t#define lson(i) t[i].lson\n\t#define rson(i) t[i].rson\n\t#define sum(i) t[i].sum\n}t[5000000];\nstruct Que\n{\n\tint fa,son,id;//\u7956\u5148\u6df1\u5ea6\uff0c\u67e5\u8be2\u8282\u70b9\u6df1\u5ea6\uff0c\u8be2\u95ee\u7f16\u53f7\n};\nint n,m,tot,cnt;\nint head[N],ver[N],Next[N];\nint r[N],ans[N];\nbool v[N];\npriority_queue<Que> q;//\u7ef4\u62a4\u8be2\u95ee\nvector<pair<int,int> > query[N];//\u5b58\u50a8\u8be2\u95ee\nbool operator<(const Que &a,const Que &b)\n{\n\treturn a.fa==b.fa?a.son<b.son:a.fa<b.fa;//\u6ce8\u610f\u662f\u5c0f\u4e8e\u53f7\n}//\u5927\u6839\u5806\nvoid add(int x,int y)\n{\n\tver[++tot]=y,Next[tot]=head[x],head[x]=tot;\n}\nint merge(int x,int y)\n{\n\tif(!x)\n\t\treturn y;\n\tif(!y)\n\t\treturn x;\n\tsum(x)+=sum(y);\n\tlson(x)=merge(lson(x),lson(y));\n\trson(x)=merge(rson(x),rson(y));\n\treturn x;\n}//\u7ebf\u6bb5\u6811\u5408\u5e76\nint ask(int &p,int l,int r,int k)\n{\n\tif(!p)\n\t\tp=++cnt;\n\tif(l==r)\n\t\treturn sum(p);\n\tint mid=(l+r)>>1;\n\tif(k<=mid)\n\t\treturn ask(lson(p),l,mid,k);\n\telse\n\t\treturn ask(rson(p),mid+1,r,k);\n}//\u67e5\u8be2\nvoid change(int &p,int l,int r,int k)\n{\n\tif(!p)\n\t\tp=++cnt;\n\tif(l==r)\n\t{\n\t\tsum(p)++;\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tif(k<=mid)\n\t\tchange(lson(p),l,mid,k);\n\telse\n\t\tchange(rson(p),mid+1,r,k);\n}//\u4fee\u6539\nvoid solve(int x,int d)\n{\n\tv[x]=1;//\u8bbf\u95ee\u6570\u7ec4\n\tfor(int i=head[x];i;i=Next[i])\n\t{\n\t\tint y=ver[i];\n\t\tsolve(y,d+1);\n\t\tr[x]=merge(r[x],r[y]);//\u5b50\u8282\u70b9\u5408\u5e76\n\t}\n\twhile(q.size() && q.top().fa==d)//\u5904\u7406\u6df1\u5ea6\u76f8\u540c\u7684\u8be2\u95ee\n\t{\n\t\tint y=q.top().son,id=q.top().id;q.pop();\n\t\tans[id]=ask(r[x],1,1e5,y)-1;//\u67e5\u8be2\n\t\twhile(q.size() && q.top().fa==d && q.top().son==y)\n\t\t{\n\t\t\tans[q.top().id]=ans[id];\n\t\t\tq.pop();\n\t\t}//\u8be2\u95ee\u7b49\u4ef7\u4e0d\u7528\u91cd\u590d\u67e5\u8be2\n\t}\n\tchange(r[x],1,1e5,d);//\u4fee\u6539\n\tfor(int i=0;i<query[x].size();i++)\n\t\tif(d-query[x][i].first>0)//\u4fdd\u8bc1\u8be2\u95ee\u5408\u6cd5\n\t\t{\n\t\t\tQue now;\n\t\t\tnow.fa=d-query[x][i].first;\n\t\t\tnow.son=d;\n\t\t\tnow.id=query[x][i].second;\n\t\t\tq.push(now);\n\t\t}//\u5c06\u8be2\u95ee\u63d2\u5165\u5927\u6839\u5806\n}\nint main()\n{\n\tscanf(\"%d\",&n);cnt=n;\n\tfor(int i=1,x;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&x);r[i]=i;\n\t\tif(x)\n\t\t\tadd(x,i);\n\t}\n\tscanf(\"%d\",&m);\n\tfor(int i=1,x,y;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tquery[x].push_back(make_pair(y,i));//\u63d2\u5165\u8be2\u95ee\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(!v[i])\n\t\t\tsolve(i,1);\n\tfor(int i=1;i<=m;i++)\n\t\tprintf(\"%d \",ans[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1590588664,
        "uid": 91534,
        "name": "TEoS",
        "ccfLevel": 6,
        "title": "CF208E Blood Cousins"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF208E)\n\n\u7ed9\u4f60\u4e00\u7247\u68ee\u6797\uff0c\u6bcf\u6b21\u8be2\u95ee\u4e00\u4e2a\u70b9\u4e0e\u591a\u5c11\u4e2a\u70b9\u62e5\u6709\u5171\u540c\u7684 $k$ \u7ea7\u7956\u5148\u3002\n\n\u9996\u5148\u6211\u4eec\u6765\u8f6c\u5316\u4e00\u4e0b\u9898\u610f\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8be2\u95ee\u53d8\u4e3a\u8be2\u95ee\u4e00\u4e2a\u70b9\u7684 $k$ \u7ea7\u7956\u5148\u6240\u5728\u5b50\u6811\u5185\u79bb\u8be5\u7956\u5148\u8ddd\u79bb\u4e3a $k$ \u7684\u7ed3\u70b9\u4e2a\u6570\uff0c\u6700\u540e\u5c06\u7b54\u6848\u51cf\u4e00\u3002\n\n\u5230\u8fd9\u91cc\u5c31\u53ef\u4ee5\u7528 dsu on tree \u6c42\u89e3\u4e86\uff0c\u6211\u4eec\u5c06\u8be2\u95ee\u4e2d\u7684\u70b9\u500d\u589e\u6c42 $k$ \u7ea7\u7956\u5148\uff0c\u5c06\u8be2\u95ee\u79bb\u7ebf\u4e0b\u6765\u5c31\u53ef\u4ee5\u4e86\u3002\n\n### Code\uff1a\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<vector>\nusing namespace std;\ntemplate <typename T>\ninline void read(T& r) {\n\tr=0;bool w=0; \n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9') w=ch=='-'?1:0,ch=getchar();\n\twhile(ch>='0'&&ch<='9') r=(r<<3)+(r<<1)+(ch^48), ch=getchar();\n\tr=w?-r:r;\t\n}\n\nconst int N=1e5+10;\n\nint n,m,fa[N],cnt[N];\nvector<int>e[N];\nint anc[N][20],size[N],son[N],dep[N],flag;\nstruct node{\n\tint id,kth;\n\tnode(int i,int k):id(i),kth(k){}\n};\nvector<node>q[N];int ans[N];\n\nvoid dfs1(int u,int fa){\n\tdep[u]=dep[fa]+1,anc[u][0]=fa;size[u]=1;\n\tfor(int i=1;i<=17;++i)anc[u][i]=anc[anc[u][i-1]][i-1];\n\tfor(int v:e[u]){\n\t\tdfs1(v,u);\n\t\tsize[u]+=size[v];\n\t\tif(size[v]>size[son[u]])son[u]=v;\n\t}\n}\nvoid calc(int u,int rtdep,bool type){\n\ttype?++cnt[dep[u]]:cnt[dep[u]]=0;\n\tfor(int v:e[u])if(v^flag)calc(v,rtdep,type);\n}\nvoid dfs2(int u,bool keep){\n\tfor(int v:e[u])if(v^son[u])dfs2(v,0);\n\tif(son[u])dfs2(son[u],1);\n\tflag=son[u];calc(u,dep[u],1);flag=0;\n\tfor(node qwq:q[u])ans[qwq.id]=cnt[dep[u]+qwq.kth];\n\tif(!keep)calc(u,dep[u],0);\n}\nint getkth(int u,int k){\n\tfor(int i=17;~i;--i)if((1<<i)<=k)u=anc[u][i],k-=1<<i;\n\treturn u;\n}\n\nint main(){\n\t#ifdef LOCAL\n\t\tfreopen(\"std.in\",\"r\",stdin);\n\t\tfreopen(\"my.out\",\"w\",stdout);\n\t#endif\n\tread(n);\n\tfor(int i=1,x;i<=n;++i){\n\t\tread(x);fa[i]=x;\n\t\tif(x)e[x].push_back(i);\n\t}\n\tfor(int i=1;i<=n;++i)if(!fa[i])dfs1(i,0);\n\tread(m);\n\tfor(int i=1,u,k;i<=m;++i){\n\t\tread(u),read(k);\n\t\tq[getkth(u,k)].push_back(node(i,k));\n\t}\n\tfor(int i=1;i<=n;++i)if(!fa[i])dfs2(i,0);\n\tfor(int i=1;i<=m;++i)printf(\"%d \",max(ans[i]-1,0));\n\treturn 0;\n}\n```\n",
        "postTime": 1629197796,
        "uid": 339846,
        "name": "RuntimeErr",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF208E Blood Cousins"
    },
    {
        "content": "[\u9898\u9762](https://www.luogu.org/problemnew/show/CF208E)\n\ndsu on tree.\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee\uff0c\u76f4\u63a5\u500d\u589e\u6c42\u51fa\u5b83\u7684\u7b2c$k$\u7ea7\u7684\u7956\u5148\u3002\u7136\u540e\u904d\u5386\u4e00\u904d\u68ee\u6797\uff0c\u53ea\u8981\u7edf\u8ba1\u6df1\u5ea6\u76f8\u540c\u7684\u70b9\u7684\u4e2a\u6570\u5c31\u597d\u4e86\u3002\n\ncode:\n```\n//2018.10.25 by ljz\n#include<bits/stdc++.h>\nusing namespace std;\n#define res register int\n#define LL long long\n#define inf 0x3f3f3f3f\n#define eps 1e-15\ninline int read(){\n    res s=0;\n    bool w=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')w=1;ch=getchar();}\n    while(ch>='0'&&ch<='9')s=s*10+ch-'0',ch=getchar();\n    return w?-s:s;\n}\ninline void _swap(res &x,res &y){\n    x^=y^=x^=y;\n}\ninline int _abs(const res &x){\n    return x>0?x:-x;\n}\ninline int _max(const res &x,const res &y){\n    return x>y?x:y;\n}\ninline int _min(const res &x,const res &y){\n    return x<y?x:y;\n}\nconst int N=1e5+10;\nnamespace MAIN{\n\tint n;\n\tint rt[N],rtx;\n\tstruct E{\n\t\tint next,to;\n\t\tE() {}\n\t\tE(res next,res to):next(next),to(to) {}\n\t}edge[N];\n\tint head[N],cnt;\n\tinline void addedge(const res &u,const res &v){\n\t\tedge[++cnt]=E(head[u],v),head[u]=cnt;\n\t}\n\tint dep[N],F[N][21],siz[N],fa[N],son[N];\n\tvoid Dfs(const res &x,const res &fax,const res &depx){\n\t\tdep[x]=depx,fa[x]=fax,F[x][0]=fax,siz[x]=1;\n\t\tfor(res i=1;i<=20;i++)F[x][i]=F[F[x][i-1]][i-1];\n\t\tfor(res i=head[x];~i;i=edge[i].next){\n\t\t\tres tox=edge[i].to;\n\t\t\tif(tox==fax)continue;\n\t\t\tDfs(tox,x,depx+1);\n\t\t\tsiz[x]+=siz[tox];\n\t\t\tif(siz[son[x]]<siz[tox])son[x]=tox;\n\t\t}\n\t}\n\ttypedef pair<int,int> Pair;\n#define mp make_pair\t\n#define fi first\n#define se second\n\tvector<Pair> vec[N];\n#define pb push_back\t\n\tint m;\n\tint tot[N],ans[N];\n\tbool vis[N];\n\tvoid update(const res &x,const res &va){\n\t\ttot[dep[x]]+=va;\n\t\tfor(res i=head[x];~i;i=edge[i].next){\n\t\t\tres tox=edge[i].to;\n\t\t\tif(tox==fa[x]||vis[tox])continue;\n\t\t\tupdate(tox,va);\n\t\t}\n\t}\n\tvoid dfs(const res &x,const res &flag){\n\t\tfor(res i=head[x];~i;i=edge[i].next){\n\t\t\tres tox=edge[i].to;\n\t\t\tif(tox==fa[x]||tox==son[x])continue;\n\t\t\tdfs(tox,0);\n\t\t}\n\t\tif(son[x])dfs(son[x],1),vis[son[x]]=1;\n\t\tupdate(x,1);for(res i=0,siz=vec[x].size();i<siz;i++)ans[vec[x][i].fi]=tot[vec[x][i].se]-1;vis[son[x]]=0;\n\t\tif(!flag)update(x,-1);\n\t}\n\tinline void MAIN(){\n\t\tmemset(head,-1,sizeof(head));\n\t\tn=read();\n\t\tfor(res i=1;i<=n;i++){\n\t\t\tres fa=read();\n\t\t\tif(!fa)rt[++rtx]=i;\n\t\t\telse addedge(fa,i);\n\t\t}\n\t\tfor(res i=1;i<=rtx;i++)Dfs(rt[i],0,1);\n\t\tm=read();\n\t\tfor(res t=1;t<=m;t++){\n\t\t\tres x=read(),k=read(),d=dep[x];\n\t\t\tfor(res i=20;~i;i--)if(k&(1<<i))x=F[x][i];\n\t\t\tvec[x].pb(mp(t,d));\n\t\t}\n\t\tfor(res i=1;i<=rtx;i++)dfs(rt[i],0);\n\t\tfor(res i=1;i<=m;i++)printf(\"%d \",ans[i]);\n\t}\n}\nint main(){\n    MAIN::MAIN();\n    return 0;\n}\n```",
        "postTime": 1540472464,
        "uid": 32878,
        "name": "foreverlasting",
        "ccfLevel": 7,
        "title": "\u3010CF208E\u3011Blood Cousins"
    },
    {
        "content": "### P.S.\n\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e2a DSU \uff08\u4e0d\u662f\u5e76\u67e5\u96c6\uff09\u7684\u505a\u6cd5\u3002  \n\u867d\u7136\u597d\u50cf\u88ab\u91cd\u5256\u540a\u6253\uff0c\u4e0d\u8fc7\u597d\u50cf\u9002\u7528\u6027\u5e7f\uff1f  \n### Problem.\n\u6c42\u4e00\u4e2a\u70b9\u7684\u5b50\u6811\u4e2d\u6709\u591a\u5c11\u4e2a dep \u4e3a\u7ed9\u5b9a\u503c\u7684\u8282\u70b9\u3002  \n\uff08\u4f60\u76f4\u63a5\u627e\u5230\u8be2\u95ee\u7684 K \u7ea7\u7956\u5148\uff0c\u518d\u628a\u7b54\u6848\u51cf\u4e00\u5c31\u597d\u4e86\u3002  \n~~\u4e0d\u8fc7\u5982\u679c\u60a8\u770b\u5230\u8fd9\u4e2a\u7b80\u5316\u9898\u610f\u60a8\u5e94\u8be5\u5df2\u7ecf\u5207\u6389\u4e86~~\n### Solution.\n\u663e\u7136\u53ef\u4ee5\u957f\u5256\uff0c\u4e0d\u8fc7\u7b14\u8005\u5df2\u7ecf\u57fa\u672c\u5fd8\u5149\u4e86\u3002  \n\u6240\u4ee5\u7b14\u8005\u5199\u4e86\u6bd4\u957f\u5256\u591a\u53ea log \u7684\u6811\u4e0a\u6309\u79e9\u5408\u5e76\u3002  \n\u5982\u679c\u4f60\u4e0d\u4f1a DSU\uff0c\u5b89\u5229\u4e00\u4e0b\u7b14\u8005\u7684[\u603b\u7ed3](https://www.luogu.com.cn/blog/daniu/chang-lian-pou-fen)  \n\u7136\u540e\u4f60\u5c31\u53d1\u73b0\u8fd9\u9898\u505a\u5b8c\u4e86\uff08\uff08\uff08  \n\u6bd4\u6a21\u677f\u8fd8\u6a21\u677f\u7684 DSU\uff08\uff08\uff08  \n\u6ce8\u610f\u4e00\u4e9b\u7ec6\u8282\uff0c\u5df2\u7ecf\u6807\u5728\u4ee3\u7801\u4e2d\u4e86\u3002\uff08\u53ef\u4ee5 Ctrl+F Mark  \n\u5982\u679c\u770b\u4e0d\u61c2\u8fd8\u6709\u6ce8\u91ca\uff0c\u7528\u7684\u500d\u589e\u6c42 K \u7ea7\u7956\u5148\u3002  \n### Coding.\n```cpp\n//\u613f\u4f60\u548c\u4f60\u91cd\u8981\u7684\u4eba\u80fd\u591f\u91cd\u9022\uff01\n#include<bits/stdc++.h>\nusing namespace std;typedef long long ll;\ntemplate<typename T>inline void read(T &x)\n{\n\tx=0;char c=getchar(),f=0;\n\tfor(;c<'0'||c>'9';c=getchar()) if(!(c^45)) f=1;\n\tfor(;c>='0'&&c<='9';c=getchar()) x=(x<<1)+(x<<3)+(c^48);\n\tf?x=-x,1:1;\n}\nstruct edge{int to,nxt;}e[200005];int et,head[100005],f[100005][20],dep[100005],dfn[100005],dt;\nint Q,n,T[100005],rs[100005],sz[100005],sn[100005];vector<pair<int,int> >p[100005];char avd[100005];\ninline void adde(int x,int y) {e[++et]=(edge){y,head[x]},head[x]=et;}\ninline void dfs0(int x,int fa)\n{//\u521d\u59cb\u5316\uff0c\u9884\u5904\u7406\u500d\u589e\u6570\u7ec4/\u6df1\u5ea6/\u6bcf\u4e2a\u7ed3\u70b9\u7684\u91cd\u513f\u5b50\n\tf[x][0]=fa,dep[x]=dep[fa]+1,sz[x]=1,dfn[x]=++dt;\n\tfor(int i=1;i<20;i++) f[x][i]=f[f[x][i-1]][i-1];\n\tfor(int i=head[x];i;i=e[i].nxt)\n\t{\n\t\tdfs0(e[i].to,x),sz[x]+=sz[e[i].to];\n\t\tif(sz[e[i].to]>=sz[sn[x]]) sn[x]=e[i].to;\n\t}\n}\ninline int getk(int x,int k) {for(int i=0;i<20;i++) if((k>>i)&1) x=f[x][i];return x;}\n//\u6c42 K \u7ea7\u7956\u5148\uff08\u53cd\u6b63\u603b\u590d\u6742\u5ea6\u4e00\u76f4log\uff0c\u5c31\u4e0d\u5199 O(n) \u4e86\uff08\uff08\uff08\ninline void baoli(int x,int tg) {T[dep[x]]+=tg;for(int i=head[x];i;i=e[i].nxt) if(!avd[e[i].to]) baoli(e[i].to,tg);}\n//\u66b4\u529b\u52a0\u4e0a/\u51cf\u53bb\u8d21\u732e\uff0c\u5bf9\u4e8e\u8f7b\u513f\u5b50\u7684\u66b4\u529b\ninline void dfs1(int x,char isw)//is weight son?\n{\n\tfor(int i=head[x];i;i=e[i].nxt) if(e[i].to!=sn[x]) dfs1(e[i].to,0);\n\tif(sn[x]) dfs1(sn[x],1),avd[sn[x]]=1;else;baoli(x,1),avd[sn[x]]=0;\n\t//\u91cd\u513f\u5b50\u7684\u76f4\u63a5\u7ee7\u627f\u4fe1\u606f\n\t//printf(\"%d : \",x);for(int i=1;i<=n;i++) printf(\"%d%c\",T[i],i==n?'\\n':' ');\n\tfor(int i=0;i<(int)p[x].size();i++) rs[p[x][i].second]=T[p[x][i].first+dep[x]]-1;\n\t//Mark 1\uff0c\u7b54\u6848\u9700\u8981\u51cf\u4e00\uff0c\u56e0\u4e3a\u81ea\u5df1\u663e\u7136\u4e0d\u662f\u81ea\u5df1\u7684\u5802\u5f1f\uff08\n\tif(!isw) baoli(x,-1);//\u5982\u679c\u662f\u8f7b\u513f\u5b50\uff0c\u9700\u8981\u64a4\u9500\u8d21\u732e\n}\nint main()\n{\n\t//\u6211\u76f4\u63a5\u628a\u5168\u90e8\u70b9\u7684\u6807\u53f7++\uff0c\u8fd9\u68371\u53f7\u8282\u70b9\u662f\u4e00\u4e2a\u865a\u8282\u70b9\uff0c\u4e0d\u4ee3\u8868\u4efb\u4f55\u4eba\n\tread(n),++n;for(int i=2,x;i<=n;i++) read(x),adde(++x,i);\n\tdfs0(1,0),read(Q);for(int i=1,x,l;i<=Q;i++)\n\t{\n\t\tread(x),read(l);int fp=getk(++x,l);\n\t\tif(fp>1) p[fp].push_back(make_pair(l,i));\n\t\t//Mark 2\uff0c\u5982\u679c\u662f\u865a\u8282\u70b9\uff0c\u90a3\u5b83\u7684\u7b54\u6848\u4e5f\u5fc5\u987b\u4e3a0\n\t}\n\tdfs1(1,0);for(int i=1;i<=Q;i++) printf(\"%d%c\",rs[i],i==Q?'\\n':' ');\n\treturn 0;\n}\n```",
        "postTime": 1610159574,
        "uid": 44805,
        "name": "Leap_Frog",
        "ccfLevel": 7,
        "title": "CF208E Blood Cousins\uff08\u9898\u89e3\uff09"
    },
    {
        "content": "\u548c $u$ \u62e5\u6709\u5171\u540c\u7684 $k$ \u7ea7\u7956\u5148\u7684\u70b9\u6570\u5c31\u662f $u$ \u7684 $k$ \u7ea7\u7956\u5148\u7684 $k$ \u7ea7\u513f\u5b50\u7684\u6570\u91cf $-1$.\n\n\u518d\u8f6c\u6362\u4e00\u4e0b\u5c31\u662f\u4ee5 $u$ \u7684 $k$ \u7ea7\u7956\u5148\u4e3a\u6839\u7684\u5b50\u6811\u5185\u6df1\u5ea6\u4e3a $dep_u+k$ \u7684\u70b9\u7684\u4e2a\u6570$-1$\u3002\n\n\u7136\u540e\u7528 $cnt_d$ \u8868\u793a\u6df1\u5ea6\u4e3a $d$ \u7684\u70b9\u6570\uff0c\u76f4\u63a5 $\\text{dsu~on~tree}$ \u5373\u53ef\u3002\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <iostream>\nusing namespace std;\n\nconst int MAXN = 1e5 , MAXK = 20;\nint n , m , col[ MAXN + 5 ];\nstruct Query{ int id , dep; };\nvector< Query > Qry[ MAXN + 5 ];\nvector< int > Graph[ MAXN + 5 ];\n\nint dep[ MAXN + 5 ] , Size[ MAXN + 5 ] , Son[ MAXN + 5 ];\nint Anc[ MAXN + 5 ][ MAXK + 5 ];\nvoid dfs1( int u , int fa ) {\n\tdep[ u ] = dep[ fa ] + 1 , Size[ u ] = 1;\n\tAnc[ u ][ 0 ] = fa;\n\tfor( int i = 1 ; i <= MAXK ; i ++ ) Anc[ u ][ i ] = Anc[ Anc[ u ][ i - 1 ] ][ i - 1 ];\n\tfor( int i = 0 ; i < Graph[ u ].size() ; i ++ ) {\n\t\tint v = Graph[ u ][ i ];\n\t\tif( v == fa ) continue;\n\t\tdfs1( v , u ); Size[ u ] += Size[ v ];\n\t\tif( Size[ Son[ u ] ] < Size[ v ] ) Son[ u ] = v;\n\t}\n}\n\nint Cnt[ MAXN + 5 ];\nint Ans[ MAXN + 5 ] , Sonu;\nvoid Count( int u , int fa , int val ) {\n\tCnt[ dep[ u ] ] += val;\n\t\n\tfor( int i = 0 ; i < Graph[ u ].size() ; i ++ ) {\n\t\tint v = Graph[ u ][ i ];\n\t\tif( v == fa || v == Sonu ) continue;\n\t\tCount( v , u , val );\n\t} \n}\nbool vis[ MAXN + 5 ];\nvoid dfs2( int u , int fa , bool is_hs ) {\n\tvis[ u ] = 1;\n\tfor( int i = 0 ; i < Graph[ u ].size() ; i ++ ) {\n\t\tint v = Graph[ u ][ i ];\n\t\tif( v == fa || v == Son[ u ] ) continue;\n\t\tdfs2( v , u , 0 );\n\t}\n\tif( Son[ u ] ) dfs2( Son[ u ] , u , 1 );\n\tSonu = Son[ u ]; Count( u , fa , 1 ); Sonu = 0;\n\tfor( int i = 0 ; i < Qry[ u ].size() ; i ++ ) Ans[ Qry[ u ][ i ].id ] = Cnt[ dep[ u ] + Qry[ u ][ i ].dep ] - 1;\n\tif( !is_hs ) Count( u , fa , -1 );\n}\n\nint main( ) {\n\tscanf(\"%d\",&n);\n\tfor( int i = 1 , fa ; i <= n ; i ++ ) {\n\t\tscanf(\"%d\",&fa);\n\t\tGraph[ fa ].push_back( i );\n\t}\n\t\n\tfor( int i = 1 ; i <= n ; i ++ )\n\t\tif( !dep[ i ] ) dfs1( i , 0 );\n\t\n\tscanf(\"%d\",&m);\n\tfor( int i = 1 , rt , k ; i <= m ; i ++ ) {\n\t\tscanf(\"%d %d\",&rt,&k);\n\t\tfor( int i = 0 ; i <= MAXK ; i ++ ) if( ( k >> i ) & 1 ) rt = Anc[ rt ][ i ];\n\t\tQry[ rt ].push_back( { i , k } );\n\t}\n\t\n\tfor( int i = 1 ; i <= n ; i ++ )\n\t\tif( !vis[ i ] ) dfs2( i , 0 , 0 );\n\t\n\tfor( int i = 1 ; i <= m ; i ++ )\n\t\tprintf(\"%d \", Ans[ i ] );\n\treturn 0;\n} \n```\n\n\u518d\u8bf4\u8bf4\u8fd9\u9053\u9898\u7684\u52a0\u5f3a\u7248 [P5384 [Cnoi2019]\u96ea\u677e\u679c\u6811](https://www.luogu.com.cn/problem/P5384)\u3002\n\n\u51fa\u9898\u4eba\u5361\u4e86\u7a7a\u95f4\uff0c\u6b63\u5e38\u5199\u6cd5\u53ea\u6709 40 pts\u3002\n\n\u9996\u5148\u500d\u589e\u6570\u7ec4\u592a\u5360\u7a7a\u95f4\uff0c\u8003\u8651\u79bb\u7ebf\u6c42\u51fa $k$ \u7ea7\u7956\u5148\u3002\n\n$\\text{dfs}$ \u65f6\u53ef\u4ee5\u7528\u6808\u7ef4\u62a4\u6839\u5230\u5f53\u524d\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u7684\u70b9\u3002\n\n\u90a3\u4e48\u5b83\u7684 $k$ \u7ea7\u7956\u5148\u5c31\u5e94\u8be5\u662f\u6808\u4e2d\u7684\u7b2c $k+1$ \u4e2a\u5143\u7d20\u3002\n\n~~\u7136\u540e\u4f60\u5c31\u591a\u5f97\u4e86 4 pts \u4e86\u3002~~\n\n\u5c06 $\\text{vector}$ \u6539\u6210\u94fe\u8868\uff0c\u518d\u5361\u5361\u5e38\u5c31\u53ef\u4ee5\u8fc7\u4e86\u3002\n\n~~\u867d\u7136\u6b63\u89e3\u662f\u957f\u94fe\u5256\u5206~~\n",
        "postTime": 1599487455,
        "uid": 123802,
        "name": "chihik",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF208E \u3010Blood Cousins\u3011"
    },
    {
        "content": "\u4e2a\u4eba\u611f\u89c9\u8fd9\u9053\u9898\u8fd8\u662f\u6709\u70b9\u7a0d\u96be\u7684\u3002  \n\u4e3b\u8981\u662f\u5f80\u79bb\u7ebf\u8fd9\u65b9\u9762\u60f3\u2026\u2026  \n\u9996\u5148\u6211\u4eec\u53d1\u73b0\u8fd9\u9053\u9898\u76f4\u63a5\u67e5\u8be2\u5f88\u96be\u5904\u7406\uff0c\u4e8e\u662f\u521a\u5f00\u59cb\u6211\u5c31\u5361\u5728\u600e\u4e48\u67e5\u8be2\uff0c\u7136\u540e\u60f3\u4e86\u4e00\u4f1a\u513f\u2026\u2026  \n\u4e0d\u4e45\u5c31\u53d1\u73b0\u5f53\u6211\u4eec\u77e5\u9053\u4e00\u4e2a\u70b9\u77e5\u9053\u5b83\u8ddd\u7956\u5148\u7684\u8ddd\u79bb\u4e0d\u4e45\u53ef\u4ee5\u7b97\u51fa\u6765\u4ed6\u8981\u67e5\u8be2\u7684\u7956\u5148\u8282\u70b9\u662f\u8c01\u4e86\u5417\uff1f  \n\u4e8e\u662f\u8fd9\u9053\u9898\u5c31\u53d8\u5f97\u7b80\u5355\u8d77\u6765\u4e86\u3002  \n\u5f00\u4e00\u4e2a $cnt[x]$ \u6570\u7ec4\u8bb0\u5f55\u4e00\u4e0b\u5728\u5f53\u524d $DFS$ \u67e5\u8be2\u4e2d\u6df1\u5ea6\u4e3a $x$ \u7684\u8282\u70b9\u6709\u591a\u5c11\u4e2a\u3002  \n$add$\u51fd\u6570\u5c31\u6ca1\u4ec0\u4e48\u597d\u53c2\u8003\u7684\u4e86\uff1a  \n```cpp\nvoid Add(int x,int val)\n{\n\tcnt[dep[x]] += val;\n\tfor(int e = head[x] ; e ; e = edge[e].next)\n\t{\n\t\tint to = edge[e].to;\n\t\tif(to == Son) continue;\n\t\tAdd(to , val);\n\t}\n}\n```\n $dfs1$ \u5c31\u5728\u4e2d\u95f4\u8dd1\u4e00\u4e0b\u500d\u589eLCA\uff0c\u5176\u4f59\u7684\u4e5f\u662f\u677f\u5b50\u3002  \n\u56e0\u4e3a\u4e4b\u524d\u7684\u5de5\u4f5c\u90fd\u505a\u597d\u4e86\uff0c $dfs2$ \u4e5f\u53ef\u4ee5\u76f4\u63a5\u8dd1\u3002  \n\u6240\u4ee5\u8fd9\u9053\u9898\u53ea\u8981\u79bb\u7ebf\u628a\u6bcf\u4e2a\u8be2\u95ee~~\u722c\u6811~~\u5904\u7406\u4e00\u4e0b\u5373\u53ef\uff0c\u4e5f\u4e0d\u662f\u7279\u522b\u6076\u5fc3\u3002  \n\u7531\u4e8e\u539f\u56fe\u662f\u68ee\u6797\uff0c\u6211\u4eec\u5c31\u987a\u4fbf\u9884\u5904\u7406\u4e00\u6ce2\u6240\u6709\u7684 $root$ \u5c31\u53ef\u4ee5\u4e86\u3002(\u627e $fa \u4e3a 0 \u7684\u70b9$ )  \n\u4e8e\u662f\u8fd9\u9053\u9898\u5c31\u5b8c\u4e86\u2026\u2026  \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<vector>\nusing namespace std;\nconst int Len = 1e5 + 5;\nint n,m,head[Len],cnts,cnt[Len << 2],dep[Len],siz[Len],son[Len],dp[Len][30],Son,ans[Len];\nbool vis[Len];\nvector<int> root;\nstruct node\n{\n\tint next,to;\n}edge[Len << 1];\nvoid add(int from,int to)\n{\n\tedge[++ cnts].to = to;\n\tedge[cnts].next = head[from];\n\thead[from] = cnts;\n}\nstruct Node\n{\n\tint depth,idx;\n};\nvector<Node> G[Len];\nvoid Add(int x,int val)\n{\n\tcnt[dep[x]] += val;\n\tfor(int e = head[x] ; e ; e = edge[e].next)\n\t{\n\t\tint to = edge[e].to;\n\t\tif(to == Son) continue;\n\t\tAdd(to , val);\n\t}\n}\nvoid dfs1(int x,int f)\n{\n\tdep[x] = dep[f] + 1;\n\tsiz[x] = 1;\n\tdp[x][0] =  f;\n\tvis[x] = true;\n\tint maxson = -1;\n\tfor(int i = 1 ; (1 << i) <= dep[x] ; i ++) dp[x][i] = dp[dp[x][i - 1]][i - 1];\n\tfor(int e = head[x] ; e ; e = edge[e].next)\n\t{\n\t\tint to = edge[e].to;\n\t\tdfs1(to , x);\n\t\tsiz[x] += siz[to];\n\t\tif(maxson < siz[to]) maxson = siz[to] , son[x] = to;\n\t}\n}\nint Find(int x,int k)//\u722c\u6811 \n{\n\tfor(int i = 20 ; i >= 0 ; i --) if((1 << i) <= k) k -= (1 << i) , x = dp[x][i];\n\treturn x;\n}\nvoid dfs2(int x,int f,int opt)\n{\n\tfor(int e = head[x] ; e ; e = edge[e].next)\n\t{\n\t\tint to = edge[e].to;\n\t\tif(to == son[x]) continue;\n\t\tdfs2(to , x , 0);\n\t}\t\n\tif(son[x]) dfs2(son[x] , x , 1) , Son = son[x];\n\tAdd(x , 1) , Son = 0;\n\tfor(int e = 0 ; e < G[x].size() ; e ++) ans[G[x][e].idx] = cnt[dep[x] + G[x][e].depth] - 1;\n\tif(!opt) Add(x , -1);\n} \nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i = 1 ; i <= n ; i ++)\n\t{\n\t\tint x;\n\t\tscanf(\"%d\",&x);\n\t\tif(x == 0) root.push_back(i);\n\t\telse add(x , i);\n\t}\n\tfor(int i = 0 ; i < root.size() ; i ++) dfs1(root[i] , 0);\n\tscanf(\"%d\",&m);\n\tfor(int i = 1 ; i <= m ; i ++)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d %d\",&x,&y);\n\t\tint Fa = Find(x , y);\n\t\tif(Fa == 0) ans[i] = 0;\n\t\telse \n\t\t{\n\t\t\tNode opt;\n\t\t\topt.depth = y , opt.idx = i;\n\t\t\tG[Fa].push_back(opt);\n\t\t}\n\t}\n\tfor(int i = 0 ; i < root.size() ; i ++) dfs2(root[i] , 0 , 0);\n\tfor(int i = 1 ; i <= m ; i ++) printf(\"%d \",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1599485843,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF208E \u3010Blood Cousins\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\u7ed9\u5b9a\u4e00\u4e2a $n$ \u4e2a\u70b9\u7684\u68ee\u6797\uff0c\u6bcf\u6b21\u8be2\u95ee\u4e0e\u70b9 $x$ \u6709\u540c\u4e00\u4e2a $k$ \u7ea7\u7956\u5148\u7684\u70b9\u4e2a\u6570\n\n\u5c06\u8be2\u95ee\u79bb\u7ebf\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\uff0c\u663e\u7136\u53ef\u4ee5\u8f6c\u5316\u4e3a $x$ \u7684 $k$ \u7ea7\u7956\u5148\u7684\u5b50\u6811\u4e2d\u6df1\u5ea6\u4e0e $x$ \u76f8\u540c\u7684\u70b9\u4e2a\u6570\uff0c\u7edf\u8ba1\u5b50\u6811\u5185\u7b54\u6848\u663e\u7136\u53ef\u4ee5\u6811\u4e0a\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u52a0\u4e0a\u4e00\u5f00\u59cb\u8df3\u7956\u5148\u65f6\u7684\u500d\u589e\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(nlogn)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(nlogn)$\n\n```cpp\n/*  Never Island  */\n/*deco loves Chino*/\n#include <bits/stdc++.h>\nusing namespace std;\nint n,f[100010][20],dep[100010],vis[100010],lg2[100010],q;\nvector<int> vc[100010],Q[100010],ans[100010];\nint belong[100010],top[100010],sum[100010],siz[100010],son[100010];\nvoid dfs(int u)\n{\n\tsiz[u]=1;\n\tfor(int i=0;i<vc[u].size();i++)\n\t{\n\t\tint v=vc[u][i];\n\t\tdep[v]=dep[u]+1;\n\t\tdfs(v);\n\t\tsiz[u]+=siz[v];\n\t\tif(siz[v]>siz[son[u]])\n\t\t{\n\t\t\tson[u]=v;\n\t\t}\n\t}\n}\nvoid calc(int u,int fa,int c)\n{\n\tsum[dep[u]]+=c;\n\tfor(int i=0;i<vc[u].size();i++)\n\t{\n\t\tint v=vc[u][i];\n\t\tif(vis[v])\n\t\t{\n\t\t\tcontinue; \n\t\t} \n\t\tcalc(v,u,c);\n\t}\n}\n/*\u542f\u53d1\u5f0f\u5408\u5e76*/\nvoid gans(int u,int fa,int keep)\n{\n\tfor(int i=0;i<vc[u].size();i++)\n\t{\n\t\tint v=vc[u][i];\n\t\tif(v==son[u])\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tgans(v,u,0);//do not keep the answer\n\t}\n\tif(son[u])\n\t{\n\t\tgans(son[u],u,1);\n\t\tvis[son[u]]=1;\n\t}\n\tcalc(u,fa,1);\n\tif(son[u])\n\t{\n\t\tvis[son[u]]=0;\n\t}\n\tfor(int i=0;i<Q[u].size();i++)\n\t{\n\t\tans[u].push_back(sum[Q[u][i]]);\n\t}\n\tif(!keep)\n\t{\n\t\tcalc(u,fa,-1);//clear\n\t}\n}\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&f[i][0]);\n\t\tvc[f[i][0]].push_back(i);\n\t}\n\tfor(int i=1;i<=18;i++)\n\t{\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tf[j][i]=f[f[j][i-1]][i-1];\n\t\t}\n\t}\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\tlg2[i]=lg2[i>>1]+1;\n\t}\n\tdfs(0);\n\tcin>>q;\n\tfor(int i=1;i<=q;i++)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tif(y>=dep[x])\n\t\t{\n\t\t\tbelong[i]=0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint qwq=dep[x];\n\t\t\twhile(y)\n\t\t\t{\n\t\t\t\tx=f[x][lg2[y]];\n\t\t\t\ty-=(1<<lg2[y]);\n\t\t\t}\n\t\t\tQ[x].push_back(qwq);\n\t\t\tbelong[i]=x;\n\t\t}\n\t}\n\tgans(0,-1,1);\n\tfor(int i=1;i<=q;i++)\n\t{\n\t\tif(belong[i]==0)\n\t\t{\n\t\t\tcout<<0<<\" \";\n\t\t\tcontinue;\n\t\t}\n\t\tcout<<ans[belong[i]][top[belong[i]]++]-1<<\" \";\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1578466244,
        "uid": 48265,
        "name": "decoqwq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF208E \u3010Blood Cousins\u3011"
    },
    {
        "content": "\u500d\u589e\u627e$k$\u7ea7\u7956\u5148+~~dsu on tree~~\u9759\u6001\u94fe\u5206\u6cbb\n\n\u8bbe\u5f53\u524d\u8282\u70b9\u4e3a$x$\n\n\u5982\u679c$d_x < k$,\u90a3\u4e48\u7b54\u6848\u5f53\u7136\u4e3a$0$\n\u53ef\u4ee5\u627e\u5230\u7b2c$k$\u7ea7\u7956\u5148\uff0c\u7136\u540e\u5728$k$\u7ea7\u7956\u5148\u4e0a\u6dfb\u52a0\u4e00\u7ec4\u8be2\u95ee(\u6c42\u5b83\u5b50\u6811\u4e2d\u6df1\u5ea6\u4e3a$d_x$\u7684\u8282\u70b9\u6570)\n\n\u56e0\u4e3a\u8fd9\u4e2a\u8fd8\u7b97\u4e0a\u4e86$x$\u672c\u8eab\uff0c\u6240\u4ee5\u628a\u7ed3\u679c-1\u5c31\u662f\u7b54\u6848\u4e86\n\n\u7edf\u8ba1\u533a\u95f4\u4e2d\u5404\u4e2a\u6df1\u5ea6\u7684\u70b9\u6709\u591a\u5c11\u4e2a\u5c31\u76f4\u63a5$tot[d_x]+=(1\\text{\u6216}-1)$\u5c31\u53ef\u4ee5\u4e86\n\n\n\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#pragma GCC optimize(3)\n#define il inline\n#define rg register\n#define Fur(i,x,y) for(register int i=x;i<=y;++i)\n#define fl(i,x) for(register int i=head[x],to;to=e[i].to,i;i=e[i].nxt)\n#define clr(x,y) memset(x,y,sizeof(x))\n#define fin(s) freopen(s\".in\",\"r\",stdin)\n#define l2(n) ((int)(log2(n)))\nnamespace IO{const char* ln=\"\\n\";const int str=1<<20;struct IN{char buf[str],*s,*t;bool _;IN():s(buf),t(buf),_(0){}il char gc(){return s==t&&((t=(s=buf)+fread(buf,1,str,stdin))==s)?EOF:(*s++);}template<typename T>IN&operator>>(T&x){if(_)return *this;char c=gc();bool ff=0;while(c!=EOF&&(c<'0'||c>'9'))ff^=(c=='-'),c=gc();if(c==EOF){_=1;return *this;}x=0;while(c!=EOF&&'0'<=c&&c<='9')x=(x<<3)+(x<<1)+c-48,c=gc();if(c==EOF)_=1;if(ff)x=-x;return *this;}}in;struct OUT{char buf[str],*s,*t;OUT():s(buf),t(buf+str){}~OUT(){fwrite(buf,1,s-buf,stdout);}void pt(char c){(s==t)?(fwrite(s=buf,1,str,stdout),*s++=c):(*s++=c);}OUT&operator<<(const char*s){while(*s)pt(*s++);return *this;}template<typename T>OUT&operator<<(T x){if(!x)return pt('0'),*this;if(x<0)pt('-'),x=-x;char a[30],t=0;while(x)a[t++]=x%10,x/=10;while(t--)pt(a[t]+'0');return *this;}}out;}using namespace IO;\n#define N 100011\nint n,m,cnt=0,head[N],CNT=0,HEAD[N],tt=0,RT[N];\nstruct edge{\n    int to,nxt;\n}e[N],E[N];\nil void add(int x,int y){\n    e[++cnt].to=y;e[cnt].nxt=head[x];head[x]=cnt;\n}\nil void pb(int x,int y){\n    E[++CNT].to=y;E[CNT].nxt=HEAD[x];HEAD[x]=CNT;\n}\nint f[17][N],d[N],siz[N],son[N],T[N],L[N],R[N],dfn=0;\nil void dfs(int x){\n    siz[x]=1;T[L[x]=++dfn]=x;\n    fl(i,x){\n        f[0][to]=x;d[to]=d[x]+1;\n        dfs(to);siz[x]+=siz[to];\n        if(siz[to]>siz[son[x]])son[x]=to;\n    }\n    R[x]=dfn;\n}\nil void st(){\n    int k=l2(n);\n    Fur(j,1,k)\n        Fur(i,1,n)\n        if(~f[j-1][i])f[j][i]=f[j-1][f[j-1][i]];\n}\nil int get(int x,int k){\n    int t=0;\n    while(k){\n        if(k&1){\n            x=f[t][x];\n            if(!(~x))return -1;\n        }\n        k>>=1;++t;\n    }\n    return x;\n}\nstruct que{int d,id;}q[N];\nint ANS[N];\nint tot[N];\nil void Add(int x,int v){\n    tot[d[x]]+=v;\n}\nil void upd(int x,int v){\n    Fur(i,L[x],R[x])Add(T[i],v);\n}\nil void sol(int x){\n    fl(i,x)if(to!=son[x]){\n        sol(to);\n        upd(to,-1);\n    }\n    if(son[x])sol(son[x]);\n    Add(x,1);\n    fl(i,x)if(to!=son[x])upd(to,1);\n    for(register int i=HEAD[x],to;to=E[i].to,i;i=E[i].nxt)ANS[q[to].id]=tot[q[to].d]-1;\n}\nint main(){\n    in>>n;\n    register int x,k;\n    Fur(i,1,n){\n        in>>x;\n        if(!x)RT[++RT[0]]=i;\n        else add(x,i);\n    }\n    clr(f,-1);\n    Fur(i,1,RT[0])dfs(RT[i]);\n    st();\n    in>>m;\n    Fur(i,1,m){\n        in>>x>>k;\n        if(d[x]>=k)q[++tt]=que{d[x],i},pb(get(x,k),tt);\n        else ANS[i]=0;\n    }\n    Fur(i,1,RT[0])sol(RT[i]),upd(RT[i],-1);\n    Fur(i,1,m)out<<ANS[i]<<\" \";\n}\n```",
        "postTime": 1572496418,
        "uid": 36532,
        "name": "localhost",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF208E \u3010Blood Cousins\u3011"
    }
]