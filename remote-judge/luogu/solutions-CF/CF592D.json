[
    {
        "content": "\u9996\u5148\u8fd9\u9898\u867d\u7136\u4e0d\u662f\u5f88\u96be\uff0c\u4f46\u662f\u9ec4\u9898\u662f\u4e0d\u662f\u6709\u70b9\u8fc7\u5206\u4e86\u2026\u2026\u597d\u6b79\u7b97\u4e2a\u84dd\u9898\u554a\u3002\n\n\u624b\u73a9\u6837\u4f8b\u5f97\u77e5\uff0c\u8fd9\u54e5\u4eec\u513f\u77ac\u79fb\u5230\u7684\u57ce\u5e02$A$\u4e00\u5b9a\u662f\u8fd9\u4e9b\u88ab\u653b\u51fb\u7684\u57ce\u5e02\u6784\u6210\u7684\u6811\u7684\u4e00\u4e2a\u53f6\u5b50\uff0c\u7136\u540e\u4ed6\u7ecf\u8fc7\u7684\u6700\u540e\u4e00\u4e2a\u57ce\u5e02$B$\u548c$A$\u6784\u6210\u7684\u94fe\u4e00\u5b9a\u662f\u8fd9\u68f5\u65b0\u6784\u6210\u7684\u6811\u7684\u76f4\u5f84\uff08\u7a81\u7136\u60f3\u5230\u865a\u6811\uff09\u3002\n\n\u522b\u6fc0\u52a8\uff0c\u8fd9\u9898\u6839\u672c\u4e0d\u7528\u865a\u6811\u3002\n\n\u6211\u4eec\u53ea\u7528\u6c42\u4e00\u904d\u6811\u7684\u76f4\u5f84\u5c31\u884c\u4e86\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u4e2a\u76f4\u5f84\u7684\u7aef\u70b9\u5fc5\u987b\u6ee1\u8db3\u90fd\u662f\u88ab\u653b\u51fb\u7684\u57ce\u5e02\uff0c\u5219\u7b2c\u4e00\u95ee\u5c31\u662f\u7aef\u70b9\u4e2d\u7684\u8f83\u5c0f\u503c\u3002\n\n\u8003\u8651\u7b2c\u4e8c\u95ee\u3002\n\u76f4\u5f84\u4e0a\u7684\u57ce\u5e02\u53ea\u4f1a\u8d70\u4e00\u904d\uff0c\u800c\u76f4\u5f84\u5916\u7684\u57ce\u5e02\u5fc5\u987b\u8d70\u8fc7\u53bb\u518d\u56de\u6765\u3002\u6240\u4ee5\u6211\u4eec\u4ece\u76f4\u5f84\u4e00\u6bb5\u5f00\u59cb\u904d\u5386\u6574\u4e2a\u76f4\u5f84\uff0c\u6bcf\u7ecf\u8fc7\u4e00\u4e2a\u70b9\uff0c\u5c31dfs\u8fd9\u4e2a\u70b9\u76f4\u5f84\u4e4b\u5916\u7684\u5b50\u6811\uff0c\u5e76\u7edf\u8ba1\u5b50\u6811\u5185\u8d70\u5230\u88ab\u653b\u51fb\u7684\u57ce\u5e02\u7684\u8ddd\u79bb\u548c\u3002\u90a3\u4e48\u7b54\u6848\u5c31\u662f\u8fd9\u4e9b\u8ddd\u79bb+\u52a0\u6811\u7684\u76f4\u5f84\u957f\u5ea6\u3002\n\n\u8ddd\u79bb\u548c\u7684\u6c42\u6cd5\u7528\u6811\u5f62dp\u5c31\u884c\u3002\u6211\u4eec\u8003\u8651\u6bcf\u4e00\u6761\u8fb9\u7684\u8d21\u732e\u3002\u5982\u679c\u4e00\u4e2a\u70b9\u7684\u7684\u513f\u5b50\u7684\u5b50\u6811\u5185\u6709\u88ab\u653b\u51fb\u7684\u57ce\u5e02\uff0c\u5219\u8fd9\u6761\u8fb9\u4e00\u5b9a\u4f1a\u88ab\u8d70\u8fc7\uff0c\u7b54\u6848\u52a02\u5373\u53ef\u3002\n\n\u7136\u540e\u8bb0\u5f97\u7279\u5224\u88ab\u653b\u51fb\u7684\u57ce\u5e02\u53ea\u6709\u4e00\u4e2a\u7684\u60c5\u51b5\uff08\u88abhack\u4e86\u2026\u2026\uff09\u3002\n```c++\n#include<cstdio>\n#include<iostream>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#include<cstdlib>\n#include<cctype>\n#include<vector>\n#include<stack>\n#include<queue>\nusing namespace std;\n#define enter puts(\"\") \n#define space putchar(' ')\n#define Mem(a, x) memset(a, x, sizeof(a))\n#define In inline\ntypedef long long ll;\ntypedef double db;\nconst int INF = 0x3f3f3f3f;\nconst db eps = 1e-8;\nconst int maxn = 2e5 + 5;\ninline ll read()\n{\n  ll ans = 0;\n  char ch = getchar(), last = ' ';\n  while(!isdigit(ch)) last = ch, ch = getchar();\n  while(isdigit(ch)) ans = (ans << 1) + (ans << 3) + ch - '0', ch = getchar();\n  if(last == '-') ans = -ans;\n  return ans;\n}\ninline void write(ll x)\n{\n  if(x < 0) x = -x, putchar('-');\n  if(x >= 10) write(x / 10);\n  putchar(x % 10 + '0');\n}\n\nint n, m;\nbool vis[maxn];\nstruct Edge\n{\n  int nxt, to;\n}e[maxn << 1];\nint head[maxn], ecnt = -1;\nIn void addEdge(int x, int y)\n{\n  e[++ecnt] = (Edge){head[x], y};\n  head[x] = ecnt;\n}\n\nint dep[maxn], fa[maxn], Max = 0, A, B;\nIn void dfs1(int now, int _f, int dis, int& id)\n{\n  if(vis[now] && (dis > Max || (dis == Max && now < id))) Max = dis, id = now;\n  dep[now] = dep[_f] + 1; fa[now] = _f;\n  for(int i = head[now], v; ~i; i = e[i].nxt)\n    if((v = e[i].to) ^ _f) dfs1(v, now, dis + 1, id);\n}\n\nbool dia[maxn];\nint a[maxn], b[maxn], acnt = 0, bcnt = 0;\nIn void solve(int x, int y)\n{\n  a[++acnt] = x; b[++bcnt] = y;\n  dia[x] = dia[y] = 1;\n  while(x ^ y)\n    {\n      if(dep[x] > dep[y]) a[++acnt] = x = fa[x], dia[x] = 1;\n      else b[++bcnt] = y = fa[y], dia[y] = 1;\n      \n    }\n  --acnt;\n}\n\nint ans = 0;\nIn bool dfs2(int now, int _f, int dis)\n{\n  int flg = 0;\n  for(int i = head[now], v; ~i; i = e[i].nxt)\n    {\n      if(dia[v = e[i].to] || v == _f) continue;\n      int tp = dfs2(v, now, dis + 1);\n      if(tp) ans += 2;\n      flg |= tp;\n    }\n  return flg || vis[now];\n}\n\nint main()\n{\n  Mem(head, -1);\n  n = read(), m = read();\n  for(int i = 1; i < n; ++i)\n    {\n      int x = read(), y = read();\n      addEdge(x, y), addEdge(y, x);\n    }\n  for(int i = 1; i <= m; ++i) A = read(), vis[A] = 1;\n  dfs1(A, 0, 0, A), Max = 0, dfs1(A, 0, 0, B);\n  if(!A || !B) {printf(\"%d\\n0\\n\", A | B); return 0;}\n  solve(A, B);\n  for(int i = 1; i <= acnt; ++i) dfs2(a[i], 0, 0);  //\u8fd9\u4e24\u884c\u662f\u904d\u5386\u76f4\u5f84\n  for(int i = 1; i <= bcnt; ++i) dfs2(b[i], 0, 0);\n  write(min(A, B)), enter, write(ans + Max), enter;\n  return 0;\n}\n```",
        "postTime": 1556531135,
        "uid": 55965,
        "name": "mrclr",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF592D \u3010Super M\u3011"
    },
    {
        "content": "\u5c0f\u840c\u65b0\u4eba\u751f\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\uff01\n### \u9898\u76ee\u5927\u610f\uff1a\u6709\u4e00\u4e2a\u6709 $n$ \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u5176\u4e2d\u6709 $m$ \u4e2a\u70b9\u88ab\u6807\u8bb0\u3002\u73b0\u5728\u4ece\u4efb\u610f\u70b9\u5f00\u59cb\uff0c\u53bb\u904d\u5386\u8fd9 $m$ \u4e2a\u70b9\uff0c\u95ee\u4f60\u904d\u5386\u8fd9 $m$ \u4e2a\u70b9\u7684\u6700\u5c11\u8def\u7a0b\uff08\u8fb9\u7684\u6743\u503c\u4e3a1\uff09\u3002\n\u9996\u5148\uff0c\u9898\u76ee\u4e2d\u7684\u4efb\u610f\u70b9\u80af\u5b9a\u662f\u88ab\u6807\u8bb0\u7684\u70b9\uff08\u4e3a\u4e86\u6c42\u6700\u5c11\u8def\u7a0b\uff09\u3002\u7136\u540e\u6211\u4eec\u5148\u5047\u8bbe\u4e00\u79cd\u7279\u6b8a\u7684\u60c5\u51b5\uff1a\u6240\u6709\u7684\u70b9\u90fd\u88ab\u6807\u8bb0\uff0c\u5219\uff0c\u5982\u4e0b\u56fe\uff1a\uff08\u6211\u753b\u7684\u5de8\u4e11...\uff09\u3002\n\u5047\u8bbe\u6709\u8fd9\u4e48\u4e00\u9897\u6811\uff0c\u5e76\u4e14\u5b83\u7684\u6240\u6709\u70b9\u90fd\u88ab\u6807\u8bb0\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/jnzuluri.png)\n\n\u5047\u8bbe\u4ece $2$ \u51fa\u53d1\uff0c\u6211\u4eec\u5e94\u5f53\u8fd9\u6837\u904d\u5386\uff1a $2$ -> $1$ -> $5$ -> $1$ -> $3$ -> $1$ -> $6$ -> $1$ -> $4$ \u3002\u901a\u8fc7\u56fe\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u9664\u4e86 $2$ -> $1$ \u548c $1$ -> $4$ \u904d\u5386\u4e86 $1$ \u6b21\uff0c\u522b\u7684\u8fb9\u90fd\u904d\u5386\u4e86 $2$ \u6b21\u3002\u90a3\u6211\u4eec\u80af\u5b9a\u662f\u8ba9\u904d\u5386 $1$ \u6b21\u7684\u8d8a\u591a\uff0c\u56e0\u4e3a\u8fd9\u6837\u624d\u80fd\u8ba9\u7b54\u6848\u66f4\u5c0f\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/x22ac4r8.png)\n\n\u90a3\u8fd9\u904d\u5386 $1$ \u6b21\u7684\u8fb9\u662f\u4ec0\u4e48\u5462\uff1f\u518d\u770b\u4e0b\u4e00\u5f20\u56fe\u7247\uff1a\uff08\u7eff\u8272\u4e3a\u904d\u5386 $1$\t\u904d\u7684\u8fb9\uff0c\u7ea2\u8272\u4e3a\u904d\u5386 $2$ \u904d\u7684\u8fb9\uff09\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ksm9iytk.png)\n\n\u7531\u6b64\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u904d\u5386 $1$\t\u904d\u7684\u8fb9\u4e3a\u6700\u957f\u65f6\uff0c\u4fbf\u662f\u4e00\u9897\u6811\u7684\u76f4\u5f84\uff01\u6240\u4ee5\uff0c\uff08\u603b\u70b9\u6570 - $1$ \uff09 X $2$ - \u6811\u7684\u76f4\u5f84=\u7b54\u6848\u3002\u4f46\u662f\uff01\u8fd9\u662f\u6240\u6709\u7684\u70b9\u90fd\u88ab\u6807\u8bb0\u7684\u60c5\u51b5\uff0c\u90a3\u5982\u679c\u6709\u4e9b\u70b9\u6ca1\u6709\u6807\u8bb0\u8fd9\u4e48\u529e\uff1f\u6bd4\u5982\uff1a\uff08\u7ea2\u8272\u70b9\u4e3a\u6807\u8bb0\u70b9\uff0c\u7eff\u8272\u70b9\u4e3a\u4e0d\u9700\u8981\u5904\u7406\u7684\u70b9\uff09\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/xy4qz8az.png)\n\n\u89c2\u5bdf\u4e00\u4e0b\uff0c\u90a3\u4e9b\u7eff\u8272\u70b9\uff08\u4e0d\u9700\u8981\u5904\u7406\u7684\u70b9\uff09\u7684\u7279\u5f81\u5c31\u662f\u5b83\u7684**\u5b50\u6811\u6ca1\u6709\u7ea2\u8272\u70b9**\uff08\u6807\u8bb0\u70b9\uff09!\u6ce8\u610f\uff1a\u4e3a\u4e86\u4f7f\u6839\u8981\u4fdd\u7559\uff0c\u6240\u4ee5**\u6839\u5fc5\u5b9a\u4e3a\u7ea2\u8272**\uff01\n\n\u6240\u4ee5\uff0c\u53ea\u8981\u5148\u628a\u7eff\u8272\u70b9\uff08\u4e0d\u9700\u8981\u5904\u7406\u7684\u70b9\uff09\u5220\u9664\u3002\u518d\u7b97\u51fa\uff08\u603b\u70b9\u6570 - $1$ \uff09* $2$ - \u6811\u7684\u76f4\u5f84\uff0c\u5c31\u662f\u7b54\u6848\u3002\n\u6700\u540e\u518d\u653e\u51fa\u6211~~\u4e11\u964b~~\u7684\u4ee3\u7801\u3002\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#define maxm 300300\nusing namespace std;\nvector<int> a[maxm];\nstruct node{int N,P;}e[maxm],maxn;\nint XY[maxm],f[maxm],O,i,n,m,x,y,S;\nbool check(node A,node B){return (A.P>B.P)||(A.P==B.P&&A.N<B.N);}\nint df(int t,int w){\n\tint i;\n\tfor (i=0;i<a[t].size();i++)\n\t\tif (a[t][i]!=w)\n\t\t\tXY[t]|=df(a[t][i],t);\n\tif (f[t]) XY[t]=1;\t\t\n\tS+=XY[t];\n\treturn XY[t];\n}\nvoid dfs(int t,int w){\n\tint i;node X;\n\tnode maxn1,maxn2;\t\n\tmaxn1.P=maxn2.P=0;\n\tmaxn1.N=maxn2.N=t;\n\tfor (i=0;i<a[t].size();i++)\n\t\tif (a[t][i]!=w&&XY[a[t][i]]){\n\t\t\tdfs(a[t][i],t);\n\t\t\tX.P=e[a[t][i]].P+1;X.N=e[a[t][i]].N;\n\t\t\tif (check(X,maxn1)) \n\t\t\t\tmaxn2=maxn1,maxn1=X;\n\t\t\telse if (check(X,maxn2)) \n\t\t\t\tmaxn2=X;\n\t\t}\n\tX.P=maxn1.P+maxn2.P;X.N=min(maxn1.N,maxn2.N);\n\tif (check(X,maxn)) maxn=X;\n\te[t].P=maxn1.P;e[t].N=maxn1.N;\n} \nint main(){\n\tscanf(\"%d %d\",&n,&m);\n\tfor (i=1;i<n;i++){\n\t\tscanf(\"%d %d\",&x,&y);\n\t\ta[x].push_back(y);\n\t\ta[y].push_back(x);\n\t}\n\tfor (i=1;i<=m;i++) \n\t\tscanf(\"%d\",&x),f[x]=1;\n\tfor (i=1;i<=n;i++)\n\t\tif (f[i]) break;\n\tmaxn.N=i;\tdf(i,0);\tdfs(i,0);\n\tprintf(\"%d\\n%d\\n\",maxn.N,(S-1)*2-maxn.P);\n\treturn 0;\n} \n```",
        "postTime": 1613880243,
        "uid": 484922,
        "name": "A524",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF592D\u3010Super M\u3011"
    },
    {
        "content": "### \u9898\u610f\n\u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u70b9\u7684\u6811\uff0c\u5176\u4e2d\u6709 $m$ \u4e2a\u4e24\u4e24\u4e0d\u540c\u7684\u5173\u952e\u70b9\uff0c\u6c42\u4ece\u4efb\u610f\u4e00\u4e2a\u5173\u952e\u70b9\u51fa\u53d1\uff0c\u904d\u5386\u6240\u6709\u5173\u952e\u70b9\u7684\u6700\u77ed\u8def\u5f84\u3002  \n$m \\le n \\le 123456$ \u3002\n### \u9898\u89e3\n\u5bb9\u6613\u53d1\u73b0\u8fd9\u662f\u4e2a\u865a\u6811\u95ee\u9898\uff0c\u4f46\u662f\u76f4\u63a5\u4e0a\u865a\u6811\u592a\u9ebb\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e00\u4e9b\u4f18\u7f8e\u7684\u505a\u6cd5\u3002  \n\u9996\u5148\u8981\u4e86\u89e3\u4e00\u4e2a\u7ed3\u8bba\uff1a  \n> \u904d\u5386\u6811\u4e0a\u7684\u4e00\u4e2a\u70b9\u96c6\uff0c\u5e76\u8fd4\u56de\u8d77\u70b9\uff0c\u5f62\u6210\u4e00\u4e2a\u56de\u8def\uff0c\u6700\u4f73\u65b9\u6848\u662f\u6309\u7167 dfs \u5e8f\u4ece\u5c0f\u5230\u5927\u4f9d\u6b21\u904d\u5386\u6bcf\u4e2a\u70b9\u3002\n\n\u4f46\u662f\uff0c\u8fd9\u6837\u641e\u51fa\u6765\u7684\u662f\u4e00\u6761\u56de\u8def\uff0c\u663e\u7136\u4e0d\u4f18\u3002\u6211\u4eec\u8003\u8651\u9b54\u6539\u4e00\u4e0b\uff0c\u53bb\u6389\u865a\u6811\u4e0a\u7684\u4e00\u6761\u94fe\uff0c\u8ba9\u5b83\u6210\u4e3a\u4e00\u4e2a\u5408\u6cd5\u7684\u65b9\u6848\u3002\u4e3a\u4fdd\u8bc1\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u6211\u4eec\u8ba9\u53bb\u6389\u7684\u8fd9\u6761\u94fe\u4e2d\u7f16\u53f7\u8f83\u5c0f\u7684\u4e00\u4e2a\u7aef\u70b9\u4e3a\u8d77\u70b9\uff0c\u53e6\u4e00\u4e2a\u4e3a\u7ec8\u70b9\uff0c\u5c31\u662f\u4e00\u4e2a\u5408\u6cd5\u65b9\u6848\u4e86\u3002\u540c\u65f6\uff0c\u4e3a\u4e86\u6700\u5c0f\u5316\u7b54\u6848\uff0c\u6211\u4eec\u5e94\u8be5\u53bb\u6389\u865a\u6811\u4e0a\u6700\u957f\u7684\u4e00\u6761\u94fe\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u7b2c\u4e00\u6b65\u4e2d\uff0c\u6211\u4eec\u6309\u7167 dfs \u5e8f\u5927\u5c0f\u904d\u5386\u6bcf\u4e2a\u5173\u952e\u70b9\u3002\u4f46\u662f\u7b2c\u4e8c\u6b65\u4e2d\uff0c\u6211\u4eec\u5e76\u6ca1\u6709\u6309\u8fd9\u6837\u53bb\u6389\u591a\u4f59\u7684\u94fe\u3002\u8fd9\u6837\u4e3a\u4ec0\u4e48\u662f\u5bf9\u7684\u5462\uff1f  \n\u9996\u5148\uff0c\u5982\u679c\u6240\u9009\u7684\u4e24\u4e2a\u7aef\u70b9\u4e4b\u95f4\u6ca1\u6709\u5176\u4ed6\u5173\u952e\u70b9\uff0c\u663e\u7136\u53ef\u4ee5\u901a\u8fc7\u8c03\u6574 dfs \u5b50\u6811\u7684\u987a\u5e8f\u4f7f\u5f97\u5b83\u4eec\u7684 dfs \u5e8f\u76f8\u90bb\u3002  \n\u7136\u540e\uff0c\u6211\u4eec\u8003\u8651\u4e24\u70b9\u95f4\u6709\u5173\u952e\u70b9\u7684\u60c5\u51b5\uff0c\u8fd9\u4e9b\u5173\u952e\u70b9\u4e00\u5b9a\u662f\u81f3\u5c11\u4e00\u4e2a\u7aef\u70b9\u7684\u7956\u5148\u3002\u56e0\u4e3a\u7ec8\u70b9\u4e0d\u9700\u8981\u6298\u8fd4\uff0c\u6211\u4eec\u540c\u6837\u4e0d\u9700\u8981\u4e24\u6b21\u7ecf\u8fc7\u8fd9\u4e9b\u70b9\u5230\u7aef\u70b9\u7684\u8def\u5f84\u3002  \n\u56e0\u6b64\uff0c\u76f4\u63a5\u627e\u5230\u4e24\u7aef\u70b9\u5747\u4e3a\u5173\u952e\u70b9\u7684\u6811\u4e0a\u6700\u957f\u94fe\uff0c\u7f16\u53f7\u8f83\u5c0f\u7684\u90a3\u4e2a\u7aef\u70b9\u5c31\u662f\u8d77\u70b9\u3002\n\n### \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define reg register\ntypedef long long ll;\nusing namespace std;\nconst int MN=3e5+5;\nconst int mod=998244353;\nint to[MN<<1],nxt[MN<<1],h[MN],cnt;\ninline void ins(int s,int t){\n\tto[++cnt]=t;nxt[cnt]=h[s];h[s]=cnt;\n\tto[++cnt]=s;nxt[cnt]=h[t];h[t]=cnt;\n}\nint n,m,node[MN],f[MN][19],dep[MN],dfn[MN],idx;\nbool tag[MN];\nvoid dfs1(int st){\n\tdfn[st]=++idx;dep[st]=dep[f[st][0]]+1;\n\tfor(reg int i=1;i<19;i++)\n\t\tf[st][i]=f[f[st][i-1]][i-1];\n\tfor(reg int i=h[st];i;i=nxt[i])\n\t\tif(to[i]!=f[st][0])\n\t\t\tf[to[i]][0]=st,dfs1(to[i]);\n}\ninline int LCA(int x,int y){\n\tif(dep[x]<dep[y])swap(x,y);\n\tfor(reg int i=18;~i;i--)\n\t\tif(dep[f[x][i]]>=dep[y])x=f[x][i];\n\tif(x==y)return x;\n\tfor(reg int i=18;~i;i--)\n\t\tif(f[x][i]!=f[y][i])x=f[x][i],y=f[y][i];\n\treturn f[x][0];\n}\ninline int dis(int x,int y){\n\treturn dep[x]+dep[y]-2*dep[LCA(x,y)];\n}\nint dp[MN],Res,Pos,Ans;\nvoid dfs2(int st){\n\tif(tag[st])dp[st]=st;\n\tfor(reg int i=h[st],res;i;i=nxt[i])\n\t\tif(to[i]!=f[st][0]){\n\t\t\tdfs2(to[i]);if(!dp[to[i]])continue;\n\t\t\tif(dp[st]){\n\t\t\t\tres=dep[dp[to[i]]]+dep[dp[st]]-2*dep[st];\n\t\t\t\tif(res>Res||(res==Res&&min(dp[st],dp[to[i]])<Pos))\n\t\t\t\t\tPos=min(dp[st],dp[to[i]]),Res=res;\n\t\t\t}\n\t\t\tif(dep[dp[to[i]]]>dep[dp[st]]||\n\t\t\t  (dep[dp[to[i]]]==dep[dp[st]]&&dp[to[i]]<dp[st]))\n\t\t\t  \tdp[st]=dp[to[i]];\n\t\t}\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(reg int i=1,s,t;i<n;i++)\n\t\tscanf(\"%d%d\",&s,&t),ins(s,t);\n\tfor(reg int i=1;i<=m;i++)\n\t\tscanf(\"%d\",node+i),tag[node[i]]=true;\n\tif(m==1)return 0*printf(\"%d\\n0\",node[1]);\n\tdfs1(1);\n\tsort(node+1,node+1+m,[](int a,int b){\n\t\treturn dfn[a]<dfn[b];\n\t});\n\tfor(reg int i=1;i<=m;i++)\n\t\tAns+=dis(node[i],node[i%m+1]);\n\tPos=n+1;dfs2(1);Ans-=Res;\n\tprintf(\"%d\\n%d\\n\",Pos,Ans);\t\n\treturn 0;\n}\n```",
        "postTime": 1586575302,
        "uid": 17930,
        "name": "Marser",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF592D \u3010Super M\u3011"
    },
    {
        "content": "### $\\text{Difficulty : 2200}$\n---\n### \u89e3\u9898\u601d\u8def\uff1a\n\n\u4e3a\u4e86\u65b9\u4fbf\u63cf\u8ff0\u95ee\u9898\uff0c\u5148\u4efb\u610f\u9009\u5b9a\u4e00\u4e2a\u88ab\u653b\u51fb\u7684\u8282\u70b9\u4f5c\u4e3a\u6839\u8282\u70b9\u3002\u5bb9\u6613\u53d1\u73b0\uff0c\u5728\u8fd9\u6837\u7684\u63cf\u8ff0\u4e0b\uff0c\u6839\u8282\u70b9\u4e00\u5b9a\u4f1a\u88ab\u8d70\u5230\u3002\n\n\u7136\u540e\u5177\u4f53\u8003\u8651\u54ea\u4e00\u4e9b\u8282\u70b9\u9700\u8981\u88ab\u8d70\u5230\uff0c\u6839\u636e\u9898\u610f\uff0c\u88ab\u653b\u51fb\u7684\u8282\u70b9\u4e00\u5b9a\u8981\u8d70\u3002\u800c\u5bf9\u4e8e\u672a\u88ab\u653b\u51fb\u7684\u8282\u70b9\uff0c\u53ea\u8981\u5b50\u6811\u4e2d\u6709\u88ab\u653b\u51fb\u8282\u70b9\u5c31\u4e00\u5b9a\u8981\u8d70\u3002\n\n\u540e\u8005\u7684\u8bc1\u660e\u601d\u8def\u5927\u81f4\u5982\u4e0b\uff1a\u5047\u8bbe\u5728\u4e00\u4e2a\u672a\u88ab\u9009\u4e2d\u7684\u8282\u70b9\u7684\u5b50\u6811\u4e2d\u6709\u4e00\u4e2a\u9700\u8981\u88ab\u7ecf\u8fc7\u7684\u70b9\uff0c\u5982\u679c\u4e00\u5f00\u59cb\u7684\u8f6c\u9001\u70b9\u5728\u8fd9\u4e2a\u5b50\u6811\u5916\u5c31\u4e00\u5b9a\u9700\u8981\u8d70\u5230\u8fd9\u4e2a\u5b50\u6811\u4e2d\uff0c\u53cd\u4e4b\u5982\u679c\u4f20\u9001\u70b9\u5728\u5b50\u6811\u5185\u90e8\u5c31\u81f3\u5c11\u9700\u8981\u8d70\u5230\u6839\u8282\u70b9\uff0c\u540c\u6837\u9700\u8981\u7ecf\u8fc7\u8fd9\u4e2a\u672a\u88ab\u9009\u4e2d\u7684\u70b9\u3002\n\n\u4e8e\u662f\u5c31\u53ef\u4ee5\u628a\u5b50\u6811\u4e2d\u6ca1\u6709\u88ab\u653b\u51fb\u7684\u70b9\u7684\u672a\u88ab\u653b\u51fb\u7684\u70b9\u5220\u6389\u4e86\u3002\n\n---\n\n\u63a5\u7740\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u4e86\u4ece\u4efb\u610f\u4e00\u4e2a\u70b9\u5f00\u59cb\u904d\u5386\u6574\u68f5\u6811\uff0c\u4e0d\u8981\u6c42\u56de\u5230\u8fd9\u4e2a\u70b9\u3002\n\n\u9006\u5411\u8003\u8651\u8fd9\u4e2a\u95ee\u9898\uff0c\u4ee4\u8fd9\u4e2a\u4eba\u4ece\u67d0\u4e00\u4e2a\u8282\u70b9\u51fa\u53d1\u5230\u8fbe\u6240\u6709\u8282\u70b9\u5e76\u6700\u7ec8\u56de\u5230\u8fd9\u4e2a\u8282\u70b9\uff0c\u5bb9\u6613\u53d1\u73b0\uff0c\u5f62\u6210\u8fd9\u6837\u4e00\u4e2a\u56de\u8def\u4e4b\u540e\u4efb\u4e00\u70b9\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u8fd9\u4e2a\u8d77\u59cb\u70b9\u3002\u7136\u540e\u8003\u8651\u8fd9\u4e2a\u4e0d\u8981\u6c42\u56de\u5230\u539f\u70b9\u7684\u6761\u4ef6\uff0c\u5b9e\u9645\u4e0a\u4e5f\u5c31\u662f\u4ece\u67d0\u4e00\u4e2a\u70b9\u5230\u53e6\u4e00\u4e2a\u70b9\u4e4b\u95f4\u7684\u4e00\u6761\u94fe\u53ea\u9700\u8981\u88ab\u8d70\u4e00\u6b21\u3002\n\n\u6240\u4ee5\u6700\u7ec8\u7684\u7b54\u6848\u5c31\u662f\u5220\u53bb\u4e00\u4e9b\u70b9\u4e4b\u540e\u7684\u8fb9\u7684\u4e2a\u6570\u7684\u4e24\u500d\u51cf\u53bb\u6811\u7684\u76f4\u5f84\u957f\u3002\n\n\u6ce8\u610f\u7279\u5224\u53ea\u6709\u4e00\u4e2a\u57ce\u5e02\u88ab\u653b\u51fb\u7684\u60c5\u51b5\u3002\n\n---\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int MAXN=300000;\nint n,m,head[MAXN],nxt[MAXN],num[MAXN],f[MAXN],v[MAXN],x,y,tot,maxi,maxi_2,cnt;\nvoid add(int x,int y){\n\tnxt[++tot]=head[x];\n\thead[x]=tot;\n\tnum[tot]=y;\n}\nbool dfs(int now,int fa,int dis){\n\tf[now]=dis;\n\tfor(int i=head[now];i;i=nxt[i]){\n\t\tif(num[i]==fa)continue;\n\t\tv[now]|=dfs(num[i],now,dis+1);\n\t}\n\treturn v[now];\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<n;i++){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd(x,y);add(y,x);\n\t}\n\tfor(int i=1;i<=m;i++)\n\tscanf(\"%d\",&x),v[x]=1;\n\tif(m==1){\n\t\tprintf(\"%d\\n0\\n\",x);\n\t\treturn 0;\n\t}\n\tdfs(x,0,0);\n\tfor(int i=1;i<=n;i++){\n\t\tif(v[i]==0)continue;\n\t\tif(f[i]>f[maxi])maxi=i;\n\t}\n\tdfs(maxi,0,0);\n\tfor(int i=1;i<=n;i++){\n\t\tif(v[i]==0)continue;\n\t\tcnt++;\n\t\tif(f[i]>f[maxi_2])maxi_2=i;\n\t}\n\tprintf(\"%d\\n\",min(maxi_2,maxi));\n\tprintf(\"%d\\n\",(cnt-1)*2-f[maxi_2]);\n\treturn 0;\n}\n```\n",
        "postTime": 1657071986,
        "uid": 223559,
        "name": "qxp101",
        "ccfLevel": 6,
        "title": "CF592D Super M \u9898\u89e3"
    }
]