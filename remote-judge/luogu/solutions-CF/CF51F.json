[
    {
        "content": "\u8fd9\u9053\u9898\u6709\u4e00\u4e2a\u6bd4\u8f83\u76f4\u89c2\u7684\u60f3\u6cd5\uff0c \u6700\u540e\u7684\u6bdb\u6bdb\u866b\u663e\u7136\u662f\u4e0d\u4f1a\u6709\u73af\u7684\uff0c\u6240\u4ee5\u5f97\u5148\u5bf9\u8fd9\u4e2a\u56fe\u7f29\u70b9\uff0c\u5f97\u5230\u4e00\u68f5\u6811\uff0c \u6216\u8005\u662f\u4e00\u4e2a\u68ee\u6797\uff1b\n\n \u5bf9\u4e00\u68f5\u6811\uff0c\u8003\u8651\u5982\u4f55\u7528\u6700\u5c11\u7684\u6b21\u6570\u5408\u5e76\u4f7f\u5176\u53d8\u6210\u4e00\u4e2a\u6bdb\u6bdb\u866b\uff0c \u6211\u4eec\u53d1\u73b0\u6240\u6709\u53f6\u8282\u70b9\u662f\u6ca1\u6709\u5fc5\u8981\u4e0e\u5176\u5b83\u70b9\u5408\u5e76\u7684\uff0c\u56e0\u4e3a\u5f53\u5b83\u7236\u4eb2\u4e0e\u5176\u5b83\u70b9\u5408\u5e76\u7684\u65f6\u5019\uff0c\u5b83\u5c31\u4f1a\u4f9d\u9644\u5230\u5408\u5e76\u7684\u70b9\u4e0a\u53bb\uff0c\u800c\u9664\u4e86\u53f6\u8282\u70b9\u7684\u70b9\uff0c \u8981\u4e48\u5728\u552f\u4e00\u7684\u4e3b\u94fe\u4e0a\uff0c \u8981\u4e48\u4e0e\u5176\u4ed6\u7684\u70b9\u5408\u5e76\uff0c \u76f4\u81f3\u6210\u4e3a\u4e00\u6761\u94fe\u3002\u90a3\u4e48\u7b54\u6848\u5c31\u5f88\u663e\u7136\u4e86\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u8981\u627e\u5230\u9664\u53bb\u53f6\u8282\u70b9\u4e4b\u540e\u6811\u7684\u76f4\u5f84\u3002 \u56e0\u4e3a\u76f4\u5f84\u7684\u4e24\u7aef\u5fc5\u7136\u90fd\u662f\u53f6\u8282\u70b9\uff0c \u90a3\u4e48\u5b9e\u9645\u4e0a\u6c42\u5f97\u7684\u5c31\u662f\u539f\u6811\u7684\u76f4\u5f84\u3002\n\n\u5bf9\u4e8e\u68ee\u6797\uff0c\u8fd8\u5f97\u9700\u8981$cnt - 1$\u7684\u4ee3\u4ef7\u4f7f\u5176\u4e24\u4e24\u5408\u5e76\u3002 \n\n\u4ee3\u7801\u4e5f\u4e0d\u662f\u5f88\u96be\u5199:\n```cpp\n#include<bits/stdc++.h>\n#define reg register\n#define maxn 200001\nusing namespace std;\nint n, m, x[maxn], y[maxn], tag[maxn], fi[maxn << 1], nt[maxn << 1], go[maxn << 1], root;\nint cnt, top, low[maxn], dfn[maxn], id[maxn], deg[maxn], st[maxn], ans, cntx, sum, maxx;\nvoid add(int u, int v){\n\tnt[++cnt] = fi[u]; fi[u] = cnt; go[cnt] = v;\n}\nvoid tarjan(int u, int fa){\n\tdfn[u] = ++cnt; low[u] = dfn[u]; st[++top] = u;\n\tint t = 0;\n\tfor(int i = fi[u]; i; i = nt[i]){\n\t\tint v = go[i];\n\t\tif(v == fa && !t) { t++; continue;}\n\t\tif(dfn[v]) { low[u] = min(low[u], low[v]); continue;}\n\t\ttarjan(v, u);  low[u] = min(low[u], low[v]);\n\t}\n\tif(low[u] == dfn[u]){\n\t\tint y;  while(y = st[top--]){\n\t\t\ttag[y] = u;  if(y == u) break;\n\t\t}\n\t}\n}\nvoid dfs1(int u, int dep){\n\tdfn[u] = 1;\n\tfor(int i = fi[u]; i; i = nt[i]){\n\t\tint v = go[i]; if(dfn[v]) continue;\n\t\tdfs1(v, dep + 1);\n\t}\n\tif(dep> maxx) root = u, maxx = dep;\n}\nvoid dfs2(int u, int dep, int fa){\n\tfor(int i = fi[u]; i; i = nt[i]){\n\t\tint v = go[i]; if(v == fa) continue;\n\t\tdfs2(v, dep + 1, u);\n\t}\n\tif(dep >= maxx) maxx = dep;\n}\nint main()\n{\n\tscanf(\"%d %d\", &n, &m); \n\tfor(int i = 1; i <= m; i++){\n\t\tscanf(\"%d %d\", &x[i], &y[i]);\n\t\tadd(x[i], y[i]); add(y[i], x[i]); \n\t}\n\t\t\n\tfor(int i = 1; i <= n; i++) {\n\t\ttop = 0; cnt = 0; if(!dfn[i]) tarjan(i, 0);\n\t}\n\tmemset(fi, 0, sizeof fi); cnt = 0; top = 0;\n\tfor(int i = 1; i <= n; i++) if(tag[i] == i) id[i] = ++top;\n\tfor(int i = 1; i <= m; i++){\n\t\tif(tag[x[i]] != tag[y[i]]) {\n\t\tadd(id[tag[x[i]]], id[tag[y[i]]]), add(id[tag[y[i]]], id[tag[x[i]]]);\n\t\tdeg[id[tag[x[i]]]]++; deg[id[tag[y[i]]]]++;\n\t\t}\n\t}\n\tfor(int i = 1; i <= top; i++) {  if(deg[i] == 1) ans++; }\n\tmemset(dfn, 0, sizeof dfn);\n\tfor(int i = 1; i <= top; i++){\n\t\tif(!dfn[i] && deg[i] == 0) sum++, ans++;\n\t\tif(!dfn[i] && deg[i] != 0) { \n\t\t\tsum++;\n\t\t\tdfs1(i, 1), dfs2(root, 1, 0);\n\t\t\troot = 0; ans += maxx - 2; maxx = 0;\n\t\t}\n\t}\n\tsum--;\tans = sum + n - ans;\n\tcout << ans << endl;\n}\n```\n",
        "postTime": 1578454283,
        "uid": 97783,
        "name": "yyxmy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF51F \u3010Caterpillar\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u6211\u4eec\u7528 $tarjan$ \u628a\u539f\u56fe\u4e2d\u7684\u6240\u6709\u7684\u73af\u7f29\u6210\u4e00\u4e2a\u70b9\uff0c\u7136\u548c\u8bb0\u5f55\u8fd9\u4e2a\u53cc\u8fde\u901a\u5206\u91cf\u7684 $size$ \uff0c\u5f53\u628a\u6240\u6709\u7684\u73af\u90fd\u7f29\u5b8c\u540e\uff0c\u7531\u4e8e\u6bcf\u4e2a\u53cc\u8fde\u901a\u5206\u91cf\u4e2d\u5171\u6709 $ size$ \u4e2a\u70b9\uff0c\u6700\u7ec8\u7f29\u6210\u4e00\u4e2a\u70b9\u5171\u9700 $size-1$ \u6b21\u64cd\u4f5c\uff0c\u6240\u4ee5\u6700\u7ec8\u628a\u5404\u4e2a\u70b9\u7684$size-1$\u52a0\u5165\u7b54\u6848\u3002\n\n\u73b0\u5728\u6211\u4eec\u6bcf\u4e2a\u8054\u901a\u5757\u90fd\u88ab\u7f29\u6210\u4e86\u6811\uff0c\u8003\u8651\u8fd9\u4e2a\u6811\u5185\u5e94\u5f53\u600e\u4e48\u5904\u7406\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5047\u8bbe\u8fd9\u4e2a\u6811\u5185\u5df2\u7ecf\u5b58\u5728\u4e86\u4e3b\u94fe\uff0c\u4e3a\u4e86\u4f7f\u5f97\u6bcf\u4e2a\u70b9\u8ddd\u79bb\u4ed6\u7684\u8ddd\u79bb\u90fd\u4e0d\u5927\u4e8e $1$ ,\u6211\u4eec\u9700\u8981\u628a\u6700\u8fdc\u7684\u8282\u70b9\u4e5f\u5c31\u662f\u53f6\u5b50\u8282\u70b9\u5230\u4ed6\u7684\u8def\u5f84\u4e0a\u7684\u6240\u6709\u975e\u53f6\u5b50\u70b9\u5408\u5e76\u3002\u4e5f\u5c31\u662f\u6211\u4eec\u6700\u7ec8\u53ea\u5269\u4e0b\u4e86\u4e3b\u94fe\u4ee5\u53ca\u53f6\u5b50\u8282\u70b9\uff0c\u4e2d\u95f4\u7684\u8282\u70b9\u90fd\u4f1a\u88ab\u5408\u5e76\u64cd\u4f5c\u5408\u5e76\u8d70\u3002\u5171\u8ba1 \uff08\u53f6\u5b50\u8282\u70b9\u4e2a\u6570 + \u4e3b\u94fe\u70b9\u7684\u4e2a\u6570 - \u76f8\u4ea4\u7684\u70b9\u7684\u4e2a\u6570\uff09 \u3002\u53ef\u4ee5\u770b\u5230\u53f6\u5b50\u8282\u70b9\u7684\u4e2a\u6570\u662f\u56fa\u5b9a\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u4e3a\u4e86\u4f7f\u5f97\u6b65\u6570\u6700\u5c11\uff0c\u9700\u8981\u4f7f\u4e3b\u94fe\u4e0a\u70b9\u7684\u4e2a\u6570\u5c3d\u91cf\u591a\u3002\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u6c42\u51fa\u8fd9\u68f5\u6811\u7684\u76f4\u5f84\uff0c\u4ee5\u53ca\u53f6\u5b50\u8282\u70b9\u7684\u4e2a\u6570\uff0c\u6700\u540e\u5c31\u53ef\u4ee5\u6c42\u51fa\u6240\u9700\u8981\u7684\u5408\u5e76\u6b65\u6570\u4e86\u3002\u4f46\u662f\u6211\u4eec\u8981\u7279\u5224\u8fd9\u68f5\u6811\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\u7684\u60c5\u51b5\u3002\n\n\u6700\u540e\u5c31\u662f\u628a\u68ee\u6797\u5408\u5e76\u6210\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u6211\u4eec\u76f4\u63a5\u8ba9\u5404\u68f5\u6811\u7684\u4e3b\u94fe\u9996\u5c3e\u76f8\u63a5\uff0c\u8ba1\u7b97\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002\n\n### \u4ee3\u7801\uff08\u5199\u4e11\u4e86\uff0c\u5927\u81f4\u770b\u4e00\u4e0b\uff09:\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<vector>\n#include<cmath>\n#include<stack>\n#include<queue>\nusing namespace std;\nint dfn[2010],low[2010],bel[2010],siz[2010],maxx[2010],dep[2010];\nvector<int>side[2010],newside[2010];\nstack<int>sta;\nbool ins[2010];\nint ti,cnt;\nvoid tarjan(int x,int pre)\n{\n\tlow[x]=dfn[x]=++ti;\n\tins[x]=1;sta.push(x);\n\tfor(int i=0;i<side[x].size();i++)\n\t{\n\t\tint to=side[x][i];\n\t\tif(to==pre)continue;\n\t\tif(!dfn[to])\n\t\t{\n\t\t\ttarjan(to,x);\n\t\t\tlow[x]=min(low[x],low[to]);\n\t\t}\n\t\telse if(ins[to])low[x]=min(low[x],dfn[to]);\n\t}\n\tif(low[x]==dfn[x])\n\t{\n\t\tins[x]=0;\n\t\tbel[x]=++cnt;\n\t\tsiz[cnt]=1;\n\t\twhile(x!=sta.top())\n\t\t{\n\t\t\tins[sta.top()]=0;\n\t\t\tbel[sta.top()]=cnt;\n\t\t\t++siz[cnt];\n\t\t\tsta.pop();\n\t\t}\n\t\tsta.pop();\n\t}\n}\nint id,tot,maxxx,sum;\nvoid dfs(int x)\n{\n\t++sum;\n\tif(dep[x]>maxxx)\n\t{\n\t\tid=x;\n\t\tmaxxx=dep[x];\n\t}\n\tfor(int i=0;i<newside[x].size();i++)\n\t{\n\t\tint to=newside[x][i];\n\t\tif(dep[to])continue;\n\t\tdep[to]=dep[x]+1;\n\t\tdfs(to);\n\t\tdep[to]=0;\n\t}\n}\nvoid dfs2(int x)\n{\n\tif(dep[x]>dep[id])id=x;\n\tint qaq=0;\n\tfor(int i=0;i<newside[x].size();i++)\n\t{\n\t\tint to=newside[x][i];\n\t\tif(dep[to])continue;\n\t\t++qaq;\n\t\tdep[to]=dep[x]+1;\n\t\tdfs2(to);\n\t}\n\tif(qaq==0)++tot;\n}\nint main()\n{\n\tios::sync_with_stdio(0);\n\tint n,m,a,b,ans=0;cin>>n>>m;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcin>>a>>b;\n\t\tside[a].push_back(b);\n\t\tside[b].push_back(a);\n\t}\n\tfor(int i=1;i<=n;i++)\n\tif(!dfn[i])tarjan(i,0);\n\tfor(int x=1;x<=n;x++)\n\tfor(int i=0;i<side[x].size();i++)\n\t{\n\t\tint to=side[x][i];\n\t\tif(bel[to]!=bel[x])newside[bel[x]].push_back(bel[to]);\n\t}\n\tfor(int i=1;i<=cnt;i++)ans+=siz[i]-1;\n\t--ans;\n\tfor(int i=1;i<=cnt;i++)\n\t{\n\t\tif(!dep[i])\n\t\t{\n\t\t\tdep[i]=1;\n\t\t\tsum=0;maxxx=0;\n\t\t\tdfs(i);\n\t\t\tdep[i]=0;\n\t\t\tdep[id]=1;\n\t\t\ttot=1;maxxx=0;\n\t\t\tdfs2(id);\n\t\t\tif(tot!=1)ans+=sum-tot-dep[id]+2;\n\t\t\t++ans;\n\t\t}\n\t}\n\tcout<<ans;\n}\n```",
        "postTime": 1571836165,
        "uid": 89785,
        "name": "\u7a7a\u306e\u8ecc\u8de1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF51F \u3010Caterpillar\u3011"
    },
    {
        "content": "> IV. [CF51F Caterpillar](https://www.luogu.com.cn/problem/CF51F)\n>\n> [\u521d\u7ea7\u56fe\u8bba](https://www.cnblogs.com/alex-wei/p/basic_graph_theory.html)\u3002\n\n\u9898\u76ee\u8981\u6c42\u4e0d\u80fd\u5b58\u5728\u73af\uff0c\u6211\u4eec\u81ea\u7136\u5730\u60f3\u5230\u5c06\u6240\u6709 E-BCC \u7f29\u6210\u4e00\u4e2a\u70b9\u3002\u7f29\u70b9\u540e\u6574\u5f20\u56fe\u4f1a\u53d8\u6210\u4e00\u68f5\u68ee\u6797\uff0c\u5148\u5904\u7406\u6bcf\u4e00\u68f5\u6811\uff0c\u518d\u7528\u8fde\u901a\u5757\u6570\u91cf $-1$ \u6b21\u64cd\u4f5c\u5c06\u5b83\u4eec\u8fde\u8d77\u6765\u3002\n\n\u8003\u8651\u786e\u5b9a\u4e3b\u94fe\u540e\u5982\u4f55\u7528\u6700\u5c11\u7684\u64cd\u4f5c\u4f7f\u5f97\u4e00\u68f5\u6811\u53d8\u6210\u6bdb\u6bdb\u866b\u3002\n\n\u5bf9\u4e8e\u9664\u4e86\u4e3b\u94fe\u4ee5\u5916\u7684\u8282\u70b9\uff0c\u8003\u8651\u5b83\u662f\u5426\u4f5c\u4e3a\u6700\u7ec8\u6302\u5728\u4e3b\u94fe\u65c1\u8fb9\u7684\u53f6\u5b50\u3002\u5c06\u4e3b\u94fe\u770b\u6210\u6839\uff0c\u5177\u6709\u7956\u5148\u540e\u4ee3\u5173\u7cfb\u7684\u70b9\u5bf9\u4e0d\u80fd\u540c\u65f6\u88ab\u9009\u4e2d\u4f5c\u4e3a\u53f6\u5b50\uff0c\u56e0\u4e3a\u6b64\u65f6\u540e\u4ee3\u548c\u4e3b\u94fe\u4e4b\u95f4\u9694\u4e86\u4e00\u4e2a\u7956\u5148\uff0c\u8bf4\u660e\u5b83\u5230\u4e3b\u94fe\u7684\u8ddd\u79bb $\\geq 2$\uff0c\u4e0e\u9898\u610f\u4e0d\u7b26\u3002\n\n\u56e0\u6b64\u76f8\u5f53\u4e8e\u9009\u62e9\u6700\u591a\u7684\u8282\u70b9\u4f7f\u5f97\u8fd9\u4e9b\u8282\u70b9\u4e4b\u95f4\u6ca1\u6709\u7956\u5148\u540e\u4ee3\u5173\u7cfb\u3002\u6211\u4eec\u7684\u51b3\u7b56\u662f\u9009\u62e9\u6240\u6709\u53f6\u5b50\uff0c\u56e0\u4e3a\u82e5\u4e00\u4e2a\u975e\u53f6\u5b50\u88ab\u9009\uff0c\u6211\u4eec\u4e00\u5b9a\u53ef\u4ee5\u53d6\u6d88\u9009\u62e9\u5b83\uff0c\u5e76\u9009\u62e9\u5b83\u7684\u6240\u6709\u513f\u5b50\uff0c\u8fd9\u6837\u4e00\u5b9a\u66f4\u4f18\u3002\u4e0d\u65ad\u8c03\u6574\u5373\u53ef\u5f97\u5230\u8be5\u7ed3\u8bba\u3002\n\n\u56e0\u6b64\uff0c\u6700\u7ec8\u4fdd\u7559\u7684\u8282\u70b9\u4e3a\u6240\u6709\u4e3b\u94fe\u4e0a\u7684\u8282\u70b9\u548c\u6211\u4eec\u9009\u4e2d\u4f5c\u4e3a\u53f6\u5b50\u7684\u8282\u70b9\u3002\u8fd9\u610f\u5473\u7740\u5bf9\u4e8e\u67d0\u6761\u8def\u5f84 $P$ \u800c\u8a00\uff0c\u5b83\u4f5c\u4e3a\u4e3b\u94fe\u65f6\u5bf9\u5e94\u7684\u6700\u5c11\u64cd\u4f5c\u6b21\u6570\u4e3a $n - |P| - L$\uff0c\u5176\u4e2d $n$ \u662f\u6811\u7684\u5927\u5c0f\uff0c$L$ \u662f\u4e3b\u94fe\u5916\u53f6\u5b50\u8282\u70b9\u7684\u6570\u91cf\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u5f53 $P$ \u7684\u4e24\u7aef\u4e0d\u662f\u53f6\u5b50\u65f6\uff0c\u6211\u4eec\u603b\u53ef\u4ee5\u8c03\u6574\u4f7f\u5f97 $P$ \u7684\u4e24\u7aef\u662f\u53f6\u5b50\u4e14 $n - |P| - L$ \u4e0d\u53d8\u6216\u53d8\u5c0f\uff1a\u5411\u4efb\u610f\u4e00\u4e2a\u53ef\u4ee5\u5ef6\u4f38\u7684\u65b9\u5411\u5ef6\u4f38\uff0c\u6bcf\u6b21 $|P|$ \u589e\u52a0 $1$\uff0c\u4f46 $L$ \u8981\u4e48\u4e0d\u53d8\uff08\u5f53\u5ef6\u4f38\u7684\u70b9\u662f\u975e\u53f6\u5b50\uff09\uff0c\u8981\u4e48\u53ea\u51cf\u5c11 $1$\uff08\u5f53\u5ef6\u4f38\u7684\u70b9\u662f\u53f6\u5b50\uff09\u3002\n\n\u56e0\u6b64\uff0c\u8bbe\u539f\u56fe\u7684\u53f6\u5b50\u6570\u91cf\u4e3a $K$\uff0c\u5219\u64cd\u4f5c\u6b21\u6570\u4e3a $n - K + 2 - |P|$\u3002$n - K + 2$ \u662f\u5b9a\u503c\uff0c\u6211\u4eec\u5e0c\u671b $|P|$ \u6700\u5927\uff0c\u81ea\u7136\u662f\u9009\u53d6\u6811\u7684\u76f4\u5f84\uff0c\u540c\u65f6\u6070\u597d\u6ee1\u8db3\u4e86 $P$ \u7684\u4e24\u7aef\u662f\u53f6\u5b50\u7684\u8981\u6c42\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n)$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2e3 + 5;\nint n, m;\nvector<pair<int, int>> e[N];\nvector<int> g[N];\nint dn, dfn[N], low[N], top, stc[N], cn, col[N];\nvoid form(int id) {cn++; for(int x = 0; x != id; ) col[x = stc[top--]] = cn;}\nvoid tarjan(int id, int eid) {\n  stc[++top] = id, dfn[id] = low[id] = ++dn;\n  for(auto _ : e[id]) {\n    if(_.second == eid) continue;\n    int it = _.first;\n    if(!dfn[it]) {\n      tarjan(it, _.second), low[id] = min(low[id], low[it]);\n      if(low[it] > dfn[id]) form(it);\n    }\n    else low[id] = min(low[id], dfn[it]);\n  }\n  if(!eid) form(id);\n}\nint ans, comp, vis[N], dis[N];\nvector<int> cur;\nvoid find(int id) {\n  cur.push_back(id), vis[id] = 1;\n  for(int it : g[id]) if(!vis[it]) find(it);\n}\nvoid dfs(int id, int ff) {\n  dis[id] = dis[ff] + 1;\n  for(int it : g[id]) if(it != ff) dfs(it, id);\n}\nvoid deal(int id) {\n  if(g[id].empty()) return ans++, void();\n  cur.clear(), find(id);\n  dfs(id, 0);\n  int u = id, leaf = 0;\n  for(int it : cur) if(dis[it] > dis[u]) u = it;\n  dfs(u, 0);\n  for(int it : cur) if(dis[it] > dis[u]) u = it;\n  for(int it : cur) leaf += g[it].size() == 1;\n  ans += dis[u] + leaf - 2;\n}\nint main() {\n#ifdef ALEX_WEI\n  freopen(\"1.in\", \"r\", stdin);\n  freopen(\"1.out\", \"w\", stdout);\n#endif\n  cin >> n >> m;\n  for(int i = 1; i <= m; i++) {\n    int u, v;\n    scanf(\"%d%d\", &u, &v);\n    e[u].push_back({v, i});\n    e[v].push_back({u, i});\n  }\n  for(int i = 1; i <= n; i++) if(!dfn[i]) tarjan(i, 0);\n  for(int i = 1; i <= n; i++)\n    for(auto _ : e[i])\n      if(col[i] != col[_.first])\n        g[col[i]].push_back(col[_.first]);\n  for(int i = 1; i <= n; i++) if(!vis[i]) deal(i), comp++;\n  cout << n - ans + comp - 1 << endl;\n  return cerr << \"Time: \" << clock() << endl, 0;\n}\n/*\n2022/5/26\nstart coding at 6:41\nfinish debugging at 7:00\n*/\n```",
        "postTime": 1653555031,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "CF51F Caterpillar"
    },
    {
        "content": "\u6839\u636e\u6bdb\u6bdb\u866b\u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\u5728\u53cc\u8fde\u901a\u5206\u91cf\u4e2d\u7684\u70b9\u6211\u4eec\u90fd\u9700\u8981\u8fdb\u884c\u5408\u5e76\u64cd\u4f5c\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u8fdb\u884c$tarjan$\u7f29\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\uff0c\u4f7f\u539f\u56fe\u53d8\u6210\u4e00\u68f5\u6811\uff0c\u7f29\u70b9\u5bf9\u7b54\u6848\u4ea7\u751f\u7684\u8d21\u732e\u4e3a\u6bcf\u4e2a\u53cc\u8fde\u901a\u5206\u91cf\u7684$size-1$\n\n\u7136\u540e\u6211\u4eec\u7ee7\u7eed\u8003\u8651\u6811\u7684\u60c5\u51b5\uff0c\u53d1\u73b0\uff0c\u82e5\u8981\u5c06\u6811\u53d8\u6210\u6bdb\u6bdb\u866b\uff0c\u6700\u4f18\u7684\u64cd\u4f5c\u662f\u4fdd\u7559\u53f6\u5b50\u8282\u70b9\u548c\u9664\u53bb\u53f6\u5b50\u540e\u7684\u76f4\u5f84\uff0c\u4e8e\u662f\u6211\u4eec\u8bb0\u5f55\u53f6\u5b50\u8282\u70b9\u4e2a\u6570$le$\uff0c\u9664\u53bb\u53f6\u5b50\u540e\u7684\u76f4\u5f84\u957f\u5ea6$dist$\n\n\u4f46\u53ef\u80fd\u4e0d\u6b62\u4e0d\u6b62\u4e00\u68f5\u6811\uff0c\u7f29\u70b9\u540e\u53ef\u80fd\u4e3a\u68ee\u6797\uff0c\u6240\u4ee5\u6700\u540e\u8fd8\u9700\u5c06\u68ee\u6797\u5408\u5e76\uff0c\u6211\u4eec\u518d\u8bb0\u5f55\u6811\u7684\u4e2a\u6570$num$\n\n\u5219\u6700\u7ec8\u7b54\u6848\u4e3a$ans= \\displaystyle\\sum_{i=1}^{co\\_cnt}(siz[i]-1)+co\\_cnt-dist-le+num-1$\n\n\u5176\u4ed6\u5b9e\u73b0\u7684\u7ec6\u8282\u5c31\u770b\u4ee3\u7801\u5427\n\n$code:$\n```cpp\n#include<bits/stdc++.h>\n#define maxn 20010\n#define maxm 200010\nusing namespace std;\ntemplate<typename T> inline void read(T &x)\n{\n\tx=0;char c=getchar();bool flag=false;\n\twhile(!isdigit(c)){if(c=='-')flag=true;c=getchar();}\n\twhile(isdigit(c)){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n\tif(flag)x=-x;\n}\nint n,m,ans,num;\nstruct Edge\n{\n\tint x,y;\n}ed[maxm];\nstruct edge\n{\n\tint to,nxt;\n}e[maxm];\nint head[maxn],edge_cnt=1;\nvoid add(int from,int to)\n{\n\te[++edge_cnt]=(edge){to,head[from]};\n\thead[from]=edge_cnt;\n}\nint dfn[maxn],low[maxn],dfn_cnt;\nbool bri[maxn];\nvoid tarjan(int x,int ed)\n{\n\tdfn[x]=low[x]=++dfn_cnt;\n\tfor(int i=head[x];i;i=e[i].nxt)\n\t{\n\t\tint y=e[i].to;\n\t\tif(!dfn[y])\n\t\t{\n\t\t\ttarjan(y,i);\n\t\t\tlow[x]=min(low[x],low[y]);\n\t\t\tif(dfn[x]<low[y]) bri[i]=bri[i^1]=true;\n\t\t}\n\t\telse if(i!=(ed^1)) low[x]=min(low[x],dfn[y]);\n\t}\n}\nint co_cnt;\nint co[maxn],siz[maxn];\nvoid dfs_co(int x)\n{\n\tco[x]=co_cnt;\n\tsiz[co_cnt]++;\n\tfor(int i=head[x];i;i=e[i].nxt)\n\t{\n\t\tint y=e[i].to;\n\t\tif(co[y]||bri[i]) continue;\n\t\tdfs_co(y);\n\t}\n}\nvoid clear()\n{\n\tedge_cnt=1;\n\tmemset(head,0,sizeof(head));\n}\nint le;\nbool vis[maxn],leaf[maxn];\nvoid dfs_le(int x)\n{\n\tvis[x]=true;\n\tbool son=true;\n\tfor(int i=head[x];i;i=e[i].nxt)\n\t{\n\t\tint y=e[i].to;\n\t\tif(vis[y]) continue;\n\t\tson=false;\n\t\tdfs_le(y);\n\t}\n\tif(son)\n\t{\n\t\tleaf[x]=true;\n\t\tle++;\n\t}\n}\nint nd,maxd,dist;\nint dis[maxn];\nvoid dfs_find(int x,int fa,int de)\n{ \n    vis[x]=true; \n    if(de>=maxd)\n    {\n        maxd=de;\n        nd=x;\n\t}\n    for(int i=head[x];i;i=e[i].nxt)\n    {\n        int y=e[i].to,v=1;\n        if(y==fa||leaf[y]) continue;\n        dfs_find(y,x,de+v);\n    }\n}\t\nint main()\n{\n\tread(n),read(m);\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tint a,b;\n\t\tread(a),read(b);\n\t\tadd(a,b),add(b,a);\n\t\ted[i]=(Edge){a,b};\n\t}\n\tfor(int i=1;i<=n;++i)\n\t\tif(!dfn[i])\n\t\t\ttarjan(i,0);\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tif(!co[i])\n\t\t{\n\t\t\tco_cnt++;\n\t\t\tdfs_co(i);\n\t\t}\n\t}\n\tfor(int i=1;i<=co_cnt;++i)\n\t\tans+=siz[i]-1;\n\tclear();\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tint x=ed[i].x,y=ed[i].y;\n\t\tif(co[x]==co[y]) continue;\n\t\tadd(co[x],co[y]),add(co[y],co[x]);\n\t}\n\tfor(int i=1;i<=co_cnt;++i)\n\t{\n\t\tif(!vis[i])\n\t\t{\n\t\t\tdfs_le(i);\n\t\t\tnum++;\n\t\t\tint tot=0;\n\t\t\tfor(int p=head[i];p;p=e[p].nxt) tot++;\n\t\t\tif(tot==1)\n\t\t\t{\n\t\t\t\tleaf[i]=true;\n\t\t\t\tle++;\n\t\t\t}\n\t\t}\n\t}\n\tmemset(vis,0,sizeof(vis));\n\tfor(int i=1;i<=co_cnt;++i)\n\t{\n\t\tif(!vis[i]&&!leaf[i])\n\t\t{\n\t\t\tnd=maxd=0;\n\t\t\tdfs_find(i,0,1);\n\t\t\tdfs_find(nd,0,1);\n\t\t\tdist+=maxd;\n\t\t}\n\t}\n\tprintf(\"%d\",ans+co_cnt-dist-le+num-1);\n\treturn 0;\n}\n```\n",
        "postTime": 1575374252,
        "uid": 172489,
        "name": "lhm_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF51F \u3010Caterpillar\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF51F)\n\n\u6211\u4eec\u5c31\u5206\u6790\u4e0b\u9762\u8fd9\u4e00\u6bb5\u3002\n\n>\u4e00\u4e2a\u6bdb\u6bdb\u866b\u5b9a\u4e49\u4e3a \u4e00\u4e2a\u65e0\u5411\u8054\u901a\u65e0\u73af\u56fe\u4e0a \u5b58\u5728\u4e00\u6761\u8def\u5f84 $p$ \u4f7f\u5f97\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\u8ddd\u79bb $p$ \u7684\u8ddd\u79bb\u81f3\u591a\u4e3a $1$ \u3002 \u6bdb\u6bdb\u866b\u53ef\u4ee5\u5305\u542b\u81ea\u73af \uff08 \u4e00\u6761\u4ece\u4e00\u4e2a\u9876\u70b9\u8fde\u5411\u81ea\u5df1\u7684\u8fb9 \uff09\uff0c\u4f46\u662f\u4e0d\u53ef\u4ee5\u5305\u542b\u91cd\u8fb9\u3002\n\n\u201c\u65e0\u5411\u8fde\u901a\u65e0\u73af\u56fe\u201d\u5373\u4e00\u68f5\u65e0\u6839\u6811\u3002\u6811\u8981\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a\n\n1. \u6ca1\u6709\u73af\uff08\u81ea\u73af\u9664\u5916\uff09\n2. \u8fde\u901a\n\n\u5148\u770b\u7b2c\u4e00\u4e2a\u8981\u6c42\u3002\u65e2\u7136\u8981\u6ca1\u6709\u73af\uff0c\u90a3\u5c31\u8981\u628a\u6240\u6709\u7684\u73af\uff0c\u5373\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u5168\u90fd\u5408\u5e76\u3002\u5982\u679c\u8fd9\u4e2a\u8fb9\u53cc\u6709\u4e24\u4e2a\u70b9\uff0c\u5c31\u4f1a\u51fa\u73b0\u91cd\u8fb9\uff0c\u6240\u4ee5\u53ea\u80fd\u5408\u5e76\u6210\u4e00\u4e2a\u70b9\u3002\n\n\u90e8\u5206\u4ee3\u7801\uff1a\n```cpp\n// 1. \u8fb9\u53cc\u8fde\u901a\u5206\u91cf\nint dfn[MAXN],low[MAXN],sum,cnt=0;\nint in[MAXN];//in\u8868\u793a\u5728\u54ea\u4e2a\u8fb9\u53cc\nstack<int> s;\nvoid dfs(int x,int fa){//\u6b63\u5e38\u8fb9\u53cc\n\tdfn[x]=low[x]=++sum;\n\ts.push(x);\n\tfor(auto i:V[x]){\n\t\tif(!dfn[i]){\n\t\t\tdfs(i,x);\n\t\t\tlow[x]=min(low[x],low[i]);\n\t\t}else if(fa!=i&&dfn[i]<dfn[x]) low[x]=min(low[x],dfn[i]);\n\t}\n\tif(low[x]==dfn[x]){\n\t\tcnt++;//\u65b0\u589e\u4e00\u4e2a\n\t\tin[x]=cnt;\n\t\tint v=s.top();\n\t\ts.pop();\n\t\twhile(v!=x){\n\t\t\tin[v]=cnt;//\u8bb0\u5f55\u5c5e\u4e8e\u54ea\u4e2a\u8fb9\u53cc\n\t\t\tv=s.top();\n\t\t\ttot++;//\u5408\u5e76\u6b21\u6570\u591a\u4e86\u4e00\u4e2a\n\t\t\ts.pop();\n\t\t}\n\t}\n}\n```\n\u4e8e\u662f\uff0c\u73b0\u5728\u6ee1\u8db3\u4e86\u201c\u65e0\u73af\u201d\u3002\n\n\u63a5\u4e0b\u6765\uff0c\u73b0\u5728\u6574\u5f20\u56fe\u662f\u68ee\u6797\uff0c\u6211\u4eec\u5148\u5206\u6790\u4e00\u68f5\u6811\u7684\u60c5\u51b5\u3002\n\n\u5bf9\u4e8e\u4e00\u68f5\u6811\uff0c\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u53f6\u5b50\u8282\u70b9\u80af\u5b9a\u8981\u7528\u6765\u5408\u5e76\u5176\u4ed6\u8282\u70b9\uff0c\u6240\u4ee5\u5148\u5ffd\u7565\u5b83\u4eec\u3002\n\n\u5728\u5269\u4e0b\u6765\u7684\u8fd9\u68f5\u6811\u4e0a\uff0c\u8282\u70b9\u5206\u4e3a\u201c\u5728\u8def\u5f84\u4e0a\u201d\u548c\u201c\u4e0d\u5728\u8def\u5f84\u4e0a\u201d\u3002\u201c\u4e0d\u5728\u8def\u5f84\u4e0a\u201d\u53c8\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\u7684\u70b9\u5c31\u9700\u8981\u88ab\u5408\u5e76\u6389\u3002\n\n\u60f3\u8981\u8ba9\u88ab\u5408\u5e76\u7684\u5c3d\u91cf\u5c11\uff0c\u5c31\u9700\u8981\u8ba9\u8def\u5f84\u5c3d\u91cf\u957f\u3002\n\n\u4e00\u68f5\u6811\u4e0a\u6700\u957f\u7684\u8def\u5f84\u662f\u4ec0\u4e48\uff1f\u76f4\u5f84\uff01\n\n\u6ce8\u610f\u5230\u76f4\u5f84\u4e24\u5934\u90fd\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u6240\u4ee5\u5408\u5e76\u7684\u6b21\u6570\u662f\u8981\u88ab\u5408\u5e76\u7684\u8282\u70b9\u4e5f\u5c31\u662f\uff1a\n\n\u603b\u8ba1\u70b9\u6570-(\u76f4\u5f84 $+$ \u5ea6\u4e3a $1$ \u7684\u8282\u70b9\u4e2a\u6570 $-2$)\n\n\u8fd9\u662f\u4e00\u68f5\u6811\u7684\u60c5\u51b5\u3002\u4e0d\u8fc7\u8981\u6ce8\u610f\uff0c\u5982\u679c\u6811\u53ea\u6709\u4e00\u4e2a\u70b9\uff0c\u90a3\u4e48\u5c31\u4e0d\u9700\u8981\u5408\u5e76\u3002\n\n\u90a3\u68ee\u6797\u5462\uff1f\u6bcf\u4e00\u68f5\u6811\u90fd\u627e\u51fa\u76f4\u5f84\uff0c\u7136\u540e\u9996\u5c3e\u76f8\u8fde\u5373\u53ef\u3002\u6240\u4ee5\u7b54\u6848\u662f\u6700\u5f00\u59cb\u7f29\u8fb9\u53cc\u7684\u5408\u5e76\u6b21\u6570 $+$ \u6bcf\u4e00\u68f5\u6811\u7684\u5408\u5e76\u6b21\u6570 $+$ \u6811\u7684\u68f5\u6570 $-1$\u3002\n\n\u603b\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define MAXN 2005\n// 0. \u6574\u4f53\u53d8\u91cf\nint n,m;\nint ans=0,tot=0;\nvector<int> V[MAXN],G[MAXN]; \n// 1. \u8fb9\u53cc\u8fde\u901a\u5206\u91cf\nint dfn[MAXN],low[MAXN],sum,cnt=0;\nint in[MAXN];\nstack<int> s;\nvoid dfs(int x,int fa){\n\tdfn[x]=low[x]=++sum;\n\ts.push(x);\n\tfor(auto i:V[x]){\n\t\tif(!dfn[i]){\n\t\t\tdfs(i,x);\n\t\t\tlow[x]=min(low[x],low[i]);\n\t\t}else if(fa!=i&&dfn[i]<dfn[x]) low[x]=min(low[x],dfn[i]);\n\t}\n\tif(low[x]==dfn[x]){\n\t\tcnt++;\n\t\tin[x]=cnt;\n\t\tint v=s.top();\n\t\ts.pop();\n\t\twhile(v!=x){\n            in[v]=cnt;\n\t\t\tv=s.top();\n            tot++;\n\t\t\ts.pop();\n\t\t}\n\t}\n}\n// 2. \u91cd\u6784\u6811\nvoid rebuild(){\n    for(int i=1,t;i<=n;i++){\n        t=in[i];\n        for(auto v:V[i]){//\u548c\u6bcf\u4e00\u4e2a\u5bf9\u5e94\u7684\u70b9\u8fde\u8fb9\uff08\u6709\u91cd\u8fb9\u6ca1\u5173\u7cfb\uff09\n            if(t==in[v]) continue;\n            G[t].push_back(in[v]);\n            G[in[v]].push_back(t);\n        }\n    }\n    n=cnt;\n}\n// 3. \u6811\u7684\u76f4\u5f84\nint L,tmp;\nbool vis[100005],vis2[100005];\nvoid dfs2(int now,int step){\n\tif(step>L) L=step,tmp=now;\n\tvis[now]=vis2[now]=1;//vis2\u8868\u793a\u8fd9\u4e2a\u70b9\u6240\u5728\u7684\u6811\u662f\u5426\u8bbf\u95ee\u8fc7\n\tfor(auto i:G[now]){\n\t\tif(!vis[i]) dfs2(i,step+1);\n\t}\n\treturn ;\n}\nint get_diameter(int root){\n    memset(vis,0,sizeof(vis));\n    L=-1;\n\tdfs2(root,1);//\u6ce8\u610f\u662f1\n\tmemset(vis,0,sizeof(vis));\n\tdfs2(tmp,1);\n    return L;\n}\n// 4. \u8ba1\u7b97\u5ea6\u4e3a 1 \u7684\u8282\u70b9\u6570\u548c\u603b\u7ed3\u70b9\u6570\nint find_D1(int root,int fa){\n    int ans=0,cnt=0;\n    vis[root]=1;\n    for(auto i:G[root]){\n        if(!vis[i]) ans+=find_D1(i,root),cnt++;\n    }\n    return ans+(cnt==(fa==-1));\n}\nint find_ALL(int root){\n    int ans=1;\n    vis[root]=1;\n    for(auto i:G[root]){\n        if(!vis[i]) ans+=find_ALL(i);\n    }\n    return ans;\n}\n// 5. \u8ba1\u7b97\nint main(){\n    // 5.1. \u8f93\u5165\n    cin>>n>>m;\n    int x,y;\n    for(int i=1;i<=m;i++){\n        cin>>x>>y;\n        V[x].push_back(y);\n        V[y].push_back(x);\n    }\n    // 5.2. \u5408\u5e76\u8fb9\u53cc\u8054\u901a\u5206\u91cf\uff0c\u91cd\u6784\u6811\n    for(int i=1;i<=n;i++){\n        if(!dfn[i]) dfs(i,-1);\n    }\n    rebuild();\n    // 5.3. \u5bf9\u4e8e\u6bcf\u4e00\u68f5\u6811\n    for(int Rt=1;Rt<=n;Rt++){\n        if(!vis2[Rt]){\n            // 5.3.1. \u8ba1\u7b97\u76f4\u5f84\u548c\u5ea6\u4e3a 1 \u7684\u8282\u70b9\u6570\u548cN\n            int _L=get_diameter(Rt);\n            memset(vis,0,sizeof(vis));\n            int _D1=find_D1(Rt,-1);\n            memset(vis,0,sizeof(vis));\n            int _N=find_ALL(Rt);\n            // 5.3.2. \u4e00\u68f5\u6811\u7684ans\uff1a`N-(\u76f4\u5f84\u957f\u5ea6+\u5ea6\u4e3a1\u7684\u8282\u70b9\u6570-2)`\n            tot++;\n            if(_N==1) continue;//\u6ce8\u610f\u7279\u5224\n\t\t\tans+=_N-(_L+_D1-2);\n        }\n    }\n    // 5.4. \u68ee\u6797\uff1a`\u6bcf\u4e00\u68f5\u6811\u7684ans+\u6811\u7684\u6570\u91cf-1`\n    cout<<ans+tot-1<<endl;\n    return 0;\n}\n```",
        "postTime": 1658136208,
        "uid": 320423,
        "name": "CaCa_Condy",
        "ccfLevel": 7,
        "title": "CF51F Caterpillar \u9898\u89e3"
    },
    {
        "content": "\u4e0d\u80fd\u6709\u91cd\u8fb9\u8fd9\u4e2a\u6761\u4ef6\u5f88\u6709\u8da3\u554a\u3002\u5c31\u662f\u8ba4\u4e3a\u91cd\u8fb9\u4e5f\u7b97\u73af\uff0c\u800c\u4e14\u628a\u91cd\u8fb9\u5b9a\u4e49\u6210\u73af\u786e\u5b9e\u662f\u6700\u5408\u7406\u7684\u3002\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e2a\u73af\uff0c\u4f60\u53ea\u8981\u4e0d\u628a\u8fd9\u4e2a\u73af\u4e0a\u6240\u6709\u70b9\u5e76\u6210\u4e00\u4e2a\u70b9\uff0c\u8fd9\u4e2a\u73af\u5c31\u6c38\u8fdc\u5b58\u5728\u3002\u6240\u4ee5\u9700\u8981\u5148 eDCC \u7f29\u70b9\uff08\u628a\u6bcf\u4e2a DCC \u5408\u5e76\u6210\u4e00\u4e2a\u70b9\uff09\uff0c\u5f97\u5230\u4e00\u4e2a\u68ee\u6797\u3002\n\n\u4e0b\u9762\u8003\u8651\u5bf9\u4efb\u610f\u4e00\u68f5\u6811\uff0c\u600e\u4e48\u7528\u6700\u5c11\u7684\u5408\u5e76\u6b21\u6570\u5408\u5e76\u51fa\u4e00\u4e2a\u6bdb\u6bdb\u866b\u3002\u8003\u8651\u6700\u7ec8\u6bdb\u6bdb\u866b\u7684\u4e00\u4e2a\u4e3b\u5e72\u8def\u5f84\uff0c\u90a3\u4e48\u5c06\u8fd9\u4e2a\u8def\u5f84\u8fd8\u539f\u4e4b\u540e\u957f\u5ea6\u4e00\u5b9a\u662f\u4e0d\u53d8\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e0d\u4f1a\u901a\u8fc7\u5408\u5e76\u8def\u5f84\u4e0a\u7684\u70b9\u6765\u9020\u4e3b\u5e72\u8def\u5f84\uff0c\u56e0\u4e3a\u8fd9\u4e0d\u8d77\u4e1d\u6beb\u4f5c\u7528\u3002\n\n\u90a3\u73b0\u5728\u94a6\u5b9a\u4e00\u6761\u8def\u5f84\uff0c\u770b\u600e\u4e48\u80fd\u628a\u6240\u6709\u70b9\u90fd\u538b\u5230\u79bb\u8def\u5f84\u53ea\u6709 $1$ \u8ddd\u79bb\u3002\u624b\u73a9\u4e00\u6ce2\u77e5\u9053\u6700\u4f18\u65b9\u6848\u662f\u628a\u6240\u6709\u4e0d\u5728\u8def\u5f84\u4e0a\u7684\u53f6\u5b50\u4fdd\u7559\u4e0b\u6765\uff0c\u5176\u5b83\u70b9\u5168\u90e8\u574d\u584c\u5230\u8def\u5f84\u4e0a\u3002\u8fd9\u6837\u64cd\u4f5c\u6b21\u6570\u662f $n-(len+leaf-2)$\uff0c\u5176\u4e2d $len$ \u662f\u94a6\u5b9a\u8def\u5f84\u957f\u5ea6\uff0c$leaf$ \u662f\u53f6\u5b50\u4e2a\u6570\u3002\u53ea\u6709 $len$ \u662f\u53d8\u91cf\uff0c\u627e\u76f4\u5f84\u5c31\u597d\u4e86\uff08bzd \u4e3a\u5565\u8fd9\u9898 $n$ \u53ea\u6709 $2000$\uff1f\u6b63\u597d\u6211\u53ef\u4ee5\u6284\u4e4b\u524d\u5199\u8fc7\u7684 eDCC \u7f29\u70b9 + LCA \u7684\u677f\u5b50\u66b4\u529b\u679a\u4e3e\u8def\u5f84\uff0c\u5e73\u65b9\u5bf9\u6570\uff08\uff09\uff09\u3002\n\n\u5bf9\u591a\u4e2a\u8fde\u901a\u5206\u91cf\uff08\u68ee\u6797\u91cc\u7684\u591a\u4e2a\u6811\uff09\uff0c\u53ea\u9700\u8981\u4e24\u4e24\u5408\u5e76\u5373\u53ef\uff0c\u64cd\u4f5c\u6b21\u6570 $c-1$\uff0c\u5176\u4e2d $c$ \u662f\u6811\u7684\u68f5\u6811\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define pb push_back\nconst int N=200010,LOG_N=20;\nint n,m,qu;\nvector<int> nei[N],rv[N];\nvector<bool> brg[N];\nint dfn[N],low[N],nowdfn;\nvoid tar(int x=1,int fa=0){//to modify\n\tdfn[x]=low[x]=++nowdfn;\n\tfor(int i=0;i<nei[x].size();i++){\n\t\tint y=nei[x][i];\n\t\tif(y==fa){fa=-1;continue;}\n\t\tif(!dfn[y]){\n\t\t\ttar(y,x),low[x]=min(low[x],low[y]);\n\t\t\tif(dfn[x]<low[y])brg[x][i]=brg[y][rv[x][i]]=true;\n\t\t}\n\t\telse low[x]=min(low[x],dfn[y]);\n\t}\n}\nint cnt;\nint cid[N];\nvoid dfs(int x=1){\n\tcid[x]=cnt;\n\tfor(int i=0;i<nei[x].size();i++)if(!brg[x][i]){\n\t\tint y=nei[x][i];\n\t\tif(!cid[y])dfs(y);\n\t}\n}\nvector<int> cnei[N];\nint fa[N][LOG_N],dep[N];\nvector<int> cc;\nvoid dfs0(int x){\n\tcc.pb(x);\n\tfor(int i=1;i<LOG_N;i++)fa[x][i]=fa[fa[x][i-1]][i-1];\n\tfor(int i=0;i<cnei[x].size();i++){\n\t\tint y=cnei[x][i];\n\t\tif(y==fa[x][0])continue;\n\t\tfa[y][0]=x;\n\t\tdep[y]=dep[x]+1;\n\t\tdfs0(y);\n\t}\n}\nint lca(int x,int y){\n\tif(dep[x]<dep[y])swap(x,y);\n\tfor(int i=LOG_N-1;~i;i--)if(dep[fa[x][i]]>=dep[y])x=fa[x][i];\n\tif(x==y)return x;\n\tfor(int i=LOG_N-1;~i;i--)if(fa[x][i]!=fa[y][i])x=fa[x][i],y=fa[y][i];\n\treturn fa[x][0];\n}\nint main(){\n\tcin>>n>>m;\n\twhile(m--){\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tnei[x].pb(y),nei[y].pb(x);\n\t\trv[x].pb(nei[y].size()-1),rv[y].pb(nei[x].size()-1);\n\t\tbrg[x].pb(false),brg[y].pb(false);\n\t}\n\tfor(int i=1;i<=n;i++)if(!dfn[i])tar(i);\n\tfor(int i=1;i<=n;i++)if(!cid[i])cnt++,dfs(i);\n\tfor(int i=1;i<=n;i++)for(int j=0;j<nei[i].size();j++){\n\t\tint x=nei[i][j];\n\t\tif(cid[i]!=cid[x])cnei[cid[i]].pb(cid[x]);\n\t}\n\tfor(int i=1;i<=cnt;i++){\n\t\tvector<int> &v=cnei[i];\n\t\tsort(v.begin(),v.end());\n\t\tv.resize(unique(v.begin(),v.end())-v.begin());\n\t}\n\tint final=-1;\n\tfor(int i=1;i<=n;i++)if(!dep[i]){\n\t\tdep[i]=1;\n\t\tcc.clear();\n\t\tdfs0(i);\n\t\tif(cc.size()==1)continue;\n\t\tint ans=0,leaf=0;\n\t\tfor(int j=0;j<cc.size();j++)leaf+=cnei[cc[j]].size()==1;\n\t\tfor(int ii=0;ii<cc.size();ii++)for(int jj=0;jj<cc.size();jj++){\n\t\t\tint i=cc[ii],j=cc[jj],k=lca(i,j);\n\t\t\tif(cnei[i].size()==1&cnei[j].size()==1&&i!=j)ans=max(ans,dep[i]+dep[j]-dep[k]-dep[fa[k][0]]+(leaf-2));\n\t\t}\n\t\tfinal+=-ans+1;\n\t}\n\tcout<<n+final;\n\treturn 0;\n}\n```",
        "postTime": 1628127125,
        "uid": 138400,
        "name": "chenxia25",
        "ccfLevel": 9,
        "title": "CF51F - Caterpillar \u9898\u89e3"
    }
]