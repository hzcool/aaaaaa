[
    {
        "content": "### [CF1824E LuoTianyi and Cartridge](https://www.luogu.com.cn/problem/CF1824E)\n\n$\\min(A, C)$ \u4e0d\u597d\u5904\u7406\uff0c\u679a\u4e3e\u4e4b\uff0c\u8bbe\u4e3a $x$\u3002\u79f0\u4e00\u4e2a\u70b9\u6216\u4e00\u6761\u8fb9\u5408\u6cd5\u5f53\u4e14\u4ec5\u5f53 $a_i$ \u6216 $c_i$ \u4e0d\u5c0f\u4e8e $x$\u3002\n\n\u5148\u8003\u8651\u5bf9\u67d0\u4e2a $v$ \u6c42\u7b54\u6848\u3002\u663e\u7136\uff0c\u82e5\u4e00\u6761\u8fb9\u4e00\u4fa7\u6ca1\u6709\u88ab\u9009\u4e2d\u7684\u70b9\uff0c\u5219\u8be5\u8fb9\u4e00\u5b9a\u4e0d\u4f1a\u88ab\u9009\u4e2d\u3002\u53cd\u4e4b\uff0c\u82e5\u6bcf\u6761\u88ab\u9009\u4e2d\u7684\u8fb9\u4e24\u4fa7\u5747\u6709\u88ab\u9009\u4e2d\u7684\u70b9\uff0c\u5219\u4e00\u5b9a\u5408\u6cd5\uff1a\u6309\u4efb\u610f\u987a\u5e8f\u52a0\u5165\u9009\u4e2d\u7684\u8fb9\uff0c\u5176\u4e24\u4fa7\u5fc5\u7136\u5b58\u5728\u88ab\u9009\u62e9\u7684 $u, v$ \u4e0d\u8fde\u901a\uff0c\u5426\u5219 $T'$ \u5df2\u7ecf\u5f62\u6210\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u77db\u76fe\u3002\n\n\u5c06\u4e0d\u5408\u6cd5\u7684\u8fb9\u4e24\u7aef\u5408\u5e76\u8d77\u6765\uff0c\u5f97\u5230\u4e00\u68f5\u6811 $G$\uff0c\u6811\u4e0a\u6bcf\u6761\u8fb9\u4ee3\u8868\u4e00\u6761\u5408\u6cd5\u8fb9\uff0c\u6bcf\u4e2a\u70b9\u4ee3\u8868\u82e5\u5e72\u4e2a\u70b9\uff08\u53ef\u4ee5\u5168\u90fd\u662f\u975e\u6cd5\u70b9\uff09\uff0c\u4e14\u53f6\u5b50\u5bf9\u5e94\u81f3\u5c11\u4e00\u4e2a\u5408\u6cd5\u70b9\uff1a\u82e5\u53f6\u5b50\u4e0d\u5bf9\u5e94\u4efb\u4f55\u5408\u6cd5\u70b9\uff0c\u5219\u5c06\u5176\u548c\u4e0e\u5176\u76f8\u8fde\u7684\u552f\u4e00\u7684\u8fb9\u5220\u53bb\u4e0d\u5f71\u54cd\u7b54\u6848\uff0c\u56e0\u4e3a\u8be5\u8fb9\u4e0d\u53ef\u80fd\u88ab\u9009\u4e2d\u3002\n\n\u6b64\u5916\uff0c\u4e00\u4e2a\u53f6\u5b50\u81f3\u5c11\u6709\u4e00\u4e2a\u70b9\u88ab\u9009\u4e2d\uff0c\u5426\u5219\u4e0e\u5176\u76f8\u8fde\u7684\u552f\u4e00\u7684\u8fb9\u65e0\u6cd5\u88ab\u9009\u4e2d\uff0c\u5f80 $T'$ \u52a0\u5165\u8be5\u8fb9\u548c\u53f6\u5b50\u5185\u4efb\u610f\u5408\u6cd5\u70b9\uff0c\u65b9\u6848\u4ecd\u5408\u6cd5\u4e14\u6743\u503c\u589e\u5927\u3002\n\n\u56e0\u6b64\uff0c\u5bf9\u4e8e\u56fa\u5b9a\u7684 $x = \\min(A, C)$\uff0c\u53ef\u4ee5\u7b97\u51fa $T'$ \u7684\u8fb9\u6570 $e = \\min(|V| - 1, |E|)$\uff0c\u5176\u4e2d $V, E$ \u662f\u5220\u53bb\u4e86\u4e0d\u5408\u6cd5\u7684\u5143\u7d20\u7684\u70b9\u96c6\u548c\u8fb9\u96c6\u3002\n\n- \u9009\u70b9\uff1a\u9009\u62e9\u6240\u6709\u53f6\u5b50\u7684\u6743\u503c\u6700\u5927\u7684\u5408\u6cd5\u70b9\uff0c\u4ee5\u53ca\u5176\u5b83\u6240\u6709\u5408\u6cd5\u70b9\u7684\u6743\u503c\u524d \u201c$e + 1$ \u51cf\u53bb\u53f6\u5b50\u6570\u91cf\u201d \u5927\u7684\u70b9\u3002\n- \u9009\u8fb9\uff1a\u9009\u62e9\u6743\u503c\u524d $e$ \u5927\u7684\u5408\u6cd5\u8fb9\u3002\n\n\u8003\u8651\u5b9e\u65f6\u7ef4\u62a4 $G$\uff1a\n\n- \u5bf9\u6bcf\u4e2a\u70b9 $u\\in V_G$\uff0c\u8bb0\u5f55 $S_u$ \u8868\u793a\u5bf9\u5e94\u6240\u6709\u5408\u6cd5\u70b9\u7684\u6743\u503c\u3002\n- \u5bf9\u6bcf\u4e2a\u70b9 $u\\in V_G$\uff0c\u8bb0\u5f55 $X_u$ \u8868\u793a\u5b83\u5728\u6811\u4e0a\u7684\u6240\u6709\u90bb\u8fb9\u3002\n- \u7ef4\u62a4\u6240\u6709\u53f6\u5b50\u6743\u503c\u6700\u5927\u7684\u5408\u6cd5\u70b9\u7684\u70b9\u6743\u4e4b\u548c $L$\u3002\n- \u7ef4\u62a4\u6240\u6709\u5408\u6cd5\u8fb9\u6743\u503c\u6784\u6210\u7684\u6743\u503c\u7ebf\u6bb5\u6811 $T_D$\u3002\n- \u7ef4\u62a4\u6240\u6709\u5408\u6cd5\u70b9\u53bb\u6389\u6bcf\u4e2a\u53f6\u5b50\u6743\u503c\u6700\u5927\u7684\u5408\u6cd5\u70b9\u7684\u70b9\u6743\u6784\u6210\u6743\u503c\u7ebf\u6bb5\u6811 $T_B$\u3002\n- \u4e00\u4e2a\u70b9\u662f\u53f6\u5b50\u5f53\u4e14\u4ec5\u5f53 $|X_u| = 1$\u3002\n\n\u8003\u8651 $x$ \u5728\u589e\u5927\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u5220\u53bb\u4e00\u4e9b\u8fb9\u6216\u4e00\u4e9b\u70b9\u3002  \n\n\u5bf9\u4e8e\u5220\u8fb9\uff0c\u76f4\u63a5\u5408\u5e76\u4e24\u4fa7\u7684\u70b9\uff0c\u6ce8\u610f $S$ \u548c $X$ \u9700\u8981\u542f\u53d1\u5f0f\u5408\u5e76\u3002\n\n\u5bf9\u4e8e\u5220\u70b9\uff0c\u82e5\u5220\u53bb\u540e\u5f97\u5230\u4e86\u7a7a\u53f6\u5b50\uff0c\u5219\u5220\u9664\u8be5\u53f6\u5b50\u548c\u4e0e\u5176\u76f8\u8fde\u7684\u552f\u4e00\u7684\u8fb9\u3002\u6ce8\u610f\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u80fd\u5f15\u53d1\u8fde\u9501\u53cd\u5e94\uff08\u4e00\u4e2a\u7a7a\u5fc3\u975e\u53f6\u5b50\u662f\u5408\u6cd5\u7684\uff0c\u6240\u4ee5\u5220\u8fb9\u53ef\u80fd\u5bfc\u81f4\u67d0\u4e2a\u7a7a\u5fc3\u975e\u53f6\u5b50\u53d8\u6210\u7a7a\u5fc3\u53f6\u5b50\uff09\uff0c\u7528\u961f\u5217\u7ef4\u62a4\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n\\log ^ 2 n)$ \u6216 $\\mathcal{O}(n\\log n)$\uff08\u7ebf\u6bb5\u6811\u5408\u5e76\u7ef4\u62a4 $S$\uff0c$X$ \u53ef\u4ee5\u989d\u5916\u7ef4\u62a4\u5ea6\u6570\u5e76\u61d2\u60f0\u5220\u9664\u5c06 `set` \u6362\u6210 `vector`\uff09\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing pii = pair<int, int>;\nusing pll = pair<ll, ll>;\nusing ull = unsigned long long;\n\nmt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());\n\nconstexpr int mod = 1e9 + 7;\nvoid addt(int &x, int y) {x += y, x >= mod && (x -= mod);}\nint add(int x, int y) {return x += y, x >= mod && (x -= mod), x;}\nint ksm(int a, int b) {\n  int s = 1;\n  while(b) {\n    if(b & 1) s = 1ll * s * a % mod;\n    a = 1ll * a * a % mod, b >>= 1;\n  }\n  return s;\n}\n\nbool Mbe;\nconstexpr int N = 2e5 + 5;\n\nstruct SegTree {\n  int cnt[N << 2];\n  ll val[N << 2];\n  void modify(int l, int r, int p, int x, int v) {\n    cnt[x] += v, val[x] += v * p;\n    if(l == r) return;\n    int m = l + r >> 1;\n    if(p <= m) modify(l, m, p, x << 1, v);\n    else modify(m + 1, r, p, x << 1 | 1, v);\n  }\n  ll binary(int l, int r, int x, int c) {\n    if(l == r) return 1ll * c * l;\n    int m = l + r >> 1;\n    if(cnt[x << 1 | 1] >= c) return binary(m + 1, r, x << 1 | 1, c);\n    return val[x << 1 | 1] + binary(l, m, x << 1, c - cnt[x << 1 | 1]);\n  }\n} B, D;\n\nll ans, val, L;\nbool ban[N];\nint a[N], b[N], c[N], d[N];\nint n, p[N];\n\nint fa[N];\nset<pii> g[N];\nmultiset<int> S[N];\nint find(int x) {return fa[x] == x ? fa[x] : fa[x] = find(fa[x]);}\nvoid dele(int id, int u, int v) {\n  g[u].erase(g[u].lower_bound({id, 0}));\n  g[v].erase(g[v].lower_bound({id, 0}));\n  ban[id] = 1;\n  D.modify(1, N, d[id], 1, -1);\n}\n\nstruct edge {\n  int u, v, id;\n  bool operator < (const edge &x) const {\n    return c[id] < c[x.id];\n  }\n} e[N];\n\nvoid solve() {\n  cin >> n;\n  for(int i = 1; i <= n; i++) cin >> a[i];\n  for(int i = 1; i <= n; i++) {\n    cin >> b[i], S[i].insert(b[i]);\n    val += b[i], B.modify(1, N, b[i], 1, 1);\n    ans = max(ans, 1ll * a[i] * b[i]);\n  }\n  for(int i = 1; i <= n; i++) fa[i] = p[i] = i;\n  for(int i = 1; i < n; i++) {\n    int x, y;\n    cin >> x >> y >> c[i] >> d[i];\n    g[x].insert({i, y});\n    g[y].insert({i, x});\n    e[i] = {x, y, i};\n    val += d[i], D.modify(1, N, d[i], 1, 1);\n  }\n  for(int i = 1; i <= n; i++) {\n    if(g[i].size() > 1) continue;\n    B.modify(1, N, b[i], 1, -1), L += b[i];\n  }\n  sort(e + 1, e + n);\n  sort(p + 1, p + n + 1, [&](int x, int y) {return a[x] < a[y];});\n  for(int i = 1, pe = 1, pid = 1; i < N; i++) {\n    int upd = 0;\n    auto pro = [&](int id, int coe) {\n      if(g[id].size() != 1) return;\n      L += coe * *--S[id].end();\n      B.modify(1, N, *--S[id].end(), 1, -coe);\n    };\n    while(pe < n && c[e[pe].id] < i) {\n      int id = e[pe].id, x = find(e[pe].u), y = find(e[pe].v); pe++;\n      if(ban[id]) continue;\n      upd = 1, pro(x, -1), pro(y, -1), dele(id, x, y);\n      if(S[x].size() < S[y].size()) swap(S[x], S[y]);\n      if(g[x].size() < g[y].size()) swap(g[x], g[y]);\n      for(int it : S[y]) S[x].insert(it);\n      for(auto it : g[y]) g[x].insert(it);\n      fa[y] = x, pro(x, 1);\n    }\n    while(pid <= n && a[p[pid]] < i) {\n      int id = p[pid], ff = find(id); pid++;\n      upd = 1, pro(ff, -1);\n      S[ff].erase(S[ff].find(b[id]));\n      B.modify(1, N, b[id], 1, -1);\n      if(S[ff].empty() && g[ff].size() == 1) {\n        queue<int> q;\n        q.push(ff);\n        while(!q.empty()) {\n          int t = q.front();\n          q.pop();\n          for(auto it = g[t].begin(); it != g[t].end(); ) {\n            auto nxt = it; nxt++;\n            int id = it->first, to = find(it->second);\n            dele(id, t, to);\n            if(g[to].size() == 1) {\n              if(S[to].empty()) q.push(to); // id -> to\n              else pro(to, 1); // id -> to\n            }\n            it = nxt;\n          }\n        }\n      }\n      else pro(ff, 1);\n    }\n    if(!D.cnt[1]) break;\n    if(upd) {\n      int E = D.cnt[1], V = n - pid + 1;\n      int m = min(E, V - 1), mm = V - B.cnt[1];\n      val = L;\n      val += D.binary(1, N, 1, m);\n      val += B.binary(1, N, 1, m + 1 - mm);\n    }\n    ans = max(ans, i * val);\n  }\n  cout << ans << \"\\n\";\n}\n\nbool Med;\nint main() {\n  fprintf(stderr, \"%.3lf MB\\n\", (&Mbe - &Med) / 1048576.0);\n  ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n  int T = 1;\n  // cin >> T;\n  while(T--) solve();\n  cerr << 1e3 * clock() / CLOCKS_PER_SEC << \" ms\\n\";\n  return 0;\n}\n```",
        "postTime": 1683699957,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "CF1824E LuoTianyi and Cartridge"
    }
]