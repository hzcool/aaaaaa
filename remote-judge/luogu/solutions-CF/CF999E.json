[
    {
        "content": "\u5982\u679c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u5185\u7684\u4e00\u4e2a\u70b9\u80fd\u88ab $s$ \u5230\u8fbe\uff0c\u90a3\u4e48\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\u6240\u6709\u70b9\u90fd\u88ab $s$ \u5230\u8fbe\uff0c\u6240\u4ee5\u5148\u7f29\u70b9\n\n\u7f29\u5b8c\u70b9\u5efa\u5b8c\u65b0\u56fe\uff0c\u6211\u4eec\u770b\u5230\u7684\u57fa\u672c\u4e0a\u5c31\u53ea\u6709\u8fd9\u4e48\u4e09\u79cd\u60c5\u51b5\u7684\u8fde\u901a\u5757\n\n```\nA -> B -> D       E -> F -> G        H -> I -> J\n     ^                                    |\n     |                                    V\n     C                                    K\n```\n\n\u6211\u4eec\u5047\u8bbe\u8fd9\u4e09\u79cd\u60c5\u51b5\u90fd\u4e0d\u80fd\u88ab $s$ \u5230\u8fbe\n\n\u7b2c\u4e00\u79cd\u591a\u4e2a\u5165\u5ea6\u4e3a0\u7684\u70b9\uff0c\u5fc5\u987b\u8981\u4ece $s$ \u5f80 $A$ \u548c $C$ \u5404\u8fde\u4e00\u6761\u8fb9\u624d\u884c\n\n\u7b2c\u4e8c\u79cd\u4e00\u6761\u94fe\uff0c$s$ \u5f80 $E$ \u8fde\u8fb9\u5c31\u884c\n\n\u7b2c\u4e09\u79cd\u53ea\u6709\u4e00\u4e2a\u5165\u5ea6\u4e3a 0 \u7684\u70b9\uff0c\u90a3\u4e48 $s$ \u5f80 $H$ \u8fde\u8fb9\u5c31\u884c\n\n\u90a3\u4e48\u8fd9\u91cc\u5c31\u53d1\u73b0\u4e86\u89c4\u5f8b\u4e86\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u4e0d\u80fd\u88ab $s$ \u6240\u5230\u8fbe\u7684\u8fde\u901a\u5757\uff0c**\u5176\u6240\u8981\u65b0\u52a0\u8fb9\u7684\u6570\u91cf\u4e3a\u5176\u4e2d\u5165\u5ea6\u4e3a 0 \u70b9\u7684\u6570\u91cf**\n\n\u90a3\u4e48\u5c31\u5728\u65b0\u56fe\u4e2d\u5148\u4ece $s$ \u6240\u5728\u65b0\u56fe\u4e2d\u7684\u70b9\u5f00\u59cb dfs \u4e00\u904d\u6807\u8bb0\u6389\u80fd\u5230\u8fbe\u7684\u70b9\n\n\u7136\u540e\u7b54\u6848\u5c31\u662f\u65b0\u56fe\u4e2d\u6ca1\u88ab\u6807\u8bb0\u8fc7\u5e76\u4e14\u5165\u5ea6\u4e3a 0 \u7684\u70b9\u6570\n\n```cpp\n// This code writed by chtholly_micromaker(MicroMaker)\n#include <bits/stdc++.h>\n#define reg register\nusing namespace std;\nconst int MaxN=5050;\nstruct Edge\n{\n\tint nxt,to;\n}E[MaxN<<2],nE[MaxN<<2];\ntemplate <class t> inline void read(t &s)\n{\n\ts=0;\n\treg int f=1;\n\treg char c=getchar();\n\twhile(!isdigit(c))\n\t{\n\t\tif(c=='-')\n\t\t\tf=-1;\n\t\tc=getchar();\n\t}\n\twhile(isdigit(c))\n\t\ts=(s<<3)+(s<<1)+(c^48),c=getchar();\n\ts*=f;\n\treturn;\n}\nint hd[MaxN],nhd[MaxN],en,nen,n,m;\nint dfn[MaxN],low[MaxN],dep;\nint col[MaxN],scc;\nint sta[MaxN],top;\nbool instack[MaxN];\nbool vis[MaxN];\nint deg[MaxN];\ninline void adde(int u,int v)\n{\n\t++en;\n\tE[en]=(Edge){hd[u],v};\n\thd[u]=en;\n\treturn;\n}\ninline void nadde(int u,int v)\n{\n\t++nen;\n\tnE[nen]=(Edge){nhd[u],v};\n\tnhd[u]=nen;\n\treturn;\n}\ninline void tarjan(int u)\n{\n\tdfn[u]=low[u]=++dep;\n\tsta[top++]=u;\n\tinstack[u]=true;\n\tfor(int i=hd[u];~i;i=E[i].nxt)\n\t{\n\t\treg int v=E[i].to;\n\t\tif(!dfn[v])\n\t\t{\n\t\t\ttarjan(v);\n\t\t\tlow[u]=min(low[u],low[v]);\n\t\t}\n\t\telse if(instack[v])\n\t\t\tlow[u]=min(low[u],dfn[v]);\n\t}\n\tif(dfn[u]==low[u])\n\t{\n\t\t++scc;\n\t\tdo\n\t\t{\n\t\t\t--top;\n\t\t\tinstack[sta[top]]=false;\n\t\t\tcol[sta[top]]=scc;\n\t\t}while(sta[top]!=u);\n\t}\n\treturn;\n}\ninline void dfs(int u,int fa)\n{\n\tvis[u]=true;\n\tfor(int i=nhd[u];~i;i=nE[i].nxt)\n\t{\n\t\treg int v=nE[i].to;\n\t\tif(v==fa||vis[v])\n\t\t\tcontinue;\n\t\tdfs(v,u);\n\t}\n\treturn;\n}\nsigned main(void)\n{\n\tmemset(hd,-1,sizeof hd);\n\tmemset(nhd,-1,sizeof nhd);\n\tint s;\n\treg int u,v;\n\tcin>>n>>m>>s;\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tread(u);read(v);\n\t\tadde(u,v);\n\t}\n\tfor(int i=1;i<=n;++i)\n\t\tif(!dfn[i])\n\t\t\ttarjan(i);\n\tfor(int u=1;u<=n;++u)\n\t\tfor(int i=hd[u];~i;i=E[i].nxt)\n\t\t{\n\t\t\treg int v=E[i].to;\n\t\t\tif(col[u]==col[v])\n\t\t\t\tcontinue;\n\t\t\tnadde(col[u],col[v]);\n\t\t\t++deg[col[v]];\n\t\t}\n\tdfs(col[s],0);\n\treg int ans=0;\n\tfor(int i=1;i<=scc;++i)\n\t\tif(!vis[i]&&!deg[i])\n\t\t\t++ans;\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n\n",
        "postTime": 1583590832,
        "uid": 51376,
        "name": "MyukiyoMekya",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF999E \u3010Reachability from the Capital\u3011"
    },
    {
        "content": "emmmmm\u3002\u672c\u849f\u84bb\u662f\u771f\u7684\u770b\u4e0d\u61c2\u697c\u4e0b\u7684\u5927\u4f6c\u5728\u8bb2\u4ec0\u4e48\uff0c\uff0c\u4e3a\u4ec0\u4e48\u8fdeset\u90fd\u7528\u4e0a\u4e86qwq\u3002\u3002\u3002\n\n\u8fd9\u9898\u4e0d\u5e94\u8be5\u662f\u5f88\u5957\u8def\u7684\u5148tarjan\u4e00\u8fb9\n\n\u90a3\u4e48\u5bf9\u4e8e\u8054\u901a\u5757\u4e2d\u7684\u70b9\u90fd\u662f\u4e92\u76f8\u53ef\u8fbe\u7684\u3002\n\n\u8fd9\u6837\u6211\u4eec\u53ea\u8981\u7edf\u8ba1\u4e00\u4e0b\u5165\u5ea6\u4e3a$0$\u7684\u70b9\u8f93\u51fa\u5c31\u597d\u4e86\u3002\u3002\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<stack>\nusing namespace std;\nconst int MAXN = 1e6 + 10;\ninline int read() {\n    char c = getchar(); int x = 0, f = 1;\n    while(c < '0' || c > '9') {if(c == '-') f = -1; c = getchar();}\n    while(c >= '0' && c <= '9') x = x * 10 + c - '0', c = getchar();\n    return x * f;\n}\nint N, M, S;\nstruct Edge {\n    int u, v, nxt;\n}E[MAXN];\nint head[MAXN], num = 1;\ninline void AddEdge(int x, int y) {\n    E[num] = (Edge){x, y, head[x]};\n    head[x] = num++;\n}\nstack<int>s;\nint dfn[MAXN], low[MAXN], color[MAXN], colornum = 0, tot = 0, vis[MAXN], siz[MAXN];\nvoid tarjan(int x) {\n    dfn[x] = low[x] = ++tot;\n    s.push(x);\n    vis[x] = 1;\n    for(int i = head[x]; i != -1; i = E[i].nxt) {\n        int to = E[i].v;\n        if(!dfn[to]) tarjan(to), low[x] = min(low[x], low[to]);\n        else if(vis[to]) low[x] = min(low[x], dfn[to]);\n    }\n    if(dfn[x] == low[x]) {\n        int h;\n        colornum++;\n        do {\n            h = s.top(); s.pop();\n            color[h] = colornum;\n            vis[h] = 0;\n        }while(h != x);\n    }\n}\nbool happen[MAXN];\nvector<int> v[MAXN];\nint ans = 0;\nint inder[MAXN];\nint main() {\n#ifdef WIN32\n    //freopen(\"a.in\", \"r\", stdin);\n#endif    \n    memset(head, -1, sizeof(head));\n    N = read(); M = read(); S = read();\n    for(int i = 1; i <= M; i++) {\n        int x = read(), y = read();\n        AddEdge(x, y);\n    }\n    for(int i = 1; i <= N; i++) \n        if(!color[i])\n            tarjan(i);\n    memset(vis, 0, sizeof(vis));\n    for(int i = 1; i <= N; i++) \n        for(int j = head[i]; j != -1; j = E[j].nxt) \n            if(color[E[j].u] != color[E[j].v])\n                inder[color[E[j].v]]++;\n    for(int i = 1; i <= colornum; i++)\n        if(inder[i] == 0)\n            ans++;\n    if(inder[color[S]] == 0) ans--;\n    printf(\"%d\", ans);\n    return 0;\n}\n```",
        "postTime": 1530093567,
        "uid": 36984,
        "name": "attack",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF999E \u3010Reachability from the Capital\u3011"
    },
    {
        "content": "## CF999E Reachability from the Capital\n\n[\u539f\u9898](https://www.luogu.com.cn/problem/CF999E)\n\n## \u9898\u610f\n- \u7ed9\u51fa\u4e00\u4e2a n \u4e2a\u70b9 m \u6761\u8fb9\u7684 \u6709\u5411\u56fe\uff0c\u6c42\u52a0\u591a\u5c11\u8fb9\u624d\u80fd\u4f7f s \u70b9\u80fd\u5230\u8fbe\u56fe\u4e0a\u7684\u4efb\u610f\u4e00\u70b9\u3002\n\n## \u505a\u6cd5\n- \u5148\u6c42\u51fa\u56fe\u4e0a\u7684\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u56e0\u4e3a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u7684\u6bcf\u4e2a\u70b9\u90fd\u53ef\u4ee5\u4e92\u76f8\u5230\u8fbe\u3002\n- \u7edf\u8ba1\u6bcf\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u5165\u5ea6\uff0c\u5165\u5ea6\u4e3a 0 \u65f6\u8bf4\u660e\u6ca1\u6709\u70b9\u80fd\u5230\u8fbe\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u8fd9\u65f6\u5c31\u9700\u8981\u52a0\u4e00\u6761\u8fb9\u3002\n- \u5f53 s \u70b9\u6240\u5728\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u5165\u5ea6\u4e3a 0 \u65f6\u7b54\u6848\u9700\u8981\u51cf 1\uff0c\u56e0\u4e3a\u8981\u6c42\u7684\u662f s \u70b9\u80fd\u5230\u8fbe\u6240\u6709\u70b9\uff0c\u5e76\u4e0d\u9700\u8981\u5176\u4ed6\u70b9\u80fd\u5230\u8fbe s \u70b9\u3002\n\n## \u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#define N 5005\n#define M 1000005\n\nusing namespace std;\n\nint n,m,s,idx,tot,top,bcnt,ans;\nint head[N],dfn[N],low[N],sta[N],belong[N],into[N];\nint u[N],v[N];\nbool vis[N];\nstruct node{\n\tint next,to;\n}e[M];\n\ninline int read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile (ch<'0'||ch>'9'){if (ch=='-') f=-1;ch=getchar();}\n\twhile (ch>='0'&&ch<='9'){x=x*10+ch-48;ch=getchar();}\n\treturn x*f;\n}\n\ninline void add(int u,int v){\n\te[++tot].to=v;\n\te[tot].next=head[u];\n\thead[u]=tot;\n}\n\nvoid tarjan(int u){\n\tdfn[u]=low[u]=++idx;\n\tvis[u]=1;\n\tsta[++top]=u;\n\tfor(int i=head[u];i;i=e[i].next){\n\t\tint v=e[i].to;\n\t\tif(!dfn[v]){\n\t\t\ttarjan(v);\n\t\t\tlow[u]=min(low[u],low[v]);\n\t\t}\n\t\telse if(vis[v]) low[u]=min(low[u],dfn[v]);\n\t}\n\tif(low[u]==dfn[u]){\n\t\tbcnt++;\n\t\tint v=-1;\n\t\twhile(u!=v){\n\t\t\tv=sta[top--];\n\t\t\tvis[v]=0;\n\t\t\tbelong[v]=bcnt;\n\t\t}\n\t}\n}\n\nint main(){\n\tn=read(); m=read(); s=read();\n\tfor(int i=1;i<=m;i++){\n\t\tu[i]=read(); v[i]=read();\n\t\tadd(u[i],v[i]);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(!dfn[i])\n\t\t\ttarjan(i);//\u6c42\u5f3a\u8fde\u901a\u5206\u91cf \n\tfor(int i=1;i<=m;i++)\n\t\tif(belong[u[i]]!=belong[v[i]])\n\t\t\tinto[belong[v[i]]]++;//\u7edf\u8ba1\u5165\u5ea6 \n\tfor(int i=1;i<=bcnt;i++) if(!into[i]) ans++;\n\tif(!into[belong[s]]) ans--;//s \u70b9\u6240\u5728\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u5165\u5ea6\u4e3a 0 \n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1628910783,
        "uid": 224926,
        "name": "\u8ba9\u98ce\u5ffd\u60a0\u4f60",
        "ccfLevel": 0,
        "title": "CF999E Reachability from the Capital \u9898\u89e3"
    },
    {
        "content": "$\\quad$\u524d\u7f6e\u829d\u58eb\uff1aTarjan\u7f29\u70b9\uff0c\u5efa\u8bae\u505a\u505a\u6a21\u677f\u9898([P3387 \u3010\u6a21\u677f\u3011\u7f29\u70b9](https://www.luogu.com.cn/problem/P3387))\n\n$$\\text{\u5173\u4e8e\u9898\u610f}$$\n\n$\\quad$\u7ed9\u5b9a\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u6c42\u8981\u4f7f\u4e00\u4e2a\u70b9 $t$ \u80fd\u591f\u5230\u8fbe\u5176\u4ed6\u6240\u6709\u70b9\u8fd8\u9700\u52a0\u591a\u5c11\u8fb9\uff1f\n\n$\\quad$\u56e0\u4e3a\u5728\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\uff0c\u6bcf\u4e2a\u70b9\u90fd\u53ef\u4ee5\u5230\u8fbe\u5176\u4ed6\u6240\u6709\u70b9\uff0c\u6240\u4ee5\u8003\u8651\u7f29\u70b9\uff0c\u5c06\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u6240\u6709\u70b9\u770b\u505a\u4e00\u4e2a\u70b9\uff0c\u518d\u505a\u5176\u4ed6\u64cd\u4f5c\u3002\n\n$\\quad$\u7f29\u70b9\u4e4b\u540e\u56fe\u5c31\u53d8\u6210\u4e86[$DAG$(\u6709\u5411\u65e0\u73af\u56fe)](https://baike.baidu.com/item/%E6%9C%89%E5%90%91%E6%97%A0%E7%8E%AF%E5%9B%BE/10972513?fr=aladdin)\uff0c\u7136\u540e\u8003\u8651\u6bcf\u4e00\u4e2a\u70b9\u7684\u5165\u5ea6\u60c5\u51b5(\u7f29\u70b9\u540e)\uff0c\u56e0\u4e3a\u70b9 $t$ \u8981\u80fd\u5230\u8fbe\u5176\u4ed6\u6bcf\u4e00\u4e2a\u70b9\uff0c\u6240\u4ee5\u9664\u4e86\u70b9 $t$ \u6240\u5728\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u4e4b\u5916\uff0c\u5176\u4ed6\u6240\u6709\u70b9\u7684\u5165\u5ea6\u5fc5\u987b\u5927\u4e8e$0$\uff0c\u901a\u8fc7\u627e\u89c4\u5f8b\u5c31\u53ef\u4ee5\u53d1\u73b0\u7b54\u6848\u5c31\u662f\u7f29\u70b9\u540e\u5165\u5ea6\u4e3a $0$ \u4e14\u4e0d\u662f\u70b9 $t$ \u6240\u5728\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u70b9\u7684\u6570\u91cf\u3002(\u56e0\u4e3a\u5373\u4f7ft\u6240\u5728\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u5165\u5ea6\u4e3a0\uff0c\u4e5f\u4e0d\u9700\u8981\u8fde\u8fb9)\n\n$\\quad$\u5982\u679c\u8fd8\u4e0d\u80fd\u7406\u89e3\u5c31\u770b\u4ee3\u7801\u5427\uff0c\u6ce8\u91ca\u90fd\u5728\u4ee3\u7801\u91cc\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<queue>\n#include<stack>\n#include<algorithm>\n#define int long long\n#define re register int\n#define il inline\n#define next ne\nusing namespace std;\nil int read()\t\t\t\t\t     //\u5feb\u901f\u8bfb\u5165\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile(isdigit(ch)==0&&ch!='-')ch=getchar();\n\tif(ch=='-')f=-1,ch=getchar();\n\twhile(isdigit(ch))x=(x<<1)+(x<<3)+(ch-'0'),ch=getchar();\n\treturn x*f;\n}\nconst int N=5e3+5;\nint n,m,dfn[N],low[N],c[N],f[N*2],s[N],l[N]\nint next[N*2],go[N*2],head[N],tot,cnt,ans,t;\nil void Add(int x,int y)  \t\t\t     //\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\uff0c\u8bb0\u5f55\u6bcf\u6761\u8fb9\u7684\u7aef\u70b9u\uff0cv\uff0c\u4e4b\u540e\u8981\u8ba1\u7b97\u6bcf\u4e2a\u70b9\u7684\u5165\u5ea6\n{\n\tnext[++tot]=head[x];\n\thead[x]=tot;\n\tf[tot]=x;\n\tgo[tot]=y;\n}\nstack<int>q;\t\t\t\t\t     //\u4e2a\u4eba\u559c\u6b22\u7528stack\u6808\uff0c\u4e0d\u7528\u6570\u7ec4\u6a21\u62df\u6808\nil void Tarjan(int x)\t\t\t\t     //Tarjan\u7f29\u70b9\u677f\u5b50\n{\n\tdfn[x]=low[x]=++cnt;\n\tq.push(x);\n\tfor(re i=head[x];i;i=next[i])\n\t{\n\t\tint y=go[i];\n\t\tif(!dfn[y])Tarjan(y),low[x]=min(low[x],low[y]);\n\t\telse if(!c[y])low[x]=min(low[x],dfn[y]);\n\t}\n\tif(dfn[x]==low[x])\n\t{\n\t\tc[x]=++c[0];\n\t\ts[c[0]]=1;\n\t\twhile(q.top()!=x)\n\t\t{\n\t\t\tc[q.top()]=c[0];\n\t\t\ts[c[0]]++;\n\t\t\tq.pop();\n\t\t}\n\t\tq.pop();\n\t}\n}\nsigned main()\n{\n\tn=read();m=read();t=read();\n\ttot=cnt=0;\n\tfor(re i=1;i<=m;i++)\n\t{\n\t\tint x=read(),y=read();\n\t\tAdd(x,y);\n\t}\n\tfor(re i=1;i<=n;i++)\n\tif(!dfn[i])Tarjan(i);\n\tif(c[0]==1){printf(\"0\\n\");return 0;}\t//\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u4e0d\u9700\u8981\u52a0\u8fb9\n\tfor(re i=1;i<=m;i++)\n\t{\n\t\tint x=c[f[i]],y=c[go[i]];\n\t\tif(x!=y)l[y]++; \t\t//\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u7684\u5165\u5ea6\uff08\u7f29\u70b9\u540e\uff09\n\t}\n\tfor(re i=1;i<=c[0];i++)\t\t\t//\u6761\u4ef61\uff1a\u5165\u5ea6\u4e3a0   \u6761\u4ef62\uff1a\u4e0d\u662ft\u6240\u5728\u7684\u5f3a\u8fde\u901a\u5206\u91cf\n\tif(!l[i]&&i!=c[t])ans++;\t\t//\u7edf\u8ba1\u7b54\u6848\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n\n$\\quad$\u5982\u679c\u89c9\u5f97\u6211\u5199\u5f97\u597d\u7684\uff0c\u4e0d\u59a8\u70b9\u4e2a\u8d5e\u5457",
        "postTime": 1604229634,
        "uid": 109220,
        "name": "Farkas_W",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF999E \u3010Reachability from the Capital\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u662f\u9053$tarjan$\u6a21\u677f\u9898\n\n\u5982\u679c\u8fd9\u4e2a\u56fe\u8054\u901a \u6bcf\u4e2a\u70b9\u7684\u5165\u5ea6\u90fd\u4e0d\u4e3a\u4e00\n\n\u8981\u662f\u8fd9\u4e2a\u56fe\u8054\u901a \u90a3\u4e48\u5c31\u5fc5\u987b\u4f7f\u5165\u5ea6\u4e3a0\u7684\u70b9\u52a0\u8fb9\n\n\u90a3\u4e48\u8fd9\u9053\u9898\u76ee\u5c31\u662f\u7edf\u8ba1\u5165\u5ea6\u4e3a0\u7684\u70b9\u6570 \u7136\u540e\u8981\u51cf\u53bb$in[ssc_num[s]] == 0$ \n\n\u7136\u540e\u8f93\u51fa\u7b54\u6848\u5c31\u884c\u4e86\n\n\u4ee3\u7801\u5b9e\u73b0\u6bd4\u8f83\u7b80\u5355\n\n# code\n\n```cpp\n//\n//  CF999E Reachability from the Capital\n//  Tarjan\n//\n//  Created by \u5468\u4fca\u5eb7 on 2019/10/2.\n//  Copyright \u00a9 2019 \u5468\u4fca\u5eb7. All rights reserved.\n//\n\n#include <cstdio>\n#include <cstdlib>\n#include <iostream>\n#include <algorithm>\n#include <set>\n#include <map>\n#include <queue>\n#include <vector>\n#include <cstring>\n\nusing namespace std;\n\ntypedef unsigned long long ll;\n\nconst int INF = 2139062143;\n\n#define DEBUG(x) std::cerr << #x << ' = ' << x << std::endl\n\ninline int read() {\n    int f = 1, x = 0;char ch;\n    do {ch = getchar();if (ch == '-')f = -1;} while (ch > '9' || ch < '0');\n    do {x = x * 10 + ch - '0';ch = getchar();} while (ch >= '0' && ch <= '9');\n    return f * x;\n}\n\nconst int MAX_M = 5000 + 5;\n\nstruct EDGE {\n    int to, next;\n} edge[MAX_M];\n\nint head[MAX_M], cnt;\n\nvoid addedge (int u, int v) {\n    edge[++cnt].to = v;\n    edge[cnt].next = head[u];\n    head[u] = cnt;\n}\n\nint dfn[MAX_M], low[MAX_M], vis[MAX_M], s[MAX_M], top, f[MAX_M];\n\nint n, m, st, scc_num[MAX_M], in[MAX_M], out[MAX_M], scc_cnt;\n\nvoid tarjan (int u) {\n    dfn[u] = low[u] = ++cnt;\n    vis[u] = 1; s[++top] = u;\n    for (int i = head[u]; i; i = edge[i].next) {\n        int v = edge[i].to;\n        if (!dfn[v]) {\n            tarjan(v);\n            low[u] = min(low[u], low[v]);\n        }\n        else if (vis[v]) {\n            low[u] = min(low[u], dfn[v]);\n        }\n    }\n    if (low[u] == dfn[u]) {\n        ++ scc_cnt;\n        while (s[top + 1] != u) {\n            scc_num[s[top]] = scc_cnt;\n            vis[s[top -- ]] = 0;\n        }\n    }\n}\n\nint main () {\n    n = read(); m = read(); st = read();\n    for (int i = 1; i <= m; i ++ ) {\n        int u = read(), v = read();\n        addedge (u, v);\n    }\n    cnt = 0;\n    for (int i = 1; i <= n; i ++ ) {\n        if (!dfn[i]) tarjan(i);\n    }\n    int ans = 0;\n    for (int i = 1; i <= n; i ++ ) {\n        cout << i << \" \" << scc_num[i] << endl;\n    }\n    for (int u = 1; u <= n; u ++ ) {\n        for (int i = head[u]; i; i = edge[i].next) {\n            int v = edge[i].to;\n            if (scc_num[u] != scc_num[v]) in[scc_num[v]] ++ ;\n        }\n    }\n    for (int i = 1; i <= scc_cnt; i ++ ) {\n        ans += (in[i] == 0);\n    }\n    cout << (ans - (in[scc_num[st]] == 0)) << endl;\n}\n\n```",
        "postTime": 1570010999,
        "uid": 107377,
        "name": "Cryin",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF999E \u3010Reachability from the Capital\u3011"
    },
    {
        "content": "## \u9898\u89e3 CF999E \u3010Reachability from the Capital\u3011\n\n\u9898\u76ee\u4f20\u9001\u95e8:\n\nhttps://www.luogu.org/problemnew/show/CF999E\n\n\u771f\u662f\u5947\u602a\uff0c\u6211\u7adf\u7136\u662f\u6700\u4f18\u89e3\uff08\u4e0d\u6562\u76f8\u4fe1\uff09\n\n\u8fd8\u662f\u5927\u6982\u6765\u8bf4\u4e00\u4e0b\u505a\u6cd5\u5427= =\n\n==========================================\n\n\u9898\u76ee\u5927\u610f:(\u5176\u5b9e\u697c\u4e0b\u4e5f\u6709\uff0c\u6211\u662f\u81ea\u5df1\u603b\u7ed3\u7684)\n\n\t\u6709n\u4e2a\u8282\u70b9m\u6761\u8fb9\uff0c\u8fb9\u90fd\u662f\u5355\u5411\u7684\uff0c\u8bf7\u4f60\u6dfb\u52a0\u6700\u5c11\u7684\u8fb9\u4f7f\u5f97\u8d77\u70b9s\u5230\u5176\u4ed6\u4e0e\u5176\u4ed6\u6bcf\u4e00\u4e2a\u70b9\u4e4b\u95f4\u90fd\u80fd\u4e92\u76f8\u5230\u8fbe\n\nemmm...\u8fd9\u9898\u4e00\u770b\u5c31\u662f\u4e00\u4e2a\u7f29\u70b9\u554a= =\n\n\uff08\u522b\u95ee\u6211\u600e\u4e48\u770b\u51fa\u6765\u7684\uff09\uff08\u9003\n\n\u5176\u5b9e\u5bf9\u4e8e\u539f\u6709\u7684m\u6761\u8fb9\u76f8\u8fde\u7684\u4e00\u4e9b\u70b9\uff0c\u5982\u679c\u4e4b\u524d\u4ed6\u4eec\u5df2\u7ecf\u5f62\u6210\u4e86\u5f3a\u8fde\u901a\u5206\u91cf(scc)\uff0c\u90a3\u4e48\u5b83\u4eec\u4e4b\u524d\u5c31\u53ef\u4ee5\u76f8\u4e92\u5230\u8fbe(\u4e0d\u7528\u4fee\u8def),\u5bf9\u4e8e\u8fd9\u4e9b\u70b9\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u4eec\u201c\u7f29\u201d\u6210\u4e00\u4e2a\u201c\u70b9\u201d\uff0c\u8fd9\u5176\u5b9e\u5c31\u662fTarjian\u7f29\u70b9\u7684\u601d\u60f3\uff0c\u81f3\u4e8e\u5b9e\u73b0\u5417\u3002\u3002\u3002\u7f29\u70b9\u6a21\u677f\u9898\u94fe\u63a5:\n\n[\u7f29\u70b9\u6a21\u677f\u9898](https://www.luogu.org/problemnew/show/P3387)\n\n\u5176\u5b9eluogu\u91cc\u8fd8\u6709\u5f88\u591a\u7f29\u70b9\u7684\u6a21\u677f\u9898,\u81ea\u5df1\u53bb\u627e\u627e\u5427\uff0c\u90fd\u4e0d\u96be\u7684\n\n\u90a3\u4e48\u5982\u679c\u4f60\u4f1a\u4e86\u7f29\u70b9\uff0c\u8fd9\u4e2a\u9898\u53ea\u8981\u7f29\u5b8c\u70b9\u4e4b\u540e\u7edf\u8ba1\u4e00\u4e0b\u5165\u5ea6\u5c31\u884c\u4e86(\u8ba9\u5f3a\u8fde\u901a\u5206\u91cf\u4e4b\u95f4\u8fde\u8fb9)\n\n\u76f4\u63a5\u7c98\u677f\u5b50~~~\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<queue>\n#include<cstring>\nusing namespace std;\ntypedef long long ll;\nconst int inf=1e9+7;\ninline int read()\n{\n    int p=0,f=1;char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n    while(c>='0'&&c<='9'){p=p*10+c-'0';c=getchar();}\n    return f*p;}\nconst int maxn=5007;\nconst int maxm=5007;\nstruct Edge\n{\n    int next,from,to;\n}p[maxm];\nstruct point\n{\n    int low,dnf,vis,fa,in;\n}A[maxn];\nint n,m,cnt,sum_scc,tot,S;\nint Stack[maxn],top,ans,head[maxm];\ninline void add_edge(int x,int y)//\u52a0\u8fb9\n{\n    cnt++;\n    p[cnt].from=head[x];\n    head[x]=cnt;\n    p[cnt].next=x;\n    p[cnt].to=y;\n}\ninline void Tarjian(int x)//Tarjian\u7f29\u70b9\n{\n    A[x].dnf=A[x].low=++tot;\n    A[x].vis=1,Stack[++top]=x;\n    for(int i=head[x];i;i=p[i].from)\n        {\n            int y=p[i].to;\n            if(!A[y].dnf)\n                Tarjian(y),A[x].low=min(A[x].low,A[y].low);\n            else if(A[y].vis)\n                    A[x].low=min(A[x].low,A[y].dnf);\n        }\n    if(A[x].dnf==A[x].low)\n        {\n            int y;\n            sum_scc++;\n            while(y=Stack[top--])\n                {\n                    A[y].vis=0;\n                    A[y].fa=sum_scc;\n                    if(x==y)break;\n                }\n        }\n}\nint main()\n{\n    n=read(),m=read(),S=read();\n    for(int i=1;i<=m;i++)\n        {\n            int x=read(),y=read();\n            add_edge(x,y);\n        }\n    for(int i=1;i<=n;i++)\n        if(!A[i].dnf)Tarjian(i);\n    for(int i=1;i<=m;i++)//\u7edf\u8ba1\u5165\u5ea6\n        {\n            int x=A[p[i].next].fa,y=A[p[i].to].fa;\n            if(x!=y)A[y].in++;\n        }\n    for(int i=1;i<=sum_scc;i++)\n    \t//\u6ca1\u6709\u5165\u5ea6\u7684scc\u4e2a\u6570++\n        if(!A[i].in)ans++;\n    if(!A[A[S].fa].in)ans--;\n    //\u7279\u5224,\u8d77\u70b9\u6240\u5728\u7684scc\u5982\u679c\u6ca1\u6709\u5165\u5ea6\u90a3\u4e48\u7b54\u6848-1\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```\n\n\u597d\u4e86\uff0c\u8fd9\u4e2a\u9898\u5927\u6982\u5c31\u8fd9\u6837\u4e86\uff08\u4e0d\u8981\u602a\u6211\u8bb2\u5f97\u5c11\uff09\n\n\u6700\u540e\u63a8\u5e7f\u4e00\u4e0b\u6211\u7684blog:\n\nhttps://www.luogu.org/blog/new2zy/\n\n\u611f\u8c22\u9605\u8bfb\uff0c\u62dc\u62dc~~~\n",
        "postTime": 1534329369,
        "uid": 60359,
        "name": "___new2zy___",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF999E \u3010Reachability from the Capital\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u6bd4\u8f83\u96be\u770b\u51fa\u6765\u7684 Tarjan \u9898\uff0c\u5982\u679c\u662f\u6709\u5411\u56fe\u800c\u4e14\u8fd8\u4e0d\u662f\u6c42\u6700\u77ed\u8def\u7684\uff0c\u90a3\u5f80 Tarjan \u8fd9\u65b9\u9762\u60f3\u603b\u662f\u6bd4\u8f83\u597d\u7684\u3002\n\n\u9898\u76ee\u7684\u8981\u6c42\u662f\u8981\u6c42\u8ba9\u6240\u6709\u70b9\u90fd\u4ece\u8d77\u70b9\u53ef\u8fbe\u7684\u6700\u5c0f\u52a0\u8fb9\u6570\u91cf\u3002\u9996\u5148\u6211\u4eec\u8003\u8651\u8fd9\u6837\u4e00\u79cd\u60c5\u51b5\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u6ca1\u6709\u5165\u5ea6\uff0c\u5e76\u4e14\u8fd8\u4e0d\u662f\u8d77\u70b9\u7684\u8bdd\uff0c\u5bb9\u6613\u8bc1\u660e\u81f3\u5c11\u8981\u8fde\u4e00\u6761\u5411\u7740\u8fd9\u4e2a\u70b9\u7684\u8fb9\uff0c\u8fd9\u4e2a\u8fb9\u81ea\u7136\u662f\u4ece\u8d77\u70b9\u6216\u662f\u54ea\u4e2a\u4ece\u8d77\u70b9\u53ef\u8fbe\u7684\u70b9\u8fde\u8d77\u90fd\u53ef\u4ee5\u3002\n\n\u8fd9\u6837\u5e76\u4e0d\u80fd\u6982\u62ec\u5b8c\u5168\uff0c\u4f8b\u5982\u8981\u662f\u6709\u73af\uff0c\u73af\u5185\u6240\u6709\u70b9\u90fd\u6709\u5165\u5ea6\uff0c\u4f46\u662f\u8981\u662f\u6ca1\u6709\u5411\u73af\u5185\u8fde\u7684\u8fb9\uff0c\u4e00\u6837\u662f\u4e0d\u884c\u7684\u3002\u7136\u540e\u60f3\u5230\u7f29\u70b9\uff0c\u628a\u6240\u6709\u60c5\u51b5\u90fd\u5316\u6210\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u8bc1\u660e\u8fd9\u6837\u662f\u5b8c\u5907\u7684\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,N,m,s,low[5005],dfn[5005],tot,u[5005];\nint v[5005],mk[5005],f[5005],in[5005],ans;\nbasic_string<int>to[5005];\nstack<int>sta;\nvoid dfs(int p){\n    dfn[p]=low[p]=++tot;\n    mk[p]=1;\n    sta.push(p);\n    for(int i=0;i<to[p].size();i++){\n        if(!dfn[to[p][i]]){\n            dfs(to[p][i]);\n            low[p]=min(low[p],low[to[p][i]]);\n        }else if(mk[to[p][i]])\n            low[p]=min(low[p],dfn[to[p][i]]);\n    }\n    if(dfn[p]==low[p]){\n        int lst=1e9;\n        N++;\n        while(lst!=p){\n            mk[sta.top()]=0;\n            f[sta.top()]=N;\n            lst=sta.top();\n            sta.pop();\n        }\n    }\n}\nint main(){\n    scanf(\"%d%d%d\",&n,&m,&s);\n    for(int i=1;i<=m;i++){\n        scanf(\"%d%d\",&u[i],&v[i]);\n        to[u[i]]+=v[i];\n    }\n    for(int i=1;i<=n;i++)\n        if(!dfn[i])\n            dfs(i);\n    for(int i=1;i<=m;i++)\n        if(f[u[i]]!=f[v[i]])\n            in[f[v[i]]]++;\n    for(int i=1;i<=N;i++)\n        if(in[i]==0&&i!=f[s])\n            ans++;\n    printf(\"%d\",ans);\n}\n```",
        "postTime": 1607351082,
        "uid": 251723,
        "name": "Schwarzkopf_Henkal",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF999E \u3010Reachability from the Capital\u3011"
    },
    {
        "content": "### \u6211\u7684\u65b9\u6cd5$:$ $dfs+$\u8d2a\u5fc3\u3002\n\n\u9996\u5148\u6211\u4eec\u5148\u5bf9\u4e8e\u8d77\u70b9$dfs$\u4e00\u6b21\uff0c\u628a\u6240\u6709\u76f4\u63a5\u4e0e\u8d77\u70b9\u8054\u901a\u7684\u70b9\u505a\u4e2a\u6807\u8bb0\uff0c\u5c06\u8fd9\u4e9b\u70b9\u5220\u53bb\u540e\uff0c\u53d8\u6210\u4e86\u82e5\u5e72\u4e2a\u8054\u901a\u5757(\u4e0d\u662f\u4e25\u683c\u610f\u4e49\u4e0a\u7684\uff0c\u611f\u6027\u7406\u89e3\u4e0b)\u3002\u4e5f\u5c31\u662f\u8bf4\u4ece\u6bcf\u4e2a\u70b9\u51fa\u53d1\uff0c\u6709\u4e00\u4e2a\u53ef\u4ee5\u5230\u8fbe\u7684\u70b9\u96c6$s_i$.\u6211\u4eec\u627e\u51fa\u6bcf\u4e2a\u70b9$i$\u7684$s_i$.\u6309\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u4f9d\u6b21\u9009\u53d6\uff0c\u5e76\u628a\u96c6\u5408$s_i$\u4e2d\u7684\u6bcf\u4e2a\u70b9\u505a\u4e2a\u6807\u8bb0.\n\n\u4e3a\u4ec0\u4e48\u662f\u5bf9\u7684\uff1f\n\n\u56e0\u4e3a\u8bbe$|s_i|>|s_j|$\uff0c\u5219$j$\u6709\u53ef\u80fd\u662f$i$\u7684\u540e\u7ee7\u8282\u70b9\uff0c\u56e0\u800c\u5148\u9009$i$\u4e0d\u4f1a\u66f4\u4e8f\u3002\n\n\u8d34\u4e0a\u4ee3\u7801(\u6bd4\u5927\u591a\u6570$tarjan$\u5199\u6cd5\u65b9\u4fbf\u8bb8\u591a)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define N 5010\nint n,m,cnt,h[N],rt,vis[N],ans,num[N],in[N];\nstruct edge{int v,nxt;}e[N*2];\nvoid add(int u,int v){e[++cnt]=(edge){v,h[u]};h[u]=cnt;}\nvoid dfs1(int u)\n{\n\tif(vis[u]) return;vis[u]=1;\n\tfor(int i=h[u];i;i=e[i].nxt) dfs1(e[i].v);\n}\nint dfs2(int u)\n{\n\tif(vis[u]||in[u]) return 0;num[u]=in[u]=1;\n\tfor(int i=h[u];i;i=e[i].nxt)num[u]+=dfs2(e[i].v);\n\treturn num[u];\n}\nstruct nod\n{\n\tint id,w;\n\tbool operator<(const nod&b)const{return w>b.w;}\n}p[N];\nint main()\n{\n\tcin>>n>>m>>rt;\n\tfor(int i=1,u,v;i<=m;i++)\n\t  scanf(\"%d%d\",&u,&v),add(u,v);\n\tdfs1(rt);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tmemset(in,0,sizeof(in));\n\t\tdfs2(i);\n\t}\n\tfor(int i=1;i<=n;i++)p[i]=(nod){i,num[i]};\n\tsort(p+1,p+n+1);\n\tfor(int i=1;i<=n;i++)\n\t  if(!vis[p[i].id]) dfs1(p[i].id),ans++;\n\tcout<<ans;\n\treturn 0;\n}\n```\n",
        "postTime": 1604488245,
        "uid": 285069,
        "name": "LSG_waterlyf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF999E \u3010Reachability from the Capital\u3011"
    },
    {
        "content": "\u5f88\u7ecf\u5178\u7684 tarjan \u9898\u3002\n\n\u9996\u5148\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u7684\u70b9\uff0c\u5b83\u4eec\u4e4b\u95f4\u4e00\u5b9a\u80fd\u4e24\u4e24\u4e92\u8fbe\uff0c\u4e8e\u662f\u6211\u4eec\u8003\u8651\u7f29\u70b9\u3002\n\n\u7f29\u5b8c\u70b9\u540e\u5f88\u663e\u7136\u53ea\u8981\u8ba1\u7b97\u6709\u591a\u5c11\u4e2a\u5165\u5ea6\u4e3a $0$ \u7684\u70b9\u5373\u53ef\u3002\n\n\u7ec6\u8282\uff1a\u5982\u679c $col_s$ \u7684\u5165\u5ea6\u4e3a $0$\uff0c\u5c31\u8981\u53bb\u9664\u5b83\u7684\u8d21\u732e\u3002\n\nCode:\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <cstring>\nusing namespace std ;\nconst int MAXN = 5e3 + 10 ;\nint min (int a , int b) {\n\treturn a < b ? a : b ;\n}\nint n , m , s , dfn[MAXN] , low[MAXN] , stack[MAXN] , top , cnt , col[MAXN] , d[MAXN] , cntc , ans ;\nbool inq[MAXN] ;\nvector <int> G[MAXN] ;\nvoid tarjan (int x) {\n\tdfn[x] = low[x] = ++cnt ;\n\tstack[++top] = x ;\n\tinq[x] = 1 ;\n\tfor (int i = 0 ; i < G[x].size () ; i++) {\n\t\tint v = G[x][i] ;\n\t\tif (!dfn[v]) tarjan (v) , low[x] = min (low[x] , low[v]);\n\t\telse if (inq[v]) low[x] = min (low[x] , dfn[v]) ;\n\t}\n\tif (dfn[x] == low[x]) {\n\t\tcntc++ ;\n\t\twhile (stack[top + 1] != x) {\n\t\t\tcol[stack[top]] = cntc ;\n\t\t\tinq[stack[top--]] = 0 ;\n\t\t}\n\t}\n}\nint main () {\n\tscanf (\"%d %d %d\" , &n , &m , &s) ;\n\tfor (int i = 1 ; i <= m ; i++) {\n\t\tint u , v ;\n\t\tscanf (\"%d %d\" , &u , &v) ;\n\t\tG[u].push_back (v) ; \n\t}\n\tfor (int i = 1 ; i <= n ; i++)\t\n\t\tif (!dfn[i]) tarjan (i) ;\n\tfor (int i = 1 ; i <= n ; i++)\n\t\tfor (int j = 0 ; j < G[i].size () ; j++) {\n\t\t\tint v = G[i][j] ;\n\t\t\tif (col[i] == col[v]) continue ;\n\t\t\td[col[v]] ++ ; \n\t\t}\n\tfor (int i = 1 ; i <= cntc ; i++)\n\t\tif (!d[i]) ans++ ;\n\tif (!d[col[s]]) ans-- ;\n\tprintf (\"%d\" , ans) ;\n\treturn 0 ;\n}\n```",
        "postTime": 1592006144,
        "uid": 122641,
        "name": "GIFBMP",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF999E \u3010Reachability from the Capital\u3011"
    },
    {
        "content": "\n\u663e\u7136\uff0c\u5728\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u4e2d\uff0c\u53ea\u8981\u6709\u4e00\u4e2a\u57ce\u5e02\u4e0e$s$\u8054\u901a\uff0c\u90a3\u4e48\u6574\u4e2a\u5206\u91cf\u5c31\u4e0e$s$\u8054\u901a\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u7f29\u70b9\uff0c\u7edf\u8ba1\u5b83\u7684\u5165\u5ea6\u3002\u5982\u679c\u5165\u5ea6\u4e3a$0$\uff0c\u6211\u4eec\u5c31\u4ece$s$\u5411\u8fd9\u4e2a\u7f29\u70b9\u8fde\u4e00\u6761\u8fb9\uff0c\u5982\u679c\u5165\u5ea6\u4e0d\u4e3a0\uff0c\u8bf4\u660e\u5176\u4ed6\u57ce\u5e02\u53ef\u4ee5\u5230\u8fbe\u5b83\uff0c\u6211\u4eec\u5c31\u4e0d\u9700\u8981\u5355\u72ec\u8fde\u8fb9\u3002\n\n\u6700\u540e\uff0c\u6ce8\u610f\u7279\u5224\u4e0e$s$\u5728\u540c\u4e00\u5f3a\u8054\u901a\u5206\u91cf\u7684\u70b9\u3002\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <stack>\n#include <iostream>\nusing namespace std;\n\nconst int MAXN = 5000;\nint n , m , s , u , v;\nvector< int > Graph[ MAXN + 5 ];\n\nint dfn[ MAXN + 5 ] , low[ MAXN + 5 ] , depth , cnt;\nint bel[ MAXN + 5 ] , In[ MAXN + 5 ];\nbool is[ MAXN + 5 ];\nstack< int > S;\nvoid Tarjan( int u ) {\n\tdfn[ u ] = low[ u ] = ++ depth;\n\tS.push( u ) , is[ u ] = 1;\n\t\n\tint v;\n\tfor( int i = 0 ; i < Graph[ u ].size() ; i ++ ) {\n\t\tv = Graph[ u ][ i ];\n\t\tif( !dfn[ v ] ) {\n\t\t\tTarjan( v );\n\t\t\tlow[ u ] = min( low[ u ] , low[ v ] );\n\t\t}\n\t\telse if( is[ v ] )\n\t\t\tlow[ u ] = min( low[ u ] , dfn[ v ] );\n\t}\n\tif( dfn[ u ] == low[ u ] ) {\n\t\t++ cnt;\n\t\tdo{\n\t\t\tv = S.top( );\n\t\t\tS.pop( ); is[ v ] = 0;\n\t\t\tbel[ v ] = cnt;\n\t\t}while( u != v );\n\t}\n}\n\nint main( ) {\n\tscanf(\"%d %d %d\",&n,&m,&s);\n\tfor( int i = 1 ; i <= m ; i ++ ) {\n\t\tscanf(\"%d %d\",&u,&v);\n\t\tGraph[ u ].push_back( v );\n\t}\n\tfor( int i = 1 ; i <= n ; i ++ )\n\t\tif( !dfn[ i ] ) Tarjan( i );\n\tfor( int i = 1 ; i <= n ; i ++ )\n\t\tfor( int j = 0 ; j < Graph[ i ].size( ) ; j ++ ) {\n\t\t\tint u = bel[ i ] , v = bel[ Graph[ i ][ j ] ];\n\t\t\tif( u != v ) In[ v ] ++;\n\t\t}\n\tint Ans = 0;\n\tfor( int i = 1 ; i <= cnt ; i ++ )\n\t\tif( !In[ i ] && i != bel[ s ] ) Ans ++;\n\tprintf(\"%d\\n\",Ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1572168596,
        "uid": 123802,
        "name": "chihik",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF999E \u3010Reachability from the Capital\u3011"
    }
]