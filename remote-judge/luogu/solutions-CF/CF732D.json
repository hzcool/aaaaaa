[
    {
        "content": "\u9898\u610f\uff1a\n\t\u67d0\u4eba\u8981\u8003\u8bd5\uff0c\u73b0\u5728\u603b\u5171\u6709n\u5929m\u95e8\u8003\u8bd5\uff0c\u5728\u8fd9n\u5929\u4e2d\u6709\u51e0\u5929\u662f\u53ef\u4ee5\u8003\u7279\u5b9a\u7684\u79d1\u76ee\u7684\uff0c\u9898\u4e2d\u7684d\u6570\u7ec4\u4f1a\u7ed9\u51fa\n\n\u6bd4\u5982\n\n0 0 1 2 3 0 2 0 1 2\n\n\t\u8868\u793a\u5728\u7b2c3\u30019\u5929\u53ef\u4ee5\u8003\u79d1\u76ee1\u3002 4\u30017\u300110\u5929\u53ef\u4ee5\u8003\u79d1\u76ee2.\u3002\u3002\u3002\u6807\u53f7\u4e3a0\u7684\u90a3\u5929\u53ef\u4ee5\u7528\u6765\u590d\u4e60\uff0c\u5982\u679c\u4e0d\u9009\u62e9\u5f53\u5929\u8003\u8bd5\u7684\u8bdd\u90a3\u5929\u4e5f\u53ef\u4ee5\u7528\u6765\u590d\u4e60\n\n\t\u4f46\u662f\u6bcf\u95e8\u8003\u8bd5\u90fd\u9700\u8981\u590d\u4e60\u4e00\u5b9a\u7684\u5929\u6570ai\u624d\u80fd\u8003\u597d\uff0c\u5bf9\u590d\u4e60\u5929\u6570\u7684\u8981\u6c42\u662f\u4e0d\u7528\u8fde\u7eed\uff0c\u53ea\u8981\u7d2f\u8ba1\u8fbe\u5230ai\u5373\u53ef\n\n\t\u4e3b\u4eba\u516c\u60f3\u82b1\u6700\u5c11\u7684\u5929\u6570\u6bcf\u95e8\u90fd\u8003\u597d\uff0c\u6c42\u6700\u5c11\u5929\u6570\uff0c\u5982\u679c\u6839\u672c\u4e0d\u53ef\u80fd\u8f93\u51fa\uff0d1\n\t\u8fd9\u9053\u9898\u770b\u4f3c\u5f88\u50cf\u52a8\u6001\u89c4\u5212\uff0c\u4f46\u5c45\u7136\u662f\u4e8c\u5206\u641c\u7d22\u7b54\u6848\uff01\u771f\u662f\u6ca1\u6709\u60f3\u5230\uff0c\u6211\u611f\u89c9\u8fd9\u4e2a\u80fd\u60f3\u5230\u7684\u8bdd\u5c31\u662f\u8981\u5148\u786e\u5b9a\u6211\u4eec\u80fd\u5224\u65ad\u7ed9\u5728\u7ed9\u5b9a\u7684\u8fd9\u4e9b\u8003\u8bd5\u8981\u6c42\u7684\u60c5\u51b5\u4e0bt\u5929\u662f\u5426\u53ef\u80fd\u5b8c\u6210\u8981\u6c42\u3002\u5bf9\u4e8et\u53ef\u4ee5\u786e\u5b9a\u5176\u662f\u5426\u53ef\u80fd\u624d\u80fd\u57281\uff5en\u5185\u505a\u4e8c\u5206\u641c\u7d22\u554a\uff01\n\n\t\u5047\u5b9a\u73b0\u5728\u6709t\u5929\uff0c\u6211\u4eec\u91c7\u53d6\u8d2a\u5fc3\u7684\u7b56\u7565\uff0c\u6bcf\u95e8\u79d1\u76ee\u90fd\u53c2\u52a0\u6700\u540e\u7684\u90a3\u4e00\u573a\uff0c\u90a3\u4e48\u524d\u9762\u5c31\u4f1a\u6709\u5c3d\u53ef\u80fd\u591a\u7684\u65f6\u95f4\u7ed9\u81ea\u5df1\u590d\u4e60\uff0c\u5982\u679c\u5373\u4f7f\u8fd9\u6837\u8fd8\u662f\u4e0d\u80fd\u590d\u4e60\u5b8c\u7684\u8bdd\uff0c\u5c31\u4e0d\u53ef\u80fd\u590d\u4e60\u5b8c\uff0c\u8f93\u51fa\u8d1f\u4e00\u5c31\u597d\u4e86\n\n\t\u80fd\u591f\u786e\u5b9at\u5929\u80fd\u5426\u8fbe\u5230\u8981\u6c42\u540e\uff0c\u5c31\u80fd\u57281\uff5en\u5929\u5185\u4e8c\u5206\u4e86\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define maxn 100000\nll n,m,a[maxn],d[maxn];\nbool flag[maxn];\nll ans=-1;\nusing namespace std;\nint check(ll x)\n{\n    ll sum=0;\n    memset(flag,0,sizeof(flag));\n    for(int i=x;i>=1;i--)//\u4ece\u540e\u5f80\u524d\u626b\uff0c\u5c3d\u91cf\u53c2\u52a0\u6700\u540e\u4e00\u573a\n    {\n        if(d[i]!=0&&flag[d[i]]==0)//\u5982\u679c\u6709\u4e00\u5929\u53ef\u4ee5\u8003\u8bd5\u5e76\u4e14\n        {//\u8fd9\u95e8\u8fd8\u6ca1\u8003\uff0c\u5c31\u628a\u4ed6\u8003\u4e86\uff08\u5373\u52a0\u4e0a\u590d\u4e60\u5929\u6570\uff09\n            sum+=a[d[i]];\n            flag[d[i]]=1;\n        }\n        else if(sum!=0)//\u5982\u679c\u4eca\u5929\u6ca1\u6709\u8003\u8bd5\uff0c\u5c31\u53ef\u4ee5\u62ff\u4e00\u5929\n        sum--;//\u590d\u4e60\n    }\n    if(sum!=0)//\u5982\u679c\u5929\u6570\u4e0d\u662f\u96f6\uff0c\u8981\u4e48\u8bf4\u660e\u5c31\u8fd8\u9700\u8981\u590d\u4e60\n    //\u5f53\u524d\u5929\u6570\u4e0d\u591f\n    return 0;\n    for(int i=1;i<=m;i++)\n    if(flag[i]==0)//\u6709\u4e00\u95e8\u6ca1\u8003\n    return 0;\n    return 1;\n}\nint main()//\u4e8c\u5206\u5e38\u89c4\u64cd\u4f5c\n{\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)\n    cin>>d[i];\n    for(int i=1;i<=m;i++)\n    cin>>a[i];\n    ll down=m,up=n,mid;\n    while(down<=up)\n    {\n        mid=(down+up)/2;\n        if(check(mid)==1)\n        {\n            ans=mid;\n            up=mid-1;\n        }\n        else\n        down=mid+1;\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n```",
        "postTime": 1546086087,
        "uid": 116114,
        "name": "WCG2025",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF732D \u3010Exams\u3011"
    },
    {
        "content": "\u7b97\u6cd5\uff1a\u4e8c\u5206\u3001\u8d2a\u5fc3\n---\n\u4e8c\u5206\u5929\u6570\uff0c$check$ \u51fd\u6570\u4e2d\u8981\u8d2a\u5fc3\uff0c\u6bcf\u4e00\u79d1\u90fd\u5728\u4e8c\u5206\u51fa\u7684\u5929\u6570\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u8003\u8bd5\u65e5\u8003\u6389\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u8fd9\u6837\u7684\u6570\u636e\uff0c\u4e00\u95e8\u79d1\u8981\u590d\u4e60$a$\u65e5,\u4e14\u8003\u8bd5\u65e5\u53ea\u6709\u7b2c$a$\u65e5\uff0c\u4f46\u524d$a$\u65e5\u4e2d\u6709\u80fd\u8003\u7684 \u540e\u9762\u8fd8\u6709\u8003\u8bd5\u65e5\u7684 \u79d1\u76ee\u3002\n\n\n$AC code:$\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 1e5 + 10;\nint n, m, a[MAXN], d[MAXN], nex[MAXN], b[MAXN];\nbool vis[MAXN];\nbool check (int x)\n{\n\tmemset (vis, 0, sizeof (vis));\n\tmemset (nex, 0, sizeof (nex));\n\tmemset (b, 0, sizeof (b));\n\tfor (int i = x; i >= 1; i--)\n\t\tif (d[i])\n\t\t{\n\t\t\tif (b[d[i]]) nex[i] = b[d[i]];\n\t\t\telse nex[i] = -1;\n\t\t\tb[d[i]] = i;\n\t\t}\n\tint cnt = 0, free = 0;\n\tfor (int i = 1; i <= x; i++)\n\t{\n\t\tif (d[i] == 0 || vis[d[i]] || nex[i] != -1 || a[d[i]] > free) free++;\n\t\telse free -= a[d[i]], vis[d[i]] = 1, cnt++;\n\t}\n\tif (cnt == m) return 1;\n\treturn 0;\n}\nint main ()\n{\n\tios :: sync_with_stdio (0), cin.tie (0);\n\tcin >> n >> m;\n\tfor (int i = 1; i <= n; i++)\n\t\tcin >> d[i];\n\tfor (int i = 1; i <= m; i++)\n\t\tcin >> a[i];\n\tint l = 1, r = n, mid, ans = -1;\n\twhile (l <= r)\n\t{\n\t\tmid = l + r >> 1;\n\t\tif (check (mid)) r = mid - 1, ans = mid;\n\t\telse l = mid + 1;\n\t}\n\tcout << ans;\n\treturn 0;\n}\n```",
        "postTime": 1620287080,
        "uid": 390254,
        "name": "Z_M__",
        "ccfLevel": 6,
        "title": "CF732D Exams\u9898\u89e3\uff08\u4e8c\u5206+\u8d2a\u5fc3\uff09"
    },
    {
        "content": "## \u3010\u601d\u8def\u3011\n\u4e8c\u5206\u7b54\u6848 +\u8d2a\u5fc3    \n\n### \u3010\u9898\u76ee\u5927\u610f\u3011  \n\u6bcf\u4e00\u5929\u4f60\u53ef\u4ee5\u5b8c\u6210\u4efb\u52a1\u6216\u8005\u79ef\u6512\u80fd\u91cf     \n\u6bcf\u4e00\u4e2a\u4efb\u52a1\u7684\u5b8c\u6210\u90fd\u9700\u8981\u6d88\u8017\u4e00\u5b9a\u7684\u80fd\u91cf      \n\u6bcf\u4e00\u5929\u90fd\u53ea\u80fd\u5b8c\u6210\u4e00\u4e2a\u7279\u5b9a\u7684\u4efb\u52a1\u6216\u8005\u4e0d\u80fd\u5b8c\u6210\u4efb\u52a1       \n\u6c42\u6700\u65e9\u4ec0\u4e48\u65f6\u5019\u5b8c\u6210\u5168\u90e8\u7684\u4efb\u52a1     \n\n### \u3010\u9898\u76ee\u5206\u6790\u3011\n\u4ece\u9898\u610f\u4e2d\u53ef\u4ee5\u770b\u51fa\u5982\u679c\u80fd\u591f\u5728\u7b2ci\u5929\u5b8c\u6210\u5168\u90e8\u7684\u4efb\u52a1   \n\u90a3\u4e48\u4e00\u5b9a\u80fd\u591f\u5728\u7b2ci+1\u5929\u5b8c\u6210\u5168\u90e8\u7684\u4efb\u52a1    \n\u6240\u4ee5\u7528\u4e8c\u5206\u7b54\u6848\u5c31\u5f88\u663e\u7136\u4e86\u5427    \n\n### \u3010\u6838\u5fc3\u601d\u8def\u3011\n\u4e8c\u5206\u5b8c\u6210\u9700\u8981\u7684\u5929\u6570     \n\u4e0d\u8fc7\u8fd9\u91cc\u600e\u4e48\u5224\u65ad\u67d0\u4e2a\u5929\u6570\u5230\u5e95\u884c\u4e0d\u884c\u5462\uff1f    \n\u56e0\u4e3a\u53ea\u9700\u8981\u5224\u65ad\u884c\u4e0d\u884c\u800c\u4e0d\u9700\u8981\u5224\u65ad\u4f18\u4e0d\u4f18   \n\u6240\u4ee5\u53ea\u9700\u8981\u77e5\u9053\u80fd\u4e0d\u80fd\u5b8c\u6210\u5c31\u53ef\u4ee5\u4e86    \n\u4e0d\u7ba1\u5b8c\u6210\u7684\u8fc7\u7a0b\u4f18\u4e0d\u4f18    \n\u90a3\u5c31\u8003\u8651\u6700\u5dee\u7684\u80fd\u591f\u5b8c\u6210\u7684\u60c5\u51b5    \n\u5c31\u662f\u5728\u89c4\u5b9a\u65f6\u95f4\u5185    \n\u6bcf\u4e00\u4e2a\u4efb\u52a1\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u65f6\u5019\u80fd\u591f\u628a\u5b83\u5b8c\u6210\u6389\u5c31\u662f\u53ef\u4ee5\u7684    \n\u6240\u4ee5\u5728\u4e0d\u662f\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u60c5\u51b5\u4e0b\u5c31\u56e4\u79ef\u80fd\u91cf    \n\u5728\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u5730\u65b9\u5c31\u5b8c\u6210    \n\u5982\u679c\u5b8c\u6210\u4e0d\u4e86\u90a3\u5c31\u662f\u4e0d\u884c   \n\u5230\u6700\u540e\u518d\u68c0\u67e5\u4e00\u4e0b\u4e00\u5171m\u4e2a\u4efb\u52a1\u662f\u4e0d\u662f\u6bcf\u4e00\u4e2a\u4efb\u52a1\u90fd\u5b8c\u6210\u4e86       \n## \u3010\u5b8c\u6574\u4ee3\u7801\u3011\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#define int long long\nusing namespace std;\n\nint read()\n{\n\tint sum = 0,fg = 1;\n\tchar c = getchar();\n\twhile(c < '0' || c > '9')\n\t{\n\t\tif(c == '-')fg = -1;\n\t\tc = getchar();\n\t}\n\twhile(c >= '0' && c <= '9')\n\t{\n\t\tsum = sum * 10 + c - '0';\n\t\tc = getchar();\n\t}\n\treturn sum * fg;\n}\nconst int Max = 100005;\nint d[Max];\nint a[Max];\nint t[Max];\nint n,m;\nbool check(int x)\n{\n\tmemset(t,0,sizeof(t));\n\tint tot = 0;\n\tint acioi = 0;\n\tfor(register int i = 1;i <= x;++ i)\n\t\tt[d[i]] ++;\n\tfor(register int i = 1;i <= x;i ++)\n\t{\n\t\tif(d[i] != 0)\n\t\t{\n\t\t\tt[d[i]] -= 1;\n\t\t\tif(t[d[i]] == 0)\n\t\t\t{\n\t\t\t\tacioi ++;\n\t\t\t\ttot -= a[d[i]];\n\t\t\t\tif(tot < 0)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse\n\t\t\t\ttot ++;\n\t\t}\n\t\telse\n\t\t\ttot ++;\n\t}\n\tfor(register int i = 1;i <= m;++ i)\n\t\tif(t[i] != 0)\n\t\t\treturn false;\n\tif(acioi == m)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\n\nsigned main()\n{\n//\tfreopen(\"generals.in\",\"r\",stdin);\n//\tfreopen(\"generals.out\",\"w\",stdout);\n\tn = read(),m = read();\n\tfor(register int i = 1;i <= n;++ i)\n\t\td[i] = read();\n\tfor(register int i = 1;i <= m;++ i)\n\t\ta[i] = read();\n\tint l = 1,r = n + 1;\n\twhile(l < r)\n\t{\n\t\tint mid = (l + r) >> 1;\n\t\tif(check(mid))r = mid;\n\t\telse\tl = mid + 1;\n\t}\n\tif(l == n + 1)\n\t{\n\t\tcout << -1 << endl;\n\t\treturn 0;\n\t}\n\tcout << l << endl;\n\treturn 0;\n}\n```",
        "postTime": 1573202010,
        "uid": 186489,
        "name": "EarthGiao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF732D \u3010Exams\u3011"
    },
    {
        "content": "# \u8003\u8651\u4e8c\u5206\n\u8bb0\u5f55\u6bcf\u4e00\u79d1\u7684\u8003\u8bd5\u65f6\u95f4\n\u4eca\u5929\u4e0d\u8003\u5c31\u589e\u52a0\u53ef\u590d\u4e60\u5929\u6570\n\u4eca\u5929\u8003\u8bd5\u5c31\u770b\u524d\u51e0\u5929\u7684\u53ef\u590d\u4e60\u5929\u6570\u591f\u4e0d\u591f\n\u5c31\u53ef\u4ee5\u5199\u51facheck\u4e86\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<map>\n#include<queue>\n#include<stack>\n#include<iomanip>\n#define maxn 100005\ntypedef long long ll;\nint n,m;\nint d[maxn],a[maxn]; \nint vis[maxn];\nusing namespace std;\ntemplate <class T> void read(T &x)\n{\n\tx=0;int f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9')\n\t{\n\t\tif(ch=='-')f=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9')\n\t{\n\t\tx=(x<<1)+(x<<3)+(ch^48);\n\t\tch=getchar();\n\t}\n\tx*=f;\n}\nbool fuck(int x)\n{\n\tint left_day=0,left_cla=m;\n\tmemset(vis,0,sizeof(vis));\n\tfor(int i=x;i>=1;i--)\n\tif(!vis[d[i]])vis[d[i]]=i;//\u6bcf\u4e00\u79d1\u5c3d\u91cf\u665a\u70b9\u8003 \u66f4\u5bb9\u6613\u6ee1\u8db3\u6761\u4ef6 \n\tfor(int i=1;i<=x;i++)\n\t{\t//\u5f88\u5f3a\u7684check \n\t\tif(d[i]==0||vis[d[i]]!=i)++left_day;//\u5982\u679c\u4eca\u5929\u4e0d\u8003\u5c31\u590d\u4e60\u4e00\u5929 \n\t\telse\n\t\t{\n\t\t\tleft_day-=a[d[i]];\n\t\t\tif(left_day<0)return false;\n\t\t\t--left_cla;\n\t\t}\n\t}\n\treturn (!left_cla);//\u8003\u5b8c\u4e86\u5269\u4f59\u8bfe\u7a0b\u4e3a0 \n}\nint main()\n{\n\t//zzy\n\tread(n);read(m);\n\tfor(int i=1;i<=n;i++)read(d[i]);\n\tfor(int i=1;i<=m;i++)read(a[i]);\n\tint l=0,r=n,ans=-1;\n\twhile(l<=r)\n\t{\n\t\tint mid=(l+r)>>1;\n\t\tif(fuck(mid))ans=mid,r=mid-1;\n\t\telse l=mid+1;\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1543030514,
        "uid": 19814,
        "name": "\u89de\u7fb0\u6d99",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF732D \u3010Exams\u3011"
    },
    {
        "content": "## Description\n\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF732D)\n\n\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217\uff0c\u5982\u679c\u6709\u8003\u8bd5\uff0c\u53ef\u4ee5\u9009\u62e9\u8003\u8bd5\u6216\u8005\u590d\u4e60\uff0c\u5426\u5219\u53ea\u80fd\u590d\u4e60\uff0c\u6c42\u6700\u5c11\u7b2c\u51e0\u5929\u624d\u80fd\u8003\u5b8c\u6240\u6709\u7684\u8003\u8bd5\u3002\n\n$1 \\leq n ,m\\leq 10 ^ 5$\u3002\n\n\u8003\u8bd5\u7684\u65f6\u5019\u4ee5\u4e3a\u8fd9\u662f\u4e2a DP\uff0c\u4f46\u662f\u4e0d\u4f1a\u5904\u7406\u91cd\u590d\u60c5\u51b5\uff0c\u6240\u4ee5\u5c31 gg \u4e86\uff0c\u8003\u5b8c\u540e\u624d\u77e5\u9053\u53ef\u4ee5\u4e8c\u5206 + \u8d2a\u5fc3\u505a\u3002\n\n## Solution\n\n\u672c\u9898\u77e5\u8bc6\u70b9 : \u4e8c\u5206\uff0c\u8d2a\u5fc3\u3002\n\n\u9996\u5148\u6765\u5224\u65ad\u4e0d\u5408\u6cd5\u60c5\u51b5\uff0c\u8d2a\u5fc3\u7684\u60f3\uff0c\u5982\u679c\u6bcf\u573a\u8003\u8bd5\u7684\u6700\u540e\u7684\u8003\u8bd5\u673a\u4f1a\u90fd\u6ca1\u6cd5\u901a\u8fc7\u8003\u8bd5\u7684\u8bdd\uff0c\u80af\u5b9a\u662f\u6ca1\u6cd5\u901a\u8fc7\u6240\u6709\u7684\u8003\u8bd5\uff0c\u56e0\u4e3a\u8fd9\u6837\u7684\u60c5\u51b5\u6512\u7684\u5175\u529b\u662f\u6700\u591a\u7684\uff0c\u901a\u8fc7\u8fd9\u6837\uff0c\u5c31\u53ef\u4ee5\u5224\u65ad\u662f\u5426\u6709\u89e3\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u6700\u4f18\u60c5\u51b5\uff0c\u5982\u679c\u6700\u540e\u4e00\u4e2a\u8003\u8bd5\u80fd\u5728\u524d\u9762\u5b8c\u6210\u4e14\u80fd\u591f\u901a\u8fc7\u6240\u6709\u7684\u8003\u8bd5\uff0c\u6211\u4eec\u80af\u5b9a\u662f\u53bb\u8003\u8bd5\u800c\u4e0d\u662f\u53bb\u590d\u4e60\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u4e00\u4e2a\u503c ```Num```\uff0c\u8868\u793a\u5728 ```Num``` \u524d\u7684\u5929\u4e4b\u4e2d\u662f\u5426\u80fd\u591f\u5b8c\u6210\u6240\u6709\u7684\u8003\u8bd5\u3002\n\n\u63a5\u4e0b\u6765\u662f check \u7684\u8fc7\u7a0b\uff0c\u5224\u65ad\u662f\u5426\u5408\u6cd5\uff0c\u6211\u4eec\u4ece\u6700\u540e\u4e00\u5929\u5f80\u524d\u679a\u4e3e\uff0c\u5982\u679c\u78b0\u5230\u8981\u8003\u7684\u8003\u8bd5\u5c31\u52a0\u4e0a\u70b9\u6570\u5e76\u6253\u4e0a\u6807\u8bb0\uff0c\u5426\u5219\u5c31\u79ef\u6512\u70b9\u6570\u3002\n\n\u5982\u679c\u53d1\u73b0\u70b9\u6570 $> 0$ \u6216\u8005\u662f\u6709\u6ca1\u6709\u6807\u8bb0\u8fc7\u7684\u8fd4\u56de ```false```\uff0c\u5426\u5219\u662f ```true```\u3002\n\n## Code\n```\n#include <cstdio>\n#include <cmath>\n#include <iostream>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nconst int MAXN = 1e5 + 10;\nint a[MAXN],b[MAXN],id[MAXN],vis[MAXN];\nint Ans = 0;\nint n,m;\ninline int read()\n{\n\tint s = 0, f = 0;char ch = getchar();\n\twhile (!isdigit(ch)) f |= ch == '-', ch = getchar();\n\twhile (isdigit(ch)) s = s * 10 + (ch ^ 48), ch = getchar();\n\treturn f ? -s : s;\n}\ninline int Max(int x,int y) {return x > y ? x : y;}\ninline int Min(int x,int y) {return x < y ? x : y;}\ninline bool check(int Num)\n{\n  int res = 0;\n  memset(vis,0,sizeof vis);\n  for(int i = Num;i >= 1;i --) {\n    if(a[i] != 0 && !vis[a[i]]) {\n      res += b[a[i]];\n      vis[a[i]] = true;\n    } \n    else if(res != 0) res --;\n  }\n  if(res > 0) return false;\n  for(int i = 1;i <= m;i ++) if(!vis[i]) return false;\n  return true;\n}\nsigned main()\n{\n//  freopen(\"generals.in\",\"r\",stdin);\n//  freopen(\"generals.out\",\"w\",stdout);\n  n = read(),m = read();\n  for(int i = 1;i <= n;i ++) a[i] = read();\n  for(int i = 1;i <= m;i ++) b[i] = read();\n  int L = 1,R = n;\n  while(L <= R) {\n    int mid = (L + R) >> 1;\n    if(check(mid)) R = mid - 1,Ans = mid;\n    else L = mid + 1;\n  }\n  if(!Ans) puts(\"-1\");\n  else printf(\"%d\\n\",Ans);\n//  fclose(stdin);\n//  fclose(stdout);\n  return 0;\n}\n```",
        "postTime": 1635492811,
        "uid": 381904,
        "name": "\u659c\u63fd\u6b8b\u7bab",
        "ccfLevel": 6,
        "title": "\u3010CF732D Exams\u3011 \u9898\u89e3"
    },
    {
        "content": "\u4eca\u4e0a\u5348\u7684\u6a21\u62df\u8d5b\u8003\u4e86\u8fd9\u9053\u9898\uff0c\u6539\u4e86\u4e00\u4e0b\u9898\u9762\u3002\n\n\u672c\u6765\u5207\u6389\u4e86\uff0c\u8003\u573a\u6e90\u7801\u4ea4\u5230 CF \u4e0a\u4e5f\u8fc7\u4e86\uff0c\u4f46\u662f\u56e0\u4e3a\u4f60\u6559\u5e08\u673a\u8bc4\u6d4b\u592a\u725b\u903c\u786c\u662f\u628a\u6211\u4ee3\u7801\u5224\u9519\u4e86\uff0c\u73b0\u5728\u4e5f\u4e0d\u662f\u5f88\u7406\u89e3\u4e3a\u4ec0\u4e48\u3002\n\n- - -\n\n\u7528\u4e86\u4e00\u79cd\u548c\u5927\u591a\u6570\u4eba\u4e0d\u4e00\u6837\u7684\u65b9\u6cd5\u3002\n\n\u9996\u5148\u8003\u8651\u4ec0\u4e48\u65f6\u5019\u65e0\u89e3\u3002\n\n\u663e\u7136\uff0c\u8d8a\u665a\u653b\u51fb\u4e00\u4e2a\u654c\u4eba\uff0c\u5c31\u8d8a\u6709\u53ef\u80fd\u51fb\u8d25\u4ed6\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u8ba9\u6240\u6709\u654c\u4eba\u5728\u6700\u540e\u51fa\u73b0\u65f6\u523b\u65f6\u88ab\u653b\u51fb\uff0c\u4ecd\u4e0d\u80fd\u51fb\u8d25\u6240\u6709\u4eba\uff0c\u90a3\u4e48\u65e0\u89e3\u3002\n\n\u7136\u540e\u6211\u4eec\u518d\u8003\u8651\u5982\u4f55\u53d6\u6700\u4f18\u7b54\u6848\u3002\n\n\u8ba9\u6240\u6709\u4eba\u5728\u6700\u540e\u65f6\u523b\u88ab\u51fb\u8d25\u80af\u5b9a\u662f\u6700\u52a3\u7684\u4e00\u79cd\u7b54\u6848\uff0c\u90a3\u4e48\u60f3\u8981\u4f7f\u7b54\u6848\u5c3d\u53ef\u80fd\u4f18\uff0c\u80af\u5b9a\u8981\u6bcf\u6b21\u627e\u51fa\u6700\u540e\u4e00\u4e2a\u88ab\u6d88\u706d\u7684\u654c\u4eba\uff0c\u4f7f\u4ed6\u7684\u51fa\u73b0\u65f6\u523b\u53d8\u6210\u4e0a\u4e00\u4e2a\uff0c\u518d\u5c1d\u8bd5\u80fd\u5426\u5168\u90e8\u51fb\u8d25\u3002\n\n\u63a5\u7740\u8003\u8651\u4e00\u4e0b\uff0c\u79fb\u52a8\u4e00\u4e2a\u654c\u4eba\u4f1a\u4ea7\u751f\u4ec0\u4e48\u5f71\u54cd\u3002\n\n\u6211\u4eec\u5148\u8bb0\u5f55\u6700\u52a3\u60c5\u51b5\u4e0b\u5230\u6bcf\u4e2a\u65f6\u523b\u7684\u58eb\u5175\u6570\u91cf\u3002\n\n\u5047\u8bbe\u6211\u4eec\u6700\u540e\u51fa\u73b0\u7684\u654c\u4eba\u4f4d\u7f6e\u4e3a $x$\uff0c\u8fd9\u4e2a\u654c\u4eba\u7684\u4e0a\u4e00\u4e2a\u51fa\u73b0\u4f4d\u7f6e\u662f $y$\uff0c\u6d88\u706d\u8fd9\u4e2a\u654c\u4eba\u9700\u8981\u82b1\u8d39 $v$ \u7684\u58eb\u5175\u3002\n\n\u90a3\u4e48\u6211\u4eec\u628a\u8fd9\u4e2a\u58eb\u5175\u4ece $x$ \u79fb\u8d70\uff0c\u663e\u7136 $[x,n]$ \u4f4d\u7f6e\u7684\u58eb\u5175\u6570\u8981\u5728\u73b0\u5728\u7684\u57fa\u7840\u4e0a\u52a0 $v+1$ \u4e2a\uff08\u653b\u51fb\u82b1\u8d39\u7684 $v$ \u4e2a\u4e0e\u8d70\u5230 $x$ \u4f4d\u7f6e\u65f6\u65b0\u589e\u7684 $1$ \u4e2a\uff09\u3002\n\n\u7136\u540e\u6211\u4eec\u628a\u8fd9\u4e2a\u58eb\u5175\u63d2\u5165\u5230\u4f4d\u7f6e $y$\uff0c\u90a3\u4e48 $[y,n]$ \u7684\u58eb\u5175\u6570\u8981\u5728\u73b0\u5728\u7684\u57fa\u7840\u4e0a\u51cf\u53bb $v+1$ \u4e2a\uff0c\u7406\u7531\u540c\u4e0a\u3002\n\n\u5982\u4f55\u5224\u65ad\u79fb\u52a8\u8fd9\u4e2a\u58eb\u5175\u5408\u4e0d\u5408\u6cd5\u5462\uff1f\u53ea\u9700\u8981\u5224\u65ad\u51cf\u53bb\u8fd9\u4e2a\u503c\u4e4b\u540e\uff0c$[y,n]$ \u4f4d\u7f6e\u6709\u6ca1\u6709\u51fa\u73b0\u8d1f\u6570\u5373\u53ef\uff0c\u539f\u56e0\u663e\u7136\u3002\u5177\u4f53\u64cd\u4f5c\u65f6\u53ef\u4ee5\u6c42\u51fa $[y,n]$ \u4f4d\u7f6e\u7684\u6700\u5c0f\u503c\uff0c\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u5927\u4e8e\u7b49\u4e8e $v+1$\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u5e8f\u5217\u8fdb\u884c\u533a\u95f4\u52a0\u548c\u533a\u95f4\u6c42\u6700\u5c0f\u503c\u4e24\u79cd\u64cd\u4f5c\uff0c\u4e0a\u7ebf\u6bb5\u6811\u5373\u53ef\u3002\n\n```cpp\nbool vis[maxn];\nint n,m,tot,Ans,all,a[maxn];\nint lst[maxn],ck[maxn];\nint pos[maxn],val[maxn];\ndeque<int> id[maxn];\nstruct node{int a,b;};\ndeque<node> q;\n\nnamespace Seg{\n  #define ls x<<1\n  #define rs x<<1|1\n  int minx[maxn<<2],lazy[maxn<<2];\n  \n  void pushup(int x){\n    minx[x]=min(minx[ls],minx[rs]);\n  }\n  \n  void pushdown(int x){\n    if(lazy[x]==0) return;\n    lazy[ls]+=lazy[x];lazy[rs]+=lazy[x];\n    minx[ls]+=lazy[x];minx[rs]+=lazy[x];\n    lazy[x]=0;\n  }\n  \n  void build(int x,int l,int r){\n    if(l==r){\n      minx[x]=a[l];\n      return;\n    }\n    int mid=l+r>>1;\n    build(ls,l,mid);\n    build(rs,mid+1,r);\n    pushup(x);\n  }\n  \n  void update1(int x,int l,int r,int L,int R,int val){\n    if(L<=l&&R>=r){\n      minx[x]+=val;\n      lazy[x]+=val;\n      return;\n    }\n    int mid=l+r>>1;pushdown(x);\n    if(L<=mid) update1(ls,l,mid,L,R,val);\n    if(R>=mid+1) update1(rs,mid+1,r,L,R,val);\n    pushup(x);\n  }\n  \n  int query(int x,int l,int r,int L,int R){\n    if(L<=l&&R>=r) return minx[x];\n    int mid=l+r>>1,ans=INF;pushdown(x);\n    if(L<=mid) ans=min(ans,query(ls,l,mid,L,R));\n    if(R>=mid+1) ans=min(ans,query(rs,mid+1,r,L,R));\n    return ans;\n  }\n}\n\nsigned main(){\n  n=read(); m=read();\n  for(int i=1;i<=n;i++){\n    pos[i]=read();\n    if(pos[i]){\n      id[pos[i]].push_front(i);\n      q.push_front((node){i,pos[i]});\n    }\n  }\n  for(int i=n;i>=1;i--){\n    if(!vis[pos[i]]||!pos[i]){\n      vis[pos[i]]=1;\n      if(pos[i]) lst[i]=pos[i],id[pos[i]].pop_front(),Ans=max(Ans,i);\n    }\n    else lst[i]=0;  \n  }\n  for(int i=1;i<=m;i++) val[i]=read();\n  for(int i=1;i<=n;i++){\n    if(lst[i]){\n      all++;\n      tot-=val[lst[i]];\n      if(tot<0) return puts(\"-1\"),0; \n    }\n    else tot++;\n    a[i]=tot;\n  }\n  if(all<m) return puts(\"-1\"),0;\n  Seg::build(1,1,n);\n  while(1){\n    if(q.size()==m) break;\n    node P=q.front();q.pop_front();\n    \n    int fir=P.a,sec=P.b;\n    int nxt_pos=id[sec].front();  \n    \n    id[sec].pop_front();\n    Seg::update1(1,1,n,fir,n,1+val[sec]);\n    int minx=Seg::query(1,1,n,nxt_pos,n);\n    \n    if(minx<1+val[sec]||minx>=INF) return printf(\"%d\\n\",Ans),0;\n    Seg::update1(1,1,n,nxt_pos,n,-1-val[sec]);Ans=q.front().a;\n  }\n  printf(\"%d\\n\",Ans);\n  return 0;\n}\n```",
        "postTime": 1635492489,
        "uid": 281497,
        "name": "KEBrantily",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF732D  \u3010Exams\u3011"
    },
    {
        "content": "\u6700\u540e\u65e0\u826f\u5ba3\u4f20\u4e00\u4e0b\u535a\u5ba2 $wwwwww$      \n[\u6587\u7ae0\u5217\u8868 - \u5730\u7075\u6bbf - \u6d1b\u8c37\u535a\u5ba2](https://www.luogu.org/blog/koishikoishi/) \n\n\n---\n\n## \u77e5\u8bc6\u70b9: \u8d2a\u5fc3, \u4e8c\u5206\u7b54\u6848, \u6a21\u62df \n\n\n\n### [\u539f\u9898\u9762](https://www.luogu.org/problem/CF732D)\n\n\n### \u5206\u6790\u9898\u610f:\n\n\u53ef\u4ee5\u53d1\u73b0 , \u590d\u4e60\u7684\u79d1\u76ee\u79cd\u7c7b\u662f\u6ca1\u6709\u5f71\u54cd\u7684   \n\u53ef\u6839\u636e\u8003\u8bd5\u7684\u4e0d\u540c \u8c03\u6574\u590d\u4e60\u8bfe\u76ee  \n\u53ea\u9700\u8981\u8003\u8651\u590d\u4e60\u5929\u6570\u662f\u5426\u8db3\u591f\u5373\u53ef   \n\n\u82e5\u53ea\u8003\u8651 \u80fd\u5426\u5b8c\u6210\u6240\u6709\u8003\u8bd5:     \n- \u663e\u7136, \u5728\u4e00\u6b21\u8003\u8bd5\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u65f6\u5c06\u5176\u5b8c\u6210\u5fc5\u7136\u6700\u4f18   \n  \u56e0\u4e3a\u8fd9\u6837\u6709 \u6700\u591a\u7684\u590d\u4e60\u65f6\u95f4    \n  \n  \u82e5\u5728\u4e0a\u8ff0\u60c5\u51b5\u4e0b\u4ecd\u7136\u65e0\u6cd5\u5c06\u6240\u6709\u8003\u8bd5\u5b8c\u6210, \u5219\u5fc5\u4e0d\u5408\u6cd5    \n\n\u7531\u4e8e\u7b54\u6848\u6ee1\u8db3\u5355\u8c03\u6027, \u5219\u53ef\u8003\u8651\u4e8c\u5206\u7b54\u6848 :\n\n- \u68c0\u67e5\u5408\u6cd5\u6027\u65f6, \u6309\u7167\u4e0a\u8ff0\u8d2a\u5fc3\u7b56\u7565,    \n  \u5728\u6bcf\u4e00\u6b21\u8003\u8bd5 \u5728\u4e8c\u5206\u91cf\u4e4b\u524d\u7684\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e \u5b8c\u6210,   \n  \u5176\u4f59\u65f6\u95f4 \u90fd\u7528\u6765\u590d\u4e60, \u5fc5\u7136\u66f4\u4f18\n  \n  \u68c0\u67e5\u5728\u8003\u8bd5\u5929\u65f6, \u590d\u4e60\u5929\u6570\u662f\u5426\u8db3\u591f\u5b8c\u6210\u8003\u8bd5\u5373\u53ef\n  \n\u603b\u590d\u6742\u5ea6 $O(n\\log n)$\n\n---\n\n\u9644 $AC$ \u4ee3\u7801\n\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <ctype.h>\n#define int long long\nconst int MARX = 1e5 + 10;\n//=============================================================\nint N, M, first, ans, d[MARX], a[MARX], last[MARX], checker[MARX];\n//=============================================================\ninline int read()\n{\n    int s = 1, w = 0; char ch = getchar();\n    for(; !isdigit(ch); ch = getchar()) if(ch == '-') s = -1;\n    for(; isdigit(ch); ch = getchar()) w = (w << 1) + (w << 3) + (ch ^ '0');\n    return s * w;\n}\nbool check(int lim)//\u68c0\u67e5\u5408\u6cd5\u6027 \n{\n\tmemset(checker, 0, sizeof(checker));\n\tfor(int i = 1; i <= lim; i ++) last[d[i]] = i;//\u8bb0\u5f55\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e \n\tfor(int i = 1; i <= M; i ++) checker[last[i]] = a[i];//\u5bf9\u8fdb\u884c\u8003\u8bd5\u7684\u5929\u8fdb\u884c\u6807\u8bb0 \n\t\n\tfor(int i = 1, sum = 0; i <= lim; i ++)\n\t{\n\t  if(sum < checker[i]) return 0;//\u4e0d\u5408\u6cd5 \n\t  if(! checker[i]) sum ++;//\u7b2ci\u5929\u590d\u4e60 \n\t  else sum -= checker[i];//\u7b2ci\u5929\u8003\u8bd5 \n\t}\n\treturn 1;\n}\n//=============================================================\nsigned main()\n{\n\tN = read(), M = read();\n\tfor(int i = 1; i <= N; i ++)  \n\t{\n\t  d[i] = read();\n\t  if(! last[d[i]]) first = i;\n\t  last[d[i]] = i;\n\t}\n\tfor(int i = 1; i <= M; i ++)  \n\t{\n\t  a[i] = read();\n\t  //\u68c0\u67e5\u662f\u5426\u6709\u4e00\u79d1\u8003\u8bd5, \u5728N\u5929\u4e2d\u90fd\u6ca1\u6709\u51fa\u73b0: \n\t  if(! last[i]) {printf(\"-1\"); return 0;} \n\t}\n\t\n\tif(! check(N)) {printf(\"-1\"); return 0;}//\u68c0\u67e5\u662f\u5426\u80fd\u5b8c\u6210 \n\tfor(int l = first, r = N; l <= r;)//\u4e8c\u5206\u7b54\u6848 \n\t{\n\t  int mid = (l + r) >> 1;\n\t  if(check(mid)) ans = mid, r = mid - 1;//\u68c0\u67e5, \u8c03\u6574\u8fb9\u754c \n\t  else l = mid + 1;\n\t}\n\tprintf(\"%lld\", ans);\n}\n```\n",
        "postTime": 1573203839,
        "uid": 186186,
        "name": "\u7075\u4e4c\u8def\u7a7a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF732D \u3010Exams\u3011"
    },
    {
        "content": "\u8fd9\u9898\u53ef\u4ee5\u7528**\u4e8c\u5206\u7b54\u6848**\u6765\u505a\n\n\u90a3\u4e48\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u7528\u4e8c\u5206\u7b54\u6848\u5462\uff1f\n\n**\u7b54\u6848\u5f53\u7136\u662f\u6ee1\u8db3\u4e86\u5355\u8c03\u6027\u3002** \u5047\u8bbe\u7528$x$\u5929\u80fd\u591f\u8003\u5b8c\u6240\u6709\u8bd5\uff0c\u90a3\u4e48\u7528\u5927\u4e8e$x $\u5929\u5fc5\u5b9a\u4e5f\u80fd\u591f\u8003\u5b8c\u6240\u6709\u8bd5\uff0c\u6240\u4ee5\u6ee1\u8db3\u4e86\u5355\u8c03\u6027\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4e8c\u5206\u7b54\u6848\n\n\u90a3\u4e48\u5982\u4f55$check$\u5462\uff1f\u8003\u8651\u4e00\u4e0b\u8d2a\u5fc3\n\n\u8d2a\u5fc3\u601d\u8def\uff1a\u5728\u4e8c\u5206\u7684$mid$\u5929\u4e4b\u524d\u627e\u5230\u6bcf\u4e00\u79d1\u8003\u8bd5\u53ef\u4ee5\u8003\u7684\u6700\u540e\u4e00\u5929\uff0c\u53ea\u5728\u8fd9\u4e00\u5929\u53bb\u8003\u8fd9\u4e00\u95e8\u79d1\u76ee\uff0c\u5176\u5b83\u65f6\u95f4\u79ef\u6512\u590d\u4e60\u65f6\u95f4\uff0c\u82e5\u5728$mid$\u524d\u8fd9\u4e2a\u79d1\u76ee\u53ef\u8003\u7684\u6700\u540e\u4e00\u5929\u51fa\u73b0\u4e86\uff0c\u800c\u6b64\u65f6\u79ef\u6512\u7684\u590d\u4e60\u65f6\u95f4\u5e76\u4e0d\u8db3\u4ee5\u8003\u8fc7\u8fd9\u95e8\u79d1\u76ee\uff0c\u5219\u8bf4\u660e\u7528$mid$\u5929\u4e0d\u80fd\u8003\u5b8c\u8fd9\u4e9b\u79d1\u76ee\uff0c\u5426\u5219\u5c31\u8ba9\u8ba1\u6570\u5668$cnt$\u7684\u503c\u52a0\u4e00\uff0c\u8868\u793a\u73b0\u5728\u5df2\u7ecf\u8003\u4e86$cnt$\u95e8\uff0c\u6700\u540e\u68c0\u9a8c\u4e00\u4e0b$cnt$\u662f\u5426\u7b49\u4e8e$m$\uff0c\u82e5\u4e0d\u7b49\u4e8e\u5219\u8bf4\u660e\u8fd8\u6709\u79d1\u76ee\u5728$mid$\u5929\u524d\u6ca1\u6709\u51fa\u73b0\uff0c\u589e\u5927\u8303\u56f4\uff0c\u5426\u5219\u7f29\u5c0f\u8303\u56f4\uff0c\u8ba9$ans$\u7b49\u4e8e$mid$\u3002\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nconst int A = 1e5 + 11;\nconst int B = 1e6 + 11;\n\ninline int read() {\n\tchar c = getchar(); int x = 0, f = 1;\n\tfor( ; !isdigit(c); c = getchar()) if(c == '-') f = -1;\n\tfor( ; isdigit(c); c = getchar()) x = (x << 3) + (x << 1) + (c ^ 48);\n\treturn x * f;\n}\n\nint n, m, all, cnt;\nint d[A], w[A], a[A], la[A];\n\ninline bool check(int x) {\n\tmemset(la, 0, sizeof(la));\n\tfor(int i = 1; i <= n; i++) a[i] = d[i];\n\tfor(int i = 1; i <= x; i++) if(a[i]) a[la[a[i]]] = 0, la[a[i]] = i; \n\tint tl = 0, cnt = 0;\n\tfor(int i = 1; i <= x; i++) {\n\t\tif(a[i]) { tl -= w[a[i]]; if(tl < 0) return 0; else cnt++; }\n\t\telse tl++;\n\t}\n\treturn cnt == m; \n}\n\nint main() {\n\tn = read(), m = read();\n\tif(n < m) return puts(\"-1\"), 0;\n\tfor(int i = 1; i <= n; i++) d[i] = read();\n\tfor(int i = 1; i <= m; i++) w[i] = read(), all += w[i];\n\tif(all > n) return puts(\"-1\"), 0;\n\tint l = 0, r = n, ans = -1;\n\twhile(l <= r) {\n\t\tint mid = (l + r) >> 1;\n\t\tif(check(mid)) ans = mid, r = mid - 1;\n\t\telse l = mid + 1;\n\t}\n\treturn cout << ans << '\\n', 0;\n}",
        "postTime": 1573203365,
        "uid": 198323,
        "name": "loceaner",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF732D \u3010Exams\u3011"
    },
    {
        "content": "\u5728\u6b64\u5c31\u5199\u4e00\u4e0b\u601d\u8def\u5427\uff0c~~\u4ee3\u7801\u53ef\u4ee5\u8bf7\u5404\u4f4d\u5de8\u4f6c\u81ea\u5df1\u53bb\u4ea4~~\n\n\n------------\n\n## \u601d\u8def\n#### \u5bfb\u627e\u6700\u4f18\u4f4d\u7f6e\u7684\u9898\u76ee\uff0c\u8054\u60f3\u7528\u4e8c\u5206\u67e5\u627e\u3002\u679a\u4e3e\u6700\u4f18\u4f4d\u7f6e\uff0c\u5224\u65ad\u5373\u53ef\uff0c\u4e3b\u8981\u60f3\u5230\u7528\u4e8c\u5206\u5c31\u597d\u505a\u4e86\uff01\u6bcf\u6b21\u5224\u65ad\u67d0\u4e2a\u4f4d\u7f6e\u662f\u5426\u53ef\u884c\u65f6\uff0c\u4ece\u540e\u5f80\u524d\u8fdb\u884c\u8d2a\u5fc3\u7684\u8fdb\u884c\uff1b\u9047\u5230\u65b0\u7684\u672a\u901a\u8fc7\u7684\u8003\u8bd5\uff0c\u5219\u8fdb\u5165\u4e00\u4e2a\u961f\u5217\u7b49\u5f85\uff0c\u9047\u5230\u7a7a\u7684\u65e5\u671f\u5c31\u628a\u5b83\u7528\u4e8e\u5f53\u524d\u961f\u5217\u6700\u524d\u4f4d\u7f6e\u7684\u8003\u8bd5\uff0c\u76f4\u5230\u6ee1\u8db3m\u4e2a\u8003\u8bd5\u5c31\u884c\u4e86\u3002",
        "postTime": 1544445330,
        "uid": 69036,
        "name": "\u8c26\u8c26\u541b\u5b50",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF732D \u3010Exams\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5176\u5b9e\u5c31\u662f**\u8d2a\u5fc3+\u4e8c\u5206**  \n\u505a\u8fd9\u4e00\u9053\u9898\u65f6\u6211\u624d\u53d1\u73b0\u4e8c\u5206\u662f\u591a\u4e48\u66b4\u529b...\u6216\u8005\u662f\u6211\u60f3\u7684\u592a\u591a\u4e86...  \n\n\u5f00\u59cb\u65f6\u6211\u4e00\u76f4\u8003\u8651\u4e8c\u5206\u65f6\u78b0\u5230\u4e0d\u7528\u8003\u8bd5\u7684\u65f6\u95f4\u70b9\u600e\u4e48\u529e\uff0c\u800c\u540e\u624d\u60f3\u5230\u53ea\u8981\u5728\u5b58\u65f6\u95f4\u7684\u53d8\u91cf\u51cf\u4e00\u65f6\u5224\u65ad\u4e00\u4e0b\u6b63\u6570\u5c31\u597d\u4e86\uff0c\u56e0\u4e3a\u8fd9\u6837\u4e0d\u4ec5\u53ef\u4ee5\u907f\u514d\u628a\u5728\u8003\u5b8c\u4e86\u4e4b\u540e\u624d\u6765\u590d\u4e60\u7684\u65f6\u95f4\u5f53\u6210\u8003\u5b8c\u4e4b\u524d\u590d\u4e60\u7684\u65f6\u95f4\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u5224\u65ad\u53d8\u91cf\u6700\u540e\u662f\u5426\u4e3a0\u6765\u770b\u662f\u5426\u5728\u8003\u5b8c\u524d\u590d\u4e60\u5b8c\u6240\u6709\u79d1\u76ee\u3002  \n\n\u800c\u81f3\u4e8e\u627e\u5230\u6700\u4f18\u65f6\u95f4\uff0c\u5c31\u4ea4\u7ed9\u4e8c\u5206\u83cc\u5427\uff01\n\n~~~\n#include<iostream>\n#include<cstring>\nusing namespace std;\nint day[100005],tst[100005],ans=-1,n,m;;\nbool vis[100005];\nvoid t_part(int l,int r)\t\t//\u4e8c\u5206 \n{\n\twhile(l<=r)\n\t{\n\t\tint mid=(l+r)>>1;\n\t\tint cnt=0,tot=0;\n\t\t//cnt\u8bb0\u5f55\u53ef\u4ee5\u8003\u7684\u79d1\u76ee\u4e2a\u6570\uff0ctot\u8bb0\u5f55\u603b\u5171\u9700\u8981\u82b1\u7684\u65f6\u95f4 \n\t\tmemset(vis,0,sizeof vis);\n\t\tfor(int i=mid;i>=1;i--)\n\t\t{\n\t\t\tif(!vis[day[i]]&&day[i])\n\t\t\t{\n\t\t\t\ttot+=tst[day[i]];\n\t\t\t\tcnt++;\n\t\t\t\tvis[day[i]]=1;\n\t\t\t}\n\t\t\telse if(tot)\n\t\t\t\ttot--;\n\t\t}\n\t\tif(tot==0&&cnt==m)\n\t\t{\n\t\t\tans=mid;\n\t\t\tr=mid-1;\n\t\t}\n\t\telse l=mid+1;\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",&day[i]);\n\tfor(int i=1;i<=m;i++)\n\t\tscanf(\"%d\",&tst[i]);\n\tt_part(1,n);\n\tif(ans==-1) printf(\"-1\");\n\telse printf(\"%d\",ans);\n\treturn 0;\n}\n~~~",
        "postTime": 1546704262,
        "uid": 118707,
        "name": "mol\u8336\u86cb\u7cd5",
        "ccfLevel": 0,
        "title": "CF732D Exams  \u9898\u89e3\u62a5\u544a"
    }
]