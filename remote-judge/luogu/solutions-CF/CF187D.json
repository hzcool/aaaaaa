[
    {
        "content": "\n## BRT Contract\n\n### solution 1\uff1a\n\n**\u4e71\u641e\u505a\u6cd5\uff1a**\n\n\n\u6a21\u62df\u5f00\u8f66\u7684\u8fc7\u7a0b\uff0c\u6bcf\u4e00\u6b21\u9047\u5230\u7ea2\u706f\u65f6\u52a0\u4e0a\u7b49\u7eff\u706f\u6240\u9700\u7684\u65f6\u95f4\u3002\n\n\u6211\u4eec\u4f1a\u53d1\u73b0\u6211\u4eec\u5f00\u8f66\u8fc7\u7a0b\u4e2d\u9047\u5230\u7ea2\u7eff\u706f\u7684\u60c5\u51b5\uff0c\u53ea\u4e0e\u5f53\u524d\u65f6\u95f4\u9664\u4ee5 $(g+r)$ \u7684\u4f59\u6570\u6709\u5173\u3002\n\n\u800c\u5047\u5982\u6211\u4eec\u5728 $i$ \u8def\u53e3\u505c\u4e0b\u4e86\uff0c\u6211\u4eec\u518d\u6b21\u51fa\u53d1\u7684\u65f6\u95f4\u819c $(g+r)$ \u90fd\u7b49\u4e8e $0$ \u3002\n\n\u56e0\u6b64\u53ea\u8981\u6211\u4eec\u5728 $i$ \u8def\u53e3\u9047\u5230\u4e86\u7ea2\u706f\uff0c\u90a3\u4e48\u6211\u4eec\u518d\u6b21\u542f\u52a8\u540e\u8d70 $i->n$ \u8fd9\u6bb5\u8def\u5f84\u6240\u9700\u7684\u65f6\u95f4\u662f\u4e00\u5b9a\u7684\u3002\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u8bd5\u7740\u8bb0\u5fc6\u5316\u4e00\u4e0b\uff1a\n\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nlong long n,g,r,q;\nlong long a[100005],ans[100005];\nvector<pair<long long,long long> >vec;\nint main(){\n\tscanf(\"%lld%lld%lld\",&n,&g,&r);\n\tfor(int i=0;i<=n;i++)scanf(\"%lld\",&a[i]);\n\tmemset(ans,-1,sizeof(ans));\n\tscanf(\"%lld\",&q);\n\twhile(q--){\n\t\tlong long x;\n\t\tscanf(\"%lld\",&x);\n\t\tx+=a[0];\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif(x%(g+r)>=g){\n\t\t\t\tx+=(g+r-x%(g+r));\n\t\t\t\tif(~ans[i]){\n\t\t\t\t\tx+=ans[i];break;\n\t\t\t\t}\n\t\t\t\tvec.push_back(make_pair(i,x));\n\t\t\t}\n\t\t\tx+=a[i];\n\t\t}\n\t\tfor(vector<pair<long long,long long> >::iterator it=vec.begin();it!=vec.end();it++){\n\t\t\tans[(*it).first]=x-(*it).second;\n\t\t}vec.clear();\n\t\tprintf(\"%lld\\n\",x);\n\t}\n\n\treturn 0;\n}\n\n```\n\n\n\n\u8fd9\u79cd\u505a\u6cd5\u770b\u8d77\u6765\u4e0d\u662f\u5f88\u9760\u8c31\uff0c\u4f46\u5728\u968f\u673a\u6570\u636e\u4e0b\u7684\u8fd0\u884c\u901f\u5ea6\u63a5\u8fd1\u7ebf\u6027\uff0c\u78be\u538b\u6b63\u89e3\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/qv9fflmj.png)\n\n\n\u53ef\u4ee5\u770b\u5230\uff0c\u5feb\u4e86\u5c06\u8fd1\u4e00\u500d\u3002\n\n\n### solution 2\uff1a\n\n**\u6b63\u89e3\uff1a**\n\n\u4e71\u641e\u7ec8\u5f52\u662f\u4e71\u641e\uff0c\u603b\u662f\u53ef\u4ee5\u88ab\u7279\u6b8a\u6570\u636e\u5361\u5230 $O(qn)$ \u7684\uff08\u6bd4\u5982\u672c\u9898\u7684\u7b2c $34$ \u4e2a\u6d4b\u8bd5\u70b9\uff09\n\n\u4e4b\u6240\u4ee5\u4e0a\u9762\u7684\u7b97\u6cd5\u4f1a\u88ab\u5361\uff0c\u662f\u56e0\u4e3a\u5b83\u627e\u5230\u540e\u9762\u7b2c\u4e00\u4e2a\u7ea2\u706f\u7684\u8def\u53e3\u4ecd\u7136\u662f\u5728\u66b4\u529b\u627e\u3002\n\n\u8003\u8651\u4f18\u5316\u8fd9\u4e2a\u8fc7\u7a0b\u3002\n\n\u5bf9 $d$ \u6c42\u4e00\u904d\u524d\u7f00\u548c\uff0c\u5728\u4e0d\u8003\u8651\u4e2d\u9014\u7684\u7ea2\u706f\u7684\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u5728 $a$ \u65f6\u523b\u51fa\u53d1\uff0c\u5230\u8fbe $i$ \u70b9\u7684\u65f6\u95f4 $b$ \uff0c\u90a3\u4e48 $b-d[i]\u2261a(mod$ $(g+r))$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ea\u8981\u4ece\u540e\u5f80\u524d\u7ef4\u62a4\u8d77\u59cb\u65f6\u95f4\u819c $(g+r)$ \u7684\u6bcf\u4e2a\u4f59\u6570\u5bf9\u5e94\u7684\u7b2c\u4e00\u6b21\u9047\u5230\u7ea2\u706f\u7684\u4f4d\u7f6e\u5373\u53ef\u3002\n\n\u7531\u4e8e $g$\u3001$r$ \u7684\u8303\u56f4\u5f88\u5927\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 ODT \u6216\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,g,s,q;\nmap<int,int>mp;\ninline void update(int l,int r,int i){\n\tif(l==r)return ;\n\tmap<int,int>::iterator j=mp.lower_bound(l),k=mp.upper_bound(r);\n\tint tmp=(--k)->second;mp.erase(j,++k);mp[l]=i;mp[r]=tmp;\n}\nlong long a[100005],t[100005];\nint main(){\n\tscanf(\"%d%d%d\",&n,&g,&s);\n\ts+=g;mp[0]=n+1;\n\tfor(int i=1;i<=n+1;i++){\n\t\tscanf(\"%lld\",&a[i]);a[i]+=a[i-1];\n\t}\n\tfor(int i=n;i;i--){\n\t\tint l=(g-a[i]%s+s)%s,r=(s-a[i]%s);\n\t\tmap<int,int>::iterator it=mp.upper_bound(r);\n\t\tint j=(--it)->second;\n\t\tt[i]=(j==n+1?a[n+1]-a[i]:(a[j]-a[i]+s-1)/s*s+t[j]);\n\t\tif(l<r)update(l,r,i);\n\t\telse update(0,r,i),update(l,s,i);\n\t}\n\tscanf(\"%d\",&q);\n\twhile(q--){\n\t\tint x;scanf(\"%d\",&x);\n\t\tmap<int,int>::iterator it=mp.upper_bound(x%s);\n\t\tint j=(--it)->second;\n\t\tprintf(\"%lld\\n\",j==n+1?x+a[n+1]:(x+a[j]+s-1)/s*s+t[j]);\n\t}\n\n\treturn 0;\n}\n```\n\n\n\n\n\n",
        "postTime": 1629452214,
        "uid": 483966,
        "name": "\u4e00\u7c92\u5938\u514b",
        "ccfLevel": 0,
        "title": "BRT Contract \u9898\u89e3"
    },
    {
        "content": "\u4e0d\u540c\u65f6\u523b\u4ece\u5bb6\u51fa\u53d1\u4e00\u65e6\u5728\u4e00\u4e2a\u4f4d\u7f6e\u7b49\u4e86\u7ea2\u706f\u4e4b\u540e\u82b1\u8d39\u7684\u65f6\u95f4\u5c31\u56fa\u5b9a\u4e0d\u53d8\u4e86 , $f_i$ \u8868\u793a\u4ece $i$ \u4f4d\u7f6e\u5f00\u59cb\u7b49\u5b8c\u7ea2\u706f (\u53ef\u4ee5\u7406\u89e3\u4e3a\u65f6\u523b\u4e3a $0$ ) \u8d70\u5230\u7ec8\u70b9\u82b1\u8d39\u7684\u65f6\u95f4 , \u7136\u540e\u5012\u7740\u8ba1\u7b97\u3002\n\n\u5982\u4f55\u627e\u5230\u7b2c\u4e00\u4e2a\u9700\u8981\u7b49\u7ea2\u706f\u7684\u4f4d\u7f6e\u5462 , \u5982\u679c\u4ece\u5f00\u59cb\u5230\u7b2c $i$ \u4e2a\u4f4d\u7f6e\u7684\u8ddd\u79bb\u6a21 $(g+r)$ \u4f59\u6570\u4e3a $p$ , \u51fa\u53d1\u65f6\u95f4\u4e3a $t$ , \u5982\u679c\u6ee1\u8db3 $g \\le (t+p) \\% (g+r)$ \u5c31\u4ee3\u8868\u9700\u8981\u7b49\u8fd9\u4e2a\u7ea2\u706f , \u53ef\u4ee5\u53d1\u73b0 $t$ \u7684\u533a\u95f4\u6709\u4e24\u79cd\u60c5\u51b5\u3002\n\n$p\\le g : t\\in[g-p,r+g-1-p]$\n\n$g \\lt p : t\\in[0,r+g-1-p]\\cup[m-p+g,m-1]$\n\n\u7ef4\u62a4\u4e00\u4e2a\u7ebf\u6bb5\u6811 , \u652f\u6301\u533a\u95f4set\u5355\u70b9\u67e5\u8be2\u3002\n\n\u5982\u4f55\u8ba1\u7b97\u6bcf\u4e00\u4e2a $f_i$ \u5462 , \u5982\u679c\u5012\u7740\u5f80\u524d\u8003\u8651\u5230 $i$ \u65f6\u5047\u5b9a\u4e4b\u524d\u7684\u6ca1\u6709\u7ecf\u8fc7\u7ea2\u706f\u987a\u5229\u8fc7\u6765\u7684 , \u5728\u5bb6\u7b49 $x$ \u79d2 , \u4f7f\u4ece\u5bb6\u5230\u7b2c $i$ \u4e2a\u4f4d\u7f6e\u521a\u597d\u4eae\u8d77\u7eff\u706f , \u8fd9\u6837\u7b49\u4ef7\u4e8e\u65f6\u523b $0$ ,\u6700\u540e\u82b1\u8d39\u65f6\u95f4\u51cf\u53bb\u4ece\u5bb6\u5230 $i$ \u7684\u65f6\u95f4\u548c\u7b49\u7684 $x$ \u79d2\u5c31\u662f\u4ece $i$ \u4f4d\u7f6e\u5f00\u59cb\u8d70\u5230\u7ec8\u70b9\u82b1\u8d39\u7684\u65f6\u95f4\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee , \u627e\u51fa\u7b2c\u4e00\u4e2a\u9047\u5230\u7684\u7ea2\u706f $i$ , \u4ece\u5bb6\u5230 $i$ \u7684\u65f6\u95f4\u52a0\u7b49\u7ea2\u706f\u7684\u65f6\u95f4\u52a0 $f_i$ \u5c31\u662f\u6700\u7ec8\u7684\u7b54\u6848\u3002\n\n\u56e0\u4e3a\u503c\u57df\u6bd4\u8f83\u5927 , \u8981\u5199\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811 , \u6ce8\u610f\u6570\u7ec4\u5f00\u5927\u4e00\u4e9b\u3002\n\n\n\n------------\n\n\nCode\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <vector>\n\n#define int long long\n#define Lid (ch[id][0])\n#define Rid (ch[id][1])\n\nusing namespace std;\n\nint read(){int qrx=0,qry=1;char qrc=getchar();\nwhile(qrc<'0'||qrc>'9'){if(qrc=='-'){qry=-1,qrc=getchar();}else qrc=getchar();}\nwhile(qrc>='0'&&qrc<='9')qrx=qrx*10+qrc-48,qrc=getchar();return qrx*qry;}\n\nconst int N=2e6+7,Mod=998244353,INF=1e12+7;\nint n,m,G,R,d[N],X[N],f[N],Q,rt=1;\nsigned ch[N*8][2],tot=1,val[N*8];\n\nvoid pushdown(int id,int len){\n\tif(val[id]&&len>1){\n\t\tif(!Lid)Lid=++tot;\n\t\tif(!Rid)Rid=++tot;\n\t\tval[Lid]=val[Rid]=val[id],val[id]=0;\n\t}\n\treturn;\n}\n\nvoid update(int L,int R,int id,int l,int r,int x){\n\tpushdown(id,R-L+1);\n\tif(l<=L&&r>=R)val[id]=x,pushdown(id,R-L+1);\n\telse{\n\t\tint M=(L+R)>>1;\n\t\tif(l<=M)update(L,M,Lid,l,r,x);\n\t\tif(r>M)update(M+1,R,Rid,l,r,x);\n\t}\n\treturn;\n}\n\nint query(int L,int R,int id,int x){\n\tpushdown(id,R-L+1);\n\tif(L==R)return val[id];\n\tint M=(L+R)>>1;\n\tif(x<=M)return query(L,M,Lid,x);\n\telse return query(M+1,R,Rid,x);\n}\n\nint Query(int t){\n\tint p=query(0,m-1,rt,t%m);\n\tint ans=t+X[p]+f[p];\n\tif(p<=n)ans+=m-(X[p]+t)%m;\n\treturn ans;\n}\n\nsigned main(){\n\tn=read(),G=read(),R=read(),m=G+R;\n\tfor(int i=1;i<=n+1;i++)d[i]=read(),X[i]=X[i-1]+d[i];\n\tupdate(0,m-1,rt,0,m-1,n+1);\n\tfor(int i=n,p=0;i>=1;i--){\n\t\tp=m-X[i]%m,f[i]=Query(p)-X[i]-p,p=X[i]%m;\n\t\tif(p<=G)update(0,m-1,rt,G-p,m-1-p,i);\n\t\telse update(0,m-1,rt,0,m-1-p,i),update(0,m-1,rt,m-p+G,m-1,i);\n\t}\n\tQ=read();\n\tfor(int i=1;i<=Q;i++)printf(\"%lld\\n\",Query(read()));\n\treturn 0;\n}\n```\n",
        "postTime": 1635489408,
        "uid": 328485,
        "name": "Zimse",
        "ccfLevel": 9,
        "title": "[\u9898\u89e3] CF187D BRT Contract"
    },
    {
        "content": "\u4e00\u9053\u6bd4\u8f83\u597d\u7684\u7ebf\u6bb5\u6811\u9898\u3002\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u51e0\u4e2a\u6027\u8d28\u3002\n\n1. \u4f60\u8d70\u7684\u65f6\u95f4\u80af\u5b9a\u6709\u5173\u4e8e $g+r$ \u7684\u5468\u671f\uff0c\u6240\u4ee5\u5728\u6a21\u5468\u671f\u610f\u4e49\u4e0b\u76f8\u540c\u7684\u4e24\u4e2a\u51fa\u53d1\u65f6\u95f4\u8d70\u5b8c\u8fd9\u4e00\u7a0b\u7684\u65f6\u95f4\u662f\u76f8\u540c\u7684\u3002\n\n2. \u5982\u679c\u4f60\u5728\u4e00\u4e2a\u7ea2\u7eff\u706f\u505c\u4f4f\uff0c\u90a3\u4e48\u4f60\u4e4b\u540e\u6240\u8d70\u7684\u5230\u7ec8\u70b9\u7684\u65f6\u95f4\u662f\u786e\u5b9a\u7684\u3002\u56e0\u4e3a\u4f60\u4ece\u8fd9\u4e2a\u70b9\u51fa\u53d1\u65f6\u95f4\u5728\u6a21\u5468\u671f\u4e0b\u662f\u76f8\u540c\u7684\u3002\n\n\u901a\u8fc7\u4ee5\u4e0a\u4e24\u4e2a\u6027\u8d28\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u627e\u5230\u7b2c\u4e00\u4e2a\u505c\u4f4f\u7684\u7ea2\u706f\uff0c\u8fd9\u4e2a\u5f88\u660e\u663e\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u67e5\u8be2\uff0c\u6211\u4eec\u628a\u6240\u6709\u7ea2\u706f\u5728\u6a21\u610f\u4e49\u4e0b\u7684\u4e0b\u6807\u53d8\u4e3a\u4ed6\u7684\u7f16\u53f7\uff0c\u6bcf\u4e2a\u4eba\u7b2c\u4e00\u4e2a\u505c\u4f4f\u7684\u7ea2\u706f\u5c31\u662f\u5728\u7ea2\u706f\u8fd9\u6bb5\u65f6\u95f4\u5185\u6240\u8d70\u8def\u7a0b\u4e2d\u6a21\u610f\u4e49\u4e0b\u7684\u6700\u5c0f\u503c\uff0c\u5373\u4ed6\u80fd\u78b0\u5230\u6a21\u610f\u4e49\u4e0b\u7684\u7ea2\u706f\u533a\u95f4\u4e2d\u6700\u5c0f\u7684\u7ea2\u706f\u3002\n\n\u56e0\u4e3a\u662f\u7b2c\u4e00\u4e2a\u78b0\u5230\u7684\u7ea2\u706f\uff0c\u6240\u4ee5\u4e4b\u524d\u4e00\u5b9a\u662f\u4e00\u76f4\u5728\u8d70\uff0c\u8fd9\u6837\u6211\u4eec\u53ea\u8981\u62ff\u8fd9\u4e2a\u7ea2\u706f\u4e4b\u524d\u6240\u7528\u65f6\u95f4\u52a0\u4e0a\u8fd9\u4e2a\u7ea2\u706f\u540e\u7684\u65f6\u95f4\u5373\u53ef\u3002\n\n\u6bcf\u4e2a\u7ea2\u706f\u540e\u6240\u7528\u65f6\u95f4\u662f\u53ef\u4ee5\u9884\u5904\u7406\u7684\uff0c\u5177\u4f53\u7684\u6211\u4eec\u5012\u7740\u5f80\u7ebf\u6bb5\u6811\u91cc\u63d2\u6570\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u7ea2\u706f\u5224\u65ad\u4ed6\u4e4b\u540e\u7b2c\u4e00\u4e2a\u78b0\u5230\u7684\u7ea2\u706f\uff0c\u91cd\u590d\u4e0a\u8ff0\u64cd\u4f5c\u3002\n\n\u4f46\u662f\u6211\u4e48\u53d1\u73b0 $g+r$ \u8fd9\u4e2a\u5468\u671f\u5f88\u5927\uff0c\u6211\u4eec\u53ef\u4ee5\u79bb\u6563\u5316\uff0c\u7136\u540e\u518d\u8fdb\u884c\u64cd\u4f5c\u3002\u5c31\u662f\u6ce8\u610f\u4e0d\u8981\u62ff\u79bb\u6563\u540e\u7684\u6570\u7ec4\u8fdb\u884c\u8be2\u95ee\u64cd\u4f5c\u3002 ~~\u5c0f\u849f\u84bb\u5c31\u662f\u56e0\u6b64\u5728\u6a21\u62df\u8d5b\u4e0a\u6302\u6389\uff0c\u8fd8\u4e0d\u77e5\u9053\u3002~~\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O (n \\log n)$\u3002\n\n\n\n------------\n\u4ee3\u7801\u5982\u4e0b\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n//static char buf[1000000],*p1=buf,*p2=buf;\n//#define getchar() p1==p2&&(p2=(p1=buf)+fread(buf,1,1000000,stdin),p1==p2)?EOF:*p1++\n#define re register\n#define mp make_pair\n#define fi first\n#define se second\n#define pb push_back\n#define int long long\n#define ls (rt<<1)\n#define rs (rt<<1|1)\n#define mid (l+r>>1)\nconst int maxn=4e5+5,M=34005;\ninline int read()\n{\n\tchar ch=getchar();bool f=0;int x=0;\n\tfor(;!isdigit(ch);ch=getchar())if(ch=='-')f=1;\n\tfor(;isdigit(ch);ch=getchar())x=(x<<1)+(x<<3)+(ch^48);\n\tif(f==1)x=-x;return x;\n}\ninline void print(int x)\n{\n    static int a[55];int top=0;\n    if(x<0) putchar('-'),x=-x;\n    do{a[top++]=x%10,x/=10;}while(x);\n    while(top) putchar(a[--top]+48);\n}\nint n,m,a[maxn],T,b[maxn],tot=0,Min[maxn*4],s[maxn],d[maxn],f[maxn],t2,t1,l[maxn],q,x,ans;\nvoid pushup(int rt){Min[rt]=min(Min[ls],Min[rs]);}\nvoid build(int rt,int l,int r)\n{\n\tif(l==r){Min[rt]=1e9;return;}\n\tbuild(ls,l,mid),build(rs,mid+1,r);pushup(rt);\n}\nvoid change(int rt,int l,int r,int x,int num)\n{\n\tif(l>x||r<x)return;\n\tif(l==r){Min[rt]=num;return;}\n\tchange(ls,l,mid,x,num),change(rs,mid+1,r,x,num),pushup(rt);\n}\nint query(int rt,int l,int r,int L,int R)\n{\n\tif(l>R||r<L)return 1e9;\n\tif(l>=L&&r<=R)return Min[rt];\n\treturn min(query(ls,l,mid,L,R),query(rs,mid+1,r,L,R));\t\n}\nint get(int l,int r)\n{\n\tint x=lower_bound(b+1,b+n+1,l)-b;\n\tint y=lower_bound(b+1,b+n+1,r)-b;\n\tif(b[y]>r)y--;if(y==n+1)y--;\n\tif(x>y)return 1e9;\n\treturn query(1,1,n,x,y); \n}\nint find(int s)\n{\n\tint res=1e9,l,r;if(s==0)s=T;\n\tif(s<=t1)\n\t\tl=t1-s,r=T-s-1,res=min(res,get(l,r));\n\telse\n\t{\n\t\tl=0,r=T-s-1;res=min(res,get(l,r));\n\t\tl=t1-s+T,r=T-1;res=min(res,get(l,r));\n\t}\n\tif(res>n)return -1;\n\treturn res;\n}\nsigned main()\n{\n\t//freopen(\".in\",\"r\",stdin);\n\t//freopen(\".out\",\"w\",stdout);\n\tn=read(),t1=read(),t2=read();T=t1+t2;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tl[i]=read(),s[i]=s[i-1]+l[i];b[i]=(s[i])%T;\n\t}l[n+1]=read();s[n+1]=s[n]+l[n+1];\n\tsort(b+1,b+n+1);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint u=lower_bound(b+1,b+n+1,s[i]%T)-b;\n\t\td[i]=u;\n\t}\n\tbuild(1,1,n);f[n]=l[n+1];change(1,1,n,d[n],n);\n\tfor(int i=n-1;i>=1;i--)\n\t{\n\t\tint x=find(T-b[d[i]]);\n\t\tif(x==-1)\n\t\t\tf[i]=s[n+1]-s[i];\n\t\telse\n\t\t{\n\t\t\tint k=(s[x]-s[i]-1)/T+1;\n\t\t\tf[i]=f[x]+k*T;\n\t\t}\n\t\tchange(1,1,n,d[i],i);\n\t}\n\tq=read();\n\tfor(int i=1;i<=q;i++)\n\t{\n\t\tx=read();\n\t\tint y=find(x%T);\n\t\tif(y==-1)\n\t\t\tans=x+s[n+1];\n\t\telse\n\t\t{\n\t\t\tans=f[y];int k=s[y]+x;k=(k-1)/T+1;\n\t\t\tans=ans+k*T;\n\t\t}\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n \treturn 0;\n}\n\n```\n\n\u5982\u679c\u6709\u9519\u8bf7\u5e2e\u5fd9\u6307\u51fa\u8c22\u8c22\u3002\n",
        "postTime": 1635400955,
        "uid": 343748,
        "name": "louhao088",
        "ccfLevel": 9,
        "title": "\u9898\u89e3CF187D BRT Contract"
    },
    {
        "content": "\u4e0d\u59a8\u5c06\u7b49\u5f85\u8fd9\u4e2a\u52a8\u4f5c\u770b\u6210\u5728 $0$ \u65f6\u523b\u4e0a\u4e86\u4e00\u6761\u957f\u5ea6\u4e3a $t_i$ \u7684\u8def\uff0c\u7136\u540e\u8be2\u95ee\u7b54\u6848\u3002\u8fd9\u6837\u6bcf\u4e2a\u8be2\u95ee\u53d8\u6210\u4e86\u4e00\u5f00\u59cb\u662f\u7eff\u706f\u7684\u60c5\u51b5\u3002\n\n\u7136\u540e\u76f8\u5f53\u4e8e\u6bcf\u6b21\u6211\u4eec\u6539\u53d8\u7b2c\u4e00\u6761\u8def\u7684\u6743\u503c\uff0c\u540e\u9762\u7684\u8def\u7684\u4fe1\u606f\u4e0d\u53d8\u3002\u6211\u4eec\u8003\u8651\u9884\u5904\u7406\u540e\u9762\u7684\u4fe1\u606f\uff0c\u7136\u540e\u89e3\u51b3\u5f53\u524d\u7684\u95ee\u9898\u3002\n\n\u6ce8\u610f\u5230\uff0c\u5982\u679c\u6c42\u67d0\u4e2a\u4f4d\u7f6e\u51fa\u53d1\u521a\u597d\u4e3a\u7eff\u706f\u521a\u4eae\u7684\u65f6\u523b\u5230\u8fbe\u7ec8\u70b9\u7684\u65f6\u95f4\u5c31\u53ef\u4ee5\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u627e\u5230\u7b2c\u4e00\u4e2a\u649e\u7ea2\u706f\u7684\u4f4d\u7f6e\uff0c\u505c\u4e0b\u7b49\u5230\u7eff\u706f\uff0c\u53d1\u73b0\u53c8\u662f\u4e00\u4e2a\u5b50\u95ee\u9898\u3002\u8fd9\u6837\u540e\u9762\u7684\u4fe1\u606f\u53ef\u4ee5\u5904\u7406\uff0c\u8be2\u95ee\u4e5f\u53ef\u4ee5\u901a\u8fc7\u627e\u5230\u7b2c\u4e00\u4e2a\u649e\u7ea2\u706f\u7684\u4f4d\u7f6e\u7b97\u3002\uff08Motivation: \u5b50\u95ee\u9898\u8f6c\u5316\uff09\n\n\u90a3\u4e48\u73b0\u5728\u8981\u627e\u5230\u6bcf\u4e2a\u4f4d\u7f6e\u7b2c\u4e00\u6b21\u649e\u7ea2\u706f\u7684\u4f4d\u7f6e\u3002\u76f8\u5f53\u4e8e\u4e00\u6bb5\u540e\u7f00\u51cf\u53bb\u4e00\u6bb5\u540e\u7f00\u5bf9 $g+r$ \u53d6\u6a21\u662f\u5426\u5b58\u5728\u5728\u67d0\u4e2a\u7ea2\u706f\u8868\u793a\u7684\u533a\u95f4\uff0c\u5e76\u4e14\u53d6\u6700\u5c0f\u503c\u3002\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u7528\u6743\u503c\u7ebf\u6bb5\u6811\u89e3\u51b3\u3002\n\n\u56e0\u4e3a\u503c\u57df\u5f88\u5927\uff0c\u8981\u7528\u52a8\u6001\u5f00\u70b9\u3002\n\n```cpp\nvoid modify(LL l,LL r,LL &now,LL p,LL v)\n{\n\tif(!now)\tnow=++cnt,minn[now]=n+1;\n\tminn[now]=min(minn[now],v);\n\tif(l==r)\treturn ;\n\tMm;\n\tif(p<=mid)\tmodify(l,mid,lc[now],p,v);\n\telse\tmodify(mid+1,r,rc[now],p,v);\n}\nLL query(LL l,LL r,LL now,LL x,LL y)\n{\n\tif(x>y)\treturn n+1;\n\tif(!now)\treturn n+1;\n\tif(x<=l && r<=y)\treturn minn[now];\n\tMm,ret=n+1;\n\tif(x<=mid)\tret=min(ret,query(l,mid,lc[now],x,y));\n\tif(mid<y)\tret=min(ret,query(mid+1,r,rc[now],x,y));\n\treturn ret;\n}\nLL g,r,d[100005],p;\nint main(){\n\tn=read(),g=read(),r=read(),p=g+r;\n\tfor(LL i=0;i<=n;++i)\td[i]=read();\n\tfor(LL i=n;i;--i)\n\t{\n\t\tsuf[i]=suf[i+1]+d[i];\n\t\tLL t=suf[i]%p;\n\t\t// [t+1, t+r]\n\t\tLL pos=query(0,p-1,rt,t+1,min(p-1,t+r));\n\t\tif(t+r>p-1)\n\t\t{\n\t\t\tLL dt=t+r-p;\n\t\t\tpos=min(pos,query(0,p-1,rt,0,dt));\n\t\t}\n\t\tif(pos==n+1)\tdis[i]=suf[i];\n\t\telse\n\t\t{\n\t\t\tLL w=suf[i]-suf[pos];\n\t\t\tw%=p;\n\t\t\tw+=p;\n\t\t\tw%=p;\n\t\t\tw=p-w;\n\t\t\tdis[i]=(suf[i]-suf[pos]+dis[pos]+w);\n\t\t}\n\t\tmodify(0,p-1,rt,t,i);\n\t}\n\tLL q=read();\n\tfor(LL i=1;i<=q;++i)\n\t{\n\t\tLL T=read();\n\t\tLL d0=d[0]+T;\n\t\tT=T/p*p;\n\t\tsuf[0]=suf[1]+d0;\n\t\tLL t=suf[0]%p;\n\t\tLL pos=query(0,p-1,rt,t+1,min(p-1,t+r));\n\t\tif(t+r>p-1)\n\t\t{\n\t\t\tLL dt=t+r-p;\n\t\t\tpos=min(pos,query(0,p-1,rt,0,dt));\n\t\t}\n\t\tif(pos==n+1)\twrite(suf[0]);\n\t\telse\n\t\t{\n\t\t\tLL w=suf[0]-suf[pos];\n\t\t\tw%=p;\n\t\t\tw+=p;\n\t\t\tw%=p;\n\t\t\tw=p-w;\n\t\t\twrite(suf[0]-suf[pos]+dis[pos]+w);\n\t\t}\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1649059386,
        "uid": 184977,
        "name": "pomelo_nene",
        "ccfLevel": 9,
        "title": "\u5443\u5443\u5443 \u5443\u5443\u5443\u5443\u5443\u5443\u5443\u5443\u554a"
    },
    {
        "content": "### \u524d\u8a00 \n\n\u4e00\u4e2a $\\text{Map}$ \u8dd1\u8fc7 \u4e3b\u4e3b\u6811\u7684\u9898\u76ee\u3002\n\n### \u524d\u7f6e\u77e5\u8bc6\n\n- $\\text{Map}$ \u7684\u8fed\u4ee3\u5668\u548c\u4e00\u4e9b\u5185\u5d4c\u51fd\u6570\u7684\u5e94\u7528 \n\n- \u4e3b\u4e3b\u6811\n\n### Map\n\n\u8be5\u90e8\u5206\u611f\u8c22 @\u5929\u68a6 \u7684\u8bb2\u89e3\u8ba9\u6211\u5f7b\u5e95\u609f\u4e86\u8fd9\u4e2a\u9898\u76ee\u3002\n\n\u601d\u7ef4\u91cf\u6700\u96c6\u4e2d\u7684\u90e8\u5206\u5c31\u662f\u9884\u5904\u7406\u7684\u90e8\u5206\u4e86\u3002\n\n\u6211\u4eec\u8003\u8651\u8fd9\u4e48\u4e00\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u80fd\u5426\u6c42\u51fa\u4e00\u4e2a\u6570\u7ec4 $\\text{Time}_i$ \u8868\u793a\u5728\u7b2c $i$ \u4e2a\u7ea2\u7eff\u706f\u7684\u5730\u65b9\u8d70\u5230\u6700\u540e\u9700\u8981\u82b1\u8d39\u7684\u65f6\u95f4\u4e3a\u591a\u5c11\u3002\n\n\u5927\u6982\u91cd\u8981\u7684\u9884\u5904\u7406\u51fd\u6570\u6709\u4e00\u4e0b\u51e0\u4e2a\uff1a\n\n```cpp\nvoid Insert(int l ,int r,int id)\nint Find(int x)\nint calc(int x,int y)\n```\n\u6211\u4eec\u8003\u8651\u5982\u4f55\u9884\u5904\u7406\u51fa $\\text{Time}$ \u6570\u7ec4\uff1a\n\n\u9996\u5148\u5bf9\u957f\u5ea6 $\\text{len}_i$ \u90fd\u505a\u4e00\u4e2a\u524d\u7f00\u548c\uff0c\u8bbe\u5230\u8fbe\u67d0\u4e00\u4e2a\u7ea2\u7eff\u706f $i$ \u7684\u65f6\u95f4\u4e3a $a$\uff0c\u90a3\u4e48\u8003\u8651\u6c42\u51fa\uff0c\u5230\u8fbe\u8fd9\u4e2a\u7ea2\u7eff\u706f\u65f6\uff0c\u9700\u8981\u7b49\u5f85\u7684\u5230\u8fbe\u65f6\u95f4\u7684\u8303\u56f4\uff1a\n\n\u6211\u4eec\u8bbe\u51fa\u65b9\u7a0b\uff0c\u6c42\u51fa\u5230\u8fbe\u7684\u65f6\u95f4\u5728\u4e00\u4e2a\u7ea2\u706f\u7eff\u706f\u7684\u5468\u671f\u4e2d\u7684\u4f4d\u7f6e\u3002\n\n$$a+len_i \\equiv b\\ (\\bmod\\  p)$$\n\n\u628a $b = g , g + r$ \u5e26\u5165\u65b9\u7a0b\uff0c\u6c42\u51fa\u4e24\u4e2a\u8303\u56f4 $a_1,a_2$\u3002\n\n\u5728\u8fd9\u91cc\u8ba8\u8bba\u4e24\u79cd\u60c5\u51b5\uff0c\u56e0\u4e3a\u662f\u5728\u6a21\u610f\u4e49\u4e0b\uff0c\u6240\u4ee5\uff1a\n\n- $[a_1,a_2)$\n\n- $[0,a_2) , [a_1,g+r)$\n\n\u8fd9\u4e24\u79cd\u60c5\u51b5\u6240\u4ee3\u8868\u7684\u533a\u95f4\u53ef\u80fd\u662f\u4f1a\u5728\u7b2c $i$ \u4e2a\u7ea2\u7eff\u706f\u505c\u4e0b\u7684\u65f6\u95f4\u3002\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u600e\u4e48\u8986\u76d6\u8fd9\u4e2a\u533a\u95f4\u3002\n\n\u56e0\u4e3a\u957f\u5ea6\u7684\u8303\u56f4\u662f $10^9$ \uff0c\u56e0\u6b64\u8003\u8651\u7528 $\\text{map}$ \u79bb\u6563\u5316\u3002\n\n$\\text{map}$ \u7c7b\u578b\u6570\u7ec4 $vis_i = k$ \u8868\u793a\u5728 $i$ \u8fd9\u4e2a\u65f6\u95f4\u5230\u8fbe\u4f1a\u6700\u65e9\u5728\u7b2c $k$ \u4e2a\u7ea2\u7eff\u706f\u88ab\u622a\u4f4f\u3002\n\n\u8003\u8651\u7b2c\u4e00\u4e2a\u64cd\u4f5c $\\text{Insert}$\u3002\n\n\u6211\u4eec\u8003\u8651\u5982\u4f55\u53ef\u4ee5\u627e\u5230\u4ece\u4e00\u4e2a\u7ea2\u7eff\u706f $i$ \u5f00\u59cb\u8d70\uff0c\u88ab\u6700\u65e9\u622a\u4f4f\u7684\u7ea2\u7eff\u706f $j$\u3002\n\n\u53ef\u4ee5\u4ece\u540e\u5411\u524d\u4f9d\u6b21\u8986\u76d6\uff1a\n\n```cpp\nvoid Insert(int l ,int r,int id)\n{\n\tif(l == r) return;//\u56e0\u4e3a\u5f97\u5230\u7684\u662f\u4e00\u4e2a\u5de6\u95ed\u53f3\u5f00\u7684\u533a\u95f4\uff0c\u6240\u4ee5\u76f8\u7b49\u5c31\u662f\u6ca1\u6709\n\tauto L = vis.lower_bound(l);\n\tauto R = vis.upper_bound(r);\n\tint lst = prev(R , 1) -> second;\n\t//\u4fdd\u8bc1\u627e\u5230\u7684\u4e24\u4e2a\u8fed\u4ee3\u5668\u90fd\u662f\u5728 l\uff0cr \u533a\u95f4\u4e4b\u5185\u7684\u8986\u76d6 \n\tvis.erase(L,R);\n\tvis[l] = id;\n\tvis[r] = lst;\n\t//\u56e0\u4e3a\u662f\u4ece\u540e\u5411\u524d\uff0c\u6240\u4ee5\u662f\u76f4\u63a5\u8986\u76d6\u5f53\u524d\u7684\u8fd9\u4e2a\u533a\u95f4\u662f\u6700\u4f18\u7684\uff0c\u56e0\u4e3a\u6700\u540e\u8981\u627e\u5230\u7b2c\u4e00\u4e2a\u88ab\u622a\u4f4f\u7684  \n}\n```\n**\u6ce8\uff1a** $\\text{prev}(it,len)$ \u4ee3\u8868\u662f\u8fd4\u56de\u8fed\u4ee3\u5668 $\\text{it}$ \u524d\u7684\u7b2c $len$ \u4e2a\u8fed\u4ee3\u5668\u3002\n\n\n\u753b\u4e00\u4e2a\u56fe\u56fe\uff1a\n\n```cpp\nx-----------x-----------x-----------x\n       l-------------------r\n       \n```\n\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c$L$ \u6307\u5411\u8fd9\u7b2c $2$ \u4e2a $x$ \uff0c $R$ \u6307\u5411\u8fd9\u7b2c $4$ \u4e2a $x$\u3002\n\n$\\text{But}$ \uff0c\u6211\u4eec\u8981\u8986\u76d6\u7684\u662f $[2,3]$ \u8fd9\u4e4b\u95f4\u7684 $x$ \u3002\n\n\u800c\u4e14\u8fd9\u4e2a\u533a\u95f4\u4e00\u5b9a\u662f\u5de6\u95ed\u53f3\u5f00\u7684\uff0c\u6240\u4ee5\u66f4\u65b0\u65f6 $\\text{vis}_r$ \u91cc\u9762\u5e94\u8be5\u662f\u6307\u5411\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u662f\u539f\u672c\u7b2c $3$ \u4e2a $x$ \u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u5b9e\u73b0\u8986\u76d6\u4e86\u3002\n\n\u7136\u540e\uff0c\u6211\u4eec\u8003\u8651 $\\text{Find}$ \u51fd\u6570\u7684\u4f5c\u7528\uff0c\u627e\u5230\u4ece $x$ \u65f6\u95f4\u51fa\u53d1\u7684\u6700\u65e9\u7684\u88ab\u62e6\u622a\u7684\u7ea2\u7eff\u706f\u7684\u7f16\u53f7\u3002\n\n\u8fd9\u91cc\u540c\u6837\u4f53\u73b0\u51fa\u4e86\u4ece\u540e\u5411\u524d\u66f4\u65b0\u7684\u4f18\u70b9\uff0c\u56e0\u4e3a\u679a\u4e3e\u5230\u7ea2\u7eff\u706f $i$ \u7684\u65f6\u5019\uff0c$vis$ \u6240\u5b58\u50a8\u7684\u4e00\u5b9a\u662f\u5f80\u540e\u7684\u5e76\u4e14\u662f\u6700\u8fd1\u7684\uff0c\u56e0\u4e3a\u66f4\u8fdc\u7684\u5e76\u4e14\u5177\u6709\u76f8\u540c\u533a\u95f4\u7684\u4e00\u5b9a\u4f1a\u88ab\u8986\u76d6\u6389\uff0c\u6240\u4ee5\u4fdd\u8bc1\u4e86\u6700\u4f18\u6027\u3002\n\n\u8003\u8651\u5982\u4f55\u7528 $vis$ \u6570\u7ec4\u8fdb\u884c\u67e5\u627e\uff0c\u7ee7\u7eed\u753b\u56fe\u770b;\n\n```cpp\nx--------x--------|--x-------x\n                 pos\n```\n\n\u8981\u627e\u7684\u662f\u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u90a3\u4e48\u80af\u5b9a\u662f $\\text{lower\\_bound}$ \u4e00\u4e0b $l$ \uff0c\u7136\u540e\u8fd4\u56de\u524d\u9762\u4e00\u4e2a\u5373\u53ef\u3002\n\n```cpp\nint Find(int x)\n{\n\tx = x % mod;\n\tauto it = vis.upper_bound(x);\n\tint ret = prev(it , 1) -> second;\n\treturn ret; \n}\n```\n\n\u6700\u540e\u6700\u91cd\u8981\u7684\u662f\u8ba1\u7b97 $\\text{Time}$ \u503c\uff1a\n\n\u6211\u4eec\u8003\u8651\u9884\u5904\u7406\u7684\u65f6\u5019\u600e\u4e48\u505a\uff1f\n\n\u518d\u6b21\u58f0\u660e $\\text{Time}$ \u7684\u610f\u4e49\uff1a\u5728\u7ea2\u7eff\u706f $i$ **\u7b49\u5230\u7eff\u706f\u5f00\u59cb**\uff0c\u5230\u8fbe\u91cd\u70b9\u6240\u82b1\u8d39\u7684\u65f6\u95f4\u3002\n\n\u5047\u8bbe\u6211\u4eec\u6211\u4eec\u5df2\u7ecf\u8d70\u4e86 $x$ \u7684\u8ddd\u79bb\uff0c\u5e76\u4e14\u4f1a\u5728 $y$ \u8fd9\u4e2a\u7ea2\u7eff\u706f\u5904\u88ab\u622a\u505c\uff0c\u8003\u8651\u8ba1\u7b97\u4e00\u4e0b\u5176\u4e2d\u7684\u65f6\u95f4\u82b1\u8d39\uff0c\u9996\u5148\u58f0\u660e\u7684\u662f\uff0c\u6211\u4eec\u8fd9\u4e2a\u8d70\u4e86 $x$ \u7684\u8ddd\u79bb\uff0c\u662f\u5fc5\u987b\u4fdd\u8bc1\u8d70\u4e86\u8fd9 $x$ \u7684\u8ddd\u79bb\u4e4b\u540e\u6b63\u597d\u5904\u4e8e\u5b8c\u6574\u7684\u4e00\u4e2a\u5468\u671f\u7684\u521d\u59cb\u4f4d\u7f6e\uff08\u672b\u5c3e\u4f4d\u7f6e\u4e00\u6837\uff09\u3002\n\n\u7136\u540e\u5c31\u8003\u8651\uff0c\u5982\u679c $y=n+1$ \uff0c\u90a3\u4e48\u8fd9\u4e00\u6bb5\u82b1\u8d39\u7684\u65f6\u95f4\u4e00\u5b9a\u662f $len_y - x$\u3002\n\n\u53cd\u4e4b\uff0c\u90a3\u4e48\u4ed6\u8d70\u5230\u8fd9\u4e2a\u5730\u65b9\u505c\u6b62\u4e4b\u540e\uff0c\u80af\u5b9a\u4f1a\u7b49\u5230\u7ea2\u706f\u7ed3\u675f\u4e4b\u540e\u4e5f\u5c31\u662f\u5f00\u542f\u4e00\u4e2a\u65b0\u7684\u5468\u671f\u7684\u65f6\u5019\uff0c\u624d\u4f1a\u7ee7\u7eed\u8d70\uff0c\u90a3\u4e48\u5728\u8fd9\u671f\u95f4\u4e00\u5b9a\u4f1a\u662f\u82e5\u5e72\u4e2a\u5b8c\u6574\u7684\u5468\u671f\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u8003\u8651\u5230\uff0c\u8ba1\u7b97\u8fd9\u4e2a\u5468\u671f\u7684\u6570\u91cf\uff0c\u5e76\u4e14\u4e00\u5b9a\u4f1a\u662f\u5411\u4e0a\u53d6\u6574\u7684\u3002\n\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u5c0f $\\text{trick}$\uff1a\u5982\u679c\u6211\u4eec\u8981\u5bf9\u4e00\u4e2a $A$ \u4e3a\u4e00\u7ec4\uff0c\u5bf9 $a$ \u6c42\u4e00\u5171\u6709\u591a\u5c11\u4e2a $A$ \u7684\u6570\u91cf\u5411\u4e0a\u53d6\u6574\u7684\u8bdd\uff0c\u53ef\u4ee5\u8fd9\u4e48\u641e\uff1a\n\n$$ans =\\dfrac{a+A-1}{A}\\times A$$\n\n\u6839\u636e\u8fd9\u4e2a $\\text{trick}$ \u540c\u6837\u53ef\u4ee5\u5f97\u5230\u8fd9\u4e2a\u8ba1\u7b97\u5468\u671f\u7684\u6570\u91cf\uff1a\n\n$$ans = \\dfrac{len_y-x+mod-1}{mod}\\times mod$$\n\n\u4f46\u662f\u6211\u4eec\u7684 $\\text{calc}$ \u51fd\u6570\u8ba1\u7b97\u7684\u662f\uff0c\u8d70\u4e86 $x$ \u7684\u8ddd\u79bb\uff0c\u6700\u8fd1\u88ab\u622a\u65ad\u7684\u4f4d\u7f6e\u662f $y$ \u7ea2\u7eff\u706f\u7684\u60c5\u51b5\u7684\u5230\u8fbe\u6700\u540e\u91cd\u70b9\u7684\u65f6\u95f4\uff0c\u56e0\u4e3a\u662f\u4ece\u540e\u5411\u524d\u679a\u4e3e\u9884\u5904\u7406\uff0c\u6240\u4ee5\u8bf4\u9760\u540e\u7684 $\\text{Times}$ \u5df2\u7ecf\u5904\u7406\u597d\u4e86\u3002\n\n```cpp\nint calc(int x,int y)//\u5f53\u524d\u5df2\u7ecf\u8d70\u4e86 x \u7684\u65f6\u95f4\uff0c \u7b2c\u4e00\u4e2a\u88ab\u622a\u4f4f\u7684\u8def\u706f\u662f y  \n{\n\tif(y == n + 1) return len[y] - x;\n\telse return ((len[y] - x + mod - 1) / mod ) * mod + Time[y];\n\t//\u5176\u5b9e\u5c31\u662f (len[y] - x) / A \u5411\u4e0a\u53d6\u6574 * A ;\n\t// + A - 1 \u662f\u76f4\u63a5\u5411\u4e0a\u53d6\u6574\u4e86\u3002 \n} \n\n```\n\u6700\u540e\u8be2\u95ee\u7684\u90e8\u5206\u9700\u8981\u6ce8\u610f\u4e00\u4e2a\u5c0f\u5730\u65b9\uff0c\u56e0\u4e3a\u5f53\u524d\u8ba1\u7b97\u65f6\u5019\u7684 $x$ \u90fd\u662f\u5728\u4e00\u4e2a\u5468\u671f\u7684\u5f00\u59cb\uff0c\u4f46\u662f\u8be2\u95ee\u7684\u65f6\u5019\u521d\u59cb\u7684\u65f6\u95f4\u4e0d\u4e00\u5b9a\u4f1a\u5728\u4e00\u4e2a\u5468\u671f\u7684\u5f00\u59cb\uff0c\u90a3\u4e48\u8003\u8651\u5982\u4f55\u628a\u4ed6\u7ed9\u8f6c\u5316\u4e00\u4e0b\uff0c\u5047\u5982\u662f\u8fd9\u79cd\u60c5\u51b5\uff1a\n\n```cpp\n0---|----g-------r\n    x\n```\n\n\u8fd9\u79cd\u60c5\u51b5\u53ef\u4ee5\u8f6c\u5316\u4e3a\uff1a\n\n```cpp\n|--0---g---r\nx\n```\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u90fd\u662f\u6574\u7684\u533a\u95f4\u4e86\u3002(\u6700\u540e\u7684\u5730\u65b9\u591a\u5c11\u6709\u4e9b\u7406\u89e3\u4e0a\u7684\u95ee\u9898\uff0c\u5982\u6709\u5efa\u8bae\u8bf7\u79c1\u4fe1\u6307\u51fa\uff09\u3002\n\n### \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<map>\n#define int long long\nusing namespace std;\nconst int N = 2e5 + 9;\nconst int M = 2e5 + 9;\nint a[N],len[N]; \nint n,m,T;\nint ans,val;\nint g,r,mod;\nint Time[N]; \nmap<int,int> vis;//\u8bb0\u5f55\u4e00\u4e0b\u5728 i \u65f6\u523b - > \u4e0b\u4e00\u4e2a\u6709\u5143\u7d20\u7684\u65f6\u523b\uff0c\u4f1a\u88ab\u54ea\u4e00\u4e2a\u62e6\u622a\u4f4f \nint read()\n{\n\tint f=1,x=0;\n\tchar s=getchar();\n\twhile(s<'0'||s>'9'){if(s=='-')f=-1;s=getchar();}\n\twhile(s>='0'&&s<='9'){x=(x<<1)+(x<<3)+(s^'0');s=getchar();}\n\treturn f*x;\n}\nvoid Insert(int l ,int r,int id)\n{\n\tif(l == r) return;//\u56e0\u4e3a\u5f97\u5230\u7684\u662f\u4e00\u4e2a\u5de6\u95ed\u53f3\u5f00\u7684\u533a\u95f4\uff0c\u6240\u4ee5\u76f8\u7b49\u5c31\u662f\u6ca1\u6709\n\tauto L = vis.lower_bound(l);\n\tauto R = vis.upper_bound(r);\n\tint lst = prev(R , 1) -> second;\n\t//\u4fdd\u8bc1\u627e\u5230\u7684\u4e24\u4e2a\u8fed\u4ee3\u5668\u90fd\u662f\u5728 l\uff0cr \u533a\u95f4\u4e4b\u5185\u7684\u8986\u76d6 \n\tvis.erase(L,R);\n\tvis[l] = id;\n\tvis[r] = lst;\n\t//\u56e0\u4e3a\u662f\u4ece\u540e\u5411\u524d\uff0c\u6240\u4ee5\u662f\u76f4\u63a5\u8986\u76d6\u5f53\u524d\u7684\u8fd9\u4e2a\u533a\u95f4\u662f\u6700\u4f18\u7684\uff0c\u56e0\u4e3a\u6700\u540e\u8981\u627e\u5230\u7b2c\u4e00\u4e2a\u88ab\u622a\u4f4f\u7684  \n}\nint calc(int x,int y)//\u5f53\u524d\u5df2\u7ecf\u8d70\u4e86 x \u7684\u65f6\u95f4\uff0c \u7b2c\u4e00\u4e2a\u88ab\u622a\u4f4f\u7684\u8def\u706f\u662f y  \n{\n\tif(y == n + 1) return len[y] - x;\n\telse return ((len[y] - x + mod - 1) / mod ) * mod + Time[y];\n\t//\u5176\u5b9e\u5c31\u662f (len[y] - x) / A \u5411\u4e0a\u53d6\u6574 * A ;\n\t// + A - 1 \u662f\u76f4\u63a5\u5411\u4e0a\u53d6\u6574\u4e86\u3002 \n} \nint Find(int x)\n{\n\tx = x % mod;\n\tauto it = vis.upper_bound(x);\n\tint ret = prev(it , 1) -> second;\n\treturn ret; \n}\nvoid Prepare()\n{\n\tfor(int i = n ; i >= 1 ; i --)\n\t{\n\t\t// a + len[i] = b (mod mod ) , \n\t\t// \u5e26\u5165\u4e4b\u540e\uff0c\u5f97\u5230\u7684 [a1,a2) \u7684\u65f6\u95f4\u5185\u4f1a\u5728 i \u8fd9\u4e2a\u7ea2\u706f\u8fd9\u4e2a\u5730\u65b9\u88ab\u622a\u4f4f \n\t\tint l = (g - len[i] % mod + mod) % mod;\n\t\tint r = mod - len[i] % mod;\n\t\t//\u5224\u65ad\u4e00\u4e0b\u4f1a\u88ab\u5305\u542b\u8fc7\u7684\u533a\u95f4\u3002\n\t\tint pos = Find(r);\n\t\tTime[i] = calc(len[i] , pos);\n\t\t\n\t\tif(l < r) Insert(l,r,i);\n\t\telse Insert(0,r,i) , Insert(l,mod,i); \n\t}\n}\nvoid Query()\n{\n\tint lst = 0;\n\tint x = 0;\n\tT = read();\n\twhile(T --)\n\t{\n\t\tx = read();\n\t\t//x = (x ^ lst);\n\t\tint pos = Find(x);\n\t\tlst = calc(-x , pos);\n\t\t//\u56e0\u4e3a\u8fd9\u662f\u5df2\u7ecf\u7ecf\u8fc7\u7684\u65f6\u95f4\u4e86\u3002 \n\t\tprintf(\"%lld\\n\",lst);\n\t\tlst = lst % 2147483647;\n\t}\n}\nsigned main()\n{\n\tn = read();\n\tg = read(); r = read();\n\tmod = g + r; \n\tvis[0] = n + 1;//\u8868\u793a\u76f4\u63a5\u8d70\u5230\u5934\u5373\u53ef \n\tfor(int i = 1; i <= n + 1; i ++)\n\t\ta[i] = read();\n\tfor(int i = 1; i <= n + 1; i ++)\n\t\tlen[i] = len[i - 1] + a[i];\n\tPrepare();\n\tQuery();\n\treturn 0;\n}\n```\n\n\n\u6700\u540e\u5949\u4e0a\u4e00\u4efd\u88ab\u5e72\u6389\u7684~~\u4e3b\u4e3b\u6811~~\u7684\u505a\u6cd5\uff0c\u601d\u8def\u662f\u4e00\u6478\u4e00\u6837\u7684\n\n```cpp\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<set>\n#include<map>\n#define int long long \nusing namespace std;\nconst int N=100010;\nint tag[N*60];\nint ls[N*60],rs[N*60];\nint delta,l[N],n,g,r;\nint tot,q,root;\nint get(int p,int l,int r,int x)\n{\n    if(!p)\n        return 0;\n    if(tag[p] != -1)\n        return tag[p] - (x-l);\n    int mid = (l+r) >> 1;\n    if(x <= mid)\n        return get( ls[p] , l , mid , x);\n    else \n        return get( rs[p] , mid+1 , r , x );\n}\nint get(int x) // \u67e5\u627e\u4ee5 x \u65f6\u95f4\u5f00\u59cb,\u9700\u8981\u7684\u505c\u7559\u65f6\u95f4 , \u5f53\u7136\u8981\u52a0\u4e0a\u6240\u6709\u7684\u957f\u5ea6\u7684\u505c\u7559\u7684\u65f6\u95f4 \n{\n    x = (x + delta) % (g+r);\n    return get(root , 0 , g+r-1 , x);\n}\nint newnode()\n{\n    tot++;\n    tag[tot] = -1;\n    return tot;\n}\nvoid cov(int&p , int x)\n{\n    if(!p)\n        p = newnode();\n    tag[p] = x;\n}\nvoid cov(int&p,int l,int r,int L,int R,int x)\n{\n    if(!p)\n        p = newnode();\n    if(L <= l and r <= R)\n    {\n        cov(p,x);\n        return;\n    }\n    int mid = (l+r)>>1;\n    if(tag[p] != -1)\n    {\n        cov(ls[p] , tag[p]);\n        cov(rs[p] , tag[p]-(mid-l+1));\n        tag[p] = -1;\n    }\n    if(L <= mid)\n        cov(ls[p] , l , mid , L , R , x);\n    if(R>mid)\n        cov(rs[p] , mid + 1 , r , L , R , x-max( 0ll , (mid + 1 - max( l , L))));   \n}\nvoid cov(int L,int R,int x)\n{\n    L = (L + delta) % (g + r);\n    R = (R + delta) % (g + r);\n    if(L <= R)\n        cov(root , 0 , g + r - 1 , L , R , x);\n    else \n        cov(root , 0 , g + r - 1 , L , g + r - 1 , x ), cov(root , 0 , g + r - 1 , 0 , R , x - ( g + r - L ));\n} \nsigned main()\n{\n    scanf(\"%lld%lld%lld\",&n,&g,&r);\n    for(int i = 1; i <= n + 1; i ++)\n        scanf(\"%lld\",&l[i]);\n    for(int i = n + 1 ; i > 1 ; i --)\n    {\n        int tmp = get(l[i]);\n        delta = (delta + l[i]) % (g+r);\n        cov( g , g + r  - 1 , tmp + r );\n    }\n    delta = (delta + l[1] ) % (g + r);\n    int sum = 0;\n    for(int i = 1 ; i <= n + 1; i++)\n        sum += l[i];\n    scanf(\"%lld\",&q);\n    int ans = 0;\n    while(q--)\n    {\n        int t;\n        scanf(\"%lld\",&t);\n        t ^= ans % 2147483647;\n        printf(\"%lld\\n\",ans = get( t %(g+r)) + sum + t);\n    \tans = 0;\n\t}\n    return 0;\n}\n\n```",
        "postTime": 1635429523,
        "uid": 230804,
        "name": "Durancer",
        "ccfLevel": 4,
        "title": "\u3010\u9898\u89e3\u3011CF187D BRT Contract"
    },
    {
        "content": "\u8003\u8651\u5728\u7ebf\u505a\u6cd5\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u65f6\u95f4\u70b9\uff0c\u4e00\u5b9a\u662f\u9047\u5230\u4e00\u4e2a\u7ea2\u706f\u540e\u505c\u4e0b\u6765\uff08\u6216\u8005\u9047\u4e0d\u5230\u7ea2\u706f\uff09\u7136\u540e\u4ece $g+r$ \u7684\u500d\u6570\u65f6\u523b\u5f00\u59cb\u524d\u8fdb\u3002\n\n\u6211\u4eec\u4e0d\u59a8\u5148\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u4ece $0$ \u65f6\u523b\u5f00\u59cb\u8d70\u9700\u8981\u591a\u957f\u65f6\u95f4\u624d\u80fd\u5230\u8fbe\u7ec8\u70b9\u3002\n\n\u8bbe\u7b2c $i$ \u4e2a\u70b9\u4ece $0$ \u65f6\u523b\u5f00\u59cb\u8d70\u9700\u8981 $time_i$ \u7684\u65f6\u95f4\u624d\u80fd\u5230\u8fbe\u7ec8\u70b9\uff0c\u7b2c $0$ \u4e2a\u70b9\u5230\u7b2c $i$ \u4e2a\u70b9\u7684\u8ddd\u79bb\u4e3a $dis_i$\u3002\n\n\u5982\u679c\u4ece\u7b2c $i$ \u4e2a\u70b9\u5f00\u59cb\u8d70\u8d70\u5230\u7b2c $j$ \u4e2a\u70b9\u53d8\u6210\u4e86\u7ea2\u706f\uff0c\u90a3\u4e48 $time_i=\\left\\lceil\\dfrac{dis_j-dis_i}{g+r}\\right\\rceil\\times(g+r)+time_j$\u3002\n\n\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u5982\u4f55\u627e\u5230\u8fd9\u4e2a $j$\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c$j$ \u5fc5\u987b\u662f\u6700\u5c0f\u7684\u4e14\u9700\u8981\u6ee1\u8db3 $j>i$ \u548c $(dis_k-dis_i)\\bmod (g+r)\\ge g$\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230\u6700\u5c0f\u7684\u4e00\u4e2a\u6570 $j$ \u4f7f\u5f97 $dis_j\\bmod (g+r)$ \u5728\u4e00\u4e2a\u8303\u56f4\u4e4b\u5185\u3002\n\n\u663e\u7136\u8fd9\u4e2a\u53ef\u4ee5\u76f4\u63a5\u4e3b\u5e2d\u6811\u7ef4\u62a4\u3002\n\n\u5c06 $dis_i\\bmod(g+r)$ \u79bb\u6563\u5316\uff0c\u7136\u540e\u4ee5\u6bcf\u4e2a\u6a21\u6570\u4e3a\u6839\u5efa\u4e3b\u5e2d\u6811\u5373\u53ef\u3002\n\n\u81f3\u4e8e\u67e5\u8be2\u7b54\u6848\uff0c\u548c\u4e0a\u9762\u7684\u5904\u7406\u65b9\u6cd5\u5176\u5b9e\u662f\u7b49\u4ef7\u7684\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O((n+q)\\log n)$\n# AC code\n```cpp\n#include<cstdio>\n#include<vector>\n#include<algorithm>\nusing namespace std;\nlong long l[100005],dis[100005];\nint ls[3800005],rs[3800005],sum[3800005],rt[200005],tot,a[200005];\nvoid build(int &x,int l,int r){\n    x=++tot;\n    if(l==r) return ;\n    int mid=l+r>>1;\n    build(ls[x],l,mid),build(rs[x],mid+1,r);\n}\ninline void pushup(int x){\n    sum[x]=sum[ls[x]]+sum[rs[x]];\n}\nvoid insert(int &x,int y,int p,int l,int r,bool yes){\n    if(yes) x=++tot,sum[x]=sum[y],ls[x]=ls[y],rs[x]=rs[y];\n    if(l==r){\n        sum[x]++;return ;\n    }\n    int mid=l+r>>1;\n    if(p<=mid) insert(ls[x],ls[y],p,l,mid,ls[x]==ls[y]);\n    else insert(rs[x],rs[y],p,mid+1,r,rs[x]==rs[y]);\n    pushup(x);\n}\nint query(int x,int y,int l,int r,int pos){\n    if(r<=pos) return sum[y]-sum[x];\n    int mid=l+r>>1,res=query(ls[x],ls[y],l,mid,pos);\n    if(mid<pos) return res+query(rs[x],rs[y],mid+1,r,pos);\n    return res;\n}\nint find(int x,int y,int l,int r,int val){\n    if(l==r) return l;\n    int mid=l+r>>1;\n    if(sum[ls[y]]-sum[ls[x]]>val) return find(ls[x],ls[y],l,mid,val);\n    return find(rs[x],rs[y],mid+1,r,val-sum[ls[y]]+sum[ls[x]]);\n}\nvector<int> v[200005];\nint main(){\n    int n,g,r,cnt=0,i;\n    scanf(\"%d%d%d\",&n,&g,&r);\n    for(i=1;i<=n+1;i++){\n        scanf(\"%lld\",&l[i]);\n        l[i]+=l[i-1];\n        a[++cnt]=l[i]%(g+r);\n    }\n    sort(a+1,a+cnt+1),cnt=unique(a+1,a+cnt+1)-a-1;\n    for(i=1;i<=cnt;i++) a[cnt+i]=a[i]+g+r;\n    build(rt[0],0,n+1);\n    for(i=1;i<=n+1;i++){\n        int pos=lower_bound(a+1,a+cnt+1,l[i]%(g+r))-a;\n        v[pos].emplace_back(i),v[pos+cnt].emplace_back(i);\n    }cnt<<=1;\n    for(i=1;i<=cnt;i++) for(auto j:v[i]) insert(rt[i],rt[i-1],j,0,n+1,!rt[i]);\n    for(i=n;i;i--){\n        int ed=upper_bound(a+1,a+cnt+1,l[i]%(g+r)+g+r-1)-a-1,st=lower_bound(a+1,a+cnt+1,l[i]%(g+r)+g)-a;\n        int val=query(rt[st-1],rt[ed],0,n+1,i);\n        int to=find(rt[st-1],rt[ed],0,n+1,val);\n        if(to==n+1) dis[i]=l[to]-l[i];\n        else dis[i]=dis[to]+(l[to]-l[i]+g+r-1)/(g+r)*(g+r);\n    }\n    int q;scanf(\"%d\",&q);\n    while(q--){\n        int tim;scanf(\"%lld\",&tim);\n        int ed=upper_bound(a+1,a+cnt+1,g+r-1-tim%(g+r)+g+r)-a-1,st=lower_bound(a+1,a+cnt+1,g-tim%(g+r)+g+r)-a;\n        int to=find(rt[st-1],rt[ed],0,n+1,0);\n        if(to==n+1) printf(\"%lld\\n\",tim+l[n+1]);\n        else printf(\"%lld\\n\",dis[to]+(tim+l[to]+g+r-1)/(g+r)*(g+r));\n    }\n    return 0;\n}\n```",
        "postTime": 1635410408,
        "uid": 80614,
        "name": "ZCPB",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF187D"
    },
    {
        "content": "\u9898\u610f\uff1a\u7ed9\u5b9a\u8def\uff08\u770b\u505a\u6570\u8f74\uff09\u4e0a $n$ \u4e2a\u7ea2\u7eff\u706f\u7684\u4f4d\u7f6e\uff0c\u4ece 0 \u65f6\u523b\u5f00\u59cb\uff0c\u7ea2\u7eff\u706f\u5148\u7eff $g$ \u79d2\uff0c\u7136\u540e\u7ea2 $r$ \u79d2\u3002\u7eff\u706f\u65f6\uff0c\u8f66\u53ef\u4ee5\u901a\u8fc7\u7ea2\u7eff\u706f\uff0c\u7ea2\u706f\u65f6\u53ea\u80fd\u5728\u7ea2\u7eff\u706f\u7684\u4f4d\u7f6e\u7b49\u5f85\u81f3\u7eff\u706f\u3002\u6709 $q$ \u7ec4\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u4e00\u8f86\u8f66\u4ece 0 \u4f4d\u7f6e\u3001\u5728 $t$ \u65f6\u523b\u51fa\u53d1\uff0c\u5230\u8fbe\u7ec8\u70b9\u7684\u65f6\u95f4\u3002\n\n---\n\n$\\textrm{Solution}$\uff1a\n\n\u7b80\u5355\u9898\u3002\n\n\u9996\u5148\u60f3\u5230\uff0c\u53ef\u4ee5\u7ef4\u62a4 $f_i$ \u8868\u793a $0$ \u65f6\u523b\u4ece $i$ \u70b9\u5f00\u59cb\u8d70\u5230\u7ec8\u70b9\u6240\u9700\u7684\u65f6\u95f4\u3002$f_i$ \u7684\u8f6c\u79fb\u53ef\u4ee5\u5012\u7740\u626b\u4e00\u904d\uff0c\u5219\u9700\u6c42\u51fa $0$ \u65f6\u523b\u4ece $i$ \u70b9\u8d70\u5230\u7684\u7b2c\u4e00\u4e2a\u7ea2\u706f\u4f4d\u7f6e $j$\uff0c\u6709 $f_i = f_j + \\operatorname{calc}(i,j)$\uff0c\u5176\u4e2d $\\operatorname{calc}(i,j)$ \u8868\u793a\u4ece $i$ \u8d70\u5230 $j$ \u4e14\u7b49\u5230\u7eff\u706f\u6240\u82b1\u7684\u65f6\u95f4\u3002\n\n\u800c\u5bf9\u4e8e\u8be2\u95ee\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u505a\u662f\u628a\u8d77\u70b9\u5230 $1$ \u53f7\u706f\u4e4b\u95f4\u7684\u8fb9\u52a0\u957f\u4e86 $t$\uff0c\u7528\u4e0a\u8ff0\u65b9\u6cd5\u6c42 $f_0$ \u5373\u4e3a\u7b54\u6848\u3002\n\n\u95ee\u9898\u5c31\u662f\uff0c\u5982\u4f55\u6c42\u5728 $0$ \u65f6\u523b\u4ece\u70b9 $i$ \u5f00\u59cb\u8d70\u5230\u7684\u7b2c\u4e00\u4e2a\u7ea2\u706f\uff1f\n\n\u5728\u8d70\u5230\u7ea2\u706f\u4e4b\u524d\u80af\u5b9a\u662f\u4e00\u8def\u7eff\u706f\u8d70\u8fc7\u53bb\u7684\uff0c\u6240\u4ee5\u8d70\u5230\u7684\u7b2c\u4e00\u4e2a\u7ea2\u706f $j$ \u4e00\u5b9a\u6ee1\u8db3 $\\operatorname{dis}(i,j) \\bmod (g+r) \\in [g,g+r-1]$\uff0c\u5176\u4e2d $\\operatorname{dis}(i,j)$ \u8868\u793a $i,j$ \u4e24\u70b9\u5728\u6570\u8f74\u4e0a\u7684\u8ddd\u79bb\u3002\u6211\u4eec\u5c06 $l$ \u6570\u7ec4\u505a\u524d\u7f00\u548c\u540e\uff0c$\\operatorname{dis}$ \u53ef\u4ee5\u5dee\u5206\uff0c\u8f6c\u5316\u4e3a $(l_j - l_i) \\bmod (g+r) \\in [g,g+r-1]$\u3002\n\n\u6b64\u65f6\u53ef\u4ee5\u628a $l_i$ \u79fb\u52a8\u5230\u53f3\u8fb9\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u627e\u5230\u7684\u662f\uff0c$i$ \u53f3\u8fb9\u7684\u7b2c\u4e00\u4e2a $j$ \u6ee1\u8db3 $l_j \\bmod (g+r)$ \u5728\u4e00\u4e2a\uff08\u4e24\u4e2a\uff09\u533a\u95f4\u4e2d\u3002\n\n\u7531\u4e8e\u662f\u5012\u7740\u626b\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u5c06\u5176\u653e\u5230\u7ebf\u6bb5\u6811\u4e2d\uff0c\u4e0b\u6807\u4e3a $l_i \\bmod (g+r)$\uff0c\u6743\u503c\u4e3a $i$\uff0c\u67e5\u8be2\u5373\u533a\u95f4\u6700\u5c0f\u503c\u3002\u503c\u57df $10^9$\uff0c\u9700\u8981\u52a8\u6001\u5f00\u70b9\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define rgi register int\n#define FOR(i,a,b) for(rgi i=a,i##i=b;i<=i##i;++i)\n#define ROF(i,a,b) for(rgi i=a,i##i=b;i>=i##i;--i)\ntypedef long long ll;\nusing namespace std;\nconst int N=100010;\nint n,q,G,R,P,mi[N<<6],ls[N<<6],rs[N<<6],C,rt,nx;\nll d[N],f[N];\n#define mid ((l+r)>>1)\nvoid upd(int x,int v,int& k=rt,int l=0,int r=P-1){\n\tif(l>x||r<x)return;\n\tmi[k?k:k=++C]=v;\n\tif(l!=r)upd(x,v,ls[k],l,mid),upd(x,v,rs[k],mid+1,r);\n}\nint qry(int x,int y,int k=rt,int l=0,int r=P-1){\n\tif(l>y||r<x||!k)return n+1;\n\tif(l>=x&&r<=y)return mi[k];\n\treturn min(qry(x,y,ls[k],l,mid),qry(x,y,rs[k],mid+1,r));\n}\nint find(ll x){return min(qry(x-R,x-1),qry(x+G,x+P-1));}\nll calc(ll x,int w){return w>n?x:ceil(x*1.0/P)*P;}\nsigned main(){\n\tscanf(\"%d%d%d\",&n,&G,&R),P=G+R,mi[0]=n+1;\n\tFOR(i,1,n+1)scanf(\"%lld\",d+i),d[i]+=d[i-1];\n\tROF(i,n,1){\n\t\tnx=find(d[i]%P);\n\t\tf[i]=f[nx]+calc(d[nx]-d[i],nx);\n\t\tupd(d[i]%P,i);\n\t}\n\tfor(scanf(\"%d\",&q);q--;){\n\t\tscanf(\"%lld\",d),nx=find((P-d[0]%P)%P);\n\t\tprintf(\"%lld\\n\",f[nx]+calc(d[nx]+d[0],nx));\n\t}\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1607777185,
        "uid": 78372,
        "name": "M4_SOPMODII_JR",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF187D BRT Contract"
    }
]