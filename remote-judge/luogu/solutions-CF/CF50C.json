[
    {
        "content": "[\u9898\u76ee](https://www.luogu.com.cn/problem/CF50C)\n\n### \u89e3\u6790\n\u770b\u5230\u8fd9\u9898\u5c31\u60f3\u5230\u4e86[\u4e8c\u7ef4\u51f8\u5305](https://www.luogu.com.cn/problem/P2742)\u3002\n\n\u4ec0\u4e48\u662f\u51f8\u5305\uff1f\n\n\u7528\u4e0d\u4e25\u8c28\u7684\u8bdd\u6765\u8bb2\uff0c\u7ed9\u5b9a\u4e8c\u7ef4\u5e73\u9762\u4e0a\u7684\u70b9\u96c6\uff0c\u51f8\u5305\u5c31\u662f\u5c06\u6700\u5916\u5c42\u7684\u70b9\u8fde\u63a5\u8d77\u6765\u6784\u6210\u7684\u51f8\u591a\u8fb9\u5f62\uff0c\u5b83\u80fd\u5305\u542b\u70b9\u96c6\u4e2d\u6240\u6709\u7684\u70b9\u3002\n\n\u6bd4\u5982\uff0c\n\n![](https://img0.baidu.com/it/u=1940414835,2004815361&fm=253&fmt=auto&app=138&f=JPEG?w=600&h=300)\n\n\u70b9 $(p_0,p_1,p_3,p_{10},p_{12})$ \u5c31\u662f\u51f8\u5305\u7684\u70b9\u96c6\u3002\n\n\u90a3\u8fd9\u9898\u548c\u51f8\u5305\u6709\u4ec0\u4e48\u5173\u7cfb\u5462\uff1f\n\n\u9898\u610f\u5927\u6982\u662f\u8fd9\u6837\u7684\uff1a\u7528\u4e00\u6761\u7ebf\u56f4\u51fa\u4e00\u4e2a\u533a\u95f4\uff0c\u4f7f\u5176\u5305\u542b\u5e73\u9762\u5185\u7684\u7ed9\u5b9a\u70b9\uff0c\u4f46\u70b9\u4e0d\u80fd\u5728\u7ebf\u4e0a\u3002\u7ebf\u53ef\u4ee5\u51fa\u73b0\u5728\u6b63\u65b9\u5f62\u7f51\u683c\u7684\u8fb9\u548c\u5bf9\u89d2\u7ebf\u4e0a\u3002\n\n\u8fd9\u4f3c\u4e4e\u548c\u51f8\u5305\u7684\u5b9a\u4e49\u975e\u5e38\u50cf\u3002\u8003\u8651\u6211\u4eec\u5df2\u7ecf\u9009\u51fa\u4e86\u8fd9\u4e2a\u51f8\u5305\u7684\u70b9\u96c6\uff0c\u7528\u6ee1\u8db3\u6761\u4ef6\u7684\u7ebf\u5c06\u8fd9\u4e9b\u70b9\u4e00\u8fde\uff0c\u6240\u6709\u7684\u70b9\u5c31\u5168\u90e8\u5305\u542b\u5728\u5185\u4e86\u3002\n\n\u5982\u679c\u628a\u8fd9\u4e2a\u70b9\u96c6\u5f80\u91cc\u6536\uff0c\u5c31\u4f1a\u5bfc\u81f4\u6709\u70b9\u88ab\u5ffd\u7565\u7684\u60c5\u51b5\uff0c\u5c31\u4e0d\u6ee1\u8db3\u8981\u6c42\u4e86\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981\u8003\u8651\u600e\u4e48\u7b97\u51f8\u5305\u4e0a\u76f8\u90bb\u4e24\u70b9\u7684\u8ddd\u79bb\u4e86\u3002\n\n\u8003\u8651\u7ebf\u662f\u53ef\u4ee5\u6cbf\u5bf9\u89d2\u7ebf\u8d70\u7684\uff0c\u8fd9\u6837\u4e00\u5b9a\u662f\u6700\u5feb\u7684\uff0c\u7136\u540e\u8d70\u76f4\u7ebf\u8865\u9f50\u5dee\u4ef7\u5c31\u53ef\u4ee5\u4e86\u3002\u5047\u8bbe\u4e24\u70b9\u4e3a $(x_1,y_1)$ \u548c $(x_2,y_2)$\uff0c\u90a3\u4e48\u4e24\u70b9\u95f4\u7684\u8def\u7a0b\u4e3a $max\\{|x_1-x_2|,|y_1-y_2|\\}$\u3002\n\n\u90a3\u4e48\u5982\u4f55\u7b97\u51f8\u5305\u5462\uff1f\n\nGraham \u626b\u63cf\u6cd5\uff1a\n1. \u627e\u51fa \u5750\u6807\u6700\u5c0f\u7684\u70b9\uff0c\u82e5\u6709\u591a\u4e2a\uff0c\u627e\u51fa \u5750\u6807\u6700\u5c0f\u7684\u70b9\u3002\n2. \u5c06\u5176\u4f5c\u4e3a\u539f\u70b9\u8fdb\u884c\u6781\u89d2\u6392\u5e8f\u3002\n3. \u5c06\u8fd9\u4e2a\u70b9\u548c\u6392\u5e8f\u6240\u5f97\u7684\u7b2c\u4e00\u4e2a\u70b9\u653e\u5165\u6808\uff0c\u7136\u540e\u7528\u5355\u8c03\u6808\u7ef4\u62a4\u659c\u7387\u5355\u8c03\u70b9\uff0c\u626b\u63cf\u4e00\u904d\uff0c\u6700\u540e\u5728\u5355\u8c03\u6808\u91cc\u7684\u70b9\u5373\u4e3a\u6240\u6c42\u3002\n\n\u56de\u5230\u8fd9\u9053\u9898\u76ee\uff0c\u7531\u4e8e\u4e0d\u80fd\u8fc7\u8fd9\u4e2a\u70b9\uff0c\u6211\u4eec\u5c31\u8003\u8651\u8fc7\u79bb\u4ed6\u4eec\u6700\u8fd1\u7684\u70b9\uff0c\u5373\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u70b9\u3002\u5982\u679c\u8981\u8fc7\u53f3\u4e0a\u7684\u70b9\uff0c\u90a3\u4e48\u628a\u53f3\u8fb9\u7684\u70b9\u548c\u4e0a\u9762\u7684\u70b9\u76f8\u8fde\uff0c\u6240\u7528\u7684\u957f\u5ea6\u6bd4\u5148\u524d\u7684\u4e00\u5b9a\u77ed\u4e14\u7b26\u5408\u9898\u610f\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5efa\u51fa\u539f\u6765\u7684\u70b9\u5468\u56f4\u7684\u56db\u4e2a\u70b9\uff0c\u4ee5\u8fd9\u4e9b\u70b9\u4e3a\u70b9\u6c42\u51f8\u5305\uff0c\u8fd9\u4e2a\u51f8\u5305\u4e00\u5b9a\u662f\u6ee1\u8db3\u8981\u6c42\u7684\u3002\n\n\u7528 Graham \u6c42\u51f8\u5305\u9700\u8981\u6ce8\u610f\u4e00\u70b9\uff0c\u8981\u53bb\u91cd\u70b9\uff0c\u4e0d\u7136\u4f1a\u8d85\u65f6\u3002\n\n\u63a5\u4e0b\u6765\u6211\u77e5\u9053\u4f60\u4eec\u60f3\u8981\u770b\u4ec0\u4e48\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#include<map>\nusing std::cin;using std::cout;\nconstexpr int N=100005,K=1e7;\nint n,x,y,cnt,now;\ndouble Ans;\nstruct Point{\n\tdouble x,y;\n\tPoint(double X=0,double Y=0){\n\t\tx=X,y=Y;\n\t}\n}p[N<<2],ans[N<<2];\nstd::map<int,std::map<int,bool> >q;\ntypedef Point Vector;\ninline Vector operator -(Point a,Point b){\n\treturn Vector(a.x-b.x,a.y-b.y);\n}\ninline double Cross(Vector a,Vector b){//\u53c9\u79ef\n\treturn a.x*b.y-a.y*b.x;\n}\ninline double dis(Point a,Point b){\n\treturn sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));\n}\ninline bool cmp(Point a,Point b){\n\tdouble check=Cross(a-p[1],b-p[1]);\n\treturn (check>0||check==0&&dis(p[0],a)<=dis(p[0],b));\n}\ninline double Dis(Point a,Point b){\n\treturn std::max(std::fabs(a.x-b.x),std::fabs(a.y-b.y));\n}\nsigned main(){\n// \tfreopen(\"T1.in\",\"r\",stdin);\n// \tfreopen(\"T1.out\",\"w\",stdout);\n\tstd::ios::sync_with_stdio(false);\n\tcin.tie(nullptr);cout.tie(nullptr);\n\tcin>>n;\n\tfor(int i=1;i<=n;++i){\n\t\tcin>>x>>y;//x+=K;y+=K;\n\t\tif(!q[x][y]){\n\t\t\tp[++cnt]=(Point){x+1,y};\n\t\t\tp[++cnt]=(Point){x-1,y};\n\t\t\tp[++cnt]=(Point){x,y+1};\n\t\t\tp[++cnt]=(Point){x,y-1};\n\t\t}\n\t\tq[x][y]=1;//\u53bb\u91cd\u70b9\u3002\n\t}\n\tfor(int i=2;i<=cnt;++i)\n\t\tif(p[i].y<p[1].y||p[i].y==p[1].y&&p[i].x<p[1].x) std::swap(p[1],p[i]);\n\tstd::sort(p+2,p+cnt+1,cmp);//\u6309\u6781\u89d2\u6392\u5e8f\n\t// cout<<'\\n';\n\t// for(int i=1;i<=cnt;++i) cout<<p[i].x<<' '<<p[i].y<<'\\n';\n\tans[++now]=p[1];//\u6c42\u51f8\u5305\n\tfor(int i=2;i<=cnt;++i){\n\t\twhile(now>=2&&Cross(ans[now]-ans[now-1],p[i]-ans[now])<=0) --now;\n\t\tans[++now]=p[i];\n\t}\n\tans[now+1]=p[1];//cout<<'\\n';\n\tfor(int i=1;i<=now;++i) Ans+=Dis(ans[i],ans[i+1]);//,cout<<ans[i].x<<' '<<ans[i].y<<'\\n';\n    //\u8ba1\u7b97\u957f\u5ea6\n\tcout<<(int)Ans;\n\treturn 0;\n}\n```",
        "postTime": 1684665421,
        "uid": 394167,
        "name": "Dragon_Horse",
        "ccfLevel": 5,
        "title": "CF50C Happy Farm 5 \u9898\u89e3"
    },
    {
        "content": "# CF50C Happy Farm 5\n\n## 1 \u9898\u610f\n\n\u7ed9\u4f60 $n(1\\le n\\le 10^5)$ \u4e2a**\u6574\u6570\u70b9**\uff0c\u6c42\u4e25\u683c\u5305\u56f4\u6240\u6709\u70b9\u7684\u8def\u5f84\u6700\u5c11\u8981\u79fb\u52a8\u591a\u5c11\u6b65\u3002\u6bcf\u4e00\u6b65\u53ef\u4ee5\u8d70\u5230\u539f\u4f4d\u7f6e\u7684\u4e0a\u3001\u4e0b\u3001\u5de6\u3001\u53f3\u3001\u5de6\u4e0a\u3001\u53f3\u4e0a\u3001\u5de6\u4e0b\u3001\u53f3\u4e0b\u3002**\u4e25\u683c\u5305\u56f4\u8981\u6c42\u70b9\u4e0d\u80fd\u5728\u8def\u5f84\u4e0a\u3002**\n\n## 2 \u9898\u89e3\n\n\u5f88\u5bb9\u6613\u60f3\u5230\u8fd9\u9898\u53ef\u4ee5\u4f7f\u7528\u51f8\u5305\u3002\n\n### 2.1 \u524d\u7f6e\u77e5\u8bc6\n\n\u9996\u5148\u4e86\u89e3\u4e00\u4e0b\u76f8\u5173\u6982\u5ff5\u3002\n\n> \u5728\u5e73\u9762\u4e0a\u80fd\u5305\u542b\u6240\u6709\u7ed9\u5b9a\u70b9\u7684\u6700\u5c0f\u51f8\u591a\u8fb9\u5f62\u53eb\u505a\u51f8\u5305\u3002\n>\n> \u5176\u5b9a\u4e49\u4e3a\uff1a**\u5bf9\u4e8e\u7ed9\u5b9a\u96c6\u5408 $X$\uff0c\u6240\u6709\u5305\u542b $X$ \u7684\u51f8\u96c6\u7684\u4ea4\u96c6 $S$ \u88ab\u79f0\u4e3a $X$ \u7684\u51f8\u5305**\u3002\n>\n> \u51f8\u5305\u7528\u6700\u5c0f\u7684\u5468\u957f\u56f4\u4f4f\u4e86\u7ed9\u5b9a\u7684\u6240\u6709\u70b9\u3002\u5982\u679c\u4e00\u4e2a\u51f9\u591a\u8fb9\u5f62\u56f4\u4f4f\u4e86\u6240\u6709\u7684\u70b9\uff0c\u5b83\u7684\u5468\u957f\u4e00\u5b9a\u4e0d\u662f\u6700\u5c0f\uff0c\u5982\u4e0b\u56fe\u3002\u6839\u636e\u4e09\u89d2\u4e0d\u7b49\u5f0f\uff0c\u51f8\u591a\u8fb9\u5f62\u5728\u5468\u957f\u4e0a\u4e00\u5b9a\u662f\u6700\u4f18\u7684\u3002\n>\n> \u2014\u2014\u6765\u81ea [OI Wiki](https://oi-wiki.org/geometry/convex-hull/)\u3002\n\n\u5f88\u663e\u7136\uff0c\u6b64\u9898\u9700\u8981\u6c42\u4e25\u683c\u51f8\u5305\uff08\u51f8\u5305\u4e0a\u4e0d\u5b58\u5728\u70b9\u96c6\u4e2d\u7684\u70b9\uff09\u3002\u800c\u4e00\u822c\u7684\u51f8\u5305\u9898\uff08[\u6bd4\u5982\u8fd9\u4e2a](https://www.luogu.com.cn/problem/P2742)\uff09\u6c42\u7684\u662f\u975e\u4e25\u683c\u51f8\u5305\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u8003\u8651\u5c06\u975e\u4e25\u683c\u51f8\u5305\u8f6c\u5316\u4e3a\u4e25\u683c\u51f8\u5305\u3002\n\n### 2.2 \u8f6c\u5316\n\n**\u5c06\u6bcf\u4e2a\u70b9\u7684\u4e0a\u4e0b\u5de6\u53f3\u90fd\u52a0\u5165\u4e00\u4e2a\u70b9\uff0c\u6c42\u52a0\u5165\u540e\u7684\u51f8\u5305\u3002**\n\n\u7531\u4e8e\u90fd\u662f\u6574\u6570\u70b9\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u4f7f\u6240\u6709\u70b9\u90fd\u79bb\u51f8\u591a\u8fb9\u5f62\u7684\u9876\u70b9\u81f3\u5c11\u4e00\u4e2a\u5355\u4f4d\u957f\u5ea6\u3002\n\n\u4ee5\u6837\u4f8b\u4e3a\u4f8b\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/95qsk201.png)\n\n### 2.3 \u5b9e\u73b0\n\n\u5efa\u8bae A \u4e86\u6a21\u677f\u9898\u518d\u6765\u3002\n\n\u548c\u6a21\u677f\u6bd4\u8d77\u6765\uff0c\u53ea\u6709\u4e24\u70b9\u5dee\u522b\uff1a\n\n* \u63d2\u5165\u8f93\u5165\u7684\u70b9\u4e4b\u5916\u8fd8\u8981\u63d2\u5165\u4e0a\u4e0b\u5de6\u53f3\u7684\u70b9\u8fdb\u5165\u70b9\u96c6\u3002\u5f88\u597d\u5b9e\u73b0\uff0c\u4e0d\u8fc7\u7528 Graham \u7b97\u6cd5\u9700\u8981\u6ce8\u610f\u65b0\u52a0\u5165\u7684\u70b9\u4e5f\u9700\u8981\u5224\u65ad\u662f\u5426\u662f\u5750\u6807\u6700\u9760\u4e0b\u7684\u8d77\u70b9\u3002\n* \u4e24\u70b9\u95f4\u6b65\u6570\u7684\u8ba1\u7b97\u3002\u82e5\u6709\u4e24\u70b9 $A(x_1,y_1),B(x_2,y_2)$\uff0c\u5219\u4e24\u70b9\u95f4\u6b65\u6570\u4e3a $\\max( |x_1-x_2|,|y_1-y_2|)$\u3002\u77ed\u7684\u5dee\u8ddd\u53ef\u4ee5\u4f9d\u9760\u659c\u7740\u8d70\u6765\u5f25\u8865\uff0c\u5982\u56fe\uff1a![](https://cdn.luogu.com.cn/upload/image_hosting/xvaklus3.png)\n\n\u8be5\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n)$\uff0c\u7531\u4e8e\u65f6\u95f4\u9650\u5236\u4e3a $2s$\uff0c\u6240\u4ee5 $1\\le n\\le 10^5$ \u60c5\u51b5\u4e0b\u53ef\u4ee5 AC \u6b64\u9898\u3002\n\n## 3 \u53c2\u8003\u4ee3\u7801\n\n\u4f7f\u7528 Graham \u7b97\u6cd5\u5b9e\u73b0\u3002\n\n```C++\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cmath>\nusing namespace std;\nconst int MAXN=500005;\nstruct Point\n{\n    int x;\n    int y;\n}a[MAXN],s[MAXN];\nint dis[4][2]={{1,0},{0,1},{-1,0},{0,-1}};\nbool cmp(Point x,Point y)\n{\n    if(x.y==a[1].y&&y.y==a[1].y) return x.x<y.x;\n    if(x.y==a[1].y) return true;\n    if(y.y==a[1].y) return false;\n    if(x.x==a[1].x&&x.x==y.x) return x.y<y.y;\n    if(1.0*(x.x-a[1].x)/(x.y-a[1].y)>1.0*(y.x-a[1].x)/(y.y-a[1].y)) return true;//\u6ce8\u610f\u9700\u8981\u6d6e\u70b9\u8fd0\u7b97\uff0c\u6211\u5728\u8fd9\u91cc\u6302\u4e86\u597d\u4e45\n    return false;\n}\nbool check(double x1,double y1,double x2,double y2,double x3,double y3)//\u5224\u65ad\u662f\u5426\u5de6\u62d0\n{\n    if((x2-x1)*(y3-y2)-(x3-x2)*(y2-y1)<=0) return true;\n    return false;\n}\nint dist(int i,int j)\n{\n    return max(abs(s[i].x-s[j].x),abs(s[i].y-s[j].y));//\u4e24\u70b9\u8ddd\u79bb\n}\nint main()\n{\n    int n;\n    cin>>n;\n    int cnt=n;\n    double miny=1e9,minx=1e9;\n    int first;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>a[i].x>>a[i].y;\n        if(a[i].y<miny||(a[i].y==miny&&a[i].x<minx))\n        {\n            miny=a[i].y;\n            minx=a[i].x;\n            first=i;\n        }\n        for(int j=0;j<4;j++)\n        {\n            cnt++;\n            a[cnt].x=a[i].x+dis[j][0];\n            a[cnt].y=a[i].y+dis[j][1];\n            if(a[cnt].y<miny||(a[cnt].y==miny&&a[cnt].x<minx))\n            {\n                miny=a[cnt].y;\n                minx=a[cnt].x;\n                first=cnt;\n            }\n        }\n    }\n    n=cnt;\n    swap(a[1],a[first]);\n    sort(a+2,a+n+1,cmp);\n    int top=1;\n    s[top]=Point{a[1].x,a[1].y};\n    for(int i=2;i<=n;i++)\n    {\n        while(top>1&&check(s[top-1].x,s[top-1].y,s[top].x,s[top].y,a[i].x,a[i].y)) top--;//\u6a21\u62df\u5355\u8c03\u6808\n        s[++top]=Point{a[i].x,a[i].y};\n    }\n    int sum=dist(1,top);\n    for(int i=1;i<top;i++) sum+=dist(i,i+1);\n    cout<<sum<<endl;\n    return 0;\n}\n```\n\n\u8fd9\u9053\u9898\u4f3c\u4e4e\u6709\u66f4\u7b80\u5355\u7684\u89e3\u6cd5\uff0c\u4f46\u6211\u89c9\u5f97\u51f8\u5305\u7684\u89e3\u6cd5\u4e5f\u5f88\u6709\u5fc5\u8981\u3002~~\u4e3b\u8981\u662f\u56e0\u4e3a\u6211\u4e0d\u4f1a\u8bc1\u660e\u90a3\u79cd\u89e3\u6cd5\u3002~~",
        "postTime": 1638361721,
        "uid": 328916,
        "name": "tonyre",
        "ccfLevel": 0,
        "title": "CF50C \u9898\u89e3"
    }
]