[
    {
        "content": "[\u6211\u7684\u535a\u5ba2](https://www.cnblogs.com/Memory-of-winter/p/10164330.html)\n\n**\u9898\u76ee\u5927\u610f\uff1a**\u7ed9\u4f60\u4e09\u4e2a\u5b57\u7b26\u4e32$A,B,C$\uff0c\u4ee4$L=min(|A|,|B|,|C|)$\uff0c\u5bf9\u6bcf\u4e2a$i\\in[1,L]$\uff0c\u6c42\u51fa\u7b26\u5408$A_{[a,a+i)}=B_{[b,b+i)}=C_{[c,c+i)}$\u7684\u4e09\u5143\u7ec4$(a,b,c)$\u7684\u4e2a\u6570\n\n**\u9898\u89e3\uff1a**\u5148\u5efa\u4e00\u68f5\u5e7f\u4e49$SAM$\uff0c\u6c42\u51fa\u6bcf\u4e2a\u70b9\u53ef\u4ee5\u5230\u8fbe\u7684$A,B,C$\u7684\u5b57\u4e32\u7684\u4e2a\u6570\uff0c\u7136\u540e\u8fd9\u4e2a\u70b9\u8d21\u732e\u7684\u503c\u5c31\u662f\u4e09\u4e2a\u4e32\u5206\u522b\u7684\u4e2a\u6570\u4e58\u8d77\u6765\uff0c\u53d1\u73b0\u4e00\u4e2a\u70b9\u4f1a\u5bf9$[R_{fail_p+1},R_{p}]$\u7684\u533a\u95f4\u4ea7\u751f\u8d21\u732e\uff0c\u53ef\u4ee5\u5dee\u5206\u4e00\u4e0b\u7ef4\u62a4\u3002\n\n**\u5361\u70b9\uff1a**\u65e0\n\n\n\n**C++ Code\uff1a**\n\n```cpp\n#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#define maxn 300010\nconst int mod = 1e9 + 7;\ninline void reduce(int &x) {x += x >> 31 & mod;}\n\nint n = 0x3f3f3f3f;\nint ans[maxn];\nnamespace SAM {\n#define N (maxn * 3 << 1)\n\tint R[N], fail[N], nxt[N][26];\n\tint lst = 1, idx = 1, sz[N][3];\n\n\tvoid append(int ch, int tg) {\n\t\tint p = lst, np = lst = ++idx; R[np] = R[p] + 1, sz[np][tg] = 1;\n\t\tfor (; p && !nxt[p][ch]; p = fail[p]) nxt[p][ch] = np;\n\t\tif (!p) fail[np] = 1;\n\t\telse {\n\t\t\tint q = nxt[p][ch];\n\t\t\tif (R[p] + 1 == R[q]) fail[np] = q;\n\t\t\telse {\n\t\t\t\tint nq = ++idx;\n\t\t\t\tfail[nq] = fail[q], R[nq] = R[p] + 1, fail[q] = fail[np] = nq;\n\t\t\t\tstd::copy(nxt[q], nxt[q] + 26, nxt[nq]);\n\t\t\t\tfor (; p && nxt[p][ch] == q; p = fail[p]) nxt[p][ch] = nq;\n\t\t\t}\n\t\t}\n\t}\n\n\tint head[N], cnt;\n\tstruct Edge {\n\t\tint to, nxt;\n\t} e[N];\n\tinline void addedge(int a, int b) {\n\t\te[++cnt] = (Edge) {b, head[a]}; head[a] = cnt;\n\t}\n\n\tvoid dfs(int u) {\n\t\tfor (int i = head[u]; i; i = e[i].nxt) {\n\t\t\tint v = e[i].to;\n\t\t\tdfs(v);\n\t\t\tsz[u][0] += sz[v][0], sz[u][1] += sz[v][1], sz[u][2] += sz[v][2];\n\t\t}\n\t}\n\tvoid work() {\n\t\tfor (int i = 2; i <= idx; i++) addedge(fail[i], i);\n\t\tdfs(1);\n\t\tfor (int i = 2; i <= idx; i++) {\n\t\t\tint tmp = static_cast<long long> (sz[i][0]) * sz[i][1] % mod * sz[i][2] % mod;\n\t\t\treduce(ans[R[fail[i]] + 1] += tmp - mod), reduce(ans[R[i] + 1] -= tmp);\n\t\t}\n\t\tfor (int i = 2; i <= n; i++) reduce(ans[i] += ans[i - 1] - mod);\n\t}\n#undef N\n}\n\nchar s[maxn];\nint main() {\n\tfor (int i = 0; i < 3; i++) {\n\t\tscanf(\"%s\", s); SAM::lst = 1;\n\t\tn = std::min(n, static_cast<int> (strlen(s)));\n\t\tfor (char *ch = s; *ch; ++ch) SAM::append(*ch - 'a', i);\n\t}\n\tSAM::work();\n\tfor (int i = 1; i <= n; i++) {\n\t\tprintf(\"%d\", ans[i]);\n\t\tputchar(i == n ? '\\n' : ' ');\n\t}\n\treturn 0;\n}\n\n```\n\n\n\n",
        "postTime": 1545547984,
        "uid": 22072,
        "name": "Memory_of_winter",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF452E \u3010Three strings\u3011"
    },
    {
        "content": "$\\text{Problem}:$[Three strings](https://codeforces.com/problemset/problem/452/E)\n\n$\\text{Solution}:$\n\n\u4eff\u7167 $\\text{SA}$ \u8fde\u63a5\u591a\u4e2a\u4e32\u7684\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e09\u4e2a\u4e32\u8fde\u6210\uff1a$A+$`#`$+B+$`?`$+C$ \u7684\u5f62\u5f0f\u3002\u90a3\u4e48 $A,B,C$ \u4e2d\u76f8\u540c\u7684\u5b50\u4e32\u5728 $\\text{SAM}$ \u7684\u540c\u4e00\u4e2a\u8282\u70b9\u4e0a\uff0c\u5c06\u4e09\u4e2a\u4e32\u7684 $size$ \u76f8\u4e58\uff0c\u8d21\u732e\u7ed9 $[\\text{len(link}(x))+1,\\text{len}(x)]$ \u8fd9\u4e2a\u533a\u95f4\u5373\u53ef\u3002\u5229\u7528\u5e8f\u5217\u5dee\u5206\u53ef\u4ee5\u505a\u5230 $O(n)$\u3002\n\n\u7136\u540e\u53d1\u73b0\u8fd9\u662f\u4f2a\u5e7f\u4e49 $\\text{SAM}$ \u7684\u4e00\u79cd\u5efa\u6cd5\uff0c~~\u5185\u5fc3\u611f\u5230\u5341\u5206\u60b2\u4f24~~\u3002\u8003\u8651\u7528\u666e\u901a $\\text{SAM}$ \u89e3\u51b3\u672c\u9898\u3002\n\n\u8fd9\u9898\u4e24\u4e2a\u4e32\u7684\u60c5\u51b5\u662f [[HAOI2016] \u627e\u76f8\u540c\u5b57\u7b26](https://www.luogu.com.cn/problem/P3181)\uff0c\u56de\u987e\u4e00\u4e0b\u7528 $\\text{SAM}$ \u5982\u4f55\u89e3\u51b3\uff1a\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u4e32\u5efa\u51fa $\\text{SAM}$\uff0c\u7b2c\u4e8c\u4e2a\u4e32\u5728 $\\text{SAM}$ \u4e0a\u5339\u914d\u3002\u8bbe\u5f53\u524d\u5339\u914d\u5230\u7684\u72b6\u6001\u662f $x$\uff0c\u6700\u957f\u957f\u5ea6\u4e3a $now$\uff0c\u90a3\u4e48\u7b2c\u4e8c\u4e2a\u4e32\u4ece\u6839\u8282\u70b9\u5230 $\\text{link}(x)$ \u90fd\u53ef\u4ee5\u8986\u76d6\uff1b\u800c\u5bf9\u4e8e\u72b6\u6001 $x$\uff0c\u53ea\u80fd\u8986\u76d6 $[\\text{len(link}(x))+1,now]$\u3002\u8003\u8651\u628a\u8d21\u732e\u5206\u6210\u4e24\u90e8\u5206\u8ba1\u7b97\u3002\u5728 $x$ \u4e0a\u7684\u8d21\u732e\u53ef\u4ee5\u76f4\u63a5\u8ba1\u7b97\uff0c\u800c\u5bf9\u4e8e\u6839\u8282\u70b9\u5230 $\\text{link}(x)$ \u7684\u8d21\u732e\uff0c\u53ef\u4ee5\u901a\u8fc7\u524d\u7f00\u548c\u9884\u5904\u7406\u7136\u540e\u76f4\u63a5\u67e5\u8be2\u3002\u8fd9\u6837\u5c31\u7528\u666e\u901a $\\text{SAM}$ \u505a\u5230\u4e86 $O(n)$ \u7684\u590d\u6742\u5ea6\u3002\n\n\u73b0\u5728\u5c06\u4e24\u4e2a\u4e32\u7684\u60c5\u51b5\u63a8\u5e7f\u5230\u4e09\u4e2a\u4e32\uff08\u6b64\u5904\u611f\u8c22 @Point_King \u7684\u6307\u5bfc\uff09\uff1a\u6211\u4eec\u79f0\u8986\u76d6 $[\\text{len(link}(x))+1,now]$ \u4e3a\u4e0d\u5b8c\u5168\u8986\u76d6\uff0c\u5219\u4e0d\u5b8c\u5168\u8986\u76d6\u7684\u603b\u6b21\u6570\u662f $O(n)$ \u7684\u3002\u540c\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b8c\u5168\u8986\u76d6\u770b\u4f5c\u662f $now=\\text{len}(x)$ \u7684\u60c5\u51b5\uff0c\u800c\u8fd9\u91cc\u53ef\u4ee5\u7528\u6811\u4e0a\u5dee\u5206\u7684\u65b9\u6cd5\u7edf\u8ba1\u51fa\u6bcf\u4e2a\u4e32\u5728\u6bcf\u4e2a\u72b6\u6001\u4e0a\u5b8c\u5168\u8986\u76d6\u7684\u6b21\u6570\u3002\u8bbe $f_{now}$ \u8868\u793a\u7b2c\u4e8c\u4e2a\u4e32\u8986\u76d6 $[\\text{len(link}(x))+1,now]$ \u7684\u6b21\u6570\uff0c$g_{now}$ \u8868\u793a\u7b2c\u4e09\u4e2a\u4e32\u8986\u76d6 $[\\text{len(link}(x))+1,now]$ \u7684\u6b21\u6570\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u72b6\u6001 $x$\uff0c\u53ef\u4ee5\u7528\u540e\u7f00\u548c\u5904\u7406\u51fa $[\\text{len(link}(x))+1,\\text{len}(x)]$ \u957f\u5ea6\u533a\u95f4\u5185\u7684\u7b54\u6848\u3002\u6b64\u65f6\u590d\u6742\u5ea6\u4e3a $O(n^2)$\u3002\n\n\u53d1\u73b0\u5bf9\u4e8e\u6240\u6709\u72b6\u6001\uff0c$f_{now}$ \u548c $g_{now}$ \u503c\u4e0d\u4e3a $0$ \u7684\u4f4d\u7f6e\u603b\u6570\u662f $O(n)$ \u7684\uff0c\u6240\u4ee5\u4e0d\u7528\u904d\u5386\u6574\u6bb5\u533a\u95f4\uff0c\u5c06\u7b2c\u4e8c\u4e2a\u4e32\u548c\u7b2c\u4e09\u4e2a\u4e32\u7684 $now$ \u6392\u5e8f\u53bb\u91cd\u540e\uff0c\u53ea\u9700\u8981\u904d\u5386\u603b\u6570\u4e3a $O(n)$ \u7684\u4f4d\u7f6e\u5373\u53ef\uff0c\u800c\u76f8\u90bb\u4e24\u4e2a\u4f4d\u7f6e\u4e4b\u95f4\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u662f\u76f8\u7b49\u7684\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\uff0c\u53ef\u4ee5\u901a\u8fc7\uff08\u5728 $\\text{CF}$ \u4e0a\u8dd1\u7684\u548c $O(n)$ \u5dee\u4e0d\u591a\u5feb\uff09\u3002\u6b64\u5904\u4e5f\u53ef\u4ee5\u7528\u6876\u6392\u5e8f\uff0c\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u8fbe\u5230 $O(n)$\u3002\n\n\u5f53\u7136\uff0c\u8fd9\u79cd\u505a\u6cd5\u4e5f\u53ef\u4ee5\u63a8\u5e7f\u5230 $n$ \u4e2a\u5b57\u7b26\u4e32\u7684\u60c5\u51b5\u3002\n\n$\\text{Update 3.29}:$ \u4fee\u6b63\u4e86\u4e00\u4e9b\u7b14\u8bef\u3002\n\n$\\text{Code}:$\n\n\u5e7f\u4e49 $\\text{SAM}:$\n\n```cpp\n#include <bits/stdc++.h>\n#pragma GCC optimize(3)\n//#define int long long\n#define ri register\n#define mk make_pair\n#define fi first\n#define se second\n#define pb push_back\n#define eb emplace_back\n#define is insert\n#define es erase\n#define vi vector<int>\n#define vpi vector<pair<int,int>>\nusing namespace std; const int N=600010, Mod=1e9+7;\ninline int read()\n{\n\tint s=0, w=1; ri char ch=getchar();\n\twhile(ch<'0'||ch>'9') { if(ch=='-') w=-1; ch=getchar(); }\n\twhile(ch>='0'&&ch<='9') s=(s<<3)+(s<<1)+(ch^48), ch=getchar();\n\treturn s*w;\n}\nchar s[3][N];\nint n,m,len[3],g[3][N],Ans[N],tag[3][N],book[N];\nint head[N],maxE; struct Edge { int nxt,to; }e[N];\ninline void Add(int u,int v) { e[++maxE].nxt=head[u]; head[u]=maxE; e[maxE].to=v; }\nstruct SAM\n{\n\tint link[N],len[N],ch[N][28];\n\tint tot,lst;\n\tinline SAM() { tot=lst=1; link[1]=len[1]=0; memset(ch[1],0,sizeof(ch[1])); }\n\tinline void Extend(int c)\n\t{\n\t\tint now=++tot;\n\t\tint p=lst;\n\t\twhile(p && !ch[p][c]) ch[p][c]=now, p=link[p];\n\t\tlen[now]=len[lst]+1;\n\t\tif(!p) { lst=now, link[now]=1; return; }\n\t\tint q=ch[p][c];\n\t\tif(len[q]==len[p]+1) link[now]=q;\n\t\telse\n\t\t{\n\t\t\tint nq=++tot;\n\t\t\tlen[nq]=len[p]+1;\n\t\t\tmemcpy(ch[nq],ch[q],sizeof(ch[q]));\n\t\t\tlink[nq]=link[q];\n\t\t\tlink[q]=link[now]=nq;\n\t\t\twhile(p && ch[p][c]==q) ch[p][c]=nq, p=link[p];\n\t\t}\n\t\tlst=now;\n\t}\n\tinline void Renew()\n\t{\n\t\tfor(ri int i=1;i<=tot;i++) link[i]=len[i]=0, memset(ch[i],0,sizeof(ch[i]));\n\t\ttot=lst=1;\n\t}\n}A;\nvoid DFS(int x)\n{\n\tfor(ri int i=head[x];i;i=e[i].nxt)\n\t{\n\t\tint v=e[i].to;\n\t\tDFS(v);\n\t\tfor(ri int j=0;j<3;j++) g[j][x]+=g[j][v];\n\t}\n}\nsigned main()\n{\n\tfor(ri int i=0;i<3;i++) scanf(\"%s\",s[i]+1), len[i]=strlen(s[i]+1);\n\tm=min(len[0],min(len[1],len[2]));\n\tfor(ri int i=0;i<3;i++)\n\t{\n\t\tfor(ri int j=1;j<=len[i];j++) A.Extend(s[i][j]-'a');\n\t\tif(i<2) A.Extend(i+26);\n\t}\n\tfor(ri int i=2;i<=A.tot;i++) Add(A.link[i],i);\n\tfor(ri int i=0;i<3;i++)\n\t{\n\t\tint sta=1;\n\t\tfor(ri int j=1;j<=len[i];j++)\n\t\t{\n\t\t\tint p=s[i][j]-'a';\n\t\t\tsta=A.ch[sta][p];\n\t\t\tg[i][sta]++;\n\t\t}\n\t}\n\tDFS(1);\n\tfor(ri int i=2;i<=A.tot;i++)\n\t{\n\t\tint L=A.len[A.link[i]]+1, R=A.len[i];\n\t\tint w=1ll*g[0][i]*g[1][i]%Mod*g[2][i]%Mod;\n\t\tAns[L]=(Ans[L]+w)%Mod;\n\t\tAns[R+1]=(Ans[R+1]-w+Mod)%Mod;\n\t}\n\tfor(ri int i=1;i<=m;i++)\n\t{\n\t\tAns[i]=(Ans[i]+Ans[i-1])%Mod;\n\t\tif(Ans[i]<0) Ans[i]+=Mod;\n\t}\n\tfor(ri int i=1;i<=m;i++) printf(\"%d \",Ans[i]);\n\tputs(\"\");\n\treturn 0;\n}\n```\n\n\u666e\u901a $\\text{SAM}:$\n\n```cpp\n#include <bits/stdc++.h>\n#pragma GCC optimize(3)\n//#define int long long\n#define ri register\n#define mk make_pair\n#define fi first\n#define se second\n#define pb push_back\n#define eb emplace_back\n#define is insert\n#define es erase\n#define vi vector<int>\n#define vpi vector<pair<int,int>>\nusing namespace std; const int N=600010, Mod=1e9+7;\ninline int read()\n{\n\tint s=0, w=1; ri char ch=getchar();\n\twhile(ch<'0'||ch>'9') { if(ch=='-') w=-1; ch=getchar(); }\n\twhile(ch>='0'&&ch<='9') s=(s<<3)+(s<<1)+(ch^48), ch=getchar();\n\treturn s*w;\n}\nchar s[3][N];\nint n,m,len[3],siz[N],o[3][N],book[N],Ans[N];\nvi g[3][N];\nstruct Node { int w,ti,id; };\nvpi h; vector<Node> H;\nint head[N],maxE; struct Edge { int nxt,to; }e[N];\ninline void Add(int u,int v) { e[++maxE].nxt=head[u]; head[u]=maxE; e[maxE].to=v; }\nstruct SAM\n{\n\tint link[N],len[N],ch[N][26];\n\tint tot,lst;\n\tinline SAM() { tot=lst=1; link[1]=len[1]=0; memset(ch[1],0,sizeof(ch[1])); }\n\tinline void Extend(int c)\n\t{\n\t\tint now=++tot;\n\t\tint p=lst;\n\t\tsiz[now]=1;\n\t\twhile(p && !ch[p][c]) ch[p][c]=now, p=link[p];\n\t\tlen[now]=len[lst]+1;\n\t\tif(!p) { lst=now, link[now]=1; return; }\n\t\tint q=ch[p][c];\n\t\tif(len[q]==len[p]+1) link[now]=q;\n\t\telse\n\t\t{\n\t\t\tint nq=++tot;\n\t\t\tlen[nq]=len[p]+1;\n\t\t\tmemcpy(ch[nq],ch[q],sizeof(ch[q]));\n\t\t\tlink[nq]=link[q];\n\t\t\tlink[q]=link[now]=nq;\n\t\t\twhile(p && ch[p][c]==q) ch[p][c]=nq, p=link[p];\n\t\t}\n\t\tlst=now;\n\t}\n\tinline void Renew()\n\t{\n\t\tfor(ri int i=1;i<=tot;i++) link[i]=len[i]=0, memset(ch[i],0,sizeof(ch[i]));\n\t\ttot=lst=1;\n\t}\n}A;\ninline void UpDate(int x,int l,int r,int w1,int w2)\n{\n\tif(l>r) return;\n\tint w=1ll*siz[x]*w1%Mod*w2%Mod;\n\tAns[l]=(Ans[l]+w)%Mod;\n\tAns[r+1]=(Ans[r+1]-w+Mod)%Mod;\n}\nvoid DFS(int x)\n{\n\tfor(ri int i=head[x];i;i=e[i].nxt)\n\t{\n\t\tint v=e[i].to;\n\t\tDFS(v);\n\t\tsiz[x]+=siz[v];\n\t\tfor(ri int j=1;j<3;j++) o[j][x]+=o[j][v];\n\t}\n\tif(x==1) return;\n\tint tot1,tot2;\n\ttot1=(int)g[1][x].size()+o[1][x];\n\ttot2=(int)g[2][x].size()+o[2][x];\n\tif(!tot1||!tot2) return;\n\th.clear(), H.clear();\n\tfor(ri int i=1;i<3;i++)\n\tfor(auto j:g[i][x]) h.eb(mk(j,i));\n\tsort(h.begin(),h.end());\n\tpair<int,int> lst={-1,-1};\n\tint flg1,flg2; flg1=flg2=0;\n\tfor(auto i:h)\n\t{\n\t\tif(i==lst) H.back().ti++;\n\t\telse\n\t\t{\n\t\t\tH.eb((Node){i.fi,1,i.se});\n\t\t\tif(i.fi==A.len[x])\n\t\t\t{\n\t\t\t\tif(i.se==1&&!flg1)\n\t\t\t\t{\n\t\t\t\t\tflg1=1;\n\t\t\t\t\tH.back().ti+=o[1][x];\n\t\t\t\t}\n\t\t\t\tif(i.se==2&&!flg2)\n\t\t\t\t{\n\t\t\t\t\tflg2=1;\n\t\t\t\t\tH.back().ti+=o[2][x];\n\t\t\t\t}\n\t\t\t}\n\t\t\tlst=i;\n\t\t}\n\t}\n\tif(!flg1) H.eb((Node){A.len[x],o[1][x],1});\n\tif(!flg2) H.eb((Node){A.len[x],o[2][x],2});\n\tint pre=A.len[A.link[x]]+1;\n\tfor(auto i:H)\n\t{\n\t\tUpDate(x,pre,i.w,tot1,tot2);\n\t\tpre=i.w+1;\n\t\tif(i.id==1) tot1-=i.ti;\n\t\telse tot2-=i.ti;\n\t}\n}\nsigned main()\n{\n\tfor(ri int i=0;i<3;i++) scanf(\"%s\",s[i]+1), len[i]=strlen(s[i]+1);\n\tm=min(len[0],min(len[1],len[2]));\n\tfor(ri int i=1;i<=len[0];i++) A.Extend(s[0][i]-'a');\n\tfor(ri int i=2;i<=A.tot;i++) Add(A.link[i],i);\n\tfor(ri int i=1;i<3;i++)\n\t{\n\t\tint sta=1,now=0;\n\t\tfor(ri int j=1;j<=len[i];j++)\n\t\t{\n\t\t\tint p=s[i][j]-'a';\n\t\t\twhile(sta && !A.ch[sta][p]) sta=A.link[sta], now=A.len[sta];\n\t\t\tif(!sta) { sta=1; continue; }\n\t\t\tif(A.ch[sta][p]) sta=A.ch[sta][p], now++;\n\t\t\tg[i][sta].eb(now), o[i][A.link[sta]]++;\n\t\t}\n\t}\n\tDFS(1);\n\tfor(ri int i=1;i<=m;i++)\n\t{\n\t\tAns[i]=(Ans[i]+Ans[i-1])%Mod;\n\t\tif(Ans[i]<0) Ans[i]+=Mod;\n\t}\n\tfor(ri int i=1;i<=m;i++) printf(\"%d \",Ans[i]);\n\tputs(\"\");\n\treturn 0;\n}\n```\n\n",
        "postTime": 1616938661,
        "uid": 98618,
        "name": "Provicy",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF452E"
    },
    {
        "content": "# \u601d\u8def:\n\u5e7f\u4e49SAM+\u5dee\u5206.\n\n\u663e\u7136,\u76f8\u540c\u7684\u4e32\u5728SAM\u7684\u76f8\u540c\u8282\u70b9\u4e0a,\u90a3\u4e48\u6211\u4eec\u7edf\u8ba1\u4e00\u4e0b\u8fd9\u4e2a\u72b6\u6001\u5728\u6240\u6709\u4e32\u4e2d\u7684\u51fa\u73b0\u6b21\u6570\u5373\u53ef.\n\n\u7528\u5dee\u5206\u5904\u7406:\n\u5bf9\u4e8e\u4e00\u4e2a\u72b6\u6001$x$,\u957f\u5ea6\u4e3a$[l,r]$,\u8d21\u732e\u4e3a$t$,\u90a3\u4e48\u76f4\u63a5$d[l]+=t,d[r+1]-=t$\u5373\u53ef.\n\n\u6700\u540e\u987a\u5e8f\u6c42\u548c\u8f93\u51fa\u5373\u53ef.\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\nconst int N=6e5+10,mod=1000000007;\n\nchar s[N];\nstruct node {int fa,len,v[26];}tr[N];\nint n,mx,len,last=1,tot=1,b[N],c[N],now,f[N][3];\n\nvoid add(int c) {\n\tint p=last;\n\tif(tr[p].v[c]) {\n\t\tint q=tr[p].v[c],y;\n\t\tif(tr[p].len+1==tr[q].len) last=q;\n\t\telse {\n\t\t\ttr[last=y=++tot]=tr[q];\n\t\t\ttr[y].len=tr[p].len+1;\n\t\t\ttr[q].fa=y;\n\t\t\tfor(\t;p&&tr[p].v[c]==q;p=tr[p].fa) tr[p].v[c]=y;\n\t\t}\n\t}\n\telse {\n\t\tint x=last=++tot; tr[x].len=tr[p].len+1;\n\t\tfor(\t;p&&!tr[p].v[c];p=tr[p].fa) tr[p].v[c]=x;\n\t\tif(!p) tr[x].fa=1;\n\t\telse {\n\t\t\tint q=tr[p].v[c],y;\n\t\t\tif(tr[p].len+1==tr[q].len) tr[x].fa=q;\n\t\t\telse {\n\t\t\t\ttr[y=++tot]=tr[q];\n\t\t\t\ttr[y].len=tr[p].len+1;\n\t\t\t\ttr[q].fa=tr[x].fa=y;\n\t\t\t\tfor(\t;p&&tr[p].v[c]==q;p=tr[p].fa) tr[p].v[c]=y;\n\t\t\t}\n\t\t}\n\t}\n\tf[last][now]++;\n}\n\nvoid Sort() {\n\tfor(int i=0;i<=mx;i++) c[i]=0;\n\tfor(int i=1;i<=tot;i++)  c[tr[i].len]++;\n\tfor(int i=1;i<=mx;i++) c[i]+=c[i-1];\n\tfor(int i=tot; i;i--)  b[c[tr[i].len]--]=i;\n}\n\nvoid upd(int &x) {x+=x>>31&mod;}\n\nint d[N];\n\nint main() {\n\tn=N;\n\tfor(now=0;now<3;now++) {\n\t\tscanf(\"%s\",s+1);last=1;len=0;\n\t\tfor(int i=1;s[i];i++) add(s[i]-'a'),len++;\n\t\tn=min(n,len);\n\t\tmx=max(mx,len);\n\t}\n\tSort();\n\tfor(int i=tot;i>1;i--) {\n\t\tint j=b[i],fa=tr[j].fa;\n\t\tfor(int k=0;k<3;k++) f[fa][k]+=f[j][k];\n\t\tint *F=f[j];\n\t\tll t=(ll)F[0]*F[1]*F[2]%mod;\n\t\tupd(d[tr[fa].len+1]+=t-mod); \n\t\tupd(d[tr[j].len+1]-=t);\n\t}\n\tint ans=0;\n\tfor(int i=1;i<=n;i++) {\n\t\tupd(ans+=d[i]-mod);\n\t\tprintf(\"%d \",ans);\n\t}\n\tputs(\"\");\n\treturn 0;\n}\n\n\n```\n\n",
        "postTime": 1585283553,
        "uid": 118826,
        "name": "2018LZY",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF452E \u3010Three strings\u3011"
    },
    {
        "content": "# \u9898\u76ee\n\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF452E)\n\n# \u9898\u89e3\n\n## \u7b97\u6cd5\u4e00\n\n\u66b4\u529b\u505a\uff0c\u679a\u4e3e $A$ \u7684\u5b57\u4e32\uff0c\u5728 $B,C$ \u4e2d\u66b4\u529b\u627e\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n^4)$.\n\n## \u7b97\u6cd5\u4e8c\n\n\u540c\u6837\u8981\u5728 $A$ \u4e2d\u679a\u4e3e\u5b57\u4e32\uff0c\u4f46\u662f\u8003\u8651\u5728 $L=1$ \u65f6\uff0c\u5bf9\u4e8e $A$ \u7684\u6bcf\u4e2a\u5b57\u7b26\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 $B,C$ \u4e2d\u627e\u51fa\u76f8\u5339\u914d\u7684\uff0c\u968f\u7740 $L$ \u53d8\u5927\uff0c\u53ef\u80fd\u7684\u76f8\u540c\u7684\u90e8\u5206\u4e5f\u53ea\u53ef\u80fd\u5728\u4e4b\u524d\u5339\u914d\u7684\u5b57\u7b26\u4e4b\u540e\u51fa\u73b0\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7528\u7c7b\u4f3c\u4e8e `vector` \u4e00\u7c7b\u7684\u4e1c\u897f\u5c06\u4f4d\u7f6e\u5b58\u4e0b\u6765\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(\\tt{TLE})$.\n\n## \u7b97\u6cd5\u4e09(SA)\n\n\u8003\u8651\u4f7f\u7528 $\\tt SA$ \u5c06\u5b57\u7b26\u4e32\u5339\u914d\u8f6c\u6362\u4e3a $\\tt LCP$ \u95ee\u9898.\n\n\u9996\u5148\uff0c\u5904\u7406\u8fd9\u79cd\u95ee\u9898\u7684\u5173\u952e\u662f\u6211\u4eec\u5f97\u5c06 $A,B,C$ \u9996\u5c3e\u76f8\u63a5\u5f97\u5230 $S$\uff0c\u4e2d\u95f4\u4f7f\u7528\u5206\u9694\u7b26\u9694\u5f00\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u79f0\u5176\u4e3a $S$ \u7684 $A,B,C$ \u4e09\u4e2a\u90e8\u5206.\n\n\u63a5\u4e0b\u6765\uff0c\u5b57\u7b26\u4e32\u5185\u90e8\u7684\u5339\u914d\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u540e\u7f00\u7684 $\\tt LCP$ \u95ee\u9898\uff0c\u5bf9\u4e8e\u539f\u6765 $A,B,C$ \u4e09\u4e2a\u4e32\u957f\u5ea6\u4e3a $L$ \u7684\u5339\u914d\uff0c\u73b0\u5728\u5373\u4e3a\u5c5e\u4e8e\u4e09\u4e2a\u4e0d\u540c\u90e8\u5206\u7684\u540e\u7f00\u7684 $\\texttt{LCP} \\ge L$ \u5373\u53ef.\n\n\u4f46\u662f\uff0c\u5bf9\u4e8e\u4e0d\u540c\u7684\u90e8\u5206\uff0c\u4ed6\u4eec\u7684 $\\tt LCP$ \u5e76\u975e\u662f\u5355\u8c03\u7684\uff0c\u6bd4\u5982\u6211\u4eec\u6709\u4e2a\u540e\u7f00\u6392\u5e8f\u7684\u6570\u7ec4\u957f\u8fd9\u6837\n\n<div align=\"center\">\n    <img src=\"https://s3.ax1x.com/2020/12/23/r6NfQP.md.jpg\">\n</div>\n\n\u5bf9\u4e8e $L=4$ \u65f6\uff0c\u53ef\u80fd\u6709\u8fd9\u4e9b\u90e8\u5206\u7684 $\\tt LCP$ \u662f\u6ee1\u8db3\u6761\u4ef6\u7684\n\n<div align=\"center\">\n    <img src=\"https://s3.ax1x.com/2020/12/23/r6U3lt.jpg\">\n</div>\n\n\u90a3\u4e48 $\\tt ans[4]$ \u5c31\u662f\u5404\u4e2a\u90e8\u5206\u7684 $\\tt cnt[A] \\cdot cnt[B] \\cdot cnt[C]$\uff0c\u5176\u4e2d $\\tt cnt[i]$ \u8868\u793a\u5c5e\u4e8e $i$ \u90e8\u5206\u7684\u540e\u7f00\u7684\u4e2a\u6570.\n\n\u4f46\u662f\uff0c\u968f\u7740 $L$ \u53d8\u5927\uff0c\u5404\u4e2a\u90e8\u5206\u6709\u53ef\u80fd\u4f1a\u65ad\u5f00\uff0c\u8fd9\u8ba9\u6211\u4eec\u975e\u5e38\u4e0d\u597d\u5904\u7406\uff0c\u65e2\u7136 $L$ \u53d8\u5927\u4f1a\u65ad\u5f00\uff0c\u90a3\u4e48**\u540c\u6837\u610f\u5473\u7740\uff0c\u5982\u679c\u6211\u4eec\u5012\u7740\u5904\u7406 $L$\uff0c\u90a3\u4e48\u968f\u7740 $L$ \u7684\u53d8\u5c0f\uff0c\u4f1a\u6709\u8d8a\u6765\u8d8a\u591a\u7684\u90e8\u5206\u8fde\u63a5\u5728\u4e00\u8d77\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4 `cnt[i]` \u5373\u53ef**\uff0c\u800c\u8fd9\u4e2a\u90e8\u5206\u53ef\u4ee5\u4f7f\u7528\u5e76\u67e5\u96c6\u6765\u505a\uff0c\u5e76\u67e5\u96c6\u5408\u5e76\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u7ef4\u62a4\u7b54\u6848.\n\n\u5173\u952e\u4ee3\u7801\uff1a\n\n```cpp\nconst int jzm=1000000007;\n/** @brief \u5168\u5c40\u7b54\u6848*/\nint sy=0;\n/** @brief \u5bf9\u5e94\u957f\u5ea6\u7684\u7b54\u6848*/\nint ans[maxn+5];\nstruct node{\n    // x \u662f\u540e\u7f00\u7f16\u53f7\n    int x,v;\n    inline int operator <(const node rhs)const{\n        return v>rhs.v;\n    }\n}v[maxn+5+5];\nint fa[maxn+5];\nint find(const int x){return fa[x]==x?x:fa[x]=find(fa[x]);}\nint cock(const int x){\n    return 1ll*tot[x][1]*tot[x][2]%jzm*tot[x][3]%jzm;\n}\ninline void merge(int x,int y){\n    // printf(\"merge:> x == %d, y == %d\\n\",x,y);\n    x=find(x),y=find(y);\n    if(x==y)return;\n    sy-=cock(x);if(sy<0)sy+=jzm;\n    sy-=cock(y);if(sy<0)sy+=jzm;\n    fa[x]=y;\n    rep(j,1,3)tot[y][j]+=tot[x][j];\n    sy+=cock(y);\n    if(sy>=jzm)sy-=jzm;\n}\n\ninline void solve(){\n    rep(i,1,n)v[i]=node{sa[i],heit[i]};\n    rep(i,1,n)fa[i]=i;\n    sort(v+1,v+n+1);\n    // rep(i,1,n)printf(\"v[%d] : x == %d, v == %d\\n\",i,v[i].x,v[i].v);\n    int now=1;\n    fep(i,min_len,1){\n        while(now<=n && v[now].v>=i){\n            // printf(\"When i == %d, now == %d\\n\",i,now);\n            int pre=sa[rk[v[now].x]-1];\n            merge(pre,v[now].x);\n            ++now;\n        }\n        ans[i]=sy;\n    }\n    rep(i,1,min_len)printf(\"%d \",ans[i]);\n}\n```\n\n## \u7b97\u6cd5\u56db(SAM)\n\n\u8fd9\u4e2a\u65b9\u6cd5\u518d\u7b49\u4f1a\u53ef\u80fd\u5c31\u53ef\u4ee5\u5b8c\u5584\u4e86.\n\n# \u4e00\u9053\u7c7b\u4f3c\u7684\u9898\n\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF873F)",
        "postTime": 1608716185,
        "uid": 125355,
        "name": "Vladilena",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF452E \u3010Three strings\u3011"
    },
    {
        "content": "[\u9898\u9762](https://www.luogu.org/problemnew/show/CF452E)\n\n\u5e7f\u4e49\u540e\u7f00\u81ea\u52a8\u673a\u3002\n\n\u8fd9\u9898\u611f\u89c9\u8d85\u7ea7\u50bb\u554a\uff0c\u5148\u5bf9\u4e09\u4e2a\u4e32\u5efa\u51fa\u5e7f\u4e49\u540e\u7f00\u81ea\u52a8\u673a\uff0c\u7136\u540e\u5efa\u51fa\u540e\u7f00\u6811\uff0c$dfs$\u4e00\u904d\uff0c\u628a\u6bcf\u4e2a\u7ed3\u70b9\u4ee3\u8868\u7684\u51fa\u73b0\u8fc7\u7684\u4e32\u7684\u4e2a\u6570\u8bb0\u5f55\u4e00\u4e0b\uff0c\u4e09\u4e2a\u4e32\u5206\u522b\u8bb0\u5f55\u4e00\u4e0b\uff0c\u90a3\u4e48\u8fd9\u4e2a\u957f\u5ea6\u7684\u7b54\u6848\u5c31\u662f\u4e09\u4e2a\u7684\u4e58\u79ef\u3002\u7136\u540e\u4e00\u4e2a\u7ed3\u70b9\u4ee3\u8868\u7684\u957f\u5ea6\u5e94\u8be5\u662f\u5b83\u7684\u7236\u4eb2\u7684$len$+1\u5230\u5b83\u7684$len$\uff0c\u90a3\u4e48\u5dee\u5206\u4e00\u4e0b\uff0c\u5c31\u53ef\u4ee5\u505a\u5230\u533a\u95f4\u4fee\u6539\u4e86\u3002\u4e8e\u662f\u5c31\u6ca1\u4e86\u3002\n\ncode:\n```\n//2018.11.16 by ljz\n#include<bits/stdc++.h>\nusing namespace std;\n#define res register int\n#define LL long long\n#define inf 0x3f3f3f3f\n#define eps 1e-15\ninline int read(){\n    res s=0;\n    bool w=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')w=1;ch=getchar();}\n    while(ch>='0'&&ch<='9')s=s*10+ch-'0',ch=getchar();\n    return w?-s:s;\n}\ninline void _swap(res &x,res &y){\n    x^=y^=x^=y;\n}\ninline int _abs(const res &x){\n    return x>0?x:-x;\n}\ninline int _max(const res &x,const res &y){\n    return x>y?x:y;\n}\ninline int _min(const res &x,const res &y){\n    return x<y?x:y;\n}\nconst int N=3e5+10;\nconst int kcz=1e9+7;\nnamespace MAIN{\n    int sz[N<<1][3];\n    struct SAM{\n        struct Sam{\n            int vis[26],par,len;\n        }sam[N<<1];\n        int cnt,las,rt;\n        SAM() {cnt=las=rt=1;}\n        inline void extend(const res &x,const res &id){\n            res p=las,np=++cnt;\n            las=np,sam[np].len=sam[p].len+1,sz[np][id]++;\n            for(;p&&!sam[p].vis[x];p=sam[p].par)sam[p].vis[x]=np;\n            if(!p)sam[np].par=rt;\n            else {\n                res q=sam[p].vis[x];\n                if(sam[q].len==sam[p].len+1)sam[np].par=q;\n                else {\n                    res nq=++cnt;\n                    memcpy(sam[nq].vis,sam[q].vis,sizeof(sam[nq].vis));\n                    sam[nq].len=sam[p].len+1,sam[nq].par=sam[q].par,sam[q].par=sam[np].par=nq;\n                    for(;p&&sam[p].vis[x]==q;p=sam[p].par)sam[p].vis[x]=nq;\n                }\n            }\n        }\n    }A;\n    char str[N];\n    struct E{\n        int next,to;\n        E() {}\n        E(res next,res to):next(next),to(to) {}\n    }edge[N<<1];\n    int head[N<<1],cnt;\n    inline void addedge(const res &u,const res &v){\n        edge[++cnt]=E(head[u],v),head[u]=cnt;\n    }\n    int ans[N];\n    inline void add(res &x,const res &y){\n        x+=y;\n        x>=kcz?x-=kcz:1;\n    }\n    void dfs(const res &x){\n        for(res i=head[x];~i;i=edge[i].next){\n            res tox=edge[i].to;\n            dfs(tox);\n            sz[x][0]+=sz[tox][0],sz[x][1]+=sz[tox][1],sz[x][2]+=sz[tox][2];\n        }\n        add(ans[A.sam[A.sam[x].par].len+1],1LL*sz[x][0]*sz[x][1]%kcz*sz[x][2]%kcz);\n        add(ans[A.sam[x].len+1],kcz-1LL*sz[x][0]*sz[x][1]%kcz*sz[x][2]%kcz);\n    }\n    int mi=inf;\n    inline void MAIN(){\n        memset(head,-1,sizeof(head));\n        scanf(\"%s\",str+1),A.las=1;\n        mi=_min(mi,strlen(str+1));\n        for(res i=1,sz=strlen(str+1);i<=sz;i++)A.extend(str[i]-'a',0);\n        scanf(\"%s\",str+1),A.las=1;\n        mi=_min(mi,strlen(str+1));\n        for(res i=1,sz=strlen(str+1);i<=sz;i++)A.extend(str[i]-'a',1);\n        scanf(\"%s\",str+1),A.las=1;\n        mi=_min(mi,strlen(str+1));\n        for(res i=1,sz=strlen(str+1);i<=sz;i++)A.extend(str[i]-'a',2);\n        for(res i=2;i<=A.cnt;i++)if(A.sam[i].par)addedge(A.sam[i].par,i);\n        dfs(1);\n        for(res i=1;i<=mi;i++)add(ans[i],ans[i-1]),printf(\"%d \",ans[i]);\n    }\n}\nint main(){\n    MAIN::MAIN();\n    return 0;\n}\n```",
        "postTime": 1542336912,
        "uid": 32878,
        "name": "foreverlasting",
        "ccfLevel": 7,
        "title": "\u3010CF452E\u3011Three strings"
    }
]