[
    {
        "content": "\u5355\u8c03\u6808 $O(n)$ \u89e3\u6cd5\u3002\n\n\n\u5bb9\u6613\u53d1\u73b0\u6734\u7d20\u7684 dp \u5f0f\u5b50 $f_i=f_j+w(j+1,i)$\u3002\u8fd9\u4e2a $w(j+1,i)$ \u4e8b\u5b9e\u4e0a\u5c31\u662f\u5355\u8c03\u6808\u66f4\u65b0\u5230 $i$ \u65f6\uff0c\u5355\u8c03\u6808\u4e2d\u4e0b\u6807\u5927\u4e8e $j$ \u7684\u7b2c\u4e00\u4e2a\u6570 $k$ \u7684 $b_k$\u3002\n\n\u6216\u8005\u6362\u53e5\u8bdd\u8bf4\uff0c\u5355\u8c03\u6808\u4e2d\u7684\u7b2c $p$ \u4e2a\u5143\u7d20 $s_p$ \u7ba1\u8f96\u7740 $[s_{p-1}+1,s_p]$ \u8fd9\u4e2a\u533a\u95f4\uff0c$[s_{p-1}+1,s_p]$ \u533a\u95f4\u7684\u6570\u96b6\u5c5e\u4e8e $p$\u3002\n\n\u6240\u4ee5\u5c31\u662f $f_i=\\max_{k=1}^{top}(\\max_{j=s_{k-1}+1}^{s_k}(f_j)+b_{s_k})$\n\n\u8fd9\u4e2a\u5bb9\u6613\u901a\u8fc7\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u6bcf\u4e2a\u6570\u6240\u96b6\u5c5e\u7684\u5143\u7d20\uff0c\u505a\u5230 $O(nlogn)$\u3002\n\n\u4f46\u662f\u4e5f\u53ef\u4ee5\u76f4\u63a5\u7ef4\u62a4\u5355\u8c03\u6808\u4e0a\u7684\u4fe1\u606f\u505a\u5230 $O(n)$\u3002\u5148\u4e0a\u4ee3\u7801\u3002\n\n```cpp\n#define ll long long\n#define ri register int\n#define N 300010\nint n,h[N],b[N],top,s[N];\nll val[N],f[N],pre[N];\nint main()\n{\n\tn=rd();\n\tpre[0]=-1e18;\n\tfor(ri i=1;i<=n;++i) h[i]=rd();\n\tfor(ri i=1;i<=n;++i) b[i]=rd();\n\tfor(ri i=1;i<=n;++i){\n        ll tmp=f[i-1];\n        while(top&&h[i]<h[s[top]]){\n            tmp=max(tmp,val[top]);\n            top--;\n        }\n        s[++top]=i,val[top]=tmp;\n        f[i]=pre[top]=max(pre[top-1],tmp+b[i]);//two ways to transfer\n    }\n    cout<<f[n];\n    return 0;\n}\n```\n\n\u89c2\u5bdf\u6211\u4eec\u63d0\u51fa\u7684 dp \u5f0f\u5b50\uff0c\u6211\u4eec\u53d1\u73b0\u5168\u90e8\u548c\u5355\u8c03\u6808\u4e2d\u7684\u4e0b\u6807\u76f8\u5173\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u4ee5\u5355\u8c03\u6808\u7684\u4e0b\u6807\u6765\u7ef4\u62a4\u4e00\u4e9b\u4e1c\u897f\u5c31\u53ef\u4ee5\u4e86\u3002\n\n$val$ \u6570\u7ec4\u7ef4\u62a4\u7684\u662f $[s_{i-1}+1,s_i]$ \u4e2d $f$ \u7684\u6700\u5927\u503c\uff0c\u4e5f\u5c31\u662f $\\max_{j=s_{i-1}+1}^{s_i}(f_j)$\u3002\n\n$pre$ \u7ef4\u62a4\u7684\u662f $[1,s_i]$ \u4e2d $f+b$ \u7684\u524d\u7f00\u6700\u5927\u503c\u3002\n\n\u800c $tmp$ \u5c31\u662f\u4ee5 $i$ \u7ed3\u5c3e\u7684\u8fd9\u4e00\u6bb5\u7684 $f$ \u7684\u6700\u5927\u503c\u3002\n\n\u770b\u8f6c\u79fb\u90e8\u5206\uff0c$pre[top-1]$ \u8868\u793a $[1,s_{top-1}]$ \u8fd9\u90e8\u5206\u7b54\u6848\u7684\u6700\u5927\u503c\uff0c\u800c $tmp+b[i]$ \u5219\u662f $[s_{top-1}+1,s_{top}]$ \u8fd9\u6bb5\u7684\u7b54\u6848\uff0c\u4e24\u8005\u53d6 $\\max$ \u5373\u53ef\u3002 ",
        "postTime": 1616480978,
        "uid": 135839,
        "name": "Fairicle",
        "ccfLevel": 6,
        "title": "CF1483C"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/CF1483C)   \n[\u6211\u7684Blog](https://blog.csdn.net/Brian_Pan_/article/details/115065320?spm=1001.2014.3001.5501)\n\n\u611f\u89c9\u8fd9\u9053\u9898\u8ddf\u5f53\u665a\u7684ARC E \u649e\u4e86\uff0c\u867d\u7136\u5e76\u4e0d\u662f\u5b8c\u5168\u4e00\u6837\u3002  \n\u7ed3\u679c\u6211ARC E\u548c\u8fd9\u9053\u9898\u90fd\u6ca1\u6709\u5728\u8d5b\u65f6\u505a\u51fa\u6765/kk\u3002\n\n\u8fd9\u91cc\u8bb0 $a_i,b_i$ \u4e3a\u7b2c $i$ \u4e2a\u697c\u623f\u7684\u9ad8\u5ea6\u548c\u7f8e\u4e3d\u503c\u3002\n\u6211\u4eec\u8bbe $f_i$ \u4e3a\u524d $i$ \u680b\u623f\u5c4b\u53ef\u4ee5\u5f97\u5230\u7684\u6700\u5927\u7f8e\u4e3d\u503c\uff0c\u4e14 $\\operatorname{val}(l,r)$ \u8868\u793a\u533a\u95f4 $[l,r]$ \u5185\u6700\u77ee\u7684\u697c\u623f\u7684\u7f8e\u4e3d\u503c\u3002\n\u90a3\u4e48\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a $\\mathcal O(n^2)$ \u7684\u8f6c\u79fb\uff1a  \n$f_i=\\max\\limits_{j=0}^{i-1}\\{f_j+\\operatorname{val}(j+1,i)\\}$\u3002\n\n\u7531\u4e8e $f_j$ \u8f6c\u79fb\u5230 $f_i$ \u65f6\uff0c\u53ea\u9700\u8981\u7528\u5230\u4ed6\u4eec\u4e4b\u95f4\u7684\u6700\u77ee\u7684\u697c\u623f\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u7528\u5355\u8c03\u6808\u6765\u7ef4\u62a4\u6240\u6709\u53ef\u80fd\u7528\u5230\u7684\u697c\u623f\u3002\n\n\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u9012\u589e\u7684\u6808 $c$\uff08\u6808\u4e2d\u5b58\u7684\u662f\u697c\u623f\u7f16\u53f7\uff09\uff0c\u8bb0 $cnt$ \u4e3a $c$ \u7684\u5927\u5c0f\uff0c\u6ee1\u8db3 $a_{c_i}<a_{c_{i+1}}\\space|\\space (1 \\le i < cnt)$\u3002  \n\u90a3\u4e48\u6211\u4eec\u7ee7\u7eed\u8003\u8651\u8f6c\u79fb\uff0c\u540c\u65f6\u7ef4\u62a4\u5355\u8c03\u6808\uff1a  \n\u663e\u7136\uff0c\u5f53 $j \\in [c_{k-1},c_k-1]\\space | \\space (1<k \\le cnt)$ \u65f6\uff0c\u8f6c\u79fb\u7528\u5230\u7684\u6700\u77ee\u697c\u623f\u90fd\u662f $c_k$\u3002\u56e0\u4e3a\u6839\u636e\u5355\u8c03\u6808\u7684\u6027\u8d28\uff0c$c_k$ \u662f $[c_k,i]$ \u4e2d\u6700\u77ee\u7684\u697c\u623f\u3002\n\n\u8fd9\u6837\uff0c\u8f6c\u79fb\u65b9\u7a0b\u5c31\u53d8\u6210\u4e86 $f_i=\\max\\limits_{k=2}^{cnt}\\{(\\max\\limits_{j=c_{k-1}}^{c_k-1} f_j) + b_{c_k}\\}$\u3002\u6ce8\u610f\u5728\u8be5\u6b21\u8f6c\u79fb\u524d\u5df2\u7ecf\u5c06\u5355\u8c03\u6808\u7ef4\u62a4\u5230 $i$\u3002  \n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u4ece $f_j$ \u8f6c\u79fb\u5230 $f_i$ \u65f6\uff0c$f_j$ \u540e\u9762\u52a0\u4e0a\u7684\u7f8e\u4e3d\u503c $b$ \u53ea\u8ddf\u4ed6\u540e\u9762\u7684\u7b2c\u4e00\u4e2a\u6808\u5185\u5143\u7d20\u6709\u5173\u3002\u5e76\u4e14\u53ea\u8981\u8be5\u5143\u7d20\u4e0d\u88ab\u5f39\u51fa\u6808\uff0c$f_j$ \u540e\u9762\u52a0\u4e0a\u7684\u7f8e\u4e3d\u503c\u6c38\u8fdc\u4e0d\u53d8\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6bcf\u4e00\u4e2a\u70b9\u7684\u8f6c\u79fb\u503c\uff0c\u4e5f\u5c31\u662f $f_j+b$\u3002  \n\u5728\u7ef4\u62a4\u5355\u8c03\u6808\u65f6\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5165\u6808\u7684\u5143\u7d20\uff0c\u6211\u4eec\u5c06\u533a\u95f4 $[c_{cnt-1},c_{cnt}-1]$ \u5168\u90e8\u52a0\u4e0a $b_{c_{cnt}}$\u3002\u540c\u7406\uff0c\u5728\u5f39\u51fa\u6808\u7684\u65f6\u5019\uff0c\u5c06\u8be5\u533a\u95f4\u5168\u90e8\u51cf\u53bb $b_{c_{cnt}}$\u3002  \n$f_i$ \u7684\u8f6c\u79fb\u5c31\u662f $[0,i-1]$ \u7684\u533a\u95f4\u6700\u5c0f\u503c\u3002  \n\u6ce8\u610f\u5728\u6c42\u51fa $f_i$ \u4e4b\u540e\uff0c\u8981\u5355\u70b9\u66f4\u65b0\u7ebf\u6bb5\u6811\u3002  \n\u6700\u540e\u7684 $f_n$ \u5c31\u662f\u6211\u4eec\u8981\u6c42\u7684\u7b54\u6848\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n \\log n)$\n\n-----\n\n\u8d5b\u5236\u6700\u540e90s\u7801\u5b8c\u4e86\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u7ed3\u679c `WA on pretest 6`\u3002\u8d5b\u540e\u53d1\u73b0\u6ca1\u5f00 `long long` /kk\u3002  \n\u4e3a\u4e86\u7f8e\u89c2\u548c\u65b9\u4fbf\u7406\u89e3\uff0c\u53ea\u7ed9\u51fa\u672a\u5f00 `long long` \u7684\u4ee3\u7801\u3002\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<cstring>\n#include<string>\nusing namespace std;\nconst int Maxn=3e5+10;\nconst int Maxm=Maxn<<2;\nconst int inf=(1ll<<60);\nint a[Maxn],b[Maxn];\nint f[Maxn],c[Maxn];\nint maxv[Maxm],add[Maxm];\nint n,ans;\ninline int read()\n{\n    int s=0,w=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n    while(ch>='0' && ch<='9')s=(s<<3)+(s<<1)+(ch^48),ch=getchar();\n    return s*w;\n}\ninline void push_up(int k)\n{\n    maxv[k]=max(maxv[k<<1],maxv[k<<1|1]);\n}\ninline void upd(int k,int v)\n{\n    add[k]+=v;\n    maxv[k]+=v;\n}\ninline void push_down(int k)\n{\n    if(add[k]==0)return;\n    upd(k<<1,add[k]);\n    upd(k<<1|1,add[k]);\n    add[k]=0;\n}\nvoid modify_seq(int k,int l,int r,int x,int y,int v)\n{\n    if(x<=l && r<=y)return upd(k,v);\n    push_down(k);\n    int mid=(l+r)>>1;\n    if(x<=mid)modify_seq(k<<1,l,mid,x,y,v);\n    if(mid<y)modify_seq(k<<1|1,mid+1,r,x,y,v);\n    push_up(k);\n}\nvoid modify(int k,int l,int r,int pos,int v)\n{\n    if(l==r)\n    {\n        maxv[k]=v;\n        return;\n    }\n    int mid=(l+r)>>1;\n    if(pos<=mid)modify(k<<1,l,mid,pos,v);\n    else modify(k<<1|1,mid+1,r,pos,v);\n    push_up(k);\n}\nint query(int k,int l,int r,int x,int y)\n{\n    if(x<=l && r<=y)return maxv[k];\n    int mid=(l+r)>>1,ret=-inf;\n    push_down(k);\n    if(x<=mid)ret=query(k<<1,l,mid,x,y);\n    if(mid<y)ret=max(ret,query(k<<1|1,mid+1,r,x,y));\n    return ret;\n}\nint main()\n{\n    // freopen(\"in.txt\",\"r\",stdin);\n    n=read();\n    for(int i=1;i<=n;++i)\n    a[i]=read();\n    for(int i=1;i<=n;++i)\n    b[i]=read();\n    a[0]=-1;\n    int cnt=1;\n    f[1]=0;\n    for(int i=1;i<=n;++i)\n    {\n        while(a[c[cnt]]>=a[i] && cnt)\n        {\n            modify_seq(1,0,n,c[cnt-1],c[cnt]-1,-b[c[cnt]]);\n            --cnt;\n        }\n        modify_seq(1,0,n,c[cnt],i-1,b[i]);\n        f[i]=query(1,0,n,0,i-1);\n        modify(1,0,n,i,f[i]);\n        c[++cnt]=i;\n    }\n    printf(\"%lld\\n\",f[n]);\n    return 0;\n}\n```",
        "postTime": 1616381933,
        "uid": 120362,
        "name": "Priori_Incantatem",
        "ccfLevel": 7,
        "title": "CF1483C Skyline Photo \u9898\u89e3"
    },
    {
        "content": "### CF1483C Skyline Photo\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1483C)\n\n#### \u9898\u76ee\u5206\u6790\n\n\u9996\u5148\u6709\u4e00\u4e2a\u66b4\u529b\u7684 $O(n^2)$ \u5199\u6cd5\uff1a\n\n$$f_i=\\max\\limits_{j<i} f_j+s(j+1,i)$$\n\n\u5176\u4e2d $s(l,r)$ \u6307 $[l,r]$ \u533a\u95f4\u5185 $h_i$ \u6700\u5c0f\u7684\u4f4d\u7f6e\u5bf9\u5e94\u7684 $b_i$ \u7684\u503c\u3002\n\n\u4e0b\u9762\u6211\u4eec\u6765\u8003\u8651\u5982\u4f55\u4f18\u5316\u8fd9\u79cd\u505a\u6cd5\u3002\n\n- \u5355\u8c03\u6808 + \u7ebf\u6bb5\u6811\n\n\u5047\u5982\u6211\u4eec\u5bf9\u6bcf\u4e2a\u4f4d\u7f6e\u90fd\u7b97\u51fa\u4e86 $f_j+s(j+1,i)$ \u7684\u503c\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u5728\u7ebf\u6bb5\u6811\u4e0a\u53d6 $\\max$ \u5373\u53ef\u5f97\u5230 $f_i$ \u7684\u503c\u3002\n\n\u6211\u4eec\u8003\u8651\u5982\u4f55\u4ece\u4f4d\u7f6e $i$ \u8f6c\u79fb\u5230 $i+1$\u3002\u6ce8\u610f\u5230\u4f1a\u53d8\u5316\u7684\u53ea\u6709 $s(l,r)$\u3002\u5047\u5b9a\u5728$i+1$\u4e4b\u524d\u7b2c\u4e00\u4e2a\u6ee1\u8db3 $h_j<h_i$ \u7684\u4f4d\u7f6e\u4e3a $j$ \uff0c\u90a3\u4e48\u5bf9\u4e8e\u5728$(j,i]$ \u8fd9\u4e00\u6bb5\u533a\u95f4\u91cc\u7684\u6570\uff0c\u5b83\u4eec\u7684 $s$ \u51fd\u6570\u5747\u53d8\u5316\u4e3a $b_{i+1}$ \u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u7684\u7ebf\u6bb5\u6811\u9700\u8981\u652f\u6301\u533a\u95f4\u8986\u76d6\uff0c\u5e76\u7ef4\u62a4\u533a\u95f4\u5185\u7684 $f_{max}$ \uff08\u5982\u679c\u4e00\u6bb5\u533a\u95f4\u88ab\u8986\u76d6\u4e3a\u540c\u4e00\u4e2a\u503c\uff0c\u90a3\u4e48\u66f4\u4f18\u7684\u8f6c\u79fb\u4e00\u5b9a\u662f\u4ece $f_i$ \u66f4\u5927\u7684\u4f4d\u7f6e\u8f6c\u79fb\uff09\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u5b8c\u6210 $O(n\\log n)$ \u7684\u7b97\u6cd5\u3002\u800c\u6c42\u51fa $j$ \u53ea\u9700\u8981\u4e00\u4e2a\u5355\u8c03\u6808\u5373\u53ef\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#define mid ((l+r)>>1)\n#define ls (p<<1)\n#define rs ((p<<1)|1)\nusing namespace std;\ntypedef long long ll;\nconst int maxn=601100;\nint n,m;\nint h[maxn],b[maxn];\nll f[maxn];\nll tag[maxn<<1],fmx[maxn<<1],tmx[maxn<<1];\n//\u533a\u95f4\u8986\u76d6\u7684b_i\u503c\uff0c\u533a\u95f4f_max\uff0c\u533a\u95f4\u8d21\u732e\u6700\u5927\u503c\nbool itag[maxn<<1];\n//\u662f\u5426\u88ab\u533a\u95f4\u8986\u76d6\u8fc7\nint s[maxn],st;\ninline int read(){\n\tint res=0;\n\tchar ch=getchar(),ch1=ch;\n\twhile(!isdigit(ch))ch1=ch,ch=getchar();\n\twhile(isdigit(ch))res=(res<<3)+(res<<1)+ch-'0',ch=getchar();\n\treturn ch1=='-'?-res:res;\n}\nvoid update(int p){\n\tfmx[p]=max(fmx[p<<1],fmx[p<<1|1]);\n\ttmx[p]=max(tmx[p<<1],tmx[p<<1|1]);\n}\nvoid pushtag(int p,ll x){\n\ttag[p]=x;\n\ttmx[p]=fmx[p]+x;\n\titag[p]=true;\n}\nvoid pushdown(int p){\n\tif(itag[p]){\n\t\tpushtag(ls,tag[p]);\n\t\tpushtag(rs,tag[p]);\n\t\titag[p]=0;\n\t}\n}\nvoid build(int p,int l,int r){\n\tfmx[p]=tmx[p]=-(1ll<<50);\n\tif(l==r)return;\n\tpushdown(p);\n\tbuild(ls,l,mid);\n\tbuild(rs,mid+1,r);\n}\nvoid modify(int p,int lr,int rr,ll x,int l,int r){\n\tif(lr<=l&&r<=rr){\n\t\tpushtag(p,x);\n\t\treturn;\n\t}\n\tif(lr>r||l>rr)return;\n\tpushdown(p);\n\tmodify(ls,lr,rr,x,l,mid);\n\tmodify(rs,lr,rr,x,mid+1,r);\n\tupdate(p);\n}\nvoid insert(int p,int x,int l,int r){\n\tif(l==r){\n\t\tfmx[p]=f[x];\n\t\treturn;\n\t}\n\tpushdown(p);\n\tif(x<=mid)insert(ls,x,l,mid);\n\telse insert(rs,x,mid+1,r);\n\tupdate(p);\n}\nvoid process(){\n\tn=read();\n\tfor(int i=1;i<=n;++i)\n\t\th[i]=read();\n\tfor(int i=1;i<=n;++i)\n\t\tb[i]=read();\n\tbuild(1,0,n);\n   //\u521d\u59cbf_0=0\n\tinsert(1,0,0,n);\n\tfor(int i=1;i<=n;++i){\n    //\u7528\u5355\u8c03\u6808\u6c42\u524d\u9762\u7b2c\u4e00\u4e2a\u6bd4\u5b83\u5c0f\u7684\u4f4d\u7f6e\n\t\twhile(st&&h[i]<h[s[st]])--st;\n\t\tif(!st)modify(1,0,i-1,b[i],0,n);\n\t\telse modify(1,s[st],i-1,b[i],0,n);\n\t\ts[++st]=i;\n\t\tf[i]=tmx[1];\n\t\tinsert(1,i,0,n);\n\t}\n\tprintf(\"%lld\\n\",f[n]);\n}\nint main(){\n\tint T=1;\n\twhile(T--)process();\n\treturn 0;\n}\n```\n\n- \u5355\u8c03\u6808 + multiset\n\n\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528multiset\u6765\u6c42\u6700\u503c\u3002\u90a3\u4e48\u5982\u4f55\u8fdb\u884c\u533a\u95f4\u8986\u76d6\u5462\uff1f\n\n\u6211\u4eec\u4ee4 $sg_i$ \u8868\u793a\u5f53\u524d\u88ab $h_i$ \u63a7\u5236\u7684\u533a\u95f4\u5185 $f_i$ \u7684\u6700\u5927\u503c\u3002\u5f53\u6211\u4eec\u5728\u79fb\u5355\u8c03\u6808\u7684\u65f6\u5019\uff0c\u6808\u9876\u7684 $sg_{top}$ \u5c31\u4f1a\u6539\u4e3a\u88ab $h_{i+1}$ \u63a7\u5236\uff0c\u5c06 $sg_{i+1}$ \u4e0e\u5176\u53d6\u6700\u5927\u503c\u5373\u53ef\u3002\u518d\u5229\u7528multiset\u8fdb\u884c\u5220\u9664\u548c\u63d2\u5165\u5373\u53ef\u5b8c\u6210\u7ebf\u6bb5\u6811\u7684\u64cd\u4f5c\u3002\n\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<set>\nusing namespace std;\nconst int maxn=601100;\nint n,m;\nint h[maxn],b[maxn];\nlong long f[maxn],sg[maxn];\nmultiset <long long> se;\nint s[maxn],st;\ninline int read(){\n\tint res=0;\n\tchar ch=getchar(),ch1=ch;\n\twhile(!isdigit(ch))ch1=ch,ch=getchar();\n\twhile(isdigit(ch))res=(res<<3)+(res<<1)+ch-'0',ch=getchar();\n\treturn ch1=='-'?-res:res;\n}\nvoid process(){\n\tn=read();\n\tfor(int i=1;i<=n;++i)\n\t\th[i]=read();\n\tfor(int i=1;i<=n;++i)\n\t\tb[i]=read();\n\ts[st=1]=1;\n\tse.insert(sg[st]+b[s[st]]);\n\tfor(int i=1,p;i<n;++i){\n\t\tf[i]=*(--se.end());\n\t\tlong long psg=f[i];\n\t\twhile(st&&h[i+1]<h[s[st]]){\n\t\t\tse.erase(se.lower_bound(sg[st]+b[s[st]]));\n\t\t\tif(sg[st]>psg)psg=sg[st];\n\t\t\t--st;\n\t\t}\n\t\ts[++st]=i+1;\n\t\tsg[st]=psg;\n\t\tse.insert(psg+b[s[st]]);\n\t}\n\tprintf(\"%lld\\n\",*(--se.end()));\n}\nint main(){\n\tint T=1;\n\twhile(T--)process();\n\treturn 0;\n}\n```\n",
        "postTime": 1616394871,
        "uid": 137422,
        "name": "JasonL",
        "ccfLevel": 9,
        "title": "[\u9898\u89e3] CF1483C Skyline Photo"
    },
    {
        "content": "## \u9898\u610f\uff1a\n\n\u9762\u524d\u6709\u4e00\u6392\u5efa\u7b51\uff0c\u4ece\u5de6\u5230\u53f3\u6bcf\u4e2a\u5efa\u7b51\u6709\u4e00\u4e2a\u9ad8\u5ea6\u503c $h_i \\in [1,n]$ \u548c\u4e00\u4e2a\u7f8e\u4e3d\u503c $b_i \\in [-10^9,10^9]$\u3002\u4e00\u5f20\u7167\u7247\u9700\u8981\u62cd\u4e0b\u8fde\u7eed\u7684\u5efa\u7b51\uff0c\u5e76\u4e14\u5c06\u7167\u7247\u7684\u7f8e\u4e3d\u503c\u5b9a\u4e49\u4e3a\u6700\u77ee\u7684\u5efa\u7b51\u7684\u7f8e\u4e3d\u503c\u3002\u6c42\u51fa\u6b63\u597d\u62cd\u4e0b\u6240\u6709\u7684\u5efa\u7b51\u7684\u7167\u7247\u7f8e\u4e3d\u503c\u4e4b\u548c\u6700\u5927\u503c\u3002\n\n## \u89e3\u6cd5\uff1a\n\n\u9996\u5148\u53ef\u4ee5\u60f3\u5230 $O(n^2)\\ dp$ \u65b9\u7a0b\uff1a$ans_i=\\mathop{\\min}\\limits_{j<i} ans_j+\\operatorname{beauty}(j+1,i)$\u3002\u8003\u8651\u4f18\u5316\u8fd9\u4e2a $dp$ \u5f0f\u5b50\u7684\u6c42\u6cd5\u3002\n\n\u6211\u4eec\u53d1\u73b0\u5b9e\u9645\u4e0a $\\operatorname{beauty}$ \u51fd\u6570\u7684\u503c\u4ece\u53f3\u5230\u5de6\uff0c\u66f4\u65b0\u7684\u5730\u65b9\u53ea\u6709\u78b0\u5230\u4e86\u4e00\u4e2a\u6bd4\u4e4b\u524d\u7684\u9ad8\u5ea6\u8fd8\u8981\u5c0f\u7684\u5efa\u7b51\u3002\u800c\u4e14\u6bcf\u4e00\u6b21\u66f4\u65b0\u53ef\u4ee5\u5230\u8fbe\u7684\u8303\u56f4\u4f1a\u662f\u8fd9\u4e2a\u5efa\u7b51\u5de6\u8fb9\u7b2c\u4e00\u4e2a\u6bd4\u5b83\u77ee\u7684\u5efa\u7b51\u3002\u6211\u4eec\u5c06 $\\operatorname{beauty}$ \u7684\u503c\u5bf9\u5e94\u7684\u5efa\u7b51\u9ad8\u5ea6\u62ff\u51fa\u6765\uff0c\u53ef\u4ee5\u53d1\u73b0\u662f\u4e00\u4e2a\u4e0d\u964d\u6570\u7ec4\uff0c\u800c\u4e14\u6bcf\u6b21\u4fee\u6539\u90fd\u662f\u4e00\u4e2a\u540e\u7f00\uff1a\n\n```\n    _______\n    |   # |\n    | # # |\n    | # # #\n  # v # # #\n  # # # # #\n# # # # # #\n1 2 2 5 6 - before\n1 2 2 4 4 4 after\n```\n\n\u6211\u4eec\u53ef\u4ee5\u5f88\u8f7b\u677e\u5f97\u5230\u4e0a\u9762\u7684\u7ed3\u8bba\u3002\n\n\u8003\u8651\u4ece\u5de6\u5230\u53f3\u8ba1\u7b97\u7b54\u6848\u3002\u5728\u8ba1\u7b97\u7b2c $i$ \u4f4d\u7684\u7b54\u6848 $ans_i$ \u7684\u65f6\u5019\uff0c\u6211\u4eec\u5047\u8bbe\u6211\u4eec\u7ef4\u62a4\u597d\u4e86\u6570\u7ec4 $B_j$ \u8868\u793a\u4ece $j+1$ \u5230 $i-1$ \u62cd\u4e00\u5f20\u7167\u7247\u7684\u7f8e\u4e3d\u503c\u3002\u6211\u4eec\u9700\u8981\u83b7\u5f97\u7b54\u6848\uff0c\u9996\u5148\u9700\u8981\u5c06 $B_i$ \u8fdb\u884c\u7ef4\u62a4\u3002\u6b64\u65f6\u83b7\u5f97\u8fd9\u4e2a\u5efa\u7b51\u5de6\u8fb9\u7b2c\u4e00\u4e2a\u6bd4\u5b83\u77ee\u7684\u5efa\u7b51\u5730\u5740 $q$\uff0c\u5c06 $B_{q...i}$ \u4fee\u6539\u4e3a $b_i$ \u5373\u53ef\u3002\u968f\u540e\u6839\u636e\u4e00\u5f00\u59cb\u7684 $dp$ \u65b9\u7a0b\uff0c\u6211\u4eec\u53ef\u4ee5\u5217\u51fa\u5f0f\u5b50\uff1a$ans_i=\\mathop{\\min}\\limits_{j<i} ans_j+B_j$\uff0c\u5728\u7ebf\u6bb5\u6811\u4e0a\u7ef4\u62a4 $ans_i+B_i$ \u7684\u6700\u5927\u503c\uff0c\u5c31\u53ef\u4ee5\u5728 $O(n\\log n)$ \u7684\u590d\u6742\u5ea6\u4e0b\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u6700\u540e\u4e00\u6b65\u8003\u8651\u5982\u4f55\u7ef4\u62a4\u3002\u7531\u4e8e\u6211\u4eec\u5728\u6c42\u5b8c $ans_i$ \u4e4b\u540e\u5c31\u4e0d\u4f1a\u6539\u53d8\u8fd9\u4e2a\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5bf9 $ans_i$ \u7684\u6700\u5927\u503c\u8fdb\u884c\u7ef4\u62a4\u3002\u5728\u4fee\u6539\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5728\u6bcf\u4e00\u4e2a\u8282\u70b9\u4e0b\u8bb0\u5f55 $ans_i+B_i$ \u548c $ans_i$ \u7684\u6700\u5927\u503c\uff0c\u7136\u540e\u5c06\u524d\u8005\u53d8\u6210\u540e\u8005\u52a0\u4e0a\u9700\u8981\u88ab\u8986\u76d6\u7684\u503c\uff08\u4e5f\u5c31\u662f\u4e0a\u9762\u7684 $b_i$\uff09\u3002\n\n\u83b7\u5f97\u4e00\u4e2a\u5efa\u7b51\u4e4b\u524d\u7b2c\u4e00\u4e2a\u6bd4\u8fd9\u4e2a\u5efa\u7b51\u77ee\u7684\u5efa\u7b51\uff0c\u4f7f\u7528\u5355\u8c03\u6808\u6216\u8005\u6811\u72b6\u6570\u7ec4\u5747\u53ef\u4ee5\u89e3\u51b3\u3002\n\n\u6211\u7684\u4ee3\u7801\u662f\u8d5b\u573a\u4e0a\u5199\u7684\uff0c\u5176\u4e2d\u6c42\u89e3\u90e8\u5206\u7a0d\u663e\u590d\u6742\uff0c\u8bf7\u5927\u5bb6\u89c1\u8c05\u3002\n\n```\n// Problem      : C. Skyline Photo\n// From         : Codeforces - Codeforces Round #709 (Div. 1, based on Technocup 2021 Final Round)\n// URL          : https://codeforces.com/contest/1483/problem/C\n// Memory Limit : 256 MB\n// Time Limit   : 2500 ms\n// \n// Powered by CP Editor (https://cpeditor.org)\n\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <cmath>\n\nusing namespace std;\nint N,A[300010],B[300010];\nlong long tr[1200010][2];\nlong long tg[1200010];\nconst long long INF = -2e17;\nvoid bul(int o,int l,int r){\n\ttr[o][0]=tr[o][1]=tg[o]=INF;\n\tif(l==r)\treturn;\n\tint m=(l+r)>>1;\n\tbul(o<<1,l,m);\n\tbul((o<<1)+1,m+1,r);\n}\ninline void pd(int o){\n\tif(tg[o]!=INF){\n\t\ttr[o<<1][1]=tr[o<<1][0]+tg[o];\n\t\ttr[(o<<1)+1][1]=tr[(o<<1)+1][0]+tg[o];\n\t\ttg[o<<1]=tg[(o<<1)+1]=tg[o];\n\t\ttg[o]=INF;\n\t}\n}\ninline void pu(int o){\n\ttr[o][0]=max(tr[o<<1][0],tr[(o<<1)+1][0]);\n\ttr[o][1]=max(tr[o<<1][1],tr[(o<<1)+1][1]);\n}\nvoid mdf(int o,int l,int r,int ll,int rr,long long k){\n\tif(ll>rr)\treturn;\n\tif(ll<=l && r<=rr){\n\t\ttr[o][1]=tr[o][0]+k;\n\t\ttg[o]=k;return;\n\t}\n\tpd(o);\n\tint m=(l+r)>>1;\n\tif(ll<=m)\tmdf(o<<1,l,m,ll,rr,k);\n\tif(rr>m)\tmdf((o<<1)+1,m+1,r,ll,rr,k);\n\tpu(o);\n}\nvoid mdf2(int o,int l,int r,int p,long long k1,long long k2){\n\tif(l==r){\n\t\ttr[o][0]=k1;\n\t\ttr[o][1]=k2;\n\t\treturn;\n\t}\n\tpd(o);\n\tint m=(l+r)>>1;\n\tif(p<=m)\tmdf2(o<<1,l,m,p,k1,k2);\n\telse mdf2((o<<1)+1,m+1,r,p,k1,k2);\n\tpu(o);\n}\nlong long que(int o,int l,int r,int ll,int rr,int idx){\n\tif(ll>rr)\treturn INF;\n\tif(ll<=l && r<=rr)\treturn tr[o][idx];\n\tint m=(l+r)>>1;long long ret=INF;\n\tif(ll<=m)\tret=max(ret,que(o<<1,l,m,ll,rr,idx));\n\tif(rr>m)\tret=max(ret,que((o<<1)+1,m+1,r,ll,rr,idx));\n\treturn ret;\n}\nlong long D[300010];\nint trr[300010];\ninline int lb(int x){return x & (-x);}\nvoid ad(int a,int x){\n\twhile(a<=N){\n\t\ttrr[a]=max(trr[a],x);\n\t\ta+=lb(a);\n\t}\n}\nint qu(int a){\n\tint ret=0;\n\twhile(a){\n\t\tret=max(ret,trr[a]);\n\t\ta-=lb(a);\n\t}\n\treturn ret;\n}\nint main(){\n\tscanf(\"%d\",&N);bul(1,1,N);\n\tfor(int i=1;i<=N;i++)\n\t\tscanf(\"%d\",&A[i]);\n\tfor(int i=1;i<=N;i++)\n\t\tscanf(\"%d\",&B[i]);\n\tint p=0;\n\tfor(int i=1;i<=N;i++){\n\t\tif(p==0)\tp=i;\n\t\telse if(A[p]>A[i])\tp=i;\n\t\tD[i]=p;\n\t}\n\tlong long curr;\n\tfor(int i=1;i<=N;i++){\n\t\tint q=qu(A[i]-1);\n\t\tcurr=B[D[i]];\n\t\tif(q==0){\n\t\t\tcurr=max(curr,que(1,1,N,1,i-1,0)+B[i]);\n\t\t\tmdf(1,1,N,1,i-1,B[i]);\n\t\t}\n\t\telse{\n\t\t\tcurr=max(curr,que(1,1,N,1,q-1,1));\n\t\t\tcurr=max(curr,que(1,1,N,q,i-1,0)+B[i]);\n\t\t\tmdf(1,1,N,q,i-1,B[i]);\n\t\t}\n\t\tmdf2(1,1,N,i,curr,curr+B[i+1]);\n\t\tad(A[i],i);\n\t}\n\tprintf(\"%lld\",curr);\n\treturn 0;\n}\n```",
        "postTime": 1616382732,
        "uid": 60864,
        "name": "tiger2005",
        "ccfLevel": 7,
        "title": "CF1483C Skyline Photo \u9898\u89e3"
    },
    {
        "content": "### \u7ebf\u6bb5\u6811 $O(n \\log n)$ \u89e3\u6cd5\n\n\u5982\u679c\u6211\u4eec\u8bbe $f_i$ \u8868\u793a\u5c06\u524d $i$ \u4e2a\u697c\u623f\u5206\u6210\u82e5\u5e72\u6bb5\u7684\u6700\u5927\u4ef7\u503c\uff1a\n\n\u9996\u5148\u6709\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u66b4\u529b $O(n^2)$ \u8f6c\u79fb\uff1a\n\n$f_i=\\max\\bigg(f_{j(j<i)}+min\\big(b_{k(k\\in[j+1,i])} \\big) \\bigg )$\n\n\u8fd9\u4e2a\u8f6c\u79fb\u5b9e\u8d28\u4e0a\u662f\u5728\u679a\u4e3e\u6700\u540e\u4e00\u6bb5\u7684\u5de6\u7aef\u70b9\u3002\n\n\u4f46\u662f\u7ecf\u8fc7\u51e0\u6b21\u6a21\u62df\u6574\u4e2a\u8f6c\u79fb\u7684\u8fc7\u7a0b\uff0c\n\n\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u8f6c\u79fb\u7684\u5173\u952e\u5176\u5b9e\u662f $min(b_{k(k\\in[j,i-1])})$ \u3002\u6240\u4ee5\u8003\u8651\u7528\u4e00\u4e2a\u5355\u8c03\u6808 ($sta_i$) \u7ef4\u62a4\n\n\u5c06 $i$ \u7684\u5de6\u8fb9\u7b2c\u4e00\u4e2a\u6bd4\u5b83\u5c0f\u7684\u6570\uff0c\u8bb0\u4e3a $l_i$\uff0c\u5b83\u53f3\u8fb9\u7b2c\u4e00\u4e2a\u6bd4\u5b83\u5c0f\u7684 $b_j$ \u4e0b\u6807\u8bb0\u4e3a $r_i$\n\n\u5bf9\u4e8e\u4e00\u4e2a\u4f4d\u7f6e $j$\uff0c\u663e\u7136\uff1a\u5728\u8f6c\u79fb\u7684\u8fc7\u7a0b\u4e2d\uff1a $[l_j,j-1]$ \u4e2d\u7684 $min$ \u90fd\u662f $b_j$\uff0c\u800c\u5728 $[j,r_i-1]$ \u4e2d\u7684\u8f6c\u79fb\u7684 $min$ \u4e5f\u662f $b_j$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u7528\u4e00\u4e2a\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u533a\u95f4 $f_{j(j<i)}+min\\big(b_{k(k\\in[j+1,i])} \\big)$ \u7684\u6700\u5927\u503c\u3002\n\n\u5982\u679c\u5f53\u524d\u5355\u8c03\u6808\u7684\u5927\u5c0f\u4e3a $top$ , \u90a3\u4e48 $l_i$ \u5c31\u662f\u5c06\u6240\u6709\u4e0d\u6ee1\u8db3\u7684\u5143\u7d20\u5f39\u51fa\u540e\u7684 $sta_{top}$ \uff0c\u800c $r_i$ \u5c31\u662f\u5b83\u88ab\u5f39\u51fa\u6808\u65f6\u7684\u4e0b\u6807\u3002\n\n\u5728\u7ebf\u6bb5\u6811\u7ef4\u62a4\u65f6\uff0c\u540c\u65f6\u7ef4\u62a4\u5355\u8c03\u6808\uff08\u6ce8\u610f\u5355\u8c03\u6808\u4e2d\u7ef4\u62a4\u7684\u662f\u4e0b\u6807\uff09\uff1a\n\n\u4e0b\u9762\u7528 $t$ \u8868\u793a\u5f53\u524d\u6808\u9876\u7684\u4e0b\u6807\uff1a\n\n\u5165\u6808\u65f6\uff1a\u6211\u4eec\u5c06 $[l_i,i-1]$ \u533a\u95f4\u52a0\u4e0a $b_i$\u3002\u51fa\u6808\u65f6\uff1a\u5c06\u533a\u95f4 $[l_{t},r_{t}-1]$ \u51cf\u53bb $b_t$\u3002\n\n\u90a3\u4e48 $f_i=Query(0,i)$\n\n\u6ce8\u610f\u5f53\u8f6c\u79fb\u7684 $j$ \u4e3a $0$ \u65f6\u5c31\u662f\u5c06\u6574\u4e2a\u5212\u5206\u4e3a $1$ \u6bb5\uff0c\u6240\u4ee5\u67e5\u627e\u6700\u5927\u503c\u7684\u8d77\u70b9\u4e3a $0$ \u800c\u4e0d\u662f $1$\u3002\n\n\u6700\u540e\u5728\u66f4\u65b0\u5b8c $f_i$ \u540e\u5355\u70b9\u8d4b\u503c\u66f4\u65b0\u7ebf\u6bb5\u6811\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u53c2\u8003 [Priori_Incantatem\u5927\u4f6c\u7684\u9898\u89e3](https://blog.csdn.net/Brian_Pan_/article/details/115065320?spm=1001.2014.3001.5501)\n\nCode\uff08\u9644\u8d60\u8c6a\u534e\u8c03\u8bd5\u7248\uff09:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define lc x<<1\n#define rc x<<1|1\nconst int N=3e5+3,INF=1e15;\ntemplate <typename T>\ninline void read(T &x){\n    x=0;char ch=getchar();bool f=false;\n    while(!isdigit(ch)) f|=ch=='-',ch=getchar();\n    while(isdigit(ch))  x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n    x=f?-x:x;\n}\ntemplate <typename T>\ninline void print(T x){\n    if(x<0) putchar('-'),x=-x;\n    if(x>9) print(x/10);\n    putchar(x%10^48);\n}\nint a[N],b[N],n;\nstruct node{\n    int l,r,maxn,lazy;\n    #define lazy(x) c[x].lazy\n    #define l(x)    c[x].l\n    #define r(x)    c[x].r\n    #define maxn(x) c[x].maxn\n}c[N<<2];\nint lim[N],dp[N];\ninline void Push_up(int x){maxn(x)=max(maxn(lc),maxn(rc));return;}\ninline void Change(int x,int d){maxn(x)+=d,lazy(x)+=d;return;}\ninline void Push_down(int x){if(lazy(x)){Change(lc,lazy(x)),Change(rc,lazy(x));lazy(x)=0;}return;}\ninline void Build(int x,int l,int r){\n    l(x)=l,r(x)=r;\n    if(l==r){maxn(x)=0;return;}\n    int mid=(l+r)>>1;\n    Build(lc,l,mid);\n    Build(rc,mid+1,r);\n}\ninline void Modify(int x,int L,int d){\n    if(l(x)==r(x)){maxn(x)=d;return;}\n    Push_down(x);\n    int mid=(l(x)+r(x))>>1;\n    if(mid>=L)  Modify(lc,L,d);\n    else Modify(rc,L,d);\n    Push_up(x);return;\n}\ninline int Query(int x,int L,int R){\n    if(l(x)>=L&&r(x)<=R){return maxn(x);}\n    Push_down(x);\n    int mid=(l(x)+r(x))>>1,res=-INF;\n    if(mid>=L) res=max(res,Query(lc,L,R));\n    if(mid<R)  res=max(res,Query(rc,L,R));\n    return res;\n}\ninline void Add(int x,int L,int R,int d){\n    if(l(x)>=L&&r(x)<=R){Change(x,d);return;}\n    Push_down(x);\n    int mid=(l(x)+r(x))>>1;\n    if(mid>=L)  Add(lc,L,R,d);\n    if(mid<R)   Add(rc,L,R,d);\n    Push_up(x);\n    return;\n}\nint sta[N];\nsigned main(){\n    read(n);\n    for(register int i=1;i<=n;++i)    read(a[i]);\n    for(register int i=1;i<=n;++i)    read(b[i]);\n    Build(1,0,n);\n    // for(register int i=1;i<=n;++i){\n    //     cout<<lim[i]<<\" \";\n    // }\n    int top=1;\n    // puts(\"???\");\n    for(register int i=1;i<=n;++i){\n        while(top&&a[sta[top]]>=a[i]){\n            // cout<<sta[top-1]<<\" \"<<sta[top]-1<<\"\\n\";\n            Add(1,sta[top-1],sta[top]-1,-b[sta[top]]);\n            top--;\n        }\n        Add(1,sta[top],i-1,b[i]);\n        dp[i]=Query(1,0,i-1);\n        Modify(1,i,dp[i]);\n        sta[++top]=i;\n    }\n    // for(register int i=1;i<=n;++i) printf(\"%3d \",a[i]);\n    // puts(\"\");\n    // for(register int i=1;i<=n;++i)  printf(\"%3d \",b[i]);\n    // puts(\"\");\n    // for(register int i=1;i<=n;++)  printf(\"%3d \",dp[i]);\n    // puts(\"\");\n    print(dp[n]);\n    return 0;\n}\n\n```",
        "postTime": 1617183250,
        "uid": 67621,
        "name": "NuoCarter",
        "ccfLevel": 7,
        "title": "CF1483C Skyline Photo \u9898\u89e3"
    },
    {
        "content": "# CF1483C \u9898\u89e3\n\n\u4e00.\u9898\u610f\u7b80\u8ff0\n\n\u7ed9\u4e00\u4e2a\u5e8f\u5217 $a$\uff0c\u8981\u6c42\u5c06\u5e8f\u5217\u5206\u6210\u82e5\u5e72\u6bb5\uff0c\u5e76\u6700\u5927\u5316\u6bcf\u4e00\u6bb5\u6700\u5c0f\u503c\u7684\u548c\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u4e00\u4e2a\u66b4\u529b\u7684DP\u65b9\u7a0b\uff1a\n\n\u8bbe $f_i$ \u8868\u793a\u5c06\u524d $i$ \u4e2a\u6570\u5206\u6210\u82e5\u5e72\u6bb5\uff0c\u6700\u540e\u4e00\u6bb5\u7684\u7ed3\u5c3e\u5143\u7d20\u662f $a_i$ \u7684\u7b54\u6848\u3002\n\n\u90a3\u4e48\u6211\u4eec\u6709\u4e00\u4e2a\u8f6c\u79fb\u65b9\u7a0b\uff0c\u662f\uff1a\n\n$f_i = max_{j \\in [1,i - 1]}(f_j+min_{k \\in [j + 1, i]}(a_k))$ .\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u6837\u7b97\u662f $O(n^3)$ \u7684\uff0c\n\n\u52a0\u4e0a\u4e00\u4e2a\u9759\u6001\u67e5\u8be2\u533a\u95f4\u6700\u5927\u503c\u7684\u6570\u636e\u7ed3\u6784\u4e5f\u662f $O(n^2)$ \u7684\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u8003\u8651\u4f18\u5316\u8fd9\u4e2a\u8f6c\u79fb\u3002\n\n\u6211\u4eec\u8003\u8651\uff0c\u4e0a\u9762\u8f6c\u79fb\u5f0f\u4e2d\u7684 $min_{k \\in [j + 1, i]}(a_k)$ \u5728\u4ec0\u4e48\u5730\u65b9\u53d6\u5230\u3002\n\n\u6211\u4eec\u5bf9\u6bcf\u4e00\u4e2a $i$\uff0c\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u9012\u589e\u7684\u5e8f\u5217 $b$\uff0c\n\n\u8fd9\u4e2a\u5e8f\u5217\u662f\u5e8f\u5217 $a$ \u4e2d\u524d $i$ \u4e2a\u6570\u7684\u5b50\u5e8f\u5217\uff0c\n\n\u4e14\u5728\u5e8f\u5217 $b$ \u4e2d\u4efb\u610f\u4e00\u4e2a\u4e0d\u4e3a\u7ed3\u5c3e\u7684\u4f4d\u7f6e $j$ \uff0c\u90fd\u6709\uff1a\n\n$b_{j}$ \u662f\u5728\u5e8f\u5217 $a$ \u4e2d\u7b2c\u4e00\u4e2a\u5c0f\u4e8e $b_{j+1}$ \u7684\u5143\u7d20\u3002\n\n\u5f53\u7136\uff0c\u5e8f\u5217 $b$ \u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5fc5\u987b\u662f $a_i$.\n\n\u5b9e\u9645\u4e0a\uff0c\u8fd9\u4e2a\u5e8f\u5217 $b$ \u5c31\u662f\u4ee5\u5e8f\u5217 $a$ \u7684\u524d $i$ \u4e2a\u5143\u7d20\u5efa\u7acb\u7684\u5355\u8c03\u6808\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c$min_{k \\in [j + 1, i]}(a_k)$ \u7684\u503c\u5c31\u53ea\u80fd\u5728\u5e8f\u5217 $b$ \u4e2d\u51fa\u73b0\uff0c\u4e14\uff1a\n\n\u5bf9\u4e8e\u67d0\u4e2a $b$ \u4e2d\u7684\u4e24\u4e2a\u76f8\u90bb\u5143\u7d20 $b_x,b_{x+1}$\uff0c\n\n\u6211\u4eec\u627e\u5230\u5b83\u4eec\u5728\u5e8f\u5217 $a$ \u4e2d\u7684\u4e0b\u6807 $p_x,p_{x+1}$\uff0c\u90a3\u4e48\uff1a\n\n $\\forall j \\in [p_x + 1,p_{x+1}]$\uff0c$min_{k \\in [j + 1, i]}(a_k) = b_{x + 1}$.\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u5b9a\u4e49\uff1a $w_i(j) = min_{k \\in [j + 1, i]}(a_k)$\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u53d1\u73b0\uff1a\n\n\u5bf9\u4e8e\u6bcf\u4e2a $i$\uff0c\u6211\u4eec\u5c06\u539f\u5e8f\u5217 $a[1...i]$ \u5206\u6210\u4e86\u82e5\u5e72\u6bb5\u5c0f\u533a\u95f4\uff0c\n\n\u5176\u4e2d\u6bcf\u4e00\u6bb5\u5c0f\u533a\u95f4\u7684 $w_i$ \u503c\u90fd\u7b49\u4e8e\u8fd9\u6bb5\u5c0f\u533a\u95f4\u7684\u672b\u5c3e\u5143\u7d20\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\u4e0b\u6587\u53d9\u8ff0\uff0c\u6211\u4eec\u8bf4\u8fd9\u4e2a\u672b\u5c3e\u5143\u7d20\u4e0e\u8fd9\u6bb5\u5c0f\u533a\u95f4\u76f8\u4e92\u5bf9\u5e94\u3002\n\n\u5f53\u7136\uff0c\u5c06\u8fd9\u4e9b\u5c0f\u533a\u95f4\u5bf9\u5e94\u7684\u672b\u5c3e\u5143\u7d20\u62bd\u51fa\u6765\uff0c\u5c31\u53ef\u4ee5\u7ec4\u6210\u5e8f\u5217 $b$.\n\n\u8fd9\u53c8\u6709\u4ec0\u4e48\u7528\u5462\uff1f\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u6211\u4eec\u53ea\u9700\u8981\u52a8\u6001\u7684\u7ef4\u62a4\u8fd9\u4e2a\u5e8f\u5217 $b$ \u4e2d $f_j + w_i(j)$ \u7684\u6700\u5927\u503c\uff0c\u5373\uff1a\n\n\u6211\u4eec\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u5f53\u8003\u8651\u5230\u7b2c $i$ \u4e2a\u6570\u65f6\uff0c\u7ebf\u6bb5\u6811\u4e0a\u7b2c $j$ \u4e2a\u4f4d\u7f6e\u7684\u503c\u4e3a $f_j + w_i(j)$ \uff0c\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u5728\u524d $i - 1$ \u4e2a\u6570\u5bf9\u5e94\u7684\u7ebf\u6bb5\u6811\u4e0a\u8fdb\u884c\u4e00\u4e9b\u4fee\u6539\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u7ef4\u62a4\u5e8f\u5217 $b$\uff1a\n\n\u628a\u524d $i - 1$ \u4e2a\u6570\u5bf9\u5e94\u7684\u5e8f\u5217 $b$ \u7684\u6700\u540e\u82e5\u5e72\u4e2a\u5927\u4e8e $a_i$ \u7684\u6570\u5220\u6389\uff0c\n\n\u518d\u628a $a_i$ \u52a0\u8fdb $b$ \u7684\u672b\u5c3e\u3002\n\n\u6211\u4eec\u6ce8\u610f\u5230\uff0c\u5220\u6389\u7684\u6240\u6709\u6570\u5bf9\u5e94\u7684\u5c0f\u533a\u95f4\uff0c\n\n\u5728\u7ebf\u6bb5\u6811\u4e0a\u7684 $f$ \u503c\u4e0d\u4f1a\u6539\u53d8\uff0c\u4f46 $w_i$ \u503c\u4f1a\u4e00\u8d77\u6539\u53d8\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u8f7b\u677e\u7684\u7ef4\u62a4\u7ebf\u6bb5\u6811\u4e86\uff1a\n\n\u6bcf\u4ece $b$ \u4e2d\u5220\u6389\u4e00\u4e2a\u5143\u7d20 $x$\uff0c\u6211\u4eec\u5c31\u628a\u7ebf\u6bb5\u6811\u4e0a\u7684\u8fd9\u4e2a\u533a\u95f4\u6574\u4f53\u52a0\u4e0a $a_i - x$\uff0c\n\n\u6700\u540e\u5728 $b$ \u4e2d\u653e\u5165 $a_i$ \u65f6\uff0c\n\n\u6211\u4eec\u5728\u7ebf\u6bb5\u6811\u4e0a\u67e5\u8be2\u533a\u95f4 $[1,i - 1]$ \u7684\u6700\u5927\u503c\uff0c\u4f5c\u4e3a $f_i$ \u7684\u503c\u3002\n\n\u6700\u540e\uff0c\u6211\u4eec\u518d\u5c06 $f_i + a_i$ \u63d2\u5230\u7ebf\u6bb5\u6811\u4e0a\u7684\u7b2c $i$ \u4e2a\u4f4d\u7f6e\u5373\u53ef\u3002\n\n\u56e0\u4e3a\u5e8f\u5217 $b$ \u603b\u5171\u53ea\u4f1a\u653e\u5165 $n$ \u4e2a\u6570\uff0c\u6545\u4e5f\u6700\u591a\u5220\u9664 $n$ \u6b21\uff0c\u90a3\u4e48\u603b\u590d\u6742\u5ea6\u4e5f\u5c31\u662f $O(nlogn)$.",
        "postTime": 1635327812,
        "uid": 100091,
        "name": "GaryH",
        "ccfLevel": 6,
        "title": "CF1483C \u9898\u89e3"
    }
]