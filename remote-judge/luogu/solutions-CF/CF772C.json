[
    {
        "content": "\n\u8003\u8651\u56fa\u5b9a\u524d\u7f00\u79ef\uff0c\u5047\u8bbe\u524d\u7f00\u79ef$\\% m$\u4e92\u4e0d\u76f8\u540c\u4e14\u4e0d\u91cd\u590d\u51fa\u73b0\uff0c\u5219\u6709\u5bf9\u4e8e\u7b2c$i$\u4e2a\u524d\u7f00\u79ef\uff0c\u5047\u8bbe\u5176\u503c\u4e3a$a$\uff0c$i+1$\u4e3a$b$\u5219\u6709\u7b2c$i+1$\u4e2a\u6570\u4e3a\uff1a$\\dfrac{b}{a}$\n\n\u7136\u800c\u7531\u4e8e$m$\u4e0d\u662f\u4e00\u4e2a\u8d28\u6570\uff0c\u8fd9\u4e2a\u5f0f\u5b50\u5728$\\% m$\u610f\u4e49\u4e0b\u603b\u662f\u6ca1\u6709\u610f\u4e49\u7684\n\n\u8003\u8651\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\uff0c\u6211\u4eec\u6709\uff1a$a\\times k\\% m=b$\uff0c\u5373\uff1a$ak+mx=b(x<0)$\uff0c\u5176\u4e2d$k$\u4e3a\u7b2c $i+1$ \u4f4d\u586b\u5165\u7684\u6570\n\n\u5047\u8bbe$gcd(a,m)$\u4e0d\u6574\u9664$b$\u7531\u88f4\u8700\u5b9a\u7406\u663e\u7136\u65e0\u89e3\uff0c\u5426\u5219\u5b58\u5728\u4e00\u4e2a\u65b9\u6848\u586b\u5165\u4e00\u4e2a\u6570\u4f7f\u5f97$a\\to b$\n\n\u4e8e\u662f\u5bf9\u4e8e\u4e00\u4e2a\u6570$a$\uff0c\u5047\u8bbe\u5176\u4e0e$m$\u4e0d\u4e92\u8d28\uff0c\u5219\u5176\u53ef\u4ee5\u524d\u5f80\u4efb\u4f55\u4e00\u4e2a\u6570\uff0c\u5426\u5219\u5047\u8bbe\u5176\u4e0e$m$\u7684$gcd$\u4e3a$p$\u5219\u5176\u80fd\u524d\u5f80\u4e14\u4ec5\u80fd\u524d\u5f80$p$\u7684\u500d\u6570\n\n\u8003\u8651\u66b4\u529b\u8fde\u8fb9\uff0c\u5047\u8bbe $a$ \u80fd\u524d\u5f80 $b$ \u5219\u6211\u4eec\u8fde\u4e00\u6761$a\\to b$\u7684\u8fb9\uff0c\u8fd9\u6837\u8fde\u8fb9\u91cf\u4e3a$O(n^2)$\u4e8e\u662f\u95ee\u9898\u8f6c\u5316\u4e3a\uff1a\u7ed9\u5b9a\u4e00\u5f20\u56fe\uff0c\u6c42\u5176\u4e2d\u4e0d\u91cd\u590d\u7ecf\u8fc7\u70b9\u7684\u6700\u957f\u8def\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u662f\u8fb9\u6743\u957f\u5ea6\u4e3a$1$\n\n\u8003\u8651$gcd$\u7684\u6027\u8d28\uff0c\u5047\u8bbe$gcd(a,m)=k$\u5219\u6709$a|k$\n\n\u8003\u8651\u7f29\u70b9\uff0c\u5047\u8bbe$e$\u4e2a\u70b9$gcd(x,m)=w$\u5219\u5c06\u5176\u6240\u81f3\u4e00\u70b9\uff0c\u663e\u7136\u8fd9\u4e9b\u70b9\u51fa\u8fb9\u76f8\u540c\u4e14\u5f7c\u6b64\u53ef\u8fbe\u6240\u4ee5\u8fd9\u6837\u505a\u4e0d\u4f1a\u5f71\u54cd\u6b63\u786e\u6027\n\n\u5bb9\u6613\u53d1\u73b0\u7f29\u5b8c\u70b9\u540e\u6240\u6709\u7684\u8fde\u8fb9\u5fc5\u7136\u662f\u4ece$gcd$\u5c0f\u7684\u8fde\u5411\u5927\u7684\uff0c\u6240\u4ee5\u56fe\u662f\u4e00\u5f20$DAG$\uff0c\u95ee\u9898\u53d8\u6210\u7ed9\u5b9a\u4e00\u5f20DAG\u6c42\u56fe\u4e0a\u5e26\u6743\u6700\u957f\u8def\n\n\u663e\u7136\u53ef\u4ee5dp\u4e86\u4e0d\u662f\u5417qwq\uff0c\u8fd9\u6837\u786e\u5b9a\u4e86\u524d\u7f00\u79ef\u4e4b\u540e\uff0c\u8fd8\u539f\u5e8f\u5217\u901a\u8fc7\u62d3\u5c55\u6b27\u51e0\u91cc\u5f97\u5b9e\u73b0\uff0c\u6574\u4f53\u590d\u6742\u5ea6$O(m\\log m)$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std ;\n#define Next( i, x ) for( register int i = head[x]; i; i = e[i].next )\n#define rep( i, s, t ) for( register int i = s; i <= t; ++ i )\n#define re register\n#define int long long\nint gi() {\n\tchar cc = getchar() ; int cn = 0, flus = 1 ;\n\twhile( cc < '0' || cc > '9' ) {  if( cc == '-' ) flus = - flus ; cc = getchar() ; }\n\twhile( cc >= '0' && cc <= '9' )  cn = cn * 10 + cc - '0', cc = getchar() ;\n\treturn cn * flus ;\n}\nconst int N = 2e5 + 5 ;\nint n, m, cnt, top, vis[N], s[N], w[N] ;\nint head[N], deg[N], a[N], dp[N], go[N] ; \nvector<int> f[N] ;\nstruct E {\n\tint to, next ; \n} e[N * 16] ;\nint gcd( int a, int b ) {\n\treturn ( a == 0 ) ? b : gcd( b % a, a ) ;\n}\nint ax, ay ; \nint exgcd( int a, int b ) {\n\tif( a == 0 ) {\n\t\tax = 0, ay = 1 ; return b ; \n\t}\n\tint k = exgcd( b % a, a ) ;\n\tint tx = ay - ( b / a ) * ax, ty = ax ;\n\tax = tx, ay = ty ; return k ; \n}\nvoid add( int x, int y ) {\n\te[++ cnt] = (E){ y, head[x] }, head[x] = cnt ;\n}\nqueue<int> q ; \nvoid dfs( int x ) {\n\tif( dp[x] ) return ; dp[x] = w[x] ; \n\tNext( i, x ) {\n\t\tint v = e[i].to ; dfs(v) ;\n\t\tif( dp[x] < dp[v] + w[x] ) dp[x] = dp[v] + w[x], go[x] = v ; \n\t}\n}\nsigned main()\n{\t\n\tn = gi(), m = gi() ; int x ; \n\trep( i, 1, n ) x = gi(), vis[x] = 1 ; \n\tfor( re int i = 1; i < m; ++ i ) {\n\t\tif( vis[i] ) continue ;\n\t\tint k = gcd( i, m ) ; f[k].push_back(i), ++ w[k] ; \n\t\tif( s[k] ) continue ; s[k] = 1 ; \n\t\tfor( re int j = 2 * k; j < m; j += k ) add( k, j ), ++ deg[j] ;\n\t}\n\tfor( re int i = 1; i < m; ++ i ) if( s[i] && !deg[i] ) q.push(i) ;\n\tint Id = 0, ans = 0 ;\n\twhile( !q.empty() ) {\n\t\tint u = q.front() ; q.pop() ; dfs(u) ;\n\t\tif( ans < u ) ans = dp[u], Id = u ;\n\t}\n\tfor( re int i = Id; i; i = go[i] )\n\tfor( re int j = 0; j < f[i].size(); ++ j ) a[++ top] = f[i][j] ; \n\tif( !vis[0] ) a[++ top] = 0 ; printf(\"%d\\n\", top ) ;\n\tif( top == 0 ) exit(0) ; printf(\"%d \", a[1] ) ;\n\tfor( re int i = 2; i <= top; ++ i ) {\n\t\tif( a[i] == 0 ) printf(\"%d\\n\", a[i] ) ;\n\t\telse {\n\t\t\tint k = exgcd( a[i - 1], m ), dx = m / k, tp = a[i] / k ; \n\t\t\twhile( ax < 0 ) ax += dx ; ax %= dx ; \n\t\t\tax = ax * tp, printf(\"%d \", ax % m ) ;\n\t\t}\n\t}\n\treturn 0 ;\n}\n```",
        "postTime": 1577002567,
        "uid": 30036,
        "name": "Soulist",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF772C \u3010Vulnerable Kerbals\u3011"
    },
    {
        "content": "[CF772C Vulnerable Kerbals](https://www.luogu.com.cn/problem/CF772C)\n\n\u5982\u679c $i$\uff0c$j$ \u5728\u524d\u7f00\u79ef\u4e2d\u8fde\u7eed\u51fa\u73b0\uff0c\u5219\u6709 $ix\\mod m=j \\rightarrow  ix+my=j$\u3002\u6839\u636e\u88f4\u8700\u5b9a\u7406\uff0c\u8fd9\u4e2a\u65b9\u7a0b\u6709\u89e3\u5f53\u4e14\u4ec5\u5f53 $gcd(i, m) | j$\u3002\u5c06\u524d\u7f00\u79ef\u770b\u4f5c\u70b9\uff0c$i$\uff0c$j$ \u4e4b\u95f4\u6709\u4e00\u6761\u8fb9\u5f53\u4e14\u4ec5\u5f53 $gcd(i, m) | j$\u3002\u8fd9\u6837\u8fde\u51fa\u6765\u7684\u8fb9\u4e2a\u6570\u662f $O(n^2)$ \u7ea7\u522b\u7684\uff0c\u663e\u7136\u8fc7\u4e0d\u53bb\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u4e24\u4e2a\u503c $i$ , $j$ \u82e5\u6ee1\u8db3 $gcd (i, m) = gcd (j, m)$\uff0c\u5219\u4e24\u4e2a\u70b9\u5728\u4e00\u4e2a SCC \u4e2d\u3002\u6211\u4eec\u628a\u6ee1\u8db3\u6761\u4ef6\u7684 SCC \u7f29\u70b9\uff0c\u4e0e$m$ \u7684 $gcd$ \u76f8\u540c\u7684 $i$ \u7f29\u4e3a\u4e00\u4e2a\u70b9\uff0c\u53ef\u4ee5\u7528 vector \u5b58\u6709\u54ea\u4e9b\u6570\uff0c\u90a3\u4e48\u6574\u5e45\u56fe\u53d8\u6210\u4e86 DAG\uff0c\u4e00\u6761\u8fb9 $(i, j)$ \u7684\u8fde\u63a5\u65b9\u5411\u662f $gcd(i, m) | gcd(j, m)$\u3002\u9898\u76ee\u53d8\u6210\u6c42 DAG \u7684\u5e26\u6743\u6700\u957f\u94fe\uff08\u5176\u4e2d\u70b9\u6743\u662f SCC \u7684\u5927\u5c0f\uff09\uff0cdp \u7684\u540c\u65f6\u8bb0\u4e00\u4e0b\u8def\u5f84\u5373\u53ef\u3002\u4e4b\u540e\u6309\u7167\u8def\u5f84\u7528 exgcd \u8fd8\u539f\u6bcf\u4e2a\u70b9\u7684\u503c\uff0c\u590d\u6742\u5ea6 $O(m \\log m)$\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u65f6\uff0c\u5e76\u4e0d\u9700\u8981\u628a\u56fe\u5efa\u51fa\u6765\uff0c\u53ea\u9700\u8981\u6a21\u62df DAG \u4e0a dp \u7684\u8fc7\u7a0b\uff0c\u7528 $i$ \u5411 $i$ \u7684\u500d\u6570 $j$ \uff08$j|m$\uff09 \u8d21\u732e\u5373\u53ef\u3002\u5bf9\u4e8e $n$ \u4e2a\u4e0d\u80fd\u51fa\u73b0\u7684\u6570\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u5904\u7406\u5230\u5b83\u65f6\u76f4\u63a5 continue \u5373\u53ef\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int N=2e5+5;\nint n,m,w[N],vis[N],dp[N],pre[N],cnt;\nvector<int> g[N];\nll exgcd(ll &x,ll &y,ll a,ll b)\n{\n\tif(!b)\n\t{\n\t\tx=1,y=0;\n\t\treturn a;\n\t}\n\tll g=exgcd(x,y,b,a%b);\n\tll t=x;\n\tx=y;\n\ty=t-a/b*y;\n\treturn g;\n}\nll getans(ll a,ll b)\n{\n\tll x,y;\n\tll c=exgcd(x,y,a,m);\n\tll tmp=m/c;\n\tx=(x*b/c%tmp+tmp)%tmp;\n\treturn x;\n}\nint main()\n{\n\tll x,y;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%lld\",&x);\n\t\tvis[x]=1;\n\t}\n\tfor(int i=0;i<m;i++)\n\t\tif(!vis[i])g[exgcd(x,y,(ll)i,(ll)m)].push_back(i);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tif(m%i)continue;\n\t\tdp[i]+=g[i].size();\n\t\tfor(int j=i+i;j<=m;j+=i)\n\t\t{\n\t\t\tif(m%j)continue;\n\t\t\tif(dp[j]<=dp[i])\n\t\t\t{\n\t\t\t\tdp[j]=dp[i];\n\t\t\t\tpre[j]=i;\n\t\t\t}\n\t\t}\n\t}\n\tint now=m;\n\twhile(1)\n\t{\n\t\tfor(int i=0;i<(int)g[now].size();i++)\n\t\t\tw[cnt++]=g[now][i];\n\t\tif(now==1)break;\n\t\tnow=pre[now];\n\t}\n\tprintf(\"%d\\n\",cnt);\n\tprintf(\"%d \",w[cnt-1]);\n\tfor(int i=cnt-1;i;i--)\n\t\tprintf(\"%lld \",getans(w[i],w[i-1]));\n\treturn 0;\n}\n```",
        "postTime": 1605968989,
        "uid": 224403,
        "name": "\u6728xx\u6728\u5927",
        "ccfLevel": 9,
        "title": "CF772C Vulnerable Kerbals\uff08\u6570\u8bba+\u56fe\u8bba\uff09"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u5c06\u6570\u5b66\u548cDP\u7ed3\u5408\u7684\u5f88\u597d\u7684\u9898\u76ee\u3002\n\n\u5982\u679c\u76ee\u524d\u7684\u4e58\u79ef\u4e3a$a$\uff0c\u4e14\u6211\u4eec\u80fd\u591f\u9009\u62e9\u4e00\u4e2a\u6570$x$\uff0c\u6309\u7167\n$$ax \\equiv b(\\text{mod } m)$$\n\u5f97\u5230\u4e0b\u4e00\u4e2a\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5728$a$ \u548c$b$\u4e4b\u95f4\u8fde\u4e00\u6761\u6709\u5411\u8fb9\u3002\n\n\u5982\u679c\n$$\\exists x \\Rightarrow ax \\equiv b (\\text{mod } m)$$\n\n\u90a3\u4e48\n\n$$\\exists x,y \\Rightarrow ax-my=b$$\n\u5229\u7528[\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5](https://en.wikipedia.org/wiki/Extended_Euclidean_algorithm)\n\u6211\u4eec\u53ef\u89e3\u51fa$a$\u548c$b$.\n\n\u4f46\u662f\u76f4\u63a5\u8fd9\u6837\u505a\u662f\u4e0d\u80fd\u8fdb\u884cDP\u7684\uff0c\u56e0\u4e3aa)\u70b9\u6570\u592a\u591a\uff0cb)\u6709\u73af\uff0c\u56e0\u6b64\u9700\u8981\u8003\u8651\u5982\u4f55\u6d88\u53bb\u56fe\u4e2d\u7684\u73af\u3002\n\n\u4e3a\u4e86\u51cf\u5c11\u70b9\u7684\u6570\u91cf\uff0c\u9996\u5148\u6211\u4eec\u8bc1\u660e\u4e00\u4e2a\u5f15\u7406\u3002\n\n**\u5f15\u7406**:\u5bf9\u4e8e\u4e0d\u5b9a\u65b9\u7a0b\n$$ax+by=c$$\n\uff0c\u5982\u679c$d=\\gcd(a,b)\\mid c$\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4e0d\u5b9a\u65b9\u7a0b\u6709\u6574\u6570\u89e3\uff0c\u5426\u5219\uff0c\u8fd9\u4e2a\u4e0d\u5b9a\u65b9\u7a0b\u65e0\u6574\u6570\u89e3\n\n**\u8bc1\u660e**:\u5047\u8bbe$x,y\\in \\mathbf{Z}$\uff0c$\\because d\\mid a, d\\mid b, \\therefore d\\mid c$.\u56e0\u6b64\u82e5$d$\u4e0d\u6574\u9664$c$\uff0c\u90a3\u4e48\u65b9\u7a0b\u65e0\u89e3\u3002\n\n\u5426\u5219\uff0c\u7531\u8d1d\u7956\u5b9a\u7406\u77e5$\\exists s,t \\in \\mathbf{Z}$\uff0c\u4f7f\n$$as+bt=d$$\n$\\because d \\mid c,\\therefore \\exists q\\Rightarrow c=dq.$\n\n\u56e0\u6b64\n\n$$a(sq)+b(tq)=c$$\n\n\u5219$x=sq,y=tq$\u662f\u4e00\u7ec4\u89e3\u3002\u8bc1\u6bd5\u3002\n\n\u56e0\u6b64\uff0c\u5982\u679c\u8981\u8fd9\u4e2a\u4e0d\u5b9a\u65b9\u7a0b\u6709\u89e3\uff0c\u5219\u5fc5\u6709$d=\\gcd(a,m) \\mid b$\uff0c \u5219\n$$d\\mid a, d\\mid b, d\\mid m$$\n\u56e0\u6b64\uff0c\n$$d\\mid b, d\\mid m$$\n\u56e0\u6b64\uff0c\n$$\\gcd(b,m)=d$$\n\u8fd9\u5c31\u8bf4\u660e\uff0c\u5728\u672c\u9898\u5efa\u56fe\u7684\u610f\u4e49\u4e0b\uff0c\n$$\\gcd(i,m)\\Leftrightarrow\\gcd(j,m)$$\n\u5229\u7528\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5927\u5e45\u5ea6\u51cf\u5c11\u70b9\u7684\u6570\u91cf\uff0c\u800c\u4e0b\u9762\u5c31\u662fDAG\u4e0a\u7684\u6700\u957f\u8def\u7684\u6a21\u677f\u4e86\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u672c\u9898\u9700\u8981\u8f93\u51fa\u65b9\u6848\uff0c\u56e0\u6b64\u5728\u6211\u7684\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e86`std::vector`\u6765\u8bb0\u5f55\u65b9\u6848\uff0c\u6700\u540e\u5229\u7528\u540c\u4f59\u5f0f\u548c\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u89e3\u51fa\u771f\u6b63\u7b54\u6848\uff08\u5b9e\u9645\u4e0a\u5c31\u662f\u4e58\u6cd5\u9006\u5143\uff09\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff0c\u6ce8\u610f\u7b2c$46-49$\u884c\u6709\u51cf\u5c11\u70b9\u6570\u7684\u64cd\u4f5c\u8fc7\u7a0b\u3002\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define pb push_back\n#define mp make_pair\nusing LL = long long;\nusing ULL = unsigned long long;\n#define lsh(i) (1 << (i))\n#define lshll(i) (1LL << (i))\n#define rep(i, n) for (int (i) = 0; (i) < n; (i)++)\n#define until(x) while (!x)\n#define int long long\n#define fail(s) assert(!s)\nconst int INF = 0x3f3f3f3f;\nconst int EPS = 1e-6;\nint m, n;\nconst int N = 200020;\nint lim[N];\nvector <int> G[N];\n#define from first\n#define to second\nint vis[N], dp[N], path[N];\nint exgcd(int a,int b, int &x, int &y)\n{\n    if (!b)\n    {\n        x = 1;\n        y = 0;\n        return a;\n    }\n    int d = exgcd(b, a % b, x, y);\n    int z = x; x = y; y = z - y * (a / b);\n    return d;\n}\nsigned main()\n{\n\tios::sync_with_stdio(false);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n\tcin >> n >> m;\n\tif (n){\n\t\trep(i, n) {\n\t\t\tint x;\n\t\t\tcin >> x;\n\t\t\tlim[x] = true;\n\t\t}\n\t}\n\trep(u, m) {\n\t\tif (lim[u])continue;\n\t\tG[__gcd(u, m)].pb(u);\n\t}\n\tif (lim[0])G[m].pb(0);\n\tmemset(dp, 0, sizeof(dp));\n\trep(i, m + 1) {\n\t\tif (i == 0)continue;\n\t\tif (!G[i].empty()) {\n\t\t\tdp[i] = 0;\n\t\t\tpath[i] = 0;\n\t\t\trep (j, i) {\n\t\t\t\tif (j == 0)continue;\n\t\t\t\tif (i % j == 0 && dp[j] > 0) {\n\t\t\t\t\tif (dp[j] > dp[i]) {\n\t\t\t\t\t\tdp[i] = dp[j];\n\t\t\t\t\t\tpath[i] = j;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tdp[i] += G[i].size();\n\t\t}\n\t}\n\tvector <int> ans;\n\tint x = m;\n\twhile (!G[x].empty()) {\n\t\tfor (auto y:G[x])ans.pb(y);\n\t\tx = path[x];\n\t}\n\treverse(ans.begin(), ans.end());\n\tif (lim[0])ans.pop_back();\n\tcout << ans.size() << endl;\n\tint cur = 1;\n\tfor (auto i:ans) {\n\t\tint x, y;\n\t//\tcur = i;\n\t\tint d = exgcd(cur, m, x, y);\n\t\tcout << ((x * i / d) % m + m) % m << ' ';\n\t\tcur = i;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1565539158,
        "uid": 87696,
        "name": "Lily_White",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF772C \u3010Vulnerable Kerbals\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\u7ed9\u4e00\u4e2am,n\uff0c\u518d\u7ed9\u4f60\u4e00\u4e2am\u4e2a\u6570\u7684\u96c6\u5408\u8ba9\u4f60\u6784\u9020\u4e00\u4e2a\u5e8f\u5217\u6ee1\u8db3\u4ee5\u4e0b\u7684\u6761\u4ef6\uff1a\n\n1.\u8fd9\u4e2a\u5e8f\u5217\u7684\u6240\u6709\u6570\u90fd\u57280-m-1\u4e4b\u95f4\uff08\u542b\uff09\n\n2.\u8fd9\u4e2a\u6570\u5217\u7684\u6240\u6709\u524d\u7f00\u79ef\u90fd\u4e0d\u540c\n\n3.\u6240\u6709\u7684\u524d\u7f00\u79ef\u90fd\u4e0d\u80fd\u51fa\u73b0\u5728\u7ed9\u4f60\u7684\u96c6\u5408\u4e2d\n\n4.\u6700\u5927\u5316\u8fd9\u4e2a\u5e8f\u5217\u7684\u957f\u5ea6\n\n\u8f93\u51fa\u4efb\u610f\u6ee1\u8db3\u6761\u4ef6\u7684\u5e8f\u5217\u3002\n\n\u9996\u5148\uff0c\u5982\u679c\uff0c\u76ee\u524d\u7684\u4e58\u79ef\u4e3aa,\u4e58\u4e0a\u4e00\u4e2a\u6570x\u6a21m\u540e\u4e3a\u4e0b\u4e00\u4e2a\u6570b\n\u5373ax%m=b\n\n\u8981\u4f7f\u8fd9\u4e2a\u65b9\u7a0b\u6709\u89e3\uff0c\u9700\u8981\u6ee1\u8db3gcd(a,m)=gcd(b,m)\u89e3x=b/a%m\n\n\u56e0\u4e3a\u8d39\u9a6c\u5c0f\u5b9a\u7406\u8981\u6c42m\u4e3a\u8d28\u6570\uff0c\u6240\u4ee5\u5728\u672c\u9898\u4e2d\uff0c\u9006\u5143\u5f97\u8fd9\u4e48\u6c42\uff1a\n\na^-1=a^(\u03c6(m-1))\n\n\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u4efb\u4f55a,b\u6ee1\u8db3gcd(a,m)|gcd(b,m)\u8fde\u4e00\u6761\u6709\u5411\u8fb9\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5c06\u6b64\u95ee\u9898\u8f6c\u5316\u6210\u4e00\u5f20\u56fe\u7684\u6700\u957f\u8def\u95ee\u9898\n\n\u4f46\u662f\u6700\u957f\u8def\u8981\u6c42\u65e0\u73af\uff0c\u4f46\u672c\u9898\u4e2d\u6709\u73af\uff0c\u800c\u4e14n<=2e5\u8fb9\u6570\u592a\u591a\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u6240\u6709\u6240\u6709gcd(x,m)\u76f8\u540c\u7684\u6570\uff0c\u8fde\u5f97\u8fb9\u90fd\u662f\u4e00\u6a21\u4e00\u6837\u7684\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u7f29\u70b9\uff0c\u7f29\u70b9\u65f6\u628a\u96c6\u5408\u4e2d\u7684\u6570\u5220\u6389\uff0c\u7f29\u5b8c\u70b9\u540e\uff0c\u56fe\u5c31\u53d8\u6210\u4e86\u4e00\u4e2aDAG(\u6709\u5411\u65e0\u73af\u56fe)\uff0c\u76f4\u63a5\u8fdb\u884cdp\u5373\u53ef,dp\u65f6\u8981\u5f00\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u8def\u5f84\u3002\n\n\uff08\u4e00\u9053\u6570\u8bba+\u56fe\u8bba\u9898\uff09\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=200005;\nint w[N],chk[N],d[N],path[N],res[N],k,n,cnt,phi;\nvector<int>g[N];\nint Pow(int a,int b)\n{\n\tint r=1;\n\twhile(b)\n\t{\n\t\tif(b&1)\n\t\t\tr=1ll*r*a%n;\n\t\ta=1ll*a*a%n;\n\t\tb>>=1;\n\t}\n\treturn r;\n}\nint Get(int a,int b)\n{\n\tint g=__gcd(a,b);\n\ta/=g;\n\tb/=g;\n\treturn 1ll*b*Pow(a,phi-1)%n;\n}\nint main()\n{\n\tscanf(\"%d%d\",&k,&n);\n\tphi=n;\n\tint tn=n;\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\tif(tn%i==0)\n\t\t{\n\t\t\tphi=phi/i*(i-1);\n\t\t\twhile(tn%i==0)\n\t\t\t\ttn/=i;\n\t\t}\n\t}\n\tfor(int i=1;i<=k;i++)\n\t{\n\t\tint a;\n\t\tscanf(\"%d\",&a);\n\t\tchk[a]=1;\n\t}\n\tfor(int i=0;i<n;i++)\n\t\tif(!chk[i])\n\t\t\tg[__gcd(i,n)].push_back(i);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(n%i)\n\t\t\tcontinue;\n\t\td[i]+=g[i].size();\n\t\tfor(int j=i+i;j<=n;j+=i)\n\t\t{\n\t\t\tif(n%j)\n\t\t\t\tcontinue;\n\t\t\tif(d[j]<=d[i])\n\t\t\t{\n\t\t\t\td[j]=d[i];\n\t\t\t\tpath[j]=i;\n\t\t\t}\n\t\t}\n\t}\n\tint a=n;\n\twhile(1)\n\t{\n\t\tfor(int i=0;i<g[a].size();i++)\n\t\t\tw[cnt++]=g[a][i];\n\t\tif(a==1)\n\t\t\tbreak;\n\t\ta=path[a]; \n\t}\n\tprintf(\"%d\\n\",cnt);\n\tprintf(\"%d \",w[cnt-1]);\n\tfor(int i=cnt-1;i>0;i--)\n\t\tprintf(\"%d \",Get(w[i],w[i-1]));\n\treturn 0;\n}\n\n```",
        "postTime": 1548559850,
        "uid": 67896,
        "name": "AllureLove",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF772C \u3010Vulnerable Kerbals\u3011"
    }
]