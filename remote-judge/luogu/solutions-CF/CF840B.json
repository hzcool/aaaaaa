[
    {
        "content": "\t    \u7ffb\u8bd1\u81ea\u82f1\u6587\u9898\u89e3\n\t    \u6211\u4eec\u901a\u8fc7\u7ed9\u5b9a\u7684\u56fe\u4e00\u5b9a\u8054\u901a\u7684\u6761\u4ef6\u6765\u89e3\u51b3\u8fd9\u4e2a\u6a21\u578b\u3002\n\t    \u6211\u4eec\u8bc1\u660e\u5982\u679c\u8fd9\u4e2a\u5b50\u56fe\u7b26\u5408\u8981\u6c42\uff0c\u5fc5\u987b\u6709-1\u7684\u70b9\u6216\u8005\u6240\u6709\u76840,1\u70b9\u7684\u5ea6\u6570\u7684\u548c\u4e3a\u5076\u6570\u3002\u6211\u4eec\u663e\u7136\u53d1\u73b0\u5982\u679c\u6ca1\u6709-1\u4e14\u6240\u6709\u70b9\u7684\u5ea6\u6570\u4e3a\u5947\u6570\u4e00\u5b9a\u6ca1\u6709\u89e3\u3002\u90a3\u4e48\u6211\u4eec\u7ed9\u51fa\u6240\u670901\u70b9\u548c\u4e3a\u5076\u6570\u7684\u6784\u9020\u89e3\u7684\u65b9\u6cd5\u3002 \n\t    \u5982\u679c\u6709-1\u7684\u70b9\u6211\u4eec\u53ef\u4ee5\u8c03\u6574\u6210\u5076\u6570\u3002\n\t    \u7136\u540e\u6211\u4eec\u6c42\u51fa\u968f\u4fbf\u4e00\u9897\u751f\u6210\u6811\uff0c\u4e14\u968f\u4fbf\u627e\u4e2a\u70b9\u4f5c\u4e3a\u6839\uff0c\u63a5\u7740\u6211\u4eec\u7684\u95ee\u9898\u5c31\u4f1a\u53d8\u5f97\u7b80\u5355\u5f88\u591a\u3002\n\t\u63a5\u7740\u6211\u4eec\u4e00\u4e2a\u63a5\u7740\u4e00\u4e2a\u5904\u7406\u5176\u4ed6\u7684\u70b9\uff08dfs\uff09\uff0c\u6211\u4eec\u7528cur\u8868\u793a\u5f53\u524d\u8282\u70b9\u3002\n    1. $d_cur = 0 $ \u8fd9\u65f6\u6211\u4eec\u5ffd\u7565\u8fd9\u4e2a\u70b9\u548c\u4ed6\u548c\u7236\u4eb2\u4e4b\u95f4\u7684\u8fb9\u3002\n    2. $d_cur = 1 $ \u8fd9\u65f6\u5c06\u7236\u4eb2\u53d8\u4e3a\u76f8\u53cd\u7684\u70b9\uff0c\u5e76\u5ffd\u7565\u5f53\u524d\u70b9\u3002\n    \n\u53ef\u4ee5\u7ed3\u5408\u4ee3\u7801\u7406\u89e3\n```\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 3e5+10;\nint n,m,cnt;\nint d[N],h[N];\nint ans[N<<1],tot;\nbool vis[N];\nstruct edge{\n\tint to,next;\n}e[N<<1];\ninline void add(int from,int to){\n\te[++cnt]=(edge){to,h[from]};h[from]=cnt;\n}\nbool dfs(int x){\n\tvis[x]=1;\n//\tcerr<<x<<endl;\n\tbool res=d[x];\n\tfor(int i=h[x];i;i=e[i].next){\n\t\tint v=e[i].to;\n\t\tif(vis[v]) continue;\n\t\tif(dfs(v))\n\t\t\tans[++tot]=(i+1)/2,res^=1;//cerr<< x << \" \" << v<< endl ;\n\t}\n\tif(d[x]==-1) res=0;\n//\tcerr<<x<< \" \" <<res<<endl;\n\treturn res;\n}\n\nint main(){\n\tint be=-1,ok=0;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++) {\n\t\tscanf(\"%d\",d+i);\n\t\tif(d[i]==-1) be=i;\n\t\telse ok^=d[i];\n\t}\n\tint u,v;\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tadd(u,v);add(v,u);\n\t}\n\tif(be==-1&&ok) {puts(\"-1\");return  0 ;}\n\tif(be==-1) be=1;\n\tdfs(be);\n\tprintf(\"%d\\n\",tot);\n\tsort(ans+1,ans+tot+1);\n\tfor(int i=1;i<=tot;i++)\n\t\tprintf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```\n    ",
        "postTime": 1523773571,
        "uid": 36102,
        "name": "doge233",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF840B \u3010Leha and another game about graph\u3011"
    },
    {
        "content": "# \u9898\u89e3\n\n## \u601d\u8def\n\n### part1:\u5224\u65ad\u65e0\u89e3\n\n\u4e00\u6761\u8fb9\u4f1a\u4f7f\u603b\u5ea6\u6570\u52a02\uff0c\u6240\u4ee5\u603b\u5ea6\u6570\u4e00\u5b9a\u662f\u5076\u6570\u3002\n\n\u6545\u603b\u5ea6\u6570\u4e3a\u5947\u6570\u7684\u60c5\u51b5\u662f\u65e0\u89e3\u7684\uff0c\u542b\u6709-1\u70b9\u548c\u603b\u5ea6\u6570\u4e3a\u5076\u6570\u7684\u60c5\u51b5\u662f\u4e00\u5b9a\u6709\u89e3\u7684\u3002\n\n### part2:\u6784\u9020\u65b9\u6cd5\n\n\u6ce8\u610f\u5230\u9898\u9762\u4e0a\u7ed9\u51fa\u56fe\u4e00\u5b9a\u662f\u8054\u901a\u7684\uff0c\u8003\u8651\u751f\u6210\u6811\u3002\n\n\u53ef\u4ee5\u968f\u4fbf\u5efa\u4e00\u68f5\u751f\u6210\u6811\uff0c\u5e76\u5728\u751f\u6210\u6811\u4e0a\u8fdb\u884c\u6784\u9020\u3002\n\n\u6839\u636e\u6811\u7684\u6027\u8d28\uff1a\u5982\u679c\u5bf9\u5f53\u524d\u8282\u70b9\u8fdb\u884c\u64cd\u4f5c\uff0c\u662f\u4e0d\u4f1a\u5f71\u54cd\u5230\u5b50\u6811\u7684\u3002\n\n\u56e0\u6b64\u5728\u4fdd\u8bc1\u5b50\u6811\u6240\u6709\u70b9\u6ee1\u8db3\u9650\u5236\u7684\u65f6\u5019\uff0c\u6211\u4eec\u6839\u636e\u5f53\u524d\u70b9\u73b0\u5728\u7684\u5ea6\u6570\u6765\u51b3\u5b9a\u8981\u4e0d\u8981\u9009\u62e9\u8fde\u4ed6\u548c\u7236\u8282\u70b9\u7684\u8fd9\u6761\u8fb9\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u5f71\u54cd\u5b50\u6811\u7684\u7b54\u6848\u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u7528dfs\u6765\u89e3\u51b3\u4e86\uff01\u56e0\u4e3a\u662f\u4ece\u4e0b\u5f80\u4e0a\u6784\u9020\uff0c\u6240\u4ee5\u64cd\u4f5c\u662f\u5728\u904d\u5386\u5b50\u6811\u4e4b\u540e\u8fdb\u884c\u7684\u3002\n\n\u4e5f\u8bb8\u6709\u7684\u8bfb\u8005\u4f1a\u6709\u7591\u95ee\uff1a\u8fd9\u6837\u6784\u9020\u56de\u6eaf\u5230\u6839\u8282\u70b9\u65f6\u4e00\u5b9a\u662f\u6709\u89e3\u7684\u5417\uff1f\n\n\u53ef\u4ee5\u8bc1\u660e\uff0c\u8fd9\u6837\u6784\u9020\u4e00\u5b9a\u6709\u89e3\uff1a\n\n\u8003\u8651\u6839\u8282\u70b9\u65f6\uff0c\u5176\u5b50\u6811\u4e0a\u7684\u70b9\u5df2\u5168\u90e8\u6ee1\u8db3\u9650\u5236\uff08\u5373\u9664\u6839\u7ed3\u70b9\u4ee5\u5916\u7684\u6240\u6709\u70b9\u7686\u6ee1\u8db3\u9650\u5236\uff09\uff0c\u82e5\u6b64\u65f6\u6839\u8282\u70b9\u5ea6\u6570\u7684\u5947\u5076\u6027\u4e0e\u9650\u5236\u4e0d\u540c\uff0c\u5219\u603b\u5ea6\u6570\u4e3a\u5947\u6570\uff0c\u4e0e\u603b\u5ea6\u6570\u4e3a\u5076\u6570\u7684\u524d\u63d0\u76f8\u77db\u76fe\uff0c\u6545\u6839\u8282\u70b9\u5ea6\u6570\u7684\u5947\u5076\u6027\u4e00\u5b9a\u6ee1\u8db3\u9650\u5236\u3002\n\n\u5728\u9009\u53d6\u6839\u8282\u70b9\u65f6\u6709\u4e00\u4e2a\u5c0f\u6280\u5de7\uff1a\u5f53\u6709-1\u7684\u70b9\u65f6\uff0c\u4ee4\u4e00\u4e2a-1\u70b9\u6210\u4e3a\u6839\u8282\u70b9\uff0c\u5176\u4ed6\u7684-1\u70b9\u6210\u4e3a0\u70b9\u5373\u53ef\u3002\u8fd9\u6837\u4fbf\u53ef\u4ee5\u4e0d\u7528\u8003\u8651\u603b\u5ea6\u6570\u4e3a\u5076\u6570\u7684\u9650\u5236\u4e86\u3002\n\n## Code\n\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=3e5+5;\nint d[N],ans[N];\nbool vis[N];\nstruct node{\n  int nex,to;\n}t[2*N];\nint head[N],idx=0;\nint n,m,u,v;\nint root=-1,sum=0;\nint cnt=0;\n\nvoid add(int u,int v){\n  t[++idx].to=v;\n  t[idx].nex=head[u];\n  head[u]=idx;\n}\n\nint dfs(int now){//dfs\u8fd4\u56de\u7684\u503c\u4ee3\u8868\u5f53\u524d\u70b9\u662f\u5426\u5df2\u7ecf\u6ee1\u8db3\u9650\u5236\n  int flag=d[now];\n  vis[now]=true;\n  for(int i=head[now];i;i=t[i].nex){\n    int y=t[i].to;\n    if(vis[y]) continue;\n    if(dfs(y)){//\u82e5\u5b50\u8282\u70b9\u4e0d\u6ee1\u8db3\u9650\u5236\uff0c\u5219\u9700\u8981\u8fde\u8fb9\n      ans[++cnt]=(i+1)/2;//\u8fde\u7684\u662f\u53cc\u5411\u8fb9\n      flag=(1-flag);//flag\u8bb0\u5f55\u5f53\u524d\u70b9\u662f\u5426\u6ee1\u8db3\u9650\u5236\n    }\n  }\n  if(d[now]==-1) flag=0;//\u5982\u679c\u662f-1\u5c31\u4e0d\u7528\u8003\u8651\u9650\u5236\u4e86\n  return flag;\n}\n\nint main(){\n  cin>>n>>m;\n  for(int i=1;i<=n;i++){\n    cin>>d[i];\n    if(d[i]==-1) root=i;\n    else sum+=d[i];\n  }\n  for(int i=1;i<=m;i++){\n    cin>>u>>v;\n    add(u,v);add(v,u);\n  }\n  if(root==-1&&sum%2==1){cout<<-1;return 0;}//\u5224\u65e0\u89e3\n  if(root==-1) root=1;//\u524d\u9762\u63d0\u5230\u7684\u5c0ftrick\n  int fuck=dfs(root);\n  cout<<cnt<<endl;\n  for(int i=1;i<=cnt;i++) cout<<ans[i]<<endl;\n  return 0;\n}\n\n```\n\n",
        "postTime": 1635854944,
        "uid": 149933,
        "name": "Zero_Legend",
        "ccfLevel": 5,
        "title": "CF840B Leha and another game about graph\u9898\u89e3"
    },
    {
        "content": "  \u8fd9\u9053\u9898\u5176\u5b9e\u5e76\u4e0d\u662f\u975e\u5e38\u96be\uff0c\u611f\u89c9\u8bc4\u6210\u9ed1\u7684\u6709\u70b9\u8fc7\u5206\u4e86\u60f9\uff0c\u9898\u610f\u4e0d\u96be\u7406\u89e3\uff0c\u4e3b\u8981\u662f\u60f3\u6cd5\u975e\u5e38\u96be\u5f97\u5230QAQ\n  \n ----------------------\n \n \n \u56e0\u4e3a\u4e00\u5f20\u56fe\u91cc\u53ea\u80fd\u6709\u5076\u6570\u4e2a\u5947\u70b9\uff0c\u6240\u4ee5\u5f53\u6570\u636e\u7ed9\u4f60\u7684\u5947\u70b9\u4e2a\u6570\u4e3a\u5947\u6570\u4e2a\u65f6\uff0c\u9700\u8981\u628a\u4e00\u4e2a\u4e3a $-1$\u7684\u70b9\u53d8\u6210 $1$\uff0c\u5047\u5982\u9898\u76ee\u6ca1\u6709\u7ed9\u4f60 $-1$ \uff0c\u90a3\u4f60\u4fbf\u53ef\u4ee5\u81ea\u5df1\u8fd8\u7ed9\u9898\u76ee\u4e00\u4e2a\u5927\u5927\u7684 $-1$ ,\u8dd1\u8def\uff1b\n\n\u5047\u5982\u6570\u636e\u6ca1\u6709\u90a3\u4e48\u826f\u5fc3\uff0c\u90a3\u4fbf\u628a\u5176\u4ed6\u7684\u65e0\u7528\u7684 $-1$\u5168\u90e8\u6539\u6210 $0$\uff0c\u8fd9\u4e2a\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9bfs \n\n\u5173\u4e8ebfs\u6709\u4e00\u4e2a\u975e\u5e38\u68d2\u7684\u65b9\u6cd5\uff0c\u4ece\u4e00\u4e2a\u5947\u70b9\u5f00\u59cb\uff0c\u7136\u540e\u628a\u5b83\u6240\u5230\u7684\u7b2c\u4e00\u4e2a\u5947\u70b9\u7684\u8def\u5f84\u5168\u90e8 $Xor 1$ ,\u4f46\u662f\u90a3\u6837\u590d\u6742\u5ea6\u4e0d\u5bf9\uff0c\u8fc7\u4e0d\u4e86 $CF$\u7684\u6bd2\u7624\u6570\u636e.....\n\nbfs\u4e0d\u884c\uff0c\u90a3\u5c31\u8dd1dfs\u54af\u3002\n\n~~\u901a\u8fc7\u751f\u6210\u4e00\u68f5\u6811\u6765\u964d\u4f4e\u590d\u6742\u5ea6\uff0c\u56e0\u4e3a\u6ca1\u6709\u8fb9\u6743\uff0c\u6240\u4ee5\u53ea\u8981\u7528\u5e76\u67e5\u96c6\u5c31\u53ef\u4ee5\u4e86\u3002~~\n\ndfs\u904d\u5386\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u56de\u6eaf\u65f6\u8bb0\u5f55\u8fd9\u4e2a\u8282\u70b9\u7684\u6240\u6709\u5b50\u5b59\u8282\u70b9\u5305\u62ec\u5b83\u81ea\u5df1\u7684\u5947\u70b9\u4e2a\u6570\uff0c\u5982\u679c\u662f\u5076\u6570\u4e2a\uff0c\u8bf4\u660e\u8fd9\u5e95\u4e0b\u53ef\u4ee5\u6784\u6210\u56fe\uff0c\u5219\u8fd9\u4e2a\u8282\u70b9\u4e0a\u65b9\u7684\u8fb9\u4e0d\u9700\u8981\u8ba1\u5165\u7b54\u6848\uff0c\u5426\u5219\u5c31\u8bf4\u660e\u8fd9\u4e2a\u8282\u70b9\u4ee5\u4e0b\u65e0\u6cd5\u6784\u6210\u4e00\u5f20\u56fe\uff0c\u8282\u70b9\u4e0a\u65b9\u7684\u8fb9\u5c31\u8ba1\u5165\u7b54\u6848\u55bd\u3002\u4ee3\u7801\u5f88\u4e11\uff0c\u884c\u4e86\u5566\uff01\n```\n#include<cstdio>\n#define _ 0\n#define N 600050\n#define M 600050\n#define int long long\n#define drep(k ,l ,r) for(register int k = (r) ; k >= (l) ; -- k)\n#define rep(k ,l ,r) for(register int k = l ; k <= r ; ++ k)\n#define re register\n#define INF 0x3f3f3f3f\nusing namespace std;\nint n ,m ,tot ,head[N] ,point[N] ,odd ,u ,v;\nint fa[N] ,tree[N] ,ansn;\nbool vis[N] ,ans[N];\nstruct edge {\n    int next ,to ,num;\n} e[M];\nint read() {\n    char cc = getchar() ; int cn = 0 ,flus = 1;\n    while(cc < '0' || cc > '9') {if(cc == '-') flus = - flus ; cc = getchar() ; }\\\n    while(cc >= '0' && cc <= '9') cn = cn * 10 + cc - '0' ,cc = getchar() ; \n    return flus * cn;\n}\nvoid add(int u ,int v ,int wi) {\n    e[++tot] = (edge){head[u] , v ,wi} ,head[u] = tot;\n}\nint find(int x) {return fa[x] == x ? x : fa[x] = find(fa[x]) ; }\nbool dfs(int u) { \n    if(vis[u])return 0; \n    int res = point[u]; vis[u] = 1;\n    for(int i = head[u] ; i ; i = e[i].next) if(dfs(e[i].to)) ++ansn ,ans[e[i].num] = 1,res ^= 1;\n    vis[u] = 0;\n    return res;\n}\nvoid print() {\n    printf(\"%lld%c\" ,ansn ,10);\n    rep(i ,1 ,n) if(ans[i]) printf(\"%lld \",i);\n}\nsigned main() {\n    n = read() ,m = read();\n    rep(i ,1 ,n) {\n        point[i] = read();\n        if(point[i] == 1) odd ^= 1;\n    }\n    rep(i ,1 ,m) fa[i] = i ;\n    rep(i ,1 ,m) {\n        u = read() ,v = read();\n        if(find(u) != find(v)) fa[fa[u]] = fa[v] ,add(u ,v ,i) ,add(v ,u ,i);\n    }\n    rep(i ,1 ,n) if(point[i]==-1) {\n        if(odd)odd = 0 ,point[i] = 1;\n        else point[i] = 0;\n    }\n    if(odd) puts(\"-1\");\n    else dfs(1) ,print();\n    return ~~(0^_^0);\n}\n```",
        "postTime": 1577253726,
        "uid": 44505,
        "name": "lemonfor",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF840B \u3010Leha and another game about graph\u3011"
    },
    {
        "content": "\u8003\u8651\u9009\u62e9\u4e00\u6761\u8fb9\u7684\u5f71\u54cd\uff1a\u5c06\u4e24\u4e2a\u70b9\u7684\u5ea6\u6570\u7684\u5947\u5076\u6027\u5206\u522b\u53d6\u53cd\u3002\n\n\u4e5f\u5c31\u662f$(1,1)->(0,0),(1,0)->(0,1),(0,0)->(1,1)$\n\n\u4e5f\u5c31\u662f\u5ea6\u6570\u548c\u7684\u53d8\u5316\u53ea\u80fd\u662f\u5076\u6570\u3002\u90a3\u4e48\u53ef\u63a8\u5f97\uff0c\u82e5\u6709\u5947\u6570\u4e2a\u70b9\u5165\u5ea6\u9700\u8981\u4e3a\u5947\u6570\u4e14\u6ca1\u6709-1\u7684\u70b9\uff0c\u5219\u65e0\u6cd5\u6784\u9020\uff1b\u5426\u5219\uff0c\u9009\u4e00\u4e2a-1\u628a\u4ed6\u53d8\u62101\uff0c\u95ee\u9898\u89c4\u7ea6\u5230\u6709\u5076\u6570\u4e2a\u5165\u5ea6\u9700\u8981\u4e3a\u5947\u6570\u7684\u70b9\u7684\u60c5\u51b5\u3002\n\n\u95ee\u9898\u8f6c\u5316\u4e3a\uff0c\u7ed9\u4e00\u5f20\u56fe\uff0c\u56fe\u4e0a\u6709\u5076\u6570\u4e2a\u70b9\u662f1,\u5c061\u7684\u70b9\u914d\u5bf9\uff0c\u5e76\u4e14\u65e0\u91cd\u8fb9\u3002  \n\u8fd9\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u6811\u4e0a\u95ee\u9898\u3002\u5047\u8bbe\u73b0\u5728\u5728\u8003\u8651$u$\n- \u82e5$u$\u6709\u5076\u6570\u4e2a\u513f\u5b50\u662f1\uff0c\u5c06\u8fd9\u4e9b1\u4e24\u4e24\u914d\u5bf9\u5373\u53ef\n- \u82e5$u$\u6709\u5947\u6570\u4e2a\u513f\u5b50\u662f1\uff0c\u9009\u51fa\u5c3d\u91cf\u591a\u4e2a\u4e24\u4e24\u914d\u5bf9\uff0c\u5269\u4e0b\u7684\u4e00\u4e2a\u548c$u$\u914d\u5bf9\uff0c\u5e76\u53cd\u8f6c$u$\u7684\u72b6\u6001\u3002\n\n\u7531\u4e8e\u6839\uff08$1$\uff09\u7684\u5b50\u6811\u4e2d\u6709\u5076\u6570\u4e2a1\uff0c\u6240\u4ee5\u5fc5\u7136\u5b58\u5728\u65b9\u6848\u3002  \n\u56e0\u6b64\uff0c\u5bf9\u4e8e\u6709\u5076\u6570\u4e2a1\u7684\u8fde\u901a\u56fe\uff0c\u4e5f\u5fc5\u7136\u5b58\u5728\u65b9\u6848\u3002\u4e00\u4e2a\u65b9\u4fbf\u7684\u505a\u6cd5\u662f\uff0c\u9009\u51fa\u4e00\u4e2a\u751f\u6210\u6811\uff0c\u5728\u751f\u6210\u6811\u4e0a\u6784\u9020\u5373\u53ef\u3002  \n\u65f6\u95f4\u590d\u6742\u5ea6$\\mathcal O(n+m\\log m),m\\log m$\u662f\u56e0\u4e3a\u6211\u7528\u4e86map\u5224\u91cd\u3002\n```cpp\n/**********/\n#define MAXN 300011\nstd::map<pll,bool>p;\nstruct edge\n{\n    ll v,dex,nxt;\n}e[MAXN<<1|1];\nll cnt=0,last[MAXN];\nvoid adde(ll u,ll v,ll dex)\n{\n    e[++cnt].v=v,e[cnt].dex=dex;\n    e[cnt].nxt=last[u],last[u]=cnt;\n}\nll fa[MAXN],d[MAXN],all=0,change;\nbool vis[MAXN];\nvoid dfs1(ll u)\n{\n    vis[u]=1;\n    if(d[u]==-1)change=u;\n    all+=(d[u]==1);\n    for(ll i=last[u];i;i=e[i].nxt)\n    {\n        ll v=e[i].v;\n        if(vis[v])continue;\n        fa[v]=u;\n        dfs1(v);\n    }\n}\nstd::vector<ll>ans;\nvoid dfs2(ll u)\n{\n    for(ll i=last[u];i;i=e[i].nxt)\n    {\n        ll v=e[i].v;\n        if(fa[v]==u)\n        {\n            dfs2(v);\n            if(d[v]==1){ans.push_back(e[i].dex),d[u]^=1;}\n        }\n    }\n}\nint main()\n{\n    ll n=read(),m=read();\n    for(ll i=1;i<=n;++i)d[i]=read();\n    for(ll i=1;i<=m;++i)\n    {\n        ll u=read(),v=read();\n        if(u>v)std::swap(u,v);\n        if(p[pll(u,v)])continue;\n        p[pll(u,v)]=1;\n        adde(u,v,i),adde(v,u,i);\n    }\n    dfs1(1);\n    if(all&1)\n    {\n        if(!change){puts(\"-1\");return 0;}\n        d[change]=1;\n    }\n    for(ll i=1;i<=n;++i)\n        if(d[i]==-1)d[i]=0;\n    dfs2(1);\n    printf(\"%u\\n\",ans.size());\n    for(auto x:ans)printf(\"%lld\\n\",x);\n    return 0;\n}\n```",
        "postTime": 1586313291,
        "uid": 73142,
        "name": "\u4e07\u5f18",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF840B \u3010Leha and another game about graph\u3011"
    },
    {
        "content": "\u8fd9\u7bc7\u9898\u89e3\u4e3b\u8981\u8bb2\u4e00\u4e0b\u8bc1\u660e\u8fc7\u7a0b\uff0c\u5982\u679c\u61d2\u5f97\u770b\u53ef\u4ee5\u53bb\u770b@lemonfor \u5199\u7684\u9898\u89e3\n\n---\n\u9996\u5148\uff0c\u5bf9\u4e8e\u4e00\u5f20\u56fe\uff0c\u5176\u4e2d\u5ea6\u6570\u4e3a\u5947\u6570\u7684\u70b9\u7684\u4e2a\u6570\u4e00\u5b9a\u4e3a\u5076\u6570\u4e2a\uff08\u56e0\u4e3a\u5ea6\u6570\u4e4b\u548c\u4e3a\u5076\u6570\uff09\uff0c\u6240\u4ee5\u5c31\u53ef\u4ee5\u5148\u5224\u65ad\u6309\u9898\u76ee\u8981\u6c42\u662f\u5426\u80fd\u6784\u6210\u4e00\u5f20\u56fe\uff0c\u987a\u4fbf\u628a $-1$ \u5904\u7406\u4e86\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n```\n\t//w1\u8868\u793a\u5947\u70b9\u4e2a\u6570\u7684\u5947\u5076\u6027\uff0cw[i]\u8868\u793a\u70b9\u7684\u5ea6\u6570\u8981\u6c42\n\tfor(int i=1;i<=n;i++)if(w[i]==-1)\n\t{\n\t\tif(w1)\n\t\t{\n\t\t\tw1=0;\n\t\t\tw[i]=1;\n\t\t}\n\t\telse w[i]=0;\n\t}\n\tif(w1)\n\t{\n\t\tputs(\"-1\");\n\t\treturn 0;\n\t}\n```\n---\n\u9898\u76ee\u7684\u8981\u6c42\u53ef\u4ee5\u8f6c\u5316\u4e3a\u628a\u6240\u7ed9\u7684\u5947\u70b9\u4e24\u4e24\u8fde\u63a5\uff0c\u56e0\u4e3a\u8fde\u63a5\u4e24\u70b9\u7684\u8def\u5f84\u53ea\u4f1a\u6539\u53d8\u4e24\u7aef\u70b9\u7684\u5ea6\u6570\u7684\u5947\u5076\u6027\uff0c\u8def\u5f84\u4e0a\u5176\u5b83\u70b9\u7684\u5947\u5076\u6027\u4e0d\u53d8\uff0c\u6240\u4ee5\u5c31\u53ef\u4ee5\u7528bfs\u641c\u7d22\u51fa\u7b54\u6848\u3002\n\n\u4f46\u662f\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u641c\u51fa\u6765\u7684\u8def\u5f84\u53ef\u80fd\u4f1a\u628a\u56fe\u5212\u5206\u4e3a\u4e24\u6216\u66f4\u591a\u4e2a\u4e0d\u8fde\u901a\u7684\u5b50\u56fe\uff0c\u5982\u679c\u6709\u5b50\u56fe\u4e2d\u5947\u70b9\u7684\u4e2a\u6570\u4e3a\u5947\u6570\u65f6\uff0c\u5c31\u4f1a\u65e0\u89e3\u4e86\uff0c\u5982\u679c\u52a0\u4e0a\u56de\u6eaf\uff0c\u90a3\u4e48\u5c31\u4f1aT\u5230\u6000\u7591\u4eba\u751f\u3002\u4f46\u662f\u5982\u679c\u4e00\u6761\u8fb9\u53ef\u4ee5\u9009\u591a\u6b21\uff0c\u95ee\u9898\u5c31\u7b80\u5355\u5f88\u591a\u4e86\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u5047\u8bbe\u6bcf\u6761\u8fb9\u53ef\u4ee5\u9009\u65e0\u9650\u6b21\uff0c\u90a3\u4e48\u5982\u679c\u4e00\u6761\u8fb9\u88ab\u9009\u4e86\u4e24\u6b21\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u628a\u8fd9\u4e24\u6b21\u9009\u62e9\u90fd\u53bb\u6389\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u8fd9\u6761\u8fb9\uff0c\u5b83\u7684\u4e24\u4e2a\u7aef\u70b9\u7684\u5ea6\u6570\u90fd\u4f1a\u51cf\u5c11 $2$\uff0c\u5bf9\u7b54\u6848\u662f\u6ca1\u6709\u5f71\u54cd\u7684\uff0c\u5c31\u53ef\u4ee5\u5bf9\u4e8e\u8fb9\u5f00\u4e00\u4e2a\u6807\u8bb0\u6570\u7ec4\uff0c\u6bcf\u6b21\u9009\u62e9\u65f6\u5c06\u5176\u4e2d\u7684\u503c $Xor1$ \u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4f46\u662f\u8fd9\u6837\u505a\u7684\u590d\u6742\u5ea6\u662f $n \\times m$ \u7684\uff0c\u8fd8\u662f\u4e0d\u80fd\u901a\u8fc7\u6b64\u9898\u3002\n\n---\n\u56e0\u4e3a\u6bcf\u4e24\u5bf9\u70b9\u4e4b\u95f4\u53ea\u8981\u6709\u4e00\u6761\u8def\u5f84\u5c31\u53ef\u4ee5\u4e86\uff0c\u6240\u4ee5\uff0c\u4e3a\u4e86\u4f7f\u7b97\u6cd5\u66f4\u4f18\uff0c\u5c31\u53ef\u4ee5\u968f\u4fbf\u63d0\u51fa\u4e00\u68f5\u6811\u6765\uff0c\u7136\u540e\u5728\u6811\u4e0a\u8fdb\u884c\u64cd\u4f5c\u3002\n\n\u5bf9\u4e8e\u4e00\u68f5\u5b50\u6811\uff0c\u5982\u679c\u5176\u4e2d\u5ea6\u6570\u4e3a\u5947\u6570\u7684\u70b9\u6709\u5947\u6570\u4e2a\uff0c\u90a3\u4e48\u5b50\u6811\u7684\u6811\u6839\u5230\u5b83\u7684\u7236\u8282\u70b9\u7684\u8fb9\u4e00\u5b9a\u8981\u9009\uff0c\u5426\u5219\u4e00\u5b9a\u4e0d\u9009\uff0c\u539f\u56e0\u662f\u5ea6\u6570\u4e3a\u5947\u6570\u7684\u70b9\u53ef\u4ee5\u4e24\u4e24\u8fde\u63a5\uff0c\u5982\u679c\u6709\u5269\u7684\u70b9\u5c31\u4e00\u5b9a\u9700\u8981\u8fde\u51fa\u53bb\u3002\n\n\u4e8e\u662f\u5c31\u53ef\u4ee5\u7528dfs\u6765\u6c42\u51fa\u8981\u9009\u7684\u8fb9\uff0c\u7136\u540e\u8f93\u51fa\u3002\u603b\u590d\u6742\u5ea6 $ n+m $\u3002\n\n---\n\u4ee3\u7801\uff1a\uff08\u7801\u98ce\u975e\u5e38\u90aa\u6559\uff0c\u4e0d\u5efa\u8bae\u5b66\u4e60\uff09\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,u,v,w[300001],a[600001],a1[600001],a2[300001],a4[600001],a5,b[300001],ansn;\nbool w1,ans[300001],vis[300001];\nint find(int i){return b[i]==i?i:b[i]=find(b[i]);}\nbool dfs(int i)\n{\n\tif(vis[i])return 0;\n\tvis[i]=1;\n\tint a3=a2[i];\n\tbool ans1=w[i];\n\twhile(a3)\n\t{\n\t\tif(dfs(a[a3]))\n\t\t{\n\t\t\tans1^=1;\n\t\t\t++ansn;\n\t\t\tans[a4[a3]]=1;\n\t\t}\n\t\ta3=a1[a3];\n\t}\n\tvis[i]=0;\n\treturn ans1;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)b[i]=i;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&w[i]);\n\t\tif(w[i]==1)w1^=1;\n\t}\n\tfor(int i=1;i<=n;i++)if(w[i]==-1)\n\t{\n\t\tif(w1)\n\t\t{\n\t\t\tw1=0;\n\t\t\tw[i]=1;\n\t\t}\n\t\telse w[i]=0;\n\t}\n\tif(w1)\n\t{\n\t\tputs(\"-1\");\n\t\treturn 0;\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tif(find(u)!=find(v))\n\t\t{\n\t\t\tb[b[u]]=b[v];\n\t\t\ta[(++a5)<<1]=v;\n\t\t\ta1[a5<<1]=a2[u];\n\t\t\ta2[u]=a5<<1;\n\t\t\ta[a5<<1|1]=u;\n\t\t\ta1[a5<<1|1]=a2[v];\n\t\t\ta2[v]=a5<<1|1;\n\t\t\ta4[a5<<1]=a4[a5<<1|1]=i;\n\t\t}\n\t}\n\tdfs(1);\n\tprintf(\"%d\\n\",ansn);\n\tfor(int i=1;i<=m;i++)if(ans[i])printf(\"%d \",i);\n\treturn 0;\n}\n```\n",
        "postTime": 1577456065,
        "uid": 44840,
        "name": "123456zmy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF840B \u3010Leha and another game about graph\u3011"
    },
    {
        "content": "\u6784\u9020\u9898\u3002\n\n\u9996\u5148\u5224\u65ad\u65e0\u89e3\u3002\u6bcf\u9009\u4e00\u6761\u8fb9\u8d21\u732e\u4e24\u4e2a\u5ea6\u6570\uff0c\u6240\u4ee5\u5982\u679c\u6ca1\u6709 $-1$ \u7684\u70b9\uff0c\u4e14\u5ea6\u6570\u548c\u4e3a\u5947\u6570\uff0c\u90a3\u4e48\u65e0\u89e3\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u6784\u9020\u3002\u6211\u4eec\u8003\u8651\u4ece\u56fe\u4e2d\u6263\u4e0b\u6765\u4e00\u68f5\u6811\uff08dfs \u6811\uff09\uff0c\u5982\u679c\u5ea6\u6570\u4e3a\u5947\u6570\uff0c\u4ee4 $-1$ \u7684\u70b9\u4e3a\u6839\uff0c\u5426\u5219\u968f\u4fbf\u9009\u4e00\u4e2a\u3002\n\n\u5b9a\u4e49 $tp_i$ \u8868\u793a\u7b2c $i$ \u4e2a\u8282\u70b9\u662f\u5426\u9700\u8981\u4e0e\u7236\u4eb2\u8fde\u8fb9\uff0c$0$ \u8868\u793a\u4e0d\u7528\uff0c$1$ \u8868\u793a\u7528\u3002\u7136\u540e\u5bf9\u4e8e\u5f53\u524d\u70b9 $u$\uff0c\u5411\u6240\u6709\u6ee1\u8db3 $tp_v=1$ \u7684\u513f\u5b50\u8fde\u8fb9\uff0c\u5bb9\u6613\u8bc1\u660e\u8fd9\u662f\u6b63\u786e\u7684\u3002\n\n\u56e0\u4e3a\uff0c\u5982\u679c\u6839\u4e3a $-1$ \u7684\u70b9\uff0c\u90a3\u4e48\u6839\u600e\u4e48\u8fde\u90fd\u884c\uff1b\u5426\u5219\uff0c\u6839\u636e\u53cd\u8bc1\u6cd5\uff0c\u5982\u679c\u6839\u8fd8\u9700\u8981\u8fde\u8fb9\uff0c\u800c\u5176\u4ed6\u8282\u70b9\u90fd\u5df2\u8fde\u597d\uff0c\u90a3\u4e48\u603b\u5ea6\u6570\u4e3a\u5947\u6570\uff0c\u77db\u76fe\u3002\n\n\u590d\u6742\u5ea6 $O(n)$\u3002\n\ncode:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=3e5+5;\nint n,m,d[N],tp[N],vis[N];\nstruct node{\n  int v,id;\n  node(int v=0,int id=0):v(v),id(id){}\n};\nvector<node>adj[N];\nvector<int>ans;\nvoid dfs(int u){\n  int s=d[u];vis[u]=1;\n  for(int i=0;i<adj[u].size();++i){\n    int v=adj[u][i].v,id=adj[u][i].id;if(vis[v])continue;\n    dfs(v);\n    if(tp[v])s^=1,ans.push_back(id);\n  }\n  if(d[u]!=-1)tp[u]=s;\n}\nint main(){\n  ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n  cin>>n>>m;\n  int rt=1,f=0,s=0;\n  for(int i=1;i<=n;++i){\n    cin>>d[i];\n    if(d[i]==-1)rt=f=i;\n    else s^=d[i];\n  }\n  for(int i=1;i<=m;++i){\n    int u,v;cin>>u>>v;\n    adj[u].push_back(node(v,i));\n    adj[v].push_back(node(u,i));\n  }\n  if(!f&&s)cout<<-1<<endl;\n  else{\n    dfs(rt);sort(ans.begin(),ans.end());\n    cout<<ans.size()<<endl;\n    for(int i=0;i<ans.size();++i)cout<<ans[i]<<endl;\n  }\n  return 0;\n}\n\n```\n",
        "postTime": 1684486541,
        "uid": 173864,
        "name": "EstasTonne",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF840B"
    },
    {
        "content": "## [CF840B](https://codeforces.com/contest/840/problem/B)\n### \u89e3\u9898\u601d\u8def\uff1a\n\u9996\u5148\u5224\u65ad\u662f\u5426\u6709\u7b54\u6848\uff1a\n\n\u5982\u679c\u5ea6\u6570\u4e3a\u5947\u6570\u7684\u70b9\u7684\u4e2a\u6570\u662f\u5947\u6570\u5e76\u4e14\u6ca1\u6709 $d$ \u7b49\u4e8e $-1$ \u7684\u70b9\uff0c\u90a3\u4e48\u80af\u5b9a\u65e0\u89e3\uff0c\u56e0\u4e3a\u8fd9\u6837\u603b\u5ea6\u6570\u5c31\u662f\u4e00\u4e2a\u5947\u6570\uff0c\u800c\u6bcf\u6761\u8fb9\u5bf9\u603b\u5ea6\u6570\u7684\u8d21\u732e\u662f $2$\uff0c\u603b\u5ea6\u6570\u5e94\u8be5\u662f\u5076\u6570\uff0c\u6240\u4ee5\u8fd9\u6837\u7684\u60c5\u51b5\u65e0\u89e3\u3002\n\n\u8003\u8651\u5982\u4f55\u6784\u9020\u4e00\u7ec4\u89e3\uff1a\n\n\u5176\u5b9e\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230\u6ee1\u8db3\u6761\u4ef6\u7684\u751f\u6210\u6811\u5373\u53ef\uff0c\u6bd4\u5982 dfs \u6811\u3002\n\n\u6bcf\u4e2a\u70b9\u8bb0\u5f55\u4e00\u4e2a\u503c $dp_i$\uff0c$dp_i$ \u53d6 $0/1/-1$\uff0c$0$ \u8868\u793a\u9700\u8981\u7528\u5230\u4ed6\u548c\u7236\u4eb2\u7684\u8fde\u8fb9\uff0c$1$ \u8868\u793a\u4e0d\u9700\u8981\uff0c$-1$ \u8868\u793a\u968f\u4fbf\u3002\n\n\u5047\u8bbe\u73b0\u5728\u5728 $u$ \u70b9\uff0c\u8bb0\u5f55\u4e00\u4e2a $sum$ \u8868\u793a\u6709\u51e0\u4e2a\u513f\u5b50\u9700\u8981\u7528\u5230\u548c\u81ea\u5df1\u7684\u8fde\u8fb9\u3002\n\n\u6211\u4eec\u5411\u4e0b dfs \u5230 $u$ \u7684\u513f\u5b50 $v$\u3002\n\n\u5982\u679c $dp_v$ \u7b49\u4e8e $1$\uff0c\u6211\u4eec\u5c31\u628a\u8fd9\u6761\u8fb9\u653e\u5230\u7b54\u6848\u91cc\uff0c\u4e14 $sum$ \u52a0 $1$\uff1b\n\n\u5982\u679c $dp_v$ \u7b49\u4e8e $-1$\uff0c\u90a3\u4e48\u6700\u540e $dp_u=-1$\u3002\n\n\u5982\u679c $u$ \u4e0d\u5b58\u5728\u513f\u5b50 $v$ \u6ee1\u8db3 $dp_v=-1$\uff0c\u518d\u5224\u65ad $u$ \u662f\u5426\u9700\u8981\u4e0e\u4ed6\u7236\u4eb2\u7684\u90a3\u6761\u8fb9\uff0c\u5229\u7528 $sum$ \u5373\u53ef\u3002\n\n\u8fd9\u663e\u7136\u53ef\u4ee5\u627e\u5230\u4e00\u7ec4\u89e3\u3002\n\n### \u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<vector>\n\n#define rep(x,y,z) for(int x=y;x<=z;x++)\n#define per(x,y,z) for(int x=z;x>=y;x--)\n\nusing namespace std;\nconst int N=3e5+10;\n\nstruct edge\n{\n\tint to,id;\n};\n\nvector<edge>e[N];\nvector<int>ans;\nint d[N];\nbool vis[N],bo[N];\n\nvoid dfs(int cur)\n{\n\tvis[cur]=1;\n\tint sum=0;\n\tfor(auto &nt: e[cur])\n\t{\n\t\tif(vis[nt.to]) continue;\n\t\tdfs(nt.to);\n\t\tif(bo[nt.to]==-1) bo[cur]=-1;\n\t\telse if(bo[nt.to]) ans.push_back(nt.id),sum++;\n\t}\n\tif(bo[cur]==-1) return ;\n\telse if((sum+1)%2==d[cur]) bo[cur]=1;\n\telse bo[cur]=0;\n}\n\nint main()\n{\n\tint n,m;\n\tscanf(\"%d%d\",&n,&m);\n\tint ok=0,st=-1;\n\trep(i,1,n)\n\t{\n\t\tscanf(\"%d\",&d[i]);\n\t\tif(d[i]==-1) st=i,bo[i]=-1;\n\t\telse ok^=d[i];\n\t}\n\trep(i,1,m)\n\t{\n\t\tint u,v;\n\t\tscanf(\"%d%d\",&u,&v);\n\t\te[u].push_back((edge) {v,i});\n\t\te[v].push_back((edge) {u,i});\n\t}\n\tif(st==-1&&ok) return puts(\"-1\"),0;\n\tif(st==-1) st=1;\n\tdfs(st);\n\tprintf(\"%d\\n\",(int)(ans.size()));\n\tfor(auto &i: ans) printf(\"%d \",i);\n\treturn 0;\n}\n```\n",
        "postTime": 1660913731,
        "uid": 571634,
        "name": "hgzxwzf",
        "ccfLevel": 7,
        "title": "CF840B"
    },
    {
        "content": "#### \u7b80\u5316\u9898\u610f\n\u6709\u4e00\u4e2a\u8054\u901a\u65e0\u5411\u56fe\uff0c\u6bcf\u4e2a\u70b9\u6709\u8981\u6c42\uff1a\u5ea6\u5fc5\u987b\u662f\u5076\u6570\u3001\u5fc5\u987b\u662f\u5947\u6570\u6216\u65e0\u9650\u5236\u3002\n\u6c42\u662f\u5426\u80fd\u627e\u51fa\u4e00\u4e2a\u5305\u542b\u6240\u6709\u70b9\u7684\u5b50\u56fe\u6ee1\u8db3\u6240\u6709\u70b9\u7684\u8981\u6c42\uff0c\u82e5\u80fd\uff0c\u8f93\u51fa\u8fd9\u4e2a\u5b50\u56fe\u7684\u8fb9\u96c6\n\n#### \u601d\u8def\n\u9996\u5148\uff0c\u770b\u5230\u65e0\u5411\u8fde\u901a\u56fe\u56fe\u4e0a\u7684\u95ee\u9898\uff0c\u4e00\u4e2a\u65b9\u5411\u5c31\u662f**\u5efaDFS\u751f\u6210\u6811**\u3002\n\u5c06\u56fe\u4e2d\u7684\u8fb9\u8f6c\u5316\u4e3a\u6811\u8fb9\u548c\u975e\u6811\u8fb9\uff0c\u975e\u6811\u8fb9\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\u8f6c\u5316\u4e3a\u751f\u6210\u6811\u4e0a\u7684\u8986\u76d6\u3002\n\n\u7136\u800c\u8fd9\u9053\u9898\u7b80\u5355\u5230\u751a\u81f3\u4e0d\u7528\u8003\u8651\u975e\u6811\u8fb9....\n\n\u7136\u540e\u6211\u4eec\u4f1a\u60f3\u5230**\u5229\u7528\u6811\u7684\u6027\u8d28\uff1a\u5b50\u6811\u72ec\u7acb**\u3002\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u5982\u4f55\u628a\u4e00\u4e2a\u5b50\u6811\u5185\u7684\u70b9\u5168\u90e8\u6ee1\u8db3\u5176\u6761\u4ef6\u3002\u5148\u9012\u5f52\u5904\u7406$u$\u7684\u6240\u6709\u513f\u5b50\uff0c\u56de\u6eaf\u65f6\u82e5u\u5df2\u6ee1\u8db3\u5947\u5076\u9650\u5236\u5219\u76f4\u63a5\u56de\u6eaf\uff0c\u5426\u5219\u5c06$(u,f(u))$\u9009\u5165\u96c6\u5408\uff0c\u7136\u540e\u56de\u6eaf\u3002\uff08\u8fd9\u4f3c\u4e4e\u662f\u4e00\u79cd\u6bd4\u8f83\u5e38\u89c1\u7684\u6811\u4e0a\u6784\u9020\u65b9\u6cd5\uff09\n\n\u663e\u7136\uff0c\u8fd9\u6837\u5904\u7406\u5b8c\u540e**\u53ea\u6709\u6839\u53ef\u80fd\u5947\u5076\u6027\u4e0d\u6ee1\u8db3**\u3002\n\n\u82e5\u6ee1\u8db3\u76f4\u63a5\u8f93\u51fa\u3002\n\n\u5426\u5219\uff0c\u82e5\u5168\u5c40\u6ca1\u6709$-1$\uff0c\u5219\u8f93\u51fa$-1$\u3002\n\n\u5426\u5219\uff0c\u968f\u4fbf\u627e\u4e00\u4e2a$-1$\u7684\u70b9\uff0c\u8bb0\u4f5c$u$\uff0c\u5c06$u$\u5230$root$\u8def\u5f84\u4e0a\u7684\u8fb9\u7684\u9009\u53d6\u60c5\u51b5\u53d6\u53cd(\u9009\u53d8\u4e0d\u9009\uff0c\u4e0d\u9009\u53d8\u9009)\uff0c\u7136\u540e\u8f93\u51fa\u5373\u53ef\u3002\n\n\u8f93\u51fa\u53ef\u4ee5\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u548c\u5b83\u7236\u4eb2\u7684\u8fb9\u662f\u8f93\u5165\u7684\u54ea\u4e00\u6761\uff0c\u7136\u540e\u9009\u4e0d\u9009\n\n\u7a0d\u5fae\u5361\u5361\u5e38\u8c8c\u4f3c\u662f\u63d0\u4ea4\u65f6\u7684\u6700\u4f18\u89e3\uff0c\u4f46\u5e94\u8be5\u5f88\u5feb\u5c31\u8981\u88ab\u5237\u4e0b\u53bb\u4e86\u5427~\n\n#### Code\n\u8fd9\u91cc\u653e\u4e0a\u6211\u4e11\u964b\u7684\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define ri register int\n#define ll long long\nusing namespace std;\nconst int maxn = 3e5 + 10;\nint d[maxn],du[maxn],head[maxn],head1[maxn],ed[maxn],f[maxn],n,m,tot = 1,tot1;\nbool chos[maxn],vis[maxn];\nstruct edge{\n\tint to,nex;\n}e[maxn<<1],e1[maxn<<1];\ninline void add(int u,int v){\n\te[++tot] = (edge){v,head[u]};\n\thead[u] = tot;\n}\ninline int rd(){\n\tint res = 0,f = 0;\n\tchar ch = getchar();\n\tfor(;ch > '9' || ch < '0';ch = getchar()) if(ch == '-') f = 1;\n\tfor(;ch >= '0' && ch <= '9';ch = getchar()) res = (res<<3) + (res<<1) + ch - 48;\n\treturn f ? -res : res;\n}\nvoid dfs(int u){\n\tvis[u] = 1;\n\tfor(ri i = head[u];i;i = e[i].nex){\n\t\tint v = e[i].to;\n\t\tif(vis[v]) continue;\n\t\ted[v] = i >> 1;\n\t\tf[v] = u;\n\t\te1[++tot1] = (edge){v,head1[u]};\n\t\thead1[u] = tot1;\n\t\tdfs(v);\n\t}\n}\nvoid solve(int x){\n\tfor(ri i = head1[x];i;i = e1[i].nex) solve(e1[i].to);\n\tif(du[x] == d[x] || d[x] == -1 || x == 1) return;\n\tchos[x] = 1;\n\tdu[x] ^= 1; du[f[x]] ^= 1;\n\treturn;\n}\nvoid change(int x){//\u628ax\u5230root\u7684\u8fb9\u7684\u72b6\u6001\u5168\u90e8\u53d6\u53cd\n\twhile(x != 1){\n\t\tchos[x] ^= 1;\n\t\tdu[x] ^= 1; du[f[x]] ^= 1;\n\t\tx = f[x];\n\t}\n\treturn;\n}\nint ans[maxn],cnt = 0;\nint cp = -1;\nvoid write(int x){\n\tif(x > 9) write(x / 10);\n\tputchar(x % 10 + 48);\n}\nvoid prin(int x){\n\tif(x < 0) putchar('-'),x = -x;\n\twrite(x);\n}\nint main(){\n\tn = rd(); m = rd();\n\tfor(ri i = 1;i <= n;++i){\n\t\td[i] = rd();\n\t\tif(!(~d[i]) && !(~cp)) cp = i;//cp -> changing positon\n\t}\n\tfor(ri i = 1,u,v;i <= m;++i)\n\t\tu = rd(),v = rd(),add(u,v),add(v,u);\n\tdfs(1);//\u5efa\u6811\n\tsolve(1);//\u6309\u5148\u4fdd\u8bc1\u513f\u5b50\u6ee1\u8db3\u7684\u65b9\u5f0f\u9012\u5f52\u5904\u7406\u6574\u68f5\u6811\n\tif(~d[1] && du[1] ^ d[1] && (~cp)) change(cp);//\u9700\u8981change\u5e76\u4e14\u53ef\u4ee5change\n\tif(~d[1] && du[1] ^ d[1]){\n\t\tputs(\"-1\");\n\t\treturn 0;\n\t}\n\tfor(ri i = 2;i <= n;++i)\n\t\tif(chos[i]) ans[++cnt] = ed[i];\n\tprin(cnt); puts(\"\");\n\tfor(ri i = 1;i <= cnt;++i) prin(ans[i]),putchar(' ');\n\tputs(\"\");\n\treturn 0;\n}\n\n```\n\n~~\u5b8c\u7ed3\u6492\u82b1//QwQ///~~",
        "postTime": 1622385673,
        "uid": 108111,
        "name": "Lumos\u58f9\u7396\u8d30\u58f9",
        "ccfLevel": 0,
        "title": "CF840B Leha and another game about graph"
    }
]