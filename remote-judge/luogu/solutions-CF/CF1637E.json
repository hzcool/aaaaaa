[
    {
        "content": "## \u7ffb\u8bd1\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u4e3a $n$ \u7684\u6570\u5217 $a$\uff0c\u8bbe $cnt_x$ \u4e3a $x$ \u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5bf9 $a$ \u4e2d\u51fa\u73b0\u8fc7\u7684\u4efb\u610f\u4e24\u4e2a\u4e0d\u540c\u6570 $x,y$ \u5b9a\u4e49 $f_{x,y}=(cnt_x+cnt_y)(x+y)$\u3002\u73b0\u5728\u6709 $m$ \u4e2a\u65e0\u5e8f\u4e0d\u5408\u6cd5\u5bf9 $(x_i,y_i)$\uff0c\u6c42\u6240\u6709\u5408\u6cd5\u5bf9\u4e2d\uff0c$f_{x,y}$ \u7684\u6700\u5927\u503c\u3002\n## \u9898\u89e3\n\u6b64\u9898\u5229\u7528\u5747\u644a\u590d\u6742\u5ea6\uff0c\u4f7f\u4e00\u4e2a\u770b\u8d77\u6765\u50cf\u66b4\u529b\u7684\u7b97\u6cd5\u901a\u8fc7\u3002\n\n\u8003\u8651\u6700\u66b4\u529b\u7684\u505a\u6cd5\uff1a\u6211\u4eec\u679a\u4e3e $x$ \u548c $y$\uff0c\u7136\u540e\u8ba1\u7b97\u5b83\u4eec\u7684\u8d21\u732e\uff0c\u4e0d\u5408\u6cd5\u5bf9\u7528 `std::set` \u4e4b\u7c7b\u7684\u5b58\u4e0b\u6765\u67e5\u627e\u3002\n\n\u8fd9\u4e2a\u4e1c\u897f\u590d\u6742\u5ea6\u662f\u7206\u70b8\u7684\uff0c\u6211\u4eec\u8003\u8651\u5982\u4f55\u4f18\u5316\u3002\n\n\u6ce8\u610f\u5230\u6240\u6709 $cnt_x$ \u52a0\u8d77\u6765\u662f $n$\uff08\u5e9f\u8bdd\uff09\uff0c\u8003\u8651\u5148\u679a\u4e3e $cnt_y\\le cnt_x$ \u518d\u679a\u4e3e $y$\u3002\u5bb9\u6613\u53d1\u73b0\u8fd9\u6837\u548c\u4e0a\u9762\u7684\u679a\u4e3e\u65b9\u5f0f\u7b49\u4ef7\uff0c\u5e76\u4e14\u5916\u9762\u4e24\u5c42\u5747\u644a $O(n)$\u3002\n\n\u518d\u8003\u8651\u5185\u5c42\u7684\u590d\u6742\u5ea6\uff0c\u6211\u4eec\u4ece\u5927\u5230\u5c0f\u679a\u4e3e $y$\uff0c\u8fd9\u6837\u53ea\u6709 $(x,y)$ \u4e0d\u5408\u6cd5\u6216 $x=y$ \u65f6\u4f1a\u8df3\u8fc7\uff0c\u5426\u5219\u76f4\u63a5\u66f4\u65b0\u7b54\u6848\u8df3\u51fa\u5faa\u73af\u3002\u663e\u7136\u6bcf\u4e2a\u4e0d\u5408\u6cd5\u5bf9\u6700\u591a\u88ab\u5224\u65ad\u4e00\u6b21\uff0c$x=y$ \u6700\u591a\u6210\u7acb $n$ \u6b21\uff0c\u90a3\u4e48\u5185\u5c42\u5747\u644a\u662f $O(n\\log n)$ \u7684\u3002\n## \u4ee3\u7801\n\u6838\u5fc3\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\nconst int N=400010;\nint T,n,m,a[N],t[N],cnt[N];\nsigned main(){\n  Read(T);\n  while(T--){\n    memset(cnt,0,sizeof cnt);\n    Read(n),Read(m);set<pii > s;\n    for(int i=1;i<=n;i++)Read(a[i]),t[i]=a[i];\n    sort(t+1,t+1+n);int tmp=unique(t+1,t+1+n)-t-1;\n    int mx=0;\n    for(int i=1;i<=n;i++){\n      a[i]=lower_bound(t+1,t+1+tmp,a[i])-t;\n      cnt[a[i]]++,mx=max(mx,cnt[a[i]]);\n    }\n    vector<vector<int> > ps(mx+1);\n    for(int i=1;i<=tmp;i++)ps[cnt[i]].pub(i);\n    for(int i=1,u,v;i<=m;i++){\n      Read(u),Read(v),s.insert(mp(min(u,v),max(u,v)));\n    }\n    int ans=0;\n    for(int x=1;x<=tmp;x++){\n      for(int j=1;j<=cnt[x];j++){//cnt_y\n        for(int o=(int)ps[j].size()-1;~o;o--){\n          int y=ps[j][o];\n          if(y==x)continue;\n          if(s.find(mp(min(t[x],t[y]),\\\n          max(t[x],t[y])))!=s.end())continue;\n          ans=max(ans,(t[x]+t[y])*(cnt[x]+j));\n          break;\n        }\n      }\n    }\n    printf(\"%lld\\n\",ans);\n  }\n  KafuuChino HotoKokoa\n}\n```\n\u6211\u7684\u5b9e\u73b0\u6709\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u7ec6\u8282\uff0c\u5c31\u662f\u5728\u679a\u4e3e $y$ \u65f6\uff0c`ps[j]` \u53ef\u80fd\u662f\u7a7a\u7684\uff0c\u6240\u4ee5\u9700\u8981\u5c06 `ps[j].size()` \u5f3a\u8f6c\u6210 `int` \u9632\u6b62\u65e0\u7b26\u53f7\u6574\u6570\u6ea2\u51fa\u3002",
        "postTime": 1644741385,
        "uid": 220524,
        "name": "_ajthreac_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1637E"
    },
    {
        "content": "### $\\text{Difficulty : 2100}$\n---\n### \u89e3\u9898\u601d\u8def\uff1a\n\n\u672c\u9898\u6700\u5173\u952e\u7684\u6027\u8d28\u5c31\u662f $cnt$ \u6700\u591a\u53ea\u4f1a\u6709 $\\sqrt n$ \u79cd\u53d6\u503c\uff0c\u53ef\u4ee5\u4ece\u8fd9\u4e2a\u89d2\u5ea6\u5165\u624b\u3002\n\n\u679a\u4e3e $x$ \u548c $y$ \u7684 $cnt$\uff0c\u7136\u540e\u5728\u8fd9\u4e9b\u76f8\u7b49\u7684 $cnt$ \u4e2d\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\u6240\u6709\u7684\u53d6\u503c\uff0c\u52a0\u4e00\u4e2a\u6700\u4f18\u6027\u526a\u7eb8\u5c31\u53ef\u4ee5\u4e86\u3002\n\n---\n### \u590d\u6742\u5ea6\u5206\u6790\uff1a\n\n\u679a\u4e3e\u4e24\u79cd $cnt$ \u7684\u53d6\u503c\u7684\u590d\u6742\u5ea6\u662f $O(n)$ \u7684\uff0c\u5185\u5c42\u7b2c\u4e8c\u5c42\u5faa\u73af\u4e00\u65e6\u8fdb\u884c\u4e00\u6b21\u66f4\u65b0\u4e4b\u540e\u5c31\u76f4\u63a5\u9000\u51fa\uff0c\u7b2c\u4e00\u5c42\u5faa\u73af\u53ea\u8981\u8fdb\u884c\u4e00\u6b21\u66f4\u65b0\u5c31\u4e0d\u53ef\u80fd\u5728\u90a3\u4e2a\u4f4d\u7f6e\u5411\u540e\u7684\u4f4d\u7f6e\u66f4\u65b0\uff0c\u6240\u4ee5\u603b\u8bbf\u95ee\u6b21\u6570\u662f $O(m)$ \u7684\u3002\u5904\u7406\u7684\u603b\u590d\u6742\u5ea6\u4e3a $O(m+n)$\uff0c\u7a0b\u5e8f\u603b\u590d\u6742\u5ea6 $O(n\\log n)$\uff0c\u74f6\u9888\u5728\u6392\u5e8f\u3002\n\n---\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include<map>\n#include<vector>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n#define int long long\nconst int MAXN=300005;\nint n,m,a[MAXN],T,x,y,ans;\nvector <int> v[MAXN],rec;\nmap <pair<int,int>,bool> s;\nmap <int,int> cnt;\nbool cmd(int x,int y){return x>y;}\nvoid init(){\n\tans=0;\n\tfor(int i=0;i<rec.size();i++)v[rec[i]].clear();\n\trec.clear();\n\ts.clear();\n\tcnt.clear();\n\tn=m=0;\n}\nsigned main(){\n\tscanf(\"%I64d\",&T);\n\twhile(T--){\n\t\tscanf(\"%I64d%I64d\",&n,&m);\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tscanf(\"%I64d\",&a[i]);\n\t\t\tcnt[a[i]]++;\n\t\t}\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif(cnt[a[i]]!=0){\n\t\t\t\tv[cnt[a[i]]].push_back(a[i]);\n\t\t\t\tif(v[cnt[a[i]]].size()==1)rec.push_back(cnt[a[i]]);\n\t\t\t\tcnt[a[i]]=0;\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<rec.size();i++)sort(v[rec[i]].begin(),v[rec[i]].end(),cmd);\n\t\t\n\t\tfor(int i=1;i<=m;i++){\n\t\t\tscanf(\"%I64d%I64d\",&x,&y);\n\t\t\ts[make_pair(x,y)]=1;\n\t\t\ts[make_pair(y,x)]=1;\n\t\t}\n\t\t\n\t\tfor(int i=0;i<rec.size();i++)\n\t\tfor(int j=i;j<rec.size();j++){\n\t\t\tfor(int k=0;k<v[rec[i]].size();k++)\n\t\t\tfor(int l=0;l<v[rec[j]].size();l++){\n\t\t\t\tx=v[rec[i]][k];\n\t\t\t\ty=v[rec[j]][l];\n\t\t\t\tif(x==y)continue;\n\t\t\t\tif((rec[i]+rec[j])*(x+y)<ans)break;\n\t\t\t\tif(s[make_pair(x,y)]==0){\n\t\t\t\t\tans=(rec[i]+rec[j])*(x+y);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%I64d\\n\",ans);\n\t\tinit();\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1648517080,
        "uid": 223559,
        "name": "qxp101",
        "ccfLevel": 6,
        "title": "CF1637E Best Pair \u9898\u89e3"
    },
    {
        "content": "\u770b\u5230\u5173\u4e8e\u51fa\u73b0\u6b21\u6570\u7684\u9898\u76ee\uff0c\u53ef\u4ee5\u8003\u8651\u6839\u53f7\u5206\u6cbb\u3002\n\n\u5c06\u6240\u6709\u6570\u5206\u4e3a\u51fa\u73b0\u6b21\u6570\u5206\u522b\u5728 $[1,\\sqrt{n}]$ \u548c $(\\sqrt{n},n]$ \u7684\u4e24\u90e8\u5206\u3002\n\n- \u5bf9\u4e8e $cnt_x>\\sqrt{n}$ \u7684\u6570 $x$\uff0c\u8fd9\u6837\u7684\u6570\u4e0d\u8d85\u8fc7 $\\sqrt{n}$ \u4e2a\uff0c\u53ef\u4ee5\u628a\u6bcf\u4e2a $x$ \u679a\u4e3e $y=1 \\sim n$\uff0c\u627e\u5230\u4e0e\u5176\u5339\u914d\u5408\u6cd5\u7684\u6570 $y$ \u5e76\u8fdb\u884c\u8ba1\u7b97\u3002\n\n\u5982\u679c\u67e5\u67d0\u4e2a\u6570\u5b57 $a$ \u5728\u5e8f\u5217\u4e2d\u51fa\u73b0\u6b21\u6570\u76f4\u63a5\u7528 `std::map` \u5b58\uff0c\u90a3\u8fd9\u4e00\u90e8\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\mathcal{O}(n \\sqrt{n} \\log n)$\u3002\n\n- \u5bf9\u4e8e\u5269\u4e0b\u7684\u60c5\u51b5\uff0c\u5373 $cnt_x,cnt_y \\le \\sqrt{n}$ \u65f6\uff0c\u8003\u8651\u6539\u53d8\u679a\u4e3e\u5bf9\u8c61\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5f00 $\\lfloor\\sqrt{n}\\rfloor$ \u4e2a\u4e0d\u5b9a\u957f\u6570\u7ec4 $v$\uff0c$v_i$ \u8bb0\u5f55\u6240\u6709\u6ee1\u8db3 $cnt_x=i$ \u7684 $x$\u3002\n\n\u5047\u8bbe\u786e\u5b9a\u4e86 $x,cnt_x,cnt_y$\uff0c\u90a3\u4e48\u53ea\u8981 $y$ \u8d8a\u5927\uff0c$(x+y)(cnt_x+cnt_y)$ \u5c31\u8d8a\u5927\u3002\n\n\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $1 \\le i \\le \\lfloor\\sqrt{n}\\rfloor$\uff0c\u5c06 $v_i$ \u5185\u6570\u5b57**\u4ece\u5927\u5230\u5c0f\u6392\u5e8f**\u3002\n\n\u6211\u4eec\u5148\u679a\u4e3e\u4e00\u4e2a\u6570 $x$\uff0c\u518d\u679a\u4e3e\u53e6\u4e00\u4e2a\u6570\u7684\u51fa\u73b0\u6b21\u6570 $cnt$\u3002\u5bf9\u4e8e\u67d0\u4e2a $cnt$\uff0c\u6309\u7167\u987a\u5e8f\u679a\u4e3e\u6570\u7ec4\uff0c\u5982\u679c\u627e\u5230\u7b2c\u4e00\u4e2a\u4e0e $x$ \u80fd\u5339\u914d\u7684\u6570 $y$\uff0c\u5c31**\u8ba1\u7b97\u8d21\u732e\u5e76\u9009\u62e9\u8f83\u5927\u7b54\u6848**\uff0c\u5e76**\u76f4\u63a5\u9000\u51fa\u679a\u4e3e**\u3002\n\n\u76f4\u63a5\u9000\u51fa\u679a\u4e3e\u7684\u539f\u56e0\u662f\u5176\u4f59\u4e09\u4e2a\u91cf**\u4e0d\u53d8**\u7684\u65f6\u5019\uff0c$y$ \u53d8\u5c0f\u4e86\uff0c\u7b54\u6848\u663e\u7136\u4e0d\u4f18\u3002\n\n\u597d\u4e86\uff0c\u73b0\u5728\u8ba9\u6211\u4eec\u770b\u4e0b\u8fd9\u6b65\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5427\u3002\n\n\u5982\u679c\u6240\u6709\u4e0d\u540c\u7684\u6570\u53ef\u4ee5\u4e92\u76f8\u5339\u914d\uff08\u5373 $m=0$\uff09\uff0c\u90a3\u4e48\u6bcf\u4e2a $x$ \u53ea\u4f1a\u627e $\\sqrt{n}$ \u4e2a\u6570\u3002\n\n\u8003\u8651\u52a0\u4e0a\u4e0d\u5408\u6cd5\u5339\u914d\u7684\u5f71\u54cd\u3002\u7531\u4e8e $1 \\sim n$ \u7684\u6240\u6709 $x$ \u95f4\u53ea\u6709 $2m$ \u7ec4\u4e0d\u5408\u6cd5\u5339\u914d\uff0c\u6240\u4ee5\u4e0a\u8ff0\u6b65\u9aa4\u53ef\u80fd\u4f1a\u52a0\u4e0a $2m$ \u6b21\u7684\u989d\u5916\u9519\u8bef\u679a\u4e3e\u3002\n\n\u5982\u679c\u8fd8\u662f\u7528 `map` \u5224\u65ad\u4e0d\u5408\u6cd5\u6570\u5bf9\uff0c\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\mathcal{O}((n \\sqrt{n}+m) \\log n)$\u3002\n\n------------\n\n\u4f46\u662f\u8fd9\u9898\u7684 $n,m \\le 3 \\times 10^5$\uff0c\u4e0a\u9762\u8fd9\u4e2a\u590d\u6742\u5ea6\u770b\u7740\u5c31\u8fc7\u4e0d\u53bb\uff0c\u4f55\u51b5 `map` \u5e38\u6570\u5de8\u5927\u3002\n\n\u6240\u4ee5\u8fd8\u662f\u8981\u6293\u4f4f\u9898\u76ee\u7684\u9650\u5236\u6761\u4ef6\u5206\u6790\u5e76\u505a\u4e00\u4e9b\u4f18\u5316\uff1a\n\n- \u57fa\u7840\u5e38\u6570\u4f18\u5316\uff0c\u4f8b\u5982\u964d\u4f4e `map` \u7684\u63d2\u5165\u3001\u8c03\u7528\u6b21\u6570\u3002\n- \u8bb0\u5f55\u5b8c\u6bcf\u4e2a\u6570\u7684\u51fa\u73b0\u6b21\u6570\u540e\uff0c\u5c06\u5e8f\u5217\u6392\u5e8f\uff0c\u5e76\u53bb\u91cd\u3002\n\n\u6392\u5e8f\u53ef\u4ee5\u51cf\u5c11\u4e00\u534a\u7684\u679a\u4e3e\u91cf\uff0c\u800c\u53bb\u91cd\u7684\u610f\u4e49\u5f88\u5927\u3002\u5982\u679c $cnt_x>1$ \u7684\u6570\u5f88\u591a\uff0c\u90a3\u53bb\u91cd\u540e $n$ \u5c31\u4f1a\u5927\u5e45\u5ea6\u53d8\u5c0f\u3002\n\n\u53cd\u4e4b\uff0c\u5982\u679c\u53bb\u91cd\u5f97\u5c11\uff0c\u90a3 $cnt_x>\\sqrt{n}$ \u7684\u6570 $x$ \u66f4\u5c11\uff0c\u679a\u4e3e\u91cf\u6c38\u8fdc\u65e0\u6cd5\u5230\u8fbe\u590d\u6742\u5ea6\u7406\u8bba\u6700\u5927\u503c\u3002\n\n\u56e0\u6b64\u8fd9\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u8fdc\u8dd1\u4e0d\u6ee1\u7684\uff0c\u5982\u679c\u8fd8\u662f\u4e0d\u653e\u5fc3\uff0c\u53ef\u4ee5\u81ea\u5df1\u9020\u5927\u6570\u636e\u8dd1\u8dd1\u3002\n\n-----------\n\n\u4eca\u5929\u4e0a\u5348\u53d1\u73b0\u505a\u6cd5 `MLE on test 77` \u4e86\uff0c\u53d1\u73b0\u662f `map` \u7684\u95ee\u9898\u3002\u56e0\u4e3a `map` \u5f53\u6570\u7ec4\u7528\uff0c\u67e5\u8be2\u7684\u65f6\u5019 `map` \u5185\u90e8\u4f1a\u52a0\u5165\u65b0\u7684\u8282\u70b9\uff0c\u4ece\u800c\u6d6a\u8d39\u5927\u91cf\u7a7a\u95f4\uff0c\u5bfc\u81f4 MLE\u3002\n\n\u5982\u679c\u53ea\u60f3\u67e5\u8be2\u67d0\u4e2a\u6570\u662f\u5426\u5b58\u5728\uff0c\u90a3\u4e48\u5efa\u8bae\u4f7f\u7528 `.find()` \u6216 `.count()`\u3002\u5f53\u7136\u4e5f\u53ef\u4ee5\u9009\u62e9\u5199\u66f4\u5feb\u7684\u54c8\u5e0c\u3002\n\n\u4e0b\u9762\u8d34\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\nint t, n, m, a[N], sz, lim, len;\nint seq[N], val[N], vis[N];\nmap <int, int> cnt;\nmap <pair <int, int>, int> M;\nvector <int> v[710];\nll ans;\n \nbool cmp(int a, int b){\n\treturn a > b;\n}\ninline ll max(ll a, ll b){\n\treturn a > b ? a : b;\n}\ninline int read(){\n\tint num = 0;\n\tchar c = getchar();\n\twhile(c < '0' || c > '9') c = getchar();\n\twhile(c >= '0' && c <= '9') num = num * 10 + c - '0', c = getchar();\n\treturn num; \n}\n \nint main(){\t\n\tscanf(\"%d\", &t);\n\twhile(t--){\n\t\tn = read(), m = read(), cnt.clear(), M.clear(), lim = (int)sqrt(n);\n\t\tfor(int i = 1; i <= n; i++)\n\t\t\ta[i] = read(), cnt[a[i]]++;\n\t\tsort(a + 1, a + n + 1), n = unique(a + 1, a + n + 1) - a - 1, sz = 0;\t// \u53bb\u91cd\n\t\tfor(int i = 1; i <= n; i++){\n\t\t\tif(cnt[a[i]] >= lim)\n\t\t\t\tseq[++sz] = a[i];\n\t\t\tval[i] = cnt[a[i]];\n\t\t}\n\t\tfor(int i = 1, u, v; i <= m; i++)\n\t\t\tu = read(), v = read(), M[make_pair(u, v)] = 1;\n\t\tans = 0;\n\t\tfor(int i = 1, num; i <= sz; i++){\n\t\t\tnum = cnt[seq[i]];\n\t\t\tfor(int j = 1; j <= n; j++)\n\t\t\t\tif(seq[i] != a[j] && !M.count(make_pair(seq[i], a[j])) && !M.count(make_pair(a[j], seq[i])))\n\t\t\t\t\tans = max(ans, 1ll * (num + val[j]) * (a[j] + seq[i]));\n\t\t}\n\t\tfor(int i = 1; i <= lim; i++) \n\t\t\tv[i].clear();\n\t\tfor(int i = 1, num; i <= n; i++){\n\t\t\tnum = cnt[a[i]];\n\t\t\tif(num < lim) v[num].push_back(a[i]);\n\t\t}\n\t\tfor(int i = 1; i <= lim; i++)\n\t\t\tsort(v[i].begin(), v[i].end(), cmp);\n\t\tfor(int i = 1, num; i <= n; i++){\n\t\t\tnum = cnt[a[i]];\n\t\t\tif(num < lim)\n\t\t\t\tfor(int j = lim - 1; j >= 1; j--)\n\t\t\t\t\tfor(auto k : v[j]){\n\t\t\t\t\t\tif(k <= a[i]) break;\t\t// \u5c0f\u526a\u679d\uff0c\u53ea\u679a\u4e3e\u6bd4\u81ea\u5df1\u5927\u7684\u6570\n\t\t\t\t\t\tif(!M.count(make_pair(a[i], k))){\n\t\t\t\t\t\t\tans = max(ans, 1ll * (num + j) * (k + a[i]));\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t}\n\t\tprintf(\"%lld\\n\", ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1644723141,
        "uid": 87573,
        "name": "HoshizoraZ",
        "ccfLevel": 7,
        "title": "CF1637E Best Pair \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u4e2a\u4e0d\u7b97\u6839\u53f7\u5206\u6cbb\uff08\uff1f\uff09\u4f46\u662f\u5e26\u6839\u53f7\u7684\u505a\u6cd5\u3002\u3002\u3002\n\n**\u505a\u6cd5**\n\n$\\text{Part 1}$ \u9884\u5904\u7406\n\n* \u5c06 $a$ \u6570\u7ec4\u79bb\u6563\u5316\n* \u8bb0\u5f55\u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684 $cnt$ \u503c\uff0c\u5e76\u628a\u5b83\u4eec\u90fd\u653e\u5230\u4e00\u4e2a $\\texttt{vector}$ \u4e2d\n* \u5bf9\u4e8e\u6bcf\u4e00\u4e2a $cnt$ \u503c $y$ \uff0c\u5982\u679c $cnt_x = y$ \uff0c\u90a3\u4e48\u5c06 $x$ \u653e\u5230 $y$ \u5bf9\u5e94\u7684 $\\texttt{vector}$ \u5f53\u4e2d\uff0c\u5e76\u5c06\u8fd9\u91cc\u6bcf\u4e2a $\\texttt{vector}$ \u6392\u5e8f\n\n\u4e00\u8a00\u4ee5\u853d\u4e4b\uff0c\u5c31\u662f\u4e3a\u4e0b\u9762\u7edf\u8ba1\u7b54\u6848\u505a\u4e86\u4e9b\u51c6\u5907\u3002\n\n$\\text{Part 2}$ \u7edf\u8ba1\u7b54\u6848\n\n\u8003\u8651\u5148\u679a\u4e3e $x$ \uff0c\u6b64\u65f6\u6211\u4eec\u77e5\u9053\u4e86 $cnt_x$ \uff0c\u7136\u540e\u6211\u4eec\u679a\u4e3e $cnt_y$ \uff0c\u663e\u7136\u6211\u4eec\u9700\u8981\u7684\u5c31\u662f $y$ \u6700\u5927\u3002\u5982\u4f55\u5f97\u5230\u6700\u5927\u7684 $y$ \u5462\uff0c\u8fd9\u5c31\u9700\u8981\u9884\u5904\u7406\u7684 $cnt$ \u503c\u4e3a $cnt_y$ \u5bf9\u5e94\u7684 $\\texttt{vector}$ \u4e86\u3002\u5982\u679c\u6ca1\u6709 $\\texttt{bad pair}$ \u7684\u8bdd\uff0c\u95ee\u9898\u5c06\u53d8\u4e3a\u76f4\u63a5\u627e $\\texttt{vector}$ \u4e2d\u7684\u6700\u5927\u503c\uff0c\u90a3\u4e48\u6211\u4eec\u7075\u673a\u4e00\u52a8\uff1a\u628a $\\texttt{bad pair}$ \u6253\u4e2a\u8bb0\u53f7\u4e0d\u5c31\u884c\u4e86\u5417\uff0c\u627e\u6700\u5927\u503c\u65f6\u76f4\u63a5\u7565\u8fc7\u3002\n\n\u4f2a\u4ee3\u7801\u5927\u6982\u957f\u8fd9\u6837\n\n```\nfor i \u5728 [1, n] \u4e2d\n    for j \u662f\u4e00\u4e2a cnt \u503c\n       for k \u662f j \u5bf9\u5e94\u7684 vector \u4e2d\u7684\u503c\uff08\u4ece\u5927\u5230\u5c0f\uff09\n           if (i, k) \u4e0d\u662f bad pair \u4e14 i != k\n               ans \u66f4\u65b0\n```\n\n$\\text{Part 3}$ \u590d\u6742\u5ea6\u8bc1\u660e\n\n\u7b2c\u4e00\u773c\u770b\u4e0a\u53bb\uff0c\u8fd9\u50cf\u662f\u4e00\u4e2a $\\mathcal{O}(n ^ 3)$ \u7684\uff0c\u6bd5\u7adf\u6709 $3$ \u91cd\u5faa\u73af\u561b\uff0c\u4f46\u662f\u6211\u4eec\u60f3\u60f3\uff0c\u7b2c\u4e8c\u91cd\u5faa\u73af\u679a\u4e3e\u7684 $cnt$ \u503c\uff0c\u6700\u591a\u53ea\u6709 $\\mathcal{O}(\\sqrt n)$ \u4e2a\uff01\uff01\uff01\u800c\u7b2c\u4e09\u91cd\u5faa\u73af\u679a\u4e3e\u7684 $k$ \u7684\u6b21\u6570\u7684\u548c\uff0c\u5927\u6982\u662f $\\mathcal{O}(m)$ \u7684\u3002\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u662f $\\mathcal{O}(n\\sqrt n)$ \u3002\n\n\u8fd9\u4e2a\u590d\u6742\u5ea6\u5b9e\u5728\u6709\u70b9\u70c2\uff0c\u4f46\u80fd\u8fc7\uff0c\u60f3\u5b66\u4e60\u66f4\u597d\u7684\u505a\u6cd5\u8bf7\u79fb\u6b65\u5176\u5b83\u9898\u89e3\u3002\n\n$\\text{Part 4}$ \u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n\nusing namespace std;\n\nconst int NR = 3e5 + 5;\n\nint T, n, m, mx, a[NR], b[NR], c[NR], cnt[NR], vis[NR], viss[NR];\nlong long ans;\nvector < int > diffcnt, bad[NR];\nvector < pair < int, int > > cntisx[NR];\n\ninline int read() {\n    register int x = 0; register char c = getchar();\n    while (c < '0' || c > '9') c = getchar();\n    while (c >= '0' && c <= '9') x = (x << 1) + (x << 3) + c - '0', c = getchar();\n    return x;\n}\n\ninline void solve() {\n    n = read(), m = read(), ans = 0; \n    for (int i = 1; i <= n; ++i) a[i] = read(), b[i] = a[i], cnt[i] = 0, viss[i] = 0, vis[i] = 0, bad[i].clear(), cntisx[i].clear();\n    sort(a + 1, a + n + 1), sort(b + 1, b + n + 1), diffcnt.clear();\n    for (int i = 1; i <= n; ++i) c[i] = lower_bound(b + 1, b + n + 1, a[i]) - b, cnt[c[i]] ++;\n    for (int i = 1; i <= n; ++i) {\n        if (!vis[cnt[c[i]]]) diffcnt.push_back(cnt[c[i]]), vis[cnt[c[i]]] = 1;\n        cntisx[cnt[c[i]]].push_back(make_pair(a[i], c[i]));\n    }\n    for (auto x : diffcnt) sort(cntisx[x].begin(), cntisx[x].end());\n    for (int i = 1; i <= m; ++i) {\n        int x, y; x = read(), y = read();\n        bad[lower_bound(b + 1, b + n + 1, x) - b].push_back(lower_bound(b + 1, b + n + 1, y) - b);\n        bad[lower_bound(b + 1, b + n + 1, y) - b].push_back(lower_bound(b + 1, b + n + 1, x) - b);\n    }\n    for (int i = 1; i <= n; ++i) vis[i] = 0, sort(bad[i].begin(), bad[i].end());\n    for (int i = 1; i <= n; ++i) {\n        if (vis[c[i]]) continue;\n        vis[c[i]] = 1;\n        for (auto j : bad[c[i]]) viss[j] = 1;\n        for (auto j : diffcnt)\n            for (int k = cntisx[j].size() - 1; k >= 0; --k)\n                if (!viss[cntisx[j][k].second] && cntisx[j][k].first != a[i]) {\n                    ans = max(ans, 1ll * (a[i] + cntisx[j][k].first) * (cnt[c[i]] + j));\n                    break;\n                }\n        for (auto j : bad[c[i]]) viss[j] = 0;\n    }\n    printf(\"%lld\\n\", ans);\n}\n\nint main() {\n    T = read();\n    while (T --) solve();\n    return 0;\n}\n```",
        "postTime": 1644908795,
        "uid": 487027,
        "name": "rsgrubbish",
        "ccfLevel": 0,
        "title": "CF1637E Best Pair"
    },
    {
        "content": "\u6839\u53f7\u5206\u6cbb\uff08**\u8fd9\u4e0d\u662f\u8fd9\u9053\u9898\u6700\u7b80\u5355\u7684\u505a\u6cd5**\uff09\u3002\n\n\u9996\u5148\u9700\u8981\u79bb\u6563\u5316\uff08\u4e5f\u53ef\u4ee5\u7528 `map`/`unordered_map` \u4ee3\u66ff\u6570\u7ec4\uff09\uff0c\u4e0b\u6587\u5747\u4e3a\u79bb\u6563\u5316\u4e4b\u540e\u7684\u64cd\u4f5c\u3002\n\n\u5c06\u6240\u6709\u7684\u6570\u5206\u6210\u4e24\u4e2a\u96c6\u5408\uff1a\n\n1. $cnt[x]\\le\\sqrt{n}$\uff0c\u8fd9\u6837\u7684 $x$ \u6570\u91cf\u8f83\u591a\uff0c\u4f46 $cnt[x]$ \u5f88\u5c0f\uff0c\u5904\u7406\u65f6\u53ef\u4ee5\u8003\u8651\u76f4\u63a5\u679a\u4e3e $cnt[x]$ \u800c\u4e0d\u662f $x$\u3002\n\n2. $cnt[x]>\\sqrt{n}$\uff0c\u8fd9\u4e9b $x$ \u7684 $cnt[x]$ \u8f83\u5927\uff0c\u4f46\u8fd9\u79cd $x$ \u7684\u6570\u91cf\u5f88\u5c11\uff08$<\\sqrt{n}$\uff09\uff0c\u5904\u7406\u65f6\u76f4\u63a5\u679a\u4e3e $x$ \u5373\u53ef\u3002\n\n\u56de\u5230\u95ee\u9898\u4e0a\uff0c\u9898\u76ee\u8981 \u6c42 $(cnt[x]+cnt[y])(x+y)$ \u6700\u5927\u503c\uff0c\u5206\u522b\u8003\u8651 $x,y$ \u51fa\u81ea\u4e0a\u8ff0\u54ea\u4e2a\u96c6\u5408\uff08\u6ce8\u610f\u7279\u5224\u574f\u7684\u6570\u5bf9\uff09\uff1a\n\n\u6ce8\uff1a$t$ \u8868\u793a\u4e0a\u8ff0\u7b2c\u4e8c\u4e2a\u96c6\u5408\uff0c$vc[i](i\\le\\sqrt{n})$ \u8868\u793a\u6240\u6709\u6ee1\u8db3 $cnt[x]=i$ \u7684 $x$ \u6784\u6210\u7684\u96c6\u5408\uff0c$mp[x][y]=1$ \u8868\u793a\u6570\u5bf9 $(x,y)$ \u662f\u574f\u7684\uff08\u5982\u9898\uff09\uff0c$b[i]$ \u4e3a\u79bb\u6563\u5316\u6570\u7ec4\uff0c\u5b83\u4eec\u5728\u4ee3\u7801\u4e2d\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a\n\n```cpp\nlong long b[N];\n//\u4e58\u8d77\u6765\u4f1a\u8d85\u8fc7 int \u7684\u6700\u5927\u8303\u56f4\uff0c\u4e3a\u4e86\u5077\u61d2\u5168\u90e8\u5f00\u7684 long long\u3002\nvector<int> vc[N],t;\n//\u627e\u51fa\u6240\u6709 x \u540e\u6309\u964d\u5e8f\u6392\u5e8f\u3002<- \u6ce8\u610f\u8fd9\u70b9\u4ee5\u540e\u4f1a\u7528\u3002\nunordered_map<int,bool> mp[N];\n//mp[x].find(y)==mp[x].end() \u8868\u793a mp[x] \u4e2d\u4e0d\u5b58\u5728 y\uff0c\u5373 mp[x][y]!=1\u3002\n```\n\n1. $x,y$ \u5747\u51fa\u81ea\u4e0a\u8ff0\u7b2c\u4e8c\u4e2a\u96c6\u5408\uff0c\u7531\u4e8e\u8fd9\u7c7b\u6570\u6570\u91cf\u5f88\u5c11\uff0c\u76f4\u63a5\u679a\u4e3e $x,y$ \u5373\u53ef\u3002\n\n```cpp\nfor(auto x:t)\n    for(auto y:t) if(x!=y&&mp[x].find(y)==mp[x].end()) ans=max(ans,(cnt[x]+cnt[y])*(b[x]+b[y]));\n```\n\n2. $x,y$ \u5747\u51fa\u81ea\u4e0a\u8ff0\u7b2c\u4e00\u4e2a\u96c6\u5408\uff0c\u7531\u4e8e\u8fd9\u7c7b\u6570 $cnt$ \u5f88\u5c0f\uff0c\u76f4\u63a5\u679a\u4e3e $cnt[x],cnt[y]$ \u5373\u53ef\u3002\n\n```cpp\nfor(int i=1;i<=sq;++i)//cnt[x]\n    for(int j=i;j<=sq;++j)//cnt[y]\n        for(auto x:vc[i])\n            for(auto y:vc[j])\n                if(x!=y&&mp[x].find(y)==mp[x].end()){ans=max(ans,(cnt[x]+cnt[y])*(b[x]+b[y]));break;}\n//\u7531\u4e8e\u5728 cnt[x],cnt[y],x \u4e00\u5b9a\u65f6\u5e0c\u671b y \u5c3d\u53ef\u80fd\u5927\uff0c\u800c vc \u5df2\u6309\u964d\u5e8f\u6392\u5e8f\uff0c\u6545\u627e\u5230\u4e00\u7ec4\u53ef\u884c\u6570\u5bf9\u76f4\u63a5 break\u3002\n//\u7b2c 1,2 \u4e2a\u5faa\u73af\u603b\u6267\u884c\u6b21\u6570=n\u3002\n//\u6bcf\u7ec4\u574f\u7684\u6570\u5bf9\u5728\u7b2c 3,4 \u4e2a\u5faa\u73af\u4e2d\u6700\u591a\u51fa\u73b0\u4e24\u6b21\uff0c\u53c8\u56e0\u627e\u5230\u4e00\u7ec4\u53ef\u884c\u6570\u5bf9\u76f4\u63a5\u9000\u51fa\uff0c\u8fd9\u4e24\u4e2a\u5faa\u73af\u6700\u591a\u628a\u6240\u6709\u574f\u7684\u6570\u5bf9\u904d\u5386\u4e24\u6b21\uff0c\u5373\u603b\u6267\u884c\u6b21\u6570<=2*m\uff0c\u7b26\u5408\u65f6\u95f4\u8981\u6c42\u3002\n```\n\n3. $x$ \u51fa\u81ea\u4e0a\u8ff0\u7b2c\u4e8c\u4e2a\u96c6\u5408\uff0c$y$ \u51fa\u81ea\u4e0a\u8ff0\u7b2c\u4e00\u4e2a\u96c6\u5408\uff0c\u679a\u4e3e $x,cnt[y]$ \u5373\u53ef\u3002\n\n```cpp\nfor(auto x:t)\n    for(int i=1;i<=sq;++i)//cnt[y]\n        for(auto y:vc[i])\n            if(x!=y&&mp[x].find(y)==mp[x].end()){ans=max(ans,(cnt[x]+cnt[y])*(b[x]+b[y]));break;}\n//\u540c\u4e0a\n```\n\n\u6700\u540e\u8f93\u51fa ans \u5373\u53ef\uff0c\u5b8c\u6574 **\u53c2\u8003** \u4ee3\u7801 [$\\texttt{submission}$](https://codeforces.com/contest/1637/submission/146138192)\u3002",
        "postTime": 1644721201,
        "uid": 336653,
        "name": "include_BM",
        "ccfLevel": 0,
        "title": "CF1637E Best Pair"
    },
    {
        "content": "> CF1637E Best Pair\n\n\u9ad8\u5999\u9898\uff0c\u6bd4\u8d5b\u7684\u65f6\u5019\u628a\u6211\u9001\u8d70\u4e86\u3002\n\n\u8003\u8651\u76f4\u63a5\u679a\u4e3e $x$ \u548c $\\leq cnt_x$ \u7684\u6240\u6709 $cnt_y$\uff08\u8fd9\u4e00\u6b65\u7ebf\u6027\uff0c\u56e0\u4e3a $\\sum cnt_x = n$\uff09\uff0c\u6b64\u65f6 $x, cnt_x, cnt_y$ \u5747\u786e\u5b9a\u3002\u4ece\u5927\u5230\u5c0f\u68c0\u67e5 $x$ \u548c\u6700\u5927\u7684\u51fa\u73b0\u6b21\u6570\u4e3a $cnt_y$ \u7684 $y$ \u662f\u5426\u662f\u574f\u4e8c\u5143\u7ec4\u3002\u82e5\u662f\uff0c\u5219\u627e\u7b2c\u4e8c\u5927\u7684\uff0c\u76f4\u5230\u6240\u6709\u7b49\u4e8e $cnt_y$ \u7684 $y$ \u88ab\u904d\u5386\u5b8c\uff0c\u82e5\u4e0d\u662f\uff0c\u8bf4\u660e\u518d\u5f80\u4e0b\u627e\u4e00\u5b9a\u4e0d\u4f1a\u4f18\u4e8e\u5f53\u524d\u7684 $(x + y)(cnt_x + cnt_y)$\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u8be5\u5f0f\u5b50\u4ec5\u6709 $y$ \u53d8\u5c0f\u3002\n\n\u6211\u4eec\u6700\u591a\u4f1a\u7528 $n + m$ \u4e2a\u4e8c\u5143\u7ec4 $(x, y)$ \u66f4\u65b0\u7b54\u6848\uff08\u6700\u591a\u4f1a\u6709 $m$ \u6b21\u4e0d\u5408\u6cd5\u60c5\u51b5\uff0c\u7b2c\u4e00\u6b21\u5408\u6cd5\u5c31\u9000\u51fa\u4e86\uff09\uff0c\u6545\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}((n + m)\\log n)$\u3002[\u4ee3\u7801](https://codeforces.ml/contest/1637/submission/146186112)\u3002",
        "postTime": 1644719203,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "CF1637E Best Pair"
    },
    {
        "content": "### \u9898\u610f\r\n\r\n\u7ed9\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u6570\u7ec4 a\uff0c\u5b9a\u4e49 $cnt_x$ \u4e3a x \u8fd9\u4e2a\u503c\u5728 a \u4e2d\u7684\u51fa\u73b0\u6b21\u6570\u3002\u5b9a\u4e49\u51fd\u6570 $f(x,y)=(cnt_x+cnt_y)(x+y)$\uff08\u8981\u6c42 $x < y$\uff09\u3002\r\n\u8fd8\u7ed9\u51fa m \u4e2a\u65e0\u5e8f\u6570\u5bf9\uff0c\u79f0\u5176\u4e3a\u201c\u574f\u6570\u5bf9\u201d\u3002\r\n\r\n\u5bf9\u4e8e\u6240\u6709\u201c\u4e0d\u574f\u7684\u201d\u65e0\u5e8f\u6570\u5bf9 $(x,y)$\uff0c\u6c42\u51fa $f(x,y)$ \u7684\u6700\u5927\u503c\u3002\r\n\r\n$n,m\\le 3\\times 10^5,a_i \\le 10^9$\r\n\r\n### \u505a\u6cd5\r\n\r\n\u6211\u4eec\u5148\u628a a \u6392\u4e2a\u5e8f\uff0c\u7136\u540e\u76f8\u540c\u7684\u4e00\u6bb5\u7f29\u6210\u4e00\u4e2a\u4e8c\u5143\u7ec4 `{\u503c,\u51fa\u73b0\u4e2a\u6570}`\u3002\r\n\r\n---\r\n\r\n\u60f3\u60f3 m=0 \u548b\u505a\u3002\u60f3\u4e86\u534a\u5929\uff0c\u8fd9\u4e2a\u51fd\u6570\u4f3c\u4e4e\u6ca1\u6cd5\u786c\u7ef4\u62a4\uff0c\u53ea\u80fd\u5f80\u6027\u8d28\u65b9\u5411\u60f3~~\u5c24\u5176\u662f\u6839\u53f7\u65b9\u9762\u7684~~\u3002\r\n\r\n\u8003\u8651\u679a\u4e3e\u4e00\u4e2a y\uff0c\u770b\u770b\u54ea\u4e9b x \u53ef\u80fd\u6210\u4e3a\u7b54\u6848\u7684\uff1a\r\n\r\n- \u5982\u679c\u51fa\u73b0 $x_1>x_2$\uff0c\u6ee1\u8db3 $cnt_{x_1}\\ge cnt_{x_2}$ \u90a3 $x_2$ \u5fc5\u7136\u6ca1\u7528\r\n\r\n\u56e0\u6b64\uff0c\u6240\u6709\u53ef\u80fd\u6210\u4e3a\u7b54\u6848\u7684 x\uff0c\u90fd\u5728 y-1 \u5411\u5de6\u7684 cnt \u7684\u5355\u8c03\u6808\u4e0a\u3002\r\n\r\n\u56e0\u6b64\uff0c\u6211\u4eec\u53ea\u9700\u8981\uff1a\r\n\r\n- \u679a\u4e3e\u53f3\u7aef\u70b9 y\r\n    - \u4ee4 $x\\gets y-1$\r\n    - \u4e0d\u65ad\u8fdb\u884c\u76f4\u5230 $x=0$\uff1a\r\n        - \u7528 $f(x,y)$ \u66f4\u65b0\u7b54\u6848\r\n        - $x\\gets pre[x]$\r\n\r\n\u5185\u90e8\u6bcf\u5faa\u73af\u4e00\u6b21\uff0c$cnt_x$ \u81f3\u5c11\u589e\u52a0 1\uff0c\u800c $\\sum cnt_i=n$\uff0c\u6240\u4ee5\u5185\u90e8\u7684\u5faa\u73af\u6700\u591a\u4e0d\u4f1a\u8dd1\u8d85\u8fc7 $\\sqrt n$ \u6b21\uff0c\u590d\u6742\u5ea6 $O(n\\sqrt n)$\u3002\r\n\r\n---\r\n\r\n\u800c\u6709 m \u7684\u65f6\u5019\uff0c\u6211\u4eec\u7a0d\u5fae\u6539\u4e00\u4e0b\u5373\u53ef\uff1a\r\n\r\n- \u679a\u4e3e\u53f3\u7aef\u70b9 y\r\n    - \u4ee4 $x\\gets y-1$\r\n    - \u4e0d\u65ad\u8fdb\u884c\u76f4\u5230 $x=0$\uff1a\r\n        - \u5982\u679c $(x,y)$ \u662f\u597d\u7684\r\n            - \u7528 $f(x,y)$ \u66f4\u65b0\u7b54\u6848\r\n            - $x\\gets pre[x]$\r\n        - \u5426\u5219\r\n            - $x\\gets x-1$\r\n\r\n### \u4ee3\u7801\r\n\r\n\u8003\u8bd5\u7684\u65f6\u5019\u6c42\u524d\u9a71\u7684\u90e8\u5206\u5199\u9519\u4e86\u8c03\u534a\u5929\u6ca1\u8fc7\uff0c\u5410\u4e86\r\n\r\n```cpp\r\nconst char nl = '\\n';\r\nconst ll MXN = 1e6 + 5;\r\nconst ll INF = 1e18;\r\n\r\nll n, m, arr[MXN];\r\nchar str[MXN];\r\nvec<ll> bad[MXN];\r\n\r\nll v[MXN], cnt[MXN], pre[MXN];\r\nset<pi> last;\r\nbool ban[MXN];\r\nint main() {\r\n    /* freopen(\"test.in\", \"r\", stdin); */\r\n    /* freopen(\"test.out\", \"w\", stdout); */\r\n    ios::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    setp(6);\r\n    ll t;\r\n    cin >> t;\r\n    while (t--) {\r\n        cin >> n >> m;\r\n        for (ll i = 1; i <= n; i++) {\r\n            cin >> arr[i];\r\n            bad[i].clear();\r\n        }\r\n        sort(arr + 1, arr + 1 + n);\r\n        ll ind = 0;\r\n        for (ll i = 1; i <= n; i++) {\r\n            if (arr[i] != arr[i - 1]) {\r\n                ++ind;\r\n                v[ind] = arr[i];\r\n                cnt[ind] = 0;\r\n            }\r\n            ++cnt[ind];\r\n        }\r\n        cnt[0]=INF;\r\n        stack<ll> stk;\r\n        stk.push(0);\r\n        for (ll i = 1; i <= ind; i++) {\r\n            while(cnt[i]>=cnt[stk.top()])stk.pop();\r\n            pre[i] = stk.top();\r\n            stk.push(i);\r\n            /* cout << pre[i]; */\r\n        }\r\n        while (m--) {\r\n            ll x, y;\r\n            cin >> x >> y;\r\n            x = lower_bound(v + 1, v + 1 + ind, x) - v;\r\n            y = lower_bound(v + 1, v + 1 + ind, y) - v;\r\n            if (x > y) swap(x, y);\r\n            bad[y].push_back(x);\r\n        }\r\n        ll ir = ind, il, ans = 0;\r\n        while (ir) {\r\n            if (ban[ir])\r\n                --ir;\r\n            else {\r\n                for (ll nx : bad[ir]) ban[nx] = 1;\r\n                ll il = ir - 1;\r\n                while (il) {\r\n                    if (ban[il])\r\n                        --il;\r\n                    else {\r\n                        ans = max(ans, (cnt[il] + cnt[ir]) * (v[il] + v[ir]));\r\n                        il = pre[il];\r\n                    }\r\n                }\r\n                for (ll nx : bad[ir]) ban[nx] = 0;\r\n                --ir;\r\n            }\r\n        }\r\n        cout << ans << nl;\r\n    }\r\n    return 0;\r\n}\r\n```\r\n",
        "postTime": 1644855198,
        "uid": 124740,
        "name": "ethan_zhou",
        "ccfLevel": 8,
        "title": "\u3010\u9898\u89e3\u3011CF1637E Best Pair"
    },
    {
        "content": "\u7ed9\u5b9a\u5e8f\u5217 $a$\uff0c\u8bb0 $x$ \u5728 $a$ \u4e2d\u7684\u51fa\u73b0\u6b21\u6570\u4e3a $cnt_x$\uff0c\u4ee4 $f(x,y)=(cnt_x+cnt_y)(x+y)$\uff0c\u540c\u65f6\u7ed9\u51fa $m$ \u5bf9\u6570 $(x_i,y_i)$\uff0c\u6c42\u4e0d\u5728\u8fd9 $m$ \u5bf9\u6570\u4e2d\u7684 $(x,y)$ \u80fd\u5f97\u5230\u7684\u6700\u5927\u7684 $f(x,y)$\u3002\n\n---\n\norz @zbs140\u3002\n\n\u6ce8\u610f\u5230 $cnt$ \u6700\u591a\u6709 $O(\\sqrt{n})$ \u79cd\u53d6\u503c\uff0c\u6240\u4ee5\u6839\u636e $cnt$ \u5f00\u6876\uff0c\u679a\u4e3e $cnt_x$\uff0c$cnt_y$\u3002\u5728\u6bcf\u4e2a\u6876\u4e2d\u6839\u636e\u6570\u503c\u5012\u5e8f\u6392\u5e8f\uff0c\u7136\u540e\u679a\u4e3e\u3002\u5982\u679c\u662f\u4e0d\u80fd\u9009\u7684\u5c31\u5207\u5230\u4e0b\u4e00\u4e2a\u3002\u5982\u679c\u5df2\u7ecf\u6bd4\u5f53\u524d\u7b54\u6848\u5927\u5c31\u9000\u51fa\u3002\n\n\u663e\u7136\u5916\u5c42\u679a\u4e3e\u662f $O(n)$ \u7684\uff0c\u5185\u5c42\u603b\u5171\u4f1a\u679a\u4e3e $O(m)$ \u6b21\uff0c\u6838\u5fc3\u90e8\u5206\u662f\u7ebf\u6027\u7684\u3002\n\n---\n\n\u5982\u679c\u6ca1\u6709 $cnt$ \u7684\u6027\u8d28\u8fd9\u9053\u9898\u8fd8\u80fd\u505a\u5417\u2026\u2026\n\n```cpp\n/* name: 1637E\n * author: 5ab\n * created at: 22-02-12 23:30\n */\n#include <iostream>\n#include <set>\n#include <vector>\n#include <utility>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n\ntypedef long long ll;\nconst int max_n = 300000;\n\nint a[max_n], pa[max_n], b[max_n], cnt[max_n], bl;\nvector<int> cnts[max_n+1], cid;\nset<pair<int, int>> st;\n\ninline int s(int x) { return lower_bound(b, b + bl, x) - b; }\ninline bool cmp(int x, int y) { return x > y; }\ninline void chmax(ll& a, ll b) { if (a < b) a = b; }\n\nsigned main()\n{\n\tios_base::sync_with_stdio(false);\n\tcin.tie(nullptr);\n\t\n\tint cas, n, m;\n\tll ans;\n\t\n\tcin >> cas;\n\twhile (cas--)\n\t{\n\t\tcin >> n >> m, st.clear(), cid.clear();\n\t\tfor (int i = 0; i < n; i++)\n\t\t{\n\t\t\tcin >> a[i];\n\t\t\tb[i] = a[i];\n\t\t}\n\t\tsort(b, b + n);\n\t\tbl = unique(b, b + n) - b;\n\t\t\n\t\tfor (int i = 0, x, y; i < m; i++)\n\t\t{\n\t\t\tcin >> x >> y;\n\t\t\tst.emplace(x, y);\n\t\t}\n\t\t\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tcnt[pa[i]=s(a[i])]++;\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tif (cnt[pa[i]] > 0)\n\t\t\t{\n\t\t\t\tif (!cnts[cnt[pa[i]]].size())\n\t\t\t\t\tcid.push_back(cnt[pa[i]]);\n\t\t\t\tcnts[cnt[pa[i]]].push_back(a[i]);\n\t\t\t\tcnt[pa[i]] *= -1;\n\t\t\t}\n\t\t\n\t\tans = 0;\n\t\tsort(cid.begin(), cid.end(), cmp);\n\t\t\n\t\tfor (int _i = 0, i = cid[0]; _i < cid.size(); _i++, i = cid[_i])\n\t\t{\n\t\t\tsort(cnts[i].begin(), cnts[i].end(), cmp);\n\t\t\tfor (int _j = 0, j = cid[0]; _j <= _i; _j++, j = cid[_j])\n\t\t\t{\n\t\t\t\tfor (int _k = 0, k = cnts[i][_k]; _k < cnts[i].size(); _k++, k = cnts[i][_k])\n\t\t\t\t\tfor (int _l = 0, l = cnts[j][_l]; _l < cnts[j].size(); _l++, l = cnts[j][_l])\n\t\t\t\t\t{\n\t\t\t\t\t\tif (k == l)\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\tif (1ll * (i + j) * (k + l) < ans)\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tif (!st.count(make_pair(k, l)) && !st.count(make_pair(l, k)))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tchmax(ans, 1ll * (i + j) * (k + l));\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tcout << ans << endl;\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tif (cnt[pa[i]] < 0)\n\t\t\t{\n\t\t\t\tcnts[-cnt[pa[i]]].clear();\n\t\t\t\tcnt[pa[i]] = 0;\n\t\t\t}\n\t}\n\t\n\treturn 0;\n}\n```",
        "postTime": 1644835989,
        "uid": 119491,
        "name": "5ab_juruo",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011CF1637E Best Pair"
    },
    {
        "content": "# Solution\n\u9996\u5148\u601d\u8003\u6ca1\u6709 $m$ \u7684\u9650\u5236\u8be5\u600e\u4e48\u505a\u3002  \n\u56e0\u4e3a\u4e0d\u540c\u7684 $cnt$ \u6700\u591a\u53ea\u6709 $\\sqrt{n}$\uff0c\u8bbe $f_i$ \u4e3a $cnt_x=i$ \u7684\u6700\u5927\u7684 $x$\uff0c\u5219 $ans=\\max\\limits_{j=1}^{i-1}(f_i+f_j)\\times(i+j)$\uff0c\u590d\u6742\u5ea6 $O(N)$\u3002  \n\u52a0\u4e0a $m$ \u7684\u9650\u5236\u540e\u540c\u7406\uff0c\u6211\u4eec\u8bbe $p_i$ \u4e3a $cnt_x=i$ \u7684\u6570\u7ec4\uff0c\u5e76\u5bf9\u6bcf\u4e2a $p_i$ \u6570\u7ec4\u6309\u7167 $a_x$ \u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u3002\u7136\u540e\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a $i$\uff0c\u904d\u5386\u6bd4\u5b83\u5c0f\u7684 $j$\uff0c\u904d\u5386 $p_i$\uff0c\u627e\u5230 $p_j$ \u4e2d\u6700\u5927\u7684\u53ef\u4ee5\u548c\u5f53\u524d\u7684\u6570\u7ec4\u5408\u7684\u6570\uff0c\u66f4\u65b0\u7b54\u6848\u5373\u53ef\uff0c\u82e5\u5f53\u524d\u7684\u6570\u53ef\u4ee5\u548c $p_j$ \u4e2d\u6700\u5927\u7684\u6570\u7ec4\u5408\u5219\u505c\u6b62\u904d\u5386\uff0c\u5177\u4f53\u89c1\u4ee3\u7801\u3002  \n\u6bcf\u4e00\u6761\u9650\u5236\u6700\u591a\u53ea\u4f1a\u88ab\u904d\u5386\u4e00\u6b21\uff0c\u590d\u6742\u5ea6 $O(N\\log_2N)$\uff0c\u74f6\u9888\u5728\u4e8e\u6392\u5e8f\u3002\n# Code\n``` cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T> inline void read(T &x) {\n\tx= 0;\n\tchar c= getchar();  \n\twhile(!isdigit(c)) c= getchar();\n\twhile(isdigit(c)) x= x * 10 + (c & 15), c= getchar();\n}\n#define N 300001\nint n, m, t, a[N], b[N], cnt[N], nxt[N], l[N];\nlong long ans;\nbool vis[N];\nvector<int> p[N], k[N];\nint main() {\n\tint T;\n\tread(T);\n\twhile(T--) {\n\t\tread(n), read(m), ans= 0;\n\t\tfor(int i= 1; i <= n; i++) read(a[i]), b[i]= a[i], p[i].clear(), k[i].clear(), cnt[i]= 0, l[i]= 0;\n\t\tsort(b + 1, b + n + 1), t= unique(b + 1, b + n + 1) - b - 1;\n\t\tfor(int i= 1; i <= n; i++) a[i]= lower_bound(b + 1, b + t + 1, a[i]) - b, ++cnt[a[i]];\n\t\tfor(int i= 1; i <= t; i++) k[cnt[i]].push_back(i);\n\t\tnxt[n]= n + 1;\n\t\tfor(int i= n; i >= 1; i--) {\n\t\t\tif(!k[i].empty())\n\t\t\t\tk[i].push_back(0), nxt[i - 1]= i;\n\t\t\telse\n\t\t\t\tnxt[i - 1]= nxt[i];\n\t\t\tsort(k[i].begin(), k[i].end(), [](const int &a, const int &b) -> bool { return a > b; });\n\t\t}\n\t\tfor(int i= 1, x, y; i <= m; i++) {\n\t\t\tread(x), read(y), x= lower_bound(b + 1, b + t + 1, x) - b, y= lower_bound(b + 1, b + t + 1, y) - b;\n\t\t\tp[x].push_back(y), p[y].push_back(x);\n\t\t}\n\t\tfor(int i= 1; i <= t; i++) sort(p[i].begin(), p[i].end(), [](const int &a, const int &b) -> bool { return cnt[a] < cnt[b]; });\n\t\tfor(int i= nxt[0]; i <= n; i= nxt[i]) {\n\t\t\tfor(int j= nxt[0]; j <= i; j= nxt[j]) {\n\t\t\t\tfor(auto &o : k[i]) {\n\t\t\t\t\tif(o == 0) break;\n\t\t\t\t\tvis[o]= 1;\n\t\t\t\t\tint ma= 0;\n\t\t\t\t\twhile(l[o] < (int)p[o].size() && cnt[p[o][l[o]]] < j) ++l[o];\n\t\t\t\t\tint las= l[o];\n\t\t\t\t\twhile(l[o] < (int)p[o].size() && cnt[p[o][l[o]]] == j) vis[p[o][l[o]]]= 1, ++l[o];\n\t\t\t\t\twhile(vis[k[j][ma]]) ++ma;\n\t\t\t\t\tif(k[j][ma]) ans= max(ans, (long long)(i + j) * (b[o] + b[k[j][ma]]));\n\t\t\t\t\tfor(int s= las; s < l[o]; s++) vis[p[o][s]]= 0;\n\t\t\t\t\tma= 0;\n\t\t\t\t\tvis[o]= 0;\n\t\t\t\t\tif(las == l[o]) break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%lld\\n\", ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1644820514,
        "uid": 60075,
        "name": "pzc2004",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 of CF1637E Best Pair"
    },
    {
        "content": "#### \u601d\u8def\n\u4fee\u6b63 $x$ \u5e76\u904d\u5386 $cnt_y \\le cnt_x$\u3002\u7136\u540e\u6211\u4eec\u9700\u8981\u627e\u5230\u6240\u6709\u5143\u7d20\u7684\u6700\u5927 $y$\uff0c\u800c\u4e14\u6b63\u597d\u51fa\u73b0\u5728 $cnt_y$ \u6b21\uff0c\u6ee1\u8db3 $x \\neq y$ \u548c\u914d\u5bf9 $(x,y)$ \u4e0d\u662f\u574f\u7684\u3002\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u53ea\u9700\u904d\u5386\u6240\u6709\u5143\u7d20\uff0c\u8fd9\u4e9b\u5143\u7d20\u4ee5\u4e0d\u589e\u52a0\u7684\u987a\u5e8f\u6070\u597d\u51fa\u73b0 $cnt_y$ \u6b21\uff0c\u800c $pair(x,y)$ \u662f\u574f\u7684\u6216\u8005\u53ef\u80fd $x=y$\u3002\u5982\u679c\u627e\u5230\u8fd9\u6837\u7684 $y$\uff0c\u66f4\u65b0\u7b54\u6848\u5373\u53ef\u3002\n\n\u8981\u68c0\u67e5\u914d\u5bf9\u662f\u5426\u662f\u574f\u7684\uff0c\u53ea\u9700\u5c06\u6240\u6709\u914d\u5bf9\u6dfb\u52a0\u5230 set \u4e2d\uff0c\u7136\u540e\u68c0\u67e5\u914d\u5bf9\u662f\u5426\u5728 set \u4e2d\u3002\u6b64\u5916\uff0c\u8fd8\u53ef\u4ee5\u5bf9\u6240\u6709\u574f\u5bf9\u8fdb\u884c\u6392\u5e8f\uff0c\u5e76\u4f7f\u7528 bitset \u8fdb\u884c\u68c0\u67e5\u3002\u8fd9\u4e24\u79cd\u65b9\u6cd5\u90fd\u662f $O(logn)$\u3002\n\n#### Code\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nnamespace IO\n{\n\ttemplate < typename T > inline void write( T x )\n\t{\n\t    if(x < 0)\n\t        putchar('-') , x = - x;\n\t    if(x == 0)\n\t    {\n\t        putchar('0') ;\n\t        return ;\n\t    }\n\t    if(x > 9)\n\t        write(x / 10) ;\n\t    putchar(x % 10 + '0') ;\n\t    return ;\n\t}\n\ttemplate < typename T > inline void read( T &x )\n\t{\n\t    x = 0 ; int w = 1 ; char ch = getchar() ;\n\t    while( !isdigit( ch ) ) { if(ch == '-') w = -1 ; ch = getchar() ; }\n\t    while( isdigit( ch ) ) x = (x << 1) + (x << 3) + (ch ^ 48) , ch = getchar() ;\n\t    x *= w;\n\t}\n}\n\n#define writeln(x) write(x) , putchar('\\n')\n#define writesp(x) write(x) , putchar(' ')\nusing namespace IO ;\nvoid solve() {\n    int n, m;\n    cin >> n >> m;\n    vector<int> a(n);\n    map<int, int> cnt;\n    for (auto &x : a) {\n        cin >> x;\n        cnt[x]++;\n    }\n \n    vector<pair<int, int>> bad_pairs;\n    bad_pairs.reserve(2 * m);\n    for (int i = 0; i < m; i++) {\n        int x, y;\n        cin >> x >> y;\n        bad_pairs.emplace_back(x, y);\n        bad_pairs.emplace_back(y, x);\n    }\n    sort(bad_pairs.begin(), bad_pairs.end());\n \n    vector<vector<int>> occ(n);\n    for (auto &[x, c] : cnt)\n        occ[c].push_back(x);\n \n    for (auto &v : occ)\n        reverse(v.begin(), v.end());\n \n    long long answer = 0;\n    for (int cnt_x = 1; cnt_x < n; cnt_x++)\n        for (int x : occ[cnt_x])\n            for (int cnt_y = 1; cnt_y <= cnt_x; cnt_y++)\n                for (auto y : occ[cnt_y])\n                    if (x != y && !binary_search(bad_pairs.begin(), bad_pairs.end(), pair<int, int>{x, y})) {\n                        answer = max(answer, 1ll * (cnt_x + cnt_y) * (x + y));\n                        break;\n                    }\n \n    cout << answer << '\\n';\n}\n \nint main() {\n    ios::sync_with_stdio(false), cin.tie(nullptr);\n    int tests;\n    cin >> tests;\n    while (tests--)\n        solve();\n}\n```",
        "postTime": 1644815523,
        "uid": 90510,
        "name": "Hywel",
        "ccfLevel": 5,
        "title": "CF1637E"
    },
    {
        "content": "\u5dee\u70b9\u5c31\u5728\u573a\u4e0a\u5199\u51fa\u8fd9\u9898\u4e86\u3002\u3002\n\n\u9996\u5148\u8fd9\u9898\u6709\u4e00\u4e2a\u975e\u5e38\u5173\u952e\u7684\u6027\u8d28\u5c31\u662f\uff0c**\u4e0d\u540c\u7684 $cnt_i$ \u53ea\u6709 $O(\\sqrt n)$ \u79cd**\u3002\n\n\u56e0\u6b64\u6211\u4eec\u679a\u4e3e $cnt_x$ \u548c $cnt_y\\le cnt_x$\uff0c\u8fd9\u6837\u5b50\u590d\u6742\u5ea6\u5c31\u662f $O(n)$ \u7684\uff0c\u4ece\u5927\u5230\u5c0f\u627e\u5230\u7b2c\u4e00\u4e2a\u4e0d\u548c $a_i$ \u5f62\u6210 bad pair \u7684 $j$\uff08\u53ef\u4ee5\u7528 `set` \u7ef4\u62a4\uff0c$O(\\log n)$\uff09\uff0c\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f $O(n\\log n)$ \u7684\u3002\n\n```cpp\nusing ll = long long;\nusing pii = pair<int, int>;\nconst int maxn = 3e5 + 5;\nint n, m;\nmap<int, int> cnt;\nset<pii> bad;\nvector<int> occ[maxn];\n\nint main() {\n    int T; read(T);\n    while (T--) {\n        map<int, int>().swap(cnt);\n        set<pii>().swap(bad);\n        read(n, m);\n        FOR(i, 1, n) {\n            int x; read(x);\n            ++cnt[x], vector<int>().swap(occ[i]);\n        }\n        FOR(i, 1, m) {\n            int x, y; read(x, y);\n            bad.insert({x, y}), bad.insert({y, x});\n        }\n        for (auto &p : cnt) occ[p.second].push_back(p.first);\n        FOR(i, 1, n) reverse(occ[i].begin(), occ[i].end());\n        ll ans = 0;\n        FOR(cntx, 1, n)\n            for (auto x : occ[cntx])\n                FOR(cnty, 1, cntx)\n                    for (auto y : occ[cnty])\n                        if (x != y && !bad.count({x, y})) {\n                            chkmax(ans, 1ll * (x + y) * (cntx + cnty));\n                            break;\n                        }\n        print(ans);\n    }\n    return output(), 0;\n}\n```",
        "postTime": 1644758643,
        "uid": 212488,
        "name": "\u6e05\u70db",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1637E Best Pair"
    }
]