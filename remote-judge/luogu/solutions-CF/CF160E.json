[
    {
        "content": "[\u9898\u9762](https://www.luogu.com.cn/problem/CF160E)\n\n\u672c\u9898\u53ef\u4ee5\u7528\u79bb\u7ebf\u7ebf\u6bb5\u6811\u6765\u505a\u3002\u9996\u5148\uff0c\u6211\u4eec\u5c06\u6240\u6709\u8f66\u548c\u4eba\u7684\u5de6\u53f3\u7aef\u70b9\u548c\u65f6\u95f4\u5b58\u50a8\u4e0b\u6765\uff0c\u518d\u6309\u7167\u5de6\u7aef\u70b9\u6392\u5e8f\uff0c\u5bf9\u65f6\u95f4\u79bb\u6563\u5316\u540e\u7ebf\u6bb5\u6811\u4ee5\u65f6\u95f4\u70b9\u4e3a\u8282\u70b9\u8fdb\u884c\u7ef4\u62a4\u5728\u8fd9\u4e00\u65f6\u95f4\u80fd\u5230\u8fbe\u7684\u53f3\u7aef\u70b9\u7684\u6700\u5927\u503c\u3002\n\n\u5bf9\u4e8e\u6392\u5e8f\u540e\u7684\u8f66\u548c\u4eba\u3002\u5982\u679c\u5b83\u662f\u8f66\uff0c\u6211\u4eec\u5c31\u7528\u7ebf\u6bb5\u6811\u66f4\u65b0\u8fd9\u8f86\u8f66\u5230\u8fbe\u65f6\u95f4\u7684\u53f3\u7aef\u70b9\u6700\u503c\u3002\u5982\u679c\u4ed6\u662f\u4eba\uff0c\u5c31\u67e5\u8be2\u5728\u8fd9\u4e2a\u4eba\u5230\u8fbe\u7684\u65f6\u95f4\u5230\u65f6\u95f4\u503c\u57df\u7684\u6700\u5927\u503c\u4e2d**\u53ef\u4ee5\u6700\u65e9\u5230\u8fbe\u8fd9\u4e2a\u4eba\u7684\u76ee\u7684\u5730\u7684\u8f66\u7684\u7f16\u53f7**\u3002\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u6309\u5de6\u7aef\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u6240\u4ee5\u76ee\u524d\u6211\u4eec\u5b58\u50a8\u5728\u7ebf\u6bb5\u6811\u4e2d\u7684\u6240\u6709\u8f66\u7684\u65f6\u95f4\u90fd\u662f\u5728\u8fd9\u4e2a\u4eba\u4e4b\u524d\u6216\u540c\u65f6\uff0c\u53c8\u56e0\u4e3a\u6211\u4eec\u662f\u4ee5\u65f6\u95f4\u4e3a\u8282\u70b9\uff0c\u6240\u4ee5\u5de6\u5b50\u6811\u4e00\u5b9a\u4f18\u4e8e\u53f3\u5b50\u6811\u3002\u7136\u540e\u8f93\u51fa\u67e5\u8be2\u7684\u7ed3\u679c\u5373\u53ef\u3002\n\n\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,p[200005],tot,Tot,ans[100005];\ninline char gc(){static char buf[1000010],*p1=buf,*p2=buf;return p1==p2&&(p2=(p1=buf)+fread(buf,1,1000010,stdin),p1==p2)?EOF:*p1++;}\ninline int read(){register int x=0;static char s=gc();while(s<'0'||s>'9')s=gc();while(s>='0'&&s<='9'){x=(x<<3)+(x<<1)+(s^48);s=gc();}return x;}\ninline void write(int x){if(x>9)write(x/10);putchar(x%10^48);}//\u5feb\u8bfb\u5feb\u5199\nstruct ST{//\u7ebf\u6bb5\u6811\n\tstruct node{\n\t\tint l,r,m,op;//l\u662f\u8282\u70b9\u7ef4\u62a4\u7684\u5de6\u7aef\u70b9\uff0cr\u662f\u53f3\u7aef\u70b9\uff0cm\u662f\u533a\u95f4\u7684\u53ef\u5230\u8fbe\u53f3\u7aef\u70b9\u6700\u5927\u503c\n\t}c[800005];//op\u662f\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u7ef4\u62a4\u7684\u8f66\u7684\u7f16\u53f7\uff0c\u5982\u679cc[i]\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0cop\u5c31\u662f0\n\tvoid Build(int q,int l,int r){//\u5efa\u6811\n\t\tc[q].l=l,c[q].r=r;//\u5b58\u50a8\u8282\u70b9\u7684\u5de6\u53f3\u7aef\u70b9\n\t\tif(l==r)return;//\u5df2\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u8fd4\u56de\n\t\tint mid=l+r>>1;\n\t\tBuild(q<<1,l,mid);\n\t\tBuild(q<<1|1,mid+1,r);//\u9012\u5f52\u5efa\u6811\n\t}\n\tvoid Add(int q,int x,int y,int id){//\u5355\u70b9\u4fee\u6539\uff0cid\u662f\u8fd9\u4fe9\u8f66\u7684\u7f16\u53f7\n\t\tif(c[q].l==c[q].r){//\u5230\u4e86\u53f6\u5b50\u8282\u70b9\n\t\t\tc[q].m=max(c[q].m,y);\n\t\t\tc[q].op=id;//\u66f4\u65b0op\n\t\t\treturn;\n\t\t}\n\t\tint mid=c[q].l+c[q].r>>1;\n\t\tif(x<=mid)Add(q<<1,x,y,id);\n\t\telse Add(q<<1|1,x,y,id);//\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u9012\u5f52\u4fee\u6539\n\t\tc[q].m=max(c[q<<1].m,c[q<<1|1].m);//\u4fee\u6539\u8282\u70b9\u7ef4\u62a4\u7684\u6700\u5927\u503c\n\t}\n\tint Getsum(int q,int l,int r,int M){//\u533a\u95f4\u67e5\u8be2\uff0cM\u662f\u4eba\u8981\u5230\u8fbe\u7684\u5730\u65b9\n\t\tif(c[q].m<M)return 0;//\u5982\u679c\u538b\u6839\u5230\u4e0d\u4e86\uff0c\u8fd4\u56de0\n\t\tif(c[q].l==c[q].r)return q;//\u627e\u5230\u4e00\u4e2a\u7b26\u5408\u7684\u53f6\u5b50\u8282\u70b9\uff0c\u8fd4\u56de\u7f16\u53f7\n\t\tint a=0,b=0,mid=c[q].l+c[q].r>>1;//\u5bfb\u627e\u7b54\u6848\n\t\tif(l<=mid)a=Getsum(q<<1,l,r,M);//\u5de6\u5b50\u6811\u4f18\u4e8e\u53f3\u5b50\u6811\n\t\tif(c[a].m>=M)return a;\n\t\tif(mid<r)b=Getsum(q<<1|1,l,r,M);\n\t\tif(c[b].m>=M)return b;\n\t\treturn 0;//\u6ca1\u6709\u5408\u9002\u7684\u7b54\u6848\uff0c\u8fd4\u56de0\n\t}\n}T;\nmap<int,int>M;\nstruct Node{\n\tint l,r,t,f,id;//f\u6807\u8bb0\u662f\u4eba\u662f\u8f66\uff0cid\u662f\u5728\u4eba/\u8f66\u91cc\u7684\u7f16\u53f7\n\tbool operator<(const Node &m)const{\n\t\treturn l<m.l;\n\t}\n}a[200005];\nint main(){\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++)a[++tot].l=read(),a[tot].r=read(),a[tot].t=read(),p[tot]=a[tot].t,a[tot].id=i,a[tot].f=0;\n\tfor(int i=1;i<=m;i++)a[++tot].l=read(),a[tot].r=read(),a[tot].t=read(),p[tot]=a[tot].t,a[tot].id=i,a[tot].f=1;\n\tstable_sort(a+1,a+tot+1);//\u8f66\u548c\u4eba\u5728\u5176\u5b83\u6761\u4ef6\u76f8\u540c\u65f6\u8f66\u8981\u5728\u524d\u9762\n\tsort(p+1,p+tot+1);\n\tfor(int i=1;i<=tot;i++){\n\t\tif(p[i]!=p[i-1]){\n\t\t\tM[p[i]]=++Tot;\n\t\t}\n\t}//\u79bb\u6563\u5316\n\tT.Build(1,1,Tot);\n\tfor(int i=1;i<=tot;i++){\n\t\tif(a[i].f==0)T.Add(1,M[a[i].t],a[i].r,a[i].id);\n\t\telse{\n\t\t\tint s=T.Getsum(1,M[a[i].t],Tot,a[i].r);\n\t\t\tans[a[i].id]=T.c[s].op;//\u5b58\u50a8\u7b54\u6848\n\t\t}\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tif(ans[i])write(ans[i]),putchar(' ');\n\t\telse putchar('-'),putchar('1'),putchar(' ');//\u8f93\u51fa\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1639720989,
        "uid": 428358,
        "name": "cqbztzl",
        "ccfLevel": 5,
        "title": "CF160E\u9898\u89e3"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a $n$ \u4e2a\u5143\u7d20\uff0c\u6bcf\u4e2a\u5143\u7d20\u6709 $s_i,f_i,t_i$ \u4e09\u4e2a\u5c5e\u6027\uff0c\u518d\u7ed9\u5b9a $m$ \u4e2a\u5143\u7d20\uff0c\u6bcf\u4e2a\u5143\u7d20\u6709 $l_j,r_j,b_j$ \u4e09\u4e2a\u5c5e\u6027\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $j$ \u6c42\u51fa\u6ee1\u8db3 $s_i\\le l_j$ \u4e14 $f_i\\ge r_j$ \u4e14 $t_i\\ge b_j$ \u4e14 $t_i$ \u6700\u5c0f\u7684 $i$\u3002\n\n## Solution 1\n\n\u6839\u636e\u9898\u9762\uff0c\u6211\u4eec\u628a\u524d $n$ \u4e2a\u5143\u7d20\u79f0\u4e3a\u516c\u4ea4\u8f66\uff0c\u540e $m$ \u4e2a\u5143\u7d20\u79f0\u4e3a\u4eba\uff0c\u540c\u65f6\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u628a $t_i$ \u548c $b_j$ \u7edf\u79f0\u4e3a\u65f6\u95f4\uff0c$s_i$ \u548c $l_j$ \u79f0\u4e3a\u5de6\u7aef\u70b9\uff0c$f_i$ \u548c $r_j$ \u79f0\u4e3a\u53f3\u7aef\u70b9\u3002\n\n### \u601d\u8def\n\n\u770b\u5230\u8fd9\u9053\u9898\u9996\u5148\u60f3\u5230\u7684\u662f\u4e09\u7ef4\u504f\u5e8f\uff0c\u7ee7\u800c\u53ef\u4ee5\u60f3\u5230\u76f4\u63a5 CDQ \u5206\u6cbb\u641e\u8fc7\u53bb\uff0c\u5982\u679c\u60a8\u4e0d\u4f1a CDQ \u5206\u6cbb\uff0c\u5efa\u8bae\u5148\u628a Solution 2 \u770b\u4e86\uff0c\u518d\u53bb\u5b66\u4e60\u4e00\u4e0b\u3002\n\n\u5176\u5b9e\u4e2a\u4eba\u611f\u89c9\u8fd9\u9053\u9898\u5c31\u662f CDQ \u7684\u677f\u5b50\u9898\uff0c\u8fd9\u91cc\u63d0\u9192\u4e24\u70b9\u5c31\u591f\u4e86\uff0c\u7531\u4e8e\u6c42\u7684\u662f\u6700\u5c0f\u7684 $t_i$ \u7684\u7f16\u53f7\uff0c\u6240\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u5b58\u7684\u5e94\u8be5\u662f $t_i$ \u7684\u6700\u5c0f\u503c\u4ee5\u53ca\u8fd9\u4e2a\u6700\u5c0f\u7684 $t_i$ \u7684\u7f16\u53f7\uff0c\u8fd8\u6709\u5c31\u662f\u5728\u4e00\u5f00\u59cb\u6839\u636e\u65f6\u95f4\u6392\u5e8f\u7684\u65f6\u5019\uff0c\u5982\u679c\u6709\u4e24\u4e2a\u65f6\u95f4\u76f8\u540c\u7684\uff0c\u90a3\u4e48\u516c\u4ea4\u8f66\u5e94\u8be5\u6392\u5728\u4eba\u7684\u524d\u9762\uff0c\u5177\u4f53\u7684\u53ef\u4ee5\u770b\u4ee3\u7801\u3002\n\n### \u53c2\u8003\u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define lowbit(x) (x&(-x))\n#define pii pair<int,int>\n#define mp make_pair\nusing namespace std;\nconst int N = 1e5 + 10, inf = 0x3f3f3f3f;\nstruct ALTXDY\n{\n\tint tp, t, x, y, id;//tp \u8868\u793a\u8fd9\u662f\u516c\u4ea4\u8f66\u8fd8\u662f\u4eba\uff0ct \u662f\u65f6\u95f4\uff0cx \u662f\u5de6\u7aef\u70b9\uff0cy \u662f\u53f3\u7aef\u70b9\uff0cid \u662f\u7f16\u53f7\n\tbool operator < (const ALTXDY &a) const\n\t{\n\t\treturn t == a.t ? tp < a.tp : t > a.t;\n\t}\n};\nALTXDY q[N<<1], tmp[N<<1];\nint n, m, k, c[N<<2];//c \u6570\u7ec4\u548c k \u62ff\u6765\u5bf9\u53f3\u7aef\u70b9\u79bb\u6563\u5316\npii tree[N<<1], ans[N];\nvoid reset(int x)//cdq \u65f6\u7528\u6765\u91cd\u7f6e\u6811\u72b6\u6570\u7ec4\u7684\n{\n\tfor(; x <= k; x += lowbit(x))\n\t\ttree[x] = mp(inf, inf);\n}\nvoid update(int x, pii val)\n{\n\tfor(; x <= k; x += lowbit(x))\n\t\ttree[x] = min(tree[x], val);\n}\npii query(int x)\n{\n\tpii ans = mp(inf, inf);\n\tfor(; x >= 1; x -= lowbit(x))\n\t\tans = min(ans, tree[x]);\n\treturn ans;\n}\nvoid cdq(int l, int r)\n{\n\tif(l == r)\n\t\treturn;\n\tint mid = (l+r)>>1;\n\tcdq(l, mid);\n\tcdq(mid+1, r);\n\tint i = l, j = mid+1, cnt = l-1;\n\twhile(i <= mid && j <= r)\n\t{\n\t\tif(q[i].x <= q[j].x)\n\t\t{\n\t\t\ttmp[++cnt] = q[i];\n\t\t\tif(q[i].tp == 0)\n\t\t\t\tupdate(k-q[i].y+1, mp(q[i].t, q[i].id));\n            \t//\u7531\u4e8e\u516c\u4ea4\u8f66\u7684\u53f3\u7aef\u70b9\u8981\u5927\u4e8e\u4eba\u7684\u53f3\u7aef\u70b9\uff0c\u4f46\u6211\u4e0d\u4f1a\u6811\u72b6\u6570\u7ec4\u6c42\u533a\u95f4\u6700\u503c\uff0c\u6240\u4ee5\u628a\u53f3\u7aef\u70b9\u53d6\u4e2a\u53cd\u518d\u52a0\u4e0a k \u5c31\u53d8\u6210\u4e86\u5c0f\u4e8e\uff0c\u4e5f\u5c31\u662f\u4e00\u822c\u7684\u6811\u72b6\u6570\u7ec4\u5199\u6cd5\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmp[++cnt] = q[j];\n\t\t\tif(q[j].tp == 1)\n\t\t\t\tans[q[j].id] = min(ans[q[j].id], query(k-q[j].y+1));\n\t\t\tj++;\n\t\t}\n\t}\n\twhile(i <= mid)\n\t{\n\t\ttmp[++cnt] = q[i];\n\t\ti++;\n\t}\n\twhile(j <= r)\n\t{\n\t\ttmp[++cnt] = q[j];\n\t\tif(q[j].tp == 1)\n\t\t\tans[q[j].id] = min(ans[q[j].id], query(k-q[j].y+1));\n\t\tj++;\n\t}\n\tfor(int i = l; i <= r; i++)\n\t\treset(k-q[i].y+1);\n\tfor(int i = l; i <= r; i++)\n\t\tq[i] = tmp[i];\n}\nint main()\n{\n\tmemset(ans, inf, sizeof(ans));\n\tmemset(tree, inf, sizeof(tree));\n\tscanf(\"%d%d\", &n, &m);\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tint t, s, f;\n\t\tscanf(\"%d%d%d\", &s, &f, &t);\n\t\tq[i]=(ALTXDY){0, t, s, f, i};//\u516c\u4ea4\u8f66 tp \u4e3a 0\n\t\tc[++k] = f;\n\t}\n\tfor(int i = 1; i <= m; i++)\n\t{\n\t\tint b, l, r;\n\t\tscanf(\"%d%d%d\", &l, &r, &b);\n\t\tq[i+n] = (ALTXDY){1, b, l, r, i};//\u4eba tp \u4e3a 1\n\t\tc[++k] = r;\n\t}\n\tsort(c+1, c+1+k);\n\tk = unique(c+1, c+1+k)-c-1;\n\tfor(int i = 1; i <= n+m; i++)\n\t\tq[i].y = lower_bound(c+1, c+1+k, q[i].y)-c;\n\tsort(q+1, q+1+n+m);\n\tcdq(1, n+m);\n\tfor(int i = 1; i <= m; i++)\n\t\tif(ans[i].first == inf)\n\t\t\tprintf(\"-1 \");\n\t\telse\n\t\t\tprintf(\"%d \", ans[i].second);\n\treturn 0;\n}\n```\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O((n+m)\\log^2(n+m))$\uff0c\u8dd1\u4e2a $1\\times 10^5$ \u95ee\u9898\u4e0d\u5927\u3002\n\n## Solution 2\n\n\u56e0\u4e3a\u770b\u89c1\u6211\u8fd9\u4e2a\u4ee3\u7801\u662f\u6d1b\u8c37\u4e0a\u7684\u6700\u52a3\u89e3\uff0c\u53bb\u770b\u4e86\u4e00\u4e0b\u9898\u89e3\u533a\uff0c\u624d\u53d1\u73b0\u539f\u6765\u6709\u4e00\u4e2a $O((n+m)\\log(n+m))$ \u7684\u505a\u6cd5\u3002\n\n### \u601d\u8def\n\n\u8fd9\u9053\u9898\u7528 CDQ \u5206\u6cbb\u5176\u5b9e\u6709\u70b9\u53ef\u60dc\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4eba\uff0c\u6211\u4eec\u8981\u627e\u7684\u53ea\u662f\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u5c0f\u7684\u90a3\u4e2a $t_i$\uff0c\u81f3\u4e8e\u5176\u4ed6\u7684\uff0c\u6211\u4eec\u6839\u672c\u4e0d\u7528\u8003\u8651\uff0c\u8fd9\u5c31\u6709\u4e86\u7b2c\u4e8c\u79cd\u505a\u6cd5\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u6839\u636e**\u5de6\u7aef\u70b9**\u6392\u4e2a\u5e8f\uff0c\u76f8\u540c\u7684\u8fd8\u662f\u516c\u4ea4\u8f66\u6392\u5728\u4eba\u7684\u524d\u9762\uff0c\u7136\u540e\u6211\u4eec\u4ece\u524d\u5f80\u540e\u626b\u4e00\u904d\uff0c\u5982\u679c\u9047\u5230\u516c\u4ea4\u8f66\uff0c\u6211\u4eec\u5c31\u4ee5\u5b83\u7684\u65f6\u95f4\u4e3a\u4e0b\u6807\uff0c\u53f3\u7aef\u70b9\u548c\u5176\u7f16\u53f7\u4e3a\u503c\u585e\u5230\u4e00\u68f5\u7ebf\u6bb5\u6811\u91cc\uff0c\u5e76\u7ef4\u62a4\u53f3\u7aef\u70b9\u7684\u6700\u5927\u503c\u3002\n\n\u63a5\u4e0b\u6765\u662f\u91cd\u70b9\uff0c\u5982\u679c\u9047\u5230\u4eba\uff0c\u663e\u7136\u6b64\u65f6\u585e\u5230\u7ebf\u6bb5\u6811\u91cc\u7684\u516c\u4ea4\u8f66\u7684\u5de6\u7aef\u70b9\u90fd\u5c0f\u4e8e\u7b49\u4e8e\u8fd9\u4e2a\u4eba\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5728\u7ebf\u6bb5\u6811\u4e0a\u627e\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\uff0c\u6ee1\u8db3\u8fd9\u4e2a\u53f6\u5b50\u8282\u70b9\u6240\u4ee3\u8868\u7684 $t_i$\uff08\u4e5f\u5c31\u662f\u5b83\u8fd9\u4e2a\u4f4d\u7f6e\u6240\u4ee3\u8868\u7684\u4e0b\u6807\uff09\u6bd4\u8fd9\u4e2a\u4eba\u7684\u65f6\u95f4\u5927\uff0c\u5e76\u4e14\u5b83\u6240\u5b58\u7684\u53f3\u7aef\u70b9\u4e5f\u6bd4\u8fd9\u4e2a\u4eba\u7684\u53f3\u7aef\u70b9\u5927\uff0c\u800c\u4e14\u8fd9\u4e2a\u53f6\u5b50\u8282\u70b9**\u5c3d\u91cf\u9760\u5de6**\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u5728 $b_j$\uff08\u4e5f\u5c31\u662f\u8fd9\u4e2a\u4eba\u7684\u65f6\u95f4\uff09\u5230 $k$\uff08\u6b64\u65f6 $k$ \u7528\u6765\u79bb\u6563\u5316\u65f6\u95f4\uff09\u8fd9\u4e2a\u533a\u95f4\u91cc\u64cd\u4f5c\uff0c\u5bf9\u4e8e\u5f53\u524d\u8282\u70b9 $i$\uff0c\u5982\u679c\u5b83\u7684\u5de6\u513f\u5b50\u662f\u5408\u6cd5\u7684\uff08\u5373\u8fd9\u4e2a\u513f\u5b50\u662f\u5b58\u5728\u7684\uff0c\u5e76\u4e14\u6240\u4ee3\u8868\u7684\u533a\u95f4\u4e0e $[b_j,k]$ \u6709\u4ea4\u96c6\uff0c\u5e76\u4e14\u8fd9\u4e2a\u513f\u5b50\u6240\u4ee3\u8868\u7684\u533a\u95f4\u4e2d\u7684\u53f3\u7aef\u70b9\u7684\u6700\u5927\u503c\u6bd4\u8fd9\u4e2a\u4eba\u7684\u53f3\u7aef\u70b9\u5927\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u7ee7\u7eed\u5bf9\u8fd9\u4e2a\u513f\u5b50\u8fdb\u884c\u9012\u5f52\uff0c\u5982\u679c\u5b83\u4e0d\u5408\u6cd5\uff0c\u6211\u4eec\u518d\u5224\u65ad\u53f3\u513f\u5b50\u662f\u5426\u5408\u6cd5\uff0c\u5982\u679c\u4e24\u4e2a\u90fd\u4e0d\u5408\u6cd5\uff0c\u90a3\u4e48\u5c31\u76f4\u63a5\u8fd4\u56de $-1$\uff0c\u5982\u679c\u9012\u5f52\u5230\u4e86\u53f6\u5b50\u8282\u70b9\uff0c\u5c31\u8bf4\u660e\u8fd9\u4e2a\u53f6\u5b50\u8282\u70b9\u6240\u4ee3\u8868\u7684\u5c31\u662f\u6ee1\u8db3\u6240\u6709\u6761\u4ef6\u4e14 $t_i$ \u6700\u5c0f\u7684\u90a3\u4e00\u4e2a\u516c\u4ea4\u8f66\uff0c\u76f4\u63a5\u8fd4\u56de\u5b83\u6240\u5b58\u7684\u7f16\u53f7\u5373\u53ef\u3002\n\n\u4e3a\u4ec0\u4e48\u8fd9\u6837\u662f\u5bf9\u7684\u5462\uff1f\u9996\u5148\uff0c\u5bf9\u4e8e\u8282\u70b9 $i$\uff0c\u5982\u679c\u5176\u5de6\u513f\u5b50\u662f\u5408\u6cd5\u7684\uff0c\u90a3\u6211\u4eec\u4e00\u5b9a\u4e0d\u4f1a\u53bb\u8003\u8651\u5b83\u7684\u53f3\u513f\u5b50\uff0c\u5982\u679c\u5de6\u513f\u5b50\u4e0d\u5408\u6cd5\uff0c\u6211\u4eec\u624d\u4f1a\u8003\u8651\u53f3\u513f\u5b50\uff0c\u5176\u6b21\uff0c\u5982\u679c\u67d0\u4e2a\u8282\u70b9\u6240\u4ee3\u8868\u7684\u533a\u95f4\u4e2d\u7684\u6700\u5927\u503c\u8fd8\u6ca1\u6709\u8981\u6c42\u503c\u5927\uff0c\u90a3\u5b83\u80af\u5b9a\u662f\u4e0d\u5408\u6cd5\u7684\uff08~~\u5176\u5b9e\u4e2a\u4eba\u611f\u89c9\u8fd9\u5f88\u663e\u7136\u5427~~\uff09\u3002\n\n### \u53c2\u8003\u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nnamespace IO\n{\n\tchar buf[1<<22], *p1 = buf, *p2 = buf;\n\t#define getchar() (p1 == p2 && (p2 = (p1 = buf)+fread(buf, 1, 1<<21, stdin), p1==p2) ? EOF : *p1++)\n\t#define isdigit(c) (c >= 48 && c <= 57)\n\t#define isalpha(c) ((c >= 65 && c <= 90) || (c >= 97 && c <= 122))\n\ttemplate<typename T> inline void read(T &x)\n\t{\n\t\tx = 0;\n\t\tregister char ch = getchar();\n\t\twhile(!isdigit(ch))\n\t\t\tch = getchar();\n\t\twhile(isdigit(ch))\n\t\t{\n\t\t\tx = (x<<1)+(x<<3)+(ch^48);\n\t\t\tch = getchar();\n\t\t}\n\t}\n\ttemplate <typename T,typename... Args> inline void read(T& t, Args&... args)\n\t{\n\t\tread(t);read(args...);\n\t}\n}\nusing namespace IO;\nconst int N = 1e5 + 10, inf = 0x3f3f3f3f;\nstruct ALTXDY\n{\n\tint tp, t, x, y, id;\n\tbool operator < (ALTXDY const &a) const\n\t{\n\t\treturn x == a.x ? tp < a.tp : x < a.x;\n\t}\n};\nALTXDY q[N<<1];\nint n, m, tot, bus[N], ans[N], c[N<<1], dat[N<<2], ls[N<<2], rs[N<<2];\nvoid update(int &i, int l, int r, int x, int k)\n{\n\tif(!i)\n\t\ti=++tot;\n\tif(bus[dat[i]] < bus[k])\n\t\tdat[i] = k;\n\tif(l == r)\n\t\treturn;\n\tint mid = (l+r)>>1;\n\tif(x <= mid)\n\t\tupdate(ls[i], l, mid, x, k);\n\telse\n\t\tupdate(rs[i], mid+1, r, x, k);\n}\nint query(int i, int l, int r, int x, int y, int val)\n{\n\tif(l == r)\n\t\treturn dat[i];\n\tint mid = (l+r)>>1, t = -1;\n\tif(x <= mid && ls[i] && bus[dat[ls[i]]] >= val)\n\t\tt = query(ls[i], l, mid, x, y, val);\n\tif(t == -1 && y >= mid+1 && rs[i] && bus[dat[rs[i]]] >= val)\n\t\tt = query(rs[i], mid+1, r, x, y, val);\n\treturn t;\n}\nint main()\n{\n\tread(n, m);\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tint s, f, t;\n\t\tread(s, f, t);\n\t\tq[i] = (ALTXDY){0, t, s, f, i};\n\t\tc[i] = t;\n\t\tbus[i] = f;\n\t}\n\tfor(int i = 1; i <= m; i++)\n\t{\n\t\tint b, l, r;\n\t\tread(l, r, b);\n\t\tq[i+n] = (ALTXDY){1, b, l, r, i};\n\t\tc[i+n] = b;\n\t}\n\tsort(c+1, c+1+n+m);\n\tregister int k = unique(c+1, c+1+n+m)-c-1;\n\tfor(int i = 1; i <= n+m; i++)\n\t\tq[i].t = lower_bound(c+1, c+1+k, q[i].t)-c;\n\tsort(q+1, q+1+n+m);\n\tregister int rt = 0;\n\tfor(int i = 1; i <= n+m; i++)\n\t\tif(q[i].tp == 0)\n\t\t\tupdate(rt, 1, k, q[i].t, q[i].id);\n\t\telse\n\t\t\tans[q[i].id] = query(rt, 1, k, q[i].t, k, q[i].y);\n\tfor(int i =1; i <= m; i++)\n\t\tprintf(\"%d \", ans[i]);\n\treturn 0;\n}\n```\n\n\u56e0\u4e3a\u5e38\u6570\u4e0d\u592a\u4f18\u79c0\uff0c\u52a0\u4e86\u4e00\u53d1 fread\uff0c\u53c8\u628a\u539f\u6765\u7684 pair \u6362\u4e86\u4e00\u4e0b\uff0c\u6700\u540e CF \u4e0a rk4\uff0c\u6d1b\u8c37\u4e0a rk1\u3002\n\n#### Update\n\n\u4eca\u5929\u673a\u623f\u91cc\u4e00\u4e2a\u5927\u4f6c\u5bf9\u8fd9\u4e2a\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u63d0\u51fa\u4e86\u8d28\u7591\uff0c\u4ed6\u8ba4\u4e3a\u6839\u636e\u4e00\u4e2a\u8282\u70b9\u7684\u6700\u5927\u503c\u6765\u5224\u65ad\u8fd9\u4e2a\u533a\u95f4\u91cc\u6709\u6ca1\u6709\u5408\u6cd5\u7684\u89e3\u662f\u4e0d\u5bf9\u7684\uff0c\u539f\u56e0\u5982\u4e0b\u3002\n\n![](https://cdn.jsdelivr.net/gh/xiao-lin52/image-upload/20210129114621.png)\n\n\u8003\u8651\u6709\u8fd9\u6837\u4e00\u4e2a\u8282\u70b9 $u$\uff08\u5c31\u662f\u56fe\u4e2d\u6700\u4e0a\u9762\u7684\u90a3\u4e2a\u957f\u65b9\u5f62\uff09\uff0c\u5b83\u5305\u542b\u4e86\u4e00\u90e8\u5206\u8981\u67e5\u8be2\u7684\u8fd9\u4e2a\u533a\u95f4\uff08\u4e5f\u5c31\u662f\u56fe\u4e2d\u7684\u4e0b\u9762\u90a3\u6761\u7ebf\u6bb5\uff09\uff0c\u800c\u88ab\u8fd9\u4e2a\u8282\u70b9\u5305\u542b\u7684\u8fd9\u90e8\u5206\u533a\u95f4\u4e2d\u7684\u503c\u6700\u5927\u53ea\u6709 $6$\uff0c\u4f46\u5728\u8fd9\u4e2a\u8282\u70b9\u4ee3\u8868\u7684\u533a\u95f4\u4e2d\u8fd8\u5b58\u5728\u4e00\u4e2a\u6570\uff0c\u5b83\u4e0d\u88ab\u5305\u542b\u5728\u8981\u67e5\u8be2\u7684\u533a\u95f4\u91cc\uff0c\u4f46\u5b83\u7684\u503c\u662f $7$\uff0c\u5047\u8bbe\u6b64\u65f6\u6211\u4eec\u9700\u8981\u4f7f\u627e\u5230\u7684\u53f6\u5b50\u7ed3\u70b9\u7684\u503c\u5927\u4e8e\u7b49\u4e8e $7$\uff0c\u90a3\u4e48\u5bf9\u4e8e $u$\uff0c\u6211\u4eec\u5c31\u4f1a\u67e5\u8be2\u5931\u8d25\uff0c\u9700\u8981\u56de\u6eaf\u4ee5\u540e\u91cd\u65b0\u67e5\u627e\uff0c\u800c\u90a3\u4f4d\u5927\u4f6c\u8ba4\u4e3a\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u53ef\u4ee5\u5361\u6389\u7684\u3002\n\n\u4f46\u662f\uff0c\u5b9e\u9645\u4e0a\u67e5\u627e\u7684\u8fc7\u7a0b\u8fd8\u662f $O(\\log n)$ \u7684\uff01\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\u6211\u4eec\u8003\u8651\u5728\u4ec0\u4e48\u60c5\u51b5\u4e0b\u8fd9\u4e2a\u8282\u70b9\u4f1a\u67e5\u627e\u5931\u8d25\uff0c\u663e\u7136\u53ea\u6709\u4e0a\u9762\u8fd9\u4e00\u79cd\u60c5\u51b5\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u8282\u70b9\u53ea\u5305\u542b\u4e86\u4e00\u90e8\u5206\u8981\u67e5\u8be2\u7684\u533a\u95f4\u3002\n\n\u7136\u540e\u601d\u8003\u5982\u679c\u67e5\u8be2\u5931\u8d25\uff0c\u6211\u4eec\u4f1a\u56de\u5230\u54ea\u4e00\u4e2a\u8282\u70b9\u5f00\u59cb\u91cd\u65b0\u67e5\u627e\u3002\n\n\u663e\u7136\uff0c\u5bf9\u4e8e\u8fd9\u6837\u4e00\u7c7b\u8282\u70b9 $u$\uff0c\u5b83\u7684\u53f3\u513f\u5b50\u4e00\u5b9a\u662f\u88ab\u5b8c\u5168\u5305\u542b\u4e8e\u8981\u67e5\u8be2\u7684\u533a\u95f4\u5185\u7684\uff0c\u6b64\u65f6\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u5b83\u6240\u5b58\u7684\u6700\u5927\u503c\u6765\u5224\u65ad\u5b83\u662f\u5426\u5408\u6cd5\uff0c\u800c\u5728\u8fd9\u4e2a\u53f3\u513f\u5b50\u7684\u5b50\u6811\u4e2d\u4e00\u5b9a\u4e0d\u4f1a\u5b58\u5728\u548c $u$ \u76f8\u540c\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\uff0c\u5982\u679c\u53f3\u513f\u5b50\u5408\u6cd5\uff0c\u90a3\u6211\u4eec\u5c31\u4e00\u5b9a\u80fd\u627e\u5230\u4e00\u4e2a\u5408\u6cd5\u7684\u89e3\uff0c\u800c\u5982\u679c\u53f3\u513f\u5b50\u4e0d\u5408\u6cd5\uff0c\u90a3\u6211\u4eec\u4e5f\u65e0\u987b\u518d\u9012\u5f52\u4e86\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u6700\u591a\u53ea\u4f1a\u51fa\u73b0\u4e00\u6b21\u67e5\u8be2\u5931\u8d25\u7684\u60c5\u51b5\uff0c\u6700\u7ec8\u65f6\u95f4\u590d\u6742\u5ea6\u8fd8\u662f $O(\\log n)$ \u7684\u3002\n\n\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u7531\u4e8e\u6211\u4eec\u67e5\u627e\u7684\u8fd9\u4e2a\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u603b\u662f\u548c\u6574\u68f5\u7ebf\u6bb5\u6811\u6240\u4ee3\u8868\u7684\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u76f8\u540c\uff0c\u6240\u4ee5\u5728\u53f3\u7aef\u70b9\u5e76\u4e0d\u4f1a\u51fa\u73b0\u4e0a\u8ff0\u60c5\u51b5\u3002\n\n## \u53cd\u601d\n\nCDQ \u5206\u6cbb\u8fd8\u662f\u6709\u70b9\u4e0d\u592a\u719f\u7ec3\uff0c\u4ece\u5199\u5230 AC \u82b1\u4e86\u4e09\u8282\u8bfe\u7684\u65f6\u95f4\uff0c\u4ee5\u540e\u8fd8\u662f\u5e94\u8be5\u591a\u7ec3\u4e60\u4e00\u4e0b\u3002\n",
        "postTime": 1608813687,
        "uid": 183235,
        "name": "Islauso",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF160E \u3010Buses and People\u3011"
    },
    {
        "content": "\u4e0a\u9762\u8fd9\u4f4d\u770b\u6210\u4e09\u7ef4\u6570\u70b9\u849f\u84bb\u8868\u793a\u745f\u745f\u53d1\u6296\n## \u9898\u610f\n\n\u5df2\u77e5n\u8f86\u516c\u4ea4\u8f66\uff0c\u6709 $s_i,f_i,t_i$ \u4e09\u4e2a\u5c5e\u6027\uff0c\u8868\u793a\u5728 $t_i$ \u65f6\u523b\u4ece $s_i$ \u5230\u8fbe $f_i$\uff0c\u9014\u4e2d\u53ef\u4ee5\u4efb\u610f\u4e0a\u4e0b\u8f66\u3002  \n\u5df2\u77e5m\u4e2a\u4eba\uff0c\u6709 $l_i,r_i,b_i$ \u4e09\u4e2a\u5c5e\u6027\uff0c\u8868\u793a\u8981\u5728 $b_i$ \u65f6\u523b\u53ca\u4ee5\u540e\u4e58\u5750\u4e00\u8f86\u516c\u4ea4\u8f66\u4ece $l_i$ \u5230\u8fbe $r_i$\u3002\u6c42 $t_i$ \u6700\u5c0f\u7684\u53ef\u884c\u7684\u516c\u4ea4\u8f66\u7684\u7f16\u53f7\u3002  \n\u66f4\u6b63\u5f0f\u7684\u8bf4\u6cd5\uff1a\u6c42 $i$ \u4f7f\u5f97 $b \\leq t_i \\space and \\space s \\leq l_i \\space and \\space r \\leq f_i$ \u4e14 $t_i$ \u6700\u5c0f\uff0c\u82e5\u6ca1\u6709\u5219\u8f93\u51fa-1\u3002\n\n## \u601d\u8def\n\n\u9996\u5148\u628a\u516c\u4ea4\u8f66\u548c\u4e58\u5ba2\u90fd\u770b\u4f5c\u4e00\u4e2a\u6709\u65f6\u95f4\u7684\u533a\u95f4\u3002\u5408\u8d77\u6765\u6309\u7167\u5de6\u7aef\u70b9\u6392\u5e8f\uff0c\u518d\u7ebf\u6027\u626b\u63cf\u3002  \n\u6ce8\u610f\u5de6\u7aef\u70b9\u76f8\u540c\u65f6\u4e58\u5ba2\u5e94\u5728\u516c\u4ea4\u8f66\u4e4b\u540e\u3002  \n\u5219\u626b\u5230\u7684\u4e58\u5ba2\u4e4b\u524d\u7684\u516c\u4ea4\u8f66\u5fc5\u7136\u6ee1\u8db3 $s_i \\leq l_i$ \u3002  \n\u82e5\u626b\u5230\u516c\u4ea4\u8f66\uff0c\u5219\u52a0\u5165\u6570\u636e\u7ed3\u6784\uff1b\u82e5\u626b\u5230\u4e58\u5ba2\uff0c\u5219\u67e5\u8be2\u5df2\u7ecf\u52a0\u5165\u6570\u636e\u7ed3\u6784\u7684\u516c\u4ea4\u8f66\uff0c\u5728 $\\ge b_i$ \u7684\u65f6\u95f4\u8303\u56f4\u4e2d\uff0c\u6ee1\u8db3 $f_i \\ge r_i$ \u7684\u6700\u5c0f\u7684 $t_i$ \u7684id\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u65f6\u95f4\u5185 $f_i$ \u7684\u6700\u5927\u503c\u3002\u65f6\u95f4\u53ef\u80fd\u5f88\u5927\uff0c\u53ef\u4ee5\u79bb\u6563\u5316\u3002  \n\u67e5\u8be2\u65f6\u5728 $f_i \\ge r_i$ \u7684\u6761\u4ef6\u4e0b\u5bfb\u627e\u5c3d\u53ef\u80fd\u5c0f\u7684\u53f6\u5b50\u8282\u70b9\u5373\u53ef\u3002  \n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define N 100003\n#define mid ((l + r) >> 1)\n#define ln (nod << 1)\n#define rn (nod << 1 | 1)\nint n, m, ans[N], t[N << 1], val[N << 3];\nstruct A{\n\tint l, r, t, i;\n\tbool operator < (const A x) const { return l == x.l ? i < x.i : l < x.l; }\n} a[N << 1];\nvoid pushup(int nod) {\n\tif (a[val[ln]].r > a[val[rn]].r) val[nod] = val[ln];\n\telse val[nod] = val[rn];\n}\nvoid modify(int nod, int l, int r, int p, int vi) {\n\t// printf(\"m %d %d %d %d %d\\n\",nod,l,r,p,vi);\n\tif (l == r) {\n\t\tif (a[val[nod]].r < a[vi].r)\n\t\t\tval[nod] = vi;\n\t\treturn;\n\t}\n\tif (p <= mid) modify(ln, l, mid, p, vi);\n\telse modify(rn, mid + 1, r, p, vi);\n\tpushup(nod);\n}\nint query(int nod, int l, int r, int p, int vi) {\n\t// printf(\"q %d %d %d %d %d (%d)\\n\",nod,l,r,p,vi,val[nod]);\n\tif (a[val[nod]].r < a[vi].r || t[r] < a[vi].t) return -1;\n\tif (l == r) return a[val[nod]].i;\n\tint lq = query(ln, l, mid, p, vi);\n\tif (lq != -1) return lq;\n\treturn query(rn, mid + 1, r, p, vi);\n}\nint main() {\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i <= n + m; ++i) {\n\t\tscanf(\"%d%d%d\", &a[i].l, &a[i].r, &a[i].t);\n\t\ta[i].i = i;\n\t\tt[i] = a[i].t;\n\t}\n\tsort(a + 1, a + n + m + 1);\n\tsort(t + 1, t + n + m + 1);\n\t// for(int i=1;i<=n+m;++i)printf(\"-%d %d %d (%d)\\n\",a[i].l,a[i].r,a[i].t,a[i].i);\n\t// for(int i=1;i<=n+m;++i){printf(\"%d \",t[i]);}puts(\"\");\n\tfor (int i = 1, pos; i <= n + m; ++i) {\n\t\t// printf(\"i = %d\\n\", a[i].i);\n\t\tpos = lower_bound(t + 1, t + n + m + 1, a[i].t) - t;\n\t\tif (a[i].i <= n) modify(1, 1, n + m, pos, i);\n\t\telse ans[a[i].i - n] = query(1, 1, n + m, pos, i);\n\t}\n\tfor (int i = 1; i <= m; ++i) printf(\"%d \", ans[i]);\n\treturn 0;\n}\n\n```",
        "postTime": 1603262589,
        "uid": 56424,
        "name": "jljljl",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF160E \u3010Buses and People\u3011"
    },
    {
        "content": "$upd$ \u5df2\u5c06\u6240\u6709 $and$ \u66f4\u6362\u4e3a $\\operatorname{and}$\u3002\n\n# \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a$t_i,s_i,f_i$ \u548c $l_i,r_i, b_i$\u3002\n\n\u6c42 $i$ \u4f7f\u5f97 $b_i \\leq t_i \\space \\operatorname{and} \\space s_i \\leq l_i \\space \\operatorname{and} \\space r_i \\leq f_i$ \u4e14 $t_i$ \u6700\u5c0f\u3002\n\n$1 \\leq n,m \\leq 10^5,1 \\leq t_i,s_i,f_i \\leq 10^9,1 \\leq l_i,r_i,b_i \\leq 10^9$\u3002\n# \u9898\u76ee\u5206\u6790\n\n\u6570\u636e\u8303\u56f4\u8fc7\u5927\uff0c\u6211\u4eec\u5148\u79bb\u6563\u5316\u3002\n\n\u628a\u6240\u6709\u8f66\u548c\u4eba\u7684\u64cd\u4f5c\u4e00\u8d77\u79bb\u7ebf\u4e0b\u6765\uff0c\u6309\u7167\u5de6\u7aef\u70b9\u6392\u5e8f\uff0c\u5982\u679c\u5de6\u7aef\u70b9\u76f8\u7b49\u90a3\u4e48\u8f66\u5728\u4eba\u524d\u9762\uff0c\u56e0\u4e3a\u8981\u5c3d\u53ef\u80fd\u7684\u6709 $s_i\\le l_i$\u3002\u6392\u5e8f\u540e\uff0c\u5982\u679c\u5f53\u524d\u662f\u4e00\u8f86\u8f66\uff0c\u90a3\u5c31\u52a0\u5165\u7ebf\u6bb5\u6811\u91cc\u3002\u53cd\u4e4b\u82e5\u662f\u4e00\u4e2a\u4eba\uff0c\u5219\u5728 **\u5f53\u524d\u7684** \u7ebf\u6bb5\u6811\u4e2d\u627e\u5230\u5927\u4e8e\u7b49\u4e8e $r_i$ \u7684\u6700\u5c0f\u7684 $f_i$\u3002\u7ebf\u6bb5\u6811\u7684\u4e0b\u6807\u662f $t_i,b_i$\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4 $f_i$ \u7684\u6700\u5927\u503c\u3002\u8fd9\u6837\u4e4b\u524d\u7684\u6392\u5e8f\u4fdd\u8bc1\u4e86 $s_i\\le l_i$\uff0c\u7ebf\u6bb5\u6811\u67e5\u8be2\u65f6\u5212\u5b9a\u533a\u95f4\u4fdd\u8bc1\u4e86 $b_i\\le t_i$\uff0c\u7ebf\u6bb5\u6811\u4fdd\u8bc1\u4e86 $r_i\\le f_i$ \u6700\u5c0f\u3002\n\n\u7136\u540e\u53d1\u73b0\u5f88\u677f\uff0c\u6ce8\u610f\u4e00\u4e9b\u7ec6\u8282\u5373\u53ef\u3002\n\n\u6ce8\u610f\u4ee3\u7801\u6700\u540e\u8981\u52a0 `fflush(stdout);`\uff0c\u5426\u5219\u4f1a $\\verb!Idleness limit exceeded!$\u3002\n\n# \u4ee3\u7801\n\n```cpp\n// Problem: CF160E Buses and People\n// Contest: Luogu\n// URL: https://www.luogu.com.cn/problem/CF160E\n// Memory Limit: 250 MB\n// Time Limit: 1000 ms\n// Date:2022-06-29 22:29\n// \n// Powered by CP Editor (https://cpeditor.org)\n\n#include <iostream>\n#include <cstdio>\n#include <climits>//need \"INT_MAX\",\"INT_MIN\"\n#include <cstring>//need \"memset\"\n#include <numeric>\n#include <algorithm>\n#include <cmath>\n#define enter putchar(10)\n#define debug(c,que) std::cerr << #c << \" = \" << c << que\n#define cek(c) puts(c)\n#define blow(arr,st,ed,w) for(register int i = (st);i <= (ed); ++ i) std::cout << arr[i] << w;\n#define speed_up() std::ios::sync_with_stdio(false),std::cin.tie(0),std::cout.tie(0)\n#define mst(a,k) memset(a,k,sizeof(a))\n#define stop return(0)\nconst int mod = 1e9 + 7;\ninline int MOD(int x) {\n\tif(x < 0) x += mod;\n\treturn x % mod;\n}\nnamespace Newstd {\n\tchar buf[1 << 21],*p1 = buf,*p2 = buf;\n\tinline int getc() {\n\t\treturn p1 == p2 && (p2 = (p1 = buf) + fread(buf,1,1 << 21,stdin),p1 == p2) ? EOF : *p1 ++;\n\t}\n\t#ifndef ONLINE_JUDGE\n\t#define getc getchar\n\t#endif\n\tinline int read() {\n\t\tint ret = 0,f = 0;char ch = getc();\n\t\twhile (!isdigit(ch)) {\n\t\t\tif(ch == '-') f = 1;\n\t\t\tch = getc();\n\t\t}\n\t\twhile (isdigit(ch)) {\n\t\t\tret = (ret << 3) + (ret << 1) + ch - 48;\n\t\t\tch = getc();\n\t\t}\n\t\treturn f ? -ret : ret;\n\t}\n\tinline double double_read() {\n\t\tlong long ret = 0,w = 1,aft = 0,dot = 0,num = 0;\n\t\tchar ch = getc();\n\t\twhile (!isdigit(ch)) {\n\t\t\tif (ch == '-') w = -1;\n\t\t\tch = getc();\n\t\t}\n\t\twhile (isdigit(ch) || ch == '.') {\n\t\t\tif (ch == '.') {\n\t\t\t\tdot = 1;\n\t\t\t} else if (dot == 0) {\n\t\t\t\tret = (ret << 3) + (ret << 1) + ch - 48;\n\t\t\t} else {\n\t\t\t\taft = (aft << 3) + (aft << 1) + ch - '0';\n\t\t\t\tnum ++;\n\t\t\t}\n\t\t\tch = getc();\n\t\t}\n\t\treturn (pow(0.1,num) * aft + ret) * w;\n\t}\n\tinline void write(int x) {\n\t\tif(x < 0) {\n\t\t\tputchar('-');\n\t\t\tx = -x;\n\t\t}\n\t\tif(x > 9) write(x / 10);\n\t\tputchar(x % 10 + '0');\n\t}\n}\nusing namespace Newstd;\n\nconst int N = 2e5 + 5;\nstruct Node {\n\tint id,l,r,t;\n} node[N];\nint b[N],ans[N];\nint n,m;\nstruct Segment_Tree {\n\tstruct Tree {\n\t\tint l,r;\n\t\tint Max,id;\n\t} tr[N << 2];\n\t#define lson (p << 1)\n\t#define rson (p << 1 | 1)\n\tinline void pushup(int p) {\n\t\tif (tr[p].Max < tr[lson].Max) tr[p].Max = tr[lson].Max,tr[p].id = tr[lson].id;\n\t\tif (tr[p].Max < tr[rson].Max) tr[p].Max = tr[rson].Max,tr[p].id = tr[rson].id;\n\t}\n\tinline void build(int p,int l,int r) {\n\t\ttr[p].l = l,tr[p].r = r;\n\t\tif (l == r) {\n\t\t\ttr[p].Max = tr[p].id = 0;\n\t\t\treturn;\n\t\t}\n\t\tint mid = l + r >> 1;\n\t\tbuild(lson,l,mid),build(rson,mid + 1,r);\n\t\tpushup(p);\n\t}\n\t//\u67e5\u627e\u7b2c\u4e00\u4e2a\u5c0f\u4e8e\u7b49\u4e8e k \u7684\u4f4d\u7f6e \n\tinline int query(int x,int y,int p,int k) {\n\t\tif (tr[p].l == tr[p].r && tr[p].Max >= k) {\n\t\t\treturn tr[p].id;\n\t\t}\n\t\tint mid = tr[p].l + tr[p].r >> 1;\n\t\tif (x <= mid && tr[lson].Max >= k) {\n\t\t\tint le = query(x,y,lson,k);\n\t\t\tif (le != -1) return le; \n\t\t} \n\t\tif (y > mid && tr[rson].Max >= k) {\n\t\t\tint ri = query(x,y,rson,k);\n\t\t\tif (ri != -1) return ri;\n\t\t}\n\t\treturn -1;\n\t}\n\tinline void update(int x,int p,int k,int id) {\n\t\tif (tr[p].l == tr[p].r) {\n\t\t\tif (tr[p].Max < k) {\n\t\t\t\ttr[p].Max = k,tr[p].id = id;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tint mid = tr[p].l + tr[p].r >> 1;\n\t\tif (x <= mid) update(x,lson,k,id);\n\t\telse update(x,rson,k,id);\n\t\tpushup(p); \n\t}\n\t#undef lson\n\t#undef rson\n} seg;\nint main(void) {\n\tn = read(),m = read();\n\tfor (register int i = 1;i <= n + m; ++ i) {\n\t\tnode[i].l = read(),node[i].r = read(),node[i].t = read();\n\t\tnode[i].id = i,b[i] = node[i].t;\n\t}\n\tstd::sort(node + 1,node + n + m + 1,[&](Node x,Node y)mutable {\n\t\treturn x.l == y.l ? x.id < y.id : x.l < y.l;\n\t});\n\tstd::sort(b + 1,b + n + m + 1);\n\tint num = std::unique(b + 1,b + n + m + 1) - b - 1;\n\tseg.build(1,1,num);\n\tfor (register int i = 1;i <= n + m; ++ i) node[i].t = std::lower_bound(b + 1,b + num + 1,node[i].t) - b;\n\tfor (register int i = 1;i <= n + m; ++ i) {\n\t\tif (node[i].id <= n) seg.update(node[i].t,1,node[i].r,node[i].id);\n\t\telse ans[node[i].id - n] = seg.query(node[i].t,num,1,node[i].r);\n\t}\n\tfor (register int i = 1;i <= m; ++ i) printf(\"%d \",ans[i]);\n\tfflush(stdout);\n\t\n\treturn 0;\n}\n```",
        "postTime": 1656544623,
        "uid": 430409,
        "name": "Coros_Trusds",
        "ccfLevel": 6,
        "title": "CF160E Buses and People"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7684\u9650\u5236\u6761\u4ef6\u5f88\u591a\uff1a$l,r,t\\dots$ \u6240\u4ee5\u6211\u4eec\u8981\u8bbe\u6cd5\u4e00\u4e2a\u4e00\u4e2a\u89e3\u51b3\u8fd9\u4e9b\u9650\u5236\u3002\u5bb9\u6613\u77e5\u9053\uff0c\u5f53\u6211\u4eec\u4ee5\u5176\u4e2d\u67d0\u4e00\u4e2a\u4e3a\u5173\u952e\u5b57\u5c06\u4eba\u548c\u8f66\u6392\u5e8f\u8fc7\u540e\u5c31\u53ea\u5269\u4e0b\u4e24\u4e2a\u9650\u5236\u4e86\u3002\u8fd9\u91cc\u6211\u662f\u5bf9\u53f3\u7aef\u70b9\u6392\u5e8f\u3002\n\n\u6392\u5b8c\u8fc7\u540e\uff0c\u6211\u4eec\u5c31\u53ea\u7528\u627e\u5408\u6cd5\u7684\u8f66\u7684\u5de6\u7aef\u70b9\uff08\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u4eba\u7684\u5de6\u7aef\u70b9\uff09\u548c\u5408\u6cd5\u7684\u65f6\u95f4\uff08\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u4eba\u7684\u65f6\u95f4\uff09\u3002\u6211\u4eec\u53d1\u73b0\u65f6\u95f4\u53ef\u4ee5\u4e8c\u5206\u3002\u90a3\u6211\u4eec\u5c31\u4e8c\u5206\u65f6\u95f4\uff0c\u56e0\u4e3a\u8fd9\u65f6\u6211\u4eec\u9700\u8981\u627e\u7684\u662f\u5de6\u7aef\u70b9\u7684\u6700\u5c0f\u503c\u3002\u73b0\u5728\u590d\u6742\u5ea6\u662f $O(n\\log n)$\uff0c\u95ee\u9898\u662f\u5982\u4f55\u7ef4\u62a4\u3002\n\n\u6700\u5c0f\u503c\uff1f\u5355\u70b9\u4fee\u6539\uff1f\u533a\u95f4\u67e5\u8be2\uff1f\u53ef\u4ee5 $O(\\log n)$\uff1f\u4e0d\u6253\u7ebf\u6bb5\u6811\u8fd8\u6253\u4ec0\u4e48\uff1f\u90a3\u4e48\u6211\u4eec\u5c31\u7ef4\u62a4\u65f6\u95f4\u8f74\u4e0a\uff08\u9700\u79bb\u6563\u5316\uff09\u7684\u5de6\u7aef\u70b9\u6700\u5c0f\u503c\u3002\u5c06\u4e8c\u5206\u51fa\u6765\u7684 $t$ \u503c\u518d\u5bf9\u5e94\u5230\u8f66\u7684\u7f16\u53f7\u4e0a\uff0c\u5c31OK\u4e86\uff0c\u590d\u6742\u5ea6 $O(n\\log^2n)$\uff0c\u4f46\u80af\u5b9a\u662f\u8dd1\u4e0d\u6ee1\u7684\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=100005;\nint n,m,cnt,tim[N<<1],ans[N],enh,lft,idx[N<<1];\nstruct P{\n\tint t,l,r,id;\n\tint p;\n}a[N<<1];\nint val[N<<3];//\u7ebf\u6bb5\u6811\nbool cmp(P x,P y) {\n\tif (x.r>y.r) return false;\n\tif (x.r==y.r&&x.p>y.p) return false;//\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u4eba\u548c\u8f66t\u503c\u76f8\u7b49\uff0c\u9700\u5148\u8003\u8651\u8f66\n\treturn true;\n}\ninline void pushup(int p) {\n\tval[p]=min(val[p<<1],val[p<<1^1]);\n\treturn;\n}\nvoid upd(int p,int l,int r,int x,int d) {\n\tif (l==r) {\n\t\tval[p]=min(val[p],d);\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif (x<=mid) upd(p<<1,l,mid,x,d);\n\tif (x>mid) upd(p<<1^1,mid+1,r,x,d);\n\tpushup(p);\n\treturn;\n}\nint get(int p,int l,int r,int L,int R) {\n\tif (L<=l&&r<=R) return val[p];\n\tint mid=(l+r)>>1,res=2e9;\n\tif (L<=mid) res=min(res,get(p<<1,l,mid,L,R));\n\tif (R>mid) res=min(res,get(p<<1^1,mid+1,r,L,R));\n\treturn res;\n}\ninline bool check(int x) {//\u4e8c\u5206\u5408\u6cd5\u7684t\n\treturn get(1,1,cnt,lft,x)<=enh;//\u533a\u95f4\u67e5\u8be2\n}\nint binary_search(int l,int r) {\n\tif (l==r) return l;\n\tif (l==r-1) {\n\t\tif (check(l)) return l;\n\t\treturn r;\t\n\t}\n\tint mid=(l+r)>>1;\n\tif (check(mid)) return binary_search(l,mid);\n\treturn binary_search(mid+1,r);\n}\nint main() {\n\tmemset(val,127,sizeof val);\n\tscanf(\"%d %d\",&n,&m);\n\tfor (int i=1;i<=n;i++) {\n\t\tscanf(\"%d %d %d\",&a[i].l,&a[i].r,&a[i].t);\n\t\ta[i].p=1, a[i].id=i;\n\t\ttim[++cnt]=a[i].t;\n\t}\n\tfor (int i=n+1;i<=n+m;i++) {\n\t\tscanf(\"%d %d %d\",&a[i].l,&a[i].r,&a[i].t);\n\t\ta[i].id=i-n;\n\t\ttim[++cnt]=a[i].t;\n\t}\n\tstable_sort(a+1,a+n+m+1,cmp);\n\tsort(tim+1,tim+cnt+1);//\u79bb\u6563\u5316\n\tfor (int i=1;i<=n+m;i++) {\n\t\ta[i].t=lower_bound(tim+1,tim+cnt+1,a[i].t)-tim;//t\u503c\u5bf9\u5e94\u5230\u7f16\u53f7\n\t\tif (a[i].p) idx[a[i].t]=a[i].id;\n\t}\n\tfor (int i=n+m;i>=1;i--) {\n\t\tif (a[i].p) upd(1,1,cnt,a[i].t,a[i].l);//\u5355\u70b9\u4fee\u6539\n\t\telse {\n\t\t\tlft=a[i].t;\n\t\t\tenh=a[i].l;\n\t\t\tint k=binary_search(a[i].t,cnt+1);\n\t\t\tif (k>cnt) ans[a[i].id]=-1;\n\t\t\telse ans[a[i].id]=idx[k];//\u8bb0\u5f55\u7b54\u6848\n\t\t}\n\t}\n\tfor (int i=1;i<=m;i++) {\n\t\tprintf(\"%d \",ans[i]);\n\t}\n\treturn 0;\n}  \n```",
        "postTime": 1639212585,
        "uid": 407223,
        "name": "TulipeNoire",
        "ccfLevel": 7,
        "title": "Buses and people"
    },
    {
        "content": "\u9898\u610f\uff1a\n\n\u7ed9\u5b9an\u8f86\u516c\u4ea4\u8f66 $t_i$\u65f6\u95f4\u4ece$s_i$\u51fa\u53d1\u53bb$f_i$,\n\n\u6709m\u4e2a\u4eba\uff0c$b_i$\u65f6\u95f4\u6216\u4e4b\u540e\u4ece$l_i$\u53bb$r_i$\n\n\u6c42\u6bcf\u4e2a\u4eba\u6700\u65e9\u642d\u54ea\u8f86\u8f66\u3002\n\n\u5373\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u4eba \u6c42\u516c\u4ea4\u8f66$t_i$\u6700\u5c0f\uff0c\u4e14$t_i\\ge b_i$,$l_i\\ge s_i$,$f_i\\le r_i$\u3002\n\n\n\u5206\u6790\uff1a\n\n\u79bb\u6563\u5316\u65f6\u95f4\u3002\u6309\u7167$l_i$\u6392\u5e8f\uff0c\u518d\u6309\u7167\u516c\u4ea4->\u4eba \u6392\u5e8f\n\n\u6309\u65f6\u95f4\u5efa\u7acb\u7ebf\u6bb5\u6811\u3002\n\n\u6309\u7167\u6392\u597d\u5e8f\u7684\u5c06\u8f66\u63d2\u5165\u7ebf\u6bb5\u6811\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4$f_i$\u7684\u6700\u5927\u503c\u3002\n\n\u67e5\u8be2\u65f6\uff0c\u67e5\u8be2$[1,b_i]$\u533a\u95f4\u4e2d\u6ee1\u8db3$f_i\\le r_i$\u7684\u6700\u5c0f$t_i$\n\n(\u6309\u7167\u987a\u5e8f\u63d2\u5165\uff0c\u4fdd\u8bc1\u4e86$l_i\\ge s_i$)\n\n\u518d\u6b21\u4f53\u4f1a\u5230\u7ebf\u6bb5\u6811\u7684\u5f3a\u5927\u3002\n\n~~@jljljl \u592a\u5f3a\u4e86 \u6211\u770bta\u9898\u89e3\u61c2\u7684\u3002\u4ee3\u7801\u53ef\u80fd\u4f1a\u76f8\u4f3c\u3002~~\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define rep(i,x,y) for(int i=x;i<=y;i++)\n#define per(i,x,y) for(int i=x;i>=y;i--)\n#define rd(x) scanf(\"%d\",&x)\ntypedef long long LL;\nconst int N=1e5+10,inf=0x3f3f3f3f;\nint n,m,lsh[N<<1],ans[N],tr[N<<3]; \nstruct pos{\n\tint t,l,r,tp,id;\n}tmp[N<<1];\nbool cmp(pos x,pos y){ return (x.l==y.l)?(x.tp>y.tp):(x.l<y.l); }\nvoid pushup(int rt){ tr[rt]=(tmp[tr[rt<<1]].r>tmp[tr[rt<<1|1]].r)?tr[rt<<1]:tr[rt<<1|1]; }\nvoid update(int rt,int l,int r,int x,int id){\n\tif(l==r){\n\t\tif(tmp[tr[rt]].r<tmp[id].r) tr[rt]=id; //\u7ef4\u62a4\u6700\u5927r(\u4ee5\u5e8f\u53f7\u5f62\u5f0f) \n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tif(x<=mid) update(rt<<1,l,mid,x,id);\n\telse update(rt<<1|1,mid+1,r,x,id);\n\tpushup(rt);\n}\nint query(int rt,int l,int r,int x,int id){\n\tif(tmp[tr[rt]].r<tmp[id].r||lsh[r]<tmp[id].t) return -1;\n\t//\u516c\u4ea4\u8f66\u7684\u6700\u5927r\u8fd8\u4e0d\u5982\u67e5\u8be2r \u6216\u8005\u516c\u4ea4\u8f66\u7684t\u5c0f\u4e8e\u67e5\u8be2t\n\tif(l==r) return tmp[tr[rt]].id;\n\tint mid=l+r>>1;\n\tint ret=query(rt<<1,l,mid,x,id);\n\tif(ret!=-1) return ret; \n\tret=query(rt<<1|1,mid+1,r,x,id);\n\treturn ret;\n}\nint main(){\n\trd(n);rd(m);\n\trep(i,1,n){\n\t\trd(tmp[i].l),rd(tmp[i].r),rd(tmp[i].t);\n\t\ttmp[i].tp=1,tmp[i].id=i;\n\t\tlsh[i]=tmp[i].t;\n\t}\n\trep(i,1,m){\n\t\trd(tmp[i+n].l),rd(tmp[i+n].r),rd(tmp[i+n].t);\n\t\ttmp[i+n].tp=0,tmp[i+n].id=i;\n\t\tlsh[i+n]=tmp[i+n].t;\n\t}\n\t\n\tsort(lsh+1,lsh+n+m+1);sort(tmp+1,tmp+n+m+1,cmp);\n\tint tot=unique(lsh+1,lsh+n+m+1)-lsh-1;\n\t\n\tfor(int i=1;i<=n+m;i++){\n\t\tint nwt=lower_bound(lsh+1,lsh+tot+1,tmp[i].t)-lsh;\n\t\tif(tmp[i].tp) update(1,1,tot,nwt,i);\n\t\telse ans[tmp[i].id]=query(1,1,tot,nwt,i);\n\t}\n\trep(i,1,m) printf(\"%d \",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1603871037,
        "uid": 106738,
        "name": "_Felix",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF160E \u3010Buses and People\u3011"
    },
    {
        "content": "  \u95ee\u9898\u53ef\u4ee5\u770b\u505a\u4e09\u7ef4\u6570\u70b9\uff0c\u76f4\u63a5\u505a 3 \u4e2a log \uff0c\u4f17\u6240\u5468\u77e5\u626b\u63cf\u7ebf\u6216\u8005 cdq \u5206\u6cbb\u53ef\u4ee5\u901a\u8fc7\u79bb\u7ebf\u5e72\u6389\n\u4e00\u7ef4\u505a\u5230\u4e24\u4e2a log \uff0c\u4f46\u4e0d\u5728\u8ba8\u8bba\u8303\u56f4\u5185\uff0c\u56e0\u4e3a\u6709\u66f4\u4f18\u79c0\u7684\u505a\u6cd5\u3002\n\n  \u8fd9\u4e2a\u95ee\u9898\u6bd4\u8f83\u7279\u6b8a\uff0c\u6570\u70b9\u662f\u6570\u6700\u5c0f\u503c\uff0c\u5e76\u4e14\u662f\u6570\u67d0\u4e00\u4e2a\u7ef4\u5ea6\u7684\u6700\u5c0f\u503c\uff0c\u90a3\u4e48\u5728\u8be5\u7ef4\u5ea6\u4e0a\u4f7f\u7528\u626b\u63cf\n\u7ebf\u7684\u540c\u65f6\u53ef\u4ee5\u8d2a\u5fc3\uff0c\u5177\u4f53\u7684\uff0c\u6309\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u52a0\u5165\u5143\u7d20\uff0c\u5982\u679c\u626b\u63cf\u7684\u662f\u88ab\u8be2\u95ee\u7684\u5143\u7d20\uff0c\u90a3\u4e48\u5728\u6240\u6709\n\u5f53\u524d\u88ab\u626b\u63cf\u5230\u7684\u53e6\u5916\u4e24\u4e2a\u7ef4\u5ea6\u6ee1\u8db3\u6761\u4ef6\u7684\u672a\u786e\u5b9a\u7b54\u6848\u7684\u8be2\u95ee\u5143\u7d20\u7684\u7b54\u6848\u5c31\u662f\u5f53\u524d\u626b\u63cf\u5230\u8fd9\u4e2a\u5143\u7d20\u3002\n\u7528\u4e00\u4e2a\u6570\u636e\u7ed3\u7ed3\u6784\u7ef4\u62a4\u6240\u6709\u672a\u786e\u5b9a\u7b54\u6848\u7684\u8be2\u95ee\u5143\u7d20\uff0c\u6bcf\u626b\u63cf\u4e00\u4e2a\u88ab\u8be2\u95ee\u5143\u7d20\u5c31\u9010\u4e2a\u67e5\u8be2\u6ee1\u8db3\u6761\u4ef6\u7684\n\u8be2\u95ee\u5143\u7d20\u786e\u5b9a\u7b54\u6848\u5e76\u5220\u9664\u4e4b\uff0c\u6bcf\u626b\u63cf\u4e00\u4e2a\u8be2\u95ee\u5143\u7d20\u5c31\u52a0\u5165\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u3002\n\n  \u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u53ea\u5173\u5fc3\u53e6\u5916\u4e24\u4e2a\u7ef4\u5ea6\uff0c\u9700\u8981\u5728\u4e8c\u7ef4\u7a7a\u95f4\u4e2d\u652f\u6301\uff1a\n\n1. \u67e5\u8be2\u4e00\u4e2a\u77e9\u5f62\u5185\u7684\u4efb\u610f\u4e00\u4e2a\u70b9\uff08\u8fd9\u4e2a\u77e9\u5f62\u5b9e\u9645\u4e0a\u53ea\u786e\u5b9a\u4e00\u4e2a\u7aef\u70b9\u548c\u4e24\u4e2a\u65b9\u5411\u65e0\u9650\u5ef6\u4f38\u7684\u534a\u5e73\u9762\uff09\n\n2. \u52a0\u5165\u4e00\u4e2a\u70b9\n\n3. \u5220\u9664\u67e5\u8be2\u7684\u70b9\n\n  \u4e4d\u4e00\u770b\u8fd8\u662f\u8981\u4e24\u4e2a log \uff0c\u4f46\u4e8b\u5b9e\u4e0a\u7531\u4e8e\u6b64\u65f6\u70b9\u6ca1\u6709\u4efb\u4f55\u6743\u503c\u6807\u8bc6\uff0c\u53ef\u4ee5\u5c06\u4e00\u4e2a\u7ef4\u5ea6\u7528\u952e\u503c\uff0c\u53e6\u4e00\n\u4e2a\u7ef4\u5ea6\u7528\u6743\u503c\u653e\u5728\u4e00\u4e2a\u4e00\u7ef4\u6570\u636e\u7ed3\u6784\u5185\u7ef4\u62a4\u8d77\u6765\uff0c\u4e00\u9897\u666e\u901a\u7684\u7ebf\u6bb5\u6811\u5c31\u8db3\u4ee5\u80dc\u4efb\u3002\n\n  \u5177\u4f53\u7684\uff0c\u7ebf\u6bb5\u6811\u7684\u7b2c $x$ \u4e2a\u53f6\u5b50\u8282\u70b9\u7ef4\u62a4\u7684\u662f\u7b2c\u4e00\u7ef4\u4e3a $x$ \u7684\u6240\u6709\u70b9\uff0c\u6bcf\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u7ef4\u62a4\u7684\n\u662f\u7b2c\u4e00\u7ef4\u5728\u5bf9\u5e94\u952e\u503c\u533a\u95f4\u5185\u7684\u6240\u6709\u70b9\u4e2d\u7b2c\u4e8c\u7ef4\u7684\u6700\u5c0f\u503c\u3002\u8fd9\u6837\u67e5\u8be2\u7684\u65f6\u5019\u5c31\u53ea\u9700\u8981\u67e5\u8be2\u7b2c\u4e00\u7ef4\u5bf9\u5e94\n\u952e\u503c\u8303\u56f4\u5185\u662f\u5426\u6709\u7b2c\u4e8c\u7ef4\u6ee1\u8db3\u6761\u4ef6\u7684\u70b9\u5373\u53ef\u3002\n\n\u53e6\u5916\u7531\u4e8e\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u53ef\u80fd\u6709\u591a\u4e2a\u70b9\u8981\u7ef4\u62a4\u70b9\uff0c\u9700\u8981\u53e6\u5916\u7528\u5806\u7ef4\u62a4\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O((n+m)\\log(n+m))$ \uff0c\u5176\u5b9e\u597d\u50cf\u4e5f\u6ca1\u5361\u4e24\u4e2a log \u7684\u505a\u6cd5\u3002\n\n\u53c2\u8003\u5b9e\u73b0\uff1a\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <set>\n#define debug(...) fprintf(stderr, __VA_ARGS__)\n\ntypedef long long ll;\ntypedef std::pair<int, int> par;\n\nstruct {\n\tinline operator int () { int x; return scanf(\"%d\", &x), x; }\n\ttemplate<class T> inline void operator () (T &x) { x = *this; }\n\ttemplate<class T, class ...A> inline void operator () (T &x, A &...a)\n\t{ x = *this; this -> operator () (a...); }\n} read;\n\nconst int maxn = 400005;\nstruct shit {\n\tint l, r, t, i, o;\n} a[maxn << 1];\nint ans[maxn];\nint tmp[maxn];\npar seg[maxn << 2], INF = par(1000000000, 1000000000);\nstd::set<par> set[maxn];\n\nvoid insert (int now, int L, int R, int p, par x) {\n\tif (L == R) {\n\t\tset[p].insert(x);\n\t\tseg[now] = *set[p].begin();\n\t\treturn;\n\t}\n\tint M = (L + R) >> 1;\n\tif (p <= M) insert(now << 1, L, M, p, x);\n\telse insert(now << 1 | 1, M + 1, R, p, x);\n\tseg[now] = std::min(seg[now << 1], seg[now << 1 | 1]);\n}\n\nvoid pop (int now, int L, int R, int p) {\n\tif (L == R) {\n\t\tset[p].erase(set[p].begin());\n\t\tseg[now] = *set[p].begin();\n\t\treturn;\n\t}\n\tint M = (L + R) >> 1;\n\tif (p <= M) pop(now << 1, L, M, p);\n\telse pop(now << 1 | 1, M + 1, R, p);\n\tseg[now] = std::min(seg[now << 1], seg[now << 1 | 1]);\n}\n\npar query (int now, int L, int R, int l, int r) {\n\tif (r < L or l > R) return INF;\n\tif (l <= L and R <= r) return seg[now];\n\tint M = (L + R) >> 1;\n\treturn std::min(query(now << 1, L, M, l, r),\n\t\t\tquery(now << 1 | 1, M + 1, R, l, r));\n}\n\nvoid build (int now, int L, int R) {\n\tseg[now] = INF;\n\tif (L == R)\n\t\treturn set[L].insert(INF), void();\n\tint M = (L + R) >> 1;\n\tbuild(now << 1, L, M);\n\tbuild(now << 1 | 1, M + 1, R);\n}\n\nint main () {\n\tint n = read, m = read, p = 0;\n\tfor (int i = 1; i <= n; i ++) {\n\t\ta[++ p].o = 1;\n\t\tread(a[p].l, a[p].r, a[p].t);\n\t\ta[p].i = p;\n\t}\n\tfor (int i = 1; i <= m; i ++) {\n\t\ta[++ p].o = 2;\n\t\tread(a[p].l, a[p].r, a[p].t);\n\t\ta[p].i = p;\n\t}\n\n\tint t = 0;\n\tfor (int i = 1; i <= p; i ++) {\n\t\ttmp[++ t] = a[i].l;\n\t\ttmp[++ t] = a[i].r;\n\t}\n\n\tstd::sort(tmp + 1, tmp + t + 1);\n\tfor (int i = 1; i <= p; i ++) {\n\t\ta[i].l = int(std::lower_bound(tmp + 1, tmp + t + 1, a[i].l) - tmp);\n\t\ta[i].r = int(std::lower_bound(tmp + 1, tmp + t + 1, a[i].r) - tmp);\n\t}\n\n\tstd::sort(a + 1, a + p + 1, [] (shit x, shit y) {\n\t\t\t\treturn x.t == y.t ? x.o > y.o : x.t < y.t;\n\t\t\t});\n\n\tbuild(1, 1, t);\n\n\tfor (int i = 1; i <= p; i ++) {\n\t\tif (a[i].o == 1) {\n\t\t\tpar x = query(1, 1, t, a[i].l, a[i].r);\n\t\t\twhile (x.first <= a[i].r) {\n\t\t\t\tint j = x.second;\n\t\t\t\tans[a[j].i] = a[i].i;\n\t\t\t\tpop(1, 1, t, a[j].l);\n\t\t\t\tx = query(1, 1, t, a[i].l, a[i].r);\n\t\t\t}\n\t\t}\n\t\tif (a[i].o == 2)\n\t\t\tinsert(1, 1, t, a[i].l, par(a[i].r, i));\n\t}\n\n\tfor (int i = n + 1; i <= n + m; i ++)\n\t\tprintf(\"%d \", ans[i] ? ans[i] : -1);\n\tputs(\"\");\n}\n```",
        "postTime": 1588920266,
        "uid": 52232,
        "name": "Kewth",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF160E \u3010Buses and People\u3011"
    }
]