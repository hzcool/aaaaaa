[
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](http://codeforces.com/contest/1244/problem/F)\n\n## \u9898\u610f\n\n\u6709\u4e00\u4e2a\u5927\u5c0f\u4e3a $n$ \u7684\u73af\uff0c\u73af\u4e0a\u6bcf\u4e2a\u70b9\u6709\u4e00\u4e2a\u989c\u8272\uff08\u9ed1/\u767d\uff09\u3002\u5b9a\u4e49\u4e00\u6b21\u64cd\u4f5c\u662f\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9 $i$\uff0c\u82e5\u4ed6\u548c\u4ed6\u76f8\u90bb\u7684\u4e24\u4e2a\u70b9\u4e2d\uff0c\u767d\u70b9\u591a\u4e8e\u9ed1\u70b9\uff0c\u5219\u5728\u65b0\u7684\u73af\u4e2d\uff0c $i$ \u53d8\u6210\u767d\u8272\uff0c\u5426\u5219\u53d8\u4e3a\u9ed1\u8272\u3002\n\n\u6c42\u8fdb\u884c $k$ \u6b21\u64cd\u4f5c\u540e\u6bcf\u4e2a\u70b9\u7684\u989c\u8272\u3002\n\n$n\\le 2\\times 10^5,k\\le 10^9$\n\n## \u9898\u89e3\n\n\u53d8\u8272\u7684\u6761\u4ef6\u76f8\u5f53\u4e8e $i$ \u76f8\u90bb\u4e24\u4e2a\u70b9\u7684\u989c\u8272\u90fd\u4e0e $i$ \u7684\u989c\u8272\u4e0d\u540c\u3002\u5bf9\u4e8e\u4e00\u6bb5\u957f\u5ea6 $\\ge 2$ \u7684\u989c\u8272\u76f8\u540c\u7684\u6bb5\uff0c\u663e\u7136\u989c\u8272\u662f\u6c38\u8fdc\u4e0d\u4f1a\u53d8\u7684\u3002\u53ea\u6709\u8fd9\u6837\u7684\u6bb5\u4e4b\u95f4\u7684\u8fd9\u4e9b\u989c\u8272\u4ea4\u66ff\u6539\u53d8\u7684\u70b9\u7684\u989c\u8272\u4f1a\u53d1\u751f\u53d8\u5316\u3002\u4f8b\u5982 `WWWBWBWBWBBB` -> `WWWWBWBWBBBB` -> `WWWWWBWBBBBB` -> `WWWWWWBBBBBB`\u3002\n\n\u8003\u8651\u4e2d\u95f4\u7684\u989c\u8272\u4ea4\u66ff\u6539\u53d8\u7684\u4e00\u6bb5\uff08\u5982\u4e0a\u4f8b\u4e2d `BWBWBW`\uff09\uff0c\u53d1\u73b0\u6bcf\u8fdb\u884c\u4e00\u6b21\u64cd\u4f5c\uff0c\u4e24\u8fb9\u7684\u70b9\u4f1a\u5411\u4e24\u8fb9\u7684\u989c\u8272\u76f8\u540c\u7684\u8fde\u7eed\u6bb5\u5408\u5e76\uff0c\u4e2d\u95f4\u7684\u70b9\u4f1a\u6539\u53d8\u989c\u8272\u3002\u8bb0\u8fd9\u6837\u7684\u6bb5\u4e2d\u67d0\u4e2a\u70b9 $i$ \u5230\u4e24\u8fb9\u989c\u8272\u76f8\u540c\u8fde\u7eed\u6bb5\u7684\u8ddd\u79bb\u662f $a_i,b_i$\uff0c\u90a3\u4e48\u4ed6\u4f1a\u5728\u7b2c $\\min(a_i,b_i)$ \u6b21\u64cd\u4f5c\u88ab\u5408\u5e76\uff0c\u989c\u8272\u8981\u770b\u4e24\u8fb9\u6bb5\u7684\u989c\u8272\u548c\u5177\u4f53\u5f80\u54ea\u8fb9\u5408\u5e76\uff0c\u88ab\u5408\u5e76\u4e4b\u540e\u989c\u8272\u5c31\u4e0d\u4f1a\u518d\u53d8\u5316\uff0c\u800c\u5728\u88ab\u5408\u5e76\u4e4b\u524d\u989c\u8272\u5219\u662f\u4ea4\u66ff\u53d8\u5316\u3002\u6240\u4ee5\u53ea\u8981\u6839\u636e $k$ \u548c $\\min(a_i,b_i)$ \u7684\u5927\u5c0f\u8fdb\u884c\u8ba8\u8bba\u5373\u53ef\u3002\n\n\u8981\u6ce8\u610f\u7684\u662f\uff0c\u53ef\u80fd\u9898\u76ee\u7ed9\u5b9a\u5b57\u7b26\u4e32\u7684\u6700\u524d\u9762\u4e00\u6bb5\u548c\u6700\u540e\u9762\u4e00\u6bb5\u662f\u53ef\u4ee5\u62fc\u8d77\u6765\u7684\uff0c\u6240\u4ee5\u8981\u5bf9\u987a\u5e8f\u8fdb\u884c\u4e00\u5b9a\u7684\u8c03\u6574\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#define N 400005\nint n, k, d, dis1[N], dis2[N];\nchar a[N], b[N];\nbool check(){\n\tif (n & 1) return 0;\n\tfor (register int i = 2; i <= n; ++i)\n\t\tif (a[i] == a[i - 1]) return 0;\n\treturn 1;\n}\nint main(){\n\tscanf(\"%d%d%s\", &n, &k, a + 1);\n\tif (check()){\n\t\tif (k & 1) std :: reverse(a + 1, a + 1 + n);\n\t\treturn printf(\"%s\", a + 1), 0;\n\t}\n\tfor (register int i = 1; i <= n; ++i) a[n + i] = a[i];\n\tfor (register int i = n + 2; i < (n << 1); ++i)\n\t\tif (a[i - 1] != a[i] && a[i] != a[i + 1]) continue;\n\t\telse{ d = i - 1; break; }\n\tif (!d) d = (n << 1) - 1;\n\tfor (register int i = d - n + 1; i <= d; ++i)\n\t\tif (a[i - 1] != a[i] && a[i] != a[i + 1]) dis1[i] = dis1[i - 1] + 1;\n\t\telse dis1[i] = 0;\n\tfor (register int i = d; i > d - n; --i)\n\t\tif (a[i - 1] != a[i] && a[i] != a[i + 1]) dis2[i] = dis2[i + 1] + 1;\n\t\telse dis2[i] = 0;\n\tfor (register int i = d - n + 1; i <= d; ++i)\n\t\tif (a[i - 1] != a[i] && a[i] != a[i + 1])\n\t\t\tif (k >= std :: min(dis1[i], dis2[i]))\n\t\t\t\tif (dis1[i] < dis2[i]) b[i] = a[i - dis1[i]];\n\t\t\t\telse b[i] = a[i + dis2[i]];\n\t\t\telse b[i] = a[i] == 'B' && (k & 1) || (a[i] == 'W' && (k & 1 ^ 1)) ? 'W' : 'B';\n\t\telse b[i] = a[i];\n\tfor (register int i = 1; i <= d - n; ++i) putchar(b[i + n]);\n\tfor (register int i = d - n + 1; i <= n; ++i) putchar(b[i]);\n}\n```",
        "postTime": 1571097105,
        "uid": 20561,
        "name": "AutumnKite",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1244F \u3010Chips\u3011"
    },
    {
        "content": "~~\u901a\u8fc7\u522b\u4eba\u77e5\u9053\u7684\u505a\u6cd5\uff0c\u6240\u4ee5\u4e0d\u77e5\u9053\u53d1\u51fa\u6765\u597d\u4e0d\u597d\uff0c\u4f46\u662f\u592a\u9a9a\u4e86\u6240\u4ee5\u8fd8\u662f\u8981\u8bb0\u4e00\u4e0b\uff08\u5f81\u6c42\u4e86\u522b\u4eba\u540c\u610f~~\n\n\u9996\u5148\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u5947\u5999\u7684\u6027\u8d28\uff1a\n\n$1):$ \u5047\u8bbe\u67d0\u4e2a\u70b9\u5728\u7b2c\u4e00\u8f6e\u64cd\u4f5c\u65f6\u4e0d\u9700\u8981\u6539\u53d8\uff0c\u7136\u540e\u4ee5\u540e\u5176\u5747\u4e0d\u9700\u8981\u6539\u53d8\n\n$2):$ \u5047\u8bbe\u67d0\u4e2a\u70b9\u5728\u7b2c$x$\u8f6e\u64cd\u4f5c\u540e\u4e0d\u9700\u8981\u6539\u53d8\uff0c\u90a3\u4e48\u5176\u4e24\u8fb9\u7684\u70b9\u81f3\u5c11\u4f1a\u5728\u7b2c$x+1$\u8f6e\u64cd\u4f5c\u540e\u4e0d\u9700\u8981\u6539\u53d8\u3002\n\n\u6027\u8d28$1$\u6bd4\u8f83\u663e\u7136\uff0c\u6027\u8d28$2$\u5219\u662f\u56e0\u4e3a\u8fd9\u4e2a\u70b9\u5728\u7b2c$x$\u8f6e\u624d\u4e0d\u9700\u8981\u6539\u53d8\u7684\uff0c\u6240\u4ee5\u5728\u6b64\u4e4b\u524d\uff0c\u5176\u5fc5\u7136\u4f4d\u4e8e\u4e00\u4e2a$010101...$\u7684\u4e32\u5185\uff0c\u8fd9\u6837\u8003\u8651\u540e\u6027\u8d28$2$\u4fbf\u4e5f\u53ef\u4ee5\u53d1\u73b0\u4e86\n\n\u6240\u4ee5\u53ef\u4ee5\u5c06\u90a3\u4e48\u521d\u59cb\u4e0d\u9700\u8981\u6539\u53d8\u7684\u70b9\u52a0\u5165\u96c6\u5408\uff0c\u7136\u540e\u679a\u4e3e\u5176\u4e24\u8fb9\u7684\u70b9\u5e76\u62d3\u5c55\u5373\u53ef\n\n\u5c06\u8f6e\u6b21\u9650\u5b9a\u5728$k$\u8f6e\u4e4b\u7c7b\u5373\u53ef\n\n\u5bf9\u4e8e\u90a3\u4e48\u672a\u88ab\u904d\u5386\u5230\u7684\u70b9\uff0c\u90a3\u4e48\u5176\u80af\u5b9a\u6bcf\u6b21\u64cd\u4f5c\u540e\u90fd\u4f1a\u6539\u6210\u72b6\u6001\uff0c\u6240\u4ee5\u989d\u5916\u7edf\u8ba1\u4e00\u4e0b\u5176\u521d\u59cb\u72b6\u6001\u5373\u53ef\n\n\u590d\u6742\u5ea6$O(n)$\n\n~~\u8fd9\u6837\u5c31\u53ef\u4ee5\u4e3a\u8fd9\u9053\u9898\u6458\u6389\u5927\u6a21\u62dfsb\u9898\u4e4b\u7c7b\u7684\u79f0\u53f7\u4e86~~\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std ;\n#define rep( i, s, t ) for( register int i = s; i <= t; ++ i )\n#define re register\nint gi() {\n\tchar cc = getchar() ; int cn = 0, flus = 1 ;\n\twhile( cc < '0' || cc > '9' ) {  if( cc == '-' ) flus = - flus ; cc = getchar() ; }\n\twhile( cc >= '0' && cc <= '9' )  cn = cn * 10 + cc - '0', cc = getchar() ;\n\treturn cn * flus ;\n}\nconst int N = 2e5 + 5 ; \nint n, m, vis[N], L[N], R[N] ; \nchar s[N], w[N] ; \nqueue<int> Q ; \nsigned main()\n{\n\tn = gi(), m = gi(), scanf(\"%s\", s + 1 ), memset( vis, -1, sizeof(vis) ) ;\n\trep( i, 1, n ) L[i] = i - 1, R[i] = i + 1, w[i] = s[i] ; L[1] = n, R[n] = 1 ; \n\trep( i, 1, n ) if( s[L[i]] == s[i] || s[R[i]] == s[i] ) vis[i] = 0, Q.push(i) ;\n\twhile( !Q.empty() ) {\n\t\tint u = Q.front() ; Q.pop() ;\n\t\tif( vis[L[u]] == -1 ) vis[L[u]] = vis[u] + 1, Q.push(L[u]) ;\n\t\tif( vis[R[u]] == -1 ) vis[R[u]] = vis[u] + 1, Q.push(R[u]) ;\n\t}\n\trep( i, 1, n ) {\n\t\tif( vis[i] > m || vis[i] == -1 ) ( m & 1 ) ? printf(\"%c\", 'W' + 'B' - s[i] ) : printf(\"%c\", s[i] ) ;\n\t\telse ( vis[i] & 1 ) ? printf(\"%c\", 'W' + 'B' - s[i] ) : printf(\"%c\", s[i] ) ;\n\t}\n\treturn 0 ;\n}\n\n```",
        "postTime": 1571147717,
        "uid": 30036,
        "name": "Soulist",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1244F \u3010Chips\u3011"
    },
    {
        "content": "\u9898\u76ee\u94fe\u63a5\uff1a[CF1244F Chips](https://www.luogu.org/problem/CF1244F)\n\n\u3010\u5e7f\u544a\u3011[\u5728\u4e2a\u4eba\u535a\u5ba2\u98df\u7528](https://toxic2018.ml/1891/)\u98ce\u5473\u66f4\u4f73\n\n****\n\n### \u9898\u76ee\u63cf\u8ff0\n\n\u6709$n$\u4e2a\u68cb\u5b50\u6392\u6210\u73af\u72b6\uff0c\u6807\u53f7\u4e3a$1..n$\n\n\u4e00\u5f00\u59cb\u6bcf\u4e2a\u68cb\u5b50\u90fd\u662f\u9ed1\u8272\u6216\u767d\u8272\u7684\u3002\u968f\u540e\u6709$k$\u6b21\u64cd\u4f5c\u3002\u64cd\u4f5c\u65f6\uff0c\u68cb\u5b50\u53d8\u6362\u7684\u89c4\u5219\u5982\u4e0b\uff1a\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u68cb\u5b50\u672c\u8eab\u4ee5\u53ca\u4e0e\u5176\u76f8\u90bb\u7684\u4e24\u4e2a\u68cb\u5b50\uff08\u51713\u4e2a\uff09\uff0c\u5982\u679c\u5176\u4e2d\u767d\u5b50\u5360\u591a\u6570\uff0c\u90a3\u4e48\u8fd9\u4e2a\u68cb\u5b50\u5c31\u53d8\u6210\u767d\u5b50\uff0c\u5426\u5219\u8fd9\u4e2a\u68cb\u5b50\u5c31\u53d8\u6210\u9ed1\u5b50\u3002\u6ce8\u610f\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u68cb\u5b50\uff0c\u5728\u786e\u5b9a\u8981\u53d8\u6210\u4ec0\u4e48\u989c\u8272\u4e4b\u540e\uff0c\u5e76\u4e0d\u4f1a\u7acb\u5373\u6539\u53d8\u989c\u8272\uff0c\u800c\u662f\u7b49\u5230\u6240\u6709\u68cb\u5b50\u786e\u5b9a\u53d8\u6210\u4ec0\u4e48\u989c\u8272\u540e\uff0c\u6240\u6709\u68cb\u5b50\u624d\u540c\u65f6\u53d8\u6362\u989c\u8272\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u68cb\u5b50$i$\uff0c\u4e0e\u5176\u76f8\u90bb\u7684\u68cb\u5b50\u662f$i-1$\u548c$i+1$\u3002\u7279\u522b\u5730\uff0c\u5bf9\u4e8e\u68cb\u5b50$1$\uff0c\u4e0e\u5176\u76f8\u90bb\u7684\u68cb\u5b50\u662f$2$\u548c$n$\uff1b\u5bf9\u4e8e\u68cb\u5b50$n$\uff0c\u4e0e\u5176\u76f8\u90bb\u7684\u68cb\u5b50\u662f$1$\u548c$n-1$\u3002\n\n\u5982\u56fe\u662f\u5728$n=6$\u65f6\u8fdb\u884c\u7684\u4e00\u6b21\u64cd\u4f5c\u3002\n\n![\u56fe\u50cf](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1244F/954a54cba9c62be21723582b0f9fdfba14d8bb72.png)\n\n\u7ed9\u4f60$n$\u548c\u521d\u59cb\u65f6\u6bcf\u4e2a\u68cb\u5b50\u7684\u989c\u8272\uff0c\u4f60\u9700\u8981\u6c42\u51fa\u5728$k$\u6b21\u64cd\u4f5c\u540e\u6bcf\u4e2a\u68cb\u5b50\u7684\u989c\u8272\u3002\n\n### \u8f93\u5165\u683c\u5f0f\n\n\u7b2c\u4e00\u884c\u4e24\u4e2a\u6574\u6570$n\\ (3 \\leq n \\leq 2\\cdot 10^5)$\u548c$k\\ (1 \\leq k \\leq 10^9)$\uff0c\u8868\u793a\u68cb\u5b50\u603b\u6570\u4e0e\u64cd\u4f5c\u6b21\u6570\u3002\n\n\u7b2c\u4e8c\u884c\u662f\u4e00\u4e2a\u957f\u5ea6\u4e3a$n$\u7684\uff0c\u4ec5\u7531\u5b57\u7b26$B$\u548c$W$\u6784\u6210\u7684\u5b57\u7b26\u4e32\u3002\u5982\u679c\u7b2c$i$\u4e2a\u5b57\u7b26\u662f$B$\uff0c\u8868\u793a\u7b2c$i$\u4e2a\u68cb\u5b50\u4f4d\u9ed1\u8272\uff0c\u5426\u5219\u4e3a\u767d\u8272\u3002\n\n### \u8f93\u51fa\u683c\u5f0f\n\n\u4e00\u884c\uff0c\u957f\u5ea6\u4e3a$n$\u7684\uff0c\u4ec5\u7531\u5b57\u7b26$B$\u548c$W$\u6784\u6210\u7684\u5b57\u7b26\u4e32\uff0c\u63cf\u8ff0\u64cd\u4f5c\u5b8c\u6210\u540e\u6bcf\u4e2a\u68cb\u5b50\u7684\u989c\u8272\u3002\n\n\u6ce8\u610f\u8f93\u51fa\u7684\u987a\u5e8f\u8981\u548c\u8f93\u5165\u6570\u636e\u4e2d\u7684\u5bf9\u5e94\u3002\n\n### \u6837\u4f8b\u89e3\u91ca\n\n1. \u5c31\u662f\u9898\u76ee\u63cf\u8ff0\u4e2d\u4e3e\u7684\u90a3\u4e2a\u4f8b\u5b50\n\n2. \"WBWBWBW\" $\\rightarrow$ \"WWBWBWW\" $\\rightarrow$ \"WWWBWWW\" $\\rightarrow$ \"WWWWWWW\"\n\n3. \"BWBWBW\" $\\rightarrow$ \"WBWBWB\" $\\rightarrow$ \"BWBWBW\" $\\rightarrow$ \"WBWBWB\" $\\rightarrow$ \"BWBWBW\"\n\n****\n\n### \u63d0\u793a\n\n\u5982\u679c\u68cb\u5b50\u6570\u91cf\u662f\u5076\u6570\uff0c\u5e76\u4e14\u4efb\u610f\u4e24\u4e2a\u76f8\u90bb\u68cb\u5b50\u989c\u8272\u4e0d\u540c\uff0c\u90a3\u4e48\u7b54\u6848\u53ea\u548c$k$\u7684\u5947\u5076\u6027\u6709\u5173\u3002\u5426\u5219\uff0c\u68cb\u5b50\u7684\u72b6\u6001\u5c06\u5448\u6536\u655b\u8d8b\u52bf\uff0c\u6700\u7ec8\u8fbe\u5230\u4e00\u4e2a\u201c\u7a33\u5b9a\u72b6\u6001\u201d\uff0c\u4e0d\u518d\u6539\u53d8\u3002\n\n### \u91cd\u8981\u7684\u7ed3\u8bba\u4e0e\u8bc1\u660e\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u968f\u7740\u4e0d\u505c\u5730\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u68cb\u5b50\u7684\u53d8\u5316\u89c4\u5f8b\u5206\u4e3a\u4ee5\u4e0b\u4e24\u7c7b\uff1a\n\n1. \u5982\u679c\u68cb\u5b50\u6570\u662f\u5076\u6570\uff0c\u5e76\u4e14\u4efb\u610f\u4e24\u4e2a\u76f8\u90bb\u68cb\u5b50\u989c\u8272\u4e0d\u540c\uff0c\u90a3\u4e48\u7b54\u6848\u53ea\u548c$k$\u7684\u5947\u5076\u6027\u6709\u5173\u3002\n2. \u5426\u5219\uff0c\u68cb\u5b50\u7684\u72b6\u6001\u5c06\u5448\u6536\u655b\u8d8b\u52bf\uff0c\u6700\u7ec8\u8fbe\u5230\u4e00\u4e2a\u201c\u7a33\u5b9a\u72b6\u6001\u201d\uff0c\u4e0d\u518d\u6539\u53d8\u3002\n\n\u7406\u7531\uff1f\n\n\u5bf9\u4e8e\u7b2c\u4e00\u7c7b\uff1a\u663e\u7136\uff0c\u5047\u8bbe\u4e00\u5f00\u59cb\u72b6\u6001\u662f`BWBWBWBW...BWBW`\uff0c\u90a3\u4e48\u64cd\u4f5c\u5076\u6570\u6b21\u540e\uff0c\u72b6\u6001\u662f `BWBWBWBW...BWBW`\uff0c\u5426\u5219\u72b6\u6001\u662f `WBWBWBWB...WBWB`\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u7c7b\uff1a\n\n\u5982\u679c\u5f00\u59cb\u65f6\u5c31\u662f\u201c\u6e05\u4e00\u8272\u201d\uff0c\u90a3\u4e48\u5fc5\u7136\u5df2\u7ecf\u662f\u7a33\u5b9a\u72b6\u6001\u3002\n\n\u5426\u5219\u6211\u4eec\u6839\u636e\u989c\u8272\u5bf9\u8fd9\u4e2a\u68cb\u5b50\u73af\u5212\u5206\u201c\u8fde\u901a\u5757\u201d\u3002\u6bd4\u5982\u4e0b\u56fe\uff1a\n\n![\u8fde\u901a\u5757\u5212\u5206](https://toxic2018.ml/wp-content/uploads/2019/10/b3e0b682c6ee9975b0ddd35c582f93cf.png)\n\n\uff08\u5176\u4e2d\u957f\u5ea6\u4e3a1\u7684\u8fde\u901a\u5757\u7528\u4e00\u4e2a\u5c0f\u5706\u5708\u8868\u793a\uff09\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u5982\u679c\u4e00\u4e2a\u68cb\u5b50\u5df2\u7ecf\u5904\u4e8e\u957f\u5ea6\u5927\u4e8e1\u7684\u8fde\u901a\u5757\u4e2d\uff0c\u90a3\u4e48\u5728\u4e00\u6b21\u64cd\u4f5c\u540e\u5176\u989c\u8272\u4e0d\u4f1a\u6539\u53d8\uff0c\u5e76\u4e14\u5c06\u4ecd\u7136\u5904\u4e8e\u4e00\u4e2a\u957f\u5ea6\u5927\u4e8e1\u7684\u8fde\u901a\u5757\u4e2d\u3002\n\n\u5e76\u4e14\u5982\u679c\u4e00\u4e2a\u957f\u5ea6\u4e3a1\u7684\u8fde\u901a\u5757\u4e0e\u4e00\u4e2a\u957f\u5ea6\u5927\u4e8e1\u7684\u8fde\u901a\u5757\u76f8\u90bb\uff0c\u90a3\u4e48\u4e00\u6b21\u64cd\u4f5c\u540e\uff0c\u8fd9\u4e2a\u957f\u5ea6\u4e3a1\u7684\u8fde\u901a\u5757\u4e2d\u7684\u90a3\u4e2a\u68cb\u5b50\u5c31\u4f1a\u53d8\u8272\uff0c\u800c\u4e0e\u5176\u76f8\u90bb\u7684\uff0c\u957f\u5ea6\u5927\u4e8e1\u7684\u90a3\u4e2a\u8fde\u901a\u5757\u5374\u4e0d\u4f1a\u53d8\u8272\u3002\u90a3\u4e48\uff0c\u8fd9\u4e2a\u68cb\u5b50\u5c31\u88ab\u52a0\u5165\u5230\u4e86\u4e0e\u5176\u76f8\u90bb\u7684\u8fde\u901a\u5757\u4e2d\u3002\n\n\u8fd9\u6837\uff0c\u53ea\u8981\u56fe\u4e2d\u540c\u65f6\u5b58\u5728\u957f\u5ea6\u5927\u4e8e1\uff08\u8fd9\u4e2a\u4e00\u5b9a\u5b58\u5728\uff0c\u5426\u5219\u5c31\u4e0d\u662f\u6211\u4eec\u8ba8\u8bba\u7684\u60c5\u51b5\u4e86\uff09\u548c\u7b49\u4e8e1\u7684\u8fde\u901a\u5757\uff0c\u6bcf\u64cd\u4f5c\u4e00\u6b21\uff0c\u5176\u4e2d\u957f\u5ea6\u7b49\u4e8e1\u7684\u8fde\u901a\u5757\u6570\u91cf\u81f3\u5c11\u51cf\u5c111\u3002\u6700\u7ec8\uff0c\u4e00\u5b9a\u4f1a\u5230\u8fbe\u4e00\u4e2a\u4e0d\u5b58\u5728\u957f\u5ea6\u7b49\u4e8e1\u7684\u8fde\u901a\u5757\u7684\u72b6\u6001\u3002\u8fd9\u5c31\u662f\u201c\u7a33\u5b9a\u72b6\u6001\u201d\uff0c\u5230\u8fbe\u8fd9\u4e2a\u72b6\u6001\u540e\u518d\u8fdb\u884c\u64cd\u4f5c\uff0c\u5219\u6ca1\u6709\u68cb\u5b50\u4f1a\u518d\u6539\u53d8\u989c\u8272\u3002\n\n### \u89e3\u9898\u65b9\u6cd5\n\n\u6211\u4eec\u5c06\u6240\u6709\u957f\u5ea6\u4e3a1\u7684\u8fde\u901a\u5757\u63d0\u51fa\u6765\uff0c\u6784\u6210\u8fde\u901a\u5757\u3002\u4e3a\u4e86\u9632\u6b62\u6df7\u6dc6\uff0c\u6211\u4eec\u79f0\u8fd9\u79cd\u8fde\u901a\u5757\u4e3a\u201c\u76f8\u95f4\u533a\u95f4\u201d\u3002\n\n\u8fd9\u53e5\u8bdd\u53ef\u80fd\u6709\u70b9\u6655\uff0c\u4f46\u662f\u53ef\u4ee5\u501f\u52a9\u56fe\u7247\u7406\u89e3\uff08\u84dd\u8272\u8868\u793a\u6784\u6210\u7684\u76f8\u95f4\u533a\u95f4\uff09\uff1a\n\n![](https://toxic2018.ml/wp-content/uploads/2019/10/4c87b5303984e477c853ba38ca54a159.png)\n\n\u6839\u636e\u4e0a\u9762\u7684\u8bc1\u660e\uff0c\u6bcf\u6b21\u64cd\u4f5c\u65f6\uff0c\u53ea\u6709\u76f8\u95f4\u533a\u95f4\u4e2d\u7684\u68cb\u5b50\u4f1a\u4e14\u4e00\u5b9a\u4f1a\u6539\u53d8\u989c\u8272\u3002\u76f8\u95f4\u533a\u95f4\u4e2d\u7684\u68cb\u5b50\u6539\u53d8\u989c\u8272\u540e\uff0c\u5176\u4e24\u7aef\u7684\uff08\u6307\u533a\u95f4\u4e2d\u7684\u4e24\u7aef\uff09\u7684\u68cb\u5b50\u5c06\u4e0d\u518d\u5c5e\u4e8e\u76f8\u95f4\u533a\u95f4\u3002\n\n\u8bbe$dist_i$\u8868\u793a\u7b2c$i$\u4e2a\u68cb\u5b50\u79bb\u5176\u4e24\u4fa7\u7684\uff0c\u957f\u5ea6\u5927\u4e8e1\u7684\u8fde\u901a\u5757\u7684\u8ddd\u79bb\u4e2d\u8f83\u5c0f\u7684\u4e00\u4e2a\u3002\n\n\u4ece\u6b64\u5904\u5f00\u59cb\uff0c\u75280\u8868\u793a\u767d\u8272\uff0c1\u8868\u793a\u9ed1\u8272\u3002\n\n\u90a3\u4e48\uff0c\u5f53$k \\leq dist_i$\u65f6\uff0c\u7b2c$i$\u4e2a\u68cb\u5b50\u4ecd\u7136\u5c5e\u4e8e\u95f4\u9694\u533a\u95f4\uff0c\u5176\u503c\u4e3a`val[i] ^ (k&1)`\u3002\u5426\u5219\uff0c\u8fd9\u4e2a\u68cb\u5b50\u5df2\u7ecf\u88ab\u79bb\u5176\u8f83\u8fd1\u7684\u4e00\u4e2a\u957f\u5ea6\u5927\u4e8e1\u7684\u8fde\u901a\u5757\u7ed9\u201c\u540c\u5316\u201d\u4e86\uff08\u5982\u679c\u4e24\u4fa7\u7684\u8fde\u901a\u5757\u79bb\u8fd9\u4e2a\u68cb\u5b50\u4e00\u6837\u8fd1\uff0c\u663e\u7136\u4e24\u4fa7\u7684\u8fde\u901a\u5757\u989c\u8272\u76f8\u540c\uff09\u3002\n\n### \u5b9e\u73b0\u7ec6\u8282\n\n\u65b9\u4fbf\u8d77\u89c1\uff0c\u5148\u5c06\u68cb\u5b50\u6807\u53f7\u6539\u4e3a$0..n-1$\u3002\u8bbe`val[i]`\u8868\u793a\u68cb\u5b50`(i%n+n)%n`\u7684\u989c\u8272\u3002\n\n\u9996\u5148\uff0c\u7279\u5224\u6389\u201c\u68cb\u5b50\u6570\u662f\u5076\u6570\uff0c\u5e76\u4e14\u4efb\u610f\u4e24\u4e2a\u76f8\u90bb\u68cb\u5b50\u989c\u8272\u4e0d\u540c\u201d\u7684\u60c5\u51b5\u3002\n\n\u7136\u540e\uff0c\u6211\u4eec\u627e\u5230\u4efb\u610f\u4e00\u4e2a\u6ee1\u8db3`val[i] = val[i-1]`\u7684\u4f4d\u7f6e\u3002\n\n\u4ece\u8fd9\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u987a\u65f6\u9488\u626b\u4e00\u904d\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u76f8\u95f4\u533a\u95f4\u5185\u7684\u68cb\u5b50\u79bb\u5de6\u4fa7\u7684\uff0c\u957f\u5ea6\u5927\u4e8e1\u7684\u8fde\u901a\u5757\u7684\u8ddd\u79bb\uff0c\u4ee5\u53ca\u5176\u5de6\u4fa7\u7684\uff0c\u957f\u5ea6\u5927\u4e8e1\u7684\u8fde\u901a\u5757\u7684\u989c\u8272\u3002\n\n\u518d\u4ece\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u524d\u4e00\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u9006\u65f6\u9488\u626b\u4e00\u904d\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u76f8\u95f4\u533a\u95f4\u5185\u7684\u68cb\u5b50\u53f3\u4fa7\u7684\uff0c\u957f\u5ea6\u5927\u4e8e1\u7684\u8fde\u901a\u5757\u7684\u989c\u8272\u3002\u53e6\u5916\uff0c\u5224\u65ad\u6bcf\u4e2a\u76f8\u95f4\u533a\u95f4\u5185\u7684\u68cb\u5b50\u79bb\u53f3\u4fa7\u7684\uff0c\u957f\u5ea6\u5927\u4e8e1\u7684\u8fde\u901a\u5757\u7684\u8ddd\u79bb\u662f\u5426\u5c0f\u4e8e\u4e0a\u4e00\u8f6e\u8bb0\u5f55\u7684\u8ddd\u79bb\u3002\u5982\u679c\u5c0f\u4e8e\uff0c\u5c06\u8ddd\u79bb\u66f4\u65b0\u4e3a\u5f53\u524d\u8ddd\u79bb\u7684\u76f8\u53cd\u6570\uff08\u4f7f\u7528\u6b63\u8d1f\u4e24\u79cd\u6570\uff0c\u4ee5\u4fbf\u5224\u65ad\u4e00\u4e2a\u68cb\u5b50\u662f\u79bb\u5de6\u8fb9\u7684\u8fde\u901a\u5757\u66f4\u8fd1\u8fd8\u662f\u79bb\u53f3\u8fb9\u66f4\u8fd1\uff09\n\n\u5176\u4ed6\u7ec6\u8282\u53ef\u4ee5\u89c1\u4ee3\u7801\u3002\n\n****\n\n```cpp\n// status: [Accepted][unofficial]\n// oj:     [Codeforces]\n\n#include<bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\n#define int ll\n\nconst int MAXN = 200001;\nint n,k;\n// \u68cb\u5b50\u7684\u521d\u59cb\u989c\u8272\nint arr[MAXN];\n// \u68cb\u5b50\u79bb\u5de6\u53f3\u4fa7\u957f\u5ea6\u5927\u4e8e1\u7684\u8fde\u901a\u5757\u66f4\u8fd1\u7684\u90a3\u4e2a\u8ddd\u79bb\nint dist[MAXN];\n// \u68cb\u5b50\u5de6\u4fa7\u957f\u5ea6\u5927\u4e8e1\u7684\u8fde\u901a\u5757\u7684\u989c\u8272\nint lc[MAXN];\n// \u68cb\u5b50\u53f3\u4fa7\u957f\u5ea6\u5927\u4e8e1\u7684\u8fde\u901a\u5757\u7684\u989c\u8272\nint rc[MAXN];\n\nsigned main() {\n    ios::sync_with_stdio(false);\n\n    cin>>n>>k;\n\n    // \u8bfb\u5165\n    for(int i=0;i<n;i++) {\n        char c;\n        cin>>c;\n        if(c == 'B') arr[i] = 1;\n    }\n\n    // \u7279\u5224\n    bool flag1 = (n%2 == 0);\n    if(flag1) for(int i=0;i<n;i++) {\n        if(arr[0] ^ arr[i] ^ (i&1)) {flag1 = false;break;}\n    }\n    if(flag1) {\n        cerr<<\"I AK IOI\"<<endl;\n        for(int i=0;i<n;i++) {\n            if(arr[i] ^ (k&1)) cout<<'B';\n            else cout<<'W';\n        }\n        cout<<endl;\n        exit(0);\n    }\n\n    // \u627e\u5230\u5f00\u59cb\u4f4d\u7f6e\n    int bg = 0;\n    for(int i=0;i<n;i++) {\n        if(i!=0 && arr[i-1] == arr[i]) {bg = i;break;}\n    }\n    bg += n;\n\n    // \u987a\u65f6\u9488\u904d\u5386\n    int lastpos = 0;\n    int lastcol = 0;\n    for(int i=bg;i<bg+n;i++) {\n        if(arr[(i-1) % n] != arr[i % n] && arr[i % n] != arr[(i+1) % n]) { // \u5224\u65ad\u662f\u5426\u76f8\u95f4\u533a\u95f4\n            dist[i % n] = i - lastpos;\n            lc[i % n] = lastcol;\n        }\n        else {lastpos = i;lastcol = arr[i % n];dist[i % n] = 0;}\n    }\n    bg += n;\n    for(int i=bg-1;i>=bg-n;i--) {\n        if(arr[(i-1) % n] != arr[i % n] && arr[i % n] != arr[(i+1) % n]) { // \u5224\u65ad\u662f\u5426\u76f8\u95f4\u533a\u95f4\n            if(lastpos - i < dist[i % n]) {\n                dist[i % n] = i - lastpos; // \u66f4\u65b0\u8ddd\u79bb\n            }\n            rc[i % n] = lastcol;\n        }\n        else {lastpos = i;lastcol = arr[i % n];}\n    }\n\n    // \u8f93\u51fa\n    for(int i=0;i<n;i++) {\n        if(dist[i] == 0) {\n            if(arr[i]) cout<<'B';\n            else cout<<'W';\n        }\n        else if(dist[i] > 0) {\n            if(k < dist[i]) {\n                if(arr[i] ^ (k&1)) cout<<'B';\n                else cout<<'W';\n            }\n            else {\n                if(lc[i]) cout<<'B';\n                else cout<<'W';\n            }\n        }\n        else {\n            if(k < -dist[i]) {\n                if(arr[i] ^ (k&1)) cout<<'B';\n                else cout<<'W';\n            }\n            else {\n                if(rc[i]) cout<<'B';\n                else cout<<'W';\n            }\n        }\n    }\n    cout<<endl;\n}\n\n```\n\n\u8bc4\u6d4b\u8bb0\u5f55\uff1a[R25183207](https://www.luogu.org/record/25183207)\n",
        "postTime": 1571046679,
        "uid": 49067,
        "name": "\u53f6ID",
        "ccfLevel": 7,
        "title": "[\u6d1b\u8c37\u9898\u89e3] CF1244F Chips"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053sb\u6a21\u62df\u9898\u3002\n\n\u9996\u5148\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u5b58\u5728\u76f8\u90bb\u4e24\u4e2a\u4f4d\u7f6e\u989c\u8272\u76f8\u540c\uff0c\u90a3\u4e48\u4e24\u4e2a\u4f4d\u7f6e\u90fd\u4e0d\u4f1a\u6539\u53d8\u989c\u8272\u4e86\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u6837\u7684\u4e00\u6bb5\u8fde\u7eed\u989c\u8272\u76f8\u540c\u7684\u6bb5\u79f0\u4e3a \u989c\u8272\u5757 \u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ea\u9700\u8981\u8003\u8651\u76f8\u90bb\u4e24\u4e2a\u989c\u8272\u5757\u4e4b\u95f4\u7684\u4ea4\u9519\u989c\u8272\u76f8\u53cd\u7684\u5e8f\u5217\u7684\u53d8\u5316\u5c31\u884c\u4e86\u3002\n\n\u9996\u5148\u8003\u8651\u4e24\u4e2a\u989c\u8272\u5757\u76f8\u540c\u7684\u60c5\u51b5\uff1a\u5f53\u8fdb\u884c\u5b8c\u8db3\u591f\u957f\u7684\u65f6\u95f4\u540e\uff0c\u4e2d\u95f4\u7684\u989c\u8272\u4e00\u5b9a\u90fd\u4f1a\u53d8\u6210\u4e24\u8fb9\u7684\u989c\u8272\u5757\u7684\u989c\u8272\uff0c\u7136\u540e\u624b\u52a8\u6a21\u62df\u4e00\u4e0b\u5c31\u53ef\u4ee5\u53d1\u73b0\uff0c\u6bcf\u8fc7\u4e00\u4e2a\u5355\u4f4d\u65f6\u95f4\uff0c\u4e24\u8fb9\u7684\u989c\u8272\u5757\u90fd\u4f1a\u5f80\u4e2d\u95f4\u6269\u5f20\u4e00\u683c\u76f4\u5230\u76f8\u8fde\u3002\u7136\u540e\u4e2d\u95f4\u5c31\u662f\u4ee5\u53e6\u4e00\u79cd\u989c\u8272\u4e3a\u8d77\u59cb\u7684\u9ed1\u767d\u4ea4\u9519\u7684\u5e8f\u5217\u3002\n\n\u7136\u540e\u8003\u8651\u4e24\u4e2a\u989c\u8272\u5757\u4e0d\u540c\u7684\u60c5\u51b5\uff1a\u8fd8\u662f\u8003\u8651\u4e24\u8fb9\u5f80\u4e2d\u95f4\u6269\u5c55\uff0c\u663e\u7136\u5f53\u4e24\u8fb9\u6269\u5c55\u5230\u4e2d\u95f4\u76f8\u9047\u540e\u5c31\u4e0d\u4f1a\u518d\u52a8\u4e86\u3002\u90a3\u4e48\u4ed4\u7ec6\u5206\u6790\u4e00\u4e0b\u4e8b\u5b9e\u4e0a\u548c\u4e0a\u9762\u7684\u60c5\u51b5\u5927\u540c\u5c0f\u5f02\u3002\n\n\u7136\u540e\u518d\u7279\u5224\u4e00\u4e0b\u6240\u6709\u76f8\u90bb\u7684\u4f4d\u7f6e\u989c\u8272\u90fd\u4e0d\u540c\u5c31\u884c\u4e86\u3002\uff08\u8fd9\u4e2a\u600e\u4e48\u5224\u8be6\u89c1\u6837\u4f8b3\uff09\n\nCode\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define FILE(Name) freopen(Name\".in\", \"r\", stdin), freopen(Name\".out\", \"w\", stdout)\n\nnamespace io {\n\tconst int __SIZE = (1 << 21) + 1;\n\tchar ibuf[__SIZE], *iS, *iT, obuf[__SIZE], *oS = obuf, *oT = oS + __SIZE - 1, __c, qu[55]; int __f, qr, _eof;\n\t#define Gc() (iS == iT ? (iT = (iS = ibuf) + fread (ibuf, 1, __SIZE, stdin), (iS == iT ? EOF : *iS ++)) : *iS ++)\n\tinline void flush () { fwrite (obuf, 1, oS - obuf, stdout), oS = obuf; }\n\tinline void gc (char &x) { x = Gc(); }\n\tinline void pc (char x) { *oS ++ = x; if (oS == oT) flush (); }\n\tinline void pstr (const char *s) { int __len = strlen(s); for (__f = 0; __f < __len; ++__f) pc (s[__f]); }\n\tinline void gstr (char *s) { for(__c = Gc(); __c < 32 || __c > 126 || __c == ' ';)  __c = Gc();\n\t\tfor(; __c > 31 && __c < 127 && __c != ' '; ++s, __c = Gc()) *s = __c; *s = 0; }\n\ttemplate <class I> inline bool gi (I &x) { _eof = 0;\n\t\tfor (__f = 1, __c = Gc(); (__c < '0' || __c > '9') && !_eof; __c = Gc()) { if (__c == '-') __f = -1; _eof |= __c == EOF; }\n\t\tfor (x = 0; __c <= '9' && __c >= '0' && !_eof; __c = Gc()) x = x * 10 + (__c & 15), _eof |= __c == EOF; x *= __f; return !_eof; }\n\ttemplate <class I> inline void print (I x) { if (!x) pc ('0'); if (x < 0) pc ('-'), x = -x;\n\t\twhile (x) qu[++ qr] = x % 10 + '0',  x /= 10; while (qr) pc (qu[qr --]); }\n\tstruct Flusher_ {~Flusher_(){flush();}}io_flusher_;\n} using io::pc; using io::gc; using io::pstr; using io::gstr; using io::gi; using io::print;\n\ntemplate<typename T> inline void chkmax(T&a, T b) { a = a > b ? a : b; }\ntemplate<typename T> inline void chkmin(T&a, T b) { a = a < b ? a : b; }\ntemplate<typename T> inline T gcd(T&a, T b) { return !b ? a : gcd(b, a % b); }\ntypedef unsigned uit;\ntypedef long long ll;\ntypedef double db;\n\n// \u770b\u9898\u76ee\u53d6\u7528\n// const int mod1 = 2999999; // for Hash\n// const int mod2 = 4999999; // for Hash\n// const int mod = 19491001;\n// const int mod = 19260817;\n// const int mod = 104857601;\n// const int mod = 998244353;\n// const int mod = 998244853;\n// const int mod = 1004535809;\nconst int mod = 1000000007;\n\ntemplate<typename T>\nconst T Mod(T x) { return x >= mod * 2 ? x % mod : (x >= mod ? x - mod : x); }\ntemplate<typename T>\nconst void Add(T&a, T b) { a = Mod(a + b); }\n\nconst int MAXN = 400100;\n\nchar s[MAXN];\nchar t[MAXN];\nint Block[MAXN];\n\nint main() {\n#ifndef ONLINE_JUDGE\n\tFILE(\"f\");\n#endif\n\tint n, k; gi(n); gi(k);\n\tgstr(s + 1);\n\tint st = n;\n\tfor(int i = 1; i < n; i++)\n\t\tif(s[i] == s[i + 1]) {\n\t\t\tst = i;\n\t\t\tbreak;\n\t\t}\n\tif(s[1] != s[n] && st == n) {\n\t\tif(k & 1) \n\t\t\tfor(int i = 1; i <= n; i++) {\n\t\t\t\tif(s[i] == 'B') s[i] = 'W';\n\t\t\t\telse s[i] = 'B';\n\t\t\t}\n\t\tpstr(s + 1);\n\t\treturn 0;\n\t}\n\tfor(int i = 1; i <= n; i++) s[i + n] = s[i]; s[n * 2 + 1] = s[1], s[n * 2 + 2] = s[2];\n\tint Last = s[st], flag = 0, b; int ed = st + n - 1;\n\tfor(int i = st + 1; i <= ed + 2; i++) {\n\t\tif(s[i] == s[i - 1]) {\n\t\t\tt[i] = t[i - 1] = s[i];\n\t\t\tif(flag) {\n\t\t\t\tif(Last == s[i]) {\n\t\t\t\t\tint l = b;\n\t\t\t\t\tint r = i - 2;\n\t\t\t\t\tint mi = min(k, (r - l + 2) >> 1);\n\t\t\t\t\tfor(int j = 0; j < mi; j++)\n\t\t\t\t\t\tt[l + j] = t[r - j] = Last;\n\t\t\t\t\tfor(int j = l + mi; j <= r - mi; j++)\n\t\t\t\t\t\tif(t[j - 1] == 'W') t[j] = 'B';\n\t\t\t\t\t\telse t[j] = 'W';\n\t\t\t\t} else {\n\t\t\t\t\tint l = b;\n\t\t\t\t\tint r = i - 2;\n\t\t\t\t\tint mi = min(k, (r - l + 1) >> 1);\n\t\t\t\t\tfor(int j = 0; j < mi; j++)\n\t\t\t\t\t\tt[l + j] = Last, t[r - j] = s[i];\n\t\t\t\t\tfor(int j = l + mi; j <= r - mi; j++)\n\t\t\t\t\t\tif(t[j - 1] == 'W') t[j] = 'B';\n\t\t\t\t\t\telse t[j] = 'W';\n\t\t\t\t}\n\t\t\t} flag = 0;\n\t\t\tLast = s[i];\n\t\t} else {\n\t\t\tif(s[i] != s[i + 1]) {\n\t\t\t\tif(!flag) {\n\t\t\t\t\tflag = 1;\n\t\t\t\t\tb = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = st; i <= ed; i++)\n\t\tif(i > n) t[i - n] = t[i];\n\tt[n + 1] = 0;\n\tpstr(t + 1); pc('\\n');\n\treturn 0;\n}\n```",
        "postTime": 1571014048,
        "uid": 20782,
        "name": "CYJian",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1244F \u3010Chips\u3011"
    },
    {
        "content": "### Description.\n\u7ed9\u5b9a\u4e00\u4e2a 0/1 \u73af\uff0c\u6bcf\u6b21\u4e00\u4e2a\u70b9\u4f1a\u53d8\u6210\u5b83\u5de6\u53f3\u548c\u5b83\u4e09\u4e2a\u70b9\u7684\u4e2d\u4f4d\u6570\u3002  \n\u95ee\u53d8 $k$ \u6b21\u540e\u4f1a\u53d8\u6210\u4ec0\u4e48\u6837\u5b50\u3002  \n\n### Solution.\n\u89c2\u5bdf\u53d1\u73b0\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u957f\u5ea6\u8d85\u8fc7 $1$ \u7684\u5b50\u4e32\uff0c\u90a3\u5b83\u5fc5\u5b9a\u4e0d\u4f1a\u6539\u53d8\u3002  \n\u6240\u4ee5\u6211\u4eec\u53ea\u7528\u8003\u8651\u4e24\u6bb5\u957f\u5ea6\u8d85\u8fc7 $1$ \u7684\u5b50\u4e32\u4e2d\u95f4\u5939\u7740\u7684 `...01010101...` \u5373\u53ef\u3002  \n\u624b\u6a21\u53d1\u73b0\uff0c\u6bcf\u6b21\u64cd\u4f5c\u4e2d\uff0c\u8fd9\u4e2d\u95f4\u7684\u6240\u6709\u5143\u7d20\u4f1a $\\oplus1$\uff0c\u7136\u540e\u6700\u5de6\u8fb9\u548c\u6700\u53f3\u8fb9\u548c\u957f\u5ea6\u8d85\u8fc7 $1$ \u7684\u5b50\u4e32\u5408\u5e76\u3002  \n\u5f62\u8c61\u5730\u8bf4\uff0c\u5c31\u662f\u957f\u5ea6\u8d85\u8fc7 $1$ \u7684\u5b57\u4e32\u7684\u201c\u6269\u5c55\u201d\u3002  \n\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u627e\u51fa\u8fd9\u4e9b\u6444\u4e4e\u957f\u4e32\u4e4b\u95f4\u7684\u77ed\u4e32\uff0c\u6bcf\u6b21\u6a21\u62df\u5373\u53ef\u3002  \n\n### Coding.\n**\u6ce8\u610f\uff0c\u4ee5\u4e0b\u4ee3\u7801\u5b9e\u73b0\u590d\u6742\uff0c\u8bf7\u8c28\u614e\u9605\u8bfb**\n\n```cpp\n//\u662f\u554a\u2026\u2026\u4f60\u5c31\u662f\u90a3\u53ea\u9b3c\u4e86\u2026\u2026\u6240\u4ee5\u88ab\u4f60\u78b0\u5230\u4ee5\u540e\uff0c\u5c31\u8f6e\u5230\u6211\u53d8\u6210\u9b3c\u4e86{{{\n#include<bits/stdc++.h>\nusing namespace std;typedef long long ll;\ntemplate<typename T>inline void read(T &x)\n{\n\tx=0;char c=getchar(),f=0;\n\tfor(;c<'0'||c>'9';c=getchar()) if(c=='-') f=1;\n\tfor(;c>='0'&&c<='9';c=getchar()) x=(x<<1)+(x<<3)+(c^48);\n\tif(f) x=-x;\n}/*}}}*/\nint n,L[200005],R[200005],ct,K;char ch[200005],tmp[200005];;\nint main()\n{\n\tread(n),read(K),scanf(\"%s\",ch+1);int wh=0;\n\tfor(int i=1;i<=n;i++) if(ch[i%n+1]==ch[i]) {wh=i;break;}\n\tif(!wh) {for(int i=1;i<=n;i++) putchar(K&1?ch[i]^21:ch[i]);return putchar('\\n'),0;}\n\tfor(int i=1;i<=n;i++) tmp[(i+n-wh)%n+1]=ch[i];\n\tch[n+1]=tmp[1];for(int i=1;i<=n;i++) ch[i]=tmp[i];\n\t//for(int i=1;i<=n;i++) printf(\"%c\",ch[i]);putchar('\\n');\n\tfor(int i=1,ls=1;i<=n;i++) if(ch[i+1]!=ch[i]) (ls^i?(L[++ct]=ls,R[ct]=i):0),ls=i+1;\n\tch[1]!=ch[n]?L[++ct]=n+1:0;for(int i=1;i<ct;i++)\n\t{\n\t\tint ds=L[i+1]-R[i]-1;if(!ds) continue;\n\t\t//printf(\"%d %d\\n\",R[i],L[i+1]);\n\t\tif(K+K>=ds)\n\t\t{\n\t\t\tif(ds&1) {for(int j=R[i]+1;j<L[i+1];j++) ch[j]=ch[R[i]];continue;}\n\t\t\tfor(int j=R[i]+1;j<L[i+1];j++) if(j<=R[i]+(ds>>1)) ch[j]=ch[R[i]];else ch[j]=ch[L[i+1]];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(int j=R[i]+1;j<=R[i]+K;j++) ch[j]=ch[R[i]];\n\t\t\tfor(int j=L[i+1]-K;j<L[i+1];j++) ch[j]=ch[L[i+1]];\n\t\t\tfor(int j=R[i]+K+1;j<L[i+1]-K;j++) ch[j]=ch[j-1]^21;\n\t\t}\n\t}\n\t//for(int i=1;i<=n;i++) printf(\"%c\",ch[i]);putchar('\\n');\n\tfor(int i=1;i<=n;i++) tmp[(i+wh-2)%n+1]=ch[i];\n\tfor(int i=1;i<=n;i++) printf(\"%c\",tmp[i]);\n\treturn putchar('\\n'),0;\n}\n```",
        "postTime": 1627517321,
        "uid": 44805,
        "name": "Leap_Frog",
        "ccfLevel": 7,
        "title": "CF1244F Chips\uff08\u9898\u89e3\uff09"
    },
    {
        "content": "\u6bd4\u8d5b\u91cc\u4e24\u9053\u96be\u9898\uff08CF\uff09\u4e2d\u8f83\u96be\u7684\u4e00\u9053\n\n\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u6027\u8d28\uff1a\u5982\u679c\u8fde\u7eed$k(k \\geq 2)$\u4e2a\u7684\u989c\u8272\u76f8\u540c\uff0c\u90a3\u4e48\u4ed6\u4eec\u7684\u989c\u8272\u5c31\u4e0d\u4f1a\u53d8\n\n\u90a3\u4e48\uff0c\u4f1a\u53d8\u7684\u53ea\u662f\u578b\u5982$\\dots BWBWBW \\dots$\u7684\u3002\n\n\u6bcf\u6b21\u53d8\u5316\uff0c\u5de6\u53f3\u4e24\u7aef\u7684\u4f1a\u53d8\u6210\u6700\u7ec8\u7684\u989c\u8272\uff0c\u5176\u4ed6\u4e2d\u95f4\u7684\u53d8\u6210\u5f02\u8272($B \\rightarrow W,W \\rightarrow B$)\n\n\u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u6a21\u62df\u5373\u53ef\u3002\n\n\u6a21\u62df\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(min(n,k))$\n\n\u4e3a\u4ec0\u4e48\uff1f\n\n\u5bf9\u4e8e\u6bcf\u6b21\u64cd\u4f5c\uff08\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(1)$\uff09\uff0c\u5b83\u4e00\u5b9a\u4f1a\u6539\u53d8\u4e24\u4e2a\u5b57\u7b26\u7684\u503c\uff0c\u540c\u65f6\u6bcf\u4e2a\u5b57\u7b26\u81f3\u5c11\u6539\u53d8\u4e00\u6b21\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#include<iostream>\n#include<cstdio>\n#define ll long long\nusing namespace std;\n\nconst ll N=200010;\nstring s;\nll n,k,lazy,v[N],Next[N],Prev[N];\nstruct node{\n\tll p,type;\n};\nqueue<node> p,q;\n\ninline void pre(){\n\tfor(ll l=0; l<n; l++){\n        ll r=l;\n        while(r+1<n&&s[r+1]==s[r]) r++;\n        if(r-l+1>=2){\n            for(ll i=l; i<=r; i++) v[i]=1;\n            q.push(node{l,1});\n            q.push(node{r,2});\n            l=r;\n        }\n    }\n    if(!v[0]&&!v[n-1]&&s[0]==s[n-1]){\n    \tq.push(node{n-1,1});\n    \tq.push(node{0,2});\n    \tv[0]=v[n-1]=1;\n\t}\n}\n\nint main(){\n\n\tios::sync_with_stdio(0);\n\n\tcin>>n>>k;\n\tcin>>s;\n\tfor(ll i=1; i<n; i++) Prev[i]=i-1; Prev[0]=n-1;\n\tfor(ll i=0; i<n-1; i++) Next[i]=i+1; Next[n-1]=0;\n\tpre();\n\tfor(ll i=1; i<=k; i++,lazy^=1){\n\t\tif(q.empty()) break;\n\n\t\twhile(!q.empty()){\n\t\t\tnode r=q.front(); q.pop();\n\t\t\tif(r.type==1){\n\t\t\t\tq.push(r);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tnode l=q.front(); q.pop();\n\t\t\tll L=l.p,R=r.p;\n\t\t\tif(Prev[L]!=R&&Prev[Prev[L]]!=R){\n\t\t\t\tll Left=Prev[L],Right=Next[R];\n\t\t\t\ts[Right]=s[R]; v[Right]=1; p.push(node{Right,2});\n\t\t\t\ts[Left]=s[L]; v[Left]=1; p.push(node{Left,1});\n\t\t\t}\n\t\t\telse if(Prev[Prev[L]]==R){\n\t\t\t\tll p=Prev[L]; v[p]=1;\n\t\t\t\tif(s[L]==s[R]) s[p]=s[L];\n\t\t\t\telse if(lazy) s[p]='B'+'W'-s[p];\n\t\t\t}\n\t\t}\n\t\twhile(!p.empty()){\n\t\t\tq.push(p.front());\n\t\t\tp.pop();\n\t\t}\n\t}\n\tif(lazy){\n\t\tfor(ll i=0; i<n; i++){\n\t\t\tif(!v[i]) s[i]='B'+'W'-s[i];\n\t\t}\n\t}\n\tcout<<s<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1571052035,
        "uid": 27924,
        "name": "xukuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1244F \u3010Chips\u3011"
    }
]