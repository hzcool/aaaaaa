[
    {
        "content": "[**\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c**](https://blog.henrytb.ml/2021/01/%E9%A2%98%E8%A7%A3-CF240F-TorCoder/)\n\n\u8003\u8651\u5f00 26 \u68f5\u7ebf\u6bb5\u6811\u3002\u6bcf\u68f5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5b83\u5bf9\u5e94\u7684\u5b57\u6bcd\u5728\u8fd9\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7684\u51fa\u73b0\u60c5\u51b5\u3002\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\uff0c\u4ec0\u4e48\u6837\u7684\u533a\u95f4\u80fd\u8f6c\u6362\u6210\u4e00\u4e2a\u56de\u6587\u4e32\u5462\uff1f\n\n\u8fd9\u4e2a\u533a\u95f4\u4e2d\uff0c\u51fa\u73b0\u7684\u4efb\u4f55\u5b57\u6bcd\u7684\u51fa\u73b0\u6b21\u6570**\u8981\u4e48\u90fd\u4e3a\u5076\u6570\uff0c\u8981\u4e48\u53ea\u6709\u4e00\u4e2a\u5947\u6570\uff0c\u5176\u4f59\u90fd\u662f\u5076\u6570**\u65f6\uff0c\u8fd9\u4e2a\u533a\u95f4\u53ef\u4ee5\u901a\u8fc7\u5b57\u6bcd\u91cd\u6392\u53d8\u4e3a\u4e00\u4e2a\u56de\u6587\u4e32\u3002\u6240\u4ee5\u6bcf\u68f5\u7ebf\u6bb5\u6811\u90fd\u9700\u8981\u652f\u6301\u533a\u95f4\u6c42\u548c\u4ee5\u67e5\u8be2\u533a\u95f4\u4e2d\u7279\u5b9a\u5b57\u6bcd\u7684\u51fa\u73b0\u6b21\u6570\u3002\n\n\u5982\u679c\u53ef\u4ee5\u8f6c\u6362\uff0c\u600e\u4e48\u8ba9\u8fd9\u4e2a\u533a\u95f4\u91cd\u6392\u4e4b\u540e\u5b57\u5178\u5e8f\u6700\u5c0f\uff1f\n\n\u601d\u60f3\uff1a\u5b57\u5178\u5e8f\u8d8a\u5c0f\u7684\u5b57\u6bcd\uff0c\u6211\u4eec\u4f18\u5148\u628a\u5b83\u653e\u524d\u9762\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u5982\u679c\u5b57\u6bcd\u7684\u51fa\u73b0\u6b21\u6570\u4e2d\u6709\u4e00\u4e2a\u5947\u6570\uff0c\u90a3\u4e48\u5148\u628a\u51fa\u73b0\u4e86\u5947\u6570\u6b21\u7684\u8fd9\u4e2a\u5b57\u6bcd\u5355\u62ce\u51fa\u6765\u6254\u5230\u4e2d\u95f4\u3002\u7136\u540e\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u6211\u4eec\u4ece $a$ \u5230 $z$ \uff0c\u4ece\u4e24\u8fb9\u5230\u4e2d\u95f4\u653e\u5373\u53ef\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u5b57\u6bcd\uff0c\u4e00\u8fb9\u653e\u4e00\u534a\u3002\u56e0\u6b64\u6211\u4eec\u7684\u6bcf\u68f5\u7ebf\u6bb5\u6811\u9700\u8981\u652f\u6301\u533a\u95f4\u8d4b\u503c\u7684\u64cd\u4f5c\u3002\n\n\u5177\u4f53\u89c1\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define rep(i,a,b) for(int i=(a);i<=(b);++i)\n#define per(i,a,b) for(int i=(a);i>=(b);--i)\nusing namespace std;\nconst int N=1e5+5;\nstruct Segment{\n    int l,r;\n    int sum,tag;\n}t[26][N<<2];\nint n,m;\nchar s[N];\nvoid pushup(int tr,int p) {\n    t[tr][p].sum=t[tr][p<<1].sum+t[tr][p<<1|1].sum;\n}\nvoid pushdown(int tr,int p) {\n    if(t[tr][p].tag!=-1) {\n        t[tr][p<<1].tag=t[tr][p].tag;\n        t[tr][p<<1|1].tag=t[tr][p].tag;\n        t[tr][p<<1].sum=(t[tr][p<<1].r-t[tr][p<<1].l+1)*t[tr][p].tag;\n        t[tr][p<<1|1].sum=(t[tr][p<<1|1].r-t[tr][p<<1|1].l+1)*t[tr][p].tag;\n        t[tr][p].tag=-1;\n    }\n}\nvoid build(int tr,int p,int l,int r) {\n    t[tr][p].l=l;t[tr][p].r=r;\n    t[tr][p].sum=0;t[tr][p].tag=-1;\n    if(l==r) {\n        t[tr][p].sum=(s[l]-'a')==tr;\n        return ;\n    }\n    int mid=(l+r)>>1;\n    build(tr,p<<1,l,mid);\n    build(tr,p<<1|1,mid+1,r);\n    pushup(tr,p);\n}\nvoid modify(int tr,int p,int l,int r,int val) {\n    if(l<=t[tr][p].l&&t[tr][p].r<=r) {\n        t[tr][p].tag=val;\n        t[tr][p].sum=(t[tr][p].r-t[tr][p].l+1)*val;\n        return ;\n    }\n    pushdown(tr,p);\n    int mid=(t[tr][p].l+t[tr][p].r)>>1;\n    if(l<=mid) modify(tr,p<<1,l,r,val);\n    if(mid<r) modify(tr,p<<1|1,l,r,val);\n    pushup(tr,p);\n}\nint query(int tr,int p,int l,int r) {\n    if(l<=t[tr][p].l&&t[tr][p].r<=r) return t[tr][p].sum;\n    pushdown(tr,p);\n    int mid=(t[tr][p].l+t[tr][p].r)>>1,ans=0;\n    if(l<=mid) ans+=query(tr,p<<1,l,r);\n    if(mid<r) ans+=query(tr,p<<1|1,l,r);\n    return ans;\n}\nint main() {\n    #ifdef ONLINE_JUDGE\n    freopen(\"input.txt\",\"r\",stdin);\n    freopen(\"output.txt\",\"w\",stdout);\n    #endif\n    scanf(\"%d%d%s\",&n,&m,s+1);\n    rep(i,0,25) build(i,1,1,n);\n    rep(i,1,m) {\n        int l,r;\n        scanf(\"%d%d\",&l,&r);\n        int tim[26],odd=0;\n        int nedod=-1;\n        rep(j,0,25) tim[j]=query(j,1,l,r);\n        rep(j,0,25) if(tim[j]&1) ++odd,nedod=j;\n        if(odd>1) continue;\n        rep(j,0,25) modify(j,1,l,r,0);\n        if(odd) --tim[nedod],modify(nedod,1,(l+r)>>1,(l+r)>>1,1);\n        int nl=l,nr=r;\n        rep(j,0,25) if(tim[j]) { // \u4ece\u4e24\u8fb9\u5411\u4e2d\u95f4\u653e\uff0c\u4e00\u8fb9\u653e\u4e00\u534a\n            modify(j,1,nl,nl+tim[j]/2-1,1);\n            nl+=tim[j]/2;\n            modify(j,1,nr-tim[j]/2+1,nr,1);\n            nr-=tim[j]/2;\n        }\n    }\n    rep(i,1,n) {\n        rep(j,0,25) if(query(j,1,i,i)) {\n            printf(\"%c\",j+'a');\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1611925112,
        "uid": 76156,
        "name": "henrytb",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF240F \u3010TorCoder\u3011"
    },
    {
        "content": "# CF240F TorCoder\n\n\u7531\u4e8e\u6211\u662f\u4e2a\u849f\u84bb\uff0c\u53ea\u4f1a\u6253\u66b4\u529b\uff0c\u6240\u4ee5\u6211\u7528\u5206\u5757\u6c34\u6389\u4e86\u8fd9\u4e2a\u9898\u3002\n\n## \u601d\u8def\n\n\u8003\u8651\u51e0\u4e2a\u6027\u8d28\uff1a\n\n1. \u80fd\u6784\u6210\u56de\u6587\u4e32\u7684\u5b57\u7b26\u4e32\uff0c\u51fa\u73b0\u6b21\u6570\u4e3a\u5947\u6570\u6b21\u7684\u5b57\u6bcd **\uff08\u4e0b\u6587\u7b80\u79f0\u5947\u5b57\u6bcd\uff09** \u81f3\u591a 1 \u4e2a\u3002\n\n\t\u6bd4\u5982\uff0c`aaabbb` \u8fd9\u4e2a\u5b57\u7b26\u4e32\uff0c\u5947\u5b57\u6bcd\u6709 2 \u4e2a\uff0c\u663e\u7136\u4e0d\u80fd\u6784\u6210\u56de\u6587\u4e32\u3002\n\n2. \u6ee1\u8db3\u6027\u8d28 1 \u4e14\u542b\u5947\u5b57\u6bcd\u7684\u5b57\u7b26\u4e32\uff0c\u5fc5\u6709\u4e00\u4e2a\u5947\u5b57\u6bcd\u8981\u653e\u5728\u56de\u6587\u4e32\u7684\u4e2d\u95f4\u3002\n\n\t\u8fd9\u4e2a\u5e94\u8be5\u5f88\u597d\u7406\u89e3\u3002\n\n3. \u6ee1\u8db3\u6027\u8d28 1 \u4e14\u542b\u5947\u5b57\u6bcd\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\u5fc5\u4e3a\u5947\u6570\u3002\n\n\t\u9664\u4e86\u5947\u5b57\u6bcd\uff0c\u6bcf\u4e2a\u5b57\u6bcd\u51fa\u73b0\u6b21\u6570\u90fd\u662f\u5076\u6570\uff0c\u518d\u52a0\u4e0a\u5947\u5b57\u6bcd\u7684\u6b21\u6570\u3002\n\n\t$\\text{\u5076}+\\text{\u5947}=\\text{\u5947}$\u3002\n\n\t~~\u597d\u50cf\u5e76\u4e0d\u662f\u5f88\u6709\u7528\u3002~~\n\n\u6839\u636e\u4ee5\u4e0a\u4e09\u4e2a\u6027\u8d28\uff0c\u57fa\u672c\u601d\u8def\u5c31\u5f88\u597d\u5199\u4e86\u3002\n\n\u9996\u5148\u7edf\u8ba1\u533a\u95f4 $[l,r]$ \u4e4b\u95f4\u6bcf\u4e2a\u5b57\u6bcd\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u7136\u540e\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u6ee1\u8db3\u6027\u8d28 1\u3002\n\n\u5982\u679c\u4e0d\u6ee1\u8db3\uff0c\u8bf4\u660e\u4e0d\u80fd\u6784\u6210\u56de\u6587\u4e32\uff0c\u672c\u6b21\u64cd\u4f5c\u7ed3\u675f\u3002\n\n\u5426\u5219\uff0c\u53ef\u4ee5\u6784\u6210\u56de\u6587\u4e32\uff0c\u5148\u5c06\u5947\u5b57\u6bcd\u653e\u5728\u4e2d\u95f4\uff08\u6ca1\u6709\u5219\u4e0d\u653e\uff09\uff0c\u7136\u540e\u4e24\u8fb9\u5411\u4e2d\u95f4\u63a8\u5e73\u3002\n\n\u56e0\u4e3a\u8981\u4fdd\u8bc1\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u6240\u4ee5\u5c31\u8d2a\u5fc3\u7684\uff0c\u904d\u5386\u4e00\u904d\u6876\uff0c\u4f9d\u6b21\u63a8\u5e73\u539f\u5e8f\u5217\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u6bd4\u5982\u8981\u5c06 `a a h z z` \u6784\u6210\u56de\u6587\u4e32\u3002\n\n\u5047\u8bbe\u56de\u6587\u4e32\u521d\u59cb\u72b6\u6001\u662f\u8fd9\u6837\uff1a`_ _ _ _ _`\uff1b\n\n\u5148\u5c06 `h` \u653e\u5728\u4e2d\u95f4\uff1a`_ _ h _ _`\uff1b\n\n\u7136\u540e\u5c06 `aa` \u5206\u522b\u653e\u5728 **\u6700\u4e24\u7aef**\uff1a`a _ h _ a`\uff1b\n\n\u518d\u5c06 `zz` \u653e\u5728 **\u6b21\u4e24\u7aef**\uff1a`a z h z a`\uff1b\n\n\u663e\u7136\uff0c\u5bf9\u6876\u6c42\u548c\u5fc5\u7136\u4e0e\u533a\u95f4\u957f\u5ea6\u76f8\u7b49\uff0c\u6240\u4ee5\u4e0d\u4f1a\u51fa\u73b0\u5947\u602a\u7684\u9519\u8bef\u3002\n\n\u4e0d\u8fc7\uff0c\u5bf9\u4e8e\u63a8\u5e73\u64cd\u4f5c\uff0c\u8fd8\u6709\u4e00\u4e2a\u66f4\u52a0\u7b80\u5355\u7684\u7ef4\u62a4\u65b9\u6cd5\uff1a\n\n\u8fd8\u662f\u4ee5\u4e0a\u8fb9\u7684 `a a h z z` \u4e3a\u4f8b\uff0c\n\n\u5148\u5c06 `a` \u63a8\u5e73\uff1a`a a a a a`\uff1b\n\n\u7136\u540e\u5c06 `z` \u63a8\u5e73\uff1a`a z z z a`\uff1b\n\n\u6700\u540e\u5c06 `h` \u653e\u5728\u4e2d\u95f4\uff1a`a z h z a`\uff1b\n\n\u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\u5947\u5b57\u6bcd\u7684\u5904\u7406\u7edd\u5bf9\u8981\u653e\u5728\u6700\u540e\uff01\n\n\u81f3\u4e8e\u539f\u56e0\uff0c\u4ed4\u7ec6\u60f3\u60f3\uff0c\u5e94\u8be5\u5f88\u597d\u7406\u89e3\u3002\n\n\u6700\u540e\uff0c\u4ee3\u7801\uff1a\n\n```cpp\nconst int inf=1e5+7;\nint n,m,len;\nchar s[inf];\nint a[inf],T[400][30];\nint bel[inf],L[400],R[400],tag[400];\nint cnt[30],odd,mid;\nvoid pushdown(int in)\n{//\u4e0b\u653e\u61d2\u6807\n\tif(tag[in]==0)return;\n\tfor(int i=L[in];i<=R[in];i++)\n\t\ta[i]=tag[in];\n\ttag[in]=0;\n}\nvoid tongji(int l,int r)\n{//\u7edf\u8ba1\u51fa\u73b0\u6b21\u6570\n\tint lin=bel[l],rin=bel[r];\n\tmemset(cnt,0,sizeof(cnt));\n\tif(lin==rin)\n\t{\n\t\tpushdown(lin);\n\t\tfor(int i=l;i<=r;i++)\n\t\t\tcnt[a[i]]++;\n\t\treturn;\n\t}\n\tpushdown(lin);pushdown(rin);\n\tfor(int i=l;i<=R[lin];i++)\n\t\tcnt[a[i]]++;\n\tfor(int i=L[rin];i<=r;i++)\n\t\tcnt[a[i]]++;\n\tfor(int i=lin+1;i<rin;i++)\n\t\tfor(int k=1;k<=26;k++)\n\t\t\tcnt[k]+=T[i][k];\n}\nvoid baoli(int l,int r,int k)\n{//\u96f6\u6563\u5757\u66b4\u529b\n\tint in=bel[l];\n\tpushdown(in);\n\tfor(int i=l;i<=r;i++)\n\t\tT[in][a[i]]--,a[i]=k,T[in][k]++;\n}\nvoid assign(int l,int r,int k)\n{\n\tint lin=bel[l],rin=bel[r];\n\tif(lin==rin){baoli(l,r,k);return;}\n\tbaoli(l,R[lin],k);baoli(L[rin],r,k);\n\tfor(int i=lin+1;i<rin;i++)\n\t{//\u6574\u5757\u7ef4\u62a4\n\t\tmemset(T[i],0,sizeof(T[i]));\n\t\tT[i][k]=R[i]-L[i]+1;tag[i]=k;\n\t}\n}\nvoid judge(int l,int r)\n{//\u5224\u65ad\u662f\u5426\u80fd\u6784\u6210\u56de\u6587\u4e32\n\todd=0,mid=0;\n\tfor(int i=1;i<=26;i++)\n\t\tif(cnt[i]&1)odd++,mid=i;\n\tif(odd>1)return;//\u4e0d\u6ee1\u8db3\u6027\u8d28 1\n\tfor(int i=1;i<=26;i++)\n\t{\n\t\tint len=cnt[i]>>1;\n\t\tif(len==0)continue;\n\t\tassign(l,r,i);//\u63a8\u5e73\n\t\tl+=len,r-=len;\n\t}\n\tif(odd==1)\n\t{//\u5904\u7406\u5947\u5b57\u6bcd\n\t\tint ls=(l+r)>>1;\n\t\tbaoli(ls,ls,mid);\n\t\t//\u5bf9\u4e8e\u5947\u5b57\u6bcd\u7684\u5904\u7406\uff0c\u4e0d\u8981\u53ea\u662f\u5355\u7eaf\u7684\u4fee\u6539\uff0c\u8bb0\u5f97\u5148\u4e0b\u653e\u61d2\u6807\uff01\uff01\uff01\n\t}\n}\nint main()\n{\n\tfreopen(\"input.txt\",\"r\",stdin);\n\tfreopen(\"output.txt\",\"w\",stdout);\n\tn=re();m=re();len=sqrt(n);\n\tscanf(\"%s\",s+1);\n\tfor(int i=1;i<=n;i++)\n\t\ta[i]=s[i]-'a'+1;\n\tfor(int i=1;i<=len;i++)//\u5206\u5757\n\t\tL[i]=R[i-1]+1,R[i]=L[i]+len-1;\n\tR[len]=n;\n\tfor(int i=1;i<=len;i++)//\u5206\u5757\n\t\tfor(int j=L[i];j<=R[i];j++)\n\t\t\tbel[j]=i,T[i][a[j]]++;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint l=re(),r=re();\n\t\ttongji(l,r),judge(l,r);\n\t}\n\tfor(int i=1;i<=len;i++)\n\t{\n\t\tpushdown(i);//\u8f93\u51fa\u65f6\u4e5f\u4e0d\u8981\u5fd8\u8bb0\u4e0b\u653e\u61d2\u6807\n\t\tfor(int j=L[i];j<=R[i];j++)\n\t\t\tputchar(a[j]+'a'-1);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1662250900,
        "uid": 413020,
        "name": "Zvelig1205",
        "ccfLevel": 4,
        "title": "CF240F TorCoder \u9898\u89e3\u62a5\u544a"
    },
    {
        "content": "[$$\\color{darkblue}\\huge\\texttt{\u5728\u672c\u4ebablog\u98df\u7528\u66f4\u4f73}$$](https://dilute.xyz/2019/06/03/Solutions/Solution-CF240F/)\n\n### \u7ebf\u6bb5\u6811\u4e71\u641e\n\n\u8003\u8651\u5982\u679c\u8981\u91cd\u6392\u4e00\u6bb5\u533a\u95f4\u4f7f\u5f97\u5b83\u662f\u56de\u6587\u7684\u662f\u53ef\u884c\u7684\n\n\u9996\u5148\u5bf9\u8fd9\u6bb5\u533a\u95f4\u7684\u957f\u5ea6\u5206\u7c7b\u8ba8\u8bba\n\n<!--more-->\n\n\u5982\u679c\u5b83\u7684\u957f\u5ea6\u662f\u5947\u6570\uff0c\u90a3\u4e48\u5728\u8fd9\u4e2a\u533a\u95f4\u7684\u6570\u80af\u5b9a\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a\n\n- \u6709\u4e00\u4e2a\u5b57\u6bcd\u51fa\u73b0\u4e86\u5947\u6570\u6b21\uff08\u8fd9\u4e2a\u653e\u5728\u6700\u4e2d\u95f4\uff09\n- \u5176\u4ed6\u7684\u51fa\u73b0\u4e86\u5076\u6570\u6b21\uff08\u653e\u5728\u65c1\u8fb9\uff09\n\n\u5982\u679c\u5b83\u7684\u957f\u5ea6\u662f\u5076\u6570\uff0c\u90a3\u4e48\u8fd9\u4e2a\u533a\u95f4\u5185\u51fa\u73b0\u8fc7\u7684\u6570\u80af\u5b9a\u90fd\u51fa\u73b0\u8fc7\u4e86\u5076\u6570\u6b21\n\n\u518d\u8003\u8651\u5982\u4f55\u6784\u9020\n\n- \u5982\u679c\u957f\u5ea6\u662f\u5947\u6570\uff0c\u628a\u90a3\u4e2a\u51fa\u73b0\u4e86\u5947\u6570\u6b21\u7684\u6570\u653e\u4e00\u4e2a\u5728\u6700\u4e2d\u95f4\n- \u679a\u4e3eA~Z\uff0c\u4ece\u6700\u5de6\u548c\u6700\u53f3\u5206\u522b\u5f00\u59cb\u4e00\u76f4\u653e\uff08\u56e0\u4e3a\u9700\u8981\u4fdd\u8bc1\u5b57\u5178\u5e8f\u6700\u5c0f\uff09\n\n\u5bb9\u6613\u53d1\u73b0\u8fd9\u53ea\u9700\u8981\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6bcf\u4e2a\u5b57\u6bcd\u7684\u51fa\u73b0\u6b21\u6570\u5c31\u884c\u4e86\uff08\u4e5f\u53ef\u4ee5\u7406\u89e3\u621026\u68f5\u7ebf\u6bb5\u6811\uff09\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n\n#define ll long long\n#define INF 2147483647\n#define lc(a) ((a) << 1)\n#define rc(a) ((a) << 1 | 1)\n\nint inp(){\n    char c = getchar();\n    while(c < '0' || c > '9')\n        c = getchar();\n    int sum = 0;\n    while(c >= '0' && c <= '9'){\n        sum = sum * 10 + c - '0';\n        c = getchar();\n    }\n    return sum;\n}\n\nstruct SEG{\n    int l;\n    int r;\n    int sum[30];\n    int lazy;\n\n    void clear(){\n        memset(sum, 0, sizeof(sum));\n    }\n};\nint cnt[30];\n\nchar s[100010];\n\nSEG operator + (SEG a, SEG b){\n    if(a.l == -1)\n        return b;\n    if(b.l == -1)\n        return a;\n    SEG ret;\n    ret.l = a.l;\n    ret.r = b.r;\n    for(int i = 0; i < 26; i++)\n        ret.sum[i] = a.sum[i] + b.sum[i];\n    return ret;\n}\n\nstruct SEG_Tree{\n    SEG t[800010];\n    \n    void push_up(int cur){\n        for(int i = 0; i < 26; i++)\n            t[cur].sum[i] = t[lc(cur)].sum[i] + t[rc(cur)].sum[i];\n    }\n\n    void build(int cur, int l, int r){\n        t[cur].lazy = -1;\n        t[cur].l = l;\n        t[cur].r = r;\n        if(l == r){\n            t[cur].clear();\n            t[cur].sum[s[l] - 'a'] = 1;\n            return ;\n        }\n        int mid = (l + r) >> 1;\n        build(lc(cur), l, mid);\n        build(rc(cur), mid + 1, r);\n        push_up(cur);\n    }\n\n    void push_down(int cur){\n        if(t[cur].lazy != -1){\n            t[lc(cur)].clear();\n            t[rc(cur)].clear();\n            t[lc(cur)].sum[t[cur].lazy] = t[lc(cur)].r - t[lc(cur)].l + 1;\n            t[rc(cur)].sum[t[cur].lazy] = t[rc(cur)].r - t[rc(cur)].l + 1;\n            t[lc(cur)].lazy = t[rc(cur)].lazy = t[cur].lazy;\n        }\n        t[cur].lazy = -1;\n    }\n\n    void query(int cur, int l, int r){\n        SEG nul;\n        nul.l = -1;\n        if(t[cur].l > r || t[cur].r < l)\n            return ;\n        push_down(cur);\n        if(t[cur].l >= l && t[cur].r <= r){\n            for(int i = 0; i < 26; i++)\n                cnt[i] += t[cur].sum[i];\n            return ;\n        }\n        query(lc(cur), l, r);\n        query(rc(cur), l, r);\n    }\n\n    void modify(int cur, int l, int r, int c){\n        if(t[cur].l > r || t[cur].r < l)\n            return ;\n        if(t[cur].l >= l && t[cur].r <= r){\n            t[cur].clear();\n            t[cur].sum[c] = t[cur].r - t[cur].l + 1;\n            t[cur].lazy = c;\n            return ;\n        }\n        push_down(cur);\n        modify(lc(cur), l, r, c);\n        modify(rc(cur), l, r, c);\n        push_up(cur);\n    }\n\n    void print(int cur){\n        if(t[cur].l == t[cur].r){\n            for(int i = 0; i < 26; i++)\n                if(t[cur].sum[i])\n                    putchar('a' + i);\n            return ;\n        }\n        push_down(cur);\n        print(lc(cur));\n        print(rc(cur));\n    }\n}t;\n\nint main(){\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n    int n = inp();\n    int q = inp();\n    scanf(\"%s\", s + 1);\n    t.build(1, 1, n);\n    while(q--){\n        int l = inp();\n        int r = inp();\n        memset(cnt, 0, sizeof(cnt));\n        t.query(1, l, r);\n        if((r - l + 1) & 1){\n            int cs = 0, num;\n            for(int i = 0; i < 26; i++)\n                if(cnt[i] & 1){\n                    cs++;\n                    num = i;\n                }\n            if(cs == 1){\n                int mid = (l + r) >> 1;\n                t.modify(1, mid, mid, num);\n                int cc = 0;\n                for(int i = 0; i < 26; i++){\n                    if(cnt[i] <= 1)\n                        continue;\n                    int c2 = cc + (cnt[i] >> 1);\n                    t.modify(1, l + cc, l + c2 - 1, i);\n                    t.modify(1, r - c2 + 1, r - cc, i);\n                    cc = c2;\n                }\n            }\n        } else {\n            int cs = 0, num = -1;\n            for(int i = 0; i < 26; i++)\n                if(cnt[i] & 1){\n                    cs++;\n                    num = i;\n                }\n            if(cs == 0){\n                int cc = 0;\n                for(int i = 0; i < 26; i++){\n                    if(cnt[i] == 0)\n                        continue;\n                    int c2 = cc + (cnt[i] >> 1);\n                    t.modify(1, l + cc, l + c2 - 1, i);\n                    t.modify(1, r - c2 + 1, r - cc, i);\n                    cc = c2;\n                }\n            }\n        }\n    }\n    t.print(1);\n    putchar('\\n');\n}\n```\n\n",
        "postTime": 1559568607,
        "uid": 36362,
        "name": "Dilute",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF240F \u3010TorCoder\u3011"
    },
    {
        "content": "DS \u4e8b\u597d\u6587\u660e\uff0c\u5b57\u7b26\u4e32\u662f\u574f\u6587\u660e\uff01\uff011\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF240F)\n\n\u9898\u76ee\u5927\u610f\uff1a\u7ed9\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32 $S$ \uff0c\u6bcf\u6b21\u7ed9\u5b9a\u4e00\u4e2a\u533a\u95f4 $[l,\\ r]$ \uff0c\u628a\u8be5\u533a\u95f4\u7684\u5b57\u7b26\u4e32\u4fee\u6539\u6210\u56de\u6587\u4e32\u4e14\u65b0\u7684\u56de\u6587\u4e32\u5728\u6240\u6709\u53ef\u5f62\u6210\u7684\u4e32\u91cc\u9762\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u6c42 $m$ \u6b21\u64cd\u4f5c\u540e\u7684\u5b57\u7b26\u4e32 $S'$ \u3002\n\n~~\u53e3\u80e1\u4e00\u5206\u949f\uff0c\u4ee3\u7801\u4e00\u5c0f\u65f6~~\n\n\u9996\u5148\u73c2\u4ee5\u610f\u8bc6\u5230\uff0c \u6bcf\u6b21\u662f\u9700\u8981\u91cd\u6392\u4e00\u6574\u4e2a\u533a\u95f4\u7684\uff08\u5373\u533a\u95f4\u63a8\u5e73 / \u8d4b\u503c\u64cd\u4f5c\uff09\uff0c\u6211\u4eec\u60f3\u5230\u7ebf\u6bb5\u6811\u3002\n\n\u518d\u56de\u5934\uff0c\u6211\u4eec\u5982\u4f55\u5224\u65ad\u533a\u95f4 $[l,\\ r]$ \u5f62\u6210\u4e32 $Z$ \u80fd\u91cd\u6392\u6210\u4e00\u4e2a\u56de\u6587\u4e32\uff1f\n\n\u5341\u5206\u5bb9\u6613\uff0c\u6211\u4eec\u53ea\u9700\u6309\u5982\u4e0b\u5206\u7c7b\u8ba8\u8bba\u5373\u53ef\uff1a\n\n- \u82e5 $|Z|$ \u4e3a\u5076\u6570\uff0c\u5219 $Z$ \u5185\u5404\u79cd\u5b57\u6bcd\u7684\u51fa\u73b0\u6b21\u6570\u5747\u4e3a\u5076\u6570\uff1b\n- \u82e5 $|Z|$ \u4e3a\u5947\u6570\uff0c\u5219 $Z$ \u5185\u6709\u4e14\u4ec5\u6709\u4e00\u79cd\u5b57\u6bcd\u51fa\u73b0\u6b21\u6570\u4e3a\u5947\u6570\u3002\n\n\u89e3\u51b3\u5b8c\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u6765\u5230\u4e0b\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u4f55\u6392\u6210\u56de\u6587\u4e32\uff1f\n\n\u8fd9\u4e2a\u7b80\u5355\uff0c\u56e0\u4e3a\u56de\u6587\u4e32\u662f\u5bf9\u79f0\u7684\uff0c\u6211\u4eec\u53ea\u9700\u5728 $|Z|$ \u4e3a\u5947\u6570\u7684\u65f6\u5019\u628a\u591a\u51fa\u7684\u90a3\u4e00\u4e2a\u653e\u8fdb $[l,\\ r]$ \u7684\u4e2d\u95f4\u90e8\u5206\u540e\uff0c\u5176\u4ed6\u76f8\u540c\u7684\u4e24\u4e24\u4e00\u7ec4\u653e\u5230\u672a\u586b\u5145\u7684\u8fb9\u754c\uff08\u6700\u5de6\u548c\u6700\u53f3\uff09\u5373\u53ef\u5f62\u6210\u56de\u6587\u4e32\u3002\n\n\u6b64\u65f6\u6211\u4eec\u8fd8\u5269\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u4f55\u4f7f\u5b57\u5178\u5e8f\u6700\u5c0f\uff1f\n\n**\u8fd9\u4e2a\u6211\u4f1a\uff01\uff011**\u628a\u6700\u5c0f\u7684\u5b57\u6bcd\u5148\u653e\u524d\u9762\u4e0d\u5c31\u597d\u4e86\u3002\n\n\u5230\u8fd9\u91cc\u6211\u4eec\u603b\u7ed3\u4e00\u4e0b\u4e0a\u9762\u7684\u6b65\u9aa4\uff1a\n\n1. \u67e5\u8be2\u533a\u95f4\u5185\u5404\u79cd\u5b57\u6bcd\u7684\u4e2a\u6570\uff0c\u5224\u65ad\u662f\u5426\u80fd\u6392\uff1b$O(n)$\n1. \u82e5 $|Z|$  \u4e3a\u5947\u6570\uff0c\u5219\u5148\u5c06\u591a\u51fa\u7684\u4e00\u4e2a\u653e\u5165 $Z$ \u7684\u4e2d\u95f4\uff1b$O(1)$\n1. \u5c06\u5b57\u6bcd\u4ece\u5c0f\u5230\u5927\u5bf9\u79f0\u653e\u7f6e\u3002$O(n)$\n\n\u8fd9\u6574\u6ce2\u64cd\u4f5c\u662f $O(mn)$ \u7684\uff0c\u76f4\u63a5\u7206\u70b8\u3002\n\n\u56de\u5230\u6211\u4eec\u5f00\u59cb\u7684\u7ebf\u6bb5\u6811\uff0c\u53d1\u73b0\u64cd\u4f5c 1 \u7684\u4e2a\u6570\u7edf\u8ba1\uff0c\u7ebf\u6bb5\u6811\u73c2\u4ee5\u52a0\u901f\u6210 $O(log_2n)$ \u3002\n\n\u540c\u7406\uff0c\u64cd\u4f5c 2/3 \u90fd\u662f\u533a\u95f4\u8d4b\u503c\u64cd\u4f5c\uff0c\u540c\u6837\u53ef\u4ee5\u62ff\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u8fd9\u9898\u6211\u61d2\u4e0d\u60f3\u6253\u4e00\u9897\u7ebf\u6bb5\u6811\uff0c\u5c31\u62ff\u4e86\u7a7a\u95f4\u6362\u3002~~\u53cd\u6b63\u5361\u4e0d\u6389~~\n\n\u90a3\u4e48\u65f6\u95f4\u5c31\u964d\u81f3\u4e86 $O(mlog_2n)$ \u3002\u81f3\u6b64\uff0c\u672c\u9898\u5f97\u5230\u5b8c\u7f8e\u89e3\u51b3\u3002\n\n\u8bf4\u53e5\u95f2\u8bdd\uff1a\u7a9d add \u6ca1\u7ed9\u521d\u503c\u8c03\u4e86 $0.5h$ \u3002\n\n### Code\n\n```cpp\n#include <stdio.h>\n#include <algorithm>\n#include <string.h>\n#include <vector>\n#define N 100005\nusing namespace std;\ntypedef long long ll;\nconst int INF=0x3f3f3f3f;\ninline int read(){\n\tchar ch=getchar();int x=0, f=1;\n\twhile(ch<'0'||ch>'9'){if(ch=='-') f=-1; ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nint n, m;\nchar c[N];\nstruct Sedgment_Tree{\n\t#define ls k<<1\n\t#define rs k<<1|1\n\t#define mid (l+r>>1)\n\tchar key;\n\tint sum[N*4], tag[N*4];\n\tint siz[N*4]; \n\t//tag\u8868\u793a\u8fd9\u4e2a\u533a\u95f4\u7684\u5b57\u6bcd\u662f\u5426\u88ab\u63a8\u5e73(1)/\u8d4b\u503c(2)\n\tvoid pushup(int k){sum[k]=sum[ls]+sum[rs];return ;}\n\tvoid upd(int k, int tg){\n\t\ttag[k]=tg;\n\t\tif(tg==1) sum[k]=0;\n\t\telse sum[k]=siz[k];\n\t\treturn ;\n\t}\n\tvoid pushdown(int k){\n\t\tif(!tag[k]) return ;\n\t\tupd(ls, tag[k]);upd(rs, tag[k]);tag[k]=0;\n\t\treturn ;\n\t}\n\tvoid build(int k, int l, int r){\n\t\tsiz[k]=r-l+1;\n\t\tif(l==r){sum[k]=c[l&r]==key; return;}\n\t\tbuild(ls, l, mid);build(rs, mid+1, r);\n\t\treturn pushup(k);\n\t}\n\tvoid change(int k, int l, int r, int x, int y, int flg){\n\t\tif(x<=l&&r<=y) return upd(k, flg);pushdown(k);\n\t\tif(x<=mid) change(ls, l, mid, x, y, flg);\n\t\tif(mid<y) change(rs, mid+1, r, x, y, flg);\n\t\tpushup(k);\n\t}\n\tint query(int k, int l, int r, int x, int y){\n\t\tif(x<=l&&r<=y) return sum[k];pushdown(k);int ret=0;\n\t\tif(x<=mid) ret+=query(ls, l, mid, x, y);\n\t\tif(mid<y) ret+=query(rs, mid+1, r, x, y);\n\t\treturn ret;\n\t}\n\tvoid pushall(int k, int l, int r){\n\t\tif(siz[k]==1){sum[k]?c[l&r]=key:0;return ;}\n\t\tpushdown(k);\n\t\tpushall(ls, l, mid);pushall(rs, mid+1, r);\n\t}\n}seg[26];\nvoid modify(int *cnti, int fl, int fr, int rl, int rr){\n\t//\u5c06cnt\u5185\u7684\u5b57\u6bcd\u6309\u7167\u6700\u5c0f\u5b57\u5178\u5e8f\u56de\u6587\u4e32\u7684\u65b9\u5f0f\u6446\u653e\n\tfor(int i=0; i<26; i++){\n\t\tif(!cnti[i]) continue;\n\t\tint len=cnti[i]/2;\n\t\tseg[i].change(1, 1, n, fl, fl+len-1, 2);\n\t\tseg[i].change(1, 1, n, rr-len+1, rr, 2);\n\t\tfl=fl+len;\n\t\trr=rr-len;\n\t} \n\treturn ;\n}\nint cnt[30], st;\nsigned main(){\n\tfreopen(\"input.txt\", \"r\", stdin);\n\tfreopen(\"output.txt\", \"w\", stdout);\n\tscanf(\"%d%d\", &n, &m);\n\tscanf(\"%s\", c+1);\n\tfor(int i=0; i<26; i++){\n\t\tseg[i].key=i+'a';\n\t\tseg[i].build(1, 1, n);\n\t}\n\tfor(int i=1, x, y; i<=m; i++){\n\t\tscanf(\"%d%d\", &x, &y);\n\t\tint len=y-x+1, add=0;\n\t\tfor(int i=0; i<26; i++) \n\t\t\tcnt[i]=seg[i].query(1, 1, n, x, y), add+=cnt[i]&1, cnt[i]&1?st=i:0;\n\t\tif(add>2||(!(len&1) && add)) continue;\n\t\tfor(int i=0; i<26; i++)\n\t\t\tseg[i].change(1, 1, n, x, y, 1);\n\t\t\t//\u8fd9\u4e2a\u64cd\u4f5c\u5fc5\u987b\u653e\u5728\u7279\u5224\u4e4b\u540e \n\t\tif(len&1){\n\t\t\tcnt[st]--;\n\t\t\tseg[st].change(1, 1, n, (x+y>>1), (x+y>>1), 2);\n\t\t}\n\t\tmodify(cnt, x, ((x+y)>>1)-(len&1), ((x+y)>>1)+(len&1), y);\n\t}\n\tfor(int i=0; i<26; i++) seg[i].pushall(1, 1, n);\n\tprintf(\"%s\\n\", c+1);\n\treturn 0;\n}\n\n```\n\n\u62dc\u62dc~",
        "postTime": 1620104570,
        "uid": 341102,
        "name": "ReKoJ",
        "ccfLevel": 0,
        "title": "CF240F TorCoder"
    },
    {
        "content": "# \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u4ec5\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u7684\u5b57\u7b26\u4e32 $S$\uff0c\u6709 $m$ \u6b21\u4fee\u6539\uff0c\u6bcf\u6b21\u4fee\u6539\u4f1a\u5c06\u5b50\u4e32 $S[l..r]$ \u4e2d\u7684\u6240\u6709\u5b57\u6bcd\u91cd\u6392\u6210\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32\uff0c\u6ee1\u8db3\u65b0\u5b57\u7b26\u4e32\u662f\u56de\u6587\u4e32\u4e14\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u5982\u679c\u65e0\u6cd5\u6ee1\u8db3\u5c31\u5ffd\u7565\u672c\u6b21\u4fee\u6539\uff0c\u6c42 $m$ \u6b21\u4fee\u6539\u540e\u7684\u5b57\u7b26\u4e32\u3002\n\n# \u9898\u89e3\n\n\u9996\u5148\u6211\u4eec\u601d\u8003\u4ec0\u4e48\u65f6\u5019\u53ef\u4ee5\u4fee\u6539\uff0c\u4ec0\u4e48\u65f6\u5019\u4e0d\u80fd\u4fee\u6539\u3002\n\n\u53d1\u73b0\u56de\u6587\u4e32\u6709\u4e00\u4e2a\u6027\u8d28\uff1a\u5982\u679c\u56de\u6587\u4e32\u957f\u5ea6\u4e3a\u5947\u6570\uff0c\u90a3\u4e48\u80af\u5b9a\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u5b57\u6bcd\u51fa\u73b0\u4e86\u5947\u6570\u6b21\uff0c\u800c\u5982\u679c\u56de\u6587\u4e32\u957f\u5ea6\u4e3a\u5076\u6570\uff0c\u80af\u5b9a\u4e0d\u4f1a\u6709\u5b57\u7b26\u51fa\u73b0\u5947\u6570\u6b21\u3002\n\n\u5982\u679c\u6ee1\u8db3\u4e0a\u9762\u7684\u6761\u4ef6\uff0c\u90a3\u4e48\u4e00\u5b9a\u80fd\u6784\u9020\u51fa\u4e00\u4e2a\u56de\u6587\u4e32\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u8003\u8651\u7edf\u8ba1\u6bcf\u4e00\u4e2a\u5b57\u7b26\u7684\u6570\u91cf\uff1a\u53d1\u73b0\u5b57\u7b26\u96c6\u53ea\u6709 $26$\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u4f7f\u7528 $26$ \u4e2a\u67d0\u79cd\u6570\u636e\u7ed3\u6784\u7edf\u8ba1\u4e00\u6bb5\u533a\u95f4\u5185\u6709\u591a\u5c11\u4e2a\u8fd9\u4e2a\u5b57\u7b26\u3002\n\n\u90a3\u4e48\u7edf\u8ba1\u51fa\u6765\u6570\u91cf\u4e4b\u540e\uff0c\u5982\u4f55\u6784\u9020\uff1f\n\n\u6211\u4eec\u5206\u522b\u6765\u8003\u8651\u5076\u6570\u957f\u5ea6\u548c\u5947\u6570\u957f\u5ea6\uff1a\n\n\u5076\u6570\u957f\u5ea6\u6bd4\u8f83\u7b80\u5355\uff0c\u6211\u4eec\u9700\u8981\u6ee1\u8db3\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5148\u586b\u524d\u4e00\u534a\uff0c\u76f4\u63a5\u4ece $a$ \u5f00\u59cb\u586b\uff0c\u4e00\u76f4\u586b\u5230 $z$\uff0c\u7136\u540e\u540e\u4e00\u534a\u76f4\u63a5\u5bf9\u5e94\u7684\u586b\u8fc7\u53bb\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u6ee1\u8db3\u5b57\u5178\u5e8f\u6700\u5c0f\u3002\n\n\u5947\u6570\u957f\u5ea6\u7684\u8bdd\uff0c\u6211\u4eec\u9700\u8981\u8bb0\u5f55\u4e00\u4e0b\u51fa\u73b0\u4e86\u5947\u6570\u6b21\u7684\u90a3\u4e00\u4e2a\u5b57\u7b26\u5728\u54ea\u91cc\u3002\u6211\u4eec\u9996\u5148\u5355\u72ec\u62ff\u51fa\u6765\u4e00\u4e2a\u8fd9\u4e2a\u5b57\u7b26\uff0c\u653e\u5728\u6700\u4e2d\u95f4\uff0c\u7136\u540e\u5269\u4e0b\u7684\u8fd8\u6309\u7167\u5076\u6570\u957f\u5ea6\u7684\u8fdb\u884c\u6784\u9020\u5c31\u53ef\u4ee5\u3002\n\n\u53d1\u73b0\u8fd9\u6837\u6784\u9020\u6b63\u597d\u4e5f\u4f1a\u4f7f\u5f97\u540c\u4e00\u4e2a\u5b57\u7b26\u6240\u5728\u7684\u4f4d\u7f6e\u662f\u4e00\u4e2a\u533a\u95f4\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u8fdb\u884c\u533a\u95f4\u4fee\u6539\u5373\u53ef\u3002\n\n\u56de\u987e\u4e00\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u6ee1\u8db3\uff1a\n\n- \u533a\u95f4\u6c42\u548c\n- \u533a\u95f4\u8d4b\u503c\n\n\u6240\u4ee5\u76f4\u63a5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5c31\u53ef\u4ee5\u4e86\u3002\n\n# \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 100005;\nint n, m;\nstruct SegmentTree {\n    struct Node {\n        int sum, set;\n    }t[MAXN << 2];\n    #define lc (i << 1)\n    #define rc (i << 1 | 1)\n    void pushUp(int i) {\n        t[i].sum = t[lc].sum + t[rc].sum;\n    }\n    void pushDown(int i, int l, int r) {\n        if (t[i].set != -1) {\n            int mid = (l + r) >> 1;\n            t[lc].sum = (mid - l + 1) * t[i].set;\n            t[rc].sum = (r - mid) * t[i].set;\n            t[lc].set = t[i].set;\n            t[rc].set = t[i].set;\n            t[i].set = -1;\n        }\n    }\n    void build(int i = 1, int l = 1, int r = n) {\n        if (l == r) {\n            t[i].set = -1;\n            return;\n        }\n        int mid = (l + r) >> 1;\n        build(lc, l, mid);\n        build(rc, mid + 1, r);\n        t[i].set = -1;\n    }\n    void set(int a, int b, int v, int i = 1, int l = 1, int r = n) {\n        if (l > r) return;\n        if (a <= l && r <= b) {\n            t[i].set = v;\n            t[i].sum = (r - l + 1) * v;\n            return;\n        }\n        pushDown(i, l, r);\n        int mid = (l + r) >> 1;\n        if (a <= mid) set(a, b, v, lc, l, mid);\n        if (b > mid) set(a, b, v, rc, mid + 1, r);\n        pushUp(i);\n    }\n    int query(int a, int b, int i = 1, int l = 1, int r = n) {\n        if (a <= l && r <= b) {\n            return t[i].sum;\n        }\n        pushDown(i, l, r);\n        int mid = (l + r) >> 1;\n        int ans = 0;\n        if (a <= mid) ans += query(a, b, lc, l, mid);\n        if (b > mid) ans += query(a, b, rc, mid + 1, r);\n        return ans;\n    }\n}st[26];\nchar ch[MAXN];\nint cnt[26];\nint main() {\n    scanf(\"%d%d%s\", &n, &m, ch + 1);\n    for (int i = 0; i < 26; i++) st[i].build();\n    for (int i = 1; i <= n; i++) {\n        st[ch[i] - 'a'].set(i, i, 1);\n    }\n    while (m--) {\n        int l, r; scanf(\"%d%d\", &l, &r);\n        for (int i = 0; i < 26; i++) cnt[i] = st[i].query(l, r);\n        int odd = -1;\n        bool flag = false;\n        for (int i = 0; i < 26; i++) {\n            if (cnt[i] & 1) { // \u51fa\u73b0\u5947\u6570\u6b21\n                if ((r - l + 1) & 1) { // \u5947\u6570\u56de\u6587\u4e32\n                    if (odd != -1) { // \u5b58\u5728\u4e24\u4e2a\u51fa\u73b0\u5947\u6570\u6b21\u7684\u5b57\u7b26\uff0c\u65e0\u89e3\n                        flag = true;\n                        break;\n                    } else {\n                        odd = i;\n                    }\n                } else { // \u5076\u6570\u56de\u6587\u4e32\uff0c\u65e0\u89e3\n                    flag = true;\n                    break;\n                }\n            }\n        }\n        if (flag) continue;\n        int cc = 0;\n        if (odd != -1) {\n            st[odd].set(l, r, 0);\n            int mid = (l + r) >> 1;\n            st[odd].set(mid, mid, 1);\n        }\n        for (int i = 0; i < 26; i++) {\n            cnt[i] /= 2;\n            if (cnt[i] == 0) continue;\n            if (i != odd) st[i].set(l, r, 0);\n            st[i].set(l + cc, l + cc + cnt[i] - 1, 1);\n            st[i].set(r - cc - cnt[i] + 1, r - cc, 1);\n            cc += cnt[i];\n        }\n    }\n    for (int i = 1; i <= n; i++) {\n        for (int j = 0; j < 26; j++) {\n            if (st[j].query(i, i) == 1) {\n                printf(\"%c\", 'a' + j);\n                break;\n            }\n        }\n    }\n    return 0;\n}\n```\n\n# \u540e\u8bb0\n\n~~\u5e94\u8be5\u4e0d\u4f1a\u6709\u4eba\u548c\u6211\u4e00\u6837\u628a\u51fa\u73b0\u5947\u6570\u6b21\u7684\u5b57\u7b26\u5168\u90e8\u653e\u5728\u6700\u4e2d\u95f4\uff0c\u7136\u540e WA \u8c03\u534a\u5929\u5427~~",
        "postTime": 1646884691,
        "uid": 279652,
        "name": "APJifengc",
        "ccfLevel": 9,
        "title": "\u300c\u89e3\u9898\u62a5\u544a\u300dCF240F TorCoder"
    },
    {
        "content": "\u4e00\u5b9a\u8981\u7528\u6587\u4ef6\u8f93\u5165\u8f93\u51fa\uff01\uff01\uff01\n\n\uff08\u6211\u5c31\u662f\u4e00\u5f00\u59cb\u6ca1\u6ce8\u610f\uff0c\u7136\u540e\u51fa\u73b0\u4e86\u767e\u5e74\u96be\u5f97\u4e00\u89c1\u7684 ILE\uff09\n# Solution\n\u6211\u4eec\u6a21\u62df\u4e00\u4e0b\u64cd\u4f5c\u5c31\u4f1a\u53d1\u73b0\uff0c\u53ea\u8981\u6211\u4eec\u77e5\u9053\u4e86\u8fd9\u4e2a\u533a\u95f4\u6bcf\u4e2a\u5b57\u6bcd\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5c31\u80fd\u77e5\u9053\u5b83\u6700\u540e\u6392\u6210\u4ec0\u4e48\u6837\u5b50\uff0c\u4e0e\u539f\u6765\u7684\u987a\u5e8f\u65e0\u5173\u3002\n\n\u65e0\u89e3\u7684\u60c5\u51b5\u4e5f\u5f88\u5bb9\u6613\u5224\u65ad\uff1a\u5982\u679c\u8fd9\u4e2a\u533a\u95f4\u7684\u957f\u5ea6\u662f\u5947\u6570\uff0c\u90a3\u4e48 26 \u4e2a\u5b57\u6bcd\u4e2d\u6709\u4e14\u4ec5\u6709 1 \u4e2a\u51fa\u73b0\u4e86\u5076\u6570\u6b21\uff1b\u5982\u679c\u533a\u95f4\u957f\u5ea6\u662f\u5076\u6570\uff0c\u90a3\u4e48\u6240\u6709\u5b57\u6bcd\u90fd\u5e94\u51fa\u73b0\u5076\u6570\u6b21\u3002\n\n\u5982\u679c\u6709\u89e3\uff0c\u663e\u7136\u6211\u4eec\u8981\u628a\u5b57\u5178\u8d8a\u5c0f\u7684\u5b57\u6bcd\u6392\u5728\u8d8a\u524d\u9762\uff0c\u7136\u540e\u6839\u636e\u56de\u6587\u7684\u6027\u8d28\u586b\u597d\u53f3\u8fb9\u672c\u6bb5\u5bf9\u5e94\u7684\u4f4d\u7f6e\u5373\u53ef\u3002\n\n\u8003\u8651\u5230\u6570\u636e\u8303\u56f4\u548c\u65f6\u95f4\u9650\u5236\u6bd4\u8f83\u5bbd\u677e\uff0c\u6240\u4ee5\u6211\u4eec\u66b4\u529b\u5730\u7528 26 \u4e2a\u7ebf\u6bb5\u6811\u7edf\u8ba1\u6bcf\u4e2a\u5b57\u6bcd\u7684\u6570\u91cf\u3002\u6bcf\u6b21\u64cd\u4f5c\u65f6\u90fd\u628a 26 \u4e2a\u7ebf\u6bb5\u6811\u7684\u533a\u95f4\u548c\u6c42\u51fa\u6765\uff0c\u518d\u5224\u65ad\u65e0\u89e3\u3002\u5982\u679c\u6709\u89e3\u5c31\u628a 26 \u4e2a\u7ebf\u6bb5\u6811\u7684\u8fd9\u6bb5\u533a\u95f4\u6e05\u7a7a\uff0c\u7136\u540e\u6309\u7167\u6211\u4eec\u7684\u8d2a\u5fc3\u7b56\u7565\u586b\u5c31\u597d\u4e86\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nnamespace my_IO{\n    #define ll long long\n    #define ull unsigned long long \n    #define ld long double\n    template<class T>\n    void read(T &num){\n        T x=0,f=1;\n        char c=getchar();\n        while(!isdigit(c)){\n            if(c=='-') f=-1;\n            c=getchar();\n        }\n        while(isdigit(c)){\n            x=(x<<3)+(x<<1)+c-48;\n            c=getchar();\n        }\n        num=f*x;\n    }\n    template<class T>\n    void write(T x){\n        static char buf[40];\n        T len=-1;\n        if(x<0) x=-x,putchar('-');\n        do{\n            buf[++len]=x%10+48;\n            x/=10;\n        }while(x);\n        while(len>=0) putchar(buf[len--]);\n    }\n}\nusing namespace my_IO;\nconst int maxn=1e5+10;\nint n,m,cnt[30];\nchar s[maxn];\nstruct tree{\n    int sum,tag;\n}tr[maxn<<2][30];\nvoid pushup(int t,int id){\n    tr[t][id].sum=tr[t<<1][id].sum+tr[t<<1|1][id].sum;\n}\nvoid build(int l,int r,int t){\n    for(int i=1;i<=26;i++) tr[t][i].tag=-1;\n    if(l==r){\n        tr[t][s[l]-'a'+1].sum=1;\n        return;\n    }\n    int mid=(l+r)>>1;\n    build(l,mid,t<<1);\n    build(mid+1,r,t<<1|1);\n    for(int i=1;i<=26;i++){\n        pushup(t,i);\n        tr[t][i].tag=-1;\n    }\n}\nvoid pushdown(int l,int r,int t,int id){\n    if(tr[t][id].tag!=-1){\n        int mid=(l+r)>>1;\n        tr[t<<1][id].sum=(mid-l+1)*tr[t][id].tag;\n        tr[t<<1][id].tag=tr[t][id].tag;\n        tr[t<<1|1][id].sum=(r-mid)*tr[t][id].tag;\n        tr[t<<1|1][id].tag=tr[t][id].tag;\n        tr[t][id].tag=-1;\n    }\n}\nvoid modify(int l,int r,int t,int ql,int qr,int val,int id){\n    if(ql<=l&&r<=qr){\n        tr[t][id].sum=val*(r-l+1);\n        tr[t][id].tag=val;\n        return;\n    }\n    pushdown(l,r,t,id);\n    int mid=(l+r)>>1;\n    if(ql<=mid) modify(l,mid,t<<1,ql,qr,val,id);\n    if(qr>mid) modify(mid+1,r,t<<1|1,ql,qr,val,id);\n    pushup(t,id);\n}\nint que(int l,int r,int t,int ql,int qr,int id){\n    if(ql<=l&&r<=qr) return tr[t][id].sum;\n    pushdown(l,r,t,id);\n    int mid=(l+r)>>1,ans=0;\n    if(ql<=mid) ans+=que(l,mid,t<<1,ql,qr,id);\n    if(qr>mid) ans+=que(mid+1,r,t<<1|1,ql,qr,id);\n    pushup(t,id);\n    return ans;\n}\nvoid solve(){\n    freopen(\"input.txt\",\"r\",stdin);\n    freopen(\"output.txt\",\"w\",stdout);\n    read(n),read(m);\n    scanf(\"%s\",s+1);\n    build(1,n,1);\n    while(m--){\n        int l,r,flag=0,lpos,rpos;\n        read(l),read(r);\n        lpos=l,rpos=r;\n        for(int i=1;i<=26;i++){\n            cnt[i]=que(1,n,1,l,r,i);\n            if(cnt[i]%2) flag++;\n        }\n        if(((r-l+1)%2&&flag!=1)||(!((r-l+1)%2)&&flag)) continue;\n        for(int i=1;i<=26;i++) modify(1,n,1,l,r,0,i);\n        for(int i=1;i<=26;i++){\n            if(cnt[i]){\n                if(cnt[i]%2) modify(1,n,1,(l+r)>>1,(l+r)>>1,1,i);\n                if(cnt[i]>1){\n                    int len=cnt[i]>>1;\n                    modify(1,n,1,lpos,lpos+len-1,1,i);\n                    modify(1,n,1,rpos-len+1,rpos,1,i);\n                    lpos+=len;\n                    rpos-=len;\n                }\n            }\n        }\n    }\n    for(int i=1;i<=n;i++) for(int j=1;j<=26;j++) if(que(1,n,1,i,i,j)) putchar('a'+j-1);\n}\nint main(){\n    int t=1;\n    while(t--) solve();\n}\n```\n",
        "postTime": 1680589477,
        "uid": 685993,
        "name": "Dian_xin_zha_pian",
        "ccfLevel": 6,
        "title": "CF240F\u9898\u89e3"
    },
    {
        "content": "\u57fa\u672c\u5c31\u662f CF558E\u3002\n\n\u6ce8\u610f\u5230\u5b57\u7b26\u96c6\u5f88\u5c0f\uff0c\u8003\u8651\u7ef4\u62a4\u51fa\u533a\u95f4\u6bcf\u4e2a\u5b57\u6bcd\u51fa\u73b0\u6b21\u6570\uff0c\u7136\u540e\u76f4\u63a5\u91cd\u6392\u3002\n\n\u663e\u7136\uff0c\u82e5\u51fa\u73b0\u5947\u6570\u6b21\u7684\u5b57\u6bcd $>1$ \u4e2a\uff0c\u5219\u65e0\u6cd5\u64cd\u4f5c\u3002\n\n\u6309\u5b57\u5178\u5e8f\u4f9d\u6b21\u91cd\u6392\uff0c\u5982\u679c\u5269\u4e0b\u4e00\u4e2a\u51fa\u73b0\u5947\u6570\u6b21\u7684\u5b57\u6bcd\u5c31\u653e\u5728\u4e2d\u95f4\u3002\n\n\u533a\u95f4\u8986\u76d6\u533a\u95f4\u67e5\u8be2\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n```cpp\n#include <cstdio>\n#include <cctype>\n#include <cstring>\n#define G int m = s + t >> 1\n#define C(x) memset(x, 0, sizeof x)\n#define F for(int i = 0;i < 26;++i)\ninline int R()\n{\n    int r = 0;char c = getchar();while(!isdigit(c)) c = getchar();\n    while(isdigit(c)) r = r * 10 + c - '0', c = getchar();return r;\n}\ninline char I() {char c = getchar();while(!islower(c)) c = getchar();return c;}\nstruct T\n{\n    T *l, *r;int s, t, x, v[26];T(int p, int q) : l(0), r(0), s(p), t(q), x(-1)\n    {C(v);}void u() {F v[i] = l->v[i] + r->v[i];}void d() {if(~x) {G;C(l->v);\n    l->v[x] = m - s + 1;C(r->v);r->v[x] = t - m;l->x = x;r->x = x;x = -1;}}\n}*r;\nvoid B(int s, int t, T *&p)\n{\n    p = new T(s, t);if(s == t) {p->v[I() - 'a'] = 1;\n    return;}G;B(s, m, p->l);B(m + 1, t, p->r);p->u();\n}\nvoid M(int l, int r, int x, int s, int t, T *p)\n{\n    if(l <= r) {if(l <= s && t <= r) {C(p->v);p->v[x] = t - s + 1;p->x = x;return;}p->\n    d();G;if(l <= m) M(l, r, x, s, m, p->l);if(r > m) M(l, r, x, m + 1, t, p->r);p->u();}\n}\nint Q(int l, int r, int x, int s, int t, T *p)\n{\n    if(l <= r) {if(l <= s && t <= r) return p->v[x];p->d();G;int q = 0;if(l <= m)\n    q += Q(l, r, x, s, m, p->l);if(r > m) q += Q(l, r, x, m + 1, t, p->r);return q;}\n}\nvoid P(int s, int t, T *p) {if(s == t) {F if(p->v[i]) {putchar\n(i + 'a');return;}}p->d();G;P(s, m, p->l);P(m + 1, t, p->r);}\nint n, m, x, y, k, q[26];\nint main()\n{\n\tfreopen(\"input.txt\", \"r\", stdin);\n\tfreopen(\"output.txt\", \"w\", stdout);\n    n = R();m = R();B(1, n, r);while(m--)\n    {\n        x = R();y = R();C(q);k = 0;\n\t\tF k += (q[i] = Q(x, y, i, 1, n, r)) & 1;\n\t\tif(k > 1) continue;\n\t\tF\n\t\t{\n\t\t\tM(x, x + (q[i] >> 1) - 1, i, 1, n, r);\n\t\t\tM(y - (q[i] >> 1) + 1, y, i, 1, n, r);\n\t\t\tx += q[i] >> 1;y -= q[i] >> 1;q[i] &= 1;\n\t\t}\n\t\tF if(q[i]) M(x, y, i, 1, n, r);\n    }\n    return P(1, n, r), 0;\n}\n```\n",
        "postTime": 1679272053,
        "uid": 388651,
        "name": "5k_sync_closer",
        "ccfLevel": 7,
        "title": "CF240F TorCoder \u9898\u89e3"
    },
    {
        "content": "\u5f00 26 \u68f5\u7ebf\u6bb5\u6811\uff0c\u6bcf\u68f5\u6811\u7ef4\u62a4\u4e00\u79cd\u5b57\u6bcd\u3002\u6bcf\u6b21\u7684\u533a\u95f4\u91cd\u6392\u53ef\u770b\u4f5c\u533a\u95f4\u4fee\u6539\u3002\u6211\u4eec\u7528 0 \u8868\u793a\u6ca1\u6709\u8be5\u5b57\u6bcd\uff0c\u7528 1 \u8868\u793a\u5b58\u5728\u3002  \n\n\u5206\u6790\u56de\u6587\u7684\u6027\u8d28\u3002\u56de\u6587\u6709\u4e24\u79cd\uff1a\u957f\u5ea6\u4e3a\u5947\u6570\uff0c\u5373\u6709\u4e00\u79cd\u5b57\u6bcd\u51fa\u73b0\u7684\u6b21\u6570\u4e3a\u5947\u6570\uff1b\u957f\u5ea6\u4e3a\u5076\u6570\uff0c\u5219\u6240\u6709\u5b57\u6bcd\u7684\u51fa\u73b0\u6b21\u6570\u4e3a\u5076\u6570\u3002\u7edf\u8ba1\u51fa\u73b0\u6b21\u6570\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\u5982\u679c\u4e0d\u6ee1\u8db3\u6761\u4ef6 continue \u5373\u53ef\uff0c\u5426\u5219\u4fee\u6539\u3002  \n\n\u7531\u4e8e\u9898\u76ee\u8981\u6c42\u6309\u5b57\u5178\u5e8f\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5373\u56de\u6587\u5de6\u534a\u8fb9\u8981\u4ece\u5c0f\u5230\u5927\u6392\u3002\u4ece $a$ \u5f00\u59cb\u679a\u4e3e\u5373\u53ef\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u5b57\u6bcd\uff0c\u82e5\u5176\u51fa\u73b0\u4e86 $k$ \u6b21\uff0c\u5219\u5728\u56de\u6587\u7684\u5de6\u8fb9\u5c06\u67d0\u4e2a\u957f\u5ea6\u4e3a $\\dfrac{k}{2}$ \u7684\u8be5\u5b57\u6bcd\u7ebf\u6bb5\u6811\u7684\u533a\u95f4\u8d4b\u503c\u4e3a 1\u3002\u7279\u6b8a\u7684\uff0c\u82e5\u8be5\u5b57\u6bcd\u51fa\u73b0\u5947\u6570\u6b21\uff0c\u5219\u628a\u8be5\u5b57\u6bcd\u7ebf\u6bb5\u6811\u7684\u533a\u95f4\u4e2d\u70b9\u4f4d\u7f6e\u4fee\u6539\u4e3a 1\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u8981\u6267\u884c\u4fee\u6539\u64cd\u4f5c\uff0c\u8981\u8bb0\u5f97\u5148\u628a\u6bcf\u4e2a\u5b57\u6bcd\u8be5\u533a\u95f4\u90fd\u4fee\u6539\u4e3a 0\u3002\n```cpp\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define N 100005\nusing namespace std;\nint read(){\n\tint x=0,flag=1;char c;\n\twhile((c=getchar())<'0'||c>'9') if(c=='-') flag=-1;\n\twhile(c>='0'&&c<='9') x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\treturn x*flag;\n}\nstruct trees{\n\tstruct segtree{\n\t\tint l,r,sum,add;\n\t\t#define l(x) tree[x].l\n\t\t#define r(x) tree[x].r\n\t\t#define sum(x) tree[x].sum\n\t\t#define add(x) tree[x].add\n\t}tree[4*N];\n\tvoid pushdown(int x){\n\t\tsum(x<<1)=add(x)*(r(x<<1)-l(x<<1)+1);\n\t\tsum(x<<1|1)=add(x)*(r(x<<1|1)-l(x<<1|1)+1);\n\t\tadd(x<<1)=add(x<<1|1)=add(x); add(x)=-1;\n\t}\n\tvoid build(int x,int l,int r){\n\t\tl(x)=l; r(x)=r; int mid=(l+r)>>1;\n\t\tif(l==r){sum(x)=0;add(x)=-1;return;}\n\t\tbuild(x<<1,l,mid); build(x<<1|1,mid+1,r);\n\t}\n\tint query(int x,int l,int r){\n\t\tif(l<=l(x)&&r(x)<=r) return sum(x);\n\t\tif(add(x)!=-1)pushdown(x); int mid=(l(x)+r(x))>>1,res=0;\n\t\tif(l<=mid) res+=query(x<<1,l,r); if(r>mid) res+=query(x<<1|1,l,r);\n\t\treturn res;\n\t}\n\tvoid modify(int x,int l,int r,int val){\n\t\tif(l<=l(x)&&r(x)<=r){sum(x)=val*(r(x)-l(x)+1);add(x)=val;return;}\n\t\tif(add(x)!=-1)pushdown(x); int mid=(l(x)+r(x))>>1;\n\t\tif(l<=mid) modify(x<<1,l,r,val); if(r>mid) modify(x<<1|1,l,r,val);\n\t\tsum(x)=sum(x<<1)+sum(x<<1|1);\n\t}\n}t[30];\nchar s[N];\nint n,m,bar[30],sum1=0,sum2=0;\nint main(){\n\tfreopen(\"input.txt\",\"r\",stdin);\n\tfreopen(\"output.txt\",\"w\",stdout);\n\tn=read(); m=read(); scanf(\"%s\",s+1);\n\tfor(int i=1;i<=26;i++) t[i].build(1,1,n);\n\tfor(int i=1;i<=n;i++){\n\t\tint tmp=s[i]-'a'+1;\n\t\tt[tmp].modify(1,i,i,1);\n\t}\n\twhile(m--){\n\t\tsum1=0; sum2=0;\n\t\tint l,r; scanf(\"%d%d\",&l,&r);\n\t\tfor(int i=1;i<=26;i++){\n\t\t\tbar[i]=t[i].query(1,l,r);\n\t\t\tif(bar[i]&&bar[i]%2==0) sum2++;\n\t\t\telse if(bar[i]%2==1) sum1++;\n\t\t}\n\t\tif((r-l+1)%2==0&&sum1) continue;\n\t\tif((r-l+1)%2==1&&sum1!=1) continue;\n\t\tfor(int i=1;i<=26;i++) t[i].modify(1,l,r,0);\n\t\tint sl=l,sr=r;\n\t\tfor(int i=1;i<=26;i++){\n\t\t\tif(bar[i]%2==1){t[i].modify(1,(l+r)>>1,(l+r)>>1,1);bar[i]--;}\n\t\t\tif(!bar[i]) continue;\n\t\t\tt[i].modify(1,sl,sl+bar[i]/2-1,1);\n\t\t\tt[i].modify(1,sr-bar[i]/2+1,sr,1);\n\t\t\tsl+=bar[i]/2; sr-=bar[i]/2;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t  for(int j=1;j<=26;j++) if(t[j].query(1,i,i)==1) cout<<(char)('a'+j-1);\n\tputs(\"\"); return 0;\n}\n```\n",
        "postTime": 1674457536,
        "uid": 464947,
        "name": "Code_\u661f\u4e91",
        "ccfLevel": 5,
        "title": "CF240F TorCoder \u9898\u89e3"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF240F)\n## \u601d\u8def\n\u5957\u8def\u9898\uff0c\u9996\u5148\u6211\u4eec\u9700\u8981\u5f00 $26$ \u9897\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u6bcf\u4e00\u79cd\u5b57\u6bcd\u51fa\u73b0\u7684\u6b21\u6570\u3002\n\n\u4e0d\u59a8\u8bbe\u6211\u4eec\u5f53\u524d $\\verb!update!$ \u7684\u533a\u95f4\u662f\u533a\u95f4 ${l,r}$\uff0c\u90a3\u4e48\uff0c\u5982\u679c $r-l+1$ \u662f\u4e2a\u5947\u6570\uff0c\u663e\u7136\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u6570\u51fa\u73b0\u5947\u6570\u6b21\uff0c\u82e5\u662f\u4e2a\u5076\u6570\uff0c\u663e\u7136\u4efb\u610f\u4e00\u4e2a\u6570\u90fd\u4e0d\u80fd\u51fa\u73b0\u5947\u6570\u6b21\uff0c\u8fd9\u6837\u679a\u4e3e $26$ \u4e2a\u5b57\u6bcd\uff0c\u66b4\u529b\u7edf\u8ba1\uff0c\u5c31\u53ef\u4ee5\u5224\u65ad\u51fa\u4fee\u6539\u662f\u5426\u662f\u5408\u6cd5\u7684\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u5982\u4f55\u4fee\u6539\uff0c\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u5b57\u6bcd\uff0c\u8bbe\u4e00\u4e2a\u5b57\u6bcd\u51fa\u73b0\u7684\u6b21\u6570\u662f $k$ \u6b21\u3002\u5982\u679c\u5b83\u662f\u4e2a\u5947\u6570\uff0c\u7531\u4e8e\u524d\u9762\u5df2\u7ecf\u5224\u8fc7\u4e86\uff0c\u6240\u4ee5\u4e00\u5b9a\u5408\u6cd5\uff0c\u6240\u4ee5\u53ef\u4ee5\u628a $1$ \u4e2a\u5b57\u6bcd\u653e\u5728\u6700\u4e2d\u95f4\uff0c\u5269\u4e0b\u7684 $\\frac{k}{2}$ \u4e2a\u5b57\u6bcd\u653e\u5728\u4e24\u8fb9\u3002\u662f\u4e2a\u5076\u6570\u5219\u76f4\u63a5\u653e\u5728\u4e24\u8fb9\u5373\u53ef\u3002\n\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint const N=1e5+10;int k[27];\nstruct Segment_Tree{\n    #define ls (x<<1)\n    #define rs (x<<1|1)\n    #define mid ((l+r)>>1)\n    int c[N<<2],lazy[N<<2];\n    inline void pushdown(int x,int l,int r){\n        if (!lazy[x]) return;\n        c[ls]=(lazy[x]-1)*(mid-l+1);\n        c[rs]=(lazy[x]-1)*(r-(mid+1)+1);\n        lazy[ls]=lazy[x];\n        lazy[rs]=lazy[x];\n        c[x]=c[ls]+c[rs];\n        lazy[x]=0;\n    }\n    inline void update(int x,int l,int r,int ll,int rr,int v){\n        if (ll<=l && r<=rr){c[x]=v*(r-l+1);lazy[x]=v+1;return;}\n        pushdown(x,l,r);\n        if (ll<=mid) update(ls,l,mid,ll,rr,v);\n        if (mid<rr) update(rs,mid+1,r,ll,rr,v);\n        c[x]=c[ls]+c[rs];\n    }\n    inline int query(int x,int l,int r,int ll,int rr){\n        if (ll<=l && r<=rr) return c[x];\n        int res=0;\n        pushdown(x,l,r);\n        if (ll<=mid) res+=query(ls,l,mid,ll,rr);\n        if (mid<rr) res+=query(rs,mid+1,r,ll,rr);\n        c[x]=c[ls]+c[rs];\n        return res;\n    }\n}T[27];//\u5e38\u89c4\u64cd\u4f5c\nint main(){\n    freopen(\"input.txt\",\"r\",stdin);\n    freopen(\"output.txt\",\"w\",stdout);\n    ios::sync_with_stdio(false);\n    cin.tie(0),cout.tie(0);\n    int n,m;cin>>n>>m;\n    string s;cin>>s;s=\" \"+s;\n    for (int i=1;i<=n;++i) T[s[i]-'a'].update(1,1,n,i,i,1);\n    while (m--){\n        int l,r,flag=0;cin>>l>>r;\n        for (int i=0;i<26;++i){\n            k[i]=T[i].query(1,1,n,l,r);\n            if (k[i]&1) ++flag;\n        }\n        if (flag>1 || (!((r-l+1)&1) && flag)) continue;\n        for (int i=0;i<26;++i) T[i].update(1,1,n,l,r,0);\n        int la=l;\n        for (int i=0;i<26;++i){\n            if (!k[i]) continue;\n            if (k[i]&1){\n                T[i].update(1,1,n,(l+r)/2,(l+r)/2,1);\n            }\n            if (k[i]>1){\n                T[i].update(1,1,n,la,la+(k[i]/2)-1,1),\n                T[i].update(1,1,n,r-(la-l)-(k[i]/2)+1,r-(la-l),1),\n                la+=(k[i]/2);            \n            }\n        }\n    }\n    for (int i=1;i<=n;++i){\n        int tag=0;\n        for (int j=0;j<26;++j) if (T[j].query(1,1,n,i,i)){tag=j;break;}\n        cout<<char('a'+tag);\n    }\n    cout<<'\\n';\n    return 0;\n} \n\n```\n",
        "postTime": 1664422901,
        "uid": 253608,
        "name": "Tx_Lcy",
        "ccfLevel": 7,
        "title": "CF240F TorCoder"
    },
    {
        "content": "[\u535a\u5ba2\u98df\u7528\u6548\u679c\u66f4\u4f73](https://www.cnblogs.com/lxy-2022/p/CF2600-zuo-ti-ji-lu.html)\n\n#### \u9898\u610f\n\n\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5c0f\u5199\u5b57\u6bcd\u4e32\uff0c$m$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u5c06\u5b50\u4e32 $[l,r]$ \u91cd\u6392\u4f7f\u5176\u6210\u4e3a\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u56de\u6587\u4e32\uff08\u82e5\u65e0\u6cd5\u91cd\u6392\u6210\u56de\u6587\u4e32\u5219\u8df3\u8fc7\uff09\u3002\u6c42\u6700\u540e\u7684\u5b57\u7b26\u4e32\u3002\n\n#### \u5206\u6790\n\n\u5f00 $26$ \u68f5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6bcf\u79cd\u5b57\u6bcd\u5728\u533a\u95f4\u4e2d\u51fa\u73b0\u6b21\u6570\u3002\u9996\u5148\u53ef\u4ee5\u53d1\u73b0\u4e00\u6b21\u64cd\u4f5c\u53ef\u4ee5\u5b8c\u6210\u5f53\u4e14\u4ec5\u5f53\u8be5\u533a\u95f4\u5185\u6bcf\u79cd\u5b57\u6bcd\u51fa\u73b0\u6b21\u6570\u6700\u591a\u6709\u4e00\u4e2a\u662f\u5947\u6570\u3002\u91cd\u6392\u6210\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u56de\u6587\u4e32\u5c31\u53ef\u4ee5\u4ece\u5c0f\u5230\u5927\u653e\u6bcf\u79cd\u5b57\u6bcd\uff0c\u524d\u9762\u63a5\u7740\u653e\u4e00\u534a\uff0c\u540e\u9762\u63a5\u7740\u653e\u4e00\u534a\uff0c\u5982\u679c\u6709\u7684\u5b57\u6bcd\u6709\u5947\u6570\u4e2a\u5c31\u628a\u4e00\u4e2a\u653e\u4e2d\u95f4\u5269\u4e0b\u7684\u548c\u5076\u6570\u4e2a\u7684\u5b57\u6bcd\u4e00\u8d77\u653e\u3002\n\n\u53d1\u73b0\u4fee\u6539\u5176\u5b9e\u5c31\u662f\u5c06\u4e00\u6bb5\u8fde\u7eed\u7684\u4f4d\u7f6e\u653e\u4e0a\u67d0\u540c\u79cd\u5b57\u6bcd\uff0c\u67e5\u8be2\u4e5f\u53ea\u9700\u67e5\u8be2\u8fde\u7eed\u533a\u95f4\u7684\u5b57\u6bcd\u6570\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u6c42\u533a\u95f4\u548c\uff0c\u5e76\u652f\u6301\u533a\u95f4\u8d4b\u503c\uff0c\u7136\u540e\u6309\u4e0a\u9762\u7684\u7b56\u7565\u6a21\u62df\u5373\u53ef\u3002\n\n#### \u6838\u5fc3\u4ee3\u7801\n\n```cpp\nscanf(\"%d%d%s\",&n,&m,s+1);int i,j;for(i=1;i<=26;i++) st[i].build(1,1,n);\nfor(i=1;i<=n;i++) st[s[i]-'a'+1].upd(1,1,n,i,i,1);\nwhile(m--){\n    int l,r;scanf(\"%d%d\",&l,&r);int c=0,cnt=0,p;\n    for(i=1;i<=26;i++){\n        int tmp=st[i].que(1,1,n,l,r);\n        c+=(tmp&1);cnt+=tmp;if(tmp&1) p=i;\n    }if(c>1) continue;int nl=l,nr=r;\n    for(i=1;i<=26;i++){\n        int tmp=st[i].que(1,1,n,l,r);if(!tmp) continue;\n        st[i].upd(1,1,n,l,r,0);\n        if(tmp&1) st[i].upd(1,1,n,(l+r)>>1,(l+r)>>1,1),tmp--;\n        st[i].upd(1,1,n,nl,nl+(tmp>>1)-1,1);nl+=(tmp>>1);\n        st[i].upd(1,1,n,nr-(tmp>>1)+1,nr,1);nr-=(tmp>>1);\n    }\n}for(i=1;i<=n;i++){\n    for(j=1;j<=26;j++){\n        if(st[j].que(1,1,n,i,i)>0){\n            ans[i]=j+'a'-1;break;\n        }\n    }\n}printf(\"%s\\n\",ans+1);\n```\n\n[record](https://codeforc.es/problemset/submission/240/171678284)\n\n",
        "postTime": 1662878576,
        "uid": 225991,
        "name": "_lxy_",
        "ccfLevel": 6,
        "title": "CF240F TorCoder \u9898\u89e3"
    },
    {
        "content": "$\\large\\color{white}\\text{\u5206\u5757\u5929\u4e0b\u7b2c\u4e00\uff01\uff01\uff0111}$\n\n\u6570\u636e\u8303\u56f4 $10^5$ \uff0c\u663e\u7136\u53ef\u4ee5\u4f7f\u7528\u5206\u5757\u3002\n\n\u663e\u7136\u6784\u6210\u56de\u6587\u4e32\u7684\u5b57\u7b26\u4e32\u5fc5\u987b\u8981\u6ee1\u8db3**\u6bcf\u79cd\u5b57\u7b26\u90fd\u8981\u51fa\u73b0\u5076\u6570\u6b21\u6216\u8005\u53ea\u6709\u4e00\u79cd\u5b57\u7b26\u51fa\u73b0\u5947\u6570\u6b21**\u3002\n\n\u5982\u679c\u80fd\u6784\u6210\u56de\u6587\u4e32\uff0c\u6700\u4f18\u65b9\u6848\u5c31\u662f**\u4ece\u5916\u5230\u5185\u4ee5 $a\\to z$** \u7684\u987a\u5e8f\u63d2\u5165\uff0c\u5982\u679c\u6709\u51fa\u73b0\u6b21\u6570\u4e3a\u5947\u6570\u7684\u5b57\u7b26\uff0c\u90a3\u4e48\u628a\u5b83\u586b\u5728\u4e2d\u95f4\u3002\n\n\u6240\u4ee5\u5b9e\u9645\u4e0a\u6211\u4eec\u53ea\u8981\u7ef4\u62a4\u4e24\u4e2a\u64cd\u4f5c\uff1a\n\n- \u533a\u95f4\u8d4b\u503c\n- \u67e5\u8be2\u533a\u95f4\u5185\u6bcf\u79cd\u5b57\u6bcd\u51fa\u73b0\u6b21\u6570\n\n\u4e8e\u662f\u4f7f\u7528\u5206\u5757\uff0c\u5f00\u4e00\u4e2a\u6876\u7ef4\u62a4\u4e00\u4e2a\u5757\u5185\u5b57\u6bcd\u51fa\u73b0\u6b21\u6570\uff0c\u533a\u95f4\u8d4b\u503c\u5c31\u628a $\\mathtt{tag}$ \u6253\u4e0a\u53bb\uff0c\u8fb9\u89d2\u66b4\u529b\u4fee\u6539\u3002\n\n\u67e5\u8be2\u7684\u65f6\u5019\u628a $\\mathtt{tag}$ \u7ed9 $\\mathtt{pushdown}$ \u4e0b\u4f20\u5373\u53ef\u3002\n\n\u5e38\u6570\u8f83\u5c0f\uff0c\u6bd4\u7ebf\u6bb5\u6811\u4e0d\u77e5\u9053\u5c0f\u5230\u90a3\u91cc\u53bb\u4e86\u3002\n\n```cpp\n#include <bits/stdc++.h>\nnamespace mystd {\n    inline int read() {\n        int w = 1, q = 0;\n        char ch = ' ';\n        while (ch != '-' && (ch < '0' || ch > '9')) ch = getchar();\n        if (ch == '-') w = -1, ch = getchar();\n        while (ch >= '0' && ch <= '9') q = q * 10 + ch - '0', ch = getchar();\n        return w * q;\n    }\n    inline void write(int ls) {\n        if (ls < 0) {\n            ls = ~(ls - 1);\n            putchar('-');\n        }\n        if (ls > 9) write(ls / 10);\n        putchar(ls % 10 + '0');\n    }\n}\nusing namespace std;\nusing namespace mystd;\n\nconst int maxb = 440;\nconst int maxn = 1e5 + 100;\n\nchar ch[maxn];\nint l[maxb], r[maxb], pos[maxn], tag[maxb], c[maxb][26];\nint n, m, b, s[maxn], g[26];\n\nvoid pushdown(int ls) {// \u4e0b\u4f20\u6807\u8bb0\n    if (tag[ls] < 0) return;\n    for (int i = l[ls]; i <= r[ls]; i++) s[i] = tag[ls];\n    for (int i = 0; i < 26; i++) c[ls][i] = 0;\n    c[ls][tag[ls]] = r[ls] - l[ls] + 1, tag[ls] = -1;\n}\n\nvoid update(int ls, int rs, int k) {// \u66f4\u65b0\n    if (ls > rs) return;\n    int p = pos[ls], q = pos[rs];\n    if (p == q) {\n        pushdown(p);\n        for (int i = ls; i <= rs; i++) c[p][s[i]]--, c[p][k]++, s[i] = k;\n    } else {\n        pushdown(p);\n        pushdown(q);\n        for (int i = ls; i <= r[p]; i++) c[p][s[i]]--, c[p][k]++, s[i] = k;\n        for (int i = l[q]; i <= rs; i++) c[q][s[i]]--, c[q][k]++, s[i] = k;\n        for (int i = p + 1; i <= q - 1; i++) tag[i] = k; \n    }\n}\n\nvoid work(int ls, int rs) { \n    if (ls > rs) return;\n    int p = pos[ls], q = pos[rs];\n    if (p == q) {\n        pushdown(p);\n        for (int i = ls; i <= rs; i++) g[s[i]]++;\n    } else {\n        pushdown(p);\n        pushdown(q);\n        for (int i = ls; i <= r[p]; i++) g[s[i]]++;\n        for (int i = l[q]; i <= rs; i++) g[s[i]]++;\n        for (int i = p + 1; i < q; i++) {\n            if (tag[i] >= 0) g[tag[i]] += r[i] - l[i] + 1;\n            else for (int j = 0; j < 26; j++) g[j] += c[i][j];\n        }\n    }\n    \n}\n\nint main() {\n    freopen(\"input.txt\", \"r\", stdin); \n    freopen(\"output.txt\", \"w\", stdout);\n    n = read();\n    m = read();\n    scanf(\"%s\", ch + 1);\n    for (int i = 1; i <= n; i++) s[i] = ch[i] - 'a';\n    b = sqrt(n);\n    int cnt = 0;\n    for (int i = 1; i <= n; i++) pos[i] = (i - 1) / b + 1, c[pos[i]][s[i]]++;\n    for (int i = 1; i <= n; i += b) l[++cnt] = i, r[cnt] = min(i + b - 1, n), tag[cnt] = -1;\n    for (int i = 1, p, q, fl = 0, id = -1; i <= m; i++, fl = 0, id = -1) {\n        p = read();\n        q = read();\n        work(p, q);\n        for (int i = 0; i < 26; i++) if (g[i] & 1) id = i, fl++;\n        if (fl > 1) {\n            memset(g, 0, sizeof(g));\n            continue;\n        }\n        int t1 = p, t2 = q;\n        for (int i = 0; i < 26; i++) {\n            update(t1, t1 + g[i] / 2 - 1, i), t1 += g[i] / 2;\n            update(t2 - g[i] / 2 + 1, t2, i), t2 -= g[i] / 2;\n            g[i] = 0;\n        }\n        if (id >= 0) update(t1, t1, id);\n    }\n    for (int i = 1; i <= b; i++) pushdown(i);\n    for (int i = 1; i <= n; i++) putchar(s[i] + 'a');\n    return 0;\n}\n```",
        "postTime": 1629698031,
        "uid": 306573,
        "name": "Ender32k",
        "ccfLevel": 0,
        "title": "CF240F TorCoder \u9898\u89e3"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u79cd\u5206\u5757\u505a\u6cd5\u3002\n\n\u9996\u5148\uff0c\u5982\u679c\u533a\u95f4\u5185\u6bcf\u79cd\u5b57\u7b26\u51fa\u73b0\u6b21\u6570\u4e2d\u5947\u6570\u5927\u4e8e\u4e00\u4e2a\uff0c\u663e\u7136\u4e0d\u80fd\u6784\u6210\u56de\u6587\u4e32\u3002\n\n\u5426\u5219\u6700\u4f18\u65b9\u6cd5\u5c31\u662f\u6309 $a\\sim z$ \u7684\u987a\u5e8f\uff0c\u4ece\u5916\u5f80\u5185\u4f9d\u6b21\u586b\u6570\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u5b57\u5178\u5e8f\u6700\u5c0f\u3002\u5982\u679c\u6709\u4e00\u79cd\u5b57\u7b26\u51fa\u73b0\u6b21\u6570\u4e3a\u5947\u6570\uff0c\u5c31\u628a\u5b83\u586b\u5728\u4e2d\u95f4\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u73b0\u5728\u8981\u652f\u6301\u4e24\u4e2a\u64cd\u4f5c\uff1a\u533a\u95f4\u8d4b\u503c\u548c\u67e5\u8be2\u533a\u95f4\u5185\u6bcf\u79cd\u5b57\u6bcd\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\u3002\n\n\u5bf9\u4e8e\u5206\u5757\uff0c\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u5757\u5185\u6bcf\u79cd\u5b57\u6bcd\u51fa\u73b0\u6b21\u6570\uff0c\u533a\u95f4\u8d4b\u503c\u6574\u5757\u5c31\u6253\u6807\u8bb0\uff0c\u6563\u5757\u66b4\u529b\uff0c\u4fee\u6539\u67e5\u8be2\u65f6\u518d\u4e0b\u4f20\u5c31\u597d\u4e86\u3002\u4e00\u5b9a\u8981\u6ce8\u610f\u7ec6\u8282\uff0c\u6211\u56e0\u4e3a\u4e00\u4e2a\u5c0f\u7ec6\u8282\u8c03\u4e86\u534a\u4e2a\u5c0f\u65f6\u3002\u3002\u3002\n\n\u4ee3\u7801\uff08\u6700\u4f18\u89e3\uff0c\u8dd1\u5f97\u98de\u5feb\uff09\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nchar s[100010];\nint belong[100010];\nint a[100010];\nint st[400],ed[400],ct[400][26];\nint n,m,block;\nint tag[400];\nint gs[26];\nvoid build() {\n\tblock = sqrt(n);\n\tint cnt = 0;\n\tfor (int i = 1;i <= n;i ++ ) {\n\t\tbelong[i] = (i-1) / block + 1;\n\t\tct[belong[i]][a[i]] ++;\n\t}\n\tfor (int i = 1;i <= n;i += block) {\n\t\tst[++cnt] = i,ed[cnt] = min(i+block-1,n), tag[cnt] = -1;\n\t}\n}\nvoid pushdown(int x) {//\u4fee\u6539\u3001\u67e5\u8be2\u65f6\u4e0b\u4f20 \n\tif (tag[x] < 0) return;\n\tfor (int i = st[x];i <= ed[x];i ++ ) {\n\t\ta[i] = tag[x];\n\t}\n\tfor (int i = 0;i < 26;i ++ ) ct[x][i] = 0;\n\tct[x][tag[x]] = ed[x]-st[x]+1;\n\ttag[x] = -1;\n}\nvoid modify(int x,int y,int k) {\n\tif (x > y) return; \n\tint l = belong[x],r = belong[y];\n\tif (l == r) {\n\t\tpushdown(l);\n\t\tfor (int i = x;i <= y;i ++ ) {\n\t\t\tct[l][a[i]] --;\n\t\t\tct[l][k] ++;\n\t\t\ta[i] = k;\n\t\t}\n\t\treturn;\n\t}\n\tmodify(x,ed[l],k), modify(st[r],y,k);\n\tfor (int i = l+1;i < r;i ++ ) tag[i] = k;//\u6574\u5757\u6253tag \n}\nvoid _sort(int x,int y) {//\u7edf\u8ba1\u4e2a\u6570 \n\tif (x > y) return; \n\tint l = belong[x],r = belong[y];\n\tif (l == r) {\n\t\tpushdown(l);\n\t\tfor (int i = x;i <= y;i ++ ) {\n\t\t\tgs[a[i]] ++;\n\t\t}\n\t\treturn;\n\t}\n\t_sort(x,ed[l]), _sort(st[r],y);\n\tfor (int i = l+1;i < r;i ++ ) {\n\t\tif (tag[i] >= 0) gs[tag[i]] += ed[i]-st[i]+1;\n\t\telse\n\t\t\tfor (int j = 0;j < 26;j ++ ) gs[j] += ct[i][j];\n\t}\n}\nint read() {\n\tint s = 0,f = 1;char ch = getchar();\n\twhile (!isdigit(ch)) f = ch == '-' ? -1 : 1, ch = getchar();\n\twhile (isdigit(ch)) s = s * 10 + ch - '0', ch = getchar();\n\treturn s*f;\n}\nint main() {\n\tfreopen(\"input.txt\",\"r\",stdin);//\u522b\u5fd8\u4e86\u6587\u4ef6\u8f93\u5165\u8f93\u51fa \n\tfreopen(\"output.txt\",\"w\",stdout);\n\tn = read(),m = read();\n\tscanf(\"%s\",s+1);\n\tfor (int i = 1;i <= n;i ++ ) a[i] = s[i] - 'a';\n\tbuild();\n\twhile (m -- ) {\n\t\tint l = read(),r = read();\n\t\t_sort(l,r);\n\t\tint fl = 0,id = -1;\n\t\tfor (int i = 0;i < 26;i ++ ) {\n\t\t\tif (gs[i] % 2) id = i, fl ++;//\u627e\u51fa\u73b0\u6b21\u6570\u4e3a\u5947\u6570 \n\t\t}\n\t\tif (fl > 1) {\n\t\t\tmemset(gs,0,sizeof gs);//\u6ce8\u610f\u8fd9\u91cc\u4e5f\u8981\u6e050 \n\t\t\tcontinue;\n\t\t}\n\t\tint t1 = l,t2 = r;\n\t\tfor (int i = 0;i < 26;i ++ ) {\n\t\t\tmodify(t1,t1+gs[i]/2-1,i), t1 += gs[i]/2;\n\t\t\tmodify(t2-gs[i]/2+1,t2,i), t2 -= gs[i]/2;\n\t\t\tgs[i] = 0;//\u6e050 \n\t\t}\n\t\tif (id >= 0) modify(t1,t1,id);//\u586b\u4e2d\u95f4\u7684\u6570 \n\t}\n\tfor (int i = 1;i <= block;i ++ ) pushdown(i);//\u6700\u540e\u8fd8\u8981\u5168\u90e8pushdown\u4e00\u6b21\uff01 \n\tfor (int i = 1;i <= n;i ++ ) putchar(a[i] + 'a');\n\treturn 0;\n}\n```\n",
        "postTime": 1629341819,
        "uid": 94777,
        "name": "Jsxts_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF240F"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u7531 $\\texttt{a}$ \u81f3 $\\texttt{z}$ \u7ec4\u6210\u7684\u5b57\u7b26\u4e32\uff0c\u652f\u6301\uff1a\n+ \u91cd\u6784\u533a\u95f4 $\\left[l,r\\right]$ \u4f7f\u5176\u6784\u6210\u4e00\u4e2a\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u56de\u6587\u4e32\u3002\n+ \u6700\u540e\u6574\u4f53\u67e5\u8be2\u3002  \n\n## \u9898\u89e3  \n\n\u8ba9\u91cd\u6784\u7684\u56de\u6587\u4e32\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u5c31\u8981\u8ba9\u5b57\u5178\u5e8f\u5c0f\u7684\u6392\u5230\u66f4\u63a5\u8fd1 $l,r$ \u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5\u5b57\u5178\u5e8f\u5c0f\u7684\u5b57\u6bcd\u4f18\u5148\u8ba1\u7b97\u3002  \n\n\u5bf9\u4e8e\u6bcf\u4e2a\u5b57\u6bcd\uff0c\u5f00\u68f5\u7ebf\u6bb5\u6811\uff0c\u7ef4\u62a4\u8be5\u5b57\u6bcd\u5728\u533a\u95f4\u5185\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u6bcf\u6b21\u91cd\u6784\u64cd\u4f5c\u5c31\u63a8\u5e73\uff0c\u6309\u5b57\u5178\u5e8f\u4ece\u5c0f\u5230\u5927\u586b\u6ee1\u6574\u4e2a\u533a\u95f4\uff0c\u8fd9\u4e2a\u5f88\u5bb9\u6613\u5b9e\u73b0\u3002  \n\n\u6784\u9020\u65f6\u533a\u95f4\u957f\u5ea6\u4f1a\u5f71\u54cd\u5224\u65ad\u65e0\u89e3\u3002  \n\n+ \u5f53\u533a\u95f4\u957f\u5ea6\u4e3a\u5947\u6570\u65f6\uff0c\u81f3\u5c11\u6709\u4e00\u7c7b\u5b57\u6bcd\u51fa\u73b0\u6b21\u6570\u4e3a\u5947\u6570\uff0c\u628a\u8fd9\u7c7b\u5b57\u6bcd\u653e\u4e00\u4e2a\u5230\u56de\u6587\u4e2d\u5fc3\u3002\u5982\u679c\u51fa\u73b0\u6b21\u6570\u4e3a\u5947\u6570\u7684\u5b57\u6bcd\u6570\u5927\u4e8e $1$\uff0c\u663e\u7136\u56de\u6587\u4e32\u6784\u9020\u4e0d\u51fa\u6765\uff0c\u65e0\u89e3\u3002  \n\n+ \u5f53\u533a\u95f4\u957f\u5ea6\u4e3a\u5076\u6570\u65f6\uff0c\u82e5\u5b58\u5728\u67d0\u7c7b\u5b57\u6bcd\u51fa\u73b0\u4e86\u5947\u6570\uff0c\u663e\u7136\u5c31\u6784\u9020\u4e0d\u51fa\uff0c\u4e14\u6bcf\u6b21\u4f1a\u51fa\u73b0\u81f3\u5c11 $2$ \u7c7b\uff0c\u6240\u4ee5\u53ef\u4ee5\u548c\u7b2c\u4e00\u7c7b\u4e00\u8d77\u5224\u4e86\u3002  \n\n\u6309\u5b57\u5178\u5e8f\u4ece $\\texttt{a}$ \u5230 $\\texttt{z}$ \u4f9d\u6b21\u63a8\u5e73\u91cd\u6784\u5373\u53ef\u6ee1\u8db3\u6784\u6210\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u5b57\u7b26\u4e32\u3002  \n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log n)$\uff0c\u518d\u4e58\u4e2a\u5b57\u7b26\u96c6\u7684\u5e38\u6570 $O(\\Sigma)$\uff0c$\\Sigma=26$\u3002  \n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 10, Sigma = 26;\nint n, m;\nchar s[N];\nint a[N];\nstruct SegmentTree {\n\tint tag, sum, l, r;\n} t[Sigma][N << 2];\n#define ls x << 1\n#define rs x << 1 | 1\nvoid pushup(int num, int x) { t[num][x].sum = t[num][ls].sum + t[num][rs].sum; }\nvoid pushdown(int num, int x) {\n\tif(~t[num][x].tag) {\n\t\tt[num][ls].tag = t[num][rs].tag = t[num][x].tag;\n\t\tt[num][ls].sum = (t[num][ls].r - t[num][ls].l + 1) * t[num][ls].tag;\n\t\tt[num][rs].sum = (t[num][rs].r - t[num][rs].l + 1) * t[num][rs].tag;\n\t\tt[num][x].tag = -1;\n\t}\n}\nvoid build(int num, int x, int l, int r) {\n\tt[num][x].l = l, t[num][x].r = r, t[num][x].tag = -1;\n\tif(l == r) {\n\t\tt[num][x].sum = a[l] == num;\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tbuild(num, ls, l, mid);\n\tbuild(num, rs, mid + 1, r);\n\tpushup(num, x);\n}\nvoid update(int num, int x, int l, int r, int val) {\n\tif(l <= t[num][x].l && t[num][x].r <= r) {\n\t\tt[num][x].tag = val;\n\t\tt[num][x].sum = (t[num][x].r - t[num][x].l + 1) * val;\n\t\treturn;\n\t}\n\tpushdown(num, x);\n\tif(l <= t[num][ls].r) update(num, ls, l, r, val);\n\tif(t[num][rs].l <= r) update(num, rs, l, r, val);\n\tpushup(num, x);\n}\nint query(int num, int x, int l, int r) {\n\tif(l <= t[num][x].l && t[num][x].r <= r)\n\t\treturn t[num][x].sum;\n\tpushdown(num, x);\n\tint res = 0;\n\tif(l <= t[num][ls].r) res += query(num, ls, l, r);\n\tif(t[num][rs].l <= r) res += query(num, rs, l, r);\n\treturn res;\n}\nint cnt[Sigma], num, tot, curl, curr;\nbool check;\nint main() {\n\tfreopen(\"input.txt\", \"r\", stdin);\n\tfreopen(\"output.txt\", \"w\", stdout);\n\tscanf(\"%d%d%s\", &n, &m, s + 1);\n\tfor(int i = 1; i <= n; i++)\n\t\ta[i] = s[i] - 'a';\n\tfor(int i = 0; i < Sigma; i++)\n\t\tbuild(i, 1, 1, n);\n\twhile(m--) {\n\t\tint l, r;\n\t\ttot = num = 0;\n\t\tscanf(\"%d%d\", &l, &r);\n\t\tcurl = l, curr = r;\n\t\tcheck = false;\n\t\tfor(int i = 0; i < Sigma; i++) {\n\t\t\tcnt[i] = query(i, 1, l, r);\n\t\t\tif(cnt[i] & 1)\n\t\t\t\ttot++, num = i;\n\t\t\tif(tot > 1) {\n\t\t\t\tcheck = true;\n\t\t\t\tbreak;\n\t\t\t}\t\n\t\t}\n\t\tif(check) continue;\n\t\tfor(int i = 0; i < Sigma; i++)\n\t\t\tupdate(i, 1, l, r, 0);\n\t\tif((r - l + 1) & 1)\n\t\t\tcnt[num]--;\n\t\tfor(int i = 0; i < Sigma; i++)\n\t\t\tif(cnt[i]) {\n\t\t\t\tupdate(i, 1, curl, curl + (cnt[i] >> 1) - 1, 1);\n\t\t\t\tupdate(i, 1, curr - (cnt[i] >> 1) + 1, curr, 1);\n\t\t\t\tcurl += (cnt[i] >> 1), curr -= (cnt[i] >> 1);\n\t\t\t}\n\t\tif((r - l + 1) & 1)\n\t\t\tupdate(num, 1, (l + r) >> 1, (l + r) >> 1, 1);\n\t}\n\tfor(int i = 1; i <= n; i++)\n\t\tfor(int j = 0; j < Sigma; j++)\n\t\t\tif(query(j, 1, i, i)) {\n\t\t\t\tprintf(\"%c\", j + 'a');\n\t\t\t\tbreak;\n\t\t\t}\n\treturn 0;\n}\n```",
        "postTime": 1619784239,
        "uid": 365107,
        "name": "Terac",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF240F TorCoder"
    }
]