[
    {
        "content": "\u7ebf\u6bb5\u6811\u6253\u6807\u8bb0\n\n\u9996\u5148\u6211\u4eec\u5bf9\u6574\u4e2a\u6570\u7ec4\u505a\u4e00\u6b21\u5dee\u5206\uff0c\u8fd9\u6837\u53ef\u4ee5\u66f4\u597d\u7684\u53cd\u5e94\u4e24\u4e2a\u6570\u4e4b\u95f4\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u4ee5\u53ca**\u53ef\u4ee5\u628a\u533a\u95f4\u52a0\u53d8\u6210\u5355\u70b9\u52a0**\n\n**\u8fd9\u6837\u5c31\u4e0d\u7528 pushdown \u4f20 lazytag \u4e86**\n\n\u8f6c\u6362\u4e3a\u5dee\u5206\u540e\u5c31\u53ef\u4ee5\u628a\u95ee\u9898\u8f6c\u6362\u4e00\u4e0b\uff1a\n\n\u6c42 $[l,r]$ \u4e4b\u95f4\u6700\u957f\u7684\u4e00\u4e2a\u8fde\u7eed\u6bb5\u4f7f\u5f97\uff1a\u7531\u4e00\u4e2a\u8fde\u7eed\u7684\u8d1f\u6570\u6bb5\u548c\u4e00\u4e2a\u8fde\u7eed\u7684\u6b63\u6570\u6bb5\u62fc\u63a5\u8d77\u6765\n\n\u5148\u8bf4\u660e\u8282\u70b9\u4fe1\u606f\u610f\u601d\uff1a$u$ \u5f53\u524d\u8282\u70b9\uff0c$lson$ \u5de6\u5b50\u8282\u70b9\uff0c$rson$ \u53f3\u5b50\u8282\u70b9\n\n$ans_u$ \u5f53\u524d\u8282\u70b9\u7684\u7b54\u6848\uff0c\n\n$up_{u}$ \u5f53\u524d\u8282\u70b9\u533a\u95f4\u4ece\u6700\u5de6\u5f00\u59cb\u5f80\u53f3\u7684\u7b54\u6848\u7684\u957f\u5ea6\n\n$down_{u}$ \u5f53\u524d\u8282\u70b9\u533a\u95f4\u4ece\u6700\u53f3\u5f00\u59cb\u5f80\u5de6\u7684\u7b54\u6848\u7684\u957f\u5ea6\n\n\u8f6c\u79fb\uff1a\n\n\u663e\u7136\uff0c$ans_u=\\max(ans_{lson},ans_{rson})$\n\n\u5982\u679c $lson$ \u548c $rson$ \u533a\u95f4\u7684\u4ea4\u70b9\u7684\u4e24\u4e2a\u4f4d\u7f6e\u4e2d\u6709 1 \u4e2a\u662f 0\uff0c\u6216\u8005 $lson$ \u7684\u4ea4\u70b9\u662f\u8d1f\u6570\u800c $rson$ \u7684\u4ea4\u70b9\u662f\u6b63\u6570\n\n\u90a3\u4e48\u8bf4\u660e $lson$ \u548c $rson$ \u4e0d\u53ef\u80fd\u628a\u4e24\u4e2a\u533a\u95f4\u5408\u5e76\u62fc\u6210\u4e00\u4e2a\u65b0\u7b54\u6848\n\n\u6240\u4ee5\uff0c$up_u=up_{lson},down_u=down_{rson}$\n\n\u5982\u679c\u53ef\u4ee5\u5408\u5e76\uff1a\n\n\u90a3\u4e48\u53ef\u4ee5\u66f4\u65b0\u4e00\u4e0b\u7b54\u6848\uff1a $ans_u=\\max(ans_{lson},ans_{rson},down_{lson}+up_{rson})$\n\n\u5982\u679c $up_{lson}$ \u7684\u957f\u5ea6\u6070\u597d\u7b49\u4e8e $lson$ \u7684\u533a\u95f4\u957f\u5ea6\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u628a $up_{lson}$ \u548c $up_{rson}$ \u5408\u5e76\u5728\u4e00\u8d77\u53d8\u6210 $up_u$\n\n\u5426\u5219 $up_u=up_{lson}$\n\n$down_u$ \u7684\u66f4\u65b0\u540c\u7406\n\n```cpp\n// This code writed by chtholly_micromaker(MicroMaker)\n#include <bits/stdc++.h>\n#define reg register\n#define int long long\nusing namespace std;\nconst int MaxN=300050;\nstruct Node\n{\n\tint Ans;\n\tint l,r;\n\tint uplen,downlen;\n}tr[MaxN<<2];\ntemplate <class t> inline void read(t &s)\n{\n\ts=0;\n\treg int f=1;\n\treg char c=getchar();\n\twhile(!isdigit(c))\n\t{\n\t\tif(c=='-')\n\t\t\tf=-1;\n\t\tc=getchar();\n\t}\n\twhile(isdigit(c))\n\t\ts=(s<<3)+(s<<1)+(c^48),c=getchar();\n\ts*=f;\n\treturn;\n}\n#define lson (u<<1)\n#define rson (u<<1|1)\nint a[MaxN],inp[MaxN];\nint n;\ninline int getsign(int x)\n{\n\tif(!x)\n\t\treturn 0;\n\treturn x>0?1:-1;\n}\ninline void checkmax(int &x,int y)\n{\n\tif(x<y)\n\t\tx=y;\n\treturn;\n}\ninline void pushup(int u)\n{\n\ttr[u].Ans=max(tr[lson].Ans,tr[rson].Ans);\n\tcheckmax(tr[u].Ans,max(tr[lson].uplen,tr[rson].downlen));\n\tif(!a[tr[lson].r]||!a[tr[rson].l]||\n\t\tgetsign(a[tr[lson].r])<getsign(a[tr[rson].l]))\n\t{\n\t\ttr[u].uplen=tr[lson].uplen,tr[u].downlen=tr[rson].downlen;\n\t}\n\telse\n\t{\n\t\tcheckmax(tr[u].Ans,tr[lson].downlen+tr[rson].uplen);\n\t\tif(tr[lson].uplen==tr[lson].r-tr[lson].l+1)\n\t\t\ttr[u].uplen=tr[lson].uplen+tr[rson].uplen;\n\t\telse\n\t\t\ttr[u].uplen=tr[lson].uplen;\n\t\tif(tr[rson].downlen==tr[rson].r-tr[rson].l+1)\n\t\t\ttr[u].downlen=tr[rson].downlen+tr[lson].downlen;\n\t\telse\n\t\t\ttr[u].downlen=tr[rson].downlen;\n\t}\n\treturn;\n}\ninline void print()\n{\n\tfor(int i=1;i<=20;++i)\n\t{\n\t\tputs(\"======================\");\n\t\tprintf(\"Node [ %lld , %lld ]\\n\",tr[i].l,tr[i].r);\n\t\tprintf(\"Ans %lld\\n\",tr[i].Ans);\n\t\tprintf(\"up  %lld   down  %lld\\n\",tr[i].uplen,tr[i].downlen);\n\t}\n\tputs(\"-=-==\");\n\tfor(int i=1;i<=6;++i)\n\t\tprintf(\"%d \",a[i]);puts(\"\");\n\tputs(\"======\");\n\treturn;\n}\ninline void buildtr(int u,int l,int r)\n{\n\ttr[u].l=l;tr[u].r=r;\n\tif(l==r)\n\t{\n\t\tif(!a[l])\n\t\t\ttr[u].Ans=tr[u].uplen=tr[u].downlen=0;\n\t\telse\n\t\t\ttr[u].uplen=tr[u].downlen=tr[u].Ans=1;\n\t\treturn;\n\t}\n\treg int mid=(l+r)>>1;\n\tbuildtr(lson,l,mid);\n\tbuildtr(rson,mid+1,r);\n\tpushup(u);\n\treturn;\n}\ninline void modify(int u,int l,int r,int p,int k)\n{\n\tif(l==r)\n\t{\n\t\ta[l]+=k;\n\t\tif(!a[l])\n\t\t\ttr[u].Ans=tr[u].uplen=tr[u].downlen=0;\n\t\telse\n\t\t\ttr[u].Ans=tr[u].uplen=tr[u].downlen=1;\n\t\treturn;\n\t}\n\treg int mid=(l+r)>>1;\n\tif(p<=mid)\n\t\tmodify(lson,l,mid,p,k);\n\telse\n\t\tmodify(rson,mid+1,r,p,k);\n\tpushup(u);\n\treturn;\n}\nsigned main(void)\n{\n//\tfreopen(\"J.in\",\"r\",stdin);\n//\tfreopen(\"J.out\",\"w\",stdout);\n\tint m;\n\tcin>>n;\n\tfor(int i=1;i<=n;++i)\n\t\tread(inp[i]);\n\tif(n==1)\n\t{\n\t\tcin>>m;\n\t\tfor(int i=1;i<=m;++i)\n\t\t\tputs(\"1\");\n\t\treturn 0;\n\t}\n\tfor(int i=1;i<n;++i)\n\t\ta[i]=inp[i+1]-inp[i];\n\tbuildtr(1,1,n-1);\n\tcin>>m;\n\treg int l,r,d;\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\t// puts(\"O-oooooooooo AAAAE-A-A-I-A-U- JO-oooooooooooo AAE-O-A-A-U-U-A- E-eee-ee-eee AAAAE-A-E-I-E-A- JO-ooo-oo-oo-oo EEEEO-A-AAA-AAAA\");\n\t\tread(l);read(r);read(d);\n\t\tif(l!=1)\n\t\t\tmodify(1,1,n-1,l-1,d);\n\t\tif(r!=n)\n\t\t\tmodify(1,1,n-1,r,-d);\n//\t\tif(l!=1)\n//\t\t\tprintf(\"modify %d +\\n\",l-1);\n//\t\tif(r!=n)\n//\t\t\tprintf(\"modify %d -\\n\",r);\n\t\tprintf(\"%lld\\n\",tr[1].Ans+1);\n//\t\tprint();\n\t}\n\treturn 0;\n}\n```\n\n\n\n  ",
        "postTime": 1585708564,
        "uid": 51376,
        "name": "MyukiyoMekya",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF739C \u3010Alyona and towers\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u505a\u8fc7\u5c0f\u767d\u901b\u516c\u56ed\u540e\u5e94\u8be5\u8fd8\u662f\u6bd4\u8f83\u663e\u7136\u7684\u5427~~QAQ~~\n\n\u601d\u8def\u633a\u7b80\u5355\u7684 \u91cd\u70b9\u662f\u533a\u95f4\u5408\u5e76\n\n\u6211\u7ef4\u62a4\u4e8610\u4e2a\u91cf\n\n### 1.\u533a\u95f4\u5de6\u7aef\u70b9\u503c $lc$\n### 2.\u533a\u95f4\u53f3\u7aef\u70b9\u503c $rc$\n### 3.\u533a\u95f4\u957f\u5ea6 $len$\n### 4.\u533a\u95f4\u4ece\u5de6\u7aef\u70b9\u5f00\u59cb\u6700\u957f\u7684\u4e0b\u964d\u5e8f\u5217 $l$_$line$\n### 5.\u533a\u95f4\u4ece\u53f3\u7aef\u70b9\u5f00\u59cb\u6700\u957f\u7684\u4e0a\u5347\u5e8f\u5217 $r$_$line$\n### 6.\u4ee5\u5de6\u7aef\u70b9\u7ed3\u675f\u7684\u5148\u5347\u518d\u964d\u5e8f\u5217\n### 7.\u4ee5\u53f3\u7aef\u70b9\u7ed3\u675f\u7684\u5148\u5347\u518d\u964d\u5e8f\u5217\n### 8.\u533a\u95f4\u7684\u6700\u957f\u7684\u7b54\u6848\n### 9. \u7528\u4e8e\u4e0b\u4f20\u7684$tag$~~\u5e38\u89c4\u64cd\u4f5c~~\n### 10.\u533a\u95f4\u5de6\u7aef\u70b9l\n### 11.\u533a\u95f4\u53f3\u7aef\u70b9r\n(\u5176\u4e2d\u56e0\u4e3a9.10.11)\u662f\u4e2a\u4eba\u4e60\u60ef\n\n\u56e0\u4e3a\u5173\u4e8e(1 - 8)\u7684\u7ef4\u62a4\u6bd4\u8f83\u590d\u6742 ~~\u5e76\u4e14\u6211\u5f88\u61d2~~ \u6240\u4ee5\u6211\u5c06\u5176\u653e\u5165\u7ed3\u6784\u4f53 \u5e76\u91cd\u8f7d\u4e86\u8fd0\u7b97\u7b26$+$\n\n\u7136\u540e\u5c31\u662f\u4e2a\u5341\u5206$easy$\u7684\u533a\u95f4\u4fee\u6539\u4e86\n\n\u81f3\u4e8e\u95ee\u4ec0\u4e48\u8981\u7ef4\u62a4\u8fd9\u4e9b\u64cd\u4f5c\u5462\n\n\u8003\u8651\u4e24\u4e2a\u533a\u95f4\u5408\u5e76 \u8fd9\u91cc\u7684\u7aef\u70b9\u4ee3\u6307\u533a\u95f4\u6700\u9ad8\u70b9\n\n\u5206\u7c7b\u8ba8\u8bba\n\n### \u533a\u95f4\u6700\u9ad8\u70b9\u5728\u5de6\u8fb9\n$c.ans = max(a.rmax + b.l_line, a.ans)$\n\n### \u533a\u95f4\u6700\u9ad8\u70b9\u5728\u53f3\u8fb9\n$c.ans = max(b.lmax + a.r_line, b.ans)$\n\n\u8fd9\u5c31\u662f\u8fd98\u4e2a\u4e2a\u53d8\u91cf\u4e4b\u6240\u4ee5\u8981\u7ef4\u62a4\u7684\u539f\u56e0 \u601d\u7ef4\u96be\u5ea6\u4e0d\u5927 \u4ee3\u7801\u96be\u5ea6\uff1a\u8981\u4ed4\u7ec6\u5c31\u884c\u4e86\n\n# code\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int INF = 2139062143;\n\n#define DEBUG(x) std::cerr << #x << ' = ' << x << std::endl\n\ninline ll read() {\n    ll f = 1, x = 0;char ch;\n    do {ch = getchar();if (ch == '-')f = -1;} while (ch > '9' || ch < '0');\n    do {x = x * 10 + ch - '0';ch = getchar();} while (ch >= '0' && ch <= '9');\n    return f * x;\n}\n\nconst int MAX_N = 3E5 + 50;\n\nstruct Node {\n\tll len, lc, rc, lmax, rmax, dat, l_line, r_line; \n};\n\nNode operator + (const Node a, const Node b) {\n\tNode c;\n\tc.len = a.len + b.len;\n\tc.lc = a.lc; c.rc = b.rc;\n\tc.l_line = a.l_line;\n\tif (a.l_line == a.len && a.rc > b.lc)\n\t\tc.l_line = max(c.l_line, a.l_line + b.l_line);\n\tc.r_line = b.r_line;\n\tif (b.r_line == b.len && a.rc < b.lc)\n\t\tc.r_line = max(c.r_line, a.r_line + b.r_line);\n\tc.lmax = a.lmax;\n\tc.rmax = b.rmax;\n\tif (a.lmax == a.len && a.rc > b.lc)\n\t\tc.lmax = max(c.lmax, a.lmax + b.l_line);\n\tif (a.r_line == a.len && a.rc < b.lc)\n\t\tc.lmax = max(c.lmax, a.r_line + b.lmax);\n\t\n\tif (c.rmax == b.len && a.rc < b.lc)\n        c.rmax += a.r_line;\n    if (b.l_line == b.len && a.rc > b.lc)\n        c.rmax = max(c.rmax, b.l_line + a.rmax);\n//\tif (b.lmax == a.len && a.rc < b.lc)\n//\t\tc.rmax = max(c.rmax, b.lmax + a.r_line);\t\n\t\n\tc.dat = max(a.dat, b.dat);\n\tif (a.rc > b.lc)\n\t\tc.dat = max(c.dat, a.rmax + b.l_line);\n\tif (a.rc < b.lc)\n\t\tc.dat = max(c.dat, b.lmax + a.r_line);\n\treturn c;\n}\n\nint n, a[MAX_N], m;\n\nstruct segment_tree {\n\tint l, r;\n\tll tag;\n\tNode x;\n} t[MAX_N << 2];\n\n#define ls(p) (p << 1)\n#define rs(p) (p << 1 | 1)\n\nvoid build (int p, int l, int r) {\n\tt[p].l = l; t[p].r = r;\n\tif (l == r) {\n\t\tt[p].x.lc = t[p].x.rc = a[l];\n\t\tt[p].x.len = t[p].x.lmax = t[p].x.rmax = t[p].x.dat = t[p].x.l_line = t[p].x.r_line = 1;\n\t\treturn ;\n\t}\n\tint mid = (l + r) >> 1;\n\tbuild (ls(p), l, mid);\n\tbuild (rs(p), mid + 1, r);\n\tt[p].x = t[ls(p)].x + t[rs(p)].x;\n}\n\nvoid push_down (int p) {\n\tif (t[p].tag == 0) return;\n\tt[ls(p)].x.lc += t[p].tag;\n\tt[rs(p)].x.rc += t[p].tag;\n\tt[ls(p)].x.rc += t[p].tag;\n\tt[rs(p)].x.lc += t[p].tag;\n\tt[ls(p)].tag += t[p].tag;\n\tt[rs(p)].tag += t[p].tag;\n\tt[p].tag = 0;\n}\n\nvoid change (int p, int l, int r, int v) {\n\tif (l <= t[p].l && t[p].r <= r) {\n\t\tt[p].x.lc += v;\n\t\tt[p].x.rc += v;\n\t\tt[p].tag += v;\n\t\treturn;\n\t}\n\tpush_down(p);\n\tint mid = (t[p].l + t[p].r) >> 1;\n\tif (l <= mid)\n\t\tchange (ls(p), l, r, v);\n\tif (r > mid)\n\t\tchange (rs(p), l, r, v);\n\tt[p].x = t[ls(p)].x + t[rs(p)].x;\n}\n\ninline Node query (int p, int l, int r) {\n\tif (l <= t[p].l && t[p].r <= r)\n\t\treturn t[p].x;\n\tpush_down(p);\n\tint mid = (t[p].l + t[p].r) >> 1;\n\tif (r <= mid)\n\t\treturn query(ls(p), l, r);\n\tif (l > mid)\n\t\treturn query(rs(p), l, r);\n\tNode a = query(ls(p), l, r), b = query(rs(p), l, r);\n\treturn a + b;\n}\n\nint main() {\n\tn = read();\n\tfor (int i = 1; i <= n; i ++ ) a[i] = read();\n\tbuild (1, 1, n);\n\tm = read();\n\tfor (int i = 1; i <= m; i ++ ) {\n\t\tint l = read(), r = read(), d = read();\n\t\tchange (1, l, r, d);\n\t\tprintf(\"%lld\\n\", query(1, 1, n).dat);\n\t}\n\treturn 0;\n}\n\n\n```",
        "postTime": 1570164358,
        "uid": 107377,
        "name": "Cryin",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF739C \u3010Alyona and towers\u3011"
    },
    {
        "content": "\u540c\u5b66\u63a8\u8350\u7684\u4e00\u9053\u9898\uff0c\u611f\u89c9\u662f\u9053\u597d\u9898\uff0c\u633a\u6709\u601d\u7ef4\u96be\u5ea6\u7684\u3002\n\n## \u9898\u610f\u7b80\u8ff0\n\u7ed9\u5b9a $n$ \u4e2a\u6570\u548c $m$ \u4e2a\u64cd\u4f5c\uff0c\u6bcf\u4e2a\u64cd\u4f5c\u662f\u533a\u95f4\u52a0\uff0c\u5e76\u4e14\u67e5\u8be2\u6574\u4e2a\u6570\u7ec4\u4e2d\u6700\u957f\u7684\u8fde\u7eed\u5355\u5cf0\u5b50\u6bb5\uff08\u4e0d\u77e5\u9053\u5565\u610f\u601d\u7684\u770b\u9898\u76ee\u89e3\u91ca\uff09\u3002\n\n## \u505a\u6cd5\n\u672c\u9898**\u7ebf\u6bb5\u6811**\u597d\u9898\u3002\n\n\u5982\u679c\u6ca1\u505a\u8fc7\u5c0f\u767d\u901b\u516c\u56ed\uff08~~\u554a\u5176\u5b9e\u6211\u4e5f\u6ca1\u505a\u8fc7~~\uff09\uff0c\u6211\u4eec\u4e00\u6b65\u4e00\u6b65\u6765\u3002\n\n\u9996\u5148\uff0c\u5355\u5cf0\u5b50\u6bb5\u4e0d\u597d\u76f4\u63a5\u7ef4\u62a4\uff0c\u5148\u8003\u8651\u7ef4\u62a4\u8fde\u7eed\u4e0a\u5347\u5b50\u6bb5\u548c\u8fde\u7eed\u4e0b\u964d\u5b50\u6bb5\u3002\u6211\u4eec\u8003\u8651\uff0c\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u7684\u4e00\u4e2a\u533a\u95f4\uff0c\u5176\u6700\u957f\u5355\u5cf0\u533a\u95f4\u7684\u7ec4\u6210\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/s1sza3mm.png?x-oss-process=image/resize,m_lfit,h_350,w_400)\n\n\u5206\u754c\u7ebf\u4e3a\u5de6\u53f3\u513f\u5b50\u5206\u754c\u70b9\uff08\u5373\u533a\u95f4\u4e2d\u70b9\uff09\u3002\n\n\u6839\u636e\u8fd9\u4e9b\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u5927\u6982\u77e5\u9053\u7ef4\u62a4\u54ea\u4e9b\u503c\u4e86\u3002\n\n1. \u5de6\u53f3\u7aef\u70b9\u7684\u503c\uff08$lval,rval$\uff09\u3002\u8fd9\u662f\u7528\u4e8e\u5de6\u53f3\u533a\u95f4\u62fc\u63a5\u65f6\u5224\u65ad\u8fb9\u754c\u5927\u5c0f\u5173\u7cfb\u7684\u3002\n2. \u4ee5\u5de6\u7aef\u70b9\u5f00\u59cb\u7684\u6700\u957f\u5355\u51cf\u5b50\u6bb5\uff08$iseq$\uff09\u3002\n3. \u4ee5\u53f3\u7aef\u70b9\u7ed3\u675f\u7684\u6700\u957f\u5355\u589e\u5b50\u6bb5\uff08$dseq$\uff09\u3002\n4. \u4ee5\u5de6\u7aef\u70b9\u5f00\u59cb\u7684\u6700\u957f\u5355\u5cf0\u5b50\u6bb5\uff08$lans$\uff09\u3002\n5. \u4ee5\u53f3\u7aef\u70b9\u7ed3\u675f\u7684\u6700\u957f\u5355\u5cf0\u5b50\u6bb5\uff08$rans$\uff09\u3002$2,3,4,5$ \u90fd\u662f\u7528\u6765\u62fc\u63a5\u6574\u4e2a\u533a\u95f4\u7684\u5355\u5cf0\u533a\u95f4\u7684\u3002\u540e\u9762\u4f1a\u8be6\u7ec6\u8bb2\u5230\u3002\n6. \u6574\u4e2a\u533a\u95f4\u7684\u6700\u957f\u5355\u5cf0\u533a\u95f4\uff08$ans$\uff09\u3002\n7. \u4e07\u5e74\u4e0d\u53d8\u7684\u61d2\u6807\u8bb0\uff08$tag$\uff09\u3002\n\n``pushdown``\u3001\u5efa\u6811\u3001\u66f4\u65b0\u8fd9\u79cd\u51fd\u6570\u8ddf\u666e\u901a\u7684\u7ebf\u6bb5\u6811\u6ca1\u5565\u533a\u522b\uff0c\u5c31\u4e0d\u8bb2\u4e86\u3002\u53ea\u8981\u6ce8\u610f\u5efa\u6811\u65f6\u533a\u95f4\u957f\u5ea6\u4e4b\u7c7b\u7684\u521d\u59cb\u503c\u90fd\u662f $1$\uff08**\u4e00\u4e2a\u5143\u7d20\u4e5f\u7b26\u5408\u6761\u4ef6\u7684**\uff09\u3002\n\n\u8bb2\u8bb2\u600e\u4e48\u5408\u5e76\u533a\u95f4\u5427\u3002\n\n1. \u5de6\u53f3\u7aef\u70b9\uff1a\u5206\u522b\u7ee7\u627f\u5de6\u3001\u53f3\u513f\u5b50\u7684\u5de6\u3001\u53f3\u7aef\u70b9\u5c31\u597d\u3002\n2. $dseq$\uff1a$dseq_o=dseq_{ls(o)}$\uff0c\u8fd9\u5f88\u5bb9\u6613\u7406\u89e3\uff0c\u5de6\u7aef\u70b9\u662f\u4e00\u6837\u7684\u3002\u53ea\u662f\uff0c\u5982\u679c $dseq_{ls(o)}$ \u7b49\u4e8e\u533a\u95f4\u957f\u5ea6\uff0c\u5e76\u4e14\u5de6\u513f\u5b50\u53f3\u7aef\u70b9\u5927\u4e8e\u53f3\u513f\u5b50\u5de6\u7aef\u70b9\uff0c\u610f\u5473\u7740\u53ef\u4ee5**\u52a0\u4e0a\u53f3\u513f\u5b50\u7684 $dseq$**\u3002\n3. $iseq$ \u7c7b\u4f3c\u3002\n4. $lans$\uff1a\u9996\u5148\u8fd8\u662f\u7ee7\u627f $lans_{ls(o)}$\u3002\n- \u5de6\u5cf0\u578b\uff0c\u52a0\u4e0a\u53f3\u513f\u5b50\u7684\u5355\u51cf\u533a\u95f4\u3002\n- \u4e2d\u5cf0\u578b\uff0c\u52a0\u4e0a\u53f3\u513f\u5b50\u7684\u5355\u51cf\u533a\u95f4\u3002\n- \u53f3\u5cf0\u578b\uff0c\u52a0\u4e0a\u53f3\u513f\u5b50\u7684\u5355\u5cf0\u533a\u95f4\u3002\u5177\u4f53\u6ee1\u8db3\u4ec0\u4e48\u6761\u4ef6\u81ea\u5df1\u63a8\uff0c\u4e5f\u53ef\u4ee5\u770b\u4ee3\u7801\u3002\n5. $rans$ \u7c7b\u4f3c\u3002\n6. $ans$\uff1a\u4e09\u79cd\u65b9\u5f0f\uff1a\u5de6\u53f3\u513f\u5b50\u5206\u522b\u7684\u7b54\u6848\u3001\u5de6\u513f\u5b50\u5355\u589e+\u53f3\u513f\u5b50\u5355\u51cf\u3001\u5de6\u513f\u5b50\u5355\u5cf0+\u53f3\u513f\u5b50\u5355\u51cf\u3002\n\n## \u4ee3\u7801\n\u6765\u4e2a\u6ca1\u6709\u6307\u9488\u548c\u7ed3\u6784\u4f53\u7684\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\n\nconst int N = 3e5 + 10;\nconst int M = N << 2;\nint n, m;\nll a[N], lval[M], rval[M], dseq[M], iseq[M], lans[M], rans[M], tag[M], ans[M];\n\n#define ls(o) (o << 1)\n#define rs(o) (o << 1 | 1)\n\nvoid pushup(int o, int l, int r){\n\tint mid = (l + r) >> 1, llen = mid - l + 1, rlen = r - mid;\n\tlval[o] = lval[ls(o)], rval[o] = rval[rs(o)];\n\t\n\tiseq[o] = iseq[rs(o)];//\u4ee5\u53f3\u7aef\u70b9\u7ed3\u675f\u7684\u6700\u957f\u4e0a\u5347\u5b50\u6bb5 \n\tif(iseq[rs(o)] == rlen && lval[rs(o)] > rval[ls(o)])\tiseq[o] += iseq[ls(o)];\n\tdseq[o] = dseq[ls(o)];//\u4ee5\u5de6\u7aef\u70b9\u5f00\u59cb\u7684\u6700\u957f\u4e0b\u964d\u5b50\u6bb5\n\tif(dseq[ls(o)] == llen && rval[ls(o)] > lval[rs(o)])\tdseq[o] += dseq[rs(o)];\n\t\n\tlans[o] = lans[ls(o)];\n\tif(iseq[ls(o)] == llen){\n\t\tif(rval[ls(o)] > lval[rs(o)])\tlans[o] += dseq[rs(o)];//\u4e2d\u5cf0 \n\t\telse if(rval[ls(o)] < lval[rs(o)])\tlans[o] += lans[rs(o)];//\u53f3\u5cf0 \n\t}else if(lans[ls(o)] == llen && rval[ls(o)] > lval[rs(o)])\tlans[o] += dseq[rs(o)];//\u5de6\u5cf0 \n\t\n\trans[o] = rans[rs(o)];\n\tif(dseq[rs(o)] == rlen){//\u540c\u7406 \n\t\tif(rval[ls(o)] > lval[rs(o)])\trans[o] += rans[ls(o)];\n\t\telse if(rval[ls(o)] < lval[rs(o)])\trans[o] += iseq[ls(o)];\n\t}else if(rans[rs(o)] == rlen && rval[ls(o)] < lval[rs(o)])\trans[o] += iseq[ls(o)];\n\t\n\tans[o] = max(ans[ls(o)], ans[rs(o)]);//\u66f4\u65b0\u7b54\u6848 \n\tif(rval[ls(o)] > lval[rs(o)])\tans[o] = max(ans[o], max(iseq[ls(o)], rans[ls(o)]) + dseq[rs(o)]);\n\telse if(rval[ls(o)] < lval[rs(o)])\tans[o] = max(ans[o], iseq[ls(o)] + lans[rs(o)]);\n}\n\nvoid pushdown(int o, int l, int r){//\u7b2c\u4e00\u6b21\u611f\u89c9pushdown\u5982\u6b64\u7b80\u77ed \n\tif(!tag[o])\treturn ;\n\tlval[ls(o)] += tag[o], lval[rs(o)] += tag[o];\n\trval[ls(o)] += tag[o], rval[rs(o)] += tag[o];\n\ttag[ls(o)] += tag[o], tag[rs(o)] += tag[o];\n\ttag[o] = 0;\n}\n\nvoid build(int o, int l, int r){\n\tif(l == r){\n\t\tlval[o] = rval[o] = a[l], dseq[o] = iseq[o] = lans[o] = rans[o] = ans[o] = 1;\n\t\treturn ;\n\t}\n\tint mid = (l + r) >> 1;\n\tbuild(ls(o), l, mid), build(rs(o), mid + 1, r);\n\tpushup(o, l, r);\n}\n\nvoid update(int o, int l, int r, int s, int t, ll x){\n\tif(l > t || r < s)\treturn ;\n\tif(l >= s && r <= t){\n\t\tlval[o] += x, rval[o] += x, tag[o] += x;\n\t\treturn ; \n\t}\n\tpushdown(o, l, r);\n\tint mid = (l + r) >> 1;\n\tif(s <= mid)\tupdate(ls(o), l, mid, s, t, x);\n\tif(t > mid)\tupdate(rs(o), mid + 1, r, s, t, x);\n\tpushup(o, l, r);\n}\n\nint main(){\n\tscanf(\"%d\", &n);\n\tfor(int i=1;i<=n;i++)\tscanf(\"%lld\", &a[i]);\n\tbuild(1, 1, n);\n\tscanf(\"%d\", &m);\n\twhile(m--){\n\t\tint l, r; ll d;\n\t\tscanf(\"%d%d%lld\", &l, &r, &d);\n\t\tupdate(1, 1, n, l, r, d);\n\t\tprintf(\"%lld\\n\", ans[1]);//\u7b2c\u4e00\u4e2a\u8282\u70b9\u5c31\u662f\u7b54\u6848\uff0c\u4e0d\u8981\u60f3\u7740\u5982\u4f55\u67e5\u8be2\u4e86\uff0c\u67e5\u4e2a\u51e0\u628a \n\t}\n\treturn 0;\n} \n```\n\n",
        "postTime": 1662043534,
        "uid": 363036,
        "name": "chlchl",
        "ccfLevel": 5,
        "title": "CF739C Alyona and towers"
    },
    {
        "content": "[$\\texttt{Link}$](https://www.luogu.com.cn/problem/CF739C)  \n\n## \u9898\u610f  \n\n\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217\uff0c\u652f\u6301\u4ee5\u4e0b\u64cd\u4f5c\uff1a  \n\n- \u533a\u95f4\u52a0  \n\n- \u6574\u4f53\u67e5\u8be2\u6700\u957f\u7684\u5355\u5cf0\u5e8f\u5217\uff08\u4e00\u90e8\u5206\u4e25\u683c\u5355\u8c03\u9012\u589e\uff0c\u53e6\u4e00\u90e8\u5206\u4e25\u683c\u5355\u8c03\u9012\u51cf\uff09\u3002\n\n## \u601d\u8def\n\u7ebf\u6bb5\u6811\u7684\u7b80\u5355\u9898\uff0c\u505a\u6cd5\u548c\u601d\u8def\u57fa\u672c\u548c [P4513](https://www.luogu.com.cn/problem/P4513) \u5dee\u4e0d\u591a\uff0c\u96be\u70b9\u5728\u4e8e\u600e\u4e48\u4e0a\u4f20\u6574\u5408\u5404\u5b50\u533a\u95f4\u7684\u4fe1\u606f\u3002  \n\n\u4e3a\u65b9\u4fbf\u5904\u7406\u5de6\u53f3\u4e24\u4e2a\u5b50\u533a\u95f4\u7684\u8fb9\u754c\u95ee\u9898\uff0c\u7ef4\u62a4\u533a\u95f4\u5185\u4ee5\u4e0b 9 \u4e2a\u91cf\uff1a  \n\n1. \u5de6\u7aef\u70b9\u6743\u503c $\\text{lv}$\u3002  \n\n2. \u53f3\u7aef\u70b9\u6743\u503c $\\text{rv}$\u3002\n\n3. \u4ece\u5de6\u7aef\u70b9\u5f00\u59cb\u7684\u6700\u957f\u4e0b\u964d\u5e8f\u5217 $\\text{dec}$\u3002  \n\n4. \u4ece\u53f3\u7aef\u70b9\u7ed3\u675f\u7684\u6700\u957f\u4e0a\u5347\u5e8f\u5217 $\\text{inc}$\u3002\n\n5. \u4ece\u5de6\u7aef\u70b9\u5f00\u59cb\u7684\u6700\u957f\u7684\u5355\u5cf0\u5e8f\u5217 $\\text{lans}$\u3002  \n\n6. \u4ece\u53f3\u7aef\u70b9\u7ed3\u675f\u7684\u6700\u957f\u7684\u5355\u5cf0\u5e8f\u5217 $\\text{rans}$\u3002\n\n7. \u533a\u95f4\u5185\u6700\u957f\u7684\u5355\u5cf0\u5e8f\u5217 $\\text{ans}$\u3002  \n\n8. \u533a\u95f4\u52a0\u7684\u61d2\u6807\u8bb0 $\\text{tag}$\u3002  \n\n9. \u533a\u95f4\u957f\u5ea6 $\\text{len}$\u3002  \n\n\u61d2\u6807\u8bb0\u7684\u4e0b\u4f20\u5f88\u5e38\u89c4\uff0c\u4fee\u6539 $\\text{lv}$ \u548c $\\text{rv}$ \u5373\u53ef\u3002  \n\n\u91cd\u70b9\u662f\u4e0a\u4f20\u7684\u90e8\u5206\u3002  \n\n\u5b9a\u4e49 $ls$ \u4e3a\u5de6\u533a\u95f4\uff0c$rs$ \u4e3a\u53f3\u533a\u95f4\u3002\n\n\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n- \u5bf9\u4e8e $\\text{lv}$ \u548c $\\text{rv}$ \u76f4\u63a5\u7ee7\u627f\u5de6\u53f3\u533a\u95f4\u5373\u53ef\u3002  \n\n- \u5bf9\u4e8e $\\text{dec}$\uff0c\u5206\u4e24\u7c7b\u8ba8\u8bba\uff1a\n  - \u82e5 $\\text{dec}_{ls} = \\text{len}_{ls}$ \u4e14 $\\text{lv}_{rs}>\\text{rv}_{ls}$\uff0c\u8bf4\u660e\u4e0b\u964d\u5e8f\u5217\u4e00\u76f4\u5ef6\u7eed\u5230\u4e86\u53f3\u533a\u95f4\uff0c$\\text{dec}\\gets \\text{dec}_{ls}+\\text{dec}_{rs}$\u3002   \n  - \u82e5 $\\text{dec}_{ls} \\not= \\text{len}_{ls}$ \u6216 $\\text{lv}_{rs}\\leq\\text{rv}_{ls}$\uff0c$\\text{dec}\\gets \\text{dec}_{ls}$\u3002  \n- \u5bf9\u4e8e $\\text{inc}$\uff0c\u5206\u4e24\u7c7b\u8ba8\u8bba\uff1a\n  - \u82e5 $\\text{inc}_{rs} = \\text{len}_{rs}$ \u4e14 $\\text{rv}_{ls}<\\text{lv}_{rs}$\uff0c\u8bf4\u660e\u4e0a\u5347\u5e8f\u5217\u4e00\u76f4\u5ef6\u7eed\u5230\u4e86\u5de6\u533a\u95f4\uff0c$\\text{inc}\\gets \\text{inc}_{rs}+\\text{inc}_{ls}$\u3002   \n  - \u82e5 $\\text{inc}_{rs} \\not= \\text{len}_{rs}$ \u6216 $\\text{rv}_{ls}\\ge\\text{lv}_{rs}$\uff0c$\\text{inc}\\gets \\text{inc}_{rs}$\u3002   \n\n- \u5bf9\u4e8e $\\text{lans}$\uff0c\u82e5 $\\text{inc}_{ls}=\\text{len}_{ls}$\uff0c\u8bf4\u660e\u5de6\u533a\u95f4\u662f\u4e00\u4e2a\u4e0a\u5347\u5e8f\u5217\uff0c\u5426\u5219\u76f4\u63a5\u7ee7\u627f\u5de6\u5b50\u6811\u5373\u53ef\uff0c\u5206\u4e94\u7c7b\u8ba8\u8bba\uff1a  \n    - \u82e5 $\\text{rv}_{ls}=\\text{lv}_{rs}$\uff0c\u6b64\u65f6\u7b54\u6848\u5ef6\u7eed\u4e0d\u5230\u53f3\u533a\u95f4\uff0c$\\text{lans}\\gets\\text{lans}_{ls}$\u3002\n    - \u82e5 $\\text{inc}_{ls}=\\text{len}_{ls}$ \u4e14 $\\text{rv}_{ls}<\\text{lv}_{rs}$\uff0c\u8bf4\u660e\u5de6\u533a\u95f4\u7684\u4e0a\u5347\u5e8f\u5217\u5728\u53f3\u533a\u95f4\u8fd8\u53ef\u5ef6\u7eed\uff0c$\\text{lans}\\gets\\text{lans}_{ls}+\\text{lans}_{rs}$\u3002  \n    - \u82e5 $\\text{inc}_{ls}=\\text{len}_{ls}$ \u4e14 $\\text{rv}_{ls}>\\text{lv}_{rs}$\uff0c\u8bf4\u660e\u5de6\u533a\u95f4\u7684\u4e0a\u5347\u5e8f\u5217\u5728\u53f3\u533a\u95f4\u4e0d\u53ef\u5ef6\u7eed\uff0c\u53f3\u533a\u95f4\u53ea\u53ef\u4e0b\u964d\uff0c$\\text{lans}\\gets\\text{lans}_{ls}+\\text{dec}_{rs}$\u3002  \n    - \u82e5 $\\text{lans}_{ls}=\\text{len}_{ls}$ \u4e14 $\\text{rv}_{ls}>\\text{lv}_{rs}$\uff0c\u8bf4\u660e\u5de6\u533a\u95f4\u53ef\u80fd\u53ef\u4ee5\u4ee4\u53f3\u533a\u95f4\u4e0b\u964d\u589e\u52a0\u957f\u5ea6\uff0c$\\text{lans}=\\text{lans}_{ls}+\\text{dec}_{rs}$\u3002\n    - \u5176\u4f59\u60c5\u51b5\u8bf4\u660e\u5de6\u533a\u95f4\u65e0\u6cd5\u8fde\u63a5\u5230\u53f3\u533a\u95f4\uff0c$\\text{lans}\\gets\\text{lans}_{ls}$\u3002\n  \n- $\\text{rans}$ \u4e5f\u7c7b\u4f3c\u7684\u5904\u7406\u3002  \n\n- \u5bf9\u4e8e $\\text{ans}$\uff0c\u6709\u4e09\u79cd\u7ee7\u627f\u7684\u60c5\u51b5\uff1a \n  - \u4ece $\\text{ans}_{ls}$ \u548c $\\text{ans}_{rs}$ \u7ee7\u627f\u6765\uff0c$\\text{ans}\\gets\\max(\\text{ans}_{ls},\\text{ans}_{rs})$\u3002   \n  - \u82e5 $\\text{rv}_{ls}>\\text{lv}_{rs}$\uff0c\u6b64\u65f6\u6700\u5927\u503c\u5728\u5de6\u533a\u95f4\uff0c$\\text{ans}\\gets\\text{rans}_{ls}+\\text{dec}_{rs}$\u3002  \n  - \u82e5 $\\text{rv}_{ls}<\\text{lv}_{rs}$\uff0c\u6b64\u65f6\u6700\u5927\u503c\u5728\u53f3\u533a\u95f4\uff0c$\\text{ans}\\gets\\text{lans}_{rs}+\\text{inc}_{ls}$\u3002  \n    \n\u5176\u4ed6\u64cd\u4f5c\u5c31\u548c\u666e\u901a\u7ebf\u6bb5\u6811\u4e00\u6837\u4e86\u3002  \n\n\u672c\u9898\u8fd8\u6709\u4e00\u4e2a\u7a0d\u5fae\u7b80\u5355\u4e9b\u7684\u505a\u6cd5\uff0c\u7ef4\u62a4\u4e00\u4e2a\u5dee\u5206\u6570\u7ec4\uff0c\u6bcf\u6b21\u6574\u4f53\u67e5\u8be2\u7531\u76f8\u90bb\u7684\u8fde\u7eed\u6b63\u6570\u6bb5\u548c\u8fde\u7eed\u8d1f\u6570\u6bb5\u6784\u6210\u7684\u6700\u957f\u5b50\u6bb5\uff0c\u8fd9\u6837\u6bcf\u6b21\u4fee\u6539\u5c31\u53d8\u6210\u5355\u70b9\u52a0\uff0c\u4e0d\u9700\u8981\u533a\u95f4\u52a0\u7684\u61d2\u6807\u8bb0\u4e86\uff0c\u7ef4\u62a4\u8fd9\u4e2a\u95ee\u9898\u7684\u64cd\u4f5c\u548c\u6734\u7d20\u7684\u7ebf\u6bb5\u6811\u5dee\u4e0d\u591a\u3002  \n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u7ebf\u6bb5\u6811\u7684 $n\\log n$\u3002  \n\n\u8fd9\u4e2a\u6570\u636e\u8303\u56f4\u8981\u5f00 `long long`\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int N = 3e5 + 10;\nint n, m;\nll a[N];\nstruct Segment {\n\tint l, r, len;\n\tint inc, dec, lans, rans, ans;\n\tll tag, lv, rv;\n} t[N << 2];\n#define ls x << 1\n#define rs x << 1 | 1\nvoid pushup(int x) {\n\tt[x].lv = t[ls].lv, t[x].rv = t[rs].rv;\n\tt[x].inc = t[rs].inc;\n\tif(t[rs].inc == t[rs].len && t[rs].lv > t[ls].rv) t[x].inc += t[ls].inc;\n\tt[x].dec = t[ls].dec;\n\tif(t[ls].dec == t[ls].len && t[ls].rv > t[rs].lv) t[x].dec += t[rs].dec;\n\tt[x].lans = t[ls].lans;\n\tif(t[ls].inc == t[ls].len) {\n\t\tif(t[ls].rv < t[rs].lv) t[x].lans += t[rs].lans;\n\t\tif(t[ls].rv > t[rs].lv) t[x].lans += t[rs].dec;\n\t}\n\telse if(t[ls].lans == t[ls].len && t[ls].rv > t[rs].lv) t[x].lans += t[rs].dec;\n\tt[x].rans = t[rs].rans;\n\tif(t[rs].dec == t[rs].len) {\n\t\tif(t[rs].lv < t[ls].rv) t[x].rans += t[ls].rans;\n\t\tif(t[rs].lv > t[ls].rv) t[x].rans += t[ls].inc;\n\t}\n\telse if(t[rs].rans == t[rs].len && t[rs].lv > t[ls].rv) t[x].rans += t[ls].inc;\n\tt[x].ans = max(t[ls].ans, t[rs].ans);\n\tif(t[ls].rv < t[rs].lv) t[x].ans = max(t[x].ans, t[ls].inc + t[rs].lans);\n\tif(t[ls].rv > t[rs].lv) t[x].ans = max(t[x].ans, t[rs].dec + t[ls].rans);\n}\nvoid pushdown(int x) {\n\tif(!t[x].tag) return;\n\tt[ls].lv += t[x].tag, t[ls].rv += t[x].tag;\n\tt[rs].lv += t[x].tag, t[rs].rv += t[x].tag;\n\tt[ls].tag += t[x].tag, t[rs].tag += t[x].tag;\n\tt[x].tag = 0;\n}\nvoid build(int x, int l, int r) {\n\tt[x].l = l, t[x].r = r, t[x].len = r - l + 1;\n\tt[x].lv = a[l], t[x].rv = a[r];\n\tif(l == r) {\n\t\tt[x].inc = t[x].dec = t[x].lans = t[x].rans = t[x].ans = 1;\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tbuild(ls, l, mid);\n\tbuild(rs, mid + 1, r);\n\tpushup(x);\n}\nvoid update(int x, int l, int r, ll val) {\n\tif(l <= t[x].l && t[x].r <= r) {\n\t\tt[x].lv += val, t[x].rv += val, t[x].tag += val;\n\t\treturn;\n\t}\n\tpushdown(x);\n\tif(l <= t[ls].r) update(ls, l, r, val);\n\tif(t[rs].l <= r) update(rs, l, r, val);\n\tpushup(x);\n}\nint main() {\n\tscanf(\"%d\", &n);\n\tfor(int i = 1; i <= n; i++)\n\t\tscanf(\"%lld\", &a[i]);\n\tbuild(1, 1, n);\n\tscanf(\"%d\", &m);\n\tfor(int i = 1; i <= m; i++) {\n\t\tint l, r;\n\t\tll d;\n\t\tscanf(\"%d%d%lld\", &l, &r, &d);\n\t\tupdate(1, l, r, d);\n\t\tprintf(\"%d\\n\", t[1].ans);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1620205391,
        "uid": 365107,
        "name": "Terac",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF739C Alyona and towers"
    },
    {
        "content": "[Codeforces \u9898\u76ee\u4f20\u9001\u95e8](https://codeforces.com/contest/739/problem/C) & [\u6d1b\u8c37\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF739C)\n\n~~\u53ef\u80fd\u6709\u4eba\u4f1a\u95ee\u6211\u4e3a\u4ec0\u4e48\u4e3a\u8fd9\u9053 *2500 \u7684 D1C \u5199\u9898\u89e3\uff0c\u6211\u89c9\u5f97\u5927\u6982\u662f\u60f3\u8981\u5728\u5199\u9898\u89e3\u6570\u91cf\u4e0a dd ycx \u5427\uff0c\u56e0\u4e3a ycx \u5230\u76ee\u524d\u4e3a\u6b62\u5199\u4e86 143 \u7bc7\u9898\u89e3\uff0c\u800c\u8fd9\u4e5f\u662f\u6211\u7684\u7b2c 143 \u7bc7\u9898\u89e3\uff08\uff08\uff08~~\n\n\u5927\u6982\u548c CF1149C Tree Generator\u2122 \u6bd4\u8f83\u50cf\uff1f\u505a\u8fc7\u90a3\u9898\u8fd9\u9898\u57fa\u672c\u53ef\u4ee5\u4e00\u773c\u79d2\u4e86\uff08\n\n\u7ebf\u6bb5\u6811\u3002\u6bcf\u4e2a\u533a\u95f4\u7ef4\u62a4\u4ee5\u4e0b\u516b\u4e2a\u503c\uff1a\n\n- \u533a\u95f4\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u503c $fst$\n- \u533a\u95f4\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u503c $lst$\n- \u533a\u95f4\u957f\u5ea6 $len$\n- \u4ee5\u5de6\u7aef\u70b9\u4e3a\u5f00\u5934\u7684\u6700\u957f\u4e0b\u964d\u524d\u7f00\u7684\u957f\u5ea6 $llen$\n- \u4ee5\u53f3\u7aef\u70b9\u4e3a\u5f00\u5934\u7684\u6700\u957f\u4e0a\u5347\u540e\u7f00\u7684\u957f\u5ea6 $rlen$\n- \u4ee5\u5de6\u7aef\u70b9\u4e3a\u5f00\u5934\u7684\u5148\u4e0a\u5347\u518d\u4e0b\u964d\u7684\u6700\u957f\u524d\u7f00\u957f\u5ea6 $l\\_tower$\n- \u4ee5\u53f3\u7aef\u70b9\u4e3a\u7ed3\u5c3e\u7684\u5148\u4e0a\u5347\u518d\u4e0b\u964d\u7684\u6700\u957f\u524d\u7f00\u957f\u5ea6 $r\\_tower$\n- \u8fd9\u6bb5\u533a\u95f4\u4e2d\u6700\u957f\u7684\u5148\u4e0a\u5347\u540e\u4e0b\u964d\u5b50\u5e8f\u5217\u7684\u957f\u5ea6 $mx$\n\n\u8003\u8651\u5408\u5e76\u5de6\u53f3\u4e24\u4e2a\u533a\u95f4\uff1a\n\n- $fst$ \u5c31\u76f4\u63a5\u7ee7\u627f\u5de6\u513f\u5b50\u7684 $fst$ \u5373\u53ef\n- $lst$ \u5c31\u76f4\u63a5\u7ee7\u627f\u53f3\u513f\u5b50\u7684 $lst$ \u5373\u53ef\n- $len$ \u5c31\u76f4\u63a5\u5c06\u5de6\u53f3\u513f\u5b50\u7684 $len$ \u52a0\u8d77\u6765\u5373\u53ef\n- $llen$ \u5206\u4e24\u79cd\u60c5\u51b5\uff0c\u5982\u679c\u5de6\u513f\u5b50\u7684 $llen$ \u5c31\u7b49\u4e8e\u5176 $len$\uff0c\u5e76\u4e14\u5de6\u513f\u5b50\u7684 $lst$ \u5927\u4e8e\u53f3\u513f\u5b50\u7684 $fst$\uff0c\u90a3\u4e48\u8be5\u8282\u70b9\u7684 $llen$ \u7b49\u4e8e\u5de6\u53f3\u8282\u70b9\u7684 $llen$ \u4e4b\u548c\u3002\u5426\u5219\u8be5\u8282\u70b9\u7684 $llen$ \u7b49\u4e8e\u5de6\u513f\u5b50\u7684 $llen$\u3002$rlen$ \u4e5f\u540c\u7406\n- $l\\_tower$ \u5206\u4e09\u79cd\u60c5\u51b5\uff0c\u5982\u679c\u5de6\u513f\u5b50\u672c\u8eab\u5c31\u662f\u4e0a\u5347\u5e8f\u5217\uff0c\u5373\u5de6\u513f\u5b50\u7684 $rlen$ \u7b49\u4e8e\u5176 $len$\uff0c\u5e76\u4e14\u5de6\u513f\u5b50\u7684 $lst$ \u5c0f\u4e8e\u53f3\u513f\u5b50\u7684 $fst$\uff0c\u90a3\u4e48 $l\\_tower$ \u5c31\u7b49\u4e8e\u5de6\u513f\u5b50\u7684 $rlen$ \u4e0e\u53f3\u513f\u5b50\u7684 $l\\_tower$ \u7684\u548c\u3002\u5982\u679c\u5de6\u513f\u5b50\u7684 $l\\_tower$ \u7b49\u4e8e\u5176 $len$\uff0c\u5e76\u4e14\u5de6\u513f\u5b50\u7684 $lst$ \u5927\u4e8e\u53f3\u513f\u5b50\u7684 $fst$\uff0c\u90a3\u4e48 $l\\_tower$ \u5c31\u7b49\u4e8e\u5de6\u513f\u5b50\u7684 $len$ \u4e0e\u53f3\u513f\u5b50\u7684 $llen$ \u4e4b\u548c\u3002\u5426\u5219 $l\\_tower$ \u7b49\u4e8e\u5de6\u513f\u5b50\u7684 $l\\_tower$\u3002$r\\_tower$ \u4e5f\u540c\u7406\u3002\n- $mx$ \u5206\u56db\u79cd\u60c5\u51b5\uff0c\u9996\u5148\u5b83\u53ef\u4ee5\u4ece\u5de6\u53f3\u513f\u5b50\u7684 $mx$ \u5206\u522b\u7ee7\u627f\u6765\uff0c\u5373\u5b83\u9996\u5148\u7b49\u4e8e\u5de6\u53f3\u513f\u5b50 $mx$ \u7684\u8f83\u5927\u8005\u3002\u5176\u6b21\u5982\u679c\u5de6\u513f\u5b50\u7684 $lst$ \u5c0f\u4e8e\u53f3\u513f\u5b50\u7684 $fst$\uff0c\u90a3\u4e48 $mx$ \u53ef\u4ee5\u7528\u5de6\u513f\u5b50\u7684 $rlen$ \u4e0e\u53f3\u513f\u5b50\u7684 $l\\_tower$ \u4e4b\u548c\u66f4\u65b0\uff1b\u5982\u679c\u5de6\u513f\u5b50\u7684 $lst$ \u5927\u4e8e\u53f3\u513f\u5b50\u7684 $fst$\uff0c\u90a3\u4e48 $mx$ \u53ef\u4ee5\u7528\u5de6\u513f\u5b50\u7684 $r\\_tower$ \u4e0e\u53f3\u513f\u5b50\u7684 $llen$ \u4e4b\u548c\u66f4\u65b0\n\n\u5199\u4e2a\u7ed3\u6784\u4f53\u7ef4\u62a4\u4e00\u4e0b\u5373\u53ef\u3002\u533a\u95f4\u4fee\u6539\u5c31\u76f4\u63a5\u6253\u4e2a\u6807\u8bb0\u3002\n\n\u829c\u6e56~\u505a\u5b8c\u4e86\uff0c\u8bb0\u5f97\u5f00 `long long`\uff0c\u590d\u6742\u5ea6\u7ebf\u5bf9\u3002\n\n```cpp\nconst int MAXN=3e5;\nint n,qu,a[MAXN+5];\nstruct data{\n\tll fst,lst;int len,llen,rlen,l_tower,r_tower,mx;\n\tdata(){fst=lst=len=llen=rlen=l_tower=r_tower=mx=0;}\n\tdata(int _fst,int _lst,int _len,int _llen,int _rlen,int _l_tower,int _r_tower,int _mx):\n\tfst(_fst),lst(_lst),len(_len),llen(_llen),rlen(_rlen),l_tower(_l_tower),r_tower(_r_tower),mx(_mx){}\n\tfriend data operator +(data a,data b){\n\t\tdata c;\n\t\tc.fst=a.fst;c.lst=b.lst;c.len=a.len+b.len;\n\t\tc.llen=(a.llen==a.len&&a.lst>b.fst)?(a.llen+b.llen):a.llen;\n\t\tc.rlen=(b.rlen==b.len&&a.lst<b.fst)?(b.rlen+a.rlen):b.rlen;\n\t\tc.l_tower=(a.rlen==a.len&&a.lst<b.fst)?(a.l_tower+b.l_tower):\n\t\t\t\t  ((a.l_tower==a.len&&a.lst>b.fst)?(a.l_tower+b.llen):(a.l_tower));\n\t\tc.r_tower=(b.llen==b.len&&a.lst>b.fst)?(b.r_tower+a.r_tower):\n\t\t\t\t  ((b.r_tower==b.len&&a.lst<b.fst)?(b.r_tower+a.rlen):(b.r_tower));\n\t\tc.mx=max(a.mx,b.mx);\n\t\tif(a.lst>b.fst) c.mx=max(c.mx,a.r_tower+b.llen);\n\t\tif(a.lst<b.fst) c.mx=max(c.mx,a.rlen+b.l_tower);\n\t\treturn c;\n\t}\n};\nstruct node{int l,r;ll lz;data v;} s[MAXN*4+5];\nvoid pushup(int k){s[k].v=s[k<<1].v+s[k<<1|1].v;}\nvoid build(int k,int l,int r){\n\ts[k].l=l;s[k].r=r;if(l==r){s[k].v=data(a[l],a[l],1,1,1,1,1,1);return;}\n\tint mid=l+r>>1;build(k<<1,l,mid);build(k<<1|1,mid+1,r);pushup(k);\n}\nvoid pushdown(int k){\n\tif(s[k].lz){\n\t\ts[k<<1].lz+=s[k].lz;s[k<<1].v.fst+=s[k].lz;s[k<<1].v.lst+=s[k].lz;\n\t\ts[k<<1|1].lz+=s[k].lz;s[k<<1|1].v.fst+=s[k].lz;s[k<<1|1].v.lst+=s[k].lz;\n\t\ts[k].lz=0;\n\t}\n}\nvoid modify(int k,int l,int r,int x){\n\tif(l<=s[k].l&&s[k].r<=r){\n\t\ts[k].lz+=x;s[k].v.fst+=x;s[k].v.lst+=x;\n\t\treturn;\n\t} pushdown(k);int mid=s[k].l+s[k].r>>1;\n\tif(r<=mid) modify(k<<1,l,r,x);\n\telse if(l>mid) modify(k<<1|1,l,r,x);\n\telse modify(k<<1,l,mid,x),modify(k<<1|1,mid+1,r,x);\n\tpushup(k);\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n\tbuild(1,1,n);scanf(\"%d\",&qu);\n\twhile(qu--){\n\t\tint l,r,v;scanf(\"%d%d%d\",&l,&r,&v);\n\t\tmodify(1,l,r,v);printf(\"%d\\n\",s[1].v.mx);\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1616667560,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF739C Alyona and towers"
    },
    {
        "content": "\u7ebf\u6bb5\u6811\u597d\u9898\uff01\n\n\u8003\u8651\u600e\u4e48\u7ef4\u62a4\u8fd9\u4e2a**\u5148\u4e0a\u5347\u518d\u4e0b\u964d\u7684\u6700\u957f\u5e8f\u5217**\u3002\n\n\u975e\u5e38\u5957\u8def\u5730\u7ef4\u62a47\u4e2a\u53c2\u6570\uff1a\n- **(1)**\u5f53\u524d\u533a\u95f4\u6700\u957f\u7684**\u5148\u4e0a\u5347\u518d\u4e0b\u964d\u5e8f\u5217**\n- **(2)**\u4ee5\u533a\u95f4**\u5de6\u7aef\u70b9\u5f00\u59cb**\u7684\u6700\u957f\u7684**\u5148\u4e0a\u5347\u518d\u4e0b\u964d\u5e8f\u5217**\n- **(3)**\u4ee5\u533a\u95f4**\u53f3\u7aef\u70b9\u7ed3\u675f**\u7684\u6700\u957f\u7684**\u5148\u4e0a\u5347\u518d\u4e0b\u964d\u5e8f\u5217**\n- **(4)**\u4ee5\u533a\u95f4**\u5de6\u7aef\u70b9\u5f00\u59cb**\u7684\u6700\u957f\u7684**\u4e0b\u964d\u5e8f\u5217**\n- **(5)**\u4ee5\u533a\u95f4**\u53f3\u7aef\u70b9\u7ed3\u675f**\u7684\u6700\u957f\u7684**\u4e0a\u5347\u5e8f\u5217**\n- **(6)**\u533a\u95f4\u5de6\u7aef\u70b9\u7684**\u6743\u503c**\n- **(7)**\u533a\u95f4\u53f3\u7aef\u70b9\u7684**\u6743\u503c**\n- **(8)**\u533a\u95f4\u5927\u5c0f  \uff08\u6211\u6ca1\u7ef4\u62a4\uff09\n\n\u8003\u8651\u600e\u4e48\u5c06\u5de6\u53f3\u513f\u5b50\u4fe1\u606f\u5408\u5e76\u3002\n- **(6)**\u4e3a**\u5de6\u513f\u5b50(6)**\n- **(7)**\u4e3a**\u53f3\u513f\u5b50(7)**\n- **(4)**\u4e3a**\u5de6\u513f\u5b50(4)**,\u4f46\u82e5**\u5de6\u513f\u5b50(4)=\u5de6\u513f\u5b50(8)**\u4e14**\u5de6\u513f\u5b50(7)>\u53f3\u513f\u5b50(6)**,\u8fd8\u8981\u52a0\u4e0a**\u53f3\u513f\u5b50(4)**\n- **(5)**\u4e3a**\u53f3\u513f\u5b50(5)**,\u4f46\u82e5**\u53f3\u513f\u5b50(5)=\u53f3\u513f\u5b50(8)**\u4e14**\u5de6\u513f\u5b50(7)<\u53f3\u513f\u5b50(6)**,\u8fd8\u8981\u52a0\u4e0a**\u5de6\u513f\u5b50(4)**\n- **(2)**\u4e3a**\u5de6\u513f\u5b50(2)**,\u4f46\u6709**\u4e24\u79cd\u989d\u5916\u7684\u60c5\u51b5**\u3002\n - **\u5de6\u513f\u5b50(5)=\u5de6\u513f\u5b50(8)**\u4e14**\u5de6\u513f\u5b50(7)<\u53f3\u513f\u5b50(6)**,\u90a3\u4e48**(2)**\u53ef\u80fd\u662f**\u5de6\u513f\u5b50(5)+\u53f3\u513f\u5b50(2)**\n - **\u5de6\u513f\u5b50(3)=\u5de6\u513f\u5b50(8)**\u4e14**\u5de6\u513f\u5b50(7)>\u53f3\u513f\u5b50(6)**,\u90a3\u4e48**(2)**\u53ef\u80fd\u662f**\u5de6\u513f\u5b50(2)+\u53f3\u513f\u5b50(4)**\n- **(3)**\u4e3a**\u53f3\u513f\u5b50(3)**,\u4f46\u6709**\u4e24\u79cd\u989d\u5916\u7684\u60c5\u51b5**\u3002\n - **\u53f3\u513f\u5b50(4)=\u53f3\u513f\u5b50(8)**\u4e14**\u5de6\u513f\u5b50(7)>\u53f3\u513f\u5b50(6)**,\u90a3\u4e48**(3)**\u53ef\u80fd\u662f**\u5de6\u513f\u5b50(3)+\u53f3\u513f\u5b50(4)**\n - **\u53f3\u513f\u5b50(2)=\u53f3\u513f\u5b50(8)**\u4e14**\u5de6\u513f\u5b50(7)<\u53f3\u513f\u5b50(6)**,\u90a3\u4e48**(2)**\u53ef\u80fd\u662f**\u5de6\u513f\u5b50(5)+\u53f3\u513f\u5b50(2)**\n- **(1)**\u7528\u65b0\u66f4\u65b0\u7684**(2,3,4,5)**\u548c**\u5de6\u513f\u5b50\u548c\u53f3\u513f\u5b50\u7684(1)**\u66f4\u65b0\u3002\u4f46\u6709**\u4e24\u79cd\u989d\u5916\u7684\u60c5\u51b5**\u3002\n - \u82e5**\u5de6\u513f\u5b50(7)>\u53f3\u513f\u5b50(6)**,\u7528**\u5de6\u513f\u5b50(3)+\u53f3\u513f\u5b50(4)**\u66f4\u65b0\u3002\n - \u82e5**\u5de6\u513f\u5b50(7)<\u53f3\u513f\u5b50(6)**,\u7528**\u5de6\u513f\u5b50(5)+\u53f3\u513f\u5b50(2)**\u66f4\u65b0\u3002\n\n\u547c\u3002\u3002\u8fd9\u6837\u5c31\u5408\u5e76\u5b8c\u4e86\u3002\n\n\u7136\u540e\u5c31\u6bd4\u8f83\u88f8\u4e86\u3002**\u6ce8\u610f\u5f00long long\uff01**\n\n~~\u636e\u8bf4\u53ef\u7528\u5dee\u5206\u6765\u505a~~\n\n```\n#include<cstdio>\nconst int N=3e5+50;\ntypedef long long LL;\nint n,m,x,y;\nLL z;\nint mx[N<<3];//answer\nint mxl1[N<<3],mxr1[N<<3];//left down and right on \nint mxl2[N<<3],mxr2[N<<3];//left on-down and right on-down\nLL vl[N<<3],vr[N<<3];//left val and right val\nLL bj[N<<3];//add tag \ninline int max(int u,int v){return u>v?u:v;}\nvoid gx(int now,int ls,int rs){\n\tint noww=now<<1,nrs=ls+rs>>1;\n\tvl[now]=vl[noww];\n\tvr[now]=vr[noww|1];\n\t//left down \n\tmxl1[now]=mxl1[noww];\n\tif(mxl1[noww]==nrs-ls+1&&vr[noww]>vl[noww|1])\n\tmxl1[now]+=mxl1[noww|1];\n\t//right on\n\tmxr1[now]=mxr1[noww|1];\n\tif(mxr1[noww|1]==rs-nrs&&vr[noww]<vl[noww|1])\n\tmxr1[now]+=mxr1[noww];\n\t//left on-down\n\tmxl2[now]=mxl2[noww];\n\tif(mxl2[noww]==nrs-ls+1&&vr[noww]>vl[noww|1])\n\tmxl2[now]+=mxl1[noww|1];\n\tif(mxr1[noww]==nrs-ls+1&&vr[noww]<vl[noww|1])\n\tmxl2[now]=max(mxl2[now],mxr1[noww]+mxl2[noww|1]);\n\t//right on-down\n\tmxr2[now]=mxr2[noww|1];\n\tif(mxr2[noww|1]==rs-nrs&&vr[noww]<vl[noww|1])\n\tmxr2[now]+=mxr1[noww];\n\tif(mxl1[noww|1]==rs-nrs&&vr[noww]>vl[noww|1])\n\tmxr2[now]=max(mxr2[now],mxl1[noww|1]+mxr2[noww]);\n\t\n\tmx[now]=max(mx[noww],mx[noww|1]);\n\tmx[now]=max(mx[now],max(mxl1[now],mxr1[now]));\n\tmx[now]=max(mx[now],max(mxl2[now],mxr2[now]));\n\tif(vr[noww]<vl[noww|1])mx[now]=max(mx[now],mxr1[noww]+mxl2[noww|1]);\n\tif(vr[noww]>vl[noww|1])mx[now]=max(mx[now],mxr2[noww]+mxl1[noww|1]);\n}\nvoid mktree(int now,int ls,int rs){\n\tif(ls==rs){\n\t\tscanf(\"%d\",&x);//\u8bfb\u5165\n\t\tvl[now]=vr[now]=x;//\u521d\u59cb\u5316\u5de6\u53f3\u7aef\u70b9\u6570\u503c\n\t\tmx[now]=mxl1[now]=mxl2[now]=mxr1[now]=mxr2[now]=1;\n        //\u521d\u59cb\u5316\u5404\u79cd\u53c2\u6570\n\t\treturn;\n\t}\n\tint noww=now<<1,nrs=ls+rs>>1;\n\tmktree(noww,ls,nrs);\n\tmktree(noww|1,nrs+1,rs);\n\tgx(now,ls,rs);\n}\nvoid bjxc(int now,int ls,int rs){//\u6807\u8bb0\u4e0b\u4f20\n\tif(!bj[now])return;\n\tint noww=now<<1;\n\tvl[noww]+=bj[now];vl[noww|1]+=bj[now];\n\tvr[noww]+=bj[now];vr[noww|1]+=bj[now];\n\tbj[noww]+=bj[now];bj[noww|1]+=bj[now];\n\tbj[now]=0;\n}\nvoid jia(int now,int ls,int rs,int zuo,int you,LL val){\n\tif(ls>you||rs<zuo)return;\n\tif(ls>=zuo&&rs<=you){\n\t\tvl[now]+=val;//\u5de6\u7aef\u70b9\u52a0\n\t\tvr[now]+=val;//\u53f3\u7aef\u70b9\u52a0\n\t\tbj[now]+=val;//\u533a\u95f4\u52a0\u6807\u8bb0\n\t\treturn;\n\t}\n\tbjxc(now,ls,rs);\n\tint noww=now<<1,nrs=ls+rs>>1;\n\tjia(noww,ls,nrs,zuo,you,val);\n\tjia(noww|1,nrs+1,rs,zuo,you,val);\n\tgx(now,ls,rs);\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tmktree(1,1,n);//\u5efa\u6811\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d%I64d\",&x,&y,&z);\n\t\tjia(1,1,n,x,y,z);//\u533a\u95f4\u52a0\n\t\tprintf(\"%d\\n\",mx[1]);//\u8f93\u51fa\u7b54\u6848\n\t}\n}\n```",
        "postTime": 1540949520,
        "uid": 50092,
        "name": "da32s1da",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF739C \u3010Alyona and towers\u3011"
    },
    {
        "content": "\u8003\u8651\u5bf9\u5e8f\u5217\u5dee\u5206\u3002\n\n\u8d1f\u6570\u8bf4\u660e\u4e24\u4e2a\u6570\u5de6\u5927\u53f3\u5c0f\uff0c\u6b63\u6570\u8bf4\u660e\u4e24\u4e2a\u6570\u5de6\u5c0f\u53f3\u5927\u3002\n\n\u90a3\u6211\u4eec\u53ea\u9700\u8981\u6c42\u4e00\u6bb5\u533a\u95f4\uff0c\u6ee1\u8db3\u662f\u4e00\u6bb5\u6b63\u6570\u548c\u4e00\u6bb5\u8d1f\u6570\u62fc\u8d77\u6765\u3002\n\n\u7136\u540e\u53d1\u73b0\u533a\u95f4\u4fee\u6539\u8f6c\u6362\u4e3a\u4e86\u5355\u70b9\u4fee\u6539\u3002\n\n\u8003\u8651\u7ef4\u62a4\u4ee5\u4e0b\u7684\u4e1c\u897f\uff1a\n\n- \u533a\u95f4\u7684\u7b54\u6848\uff08\u957f\u5ea6\uff09\u3002\n- \u4ece\u533a\u95f4\u5de6\u7aef\u70b9\u5f00\u59cb\u7684\u6ee1\u8db3\u6761\u4ef6\u7684\u7b54\u6848\uff08\u957f\u5ea6\uff09\u3002\uff08\u4ee5\u4e0b\u7b80\u79f0\u5de6\u7b54\u6848\uff09\n- \u4ece\u533a\u95f4\u53f3\u7aef\u70b9\u5f00\u59cb\u7684\u6ee1\u8db3\u6761\u4ef6\u7684\u7b54\u6848\uff08\u957f\u5ea6\uff09\u3002\uff08\u4ee5\u4e0b\u7b80\u79f0\u53f3\u7b54\u6848\uff09\n\n\u4e3a\u4e86\u66f4\u65b0\u8fd9\u4e09\u4e2a\u7b54\u6848\uff0c\u518d\u7ef4\u62a4\uff1a\n\n- \u533a\u95f4\u957f\u5ea6\u3002\n- \u533a\u95f4\u5de6\u7aef\u70b9\u7684\u503c\u3002\n- \u533a\u95f4\u53f3\u7aef\u70b9\u7684\u503c\u3002\n\n\u663e\u7136\u533a\u95f4\u7684\u7b54\u6848\u9996\u5148\u53ef\u80fd\u662f\u4e24\u4e2a\u5b50\u533a\u95f4\u7684\u7b54\u6848\u7684\u6700\u5927\u503c\u3002\n\n\u8bbe\u5de6\u533a\u95f4\u53f3\u7aef\u70b9\u7684\u7b54\u6848\u4e3a $x$\uff0c\u53f3\u533a\u95f4\u5de6\u7aef\u70b9\u7684\u7b54\u6848\u4e3a $y$\u3002\n\n\u82e5 $x=0$ \u6216 $y=0$ \u6216 $x<0,y>0$\uff0c\u5219\u4e24\u4e2a\u5b50\u533a\u95f4\u4e00\u5b9a\u4e0d\u80fd\u62fc\u6210\u5927\u533a\u95f4\u7684\u7b54\u6848\u3002\n\n\u4e3a\u4ec0\u4e48\uff1f\n\n\u5f53 $x$ \u6216 $y$ \u7b49\u4e8e $0$ \u7684\u65f6\u5019\uff0c\u8bf4\u660e\u5de6\u53f3\u4e24\u6570\u76f8\u7b49\uff0c\u6545\u4e0d\u80fd\u6ee1\u8db3\u9898\u76ee\u8981\u6c42\u3002\n\n\u5f53 $x<0,y>0$ \u65f6\uff0c\u6b64\u65f6\u539f\u6570\u7ec4\u7684 $a,b,c$ \u6ee1\u8db3 $a>b<c$\uff0c\u4e5f\u4e0d\u6ee1\u8db3\u8981\u6c42\u3002\n\n\u6b64\u65f6\u533a\u95f4\u7684\u5de6\u7b54\u6848\u7b49\u4e8e\u5de6\u5b50\u533a\u95f4\u7684\u5de6\u7b54\u6848\uff0c\u533a\u95f4\u7684\u53f3\u7b54\u6848\u7b49\u4e8e\u53f3\u5b50\u533a\u95f4\u7684\u53f3\u7b54\u6848\u3002\n\n\u5f53\u4e24\u4e2a\u5b50\u533a\u95f4\u53ef\u80fd\u62fc\u6210\u5927\u533a\u95f4\u7684\u7b54\u6848\u65f6\uff0c\u53ef\u80fd\u6210\u4e3a\u533a\u95f4\u7684\u7b54\u6848\u7684\u503c\u4e3a\u5de6\u5b50\u533a\u95f4\u7684\u53f3\u7b54\u6848\u4e0e\u53f3\u5b50\u533a\u95f4\u7684\u5de6\u7b54\u6848\u7684\u548c\u3002\n\n\u5f53\u5de6\u5b50\u533a\u95f4\u7684\u5de6\u7b54\u6848\u7b49\u4e8e\u5de6\u5b50\u533a\u95f4\u7684\u957f\u5ea6\u7684\u65f6\u5019\uff0c\u533a\u95f4\u7684\u5de6\u7b54\u6848\u7b49\u4e8e\u5de6\u5b50\u533a\u95f4\u7684\u957f\u5ea6\u52a0\u4e0a\u53f3\u5b50\u533a\u95f4\u7684\u5de6\u7b54\u6848\u3002\n\n\u5982\u679c\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u533a\u95f4\u7684\u5de6\u7b54\u6848\u7b49\u4e8e\u5de6\u5b50\u533a\u95f4\u7684\u5de6\u7b54\u6848\u3002\n\n\u540c\u7406\uff0c\u5f53\u53f3\u5b50\u533a\u95f4\u7684\u53f3\u7b54\u6848\u7b49\u4e8e\u53f3\u5b50\u533a\u95f4\u7684\u957f\u5ea6\u7684\u65f6\u5019\uff0c\u533a\u95f4\u7684\u53f3\u7b54\u6848\u7b49\u4e8e\u53f3\u5b50\u533a\u95f4\u7684\u957f\u5ea6\u52a0\u4e0a\u5de6\u5b50\u533a\u95f4\u7684\u5de6\u7b54\u6848\u3002\n\n\u5982\u679c\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u533a\u95f4\u7684\u53f3\u7b54\u6848\u7b49\u4e8e\u53f3\u5b50\u533a\u95f4\u7684\u53f3\u7b54\u6848\u3002\n\n\u662f\u4e0d\u662f\u89c9\u5f97\u5341\u5206\u62bd\u8c61\uff1f\u53ef\u4ee5\u7ed3\u5408\u4ee3\u7801\u7406\u89e3\u4e00\u4e0b\u3002\n\n\u8bb0\u5f97\u5f00 ``long long``\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define inf 0x3f3f3f3f\n//#define LL_inf 1145141919810\n#define ull unsigned long long\n#define ll long long\nusing namespace std;\n#define int long long\nconst int Maxn=3e5+10;\nint tmp[Maxn];\nstruct Segmenttree{\n\tstruct segtree{\n\t\tint res; // \u533a\u95f4\u7b54\u6848 \n\t\tint len; // \u957f\u5ea6 \n\t\tint lres,rres; // \u5de6\u7b54\u6848 \u53f3\u7b54\u6848 \n\t\tint lval,rval; // \u5de6\u503c \u53f3\u503c \n\t}t[Maxn<<2];\n\t#define ls node<<1\n\t#define rs node<<1|1 \n\tvoid pushup(int node)\n\t{\n\t\tt[node].res=max(t[ls].res,t[rs].res);\n\t\tt[node].res=max(t[node].res,max(t[ls].lres,t[rs].rres));\n\t\tt[node].lval=t[ls].lval;\n\t\tt[node].rval=t[rs].rval;\n\t\tt[node].len=t[ls].len+t[rs].len;\n\t\tint val1=t[ls].rval,val2=t[rs].lval;\n\t\tbool flag=true;\n\t\tif(val1==0 || val2==0 || (val1<0 && val2>0)) \n\t\t{\n\t\t\tflag=false;\n\t\t}\n\t\tif(!flag)\n\t\t{\n\t\t\tt[node].lres=t[ls].lres;\n\t\t\tt[node].rres=t[rs].rres;\n\t\t}else{\n\t\t\tt[node].res=max(t[node].res,t[ls].rres+t[rs].lres);\n\t\t\t\n\t\t\tif(t[ls].lres==t[ls].len)\n\t\t\t{\n\t\t\t\tt[node].lres=t[ls].len+t[rs].lres;\n\t\t\t}else{\n\t\t\t\tt[node].lres=t[ls].lres;\n\t\t\t}\n\t\t\t\n\t\t\tif(t[rs].rres==t[rs].len)\n\t\t\t{\n\t\t\t\tt[node].rres=t[ls].rres+t[rs].len;\n\t\t\t}else{\n\t\t\t\tt[node].rres=t[rs].rres;\n\t\t\t}\n\t\t}\n\t}\n\tvoid build(int node,int l,int r)\n\t{\n\t\tif(l==r)\n\t\t{\n\t\t\tt[node].len=1;\n\t\t\tt[node].lval=t[node].rval=tmp[l];\n\t\t\tif(!tmp[l])\n\t\t\t{\n\t\t\t\tt[node].res=t[node].lres=t[node].rres=0;\n\t\t\t}else{\n\t\t\t\tt[node].res=t[node].lres=t[node].rres=1;\n\t\t\t}\t\t\n\t\t\treturn ;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tbuild(ls,l,mid);\n\t\tbuild(rs,mid+1,r);\n\t\tpushup(node);\n\t}\n\tvoid update(int node,int l,int r,int pos,int val)\n\t{\n\t\tif(l==r)\n\t\t{\n\t\t\ttmp[l]+=val;\n\t\t\tt[node].len=1;\n\t\t\tt[node].lval=t[node].rval=tmp[l];\n\t\t\tif(!tmp[l])\n\t\t\t{\n\t\t\t\tt[node].res=t[node].lres=t[node].rres=0;\n\t\t\t}else{\n\t\t\t\tt[node].res=t[node].lres=t[node].rres=1;\n\t\t\t}\n\t\t\treturn ;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tif(pos<=mid)\n\t\t{\n\t\t\tupdate(ls,l,mid,pos,val);\n\t\t}else{\n\t\t\tupdate(rs,mid+1,r,pos,val);\n\t\t}\n\t\tpushup(node);\n\t}\n}seg;\nint n;\nint Ar[Maxn];\nsigned main()\n{\n\tscanf(\"%lld\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%lld\",&Ar[i]);\n\t}\n\tfor(int i=1;i<n;i++)\n\t{\n\t\ttmp[i]=Ar[i+1]-Ar[i];\n\t}\n\tint m;\n\tscanf(\"%lld\",&m);\n\tif(n==1)\n\t{\n\t\tfor(int i=1;i<=m;i++)\n\t\t{\n\t\t\tputs(\"1\");\n\t\t}\n\t\treturn 0;\n\t}\n\tseg.build(1,1,n-1);\n\twhile(m--)\n\t{\n\t\tint l,r,d;\n\t\tscanf(\"%lld%lld%lld\",&l,&r,&d);\n\t\tif(l!=1)\n\t\t{\n\t\t\tseg.update(1,1,n-1,l-1,d);\n\t\t}\n\t\tif(r!=n)\n\t\t{\n\t\t\tseg.update(1,1,n-1,r,-d);\n\t\t}\n\t\t\n\t\tprintf(\"%lld\\n\",seg.t[1].res+1);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1682912235,
        "uid": 358739,
        "name": "BFSDFS123",
        "ccfLevel": 0,
        "title": "CF739C \u9898\u89e3"
    },
    {
        "content": "# \u9898\u9762\u7ffb\u8bd1\n\n\u73b0\u5728\u6709$n$\u4e2a\u6570\uff0c$m$\u4e2a\u64cd\u4f5c\uff0c**\u6bcf\u6b21\u533a\u95f4\u52a0\u4e00\u4e2a\u6570**\uff0c\u5bf9\u4e8e**\u6bcf\u4e00\u6b21**\u64cd\u4f5c\uff0c\u4f60\u8981\u627e\u51fa**\u6700\u957f**\u7684$\\ a_l...a_r\\ $\uff0c\u6ee1\u8db3\n\n$$\\exists k\\! \\in\\![l,r],a_l<a_{l+1}<a_{l+2}<...<a_k>a_{k+1}>a_{k+2}>...>a_r$$\n\n\u8f93\u51fa\u5176\u957f\u5ea6\u3002\n\n# \u89e3\u9898\u601d\u8def\n\n\u5bf9\u4e8e\u8fd9\u79cd\u533a\u95f4\u67e5\u8be2\u52a0\u4e0a\u533a\u95f4\u4fee\u6539\u7684\u95ee\u9898\uff0c\u5f88\u5bb9\u6613\u901a\u8fc7\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\u53d1\u73b0\u6211\u7684\u505a\u6cd5\u662f\u6709\u70b9\u9ebb\u70e6\u7684\uff0c\u8981\u5206\u5f88\u591a\u79cd\u60c5\u51b5\u8fdb\u884c\u8003\u8651\uff0c\u5efa\u8bae\u7406\u6e05\u695a\u601d\u8def\u540e\uff0c\u9759\u4e0b\u5fc3\u6765\u5199\u4ee3\u7801\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\u4e0b\u6587\u8bb2\u8ff0\uff0c\u628a\u9898\u76ee\u6240\u6c42\u7684\u5b50\u6bb5\u53eb\u505a\u5355\u5cf0\u5b50\u6bb5\uff0c\u5355\u5cf0\u5b50\u6bb5\u7684\u6700\u5927\u503c\u79f0\u4f5c\u5cf0\u70b9\uff0c\u5355\u8c03\u9012\u51cf\u7684\u5b50\u6bb5\u79f0\u4f5c\u5355\u51cf\u5b50\u6bb5\uff0c\u5355\u8c03\u9012\u589e\u5b50\u6bb5\u7684\u5b50\u6bb5\u79f0\u4f5c\u5355\u589e\u5b50\u6bb5\u3002\n\n\u9996\u5148\u6839\u636e\u9898\u76ee\u89c4\u5b9a\uff0c\u8981\u7ef4\u62a4\u533a\u95f4\u5355\u5cf0\u5b50\u6bb5\u3002\u6211\u4eec\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\u5cf0\u70b9\u7684\u4f4d\u7f6e\uff1a\uff08\u5176\u4e2d\u7ea2\u8272\u7684\u5411\u4e0a\u7684\u4e09\u89d2\u5f62\u8868\u793a\u5cf0\u70b9\uff0c\u9010\u6e10\u6536\u7a84\u7684\u4e09\u89d2\u5f62\u8868\u793a\u503c\u7684\u5355\u8c03\u9012\u51cf\uff09\n\n1. \u5cf0\u70b9\u5728\u5de6\n![](https://cdn.luogu.com.cn/upload/image_hosting/x1euk4tn.png)\n \n2. \u5cf0\u70b9\u5728\u53f3\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/qtybjqpu.png)\n\n\u5982\u679c\u6211\u4eec\u76f4\u63a5\u679a\u4e3e\u5cf0\u70b9\u7684\u8bdd\uff0c\u590d\u6742\u5ea6\u76f4\u63a5\u539f\u5730\u7206\u70b8\u3002\u90a3\u6211\u4eec\u600e\u4e48\u505a\u5462\uff1f\n\n\u53d1\u73b0\u5b9e\u9645\u4e0a\u5cf0\u70b9\u5728\u5de6\u7684\u60c5\u51b5\u53ef\u4ee5\u62c6\u4e3a\u4e24\u4e2a\u90e8\u5206\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/5zbrynf6.png)\n\n\u7b2c\u4e00\u90e8\u5206\u662f\u5de6\u533a\u95f4\u7684\u540e\u7f00\u5355\u5cf0\u5b50\u6bb5\uff0c\u7b2c\u4e8c\u90e8\u5206\u662f\u53f3\u533a\u95f4\u7684\u524d\u7f00\u5355\u51cf\u5b50\u6bb5\uff0c\u6211\u4eec\u5047\u8bbe\u5de6\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u4e3a $mid$\uff0c\u5f53 $a_{mid}>a_{mid+1}$ \u7684\u65f6\u5019\u53ef\u4ee5\u5411\u53f3\u62d3\u5c55\u3002\u5426\u5219\u76f4\u63a5\u7ee7\u627f\u5de6\u533a\u95f4\u3002\u5f53\u5cf0\u70b9\u5728\u53f3\u533a\u95f4\u7684\u65f6\u5019\u6c42\u6cd5\u4e5f\u7c7b\u4f3c\uff0c\u5c31\u4e0d\u518d\u91cd\u590d\uff0c\u8bfb\u8005\u53ef\u81ea\u884c\u63a8\u5bfc\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u8fd8\u8981\u7ef4\u62a4\u516d\u4e2a\u4e1c\u897f\uff1a\u524d\u7f00\u5355\u5cf0\u5b50\u6bb5\uff0c\u524d\u7f00\u5355\u51cf\u5b50\u6bb5\uff0c\u540e\u7f00\u5355\u5cf0\u5b50\u6bb5\uff0c\u540e\u7f00\u5355\u589e\u5b50\u6bb5\uff0c\u533a\u95f4\u5de6\u7aef\u7684\u503c\uff0c\u533a\u95f4\u53f3\u7aef\u7684\u503c\u3002\n\n\u533a\u95f4\u5de6\u53f3\u7aef\u7684\u503c\u5f88\u5bb9\u6613\u7ef4\u62a4\uff0c\u6bcf\u6b21\u4fee\u6539\u7684\u65f6\u5019\u76f4\u63a5\u52a0\u5c31\u597d\u4e86\u3002\n\n\u63a5\u4e0b\u6765\u662f\u524d\u7f00\u5355\u5cf0\u5b50\u6bb5\uff0c\u4e0e\u7ef4\u62a4\u5355\u5cf0\u5b50\u6bb5\u4e00\u4e2a\u9053\u7406\uff0c\u4e5f\u662f\u62c6\u6210\u4e24\u6bb5\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/cpdm9n9u.png)\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/2gyhqakh.png)\n\n\u5982\u679c\u5de6\u533a\u95f4\u53ef\u4e3a\u4e00\u4e2a\u5355\u5cf0\u5b50\u6bb5\u4e14 $a_{mid}>a_{mid+1}$\uff0c\u5373\u53ef\u5411\u53f3\u62d3\u5c55\u3002\u5426\u5219\u76f4\u63a5\u7ee7\u627f\u5de6\u533a\u95f4\u3002\n\n\u540e\u7f00\u5355\u5cf0\u5b50\u6bb5\u4e0e\u524d\u7f00\u5355\u5cf0\u5b50\u6bb5\u7c7b\u4f3c\uff0c\u8bfb\u8005\u53ef\u81ea\u884c\u63a8\u5bfc\u3002\n\n\u63a5\u4e0b\u6765\u662f\u524d\u7f00\u5355\u51cf\u5b50\u6bb5\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/bvdk940w.png)\n![](https://cdn.luogu.com.cn/upload/image_hosting/ggyhezxq.png)\n\n\u5982\u679c\u5de6\u533a\u95f4\u4e3a\u5355\u51cf\u5b50\u6bb5\uff0c\u5373\u53ef\u5411\u53f3\u62d3\u5c55\u3002\u5426\u5219\u76f4\u63a5\u7ee7\u627f\u5de6\u533a\u95f4\u3002\n\n\u540e\u7f00\u5355\u589e\u5b50\u6bb5\u4e0e\u524d\u7f00\u5355\u51cf\u5b50\u6bb5\u7c7b\u4f3c\uff0c\u8bfb\u8005\u53ef\u81ea\u884c\u63a8\u5bfc\u3002\n\n\u4e0d\u96be\u53d1\u73b0\u968f\u533a\u95f4\u4fee\u6539\u64cd\u4f5c\u800c\u53d8\u5316\u7684\u53ea\u6709\u5de6\u53f3\u7aef\u70b9\u7684\u503c\uff0c\u4e8e\u662f\u4e0b\u4f20\u61d2\u6807\u8bb0\u4e5f\u975e\u5e38\u65b9\u4fbf\u3002\n\n\u518d\u7565\u5fae\u603b\u7ed3\u4e00\u4e0b\uff0c\u4e00\u5171\u8981\u7ef4\u62a4\u4e03\u4e2a\u4e1c\u897f\uff0c\u533a\u95f4\u6700\u5de6\u7aef\u7684\u503c\u3001\u533a\u95f4\u6700\u53f3\u7aef\u7684\u503c\u3001\u524d\u7f00\u5355\u51cf\u5b50\u6bb5\uff0c\u540e\u7f00\u5355\u589e\u5b50\u6bb5\u3001\u524d\u7f00\u5355\u5cf0\u5b50\u6bb5\u3001\u540e\u7f00\u5355\u5cf0\u5b50\u6bb5\u3001\u5355\u5cf0\u5b50\u6bb5\u3002\n\n# \u4ee3\u7801\n\n\u672a\u7ecf\u8fc7~~\u7f8e\u5316~~\u7684\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define LL long long\n\nconst LL N=3e5+10;\n\nLL n,a[N],q,lq,rq,xq;\n\nstruct Tree{\n\tLL lv;//\u533a\u95f4\u6700\u5de6\u7aef\u7684\u503c \n\tLL rv;//\u533a\u95f4\u6700\u53f3\u7aef\u7684\u503c\n\tLL qzup;//\u533a\u95f4\u524d\u7f00\u6700\u957f\u4e0a\u5347\u5b50\u6bb5\n\tLL qzdn;//\u533a\u95f4\u524d\u7f00\u6700\u957f\u4e0b\u964d\u5b50\u6bb5\n\tLL hzup;//\u533a\u95f4\u540e\u7f00\u6700\u957f\u4e0a\u5347\u5b50\u6bb5\n\tLL hzdn;//\u533a\u95f4\u540e\u7f00\u6700\u957f\u4e0b\u964d\u5b50\u6bb5\n\tLL qzmx;//\u533a\u95f4\u524d\u7f00\u6700\u957f\u5cf0\u9876\u5b50\u6bb5\n\tLL hzmx;//\u533a\u95f4\u540e\u7f00\u6700\u957f\u5cf0\u9876\u5b50\u6bb5\n\tLL mx;//\u533a\u95f4\u6700\u957f\u5cf0\u9876\u5b50\u6bb5 \uff08\u8fd9\u624d\u662f\u6211\u8981\u6c42\u7684\u554aQwQ\uff09 \n\tLL lazy;//\u61d2\u6807\u8bb0 \n}tree[N<<2]; \n\nvoid pushup(LL w,LL l,LL r){\n\tLL mid=(l+r)>>1;\n\tLL lfl=l,lfr=mid,rtl=mid+1,rtr=r;\n\ttree[w].lv=tree[w<<1].lv;\n\ttree[w].rv=tree[w<<1|1].rv;\n\ttree[w].qzup=tree[w<<1].qzup;\n\tif(tree[w<<1].qzup==(lfr-lfl+1)&&tree[w<<1].rv<tree[w<<1|1].lv){\n\t\ttree[w].qzup=(lfr-lfl+1)+tree[w<<1|1].qzup;\n\t}\n\ttree[w].qzdn=tree[w<<1].qzdn;\n\tif(tree[w<<1].qzdn==(lfr-lfl+1)&&tree[w<<1].rv>tree[w<<1|1].lv){\n\t\ttree[w].qzdn=(lfr-lfl+1)+tree[w<<1|1].qzdn;\n\t}\n\ttree[w].hzup=tree[w<<1|1].hzup;\n\tif(tree[w<<1|1].hzup==(rtr-rtl+1)&&tree[w<<1].rv<tree[w<<1|1].lv){\n\t\ttree[w].hzup=(rtr-rtl+1)+tree[w<<1].hzup;\n\t}\n\ttree[w].hzdn=tree[w<<1|1].hzdn;\n\tif(tree[w<<1|1].hzdn==(rtr-rtl+1)&&tree[w<<1].rv>tree[w<<1|1].lv){\n\t\ttree[w].hzdn=(rtr-rtl+1)+tree[w<<1].hzdn;\n\t}\n\ttree[w].qzmx=tree[w<<1].qzmx;\n\tif(tree[w<<1].qzmx==(lfr-lfl+1)&&tree[w<<1].rv>tree[w<<1|1].lv){\n\t\ttree[w].qzmx=max(tree[w].qzmx,(lfr-lfl+1)+tree[w<<1|1].qzdn);\n\t}\n\tif(tree[w<<1].qzup==(lfr-lfl+1)&&tree[w<<1].rv<tree[w<<1|1].lv){\n\t\ttree[w].qzmx=max(tree[w].qzmx,(lfr-lfl+1)+tree[w<<1|1].qzmx);\n\t}\n\ttree[w].hzmx=tree[w<<1|1].hzmx;\n\tif(tree[w<<1|1].hzdn==(rtr-rtl+1)&&tree[w<<1].rv>tree[w<<1|1].lv){\n\t\ttree[w].hzmx=max(tree[w].hzmx,(rtr-rtl+1)+tree[w<<1].hzmx);\n\t}\n\tif(tree[w<<1|1].hzmx==(rtr-rtl+1)&&tree[w<<1].rv<tree[w<<1|1].lv){\n\t\ttree[w].hzmx=max(tree[w].hzmx,(rtr-rtl+1)+tree[w<<1].hzup);\n\t}\n\ttree[w].mx=max(tree[w<<1].mx,tree[w<<1|1].mx);\n\tif(tree[w<<1].rv>tree[w<<1|1].lv){\n\t\ttree[w].mx=max(tree[w].mx,tree[w<<1].hzmx+tree[w<<1|1].qzdn);\n\t}\n\tif(tree[w<<1].rv<tree[w<<1|1].lv){\n\t\ttree[w].mx=max(tree[w].mx,tree[w<<1].hzup+tree[w<<1|1].qzmx);\n\t}\n\treturn ;\n}\n\nvoid pushdown(LL w,LL l,LL r){\n\tif(tree[w].lazy==0) return ;\n\ttree[w<<1].lazy+=tree[w].lazy;\n\ttree[w<<1|1].lazy+=tree[w].lazy;\n\ttree[w<<1].lv+=tree[w].lazy;\n\ttree[w<<1].rv+=tree[w].lazy;\n\ttree[w<<1|1].lv+=tree[w].lazy;\n\ttree[w<<1|1].rv+=tree[w].lazy;\n\ttree[w].lazy=0;\n\treturn ;\n}\n\nvoid bulid(LL l,LL r,LL w){\n\ttree[w].hzdn=tree[w].hzmx=tree[w].hzup=tree[w].lv=tree[w].mx=tree[w].qzdn=tree[w].qzmx=tree[w].qzup=tree[w].rv=0;\n\tif(l==r){\n\t\ttree[w].hzdn=tree[w].hzmx=tree[w].hzup=tree[w].mx=tree[w].qzdn=tree[w].qzmx=tree[w].qzup=1;\n\t\ttree[w].lv=tree[w].rv=a[l];\n\t\treturn ;\n\t} \n\tLL mid=(l+r)>>1;\n\tbulid(l,mid,w<<1);\n\tbulid(mid+1,r,w<<1|1);\n\tpushup(w,l,r);\n\treturn ;\n}\n\nvoid change(LL l,LL r,LL w,LL lx,LL rx,LL x){\n\tif(l>=lx&&r<=rx){\n\t\ttree[w].lazy+=x;\n\t\ttree[w].lv+=x;\n\t\ttree[w].rv+=x;\n\t\treturn ;\n\t}\n\tpushdown(w,l,r);\n\tLL mid=(l+r)>>1;\n\tif(mid>=lx){\n\t\tchange(l,mid,w<<1,lx,rx,x);\n\t}\n\tif(mid<rx){\n\t\tchange(mid+1,r,w<<1|1,lx,rx,x);\n\t}\n\tpushup(w,l,r);\n\treturn ;\n}\n\nTree query(LL l,LL r,LL w,LL lx,LL rx){\n\tif(l>=lx&&r<=rx){\n\t\treturn tree[w];\n\t}\n\tpushdown(w,l,r);\n\tLL mid=(l+r)>>1;\n\tif(mid>rx){\n\t\treturn query(l,mid,w<<1,lx,rx);\n\t}\n\tif(mid<=lx){\n\t\treturn query(mid+1,r,w<<1|1,lx,rx);\n\t}\n\tTree lf=query(l,mid,w<<1,lx,rx),rt=query(mid+1,r,w<<1|1,lx,rx),ans;\n\tans.lv=lf.lv;\n\tans.rv=rt.rv;\n\tans.qzup=lf.qzup;\n\tif(lf.qzup==(mid-l+1)&&lf.rv<rt.lv){\n\t\tans.qzup=(mid-l+1)+rt.qzup;\n\t}\n\tans.qzdn=lf.qzdn;\n\tif(lf.qzdn==(mid-l+1)&&lf.rv>rt.lv){\n\t\tans.qzdn=(mid-l+1)+rt.qzdn;\n\t}\n\tans.hzup=rt.hzup;\n\tif(rt.hzup==(r-mid+1+1)&&lf.rv<rt.lv){\n\t\tans.hzup=(r-mid+1+1)+lf.hzup;\n\t}\n\tans.hzdn=rt.hzdn;\n\tif(rt.hzdn==(r-mid+1+1)&&lf.rv>rt.lv){\n\t\tans.hzdn=(r-mid+1+1)+lf.hzdn;\n\t}\n\tans.qzmx=lf.qzmx;\n\tif(lf.qzmx==(mid-l+1)&&lf.rv>rt.lv){\n\t\tans.qzmx=max(ans.qzmx,(mid-l+1)+rt.qzdn);\n\t}\n\tif(lf.qzup==(mid-l+1)&&lf.rv<rt.lv){\n\t\tans.qzmx=max(ans.qzmx,(mid-l+1)+rt.qzmx);\n\t}\n\tans.hzmx=rt.hzmx;\n\tif(rt.hzdn==(r-mid+1+1)&&lf.rv>rt.lv){\n\t\tans.hzmx=max(ans.hzmx,(r-mid+1+1)+lf.hzmx);\n\t}\n\tif(rt.hzmx==(r-mid+1+1)&&lf.rv<rt.lv){\n\t\tans.hzmx=max(ans.hzmx,(r-mid+1+1)+lf.hzup);\n\t}\n\tans.mx=max(lf.mx,rt.mx);\n\tif(lf.rv<rt.lv){\n\t\tans.mx=max(ans.mx,lf.hzmx+rt.qzdn);\n\t}\n\tif(lf.rv>rt.lv){\n\t\tans.mx=max(ans.mx,lf.hzup+rt.qzmx);\n\t}\n\treturn ans; \n}\n\nint main(){\n\tscanf(\"%lld\",&n);\n\tfor(LL i=1;i<=n;i++) scanf(\"%lld\",&a[i]);\n\tbulid(1,n,1);\n\tscanf(\"%lld\",&q);\n\twhile(q--){\n\t\tscanf(\"%lld%lld%lld\",&lq,&rq,&xq);\n\t\tchange(1,n,1,lq,rq,xq);\n\t\tprintf(\"%lld\\n\",query(1,n,1,1,n).mx);\n\t}\n\treturn 0;\n}\n```\n\n\u53ef\u4ee5\u770b\u5230\u662f\u6709\u4e0d\u5c11\u91cd\u590d\uff0c\u65e0\u7528\u7684\u90e8\u5206\u3002\u4e8e\u662f\u6211\u4fee\u6539\u4e86\u4e00\u4e0b\u4ee3\u7801\uff08\u4f18\u5316\u4e86\u65e0\u7528\u90e8\u5206\uff0c\u7136\u540e\u52a0\u4e86\u4e00\u70b9\u6ce8\u91ca\uff09\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define LL long long\n\nconst LL N=3e5+10;\n\nLL n,a[N],q,lq,rq,xq;\n\nstruct Tree{\n\tLL lv;//\u533a\u95f4\u6700\u5de6\u7aef\u7684\u503c \n\tLL rv;//\u533a\u95f4\u6700\u53f3\u7aef\u7684\u503c\n//useless\tLL qzup;//\u533a\u95f4\u524d\u7f00\u6700\u957f\u4e0a\u5347\u5b50\u6bb5\n\tLL qzdn;//\u533a\u95f4\u524d\u7f00\u6700\u957f\u4e0b\u964d\u5b50\u6bb5\n\tLL hzup;//\u533a\u95f4\u540e\u7f00\u6700\u957f\u4e0a\u5347\u5b50\u6bb5\n//useless\tLL hzdn;//\u533a\u95f4\u540e\u7f00\u6700\u957f\u4e0b\u964d\u5b50\u6bb5\n\tLL qzmx;//\u533a\u95f4\u524d\u7f00\u6700\u957f\u5cf0\u9876\u5b50\u6bb5\n\tLL hzmx;//\u533a\u95f4\u540e\u7f00\u6700\u957f\u5cf0\u9876\u5b50\u6bb5\n\tLL mx;//\u533a\u95f4\u6700\u957f\u5cf0\u9876\u5b50\u6bb5 \uff08\u8fd9\u624d\u662f\u6211\u8981\u6c42\u7684\u554aQwQ\uff09 \n\tLL lazy;//\u61d2\u6807\u8bb0 \n}tree[N<<2]; \n\nvoid merge(Tree &x,Tree lf,Tree rt,LL l,LL r){\n\tLL mid=(l+r)>>1;\n\tLL lfl=l,lfr=mid,rtl=mid+1,rtr=r;\n\tx.lv=lf.lv;\n\tx.rv=rt.rv;\n\tx.qzdn=lf.qzdn;//\u76f4\u63a5\u7ee7\u627f\n\tif(lf.qzdn==(lfr-lfl+1)&&lf.rv>rt.lv){//\u53ef\u4ee5\u5411\u53f3\u62d3\u5c55 \n\t\tx.qzdn=(lfr-lfl+1)+rt.qzdn;\n\t}\n\tx.hzup=rt.hzup;//\u76f4\u63a5\u7ee7\u627f\n\tif(rt.hzup==(rtr-rtl+1)&&lf.rv<rt.lv){//\u53ef\u4ee5\u5411\u5de6\u62d3\u5c55 \n\t\tx.hzup=(rtr-rtl+1)+lf.hzup;\n\t}\n\tx.qzmx=lf.qzmx;//\u76f4\u63a5\u7ee7\u627f \n\tif(lf.qzmx==(lfr-lfl+1)&&lf.rv>rt.lv){//\u53ef\u4ee5\u5411\u53f3\u62d3\u5c55 \n\t\tx.qzmx=max(x.qzmx,(lfr-lfl+1)+rt.qzdn);\n\t}\n\tif(lf.hzup==(lfr-lfl+1)&&lf.rv<rt.lv){//\u53ef\u4ee5\u5411\u53f3\u62d3\u5c55 \n\t\tx.qzmx=max(x.qzmx,(lfr-lfl+1)+rt.qzmx);\n\t}\n\tx.hzmx=rt.hzmx;//\u76f4\u63a5\u7ee7\u627f\n\tif(rt.qzdn==(rtr-rtl+1)&&lf.rv>rt.lv){//\u53ef\u4ee5\u5411\u5de6\u62d3\u5c55 \n\t\tx.hzmx=max(x.hzmx,(rtr-rtl+1)+lf.hzmx);\n\t}\n\tif(rt.hzmx==(rtr-rtl+1)&&lf.rv<rt.lv){//\u53ef\u4ee5\u5411\u5de6\u62d3\u5c55 \n\t\tx.hzmx=max(x.hzmx,(rtr-rtl+1)+lf.hzup);\n\t}\n\tx.mx=max(lf.mx,rt.mx);//\u76f4\u63a5\u7ee7\u627f\n\tif(lf.rv>rt.lv){//\u5cf0\u70b9\u53ef\u4ee5\u5728\u5de6\u8fb9\uff0c\u4e14\u53ef\u4ee5\u5411\u53f3\u62d3\u5c55\n\t\tx.mx=max(x.mx,lf.hzmx+rt.qzdn);\n\t}\n\tif(lf.rv<rt.lv){//\u5cf0\u70b9\u53ef\u4ee5\u5728\u53f3\u8fb9\uff0c\u4e14\u53ef\u4ee5\u5411\u5de6\u62d3\u5c55\n\t\tx.mx=max(x.mx,lf.hzup+rt.qzmx);\n\t}\n\treturn ;\n}\n\nvoid pushup(LL w,LL l,LL r){\n\tmerge(tree[w],tree[w<<1],tree[w<<1|1],l,r);\n\treturn ;\n}\n\nvoid pushdown(LL w,LL l,LL r){\n\tif(tree[w].lazy==0) return ;\n\ttree[w<<1].lazy+=tree[w].lazy;\n\ttree[w<<1|1].lazy+=tree[w].lazy;\n\ttree[w<<1].lv+=tree[w].lazy;\n\ttree[w<<1].rv+=tree[w].lazy;\n\ttree[w<<1|1].lv+=tree[w].lazy;\n\ttree[w<<1|1].rv+=tree[w].lazy;\n\ttree[w].lazy=0;\n\treturn ;\n}\n\nvoid bulid(LL l,LL r,LL w){\n\ttree[w].hzmx=tree[w].hzup=tree[w].lv=tree[w].mx=tree[w].qzdn=tree[w].qzmx=tree[w].rv=0;\n\tif(l==r){\n\t\ttree[w].hzmx=tree[w].hzup=tree[w].mx=tree[w].qzdn=tree[w].qzmx=1;\n\t\ttree[w].lv=tree[w].rv=a[l];\n\t\treturn ;\n\t} \n\tLL mid=(l+r)>>1;\n\tbulid(l,mid,w<<1);\n\tbulid(mid+1,r,w<<1|1);\n\tpushup(w,l,r);\n\treturn ;\n}\n\nvoid change(LL l,LL r,LL w,LL lx,LL rx,LL x){\n\tif(l>=lx&&r<=rx){\n\t\ttree[w].lazy+=x;\n\t\ttree[w].lv+=x;\n\t\ttree[w].rv+=x;\n\t\treturn ;\n\t}\n\tpushdown(w,l,r);\n\tLL mid=(l+r)>>1;\n\tif(mid>=lx){\n\t\tchange(l,mid,w<<1,lx,rx,x);\n\t}\n\tif(mid<rx){\n\t\tchange(mid+1,r,w<<1|1,lx,rx,x);\n\t}\n\tpushup(w,l,r);\n\treturn ;\n}\n\nTree query(LL l,LL r,LL w,LL lx,LL rx){\n\tif(l>=lx&&r<=rx){\n\t\treturn tree[w];\n\t}\n\tpushdown(w,l,r);\n\tLL mid=(l+r)>>1;\n\tif(mid>rx){\n\t\treturn query(l,mid,w<<1,lx,rx);\n\t}\n\tif(mid<=lx){\n\t\treturn query(mid+1,r,w<<1|1,lx,rx);\n\t}\n\tTree lf=query(l,mid,w<<1,lx,rx),rt=query(mid+1,r,w<<1|1,lx,rx),ans;\n\tmerge(ans,lf,rt,lx,rx);\n\treturn ans;\n}\n\nint main(){\n\tscanf(\"%lld\",&n);\n\tfor(LL i=1;i<=n;i++) scanf(\"%lld\",&a[i]);\n\tbulid(1,n,1);\n\tscanf(\"%lld\",&q);\n\twhile(q--){\n\t\tscanf(\"%lld%lld%lld\",&lq,&rq,&xq);\n\t\tchange(1,n,1,lq,rq,xq);\n\t\tprintf(\"%lld\\n\",query(1,n,1,1,n).mx);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1669868507,
        "uid": 298994,
        "name": "small_peter",
        "ccfLevel": 6,
        "title": "CF739C Alyona and towers \u9898\u89e3"
    },
    {
        "content": "#  CF739C Alyona and towers\n\n## Analysis\n\n\u611f\u89c9\u548c\u8bb8\u591a\u7ebf\u6bb5\u6811\u9898\u5f88\u76f8\u4f3c\uff0c\u4e8e\u662f\u8003\u8651\u7ebf\u6bb5\u6811\u3002\n\n\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u7ef4\u62a4\u8d77\u6765\u975e\u5e38\u9ebb\u70e6\uff0c\u8003\u8651\u53ef\u4ee5\u5dee\u5206\u5b83\uff0c\u7136\u540e\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u6c42\u6700\u957f\u7684\u4e00\u4e2a\u6b63\u6570\u6bb5\u63a5\u4e0a\u4e00\u4e2a\u8d1f\u6570\u6bb5\u3002\n\n\u6211\u4eec\u7ed9\u7ebf\u6bb5\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\u7ed9 $6$ \u4e2a\u4fe1\u606f\uff1a$\\text{lv}$ \u548c $\\text{rv}$ \u8868\u793a\u6700\u5de6\u8fb9\u7684\u503c\u548c\u6700\u53f3\u8fb9\u7684\u503c\uff0c$\\text{lans}$ \u548c $\\text{rans}$ \u8868\u793a\u4ece\u6700\u5de6\u4fa7\u5f00\u59cb\u548c\u6700\u53f3\u4fa7\u5f00\u59cb\u7684\u7b54\u6848\uff0c$\\text{len}$ \u8868\u793a\u8be5\u8282\u70b9\u7684\u957f\u5ea6\uff0c$\\text{ans}$ \u8868\u793a\u8be5\u8282\u70b9\u7684\u7b54\u6848\u3002\n\n\u5f53\u5de6\u53f3\u8282\u70b9\u5408\u5e76\u4fe1\u606f\u65f6\uff0c\u5c31\u53ef\u4ee5\u5148\u5224\u65ad\u5de6\u7aef\u70b9 $\\text{rv}$ \u548c\u53f3\u65ad\u70b9 $\\text{lv}$ \u662f\u5426\u7b26\u5408\u8981\u6c42\uff0c\u7136\u540e\u518d\u9009\u62e9\u6027\u7684\u4fe1\u606f\u3002\n\n\u5408\u5e76\u8fc7\u7a0b\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u7684\uff0c\u7565\u52a0\u601d\u8003\u5c31\u53ef\u4ee5\u77e5\u9053\u4e86\u3002\n\n## code\n\n\u91c7\u7528 $\\text{zkw}$ \u7ebf\u6bb5\u6811\u5b9e\u73b0\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#pragma GCC optimize(2)\nusing namespace std;\n\nconst int N = 3e5 + 10;\nint n, a[N], limit, m;\nlong long s[N];\nstruct Node {\n    long long lv, rv, ans, lans, rans;\n    int len;\n} w[N << 2];\ninline void pushup(Node &u, Node ls, Node rs) {\n    u.lv = ls.lv, u.rv = rs.rv, u.len = ls.len + rs.len, u.ans = max(ls.ans, rs.ans), u.lans = ls.lans, u.rans = rs.rans;\n    if (ls.rv > 0 || rs.lv < 0) {\n        u.ans = max(u.ans, ls.rans + rs.lans);\n        if (ls.lans == ls.len) u.lans = ls.len + rs.lans;\n        if (rs.rans == rs.len) u.rans = rs.len + ls.rans;\n    }\n}\nint main() {\n    cin >> n;\n    for (int i = 1; i <= n; i++) scanf(\"%d\", &a[i]), s[i] = a[i] - a[i - 1];\n    cin >> m, s[1] = 0, limit = 1;\n    while (limit <= n) limit <<= 1;\n    for (int i = 1; i <= n; i++) w[limit + i] = {s[i], s[i], (bool)s[i], (bool)s[i], (bool)s[i], 1};\n    for (int i = limit; i; i--) pushup(w[i], w[i << 1], w[i << 1 | 1]);\n    int l, r, d;\n    for (int i = 1; i <= m; i++) {\n        scanf(\"%d %d %d\", &l, &r, &d);\n        if (l != 1) {\n            s[l] += d, w[limit + l] = {s[l], s[l], (bool)s[l], (bool)s[l], (bool)s[l], 1};\n            for (int i = limit + l >> 1; i; i >>= 1) pushup(w[i], w[i << 1], w[i << 1 | 1]);\n        }\n        if (r != n) {\n            s[r + 1] -= d, w[limit + r + 1] = {s[r + 1], s[r + 1], (bool)s[r + 1], (bool)s[r + 1], (bool)s[r + 1], 1};\n            for (int i = limit + r + 1 >> 1; i; i >>= 1) pushup(w[i], w[i << 1], w[i << 1 | 1]);\n        }\n        printf(\"%lld\\n\", w[1].ans + 1);\n    }\n    return 0;\n}\n```",
        "postTime": 1669764431,
        "uid": 615348,
        "name": "zhouershan",
        "ccfLevel": 7,
        "title": "CF739C Alyona and towers \u9898\u89e3"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/tttttttle/p/16643433.html)\r\n\r\n\u56fe\u7247\u52a0\u8f7d\u4e0d\u51fa\u6765\u5efa\u8bae\u7528\u4e0a\u9762\u7684\u94fe\u63a5\u9605\u8bfb\u3002\r\n\r\n## \u9898\u610f\uff1a\r\n\r\n\u7ef4\u62a4\u533a\u95f4\u52a0\uff0c\u5168\u5c40\u6700\u957f\u5355\u5cf0\u5e8f\u5217\u3002\r\n\r\n## Solution\uff1a\r\n\r\n\u7ef4\u62a4 $8$ \u4e2a\u91cf\u3002\r\n\r\n$lval$\uff1a\u5de6\u7aef\u70b9\u7684\u6743\u503c\u3002\r\n\r\n$rval$\uff1a\u53f3\u7aef\u70b9\u7684\u6743\u503c\u3002\r\n\r\n$lmax$\uff1a\u4ee5\u5de6\u7aef\u70b9\u5f00\u59cb\u7684\u6700\u957f\u7684\u4e0b\u964d\u5e8f\u5217\u957f\u5ea6\u3002\r\n\r\n$rmax$\uff1a\u4ee5\u53f3\u7aef\u70b9\u7ed3\u675f\u7684\u6700\u957f\u7684\u4e0a\u5347\u5e8f\u5217\u957f\u5ea6\u3002\r\n\r\n$lans$\uff1a\u4ee5\u5de6\u7aef\u70b9\u5f00\u59cb\u7684\u6700\u957f\u7684\u5355\u5cf0\u5e8f\u5217\u957f\u5ea6\u3002\r\n\r\n$rans$\uff1a\u4ee5\u53f3\u7aef\u70b9\u7ed3\u675f\u7684\u6700\u957f\u7684\u5355\u5cf0\u5e8f\u5217\u957f\u5ea6\u3002\r\n\r\n$ans$\uff1a \u533a\u95f4\u5185\u6700\u957f\u7684\u5355\u5cf0\u5e8f\u5217\u957f\u5ea6\u3002\r\n\r\n$tag$\uff1a\u533a\u95f4\u52a0\u6cd5\u61d2\u6807\u8bb0\u3002\r\n\r\n\u8003\u8651\u600e\u4e48\u7528\u5de6\u53f3\u4e24\u4e2a\u513f\u5b50\u66f4\u65b0\u7236\u8282\u70b9\u7684\u4fe1\u606f\u3002\r\n\r\n![](https://img2022.cnblogs.com/blog/2882377/202208/2882377-20220831153331837-1331456490.png)\r\n\r\n\u7528 $lson$ \u6765\u8868\u793a\u5de6\u513f\u5b50\uff0c$rson$ \u6765\u8868\u793a\u53f3\u513f\u5b50\uff0c$rt$ \u6765\u8868\u793a\u7236\u8282\u70b9\u3002\r\n\r\n## $lval$\r\n\r\n\u663e\u7136\u7236\u8282\u70b9\u7684 $lval$ \u662f\u5de6\u513f\u5b50\u7684 $lval$\u3002\r\n\r\n## $rval$\r\n\r\n\u663e\u7136\u7236\u8282\u70b9\u7684 $rval$ \u662f\u53f3\u513f\u5b50\u7684 $rval$\u3002\r\n\r\n## $lmax$\r\n\r\n![](https://img2022.cnblogs.com/blog/2882377/202208/2882377-20220831153621597-342695701.png)\r\n\r\n\r\n\u5982\u679c\u8bf4\u5de6\u513f\u5b50\u7684 $lmax$ \u7b49\u4e8e\u5de6\u513f\u5b50\u7684\u533a\u95f4\u957f\u5ea6\uff0c\u8bf4\u660e\u4e86\u5de6\u533a\u95f4\u662f\u4e2a\u4e0b\u964d\u533a\u95f4\uff0c\u5982\u679c\u540c\u65f6\u5de6\u513f\u5b50\u7684 $rval$ \u5927\u4e8e\u4e86\u53f3\u513f\u5b50\u7684 $lval$ \u8bf4\u660e\u4e86\u7236\u8282\u70b9\u7684 $lmax$ \u80fd\u5411\u53f3\u533a\u95f4\u4f38\u5c55\uff0c\u8fd9\u4e2a\u65f6\u5019 $rt.lmax = lson.lmax + rson.lmax$\u3002\r\n\r\n![](https://img2022.cnblogs.com/blog/2882377/202208/2882377-20220831153953862-851309421.png)\r\n\r\n\r\n\u5426\u5219\u65e0\u6cd5\u8de8\u8fc7\u53f3\u533a\u95f4\uff0c\u76f4\u63a5\u7ee7\u627f\u5de6\u513f\u5b50\u7684\u503c\uff1a$rt.lmax = lson.lmax$\u3002\r\n\r\n##  $rmax$\r\n\r\n![](https://img2022.cnblogs.com/blog/2882377/202208/2882377-20220831154027895-1379254488.png)\r\n\r\n\r\n\r\n\u5982\u679c\u8bf4\u53f3\u513f\u5b50\u7684 $rmax$ \u7b49\u4e8e\u53f3\u513f\u5b50\u7684\u533a\u95f4\u957f\u5ea6\uff0c\u8bf4\u660e\u4e86\u53f3\u533a\u95f4\u662f\u4e2a\u4e0a\u5347\u533a\u95f4\uff0c\u5982\u679c\u540c\u65f6\u5de6\u513f\u5b50\u7684 $rval$ \u5c0f\u4e8e\u4e86\u53f3\u513f\u5b50\u7684 $lval$ \u8bf4\u660e\u4e86\u7236\u8282\u70b9\u7684 $rmax$ \u80fd\u5411\u5de6\u533a\u95f4\u4f38\u5c55\uff0c\u8fd9\u4e2a\u65f6\u5019 $rt.rmax = lson.rmax + rson.rmax$\u3002\r\n\r\n![](https://img2022.cnblogs.com/blog/2882377/202208/2882377-20220831154133290-1499560588.png)\r\n\r\n\u5426\u5219\u65e0\u6cd5\u8de8\u8fc7\u5de6\u533a\u95f4\uff0c\u76f4\u63a5\u7ee7\u627f\u53f3\u513f\u5b50\u7684\u503c\uff1a $rt.rmax = rson.rmax$\u3002\r\n\r\n## $lans$\r\n\r\n![](https://img2022.cnblogs.com/blog/2882377/202208/2882377-20220831154621088-2102604441.png)\r\n\r\n\u5982\u679c\u8bf4\u5de6\u513f\u5b50\u7684 $rmax$ \u7b49\u4e8e\u5de6\u513f\u5b50\u7684\u533a\u95f4\u957f\u5ea6\uff0c\u8bf4\u660e\u4e86\u5de6\u513f\u5b50\u662f\u4e2a\u4e0a\u5347\u533a\u95f4\u3002\r\n\r\n\u8fd9\u4e2a\u65f6\u5019\u5206\u4e24\u79cd\u60c5\u51b5\uff1a\r\n- $lson.rval < rson.lval$ \u8bf4\u660e\u4e86\u8fd8\u80fd\u901a\u8fc7\u53f3\u513f\u5b50\u7684 $lans$ \u7ee7\u7eed\u6269\u5c55\uff1a$rt.lans = lson.rmax + rson.lans$\u3002\r\n\r\n- $lson.rval > rson.lval$ \u8bf4\u660e\u4e86\u53ea\u80fd\u901a\u8fc7\u53f3\u513f\u5b50\u7684 $lmax$ \u7ee7\u7eed\u6269\u5c55\uff1a $rt.lans = lson.rmax + rson.lmax$\u3002\r\n\r\n![](https://img2022.cnblogs.com/blog/2882377/202208/2882377-20220831155009328-290452649.png)\r\n\r\n\u5982\u679c\u8bf4\u5de6\u513f\u5b50\u7684 $lans$ \u7b49\u4e8e\u533a\u95f4\u957f\u5ea6\uff0c\u60f3\u7528\u53f3\u513f\u5b50\u6269\u5c55\u7684\u8bdd\uff0c\u5fc5\u987b\u6ee1\u8db3 $lson.rval > rson.lval$\uff0c\u8fd9\u4e2a\u65f6\u5019\uff1a$rt.lans = lson.lans + rson.lmax$\u3002 \r\n\r\n\u5426\u5219\u65e0\u6cd5\u901a\u8fc7\u53f3\u533a\u95f4\u6765\u66f4\u65b0\uff0c\u76f4\u63a5\u7ee7\u627f\u5de6\u513f\u5b50\u7684\u503c\uff1a$rt.lans = lson.lans$\u3002\r\n\r\n## $rans$\r\n\r\n![](https://img2022.cnblogs.com/blog/2882377/202208/2882377-20220831155428033-1863683230.png)\r\n\r\n\u5982\u679c\u8bf4\u53f3\u513f\u5b50\u7684 $lmax$ \u7b49\u4e8e\u53f3\u513f\u5b50\u7684\u533a\u95f4\u957f\u5ea6\uff0c\u8bf4\u660e\u4e86\u53f3\u513f\u5b50\u662f\u4e2a\u4e0b\u964d\u533a\u95f4\u3002\r\n\r\n\u8fd9\u4e2a\u65f6\u5019\u5206\u4e24\u79cd\u60c5\u51b5\uff1a\r\n\r\n- $lson.rval > rson.lval$ \u8bf4\u660e\u4e86\u8fd8\u80fd\u901a\u8fc7\u5de6\u513f\u5b50\u7684 $rans$ \u7ee7\u7eed\u6269\u5c55\uff1a$rt.rans = lson.rans + rson.lmax$\u3002\r\n\r\n- $lson.rval < rson.lval$ \u8bf4\u660e\u4e86\u53ea\u80fd\u901a\u8fc7\u5de6\u513f\u5b50\u7684 $rmax$ \u7ee7\u7eed\u6269\u5c55\uff1a $rt.rans = lson.rmax + rson.lmax$\u3002\r\n\r\n![](https://img2022.cnblogs.com/blog/2882377/202208/2882377-20220831155728879-669242948.png)\r\n\r\n\r\n\u5982\u679c\u8bf4\u53f3\u513f\u5b50\u7684 $lans$ \u7b49\u4e8e\u533a\u95f4\u957f\u5ea6\uff0c\u60f3\u7528\u5de6\u513f\u5b50\u6269\u5c55\u7684\u8bdd\uff0c\u5fc5\u987b\u6ee1\u8db3 $lson.rval < rson.lval$\uff0c\u8fd9\u4e2a\u65f6\u5019\uff1a$rt.rans = lson.rmax + rson.lans$\u3002 \r\n\r\n\u5426\u5219\u65e0\u6cd5\u901a\u8fc7\u53f3\u533a\u95f4\u6765\u66f4\u65b0\uff0c\u76f4\u63a5\u7ee7\u627f\u5de6\u513f\u5b50\u7684\u503c\uff1a$rt.rans = rson.rans$\u3002\r\n\r\n## $ans$\r\n\r\n![](https://img2022.cnblogs.com/blog/2882377/202208/2882377-20220831160122166-839361757.png)\r\n\r\n\u7b54\u6848\u53ef\u80fd\u662f\u5de6\u53f3\u513f\u5b50\u7b54\u6848\u7684\u6700\u5927\u503c\u3002\r\n\r\n![](https://img2022.cnblogs.com/blog/2882377/202208/2882377-20220831160201578-490810725.png)\r\n\r\n\u4e5f\u53ef\u80fd\u662f $lson.rmax $ \u548c $rson.lmax$ \u63a5\u8d77\u6765\u3002\r\n\r\n![](https://img2022.cnblogs.com/blog/2882377/202208/2882377-20220831160246312-987541829.png)\r\n\r\n\r\n\u4e5f\u53ef\u80fd\u662f $lson.lans$ \u548c $rson.lmax$ \u63a5\u8d77\u6765\u3002\r\n\r\n![](https://img2022.cnblogs.com/blog/2882377/202208/2882377-20220831160319493-656971773.png)\r\n\r\n\r\n\u4e5f\u53ef\u80fd\u662f $rson.rans$ \u548c $lson.rmax$ \u63a5\u8d77\u6765\u3002\r\n\r\n\u6700\u540e\u53d6\u4e2a $\\max$ \u5c31\u884c\u4e86\u3002\r\n\r\n\u7136\u540e\u4fee\u6539\u5c31\u662f\u666e\u901a\u7684\u533a\u95f4\u4fee\u6539\u3002\r\n\r\n```cpp\r\n/**\r\n *\tauthor: TLE_Automation\r\n *\tcreater: 2022.8.28\r\n**/\r\n#include<cmath>\r\n#include<queue>\r\n#include<cstdio>\r\n#include<bitset>\r\n#include<cstring>\r\n#include<iostream>\r\n#include<algorithm>\r\n#define gc getchar \r\n#define INF 0x3f3f3f3f\r\n#define int long long\r\nusing namespace std;\r\ntypedef long long ll;\r\nconst int Maxn = 6e5 + 10;\r\nconst int mod = 998244353;\r\nconst ll inf = 0x3f3f3f3f3f3f3f3f;\r\n#define debug cout << \"i ak ioi\" << \"\\n\"\r\ninline void print(int x) {if (x < 0) putchar('-'), x = -x; if(x > 9) print(x / 10); putchar(x % 10 + '0');}\r\ninline char readchar() {static char buf[100000], *p1 = buf, *p2 = buf; return p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 100000, stdin), p1 == p2) ? EOF : *p1++;}\r\ninline int read() { int res = 0, f = 0; char ch = gc();for (; !isdigit(ch); ch = gc()) f |= (ch == '-'); for (; isdigit(ch); ch = gc()) res = (res << 1) + (res << 3) + (ch ^ '0'); return f ? -res : res;}\r\n\r\nnamespace Seg {\r\n\t#define lson rt << 1\r\n\t#define rson rt << 1 | 1\r\n\tstruct Node { int l, r, len, lval, rval, lmax, rmax, lans, rans, ans, tag; } tree[Maxn << 2];\r\n\tvoid pushup(int rt) {\r\n\t\ttree[rt].lval = tree[lson].lval, tree[rt].rval = tree[rson].rval;\r\n\t\t\r\n\t\tif(tree[lson].lmax == tree[lson].len && tree[lson].rval > tree[rson].lval) \r\n\t\t\ttree[rt].lmax = tree[lson].lmax + tree[rson].lmax;\r\n\t\telse tree[rt].lmax = tree[lson].lmax;\r\n\t\t\r\n\t\tif(tree[rson].rmax == tree[rson].len && tree[rson].lval > tree[lson].rval) \r\n\t\t\ttree[rt].rmax = tree[rson].rmax + tree[lson].rmax;\r\n\t\telse tree[rt].rmax = tree[rson].rmax;\r\n\t\t\r\n\t\tif(tree[lson].rmax == tree[lson].len && tree[lson].rval < tree[rson].lval) \r\n\t\t\ttree[rt].lans = tree[lson].rmax + tree[rson].lans;\r\n\t\telse if(tree[lson].rmax == tree[lson].len && tree[lson].rval > tree[rson].lval) \r\n\t\t\ttree[rt].lans = tree[lson].rmax + tree[rson].lmax;\r\n\t\telse if(tree[lson].lans == tree[lson].len && tree[lson].rval > tree[rson].lval)\r\n\t\t\ttree[rt].lans = tree[lson].lans + tree[rson].lmax;\r\n\t\telse tree[rt].lans = tree[lson].lans;\r\n\t\t\r\n\t\tif(tree[rson].lmax == tree[rson].len && tree[rson].lval < tree[lson].rval)\r\n\t\t\ttree[rt].rans = tree[rson].rans + tree[lson].rans;\r\n\t\telse if(tree[rson].lmax == tree[rson].len && tree[rson].lval > tree[lson].rval)\r\n\t\t\ttree[rt].rans = tree[rson].rans + tree[lson].rmax;\r\n\t\telse if(tree[rson].rans == tree[rson].len && tree[lson].rval < tree[rson].lval) \r\n\t\t\ttree[rt].rans = tree[rson].rans + tree[lson].rmax;\r\n\t\telse tree[rt].rans = tree[rson].rans;\r\n\t\t\r\n\t\ttree[rt].ans = max(tree[lson].ans, tree[rson].ans);\r\n\t\tif(tree[lson].rval != tree[rson].lval )tree[rt].ans = max(tree[rt].ans, tree[lson].rmax + tree[rson].lmax);\r\n\t\tif(tree[lson].rval < tree[rson].lval) tree[rt].ans = max(tree[rt].ans, tree[lson].rmax + tree[rson].lans);\r\n\t\tif(tree[lson].rval > tree[rson].lval) tree[rt].ans = max(tree[rt].ans, tree[rson].lmax + tree[lson].rans);\r\n\t}\r\n\tvoid build(int rt, int l, int r) {\r\n\t\ttree[rt].len = r - l + 1;\r\n\t\ttree[rt].l = l, tree[rt].r = r;\r\n\t\tif(l == r) {\r\n\t\t\tint x = read();\r\n\t\t\ttree[rt].lval = tree[rt].rval = x;\r\n\t\t\ttree[rt].lmax = tree[rt].rmax = 1;\r\n\t\t\ttree[rt].lans = tree[rt].rans = tree[rt].ans = 1;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tint mid = (l + r) >> 1;\r\n\t\tbuild(lson, l, mid), build(rson, mid + 1, r);\r\n\t\tpushup(rt);\r\n\t}\r\n\tvoid pushdown(int rt) {\r\n\t\tif(!tree[rt].tag) return;\r\n\t\ttree[lson].tag += tree[rt].tag, tree[rson].tag += tree[rt].tag;\r\n\t\ttree[lson].lval += tree[rt].tag, tree[lson].rval += tree[rt].tag;\r\n\t\ttree[rson].lval += tree[rt].tag, tree[rson].rval += tree[rt].tag;\t\t\r\n\t\ttree[rt].tag = 0;\r\n\t}\r\n\tvoid change(int rt, int l, int r, int k) {\r\n\t\tif(tree[rt].l > r || tree[rt].r < l) return;\r\n\t\tif(tree[rt].l >= l && tree[rt].r <= r) {\r\n\t\t\ttree[rt].lval += k, tree[rt].rval += k, tree[rt].tag += k; return;\r\n\t\t} pushdown(rt);\r\n\t\tchange(lson, l, r, k), change(rson, l, r, k), pushup(rt);\r\n\t} \r\n} \r\nusing namespace Seg;\r\nsigned main() \t\r\n{\r\n\t\r\n//\tfreopen(\"in.in\", \"r\", stdin);\r\n//\tfreopen(\"baoli.out\", \"w\", stdout);\r\n\tint n = read();\r\n\tbuild(1, 1, n);\r\n\tint Q = read();\r\n\tfor(int i = 1; i <= Q; i++) {\r\n\t\tint l = read(), r = read(), k = read();\r\n\t\tchange(1, l, r, k), printf(\"%lld\\n\", tree[1].ans);\r\n\t}\r\n\treturn (0 - 0);\r\n}\r\n\r\n/**\r\n * _ooOoo_\r\n * o8888888o\r\n * 88\" . \"88\r\n * (| -_- |)\r\n *  O\\ = /O\r\n * ___/`---'\\____\r\n * .   ' \\\\| |// `.\r\n * / \\\\||| : |||// \\\r\n * / _||||| -:- |||||- \\\r\n * | | \\\\\\ - /// | |\r\n * | \\_| ''\\---/'' | |\r\n * \\ .-\\__ `-` ___/-. /\r\n * ___`. .' /--.--\\ `. . __\r\n * .\"\" '< `.___\\_<|>_/___.' >'\"\".\r\n * | | : `- \\`.;`\\ _ /`;.`/ - ` : | |\r\n * \\ \\ `-. \\_ __\\ /__ _/ .-` / /\r\n * ======`-.____`-.___\\_____/___.-`____.-'======\r\n * `\t=---='\r\n *          .............................................\r\n *           \u4f5b\u66f0\uff1abug\u6cdb\u6ee5\uff0c\u6211\u5df2\u762b\u75ea\uff01\r\n */\r\n```",
        "postTime": 1661933189,
        "uid": 396974,
        "name": "Buried_Dream",
        "ccfLevel": 4,
        "title": "CF739C Alyona and towers"
    },
    {
        "content": "[$\\tt Link$](/problem/CF739C)\u3002\n\n\u7b80\u5355 $^{\\ast}2500$\uff0c\u5bc4\u4e4b\u3002\n\n---\n\n\u4e00\u773c\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5e8f\u5217\uff0c\u7136\u540e\u7ebf\u6bb5\u6811\u7684\u8282\u70b9\u7ef4\u62a4\u533a\u95f4\u7684\u7b54\u6848\u3002\n\n\u8003\u8651\u8282\u70b9\u7684 `push_up`\uff0c\u6211\u4eec\u5e94\u8be5\u8ba8\u8bba\u6700\u957f\u7684\u5355\u5cf0\u5b50\u6bb5\n\n1. \u4e0a\u5347\u90e8\u5206\u548c\u4e0b\u964d\u90e8\u5206\u5168\u90e8\u5728\u5de6\u8fb9/\u53f3\u8fb9\n2. \u4e0a\u5347\u5168\u90e8\u5728\u5de6\uff0c\u4e0b\u964d\u90e8\u5206\u5728\u5de6\u90e8\u5206\u5728\u53f3\n3. \u4e0b\u964d\u5168\u90e8\u5728\u53f3\uff0c\u4e0a\u5347\u90e8\u5206\u5728\u5de6\u90e8\u5206\u5728\u53f3\n\n\u4e3a\u4e86\u5b9e\u73b0\u7b2c\u4e8c\u3001\u4e09\u79cd\u60c5\u51b5\u7684\u5224\u65ad\uff0c\u6211\u4eec\u5728\u7ebf\u6bb5\u6811\u7684\u8282\u70b9\u4e2d\u7ef4\u62a4\uff1a\n\n+ \u4ece\u5de6\u8fb9\u5f00\u59cb\u7684\u6700\u957f\u4e0b\u964d\u5b50\u6bb5 $ld$\n+ \u4ece\u53f3\u8fb9\u5f00\u59cb\u7684\u6700\u957f\u4e0a\u5347\u5b50\u6bb5 $ru$\n+ \u4ece\u5de6\u8fb9\u5f00\u59cb\u7684\u6700\u957f\u5355\u5cf0\u5b50\u6bb5 $al$\n+ \u4ece\u53f3\u8fb9\u5f00\u59cb\u7684\u6700\u957f\u5355\u5cf0\u5b50\u6bb5 $ar$\n\n\u8ba8\u8bba\u7b54\u6848 $ans$ \u5982\u4f55\u5f97\u5230\uff0c\u5e94\u8be5\u662f\u4ee5\u4e0b\u4e09\u79cd\u60c5\u51b5\u53d6 $\\max$\u3002\n\n* \u7b2c\u4e00\u79cd\uff1a\u5de6\u8fb9\u7684\u7b54\u6848\uff0c\u53f3\u8fb9\u7684\u7b54\u6848\u3002\n* \u7b2c\u4e8c\u79cd\uff1a\u5224\u65ad $mid$ \u5904\u662f\u5426\u6ee1\u8db3\u5355\u8c03\u4e0b\u964d\uff0c\u7136\u540e\u628a\u5de6\u8fb9\u7684 $ar$ \u548c\u53f3\u8fb9\u7684 $ld$ \u52a0\u8d77\u6765\u3002\n* \u7b2c\u4e09\u79cd\uff1a\u5224\u65ad $mid$ \u5904\u662f\u5426\u6ee1\u8db3\u5355\u8c03\u4e0a\u5347\uff0c\u7136\u540e\u628a\u5de6\u8fb9\u7684 $ru$ \u548c\u53f3\u8fb9\u7684 $al$ \u52a0\u8d77\u6765\u3002\n\n\u7136\u540e\u8ba8\u8bba $ld,ru,al,ar$ \u7684\u7ef4\u62a4\u3002\n\n+ $ld$ \u8ba8\u8bba *\u5de6\u8fb9\u524d\u7f00* \u548c *\u5de6\u8fb9\u5168\u90e8\uff0c\u53f3\u8fb9\u524d\u7f00* \u4e24\u79cd\u60c5\u51b5\n+ $ru$ \u8ba8\u8bba *\u53f3\u8fb9\u540e\u7f00* \u548c *\u53f3\u8fb9\u5168\u90e8\uff0c\u5de6\u8fb9\u540e\u7f00* \u4e24\u79cd\u60c5\u51b5\n+ $al$ \u8ba8\u8bba *\u5de6\u8fb9\u524d\u7f00* \u548c *\u4e0a\u5347\u5168\u90e8\u5728\u5de6\uff0c\u4e0b\u964d\u90e8\u5206\u5728\u5de6\u90e8\u5206\u5728\u53f3* \u548c *\u4e0a\u5347\u90e8\u5206\u5728\u5de6\u90e8\u5206\u5728\u53f3\uff0c\u4e0b\u964d\u5168\u90e8\u5728\u53f3* \u4e24\u79cd\u60c5\u51b5\n+ $ar$ \u8ba8\u8bba *\u53f3\u8fb9\u524d\u7f00* \u548c *\u4e0b\u964d\u5168\u90e8\u5728\u53f3\uff0c\u4e0a\u5347\u90e8\u5206\u5728\u5de6\u90e8\u5206\u5728\u53f3* \u548c *\u4e0b\u964d\u90e8\u5206\u5728\u5de6\u90e8\u5206\u5728\u53f3\uff0c\u4e0a\u5347\u5168\u90e8\u5728\u5de6* \u4e24\u79cd\u60c5\u51b5\n\n\u4e3a\u4e86\u5224\u65ad $mid$ \u5904\u7684\u5355\u8c03\u6027\uff0c\u6211\u4eec\u7ef4\u62a4\u6700\u5de6\u503c $lv$ \u548c\u6700\u53f3\u503c $rv$\u3002\n\n\u8fd8\u8981\u7ef4\u62a4\u533a\u95f4\u7684\u957f\u5ea6 $len$\u3002\n\n\u8f6c\u79fb\u770b\u4e0b\u9762 $\\downarrow$\u3002\n\n```cpp\nnode mrg(const node &a,const node &b){\n    node res;\n    res.len = a.len + b.len;\n    res.lv = a.lv; res.rv = b.rv;\n    res.ld = a.ld; res.ru = b.ru;\n    if(a.ld == a.len && a.rv > b.lv) res.ld = a.len + b.ld;\n    if(b.ru == b.len && a.rv < b.lv) res.ru = b.len + a.ru;\n    res.al = a.al; res.ar = b.ar;\n    if(a.al == a.len && a.rv > b.lv) res.al = a.len + b.ld;\n    if(a.ru == a.len && a.rv < b.lv) res.al = a.len + b.al;\n    if(b.ar == b.len && a.rv < b.lv) res.ar = b.len + a.ru;\n    if(b.ld == b.len && a.rv > b.lv) res.ar = b.len + a.ar;\n    res.ans = max(a.ans,b.ans);\n    if(a.rv > b.lv) chkmax(res.ans,a.ar + b.ld);\n    if(a.rv < b.lv) chkmax(res.ans,a.ru + b.al);\n    return res;\n}\n```\n\n\u53e6\uff1a\u53ef\u4ee5\u5dee\u5206\u540e\u7ef4\u62a4\u6b63\u8d1f\u6bb5\uff0c\u66f4\u597d\u5199\u3002",
        "postTime": 1660641094,
        "uid": 368107,
        "name": "xfrvq",
        "ccfLevel": 7,
        "title": "CF739C \u7ebf\u6bb5\u6811"
    },
    {
        "content": " \u9898\u610f\uff1a\n\n- \u533a\u95f4\u52a0\uff0c\u533a\u95f4\uff08\u5168\u5c40\uff09\u6c42\u6700\u957f\u5408\u5531\u961f\u5217\u3002\n\n\u91cd\u70b9\u5206\u6790 pushup \u90e8\u5206\uff1a\n\n\u4e0b\u6587 $Len(k)$ \u8868\u793a\u533a\u95f4 $k$ \u7684\u957f\u5ea6\uff0c$ls,rs$ \u8868\u793a\u5de6\u53f3\u513f\u5b50\u3002\u65b9\u4fbf\u8d77\u89c1\uff0c\u8ba1 $x=\\max\\{y\\}$ \u8868\u793a\u5c06 $x$ \u8d4b\u503c\u4e3a $x,y$ \u4e2d\u7684\u8f83\u5927\u6570\u3002\n\n\u8ba1 $last$ \u4e3a\u533a\u95f4\u6700\u540e\u4e00\u4e2a\u6570\uff1a\n\n- $last_k = last_{rs}$\u3002\n\n\u8ba1 $first$ \u4e3a\u533a\u95f4\u7b2c\u4e00\u4e2a\u6570\uff1a\n\n- $first_k = first_{ls}$\u3002\n\n\u8ba1 $len$ \u4e3a\u6700\u957f\u5408\u5531\u961f\u5f62\uff1a\n- $len_k = \\max\\{len_{ls},len_{rs}\\}$\uff1b\n\n- \u5982\u679c $last_{ls} > first_{rs}$\uff0c\u5219 $len_k = \\max\\{suclen_{ls} + predown_{rs}\\}$\uff1b\n- \u5982\u679c $last_{ls} < fisrt_{rs}$\uff0c\u5219 $len_k = \\max\\{sucup_{ls} + prelen_{rs}\\}$\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/5nperfw6.png)\n\n\u5176\u4e2d $suclen$ \u4e3a\u6700\u957f\u540e\u7f00\u5408\u5531\u961f\u5f62\uff1a\n\n- $suclen_k = \\max\\{suclen_{rs}\\}$\uff1b\n- \u5982\u679c $len_{rs} = Len(rs)$ \u4e14 $last_{ls} < first_{rs}$\uff0c\u5219 $suclen_k = \\max\\{sucup_{ls} + len_{rs}\\}$\uff1b\n- \u5982\u679c $sucdown_{rs} = Len(rs)$ \u4e14 $last_{ls} > first_{rs}$\uff0c\u5219 $suclen_k = \\max\\{suclen_{ls} + sucdown_{rs}\\}$\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/8v3k7hyp.png)\n\n\u5176\u4e2d $prelen$ \u4e3a\u6700\u957f\u524d\u7f00\u5408\u5531\u961f\u5f62\uff1a\n\n- $prelen_k = \\max\\{prelen_{ls}\\}$\uff1b\n- \u5982\u679c $len_{ls} = Len(ls)$ \u4e14 $last_{ls} > first_{rs}$\uff0c\u5219 $prelen_k = \\max\\{len_{ls} + predown_{rs}\\}$\uff1b\n- \u5982\u679c $preup_{ls} = Len(ls)$ \u4e14 $last_{ls} < first_{rs}$\uff0c\u5219 $prelen_k = \\max\\{preup_{ls} + prelen_{rs}\\}$\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/x1hxuik8.png)\n\n\u5176\u4e2d $predown$ \u4e3a\u6700\u957f\u524d\u7f00\u8fde\u7eed\u4e0b\u964d\u5e8f\u5217\u957f\u5ea6\uff1a\n\n- $predown_k = \\max\\{predown_{ls}\\}$\uff1b\n- \u5982\u679c $predown_{ls} = Len(ls)$ \u4e14 $last_{ls} > first_{rs}$\uff0c\u5219 $predown_k = \\max\\{predown_{ls} + predown_{rs}\\}$\u3002\n\n\u5176\u4e2d $preup$ \u4e3a\u6700\u957f\u524d\u7f00\u8fde\u7eed\u4e0a\u5347\u5e8f\u5217\u957f\u5ea6\uff1a\n\n- $preup_k = \\max\\{preup_{ls}\\}$\uff1b\n- \u5982\u679c $preup_{ls} = Len(ls)$ \u4e14 $last_{ls} < first_{rs}$\uff0c\u5219 $preup_k = \\max\\{preup_{ls} + preup_{rs}\\}$\u3002\n\n\u5176\u4e2d $sucdown$ \u4e3a\u6700\u957f\u540e\u7f00\u8fde\u7eed\u4e0b\u964d\u5e8f\u5217\u957f\u5ea6\uff1a\n\n- $sucdown_k = \\max\\{sucdown_{rs}\\}$\uff1b\n- \u5982\u679c $sucdown_{rs} = Len(rs)$ \u4e14 $last_{ls} > first_{rs}$\uff0c\u5219 $predown_k = \\max\\{sucdown_{ls} + sucdown_{rs}\\}$\u3002\n\n\u5176\u4e2d $sucup$ \u4e3a\u6700\u957f\u540e\u7f00\u8fde\u7eed\u4e0a\u5347\u5e8f\u5217\u957f\u5ea6\uff1a\n\n- $sucup_k = \\max\\{sucup_{rs}\\}$\uff1b\n- \u5982\u679c $sucup_{rs} = Len(rs)$ \u4e14 $last_{ls} < first_{rs}$\uff0c\u5219 $sucup_k = \\max\\{sucup_{ls} + sucup_{rs}\\}$\u3002\n\n\u5176\u4ed6\u64cd\u4f5c\u5c31\u662f\u6a21\u677f\u4e86\u3002\n\nCode:\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n\nusing std::max;\n\n#define N 600010\n#define int long long\n\nint n,m;\nint a[N];\n\nstruct Tree\n{\n    int l,r;\n    int lazy;\n    int last,first,len;\n    int suclen,prelen;\n    int sucdown,sucup,predown,preup;\n    void init(int z)\n    {\n        last = first = z;\n        len = suclen = prelen = 1;\n        sucdown = sucup = predown = preup = 1;\n    }\n    void push(int z)\n    {\n        last += z;\n\t\tfirst += z;\n    }\n}tr[N << 2];\n\n#define lson k << 1\n#define rson k << 1 | 1\n#define len(k) (tr[k].r - tr[k].l + 1)\n\nvoid pushup(int k)\n{\n    tr[k].last = tr[rson].last;\n    tr[k].first = tr[lson].first;\n\t\n\ttr[k].len = max(tr[lson].len,tr[rson].len);\n\tif(tr[lson].last > tr[rson].first)\n\t\ttr[k].len = max(tr[k].len,tr[lson].suclen + tr[rson].predown);\n\tif(tr[lson].last < tr[rson].first)\n\t\ttr[k].len = max(tr[k].len,tr[lson].sucup + tr[rson].prelen);\n\n\ttr[k].suclen = tr[rson].suclen;\n\tif(tr[rson].sucdown == len(rson) && tr[lson].last > tr[rson].first)\n\t\ttr[k].suclen = max(tr[k].suclen,tr[lson].suclen + tr[rson].sucdown);\n\tif(tr[rson].len == len(rson) && tr[lson].last < tr[rson].first)\n\t\ttr[k].suclen = max(tr[k].suclen,tr[lson].sucup + tr[rson].len);\n\t\n\ttr[k].prelen = tr[lson].prelen;\n\tif(tr[lson].preup == len(lson) && tr[lson].last < tr[rson].first)\n\t\ttr[k].prelen = max(tr[k].prelen,tr[lson].preup + tr[rson].prelen);\n\tif(tr[lson].len == len(lson) && tr[lson].last > tr[rson].first)\n\t\ttr[k].prelen = max(tr[k].prelen,tr[lson].len + tr[rson].predown);\n\t\n\ttr[k].predown = tr[lson].predown;\n\tif(tr[lson].predown == len(lson) && tr[lson].last > tr[rson].first)\n\t\ttr[k].predown = max(tr[k].predown,tr[lson].predown + tr[rson].predown);\n\n\ttr[k].preup = tr[lson].preup;\n\tif(tr[lson].preup == len(lson) && tr[lson].last < tr[rson].first)\n\t\ttr[k].preup = max(tr[k].preup,tr[lson].preup + tr[rson].preup);\n\n\ttr[k].sucdown = tr[rson].sucdown;\n\tif(tr[rson].sucdown == len(rson) && tr[lson].last > tr[rson].first)\n\t\ttr[k].sucdown = max(tr[k].sucdown,tr[lson].sucdown + tr[rson].sucdown);\n\n\ttr[k].sucup = tr[rson].sucup;\n\tif(tr[rson].sucup == len(rson) && tr[lson].last < tr[rson].first)\n\t\ttr[k].sucup = max(tr[k].sucup,tr[lson].sucup + tr[rson].sucup);\n\n}\n\nvoid build(int k,int l,int r)\n{\n\ttr[k].l = l,tr[k].r = r;\n\ttr[k].lazy = 0;\n\tif(l == r)\n\t{\n\t\ttr[k].init(a[l]);\n\t\treturn;\n\t}\n\tint mid = l + r >> 1;\n\tbuild(lson,l,mid);\n\tbuild(rson,mid + 1,r);\n\tpushup(k);\n}\n\nvoid pushdown(int k)\n{\n\tif(tr[k].lazy != 0)\n\t{\n\t\ttr[lson].push(tr[k].lazy);\n\t\ttr[lson].lazy += tr[k].lazy;\n\t\ttr[rson].push(tr[k].lazy);\n\t\ttr[rson].lazy += tr[k].lazy;\n\t\ttr[k].lazy = 0;\n\t}\n}\n\nvoid change(int k,int ql,int qr,int z)\n{\n\tint l = tr[k].l,r = tr[k].r;\n\tif(ql <= l && r <= qr)\n\t{\n\t\ttr[k].push(z);\n\t\ttr[k].lazy += z; \n\t\treturn;\n\t}\n\tpushdown(k);\n\tint mid = l + r >> 1;\n\tif(ql <= mid)\n\t\tchange(lson,ql,qr,z);\n\tif(mid < qr)\n\t\tchange(rson,ql,qr,z);\n\tpushup(k);\n}\n\nsigned main()\n{\n\tscanf(\"%lld\",&n);\n\tfor(int i = 1;i <= n;i++)\n\t\tscanf(\"%lld\",&a[i]);\n\tbuild(1,1,n);\n\tscanf(\"%lld\",&m);\n\tfor(int t = 1,l,r,z;t <= m;t++)\n\t{\n\t\tscanf(\"%lld%lld%lld\",&l,&r,&z);\n\t\tchange(1,l,r,z);\n\t\tprintf(\"%lld\\n\",tr[1].len);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1657961492,
        "uid": 371968,
        "name": "ningago",
        "ccfLevel": 4,
        "title": "CF739C Alyona and towers \u9898\u89e3"
    },
    {
        "content": "# \u524d\u8a00\n\n\u5927\u5de5\u7a0b\uff0c\u7528\u65f61.5h\n\n\u8212\u670d~\n\n# \u9898\u76ee\n\n[\u6d1b\u8c37](https://www.luogu.com.cn/problem/CF739C)\n\n[CF](http://codeforces.com/contest/739/problem/C)\n\n# \u8bb2\u89e3\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\uff1f](https://www.cnblogs.com/PPLPPL/p/14179882.html)\n\n\u7ebf\u6bb5\u6811\u677f\u9898\uff0c\u7ec6\u8282\u5f88\u591a\u3002\n\n\u5982\u679c\u8fd9\u9053[[USACO08FEB]Hotel G(\u6d1b\u8c37)](https://www.luogu.com.cn/problem/P2894)\u6ca1\u6709\u505a\u8fc7\u5efa\u8bae\u505a\u4e86\u518d\u6765\u770b\u3002\n\n\u8fd9\u9053\u9898\u7684\u601d\u8def\u5c31\u53d8\u5f97\u6e05\u6670\u6613\u61c2\u4e86\u3002\n\n\u4e3a\u65b9\u4fbf\u63cf\u8ff0\u548c\u7406\u89e3\uff0c\u6211\u4eec\u628a\u5148\u4e0a\u5347\u540e\u4e0b\u964d\u7684\u5e8f\u5217\u53eb\u505a`\u5c71\u5cf0`\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4\uff0c\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u4ee5\u4e0b\u6570\u636e\uff1a\n\n- \u5de6\u7aef\u70b9\u5f00\u59cb\u7684\u4e0a\u5347\u5e8f\u5217\u957f\u5ea6$ul$\u3002\n\n- \u5de6\u7aef\u70b9\u5f00\u59cb\u7684\u4e0b\u964d\u5e8f\u5217\u957f\u5ea6$dl$\u3002\n\n- \u5de6\u7aef\u70b9\u5f00\u59cb\u7684\u5c71\u5cf0\u957f\u5ea6$udl$\u3002\n\n- \u53f3\u7aef\u70b9\u7ed3\u675f\u7684\u4e0a\u5347\u5e8f\u5217\u957f\u5ea6$ur$\u3002(**\u4ece\u5de6\u5f80\u53f3**\u662f**\u5355\u589e**\u7684)\n\n- \u53f3\u7aef\u70b9\u7ed3\u675f\u7684\u4e0b\u964d\u5e8f\u5217\u957f\u5ea6$dr$\u3002(**\u4ece\u5de6\u5f80\u53f3**\u662f**\u5355\u51cf**\u7684)\n\n- \u53f3\u7aef\u70b9\u7ed3\u675f\u7684\u5c71\u5cf0\u957f\u5ea6$udr$\u3002(**\u4ece\u5de6\u5f80\u53f3**\u662f**\u5148\u5355\u589e\u540e\u5355\u51cf**\u7684)\n\n- \u533a\u95f4\u5c71\u5cf0\u6700\u5927\u503c$ans$\u3002      \n\n- \u533a\u95f4\u52a0\u7684\u61d2\u6807\u8bb0$lz$\u3002\n\n- \u533a\u95f4\u5de6\u7aef\u70b9\u503c$l$\u3002\n\n- \u533a\u95f4\u53f3\u7aef\u70b9\u503c$r$\u3002\n\n\u6211\u4eec\u53d1\u73b0\u533a\u95f4\u52a0\u5bf9\u4e00\u4e2a\u533a\u95f4\u7684\u7b54\u6848\u5e76\u4e0d\u5f71\u54cd\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u91cd\u96be\u70b9\u5c31\u5728\u533a\u95f4\u5408\u5e76\u4e0a\u3002\n\n\u533a\u95f4\u52a0\u4e0d\u591a\u8d58\u8ff0\u3002\n\n$l,r$\u53ef\u4ee5\u76f4\u63a5\u7531\u5b50\u533a\u95f4\u5f97\u5230\u3002\n\n\u5bf9\u4e8e$ans$\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u53d6\u5b50\u533a\u95f4$ans$\u7684\u6700\u5927\u503c\uff0c\u7136\u540e\u6211\u4eec\u7684$ans$\u66f4\u65b0\u5c31\u53ea\u53ef\u80fd\u662f\u8de8\u533a\u95f4\u4e86\uff0c\u5206\u7c7b\u8ba8\u8bba\u5373\u53ef\u3002\n\n$ul,ur,dl,dr,udl,udr$\u4e0e$ans$\u7c7b\u4f3c\uff0c\u5206\u7c7b\u8ba8\u8bba\u5373\u53ef\u3002\n\n\u5176\u5b9e\u5408\u5e76\u533a\u95f4\u603b\u4f53\u4e0a\u5206\u4e3a\u4e24\u90e8\u5206\uff1a\n\n\u4e00\u662f\u5b50\u533a\u95f4\u76f4\u63a5\u66f4\u65b0\u6b64\u533a\u95f4\u3002\n\n\u4e8c\u662f\u8de8\u533a\u95f4\u66f4\u65b0\u3002\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898\u8fd9\u4e2a\u66f4\u65b0\u601d\u8def\u663e\u5f97\u5c24\u4e3a\u91cd\u8981\uff0c\u4e0d\u7136\u5f88\u5bb9\u6613\u6df7\u4e71\u3002\n\n\u8be6\u89c1\u4ee3\u7801\u3002\n\n# \u4ee3\u7801\n\n```cpp\n#define lc (x<<1)\n#define rc (x<<1|1)\nstruct SegmentTree\n{\n\tstruct node\n\t{\n\t\tint ul,ur,dl,dr,udl,udr,ans;\n\t\tLL lz,l,r;\n\t}t[MAXN << 2];\n\t\n\tvoid up(int x,int l,int mid,int r)\n\t{\n\t\t//\u5b50\u533a\u95f4\u4e0d\u8de8\u533a\u95f4\uff0c\u76f4\u63a5\u66f4\u65b0\u6b64\u533a\u95f4 \n\t\tt[x].l = t[lc].l; t[x].r = t[rc].r;\n\t\tt[x].ans = Max(t[lc].ans,t[rc].ans);\n\t\tint llen = mid-l+1,rlen = r-mid;//\u5de6\u53f3\u533a\u95f4\u957f\u5ea6 \n\t\tt[x].ul = t[lc].ul; t[x].dl = t[lc].dl;\n\t\tt[x].ur = t[rc].ur; t[x].dr = t[rc].dr;\n\t\tt[x].udl = t[lc].udl; t[x].udr = t[rc].udr; \n\t\t//\u5206\u7c7b\u8ba8\u8bba\u8de8\u533a\u95f4\u66f4\u65b0 \n\t\tif(t[lc].r < t[rc].l)\n\t\t{\n\t\t\tif(t[lc].ul == llen) t[x].ul += t[rc].ul; \n\t\t\tif(t[rc].ur == rlen) t[x].ur += t[lc].ur;\n\t\t\tif(t[rc].udr == rlen) t[x].udr += t[lc].ur;\n\t\t\tif(t[lc].ul == llen) t[x].udl = Max(t[x].udl,llen + t[rc].udl);\n\t\t\tt[x].ans = Max(t[x].ans,t[rc].udl + t[lc].ur);\n\t\t}\n\t\telse if(t[lc].r > t[rc].l)\n\t\t{\n\t\t\tif(t[lc].dl == llen) t[x].dl += t[rc].dl;\n\t\t\tif(t[rc].dr == rlen) t[x].dr += t[lc].dr;\n\t\t\tif(t[lc].udl == llen) t[x].udl += t[rc].dl;\n\t\t\tif(t[rc].dr == rlen) t[x].udr = Max(t[x].udr,rlen + t[lc].udr);\n\t\t\tt[x].ans = Max(t[x].ans,t[lc].udr + t[rc].dl);\n\t\t}\n\t}\n\t\n\tvoid down(int x)\n\t{\n\t\tif(!t[x].lz) return;\n\t\tt[lc].l += t[x].lz; t[lc].r += t[x].lz; t[lc].lz += t[x].lz;\n\t\tt[rc].l += t[x].lz; t[rc].r += t[x].lz; t[rc].lz += t[x].lz;\n\t\tt[x].lz = 0;\n\t}\n\t\n\tvoid Build(int x,int l,int r)\n\t{\n\t\tif(l == r)\n\t\t{\n\t\t\tt[x].l = t[x].r = Read();\n\t\t\tt[x].ul = t[x].ur = t[x].dl = t[x].dr = t[x].udl = t[x].udr = 1;\n\t\t\tt[x].ans = 1;\n\t\t\tt[x].lz = 0;\n\t\t\treturn;\n\t\t}\n\t\tint mid = (l+r) >> 1;\n\t\tBuild(lc,l,mid);\n\t\tBuild(rc,mid+1,r);\n\t\tup(x,l,mid,r);\n\t}\n\t\n\tvoid Add(int x,int l,int r,int ql,int qr,int val)\n\t{\n\t\tif(ql <= l && r <= qr)\n\t\t{\n\t\t\tt[x].l += val; t[x].r += val; t[x].lz += val; \n\t\t\treturn;\n\t\t}\n\t\tint mid = (l+r) >> 1;\n\t\tdown(x);\n\t\tif(ql <= mid) Add(lc,l,mid,ql,qr,val);\n\t\tif(mid+1 <= qr) Add(rc,mid+1,r,ql,qr,val);\n\t\tup(x,l,mid,r);\n\t}\n}st;\n\nint main()\n{\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\tn = Read();\n\tst.Build(1,1,n);\n\tfor(int T = Read(); T ;-- T)\n\t{\n\t\tint l = Read(),r = Read(),val = Read();\n\t\tst.Add(1,1,n,l,r,val);\n\t\tPut(st.t[1].ans,'\\n');\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1608716399,
        "uid": 137437,
        "name": "PPL_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF739C \u3010Alyona and towers\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u7684\u5148\u4e0a\u5347\u540e\u4e0b\u964d\u7684\u5b50\u6bb5\u957f\u5ea6\uff0c\u652f\u6301\u533a\u95f4\u52a0\n\n\u8fd9\u4e2a\u9898\u4f3c\u4e4e\u5f88\u719f\u6089\uff0c\u60f3\u5fc5\u4f60\u80af\u5b9a\u505a\u8fc7\u5b83\u7684\u7b80\u5316\u7248\u2014\u2014\u6700\u5927\u4e0a\u5347\u5b50\u5e8f\u5217\n\n\u90a3\u4e48\u9047\u5230\u8fd9\u6837\u7684\u9898\u6211\u4eec\u5e94\u8be5\u600e\u4e48\u505a\u5462\uff0c\u522b\u7740\u6025\uff0c\u6211\u4eec\u4e00\u6b65\u4e00\u6b65\u6765\n\n- \u6211\u4eec\u80af\u5b9a\u662f\u8981\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7b54\u6848\uff0c\u90a3\u4e48\u5de6\u53f3\u513f\u5b50\u600e\u4e48\u5408\u5e76\u7b54\u6848\u5462\uff0c\u6709\u8fd9\u4e48\u51e0\u79cd\u60c5\u51b5\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/72005.png)\n\n>- \u524d\u4e24\u79cd\u60c5\u51b5\u5c31\u662f\u7ee7\u627f\u5de6\u53f3\u513f\u5b50\u7684$ans$\n\n>- \u7b2c\u4e09\u79cd\u662f\u5de6\u513f\u5b50\u4e2d\u4ee5\u53f3\u7aef\u70b9\u7ed3\u5c3e\u7684$ans+$\u53f3\u513f\u5b50\u4e2d\u4ee5\u5de6\u7aef\u70b9\u5f00\u59cb\u7684\u6700\u957f\u4e0b\u964d\u5e8f\u5217\u957f\u5ea6\uff08\u5de6\u513f\u5b50\u7684\u53f3\u7aef\u70b9$>$\u53f3\u513f\u5b50\u7684\u5de6\u7aef\u70b9\uff09\n\n>- \u7b2c\u56db\u79cd\u662f\u53f3\u513f\u5b50\u4e2d\u4ee5\u5de6\u7aef\u70b9\u5f00\u59cb\u7684$ans+$\u5de6\u513f\u5b50\u4e2d\u4ee5\u53f3\u7aef\u70b9\u7ed3\u675f\u7684\u6700\u957f\u4e0a\u5347\u5e8f\u5217\u957f\u5ea6\uff08\u5de6\u513f\u5b50\u7684\u5de6\u7aef\u70b9$<$\u53f3\u513f\u5b50\u7684\u5de6\u7aef\u70b9\uff09\n\n- \u7ef4\u62a4\u4ee5\u5de6\u53f3\u7aef\u70b9\u5f00\u59cb\u6216\u7ed3\u5c3e\u7684$zans,yans$\u4e5f\u662f\u7c7b\u4f3c\u7684\uff0c\u4ee5$zans$\u6765\u8bf4\n\n![](https://cdn.luogu.com.cn/upload/pic/72007.png)\n\n>- \u7b2c\u4e00\u79cd\u60c5\u51b5\u5c31\u662f\u5de6\u513f\u5b50\u7684$zans$\n\n>- \u7b2c\u4e8c\u79cd\u60c5\u51b5\u662f\u5de6\u513f\u5b50\u7684$zans+$\u53f3\u513f\u5b50\u4e2d\u4ee5\u5de6\u7aef\u70b9\u5f00\u59cb\u7684\u6700\u957f\u4e0b\u964d\u5e8f\u5217\u957f\u5ea6\uff08\u5de6\u513f\u5b50\u7684\u53f3\u7aef\u70b9$>$\u53f3\u513f\u5b50\u7684\u5de6\u7aef\u70b9\uff09\n\n>- \u7b2c\u4e09\u79cd\u60c5\u51b5\u662f\u5de6\u513f\u5b50\u7684\u533a\u95f4\u957f\u5ea6$+$\u53f3\u513f\u5b50\u7684$zans$\uff08\u5de6\u513f\u5b50\u4e2d\u4ee5\u53f3\u7aef\u70b9\u7ed3\u5c3e\u7684\u6700\u957f\u4e0a\u5347\u5e8f\u5217\u957f\u5ea6$=$\u5de6\u513f\u5b50\u7684\u533a\u95f4\u957f\u5ea6\u5e76\u4e14\u5de6\u513f\u5b50\u7684\u53f3\u7aef\u70b9$<$\u53f3\u513f\u5b50\u7684\u5de6\u7aef\u70b9\uff09\n\n- \u7136\u540e\u662f\u7ef4\u62a4\u5de6\u53f3\u7aef\u70b9\u5f00\u59cb\u6216\u7ed3\u675f\u7684\u6700\u957f\u4e0b\u964d\u6216\u4e0a\u5347\u7684\u5e8f\u5217\u957f\u5ea6$zlen,ylen$\uff0c\u4ee5$zlen$\u6765\u8bf4\n\n![](https://cdn.luogu.com.cn/upload/pic/72011.png)\n\n>- \u7b2c\u4e00\u79cd\u60c5\u51b5\u662f\u5de6\u513f\u5b50\u7684$zlen$\n>- \u7b2c\u4e8c\u79cd\u60c5\u51b5\u662f\u5de6\u513f\u5b50\u7684$zlen+$\u53f3\u513f\u5b50\u7684$zlen$\uff08\u5de6\u513f\u5b50\u7684$zlen=$\u5de6\u513f\u5b50\u7684\u533a\u95f4\u957f\u5ea6\u5e76\u4e14\u5de6\u513f\u5b50\u7684\u53f3\u7aef\u70b9$>$\u53f3\u513f\u5b50\u7684\u5de6\u7aef\u70b9\uff09\n\n\u7136\u540e\u8fd9\u9053\u9898\u5c31\u505a\u5b8c\u5566\n\n\u6211\u4eec\u6574\u7406\u4e00\u4e0b\u521a\u624d\u8981\u7ef4\u62a4\u7684\u4e1c\u897f\n- \u7b54\u6848$ans$\n\n- \u5de6\u7aef\u70b9$z$\n\n- \u53f3\u7aef\u70b9$y$ \n\n- \u533a\u95f4\u957f\u5ea6$len$\n \n- \u5de6\u7aef\u70b9\u5f00\u59cb\u7684\u7b54\u6848$zans$\n \n- \u5de6\u7aef\u70b9\u5f00\u59cb\u7684\u6700\u957f\u4e0b\u964d\u5e8f\u5217\u957f\u5ea6$zlen$\n\n- \u53f3\u7aef\u70b9\u7ed3\u675f\u7684\u7b54\u6848$yans$\n \n- \u53f3\u7aef\u70b9\u7ed3\u675f\u7684\u6700\u957f\u4e0a\u5347\u5e8f\u5217\u957f\u5ea6$ylen$\n\n\u81f3\u4e8e\u533a\u95f4\u52a0\u7684\u64cd\u4f5c\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5b50\u6811\u800c\u8a00\u53ea\u5f71\u54cd\u5de6\u53f3\u7aef\u70b9\uff0c\u6240\u4ee5\u6b63\u5e38\u7684\u6253\u6807\u8bb0\u4e0b\u653e\u5c31\u53ef\u4ee5\u4e86\n\n**Code**\n``` cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#define N 300000\n#define zrt k << 1\n#define yrt k << 1 | 1\nusing namespace std;\nint n,m,a[N + 5];\nstruct node\n{\n    int ans,za,ya,zl,yl,len;\n    long long z,y,tag;\n};\nstruct Seg\n{\n    node s[N * 4 + 5];\n    node upd(node x,node y)\n    {\n        node k;\n        k.len = x.len + y.len;\n        k.z = x.z;\n        k.y = y.y;\n        k.zl = x.zl;\n        if (x.zl == x.len && x.y > y.z)\n            k.zl += y.zl;\n        k.yl = y.yl;\n        if (y.yl == y.len && x.y < y.z)\n            k.yl += x.yl;\n        k.za = x.za;\n        if (k.za == x.len && x.y > y.z)\n            k.za += y.zl;\n        if (x.yl == x.len && x.y < y.z)\n            k.za = max(k.za,x.yl + y.za);\n        k.ya = y.ya;\n        if (k.ya == y.len && x.y < y.z)\n            k.ya += x.yl;\n        if (y.zl == y.len && x.y > y.z)\n            k.ya = max(k.ya,y.zl + x.ya);\n        k.ans = max(x.ans,y.ans);\n        if (x.y > y.z)\n            k.ans = max(k.ans,x.ya + y.zl);\n        if (x.y < y.z)\n            k.ans = max(k.ans,y.za + x.yl);\n        return k;\n    }\n    void build(int k,int l,int r)\n    {\n        if (l == r)\n        {\n            s[k].ans = 1;\n            s[k].ya = 1;\n            s[k].za = 1;\n            s[k].zl = 1;\n            s[k].yl = 1;\n            s[k].z = (long long)a[l];\n            s[k].y = (long long)a[l];\n            s[k].len = 1;\n            return;\n        }\n        int mid = l + r >> 1;\n        build(zrt,l,mid);\n        build(yrt,mid + 1,r);\n        s[k] = upd(s[zrt],s[yrt]);\n    }\n    void jia(int k,int l,int r,long long z)\n    {\n        s[k].z += z;\n        s[k].y += z;\n        s[k].tag += z;\n    }\n    void pushdown(int k,int l,int r,int mid)\n    {\n        if (!s[k].tag)\n            return;\n        jia(zrt,l,mid,s[k].tag);\n        jia(yrt,mid + 1,r,s[k].tag);\n        s[k].tag = 0;\n    }\n    void add(int k,int l,int r,int x,int y,long long z)\n    {\n        if (l >= x && r <= y)\n        {\n            jia(k,l,r,z);\n            return;\n        }\n        int mid = l + r >> 1;\n        pushdown(k,l,r,mid);\n        if (x > mid)\n            add(yrt,mid + 1,r,x,y,z);\n        else\n            if (y <= mid)\n                add(zrt,l,mid,x,y,z);\n            else\n                add(zrt,l,mid,x,y,z),add(yrt,mid + 1,r,x,y,z);\n        s[k] = upd(s[zrt],s[yrt]);\n    }\n}tree;\nint main()\n{\n    scanf(\"%d\",&n);\n    for (int i = 1;i <= n;i++)\n        scanf(\"%d\",&a[i]);\n    tree.build(1,1,n);\n    scanf(\"%d\",&m);\n    int l,r;\n    long long z;\n    for (int i = 1;i <= m;i++)\n    {\n        scanf(\"%d%d%lld\",&l,&r,&z);\n        tree.add(1,1,n,l,r,z);\n        printf(\"%d\\n\",tree.s[1].ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1565773210,
        "uid": 73231,
        "name": "eee_hoho",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF739C \u3010Alyona and towers\u3011"
    }
]