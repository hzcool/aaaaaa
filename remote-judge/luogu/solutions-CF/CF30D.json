[
    {
        "content": "## \u524d\u8a00\uff1a\n\n~~\u6d1b\u8c37\u4ec0\u4e48\u90fd\u722c\u4e0d\u5230\u4e86\uff0c\u53ea\u597d\u53bb CF \u53bb\u770b\uff0c\u53d1\u73b0\u5bf9\u4e86\uff0c\u5c31\u6765\u5199\u4e00\u4e0b\u9898\u89e3\u3002~~\n\n\u54b3\u54b3\uff0c\u60f3\u7740\u52a0\u4e00\u4e2a\u5feb\u8bfb\u518d\u6765\u4e2a\u5438\u6c27\u770b\u770b CF \u91cc\u80fd\u8dd1\u51e0\u79d2\uff0c\u7ed3\u679c\u6d1b\u8c37\u722c\u5230\u4e86\uff01\n\n\u8fd9\u91cc\u662f\u6700\u4f18\u89e3\u3002\n\n[problem](https://www.luogu.com.cn/problem/CF30D)\u3002\n\n[\u6bd4\u7b2c2\u540d\u5feb1\u500d\u7684\u6700\u4f18\u89e3](https://www.luogu.com.cn/record/list?pid=CF30D&orderBy=1&status=&page=1)\u3002\n\n## \u601d\u8def\uff1a\n\n\u5176\u5b9e\u5c31\u662f\u8d2a\u5fc3\u3002\n\n\u5206\u60c5\u51b5\u8ba8\u8bba\uff1a\n\n### \\#1\uff1a\n\n\u8d77\u70b9 $k=n+1$:\n\n\u6839\u636e\u4e09\u89d2\u5f62\u4e0d\u7b49\u5f0f\uff0c\u80af\u5b9a\u662f\u8d70\u5230 $1$ \u6216\u8005 $n$ \u70b9\uff0c\u7136\u540e\u76f4\u7740\u8d70\uff0c\u76f4\u63a5\u5224\u6389\u3002\n\n### \\#2\uff1a\n\n\u8d77\u70b9 $1\\le k \\le n$\uff1a\n\n\u6709\u4e24\u79cd\u60c5\u51b5\u3002\n\n1. \u8d70\u5230\u4e00\u5934\u7136\u540e\u518d\u8c03\u5934\u8d70\u5230\u53e6\u5916\u4e00\u5934\u7136\u540e\u8d70\u5411 $n+1$ \u53f7\u70b9\u3002\n\n\u53e6\u5916\u4e00\u79cd\u662f\u5c06\u6570\u8f74\u4ece\u4e00\u4e2a\u70b9 $i$ \u5206\u5f00\uff0c\n\n\u7136\u540e\u53d8\u6210\u8fd9\u4e2a\u6837\u5b50\uff1a\n\n$1\\dots i\\dots {i+1}\\dots k\\dots n$\u3002\n\n\u8fd9\u79cd\u5148\u8d70\u5411 $i+1$ \u6216\u8005 $n$\uff0c\u7136\u540e\u518d\u8c03\u5934\uff0c\u8d70\u5411 $n+1$\uff0c\u518d\u8d70\u5411 $1$ \u6216\u8005 $i$ \u4e4b\u540e\u8d70\u5411 $i$ \u6216\u8005 $1$\u3002\n\n\u6216\u8005\n\n$1\\dots i\\dots i+1\\dots n$\u3002\n\n\u8fd9\u79cd\u8ddf\u4e0a\u9762\u5dee\u4e0d\u591a\u3002\n\n## \u4ee3\u7801\uff1a\n\n```c++\n#include <bits/stdc++.h>\nusing namespace std;\nint n,k,i,j,x[100001],s[100001],dl[100001],a,b;\ndouble ans;\ntypedef int LL;\ninline LL read()\n{\n\tregister LL x=0,f=1;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9'){\n\t\tif(c=='-') f=-1;\n\t\tc=getchar();\n\t}\n\twhile(c>='0'&&c<='9') x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\treturn x*f;\n}//\u5feb\u8bfb\ndouble dis(double x1,double y1,double x2,double y2)\n{\n       return sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));\n}//\u7b97\u8ddd\u79bb\nbool cmp(int a,int b)\n{\n     return x[a]<x[b];\n}//\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\ndouble quicku(double s,double e)\n{\n       return e-s+min(dis(a,b,s,0),dis(a,b,e,0));\n}\ndouble quickd(double s,double m,double e)\n{\n       return min(m+e-2*s+dis(a,b,e,0),2*e-s-m+dis(a,b,s,0));\n}//\u4e0a\u9762\u90fd\u662f\u8ba1\u7b97\u533a\u95f4\u5185\u8ddd\u79bb\nint main()\n{\n    n=read(),k=read();\n    for (i=1;i<=n;i++) x[i]=read();\n    a=read(),b=read();\n    for (i=1;i<=n;i++) dl[i]=i;\n    sort(dl+1,dl+1+n,cmp);\n    if (k==n+1)//\u60c5\u51b51\n    {\n        double SSS=x[dl[n]]-x[dl[1]]+min(dis(a,b,x[dl[n]],0),dis(a,b,x[dl[1]],0));\n    \tcout.setf(ios::fixed);\n    \tcout<<setprecision(50)<<SSS,putchar('\\n');\n       return 0;\n    }//\u60c5\u51b52\n    for (i=1;i<=n;i++)\n        if (dl[i]==k) \n        {\n           k=i;\n           break;\n        }\n    for (i=1;i<=n;i++) s[i]=x[dl[i]];\n    ans=(s[n]-s[k])*2+s[k]-s[1]+dis(a,b,s[1],0);\n    ans=min(ans,s[n]-s[1]+s[k]-s[1]+dis(a,b,s[n],0));\n    \n    //\u4e0d\u540c\u7684i\n    for (i=2;i<=k;i++)\n        ans=min(ans,quicku(s[1],s[i-1])+quickd(s[i],s[k],s[n]));\n    for (i=k;i<n;i++)\n        ans=min(ans,quickd(s[1],s[k],s[i])+quicku(s[i+1],s[n]));\n    cout.setf(ios::fixed);\n    cout<<setprecision(50)<<ans,putchar('\\n');\n    return 0;\n}\n```\n\n### \u5b8c\u7f8e\u6492\u82b1\uff01\n\n",
        "postTime": 1684142978,
        "uid": 661534,
        "name": "linzhicong2011",
        "ccfLevel": 4,
        "title": "CF30D King's Problem?"
    },
    {
        "content": "# CF30D\n\n\u8ba1\u7b97\u51e0\u4f55 + \u8d2a\u5fc3\n\n## \u9898\u610f\n\u6709 $n + 1$ \u4e2a\u70b9\uff0c\u5176\u4e2d $n$ \u4e2a\u70b9\u90fd\u5728\u6570\u8f74 $x$ \u8f74\u4e0a\u3002\n\u6c42\u6700\u77ed\u7684\u4ece\u7b2c $k$ \u4e2a\u70b9\u5f00\u59cb\u7684\u8d70\u8fc7\u6240\u6709\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u5141\u8bb8\u91cd\u590d\u3002 $n \u2264 10^5$\n\n## \u9898\u89e3\n\n\u9996\u5148\u8003\u8651\u8d77\u59cb\u70b9\u662f\u7b2c $n+1$ \u4e2a\u70b9\u3002\n\n\u7b54\u6848\u65e0\u975e\u4e24\u79cd:\n\n[![TzgeRH.png](https://s4.ax1x.com/2022/01/06/TzgeRH.png)](https://imgtu.com/i/TzgeRH)\n[![TzgZJe.png](https://s4.ax1x.com/2022/01/06/TzgZJe.png)](https://imgtu.com/i/TzgZJe)\n\n\u518d\u8003\u8651\u5f53\u8d77\u70b9\u5904\u5728\u6570\u8f74\u4e0a\u65f6\u7684\u60c5\u51b5: \n\n\u4e00\u5b9a\u5b58\u5728 $x$ \u8f74\u4e0a\u67d0\u70b9 $k$\uff0c\u4f7f\u5f97\u4eba\u5148\u8d70\u904d $1\\sim k$\uff0c\u56de\u6765\uff0c\u518d\u8d70\u904d $k + 1\\sim n$\uff1b\n\n\u6216\u8005\u5148\u8d70\u904d $k +1\\sim n$\uff0c\u56de\u6765\uff0c\u518d\u8d70\u904d $1\\sim k$.\n\u4e8e\u662f\u6211\u4eec\u8003\u8651 $2$ \u4e2a\u60c5\u51b5\uff1a\n\n\u4ece\u70b9 $p$ \u51fa\u53d1\uff0c\u8d70\u4e00\u4e2a\u533a\u95f4 $[l ,r]$\u3002 \n\n\u6700\u4f73\u65b9\u6848\u663e\u7136\u662f\u4ece $p$ \u5230 $l$ \u6216 $r$ \u4e2d\u8f83\u8fd1\u7684\u4e00\u4e2a\uff0c\u7136\u540e\u4e00\u8def\u8d70\u5230\n\u5bf9\u9762\u3002 \u8ddd\u79bb\u662f $dist (a_l ,a_r ) + \\min(dist(p,a_l ),dist(p,a_r ))$\u3002\n\n\u4ece\u70b9 $k$ \u51fa\u53d1\uff0c\u8d70\u4e00\u4e2a\u533a\u95f4 $[l ,r]$\uff0c\u518d\u56de\u5230 $p$\u3002 \u6700\u4f73\u65b9\u6848\u53ef\u4ee5\u8bc1\u660e\u662f\u4ece $k$ \u8d70\u5230l\u6216 $r$ \u4e2d\u7684\u67d0\u4e00\u4e2a\uff0c\n\u7136\u540e\u8d70\u5230\u5bf9\u9762\uff0c\u7136\u540e\u8d70\u5230 $p$\u3002 \u8ddd\u79bb\u662f $|a_l-a_r| + \\min(|a_k-a_l| +dist(r),| a_k-a_r |  +dist(l))$\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\n \nint k,i,j,n;\ndouble ans,x[100010],xp,yp,xk;\n \ndouble C(int z){  return hypot(x[z]-xp,yp); }  \n \ndouble A(int l,int r){  return x[r]-x[l]+min(C(l),C(r)); } //l->r->p \n \ndouble B(int l,int r){  return x[r]-x[l]+min(abs(xk-x[l])+C(r),abs(xk-x[r])+C(l)); }//k->l->r->p\n \nvoid inlinework(){  //\u7ed9\u5b9a\u8d77\u70b9\u5728\u8f74\u4e0a\n  ans=B(1,n);  //\u8d77\u70b9\u4e3a\u65ad\u70b9\u7684\u60c5\u51b5\n  for (i=2;i<=n;i++){ //\u4ece2\u5f00\u59cb \n    double t=min(A(1,i-1)+B(i,n),A(i,n)+B(1,i-1));\n    if (t<ans) ans=t;\n  }\n}\n \nvoid outlinework(){  //\u7ed9\u5b9a\u8d77\u70b9\u5c31\u662f\u8f74\u5916\u70b9\u65f6\u5fc5\u4e3a\u6700\u4f18\n    ans=A(1,n);\n}\n        \nint main()\n{\n    freopen(\"kings.in\",\"r\",stdin);\n    freopen(\"kings.out\",\"w\",stdout);\n    scanf(\"%d%d\",&n,&k);\n    for (i=1;i<=n;i++) scanf(\"%lf\",&x[i]); \n    scanf(\"%lf%lf\",&xp,&yp);\n    xk=x[k];\n    sort(x+1,x+n+1);\n    if (k<=n) inlinework();\n    else outlinework();\n    printf(\"%.20lf\\n\",ans);\n}\n```\n",
        "postTime": 1641465937,
        "uid": 355276,
        "name": "\u6e05\u5c0f\u79cbovo",
        "ccfLevel": 0,
        "title": "CF30D"
    },
    {
        "content": "### \u3010\u9898\u610f\u63cf\u8ff0\u3011\n\u8fd9\u4f4d\u56fd\u738b\u6709 n + 1 \u5ea7\u57ce\u5e02\uff0c\u524d n \u5ea7\u90fd\u5728\u4e00\u6761\u76f4\u7ebf\u4e0a\uff0c\u800c\u7b2c n + 1 \u5ea7\u57ce\u5e02\u5728\u76f4\u7ebf\u5916\u3002\u56fd\u738b\u73b0\u5728\u5728\u7b2c k \u5ea7\u57ce\u5e02\uff0c\u4ed6\u8981\u6e38\u5386\u4e00\u8fb9\u8fd9 n + 1 \u5ea7\u57ce\u5e02\uff0c\u6bcf\u5ea7\u57ce\u5e02\u6700\u591a\u8d70 2 \u6b21\uff0c\u6c42\u51fa\u4ed6\u9700\u8981\u8d70\u7684\u6700\u77ed\u8ddd\u79bb\u3002\n\n### \u3010\u5206\u6790\u3011\n1. \u8d77\u70b9\u5728\u7b2c n + 1 \u70b9\u65f6\uff1a\u53ea\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n\u2460\u5148\u5411\u7b2c 1 \u4e2a\u70b9\u79fb\u52a8\uff0c\u518d\u4ece 1 - n \u79fb\u52a8\uff1b\n\n\u2461\u5148\u5411\u7b2c n \u4e2a\u70b9\u79fb\u52a8\uff0c\u518d\u4ece n - 1 \u79fb\u52a8\uff1b\n\n\u56e0\u4ece\u6b64\u70b9\u5411\u4efb\u4f55\u5176\u4ed6\u70b9\u79fb\u52a8\u540e\uff0c\u90fd\u8981\u5148\u8fd4\u56de\u7b2c 1 \u6216 n \u4e2a\u70b9\uff0c\u7136\u540e\u904d\u5386 1 - n\u3002\uff08\u53ef\u4ee5\u81ea\u5df1\u7b80\u5355\u8bc1\u660e\u4e00\u4e0b\uff09\u8fd9\u6837\u80af\u5b9a\u6bd4\u4e0a\u9762\u4e24\u79cd\u60c5\u51b5\u5c0f\u3002\n\n2. \u8d77\u70b9\u5728 1 - n \u65f6\uff0c\u9700\u8981\u904d\u5386\u4e00\u904d\uff1a\n\n\u56e0\u4e3a\u5728\u6b64\u70b9\u65f6\u4f1a\u51fa\u73b0**\u5148\u5411\u5de6\u6216\u53f3\u79fb\u52a8\u51e0\u6b21\uff0c\u518d\u5411 1 \u6216 n \u79fb\u52a8\uff0c\u518d\u5411 n + 1\u79fb\u52a8\uff0c\u518d\u904d\u5386\u5269\u4e0b\u7684\u70b9**\u51fa\u73b0\u4e0d\u540c\u7684\u89e3\u7684\u60c5\u51b5\uff0c\u4f46\u4e0d\u80fd\u786e\u5b9a\u5c06\u4f55\u70b9\u4f5c\u4e3a\u8f6c\u6298\u70b9\u6700\u4f18\uff0c\u6240\u4ee5\u8981O(n)\u626b\u4e00\u904d\u5f97\u5230\u7ed3\u679c\u3002\n\n### \u3010\u6838\u5fc3\u4ee3\u7801\u3011\n1\u3001cal1\u8868\u793a\u4ece n + 1 \u5230 l ~ r \u7684\u6700\u77ed\u8ddd\u79bb\uff0ccal2\u8868\u793a\u4ece k \u5230 l ~ r \u518d\u5230 n + 1 \u7684\u6700\u77ed\u8ddd\u79bb\n```cpp\ndouble d(int l)\n{\n    return sqrt((a[l] - a[n + 1]) * (a[l] - a[n + 1]) + y * y);\n}\n\ndouble cal1(int l, int r)\n{\n    return a[r] - a[l] + min(d(l), d(r));\n}\n\ndouble cal2(int l, int r)\n{\n    return a[r] - a[l] + min(d(l) + fabs(newtag - a[r]), d(r) + fabs(newtag - a[l]));\n}\n```\n\n2\u3001\u5224\u65ad\u8d77\u70b9\u7528\u4e0d\u540c\u60c5\u51b5\u89e3\n```cpp\nif(k == n + 1)\n    {\n        double ans = cal1(1, n);\n\t\tcout << ans;\n    }\n\telse\n    {\n        double ans = cal2(1, n);\n        for(int i = 1; i < n; i++)\n        {\n            ans = min(ans, min(cal1(1, i) + cal2(i + 1, n), cal2(1, i) + cal1(i + 1, n)));\n        }\n\t\tcout << ans;\n    }\n```\n\n### \u3010\u6b63\u89e3\u3011\n```cpp\n#include <cmath>\n#include <iomanip>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#define N 100100\nusing namespace std;\nint n, k;\ndouble newtag;\ndouble a[N];\ndouble ans;\ndouble y;\ndouble d(int l)\n{\n    return sqrt((a[l] - a[n + 1]) * (a[l] - a[n + 1]) + y * y);\n}\n\ndouble cal1(int l, int r)\n{\n    return a[r] - a[l] + min(d(l), d(r));\n}\n\ndouble cal2(int l, int r)\n{\n    return a[r] - a[l] + min(d(l) + fabs(newtag - a[r]), d(r) + fabs(newtag - a[l]));\n}\n\nint main()\n{\n// \tfreopen(\"king.in\", \"r\", stdin);\n//  freopen(\"king.out\", \"w\", stdout);\n    cin >> n >> k;\n   \tcout << setprecision(10) << fixed;\n    for(int i=1;i<=n+1;i++)\n    {\n        int x;\n        scanf(\"%lf\",&a[i]);\n    }\n    scanf(\"%lf\",&y);\n    newtag=a[k];\n    sort(a + 1, a + n + 1);\n    if(k == n + 1)\n    {\n        double ans = cal1(1, n);\n\t\tcout << ans;\n    }\n\telse\n    {\n        double ans = cal2(1, n);\n        for(int i = 1; i < n; i++)\n        {\n            ans = min(ans, min(cal1(1, i) + cal2(i + 1, n), cal2(1, i) + cal1(i + 1, n)));\n        }\n\t\tcout << ans;\n    }\n}\n```",
        "postTime": 1531566135,
        "uid": 71084,
        "name": "\u5e05\u5230\u62a5\u8b66",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF30D \u3010King's Problem?\u3011"
    }
]