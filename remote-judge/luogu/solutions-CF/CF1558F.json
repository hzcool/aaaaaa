[
    {
        "content": "**\u9898\u610f**  \n\n\u6709\u4e00\u4e2a\u957f\u5ea6\u4f4d $n$ \u7684**\u6392\u5217** $a=[a_1,\\cdots a_n]$\uff0c\u4fdd\u8bc1 $n$ \u662f\u5947\u6570\u3002\n\n\n\u5b9a\u4e49\u4e00**\u6b21**\u64cd\u4f5c $f(i)$ \u4e3a\uff1a\u82e5 $a_i > a_{i + 1}$ \u5c31 $\\mathrm{swap}(a_i,a_{i+1})$\n\n\u5b9a\u4e49\u7b2c $i$ **\u8f6e**\u64cd\u4f5c\u4e3a\uff1a\n\n\u82e5 $i$ \u4e3a\u5947\u6570\uff0c\u5219\u8fdb\u884c $f(1), f(3),\\cdots, f(n - 2)$ \u8fd9\u4e9b\u64cd\u4f5c\u3002\n\n\u82e5 $i$ \u4e3a\u5076\u6570\uff0c\u5219\u8fdb\u884c $f(2), f(4), ..., f(n - 1)$ \u8fd9\u4e9b\u64cd\u4f5c\u3002\n\n\u6c42\u6700\u65e9\u5728\u7b2c\u51e0\u8f6e\u64cd\u4f5c\u540e\uff0c\u6392\u5217\u6709\u5e8f\u3002\u8f6e\u6b21\u4ece $1$ \u5f00\u59cb\u7f16\u53f7\u3002 \n\n**\u9898\u89e3**  \n\n\u771f\u7684\u6ca1\u60f3\u5230\u554a\uff0c2A \u7684\u52a0\u5f3a\u7248\u662f 1F\uff1f\n\n\u597d\u50cf\u662f\u9898\u89e3\u4e00\u8840\uff1f\n\n\n\u8fd9\u79cd\u6392\u5e8f\u9898\u901a\u5e38\u60c5\u51b5\u4e0b\u8981\u8f6c\u6362\u6210 $01$ \u5e8f\u5217\u4f1a\u597d\u505a\u4e00\u4e9b\u3002  \n\u6211\u4eec\u94a6\u5b9a\u4e00\u4e2a\u503c $x$\uff0c\u5c06 $a_i$ \u7684\u8bbe\u4e3a $[a_i \\ge k]$\uff0c\u8003\u8651\u8fd9\u4e2a\u65f6\u5019\u5c06\u5e8f\u5217\u6392\u597d\u5e8f\u5bf9\u5e94\u539f\u5e8f\u5217\u7684\u4ec0\u4e48\u60c5\u51b5\uff1f  \n\u5b9e\u9645\u4e0a\u5bf9\u5e94\uff0c$\\ge k$ \u7684\u6570\uff0c\u5168\u90e8\u88ab\u653e\u5230\u4e86\u53f3\u8fb9\u7684 $n-k+1$ \u4e2a\u3002  \n\n\u7136\u540e\u8003\u8651\uff0c\u5982\u679c\u5c06 $\\ge n$ \u7684\u6570\u88ab\u653e\u5728\u4e86\u6700\u53f3\u8fb9\u4e00\u4e2a\uff0c$\\ge n-1$ \u7684\u6570\u88ab\u653e\u5728\u4e86\u6700\u53f3\u8fb9 $2$ \u4e2a\u2026\u2026\u90a3\u662f\u4e0d\u662f\u6574\u4e2a\u5e8f\u5217\u5c31\u6392\u597d\u5e8f\u4e86\uff1f  \n\u56e0\u6b64\u6211\u4eec\u5c06 $k$ \u4ece\u5927\u5230\u5c0f\u626b\uff0c\u6bcf\u6b21\u6c42\u51fa\u5c06\u8fd9\u79cd\u65f6\u5019\u7684 $01$ \u5e8f\u5217\u6392\u597d\u5e8f\u9700\u8981\u591a\u4e45\uff0c\u7136\u540e\u53d6 $\\max$ \u5c31\u662f\u7b54\u6848\u3002  \n\n------\n\n\u90a3\u4e48\u73b0\u5728\u7684\u95ee\u9898\u662f\uff0c\u600e\u4e48\u5feb\u901f\u6c42\u51fa\u8fd9\u4e9b $01$ \u5e8f\u5217\u7684\u7b54\u6848\u3002\n\n\u6ce8\u610f\u5230\u6bcf\u6b21 $k \\gets k+1$ \u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ea\u5c06 $01$ \u5e8f\u5217\u7684\u4e00\u4e2a $1$ \u53d8\u6210\u4e86 $0$\u3002\u8003\u8651\u8fd9\u4e2a\u53d8\u5316\u4f1a\u5e26\u6765\u4ec0\u4e48\u5f71\u54cd\u3002  \n\n\u6211\u4eec\u4ee4 $b_i$ \u8868\u793a\uff0c\u7b2c $i$ \u4e2a $0$\uff08\u4ee5\u4e0b\u79f0\u4e3a $0_i$\uff09 \u9700\u8981\u8d70\u591a\u4e45\u624d\u80fd\u5230\u5de6\u8fb9\u7b2c $i$ \u4e2a\u4f4d\u7f6e\u3002\u6211\u4eec\u7528\u6570\u636e\u7ed3\u6784\u6765\u7ef4\u62a4\u5e8f\u5217 $b$\u3002\u5047\u5982\u6211\u4eec\u80fd\u591f\u5feb\u901f\u66f4\u65b0 $b_i$\uff0c\u518d\u6c42\u5168\u5c40 $\\max$\uff0c\u5c31\u505a\u5b8c\u4e86\u3002 \n\n\u5b9e\u9645\u4e0a\u53ef\u4ee5\u53d1\u73b0\uff0c\u5168\u5c40 $\\max$ \u5c31\u662f\u6700\u53f3\u8fb9\u7684 $0$ \u9700\u8981\u591a\u5c11\u6b65\u8d70\u5230\u5bf9\u5e94\u4f4d\u7f6e\u3002  \n\n--------------\n\n\u73b0\u5728\u552f\u4e00\u7684\u95ee\u9898\u662f\u5982\u4f55\u6c42\u51fa $b$ \u4ee5\u53ca\u7528\u5feb\u901f\u66f4\u65b0\u3002  \n\n**\u5982\u679c $0_i$ \u5df2\u7ecf\u5728\u7b2c $i$ \u4e2a\u4f4d\u7f6e\u4e86\uff0c\u90a3\u4e48 $b_i=0$\u3002\uff08\u5fd8\u8bb0\u8fd9\u4e00\u70b9\u8ba9\u6211\u7ed5\u6655\u4e86\u597d\u4e45\uff09**  \n\u5426\u5219\uff0c\u5982\u679c $i>1$\uff0c\u53ef\u4ee5\u5f97\u5230 $b_i \\ge b_{i-1}+1$\u3002\u56e0\u4e3a $0_i$ \u5fc5\u987b\u7b49 $0_{i-1}$ \u5728\u7b2c $i-1$ \u4e2a\u4f4d\u7f6e\u7684\u65f6\u5019\u624d\u80fd\u8d70\u4e0b\u4e00\u6b65\u3002  \n\u5e76\u4e14\uff0c\u5982\u679c\u4e0d\u8003\u8651 $0_{i-1}$ \u7684\u963b\u6321\uff0c\u6211\u4eec\u8bbe $0_i$ \u5de6\u8fb9\u6709 $k_i$ \u4e2a $1$\uff0c\u90a3\u4e48\u6709 $b_i \\ge k_i + p_i \\bmod 2$\u3002  \n\u603b\u4e4b\uff0c\u6709 $b_i = \\max (b_{i-1}+1,k_i + p_i \\bmod 2)$\u3002  \n\n\n\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u7ef4\u62a4\u51fa\u4e86\u957f\u5ea6\u4e3a $m-1$ \u7684\u5e8f\u5217 $b$\uff0c\u73b0\u5728\u65b0\u53d8\u6210 $0$ \u7684\u70b9\u8981\u63d2\u5165\u8fdb\u53bb\u3002  \n\u4ed4\u7ec6\u8003\u8651\u4e00\u4e0b\uff0c\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u7ef4\u62a4\u51fa\u5e8f\u5217 $b$\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u53ea\u5173\u5fc3 $b_{m}$ \u7684\u503c\uff0c\u8bbe $t$ \u8868\u793a $0_i$ \u5df2\u7ecf\u5728\u7b2c $i$ \u4e2a\u4f4d\u7f6e\u7684\u4e2a\u6570\u3002\n\u90a3\u4e48\u53ef\u4ee5\u53d1\u73b0 \n$$b_m =\\max_{i=t+1}^m \\left[k_i + (p_i \\bmod 2) + (m-i)\\right]$$    \n\n\u90a3\u4e48\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a $c_i = k_i + (p_i \\bmod 2) + (m-i)$ \u6c42\u533a\u95f4 $\\max$ \u5c31\u884c\u4e86\u3002\n\n\u7136\u800c\u6211\u4eec\u4e5f\u4e0d\u7ef4\u62a4 $c$\uff0c\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a $d_i = [a_i=0](i + i \\bmod 2 + m - 2 \\times cnt_{i})$\uff0c\u5176\u4e2d $cnt_i$ \u8868\u793a\u5230 $i$ \u4e3a\u6b62 $a$ \u4e2d $0$ \u7684\u4e2a\u6570\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fd9\u5c31\u662f\u628a $c$ \u5bf9\u5e94\u5230\u539f\u5e8f\u5217\u4e0a\u7684\u4f4d\u7f6e\u7684\u7ed3\u679c\u3002  \n\u6211\u4eec\u628a $d_i$ \u8f6c\u5316\u6210 $d_i = [a_i=0](i-i \\bmod 2 + m-2 \\times cnt_{i- i \\bmod 2})$\uff0c\u5b9e\u9645\u4e0a\u662f\u7b49\u4ef7\u7684\u3002  \n\u6211\u4eec\u8be2\u95ee\u7684\u65f6\u5019\u95ee\u7684\u662f\uff0c\u5f53\u524d\u7684\u7b2c\u4e00\u4e2a $1$ \u548c\u6700\u540e\u4e00\u4e2a $0$ \u4e4b\u95f4\u7684\u533a\u95f4\u3002  \n\u7136\u540e\u53d1\u73b0\u6211\u4eec\u5bf9\u8fd9\u4e2a\u5e8f\u5217\u8fdb\u884c\u6c42\u533a\u95f4 $\\max$ \u7684\u65f6\u5019\uff0c\u53bb\u6389 $[a_i=0]$ \u4e5f\u6ca1\u6709\u5f71\u54cd\uff0c\u4e5f\u65b9\u4fbf\u7ef4\u62a4\uff0c\u8bc1\u660e\u7565\u3002  \n\u4e5f\u53ef\u4ee5\u521d\u59cb\u503c\u90fd\u5148\u51cf\u53bb\u4e00\u4e2a `inf`\uff0c\u7136\u540e\u626b\u5230\u7684\u65f6\u5019\u518d `+inf` \u6fc0\u6d3b\uff0c\u8fd9\u6837\u4e0d\u9700\u8981\u8bc1\u660e\u3002    \n\u90a3\u4e48\u76f4\u63a5\u7528\u533a\u95f4\u52a0\uff0c\u533a\u95f4 $\\max$ \u7684\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5c31\u884c\u4e86\u3002\n\n\n\n\n**\u4ee3\u7801**  \n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native\")\n#define rd(x) x=read()\n#define wt(x) write(x)\n#define pos(x) (((x)-1)/SZ+1)\n#define endl \"\\n\"\n#define pii pair<int,int>\n#define fi first\n#define se second\n#define mp make_pair\n#define ls (rt<<1)\n#define rs (rt<<1|1)\n#define y1 _________\nusing namespace std;\nconst int N=2e5+5;\nconst int M=70;\nconst int SZ=450;\nconst int mod=1e9+7;\nconst int inf=0x3f3f3f3f3f3f3f3f;\nint read(){int x=0,f=1;char ch=getchar();while(ch>'9'||ch<'0'){if (ch=='-')f=-1;ch=getchar();}while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}return x*f;}\nvoid write(int x){if(x<0){putchar('-');x=-x;}if(x>=10)write(x/10);putchar(x%10+'0');}\nint ksm(int x,int y=mod-2,int z=mod){int ret=1;while (y){if (y&1) ret=(ret*x)%z;x=(x*x)%z;y>>=1;}return ret;}\nvoid gmax(int &x,int y){x=max(x,y);}\nint n,ans;\nint a[N],p[N],L[N],R[N];\nint mx[N<<2],tag[N<<2];\nvoid pushup(int rt){mx[rt]=max(mx[ls],mx[rs])+tag[rt];}\n\nvoid build(int rt,int l,int r)\n{\n    tag[rt]=0;if (l==r){mx[rt]=l-(l&1);return;}\n    int mid=(l+r)>>1;build(ls,l,mid);build(rs,mid+1,r);pushup(rt);\n}\n\nvoid update(int rt,int l,int r,int L,int R,int x)\n{\n    if (L<=l && r<=R) {tag[rt]+=x;mx[rt]+=x;return;}\n    int mid=(l+r)>>1;\n    if (L<=mid) update(ls,l,mid,L,R,x);\n    if (R>mid) update(rs,mid+1,r,L,R,x);\n    pushup(rt);\n}\nint query(int rt,int l,int r,int L,int R)\n{\n    if (L>R) return 0;if (L<=l && r<=R) return mx[rt];\n    int mid=(l+r)/2,ret=0;\n    if (L<=mid) gmax(ret,query(ls,l,mid,L,R));\n    if (R>mid) gmax(ret,query(rs,mid+1,r,L,R));\n    return ret+tag[rt];\n}\nvoid DOIT()\n{\n    ans=0;rd(n);for (int i=1;i<=n;i++) rd(a[i]),p[a[i]]=i;build(1,1,n);\n    L[n+1]=n+1;R[0]=0;\n\tfor (int i=n;i>=1;i--) L[i]=min(L[i+1],p[i]);\n\tfor (int i=1;i<=n;i++) R[i]=max(R[i-1],p[i]);\n    for (int i=1;i<n;i++)\n    {\n        int t=p[i];\n        update(1,1,n,t,t,t&1?1:-1);\n        if (t!=1) update(1,1,n,1,t-1,1);\n        if (t!=n) update(1,1,n,t+1,n,-1);\n        ans=max(ans,query(1,1,n,L[i+1],R[i]));\n    }\n    cout<<ans<<endl;\n}\nsigned main()\n{\n    int JYZ;rd(JYZ);while (JYZ--) DOIT();\n}\n/*\n\n*/\n```\n",
        "postTime": 1630332639,
        "uid": 70132,
        "name": "AsunderSquall",
        "ccfLevel": 7,
        "title": "CF1558F"
    },
    {
        "content": "tourist \u7684\u795e\u4ed9\u9898\uff0c\u7231\u4e86\u7231\u4e86\u3002\n\n---\n\n\u8fd9\u79cd\u6392\u5e8f\u6b21\u6570\u76f8\u5173\u7684\u9898\u6709\u4e00\u4e2a\u601d\u8def\u662f\u8f6c\u5316\u6210 01 \u5e8f\u5217\u3002\n\n\u5373\u8bbe\u5b9a\u4e00\u4e2a\u9608\u503c $k$\uff0c\u628a\u539f\u5e8f\u5217\u4e2d\u7684\u6570\u66ff\u6362\u6210 $[a_i>k]$\uff0c\u5bf9\u4e8e\u8fd9\u4e2a 01 \u5e8f\u5217\u8ba1\u7b97\u7b54\u6848\u3002\u73b0\u5728\u5c31\u4e0d\u7528\u8003\u8651\u5177\u4f53\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u53ea\u8981\u628a $0$ \u90fd\u653e\u5230 $1$ \u7684\u5de6\u8fb9\u5373\u53ef\u3002\u4e8e\u662f\u5bf9\u4e8e $k\\in[0,n]$ \u90fd\u505a\u4e00\u904d\uff0c\u53d6\u6700\u5927\u503c\u5c31\u662f\u6700\u7ec8\u7b54\u6848\u3002\n\n\u73b0\u5728\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a 01 \u5e8f\u5217\u8ba1\u7b97\u7b54\u6848\uff0c\u7528 $0_i$ \u8868\u793a\u4ece\u5de6\u5f80\u53f3\u6570\u7b2c $i$ \u4e2a $0$\uff0c$g(i)$ \u8868\u793a $0_i$ \u5230\u8fbe\u4e0b\u6807 $i$ \u6240\u9700\u7684\u64cd\u4f5c\u6570\uff0c$pos_i$ \u8868\u793a $0_i$ \u7684\u521d\u59cb\u4e0b\u6807\uff0c\u5171 $m$ \u4e2a $0$\u3002\n\n\u9996\u5148\uff0c\u7279\u5224\u6389 $pos_i=i$ \u7684\u60c5\u51b5\uff0c$g(i)=0$\u3002\n\n\u7136\u540e\u5206\u7c7b\u8ba8\u8bba\u4e24\u79cd\u60c5\u51b5\uff1a\n\n- $0_i$ \u5728\u8def\u9014\u4e2d\u88ab $0_{i-1}$ \u6321\u4f4f\u4e86\u3002\u6211\u4eec\u6709 $g(i)=g(i-1)+1$\u3002\n\n\u56e0\u4e3a $0_i$ \u7edd\u5bf9\u4e0d\u53ef\u80fd\u6bd4 $0_{i-1}$ \u5148\u5230\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c$0_{i-1}$ \u5728 $0_i$ \u524d\u9762\u4e00\u4e2a\u4f4d\u7f6e\uff0c$0_{i-1}$ \u5230\u8fbe\u4e4b\u540e\u4e0b\u4e00\u8f6e\u64cd\u4f5c\u4e00\u5b9a\u4f1a\u628a $0_i$ \u4e5f\u4ea4\u6362\u5230\u76ee\u7684\u5730\u3002\n\n- $0_i$ \u6ca1\u6709\u88ab $0_{i-1}$ \u6321\u4f4f\u3002\u5047\u8bbe $0_i$ \u524d\u9762\u6709 $k_i$ \u4e2a $1$\uff0c\u6211\u4eec\u6709 $g(i)=k_i+(pos_i\\bmod2)$\u3002\n\n\u5982\u679c $pos_i$ \u662f\u5947\u6570\uff0c\u90a3\u4e48\u7b2c\u4e00\u8f6e\u64cd\u4f5c\u5c31\u88ab\u6d6a\u8d39\u4e86\uff0c\u56e0\u4e3a $0_i$ \u4e0d\u53ef\u80fd\u4e0e\u540e\u4e00\u4e2a\u4f4d\u7f6e\u8fdb\u884c\u4ea4\u6362\u3002\u4e4b\u540e\u7684\u6bcf\u4e00\u8f6e\u64cd\u4f5c\u90fd\u4e00\u5b9a\u4f1a\u4f7f\u5f97 $0_i$ \u4e0e\u524d\u65b9\u7684\u4e00\u4e2a $1$ \u8fdb\u884c\u4ea4\u6362\uff08\u800c\u4e0d\u4f1a\u649e\u5230 $0_{i-1}$\uff09\uff0c\u603b\u5171\u4ea4\u6362 $k_i$ \u6b21\u3002\n\n\u7efc\u4e0a\uff0c$g(i)=\\max(g(i-1)+1,k_i+(pos_i\\bmod2))$\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u7b54\u6848\u5c31\u662f $g(m)$\u3002\u6211\u4eec\u8bbe $t$ \u662f\u6ee1\u8db3 $\\forall i\\in[1,t],pos_i=i$ \u7684\u6700\u5927\u6574\u6570\uff0c\u5bf9\u4e8e\u4e0a\u9762\u9012\u63a8\u5f62\u5f0f\u7684\u5f0f\u5b50\u8fdb\u884c\u91cd\u5199\uff1a\n\n$$\ng(m)=\\max_{i=t+1}^m(k_i+(pos_i\\bmod2)+(m-i))\n$$\n\n\u8981\u5bf9\u6bcf\u4e00\u4e2a 01 \u5e8f\u5217\u90fd\u6c42\u4e00\u6b21\u4e0a\u5f0f\u5e76\u53d6\u6700\u5927\u503c\u3002\u90a3\u4e48\u53ef\u4ee5\u8003\u8651\u521d\u59cb\u662f\u4e00\u4e2a\u5168 $1$ \u7684\u5e8f\u5217\uff0c\u6bcf\u6b21\u628a\u4e00\u4e2a\u6570\u53d8\u6210 $0$\uff0c\u7528\u533a\u95f4\u52a0\u3001\u533a\u95f4\u6700\u503c\u7684\u7ebf\u6bb5\u6811\u5c31\u5f88\u5bb9\u6613\u7ef4\u62a4\u3002\u590d\u6742\u5ea6 $\\mathbb O(n\\log n)$\u3002\n\n\u63d0\u4e00\u5634\u5b9e\u73b0\u7ec6\u8282\u3002\n\n\u5bf9\u4e8e\u503c\u4e3a $1$ \u7684\u70b9\uff0c\u53ef\u4ee5\u5148\u51cf\u4e00\u4e2a ```inf```\uff0c\u53d8\u6210 $0$ \u4e4b\u540e\u518d\u52a0 ```inf``` \u6fc0\u6d3b\u8fd9\u4e2a\u70b9\u3002\n\n\u81f3\u4e8e\u90a3\u4e2a $t$\uff1f\u6211\u6bd4\u8f83\u5f31\u667a\uff0c\u662f\u7528\u7ebf\u6bb5\u6811\u4e8c\u5206\u5b9e\u73b0\u7684\uff08\u7528 ```sum[id]``` \u8bb0\u5f55\u4e00\u4e2a\u533a\u95f4\u4e2d\u6709\u591a\u5c11 $0$\uff09\u3002\n\nCode\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int inf=20000000;\nint T,n,pos[200005];\nnamespace segment_tree{\n\tint tree[200005<<2],tag[200005<<2],sum[200005<<2];\n\tinline void pushup(int id){\n\t\ttree[id]=max(tree[id<<1],tree[id<<1|1]);\n\t\tsum[id]=sum[id<<1]+sum[id<<1|1];\n\t}\n\tinline void pushdown(int id){\n\t\tif(!tag[id])return;\n\t\ttree[id<<1]+=tag[id],tag[id<<1]+=tag[id];\n\t\ttree[id<<1|1]+=tag[id],tag[id<<1|1]+=tag[id];\n\t\ttag[id]=0;\n\t}\n\tvoid build(int id,int l,int r){\n\t\ttree[id]=tag[id]=sum[id]=0;\n\t\tif(l==r){tree[id]=(l&1)+(l-1)-1-inf;return;}\n\t\tint mid=(l+r)>>1;\n\t\tbuild(id<<1,l,mid),build(id<<1|1,mid+1,r);\n\t\tpushup(id);\n\t}\n\tvoid update(int id,int l,int r,int ql,int qr,int val){\n\t\tif(l>qr||r<ql)return;\n\t\tif(l>=ql&&r<=qr){tree[id]+=val,tag[id]+=val;return;}\n\t\tint mid=(l+r)>>1;\n\t\tpushdown(id);\n\t\tupdate(id<<1,l,mid,ql,qr,val),update(id<<1|1,mid+1,r,ql,qr,val);\n\t\tpushup(id);\n\t}\n\tvoid update(int id,int l,int r,int pos){\n\t\tif(l>pos||r<pos)return;\n\t\tif(l==r){sum[id]++,tree[id]+=inf;return;}\n\t\tint mid=(l+r)>>1;\n\t\tpushdown(id);\n\t\tupdate(id<<1,l,mid,pos),update(id<<1|1,mid+1,r,pos);\n\t\tpushup(id);\n\t}\n\tint querypos(int id,int l,int r){\n\t\tif(l==r)return l;\n\t\tint mid=(l+r)>>1;\n\t\tpushdown(id);\n\t\treturn (sum[id<<1]==mid-l+1)?querypos(id<<1|1,mid+1,r):querypos(id<<1,l,mid);\n\t}\n\tint query(int id,int l,int r,int ql,int qr){\n\t\tif(l>qr||r<ql)return 0;\n\t\tif(l>=ql&&r<=qr)return tree[id];\n\t\tint mid=(l+r)>>1;\n\t\tpushdown(id);\n\t\treturn max(query(id<<1,l,mid,ql,qr),query(id<<1|1,mid+1,r,ql,qr));\n\t}\n}using namespace segment_tree;\nint main(){\n\tscanf(\"%d\",&T);\n\twhile(T--){\n\t\tscanf(\"%d\",&n);\n\t\tfor(int i=1,tmp;i<=n;i++){\n\t\t\tscanf(\"%d\",&tmp);\n\t\t\tpos[tmp]=i;\n\t\t}build(1,1,n);\n\t\tint ans=0;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tupdate(1,1,n,pos[i]+1,n,-2);\n\t\t\tupdate(1,1,n,1,n,1);\n\t\t\tupdate(1,1,n,pos[i]);\n\t\t\tint t=(sum[1]==n)?n+1:querypos(1,1,n);\n\t\t\tans=max(ans,query(1,1,n,t,n));\n\t\t}printf(\"%d\\n\",ans);\n\t}return 0;\n}\n```\n",
        "postTime": 1666276897,
        "uid": 148226,
        "name": "Fan_sheng",
        "ccfLevel": 6,
        "title": "CF1558F Strange Sort"
    },
    {
        "content": "\u8003\u8651\u8f6c\u5316\u4e3a $01$ \u6392\u5e8f\uff0c\u7b54\u6848\u5373\u4e3a\u6240\u6709\u5212\u5206\u503c\u7b54\u6848\u7684\u6700\u5927\u503c\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u5728 $01$ \u6392\u5e8f\u4e2d\uff0c\u76f8\u540c\u6570\u5b57\u7684\u76f8\u5bf9\u4f4d\u7f6e\u4e0d\u4f1a\u53d8\u5316\uff0c\u6545\u7b54\u6848\u5373\u4e3a\u6700\u53f3\u4fa7\u7684 $0$ \u7684\u5c31\u4f4d\u65f6\u95f4\u3002\n\n\u8bbe $f_i$ \u4e3a\u7b2c $i$ \u4e2a $0$ \u5f52\u4e3a\u7684\u65f6\u95f4\uff0c$k_i$ \u4e3a\u5176\u524d\u9762 $1$ \u7684\u4e2a\u6570\uff0c$p_i$ \u4e3a\u5176\u4f4d\u7f6e\u3002\n\n- \u82e5 $p_i=i$\uff0c\u5219 $f_i=0$\uff0c\u8fd9\u663e\u7136\u662f\u4e00\u6bb5\u524d\u7f00\u3002\n\n- \u5426\u5219\u6709 $f_i=\\max\\{f_{i-1}+1,k_i+(p_i\\bmod 2)\\}$\u3002\n\n\u6545 $f_i=\\max\\limits_{j\\leqslant i,p_j\\neq j}\\{ k_j+(p_j\\bmod 2)+i-j\\}$\uff0c\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u6bcf\u4e00\u6b65\u90fd\u5f88\u81ea\u7136\uff0c\u5b9e\u73b0\u4e5f\u5f88\u7b80\u5355\uff0c\u4f46\u4e3a\u4ec0\u4e48\u6211\u4e0d\u4f1a\u5462\uff1f\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=2e5+10;\nconst int mod=1e9+7;\n#define inf 1e9\ninline int read(){\n\tint x=0,f=1;char c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9'){x=(x<<1)+(x<<3)+c-'0';c=getchar();}\n\treturn x*f;\n}\nint n,m,a[maxn],T,p[maxn],bt[maxn],tr[maxn<<2],laz[maxn<<2];\ninline void build(int h,int l,int r){\n\ttr[h]=-inf;laz[h]=0;\n\tif(l==r)return;\n\tint mid=(l+r)>>1;\n\tbuild(h<<1,l,mid);\n\tbuild(h<<1|1,mid+1,r);\n}\ninline void pushup(int h,int z){tr[h]+=z;laz[h]+=z;}\ninline void pushdown(int h){pushup(h<<1,laz[h]);pushup(h<<1|1,laz[h]);laz[h]=0;}\ninline void update(int h,int l,int r,int x,int y){\n\tif(l==r)return void(tr[h]=y);\n\tint mid=(l+r)>>1;pushdown(h);\n\tif(mid>=x)update(h<<1,l,mid,x,y);\n\telse update(h<<1|1,mid+1,r,x,y);\n\ttr[h]=max(tr[h<<1],tr[h<<1|1]);\n}\ninline void modify(int h,int l,int r,int x,int y,int z){\n\tif(l>y||r<x||x>y)return;\n\tif(l>=x&&r<=y)return void(pushup(h,z));\n\tint mid=(l+r)>>1;pushdown(h);\n\tmodify(h<<1,l,mid,x,y,z);\n\tmodify(h<<1|1,mid+1,r,x,y,z);\n\ttr[h]=max(tr[h<<1],tr[h<<1|1]);\n}\ninline int query(int h,int l,int r,int x,int y){\n\tif(l>y||r<x)return -inf;\n\tif(l>=x&&r<=y)return tr[h];\n\tint mid=(l+r)>>1;pushdown(h);\n\treturn max(query(h<<1,l,mid,x,y),query(h<<1|1,mid+1,r,x,y));\n}\ninline void bl(int h,int l,int r){\n\tif(l==r){\n\t\tprintf(\"%d \",tr[h]);\n\t\treturn;\n\t}int mid=(l+r)>>1;\n\tpushdown(h);\n\tbl(h<<1,l,mid),bl(h<<1|1,mid+1,r);\n}\ninline void solve(){\n\tn=read();int ans=0;\n\tfor(int i=1;i<=n;i++)\n\t\ta[i]=read(),p[a[i]]=i,bt[i]=0;\n\tbuild(1,1,n);\n\tfor(int i=1,pos=1;i<n;i++){\n\t\tfor(int j=p[i];j<=n;j+=j&(-j))bt[j]++;\n\t\tint K=p[i],P=p[i],V=0;\n\t\tfor(int j=P;j;j-=j&(-j))K-=bt[j];\n\t\twhile(pos<=n&&a[pos]<=i)++pos;\n\t\tif(pos==i+1)continue;\n\t\tupdate(1,1,n,P,K+(P&1)-(P-K));\n\t\tmodify(1,1,n,P+1,n,-2);\n//\t\tprintf(\"i=%d P=%d K=%d res=%d pos=%d\\n\",i,P,K,i+query(1,1,n,pos,n),pos);\n//\t\tbl(1,1,n);puts(\"\");\n\t\tans=max(ans,i+query(1,1,n,pos,n));\n\t}printf(\"%d\\n\",ans);\n}\nint main(){\n\tT=read();\n\twhile(T--)solve();\n\treturn 0;\n}\n```\n\n\u6df1\u6df1\u5730\u611f\u5230\u81ea\u5df1\u7684\u5f31\u5c0f\u3002",
        "postTime": 1667529733,
        "uid": 140876,
        "name": "syzf2222",
        "ccfLevel": 9,
        "title": "CF1558F Strange Sort"
    },
    {
        "content": "\u9996\u5148\u53d1\u73b0\u8fd9\u4e1c\u897f\u6839\u672c\u4e0d\u53ef\u505a\u3002\u8003\u8651\u964d\u503c\u57df\uff01\u628a $a_i$ \u53d8\u6210 $[a_i \\ge k]$ \u8f6c\u5316\u6210 01 \u5e8f\u5217\u53bb\u505a\uff0c\u90a3\u4e48\u6700\u7ec8\u7684\u7b54\u6848\u5c31\u662f\u6240\u6709 $k$ \u5f97\u5230\u7684\u7b54\u6848\u7684 $\\max$\u3002\n\n\u5148\u8003\u8651\u4e00\u4e2a 01 \u5e8f\u5217\u600e\u4e48\u505a\u3002\u6211\u4eec\u8003\u8651\u6c42\u51fa\u6bcf\u4e00\u4e2a $0$ \u5230\u8fbe\u5b83\u8be5\u5230\u8fbe\u7684\u4f4d\u7f6e\u6240\u9700\u7684\u65f6\u95f4 $f_i$\u3002\u5bf9\u4e8e\u4e00\u4e2a $0$\uff0c\u6211\u4eec\u6709\u4e24\u79cd\u53ef\u80fd\u6027\uff1a\n\n1. \u5728\u5411\u5de6\u4ea4\u6362\u7684\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u78b0\u5230\u4efb\u4f55\u4e00\u4e2a $0$\uff1b\n2. \u5728\u5411\u5de6\u4ea4\u6362\u7684\u65f6\u5019\u78b0\u5230\u4e86\u4e00\u4e2a $0$\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5f53\u4ea4\u6362\u8fc7\u7a0b\u4e2d\u78b0\u5230\u4e00\u4e2a $0$ \u540e\uff0c\u4e4b\u540e\u80af\u5b9a\u662f\u524d\u4e00\u4e2a $0$ \u600e\u4e48\u8d70\u5b83\u5c31\u600e\u4e48\u8d70\uff0c\u4e8e\u662f\u7b54\u6848\u5c31\u662f $f_{i - 1} + 1$\uff1b\u5982\u679c\u6ca1\u6709\u78b0\u5230\u4efb\u4f55\u4e00\u4e2a $0$\uff0c\u8bbe\u8fd9\u4e2a\u6570\u7684\u4f4d\u7f6e\u4e3a $t_i$\uff0c\u90a3\u4e48\u5b83\u7684\u7b54\u6848\u5c31\u662f\u524d\u9762\u7684 $1$ \u7684\u4e2a\u6570 $k_i$\uff0c\u518d\u52a0\u4e0a\u4e00\u4e2a $(t_i \\bmod 1)$\uff08\u8003\u8651\u7b2c\u4e00\u6b21\u662f\u5426\u88ab\u4ea4\u6362\uff09\u3002\u5373\uff1a\n\n$$f_i = \\max\\{f_{i - 1} + 1, k_i + (t_i \\bmod 1)\\}$$\n\n\u8bbe\u4e00\u5171\u6709 $m$ \u4e2a $1$\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651 $f_m$ \u5373\u53ef\u3002\u628a\u4e0a\u9762\u7684\u5f0f\u5b50\u66b4\u529b\u5c55\u5f00\uff0c\u5373\u53ef\u5f97\u5230\uff1a\n\n$$f_m = \\max_{i=pre+1}^m \\{k_i + (t_i \\bmod 1) + (m - i)\\}$$\n\n\u5176\u4e2d $pre$ \u8868\u793a\u6ee1\u8db3 $f_i = 0$\uff08\u5373\u4e00\u5f00\u59cb\u5c31\u5df2\u7ecf\u5728\u6b63\u786e\u7684\u4f4d\u7f6e\uff09\u7684\u524d\u7f00\u957f\u5ea6\u3002\n\n\u628a\u5b83\u653e\u5230\u5e8f\u5217\u4e0a\u7ef4\u62a4\uff0c\u8bbe\u7b2c $i$ \u4e2a\u4f4d\u7f6e\u524d\u9762\u6709 $p_i$ \u4e2a $0$\uff0c$i - p_i$ \u4e2a $1$\uff0c\u90a3\u4e48\u5176\u5b9e\u5c31\u662f\uff1a\n\n$$f_m = \\max_{i=pre+1}^n \\{[a_i = 0] (p_i + (i \\bmod 1) + (m - (i - p_i)))\\}$$\n\n$$f_m = \\max_{i=pre+1}^n \\{[a_i = 0] (2p_i + (i \\bmod 1) + m - i)\\}$$\n\n\u8fd9\u4e1c\u897f\u5f88\u5bb9\u6613\u5728\u7ebf\u6bb5\u6811\u4e0a\u7ef4\u62a4\uff0c\u90a3\u4e48\u6211\u4eec\u6bcf\u6b21\u5c06\u4e00\u4e2a $1$ \u6539\u4e3a $0$\uff0c\u76f4\u63a5\u7ef4\u62a4\u5373\u53ef\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 200005;\nint n, a[MAXN], p[MAXN];\nstruct SegmentTree {\n    struct Node {\n        int val, tag;\n    } t[MAXN << 2];\n#define lc (i << 1)\n#define rc (i << 1 | 1)\n    void tag(int i, int v) {\n        t[i].tag += v;\n        t[i].val += v;\n    }\n    void pushDown(int i) {\n        if (t[i].tag) {\n            tag(lc, t[i].tag);\n            tag(rc, t[i].tag);\n            t[i].tag = 0;\n        }\n    }\n    void add(int a, int b, int v, int i = 1, int l = 1, int r = n) {\n        if (a <= l && r <= b) {\n            tag(i, v);\n            return;\n        }\n        int mid = (l + r) >> 1;\n        pushDown(i);\n        if (a <= mid) add(a, b, v, lc, l, mid);\n        if (b > mid) add(a, b, v, rc, mid + 1, r);\n        t[i].val = max(t[lc].val, t[rc].val);\n    }\n    int query(int a, int b, int i = 1, int l = 1, int r = n) {\n        if (a > b) return -30 * n;\n        if (a <= l && r <= b) return t[i].val;\n        int mid = (l + r) >> 1;\n        pushDown(i);\n        if (b <= mid) return query(a, b, lc, l, mid);\n        if (a > mid) return query(a, b, rc, mid + 1, r);\n        return max(query(a, b, lc, l, mid), query(a, b, rc, mid + 1, r));\n    }\n    void build(int i = 1, int l = 1, int r = n) {\n        t[i].val = t[i].tag = 0;\n        if (l == r) return;\n        int mid = (l + r) >> 1;\n        build(lc, l, mid), build(rc, mid + 1, r);\n    }\n} st;\nint T;\nbool b[MAXN];\nint main() {\n    scanf(\"%d\", &T);\n    while (T--) {\n        scanf(\"%d\", &n);\n        st.build();\n        for (int i = 1; i <= n; i++) {\n            scanf(\"%d\", &a[i]);\n            p[a[i]] = i;\n            b[i] = 1;\n        }\n        st.add(1, n, -10 * n);\n        for (int i = 1; i <= n; i++) {\n            st.add(i, i, (i & 1) + i);\n        }\n        int pre = 0;\n        int ans = 0;\n        for (int i = 1; i <= n; i++) {\n            b[p[i]] = 0;\n            while (pre < n && !b[pre + 1]) pre++;\n            st.add(p[i], p[i], 10 * n);\n            st.add(p[i], n, -2);\n            ans = max(ans, i + st.query(pre + 1, n));\n        }\n        printf(\"%d\\n\", ans);\n    }\n    return 0;\n}\n\n```",
        "postTime": 1684843024,
        "uid": 279652,
        "name": "APJifengc",
        "ccfLevel": 9,
        "title": "\u300c\u89e3\u9898\u62a5\u544a\u300dCF1558F Strange Sort"
    }
]