[
    {
        "content": "\n\u7f51\u7edc\u6d41\u597d\u9898\uff0c\u6a21\u578b\u662f\u4e8c\u5206\u56fe\u7684\u6700\u5c0f\u8986\u76d6\n\n---\n\n### \u9898\u89e3\uff1a\n\n\u9996\u5148\u8981\u60f3\u5230\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u8d2a\u5fc3\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u9ed1\u683c\uff0c\u4ed6\u8981\u4e48\u662f\u5728\u7eb5\u5411\u4e0a\u88ab\u5b8c\u5168\u8986\u76d6\uff0c\u8981\u4e48\u662f\u5728\u6a2a\u5411\u4e0a\u88ab\u5b8c\u5168\u8986\u76d6\uff0c\u5176\u4e2d\u201c\u5b8c\u5168\u8986\u76d6\u201d\u662f\u6307\u6574\u884c\u6216\u6574\u5217\u90fd\u88ab\u4e00\u6b21\u6027\u6d82\u767d\n\n\u7a0d\u5fae\u601d\u8003\u4e00\u4e0b\uff0c\u9898\u76ee\u53d8\u6210\u4e86\u5728\u7eb5\u5411\u4e0a\u9009\u4e00\u4e9b\u5217\uff0c\u5728\u6a2a\u5411\u4e0a\u9009\u4e00\u4e9b\u884c\uff0c\u4f7f\u5f97\u5c06\u4ed6\u4eec\u5b8c\u5168\u8986\u76d6\u540e\u4e0d\u5b58\u5728\u4e00\u4e2a\u9ed1\u683c\uff0c\u95ee\u6700\u5c11\u7684\u9009\u62e9\u6570\n\n\u6211\u4eec\u53ef\u4ee5\u5c06\u6709\u9ed1\u683c\u7684\u884c\u770b\u6210\u4e00\u4e2a\u70b9\u96c6\uff0c\u5c06\u6709\u9ed1\u683c\u7684\u5217\u770b\u6210\u53e6\u4e00\u4e2a\u70b9\u96c6\uff0c\u5bf9\u4e8e\u4e24\u8005\u4e4b\u95f4\u7684\u4ea4\u70b9\uff0c\u770b\u6210\u4e24\u4e2a\u70b9\u96c6\u4e4b\u95f4\u7684\u8fde\u8fb9\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u4e8c\u5206\u56fe\n\n\u9898\u76ee\u53d8\u6210\u4e86\u4e8c\u5206\u56fe\u7684\u6700\u5c0f\u8986\u76d6\u95ee\u9898\n\n\u7531\u4e8e\u8fd9\u5f20\u4e8c\u5206\u56fe\u7684\u70b9\u6570\u5f88\u548c\u8fb9\u6570\u591a\uff0c\u6211\u4eec\u8003\u8651\u79bb\u6563\u4e0e\u538b\u7f29\uff0c\u5e76\u7528\u7f51\u7edc\u6d41\u8fdb\u884c\u4f18\u5316\uff0c\u56e0\u4e3a\u6709\u4e00\u4e2a\u91cd\u8981\u5b9a\u7406\uff1a\u6700\u5c0f\u8986\u76d6=\u6700\u5927\u6d41\n\n\u79bb\u6563\u540e\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u77e9\u5f62\uff0c\u6211\u4eec\u53ea\u8003\u8651\u5b83\u7684\u56db\u4e2a\u8fb9\u754c\uff0c\u4e24\u4e2a\u5bf9\u7acb\u8fb9\u754c\u4e2d\u6240\u6709\u70b9\u7684\u4ee3\u4ef7\u5168\u90e8\u8d4b\u7ed9\u9760\u53f3\uff08\u6216\u4e0b\uff09\u7684\u8fb9\u754c\u70b9\uff0c\u5373\uff08\u53f3\u51cf\u5de6\uff0c\u6216\u4e0b\u51cf\u4e0a\uff09\n\n\u6211\u4eec\u77e5\u9053\uff0c\u7f51\u7edc\u6d41\u4e2d\u70b9\u7684\u4ee3\u4ef7\u662f\u7531\u8d85\u6e90\u548c\u8d85\u6c47\u7ed9\u4ed6\u7684\uff0c\u4e8e\u662f\u4ece\u8d85\u6e90\u5411\u884c\u70b9\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a\u5176\u4ee3\u4ef7\uff0c\u4ece\u5217\u70b9\u5411\u8d85\u6c47\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a\u5176\u4ee3\u4ef7\uff0c\u884c\u70b9\u548c\u5217\u70b9\u4e4b\u95f4\u7684\u8fde\u8fb9\u5373\u4e24\u8005\u662f\u5426\u76f8\u4ea4\uff0c\u5bb9\u91cf\u4e3a\u65e0\u7a77\u5927\n\n\u5177\u4f53\u7684\uff0c\u5728\u4ee3\u7801\u5b9e\u73b0\u4e2d\uff0c\u6211\u4eec\u5c06\u4e00\u6761\u8fb9\u754c\u5f62\u5982$[l,r]$\u7684\u5de6\u95ed\u53f3\u95ed\u533a\u95f4\uff0c\u4fee\u6539\u6210\u5f62\u5982$[l,r+1)$\u7684\u5de6\u95ed\u53f3\u5f00\u533a\u95f4\n\n\u8fd9\u662f\u4e00\u4e2a\u5341\u5206\u5957\u8def\u7684\u65b9\u4fbf\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u6e05\u695a\u7684\u5224\u5b9a\u4e00\u4e2a\u70b9\u5230\u5e95\u662f\u8981\u88ab\u7b97\u8fdb\u5de6\u8fb9\u7684\u4ee3\u4ef7\u8fd8\u662f\u53f3\u8fb9\u7684\u4ee3\u4ef7\uff0c\u5e76\u9632\u6b62\u6700\u53f3\u8fb9\u88ab\u6f0f\u6389\uff0c\u8be6\u7ec6\u53ef\u4ee5\u770b\u4ee3\u7801\n\n---\n\n\u4ee3\u7801\u8f7b\u5fae\u590d\u6742\uff0c\u7279\u5148\u505a\u51fa\u6ce8\u91ca\uff1a\n\n.x.x=x1\n\n.x.y=y1\n\n.y.x=x2\n\n.y.y=y2\n\n---\n\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntemplate<class t> inline t read(t &x){\n\tx=0;char c=getchar();bool f=0;\n\twhile(!isdigit(c)) f|=c=='-',c=getchar();\n\twhile(isdigit(c)) x=(x<<1)+(x<<3)+(c^48),c=getchar();\n\tif(f) x=-x;return  x;\n}\ntemplate<class t> inline void write(t x){\n\tif(x<0){putchar('-'),write(-x);}\n\telse{if(x>9)write(x/10);putchar('0'+x%10);}\n}\n\n#define pii pair<int,int>\n#define x first\n#define y second\n\nconst int oo=0x7fffffff,N=405,M=N*N+5;\nint en=1,h[N],n,m,s,t,cur[N],d[N],ux[N],uy[N],uxn,uyn;\n\npair<pii,pii> a[N]; //pii\u5957pii~\n\nstruct edge{\n\tint n,v,w;\n}e[M<<1];\n\nvoid add(int x,int y,int z){\n\te[++en]=(edge){h[x],y,z};\n\th[x]=en;\n}\n\nbool bfs(int s,int t){\n\tfor(int i=s;i<=t;i++) d[i]=0,cur[i]=h[i];\n\tqueue<int> q;\n\tq.push(s);\n\td[s]=1;\n\twhile(!q.empty()){\n\t\tint x=q.front();\n\t\tq.pop();\n\t\tfor(int i=h[x];i;i=e[i].n){\n\t\t\tint y=e[i].v;\n\t\t\tif(!d[y]&&e[i].w){\n\t\t\t\td[y]=d[x]+1;\n\t\t\t\tif(y==t) return 1;\n\t\t\t\tq.push(y);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n\nint dfs(int x,int flow,int t){\n\tif(x==t) return flow;\n\tint rest=flow;\n\tfor(int &i=cur[x];i&&rest;i=e[i].n){\n\t\tint y=e[i].v;\n\t\tif(d[y]==d[x]+1&&e[i].w){\n\t\t\tint tp=dfs(y,min(rest,e[i].w),t);\n\t\t\trest-=tp;\n\t\t\te[i].w-=tp;\n\t\t\te[i^1].w+=tp;\n\t\t}\n\t}\n\treturn flow-rest;\n}\n\nint dinic(int s,int t){\n\tint res=0;\n\twhile(bfs(s,t)) res+=dfs(s,oo,t);\n\treturn res;\n}\n\nsigned main(){\n\tread(n);read(m);\n\tfor(int i=1;i<=m;i++){\n\t\tread(a[i].x.x);\n\t\tread(a[i].x.y);\n\t\tread(a[i].y.x);a[i].y.x++; //\u6539\u6210\u5de6\u95ed\u53f3\u5f00\u533a\u95f4\n\t\tread(a[i].y.y);a[i].y.y++;\n\t\tux[++uxn]=a[i].x.x;\n\t\tuy[++uyn]=a[i].x.y;\n\t\tux[++uxn]=a[i].y.x;\n\t\tuy[++uyn]=a[i].y.y;\n\t}\n\tux[++uxn]=uy[++uyn]=n+1; //\u52a0\u4e00\u4e2a\u8fb9\u754c\uff0c\u4ee5\u9632\u9057\u6f0f\u6700\u53f3\u70b9\n\tsort(ux+1,ux+1+uxn);\n\tsort(uy+1,uy+1+uyn);\n\tuxn=unique(ux+1,ux+1+uxn)-ux-1; //\u79bb\u6563\n\tuyn=unique(uy+1,uy+1+uyn)-uy-1;\n\ts=0,t=uxn+uyn+1; //\u8d85\u6e90\u8d85\u6c47\n\tfor(int i=1;i<=m;i++){\n\t\ta[i].x.x=lower_bound(ux+1,ux+1+uxn,a[i].x.x)-ux; //\u79bb\u6563\u540e\u7684\u5750\u6807\n\t\ta[i].x.y=lower_bound(uy+1,uy+1+uyn,a[i].x.y)-uy;\n\t\ta[i].y.x=lower_bound(ux+1,ux+1+uxn,a[i].y.x)-ux;\n\t\ta[i].y.y=lower_bound(uy+1,uy+1+uyn,a[i].y.y)-uy;\n\t\tfor(int x=a[i].x.x;x<a[i].y.x;x++)\n\t\t\tfor(int y=a[i].x.y;y<a[i].y.y;y++)\n\t\t\t\tadd(x,y+uxn,oo),add(y+uxn,x,0); //\u6dfb\u52a0\u4ea4\u70b9\u7684\u65e0\u7a77\u8fb9\n\t}\n\tfor(int i=1;i<uxn;i++) add(s,i,ux[i+1]-ux[i]),add(i,s,0); //\u6839\u636e\u76f8\u90bb\u8fb9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u8ba1\u7b97\u5b83\u7684\u4ee3\u4ef7\uff0c\u5e76\u4ece\u8d85\u6e90\u5411\u884c\u70b9\u8fde\u8fb9\n\tfor(int i=1;i<uyn;i++) add(i+uxn,t,uy[i+1]-uy[i]),add(t,i+uxn,0);\n\twrite(dinic(s,t)); //\u6700\u5927\u6d41=\u6700\u5c0f\u8986\u76d6\n}\n```",
        "postTime": 1578293247,
        "uid": 65735,
        "name": "yuzhechuan",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1198E \u3010Rectangle Painting 2\u3011"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1198E)\n\n## \u524d\u7f6e\u77e5\u8bc6\n\n- \u4e8c\u5206\u56fe\u6700\u5c0f\u9876\u70b9\u8986\u76d6\uff1a\u5047\u5982\u9009\u4e86\u4e00\u4e2a\u70b9\u5c31\u76f8\u5f53\u4e8e\u8986\u76d6\u4e86\u4ee5\u5b83\u4e3a\u7aef\u70b9\u7684\u6240\u6709\u8fb9\uff0c\u6700\u5c0f\u9876\u70b9\u8986\u76d6\u5c31\u662f\u9009\u62e9\u6700\u5c11\u7684\u70b9\u6765\u8986\u76d6\u6240\u6709\u7684\u8fb9\u3002\n\n- K\u00f6nig\u5b9a\u7406\uff1a\u4e8c\u5206\u56fe\u6700\u5c0f\u70b9\u8986\u76d6\u7684\u70b9\u7684\u6570\u91cf**\u7b49\u4e8e**\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u7684\u8fb9\u7684\u6570\u91cf\u3002\n\n## \u9898\u76ee\u5206\u6790\n\n\u4e8c\u5206\u56fe\u6700\u5c0f\u9876\u70b9\u8986\u76d6\u6a21\u578b\u3002\n\n\u5c06\u4e00\u4e2a\u77e9\u5f62\u533a\u57df\u53d8\u767d\u7684\u4ee3\u4ef7\u662f\u8be5\u77e9\u5f62\u7684\u6700\u77ed\u8fb9\u957f\u3002\u6240\u4ee5\u4e00\u6574\u884c\u6216\u4e00\u6574\u5217\u5730\u53d8\u767d\u6027\u4ef7\u6bd4\u66f4\u9ad8\u3002\n\n\u56e0\u6b64\u5c06\u884c\u7684\u96c6\u5408\u548c\u5217\u7684\u96c6\u5408\u5206\u522b\u770b\u4f5c\u4e8c\u5206\u56fe\u7684\u4e24\u4e2a\u70b9\u96c6\uff0c\u884c\u548c\u5217\u7684\u4ea4\u70b9\u4e3a\u4e8c\u5206\u56fe\u7684\u8fb9\uff0c\u8fdb\u884c\u5efa\u56fe\u3002\n\n\u6ce8\u610f\u5230 $n\\le10^9$\uff0c\u4f46 $m\\le50$\uff0c\u6240\u4ee5\u5bf9\u884c\u548c\u5217\u7684\u5750\u6807\u79bb\u6563\u5316\u3002\u6574\u4e2a\u77e9\u5f62\u7684\u4ee3\u4ef7\u8d4b\u7ed9\u9876\u70b9\u3002\n\n\u6e90\u6c47\u70b9\u4e0e\u4e8c\u5206\u56fe\u70b9\u7684\u8fb9\u6743\u4e3a\u6240\u9700\u4ee3\u4ef7\uff0c\u4e8c\u5206\u56fe\u70b9\u95f4\u8fb9\u6743\u4e3a\u6b63\u65e0\u7a77\u3002\n\n\u7528\u5308\u7259\u5229\u7b97\u6cd5\u6216 ``Dinic`` \u8dd1\u6700\u5927\u6d41\u5747\u53ef\u3002\n\n## code\n\n\u559c\u63d0\u6b21\u4f18\u89e3\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define rei register int\n#define N 100010\nusing namespace std;\nconst int inf = 1e9;\n\ntemplate <typename T> inline void read(T &x)\n{\n\tx = 0; int f = 1; char ch = getchar();\n\twhile (!isdigit(ch)) {if (ch == '-') f = -f; ch = getchar();}\n\twhile (isdigit(ch)) {x = x * 10 + ch - 48; ch = getchar();}\n\tx *= f;\n}\n\nint n, m, X[N], Y[N], lenx, leny, s, t, head[N], edge_cnt = 1, cur[N], dep[N];\nstruct Squ {int x1, y1, x2, y2;} a[N];\nstruct edge {int nxt, v, w;} e[N << 1];\n\ninline void add_edge(int u, int v, int w) {e[++edge_cnt].nxt = head[u]; head[u] = edge_cnt; e[edge_cnt].v = v; e[edge_cnt].w = w;}\n\ninline bool Bfs()\n{\n\tqueue<int> q; \n\tmemset(dep, 0, sizeof(dep)); \n\tdep[s] = 1; \n\tq.push(s); \n\twhile (q.size())\n\t{\n\t\tint u = q.front(); q.pop(); cur[u] = head[u];\n\t\tfor (rei i = head[u]; i; i = e[i].nxt)\n\t\t{\n\t\t\tint v = e[i].v;\n\t\t\tif (!dep[v] && e[i].w)\n\t\t\t{\n\t\t\t\tdep[v] = dep[u] + 1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn dep[t] != 0;\n}\n\ninline int Dfs(int u, int flow)\n{\n\tif (u == t) return flow;\n\tint rest = flow;\n\tfor (rei i = cur[u]; i; i = e[i].nxt)\n\t{\n\t\tint v = e[i].v; cur[u] = i;\n\t\tif (dep[v] == dep[u] + 1 && e[i].w)\n\t\t{\n\t\t\tint tmp = Dfs(v, min(rest, e[i].w));\n\t\t\te[i].w -= tmp;\n\t\t\te[i ^ 1].w += tmp;\n\t\t\trest -= tmp;\n\t\t\tif (!rest) break;\n\t\t}\n\t}\n\treturn flow - rest;\n}\n\ninline int Dinic()\n{\n\tint ret = 0;\n\twhile (Bfs()) ret += Dfs(s, inf);\n\treturn ret;\n}\n\nint main()\n{\n\tread(n); read(m);\n\tfor (rei i = 1; i <= m; i++)\n\t{\n\t\tread(a[i].x1); read(a[i].y1); read(a[i].x2); read(a[i].y2); a[i].x2++; a[i].y2++;\n\t\tX[++lenx] = a[i].x1; Y[++leny] = a[i].y1; X[++lenx] = a[i].x2; Y[++leny] = a[i].y2;\n\t}\n\tX[++lenx] = Y[++leny] = n + 1;\n\tsort(X + 1, X + 1 + lenx); lenx = unique(X + 1, X + 1 + lenx) - X - 1; \n\tsort(Y + 1, Y + 1 + leny); leny = unique(Y + 1, Y + 1 + leny) - Y - 1;\n\tt = lenx + leny + 1; s = 0;\n\tfor (rei i = 1; i <= m; i++)\n\t{\n\t\ta[i].x1 = lower_bound(X + 1, X + 1 + lenx, a[i].x1) - X; \n\t\ta[i].y1 = lower_bound(Y + 1, Y + 1 + leny, a[i].y1) - Y;\n\t\ta[i].x2 = lower_bound(X + 1, X + 1 + lenx, a[i].x2) - X;\n\t\ta[i].y2 = lower_bound(Y + 1, Y + 1 + leny, a[i].y2) - Y; \n\t\tfor (rei x = a[i].x1; x < a[i].x2; x++)\n\t\t\tfor (rei y = a[i].y1; y < a[i].y2; y++)\n\t\t\t\tadd_edge(x, y + lenx, inf), add_edge(y + lenx, x, 0);\n\t}\n\tfor (rei i = 1; i < lenx; i++) add_edge(s, i, X[i + 1] - X[i]), add_edge(i, s, 0);\n\tfor (rei i = 1; i < leny; i++) add_edge(i + lenx, t, Y[i + 1] - Y[i]), add_edge(t, i + lenx, 0);\n\tprintf(\"%d\", Dinic());\n\treturn 0;\n}\n```\n",
        "postTime": 1643468270,
        "uid": 200930,
        "name": "\u30d9\u72d0\u4ed9\u59d0\u59d0\u3054",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF1198E \u3010Rectangle Painting 2\u3011"
    },
    {
        "content": "\u9996\u5148\u6709\u4e00\u4e2a\u663e\u7136\u7684\u4e8c\u5206\u56fe\u6700\u5c0f\u70b9\u8986\u76d6\u3002\n\n\u4f46\u662f\u8fd9\u6837\u70b9\u6570\u662f\u5173\u4e8e\u503c\u57df\u7684\uff0c\u8003\u8651\u4f18\u5316\u3002\n\n\u6211\u4eec\u6ce8\u610f\u5230\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u9ed1\u8272\u77e9\u5f62\uff0c\u8981\u4e48\u662f\u884c\u5168\u88ab\u9009\uff0c\u8981\u4e48\u662f\u5217\u5168\u88ab\u9009\uff08\u8981\u4e48\u662f both\uff09\uff0c\u5426\u5219\u5c31\u4e0d\u53ef\u80fd\u586b\u6ee1\u3002\u8fdb\u4e00\u6b65\u7684\uff0c\u6211\u4eec\u5c06\u6a2a\u7eb5\u5206\u522b\u79bb\u6563\u5316\uff0c\u90a3\u4e48\u6bcf\u4e00\u4e2a\u79bb\u6563\u5316\u540e\u7684\u6570\u6240\u4ee3\u8868\u7684\u533a\u95f4\u90fd\u8fde\u4e3a\u4e00\u4e2a\u6574\u4f53\uff0c\u8981\u4e48\u5168\u9009\uff0c\u8981\u4e48\u4e0d\u9009\u3002\n\n\u90a3\u4e48\u5c31\u663e\u7136\u6709\u4e00\u4e2a\u70b9\u6570 $m$ \u8fb9\u6570 $m^2$ \u7684\u4e8c\u5206\u56fe\u6700\u5c0f\u6743\u70b9\u8986\u76d6\u5566\u3002",
        "postTime": 1610625451,
        "uid": 138400,
        "name": "chenxia25",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1198E \u3010Rectangle Painting 2\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u662f\u6700\u5c0f\u8986\u76d6\u95ee\u9898  \n\u6839\u636e\u9898\u610f\uff0c\u5982\u679c\u6211\u5df2\u7ecf\u786e\u5b9a\u4e86\u5728$x$\u65b9\u5411\u4e0a\u9009\u62e9\u7684\u957f\u5ea6\uff0c\u90a3\u4e48\u5728$y$\u65b9\u5411\u4e0a\u80af\u5b9a\u662f\u9009\u6ee1  \n\u4e5f\u5c31\u662f\u6bcf\u6b21\u9009\u62e9\u90fd\u662f\u6a2a\u7740\u7a7f\u6216\u8005\u7eb5\u7740\u7a7f\u80af\u5b9a\u662f\u4e0d\u4f1a\u4f7f\u7b54\u6848\u53d8\u5dee  \n\u79bb\u6563\u5316\u540e\u5206\u522b\u8bb0\u5f55$x,y$\uff0c\u6bcf\u4e00\u4e2a\u65b9\u5757\u90fd\u8981\u81f3\u5c11\u4ece\u4e00\u4e2a\u65b9\u5411\u4e0a\u6d88\u706d\u6389\uff0c\u8fde\u8fb9\u4e4b\u540e\u8dd1\u6700\u5927\u6d41\uff08\u6700\u5927\u6d41=\u6700\u5c0f\u8986\u76d6\uff09\u5c31\u884c\u4e86\n\n```cpp\n#include <bits/stdc++.h>\n#define lowbit(x) (x & -x)\n#define jh(x, y) x ^= y ^= x ^= y\n#define loc(x, y) (x - 1) * m + y\n#define rg register\n#define inl inline\n#define PI 3.141592654\ntypedef long long ll;\nconst int N = 5e5 + 5, INF = 0x3f3f3f3f, mod = 998244353;\nusing namespace std;\nnamespace fast_IO {\n\tinl ll read() {\n\t\trg char c;\n\t\trg ll x = 0;\n\t\trg bool flag = false;\n\t\twhile ((c = getchar()) == ' ' || c == '\\n' || c == '\\r');\n\t\tif (c == EOF)return c; if (c == '-')flag = true; else x = c ^ 48;\n\t\twhile ((c = getchar()) != ' ' && c != '\\n' && c != '\\r' && ~c)\n\t\t\tx = (x << 1) + (x << 3) + (c ^ 48);\n\t\tif (flag)return -x; return x;\n\t}\n\tinl ll max(rg ll a, rg ll b) { if (a > b)return a; return b; }\n\tinl ll min(rg ll a, rg ll b) { if (a < b)return a; return b; }\n\tvoid write(rg ll x) { if (x < 0)putchar('-'), x = -x; if (x >= 10)write(x / 10); putchar(x % 10 ^ 48); }\n}\nint p[N], b[N], nt[N], num = 1, dist[N], w[N], st, ed, q[N], cur[N], sx[N], sy[N], ex[N], ey[N], tmpx[N], tmpy[N];\nbool flag[N];\ninl void add(rg int x, rg int y, rg int z) {\n\tb[++num] = y, w[num] = z;\n\tnt[num] = p[x]; p[x] = num;\n\tb[++num] = x, w[num] = 0;\n\tnt[num] = p[y]; p[y] = num;\n}\ninl bool bfs() {\n\tmemset(dist, -1, sizeof(dist));\n\tdist[st] = 0; q[0] = st;\n\trg int head = 1, tail = 0;\n\twhile (head != tail) {\n\t\trg int k = q[tail++]; if (tail == N)tail = 0;\n\t\tflag[k] = false;\n\t\tfor (rg int e = p[k]; e; e = nt[e]) {\n\t\t\trg int kk = b[e];\n\t\t\tif (dist[kk] < 0 && w[e] > 0) {\n\t\t\t\tdist[kk] = dist[k] + 1;\n\t\t\t\tif (!flag[kk]) {\n\t\t\t\t\tflag[kk] = true;\n\t\t\t\t\tq[head++] = kk;\n\t\t\t\t\tif (head == N)head = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn dist[ed] > 0;\n}\nint dfs(rg int x, rg int minv) {\n\tif (x == ed)return minv;\n\trg int ans = 0;\n\tfor (rg int e = cur[x], tmp; e && ans < minv; e = nt[e]) {\n\t\tcur[x] = e;\n\t\trg int k = b[e];\n\t\tif (dist[k] == dist[x] + 1 && w[e] > 0 && (tmp = dfs(k, fast_IO::min(minv - ans, w[e]))))\n\t\t\tw[e] -= tmp, w[e ^ 1] += tmp, ans += tmp;\n\t}\n\tif (ans < minv)dist[x] = -1;\n\treturn ans;\n}\n\nint main() {\n\trg int n = fast_IO::read(), m = fast_IO::read();\n\tfor (rg int i = 1; i <= m; ++i) {\n\t\tsx[i] = fast_IO::read(), sy[i] = fast_IO::read();\n\t\tex[i] = fast_IO::read() + 1, ey[i] = fast_IO::read() + 1;\n\t\ttmpx[++*tmpx] = sx[i], tmpx[++*tmpx] = ex[i];\n\t\ttmpy[++*tmpy] = sy[i], tmpy[++*tmpy] = ey[i];\n\t}\n\tsort(tmpx + 1, tmpx + *tmpx + 1); sort(tmpy + 1, tmpy + *tmpy + 1);\n\t*tmpx = unique(tmpx + 1, tmpx + *tmpx + 1) - tmpx - 1;\n\t*tmpy = unique(tmpy + 1, tmpy + *tmpy + 1) - tmpy - 1;\n\tst = *tmpx + *tmpy + 1; ed = st + 1;\n\tfor (rg int i = 0; i < *tmpx; ++i)add(st, i, tmpx[i + 1] - tmpx[i]);\n\tfor (rg int i = 0; i < *tmpy; ++i)add(i + *tmpx, ed, tmpy[i + 1] - tmpy[i]);\n\tfor (rg int i = 0; i < *tmpx; ++i)\n\t\tfor (rg int j = 0; j < *tmpy; ++j)\n\t\t\tfor (rg int k = 1; k <= m; ++k)\n\t\t\t\tif (sx[k] <= tmpx[i] && ex[k] >= tmpx[i + 1] && sy[k] <= tmpy[j] && ey[k] >= tmpy[j + 1]) {\n\t\t\t\t\tadd(i, j + *tmpx, INF); break;\n\t\t\t\t}\n\trg int ans = 0;\n\twhile (bfs()) {\n\t\tmemcpy(cur, p, sizeof(int) * (num + 1));\n\t\trg int tmp;\n\t\twhile (tmp = dfs(st, INF))ans += tmp;\n\t}\n\tfast_IO::write(ans);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1564846403,
        "uid": 87283,
        "name": "Zechariah",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1198E \u3010Rectangle Painting 2\u3011"
    }
]