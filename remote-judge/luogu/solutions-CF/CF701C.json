[
    {
        "content": "[\u539f\u9898\u7f51\u5740](https://vjudge.net/problem/427892/origin)\n\nCF\u5f52\u5728\u5c3a\u53d6\u6cd5\uff0cso\u6211\u9644\u4e0a\u4e00\u7bc7\u5c3a\u53d6\u6cd5\u7684\u4ee3\u7801\n\n```\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <set>\n#include <map>\nusing namespace std;\n\nconst int N = 1e5 + 100;\nchar arr[N];\nset<char> ss;\nmap<char,int> mm;\nint main()\n{\n        int n;\n        cin >> n;\n        for(int i=1;i<=n;i++)\n        {\n                cin >> arr[i];\n                ss.insert(arr[i]); //\u5e94\u7528set\u53bb\u91cd\u7684\u6027\u8d28\n        }\n        int size = ss.size(); //set\u7684\u957f\u5ea6\u4e3a\u5b57\u7b26\u4e32\u4e2d\u4e0d\u540c\u5b57\u7b26\u7684\u4e2a\u6570\n        int ans = n;\n        int l = 1,r = 0; \n        int cnt = 0;\n        while( l<=n && r<n )\n        {\n                r++;  \n                if(mm[arr[r]]==0) cnt++;  //\u79fb\u52a8\u5c3a\u5b50\u7684\u53f3\u7aef\u70b9\uff0c\u82e5\u4e3a\u65b0\u51fa\u73b0\u7684\u5b57\u7b26\uff0ccnt++\n                mm[arr[r]]++;  //\u66f4\u65b0map\n\n                while(cnt==size) //\u5f53\u5c3a\u5b50\u91cc\u9762\u521a\u597d\u6709\u6240\u6709\u7684\u5b57\u7b26\uff0c\u7f29\u5c0f\u5c3a\u5b50\u7684\u533a\u95f4\n                {\n                        ans = min(ans, r-l+1); //\u66f4\u65b0\u7b54\u6848\n                        mm[arr[l]]--;    //\u5220\u9664map\u91cc\u9762\u7684l\u7aef\u70b9\n                        if(mm[arr[l]]==0) cnt--; //\u5220\u9664\u5de6\u7aef\u70b9\u540e\uff0c\u82e5\u5c3a\u5b50\u5185\u6ca1\u6709\u8be5\u5b57\u7b26\uff0c\u5219cnt--\n                        l++; //\u628a\u5c3a\u5b50\u5de6\u7aef\u70b9\u53f3\u79fb\n                }\n                if( l>r ) break;\n        }\n        printf(\"%d\\n\",ans);\n        return 0;\n}\n```\n",
        "postTime": 1571316507,
        "uid": 148359,
        "name": "MIN__2500",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 CF701C \u3010They Are Everywhere\u3011"
    },
    {
        "content": "# CF701C\n\n\u8fd9\u9053\u9898\u662f\u4e00\u9053\u6bd4\u8f83\u5178\u578b\u7684\u53cc\u6307\u9488\u3002\n\nl\u3001r\u5206\u522b\u8868\u793a\u533a\u95f4\u7684\u5de6\u53f3\u7aef\u70b9\uff0ctype\u8868\u793a\u533a\u95f4\u4e2d\u7684\u79cd\u7c7b\u7684\u6570\u91cf\u3002\u7528\u4e00\u4e2amap\u6765\u7ef4\u62a4\u533a\u95f4\u5185\u4e0d\u540c\u7684\u5b57\u7b26\u7684\u6570\u91cf\u3002\n\n```c++\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int maxn = 100005;\n\nmap<char, int> mp;\n\nint main() {\n  int n, type = 0, ans;\n  string s;\n  cin >> n >> s;\n  ans = n;\n  int l = 0, r = 0;\n  for (r = 0; r < n; r++) {\n    mp[s[r]]++;\n    while(mp[s[l]] > 1 && l < r) {\n      mp[s[l]]--, l++;\n    }\n    if (mp.size() > type) type++, ans = r - l + 1;\n    ans = min(ans, r - l + 1);\n  }\n  cout << ans;\n  return 0;\n}\n\n```\n\n",
        "postTime": 1531548516,
        "uid": 53067,
        "name": "YuntianZhao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF701C \u3010They Are Everywhere\u3011"
    },
    {
        "content": "\u5206\u4eab\u4e24\u79cd\u65b9\u6cd5\uff0c\u4e00\u4e2a\u5c3a\u53d6\u6cd5\uff0c\u4e00\u4e2a\u4e8c\u5206\u7b54\u6848\u3002\n\n### \u5c3a\u53d6\u6cd5\n\n\u7b80\u5355\u7c97\u66b4\uff0c\u53cc\u6307\u9488 $lt$ \u548c $rt$\uff0c\u5206\u522b\u8868\u793a\u76ee\u524d\u6240\u5728\u533a\u95f4\u7684\u5de6\u8fb9\u754c\u548c\u53f3\u8fb9\u754c\u3002\u800c\u6211\u4eec\u5199\u4e00\u4e2a $while$ \u5faa\u73af\uff0c\u6761\u4ef6\u662f\u53f3\u6307\u9488\u6ca1\u6709\u5230 $n$\uff0c\u91cc\u9762\u5957\u4e24\u4e2a\u5c0f\u5faa\u73af\uff0c\u5206\u5f00\u89e3\u91ca\u3002\n\n\u00b7\u524d\u4e00\u4e2a\u5faa\u73af\u4e3a\u53f3\u6307\u9488\u53f3\u79fb\u76f4\u5230\u76ee\u524d\u533a\u95f4\u5305\u542b\u6240\u6709\u5b57\u7b26\uff0c\u8df3\u51fa\u5faa\u73af\uff0c\u7ef4\u62a4\u7b54\u6848 $ans$\u3002\n\n\u00b7\u540e\u4e00\u4e2a\u5faa\u73af\u4e3a\u5de6\u6307\u9488\u5de6\u79fb\u76f4\u5230\u76ee\u524d\u7684\u533a\u95f4\u5df2\u7ecf\u4e0d\u5305\u542b\u6240\u6709\u5b57\u7b26\uff0c\u5faa\u73af\u671f\u95f4\u4e00\u76f4\u7ef4\u62a4 $ans$\u3002\n\n\u4e00\u4e9b\u7ec6\u8282\u770b\u4ee3\u7801\uff1a\n\n```cpp\nint lt=1,rt=0,cnt=0;//\u5de6\u6307\u9488\uff0c\u53f3\u6307\u9488\uff0ccnt\u662f\u76ee\u524d\u533a\u95f4\u5185\u5305\u542b\u7684\u5b57\u7b26\u79cd\u7c7b\u6570\u3002\nwhile(rt<n){//\u53f3\u6307\u9488\u6ca1\u6709\u8d85\u51fa\u8303\u56f4\u3002\n\twhile(cnt<tot&&rt<n){//tot\u662f\u6574\u4e2a\u5e8f\u5217\u91cc\u9762\u5305\u542b\u7684\u5b57\u7b26\u79cd\u7c7b\u6570\u3002\n\t\trt++;//\u53f3\u6307\u9488\u53f3\u79fb\u3002\n\t\tif(vis[ch[rt]]==0)cnt++;//\u5982\u679c\u6b64\u5b57\u7b26\u6ca1\u6709\u51fa\u73b0\u8fc7\uff0c\u76ee\u524d\u7684\u5b57\u7b26\u79cd\u7c7b\u6570+1\u3002\n\t\tvis[ch[rt]]++;//\u6b64\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570+1\u3002\n\t\t}\n\twhile(cnt==tot){//\u76ee\u524d\u5305\u542b\u6240\u6709\u79cd\u7c7b\u5b57\u7b26\u3002\n\t\tans=min(ans,rt-lt+1);//\u7ef4\u62a4ans\u3002\t\n\t\tvis[ch[lt]]--;//\u88ab\u5220\u9664\u7684\u5b57\u7b26\u51fa\u73b0\u6b21\u6570-1\u3002\n\t\tif(vis[ch[lt]]==0)cnt--;\n\t\tlt++;\t\n\t}\n}\n```\n\n### \u4e8c\u5206\u6cd5\n\n\u6240\u6709\u6ee1\u8db3\u6761\u4ef6\u7684 $ans$ \u5177\u6709\u5355\u8c03\u6027\uff0c\u4e8e\u662f\u53ef\u4ee5\u4e8c\u5206\u7b54\u6848\uff0c\u53ea\u9700\u8981\u5728\u5199 $check$ \u51fd\u6570\u7684\u65f6\u5019\u91c7\u7528\u4e00\u4e0b\u6ed1\u52a8\u7a97\u53e3\u7684\u601d\u60f3\u3002\n\n\u4e8c\u5206\u6bd4\u8f83\u6b7b\u677f\uff0c\u7ec6\u8282\u5c11\uff0c\u8fd9\u91cc\u4e0d\u505a\u8be6\u89e3\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int MAXN=1e5+10;\nint n,ans,vis[150],tot;\nchar ch[MAXN];\n\nbool check(int len){\n\tmemset(vis,0,sizeof(vis));\n\tint l=1,r=len,cnt=0;\n\tfor(int i=l;i<=r;i++){\n\t\tif(vis[ch[i]]==0)cnt++;\n\t\tvis[ch[i]]++;\n\t}\n\tif(cnt==tot)return 1;\n\twhile(r<n){\n\t\tr++;\n\t\tif(vis[ch[r]]==0)cnt++;\n\t\tvis[ch[r]]++;\n\t\tvis[ch[l]]--;\n\t\tif(vis[ch[l]]==0)cnt--;\n\t\tl++;\n\t\tif(cnt==tot)return 1;\n\t}\t\n\treturn 0;\n}\n\nint main() {\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>ch[i];\n\t\tif(vis[ch[i]]==0)tot++;\n\t\tvis[ch[i]]++;\n\t}\n\tmemset(vis,0,sizeof(vis));\n\tint lt=0,rt=n+1;\n\twhile(lt+1<rt){\n\t\tint mid=(lt+rt)>>1;\n\t\tif(check(mid))rt=mid;\n\t\telse lt=mid;\n\t}\n\tprintf(\"%d\",rt);\n\treturn 0;\n} \n```",
        "postTime": 1659600396,
        "uid": 483928,
        "name": "Ziqqurat",
        "ccfLevel": 5,
        "title": "CF701C \u9898\u89e3"
    },
    {
        "content": "\u611f\u89c9\u8fd9\u9053\u9898\u7c7b\u4f3c\u4e8e[CF660C](https://www.luogu.org/problem/CF660C)\n\n\u4ed6\u4eec\u7684\u7b54\u6848\u90fd\u6709**\u5355\u8c03\u6027**,\u6240\u4ee5\u90fd\u53ef\u4ee5\u7528\u4e8c\u5206\u6765\u5b9e\u73b0\n\n\u6211\u4eec\u76f4\u63a5\u4e8c\u5206\u7b54\u6848,\u53ef\u4ee5 $O(n*m)$ \u5224\u65ad\uff0c\u663e\u7136\u662f\u4e0d\u884c\u7684\n\n$m$ \u662f\u5b57\u7b26\u4e32\u91cc\u9762**\u4e0d\u540c**\u7684\u5b57\u7b26(\u533a\u5206\u5927\u5c0f\u5199)\u4e2a\u6570\n\n\u81f3\u4e8e\u4e0d\u540c\u7684\u5b57\u7b26,\u6211\u4eec\u53ef\u4ee5\u5f00\u4e00\u4e2a$bool$\u6570\u7ec4\u8bb0\u5f55,\u8fd9\u6837\u53ef\u4ee5\u7edf\u8ba1\u603b\u6570\n\n\u6211\u4eec\u8003\u8651\u5982\u4f55\u4f18\u5316check()\u51fd\u6570:\n\n\u8fd9\u5c31\u8981\u7528\u5230\u6ed1\u52a8\u7a97\u53e3\u7684\u601d\u60f3:\n\n\u5728\u957f\u5ea6$n$\u4e2d\u9760\u6ed1\u52a8\u6765\u679a\u4e3e\u6bcf\u4e00\u4e2a\u957f\u5ea6$mid$\n\n\u7ec6\u8282\u5982\u4e0b:\n\n1. \u8bb0\u5f55$li$~$ri$\u4e2d\u4e0d\u540c\u5b57\u6bcd\u7684\u4e2a\u6570,\u5982\u679c\u7b49\u4e8e\u603b\u6570\u76f4\u63a5\u8fd4\u56de$true$\n\n2. \u6ed1\u52a8\u7a97\u53e3\u65f6,\u8bb0\u5f55\u6bcf\u4e2a\u5b57\u6bcd\u7684\u4e2a\u6570,\u90a3\u4e48\u7b2c$li-1$\u4f4d\u7684\u5b57\u6bcd\u4e2a\u6570$-1$,\n$ri$\u4f4d\u7684\u5b57\u6bcd\u4e2a\u6570$+1$\n\n\t\u5982\u679c\u7b2c$li-1$\u4f4d\u7684\u5b57\u6bcd\u4e2a\u6570\u51cf\u4e3a$0$,\u90a3\u4e48\u4ece\u4e0a\u4e00\u4e2a\u7a97\u53e3\u7ee7\u627f\u8fc7\u6765\u7684$num$\u8981$-1$\n    \n3. \u4e0d\u8981\u5fd8\u8bb0**\u6e05\u7a7a**\u6570\u7ec4~~\u672c\u849f\u84bb\u5c31\u5403\u8fc7\u4e8f~~\n\n$check()$\u6570\u7ec4\u5982\u4e0b:\n\n\u7531\u4e8e\u672c\u849f\u84bb\u592a\u61d2,\u6ca1\u6709\u628a\u5b57\u7b26\u8f6c\u6362\u6210\u6570\u5b57,\u5404\u4f4ddalao\u52ff\u55b7\n\n```cpp\n\nbool check(int len)\n{\n\tmemset(vis,0,sizeof(vis));//\u6e05\u7a7a\n\tint num=0;//\u8bb0\u5f55\u4e2a\u6570\n\tfor(int i=1;i<=len;i++)//\u7b2c\u4e00\u4e2a\u7a97\u53e3\n        //\u56e0\u4e3a\u4e0d\u7528\u51cf\u53bbli-1\u7684\u5b57\u7b26,\u6240\u4ee5\u5355\u72ec\u5199\n\t{\n\t\tif(!vis[(int)ch[i]])\n\t\t{\n\t\t\tnum++;\n\t\t\tvis[(int)ch[i]]++;\n\t\t}\n\t\telse vis[(int)ch[i]]++;\n\t}\n\tif(num==cnt)return 1;\n\tfor(int i=2;i<=n-len+1;i++)//\u5269\u4e0b\u7684\u7a97\u53e3\n\t{\n\t\tint r=i+len-1;\n\t\tif(!vis[(int)ch[r]])\n\t\t{\n\t\t\tnum++;\n\t\t\tvis[(int)ch[r]]++;\n\t\t}\n\t\telse vis[(int)ch[r]]++;\n\t\tvis[(int)ch[i-1]]--;//\u51cf\u53bbli-1\u7684\u5b57\u7b26\u4e2a\u6570\n\t\tif(!vis[(int)ch[i-1]])num--;//\u5982\u679c\u51cf\u6ca1\u4e86,num\u4e5f\u8981\u51cf1\n\t\tif(num==cnt)return 1;\n\t}\n\treturn 0;\n}\n\n```\n\n\u4e8c\u5206\u8fc7\u7a0b\u5c31\u4e0d\u89e3\u91ca\u4e86\n\n\u4ee3\u7801\u5982\u4e0b:\n\n```cpp\n\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=100005;\nchar ch[maxn],s[maxn];\nint vis[maxn];\nint n,cnt,ans;\nbool check(int len)\n{\n\tmemset(vis,0,sizeof(vis));\n\tint num=0;\n\tfor(int i=1;i<=len;i++)\n\t{\n\t\tif(!vis[(int)ch[i]])\n\t\t{\n\t\t\tnum++;\n\t\t\tvis[(int)ch[i]]=1;\n\t\t}\n\t\telse vis[(int)ch[i]]++;\n\t}\n\tif(num==cnt)return 1;\n\tfor(int i=2;i<=n-len+1;i++)\n\t{\n\t\tint r=i+len-1;\n\t\tif(!vis[(int)ch[r]])\n\t\t{\n\t\t\tnum++;\n\t\t\tvis[(int)ch[r]]++;\n\t\t}\n\t\telse vis[(int)ch[r]]++;\n\t\tvis[(int)ch[i-1]]--;\n\t\tif(!vis[(int)ch[i-1]])num--;\n\t\tif(num==cnt)return 1;\n\t}\n\treturn 0;\n}\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>ch[i];\n\t\tif(!vis[(int)ch[i]])\n\t\t{\n\t\t\tcnt++;\n\t\t\tvis[(int)ch[i]]=1;\n\t\t}\n\t}\n\tmemset(vis,0,sizeof(vis));\n\tint l=1,r=n,mid;\n\twhile(l<=r)\n\t{\n\t\tmid=(l+r)>>1;\n\t\tif(check(mid))\n\t\t{\n\t\t\tans=mid;\n\t\t\tr=mid-1;\n\t\t}\n\t\telse l=mid+1;\n\t}\n\tcout<<ans<<'\\n';\n\treturn 0;\n}\n\n```\n\n\u795d\u5927\u5bb6$CSP$\u8003\u51fa\u597d\u6210\u7ee9\n\n\n\n\n\n\n\n",
        "postTime": 1572701317,
        "uid": 168324,
        "name": "\u8001\u5f69\u7b14",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF701C \u3010They Are Everywhere\u3011"
    },
    {
        "content": "[\u6bcf\u9898\u5fc5\u6709\u7684\u9898\u76ee\u4f20\u9001\u95e8\u3002](https://www.luogu.com.cn/problem/CF701C)\n\n## \u9898\u76ee\u63cf\u8ff0\uff1a\n\u7ed9\u51fa\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217\uff0c\u6c42\u51fa\u957f\u5ea6\u6700\u5c0f\u7684\u5e8f\u5217 that \u5305\u542b\u5e8f\u5217\u4e2d\u6240\u6709\u7684\u5b57\u6bcd\uff08\u533a\u522b\u5927\u5c0f\u5199\uff09\u3002\n\n\u5f88\u660e\u663e\uff0c\u53ef\u4ee5\u4f7f\u7528\u53cc\u6307\u9488\uff0c\u56e0\u4e3a\u662f\u6c42\u6700\u77ed\u7684\u5305\u542b\u6240\u6709\u5b57\u6bcd\u7684\u5b50\u4e32\u3002\u90a3\u4e48\u8981\u600e\u4e48\u5c3a\u53d6\u5462\uff1f\u901a\u8fc7\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u884d\u751f\u51fa\u4e24\u79cd\u505a\u6cd5\uff0c\u6211\u4f1a\u5c3d\u91cf\u4ed4\u7ec6\u8bb2\u89e3\u3002\n\n## \u7b2c\u4e00\u79cd\u65b9\u6cd5\uff1a\u53cc\u6307\u9488\u3002\n\u8fd9\u4e00\u79cd\u505a\u6cd5\u5462\uff0c\u6211\u662f\u4e00\u5f00\u59cb\u60f3\u51fa\u6765\u65b9\u6cd5\uff0c\u4f46\u662f\u9519\u4e86\uff0c\u6211\u5c31\u53bb\u770b\u9898\u89e3\uff0c\u53d1\u73b0\u6211\u5c31\u9519\u4e86\u51e0\u4e2a\u7a7a\u3002\n\n\u5bf9\u4e8e\u8fd9\u4e00\u9898\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u53cc\u6307\u9488\u5176\u5b9e\u4e5f\u5c31\u662f\u679a\u4e3e\u7b97\u6cd5\uff0c\u4f46\u662f\u4f18\u5316\u8fc7\u7684\u3002\u4f46\u662f\u867d\u7136\u662f\u679a\u4e3e\uff0c\u4e5f\u8981\u6709\u679a\u4e3e\u7684\u65b9\u6cd5\uff0c\u4e5f\u6709\u5206\u9ad8\u4f4e\u7ea7\u7684\u679a\u4e3e\u3002\u6211\u4eec\u5c31\u8bb2\u4e00\u4e0b\u9ad8\u7ea7\u7684\u679a\u4e3e\u3002\u7531\u4e8e\u524d\u9762\u8bf4\u8fc7\u662f\u53cc\u6307\u9488\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u53f3\u533a\u95f4\uff0c\u7136\u540e\u518d\u627e\u5230\u5de6\u533a\u95f4\u3002\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u53f3\u533a\u95f4\u7684\u6700\u4f18\u533a\u95f4\u7684\u90e8\u5206\u90fd\u53ef\u4ee5\u662f\u4e0b\u4e00\u4e2a\u6700\u4f18\u533a\u95f4\u7684\u90e8\u5206\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u5fc5\u5c06\u5de6\u533a\u95f4\u6e05\u7a7a\u3002\u6bd4\u8f83\u96be\u7406\u89e3\uff0c\u5bf9\u5427\u3002\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nmap<char,long long>M;\nlong long n,x,y,ans,t;\nchar a[100005];\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++) cin>>a[i];\n\tx=1,y=1;\n\tfor(y=1;y<=n;y++)\n\t{\n\t\tM[a[y]]++;\n\t\twhile(M[a[x]]>1 && x<y) M[a[x]]--,x++; //\u627e\u5230\u6700\u4f18\u7684\u5de6\u533a\u95f4\u3002\n\t\tif(M.size()>t) ans=y-x+1,t++; //\u5982\u679c\u662f\u76ee\u524d\u6240\u6709\u533a\u95f4\u4e2d\u6700\u4f18\u7684\uff0c\u90a3\u4e48\u76f4\u63a5\u7b49\u4e8e\u3002\t\t\n        \tans=min(ans,y-x+1);//\u5982\u679c\u4e0d\u662f\uff0c\u90a3\u4e48\u6bd4\u8f83\u6700\u5c0f\u503c\u3002\n\t}\n\tcout<<ans;//\u8f93\u51fa\u3002\n\treturn 0;\n} \n```\n\u6bd4\u8f83\u96be\u7406\u89e3\uff1f\u53ef\u4ee5\u770b\u770b\u7b2c\u4e8c\u4e2a\u7b97\u6cd5\u3002\n## \u7b2c\u4e8c\u4e2a\u7b97\u6cd5\uff1a\u4e8c\u5206+\u5c3a\u53d6\u6cd5\u3002\n\u4e8c\u5206\u5e94\u8be5\u4e0d\u7528\u5177\u4f53\u8bb2\u5427\uff1f\u5982\u679c\u4e0d\u61c2\uff0c\u53ef\u4ee5\u53bb\u641c\u7d22\u4e8c\u5206\u7684\u7b97\u6cd5\u3002\u6211\u4eec\u5c31\u4e3b\u8981\u8bb2\u600e\u4e48\u5c3a\u53d6\u3002\n\n\u4e0d\u8fc7\u5728\u8fd9\u4e4b\u524d\uff0c\u5148\u77e5\u9053\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u4e8c\u5206\uff1f\u56e0\u4e3a\u6ee1\u8db3\u5355\u8c03\u6027\u3002\u4f60\u60f3\u4e00\u4e0b\uff0c\u4e00\u4e2a\u5e8f\u5217\uff0c\u6bd4\u5982\uff1aabba\uff0c\u5982\u679c\u5e8f\u5217\u957f\u5ea6\u4e3a $2$ \u7684\u53ef\u4ee5\u6ee1\u8db3\u9700\u6c42\uff0c\u90a3\u4e48 $3$\uff0c$4$ \u4e5f\u4e00\u5b9a\u53ef\u4ee5\u3002\u8fd9\u5c31\u662f\u6ee1\u8db3\u5355\u8c03\u6027\u3002\n\n\u8fd4\u56de\u5c3a\u53d6\u6cd5\uff0c\u6211\u4eec\u7684\u8001\u5e08\u8bb2\u8fc7\uff0c\u5c3a\u53d6\u6cd5\u4e3a\u4ec0\u4e48\u53eb\u5c3a\u53d6\u6cd5\uff0c\u662f\u56e0\u4e3a\u8fd9\u4e2a\u533a\u95f4\u5c31\u50cf\u4e00\u628a\u5c3a\u5b50\uff0c\u4f4d\u7f6e\u53ef\u4ee5\u53d8\uff0c\u4f46\u957f\u5ea6\u4e0d\u53d8\u3002\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u5c3a\u5b50\u7684\u957f\u5ea6\uff0c\u7136\u540e\u5728\u80fd\u5bb9\u4e0b\u5c3a\u5b50\u7684\u6240\u6709\u7a7a\u4f4d\u5224\u65ad\u80fd\u5426\u6ee1\u8db3\u9700\u6c42\u3002\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nlong long n,x,y,ans,t;\nchar a[100005];\nmap<char,int>b;\nbool pd(long long x)//\u5224\u65ad\u51fd\u6570\u3002\n{\n\tmap<char,int>B;\n\tfor(int i=1;i<=x;i++) B[a[i]]++;//\u5c3a\u53d6\u6cd5\u57fa\u672c\u64cd\u4f5c\u3002\n\tif(B.size()==b.size()) return 1;//\u5982\u679c\u7b26\u5408\u90a3\u4e48\u5c31\u8fd4\u56de\u6b63\u786e\u3002\n\tfor(int i=2,j=x+1;j<=n;i++,j++)//\u5c3a\u53d6\u6cd5\u3002\n\t{\n\t\tB[a[i-1]]--,B[a[j]]++;//\u5c3a\u53d6\u6cd5\u57fa\u672c\u64cd\u4f5c\u3002\n\t\tif(B.size()==b.size()) return 1;//\u540c\u4e0a\u3002\n\t} \n\treturn 0;//\u5982\u679c\u90fd\u4e0d\u53ef\u4ee5\uff0c\u90a3\u4e48\u5c31\u8fd4\u56de\u9519\u8bef\u3002\n}\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++) cin>>a[i],b[a[i]]++;\n\tlong long start=0,finish=n+1,mid;\n\twhile(start+1<finish)//\u4e8c\u5206\u3002\n\t{\n\t\tmid=(start+finish)/2;\n\t\tif(pd(mid)) finish=mid;\n\t\telse start=mid;\n\t}\n\tcout<<finish;\n\treturn 0;\n} \n```",
        "postTime": 1684766404,
        "uid": 708963,
        "name": "StarlitSky",
        "ccfLevel": 0,
        "title": "CF701C"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 $s$ \uff08\u53ea\u5305\u542b\u5b57\u6bcd\u7684\u5927\u5c0f\u5199\uff09\uff0c\u8bf7\u4f60\u6c42\u51fa\u4e00\u6bb5\u5305\u542b\u5e8f\u5217\u91cc\u6240\u6709\u5b57\u7b26\u7684\u5b50\u4e32\u7684\u6700\u5c0f\u957f\u5ea6\u3002\n\n## \u601d\u8def\n\n\u4f7f\u7528\u53cc\u6307\u9488\u7684\u601d\u8def\uff0c\u76f4\u63a5\u6a21\u62df\u4e24\u4e2a\u53cc\u6307\u9488\uff1b\n\n* \u5de6\u53f3\u6307\u9488\u9ed8\u8ba4\u4e3a\u521d\u59cb\u503c\uff0c\u7136\u540e\u79fb\u52a8\u53f3\u6307\u9488\uff0c\u76f4\u5230\u5de6\u53f3\u6307\u9488\u5305\u56f4\u7684\u5b50\u4e32\u5305\u542b\u5b57\u7b26\u4e32\u91cc\u7684\u6240\u6709\u5b57\u7b26\uff0c\u7136\u540e\u4e0e\u6700\u5c0f\u503c\u6bd4\u8f83\uff0c\u518d\u79fb\u52a8\u5de6\u6307\u9488\uff0c\u53f3\u6307\u9488\u4ee5\u6b64\u7c7b\u63a8 $\\dots$ \uff1b\n\n\u56e0\u4e3a\u4e24\u4e2a\u6307\u9488\u662f\u5355\u8c03\u4e0d\u51cf\u7684\uff0c\u6240\u4ee5\u6bcf\u4e2a\u4e0b\u6807\u6700\u591a\u88ab\u904d\u5386\u4e24\u6b21\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n)$\uff1b\n\n\uff08\u6709\u53ef\u80fd\u6bd4\u8f83\u62bd\u8c61\uff0c\u6240\u4ee5\u62ff\u4ee3\u7801\u6f14\u793a\u3002\uff09\n\n## Code\n\n```cpp\n\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nint n, num, sum, mini = INT_MAX; \nbool v[135];\nstring s;\n\nmap <char, int> cnt;\n\nint main(){\n    cin >> n >> s;\n    for(int i = 0; i < s.size(); i++){\n        if(!v[s[i] - 'A']){ // \u5982\u679c\u662f\u4e00\u4e2a\u65b0\u5b57\u7b26\n            num++; \n\t\t}\n\t\tv[s[i] - 'A'] = 1; // \u6807\u8bb0 \n    }\n    for(int i = 0, j = i; i < n; i++){ \n        for(; j < n && sum < num; j++){ // \u79fb\u52a8\u53f3\u6307\u9488\uff0c\u6ee1\u8db3\u6761\u4ef6\u5c31\u76f4\u63a5\u9000\u51fa\n            if(!cnt[s[j]]){ // \u51fa\u73b0\u4e86\u65b0\u7684\u5b57\u7b26\n                sum++;\n\t\t\t}\n            cnt[s[j]]++;\n        }\n        if(sum == num && (j - i) < mini){ // \u6ee1\u8db3\u6761\u4ef6\n            mini = (j - i);\n            l = i;\n            r = j - 1;\n        }\n        cnt[s[i]]--; // \u79fb\u52a8\u5de6\u6307\u9488\n        if(!cnt[s[i]]){\n            sum--;\n\t\t}\n    }\n    cout << mini;\n    return 0;\n}\n\n\n```",
        "postTime": 1665983320,
        "uid": 415961,
        "name": "Luo_gu_ykc",
        "ccfLevel": 5,
        "title": "CF701C \u9898\u89e3"
    },
    {
        "content": "### \u9898\u610f\u7b80\u8ff0\n\n\u7ed9\u51fa\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217\uff0c\u6c42\u51fa\u957f\u5ea6\u6700\u5c0f\u7684\u5e8f\u5217 $that$ \u5305\u542b\u5e8f\u5217\u4e2d\u6240\u6709\u7684\u5b57\u6bcd\uff08\u533a\u522b\u5927\u5c0f\u5199\uff09.\n\n### \u6837\u4f8b\u5206\u6790\n\n```\ninput:\n7\nbcAAcbc\n\noutput:\n3\n```\n\u4ee5\u6837\u4f8b#2\u4e3a\u4f8b\uff0c\u8be5\u5e8f\u5217\u4e2d \u5171\u6709 ```b```\u3001```c```\u3001```A``` \u4e09\u79cd\u5b57\u6bcd.\n\n\u5f88\u663e\u7136\uff0c\u5b50\u5e8f\u5217 ```bcA``` \u662f\u6700\u77ed\u7684\u5b50\u5e8f\u5217\uff0c\u6545\u8f93\u51fa\u5176\u957f\u5ea6.\n\n### \u5c3a\u53d6\u6cd5\n\n\u8003\u8651\u5206\u522b\u8bb0\u5f55\u5de6\u7aef\u70b9 $l$ \u4e0e\u53f3\u7aef\u70b9 $r$ \u4ee5\u7ef4\u62a4\u5b50\u5e8f\u5217\uff0c\u82e5\u5f53\u524d\u5b50\u5e8f\u5217\u4e0d\u6ee1\u8db3\u9898\u610f\uff0c\u5219\u5c06 $r$ \u53f3\u79fb\uff0c\u76f4\u81f3\u5b50\u5e8f\u5217\u4e2d\u6bcf\u4e2a\u5b57\u6bcd\u5747\u88ab\u5305\u542b. \u540c\u65f6\uff0c\u82e5\u5e8f\u5217\u4e2d\u5904\u4e8e $l$ \u5904\u7684\u5b57\u6bcd\u5728\u5e8f\u5217\u4e2d\u518d\u6b21\u51fa\u73b0\uff0c\u5219\u4e5f\u5c06 $l$ \u53f3\u79fb\u52a8\uff0c\u4f7f\u5f53\u524d\u7ef4\u62a4\u7684\u5b50\u5e8f\u5217\u6700\u77ed\uff0c\u5373\u4f7f\u5f97\u5b50\u5e8f\u5217\u4e2d\u91cd\u590d\u7684\u5b57\u6bcd\u5c3d\u53ef\u80fd\u5c0f.\n\n### \u5b9e\u73b0\u6b65\u9aa4\n\n\u9996\u5148\uff0c\u6570\u636e\u4e2d\u5df2\u7ed9\u51fa\u5e8f\u5217\u957f\u5ea6\u4e0e\u5e8f\u5217\uff0c\u800c\u65e0\u4e0d\u540c\u5b57\u6bcd\u7684\u4e2a\u6570\uff0c\u6240\u4ee5\u5e94\u5148\u5c06\u540e\u8005\u8fdb\u884c\u7edf\u8ba1. \n\n```cpp\n    if(r[a[i]]==0)\n        m++;\n    r[a[i]]++;\n```\n\n\u8fd9\u91cc\u7684 $r$ \u8bb0\u5f55 $a_i$ \u51fa\u73b0\u7684\u6b21\u6570\uff0c$m$ \u8bb0\u5f55\u5b57\u6bcd\u79cd\u7c7b\u603b\u6570.\n\n\u63a5\u4e0b\u6765\u5b9e\u73b0\u5c3a\u53d6\u6cd5\u7684\u8fc7\u7a0b.\u5e76\u4e14\u5728\u6ee1\u8db3\u9898\u610f\u65f6\u7edf\u8ba1\u7b54\u6848 $(r-l+1)_{min}$. \u6b64\u5904\u7528 $Count$ \u8bb0\u5f55\u5f53\u524d\u5b50\u5e8f\u5217\u4e2d\u5305\u542b\u7684\u5b57\u6bcd\u79cd\u7c7b\u4e2a\u6570.\n\n```cpp\n    while(l<=r&&r<=n)\n    {\n        if(s[a[r]]==0)\n            Count++;\n        s[a[r]]++;\n        while(1)\n        {\n            if(s[a[l]]>=2)\n                s[a[l]]--,l++;\n            else\n                break;\n        }\n        if(Count==m&&Min>r-l+1)\n            Min=r-l+1;\n        r++;\n    }\n```\n\n\u4ee5\u4e0b\u662f\u5168\u90e8\u4ee3\u7801.\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=1e6;\nint n,m,L,R;\nchar a[maxn];\nmap<char,int>s;\nmap<char,int>r;\nint Count;\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>a[i];\n        if(r[a[i]]==0)\n            m++;\n        r[a[i]]++;\n    }\n    int l=1,r=1,Min=n;\n    while(l<=r&&r<=n)\n    {\n        if(s[a[r]]==0)\n            Count++;\n        s[a[r]]++;\n        while(1)\n        {\n            if(s[a[l]]>=2)\n                s[a[l]]--,l++;\n            else\n                break;\n        }\n        if(Count==m&&Min>r-l+1)\n        {\n            Min=r-l+1;\n            L=l,R=r;\n        }\n        r++;\n    }\n    if(L!=0)\n        cout<<Min<<endl;\n    else\n        cout<<n<<endl;\n    return 0;\n}\n```",
        "postTime": 1660755765,
        "uid": 270854,
        "name": "\u4e8c\u53c9\u82f9\u679c\u6811",
        "ccfLevel": 5,
        "title": "CF701C They Are Everywhere"
    },
    {
        "content": "**\u53cc\u6307\u9488\u6cd5**\n\n\u4e3a\u4e86\u6c42\u5f97\u4e00\u4e2a\u533a\u95f4\u7684\u957f\u5ea6, \u9700\u8981\u77e5\u9053\u8fd9\u4e2a\u533a\u95f4\u7684\u5de6\u53f3\u4e24\u4e2a\u7aef\u70b9. \u7531\u4e8e\u8fd9\u4e2a\u533a\u95f4\u4e2d\u51fa\u73b0\u7684\u5b57\u6bcd\u662f\u6240\u6709\u79cd\u7c7b\u7684\u5b57\u6bcd\u5404\u81ea\u51fa\u73b0\u81f3\u5c11\u4e00\u6b21, \u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u53cc\u6307\u9488\u6cd5\u7ef4\u62a4\u7b26\u5408\u8981\u6c42\u7684\u533a\u95f4\n\n\u6211\u4eec\u8bbe\u5de6\u6307\u9488\u4e3a`idx1`, \u53f3\u6307\u9488\u4e3a`idx2`. \u6b64\u5904\u4f7f\u7528\u5de6\u95ed\u53f3\u5f00\u89c4\u5219, \u533a\u95f4`[idx1,idx2)`\u5373\u4e3a\u9898\u76ee\u4e2d\u6240\u6c42\u7684 *that* \u5e8f\u5217\n\n\u8003\u8651**\u8d2a\u5fc3**\u7b56\u7565: \u5f53\u5de6\u6307\u9488\u56fa\u5b9a\u65f6, \u5c06\u53f3\u6307\u9488\u4e0d\u65ad\u5411\u53f3\u79fb\u52a8, \u76f4\u5230\u533a\u95f4\u4e2d\u5305\u542b\u6240\u6709\u79cd\u7c7b\u7684\u5b57\u6bcd\u4e3a\u6b62. \u6b64\u5904\u4f7f\u7528 `char_cnt[]` \u6570\u7ec4\u8bb0\u5f55\u533a\u95f4\u5185\u5404\u79cd\u5b57\u6bcd\u7684\u6570\u91cf, \u4f7f\u7528\u53d8\u91cf `total_char` \u8bb0\u5f55\u533a\u95f4\u5185\u5b57\u6bcd\u7684\u79cd\u7c7b\u6570\n\n\u5982\u679c\u533a\u95f4\u4e2d\u6ca1\u6709\u5305\u542b\u5168\u90e8\u7684\u5b57\u6bcd, \u5219\u5c06\u53f3\u6307\u9488\u5411\u53f3\u79fb\u52a8, \u628a\u4e0b\u4e00\u4e2a\u5b57\u6bcd\u7eb3\u5165\u533a\u95f4\u4e2d, \u5982\u679c\u4e0b\u4e00\u4e2a\u5b57\u6bcd\u662f\u7b2c\u4e00\u6b21\u88ab\u7eb3\u5165\u533a\u95f4\u4e2d, \u5219 `total_char++`\n\n\u5982\u679c\u533a\u95f4\u4e2d\u5305\u542b\u4e86\u5168\u90e8\u7684\u5b57\u6bcd, \u5219\u8bb0\u5f55\u6b64\u65f6\u7684\u533a\u95f4\u957f\u5ea6. \u5982\u679c\u6b64\u65f6\u7684\u533a\u95f4\u957f\u5ea6\u6bd4\u4e4b\u524d\u8bb0\u5f55\u7684\u7b26\u5408\u8981\u6c42\u7684\u6700\u5c0f\u533a\u95f4\u957f\u5ea6\u66f4\u5c0f, \u5219\u66f4\u65b0\u6700\u5c0f\u533a\u95f4\u957f\u5ea6\u4e3a\u5f53\u524d\u957f\u5ea6\n\n\u5f53\u533a\u95f4\u4e2d\u5305\u542b\u4e86\u5168\u90e8\u5b57\u6bcd\u65f6, \u8fd8\u8981\u5c1d\u8bd5\u628a\u5de6\u6307\u9488\u5411\u53f3\u79fb\u52a8, \u4e0d\u65ad\u53bb\u9664\u6700\u5de6\u8fb9\u7684\u5b57\u6bcd, \u4f7f\u5f97\u7b26\u5408\u8981\u6c42\u7684\u533a\u95f4\u957f\u5ea6\u53d8\u5c0f, \u76f4\u5230\u533a\u95f4\u4e0d\u7b26\u5408\u8981\u6c42(\u4e0d\u5305\u542b\u6240\u6709\u5b57\u6bcd)\u4e3a\u6b62\n\n**\u5b8c\u6574\u7a0b\u5e8f**:\n\n```c\n#include<stdio.h>\n#include<string.h>\n\nint n, m = 0;          //\u5e8f\u5217\u957f\u5ea6\u548c\u5b57\u6bcd\u603b\u6570  \nchar arr[1000005];     //\u50a8\u5b58\u5e8f\u5217\nint char_cnt[10005];   //\u4e0d\u540c\u7684\u5b57\u6bcd\u51fa\u73b0\u6b21\u6570\nint total_char = 0;    //\u5f53\u524d\u533a\u95f4\u5185\u7684\u4e0d\u540c\u5b57\u6bcd\u6570\nint min_len = 1000000; //\u533a\u95f4\u7684\u6700\u77ed\u957f\u5ea6\n\nint main(){\n    scanf(\"%d\\n\", &n);\n    for (int i = 1; i <= n; i++){ //\u8bfb\u5165\u5e8f\u5217\n        scanf(\"%c\", &arr[i]);\n        if (char_cnt[arr[i]] == 0) m++; //\u8bfb\u5230\u4e0d\u540c\u7684\u5b57\u6bcd, \u5219\u589e\u52a0\u5b57\u6bcd\u79cd\u7c7b\n        char_cnt[arr[i]]++;\n    }\n    memset(char_cnt, 0, sizeof(char_cnt));\n\n    int idx1 = 0, idx2 = 0; //\u5de6\u53f3\u6307\u9488\n    while (idx2 < n){\n        while(total_char < m && idx2 < n){ //\u79fb\u52a8\u53f3\u6307\u9488, \u76f4\u5230\u533a\u95f4\u5305\u542b\u6240\u6709\u5b57\u6bcd\n            idx2++;\n            if (char_cnt[arr[idx2]] == 0){\n                total_char++;\n            }\n            char_cnt[arr[idx2]]++;\n        }\n    \n        while(total_char == m && idx1 < n){ //\u79fb\u52a8\u5de6\u6307\u9488, \u76f4\u5230\u533a\u95f4\u4e0d\u5305\u542b\u6240\u6709\u5b57\u6bcd\n            if (idx2 - idx1 < min_len){\n                min_len = idx2 - idx1; //\u66f4\u65b0\u6700\u4f18\u89e3\n            }\n            idx1++;\n            char_cnt[arr[idx1]]--;\n            if (char_cnt[arr[idx1]] == 0){\n                total_char--;\n            }\n        }\n    }\n\n    printf(\"%d\\n\", min_len);\n    return 0;\n}\n```\n\u672c\u7ad9\u7684\u53e6\u4e00\u9053\u9898 [P1638 \u901b\u753b\u5c55](https://www.luogu.com.cn/problem/P1638) \u7684\u601d\u8def\u4e0e\u8fd9\u9053\u9898\u4e5f\u5f88\u76f8\u4f3c",
        "postTime": 1646916134,
        "uid": 472628,
        "name": "Mandel520",
        "ccfLevel": 0,
        "title": "CF701C \u9898\u89e3"
    },
    {
        "content": "\u4ece[\u3010Hard Process\u3011](https://www.luogu.org/problem/CF660C)\u8fc7\u6765\u7684\uff0c\u90a3\u9053\u9898\u4e5f\u662f\u6ed1\u52a8\u7a97\u53e3\n\n~~\u90a3\u9053\u9898\u4e5f\u662f\u4e00\u904d AC, rp ++~~\n\n\u539f\u9898\u94fe\u63a5[\u3010They Are Everywhere\u3011](https://www.luogu.org/problem/CF701C)\n\n\u6211\u77e5\u9053\u7684\u6ed1\u52a8\u7a97\u53e3\u4e00\u5171\u6709\u4e24\u79cd\n\n\u4e00\u79cd\u662f\u56fa\u5b9a\u957f\u5ea6\u6ed1\u52a8\uff0c\u53e6\u4e00\u79cd\u662f\u4e0d\u56fa\u5b9a\u957f\u5ea6\u6ed1\u52a8\n\n\u6709\u6b21\u6a21\u62df\uff0c\u6211\u60f3\u5230\u4e86\u6ed1\u52a8\u7a97\u53e3\uff0c\u800c\u4e14\u6b63\u89e3\u5c31\u662f\u6ed1\u52a8\u7a97\u53e3\uff0c\n\n\u4f46\u662f\u6211\u56e0\u4e3a\u60f3\u5230\u56fa\u5b9a\u957f\u5ea6\u7684\u6ed1\u52a8\u7a97\u53e3\u540e\uff0c\u6ca1\u6709\u60f3\u5230\u4e0d\u56fa\u5b9a\u957f\u5ea6\u7684\u6ed1\u52a8\u7a97\u53e3\uff0c\n\n100 pts -> 70 pts\n\n\u8fd9\u5c31\u662f\u6211\u60f3\u8bf4\u7684\u4e00\u4e2a\u70b9\n\n\u901a\u5e38\u56fa\u5b9a\u957f\u5ea6\u7684\u6ed1\u52a8\u7a97\u53e3\u8981\u914d\u5408\u4e8c\u5206\u7b54\u6848\u6765\u4f7f\u7528\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 O (nlogn)\n\n\u800c\u4e0d\u56fa\u5b9a\u957f\u5ea6\u7684\u6ed1\u52a8\u7a97\u53e3\u5219\u662f O (n)\n\n\u4f46\u4e5f\u4e0d\u80fd\u4ec5\u4ec5\u5c31\u662f\u770b\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u8981\u5177\u4f53\u60c5\u51b5\u5177\u4f53\u5206\u6790\n\n\u8fd8\u6709\u5c31\u662f\u4e00\u822c\u7684\u6ed1\u52a8\u7a97\u53e3\u90fd\u662f\u6c42\u6700\u5927\u7684\u6ee1\u8db3\u60c5\u51b5\u7684\u533a\u95f4\n\n\u672c\u9898\u662f\u6700\u5c0f\u7684\uff0c\u4f46\u90fd\u5dee\u4e0d\u591a\uff0c\u7a0d\u5fae\u6539\u70b9\u7ec6\u8282\u5c31\u597d\u4e86\n\n\u9898\u610f\n\n\t\t\u6c42\u51fa\u957f\u5ea6\u6700\u5c0f\u7684\u5305\u542b\u5e8f\u5217\u4e2d\u6240\u6709\u7684\u5b57\u6bcd\u7684\u5e8f\u5217\u3002\n\n\u89e3\u9898\u601d\u8def\n\n\t\t1.\u6c42\u51fa\u5171\u6709\u591a\u5c11\u79cd\u4e0d\u540c\u5b57\u7b26\n\n\t\t2.\u6ed1\u52a8\u7a97\u53e3\u6c42\u89e3\n\n\u5728\u8fd9\u91cc\u6211\u62c5\u5fc3\u7ec6\u8282\u5199\u6302\uff0c\u5c31\u5148\u6c42\u51fa\u4e86\u5de6\u7aef\u70b9\u4e3a 1 \u65f6\u7684\u6700\u5c0f\u7684\u53f3\u7aef\u70b9\n\n\u8fd8\u6709\u5c31\u662f\u4e00\u5f00\u59cb\u6211\u60f3\u628a\u6240\u6709\u7684\u5b57\u7b26\u6620\u5c04\u6210\u4e00\u5806\u6570\uff0c\n\n\u540e\u6765\u60f3\u4e86\u60f3\uff0c\u76f4\u63a5\u628a\u5b57\u7b26\u5f53\u6210\u4e0b\u6807\u5c31\u597d\u4e86\uff0cc ++ \u4f1a\u81ea\u5df1\u8fdb\u884c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\n\n\u4ee3\u7801\n\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <cmath>\n\nusing namespace std;\nconst int maxn = 1e5 + 10;\n\nchar a[maxn], b[maxn];\nint vis[1000];\nint n, tot, s;\n\nvoid djj_lxy () {\n\tscanf (\"%d\", &n);\n\tscanf (\"%s\", a + 1);\n\tfor (register int i = 1; i <= n; i ++)\n\t\tif (!vis[a[i]])\n\t\t\ttot ++, vis[a[i]] = 1;\n\tmemset (vis, 0, sizeof vis);\n\tint l = 1, r;\n\tfor (register int i = 1; i <= n; i ++) {\n\t\tvis[a[i]] ++;\n\t\tif (vis[a[i]] == 1)\n\t\t\ts ++;\n\t\tif (s == tot) {\n\t\t\tr = i;\n\t\t\tbreak ;\n\t\t}\n\t}\n\tint ans = r;\n\tfor (; r <= n; ) {\n\t\tif (s == tot) {\n\t\t\tans = min (ans, r - l + 1);\n\t\t\tif (vis[a[l]] == 1)\n\t\t\t\ts --;\n\t\t\tvis[a[l]] --;\n\t\t\tl ++;\n\t\t}\n\t\telse {\n\t\t\tr ++;\n\t\t\tvis[a[r]] ++;\n\t\t\tif (vis[a[r]] == 1)\n\t\t\t\ts ++;\n\t\t\t\n\t\t}\n\t}\n\tprintf (\"%d\\n\", ans);\n}\n\nint main () {\n\tdjj_lxy ();\n}\n```\n\n\u90a3\u4e48\u672c\u9898\u5c31\u5b8c\u4e86\n\n\u6211\u89e3\u9898\uff0c\u634e\u5e26\u7740\u8bf4\u4e86\u70b9\u6ed1\u52a8\u7a97\u53e3\n\n\u79bb CSP-S \u8fd8\u6709\u51e0\u5929\uff0c\u795d\u5927\u5bb6 rp ++\n\n\u4e5f\u5e0c\u671b\u81ea\u5df1\u80fd\u66f4\u52aa\u529b\u4e00\u4e9b\uff0c\u52a0\u6cb9",
        "postTime": 1572829097,
        "uid": 162867,
        "name": "shame_djj",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF701C \u3010They Are Everywhere\u3011"
    }
]