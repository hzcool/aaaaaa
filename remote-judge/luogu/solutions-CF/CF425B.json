[
    {
        "content": "\u5148\u8003\u8651\u4e00\u4e2a\u77e9\u9635\u600e\u6837\u662f\u5408\u6cd5\u7684\u3002\n\n\u7531\u4e8e\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\u90fd\u8981\u662f\u77e9\u5f62\uff0c\u6240\u4ee5\u76f8\u90bb\u4e24\u884c\u8981\u4e48\u5b8c\u5168\u76f8\u540c\u8981\u4e48\u5b8c\u5168\u76f8\u53cd\u3002\n\n\u6240\u4ee5\u8bf4\uff0c\u4efb\u610f\u4e24\u884c\u8981\u4e48\u5b8c\u5168\u76f8\u540c\u8981\u4e48\u5b8c\u5168\u76f8\u53cd\u3002\n\n\u8fd9\u65f6\u53ef\u4ee5\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n\u82e5 $k>n$\uff0c\u5219\u4e00\u5b9a\u5b58\u5728\u4e00\u884c\u6ca1\u6709\u4efb\u4f55\u6570\u6539\u53d8\uff0c\u679a\u4e3e\u8fd9\u4e00\u884c\uff0c\u8ba9\u5176\u5b83\u6240\u6709\u884c\u53d8\u4e3a\u76f8\u540c\u6216\u76f8\u53cd\u3002\n\n\u82e5 $k\\leq n$\uff0c\u5219\u53ef\u4ee5\u76f4\u63a5\u679a\u4e3e\u7b2c\u4e00\u884c\u6bcf\u4e00\u4e2a\u6570\u662f\u5426\u7ffb\u8f6c\uff0c\u7136\u540e\u5f3a\u5236\u8fd9\u4e00\u884c\u4e0d\u53d8\u3002\n\n\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f $O(n^2m)$ \u6216 $O(2^k nm)$ \u7684\u3002\n\n\u867d\u7136\u8fd9\u6837\u5df2\u7ecf\u53ef\u8fc7\u4e86\uff0c\u4f46\u4e8b\u5b9e\u4e0a\u53ef\u4ee5\u628a $n,m$ \u5f00\u5230 $5000$\uff0c\u9700\u8981\u4e00\u4e9b\u4f18\u5316\uff1a\n\n$1.$ \u8ba1\u7b97\u53d8\u6362\u591a\u5c11\u6b21\u5b8c\u5168\u76f8\u540c\u6216\u76f8\u53cd\u53ef\u4ee5 bitset \u4f18\u5316\u3002\n\n$2.$ \u7531\u4e8e\u6700\u591a\u7ffb $k$ \u884c\uff0c\u6240\u4ee5\u524d $k+1$ \u884c\u4e00\u5b9a\u6709\u4e00\u884c\u6ca1\u6709\u6362\uff0c\u6240\u4ee5\u53ea\u7528\u679a\u4e3e $k+1$ \u884c\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u4f18\u5316\u5230 $O(\\dfrac {nmk}{\\omega})$\n\n\u653e\u4e00\u4e2a $O(n^2m)$ \u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define re register\nusing namespace std;\ninline int read(){\n\tre int t=0;re char v=getchar();\n\twhile(v<'0')v=getchar();\n\twhile(v>='0')t=(t<<3)+(t<<1)+v-48,v=getchar();\n\treturn t;\n}\nint n,m,a[102][102],k,t,dp[102][2],ans,b[102][102],f[12][1024],sss;\ninline void check(re int x,re int sum=0){\n\tfor(re int i=1;i<=n;++i){\n\t\tif(i==x)continue;\n\t\tmemset(dp,0,sizeof(dp));\n\t\tfor(re int j=1;j<=m;++j){\n\t\t\tif(a[x][j]^a[x][j-1])dp[j][0]=dp[j-1][1],dp[j][1]=dp[j-1][0];\n\t\t\telse dp[j][0]=dp[j-1][0],dp[j][1]=dp[j-1][1];\n\t\t\t++dp[j][a[i][j]];++sss;\n\t\t}\n\t\tsum+=min(dp[m][0],dp[m][1]);\n\t\tif(sum>k)return;\n\t}\n\tans=min(ans,sum);\n}\ninline void dfs(re int x,re int y){\n\tif(x==m+1)return check(1,y);\n\tdfs(x+1,y),a[1][x]^=1,dfs(x+1,y+1),a[1][x]^=1;\n}\nint main(){\n\tt=1;\n\twhile(t--){\n\t\tn=read(),m=read(),k=read(),ans=1e9;\n\t\tfor(re int i=1;i<=n;++i)for(re int j=1;j<=m;++j)a[i][j]=read();\n\t\tif(n<m){\n\t\t\tfor(re int i=1;i<=m;++i)for(re int j=1;j<=n;++j)b[i][j]=a[j][i];\n\t\t\tswap(n,m);\n\t\t\tfor(re int i=1;i<=n;++i)for(re int j=1;j<=m;++j)a[i][j]=b[i][j];\n\t\t}\n\t\tif(k<n){\n\t\t\tfor(re int i=1;i<=n;++i)check(i);\n\t\t\tprintf(\"%d\\n\",(ans>k)?-1:ans);\n\t\t}\n\t\telse{\n\t\t\tdfs(1,0);\n\t\t\tprintf(\"%d\\n\",(ans>k)?-1:ans);\n\t\t}\n\t}\n}\n\n```\n",
        "postTime": 1606800895,
        "uid": 41476,
        "name": "gyh20",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF425B \u3010Sereja and Table \u3011"
    },
    {
        "content": "\u5f88\u5de7\u5999\u7684\u4e00\u9053\u601d\u7ef4\u9898\uff0c\u9996\u5148\u6211\u4eec\u6211\u4eec\u628a\u6574\u4e2atable\u770b\u505a\u9ed1\u767d\u8272\u5757\u7ec4\u6210\u7684\u7f51\u683c\u56fe\u3002\u5982\u679c\u60f3\u8981\u8ba9\u4efb\u4f55\u8fde\u901a\u5757\u90fd\u586b\u6ee1\u4e00\u4e2a\u77e9\u5f62\uff0c\u90a3\u4e48\u4e00\u4e2a\u8054\u901a\u77e9\u5f62\u56db\u8fb9\u4e00\u5b9a\u88ab\u8fb9\u754c\u6216\u8005\u4e0d\u540c\u8272\u5757\u7d27\u7d27\u5305\u56f4\uff0c\u8fd9\u4e2a\u6027\u8d28\u5fc5\u987b\u5bf9\u6240\u6709\u77e9\u5f62\u751f\u6548\u3002\u90a3\u4e48\u8fd9\u6837\u4e00\u6765\uff0c\u6bcf\u4e2a\u8fde\u901a\u5757\u5de6\u53f3\u5fc5\u987b\u662f\u76f8\u540c\u9ad8\u5ea6\u7684\u5f02\u8272\u77e9\u5f62\uff0c\u4e0a\u4e0b\u540c\u7406\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u6309\u5217\u8003\u8651\uff0c\u5047\u8bbe\u73b0\u5728\u7b2c\u4e00\u5217\u662f\u8fd9\u6837\u7684\n$$\n\\begin{bmatrix}\n0\\\\\n1\\\\\n1\\\\\n0\\\\\n1\n\\end{bmatrix}\t\n$$\n\n\u90a3\u4e48\u8981\u6ee1\u8db3\u6761\u4ef6\u7b2c\u4e8c\u5217\u53ea\u6709\u53ef\u80fd\u662f\u4ee5\u4e0b\u4e24\u79cd\u60c5\u51b5\n\n$$\n\\begin{bmatrix}\n0 & 1\\\\\n1 & 0\\\\\n1 & 0\\\\\n0 & 1\\\\\n1 & 0\n\\end{bmatrix}\t\n\n\\begin{bmatrix}\n0 & 0\\\\\n1 & 1\\\\\n1 & 1\\\\\n0 & 0\\\\\n1 & 1\n\\end{bmatrix}\n$$\n\n\u4e5f\u5c31\u662f\u989c\u8272\u8981\u4e48\u7ffb\u8f6c\u8981\u4e48\u4e0d\u7ffb\u8f6c\u3002\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u8981\u679a\u4e3e\u7b2c\u4e00\u5217\u7684\u6837\u5b50\uff0c\u7136\u540e\u6839\u636e\u7ffb\u4e0d\u7ffb\u8f6c\u989c\u8272\u9009\u62e9\u6700\u5c11\u7684\u6b65\u6570\u5373\u53ef\u3002\n\n\u4f46\u662f\u73b0\u5728\u6211\u4eec\u7684$n,m$\u6700\u5927\u53ef\u4ee5\u5230100\uff0c\u679a\u4e3e\u6240\u6709\u72b6\u6001\u663e\u7136\u4e0d\u53ef\u884c\uff0c\u4f46\u662f\u6ce8\u610f\u5230$k$\u53ea\u670910\uff0c\u8fd9\u63d0\u9192\u6211\u4eec\u5982\u679c\u80fd\u5c06\u89c4\u6a21\u7f29\u5c0f\u523010\u5c31\u53ef\u4ee5\u8fdb\u884c\u679a\u4e3e\u4e86\u3002\n\n\u5982\u679c\u884c\u6570\u5927\u4e8e$k$\uff0c\u90a3\u4e48\u679a\u4e3e\u80af\u5b9a\u8d85\u65f6\uff0c\u4f46\u662f\u4e0d\u679a\u4e3e\u80af\u5b9a\u6ca1\u6cd5\u5f97\u5230\u6700\u4f18\u7b54\u6848\uff0c\u600e\u4e48\u529e\uff1f\n\n\u8fd9\u65f6\u5019\u6211\u4eec\u6362\u4e00\u4e2a\u89d2\u5ea6\u53bb\u60f3\uff0c\u884c\u6570\u5927\u4e8e$k$\uff0c\u5982\u679c\u8fd9\u65f6\u5019\u6bcf\u4e00\u884c\u90fd\u81f3\u5c11\u9700\u8981\u8fdb\u884c\u4e00\u6b65\u4fee\u6539\u64cd\u4f5c\uff0c\u90a3\u4e48\u6b65\u6570\u80af\u5b9a\u5927\u4e8ek\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u76f4\u63a5\u5224\u4e0d\u53ef\u4ee5\u5c31\u884c\u3002\n\n\u53cd\u4e4b\uff0c\u6211\u4eec\u77e5\u9053\u81f3\u5c11\u6709\u4e00\u884c\u662f\u4e0d\u53d8\u7684\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u66f4\u6539\u679a\u4e3e\u7b56\u7565\uff0c\u65e2\u7136\u6211\u77e5\u9053\u8fd9\u4e00\u884c\u4e0d\u4f1a\u53d8\uff0c\u6211\u4eec\u5c31\u8be5\u7528\u8fd9\u884c\u8fdb\u884c\u521a\u624d\u7684\u6700\u5c0f\u6b65\u6570\u8ba1\u7b97\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(nm2^k)$\uff0c\u6216\u8005$O(n^2m)$\n\n\u4ee3\u7801\uff1a\n\n```cpp\nbitset<102> mat[MAXN];\nbitset<102> b;\n\nint main() {\n#ifdef LOCALLL\n    freopen(\"in\", \"r\", stdin);\n    freopen(\"out\", \"w\", stdout);\n#endif\n    scanf(\"%d%d%d\", &n, &m, &k);\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            int x = read<int>();\n            if (x) mat[i].set(j);\n        }\n    }\n\n    int ans = INF2;\n    if (n <= k) {\n        // \u679a\u4e3e\u521d\u59cb\u72b6\u6001\n        for (int s = 0; s < (1 << n); s++) {\n            int t = 0;\n            for (int i = 0; i < m; i++) {\n                int cnt = 0;\n                for (int j = 0; j < n; j++) {\n                    cnt += (mat[j][i] != ((s >> j) & 1));\n                }\n                t += min(cnt, n - cnt);\n            }\n            ans = min(ans, t);\n        }\n    } else {\n        // \u679a\u4e3e\u4e0d\u52a8\u884c\n        for (int i = 0; i < n; i++) {\n            int t = 0;\n            for (int j = 0; j < n; j++) {\n                if (j != i) {\n                    auto t1 = mat[i] ^ mat[j];\n                    t += min(t1.count(), m - t1.count());\n                }\n            }\n            ans = min(ans, t);\n        }\n    }\n    if (ans > k) {\n        printf(\"-1\");\n    } else {\n        printf(\"%d\\n\", ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1596505412,
        "uid": 36956,
        "name": "Mr_Skirt",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF425B \u3010Sereja and Table \u3011"
    },
    {
        "content": "\u63d0\u51fa\u4e00\u79cd\u65b0\u7684\u601d\u8def\u3002\n\n\u9996\u5148\u5bfb\u627e\u201c\u6bcf\u4e2a\u540c\u8272\u6781\u5927\u8fde\u901a\u5757\u90fd\u662f\u77e9\u5f62\u201d\u7684\u6027\u8d28\uff0c~~\u5bb9\u6613\u53d1\u73b0~~\u6709\u4e24\u79cd\uff1a\n\n1. \u7b49\u4ef7\u4e8e\u6bcf\u4e2a $2\\times2$ \u6b63\u65b9\u5f62\u5185\u9ed1\u8272\u548c\u767d\u8272\u683c\u5b50\u7684\u4e2a\u6570\u90fd\u662f\u5076\u6570\n\n2. \u7b49\u4ef7\u4e8e\u6bcf\u4e00\u884c\u989c\u8272\u90fd\u4e0e\u4e0a\u4e00\u884c\u5b8c\u5168\u76f8\u540c\u6216\u76f8\u53cd\u3002\n\n\u9898\u89e3\u533a\u7684\u4e24\u7bc7\u9898\u89e3\u90fd\u662f\u5173\u4e8e\u6027\u8d28 2 \u7684\u505a\u6cd5\uff0c\u4e0d\u5982\u8003\u8651\u6027\u8d28 1.\n\n\u6709\u4e00\u4e2a\u663e\u7136\u7684\u505a\u6cd5\uff0c\u9884\u5904\u7406\u51fa\u6240\u6709\u4e0d\u5408\u6cd5\u7684 $2\\times2$ \u6b63\u65b9\u5f62\uff0c\u66b4\u529b\u641c\u7d22+\u53ef\u884c\u6027\u526a\u679d\u3002\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n\u5982\u4f55\u8bc1\u660e\u6027\u8d28 1 \u6210\u7acb\u3002~~\u6613\u8bc1\u3002~~\n\n\u5982\u679c\u67d0\u4e2a\u8054\u901a\u5757\u4e0d\u662f\u77e9\u5f62\uff0c\u611f\u6027\u7406\u89e3\u5c31\u5fc5\u7136\u6709\u4e00\u5757\u7a81\u51fa\u6765\uff0c\u6b64\u65f6\u7a81\u51fa\u90e8\u5206\u7684 $2\\times2$ \u6b63\u65b9\u5f62\u5c31\u5fc5\u7136\u65e0\u6cd5\u6ee1\u8db3\u90fd\u662f\u5076\u6570\u7684\u9650\u5236\u6761\u4ef6\u3002\n\n\u5982\n\n```\n0110\n1111\n```\n\n\u663e\u7136\u53ef\u4ee5\u6211\u4eec\u9009\u53d6\n```\n01\n11\n```\n\u8fd9\u6837\u4e00\u4e2a\u5c0f\u6b63\u65b9\u5f62\u3002\n\n\u4ee3\u7801\u6613\u5b9e\u73b0\u3002",
        "postTime": 1636555731,
        "uid": 183026,
        "name": "Cocoly1990",
        "ccfLevel": 0,
        "title": "CF425B Sereja and Table"
    },
    {
        "content": "\u9996\u5148\u8003\u8651\u6700\u7ec8\u7b54\u6848\u7684\u5f62\u5f0f\uff0c\u4e00\u5b9a\u662f\u9ed1\u767d\u5757\u5757\u4ea4\u66ff\u51fa\u73b0\u3002\n\n\u56e0\u6b64\uff0c\u82e5\u7b2c\u4e00\u884c\u72b6\u6001\u786e\u5b9a\u4e86\uff0c\u5176\u4f59\u51e0\u884c\u8981\u4e48\u4e0e\u7b2c\u4e00\u884c\u7684\u72b6\u6001\u76f8\u540c\uff0c\u8981\u4e48\u4e0e\u7b2c\u4e00\u884c\u72b6\u6001\u76f8\u53cd\uff0c\u6240\u4ee5\u5176\u4f59\u6bcf\u4e00\u884c\u7684\u72b6\u6001\u53ea\u4e0e\u5f53\u524d\u884c\u72b6\u6001\u6709\u5173\uff0c\u4e14\u4e0d\u4f1a\u5bf9\u5176\u4ed6\u884c\u4ea7\u751f\u5f71\u54cd\uff0c\u8d2a\u5fc3\u9009\u62e9\u5373\u53ef\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5f88\u5bb9\u6613\u5f97\u51fa\u4e00\u4e2a\u6734\u7d20\u7684\u7b97\u6cd5\uff0c\u6307\u6570\u679a\u4e3e\u7b2c\u4e00\u884c\u7684\u72b6\u6001\uff0c\u7136\u540e\u5bf9\u4e8e\u5176\u4f59\u51e0\u884c\u8d2a\u5fc3\u5730\u9009\u62e9\uff0c\u5f97\u51fa\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\uff0c\u590d\u6742\u5ea6\u4e3a $ O(nm2^m)$ \u3002\n\n\u7136\u540e\u6211\u4eec\u968f\u4fbf\u526a\u4e2a\u679d\uff0c\u8003\u8651\u5f53\u524d\u7684\u72b6\u6001\u679a\u4e3e\u5230\u7b2c $ i $ \u5217\uff0c\u90a3\u4e48\u82e5\u524d $ i $ \u5217\u7684\u6bcf\u4e00\u884c\u90fd\u6700\u4f18\u9009\u62e9\uff0c\u9700\u8981\u7684\u64cd\u4f5c\u6b21\u6570\u8fd8\u662f\u4f1a\u8d85\u8fc7 $ k $ \uff0c\u90a3\u4e48\u65e0\u8bba\u540e\u9762\u5982\u4f55\u9009\uff0c\u4e5f\u4e0d\u4f1a\u66f4\u4f18\uff0c\u6240\u4ee5\u526a\u6389\u5c31\u597d\u4e86\uff0c\u7136\u540e\u526a\u5b8c\u679d\u8dd1\u7684\u98de\u5feb\uff0c\u5c31\u8fc7\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 105,inf=0x3f3f3f3f;\nint t,n,m,k,a[N][N],ans,b[N]; \nint calc(int l,int r){\n\tint res=0,cnt,sum=r-l+1;\n\t\tfor(int i=1;i<=n;++i){\n\t\t\t\tcnt=0; \n\t\tfor(int j=l;j<=r;++j)\n\t\t\tcnt+=(b[j]==a[i][j]);\n\t\tres+=min(cnt,sum-cnt);\n\t\tif(res>=ans)return inf;\n\t}\n\treturn res;\n}\nvoid solve(int x,int t,int sum){\n\tif(sum>=ans)return;\n\tif(x>m){\n\t\tans=sum;\n\t\treturn;\n\t}\n\tint g;\n\tfor(int i=x;i<=m;++i){\n\t\tb[i]=t; g=calc(1,i);\n\t\tif(g!=inf) solve(i+1,t^1,g);                                                                                                                                                                       \n\t}\n} \nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tfor(int i=1;i<=n;++i)\n\t\tfor(int j=1;j<=m;++j)\n\t\t\tscanf(\"%d\",&a[i][j]);\n\tans=k+1;\n\tsolve(1,1,0);\n\tsolve(1,0,0);\t\n\tprintf(\"%d\\n\",(ans>k?-1:ans));\n}\n```\n",
        "postTime": 1664595202,
        "uid": 211086,
        "name": "bsTiat",
        "ccfLevel": 0,
        "title": "CF425B Sereja and Table \u9898\u89e3"
    }
]