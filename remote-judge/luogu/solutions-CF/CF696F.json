[
    {
        "content": "\u6807\u7b7e: \u4e8c\u5206\u7b54\u6848, \u8ba1\u7b97\u51e0\u4f55, \u534a\u5e73\u9762\u4ea4, \u5361\u7cbe\u5ea6.\n\n\u8fd9\u9053\u9898\u7684\u7cbe\u5ea6\u6df1\u523b\u5730\u6076\u5fc3\u5230\u6211\u4e86. \u5728\u7b2c `96` \u4e2a\u70b9\u5361\u4e86 $14$ \u53d1, \u7b2c $15$ \u53d1\u624d\u5361\u8fc7, \u5982\u679c\u6709\u96be\u5144\u96be\u5f1f\u88ab\u5361\u7cbe\u5ea6, \u53ef\u4ee5\u53c2\u8003\u4e00\u4e0b\u6211\u4e8c\u5206\u7684\u5b9e\u73b0.\n\n#### Part 1\n\n\u9898\u76ee\u4e00\u4e0a\u624b\u5f88\u5bb9\u6613\u5c31\u4f1a\u60f3\u5230\u4e8c\u5206\u7b54\u6848, \u8003\u8651\u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u4e8c\u5206\u51fa\u6765\u7684 $r$ \u662f\u5426\u5408\u6cd5.\n\n\u8003\u8651\u4e00\u4e2a\u5408\u6cd5\u7684\u70b9 $A$ \u8ddd\u79bb\u67d0\u4e2a\u8fb9\u96c6\u5185\u7684\u6240\u6709\u8fb9\u4e0d\u8d85\u8fc7 $r$ \u8981\u6ee1\u8db3\u4ec0\u4e48\u6761\u4ef6: \n\n- $A$ \u5728\u591a\u8fb9\u5f62\u5185\u90e8.\n- \u5bf9\u4e8e\u8fb9\u96c6\u5185\u6bcf\u6761\u8fb9\u505a\u4e24\u6761\u8ddd\u79bb\u4e3a $r$ \u7684\u5e73\u884c\u7ebf(\u4e8b\u5b9e\u4e0a\u53ea\u9700\u8981\u505a\u4e00\u6761), $A$ \u5728\u8fd9\u4e9b\u76f4\u7ebf\u7684\u534a\u5e73\u9762\u4ea4\u5185.\n\n\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u6240\u6709\u8fb9\u96c6\u7684\u5b50\u96c6, \u7528\u534a\u5e73\u9762\u4ea4\u627e\u5230\u662f\u5426\u6709\u7b26\u5408\u6761\u4ef6\u7684\u70b9. \u6700\u540e\u5224\u65ad\u662f\u5426\u6709\u4e24\u4e2a\u5408\u6cd5\u7684\u5b50\u96c6\u7684\u5e76\u4e3a\u5168\u96c6\u5373\u53ef.\n\n\u7136\u800c\u8fd9\u4e2a\u590d\u6742\u5ea6\u662f\u6307\u6570\u7ea7\u7684, \u663e\u7136\u4e0d\u80fd\u8dd1.\n\n#### Part 2\n\n\u89c2\u5bdf\u53d1\u73b0, \u5bf9\u4e8e\u51f8\u591a\u8fb9\u5f62\u5185\u7684\u4efb\u610f\u4e24\u4e2a\u70b9 $A,B$, \u51f8\u591a\u8fb9\u5f62\u4e0a\u8ddd\u79bb $A$ \u66f4\u8fd1\u7684\u8fb9\u662f\u8fde\u7eed\u7684($B$ \u540c\u7406, \u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7\u89c2\u5bdf\u6bcf\u6761\u8fb9**\u6240\u5728\u76f4\u7ebf\u4e0e\u76f4\u7ebf** $AB$ **\u7684\u4ea4\u70b9**\u4e0e**\u5230\u4e24\u70b9\u7684\u8ddd\u79bb\u5173\u7cfb**\u7684\u5173\u7cfb\u5f97\u51fa). \u6240\u4ee5\u5fc5\u5b9a\u5b58\u5728\u4e00\u4e2a\u6700\u4f18\u89e3\u7684\u65b9\u6848\u4f7f\u5f97\u4e00\u6bb5\u8fde\u7eed\u533a\u95f4\u5230 $A$ \u7684\u8ddd\u79bb\u4e0d\u5927\u4e8e $r$ , \u5269\u4f59\u7684\u90e8\u5206(\u4e5f\u662f\u4e00\u6bb5\u8fde\u7eed\u533a\u95f4)\u5230 $B$ \u7684\u8ddd\u79bb\u4e0d\u5927\u4e8e $r$ .\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u8fde\u7eed\u533a\u95f4\u5224\u65ad\u662f\u5426\u6709\u5408\u6cd5\u7684\u70b9, \u82e5\u9884\u5148\u5bf9\u534a\u5e73\u9762\u6392\u597d\u5e8f, \u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^3\\log x)$, \u770b\u8d77\u6765\u4f3c\u4e4e\u80fd\u8dd1, \u4e0d\u8fc7\u7531\u4e8e**\u4e00\u4e2a\u5408\u6cd5\u533a\u95f4\u7684\u5b50\u533a\u95f4\u663e\u7136\u5408\u6cd5**, \u6211\u4eec\u7528\u5c3a\u53d6\u6cd5(two points)\u5c31\u53ef\u5c06\u590d\u6742\u5ea6\u964d\u5230 $O(n^2\\log x)$ \u4e86.\n\n```cpp\n#include <bits/stdc++.h>\n#define double long double\nusing namespace std;\nconst double eps = 1e-10;\nint read();\n\nint sgn(double x) { return x < -eps ? -1 : (x > eps ? 1 : 0); }\n\nstruct P {\n    double x, y;\n    P() {}\n    P(double xx, double yy) : x(xx), y(yy) {}\n    void in() { x = read(), y = read(); }\n    P operator+(P a) { return P(x + a.x, y + a.y); }\n    P operator-(P a) { return P(x - a.x, y - a.y); }\n    P operator*(double a) { return P(x * a, y * a); }\n    P operator/(double a) { return P(x / a, y / a); }\n    double operator*(P a) { return x * a.y - y * a.x; }\n    double an() { return atan2(y, x); }\n    double len() { return sqrt(x * x + y * y); }\n    P perp() { return P(-y, x) / len(); }\n    void prt() { printf(\"%.15Lf %.15Lf\\n\", x, y); }\n} a[1003], p[1003], q2[1003], res[2];\n\nstruct Line {\n    P st, en;\n    double an;\n    Line() {}\n    Line(P a, P b) : st(a), en(b) { an = (en - st).an(); };\n    bool operator<(Line b) {\n        return sgn(an - b.an) ? an < b.an : sgn((en - st) * (b.en - st)) < 0;\n    }\n} b[1003], q1[1003], t;\n\nint n;\n\nbool cmp(int x, int y) { return b[x] < b[y]; }\nint cur[1003], pos[1003], mxr[1003], vis[1003];\nint hd, tl;\n\nP inter(Line a, Line b) {\n    double s1 = (b.st - a.st) * (a.en - a.st);\n    double s2 = (a.en - a.st) * (b.en - a.st);\n    return P(b.st * s2 + b.en * s1) / (s1 + s2);\n}\n\nbool solve_half_plane() {\n    hd = 1, tl = 0;\n    for (int i = 1; i <= (n << 1); ++i) {\n        if (!vis[i] || (hd <= tl && !sgn(b[cur[i]].an - q1[tl].an))) continue;\n        t = b[cur[i]];\n        while (hd < tl && sgn((t.en - t.st) * (q2[tl] - t.st)) <= 0) --tl;\n        while (hd < tl && sgn((t.en - t.st) * (q2[hd + 1] - t.st)) <= 0) ++hd;\n        q1[++tl] = t, (hd < tl) ? q2[tl] = inter(t, q1[tl - 1]) : P();\n    }\n    t = q1[hd];\n    while (hd < tl && sgn((t.en - t.st) * (q2[tl] - t.st)) <= 0) --tl;\n    return tl - hd >= 2;\n}\nbool check_interval(int l, int r) {\n    memset(vis + 1, 0, sizeof(int) * (n << 1));\n    for (int i = 1; i <= n; ++i) vis[pos[i]] = 1;\n    for (int i = l; i <= r; ++i) vis[pos[(i - 1) % n + n + 1]] = 1;\n    return solve_half_plane();\n}\n\nbool check(double R) {\n    for (int i = 1; i <= n; ++i) {\n        P t = (b[i].en - b[i].st).perp() * R;\n        b[i + n] = Line(b[i].en + t, b[i].st + t);\n        cur[i] = i, cur[i + n] = i + n;\n    }\n    sort(cur + 1, cur + (n << 1) + 1, cmp);\n    for (int i = 1; i <= (n << 1); ++i) pos[cur[i]] = i;\n    for (int l = 1, r = 0; l <= n; ++l) {\n        while (r < 2 * n && check_interval(l, r + 1)) ++r;\n        check_interval(l, mxr[l] = r), p[l] = q2[tl];\n    }\n    for (int l = 1; l <= n; ++l)\n        for (int r = l + 1; r <= mxr[l] + 1; ++r)\n            if (mxr[r] >= n + l - 1) return res[0] = p[l], res[1] = p[r], 1;\n    return 0;\n}\n\nint main() {\n    n = read();\n    for (int i = 1; i <= n; ++i) a[i].in();\n    for (int i = 1; i <= n; ++i) b[i] = Line(a[i], a[i % n + 1]);\n    double l = 0, r = 50000, mid;\n    while (r - l > 1e-12) (check(mid = (l + r) / 2)) ? r = mid : l = mid;\n    check(l + 5e-13);\n    printf(\"%.15Lf\\n\", l), res[0].prt(), res[1].prt();\n    return 0;\n}\nconst int _SIZE = 1 << 22;\nchar ibuf[_SIZE], *iS = ibuf, *iT = ibuf;\n#define gc                                                         \\\n    (iS == iT ? iT = ((iS = ibuf) + fread(ibuf, 1, _SIZE, stdin)), \\\n     (iS == iT ? EOF : *iS++) : *iS++)\nint read() {\n    int x = 0, f = 1;\n    char c = gc;\n    while (!isdigit(c)) f = (c == '-') ? -1 : f, c = gc;\n    while (isdigit(c)) x = x * 10 + c - '0', c = gc;\n    return x * f;\n}\n```\n\n\n\n\n\n\n\n\n\n\n\n",
        "postTime": 1583137578,
        "uid": 51237,
        "name": "Kinandra",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF696F \u3010...Dary!\u3011"
    },
    {
        "content": "\u6700\u4f18\u60c5\u51b5\u4e0b\uff0c\u4e00\u5b9a\u662f\u4e00\u4e2a\u70b9\u63a7\u5236\u51f8\u591a\u8fb9\u5f62\u7684\u8fde\u7eed\u82e5\u5e72\u6761\u8fb9\uff0c\u53e6\u4e00\u4e2a\u70b9\u4e5f\u662f\u8fde\u7eed\u82e5\u5e72\u6761\u8fb9\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u5148\u4e8c\u5206\u7b54\u6848\uff0c\u7136\u540e\u5c3a\u53d6\u6cd5\u786e\u5b9a\u4ee5\u6bcf\u6761\u8fb9\u4e3a\u5de6\u7aef\u70b9\u65f6\uff0c\u53f3\u7aef\u70b9\u6700\u591a\u5230\u54ea\u91cc\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u65f6\u7528\u534a\u5e73\u9762\u4ea4\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O (n^2 (\\log v - \\log \\varepsilon))$\uff0c\u5176\u4e2d $v$ \u4e3a\u503c\u57df\uff0c[\u8bc4\u6d4b\u94fe\u63a5](https://codeforces.com/contest/696/submission/72899316)\u3002",
        "postTime": 1583850349,
        "uid": 10703,
        "name": "\u5c0f\u7c89\u5154",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF696F \u3010...Dary!\u3011"
    },
    {
        "content": "> [CF696F ...Dary!](https://codeforces.com/contest/696/problem/F)\n\n## \u9898\u610f\n\n- \u7ed9\u5b9a\u4e00\u4e2a $n$ \u4e2a\u70b9\u7684\u4e25\u683c\u51f8\u591a\u8fb9\u5f62\u3002\n- \u4f60\u8981\u6700\u5c0f\u5316 $r$\uff0c\u4f7f\u5f97\u53ef\u4ee5\u5728\u8fd9\u4e2a\u591a\u8fb9\u5f62\u5185\u6216\u591a\u8fb9\u5f62\u4e0a\u627e\u5230\u4e24\u4e2a\u70b9\uff0c\u4ee5\u5b83\u4eec\u4e3a\u5706\u5fc3\u4ee5 $r$ \u4e3a\u534a\u5f84\u4f5c\u4e24\u4e2a\u5706\uff0c\u6ee1\u8db3\u591a\u8fb9\u5f62\u7684\u6bcf\u6761\u8fb9\u6240\u5728\u7684\u76f4\u7ebf\u4e0e\u81f3\u5c11\u4e00\u4e2a\u5706\u6709\u4ea4\u70b9\u3002\n- $n \\le 300$\uff0c\u7b54\u6848\u7cbe\u5ea6\u8bef\u5dee $\\le 10^{-6}$\u3002\n\n## \u9898\u89e3\n\n\u9996\u5148\u4e8c\u5206\u7b54\u6848\uff0c\u8bbe\u6b64\u65f6\u4e8c\u5206\u7684\u503c\u4e3a $r$\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u76f4\u7ebf\u96c6\uff0c\u5982\u4f55\u5224\u65ad\u591a\u8fb9\u5f62\u5185\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u70b9\uff0c\u6ee1\u8db3\u4ee5\u5b83\u4e3a\u5706\u5fc3\u4ee5 $r$ \u4e3a\u534a\u5f84\u4f5c\u7684\u5706\u4e0e\u76f4\u7ebf\u96c6\u4e2d\u7684\u76f4\u7ebf\u6709\u4ea4\u70b9\u5462\uff1f\n\n\u5bf9\u4e8e\u6bcf\u6761\u76f4\u7ebf\uff0c\u8fd9\u4e2a\u70b9\u4e00\u5b9a\u5728\u4e0e\u8fd9\u6761\u76f4\u7ebf\u76f8\u8ddd $r$ \u7684\u4e24\u6761\u5e73\u884c\u7ebf\u5185\uff0c\u4e5f\u5c31\u662f\u4e24\u4e2a\u534a\u5e73\u9762\u7684\u4ea4\u3002\u800c\u591a\u8fb9\u5f62\u4e5f\u53ef\u4ee5\u770b\u6210\u82e5\u5e72\u4e2a\u534a\u5e73\u9762\u7684\u4ea4\uff0c\u4e8e\u662f\u95ee\u9898\u53d8\u6210\u8fd9\u82e5\u5e72\u4e2a\u534a\u5e73\u9762\u662f\u5426\u6709\u4ea4\u3002\n\n\u90a3\u4e48\uff0c\u5982\u679c\u6211\u4eec\u80fd\u591f\u628a\u8fb9\u5206\u6210\u4e24\u7c7b\uff0c\u7b2c\u4e00\u7c7b\u548c\u7b2c\u4e8c\u7c7b\u5206\u522b\u6709\u89e3\uff0c\u5219\u8bf4\u660e\u6b64\u65f6\u7684 $r$ \u6ee1\u8db3\u6761\u4ef6\u3002\n\n\u6ce8\u610f\u5230\uff0c\u6700\u7ec8\u7684\u6700\u4f18\u89e3\u4e00\u5b9a\u662f\u4e24\u4e2a\u591a\u8fb9\u5f62\u7684\u9876\u70b9\u5206\u9694\u6210\u7684\u4e24\u7c7b\uff0c\u56e0\u4e3a\u5982\u679c\u4e0d\u662f\uff0c\u663e\u7136\u53ef\u4ee5\u901a\u8fc7\u8c03\u6574\u8fbe\u5230\u66f4\u4f18\u89e3\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5 $\\mathcal O(n)$ two pointers\uff0c$\\mathcal O(n \\log n)$ \u534a\u5e73\u9762\u4ea4\u5224\u5b9a\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n^2 \\log n \\log w)$\u3002\n\n\u6211\u7684\u8ba1\u7b97\u51e0\u4f55\u677f\u5b50\u6bd4\u8f83\u4e11\uff0c\u6240\u4ee5\u88ab\u5361\u5e38\u4e86\uff0c\u7a0d\u5fae\u5361\u4e00\u4e0b\u5c31\u8fc7\u53bb\u4e86\u3002\n\n## \u4ee3\u7801\n\n```cpp\nconst double eps = 1e-10, PI = acos(-1);\n\nstruct P {\n\tdouble x, y;\n\tinline P() {}\n\tinline P(double x, double y) : x(x), y(y) {}\n\tinline P &operator += (P o) { return x += o.x, y += o.y, *this; }\n\tinline P &operator -= (P o) { return x -= o.x, y -= o.y, *this; }\n\tinline P &operator *= (double o) { return x *= o, y *= o, *this; }\n\tinline P &operator /= (double o) { return x /= o, y /= o, *this; }\n\tinline friend P operator + (P a, P b) { return a += b; }\n\tinline friend P operator - (P a, P b) { return a -= b; }\n\tinline friend P operator * (P a, double b) { return a *= b; }\n\tinline friend P operator / (P a, double b) { return a /= b; }\n\tinline friend bool operator < (P a, P b) { return fabs(a.x - b.x) < eps ? a.y < b.y : a.x < b.x; }\n\tinline friend bool operator == (P a, P b) { return !(a < b) && !(b < a); }\n\tinline friend double operator * (P a, P b) { return a.x * b.x + a.y * b.y; }\n\tinline friend double operator % (P a, P b) { return a.x * b.y - a.y * b.x; }\n\tinline friend double operator ^ (P a, P b) { return a * b / a.l() / b.l(); }\n\tinline double a() { return atan2(y, x); }\n\tinline double l() { return sqrt(*this * *this); }\n\tinline void r(double o) { double s = sin(o), c = cos(o), X = x * c - y * s, Y = x * s + y * c; x = X, y = Y; }\n};\n\nstruct L {\n\tP a, b;\n\tdouble c;\n\tinline L() {}\n\tinline L(P a, P b) : a(a), b(b) { c = b.a(); }\n\tinline friend P operator * (L a, L b) { return a.a + a.b * (b.b % (a.a - b.a) / (a.b % b.b)); }\n\tinline friend double operator / (L a, P b) { return fabs(a.b % (b - a.a)) / a.b.l(); }\n\tinline friend bool operator < (L a, L b) { return fabs(a.c - b.c) < eps ? (b.a - a.a) % a.b < 0 : a.c < b.c; }\n};\n\ninline deque<P> half_plane(vector<L> l) {\n\tsort(l.begin(), l.end());\n\tdeque<P> r;\n\tdeque<L> q;\n\tfor (L o : l) {\n\t\twhile (r.size() && (r.back() - o.a) % o.b > 0)\n\t\t\tq.pop_back(), r.pop_back();\n\t\twhile (r.size() && (r.front() - o.a) % o.b > 0)\n\t\t\tq.pop_front(), r.pop_front();\n\t\tif (q.size() && fabs(o.b % q.back().b) < eps) {\n\t\t\tif (fabs(o.b.a() - q.back().b.a()) > eps)\n\t\t\t\treturn r.clear(), r;\n\t\t\tq.pop_back();\n\t\t\tif (r.size()) r.pop_back();\n\t\t}\n\t\tif (q.size()) r.pb(q.back() * o);\n\t\tq.pb(o);\n\t}\n\twhile (r.size() && (r.back() - q.front().a) % q.front().b > 0)\n\t\tq.pop_back(), r.pop_back();\n\tif (q.size() < 3u) r.clear();\n\telse r.pb(q.front() * q.back());\n\treturn r;\n}\n\nint n;\nvector<L> l, q; \nP p1, p2, ans1, ans2;\n\ninline bool pd(int i, int j, double r, P& t) {\n\tvector<L> s = q;\n\tfor (int k = i; k <= j; k++) {\n\t\tL o = l[k];\n\t\tP p = o.b;\n\t\tp.r(PI / 2);\n\t\tp *= r / p.l();\n\t\to.a += p, o.b *= -1, o.c = o.b.a();\n\t\ts.pb(o);\n\t}\n\tdeque<P> p = half_plane(s);\n\tif (!p.size()) return 0;\n\treturn t = p.back(), 1;\n}\n\ninline bool pd(double r) {\n\tfor (int i = 0, j = 0; i < n; i++) {\n\t\twhile (j < i + n - 2 && pd(i, j, r, p1)) ++j;\n\t\tif (pd(j, i + n - 1, r, p2)) return 1;\n\t}\n\treturn 0;\n}\n\nint main() {\n\trd(n);\n\tvector<P> p;\n\tfor (int i = 1, x, y; i <= n; i++) rd(x), rd(y), p.pb(P(x, y));\n\tp.pb(p[0]);\n\tfor (int i = 0; i < n; i++) l.pb(L(p[i], p[i+1] - p[i]));\n\tp.pop_back(), q = l;\n\tfor (int i = 0; i < n; i++) l.pb(l[i]);\n\tdouble l = 0, r = 1e5;\n\twhile (r - l > eps) {\n\t\tdouble mid = (l + r) / 2;\n\t\tif (pd(mid)) r = mid, ans1 = p1, ans2 = p2;\n\t\telse l = mid;\n\t}\n\tprintf(\"%.10f\\n\", r);\n\tprintf(\"%.10f %.10f\\n\", ans1.x, ans1.y);\n\tprintf(\"%.10f %.10f\\n\", ans2.x, ans2.y);\n\treturn 0;\n}\n```",
        "postTime": 1583849094,
        "uid": 100544,
        "name": "xht",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF696F \u3010...Dary!\u3011"
    }
]