[
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.org/problemnew/show/CF845C)\n\n\u4e4b\u524d\u6709dalao\u53d1\u4e86\u4ee3\u7801\u5dee\u4e0d\u591a\u7684\uff0c\u7136\u800c\u4e2a\u4eba\u611f\u89c9\u8bb2\u5f97\u4e0d\u591f\u6e05\u695a\uff0c\u4e8e\u662f\u6765\u4e00\u53d1\u4fa7\u91cd\u5206\u6790\u9898\u76ee\u7684\uff0c\u4ee3\u7801\u91cc\u4e5f\u52a0\u4e86\u4e00\u4e9b\u6ce8\u610f\u4e8b\u9879\n\n#### \u4e3b\u8981\u601d\u60f3\uff1a\u6a21\u62df\uff08\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u4e4b\u524d\u7684dalao\u5199\u7684\u662f\u8d2a\u5fc3\uff09\n\n\u5927\u81f4\u601d\u8def\uff1a\n\n1\u3001\u56e0\u4e3a\u53ea\u6709\u4e24\u4e2a\u7535\u89c6\uff0c\u76f4\u63a5\u7528\u53d8\u91cf\u6bd4\u8f83\u65b9\u4fbf\uff0c\u6211\u4eec\u5c31\u5f00\u4e24\u4e2a\u53d8\u91cf\u4ee3\u8868\u7535\u89c6\uff08\u5982\u679c\u7535\u89c6\u6570\u91cf\u6bd4\u8f83\u591a\uff0c\u4e00\u822c\u5c31\u7528\u6570\u7ec4\u5b58\u50a8\uff09\uff0c\u6a21\u62df\u4e24\u4e2a\u7535\u89c6\u6536\u770b\u8282\u76ee\u7684\u8fc7\u7a0b\n\n2\u3001\u6bcf\u4e2a\u8282\u76ee\u80fd\u4e0d\u80fd\u88ab\u6536\u770b\uff0c\u53d6\u51b3\u4e8e**\u5b83\u5f00\u59cb\u64ad\u653e\u65f6\u6709\u6ca1\u6709\u7535\u89c6\u53ef\u4ee5\u7acb\u5373\u6536\u770b\u5b83**\uff0c\u53ea\u9700\u8981\u8bb0\u5f55\u6bcf\u4e2a\u7535\u89c6\u4ec0\u4e48\u65f6\u5019\u770b\u5b8c\u4e4b\u524d\u7684\u8282\u76ee\uff0c\u5373\u8be5\u7535\u89c6\u53ef\u4ee5\u5f00\u59cb\u6536\u770b\u4e0b\u4e00\u4e2a\u8282\u76ee\u7684\u65f6\u95f4\n\n3\u3001\u6839\u636e\u751f\u6d3b\u7ecf\u9a8c\uff0c\u6211\u4eec\u770b\u8282\u76ee\u5355\u4f1a\u6309\u7167\u65f6\u95f4\u4ece\u524d\u5f80\u540e\u770b\uff0c\u7136\u800c\u9898\u9762\u6ca1\u8bf4\u4ece\u5c0f\u5230\u5927\u8f93\u5165\uff0c\u4e00\u822c\u4e0d\u4f1a\u8fd9\u4e48\u597d\u5fc3\u6309\u65f6\u95f4\u987a\u5e8f\u7ed9\u51fa\u6570\u636e\uff0c\u8fd8\u9700\u8981**\u5bf9\u8f93\u5165\u6570\u636e\u8fdb\u884c\u6392\u5e8f**\uff0c\u75312\u53ef\u77e5\u6309**\u5f00\u59cb\u65f6\u95f4\u4ece\u65e9\u5230\u665a**\uff08\u5373\u4ece\u5c0f\u5230\u5927\uff09\u66f4\u65b9\u4fbf\u89e3\u9898\uff0c\u4e3a\u4e86\u9632\u6b62\u540c\u65f6\u5f00\u59cb\u7684\u7279\u6b8a\u60c5\u51b5\uff0c\u52a0\u5165\u7279\u5224\uff0c\u5982\u679c\u540c\u65f6\u5f00\u59cb\u5c31\u6309\u7ed3\u675f\u65f6\u95f4\uff0c\u56e0\u4e3a**\u7ed3\u675f\u65f6\u95f4\u5bf9\u7ed3\u679c\u6ca1\u6709\u5f71\u54cd**\uff0c\u8fd9\u91cc\u53ef\u4ee5\u968f\u610f\u9009\u53d6\u6392\u5e8f\u65b9\u5f0f\uff0c\u5982\u679c\u90fd\u76f8\u540c\uff0c\u540c\u6837\u4e0d\u5f71\u54cd\u7ed3\u679c\n\n4\u3001\u5982\u679c\u67d0\u4e2a\u8282\u76ee\u7684\u5f00\u59cb\u65f6\u95f4\u65e9\u4e8e\u4e24\u4e2a\u7535\u89c6\u7684\u7a7a\u95f2\u65f6\u95f4\uff0c\u90a3\u4e48\u5b83\u5f00\u59cb\u7684\u65f6\u5019\u4e24\u4e2a\u7535\u89c6\u90fd\u5728\u6536\u770b\u5176\u4ed6\u8282\u76ee\uff0c\u8fd9\u4e2a\u8282\u76ee\u5c31**\u65e0\u6cd5\u88ab\u6536\u770b**\uff0c\u7531\u4e8e\u9898\u76ee\u4e0d\u8981\u6c42\u65e0\u6cd5\u88ab\u6536\u770b\u7684\u8282\u76ee\u6570\u91cf\uff0c\u540e\u9762\u7684\u8282\u76ee\u80fd\u5426\u88ab\u6536\u770b\u5df2\u7ecf\u5bf9\u7ed3\u679c\u65e0\u5f71\u54cd\uff0c\u4e3a\u4e86\u51cf\u5c11\u8fd0\u884c\u65f6\u95f4\u53ef\u4ee5\u76f4\u63a5\u7ed3\u675f\u7a0b\u5e8f\n\n5\u3001\u5982\u679c\u67d0\u4e2a\u8282\u76ee\u7684\u5f00\u59cb\u65f6\u95f4\u665a\u4e8e\u67d0\u4e2a\u7535\u89c6\u7684\u7a7a\u95f2\u65f6\u95f4\uff0c\u90a3\u4e48\u5b83**\u53ef\u4ee5\u88ab\u8fd9\u4e2a\u7535\u89c6\u6536\u770b**\uff0c\u66f4\u65b0\u76f8\u5e94\u53d8\u91cf\u5b58\u50a8\u7684\u503c\u5373\u53ef\n\n6\u3001\u56e0\u4e3a\u4e4b\u524d\u7684\u6392\u5e8f\u65b9\u6cd5\uff0c\u540e\u9762\u7684\u8282\u76ee\u5f00\u59cb\u65f6\u95f4\u90fd\u4e0d\u4f1a\u65e9\u4e8e\u4e4b\u524d\u7684\uff0c\u5982\u679c\u8282\u76eeA\u5f00\u59cb\u65f6\u95f4\u65e9\u4e8e\u8282\u76eeB\uff0c\u7528\u7535\u89c61\u6536\u770bA\u540e\u7535\u89c61\u548c\u7535\u89c62\u90fd\u4e0d\u80fd\u6536\u770bB\uff0c\u90a3\u4e48\u75281\u6536\u770bB\u4f1a\u5bfc\u81f41\u548c2\u90fd\u4e0d\u80fd\u6536\u770bA\uff0c\u6240\u4ee5**\u7528\u54ea\u4e2a\u7535\u89c6\u6536\u770b\u4e4b\u524d\u7684\u8282\u76ee\u4e0d\u4f1a\u5f71\u54cd\u7ed3\u679c**\n\nAC\u4ee3\u7801\uff1a\n\n```cpp\n#include<cmath> \n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n\nint n,tv1,tv2;//\u5927\u4e8etv1,tv2\u7684\u8282\u76ee\u53ef\u4ee5\u88ab\u6536\u770b \nstruct dat{\n    int l,r;\n};\ndat pros[200010];//program,\u7535\u89c6\u8282\u76ee \n\nbool cmp(dat a,dat b){\n    if(a.l!=b.l) return a.l<b.l;\n    return a.r<b.r;//\u6ce8\u610f\u7279\u6b8a\u60c5\u51b5 \n}\n\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;++i){\n        scanf(\"%d %d\",&pros[i].l,&pros[i].r);\n    }\n    sort(pros+1,pros+1+n,cmp);//\u6ce8\u610f\u8f93\u5165\u4e71\u5e8f \n    tv1=tv2=-1;//\u5f00\u59cb\u65f6\u95f4\u53ef\u80fd\u662f0\uff0c\u6240\u4ee5\u521d\u59cb\u7a7a\u95f2\u65f6\u95f4\u4ece-1\u8ba1\u7b97 \n    for(int i=1;i<=n;++i){\n        if(pros[i].l<=tv1&&pros[i].l<=tv2){\n            printf(\"NO\");//\u6ce8\u610f\u5927\u5199 \n            return 0;\n        }\n        if(pros[i].l>tv1) tv1=pros[i].r;\n        else if(pros[i].l>tv2) tv2=pros[i].r;\n    }\n    printf(\"YES\");//\u6ce8\u610f\u5927\u5199 \n    return 0;\n}\n```\n\n\u6b22\u8fce\u6765[\u6211\u7684blog](https://www.luogu.org/blog/4526-Au/#)\u770b\u770b",
        "postTime": 1562550377,
        "uid": 138812,
        "name": "4526_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF845C \u3010Two TVs\u3011"
    },
    {
        "content": "\u770b\u5230\u9898\u76ee\n\n\u54c7\uff01\u5dee\u5206\u88f8\u9898\uff01\n\n\u518d\u770b\u6570\u636e\u8303\u56f4$1e9$\uff0cemmmmmm\n\n$map$\u88f8\u9898\u3002\u3002\u3002\u3002\u3002\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <bitset>\n#include <map>\nusing namespace std;\nstruct FastIO\n{\n    inline FastIO& operator >> (int& x) {\n        x = 0; char f = 0, ch = getchar();\n        while(ch > '9' || ch < '0') f |= (ch == '-'), ch = getchar();\n        while(ch <= '9' && ch >= '0') x = x * 10 + ch - 48, ch = getchar();\n        return x = (f ? -x : x), *this;\n    }\n    inline FastIO& operator >> (long long& x) {\n        x = 0; char f = 0, ch = getchar();\n        while(ch > '9' || ch < '0') f |= (ch == '-'), ch = getchar();\n        while(ch <= '9' && ch >= '0') x = x * 10 + ch - 48, ch = getchar();\n        return x = (f ? -x : x), *this;\n    }\n    inline FastIO& operator >> (double& x)\n    {\n        x = 0; char f = 0, ch = getchar();\n        double d = 0.1;\n        while(ch > '9' || ch < '0') f |= (ch == '-'), ch = getchar();\n        while(ch <= '9' && ch >= '0') x=x * 10 + ch - 48, ch = getchar();\n        if(ch == '.')\n        {\n            ch = getchar();\n            while(ch <= '9' && ch >= '0') x += d * (ch ^ 48), d *= 0.1, ch = getchar();\n        }\n        return x = (f ? -x : x), *this;\n    }\n}rin;//\u5feb\u8bfb\u677f\u5b50\nmap <int, int> m;\nint main() {\n\tint n, l, r; rin >> n;\n\tfor(int i = 1 ; i <= n ; ++ i) {\n\t\trin >> l >> r;\n\t\t++ m[l];\n\t\t-- m[r + 1];//map\u5dee\u5206\uff0c\u6ce8\u610f\u8fb9\u754c\n\t}\n\tint now = 0;\n\tfor(map <int, int> :: iterator it = m.begin() ; it != m.end() ; ++ it) {\n\t\tnow += it -> second;//\u7d2f\u52a0\u5dee\u5206\u6570\u7ec4\n\t\tif(now > 2) {\n\t\t\tputs(\"NO\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tputs(\"YES\");\n\treturn 0;\n}\n```",
        "postTime": 1541126230,
        "uid": 44777,
        "name": "djh123",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF845C \u3010Two TVs\u3011"
    },
    {
        "content": "~~\u4e3a\u4ec0\u4e48\u770b\u5230\u697c\u4e0b\u7684\u805a\u805a\u4eec\u7528\u4e86\u6211\u4e0d\u4f1a\u7684\u7b97\u6cd5[\u53ef\u601c]~~\n\n\u8ba9\u672c\u849f\u84bb\u6765\u4e00\u53d1\u7b80\u4ecb\u6613\u61c2\u7684\u4ee3\u7801\n\n## \u63a5\u4e0b\u6765\u662f\u6b63\u9898\n\u770b\u5230\u8fd9\u9053\u9898,\u60f3\u5fc5\u5927\u5bb6\u7684\u7b2c\u4e00\u53cd\u5e94\u662f\u8d2a\u5fc3.\n\n\u56e0\u4e3a\u53ea\u6709\u4e24\u53f0\u7535\u89c6\u53ef\u4ee5\u540c\u65f6\u5de5\u4f5c,\u6240\u4ee5\u6211\u4eec\u7528now1,now2\u6765\u8868\u793a\u5f53\u524d\u7535\u89c6\u7684**\u6700\u65e9\u53ef\u4ee5\u6ca1\u4e8b\u5e72\u7684\u65f6\u95f4**.\n\n\u4f46\u662f\u8fd9\u6837\u7684\u8bdd,\u6211\u4eec\u8981\u4fdd\u8bc1\u8282\u76ee\u7684\u65f6\u95f4\u662f**\u6709\u5e8f**\u7684,\u8fd9\u6837\u624d\u80fd\u5904\u7406**\u6700\u65e9\u53ef\u4ee5\u6ca1\u4e8b\u5e72\u7684\u65f6\u95f4**\n\n~~\u7531\u4e8e\u6211\u7684\u8bed\u8a00\u80fd\u529b\u8fc7\u5dee~~\n\n\u60f3\u5fc5\u5927\u5bb6\u8fd8\u6ca1\u6709\u542c\u61c2\u6211\u8fd9\u4e00\u53e5\u8bdd\u7684\u610f\u601d...\n\n\u90a3\u6211\u4eec\u6839\u636e\u6837\u4f8b\u6765\u89e3\u91ca\u4e00\u4e0b\u6211\u8fd9\u53e5\u8bdd\u7684\u610f\u601d\n\n### (\u5047\u88c5\u662f\u6837\u4f8b1)\n3\n\n1 2\n\n2 3\n\n4 5\n\n~~\u6211\u4eec\u53d1\u73b0\u4e86\u8fd9\u4e2a\u6837\u4f8b\u662f\u6709\u5e8f\u7684,\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5148\u4e0d\u7528\u6392\u5e8f~~\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u7b2c\u4e00\u4e2a\u8282\u76ee\u662f1~2,\u7136\u540e\u8fd9\u4e2a\u65f6\u5019\u4e24\u53f0\u7535\u89c6\u90fd\u662f\u7a7a\u7740\u7684,\u6240\u4ee5\u6211\u4eec~~\u5047\u88c5~~\u73b0\u5728\u7b2c\u4e00\u53f0\u7535\u89c6\u5728\u653e\u7b2c\u4e00\u4e2a\u8282\u76ee,\u7136\u540e\u8fd9\u6837\u7684\u8bdd\u5c31\u53ef\u4ee5\u4e0d\u7528\u7ba1,\u6240\u4ee5**\u5f53\u524d\u7684now1=2**.\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u53d1\u73b0\u7b2c\u4e8c\u4e2a\u8282\u76ee\u662f2~3,\u7136\u540e\u7531\u4e8e\u9898\u610f,\u6211\u4eec\u4e0d\u80fd\u5728\u67d0\u4e00\u4e2a\u77ac\u95f4\u5207\u6362\u8282\u76ee,\u6240\u4ee5\u8bf4\u6211\u4eec\u9700\u8981\u4f7f\u7528\u7b2c\u4e8c\u53f0\u7535\u89c6,\u6240\u4ee5**\u5f53\u524d\u7684now2=3**.\n\n\u6700\u540e\u6211\u4eec\u53d1\u73b0\u7b2c\u4e09\u4e2a\u8282\u76ee\u662f4~5,\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0,\u7b2c\u4e00\u53f0\u7535\u89c6\u5df2\u7ecf\u7ed3\u675f\u7b2c\u4e00\u4e2a\u8282\u76ee\u64ad\u653e\u4e86(\u5373a[i].l>now1)!\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0,~~\u7528\u7b2c\u4e00\u53f0\u7535\u89c6\u5c31\u53ef\u4ee5\u4e86\u5bf9\u5427~~.\u6240\u4ee5\u6240\u4ee5**\u5f53\u524d\u7684now1=5**\n\n\u6700\u540e\u53d1\u73b0\u8fd9\u6574\u4e2a\u8fc7\u7a0b\u4e2d\u90fd\u6ca1\u6709\u51fa\u73b0\u4e0d\u5408\u6cd5\u7684\u65f6\u5019\n\n## \u7136\u540e\u6211\u4eec\u8fd9\u9053\u9898\u5c31\u505a\u5b8c\u5566!\n\n\u63a5\u4e0b\u6765\u662f\u4ee3\u7801(\u7801\u98ce\u6781\u4e11):\n```\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint n,now1,now2;\nstruct node\n{\n\tint l,r;\n}\na[200010];\nbool cmp(node x,node y)\n{\n\treturn x.l<y.l||(x.l==y.l&&x.r<y.r); //\u8fd9\u91cc\u7684\u8bdd\u5c31\u662f\u6211\u4eec\u7684\u6392\u5e8f,\u7531\u4e8e\u6211\u592a\u84bb\u4e0d\u559c\u6b22\u4e09\u76ee\u8fd0\u7b97\u7b26...\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor (int i=1;i<=n;i++)\n\t\tscanf(\"%d%d\",&a[i].l,&a[i].r);\n\tsort(a+1,a+n+1,cmp);\n\tnow1=-1;now2=-1; //\u5982\u679c\u521d\u59cb\u8d4b\u4e3a0\u7684\u8bdd,\u4f1a\u5495,\u672c\u4eba\u5c31\u5728\u8fd9\u91cc\u5495\u4e86\u4e00\u6b21(\u9003)\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tif (a[i].l>now1) //\u8fd9\u91cc\u7684\u8bdd\u662f\u7b2c\u4e00\u4e2a\u5224\u65ad,\u6bd5\u7adf\u6211\u4eec\u591a\u7528\u7528\u7b2c\u4e00\u53f0\u7535\u89c6\u662f\u6ca1\u6709\u95ee\u9898\u7684\u5bf9\u5427\n\t\t\tnow1=a[i].r;\n\t\telse\n\t\tif (a[i].l<=now1) \n\t\t\tif (a[i].l>now2)\n\t\t\t\tnow2=a[i].r;\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\"NO\\n\"); //\u8fd9\u91cc\u7684\u8bdd\u662f\u51fa\u73b0\u4e0d\u5408\u6cd5\u7684\u77ac\u95f4,\u6211\u4eec\u76f4\u63a5\u5224\u6389\u5c31\u53ef\u4ee5\u4e86\n\t\t\t\treturn 0;\n\t\t\t}\n\t}\n\tprintf(\"YES\\n\");\n\treturn 0;\n} \n```",
        "postTime": 1556109025,
        "uid": 22913,
        "name": "Dawn_Chase",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF845C \u3010Two TVs\u3011"
    },
    {
        "content": "\u770b\u5230\u8fd9\u9898\u6211\u7684\u7b2c\u4e00\u5370\u8c61\u662f\u8d2a\u5fc3 \u4f46\u662f\u6211~~\u89c9\u5f97\u592a\u590d\u6742\u592a\u70e6\u4e86~~\u4e0d\u4f1a\u5199 \u6240\u4ee5\u6211\u4eec\u8fd8\u662f\u5206\u6790\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u4e3a\u4ec0\u4e48\u4e0d\u53ef\u4ee5  \n\u753b\u51fa\u4e00\u6761\u6570\u8f74 \u7528\u4e24\u70b9\u4e4b\u95f4\u7684\u95f4\u9694\u4f5c\u4e3a\u65f6\u95f4\u70b9 \u6ce8\u610f\u9898\u76ee\u4e2d \n### \u5982\u679c\u4e00\u4e2a\u8282\u76ee\u7ed3\u675f\u7684\u77ac\u95f4\u53e6\u4e00\u4e2a\u8282\u76ee\u5f00\u59cb\u7684\u8bdd \u4ed6\u4e0d\u80fd\u5728\u540c\u4e00\u4e2a\u7535\u89c6\u4e0a\u770b\u8fd9\u4e24\u4e2a\u8282\u76ee  \n\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u6709\u4e24\u4e2a\u7535\u89c6\u8282\u76ee\u5206\u522b\u4e3a $l_1$ $r_1$ \u548c $l_2$ $r_2$ \u5f53 $r_1=l_2$ \u65f6 \u4e24\u4e2a\u7535\u89c6\u662f\u4e0d\u53ef\u4ee5\u5728\u4e00\u4e2a\u7535\u89c6\u4e0a\u770b\u7684 \n\n\n------------\n\u7b2c\u4e00\u4e2a\u6837\u4f8b\u7684\u56fe\n![](https://cdn.luogu.com.cn/upload/image_hosting/a9m5rvgr.png) \n\u8fd9\u4e2a\u662f\u53ef\u4ee5\u7684 \u8f93\u51fa $YES$  \n\n\n------------\n\n\u7b2c\u4e8c\u4e2a\u6837\u4f8b\u7684\u56fe \n![](https://cdn.luogu.com.cn/upload/image_hosting/l9glcrn2.png)  \n\u8fd9\u4e2a\u662f\u4e0d\u53ef\u4ee5\u7684 \u8f93\u51fa$NO$   \n~~\u53d1\u73b0\u4e86\u4ec0\u4e48$?$~~  \n### \u5982\u679c\u6709\u8d85\u8fc7$2$\u6761\u7ebf\u6bb5\u5305\u542b\u540c\u4e00\u4e2a\u65f6\u95f4\u70b9\u8fd9\u4e2a\u6570\u636e\u4e00\u5b9a\u662f$NO$\u5426\u5219$YES$  \n\u518d\u770b\u4e00\u773c\u6570\u636e  $l_i r_i$ \u975e\u5e38\u5927 \u6211\u4eec\u53ef\u4ee5\u7528\u79bb\u6563\u5316\u8ba1\u7b97\u6bcf\u4e00\u4e2a\u70b9\u7684\u91cd\u590d\u6b21\u6570 \u6216\u8005\u8bf4\u6700\u591a\u7684\u91cd\u590d\u6b21\u6570\u4e00\u5b9a\u4f1a\u51fa\u73b0 \u53ea\u8981\u4e0d\u8d85\u8fc7 $2$ \u5c31\u4e00\u5b9a\u53ef\u4ee5 \u5426\u5219\u4e0d\u53ef\u4ee5  \n\u7ed9\u51fa\u6211\u7528\u79bb\u6563\u5316\u5199\u7684\u4ee3\u7801 \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<string>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;\nstruct node\n{\n\tint p;\n\tint val;\n}a[400005];//\u79bb\u6563\u5316\u6570\u7ec4\u5f002*n \nint n,hp;\nint l,r;\nint tmp;\nbool ok;//\u6807\u5fd7 true:NO false:YES \ninline void read(int &x)//\u5feb\u8bfb \n{\n\tint f;char c;\n\tfor (f=1,c=getchar();c<'0'||c>'9';c=getchar()) if(c=='-') f=-1;\n\tfor (x=0;c<='9'&&c>='0';c=getchar()) x=x*10+(c&15);x*=f;\n}\ninline bool cmp(node x,node y)//\u6392\u5e8f \n{\n\tif(x.p!=y.p) return x.p<y.p;\n\telse return x.val<y.val;//\u79bb\u6563\u5316\u5148\u51cf\u540e\u52a0 \n}\nint main()\n{\n\tread(n);//\u8bfb\u5165 \n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tread(l);read(r);//\u518d\u8bfb\u5165 \n\t\ta[++hp].p=l;//\u6807\u51c6\u79bb\u6563\u5316*1 \n\t\ta[hp].val=1;\n\t\ta[++hp].p=r+1;\n\t\ta[hp].val=-1;\n\t}\n\tsort(a+1,a+hp+1,cmp);//\u6807\u51c6\u79bb\u6563\u5316*2\n\tfor(int i=1;i<=hp;i++)\n\t{\n\t\ttmp+=a[i].val;//\u6807\u51c6\u79bb\u6563\u5316*3 \n\t\tif(tmp>2)//\u5982\u679c\u6700\u591a\u8d85\u8fc72 \u90a3\u4e48\u4e0d\u53ef\u4ee5 \u5982\u679c\u6700\u591a\u6ca1\u8d85\u8fc72 \u90a3\u4e48\u53ef\u4ee5 \n\t\t{\n\t\t\tok=true;//\u6253\u4e2a\u6807\u8bb0 \n\t\t\tbreak;//\u76f4\u63a5\u8df3\u51fa\u4e0d\u505a\u4e86 \n\t\t}\n\t}\n\tif(ok) puts(\"NO\");//\u6839\u636e\u6807\u8bb0\u8f93\u51fa \n\telse puts(\"YES\");\n\treturn 0;\n}\n\n\n```\n",
        "postTime": 1582283979,
        "uid": 219198,
        "name": "Minecraft\u4e07\u5c81",
        "ccfLevel": 6,
        "title": "CF845C Two TVs"
    },
    {
        "content": "~~\u667a\u5546\u4e0d\u591f\u7ebf\u6bb5\u6811\u6765\u51d1~~\n\n\u867d\u7136\u662f\u4e00\u4e2a\u5dee\u5206\u7684\u88f8\u9898\uff0c\u4f46\u662f\u7ebf\u6bb5\u6811\u4e5f\u662f\u53ef\u4ee5\u8fc7\u7684\u3002\n\n\u539f\u6765\u9898\u89e3\u6709\u7bc7\u52a8\u6001\u5f00\u70b9\u7684\u7ebf\u6bb5\u6811\uff0c\u4e0d\u8fc7\u8fd9\u9053\u9898\u76f4\u63a5\u79bb\u6563\u5316\u7136\u540e\u7528\u7ebf\u6bb5\u6811\u505a\u533a\u95f4\u4fee\u6539\u5373\u53ef\u3002\n\n\u5bf9\u4e86\uff0cstl\u662f\u4e2a\u597d\u4e1c\u897f\uff0c\u7528\u5bf9\u4e86\u4ee3\u7801\u77ed50\u884c\u4e0d\u662f\u95ee\u9898\u3002\n\u53e6\u5916\u8bf4\u4e00\u4e0b\uff0c\u53bb\u91cd\u540e\u4e0d\u662f\u5728$[1,n]$\u4e2d\u6392\uff0c\u800c\u662f\u5bf9\u95ee\u9898\u7684\u4e0d\u540c\u533a\u95f4\u7aef\u70b9\u6392\u5e8f\u3002\n\n\n```cpp\n#include<touwenjian.h>// \u7531\u4e8e\u6bcf\u6b21\u90fd\u5361\u6211\u5934\u6587\u4ef6\uff0c\u6240\u4ee5\u6211\u4e0d\u6253\u4e86\n\n#define lson i<<1,l,mid\n#define rson i<<1|1,mid+1,r\n#define ls i<<1\n#define rs i<<1|1\n\nusing namespace std;\nint n,m;\n\nstruct tree{\n\tint mmx,add;\n}t[2001000];\n\nstruct que{\n\tint l,r;\n}q[200200];\nint bj[400400],bt=0;\n\nstruct orztree{\n\t//\u7ebf\u6bb5\u6811\u6ca1\u6709\u4ec0\u4e48\u597d\u8bb2\u7684\uff0c\u7ed3\u6784\u4f53\u7f8e\u89c2\u5927\u65b9\n\tinline void pushup(int i)\n\t{\n\t\tt[i].mmx=max(t[ls].mmx,t[rs].mmx);\n\t\treturn ;\n\t}\n\t\n\tinline void pushdown(int i)\n\t{\n\t\tt[ls].add+=t[i].add;\n\t\tt[rs].add+=t[i].add;\n\t\tt[ls].mmx+=t[i].add;\n\t\tt[rs].mmx+=t[i].add;\n\t\tt[i].add=0;\n\t}\n\t\n\tvoid change_tree(int i,int l,int r,int x,int y,int tar)\n\t{\n\t\tif(l>=x&&r<=y)\n\t\t{\n\t\t\tt[i].add+=tar;\n\t\t\tt[i].mmx+=tar;\n\t\t\treturn ;\n\t\t}\n\t\tpushdown(i);\n\t\tint mid=(l+r)/2;\n\t\tif(x<=mid) change_tree(lson,x,y,tar);\n\t\tif(y>mid) change_tree(rson,x,y,tar);\n\t\tpushup(i);\n\t\treturn ;\n\t}\n}st;\n\nint main()\n{\n\tios::sync_with_stdio(false);\n\tregister int i,j;\n\tcin>>n;\n\tm=n;  //\u8fd9\u91cc\u539f\u6765\u4ee5\u4e3a\u662f\u8bfb\u5165n\uff0cm\uff0c\u7ed3\u679c\u770b\u4e86\u9898\u624d\u53d1\u73b0\u53ea\u6709m\n\tint t1,t2;\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tcin>>t1>>t2;\n\t\tbj[++bt]=t1;\n\t\tbj[++bt]=t2;\n\t\tq[i].l=t1;\n\t\tq[i].r=t2;\n\t}\n\tsort(bj+1,bj+bt+1);\n    //\u4e00\u5b9a\u8981\u6ce8\u610f-1\n\tbt=unique(bj+1,bj+bt+1)-bj-1;\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tint t1=lower_bound(bj+1,bj+bt+1,q[i].l)-bj;\n\t\tint t2=lower_bound(bj+1,bj+bt+1,q[i].r)-bj;\n\t\tst.change_tree(1,1,bt,t1,t2,1);\n\t}\n \t//t[1].mmx\u5373\u4e3a\u6574\u4e2a\u533a\u95f4\u540c\u65f6\u8981\u770b\u7684\u7535\u89c6\u7684\u6570\u91cf\u6700\u5927\u503c\n\tif(t[1].mmx>2) cout<<\"NO\";\n\telse cout<<\"YES\";\n\treturn 0;\n}\n```\n",
        "postTime": 1570091818,
        "uid": 38636,
        "name": "\u5bd2\u51b0\u5927\u5927",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF845C \u3010Two TVs\u3011"
    },
    {
        "content": "\u597d\u50cf\u662f\u7b2c\u4e00\u6b21\u5199\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\uff08\u6ed1\u7a3d\uff09\uff0c\u611f\u89c9\u901a\u8fc7\u8fd9\u9053\u9898\u6da8\u4e86\u59ff\u52bf\n\n~~\u6211\u662f\u4e2a\u4ec0\u4e48\u90fd\u4e0d\u4f1a\u7684\u849f\u84bb~~\n\n\u770b\u5230\u6570\u636e\u8303\u56f4\uff0c\u5c31\u60f3\u5230\u4e86**\u79bb\u6563\u5316\u533a\u95f4**\u6216\u8005**\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811**\uff0c**\u533a\u95f4\u52a01**\uff0c\u7136\u540e**\u533a\u95f4\u8be2\u95ee\u6700\u5927\u503c**\uff0c\u6bcf\u6b21\u4fee\u6539\u540e\u5224\u65ad**\u6700\u5927\u503c\u662f\u5426\u5927\u4e8e2**\uff0c\u56e0\u4e3a\u5c31\u53ea\u80fd\u7528\u4e24\u4e2a\u7535\u89c6\u3002\n\n\u8fd8\u6709\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u5e94\u8be5\u5f00\u591a\u5927\u7684\u6570\u7ec4\uff0c\u6c42\u6559\n\n\u5b8c\u7ed3\u6492\u82b1\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=210000;\nint n,root,opt,Max[N<<6],lson[N<<6],rson[N<<6],lazy[N<<6];\nvoid pushdown(int k,int l,int r){\n\tif (!lazy[k]) return;\n\tif (l!=r){\n\t\tif (!lson[k]) lson[k]=++opt;\n\t\tif (!rson[k]) rson[k]=++opt;\n\t\tlazy[lson[k]]+=lazy[k];\n\t\tlazy[rson[k]]+=lazy[k];\n\t\tMax[lson[k]]+=lazy[k];\n\t\tMax[rson[k]]+=lazy[k];\n\t}\n\tlazy[k]=0;\n}\nvoid insert(int &k,int l,int r,int L,int R){\n\tif (l>R||r<L) return;\n\tif (!k) k=++opt;\n\tif (l>=L&&r<=R) return (void) (Max[k]++,lazy[k]++);\n\tpushdown(k,l,r);\n\tint mid=l+r>>1;\n\tif (L<=mid) insert(lson[k],l,mid,L,R);\n\tif (R>mid) insert(rson[k],mid+1,r,L,R);\n\tMax[k]=max(Max[lson[k]],Max[rson[k]]);\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor (int i=1;i<=n;i++){\n\t\tint x,y; scanf(\"%d%d\",&x,&y);\n\t\tinsert(root,0,1000000000,x,y);\n\t\tif (Max[1]>2) return puts(\"NO\"),0;\n\t}\n\tputs(\"YES\");\n\treturn 0;\n}\n```",
        "postTime": 1542934852,
        "uid": 23090,
        "name": "SaoFish",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF845C \u3010Two TVs\u3011"
    }
]