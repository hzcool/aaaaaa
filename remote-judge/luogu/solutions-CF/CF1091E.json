[
    {
        "content": "\u4e00\u5f20\u56fe\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570\u603b\u548c\u662f\u5076\u6570\u2026\u2026\n\n\u7ecf\u5178\u95ee\u9898\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u7684\u5e8f\u5217$d$,\u95ee\u662f\u5426\u6709\u4e00\u4e2a\u7b80\u5355\u56fe\u4f7f\u5f97\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570\u6070\u597d\u4e3a\u8fd9\u4e2a\u5e8f\u5217\u3002\u53ef\u80fd\u65e0\u89e3\u3002\n\n\u9996\u5148\u5982\u679c$\\sum_{i=1}^nd_i$\u662f\u5947\u6570\u90a3\u5c31\u94c1\u5b9a\u65e0\u89e3\u4e86\uff0c\u4ee5\u4e0b\u9ed8\u8ba4\u4e0d\u4f1a\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u3002\n\nHavel-Hakimi \u7b97\u6cd5\n\n\u53ef\u4ee5\u8d2a\u5fc3\u7684\u6784\u9020\uff0c\u5c06\u6240\u6709\u70b9\u7684\u5ea6\u6570\u964d\u5e8f\u6392\u5e8f\uff0c\u7136\u540e\u6bcf\u6b21\u628a\u5ea6\u6570\u6700\u5927\u7684\u70b9$1$\u62ff\u51fa\u6765\uff0c\u5411\u5176\u4ed6\u5ea6\u6570\u6b21\u5927\u7684\u90a3\u4e9b\u70b9\u8fde\u8fb9\u3002\n\n\u5ea6\u6570\u5e8f\u5217\u5c31\u4f1a\u4ece$\\{d_1,d_2,d_3,d_4,...,d_n\\}$\u53d8\u5230$\\{d_2-1,d_3-1,...,d_{d_1+1}-1,d_{d_1+2},...,d_n\\}$\u3002\n\n\u53ef\u4ee5\u8bc1\u660e\u5982\u679c\u539f\u6765\u7684\u5ea6\u6570\u5e8f\u5217\u53ef\u7b80\u5355\u56fe\u5316\uff0c\u90a3\u4e48\u8d2a\u5fc3\u8fde\u8fb9\u540e\u7684\u5ea6\u6570\u5e8f\u5217\u4e5f\u53ef\u4ee5\u7b80\u5355\u56fe\u5316\uff0c\u5145\u5206\u4e14\u5fc5\u8981\u3002\n\nErd\u0151s\u2013Gallai \u5b9a\u7406\n\n\u5bf9\u4e8e\u975e\u9012\u589e\u5ea6\u6570\u5e8f\u5217$\\{d_1,d_2,\\dots,d_n\\}$\uff0c\u5982\u679c\u8fd9\u4e2a\u5e8f\u5217\u53ef\u7b80\u5355\u5316\u5f53\u4e14\u4ec5\u5f53\n$$\\forall 1\\le k\\le n,\\sum_{i=1}^kd_i\\le k(k-1)+\\sum_{i=k+1}^nmin(k,d_i)$$\n\n\u6211\u4e5f\u53ea\u77e5\u9053\u4e2a\u5fc5\u8981\u6027\uff1a\u53f3\u4fa7\u5c55\u793a\u7684\u5176\u5b9e\u662f\u524d$k$\u4e2a\u70b9\u8fde\u8fb9\u7684\u6570\u91cf\u4e0a\u754c\uff0c$k(k-1)$\u662f\u524d$k$\u4e2a\u70b9\u4e4b\u95f4\u8fde\u8fb9\u7684\u4e0a\u754c\uff0c\u540e\u4fa7\u7684$sigma$\u662f\u524d$k$\u4e2a\u70b9\u4e0e$n-k$\u4e2a\u70b9\u8fde\u8fb9\u7684\u4e0a\u754c\u3002\n\n\u597d\u50cf\u8fd8\u6709\u4e2a\u662f\u5426\u6709\u5411\u56fe\u5316\u7684Fulkerson\u2013Chen\u2013Anstee\u5b9a\u7406\u3002\u6211\u4e5f\u4e0d\u662f\u5f88\u61c2\u2026\u2026\n\n$(a_i,b_i)$\u8868\u793a\u7b2c$i$\u4e2a\u70b9\u7684\u51fa\u5ea6\u548c\u5165\u5ea6\uff0c\u5bf9\u4e8e\u4e00\u4e2a$a_i$\u975e\u9012\u589e\u7684\u8fd9\u4e2a\u5e8f\u5217\u9700\u8981\u6ee1\u8db3$\\sum_{i=1}^na_i=\\sum_{i=1}^nb_i$\uff0c\u4ee5\u53ca\n$$\\forall 1\\le k\\le n,\\sum_{i=1}^ka_i\\le \\sum_{i=1}^kmin(b_i,k-1)+\\sum_{i=k+1}^nmin(b_i,k)$$\n\n\n\u4f8b\u9898\uff1a\n\n[CF1091E New Year and the Acquaintance Estimation](https://www.luogu.org/problemnew/show/CF1091E)\n\n\u9996\u5148\u4ecb\u7ecd\u8fd9\u4e2a\u9898\u6211\u7684\u66b4\u529b\u505a\u6cd5\u2026\u2026\n\n\u7b2c\u4e00\u6b65\u5219\u662f\u60f3\u5230\u6240\u6709\u5ea6\u6570\u7684\u548c\u5e94\u8be5\u8981\u662f\u5076\u6570\u3002\n\n\u5224\u65ad\u52a0\u5165\u4e00\u4e2a\u6570\u540e\u8fd9\u4e2a\u5e8f\u5217\u8fd8\u80fd\u4e0d\u80fd\u7b80\u5355\u56fe\u5316\uff0c\u5c31\u5229\u7528\u4e0a\u9762\u90a3\u4e2aE\u5b9a\u7406\uff0c\u8fd9\u6837\u5bf9\u4e8e\u4e00\u4e2a\u5e8f\u5217\u6211\u4eec\u80fd$O(n)$\u5224\u65ad\u662f\u5426\u80fd\u6784\u6210\u4e00\u4e2a\u56fe\u3002\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u5c31\u80fd\u679a\u4e3e\u7b54\u6848\uff0c\u5728$O(n^2)$\u65f6\u95f4\u5185\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u4e86\u3002\n\n\u4f46\u6ce8\u610f\u5230\u6bcf\u6b21\u5411\u5e8f\u5217\u4e2d\u53ea\u6dfb\u52a0\u4e00\u4e2a\u6570\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u5bf9\u5e8f\u5217\u7684\u5f71\u54cd\u662f\u8f83\u5c0f\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u52a0\u5165\u4e00\u4e2a\u6570\u540e\u5e8f\u5217\u4f1a\u6709\u4ec0\u4e48\u53d8\u5316\uff0c\u5e76\u4e14\u6211\u4eec\u8ba1\u7b97\u7684\u5f0f\u5b50\u6709\u4ec0\u4e48\u53d8\u5316\u3002\n\n\u8bbe\u6211\u4eec\u5f53\u524d\u52a0\u5165\u7684\u4e00\u4e2a\u6570\u4e3a$x$\uff0c\u52a0\u5165$x$\u540e\u5e8f\u5217\u4e2d\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e$x$\u7684\u6570\u662f\u539f\u5e8f\u5217\u4e2d\u7684\u7b2c$i$\u5927\u7684\u6570\u3002\u6211\u4eec\u8981\u8ba1\u7b97\u6bcf\u4e00\u4e2a$1\\le k\\le n+1$\uff0c\u4e0a\u9762\u90a3\u4e2a\u5f0f\u5b50\u662f\u5426\u6210\u7acb\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5206\u60c5\u51b5\u8ba8\u8bba\u4e00\u4e0b\uff1a\u5bf9\u4e8e$k\\le i$\uff0c\u5bf9\u4e8e\u8fd9\u4e00\u90e8\u5206\u6211\u4eec\u8ba1\u7b97\u7684\u5f0f\u5b50\u662f\n$$\\sum_{i=1}^ka_i\\le min(x,k)+k(k-1)+\\sum_{i=k+1}^nmin(a_i,k)$$\n\n\u53d1\u73b0\u5f0f\u5b50\u7684\u53d8\u5316\u5c31\u53ea\u6709\u4e00\u4e2a$min$\u800c\u5df2\uff0c\u6ce8\u610f\u5230$k$\u662f\u5355\u8c03\u7684\uff0c\u6240\u4ee5\u5bf9\u4e8e$k\\le i$\u90e8\u5206\u7684\u8ba1\u7b97\u53c8\u88ab\u5206\u6210\u4e86\u4e24\u90e8\u5206\uff1a\n\n$1\\le k\\le x$\u5f0f\u5b50\u662f$k+k(k-1)+\\sum_{i=k+1}^nmin(a_i,k)-\\sum_{i=1}^ka_i$\u662f\u5426$\\ge 0$\uff0c\u53d1\u73b0\u8fd9\u4e2a\u5f0f\u5b50\u4e0e$x$\u65e0\u5173\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u8fd9$n$\u4e2a\u5f0f\u5b50\u7684\u503c\uff0c\u4ee5\u53ca\u524d\u7f00\u6700\u5c0f\u503c\u3002\n\n$x\\le k\\le i$\u5f0f\u5b50\u662f$x+k(k-1)+\\sum_{i=k+1}^nmin(a_i,k)-\\sum_{i=1}^ka_i$\u662f\u5426$\\ge 0$\uff0c\u6211\u4eec\u5904\u7406\u51fa\u9664\u53bb$x$\u90e8\u5206\u7684\u5f0f\u5b50\u7684\u503c\uff0c\u6211\u4eec\u533a\u95f4\u67e5\u4e00\u4e2a\u6700\u5c0f\u503c\u5c31\u884c\u4e86\u3002\n\n\u63a5\u4e0b\u6765\u662f$i<k\\le n+1$\uff0c\u4e5f\u662f\u9884\u5904\u7406\u5f0f\u5b50\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u4e00\u90e8\u5206\u7684\u9884\u5904\u7406\u6ce8\u610f\u63d2\u5165\u7684\u6570\u7684\u4f4d\u7f6e\u662f$i<k$\u7684\uff0c\u5c0f\u7ec6\u8282\u6ce8\u610f\u4e00\u4e0b\uff0c\u8fd9\u4e00\u90e8\u5206\u4e5f\u662f\u67e5\u4e00\u4e2a\u540e\u7f00\u6700\u5c0f\u503c\u3002\n\n\u90a3\u5c31\u6ca1\u4e86\uff0c\u5177\u4f53\u7ec6\u8282\u770b\u4ee3\u7801\u5427\u3002\u6211\u7684\u590d\u6742\u5ea6\u74f6\u9888\u662f\u4e00\u4e2a\u533a\u95f4RMQ\uff0c\u6700\u540e\u7684\u590d\u6742\u5ea6\u662f$O(NlogN)$\uff0c\u4f46\u662f\u6ce8\u610f\u5230\u8be2\u95ee\u7684\u533a\u95f4\u662f$(x,i]$\uff0c\u5e94\u8be5\u53ef\u4ee5\u4ece\u5927\u5230\u5c0f\u679a\u4e3e$x$\uff0c\u8fd9\u6837\u533a\u95f4\u5c31\u5355\u8c03\u4e86\uff0c\u4e5f\u5c31\u80fd$O(N)$\u505a\u4e86\u2026\u2026\n\n\u53e6\u5916\u9898\u89e3\u7684\u505a\u6cd5\u662f\u89c2\u5bdf\u5230\u5408\u6cd5\u7684\u5ea6\u6570\u7b54\u6848\u4e00\u5b9a\u662f\u4e00\u4e2a\u533a\u95f4\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u8fd9\u4e2a\u7b54\u6848\u533a\u95f4\u7684\u4e24\u4e2a\u7aef\u70b9\uff0c\u6bcf\u6b21\u53bbcheck\u7b54\u6848\u5408\u4e0d\u5408\u6cd5\uff0c\u8fd9\u6837\u7684\u8bdd\u53ef\u4ee5\u5f88\u7b80\u5355\u7684\u5229\u7528\u5355\u6b21$NlogN$\u7684check\uff08\u5c31\u662f\u66b4\u529b\u7528\u5b9a\u7406\u53bb\u7b97\uff09\uff0c\u505a\u5230$O(Nlog^2N)$\uff0c\u8fd9\u4e2a\u505a\u6cd5\u597d\u5199\u7ec6\u8282\u5c11\uff0c\u573a\u4e0a\u5404\u4f4d\u5de8\u4f6c\u5927\u591a\u90fd\u662f\u8fd9\u4e48\u505a\u7684\u3002\n\n\n\n```\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n#define N 520230\n#define ll long long\n#define ls i<<1\n#define rs i<<1|1\n#define INF 0x3f3f3f3f3f3f3f3f\nint a[N],ans[N],cc;ll sum[N],suf[N],lml[N],lmr[N],lmk[N],tree[N<<2];\nbool cmp(int a,int b) {return a>b;}\nvoid build(int i,int l,int r)\n{\n\tif (l==r) {tree[i]=lml[l];return;}\n\tint mid=l+r>>1;\n\tbuild(ls,l,mid);build(rs,mid+1,r);\n\ttree[i]=min(tree[ls],tree[rs]);\n}\nll query(int i,int l,int r,int L,int R)\n{\n\tif (L<=l&&r<=R) return tree[i];\n\tint mid=l+r>>1;\n\tif (R<=mid) return query(ls,l,mid,L,R);\n\telse if (L>mid) return query(rs,mid+1,r,L,R);\n\treturn min(query(ls,l,mid,L,R),query(rs,mid+1,r,L,R));\n}\ninline int read(){\n\tint n=0;char a;bool z=false;\n\twhile(a=getchar())\n\t{\n\t\tif (a>'9'||a<'0')\n\t\t\tif (z) break;\n\t\t\telse continue;\n\t\tif (!z) z=true;\n\t\tn=(n<<1)+(n<<3)+(a^48);\n\t}\n\treturn n;\n}\nint main()\n{\n\tint n=read();bool Z=false;\n\tfor (int i=1;i<=n;++i) a[i]=read();\n\tsort(a+1,a+1+n,cmp);\n\tfor (int i=n;i;--i) suf[i]=suf[i+1]+a[i];\n\tfor (int i=1;i<=n;++i) sum[i]=sum[i-1]+a[i];\n\tfor (int i=1,j=n;i<=n;++i)\n\t{\n\t\twhile(j&&a[j]<i) --j;\n\t\tif (j>i) lml[i]=1ll*(j-1)*i+suf[j+1]-sum[i];\n\t\telse lml[i]=suf[i+1]+1ll*i*(i-1)-sum[i];\n\t\tlmk[i]=lml[i]+i;\n\t}\n\tfor (int i=0,j=n;i<=n;++i)\n\t{\n\t\twhile(j&&a[j]<i+1) --j;\n\t\tif (j>i) lmr[i]=1ll*j*(i+1)-sum[i]+suf[j+1];\n\t\telse lmr[i]=suf[i+1]+1ll*i*(i+1)-sum[i];\n\t}\n\tbuild(1,1,n);\n\tlmk[0]=INF;for (int i=1;i<=n;++i) lmk[i]=min(lmk[i-1],lmk[i]);\n\tlmr[n+1]=INF;for (int i=n;i>=0;--i) lmr[i]=min(lmr[i],lmr[i+1]);\n\tfor (int x=sum[n]&1,i=n;x<=n;++++x)\n\t{\n\t\twhile(i&&x>a[i]) --i;Z=true;\n\t\tif (lmk[min(i,x)]<0) continue;\n\t\tif (x<i&&query(1,1,n,x+1,i)<-x) Z=false;\n\t\tif (!Z) continue;\n\t\tif (lmr[i]<x) Z=false;\n\t\tif (Z) ans[++cc]=x;\n\t}\n\tif (!cc) return !printf(\"-1\");\n\tfor (int i=1;i<=cc;++i) printf(\"%d \",ans[i]);\n\treturn 0;\n}\n\n//by qlwpc\n```cpp",
        "postTime": 1552346882,
        "uid": 45876,
        "name": "\u51c4\u9b49",
        "ccfLevel": 9,
        "title": "\u56fe\u7684\u5ea6\u6570\u5e8f\u5217\u76f8\u5173\u5b9a\u7406"
    },
    {
        "content": "$Description$\n\n\u7ed9\u5b9a\u5ea6\u6570\u5e8f\u5217$d_1,...,d_n$\uff0c\u6c42$d_{n+1}$\u7b49\u4e8e\u591a\u5c11\u65f6\uff0c\u5ea6\u6570\u5e8f\u5217$d_1,d_2,...,d_{n+1}$\u53ef\u7b80\u5355\u56fe\u5316\u3002\u8f93\u51fa\u6240\u6709\u53ef\u80fd\u7684$d_{n+1}$\u3002\n\n\u53ef\u7b80\u5355\u56fe\u5316\u662f\u6307\uff0c\u5b58\u5728\u4e00\u5f20\u7b80\u5355\u65e0\u5411\u56fe\uff0c\u4f7f\u5f97\u8be5\u56fe\u70b9\u7684\u5ea6\u6570\u53ef\u4ee5\u4e0e\u8be5\u5ea6\u6570\u5e8f\u5217\u4e00\u4e00\u5bf9\u5e94\u3002\n\n$n\\leq 5\\times 10^5$\u3002\n\n$Solution$\n\n~~\u8bdd\u8bf4\u53ea\u8981\u770b\u51fa\u662f[Erd\u0151s\u2013Gallai\u5b9a\u7406](https://www.cnblogs.com/SovietPower/p/9757651.html#erd%C5%91sgallai%E5%AE%9A%E7%90%86)\u7136\u540e\u60f3\u5230\u4e8c\u5206\uff0c\u5c31\u662f\u88f8\u9898\u4e48...\uff1f~~\n\n\u8003\u8651\u679a\u4e3e$d_{n+1}$\u3002\u7ed9\u5b9a\u4e00\u4e2a\u5ea6\u6570\u5e8f\u5217\u5224\u65ad\u5176\u662f\u5426\u5408\u6cd5\u53ef\u4ee5\u7528[Erd\u0151s\u2013Gallai\u5b9a\u7406](https://www.cnblogs.com/SovietPower/p/9757651.html#erd%C5%91sgallai%E5%AE%9A%E7%90%86)\uff0c\u590d\u6742\u5ea6$O(n)$\u3002\u6240\u4ee5\u73b0\u5728\u7684\u590d\u6742\u5ea6\u662f$O(n^2)$\u7684\u3002\n\n\u6839\u636e\u6837\u4f8b\u6211\u4eec\u8fd8\u53ef\u4ee5\u731c\u60f3\u5e76\u9a8c\u8bc1\uff1a\n\n1. \u7531\u63e1\u624b\u5b9a\u7406\uff08\u5c31\u662f\u65e0\u5411\u56fe\u4e2d\u6240\u6709\u70b9\u7684\u5ea6\u6570\u4e4b\u548c\u4e3a\u5076\u6570\uff09\uff0c$d_{n+1}$\u7684\u5947\u5076\u6027\u53ef\u4ee5\u786e\u5b9a\u3002\n\n2. \u6ee1\u8db3\u6761\u4ef6\u7684$d_{n+1}$\u4e00\u5b9a\u662f\u4e00\u6bb5\u8fde\u7eed\u7684\u533a\u95f4\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u4e8c\u5206\u4e86\u3002\n\n\u4e8c\u5206\u8981\u5f97\u5230\u7684\u662f\u67d0\u6bb5\u533a\u95f4\uff0c\u5206\u522b\u4e8c\u5206\u5de6\u53f3\u7aef\u70b9\uff0c\u4f46\u8fd8\u9700\u8981\u8ba8\u8bba\u4e00\u4e0b\u3002\n\n\u4ee4$n=n+1$\uff0c\u5199\u4e00\u4e0bErd\u0151s\u2013Gallai\u5b9a\u7406\u7684\u5f0f\u5b50\uff1a$$\\sum_{i=1}^kd_i\\leq k(k-1)+\\sum_{i=k+1}^n\\min(d_i,k)$$\n\n\u4e8c\u5206$n$\u7684\u5ea6\u6570$d_n=mid$\uff0c\u7136\u540e$sort$\u4e00\u4e0b\u5ea6\u6570\u5e8f\u5217\u3002\n\n\u4ece\u5c0f\u5230\u5927\u679a\u4e3e$k$\u7684\u65f6\u5019\uff0c\u8bb0$left$\u4e3a\u5de6\u5f0f\u7684\u503c\uff0c$right$\u4e3a\u53f3\u5f0f\u7684\u503c\u3002\u82e5\u4e00\u76f4\u6709$left\\leq right$\uff0c\u663e\u7136$mid$\u53ef\u884c\u3002\n\n\u5426\u5219\u82e5$left>right$\uff0c\u6211\u4eec\u8981\u4e48\u51cf\u5c0f$left$\uff0c\u8981\u4e48\u589e\u5927$right$\u3002\u800c\u552f\u4e00\u80fd\u6539\u53d8\u7684\u5c31\u662f$n$\u7684\u5ea6\u6570$mid$\u3002\n\n\u6240\u4ee5\u73b0\u5728\u82e5$mid\\geq d_k$\uff08\u5f71\u54cd\u5de6\u5f0f\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u51cf\u5c0f$mid$\u4f7f\u5f97\u5e8f\u5217\u5408\u6cd5\uff0c\u4e5f\u5c31\u662f\u7b54\u6848\u504f\u5927\u3002\n\n\u82e5$mid<d_k$\uff08\u5f71\u54cd\u53f3\u5f0f\uff09\uff0c\u53ef\u4ee5\u589e\u5927$mid$\uff0c\u4e5f\u5c31\u662f\u7b54\u6848\u504f\u5c0f\u3002\n\n\u53ef\u4ee5\u786e\u5b9a\u7b54\u6848\u504f\u5927\u504f\u5c0f\uff0c\u5c31\u53ef\u4ee5\u4e8c\u5206\u51fa\u533a\u95f4\u4e86\u3002\u590d\u6742\u5ea6$O(n\\log n)$\u3002\n\n[\u7ecf\u8fc7\u4e00\u4e9b\u9884\u5904\u7406\u4e5f\u53ef\u4ee5\u505a\u5230$O(n)$](http://codeforces.com/contest/1091/status/E?order=BY_CONSUMED_TIME_ASC)\u3002\n\n\u4e00\u4efd$O(n\\log n)$\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <cctype>\n#include <algorithm>\n#define gc() getchar()\ntypedef long long LL;\nconst int N=5e5+5;\n\nint A[N];\n\ninline int read()\n{\n\tint now=0;register char c=gc();\n\tfor(;!isdigit(c);c=gc());\n\tfor(;isdigit(c);now=now*10+c-'0',c=gc());\n\treturn now;\n}\nint Check(const int n,const int mid)\n{\n\tstatic int d[N];\n\tstatic LL sum[N];\n\tA[n]=-1;\n\tfor(int i=1,p=1; i<=n; ++i) d[i]=(p==i&&mid>A[p])?mid:A[p++], sum[i]=sum[i-1]+d[i];\n\tLL vl,vr;\n\tfor(int k=1,p=n; k<=n; ++k)\n\t{\n\t\twhile(p>k && d[p]<k) --p;\n\t\tvl=sum[k], vr=1ll*k*(k-1)+1ll*(std::max(p,k)-k)*k+sum[n]-sum[std::max(p,k)];\n\t\tif(vl>vr) return mid<d[k]?-1:1;\n\t}\n\treturn 0\uff1b\n}\n\nint main()\n{\n\tint n=read(),parity=0;\n\tfor(int i=1; i<=n; ++i) parity^=(A[i]=read())&1;\n\tstd::sort(A+1,A+1+n,std::greater<int>());\n\n\tint l=0,r=n-parity>>1,L=0,R=-1,mid;\n\twhile(l<=r)\n\t\tif(Check(n+1,(mid=l+r>>1)*2+parity)>=0) L=mid, r=mid-1;\n\t\telse l=mid+1;\n\tl=0,r=n-parity>>1;\n\twhile(l<=r)\n\t\tif(Check(n+1,(mid=l+r>>1)*2+parity)<=0) R=mid, l=mid+1;\n\t\telse r=mid-1;\n\n\tif(L>R) puts(\"-1\");\n\telse for(int i=L; i<=R; ++i) printf(\"%d \",i*2+parity);\n\n\treturn 0;\n}\n```",
        "postTime": 1546421035,
        "uid": 39887,
        "name": "SovietPower\u2728",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1091E \u3010New Year and the Acquaintance Estimation\u3011"
    },
    {
        "content": "Codeforces 1091E New Year and the Acquaintance Estimation\n\n\u3010\u9898\u610f\u3011\n\n\u7ed9\u4f60$n$\u4e2a\u70b9\u7684\u5ea6$(d_1,d_2,...,d_n)$\uff0c\u7136\u540e\u95ee\u4f60\u7b2c$n+1$\u4e2a\u70b9\u7684\u5ea6$(d_{n+1})$\u7684\u6240\u6709\u53ef\u80fd\u503c\n\n\u9644\u4e0a\u9102\u5c14\u591a\u65af\u5b9a\u7406\uff1a$\\sum\\limits^{k}_{i=1}d_i\\leq k(k-1)+ \\sum\\limits^n_{i=k+1} \\min (d_i,k)$\n\n\u3010\u5206\u6790\u3011\n\n\u9996\u5148\u4ed6\u4eec\u7684\u70b9\u7684\u5ea6\u6570\u548c\u4e00\u5b9a\u4e3a\u5076\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u80fd\u591f\u77e5\u9053$d_{n+1}$\u7684\u5947\u5076\u6027\u3002\n\n\u6211\u4eec\u89c2\u5bdf\u6837\u4f8b2\u548c4\uff0c\u53d1\u73b0\u4ed6\u4eec\u7684\u7b54\u6848\u90fd\u662f\u5728\u76f8\u540c\u5947\u5076\u6027\u4e0b\u76f8\u90bb\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u5927\u80c6\u731c\u6d4b\uff1a\u5982\u679c$d_{n+1}=X$\u6ee1\u8db3\u6761\u4ef6\u4e14$d_{n+1}=Y$\u6ee1\u8db3\u6761\u4ef6\uff0c\u90a3\u4e48$X<Z<Y$\u4e14\u4e0e$X,Y$\u5947\u5076\u6027\u76f8\u540c\u7684$Z$\u4e5f\u4e00\u5b9a\u7b26\u5408\u3002\n\n\u4e3a\u4ec0\u4e48\uff1f \u5f88\u660e\u663e\uff0c\u5982\u679c$X$\u7b26\u5408\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u628a\u524dn\u4e2a\u4eba\u4e2d\u7684\u4e00\u5bf9$(u,v)$\u7684\u8fd8\u6709\u5173\u7cfb\u62c6\u6389\uff0c\u518d\u628a$u$\u548c$v$\u4e0e$n+1$\u6784\u6210\u597d\u53cb\u5173\u7cfb\uff08\u524d\u63d0\u662f$u$\u548c$v$\u4e4b\u524d\u4e0e$n+1$\u4e0d\u662f\u597d\u53cb\u5173\u7cfb\uff09\uff0c\u8fd9\u6837\u7b54\u6848\u5c31\u53d8\u6210\u4e86$X+2$\u4e86\n\n\u7136\u540e\u6211\u4eec\u7684\u95ee\u9898\u5c31\u8f6c\u5316\u6210\u4e3a\u6c42\u51fa\u4e0a\u6587\u4e2d\u7684$X$\u548c$Y$\n\n\u679a\u4e3e\u4e0d\u884c\uff0c\u6211\u4eec\u5c31\u53bb\u601d\u8003\u4e8c\u5206\u7b54\u6848\u3002\u5bf9\u4e8e\u4e00\u4e2a$d_{n+1}$\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u9102\u5c14\u591a\u65af\u5b9a\u7406\u5224\u65ad\u51fa\u8fd9\u4e2a\u65b0\u56fe\u662f\u5426\u53ef\u80fd\u3002\u5982\u679c\u4ed6\u4e0d\u884c\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u77e5\u9053\u4ed6\u662f\u5927\u662f\u5c0f\u3002\u8fd9\u53d6\u51b3\u4e8e\u4ed6\u662f\u5728\u4e0d\u7b49\u5f0f\u7684\u5de6\u4fa7\u8fd8\u662f\u53f3\u4fa7\u3002\u5982\u679c\u5728\u5de6\u4fa7\uff0c\u90a3\u4e48\u8fd9\u4e2a$d_{n+1}$\u5c31\u592a\u5927\u4e86\uff0c\u56e0\u4e3a\u5982\u679c\u6269\u5927\u90a3\u4e48\u4e0d\u7b49\u5f0f\u662f\u6c38\u8fdc\u4e0d\u4f1a\u6210\u7acb\u7684\uff1b\u53cd\u4e4b\u4e5f\u7c7b\u4f3c\u3002\n\n\u6211\u4eec\u53d1\u73b0\u4e0a\u9762\u7684\u5b9a\u7406\uff0c\u5982\u679c$d$\u6709\u5e8f\uff0c\u540e\u9762\u7684$min(d_i,k)$\u5e94\u8be5\u662f\u5206\u6210\u4e24\u6bb5\uff1a\u4e00\u6bb5\u65f6\u95f4$d_i$($d_i$\u66f4\u5c0f\uff09\uff0c\u4e00\u6bb5\u65f6\u95f4$k$\uff08$d_i$\u66f4\u5927\uff09\u3002\u8fd9\u4e2a\u9700\u8981\u524d\u7f00\u548c\u53bb\u7ef4\u62a4\u3002\n\n\u4e8e\u662f\u95ee\u9898\u5c31\u505a\u5b8c\u4e86\u3002\n\nemm \u8fd9\u4e2a\u662fO(nlogn)\u7684\u5427\u3002\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u9664\u6392\u5e8f\u5916\u53ef\u4ee5\u4f18\u5316O(n)\n\n\u6211\u4eec\u7528\u4e00\u4e2a\u5dee\u5206\u6570\u7ec4cf\u53bb\u7ef4\u62a4\u5bf9\u4e8e\u6bcf\u4e00\u4e2a$k$\uff0c\u8ba1\u7b97\u54ea\u4e00\u6bb5$X...Y$\u662f\u7b26\u5408\u8981\u6c42\u7684\uff0c\u7136\u540e\u5982\u679c\u4e00\u6bb5\u533a\u95f4\u7684$cf[X...Y]=n$\u5219\u8bf4\u660e\u8fd9\u4e00\u6bb5\u901a\u8fc7\u4e86\u6240\u6709\u7684\u8981\u6c42\uff0c\u5c31\u628a\u4ed6\u52a0\u5230\u7b54\u6848\u91cc\u5c31\u597d\u3002\n\n\u5475\u5475\u5475\u867d\u7136\u65f6\u95f4\u590d\u6742\u5ea6\u4f9d\u7136\u662fO(nlogn)\u7684\n\n\u3010\u4ee3\u7801\u3011\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std ;\n#define rep(i, a, b) for (int (i) = (a); (i) <= (b); (i)++)\n#define per(i, a, b) for (int (i) = (a); (i) >= (b); (i)--)\n#define clr(a) memset(a, 0, sizeof(a))\n#define ass(a, sum) memset(a, sum, sizeof(a))\n#define lowbit(x) (x & -x)\n#define mp make_pair\n#define pb push_back\n#define fi first\n#define se second\n#define enter cout << endl\n#define SZ(x) ((int)x.size())\ntypedef long long ll ;\ntypedef unsigned long long ull ;\ntypedef vector <int> vi ;\ntypedef vector <ll> vl ;\ntypedef pair <int, int> pii ;\ntypedef map <int, int> mii ;\ntypedef map <string, int> msi ;\nconst int N = 100010 ;\nconst int iinf = INT_MAX ;\nconst ll linf = 2e18 ;\nconst int MOD = 1000000007 ;\nvoid print(int x) { cout << x << endl ; exit(0) ; }\nvoid PRINT(string x) { cout << x << endl ; exit(0) ; }\nvoid douout(double x){ printf(\"%lf\\n\", x + 0.0000000001) ; }\n\nint n ;\n\nsigned main(){\n    scanf(\"%d\", &n) ; vi a(n), cf(n + 2), res ; vl sum(n + 1) ;\n\tfor (int i = 0; i < n; i++) scanf(\"%d\", &a[i]) ;\n\tsort(a.begin(), a.end()) ;\n\tfor (int i = 0; i < n; i++) sum[i + 1] = sum[i] + a[i] ;\n\tint j = 0 ;\n\tfor (int k = 1; k <= n; k++) {\n\t\tll l = sum[n] - sum[n - k], r = 1ll * k * (k - 1) ;\n\t\twhile (j < n && a[j] < k) j++ ;\n\t\tint up = min(n - k, j) ;\n\t\tr += sum[up] + 1ll * k * (n - k - up) ; // \u524d\u9762\u662f\u90a3\u4e2a\u5b9a\u7406\n\t\tint bound = a[n - k] ;\n\t\t{ // \u5206\u7c7b\u8ba8\u8bba\u4e4b\u540e\u5dee\u5206\n\t\t\tll dif = l - r ;\n\t\t\tif (dif <= k && dif <= bound) {\n\t\t\t\tcf[max(dif, 0ll)]++ ;\n\t\t\t\tcf[bound + 1]-- ;\n\t\t\t}\n\t\t}\n\t\t{\n\t\t\tl -= a[n - k] ;\n\t\t\tr += min(a[n - k], k) ;\n\t\t\tll dif = r - l ;\n\t\t\tif (dif > bound) {\n\t\t\t\tcf[bound + 1]++ ;\n\t\t\t\tcf[min(dif + 1, n + 1ll)]-- ;\n\t\t\t}\n\t\t}\n\t}\n\tint now = 0 ;\n\tfor (int i = 0; i <= n; i++) {\n\t\tnow += cf[i] ;\n\t\tif (now == n && (sum[n] + i) % 2 == 0) res.pb(i) ;\n\t}\n\tif (res.empty()) print(-1) ;\n\tfor (int i = 0; i < SZ(res); i++) printf(\"%d \", res[i]) ; enter ;\n}\n```",
        "postTime": 1546312759,
        "uid": 54900,
        "name": "__Hacheylight__",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1091E \u3010New Year and the Acquaintance Estimation\u3011"
    },
    {
        "content": "\u60f3\u8bb2\u4e00\u4e0b\u9898\u610f\uff0c\u7ed9\u4f60n\u4e2a\u4eba\u7684\u597d\u53cb\u6570\u91cf\uff0c\u6c42Bob\u7684\u597d\u53cb\u6570\u91cf\u7684\u6240\u6709\u53ef\u80fd\u503c\uff08\u597d\u53cb\u662f\u53cc\u5411\u7684\uff09\n\n\u8981\u505a\u8fd9\u9053\u9898\uff0c\u4f60\u5f97\u5148\u77e5\u9053\u7ed9\u4f60\u4e00\u7ec4\u6570\u636e\uff0c\u5982\u4f55\u5224\u5b9a\u662f\u67d0\u80fd\u6ee1\u8db3\u8fd9\u4e2a\u5173\u7cfb\uff0c\u9898\u76ee\u4e2d\u6709\u4e00\u4e2a\u94fe\u63a5\uff08Graph realization problem\uff09\u4e2d\u6709\u4e00\u79cd\u65b9\u6cd5\uff08https://en.wikipedia.org/wiki/Erd%C5%91s%E2%80%93Gallai_theorem\uff09\uff1a\n\n\u4e0b\u9762\u662f\u7ffb\u8bd1\uff1a\n\nS\u53ef\u7b80\u5355\u56fe\u5316\u5f53\u4e14\u4ec5\u5f53\u8fd9\u4e9b\u6570\u5b57\u7684\u548c\u4e3a\u5076\u6570\uff0c\u4e14\n![](https://wikimedia.org/api/rest_v1/media/math/render/svg/febd8dee6050a0cf792cff9442935b36db434db8)\u5bf9\u4e8e\u4efb\u4f551<=k<=n\u90fd\u6210\u7acb\n\n\u5bf9\u524dk\u4e2a\u70b9\u5206\u914d\u5ea6\u6570\uff0c\u9664\u4e86\u4e24\u4e24\u80fd\u8fdek(k\u22121)/2\u6761\u8fb9\u5916\uff0c\u5269\u4e0b\u7684\u5ea6\u6570\u7531\u540e\u9762\u70b9\u7684\u5ea6\u6570\u8865\u3002\n\u56e0\u4e3adi\u975e\u9012\u589e\uff0c\u4ece\u5c0f\u5230\u5927\u679a\u4e3ek\uff0c\u7ef4\u62a4di\u540e\u7f00\u4e0ek\u53d6min\u7684\u548c\u3002\u5c31\u53ef\u4ee5O(n)\u5224\u65ad\u4e86\u3002\uff08\u8fd9\u5168\u662f\u94fe\u63a5\u91cc\u7684\u5185\u5bb9\uff09\n\n\u8fd9\u9053\u9898\u4e3b\u8981\u7684\u89e3\u9898\u8981\u70b9\u4e00\u662f\u4f60\u8981\u70b9\u8fdb\u53bb\u770b\u90a3\u4e2a\u94fe\u63a5\uff08\u50cf\u6211\u8003\u573a\u4e0a\u4ee5\u4e3a\u4e0d\u91cd\u8981\u5c31\u6ca1\u8fdb\u53bb\u770b...\uff09\u4e8c\u662f\u8981\u60f3\u6e05\u695a\u4ec0\u4e48\u65f6\u5019\u662f\u8fc7\u5927\u800c\u4e0d\u6ee1\u8db3\uff0c\u4ec0\u4e48\u65f6\u5019\u662f\u8fc7\u5c0f\u800c\u4e0d\u6ee1\u8db3\u3002\u7ecf\u8fc7\u63a8\u7406\u53d1\u73b0\uff0c\u82e5\u7b2c\u4e00\u4e2a\u4e0d\u7b26\u5408\u4e0d\u7b49\u5f0f\u7684k\u5c0f\u4e8eBob\u7684\u6570\u91cf\uff0c\u5c31\u662f\u8fc7\u5927\uff0c\u67d0\u5219\u5c31\u662f\u8fc7\u5c0f\u3002\u6709\u4e86\u8fd9\u4e2a\u6761\u4ef6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4e8c\u5206\u8fd9\u6bb5\u533a\u95f4O\uff08nlogn\uff09\u3002\n\n\u8fd8\u6709\u4e00\u79cd\u66f4\u5feb\u7684\u505a\u6cd5O\uff08n\uff09\uff1a\u7136\u540e\u679a\u4e3ek,\u5bf9\u4e8e\u6bcf\u4e2ak\uff0c\u6839\u636e\u4e0a\u8ff0\u4e0d\u7b49\u5f0f\u63a8\u51fa\u6ee1\u8db3\u7684\u597d\u53cb\u6570\u91cf\u7684\u533a\u95f4\uff0c\u6700\u540e\u53d6n\u4e2a\u533a\u95f4\u7684\u4ea4\u70b9\u5373\u53ef\uff0c\u4f7f\u7528\u5dee\u5206\u4f18\u5316\u533a\u95f4\u64cd\u4f5c\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\tint n;\n\tcin>>n;\n\tvector<int>d(n);\n\tfor(int i=0;i<n;i++)\n\t\tcin>>d[i];\n\tsort(d.begin(),d.end());\n\tvector<long long>pref(n+1);\n\tfor(int i=0;i<n;i++)\n\t\tpref[i+1]=pref[i]+d[i];\n\tvector<int>bal(n+2);\n\tint j=0;\n\tfor(int k=1;k<=n;k++)\n\t{\n\t\tlong long l=pref[n]-pref[n-k];\n\t\tlong long r=(long long)k*(k-1);\n\t\twhile(j<n&&d[j]<k)\n\t\t\tj++;\n\t\tint up=min(n-k,j);\n\t\tr+=pref[up]+(long long)k*((n-k)-up);\n\t\tint bound=d[n-k];\n\t\tlong long diff=l-r;\n\t\tif(diff<=k&&diff<=bound)\n\t\t{\n\t\t\tbal[max(diff,0LL)]++;\n\t\t\tbal[bound+1]--; \n\t\t}\n\t\tl-=d[n-k];\n\t\tr+=min(d[n-k],k);\n\t\tdiff=r-l;\n\t\tif(diff>=bound+1)\n\t\t{\n\t\t\tbal[bound+1]++;\n\t\t\tbal[min(diff+1,n+1LL)]--;\n\t\t} \n\t}\n\tvector<int>res;\n\tint b=0;\n\tfor(int i=0;i<=n;i++)\n\t{\n\t\tb+=bal[i];\n\t\tif(b==n)\n\t\t\tif((pref[n]+i)%2==0)\n\t\t\t\tres.push_back(i);\n\t}\n\tif(res.empty())\n\t\tcout<<-1;\n\telse\n\t\tfor(int i=0;i<res.size();i++)\n\t\t\tcout<<res[i]<<' ';\n\tcout<<endl;\n\treturn 0;\n}\n\n```",
        "postTime": 1546246704,
        "uid": 67896,
        "name": "AllureLove",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1091E \u3010New Year and the Acquaintance Estimation\u3011"
    },
    {
        "content": "\u7ed9\u5b9a$\uff4e$\u4e2a\u70b9\u7684\u5ea6\u6570\u5e8f\u5217\uff0c\u518d\u6dfb\u52a0\u4e00\u4e2a\u70b9\uff0c\u6c42\u6dfb\u52a0\u7684\u8fd9\u4e2a\u70b9\u7684\u5ea6\u6570\u4e3a\u591a\u5c11\u65f6\uff0c\u6ee1\u8db3\u8fd9$\uff4e\uff0b\uff11$\u4e2a\u70b9\u53ef\u4ee5\u6784\u6210\u7b80\u5355\u65e0\u5411\u56fe\u3002\n\n~~\u6700\u7b80\u5355\u7684E\u9898~~\u4e8c\u5206\u67e5\u627e\u4e0a\u4e0b\u754c\uff0c\u7b54\u6848\u5c31\u662f\u4f9d\u6b21$-2$\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=500010;\nint n,a[N];\nlong long s2[N],s1[N],sum,Min,Max;\ninline int read(){\n    char ch;\n    bool f=false;\n    int res=0;\n    while ((ch=getchar())<'0'||ch>'9');\n    res=ch-'0';\n    while ((ch=getchar())>='0'&&ch<='9') res=(res<<3)+(res<<1)+ch-'0';\n    return res;\n}\nlong long work(){\n    for (int i=n;i>=1;i--)\n        s1[i]=s1[i+1]+a[i];\n    for (int i=1;i<=n;i++)\n        s2[i]=s2[i-1]+a[i];\n    long long x=0;\n    sum=0;\n    for (int i=1;i<=n;i++)\n        sum+=a[i];\n    for (int i=n;i;i--){\n        int y=lower_bound(a+i+1,a+n+1,i,greater<int>())-a;\n        long long z=(long long)i*(i-1)+(long long)(y-i-1)*i+s1[y];\n        if (s2[i]-z>i){\n            printf(\"-1\\n\");\n            exit(0);\n        }\n        x=max(x,s2[i]-z);\n    }\n    if (sum&1){\n        if (x&1);else x++;\n    }\n    else {\n        if (x&1) x++;\n    }\n    return x;\n}\nint main(){\n    n=read();\n    for (int i=1;i<=n;i++)\n        a[i]=read();\n    sort(a+1,a+n+1,greater<int>());\n    Max=work();\n    reverse(a+1,a+n+1);\n    for (int i=1;i<=n;i++)\n        a[i]=n-a[i];\n    Min=n-work();\n    if (Max>Min){\n        int T=Max;\n        Max=Min;\n        Min=T;\n    }\n    for (long long i=Max;i<=Min&&i<=n;i+=2)\n        printf(\"%lld \",i);\n    return 0;\n}\n```\n",
        "postTime": 1554852998,
        "uid": 13746,
        "name": "Trimsteanima",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1091E \u3010New Year and the Acquaintance Estimation\u3011"
    }
]