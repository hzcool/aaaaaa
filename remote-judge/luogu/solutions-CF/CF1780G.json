[
    {
        "content": "SAM \u677f\u5b50\u9898\u3002\n\n\u5728 [P3804 \u3010\u6a21\u677f\u3011\u540e\u7f00\u81ea\u52a8\u673a (SAM)](https://www.luogu.com.cn/problem/P3804) \u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u4f1a\u6c42\u6bcf\u4e2a\u7b49\u4ef7\u7c7b\uff08SAM \u72b6\u6001\uff09\u5728\u539f\u4e32\u4e2d\u7684\u51fa\u73b0\u6b21\u6570\u3002\n\n\u672c\u9898\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u6c42\u6240\u6709\u957f\u5ea6\u80fd\u88ab\u51fa\u73b0\u6b21\u6570\u6574\u9664\u7684\u5b50\u4e32\u3002\u6211\u4eec\u77e5\u9053\u4e00\u4e2a\u7b49\u4ef7\u7c7b\u4e2d\u7684\u6240\u6709\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u6784\u6210\u4e00\u6bb5\u6574\u6570\u533a\u95f4 $[\\operatorname{minlen}(v),\\operatorname{maxlen}(v)]$\uff0c\u5176\u4e2d $\\operatorname{minlen}(v)=\\operatorname{maxlen}(\\operatorname{link}(v))+1$\u3002\u4e8e\u662f\u60f3\u5230\u5c06\u6bcf\u4e2a\u6574\u6570\u7684\u56e0\u6570\u6253\u8868\u5230 vector \u4e2d\uff0c\u7136\u540e\u4e8c\u5206\u5373\u53ef\u7edf\u8ba1\u8fd9\u4e00\u7b49\u4ef7\u7c7b\u4e2d\u6709\u591a\u5c11\u5b50\u4e32\u7b26\u5408\u6761\u4ef6\u3002\n\n\u590d\u6742\u5ea6 $\\mathcal O(n\\log n)$\u3002\n\n2023.1.29 \u4fee\u6539\u4e86\u4e00\u5904\u7b14\u8bef\uff0c\u91cd\u65b0\u63d0\u4ea4\u5ba1\u6838\u3002\n\n```cpp\n// Problem: CF1780G Delicious Dessert\n// Contest: Luogu\n// URL: https://www.luogu.com.cn/problem/CF1780G\n// Memory Limit: 500 MB\n// Time Limit: 3000 ms\n// \n// Powered by CP Editor (https://cpeditor.org)\n\n//By: Luogu@rui_er(122461)\n#include <bits/stdc++.h>\n#define rep(x,y,z) for(int x=y;x<=z;x++)\n#define per(x,y,z) for(int x=y;x>=z;x--)\n#define debug printf(\"Running %s on line %d...\\n\",__FUNCTION__,__LINE__)\n#define fileIO(s) do{freopen(s\".in\",\"r\",stdin);freopen(s\".out\",\"w\",stdout);}while(false)\nusing namespace std;\ntypedef long long ll;\nconst int N = 1e6+5;\n\nchar s[N];\nint n, dp[N<<1]; ll ans;\nvector<int> divisors[N], e[N<<1];\ntemplate<typename T> void chkmin(T& x, T y) {if(x > y) x = y;}\ntemplate<typename T> void chkmax(T& x, T y) {if(x < y) x = y;}\nstruct State {\n\tint len, link, nxt[26];\n};\nstruct SAM {\n\tState st[N<<1];\n\tint sz, lst;\n\tvoid init() {\n\t\tst[0].len = 0;\n\t\tst[0].link = -1;\n\t\tsz = lst = 0;\n\t}\n\tvoid extend(char ch) {\n\t\tint u = ++sz, c = ch - 'a';\n\t\tst[u].len = st[lst].len + 1;\n\t\tint p = lst;\n\t\tfor(;p!=-1&&!st[p].nxt[c];p=st[p].link) st[p].nxt[c] = u;\n\t\tif(p == -1) st[u].link = 0;\n\t\telse {\n\t\t\tint q = st[p].nxt[c];\n\t\t\tif(st[p].len + 1 == st[q].len) st[u].link = q;\n\t\t\telse {\n\t\t\t\tint v = ++sz;\n\t\t\t\tst[v].len = st[p].len + 1;\n\t\t\t\tst[v].link = st[q].link;\n\t\t\t\tmemcpy(st[v].nxt, st[q].nxt, sizeof(st[q].nxt));\n\t\t\t\tfor(;p!=-1&&st[p].nxt[c]==q;p=st[p].link) st[p].nxt[c] = v;\n\t\t\t\tst[q].link = st[u].link = v;\n\t\t\t}\n\t\t}\n\t\tlst = u;\n\t\tdp[u] = 1;\n\t}\n}sam;\nint calc(int c, int x) {\n\treturn upper_bound(divisors[c].begin(), divisors[c].end(), x) - divisors[c].begin();\n}\nvoid dfs(int u) {\n\tfor(auto v : e[u]) {\n\t\tdfs(v);\n\t\tdp[u] += dp[v];\n\t}\n\tif(!u) return;\n\tint cnt = calc(dp[u], sam.st[u].len) - calc(dp[u], sam.st[sam.st[u].link].len);\n\tans += 1LL * cnt * dp[u];\n}\n\nint main() {\n\tscanf(\"%d%s\", &n, s+1);\n\trep(i, 1, n) for(int j = i; j <= n; j += i) divisors[j].push_back(i);\n\tsam.init();\n\trep(i, 1, n) sam.extend(s[i]);\n\trep(i, 1, sam.sz) e[sam.st[i].link].push_back(i);\n\tdfs(0);\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1674698018,
        "uid": 122461,
        "name": "rui_er",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1780G\u3010Delicious Dessert\u3011"
    },
    {
        "content": "\u9898\u610f\u662f\u6c42 $S$ \u4e2d\u5b50\u4e32\u51fa\u73b0\u6b21\u6570\u6070\u597d\u662f\u5176\u957f\u5ea6\u500d\u6570\u65f6\u7684\u8fd9\u4e9b\u5b50\u4e32\u7684\u603b\u6570\u91cf\n\n\u867d\u7136\u662f SAM \u6a21\u7248\u9898\uff0c\u4f46\u662f\u7528 SA \u4e5f\u53ef\u4ee5\u505a\uff0c\u505a\u6cd5\u548c [P3804](https://www.luogu.com.cn/problem/P3804) \u7c7b\u4f3c\uff0c\u6838\u5fc3\u662f\u6c42\u51fa\u957f\u5ea6\u4e3a $i$ \u7684\u6240\u6709\u5b50\u4e32\uff0c\u90fd\u5404\u81ea\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\u3002\n\n\u5148\u6c42\u51fa $\\operatorname{height}_i$\uff0c\u7136\u540e\u6309\u5176\u503c\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u6bcf\u6b21\u53d6\u51fa\u5bf9\u5e94\u7684 $\\operatorname{sa}_i$ \u548c $\\operatorname{sa}_{i-1}$\uff0c\u5229\u7528\u5e76\u67e5\u96c6\u5408\u5e76\uff0c\u540c\u65f6\u7ef4\u62a4\u6bcf\u4e2a\u8fde\u901a\u5757\u5927\u5c0f\uff0c\u4ee5\u53ca\u5927\u5c0f\u4e3a $k$ \u7684\u8fde\u901a\u5757\u6570\u91cf $c_k$\u3002\n\n\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\u503c\u5230 $i$ \u65f6\uff0c\u628a\u5bf9\u5e94\u8fde\u901a\u5757\u7ef4\u62a4\u597d\u4e4b\u540e\uff0c\u6b64\u65f6\u67d0\u4e2a\u8fde\u901a\u5757\u7684\u5927\u5c0f $k$ \u5c31\u8bf4\u660e\u8fd9\u4e2a\u957f\u5ea6\u4e3a $i$ \u7684\u5b50\u4e32\u662f $k$ \u4e2a\u540e\u7f00\u7684**\u516c\u5171\u524d\u7f00**\uff0c\u4e5f\u5373\u8be5\u5b50\u4e32\u6070\u597d\u51fa\u73b0\u4e86 $k$ \u6b21\u3002\u5982\u679c\u4e0d\u7406\u89e3\uff0c\u5c31\u60f3\u60f3\u6839\u636e $\\operatorname{height}$ \u6570\u7ec4\u7684\u6027\u8d28: $\\operatorname{sa}_i\\sim \\operatorname{sa}_j$ \u7684 LCP \u4e3a $\\min _{k=i+1}^j \\operatorname{height}_k$\uff0c\u6216\u8005\u7528\u540e\u7f00\u6811\u7406\u89e3\u3002\n\n\n\u7136\u540e\u679a\u4e3e $i$ \u7684\u500d\u6570 $j$ \u4f5c\u4e3a\u51fa\u73b0\u6b21\u6570\uff0c$j\\times c_j$ \u5c31\u662f\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u3002\n\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nconst int INF = 0x3f3f3f3f;\nconst LL mod = 1e9 + 7;\nconst int N = 1000005;\n \nint sa[N];\nint rk[N << 1], tk[N << 1];\nint height[N];\nint id[N], cnt[N];\nvoid SA(char *s, int n, int m) {\n    for (int i = 1; i <= n; i++) sa[i] = i, rk[i] = s[i];\n \n    for (int i = 0; i <= m; i++) cnt[i] = 0;\n    for (int i = 1; i <= n; i++) ++cnt[rk[i] = s[i]];\n    for (int i = 1; i <= m; i++) cnt[i] += cnt[i - 1];\n    for (int i = n; i >= 1; i--) sa[cnt[rk[i]]--] = i;\n \n    for (int w = 1; w < n; w *= 2) {\n        int p = 0;\n        for (int i = n - w + 1; i <= n; i++) id[++p] = i;\n        for (int i = 1; i <= n; i++) {\n            if (sa[i] > w) id[++p] = sa[i] - w;\n        }\n        for (int i = 1; i <= m; i++) cnt[i] = 0;\n        for (int i = 1; i <= n; i++) ++cnt[rk[i]];\n        for (int i = 1; i <= m; i++) cnt[i] += cnt[i - 1];\n        for (int i = n; i >= 1; i--) sa[cnt[rk[id[i]]]--] = id[i];\n \n        m = 0;\n        for (int i = 1; i <= n; i++) {\n            if (rk[sa[i]] == rk[sa[i - 1]] && rk[sa[i] + w] == rk[sa[i - 1] + w]) {\n                tk[sa[i]] = m;\n            } else {\n                tk[sa[i]] = ++m;\n            }\n        }\n        for (int i = 1; i <= n; i++) rk[i] = tk[i];\n    }\n \n    for (int i = 1, k = 0; i <= n; i++) {\n        if (rk[i] == 0) continue;\n        if (k) --k;\n        while (s[i + k] == s[sa[rk[i] - 1] + k]) ++k;\n        height[rk[i]] = k;\n    }\n}\nchar s[N];\nvector<int> a[N];\nint sz[N], p[N], c[N];\nint find(int x) {\n    return p[x] == x ? x : p[x] = find(p[x]);\n}\nint main() {\n    int n;\n    scanf(\"%d%s\", &n, s + 1);\n    SA(s, n, 128);\n    for (int i = 1; i <= n; i++) {\n        p[i] = i, sz[i] = 1;\n        if (i > 1)\n            a[height[i]].push_back(i);\n    }\n    c[1] = n;\n    LL ans = 0;\n    for (int i = n; i >= 1; i--) {\n        for (auto x : a[i]) {\n            int y = find(x - 1);\n            x = find(x);\n            if (x != y) {\n                c[sz[x]]--;\n                c[sz[y]]--;\n                p[x] = y;\n                sz[y] += sz[x];\n                c[sz[y]]++;\n            }\n        }\n        for (int j = i; j <= n; j += i) {\n            ans += (LL)j * c[j];\n        }\n    }\n    printf(\"%lld\\n\", ans);\n    return 0;\n}\n```\n",
        "postTime": 1675170417,
        "uid": 54357,
        "name": "OMG_wc",
        "ccfLevel": 0,
        "title": "CF1780G Delicious Dessert \u9898\u89e3"
    },
    {
        "content": "\u8003\u8651\u5148\u5efa\u51fa\u540e\u7f00\u81ea\u52a8\u673a\u3002\n\n\u540e\u7f00\u81ea\u52a8\u673a\u4e00\u4e2a\u5e38\u7528\u6027\u8d28\uff1a\u6bcf\u4e2a\u72b6\u6001\u8868\u793a\u6240\u6709\u5b57\u7b26\u4e32\u7684 $\\operatorname{Endpos}$ \u96c6\u5408\u5b8c\u5168\u76f8\u7b49\uff0c\u4e5f\u5c31\u662f\u51fa\u73b0\u6b21\u6570\u5b8c\u5168\u76f8\u7b49\u3002\u53e6\u5916\u4e00\u4e2a\u7ed3\u8bba\uff0c\u6bcf\u4e2a\u72b6\u6001\u8868\u793a\u7684\u6240\u6709\u5b57\u7b26\u4e32\uff0c\u4e00\u5b9a\u662f\u5176\u5b57\u7b26\u4e32\u4e2d\u6700\u77ed\u548c\u6700\u957f\u5b57\u7b26\u4e32\u4e4b\u95f4\u3002\u5373\u5bf9\u4e8e\u6784\u5efa\u81ea\u52a8\u673a\u7684 $len_i$\uff0c\u5373\u6bcf\u4e2a\u72b6\u6001\u4e2d\u6240\u6709\u5b57\u7b26\u4e32\u6700\u957f\u7684\u957f\u5ea6\uff0c\u4e00\u5b9a\u6709 $i$ \u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\u662f $[len_{fa_i}+1, len_i]$\uff0c\u5373\u5982\u679c\u6700\u957f\u662f `apbccdd`\uff0c\u6700\u77ed\u662f `cdd`\uff0c\u90a3\u4e48 `ccdd`\uff0c`bccdd` \u548c `pbccdd` \u90fd\u5c5e\u4e8e\u8fd9\u4e2a\u72b6\u6001\u4e2d\u3002\n\n\u4e8e\u662f\u6211\u4eec\u6784\u9020\u81ea\u52a8\u673a\u540e\uff0c\u4ece $fa_i$ \u5411 $i$ \u8fde\u8fb9\u4e4b\u540e DFS\uff0c\u53ef\u4ee5\u6c42\u51fa\u6bcf\u4e2a\u72b6\u6001\u7684 $\\operatorname{Endpos}$ \u96c6\u5408\u5927\u5c0f\uff0c\u5373\u5171\u540c\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u8bbe\u4e3a $f_i$\u3002\u63a5\u7740\u53ea\u9700\u8981\u6c42 $[len_{fa_i}+1, len_i]$ \u4e2d\u6709\u591a\u5c11\u4e2a\u6570\u662f $f_i$ \u7684\u56e0\u6570\u3002\u5bb9\u6613\u53d1\u73b0\u53ef\u4ee5\u9884\u5904\u7406\u56e0\u6570\u7136\u540e\u4e8c\u5206\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <vector>\n#include <string>\nusing namespace std;\n\nconst int N = 2e6 + 5;\n\nstring s;\nlong long f[N];\nint tot = 1, last = 1;\nvector<int> G[N], kk[N];\n\nstruct Node\n{\n\tint fa, len, son[26];\n}g[N];\n\nvoid extend(int c)\n{\n\tint p = last;\n\tint np = last = ++tot;\n\tg[np].len = g[p].len + 1;\n\tf[np] = 1LL;\n\tfor (; p && g[p].son[c] == 0; p = g[p].fa) g[p].son[c] = np;\n\tif (!p) g[np].fa = 1;\n\telse\n\t{\n\t\tint q = g[p].son[c];\n\t\tif (g[q].len == g[p].len + 1) g[np].fa = q;\n\t\telse\n\t\t{\n\t\t\tint nq = ++tot;\n\t\t\tg[nq] = g[q];\n\t\t\tg[nq].len = g[p].len + 1;\n\t\t\tg[q].fa = g[np].fa = nq;\n\t\t\tfor (; p && g[p].son[c] == q; p = g[p].fa) g[p].son[c] = nq;\n\t\t}\n\t}\n}\n\nvoid dfs(int u)\n{\n\tfor (int j : G[u])\n\t{\n\t\tdfs(j);\n\t\tf[u] += f[j];\n\t}\n}\n\nint main()\n{\n\tios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);\n\tfor (long long i = 1; i <= (long long)1e6; i++)\n\t{\n\t\tfor (long long j = i; j <= (long long)1e6; j += i)\n\t\t{\n\t\t\tkk[j].emplace_back(i);\n\t\t}\n\t}\n\tlong long ans = 0;\n\tcin >> s >> s;\n\tfor (char i : s) extend(i - 'a');\n\tfor (int i = 2; i <= tot; i++) G[g[i].fa].emplace_back(i);\n\tdfs(1);\n\tfor (int i = 2; i <= tot; i++)\n\t{\n\t\tint l = g[g[i].fa].len + 1, r = g[i].len; // \u957f\u5ea6\n\t\tlong long k = f[i]; // \u6b21\u6570\n\t\tlong long cnt = upper_bound(kk[k].begin(), kk[k].end(), r) - lower_bound(kk[k].begin(), kk[k].end(), l);\n\t\tans += cnt * k;\n\t}\n\tcout << ans << \"\\n\";\n\treturn 0;\n}\n```\n",
        "postTime": 1677064691,
        "uid": 332914,
        "name": "happybob",
        "ccfLevel": 6,
        "title": "Delicious Dessert"
    }
]