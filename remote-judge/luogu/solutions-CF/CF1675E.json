[
    {
        "content": "\u89c2\u5bdf\u9898\u76ee\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5927\u81f4\u601d\u8def\uff1a\n\n\u4f7f\u7528\u8d2a\u5fc3\uff0c\u4ece\u524d\u5f80\u540e\u626b\u4e00\u904d\uff0c\u6839\u636e\u9898\u610f\u627e\u5230\u67d0\u79cd\u5b57\u7b26\u53ef\u4ee5\u964d\u5230\u7684\u4e0b\u9650\uff0c\u66b4\u529b\u5730\u4ece\u524d\u626b\u5230\u540e\u66f4\u65b0\u6bcf\u4e2a\u5b57\u7b26\uff0c\u6700\u540e\u518d\u626b\u4e00\u904d\uff0c\u628a\u6ca1\u6709\u5b8c\u5168\u66f4\u65b0\u7684\u5b57\u7b26\u53d8\u6210 a \u5373\u53ef\u3002\n\n\u653e\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<string>\nusing namespace std;\nint main(){\n    int t; cin>>t;\n    while(t--){\n        int n,k; string s; cin>>n>>k>>s; char c=97; // \u521d\u59cb\u5316\u5b57\u7b26\u53d8\u91cf c\n        for(int i=0;i<n;i++)\n            if(s[i]>c){ // \u53ea\u6709\u66f4\u5927\u624d\u6709\u610f\u4e49\u7ee7\u7eed\u66f4\u65b0\n                if(s[i]-97>k){\n                    k-=c-97; int minn=s[i]-k; // \u627e\u5230\u6700\u4f4e\u53ef\u4ee5\u964d\u5230\u591a\u5c11\n                    for(char h=s[i];h>minn;h--)\n                        for(int j=0;j<n;j++)if(s[j]==h)s[j]=h-1; // \u66b4\u529b\u5730\u626b\u4e00\u904d\uff0c\u5982\u679c\u53ef\u4ee5\u964d\u90a3\u4e48\u5c31\u66f4\u65b0\n                    break;\n                }\n                else if(c<s[i])c=s[i]; // \u66f4\u65b0\u6700\u4f4e\u7684\u503c\uff0c\u4ee5\u4fbf\u6700\u540e\u7684\u66f4\u6539\n            }\n        for(int i=0;i<n;i++)if(s[i]<=c)s[i]='a'; // \u66f4\u65b0\u6210 'a'\n        cout<<s<<endl;\n    }\n    return 0;\n}\n```",
        "postTime": 1652361191,
        "uid": 556366,
        "name": "zyc212303",
        "ccfLevel": 5,
        "title": "CF1675E Replace With the Previous, Minimize \u9898\u89e3"
    },
    {
        "content": "### \u9898\u610f\uff08\u590d\u5236\u4e86\u4e00\u4e0b\uff09\n\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\uff0c\u53ea\u542b\u5c0f\u5199\u5b57\u6bcd\u7684\u5b57\u7b26\u4e32 $s$\uff0c\u6bcf\u6b21\u64cd\u4f5c\u53ef\u4ee5\u9009\u62e9 $26$ \u4e2a\u5b57\u6bcd\u4e4b\u4e00\uff0c\u5c06\u5b57\u7b26\u4e32\u4e2d\u6240\u6709\u8be5\u5b57\u6bcd\u66ff\u6362\u4e3a\u4e0a\u4e00\u4e2a\u5b57\u6bcd\uff08\u5982 $\\texttt{c} \\to \\texttt{b}$\uff0c$\\texttt{b}\\to\\texttt{a}$\uff0c\u7279\u6b8a\u5730\uff0c$\\texttt{a}\\to\\texttt{z}$\uff09\u3002\u5728 $k$ \u6b21\u64cd\u4f5c\u4e4b\u5185\uff0c\u4f7f\u5f97\u5230\u7684\u5b57\u7b26\u4e32\u7684\u5b57\u5178\u5e8f\u6700\u5c0f\u3002\n### \u5206\u6790\n\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0 $\\texttt{a}\\to \\texttt{z}$ \u662f\u80af\u5b9a\u7528\u4e0d\u4e0a\u7684\u3002\n\n\u800c\u4e14\u8981\u60f3\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u6700\u7ec8\u5e8f\u5217\u80af\u5b9a\u662f\u5f00\u5934\u5b57\u6bcd\u8d8a\u5c0f\u8d8a\u597d\u3002\n\n\u5176\u6b21\uff0c\u53ef\u4ee5\u53d1\u73b0\u64cd\u4f5c\u6709\u4e00\u4e2a\u5de7\u5999\u7684\u6027\u8d28\uff1a\u5177\u6709\u4f20\u9012\u6027\u3002\u4f8b\u5982\u5c06 $\\texttt{b}$ \u66ff\u6362\u4e3a $\\texttt{a}$ \u540e\uff0c\u518d\u60f3\u8981\u5c06 $\\texttt{c}$ \u66ff\u6362\u4e3a $\\texttt{a}$\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u5148\u5c06 $\\texttt{c}$ \u66ff\u6362\u4e3a $\\texttt{b}$ \uff0c\u7136\u540e\u5c06\u4e24\u4e2a $\\texttt{b}$ \u4e00\u8d77\u66ff\u6362\u6210 $\\texttt{a}$\u3002\n\n\u6709\u4e86\u8fd9\u4e2a\u6027\u8d28\uff0c~~\u663e\u800c\u6613\u89c1\uff0c\uff08\u5176\u5b9e\u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u4f1a\u60f3\u5230\uff09~~ \u8fd9\u9053\u9898\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u6765\u5b8c\u6210\u3002\u628a\u6bcf\u4e00\u6b21\u64cd\u4f5c\u90fd\u770b\u4f5c\u4e00\u6b21 $\\texttt{merge}$ \u64cd\u4f5c\u5373\u53ef\u3002\n\n\u56e0\u4e3a\u5b57\u6bcd\u8d8a\u524d\u9762\u5bf9\u5b57\u5178\u5e8f\u7684\u5f71\u54cd\u8d8a\u5927\uff0c\u6240\u4ee5\u987a\u5e8f\u8fdb\u884c\u64cd\u4f5c\u3002\n\n\u4ee3\u7801\u5f88\u7b80\u5355\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u770b\u4f3c $O(k)$\uff0c\u5b9e\u9645\u4e0a\u8fdc\u8fdc\u8dd1\u4e0d\u5230\uff0c\u5927\u6982\u53ea\u6709 $O(n)$ \u7684\u7ea7\u522b\u3002\n### \u4ee3\u7801\n~~\u6ce8\uff1a\u7531\u4e8e\u849f\u84bb\u592a\u61d2\uff0c\u6ca1\u5199 $\\texttt{merge}$ \u51fd\u6570\uff0c\u5c06\u5c31\u7740\u770b\u5427\u3002~~\n```\n#include <iostream>\n#include <string>\nusing namespace std;\nstring getstr(){\n\tstring s;char f=getchar();\n\twhile (f=='\\n'||f=='\\0'||f=='\\r'||f==' ') f=getchar();\n\twhile (f!='\\n'&&f!='\\r'&&f!='\\0'&&f!=' ') s+=f,f=getchar();\n\treturn s;\n}\nconst int maxn=200020;\nint f[30],a[maxn];\nint findfa(int x){\n\tif (f[x]==x) return f[x];\n\treturn f[x]=findfa(f[x]);\n}\nint main(){\n\tint t,n,k;scanf(\"%d\",&t);\n\twhile (t--){\n\t\tscanf(\"%d%d\",&n,&k);\n\t\tstring s=getstr();\n\t\tfor (int i=1;i<=26;++i) f[i]=i;\n\t\tfor (int i=0;i<n;++i) a[i]=s[i]-'a'+1;\n\t\tint tmp=0;\n\t\twhile (k&&tmp<n){\n\t\t\twhile (findfa(a[tmp])!=1&&k)\n\t\t\t\tf[findfa(a[tmp])]=findfa(findfa(a[tmp])-1),--k;\n\t\t\t++tmp;\n\t\t}\n\t\tfor (int i=0;i<n;++i) putchar(findfa(a[i])+'a'-1);\n\t\tputchar('\\n');\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1656471462,
        "uid": 674721,
        "name": "yanhao40340",
        "ccfLevel": 7,
        "title": "CF1675E\u9898\u89e3"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e86\u4e24\u4e2a\u6b63\u6574\u6570 $n$ \u548c $k$\uff0c\u7136\u540e\u7ed9\u5b9a\u4e00\u4e2a\u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u7684\u3001\u957f\u5ea6\u4e3a $n$ \u7684\u5b57\u7b26\u4e32 $s$\u3002\u5b9a\u4e49\u4e00\u4e2a\u64cd\u4f5c\uff0c\u5982\u4e0b\uff1a\n\n+ \u9009\u5b9a\u4e00\u4e2a\u5c0f\u5199\u5b57\u6bcd $c$\uff0c\u5c06 $s$ \u4e2d\u6240\u6709 $s_i=c$ \u7684 $s_i$ \u53d8\u4e3a $s_i-1$\uff0c\u6bd4\u5982 `b` \u53d8\u6210 `a`\uff0c`c` \u53d8\u6210 `b`\uff0c\u82e5\u4e3a `a` \u5219\u53d8\u6210 `z`\u3002\n\n\u73b0\u5728\u4f60\u80fd\u5bf9 $s$ \u8fdb\u884c $k$ \u6b21\u64cd\u4f5c\uff0c\u6c42\u51fa\u4f60\u80fd\u4f7f\u5f97\u7684\u65b0\u7684 $s$ \u5b57\u5178\u5e8f\u6700\u5c0f\u7684 $s'$\u3002\n\n### \u57fa\u672c\u601d\u8def\n\n\u6211\u4eec\u5148\u4ece\u5b83\u7ed9\u5b9a\u7684\u5b57\u5178\u5e8f\u6700\u5c0f\u4e0a\u624b\u3002\u5b57\u5178\u5e8f\u6bd4\u8f83\u4e2d\u5b57\u7b26\u4e32 $a < b$ \u7684\u5b9a\u4e49\u662f\u5bf9\u4e8e\u4e00\u4e2a $k$\uff0c$a_1=b_1,a_2=b_2\\cdots a_{k-1}=b_{k-1}\\land a_k<b_k0$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u5e94\u4f7f\u5f97\u524d $i$ \u4e2a $s_i$ \u4e3a `a`\uff0c\u4e14\u4f7f $i$ \u6700\u5927\u5316\uff0c\u8fd9\u6837\u6784\u9020\u51fa\u7684\u65b9\u6848\u4e00\u5b9a\u662f\u5b57\u5178\u5e8f\u6700\u5c0f\u65b9\u6848\u3002\n\n### \u4ee3\u7801\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define rep1(i, l, r) for (register int i(l); i <= r; ++i)\n#define rep2(i, l, r) for (register int i(l); i >= r; --i)\nusing namespace std;\nconst int N = 2e5 + 5;\nint n, t, k; char s[N];\nsigned main(void) {\n\tscanf(\"%d\", &t); while (t--) {\n\t\tscanf(\"%d%d\", &n, &k); scanf(\"%s\", s + 1);\n\t\tint mx = 0, flg = 0;\n\t\trep1(i, 1, n) {\n\t\t\tif (s[i] - 'a' > k) {flg = i; break;}\n\t\t\tmx = max(mx, s[i] - 'a'); \n            //\u627e\u51fa\u7b2c\u4e00\u4e2a\u65e0\u6cd5\u53d8\u6210 'a' \u7684 i\n\t\t}\n\t\tif (flg) {\n\t\t\trep1(i, 1, n) {\n\t\t\t\tif (s[i] <= (mx + 'a')) s[i] = 'a';\n                //\u8ba9\u6240\u6709\u6bd4\u80fd\u591f\u6210\u4e3a 'a' \u7684\u5b57\u6bcd\u90fd\u6210\u4e3a a\n\t\t\t}\n\t\t\tchar c = (s[flg] - k + mx);\n\t\t\trep1(i, 1, n) {\n\t\t\t\tif (flg == i) continue;\n\t\t\t\tif (s[i] <= s[flg] && s[i] > c) s[i] = c;\n\t\t\t} s[flg] = c;\n\t\t\tputs(s + 1);\n\t\t} else {\n\t\t\trep1(i, 1, n) putchar('a'); puts(\"\");\n\t\t}\n\t}\n}\n```",
        "postTime": 1655902872,
        "uid": 377787,
        "name": "Hooch",
        "ccfLevel": 6,
        "title": "CF1675E"
    },
    {
        "content": "VP div.3 \u9996\u6b21\u8fc7 E\uff0c\u64b0\u9898\u89e3\u4ee5\u796d\u4e4b\u3002\n\n- \u66f4\u65b0\u65e5\u5fd7\uff1a\n\n  - 2022.7.14\uff1a\u4ee3\u7801\u94fe\u63a5\u6302\u4e86\uff0c\u4e8e\u662f\u8fd8\u662f\u628a\u4ee3\u7801\u8d34\u8fdb\u4e86\u9898\u89e3\u91cc\uff08\u60b2\uff09\n\n- \u9898\u610f\uff1a\n\n  \u5728\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$\uff0c\u4ec5\u542b\u5c0f\u5199\u62c9\u4e01\u5b57\u6bcd\u7684\u5b57\u7b26\u4e32 $s$ \u4e2d\uff0c\u4f60\u53ef\u4ee5\u8fdb\u884c\u6700\u591a $k$ \u6b21\u5982\u4e0b\u64cd\u4f5c\uff1a\n  \n  - \u5728 $s$ \u4e2d\u9009\u4e00\u4e2a\u5b57\u7b26\uff0c\u628a $s$ \u4e2d\u6240\u6709\u8be5\u5b57\u7b26 ASCII \u7801 $-1$\uff08\u7279\u522b\u5730\uff0c\u82e5\u9009\u5b9a `a`\uff0c\u5219\u53d8\u4e3a `z`\uff09\u3002\n  \n  \u95ee\u6700\u540e\u80fd\u5f97\u5230\u7684\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u5b57\u7b26\u4e32\u3002\n  \n- \u89e3\u6cd5\uff1a\n\n  \u9996\u5148\uff0c\u5bb9\u6613\u53d1\u73b0\u7684\u8d2a\u5fc3\u601d\u8def\u662f\uff1a\n  \n  - \u4e0d\u9009\u5b9a\u5b57\u7b26 `a`\uff08\u5426\u5219\u767d\u767d\u6d6a\u8d39\u4e86\u4e00\u6b21\u64cd\u4f5c\u8fd8\u53d8\u5927\u4e86\u5b57\u5178\u5e8f\uff09\n  - \u4f18\u5148\u8003\u8651 $s$ \u4e2d\u524d\u9762\u7684\u5b57\u7b26\uff08\u8981\u4f7f\u5b57\u5178\u5e8f\u6700\u5c0f\uff09\n  \n  \u4e8e\u662f\u8003\u8651\u4ece\u5934\u5230\u5c3e\u5904\u7406 $s$\uff1a\u770b\u5f53\u524d\u5b57\u7b26\u9700\u8981\u51cf\u591a\u5c11\u6b21\u624d\u80fd\u53d8\u6210 `a`\uff0c\u5e76\u628a $k$ \u51cf\u53bb\u9700\u8981\u7684\u6b21\u6570\uff0c\u76f4\u5230 $k$ \u4e0d\u591f\u4e3a\u6b62\u3002\n  \n  \u4f46\u8fd9\u4f1a\u5bfc\u81f4\u4e00\u4e9b\u95ee\u9898\u3002\u6bd4\u5982\u5982\u4e0b\u6570\u636e\uff1a\n  \n  ```\n  4 2\n  abcc\n  ```\n  \n  \u6211\u4eec\u7684\u7a0b\u5e8f\u662f\u8fd9\u6837\u5904\u7406\u7684\uff1a\n  \n  - \u7b2c\u4e00\u4e2a\u5b57\u7b26 `a`\uff0c\u5b57\u5178\u5e8f\u5df2\u7ecf\u6700\u5c0f\u3002\n  - \u7b2c\u4e8c\u4e2a\u5b57\u7b26 `b`\uff0c\u64cd\u4f5c $1$ \u6b21\u540e\u53d8\u4e3a `a`\uff0c$k$ \u8fd8\u5269 $1$\u3002\n  - \u7b2c\u4e09\u4e2a\u5b57\u7b26 `c`\uff0c\u64cd\u4f5c $2$ \u6b21\u540e\u53ef\u4ee5\u53d8\u4e3a `a`\uff0c\u4f46 $k$ \u53ea\u5269 $1$ \u4e86\uff0c\u56e0\u6b64\u53ea\u80fd\u64cd\u4f5c $1$ \u6b21\u53d8\u6210 `b`\u3002\n  \n  \u8f93\u51fa\u4e3a\uff1a`aabc`\u3002\n  \n  \u4f46\u5b9e\u9645\u4e0a\u53ef\u4ee5\u76f4\u63a5\u628a\u6240\u6709 `c` \u53d8\u6210 `b`\uff0c\u518d\u628a\u6240\u6709 `b` \u53d8\u6210 `a`\uff0c\u5f62\u6210 `aaaa`\u3002\n  \n  \u95ee\u9898\u6709\u4e24\u4e2a\uff1a\n  \n  - \u6ca1\u6709\u8003\u8651\u524d\u9762\u5df2\u7ecf\u5b8c\u6210\u7684\u64cd\u4f5c\u3002\n  \n    \u5219\u53ef\u4ee5\u8bb0\u5f55\u4e00\u4e2a\u503c $\\text{last}$\uff0c\u8868\u793a\u4e4b\u524d\u9009\u4e2d\u8fc7\u7684\u5b57\u5178\u5e8f\u6700\u5927\u7684\u5b57\u6bcd\u3002\u90a3\u4e48\u53ea\u8981\u8fd9\u6b21\u9009\u4e2d\u7684\u5b57\u7b26 $c$ \u80fd\u5728 $k$ \u6b21\u5185\u5220\u5230 $\\text{last}$\uff0c\u5c31\u80fd\u53d8\u6210 `a`\u2014\u2014\u56e0\u4e3a\u4e4b\u524d\u6700\u5927\u4e5f\u662f\u4ece $\\text{last}$ \u51cf\u5230 `a`\uff0c\u65e2\u7136\u53c8\u80fd\u4ece $c$ \u51cf\u5230 $\\text{last}$\uff0c\u90a3\u4e48\u8fd8\u4e0d\u5982\u76f4\u63a5\u4ece $c$ \u51cf\u5230 `a` \u5462\u3002\n  - \u6ca1\u6709\u628a\u6240\u6709\u9009\u62e9\u7684\u5b57\u7b26 ASCII \u90fd $-1$\u3002\n  \n    \u540c\u6837\u4f7f\u7528\u4e0a\u9762\u7684 $\\text{last}$\u3002\u5982\u679c\u5f53\u524d\u5b57\u7b26\u5b57\u5178\u5e8f\u6bd4 $\\text{last}$ \u5c0f\uff0c\u90a3\u4e48\u5c31\u5df2\u7ecf\u88ab\u6362\u6210\u4e86 `a`\u3002\n    \n    \u5f53 $k$ \u4e0d\u591f\u628a\u5f53\u524d\u5b57\u7b26 $c$ \u5220\u5230 `a` \u65f6\uff0c\u5c31\u628a $s$ \u4e2d ASCII \u5728 $(c-k,c]$ \u5185\u7684\u5b57\u7b26\u5168\u90e8\u53d8\u4e3a $c-k$\u2014\u2014\u5728\u6700\u540e\u7684 $k$ \u6b21\u91cc\uff0c$c$ \u53d8\u4e3a $c-1$\uff0c$c-1$ \u53d8\u4e3a $c-2$\uff0c$\\dots$\uff0c$c-k+1$ \u53d8\u4e3a $c-k$\uff0c\u6240\u4ee5\u4e0a\u8ff0\u533a\u95f4\u5185\u7684\u5b57\u7b26\u90fd\u53ef\u4ee5\u5982\u6b64\u53d8\u5316\u3002  \n    \u5f53\u7136\uff0c\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u4e5f\u53ef\u4ee5\u987a\u4fbf\u628a\u5176\u5b83\u5b57\u5178\u5e8f\u6bd4 $\\text{last}$ \u5c0f\u7684\u5b57\u7b26\u66ff\u6362\u6210 `a`\u3002\u6700\u540e\u8f93\u51fa\u5373\u53ef\u3002\n    \n  \u4e8e\u662f\u5c31\u6ca1\u6709\u95ee\u9898\u4e86\u3002\n  \n  ```cpp\n  namespace{\n  \tint T;\n  \tconst int lim=2e5+3;\n  \tint n,k;\n  \tchar a[lim],last;\n  \tvoid solve(){\n  \t\tn=read();k=read();\n  \t\tF(i,1,<=n) a[i]=readc();\n  \t\tlast='a';\n  \t\tF(i,1,<=n){\n  \t\t\tif(a[i]<=last) a[i]='a';\n  \t\t\telse if(a[i]-last>=k){\n  \t\t\t\tF(j,1,<=n){\n  \t\t\t\t\tif(i!=j&&a[j]>a[i]-k&&a[j]<=a[i]){\n  \t\t\t\t\t\ta[j]=a[i]-k;\n  \t\t\t\t\t}\n  \t\t\t\t\tif(a[j]<=last){\n  \t\t\t\t\t\ta[j]='a';\n  \t\t\t\t\t}\n  \t\t\t\t}\n  \t\t\t\ta[i]-=k;\n  \t\t\t\tif(a[i]<=last) a[i]='a';\n  \t\t\t\tbreak;\n  \t\t\t}else{\n  \t\t\t\tk-=a[i]-last;\n  \t\t\t\tlast=a[i];\n  \t\t\t\ta[i]='a';\n  \t\t\t}\n  \t\t}\n  \t\tF(i,1,<=n) putchar(a[i]);\n  \t\tendl;\n  \t}\n  \tvoid work(){\n  \t\tT=read();\n  \t\twhile(T--) solve();\n  \t}\n  }\n  ```",
        "postTime": 1652437477,
        "uid": 392304,
        "name": "caibyte",
        "ccfLevel": 0,
        "title": "CF1675E Replace With the Previous, Minimize \u9898\u89e3"
    },
    {
        "content": "## Description\n\n\u5df2\u77e5\u4e00\u4e2a\u5c0f\u5199\u62c9\u4e01\u5b57\u6bcd\u5b57\u7b26\u4e32 $s$\uff0c\u6bcf\u6b21\u53ef\u4ee5\u9009\u4e2d $s$ \u4e2d\u7684\u4e00\u4e2a\u5b57\u6bcd\uff0c\u7136\u540e\u5c06\u6240\u6709\u4e0e\u5b83\u76f8\u540c\u7684\u5b57\u6bcd\u90fd\u53d8\u4e3a\u5176\u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u524d\u4e00\u4e2a\u5b57\u6bcd\u3002\u4f60\u6700\u591a\u53ea\u80fd\u8fdb\u884c $k$ \u6b21\u64cd\u4f5c\uff0c\u6c42\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u53ef\u4ee5\u5728 $k$ \u6b21\u64cd\u4f5c\u4e2d\u751f\u6210\u7684\u5b57\u7b26\u4e32\u3002\n\n## Solution\n\n\u65e2\u7136\u662f\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u90a3\u6211\u4eec\u5c31\u4f18\u5148\u964d $s_1$\uff0c\u5f80\u540e\u770b\u770b\u8fd8\u6709\u54ea\u4e9b\u5b57\u6bcd\u53ef\u4ee5\u5728 $k$ \u6b21\u64cd\u4f5c\u540e\u964d\u4e3a `a`\u3002\u5982\u679c\u9047\u5230\u4e0d\u80fd\u7684\uff0c\u5c31\u5148\u653e\u4e00\u653e\uff0c\u56e0\u4e3a\u6211\u4eec\u4f18\u5148\u628a\u524d\u9762\u6700\u5c0f\u5316\uff0c\u628a\u524d\u9762\u7684\u5168\u90e8\u964d\u6210 `a`\u3002\u5269\u4e0b\u6765\u8fd8\u6709\u64cd\u4f5c\u6b21\u6570\u5c31\u5168\u90e8\u7528\u5728\u90a3\u4e2a\u4e0d\u80fd\u7684\uff0c\u53cd\u6b63\u524d\u9762\u90fd\u662f `a`\uff0c\u8fd9\u4e2a\u5b57\u7b26\u8d8a\u5c0f\uff0c\u5b57\u5178\u5e8f\u8d8a\u5c0f\u3002\n\n## Code\n\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nchar str[200005];\nint main() {\n\tint T;\n\tscanf(\"%d\", &T);\n\twhile (T--) {\n\t\tint n, k;\n\t\tscanf(\"%d%d%s\", &n, &k, str + 1);\n\t\tif (k >= 25)\n\t\t\tfor (int i = 1; i <= n; i++)\n\t\t\t\tputchar('a');\n\t\telse {\n\t\t\tbool flag = 1;\n\t\t\tchar maxx = 'a', top, bot;//\u5c0f\u4e8e\u7b49\u4e8emaxx\u7684\u5168\u90e8\u964d\u4e3aa\uff0c\u5728bot\u5230top\u4e4b\u95f4\u7684\u5168\u90e8\u964d\u4e3abot\uff0c\u9488\u5bf9\u7b2c\u4e00\u4e2a\u8981\u7206\u6b65\u6570\u7684\n\t\t\tfor (int i = 1; i <= n; i++)\n\t\t\t\tif (flag) {\n\t\t\t\t\tif (str[i] <= 'a' + k) {\n\t\t\t\t\t\tmaxx = max(maxx, str[i]);\n\t\t\t\t\t\tputchar('a');\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttop = str[i];\n\t\t\t\t\t\tbot = str[i] - k + maxx - 'a';\n\t\t\t\t\t\tputchar(bot);\n\t\t\t\t\t\tflag = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tif (str[i] <= maxx)\n\t\t\t\t\t\tputchar('a');\n\t\t\t\t\telse if (str[i] >= bot && str[i] <= top)\n\t\t\t\t\t\tputchar(bot);\n\t\t\t\t\telse\n\t\t\t\t\t\tputchar(str[i]);\n\t\t}\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1652275016,
        "uid": 182234,
        "name": "ryanright",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1675E Replace With the Previous, Minimize"
    }
]