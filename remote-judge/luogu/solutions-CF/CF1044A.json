[
    {
        "content": "\u539f\u6bd4\u8d5b\u9898\u89e3\uff1ahttps://www.cnblogs.com/nblyz2003/p/9907114.html\n\n\u9898\u610f\uff1a\u5728\u4e00\u4e2a(10 ^ 9) * (10 ^ 9)\u68cb\u76d8\u7684(1, 1)\u6709\u4e00\u4e2a\u8f66\uff0c\u9700\u8981\u8d70\u5230\u6700\u4e0a\u9762\u4e00\u884c\u3002\u73b0\u5728\u6709n\u4e2a\u7ad6\u884c\u969c\u788d\u548cm\u4e2a\u6a2a\u884c\u969c\u788d\uff0c\u7ad6\u884c\u969c\u788d\u4f1a\u6321\u4f4f\u6240\u6709\u4ecex[i]\u5217\u5230x[i] + 1\u5217\u7684\u8def\uff08\u4e24\u4e2a\u7ad6\u884c\u969c\u788d\u4e0d\u4f1a\u5728\u540c\u4e00\u5730\u65b9\uff09\uff0c\u6a2a\u884c\u969c\u788d\u4f1a\u6321\u4f4f\u7b2cx1[i]\u5230x2[i]\u5217\u4ecey[i]\u5230y[i] + 1\u7684\u8def\uff08\u4e24\u4e2a\u6a2a\u884c\u969c\u788d\u4e0d\u4f1a\u6709\u4efb\u4f55\u63a5\u89e6\uff09\uff0c\u73b0\u5728\u95ee\u4f60\u6700\u5c11\u53bb\u6389\u591a\u5c11\u969c\u788d\u4f7f\u5f97\u8f66\u80fd\u5230\u8fbe\u3002\n\n\u56e0\u4e3a\u6a2a\u884c\u969c\u788d\u4e0d\u4f1a\u76f8\u4ea4\uff0c\u4e14\u7ad6\u884c\u969c\u788d\u90fd\u662f\u6574\u884c\u7981\u6b62\u901a\u884c\u7684\uff0c\u90a3\u4e48\u53ea\u8981x1[i]\u4e0d\u662f1\u90a3\u4e48\u8fd9\u4e2a\u969c\u788di\u5c31\u4e00\u5b9a\u4e0d\u7528\u5220\u53bb\uff0c\u969c\u788di\u8981\u5220\u53bb\u4ec5\u5f53x2[i] >= x[j]\u90fd\u88ab\u5220\u9664\uff08j\u4e3a\u4f59\u4e0b\u7684\u6700\u5de6\u8fb9\u7684\u7ad6\u884c\u969c\u788d\u3002\n\n\u56e0\u4e3a\u7ad6\u884c\u969c\u788d\u662f\u6574\u884c\u90fd\u7981\u6b62\u901a\u884c\u4e14\u8d77\u70b9\u518d(1, 1)\uff0c\u90a3\u4e48\u5982\u679c\u5220\u6389\u7b2ci\u7ad6\u884c\u969c\u788d\uff0c\u6240\u6709x[j] < x[i] \u7684\u969c\u788dj\u90fd\u8981\u5220\u6389\uff0c\u4e0d\u7136\u969c\u788di\u5220\u6389\u548c\u4e0d\u5220\u6389\u4e00\u6837\u3002\n\n\u6211\u4eec\u53ea\u8981\u5c06a[i]\u6392\u4e2a\u5e8f\uff0c\u8bb0\u5f55\u6240\u6709x1[i] = 1\u7684\u969c\u788di\u7684\u53f3\u7aefx2[i]\u5e76\u6392\u5e8f\u3002\u7136\u540e\u679a\u4e3ei\u8868\u793a1\uff5ei\u7684\u7ad6\u884c\u969c\u788d\u88ab\u5220\u9664\uff0c\u7136\u540e\u53ef\u4ee5\u6c42\u5f97\u5f53\u524d\u60c5\u51b5\u4e0b\u8981\u5220\u6389\u7684\u6a2a\u884c\u969c\u788d\uff08\u6211\u7528\u4e86\u4e8c\u5206\uff09\u3002\n\n\u6ce8\uff1a\u4ee5\u4e0a\u7684\u6700\u597d\u624b\u52a8\u6a21\u62df\u3002\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <vector>\n#define rep(x, l, r) for(int x = (int)l; x <= (int)r; x++)\n#define repd(x, r, l) for(int x = (int)r; x >= (int)l; x--)\n#define clr(x,y) memset(x, y, sizeof(x))\n#define all(x) begin(x), end(x)\n#define pb push_back\n#define mp make_pair\n#define MAXN 100005\n#define fi first\n#define se second\n#define SZ(x) ((int)x.size())\nusing namespace std;\ntypedef long long LL;\ntypedef vector<int> vi;\ntypedef pair<int, int> pii;\nconst int INF = 1e9;\nconst int p = 10000007;\n//head by DYH\n\nint a[MAXN], b[MAXN];\n\nint main(){\n    int n, m;\n    scanf(\"%d%d\", &n, &m);\n    rep(i, 1, n) scanf(\"%d\", &a[i]);\n    sort(a + 1, a + n + 1);\n    a[n + 1] = INF;\n    int cnt = 0;\n    rep(i, 1, m){\n        int X0, X1, y;\n        scanf(\"%d%d%d\", &X0, &X1, &y);\n        if(X0 == 1) b[++cnt] = X1;\n    }\n    sort(b + 1, b + cnt + 1);\n    int ans = INF;\n    rep(i, 1, n + 1){\n        int id = lower_bound(b + 1, b + cnt + 1, a[i]) - b;\n        ans = min(ans, i + cnt - id);\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```",
        "postTime": 1541639746,
        "uid": 149312,
        "name": "wze\u63cd\u6241\u4e86nm",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1044A \u3010The Tower is Going Home\u3011"
    }
]