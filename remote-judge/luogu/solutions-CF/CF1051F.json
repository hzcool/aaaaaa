[
    {
        "content": "# CF1051F \u9898\u89e3\r\n\r\n\u5206\u4eab\u4e00\u4e2a\u6765\u81ea ```sjx``` \u5de8\u4f6c\u7684\u7ebf\u6027\u505a\u6cd5\uff0c\u5982\u679c\u6709\u4ec0\u4e48\u9519\u8bef\u4e4b\u5904\u656c\u8bf7\u6307\u51fa\u3002\r\n\r\n\u9898\u610f\u5c31\u4e0d\u8bf4\u4e86\uff0c\u6211\u76f4\u63a5\u8bb2\u505a\u6cd5\u3002\r\n\r\n\u9996\u5148\u5efa\u51fa\u539f\u56fe\u7684\u6700\u5c0f\u751f\u6210\u6811\uff0c\u90a3\u4e48\u4f59\u4e0b\u7684\u975e\u6811\u8fb9\u53ea\u6709\u81f3\u591a $21$ \u6761\uff0c\r\n\r\n\u6211\u4eec\u5c06\u6240\u6709\u975e\u6811\u8fb9\u7684\u5de6\u53f3\u7aef\u70b9\u8bb0\u4e3a\u5173\u952e\u70b9\uff0c\u5e76\u5c06\u8fd9\u4e9b\u5173\u952e\u70b9\u4e24\u4e24\u95f4\u7684 ```LCA``` \u4e5f\u6807\u8bb0\u6210\u5173\u952e\u70b9\u3002\r\n\r\n\u6211\u4eec\u53d1\u73b0\uff0c\u7531 ```LCA``` \u4ea7\u751f\u7684\u65b0\u5173\u952e\u70b9\u5c0f\u4e8e\u5173\u952e\u70b9\u6570\uff0c\u56e0\u4e3a\uff1a\r\n\r\n\u6211\u4eec\u5c06\u539f\u5173\u952e\u70b9\u6309 ```dfs``` \u5e8f\u5347\u5e8f\u6392\u5e8f\uff0c\u518d\u5c06\u6240\u6709\u6392\u5e8f\u540e\u76f8\u90bb\u7684\u5173\u952e\u70b9\u5bf9\u7684 `LCA` \u6807\u8bb0\u6210\u5173\u952e\u70b9\uff0c\r\n\r\n\u5bb9\u6613\u8bc1\u660e\uff0c\u8fd9\u6837\u6807\u8bb0\u540e\uff0c\u4efb\u610f\u4e24\u4e2a\u5173\u952e\u70b9\u7684 `LCA` \u90fd\u5df2\u7ecf\u662f\u5173\u952e\u70b9\u4e86\u3002\r\n\r\n\u8fd9\u4e9b\u5173\u952e\u70b9\u53ea\u6709\u4e0d\u8d85\u8fc7 $83$ \u4e2a\uff0c\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u539f\u56fe\u4e2d\u6240\u6709\u5173\u952e\u70b9\u95f4\u4efb\u610f\u4e24\u4e2a\u7684\u6700\u77ed\u8def\uff0c\r\n\r\n\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u5efa\u4e00\u4e2a\u53ea\u4e0e\u5173\u952e\u70b9\u6709\u5173\u7684\u65b0\u56fe $G'$\uff0c\r\n\r\n\u5bf9\u4efb\u610f\u4e24\u4e2a\u5173\u952e\u70b9 $u,v$ \uff0c\u6211\u4eec\u5f80 $G'$ \u4e2d\u52a0\u4e00\u6761 $u\\rightarrow v$ \u7684\u8fb9\uff0c\u6743\u4e3a\u4e24\u70b9\u5728\u751f\u6210\u5728\u6811\u4e0a\u7684\u8ddd\u79bb\u3002\r\n\r\n\u7136\u540e\uff0c\u5bf9\u4e8e\u6240\u6709\u8fde\u63a5\u4e24\u4e2a\u5173\u952e\u70b9\u7684\u975e\u6811\u8fb9\uff0c\u6211\u4eec\u5c06\u8fd9\u4e9b\u8fb9\u4e5f\u52a0\u8fdb $G'$ \u4e2d\u3002\r\n\r\n\u6211\u4eec\u5728\u8fd9\u5f20\u56fe\u4e2d\u8ba1\u7b97\u51fa\u4efb\u610f\u4e24\u70b9\u95f4\u7684\u6700\u77ed\u8def\uff0c\r\n\r\n\u5c31\u7b49\u4ef7\u4e8e\u8ba1\u7b97\u51fa\u4e86\u539f\u56fe\u4e2d\u4efb\u610f\u4e24\u4e2a\u5173\u952e\u70b9\u95f4\u7684\u6700\u77ed\u8def\u3002\r\n\r\n\u4e3a\u65b9\u4fbf\u63a5\u4e0b\u6765\u7684\u53d9\u8ff0\uff0c\u6211\u4eec\u79f0\u5173\u952e\u70b9\u4e3a\u9ed1\u70b9\uff0c\u975e\u5173\u952e\u70b9\u4e3a\u767d\u70b9\u3002\r\n\r\n\u6b64\u65f6\uff0c\u6811\u4e0a\u7684\u9ed1\u70b9\u5c06\u6240\u6709\u767d\u70b9\u5212\u5206\u6210\u4e86\u82e5\u5e72\u4e2a\u8fde\u901a\u5757\uff0c\r\n\r\n\u90a3\u4e48\u5bf9\u4e8e\u4e00\u7ec4\u8be2\u95ee $(u,v)$\uff0c\r\n\r\n\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230\u6240\u6709\u4e0e $u$ \u6240\u5728\u7684\u8fde\u901a\u5757\u63a5\u58e4\u7684\u9ed1\u70b9 $p_1,p_2,\\cdots,p_i$\uff0c\r\n\r\n\u518d\u627e\u5230\u6240\u6709\u4e0e $v$ \u6240\u5728\u7684\u8fde\u901a\u5757\u63a5\u58e4\u7684\u9ed1\u70b9 $q_1,q_2,\\cdots,q_j$\uff0c\u90a3\u4e48\u8fd9\u7ec4\u8be2\u95ee\u7684\u7b54\u6848\u5c31\u662f\uff1a\r\n\r\n$ans=\\min\\limits_{x\\in[1,i],y\\in[1,j]}dist(p_x,q_y)$\uff0c\u5176\u4e2d $dist(u,v)$ \u4ee3\u8868\u5173\u952e\u70b9\u5bf9 $u,v$ \u95f4\u7684\u6700\u77ed\u8def\u3002\r\n\r\n\u5f53\u7136\uff0c\u5982\u679c\u70b9 $u$ \u6216\u70b9 $v$ \u672c\u8eab\u5c31\u662f\u9ed1\u70b9\u7684\u8bdd\uff0c\u4e0e $u$ \u6216 $v$ \u63a5\u58e4\u7684\u9ed1\u70b9\u5c31\u53ea\u6709\u81ea\u5df1\u3002\r\n\r\n\u770b\u4e0a\u53bb\u73b0\u5728\u7684\u590d\u6742\u5ea6\u4ecd\u7136\u4e0d\u4f4e\uff0c\u4f46\u5b9e\u9645\u4e0a\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e $i,j\\in[0,2]$ \u4ee5\u4fdd\u8bc1\u590d\u6742\u5ea6\u3002\r\n\r\n\u6211\u4eec\u9700\u8981\u8bc1\u660e\u7684\uff0c\u5b9e\u9645\u4e0a\u662f\uff1a\r\n\r\n\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u767d\u70b9\u6784\u6210\u7684\u8fde\u901a\u5757 $T$\uff0c\u4e0e\u5176\u63a5\u58e4\u7684\u9ed1\u70b9\u4e0d\u8d85\u8fc7\u4e24\u4e2a\u3002\r\n\r\n\u90a3\u4e48\uff0c\u6211\u4eec\u5728\u8fd9\u4e2a\u8fde\u901a\u5757\u4e2d\u968f\u610f\u6311\u4e00\u4e2a\u70b9 $s$\uff0c\u6cbf\u7740 $s$ \u7684\u7956\u5148\u94fe\u5f80\u4e0a\u8d70\uff0c\u53ef\u4ee5\u8d70\u5230\u81f3\u591a\u4e00\u4e2a\u9ed1\u70b9\uff1b\r\n\r\n\u540c\u65f6\uff0c\u70b9 $s$ \u7684\u5b50\u6811\u4e2d\u4e0d\u53ef\u80fd\u5b58\u5728\u5927\u4e8e\u7b49\u4e8e\u4e24\u4e2a\u9ed1\u70b9\uff0c\u5426\u5219\u8fd9\u4e2a\u8fde\u901a\u5757\u4e2d\u5fc5\u7136\u5b58\u5728\u81f3\u5c11\u4e00\u4e2a\u9ed1\u70b9\uff0c\r\n\r\n\u56e0\u4e3a\u4e24\u4e2a\u9ed1\u70b9\u7684 ```LCA``` \u4e5f\u662f\u9ed1\u70b9\uff0c\u8fd9\u4e0e\u8fde\u901a\u5757\u4e2d\u5168\u662f\u767d\u70b9\u7684\u6761\u4ef6\u77db\u76fe\uff0c\r\n\r\n\u6545\u4e0e\u4e00\u4e2a\u8fde\u901a\u5757\u63a5\u58e4\u7684\u9ed1\u70b9\u4e0d\u8d85\u8fc7\u4e24\u4e2a\u3002\r\n\r\n\u90a3\u4e48\uff0c\u5bf9\u4e8e\u6bcf\u7ec4\u8be2\u95ee\uff0c\u6211\u4eec\u66b4\u529b\u7684\u8ba1\u7b97 $ans$\uff0c\u6700\u540e\u5c06 $ans$ \u548c $(u,v)$ \u5728\u6811\u4e0a\u7684\u8ddd\u79bb\u53d6 $\\min$ \u5373\u53ef\u3002\r\n\r\n\u6211\u4eec\u7528\u6811\u5256\u67e5\u8be2 `LCA`\uff0c\u7528\u4f60\u77e5\u9053\u7684\u4efb\u610f\u4e00\u79cd\u5feb\u901f\u6c42\u6700\u77ed\u8def\u65b9\u5f0f\u6c42\u5173\u952e\u70b9\u95f4\u7684\u6700\u77ed\u8def\uff0c\r\n\r\n\u800c\u6c42\u56fe\u4e2d\u7684\u6700\u5c0f\u751f\u6210\u6811\uff0c\r\n\r\n\u6211\u4eec\u53ef\u4ee5~~\u7528\u57fa\u6570\u6392\u5e8f\u6216\u8005 `tarjan` \u53d1\u660e\u7684\u968f\u673a\u6570\u636e\u671f\u671b\u7ebf\u6027\u6700\u5c0f\u751f\u6210\u6811\u7b97\u6cd5~~\u53d1\u73b0\uff0c\r\n\r\n\u5b9e\u9645\u4e0a\u6211\u4eec\u53ef\u4ee5\u7528\u56fe\u4e2d\u7684\u4efb\u610f\u4e00\u68f5\u751f\u6210\u6811\u4ee3\u66ff\uff0c\u90fd\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\u7684\u6b63\u786e\u6027\u3002\r\n\r\n\u800c\u6c42\u56fe\u4e2d\u7684\u4efb\u610f\u4e00\u68f5\u751f\u6210\u6811\uff0c\u6211\u4eec\u76f4\u63a5 `dfs` \u5373\u53ef\u3002\r\n\r\n\u8fd9\u6837\u590d\u6742\u5ea6\u5c31\u662f $O((m-n)^2\\log(m-n)+n+m)$ \u6216 $O((m-n)^3+n+m)$\uff0c\r\n\r\n\u53d6\u51b3\u4e8e\u4f60\u7684\u5168\u6e90\u6700\u77ed\u8def\u4f7f\u7528\u7684\u662f\u7acb\u65b9\u7ea7\u522b\u7684\u7b97\u6cd5\u8fd8\u662f\u5e73\u65b9\u5e26 $\\log$ \u7ea7\u522b\u7684\u7b97\u6cd5\u3002\r\n\r\n\u5f53\u7136\uff0c\u5728 $m-n$ \u5f88\u5c0f\u65f6\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u7684\u8868\u73b0\u662f\u7ebf\u6027\u7684\u3002\r\n\r\n~~\u6240\u4ee5\u7406\u8bba\u4e0a\u662f\u4e0d\u662f\u53ef\u4ee5\u51fa\u4e00\u9053\u8fb9\u6570\u51cf\u70b9\u6570\u4e3a `300`\uff0c\u8be2\u95ee\u6570\u4e3a `1e7` \u7684\u7684\u52a0\u5f3a\u7248\uff1f~~\r\n\r\n\u4ee3\u7801\u53ef\u4ee5\u5728 `CF` \u4e0a\u770b `sjx` \u7684\uff0c`ta` \u7684\u7528\u6237\u540d\u53eb `songjiaxing`\uff0c\u4ee5\u4e0b\u662f\u4ee3\u7801\u94fe\u63a5\u3002\r\n\r\n[\u4ee3\u7801\u94fe\u63a5](https://codeforces.com/contest/1051/submission/140159293)",
        "postTime": 1643944016,
        "uid": 100091,
        "name": "GaryH",
        "ccfLevel": 6,
        "title": "CF1051F \u9898\u89e3"
    },
    {
        "content": "\u89c2\u5bdf\u5230 $m-n\\le 20$\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u641e\u51fa\u6765\u4e00\u68f5\u751f\u6210\u6811\uff0c\u7136\u540e\u5c06\u975e\u6811\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u6807\u8bb0\u4e3a\u7279\u6b8a\u70b9\uff0c\u800c\u8fd9\u4e9b\u7279\u6b8a\u70b9\u7684\u4e2a\u6570\u4e0d\u8d85\u8fc7 $42$\u3002\n\n\u5219 $u$ \u5230 $v$ \u7684\u6700\u77ed\u8def\u5206\u4e24\u79cd\u60c5\u51b5\uff0c\u4e0d\u7ecf\u8fc7\u975e\u6811\u8fb9\u548c\u7ecf\u8fc7\u975e\u6811\u8fb9\u3002\n\n\u5bf9\u4e8e\u4e0d\u7ecf\u8fc7\u975e\u6811\u8fb9\u7684\u60c5\u51b5\uff0c\u76f4\u63a5\u7528 `lca` \u6c42\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u7ecf\u8fc7\u975e\u6811\u8fb9\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u679a\u4e3e $u$ \u5230 $v$ \u7684\u6700\u77ed\u8def\u8981\u7ecf\u8fc7\u54ea\u4e2a\u7279\u6b8a\u70b9\uff0c\u5219\u5bf9\u4e8e\u7279\u6b8a\u70b9 $k$\uff0c\u5219$dis_{u,v}=\\min\\limits_{k=1}^{2\\times(m-n+1)}dis_{u,k}+dis_{k,v}$\n\n\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u7279\u6b8a\u70b9\u5230\u5176\u4ed6\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u5373\u53ef\uff0c\u7528 `Dijkstra` \u5b9e\u73b0\u3002\n\n\u6700\u540e\uff0c\u5bf9\u4e24\u79cd\u60c5\u51b5\u53d6\u4e2a `min` \u5373\u53ef\u3002\n\n~~\u4e5f\u5c31\u6211\u4f1a\u5199\u5f97\u5982\u6b64\u8fc7\u5ea6\u5c01\u88c5\u3002\u3002~~\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cctype>\n#include<cstring>\n#include<queue>\n#include<vector>\n\nusing namespace std;\n\n#define INF 1000000000000000000ll\n#define pprint(x) print(x),putchar(' ')\n#define fprint(x) print(x),putchar('\\n')\n\n//#define getchar() (SS == TT && (TT = (SS = BB) + fread(BB,1,1 << 15,stdin),TT == SS) ? EOF : *SS++)\nchar BB[1 << 15],*SS = BB,*TT = BB;\ninline long long read()\n{\n\tlong long x = 0;int f = 1;\n\tchar ch = getchar();\n\tfor(;!isdigit(ch);ch = getchar())\n\t\tif(ch == '-')\n\t\t\tf = -1;\n\tfor(;isdigit(ch);ch = getchar())\n\t\tx = x * 10 + (ch ^ 48);\n\treturn x * f;\n}\nvoid print(long long x)\n{\n\tif(x < 0)\n\t\tputchar('-'),x = -x;\n\tif(x > 9)\n\t\tprint(x / 10);\n\tputchar(x % 10 + '0');\n}\n\nconst int N = 100100;\n\nstruct edge\n{\n\tint to,nxt,w;\n};\n\n#define EE; edge e[N << 1];\\\n\tint head[N],cnt;\\\n\tvoid add(int u,int v,int w)\\\n\t{\\\n\t\te[++cnt].w = w,e[cnt].to = v,e[cnt].nxt = head[u];\\\n\t\thead[u] = cnt;\\\n\t}\\\n\tvoid add_edge(int u,int v,int w)\\\n\t{\\\n\t\tadd(u,v,w),add(v,u,w);\\\n\t}\n\nint n;\n\nstruct Tree\n{\n\tEE;\n\tint f[N][20],dep[N];\n\tlong long dis[N];\n\tvoid dfs(int u,int fa)\n\t{\n\t\tf[u][0] = fa,dep[u] = dep[fa] + 1;\n\t\tfor(int i = head[u];i;i = e[i].nxt)\n\t\t{\n\t\t\tint v = e[i].to;\n\t\t\tif(v == fa)\n\t\t\t\tcontinue;\n\t\t\tdis[v] = dis[u] + e[i].w;\n\t\t\tdfs(v,u);\n\t\t}\n\t}\n\tvoid init()\n\t{\n\t\tdfs(1,0);\n\t\tfor(int j = 1;j < 20;j++)\n\t\t\tfor(int i = 1;i <= n;i++)\n\t\t\t\tf[i][j] = f[f[i][j - 1]][j - 1];\n\t}\n\tint LCA(int u,int v)\n\t{\n\t\tif(dep[u] < dep[v])\n\t\t\tswap(u,v);\n\t\tint h = dep[u] - dep[v];\n\t\tfor(int i = 19;~i;i--) if(h & (1 << i)) u = f[u][i];\n\t\tif(u == v) return u;\n\t\tfor(int i = 19;~i;i--) if(f[u][i] ^ f[v][i]) u = f[u][i],v = f[v][i];\n\t\treturn f[u][0];\n\t}\n\tlong long Dis(int u,int v){ return dis[u] + dis[v] - 2 * dis[LCA(u,v)]; }\n}T;\n\nbool book[N];\nvector<int> s;\n\nstruct Graph\n{\n\tEE;\n\tvector<long long> dis[N];\n\tbool vis[N];\n\tpriority_queue<pair<long long,int> > q;\n\tvoid Dij(int S)\n\t{\n\t\tvector<long long> &d = dis[S];\n\t\tmemset(vis,0,sizeof(vis));\n\t\td.resize(n + 1);\n\t\tfor(int i = 1;i <= n;i++)\n\t\t\td[i] = INF;\n\t\td[S] = 0,q.push(make_pair(0,S));\n\t\twhile(!q.empty())\n\t\t{\n\t\t\tpair<long long,int> x = q.top();q.pop();\n\t\t\tint u = x.second;\n\t\t\tif(vis[u])\n\t\t\t\tcontinue;\n\t\t\tvis[u] = 1;\n\t\t\tfor(int i = head[u];i;i = e[i].nxt)\n\t\t\t{\n\t\t\t\tint v = e[i].to;\n\t\t\t\tif(d[u] + e[i].w < d[v])\n\t\t\t\t\td[v] = d[u] + e[i].w,q.push(make_pair(-d[v],v));\n\t\t\t}\n\t\t}\n\t}\n\tvoid init()\n\t{\n\t\tfor(auto i:s)\n\t\t\tDij(i);\n\t}\n}G;\n\nint fa[N];\nint getf(int u){ return fa[u] == u ? u : fa[u] = getf(fa[u]); }\nvoid merge(int u,int v){ fa[getf(u)] = fa[getf(v)]; }\n\nvoid init()\n{\n\tn = read();\n\tint m = read();\n\tfor(int i = 1;i <= n;i++)\n\t\tfa[i] = i;\n\tfor(int i = 1;i <= m;i++)\n\t{\n\t\tint u = read(),v = read(),w = read();\n\t\tG.add_edge(u,v,w);\n\t\tif(getf(u) != getf(v))\n\t\t\tmerge(u,v),T.add_edge(u,v,w);\n\t\telse\n\t\t{\n\t\t\tif(!book[u]) s.push_back(u);\n\t\t\tif(!book[v]) s.push_back(v);\n\t\t\tbook[u] = book[v] = 1;\n\t\t}\n\t}\n\tT.init(),G.init();\n}\n\nint main()\n{\n\tinit();\n\tint q = read();\n\twhile(q--)\n\t{\n\t\tint u = read(),v = read();\n\t\tlong long ans = T.Dis(u,v);\n\t\tfor(int i:s)\n\t\t\tans = min(ans,G.dis[i][u] + G.dis[i][v]);\n\t\tfprint(ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1584541447,
        "uid": 53994,
        "name": "81179332_",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1051F \u3010The Shortest Statement\u3011"
    },
    {
        "content": "\u6ce8\u610f\u5230 $m-n\\leq 20$\u3002\u6240\u4ee5\u4e8b\u5b9e\u4e0a\u9898\u76ee\u7ed9\u51fa\u7684\u56fe $G$ \u662f\u4e00\u68f5\u751f\u6210\u6811 $T$ \u52a0\u4e0a $m-n+1$ \u6761\u8fb9\u3002\n\n\u5728\u8fd9\u79cd\u56fe\u4e0a\u6c42\u6700\u77ed\u8def\uff0c\u5305\u62ec\u4e24\u4e2a\u90e8\u5206\uff0c\u5168\u5728 $T$ \u4e0a\u7684\u6700\u77ed\u8def\u548c\u7ecf\u8fc7\u4e00\u4e9b\u975e\u6811\u8fb9\u7684\u6700\u77ed\u8def\u3002\u7ecf\u8fc7\u975e\u6811\u8fb9\u7684\u6700\u77ed\u8def\uff0c\u53ef\u4ee5\u66b4\u529b\u6c42\u51fa\uff0c\u56e0\u4e3a\u53ea\u4f1a\u6709\u4e0d\u8d85\u8fc7 $2(m-n+1)$ \u4e2a\u70b9\uff0c\u8fd9\u90e8\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(2(m-n+1) \\log n)$\u3002\u5168\u5728 $T$ \u4e0a\u7684\u6700\u77ed\u8def\uff0c\u5c31\u662f\u6811\u4e0a\u4e24\u70b9\u95f4\u8ddd\u79bb\uff0c\u56e0\u4e3a\u6811\u4e0a\u4e24\u70b9\u95f4\u6709\u4e14\u4eca\u591c\u4e00\u6761\u7b80\u5355\u8def\u5f84\uff0c\u8fd9\u90e8\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n+n \\log n)$\uff0c\u5176\u4e2d $O(n \\log n)$ \u4e3a\u500d\u589e\u6c42 $\\text{lca}$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n\n\u90a3\u4e48\u6700\u7ec8\u4efb\u610f\u4e24\u70b9 $x,y$ \u7684\u6700\u77ed\u8def\u4e3a\u6811\u4e0a\u8ddd\u79bb\u548c\u975e\u6811\u8fb9\u6700\u77ed\u8def\u7684\u503c\u53d6 $\\max$\u3002\u975e\u6811\u8fb9\u6700\u77ed\u8def $dis(x,y)=\\min_{i\\in S}\\{dis(x,i)+dis(i,y)\\}$\uff0c\u5176\u4e2d $S$ \u4e3a \u6240\u6709\u975e\u6811\u8fb9\u7684\u4e24\u4e2a\u9876\u70b9\u6784\u6210\u7684\u70b9\u96c6\u3002\u65e0\u5411\u56fe\u4e0a $dis(i,y)=dis(y,i)$\uff0c\u6240\u4ee5 $dis(x,y)=\\min_{i\\in S}\\{dis(i,x)+dis(i,y)\\}$\u3002\u90a3\u4e48\u9884\u5904\u7406 $S$ \u4e2d\u7684\u6bcf\u4e2a\u70b9\u5230\u5176\u4ed6\u70b9\u7684\u6700\u77ed\u8def\uff0c\u4f7f\u7528 $\\text{dijistra}$ \u5b9e\u73b0\u5373\u53ef\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(2(m-n+1) \\log n+n \\log n)$\u3002\n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<queue>\n#include<algorithm>\ntypedef long long ll;\nconst ll inf=1e14;\nint cnt=0;\nstruct edge {int x,y,w;} e[100105]; \nstd::vector<int> vec; \nstd::vector<int> v[100005],val[100005];\nll dis[45][100005],sum[100005];\nint fa[100005],dep[100005],vis[100005],h[100005],to[200005],ver[200005],w[200005],f[100005][25]; \ninline int read() {\n\tregister int x=0,f=1;register char s=getchar();\n\twhile(s>'9'||s<'0') {if(s=='-') f=-1;s=getchar();}\n\twhile(s>='0'&&s<='9') {x=x*10+s-'0';s=getchar();}\n\treturn x*f;\n}\ninline void add(int x,int y,int z) {to[++cnt]=y;ver[cnt]=h[x];w[cnt]=z;h[x]=cnt;}\ninline ll min(const ll &x,const ll &y) {return x<y? x:y;}\ninline int find(int x) {return x==fa[x]? x:fa[x]=find(fa[x]);}\ninline void swap(int &x,int &y) {int tmp=y;y=x;x=tmp;}\ninline bool cmp(const edge &x,const edge &y) {return x.w<y.w;}\ninline void prework(int x) {\n\tfor(register int i=1;i<=20;++i) f[x][i]=f[f[x][i-1]][i-1];\n\tfor(register int i=h[x];i;i=ver[i]) {int y=to[i]; if(y==f[x][0]) continue; f[y][0]=x; sum[y]=sum[x]+w[i]; dep[y]=dep[x]+1; prework(y);}\n}\ninline int LCA(int x,int y) {\n\tif(dep[x]<dep[y]) swap(x,y);\n\tfor(register int i=20;i>=0;--i) if(dep[f[x][i]]>=dep[y]) x=f[x][i]; if(x==y) return x;\n\tfor(register int i=20;i>=0;--i) if(f[x][i]!=f[y][i]) x=f[x][i],y=f[y][i]; return f[x][0];\n}\ninline void dijistra(int n,int id) {\n\tfor(register int i=1;i<=n;++i) vis[i]=0,dis[id][i]=inf;\n\tstd::priority_queue<std::pair<ll,int> > Q;\n\tdis[id][vec[id]]=0ll; Q.push(std::make_pair(0,vec[id]));\n\twhile(Q.size()) {\n\t\tint x=Q.top().second; Q.pop();\n\t\tif(vis[x]) continue; vis[x]=1;\n\t\tfor(register int i=0;i<v[x].size();++i) {int y=v[x][i]; if(dis[id][y]>dis[id][x]+val[x][i]) {dis[id][y]=dis[id][x]+val[x][i]; Q.push(std::make_pair(-dis[id][y],y));}}\n\t}\n}\nint main() {\n\tint n=read(),m=read();\n\tfor(register int i=1;i<=n;++i) fa[i]=i;\n\tfor(register int i=1;i<=m;++i) {\n\t\te[i].x=read();e[i].y=read();e[i].w=read();\n\t\tv[e[i].x].push_back(e[i].y); val[e[i].x].push_back(e[i].w);\n\t\tv[e[i].y].push_back(e[i].x); val[e[i].y].push_back(e[i].w);\n\t}\n\tstd::sort(e+1,e+1+m,cmp);\n\tfor(register int i=1;i<=m;++i) {\n\t\tint fx=find(e[i].x),fy=find(e[i].y);\n\t\tif(fx!=fy) {add(e[i].x,e[i].y,e[i].w);add(e[i].y,e[i].x,e[i].w);fa[fx]=fy;}\n\t\telse {vec.push_back(e[i].x);vec.push_back(e[i].y);}\n\t}\n\tfor(register int i=0;i<vec.size();++i) dijistra(n,i);\n\tint Q=read(); prework(1);\n\twhile(Q--) {\n\t\tint s=read(),t=read(); ll res=sum[s]+sum[t]-2*sum[LCA(s,t)];\n\t\tfor(register int i=0;i<vec.size();++i) res=min(res,dis[i][s]+dis[i][t]);\n\t\tprintf(\"%lld\\n\",res);\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1602238795,
        "uid": 95244,
        "name": "tommymio",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1051F \u3010The Shortest Statement\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898~~\u6bd2\u7624\u81f3\u6781~~\u7279\u522b\u597d\n\n\u9898\u610f\uff1a\n\n\u5df2\u77e5\u4e00\u4e2an\u70b9m\u8fb9\u7684\u65e0\u5411\u56fe\uff0cq\u6b21\u8be2\u95ee\uff0c\u6c42\u4efb\u610f\u4e24\u70b9\u7684\u6700\u77ed\u8def\n\n\u9996\u5148\u6211\u4eec\u5f97\u660e\u767d\uff0c\u6bcf\u6b21\u8dd1\u6700\u77ed\u8def\u94c1\u5b9a\u8d85\u65f6\n\n\u4f46\u662f\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u7279\u6b8a\u6761\u4ef6\uff1a**m-n<=20**\uff0c\u6211\u4eec\u5f97\u597d\u597d\u5229\u7528\n\n\u5148\u8dd1kruskal\u5efa\u6700\u5c0f\u751f\u6210\u6811\uff0c\u7136\u540e\u6811\u4e0a\u6c42\u6700\u77ed\u8def\u5c31\u5f88\u7701\u65f6\u4e86\n\n\u4f46\u662f\u6709\u4e2a\u95ee\u9898\uff0c\u5efa\u5b8c\u6811\u540e\u90a3\u5269\u4e0b20\u591a\u6761\u8fb9\u600e\u4e48\u529e\u5462\uff1f\n\n\u8fd9\u5c31\u6ca1\u6709\u6377\u5f84\u4e86\uff0c\u627e\u51fa\u6bcf\u6761\u6ca1\u7528\u8fc7\u7684\u8fb9\uff0c\u8bb0\u5f55\u4e24\u8fb9\u8282\u70b9u\uff0cv\uff0c\u5206\u522b\u5728\u539f\u56fe\u8dd1\u6700\u77ed\u8def\n\n\u8fd9\u6837\uff0c\u5c31\u5f97\u51fa\u4ed6\u4eec\u5230\u6bcf\u4e2a\u70b9\u7684\u6700\u77ed\u8defp[u][i]\uff0c40\u591a\u6b21\u603b\u6bd4n\u6b21\u597d\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u67e5\u8be2\uff0c\u5148\u6811\u4e0a\u8dd1\u6700\u77ed\u8def\uff08\u7528lca\uff09\uff0c\u518d\u5728\u6bcf\u4e2a\u5148\u524d\u8bb0\u5f55\u7684\u70b9\u4e0a\u8fdb\u884c\u6bd4\u8f83\uff08\u56e0\u4e3a\u6700\u77ed\u8def\u53ef\u80fd\u4e0d\u5728\u6811\u4e0a\uff09\n\n\u8fd9\u6837\uff0cdis(u,v)=min(tree_dis(u,v),p[i][u]+p[i][v]);\n\n\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\n#define ll long long\nusing namespace std;\ntypedef pair<ll,int>pii;\npriority_queue<pii,vector<pii>,greater<pii> >q;\nint n,m,t,h[100010],p[100010][30],f[100010],k,k1,vis[100010],h1[100010];\nint mp[100010],pos;\nll d[100010],dis[100010],dis1[110][100010];\nstruct node{\n\tint u;\n\tint v;\n\tll w;\n\tbool used;//\u662f\u5426\u7528\u8fc7\n}ee[400010];//\u5b58\u539f\u6765\u7684\u8fb9\nstruct ndde{\n\tint v;\n\tll w;\n\tint nex;\n}e[400010];//\u5b58\u6700\u5c0f\u751f\u6210\u6811\nstruct ndoe{\n\tint v;\n\tll w;\n\tint nex;\n}eee[400010];//\u5b58\u539f\u56fe\nvoid add(int u,int v,ll w)\n{\n\te[++k].v=v;\n\te[k].w=w;\n\te[k].nex=h[u];\n\th[u]=k;\n}\nvoid add1(int u,int v,ll w)\n{\n\teee[++k1].v=v;\n\teee[k1].w=w;\n\teee[k1].nex=h1[u];\n\th1[u]=k1;\n}\nint find(int x)\n{\n\tif(f[x]==x)\n\treturn x;\n\treturn f[x]=find(f[x]);\n}\nvoid kruskal()//\u6700\u5c0f\u751f\u6210\u6811\n{\n\tint cnt=0;\n\tfor(int i=1;i<=n;i++)\n\tf[i]=i;\n\tfor(int i=1;i<=m&&cnt<n-1;i++)\n\t{\n\t\tint fx=find(ee[i].u),fy=find(ee[i].v);\n\t\tif(f[fx]!=fy)\n\t\t{\n\t\t\tcnt++;\n\t\t\tee[i].used=1;\n\t\t\tf[fx]=fy;\n\t\t\tadd(ee[i].u,ee[i].v,ee[i].w);\n\t\t\tadd(ee[i].v,ee[i].u,ee[i].w);\n\t\t}\n\t}\n}\nvoid dij(int st)//\u6700\u77ed\u8def\n{\n\twhile(!q.empty())\n\tq.pop();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tdis1[mp[st]][i]=1e17;\n\t\tvis[i]=0;\n\t}\n\tdis1[mp[st]][st]=0;\n\tq.push(make_pair(dis1[mp[st]][st],st));\n\twhile(!q.empty())\n\t{\n\t\tint u=q.top().second;\n\t\tq.pop();\n\t\tif(vis[u])\n\t\tcontinue;\n\t\tvis[u]=1;\n\t\tfor(int i=h1[u];i;i=eee[i].nex)\n\t\t{\n\t\t\tint v=eee[i].v,w=eee[i].w;\n\t\t\tif(dis1[mp[st]][v]>dis1[mp[st]][u]+w)\n\t\t\t{\n\t\t\t\tdis1[mp[st]][v]=dis1[mp[st]][u]+w;\n\t\t\t\tq.push(make_pair(dis1[mp[st]][v],v));\n\t\t\t}\n\t\t}\n\t}\n}\nvoid dfs(int u,int fa)\n{\n\td[u]=d[fa]+1;\n\tp[u][0]=fa;\n\tfor(int i=1;i<=20;i++)\n\tp[u][i]=p[p[u][i-1]][i-1];\n\tfor(int i=h[u];i;i=e[i].nex)\n\t{\n\t\tint v=e[i].v;\n\t\tif(v==fa) continue;\n\t\tdis[v]=dis[u]+e[i].w;\n\t\tdfs(v,u);\n\t}\n}\nint lca(int u,int v)//lca\u6a21\u677f\n{\n\tif(d[u]>d[v])\n\tswap(u,v);\n\tfor(int i=20;i>=0;i--)\n\tif(d[u]<=d[v]-(1<<i))\n\tv=p[v][i];\n\tif(u==v)\n\treturn u;\n\tfor(int i=20;i>=0;i--)\n\t{\n\t\tif(p[u][i]==p[v][i]) continue;\n\t\tu=p[u][i];\n\t\tv=p[v][i];\n\t}\n\treturn p[u][0];\n}\nll dist(int u,int v)\n{\n\treturn dis[u]+dis[v]-2*dis[lca(u,v)];//\u6811\u4e0a\u8ddd\u79bb\n}\nll dista(int u,int v)\n{\n\tll ans=dist(u,v);\n\tfor(int i=1;i<=pos;i++)\n\t{\n\t\tans=min(ans,dis1[i][u]+dis1[i][v]);\n\t\tans=min(ans,dis1[i][u]+dis1[i][v]);\n\t}\n\treturn ans;\n}\nbool cmp(node xx,node yy)\n{\n\treturn xx.w<yy.w;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint a,b;\n\t\tll c;\n\t\tscanf(\"%d%d%lld\",&a,&b,&c);\n\t\tee[i].u=a;\n\t\tee[i].v=b;\n\t\tee[i].w=c;\n\t\tadd1(a,b,c);\n\t\tadd1(b,a,c);\n\t}\n\tsort(ee+1,ee+m+1,cmp);\n\tkruskal();\n\tfor(int i=1;i<=m;i++)\n\tif(!ee[i].used)\n\t{\n\t\tif(!mp[ee[i].u])\n\t\tmp[ee[i].u]=++pos;//\u56e0\u4e3au\uff0cv\u53ef\u80fd\u5f88\u5927\uff0c1e5*1e5\u5b58\u4e0d\u4e0b\uff0c\u6240\u4ee5\u7528\u4e00\u4e2a\u6570\u7ec4mp\u6620\u5c04\n\t\tif(!mp[ee[i].v])\n\t\tmp[ee[i].v]=++pos;\n\t\tdij(ee[i].u);\n\t\tdij(ee[i].v);\n\t}\n\tdfs(1,0);\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint a,b;\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tprintf(\"%lld\\n\",dista(a,b));\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1563872412,
        "uid": 103029,
        "name": "James_Brady",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1051F \u3010The Shortest Statement\u3011"
    },
    {
        "content": "\u849f\u84bb\u7684\u7b2c\u4e00\u9053\u9ed1\u9898\u5c45\u7136\u662f\u56fe\u8bba23333\uff08\u5176\u5b9e\u8fd9\u9053\u9898\u6839\u672c\u6ca1\u6709\u9ed1\u9898\u96be\u5ea6\uff09\n\u8fd9\u9053\u9898\u65f6\u96504000ms\u4f46\u662f\u6bcf\u6b21\u8be2\u95ee\u8dd1\u4e00\u6b21\u6700\u77ed\u8def\u663e\u7136\u662f\u4e0d\u884c\u7684\n\n\u6ce8\u610fm-n<=20,\u8fd9\u4fbf\u662f\u8fd9\u9053\u9898\u7684\u5207\u5165\u70b9\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u662f\u5728\u4e00\u68f5\u6811\u4e0a\u52a0\u4e86\u4e00\u4e9b\u975e\u6811\u8fb9\uff0c\u90a3\u4e48\u5c31\u597d\u5f04\u4e86\uff0c\u5bf9\u4e8e\u591a\u51fa\u6765\u7684\u8fd921\u6761\u8fb9\u8dd1\u6700\u77ed\u8def\uff0c\u5bf9\u4e8e\u6bcf\u7ec4\u8be2\u95ee\uff0clca\u8def\u5f84\u7684\u503c\u4e0e\u7ecf\u8fc7\u8fd921\u6761\u8fb9\u7684\u8def\u5f84\u53d6min\u5373\u53ef\n#### first\n\u6211\u4eec\u628a\u6811\u62ce\u51fa\u6765\uff0ckruskal\u5373\u53ef\uff1b\n#### second \nlca\u5904\u7406\uff1b\n#### third \n\u6700\u77ed\u8def\u5904\u7406\uff1b\n#### last \n\u8be2\u95ee\uff1b\n\n\uff08\u6ce8\u610f\u8fb9\u6743\u5f88\u5927\u8981\u5f00longlong\uff01\uff01\uff01\uff0c\u88ab\u5361\u597d\u4e45\uff09\n\u7136\u540e\u5c31A\u6389\u4e86\u4e00\u9053\u9ed1\u9898233333\n\u6700\u540e\u653eAC\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define _ 0//\u5356\u840c\u4e13\u7528\n#define clear(a,val) memset(a,val,sizeof(a))\nusing namespace std;\ntypedef long long ll;\n//////////////////////////////////////////////\nconst ll M=2*111111;//\u6570\u7ec4\u5f00\u5927\u70b9\nll n,m,cnt=1,u,v,w,q,op;\nll ff[M],head[M],f[M][30],deep[M];\nll distan[M],dis[100][M];\nstruct apple{ll u,v,w;}ee[M];\nstruct orange{\n\tll pos,dis;\n\torange(ll pos,ll dis):pos(pos),dis(dis){}\t\n};\nbool operator<(orange a,orange b){return a.dis>b.dis;}\nstruct lemon{\n\tll from,nxt,to,val;\n\tlemon(ll from=0,ll nxt=0,ll to=0,ll val=0):from(from),nxt(nxt),to(to),val(val){}\n}edge[M];\nbool fl[M],vis[M],used[M];\n////////////////////////////////////////\nbool cmp(apple a,apple b){return a.w!=b.w?a.w<b.w:a.u>b.u;}\nll find(ll a){return ff[a]==a?a:ff[a]=find(ff[a]);}\ninline void add(ll u,ll v,ll w)\n\t{edge[cnt]=lemon(u,head[u],v,w),head[u]=cnt++;}\nvoid kruskal()\n{\n\tll fa,fb;\n\tfor(ll i=1;i<=n;i++)ff[i]=i;\n\tsort(ee+1,ee+m+1,cmp);\n\tfor(ll i=1;i<=m;i++)\n\t{\n\t\tfa=find(ee[i].u),fb=find(ee[i].v);\n\t\tif(fa!=fb)\n\t\t\tff[fa]=fb,add(ee[i].u,ee[i].v,ee[i].w),add(ee[i].v,ee[i].u,ee[i].w);\n\t\telse fl[i]=1;\n\t}\t\t\n}\nvoid init()\n{\n\tclear(head,-1),clear(dis,0x7f);\n\tscanf(\"%lld%lld\",&n,&m);\n\tfor(ll i=1;i<=m;i++)\n\t\tscanf(\"%lld%lld%lld\",&ee[i].u,&ee[i].v,&ee[i].w);\n}\npriority_queue<orange>Q;\nvoid dij(ll oop,ll st)\n{\n\tclear(vis,0);\n\tdis[oop][st]=0;\n\tQ.push(orange(st,dis[oop][st]));\n\twhile(!Q.empty())\n\t{\n\t\torange now=Q.top();Q.pop();\n\t\tll u=now.pos;\n\t\tif(vis[u])continue;vis[u]=1;\n\t\tfor(ll i=head[u];i!=-1;i=edge[i].nxt)\n\t\t{\n\t\t\tll to=edge[i].to;\n\t\t\tif(dis[oop][to]>dis[oop][u]+edge[i].val)\n\t\t\t{\n\t\t\t\tdis[oop][to]=dis[oop][u]+edge[i].val;\n\t\t\t\tQ.push(orange(to,dis[oop][to]));\n\t\t\t}\n\t\t}\n\t}\n}\nvoid Misaki()\n{\n\tfor(ll i=1;i<=m;i++)\n\t\tif(fl[i])\n\t\t\tadd(ee[i].u,ee[i].v,ee[i].w),add(ee[i].v,ee[i].u,ee[i].w);\n\tfor(ll i=1;i<=m;i++)\n\t\tif(fl[i])\n\t\t{\n\t\t\tdij(++op,ee[i].u);\n\t\t\tdij(++op,ee[i].v);\n\t\t}\n}\nll lca(ll x,ll y)\n{\n\tif(deep[x]<deep[y])swap(x,y);\n\tfor(ll i=20;i>=0;i--)\n\t\tif(deep[f[x][i]]>=deep[y])\n\t\t\tx=f[x][i];\n\tif(x==y)return x;\n\tfor(ll i=20;i>=0;i--)\n\t\tif(f[x][i]!=f[y][i])\n\t\t\tx=f[x][i],y=f[y][i];\n\treturn f[x][0];\n}\nvoid ask()\n{\n\tll u,v,ans;\n\tscanf(\"%lld\",&q);\n\tfor(ll i=1;i<=q;i++)\n\t{\n\t\tscanf(\"%lld%lld\",&u,&v);\n\t\tll ances=lca(u,v);\n\t\tans=distan[u]+distan[v]-2*distan[ances];//\u4e0d\u8981\u628aans\u8d4b\u62102147483647\u4ec0\u4e48\u7684\uff0c\u4f1a\u88ab\u5361\t\n\t\tfor(ll i=1;i<=op;i++)\n\t\t\tans=min(dis[i][u]+dis[i][v],ans);\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n}\nvoid dfs(ll now)\n{\n\tused[now]=1;\n\tfor(ll i=head[now];i!=-1;i=edge[i].nxt)\n\t{\n\t\tll to=edge[i].to;\n\t\tif((!used[to]) && (to!=now))\n\t\t\tdistan[to]=distan[now]+edge[i].val,\n\t\t\tdeep[to]=deep[now]+1,\n\t\t\tf[to][0]=now,\n\t\t\tdfs(to);\n\t}\n}\nvoid ddfs()\n{\n\tfor(ll i=1;i<=n;i++)\n\t\tif(!used[i])\n\t\t\tdeep[i]=1,dfs(i);\n\tfor(ll j=1;j<=20;j++)\n\t\tfor(ll i=1;i<=n;i++)\n\t\t\tf[i][j]=f[f[i][j-1]][j-1];\n}\nint main()\n{\n\tinit();\t\n\tkruskal();//\u6700\u5c0f\u751f\u6210\u6811\n\tddfs();//lca\u90e8\u5206\n\tMisaki();//\u6700\u77ed\u8def\n\task();//\u8be2\u95ee\n\treturn ~~(0^_^0);//\u5356\u840cQAQ\n}\n```\n\u6b64\u9898\u4e0d\u96be\uff0c\u4f46\u662f\u8fd8\u662f\u975e\u5e38\u9002\u5408\u7ec3\u7801\u529b\uff0c\u590d\u4e60\u5404\u79cd\u7b97\u6cd5\u7684\uff0c\u795d\u5927\u5bb6NOIPrp++\n",
        "postTime": 1541223195,
        "uid": 120950,
        "name": "\u6d45\u591c_MISAKI",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1051F \u3010The Shortest Statement\u3011"
    },
    {
        "content": "\u539f\u9898\u7684 undirected **connected** graph \u4e2d\u7684 **connected** \u662f\u6709\u52a0\u7c97\u7684\uff0c\u800c\u4e14\u8fd9\u9053\u9898\u7684\u6570\u636e\u8303\u56f4\u6709\u7279\u610f\u7ed9\u4e86 $m - n \\le 20$\uff0c\u5f88\u81ea\u7136\u5730\u8054\u60f3\u5230\u4e0e\u6811\u6709\u5173\u7cfb\u3002\n\n\u9996\u5148\u5bf9\u4e8e $m = n - 1$ \u7684\u6811\uff0c\u6bd4\u8f83\u5bb9\u6613\u89e3\u51b3\u3002\u53ef\u4ee5\u8003\u8651\u7ef4\u62a4\u4e00\u4e2a\u524d\u7f00\u548c $h$\uff0c$h_v$ \u8868\u793a\u4ece\u6839\u8282\u70b9\u5230 $v$ \u53f7\u70b9\u7684\u8ddd\u79bb\u3002\u524d\u7f00\u548c\u53ef\u4ee5\u5728\u4e00\u6b21 DFS \u4e2d\u6c42\u51fa\u3002\u4e4b\u540e\uff0c\u5bf9\u4e8e\u6811\u4e0a\u4efb\u610f\u7684\u4e24\u70b9 $u, v$\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u6700\u77ed\u8def\uff08\u4e0b\u6587\u7b80\u5199\u4e3a $dis(u,v)$\uff09\u5c31\u662f $u \\rightarrow Lca(u, v) \\rightarrow v$ \u8fd9\u6761\u8def\uff08\u5176\u4e2d $Lca(u, v)$ \u8868\u793a $u, v$ \u4e24\u70b9\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\uff0c\u53ef\u4ee5\u4f7f\u7528\u500d\u589e $\\log n$ \u6c42\u5f97\uff09\u957f\u5ea6\u5c31\u662f $h_u - h_{Lca(u,v)} + h(v) - h_{Lca(u,v)}$\u3002\n\n\u8bd5\u7740\u5c06 $m$ \u53d8\u5927\u3002\u5f53 $m = n$ \u65f6\uff0c\u6bd4\u8d77\u6811\u6765\u8bf4\u591a\u4e00\u6761\u8fb9\uff0c\u6211\u4eec\u8bbe\u8fd9\u6761\u8fb9\u4ece\u8fde\u63a5 $x$ \u548c $y$\uff0c\u957f\u5ea6\u4e3a $z$\u3002\u90a3\u4e48 $u, v$ \u4e4b\u95f4\u7684\u8def\u5c31\u591a\u4e86\u597d\u591a\u6761\u8def\u3002\u901a\u8fc7~~\u76f4\u89c9~~\u601d\u8003\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u5bf9 $dis(u,v)$ \u6709\u8d21\u732e\u7684\u8def\u53ea\u6709 $u \\rightarrow x \\rightarrow y \\rightarrow v$ \u548c $u \\rightarrow y \\rightarrow x \\rightarrow v$ \u8fd9\u4e24\u6761\u8def\uff0c\u957f\u5ea6\u5206\u522b\u4e3a $dis(u,x)+z+dis(v,y)$ \u548c $dis(v,x)+z+dis(u,y)$\u3002\u4e0e\u539f\u6765\u7684\u957f\u5ea6\u4f5c\u6bd4\u8f83\uff0c\u6bcf\u6b21\u8be2\u95ee\u65f6\u53d6\u4e09\u8005\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\u518d\u5c06 $m$ \u6269\u5927\u3002\u8fd9\u65f6\u5019\u6811\u4e0a\u5c31\u51fa\u73b0\u4e86 $(m-n+1)$ \u6761\u975e\u6811\u8fb9\uff0c\u8fd9\u65f6\u5019\uff0c$u$ \u5230 $v$ \u7684\u8def\u5c31\u66f4\u591a\u4e86\u3002\n\n\u8003\u8651\u679a\u4e3e\u8fd9\u4e2a\u8def\u5f84\u7ecf\u8fc7\u7684\u67d0\u4e00\u70b9 $i$\uff0c\u628a\u8fd9\u6761\u8def\u5f84\u62c6\u5206\u6210 $u \\rightarrow i$ \u548c $i \\rightarrow v$ \u4e24\u90e8\u5206\u3002\u90a3\u8fd9\u4e2a $i$ \u4f1a\u662f\u4ec0\u4e48\u503c\uff0c\u624d\u5bf9\u66f4\u65b0 $dis(u,v)$ \u6709\u8d21\u732e\u5462\uff1f\n\n\u8d2a\u5fc3\u5730\u60f3\u5230\uff0c\u53ea\u9700\u679a\u4e3e\u8fd9 $(m-n+1)$ \u6761\u975e\u6811\u8fb9\u7684\u6700\u591a $2(m-n+1)$ \u4e2a\u7aef\u70b9\u3002\u4e3a\u4ec0\u4e48\u662f\u6b63\u786e\u7684\u5462\uff1f\u56e0\u4e3a $dis(u,v)$ \u8fd9\u6761\u8def\uff0c\u53ea\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n1. \u6ca1\u6709\u7ecf\u8fc7\u4efb\u4f55\u975e\u6811\u8fb9\uff0c\u53ea\u7ecf\u8fc7\u6811\u8fb9\u3002 ----- \u8fd9\u79cd\u60c5\u51b5\u5c31\u662f $dis(u,v)$ \u7684\u521d\u59cb\u503c\u3002\n2. \u7ecf\u8fc7\u67d0\u4e00\u6761\u975e\u6811\u8fb9\u3002 ----- \u90a3\u8fd9\u6761\u8def\u5f84\u4e00\u5b9a\u7ecf\u8fc7\u8fd9\u6761\u975e\u6811\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u3002\n\n\u6240\u4ee5 $dis(u,v)$ \u8fd8\u53ef\u4ee5\u901a\u8fc7 $dis(u,i)+dis(i,v)$ \u6765\u66f4\u65b0\u3002\u6ce8\u610f\u5230\u8fd9\u662f\u65e0\u5411\u56fe\uff0c\u6240\u4ee5 $dis(u, i) = dis(i, u)$\u3002\u4e8e\u662f\u8fd9\u4e2a\u66f4\u65b0\u7684\u5f0f\u5b50\u5c31\u53d8\u6210\u4e86 $dis(i,u) + dis(i,v)$\uff0c\u662f\u4ece $i$ \u70b9\u5f00\u59cb\u7684\u5355\u6e90\u6700\u77ed\u8def\u3002\n\n\u63a5\u7740\u60ca\u5947\u5730\u53d1\u73b0\u6709 $m - n \\le 20$ \u7684\u9650\u5236\uff0c\u6240\u4ee5 $i$ \u81f3\u591a\u53ea\u6709 $42$ \u4e2a\u3002\u6240\u4ee5\u53ef\u4ee5\u66b4\u529b\u5bf9\u6bcf\u4e2a $i$ \u90fd\u8dd1\u4e00\u4e0b\u6700\u77ed\u8def\uff0c\u5c31\u53ef\u4ee5\u66f4\u65b0\u7b54\u6848\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O( (m - n) \\cdot ( m + q ) \\log n )$\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <vector>\n#include <queue>\nusing namespace std;\n\n#define mp(x, y) make_pair(x, y)\n#define pb(x) push_back(x)\ntypedef long long llt;\ntypedef pair <llt, int> pli;\n\nconst int MaxN = 100000 + 5, MaxM = 100020 + 5;\nconst int MaxQ = 100000 + 5;\nconst int MaxLog = 20;\nconst int MaxD = 42 + 2;\n\nstruct edge {\n    int to; llt val;\n    edge( int _to, llt _val ) {\n        to = _to;\n        val = _val;\n    }\n};\n\nint N, M, Q;\nint U[MaxM], V[MaxM]; llt W[MaxM];\nint par[MaxN];\nint fa[MaxLog + 1][MaxN], depth[MaxN]; llt h[MaxN];\nint Short_points[MaxD], cnt;\nllt dis[MaxD][MaxN]; bool vis[MaxN];\nvector <edge> G[MaxN];\nvector <edge> Tr[MaxN];\npriority_queue < pli, vector<pli>, greater<pli> > pq;\n\nvoid init() {\n    scanf( \"%d %d\", &N, &M );\n    for ( int i = 1; i <= M; ++i ) {\n        scanf( \"%d %d %lld\", &U[i], &V[i], &W[i] );\n        G[ U[i] ].pb( edge( V[i], W[i] ) );\n        G[ V[i] ].pb( edge( U[i], W[i] ) );\n    }\n}\n\nint Find( int x ) {\n    if ( x == par[x] ) return x;\n    else return par[x] = Find( par[x] );\n}\n\nvoid Kruskal() { // Kruskal \u7b97\u6cd5\u751f\u6210\u6811\n    for ( int i = 1; i <= N; ++i ) par[i] = i;\n\n    for ( int i = 1; i <= M; ++i ) {\n        int u = U[i], v = V[i]; llt w = W[i];\n        int p = Find( u ), q = Find( v );\n\n        if ( p != q ) {\n            Tr[u].pb( edge( v, w ) );\n            Tr[v].pb( edge( u, w ) );\n            par[p] = q;\n        } else {\n            Short_points[ ++cnt ] = u;\n            Short_points[ ++cnt ] = v;\n        }\n    }\n}\n\nvoid dfs( int u ) { // DFS \u5904\u7406\u6811\u7684\u4fe1\u606f\n    for ( auto e : Tr[u] ) {\n        int v = e.to; llt w = e.val;\n        if ( v == fa[0][u] ) continue;\n\n        depth[v] = depth[u] + 1;\n        h[v] = h[u] + w;\n        fa[0][v] = u;\n        for ( int i = 1; ( 1 << i ) <= depth[v]; ++i )\n            fa[i][v] = fa[ i - 1 ][ fa[ i - 1 ][v] ];\n        dfs( v );\n    }\n}\n\nvoid Dijkstra( llt d[], int s ) { // \u5bf9\u6bcf\u4e2a\u7aef\u70b9\u66b4\u529b\u6c42\u89e3\u6700\u77ed\u8def\n    memset( d, 0x7F, sizeof d ); memset( vis, 0, sizeof vis );\n    d[s] = 0; pq.push( mp( d[s], s ) );\n\n    while ( !pq.empty() ) {\n        int u = pq.top().second; pq.pop();\n        if ( vis[u] ) continue; vis[u] = true;\n        for ( auto e : G[u] ) {\n            int v = e.to; llt w = e.val;\n            if ( d[u] + w < d[v] ) {\n                d[v] = d[u] + w;\n                pq.push( mp( d[v], v ) );\n            }\n        }\n    }\n}\n\nint getLca( int u, int v ) { // \u500d\u589e\u6c42 u, v \u4e24\u70b9 LCA\n    if ( depth[u] < depth[v] ) swap( u, v );\n    int d = depth[u] - depth[v];\n    for ( int i = MaxLog; i >= 0; --i )\n        if ( d & ( 1 << i ) ) u = fa[i][u];\n    if ( u == v ) return u;\n\n    for ( int i = MaxLog; i >= 0; --i )\n        if ( fa[i][u] != fa[i][v] )\n            u = fa[i][u],\n            v = fa[i][v];\n    return fa[0][u];\n}\n\nvoid solve() {\n    Kruskal();\n    depth[1] = 1; dfs( 1 );\n    memset( dis, 0x7F, sizeof dis );\n    for ( int i = 1; i <= cnt; ++i ) Dijkstra( dis[i], Short_points[i] );\n\n    scanf( \"%d\", &Q );\n    for ( int q = 1; q <= Q; ++q ) {\n        int u, v; scanf( \"%d %d\", &u, &v );\n        llt ans = h[u] + h[v] - 2 * h[ getLca( u, v ) ];\n        // \u679a\u4e3e\u7aef\u70b9\uff0c\u66f4\u65b0\u7b54\u6848\n        for ( int i = 1; i <= cnt; ++i )\n            ans = min( ans, dis[i][u] + dis[i][v] );\n        printf( \"%lld\\n\", ans );\n    }\n}\n\nint main() {\n    init();\n    solve();\n    return 0;\n}\n```",
        "postTime": 1538834711,
        "uid": 48843,
        "name": "Tweetuzki",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1051F \u3010The Shortest Statement\u3011"
    },
    {
        "content": "## \u4e0d\u8981\u88ab\u9ed1\u9898\u7684\u6807\u7b7e\u7ed9\u5413\u5012\u4e86\uff01\u8fd9\u662f\u552c\u4f60\u7684\u3002\n\n\u6ce8\u610f\u6761\u4ef6$n-m \\le 20$\uff0c\u8fd9\u4e2a\u5f88\u91cd\u8981\u3002\u8fd9\u8bf4\u660e\u8fd9\u662f\u4e00\u4e2a\u73af\u5957\u6811\uff0c\u4e14\u5728\u73af\u4e0a\u7684\u70b9\u662f\u4e0d\u8d85\u8fc750\u7684\u3002\n\n### \u90a3\u4e48\u8bf4\uff0c\u8981\u6c42\u6700\u77ed\u8def\u662f\u4e0d\u662f\u53ea\u8981\u7528\u6700\u77ed\u8def\u7b97\u6cd5\u6765\u5904\u7406\u5904\u4e8e\u73af\u4e0a\u7684\u7279\u6b8a\u70b9\uff0c\u5176\u4ed6\u7684\u70b9\u6309\u6811\u4e0a\u8ddd\u79bb\u5904\u7406LCA\u5373\u53ef\u3002\n\n\u8fd9\u662f\u672c\u9898\u601d\u8def\u6700\u5de7\u7684\u5730\u65b9\u3002\n\n\u8fd9\u9053\u9898\u7684\u5927\u6982\u601d\u8def\u5c31\u51fa\u6765\u5566\uff5e\uff5e\n\n------------\n\n\u9996\u5148\u968f\u4fbf\u641e\u4e00\u68f5\u751f\u6210\u6811,\u90a3\u4e48\u4f1a\u6709\u4e00\u4e9b\u8fb9\u4e0d\u5728\u751f\u6210\u6811\u4e0a\u3002\u8fd9\u4e2a\u53ef\u4ee5\u5728\u8f93\u5165\u8fb9\u7684\u65f6\u5019\u7528\u5e76\u67e5\u96c6\u5904\u7406\u51fa\u6765\uff01\n\n\u628a\u8fd9\u4e9b\u8fb9\u7684\u7aef\u70b9\u6807\u8bb0\u4e3a\u7279\u6b8a\u70b9\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee,\u5982\u679c\u6700\u77ed\u8def\u53ea\u7ecf\u8fc7\u751f\u6210\u6811\u4e0a\u7684\u8fb9,\u5c31\u53ef\u4ee5\u901a\u8fc7LCA\u76f4\u63a5\u8ba1\u7b97\uff0c\u5426\u5219\u5c31\u4f7f\u7528\u6700\u77ed\u8def\u7b97\u6cd5\u5904\u7406\u51fa\u6765\uff0c\u8fd9\u6837\u6700\u574f\u7684\u590d\u6742\u5ea6\u4e5f\u5c31\u662f$O(40 \\times n \\log n + q \\log n)$\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u9898\u76ee\u8db3\u591f\u4e86\uff01\n\n------------\n~~\u8981\u59cb\u7ec8\u8bb0\u4f4fNOI2018\u51fa\u9898\u4eba\u8bf4\u7684\u8bdd\uff1a **\n\u5173\u4e8eSPFA\uff0c\u5b83\u6b7b\u4e86\u3002**~~\n\n\u6240\u4ee5\u6700\u77ed\u8def\u6211\u5199\u7684\u662f\u5806\u4f18\u5316\u7684dijkstra\u7b97\u6cd5\u54e6\u3002\n\n------------\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define Pair pair<int, int>\n#define MP(x, y) make_pair(x, y)\n#define fi first\n#define se second\n#define LL long long\n\nconst int MAXN = 2 * 1e5 + 10;\n\ninline int read() {\n    char c = getchar(); int x = 0, f = 1;\n    while(c < '0' || c > '9') {if(c == '-') f = -1; c = getchar();}\n    while(c >= '0' && c <= '9') x = x * 10 + c - '0', c = getchar();\n    return x * f;\n}\n\nint N, M, Q, head[MAXN], num = 0, vis[MAXN], fa[MAXN][21], dep[MAXN], happen[MAXN];\nLL dis[50][MAXN], Tdis[MAXN];\nvector<int> p;\n\nstruct Edge {\n    LL u, v, w, f, nxt;\n}E[MAXN];\n\ninline void AddEdge(int x, int y, int z) {\n    E[num] = (Edge) {x, y, z, 0, head[x]};\n    head[x] = num++;\n}\n\nvoid dfs(int x, int _fa) {\n    vis[x] = 1; dep[x] = dep[_fa] + 1;\n    for(int i = head[x]; ~i; i = E[i].nxt) {\n        int to = E[i].v;\n        if(vis[to]) continue;\n        E[i].f = E[i ^ 1].f = 1;\n        Tdis[to] = Tdis[x] + (LL)E[i].w;\n        fa[to][0] = x;\n        dfs(to, x);\n    }\n}\n\nvoid Dij(int x, int id) {\n    memset(dis[id], 0x7f, sizeof(dis[id])); dis[id][x] = 0;\n    memset(vis, 0, sizeof(vis));\n    priority_queue<Pair> q; q.push(MP(0, x));\n    while(!q.empty()) {\n        int p = q.top().se; q.pop();\n        if(vis[p]) continue;\n        for(int i = head[p]; ~i; i = E[i].nxt) {\n            int to = E[i].v;\n            if(dis[id][to] > dis[id][p] + E[i].w && (!vis[to]))\n                dis[id][to] = dis[id][p] + E[i].w, q.push(MP(-dis[id][to], to));\n        }\n    }\n}\n\nvoid Pre() {\n    for(int j = 1; j <= 20; j++)\n        for(int i = 1; i <= N; i++)\n            fa[i][j] = fa[fa[i][j - 1]][j - 1];\n}\n\nint lca(int x, int y) {\n    if(dep[x] < dep[y]) swap(x, y);\n    for(int i = 20; i >= 0; i--)\n        if(dep[fa[x][i]] >= dep[y]) x = fa[x][i];\n    if(x == y) return x;\n    for(int i = 20; i >= 0; i--)\n        if(fa[x][i] != fa[y][i])\n            x = fa[x][i], y = fa[y][i];\n    return fa[x][0];\n}\n\nint main(){\n    memset(head, -1, sizeof(head));\n    N = read(); M = read();\n    for(int i = 1; i <= M; i++) {\n        int x = read(), y = read(), z = read();\n        AddEdge(x, y, z);\n        AddEdge(y, x, z);\n    }\n    dfs(1, 0);\n    for(int i = 0; i < num; i++)\n        if(!E[i].f) {\n            if(!happen[E[i].u]) p.push_back(E[i].u), happen[E[i].u] = 1;\n            if(!happen[E[i].v]) p.push_back(E[i].v), happen[E[i].v] = 1;\n        }\n\n    for(int i = 0; i < p.size(); i++)\n        Dij(p[i], i);\n    Pre();\n    int Q = read();\n    while(Q--) {\n        int x = read(), y = read();\n        LL ans = Tdis[x] + Tdis[y] - 2 * Tdis[lca(x, y)];\n        for(int i = 0; i < p.size(); i++)\n            ans = min(ans, dis[i][x] + dis[i][y]);\n        cout << ans << endl;\n    }\n    return 0;\n}\n```",
        "postTime": 1538741090,
        "uid": 6303,
        "name": "feicx",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1051F \u3010The Shortest Statement\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u601d\u8def\u6bd4\u8f83\u6709\u610f\u601d\uff0c\u7b2c\u4e00\u6b21\u505a\u5b8c\u5168\u6ca1\u60f3\u5230\u70b9\u5b50\u4e0a\u3002\u3002\u3002\n\n------------\n\n\u770b\u5230\u9898\u76ee\u7b2c\u4e00\u53cd\u5e94\u662f\u4e00\u9053\u6700\u77ed\u8def\u88f8\u9898\uff0c\u4f46\u662f\u6570\u636e\u8303\u56f41e5\u8bf4\u660e\u5b8c\u5168\u4e0d\u53ef\u80fd\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\u53ef\u4ee5\u89c2\u5bdf\u5230\u9898\u76ee\u7ed9\u51fa\u4e86\u4e00\u4e2a\u5f88\u6709\u610f\u601d\u7684\u6761\u4ef6\uff0c\u5c31\u662f\u8bf4\u8fb9\u6700\u591a\u6bd4\u70b9\u591a20\u3002\n\n\u8fd9\u6709\u4ec0\u4e48\u7528\u5462\uff1f\n\n\u90a3\u4e48\u6211\u4eec\u5927\u80c6\u731c\u60f3\uff0c\u53ef\u5426\u5c06\u6574\u4e2a\u56fe\u5212\u5206\u4e3a21\u6761\u8fb9\uff08\u8fde\u63a5\u6700\u591a42\u4e2a\u70b9\uff09\u548c\u4e00\u9897\u6811\uff1f\uff08\u6781\u9650\u60c5\u51b5\uff09\n\n\u5982\u679c\u8fd9\u6837\u7684\u8bdd\uff0c\u5bf9\u4e8e\u4efb\u610f\u7684\u4e24\u4e2a\u8282\u70b9uv\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u53ea\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n1. \u8fd9\u4e24\u4e2a\u70b9\u90fd\u5728\u6811\u4e0a\u3002\u6240\u4ee5\u8bf4\u6700\u77ed\u8def\u5fc5\u7136\u662fu->lca(u,v)->v\u3002\n\n2. \u4e0d\u662f\u4e0a\u9762\u90a3\u79cd\u60c5\u51b5\u3002\u8fd9\u4e2a\u65f6\u5019\u80af\u5b9a\u4f1a\u6709\u8fde\u5230\u5916\u9762\u90a321\u4e2a\u8fb9\u3002\u6211\u4eec\u66b4\u529b\u679a\u4e3e\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5230\u8fd9\u91cc\u601d\u8def\u5c31\u5b8c\u5168\u51fa\u6765\u4e86\uff0c\u6211\u4eec\u5148\u628a\u4e0d\u5c5e\u4e8e\u6811\u7684\u70b9\u6311\u51fa\u6765\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u90fd\u8dd1\u4e00\u4e0b\u6700\u77ed\u8def\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u7ec4\u8be2\u95ee\u5224\u65ad\u4e00\u4e0b\u5c5e\u4e8e\u54ea\u4e00\u79cd\u60c5\u51b5\u5c31\u53ef\u4ee5\u4e86\u3002\n\n------------\n\nAC\u4ee3\u7801\u5982\u4e0b\uff1a\n\n`37657ms 67712kb`\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<queue>\nusing namespace std;\nnamespace StandardIO{\n\ttemplate<typename T>inline void read(T &x){\n\t\tx=0;T f=1;char c=getchar();\n\t\tfor(;c<'0'||c>'9';c=getchar())if(c=='-')f=-1;\n\t\tfor(;c>='0'&&c<='9';c=getchar())x=x*10+c-'0';\n\t\tx*=f;\n\t}\n\ttemplate<typename T>inline void write(T x){\n\t\tif(x<0)putchar('-'),x*=-1;\n\t\tif(x>=10)write(x/10);\n\t\tputchar(x%10+'0');\n\t}\n}\nusing namespace StandardIO;\nnamespace Solve{\n\t#define int long long\n\tconst int N=100100;\n\tconst int INF=2147483647;\n\tint n,m,p;\n\tint cnt;\n\tint head[N];\n\tstruct node{\n\t\tint to,val,next;\n\t}edge[N<<1];\n\ttemplate<typename T>inline void add(T a,T b,T c){\n\t\tedge[++cnt].to=b,edge[cnt].val=c,edge[cnt].next=head[a],head[a]=cnt;\n\t}\n\tstruct qnode{\n\t\tint key,val;\n\t\tbool operator < (qnode x)const{\n\t\t\treturn val>x.val;\n\t\t}\n\t};\n\tint top;\n\tint vis[N],fa[N][23],dist[N],dep[N],q[N];\n\tint dis[50][N];\n\tinline void dfs(int now,int father){\n\t\tvis[now]=1,fa[now][0]=father;\n\t\tfor(register int i=head[now];i;i=edge[i].next){\n\t\t\tint to=edge[i].to;\n\t\t\tif(to==father)continue;\n\t\t\tif(vis[to])q[++top]=now,q[++top]=to;\n\t\t\telse{\n\t\t\t\tdep[to]=dep[now]+1,dist[to]=dist[now]+edge[i].val;\n\t\t\t\tdfs(to,now);\n\t\t\t}\n\t\t}\n\t}\n\ttemplate<typename T>inline T lca(T x,T y){\n\t\tif(dep[x]<dep[y])swap(x,y);\n\t\tfor(register int i=19;i>=0;--i){\n\t\t\tif(dep[fa[x][i]]>=dep[y])x=fa[x][i];\n\t\t}\n\t\tif(x==y)return x;\n\t\tfor(register int i=19;i>=0;--i){\n\t\t\tif(fa[x][i]!=fa[y][i]){\n\t\t\t\tx=fa[x][i],y=fa[y][i];\n\t\t\t}\n\t\t}\n\t\treturn fa[x][0];\n\t}\n\tinline void dijkstra(int now){\n\t\tmemset(dis[now],63,sizeof(dis[now]));\n\t\tmemset(vis,0,sizeof(vis));\n\t\tpriority_queue<qnode>Q;\n\t\tdis[now][q[now]]=0;\n\t\tQ.push((qnode){q[now],0});\n\t\twhile(!Q.empty()){\n\t\t\tint tmp=Q.top().key;Q.pop();\n\t\t\tif(vis[tmp])continue;\n\t\t\tvis[tmp]=1;\n\t\t\tfor(register int i=head[tmp];i;i=edge[i].next){\n\t\t\t\tint to=edge[i].to;\n\t\t\t\tif(!vis[to]&&dis[now][tmp]+edge[i].val<dis[now][to]){\n\t\t\t\t\tdis[now][to]=dis[now][tmp]+edge[i].val;\n\t\t\t\t\tQ.push((qnode){to,dis[now][to]});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tinline void solve(){\n\t\tread(n),read(m);\n\t\tfor(register int i=1;i<=m;++i){\n\t\t\tint a,b,c;\n\t\t\tread(a),read(b),read(c);\n\t\t\tadd(a,b,c),add(b,a,c);\n\t\t}\n\t\tdep[1]=1,dfs(1,0);\n\t\tfor(register int j=1;j<=19;++j){\n\t\t\tfor(register int i=1;i<=n;++i){\n\t\t\t\tfa[i][j]=fa[fa[i][j-1]][j-1];\n\t\t\t}\n\t\t}\n\t\tsort(q+1,q+top+1);top=unique(q+1,q+top+1)-q-1;\n\t\tfor(register int i=1;i<=top;++i)dijkstra(i);\n\t\tread(p);\n\t\twhile(p--){\n\t\t\tint x,y;\n\t\t\tread(x),read(y);\n\t\t\tint ans=dist[x]+dist[y]-2*dist[lca(x,y)];\n\t\t\tfor(register int i=1;i<=top;++i)ans=min(ans,dis[i][x]+dis[i][y]);\n\t\t\twrite(ans),putchar('\\n');\n\t\t}\n\t}\n}\nusing namespace Solve;\n#undef int\nint main(){\n\tsolve();\n}\n\n```",
        "postTime": 1538392455,
        "uid": 38859,
        "name": "Nero_Claudius",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1051F \u3010The Shortest Statement\u3011"
    },
    {
        "content": "\u770b\u5b8c\u9898\u76ee\uff0c\u88f8\u7684\u5168\u6e90\u6700\u77ed\u8def\n\n\u4e00\u770b\u6570\u636e\u89c4\u6a21\uff1a$1\u3002\u3002\u300210^5$\uff0c\u6253\u6270\u4e86...\n\n\u9898\u76ee\u6709\u4e00\u4e2a\u6709\u8da3\u7684\u6027\u8d28\uff1a$M-N\\leq 20$\n\n\u4e5f\u5c31\u662f\u8bf4\u5c31\u662f\u5728\u4e00\u68f5\u6811\u4e0a\u52a0\u4e0a\u4e0d\u8d85\u8fc7$20$\u6761\u8fb9\uff0c$Q(1\\leq Q\\leq 10^5)$\u6b21\u8be2\u95ee\u8ba9\u4f60\u6c42\u4e24\u70b9\u95f4\u7684\u6700\u77ed\u8def\u957f\u5ea6\n\n\u8fd9\u4e2a\u4e1c\u897f\u5982\u679c\u5728\u6811\u4e2d\uff0c\u90a3\u662f\u4e00\u4e2a\u975e\u5e38\u7ecf\u5178\u7684$LCA$\u95ee\u9898\n\n\u4e0d\u59a8\u8bbe\uff1a\n\n$dis_x:$\u70b9$x$\u5230\u8ddf\u8282\u70b9\u7684\u8ddd\u79bb\n\n\u6c42\u8ddd\u79bb$(x\\rightarrow y)$\uff0c\u4e5f\u5c31\u662f\u6c42\u51fa$x,y$\u7684$LCA$\uff0c\u7b54\u6848\u5c31\u662f$dis_x-dis_{LCA}+dis_y-dis_{LCA}$\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u539f\u56fe\u4e2d\u627e\u51fa\u4e00\u68f5\u6700\u5c0f\u751f\u6210\u6811\uff08\u5176\u5b9e\u53ea\u8981\u662f\u68f5\u6811\u90fd\u884c\uff09\n\n\u7136\u540e\u518d\u5c06\u4e0d\u5728\u6811\u4e0a\u7684\u8fb9\u5168\u90e8\u52a0\u8fdb\u6765\uff0c\u8dd1\u4e00\u904d\u6700\u77ed\u8def\uff0c\u770b\u770b\u5728\u539f\u6811\u4e2d\u7684\u8ddd\u79bb\u548c\u52a0\u8fb9\u540e\u7684\u8ddd\u79bb\u54ea\u4e2a\u5c0f\u5373\u53ef\u3002\u56e0\u4e3a\u6700\u591a\u52a0$20$\u6761\u8fb9\uff0c\u6240\u4ee5\u6700\u591a\u8dd1$20$\u8fb9\u6700\u77ed\u8def\u7b97\u6cd5\uff0c\u4fdd\u8bc1\u4e86\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\n\n\u5176\u5b9e\u5f88\u5bb9\u6613\u53d1\u73b0\uff0c\u6700\u574f\u7684\u60c5\u51b5\u4e5f\u53ea\u662f\u5728\u4e00\u68f5\u6811\u4e0a\u52a0$20$\u6761\u8fb9\uff0c\u6240\u4ee5\u8bf4\u662f\u975e\u5e38\u7a00\u758f\u7684\u56fe\uff0c\u8dd1$SPFA$\u8981\u6bd4\u8dd1\u5806\u4f18\u5316\u7684$dijkstra$\u5feb\u7684\u591a\uff0c$SPFA$\u63a5\u8fd1\u7ebf\u6027\n\n```\n#include<bits/stdc++.h>\n#define maxn 1000005\n#define ll long long\nusing namespace std;\nint n,m,q,fa[maxn][20],Fa[maxn],Dep[maxn],nxt[maxn],Id[5000005],Now,lnk[maxn],son[maxn],tot,x,y;\nll dis[maxn],heap[5000005],w[maxn];\nbool vis[maxn];\nstruct lc{\n\tint x,y;\n\tll z;\n\tbool flg;\n    bool operator <(const lc b)const{return z<b.z;}\n}e[maxn],Q[maxn];\ninline int read(){\n\tint ret=0;char ch=getchar();\n\twhile (ch<'0'||ch>'9') ch=getchar();\n\twhile (ch<='9'&&ch>='0') ret=ret*10+ch-'0',ch=getchar();\n\treturn ret;\n}\ninline void add(int x,int y,ll z){nxt[++tot]=lnk[x];lnk[x]=tot;son[tot]=y;w[tot]=z;}\ninline int Getfa(int x){return Fa[x]==x? x:Fa[x]=Getfa(Fa[x]);}\ninline void Dfs(int x){\n\tDep[x]=Dep[fa[x][0]]+1;\n\tfor (int i=1;i<20;i++) fa[x][i]=fa[fa[x][i-1]][i-1];\n\tfor (int i=lnk[x];i;i=nxt[i])\n\t  if (son[i]!=fa[x][0]){\n\t  \tfa[son[i]][0]=x;dis[son[i]]=dis[x]+w[i];\n\t    Dfs(son[i]);\n\t  }\n}\ninline int LCA(int x,int y){\n\tll Now=0;\n\tif (Dep[x]<Dep[y]) swap(x,y);\n\tfor (int i=19;i>=0;i--) if (Dep[fa[x][i]]>=Dep[y]) x=fa[x][i];\n\tif (x==y) return x;\n\tfor (int i=19;i>=0;i--) if (fa[x][i]!=fa[y][i]) x=fa[x][i],y=fa[y][i];\n\treturn fa[x][0];\n}\ninline void Swap(int x,int y){swap(heap[x],heap[y]);swap(Id[x],Id[y]);}\ninline void Put(int id,ll x){heap[Now=++tot]=x;Id[tot]=id;while (Now>1&&heap[Now]<heap[Now>>1]) Swap(Now,Now>>1),Now>>=1;}\ninline int Get(){\n\tint Mi=Id[1];Id[1]=Id[tot];heap[1]=heap[tot],tot--,Now=1;int Son=2;\n\twhile (Son<=tot){\n\t\tif (Son<tot&&heap[Son+1]<heap[Son]) Son++;\n\t\tif (heap[Son]<heap[Now]) Swap(Now,Son),Now=Son,Son=Now<<1;\n\t\telse break;\n\t}\n\treturn Mi;\n}\ninline void Dij(int S){\n\tfor (int i=1;i<=n;i++) vis[i]=0,dis[i]=1e16;\n\tdis[S]=0;tot=0;Put(S,0);\n\twhile (tot){\n\t\tint N=Get();if (vis[N]) continue;\n\t    vis[N]=1;\n\t    for (int i=lnk[N];i;i=nxt[i])\n\t      if (!vis[son[i]]&&dis[son[i]]>dis[N]+w[i]) dis[son[i]]=dis[N]+w[i],Put(son[i],dis[son[i]]);\n\t}\n}\nint main(){\n\tn=read(),m=read();\n\tfor (int i=1;i<=n;i++) Fa[i]=i;\n\tfor (int i=1;i<=m;i++) e[i].x=read(),e[i].y=read(),e[i].z=read();\n\tsort(e+1,e+m+1);\n\tfor (int i=1;i<=m;i++){\n\t\tint fx=Getfa(e[i].x),fy=Getfa(e[i].y);\n\t\tif (fx==fy){e[i].flg=1;continue;}\n\t\tadd(e[i].x,e[i].y,e[i].z),add(e[i].y,e[i].x,e[i].z);\n\t    Fa[fx]=fy;\n\t}\n\tq=read();Dfs(1);\n\tfor (int i=1;i<=q;i++){\n\t\tQ[i].x=read(),Q[i].y=read();\n\t\tint lca=LCA(Q[i].x,Q[i].y); \n\t\tQ[i].z=dis[Q[i].x]+dis[Q[i].y]-(ll)2*dis[lca];\n\t}\n\tfor (int i=1;i<=m;i++) if (e[i].flg) add(e[i].x,e[i].y,e[i].z),add(e[i].y,e[i].x,e[i].z);\n\tfor (int i=1;i<=m;i++){\n    \tif (!e[i].flg) continue;\n    \tDij(e[i].x);\n        for (int j=1;j<=q;j++) Q[j].z=min(dis[Q[j].x]+dis[Q[j].y],Q[j].z);\n    }\n    for (int i=1;i<=q;i++) printf(\"%lld\\n\",Q[i].z);\n    return 0;\n}\n```",
        "postTime": 1594707516,
        "uid": 108047,
        "name": "LlLlCc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1051F \u3010The Shortest Statement\u3011"
    },
    {
        "content": "\u7531\u4e8e\u8fb9\u548c\u70b9\u7684\u76f8\u5dee\u5f88\u5c0f\uff0c\u5e76\u4e14\u8fd8\u662f\u4e00\u4e2a\u8fde\u901a\u56fe\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\u662f\u5728\u4e00\u68f5\u6811\u4e0a\u52a0\u4e86\u82e5\u5e72\u6761\u8fb9\uff0c\u90a3\u4e48\u6211\u4eec\u8003\u8651\u4e00\u7ec4\u70b9\u5bf9$(u,v)$\u4e4b\u95f4\u7684\u6700\u77ed\u8ddd\u79bb\u53ef\u4ee5\u53d8\u6210\u6811\u4e0a\u6700\u77ed\u8ddd\u79bb\u548c\u5206\u522b\u8003\u8651\u5fc5\u987b\u7ecf\u8fc7\u67d0\u6761\u8fb9\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u8fd9\u6837\u6211\u4eec\u628a\u5f62\u6210\u73af\u7684\u8fb9\u7684\u4e24\u4e2a\u70b9\u8bb0\u5f55\u4e0b\u6765\uff0c\u7136\u540e\u5206\u522b\u5bf9\u4e8e\u8fd9\u4e9b\u70b9\u8dd1\u6700\u77ed\u8def\uff0c\u53ef\u4ee5\u8bc1\u660e\u8fd9\u6837\u7684\u70b9\u6700\u591a\u53ea\u6709$40$\u4e2a\uff0c\u56e0\u6b64\u603b\u590d\u6742\u5ea6\u4e3a$qlogn+40\\times nlogn+40\\times q$\n\n```cpp\nconst int N=1e5+5;\nconst int M=45;\n\nint n,m,q,cnt,num;\nint s[M],head[N],anc[N],ex[N],ey[N],ez[N],dep[N];\nint f[N][21];\nll g[N],dis[M][N];\nstruct edge\n{\n\tint to,nxt,w;\n};\nedge e[N<<1];\nstruct node\n{\n\tint to,w;\n};\nvc<node>t[N];\npriority_queue<pair<ll,int>,vector<pair<ll,int>>,greater<pair<ll,int>>>c;\nbool vis[N];\n\nvoid add(int x,int y,int z)\n{\n\te[++cnt].to=y;\n\te[cnt].nxt=head[x];\n\te[cnt].w=z;\n\thead[x]=cnt;\n}\nvoid link(int x,int y,int z)\n{\n\tadd(x,y,z),add(y,x,z);\n}\nint find(int x)\n{\n\tif(anc[x]==x) return x;\n\treturn anc[x]=find(anc[x]);\n}\nvoid Kruskal()\n{\n\tfor(int i=1;i<=n;++i) anc[i]=i;\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tint x=ex[i],y=ey[i],z=ez[i];\n\t\tint fx=find(x),fy=find(y);\n\t\tif(fx==fy) s[++num]=x,s[++num]=y;\n\t\telse\n\t\t{\n\t\t\tt[x].pub({y,z}),t[y].pub({x,z});\n\t\t\tanc[fx]=fy;\n\t\t}\n\t}\n}\nvoid dfs(int x,int fa,int d)\n{\n\tf[x][0]=fa,dep[x]=d;\n\tfor(int i=1;i<=20;++i) f[x][i]=f[f[x][i-1]][i-1];\n\tfor(auto i:t[x])\n\t{\n\t\tint v=i.to,w=i.w;\n\t\tif(v==fa) continue;\n\t\tg[v]=g[x]+w;\n\t\tdfs(v,x,d+1);\n\t}\n}\nint lca(int x,int y)\n{\n\tif(dep[x]<dep[y]) swap(x,y);\n\tfor(int i=20;i>=0;--i) if(dep[f[x][i]]>=dep[y]) x=f[x][i];\n\tif(x==y) return x;\n\tfor(int i=20;i>=0;--i) if(f[x][i]!=f[y][i]) x=f[x][i],y=f[y][i];\n\treturn f[x][0];\n}\nvoid Dijkstra(int id,int src)\n{\n\tmemset(dis[id],INF,sizeof(dis[id])),ms(vis);\n\tdis[id][src]=0,c.push(make_pair(dis[id][src],src));\n\twhile(!c.empty())\n\t{\n\t\tint x=c.top().se;\n\t\tc.pop();\n\t\tif(vis[x]) continue;\n\t\tvis[x]=true;\n\t\tfor(int i=head[x];i;i=e[i].nxt)\n\t\t{\n\t\t\tint v=e[i].to;\n\t\t\tif(dis[id][x]+e[i].w<dis[id][v]) dis[id][v]=dis[id][x]+e[i].w,c.push(make_pair(dis[id][v],v));\n\t\t}\n\t}\n}\nint main()\n{\n\tfio();\n\tgi(n,m);\n\tfor(int i=1;i<=m;++i) gi(ex[i],ey[i],ez[i]),link(ex[i],ey[i],ez[i]);\n\tKruskal();\n\tdfs(1,0,1);\n\tfor(int i=1;i<=num;++i) Dijkstra(i,s[i]);\n\tgi(q);\n\twhile(q--)\n\t{\n\t\tint x,y;\n\t\tgi(x),gi(y);\n\t\tll d=g[x]+g[y]-2*g[lca(x,y)];\n\t\tfor(int i=1;i<=num;++i) d=min(d,dis[i][x]+dis[i][y]);\n\t\tprint(d),pc(10);\n\t}\n\tend();\n}\n```",
        "postTime": 1584523603,
        "uid": 208081,
        "name": "MikukuOvO",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1051F \u3010The Shortest Statement\u3011"
    },
    {
        "content": "\n## \u5206\u6790\n\n\u4e00\u53e5\u8bdd\u9898\u610f\uff1a\u7ed9\u51fa\u4e00\u4e2a\u65e0\u5411\u8fde\u901a\u56fe\uff0c\u56fe\u4e2d\u6709n\u4e2a\u70b9\uff0cm\u6761\u8fb9\uff0cm-n<=20\uff0c\u7ed9\u51faq\u4e2a\u8be2\u95ee\uff0c\u6bcf\u4e00\u4e2a\u8be2\u95ee\u5305\u542b\u4e24\u4e2a\u6574\u6570u\u548cv\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u8be2\u95ee\uff0c\u8f93\u51fau\u548cv\u4e4b\u95f4\u7684\u6700\u77ed\u8def\n\n\u5584\u826f\u7684\u51fa\u9898\u4eba\u7279\u522b\u5f3a\u8c03\u4e86m-n<=20\u8fd9\u4e00\u4e2a\u6761\u4ef6\n\n\u5176\u5b9e\u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\u6761\u4ef6\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u53ea\u80fd\u66b4\u529b\u53bb\u679a\u4e3e\u4e86\n\n\u4f46\u662f\u65e2\u7136\u7ed9\u51fa\u4e86\u8fd9\u4e2a\u6761\u4ef6\uff0c\u6211\u4eec\u5c31\u8981\u597d\u597d\u5730\u5229\u7528\n\n\u8fb9\u6570\u6700\u591a\u53ea\u6bd4\u70b9\u6570\u591a20\uff0c\u8bf4\u660e\u8fd9\u4e00\u4e2a\u56fe\u662f\u975e\u5e38\u63a5\u8fd1\u4e00\u68f5\u6811\u7684\n\n\u5982\u679c\u662f\u6811\u7684\u8bdd\uff0c\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u7528\u4e00\u4e2aLCA\u7ef4\u62a4\u5c31\u53ef\u4ee5\u4e86\n\n\u4f46\u662f\u8fd9\u9053\u9898\u4e2d\u7684\u56fe\u8981\u6bd4\u6b63\u5e38\u7684\u6811\u591a\u51e0\u6761\u8fb9\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5148\u6765\u4e00\u4e2a\u6700\u5c0f\u751f\u6210\u6811\uff08\u968f\u4fbf\u751f\u6210\u4e00\u4e2a\u6811\u4e5f\u53ef\u4ee5\uff09\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u628an-1\u6761\u8fb9\u641e\u5b9a\n\n\u5269\u4e0b\u7684m-n+1\u6761\u8fb9\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5206\u522b\u4ee5\u8fd9\u4e24\u6761\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u4e3a\u8d77\u70b9\u8dd1\u6700\u77ed\u8def\n\n\u540c\u65f6\u628a\u8fd9\u4e9b\u70b9\u5efa\u7acb\u4e00\u4e2amap\u6620\u5c04\n\n\u8fd9\u6837\u6700\u77ed\u8def\u6700\u591a\u4f1a\u8dd142\u6b21\n\n\u5728\u6bcf\u4e00\u6b21\u5904\u7406\u4e24\u4e2a\u70b9\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u62ff\u8fd9\u4e24\u4e2a\u70b9\u7684LCA\n\n\u548c\u8fd9\u4e24\u4e2a\u70b9\u5230map\u6620\u5c04\u90a3\u4e9b\u70b9\u7684\u8ddd\u79bb\u4e4b\u548c\u4e2d\u53d6\u6700\u5c0f\u503c\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6700\u5c0f\u751f\u6210\u6811\u548c\u6700\u77ed\u8def\u4e0d\u80fd\u7528\u4e00\u4e2a\u56fe\uff0c\u56e0\u4e3a\u4f60\u6700\u5c0f\u751f\u6210\u6811sort\u4e4b\u540e\u8fb9\u5c31\u4e0d\u5bf9\u5e94\u4e86\n\n\u6240\u4ee5\u8981\u63d0\u524d\u4fdd\u5b58\u597d\n\n## \u4ee3\u7801\n\n``` cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<map>\nusing namespace std;\ntypedef long long ll;\nconst int maxn=2e5+50;\nmap<ll,ll> ma;\nstruct asd{\n    ll from,to,next;\n    ll val;\n}b[maxn*2],b2[maxn*2],b3[maxn*2];\nll tot=2,head[maxn];\nll diss[50][maxn];\nll bh;\ninline void ad(ll aa,ll bb,ll cc){\n    b[tot].from=aa;\n    b[tot].to=bb;\n    b[tot].next=head[aa];\n    b[tot].val=cc;\n    head[aa]=tot++;\n}\nll h2[maxn],t2=2;\ninline void ad2(ll aa,ll bb,ll cc){\n    b2[t2].from=aa;\n    b2[t2].to=bb;\n    b2[t2].next=h2[aa];\n    b2[t2].val=cc;\n    h2[aa]=t2++;\n}\nll h3[maxn],t3=2;\ninline void ad3(ll aa,ll bb,ll cc){\n    b3[t3].from=aa;\n    b3[t3].to=bb;\n    b3[t3].next=h3[aa];\n    b3[t3].val=cc;\n    h3[aa]=t3++;\n}\n//\u4ee5\u4e0a\u662f\u5efa\u8fb9\uff0c\u5206\u522b\u5bf9\u5e94\u539f\u56fe\uff08\u8dd1\u6700\u77ed\u8def\uff09\u3001LCA\u3001\u6700\u5c0f\u751f\u6210\u6811\nstruct jie{\n\tll num;\n\tll dis;\n\tjie(ll aa=0,ll bb=0){\n\t\tnum=aa,dis=bb;\n\t}\n\tbool operator < (const jie& A) const{\n\t\treturn dis>A.dis;\n\t}\n};\nll vis[maxn];\nvoid dij(ll xx){\n    priority_queue<jie> q;\n\tq.push(jie(xx,0));\n\tdiss[ma[xx]][xx]=0;\n    memset(vis,0,sizeof(vis));\n\twhile(!q.empty()){\n\t\tll now=q.top().num;\n\t\tq.pop();\n\t\tif(vis[now]) continue;\n\t\tvis[now]=1;\n\t\tfor(ll i=head[now];i!=-1;i=b[i].next){\n\t\t\tll u=b[i].to;\n\t\t\tif(diss[ma[xx]][u]>b[i].val+diss[ma[xx]][now]){\n\t\t\t\tdiss[ma[xx]][u]=b[i].val+diss[ma[xx]][now];\n\t\t\t\tq.push(jie(u,diss[ma[xx]][u]));\n\t\t\t}\n\t\t}\n\t}\n}\n//dij\u6a21\u677f\nll f[maxn][25],dep[maxn];\nll cost[maxn][25];\nvoid dfs(ll now,ll fa,ll da){\n    dep[now]=dep[fa]+1;\n    f[now][0]=fa;\n    cost[now][0]=da;\n    for(ll i=1;(1<<i)<=dep[now];i++){\n        f[now][i]=f[f[now][i-1]][i-1];\n        cost[now][i]=cost[now][i-1]+cost[f[now][i-1]][i-1];\n    }\n    for(ll i=h2[now];i!=-1;i=b2[i].next){\n        ll u=b2[i].to;\n        if(fa!=u) dfs(u,now,b2[i].val);\n    }\n}\nll Lca(ll aa,ll bb){\n    if(dep[aa]>dep[bb]) swap(aa,bb);\n    ll len=dep[bb]-dep[aa],k=0;\n    ll ans=0;\n    while(len){\n        if(len&1){\n            ans+=cost[bb][k];\n            bb=f[bb][k];\n        }\n        k++,len>>=1;\n    }\n    if(aa==bb) return ans;\n    for(ll i=20;i>=0;i--){\n        if(f[aa][i]==f[bb][i]) continue;\n        ans+=cost[aa][i];\n        ans+=cost[bb][i];\n        aa=f[aa][i],bb=f[bb][i];\n    }\n    return ans+cost[aa][0]+cost[bb][0];\n}\n//\u500d\u589e\u6c42LCA\u6a21\u677f\nll zx[maxn*2],visb[maxn*2];\nll zhao(ll xx){\n    if(xx==zx[xx]) return xx;\n    return zx[xx]=zhao(zx[xx]);\n}\nvoid bing(ll xx,ll yy){\n    zx[zhao(xx)]=zhao(yy);\n}\nbool cmp(asd aa,asd bb){\n    return aa.val<bb.val;\n}\nvoid shu(ll xx){\n    sort(b3+2,b3+t3,cmp);\n    for(ll i=0;i<maxn;i++) zx[i]=i;\n    ll cnt=0;\n    for(ll i=2;i<t3;i++){\n        ll x=b3[i].from,y=b3[i].to;\n        if(zhao(x)!=zhao(y)){\n            bing(x,y);\n            ad2(x,y,b3[i].val);\n            ad2(y,x,b3[i].val);\n            visb[i]=1;\n            if(++cnt==xx) return;\n        }\n    }\n}\n//\u6700\u5c0f\u751f\u6210\u6811\u6a21\u677f\nint main(){\n    memset(diss,0x3f,sizeof(diss));\n    memset(head,-1,sizeof(head));\n    memset(h2,-1,sizeof(h2));\n    memset(h3,-1,sizeof(h3));\n    ll n,m;\n    scanf(\"%lld%lld\",&n,&m);\n    for(ll i=1;i<=m;i++){\n        ll aa,bb;\n        ll cc;\n        scanf(\"%lld%lld%lld\",&aa,&bb,&cc);\n        ad(aa,bb,cc),ad(bb,aa,cc);\n        ad3(aa,bb,cc);\n    }\n    shu(n-1);\n    for(ll i=2;i<t3;i++){\n        if(!visb[i]){\n            visb[i]=1;\n            ll x=b3[i].from,y=b3[i].to;\n            if(!ma[x]) ma[x]=++bh,dij(x);\n            if(!ma[y]) ma[y]=++bh,dij(y);\n        }\n    }\n    //\u628a\u6ca1\u6709\u52a0\u5230\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u7684\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u62ff\u51fa\u6765\u8dd1\u6700\u77ed\u8def\n    dfs(1,0,0);\n    ll q;\n    scanf(\"%lld\",&q);\n    for(ll i=1;i<=q;i++){\n        ll aa,bb;\n        scanf(\"%d%d\",&aa,&bb);\n        ll ans=Lca(aa,bb);\n        for(ll i=1;i<=bh;i++){\n            ans=min(ans,diss[i][aa]+diss[i][bb]);\n        }\n        printf(\"%lld\\n\",ans);\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1588995837,
        "uid": 316322,
        "name": "hzoi_liuchang",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1051F \u3010The Shortest Statement\u3011"
    },
    {
        "content": "m-n<=20\u8fd9\u4e2a\u6027\u8d28\u5f88\u91cd\u8981\u3002 \u7531\u6b64\u8054\u60f3\u5230\uff0c\u5982\u679c\u5efa\u4e00\u68f5\u751f\u6210\u6811\uff0c\u90a3\u4e48\u6700\u77ed\u8def\u4e0a\u7684\u5f88\u591a\u90fd\u662f\u6811\u8fb9\u3002\n\n\u636e\u6b64\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n1.\u8def\u5f84\u5728\u751f\u6210\u6811\u4e0a\uff0c\u6700\u77ed\u8def\u5f84\u5373\u6811\u4e0a\u4e24\u70b9\u95f4\u8ddd\u79bb\u3002\n\n2.\u8def\u5f84\u5305\u542b\u6709\u975e\u6811\u8fb9\uff0c\u90a3\u4e48\u6700\u591a\u53ea\u5305\u542b20\u6761\u975e\u6811\u8fb9\u3002\n\n\u6211\u4eec\u5982\u4f55\u5904\u7406\uff1f \u628a\u8fd920\u6761\u975e\u6811\u8fb9\u7684\u4e24\u7aef\u5355\u72ec\u62ff\u51fa\u6765\u505a\u6700\u77ed\u8def\u3002\u5047\u8bbeu\u70b9\u6709\u4e00\u6761\u975e\u6811\u8fb9\uff0c \u90a3\u4e48\u5c31\u7528 dis[u][S]+dis[u][T]\u6765\u66f4\u65b0\u7b54\u6848\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long \n#define pa pair<int,int>\nusing namespace std;\ninline int read(){int x=0,f=1,ch=getchar(); while(ch<'0'||ch>'9'){if(ch=='-') f=-1; ch=getchar();} while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();} return x*f;}\ninline void write(int x){if (x<0) putchar('-'),x=-x; if (x>=10) write(x/10); putchar(x%10+'0');}\ninline void writeln(int x){write(x); puts(\"\");}\nconst int N=1e5+30,INF=1e18; \nstruct edge{\n\tint link,next,val;\n}e[N<<1],ed[N<<1];\nstruct Edge{\n\tint u,v,w; \n}E[N];\nbool vis[N],mark[N];\nint ans,cnt,he[N],n,m,tot,head[N];\ninline void add_edge(int u,int v,int w){\n\te[++tot]=(edge){v,head[u],w}; head[u]=tot;\n}\ninline void Add_edge(int u,int v,int w){\n\ted[++tot]=(edge){v,he[u],w}; he[u]=tot; \n}\ninline void ins(int u,int v,int w){\n\tAdd_edge(u,v,w); Add_edge(v,u,w);\n}\ninline void insert(int u,int v,int w){\n\tadd_edge(u,v,w); add_edge(v,u,w);\n}\ninline void init(){\n\tn=read(); m=read();\n\tfor (int i=1;i<=m;i++){\n\t\tint u=read(),v=read(),w=read();\n\t\tinsert(u,v,w);\n\t\tE[i]=(Edge){u,v,w};\n\t}\n}\nint D[N],dis[45][N],dep[N],anc[N][20],fa[N];\nint getfa(int x){\n\treturn (fa[x]==x)?x:fa[x]=getfa(fa[x]);\n}\nvoid dfs(int u,int Fa){\n\tanc[u][0]=Fa; dep[u]=dep[Fa]+1;\n\tfor (int i=1;i<20;i++) anc[u][i]=anc[anc[u][i-1]][i-1];\n\tfor (int i=he[u];i;i=ed[i].next){\n\t\tint v=ed[i].link;\n\t\tif (v!=Fa){\n\t\t\tD[v]=D[u]+ed[i].val;\n\t\t\tdfs(v,u);\n\t\t}\n\t}\n}\ninline int LCA(int u,int v){\n\tif (dep[u]<dep[v]) swap(u,v);\n\tint delta=dep[u]-dep[v];\n\tfor (int i=0;i<20;i++) if (delta&(1<<i)) u=anc[u][i];\n\tif (u==v) return u;\n\tfor (int i=19;i>=0;i--) if (anc[u][i]!=anc[v][i]) u=anc[u][i],v=anc[v][i];\n\treturn anc[u][0];\n}\ninline int dist(int u,int v){\n\treturn D[u]+D[v]-2*D[LCA(u,v)];\n}\npriority_queue<pa,vector<pa>,greater<pa> > heap;\ninline void dijkstra(int S,int id){\n\tfor (int i=1;i<=n;i++) dis[id][i]=INF; \n\tmemset(vis,0,sizeof vis);\n\tdis[id][S]=0; heap.push(make_pair(0,S));\n\twhile (!heap.empty()){\n\t\tint u=heap.top().second; heap.pop();\n\t\tif (vis[u]) continue;\n\t\tvis[u]=1;\n\t\tfor (int i=head[u];i;i=e[i].next){\n\t\t\tint v=e[i].link;\n\t\t\tif (dis[id][v]>dis[id][u]+e[i].val){\n\t\t\t\tdis[id][v]=dis[id][u]+e[i].val;\n\t\t\t\theap.push(make_pair(dis[id][v],v));\n\t\t\t}\n\t\t}\n\t}\n}\ninline void build(){\n\tfor (int i=1;i<=n;i++) fa[i]=i; tot=0;\n\tfor (int i=1;i<=m;i++){\n\t\tint p=getfa(E[i].u),q=getfa(E[i].v);\n\t\tif (p!=q){\n\t\t\tfa[p]=q;\n\t\t\tins(E[i].u,E[i].v,E[i].w);\n\t\t}else{\n\t\t\tmark[E[i].u]=mark[E[i].v]=1;\n\t\t}\n\t}\n\tdfs(1,0);\n\tfor (int i=1;i<=n;i++){\n\t\tif (mark[i]){\n\t\t\tdijkstra(i,++cnt);\n\t\t}\n\t}\n}\ninline void solve(){\n\tbuild(); int q=read();\n\tfor (int i=1;i<=q;i++){\n\t\tint u=read(),v=read();\n\t\tans=dist(u,v);\n\t\tfor (int j=1;j<=cnt;j++){\n\t\t\tans=min(dis[j][u]+dis[j][v],ans); \n\t\t}\n\t\twriteln(ans);\n\t}\n}\nsigned main(){\n\tinit(); solve();\n\treturn 0;\n}\n```",
        "postTime": 1540719998,
        "uid": 34444,
        "name": "\u5927\u83dc\u9e21fks",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1051F \u3010The Shortest Statement\u3011"
    }
]