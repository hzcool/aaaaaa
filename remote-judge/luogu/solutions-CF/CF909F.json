[
    {
        "content": "\u5148\u8003\u8651 $p$ \u7684\u6784\u9020\n\n\u9996\u5148\u7b80\u5316\u95ee\u9898\uff0c\u5047\u5982 $n=2^k$\uff0c\u90a3\u4e48\u95ee\u9898\u53d8\u5f97\u975e\u5e38\u7684 EZ.\n\n\u5bf9\u4e8e $1$~$n$ \u4e2d\u7684\u6bcf\u4e2a\u6570\uff0c\u6309\u4f4d\u53d6\u53cd\u5373\u53ef\u3002\n\n\u6362\u4e2a\u8bf4\u6cd5\uff0c\u5982\u679c $a+b=2^k-1$\uff0c\u90a3\u4e48 $a\\&b=0$\u3002\n\n\u6839\u636e\u8fd9\u4e2a\uff0c\u5c31\u53ef\u4ee5\u6784\u9020\u51fa\u5176\u4ed6\u7684 $n$ \u7684\u7b54\u6848\u3002\n\n\u8bbe\u6700\u63a5\u8fd1 $n$ \u7684 $2$ \u7684\u5e42\u6b21\u4e3a $t$\uff0c\n\n\u90a3\u4e48 $[2t-n-1,n]$ \u4e2d\u7684\u6bcf\u4e2a\u6570\u90fd\u53ef\u4ee5\u627e\u5230\u53e6\u4e00\u4e2a\u6570\u4e0e\u4e4b\u914d\u5bf9\n\n\u7136\u540e\u5bf9\u4e8e $1$~$2t-1$\uff0c\u7ee7\u7eed\u9012\u5f52\u6784\u9020\u5373\u53ef\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u5bf9\u4e8e $n$ \u4e3a\u5947\u6570\u7684\u60c5\u51b5\uff0c\u6700\u540e\u9700\u8981\u9012\u5f52\u5904\u7406 $[1,1]$\uff0c\u663e\u7136\u65e0\u89e3\u3002\n\n-------\n\n\u7136\u540e\u662f $q$ \u7684\u6784\u9020\uff0c\u8fd9\u4e2a\u6bd4\u8f83\u7b80\u5355\u3002\uff08\u88ab w23c3c3 \u79d2\u4e86\uff09\n\n\u628a $1$~$n$ \u4e2d\u7684\u6570\u5206\u6210\u5f62\u5982 $[2^k,2^{k+1}-1]$ \u7684\u51e0\u4e2a\u90e8\u5206\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u90e8\u5206\uff0c\u6bcf\u4e2a\u6570\u7684\u4e8c\u8fdb\u5236\u4e0b\u6700\u9ad8\u4f4d\u90fd\u662f $1$\n\n\u4e5f\u5c31\u662f\u8bf4\u65e0\u8bba\u600e\u6837\u5339\u914d\uff0c\u53ea\u8981\u5728\u540c\u4e00\u4e2a\u90e8\u5206\uff0c\u90fd\u6ee1\u8db3\u6761\u4ef6\u3002\n\n\u5f53\u7136\u6700\u540e\u4e00\u90e8\u5206\u8981\u7a0d\u5fae\u5224\u4e00\u4e0b\n\n\u8003\u8651\u5904\u7406 $1$\uff0c\u53ef\u4ee5\u53d1\u73b0\n\n\u5f53 $n\\geq 7$ \u65f6\uff0c\u628a $1$ \u548c $7$ \u7684\u4f4d\u7f6e\u4e92\u6362\uff0c\u7136\u540e$\\{4,5,6\\}$\u53d8\u6210$\\{5,6,4\\}$\u5373\u53ef\n\n\u5f53 $n<7$ \u65f6\uff0c\u6253\u8868\u5373\u53ef ~~\u96fe~~\n\n\u5047\u5982 $n=2^k$\uff0c\u90a3\u4e48\u6700\u540e\u4f1a\u5269\u4e0b\u4e00\u4e2a\u5355\u72ec\u7684\u6570\u4e00\u7ec4\uff0c\u663e\u7136\u65e0\u89e3\n\nCode:\n\n```cpp\n#include <bits/stdc++.h>\n\ninline int read( ) {\n\tint x = 0;\n\tchar c = getchar( );\n\twhile ( !isdigit( c ) ) c = getchar( );\n\twhile ( isdigit( c ) ) x = ( x << 3 ) + ( x << 1 ) + c - 48, c = getchar( );\n\treturn x;\n}\n\nconst int N = 1e5 + 7;\nint n, p[ N ], q[ N ], k[ N ];\nvoid solve( int x ) {\n\tif ( x == 0 ) return;\n\tint t = 1;\n\twhile ( t * 2 <= x ) t <<= 1;\n\tint l = 2 * t - 1 - x;\n\tfor ( int i = l; i <= x; ++ i ) p[ i ] = x + l - i;\n   \tsolve( l - 1 );\t\n}\nint main( ) {\n\tn = read( );\n\tif ( n & 1 ) puts( \"NO\" );\n\telse {\n\t\tsolve( n );\n\t\tputs( \"YES\" );\n\t\tfor ( int i = 1; i <= n; ++ i ) printf( \"%d \", p[ i ] );\n\t\tputs( \"\" );\n\t}\n\tint t = 1;\n\twhile ( t * 2 <= n ) t = t * 2;\n\tif ( t == n ) puts( \"NO\" );\n\telse {\n\t\tif ( n <= 5 ) puts( \"NO\" );\n\t\tif ( n == 6 ) printf( \"YES\\n3 6 1 5 4 2\\n\" );\n\t\tif ( n >= 7 ) {\n\t\t\tq[ 1 ] = 7;\tq[ 2 ] = 3;\tq[ 3 ] = 2; q[ 4 ] = 5; q[ 5 ] = 6; q[ 6 ] = 4; q[ 7 ] = 1;\n\t\t\tint pos = 8;\n\t\t\twhile ( pos <= n ) {\n\t\t\t\tint cnt = 0;\n\t\t\t\tfor ( int i = pos; i <= std::min( pos + pos - 1, n ); ++ i ) k[ ++ cnt ] = i;\n\t\t\t\tfor ( int j = pos; j < std::min( pos + pos - 1, n ); ++ j ) q[ j ] = k[ j - pos + 2 ];\n\t\t\t\tq[ std::min( pos + pos - 1, n ) ] = k[ 1 ];\n\t\t\t\tpos = std::min( pos + pos - 1, n ) + 1;\n\t\t\t}\n\t\t\tfor ( int i = 1; i <= n; ++ i ) printf( \"%d \", q[ i ] );\n\t\t\tputs( \"\" );\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1616487448,
        "uid": 93286,
        "name": "Yuno",
        "ccfLevel": 6,
        "title": "CF909F AND-permutations"
    },
    {
        "content": "\u6211\u4eec\u4e0d\u60f3\u7528\u667a\u5546\u505a\u6b64\u9898\uff0c\u4e8e\u662f\u6211\u4eec\u8003\u8651\u6253\u8868\u627e\u89c4\u5f8b\u3002\n# Sotution\n## Part 1\n\u9996\u5148\u5bf9\u4e8e\u7b2c\u4e00\u79cd\uff0c\u6253\u8868\u5f97$n$\u4e3a\u5947\u6570\u65f6\u65e0\u89e3\uff0c\u5f53$n=20$\u65f6\uff0c\u7b54\u6848\u4e3a\uff1a\n\n```\n2 1 4 3 10 9 8 7 6 5 20 19 18 17 16 15 14 13 12 11\n```\n\n\u8fd9\u6697\u793a\u6211\u4eec\u628a\u76f8\u90bb\u7684\u4e0b\u964d\u7684\u5757\u5408\u5e76\uff0c\u4e8e\u662f\u6211\u4eec\u5bf9\u4e8e$2~30$\u7684\u5076\u6570\uff0c\u6253\u51fa\u76f8\u90bb\u5757\u5408\u5e76\u540e\u6bcf\u4e00\u5757\u7684\u6570\u7684\u4e2a\u6570\u7684\u8868\uff1a\n```\n2\n\n2 2\n6\n\n6 2\n2 2 6\n2 10\n14\n\n14 2\n2 10 6\n2 2 6 10\n6 2 14\n6 18\n2 2 22\n2 26\n30\n\n```\n\n\u4e4d\u4e00\u770b\u4f3c\u4e4e\u6ca1\u6709\u89c4\u5f8b\uff0c\u4f46\u662f\u901a\u8fc7\u89c2\u5bdf\u6211\u4eec\u53d1\u73b0\uff0c16~30\u662f\u75312~14\u52a0\u4e00\u4e2a\u6570$x$\u5f97\u5230\uff0c\u800c\u4e0a\u9762\u7684\u540c\u4e00\u5757\u5185\u7684$x$\u7684\u516c\u5dee\u6070\u597d\u4e3a$4$\u3002\n\u5373\uff1a$n$\u62c6\u5206\u7684\u6700\u540e\u4e00\u4e2a\u6570$p$\u7684\u503c\u4e3a$(n-t+1)*2$\uff0c\u5176\u4e2d$t$\u4e3a$n$\u4e8c\u8fdb\u5236\u8868\u793a\u4e0b\u7684\u6700\u5927\u7684$1$\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5728$O(lgn+n)$\u65f6\u95f4\u5185\u89e3\u51b3\u7b2c\u4e00\u4e2a\u95ee\u9898\u3002\n\n## Part 2\n\u7b2c\u4e8c\u79cd\u7a0d\u9ebb\u70e6\u4e00\u4e9b\uff0c\u6211\u4eec\u53d1\u73b0\u7b2c\u4e8c\u79cd\u7684$dfs$\u6253\u8868\u4ee3\u7801\u901f\u5ea6\u6781\u5feb\uff0c\u751a\u81f3\u53ef\u4ee5\u5728$5s$\u5185\u8dd1\u51fa$100000$\u7684\u6570\u636e\u3002\n\n\u4f46\u663e\u7136\u6211\u4eec\u4e0d\u4f1a\u60f3\u7740\u5361\u5e38\u901a\u8fc7\u6b64\u9898\uff0c\u6211\u4eec\u8fd8\u662f\u6253\u8868\uff0c\u53d1\u73b0$n<=5$\u65f6\u65e0\u89e3\uff0c$n=2^t$\u65f6\u65e0\u89e3\uff0c\u6211\u4eec\u6765\u770b\u8868\uff1a\n```\n3 6 1 5 4 7 2 9 8\n3 6 1 5 4 2 9 10 7 8\n3 6 1 5 4 2 9 10 7 11 8\n3 6 1 5 4 2 9 10 7 8 12 11\n...\n```\n\u6211\u4eec\u53d1\u73b0\u5b83\u4eec\u6709\u4e00\u6bb5\u524d\u7f00\u76f8\u540c\uff0c\u901a\u8fc7\u9a8c\u8bc1\u4e5f\u786e\u5b9e\u5982\u6b64\uff0c\u5e76\u4e14\u5bf9\u4e8e$n=89$\u8fd9\u6837\u7684\u6570\u636e\uff1a\n```\n3 6 1 5 4 2 9 10 7 8 12 11 14 13 17 18 15 16 20 19 22 21 24 23 26 25 28 27 30 29 33 34 31 32 36 35 38 37 40 39 42 41 44 43 46 45 48 47 50 49 52 51 54 53 56 55 58 57 60 59 62 61 65 66 63 64 68 67 70 69 72 71 74 73 76 75 78 77 80 79 82 81 84 83 86 85 88 89 87\n```\n\n\u6211\u4eec\u53d1\u73b0\u5b83\u7684\u65b9\u6848\u5230$n$\u5927\u4e8e$36$\u65f6\uff0c\u90fd\u662f$+3,-1,+3,-1,+3,-1...$\u7684\uff0c\u9664\u4e86\u5728\u7ecf\u8fc7$2^t$\u6216\u8005\u63a5\u8fd1$n$\u65f6\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u5982$61,65,66,63,64,68,67$\u3002\n\n\u5f53\u7ecf\u8fc7$2^t$\u6b21\u65f6\uff0c\u89c4\u5f8b\u4e5f\u662f\u56fa\u5b9a\u7684\uff0c\u6211\u4eec\u76f4\u63a5\u7279\u5224\u5373\u53ef\u3002\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5148\u6253\u51fa\u524d$36$\u7684\u8868\uff0c\u7136\u540e\u9012\u63a8\u5f97\u51fa$n$\u7684\u8868\uff0c\u6700\u540e\u66b4\u529b$dfs$\u540e$6+(n\\%6)$\u4f4d\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n)+O(dfs)$\uff0c\uff08\u4f46\u662f$dfs$\u53ef\u4ee5\u8dd1n=100000\uff1f\uff1f\uff1f\uff09\u3002\n\n# Code\n\u6253\u8868\u4ee3\u7801\uff1a\n```cpp\n\nint flag[MAXN],a[MAXN],n;\nvoid dfs(int x)\n{\n\tif (x==n+1) { for (int i=1;i<=n;i++) printf(\"%d \",a[i]); exit(0); }\n\tfor (int i=1;i<=n;i++)\n\t\tif (!flag[i]&&(x&i)!=0&&i!=x) //\u6539\u6210x&i==0\u65f6\u5c31\u662f\u7b2c\u4e00\u79cd\n\t\t{\n\t\t\tflag[i]=1,a[x]=i;\n\t\t\tdfs(x+1);\n\t\t\tflag[i]=0;\n\t\t}\n}\nsigned main()\n{\n\tn=read();\n\tdfs(1);\n\treturn 0;\n}\n\n```\n\u771f\u6b63\u7684\u4ee3\u7801\uff1a\n```cpp\n\nint a[MAXN]={0,3,6,1,5,4,2,9,10,7,8,12,11,14,13,17,18,15,16,20,19,22,21,24,23,26,25,28,27,30,29,33,34,31,32,36,35};\nvoid solve(int x)\n{\n\tif (!x) return;\n\tint t=x;\n\twhile (t-(t&(-t))!=0) t-=t&(-t);\n\tint p=(x-t+1)*2;\n\tsolve(x-p);\n\tfor (int i=x;i>x-p;i--) printf(\"%d \",i);\n}\nint flag[MAXN],b[MAXN],n;\nvoid dfs(int x)\n{\n\tif (x==n+1) \n\t{\n\t\tputs(\"YES\");\n\t\tfor (int i=1;i<=n-n%6-6;i++) printf(\"%d \",a[i]);\n\t\tfor (int i=n-n%6-5;i<=n;i++) printf(\"%d \",b[i]);\n\t\texit(0); \n\t}\n\tfor (int i=n-(n%6)-5;i<=n;i++)\n\t\tif (!flag[i]&&(x&i)!=0&&i!=x)\n\t\t{\n\t\t\tflag[i]=1,b[x]=i;\n\t\t\tdfs(x+1);\n\t\t\tflag[i]=0;\n\t\t}\n}\nsigned main()\n{\n\tn=read();\n\tif (n&1) puts(\"NO\");\n\telse\n\t{\n\t\tputs(\"YES\");\n\t\tsolve(n);\n\t\tputs(\"\");\n\t}\n\tfor (int i=37,nw=64;i<=n;i+=2) \n\t{\n\t\ta[i]=a[i-1]+3,a[i+1]=a[i]-1;\n\t\tif (a[i]==nw) nw*=2,a[i]++,a[i+1]=a[i]+1,a[i+2]=a[i]-2,a[i+3]=a[i]-1,a[i+4]=a[i]+3,a[i+5]=a[i]+2,i+=4;\n\t}\n\tif (n<=5) { puts(\"NO\"); return 0; }\n\tdfs(n-n%6-5);\n\tputs(\"NO\");\n\treturn 0;\n}\n\n\n```\n\n",
        "postTime": 1605447980,
        "uid": 32063,
        "name": "fade_away",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF909F \u3010AND-permutations\u3011"
    },
    {
        "content": "\u55ef......\u5176\u5b9e\u5237\u6784\u9020\u9898\u771f\u7684\u5f88\u6253\u51fb\u667a\u5546\uff0c\u6beb\u65e0\u5934\u7eea\u7684\u611f\u89c9\u7684\u786e\u4e0d\u592a\u597d......\n\n\u4f46\u6211\u76f8\u4fe1\uff0c\u53ea\u8981\u7528\u5fc3\uff0c\u6216\u8bb8\u6240\u8c13\u7684\u201c\u667a\u529b\u201d\u4e5f\u53ef\u4ee5\u5728\u7075\u611f\u548c\u601d\u8def\u7684\u79ef\u7d2f\u4e4b\u95f4\u6162\u6162\u63d0\u5347\u5427......\n\n\u8fdb\u5165\u6b63\u9898\u3002\n\n#### Task 1\n\n\u770b\u5230$p_i\\ \\textrm{and}\\ i=0$\u7684\u6761\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\uff0c\u8ba9$p_i$\u6070\u4e3a$i$\u7684\u6309\u4f4d\u53d6\u53cd\u5c31\u53ef\u4ee5\u6ee1\u8db3\u6761\u4ef6\u3002\u7136\u800c\uff0c\u8fd9\u6837\u505a\u5b58\u5728\u4e00\u4e2a\u95ee\u9898\uff1a$i$\u7684\u6309\u4f4d\u53d6\u53cd\u53ef\u80fd\u8d85\u51fa$[1,n]$\u7684\u8303\u56f4\u3002\n\n\u8fd9\u65f6\u53ef\u4ee5\u8d2a\u5fc3\u5730\u60f3\uff1a\u5bf9\u4e8e\u53d6\u53cd\u540e\u5c5e\u4e8e$[1,n]$\u7684$i$\uff0c\u5148\u628a$p_i$\u8bbe\u7f6e\u4e3a$i$\u7684\u53d6\u53cd\uff0c\u5176\u4ed6\u7684\u518d\u53e6\u60f3\u529e\u6cd5\u3002\u627e\u51fa$n$\u7684\u4e8c\u8fdb\u5236\u6700\u9ad8\u4f4d\uff0c\u8bbe\u5176\u4f4d\u6743\u4e3a$2^k$\uff0c\u5219\u95ed\u533a\u95f4$I=[2^{k+1}-n-1,n]$\u4e2d\u7684\u6570\u90fd\u53ef\u4ee5\u6309\u7167\u6b64\u6cd5\u4f18\u5148\u5904\u7406\u3002\u56e0\u4e3a$I$\u4e2d\u7684\u6570\u53d6\u53cd\u540e\u8fd8\u5728$I$\u4e2d\uff0c\u6240\u4ee5\u6211\u4eec\u4f1a\u770b\u5230\u95ee\u9898\u8f6c\u5316\u4e3a\u5bf9$[1,2^{k+1}-n-2]$\u505a\u76f8\u540c\u7684\u6784\u9020\uff0c\u53ea\u8981\u9012\u5f52\u8fdb\u884c\u5373\u53ef\u3002\n\n\u7136\u800c\u8fd9\u91cc\u5b58\u5728\u4e00\u4e9b\u95ee\u9898\uff0c\u4f1a\u5bfc\u81f4\u8fd9\u79cd\u65b9\u6cd5\u4e0d\u80fd\u6784\u9020\u51fa\u7b54\u6848\uff1a\u9012\u5f52\u5230\u6700\u540e\u5982\u679c\u5269\u4e00\u4e2a$[1,1]$\uff0c\u663e\u7136\u662f\u65e0\u6cd5\u5b8c\u6210\u7684\u3002\u7b80\u5355\u63a8\u7406\u53d1\u73b0\uff0c\u8fd9\u7b49\u4ef7\u4e8e\u521d\u59cb\u7684$n$\u4e3a\u5947\u6570\u3002\u90a3\u4e48\uff0c$n$\u4e3a\u5947\u6570\u662f\u5426\u4e00\u5b9a\u65e0\u89e3\u5462\uff1f\n\n\u4e8b\u5b9e\u4e0a\u6709\u4e00\u79cd\u7b80\u660e\u7684\u6574\u4f53\u5316\u601d\u8003\u65b9\u6cd5\uff1a\u5f53$n$\u4e3a\u5947\u6570\u65f6\uff0c$[1,n]$\u4e2d\u7684\u5947\u6570\u6070\u6bd4\u5076\u6570\u591a\u4e00\u4e2a\uff1b\u4f46\u82e5$i$\u4e3a\u5947\u6570\uff0c\u5219$p_i$\u5fc5\u4e3a\u5076\u6570\uff0c\u5426\u5219\u4e0d\u6ee1\u8db3$p_i\\ \\textrm{and}\\ i=0$\u3002\u8fd9\u6837\u7684\u8bdd\u663e\u7136\u6ca1\u529e\u6cd5\u4e00\u4e00\u5bf9\u5e94\uff0c\u6240\u4ee5\u65e0\u89e3\u3002\n\n#### Task 2\n\n\u611f\u89c9\u8fd9\u4e2a\u6709\u70b9\u96be\u60f3\u3002\n\n\u9996\u5148\u6392\u9664$n$\u6070\u4e3a$2$\u7684\u6574\u6570\u6b21\u5e42\u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u8fd9\u65f6$n$\u6ca1\u529e\u6cd5\u627e\u5230\u5408\u9002\u7684$p_n$\u3002\n\n~~\u6839\u636e\u7f51\u4e0a\u7684\u9898\u89e3~~\uff0c\u5bf9\u4e8e\u6784\u9020\u56fa\u5b9a\u957f\u5ea6\u6392\u5217\u7684\u9898\uff0c\u7ecf\u5e38\u53ef\u4ee5\u4f7f\u7528\u4ea4\u6362\u7684\u65b9\u6cd5\u6765\u89e3\u51b3\u3002\u6240\u4ee5\u6211\u4eec\u5047\u8bbe\u521d\u59cb\u65f6$p_i=i$\uff0c\u5e76\u901a\u8fc7\u82e5\u5e72\u6b21\u4ea4\u6362\u6765\u8fbe\u6210\u6761\u4ef6\u3002\n\n\u8003\u8651\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u6b63\u5076\u6570$2k$\uff0c\u5b83\u548c$2k+1$\u4e4b\u95f4\u53ea\u6709\u6700\u540e\u4e00\u4f4d\u4e0d\u540c\uff0c\u6240\u4ee5$2k\\ \\textrm{and}\\ 2k+1\\neq 0$\uff1b\u90a3\u4e48\u6211\u4eec\u53ea\u8981\u4ea4\u6362$p_{2k},p_{2k+1}$\u5373\u53ef\u3002\n\n\u8fd9\u65f6\uff0c\u5982\u679c$n$\u662f\u5076\u6570\uff0c\u90a3\u6700\u540e\u4f1a\u5269\u4e0b$1$\u548c$n$\u65e0\u5bb6\u53ef\u5f52\u3002\u76f4\u63a5\u4ea4\u6362$p_1$\u548c$p_n$\u663e\u7136\u884c\u4e0d\u901a\uff0c\u56e0\u4e3a$n$\u662f\u5076\u6570\u3002\u8fd9\u65f6\u5019\u6709\u4e00\u4e9b\u5947\u601d\u5999\u60f3\uff1a\u53ea\u8981\u968f\u4fbf\u627e\u4e00\u4e2a\u5947\u6570\u4f4d\u7f6e$s$\u548c$p_1$\u4e92\u6362\uff0c\u8fd9\u6837\u5b83\u4eec\u4e24\u4e2a\u5c31\u4e00\u5b9a\u6ee1\u8db3\uff1b\u5982\u679c\u8fd8\u6709$s-1\\ \\textrm{and}\\ n\\neq 0$\uff0c\u90a3\u53ea\u8981\u4ea4\u6362$p_{s-1}$\u548c$p_n$\u5c31\u597d\u4e86\u3002\n\n\u89c2\u5bdf\u53d1\u73b0$s=n-1$\u6070\u597d\u662f\u6ee1\u8db3\u6761\u4ef6\u7684\uff1a\u56e0\u4e3a$n$\u4e0d\u662f$2$\u7684\u6574\u6570\u6b21\u5e42\uff0c\u6240\u4ee5$n-2$\u548c$n$\u7684\u4e8c\u8fdb\u5236\u6700\u9ad8\u4f4d\u4e00\u5b9a\u662f\u76f8\u540c\u7684\uff0c\u90a3\u4e48\u5b83\u4eec\u7684\u6309\u4f4d\u4e0e\u4e5f\u5c31\u4e0d\u4e3a$0$\u4e86\u3002\u6240\u4ee5\u53ea\u8981\u4ea4\u6362$p_1,p_{n-1}$\u548c$p_{n-2},p_n$\u5c31\u597d\u3002\n\n\u5982\u679c$n$\u662f\u5947\u6570\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u6309\u7167\u4ea4\u6362\u76f8\u90bb\u5947\u6570\u5076\u6570\u7684\u505a\u6cd5\uff0c\u6700\u540e\u4f1a\u5355\u72ec\u5269\u4e0b\u4e00\u4e2a$1$\uff0c\u5f88\u5c34\u5c2c\u3002\u8003\u8651\u5c06\u95ee\u9898\u8f6c\u5316\u4e3a\u5df2\u7ecf\u89e3\u51b3\u7684\u60c5\u51b5\uff0c\u90a3\u5c31\u662f\u5728\u4e00\u4e2a\u957f\u5ea6\u4e3a\u5947\u6570\u7684\u524d\u7f00\u5185\u90e8\u5355\u72ec\u8fdb\u884c\u7279\u5f02\u6027\u6784\u9020\uff0c\u540e\u9762\u5957\u7528\u4ea4\u6362\u76f8\u90bb\u7684\u65b9\u6cd5\u3002\n\n\u6839\u636e\u6837\u4f8b\uff0c\u8fd9\u4e2a\u524d\u7f00\u957f\u5ea6\u4e0d\u80fd\u4e3a$3$\uff1b\u624b\u73a9\u4e00\u628a\u53d1\u73b0$5$\u597d\u50cf\u4e5f\u4e0d\u592a\u884c\u3002\u7136\u540e\u6784\u9020\u51fa\u6765\u4e00\u4e2a$7$\uff1a$p_{1\\dots7}=[3,6,1,5,7,2,4]$\u3002\u6240\u4ee5\u5355\u72ec\u7279\u5224\u6389$n=3,5$\u7684\u60c5\u51b5\uff0c\u5176\u4f59\u7684\u5c31\u5148\u8f93\u51fa\u4e0a\u9762\u7684\u4e03\u4e2a\u6570\uff0c\u540e\u9762\u518d\u7528\u4ea4\u6362\u65b9\u6cd5\u505a\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <algorithm>\n#include <cmath>\n\nusing namespace std;\ntypedef long long ll;\nconst int MAXN = 100005;\nint n;\nint ans1[MAXN],ans2[MAXN];\ninline void calc(int x)\n{\n\tif(x<=0)\n\t    return;\n\tint k = log2(x);\n    reverse(ans1+((1<<(k+1))-x-1),ans1+x+1);\n\tcalc((1<<(k+1))-x-2);\t\n}\ninline void solve1(int n)\n{\n\tif(n&1)\n\t{\n        cout << \"NO\" << endl;\n        return;\n\t}\n\tcout << \"YES\" << endl;\n\tfor(int i = 1; i<=n; i++)\n\t    ans1[i] = i;\n    calc(n);\n    for(int i = 1; i<=n; i++)\n        cout << ans1[i] << \" \";\n    cout << endl;\n}\ninline void solve2(int n)\n{\n\tif(n==(n&-n)||n==3||n==5)\n\t{\n        cout << \"NO\" << endl;\n        return;\n\t}\n\tcout << \"YES\" << endl;\n\tfor(int i = 1; i<=n; i++)\n\t    ans2[i] = i;\n\tif(n&1)\n\t{\n        cout << \"3 6 1 5 7 2 4 \";\n        for(int i = 8; i<=n; i += 2)\n            swap(ans2[i],ans2[i+1]);\n\t    for(int i = 8; i<=n; i++)\n\t        cout << ans2[i] << \" \";\n\t    cout << endl;\n\t}\n\telse\n\t{\n        for(int i = 2; i<=n-3; i += 2)\n            swap(ans2[i],ans2[i+1]);\n        swap(ans2[1],ans2[n-1]);\n        swap(ans2[n],ans2[n-2]);\n        for(int i = 1; i<=n; i++)\n            cout << ans2[i] << \" \";\n        cout << endl;\n\t}\n}\n\nint main()\n{\n    cin >> n;\n    solve1(n), solve2(n);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1582969490,
        "uid": 31098,
        "name": "Caro23333",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF909F \u3010AND-permutations\u3011"
    }
]