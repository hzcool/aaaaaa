[
    {
        "content": "### [\u535a\u5ba2\u9605\u8bfb](https://www.cnblogs.com/wljss/p/13092964.html)\n\n\u6211\u4eec\u8003\u8651\u7528\u9776\u5b50\u6765\u5339\u914d\u5c04\u51fb\u70b9\uff0c\u53ef\u4ee5\u628a\u9776\u5b50\u6309 $z$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u540e\uff0c\u4f9d\u6b21\u5bfb\u627e\u8303\u56f4\u5185\u7684\u7f16\u53f7\u6700\u5c0f\u7684\u5c04\u51fb\u70b9\uff0c\u5e76\u5c06\u5176\u5220\u9664\uff0c\u6b63\u786e\u6027\u663e\u7136\u3002\n\n\u8003\u8651\u5982\u4f55\u4f18\u5316\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u7684\u64cd\u4f5c\u5206\u4e3a\u4e24\u79cd:\n\n$1.$ \u5728\u4e8c\u7ef4\u5e73\u9762\u5185\u627e\u7f16\u53f7\u6700\u5c0f\u7684\u70b9\u3002\n\n$2.$ \u5728\u4e8c\u7ef4\u5e73\u9762\u5185\u5220\u9664\u70b9\u3002\n\n\u53ef\u4ee5\u628a\u5c04\u51fb\u70b9\u5efa\u51fa $KDtree$ \uff0c\u7136\u540e\u7ef4\u62a4\u67e5\u8be2\u548c\u5220\u9664 \uff0c\u5177\u4f53\u5b9e\u73b0\u53ef\u4ee5\u770b\u4ee3\u7801\u3002\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstdio>\n#define lson tr[k].ls\n#define rson tr[k].rs\nusing namespace std;\nint n, m, root, cnt, nowk, ans;\nconst int N = 100010, inf = 1e8;\nint fa[N], pos[N], Ans[N];\nstruct mb \n{\n    int xl, yl, xr, yr, z, id;\n    friend bool operator <(const mb &a, const mb &b)\n    {return a.z < b.z;}\n} B[N];\nstruct sj \n{\n    int x, y, id;\n    friend bool operator <(const sj &a, const sj &b)\n    {return nowk ? a.x < b.x : a.y < b.y;}\n} S[N];\nstruct shu \n{\n    int mn, id, x, y, minx, miny, maxx, maxy, ls, rs;\n} tr[N];\nvoid pushup(int k) \n{\n    tr[k].mn = tr[k].id;\n    if (lson) \n    {\n        tr[k].mn = min(tr[k].mn, tr[lson].mn);\n        tr[k].minx = min(tr[k].minx, tr[lson].minx); tr[k].miny = min(tr[k].miny, tr[lson].miny);\n        tr[k].maxx = max(tr[k].maxx, tr[lson].maxx); tr[k].maxy = max(tr[k].maxy, tr[lson].maxy);\n    }\n    if (rson) \n    {\n        tr[k].mn = min(tr[k].mn, tr[rson].mn);\n        tr[k].minx = min(tr[k].minx, tr[rson].minx); tr[k].miny = min(tr[k].miny, tr[rson].miny);\n        tr[k].maxx = max(tr[k].maxx, tr[rson].maxx); tr[k].maxy = max(tr[k].maxy, tr[rson].maxy);\n    }\n}\nvoid build(int FA, int &k, int l, int r, int KD) \n{\n    if (l > r)return;\n    int mid = (l + r) >> 1; k = ++cnt; nowk = KD;\n    nth_element(S + l, S + mid, S + r + 1);\n    pos[S[mid].id] = k; fa[k] = FA;\n    tr[k].id = tr[k].mn = S[mid].id;\n    tr[k].x = tr[k].minx = tr[k].maxx = S[mid].x;\n    tr[k].y = tr[k].miny = tr[k].maxy = S[mid].y;\n    build(k, lson, l, mid - 1, KD ^ 1); build(k, rson, mid + 1, r, KD ^ 1);\n    pushup(k);\n}\nvoid ask(int k, int xl, int yl, int xr, int yr) \n{\n    if (tr[k].maxx < xl || xr < tr[k].minx || tr[k].maxy < yl || yr < tr[k].miny)return;\n    if (xl <= tr[k].minx && tr[k].maxx <= xr && yl <= tr[k].miny && tr[k].maxy <= yr) {ans = min(ans, tr[k].mn); return;}\n    if (tr[k].id != inf && xl <= tr[k].x && tr[k].x <= xr && yl <= tr[k].y && tr[k].y <= yr) {ans = min(ans, tr[k].id);}\n    if (lson)ask(lson, xl, yl, xr, yr);\n    if (rson)ask(rson, xl, yl, xr, yr);\n}\nvoid shan(int x) \n{\n    tr[x].id = inf;\n    while (x) \n    {\n        pushup(x);\n        x = fa[x];\n    }\n}\nint main() \n{\n    cin >> n;\n    for (int i = 1, xl, xr, yl, yr, z; i <= n; ++i) \n    {\n        scanf(\"%d%d%d%d%d\", &xl, &xr, &yl, &yr, &z);\n        B[i] = (mb) {xl, yl, xr, yr, z, i};\n    }\n    cin >> m;\n    for (int i = 1; i <= m; ++i)\n        scanf(\"%d%d\", &S[i].x, &S[i].y), S[i].id = i;\n    build(0, root, 1, m, 0);\n    sort(B + 1, B + 1 + n);\n    for (int i = 1; i <= n; ++i) \n    {\n        ans = inf; ask(root, B[i].xl, B[i].yl, B[i].xr, B[i].yr);\n        if (ans != inf) \n        {\n            Ans[ans] = B[i].id;\n            shan(pos[ans]);\n        }\n    }\n    for (int i = 1; i <= m; ++i)printf(\"%d\\n\", Ans[i]);\n    return 0;\n}\n```",
        "postTime": 1591856287,
        "uid": 153843,
        "name": "wljss",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF44G \u3010Shooting Gallery\u3011"
    },
    {
        "content": "\u840c\u65b0\u521a\u5b66 `KD-T`\uff0c\u5199\u4e86114514\u5e74\u540e\u7ec8\u4e8e\u8fc7\u4e86\u8fd9\u9053\u9898\u3002\n\n#### \u672c\u9898\u89e3\u6cd5\n\n\u5982\u679c\u8003\u8651\u7528 $m$ \u4e2a\u7ed9\u5b9a\u7684\u5e73\u9762\u7684\u70b9\u53bb\u67e5\u8be2\u80fd\u88ab\u5b83\u5220\u9664\u7684\u77e9\u5f62\u663e\u7136\u4e0d\u4f18\u79c0\uff08\u5927\u6982\u4e09\u53ea $log$ \u53ef\u4ee5\u505a\uff1f\uff09\n\n\u4e8e\u662f\u6211\u4eec\u8003\u8651\u8f6c\u5316\u4e3a\u7528\u6bcf\u4e00\u4e2a\u5e73\u9762\u6765\u5bf9\u5e94 $m$ \u4e2a\u70b9\uff0c\u56e0\u4e3a\u53cd\u6b63\u6bcf\u4e2a\u70b9\u53ea\u80fd\u88ab\u7b97\u4e00\u6b21\u800c\u4e14\u6bcf\u4e2a\u5e73\u9762\u4e5f\u53ea\u80fd\u88ab\u7b97\u4e00\u6b21\uff0c\u6240\u4ee5\u8003\u8651\u8fd9\u6837\u8f6c\u5316\u3002\n\n\u628a $m$ \u4e2a\u70b9\u6bcf\u4e2a\u70b9\u8868\u793a\u4e3a $(x,y,t)$ $(t$ \u8868\u793a\u8fd9\u4e2a\u70b9\u88ab\u7ed9\u51fa\u7684\u65f6\u95f4\uff0c\u4e5f\u5c31\u662f\u7b2c\u51e0\u6b21\u8be2\u95ee$)$\n\n\u5bf9\u4e8e\u7ed9\u51fa\u7684 $m$ \u4e2a\u8be2\u95ee\u70b9\u5efa\u7acb `KD-T`\u3002\u4f60\u9700\u8981\u652f\u6301\u5220\u9664\u67d0\u4e00\u4e2a\u70b9\u4ee5\u53ca\u7ef4\u62a4\u77e9\u5f62\u5185\u7684\u6700\u503c\u3002\n\n\u7136\u540e\u6211\u4eec\u628a\u6bcf\u4e00\u4e2a\u7ed9\u51fa\u7684\u77e9\u5f62\u5148\u6309\u7167\u9ad8\u5ea6\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7136\u540e\u4f9d\u6b21\u626b\u8fc7\u53bb\uff0c\u6bcf\u6b21\u628a\u4e00\u4e2a\u77e9\u5f62\u8986\u76d6\u5230\u7684\u8be2\u95ee\u70b9\u4e2d $t$ \u6700\u5c0f\u7684\u90a3\u4e2a\uff0c\u4e5f\u5c31\u662f\u610f\u5473\u7740\u5b83\u662f\u7b2c\u4e00\u4e2a\u628a\u5f53\u524d\u77e9\u5f62\u5220\u6389\u7684\u8be2\u95ee\u70b9\u3002\n\n\u5e76\u4e14\u56e0\u4e3a\u6211\u4eec\u7684\u77e9\u5f62\u6309\u7167\u9ad8\u5ea6\u6392\u5e8f\u8fc7\u4e86\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u77e5\u9053\u8fd9\u4e2a\u77e9\u9635\u4e00\u5b9a\u662f\u90a3\u4e2a $t$ \u6700\u5c0f\u7684\u8be2\u95ee\u70b9\u5bf9\u5e94\u7684\u7b54\u6848\uff0c\u4e8e\u662f\u6211\u4eec\u628a $ans[t]$ \u8d4b\u503c\u4e3a\u5f53\u524d\u77e9\u5f62\u7684\u7f16\u53f7\uff0c\u7136\u540e\u628a $t$ \u6700\u5c0f\u7684\u90a3\u4e2a\u8be2\u95ee\u70b9\u5728 `KD-T` \u4e0a\u5220\u9664\u3002\n\n\u5220\u9664\u4e00\u4e2a\u70b9\u6709\u4e00\u4e2a\u6280\u5de7\u5c31\u662f\u5148\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u5e73\u9762\u4e0a\u7684\u8be2\u95ee\u70b9\u5728 `KD-T` \u4e0a\u5bf9\u5e94\u7684\u7f16\u53f7\uff0c\u7136\u540e\u6211\u4eec\u5c31\u4e0d\u7528\u9012\u5f52\u53bb\u627e\u8fd9\u4e2a\u88ab\u5220\u9664\u7684\u70b9\u4e86\uff0c\u5c31\u76f4\u63a5\u4ece\u4e0b\u5f80\u4e0a\u66f4\u65b0\u5c31\u5b8c\u4e8b\u4e86\u3002\u5220\u9664\u4e5f\u4e0d\u7528\u771f\u6b63\u7684\u5220\u53bb\uff0c\u5c06\u5176 $t$ \u8d4b\u4e3a $INF$ \u8fd9\u6837\u5b83\u5c31\u65e0\u6cd5\u5bf9\u63a5\u4e0b\u6765\u7684\u64cd\u4f5c\u505a\u51fa\u8d21\u732e\u4e86\u3002\u5b83\u600e\u4e48\u4e5f\u4e0d\u4f1a\u6210\u4e3a\u6700\u5c0f $t$ \u4e86\u3002\n\n\u8fd9\u9053\u9898\u5e76\u4e0d\u9700\u8981\u91cd\u6784\uff01\u56e0\u4e3a `KD-T` \u7684\u6811\u9ad8\u662f $\\log n$ \u7ea7\u522b\u7684\uff0c\u6240\u4ee5\u5220\u9664\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a: $O(\\log{n})$\u3002\u7ed3\u5408 `KD-T` \u5206\u5272\u5e73\u9762\u7684\u6027\u8d28\uff0c\u77e9\u5f62\u67e5\u8be2\u7684\u590d\u6742\u5ea6\u4e3a\uff1a $O(\\sqrt{m})$ \u7684\u3002\n\n\u7a7a\u95f4\u590d\u6742\u5ea6: $O(n)$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6: $O(n \\sqrt{m})$\n\n#### Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ninline int read() {\n    int x = 0, flag = 1;\n    char ch = getchar();\n    for( ; ch > '9' || ch < '0' ; ch = getchar()) if(ch == '-') flag = -1;\n    for( ; ch >= '0' && ch <= '9' ; ch = getchar()) x = (x << 3) + (x << 1) + ch - '0';\n    return x * flag;\n}\nconst int MAXN = 2e5 + 50, B = 317, INF = 998244353;\nint n, m, Ans[MAXN], rt, cnt = 0;\nint DY[MAXN], Cl = 0;\nstruct Point {\n    int x, y, id;\n} P[MAXN];\nstruct Ques {\n    int X1, Y1, X2, Y2, id, h;\n} Q[MAXN];\nstruct Tree {\n    int X, Y, Min, ls, rs, dat, fa;\n    int mx[2], my[2];\n    void clean() {\n        X = Y = ls = rs = mx[1] = my[1] = fa = 0;\n        mx[0] = my[0] = dat = Min = INF; \n    }\n} T[MAXN];\nint MIN(int a, int b) { return a < b ? a : b; }\nbool cmp3(Point a, Point b) { return a.y < b.y; }\nbool cmp2(Point a, Point b) { return a.x < b.x; }\nbool cmp(Ques a, Ques b) { return a.h < b.h; }\nvoid update(int cur) {\n    T[cur].Min = MIN(T[T[cur].rs].Min, T[T[cur].ls].Min);\n    T[cur].Min = MIN(T[cur].Min, T[cur].dat);\n    T[cur].mx[0] = MIN(MIN(T[T[cur].rs].mx[0], T[T[cur].ls].mx[0]), T[cur].mx[0]);\n    T[cur].my[0] = MIN(MIN(T[T[cur].rs].my[0], T[T[cur].ls].my[0]), T[cur].my[0]);\n    T[cur].mx[1] = max(max(T[T[cur].rs].mx[1], T[T[cur].ls].mx[1]), T[cur].mx[1]);\n    T[cur].my[1] = max(max(T[T[cur].rs].my[1], T[T[cur].ls].my[1]), T[cur].my[1]);\n}\nvoid build(int &cur, int L, int R, int D, int fa) {\n    if(L > R) return ;\n    if(!cur) cur = ++ cnt;\n    int mid = (L + R) >> 1;\n    T[cur].fa = fa;\n    if(L == R) {\n        int x = P[L].x, y = P[L].y;\n        T[cur].mx[0] = T[cur].mx[1] = T[cur].X = x;\n        T[cur].my[0] = T[cur].my[1] = T[cur].Y = y;\n        T[cur].dat = T[cur].Min = P[L].id; \n        DY[P[L].id] = cur;\n        return ;\n    }\n    if(D == 0) nth_element(P + L, P + mid, P + 1 + R, cmp2);\n    else nth_element(P + L, P + mid, P + 1 + R, cmp3);\n    T[cur].dat = P[mid].id, T[cur].X = P[mid].x, T[cur].Y = P[mid].y;\n    T[cur].mx[0] = T[cur].mx[1] = T[cur].X;\n    T[cur].my[0] = T[cur].my[1] = T[cur].Y;\n    DY[P[mid].id] = cur;\n    build(T[cur].ls, L, mid - 1, D ^ 1, cur);\n    build(T[cur].rs, mid + 1, R, D ^ 1, cur); \n    update(cur); return ;\n}\nbool out(int x, int X1, int Y1, int X2, int Y2) { return (T[x].mx[0] > X2 || T[x].mx[1] < X1 || T[x].my[0] > Y2 || T[x].my[1] < Y1); }\nbool in(int x, int X1, int Y1, int X2, int Y2) { return (T[x].mx[0] >= X1 && T[x].mx[1] <= X2 && T[x].my[0] >= Y1 && T[x].my[1] <= Y2); }\nint query(int now, int X1, int Y1, int X2, int Y2) {\n    int Min = INF;\n    if(T[now].X >= X1 && T[now].Y >= Y1 && T[now].X <= X2 && T[now].Y <= Y2) Min = T[now].dat;\n    if(out(now, X1, Y1, X2, Y2) || !now) return Min;\n    if(in(now, X1, Y1, X2, Y2)) return min(T[now].Min, T[now].dat);\n    if(T[now].ls) Min = MIN(Min, query(T[now].ls, X1, Y1, X2, Y2));\n    if(T[now].rs) Min = MIN(Min, query(T[now].rs, X1, Y1, X2, Y2));\n    return Min;\n}\nvoid Go(int x, int t) {\n    if(! x) return ;\n    if(T[x].dat == t) T[x].dat = INF; \n    update(x); Go(T[x].fa, t);\n    return ;\n}\n\nint main() {\n    n = read(); T[0].clean();\n    for(int i = 1 ; i <= n ; i ++) Ans[i] = -1;\n    for(int i = 1 ; i <= n ; i ++) {\n        Q[i].X1 = read(), Q[i].X2 = read();\n        Q[i].Y1 = read(), Q[i].Y2 = read();\n        Q[i].h = read(), Q[i].id = i;\n    } rt = 0;\n    m = read();\n    sort(Q + 1, Q + 1 + n, cmp);\n    for(int i = 1 ; i <= m ; i ++) {\n        P[i].x = read(), P[i].y = read();\n        P[i].id = i;\n    }\n    build(rt, 1, m, 0, 0);\n    for(int i = 1 ; i <= n; i ++) {\n        int t = query(rt, Q[i].X1, Q[i].Y1, Q[i].X2, Q[i].Y2);\n        if(t == 998244353 || !t) continue;\n        Ans[t] = Q[i].id, Go(DY[t], t);\n    }\n    for(int i = 1 ; i <= m ; i ++) printf(\"%d\\n\", max(Ans[i], 0));\n    return 0;\n} // ZHY AK IOI gives me the power\n```",
        "postTime": 1624285722,
        "uid": 67817,
        "name": "MuYC",
        "ccfLevel": 6,
        "title": "CF44G Shooting Gallery"
    },
    {
        "content": "## \u4e00\u3001\u9898\u76ee\n[\u70b9\u6b64\u770b\u9898](https://www.luogu.com.cn/problem/CF44G)\n\n**\u7ffb\u8bd1\uff1a**\n\n\u6709$n$\u4e2a\u9776\u5b50\uff0c\u7b2c$i$\u4e2a\u9776\u5b50\u5728\u8ddd\u79bb\u5c04\u51fb\u70b9$z$\u7684\u5730\u65b9\uff0c\u7ed9\u51fa\u9776\u5b50\u7684\u5b9a\u4f4d\uff0c\u6709$m$\u4e2a\u5c04\u51fb\uff0c\u6309\u987a\u5e8f\u8fdb\u884c\uff0c\u6bcf\u4e2a\u5c04\u51fb\u5982\u679c\u51fb\u4e2d\u9776\u5b50\u4f1a\u5c06\u5176\u51fb\u5012\uff0c\u95ee\u6bcf\u4e2a\u5c04\u51fb\u4f1a\u51fb\u4e2d\u54ea\u4e2a\u9776\u5b50\uff0c\u8f93\u51fa\u9776\u5b50\u7684\u7f16\u53f7\uff08\u8f93\u5165\u987a\u5e8f\uff09\n\n**\u6570\u636e\u8303\u56f4**\n\n$n,m\\leq 100000$\uff0c$x,y,z\\leq10^7$\n## \u4e8c\u3001\u89e3\u6cd5\n\u6211\u4eec\u628a\u5c04\u51fb\u5efa$\\text{k-d}$\u6811\uff0c\u9776\u5b50\u770b\u4f5c\u8be2\u95ee\uff0c\u6211\u4eec\u5148\u628a\u9776\u5b50\u6309$z$\u6392\u5e8f\uff0c\u7136\u540e\u67e5\u8be2\u9776\u5b50\u7684\u533a\u57df\u5185\u7684\u987a\u5e8f\u6700\u5c0f\u7684\u5c04\u51fb\uff0c\u8fd9\u5c31\u662f$\\text{k-d}$\u6811\u7684\u57fa\u64cd\u67e5\u8be2\u4e86\u3002\u7136\u540e\u9700\u8981\u5220\u9664\u8fd9\u4e2a\u5c04\u51fb\uff0c\u6211\u4eec\u627e\u5230\u6bcf\u4e2a\u5c04\u51fb\u5728$\\text{k-d}$\u6811\u4e0a\u7684\u70b9\uff0c\u628a\u6743\u503c\u6539\u6210$inf$\uff0c\u7136\u540e\u4e00\u8def\u5411\u7956\u5148\u65b9\u5411\u66f4\u65b0\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f\u6b63\u5e38$\\text{k-d}$\u6811\u7684\u590d\u6742\u5ea6\uff0c\u8d34\u4e2a\u4ee3\u7801$qwq$\u3002\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nconst int M = 100005;\nconst double al = 0.7;\nconst int inf = 1e9;\nint read()\n{\n    int x=0,flag=1;char c;\n    while((c=getchar())<'0' || c>'9') if(c=='-') flag=-1;\n    while(c>='0' && c<='9') x=(x<<3)+(x<<1)+(c^48),c=getchar();\n    return x*flag;\n}\nint n,m,k,opt,rt,cnt,ans[M],pos[M],fa[M];\nint mi[M][2],mx[M][2],Min[M],ls[M],rs[M];\nstruct node\n{\n    int x[2],val;\n}a[M],v[M];\nstruct data\n{\n    int x1,y1,x2,y2,v,id;\n    bool operator < (const data &b) const\n    {\n        return v<b.v;\n    }\n}b[M];\nvoid up(int x)\n{\n    for(int i=0;i<2;i++)\n        mi[x][i]=mx[x][i]=v[x].x[i];\n    if(ls[x])\n        for(int i=0;i<2;i++)\n        {\n            mx[x][i]=max(mx[x][i],mx[ls[x]][i]);\n            mi[x][i]=min(mi[x][i],mi[ls[x]][i]);\n        }\n    if(rs[x])\n        for(int i=0;i<2;i++)\n        {\n            mx[x][i]=max(mx[x][i],mx[rs[x]][i]);\n            mi[x][i]=min(mi[x][i],mi[rs[x]][i]);\n        }\n    Min[x]=v[x].val;\n    if(ls[x]) Min[x]=min(Min[x],Min[ls[x]]);\n    if(rs[x]) Min[x]=min(Min[x],Min[rs[x]]);\n}\nint cmp(node a,node b)\n{\n    return a.x[opt]<b.x[opt];\n}\nvoid build(int &x,int l,int r,int wd)\n{\n    if(l>r) return ;\n    x=++cnt;\n    int mid=(l+r)>>1;\n    opt=wd;\n    nth_element(a+l,a+mid,a+r+1,cmp);\n    v[x]=a[mid];pos[v[x].val]=x;\n    build(ls[x],l,mid-1,wd^1);\n    build(rs[x],mid+1,r,wd^1);\n    fa[ls[x]]=fa[rs[x]]=x;\n    up(x);\n}\nint in(int x1,int y1,int x2,int y2,int x3,int y3,int x4,int y4)\n{\n    return x1<=x3 && x4<=x2 && y1<=y3 && y4<=y2;\n}\nint out(int x1,int y1,int x2,int y2,int x3,int y3,int x4,int y4)\n{\n    return x1>x4 || x2<x3 || y1>y4 || y2<y3;\n}\nint ask(int x,int x1,int y1,int x2,int y2)\n{\n    if(!x) return inf;\n    if(in(x1,y1,x2,y2,mi[x][0],mi[x][1],mx[x][0],mx[x][1]))\n        return Min[x];\n    if(out(x1,y1,x2,y2,mi[x][0],mi[x][1],mx[x][0],mx[x][1]))\n        return inf;\n    int r=inf;\n    if(in(x1,y1,x2,y2,v[x].x[0],v[x].x[1],v[x].x[0],v[x].x[1]))\n        r=v[x].val;\n    r=min(r,ask(ls[x],x1,y1,x2,y2));\n    r=min(r,ask(rs[x],x1,y1,x2,y2));\n    return r;\n}\nvoid del(int x)\n{\n    v[x].val=inf;\n    while(x)\n    {\n        up(x);\n        x=fa[x];\n    }\n}\nsigned main()\n{\n    n=read();\n    for(int i=1;i<=n;i++)\n    {\n        int x=read(),y=read(),c=read(),d=read(),z=read();\n        b[i]=data{x,c,y,d,z,i};\n    }\n    sort(b+1,b+1+n);\n    m=read();\n    for(int i=1;i<=m;i++)\n    {\n        int x=read(),y=read();\n        a[i]=node{x,y,i};\n    }\n    build(rt,1,m,0);\n    for(int i=1;i<=n;i++)\n    {\n        int t=ask(rt,b[i].x1,b[i].y1,b[i].x2,b[i].y2);\n        if(t==inf) continue;\n        int x=pos[t];\n        ans[t]=b[i].id;\n        del(x);\n    }\n    for(int i=1;i<=m;i++)\n        printf(\"%d\\n\",ans[i]);\n}\n\n```\n\n",
        "postTime": 1584496874,
        "uid": 128239,
        "name": "C20203030",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF44G \u3010Shooting Gallery\u3011"
    }
]