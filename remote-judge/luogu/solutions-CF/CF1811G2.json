[
    {
        "content": "\u7eaa\u5ff5\u4e00\u4e0b\u7b2c\u4e00\u6b21\u4e0d\u770b\u9898\u89e3\uff0c\u4e0d\u770b\u7b97\u6cd5\u6807\u7b7e\u505a\u51fa CF \u8bc4\u5206 2200\u3002   \n\u867d\u7136\u5b9e\u9645\u4e0a\u6700\u591a\u63d0\u9ad8\u7ec4 T1\u3002  \n## G1 \u505a\u6cd5  \nG2 \u505a\u6cd5\u53ea\u9700\u8981\u5728 G1 \u57fa\u7840\u4e0a\u7a0d\u5fae\u4fee\u6539\u3002  \n\n\u5f88\u81ea\u7136\u60f3\u5230\u8bbe $dp_{i,j}$ \u8868\u793a\u7b2c $i$ \u4f4d\u662f\u8def\u5f84\u7684\u7b2c $j$ \u4e2a\u70b9\u7684\u65b9\u6848\u6570\u3002  \n\n\u60f3\u4e00\u4e0b\u5982\u4f55\u8f6c\u79fb\uff0c\u5bf9\u4e8e $i = 1$\uff0c\u663e\u7136\u65b9\u6848\u6570\u662f $1$\u3002  \n\u5bf9\u4e8e $i \\ge  2$\uff0c\u5206\u4e00\u4e0b\u7c7b\uff1a  \n1. \u82e5 $i \\equiv 1 \\pmod k$\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6240\u6709 $j \\le i-1$\uff0c\u4ece $dp_{j,i-1}$ \u8f6c\u79fb\uff0c\u989c\u8272\u4e0d\u7528\u7ba1\u3002   \n2. \u5426\u5219\uff0c\u8fd8\u8981\u5728\u60c5\u51b5 1 \u7684\u57fa\u7840\u4e0a\u52a0\u4e0a\u4e00\u6761\u9650\u5236\uff1a\u7b2c $i$ \u4e2a\u70b9\u4e0e $j$ \u70b9\u989c\u8272\u76f8\u540c\u3002  \n\n\u4e3b\u8981\u601d\u60f3\u5c31\u662f\u8fd9\u4e2a\u3002  \n\n\u5173\u4e8e\u600e\u4e48\u7edf\u8ba1\u4e4b\u524d\u7b26\u5408\u67d0\u4e9b\u6761\u4ef6\u7684\u72b6\u6001\u7b54\u6848\u7efc\u5408\uff0c\u8fd9\u4e2a\u5f00\u4e2a\u6570\u7ec4\u8bb0\u4e00\u4e0b\u5c31\u884c\u4e86\uff0c\u90fd\u628a dp \u8bbe\u8ba1\u51fa\u6765\u4e86\uff0c\u8fd9\u4e48\u7b80\u5355\u7684\u60f3\u5fc5\u90fd\u4f1a\u3002  \n\n\u5269\u4e0b\u7684\u5c31\u662f\u4ece\u5927\u5230\u5c0f\u679a\u4e3e $m$\uff0c\u6bcf\u6b21\u8dd1\u4e00\u904d dp\uff0c\u627e\u5230\u7b54\u6848\u5c31\u7ec8\u6b62\u3002  \n\ndp \u590d\u6742\u5ea6 $O(n^2)$\u3002  \n\n\u679a\u4e3e\u6700\u52a3\u590d\u6742\u5ea6 $O(n)$\u3002 \n\n\u603b\u590d\u6742\u5ea6 $O(n^3)$\u3002  \n\n## G2 \u505a\u6cd5  \ndp \u4e0d\u5927\u53ef\u80fd\u4f18\u5316\u4e86\uff0c\u770b\u679a\u4e3e\u8fc7\u7a0b\u5f88\u65b9\u4fbf\u4f18\u5316\u3002  \n\n\u4e3b\u8981\u5c31\u662f\u4f18\u5316\u5bfb\u627e\u6700\u957f\u8def\u5f84\u957f\u5ea6\u7684\u8fc7\u7a0b\u3002  \n\n\u6211\u4eec\u53ef\u4ee5\u5148\u505a\u4e00\u904d dp\uff0c\u770b\u8def\u5f84\u957f\u5ea6\u6700\u9ad8\u5230\u591a\u5c11\uff0c\u4f7f\u5f97\u7b54\u6848\u4e0d\u4e3a $0$\u3002  \n\n\u7136\u540e\u5bf9\u8fd9\u4e2a\u8def\u5f84\u957f\u5ea6 dp \u4e00\u4e0b\u5c31\u884c\u4e86\u3002  \n\nUPD\uff1a\u505a\u6cd5\u9ebb\u70e6\u4e86\uff0c\u5b9e\u9645\u4e0a\u76f4\u63a5 dp \u4e00\u904d\u5c31\u884c\u4e86\u3002  \n\n## Code  \n```cpp\n// LUOGU_RID: 107120197\n#include <bits/stdc++.h>\nusing namespace std;\n#define FOR(i, a, b) for (int i = a; i <= b; i++)\n#define REP(i, a, b) for (int i = a; i >= b; i--)\n#define pb push_back()\n#define mkpr make_pair\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\nconst int maxn = 5005;\ntypedef long long ll;\nconst ll mod = 1e9 + 7;\nint t;\nint n, k;\nint c[maxn];\nll dp[maxn][maxn];  // \u7b2c i \u4f4d\u72b6\u6001\u4e3a j\nll sum[maxn][maxn]; // \u989c\u8272\u4e3a i\uff0c\u72b6\u6001\u4e3a j\uff0cdp \u503c\u548c\nll sum2[maxn];      // \u72b6\u6001\u4e3a i dp \u603b\u548c\nbool dp2[maxn][maxn],sum21[maxn][maxn],sum22[maxn];\ninline int turn(int status)\n{\n    if (status % k == 0)\n        return k;\n    return status % k;\n}\nint main()\n{\n    scanf(\"%d\", &t);\n    while (t--)\n    {\n        scanf(\"%d%d\", &n, &k);\n        FOR(i, 1, n)\n        {\n            scanf(\"%d\", &c[i]);\n        }\n        ll ans = 0;\n        FOR(i, 1, n)\n        {\n            dp2[i][1]=1;\n            FOR(j, 2, n)\n            {\n                if (turn(j) == 1)\n                {\n                    dp2[i][j]|=sum22[j-1];\n                }\n                else\n                {\n                    dp2[i][j]|=sum21[c[i]][j-1];\n                }\n            }\n            FOR(j, 1, n)\n            {\n                sum22[j] |= dp2[i][j];\n                sum21[c[i]][j] |= dp2[i][j];\n            }\n        }\n        int blocks = n / k;\n        bool isansoutputed=0;\n        for (int m = blocks * k; m > 0; m -= k)\n        {\n            bool flag = 0;\n            FOR(i, 1, n)\n            {\n                if (dp2[i][m])\n                {\n                    flag = 1;\n                    break;\n                }\n            }\n            if (flag)\n            {\n             //   printf(\"m = %d\\n\", m);\n                FOR(i, 1, n)\n                {\n                    dp[i][1] = 1;\n                    FOR(j, 2, m)\n                    {\n                        if (turn(j) == 1)\n                        {\n                            dp[i][j] += sum2[j - 1];\n                        }\n                        else\n                        {\n                            dp[i][j] += sum[c[i]][j - 1];\n                        }\n                        dp[i][j] %= mod;\n                    }\n                    FOR(j, 1, m)\n                    {\n                        sum2[j] += dp[i][j];\n                        sum2[j]%=mod;\n                        sum[c[i]][j] += dp[i][j];\n                        sum[c[i]][j] %= mod;\n                    }\n                }\n                FOR(i, 1, n)\n                {\n                    ans += dp[i][m];\n                    ans%=mod;\n                    FOR(j, 1, n)\n                    {\n                        //    printf(\"dp[%d][%d] = %d\\n\",i,j,dp[i][j]);\n                        dp[i][j] = 0;\n                        sum[i][j] = 0;\n                    }\n                    sum2[i] = 0;\n                }\n                isansoutputed=1;\n                break;\n            }\n        }\n        if (!isansoutputed)\n            ans++;\n        printf(\"%lld\\n\", ans % mod);\n        FOR(i, 1, n)\n        {\n            sum2[i] = sum22[i]=0;\n            FOR(j, 1, n)\n            {\n                dp[i][j] = dp2[i][j]=0;\n                sum[i][j] = sum21[i][j]=0;\n            }\n        }\n    }\n    return 0;\n}\n```\n",
        "postTime": 1681013421,
        "uid": 507348,
        "name": "__vector__",
        "ccfLevel": 0,
        "title": "CF1811G2 \u9898\u89e3"
    },
    {
        "content": "\u5e8f\u5217\u5206\u6bb5\uff0c\u8fd8\u662f\u5b50\u5e8f\u5217\uff0c\u4e0d\u96be\u60f3\u5230 dp\u3002\n\n\u8bbe $f_i$ \u8868\u793a\u4ee5 $i$ \u4e3a\u7ed3\u5c3e\uff0c\u4e14\u6700\u540e\u4e00\u6bb5\u989c\u8272\u4e3a $a_i$ \u7684\u5b50\u5e8f\u5217\u6700\u5927\u957f\u5ea6\u3002\n\n\u8bbe $g_i$ \u8868\u793a\u4ee5 $i$ \u4e3a\u7ed3\u5c3e\uff0c\u4e14\u6700\u540e\u4e00\u6bb5\u989c\u8272\u4e3a $a_i$ \u7684\u957f\u5ea6\u6700\u5927\u7684\u5b50\u5e8f\u5217\u4e2a\u6570\u3002\n\n\u8f6c\u79fb\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u679a\u4e3e\u6700\u540e\u7684\u4e00\u6bb5\u3002\u90a3\u4e48\u4ece $j$ \u8f6c\u79fb\u5230 $i$\uff0c$j$ \u5408\u6cd5\u7684\u6761\u4ef6\u662f\uff1a\n\n$$\\sum_{x=j+1}^i[a_x=a_i] \\ge k$$\n\n\u90a3\u4e48\u6211\u4eec\u679a\u4e3e\u6bcf\u4e00\u4e2a $j$\u3002\u5982\u679c $j$ \u5408\u6cd5\uff0c\u90a3\u4e48\u5bb9\u6613\u5199\u51fa $f_i$ \u7684\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$$f_i=\\max_{j}\\{f_j+k\\}$$\n\n\u8f6c\u79fb\u5b8c $f_i$ \u4e4b\u540e\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4ece\u6700\u7ec8\u72b6\u6001\u51fa\u53d1\u8f6c\u79fb $g_i$\uff1a\u5bf9\u4e8e\u6240\u6709\u6ee1\u8db3 $f_j+k=f_i$ \u7684 $j$\uff0c\u5047\u8bbe\u4ece $j+1$ \u5230 $i$ \u8fd9\u4e00\u6bb5\uff0c\u4e00\u5171\u6709 $col_j$ \u4e2a\u989c\u8272 $a_i$\uff0c\u53ef\u4ee5\u5199\u51fa $g_i$ \u7684\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$$g_i=\\sum_{j} f_j \\times {col_j-1 \\choose k-1}$$\n\n\u539f\u56e0\u5c31\u662f $a_i$ \u5fc5\u987b\u5f97\u9009\uff0c\u5176\u5b83\u7684\u53ea\u8981\u968f\u610f\u6311 $k-1$ \u4e2a\u5c31\u884c\u4e86\u3002\n\n\u9884\u5904\u7406\u7ec4\u5408\u6570\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2)$\u3002\n\n### Code\uff1a\n\n```c++\n#include <bits/stdc++.h>\nusing namespace std;\n#define N 5000\nint t, n, k, ans, mx, a[5010], f[5010], s[5010], jc[5010], inv[5010];\nconst int mo = 1e9 + 7;\nint power(int x, int y){\n\tint ret = 1;\n\twhile (y){\n\t\tif (y&1) ret = 1LL * ret * x % mo;\n\t\tx = 1LL * x * x % mo;\n\t\ty >>= 1;\n\t}\n\treturn ret;\n}\nint C(int x, int y){\n\treturn 1LL*jc[x]*inv[y]%mo*inv[x-y]%mo;\n}\nint main(){\n\tscanf (\"%d\", &t);\n\tjc[0] = 1;\n\tfor (int i=1; i<=5000; i++){\n\t\tjc[i] = 1LL * jc[i-1] * i % mo;\n\t}\n\tinv[N] = power(jc[N], mo-2);\n\tfor (int i=N-1; i>=0; i--){\n\t\tinv[i] = 1LL * inv[i+1] * (i+1) % mo;\n\t}\n\twhile (t --){\n\t\tscanf (\"%d%d\", &n, &k);\n\t\tfor (int i=1; i<=n; i++){\n\t\t\ts[i] = f[i] = 0;\n\t\t\tscanf (\"%d\", &a[i]);\n\t\t}\n\t\ts[0] = 1;\n\t\tfor (int i=k; i<=n; i++){\n\t\t\tint now = 0;\n\t\t\tfor (int j=i; j>=0; j--){\n\t\t\t\tif (now >= k){\n\t\t\t\t\tif (f[j] + k > f[i]){\n\t\t\t\t\t\tf[i] = f[j] + k;\n\t\t\t\t\t\ts[i] = (1LL * s[j] * C(now-1, k-1)) % mo;\n\t\t\t\t\t}\n\t\t\t\t\telse if (f[j] + k == f[i]){\n\t\t\t\t\t\ts[i] = (s[i] + 1LL * s[j] * C(now-1, k-1) % mo) % mo;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (a[j] == a[i]) now ++; \n\t\t\t}\n\t\t}\n\t\tmx = -1, ans = 0;\n\t\tfor (int i=0; i<=n; i++){\n\t\t\tif (f[i] > mx) mx = f[i], ans = s[i];\n\t\t\telse if (f[i] == mx) ans = (ans + s[i]) % mo;\n\t\t}\n\t\tprintf (\"%d\\n\", ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1680656984,
        "uid": 399286,
        "name": "\u82cf\u8054\u5c0f\u6e23",
        "ccfLevel": 0,
        "title": "[\u9898\u89e3] CF1811G2 Vlad and the Nice Paths (hard version)"
    }
]