[
    {
        "content": "## CF 1286 B\uff1aNumbers on Tree\n\n\u63d0\u4f9b\u4e00\u79cd\u5bb9\u6613\u7406\u89e3\uff0c\u548c\u76ee\u524d\u6240\u6709\u6d1b\u8c37\u9898\u89e3\u4e0d\u540c\u7684\u505a\u6cd5\u3002\n\n\u9898\u76ee\u8981\u6c42\u6784\u9020\u4e00\u79cd\u6743\u503c\u65b9\u6848\uff0c\u6839\u636e\u9898\u76ee\u8981\u6c42\uff0c\u5176\u5b9e\u53ea\u5173\u5fc3\u6743\u503c\u7684**\u76f8\u5bf9\u5927\u5c0f\u5173\u7cfb**\u3002\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5148\u4ee4\u4e00\u4e2a\u96c6\u5408 $S=\\{1,\\cdots,n\\}$\uff0c\u5e76\u4e14\u7b97\u51fa $S$ \u4e2d\u70b9\u6743\u6700\u5c0f\u7684\u4e00\u4e2a\u70b9 $i$\uff0c\u5c06 $i$ \u4ece $S$ \u4e2d\u5220\u53bb\uff0c\u518d\u51b3\u5b9a\u5269\u4f59 $S$ \u4e2d\u70b9\u7684\u6700\u5c0f\u70b9\u6743\uff08\u5373\u5168\u6811\u7684\u6b21\u5c0f\u70b9\u6743\uff09\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u505a\u5b8c $n$ \u8f6e\u4ee5\u540e\u5c31\u5f97\u5230\u4e86\u6240\u6709\u70b9\u6743\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u518d\u6309\u987a\u5e8f\u8d4b\u503c $1,\\cdots,n$ \u5c31\u5f97\u5230\u4e86\u4e00\u79cd\u6743\u503c\u65b9\u6848\u3002\n\n\u4e0b\u9762\u8003\u8651\u600e\u4e48\u6c42\u51fa $S$ \u4e2d\u6743\u503c\u6700\u5c0f\u8005\u3002\n\n\u4ee4 $d_i$ \u8868\u793a\u6ee1\u8db3 $j\\in S$ \u4e14 $j$ \u5728 $i$ \u5b50\u6811\u5185\u7684 $a_j<a_i$ \u7684\u4e2a\u6570\uff0c\u90a3\u4e48\u4e00\u5f00\u59cb $d_i=c_i$\u3002\u5bb9\u6613\u53d1\u73b0 $S$ \u4e2d\u70b9\u6743\u6700\u5c0f\u7684\u70b9\u7684 $d_i$ \u5fc5\u7136\u7b49\u4e8e\u96f6\uff08\u5426\u5219\u6709\u4e00\u4e2a\u66f4\u5c0f\u7684\uff09\uff0c\u4e0b\u9762\u5c31\u6709\u4e24\u79cd\u5904\u7406\u65b9\u5f0f\uff1a\n\n1. \u5c06\u6240\u6709 $d_i=0$ \u7684 $i$ \u7684\u70b9\u6743\u8bbe\u6210\u4e00\u4e2a\u76f8\u540c\u7684\u503c $C$\uff0c\u4f5c\u4e3a\u6700\u5c0f\u503c\u3002\n\n2. \u6309\u7167\u521a\u521a\u8bf4\u7684\u4e00\u4e2a\u4e2a\u6765\u786e\u5b9a\uff0c\u5982\u679c\u6709\u4e00\u5bf9\u70b9\u662f\u7956\u5148\u5173\u7cfb\uff0c\u4e14 $d_i$ \u90fd\u4e3a $0$\uff0c\u90a3\u4e48\u663e\u7136\u7956\u5148\u5e94\u8be5\u5c0f\u4e8e\u7b49\u4e8e\u540e\u4ee3\uff08\u5426\u5219\u7956\u5148\u7684\u90a3\u4e2a $d_i$ \u5c31\u4e0d\u662f $0$ \u4e86\uff09\uff0c\u6240\u4ee5\u5728 $d_i=0$ \u7684\u60c5\u51b5\u4e0b\u518d\u6309\u7167\u6df1\u5ea6\u4ece\u5c0f\u5230\u5927\u6392\uff0c\u51b3\u5b9a\u6743\u503c\u5927\u5c0f\u3002\u6839\u636e\u8fd9\u79cd\u65b9\u6cd5\u5f97\u5230\u7684\u6743\u503c\u662f\u6ca1\u6709\u91cd\u590d\u7684\u3002\n\n\u4ece $S$ \u4e2d\u53d6\u51fa\u6700\u5c0f\u503c $i$\uff0c\u8fd8\u8981\u5bf9 $i$ \u7684\u6240\u6709\u7956\u5148 $j$ \u7684 $d_j$ \u503c\u51cf $1$\uff0c\u56e0\u4e3a\u5269\u4f59\u96c6\u5408\u4e2d\u6bd4 $j$ \u5c0f\u7684\u6570\u4e2d\u5df2\u7ecf\u4e0d\u5305\u542b $i$\u3002\n\n\u5177\u4f53\u5b9e\u73b0\uff1a\u53ef\u4ee5\u7528\u4e00\u4e2a\u4f18\u5148\u961f\u5217\u7ef4\u62a4 $S$ \u4e2d\u6240\u6709 $d_i=0$ \u7684\u70b9 $i$\uff0c\u961f\u5217\u5185\u6309\u7167\u6df1\u5ea6\u6392\u5e8f\uff0c\u6bcf\u6b21\u53d6\u51fa\u961f\u9996 $i$\uff0c\u5c06 $i$ \u7684\u6240\u6709\u7956\u5148 $d_i$ \u503c\u51cf $1$\uff0c\u5982\u679c\u51cf\u5230\u4e86 $0$ \u5c31\u5c06\u90a3\u4e2a\u70b9\u52a0\u5165\u4f18\u5148\u961f\u5217\u3002\n\n\u6ce8\u610f\u5982\u679c\u67d0\u4e2a\u65f6\u523b\u4f18\u5148\u961f\u5217\u7a7a\u4e86\u800c\u8fd8\u6709\u70b9\u6ca1\u6709\u8d4b\u6743\uff0c\u5219\u7b54\u6848\u5c31\u662f No\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^2)$\uff0c\u5982\u679c\u613f\u610f\u7684\u8bdd\u53ef\u4ee5\u4f18\u5316\u5230 $O(n\\log n)$\uff08\u53ea\u9700\u8981\u5c06\u7956\u5148 $-1$ \u8fd9\u4e2a\u64cd\u4f5c\u7528\u6570\u636e\u7ed3\u6784\u4f18\u5316\u6389\u5c31\u53ef\u4ee5\u4e86\uff09\uff0c\u4ee3\u7801\u6bd4\u5b50\u6811 sort \u7684\u8981\u597d\u7406\u89e3\u4e00\u4e9b\u5427\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN=2010;\nint n,r,eg,dep[MAXN],f[MAXN],c[MAXN],a[MAXN],hd[MAXN],ver[2*MAXN],nx[2*MAXN];\nstruct cmp {\n\tbool operator () (int a,int b) {return dep[a]>dep[b];}\n};\npriority_queue <int,vector<int>,cmp> q;\nvoid add_edge (int x,int y) {\n\tver[++eg]=y;\n\tnx[eg]=hd[x];\n\thd[x]=eg;\n\treturn;\n}\nvoid dfs (int x,int fa) {\n\tdep[x]=dep[fa]+1;\n\tfor (int i=hd[x];i;i=nx[i]) {\n\t\tif (ver[i]!=fa) {\n\t\t\tdfs(ver[i],x);\n\t\t}\n\t}\n\tif (c[x]==0) {q.push(x);}\n\treturn;\n}\nint main () {\n\tscanf(\"%d\",&n);\n\tfor (int i=1;i<=n;i++) {\n\t\tscanf(\"%d%d\",&f[i],&c[i]);\n\t\tif (f[i]==0) {r=i;}\n\t\tif (f[i]) {add_edge(i,f[i]),add_edge(f[i],i);}\n\t}\n\tdfs(r,0);\n\tint cnt=0;\n\twhile (!q.empty()) {\n\t\tint tmp=q.top();\n\t\tq.pop();\n\t\tcnt++;\n\t\ta[tmp]=cnt;\n\t\twhile (tmp) {\n\t\t\tif (--c[tmp]==0) {q.push(tmp);}\n\t\t\ttmp=f[tmp];\n\t\t}\n\t}\n\tif (cnt==n) {\n\t\tprintf(\"YES\\n\");\n\t\tfor (int i=1;i<=n-1;i++) {\n\t\t\tprintf(\"%d \",a[i]);\n\t\t}\n\t\tprintf(\"%d\\n\",a[n]);\n\t} else {\n\t\tprintf(\"NO\\n\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1578560477,
        "uid": 113546,
        "name": "ix35",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1286B \u3010Numbers on Tree\u3011"
    },
    {
        "content": "\u6784\u9020\n\n\u9898\u76ee\u8bf4\u8f93\u51fa\u5fc5\u987b\u5728$1$~$10\n^9$\u4e4b\u95f4\uff0c\u4f46\u6700\u540e\u79bb\u6563\u5316\u5373\u53ef\uff0c\u4e0d\u7528\u7ba1\u3002\n\n\u8003\u8651\u4e4b\u540e\u7684\u505a\u6cd5\u3002\n\n\u5c06\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684\u6240\u6709\u5b50\u6811\u7684\u503c\u6392\u5e8f\uff0c\u7136\u540e\u5c06\u81ea\u5df1\u7684\u503c\u653e\u5728\u7b2c$c[i]+1$\u4e2a\n\n\u4f46\u6709\u65f6\u4f1a\u51fa\u73b0\u76f8\u7b49\u7684\u503c\uff0c\u8fd9\u65f6\u65e0\u6cd5\u653e\u5728\u4e2d\u95f4\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5b9e\u6570\u548c\u968f\u673a\u6570\uff0c\u4e3a\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u968f\u673a\u8d4b\u503c\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define re register\ninline int read(){\n\tre int t=0,f=1;\n\tre char v=getchar();\n\twhile(v<'0'||v>'9'){\n\t\tif(v=='-')f=-1;\n\tv=getchar();}\n\twhile(v>='0'&&v<='9'){\n\t\tt=(t<<3)+(t<<1)+(v^48);\n\t\tv=getchar();\n\t}\n\treturn t*f;\n}\nstruct edge{\n\tint to,next;\n}e[4002];\nint head[2002],cnt;\nstruct value{\n\tint pos;\n\tdouble val;\n}vv[2002];\ninline bool cmp(re value x,re value y){\n\treturn x.val<y.val;\n}\ndouble num[2002][2002];\ninline void add(re int x,re int y){\n\te[++cnt].to=y;\n\te[cnt].next=head[x];\n\thead[x]=cnt;}\nint n,a,c[2002],m,rt,siz[2002];\nbool ia;\ndouble sss;\ninline void dfs(re int x){\n\tfor(re int i=head[x];i;i=e[i].next){\n\t\tdfs(e[i].to);\n\t\tif(ia)return;\n\t\tfor(re int j=siz[x]+1;j<=siz[e[i].to]+siz[x];++j){\n\t\t\tnum[x][j]=num[e[i].to][j-siz[x]];\n\t\t}\n\t\tsiz[x]+=siz[e[i].to];\n\t}\n\tsort(num[x]+1,num[x]+siz[x]+1);\n\tif(c[x]>siz[x]){\n\t\tia=1;\n\t\tputs(\"NO\");\n\t\treturn;\n\t}\n\t++siz[x];\n\tif(c[x]==0){\n\t\tif(siz[x]==1)num[x][siz[x]]=(rand()*rand()%1000000)+x;\n\t\telse num[x][siz[x]]=num[x][1]/2;\n\t}\n\telse if(c[x]==siz[x]-1){\n\t\tnum[x][siz[x]]=(1e9+num[x][siz[x]-1])/2;\n\t}\n\telse num[x][siz[x]]=(num[x][c[x]]+num[x][c[x]+1])/2;\n \n\tvv[x].pos=x;\n\tvv[x].val=num[x][siz[x]];\n}\nint ans[2002];\nint main(){\nn=read();\nsrand((unsigned)time(NULL));\nfor(re int i=1;i<=n;++i){\n\ta=read();\n\tif(a==0)rt=i;\n\telse add(a,i);\n\tc[i]=read();\n}\ndfs(rt);\nif(ia)return 0;\nsort(vv+1,vv+n+1,cmp);\nputs(\"YES\");\n/*\nfor(re int i=1;i<=n;++i){\n\tprintf(\"%d %.4lf \",vv[i].pos,vv[i].val);\n}*/\nfor(re int i=1;i<=n;++i)ans[vv[i].pos]=i;\nfor(re int i=1;i<=n;++i)printf(\"%d \",ans[i]);\n}\n```\n",
        "postTime": 1578396998,
        "uid": 41476,
        "name": "gyh20",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1286B \u3010Numbers on Tree\u3011"
    },
    {
        "content": "\n#### B. Numbers on Tree\n\n\u9898\u9762\uff1ahttps://codeforces.com/contest/1287/problem/D\n\n\u9898\u89e3\uff1a\u8003\u8651\u4ece\u4e0b\u5230\u4e0a\u89e3\u51b3\u95ee\u9898\u3002\n\n\u6bcf\u6b21\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5f53\u524d\u8282\u70b9\u5b50\u6811\u4e2d\u7684\u70b9\u7684\u503c\u90fd\u52a0\u8fdb\u4e00\u4e2a\u5806\u91cc\uff0c\n\n\u627e\u5230\u5206\u754c\u4f4d\u7f6e\u628a\u5f53\u524d\u8282\u70b9\u7684$a[i]$\u8d4b\u503c\uff0c\u5e76\u7ed9\u5176\u540e\u9762\u7684\u5bf9\u5e94\u70b9\u7684\u503c+1\u3002\n\n\u4f46\u8fd9\u6837\u505a\u662f\u4e0d\u5bf9\u7684\uff0c\u56e0\u4e3a\u6709\u53ef\u80fd\u5728\u4e00\u6b21\u64cd\u4f5c\u4e2d\uff0c\u8fd9\u6837\u7684\u52a0\u64cd\u4f5c\u53ef\u80fd\u4f1a\u6539\u53d8\n\n\u4e4b\u524d\u5b50\u6811\u5185\u70b9\u7684\u5927\u5c0f\u5173\u7cfb\u3002\u8003\u8651\u5982\u4f55\u907f\u514d\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u53ef\u4ee5\u8bc1\u660e\uff0c\u5982\u679c\u6709\u89e3\uff0c\u4e00\u5b9a\u5b58\u5728\u4e00\u79cd\u65b9\u6848\uff0c\u4f7f\u5f97\u6240\u6709\u70b9\u7684$a[i]$\u90fd\u4e0d\u4e00\u6837\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u8bb0\u5f55\u4e00\u4e0b\u4e0a\u6b21\u5806\u91cc\u7684\u6700\u5927\u503c\uff0c\u4e0b\u6b21\u5148\u7ed9\u6240\u6709\u70b9\u7684\u503c\u52a0\u4e0a\u8fd9\u4e2a\u6700\u5927\u503c\uff0c\u518d\u8fdb\u5806\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO($n^2$logn)\n\n\u4ee3\u7801\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define re register int\n#define F(x,y,z) for(re x=y;x<=z;x++)\n#define FOR(x,y,z) for(re x=y;x>=z;x--)\ntypedef long long ll;\n#define I inline void\n#define IN inline int\n#define C(x,y) memset(x,y,sizeof(x))\n#define STS system(\"pause\")\nI read(int &res){\n\tres=0;re g=1;register char ch=getchar();\n\twhile(!isdigit(ch)){\n\t\tif(ch=='-')g=-1;\n\t\tch=getchar();\n\t}\n\twhile(isdigit(ch)){\n\t\tres=(res<<3)+(res<<1)+(ch^48);\n\t\tch=getchar();\n\t}\n\tres*=g;\n}\ntypedef pair<int,int>pii;\npriority_queue<pii>q;\nvector<int>e[2020];\nint n,m,root,tot,bas,dep[2020],fa[2020],c[2020],w[2020];\npii b[2020];\nI D_1(int x,int d){\n\tdep[x]=d;q.emplace(make_pair(d,x));\n\tfor(auto p:e[x])D_1(p,d+1);\n}\nI D_2(int x){\n\tw[x]+=bas;\n\tb[++tot]=make_pair(w[x],x);\n\tfor(auto p:e[x])D_2(p);\n}\nint main(){\n\tread(n);\n\tF(i,1,n)read(fa[i]),read(c[i]);\n\tF(i,1,n)if(!fa[i])root=i;else e[fa[i]].emplace_back(i);\n\tD_1(root,1);\n\twhile(!q.empty()){\n\t\tm=q.top().second;q.pop();tot=bas=0;\n\t\tfor(auto p:e[m]){\n\t\t\tD_2(p);sort(b+1,b+1+tot);bas=b[tot].first;\n\t\t}\n\t\tif(tot<c[m]){cout<<\"NO\";return 0;}\n\t\tsort(b+1,b+1+tot);w[m]=b[c[m]].first+1;\n\t\tF(i,c[m]+1,tot)w[b[i].second]++;\n\t}\n\tcout<<\"YES\"<<endl;\n\tF(i,1,n)cout<<w[i]<<\" \";\n\treturn 0;\n}\n```\n\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\uff1ahttps://www.cnblogs.com/Purple-wzy/",
        "postTime": 1578376750,
        "uid": 93453,
        "name": "Purple_wzy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1286B \u3010Numbers on Tree\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u6784\u9020\u9898\uff01\n\n\u90a3\u4e48\u5982\u679c\u6709\u89e3\uff0c\u80af\u5b9a\u80fd\u6784\u9020\u51fa\u6bcf\u4e2a\u6570\u7684\u6743\u503c\u90fd\u4e0d\u540c\u7684\u4e00\u79cd\u89e3\u6cd5\n\n\u53cd\u4e4b\uff0c\u4e0d\u4e00\u5b9a\u80fd\u6784\u9020\u51fa\u6709\u6570\u7684\u6743\u503c\u76f8\u540c\u7684\u4e00\u79cd\u89e3\u6cd5\uff01\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u8003\u8651\u6784\u9020\u4e00\u79cd\u6bcf\u4e2a\u6570\u7684\u6743\u503c\u90fd\u4e0d\u540c\u7684\u89e3\uff01\n\n\u6211\u4eec\u60f3\u5230\u4e00\u79cd\u6784\u9020\u65b9\u5f0f\uff1a\n\n\u6211\u4eec\u6309\u7740dfs\u7684\u987a\u5e8f\uff0c\u628a\u5f53\u524d\u7684\u70b9\u63d2\u5165\u5b50\u6811\u91cc\u5df2\u7ecf\u7edf\u8ba1\u51fa\u7684\u7b54\u6848\u91cc\u7684\u7b2ck[i] + 1\u4e2a\n\n\u7136\u540e\u6bcf\u4e2a\u5b50\u6811\u7684\u7b54\u6848\u63d2\u5728\u5b83\u524d\u9762\u4e00\u4e2a\u5b50\u6811\u7684\u7b54\u6848\u7684\u540e\u9762\uff0c\u987a\u7740\u6784\u9020\u5373\u53ef\n\n\u6240\u4ee5\u5f80\u5f80\u8fd9\u79cd\u6784\u9020\u9898\uff0c\u987a\u7740\u6784\u9020\u5373\u53ef\uff0c\u76f4\u63a5\u5728dfs\u7684\u8fc7\u7a0b\u4e2d\u76f4\u63a5\u641e\u51fa\u7b54\u6848\uff01\n\n\u6838\u5fc3\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nvector<int> solve(int u) {\n\tvector<int> res; res.clear();\n\tfor (auto v : G[u]) {\n\t\tvector<int> tmp = solve(v);\n\t\tfor (auto x : tmp) {\n\t\t\tif (res.size() == p[u]) res.push_back(u);\n\t\t\tres.push_back(x);\n\t\t}\n\t}\n\tif (res.size() == p[u]) res.push_back(u);\n\tif (res.size() < p[u]) { puts(\"NO\"); exit(0); }\n\treturn res;\n}\n```\n\n\n",
        "postTime": 1578282756,
        "uid": 203968,
        "name": "ConorGallagher23",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1286B \u3010Numbers on Tree\u3011"
    },
    {
        "content": "\u6ce8\u610f\u6570\u636e\u8303\u56f4 $n\\le 2000$ \u90a3\u4e48\u5efa\u8bae\u5bf9\u5e94 $\\Theta(n^2)$ \u7684\u505a\u6cd5\n\n\u6709\u4e00\u8bf4\u4e00\uff0c\u8fd9\u9898\u89e3\u533a\u53c8\u662f\u5e73\u8861\u6811\uff0c\u53c8\u662f\u968f\u673a\u6743\u503c\u7a0d\u5fae\u6709\u70b9\u725b\u7684\n\n\u9996\u5148\u5982\u679c\u51fa\u73b0 $c$ \u4e0d\u5c0f\u4e8e\u5b50\u6811\u5927\u5c0f\u7684\u5219\u65e0\u89e3\uff0c\u5426\u5219\u4e00\u5f8b\u6709\u89e3\n\n\u6ce8\u610f\u5230\u6211\u4eec\u53ea\u9700\u8981\u6bcf\u4e2a\u70b9\u6743\u503c\u7684\u76f8\u5bf9\u5927\u5c0f\u5173\u7cfb\u800c\u975e\u5177\u4f53\u503c\uff0c\u90a3\u4e48\u53ef\u4ee5\u6bcf\u4e2a\u70b9\u6574\u4e2a `std::vector` \u5b58\u5b50\u6811\u91cc\u9762\u6240\u6709\u70b9\u7684\u5927\u5c0f\u6392\u5e8f\n\n\u5728\u4e00\u4e2a\u5b50\u6811\u7684\u6839\u5904\u5408\u5e76\u6240\u6709\u5b50\u6811\u7684\u4fe1\u606f\uff0c\u7531\u4e8e\u4e0d\u540c\u5b50\u6811\u4e4b\u95f4\u4e92\u76f8\u72ec\u7acb\uff0c\u76f4\u63a5\u4e00\u4e2a\u4e00\u4e2a\u513f\u5b50\u5f80\u6839\u7684 vector \u91cc\u9762 push \u5c31\u884c\n\n\u6700\u540e\u628a\u6839\u653e\u5230\u81ea\u5df1 vector \u7684\u5408\u9002\u4f4d\u7f6e\uff0c\u4f7f\u5f97\u524d\u9762\u6709 $c_{rt}-1$ \u4e2a\u5143\u7d20\u5373\u53ef\n\n\u6700\u540e\u8d4b\u6743\u76f4\u63a5\u7ed9 $1\\sim n$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define sec second\n#define fir first\n#define int long long\n#define pb push_back\n#define rep(i,a,b) for(int i=a;i<=b;++i) \n#define Down(i,a,b) for(int i=a;i>=b;--i)\ntemplate<typename T>inline void ckmax(T &x,T y){x=x<y?y:x; return ;}\ntemplate<typename T>inline void ckmin(T &x,T y){x=x<y?x:y; return ;}\nnamespace FastIO{\n    inline int read(){\n        int res=0,f=1; char k;\n        while(!isdigit(k=getchar())) if(k=='-') f=-1;\n        while(isdigit(k)) res=res*10+k-'0',k=getchar();\n        return res*f;\n    }\n    char OPUT[100];\n    template<typename T>inline void print(T x){\n        if(x<0) putchar('-'),x=-x; \n        int cnt=0; do OPUT[++cnt]=x%10,x/=10; while(x); \n        Down(i,cnt,1) putchar(OPUT[i]+'0'); putchar(' '); return ;\n    }\n}using namespace FastIO;\nconst int N=2010;\nvector<int> g[N],seq[N];\nint n,root,fa[N],siz[N],ans[N],ned[N];\ninline void dfs(int x){\n    siz[x]=1;\n    for(auto t:g[x]){\n        dfs(t); siz[x]+=siz[t];\n        for(auto v:seq[t]) seq[x].pb(v);\n    } if(siz[x]<=ned[x]) puts(\"No\"),exit(0);\n    seq[x].pb(x); for(int i=siz[x]-1;i>ned[x];--i) swap(seq[x][i],seq[x][i-1]);\n    return ;\n}\nsigned main(){\n    n=read(); for(int i=1;i<=n;++i){\n        fa[i]=read(); ned[i]=read();\n        if(fa[i]) g[fa[i]].pb(i); else root=i;\n    } dfs(root); for(int i=0;i<n;++i) ans[seq[root][i]]=i+1;\n    puts(\"Yes\"); rep(i,1,n) print(ans[i]); puts(\"\");\n    return 0;\n}\n\n```",
        "postTime": 1636013968,
        "uid": 97448,
        "name": "yspm",
        "ccfLevel": 9,
        "title": "CF1286B Solution"
    },
    {
        "content": "~~\u6211\u5b66 DS \u5b66\u50bb\u4e86\u2026~~\n\n~~\u5728\u6a21\u62df\u8d5b\u4e0a\u770b\u5230\u6709\u6784\u9020\u9898\u5c31\u8dd1\u4e86\uff0c\u7ed3\u679c\u534a\u5c0f\u65f6\u540e\u624d\u53d1\u73b0\u8fd9\u662f\u6211\u552f\u4e00\u4f1a\u7684\u4e00\u9898\u2026~~\n\n#### \u6b63\u6587\uff1a\n\n\u56e0\u4e3a\u8fd9\u4e00\u9898\u7684 $c_i$ \u4e0e $i$ \u7684\u5b50\u6811\u6709\u5173\uff0c\u4e8e\u662f\u4e0d\u96be\u60f3\u5230\u4ece\u53f6\u5b50\u8282\u70b9\u5411\u4e0a\u6784\u9020\u3002\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u6027\u8d28\uff1a\u5728 $i$ \u7684\u5b50\u6811\u4e2d\uff0c$a_i$ \u6392\u540d\u4e3a $c_i+1$\u3002\n\n~~\u5e9f\u8bdd\u4e00\u53e5\u3002~~\n\n\u90a3\u6211\u4eec\u5728\u904d\u5386\u5230 $i$ \u65f6\uff0c\u628a\u5728 $i$ \u5b50\u6811\u4e2d\u7684\u6240\u6709 $j$ \u7684 $a_j$ \u5168\u90e8\u653e\u5165\u4e00\u4e2a\u6570\u636e\u7ed3\u6784 $b$ \u4e2d\uff0c\u7136\u540e\u628a $a_i$ \u8d4b\u4e3a $b_{c_i}+1$\uff0c\u518d\u628a\u7b2c $c_i+1$ \u5230 $size_i-1$ \u7684 $a$ \u5168\u90e8 $+1$\u3002\n\n\u56e0\u4e3a\u5404\u4e2a\u5b50\u6811\u4e4b\u95f4\u5e76\u6ca1\u6709\u4ec0\u4e48\u5173\u7cfb\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u628a\u540e\u52a0\u5165\u7684\u5b50\u6811\u4e2d\u7684\u70b9\u76f4\u63a5\u653e\u5728\u4e4b\u524d\u5df2\u7ecf\u52a0\u5165\u7684\u70b9\u540e\u9762\u5c31\u9614\u4ee5\u4e86\u3002\n\n\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u53ef\u4ee5\u7528**\u6570\u7ec4**\u3002\u60f3\u6cd5\u5f88\u66b4\u529b\uff0c\u4f46\u6211\u4eec\u4e00\u5206\u6790\u53d1\u73b0\u65f6\u590d\u662f $O(n^2)$\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\n\n~~\u4f46\u662f\u6211\u5e76\u6ca1\u770b\u6570\u636e\u8303\u56f4\uff0c\u4e8e\u662f\u5c31\u5f00\u59cb\u4e86\u7528 DS \u4f18\u5316\u7684\u9053\u8def\u2026~~\n\n~~\u4f5c\u4e3a\u4e00\u540d\u91cd\u5de5\u4e1a\u6570\u636e\u7ed3\u6784\u9009\u624b\uff0c\u6211\u4e00\u773c\u770b\u51fa\u5b83\u53ef\u4ee5\u7528\u5e73\u8861\u6811\u3002~~\n\n\u6211\u4eec\u53ef\u4ee5\u5728\u6bcf\u4e2a\u70b9\u7ef4\u62a4\u4e00\u68f5\u5e73\u8861\u6811\u3002\u70b9 $i$ \u7684\u5e73\u8861\u6811\u6240\u5305\u542b\u7684\u8282\u70b9\u662f\u7531\u6240\u6709 $son_i$ \u7684\u5e73\u8861\u6811\u7684\u8282\u70b9\u4e0e $i$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5145\u5206\u5229\u7528 $son_i$ \u7684\u5e73\u8861\u6811\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e9b\u5e73\u8861\u6811**\u5408\u5e76**\u8d77\u6765\uff0c\u7136\u540e\u518d\u63d2\u5165 $i$\u3002\n\n\u5173\u4e8e\u5408\u5e76\uff0c\u6709\u4e00\u4e2a\u5341\u5206\u6709\u7528\u7684\u4e1c\u897f\uff1a**\u542f\u53d1\u5f0f\u5408\u5e76**\u3002\n\n\u4e8e\u662f\u4e4e\u6211\u4eec\u628a $son_i$ \u5e73\u8861\u6811\u542f\u53d1\u5f0f\u5408\u5e76\u4e00\u904d\uff0c\u5c31\u5f97\u5230\u4e86 $i$ \u7684\u5e73\u8861\u6811\u3002\u65f6\u590d $O(n \\log^2 n)$\uff0c\u5982\u679c\u7528 splay \u5c31\u662f $O(n \\log n)$\u3002\n\n\u56e0\u4e3a $a_i$ \u5728\u8fd0\u884c\u9014\u4e2d\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u6240\u4ee5\u6211\u5bf9\u5e73\u8861\u6811\u8fdb\u884c\u4e86\u4ebf\u4e9b\u9b54\u6539\uff0c\u53ef\u4ee5\u5bf9\u7740\u4ee3\u7801\u683c\u7269\u81f4\u77e5\u4e00\u4e0b\u6765\u8fdb\u884c\u7406\u89e3\u3002\n\n\u4ee3\u7801\u8003\u573a\u4e0a\u5199\u7684\uff0c\u4e3a\u4e86\u65b9\u4fbf\u8c03\u8bd5\u52a0\u4e86\u4e00\u4e9b\u6ce8\u91ca\u3002\u5404\u4f4d\u5927\u4f6c\u4eec\u53ef\u4ee5\u5ffd\u7565\u4e0d\u770b\u3002\n\n```cpp\n#include<iostream>\n#include<cstdlib>\n#include<cstring>\nusing namespace std;\nconst int N=1e6+10;\n/*------------\u94fe\u5f0f\u524d\u5411\u661f\u7ec4\u4ef6------------*/\nstruct edge_node{\n\tint from,to;\n\tint nxt;\n};\nstruct edge{\n\tedge_node e[N];\n\tint head[N],tot;\n\tedge(){\n\t\tmemset(head,-1,sizeof head);\n\t}\n\tinline void add(int from,int to){\n\t\te[tot].from=from;\n\t\te[tot].to=to;\n\t\te[tot].nxt=head[from];\n\t\thead[from]=tot++;\n\t}\n};\nedge e;\n/*------------\u94fe\u5f0f\u524d\u5411\u661f\u7ec4\u4ef6------------*/\n/*------------fhq\u7ec4\u4ef6------------*/\nstruct fhq_treap{\n\tint lson,rson;\n\tint size;\n\tint key;\n};\nfhq_treap fhq[N];\nint root[N],a[N];\ninline int newnode(int pos){\n\tfhq[pos].key=rand();\n\tfhq[pos].size=1;\n\treturn pos;\n}\ninline void pushup(int pos){\n\tint ls=fhq[pos].lson,rs=fhq[pos].rson;\n\tfhq[pos].size=fhq[ls].size+fhq[rs].size+1;\n}\nvoid fhq_split(int pos,int size,int &x,int &y){\n\tif(!pos) return void(x=y=0);\n\tint checker=fhq[fhq[pos].lson].size+1;\n\tif(checker<=size){\n\t\tx=pos;\n\t\tfhq_split(fhq[x].rson,size-checker,fhq[x].rson,y);\n\t\tpushup(x);\n\t}\n\telse{\n\t\ty=pos;\n\t\tfhq_split(fhq[y].lson,size,x,fhq[y].lson);\n\t\tpushup(y);\n\t}\n}\nint fhq_merge(int x,int y){\n\tif(!x||!y) return x+y;\n\tif(fhq[x].key<fhq[y].key){\n\t\tfhq[x].rson=fhq_merge(fhq[x].rson,y);\n\t\tpushup(x);\n\t\treturn x;\n\t}\n\telse{\n\t\tfhq[y].lson=fhq_merge(x,fhq[y].lson);\n\t\tpushup(y);\n\t\treturn y;\n\t}\n}\nvoid ins(int &rt,int pos,int size){\n\tint x,y;\n\tfhq_split(rt,size,x,y);\n\trt=fhq_merge(fhq_merge(x,newnode(pos)),y);\n}\n/*------------fhq\u7ec4\u4ef6------------*/\n/*------------\u542f\u53d1\u5f0f\u5408\u5e76fhq------------*/\nvoid fhq_dfs(int x,int &y){\n\tif(!x) return ;\n\tint ls=fhq[x].lson,rs=fhq[x].rson;\n\tfhq[x].lson=fhq[x].rson=0;\n\tfhq_dfs(ls,y);\n\tins(y,x,fhq[y].size);\n\tfhq_dfs(rs,y);\n}\nvoid merge(int &x,int &y){\n\tif(fhq[x].size>fhq[y].size)\n\t\tswap(x,y);\n\tfhq_dfs(x,y);\n}\n/*------------\u542f\u53d1\u5f0f\u5408\u5e76fhq------------*/\n/*------------dfs\u8ba1\u7b97ans------------*/\nbool flag;\nvoid dfs(int u){\n\tfor(int i=e.head[u];~i;i=e.e[i].nxt){\n\t\tint v=e.e[i].to;\n\t\tdfs(v);\n\t\tmerge(root[v],root[u]);\n\t}\n\tif(a[u]>fhq[root[u]].size) flag=true;\n\telse if(!flag) ins(root[u],u,a[u]);\n}\n/*------------dfs\u8ba1\u7b97ans------------*/\n/*------------dfs\u7edf\u8ba1ans------------*/\nint ans[N],cnt;\nvoid get_ans(int x){\n\tif(!x) return ;\n\tget_ans(fhq[x].lson);\n\tans[x]=++cnt;\n\tget_ans(fhq[x].rson);\n}\n/*------------dfs\u7edf\u8ba1ans------------*/\nint main(){\n\tint n;\n\tcin>>n;\n\tint rt;\n\tfor(int i=1;i<=n;i++){\n\t\tint x;\n\t\tcin>>x>>a[i];\n\t\tif(x) e.add(x,i);\n\t\telse rt=i;\n\t}\n\tdfs(rt);\n\tif(flag) cout<<\"NO\\n\";\n\telse{\n\t\tcout<<\"YES\\n\";\n\t\tget_ans(root[rt]);\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tcout<<ans[i]<<' ';\n\t}\n}\n/*\ncase #1:\ninput:\n5\n0 1\n1 3\n2 1\n3 0\n2 0\noutput:\nYES\n2 5 3 1 4\n\ncase #2:\ninput:\n5\n0 4\n1 1\n2 0\n3 0\n2 0\noutput:\nYES\n5 2 1 3 4\n\ncase #3:\ninput:\n7\n0 4\n1 1\n6 0\n2 0\n2 0\n1 2\n6 0\noutput:\n5 6 2 7 4 3 1\n\ncase #4:\ninput:\n3\n2 0\n0 2\n2 0\noutput:\nYES\n2 3 1\n*/\n```",
        "postTime": 1626866291,
        "uid": 204705,
        "name": "KiDDOwithTopTree",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1286B"
    },
    {
        "content": "\u9996\u5148\uff0c\u6211\u4eec\u8003\u8651\u65e0\u89e3\u7684\u60c5\u51b5\uff0c\u5f88\u660e\u663e\uff0c\u5f53\u6709\u4e00\u4e2a\u70b9\u7684$c_i$\u8981**\u5927\u4e8e\u7b49\u4e8e**\u8fd9\u4e2a\u70b9\u7684\u5b57\u6570\u5927\u5c0f\u65f6\uff0c\u80af\u5b9a\u65e0\u89e3\u3002\u5426\u5219\uff0c\u5f53\u6bcf\u4e2a\u8282\u70b9\u7684\u503c\u4e0d\u540c\u65f6\uff0c\u4e00\u5b9a\u6709\u89e3\uff0c\u8bc1\u660e\u663e\u7136\u3002\n\n\u9898\u76ee\u4e2d\u7684\u9650\u5236\u662f\u6bcf\u4e2a\u6570\u5728$1$ ~ $10^9$\u4e4b\u95f4\uff0c\u4f46\u662f\u6ca1\u6709\u610f\u4e49\uff0c\u53ef\u4ee5\u79bb\u6563\u5316\u53d8\u6210$1,2,\\cdots,n$\u7684\uff08~~\u867d\u7136\u8bf4\u6211\u76f4\u63a5\u6784\u90201~n\u4e86~~\uff09\u3002\u6ce8\u610f\u5230\u8fd9\u4e00\u9898\u7684\u6743\u503c\u4e0e\u7b54\u6848\u6ca1\u6709\u5173\u7cfb\uff0c\u6211\u4eec\u6240\u9700\u7684\u4ec5\u4ec5\u53ea\u662f\u5728\u6bcf\u4e2a\u6743\u503c\u4e0d\u540c\u65f6\u5b83\u4eec\u4e4b\u95f4\u7684**\u5927\u5c0f\u5173\u7cfb**\u3002\n\n\u5f88\u660e\u663e\uff0c\u53f6\u5b50\u8282\u70b9\u4e4b\u95f4\u7684\u5927\u5c0f\u5173\u7cfb\u65f6\u4e0d\u5f71\u54cd\u7b54\u6848\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7ed9\u53f6\u5b50\u8282\u70b9\u4e4b\u95f4\u7684\u5927\u5c0f\u968f\u4fbf\u9009\u3002\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u975e\u53f6\u8282\u70b9\u6765\u8bf4\uff0c\u5728\u5b83\u7684\u5b50\u6811\u4e4b\u95f4\u7684\u5927\u5c0f\u5168\u90e8\u88ab\u5904\u7406\u51fa\u6765\u65f6\uff0c\u5b83\u53ea\u9700\u8981\u5728\u5c06\u5b50\u6811\u4e2d\u7684\u4e24\u4e2a\u70b9\u62ff\u51fa\u6765\uff0c\u5c06\u81ea\u5df1\u7684\u6743\u503c\u653e\u5728\u5b83\u4eec\u4e4b\u95f4\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5982\u679c\u4e00\u5f00\u59cb\u5c31\u7ed9\u8282\u70b9\u8d4b\u503c\uff0c\u6700\u540e\u5f88\u6709\u53ef\u80fd\u4f1a\u5bfc\u81f4\u67d0\u4e2a\u8282\u70b9\u63d2\u5728\u4e86\u4e24\u4e2a\u76f8\u90bb\u7684\u6743\u503c\u4e4b\u95f4\uff0c\u4f1a\u51fa\u73b0\u6d6e\u70b9\u6570\uff0c\u8fd9\u5f88\u8ba8\u538c\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u4e00\u5f00\u59cb\u4e0d\u7ed9\u8282\u70b9\u8d4b\u503c\uff0c\u53ea\u8003\u8651\u7ef4\u62a4\u6743\u503c\u4e4b\u95f4\u7684\u5927\u5c0f\u5173\u7cfb\u3002\n\n\u601d\u8003\u4e00\u79cd\u80fd\u591f\u7ef4\u62a4\u6570\u5217\u5927\u5c0f\u5173\u7cfb\u7684\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301\u52a8\u6001\u63d2\u5165\u4e00\u4e2a\u5143\u7d20\uff0c\u8981\u6c42\u63d2\u5165\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u8d85\u8fc7$O(n)$\uff0c\u67e5\u627e\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u8d85\u8fc7$O(n)$\uff0c~~\u8fd9\u6837\u7684\u6570\u636e\u7ed3\u6784\u4e00\u4e2a\u90fd\u60f3\u4e0d\u51fa\u6765\u5c31\u9000\u5f79\u5427~~\uff0c\u6211\u4eec\u6709\u4e09\u4e2a\u5019\u9009\u6570\u636e\u7ed3\u6784\uff0c\u5206\u522b\u662f\uff1a\n1. \u6570\u7ec4\uff0c\u5355\u6b21\u63d2\u5165$O(n)$\uff0c\u5355\u6b21\u67e5\u627e$O(logn)$\n2. \u94fe\u8868\uff0c\u5355\u6b21\u63d2\u5165$O(1)$\uff0c\u5355\u6b21\u67e5\u627e$O(n)$\n3. \u5e73\u8861\u6811\uff0c\u5355\u6b21\u63d2\u5165$O(logn)$\uff0c\u5355\u6b21\u67e5\u627e$O(logn)$\n\n\u6211\u9009\u7528\u7684\u662f\u7b2c\u4e8c\u79cd\uff0c\u56e0\u4e3a\u6211\u89c9\u5f97\u5728\u52a8\u6001\u63d2\u5165\u65f6\uff0c\u94fe\u8868\u66f4\u52a0\u76f4\u89c2\u3002\n\n\u6240\u4ee5\u5230\u8fd9\u91cc\uff0c\u601d\u8def\u5c31\u5f88\u6e05\u6670\u4e86\uff0c\u5148\u5c06\u6240\u6709\u53f6\u5b50\u8282\u70b9\u7528\u94fe\u8868\u94fe\u63a5\u8d77\u6765\uff0c\u7136\u540e\u8003\u8651\u5b83\u4eec\u7684\u7236\u4eb2\u63d2\u5728\u54ea\u513f\uff0c\u518d\u5f80\u4e0a\u63a8\u4e00\u5c42\uff0c\u2026\u2026\uff0c\u8fd9\u6837\u4e0b\u53bb\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u6240\u6709\u8282\u70b9\u4e4b\u95f4\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u7136\u540e\uff0c\u904d\u5386\u4e00\u904d\u94fe\u8868\uff0c\u6309\u5927\u5c0f\u5173\u7cfb\u8d4b\u503c\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(n^2)$\u3002\n\n\u4ee3\u7801\u53ef\u4ee5\u53bb\u6211\u7684\u535a\u5ba2\u67e5\u770b\uff1a[Codeforces 1286B. Numbers on Tree\u9898\u89e3\n](https://www.cnblogs.com/withhope/p/12285151.html)",
        "postTime": 1581167562,
        "uid": 33362,
        "name": "Suiseiseki",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1286B \u3010Numbers on Tree\u3011"
    },
    {
        "content": "# \u9898\u89e3 CF1286B \u3010Numbers on Tree\u3011\n\n\u9898\u76ee\u5927\u610f\uff1a\u6709\u4e00\u9897\u6709\u6839\u6811\uff0c\u6bcf\u4e00\u4e2a\u8282\u70b9\u6709\u4e00\u4e2a\u503cai\uff0c\u7528ci\u8868\u793a\u4ee5i\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u6bd4i\u5c0f\u7684\u8282\u70b9\u7684j\u4e2a\u6570\uff08\u5373aj < ai\uff09\u3002\u73b0\u5728\u7ed9\u4f60n\u548cc\u6570\u7ec4\uff0c\u8ba9\u4f60\u7ed9\u51fa\u6ee1\u8db3\u4ee5\u4e0a\u6761\u4ef6\u7684\u4efb\u610f\u4e00\u79cda\u7684\u65b9\u6848\u3002\n\n\u8fd9\u9898\u4e00\u5f00\u59cb\u5b8c\u5168\u4e0d\u4f1a\uff0c\u767e\u5ea6\u4e86\u9898\u89e3\u540e\u624d\u8fc7\u7684\uff1a\u5927\u4f6c\u7684\u9898\u89e3\n\n\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u5b50\u6811\u6574\u4f53\u65e0\u8bba\u53d8\u5316\u591a\u5c11\uff0c\u8fd9\u4e2a\u5b50\u6811\u4e2d\u6240\u6709\u8282\u70b9\u90fd\u662f\u6ee1\u8db3\u60c5\u51b5\u7684\u3002\n\n\u5e76\u4e14\u4e00\u4e2a\u5b50\u6811\u4e2d\u53ea\u8981\u5927\u5c0f\u5173\u7cfb\u4fdd\u6301\u4e0d\u53d8\uff0c\u600e\u4e48\u53d8\u5316\u4e5f\u90fd\u662f\u6ee1\u8db3\u60c5\u51b5\u7684\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ea\u8981\u5c06\u5f53\u524d\u8282\u70b9\u7684\u5b50\u6811\u6309\u7167\u539f\u6765\u8282\u70b9\u7684\u503c\u6392\u4e2a\u5e8f\u3002\u6bcf\u4e2a\u8282\u70b9\u7684\u503c\u76f4\u63a5\u6539\u6210\u5b83\u7684\u7f16\u53f7\uff0c\u8fd8\u662f\u6ee1\u8db3\u6761\u4ef6\u3002\n\n\u81f3\u4e8e\u5f53\u524d\u8282\u70b9u\uff0c\u5728\u8fd9\u4e9b\u8282\u70b9\u7684\u4e0a\u9762\u4e0d\u4f1a\u4ea7\u751f\u5f71\u54cd\uff0c\u53ea\u9700\u8981\u5728\u7f16\u53f7c[u]\u5904\u63d2\u5165\uff0c\u540e\u9762\u7684\u8282\u70b9\u90fd\u5fd8\u540e\u79fb\u5c31\u597d\uff08\u53cd\u6b63n\u624d2000\uff0c\u591f\u6211\u4eec\u73a9\uff09\u3002\n\n\u5f53\u4e00\u4e2a\u70b9\u7684\u65f6\u5019\u76f4\u63a5\u662f1\uff08\u5c31\u662fc[u] + 1\uff09\u4e86\u3002\n\n\u8fd9\u8fb9\u4e3a\u4e86\u65b9\u4fbf\u6392\u5e8f\u4f7f\u7528pair\uff0c\u8868\u793a\u8282\u70b9\u7684\u503c\u548c\u8fd9\u4e2a\u8282\u70b9\u7684\u6570\u3002\n\n\u4ee3\u7801\u5982\u4e0b:\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <vector>\n#define rep(x, l, r) for(int x = l; x <= r; x++)\n#define repd(x, r, l) for(int x = r; x >= l; x--)\n#define clr(x, y) memset(x, y, sizeof(x))\n#define all(x) x.begin(), x.end()\n#define pb push_back\n#define mp make_pair\n#define MAXN 2005\n#define fi first\n#define se second\n#define SZ(x) ((int)x.size())\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef pair<int, int> pii;\nconst int INF = 1 << 30;\nconst int p = 1000000009;\nint lowbit(int x){ return x & (-x);}\nint fast_power(int a, int b){ int x; for(x = 1; b; b >>= 1){ if(b & 1) x = 1ll * x * a % p; a = 1ll * a * a % p;} return x % p;}\n\nint c[MAXN], ans[MAXN], sz[MAXN];\nvi edge[MAXN];\nvector<pii> ve[MAXN];\n\nvoid dfs(int u){\n    ve[u].clear();\n    sz[u] = 1;\n    rep(i, 0, SZ(edge[u]) - 1){\n        int v = edge[u][i];\n        dfs(v);\n        sz[u] += sz[v];\n        rep(j, 0, SZ(ve[v]) - 1) ve[u].pb(ve[v][j]);\n    }\n    if(c[u] >= sz[u]){\n        puts(\"NO\");\n        exit(0);\n    }\n    sort(all(ve[u]));\n    rep(i, 0, SZ(ve[u]) - 1) ve[u][i].fi = i + 1;\n    ve[u].insert(ve[u].begin() + c[u], mp(c[u] + 1, u));\n    rep(i, c[u] + 1, SZ(ve[u]) - 1) ve[u][i].fi++;\n}\n\nint main(){\n    int n;\n    scanf(\"%d\", &n);\n    int root;\n    rep(i, 1, n){\n        int fa;\n        scanf(\"%d%d\", &fa, &c[i]);\n        if(!fa) root = i;\n        else edge[fa].pb(i);\n    }\n    dfs(root);\n    puts(\"YES\");\n    sort(all(ve[root]));\n    rep(i, 0, SZ(ve[root]) - 1) ans[ve[root][i].se] = ve[root][i].fi;\n    rep(i, 1, n) printf(\"%d \", ans[i]);\n    puts(\"\");\n    return 0;\n}\n```",
        "postTime": 1578381495,
        "uid": 149312,
        "name": "wze\u63cd\u6241\u4e86nm",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1286B \u3010Numbers on Tree\u3011"
    }
]