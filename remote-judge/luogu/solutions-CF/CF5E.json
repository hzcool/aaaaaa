[
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u52a8\u6001\u89c4\u5212\u9898\n\n---\n\n\u9898\u610f\u662f\u6709`n`\u5ea7\u5c71\u7ec4\u6210\u4e00\u4e2a\u73af\uff0c\u4e24\u5ea7\u5c71\u4e92\u76f8\u80fd\u770b\u5230\u7684\u8981\u6c42\u662f\u76f8\u8fde\u7684\u5706\u5f27\u4e0a\u6ca1\u6709\u4efb\u4f55\u5176\u4ed6\u7684\u5c71\u9ad8\u5ea6\u6bd4\u5b83\u4eec\u9ad8\uff0c\u6c42\u80fd\u770b\u5230\u7684\u5c71\u7684\u7ec4\u6570\u3002\u8003\u8651\u4e00\u7ec4\u5c71\uff0c\u6211\u4eec\u8ba9\u9ad8\u5ea6\u8f83\u5c0f\u4e14\u7684\u4f4d\u7f6e\u6700\u9760\u5de6\u7684\u90a3\u4e00\u5ea7\u5c71\u8d1f\u8d23\u8d21\u732e\u7b54\u6848\u3002\n\n\u5148\u628a\u8fd9\u4e2a\u73af\u53d8\u6210\u4e00\u6761\u94fe\uff0c\u628a\u6700\u9ad8\u7684\u5c71\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u5c71\uff0c\u6309\u7167\u987a\u5e8f\u590d\u5236\u5e8f\u5217\uff0c\u518d\u5728\u6700\u540e\u63a5\u4e0a\u4e00\u4e2a\u6700\u9ad8\u7684\u5c71\u3002\n\n\u8bbe`left[i]`\u8868\u793a`i`\u5de6\u8fb9\u7b2c\u4e00\u4e2a\u6bd4`i`\u9ad8\u7684\u4f4d\u7f6e\uff0c`right[i]`\u8868\u793a`i`\u53f3\u8fb9\u7b2c\u4e00\u4e2a\u6bd4`i`\u9ad8\u7684\u4f4d\u7f6e\uff0c`count[i]`\u8868\u793a\u5728`i`\u5230`right[i]`\u7684\u5de6\u5f00\u53f3\u95ed\u533a\u95f4\u5185\u9ad8\u5ea6\u7b49\u4e8e`i`\u7684\u5c71\u7684\u6570\u76ee\uff0c\u90a3\u4e48\u6bcf\u5ea7\u5c71\u80fd\u770b\u5230\u7684\u5c71\u7684\u7ec4\u6570\u81f3\u5c11\u6709`count[i]`\u7ec4\u548c`(i,l[i])`\u4e0e`(i,r[i])`\u8fd9\u4e24\u7ec4\uff0c\u4e0d\u8fc7\u5f53`l[x]=0`\u4e14`r[x]=n`\u65f6\u5176\u5b9e\u662f\u4e00\u7ec4\uff0c\u6ce8\u610f\u5224\u65ad\u3002\n\n\u4e8e\u662f\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u6c42`left`\u6570\u7ec4\u3001`right`\u6570\u7ec4\u548c`count`\u6570\u7ec4\uff0c\u53ef\u4ee5\u901a\u8fc7\u52a8\u6001\u89c4\u5212\u7684\u601d\u60f3\u6765\u505a\u3002\n\n\u6ce8\u610f**\u6570\u636e\u8303\u56f4**\uff0c\u7b54\u6848\u8981\u7528$long\\ long$\uff0c$long\\ long$\u5728`CodeForces`\u8981\u7528`\"%I64d\"`\u8f93\u51fa\u3002\uff08\u5f53\u7136\u5982\u679c\u4f60\u7528`cout`\u53e6\u8bf4\uff09\n\n```cpp\n#include<cstdio>\nint t[1000002],h[1000002],l[1000002],r[1000002],cnt[1000002];\nint main() {\n\tint n,p=0;\n\tlong long ans=0;\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;++i)\n\t\tscanf(\"%d\",t+i);\n\tfor(int i=1;i<n;++i)\n\t\tif(t[i]>t[p])\t\t\t//\u5bfb\u627e\u6700\u5927\u503c\n\t\t\tp=i;\n\tfor(int i=0;i<=n;++i)\n\t\th[i]=t[(i+p)%n];\t\t//\u8f6c\u73af\u4e3a\u94fe\n\tfor(int i=1;i<=n;++i) {\n\t\tl[i]=i-1;\t\t\t\t\t//\u521d\u59cb\u5316\u4e3ai\u5de6\u8fb9\u7b2c\u4e00\u4e2a\n\t\twhile(l[i]&&h[i]>=h[l[i]])\n\t\t\tl[i]=l[l[i]];\t\t\t//\u6ee1\u8db3\u6761\u4ef6\u4fbf\u9012\u63a8\n\t}\n\tfor(int i=n-1;i>=0;--i) {\n\t\tr[i]=i+1;\t\t\t\t\t\t//\u521d\u59cb\u5316\u4e3ai\u53f3\u8fb9\u7b2c\u4e00\u4e2a\n\t\twhile(r[i]<n&&h[i]>h[r[i]])\n\t\t\tr[i]=r[r[i]];\t\t\t\t//\u6ee1\u8db3\u6761\u4ef6\u4fbf\u9012\u63a8\n\t\tif(r[i]<n&&h[i]==h[r[i]]) {\n\t\t\tcnt[i]=cnt[r[i]]+1;\t\t\t//\u9012\u63a8count\u6570\u7ec4\n\t\t\tr[i]=r[r[i]];\n\t\t}\n\t}\n\tfor(int i=0;i<n;++i) {\n\t\tans+=cnt[i];\t\t\t//\u81f3\u5c11\u80fd\u770b\u5230\u7684\u7ec4\u6570\n\t\tif(h[i]<h[0]) {\n\t\t\tans+=2;\t\t\t\t//\u53e6\u5916\u7684\u4e24\u7ec4\n\t\t\tif(!l[i]&&r[i]==n)\n\t\t\t\tans--;\t\t\t//\u7279\u5224\u662f\u540c\u4e00\u7ec4\u7684\u60c5\u51b5\n\t\t}\n\t}\n\tprintf(\"%I64d\\n\",ans);\n\treturn 0;\n}\n```\n\n---\n",
        "postTime": 1517747289,
        "uid": 78044,
        "name": "Loner_Knowledge",
        "ccfLevel": 0,
        "title": "CF5E Bindian Signalizing"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](http://zrzring.cn/index.php/archives/254)\n\n> \u9898\u610f\uff1a\u7ed9\u5b9a\u4e00\u4e2an\u4e2a\u70b9\u6784\u6210\u7684\u73af\uff0c\u6bcf\u4e2a\u70b9\u6709\u4e2a\u9ad8\u5ea6\uff0c\u6c42\u70b9\u5bf9\u4e2a\u6570\uff0c\u70b9\u5bf9\u9700\u6ee1\u8db3\u5b83\u4eec\u76f8\u8fde\u901a\u7684\u4e24\u6761\u8def\u5f84\u4e2d\u6ca1\u6709\u6bd4\u5b83\u4eec\u66f4\u9ad8\u7684\u70b9\n\n\u4e00\u4e2a\u5355\u8c03\u6808dp\u8c03\u4e86\u6211\u4e00\u665a\u4e0a\u52a0\u4e00\u4e2d\u5348\n\n\u9996\u5148\u7834\u73af\u6210\u94fe\uff0c\u4e0d\u80fd\u5355\u7eaf\u52a0\u500d\uff0c\u8fd9\u6837\u6709\u7684\u5730\u65b9\u4f1a\u7b97\u4e24\u6b21\u6709\u7684\u5730\u65b9\u4f1a\u7b97\u4e00\u6b21\n\n\u4f46\u662f\u9274\u4e8e\u7279\u6b8a\u6027\u8d28\uff0c\u6700\u9ad8\u7684\u5730\u65b9\u4e0d\u53ef\u903e\u8d8a\uff0c\u800c\u4e14\u73af\u6620\u5c04\u5230\u94fe\u4e0a\u65f6\u53ef\u4ee5\u5faa\u73af\u4f4d\u79fb\uff0c\u6240\u4ee5\u628a\u6700\u9ad8\u7684\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u8fd9\u6837\u4e2d\u95f4\u7684\u4f4d\u7f6e\u53ea\u80fd\u6309\u7167\u5e8f\u5217\u7684\u987a\u5e8f\u53bb\u627e\u8fde\u901a\u7684\u70b9\uff0c\u800c\u4e0d\u7528\u8003\u8651\u73af\u4e86\n\n\u4e4b\u540e\u5c31\u662f\u4e00\u4e2a\u666e\u901a\u7684\u5355\u8c03\u6808\u4e86\uff0c\u6ce8\u610f\u7ec6\u8282\u5373\u53ef\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <algorithm>\n#include <queue>\n\n#define int long long\n\nusing namespace std;\n\nvoid file() {\n    freopen(\"std.in\", \"r\", stdin);\n    freopen(\"wa.out\", \"w\", stdout);\n}\n\nconst int N = 1e6 + 10, M = 2e6 + 10, inf = 1e9;\n\ninline int read() {\n    bool sym = 0; int res = 0; char ch = getchar();\n    while (!isdigit(ch)) sym |= (ch == '-'), ch = getchar();\n    while (isdigit(ch)) res = (res << 3) + (res << 1) + (ch ^ 48), ch = getchar();\n    return sym ? -res : res;\n}\n\nint n, m, t[N], h[N], s[N], cnt[N], top;\n\nsigned main() {\n    n = read(); int mx = 0, pos;\n    for (int i = 1; i <= n; i++) {\n        t[i] = read(); if (t[i] > mx) {pos = i; mx = t[i];}\n    }\n    int p = 0, ans = n - 1;\n    for (int i = pos + 1; i <= n; i++) h[++p] = t[i];\n    for (int i = 1; i < pos; i++) h[++p] = t[i];\n    top = 0;\n    for (int i = 1; i <= p; i++) {\n        while (s[top] < h[i] && top) ans += cnt[top--];\n        if (s[top] != h[i]) s[++top] = h[i], cnt[top] = 0; ans += cnt[top]++;\n    }\n    while (top > 1) ans += cnt[top--]; cout << ans;\n    return 0;\n}\n```\n\n",
        "postTime": 1601360288,
        "uid": 28392,
        "name": "zrzring",
        "ccfLevel": 5,
        "title": "CF5E \u3010Bindian Signalizing\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5b9e\u9645\u4e0a\u53ef\u4ee5\u4e0d\u5199DP\u7684\uff08\u867d\u7136\u6211\u4e00\u5f00\u59cb\u7684\u60f3\u6cd5\u4e5f\u662f\u5355\u8c03\u6808DP\u2026\u2026\uff09\n\n\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u9ad8\u5ea6\u4ece\u5927\u5230\u5c0f\u4f9d\u6b21\u6dfb\u52a0\u8fdb\u6bcf\u4e00\u4e2a\u5854\u3002\u56e0\u4e3a\u5bf9\u4e8e\u67d0\u4e00\u4e2a\u5854$x$\uff0c\u6240\u6709\u4f1a\u4e0e\u5b83\u4ea7\u751f\u5173\u7cfb\u7684\u5854\u53ef\u4ee5\u5206\u6210\u4e09\u7c7b\uff1a\u6bd4\u5b83\u9ad8\u7684\uff0c\u6bd4\u5b83\u77ee\u7684\uff0c\u548c\u5b83\u4e00\u6837\u9ad8\u7684\u3002\n\n\u5bf9\u4e8e\u548c\u6bd4\u5b83\u77ee\u7684\u5854\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u6211\u4eec\u5728\u52a0\u5165\u6bd4\u5b83\u77ee\u7684\u5854\u65f6\u518d\u8ba8\u8bba\u3002\u5219\u6211\u4eec\u73b0\u5728\u53ea\u9700\u8981\u5173\u6ce8\u6240\u6709\u9ad8\u5ea6\u5927\u4e8e\u7b49\u4e8e\u5b83\u7684\u5854\u3002\n\n\u5f53\u6211\u4eec\u52a0\u5165\u8fd9\u4e2a\u5854\u65f6\uff0c\u6240\u6709\u6bd4\u5b83\u9ad8\u7684\u5854\uff0c\u6700\u591a\u53ea\u6709\u4e24\u4e2a\u80fd\u548c\u5b83\u4ea7\u751f\u5173\u7cfb\uff0c\u5c31\u662f\u4f4d\u7f6e\u7d27\u8d34\u5b83\u7684\u4e24\u4e2a\u6bd4\u5b83\u9ad8\u7684\u5854\uff08\u5f53\u7136\uff0c\u5728\u6bd4\u5b83\u9ad8\u7684\u5854\u53ea\u6709\u4e00\u4e2a\u65f6\uff0c\u5219\u53ea\u6709\u4e00\u4e2a\uff09\u3002\n\n\u800c\u6240\u6709\u4e0e\u5b83\u9ad8\u5ea6\u76f8\u7b49\u7684\u5854\u4e2d\uff0c\u5982\u679c\u5b83\u4eec\u5904\u4e8e\u540c\u4e00\u5bf9\u9ad8\u5854\u4e4b\u95f4\uff0c\u5219\u5b83\u4eec\u4e24\u4e24\u4e4b\u95f4\u90fd\u4f1a\u4ea7\u751f\u5173\u7cfb\u3002\n\n\u5728\u4ee3\u7801\u5b9e\u73b0\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u9996\u5148\u627e\u5230\u9ad8\u5ea6\u6700\u9ad8\u7684\u5854\uff0c\u4ee5\u5b83\u4e3a$0$\u53f7\u5854\u5f00\u59cb\u91cd\u7f16\u53f7\uff0c\u8fd9\u6837\u5c31\u4fdd\u8bc1\u5bf9\u4e8e\u4efb\u4f55\u975e$0$\u53f7\u5854\u4e00\u5b9a\u81f3\u5c11\u80fd\u627e\u5230\u4e00\u4e2a\u6bd4\u5b83\u7f16\u53f7\u5c0f\u7684\u4e14\u6bd4\u5b83\u9ad8\u7684\u5854\u3002\n\n\u4ee3\u7801\uff08\u9644\u6709\u82f1\u6587\u6ce8\u91ca\uff09\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nint n,mxp,res;\npair<int,int>p[1001000];\nset<int>s;\nsigned main(){\n\tscanf(\"%lld\",&n);\n\tfor(int i=0;i<n;i++){\n\t\tscanf(\"%lld\",&p[i].first);\n\t\tif(p[mxp].first<p[i].first)mxp=i;\n\t}\n\tfor(int i=0;i<n;i++)p[i].second=(i-mxp+n)%n,p[i].first*=-1;\n\tsort(p,p+n);\n\tfor(int i=0,j=0;i<n;){\n\t\twhile(j<n&&p[j].first==p[i].first)j++;//all the towers in section [i,j) have the same height \n\t\tint sz=s.size(),cnt=0,prev=-1;\n\t\tif(!sz)res+=(j-i)*(j-i-1)/2;//in this case, all the towers in section [i,j) are the tallest. So any pair among them is valid.\n\t\telse for(int k=j-1;k>=i;k--){\n\t\t\tint cur=*(--s.lower_bound(p[k].second));\n\t\t\tif(cur!=prev)prev=cur,res+=cnt*(cnt-1)/2+cnt*min(sz,2ll),cnt=0;//all the towers which has the same prev are in the same section; Pairs among them and connections with boundaries are valid.\n\t\t\tcnt++;\n\t\t}\n\t\tres+=cnt*(cnt-1)/2+cnt*min(sz,2ll),cnt=0;//cnt*(cnt-1)/2: pairs among them;cnt*min(sz,2ll): two connections with boundaries\n\t\tfor(int k=i;k<j;k++)s.insert(p[k].second);\n\t\ti=j;\n\t}\n\tprintf(\"%lld\\n\",res);\n\treturn 0;\n}\n```\n",
        "postTime": 1582988150,
        "uid": 123369,
        "name": "xtx1092515503",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF5E \u3010Bindian Signalizing\u3011"
    },
    {
        "content": "\u5148\u6765\u8003\u8651\u5982\u679c\u662f\u94fe,\u4e14\u662f\u4e00\u4e2a\u6392\u5217\u600e\u4e48\u505a.\n\n\u5148\u679a\u4e3e\u53f3\u7aef\u70b9$r$\n\n\u56e0\u4e3a\u4e00\u4e2a\u6761\u4ef6\u662f$(l,r)$\u7684\u6570\u90fd$<=a[r]$\n\n\u6240\u4ee5\u6c42\u51fa\u4ed6\u5de6\u8fb9\u7b2c\u4e00\u4e2a\u6bd4\u4ed6\u5927\u7684\u70b9$le$\n\n\u90a3\u4e48\u663e\u7136$l$\u5c5e\u4e8e$[le,r]$\u662f\u4e0a\u9762\u90a3\u4e2a\u6761\u4ef6\u7684\u5145\u8981\u6761\u4ef6.\n\n\u73b0\u5728\u8003\u8651\u53e6\u4e00\u4e2a\u6761\u4ef6\u662f$(l,r)$\u7684\u6570\u90fd$<=a[l]$\n\n\u5373\u4ece$1$\u679a\u4e3e\u81f3$r-1$,\u7528\u5355\u8c03\u6808\u7ef4\u62a4\u540e\u7f00$max$,$l$\u5728\u5355\u8c03\u6808\u4e0a.\n\n\u90a3\u4e48\u663e\u7136\u7528\u4e2a\u5355\u8c03\u6808\u5c31\u89e3\u51b3\u4e86\u95ee\u9898.\n\n\u73af\u7684\u8bdd\u5c31\u662f\u7528$aa$(\u5373\u590d\u5236\u4e00\u4efd)\u7684\u7b54\u6848-$a$\u7684\u7b54\u6848\n(\u8fd8\u5f97\u51cf\u6389\u4e24\u4e2a\u65b9\u5411\u90fd\u6ee1\u8db3\u6761\u4ef6\u7684$pair$,\u6c42\u4e2a\u6700\u5927\u6b21\u5927\u5c31\u53ef\u4ee5\u4e86)\n\n\u5b58\u5728\u76f8\u540c\u7684\u6570\u7684\u8bdd\u8bb0\u4e2a$cnt$\u5c31\u53ef\u4ee5\u4e86\n\n$upd$:\u628a\u6700\u5927\u503c\u63d0\u5230\u6700\u524d\u9762+\u7279\u5224$(1,i)$\u4e5f\u53ef\u4ee5\u8f6c\u5316\u6210\u94fe\uff0c\u5373\u4e0b\u9762\u7684\u4ee3\u7801\u3002\n\n```cpp\n//by kcz 1552920354@qq.com\n//if you find any bug in my code\n//please tell me\n#include<bits/stdc++.h>\nusing namespace std;\n\ntemplate <typename T> void chmin(T&x,const T &y)\n{\n    if(x>y)x=y;\n}\ntemplate <typename T> void chmax(T &x,const T &y)\n{\n    if(x<y)x=y;\n}\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef unsigned short us;\ntypedef unsigned int ui;\ntypedef pair<int,int> pii;\n#define rep(i,l,r) for(int i=l;i<=r;++i)\n#define per(i,r,l) for(int i=r;i>=l;--i)\n#define pb push_back\n#define mp make_pair\n#define gc (c=getchar())\nint read()\n{\n    char c;\n    while(gc<'-');\n    if(c=='-')\n    {\n        int x=gc-'0';\n        while(gc>='0')x=x*10+c-'0';\n        return -x;\n    }\n    int x=c-'0';\n    while(gc>='0')x=x*10+c-'0';\n    return x;\n}\n#undef gc\n\nll sqr(const ll &x)\n{\n    return x*x;\n}\nconst int N=1e6+5;\nint a[N],a0[N];\npii st[N];int top;\nll solve(int n)\n{\n    top=1;st[1]=mp(a[1],1);\n    ll ans=0;\n    rep(i,2,n)\n    {\n        while(top&&st[top].first<a[i]){ans+=st[top].second;--top;}\n        if(st[top].first==a[i])\n        {\n            ans+=st[top].second+bool(top>1);\n            ++st[top].second;\n        }\n        else \n        {\n            ++ans;\n            st[++top]=mp(a[i],1);\n        }\n    }\n    static bool have[N];\n    int mx=0;\n    rep(i,2,n)\n    {\n        if(a[i]>=mx){have[i]=1;mx=a[i];}\n    }\n    mx=0;\n    per(i,n,2)\n    if(a[i]>=mx)\n    {\n        ans+=!have[i];\n        mx=a[i];\n    }\n    return ans;\n}\nint main()\n{\n  //  freopen(\"1.in\",\"r\",stdin);//freopen(\"1.out\",\"w\",stdout);\n    int n;\n    cin>>n;\n    rep(i,1,n)a0[i]=read();\n    int mxi=1;\n    rep(i,2,n)\n    if(a0[i]>a0[mxi])mxi=i;\n    int top=0;\n    rep(i,mxi,n)a[++top]=a0[i];\n    rep(i,1,mxi-1)a[++top]=a0[i];\n    cout<<solve(n);\n}\n\n\n\n```",
        "postTime": 1519047164,
        "uid": 9168,
        "name": "kczno1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF5E \u3010Bindian Signalizing\u3011"
    },
    {
        "content": "\u4e3b\u8981\u63a2\u8ba8\u4e00\u4e0b\u672c\u9898\u4e2d\u73af\u5e26\u6765\u7684\u5f71\u54cd\u3002  \n\u7ed3\u8bba\u662f\u53ea\u6709\u5f53\u6700\u9ad8\u5cf0\u552f\u4e00\u7684\u65f6\u5019\u624d\u9700\u8981\u53bb\u91cd\u2014\u2014\u6c42\u8fc7\u3002\n\uff08\u8d77\u7801\u6309\u7167\u6211\u7684\u7b97\u6cd5 : \uff09 \uff09\n\n## Part1\n\u6211\u4eec\u5148\u5c1d\u8bd5\u4ec0\u4e48\u90fd\u4e0d\u7ba1\uff0c\u5bf9\u4e8e\u4e00\u5ea7\u5c71,\u5411\u53f3\u8fb9\u626b\uff0c\u627e\u5408\u6cd5\u5c71\u4e14\u9ad8\u5ea6\u5c0f\u4e8e\u7b49\u4e8e\u5b83\uff0c\u5411\u5de6\u8fb9\u626b\uff0c\u627e\u5408\u6cd5\u5c71\u4e14\u9ad8\u5ea6\u5c0f\u4e8e\u5b83\u3002  \n**\u53ea\u7ba1\u53f3\u8fb9\u7684\u76f8\u7b49\u9ad8\u5ea6\u5c71\uff0c\u662f\u4e3a\u4e86\u9632\u6b62\u4e00\u5bf9\u9ad8\u5ea6\u76f8\u7b49\u7684\u5c71\u7b97\u4e24\u904d\u7684\u60c5\u51b5**   \n\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u539f\u73af\u590d\u5236\u4e2a\u4e94\u904d\uff0c\u7136\u540e\u5728\u6700\u4e2d\u95f4\u7684\u5730\u65b9\u968f\u4fbf\u9009\u4e00\u4e2a\u8d77\u70b9\uff0c\u4e00\u4e2a\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u4e00\u4e2a\u9012\u51cf\u6570\u7ec4\uff0c\u5de6\u53f3\u90fd\u626b\u4e00\u4e0b\uff0c\u5b9e\u73b0\u7edf\u8ba1\u3002  \n\n\u663e\u7136\uff0c\u5f88\u591a\u7ec6\u8282\uff0c\u4f46\u8fd9\u4e2a\u65b9\u6cd5\u4e4b\u540e\u53ef\u4ee5\u5f97\u5230\u6539\u826f \uff1a)\u3002\n\n## Part2\n\u4f46\u662f\u663e\u7136\uff0c\u6709\u4e9b\u5c71\u53ef\u80fd\u4ece\u5de6\u8fb9\u626b\u5408\u6cd5\uff0c\u4ece\u53f3\u8fb9\u626b\u4e5f\u5408\u6cd5\u3002\u5982\u4f55\u53bb\u91cd\uff1f  \n\n\u5bf9\u4e8e\u53ea\u6709\u4e00\u5ea7\u6700\u9ad8\u5cf0\u7684\u65f6\u5019\uff1a  \n\n\u8fd9\u662f\u4ee5\u6700\u9ad8\u5cf0\u5411\u5de6\u53f3\u626b\u7684\u5408\u6cd5\u5c71\uff0c\u5de6\u7eff\u7bad\u5934\u4ee3\u8868\u5411\u5de6\u626b\u53ef\u5408\u6cd5\uff0c\u53f3\u7ea2\u7bad\u5934\u4ee3\u8868\u5411\u53f3\u626b\u53ef\u5408\u6cd5\u3002\n![](https://cdn.luogu.com.cn/upload/image_hosting/yp7qn9sg.png)  \n\u901a\u8fc7 Part 1 \u6211\u4eec\u7684\u5355\u8c03\u961f\u5217\u505a\u6cd5\u53ef\u4ee5\u53d1\u73b0\uff0c\u5411\u5de6\u626b\uff0c\u627e\u5230\u7684\u5408\u6cd5\u5c71\u4e2d\u6700\u53f3\u8fb9\uff0c\u540c\u65f6\u4e5f\u662f\u6700\u9ad8\u7684\u90a3\u51e0\u5ea7\u5c71\uff0c\u5728\u5411\u53f3\u626b\u7684\u65f6\u5019\u4e5f\u4f1a\u88ab\u626b\u5230\uff0c\u6240\u4ee5\u51cf\u53bb\u5b83\u4eec\u7684\u91cd\u590d\u8d21\u732e\u5373\u53ef\u3002\n\n\u81f3\u4e8e\u5176\u4ed6\u5c71\u5cf0\uff0c\u56e0\u4e3a\u6700\u9ad8\u5cf0\u59cb\u7ec8\u9ad8\u4e8e\u4ed6\u4eec\uff0c\u5411\u5de6\u626b\u7684\u5408\u6cd5\u5c71\u4e0d\u53ef\u80fd\u5728\u6700\u9ad8\u5cf0\u7684\u5de6\u8fb9\uff0c\u5411\u53f3\u626b\u540c\u7406\u3002\u6240\u4ee5\u5411\u5de6\u626b\u548c\u5411\u53f3\u626b\u4e0d\u4f1a\u6709\u4ea4\u96c6\u3002  \n\n\u5bf9\u4e8e\u6709\u5f88\u591a\u5ea7\u6700\u9ad8\u5cf0\u7684\u65f6\u5019\uff1a\uff08\u8fd9\u79cd\u65f6\u5019\u7684\u975e\u6700\u9ad8\u5cf0\u60c5\u51b5\u540c\u4e0a\uff0cskip\uff09  \n![](https://cdn.luogu.com.cn/upload/image_hosting/b2ojfv1r.png)\n\n\u5bf9\u4e8e\u4ece\u5de6\u5f80\u53f3\u6570\u7684\u7b2c\u4e00\u5ea7\u6700\u9ad8\u5cf0\uff0c\u5408\u6cd5\u5c71\u60c5\u51b5\u5982\u56fe\uff0c\u6240\u4ee5\u5176\u4ed6\u6700\u9ad8\u5cf0\u4f1a\u88ab\u5b83\u591a\u6b21\u8d21\u732e\u7b54\u6848..\u5417\uff1f  \n\n\u4e00\u5bf9\u9ad8\u5ea6\u76f8\u7b49\u7684\u5c71\u7b97\u4e24\u904d\uff0c\u662f\u80fd\u591f\u88ab\u53bb\u91cd\u7684\u3002  \n\n\u6240\u4ee5\u8fd9\u79cd\u60c5\u51b5\u4e0d\u4f1a\u7b97\u91cd\u3002\n\n\n## \u540e\u8bb0\n\n\u597d\u4e86\uff0c\u53bb\u91cd\u4e5f\u8ba8\u8bba\u5b8c\u4e86\uff0c\u6211\u4eec\u628a\u7528\u5355\u8c03\u961f\u5217\u7b97\u7b54\u6848\u7684\u5730\u65b9\u4f18\u5316\u4e00\u4e0b\u3002  \n\n\u53d1\u73b0\u53ea\u6709\u5411\u53f3\u626b\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u7edf\u8ba1\u5c0f\u4e8e\u7b49\u4e8e\u5b83\u7684\u5408\u6cd5\u5c71\uff0c\u800c\u5411\u5de6\u626b\u53ea\u9700\u8981\u7ba1\u5c0f\u4e8e\uff0c\u6240\u4ee5\u5bf9\u4e8e\u7b2c $i$ \u5ea7\u5c71\uff0c\u5411\u53f3\u626b\u5230\u4e00\u5ea7\u6700\u9ad8\u5cf0\uff0c\u540e\u9762\u7684\u5c71\u5c31\u4e0d\u4f1a\u518d\u5bf9\u7b2c $i$ \u5ea7\u5c71\u8d21\u732e\u7b54\u6848\u4e86\u3002\n\n\u6240\u4ee5\u5411\u53f3\u626b\u4ece\u4efb\u610f\u6700\u9ad8\u5cf0\u7684\u5de6\u8fb9\u5f00\u59cb\u626b $n$ \u5ea7\uff0c\u5411\u53f3\u626b\u4ece\u4efb\u610f\u6700\u9ad8\u5cf0\u7684\u53f3\u8fb9\u5f00\u59cb\u626b $n$ \u5ea7\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u662f\u4ee3\u7801\n```cpp\n// By Hasinon,the juruo who's waiting for AFO life.\n/*Mlm:  Tlm:*/\n#include<bits/stdc++.h>\n#define ll long long\n#define pb push_back\n#define mid ((l+r)>>1)\n#define FOR(i,a,b) for(int i=(a); i<=(b); ++i)\n#define ROF(i,a,b) for(int i=(a); i>=(b); --i)\nusing namespace std;\nstruct node{\n\tll x,z;\n};\nconst ll N=1e6;\nll a[N*3+10];\ndeque<node> q;\nint main() {\n//\tfreopen(\"CF5E.in\",\"r\",stdin);\n//\tfreopen(\"CF5E.out\",\"w\",stdout);\n\tll n=gt(),ans=0,cnt=0;\n\tFOR(i,1,n) a[i]=gt();\n\tFOR(i,n+1,n*2) a[i]=a[i-n];\n\tll st=0,mmax=0;\n\tFOR(i,1,n*2){\n\t\tif(mmax<=a[i]){\n\t\t\tmmax=a[i];\n\t\t\tst=i;\n\t\t}\n\t}\n//\tprintf(\"st:%lld\\n\",st);\n\tROF(i,st-1,st-n){\n\t\tll lans=0;\n\t\twhile(q.size()&&q.front().x<a[i]){\n\t\t\tlans+=q.front().z;\n\t\t\tq.pop_front();\t\n\t\t} \n\t\tif(q.front().x==a[i]){\n\t\t\tlans+=q.front().z;\t\n\t\t} \n\t\tans+=lans;\n//\t\tprintf(\"%lld\\n\",lans);\n\t\tif(q.size()&&q.front().x==a[i]){\n\t\t\t++q.front().z;\n\t\t}\n\t\telse q.push_front((node){a[i],1});\n\t}\n//\tprintf(\"ans1:%lld\\n\",ans);\n\tq.clear();\n\tFOR(i,n*2+1,n*3) a[i]=a[i-n];\n\tFOR(i,st+1,st+n-1){\n\t\tll lans=0;\n\t\twhile(q.size()&&q.front().x<a[i]){\n\t\t\tlans+=q.front().z;\n\t\t\tq.pop_front();\t\n\t\t} \n\t\tans+=lans;\n\t\tif(q.size()&&q.front().x==a[i]){\n\t\t\t++q.front().z;\n\t\t}\n\t\telse q.push_front((node){a[i],1});\n\t}\n\tll lans=0;\n\twhile(q.size()>=2&&q.front().x<a[st+n]){\n\t\tlans+=q.front().z;\n\t\tq.pop_front();\t\n\t} \n\tans+=lans;\n\tprintf(\"%lld\",ans);\n}\n\n\n\n```\n\n",
        "postTime": 1649324201,
        "uid": 208967,
        "name": "Hasinon",
        "ccfLevel": 9,
        "title": "CF5E Bindian Signalizing \u840c\u65b0\u9898\u89e3 11th"
    },
    {
        "content": "\u770b\u4e86\u4e00\u5708\u597d\u50cf\u6ca1\u6709\u4e00\u6837\u7684\u89e3\u6cd5 qwq \uff0c\u90a3\u6211\u5c31\u6765\u6c34\u4e00\u53d1\u5355\u8c03\u6808+\u6811\u72b6\u6570\u7ec4\u7684\u9898\u89e3\u7f62 \u3002 \n\n\n\n------------\n\n**\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u7b2c\u4e00\u773c\u770b\u4e0a\u53bb\u5c31\u53ef\u4ee5\u7acb\u9a6c\u60f3\u5230\u4e00\u4e2a\u7b97\u6cd5\uff1a\u5355\u8c03\u6808**  \n\u56e0\u4e3a\u8fd9\u9053\u9898\u662f\u6709\u90e8\u5206\u9690\u542b\u4fe1\u606f\u7684\uff1a  \n\uff08\u8fd9\u9053\u9898\u8981\u6c42 pair \u7684\u6570\u91cf\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\u7b97\u5b83\u524d\u9762\u7684\u8282\u70b9\u5c31\u884c\u4e86\u3002\uff09  \n\u5bf9\u4e8e\u4efb\u4f55\u8282\u70b9\uff0c\u5b83\u6240\u80fd\u7167\u5230\u7684\u8282\u70b9\u5fc5\u7136\u662f\u6ca1\u6709\u88ab\u963b\u6321\u7684\uff08\u5e9f\u8bdd\uff09\u5e76\u4e14\u662f\u5c0f\u4e8e\u7b49\u4e8e\u5f53\u524d\u8282\u70b9\u7684\u9ad8\u5ea6\u7684**\u6216\u8005**\u662f\u5927\u4e8e\u6b64\u8282\u70b9\u9ad8\u5ea6\u7684\u7b2c\u4e00\u4e2a\u8282\u70b9\u3002  \n\u56fe\u89e3\uff1a\uff08\u67f1\u5b50\u9ad8\u5ea6\u4ee3\u8868\u5c71\u7684\u9ad8\u5ea6\uff0c\u7ea2\u8272\u7684\u67f1\u5b50\u4ee3\u8868\u80fd\u7167\u5230\u7684\uff0c\u9ed1\u8272\u8868\u793a\u4e0d\u80fd\uff09  \n![](https://cdn.luogu.com.cn/upload/image_hosting/4a3bqofr.png)\n\u963b\u6321\u7684\u95ee\u9898\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5355\u8c03\u6808\u6765\u89e3\u51b3\uff0c\u4f46\u662f\u9ad8\u5ea6\u7684\u95ee\u9898\u6682\u65f6\u4e0d\u80fd\u89e3\u51b3\u3002  \n\u4e8e\u662f\u6211\u4eec\u60f3\u5230\uff1a\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u6765\u8bb0\u5f55\u5728\u5355\u8c03\u6808\u5185\u7684\u6bcf\u4e2a\u9ad8\u5ea6\u7684\u5c71\u7684\u6570\u91cf\u554a\uff01  \n\u4e00\u770b\u6570\u636e\uff1a 1e9  emmm...  \n\u79bb\u6563\u5316\u662f\u4e2a\u597d\u4e1c\u897f\uff0c\u6211\u4eec\u5c06\u5c71\u8fdb\u884c\u6392\u5e8f\uff0c\u7ed9\u6bcf\u5ea7\u5c71\u901a\u8fc7\u79bb\u6563\u5316\u7684\u65b9\u5f0f\u91cd\u65b0\u8d4b\u503c\u4e00\u4e2a\u9ad8\u5ea6\u3002  \n\u63a5\u4e0b\u6765\u53ea\u5269\u6700\u540e\u4e00\u4e2a\u95ee\u9898\u4e86\uff1a\u73af\u8981\u5982\u4f55\u5904\u7406\uff1f  \n\u5176\u5b9e\u5c31\u8ddf\u51e0\u4f4d\u697c\u4e0a\u5927\u795e\u8bf4\u7684\u4e00\u6837\uff0c\u5c06\u6700\u9ad8\u7684\u4e00\u5ea7\u5c71\u4f5c\u4e3a\u8d77\u70b9\uff0c\u56e0\u4e3a\u6ca1\u6709\u4efb\u4f55\u4eba\u7684\u89c6\u7ebf\u80fd\u591f\u8d8a\u8fc7\u5b83\uff01\u6211\u4eec\u5728\u6700\u540e\u518d\u5bf9\u7b2c\u4e00\u5ea7\u5c71\u505a\u4e00\u6b21\u73af\u7684\u7279\u5224\uff1a\u5c06\u6808\u5185\u7684\u5143\u7d20\u4e00\u4e00\u5f39\u51fa\uff0c\u5982\u679c\u8fd9\u4e2a\u8282\u70b9\u4e4b\u524d\u5c31\u5df2\u7ecf\u5728\u6b63\u65b9\u5411\u5706\u5f27\u4e0a\u4e0e\u6700\u9ad8\u5c71\u914d\u8fc7\u5bf9\u4e86\uff0c\u90a3\u4e48\u5c31\u65e0\u89c6\u5b83\uff0c\u5426\u5219\u7b54\u6848 +1 \u3002  \ncode:\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n;\nint h[1000005];\nint c[1000005];\nint Stack[1000005];\nint size;\n//\u5355\u8c03\u6808\u548c\u6808\u9876 \nlong long ans;\n//\u8bb0\u5f97\u5f00long long\u554a \nint MAX,adr,tot;\nint num[1000005];//\u8bb0\u5f55\u6bcf\u5ea7\u5c71\u79bb\u6563\u5316\u4e4b\u540e\u7684\u9ad8\u5ea6 \nbool vis[1000005];//\u8bb0\u5f55\u8fd9\u5ea7\u5c71\u4e4b\u524d\u6709\u6ca1\u6709\u4e0e\u6700\u9ad8\u5c71\u914d\u8fc7\u5bf9 \nstruct node{\n\tint x,y;\n}S[1000005];//\u7528\u6765\u79bb\u6563\u5316\u7684\u7ed3\u6784\u4f53 \nint cnt;\nbool cmp(node a,node b){\n\treturn a.x<b.x;\n}\nlong long tree[1000005];\n//\u6811\u72b6\u6570\u7ec4\u6a21\u677fqwq \nint lowbit(int x){return x&(-x);} \nvoid update(int x,int add){\n\twhile(x<=cnt){\n\t\ttree[x]+=add;\n\t\tx+=lowbit(x);\n\t}\n}\nint query(int x){\n\tint ans=0;\n\twhile(x!=0){\n\t\tans+=tree[x];\n\t\tx-=lowbit(x);\n\t}\n\treturn ans;\n}\nint q1,q2,q3;\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>h[i];\n\t\tif(h[i]>=MAX){\n\t\t\tMAX=h[i];\n\t\t\tadr=i;\n\t\t\t//\u8bb0\u5f55\u6700\u9ad8\u5cf0\u7684\u4f4d\u7f6e \n\t\t}\n\t}\n\ttot=n;\n\t//\u65ad\u73af \n\tfor(int i=adr;i>=1;i--){\n\t\tc[tot--]=h[i];\n\t}\n\tfor(int i=n;i>adr;i--){\n\t\tc[tot--]=h[i];\n\t}\n\t//\u79bb\u6563\u5316 \n\tfor(int i=1;i<=n;i++){\n\t\tS[i].x=c[i];\n\t\tS[i].y=i;\n\t}\n\tsort(S+1,S+n+1,cmp);\n\tfor(int i=1;i<=n;i++){\n\t\tif(S[i].x!=S[i-1].x)++cnt;\n\t\tnum[S[i].y]=cnt;\n\t}\n\tvis[n]=true;\n\tfor(int i=n;i>=1;i--){\n\t\t//\u4e3a\u4e86\u5e38\u6570\u4f18\u5316\u4e0d\u5f97\u4e0d\u7528\u53d8\u91cf\u4ee3\u66ff\u76f4\u63a5\u7684\u51fd\u6570\u8c03\u7528\uff0c\u9700\u8981\u7684\u53ef\u4ee5\u628a\u5b83\u53d8\u56de\u6765\uff08\u4f1aTLEQWQ \n\t\tq1=query(num[i]);\n\t\tq2=query(cnt);\n\t\tq3=query(cnt-1);\n\t\tans+=q1;//\u52a0\u4e0a\u5c0f\u4e8e\u7b49\u4e8e\u6b64\u5c71\u5cf0\u9ad8\u5ea6\u7684\u6808\u5185\u5c71\u5cf0 \n\t\tif(num[i]==cnt){//\u5982\u679c\u5b83\u662f\u53ef\u80fd\u4e0d\u552f\u4e00\u7684\u6700\u9ad8\u5cf0 \n\t\t\tvis[i]=true;\n\t\t}\n\t\tif(q2-q1){//\u5224\u65ad\u6808\u5185\u6709\u6ca1\u6709\u6bd4\u76ee\u524d\u5c71\u5cf0\u66f4\u9ad8\u7684\u5c71\u5cf0 \n\t\t\tif((q3-q1==0)&&q2-q3==1){//\u7279\u5224\u7b2c\u4e00\u5ea7\u9ad8\u4e8e\u76ee\u524d\u5c71\u5cf0\u7684\u5c71\u5cf0 \u662f\u5426\u662f\u6700\u9ad8\u5cf0 \n\t\t\t\tvis[i]=true;\n\t\t\t}\n\t\t\tans++;//\u52a0\u4e0a\u4e00\u4e2a\u65b9\u6848\u6570 \n\t\t}\n\t\twhile(size>=1&&c[Stack[size]]<c[i]){\n\t\t\t//\u5f39\u51fa\u88ab\u906e\u6321\u7684\u5c71\u5cf0\uff08\u5355\u8c03\u6808\uff09 \n\t\t\tupdate(num[Stack[size]],-1);//\u5c06\u6b64\u5c71\u5cf0\u9ad8\u5ea6\u7684\u5c71\u5cf0\u6570\u91cf-1 \n\t\t\tsize--;\n\t\t}\n\t\t//\u5c06\u76ee\u524d\u5c71\u5cf0\u52a0\u5165\u6808\u5185 \n\t\tStack[++size]=i;\n\t\tupdate(num[i],1);//\u5c06\u6b64\u5c71\u5cf0\u9ad8\u5ea6\u7684\u5c71\u5cf0\u6570\u91cf+1 \n\t}\n\tfor(int i=size;i>=1;i--){//\u73af\u306e\u7279\u5224 \n\t\tif(vis[Stack[i]])continue;//\u5047\u5982\u4e4b\u524d\u914d\u8fc7\u5bf9\u4e86\u5c31\u8df3\u8fc7 \n\t\tans++;\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```\n\n",
        "postTime": 1629294167,
        "uid": 213173,
        "name": "\u5c0f\u6728\u866b",
        "ccfLevel": 4,
        "title": "The solution of CF5E \"Bindian Signalizing\""
    },
    {
        "content": "\u9898\u76ee\u4f20\u9001\u95e8\uff1a[CF5E](https://www.luogu.com.cn/problem/CF5E)\u3002\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\uff1f](https://www.luogu.com.cn/blog/likexin/solution-cf5e)\n\n## \u9898\u76ee\u5927\u610f\uff1a\n\n> \u6709 $n$ \u5ea7\u56f4\u6210\u4e00\u4e2a\u73af\u7684\u5c71\uff0c\u6bcf\u5ea7\u5c71\u4e0a\u90fd\u6709\u4e00\u4e2a\u770b\u5b88\u5458\u3002\u4e24\u4e2a\u770b\u5b88\u5458\u80fd\u591f\u76f8\u4e92\u770b\u5230\u5f53\u4e14\u4ec5\u5f53\u8fde\u63a5\u4ed6\u4eec\u6240\u5728\u7684\u5c71\u7684\u4e24\u6761\u5f27\u4e2d\u4efb\u610f\u4e00\u6761\u4e0a\u6ca1\u6709\u6bd4\u4ed6\u4eec\u66f4\u9ad8\u7684\u5c71\uff0c\u95ee\u6709\u591a\u5c11\u5bf9\u770b\u5b88\u5458\u80fd\u591f\u76f8\u4e92\u770b\u5230\u3002\n\n\u8bf4\u4e86\u8fd9\u4e48\u591a\uff0c\u5176\u5b9e\u662f\u628a [P1823](https://www.luogu.com.cn/problem/P1823) \u91cc\u7684\u961f\u5217\u53d8\u6210\u4e86\u9996\u5c3e\u76f8\u63a5\u7684\u4e00\u4e2a\u5706\uff0c\u5176\u4ed6\u6ca1\u6709\u4efb\u4f55\u53d8\u5316\u3002\n\n\u5efa\u8bae\u5148\u53bb\u505a\u4e00\u4e0b P1823\u3002\n\n## \u601d\u8def\uff1a\n\n\u6839\u636e\u6211\u4eec\u7684\u7ecf\u9a8c\uff0c\u9047\u5230\u73af\u5c31\u4e00\u5b9a\u8981 **\u62c6\u73af\u4e3a\u94fe** \u3002\n\n\u4f46\u662f\u62c6\u73af\u6709\u5f88\u591a\u65b9\u5f0f\uff0c\u600e\u4e48\u62c6\u624d\u662f\u91cd\u70b9\u3002\n\n\u5206\u6790\u4e00\u4e0b\u6837\u4f8b\uff0c\u6211\u4eec\u5f88\u5feb\u53d1\u73b0\uff1a\u5bf9\u4e8e\u6700\u9ad8\u5cf0\u800c\u8a00\uff0c\u5b83\u5de6\u53f3\u4e24\u4fa7\u6bd4\u4ed6\u4f4e\u7684\u5c71\u662f\u4e0d\u80fd\u8de8\u8fc7\u4ed6\u4e92\u76f8\u770b\u5230\u7684\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e24\u4e24\u76f8\u8fde\u7684\u5c71\u4e2d\uff0c\u8fde\u7ebf\u662f\u4e0d\u4f1a\u8de8\u8fc7\u6700\u9ad8\u5cf0\u7684\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5728\u62c6\u7684\u65f6\u5019\u5c31\u628a\u6700\u9ad8\u5cf0\u4f5c\u4e3a\u7b2c\u4e00\u5ea7\u5c71\uff0c\u540e\u9762\u7684\u5c71\u6309\u987a\u5e8f\u4f9d\u6b21\u4f4d\u79fb\u3002\n\n\u4f46\u662f\u5982\u679c\u6709\u591a\u4e2a\u6700\u9ad8\u5cf0\uff0c\u6211\u4eec\u5c31\u53d6\u7b2c\u4e00\u4e2a\uff08\u53d6\u6700\u540e\u4e00\u4e2a\u4e5f\u5e94\u8be5\u6ca1\u95ee\u9898\uff09\u4f5c\u4e3a\u7b2c\u4e00\u5ea7\u5c71\uff08\u56e0\u4e3a\u6700\u9ad8\u5cf0\u4e4b\u95f4\u4e5f\u53ef\u4ee5\u76f8\u4e92\u770b\u5230\uff09\u3002\n\n\u5269\u4e0b\u7684\u5c31\u662f\u5355\u8c03\u6808\u7684\u677f\u4e86\uff0c\u628a\u62c6\u51fa\u6765\u7684\u94fe\u5f53\u505a\u666e\u901a\u961f\u5217\u6765\u5904\u7406\uff0c\u7528\u5355\u8c03\u6808\u5904\u7406\u5c71\u4e4b\u95f4\u662f\u5426\u53ef\u4ee5\u76f8\u4e92\u770b\u5230\uff0c\u8fd9\u90e8\u5206\u76f4\u63a5\u7528 P1823 \u7684\u4ee3\u7801\u5373\u53ef\u3002\n\n\u4f46\u662f\u5f53\u7136\u6ca1\u6709\u5b8c\uff0c\u8003\u8651\u4ee5\u4e0b\u6837\u4f8b\uff1a\n\n```txt\n4\n1 1 2 2\n```\n\n\u5982\u679c\u5355\u7eaf\u5730\u6309\u7167\u4ee5\u4e0a\u601d\u8def\u53bb\u505a\uff0c\u90a3\u4e48\u5f97\u5230\u7684\u7b54\u6848\u5c31\u4f1a\u662f $4$\uff0c\u7136\u800c\u6b63\u786e\u7b54\u6848\u662f $6$\u3002\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n\u56e0\u4e3a\u628a\u5b83\u62c6\u6210\u94fe\u662f\u8fd9\u6837\u7684\uff08\u628a\u7b2c\u4e00\u4e2a\u6700\u9ad8\u5cf0\u5f53\u505a\u7b2c\u4e00\u5ea7\u5c71\uff09\uff1a\n\n$2$ $2$ $1$ $1$\n\n\u624b\u63a8\u4e00\u4e0b\u6b65\u9aa4\u540e\u53d1\u73b0\u7b2c\u4e00\u5ea7\u5c71\u548c\u7b2c\u4e09\u3001\u56db\u5ea7\u5c71\u90fd\u770b\u4e0d\u5230\uff0c\u53ef\u662f\u5982\u679c\u5728\u73af\u4e0a\uff0c\u662f\u53ef\u4ee5\u901a\u8fc7\u53e6\u4e00\u6761\u5f27\u770b\u5230\u7684\u3002\n\n\u53d1\u73b0\u8fd9\u4e2a\u95ee\u9898\u53ea\u4f1a\u51fa\u73b0\u5728\u7b2c\u4e00\u5ea7\u5c71\u548c\u5176\u4ed6\u5c71\u4e4b\u95f4\uff0c\u90a3\u4e48\u518d\u7279\u5224\u4e00\u4e0b\u8fd9\u79cd\u60c5\u51b5\u5373\u53ef\u3002\n\n\u6700\u540e\u6ce8\u610f\u7b54\u6848\u4f1a\u7206 int\uff0cans \u8981\u5f00 long long \u7684\u3002\n\n## \u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\nusing namespace std;\nint a[1000001];\nint aa[1000001];\nint s[1000001];\nint w[1000001];\nbool pc[1000001];\nint top=0;\nint main(){\n\t//\u8bfb\u5165\u3002\n\tint n;\n\tcin>>n;\n\tint maxx=-100001;\n\tint wz=0;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>aa[i];\n\t\tif(aa[i]>maxx){//\u627e\u5230\u7b2c\u4e00\u4e2a\u6700\u9ad8\u5cf0\u3002\n\t\t\tmaxx=aa[i];\n\t\t\twz=i;\n\t\t}\n\t}\n   \t//\u6309\u987a\u5e8f\u4f4d\u79fb\u5230 a \u6570\u7ec4\u91cc\u3002\n\tint now=0;\n\tfor(int i=wz;i<=n;i++){\n\t\ta[++now]=aa[i];\n\t}\n\tfor(int i=1;i<=wz;i++){\n\t\ta[++now]=aa[i];\n\t}\n\tlong long ans=0;\n\tfor(int i=1;i<=n;i++){//\u5355\u8c03\u6808\u5904\u7406\uff0c\u642d\u914d P1823 \u98df\u7528\u3002\n\t\tw[i]=1;\n\t\twhile(top>0&&a[s[top]]<=a[i]){\n\t\t\tans+=w[s[top]];\n\t\t\tif(a[s[top]]==a[i]){\n\t\t\t\tw[i]+=w[s[top]];\n\t\t\t}\n\t\t\ttop--;\n\t\t}\n\t\tif(top){\n\t\t\tans+=1;\n\t\t\tif(s[top]==1){ //\u8fd9\u4e2a\u4f4d\u7f6e\u548c\u7b2c\u4e00\u5ea7\u5c71\u5339\u914d\u8fc7\u4e86\uff0c\u65b9\u4fbf\u540e\u9762\u7684\u7279\u5224\u3002\n\t\t\t\tpc[i]=1;\n\t\t\t} \n\t\t}\n\t\ts[++top]=i;\n\t}\n\tint m=0;\n\tfor(int i=n;i>1;i--){//\u4ece\u540e\u5f80\u524d\u5904\u7406\uff0c\u53d1\u73b0\u7b97\u6f0f\u4e86\u5c31\u7ed9 ans + 1\u3002\n\t\tif(pc[i]==0&&a[i]!=a[1]&&a[i]>=m){ \n\t\t\tans++;\n\t\t}\n\t\tm=max(a[i],m);\n\t}\n\tcout<<ans;//\u8f93\u51fa\u3002\n\treturn 0;\n}\n\n```\n\n[ AC \u8bb0\u5f55](https://www.luogu.com.cn/record/81020550)\u3002",
        "postTime": 1658671090,
        "uid": 333834,
        "name": "\u674e\u67ef\u6b23",
        "ccfLevel": 0,
        "title": "CF5E Bindian Signalizing \u9898\u89e3"
    },
    {
        "content": "\u770b\u5230\u672c\u9898\u7acb\u9a6c\u60f3\u5230[\u7b1b\u5361\u5c14\u6811](https://oi-wiki.org/ds/cartesian-tree/)\u3002\n\n\u5148\u8003\u8651\u628a\u73af\u8f6c\u6362\u6210\u7ebf\u6027\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u4f8b\u5b50 `1 5 3 4 2`\uff0c\u53d1\u73b0\u53ef\u4ee5\u73af\u62c6\u6210 `5 3 4` \u548c `4 2 1 5` \u4e24\u4e2a\u5e8f\u5217\uff0c\u4f7f\u4e24\u8005\u4e92\u4e0d\u5f71\u54cd\uff0c\u4e5f\u5c31\u662f\u6839\u636e\u6700\u5927\u503c\u548c\u6b21\u5927\u503c\u5206\u6210\u4e24\u90e8\u5206\u3002\u90a3\u4e48\u73af\u7684\u95ee\u9898\u5c31\u89e3\u51b3\u4e86\u3002\n\n\u6682\u65f6\u4e0d\u8003\u8651\u6709\u91cd\u590d\u6570\u5b57\uff0c\u5bf9\u4e8e\u4e00\u4e32\u4ece\u73af\u4e2d\u62c6\u51fa\u6765\u7684\u6570 `5 1 3 2 4`\uff0c\u628a\u5b83\u6302\u8fdb\u4e00\u4e2a\u5927\u6839\u7b1b\u5361\u5c14\u6811\u4e2d\uff08\u5982\u4e0b\uff09\u3002\u56e0\u4e3a\u7b1b\u5361\u5c14\u6811\u7684\u6027\u8d28\uff0c\u663e\u7136\u4e00\u4e2a\u6570\u53ef\u4ee5\u548c**\u5de6\u5b50\u8282\u70b9\u7684\u53f3\u94fe**\u6216**\u53f3\u5b50\u8282\u70b9\u7684\u5de6\u94fe**\u4e2d\u7684\u70b9\u7ec4\u6210\u7b26\u5408\u6761\u4ef6\u7684\u6570\u5bf9\u3002\n\n\u5373 $5$ \u5230 $1,3,4$\uff1b$4$ \u5230 $3,2$\uff1b$3$ \u5230 $1,2$\u3002\n\n\u7531\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u7684\u5de6\u53f3\u94fe\u5927\u5c0f\u53ef\u4ee5\u603b\u5171 $O(n)$ \u7684\u65f6\u95f4\u6c42\u51fa\uff0c\u6240\u4ee5\u8fd9\u4e2a\u65b9\u6848\u770b\u8d77\u6765\u662f\u53ef\u884c\u7684\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/spdbi5kg.png)\n\n\u8003\u8651\u4e00\u4e0b\u91cd\u590d\u6570\u5b57\uff0c\u53d1\u73b0\u4e8b\u60c5\u7a0d\u5fae\u53d8\u5f97\u68d8\u624b\u8d77\u6765\uff0c\u5b9e\u9645\u4e0a\u6211\u4e5f\u5728\u8fd9\u65b9\u9762\u7528\u4e86\u6700\u591a\u65f6\u95f4\u3002\u53d1\u73b0\u4e00\u4e2a\u6027\u8d28\uff0c\u7b1b\u5361\u5c14\u6811\u5355\u8c03\u6808\u5efa\u6811\u540e\uff0c\u82e5\u4e00\u5806\u6570\u76f8\u540c\u4e14\u4e2d\u95f4\u6ca1\u6709\u66f4\u5927\u7684\u6570\uff0c\u90a3\u4e48\u8fd9\u5806\u6570\u4e00\u5b9a\u5728\u4e00\u6761\u94fe\u4e0a\u4e14\u65b9\u5411\u56fa\u5b9a\uff08\u5de6\u94fe\u8fd8\u662f\u53f3\u94fe\u53d6\u51b3\u4e8e\u662f\u5426\u53d6\u7b49\u4e8e\uff09\u3002\n\n\u4e0b\u56fe\u662f\u5e8f\u5217\u4e3a `2 2 2 1 1 4 1` \u4e14\u5355\u8c03\u6808\u5efa\u6811\u53d6\u7b49\u4e8e\u65f6\uff08\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u81ea\u5df1\u6784\u9020\u6210\u7c7b\u4f3c\u7684\u6837\u5b50\uff09\u7684\u7b1b\u5361\u5c14\u6811\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/aexx63q5.png)\n\n\u518d\u56de\u987e\u4e00\u4e0b\u4f7f\u7528\u7b1b\u5361\u5c14\u6811\u6c42\u89e3\u7684\u539f\u7406\uff0c\u5373\u6c42\u4e0e\u7ed9\u5b9a\u7ed3\u70b9\u4e2d\u95f4\u6ca1\u6709\u66f4\u5927\u70b9\u7684\u70b9\u96c6\u5927\u5c0f\uff0c\u90a3\u4e48\u663e\u7136\u4e0e\u7ed9\u5b9a\u7ed3\u70b9\u7684\u5b50\u7ed3\u70b9\u952e\u503c\u76f8\u540c\uff0c\u4e14\u5728\u540c\u4e00\u6761\u94fe\u4e0a\u7684\u70b9\u96c6\u4e00\u5b9a\u5c5e\u4e8e\u6240\u8981\u6c42\u7684\u70b9\u96c6\u3002\u6240\u4ee5\u53ea\u9700\u8981 dfs \u65f6\u518d\u8bb0\u5f55\u4e00\u4e2a\u4e0e\u5f53\u524d\u7ed3\u70b9\u952e\u503c\u76f8\u540c\u4e14\u5728\u4e00\u6761\u94fe\u4e0a\u7684\u70b9\u96c6\u5927\u5c0f\uff0c\u4e0e\u5de6\u53f3\u94fe\u5927\u5c0f\u5408\u5e76\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n)$ \u7684\uff0c\u4f46\u5e38\u6570\u5927\u4e86\u4e9b\uff0c\u8dd1\u5f97\u4e0d\u5982\u5355\u8c03\u6808 dp \u5feb qwq\u3002\u5f53\u7136\u4e5f\u53ef\u4ee5\u52a0\u4e00\u4e2a\u7f29\u70b9\u5c0f\u4f18\u5316\uff0c\u4f46\u5b9e\u6d4b\u5feb\u4e0d\u5230\u54ea\u91cc\u53bb\u5c31\u662f\u3002\n\n\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstring>\n#define int long long\nusing namespace std;\nconst int N=1000100;\nint b[N];\nint n,a[N];\ninline int read(){\n    int r=0,i=getchar();\n    while(i<'0'||i>'9')i=getchar();\n    while(i>='0'&&i<='9')r=(r<<1)+(r<<3)+(i^48),i=getchar();\n    return r;\n}\nint id1=0,id2=0;\nvoid init(){\n    cin>>n;\n    for(int i=1;i<=n;i++){\n        a[i]=read();\n        if(a[i]>a[id1])id1=i;\n    }\n    for(int i=id1+1;i<=n;i++){\n        if(a[i]>=a[id2])id2=i;\n    }\n    for(int i=1;i<id1;i++)if(a[i]>=a[id2])id2=i;\n}\nint ls[N],rs[N],stk[N],top,lc[N],rc[N],t[N];\nvoid dfs(int id){\n    if(!id)return;\n    dfs(ls[id]);dfs(rs[id]);\n    if(b[id]==b[ls[id]])t[id]=t[ls[id]]+1;\n    else t[id]=1;\n    //\u8bb0\u5f55\u5de6\u94fe\u4e0a\u76f8\u540c\u7684\u6570\u7684\u6570\u91cf\u5e76\u5165\u53f3\u94fe\u3002\n    lc[id]=lc[ls[id]]+1;\n    rc[id]=rc[rs[id]]+t[id];\n}\ninline int get(int l,int r){\n    memset(ls,0,sizeof(ls));\n    memset(rs,0,sizeof(rs));\n    memset(lc,0,sizeof(lc));\n    memset(rc,0,sizeof(rc));\n    memset(stk,0,sizeof(stk));\n    memset(b,0,sizeof(b));\n    memset(t,0,sizeof(t));\n    top=0;\n    int k=0,res=0;\n    if(l<=r)\n        for(int i=l;i<=r;i++)\n            b[++k]=a[i];\n    else{\n        for(int i=l;i<=n;i++)\n            b[++k]=a[i];\n        for(int i=1;i<=r;i++)\n            b[++k]=a[i];\n    }\n    for(int i=1;i<=k;i++){\n        int lst=0;\n        while(top&&b[stk[top]]<=b[i])lst=stk[top--];\n        //\u6b64\u5904\u53d6\u4e86\u7b49\u4e8e\uff0c\u6240\u4ee5\u540c\u4e00\u4e2a\u5b50\u6811\u4e2d\u76f8\u540c\u7684\u6570\u8fde\u7eed\u5206\u90e8\u5728\u5de6\u94fe\u4e0a\u3002\n        ls[i]=lst;\n        if(top)rs[stk[top]]=i;\n        stk[++top]=i;\n    }\n    dfs(stk[1]);\n    for(int i=1;i<=k;i++)\n        res+=rc[ls[i]]+lc[rs[i]];\n    return res;\n}\nsigned main(){\n//    freopen(\"read.in\",\"r\",stdin);\n    init();\n    cout<<get(id1,id2)+get(id2,id1)-1;\n    return 0;\n}\n```",
        "postTime": 1645953691,
        "uid": 455558,
        "name": "yuanjiabao",
        "ccfLevel": 0,
        "title": "CF5E Bindian Signalizing \u9898\u89e3"
    },
    {
        "content": "## \u524d\u7f6e\u77e5\u8bc6\n\n- [\u5355\u8c03\u6808](https://www.luogu.com.cn/problem/P5788)\n\n\u672c\u6587\u9ed8\u8ba4\u8bfb\u8005\u5df2\u719f\u7ec3\u638c\u63e1\u6b64\u7b97\u6cd5\u3002\n\n## **\u9898\u76ee\u5206\u6790**\n\n\u53ef\u4ee5\u5148\u8003\u8651\u5c71\u4e0d\u5728\u5706\u4e0a\uff0c\u800c\u662f\u5728\u4e00\u6761\u76f4\u7ebf\u4e0a\u3002\u8fd9\u6837\u663e\u7136\u662f\u4e00\u4e2a\u5355\u8c03\u6808\u677f\u5b50\u3002\n\n\u96be\u70b9\u5728\u4e8e\u9898\u76ee\u7684\u6a21\u578b\u662f\u73af\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u7834\u73af\u4e3a\u94fe\u7684\u6280\u5de7\u3002\n\n\u5982\u4f55\u7834\u73af\uff1f\u6709\u4e00\u4e2a\u663e\u7136\u7684\u6027\u8d28\uff0c**\u4efb\u610f\u4e24\u5ea7\u53ef\u4ee5\u901a\u8baf\u7684\u5c71\u4e4b\u95f4\uff0c\u5fc5\u7136\u4e0d\u7ecf\u8fc7\u6700\u9ad8\u7684\u5c71**\u3002\uff08\u5047\u8bbe\u6700\u9ad8\u7684\u5c71\u53ea\u6709\u4e00\u5ea7\uff09\n\n\u6240\u4ee5\u53ef\u4ee5\u627e\u51fa\u6700\u9ad8\u7684\u5c71\uff0c\u4ee5\u5b83\u4e3a\u94fe\u5934\uff0c\u6309\u987a\u5e8f\u7ec4\u6210\u4e00\u6761\u94fe\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff1a\n\n```\n\u6837\u4f8b\n1 2 4 5 3 (\u73af\uff09\n\n5 3 1 2 4 (\u94fe\uff09\n```\n\n\u73b0\u5728\u76f4\u63a5\u7528\u5355\u8c03\u6808\u7b97\u5c31\u5b8c\u4e8b\u4e86\u5417\uff1f\u4e0d\u3002\n\n```\n3 5 2 4 6\uff08\u73af\uff09\n\n6 3 5 2 4\uff08\u94fe\uff09\n```\n\n\u5728\u8fd9\u7ec4\u6570\u636e\u5f53\u4e2d\uff0c\u76f4\u63a5\u8ba1\u7b97\u7684\u7ed3\u679c\u662f $6$\uff0c\u4f46\u7b54\u6848\u662f $7$\u3002\u539f\u56e0\u662f\u76f4\u63a5\u8ba1\u7b97\u6f0f\u4e86 $4 \\rightarrow 6$ \u8fd9\u4e00\u5bf9\u3002\n\n\u89e3\u51b3\u65b9\u6848\uff1a\u5b9a\u4e49\u6570\u7ec4 $c_i$\uff0c\u6807\u8bb0\u662f\u5426\u5728\u5355\u8c03\u6808\u4e2d\u4e0e\u94fe\u5934\u914d\u5bf9\u8fc7\u3002\u5982\u679c\u6ca1\u6709\uff0c\u5219\u5012\u5e8f\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u4ece\u53e6\u4e00\u65b9\u5411\u7ed5\u8fc7\u53bb\u4e0e\u94fe\u5934\u914d\u5bf9\u3002\n\n```cpp\nint c[N], maxn = 0;\nfor (rei i = n; i > 1; i--)\n{\n\tif (b[i] >= maxn && !c[i]) ans++; //\u4e0e\u94fe\u5934\u914d\u5bf9\u6210\u529f\n\tmaxn = max(maxn, b[i]);\n}\n\n// maxn: \u94fe\u5c3e\u5230i\u70b9\u95f4\uff08\u4e0d\u542bi\u70b9\uff09\u6700\u9ad8\u7684\u5c71\u9ad8\n// b[i] >= maxn: i\u70b9\u4e0e\u94fe\u5934\u95f4\u6ca1\u6709\u963b\u9694\n```\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$\u3002\n\n\u4e0d\u7ecf\u8fc7\u523b\u610f\u5361\u5e38\uff0c\u622a\u81f3\u672c\u9898\u89e3\u63d0\u4ea4\u524d\uff0c\u8be5\u4ee3\u7801\u5728300\u591a\u4efd\u63d0\u4ea4\u4e2d\u6392\u7b2c\u516b\u3002\n\n## **code**\n\n```cpp\n#include <bits/stdc++.h>\n#define rei register int\n#define N 1000010\nusing namespace std;\ntypedef long long ll;\n\nll n, a[N], st[N], top, ans, maxn, b[N], c[N];\nstruct node {int res, sum;} d[N]; // res: \u81ea\u5df1\u5de6\u8fb9\u53ef\u914d\u5bf9\u7684\u5c71\u6570\u91cf   \n\t\t\t\t\t\t\t\t  //sum\uff1a\u5355\u8c03\u6808\u4e2d\u76f8\u540c\u9ad8\u5ea6\u7684\u5c71\u6570\u91cf \n\ntemplate <typename T> inline void read(T &x)\n{\n\tx = 0; ll f = 1; char ch = getchar();\n\twhile (!isdigit(ch)) {if (ch == '-') f = -f; ch = getchar();}\n\twhile (isdigit(ch)) {x = x * 10 + ch - 48; ch = getchar();}\n\tx *= f;\n}\n\nint main()\n{\n\tread(n);\n\tfor (rei i = 1; i <= n; i++) \n\t{\n\t\tread(a[i]);\n\t\tif (a[maxn] < a[i]) maxn = i; // \u627e\u6700\u9ad8\u5c71 \n\t}\n\tfor (rei i = 1; i <= n; i++) b[i] = a[(i + maxn - 2) % n + 1]; // \u7834\u73af\u4e3a\u94fe \n\tfor (rei i = 1; i <= n; i++)\n\t{\n\t\td[i].sum = 1;\n\t\twhile (top && b[i] >= b[st[top]])\n\t\t{\n\t\t\tif (b[i] == b[st[top]]) d[i].sum += d[st[top]].sum;\n\t\t\td[i].res += d[st[top]].sum; top--;\n\t\t} \n\t\tif (top && b[i] < a[maxn]) d[i].res++;\n\t\tif (top == 1 && d[st[top]].sum == 1 || b[i] == a[maxn]) c[i] = 1; // \u4e0d\u9700\u8981\u518d\u6b21\u548c\u94fe\u5934\u914d\u5bf9 \n\t\tst[++top] = i;\n\t\tans += d[i].res;\n\t}\n\tmaxn = 0;\n\tfor (rei i = n; i > 1; i--)\n\t{\n\t\tif (b[i] >= maxn && !c[i]) ans++;\n\t\tmaxn = max(maxn, b[i]);\n\t}\n\tprintf(\"%lld\", ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1628691769,
        "uid": 200930,
        "name": "\u30d9\u72d0\u4ed9\u59d0\u59d0\u3054",
        "ccfLevel": 5,
        "title": "\u3010\u9898\u89e3\u3011CF5E Bindian Signalizing"
    },
    {
        "content": "\u3010\u9898\u76ee\u5206\u6790\u3011\n\n\u5148\u4e0d\u8981\u8003\u8651\u8fd9\u662f\u4e00\u4e2a\u70e6\u4eba\u7684\u73af\uff0c\u5047\u8bbe\u9898\u76ee\u6539\u6210\uff1a\u6240\u6709\u7684\u5c71\u6392\u6210\u4e00\u884c\uff0c\u8be5\u600e\u4e48\u505a\uff1f\n\n\u53ef\u4ee5\u7edf\u8ba1\u6bcf\u5ea7\u5c71\u5411\u53f3\u53ef\u4ee5\u770b\u5230\u51e0\u5ea7\u5c71\u3002\n\n\u7b80\u5355\u5206\u6790\u4e00\u4e0b\uff1a\u5bf9\u4e8e\u7b2c $i$ \u5ea7\u5c71\uff0c\u4ed6\u4e00\u5b9a\u53ef\u4ee5\u770b\u5230 $i+1$\uff0c\u56e0\u4e3a\u4e2d\u95f4\u6839\u672c\u6ca1\u6709\u4efb\u4f55\u906e\u6321\u3002\u518d\u5047\u8bbe $h[i+1]\\leq h[i]$\uff0c\u8fd9\u6837\u53ea\u8981 $h[i+2]\\leq h[i+1]$ , $i$ \u5c31\u53ef\u4ee5\u770b\u89c1 $i+2$\u3002\n\n\u6240\u4ee5 $i$ \u5bf9\u4e8e\u4efb\u610f$j(i<j,h[i]\\geq h[j])$\uff0c\u53ef\u4ee5$i$\u770b\u89c1$j$\u7684\u5145\u8981\u6761\u4ef6\u5c31\u662f\u4efb\u610f $k(i<k<j)$ \u6709 $h[j]\\geq h[k]$\u3002\n\n\u5173\u952e\u7684\u4e00\u6b65\u6765\u4e86\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a$i$\uff0c\u627e\u5230\u6700\u5c0f\u7684 $j$ \u6ee1\u8db3 $h[j]\\geq h[i]$ \u8bb0\u4f5c $nhe[i]$ \u627e\u5230\u6700\u5c0f\u7684$j$\u6ee1\u8db3 $h[j]<h[i]$ \u8bb0\u4f5c $nh[i]$ \u3002\n\n\u8fd9\u4e00\u6b65\u53ef\u4ee5\u7528\u5355\u8c03\u6808\u5b8c\u6210\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $i$\uff0c\u6211\u4eec\u4ece $i$ \u5411 $nhe[i]$ \u8fde\u4e00\u6761\u8fb9\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff1a\u6240\u6709\u7684\u8fb9\u4f1a\u5f62\u6210\u4e00\u4e2a\u68ee\u6797\u3002\u56e0\u4e3a\u6bcf\u4e00\u6761\u8fb9\u4e00\u5b9a\u5411\u53f3\uff0c\u56e0\u6b64\u4e0d\u4f1a\u6709\u73af\uff0c\u800c\u6bcf\u4e00\u4e2a\u70b9\u53ea\u6709\u4e00\u4e2a\u51fa\u5ea6\uff0c\u8fd9\u4e2a\u51fa\u5ea6\u6307\u5411\u7684\u70b9\u53ef\u4ee5\u5f53\u4f5c\u5b83\u7684\u7236\u4eb2\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\u5904\u7406\uff0c\u5728\u6700\u540e\uff08\u7b2c $n+1$ \u4e2a\u4f4d\u7f6e\uff09\u52a0\u4e00\u5ea7\u73e0\u7a46\u6717\u739b\u5cf0\uff08\u770b\u4f5c\u65e0\u9650\u9ad8\uff09\u3002\u8fd9\u6837\u68ee\u6797\u4e00\u5b9a\u4f1a\u5408\u5e76\u6210\u4e00\u68f5\u6811\u3002\n\n\u4ece\u4e00\u4e2a\u70b9 $i+1(i< n)$ \u5f00\u59cb\u6cbf\u7740\u8fb9\u8d70\uff0c\u4e00\u5b9a\u53ef\u4ee5\u8d70\u5230 $nh[i]$\u3002\n\n\u5728\u8fd9\u4e00\u8d70\u7684\u8fc7\u7a0b\u4e2d\uff0c\u7ecf\u8fc7\u7684\u5c71\u5c31\u662f$i$\u5411\u53f3\u53ef\u4ee5\u770b\u5230\u7684\u6240\u6709\u5c71\u3002\u7531\u4e8e\u8fd9\u662f\u4e00\u68f5\u6811\uff0c\u7ecf\u8fc7\u7684\u70b9\u6570\u53ef\u4ee5\u7528 $nh[i]$ \u548c $i+1$ \u7684\u6df1\u5ea6\u5dee\u7b97\u51fa\u6765\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u8fd9\u4e2a\u70e6\u4eba\u7684\u73af\u3002\u5e38\u89c1\u7684\u65b9\u6cd5\u5c31\u662f\u628a\u539f\u6570\u7ec4\u590d\u5236\u4e00\u4efd\u653e\u5728\u540e\u9762\u3002\u5728\u8fd9\u4e2a\u6570\u7ec4\u4e0a\u7528\u521a\u624d\u7684\u65b9\u6cd5\u5efa\u7acb\u4e00\u68f5\u6811\u3002\n\n\u8fd9\u6837\u770b\u8d77\u6765\u597d\u50cf\u95ee\u9898\u5c31\u89e3\u51b3\u4e86\uff0c\u53ea\u8981\u6309\u7167\u521a\u624d\u7684\u65b9\u6cd5\u7edf\u8ba1\u5c31\u597d\u4e86\u3002\n\n\u5b9e\u9645\u4e0a\u8fd8\u6709\u4ebf\u70b9\u7ec6\u8282\u7b49\u7740\u5904\u7406\u3002\n\n\u6bd4\u5982\u539f\u6570\u7ec4\u662f\n${1,2,3,4,1}$\uff0c\n\n\u90a3\u4e48\u590d\u5236\uff0c\u7136\u540e\u52a0\u4e00\u4e2a\u65e0\u7a77\u9ad8\u7684\u5c71\u4ee5\u540e\u5c31\u662f ${1,2,3,4,1,1,2,3,4,1,+\\infty }$\n\n\u8fd9\u6837\u4f1a\u51fa\u73b0 $nhe[4]=11$\uff0c\u4f46\u4ece5\u5f00\u59cb\u8d70\uff0c\u8d70\u52309\u5c31\u8be5\u505c\u4e86\uff0c\u8d70\u523011\u5c31\u5df2\u7ecf\u8d70\u8fc7\u4e86\u3002\u8fd9\u91cc\u5c31\u8981\u7279\u6b8a\u5904\u7406\u4e00\u4e0b\u3002\n\n\u8fd8\u6709\u7531\u4e8e\u8fd9\u662f\u4e00\u4e2a\u73af\uff0c\u90a3\u4e48\u6709\u7684\u4e8c\u5143\u7ec4\u4f1a\u88ab\u7edf\u8ba1\u4e24\u6b21\uff0c\u56e0\u4e3a\u5b83\u4eec\u5728\u4e24\u4e2a\u65b9\u5411\u90fd\u53ef\u4ee5\u4e92\u76f8\u770b\u5230\u3002\u597d\u5728\u8fd9\u4e9b\u4e8c\u5143\u7ec4\u5f88\u5c11\uff0c\u53ea\u6709\u6700\u9ad8\u7684\u90a3\u4e9b\u5c71\u624d\u53ef\u4ee5\u4e92\u76f8\u5728\u4e24\u4e2a\u65b9\u5411\u770b\u89c1\u3002\n\n\u5177\u4f53\u6765\u8bb2\uff0c\u5c31\u662f\u5982\u679c\u6700\u9ad8\u7684\u90a3\u4e00\u6279\u5c71\u4e4b\u95f4\u4e00\u5b9a\u53ef\u4ee5\u5728\u4e24\u4e2a\u65b9\u5411\u4e92\u76f8\u770b\u5230\u3002\u5982\u679c\u6700\u9ad8\u7684\u5c71\u53ea\u6709\u4e00\u5ea7\uff0c\u90a3\u4e48\u5b83\u548c\u6240\u6709\u7684\u6b21\u9ad8\u5c71\u4e5f\u4f1a\u88ab\u7edf\u8ba1\u4e24\u6b21\u3002\u5176\u4ed6\u60c5\u51b5\u90fd\u53ea\u4f1a\u7edf\u8ba1\u4e00\u6b21\u3002\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u7edf\u8ba1\u6700\u9ad8\u7684\u5c71\u7684\u6570\u91cf\u548c\u6b21\u9ad8\u5c71\u7684\u6570\u91cf\u5c31\u53ef\u4ee5\u8f7b\u8f7b\u677e\u677e\u5730\u53bb\u6389\u8fd9\u4e9b\u91cd\u590d\u7edf\u8ba1\u7684\u90e8\u5206\u3002\n\n\u3010\u4ee3\u7801\u3011\n\n```cpp\n\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <algorithm>\n\ntypedef long long ll;\nconst int N=2e6+6,INF=0x7fffFFFF;\n\nint n;\nint h[N],nhe[N],nh[N];\nint stk[N],top=0;\n\nint read()\n{\n\tint res=0; char ch=getchar();\n\twhile (ch<'0'||'9'<ch) ch=getchar();\n\twhile ('0'<=ch&&ch<='9') res*=10,res+=ch-'0',ch=getchar();\n\treturn res;\n}\nstruct Edge\n{\n\tint t,nxt;\n\tEdge(int t,int nxt) : t(t),nxt(nxt) {}\n\tEdge() {nxt=-1;}\n};\nstruct Graph\n{\n\tint cnt,hd[N],dep[N];\n\tEdge ed[N];\n\tGraph()\n\t{\n\t\tmemset(hd,-1,sizeof(hd));\n\t}\n\tvoid addEdge(int x,int y) {ed[++cnt]=Edge(y,hd[x]); hd[x]=cnt;}\n\tvoid dfs(int x)//needs preing\n\t{\n\t\tfor (int i=hd[x];i!=-1;i=ed[i].nxt)\n\t\t{\n\t\t\tint y=ed[i].t;\n\t\t\tdep[y]=dep[x]+1;\n\t\t\tdfs(y);\n\t\t}\n\t}\n};\nGraph gra;\nint main()\n{\n\t//freopen(\"data.in\",\"r\",stdin);\n\tn=read();\n\tfor (int i=1;i<=n;i++) h[i]=h[i+n]=read();\n\tint n2=n<<1; h[n2+1]=INF;\n\tfor (int i=1;i<=n2+1;i++)\n\t{\n\t\twhile (top && h[stk[top]]<=h[i])\n\t\t\tnhe[stk[top--]]=i;\n\t\tstk[++top]=i;\n\t}\n\ttop=0;\n\tfor (int i=1;i<=n2+1;i++)\n\t{ \t\n\t\twhile (top && h[stk[top]]<h[i]) nh[stk[top--]]=i;\n\t\tstk[++top]=i;\n\t}\n\tfor (int i=1;i<=n2;i++) gra.addEdge(nhe[i],i);\n\tgra.dep[n2+1]=1;//pre\n\tgra.dfs(n2+1);\n\tll ans=0;\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tint tl=nh[i];\n\t\tif (tl==n2+1) tl=i+n,ans--;\n\t\tans+=gra.dep[i+1]-gra.dep[tl]+1;\n\t}\n\tll mxh=0,mxn=0,mxh2=0,mxn2=0;\n\tfor (int i=1;i<=n;i++) if (mxh<h[i]) mxh=h[i];\n\tfor (int i=1;i<=n;i++) if (mxh2<h[i] && h[i]!=mxh) mxh2=h[i];\n\tfor (int i=1;i<=n;i++) if (h[i]==mxh) mxn++; else if (h[i]==mxh2) mxn2++;\n\tans-=(mxn*(mxn-1))/2;\n\tif (mxn==1) ans-=mxn*mxn2;\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1617264002,
        "uid": 40004,
        "name": "\u9ece\u660e\u884c\u8005",
        "ccfLevel": 0,
        "title": "CF5E\u9898\u89e3"
    },
    {
        "content": "## CF5E \u9898\u89e3\n\n##### $\\text{Description}$\n\n\u73af\u4e0a\u6709 $n$ \u4e2a\u70b9\uff0c\u6bcf\u4e2a\u70b9\u6709\u9ad8\u5ea6\uff0c\u5b9a\u4e49\u4e24\u4e2a\u70b9\u80fd\u4e92\u76f8\u770b\u5230\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728\u4e00\u6bb5\u7aef\u70b9\u4e3a\u8be5\u4e24\u70b9\u7684**\u5706\u5f27**\u5185\u4efb\u610f\u70b9\u9ad8\u5ea6\u90fd\u4e0d\u8d85\u8fc7\u8be5\u4e24\u70b9\u3002\u6c42\u80fd\u76f8\u4e92\u770b\u89c1\u7684\u70b9\u5bf9\u6570\u3002\n\n$1\\le n\\le 10^6$\n\n##### $\\text{Solution}$\n\n\u9996\u5148\u5bf9\u9ad8\u5ea6\u79bb\u6563\u5316\u3002\n\n\u7531\u4e8e\u73af\u53ef\u4ee5\u4efb\u610f\u5faa\u73af\u79fb\u4f4d\uff0c\u6211\u4eec\u4efb\u53d6\u67d0\u4e00\u4e2a\u6700\u5927\u503c\u4f5c\u4e3a\u8fd9\u4e2a\u73af\u7684\u9996\u7aef\uff0c\u8fd9\u6837\u9664\u4e86\u6700\u5927\u503c\uff0c\u5176\u5b83\u4efb\u610f\u5143\u7d20\u7ed5\u4e00\u5708\u56de\u6765\u90fd\u53ea\u80fd\u649e\u5230\u6700\u5927\u503c\uff0c\u65e0\u6cd5\u7ee7\u7eed\u524d\u8fdb\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u5c06\u80fd\u76f8\u4e92\u770b\u89c1\u7684\u70b9\u5206\u4e24\u7c7b\u3002\u7b2c\u4e00\u7c7b\u662f\u4e24\u70b9\u9ad8\u5ea6\u76f8\u540c\uff0c\u5bf9\u6b64\u6211\u4eec\u53ef\u4ee5\u6309\u9ad8\u5ea6\u4ece\u5927\u5230\u5c0f\u8fdb\u884c\u8ba1\u7b97\uff0c\u8ba9\u9ad8\u4e8e\u5b83\u7684\u8282\u70b9\u5c06\u73af\u5206\u6210\u82e5\u5e72\u6bb5\uff0c\u5bf9\u4e8e\u6bcf\u6bb5\u5206\u522b\u8ba1\u7b97\u7b54\u6848\uff1b\u7b2c\u4e8c\u7c7b\u662f\u4e24\u70b9\u9ad8\u5ea6\u4e0d\u540c\uff0c\u6211\u4eec\u8003\u8651\u5728\u9ad8\u5ea6\u8f83\u4f4e\u7684\u70b9\u8ba1\u7b97\uff0c\u8fd9\u6837\u53ea\u9700\u8003\u8651\u5de6\u53f3\u7b2c\u4e00\u4e2a\u9ad8\u5ea6\u5927\u4e8e\u5b83\u7684\u70b9\uff0c\u540c\u6837\u4ece\u5927\u5230\u5c0f\u8ba1\u7b97\uff0c\u4e8c\u5206\u51fa\u5de6\u53f3\u7684\u503c\uff0c\u6ce8\u610f\u5728\u73af\u4e0a\u53ef\u80fd\u8fd9\u4e24\u4e2a\u70b9\u90fd\u662f\u73af\u7684\u7b2c\u4e00\u4e2a\u70b9\uff0c\u9700\u8981\u51cf\u53bb\u91cd\u590d\u7684\u503c\u3002\n\n\u4e0a\u8ff0\u8fc7\u7a0b\u53ef\u4ee5\u901a\u8fc7 `std::set` \u7ef4\u62a4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n\\log n)$\u3002\n\n##### $\\text{Code}$\n\n```cpp\n#include<bits/stdc++.h>\n#define REG register\nusing namespace std;\ntypedef long long ll;\nconst int N=1e6+10;\ninline void read(int& x){\n    static char c;\n    while(!isdigit(c=getchar()));x=c^48;\n    while(isdigit(c=getchar()))x=(x*10)+(c^48);\n}\n\nint n,M,C;\nint T[N],srt[N],H[N];\nvector<int> Pos[N];\nset<int> Occ;\nset<int>::iterator it;\n\nll Ans;\n\ninline void Work(){\n    read(n);\n    for(REG int i=1;i<=n;++i) read(T[i]),srt[i]=T[i];\n    sort(srt+1,srt+n+1),C=unique(srt+1,srt+n+1)-srt-1;\n    for(REG int i=1;i<=n;++i){\n        T[i]=lower_bound(srt+1,srt+C+1,T[i])-srt;\n        if(T[i]>T[M]) M=i;\n    }\n    for(REG int i=1;i<=n;++i) H[i]=T[(M+i-2)%n+1],Pos[H[i]].push_back(i);\n    Occ.insert(n+1);\n    for(REG int i=C;i;--i){\n        int cnt=0,lst=0;\n        for(int P:Pos[i]){\n            it=Occ.lower_bound(P);\n            if((*it)^lst) Ans+=1ll*cnt*(cnt-1)/2,cnt=1,lst=*it;\n            else ++cnt;\n            if(i==C) continue;\n            if(*it<=n) Ans+=2;\n            else\n                if(*(--it)==1) ++Ans;\n                else Ans+=2;\n        }\n        Ans+=1ll*cnt*(cnt-1)/2;\n        for(int P:Pos[i]) Occ.insert(P);\n    }\n    printf(\"%lld\\n\",Ans);\n}\n\nint main(){Work();}\n```\n\n",
        "postTime": 1608352722,
        "uid": 83547,
        "name": "LCuter",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF5E \u3010Bindian Signalizing\u3011"
    },
    {
        "content": "## CF5E\n\n### \u8fdb\u5165\u6b63\u9898\n\n### \u9898\u610f\n\n\u5927\u81f4\u610f\u601d\u662f\u7ed9\u4e00\u4e2a\u73af\uff0c\u73af\u4e0a\u6709n\u4e2a\u70b9\uff0c\u5982\u679c\u6bcf\u4e24\u4e2a\u70b9\u4e4b\u95f4\u6ca1\u6709\u6bd4\u8fd9\u4e24\u4e2a\u70b9\u5927\u7684\u70b9\uff0c\u5219\u8fd9\u4e24\u4e2a\u70b9\u80fd\u8fde\u4e00\u6761\u7ebf\uff0c\u95ee\u6700\u591a\u80fd\u8fde\u51e0\u6761\u7ebf\u3002\n\n### \u5206\u6790\n\n\u5047\u8bbe\u5bf9\u4e8ei\uff0c\u6211\u4eec\u5df2\u7ecf\u8ba1\u7b97\u51fa\u4e86left[i], right[i], same[i]\uff0c\u5176\u4e2dleft[i]\u8868\u793ai\u5de6\u4fa7\u6bd4\u7b2c\u4e00\u4e2a\u6bd4i\u9ad8\u7684\u4f4d\u7f6e\uff0cright[i]\u8868\u793ai\u53f3\u4fa7\u7b2c\u4e00\u4e2a\u6bd4i\u9ad8\u7684\u4f4d\u7f6e\uff0csame[i]\u8868\u793a\u4ecei\u5230right[i]\u7684\u5de6\u5f00\u53f3\u95ed\u533a\u95f4\u5185\u9ad8\u5ea6\u7b49\u4e8ei\u7684\u5c71\u7684\u6570\u76ee\u3002\u7b80\u800c\u8a00\u4e4b\uff0cleft\u548cright\u662f\u4f4d\u7f6e\uff0c\u800csame\u662f\u6570\u76ee\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u4e00\u5ea7\u5c71i\u800c\u8a00\uff0c\u5b83\u53ef\u4ee5\u548cleft[i] \u548c right[i]\u90fd\u6784\u6210\u80fd\u4e92\u76f8\u770b\u89c1\u7684pair\uff0c\u5e76\u4e14\u548ci\u5230right[i]\u4e4b\u95f4\u6240\u6709\u9ad8\u5ea6\u7b49\u4e8ei\u7684\u5c71\u6784\u6210\u80fd\u4e92\u76f8\u770b\u89c1\u7684pair\u3002\n\n\u6240\u4ee5\u95ee\u9898\u5c31\u662f\u8ba1\u7b97left\u6570\u7ec4\u3001right\u6570\u7ec4\u548csame\u6570\u7ec4\u3002\n\n### AC\u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\nconst int maxn=1000010;\nint a[maxn],b[maxn],lef[maxn],rig[maxn],c[maxn],n,mid,ma=-1;\nll ans;\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(a[i]>ma)\n        {\n            ma=a[i];\n            mid=i;\n        }\n    }\n    mid--;\n    for(int j=1;j<=n;j++)\n        b[j]=a[(mid+j)%n];   \n    lef[1]=1;\n    for(int i=2;i<=n;i++)\n    {\n        lef[i]=i-1;\n        while(lef[i]>1&&b[lef[i]]<=b[i])\n            lef[i]=lef[lef[i]];\n    }\n    for(int i=n;i>=1;i--)\n    {\n        rig[i]=i+1;\n        while(rig[i]<=n&&b[rig[i]]<b[i])\n            rig[i]=rig[rig[i]];\n        if(rig[i]<=n&&b[rig[i]]==b[i])\n        {\n            c[i]=c[rig[i]]+1;\n            rig[i]=rig[rig[i]];\n        }\n    }\n    for(int i=2;i<=n;i++)\n    {\n        ans+=c[i]+2;\n        if(lef[i]==1&&rig[i]==n+1)\n            ans--;\n    }\n    printf(\"%lld\\n\",ans);\n  return 0;\n}\n```\n",
        "postTime": 1555664472,
        "uid": 121784,
        "name": "zyc____",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF5E \u3010Bindian Signalizing\u3011"
    },
    {
        "content": "### $\\text{Difficulty : 2400}$\n---\n### \u89e3\u9898\u601d\u8def\uff1a\n\n\u5c31\u662f\u4e00\u4e2a\u5355\u8c03\u6808\u7684\u9898\u76ee\u653e\u5728\u4e86\u73af\u4e0a\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u7edd\u5927\u591a\u6570\u7684\u5c71\u5cf0\u800c\u8a00\uff0c\u5176\u5b9e\u4f9d\u7136\u53ea\u6709\u4e00\u6761\u89c2\u5bdf\u7684\u8def\u5f84\u8def\u5f84\u53ef\u4ee5\u9009\u62e9\uff0c\u4e5f\u5c31\u662f\u6ca1\u6709\u6700\u9ad8\u5cf0\u7684\u90a3\u4e00\u6761\u8def\u5f84\u3002\u90a3\u4e48\u4ece\u8fd9\u4e2a\u89d2\u5ea6\u51fa\u53d1\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u73af\u4ece\u4e00\u4e2a\u6700\u9ad8\u5cf0\u7684\u4f4d\u7f6e\u65ad\u5f00\u6210\u4e00\u6761\u94fe\u3002\n\n\u7136\u540e\u8003\u8651\u5177\u4f53\u7684\u5355\u8c03\u6808\u505a\u6cd5\u3002\u5bf9\u4e8e\u4e00\u4e2a\u5c71\u5cf0\uff0c\u5982\u679c\u5728\u5176\u540e\u9762\u6709\u4e00\u4e2a\u6bd4\u5b83\u8fd8\u8981\u9ad8\u7684\u5c71\u5cf0\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5c71\u5cf0\u65e0\u8bba\u5982\u4f55\u90fd\u4e0d\u53ef\u80fd\u518d\u4ea7\u751f\u66f4\u591a\u7684\u65b9\u6848\uff0c\u53ef\u4ee5\u76f4\u63a5\u5220\u9664\u3002\u90a3\u4e48\u4e5f\u5c31\u662f\u7ef4\u62a4\u4e86\u4e00\u4e2a\u9ad8\u5ea6\u5355\u8c03\u4e0d\u589e\u7684\u5355\u8c03\u6808\u3002\u9664\u4e86\u76f8\u90bb\u7684\u770b\u5230\u4e4b\u5916\uff0c\u6bcf\u4e00\u6b21\u5f39\u51fa\u7684\u65f6\u5019\u4e5f\u5c31\u76f8\u5f53\u4e8e\u201c\u770b\u5230\u4e86\u201d\uff0c\u5728\u65b9\u6848\u6570\u4e0a\u7d2f\u52a0\u5373\u53ef\u3002\u5904\u7406\u65f6\u8fd8\u8981\u6ce8\u610f\u76f8\u540c\u9ad8\u5ea6\u662f\u53ef\u4ee5\u76f8\u4e92\u770b\u5230\u7684\u3002\uff08\u5176\u5b9e\u5c31\u662f\u6b63\u5e38\u7684\u5355\u8c03\u6808\uff0c\u6ca1\u5565\u533a\u522b\u3002\uff09\n\n\u6700\u540e\u5bf9\u4e8e\u4f5c\u4e3a\u65ad\u5f00\u70b9\u7684\u6700\u9ad8\u5cf0\u9700\u8981\u989d\u5916\u8ba1\u7b97\u4e00\u6b21\u4ee3\u4ef7\uff0c\u56e0\u4e3a\u8fd9\u8fd9\u4f4d\u7f6e\u662f\u53ef\u4ee5\u4ece\u53e6\u4e00\u4fa7\u770b\u5230\u7684\uff0c\u800c\u5728\u4e4b\u524d\u7684\u5904\u7406\u4e2d\u53ea\u8ba1\u7b97\u4e86\u4e00\u6b21\u3002\n\n\u65b9\u6848\u6570\u8f83\u591a\uff0c\u5f00 $\\text{long long}$\u3002\n\n---\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n#define int long long\nconst int MAXN=1000005;\nint n,a[MAXN],top,st[MAXN],maxn,maxi,cnt[MAXN],b[MAXN],ans,v[MAXN];\nsigned main(){\n\tscanf(\"%I64d\",&n);\n\tfor(int i=1;i<=n;i++)scanf(\"%I64d\",&a[i]);\n\tfor(int i=1;i<=n;i++)if(a[i]>maxn)maxn=a[i],maxi=i;\n\tfor(int i=maxi+1;i<=n;i++)b[i-maxi]=a[i];\n\tfor(int i=1;i<maxi;i++)b[n-maxi+i]=a[i];\n\tfor(int i=1;i<n;i++){\n\t\twhile(st[top]<b[i]&&top>0)ans+=cnt[top],top--;\n\t\t\n\t\tif(st[top]==b[i])cnt[top]++,ans+=cnt[top]-1+(cnt[top-1]>=1);\n\t\telse ans+=(cnt[top]>=1),cnt[++top]=1,st[top]=b[i];\n\t}\n\tmaxn=0;\n\tfor(int i=1;i<n;i++){\n\t\tif(b[i]>=maxn)v[i]=1;\n\t\tmaxn=max(maxn,b[i]);\n\t}\n\tmaxn=0;\n\tfor(int i=n-1;i>=1;i--){\n\t\tif(b[i]>=maxn)v[i]=1;\n\t\tmaxn=max(maxn,b[i]);\n\t}\n\tfor(int i=1;i<=n;i++)\n\tans+=v[i];\n\tprintf(\"%I64d\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1648005863,
        "uid": 223559,
        "name": "qxp101",
        "ccfLevel": 6,
        "title": "CF5E Bindian Signalizing  \u9898\u89e3"
    },
    {
        "content": "[Link](https://www.luogu.com.cn/problem/CF5E)\n\n[51nod 1482](https://www.51nod.com/Challenge/Problem.html#problemId=1482)\n\n[My Blog](https://tony102.com/archives/128/)\n\n\n## Sol\n\n\u9996\u5148\u65ad\u73af\u6210\u94fe\u3002\n\n\u6211\u6709\u4e00\u4e2a\u5f88 naive \u7684\u505a\u6cd5\uff0c\u901a\u8fc7\u53cc\u6307\u9488\uff0c\u5efa\u7acb\u7ebf\u6bb5\u6811\uff0c\u6bcf\u6b21\u632a\u52a8\u5de6\u53f3\u6307\u9488\u65f6\u8be2\u95ee\u5f53\u524d\u533a\u95f4\u7684\u6700\u5927\u503c\u662f\u5426 $\\leq$ \u5de6\u53f3\u6307\u9488\u7684\u9ad8\u5ea6\uff0c\u7edf\u8ba1\u7b54\u6848\u3002\n\n\u8fd9\u6837\u8fc7\u4e0d\u53bb $n \\leq 3 \\times 10^6$ \u7684\u6570\u636e\u3002\u4f46\u662f\u53d1\u73b0\uff0c\u7528\u7ebf\u6bb5\u6811\u67e5\u8fd9\u4e2a\u6700\u5c0f\u503c\u8fd9\u4e2a\u64cd\u4f5c\u975e\u5e38\u611a\u8822\u3002\n\n\u6700\u9ad8\u7684\u5c71\u65e0\u8bba\u5982\u4f55\u90fd\u4f1a\u6321\u4f4f\u522b\u7684\u5c71\u3002\u6211\u4eec\u4ee5\u6700\u9ad8\u7684\u5c71\u4f5c\u4e3a\u7b2c\u4e00\u5ea7\u5c71\uff0c\u5176\u4f59\u7684\u5c71\u6309\u7167\u539f\u987a\u5e8f\u6392\u5217\u3002\u56e0\u4e3a\u6700\u9ad8\u7684\u5c71\u4e0d\u4f1a\u6709\u9664\u4e86\u76f8\u90bb\u7684\u4e0d\u4f1a\u6709\u4efb\u4f55\u4e2d\u95f4\u8fd8\u6709\u8de8\u5ea6\u7684\u4e24\u5ea7\u5c71\u5bf9\u7b54\u6848\u6709\u8d21\u732e\u3002\n\n\u6211\u4eec\u8bbe $l_i$ \u8868\u793a\u5f80\u5de6\u7b2c\u4e00\u4e2a\u6bd4 $i$ \u9ad8\u7684\u4f4d\u7f6e\uff0c$r_i$ \u5373\u5f80\u53f3\u540c\u7406\u7684\u4f4d\u7f6e\u3002\u90a3\u4e48\u5c31\u6709 $(i,l_i)$ \u548c $(i, r_i)$ \u4e24\u7ec4\u3002\u6ce8\u610f\u5728 $(l_i, r_i]$ \u8fd9\u4e2a\u533a\u95f4\u4e2d\u4e0e $i$ \u9ad8\u5ea6\u76f8\u7b49\u7684\u5c71\u4e5f\u8981\u7ed9\u7b54\u6848\u8d21\u732e\u3002\n\n\u6c42 $l_i$ \u548c $r_i$ \u53ef\u4ee5\u7528\u4e00\u4e2a\u5355\u8c03\u6808\u6765\u5b9e\u73b0\uff0c\u6700\u540e\u56e0\u4e3a\u987a\u65f6\u9488\u548c\u9006\u65f6\u9488\u90fd\u53ef\u4ee5\u7edf\u8ba1\u7b54\u6848\uff0c\u65ad\u73af\u6210\u94fe\u4e4b\u540e\u76f8\u5f53\u4e8e\u6b63\u7740\u505a\u4e00\u904d\u53cd\u7740\u505a\u4e00\u904d\u5c31\u884c\u4e86\u3002\n\n\n\n## Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long LL;\nconst int SIZE = 3e6 + 5;\n\nint n, m;\nint a[SIZE], b[SIZE], sta[SIZE], l[SIZE], r[SIZE], tag[SIZE];\n\nnamespace GTR {\n\tconst int bufl = 1 << 15;\n\tchar buf[bufl], *s = buf, *t = buf;\n\tinline int fetch() {\n\t\tif (s == t) { t = (s = buf) + fread(buf, 1, bufl, stdin); if (s == t) return EOF; }\n\t\treturn *s++;\n\t}\n\tinline int read() {\n\t\tint a = 0, b = 1, c = fetch();\n\t\twhile (c < 48 || c > 57) b ^= c == '-', c = fetch();\n\t\twhile (c >= 48 && c <= 57) a = (a << 1) + (a << 3) + c - 48, c = fetch();\n\t\treturn b ? a : -a;\n\t}\n} using GTR::read;\n\nint main() {\n    n = read(); int mx = 0;\n    for (int i = 1; i <= n; ++ i) {\n        a[i] = read();\n        if (a[mx] < a[i]) mx = i;\n    }\n    for (int i = mx; i <= n; ++ i) b[++ m] = a[i];\n    for (int i = 1; i < mx; ++ i) b[++ m] = a[i];\n    int top = 0;\n    for (int i = 2; i <= n; ++ i) {\n        while (top && b[i] >= b[sta[top]]) -- top;\n        l[i] = sta[top], sta[++ top] = i;\n    }\n    sta[top = 0] = n + 1;\n    for (int i = n; i >= 2; -- i) {\n        while (top && b[i] >= b[sta[top]]) {\n            if (b[i] == b[sta[top]]) tag[i] = tag[sta[top]] + 1;\n            -- top;\n        }\n        r[i] = sta[top], sta[++ top] = i;\n    }\n    LL ans = 0; mx = 0;\n    for (int i = 2; i <= n; ++ i) {\n        if (l[i] > 0) ++ ans;\n        if (r[i] <= n) ++ ans;\n        ans += tag[i];\n    }\n    memset(tag, 0, sizeof(tag));\n    for (int i = 2; i <= n; ++ i) {\n        if (b[i] >= mx) tag[i] = 1;\n        mx = std::max(mx, b[i]);\n    }\n    mx = 0;\n    for (int i = n; i >= 2; -- i) {\n        if (b[i] >= mx) tag[i] = 1;\n        mx = std::max(mx, b[i]);\n    }\n    for (int i = 2; i <= n; ++ i) ans += tag[i];\n    printf(\"%lld\\n\", ans);\n    return 0;\n}\n```\n\n",
        "postTime": 1632473186,
        "uid": 230933,
        "name": "Tony102",
        "ccfLevel": 7,
        "title": "CF5E Bindian Signalizing"
    },
    {
        "content": "### \u524d\u7f6e\u77e5\u8bc6\n\n- \u7ebf\u6027DP\n\n- \u5355\u8c03\u6808\n\n### \u601d\u8def\n\n\u5728\u73af\u4e0a\u505a\u80af\u5b9a\u4e0d\u597d\u505a\uff0c\u6240\u4ee5\u8003\u8651\u5982\u4f55\u8f6c\u6362\u6210\u4e00\u4e2a\u5408\u6cd5\u7684\u94fe\u578b\u7ed3\u6784\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u7531**\u4e00\u4e2a**\u6700\u9ad8\u70b9\u5206\u5f00\u7684\u4e24\u90e8\u5206\u662f\u4e92\u4e0d\u5f71\u54cd\u7684\uff0c\u5047\u8bbe\u4e00\u4e2a\u6700\u9ad8\u7684\u7684\u4f4d\u7f6e\u662f $\\text{pos}$ \uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u7ec4\u6210\u4e00\u4e2a $\\text{pos}+1\\to n\\to \\text{pos-1}$ \u7684\u4e00\u4e2a\u94fe\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u505a\u5230\u4e0d\u91cd\u4e0d\u6f0f\u7684\u8ba1\u6570\u4e86\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u5355\u8c03\u6808\u3002\n\n\u7b80\u5355\u8bb2\u4e00\u8bb2\u5982\u4f55\u7528\u5355\u8c03\u6808\u5b9e\u73b0\u5b83\uff1a\n\n\u7528\u7684\u662f\u6808\u9876\u5230\u6808\u5e95\u9012\u589e\u7684\u5355\u8c03\u6808\u3002\n\n\u52a0\u5165\u4e00\u4e2a\u5143\u7d20\u7684\u65f6\u5019\uff0c\u6808\u9876\u4e0d\u591f\u9ad8\u5c31\u76f4\u63a5\u5f39\u51fa\uff0c\u987a\u4fbf\u52a0\u4e0a\u5b83\u7684\u503c\uff0c\u77e5\u9053\u6bd4\u5f53\u524d\u8fd9\u4e2a\u9ad8\u6216\u8005\u76f8\u540c\u4e3a\u6b62\uff0c\u56e0\u4e3a\u90a3\u4e9b\u6bd4\u5f53\u524d\u77ee\u7684\uff0c\u5bf9\u540e\u9762\u7684\u4e0d\u4f1a\u6709\u8d21\u732e\u4e86\uff0c\u6240\u4ee5\u5c31\u76f4\u63a5\u52a0\u4e0a\u6254\u6389\u5373\u53ef\u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u4e00\u6b65\u6b65\u5f97\u51fa\u4e0d\u91cd\u4e0d\u6f0f\u7684\u7ed3\u679c\u4e86\u3002\n\n### \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\n/*\n\n\t\u65ad\u73af\u6210\u94fe\uff0c\u5e72\u5e72\u5e72 \n\n*/\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#include<stack>\n#include<vector>\n#include<algorithm>\n#include<cmath>\n#define int long long\nusing namespace std;\nconst int N=1e6+9;\nconst int M=1e6+9;\nint a[N],h[N],m;\nint n;\nint stk[N],top;\nint cnt[N];//\u8bb0\u5f55\nint maxn,pos;\nint ans; \nint read()\n{\n\tint f=1,x=0;\n\tchar s=getchar();\n\twhile(s<'0'||s>'9'){if(s=='-')f=-1;s=getchar();}\n\twhile(s>='0'&&s<='9'){x=(x<<1)+(x<<3)+(s^'0');s=getchar(); }\n\treturn f*x;\n}\nvoid Prepare()\n{\n\tfor(int i=pos+1;i<=n;i++)\n\t\th[++m]=a[i];\n\tfor(int i=1;i<=pos-1;i++)\n\t\th[++m]=a[i];\n}\nvoid DP()\n{\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\twhile(stk[top]<h[i] and top!=0)\n\t\t{\n\t\t\tans+=cnt[top];\n\t\t\ttop--;\n\t\t}\n\t\tif(stk[top]!=h[i])\n\t\t{\n\t\t\tstk[++top]=h[i];\n\t\t\tcnt[top]=0;\n\t\t}\n\t\tans+=cnt[top];//\u8bb0\u5f55\u8fd9\u4e2a\u603b\u5171\u6709\u591a\u5c11\u4e2a\uff0c\u91cd\u590d\u7684\u4e0d\u7528\u52a0\u5165 \n\t\tcnt[top]++;//\u5224\u65ad\u76f8\u540c\u7684\u4e2a\u6570 \n\t}\n}\nsigned main()\n{\n\tn=read();\n\tans=n-1;//\u76f8\u90bb\u7684 \n\tfor(int i=1;i<=n;i++)\t\n\t{\n\t\ta[i]=read();\n\t\tif(a[i]>maxn)\n\t\t{\n\t\t\tpos=i;\n\t\t\tmaxn=a[i];\n\t\t}\n\t}\n\tPrepare();\n\tDP();\n\twhile(top>1)//\u6700\u9ad8\u7684\u4e0d\u9700\u8981\u52a0 \n\t{\n\t\tans+=cnt[top];\n\t\ttop--;\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n} \n\n```",
        "postTime": 1627005490,
        "uid": 230804,
        "name": "Durancer",
        "ccfLevel": 4,
        "title": "\u3010\u9898\u89e3\u3011CF5E Bindian Signalizing"
    },
    {
        "content": "### \u9898\u610f\n$n$\u5ea7\u5c71\u7ec4\u6210\u4e00\u4e2a\u73af\uff0c\u76f8\u8fde\u7684\u5706\u5f27\u4e0a\u5176\u4ed6\u5c71\u5b83\u4eec\u9ad8\u90a3\u4e48\u8fd9\u4e24\u5ea7\u5c71\u80fd\u4e92\u76f8\u770b\u5230\uff0c\u6c42\u80fd\u770b\u5230\u7684\u5c71\u7684\u7ec4\u6570\u3002\n### \u9898\u89e3\n\u8bbe$left[i]$\u8868\u793a\u5de6\u8fb9\u7b2c\u4e00\u4e2a\u6bd4$i$\u9ad8\u7684\u4f4d\u7f6e\uff0c\u540c\u7406$right[i]$\u8868\u793a\u53f3\u8fb9\u7b2c\u4e00\u4e2a\u6bd4i\u9ad8\u7684\u4f4d\u7f6e\u3002$count[i]$\u8868\u793ai\u5230$right[i]$\u533a\u95f4($i$\u4e0d\u5728\u533a\u95f4\u5185\uff0c$right[i]$\u5728)\u5185\u9ad8\u5ea6\u7b49\u4e8e$i$\u7684\u5c71\u7684\u4e2a\u6570\u3002\n\n## \u6ce8\u610f\u8981\u7528long long",
        "postTime": 1554187253,
        "uid": 13746,
        "name": "Trimsteanima",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF5E \u3010Bindian Signalizing\u3011"
    }
]