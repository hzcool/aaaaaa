[
    {
        "content": "## \u9898\u89e3\n\ndp\u4e0ekmp\u7684\u5de7\u5999\u7ed3\u5408\u3002\n\n\u8bbe\u6587\u672c\u4e32s\u957f\u5ea6\u4e3a$n$\uff0c\u6a21\u5f0f\u4e32t\u957f\u5ea6\u4e3a$m$\u3002\u9898\u9762\u4e2d\u8d64\u88f8\u88f8\u5730\u544a\u8bc9\u4f60$nm\\leq 10^7$\uff0c\u8fd9\u5c31\u6446\u660e\u4e86\u590d\u6742\u5ea6\u5e94\u8be5\u5728$O(nm)$\u8fd9\u4e2a\u7ea7\u522b\uff0c\u8fd9\u4e2a$n$\u7684\u590d\u6742\u5ea6\u80af\u5b9a\u662f\u626b\u4e00\u904ds\uff0c\u81f3\u4e8e$m$\uff0c\u53ef\u4ee5\u731c\u60f3\u662f\u5bf9\u4e8es\u7684\u6bcf\u4e2a\u4f4d\u7f6e\u8fdb\u884c\u66b4\u529b\u7684\u5339\u914d\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7528dp\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u8bbe$f_i$\u8868\u793at\u5728s\u7684\u524d$i$\u4e2a\u4f4d\u7f6e\u6700\u5927\u7684\u51fa\u73b0\u6b21\u6570\u3002\u90a3\u4e48\u5982\u679c\u4e00\u4e2a\u4f4d\u7f6e\u60f3\u4ece\u4e4b\u524d\u7684\u4f4d\u7f6e\u8f6c\u79fb\u8fc7\u6765\uff0c\u5c31\u5fc5\u987b\u6ee1\u8db3t\u80fd\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u4e0es\u5339\u914d\uff0c\u8fd9\u4e00\u90e8\u5206\u53ef\u4ee5$O(m)$\u66b4\u529b\u5224\u65ad\u3002\n\n\u5177\u4f53\u600e\u4e48\u8f6c\u79fb\u5462\uff1f\u9996\u5148\u5f88\u660e\u663e\u53ef\u4ee5\u76f4\u63a5\u4ece$f_{i-m}$\u8f6c\u79fb\u8fc7\u6765\uff0c\u8868\u793a$i-m+1\\sim i$\u8fd9\u6bb5\u653e\u4e00\u4e2a\u5b8c\u6574\u7684t\u3002\n\n\u4f46\u662f\u8fd9\u8fd8\u4e0d\u591f\uff0c\u56e0\u4e3a\u6709\u53ef\u80fd\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u4e4b\u524d\u8fde\u7eed\u800c\u91cd\u53e0\u5730\u653e\u4e86\u597d\u51e0\u4e2at\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u65b0\u653e\u8fdb\u53bb\u5730\u8fd9\u4e2at\u5e76\u4e0d\u662f\u5b8c\u6574\u5730\uff0c\u800c\u662f\u548c\u4e0a\u4e00\u4e2at\u7684\u540e\u7f00\u91cd\u53e0\u6784\u6210\u7684\u3002\u90a3\u4e48\u8fd9\u5c31\u9700\u8981\u6ee1\u8db3t\u7684\u4e00\u6bb5\u540e\u7f00\u548c\u4e00\u6bb5\u524d\u7f00\u76f8\u7b49\u3002\n\n\u8fd9\u5c31\u4ee4\u6211\u4eec\u60f3\u5230\u4e86kmp\u7b97\u6cd5\u4e2d\u7684next\u6570\u7ec4\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ecem\u5f00\u59cb\u4e00\u76f4\u8df3next\uff0c\u6765\u4fdd\u8bc1\u524d\u7f00\u4e0e\u540e\u7f00\u76f8\u7b49\u3002\n\n\u4f46\u662f\u53c8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5047\u8bbe\u6211\u4eec\u73b0\u5728\u957f\u5ea6\u4e3a$k$\u7684\u524d\u540e\u7f00\u76f8\u7b49\uff0c\u6211\u4eec\u5374\u4e0d\u80fd\u76f4\u63a5\u4ece$f_{i-(m-k)}$\u8f6c\u79fb\uff0c\u56e0\u4e3a$f$\u7684\u5b9a\u4e49\u5e76\u4e0d\u80fd\u4fdd\u8bc1$f_{i-(m-k)}$\u8fd9\u4e2a\u4f4d\u7f6e\u4e0a\u4e00\u5b9a\u653e\u4e86t\u3002\n\n\u6240\u4ee5\u6211\u4eec\u518d\u5b9a\u4e49\u4e00\u4e2a$g_i$\uff0c\u8868\u793as\u7684\u524d$i$\u4e2a\u4f4d\u7f6e\uff0c\u5f3a\u5236\u6700\u540e\u653e\u4e00\u4e2at\u7684\u6700\u5927\u51fa\u73b0\u6b21\u6570\u3002\u90a3\u4e48\u8fd9\u6837\u6211\u4eec\u4e0a\u9762\u7684\u60c5\u51b5\u5c31\u53ef\u4ee5\u901a\u8fc7$g$\u4e4b\u95f4\u7684\u8f6c\u79fb\u6765\u5b9e\u73b0\u4e86\u3002\u5373$g_i=\\max\\{g_{i-(m-k)}+1,g_i\\}$\uff0c\u4e00\u76f4\u8df3next\u66f4\u65b0\u5373\u53ef\u3002\n\n\u8f6c\u79fb\u5b8c$g$\u4e4b\u540e\uff0c\u6211\u4eec\u518d\u4ee4$f_i=\\max\\{f_{i-1}, g_i\\}$\uff0c\u4e5f\u5c31\u662f\u8003\u8651\u653e\u548c\u4e0d\u653et\u4e24\u79cd\u60c5\u51b5\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define MAX 100005\nusing namespace std;\n\nchar s[MAX], t[MAX];\nint n, m;\nint Next[MAX], f[MAX], g[MAX];\n\nbool chk(int p){\n    for(int j = 1; j <= m; j++){\n        if(s[p-j+1] != t[m-j+1] && s[p-j+1] != '?') return false;\n    }\n    return true;\n}\n\nint main()\n{\n    scanf(\"%s%s\", s+1, t+1);\n    n = strlen(s+1), m = strlen(t+1);\n    for(int i = 2, j = 0; i <= m; i++){\n        while(j && t[j+1] != t[i]) j = Next[j];\n        if(t[j+1] == t[i]) j++;\n        Next[i] = j;\n    }\n\n    for(int i = 1; i <= n; i++){\n        f[i] = f[i-1];\n        if(chk(i)){\n            g[i] = f[i-m]+1;\n            for(int j = Next[m]; j; j = Next[j]){\n                g[i] = max(g[i], g[i-(m-j)]+1);\n            }\n            f[i] = max(f[i], g[i]);\n        }\n    }\n    cout << f[n] << endl;\n\n    return 0;\n}\n```\n\n",
        "postTime": 1584188269,
        "uid": 22991,
        "name": "fighter",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF808G \u3010Anthem of Berland\u3011"
    },
    {
        "content": "\u6765\u4e00\u4e2a\u4e0e $|s|\\times|t|$ \u65e0\u5173\u7684\u505a\u6cd5\uff0c\u5176\u5b9e\u662f\u5bf9\u67d0\u4e9b\u9898\u89e3\u505a\u6cd5\u7684\u4f18\u5316\u3002\n\n\u8bbe $f_i$ \u8868\u793a\u8003\u8651 $s$ \u7684\u524d $i$ \u4e2a\u5b57\u7b26\uff0c\u4e14 $t$ \u6070\u597d\u5339\u914d $s[i-|t|+1..i]$ \u7684\u60c5\u51b5\u4e0b\uff0c$t$ \u5728 $s$ \u4e2d\u51fa\u73b0\u6b21\u6570\u6700\u5927\u503c\u3002\u8fd9\u6837\u9700\u8981\u9884\u5904\u7406\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u80fd\u5426\u5339\u914d $t$\uff0c\u53ef\u4ee5\u4f7f\u7528 FFT\uff0c\u53c2\u8003 [P4173 \u6b8b\u7f3a\u7684\u5b57\u7b26\u4e32](https://www.luogu.com.cn/problem/P4173)\u3002  \n\u8003\u8651\u8f6c\u79fb\uff0c\u5982\u679c\u4e0a\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u4e0e\u8fd9\u4e00\u6b21\u4e0d\u76f8\u4ea4\uff0c\u90a3\u4e48\u5c31\u662f $\\max\\limits_{j\\le i-|t|}f_j+1$\u3002\u5982\u679c\u76f8\u4ea4\uff0c\u91cd\u53e0\u90e8\u5206\u65e2\u662f $t$ \u7684\u524d\u7f00\u4e5f\u662f $t$ \u7684\u540e\u7f00\uff0c\u5373 $t$ \u7684 border\uff0c\u8f6c\u79fb\u4e3a $\\max\\limits_{j>i-|t|,j-(i-|t|)\\in B(t)}f_j+1$\u3002\u6839\u636e\u7ed3\u8bba\u300c\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5b57\u7b26\u4e32\u6240\u6709 border \u53ef\u4ee5\u5212\u5206\u6210 $O(\\log n)$ \u6bb5\u7b49\u5dee\u6570\u5217\u300d\uff0c\u53ea\u9700\u8981\u5bf9\u6bcf\u4e00\u4e2a\u516c\u5dee $d$ \u7ef4\u62a4\u5f62\u5982 $f_{t-d},f_{t-2d},\\ldots,f_{t-kd}$ \u7684\u6700\u5927\u503c\uff0c\u53ef\u4ee5\u901a\u8fc7\u5355\u8c03\u961f\u5217\u5b9e\u73b0\u3002\u6b64\u5916\uff0c\u7531\u4e8e\u7b2c\u4e00\u79cd\u8f6c\u79fb\u7684\u5b58\u5728\uff0c\u628a\u8fd9\u4e2a\u7b49\u5dee\u6570\u5217\u7684\u6ed1\u52a8\u7a97\u53e3\u6700\u5927\u503c\u53d8\u6210\u524d\u7f00\u6700\u5927\u503c\u4e0d\u4f1a\u5bfc\u81f4\u9519\u8bef\uff0c\u53ef\u4ee5\u4e0d\u7528\u5355\u8c03\u961f\u5217\uff0c\u7b80\u5316\u4ee3\u7801\u3002  \n\u9884\u5904\u7406\u65f6\u95f4\u590d\u6742\u5ea6 $O((|s|+|t|)\\log(|s|+|t|))$\uff0c\u8f6c\u79fb\u65f6\u95f4\u590d\u6742\u5ea6 $O(|s|\\log|t|)$\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O((|s|+|t|)\\log(|s|+|t|))$\u3002\n\n\u53c2\u8003\u4ee3\u7801\n```cpp\n#pragma GCC optimize(\"O3,unroll-loops\")\n#include <algorithm>\n#include <atcoder/convolution>\n#include <atcoder/modint>\n#include <cstddef>\n#include <iostream>\n#include <numeric>\n#include <string>\n#include <utility>\n#include <vector>\nusing mint = atcoder::modint998244353;\ntemplate <typename T1, typename T2>\nvoid checkmax(T1 &x, T2 y) {\n  if (x < y) x = y;\n}\ntemplate <typename T1, typename T2>\nvoid checkmin(T1 &x, T2 y) {\n  if (x > y) x = y;\n}\nstd::string s, t;\nint n, m, nxt[100001], f[100001], pre[100001], g[100001][41];\nbool ok[100001];\nint main(int argc, char const *argv[]) {\n  std::ios_base::sync_with_stdio(false), std::cin.tie(nullptr);\n  std::getline(std::cin, s), std::getline(std::cin, t);\n  n = s.size(), m = t.size();\n  if (m > n) {\n    std::cout << \"0\\n\";\n    return 0;\n  }\n  std::vector<mint> a(n), b(m), c(n), d(n);\n  for (int i = 0; i < n; i++) a[i] = s[i] == '?' ? 0 : s[i] - 'a' + 1;\n  for (int i = 0; i < m; i++) b[i] = t[i] - 'a' + 1;\n  std::reverse(b.begin(), b.end());\n  for (int i = 0; i < n; i++) c[i] = a[i] * a[i];\n  c = atcoder::convolution(b, c);\n  for (int i = m - 1; i < n; i++) d[i] = mint::raw(mint::mod() - 2) * c[i];\n  c.resize(n);\n  std::copy(a.begin(), a.end(), c.begin());\n  for (int i = 0; i < m; i++) b[i] *= b[i];\n  c = atcoder::convolution(b, c);\n  for (int i = m - 1; i < n; i++) d[i] += c[i];\n  for (int i = 0; i < n; i++) a[i] = a[i] * a[i] * a[i];\n  std::partial_sum(a.begin(), a.end(), a.begin());\n  d[m - 1] += a[m - 1];\n  for (int i = m; i < n; i++) d[i] += a[i] - a[i - m];\n  for (int i = m - 1; i < n; i++) ok[i] = !d[i].val();\n  nxt[0] = -1;\n  for (int i = 1, j = -1; i < m; i++) {\n    while (j != -1 && t[j + 1] != t[i]) j = nxt[j];\n    if (t[j + 1] == t[i]) j++;\n    nxt[i] = j;\n  }\n  std::vector<int> border;\n  border.reserve(m);\n  for (int i = nxt[m - 1]; i != -1; i = nxt[i]) border.emplace_back(i + 1);\n  std::vector<std::pair<int, int>> tr;\n  if (border.size() == 1) {\n    tr.emplace_back(border[0], 0);\n  } else {\n    int d = 0;\n    for (std::size_t i = 1; i < border.size(); i++)\n      if (border[i - 1] - border[i] != d)\n        d = border[i - 1] - border[i], tr.emplace_back(border[i - 1], d);\n  }\n  for (int i = m - 1; i < n; i++) {\n    int w = 0;\n    if (ok[i]) {\n      f[i] = i >= m ? pre[i - m] : 0;\n      for (std::size_t j = 0; j < tr.size(); j++)\n        checkmax(f[i], g[i - m + tr[j].first][j]);\n      w = ++f[i];\n    }\n    pre[i] = std::max(pre[i - 1], w);\n    for (std::size_t j = 0; j < tr.size(); j++)\n      g[i][j] = std::max(g[i - tr[j].second][j], w);\n  }\n  std::cout << *std::max_element(f, f + n) << '\\n';\n  return 0;\n}\n```",
        "postTime": 1657180813,
        "uid": 68273,
        "name": "xyf007",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF808G \u3010Anthem of Berland\u3011"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u4e00\u4e2a\u5305\u542b\u4e0d\u5b9a\u5b57\u7b26\u7684\u4e3b\u4e32 $s$ \u548c\u4e00\u4e2a\u786e\u5b9a\u7684\u6a21\u5f0f\u4e32 $t$\uff0c\u6c42\u628a\u4e0d\u5b9a\u5b57\u7b26\u5206\u914d\u540e\u7684\u5339\u914d\u6570\u6700\u5927\u503c\u3002\n\n$|t|,|s|\\leq 10^5,|s|\\times |t| \\le 10^7$\n\n## \u89e3\u6cd5\n\n\u770b\u5230\u6570\u636e\u8303\u56f4\uff0c\u6211\u4eec\u8003\u8651 dp\u3002\n\n\u8bbe $f_{i,j}$ \u8868\u793a $s$ \u7684\u524d $i$ \u4f4d\u548c $t$ \u5339\u914d\uff0c\u5176\u4e2d\u6700\u540e\u51e0\u4e2a\u5b57\u7b26\u548c $t$ \u5339\u914d\u5230\u7b2c $j$ \u4e2a\u5b57\u7b26\u7684\u6700\u5927\u5339\u914d\u6570\u3002\n\n\u7279\u522b\u5730\uff0c\u82e5 $j=m$\uff0c\u5b83\u7684\u8d21\u732e\u6211\u4eec\u4f1a\u52a0\u4e0a\u3002\n\n\u521d\u59cb\u72b6\u6001\uff1a$f_{0,0} = 0$\uff0c\u5176\u5b83\u8bbe\u4e3a $-\\inf$\u3002\n\n\u5bf9\u4e8e\u8f6c\u79fb\uff0c\u6211\u4eec\u5206\u60c5\u51b5\u8003\u8651\uff1a\n\n$j>0$\uff0c\u6b64\u65f6\u6709\u5339\u914d\u6bb5\u3002\n\n$s_i = t_j$ \u6216\u8005 $s_i = \\texttt ?$ \u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u5339\u914d\u8be5\u4f4d\uff0c\u4ee4 $f_{i,j} = f_{i-1,j-1}$\u3002\n\n\u4e4b\u540e\uff0c\u5982\u679c $j=m$\uff0c\u9700\u8981\u5355\u72ec\u8003\u8651\uff1a\n\n\u5148\u52a0\u4e0a\u672c\u6bb5\u8d21\u732e\u3002\u4ee4 $f_{i,j}$ \u52a0\u4e00\u3002\n\n\u53d1\u73b0\u4e4b\u540e\u7684\u4e32\u53ef\u4ee5\u4ee5\u5f53\u524d\u7684\u4e00\u4e2a\u540e\u7f00\u4f5c\u524d\u7f00\u76f4\u63a5\u5339\u914d\u3002\u4e5f\u5c31\u662f $\\text{Border}$\u3002\n\n\u9884\u5904\u7406 $t$ \u7684\u5931\u914d\u6570\u7ec4\u540e\uff0c\u6211\u4eec\u66b4\u529b\u904d\u5386 $t$ \u7684\u6240\u6709 $\\text{Border}$\uff0c\u8bbe\u5176\u957f $k$\uff0c\u4ee4 $f_{i,k}$ \u4e0e $f_{i,j}$ \u53d6\u6700\u5927\u503c\u3002\u8fd9\u4e00\u6b65\u7c7b\u6bd4 KMP \u7b97\u6cd5\u4e2d\u5339\u914d\u6210\u529f\u540e\u56de\u8df3\u4e00\u6b65\u7684\u8fc7\u7a0b\u5c31\u53ef\u4ee5\u7406\u89e3\u4e86\u3002\n\n\u6700\u540e\uff0c\u56e0\u4e3a\u53ef\u4ee5\u5728\u4efb\u610f\u4f4d\u7f6e\u4e2d\u65ad\u4e0b\u4e00\u4e2a\u5b57\u7b26\u7684\u5339\u914d\uff0c\u6240\u4ee5 \n\n$f_{i,0} = \\max\\limits_{j=1}^m\\{f_{i,j},f_{i-1,j}\\}$\n\n\u90a3\u4e48\uff0c\u53ef\u4ee5\u6e05\u695a\u5730\u770b\u51fa\uff0c\u8fd9\u5c31\u5728 $\\mathcal O(|s|\\times|t|)$ \u7684\u65f6\u95f4\u5185\u89e3\u51b3\u4e86\u8be5\u95ee\u9898\u3002\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n\nconst int N = 100001;\nconst int NM = 11100101;\n\ninline int read() {\n    int x = 0, f = 1; char ch = getchar();\n    while(ch > '9' || ch < '0') { if(ch == '-') f = -1; ch = getchar(); }\n    while(ch >= '0' && ch <= '9') x = x * 10 + ch - 48, ch = getchar();\n    return x * f;\n}\n\nchar s[N],t[N];\nint F[NM],n,m,p[N];\n\nint &f(int x,int y) { return F[x * (m + 1) + y + 1]; }\n\nint main() {\n    std::scanf(\"%s\\n%s\",s + 1,t + 1);\n    n = strlen(s + 1), m = strlen(t + 1);\n    p[1] = 0;\n    for(int i = 2, j = 0;i <= m;i++) {\n        while(j && t[j + 1] != t[i]) j = p[j];\n        if(t[j + 1] == t[i]) j++;\n        p[i] = j;\n    }\n    memset(F,128,sizeof F);\n    f(0,0) = 0;\n    for(int i = 1;i <= n;i++) {\n        for(int j = 1;j <= m;j++) {\n            if(s[i] == t[j] || s[i] == '?') {\n                f(i,j) = f(i - 1,j - 1);\n            }\n            if(j == m) {\n                f(i,j)++;\n                for(int k = p[m];k;k = p[k]) f(i,k) = std::max(f(i,k),f(i,j));\n            }\n        }\n        for(int j = 0;j <= m;j++) f(i,0) = std::max(f(i,0),std::max(f(i,j),f(i - 1,j)));\n    }\n    std::printf(\"%d\\n\",f(n,0));\n    return 0;\n}\n\n```\n\n",
        "postTime": 1629901402,
        "uid": 219595,
        "name": "Vocalise",
        "ccfLevel": 9,
        "title": "KMP \u7684 DP--CF808G \u3010Anthem of Berland\u3011"
    },
    {
        "content": "\u7ed9\u4e00\u53d1\u4e0d\u7528\u8111\u5b50\u7684\u505a\u6cd5\u3002\n\n___\n\n\u524d\u7f6e\u77e5\u8bc6\uff1aKMP \u81ea\u52a8\u673a\u3002\n\n\u5176\u6838\u5fc3\u662f\u4e00\u4e2a\u6570\u7ec4 $aut_{i,c}$,\u5176\u610f\u4e49\u4e3a\uff1a\u6a21\u5f0f\u4e32\u7684\u524d $i-1$ \u4f4d\u5df2\u7ecf\u5339\u914d\u5b8c\u6210\uff0c\u7528 $c$ \u4e0e $t_i$ \u5339\u914d\u540e\u7684\u5339\u914d\u957f\u5ea6\u3002\n\n\u6784\u9020\u65b9\u5f0f\uff1a\n\n\u9996\u5148\u6c42\u51fa $next$ \u6570\u7ec4\u3002\n\n$aut$ \u6570\u7ec4\u7684\u6784\u9020\u65b9\u5f0f\uff08\u8f6c\u79fb\u65b9\u7a0b\uff09\uff1a\n\n $$\n aut_{i,c} = \n\\begin{cases}\naut_{next_{i-1}+1,c} & i = 1 \\operatorname{or} t_i\\neq c\\\\\ni+[t_i = c] & a \\lt 1 \\\\\n\\end{cases}\n$$\n\n\u89e3\u91ca\u4e00\u4e0b $aut_{next_{i-1}+1,c}$ \u7684\u610f\u4e49\u3002\n\n\u6211\u4eec\u73b0\u5728\u53ea\u5339\u914d\u597d\u4e86\u524d $i-1$ \u4f4d\uff0c\u7528 next \u6570\u7ec4\u8df3\u56de\u540e\u8fd8\u9700\u8df3\u81f3\u5b83\u7684\u4e0b\u4e00\u4f4d\u3002\n\ntip\uff1a\u4e00\u822c\u4e3a\u4e86\u5b9e\u73b0\u65b9\u4fbf\uff0c\u4f1a\u5f80\u5b57\u7b26\u4e32\u672b\u5c3e\u52a0\u4e00\u4e2a\u7279\u6b8a\u5b57\u7b26 #\u3002\n\n___\n\n\u8fdb\u5165\u6b63\u9898\uff1a\n\n\u4e00\u773c DP\n\n\u8bbe $dp_{i,j}$ \u4e3a\u5f53\u524d\u626b\u63cf\u5230 s \u7684\u7b2c i \u4f4d\uff0c\u5728 KMP \u81ea\u52a8\u673a\u4e0a\u7684\u8282\u70b9 j \uff0c\u5339\u914d\u7684\u6700\u5927\u6b21\u6570\u3002\n\n\u8f6c\u79fb\u6bd4\u8f83\u663e\u7136\uff0c\u5efa\u8bae\u770b\u4ee3\u7801\u3002\n\n\u6700\u540e\u7684\u7b54\u6848\u5c31\u662f $\\max_{1\\leq i\\leq |t|}dp_{|s|,i}$\u3002\n\n\u56e0\u4e3a s,t \u5927\u5c0f\u4e0d\u5b9a\uff0c\u9700\u8981\u6eda\u52a8\u6570\u7ec4\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(|s|\\times|t|)$,\u5e26\u4e00\u4e2a 26 \u7684\u5e38\u6570\uff0c~~\u4f46\u662f\u5361\u8fc7\u53bb\u4e86~~.\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <cstring>\nconst int maxn = 1e5+5;\ninline int max(int a,int b){return a>b?a:b;}\nint n,m,dp[2][maxn],next[maxn],aut[maxn][26];\nchar s[maxn],t[maxn];\nint main(){\n\tscanf(\"%s%s\",s+1,t+1);\n\tn = strlen(s+1),m = strlen(t+1);\n\tt[++m] = '#';\n\tnext[1] = 0;\n\tfor(int i=2,j=0;i<=m;++i){\n\t\twhile(j&&t[i]!=t[j+1])j = next[j];\n\t\tif(t[i] == t[j+1])++j;\n\t\tnext[i] = j;\n\t}\n\tfor(int i=1;i<=m;++i){\n\t\tfor(int c=0;c<26;++c){\n\t\t\tif(i>1&&t[i]!=c+'a')\n\t\t\t\taut[i][c] = aut[next[i-1]+1][c];\n\t\t\telse aut[i][c] = i+(t[i]==c+'a');\n\t\t}\n\t}\n\tmemset(dp,0xcf,sizeof(dp));\n\tdp[0][1] = 0;\n\tfor(int i=1;i<=n;++i){\n\t\tif(s[i] == '?'){\n\t\t\tfor(int j=1;j<=m;++j){\n\t\t\t\tfor(int c=0;c<26;++c)\n\t\t\t\t\tdp[i&1][aut[j][c]] = max(dp[i&1][aut[j][c]],dp[(i-1)&1][j]+(aut[j][c]==m));\n\t\t\t}\n\t\t}else{\n\t\t\tfor(int j=1;j<=m;++j)\n\t\t\t\tdp[i&1][aut[j][s[i]-'a']] = max(dp[i&1][aut[j][s[i]-'a']],dp[(i-1)&1][j]+(aut[j][s[i]-'a']==m));\n\t\t}\n\t\tfor(int j=1;j<=m;++j)dp[(i-1)&1][j] = -0x3f3f3f3f;\n\t}\n\tint maxx = 0;\n\tfor(int j=1;j<=m;++j)maxx = max(maxx,dp[n&1][j]);\n\tprintf(\"%d\",maxx);\n\treturn 0;\n}\n```",
        "postTime": 1610008758,
        "uid": 114153,
        "name": "Sali\u0435ri",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF808G \u3010Anthem of Berland\u3011"
    },
    {
        "content": "\u4ee4 $s$ \u4e32\u957f\u5ea6 $n$\uff0c$t$ \u4e32\u957f\u5ea6 $m$\u3002\n\n\u8fd9\u662f\u4e00\u4e2a\u50bb\u903c $O(|\\sum|m^2+|\\sum|nm)$ \u505a\u6cd5\uff0c\u4f46\u4e0d\u9700\u8981 kmp \u3002\n\n\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u628a kmp \u6539\u6210 $m^2$ \u66b4\u529b\u5373\u53ef\u3002\n\n\u4f46\u8fd9\u6837\u590d\u6742\u5ea6\u4e3a\u4ec0\u4e48\u6b63\u786e\u5462\uff1f\u56e0\u4e3a $nm\\le10^7$\uff0c\u7b54\u6848\u4e0d\u4e3a 0 \u65f6 $m\\le n$ \u6240\u4ee5 $m\\le\\sqrt{10^7}$\u3002\n\n\u6211\u7684 dp \u6bd4\u8f83\u62c9\u8de8\u56e0\u6b64\u5b83\u7684\u590d\u6742\u5ea6\u4f1a\u5e26\u4e0a\u5b57\u7b26\u96c6\uff0c\u5927\u6982\u662f\u8fd9\u6837\n\n\u6b63\u5e38\u5339\u914d \n$\nf[i][j]=\\max(f[i][j],f[i-1][b[j][s[i]]])\n$\n\n\u5f53\u6b63\u597d\u5339\u914d\u5b8c\u65f6 \n$\nf[i][nex_m]=\\max(f[i][nex_m],f[i-1][m-1])\n$\n\n\u5f53\u65e0\u6cd5\u5339\u914d\u65f6 \n$\nf[i][0]=\\max(f[i][0],f[i-1][j])\n$\n\n\u5176\u4e2d $f[i][j]$ \u4e3a $s$ \u524d $i$ \u4f4d\u6700\u540e\u5339\u914d\u5230 $t$ \u524d $j$ \u4f4d\u6700\u591a\u5339\u914d\u4e86\u51e0\u6b21\uff0c$nex$ \u5c31\u76f8\u5f53\u4e8e kmp \u5931\u914d\u6570\u7ec4\uff0c$b[i][j]$ \u4e3a\u5339\u914d\u5230 $t$ \u7684\u524d $i$ \u4f4d\uff0c\u4e0b\u4e00\u4f4d\u5b57\u7b26\u662f $j$ \u65f6\u6700\u591a\u53ef\u5339\u914d\u5230\u524d\u51e0\u4f4d\u3002\n\n\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,a[1000000],f[20000005],b[10005][26];\nchar s[100005],t[100005];\ninline int id(const int x,const int y)\n{\n\treturn x*m+y;\n}\nvoid add(int p,char y)\n{\n\tfor(int i=0;i<m;i++)\n\t{\n\t\tint x=b[i][y-97];\n\t\tif(t[x+1]==y)\n\t\t{\n\t\t\tif(x+1==m) f[id(p,a[m])]=max(f[id(p-1,i)]+1,f[id(p,a[m])]); else f[id(p,x+1)]=max(f[id(p,x+1)],f[id(p-1,i)]);\n\t\t}\n\t\telse f[id(p,x)]=max(f[id(p,x)],f[id(p-1,i)]);\n\t}\n}\nint main()\n{\n\tscanf(\"%s%s\",s+1,t+1);\n\tn=strlen(s+1),m=strlen(t+1);\n\tif(n<m)\n\t{\n\t\tputs(\"0\");\n\t\treturn 0;\n\t}\n\tfor(int i=m;i>1;i--)\n\t\tfor(int j=1;i+j-1<=m;j++)\n\t\t\tif(t[j]==t[i+j-1]) a[i+j-1]=j; else break;\n\tfor(int i=1;i<m;i++)\n\t\tfor(int j=0;j<26;j++)\n\t\t{\n\t\t\tb[i][j]=i;\n\t\t\twhile(b[i][j]&&t[b[i][j]+1]!=j+97) b[i][j]=a[b[i][j]];\n\t\t}\n\tfor(int i=1;i<=m;i++) f[id(0,i)]=-10000000;\n\tfor(int j=1;j<=n;j++)\n\t\tfor(int i=0;i<=m;i++) f[id(j,i)]=-10000000;\n\tfor(int i=1;i<=n;i++)\n\t\tif(s[i]=='?')\n\t\t{\n\t\t\tfor(char j=97;j<123;j++) add(i,j);\n\t\t}\n\t\telse add(i,s[i]);\n\tint ans=0;\n\tfor(int i=0;i<m;i++) ans=max(ans,f[id(n,i)]);\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1636681106,
        "uid": 112921,
        "name": "zhimao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF808G Anthem of Berland"
    },
    {
        "content": "### Preface\n\n\u96be\u5ea6\u53ef\u4ee5\u7a0d\u5fae\u964d\u4e00\u964d\uff1f\u81f3\u591a\u84dd\u5427\u2026\u2026\n\n\u6211\u53ea\u7528\u4e86 Dp \u554a\uff0c\u6ca1\u7528\u5565\u54c8\u5e0c\u3001KMP\u2026\u2026\n\n### Analysis\n\n**\u4ee5\u4e0b\u5b57\u7b26\u4e32\u4e0b\u6807\u4ece $1$ \u5f00\u59cb\uff0c$|s|=n,|t|=m,n\\ge m$\u3002**\n\n\u65f6\u95f4\u663e\u7136\u662f $O(nm)$ \u6216 $O(m^2)$ \u7684\u3002\n\n\u5982\u679c\u4e0d\u8003\u8651 $t$ \u91cd\u53e0\u7684\u60c5\u51b5\uff0c\u90a3 Dp \u975e\u5e38\u5bb9\u6613\u3002\u8bbe $f_i$ \u8868\u793a $s$ \u4e2d $t$ \u5f53\u524d\u6700\u540e\u5339\u914d\u5230 $s[i\\dots(i+m-1)]$ \u65f6\u7684\u6700\u5927\u5339\u914d\u6b21\u6570\u3002\u82e5 $s[i\\dots(i+m-1)]$ \u53ef\u4ee5\u7b49\u4e8e $t$\uff0c\u90a3\u4e48\uff1a\n\n$$f_i=1+\\max\\limits_{j=1}^{i-m}f_j$$\n\n\u7528\u524d\u7f00\u548c\u4f18\u5316\u5373\u53ef\u3002\n\n\u8003\u8651 $t$ \u91cd\u53e0\u7684\u60c5\u51b5\uff0c\u91cd\u53e0\u90e8\u5206\u957f\u5ea6\u4e3a $len$ \u7684\u6761\u4ef6\u4e3a $t[1\\dots len]=t[(m-len+1)\\dots m]$\uff08\u524d\u7f00 $=$ \u540e\u7f00\uff09\uff0c\u6211\u4eec\u53ef\u4ee5 $O(m^2)$ \u9884\u5904\u7406\u51fa\u6240\u6709\u53ef\u884c\u7684 $len$ \u5b58\u4e3a\u96c6\u5408 $S$\u3002\n\n\u90a3 Dp \u8f6c\u79fb\u6539\u4e00\u4e0b\u5c31\u80fd $O(m(n+m))$ \u8fc7\u4e86\uff1a\n\n$$f_i=1+\\max\\{\\max\\limits_{j=1}^{i-m}f_j,\\max\\limits_{j\\in S}f_{i-m+j}\\}$$\n\n### Code\n\n[Link](https://codeforces.com/contest/808/submission/146633288)",
        "postTime": 1645019059,
        "uid": 101868,
        "name": "I_am_Accepted",
        "ccfLevel": 0,
        "title": "CF808G Anthem of Berland"
    },
    {
        "content": "## \u89e3\u6790\n\n\u7528 ACAM \u505a\n\n\u8003\u8651\u76f4\u63a5 dp\n\n\u8bbe $dp(i, q)$ \u8868\u793a\u8f93\u5165\u5b8c $s[0..i]$ \u540e\u81ea\u52a8\u673a\u72b6\u6001\u4e3a $q$ \u65f6\u7684\u6700\u5927\u5339\u914d\u6570\n\n\u4e8e\u662f\u5c31\u505a\u5b8c\u4e86\u3002\u6bd4\u8d77\u5148\u6c42\u51fa\u53ef\u80fd\u7684\u5339\u914d\u4f4d\u7f6e\u518d dp \u7684\u505a\u6cd5\u8981\u7b80\u5355\u5f88\u591a\uff1b\u4f46\u662f\u6700\u574f\u590d\u6742\u5ea6\u591a\u4e86\u4e00\u4e2a\u5b57\u7b26\u96c6\uff0c\u662f $\\Theta((m+nm)|\\Sigma|)$ \u7684\u3002\u597d\u5728\u80fd\u5361\u8fc7 \\kk\n\n\uff08\u548c [\u8fd9\u7bc7\u9898\u89e3](https://www.luogu.com.cn/blog/shan-cheng/solution-cf808g) \u8bf4\u7684\u5176\u5b9e\u662f\u4e00\u4e2a\u4e1c\u897f\uff09\n\n## CODE\n\n\u6bd4\u8d77\u53e6\u4e00\u79cd\u5199\u6cd5\u7684\u4ee3\u7801\u8981\u77ed\u4e0d\u5c11\uff08\n\n```cpp\n#include <cstdio>\n#include <vector>\nusing std::vector;\nusing std::max;\n\nconst int MAXN =1e5+20, MAXCH ='z'-'a'+1;\n\n/*------------------------------IO------------------------------*/\n\nstruct string{\n\tchar data[MAXN];\n\tint len;\n\t\n\tint size() const{\n\t\treturn len;\n\t}\n\t\n\tchar & operator [] (const int &index){\n\t\treturn data[index];\n\t}\n\tchar operator [] (const int &index) const{\n\t\treturn data[index];\n\t}\n};\n\nvoid read_string(string &s){\n\tchar ch =getchar();\n\twhile((ch < 'a' || ch > 'z') && ch != '?')\n\t\tch =getchar();\n\ts.len =0;\n\twhile((ch >= 'a' && ch <= 'z') || ch == '?')\n\t\ts[s.len++] =ch, ch =getchar();\n}\n\n/*------------------------------ACAM------------------------------*/\n\nnamespace ACAM{\n\tint delta[MAXN][MAXCH];\n\tint fail[MAXN];\n\t\n\tvoid init(const string &s){\n\t\tfor(int i =0; i < s.size(); ++i)\n\t\t\tdelta[i][s[i]-'a'] =i+1;\n\t\tfor(int u =1; u <= s.size(); ++u)\n\t\t\tfor(int ch =0; ch < MAXCH; ++ch){\n\t\t\t\tif(delta[u][ch])\n\t\t\t\t\tfail[delta[u][ch]] =delta[fail[u]][ch];\n\t\t\t\telse\n\t\t\t\t\tdelta[u][ch] =delta[fail[u]][ch];\n\t\t\t}\n\t}\n};\n\n/*------------------------------Main------------------------------*/\n\nint main(){\n\tstring s, t;\n\tread_string(s), read_string(t);\n\t\n\tACAM::init(t);\n\t\n\tvector<int> dp(t.size()+1, -0x3f3f3f3f);\n\tdp[0] =0;\n\tfor(int i =0; i < (int)s.size(); ++i){\n\t\tvector<int> dp_tmp(t.size()+1, -0x3f3f3f3f);\n\t\tif(s[i] == '?')\n\t\t\tfor(int q =0; q <= t.size(); ++q)\n\t\t\t\tfor(int ch =0; ch < MAXCH; ++ch){\n\t\t\t\t\tconst int q_ =ACAM::delta[q][ch];\n\t\t\t\t\tdp_tmp[q_] =max(dp_tmp[q_], dp[q]+(q_ == t.size()));\n\t\t\t\t}\n\t\telse\n\t\t\tfor(int q =0; q <= t.size(); ++q){\n\t\t\t\tconst int q_ =ACAM::delta[q][s[i]-'a'];\n\t\t\t\tdp_tmp[q_] =max(dp_tmp[q_], dp[q]+(q_ == t.size()));\n\t\t\t}\n\t\tdp.swap(dp_tmp);\n\t}\n\tint ans =0;\n\tfor(int q =0; q <= t.size(); ++q)\n\t\tans =max(ans, dp[q]);\n\tprintf(\"%d\", ans);\n}\n```",
        "postTime": 1611218573,
        "uid": 105254,
        "name": "Piwry",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF808G \u3010Anthem of Berland\u3011"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF808G)\n\nKMP \u597d\u9898\u3002\n\n\u76f8\u4fe1\u505a\u5b8c\u8fd9\u9053\u9898\u540e\u4e00\u5b9a\u4f1a\u5bf9 KMP \u6709\u66f4\u6df1\u7684\u7406\u89e3\u4e86\u3002\n\n### \u524d\u7f6e\u829d\u58eb\n\n> [KMP \u7b97\u6cd5](https://oi-wiki.org/string/kmp/)\n\n### \u7ea6\u5b9a\n\n$n= \\left| s \\right|,m= \\left| t \\right|$\n\n### \u601d\u8def\n\n\u6211\u4eec\u9996\u5148\u60f3\u4e00\u60f3\uff0c\u6211\u4eec\u5e73\u65f6\u5728\u505a KMP \u7684\u65f6\u5019\uff0c\u662f\u600e\u4e48\u5339\u914d\u7684\u3002\n\n\u5f88\u660e\u663e\u5c31\u662f\u4e00\u8fb9\u8d70\uff0c\u4e00\u8fb9\u8df3 $fail$ \u662f\u5427\u3002\n\n\u6bcf\u6b21 $fail$ \u8df3\u5230 $m$ \u7684\u65f6\u5019\uff0c\u5c31\u628a\u5339\u914d\u7684\u6b21\u6570 $+1$\u3002\n\n\u56e0\u4e3a\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u5206\u6210\u4e00\u6b65\u4e00\u6b65\u7684\uff0c\u90a3\u4e48\u5f88\u5bb9\u6613\u60f3\u5230\u7528 DP \u89e3\u51b3\u3002\n\n\u8bbe $f_{i,j}$ \u4e3a\uff1a\u73b0\u5728\u5904\u7406\u5230 $s$ \u7684\u7b2c $i$ \u4f4d\uff0c$fail$ \u6307\u9488\u8df3\u5230\u4e86 $j$\uff0c\u6700\u591a\u5339\u914d\u6b21\u6570\u662f\u591a\u5c11\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8f6c\u79fb\u7684\u65f6\u5019\uff0c\u65e2\u7136\u5df2\u7ecf\u77e5\u9053\u4e86 $fail$ \u662f\u591a\u5c11\uff0c\u90a3\u5c31\u76f4\u63a5\u8df3 $fail$ \u8f6c\u79fb\u5c31\u884c\u4e86\u3002\n\n\u5982\u679c\u9047\u5230 `?`\uff0c\u5c31\u679a\u4e3e\u5b83\u662f\u4ec0\u4e48\u5b57\u6bcd\u3002\n\n### \u4f18\u5316\n\n\u4e0a\u9762\u7684\u505a\u6cd5\u53ef\u80fd\u4f1a TLE\uff08\u8bf4 \u53ef\u80fd \u662f\u56e0\u4e3a\u6211\u4e5f\u6ca1\u8bd5\u8fc7\uff09\u3002\n\n\u4f18\u5316\u7684\u65b9\u6cd5\u662f\u9884\u5904\u7406\u51fa $to_{i,j}$ \u8868\u793a\uff1a\u73b0\u5728 $fail$ \u8df3\u5230 $i$\uff0c\u5f53\u524d\u7684\u5b57\u6bcd\u662f $j$\uff0c\u6700\u540e\u4f1a $fail$ \u4f1a\u8df3\u5230\u54ea\u91cc\u3002\n\n\u9884\u5904\u7406\u53ef\u4ee5\u76f4\u63a5\u6309\u666e\u901a\u7684 KMP \u505a\u5c31\u884c\u4e86\uff0c\u4e0d\u61c2\u7684\u53ef\u4ee5\u770b\u4ee3\u7801\u3002\n\n\u6700\u540e\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(nm \\left| \n\\Sigma \\right|)$\uff0c\u5176\u4e2d $\\left| \n\\Sigma \\right|=26$\u3002\n\n~~\u795e\u5947\u7684\u662f\u5b83\u5c45\u7136\u5361\u8fc7\u53bb\u4e86~~\n\n### [Code](https://www.luogu.com.cn/paste/lrhqxf66)\n\n---\n\n### \u63a8\u8350\u7ec3\u4e60\n\n[P3193 [HNOI2008]GT\u8003\u8bd5](https://www.luogu.com.cn/problem/P3193)\n\n\u8ddf\u8fd9\u4e2a\u9898\u601d\u8def\u7c7b\u4f3c\uff0c\u53ea\u662f\u8981\u5957\u4e00\u4e2a\u77e9\u9635\u5feb\u901f\u5e42\uff08~~\u600e\u4e48\u8ddf\u6211\u51fa\u7684\u9898\u4e00\u6837\u7f1d\u5408\u554a~~\uff09",
        "postTime": 1647863237,
        "uid": 407564,
        "name": "Rushroom",
        "ccfLevel": 7,
        "title": "CF808G Anthem of Berland"
    }
]