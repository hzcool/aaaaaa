[
    {
        "content": "\u8003\u8651\u5bf9\u6bcf\u4e2a $i$\uff0c\u8ba1\u7b97\u51fa $\\min_{j\\in T}\\{|i-j|\\}$ \u7684\u671f\u671b\u503c\uff0c\u8bb0\u4e3a $f_i$\u3002\u7b54\u6848\u5373\u4e3a $\\sum a_if_i$\u3002\n\n\u8ba1\u7b97 $f_i$ \u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97\u5bf9\u6bcf\u4e2a $k\\geq 1$\uff0c\u6709\u591a\u5c11\u4e2a $T$ \u4f7f\u5f97 \n$\\min_{j\\in T}\\{|i-j|\\}\\geq k$\uff0c\u518d\u7d2f\u548c\u800c\u6c42\u51fa\u3002\u8fd9\u7b49\u4ef7\u4e8e\u6240\u6709 $[i-(k-1),i+(k-1)]$ \u4e2d\u7684\u5173\u952e\u70b9\u90fd\u5f3a\u5236\u4e0d\u9009\u7684\u65b9\u6848\u6570\u3002\u4e0d\u59a8\u8bbe $s_k$ \u8868\u793a $1\\sim k$ \u4e2d\u6709\u591a\u5c11\u4e2a\u5173\u952e\u70b9\uff0c\u90a3\u4e48 $[i-(k-1),i+(k-1)]$ \u4e2d\u5173\u952e\u70b9\u6570\u4e3a $s_{i+(k-1)}-s_{i-k}$\uff0c\u533a\u95f4\u5916\u7684\u5173\u952e\u70b9\u6570\u4e3a $m-s_{i+(k-1)}+s_{i-k}$\uff0c\u603b\u7684\u975e\u7a7a\u5b50\u96c6\u6570\u91cf\u5373\u4e3a $2^{m-s_{i+(k-1)}+s_{i-k}}-1=2^m\\times \\dfrac{2^{s_{i+(k-1)}}}{2^{s_{i-k}}}-1$\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u77e5\u9053\n\n$$\nf_i=\\sum_{k\\geq 1}(2^m\\times \\dfrac{2^{s_{i+(k-1)}}}{2^{s_{i-k}}}-1)\n$$\n\n\u5728\u6b64\u5df2\u7ecf\u53ef\u4ee5\u770b\u51fa\u5377\u79ef\u7684\u5f62\u5f0f\u4e86\u3002\n\n\u6ce8\u610f\u8fd9\u91cc\u4e0b\u6807\u7684\u8303\u56f4\u6709\u8d85\u8fc7 $[0,n]$ \u7684\u53ef\u80fd\u6027\uff0c\u4e3a\u7b26\u5408\u9898\u610f\uff0c\u53ef\u4ee5\u4eba\u4e3a\u8bbe\u5b9a $i < 0$ \u65f6 $s_i=0$\uff0c$i > n$ \u65f6 $s_i=m$\uff08\u8fd9\u76f8\u5f53\u4e8e\u4eba\u4e3a\u8865\u5145\u4e86\u82e5\u5e72\u4e2a\u975e\u5173\u952e\u4f4d\u7f6e\uff09\u3002\u89c2\u5bdf\u5230\u4e0b\u6807\u8d85\u8fc7 $[-n,2n]$ \u7684\u8303\u56f4\u7684 $s$ \u503c\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u53ea\u8003\u8651 $i+(k-1),i-k\\in[-n,2n]$ \u7684\u60c5\u5f62\u3002\u4e3a\u4e86\u8ba9\u5377\u79ef\u5f62\u5f0f\u66f4\u660e\u663e\uff0c\u6211\u4eec\u5199\u6210\u4e0b\u5f0f\uff1a\n\n$$\nf_i=\\sum_{-n\\leq j<k\\leq 2n,j+k=2i-1}(2^m\\times 2^{s_k}\\times \\dfrac{1}{2^{s_j}}-1)\n$$\n\n\u540e\u9762\u7684 $-1$ \u5355\u72ec\u5904\u7406\u3002\u524d\u9762\u7684\u4e00\u9879\u53ef\u4ee5\u5229\u7528\u5377\u79ef\u6765\u89e3\u51b3\uff0c\u6ce8\u610f\u5230\u8fd9\u91cc\u8981\u6c42 $j < k$\uff0c\u6211\u4eec\u8003\u8651\u91c7\u7528\u5206\u6cbb NTT\uff0c\u6bcf\u6b21\u5c06\u533a\u95f4\u4e00\u5206\u4e3a\u4e8c\uff0c\u7528\u4e00\u6b21 NTT \u5904\u7406\u4e24\u4e2a\u533a\u95f4\u4e4b\u95f4\u7684\u8d21\u732e\uff08\u7528\u5de6\u533a\u95f4\u7684 $\\dfrac{1}{2^{s_j}}$ \u5377\u4e0a\u53f3\u533a\u95f4\u7684 ${2^{s_k}}$\uff0c\u518d\u9012\u5f52\u4e0b\u53bb\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log^2n)$\u3002\u4f3c\u4e4e\u6709\u70b9\u5361\u5e38\uff0c\u5efa\u8bae\u627e\u4e00\u4efd\u5feb\u4e00\u70b9\u7684\u591a\u9879\u5f0f\u677f\u5b50\u3002\n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<algorithm>\n\nusing namespace std;\n\ntypedef vector<long long> poly;\n\nconst long long MOD=998244353,G=3;\nint add(int x,int y){return x+y>=MOD?x+y-MOD:x+y;}\nint sub(int x,int y){return x>=y?x-y:x+MOD-y;}\n\nlong long fast_pow(long long b,long long p)\n{\n\tlong long ans=1;while(p){if(p&1)ans=ans*b%MOD;b=b*b%MOD;p>>=1;}\n\treturn ans;\n}\nlong long INV(long long x){return fast_pow(x,MOD-2);}\nlong long w[2000000],invw[2000000];\n\nvoid init_w(int n)\n{\n\tint N=1<<n;\n\tfor(int d=2;d<=N;d<<=1)\n\t{\n\t\tint m=d>>1;w[m]=1;long long g=fast_pow(G,(MOD-1)/d);\n\t\tfor(int i=1;i<m;i++)w[i+m]=w[i+m-1]*g%MOD;\n\t}\n\tfor(int i=1;i<N;i++)invw[i]=INV(w[i]);\n}\n\n\nvoid NTT(poly &a,int n,int type)\n{\n\tint N=1<<n;poly b(N);\n\tfor(int i=1;i<N;i++)b[i]=(b[i>>1]>>1)|((i&1)*(N>>1));\n\tfor(int i=1;i<N;i++)if(i<b[i])swap(a[i],a[b[i]]);\n\t\n\tfor(int d=2;d<=N;d<<=1)\n\t{\n\t\tint m=d>>1;\n\t\tfor(int i=0;i<N;i+=d)\n\t\t{\n\t\t\tfor(int j=0;j<m;j++)\n\t\t\t{\n\t\t\t\tlong long x=a[i+j],y=a[i+j+m]*(type==-1?invw[j+m]:w[j+m])%MOD;\n\t\t\t\ta[i+j]=add(x,y),a[i+j+m]=sub(x,y);\n\t\t\t}\n\t\t}\n\t}\n\tif(type==-1){long long x=INV(N);for(int i=0;i<N;i++)a[i]=a[i]*x%MOD;}\n}\npoly operator*(poly a,poly b)\n{\n\tint N=a.size()+b.size(),n=0;while((1<<n)<N)n++;N=1<<n;\n\twhile(a.size()<N)a.push_back(0);while(b.size()<N)b.push_back(0);\n\tNTT(a,n,1),NTT(b,n,1);\n\tpoly c(N);for(int i=0;i<N;i++)c[i]=a[i]*b[i]%MOD;\n\tNTT(c,n,-1);return c;\n}\n\nint n,m;\nint s[400000],p[400000];\nlong long a[400000],c[400000],pw2[400000],inv_pw2[400000];\n\nvoid Solve(int l,int r)\n{\n\tif(l==r)return;\n\tint mid=(l+r)>>1;Solve(l,mid),Solve(mid+1,r);\n\tpoly X,Y;\n\tfor(int i=l;i<=mid;i++)X.push_back(pw2[s[max(min(n,i),0)]]);\n\tfor(int i=mid+1;i<=r;i++)Y.push_back(inv_pw2[s[max(min(n,i),0)]]);\n\tX=X*Y;for(int i=0;i<X.size();i++)if(i+l+(mid+1)>=0&&i+l+(mid+1)<=2*n)c[i+l+(mid+1)]=add(c[i+l+(mid+1)],X[i]);\n}\n\nint main()\n{\n\tinit_w(20);\n\tscanf(\"%d%d\",&n,&m);for(int i=1;i<=n;i++)scanf(\"%d\",&a[i]);for(int i=1;i<=m;i++)scanf(\"%d\",&p[i]),s[p[i]]=1;\n\tfor(int i=1;i<=n;i++)s[i]+=s[i-1];//for(int i=1;i<=n;i++)printf(\"%d \",s[i]);puts(\"\");\n\tpw2[0]=1;for(int i=1;i<=n;i++)pw2[i]=add(pw2[i-1],pw2[i-1]);\n\tinv_pw2[n]=INV(pw2[n]);for(int i=n-1;i>=0;i--)inv_pw2[i]=add(inv_pw2[i+1],inv_pw2[i+1]);\n\tSolve(-n,2*n);\n\t//for(int i=0;i<=2*n;i++)printf(\"%lld \",c[i]*pw2[m]%MOD);puts(\"\");\n\tlong long ans=0;for(int i=1;i<=n;i++)ans=add(ans,sub(pw2[m]*c[2*i-1]%MOD,min(i+n,2*n-i+1))*a[i]%MOD);\n\tprintf(\"%lld\",ans*INV(sub(pw2[m],1))%MOD);\n}\n```\n\n**\u540e\u8bb0**\n\n\u4e00\u9053\u975e\u5e38\u5e38\u89c4\u4ee5\u81f3\u4e8e\u6709\u70b9\u65e0\u804a\u7684\u6570\u5b66\u9898\u3002\u4ece\u5b98\u65b9\u9898\u89e3\u7684\u8bf4\u660e\u6765\u770b\uff0c\u8fd9\u9898\u4f3c\u4e4e\u662f\u4e34\u65f6\u51d1\u4e0a\u53bb\u7684\u3002\u5e0c\u671b\u4ee5\u540e CF \u9898\u76ee\u8d28\u91cf\u80fd\u518d\u8fdb\u4e00\u6b65\u5427\u3002",
        "postTime": 1645706704,
        "uid": 112794,
        "name": "\u5468\u5b50\u8861",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1641E\u3010Special Positions\u3011"
    },
    {
        "content": "[\u66f4\u597d\u7684\u4f53\u9a8c](https://legendgod.ml/)\n\n[\u9898\u76ee\u5730\u5740](https://codeforces.com/problemset/problem/1641/E)\n\n\u9898\u610f\uff1a\n\n\u7ed9\u5b9a\u957f\u5ea6\u4e3a $n$ \u7684\u6570\u7ec4 $a$\uff0c\u957f\u5ea6\u4e3a $m$ \u7684\u6570\u7ec4 $p$\uff0c\u5176\u4e2d $1 \\le p_i \\le n$ \uff0c\u800c\u4e14 $\\forall j, p_i \\not = p_j$\u3002\n\n\u5728 $p$ \u4e2d\u7b49\u6982\u7387\u9009\u5b9a\u4e00\u4e2a\u975e\u7a7a\u96c6\u5408\uff0c\u6c42 $\\sum_{i = 1} ^ n a_i \\times |i - p_j|$ \u5176\u4e2d $p_j$ \u662f\u9009\u5b9a\u96c6\u5408\u4e2d $|i - p_j|$ \u6700\u5c0f\u7684 $p$\u3002\n\n$m \\le n \\le 10^5$\u3002\n\n---\n\n- \u6211\u4eec\u8003\u8651\u5148\u5c06\u671f\u671b\u62c6\u5206\u6210\u65b9\u6848\u6570\u9664\u4ee5\u603b\u65b9\u6848\uff0c\u5f88\u663e\u7136\u603b\u65b9\u6848\u5c31\u662f $2^m - 1$\u3002\n\n- \u7136\u540e\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570 $a_i$ \u672c\u8d28\u4e0a\u662f\u6ca1\u6709\u5f71\u54cd\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8ba1\u7b97\u540e\u9762\u90e8\u5206\u603b\u5171\u8d21\u732e\u7684\u6b21\u6570\u5c31\u597d\u4e86\u3002\n\n- \u518d\u8005\u6211\u4eec\u53d1\u73b0 $m$ \u662f\u5f88\u5927\u7684\uff0c\u6240\u4ee5\u80af\u5b9a\u662f\u4e0d\u80fd\u679a\u4e3e\u548c\u5b50\u96c6\u6709\u5173\u7684\u4e1c\u897f\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5c06\u6570\u7ec4 $p$ \u8868\u793a\u6210 $\\sum_{i = 1} ^ n [i \\in P]$ \u7684\u5f62\u5f0f\u3002\n\n\u6839\u636e\u4ee5\u4e0a\u7684\u53d1\u73b0\u6211\u4eec\u53ef\u4ee5\u76f4\u89c2\u611f\u53d7\u5230\u8fd9\u4e2a\u80af\u5b9a\u662f\u548c\u5377\u79ef\u6709\u5173\u7684\u5f62\u5f0f\u3002\n\n\u5982\u679c\u662f\u4e00\u4e2a\u5377\u79ef\uff0c\u6211\u4eec\u80af\u5b9a\u662f\u9700\u8981\u5c06\u6570\u7ec4\u7ffb\u8f6c\uff0c\u6211\u4eec\u4e0d\u59a8\u8003\u8651\u7528 $i + j = 2\\times pos $ \u7684\u5f62\u5f0f\u8868\u793a\u6700\u7ec8\u7684\u4f4d\u7f6e\u3002\n\n\u6211\u4eec\u8003\u8651\u5de6\u53f3\u4e24\u8fb9\u7684\u8d21\u732e\uff0c\u4e5f\u5c31\u662f\u5c06\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u8d21\u732e\u5206\u5f00\u7b97\uff0c\u5c31\u662f $i, -i, j, -j$ \u56db\u79cd\u72b6\u51b5\u3002\n\n\u6211\u4eec\u5c31\u62ff $i$ \u4e3e\u4f8b\u5b50\uff1a\n\n\u5bf9\u4e8e $i$ \u5bf9\u4e8e $pos$ \u7684\u8d21\u732e\uff0c\u4e5f\u5c31\u662f\u5de6\u8fb9\u5411\u53f3\u7684\u8d21\u732e\uff0c\u663e\u7136\u6709\u533a\u95f4 $(i, 2 \\times pos - i]$ \u662f\u4e0d\u80fd\u88ab\u8ba1\u7b97\u5230\u4e86\u3002\n\n> \u8003\u8651\u4e00\u8fb9\u53d6\u5230\uff0c\u4e3a\u4e86\u9632\u6b62\u4e4b\u540e\u7b97\u91cd\u3002\n> \n> \u5f53\u7136\u8ba1\u7b97\u540e\u9762\u7684\u65f6\u5019\u5c31\u4e0d\u9700\u8981\u53d6\u5230\u4e86\u3002\n\n\u6211\u4eec\u4e0d\u59a8\u8003\u8651\u4f7f\u7528\u524d\u7f00\u79ef\u7684\u5f62\u5f0f\u6765\u8868\u793a\u53d6\u5230\u7684\u533a\u95f4\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u8ba1\u7b97\u8d21\u732e\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u5206\u6cbb $FFT$ \u5373\u53ef\u3002\n\n> \u90fd\u662f\u5de6\u8fb9\u5411\u53f3\u8fb9\u7684\u8d21\u732e\u3002\n\n\u6211\u4eec\u518d\u8003\u8651\u4e00\u4e0b\u662f\u5426\u8fd8\u6f0f\u6389\u4e86\u4ec0\u4e48\uff0c\u4e00\u4e2a\u70b9\u5728\u6211\u4eec\u8fd9\u6837\u7684\u8ba1\u7b97\u60c5\u51b5\u4e0b\u4f1a\u88ab\u8ba1\u7b97\u51e0\u6b21\uff1f\n\n\u4e5f\u5c31\u662f\u4f5c\u4e3a $i, j$ \u7684\u65f6\u5019\u90fd\u5206\u522b\u88ab\u8ba1\u7b97\u4e86\u4e00\u6b21\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u5728\u8ba1\u7b97\u7684\u65f6\u5019\u4e58\u4e00\u4e2a $\\frac{1}{2}$ \u5373\u53ef\u3002\n\n\u5982\u679c\u8981\u66f4\u8be6\u7ec6\u4e00\u70b9\u53ef\u4ee5\u53c2\u8003\u4ee3\u7801\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nnamespace Legendgod {\n\tnamespace Read {\n//\t\t#define Fread\n\t\t#ifdef Fread\n\t\tconst int Siz = (1 << 21) + 5;\n\t\tchar *iS, *iT, buf[Siz];\n\t\t#define gc() ( iS == iT ? (iT = (iS = buf) + fread(buf, 1, Siz, stdin), iS == iT ? EOF : *iS ++) : *iS ++ )\n\t\t#define getchar gc\n\t\t#endif\n\t\ttemplate <typename T>\n\t\tvoid r1(T &x) {\n\t\t    x = 0;\n\t\t\tchar c(getchar());\n\t\t\tint f(1);\n\t\t\tfor(; !isdigit(c); c = getchar()) if(c == '-') f = -1;\n\t\t\tfor(; isdigit(c); c = getchar()) x = (x << 1) + (x << 3) + (c ^ 48);\n\t\t\tx *= f;\n\t\t}\n\t\ttemplate <typename T, typename...Args>\n\t\tvoid r1(T &x, Args&...arg) {\n\t\t\tr1(x), r1(arg...);\n\t\t}\n\t\t#undef getchar\n\t}\n\nusing namespace Read;\n\nconst int maxn = 2e6 + 5;\nconst int mod = 998244353;\n\nint ksm(int x,int mi) {\n    int res(1);\n    while(mi) {\n        if(mi & 1) res = 1ll * res * x % mod;\n        mi >>= 1;\n        x = 1ll * x * x % mod;\n    }\n    return res;\n}\n\nint Inv(int x) { return ksm(x, mod - 2); }\n\nint n, m;\n\nint lim, rev[maxn], len;\n\nvoid getrev(int x) {\n    lim = 1, len = 0;\n    while(lim <= x) lim <<= 1, ++ len;\n    for(int i = 0; i < lim; ++ i) rev[i] = (rev[i >> 1] >> 1) | ((i & 1) << (len - 1));\n}\n\nconst int G1 = 3, Gi = Inv(G1);\n\nint w[2][21][maxn], inv[maxn];\n\nvoid init(int up) {\n    for(int i = 1; i <= up; ++ i) {\n        w[0][i][0] = w[1][i][0] = 1;\n        int w0 = ksm(G1, (mod - 1) / (1 << i));\n        int w1 = ksm(Gi, (mod - 1) / (1 << i));\n        for(int j = 1; j < (1 << i); ++ j) {\n            w[0][i][j] = 1ll * w[0][i][j - 1] * w0 % mod;\n            w[1][i][j] = 1ll * w[1][i][j - 1] * w1 % mod;\n        }\n    }\n    for(int i = 1; i < (1 << up); ++ i) inv[i] = ksm(i, mod - 2);\n}\n\nvoid NTT(int *A,int opt = 1) {\n    for(int i = 0; i < lim; ++ i) if(i < rev[i]) swap(A[i], A[rev[i]]);\n    for(int mid = 1, c = 1; mid < lim; mid <<= 1, ++ c) {\n        for(int j = 0, s = (mid << 1); j < lim; j += s) {\n            int p = (opt == 1 ? 0 : 1);\n            for(int k = 0; k < mid; ++ k) {\n                int x = A[j + k], y = 1ll * A[j + k + mid] * w[p][c][k] % mod;\n                A[j + k] = (x + y) % mod;\n                A[j + k + mid] = (x - y + mod) % mod;\n            }\n        }\n    }\n    if(opt == -1) {\n        for(int i = 0; i < lim; ++ i) A[i] = 1ll * A[i] * inv[lim] % mod;\n    }\n}\n\nint Mul(const int *s1, const int *s2, int *Ans,int n,int m) {\n    getrev(max(n, m) << 1);\n    static int tmp1[maxn], tmp2[maxn];\n    memset(tmp1, 0, 4 * lim), memcpy(tmp1, s1, n * 4);\n    memset(tmp2, 0, 4 * lim), memcpy(tmp2, s2, m * 4);\n    NTT(tmp1), NTT(tmp2);\n    for(int i = 0; i < lim; ++ i) Ans[i] = 1ll * tmp1[i] * tmp2[i] % mod;\n    NTT(Ans, -1);\n    return n + m;\n}\n\nint F[maxn], G[maxn];\n\nvoid Solve(int *x,int *y,int *Ans,int l,int r) {\n    if(l == r) return ;\n    int mid = (l + r) >> 1;\n    Solve(x, y, Ans, l, mid), Solve(x, y, Ans, mid + 1, r);\n    static int tmp1[maxn], tmp2[maxn], res[maxn];\n    for(int i = l; i <= mid; ++ i) tmp1[i - l] = x[i];\n    for(int i = mid + 1; i <= r; ++ i) tmp2[i - mid - 1] = y[i];\n    int sz = Mul(tmp1, tmp2, res, mid - l + 1, r - mid);\n    for(int i = 0; i < sz; ++ i) Ans[l + mid + 1 + i] = (Ans[l + mid + 1 + i] + res[i]) % mod;\n}\n\nvoid Calc(int *x,int *y,int *z) {\n    memset(z, 0, 16 * n);\n    Solve(x, y, z, 1, 2 * n);\n}\n\nint a[maxn], sp[maxn], sum[maxn];\n\nconst int Inv2 = ksm(2, mod - 2);\n\nint A[maxn], B[maxn], C[maxn];\nint ans[maxn];\n\nsigned main() {\n\tinit(20);\n\tint i, j;\n    r1(n, m);\n    for(i = 1; i <= n; ++ i) r1(a[i]);\n    for(i = 1; i <= m; ++ i) { int c; r1(c); sp[c] = 1; }\n    for(i = 1; i <= 2 * n; ++ i) sum[i] = sum[i - 1] + sp[i];\n    // left i\n    for(i = 1; i <= n; ++ i) A[i] = 1ll * sp[i] * ksm(2, sum[i]) % mod * Inv2 % mod;\n    for(i = 1; i <= 2 * n; ++ i) B[i] = ksm(Inv2, sum[i - 1]);\n    Calc(A, B, C);\n    for(i = 1; i <= n; ++ i) ans[i] = (ans[i] + 1ll * i * C[i * 2] % mod) % mod;\n    // left -j\n    for(i = 1; i <= n; ++ i) A[i] = 1ll * A[i] * i % mod;\n    Calc(A, B, C);\n    for(i = 1; i <= n; ++ i) ans[i] = (ans[i] - C[i * 2] + mod) % mod;\n    // ---\n    memset(A, 0, sizeof(A)), memset(B, 0, sizeof(B));\n    // right -i\n    for(i = 1; i <= n; ++ i) A[i + n] = 1ll * Inv2 * sp[i] % mod * ksm(Inv2, sum[i - 1]) % mod;\n    for(i = 1; i <= n; ++ i) B[i] = 1; // 2 ^ 0\n    for(i = n + 1; i <= 2 * n; ++ i) B[i] = ksm(2, sum[i - n - 1]);\n    Calc(B, A, C);\n    for(i = 1; i <= n; ++ i) ans[i] = (ans[i] - 1ll * i * C[2 * i + 2 * n] % mod + mod) % mod;\n//    for(i = 1; i <= n; ++ i) printf(\"%d%c\", ans[i], \" \\n\"[i == n]);\n    // right j\n    for(i = 1; i <= n; ++ i) A[i + n] = 1ll * A[i + n] * i % mod;\n    Calc(B, A, C);\n    for(i = 1; i <= n; ++ i) ans[i] = (ans[i] + C[2 * i + 2 * n]) % mod;\n    // ---\n    int sum(0);\n    for(i = 1; i <= n; ++ i) sum = (sum + 1ll * ans[i] * a[i] % mod) % mod;\n    sum = 1ll * sum * ksm(2, m) % mod * ksm(ksm(2, m) - 1, mod - 2) % mod;\n    printf(\"%d\\n\", sum);\n\treturn 0;\n}\n\n}\n\n\nsigned main() { return Legendgod::main(), 0; }\n\n```\n",
        "postTime": 1645929823,
        "uid": 151723,
        "name": "legendgod",
        "ccfLevel": 7,
        "title": "CF1641E Special Positions \u9898\u89e3"
    }
]