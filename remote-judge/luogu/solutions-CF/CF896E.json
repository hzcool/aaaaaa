[
    {
        "content": "## \u7b2c\u4e8c\u5206\u5757\u5b66\u4e60\u7b14\u8bb0\n### \u4e00\u4e9b\u5e9f\u8bdd\uff0c\u53ef\u4ee5\u8df3\u8fc7\n**\u8fd9\u662f\u4e00\u79cdlxl\u53d1\u660e\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6240\u4ee5\u8c8c\u4f3c\u53ea\u80fd\u548c\u9898\u76ee\u7ed3\u5408\uff1f\u4f8b\u9898\u4e0d\u591a**  \n[\u8fd9\u9053\u9898](https://www.luogu.com.cn/problem/CF896E)\u7684\u9898\u89e3\u533a\u600e\u4e48\u8fd9\u4e48\u591a\u5361\u5e38\u5927\u7237\u554a\uff0c\u4eba\u5747\u6307\u4ee4\u96c6\u4f18\u5316\u3002\u3002\u3002  \n\u7b14\u8005\u5728\u767e\u5ea6\u4e0a\u4e71\u901b\u65f6\u53d1\u73b0\u4e86[\u745f\u5c3c\u6b27\u91cc\u65af\u6811](http://www.mamicode.com/info-detail-2406447.html)\uff0c\u7136\u540e\u5c31\u53bb\u81ea\u5b66\u4e86\u4e0b\uff0c\u5c31\u6709\u4e86\u8fd9\u7bc7\u9898\u89e3\u3002  \n\u7ed3\u679c\u8fd9\u4e2a\u7b97\u6cd5\u4e5f\u53eb\u7b2c\u4e8c\u5206\u5757\uff1f\u540e\u6765\u624d\u53d1\u73b0\u4e0a\u9762\u7684\u745f\u5c3c\u6b27\u91cc\u65af\u6811\u662f\u642c\u4e86[\u8fd9\u7bc7\u9898\u89e3](https://www.luogu.com.cn/blog/_post/57071)\u7684/kk  \n\n### \u7b2c\u4e8c\u5206\u5757\u89e3\u51b3\u7684\u95ee\u9898\n1. \u533a\u95f4\u5bf9\u4e8e\u6240\u6709\u5927\u4e8e $x$ \u7684\u6570\u51cf\u53bb $x$\n2. \u8be2\u95ee\u533a\u95f4\u4e2d\u6709\u591a\u5c11\u4e2a\u6570\u7b49\u4e8e $x$\n\n### \u57fa\u7840\u90e8\u5206\uff08For CF896E\n\u6ce8\u610f\u9898\u76ee\u4e2d\u7684\u6570\u636e\u8303\u56f4\uff1a$a_i,x\\le10^5$\uff0c\u8fd9\u4fbf\u662f\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u7684\u5173\u952e\u3002  \n\u5f15\u7528\u67d0\u4f4d\u5de8\u4f6c\u8bf4\u8fc7\u7684\u8bdd\uff1a`\u770b\u5230\u4e00\u9053Ynoi\u9898\uff0c\u6211\u4eec\u7b2c\u4e00\u60f3\u5230\u7684\u5e94\u8be5\u662f\u5361\u5e38\u548c\u5206\u5757`\u3002  \n\u6240\u4ee5\u6211\u4eec\u9996\u5148\u5bf9\u533a\u95f4\u8fdb\u884c\u5206\u5757\u3002  \n\u56e0\u4e3a\u6b64\u9898\u503c\u57df\u5f88\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5728\u503c\u57df\u4e0a\u641e\u70b9\u5927\u65b0\u95fb\u3002  \n\u6211\u4eec\u5bf9\u6bcf\u4e2a\u5757\u7684\u503c\u57df\u5f00\u4e00\u4e2a\u8282\u70b9\uff0c\u5e76\u5bf9\u6bcf\u4e2a\u5e8f\u5217\u4e0a\u7684\u4f4d\u7f6e\uff0c\u6307\u5411\u8fd9\u4e2a\u503c\u57df\u7684\u8282\u70b9\u3002  \n\u7136\u540e\u8fd9\u6837\u67e5\u8be2\u64cd\u4f5c\u4e5f\u5c31\u57fa\u672c\u5b8c\u6210\u4e86\uff0c\u53ea\u9700\u8981\u67e5\u8be2\u6709\u591a\u5c11\u4e2a\u8282\u70b9\u6307\u5411\u503c\u57df\u8282\u70b9\u5c31\u597d\u4e86\u3002  \n\u5177\u4f53\u7ef4\u62a4\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u662f $O(\\text{\u503c\u57df}\\times\\sqrt{N})$ \u7684\u3002  \n\u63a5\u4e0b\u6765\u6211\u4eec\u8ba8\u8bba\u4e00\u4e0b\u5982\u4f55\u533a\u95f4\u4fee\u6539\u3002  \n\u533a\u95f4\u4fee\u6539\u5176\u5b9e\u5f88\u66b4\u529b\uff0c\u76f4\u63a5\u66b4\u529b\u679a\u4e3e\u6bcf\u4e2a\u5c0f\u4e8e\u7b49\u4e8e $x$ \u7684\u503c\u57df\u8282\u70b9\u5c31\u597d\u4e86\u3002  \n\u8fd9\u6837\u590d\u6742\u5ea6\u662f $O(\\text{\u5c0f\u4e8ex\u7684\u4e0d\u540c\u6570\u4e2a\u6570)}$\u7684\uff0c\u663e\u7136\u5f88\u5bb9\u6613\u88ab\u5361\u6389\u3002  \n\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u52a0\u4e00\u4e2a\u5e38\u6570\u4f18\u5316\uff0c\u8bb0\u5f55\u533a\u95f4\u6700\u5927\u503c $max$\uff0c\u5982\u679c $x\\le max$ \u65f6\uff0c\u6211\u4eec\u76f4\u63a5\u66b4\u529b\u6539\u3002  \n\u5426\u5219\u5bf9\u4e8e\u90a3\u4e9b\u6bd4 $max$ \u5c0f\u7684\u4f4d\u7f6e\uff0c\u5e76\u628a\u5b83\u4eec\u52a0\u4e0a\u4e00\u4e2a $max$\uff0c\u6700\u540e\u6807\u8bb0\u8fd9\u4e2a\u533a\u95f4\u9700\u8981\u5168\u5c40\u51cf\u53bb $max$\uff08\u61d2\u6807\u8bb0\u3002  \n\u52a0\u4e86\u8fd9\u4e2a\u4f18\u5316\u5c31\u8db3\u4ee5\u8fc7\u4e86 CF896E \u4e86QwQ\uff0c\u5728\u8fd9\u91cc\u8d34\u4e00\u4e0b\u4ee3\u7801\u3002  \n\uff08\u8fd8\u662f\u5728\u7ebf\u7b97\u6cd5  \n```cpp\n#include<bits/stdc++.h>\n#define SZ 333//\u5757\u7684\u5927\u5c0f\n#define L(a) ((a)*SZ-SZ+1)//\u67d0\u4e2a\u5757\u5de6\u7aef\u70b9\n#define R(a) ((a)*SZ)//\u67d0\u4e2a\u5757\u53f3\u7aef\u70b9\nusing namespace std;\ntemplate<typename T>inline void read(T &x)\n{//\u5feb\u8bfb\uff0c\u8fd9\u600e\u4e48\u80fd\u53eb\u5361\u5e38\u5462\uff08doge\n\tx=0;char c=getchar(),f=0;\n\tfor(;c<'0'||c>'9';c=getchar()) if(c=='-') f=1;\n\tfor(;c>='0'&&c<='9';c=getchar()) x=(x<<1)+(x<<3)+(c^48);\n\tx=(f?-x:x);\n}\ntemplate<typename T>inline void print(T x)\n{\n\tif(x<0) putchar('-'),x=-x;\n\t{if(x>9) print(x/10);}putchar(x%10+48);\n}\nstruct node{int rt,nm;}g[405][110005];//\u6bcf\u4e2a\u5757\u5185\u503c\u57df\u7ed3\u6784\u4f53\uff0crt\u662f\u503c\u57df\u5bf9\u5e94\u7684\u7956\u5148\uff0cnum\u662f\u8fd9\u4e2a\u503c\u51fa\u73b0\u6b21\u6570\nint n,Q,bl[110005],fa[110005],v[110005],a[110005],mx[110005],lz[110005];\n//bl\u662f\u5206\u5757\u4e2d\u7684\u67d0\u4e2a\u8282\u70b9\u5c5e\u4e8e\u54ea\u4e2a\u5757\uff0ca\u662f\u521d\u59cb\u7684\u6570\u7ec4\u503c\uff0cv\u662f\u4e00\u4e2a\u5e76\u67e5\u96c6\u8282\u70b9\u5bf9\u5e94\u7684\u6743\u503c\n//fa\u662f\u5e76\u67e5\u96c6\u7684\u7956\u5148\u6570\u7ec4\uff0cmx\u662f\u533a\u95f4\u6700\u5927\u503c\uff0clz\u662f\u61d2\u6807\u8bb0\ninline int getf(int x) {return x==fa[x]?x:fa[x]=getf(fa[x]);}\n//\u5e76\u67e5\u96c6\u627e\u7956\u5148\uff0c\u81ea\u5e26\u8def\u5f84\u538b\u7f29\uff08\ninline void push(int x)//\u4e0b\u538b\u4e00\u4e2a\u6807\u8bb0\n{\n\tfor(int i=L(x),e=R(x);i<=e;++i) a[i]=v[getf(i)],g[x][a[i]].rt=g[x][a[i]].nm=0,a[i]-=lz[x];\n\t//\u904d\u5386\u8fd9\u4e2a\u5757\u4e2d\u7684\u6240\u6709\u5143\u7d20\uff0c\u628a\u8fd9\u4e2a\u5757\u7684\u4e1c\u897f\u585e\u56dea\u4e2d\n\tlz[x]=0;for(int i=L(x),e=R(x);i<=e;++i) fa[i]=0;//\u628a\u8fd9\u4e2a\u533a\u95f4\u6e05\u7a7a\n}\ninline void init(int x)//\u521d\u59cb\u5316\u4e00\u4e2a\u5757\n{\n\tmx[x]=0;\n\tfor(int i=L(x),e=R(x);i<=e;++i)\n\t{\n\t\tmx[x]=max(mx[x],a[i]),++g[x][a[i]].nm;//\u8bb0\u5f55\u533a\u95f4\u6700\u5927\u503c\u4ee5\u53ca\u67d0\u4e2a\u503c\u57df\u4f4d\u7f6e\u5143\u7d20\u4e2a\u6570\n\t\tif(g[x][a[i]].rt) fa[i]=g[x][a[i]].rt;else v[i]=a[i],g[x][a[i]].rt=fa[i]=i;\n\t\t//\u5982\u679c\u8fd9\u4e2a\u70b9\u5df2\u7ecf\u6709\u503c\u57df\u8282\u70b9\u5b58\u5728\u4e86\uff0c\u90a3\u5c31\u76f4\u63a5\u628a\u5f53\u524d\u8282\u70b9\u5408\u5e76\u5230\u5148\u524d\u8282\u70b9\u4e0a\u53bb\n\t\t//\u5426\u5219\u65b0\u5efa\u4e00\u4e2a\u503c\u57df\u8282\u70b9\n\t}\n}\ninline void chng(int x,int a,int b)//\u628a\u503c\u57df\u4e3aa\u7684\u4f4d\u7f6e\u548c\u503c\u57df\u4e3ab\u7684\u5408\u5e76\n{\n\tnode &s=g[x][a],&t=g[x][b];//\u627e\u5230\u4e24\u4e2a\u8282\u70b9\n\tif(t.rt) fa[s.rt]=t.rt;else t.rt=s.rt,v[s.rt]=b;\n\tt.nm+=s.nm,s.nm=s.rt=0;//\u76f4\u63a5\u66b4\u529b\u5408\u5e76\uff0c\u5e76\u628as\u7ed9\u5220\u9664\n\t//\u5982\u679cb\u4e0d\u5b58\u5728\u5c31\u76f4\u63a5\u5411a\u8d3a\u5c31\u597d\u4e86\uff0c\u76f4\u63a5\u628aa\u6307\u5411b\n}\ninline void atag(int x,int ad)//\u6253\u6807\u8bb0\n{\n\tif(ad<=mx[x]-lz[x]-ad) {for(int i=lz[x]+1;i<=lz[x]+ad;++i) if(g[x][i].rt) chng(x,i,i+ad);lz[x]+=ad;}\n\telse {for(int i=mx[x];i>lz[x]+ad;i--) if(g[x][i].rt) chng(x,i,i-ad);mx[x]=min(mx[x],lz[x]+ad);}\n\t//\u521a\u521a\u8bf4\u7684\u5206\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\uff0c\u5e94\u8be5\u8fd8\u633a\u597d\u61c2\u7684\u5427\uff0c\u4e0d\u89e3\u91ca\u4e86\n}\ninline void chang(int l,int r,int x)//\u533a\u95f4\u4fee\u6539\u64cd\u4f5c\n{\n\tint p=bl[l],q=bl[r];push(p);if(p^q) push(q);//\u90fd\u5148\u4e0b\u63a8tag\n\tif(p^q)\n\t{\n\t\tfor(int i=l,e=R(p);i<=e;++i) if(a[i]>x) a[i]-=x;\n\t\tfor(int i=L(q);i<=r;++i) if(a[i]>x) a[i]-=x;//\u66b4\u529b\u7684\u8fb9\u5757\n\t\tfor(int i=p+1;i<=q-1;++i) atag(i,x);//\u6574\u5757\u6253\u6807\u8bb0\n\t\tinit(p),init(q);//\u518d\u8bb0\u5f55\u56de\u53bb\u5757\u7684\u4fe1\u606f\n\t}\n\telse {for(int i=l;i<=r;++i) if(a[i]>x) a[i]-=x;init(p);}\n\t//\u5426\u5219\u76f4\u63a5\u5b8c\u5168\u7684\u66b4\u529b\uff01\n}\ninline int query(int l,int r,int x)//\u533a\u95f4\u67e5\u8be2\u64cd\u4f5c\n{\n\t//\u53ea\u9700\u8981\u5bf9\u4e8e\u6bcf\u4e2a\u5757\u6765\u67e5\u8be2\u503c\u57df\u4e0a\u6240\u5bf9\u5e94\u7684\u4f4d\u7f6e\u51fa\u73b0\u6b21\u6570\u5373\u53ef\n\tint p=bl[l],q=bl[r],res=0;//\u5206\u5757\u57fa\u672c\u5957\u8def\uff0c\u548cchang\u5dee\u4e0d\u591a\n\tif(p^q)\n\t{\n\t\tfor(int i=l,e=R(p);i<=e;++i) if(v[getf(i)]-lz[p]==x) ++res;\n\t\tfor(int i=L(q);i<=r;++i) if(v[getf(i)]-lz[q]==x) ++res;\n\t\tfor(int i=p+1;i<=q-1;i++) if(x+lz[i]<=100000) res+=g[i][x+lz[i]].nm;//\u9632\u6b62\u8d8a\u754c\n\t}\n\telse for(int i=l;i<=r;++i) if(v[getf(i)]-lz[p]==x) ++res;\n\treturn res;\n}\nint main()\n{\n\tread(n),read(Q);for(int i=1;i<=n;i++) read(a[i]),bl[i]=(i-1)/SZ+1;\n\tfor(int i=bl[1];i<=bl[n];i++) init(i),lz[i]=0;\n\tfor(int f,l,r,x;Q--;)\n\t{\n\t\tread(f),read(l),read(r),read(x);\n\t\tif(f==1) chang(l,r,x);else print(query(l,r,x)),putchar('\\n');\n\t}\n\treturn 0;\n}\n```\n### \u8fdb\u9636\uff08For \u4e94\u5f69\u6591\u6593\u7684\u4e16\u754c\n\u521a\u770b\u5230[\u8fd9\u9898](https://www.luogu.com.cn/problem/P4117)\u7684\u65f6\u5019\uff0c\u6211\u5c31\u5355\u7eaf\u5730\u4ee5\u4e3a\u5b83\u662f\u4e2a\u53cc\u500d\u7ecf\u9a8c\u3002\u4e8e\u662f\u6211\u4ea4\u4e86\u4e00\u53d1\uff0c\u7ed3\u679c\uff1a  \n![](https://cdn.luogu.com.cn/upload/image_hosting/np6a9056.png)  \n\u4e8e\u662f\u6211\u53c8\u4ed4\u7ec6\u770b\u4e86\u4e00\u904d\u7ec8\u4e8e\u53d1\u73b0\u6709\u70b9\u4e0d\u5bf9\u52b2\uff0c\u6570\u636e\u8303\u56f4\u6539\u6210\u4e86\uff1a$x\\le5\\times10^5$\u3002  \n\u6539\u4e86\u6570\u636e\u8303\u56f4\u4e4b\u540e\u53c8\u4ea4\u4e86\u4e00\u53d1\uff0c\u7ed3\u679c\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/xevqbxpy.png)  \n~~\u770b\u6765\u8fd8\u662f\u4e0d\u80fd\u6295\u673a\u53d6\u5de7\uff08~~  \n\u8fd9\u9898\u4e3b\u8981\u6bd2\u7624\u4e4b\u5904\u5c31\u662f\u5361\u4e86\u4f60\u7684\u7a7a\u95f4\uff0c\u6211\u4eec\u4e4b\u524d\u7684\u503c\u57df\u5e76\u67e5\u96c6\u5c31\u76f4\u63a5\u6ca1\u7528\u4e86\u3002  \n\u90a3\u8fd9\u9898\u5c31\u4e0d\u80fd\u7528 \u7b2c\u4e8c\u5206\u5757 \u505a\u4e86\u5417\uff1f\u7b54\u6848\u662f\u5426\u5b9a\u7684\u3002  \n\u7528\u4e00\u4e2a\u5e38\u89c4\u5957\u8def\uff1a\u79bb\u7ebf\uff01  \n\u6211\u4eec\u9996\u5148\u628a\u6240\u6709\u8be2\u95ee\u79bb\u7ebf\u4e0b\u6765\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5757\uff0c\u5206\u522b\u6a21\u62df\u6bcf\u6b21\u8be2\u95ee\u3001\u4fee\u6539\u3002  \n\u6700\u540e\u628a\u6bcf\u4e2a\u5757\u7684\u64cd\u4f5c\u7d2f\u52a0\u8d77\u6765\u5c31\u597d\u4e86\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u6b63\u786e\u7684\u7b54\u6848\u3002  \n\uff08\u597d\u50cf\u53ea\u80fd\u79bb\u7ebf\uff0c\u7b14\u8005\u76ee\u524d\u8fd8\u6ca1\u60f3\u5230\u5728\u7ebf\u7684\u505a\u6cd5\u3002  \n\u4ee3\u7801\u81f3\u5c11\u6bd4\u4e0a\u9762\u7684\u5728\u7ebf\u7b97\u6cd5\u7b80\u5355\uff0c\u4e5f\u6ca1\u600e\u4e48\u5361\u5e38\u5c31\u8fc7\u4e86\uff0c\u6240\u4ee5\u5c31\u4e0d\u8d34\u4e86\n\n### \u4e60\u9898\n[\uff08\u6a21\u677f\uff09Link of Luogu](https://www.luogu.com.cn/problem/CF896E)  \n[\uff08\u6a21\u677f\uff09Link of Codeforces](http://codeforces.com/problemset/problem/896/E)  \n[\u6a21\u677f\uff08\u52a0\u5f3a\u7248\uff09](https://www.luogu.com.cn/problem/P4117)  ",
        "postTime": 1601529553,
        "uid": 44805,
        "name": "Leap_Frog",
        "ccfLevel": 7,
        "title": "\u7b2c\u4e8c\u5206\u5757 \u5b66\u4e60\u7b14\u8bb0"
    },
    {
        "content": "update:\u4fee\u6539\u4e86\u4e00\u4e2a\u9519\u8bef\u3002\n\n\u7b2c\u4e8c\u5206\u5757\u3002\n\n\u5176\u5b9e\u8fd9\u4e2a\u9898\u8fd8\u662f\u76f8\u5bf9\u597d\u60f3\u7684\uff0c\u4e5f\u6bd4\u8f83\u7b80\u5355\uff08\u4e2a\u4eba\u8ba4\u4e3a\u662f\u5927\u5206\u5757\u7cfb\u5217\u6700\u7b80\u7b54\u7684\u9898\uff09\u3002\n\n\u505a Ynoi \u7684\u9898\u9996\u5148\u770b\u6570\u636e\u8303\u56f4\u548c\u65f6\u7a7a\u9650\u5236\u3002\n\n\u5728 CF \u4e0a\u8fd9\u4e2a\u9898\u4e0d\u5361\u7a7a\u95f4\uff0c\u4f46\u6709\u4e00\u4e2a\u52a0\u5f3a\u7248\uff08\u89c1P4117\uff09\u53ea\u6709 $62.5 MB$ \u7684\u7a7a\u95f4\u4e14\u6570\u636e\u8303\u56f4\u6709 $5$ \u500d\u3002\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4f18\u5316\u3002\n \n\u800c\u5206\u5757\u6700\u597d\u7684\u7a7a\u95f4\u4f18\u5316\u65b9\u5f0f\u662f\u5272\u5f00\u6765\u4e00\u5757\u4e00\u5757\u5904\u7406\uff0c\u8fd9\u6837\u80fd\u5c06\u7a7a\u95f4\u4f18\u5316\u5230\u7ebf\u6027\u3002\n\n\u4f46\u8fd9\u4e5f\u5c31\u8981\u6c42\u5757\u4e0e\u5757\u4e4b\u95f4\u662f\u72ec\u7acb\u7684\uff0c\u5e76\u4e14**\u5757\u5185\u4fee\u6539\u67e5\u8be2\u603b\u590d\u6742\u5ea6\u5fc5\u987b\u90fd\u662f $\\operatorname{O}(m)$ \u7684** \uff0c\u624d\u53ef\u4ee5\u6ee1\u8db3\u6211\u4eec\u7684\u8981\u6c42\uff08\u8fd9\u5176\u5b9e\u53ef\u4ee5\u770b\u6210\u4e00\u4e2a\u63d0\u793a\uff09\u3002\n\n\u7531\u4e8e\u5757\u7684\u503c\u57df\u4e0e $n$ \u540c\u9636\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5229\u7528\u8fd9\u4e2a\u503c\u57df\uff08\u5176\u5b9e\u8fd9\u53c8\u662f\u4e00\u4e2a\u63d0\u793a\uff09\u3002\n\n\u6211\u4eec\u8003\u8651\u8fd9\u4e2a\u5757\u5185\u90e8\u7684\u6700\u5927\u503c\u3002\u4e0d\u59a8\u5c06\u5176\u8bbe\u7f6e\u4e3a $mx$\uff0c\u5e76\u8bbe\u7f6e\u4e00\u4e2a\u533a\u95f4\u51cf\u7684 $tag$\uff08\u56e0\u4e3a\u6211\u4eec\u53ea\u4f1a\u5c06\u6570\u503c\u51cf\u5c0f\u800c\u4e0d\u4f1a\u589e\u5927\uff09\u3002\n\n\u5982\u679c $mx\\le x\\times 2$\uff0c\u5219\u6211\u4eec\u76f4\u63a5\u628a\u6240\u6709\u5927\u4e8e $x$ \u7684\u6570\u51cf\u53bb $x$\u3002\n\n\u5982\u679c $mx>x\\times 2$\uff0c\u5219\u6211\u4eec\u628a\u5c0f\u4e8e $x$ \u7684\u6570\u52a0\u4e0a $x$\uff0c\u5e76\u6253\u4e0a\u533a\u95f4\u51cf\u7684\u6807\u8bb0\u3002\n\n\u7136\u540e\u6700\u5927\u503c\u968f\u4e4b\u66f4\u65b0\u5373\u53ef\u3002\n\n\u8fd9\u6837\u6211\u4eec\u53d1\u73b0\uff0c\u7531\u4e8e\u6700\u5927\u503c\u4e0e $n$ \u540c\u9636\uff0c\u56e0\u6b64\u4e00\u4e2a\u5757\u5185\u7684\u603b\u590d\u6742\u5ea6\u662f $\\operatorname{O}(n)$\u3002\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u600e\u4e48\u7ef4\u62a4\u6bcf\u4e2a\u6570\u7684\u503c\u3002\u4e00\u5f00\u59cb\u6211\u60f3\u5230\u7684\u65b9\u6cd5\u662f\u7528\u4e00\u4e2a\u94fe\u8868\u6765\u7ef4\u62a4\uff0c\u7ef4\u62a4\u6bcf\u4e2a\u503c\uff0c\u78b0\u5230\u5408\u5e76\u76f4\u63a5\u63a5\u5230\u5c3e\u90e8\u3002\n\n\u540e\u6765\u53c2\u8003\u4e86\u4e00\u4e0b[\u51fa\u9898\u4eba\u9898\u89e3](http://olddrivertree.blog.uoj.ac/blog/4715)\uff08\u51fa\u9898\u4eba\u7ed9\u51fa\u4e86 $3$ \u4e2d\u5199\u6cd5\uff09\uff0c\u53d1\u73b0\u90a3\u4e2a\u5e76\u67e5\u96c6\u6700\u597d\u5199\u3002\n\n\u5177\u4f53\u7684\u65b9\u6cd5\u662f\uff0c\u5bf9\u6bcf\u4e2a\u503c\u5f00\u4e00\u4e2a\u5e76\u67e5\u96c6\uff0c\u7136\u540e\u8bb0\u5f55\u8fd9\u4e2a\u5e76\u67e5\u96c6\u7684 $size$\u3002\n\n\u4fee\u6539\u7684\u65f6\u5019\u76f4\u63a5\u5408\u5e76\u4e24\u4e2a\u503c\u7684\u5e76\u67e5\u96c6\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u76f4\u63a5\u8f93\u51fa\u8fd9\u4e2a\u5e76\u67e5\u96c6\u7684 $size$\u3002\n\n\u5982\u679c\u662f\u96f6\u6563\u5757\u4fee\u6539\uff0c\u5c31\u76f4\u63a5\u91cd\u6784\uff1b\u96f6\u6563\u5757\u67e5\u8be2\uff0c\u5c31\u901a\u8fc7\u5e76\u67e5\u96c6\u627e\u5230\u8303\u56f4\u5185\u6bcf\u4e2a\u6570\u7684\u503c\uff0c\u66b4\u529b\u7edf\u8ba1\u5373\u53ef\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define rg register\n#define il inline\nusing namespace std;\ninline int read(){\n\tregister int x=0;\n\tregister bool f=0;\n\tregister char c=getchar();\n\twhile(c<'0'||c>'9'){\n\t\tif(c=='-') f=1;\n\t\tc=getchar();\n\t}\n\twhile(c>='0'&&c<='9'){\n\t\tx=(x<<3)+(x<<1)+c-48;\n\t\tc=getchar();\n\t}\n\treturn f?-x:x;\n}\nchar cr[200];int tt;\ninline void print(register int x,register char k='\\n') {\n    if(!x) putchar('0');\n    if(x < 0) putchar('-'),x=-x;\n    while(x) cr[++tt]=x%10+'0',x/=10;\n    while(tt) putchar(cr[tt--]);\n    putchar(k);\n}\nconst int maxn=500050;\nstruct node{\n    int l,r,opt,x;\n}q[maxn];\nint ans[maxn],n,m,fa[maxn],rt[maxn],cnt[maxn],d[maxn];\nint L[maxn],R[maxn],lsh[maxn],tot,a[maxn],bl;\nint mx,tag,l,r,tmp,ql,qr,x;\nil int find(rg int x){\n\treturn x==fa[x]?x:fa[x]=find(fa[x]);\n}\nil void merge(rg int x,rg int y){\n\tif(rt[y]){\n\t\tfa[rt[x]]=rt[y];\n\t}\n\telse{\n\t\trt[y]=rt[x];\t\n\t\tlsh[rt[y]]=y;\n\t}\n\tcnt[y]+=cnt[x];\n\trt[x]=cnt[x]=0;\n}\nil void build(){\n\tmx=tag=tot=0;\n\tmemset(rt,0,sizeof(rt));\n\tmemset(cnt,0,sizeof(cnt));\n\tfor(rg int i=l;i<=r;i++){\n\t\tmx=max(mx,a[i]);\n\t\tif(rt[a[i]])fa[i]=rt[a[i]];\n\t\telse{\n\t\t\trt[a[i]]=fa[i]=i;\n\t\t\tlsh[i]=a[i];\n\t\t}\n\t\tcnt[a[i]]++;\n\t}\n}\nil void modify(){\n\tif((x<<1)<=mx-tag){\n\t\tfor(int j=tag+1;j<=tag+x;j++) \n\t\t\tif(rt[j]) merge(j,j+x);\n\t\ttag+=x;\n\t}\n\telse{\n\t\tfor(int j=mx;j>tag+x;j--) \n\t\t\tif(rt[j]) merge(j,j-x);\n\t\tif(tag+x<mx) mx=tag+x;\n\t}\n}\nvoid rebuild(){\n\tfor(rg int j=l;j<=r;j++){\n\t\ta[j]=lsh[find(j)];\n\t\trt[a[j]]=cnt[a[j]]=0;\n\t\ta[j]-=tag;\n\t}\n\tfor(int j=l-10;j<=r+10;j++) lsh[j]=0;\n\ttag=mx=tot=0;\n\ttmp=min(qr,r);\n\tfor(rg int j=max(ql,l);j<=tmp;j++){\n\t\ta[j]=a[j]>x?a[j]-x:a[j];\n\t}\n\tfor(rg int j=l;j<=r;j++){\n\t\tmx=max(mx,a[j]);\n\t\tif(rt[a[j]])fa[j]=rt[a[j]];\n\t\telse{\n\t\t\trt[a[j]]=fa[j]=j;\n\t\t\tlsh[j]=a[j];\n\t\t}\n\t\tcnt[a[j]]++;\n\t}\n}\nvoid get(rg int i){\n\tif(x+tag>500000) return;\n\tif(ql<=l&&r<=qr) ans[i]+=cnt[x+tag];\n\telse{\n\t\ttmp=min(r,qr);\n\t\tfor(int j=max(l,ql);j<=tmp;j++)\n\t\t\tif(lsh[find(j)]==tag+x) ans[i]++;\n\t}\n}\nsigned main(){\n    n=read();m=read();bl=sqrt(n-1)+1;\n    for(rg int i=1;i<=n;i++){\n    \ta[i]=read();\n\t}\n\tfor(rg int i=1;i<=m;i++){\n\t\tq[i].opt=read();\n\t\tq[i].l=read();\n\t\tq[i].r=read();\n\t\tq[i].x=read();\n\t}\n\tint lxl=1;\n\tL[1]=1;\n\twhile(L[lxl]+bl<n){\n\t\tR[lxl]=L[lxl]+bl-1;\n\t\tlxl++;\n\t\tL[lxl]=R[lxl-1]+1;\n\t}\n\tR[lxl]=n;\n\tfor(rg int srz=1;srz<=lxl;srz++){\n\t\tl=L[srz],r=R[srz];\n\t\tbuild();\n\t\tfor(rg int i=1;i<=m;i++){\n\t\t\tql=q[i].l,qr=q[i].r,x=q[i].x;\n\t\t\tif(r<ql||qr<l) continue;\n\t\t\tif(q[i].opt^2){\n\t\t\t\tif(ql<=l&&r<=qr){\n\t\t\t\t\tmodify();\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\trebuild();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tget(i);\n\t\t\t}\n\t\t}\n\t}\n\tfor(rg int i=1;i<=m;i++) \n\t\tif(q[i].opt==2) print(ans[i]);\n    return 0;\n}\n```",
        "postTime": 1584886564,
        "uid": 120074,
        "name": "BFqwq",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF896E \u3010Welcome home, Chtholly\u3011"
    },
    {
        "content": "\u8fd9\u73a9\u610f\u8c8c\u4f3c\u53eb \u2308\u7a81\u523a\u8d2f\u7a7f\u7b2c\u4e8c\u5206\u5757\u230b \uff1f\n\n\u8fd9\u4e2a\u5c5e\u4e8e\u76ee\u524d $8$ \u79cd\u5df2\u516c\u5f00\u7684\u6700\u590d\u6742\u7684\u6839\u53f7\u6570\u636e\u7ed3\u6784\u9898\u4e4b\u4e00\u3002\n\n\u9898\u610f\uff1a\u7ed9\u51fa\u4e00\u4e2a\u5e8f\u5217 $a_1,a_2,\\cdots,a_n$ \uff0c\u6bcf\u6b21\u533a\u95f4\u4e2d\u5927\u4e8e $x$ \u7684\u6570\u51cf\u53bb $x$ \u6216\u67e5\u8be2\u533a\u95f4\u4e2d\u7ed9\u5b9a\u503c\u7684\u51fa\u73b0\u6b21\u6570\u3002\n\n\u5b9a\u775b\u4e00\u770b\uff0c\u53d1\u73b0\u503c\u57df $10^5$ \uff0c\u548c $n,m$ \u540c\u9636\u3002~~\u54c7\u770b\u6211\u53d1\u73b0\u4e86\u4ec0\u4e48~~\n\n\u6240\u4ee5\u8fd9\u4e2a\u590d\u6742\u5ea6\u80af\u5b9a\u548c\u503c\u57df\u6709\u5173\u3002\u5982\u679c\u5c06\u5e8f\u5217\u5206\u4e3a $\\sqrt N$ \u4e2a\u5757\uff0c\u6bcf\u4e00\u5757\u7684\u6700\u5927\u503c\u52a0\u8d77\u6765\u662f $O(N \\sqrt N)$ \u7684\u3002\u8003\u8651\u5982\u4f55\u5229\u7528\u8fd9\u4e2a\u6027\u8d28\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u6574\u5757\uff0c\u8bbe\u5176\u6700\u5927\u503c\u4e3a $v$ \uff0c\u8981\u5c06\u6240\u6709\u5927\u4e8e $x$ \u7684\u6570\u51cf\u53bb $x$\uff0c\u5219\u5206\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\uff1a\n\n\u5bf9\u4e8e $2x\\geq v$ \uff0c\u5219\u5c06\u6240\u6709 $a_i \\in[x+1,v]$ \u5e73\u79fb\u5230 $[1,v-x]$ \u4e0a\u9762\u3002\u679a\u4e3e\u6bcf\u4e00\u4e2a\u503c\u3002\u8bbe\u7ef4\u62a4\u5757\u7684\u6570\u636e\u7ed3\u6784\u590d\u6742\u5ea6\u4e3a $D$ \uff0c\u5219\u6211\u4eec\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4ee5 $O(D\\cdot(v-x))$ \u7684\u590d\u6742\u5ea6\u4f7f\u5f97\u5757\u5185\u6700\u5927\u503c\u51cf\u5c11\u4e86 $O(v-x)$ \u3002\n\n\u5bf9\u4e8e $2x<v$ \uff0c\u5219\u5c06\u6240\u6709 $[1,x]$ \u5e73\u79fb\u81f3 $[x+1,2x]$ \u4e0a\u9762\uff0c\u5e76\u5728\u5757\u5185\u7ef4\u62a4\u4e00\u4e2a $L$ \u6765\u7edf\u8ba1\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u53f3\u79fb\u4e86\u591a\u5c11\u3002\u8fd9\u91cc $L \\leftarrow L+x$ \u3002\u540c\u7406\uff0c\u6211\u4eec\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4ee5 $O(Dx)$ \u7684\u590d\u6742\u5ea6\u4f7f\u5f97\u5757\u5185\u6700\u5927\u503c\u51cf\u5c11\u4e86 $O(x)$ \u3002\n\n\u96f6\u6563\u5757\u53ef\u4ee5\u76f4\u63a5\u63a8\u5012\u91cd\u6784\u3002\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u8fd9\u6837\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff1a\u53ef\u4ee5 $O(1)$ \u5c06\u6240\u6709 $x$ \u4fee\u6539\u4e3a $x+v$ \u6216 $x-v$ \uff0c\u4e14\u53ef\u4ee5 $O(1)$ \u5355\u70b9\u67e5\u8be2\u503c\u548c\u503c\u7684\u51fa\u73b0\u6b21\u6570\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5757\uff0c\u5728\u503c\u57df\u4e0a\u7ef4\u62a4\u4e00\u4e2a\u5e76\u67e5\u96c6\uff0c\u5e76\u67e5\u96c6\u4e0a\u7ef4\u62a4\u4e00\u4e2a size \uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u505a\u5230 $O(\\alpha(N))\\approx O(1)$ \u4fee\u6539\uff0c\u4e5f\u53ef\u4ee5 $O(1)$ \u67e5\u8be2\u3002\n\n\u4f46\u662f\u5e76\u67e5\u96c6\u4e0d\u80fd\u66b4\u529b\u521d\u59cb\u5316\uff0c\u5426\u5219\u590d\u6742\u5ea6\u5c06\u53d8\u4e3a $O(N^{\\frac{5}{2}})$ \u3002\n\n\u89c2\u5bdf\u5230\u4e00\u4e2a\u6027\u8d28\uff1a\u9664\u975e\u9700\u8981\u91cd\u6784\uff0c\u5426\u5219\u76f8\u540c\u7684\u6570\u5c06\u4e00\u76f4\u76f8\u540c\u3002\u6240\u4ee5\u53ef\u4ee5\u5728\u679a\u4e3e\u5757\u5185\u6240\u6709\u5143\u7d20\u7684\u65f6\u5019\u628a\u76f8\u540c\u7684\u6570\u90fd\u63a5\u5230\u4e00\u8d77\u5e76\u8bb0\u5f55\u9996\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e $r_i$\uff0c\u7136\u540e\u5728 $\\operatorname{Merge}(x,y)$ \u7684\u65f6\u5019\u5224\u65ad $y$ \u662f\u5426\u5b58\u5728\uff0c\u5982\u679c\u5b58\u5728\u5219\u76f4\u63a5\u5c06 $f_x$ \u6539\u5230 $y$ \u4e0a\uff1b\u5426\u5219 $r_y$ \u8d4b\u503c\u4e3a $r_x$ \u3002\n\n\u8fd9\u6837\u7531\u4e8e\u4fdd\u8bc1\u4e86 $f$ \u5185\u7684\u6240\u6709\u5143\u7d20\u5747\u6307\u5411\u6570\u7ec4\u4e2d\u5b58\u5728\u7684\u5143\u7d20\uff0c\u6240\u4ee5\u53ef\u4ee5 $O(\\sqrt N)$ \u521d\u59cb\u5316\u3002\n\n\u8fd9\u6837 \u2308\u7a81\u523a\u8d2f\u7a7f\u7b2c\u4e8c\u5206\u5757\u230b \u5c31\u5b8c\u6210\u4e86\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O((N+Q)\\sqrt N)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(N \\sqrt N)$\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cmath>\n#include <cstring>\n#include <cstdio>\nusing namespace std;\n\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1 << 21], *p1 = buf, *p2 = buf;\n\ninline int qread() {\n\tregister char c = getchar();\n\tregister int x = 0, f = 1;\n\twhile (c < '0' || c > '9') {\n\t\tif (c == '-') f = -1;\n\t\tc = getchar();\n\t}\n\twhile (c >= '0' && c <= '9') {\n\t\tx = (x << 3) + (x << 1) + c - 48;\n\t\tc = getchar();\n\t}\n\treturn x * f;\n}\n\ninline int Abs(const int& x) {return (x > 0 ? x : -x);}\ninline int Max(const int& x, const int& y) {return (x > y ? x : y);}\ninline int Min(const int& x, const int& y) {return (x < y ? x : y);}\n\n//\u4e0a\u9762\u90fd\u662f\u5361\u5e38 \n\nconst int S = 317, N = 100405;\n\nint val[N], f[N];\n//\u5e76\u67e5\u96c6 \nstruct DSU {\n\tint siz[N], rt[N];\n\tinline int GetRoot(int v) {\n\t\tif (f[v] == v) return v;\n\t\treturn (f[v] = GetRoot(f[v]));\n\t}\n\tinline void Merge(int p, int x, int y) {\n\t\tif (rt[y]) {\n\t\t\tf[rt[x] + (p - 1) * S] = rt[y] + (p - 1) * S;\n\t\t} else {\n\t\t\trt[y] = rt[x];\n\t\t\tval[rt[y] + (p - 1) * S] = y;\n\t\t}\n\t\tsiz[y] += siz[x]; rt[x] = siz[x] = 0;\n\t}\n}; \nDSU d[S + 5];\nint n, m, a[N], pos[N], mx[N], tag[N];\n\ninline void Read() {\n\tn = qread(); m = qread();\n\tfor (register int i = 1;i <= n;i++) pos[i] = (i - 1) / S + 1, a[i] = qread();\n}\n//\u53bb\u9664L\u7684\u5f71\u54cd \ninline void Rebuild(int bid) {\n\tfor (register int j = (bid - 1) * S + 1;j <= Min(bid * S, n);j++) {\n\t\ta[j] = val[d[bid].GetRoot(j)];\n\t\td[bid].siz[a[j]] = d[bid].rt[a[j]] = 0;\n\t\ta[j] -= tag[bid];\n\t}\n\tfor (register int j = (bid - 1) * S + 1;j <= Min(bid * S, n);j++) f[j] = 0;\n\ttag[bid] = 0;\n}\n//\u5757\u5185\u91cd\u6784 \ninline void Maintain(int bid) {\n\tmx[bid] = 0;\n\tfor (register int i = (bid - 1) * S + 1;i <= bid * S;i++) {\n\t\tmx[bid] = Max(mx[bid], a[i]);\n\t\tif (!d[bid].rt[a[i]]) f[i] = i, d[bid].rt[a[i]] = i - (bid - 1) * S, val[i] = a[i];\n\t\telse f[i] = d[bid].rt[a[i]] + (bid - 1) * S;\n\t\td[bid].siz[a[i]]++;\n\t}\n}\n\ninline void Prefix() {\n\tfor (register int i = 1;i <= pos[n];i++) Maintain(i);\n}\n//\u96f6\u6563\u70b9\u4fee\u6539 \ninline void Modify(int bl, int l, int r, int x) {\n\tRebuild(bl);\n\tfor (register int j = l;j <= r;j++) {\n\t\tif (a[j] > x) a[j] -= x;\n\t}\n\tMaintain(bl);\n}\n//\u6574\u5757\u4fee\u6539 \ninline void ModifyBlk(int bi, int x) {\n\tif (mx[bi] - tag[bi] >= (x << 1)) {\n\t\tfor (register int j = tag[bi] + 1;j <= tag[bi] + x;j++) {\n\t\t\tif (d[bi].rt[j]) d[bi].Merge(bi, j, j + x);\n\t\t}\n\t\ttag[bi] += x;\n\t} else {\n\t\tfor (register int j = mx[bi];j > tag[bi] + x;j--) {\n\t\t\tif (d[bi].rt[j]) d[bi].Merge(bi, j, j - x);\n\t\t}\n\t\tmx[bi] = Min(tag[bi] + x, mx[bi]);\n\t}\n}\n//\u96f6\u6563\u70b9\u67e5\u8be2 \ninline int qryd(int bl, int l, int r, int x) {\n\tregister int ans = 0;\n\tfor (register int j = l;j <= r;j++) {\n\t\tif (val[d[bl].GetRoot(j)] - tag[bl] == x) ans++;\n\t}\n\t//printf(\"l=%d,r=%d %d\\n\", l, r, ans);\n\treturn ans;\n}\n//\u6574\u5757\u67e5\u8be2 \ninline int qryblk(int bi, int x) {\n\t//printf(\"%d %d\\n\", x + tag[bi], d[bi].siz[x + tag[bi]]);\n\tif (x + tag[bi] > 100000) return 0;\n\treturn d[bi].siz[x + tag[bi]];\n}\n\ninline void Solve() {\n\tfor (register int i = 1;i <= m;i++) {\n\t\tregister int opt = qread(), l = qread(), r = qread(), x = qread();\n\t\tif (opt == 1) {\n\t\t\tregister int bl = pos[l], br = pos[r];\n\t\t\tif (bl == br) {\n\t\t\t\tModify(bl, l, r, x);\n\t\t\t} else {\n\t\t\t\tModify(bl, l, bl * S, x);\n\t\t\t\tModify(br, (br - 1) * S + 1, r, x);\n\t\t\t\tfor (register int j = bl + 1;j < br;j++) ModifyBlk(j, x);\n\t\t\t}\n\t\t} else {\n\t\t\tregister int bl = pos[l], br = pos[r];\n\t\t\tif (bl == br) {\n\t\t\t\tprintf(\"%d\\n\", qryd(bl, l, r, x));\n\t\t\t} else {\n\t\t\t\tregister int ans = qryd(bl, l, bl * S, x) + qryd(br, (br - 1) * S + 1, r, x);\n\t\t\t\tfor (register int j = bl + 1;j < br;j++) ans += qryblk(j, x);\n\t\t\t\tprintf(\"%d\\n\", ans);\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main() {\n\tRead();\n\tPrefix();\n\tSolve();\n\treturn 0;\n}\n```\n\n\u4ee5\u6b64\u7eaa\u5ff5\u4eba\u751f\u4e2d\u7b2c\u4e00\u9053\u5927\u5206\u5757qwq",
        "postTime": 1582005992,
        "uid": 61088,
        "name": "Solystic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF896E \u3010Welcome home, Chtholly\u3011"
    },
    {
        "content": "### **\u4e00\u3001\u9898\u610f**\n\n\u4e3b\u8981\u8d44\u74f7\u4ee5\u4e0b\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n1.\u628a\u533a\u95f4\u3010l,r\u3011\u91cc\u5927\u4e8e/\u5c0f\u4e8e\uff08\u7b49\u4e8e\uff09x\u7684\u6570\u51cf\u53bb/\u52a0\u4e0ax\n\n2.\u6c42\u533a\u95f4\u3010l,r\u3011\u91cc\u6709\u591a\u5c11\u6570\u7b49\u4e8ex\n\n### **\u4e8c\u3001\u7c7b\u4f3c\u9898\u76ee**\n\nNo1.CF896E Welcome home, Chtholly\n\n\u94fe\u63a5\uff1ahttps://www.luogu.org/problemnew/show/CF896E\n\n\u505a\u6cd5\u7b80\u4ecb\uff1a\u677f\u5b50\u9898\n\n\nNo2.YNOI2018 \u4e94\u5f69\u6591\u6593\u7684\u4e16\u754c\n\n\u94fe\u63a5\uff1ahttps://www.luogu.org/problemnew/show/P4117\n\n\u505a\u6cd5\u7b80\u4ecb\uff1a\u677f\u5b50+\u5361\u5e38\n\n### **\u4e09\u3001\u5177\u4f53\u601d\u60f3**\n\n\u5b9e\u9645\u5c31\u662f\u5206\u5757\uff0c\u53ea\u662f\u5757\u7684\u5f62\u5f0f\u548c\u666e\u901a\u7684\u5206\u5757\u4e0d\u540c\u3002\n\n\u7ef4\u62a4\u65f6\uff0c\u6bcf\u4e2a\u5757\u5185\uff0c\u7ef4\u62a4\u8fd9\u8fd9\u4e2a\u5757\u4e2d\u6bcf\u4e00\u79cd\u4e0d\u540c\u7684\u6570\u5b57\u7684\u9996\u5730\u5740\uff0c\u5176\u4ed6\u7684\u6570\u7528\u5e76\u67e5\u96c6\u8fde\u5230\u9996\u5730\u5740\u4e2d\uff0c\u51cf\u7684\u64cd\u4f5c\u5c31\u53ef\u4ee5\u76f4\u63a5\u7528lazy_tag\u6253\u5230\u9996\u5730\u5740\u4e0a\u3002\uff08\u8fb9\u5757\u76f4\u63a5\u66b4\u529b\uff0c\u4e00\u4e2a\u4e00\u4e2a\u626b\u63cf\uff09\n\n\u67e5\u8be2\u65f6\uff0c\u5728\u6240\u5bf9\u5e94\u7684\u5757\u4e2d\u626b\u63cf\u9996\u5730\u5740\u66b4\u529b\u5c31\u884c\u4e86\u3002\uff08\u8fb9\u5757\u65f6\u66f4\u66b4\u529b\uff0c\u4e00\u4e2a\u4e00\u4e2a\u626b\u63cf\uff09\n\n### **\u56db\u3001\u7a0b\u5e8f\u5b9e\u73b0**\n\n\u6ce8\u89e3\u8db3\u591f\uff0c\u6ca1\u4ec0\u4e48\u597d\u8bb2\u7684\u3002\n\n```cpp\n#pragma GCC optimize(\"-O3\") //\u624b\u5f00O3 \n#include<bits/stdc++.h>\n#define sight(c) ('0'<=c&&c<='9')\n#define SIZ 254\n#define OTK 407\n#define Re register\n#define N 100607\n#define fp puts\n#define l(x) (x*SIZ-SIZ+1)\n#define r(x) (x*SIZ)\ninline void read(int &x){\n    static char c;\n    for (c=getchar();!sight(c);c=getchar());\n    for (x=0;sight(c);c=getchar())x=x*10+c-48;\n}\nvoid write(int x){\n\tif (x<10) {putchar('0'+x); return;} \n\twrite(x/10); \n\tputchar('0'+x%10);\n}\ninline void writeln(int x){ \n\tif (x<0) putchar('-'),x*=-1; \n\twrite(x); \n\tputchar('\\n'); \n}\nusing namespace std;\nstruct RR{\n\tint num,root;\n}V[OTK][N];\nint pre[N],pos[N],a[N],ma[N],n,m,be[N],op,l,r,v,p,q,ans,lz[N];\ninline int fa(int x){\n    //\u627e\u8282\u70b9\u7684\u9996\u5730\u5740 \n    while (x^pre[x]) \n\t\tx=pre[x]=pre[pre[x]];  \n\treturn x;\n}\ninline void push(int x) {\n    //\u53d6\u6d88\u61d2\u6807\u8bb0 \n    for (Re int i=l(x);i<=r(x);i++) \n    {\n    \ta[i]=pos[fa(i)];\n\t\tV[x][a[i]].root=V[x][a[i]].num=0;\n\t\ta[i]-=lz[x];\n\t}\n    for (int i=l(x);i<=r(x);i++) \n\t\tpre[i]=0; \n\tlz[x]=0;\n}\ninline void reb(int x){\n    ma[x]=0;\n    for (Re int i=l(x);i<=r(x);i++) //l(x),r(x)\u8868\u793a\u5757\u7684\u5de6\u53f3 \n\t{\n        if (a[i]>ma[x]) \n\t\t\tma[x]=a[i];\t//\u627e\u6700\u5927 \n        V[x][a[i]].root?pre[i]=V[x][a[i]].root:(pos[i]=a[i],V[x][a[i]].root=i,pre[i]=i);  \n\t\t//\u5224\u5b9a\u662f\u5426\u6709\u7956\u5148\uff08\u9996\u5730\u5740\uff09\uff0c\u5982\u679c\u6709\uff0c\u5c31\u5e76\u5165\u9996\u5730\u5740\u7684\u6570\u7ec4\uff08\u5e76\u67e5\u96c6\uff09\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5c31\u65b0\u5f00\u4e00\u4e2a\u9996\u5730\u5740 \n        V[x][a[i]].num++;  \t//\u9996\u5730\u5740\u8868\u793a\u76f8\u540c\u7684\u6570\u7684\u6570\u91cf\u52a0\u4e0a\u65b0\u8fdb\u6765\u7684 \n    }\n}\nRR *A,*B;\nvoid play(int x,int a,int b){\n    A=&V[x][a]; \n\tB=&V[x][b];\n    B->root?pre[A->root]=B->root:(B->root=A->root,pos[A->root]=b);\n    B->num+=A->num;\n\tA->num=A->root=0;\n}\ninline void det(int x,int v){\n    //\u52a0\u61d2\u6807\u8bb0 \n\tint &p=lz[x] ,&q=ma[x];\n    if ((v<<1)<=q-p) \n\t{\n        for (Re int i=p+1;i<=p+v;i++)\n         \tif (V[x][i].root) \n\t\t\t \tplay(x,i,i+v);\n        p+=v;\n    } \n\telse \n\t{\n        for (Re int i=q;i>p+v;i--)\n          \tif (V[x][i].root) \n\t\t\t  \tplay(x,i,i-v);\n        q=min(q,p+v);\n    }\n}\nint main () {\n\t//\u8bfb\u5165 \n    read(n); \n\tread(m);\n    for (Re int i=1;i<=n;i++) \n    {\n     \tread(a[i]);\n\t\tbe[i]=(i-1)/SIZ+1;\t//\u6807\u8bb0\u6bcf\u4e2a\u70b9\u5206\u522b\u5c5e\u4e8e\u54ea\u4e00\u4e2a\u5757 \n\t}\n    for (Re int i=1;i<=be[n];i++) \n\t\treb(i);\t//\u521d\u59cb\u5316 \n    while (m--) {\n    \t//\u8bfb\u5165 \n        read(op); \n\t\tread(l); \n\t\tread(r); \n\t\tread(v);\n        switch (op) {\n            case 1: \t//\u7ef4\u62a4\u64cd\u4f5c \n\t\t\t\tp=be[l];\t//l\u6240\u5728\u7684\u5757\uff08\u533a\u95f4\u7b2c\u4e00\u5757\uff09 \n\t\t\t\tq=be[r];\t//r\u6240\u5728\u7684\u5757\uff08 \u533a\u95f4\u6700\u540e\u4e00\u5757\uff09 \n              \tif (p^q) \t//\u5982\u679cp\u4e0d\u7b49\u4e8eq\uff08\u533a\u95f4\u5305\u542b\u591a\u4e2a\u5757\uff09 \n\t\t\t\t{\n                    push(p);    //\u628a\u5de6\u53f3\u4e24\u4e2a\u66b4\u529b\u505a\u7684\u8fb9\u5757\u7684lazy_tag\u7ed9push_down\uff08\u628a\u61d2\u6807\u8bb0\u66b4\u529b\u53bb\u9664\uff09 \n\t\t\t\t\tpush(q);\n                    for (Re int i=l;i<=r(p);i++) \t//\u6700\u5de6\u8fb9\u7684\u5757\u66b4\u529b\u4e00\u4e2a\u4e00\u4e2a\u51cf \n\t\t\t\t\t\tif (a[i]>v) \n\t\t\t\t\t\t\ta[i]-=v;\n                    for (Re int i=l(q);i<=r;i++)    //\u6700\u53f3\u8fb9\u7684\u5757\u66b4\u529b\u4e00\u4e2a\u4e00\u4e2a\u51cf \n\t\t\t\t\t\tif (a[i]>v) \n\t\t\t\t\t\t\ta[i]-=v;\n                    for (Re int i=p+1;i<q;i++)    //\u4e2d\u95f4\u7684\u76f4\u63a5\u6253\u5230lazy_tag\u4e0a \n                     \tdet(i,v);\n                    reb(p);    //\u66f4\u65b0\u5de6\u53f3\u5757\u5185\u7684\u60c5\u51b5 \n\t\t\t\t\treb(q);\n              \t} \n\t\t\t  \telse {\n                   \tpush(p);\t//\u66b4\u529b\u628a\u5757\u7684lazy_tag\u7ed9push_down\uff08\u628a\u61d2\u6807\u8bb0\u66b4\u529b\u53bb\u9664\uff09\n                   \tfor (Re int i=l;i<=r;i++)\t//\u66b4\u529b\u51cf \n\t\t\t\t\t   \tif (a[i]>v) \n\t\t\t\t\t\t   \ta[i]-=v;\n                   \treb(p);\t//\u66f4\u65b0\u60c5\u51b5 \n              \t}\n            \tbreak;\n            case 2:\t//\u67e5\u8be2\u64cd\u4f5c \n\t\t\t\tp=be[l];\t//l\u6240\u5728\u7684\u5757\uff08\u533a\u95f4\u7b2c\u4e00\u5757\uff09 \n\t\t\t\tq=be[r];\t//r\u6240\u5728\u7684\u5757\uff08 \u533a\u95f4\u6700\u540e\u4e00\u5757\uff09 \n\t\t\t\tans=0;\n              \tif (p^q) \t//\u5982\u679cp\u4e0d\u7b49\u4e8eq\uff08\u533a\u95f4\u5305\u542b\u591a\u4e2a\u5757\uff09 \n\t\t\t  \t{\n                  \tfor (Re int i=l;i<=r(p);i++)\t//\u6700\u5de6\u8fb9\u7684\u5757\u66b4\u529b\u4e00\u4e2a\u4e00\u4e2a\u52a0\u8fdb\u7b54\u6848 \n\t\t\t\t\t  \tif (pos[fa(i)]-lz[p]==v) \n\t\t\t\t\t\t  \tans++;\n                  \tfor (Re int i=l(q);i<=r;i++)\t//\u6700\u53f3\u8fb9\u7684\u5757\u66b4\u529b\u4e00\u4e2a\u4e00\u4e2a\u52a0\u8fdb\u7b54\u6848 \n\t\t\t\t\t  \tif (pos[fa(i)]-lz[q]==v) \n\t\t\t\t\t\t  \tans++;\n                  \tfor (Re int i=p+1;i<q;i++)\t\t//\u4e2d\u95f4\u7684\u5757\u5229\u7528\u9996\u5730\u5740\u52a0\u8fdb\u7b54\u6848 \n                    \tif (v+lz[i]<N) \n\t\t\t\t\t\t\tans+=V[i][v+lz[i]].num; \n                }\n\t\t\t\telse \n                 \tfor (Re int i=l;i<=r;i++)\t//\u8fd9\u6bb5\u7684\u5185\u5bb9\u66b4\u529b\u52a0\u5165\u7b54\u6848  \n\t\t\t\t\t \tif (pos[fa(i)]-lz[p]==v) \n\t\t\t\t\t\t \tans++;\n               \twriteln(ans);\t//\u8f93\u51fa \n            \tbreak;\n        }\n    }\n    return 0; \n}\n```\n",
        "postTime": 1533822280,
        "uid": 37881,
        "name": "yzhang",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF896E \u3010Welcome home, Chtholly\u3011"
    },
    {
        "content": "[$\\texttt{link}$](https://www.luogu.com.cn/problem/CF896E)\n\nupdate on 2021.11.12 \u4fee\u6b63\u4e86\u4e00\u4e9b\u9519\u8bef\u3002\n\n## \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u4e3a $n$ \u7684\u5e8f\u5217 $a$\uff0c$m$ \u6b21\u64cd\u4f5c\uff1a  \n+ \u5c06 $a_{l,\\cdots,r}$ \u4e2d\u5927\u4e8e $x$ \u7684\u6570\u51cf\u53bb $x$\u3002  \n+ \u67e5\u8be2\u533a\u95f4 $a_{l,\\cdots,r}$ \u4e2d\u7b49\u4e8e $x$ \u7684\u6570\u7684\u4e2a\u6570\u3002  \n\n\u6570\u636e\u8303\u56f4\uff1a$1\\le n,m\\le10^5,0\\le a_i,x\\le10^5$\n\n## \u9898\u89e3 \n\n\u8bbe $w$ \u4e3a\u503c\u57df\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u5757\u5185\uff0c\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u503c\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u7ef4\u62a4\u4e00\u4e2a\u6700\u5927\u503c $maxn$ \u548c\u4e00\u4e2a\u533a\u95f4\u51cf\u7684\u6807\u8bb0\u3002  \n\n\u5bf9\u4e8e\u4fee\u6539\u64cd\u4f5c\uff0c\u6563\u5757\u76f4\u63a5\u66b4\u529b\u91cd\u6784\u3002  \n\n\u82e5\u4fee\u6539\u4e00\u4e2a\u6574\u5757\uff0c\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\uff0c\u8bbe\u66f4\u65b0\u6240\u6709\u503c\u4e3a $v$ \u7684\u6570\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\text{ds})$\uff1a  \n\n- \u82e5 $maxn\\le 2x$\uff0c\u628a\u5757\u5185\u6240\u6709\u5927\u4e8e $x$ \u7684\u6570\u51cf\u53bb $x$\u3002\u6b64\u65f6\u9700\u66f4\u65b0\u7684\u533a\u95f4\u4e3a $\\left[x+1,maxn\\right]$\uff0c\u6b64\u65f6\u7528 $O(maxn-x)\\times O(\\text{ds})$ \u7684\u4ee3\u4ef7\u4f7f $maxn$ \u51cf\u5c11\u4e86 $maxn-x$\u3002\n\n- \u82e5 $maxn>2x$\uff0c\u628a\u5757\u5185\u6240\u6709\u5c0f\u4e8e\u7b49\u4e8e $x$ \u7684\u6570\u52a0\u4e0a $x$\uff0c\u518d\u6253\u4e0a\u533a\u95f4\u51cf $x$ \u7684\u6807\u8bb0\uff0c\u9700\u66f4\u65b0\u7684\u533a\u95f4\u4e3a $\\left[1,x\\right]$\uff0c\u6b64\u65f6\u7528 $O(x)\\times O(\\text{ds})$ \u7684\u4ee3\u4ef7\u4f7f $maxn$ \u7684\u4ee3\u4ef7\u51cf\u5c11\u4e86 $x$\u3002  \n\n\u9996\u5148\u6240\u6709\u7684\u503c\u4f1a\u8d8a\u6765\u8d8a\u5c0f\uff0c\u53c8 $maxn$ \u6bd4 $2x$ \u5927\u5c31\u4f1a\u6253\u6807\u8bb0\uff0c\u8fd9\u5c31\u4fdd\u8bc1\u4e86 $maxn$ \u4e0d\u4f1a\u6ea2\u51fa\uff0c\u6bcf\u4e2a\u503c\u6bcf\u4e2a\u5757\u6700\u591a\u4f1a\u4fee\u6539 $w$ \u6b21\uff0c\u590d\u6742\u5ea6\u5373\u4e3a $O(w)$\u3002\n\n\u6563\u5757\u67e5\u8be2\u66b4\u529b\u7edf\u8ba1\uff0c\u6574\u5757\u67e5\u8be2\u8fd4\u56de\u5757\u5185\u503c $x$ \u8bb0\u5f55\u7684\u4e2a\u6570\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\sqrt{n})$\u3002  \n\n\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a\u5373\u4e3a $O(w\\sqrt{n})$\uff0c$w$ \u4e3a\u503c\u57df\u3002\n\n\u8003\u8651\u600e\u4e48\u66f4\u65b0\u6bcf\u4e2a\u503c\u5bf9\u5e94\u7684\u4e00\u5806\u6570\u3002  \n\n\u6bd4\u8f83\u597d\u5199\u7684\u5199\u6cd5\u662f\u5e76\u67e5\u96c6\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u5176\u503c\u4e3a $v$ \u7684\u5e76\u67e5\u96c6\uff0c\u7ef4\u62a4\u4e00\u4e2a $rt$\uff0c\u8868\u793a\u5e8f\u5217\u4e2d\u7b2c\u4e00\u4e2a\u503c\u4e3a $v$ \u7684\u6570\u7684\u4e0b\u6807\uff0c\u5bf9\u4e8e\u7b49\u4e8e\u540c\u4e00\u4e2a\u503c $x$ \u7684\u6570\uff0c\u5219\u5168\u5e76\u5230 $fa_{rt_x}$ \u4e0a\u3002  \n\n\u5728\u5408\u5e76\u7684\u65f6\u5019\uff0c\u8bbe\u628a\u503c\u4e3a $x$ \u7684\u5e76\u67e5\u96c6\u5408\u5e76\u5230\u503c\u4e3a $y$ \u7684\u5e76\u67e5\u96c6\u4e0a\u3002  \n\n- \u82e5 $rt_y$ \u4e0d\u5b58\u5728\uff0c\u5219\u628a $rt_x$ \u5168\u653e\u5230 $rt_y$ \u4e0a\uff0c\u5e76\u4f7f $rt_y$ \u6307\u5411 $y$\u3002  \n- \u82e5 $rt_x$ \u5b58\u5728\uff0c\u5219\u76f4\u63a5\u5408\u5e76 $rt_x$ \u548c $rt_y$ \u4e24\u4e2a\u5e76\u67e5\u96c6\u3002  \n\n\u7528\u8fd9\u79cd\u5e76\u67e5\u96c6\u53ef\u628a\u7ef4\u62a4\u6bcf\u4e2a\u5757\u7684\u590d\u6742\u5ea6\u4f18\u5316\u5230\u4e86 $O(\\alpha(n))\\approx O(1)$\uff0c\u603b\u4f53\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O((n+m)\\sqrt{n})$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $O(w\\sqrt{n})$\u3002  \n\n\u5df2\u7ecf\u8db3\u591f\u901a\u8fc7\u672c\u9898\uff0c\u7136\u800c\u8fd8\u53ef\u4ee5\u4f18\u5316\u3002\n\n\u6709\u4e2a\u9010\u5757\u5904\u7406\u7684 trick\uff0c\u5373\u79bb\u7ebf\u4e0b\u6765\u4e00\u5757\u4e00\u5757\u5904\u7406\uff0c\u53ef\u628a\u7a7a\u95f4\u590d\u6742\u5ea6\u4f18\u5316\u5230 $O(w)$\u3002 \n\n\u4e5f\u8bb8\u53ef\u4ee5\u52a0\u542f\u53d1\u5f0f\u5408\u5e76\uff1f\u4f46\u6211\u4e0d\u4f1a\u5199\uff0c\u800c\u4e14\u91cd\u6784\u6b21\u6570\u8f83\u591a\uff0c\u542f\u53d1\u5f0f\u5408\u5e76\u4f18\u5316\u610f\u4e49\u4e0d\u5927\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nnamespace IO {\n\t#if ONLINE_JUDGE\n\t#define getc() (IS == IT && (IT = (IS = ibuf) + fread(ibuf, 1, IL, stdin), IS == IT) ? EOF : *IS++)\n\t#else\n\t#define getc() getchar()\n\t#endif\n\tconst int IL = 1 << 20, OL = 1 << 21;\n\tint olen = 0; \n\tchar ibuf[IL], *IS = ibuf, *IT = ibuf, obuf[OL];\n\tinline int read() {\n\t\tregister char ch = getc(); register int f = 1, x = 0;\n\t\twhile(!isdigit(ch)) { if(ch == '-') f = -1; ch = getc(); }\n\t\twhile(isdigit(ch)) x = x * 10 + ch - 48, ch = getc();\n\t\treturn x * f;\n\t}\n\tinline void flush() { fwrite(obuf, 1, olen, stdout); olen = 0; }\n\tinline void putc(register char ch) { obuf[olen++] = ch; }\n\ttemplate<class T>\n\tinline void write(register T x) {\n\t\tif(x < 0) obuf[olen++] = '-', x = -x;\n\t\tif(x > 9) write(x / 10);\n\t\tobuf[olen++] = x % 10 + 48;\n\t}\n} using namespace IO;\nconst int N = 1e6 + 10, M = 5e5 + 10, W = 1e5 + 10;\nint n, m;\nint a[N], val[N], s, t, fa[N], siz[N], rt[W], mx, tag, L;\nstruct ask {\n\tint opt, l, r, x, ans;\n}q[M];\ninline int find(int x) {\n\tif(fa[x] == x)\n\t\treturn x;\n\treturn fa[x] = find(fa[x]);\n}\ninline void init() { L = sqrt(n); }\ninline void build() {\n\tmx = tag = 0;\n\tfor(register int i = s; i <= t; i++) {\n\t\tmx = max(mx, a[i]);\n\t\tif(!rt[a[i]])\n\t\t\tfa[i] = rt[a[i]] = i, val[i] = a[i];\n\t\telse\n\t\t\tfa[i] = rt[a[i]];\n\t\tsiz[a[i]]++;\n\t}\n}\ninline void merge(int x, int y)  {\n\tif(rt[y]) fa[rt[x]] = rt[y];\n\telse {\n\t\trt[y] = rt[x];\n\t\tval[rt[y]] = y;\n\t}\n\tsiz[y] += siz[x];\n\trt[x] = siz[x] = 0;\n}\ninline void total_update(int x) {\n\tif(mx - tag > (x << 1)) {\n\t\tfor(register int i = tag + 1; i <= tag + x; i++)\n\t\t\tif(rt[i])\n\t\t\t\tmerge(i, i + x);\n\t\ttag += x;\n\t}\n\telse {\n\t\tfor(register int i = mx; i > tag + x; i--)\n\t\t\tif(rt[i])\n\t\t\t\tmerge(i, i - x);\n\t\tmx = min(mx, tag + x);\n\t}\n}\ninline void part_update(int l, int r, int x) {\n\tfor(register int i = s; i <= t; i++) {\n\t\ta[i] = val[find(i)];\n\t\trt[a[i]] = siz[a[i]] = 0;\n\t\ta[i] -= tag;\n\t}\n\tint nl = max(s, l), nr = min(t, r);\n\tfor(register int i = s; i <= t; i++)\n\t\tval[i] = fa[i] = 0;\n\tfor(int i = nl; i <= nr; i++)\n\t\ta[i] -= x * (a[i] > x);\n\tbuild();\n} \ninline void query(int num) {\n\tif(q[num].l <= s && t <= q[num].r) \n\t\tq[num].ans += siz[q[num].x + tag];\n\telse {\n\t\tint nl = max(s, q[num].l), nr = min(t, q[num].r);\n\t\tfor(register int i = nl; i <= nr; i++)\n\t\t\tif(val[find(i)] - tag == q[num].x)\n\t\t\t\tq[num].ans++; \n\t}\n}\nint main() {\n\tn = read(), m = read();\n\tfor(register int i = 1; i <= n; i++) \n\t\ta[i] = read();\n\tfor(register int i = 1; i <= m; i++) {\n\t\tq[i].opt = read(), q[i].l = read(), q[i].r = read(), q[i].x = read();\n\t}\n\tL = sqrt(n);\n\tfor(register int now = 1; now <= n; now += L) {\n\t\tmemset(siz, 0, sizeof(siz));\n\t\tmemset(rt, 0, sizeof(rt));\n\t\ts = now, t = min(n, now + L - 1);\n\t\tbuild();\n\t\tfor(register int i = 1; i <= m; i++) {\n\t\t\tif(t < q[i].l || s > q[i].r) \n\t\t\t\tcontinue;\n\t\t\tif(q[i].opt == 1) {\n\t\t\t\tif(q[i].l <= s && q[i].r >= t)\n\t\t\t\t\ttotal_update(q[i].x);\n\t\t\t\telse\n\t\t\t\t\tpart_update(q[i].l, q[i].r, q[i].x);\n\t\t\t}\n\t\t\telse if(tag + q[i].x <= M) \n\t\t\t\tquery(i);\n\t\t}\n\t}\n\tfor(register int i = 1; i <= m; i++)\n\t\tif(q[i].opt == 2)\n\t\t\twrite(q[i].ans), putc('\\n');\n\tflush();\n\treturn 0;\n} \n```",
        "postTime": 1614394195,
        "uid": 365107,
        "name": "Terac",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF896E Welcome home, Chtholly"
    },
    {
        "content": "~~\u611f\u89c9\u518d\u5495\u4e0b\u53bb\u8981\u51fa\u4e8b\u60c5~~  \n\n## \u3010\u7a81\u523a\u8d2f\u7a7f\u306e\u7b2c\u4e8c\u5206\u5757\u3011\n\n[\u4fe1\u4ef0/\u5f31\u5316\u7248](https://www.luogu.com.cn/problem/CF896E)  [CF\u94fe\u63a5](https://codeforces.com/problemset/problem/896/E)  \n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P4117)  \n[lxl\u9898\u89e3](https://olddrivertree.blog.uoj.ac/blog/4715)  \n\nYnoi2018 Day1T1\uff0c\u867d\u7136\u6bd2\u7624\u4f46\u662f\u548c\u5176\u4ed6\u6bd4\u76f8\u5bf9\u7b80\u5355\uff0c\u800c\u4e14\u4ee3\u7801\u4e5f\u4e0d\u90a3\u4e48\u96be  \n\n\u6211\u4eec\u5148\u8003\u8651\u5f31\u5316\u7248\u600e\u4e48\u505a  \n\u770b\u5230$1e5$\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u731c\u5230\u4ed6\u662f$\\text n \\sqrt \\text n$\u7684\u505a\u6cd5\u3002  \n\u53ef\u80fd\u5b58\u5728$\\text {Polylog}$\u7684\u505a\u6cd5\uff0c\u4f46\u662f\u4f30\u8ba1\u6bd4\u8f83\u96be\u641e\u3002  \n\u56e0\u4e3a$\\text {Polylog}$\u7684\u505a\u6cd5\u8fd8\u8981\u5904\u7406\u533a\u95f4\u65e0\u975e\u662f\u7ebf\u6bb5\u6811/\u503c\u57df\u7ebf\u6bb5\u6811\uff0c\u4f46\u662f\u4ed6\u4eec\u597d\u50cf\u90fd\u5f88\u96be\u5bf9\u533a\u95f4\u7684\u503c\u57df\u8fdb\u884c\u64cd\u4f5c\u3002  \n\u53ef\u4ee5\u8bd5\u8bd5\u6811\u5957\u6811\uff0c\u53cd\u6b63\u6211\u6574\u4e0d\u51fa\u6765\uff0c\u4f60\u53ef\u4ee5\u8bd5\u4e00\u8bd5\u2026\u2026\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u5206\u5757\u3002  \n\u53ef\u4ee5\u770b\u51fa\u4e00\u4e2a\u5757\u5185\u7684\u64cd\u4f5c\u53ea\u548c\u8fd9\u4e2a\u5757\u5185\u90e8\u7684\u503c\u57df\u548c\u6bcf\u4e2a\u503c\u6709\u591a\u5c11\u4e2a\u6570\u6709\u5173  \n\u90a3\u4e48\u6211\u4eec\u7528\u5e76\u67e5\u96c6\u6765\u7ef4\u62a4  \n```cpp\nint fa[N],val[N];//val[i]\u8868\u793a\u4ee5i\u4e3a\u6839\u7684\u8054\u901a\u5757\u7684\u503c\nstruct DSU\n{\n    int sz[N],id[N];\n    inline int getfa(int x)\n    {\n        if (fa[x]==x) return x;\n        return fa[x]=getfa(fa[x]);\n    }\n    inline void merge(int p,int x,int y)\n    {\n        if (id[y]) fa[id[x]+(p-1)*SZ]=id[y]+(p-1)*SZ;\n        else\n        {\n            id[y]=id[x];\n            val[id[y]+(p-1)*SZ]=y;\n        }\n        sz[y]+=sz[x];\n        id[x]=sz[x]=0;\n    }\n}D[SZ+5];\n```  \n\u7136\u540e\u6211\u4eec\u5bf9\u4e8e\u8fb9\u754c\u4e0a\u7684\u5757\u76f4\u63a5\u628a\u5b83\u62c6\u6389\u518d\u91cd\u6784\n```\ninline void Break(int P)\n{\n    //\u5c06\u7b2cP\u4e2a\u5757\u62c6\u6563\n    for (int i=(P-1)*SZ+1;i<=min(P*SZ,n);i++)\n    {\n        a[i]=val[D[P].getfa(i)];//\u67e5\u627ej\u6240\u5728\u7684\u8054\u901a\u5757\u53ca\u5176\u771f\u5b9e\u503c\n        D[P].sz[a[i]]=D[P].id[a[i]]=0;//\u6e050\n        a[i]-=tag[P];//\u8fd8\u8981\u51cf\u53bb\u533a\u95f4\u79fb\u52a8\u7684\u6807\u8bb0\n    }\n    for (int i=(P-1)*SZ+1;i<=min(P*SZ,n);i++) fa[i]=0;\n    tag[P]=0;\n}\ninline void Build(int P)\n{\n    //\u91cd\u6784\u7b2cP\u4e2a\u5757\n    Max[P]=0;\n    for (int i=(P-1)*SZ+1;i<=P*SZ;i++)\n    {\n        Max[P]=max(Max[P],a[i]);//\u8d4b\u503c\u533a\u95f4\u6700\u5927\u503c\n        if (D[P].id[a[i]]==0)//\u5982\u679c\u8fd9\u4e2a\u5757\u4e2da[i]\u7684\u503c\u6ca1\u6709\u51fa\u73b0\u8fc7\n        {//\u90a3\u5c31\u81ea\u5df1\u5efa\u4e00\u4e2a\u8054\u901a\u5757\n            fa[i]=i;\n            D[P].id[a[i]]=i-(P-1)*SZ;\n            val[i]=a[i];\n        } \n        else//\u4e0d\u7136\u628a\u8fd9\u4e2a\u70b9\u5e76\u5230\u8054\u901a\u5757\u4e2d\n        fa[i]=D[P].id[a[i]]+(P-1)*SZ;\n        D[P].sz[a[i]]++;\n    }\n}\n```\n\u4e3a\u4ec0\u4e48\u8981\u5b58\u50a8\u533a\u95f4\u6700\u5927\u503c\u5462\uff1f\u533a\u95f4\u79fb\u52a8\u7684\u6807\u8bb0\u53c8\u662f\u4ec0\u4e48\u5462\uff1f\u5bf9\u4e8e\u6574\u5757\u7684\u64cd\u4f5c\u9700\u8981\u7528\u5230\u3002  \n\u5bf9\u4e8e\u6574\u5757\uff0c\u6709\u4e00\u4e2a\u975e\u5e38naive\u7684\u60f3\u6cd5\uff0c\u5c31\u662f\u76f4\u63a5\u66b4\u529b\u679a\u4e3e\u6bcf\u4e00\u4e2a\u503c\u57df\uff0c\u7136\u540e\u8fdb\u884c\u91cd\u65b0\u5408\u5e76\uff0c\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f$\\sqrt \\text n$\u7684\uff0c\u663e\u7136\u4e0d\u884c  \n\n\u6211\u4eec\u8fdb\u884c\u4e00\u4e9b\u4fee\u8865\uff0c\u5982\u679c$x>Max$\u5c31\u76f4\u63a5`return`\u6389  \n\u663e\u7136$Max$\u7684\u5927\u5c0f\u4f1a\u9010\u6e10\u53d8\u5c0f\uff0c\u90a3\u4e48\u6700\u574f\u60c5\u51b5\u4e0b\u6bcf\u6b21\u90fd\u662f$1$\uff0c\u90a3\u5747\u644a\u8fd8\u662f$\\sqrt\\text n$\uff0c\u6ca1\u7528\n\n\u663e\u7136\uff0c\u6211\u4eec\u8981\u5728$O(k)$\u7684\u65f6\u95f4\u5185\u8ba9$Max$\u7684\u6700\u5927\u503c\u51cf\u5c11$k$  \n\u5927\u773c\u89c2\u5bdf\u4e00\u4e0b\uff0c\u4f30\u8ba1\u8981\u5bf9$x$\u4e0e$Max$\u7684\u5927\u5c0f\u5173\u7cfb\u8fdb\u884c\u5206\u7c7b\u8ba8\u8bba  \n\n\u90a3\u4e48\u5c31\u7528\u6700naive\u7684\u65b9\u5f0f\u5206\u7c7b\u5427  \n\u5982\u679c$2x>Max$\uff0c\u90a3\u6211\u4eec\u679a\u4e3e\u6240\u6709$[x+1,Max]$\uff0c\u7136\u540e\u66b4\u529b\u4fee\u6539\uff0c\u8fd9\u6837\u6bcf\u6b21\u4fee\u6539\u4e0d\u8d85\u8fc7$x$\u6b21\uff0c\u7136\u540e$Max$\u51cf\u5c11\u4e86$x$  \n\u5982\u679c$2x\\le Max$\uff0c\u90a3\u4e48\u6211\u4eec\u679a\u4e3e\u6240\u6709$[1,x]$\uff0c\u7136\u540e\u628a\u4ed6\u4eec\u66b4\u529b\u79fb\u5230$[x+1,2x]$\u4e0a\uff0c\u7136\u540e\u6253\u4e0a$tag$\uff0c\u8fd9\u6837\u503c\u57df\u4e4b\u95f4\u7684\u76f8\u5bf9\u4f4d\u7f6e\u662f\u4e0d\u53d8\u7684\uff0c\u518d\u8fd0\u7528$tag$\u5c31\u80fd\u6c42\u51fa\u771f\u5b9e\u503c\u3002\u8fd9\u6837\u6bcf\u6b21\u4fee\u6539$x$\u6b21\uff0c\u7136\u540e$Max$\u51cf\u5c11\u4e86$x$\u3002  \n\u90a3\u4e48\u4fee\u6539\u5c31\u5f88\u663e\u7136\u4e86  \n```cpp\ninline void update(int P,int l,int r,int x)\n{\n    Break(P);//\u62c6\u6563\n    for (int i=l;i<=r;i++) if (a[i]>x) a[i]-=x;//\u4fee\u6539\n    Build(P);//\u91cd\u6784\n}\ninline void UPDATE(int P,int x)\n{\n    //\u4fee\u6539\u6574\u5757\n    if (Max[P]-tag[P]>=x*2)\n    {\n        for (int i=tag[P]+1;i<=tag[P]+x;i++) if (D[P].id[i]) D[P].merge(P,i,i+x);\n        tag[P]+=x;\n    }\n    else\n    {\n        for (int i=Max[P];i>tag[P]+x;i--) if (D[P].id[i]) D[P].merge(P,i,i-x);\n        Max[P]=min(tag[P]+x,Max[P]);\n    }\n}\n```  \n\u90a3\u4e48\u67e5\u8be2\u4e5f\u662f\u663e\u7136\u7684  \n```cpp\ninline int query(int P,int l,int r,int x) //\u67e5\u8be2\u4e0d\u5b8c\u6574\u7684\u5757\n{\n    int ans=0;\n    for (int i=l;i<=r;i++)\n        if (val[D[P].getfa(i)]-tag[P]==x) ans++;\n    return ans;\n}\ninline int QUERY(int P,int x)//\u67e5\u8be2\u5b8c\u6574\u7684\u5757\n{\n    if (x+tag[P]>1e5+1) return 0;\n    return D[P].sz[x+tag[P]];\n}\n```  \n\n\u5b8c\u6574\u4ee3\u7801\uff1a  \n```cpp\n#include<bits/stdc++.h>\n#define rd(x) x=read()\n#define I inline\n#define int long long\nusing namespace std;\nI int read(){int x=0,f=1;char ch=getchar();while(ch>'9'||ch<'0'){if(ch=='-')f=-1;ch=getchar();}while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}return x*f;}\nconst int N=1e5+405,SZ=320;\n\nint fa[N],val[N];//val[i]\u8868\u793a\u4ee5i\u4e3a\u6839\u7684\u8054\u901a\u5757\u7684\u503c\nstruct DSU\n{\n    int sz[N],id[N];\n    I int getfa(int x)\n    {\n        if (fa[x]==x) return x;\n        return fa[x]=getfa(fa[x]);\n    }\n    I void merge(int p,int x,int y)\n    {\n        if (id[y]) fa[id[x]+(p-1)*SZ]=id[y]+(p-1)*SZ;\n        else\n        {\n            id[y]=id[x];\n            val[id[y]+(p-1)*SZ]=y;\n        }\n        sz[y]+=sz[x];\n        id[x]=sz[x]=0;\n    }\n}D[SZ+5];\nint n,m;\nint a[N];//\u539f\u6570\u7ec4\nint pos[N];//\u6240\u5728\u5757\nint Max[N];//\u6700\u5927\u503c\nint tag[N];//\u53f3\u79fb\u6807\u8bb0\n\nI void Break(int P)\n{\n    //\u5c06\u7b2cP\u4e2a\u5757\u62c6\u6563\n    for (int j=(P-1)*SZ+1;j<=min(P*SZ,n);j++)\n    {\n        a[j]=val[D[P].getfa(j)];//\u67e5\u627ej\u6240\u5728\u7684\u8054\u901a\u5757\u53ca\u5176\u771f\u5b9e\u503c\n        D[P].sz[a[j]]=D[P].id[a[j]]=0;//\u6e050\n        a[j]-=tag[P];//\u8fd8\u8981\u51cf\u53bb\u533a\u95f4\u79fb\u52a8\u7684\u6807\u8bb0\n    }\n    for (int j=(P-1)*SZ+1;j<=min(P*SZ,n);j++) fa[j]=0;\n    tag[P]=0;\n}\nI void Build(int P)\n{\n    //\u91cd\u6784\u7b2cP\u4e2a\u5757\n    Max[P]=0;\n    for (int i=(P-1)*SZ+1;i<=P*SZ;i++)\n    {\n        Max[P]=max(Max[P],a[i]);//\u8d4b\u503c\u533a\u95f4\u6700\u5927\u503c\n        if (D[P].id[a[i]]==0)//\u5982\u679c\u8fd9\u4e2a\u5757\u4e2da[i]\u7684\u503c\u6ca1\u6709\u51fa\u73b0\u8fc7\n        {//\u90a3\u5c31\u81ea\u5df1\u5efa\u4e00\u4e2a\u8054\u901a\u5757\n            fa[i]=i;\n            D[P].id[a[i]]=i-(P-1)*SZ;\n            val[i]=a[i];\n        } \n        else//\u4e0d\u7136\u628a\u8fd9\u4e2a\u70b9\u5e76\u5230\u8054\u901a\u5757\u4e2d\n        fa[i]=D[P].id[a[i]]+(P-1)*SZ;\n        D[P].sz[a[i]]++;\n    }\n}\nI void update(int P,int l,int r,int x)\n{\n    Break(P);//\u62c6\u6563\n    for (int i=l;i<=r;i++) if (a[i]>x) a[i]-=x;//\u4fee\u6539\n    Build(P);//\u91cd\u6784\n}\nI void UPDATE(int P,int x)\n{\n    //\u4fee\u6539\u6574\u5757\n    if (Max[P]-tag[P]>=x*2)\n    {\n        for (int i=tag[P]+1;i<=tag[P]+x;i++) if (D[P].id[i]) D[P].merge(P,i,i+x);\n        tag[P]+=x;\n    }\n    else\n    {\n        for (int i=Max[P];i>tag[P]+x;i--) if (D[P].id[i]) D[P].merge(P,i,i-x);\n        Max[P]=min(tag[P]+x,Max[P]);\n    }\n}\nI int query(int P,int l,int r,int x) //\u67e5\u8be2\u4e0d\u5b8c\u6574\u7684\u5757\n{\n    int ans=0;\n    for (int i=l;i<=r;i++)\n        if (val[D[P].getfa(i)]-tag[P]==x) ans++;\n    return ans;\n}\nI int QUERY(int P,int x)//\u67e5\u8be2\u5b8c\u6574\u7684\u5757\n{\n    if (x+tag[P]>1e5+1) return 0;\n    return D[P].sz[x+tag[P]];\n}\n\nsigned main()\n{\n    rd(n);rd(m);\n    for (int i=1;i<=n;i++) rd(a[i]);\n    for (int i=1;i<=n;i++) pos[i]=(i-1)/SZ+1;\n    for (int i=1;i<=pos[n];i++) Build(i);\n    while (m--)\n    {\n        int opt,l,r,x;\n        rd(opt);rd(l);rd(r);rd(x);\n        if (opt==1)\n        {\n            int Pl=pos[l],Pr=pos[r];\n            if (Pl==Pr) update(Pl,l,r,x);\n            else \n            {\n                update(Pl,l,Pl*SZ,x);\n                update(Pr,(Pr-1)*SZ+1,r,x);\n                for (int i=Pl+1;i<=Pr-1;i++) UPDATE(i,x);\n            }\n        } else\n        {\n            int Pl=pos[l],Pr=pos[r];\n            if (Pl==Pr) printf(\"%lld\\n\",query(Pl,l,r,x));\n            else\n            {\n                int ans=query(Pl,l,Pl*SZ,x);\n                ans+=query(Pr,(Pr-1)*SZ+1,r,x);\n                for (int i=Pl+1;i<=Pr-1;i++) ans+=QUERY(i,x);\n                printf(\"%lld\\n\",ans);\n            }\n        }\n    } \n}\n\n```  \n\u90a3\u4e48\u8fd9\u6837\u5c31\u53ef\u4ee5\u901a\u8fc7CF896E\u5566\n[\u540e\u7eed\u90e8\u5206\uff08P4117\u9898\u89e3\uff09](https://www.luogu.com.cn/blog/STUPID-JUSTIN/di-er-fen-kuai-2-post)",
        "postTime": 1606045585,
        "uid": 70132,
        "name": "AsunderSquall",
        "ccfLevel": 7,
        "title": "\u7b2c\u4e8c\u5206\u57571"
    }
]