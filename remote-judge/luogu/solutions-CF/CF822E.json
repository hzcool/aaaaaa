[
    {
        "content": "UPD on 2022.3.8\uff1a\u4fee\u6539\u4e00\u5904\u7b14\u8bef\u3002\n\nUPD on 2022.6.15\uff1a\u4fee\u6539\u7b14\u8bef\u3002\n\n> I. [CF822E Liar](https://www.luogu.com.cn/problem/CF822E)\n>\n> [\u5e38\u89c1\u5b57\u7b26\u4e32\u7b97\u6cd5](https://www.cnblogs.com/alex-wei/p/Common_String_Theory_Theory.html) SA\u3002\n\n\u4f7f\u7528\u8d2a\u5fc3\u7684\u601d\u60f3\u53ef\u77e5\u5728\u4e00\u8f6e\u5339\u914d\u4e2d\uff0c\u6211\u4eec\u80fd\u5339\u914d\u5c3d\u91cf\u5339\u914d\uff0c\u5373\u82e5\u4ece $s_i$ \u548c $t_j$ \u5f00\u542f\u65b0\u7684\u4e00\u6bb5\uff0c\u90a3\u4e48\u6211\u4eec\u4e00\u5b9a\u4f1a\u5339\u914d\u76f4\u5230\u7b2c\u4e00\u4e2a $k$ \u4f7f\u5f97 $s_{i + k} \\neq t_{j + k}$\u3002\u56e0\u4e3a\u5339\u914d\u5230\u4e00\u534a\u5c31\u65ad\u6389\u6ca1\u6709\u5339\u914d\u5230\u4e0d\u80fd\u7ee7\u7eed\u4e3a\u6b62\u66f4\u4f18\u3002\u82e5\u524d\u8005\u5b58\u5728\u7b26\u5408\u9898\u610f\u7684\u5206\u914d\u65b9\u6848\uff0c\u5219\u540e\u8005\u5fc5\u7136\u5b58\u5728\uff0c\u8c03\u6574\u6cd5\u6613\u8bc1\u3002\n\n\u6ce8\u610f\u5230 $x\\leq 30$ \u7684\u9650\u5236\uff0c\u8bf4\u660e\u603b\u72b6\u6001\u6570\u4e0d\u4f1a\u5f88\u591a\uff0c\u8003\u8651\u52a8\u6001\u89c4\u5212\u3002\n\n\u8bbe $f_{i, j}$ \u8868\u793a $s[1, j]$ \u9009\u51fa $i$ \u4e2a\u5b50\u4e32\u65f6\u6700\u591a\u80fd\u5339\u914d\u5230 $t$ \u7684\u54ea\u4e2a\u4f4d\u7f6e\u3002\u5bf9\u4e8e\u6bcf\u4e2a $f_{i, j}$\uff0c\u9996\u5148\u53ef\u4ee5\u8f6c\u79fb\u5230 $f_{i, j + 1}$ \u8868\u793a\u4e0d\u5f00\u542f\u4e00\u6bb5\u5339\u914d\u3002\u82e5\u5f00\u542f\u4e00\u6bb5\u5339\u914d\uff0c\u5219\u9700\u627e\u5230 $s[j + 1, n]$ \u548c $t[f_{i - 1, j} + 1, m]$ \u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u957f\u5ea6 $L$\uff0c\u5e76\u4ee4 $f_{i, j + L} \\gets \\max(f_{i, j + L}, f_{i - 1, j} + L)$\u3002\n\n\u6c42\u4e00\u4e2a\u5b57\u7b26\u4e32\u67d0\u4e24\u4e2a\u540e\u7f00\u7684 LCP \u662f\u540e\u7f00\u6570\u7ec4\u7684\u62ff\u624b\u597d\u620f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n(x + \\log n))$\u3002\n\n\u672c\u9898\u540c\u65f6\u7528\u5230\u4e86\u8d2a\u5fc3\uff0cDP \u548c SA \u8fd9\u4e09\u4e2a\u8de8\u9886\u57df\u7684\u7b97\u6cd5\uff0c\u662f\u597d\u9898\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int K = 18;\nconst int N = 2e5 + 5;\nint n, m, tot, x, lg[N], f[31][N];\nint ht[N], mi[K][N];\nchar s[N], t[N], st[N];\nint sa[N], rk[N], ork[N], buc[N], id[N];\nbool cmp(int a, int b, int w) {return ork[a] == ork[b] && ork[a + w] == ork[b + w];}\nvoid build() {\n  int m = 1 << 7, p = 0;\n  for(int i = 1; i <= tot; i++) buc[rk[i] = st[i]]++;\n  for(int i = 1; i <= m; i++) buc[i] += buc[i - 1];\n  for(int i = tot; i; i--) sa[buc[rk[i]]--] = i;\n  for(int w = 1; ; w <<= 1, m = p, p = 0) {\n    for(int i = tot - w + 1; i <= tot; i++) id[++p] = i;\n    for(int i = 1; i <= tot; i++) if(sa[i] > w) id[++p] = sa[i] - w;\n    memset(buc, 0, sizeof(buc));\n    memcpy(ork, rk, sizeof(rk));\n    p = 0;\n    for(int i = 1; i <= tot; i++) buc[rk[id[i]]]++;\n    for(int i = 1; i <= m; i++) buc[i] += buc[i - 1];\n    for(int i = tot; i; i--) sa[buc[rk[id[i]]]--] = id[i];\n    for(int i = 1; i <= tot; i++) rk[sa[i]] = cmp(sa[i], sa[i - 1], w) ? p : ++p;\n    if(p == tot) break;\n  }\n  for(int i = 1, k = 0; i <= tot; i++) {\n    if(k) k--;\n    while(st[i + k] == st[sa[rk[i] - 1] + k]) k++;\n    ht[rk[i]] = k;\n  }\n  for(int i = 1; i <= tot; i++) mi[0][i] = ht[i];\n  for(int i = 1; i <= lg[tot]; i++)\n    for(int j = 1; j + (1 << i) - 1 <= tot; j++)\n      mi[i][j] = min(mi[i - 1][j], mi[i - 1][j + (1 << i - 1)]);\n}\nint lcp(int i, int j) { // s[i] & t[j]\n  if(j > m || i > n) return 0;\n  j += n + 1;\n  if((i = rk[i]) > (j = rk[j])) swap(i, j);\n  int d = lg[j - (i++)];\n  return min(mi[d][i], mi[d][j - (1 << d) + 1]);\n}\nint main() {\n#ifdef ALEX_WEI\n  freopen(\"1.in\", \"r\", stdin);\n  freopen(\"1.out\", \"w\", stdout);\n#endif\n  cin >> n >> s + 1 >> m >> t + 1;\n  for(int i = 1; i <= n; i++) st[++tot] = s[i];\n  st[++tot] = '#';\n  for(int i = 1; i <= m; i++) st[++tot] = t[i];\n  for(int i = 2; i <= tot; i++) lg[i] = lg[i >> 1] + 1;\n  build();\n  cin >> x;\n  for(int i = 1; i <= x; i++)\n    for(int j = 0; j < n; j++) {\n      int L = lcp(j + 1, f[i - 1][j] + 1);\n      f[i][j + L] = max(f[i][j + L], f[i - 1][j] + L);\n      f[i][j + 1] = max(f[i][j + 1], f[i][j]);\n    }\n  if(f[x][n] == m) puts(\"YES\");\n  else puts(\"NO\");\n  return cerr << \"Time: \" << clock() << endl, 0;\n}\n/*\n2022/6/15\nstart coding at 8:55\nfinish debugging at 9:20\n*/\n```",
        "postTime": 1640348960,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "CF822E Liar"
    },
    {
        "content": "## DP+\u4e8c\u5206+Hash\n\n\u521a\u4e00\u770b\u5230\u9898\u9762\uff0c\u5fc3\u60f3\uff1a\u8fd9\u9053\u9898\u548c[NOIP 2015 D2T2](https://www.luogu.org/problem/P2679)\u597d\u50cf\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4eff\u7167\u54ea\u4e00\u9898\uff0c\u4f7f\u7528dp\u7684\u65b9\u6cd5\n\n\u6211\u4eec\u8bbe$ dp[i][j] $\u8868\u793a\u7528$ s $\u7684\u524d$ i $\u4f4d\u5207\u5272$ j $\u6b21\uff0c\u6700\u591a\u53ef\u4ee5\u5339\u914d\u5230$ t $\u7684\u591a\u5c11\u4f4d\u3002\u5f88\u663e\u7136\n\n```\ndp[i+1][j]=max(dp[i+1][j],dp[i][j])\ndp[i+k][j+1]=max(dp[i+k][j+1],dp[i][j]+k)\n//\u5176\u4e2ds[i+1]=t[dp[i][j]+1],s[i+2]=t[dp[i][j]+2],...,s[i+k]=t[dp[i][j]+k]\n```\n\u800c\u8fd9\u4e2ak\u503c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e8c\u5206+\u54c8\u5e0c\u5728$ O(logn) $\u7684\u65f6\u95f4\u5185\u6c42\u5f97\u3002\n\n\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$ O(nx logn) $\uff0c\u7ec6\u8282\u89c1\u6ce8\u91ca\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\nconst int MOD=998244353;//\u54c8\u5e0c\u7684\u6a21\u6570\nconst int B=127;//\u54c8\u5e0c\u7684\u5e95\u6570\nint n,m,x;\nstring s,t;\nint f[100005][32];//dp\u6570\u7ec4\nint s1[100005],s2[100005],c[100005];//s1\u8868\u793a\u5b57\u7b26\u4e32s\u7684\u54c8\u5e0c\u503c\uff0cs2\u8868\u793a\u5b57\u7b26\u4e32t\u7684\u54c8\u5e0c\u503c\uff0cc[i]\u8868\u793aB\u7684i\u6b21\u65b9%MOD\nbool check(int l1,int r1,int l2,int r2){//\u5224\u65ad\u4e24\u5b57\u7b26\u4e32\u662f\u5426\u76f8\u7b49\n\treturn ((s1[r1]-s1[l1-1]*c[r1-l1+1])%MOD+MOD)%MOD==((s2[r2]-s2[l2-1]*c[r2-l2+1])%MOD+MOD)%MOD;\n}\nint get(int x,int y){//\u4e8c\u5206\u5bfb\u627e\u4e0a\u6587\u4e2d\u6240\u8bf4\u7684i+k\u7684\u503c\n\tint l=x,r=min(n,m+x-y);\n\twhile(l<=r){\n\t\tint mid=(l+r)>>1;\n\t\tif(check(x,mid,y,mid-x+y))\tl=mid+1;\n\t\telse\t\t\t\t\t\tr=mid-1;\n    }\n    return r;\n}\nsigned main(){\n\tcin>>n>>s>>m>>t>>x;\n\ts=\" \"+s;t=\" \"+t;\n\tc[0]=1;\n\tfor(int i=1;i<=n;c[i]=c[i-1]*B%MOD,i++)\n\t\ts1[i]=(s1[i-1]*B+s[i]-'a'+1)%MOD;\n\tfor(int i=1;i<=m;i++)\n\t\ts2[i]=(s2[i-1]*B+t[i]-'a'+1)%MOD;\n\tfor(int i=0;i<=n;i++){\n\t\tfor(int j=0;j<=x;j++){//dp\u7684\u8fc7\u7a0b\n\t\t\tf[i+1][j]=max(f[i][j],f[i+1][j]);\n\t\t\tif(j!=x){\n\t\t\t\tint p1=get(i+1,f[i][j]+1);\n\t\t\t\tif(p1>i)\tf[p1][j+1]=max(f[p1][j+1],p1-i+f[i][j]);\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=x;i++)\n\t\tif(f[n][i]==m)//\u5982\u679c\u627e\u5230\u80fd\u591f\u5b8c\u5168\u5339\u914d\u7684\u5c31\u8f93\u51faYES\n\t\t\treturn puts(\"YES\"),0;\n\tputs(\"NO\");\n}\n```",
        "postTime": 1564756451,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF822E \u3010Liar\u3011"
    },
    {
        "content": "# Liar\n\n## \u89e3\u6790\uff1a\n\n### \u9898\u76ee\u5927\u610f\uff1a\n\n\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 $s,t$\uff0c\u957f\u5ea6\u5206\u522b\u4e3a $n,m$\uff08$m\\leq n\\leq 10^5$\uff09\u3002\u4f60\u9700\u8981\u9009\u62e9 $s$ \u7684\u82e5\u5e72\u4e2a\u4e24\u4e24\u4e0d\u76f8\u4ea4\u7684\u5b50\u4e32\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u6309\u7167\u539f\u5148\u5728 $s$\u4e2d\u51fa\u73b0\u7684\u987a\u5e8f\u5408\u5e76\u8d77\u6765\uff0c\u5e0c\u671b\u5f97\u5230 $t$\u3002\n\n\u4ee4 $f(s,t)$ \u8868\u793a\u8981\u9009\u62e9\u7684 $s$ \u7684\u5b50\u4e32\u6570\u76ee\uff0c\u4ee5\u4fbf\u5b83\u4eec\u7684\u5e76\u662f\u4e32 $t$\u3002\u5982\u679c\u65e0\u6cd5\u5408\u7406\u9009\u62e9\u8fd9\u6837\u7684\u5b50\u4e32\uff0c\u5219$f(s,t)=+\u221e$\u3002\n\n\u73b0\u5728\u6211\u4eec\u60f3\u77e5\u9053\uff0c\u5bf9\u4e8e\u7ed9\u5b9a\u7684 $s,t$\uff0c\u662f\u5426\u6709 $f(s,t)\\leq x$\uff08$x\\leq 30$\uff09\u3002\n\n**\u4e00\u53e5\u8bdd\u9898\u610f\uff1a\u5728 $s$ \u4e32\u4e2d\u627e\u4e0d\u8d85\u8fc7 $x$ \u4e2a\u4e24\u4e24\u4e0d\u76f8\u4ea4\u7684\u5b50\u4e32\uff0c\u4f7f\u5f97\u6700\u540e\u8fd9\u4e9b\u5b50\u4e32\u9996\u5c3e\u8fde\u63a5\u540e\u5f97\u5230 $t$\uff0c\u4f60\u7684\u4efb\u52a1\u5c31\u662f\u5224\u65ad\u662f\u5426\u53ef\u884c**\n\n--------------------------\n\n### \u601d\u8def\uff1a\n\n\u677f\u5237\u5230\u7684\u9898\uff0c\u6700\u5f00\u59cb\u770b\u9898\u53d1\u73b0\u8fd9\u4e0d\u5c31\u4e00\u4e2a\u677f\u5b50\u9898\u5417\uff0c\u7136\u540e\u5c31\u8fd8\u662f\u7801\uff0c\u7801\u5230\u4e00\u534a\u53d1\u73b0\u5047\u4e86\uff0czbl\u5f88\u4e45\u3002\n\n\u6700\u5f00\u59cb\u6211\u8003\u8651\u8bbe $dp_{i,j}$ \u8868\u793a $t$ \u4e32\u524d $i$ \u4f4d\u62c6\u6210 $j$ \u6bb5\u540e\u80fd\u5728 $s$ \u4e2d\u5339\u914d\u7684\u6700\u5c0f\u7684\u4f4d\u7f6e\uff0c\u6839\u636e\u8d2a\u5fc3\u6613\u53d1\u73b0\u5bf9\u4e8e $i,j$\uff0c\u4ed6\u80fd\u5728 $s$ \u4e2d\u5339\u914d\u7684\u4f4d\u7f6e\u80af\u5b9a\u8d8a\u9760\u524d\u8d8a\u597d\uff0c\u7ed3\u679c\u5c31\u5047\u4e86\u3002\n\n\u6211\u4eec\u8003\u8651\u5047\u7684\u539f\u56e0\uff0c\u5728\u67d0\u4e00\u6b21\u5931\u914d\u540e\uff0c\u6211\u4eec\u65e0\u6cd5\u5feb\u901f\u627e\u5230\u4e00\u4e0b\u4e2a\u53ef\u4ee5\u5339\u914d\u4e14\u662f\u6781\u957f\u8fde\u7eed\u6bb5\u7684\u4f4d\u7f6e\uff0c\u6700\u5f00\u59cb\u6211\u8003\u8651\u53ef\u4ee5\u7528\u7c7b\u4f3c\u5b50\u5e8f\u5217\u81ea\u52a8\u673a\u4e00\u6837\u5f80\u540e\u627e\uff0c\u4f46\u662f\u53d1\u73b0\u627e\u5230\u7684\u4e0d\u4e00\u5b9a\u662f\u6700\u957f\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u88abhack\u6389\uff08\u5e0c\u671b\u5927\u4f6c\u6709\u4eba\u987a\u7740\u8fd9\u4e2a\u601d\u8def\u63a5\u7740\u60f3\u60f3\uff0c\u7b14\u8005\u592a\u83dc\u4e86\u6ca1\u63a5\u7740\u60f3\u4e86\uff09\u3002\n\n\u5176\u5b9e dp \u7684\u8bbe\u8ba1\u4ee5\u6ca1\u4ec0\u4e48\u95ee\u9898\uff0c\u53ea\u662f\u628a $s,t$ \u4ea4\u6362\u4e00\u4e0b\u4f4d\u7f6e\u5c31\u884c\u4e86\uff0c\u8003\u8651\u8bbe $dp_{i,j}$ \u8868\u793a $s$ \u4e32\u524d $i$ \u4f4d\u62c6\u6210 $j$ \u6bb5\u540e\u80fd\u5728 $s$ \u4e2d\u5339\u914d\u7684\u6700\u5927\u7684\u4f4d\u7f6e\uff0c\u4e3a\u4ec0\u4e48\u8fd9\u6837\u5c31\u662f\u5bf9\u7684\u5462\uff1f\u8003\u8651\u6bcf\u6b21\u9009\u62e9\u4e86\u4f4d\u7f6e $i$\uff0c\u6211\u4eec\u94a6\u5b9a\u8fd9\u4e2a\u4f4d\u7f6e\u5c31\u662f\u6781\u957f\u8fde\u7eed\u6bb5\u7684\u8d77\u59cb\uff0c\u800c\u62fc\u6210\u7684 $t$ \u4e00\u5b9a\u662f\u8fde\u7eed\u7684\uff0c\u6240\u4ee5\u4e0d\u4f1a\u5b58\u5728\u5728 $t$ \u4e2d\u5931\u914d\u7684\u60c5\u51b5\u3002\n\n\u6709\u8f6c\u79fb\u65b9\u7a0b\uff1a\n$$\ndp_{i,j}=dp_{i-1,j}\\\\\ndp_{i+k,j+1}=dp_{i,j}+k\n$$\n\u5176\u4e2d\u6211\u8bbe $k$ \u4e3a\u5f53\u524d\u6781\u957f\u8fde\u7eed\u6bb5\u7684\u957f\u5ea6\u3002\n\n\u5f80\u540e\u627e\u6781\u957f\u6bb5\u6211\u7528\u5230\u7684\u662f\u4e8c\u5206+\u54c8\u5e0c\uff0c\u7528 SA \u590d\u6742\u5ea6\u4f1a\u66f4\u597d\u770b\u4e00\u70b9\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(nx\\log n)$\u3002\n\n----------------------------------------------------\n\n## code\uff1a\n\n```c++\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int N = 1e5 + 10;\nconst int sed1 = 27, sed2 = 127;\nconst int mod1 = 11451499, mod2 = 19260817; // \u9634\u95f4\u7684\u53cc\u54c8\u5e0c\ninline int read ( )\n{\n    int x = 0, f = 1;\n    char ch = getchar ( );\n    while (ch < '0' || ch > '9') {if (ch == '-') f = - 1; ch = getchar ( );}\n    while (ch >= '0' && ch <= '9') {x = (x << 1) + (x << 3) + (ch ^ 48); ch = getchar ( );}\n    return x * f;\n}\nint n, m, k;\nchar a[N], b[N];\nint dp[N][40];\nint ha1[N], ha2[N], inv1[N];\nint hb1[N], hb2[N], inv2[N];\nint fastpow (int a, int p, int mods)\n{\n    int res = 1;\n    while (p)\n    {\n        if (p & 1) res = (res * a) % mods;\n        p >>= 1;\n        a = (a * a) % mods;\n    }\n    return res;\n}\nvoid init ( ) // \u6ca1\u9519\uff0ccf\u4ed6\u5361\u54c8\u5e0c\n{\n    for (int i = 1, bas = 1; i <= n; i++, bas = (bas * sed1) % mod1)\n        ha1[i] = (ha1[i - 1] + ((a[i] - 'a' + 1) * bas) % mod1) % mod1;\n    for (int i = 1, bas = 1; i <= n; i++, bas = (bas * sed2) % mod2)\n        ha2[i] = (ha2[i - 1] + ((a[i] - 'a' + 1) * bas) % mod2) % mod2;\n    for (int i = 1, bas = 1; i <= m; i++, bas = (bas * sed1) % mod1)\n        hb1[i] = (hb1[i - 1] + ((b[i] - 'a' + 1) * bas) % mod1) % mod1;\n    for (int i = 1, bas = 1; i <= m; i++, bas = (bas * sed2) % mod2)\n        hb2[i] = (hb2[i - 1] + ((b[i] - 'a' + 1) * bas) % mod2) % mod2;\n    inv1[0] = 1; inv1[1] = fastpow (sed1, mod1 - 2, mod1);\n    for (int i = 2; i <= n; i++) inv1[i] = (inv1[i - 1] * inv1[1]) % mod1;\n    inv2[0] = 1; inv2[1] = fastpow (sed2, mod2 - 2, mod2);\n    for (int i = 2; i <= n; i++) inv2[i] = (inv2[i - 1] * inv2[1]) % mod2;\n}\nbool check (int l1, int r1, int l2, int r2)\n{\n    int fa1 = (ha1[r1] - ha1[l1 - 1] + mod1) % mod1 * inv1[l1 - 1] % mod1;\n    int fa2 = (ha2[r1] - ha2[l1 - 1] + mod2) % mod2 * inv2[l1 - 1] % mod2;\n    int fb1 = (hb1[r2] - hb1[l2 - 1] + mod1) % mod1 * inv1[l2 - 1] % mod1;\n    int fb2 = (hb2[r2] - hb2[l2 - 1] + mod2) % mod2 * inv2[l2 - 1] % mod2;\n    return (fa1 == fb1) & (fa2 == fb2);\n}\nint find (int x, int y)\n{\n    int l = x, r = min (n, x + m - y), res = 0;\n    while (l <= r)\n    {\n        int mid = (l + r) >> 1;\n        if (check (x, mid, y, mid - x + y)) l = mid + 1, res = mid;\n        else r = mid - 1;\n    }\n    return res;\n}\nsigned main()\n{\n    n = read ( ); scanf (\"%s\", a + 1);\n    m = read ( ); scanf (\"%s\", b + 1);\n    k = read ( );\n    init ( );\n    memset (dp, ~0x3f, sizeof (dp));\n    dp[0][0] = 0;\n    for (int i = 1; i <= n; i++)\n    {\n        for (int j = 0; j <= min (i, k); j++)\n        {\n            if (dp[i - 1][j] < 0) continue;\n            dp[i][j] = max (dp[i - 1][j], dp[i][j]);\n            if (j < k)\n            {\n                int x = find (i, dp[i - 1][j] + 1);\n                dp[x][j + 1] = max (dp[x][j + 1], dp[i - 1][j] + x - i + 1);\n            }\n        }\n    }\n    int ans = false;\n    for (int i = 1; i <= k; i++)\n        if (dp[n][i] == m) ans = true;\n    printf (ans ? \"YES\\n\" : \"NO\\n\");\n    return 0;\n}\n```",
        "postTime": 1646789663,
        "uid": 177837,
        "name": "violin_wyl",
        "ccfLevel": 6,
        "title": "CF822E Liar"
    },
    {
        "content": "\u8d2a\u5fc3\u5730\u60f3\uff0c$s$ \u540c\u4e00\u6bb5\u524d\u7f00 $[1,i]$\uff0c\u5206\u6bb5\u5339\u914d\u5230 $t$ \u7684\u524d\u7f00\u8d8a\u5927\u8d8a\u597d\uff0c\u8fd9\u610f\u5473\u7740 $[i+1,n]$ \u7684\u90e8\u5206\u9700\u8981\u5339\u914d\u7684\u5269\u4f59\u4e32\u66f4\u5c0f\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u8bbe\u8ba1\u4e00\u4e2a\u540c $s$ \u524d\u7f00\u5206\u6bb5\u5339\u914d $t$ \u524d\u7f00\u7684\u6700\u5927\u503c\u6709\u5173\u7684\u89e3\u6cd5\u3002\n\n$k$ \u5f88\u5c0f\uff0c\u662f\u53ef\u4ee5\u4f5c\u4e3a\u72b6\u6001\u7684\uff0c\u8bbe $dp_{i,j}$ \u8868\u793a $s[1,i]$ \u53d6\u51fa $j$ \u6bb5\u62fc\u63a5\u5f97\u5230 $t$ \u7684\u6700\u5927\u524d\u7f00\u957f\u3002\n\n\u5bf9\u4e8e $dp_{i,j-1}$\uff0c\u5728 $s$ \u4e2d\u5339\u914d\u5230 $i+1$\uff0c\u5728 $t$ \u4e2d\u5339\u914d\u5230 $dp_{i,j-1}+1$\uff0c\u60f3\u6c42\u51fa\u8fd9\u4e00\u6bb5\u53ef\u4ee5\u5339\u914d\u591a\u5c11\uff0c\u4e5f\u5c31\u662f\u6c42\u6700\u957f\u516c\u5171\u5b50\u4e32\uff0c\u53ef\u4ee5\u7528\u5206\u9694\u7b26\u62fc\u63a5\u7ed3\u5408 $\\text{SA}$ \u6c42 $\\operatorname{lcp}$ \u5f97\u5230\u3002\n\n\u552f\u4e00\u9700\u8981\u89e3\u51b3\u7684\u662f\uff0c\u5bf9\u4e8e $dp_{i,j-1}$\uff0c\u6211\u4eec\u7684\u5b9a\u4e49\u4e0d\u8981\u6c42 $i$ \u662f\u6700\u540e\u4e00\u6bb5\u7684\u7ed3\u5c3e\uff0c\u800c\u8f6c\u79fb\u540e\u7684 $dp_{i+\\operatorname{lcp},j}$\uff0c\u6700\u540e\u4e00\u6bb5\u7ed3\u5c3e\u4e00\u5b9a\u662f $i+\\operatorname{lcp}$\u3002\n\n\u53ea\u9700\u8981\u5bf9\u4e8e\u6bcf\u4e2a $j$\uff0c\u5728\u8f6c\u79fb\u4e4b\u524d\u5bf9 $i$ \u53d6\u4e00\u4e2a\u524d\u7f00 $\\max$\u3002\n\n```cpp\nint n,m,len,lim;\nchar s[maxn<<1],t[maxn];\nint dp[maxn][32];\nint sa[maxn<<1],rk[maxn<<2],cnt[maxn<<1],oldsa[maxn<<1],oldrk[maxn<<2],tmp[maxn];\ninline bool cmp(int x,int y,int l){\n    return oldrk[x]==oldrk[y]&&oldrk[x+l]==oldrk[y+l];\n}\nint height[maxn<<1];\nint st[maxn<<1][20];\ninline void get_sa(){\n    int siz=max(len,127);\n    for(int i=1;i<=len;++i) ++cnt[rk[i]=s[i]];\n    for(int i=1;i<=siz;++i) cnt[i]+=cnt[i-1];\n    for(int i=len;i>=1;--i) sa[cnt[rk[i]]--]=i;\n    for(int l=1,k;;l<<=1){\n        k=0;\n        for(int i=len;i+l>len;--i) oldsa[++k]=i;\n        for(int i=1;i<=len;++i) if(sa[i]>l) oldsa[++k]=sa[i]-l;\n        memset(cnt,0,sizeof(cnt));\n        for(int i=1;i<=len;++i) ++cnt[tmp[i]=rk[oldsa[i]]];\n        for(int i=1;i<=siz;++i) cnt[i]+=cnt[i-1];\n        for(int i=len;i>=1;--i) sa[cnt[tmp[i]]--]=oldsa[i];\n        for(int i=1;i<=len;++i) oldrk[i]=rk[i];\n        k=0;\n        for(int i=1;i<=len;++i) rk[sa[i]]=cmp(sa[i],sa[i-1],l)?k:++k;\n        if(k==len) break;\n        siz=k;\n    }\n    for(int i=1,k=0;i<=len;++i){\n        if(k) --k;\n        while(s[i+k]==s[sa[rk[i]-1]+k]) ++k;\n        height[rk[i]]=k;\n        st[rk[i]][0]=height[rk[i]];\n    }\n    for(int k=1;k<=18;++k){\n        for(int i=1;i+(1<<k)-1<=len;++i){\n            st[i][k]=min(st[i][k-1],st[i+(1<<k-1)][k-1]);\n        }\n    }\n}\ninline int query(int l,int r){\n    int rkl=min(rk[l],rk[r])+1,rkr=max(rk[l],rk[r]);\n    // printf(\"%d %d %d %d\\n\",l,r,rkl,rkr);\n    int k=log2(rkr-rkl+1);\n    // printf(\"%d\\n\",k);\n    return min(st[rkl][k],st[rkr-(1<<k)+1][k]);\n}\nint main(){\n    n=read();\n    scanf(\"%s\",s+1);\n    m=read();\n    scanf(\"%s\",t+1);\n    s[n+1]='|';\n    for(int i=1;i<=m;++i) s[n+1+i]=t[i];\n    lim=read();\n    len=n+1+m;\n    get_sa();\n    for(int j=0;j<lim;++j){\n        for(int i=1;i<n;++i) dp[i][j]=max(dp[i][j],dp[i-1][j]);\n        // for(int i=0;i<=n;++i) printf(\"(%d %d) %d\\n\",i,j,dp[i][j]);\n        for(int i=0;i<n;++i){\n            int lcp=query(i+1,n+1+dp[i][j]+1);\n            // printf(\"i=%d dp=%d lcp=%d\\n\",i+1,dp[i][j]+1,lcp);\n            dp[i+lcp][j+1]=max(dp[i+lcp][j+1],dp[i][j]+lcp);\n            if(dp[i+lcp][j+1]==m) return printf(\"YES\\n\"),0;\n        }\n    }\n    printf(\"NO\\n\");\n    return 0;\n}\n```",
        "postTime": 1672286717,
        "uid": 321177,
        "name": "SoyTony",
        "ccfLevel": 6,
        "title": "CF822E \u9898\u89e3"
    }
]