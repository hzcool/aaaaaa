[
    {
        "content": "## \u524d\u8a00\n\n[\u9898\u76ee\u4f20\u9001\u95e8\uff01](https://www.luogu.com.cn/problem/CF1045G)\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\uff1f](https://www.cnblogs.com/liangbowen/p/16814716.html)\n\n\u548c\u6a21\u7248\u7a0d\u6709\u4e0d\u540c\u7684 cdq \u5206\u6cbb\u3002\n\n## \u601d\u8def\n\ncdq \u662f\u79bb\u7ebf\u7b97\u6cd5\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5148\u7ed9 $x_i$ \u79bb\u6563\u5316\u4e00\u4e0b\u3002\n\n\u540c\u65f6\uff0c\u8bb0\u5f55\u4e0b $(x_i - r_i)$ \u4e0e $(x_i + r_i)$ \u79bb\u6563\u5316\u540e\u5bf9\u5e94\u7684\u7ed3\u679c\uff0c\u5373\u89c6\u91ce\u8303\u56f4\u3002\n\n\u7136\u540e\uff0c\u6309\u89c6\u91ce\u8303\u56f4\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u3002\u63a5\u7740\u5c31\u662f cdq \u5206\u6cbb\u4e86\u3002\n\n---\n\n\u5047\u8bbe\u5df2\u7ecf\u5904\u7406\u597d\u4e86 $[l, mid]$ \u4e0e $[mid + 1, r]$ \u7684\u533a\u95f4\u3002\n\n\u73b0\u5728\u6765\u5230\u4e86 cdq \u5206\u6cbb\u7684\u91cd\u70b9\u90e8\u5206\uff1a\u5904\u7406\u5728 $[l, mid]$ \u4e0e $[mid + 1, r]$ \u4e24\u4e2a\u4e0d\u540c\u533a\u57df\u7684\u673a\u5668\u4eba\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u518d\u5bf9\u4e24\u4e2a\u5206\u6cbb\u533a\u95f4\u7684\u667a\u5546\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n\n\u8fd9\u6837\uff0c\u5355\u72ec\u770b\u4e00\u4e2a\u5b50\u533a\u95f4\uff0c\u663e\u7136\u5177\u6709\u5355\u8c03\u6027\uff08\u5e9f\u8bdd\uff0c\u90fd\u6392\u597d\u5e8f\u4e86\uff09\uff0c\u4e8e\u662f\u5c31\u53ef\u4ee5\u7528 $\\text{two pointers}$ \u6765\u89e3\u51b3\u4e86\u3002\n\n\u5b9e\u73b0\u4e0a\u6709\u70b9\u7c7b\u4f3c\u5c3a\u53d6\u6cd5\u3002\u5bf9\u4e8e\u6bcf\u4e2a $i$ \u4ece $mid + 1 \\to r$\uff0c\u53cc\u6307\u9488\u7ef4\u62a4 iq \u503c\u53ef\u4ee5\u4ea4\u6d41\u7684\u533a\u95f4\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $i$\uff0c\u53cc\u6307\u9488\u7ef4\u62a4\u5b8c\u540e\uff0c\u7edf\u8ba1\u533a\u95f4\u91cc\u6709\u591a\u5c11\u4e2a\u6570\uff0c\u4f4d\u7f6e\u5728 $[x_i - r_i, x_i + r_i]$ \u91cc\u9762\u5373\u53ef\u3002\n\n\u8fd9\u4e00\u70b9\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u5b9e\u73b0\u3002\u56e0\u6b64\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log^2 n)$\u3002\u6b63\u5e38\u7684 cdq \u53ef\u4ee5\u5f88\u8f7b\u677e\u7684\u901a\u8fc7 $N = 10^5$\u3002\n\n## \u4ee3\u7801\n\n\u5206\u6cbb\u533a\u95f4\u5bf9 iq \u6392\u5e8f\u65f6\uff0c\u4f7f\u7528\u5f52\u5e76\u6392\u5e8f\uff0c\u66f4\u52a0\u8fc5\u901f\u3002\n\n\u7531\u4e8e\u65f6\u95f4\u74f6\u9888\u5728 $\\text{two pointers}$ \u90a3\u4e00\u5757\uff0c\u6240\u4ee5\u76f4\u63a5 `sort` \u4e5f\u53ef\u4ee5\u3002\n\n\u76f4\u63a5 `sort` \u7684\u4ee3\u7801\u53ef\u4ee5\u770b\uff1a[pb \u5b66\u957f\u7684\u9898\u89e3](https://www.cnblogs.com/p-b-p-b/p/10361614.html)\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\ntypedef long long LL;\nconst int N = 1e5 + 5;\nstruct Data {int pos, lpos, rpos, iq, R;} a[N], t[N];\nint x[N], unq[N];\nbool cmp(Data p, Data q) {return p.R > q.R;}\nint n, k;\nLL ans;\n\nint idx[N]; //\u6811\u72b6\u6570\u7ec4\u677f\u5b50\nint lowbit(int x) {return x & -x;}\nvoid update(int i, int k) {for (; i <= n; i += lowbit(i)) idx[i] += k;}\nint query(int i)\n{\n\tint sum = 0;\n\tfor (; i; i -= lowbit(i)) sum += idx[i];\n\treturn sum;\n}\nint sum(int i, int j) {return query(j) - query(i - 1);}\n\nvoid MergeSort(int l, int r) //cdq \u5206\u6cbb\uff01\n{\n\tif (l >= r) return;\n\tint mid = (l + r) >> 1;\n\tMergeSort(l, mid), MergeSort(mid + 1, r);\n\tint L = l, R = l - 1; //\u7c7b\u4f3c\u5c3a\u53d6\u6cd5\uff0c\u5229\u7528 k \u7684\u6709\u5e8f\u6027\u4e0d\u65ad\u66f4\u65b0 L \u548c R\n\tfor (int i = mid + 1; i <= r; i++)\n\t{\n\t\twhile (L <= mid && a[i].iq - a[L].iq > k) update(a[L++].pos, -1);  //\u8fc7\u65f6\u4e86\u5c31\u51cf\u6389\n\t\twhile (R < mid && a[R + 1].iq - a[i].iq <= k) update(a[++R].pos, 1); //\u53ef\u4ee5\u63a5\u53d7\u5c31\u52a0\u5165\n\t\tans += sum(a[i].lpos, a[i].rpos); //\u7edf\u8ba1\u89c6\u91ce\u5185\u53ef\u89c1\u7684\u673a\u5668\u4eba\u4e2a\u6570\n\t}\n\tfor (int i = L; i <= R; i++) update(a[i].pos, -1); //\u6e05\u7a7a \n\t\n\tint i = l, j = mid + 1; //\u5f52\u5e76\u6392\u5e8f\n\tint cur = 0;\n\twhile (i <= mid && j <= r)\n\t\tif (a[i].iq <= a[j].iq) t[++cur] = a[i], i++;\n\t\telse t[++cur] = a[j], j++;\n\twhile (i <= mid) t[++cur] = a[i], i++;\n\twhile (j <= r) t[++cur] = a[j], j++;\n\tfor (i = l, j = 1; j <= cur; i++, j++) a[i] = t[j];\n}\nint main()\n{\n\tscanf(\"%d%d\", &n, &k);\n\tfor (int i = 1; i <= n; i++) scanf(\"%d%d%d\", &x[i], &a[i].R, &a[i].iq), unq[i] = x[i];\n\tsort(unq + 1, unq + n + 1); //\u79bb\u6563\u5316ing \n\tint m = unique(unq + 1, unq + n + 1) - unq - 1;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\ta[i].pos = lower_bound(unq + 1, unq + m + 1, x[i]) - unq;\n\t\ta[i].lpos = lower_bound(unq + 1, unq + m + 1, x[i] - a[i].R) - unq;\n\t\ta[i].rpos = upper_bound(unq + 1, unq + m + 1, x[i] + a[i].R) - unq - 1;\n\t}\n\tsort(a + 1, a + n + 1, cmp);\n\tMergeSort(1, n);\n\tprintf(\"%lld\", ans);\n\treturn 0;\n}\n```\n\n\u5e0c\u671b\u80fd\u5e2e\u52a9\u5230\u5927\u5bb6\uff01",
        "postTime": 1666356778,
        "uid": 367488,
        "name": "liangbowen",
        "ccfLevel": 0,
        "title": "CF1045G \u9898\u89e3"
    },
    {
        "content": "[$$\\large \\color{purple} My\\;Blog$$](https://www.cnblogs.com/p-b-p-b/p/10361614.html)\n\n------------\n\n\u7b80\u5355\u7684CDQ\u5206\u6cbb\u9898\u3002\n\n\u7531\u4e8e\u5bf9\u8bdd\u8981\u6c42\u4e92\u76f8\u770b\u89c1\uff0c\u65e0\u6cd5\u7b80\u5355\u5730\u7528\u6811\u5957\u6811\u5207\u6389\uff0c\u8003\u8651CDQ\u5206\u6cbb\u3002\n\n\u6309\u89c6\u91ce\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u8fd9\u6837\u53ea\u8981\u53f3\u8fb9\u80fd\u770b\u89c1\u5de6\u8fb9\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u4e92\u76f8\u770b\u89c1\u3002\n\n\u53d1\u73b0$K$\u56fa\u5b9a\uff0c\u90a3\u4e48\u5de6\u53f3\u6309\u667a\u5546\u6392\u5e8f\u3001\u4f4d\u7f6e\u79bb\u6563\u5316\u4e4b\u540e\u53ef\u4ee5$two\\;pointers$\u4e00\u4e0b\uff0c\u5957\u4e2a\u6811\u72b6\u6570\u7ec4\uff0c\u5c31\u505a\u5b8c\u4e86\u3002\n\n\u7531\u4e8e\u590d\u6742\u5ea6\u74f6\u9888\u5728\u6811\u72b6\u6570\u7ec4\uff0c\u6ca1\u5fc5\u8981\u5f52\u5e76\uff0c\u53ef\u4ee5\u76f4\u63a5$sort$\u3002\n\n\u590d\u6742\u5ea6\u5e94\u8be5\u662f$O(n\\log^2 n)$\u3002\n\n-------------\n\n```cpp\n#include<bits/stdc++.h>\nnamespace my_std{\n\tusing namespace std;\n\t#define pii pair<int,int>\n\t#define fir first\n\t#define sec second\n\t#define MP make_pair\n\t#define rep(i,x,y) for (int i=(x);i<=(y);i++)\n\t#define drep(i,x,y) for (int i=(x);i>=(y);i--)\n\t#define go(x) for (int i=head[x];i;i=edge[i].nxt)\n\t#define sz 301001\n\ttypedef long long ll;\n\ttemplate<typename T>\n\tinline void read(T& t)\n\t{\n\t\tt=0;char f=0,ch=getchar();\n\t\tdouble d=0.1;\n\t\twhile(ch>'9'||ch<'0') f|=(ch=='-'),ch=getchar();\n\t\twhile(ch<='9'&&ch>='0') t=t*10+ch-48,ch=getchar();\n\t\tif(ch=='.')\n\t\t{\n\t\t\tch=getchar();\n\t\t\twhile(ch<='9'&&ch>='0') t+=d*(ch^48),d*=0.1,ch=getchar();\n\t\t}\n\t\tt=(f?-t:t);\n\t}\n\ttemplate<typename T,typename... Args>\n\tinline void read(T& t,Args&... args){read(t); read(args...);}\n\tvoid file()\n\t{\n\t\t#ifndef ONLINE_JUDGE\n\t\tfreopen(\"a.txt\",\"r\",stdin);\n\t\t#endif\n\t}\n//\tinline ll mul(ll a,ll b){ll d=(ll)(a*(double)b/mod+0.5);ll ret=a*b-d*mod;if (ret<0) ret+=mod;return ret;}\n}\nusing namespace my_std;\n\nint n,K;\nll ans;\nint A[sz];\nstruct hh{int p,l,r,q,len;}a[sz];\ninline bool cmp(const hh &x,const hh &y){return x.len>y.len;}\ninline bool cmp2(const hh &x,const hh &y){return x.q<y.q;}\n\nint sum[sz];\nvoid add(int x,int v){while (x<=n) sum[x]+=v,x+=(x&(-x));}\nint query(int x){int ret=0;while (x) ret+=sum[x],x-=(x&(-x));return ret;}\nint query(int l,int r){return query(r)-query(l-1);}\n\nvoid solve(int l,int r)\n{\n\tif (l==r) return;\n\tint mid=(l+r)>>1;\n\tsolve(l,mid);solve(mid+1,r);\n\tint L=l,R=l-1;\n\trep(i,mid+1,r)\n\t{\n\t\twhile (L<=mid&&a[i].q-a[L].q>K) add(a[L].p,-1),++L;\n\t\twhile (R<mid&&a[R+1].q-a[i].q<=K) ++R,add(a[R].p,1);\n\t\tans+=query(a[i].l,a[i].r);\n\t}\n\trep(i,L,R) add(a[i].p,-1);\n\tsort(a+l,a+r+1,cmp2);\n}\n\nint main()\n{\n\tfile();\n\tread(n,K);\n\tint c;\n\trep(i,1,n) read(a[i].p,a[i].len,a[i].q),A[i]=a[i].p;\n\tsort(A+1,A+n+1);c=unique(A+1,A+n+1)-A-1;\n\trep(i,1,n) \n\t\ta[i].l=lower_bound(A+1,A+c+1,a[i].p-a[i].len)-A,\n\t\ta[i].r=upper_bound(A+1,A+c+1,a[i].p+a[i].len)-A-1,\n\t\ta[i].p=lower_bound(A+1,A+c+1,a[i].p)-A;\n\tsort(a+1,a+n+1,cmp);\n\tsolve(1,n);\n\tcout<<ans;\n\treturn 0;\n}\n```\n\n",
        "postTime": 1549864476,
        "uid": 76481,
        "name": "p_b_p_b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1045G \u3010AI robots\u3011"
    },
    {
        "content": "zz\u7684\u5e03\u661f\u554a\u2026\u2026\u7ecfrqy\u6307\u70b9\u4e00\u756a\u624d\u505a\u4e86\u8fd9\u9898\n\n~~rqy\u662f\u6211\u4eec\u7684\u7ea2\u592a\u9633,\u6ca1\u6709\u4ed6\u6211\u4eec\u5c31\u4f1a\u6b7b~~\n____________________\n\n# \u672c\u9898\u9898\u89e3\n\n\u65e2\u7136\u6709\u7ffb\u8bd1\u4e86\u6211\u5c31\u4e0d\u518d\u91cd\u65b0\u590d\u8ff0\u9898\u610f\u4e86\n\n\u90a3\u4e48\u6211\u4eec\u6765\u770b\u65e2\u7136\u4e00\u5bf9\u673a\u5668\u4eba\u53ea\u4f1a\u88ab\u6570\u4e00\u6b21\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u6709\u4e09\u79cd\u9009\u62e9\u4e86\n\n1.\u8ba9\u667a\u5546\u9ad8\u7684\u6570\u667a\u5546\u4f4e\u7684\n\n2.\u8ba9\u770b\u7684\u8fd1\u7684\u6570\u770b\u7684\u8fdc\u7684\n\n3.\u8ba9\u9760\u53f3\u7684\u6570\u9760\u5de6\u7684\n\n\u7136\u540e\u6211\u4eec\u4f1a\u53d1\u73b0\u66f4\u597d\u7684\u9009\u62e9\u662f\u9009\u62e92,\u4e3a\u4ec0\u4e48\u5462?\n\n\u56e0\u4e3a\u4f60\u53d1\u73b0\u5982\u679c\u6211\u4eec\u4f7f\u7528\u65b9\u6cd51\u6216\u8005\u65b9\u6cd53\u8fdb\u884c\u8ba1\u6570\u7684\u8bdd\uff0c\u6211\u4eec\u90fd\u6709\u4e00\u4e2a\u76f8\u5f53\u96be\u53d7\u7684\u95ee\u9898\u5c31\u662f\u6211\u4eec\u9700\u8981\u8ba9\u4e24\u4e2a\u673a\u5668\u4eba\u53ef\u4ee5\u4e92\u76f8\u770b\u89c1\uff0c\u800c\u8fd9\u4e24\u4e2a\u673a\u5668\u4eba\u7684\u89c6\u91ce\u662f\u4e0d\u540c\u7684\u2026\u2026\uff0c\u6b64\u65f6\u4f60\u5c31\u4f1a\u53d1\u73b0\u4f60\u53ef\u80fd\u9700\u8981\u76f8\u5f53\u590d\u6742\u7684\u6811\u5957\u6811\u6280\u5de7\u624d\u53ef\u4ee5\u89e3\u51b3\u8fd9\u9898\n\n\u7136\u800c\u6211\u4eec\u8ba9\u770b\u7684\u8fd1\u7684\u6570\u770b\u7684\u8fdc\u7684\u4f1a\u53d1\u751f\u4ec0\u4e48\u60c5\u51b5\u5462\uff1f\n\n\u4f60\u4f1a\u53d1\u73b0\u4e00\u4e2a\u76f8\u5f53\u6709\u8da3\u7684\u4e8b\u5b9e\u5c31\u662f\u53ea\u8981\u8fd9\u4e2a\u673a\u5668\u4eba\u80fd\u770b\u5230\u7684\u5c31\u4e00\u5b9a\u53ef\u4ee5\u770b\u5230\u5b83\n\n\u4e24\u4e2a\u673a\u5668\u4eba\u4e92\u76f8\u53ef\u4ee5\u770b\u89c1\u7684\u95ee\u9898\u8f6c\u5316\u6210\u4e86\u4e00\u4e2a\u673a\u5668\u4eba\u53ef\u4ee5\u770b\u5230\u53e6\u4e00\u4e2a\u7684\u95ee\u9898\n\n\u6b64\u65f6\u6211\u4eec\u5c31\u76f8\u5f53\u597d\u505a\u8fd9\u9898\u54af\n\n\u6211\u4eec\u5148\u628a\u6240\u6709\u673a\u5668\u4eba\u6309\u7167\u89c6\u91ce\u8303\u56f4\u5012\u5e8f\u6392\u5e8f\n\n\u7136\u540e\u6211\u4eec\u76f8\u5f53\u4e8e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u673a\u5668\u4eba\u7edf\u8ba1\u4e00\u4e0b\u5b83\u53ef\u4ee5\u548c\u5728\u4ed6\u4e4b\u524d\u7684\u51e0\u4e2a\u673a\u5668\u4eba\u4ea4\u6d41\uff0c\u7531\u4e8e\u6392\u5e8f\u5df2\u7ecf\u5e2e\u6211\u4eec\u89e3\u51b3\u4e86\u4e00\u7ef4\u9650\u5236\u4e86\uff0c\u56e0\u6b64\u6211\u4eec\u5c31\u662f\u8981\u7edf\u8ba1\u6709\u591a\u4e2a\u673a\u5668\u4eba\u7684$x$\u5750\u6807\u5728\u5f53\u524d\u673a\u5668\u4eba\u7684$[x-r,x+r]$\u4e4b\u95f4\u4e14\u8fd9\u4e2a\u673a\u5668\u4eba\u7684$q$\u503c\u5728\u5f53\u524d\u673a\u5668\u4eba\u7684$[q-k,q+k]$\u4e4b\u95f4\n\n\u90a3\u4e48\u8fd9\u4e2a\u4e1c\u897f\u5c31\u662f\u4e00\u4e2a\u666e\u901a\u7684\u77e9\u5f62\u67e5\u8be2\u95ee\u9898\uff0c\u6211\u4eec\u5c06$(x,q)$\u89c6\u4e3a\u4e8c\u7ef4\u5e73\u9762\u4e0a\u7684\u4e00\u4e2a\u70b9\u7684\u8bdd\uff0c\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u9700\u8981\u5179\u6b21\u7684\u64cd\u4f5c\u5c31\u662f\u5355\u70b9\u52a0\u4e8c\u7ef4\u77e9\u5f62\u67e5\u8be2\n\n\u5982\u679c\u4f60\u591f\u65e0\u8111\u7684\u8bdd\u53ef\u4ee5\u5199\u6811\u5957\u6811\uff0c\u4e0d\u8fc7\u4f60\u53d1\u73b0\u8fd9\u9898\u7684\u7b2c\u4e8c\u7ef4\u76f8\u5f53\u7684\u5c0f(\u53ea\u670940)\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u6bcf\u4e2aq\u503c\u5f00\u4e00\u4e2a\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\uff0c\u7136\u540e\u6bcf\u6b21\u66b4\u529b\u7684\u626b\u4e00\u904d\u6c42\u4e2a\u548c\u5c31\u53ef\u4ee5\u89e3\u51b3\u8fd9\u9053\u9898\u4e86\n\n\u4e0a\u4ee3\u7801~\n\n```C\n#include<cstdio>\n#include<algorithm>\n#include<map>\nusing namespace std;const int N=1e5+10;typedef long long ll;\nint n;int k;map <int,int> mp;int S;ll res;\nstruct linetree//\u7b80\u6613\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811 \n{\n    map <int,int> rot;int s[22*N][2];int v[22*N];int ct;\n    inline void ins(int p,int l,int r,int pos)\n    {\n        v[p]++;if(r-l==1){return;}int mid=(l+r)/2;\n        if(pos<=mid)ins(s[p][0]=s[p][0]?s[p][0]:++ct,l,mid,pos);\n        else ins(s[p][1]=s[p][1]?s[p][1]:++ct,mid,r,pos);\n    }\n    inline int qry(int p,int l,int r,int dl,int dr)\n    {\n        if((dl==l&&dr==r)||p==0){return v[p];}int mid=(l+r)/2;int res=0;\n        if(dl<mid)res+=qry(s[p][0],l,mid,dl,min(dr,mid));\n        if(mid<dr)res+=qry(s[p][1],mid,r,max(dl,mid),dr);return res;\n    }\n    inline void cins(int q,int x)\n    {if(rot.count(q)==0)rot[q]=++ct;ins(rot[q],0,S,x);}\n    inline int cqr(int q,int dl,int dr)\n    {if(rot.count(q)==0)return 0;return qry(rot[q],0,S,dl,dr);}\n}lt;\nstruct data//\u6392\u5e8f \n{int x;int r;int q;friend bool operator <(data a,data b){return a.r>b.r;}}a[N];\nint main()\n{\n    scanf(\"%d%d\",&n,&k);\n    for(int i=1;i<=n;i++)scanf(\"%d%d%d\",&a[i].x,&a[i].r,&a[i].q);sort(a+1,a+n+1);\n    for(int i=1;i<=n;i++){mp[a[i].x]=1;mp[a[i].x+a[i].r]=1;mp[a[i].x-a[i].r]=1;}\n    map <int,int> :: iterator it,it1;\n    for(it=mp.begin(),it1=it,++it1;it1!=mp.end();++it,++it1)it1->second+=it->second;\n    S=mp.size();\n    //for(it=mp.begin();it!=mp.end();++it)printf(\"(%d,%d) \",it->first,it->second);printf(\"\\n\");\n    for(int i=1;i<=n;i++)//\u66b4\u529b\u7edf\u8ba1\u4e00\u4e0b\u5c31\u6ca1\u4e86 \n    {\n        for(int j=a[i].q-k;j<=a[i].q+k;j++)res+=lt.cqr(j,mp[a[i].x-a[i].r]-1,mp[a[i].x+a[i].r]);\n        lt.cins(a[i].q,mp[a[i].x]);\n    }printf(\"%I64d\",res);return 0;//\u62dc\u62dc\u7a0b\u5e8f~ \n}\n```",
        "postTime": 1538274788,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1045G \u3010AI robots\u3011"
    },
    {
        "content": "\u9996\u5148\u6ce8\u610f\u5230$k <= 20$  \n\u8fd9\u6697\u793a\u6211\u4eec\u53ef\u4ee5\u6309\u7167iq\u503c\u5206\u7c7b\u7edf\u8ba1\u6570\u636e  \n\u901a\u5e38\u90fd\u662f\u7edf\u8ba1\u5f53\u524d\u7684\u70b9\u4e0e\u4e4b\u524d\u7684\u70b9\u7684\u5173\u7cfb  \n\u5f53\u524d\u7684\u70b9\u80af\u5b9a\u662f\u5728iq\u5141\u8bb8\u4e0b\u67e5\u627e$[x - r, x + r]$\u8303\u56f4\u5185\u7684\u503c  \n\u4f46\u662f\u4e4b\u524d\u7684\u70b9\u7684\u8303\u56f4\u6709\u6ca1\u6709$x$\u662f\u4e0d\u77e5\u9053\u7684  \n\u4e3a\u4e86\u4fdd\u8bc1\u6211\u4eec\u5728\u5f53\u524d\u70b9\u7684\u533a\u57df\u5185\u7edf\u8ba1\u5230\u7684\u70b9\u7684\u8303\u56f4\u90fd\u5305\u542b$x$,\u5c06\u8303\u56f4$r$\u964d\u5e8f\u6392\u5e8f\u5373\u53ef  \n\u8fd9\u6837\u5b50\u6211\u4eec\u5c31\u5e94\u8be5\u60f3\u5230\u7528\u6743\u503c\u7ebf\u6bb5\u6811\u5b58\u50a8\u5df2\u7ecf\u8bbf\u95ee\u8fc7\u7684\u70b9\u7684\u4e0b\u6807  \n\u628aiq\u79bb\u6563\u5316,\u7136\u540e\u5bf9\u6bcf\u79cdiq\u5f00\u4e00\u68f5\u7ebf\u6bb5\u6811,\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u7684\u67e5\u8be2\u90fd\u662f\u5728iq\u8303\u56f4\u5185,\u6700\u591a\u4e0d\u8d85\u8fc7$2k$\u68f5\u7ebf\u6bb5\u6811  \n\u4ee4$m$\u4e3a\u4e0b\u6807\u7684\u503c\u57df\u5927\u5c0f,\u590d\u6742\u5ea6$O(knlogm)$\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <map>\n#define itra map<int,int>::iterator\n#define ll long long\n\nusing namespace std;\n\nconst int N = 100010, SIZE = N * 36;\nint dat[SIZE], ls[SIZE], rs[SIZE], root[SIZE], tot = 1;\ninline int newnode() {\n\tls[tot] = rs[tot] = 0;\n\treturn tot++;\n}\n\ninline void update(int p) {\n\tdat[p] = dat[ls[p]] + dat[rs[p]];\n}\n\ninline void insert(int p, int lp, int rp, int x) {\n\tif(lp == rp) {\n\t\t++dat[p];\n\t\treturn;\n\t}\n\tint mid = (lp + rp) >> 1;\n\tif(x <= mid) {\n\t\tif(!ls[p]) ls[p] = newnode();\n\t\tinsert(ls[p], lp, mid, x);\n\t} else {\n\t\tif(!rs[p]) rs[p] = newnode();\n\t\tinsert(rs[p], mid + 1, rp, x);\n\t}\n\tupdate(p);\n}\n\ninline int qry(int p, int lp, int rp, int l, int r) {\n\tif(l <= lp && rp <= r) return dat[p];\n\tint mid = (lp + rp) >> 1;\n\tint ans = 0;\n\tif(l <= mid && ls[p]) ans += qry(ls[p], lp, mid, l, r);\n\tif(r > mid && rs[p]) ans += qry(rs[p], mid + 1, rp, l, r);\n\treturn ans;\n}\n\nstruct Rob {\n\tint x, r, q;\n\tRob() {}\n\tRob(int X, int R, int Q): x(X), r(R), q(Q) {}\n}rob[N];\nbool cmp1(Rob a, Rob b) { return a.r > b.r; }\nmap<int, int> iqidx;\nint iqval[N], iqnum;\n\nint main() {\n\tint n, k, x, r, q, maxx = 0;\n\tscanf(\"%d %d\", &n, &k);\n\tfor(int i = 1; i <= n; ++i) {\n\t\tscanf(\"%d %d %d\", &x, &r, &q);\n\t\trob[i] = Rob(x, r, q);\n\t\tiqval[i] = q;\n\t\tmaxx = max(x, maxx);\n\t}\n\tsort(rob + 1, rob + n + 1, cmp1);\n\tsort(iqval + 1, iqval + n + 1);\n\tiqnum = unique(iqval + 1, iqval + n + 1) - iqval - 1;\n\tfor(int i = 1; i <= iqnum; ++i) {\n\t\troot[i] = newnode();\n\t\tiqidx[iqval[i]] = i;\n\t}\n\tll ans = 0;\n\tfor(int i = 1; i <= n; ++i) {\n\t\tint qval = rob[i].q, qid = iqidx[qval];\n\t\tx = rob[i].x; r = rob[i].r;\n\t\tfor(int i = qid; ~i && qval - iqval[i] <= k; --i) {\n\t\t\tans += qry(root[i], 1, maxx, x - r, x + r);\n\t\t}\n\t\tfor(int i = qid + 1; i <= iqnum && iqval[i] - qval <= k; ++i) {\n\t\t\tans += qry(root[i], 1, maxx, x - r, x + r);\n\t\t}\n\t\tinsert(root[qid], 1, maxx, x);\n\t}\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1575128685,
        "uid": 88735,
        "name": "\u5bd2\u9e3d\u513f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1045G \u3010AI robots\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u7ed9\u4e00\u79cd\u4e0d\u7528\u4efb\u4f55\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u7684\u505a\u6cd5\uff0c\u7528\u7384\u5b66vector\u6c34\u8fc7\u53bb\n\n\u9996\u5148\u5c06\u673a\u5668\u4eba\u6309\u89c6\u91ce\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5bf9\u4e8e\u673a\u5668\u4eba$i$\u8003\u8651\u80fd\u5339\u914d\u591a\u5c11\u89c6\u91ce\u6bd4\u5b83\u5927\u7684\u673a\u5668\u4eba\n\n\u56e0\u4e3a$K$\u5f88\u5c0f\uff0c\u6240\u4ee5\u76f4\u63a5\u679a\u4e3e\u5339\u914d\u5bf9\u8c61\u7684\u667a\u5546\u503c$Q$\uff0c\u8fd9\u6837\u95ee\u9898\u5c31\u8f6c\u5316\u6210\u4e86\u201c\u6709\u591a\u5c11\u667a\u5546\u4e3a$Q$\u7684\u673a\u5668\u4eba\u4f4d\u7f6e\u5728$[x_i-r_i,x_i+r_i]$\u201d\n\n\u53ef\u4ee5\u5199\u6570\u636e\u7ed3\u6784~~\u4f46\u6ca1\u5fc5\u8981~~\n\n\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e2a\u5b58\u5728\u7684\u667a\u5546\u5f00\u4e00\u4e2avector\uff0c\u5c06\u673a\u5668\u4eba\u7684\u4f4d\u7f6e\u6709\u5e8f\u7684\u585e\u5728vector\u91cc\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u65b9\u4fbf\u7684\u7528\u4e24\u4e2alower_bound\u6765\u89e3\u51b3\u4ee5\u4e0a\u95ee\u9898\uff08\u7528\u672b\u5c3e\u4f4d\u7f6e\u51cf\u53bb\u8d77\u59cb\u4f4d\u7f6e\u5c31\u662f\u4e2d\u95f4\u7684\u5143\u7d20\u4e2a\u6570\uff09\n\n\u5728\u7edf\u8ba1\u5b8c\u673a\u5668\u4eba$i$\u540e\u628a\u5b83\u4ecevector\u4e2d\u5220\u9664\uff0c\u5c31\u80fd\u4fdd\u8bc1\u7ef4\u62a4\u7684\u673a\u5668\u4eba\u59cb\u7ec8\u89c6\u91ce\u6bd4\u7edf\u8ba1\u7684\u673a\u5668\u4eba\u5927\u4e86\n\n\u518d\u5077\u61d2\u7528map\u89e3\u51b3\u6389\u79bb\u6563\u5316\uff0c\u4ee3\u7801\u5c31\u975e\u5e38\u7b80\u5355\u4e86\n\n\u590d\u6742\u5ea6$O(NKlogN)$\n\n\u4ec0\u4e48\uff1fvector\u7684\u5220\u9664\u662f$O(N)$\u7684\uff0c\u6240\u4ee5\u662f$O(N^2)$\uff1f\n\nvector\u7684insert\u548cerase\u6709\u7384\u5b66\u5e38\u6570\uff0c\u5b9e\u6d4b\u5728O2\u524d\u63d0\u4e0b\u5c061e5\u4e2a\u6570\u6309\u968f\u673a\u4f4d\u7f6e\u63d2\u5165\u5230vector\u4e2d\u518d\u6309\u968f\u673a\u4f4d\u7f6e\u5220\u9664\uff0c\u4e3b\u6d41\u73af\u5883\u4e0b1s\u5185\u8fc7\u662f\u59a5\u59a5\u7684\n\n\u5728\u98de\u5feb\u7684\u673a\u5b50\u4e0a\u80fd\u5361\u8fc72e5\uff081s\uff09\n\n\u6240\u4ee5\u590d\u6742\u5ea6 O(\u7a33\u80fd\u8fc7)\n\n```\n#include<bits/stdc++.h>\n#define LL long long\n#define F(x,y,z) for(int x=y;x<=z;++x)\nusing namespace std;\nconst int N=100010;\nLL R(){\n    LL ans=0,f=1;char c=getchar();\n    for(;c<'0'||c>'9';c=getchar()) if (c=='-') f=-1;\n    for(;c>='0'&&c<='9';c=getchar()) ans=ans*10+c-'0';\n    return ans*f;\n}\n\nint n,K,cnt;LL ans;\nmap<int,int> ys;\nvector<int> v[N];\n\nstruct Robot{\n\tint p,r,q,id;\n\tvoid In(){\n\t\tp=R(),r=R(),q=R();\n\t\tif(!ys[q])ys[q]=++cnt;\n\t\tid=ys[q];\n\t}\n}q[N];\nbool cmpr(Robot a,Robot b){return a.r<b.r;}\nbool cmpp(Robot a,Robot b){return a.p<b.p;}\nvoid Sol(int p,int l,int r){\n\tif(!ys.count(p))return;\n\tint id=ys[p];\n\tans+=lower_bound(v[id].begin(),v[id].end(),r+1)-lower_bound(v[id].begin(),v[id].end(),l);\n}\n\nint main(){\n\tn=R();K=R();\n\tF(i,1,n)q[i].In();\n\tsort(q+1,q+1+n,cmpp);\n\tF(i,1,n)v[q[i].id].push_back(q[i].p);\n\tsort(q+1,q+1+n,cmpr);\n\tF(i,1,n){\n\t\tv[q[i].id].erase(lower_bound(v[q[i].id].begin(),v[q[i].id].end(),q[i].p));\n\t\tF(k,q[i].q-K,q[i].q+K)\n\t\t\tSol(k,q[i].p-q[i].r,q[i].p+q[i].r);\n\t}\n\tcout<<ans<<'\\n';\n    return 0;\n}\n```",
        "postTime": 1586155376,
        "uid": 52765,
        "name": "ReseeCher",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1045G \u3010AI robots\u3011"
    },
    {
        "content": "\u7ed9\u4e2a\u4e0d\u4e00\u6837\u7684\u505a\u6cd5\uff0c\u4e0d\u4f9d\u8d56 $k\\leq 20$\u3002\n\n~~\u6211\u624d\u4e0d\u4f1a\u544a\u8bc9\u4f60\u8fd9\u4e2a\u662f\u6211\u5316\u5b66\u4e2d\u8003\u7684\u65f6\u5019\u60f3\u51fa\u6765\u7684\u3002~~\n\n\u8003\u8651\u5ffd\u7565 $q$ \u7684\u9650\u5236\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u673a\u5668\u4eba\u96c6\u5408\uff0c\u518d\u7ed9\u5b9a\u53e6\u5916\u4e00\u4e2a\u673a\u5668\u4eba\uff0c\u5982\u4f55\u67e5\u8be2\u8fd9\u4e2a\u673a\u5668\u4eba\u80fd\u591f\u770b\u5230\u591a\u5c11\u4e2a\u673a\u5668\u4eba\u3002\n\n\u6709\u5982\u4e0b\u65b9\u6cd5\uff1a\u5bf9\u4e8e\u8be5\u96c6\u5408\u5185\u7684\u6240\u6709\u673a\u5668\u4eba $(x_i,r_i)$\uff0c\u5728\u4e8c\u7ef4\u5e73\u9762\u4e0a\u6dfb\u52a0\u4e00\u6761\u5e73\u884c\u4e8e $y$ \u8f74\u7684\u7ebf\u6bb5 $(x_i,x_i-r_i)-(x_i,x_i+r_i)$\u3002\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u673a\u5668\u4eba $(X,R)$\uff0c\u6c42\u5e73\u884c\u4e8e $x$ \u8f74\u7684\u7ebf\u6bb5 $(X-R,X)-(X+R,X)$ \u4e0a\u9762\u7684\u4ea4\u70b9\u4e2a\u6570\u5373\u53ef\u3002\n\n\u73b0\u5728\u5f15\u5165 $q$ \u7684\u9650\u5236\uff0c\u53ef\u4ee5\u628a\u673a\u5668\u4eba\u6309 $q$ \u6392\u5e8f\u4e4b\u540e\u53cc\u6307\u9488\u7ef4\u62a4\u51fa\u67e5\u8be2\u4e00\u4e2a\u673a\u5668\u4eba\u80fd\u770b\u5230\u7684\u6570\u91cf\u65f6\u5bf9\u5e94\u7684\u88ab\u770b\u5230\u7684\u673a\u5668\u4eba\u96c6\u5408\u3002\u518d\u901a\u8fc7\u4e0a\u8ff0\u65b9\u6cd5\uff0c\u95ee\u9898\u88ab\u8f6c\u5316\u4e3a\u52a8\u6001\u52a0\u5165\u548c\u5220\u9664\u5e73\u884c\u4e8e $y$ \u8f74\u7684\u7ebf\u6bb5\uff0c\u4ee5\u53ca\u7ed9\u5b9a\u5e73\u884c\u4e8e $x$ \u8f74\u7ebf\u6bb5\u67e5\u8be2\u4ea4\u70b9\u6570\u91cf\u3002\n\n\u5982\u679c\u95ee\u9898\u662f\u9759\u6001\u7684\uff0c\u5373\u7ed9\u5b9a\u7684 $y$ \u8f74\u7ebf\u6bb5\u4e0d\u88ab\u4fee\u6539\uff0c\u5219\u53ef\u4ee5\u5bf9\u4fee\u6539\u7ebf\u6bb5\u5dee\u5206\u540e\u5728 $y$ \u8f74\u4e0a\u626b\u63cf\u7ebf\u89e3\u51b3\u3002\u52a8\u6001\u540e\u76f4\u63a5\u5728\u626b\u63cf\u7ebf\u4e0a\u5957 cdq \u5206\u6cbb\uff0c\u590d\u6742\u5ea6\u4e3a $O(n\\log^2n)$\u3002\n\n\u770b\u8d77\u6765\u5e38\u6570\u5f88\u5927\uff0c\u4f46\u8dd1\u8d77\u6765\u8fd8\u662f\u86ee\u5feb\u7684\uff0ccf \u4e0a\u6700\u5927\u70b9 481ms\u3002\n\n```cpp\n#include <iostream>\n#include <cmath>\n#include <cstring>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1 << 21], *p1 = buf, *p2 = buf;\n\ninline int qread() {\n\tregister char c = getchar();\n\tregister int x = 0, f = 1;\n\twhile (c < '0' || c > '9') {\n\t\tif (c == '-') f = -1;\n\t\tc = getchar();\n\t}\n\twhile (c >= '0' && c <= '9') {\n\t\tx = (x << 3) + (x << 1) + c - 48;\n\t\tc = getchar();\n\t}\n\treturn x * f;\n}\n\ninline int Abs(const int& x) {return (x > 0 ? x : -x);}\ninline int Max(const int& x, const int& y) {return (x > y ? x : y);}\ninline int Min(const int& x, const int& y) {return (x < y ? x : y);}\n\nstruct Bot {\n\tint x, r, q;\n\tbool operator < (const Bot& b) const {\n\t\treturn q < b.q;\n\t}\n};\nstruct Opt {\n\tint type, x, yl, yr;\n\tOpt() {}\n\tOpt(int type, int x, int yl, int yr) : type(type), x(x), yl(yl), yr(yr) {}\n};\nOpt opt[500005], tmp[500005];\nint n, k, q, vtop, c[1500005];\nlong long ans = 0, val[1500005];\nBot a[100005];\nint top = 0;\n\ninline void Read() {\n\tn = qread(); k = qread();\n\tfor (int i = 1;i <= n;i++) {\n\t\ta[i].x = qread();\n\t\ta[i].r = qread();\n\t\ta[i].q = qread();\n\t}\n}\n\ninline void Prefix() {\n\tint l = 1, r = 1;\n\tfor (int i = 1;i <= n;i++) {\n\t\twhile (r <= n && a[r].q <= a[i].q + k) {\n\t\t\topt[++q] = Opt(1, a[r].x - a[r].r, a[r].x, a[r].x);\n\t\t\topt[++q] = Opt(-1, a[r].x + a[r].r + 1, a[r].x, a[r].x);\n\t\t\tr++;\n\t\t}\n\t\twhile (l <= n && a[l].q < a[i].q - k) {\n\t\t\topt[++q] = Opt(-1, a[l].x - a[l].r, a[l].x, a[l].x);\n\t\t\topt[++q] = Opt(1, a[l].x + a[l].r + 1, a[l].x, a[l].x);\n\t\t\tl++;\n\t\t}\n\t\t//printf(\"%d [%d,%d] %d\\n\", i, l, r, a[r].q);\n\t\topt[++q] = Opt(0, a[i].x, a[i].x - a[i].r, a[i].x + a[i].r);\n\t}\n\tfor (int i = 1;i <= q;i++) {\n\t\tval[i] = opt[i].yl;\n\t\tval[i + q] = opt[i].yr;\n\t\tval[i + 2 * q] = opt[i].x;\n\t}\n\tsort(val + 1, val + 3 * q + 1);\n\tvtop = unique(val + 1, val + 3 * q + 1) - val - 1;\n\tfor (int i = 1;i <= q;i++) {\n\t\topt[i].yl = lower_bound(val + 1, val + vtop + 1, opt[i].yl) - val;\n\t\topt[i].yr = lower_bound(val + 1, val + vtop + 1, opt[i].yr) - val;\n\t\topt[i].x = lower_bound(val + 1, val + vtop + 1, opt[i].x) - val;\n\t}\n\t//for (int i = 1;i <= q;i++) printf(\"%d %d %d %d\\n\", opt[i].type, opt[i].x, opt[i].yl, opt[i].yr);\n}\n\ninline int Lowbit(int x) {\n\treturn x & -x;\n}\n\ninline void Update(int i, int x) {\n\tfor (int j = i;j <= vtop;j += Lowbit(j)) c[j] += x;\n}\n\ninline int Query(int i) {\n\tint ans = 0;\n\tfor (int j = i;j >= 1;j -= Lowbit(j)) ans += c[j];\n\treturn ans;\n}\n\ninline void Clear(int i) {\n\tfor (int j = i;j <= vtop;j += Lowbit(j)) {\n\t\tif (!c[j]) break;\n\t\tc[j] = 0;\n\t}\n}\n\ninline void Cdq(int l, int r) {\n\tif (l == r) return;\n\tint mid = l + r >> 1;\n\tCdq(l, mid);\n\tCdq(mid + 1, r);\n\tint i = l, j = mid + 1, k = l;\n\twhile (i <= mid && j <= r) {\n\t\tif (opt[i].x <= opt[j].x) {\n\t\t\tif (opt[i].type) Update(opt[i].yl, opt[i].type);\n\t\t\t//else ans += sgt.Query(sgt._root, -1e9, 2e9, opt[i].yl, opt[i].yr);\n\t\t\ttmp[k++] = opt[i++];\n\t\t} else {\n\t\t\tif (!opt[j].type) ans += Query(opt[j].yr) - Query(opt[j].yl - 1);\n\t\t\ttmp[k++] = opt[j++];\n\t\t}\n\t}\n\twhile (i <= mid) {\n\t\tif (opt[i].type) Update(opt[i].yl, opt[i].type);\n\t\t//else ans += sgt.Query(sgt._root, -1e9, 2e9, opt[i].yl, opt[i].yr);\n\t\ttmp[k++] = opt[i++];\n\t}\n\twhile (j <= r) {\n\t\tif (!opt[j].type) ans += Query(opt[j].yr) - Query(opt[j].yl - 1);\n\t\ttmp[k++] = opt[j++];\n\t}\n\tfor (int i = l;i <= mid;i++) Clear(opt[i].yl);\n\tfor (int i = l;i <= r;i++) opt[i] = tmp[i];\n}\n\nint main() {\n\tRead();\n\tsort(a + 1, a + n + 1);\n\tPrefix();\n\tCdq(1, q);\n\tprintf(\"%lld\", (ans - n) / 2);\n\t#ifdef CFA_44\n\twhile (1);\n\t#endif\n\treturn 0;\n}\n```",
        "postTime": 1624779698,
        "uid": 61088,
        "name": "Solystic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1045G \u3010AI robots\u3011"
    },
    {
        "content": "**cdq \u5206\u6cbb**\u3002\n## \u89e3\u9898\u601d\u8def\n------------\n\n- cdq \u5206\u6cbb\u7684\u53cc\u6307\u9488\u626b\u63cf\u6cd5\uff1a\n\n\u524d\u63d0\uff1a\u4e0d\u4e00\u5b9a\u6ee1\u8db3\u5355\u6307\u9488\u626b\u63cf\u6cd5\u7684\u7b2c\u4e00\u4e2a\u524d\u63d0\uff0c\u4f46\u6ee1\u8db3\u7b2c\u4e8c\u4e2a\u524d\u63d0\u3002\n\n\u5f00\u59cb\u4e24\u4e2a\u6307\u9488 $L$ \u548c $R$ \u5206\u522b\u6307\u5411 $l$ \u548c $l-1$\uff0c\u4e5f\u5c31\u662f\u8bf4\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\u3002\n\n\u5f53 $L$ \u4e0e $i$ \u4e0d\u6ee1\u8db3\u5173\u4e8e $b$ \u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8ba9 $L$ \u6307\u5411 $L+1$\uff1b\n\n\u5f53 $R+1$ \u4e0e $i$ \u6ee1\u8db3\u5173\u4e8e $b$ \u7684\u5927\u5c0f\u5173\u7cfb\u4e14 $R<mid$\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8ba9 $R$ \u6307\u5411 $R+1$\u3002\n\n------------\n\n\u56de\u5230\u672c\u9898\uff0c\u5bf9\u4e8e\u8ddd\u79bb\u7684\u5904\u7406\uff0c\u76f4\u63a5\u79bb\u6563\u5316\uff0c\u7136\u540e\u6c42\u6bcf\u4e2a\u673a\u5668\u4eba\u80fd\u770b\u5230\u7684\u6700\u5de6\u8fb9\u7684\u673a\u5668\u4eba\u548c\u6700\u53f3\u8fb9\u7684\u673a\u5668\u4eba\u3002\n\n\u518d\u6839\u636e\u673a\u5668\u4eba\u89c6\u91ce\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u8fd9\u6837\u53f3\u8fb9\u7684\u673a\u5668\u4eba\u80fd\u770b\u5230\u5de6\u8fb9\uff0c\u6bcf\u6b21\u53ea\u7edf\u8ba1\u53f3\u8fb9\u7684\u673a\u5668\u4eba\u6240\u8d21\u732e\u7684\u7b54\u6848\uff0c\u65e2\u505a\u5230\u4e86\u4e0d\u91cd\uff0c\u53c8\u505a\u5230\u4e86\u4e0d\u6f0f\u3002\n\n\u5de6\u8fb9\u7684\u673a\u5668\u4eba\u4e00\u5b9a\u80fd\u770b\u5230\u53f3\u8fb9\uff0c\u5c40\u90e8\u6309\u667a\u5546\u6392\u5e8f\uff0c\u901a\u8fc7\u667a\u5546\u7684\u5355\u8c03\u6027\u518d\u7528\u53cc\u6307\u9488\u7edf\u8ba1\u7b54\u6848\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define rep(x,y,z) for(int x=y;x<=z;x++)\n#define per(x,y,z) for(int x=z;x>=y;x--)\nusing namespace std;\nconst int N=1e5+10;\nstruct node\n{\n\tint l,r,x,q,s; \n}no[N];\nstruct robots\n{\n\tint x,r,q;\n}ro[N];\nint lis[N];\nlong long ans;\nint t[N],n,k;\ninline void add(int i,int x) {while(i<=n) t[i]+=x,i+=i&-i;}\ninline int query(int i) {int sum=0;while(i) sum+=t[i],i-=i&-i;return sum;}\nbool comp(const node &P,const node &Q) {return P.s>Q.s;}\nbool comp2(const node &P,const node &Q) {return P.q<Q.q;}\nvoid CDQ(int l,int r)\n{\n\tif(l==r) return ;\n\tint mid=l+r>>1;\n\tCDQ(l,mid);\n\tCDQ(mid+1,r);\n\tsort(no+l,no+mid+1,comp2);//\u6309\u667a\u5546\u6392\u5e8f\n\tsort(no+mid+1,no+r+1,comp2);\n\tint L=l,R=l-1;\n\trep(i,mid+1,r)\n\t{\n\t\twhile(L<=mid&&no[i].q-no[L].q>k) add(no[L++].x,-1);\n\t\twhile(R<mid&&no[R+1].q-no[i].q<=k) add(no[++R].x,1);\n\t\tans+=query(no[i].r)-query(no[i].l-1);\n\t}\n\trep(i,L,R) add(no[i].x,-1);\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&k);\n\trep(i,1,n) scanf(\"%d%d%d\",&ro[i].x,&ro[i].r,&ro[i].q),lis[i]=ro[i].x;\n\tsort(lis+1,lis+1+n);\n\tint tot=unique(lis+1,lis+1+n)-lis-1;\n\trep(i,1,n)\n\t{\n\t\tno[i].l=lower_bound(lis+1,lis+1+tot,ro[i].x-ro[i].r)-lis;\n\t\tno[i].r=upper_bound(lis+1,lis+1+tot,ro[i].x+ro[i].r)-lis-1;\n\t\tno[i].x=lower_bound(lis+1,lis+1+tot,ro[i].x)-lis;\n\t\tno[i].q=ro[i].q;\n\t\tno[i].s=ro[i].r;\n\t}\n\tsort(no+1,no+1+n,comp);//\u6309\u89c6\u91ce\u6392\u5e8f\n\tCDQ(1,n);\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1656311726,
        "uid": 571634,
        "name": "hgzxwzf",
        "ccfLevel": 7,
        "title": "CF1045G AI robots"
    },
    {
        "content": "### [\u539f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/CF1045G)\n\n\u672c\u849f\u84bb\u4e0d\u4f1acdq\u5206\u6cbbqwq\uff0c\u5199\u4e00\u4e2a\u4e0d\u540c\u7684\u89e3\u6cd5\u3002\n\n## \u89e3\u9898\u601d\u8def\n\n\u9996\u5148\u5c06\u95ee\u9898\u8f6c\u5316\u4e3a\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u673a\u5668\u4eba\uff0c\u6709\u591a\u5c11\u4e2a\u673a\u5668\u4eba\u53ef\u4ee5\u548c\u5b83\u5bf9\u8bdd\u3002\n\n\u7136\u540e\u8fd9\u91cc\u6709\u4e24\u4e2a\u9650\u5236\u6761\u4ef6\uff1a\u667a\u5546 $q_i-K\\le q_j\\le q_i+K$\uff0c\u4f4d\u7f6e $x_i-r_i\\le x_j\\le x_i+r_i$\uff0c\u8fd9\u4f3c\u4e4e\u662f\u6811\u5957\u6811\u7684\u6a21\u677f\u9898\u3002\u7136\u800c\uff1a\n\n> Since they are intelligent robots, some of them will talk **if they see each other**.\n\n\u8fd9\u8981\u6c42\u4e24\u4e2a\u673a\u5668\u4eba\u53ef\u4ee5\u4e92\u76f8\u770b\u5230\uff0c\u90a3\u6811\u5957\u6811\u5c31\u6709\u4e9b\u9ebb\u70e6\u4e86\uff0c\u540c\u65f6\u4e5f\u4f1a\u8f7b\u6613\u8d85\u51fa\u672c\u9898\u5c0f\u7684\u53ef\u601c\u7684250MB\u5185\u5b58\u9650\u5236\u3002\n\n\u6211\u4eec\u6839\u636e $r_i$ **\u4ece\u5927\u5230\u5c0f**\u5bf9\u6240\u6709\u673a\u5668\u4eba\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u6211\u4eec\u8ba9**\u6392\u5728\u540e\u9762\u7684\u6570\u6392\u5728\u524d\u9762\u7684**\u3002\u8fd9\u6837\u505a\u6709\u4e24\u4e2a\u7528\u5904\uff1a\n\n1. \u5982\u679c\u89c6\u91ce\u5c0f\u7684\u80fd\u770b\u5230\u89c6\u91ce\u5927\u7684\uff0c\u90a3\u4e48\u89c6\u91ce\u5927\u7684\u4e00\u5b9a\u770b\u5f97\u5230\u89c6\u91ce\u5c0f\u7684\uff0c\u89e3\u51b3\u4e86\u4e92\u76f8\u770b\u5230\u7684\u95ee\u9898\uff1b\n2. \u53ef\u4ee5\u9632\u6b62\u51fa\u73b0\u5341\u5206\u6076\u5fc3\u7684\u6570\u91cd\u6570\u6f0f\u7684\u95ee\u9898\u3002\n\n\u73b0\u5728\u6211\u4eec\u53ea\u5269\u4e0b\u4e86\u4f4d\u7f6e\u548c\u667a\u5546\u4e24\u4e2a\u9650\u5236\u6761\u4ef6\u3002\u53ef\u4ee5\u5199\u6811\u5957\u6811~~\u4f46\u662f\u7a7a\u95f4\u4f1a\u70b8\u3002~~\n\n\u5176\u5b9e\u9898\u9762\u7ed9\u4e86\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u4e1c\u897f $K\\le20$\u3002\u8fd9\u610f\u5473\u7740\u5bf9\u4e8e\u7b2c $i$ \u4e2a\u673a\u5668\u4eba\uff0c\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u679a\u4e3e $[q_i-K,q_i+K]$\u3002\u5f00\u4e00\u4e2amap\u8bb0\u5f55**\u6bcf\u4e00\u4e2a\u667a\u5546\u5bf9\u5e94\u7684\u6743\u503c\u7ebf\u6bb5\u6811**\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5b8c\u7f8e\u5730\u5207\u6389\u8fd9\u9898\u4e86\u3002\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n,k,maxx;\nset<int> num;\nmap<int,int> no;\nstruct TreeNode\n{\n\tint val;\n\tTreeNode *lc,*rc;\n\tTreeNode(): val(0)\n\t\t{ lc=rc=nullptr; }\n};\ntypedef TreeNode *pNode;\nvoid modify(int p,pNode &i,int l=1,int r=maxx)\n{\n\tif(!i)\ti=new TreeNode;\n\ti->val++;\n\tif(l!=r)\n\t{\n\t\tint mid=(l+r)>>1;\n\t\tif(mid>=p)\tmodify(p,i->lc,l,mid);\n\t\telse\tmodify(p,i->rc,mid+1,r);\n\t}\n}\nint query(int lq,int rq,pNode i,int l=1,int r=maxx)\n{\n\tif(!i)\treturn 0;\n\tif(l>=lq && r<=rq)\treturn i->val;\n\tint mid=(l+r)>>1,res=0;\n\tif(mid>=lq)\tres+=query(lq,rq,i->lc,l,mid);\n\tif(mid<rq)\tres+=query(lq,rq,i->rc,mid+1,r);\n\treturn res;\n}\nmap<int,pNode> t;\nstruct Robot\n{\n\tint x,r,q;\n\tinline bool operator <(const Robot &b)const\n\t\t{ return r>b.r; }\n}a[100005];\nint main()\n{\n\tscanf(\"%d%d\",&n,&k);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&a[i].x,&a[i].r,&a[i].q);\n\t\tnum.insert(a[i].x);\n\t\tnum.insert(a[i].x+a[i].r);\n\t\tnum.insert(a[i].x-a[i].r);\n\t}\n\tfor(int i: num)\tno[i]=++maxx;\n\tsort(a+1,a+n+1);\n\tlong long ans=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint x=no[a[i].x],lb=no[a[i].x-a[i].r],rb=no[a[i].x+a[i].r];\n\t\tfor(int j=a[i].q-k;j<=a[i].q+k;j++)\n\t\t{\n\t\t\tauto tj=t.find(j);\n\t\t\tif(tj!=t.end())\n\t\t\t\tans+=query(lb,rb,tj->second);\n\t\t}\n\t\tmodify(x,t[a[i].q]);\n\t}\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1628043099,
        "uid": 279800,
        "name": "ExplodingKonjac",
        "ccfLevel": 7,
        "title": "\u3010\u9898\u89e3\u3011CF1045G AI Robots"
    },
    {
        "content": "# AI robots\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1045G)\n## \u601d\u8def\n\u5f88\u5999\u3002\u3002\u3002\n\n\u53ef\u4ee5\u5148\u6309\u89c6\u91ce\u5927\u5c0f\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u8fd9\u6837\u53f3\u8fb9\u7684\u4eba\u770b\u5f97\u5230\u5de6\u8fb9\u7684\u4eba\uff0c\u90a3\u4e48\u5de6\u8fb9\u7684\u4eba\u5fc5\u5b9a\u770b\u5f97\u5230\u53f3\u8fb9\u7684\u4eba\u3002\n\n\u56e0\u4e3a$k$\u662f\u56fa\u5b9a\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u6309\u667a\u5546\u6392\u5e8f\uff0c\u7136\u540e\u76f4\u63a5\u7528$\\text {cdq}$\u5206\u6cbb\u6c42\u5f97\u7b54\u6848\u5373\u53ef\uff0c\u5177\u4f53\u89c1\u4ee3\u7801\u3002\n## $\\text {Code}$\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define Int register int\n#define ll long long\n#define MAXN 301005\n\nint read ()\n{\n\tint x = 0;char c = getchar();int f = 1;\n\twhile (c < '0' || c > '9'){if (c == '-') f = -f;c = getchar();}\n\twhile (c >= '0' && c <= '9'){x = (x << 3) + (x << 1) + c - '0';c = getchar();}\n\treturn x * f;\n}\n\nvoid write (ll x)\n{\n\tif (x < 0){x = -x;putchar ('-');}\n\tif (x > 9) write (x / 10);\n\tputchar (x % 10 + '0');\n}\n\nint n,k,cnt;\nint tmp[MAXN];\n\nstruct Node\n{\n\tint l,r,len,Index,q;//\u5b83\u7684\u89c6\u91ce\u8303\u56f4\uff0c\u5b83\u7684\u5750\u6807\uff0c\u5b83\u7684\u667a\u5546 \n\tbool operator < (const Node &p)const\n\t{\n\t\treturn q < p.q;\n\t}\n}rob[MAXN];\n\nclass Bit_tree\n{\n\tprivate:\n\t\tint bit[MAXN];\n\t\tint lowbit (int x){return x & (-x);}\n\tpublic:\n\t\tvoid update (int pos,int x){for (Int i = pos;i <= n;i += lowbit (i)) bit[i] += x;}\n\t\tint query (int pos){int ans = 0;for (Int i = pos;i;i -= lowbit (i)) ans += bit[i];return ans;}\n\t\tint query (int l,int r){return query (r) - query (l - 1);} \n}Tree;\n\nll Ans;\n\nvoid cdq (int l,int r)\n{\n\tif (l == r) return ;\n\tint mid = (l + r) >> 1;\n\tcdq (l,mid),cdq (mid + 1,r);\n\tint L = l,R = l - 1;//\u8868\u793a\u8ddf\u5f53\u524d\u673a\u5668\u4eba\u667a\u5546\u5dee\u8ddd\u4e0d\u5927\u4e8ek\u7684\u5de6\u53f3\u7aef\u70b9 \n\tfor (Int i = mid + 1;i <= r;++ i)\n\t{\n\t\twhile (L <= mid && rob[i].q - rob[L].q > k) Tree.update (rob[L ++].Index,-1);\n\t\twhile (R < mid && rob[R + 1].q - rob[i].q <= k) Tree.update (rob[++ R].Index,1);\n\t\tAns += Tree.query (rob[i].l,rob[i].r); \n\t}\n\tfor (Int i = L;i <= R;++ i) Tree.update (rob[i].Index,-1);\n\tsort (rob + l,rob + r + 1);\n}\n\nsigned main()\n{\t\n\tn = read (),k = read ();\n\tfor (Int i = 1;i <= n;++ i)\n\t\trob[i].Index = tmp[i] = read (),rob[i].len = read (),rob[i].q = read ();\n\tsort (tmp + 1,tmp + n + 1);\n\tcnt = unique (tmp + 1,tmp + n + 1) - tmp - 1;\n\tfor (Int i = 1;i <= n;++ i)\n\t\trob[i].l = lower_bound (tmp + 1,tmp + cnt + 1,rob[i].Index - rob[i].len) - tmp,\n\t\trob[i].r = upper_bound (tmp + 1,tmp + cnt + 1,rob[i].Index + rob[i].len) - tmp - 1,\n\t\trob[i].Index = lower_bound (tmp + 1,tmp + cnt + 1,rob[i].Index) - tmp;\n\tsort (rob + 1,rob + n + 1,[](Node A,Node B){return A.len > B.len;});\n\tcdq (1,n);\n\twrite (Ans),putchar ('\\n');\n\treturn 0;\n}\n```",
        "postTime": 1584963530,
        "uid": 124781,
        "name": "Walking_Dead",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1045G \u3010AI robots\u3011"
    },
    {
        "content": "[$\\text{Link}$](https://www.luogu.com.cn/problem/CF1045G)\n## \u9898\u610f\n\u6709 $n$ \u4e2a\u4eba\uff0c\u6bcf\u4e2a\u4eba\u4e09\u4e2a\u5c5e\u6027 $x_i,r_i,q_i$\u3002\u4e24\u4e2a\u4eba $i,j$ \u53ef\u4ee5\u4e92\u76f8\u770b\u5230\u5f53\u4e14\u4ec5\u5f53 $x_i\\in[x_j-r_j,x_j+r_j],x_j\\in[x_i-r_i,x_i+r_i],|q_i-q_j|\\le k$\u3002\u6c42\u6709\u591a\u5c11\u5bf9\u4eba\u4f1a\u4e92\u76f8\u770b\u5230\u3002\n\n$1\\le n\\le 10^5$\uff0c$0\\le k\\le 20$\u3002\n\n## \u601d\u8def\n\u795e\u79d8\u6ce2\u7279\u9898\uff0c\u5199\u4e00\u4e2a\u6ce2\u7279\u9898\u89e3\u3002\u672c\u9898\u89e3\u4e3a\u53e3\u80e1\uff0c\u82e5\u6709\u9519\u8bef\u6216\u60f3\u590d\u6742\u4e86\u8bf7\u6307\u51fa\u3002\n\n\u5148\u79bb\u6563\u5316\u3002\u679a\u4e3e\u6ce2\u7279 $i$\uff0c\u6c42\u6709\u591a\u5c11\u5408\u6cd5\u7684\u6ce2\u7279 $j$\u3002\n\n\u628a\u6bcf\u4e2a\u6ce2\u7279 $i$ \u653e\u5230\u7b2c $q_i$ \u4e2a `vector` \u4e2d\uff0c\u679a\u4e3e $q_j$\uff0c\u5bf9\u6bcf\u4e2a\u5408\u6cd5 $q_j$ \u4e8c\u5206\u51fa\u5bf9\u5e94\u5b83\u7684 `vector` \u4e2d $x_j\\in[x_i-r_i,x_i+r_i]$ \u7684\u533a\u95f4\u3002\n\n\u8fd9\u4e2a\u533a\u95f4\u5185\u7684\u6570\u6ee1\u8db3\u4e86\u9650\u5236 $2,3$\uff0c\u8003\u8651\u6709\u591a\u5c11\u4e2a\u533a\u95f4\u91cc\u7684 $j$ \u6ee1\u8db3 $x_i\\in[x_j-r_j,x_j+r_j]$\u3002\u8f6c\u5316\u4e3a\u70b9\u5bf9\u5e8f\u5217 $(x_j-r_j,x_j+r_j)$\uff0c\u6c42\u533a\u95f4\u5185\u6709\u591a\u5c11\u70b9 $(a,b)$ \u6ee1\u8db3 $a\\le x_i\\le b$\u3002\u7ecf\u5178\u8f6c\u5316\uff1a\u76f8\u5f53\u4e8e\u5bf9\u533a\u95f4\u5185\u6240\u6709 $(a,b)$ \u6267\u884c\u533a\u95f4 $[a,b]$ \u52a0\u4e00\u4e4b\u540e $x_i$ \u4f4d\u7f6e\u7684\u503c\u3002\u626b\u63cf\u7ebf\uff0c\u53ef\u4ee5\u5dee\u5206\u4e3a\u524d\u7f00 $[1,r]$ \u548c\u524d\u7f00 $[1,l-1]$ \u65f6\u7684 $x_i$ \u4f4d\u7f6e\u7684\u503c\u76f8\u51cf\u3002\n\n\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(nk\\log n)$ \u7684\u3002\u770b\u8d77\u6765\u4e0d\u592a\u597d\u3002\n\n\u8003\u8651\u4f18\u5316\uff0c\u4e8c\u5206\u90e8\u5206\uff0c\u6bcf\u4e2a\u5e8f\u5217 $q_j$ \u4e8c\u5206\u7684\u503c\u662f\u4e00\u6837\u7684\u3002\u628a\u6240\u6709\u4e8c\u5206\u7684\u503c\u53d6\u51fa\u6765\u6392\u4e2a\u5e8f\u518d\u6302\u56de\u5e8f\u5217\u4e0a\u8be2\u95ee\uff0c\u8fdb\u884c\u5f52\u5e76\u5373\u53ef\u6c42\u51fa\u6bcf\u4e2a\u503c\u5728\u8be2\u95ee\u5e8f\u5217\u4e0a\u7684\u524d\u9a71\u540e\u7ee7\u3002\n\n\u626b\u63cf\u7ebf\u90e8\u5206\uff0c\u6211\u4eec\u6267\u884c\u4e86 $O(n)$ \u6b21\u533a\u95f4\u52a0\u548c $O(nk)$ \u6b21\u5355\u70b9\u6c42\u503c\u3002\u8003\u8651\u4e0d\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u800c\u4f7f\u7528\u5206\u5757\u3002\u8fd9\u6837\u53ef\u4ee5\u505a\u5230 $O(n\\sqrt n+nk)$\uff0c\u7565\u4f18\u79c0\u4e00\u4e9b\u3002\u4e0d\u59a8\u8003\u8651\u8fed\u4ee3\u5206\u5757\uff0c\u5c06\u6574\u5757\u6253\u6807\u8bb0\u548c\u6563\u5757\u66b4\u529b\u52a0\u518d\u5206\u522b\u7528\u5206\u5757\u7ef4\u62a4\u3002\u8fd9\u6837\u53ef\u4ee5\u505a\u5230 $O(n\\sqrt[4]n+nk)$\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fed\u4ee3\u5206\u5757\u53ef\u4ee5\u505a\u5230 $O(n^{1+eps})$ \u4fee\u6539 $O(1)$ \u67e5\u8be2\u3002\n\n\u6700\u7ec8\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\sqrt[4]n+n\\log n+nk)$\u3002\n\n\u672c\u9898\u89e3\u4e3a\u53e3\u80e1\uff0c\u65e0\u4ee3\u7801\uff0c\u82e5\u6709\u9519\u8bef\u6216\u60f3\u590d\u6742\u4e86\u8bf7\u6307\u51fa\u3002",
        "postTime": 1666309637,
        "uid": 365127,
        "name": "cyffff",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1045G\u3010AI robots\u3011"
    },
    {
        "content": "\u5148\u628a $x,q$ \u79bb\u6563\u5316\u3002\n\n\u5bf9\u4e8e $x_i$ \u548c $x_j$\uff0c\u667a\u5546\u5141\u8bb8\u7684\u60c5\u51b5\u4e0b\uff0c\u9700\u8981\u6ee1\u8db3\u4e0b\u9762\u4e24\u4e2a\u6761\u4ef6\uff1a\n\n- $x_i-r_i\\le x_j \\le x_i+r_i$\n- $x_j-r_j\\le x_i \\le x_j+r_j$\n\n\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $i$ \u679a\u4e3e $j$ \u6240\u6709\u4e0e $i$ \u80fd\u5bf9\u8bdd\u7684\u667a\u5546\uff0c\u628a\u6bcf\u79cd\u667a\u5546\u5bf9\u5e94\u7684\u673a\u5668\u4eba\u5b58\u5728\u5bf9\u5e94\u7684 $\\text{vector}$ \u4e2d\uff0c\u6b64\u65f6\u7531\u7b2c\u4e00\u4e2a\u6761\u4ef6\u53ef\u5f97 $x_j$ \u662f\u4e00\u6bb5\u533a\u95f4\uff0c\u53ef\u4ee5\u4e8c\u5206\u51fa\u6765\uff0c\u90a3\u4e48\u95ee\u9898\u5c31\u53d8\u6210\u4e86\uff1a\u533a\u95f4\u67e5\u8be2\u6709\u591a\u5c11\u4e2a\u533a\u95f4\u5305\u542b $x_i$\u3002\n\n\u628a\u8be2\u95ee\u79bb\u7ebf\u3001\u5dee\u5206\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a $q$ \u5185\u7684\u8be2\u95ee\u4ece\u5de6\u5230\u53f3\u626b\u63cf\u7ebf\uff0c\u52a0\u8fdb\u4e00\u4e2a\u70b9\u5c31\u533a\u95f4\u52a0\u4e00\uff0c\u67e5\u8be2\u5c31\u5355\u70b9\u67e5\u8be2\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u6ce8\u610f\u8fd9\u6837\u7edf\u8ba1\u4e86\u81ea\u5df1\u770b\u81ea\u5df1\uff0c\u5e76\u4e14\u6bcf\u4e00\u5bf9\u90fd\u7b97\u4e86\u4e24\u904d\uff0c\u8f93\u51fa\u7684\u65f6\u5019\u51cf\u6389\u5373\u53ef\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ninline int read() {\n\tint s = 0,f = 1;char ch = getchar();\n\twhile (!isdigit(ch)) f = ch == '-' ? -1 : 1, ch = getchar();\n\twhile (isdigit(ch)) s = (s << 3) + (s << 1) + ch - '0', ch = getchar();\n\treturn s*f;\n}\nint n,K;\nstruct node {\n\tint x,l,r,q,ql,qr;\n\tbool operator < (const node &a) const {\n\t\treturn x < a.x;\n\t}\n}a[100010];\nstruct node2 {\n\tint x,l,r;\n\tbool operator < (const node2 &a) const {\n\t\treturn x < a.x;\n\t}\n};\nvector<node2> vc[300010];\nint h[300010],totq,totx;\nstruct ask {\n\tint l,x,f;\n};\nvector<ask> vc2[300010];\nint cmp2(ask x,ask y) {\n\treturn x.l < y.l;\n}\nint c[300010];\nll ans;\nvoid upd(int x,int s) {\n\tfor (;x <= totx;x += (x & -x)) c[x] += s;\n}\nint getsum(int x) {\n\tint res = 0;\n\tfor (;x;x -= (x & -x)) res += c[x];\n\treturn res;\n}\nint main() {\n\tn = read(), K = read();\n\tfor (int i = 1;i <= n;i ++ ) {\n\t\ta[i].x = read();\n\t\tint r = read(); a[i].q = read();\n\t\ta[i].ql = max(0,a[i].q - K), a[i].qr = a[i].q + K;\n\t\ta[i].l = max(0,a[i].x - r), a[i].r = a[i].x + r;\n\t\th[++totq] = a[i].ql, h[++totq] = a[i].qr, h[++totq] = a[i].q;\n\t}\n\tsort(h+1,h+totq+1);\n\ttotq = unique(h+1,h+totq+1)-h-1;\n\tfor (int i = 1;i <= n;i ++ ) {\n\t\ta[i].ql = lower_bound(h+1,h+totq+1,a[i].ql) - h;\n\t\ta[i].qr = lower_bound(h+1,h+totq+1,a[i].qr) - h;\n\t\ta[i].q = lower_bound(h+1,h+totq+1,a[i].q) - h;\n\t}\n\tfor (int i = 1;i <= n;i ++ ) h[++totx] = a[i].x, h[++totx] = a[i].l, h[++totx] = a[i].r;\n\tsort(h+1,h+totx+1);\n\ttotx = unique(h+1,h+totx+1)-h-1;\n\tfor (int i = 1;i <= n;i ++ ) {\n\t\ta[i].x = lower_bound(h+1,h+totx+1,a[i].x) - h;\n\t\ta[i].l = lower_bound(h+1,h+totx+1,a[i].l) - h;\n\t\ta[i].r = lower_bound(h+1,h+totx+1,a[i].r) - h;\n\t\tvc[a[i].q].push_back({a[i].x,a[i].l,a[i].r});\n\t}\n\tfor (int i = 1;i <= totq;i ++ ) sort(vc[i].begin(),vc[i].end());\n\tfor (int i = 1;i <= n;i ++ ) {\n\t\tfor (int j = a[i].ql;j <= a[i].qr;j ++ ) {\n\t\t\tint l = lower_bound(vc[j].begin(),vc[j].end(),(node2){a[i].l,0,0}) - vc[j].begin();\n\t\t\tint r = upper_bound(vc[j].begin(),vc[j].end(),(node2){a[i].r,0,0}) - vc[j].begin() - 1;\n\t\t\tif (l >= 1) vc2[j].push_back({l-1,a[i].x,-1});\n\t\t\tif (r >= 0) vc2[j].push_back({r,a[i].x,1});\n\t\t}\n\t}\n\tfor (int i = 1;i <= totq;i ++ ) {\n\t\tsort(vc2[i].begin(),vc2[i].end(),cmp2);\n\t\tint r = 0;\n\t\tfor (int j = 0;j < vc[i].size();j ++ ) {\n\t\t\tupd(vc[i][j].l,1), upd(vc[i][j].r+1,-1);\n\t\t\tfor (;r < vc2[i].size() && vc2[i][r].l == j;r ++ ) ans += vc2[i][r].f * getsum(vc2[i][r].x);\n\t\t}\n\t\tfor (int j = 0;j < vc[i].size();j ++ ) upd(vc[i][j].l,-1), upd(vc[i][j].r+1,1);\n\t}\n\tcout << (ans - n) / 2;\n\treturn 0;\n}\n```\n",
        "postTime": 1666308893,
        "uid": 94777,
        "name": "Jsxts_",
        "ccfLevel": 0,
        "title": "CF1045G AI robots"
    },
    {
        "content": "\u8ba1\u7b97\u5bf9\u6570\uff0c\u4e00\u5f00\u59cb\u964d\u667a\u76f4\u63a5\u5199\u4e86\u4e2a\n\n```\na[++cnt] = { 1, x, q, 0 };\na[++cnt] = { 2, x - r, q, -1, i };\na[++cnt] = { 2, x + r, q, 1, i };\n```\n\u8fd9\u6837\u7684\u4e1c\u897f\uff0c\u7136\u540e\u7edf\u8ba1\u7b54\u6848\uff0c\u7ed3\u679cWrong answer on test 2\n\n\u8fd9\u6837\u663e\u7136\u662f\u4e0d\u5bf9\u7684\uff0c\u56e0\u4e3a\u6709\u4e9b\u5bf9\u6570\u4f1a\u88ab\u7edf\u8ba1\u4e24\u904d\uff01\n\n\u6211\u4eec\u6362\u4e00\u79cd\u65b9\u6cd5\uff1a\u8003\u8651\u4e24\u4e2a\u70b9\u4f1a\u4ea7\u751f\u5173\u7cfb\uff0c\u80fd\u4e92\u76f8\u770b\u5230\n\n\u4e5f\u5c31\u662f\u6211\u4eec\u6309r\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u5c0f\u7684\u53ef\u4ee5\u770b\u5230\u5927\u7684\uff0c\u90a3\u4e48\u5927\u7684\u4e00\u5b9a\u53ef\u4ee5\u770b\u5230\u5c0f\u7684\n\n\u6b64\u65f6\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u4e00\u79cd\u504f\u5e8f\u5173\u7cfb\uff0c\u4e5f\u5c31\u662fr\u7684\u504f\u5e8f\u5173\u7cfb\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u8fd8\u6709\u4e24\u4e2a\u6761\u4ef6\u9700\u8981\u6ee1\u8db3\uff0c\u4e00\u4e2a\u5c31\u662f\u80fd\u4e92\u76f8\u770b\u89c1\uff0c\u8fd8\u6709\u4e00\u4e2a\u5c31\u662f\u4ed6\u4eec\u7684q\u8981\n\n\u6ee1\u8db3\u76f8\u5dee\u4e0d\u8d85\u8fc7k\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u7528cdq\u5206\u6cbb\uff0c\u56e0\u4e3acdq\u5206\u6cbb\u91cc\u9762\u7684\u5173\u7cfb\u6211\u4eec\u53ef\u4ee5\u81ea\u884c\u8c03\u6362\u91cc\u5916\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u4e0d\u76f8\u5deek\u653e\u5728\u5916\u5c42\uff0c\u7136\u540e\u91cc\u5c42\u76f4\u63a5\u6709\u4e2a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4e00\u4e0b\uff08\u8981\u79bb\u6563\u5316\uff09\n\n\u5177\u4f53\u7684\u6211\u4eec\u5185\u5c42\u5f52\u5e76\u7136\u540e\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u4e00\u4e0b\u5373\u53ef\uff01\n\nCDQ\u6838\u5fc3\u4ee3\u7801\uff1a\n\n```cpp\nwhile (L <= mid || R <= r) {\n\tif (R > r || (L <= mid && c[L].q <= c[R].q + K)) {\n\t\tQ[++qr] = mp(Get(c[L].x), c[L].q); Modify(Get(c[L].x), 1); L++;\n\t} else {\n\t\twhile (ql <= qr && Q[ql].snd < c[R].q - K) Modify(Q[ql++].fst, -1);\n\t\tans += Query(Get(c[R].x + c[R].rl)) - Query(Get(c[R].x - c[R].rl) - 1); R++;\n\t}\n}\nwhile (ql <= qr) Modify(Q[ql++].fst, -1);\n```\n\n\u4e3b\u8981\u8981\u603b\u7ed32\u70b9\u5427\uff01\n\n1 \u9996\u5148cdq\u7684\u524d\u63d0\u662f\u627e\u5230\u504f\u5e8f\u5173\u7cfb\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u9898\u76ee\u627e\u5230\u504f\u5e8f\u5173\u7cfb\uff01\n\n2 cdq\u91cc\u9762\u5f80\u5f80\u6709\u4e24\u5c42\u6216\u8005\u4e09\u5c42\uff08\u65e2\u5728cdq\u91cc\u9762\u505a\u7684\u662f\u4e8c\u7ef4\u6216\u4e09\u7ef4\u504f\u5e8f\uff09\n\n\u8fd9\u4e2a\u5c42\u4e0e\u5c42\u4e4b\u95f4\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u8c03\u6362\uff0c\u7136\u540e\u627e\u6700\u7b80\u5355\u7684\u7ef4\u62a4\u65b9\u6cd5\uff01\uff01\uff01",
        "postTime": 1577595717,
        "uid": 203968,
        "name": "ConorGallagher23",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1045G \u3010AI robots\u3011"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/CF1045G)  \n\u63d0\u4f9b\u4e00\u4e2a\u7a0d\u5fae\u4e0d\u540c\u7684 cdq \u5206\u6cbb\u5199\u6cd5\uff0c\u4e0d\u4f9d\u8d56 $K$ \u7684\u5927\u5c0f\u3002  \n\u9996\u5148\u4e00\u4e2a\u9650\u5236\u4e3a $q$ \u7684\u503c\u5dee\u8ddd\u4e0d\u5927\u4e8e $K$ \u3002  \n\u4e8e\u662f\u53ef\u4ee5\u5bf9 $q$ \u6392\u5b8c\u5e8f\u540e\u5bf9\u6bcf\u4e2a\u4e0b\u6807 $i$ \u67e5\u5176\u4ed6\u70b9 $q$ \u503c\u5728 $q_i+K$ \u5185\u7684\u8d21\u732e\u51cf\u53bb $q_i-K-1$ \u5185\u7684\u8d21\u732e\uff0c  \n\u8fd9\u4e00\u7ef4\u4fbf\u53ef\u76f4\u63a5\u7528 cdq \u5728\u5916\u5c42\u89e3\u51b3\u3002  \n\u800c\u540e\u662f\u201c\u80fd\u76f8\u4e92\u770b\u5230\u201d\u7684\u9650\u5236\u3002  \n\u8bbe\u6bcf\u4e2a\u4eba\u4e0b\u6807\u3001\u80fd\u770b\u5230\u7684\u6700\u5de6\u3001\u6700\u53f3\u53ca\u5176\u4f4d\u7f6e\u5206\u522b\u4e3a $i,l_i,r_i,pos_i$ \u3002  \n\u5219\u5bf9\u4e8e\u4e00\u5bf9\u4eba\u80fd\u76f8\u4e92\u770b\u5230\u7684\u5145\u8981\u6761\u4ef6\u4e3a $l_j\\leq pos_i \\leq pos_j \\leq r_i$ \u3002  \n\u90a3\u5728\u5206\u6cbb\u6bcf\u5c42\u53ea\u9700\u5bf9 $[l,mid]$ \u5185\u7684\u6570\u636e\u4ee5 $l$ \u6392\u5e8f\uff0c$[mid+1,r]$ \u5185\u7684\u6570\u636e\u4ee5 $pos$ \u6392\u5e8f\uff0c  \n\u7136\u540e\u5728 $l_j\\leq pos_i$ \u4e2d\u67e5 $pos_i \\leq pos_j \\leq r_i$ \u7684 $j$  \u7684\u4e2a\u6570\uff0c\u7528\u4e2a\u6811\u72b6\u6570\u7ec4\u5373\u53ef\u3002  \n\u4f46\u8fd9\u8fd8\u6ca1\u5b8c\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u5bf9\u5728\u5176\u4f4d\u7f6e\u4e0d\u76f8\u540c\u662f\u53ea\u7b97\u4e86\u4e00\u6b21\uff0c\u4f46\u662f\u5728\u4f4d\u7f6e\u76f8\u540c\u65f6\u88ab\u7b97\u4e24\u6b21\u3002  \n\u4e00\u79cd\u89e3\u51b3\u65b9\u6cd5\u662f\u518d\u627e\u4e00\u904d\u4f4d\u7f6e\u76f8\u540c\u7684\u70b9\u4e24\u4e24\u95f4\u7684\u8d21\u732e\u51cf\u6389\uff0c\u4f46\u6bd4\u8f83\u9ebb\u70e6\u3002  \n\u66f4\u5feb\u7684\u65b9\u6cd5\u662f\u518d\u7d2f\u52a0\u4e00\u904d\u5728 $l_j\\leq pos_i$ \u4e2d $pos_i < pos_j \\leq r_i$ \u7684 $j$ \u7684\u4e2a\u6570\u3002  \n\u7136\u540e\u628a\u7edf\u8ba1\u51fa\u7684\u7b54\u6848\u9664\u4ee5 $2$ \uff0c\u8fd9\u76f8\u5f53\u4e8e\u5bf9\u4f4d\u7f6e\u4e0d\u540c\u7684\u70b9\u5bf9\u518d\u7b97\u4e00\u6b21\uff0c\u9664 $2$ \u540e\u5c31\u662f\u771f\u6b63\u7b54\u6848\u3002  \n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\times \\log(n)^2)$ \u3002  \n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=3e5+10;\nint n,m,_n,nn,x,r,y,tot;\nlong long ans;int b[N];\nstruct cdq{\n\tint l,r,pos,q,opt;\n\tcdq()=default;\n\tcdq(int _l,int _r,int _pos,int _q,int _opt):l(_l),r(_r),pos(_pos),q(_q),opt(_opt){}\n}q[N];char ch;\ninline void read(int &x){\n\tx=0;ch=getchar();\n\twhile(ch<'0'||ch>'9')ch=getchar();\n\twhile(ch>='0'&&ch<='9')x=x*10+ch-'0',ch=getchar();\n}\nvoid write(long long x){if(x>=10)write(x/10);putchar('0'+x%10);}\nbool cmpq(cdq &x,cdq &y){return x.q^y.q?x.q<y.q:abs(x.opt)<abs(y.opt);}\nbool cmpl(cdq &x,cdq &y){return x.l<y.l;}\nbool cmppos(cdq &x,cdq &y){return x.pos<y.pos;}\nint t[N];\n#define lowbit(i) i&(-i)\nvoid update(int pos,int v){for(int i=pos;i<=nn;i+=lowbit(i))t[i]+=v;}\nvoid clear(int pos){for(int i=pos;i<=nn;i+=lowbit(i))t[i]=0;}\nint inquiry(int pos){int res=0;for(int i=pos;i;i-=lowbit(i))res+=t[i];return res;}\nvoid solve(int l,int r){\n\tif(l==r)return;\n\tint mid=(l+r)>>1;\n\tsolve(l,mid);solve(mid+1,r);\n\tsort(q+l,q+mid+1,cmpl);sort(q+mid+1,q+r+1,cmppos);\n\tint j=l;\n\tfor(int i=mid+1;i<=r;i++){\n\t\twhile(j<=mid&&q[j].l<=q[i].pos){\n\t\t\tif(!q[j].opt)update(q[j].pos,1);\n\t\t\tj++;\n\t\t}\n\t\tif(q[i].opt)ans+=(2*inquiry(q[i].r)-inquiry(q[i].pos-1)-inquiry(q[i].pos))*q[i].opt;\n\t\t//\u7b97\u5165pos_i<=pos_j<=r_i\u4ee5\u53capos_i<pos_j<=r_i\u7684\u8d21\u732e \n\t}\n\tfor(int i=l;i<j;i++)if(!q[i].opt)clear(q[i].pos);\n}\nmain(){\n\tread(n),read(m);\n\tfor(int i=1;i<=n;i++){\n\t\tread(x),read(r),read(y);\n\t\tb[++_n]=x-r;b[++_n]=x+r;b[++_n]=x;\n\t\tq[++tot]=cdq(x-r,x+r,x,y,0);\n\t\tq[++tot]=cdq(x-r,x+r,x,y+m,1);\n\t\tq[++tot]=cdq(x-r,x+r,x,y-m-1,-1);\n\t\t//opt=1\u4ee3\u8868\u52a0\u4e0a\uff0copt=-1\u4ee3\u8868\u51cf\u53bb \n\t}\n\tsort(b+1,b+_n+1);nn=unique(b+1,b+_n+1)-b-1;\n\tfor(int i=1;i<=tot;i++)\n\t\tq[i].l=lower_bound(b+1,b+nn+1,q[i].l)-b,\n\t\tq[i].r=lower_bound(b+1,b+nn+1,q[i].r)-b,\n\t\tq[i].pos=lower_bound(b+1,b+nn+1,q[i].pos)-b;\n\tsort(q+1,q+tot+1,cmpq);\n\tsolve(1,tot);\n\tans-=n;//\u5728\u7edf\u8ba1pos_i<=pos_j<=r_i\u65f6\u4f1a\u7b97\u8fdb\u81ea\u5df1\uff0c\u5e94\u51cf\u6389 \n\twrite(ans>>1);\n}\n```",
        "postTime": 1627896642,
        "uid": 334380,
        "name": "Y_B_X",
        "ccfLevel": 7,
        "title": "\u9898\u89e3[CF1045G]"
    }
]