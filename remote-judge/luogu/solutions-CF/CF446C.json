[
    {
        "content": "\u5b66\u6821\u6a21\u62df\u8d5b\u51fa\u4e86\u8fd9\u9053\u9898\u2026\u2026\u7136\u540e\u6211\u60f3\u4e86\u4e2a\u5947\u602a\u7684\u505a\u6cd5\u5c45\u7136\u8fc7\u4e86\u2026\u2026\n\n\u522b\u4eba\u7684\u505a\u6cd5\u4f3c\u4e4e\u90fd\u662f\u628a\u524d\u7f00\u548c\u7528\u6590\u6ce2\u90a3\u5951\u8868\u793a\u2026\u2026\u6211\u7684\u505a\u6cd5\u662f\u8fd9\u6837\u7684\uff1a\n\n\u6590\u6ce2\u90a3\u5951\u6570\u6709\u8fd9\u6837\u4e00\u4e2a\u6027\u8d28\uff1a$f_{n+m}=f_{n+1}f_m+f_{n}f_{m-1}$\u3002\n\n\u8d1f\u7684\u4e0b\u6807\u4e5f\u6ca1\u4e8b\u3002\u81f3\u4e8e\u8d1f\u7684\u600e\u4e48\u6c42\uff0c\u53ef\u4ee5\u901a\u8fc7\u540e\u9762\u7684\u5012\u63a8\uff0c\u6bd4\u5982 $f_{-1}=f_1-f_0$\u3002\n\n\u90a3\u4e48\u8003\u8651\u5bf9 $[l,r]$ \u4fee\u6539\u662f\u600e\u6837\u7684\uff0c\u53d1\u73b0\u5bf9\u4e8e\u4e00\u4e2a\u4f4d\u7f6e $x$\uff0c\u5b83\u52a0\u4e86 $f_{x-l+1}$\u3002\n\n\u62c6\u5f00\uff1a$f_{x+1}f_{-l+1}+f_{x}f_{-l}$\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u7ebf\u6bb5\u6811\u8282\u70b9\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u533a\u95f4\u548c\uff0c\u548c\u4e24\u4e2a\u6807\u8bb0 $add1,add2$\u3002$add1$ \u8868\u793a\u8fd9\u4e2a\u70b9\u8981\u52a0 $add1(f_{l+1}+f_{l+2}\\dots f_{r+1})$\uff0c$add2$ \u8868\u793a\u8fd9\u4e2a\u70b9\u8981\u52a0 $add2(f_l+f_{l+1}+\\dots+f_r)$\u3002\n\n\u90a3\u4e48\u4fee\u6539\u548c\u4e0b\u63a8\u65f6\u5c31\u4f1a\u7b80\u5355\u5f88\u591a\u3002\u4fee\u6539\u65f6\uff0c\u7ed9 $add1$ \u52a0\u4e0a $f_{1-l}$\uff0c\u7ed9 $add2$ \u52a0\u4e0a $f_{-l}$\u3002\u4e0b\u63a8\u65f6\uff0c\u76f4\u63a5\u8ba9\u513f\u5b50\u7684\u6807\u8bb0\u52a0\u4e0a\u81ea\u5df1\u7684\u6807\u8bb0\u5373\u53ef\u3002\n\n\u5982\u679c\u8fd8\u4e0d\u61c2\u53ef\u4ee5\u770b\u4ee3\u7801\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=333333,mod=1000000009;\n#define lson o<<1,l,mid\n#define rson o<<1|1,mid+1,r\n#define FOR(i,a,b) for(int i=(a);i<=(b);i++)\n#define ROF(i,a,b) for(int i=(a);i>=(b);i--)\n#define MEM(x,v) memset(x,v,sizeof(x))\ninline int read(){\n    char ch=getchar();int x=0,f=0;\n    while(ch<'0' || ch>'9') f|=ch=='-',ch=getchar();\n    while(ch>='0' && ch<='9') x=x*10+ch-'0',ch=getchar();\n    return f?-x:x;\n}\nint n,m,a[maxn],fib[maxn],pre[maxn],sum[maxn*4],add1[maxn*4],add2[maxn*4],rfib[maxn];\ninline void pushup(int o){\n    sum[o]=(sum[o<<1]+sum[o<<1|1])%mod;\n}\ninline void pushdown(int o,int l,int r){\n    if(!add1[o] && !add2[o]) return;\n    int mid=(l+r)>>1;\n    add1[o<<1]=(add1[o<<1]+add1[o])%mod;\n    add1[o<<1|1]=(add1[o<<1|1]+add1[o])%mod;\n    add2[o<<1]=(add2[o<<1]+add2[o])%mod;\n    add2[o<<1|1]=(add2[o<<1|1]+add2[o])%mod;\t//\u7ed9\u513f\u5b50\u4e0b\u63a8\u6807\u8bb0\n    sum[o<<1]=(sum[o<<1]+1ll*(pre[mid+1]-pre[l]+mod)%mod*add1[o]%mod)%mod;\n    //\u52a0\u4e0aadd1(f_{l+1}+f_{l+2}+...+f_{r+1})\n    sum[o<<1]=(sum[o<<1]+1ll*(pre[mid]-pre[l-1]+mod)%mod*add2[o]%mod)%mod;\n    //\u52a0\u4e0aadd2(f_l+f_{l+1}+...+f_r)\n    sum[o<<1|1]=(sum[o<<1|1]+1ll*(pre[r+1]-pre[mid+1]+mod)%mod*add1[o]%mod)%mod;\n    sum[o<<1|1]=(sum[o<<1|1]+1ll*(pre[r]-pre[mid]+mod)%mod*add2[o]%mod)%mod;\n    add1[o]=add2[o]=0;\n}\nvoid build(int o,int l,int r){\n    if(l==r) return void(sum[o]=a[l]%mod);\n    int mid=(l+r)>>1;\n    build(lson);build(rson);\n    pushup(o);\n}\nvoid update(int o,int l,int r,int ql,int qr,int a1,int a2){\n    if(l>=ql && r<=qr){\n        add1[o]=(add1[o]+a1)%mod;\n        add2[o]=(add2[o]+a2)%mod;\n        sum[o]=(sum[o]+1ll*(pre[r+1]-pre[l]+mod)%mod*a1%mod)%mod;\n        sum[o]=(sum[o]+1ll*(pre[r]-pre[l-1]+mod)%mod*a2%mod)%mod;\n        //\u76f4\u63a5\u52a0\u4e0a\n        return;\n    }\n    pushdown(o,l,r);\n    int mid=(l+r)>>1;\n    if(mid>=ql) update(lson,ql,qr,a1,a2);\n    if(mid<qr) update(rson,ql,qr,a1,a2);\n    pushup(o);\n}\nint query(int o,int l,int r,int ql,int qr){\n    if(l>=ql && r<=qr) return sum[o];\n    pushdown(o,l,r);\n    int mid=(l+r)>>1,ans=0;\n    if(mid>=ql) ans=(ans+query(lson,ql,qr))%mod;\n    if(mid<qr) ans=(ans+query(rson,ql,qr))%mod;\n    return ans;\n}\nint main(){\n    n=read();m=read();\n    FOR(i,1,n) a[i]=read();\n    fib[1]=fib[2]=pre[1]=rfib[1]=1;\n    rfib[0]=0;\n    pre[2]=2;\n    rfib[2]=mod-1;\n    FOR(i,3,n+1){\n        fib[i]=(fib[i-1]+fib[i-2])%mod;\t//\u6590\u6ce2\u90a3\u5951\u6570\n        pre[i]=(pre[i-1]+fib[i])%mod;\t//\u6590\u6ce2\u90a3\u5951\u524d\u7f00\u548c\n        rfib[i]=(i&1)?fib[i]:mod-fib[i];\t//rfib[i]\u8868\u793a\u7b2c-i\u4e2a\u6590\u6ce2\u90a3\u5951\u6570\n    }\n    build(1,1,n);\n    FOR(i,1,m){\n        int op=read(),l=read(),r=read();\n        if(op==2) printf(\"%d\\n\",query(1,1,n,l,r));\n        else update(1,1,n,l,r,rfib[l-1],rfib[l]);\n        //add1\u52a0\u4e0af_{1-l}\uff0cadd2\u52a0\u4e0af_{-l}\n    }\n}\n\n```",
        "postTime": 1548645651,
        "uid": 72118,
        "name": "AThousandSuns",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF446C \u3010DZY Loves Fibonacci Numbers\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u53ef\u4ee5\u4e0d\u7528\u6590\u6ce2\u90a3\u5951\u7684\u524d\u7f00\u548c\u516c\u5f0f\u3002\n\n\u76f4\u63a5\u5199\u51fa\u6590\u6ce2\u90a3\u5951\u7684\u901a\u9879\u5f0f\u4e3a\n$$F_n=\\dfrac{1}{\\sqrt5}[(\\dfrac{1+\\sqrt5}{2})^n-(\\dfrac{1-\\sqrt5}{2})^n]$$\n\n\u7136\u540e\u53ef\u4ee5\u76f4\u63a5\u8f6c\u5316\u4e3a\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u52a0\u7b49\u6bd4\u6570\u5217\uff0c\u76f4\u63a5\u5957\u7b49\u6bd4\u6570\u5217\u6c42\u548c\u516c\u5f0f\u5373\u53ef\u3002\n\n$\\sqrt5$ \u5728 $\\bmod 10^9+9$ \u610f\u4e49\u4e0b\u6709\u4e8c\u6b21\u5269\u4f59\u4e3a $383008016$\uff0c\u6240\u4ee5\u5c31\u4e0d\u7528\u6269\u57df\u5566\u3002\n\n\u7136\u540e\u5c31\u505a\u5b8c\u4e86\uff0c\u4ee3\u7801\u770b\u4e0a\u53bb\u5f88\u957f\uff0c\u4f46\u662f\u5f88\u597d\u5199\uff0c\u6ca1debug\u5c31\u8fc7\u4e86\u3002\n\n```cpp\n#include<cstdio>\n#include<cctype>\n#define pprint(x) ::print(x),putchar(' ')\n#define fprint(x) ::print(x),putchar('\\n')\nusing namespace std;\ninline long long read()\n{\n\tlong long x = 0;int f = 1;\n\tchar ch = getchar();\n\tfor(;!isdigit(ch);ch = getchar())\n\t\tif(ch == '-')\n\t\t\tf = -1;\n\tfor(;isdigit(ch);ch = getchar())\n\t\tx = x * 10 + (ch ^ 48);\n\treturn x * f;\n}\nvoid print(long long x)\n{\n\tif(x < 0)\n\t\tx = -x,putchar('-');\n\tif(x > 9)\n\t\tprint(x / 10);\n\tputchar(x % 10 + '0');\n}\n\nconst int N = 300010,mod = 1000000009,q1 = 691504013,q2 = 308495997,Inv = 276601605;\n\nlong long qpow(long long a,int b)\n{\n\tlong long ans = 1;\n\twhile(b)\n\t{\n\t\tif(b & 1) ans = ans * a % mod;\n\t\tb >>= 1,a = a * a % mod;\n\t}\n\treturn ans;\n}\nlong long Mod(long long a)\n{\n\tif(a > mod)\n\t\ta -= mod;\n\telse if(a < 0)\n\t\ta += mod;\n\treturn a;\n}\n\nint n,m;\n\nstruct Seg_Tree\n{\n\tlong long q,inv,m[N];\n\tstruct tree\n\t{\n\t\tint l,r;\n\t\tlong long sum,lz;\n\t}t[N << 2];\n\n\t#define ls now << 1\n\t#define rs now << 1 | 1\n\n\tvoid build(int now,int l,int r)\n\t{\n\t\tt[now].l = l,t[now].r = r;\n\t\tt[now].sum = t[now].lz = 0;\n\t\tif(l == r)\n\t\t\treturn;\n\t\tint mid = l + r >> 1;\n\t\tbuild(ls,l,mid),build(rs,mid + 1,r);\n\t}\n\tvoid init(int Q)\n\t{\n\t\tq = Q,inv = qpow(q - 1,mod - 2);\n\t\tm[1] = q;\n\t\tfor(int i = 2;i <= n;i++)\n\t\t\tm[i] = m[i - 1] * q % mod;\n\t\tbuild(1,1,n);\n\t}\n\n\tvoid pusha(int now,long long a)\n\t{\n\t\tint l = t[now].l,r = t[now].r;\n\t\tt[now].lz = Mod(t[now].lz + a);\n\t\tt[now].sum = (t[now].sum + Mod(a * m[r - l + 1] % mod - a) * inv) % mod;\n\t}\n\tvoid pushdown(int now)\n\t{\n\t\tif(t[now].lz)\n\t\t{\n\t\t\tint l = t[now].l,r = t[now].r,mid = l + r >> 1;\n\t\t\tpusha(ls,t[now].lz);\n\t\t\tpusha(rs,t[now].lz * m[mid - l + 1] % mod);\n\t\t\tt[now].lz = 0;\n\t\t}\n\t}\n\tvoid pushup(int now)\n\t{\n\t\tt[now].sum = Mod(t[ls].sum + t[rs].sum);\n\t}\n\tvoid update(int now,int l,int r,int a)\n\t{\n\t\tif(t[now].l == l && t[now].r == r)\n\t\t{\n\t\t\tpusha(now,a);\n\t\t\treturn;\n\t\t}\n\t\tpushdown(now);\n\t\tint mid = t[now].l + t[now].r >> 1;\n\t\tif(r <= mid)\n\t\t\tupdate(ls,l,r,a);\n\t\telse if(l > mid)\n\t\t\tupdate(rs,l,r,a);\n\t\telse\n\t\t\tupdate(ls,l,mid,a),update(rs,mid + 1,r,a * m[mid - l + 1] % mod);\n\t\tpushup(now);\n\t}\n\tlong long query(int now,int l,int r)\n\t{\n\t\tif(t[now].l == l && t[now].r == r)\n\t\t\treturn t[now].sum;\n\t\tpushdown(now);\n\t\tint mid = t[now].l + t[now].r >> 1;\n\t\tif(r <= mid)\n\t\t\treturn query(ls,l,r);\n\t\telse if(l > mid)\n\t\t\treturn query(rs,l,r);\n\t\telse\n\t\t\treturn Mod(query(ls,l,mid) + query(rs,mid + 1,r));\n\t\tpushup(now);\n\t}\n\n\t#undef ls\n\t#undef rs\n};\n\nSeg_Tree t1,t2;\nlong long sum[N];\n\nint main()\n{\n\tn = read(),m = read();\n\tfor(int i = 1;i <= n;i++)\n\t\tsum[i] = Mod(sum[i - 1] + read());\n\tt1.init(q1),t2.init(q2);\n\twhile(m--)\n\t{\n\t\tint op = read(),l = read(),r = read();\n\t\tif(op == 1)\n\t\t\tt1.update(1,l,r,q1),t2.update(1,l,r,q2);\n\t\telse\n\t\t{\n\t\t\tlong long a = t1.query(1,l,r);\n\t\t\tlong long b = t2.query(1,l,r);\n\t\t\ta = Mod(a - b) * Inv % mod;\n\t\t\tfprint(Mod(Mod(a - sum[l - 1]) + sum[r]) % mod);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1583202507,
        "uid": 53994,
        "name": "81179332_",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF446C \u3010DZY Loves Fibonacci Numbers\u3011"
    },
    {
        "content": "# \u9898\u89e3 CF446C\n\u8fd9\u662f\u4e00\u9053\u6570\u636e\u7ed3\u6784\u9898\u3002\n\n\u6211\u4eec\u5148\u7ffb\u8bd1\u4e0b\u9898\u76ee\uff1a\n\n\u7ed9\u4f60\u4e00\u4e2an\uff0c\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3an\u7684\u5e8f\u5217\uff0c\u7ed9\u4f60\u4e00\u4e2am\uff0c\u7ed9\u4f60m\u6b64\u64cd\u4f5c\uff0c\u5305\u62ec\u533a\u95f4\u4fee\u6539\u548c\u67e5\u8be2\uff0c\u4fee\u6539\u4e3a\u5728\u4e00\u4e2a\u533a\u95f4\u5185\u6bcf\u4e2a\u6570\u52a0\u4e0a\u4ed6\u6240\u5bf9\u5e94\u7684\u6590\u6ce2\u90a3\u5951\u6570\uff0c\u67e5\u8be2\u4e3a\u67e5\u8be2\u533a\u95f4\u548c\u3002\n\n\u4e00\u770b\u5230\u533a\u95f4\u4fee\u6539\u548c\u533a\u95f4\u67e5\u8be2\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u77e5\u9053\u8fd9\u662f\u4e00\u9053\u7ebf\u6bb5\u6811\u7684\u9898\u76ee\uff08\u4e0d\u8981\u95ee\u6211\u600e\u4e48\u77e5\u9053\u7684\uff0c~~\u6211\u4e5f\u60f3\u77e5\u9053~~\uff09\n\n\u8fdb\u5165\u6b63\u9898\uff1a\n\n\u6211\u4eec\u4e00\u5b9a\u8981\u627e\u5230\u4e00\u79cd\u65b9\u6cd5\uff0c\u7ef4\u62a4\u533a\u95f4\u548c\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u628a\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u6bcf\u4e00\u9879\u62c6\u5f00\uff0c\u627e\u89c4\u5f8b\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\uff1a\n\n$$f_1=f_1,f_2=f_2$$\n$$f_3=f_1+f_2,f_4=f_1+2*f_2$$\n$$f_5=2*f_1+3*f_2,f_6=3*f_1+5*f_2$$\n\n\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u89c4\u5f8b\n\n$$f_i=f_{i-1}*f_2+f_{i-2}*f_1$$\n\n\u56e0\u4e3a\u5728\u533a\u95f4\u5185\u52a0\u5165\u4e00\u4e2a\u6590\u6ce2\u90a3\u5951\u6570\u5217\uff0c\u8fd9\u4e2a\u533a\u95f4\u4efb\u7136\u6ee1\u8db3\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u5173\u7cfb\uff0c\u53ea\u662f$f_1$\u548c$f_2$\u53d8\u4e86\u800c\u5df2\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u7528{a}\u6765\u7ef4\u62a4\u8fd9\u4e2a\u6590\u6ce2\u90a3\u5951\u6570\u5217\uff0c\u5373\u53ef\u8868\u793a\u4e3a\uff1a\n\n$$a_i=f_{i-1}*a_2+f_{i-2}*a_1$$\n\n\u56e0\u4e3a\u662f\u7ef4\u62a4\u533a\u95f4\u548c\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u7d2f\u52a0\u548c\uff0c\u6545\uff0c\u6211\u4eec\u518d\u5c06\u5f0f\u5b50\u62c6\u5f00\uff0c\u53ef\u4ee5\u5f97\u5230\uff1a\n\n$$s_3=2*a_1+2*a_2$$\n$$s_4=3*a_1+4*a_2$$\n$$s_5=5*a_1+7*a_2$$\n\n\u7ecf\u8fc7\u89c2\u5bdf\u548c\u5f52\u7eb3\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff1a\n\n$$\\sum_ {i=1}^n a_i = f_n*a_1+(f_{n+1}-1)*a_2$$\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4e00\u5f00\u59cb\u505a\u8fd9\u9053\u9898\u4e86\u3002\n\n\u6211\u4eec\u7528\u4e24\u4e2a\u61d2\u60f0\u6807\u8bb0\uff0c\u5206\u522b\u4e3a$f1$\u548c$f2$\uff0c\u6765\u7ef4\u62a4\u67d0\u4e00\u6bb5\u533a\u95f4\u7684\u548c\uff0c\u5f53\u6211\u4eec\u8981\u6c42\u8fd9\u6bb5\u533a\u95f4\u7684\u548c\u65f6\uff0c\u6211\u4eec\u53ea\u8981\u7528\u4e0a\u9762\u90a3\u4e2a\u516c\u5f0f\u6c42\u51fa\u533a\u95f4\u548c\uff0c\u7136\u540e\u52a0\u5165\u503c\u4e2d\u5c31\u884c\u4e86\u3002\n\n---------------------------------------------------\u6211\u662f~~\u8d85\u7ea7\u53ef\u7231~~\u7684\u5206\u5272\u7ebf-------------------------------------------------\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nconst int N=300009;\nconst ll P=1e9+9;\nint n,m;\nll f[N];\nstruct Segtree\n{\n\tll v,f1,f2;\n}tree[N<<2];\ninline ll read()\n{\n\tll x=0,flag=1;\n\tchar ch=getchar();\n\twhile(ch>'9'||ch<'0') {if(ch=='-') ch=getchar();flag=-1;}\n\twhile(ch>='0'&&ch<='9') x=x*10+ch-'0',ch=getchar();\n\treturn x*flag;\n}\nvoid build(int k,int l,int r)\n{\n\tif(l==r)\n\t{\n\t\ttree[k].v=read();\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(k<<1,l,mid);\n\tbuild(k<<1|1,mid+1,r);\n\ttree[k].v=tree[k<<1].v+tree[k<<1|1].v;\n\ttree[k].v%=P;\n}\nvoid push_down(int k,int l,int r) //\u6807\u8bb0\u4e0b\u4f20 \n{\n\tif(!(tree[k].f1==0 && tree[k].f2==0))\n\t{\n\t\tint mid=(l+r)>>1;\n\t\ttree[k<<1].f1+=tree[k].f1;\n\t\ttree[k<<1].f1%=P;\n\t\ttree[k<<1].f2+=tree[k].f2;\n\t\ttree[k<<1].f2%=P;\n\t\ttree[k<<1].v+=tree[k].f2*(f[mid-l+2]-1)+tree[k].f1*f[mid-l+1];\n\t\ttree[k<<1].v%=P; \n\t\tint pos=mid-l+2;\n\t\ttree[k<<1|1].f1+=f[pos-1]*tree[k].f2+f[pos-2]*tree[k].f1;\n\t\ttree[k<<1|1].f1%=P;\n\t\ttree[k<<1|1].f2+=f[pos]*tree[k].f2+f[pos-1]*tree[k].f1;\n\t\ttree[k<<1|1].f2%=P;\n\t\ttree[k<<1|1].v+=tree[k].f2*(f[r-l+2]-1)+tree[k].f1*f[r-l+1]-tree[k].f2*(f[mid-l+2]-1)-tree[k].f1*f[mid-l+1];\n\t\ttree[k<<1|1].v%=P;\n\t\ttree[k].f1=0,tree[k].f2=0;\n\t}\n}\nvoid modify(int k,int l,int r,int x,int y)\n{\n\tif(l>y || r<x) return;\n\tif(l>=x && r<=y) \n\t{\n\t\ttree[k].f1+=f[l-x+1];\n\t\ttree[k].f1%=P;\n\t\ttree[k].f2+=f[l-x+2];\n\t\ttree[k].f2%=P;\n\t\ttree[k].v+=f[r-l+1]*f[l-x+1]%P+(f[r-l+2]-1)*f[l-x+2]%P; \n\t\ttree[k].v%=P;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tpush_down(k,l,r);\n\tmodify(k<<1,l,mid,x,y);\n\tmodify(k<<1|1,mid+1,r,x,y);\n\ttree[k].v=tree[k<<1].v+tree[k<<1|1].v;\n\ttree[k].v%=P;\n}\nvoid init()\n{\n\tf[1]=1,f[2]=1;\n\tfor(int i=3;i<=n+1;i++) f[i]=f[i-1]+f[i-2],f[i]%=P;\n}\nll query(int k,int l,int r,int x,int y)\n{\n\tif(l>y || r<x) return 0;\n\tif(l>=x && r<=y) return tree[k].v;\n\tpush_down(k,l,r);\n\tint mid=(l+r)>>1;\n\treturn (query(k<<1,l,mid,x,y)+query(k<<1|1,mid+1,r,x,y))%P;\n}\n\nint main()\n{\n\tn=read();m=read();\n\tbuild(1,1,n);\n\tinit();\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint t=read(),x=read(),y=read();\n\t\tif(t==1) modify(1,1,n,x,y);\n\t\telse printf(\"%lld\\n\",(query(1,1,n,x,y)%P+P)%P);\n\t}\n\treturn 0;\n}\n```\n\n~~\u5783\u573e\u6570\u636e\u7ed3\u6784~~",
        "postTime": 1579179628,
        "uid": 108610,
        "name": "Dzhao",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF446C \u3010DZY Loves Fibonacci Numbers\u3011"
    },
    {
        "content": "$$\\color{cornflowerblue}{\\mathcal{Treaker}}$$\n# \u7ebf\u6bb5\u6811 + \u6590\u6ce2\u90a3\u5951\u6570\u5217\n\u76ef\u4e863\u4e2a\u5c0f\u65f6\uff0c\u7ec8\u4e8e\u7814\u7a76\u900f\u5f7b\u4e86\u3002\u3002\u3002\n\n\u8fd9\u9053\u9898\uff0c\u9700\u8981\u533a\u95f4\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\uff0c\u81ea\u7136\u4f1a\u60f3\u5230\u7ebf\u6bb5\u6811\u3002\u3002\n\n\u5176\u5b9e\u533a\u95f4\u52a0\u662f\u5f88\u597d\u7ef4\u62a4\u7684\uff0c\u4f46\u662f\u4e0b\u653e\u6807\u8bb0\u662f\u4ec0\u4e48\u9b3c\u3002\u3002\n\n\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u7cfb\u6570\u76f4\u63a5\u52a0\uff1f\uff1f\uff1f~~\u663e\u7136\u4e0d\u5bf9\u561b~~\n\n\u600e\u4e48\u529e\u554a\u3002\u3002\n\n\u6211\u4eec\u8003\u8651\u5e7f\u4e49\u6590\u6ce2\u90a3\u5951\u6570\u5217$s_i$\u3002\n\n$$s_i  = a * f_{i-2} + b * f_{i-1}$$\n\n\u5e76\u4e14\u6709\u4e00\u4e2a\u795e\u5947\u7684\u6027\u8d28\u3002\n$$\\sum_{i=1} ^ n s_i= s_{n+2} - s_2$$\n\u8fd9\u4e2a\u662f\u901a\u8fc7\u6570\u5b66\u5f52\u7eb3\u6cd5\u6765\u8bc1\u660e\u7684\u3002\u5177\u4f53\u7684\u8bdd\u5c31\u662f\u8fd9\u6837\u3002\n\n\u6211\u4eec\u8bbe \n$$S_n = \\sum_{i=1}^n s_i$$\n\u5219\n$$S_n=S_{n-1} + s_i = s_{n+1} - s_2 + s_i = s_{n+2}-s_2$$\n\n\n\u7ed3\u5408\u6700\u4e0a\u9762\u7684\u5f0f\u5b50\n$$S_n=\\sum_{i=1} ^ n s_i= s_{n+2} - s_2 = a * s_n + b * s_{n+1} - b$$\n\n\u90a3\u6211\u4eec\u533a\u95f4\u52a0\u4e5f\u5c31\u662f\u52a0\u4e0a $S_n$\n\n\u90a3\u4e48\u600e\u4e48\u6c42$S_n$\u5462\uff1f $f~$\u53ef\u4ee5\u9884\u5904\u7406 \uff0c \u5173\u952e\u5c31\u662f\u6c42$a,b$\u3002\n\n$a,b$\u4e5f\u5c31\u662f$s_1,s_2$\u3002 \u5bf9\u4e8e\u6bcf\u4e2a\u533a\u95f4\u7ef4\u62a4$s_1,s_2$\u3002 \n\n\u4e5f\u5c31\u662f\u533a\u95f4\u7684\u524d\u4e24\u4e2a\u4f4d\u7f6e\u3002\n\n\u533a\u95f4\u4fee\u6539\u65f6\u8ba9$s_1,s_2$\u52a0\u4e0a\u5b83\u6240\u5bf9\u5e94\u7684\u4f4d\u7f6e\u7684\u503c\uff0c\u5e76\u66f4\u65b0\u533a\u95f4\u548c\u3002\n```cpp\ninline void add(ll a,ll b)\n{\n     tag = (tag + a) % mod; laz = (laz + b) % mod;\n     sum = (sum + a * f[len()] % mod + b * f[len() + 1] % mod - b) % mod;\n}\n```\n\u8003\u8651\u6807\u8bb0\u5982\u4f55\u4e0b\u653e\u3002\n\n\u6211\u7684\u4e00\u4e2a\u533a\u95f4\u8981\u5f80\u4e24\u4e2a\u5c0f\u533a\u95f4\u91cc\u4e0b\u653e\u6807\u8bb0\u3002\n\n\u5de6\u533a\u95f4\u7684$s_1,s_2$\u4f4d\u7f6e\u548c\u5927\u533a\u95f4\u5bf9\u5e94\uff0c\u76f4\u63a5\u4e0b\u653e\u5373\u53ef\u3002\n\n\u53f3\u533a\u95f4\u6211\u4eec\u9700\u8981\u6c42\u51fa\u6765\u3002\u4e5f\u5c31\u662f\u7528\u901a\u9879\u516c\u5f0f\u6765\u6c42\u3002\n```cpp\ninline void down()\n{\n  if(!tag) return;\n  ll tmpa = (tag * f[ls -> len() - 1] % mod + laz * f[ls -> len()] % mod) % mod;\n  ll tmpb = (tag * f[ls -> len()] % mod + laz * f[ls -> len() + 1] % mod) % mod;\n  ls -> add(tag,laz); rs -> add(tmpa,tmpb);\n  tag = laz = 0;\n}\n```\n\u7136\u540e\u5176\u4ed6\u64cd\u4f5c\u5c31\u5f88\u5e38\u89c4\u3002\n\n\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n#define ll long long\nusing namespace std;\nconst int N = 3e5+10 , inf = 1e9 , M = 3e5 + 5;\nconst ll mod = 1e9+9;\ninline int read()\n{\n\tint x = 0 , f = 1;\tchar ch = getchar();\n\twhile(ch < '0' || ch > '9')\t{if(ch == '-')\tf = -1; ch = getchar();}\n\twhile(ch >= '0' && ch <= '9') {x = (x << 3) + (x << 1) + (ch ^ 48); ch = getchar();}\n\treturn x * f;\n}\nint n , m;\nll f[N];\nstruct Segment_Tree\n{\n\tinline void init()\n\t{\n\t\tf[0] = 0; f[1] = 1;\n\t\tfor(int i = 2;i <= M;i ++) f[i] = (f[i-2] + f[i-1]) % mod;\n\t}\n\tstruct node\n\t{\n\t\tnode *ls , *rs;\n\t\tint l , r; ll sum , tag , laz;\n\t\tnode(int l,int r) : l(l) , r(r) {ls = rs = NULL; tag = laz = sum = 0;}\n        inline int len() {return r - l + 1;}\n\t\tinline void up() {sum = (ls -> sum + rs -> sum) % mod;}\n        inline void add(ll a,ll b)\n        {\n            tag = (tag + a) % mod; laz = (laz + b) % mod;\n            sum = (sum + a * f[len()] % mod + b * f[len() + 1] % mod - b) % mod;\n        }\n\t\tinline void down()\n\t\t{\n\t\t\tif(!tag) return;\n            ll tmpa = (tag * f[ls -> len() - 1] % mod + laz * f[ls -> len()] % mod) % mod;\n            ll tmpb = (tag * f[ls -> len()] % mod + laz * f[ls -> len() + 1] % mod) % mod;\n            ls -> add(tag,laz); rs -> add(tmpa,tmpb);\n\t\t\ttag = laz = 0;\n\t\t}\n \t}*root;\n\tSegment_Tree() {root = NULL;}\n    #define mid ((p -> l + p -> r) >> 1)\n\tvoid build(node *&p,int l,int r)\n\t{\n\t\tp = new node(l,r);\n\t\tif(p -> l == p -> r) return (void)(p -> sum = 1ll * read() % mod);\n\t\tbuild(p -> ls,l,mid); build(p -> rs,mid+1,r); p -> up();\n\t}\n\tll query(node *p,int x,int y)\n\t{\n\t\tif(x <= p -> l && p -> r <= y) return p -> sum; p -> down();\n\t\treturn ((x <= mid ? query(p -> ls,x,y) : 0) + (y > mid ? query(p -> rs,x,y) : 0)) % mod;\n\t}\n\tvoid chenge(node *p,int x,int y)\n\t{\n\t\tif(x <= p -> l && p -> r <= y) return (void)(p -> add(f[p -> l - x + 1],f[p -> l - x + 2]));\n        p -> down();\n\t\tif(x <= mid) chenge(p -> ls,x,y);\n\t\tif(y > mid) chenge(p -> rs,x,y);\n\t\tp -> up();\n\t}\n\tinline void LOL()\n\t{\n\t\tinit();\n\t\tn = read(); m = read();\n\t\tbuild(root,1,n);\n\t\tfor(int i = 1 , opt , l , r , x;i <= m;i ++)\n\t\t{\n\t\t\topt = read(); l = read(); r = read();\n\t\t\tif(opt ^ 1) printf(\"%lld\\n\",(query(root,l,r) + mod) % mod);\t\n\t\t\telse chenge(root,l,r);\n\t\t}\n\t}\n}DNF;\nint main()\n{\n\tDNF.LOL();\n\treturn 0;\n}\n```",
        "postTime": 1571235232,
        "uid": 153898,
        "name": "Treaker",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF446C \u3010DZY Loves Fibonacci Numbers\u3011"
    },
    {
        "content": "### \u300cCF446C\u300d DZY Loves Fibonacci Numbers\r\n\r\n\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u4f18\u7f8e\u7684\u6839\u53f7\u5206\u6cbb\u505a\u6cd5\u3002\r\n\r\n\u9996\u5148\uff0c\u6211\u4eec\u8003\u8651\u4e00\u79cd\u4e0d\u592a\u4e00\u6837\u7684\u66b4\u529b\u3002\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4\u52a0\u6590\u6ce2\u90a3\u5951\u6570\u7684\u64cd\u4f5c $[a,b]$\uff0c\u4ee5\u53ca\u4e00\u4e2a\u533a\u95f4\u6c42\u548c\u7684\u64cd\u4f5c $[p,q]$\uff0c\u4ec5\u9700\u9884\u5904\u7406\u6590\u6ce2\u90a3\u5951\u6570\u5217\u524d\u7f00\u548c\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728 $O(1)$ \u7684\u65f6\u95f4\u5185\u7b97\u51fa $[a,b]$ \u5bf9 $[p,q]$ \u7684\u8d21\u732e\u3002\r\n\r\n\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u4e3a $O(n^2)$\u3002\r\n\r\n\u518d\u8003\u8651\u4f20\u7edf\u66b4\u529b\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4\u52a0\u6590\u6ce2\u90a3\u5951\u6570\u7684\u64cd\u4f5c $[a,b]$\uff0c\u76f4\u63a5\u5c06\u5176\u4f5c\u7528\u5230\u539f\u6570\u5217 $a$ \u4e0a\u3002\r\n\r\n\u90a3\u4e48\u6211\u4eec\u53ef\u4e0d\u53ef\u4ee5\u5c06\u591a\u4e2a\u533a\u95f4\u52a0\u6590\u6ce2\u90a3\u5951\u6570\u7684\u64cd\u4f5c\u4e00\u8d77\u4f5c\u7528\u5230\u539f\u6570\u5217\u4e0a\u5462\uff1f\r\n\r\n\u7b54\u6848\u662f\u80af\u5b9a\u7684\u3002\r\n\r\n\u9996\u5148\u6709\u4e00\u4e2a\u663e\u7136\u7684\u7ed3\u8bba\uff1a\u82e5 $a_i=a_{i-1}+a_{i-2},b_j=b_{j-1}+b_{j-2}$\uff0c\u5219\u6709 $a_i+b_j=a_{i-1}+a_{i-2}+b_{j-1}+b_{j-2}$\u3002\r\n\r\n\u8fd9\u542f\u53d1\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u591a\u6b21\u533a\u95f4\u52a0\u64cd\u4f5c\u540c\u65f6\u8fdb\u884c\u9012\u63a8\u3002\r\n\r\n\u6211\u4eec\u7ef4\u62a4\u6bcf\u4e2a\u533a\u95f4\u52a0\u64cd\u4f5c\u7684\u8d77\u6b62\u70b9\uff0c\u5728\u64cd\u4f5c\u5f00\u59cb\u65f6\u52a0\u5165\u6570 $1$ \u8fdb\u884c\u9012\u63a8\uff0c\u64cd\u4f5c\u7ed3\u675f\u65f6\u5220\u9664\u8be5\u64cd\u4f5c\u6240\u7528\u5230\u7684\u4e24\u4e2a\u6570\uff0c\u5c31\u53ef\u4ee5\u5728 $O(n)$ \u7684\u65f6\u95f4\u5185\u5c06\u591a\u6b21\u64cd\u4f5c\u540c\u65f6\u8fdb\u884c\u3002\r\n\r\n\u5177\u4f53\u53ef\u89c1\u4ee3\u7801\uff0c\u975e\u5e38\u6e05\u6670\u3002\r\n\r\n\u82e5\u6211\u4eec\u6bcf $T$ \u6b21\u64cd\u4f5c\u540e\u5c06\u5f53\u524d\u7684\u591a\u4e2a\u533a\u95f4\u52a0\u6590\u6ce2\u90a3\u5951\u6570\u7684\u64cd\u4f5c\u4e00\u8d77\u4f5c\u7528\u5230\u539f\u6570\u5217\u4e0a\uff0c\u5176\u4f59\u65f6\u5019\u66b4\u529b\uff0c\u8fd9\u6837\u7684\u6700\u574f\u590d\u6742\u5ea6\u4e3a $O(\\frac{n^2}{T}+Tn)$\u3002\u53d6 $T=\\sqrt n $ \u65f6\u590d\u6742\u5ea6\u6700\u4f18\uff0c\u4e3a $O(n\\sqrt n)$\u3002\u867d\u5728\u7406\u8bba\u590d\u6742\u5ea6\u4e0a\u900a\u4e8e\u7ebf\u6bb5\u6811\u89e3\u6cd5\uff0c\u4f46\u5176\u5e38\u6570\u5c0f\uff0c\u4ee3\u7801\u590d\u6742\u5ea6\u4f4e\uff0c\u5b9e\u9645\u8868\u73b0\u4e0e\u5b9e\u73b0\u4e00\u822c\u7684\u7ebf\u6bb5\u6811\u76f8\u5dee\u65e0\u51e0\u751a\u81f3\u7565\u4f18\uff0c\u4e0d\u5931\u4e3a\u4e00\u79cd\u826f\u597d\u7684\u89e3\u9898\u65b9\u5f0f\u3002\r\n\r\n\u540c\u65f6\u6ce8\u610f\uff0c\u5757\u957f\u7684\u8c03\u6574\u53ef\u80fd\u4f1a\u4f7f\u8be5\u7b97\u6cd5\u7684\u6548\u7387\u8fdb\u4e00\u6b65\u63d0\u5347\uff0c\u56e0\u4e3a\u663e\u7136 $O(Tn)$ \u90e8\u5206\u662f\u8fbe\u4e0d\u5230\u4e0a\u754c\u7684\uff0c\u6545\u4ee3\u7801\u5bf9\u4e8e\u91cd\u6784\u7684\u5b9e\u73b0\u65b9\u5f0f\u4e0e\u9898\u89e3\u7565\u6709\u4e0d\u540c\u3002\r\n\r\n\u8d34\u4ee3\u7801\uff1a\r\n\r\n```cpp\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int p=1e9+9;\r\nconst int maxn=3e5+5;\r\nint fib[maxn],sum[maxn];\r\nint b[maxn],v[maxn],val[maxn];\r\nint l[maxn],r[maxn],tot;\r\nint n,m;\r\nint md(int x){\r\n\tif(x>p) return x-p;\r\n\tif(x<0) return x+p;\r\n\treturn x;\r\n}\r\nvector<int> p1[maxn],p2[maxn];\r\nvoid rebuild(){\r\n\tfor(int i=1;i<=tot;++i){\r\n\t\tp1[l[i]].emplace_back(i);\r\n\t\tp2[r[i]].emplace_back(i);\r\n\t}\r\n\tint a=0,b=0;\r\n\tfor(int i=1;i<=n;++i){\r\n\t\tint c=md(a+b);\r\n\t\tval[i]=md(val[i]+c);\r\n\t\ta=b,b=c;\r\n\t\tfor(auto x:p1[i]) b=md(b+1),val[i]=md(val[i]+1);\r\n\t\tfor(auto x:p2[i]){\r\n\t\t\tint L=l[x],R=r[x];\r\n\t\t\tb=md(b-fib[R-L+1]);\r\n\t\t\ta=md(a-fib[R-L]);\r\n\t\t}\r\n\t\tv[i]=md(v[i-1]+val[i]);\r\n\t}\r\n\tfor(int i=1;i<=tot;++i){\r\n\t\tp1[l[i]].clear();\r\n\t\tp2[r[i]].clear();\r\n\t}\r\n\ttot=0;\r\n}\r\nint main(){\r\n\tios::sync_with_stdio(0);\r\n\tcin.tie(0),cout.tie(0);\r\n\tcin>>n>>m;\r\n\tfib[1]=1,fib[2]=1;\r\n\tfor(int i=3;i<=n;++i) fib[i]=md(fib[i-1]+fib[i-2]);\r\n\tfor(int i=1;i<=n;++i) sum[i]=md(sum[i-1]+fib[i]);\r\n\tfor(int i=1;i<=n;++i) cin>>val[i],v[i]=md(v[i-1]+val[i]);\r\n\tint lim=sqrt(m);\r\n\tfor(int _=1;_<=m;++_){\r\n\t\tint opt,a,b;cin>>opt>>a>>b;\r\n\t\tif(opt==1) l[++tot]=a,r[tot]=b;\r\n\t\telse{\r\n\t\t\tint ans=0;\r\n\t\t\tfor(int i=1;i<=tot;++i){\r\n\t\t\t\tint L=max(a,l[i]),R=min(b,r[i]);\r\n\t\t\t\tif(L<=R){\r\n\t\t\t\t\tans=md(ans+md(sum[R-l[i]+1]-sum[L-l[i]]));\r\n\t\t\t\t\tif(ans>p) ans-=p;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcout<<md(ans+md(v[b]-v[a-1]))<<'\\n';\r\n\t\t}\r\n\t\tif(tot==lim) rebuild();\r\n\t}\r\n\treturn 0;\r\n}\r\n```\r\n\r\n\r\n\r\n",
        "postTime": 1604298629,
        "uid": 43957,
        "name": "HenryHuang",
        "ccfLevel": 9,
        "title": "\u300cCF446C\u300d DZY Loves Fibonacci Numbers"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://xiaohuang888.github.io/2019/08/02/%E3%80%8E%E9%A2%98%E8%A7%A3%E3%80%8FCodeforces446C%20DZY%20Loves%20Fibonacci%20Numbers)\n\n### Solution\n\n\u4e00\u4e9b\u7ea6\u5b9a\uff1a\u628a\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u524d\u4e24\u4e2a\u6570$F_1 = 1, F_2 = 1$\u6362\u6210\u53e6\u4e24\u4e2a\u6570\uff0c\u4ecd\u6ee1\u8db3$F_n = F_{n - 1} + F_{n - 2}(n > 2)$\u7684\u6570\u5217\u79f0\u4e3a\u5e7f\u4e49\u6590\u6ce2\u90a3\u5951\u6570\u5217\u3002\n\n`Fibonacci`\u6570\u5217\u6709\u4e00\u4e9b\u6027\u8d28\uff1a\n\n\u6027\u8d28$1$. $F_n = (\\sum^{n - 2}_{i = 1}{F_i}) + F_2(n > 2)$\uff1b\n\n\u8bc1\u660e\u5982\u4e0b\uff1a\n\n\u9996\u5148\u5c06\u524d\u51e0\u9879`Fibonacci`\u6570\u5217\u5c55\u5f00\u3002\n\n```\nF(1) = 1\nF(2) = 1\nF(3) = F(1) + F(2)\nF(4) = F(2) + F(3) = F(2) + F(1) + F(2)\nF(5) = F(3) + F(4) = F(3) + F(2) + F(1) + F(2)\nF(6) = F(4) + F(5) = F(4) + F(3) + F(2) + F(1) + F(2)\n......\n```\n\n\u5728$F_n = F_{n - 1} + F_{n - 2}$\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u628a$F_{n - 1}$\u6309\u5f0f\u5b50\u5c55\u5f00\uff0c\u53ef\u5f97$F_n = \\sum^{n - 3}_{i = 1}{F_i} + F_2 + F_{n - 2}$\uff0c\u5373$F_n = (\\sum^{n - 2}_{i = 1}{F_i}) + F_2(n > 2)$\uff0c\u8ddf\u539f\u5f0f\u4e00\u6a21\u4e00\u6837\uff0c\u6545\u539f\u5f0f\u6b63\u786e\u6027\u5f97\u8bc1\u3002\n\n\u6027\u8d28$2$. \u4e00\u4e2a\u5e7f\u4e49\u6590\u6ce2\u90a3\u5951\u6570\u5217\u6570\u5217$f_i$\uff0c \u5f53$f_1 = x, f_2 = y$\u65f6\uff0c\u5219\u6709$f_n = x \\times f_{n - 1} + y \\times f_{n - 2}$\n\n\u8bc1\u660e\u5982\u4e0b\uff1a\n\n\u8fd9\u4e2a\u6027\u8d28\u4e0e\u6027\u8d28`1`\u7c7b\u4f3c\uff0c\u8bc1\u660e\u65b9\u6cd5\u4e5f\u4e0e\u6027\u8d28`1`\u7c7b\u4f3c\uff0c\u5217\u4e3e\u51e0\u4e2a\uff1a\n\n```\nf(1) = x\nf(2) = y\nf(3) = f(1) + f(2) = x \u00d7 F(1)\nf(4) = f(2) + f(3) = x \u00d7 F(1) + y \u00d7 F(2)\nf(5) = f(3) + f(4) = x \u00d7 F(2) + y \u00d7 F(3)\nf(6) = f(4) + f(5) = x \u00d7 F(3) + y \u00d7 F(4)\n......\n```\n\n\u628a\u4e0a\u8ff0\u89c4\u5f8b\u63a8\u5e7f\u5230\u4ee3\u6570\u5f0f\uff1a\n\n$$\\begin{aligned} f_n &= f_{n - 1} + f_{n - 2} \\\\ & = x \\times f_{n - 2} + y \\times f_{n - 3} + x \\times f_{n - 3} + y \\times f_{n - 4} \\\\ & = x \\times (f_{n - 2} + f_{n - 3}) + y \\times (f_{n - 3} + f_{n - 4}) \\\\ & = x \\times f_{n - 1} + y \\times f_{n - 2} \\end{aligned}$$\n\n\u8bc1\u6bd5\u3002\n\n\u6027\u8d28$3$. \u4efb\u610f\u4e24\u6bb5\u4e0d\u540c\u7684\u5e7f\u4e49\u6590\u6ce2\u90a3\u5951\u6570\u5217\u6bb5\u76f8\u52a0\uff08\u9010\u9879\u76f8\u52a0\uff09\uff0c\u6240\u5f97\u7684\u6570\u5217\u4efb\u7136\u662f\u5e7f\u4e49\u6590\u6ce2\u90a3\u5951\u6570\u5217\u3002\n\n\u8fd9\u4e2a\u6027\u8d28\u6613\u8bc1\u3002\n\n---\n\n\u8fd9\u9898\u6211\u4eec\u7ef4\u62a4\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u7ebf\u6bb5\u6811\u9700\u8981\u7ef4\u62a4$L$\u81f3$R$\u533a\u95f4\u7684\u5e7f\u4e49\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u7b2c\u4e00\u9879\uff0c\u7b2c\u4e8c\u9879\u4e0e\u533a\u95f4\u7684\u548c\u3002\n\n\u4e0b\u4f20\u6807\u8bb0\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5de6\u533a\u95f4\u52a0\u5e7f\u4e49\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u524d\u4e24\u9879\uff0c\u5728\u53f3\u533a\u95f4\u53ef\u4ee5\u6c42\u51fa\u603b\u548c\u518d\u52a0\u4e0a\u603b\u548c\u5c31\u884c\u4e86\uff0c\u65f6\u95f4\u590d\u6742$\\text{O(n log n)}$\u3002\n\n### Code\n\n```\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n\nusing namespace std;\n\ntypedef long long LL;\nconst int MAXN = 300005, MAXM = 1200005, mod = 1e9 + 9;\nstruct node {\n    int c1, c2, sum;\n} tree[MAXM];\nint n, m, opt, x, y, a[MAXN], f[MAXN];\ninline int add(int x, int y) {//\u4e24\u9879\u76f8\u52a0\u5e76\u53d6\u6a21\n    int ret = x + y;\n    if (ret < 0) return ret += mod; else return ret % mod;\n}\ninline int calc1(int x, int y, int len) {//\u8ba1\u7b97\u6590\u6ce2\u90a3\u5951\n    if (len == 1) return x; else\n    if (len == 2) return y; else return ((LL)x * f[len - 2] + (LL)y * f[len - 1]) % mod;\n}\ninline int calc2(int x, int y, int len) {//\u8ba1\u7b97\u603b\u548c\n    if (len == 1) return x; else\n    if (len == 2) return add(x, y); else return add(calc1(x, y, len + 2), -y);\n}\ninline void pushup(int rt) {\n    tree[rt].sum = add(tree[rt << 1].sum, tree[rt << 1 | 1].sum);\n}\ninline void pushdown(int rt, int l, int r) {//\u4e0b\u4f20\u6807\u8bb0\n    if (tree[rt].c1) {\n        int mid = l + r >> 1;\n        tree[rt << 1].c1 = add(tree[rt << 1].c1, tree[rt].c1);\n        tree[rt << 1].c2 = add(tree[rt << 1].c2, tree[rt].c2);\n        tree[rt << 1].sum = add(tree[rt << 1].sum, calc2(tree[rt].c1, tree[rt].c2, mid - l + 1));\n        int x = calc1(tree[rt].c1, tree[rt].c2, mid - l + 2), y = calc1(tree[rt].c1, tree[rt].c2, mid - l + 3);\n        tree[rt << 1 | 1].c1 = add(tree[rt << 1 | 1].c1, x);\n        tree[rt << 1 | 1].c2 = add(tree[rt << 1 | 1].c2, y);\n        tree[rt << 1 | 1].sum = add(tree[rt << 1 | 1].sum, calc2(x, y, r - mid));\n        tree[rt].c1 = 0; tree[rt].c2 = 0;\n    }\n}\ninline void update(int rt, int l, int r, int ansl, int ansr) {//\u7ebf\u6bb5\u6811\u533a\u95f4\u66f4\u65b0\n    if (ansl <= l && r <= ansr) {\n        tree[rt].c1 = add(tree[rt].c1, f[l - ansl + 1]);\n        tree[rt].c2 = add(tree[rt].c2, f[l - ansl + 2]);\n        tree[rt].sum = add(tree[rt].sum, calc2(f[l - ansl + 1], f[l - ansl + 2], r - l + 1));\n        return ;\n    }\n    pushdown(rt, l, r);\n    int mid = l + r >> 1;\n    if (ansl <= mid) update(rt << 1, l, mid, ansl, ansr);\n    if (ansr > mid) update(rt << 1 | 1, mid + 1, r, ansl, ansr);\n    pushup(rt);\n}\ninline int query(int rt, int l, int r, int ansl, int ansr) {//\u7ebf\u6bb5\u6811\u533a\u95f4\u67e5\u8be2\n    int ret = 0;\n    if (ansl <= l && r <= ansr) {\n        ret = tree[rt].sum;\n        return ret;\n    }\n    pushdown(rt, l, r);\n    int mid = l + r >> 1;\n    if (ansl <= mid) ret = add(ret, query(rt << 1, l, mid, ansl, ansr));\n    if (ansr > mid) ret = add(ret, query(rt << 1 | 1, mid + 1, r, ansl, ansr));\n    return ret;\n}\nint main() {\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 1; i <= n; i++) {\n        scanf(\"%d\", &x);\n        a[i] = add(a[i - 1], x);\n    }\n    f[1] = 1; f[2] = 1;\n    for (int i = 3; i <= n + 2; i++)\n        f[i] = add(f[i - 1], f[i - 2]);\n    for (int i = 1; i <= m; i++) {\n        scanf(\"%d%d%d\", &opt, &x, &y);\n        if (opt == 1) update(1, 1, n, x, y); else printf(\"%d\\n\", add(query(1, 1, n, x, y), a[y] - a[x - 1]));\n    }\n    return 0;\n}\n```",
        "postTime": 1564739265,
        "uid": 19729,
        "name": "xiaohuang",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF446C \u3010DZY Loves Fibonacci Numbers\u3011"
    },
    {
        "content": "### \u7b2c\u4e00\u6b65\uff1a\u627e\u9012\u63a8\u5f0f\uff01\r\n\r\n\u53d1\u73b0\u4e00\u5f00\u59cb\u7684 $a_i$ \u662f\u5047\u7684\uff0c\u6700\u540e\u52a0\u4e0a\u524d\u7f00\u548c\u5c31\u884c\u3002\u6211\u4eec\u8bbe\u4e00\u5f00\u59cb\u7684\u6570\u5217 $f_i=0$\uff0c\u5e76\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a\r\n\r\n\u8bbe $f_i=f_{i-1}+f_{i-2}+v_i$\uff0c\u4e00\u5f00\u59cb\u6240\u6709\u7684 $v_i=0$\u3002\u7136\u540e\u6bcf\u4e00\u6b21\u5bf9 $[l,r]$ \u505a\u533a\u95f4 $fib$ \u52a0\u65f6:\r\n\r\n- \u4ee4 $v_l$ \u52a0\u4e0a $1$\uff1b\r\n- \u4ee4 $v_{r+1}$ \u51cf\u53bb $fib_{r-l}+fib_{r-l+1}$\uff1b\r\n- \u4ee4 $v_{r+2}$ \u51cf\u53bb $fib_{r-l+1}$\uff1b\r\n\r\n\u6709\u70b9\u50cf\u5dee\u5206\u7684\u601d\u60f3\u3002\u53ef\u4ee5\u8fd9\u6837\u505a\u7684\u539f\u56e0\u662f\u4e24\u4e2a\u4e0d\u540c\u4f4d\u7f6e\u7684\u6590\u6ce2\u90a3\u5951\u6570\u5217\u76f8\u52a0\u4ecd\u7136\u6ee1\u8db3\u9012\u63a8\u5f0f\u3002\r\n\r\n### \u7b2c\u4e8c\u6b65\uff1a\u6c42\u524d\u7f00\u548c\uff01\r\n\r\n\u73b0\u5728\u9012\u63a8\u7684\u95ee\u9898\u5df2\u7ecf\u89e3\u51b3\u4e86\uff0c\u95ee\u9898\u662f\u6c42\u51fa\u533a\u95f4\u603b\u548c\uff0c\u53ef\u4ee5\u62c6\u6210\u4e24\u4e2a\u524d\u7f00\u76f8\u51cf\u3002\u63a8\u63a8\u67ff\u5b50\uff1a\r\n\r\n$$\\begin{aligned}\r\ns_i&=s_{i-1}+f_i\\\\\r\n&=s_{i-1}+f_{i-1}+f_{i-2}+v_i\\\\\r\n&=s_{i-1}+(s_{i-1}-s_{i-2})+(s_{i-2}-s_{i-3})+v_i\\\\\r\n&=2s_{i-1}-s_{i-3}+v_i\r\n\\end{aligned}$$\r\n\r\n### \u7b2c\u4e09\u6b65\uff1a\u586b\u5199\u77e9\u9635\uff01\r\n\r\n\u770b\u5230\u9012\u63a8\uff0c\u8981\u5feb\u901f\u6c42\u51fa\u67d0\u4e00\u9879\u7684\u503c\uff0c\u81ea\u7136\u53ef\u4ee5\u60f3\u5230\u7528\u77e9\u9635\u4e58\u6cd5\u6765\u641e\u3002\r\n\r\n\u56e0\u4e3a $s_i$ \u548c $s_{i-1},s_{i-3}$ \u6709\u5173\uff0c\u800c\u4e14\u6709\u4e00\u4e2a\u5e38\u6570 $v_i$\uff0c\u6240\u4ee5\u77e9\u9635\u8981\u586b\u56db\u4e2a\u6570\uff1a\r\n\r\n$$\\begin{bmatrix} s_{i-1} & s_{i-2} & s_{i-3} & 1\\end{bmatrix}\r\n\\times\r\n\\begin{bmatrix}\r\n2&1&0&0\\\\\r\n0&0&1&0\\\\\r\n-1&0&0&0\\\\\r\nv_i&0&0&1\r\n\\end{bmatrix}\r\n=\r\n\\begin{bmatrix} s_{i} & s_{i-1} & s_{i-2} & 1\\end{bmatrix}\r\n$$\r\n\r\n\u53ef\u89c1\u521d\u59cb\u77e9\u9635\u662f $\\begin{bmatrix} 0 & 0 & 0 & 1\\end{bmatrix}$\uff0c\u53ea\u8981\u7528\u521d\u59cb\u77e9\u9635\u4e58\u4e0a\u524d $i$ \u4e2a\u8f6c\u79fb\u77e9\u9635\uff0c\u7b2c\u4e00\u884c\u7b2c\u4e00\u4e2a\u6570\u5c31\u662f $s_i$\u3002\r\n\r\n\u56e0\u4e3a\u8981\u652f\u6301\u5355\u70b9\u4fee\u6539\uff0c\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u77e9\u9635\u4e58\u6cd5\u5373\u53ef\u3002\r\n\r\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(64\u00b7(n+m)\\log m)$\u3002\r\n\r\n```cpp\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\nstruct Matrix {\r\n\tint f[4][4];\r\n\tMatrix() {\r\n\t\tmemset(f,0,sizeof(f));\r\n\t}\r\n};\r\nconst int mod=1e9+9;\r\nvoid add(int &a,int b) {\r\n\t(a+=b)>=mod && (a-=mod);\r\n}\r\nMatrix operator *(Matrix a,Matrix b) {\r\n\tMatrix c;\r\n\tfor(int i=0; i<4; i++)\r\n\t\tfor(int k=0; k<4; k++)\r\n\t\t\tif(a.f[i][k])\r\n\t\t\t\tfor(int j=0; j<4; j++)\r\n\t\t\t\t\tadd(c.f[i][j],1ll*a.f[i][k]*b.f[k][j]%mod);\r\n\treturn c;\r\n}\r\nint N,M;\r\nconst int MAXN=3e5+10;\r\nint a[MAXN];\r\nstruct SegmentTree {\r\n\tMatrix c[MAXN<<2];\r\n\tvoid buildTree(int L,int R,int x) {\r\n\t\tif(L==R) {\r\n\t\t\tc[x].f[0][0]=2;\r\n\t\t\tc[x].f[2][0]=-1;\r\n\t\t\tc[x].f[0][1]=1;\r\n\t\t\tc[x].f[1][2]=1;\r\n\t\t\tc[x].f[3][3]=1;\r\n\t\t\treturn ;\r\n\t\t}\r\n\t\tint mid=(L+R)>>1;\r\n\t\tbuildTree(L,mid,x<<1);\r\n\t\tbuildTree(mid+1,R,(x<<1)|1);\r\n\t\tc[x]=c[x<<1]*c[(x<<1)|1]; \r\n\t}\r\n\tvoid update(int L,int R,int x,int pos,int val) {\r\n\t\tif(L==R) {\r\n\t\t\tadd(c[x].f[3][0],val);\r\n\t\t\treturn ;\r\n\t\t}\r\n\t\tint mid=(L+R)>>1;\r\n\t\tif(pos<=mid) update(L,mid,x<<1,pos,val);\r\n\t\telse update(mid+1,R,(x<<1)|1,pos,val);\r\n\t\tc[x]=c[x<<1]*c[(x<<1)|1];\r\n\t}\r\n\tMatrix query(int L,int R,int x,int r) {\r\n\t\tif(R<=r) return c[x];\r\n\t\tint mid=(L+R)>>1;\r\n\t\tif(r<=mid) return query(L,mid,x<<1,r);\r\n\t\telse return c[x<<1]*query(mid+1,R,(x<<1)|1,r);\r\n\t}\r\n} st;\r\nint fib[MAXN]={0,1,1};\r\nint main() {\r\n\tscanf(\"%d%d\",&N,&M);\r\n\tfor(int i=3; i<=N; i++)\r\n\t\t(fib[i]=fib[i-1]+fib[i-2])>=mod && (fib[i]-=mod);\r\n\tfor(int i=1; i<=N; i++) {\r\n\t\tscanf(\"%d\",&a[i]);\r\n\t\t(a[i]+=a[i-1])>=mod && (a[i]-=mod);\r\n\t}\r\n\tst.buildTree(1,N,1);\r\n\tint opt,l,r,Ans;\r\n\tMatrix ori;\r\n\tori.f[0][3]=1;\r\n\tfor(int i=1; i<=M; i++) {\r\n\t\tscanf(\"%d%d%d\",&opt,&l,&r);\r\n\t\tif(opt==1) {\r\n\t\t\tst.update(1,N,1,l,1);\r\n\t\t\tif(r<N) st.update(1,N,1,r+1,(mod-fib[r-l+1]+(r-l>=1 ? mod-fib[r-l] : 0))%mod);\r\n\t\t\tif(r+1<N) st.update(1,N,1,r+2,mod-fib[r-l+1]);\r\n\t\t} else {\r\n\t\t\tAns=(ori*st.query(1,N,1,r)).f[0][0];\r\n\t\t\tif(l>1) {\r\n\t\t\t\tAns-=(ori*st.query(1,N,1,l-1)).f[0][0];\r\n\t\t\t\tif(Ans<0) Ans+=mod;\r\n\t\t\t}\r\n\t\t\tadd(Ans,(a[r]-a[l-1]+mod)%mod);\r\n\t\t\tprintf(\"%d\\n\",Ans);\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n```",
        "postTime": 1632823502,
        "uid": 53118,
        "name": "gzw2005",
        "ccfLevel": 7,
        "title": "CF446C DZY Loves Fibonacci Numbers"
    },
    {
        "content": "CF446C\n\n\u9898\u610f\u7ffb\u8bd1:\n\n\u9898\u9762\u5927\u610f\uff1a\u7ed9\u51fa\u4e00\u4e2a\u6570\u5217\uff0c\u6bcf\u6b21\u53ef\u4ee5\u9009\u53d6\u4e00\u4e2a\u533a\u95f4\uff0c\u6309\u987a\u5e8f\u52a0\u4e0a\u7b2c$i$\u4e2a$Fibonacci Numbers$(\u6590\u6ce2\u90a3\u5951\u6570)\u8fdb\u884c\u66f4\u65b0\uff0c\u4e5f\u53ef\u4ee5\u67e5\u8be2\u67d0\u4e00\u4e2a\u533a\u95f4\u7684\u603b\u548c\u3002\n\n\u8fd9\u9898\u867d\u7136\u662f\u9ed1\u9898\uff0c\u5176\u5b9e\u5e76\u4e0d\u96be\n\n\u6211\u4eec\u53ea\u8981\u601d\u8003\u51e0\u4ef6\u4e8b\uff1a\n\n1.\u7ebf\u6bb5\u6811\u7684\u6807\u8bb0\u4e0b\u4f20\uff08$pushdown$\uff09\u80fd\u4e0d\u80fd\u5728$O(1)$\u5185\u5b8c\u6210\n\n2.\u7ebf\u6bb5\u6811\u66f4\u65b0$sum$\u80fd\u4e0d\u80fd\u5728$O(1)$\u5185\u5b8c\u6210\n\n\u5bf9\u4e8e1\uff0c\u524d\u6587\u63d0\u5230$f[n]=g[n-1]*a+g[n-2]*b$\n\n\u5bf9\u4e8e2\uff0c\u8fd9\u91cc\u518d\u63d0\u4e00\u4e2a\u6027\u8d28\uff1a\n\n\u4ee4$s[i]=\\sum_{i=1}^{n}f[i]$\n\n$s[i]=f[n+2]-f[2]$\n\n\u8fd9\u4e2a\u5b9a\u7406\u7684\u8bc1\u660e\n\n\u8fd8\u662f\u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\u3002\u3002\u3002\n\n\u663e\u7136\u5f53$i=1$\u65f6\uff0c\u539f\u547d\u9898\u6210\u7acb\n\n\u8bbe$i=k$\u65f6\uff0c\u539f\u547d\u9898\u6210\u7acb\u3002\n\n$s[k+1]=s[k]+f[k+1]=f[k+2]-f[2]+f[k+1]=f[k+3]-f[2]$\n\n$\\therefore$ \u539f\u547d\u9898\u6210\u7acb\n\n\u4fbf\u80fd\u5b9e\u73b0\u518d$O(1)$\u5185\u5b8c\u6210\u66f4\u65b0$sum$\u4e86\n\n\u4ee3\u7801\uff1a\n\n```\n#include<bits/stdc++.h>\n\n#define rd(x) x=read()\n#define N 300005\n#define ls rt<<1\n#define rs rt<<1|1\n\nusing namespace std;\n\ntypedef long long ll;\n\nll n,m;\nstruct T{\n\tll f1,f2,v;\n}t[N*20];\nll a[N],f[N],sum[N];\nconst ll mod=1e9+9;\n\ninline ll read()\n{\n    ll f=1,x=0;char s=getchar();\n    while(s<'0'||s>'9'){if(s=='-')f=-1;s=getchar();}\n    while(s>='0'&&s<='9'){x=x*10+s-'0';s=getchar();}\n    return x*f;\n}\n\nvoid init()\n{\n\tf[1]=1,f[2]=1;\n\tfor(ll i=3;i<=n+1;i++)f[i]=(f[i-2]+f[i-1])%mod;\n}//\u9884\u5904\u7406\u6590\u6ce2\u90a3\u5951\n\nvoid pushup(ll rt,ll pos)\n{\n\tt[rt].f1%=mod,t[rt].f2%=mod;\n\tt[rt].v=t[ls].v+t[rs].v+(t[rt].f1*f[pos]+t[rt].f2*f[pos+1]-t[rt].f2),t[rt].v%=mod;\n}//\u66f4\u65b0rt\n\nvoid pushdown(ll rt,ll l,ll r)\n{\n\tif(t[rt].f1==0&&t[rt].f2==0)return ;\n\tll mid=(l+r)>>1;\n\tt[ls].f1+=t[rt].f1,t[rs].f1+=t[rt].f1*f[mid-l]+t[rt].f2*f[mid-l+1];\n\tt[ls].f2+=t[rt].f2,t[rs].f2+=t[rt].f1*f[mid-l+1]+t[rt].f2*f[mid-l+2];\n\tt[rt].f1=t[rt].f2=0;\n\tpushup(ls,mid-l+1),pushup(rs,r-mid); \n} //\u6807\u8bb0\u4e0b\u4f20\n\nvoid update(ll rt,ll l,ll r,ll L,ll R)\n{\n\tif(L<=l&&r<=R)//\u8fb9\u754c\u6761\u4ef6\n\t{\n\t\tt[rt].f1+=f[l-L+1];\n\t\tt[rt].f2+=f[l-L+2];\n\t\tt[rt].f1%=mod,t[rt].f2%=mod;\n\t\tpushup(rt,r-l+1);\n\t\treturn ;\n\t}\n\tpushdown(rt,l,r);\n\tll mid=(l+r)>>1;\n\tif(L<=mid)update(ls,l,mid,L,R);\n\tif(mid<R)update(rs,mid+1,r,L,R);\n\tpushup(rt,r-l+1);\n}//\u533a\u95f4\u52a0\u6590\u6ce2\u90a3\u5951\u6570\u5217\n\nll query(ll rt,ll l,ll r,ll L,ll R)\n{\n\tif(L<=l&&r<=R)return t[rt].v;\n\tpushdown(rt,l,r);\n\tll res=0;\n\tll mid=(l+r)>>1;\n\tif(L<=mid)res+=query(ls,l,mid,L,R);\n\tif(mid<R)res+=query(rs,mid+1,r,L,R);\n\treturn res%mod;\n}//\u67e5\u8be2\u548c\n\nint main()\n{\n\trd(n),rd(m);\n\tinit();\n\tfor(ll i=1;i<=n;i++)rd(a[i]),sum[i]=sum[i-1]+a[i];//\u9884\u5904\u7406\u524d\u7f00\u548c\n\twhile(m--)\n\t{\n\t\tll opt,l,r;\n\t\trd(opt),rd(l),rd(r);\n\t\tif(opt==1)update(1,1,n,l,r);\n\t\telse printf(\"%lld\\n\",(query(1,1,n,l,r)+sum[r]-sum[l-1]+mod)%mod);\n\t}\n\t\n\t\t\n    return 0;\n}\n```",
        "postTime": 1557311498,
        "uid": 53807,
        "name": "Erusel",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF446C \u3010DZY Loves Fibonacci Numbers\u3011"
    },
    {
        "content": "[\u65e5\u5e38\u63a8\u5e7f\u535a\u5ba2](https://endsah.cf)\n\n# $\\text{Description}$\n\n\u7ed9\u5b9a\u6570\u5217 $a_1,a_2,\\cdots,a_n$.\n\n\u9700\u8981\u652f\u6301\u4e24\u79cd\u64cd\u4f5c:\n\n+ `1 l r`: \u5bf9 $l$ \u5230 $r$ \u7684\u6bcf\u4e2a\u6570 $a_i$ \u52a0\u4e0a $Fib_{i - l + 1}$.\n+ `2 l r`: \u8be2\u95ee\u533a\u95f4 $l$ \u5230 $r$ \u7684\u548c.\n\n$Fib$ \u5373\u6590\u6ce2\u90a3\u5951\u6570\u5217,  \u6b64\u5904 $Fib_1 = Fib_2 = 1$.\n\n$n \\le 3 \\ast 10^5$, \u7b54\u6848\u5bf9 $10^9 + 9$ \u53d6\u6a21.\n\n# $\\text{Solution}$\n\n\u5bf9\u4e8e\u8fd9\u79cd\u533a\u95f4\u4fee\u6539\u548c\u533a\u95f4\u6c42\u548c, \u9996\u5148\u60f3\u5230\u7ebf\u6bb5\u6811.\n\n\u4f46\u662f\u8be5\u5982\u4f55\u6253\u6807\u8bb0, \u8fd9\u624d\u662f\u6700\u5173\u952e\u7684\u95ee\u9898.\n\n\u5355\u5355\u662f\u7ef4\u62a4\u533a\u95f4\u548c\u633a\u7b80\u5355\u7684:\n\n\u5bf9\u4e8e\u4e00\u4e2a\u4fee\u6539\u64cd\u4f5c, \u8bb0\u5f55 $Fib$ \u6570\u5217\u7684\u524d\u7f00\u548c, \u6bcf\u6b21\u5bf9\u5e94\u7684\u52a0\u4e0a\u5c31\u53ef\u4ee5\u4e86.\n\n\u5177\u4f53\u6765\u8bf4, \u8bbe\u5f53\u524d\u9700\u8981\u4fee\u6539\u7684\u7ebf\u6bb5\u6811\u8282\u70b9\u5bf9\u5e94\u533a\u95f4\u4e3a $[l, r]$, \u4fee\u6539\u533a\u95f4\u4e3a $[L, R]$ (~~\u663e\u7136~~, $[l, r] \\subseteqq [L, R]$)\n\n\u90a3\u4e48\u5f53\u524d\u533a\u95f4\u5e94\u8be5\u52a0\u4e0a\u7684\u503c\u662f: $sum_{r - L + 1} - sum_{l - L}$\n\n$sum$ \u8868\u793a $Fib$ \u6570\u5217\u7684\u524d\u7f00\u548c.\n\n`Pushdown`\u64cd\u4f5c\u540c\u7406, \u53ea\u4e0d\u8fc7\u662f $L=l, R=r$.\n\n\u4f46\u8fd9\u4e48\u505a\u6709\u4e2a\u95ee\u9898: **\u5982\u4f55\u5feb\u901f\u5408\u5e76\u6807\u8bb0\u5462**?\n\n\u6211\u53ef\u80fd\u662f\u90a3\u4e2a\u5934\u6700\u94c1\u7684\u4eba, \u60f3\u5230\u8fd9\u4e2a\u601d\u8def\u76f4\u63a5\u5f00\u6253, \u76f4\u63a5**\u4e0d\u5408\u5e76\u6807\u8bb0**, \u800c\u662f\u7528\u4e00\u4e2a`std::stack`\u5b58\u653e\u6240\u6709\u6807\u8bb0, `Pushdown`\u518d\u4e00\u4e2a\u4e2a\u4e0b\u653e... \u53ef\u60f3\u800c\u77e5\u8fd9\u6837\u7684\u7a0b\u5e8f\u6548\u7387\u662f\u591a\u4f4e, $5 \\ast 10^4$ \u7684\u6570\u636e\u90fd\u8dd1\u4e86 $\\text{3s}$ ...\n\n\u90a3\u4e48, \u6211\u4eec\u662f\u65f6\u5019\u7a0d\u5fae\u8f6c\u53d8\u4e00\u4e0b\u6807\u8bb0\u7684\u7ef4\u62a4\u601d\u8def\u4e86.\n\n\u5728\u6b64\u4e4b\u524d, \u4f60\u9700\u8981\u5148\u4e86\u89e3[**\u5e7f\u4e49\u6590\u6ce2\u90a3\u5951\u6570\u5217**](https://baike.baidu.com/item/%E5%B9%BF%E4%B9%89Fibonacci%E6%95%B0%E5%88%97).\n\n\u901a\u4fd7\u7684\u6765\u8bb2, \u5c31\u662f\u628a $Fib$ \u6570\u5217\u7684\u7b2c\u4e00\u9879\u548c\u7b2c\u4e8c\u9879\u53d8\u4e3a $a$ \u548c $b$, \u800c\u4e0d\u518d\u662f\u56fa\u5b9a\u7684 $1,1$.\n\n\u5b83\u6709\u4e00\u4e9b\u975e\u5e38\u4f18\u7f8e\u7684\u6027\u8d28:\n\n$$\\sum_{i = 1}^nS_i=S_{n+2}-S_2$$\n$$S_i=bFib_{i - 1}+aFib_{i - 2}$$\n\n$S$ \u5373\u4e3a\u5e7f\u4e49 $Fib$ \u6570\u5217, $S_1 = a, S_2 = b$.\n\n~~\u8bc1\u660e? \u81ea\u5df1\u60f3\u53bb~~\n\n\u4e8e\u662f\u8003\u8651\u8bb0\u5f55\u5e7f\u4e49 $Fib$ \u6570\u5217\u7684\u524d\u4e24\u9879\u4f5c\u4e3a\u61d2\u6807\u8bb0.\n\n\u4e3a\u4ec0\u4e48? \u56e0\u4e3a\u8fd9\u6837\u5c31\u53ef\u4ee5**\u5feb\u901f\u5408\u5e76**\u4e86!\n\n> **\u8981\u5408\u5e76(\u5bf9\u5e94\u6570\u5404\u81ea\u76f8\u52a0)\u4e24\u4e2a\u5e7f\u4e49 $Fib$ \u6570\u5217, \u53ea\u9700\u8981\u5c06 $a$ \u548c $b$ \u5404\u81ea\u76f8\u52a0\u5373\u53ef.**\n\n\u4e0a\u9762\u8fd9\u53e5\u8bdd\u8bf7\u7740\u91cd\u6ce8\u610f!  ~~\u8bc1\u660e\u662f\u4e0d\u5b58\u5728\u7684~~\n\n\u56e0\u4e3a\u5b83\u7684\u8fd9\u4e9b\u6027\u8d28, \u90a3\u4e48\u5408\u5e76\u6807\u8bb0, \u5feb\u901f\u6c42\u548c\u7b49\u7b49\u4e00\u7cfb\u5217\u95ee\u9898, \u6211\u4eec\u5df2\u7ecf\u5168\u90e8\u89e3\u51b3\u4e86.\n\n\u63a5\u4e0b\u6765, \u5c31\u662f\u6076\u5fc3\u7684\u5404\u7c7b\u7ec6\u8282\u64cd\u4f5c\u4e86- -\n\n\u8be6\u89c1[\u4ee3\u7801](https://www.luogu.org/paste/4kxm4tgf).\n\n\u91cd\u70b9\u770b\u51e0\u4e2a\u51fd\u6570: `Add`, `Pushdown`, `Change\u4e2dreturn\u90e8\u5206`.\n\n# $\\text{Thank you for your consideration!}$",
        "postTime": 1548339458,
        "uid": 91252,
        "name": "EndSaH",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF446C \u3010DZY Loves Fibonacci Numbers\u3011"
    },
    {
        "content": "\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u2014\u2014> [$blogs$](https://violetnymph.blog.luogu.org/solution-cf446c)\n\n\u8fd9\u9898\u4e00\u5f00\u59cb\u6709\u6ca1\u6709\u4eba\u60f3\u7528\u77e9\u4e58\uff1f\u6211\u4e00\u5f00\u59cb\u662f\u60f3\u8fd9\u4e48\u5199\u7684\u4f46\u8bf4\u5230\u5e95\u5b83\u53ea\u80fd\u4f18\u5316\u66b4\u529b\uff0c\u7136\u800c\u8003\u573a\u4e0a\u6211\u5c45\u7136\u5199\u9505\u4e86\u3002\u3002\u3002\n## **\u6b63\u89e3\uff1a\u7ebf\u6bb5\u6811+\u666e\u901a\u7684\u6590\u6ce2\u90a3\u5951\u6570\u5217**\n\u6211\u4eec\u90fd\u77e5\u9053$f[i] = f[i-1]+f[i-2]$\uff0c\u7ecf\u5178\u7684\u6590\u6ce2\u90a3\u5951\u4e2d\u662f\u4ee51\uff0c 1\u4e3a\u7b2c\u4e00\u548c\u7b2c\u4e8c\u9879\u73b0\u5728\u628a\u5b83\u63a8\u5e7f\n\n\u4e8e\u662f\u6709\u4e86\u5e7f\u4e49\u7684\u6590\u6ce2\u90a3\u5951\uff1a$F[i]=F[i-1]+F[i-2]$\uff0c\u5176\u9996\u9879\u548c\u6b21\u9879\u4e3a$a,b$\uff0c\u6b63\u786e\u6027\u662f\u663e\u7136\u7684\n\n\u90a3\u5c31\u76f8\u5f53\u4e8e$F[i]=a*f[i-2]+b*f[i-1]$\n\n\u518d\u6709\u4e00\u4e2a\u7ed3\u8bba\uff1a$\\sum_{i=1}^nF_i=F_{n+2}-F_2$\n\n\u90a3\u6211\u4eec\u53ef\u4ee5\u62ff\u7740\u4e2a\u641e\u70b9\u4e8b\u60c5\uff0c\u9884\u5904\u7406\u51fa\u4e00\u4e2a\u524d\u7f00\u548c\uff0c\u8bb0\u4e3a$S[i]$,\u90a3\u4e48\u6709\uff1a\n\n$S_n=S_{n-1}+F_{n}=F_{n+1}-F_2+F_n=F_{n+2}-F_2$,\u4e5f\u5c31\u662f\n\n$S_n=a*F_n+b*F_{n+1}-b$\n\n\u90a3\u6211\u4eec\u5c31\u80fd\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u8fd9\u4e2a\u4e1c\u897f\u4e86\uff01\u7ed3\u5408\u4e0a\u8ff0\uff0c\u53ea\u8981\u7ef4\u62a4$a,b$\u5c31\u597d\u4e86\n\n\u533a\u95f4\u4fee\u6539\u548c\u533a\u95f4\u67e5\u8be2\u5927\u5bb6\u80af\u5b9a\u90fd\u4f1a\u5199\uff0c\u5982\u4f55\u4e0b\u7a7f\u6807\u8bb0\uff1f\u8fd9\u662f\u7ebf\u6bb5\u6811\u7684\u6838\u5fc3\u90e8\u5206\uff0c\u5982\u679c\u662f\u5de6\u533a\u95f4\uff0c\u5176$a,b$\u4e0e\u5927\u533a\u95f4\u7684\u76f8\u540c\uff0c\u76f4\u63a5\u4e22\u4e0b\u53bb\n\n\u800c\u53f3\u533a\u95f4\u4e0d\u80fd\u76f4\u63a5\u4e22\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u6027\u8d28\u628a\u5b83\u7b97\u51fa\u6765\uff0c\u8fd9\u6837\u5c31\u641e\u5b9a\u4e86\uff0c\u81f3\u4e8e\u600e\u4e48\u7b97\uff0c\u7ed9\u51fa\u4ee3\u7801\u770b\u5427\uff0c\u61d2\u5f97\u8bf4\u4e86\n```cpp\ninline void pushdown(int k) {\n\t//tag\u5c31\u662f\u5de6\u8fb9\u7684\u9996\u9879\uff0clay\u662f\u6b21\u9879\uff0ca\uff0cb\u5c31\u662f\u53f3\u533a\u95f4\u7684\u4e24\u4e2a\u7aef\u70b9\n\tLL a = (T[k].tag * f[T[ls].len - 1] % p + T[k].lay * f[T[ls].len] % p) % p;\n\tLL b = (T[k].tag * f[T[ls].len] % p + T[k].lay * f[T[ls].len + 1] % p) % p;\n\tadd(ls, T[k].tag, T[k].lay);\n\tadd(rs, a, b);\n\tT[k].tag = T[k].lay = 0;\n}\n```\n\u8fd9\u662f$add$\n```cpp\ninline void add(int k, LL a, LL b) {\n\tT[k].tag = (T[k].tag + a) % p;\n\tT[k].lay = (T[k].lay + b) % p;\n    //\u6b63\u5982\u4e0a\u8ff0\u516c\u5f0f\u6240\u8bf4\n\tT[k].sum = (T[k].sum + a * f[Len] % p + b * f[Len + 1] % p - b) % p;\n}\n```\n\u7136\u540e\u732e\u4e0a\u5b8c\u6574\u7684\u4ee3\u7801\n\n## code\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#define ls (k << 1)\n#define rs (k << 1 | 1)\n#define L (T[k].l)\n#define R (T[k].r)\n#define Len (T[k].len)\n\nusing namespace std;\ntypedef long long LL;\nconst int p = 1e9+9;\nconst int N = 3e5+5;\nint n, m;\nstruct Tree {\n\tLL sum, lay, tag;\n\tint l, r, len;\n}T[N<<2];\nLL f[N], a[N];\n\ninline void update(int k) {\tT[k].sum = (T[ls].sum + T[rs].sum) % p; }\n\ninline void add(int k, LL a, LL b) {\n\tT[k].tag = (T[k].tag + a) % p;\n\tT[k].lay = (T[k].lay + b) % p;\n\tT[k].sum = (T[k].sum + a * f[Len] % p + b * f[Len + 1] % p - b) % p;\n}\n\ninline void pushdown(int k) {\n\tLL a = (T[k].tag * f[T[ls].len - 1] % p + T[k].lay * f[T[ls].len] % p) % p;\n\tLL b = (T[k].tag * f[T[ls].len] % p + T[k].lay * f[T[ls].len + 1] % p) % p;\n\tadd(ls, T[k].tag, T[k].lay);\n\tadd(rs, a, b);\n\tT[k].tag = T[k].lay = 0;\n}\n\nvoid build(int k, int l, int r) {\n\tT[k].l = l, T[k].r = r, T[k].len = r - l + 1;\n\tif(l == r) { T[k].sum = a[l] % p; return; }\n\tint mid = (l + r) >> 1;\n\tbuild(ls, l, mid), build(rs, mid + 1, r);\n\tupdate(k);\n}\n\nvoid Change(int k, int l, int r) {\n\tif(L >= l && R <= r) {\n\t\tadd(k, f[L - l + 1], f[L - l + 2]);\n\t\treturn;\n\t}\n\tif(T[k].tag) pushdown(k);\n\tint mid = (L + R) >> 1;\n\tif(l <= mid) Change(ls, l, r);\n\tif(r > mid) Change(rs, l, r);\n\tupdate(k);\n}\n\nLL query(int k ,int l, int r) {\n\tif(L >= l && R <= r) return T[k].sum;\n\tif(T[k].tag) pushdown(k);\n\tint mid = (L + R) >> 1;\n\tLL res = 0;\n\tif(l <= mid) res = (res + query(ls, l, r) % p) % p;\n\tif(r > mid) res = (res + query(rs, l, r) % p) % p;\n\treturn res;\n}\n\ninline void init() {\n\tf[1] = f[2] = 1;\n\tfor(int i = 3;i < N;++ i)\n\t\tf[i] = (f[i - 1] + f[i - 2]) % p;\n}\n\nint main() {\n\t// freopen(\"d.in\", \"r\", stdin);\n\t// freopen(\"d.out\", \"w\", stdout);\n\tinit();\n\tscanf(\"%d%d\", &n, &m);\n\tfor(int i = 1;i <= n;++ i) scanf(\"%lld\", &a[i]);\n\tbuild(1, 1, n);\n\tfor(int i = 1, op, l, r, x;i <= m;++ i) {\n\t\tscanf(\"%d%d%d\", &op, &l, &r);\n\t\tif(op == 2) printf(\"%lld\\n\", (query(1, l, r) + p) % p);\n\t\tif(op == 1) Change(1, l, r); \n\t}\n\tfclose(stdin);\n\tfclose(stdout);\n\treturn 0;\n}\n```",
        "postTime": 1571369724,
        "uid": 160654,
        "name": "\u707c\u773c\u7684\u590f\u5a1c",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF446C \u3010DZY Loves Fibonacci Numbers\u3011"
    },
    {
        "content": "\n## \u9898\u89e3\uff1a\n\n[\u535a\u5ba2\u98df\u7528\u53e3\u5473\u66f4\u4f73](https://www.cnblogs.com/fusiwei/p/11799491.html)\n\n~~2019.11.5\u6a21\u62df\u8d5bT3 40\u5206\u573a~~\n\n$O(n^2)$\u7684\u505a\u6cd5\u80fd\u6c3410\u5206\uff0c\u666e\u901a\u7ebf\u6bb5\u6811\u6beb\u65e0\u4f18\u5316\u80fd\u8dd130\u5206\u3002\u611f\u8c22\u51fa\u9898\u4eba@littleseven\n\n\u4e00\u770b\u662f\u9ed1\u9898\u987f\u65f6\u6beb\u65e0\u601d\u8def\u3002\u56e0\u4e3a\u8fd9\u9053\u9898\u6d89\u53ca\u5230\u7684\u77e5\u8bc6\u70b9\uff1a**\u7ebf\u6bb5\u6811+$Fibonacci$\u6570\u5217**\u662f\u8054\u8d5b\u8303\u56f4\u5185\uff0c\u6240\u4ee5\u5b83\u5c31\u8fd9\u6837\u88ab\u6536\u8fdb\u4e86\u8054\u8d5b\u6a21\u62df\u8d5b\u4e2d\u3002\n\n\u4ecb\u7ecd\u4e00\u4e0b\u6b63\u89e3\uff1a\n\n\u9996\u5148\u6211\u4eec\u80fd\u60f3\u5230\uff0c\u533a\u95f4\u4fee\u6539\u533a\u95f4\u67e5\u8be2\u4e00\u5b9a\u9700\u8981\u7ebf\u6bb5\u6811\u3002\u800c\u4e14\u8fd9\u9053\u9898\u96be\u4f4f\u6211\u4eec\u7684\u70b9\u5c31\u662f\u5982\u4f55\u7ef4\u62a4\u4fee\u6539\u64cd\u4f5c\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u4f55\u8fdb\u884c\u4e0b\u4f20\u6807\u8bb0\u3002\n\n\u4f46\u662f\u6211\u4eec\u7a0d\u5fae\u52a8\u52a8\u8111\u80fd\u53d1\u73b0\u8fd9\u4e2a\u6027\u8d28\uff1a\uff08\u6211\u5728\u8003\u573a\u4e0a\u4e5f\u63a8\u51fa\u6765\u4e86\uff09\n\n\u5bf9\u4e8e\u4e00\u4e2a\u8981\u4fee\u6539\u7684\u533a\u95f4$[l,r]$\u4e2d\u7684\u7b2c$x$\u9879\uff0c\u5b83\u9700\u8981\u52a0\u4e0a\u8fd9\u4e00\u9879\uff1a$fib_{x-l+1}$\u3002$fib$\u8868\u793a\u6590\u6ce2\u90a3\u5951\u6570\u5217\u3002\n\n\u800c\u6590\u6ce2\u90a3\u5951\u6570\u5217\u6709\u8fd9\u6837\u7684\u6027\u8d28\uff1a\uff08\u5f88\u91cd\u8981\uff0c\u867d\u7136\u849f\u84bb\u4e5f\u662f\u505a\u4e86\u8fd9\u9053\u9898\u624d\u77e5\u9053\uff09\n$$\nfib[n+m]=fib[n+1]fib[m]+fib[n]fib[m-1]\n$$\n\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u4e2a\u4f4d\u7f6e$x$\uff0c\u8bbe$n=-l,m=x+1$\uff0c\u5b83\u52a0\u4e0a\u4e86\uff1a\n$$\nfib[x-l+1]=fib[1-l]fib[x+1]+fib[x]fib[-l]\n$$\n\u90a3\u4e48\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u4e0a\u7684\u8282\u70b9\uff0c\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u4e24\u4e2a\u6807\u8bb0\uff1a$add1[i],add2[i]$\uff0c\u5206\u522b\u7edf\u8ba1\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4\u4e3a$[l,r]$\u7684\u8282\u70b9\uff0c$add1(fib_{l+1}+fib_{l+2}+\\cdots+fib_{r+1})$\uff0c$add2(fib_{l}+fib_{l+1}+\\cdots+fib_{r})$\u3002\n\n\u4fee\u6539\u7684\u65f6\u5019\uff0c\u7ed9$add1$\u52a0\u4e0a$fib_{-l+1}$\uff0c\u7ed9$add2$\u52a0\u4e0a$fib_{-l}$\uff0c\u7136\u540e\u8fdb\u884c\u7ebf\u6bb5\u6811\u7684\u6b63\u5e38$pushdown$\u64cd\u4f5c\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#define lson pos<<1\n#define rson pos<<1|1\nusing namespace std;\nconst int maxn=3*1e5+10;\nconst int mod=1e9+9;\nchar *p1,*p2,buf[100000];\n#define nc() (p1==p2&&(p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++)\nint read()\n{\n    int x=0,f=1;\n    char ch=nc();\n    while(ch<48){if(ch=='-')f=-1;ch=nc();}\n    while(ch>47)    x=(((x<<2)+x)<<1)+ch-48,ch=nc();\n    return x*f;\n}\nint n,m;\nint a[maxn],sum[maxn],fib[maxn],ffib[maxn];\nint tree[maxn<<2],add1[maxn<<2],add2[maxn<<2];\nvoid fibonacci()\n{\n    fib[1]=fib[2]=sum[1]=ffib[1]=1;\n    sum[2]=2;\n    ffib[2]=mod-1;\n    for(int i=3;i<=n+1;i++)\n    {\n        fib[i]=(fib[i-1]+fib[i-2])%mod;\n        sum[i]=(sum[i-1]+fib[i])%mod;\n        ffib[i]=(i&1)?fib[i]:mod-fib[i];\n    }\n}\nvoid build(int pos,int l,int r)\n{\n    int mid=(l+r)>>1;\n    if(l==r)\n    {\n        tree[pos]=a[l]%mod;\n        return;\n    }\n    build(lson,l,mid);\n    build(rson,mid+1,r);\n    tree[pos]=(tree[lson]+tree[rson])%mod;\n}\nvoid mark(int pos,int l,int r,int a1,int a2)\n{\n    add1[pos]=(add1[pos]+a1)%mod;\n    add2[pos]=(add2[pos]+a2)%mod;\n    tree[pos]=(tree[pos]+1ll*(sum[r+1]-sum[l]+mod)%mod*a1%mod)%mod;\n    tree[pos]=(tree[pos]+1ll*(sum[r]-sum[l-1]+mod)%mod*a2%mod)%mod;\n}\nvoid pushdown(int pos,int l,int r)\n{\n    int mid=(l+r)>>1;\n    mark(lson,l,mid,add1[pos],add2[pos]);\n    mark(rson,mid+1,r,add1[pos],add2[pos]);\n    add1[pos]=add2[pos]=0;\n}\nvoid update(int pos,int l,int r,int x,int y,int a1,int a2)\n{\n    int mid=(l+r)>>1;\n    if(x<=l && r<=y)\n    {\n        mark(pos,l,r,a1,a2);\n        return;\n    }\n    pushdown(pos,l,r);\n    if(x<=mid)\n        update(lson,l,mid,x,y,a1,a2);\n    if(y>mid)\n        update(rson,mid+1,r,x,y,a1,a2);\n    tree[pos]=(tree[lson]+tree[rson])%mod;\n}\nint query(int pos,int l,int r,int x,int y)\n{\n    int ret=0;\n    int mid=(l+r)>>1;\n    if(x<=l && r<=y)\n        return tree[pos]%mod;\n    pushdown(pos,l,r);\n    if(x<=mid)\n        ret=(ret+query(lson,l,mid,x,y))%mod;\n    if(y>mid)\n        ret=(ret+query(rson,mid+1,r,x,y))%mod;\n    return ret%mod;\n}\nint main()\n{\n    n=read();m=read();\n    for(int i=1;i<=n;i++)\n        a[i]=read();\n    fibonacci();\n    build(1,1,n);\n    for(int i=1;i<=m;i++)\n    {\n        int opt,l,r;\n        opt=read();l=read();r=read();\n        if(opt==1)\n            update(1,1,n,l,r,ffib[l-1],ffib[l]);\n        else\n            printf(\"%d\\n\",query(1,1,n,l,r));\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1572943454,
        "uid": 175131,
        "name": "\u5085\u601d\u7ef4666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF446C \u3010DZY Loves Fibonacci Numbers\u3011"
    }
]