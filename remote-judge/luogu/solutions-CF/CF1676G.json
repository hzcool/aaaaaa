[
    {
        "content": "\u6765\u6c34\u4e00\u7bc7 div4 \u7684\u9898\u89e3\uff0c\u8fd9\u662f\u6211\u4eba\u751f\u7b2c\u4e00\u6b21AK\u7684CF\u6bd4\u8d5b\uff08\u867d\u7136\u7528\u4e861h+\uff09\n## \u4e00\u3001\u9898\u610f\n\u7ed9\u4f60\u4e00\u68f5\u6839\u8282\u70b9\u4e3a 1 \u7684\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u989c\u8272\u90fd\u662f\u9ed1\u6216\u767d\uff08\u6709\u70b9\u50cf\u7ea2\u9ed1\u6811\uff1f\uff09\u3002\u79f0\u4e00\u68f5\u6811\u662f **\u5e73\u8861\u7684** \u4e3a\u8fd9\u68f5\u6811\u91cc\u9ed1\u8272\u8282\u70b9\u7684\u4e2a\u6570\u548c\u767d\u8272\u8282\u70b9\u7684\u4e2a\u6570\u76f8\u540c\u3002\u95ee\u4f60\u5728\u8fd9\u68f5\u6811\u91cc\uff0c\u6709\u591a\u5c11\u5b50\u6811\u662f **\u5e73\u8861\u7684**\uff1f\n## \u4e8c\u3001\u601d\u8def\n\u6211\u4eec\u53ea\u8981\u4ece\u6839\u5f00\u59cb\u5f80\u4e0b\u904d\u5386\u6bcf\u4e2a\u5b69\u5b50\uff0c\u5728\u56de\u6eaf\u7684\u65f6\u5019\u8ba1\u7b97\u662f\u5426\u5e73\u8861\u5373\u53ef\u3002\n\n\u600e\u4e48\u8ba1\u7b97\u5462\uff1f\u6211\u4eec\u8ba9\u9ed1\u8272\u7684\u8282\u70b9\u53ef\u4ee5\u5f97\u5230\u7684\u5206\u6570\u4e3a 1\uff0c\u767d\u8272\u7684\u8282\u70b9\u4e3a -1\uff0c\u5c31\u5728\u5f80\u4e0b\u904d\u5386\u7684\u65f6\u5019\u628a\u6bcf\u4e00\u4e2a\u5b69\u5b50\u8282\u70b9\u7684\u5206\u6570\u52a0\u8d77\u6765\uff0c\u518d\u52a0\u4e0a\u81ea\u5df1\u7684\u5206\u6570\u3002\u5982\u679c\u5f97\u5230\u7684\u603b\u5206\u6570\u6070\u597d\u4e3a 0\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u52a0\u4e00\u3002\n## \u4e09\u3001\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nvector<int> v[4005];//\u5b58\u56fe\nint color[4005];//\u8bb0\u5f55\u6bcf\u4e2a\u8282\u70b9\u7684\u5206\u6570\nint ans;//\u7b54\u6848\nint co(int rt){//\u904d\u5386\n\tint sum=color[rt];//\u63d0\u524d\u8bbe\u4e3a\u81ea\u5df1\u7684\u5206\u6570\n\tfor(int i=0;i<v[rt].size();i++) sum+=co(v[rt][i]);//\u4f9d\u6b21\u52a0\u4e0a\u5b69\u5b50\u7684\u5206\u6570\n\tif(sum==0) ans++;//\u53c8\u4e00\u4e2a\n\treturn sum;\n}\nint main(){\n\tint t,n,fa;char c;\n\tcin>>t;\n\twhile(t--){\n\t\tcin>>n;\n\t\tfor(int i=1;i<=n;i++) v[i].clear();//\u8bb0\u5f97\u6e05\u7a7a\u6570\u7ec4\n\t\tans=0;\n\t\tfor(int i=2;i<=n;i++){\n\t\t\tcin>>fa;//\u8f93\u5165\u6bcf\u4e2a\u8282\u70b9\u7684\u7236\u4eb2\n\t\t\tv[fa].push_back(i);//\u4e0d\u8981\u5efa\u53cc\u5411\u8fb9\uff0c\u6ca1\u7528\n\t\t}\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tcin>>c;\n\t\t\tif(c=='W') color[i]=-1;//\u767d\u8272\n\t\t\telse color[i]=1;//\u9ed1\u8272\n\t\t}\n\t\tco(1);//\u6839\u8282\u70b9\u662f1\n\t\tcout<<ans<<endl;//\u8f93\u51fa\n\t}\n\treturn 0;\n}\n```\n[AC\u8bb0\u5f55](https://www.luogu.com.cn/record/75829721)",
        "postTime": 1652611214,
        "uid": 320423,
        "name": "CaCa_Condy",
        "ccfLevel": 7,
        "title": "CF1676G White-Black Balanced Subtrees \u9898\u89e3"
    },
    {
        "content": "\u6bd4\u8f83\u7b80\u5355\u7684\u4e00\u9053\u9898\u3002\n\n# \u9898\u76ee\u5206\u6790\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\uff0c\u4e00\u904d $\\rm dfs$ \u7edf\u8ba1\u51fa\u6bcf\u4e2a\u70b9\u7684\u5b50\u6811\u5185\u9ed1\u70b9\u548c\u767d\u70b9\u7684\u6570\u91cf\u3002\u6700\u540e\u626b\u63cf $i(1\\le i\\le n)$\uff0c\u770b\u4ee5 $i$ \u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u4e2d\u7684\u9ed1\u70b9\u4e2a\u6570\u662f\u5426\u4e0e\u767d\u70b9\u4e2a\u6570\u76f8\u7b49\uff0c\u82e5\u76f8\u7b49\u8ba1\u6570\u5668\u5219 $+1$\u3002\n\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u7b54\u6848\u5c31\u662f $\\sum\\limits_{i=1}^n[\\operatorname{white-cnt}(i)=\\operatorname{black-cnt}(i)]$\u3002\n\n# \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef pair<int,int> PII;\n\nconst int N = 4005;\nstruct Graph {\n    int v,nxt;\n} gra[N << 1];\nint head[N];\nPII col[N];\nchar s[N];\nint T,n,idx;\ninline void add(int u,int v) {\n    gra[++ idx] = (Graph){v,head[u]},head[u] = idx;\n}\ninline void init() {\n    memset(head,0,sizeof head),memset(col,0,sizeof col);\n    idx = 0;\n}\ninline void dfs(int now,int fath) {\n    if (s[now] == 'B') col[now].first = 1;\n    else col[now].second = 1;\n    for (register int i = head[now];i;i = gra[i].nxt) {\n        int v = gra[i].v;\n        if (v != fath) {\n            dfs(v,now);\n            col[now].first += col[v].first,col[now].second += col[v].second;\n        }\n    }\n}\ninline void solve() {\n    scanf(\"%d\",&n);\n    for (register int i = 2;i <= n; ++ i) {\n        int x;\n        scanf(\"%d\",&x);\n        add(i,x),add(x,i);\n    }\n    scanf(\"%s\",s + 1);\n    dfs(1,0);\n    int ans = 0;\n    for (register int i = 1;i <= n; ++ i) {\n//        cout << \"vertex: \" << i << \",black: \" << col[i].first << \",white: \" << col[i].second << \"\\n\";\n        if (col[i].first == col[i].second) {\n            ans ++;\n        }\n    }\n    printf(\"%d\\n\",ans);\n}\nint main(void) {\n    cin >> T;\n    while (T --) {\n        init();\n        solve();\n    }\n\n    return 0;\n}\n```",
        "postTime": 1652499555,
        "uid": 430409,
        "name": "Coros_Trusds",
        "ccfLevel": 6,
        "title": "CF1676G White-Black Balanced Subtrees"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://codeforces.com/contest/1676/problem/G)\n# \u9898\u76ee\u5927\u610f\n\u7ed9\u51fa\u4e00\u9897\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u6709\u4e24\u79cd\u989c\u8272\uff0c\u6c42\u5728\u6240\u6709\u8282\u70b9\u91cc\uff0c\u5305\u62ec\u5b83\u81ea\u5df1\u7684\u5b50\u6811\u4e2d\u9ed1\u8272\u548c\u767d\u8272\u6570\u91cf\u76f8\u7b49\u7684\u8282\u70b9\u4e2a\u6570\u3002\n\n# \u601d\u8def\n\u6a21\u677f\u6811\u5f62dp\uff0c\u6bcf\u4e2a\u8282\u70b9\u5b58\u5b50\u6811\u4e2d\u9ed1\u8272\u7684\u6570\u91cf\u548c\u767d\u8272\u7684\u6570\u91cf\u3002\u76f4\u63a5 dfs \u904d\u5386\u6240\u6709\u8282\u70b9\uff0c\u5904\u7406\u6bcf\u4e2a\u8282\u70b9\u5b50\u6811\u4e2d\u9ed1\u8272\u8282\u70b9\u548c\u767d\u8272\u8282\u70b9\u6570\u91cf\u52a0\u5728\u81ea\u5df1\u7684\u8eab\u4e0a\uff0c\u6700\u540e\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u6ee1\u8db3\u6027\u8d28\uff0c\u628a\u53ef\u4ee5\u7684\u4e2a\u6570\u5373\u53ef\u3002\n\n\u5177\u4f53\u7684\uff1a\n\n$dp_{u,b}=\\sum dp_{v,b}+s$\uff0c\u5728 $v\\in u$ \u7684\u60c5\u51b5\u4e0b\uff0c\u5176\u4e2d $s$ \u662f\u8fd9\u4e2a\u8282\u70b9\u662f\u5426\u4e3a\u9ed1\u8272\n\n$dp_{u,w}=\\sum dp_{v,w}+s$\uff0c\u5728 $v\\in u$ \u7684\u60c5\u51b5\u4e0b\uff0c\u5176\u4e2d $s$ \u662f\u8fd9\u4e2a\u8282\u70b9\u662f\u5426\u4e3a\u9ed1\u8272\n\n\u6700\u540e\u5224\u65ad $dp_{u,w}$ \u662f\u5426\u7b49\u4e8e $dp_{u,b}$ \u5c31\u53ef\u4ee5\u4e86\n# \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node\n{\n\tint b,w;\n} k[4010];\nint n,x;\nvector<int> g[4010];\nchar s[200010];\nvoid dfs(int u,int fa)\n{\n\tfor(int i=0;i<g[u].size();i++)\n\t{\n\t\tint to=g[u][i];\n\t\tif(to==fa) continue;\n\t\tdfs(to,u);\n\t\tk[u].b+=k[to].b,k[u].w+=k[to].w;\n\t}//\u677f\u5b50\u6811\u5f62dp\uff0c\u904d\u5386\u6bcf\u4e2a\u8282\u70b9\n}\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tcin>>n;\n\t\tfor(int i=1;i<=n;i++) k[i].b=k[i].w=0;\n\t\tfor(int i=1;i<=n;i++) g[i].clear();\n\t\tfor(int i=1;i<n;i++)\n\t\t{\n\t\t\n\t\t\tscanf(\"%d\",&x);\n\t\t\tg[x].push_back(i+1);//\u5efa\u8fb9\n\t\t}\n\t\tscanf(\"%s\",s+1);\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(s[i]=='B') k[i].b=1;\n\t\t\telse k[i].w=1;\n\t\t}//\u521d\u59cb\u5316\n\t\tdfs(1,1);\n\t\tint ans=0;\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(k[i].b==k[i].w) \n\t\t\t{\n\t\t\t\tans++;\n\t\t\t}\n\t\t}//\u5224\u65ad\u52a0\u548c\n\t\tprintf(\"%d\\n\",ans);\n\t}\n}\n```\n",
        "postTime": 1652436888,
        "uid": 481851,
        "name": "Withers",
        "ccfLevel": 5,
        "title": "CF1676G\u9898\u89e3"
    },
    {
        "content": "# \u9898\u610f\n\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u70b9\u6709\u9ed1\u767d\u4e4b\u5206\u3002\n\n\u95ee\u8fd9\u68f5\u6811\u6709\u591a\u5c11\u4e2a\u9ed1\u767d\u7ed3\u70b9\u6570\u91cf\u76f8\u540c\u7684\u5b50\u6811\u3002\n# \u601d\u8def\n\u4ee4\u4ee5 $x$ \u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u9ed1\u767d\u7ed3\u70b9\u7684\u4e2a\u6570\u5206\u522b\u4e3a $s[x][0/1]$\u3002\n\n\u5219 $s[x][0]=\\sum s[v][0]+(x\\ \\text{is black})$\uff0c$s[x][1]=\\sum s[v][1]+(x\\ \\text{is white})$\uff08$v$ \u662f $x$ \u7684\u5b50\u7ed3\u70b9\uff09\u3002\n\n\u5982\u679c $s[x][0] = s[x][1]$\uff0c\u90a3\u4e48\u4ee5 $x$ \u4e3a\u6839\u7684\u5b50\u6811\u662f\u5e73\u8861\u7684\u3002\n# \u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <cstring>\nstruct E{int v, t;}e[4050];int T, n, q, c, h[4050], s[4050][2];\nvoid add(int u, int v) {e[++c] = {v, h[u]};h[u] = c;}\nint g() {char c = getchar();while(c != 'W' && c != 'B') c = getchar();return c == 'W';}\nvoid dfs(int x)\n{\n    for(int i = h[x], v;i;i = e[i].t)\n        v = e[i].v, dfs(v), s[x][0] += s[v][0], s[x][1] += s[v][1];\n    if(s[x][0] == s[x][1]) ++q;\n}\nint main()\n{\n    scanf(\"%d\", &T);\n    while(T--)\n    {\n        scanf(\"%d\", &n);c = q = 0;memset(e, 0, sizeof e);\n        for(int i = 1;i <= n;++i) h[i] = s[i][0] = s[i][1] = 0;\n        for(int i = 2, t;i <= n;++i) scanf(\"%d\", &t), add(t, i);\n        for(int i = 1;i <= n;++i) s[i][g()] = 1;\n        dfs(1);printf(\"%d\\n\", q);\n    }\n    return 0;\n}\n```\n",
        "postTime": 1652254203,
        "uid": 388651,
        "name": "5k_sync_closer",
        "ccfLevel": 7,
        "title": "CF1676G White-Black Balanced Subtrees \u9898\u89e3"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\u6bcf\u4e2a\u8282\u70b9\u5747\u4e3a\u767d\u8272\u548c\u9ed1\u8272\u4e2d\u7684\u4e00\u79cd\uff0c\u6c42\u5b50\u6811\uff08\u5305\u542b\u81ea\u5df1\uff09\u4e2d\u9ed1\u8272\u548c\u767d\u8272\u6570\u91cf\u76f8\u540c\u7684\u8282\u70b9\u6570\u3002\n### \u89e3\u9898\u601d\u8def\n\u5efa\u7acb\u4e00\u4e2a $col$ \u6570\u7ec4\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u8282\u70b9\u7684\u989c\u8272 ( \u5c06\u9ed1\u8272\u8d4b\u4e3a $-1$\uff0c\u767d\u8272\u4e3a $1$ )\n\n\u7136\u540e\u4ece\u6839\u8282\u70b9\u5f00\u59cb $dfs$ \uff0c\u4f7f $col_{now}$ \u52a0\u4e0a  $col_{son}$ ,\u6700\u540e\u53ea\u9700\u8981\u5728 $dfs$ \u7ed3\u675f\u540e\u7edf\u8ba1 $col_{now}$ \u662f\u5426\u4e3a\u96f6\u5373\u53ef\n\n**ps:\u7531\u4e8e\u662f\u591a\u7ec4\u6570\u636e\uff0c\u6240\u4ee5\u4e00\u5b9a\u8981\u8bb0\u5f97\u5c06\u53d8\u91cf\u6e05\u96f6**\n\n### \u4ee3\u7801\u5b9e\u73b0\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define cf int _;cin >> _; while (_--)\n#define f(i, l, r) for (int i = l; i <= r; i++)\n#define F(i, r, l) for (int i = r; i >= l; i--)\n#define endl \"\\n\"\nconst int N = 4000 + 3;\nint head[N], col[N], tot, siz[N];\nint res;\nstruct node\n{\n    int ne, to;\n} e[N];\nvoid add(int u, int v)\n{\n    e[++tot].ne = head[u];\n    e[tot].to = v;\n    head[u] = tot;\n}\nvoid dfs(int now, int fa)\n{\n    for (int i = head[now]; i; i = e[i].ne)\n    {\n        int v = e[i].to;\n        if (v == fa)\n            continue;\n        dfs(v, now);\n        col[now] += col[v];\n    }\n    if (!col[now])\n        res++;\n}\nvoid solve()\n{\n    memset(e, 0, sizeof(e));\n    memset(head,0,sizeof(head));\n    tot=0,res=0;\n    int n;\n    cin >> n;\n    f(i, 2, n)\n    {\n        int v;\n        cin >> v;\n        add(v, i);\n    }\n    string s;\n    cin >> s;\n    f(i, 0, n - 1)\n    {\n        if (s[i] == 'W')\n            col[i + 1] = 1;\n        else\n            col[i + 1] = -1;\n    }\n    dfs(1, 0);\n    cout << res << endl;\n}\nsigned main()\n{\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n    cf\n    {\n        solve();\n    }\n}\n```",
        "postTime": 1652329008,
        "uid": 605780,
        "name": "Jadebo1",
        "ccfLevel": 0,
        "title": "CF1676G"
    },
    {
        "content": "\u901a\u8fc7\u4e00\u6b21 dfs \u5904\u7406\u51fa\u6bcf\u4e2a\u8282\u70b9\u6240\u5728\u7684\u5b50\u6811\u4e2d\u9ed1\u8272\u8282\u70b9\u548c\u767d\u8272\u8282\u70b9\u4e2a\u6570\uff0c\u518d\u8fdb\u884c\u7edf\u8ba1\u3002\n\n```cpp\n// author: TMJYH09\n// create time: 2022/05/10 23:50:09\n#include <bits/stdc++.h>\n#define endl '\\n'\nusing namespace std;\n\nconst int N = 4005;\nstruct edge{\n    int to,nxt;\n}e[N<<1];\nint head[N],idx;\nvoid add(int x,int y){\n    e[++idx]={y,head[x]};\n    head[x]=idx;\n}\nchar col[N];\nint n;\n\nint black[N],white[N];\n\nvoid dfs(int u,int fa){\n    if(col[u]=='B')black[u]=1;\n    if(col[u]=='W')white[u]=1;\n    for(int i=head[u];i;i=e[i].nxt){\n        int v=e[i].to;\n        if(v!=fa){\n            dfs(v,u);\n            black[u]+=black[v];\n            white[u]+=white[v];\n        }\n    }\n}\n\n\nvoid init(){\n    idx=0;\n    for(int i=1;i<=n;i++)head[i]=0,col[i]=' ',black[i]=white[i]=0;\n}\n\nvoid solve(){\n    init();\n    cin>>n;\n    for(int i=2,x;i<=n;i++){\n        cin>>x;add(i,x);add(x,i);\n    }\n    for(int i=1;i<=n;i++)cin>>col[i];\n    dfs(1,0);\n    int ans=0;\n    for(int i=1;i<=n;i++){\n        //cout<<\"i = \"<<i<<' '<<black[i]<<' '<<white[i]<<endl;\n        if(black[i]==white[i])ans++;\n    }\n    cout<<ans<<endl;\n}\n\nint main(){\n    ios::sync_with_stdio(false),cin.tie(nullptr);\n    int _;cin>>_;while(_--)solve();\n    return 0;\n}\n```",
        "postTime": 1652232495,
        "uid": 482728,
        "name": "Engulf",
        "ccfLevel": 0,
        "title": "CF1676G White-Black Balanced Subtrees \u9898\u89e3"
    },
    {
        "content": "## CF1676G White-Black Balanced Subtrees \n\n$\\mathit{dp}_{i,j}$\n\u8003\u5bdf\u6811\u7684\u904d\u5386\u3002\n\n\u9898\u76ee\u7ffb\u8bd1\u6709\u4e00\u4e2a\u6ca1\u6709\u7ffb\u8bd1\u5230\uff0c\u5c31\u662f\u8f93\u5165\u7684\u7b2c\u4e8c\u884c\uff0c\u8f93\u5165\u7684\u662f $i+1$ \u5230 $n$ \u7684\u6839\u8282\u70b9\u3002\n\n\u7b2c\u4e09\u884c\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9 $siz_{i}$ \u8fdb\u884c\u521d\u59cb\u5316\u4e86\u3002\n\n$siz[i]$ \u8868\u793a\u4ee5 $i$ \u4e3a\u6839\uff0c\u5176\u7684\u5b50\u6811\u4e0b\u9762\u6709\u591a\u5c11\u4e2a\u9ed1\u8272\u7ed3\u70b9\uff0c\u591a\u5c11\u4e2a\u767d\u8272\u7ed3\u70b9\u3002\n\n\u5176\u4e2d $\\mathit {siz}_{i,black}$ \u5373\u5b83\u7684\u5b50\u8282\u70b9\u4e3a\u9ed1\u7684\u548c\uff0c$\\mathit {siz}_{i,white}$ \u4e3a\u5b50\u8282\u70b9\u4e3a\u767d\u8272\u7684\u548c\uff0c\u6700\u540e\u5728\u56de\u6eaf\u4e4b\u4e2d\u7edf\u8ba1\u5373\u53ef\u3002\n\n\u6700\u540e\u770b\u6bcf\u4e2a $i$ \u7684\u9ed1\u8272\u7ed3\u70b9\u7684\u6570\u91cf\u662f\u5426\u7b49\u4e8e\u767d\u8272\u7ed3\u70b9\u5373\u53ef\u3002\n\n\u6ce8\u610f\u591a\u6d4b\u6e05\u7a7a\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N =1e6+10;\nvector<int> g[N<<1];\nstruct node\n{\n\tint black=0,white=0;\n}siz[N];\nint ans;\nvoid dfs(int u,int fath)\n{\n\tfor(int i=0;i<g[u].size();i++)\n\t{\n\t\tint v=g[u][i];\n\t\tif(v==fath)\n\t\t\tcontinue;\n\t\tdfs(v,u);\n\t\tsiz[u].black+=siz[v].black,siz[u].white+=siz[v].white; \n\t}\n}\nint main()\n{\n\tint t;\n\tcin>>t;\n\twhile(t--)\n\t{\n\t\tint n;\n\t\tans=0;\n\t\tcin>>n;\n\t\tfor(int i=2,u;i<=n;i++)\n\t\t\tcin>>u,g[u].push_back(i);\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tchar k;\n\t\t\tcin>>k;\n\t\t\tif(k=='W')\n\t\t\t\tsiz[i].white=1;\n\t\t\telse\n\t\t\t\tsiz[i].black=1; \n\t\t}\n\t\tdfs(1,0);\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tif(siz[i].black==siz[i].white)\n\t\t\t\tans++; \n\t\tcout<<ans<<endl;\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tg[i].clear(),siz[i].black=siz[i].white=0;\n\t}\n\treturn 0;\n}\n \n```\n\n\n",
        "postTime": 1666595688,
        "uid": 361141,
        "name": "_JF_",
        "ccfLevel": 0,
        "title": "CF1676G White-Black Balanced Subtrees"
    },
    {
        "content": "### \u9898\u76ee\u7b80\u5316\u548c\u5206\u6790\uff1a  \n\n\u6c42\u4e00\u9897\u5b50\u6811\u7684\u9ed1\u767d\u4e24\u6570\u662f\u5426\u76f8\u7b49\u3002  \n\n\u6211\u4eec\u8bbe\u9ed1 $1$\uff0c\u767d $-1$\uff0c\u82e5\u67d0\u4e00\u68f5\u5b50\u6811\u7684\u6743\u503c\u4e3a $0$\uff0c\u8bf4\u660e\u6b64\u523b\u7684\u9ed1\u767d\u4e2a\u6570\u76f8\u7b49\uff0c\u8d21\u732e\u52a0\u4e00\u3002   \n\n\u4ece\u6839\u641c\u7d22\uff0c\u6bcf\u6b21\u5c06\u503c\u4f20\u9012\u7ed9\u7236\u4eb2\uff0c\u5224\u65ad\u7236\u4eb2\u6b64\u65f6\u7684\u6743\u503c\u3002   \n\n### Solution:\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef double db;\n\nconst int N=4e3+50;\nconst int M=1e5+50;\nconst int Mod=1e9+7;\n\ninline int read(){\n    int x=0,f=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){\n        if(ch=='-')\n            f=-1;\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9'){\n        x=(x<<1)+(x<<3)+(ch^48);\n        ch=getchar();\n    }\n    return x*f;\n}\n\nint t,n;\nint ans;\nint c[N],si[N];\nvector<int>tree[N];\n\nvoid dfs(int u,int p){\n\tsi[u]=c[u];\n\tfor(int v=0;v<(int)tree[u].size();++v){\n\t\tif(tree[u][v]==p) continue;\n\t\tdfs(tree[u][v],u);\n\t\tsi[u]+=si[tree[u][v]];\n\t}\n\tif(si[u]==0) ans++;\n}\nint main()\n{\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tans=0;\n\t\tn=read();\n\t\tfor(int i=2;i<=n;++i){\n\t\t\tint x;\n\t\t\tx=read();\n\t\t\ttree[x].push_back(i);\n\t\t\ttree[i].push_back(x);\n\t\t}\n\t\tstring s;\n\t\tcin>>s;\n\t\tfor(int i=0;i<n;++i){\n\t\t\tif(s[i]=='W') c[i+1]=-1; else c[i+1]=1;\n\t\t}\n\t\tdfs(1,0);\n\t\tprintf(\"%d\\n\",ans);\n\t\tfor(int i=1;i<=n;++i) tree[i].clear();\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1660130992,
        "uid": 750803,
        "name": "_Revenge_",
        "ccfLevel": 0,
        "title": "CF1676G"
    },
    {
        "content": "\u9898\u610f\uff1a\n\n\u6709\u4e00\u68f5\u6839\u8282\u70b9\u4e3a 1 \u7684\u6811\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u6709\u4e00\u79cd\u989c\u8272\uff0c\u6216\u767d\uff0c\u6216\u9ed1\u3002\u8ba9\u6211\u4eec\u6c42\uff0c\u5728\u6240\u6709\u8282\u70b9\u4e2d\uff0c\u6709\u591a\u5c11\u4e2a\u7ed3\u70b9\uff08\u5305\u62ec\u81ea\u5df1\uff09\u548c\u5b83\u6240\u6709\u5b50\u6811\u7684\u9ed1\u767d\u989c\u8272\u603b\u548c\u76f8\u7b49\u3002\n\n\u6211\u4eec\u6765\u8003\u8651\uff1a\n\n\u6bcf\u4e2a\u7ed3\u70b9\u7684\u9ed1\u767d\u603b\u5408\u6765\u81ea\u4e8e\u5b83\u672c\u8eab\u7684\u989c\u8272\u52a0\u4e0a\u5b83\u6240\u6709\u5b50\u7ed3\u70b9\u7684\u9ed1\u767d\u603b\u6570\u4e4b\u548c\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u7684\u9ed1\u767d\u603b\u5408\u80af\u5b9a\u4f1a\u5f71\u54cd\u5230\u5b83\u7684\u7236\u4eb2\u9ed1\u767d\u603b\u548c\uff08 1 \u9664\u5916\uff09\u3002\u90a3\u6211\u4eec\u5c31\u7528\u5b50\u8282\u70b9\u7684\u503c\u66f4\u65b0\u7236\u8282\u70b9\u7684\u503c\u5c31\u884c\u4e86\u3002\n\n\u7528\u5b50\u8282\u70b9\u66f4\u65b0\u7236\u8282\u70b9\uff0c\u8fd9\u50cf\u4ec0\u4e48\uff1f\u8fd9\u662f\u4e0d\u662f\u5c31\u662f DFS \u65f6\u7684\u56de\u6eaf\u64cd\u4f5c\uff1f\n\n\u6211\u4eec\u6765\u60f3\u60f3 DFS \uff0c\u5b83\u662f\u641c\u5230\u6700\u5e95\u5c42\uff0c\u5c31\u4e00\u5c42\u4e00\u5c42\u7684\u5411\u4e0a\u56de\u6eaf\u3002\u6362\u5230\u8fd9\u4e2a\u9898\u4e2d\u5c31\u662f\u641c\u5230\u53f6\u5b50\u8282\u70b9\u5c31\u4e00\u5c42\u4e00\u5c42\u5411\u4e0a\u66f4\u65b0\u3002\u56e0\u4e3a\u53f6\u5b50\u8282\u70b9\u6ca1\u6709\u5b50\u8282\u70b9\uff0c\u5b83\u7684\u9ed1\u767d\u603b\u548c\u5c31\u662f\u672c\u8eab\u989c\u8272\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8dd1\u4e00\u904d DFS \u5c31\u884c\u4e86\u3002\n\n**~~reader : talks are cheap, show me the code!!!~~**\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=4e3+10;\nint T,n;\nint b[N],w[N];\nchar s[N];\nvector<int>G[N];\nint ans;\n\nvoid DFS(int u,int fa){\n    for(int i=0;i<G[u].size();i++){\n        int v=G[u][i];\n        if(v==fa) continue;\n        DFS(v,u);\n        b[u]+=b[v]; w[u]+=w[v];\n    }\n}\n\nint main(){\n    scanf(\"%d\",&T);\n    while(T--){\n        ans=0;\n        int x;\n        scanf(\"%d\",&n);\n        for(int i=1;i<=n;i++){\n            G[i].clear();\n            b[i]=w[i]=0;\n        }\n        for(int i=2;i<=n;i++){\n            scanf(\"%d\",&x);\n            G[x].push_back(i);\n        }\n\t\tcin>>(s+1);\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tb[i]=(s[i]=='B');\n\t\t\tw[i]=(s[i]=='W');\n\t\t}\n        DFS(1,1);\n        for(int i=1;i<=n;i++){\n        \tif(b[i]==w[i]) ans++;\n        }\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n```\n\u6211\u4eec\u60f3\u4e00\u60f3\uff0c\u6211\u4eec DFS \u662f\u4e0d\u662f\u4ece\u53f6\u5b50\u7ed3\u70b9\u5f00\u59cb\u56de\u6eaf\u3002\u90a3\u6211\u4eec\u76f4\u63a5\u4ece\u53f6\u5b50\u7ed3\u70b9\u5012\u641c\u884c\u4e0d\u884c\u5462\uff1f\n\n- \u5982\u679c\u4ece\u53f6\u5b50\u7ed3\u70b9\u5012\u641c\u65f6\u53ea\u56de\u6eaf\u52a0\u4e0a\u53f6\u5b50\u7ed3\u70b9\u7684\u503c\uff0c\u90a3\u4e9b\u4e0d\u662f\u53f6\u5b50\u7ed3\u70b9\u7684\u503c\u5c31\u6ca1\u6709\u88ab\u56de\u6eaf\u56de\u53bb\u3002\n\n- \u5982\u679c\u4ece\u53f6\u5b50\u7ed3\u70b9\u5012\u641c\u65f6\u52a0\u4e0a\u5f53\u524d\u641c\u7d22\u5230\u7684\u7ed3\u70b9\u7684\u9ed1\u767d\u603b\u548c\uff0c\u8fd9\u6837\u5c31\u8003\u8651\u5230\u4e86\u4e0d\u662f\u53f6\u5b50\u7ed3\u70b9\u7684\u503c\u3002\u4f46\u4f1a\u91cd\u590d\u8ba1\u7b97\uff0c\u4e3e\u4e2a\u4f8b\u5b50\uff1a\u4e00\u4e2a\u7ed3\u70b9\u6709\u4e24\u4e2a\u5b50\u7ed3\u70b9\uff0c\u8fd9\u4e24\u4e2a\u5b50\u8282\u70b9\u5f80\u4e0a\u5012\u641c\u65f6\u90fd\u4f1a\u52a0\u4e0a\u8fd9\u4e2a\u7ed3\u70b9\u7684\u503c\uff0c\u8fd9\u6837\u5c31\u91cd\u590d\u8ba1\u7b97\u4e86\u3002\n\nDFS \u6b63\u597d\u53ef\u4ee5\u89e3\u51b3\u4ee5\u4e0a\u95ee\u9898\u3002\n\n\u90a3\u5982\u679c\u60f3\u5012\u641c\u7684\u8bdd\uff0c\u53ea\u80fd\u6bcf\u4e2a\u7ed3\u70b9\u90fd\u5f80\u4e0a\u5012\u641c\u4e00\u904d\u4e86\uff0c\u90a3\u5c31\u6162\u591a\u4e86\u3002\n\n\u8fd8\u662f\u628a\u4ee3\u7801\u9644\u4e0a\u5427\u2026\u2026\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=4e3+10;\nint T,n;\nint f[N],b[N],w[N];\nchar s[N];\nint ans;\n\nvoid DFS(int u,int x){\n\tw[f[u]]+=w[x];\n\tb[f[u]]+=b[x];\n\tif(f[u]!=1) DFS(f[u],x);\n}\n\nint main(){\n\tscanf(\"%d\",&T);\n\twhile(T--){\n\t\tans=0;\n\t\tchar ch;\n\t\tscanf(\"%d\",&n);\n\t\tfor(int i=1;i<=n;i++) b[i]=w[i]=0;\n\t\tfor(int i=2;i<=n;i++) scanf(\"%d\",&f[i]);\n\t\tcin>>(s+1);\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tb[i]=(s[i]=='B');\n\t\t\tw[i]=(s[i]=='W');\n\t\t}\n\t\tfor(int i=2;i<=n;i++) DFS(i,i);\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif(b[i]==w[i]) ans++;\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n```\n[DFS](https://www.luogu.com.cn/record/75768176)\n\n[\u5012\u641c](https://www.luogu.com.cn/record/75758641)\n\n",
        "postTime": 1652508321,
        "uid": 585962,
        "name": "Deamer",
        "ccfLevel": 4,
        "title": "CF1676G\u9898\u89e3"
    },
    {
        "content": "## CF1676 \u9898\u89e3\n### \u9898\u76ee\u5927\u610f\n\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u662f\u767d\u8272\u6216\u9ed1\u8272\uff0c\u6c42\u9ed1\u8272\u4e0e\u767d\u8272\u8282\u70b9\u6570\u91cf\u76f8\u7b49\u7684\u5b50\u6811\u4e2a\u6570.\n\n### \u6ce8\u610f\n\u8fd9\u91cc\u4f7f\u7528 $col_i$ \u6765\u8868\u793a\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684\u9ed1\u767d\uff0c\u82e5 $col_i = 1$, \u5219\u8fd9\u4e2a\u8282\u70b9\u4e3a\u767d\u8272\uff0c\u53cd\u4e4b\uff0c\u82e5 $col_i = 0$\uff0c\u5219\u8fd9\u4e2a\u8282\u70b9\u4e3a\u9ed1\u8272\u3002\n\n### \u7b97\u6cd5\n#### 1. \u679a\u4e3e\u5b50\u6811\n\u679a\u4e3e\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u7528\u641c\u7d22\u5904\u7406\u51fa\u5b83\u7684\u5b50\u6811\uff0c\u518d\u8fdb\u884c\u7edf\u8ba1\u7b54\u6848.\n\n\u65f6\u95f4\u590d\u6742\u7684\uff1a$O(n^2)$, \u5bf9\u4e8e $1\\le \\sum{n} \\le 2 \\times 10^5$ \u7684\u6570\u636e\u8303\u56f4\uff0c\u65e0\u6cd5\u901a\u8fc7\n\n#### 2. \u8bb0\u5fc6\u5316\u641c\u7d22\n\u4ece\u53f6\u5b50\u8282\u70b9\u5411\u6839\u8282\u70b9\u8fdb\u884c\u641c\u7d22\uff0c\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u7684\u9ed1\u8272\u548c\u767d\u8272\u7684\u70b9\u7684\u4e2a\u6570\u90fd\u662f\u5b83\u6240\u6709\u5b50\u8282\u70b9\u7684\u5b50\u6811\u7684\u9ed1\u8272\u548c\u767d\u8272\u7684\u70b9\u7684\u4e2a\u6570\u548c\u3002\n\n\u5c06\u6bcf\u4e00\u4e2a\u9ed1\u8272\u8ba4\u5b9a\u4e3a\u70b9\u6743 -1\uff0c\u767d\u8272\u8ba4\u5b9a\u4e3a\u70b9\u6743 1\u3002\n\n\u5373\u5f53\u7b2c $i$ \u4e2a\u8282\u70b9\u4e3a\u53f6\u5b50\u8282\u70b9\u65f6\uff0c\n\n$dfs(i) = \\begin{cases}1&col_i = 1\\\\-1&col_i = 0\\end{cases}$\n\n\u5f53\u7b2c $i$ \u4e2a\u8282\u70b9\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\u65f6\n\n$dfs(i) = \\sum{dfs(c)}$ \u5176\u4e2d $c$ \u662f $i$ \u7684\u6240\u6709\u5b50\u8282\u70b9 \n\n\u7531\u6b64\uff0c\u5f53 $dfs(i)=0$ \u65f6\uff0c\u7edf\u8ba1\u7b54\u6848\u3002\n\n\u6bcf\u4e00\u4e2a\u8282\u70b9\u53ea\u901a\u8fc7\u4e86\u4e00\u6b21\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$ \u53ef\u4ee5\u901a\u8fc7\n\n### \u4ee3\u7801\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\nvector<vector<int>> vec(4001);\nstring s;\nint ans = 0;\nint dfs(int u){\n    if(vec[u].empty()){\n        if(s[u-1]=='W') return 1;\n        else return -1;\n    }\n    int t = 0;\n    for(int i = 0;i<vec[u].size();i++)\n        t += dfs(vec[u][i]);\n    if(s[u-1]=='W') t++;\n    else t--;\n    if(t==0) ans++;\n    return t;\n}\nint main(){\n    int t;\n    cin>>t;\n    while(t--){\n        int n;\n        cin>>n;\n        for(int i = 2;i<=n;i++){\n            int u;\n            cin>>u;\n            vec[u].push_back(i);\n        }\n        cin>>s;\n        dfs(1);\n        cout<<ans<<endl;\n        ans = 0;\n        for(int i = 1;i<=n;i++) vec[i].clear();\n    }\n    return 0;\n}\n```",
        "postTime": 1652304946,
        "uid": 416075,
        "name": "wsy20080329",
        "ccfLevel": 4,
        "title": "CF1676\u9898\u89e3"
    }
]