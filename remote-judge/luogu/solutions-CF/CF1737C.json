[
    {
        "content": "## [\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1737C)\n\n### \u9898\u76ee\u7ffb\u8bd1\n\n\u7ed9\u5b9a\u4e00\u4e2a $n\\times n$ \u7684\u68cb\u76d8\uff0c\u68cb\u76d8\u4e0a\u6709\u4e14\u4ec5\u6709\u4e09\u9897\u6392\u6210 $\\text{L}$ \u5f62\u7684\u68cb\u5b50\u3002\n\n\u5bf9\u4e8e $\\text{L}$ \u5f62\u7684\u5b9a\u4e49\uff0c\u6709\u4e14\u4ec5\u6709\u4ee5\u4e0b\u56db\u79cd\u60c5\u51b5\uff1a\n\n![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1737C/514135a9cb3021fdd11c6f5877903e61238e21da.png)\uff0c\n![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1737C/e135bddf869fc3c4e5900f14eaae8062e1263b64.png)\uff0c\n![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1737C/b79b64cfe0ed70ae5dd5a6ed54ba57554fdeec32.png)\uff0c\n![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1737C/07b44b1ac7a379c6fed131cb7e0805a4ed084742.png)\n\n\u68cb\u5b50\u7684\u79fb\u52a8\u89c4\u5219\u548c\u8df3\u68cb\u76f8\u540c\u3002\u5b83\u53ef\u4ee5\u6c34\u5e73\u3001\u5782\u76f4\u6216\u659c\u5411\u79fb\u52a8\u3002\u5f53\u4e14\u4ec5\u5f53\u4e00\u4e2a\u68cb\u5b50\u7684\u67d0\u4e2a\u65b9\u5411\u7d27\u968f\u53e6\u4e00\u4e2a\u68cb\u5b50\u65f6\uff0c\u5b83\u80fd\u8df3\u5230\u53e6\u4e00\u4e2a\u68cb\u5b50\u4e4b\u540e\u7684\u4e00\u4e2a\u65b9\u683c\u4e0a\u3002\u68cb\u5b50\u4e0d\u80fd\u8df3\u51fa\u68cb\u76d8\u3002\u8be6\u89c1\u6837\u4f8b\u89e3\u91ca\u3002\n\n\u73b0\u5728\u6709 $T$ \u7ec4\u8be2\u95ee\uff0c\u6bcf\u7ec4\u7ed9\u51fa\u68cb\u76d8\u5927\u5c0f $n(n\\le 10^5)$\uff0c\u4e09\u9897\u68cb\u5b50\u5404\u81ea\u7684\u4f4d\u7f6e $r_1,c_1,r_2,c_2,r_3,c_3(1\\le r_1,c_1,r_2,c_2,r_3,c_3 \\le n)$\uff0c\u4ee5\u53ca\u76ee\u6807\u70b9 $x,y(1 \\le x,y \\le n)$\uff0c\u8be2\u95ee\u662f\u5426\u80fd\u4f7f\u5176\u4e2d\u7684\u4e00\u9897\u68cb\u5b50\u8df3\u5230\u76ee\u6807\u70b9\u3002\u8f93\u51fa `YES` \u6216 `NO`\u3002\n\n### \u89e3\u51b3\u601d\u8def\n\n\u5f53\u6ca1\u6709\u4ec0\u4e48\u601d\u8def\u7684\u65f6\u5019\u53ef\u4ee5\u5148\u6a21\u62df\u4e00\u4e0b\u68cb\u5b50\u7684\u8df3\u8dc3\u8fc7\u7a0b\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/yxp81j47.png)\n\n\u4f8b\u5982\u4e0a\u56fe\u7c89\u8272\u7684 $\\text{L}$ \u5f62\uff0c\u7ecf\u8fc7\u4e00\u6b21\u8df3\u8dc3\uff0c\u5176\u6298\u70b9\u53ef\u4ee5\u8df3\u5230 $1,2$ \u5904\uff0c\u975e\u6298\u70b9\u53ef\u4ee5\u8df3\u5230 $3,4,5,6$\u3002\n\n\u6211\u4eec\u8fdb\u884c\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n1. \u8df3\u6298\u70b9\uff08$1,2$\uff09\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/2nenn96u.png)\n\n\u6b64\u540e\u539f\u5148\u6298\u70b9\u53ef\u4ee5\u548c\u53e6\u4e00\u70b9\u5728\u4e00\u5217\u4e0a\u4e0d\u65ad\u8df3\uff0c\u539f\u5148\u4e24\u4e2a\u975e\u6298\u70b9\u53ef\u4ee5\u4e0d\u65ad\u659c\u5411\u8df3\uff0c\u4f46\u56fe\u4e2d\u5982\u679c\u5de6\u4e0b\u7684\u8df3\u5230\u53f3\u4e0a\u5219\u53c8\u53d8\u6210\u4e86 $\\text{L}$ \u5f62\uff0c\u539f\u5148\u6298\u70b9\u8fd8\u662f\u6298\u70b9\u3002\n\n\u540c\u65f6\u53d1\u73b0\uff0c\u53ef\u4ee5\u8df3\u5230\u7684\u4efb\u610f\u70b9\uff0c\u5176\u6a2a\u7eb5\u5750\u6807\uff0c\u4e00\u5b9a\u6709\u4e00\u4e2a\u548c\u539f\u5148\u6298\u70b9\u5947\u5076\u6027\u76f8\u540c\u3002\u5c31\u7b97\u91cd\u65b0\u53d8 $\\text{L}$ \u5f62\uff0c\u65b0\u6298\u70b9\u7684\u6a2a\u7eb5\u5750\u6807\u4e00\u5b9a\u6709\u4e00\u4e2a\u548c\u539f\u5148\u6298\u70b9\u5947\u5076\u6027\u76f8\u540c\uff0c\u6240\u4ee5\u7ed3\u8bba\u4ecd\u6210\u7acb\u3002\n\n2. \u659c\u8df3\u975e\u6298\u70b9\uff08$3,4$\uff09\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/4x8oujf3.png)\n\n\u53d1\u73b0\u5c31\u662f\u60c5\u51b5 $1$ \u955c\u50cf\u7ffb\u8f6c\u4e86\u4e00\u4e0b\u3002\n\n3. \u76f4\u8df3\u975e\u6298\u70b9\uff08$5,6$\uff09\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/wcf57k2e.png)\n\n\u53d1\u73b0\u53c8\u53d8\u6210\u4e86 $\\text{L}$ \u5f62\uff08\u60c5\u51b5 $1$ \u5df2\u8bb2\uff09\u3002\n\n\u7531\u6b64\uff0c\u53ef\u4ee5\u5f97\u51fa\uff0c\u82e5\u76ee\u6807\u6a2a\u7eb5\u5750\u6807\u6709\u4e00\u4e2a\u548c\u539f\u5148\u6298\u70b9\u5947\u5076\u6027\u76f8\u540c\uff0c\u5219\u53ef\u4ee5\u5230\u8fbe\u3002\n\n\u7136\u800c\u53d1\u73b0\u6837\u4f8b\u90fd\u8fc7\u4e0d\u4e86\u3002\n\n\u8003\u8651\u540e\u53ef\u4ee5\u53d1\u73b0\u6709\u7279\u6b8a\u60c5\u51b5\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/g9drvndy.png)\n\n\u5f53\u539f\u5148\u6298\u70b9\u5728\u68cb\u76d8\u89d2\u843d\u65f6\uff0c\u53ea\u80fd\u5230\u8fbe\u4e24\u6761\u8fb9\u4e0a\u7684\u70b9\uff08\u56e0\u4e3a\u8df3\u4e0d\u51fa\u53bb\uff09\u3002\n\n\u6240\u4ee5\u7279\u5224\u4e00\u4e0b\u5c31\u597d\u3002\n\n\u81f3\u4e8e\u5982\u4f55\u5224\u65ad\u90a3\u4e2a\u662f\u6298\u70b9\uff0c\u8f93\u5165\u6bcf\u4e00\u4e2a $x,y$ \u540e\u6392\u5e8f\uff0c$x_2,y_2$ \u5c31\u662f \u3002\n\n### AC Code\n\n```cpp\n#include<bits/stdc++.h>\n#define IOS ios::sync_with_stdio(false)\n#define TIE cin.tie(0),cout.tie(0)\n#define int long long\nusing namespace std;\nint T,n,x[4],y[4],tx,ty;\nbool check(){\n\tbool _1=0,_2=0;\n\tif((x[2]==1||x[2]==n)&&tx!=x[2]) _1=1;\n\tif((y[2]==1||y[2]==n)&&ty!=y[2]) _2=1;\n\tif(_1&&_2) return 0;\n\tif(((x[2]+tx)&1)&&((y[2]+ty)&1)) return 0;\n\treturn 1;\n}\nvoid solve(){\n\tcin>>n;\n\tfor(int i=1;i<=3;i++) cin>>x[i]>>y[i];\n\tcin>>tx>>ty;\n\tsort(x+1,x+4),sort(y+1,y+4);\n\tif(check()) cout<<\"YES\"<<endl;\n\telse cout<<\"NO\"<<endl; \n} \nsigned main(){\n\tIOS;TIE;\n\tcin>>T;\n\twhile(T--) solve();\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1666097645,
        "uid": 241485,
        "name": "Binary_1110011_",
        "ccfLevel": 6,
        "title": "CF1737C \u9898\u89e3"
    },
    {
        "content": "\u539f\u5148\u5927\u4f6c\u7684\u9898\u89e3\u5199\u7684\u5f88\u597d\uff0c\u4f46\u8fd9\u91cc\u60f3\u8bb2\u4e00\u4e0b\u4e0d\u540c\u505a\u6cd5\u3002\n\n## \u601d\u8def\n\u9898\u76ee\u4e2d\u8bf4\u7684 $L$ \u578b\u6709\u56db\u79cd\u60c5\u51b5\uff0c\u5f88\u5bb9\u6613\u5c31\u53ef\u4ee5\u60f3\u5230\u7279\u6b8a\u60c5\u51b5\uff0c\u90a3\u5c31\u662f $L$ \u578b\u6070\u597d\u8d34\u5728\u68cb\u76d8\u7684\u56db\u4e2a\u89d2\u4e0a\uff0c\u8fd9\u65f6\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u6837\u5b50\u68cb\u5b50\u53ea\u80fd\u5728\u68cb\u76d8\u7684\u5176\u4e2d\u4e24\u6761\u8fb9\u4e0a\u79fb\u52a8\u3002\u5bf9\u4e8e\u56db\u4e2a\u89d2\u6211\u4eec\u8fdb\u884c\u56db\u6b21\u7279\u5224\u3002\n\n\u770b\u666e\u901a\u60c5\u51b5\uff0c\u5728\u624b\u52a8\u6a21\u62df\u5b8c\u6837\u4f8b\u540e\u53d1\u73b0\uff0c\u68cb\u76d8\u4e0a\u5230\u4e0d\u4e86\u7684\u70b9\u662f\u6709\u4e00\u5b9a\u7684\u89c4\u5f8b\uff0c\u6362\u4e2a\u60f3\u6cd5\u7406\u89e3\uff0c\u68cb\u76d8\u4e0a\u80fd\u591f\u5230\u8fbe\u7684\u6240\u6709\u70b9\u90fd\u53ef\u770b\u505a\u662f\u539f $L$ \u578b\u7684\u4e09\u4e2a\u70b9\u6cbf\u7740 $r$ \u6216 $c$ \u5e73\u79fb $2k$ \u4e2a\u5355\u4f4d\u957f\u5ea6\uff0c\u5176\u4e2d $k$ \u4e3a\u6574\u6570\u3002\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u4e0d\u7528\u7406\u4f1a\u90e8\u5206\u51fa\u754c\u7684\u60c5\u51b5\uff0c\u53ea\u8981\u6709\u4e00\u90e8\u5206\u4ecd\u5728\u68cb\u76d8\u5185\uff0c\u539f\u6765\u7684 $L$ \u578b\u5c31\u53ef\u4ee5\u79fb\u52a8\u5230\u90a3\u91cc\u3002\n\n\u770b\u56de $L$ \u578b\uff0c\u628a\u5b83\u8865\u6210\u4e00\u4e2a $2 \\times 2$ \u7684\u6b63\u65b9\u5f62\uff0c\u518d\u7ed3\u5408\u4e0a\u9762\u7684\u8bdd\uff0c\u5c31\u4f1a\u53d1\u73b0\uff0c\u90a3\u4e9b\u6c38\u8fdc\u8fbe\u4e0d\u5230\u7684\u70b9\uff0c\u5c31\u662f\u90a3\u4e2a\u88ab\u8865\u4e0a\u53bb\u7684\u70b9\u3002\u8fd9\u65f6\u53ea\u8981\u770b\u76ee\u6807\u70b9\u662f\u5426\u5728\u8fd9\u4e9b\u70b9\u4e4b\u95f4\u5c31\u884c\u4e86\u3002\n\n## \u4ee3\u7801\u5b9e\u73b0\n\u601d\u8def\u597d\u60f3\uff0c\u4f46\u662f\u4ee3\u7801\u8fd8\u662f\u6709\u5f88\u591a\u5c0f\u7ec6\u8282\u3002\n\n\u9996\u5148\u662f\u5bf9\u6700\u5f00\u59cb\u4e09\u4e2a\u68cb\u5b50\u4f4d\u7f6e\u7684\u8bb0\u5f55\u53ca\u7279\u5224\uff0c\u5982\u679c\u4e00\u4e2a\u4e00\u4e2a\u5224\u65ad\uff0c\u5c06\u8981\u82b1\u8d39\u5de8\u5927\u7684\u65f6\u95f4\u4e0e\u7cbe\u529b\u3002\u6240\u4ee5\u6700\u597d\u7684\u65b9\u6cd5\u662f\u8fd0\u7528\u6570\u7ec4\u3002\n\n\u4e00\u5f00\u59cb\u6211\u60f3\u5f00\u4e00\u4e2a $10^5 \\times 10^5$ \u7684\u4e8c\u7ef4\u6570\u7ec4\uff0c\u4f46\u611f\u89c9\u4f1a\u7a7a\u8d85\uff0c\u4e8e\u662f\u5c31\u53d8\u6210\u4e86\u8fd9\u6837\uff1a\n```cpp\nstruct edge\n{\n    bitset<100005> r;\n}c[100005];\n```\n\u53ef\u5b9e\u9645\u4e0a\uff0c\u8be5\u8d85\u8fd8\u662f\u8d85\uff0c\u76f4\u5230\u6211\u770b\u89c1\u4e86\u8fd9\u6837\u7684\u4e00\u4e2a\u4e1c\u897f\uff1a`map`\u3002\u6211\u53ea\u9700\u8981\u8bb0\u5f55\u56db\u4e2a\u89d2\u662f\u5426\u6709\u5bf9\u5e94\u7684\u68cb\u5b50\uff0c\u5e76\u4e0d\u9700\u8981\u77e5\u9053\u5177\u4f53\u662f\u54ea\u4e2a\u68cb\u5b50\uff0c`map` \u6b63\u597d\u6ee1\u8db3\u6211\u7684\u9700\u8981\u3002\u53ea\u8981\u5728\u7528\u5b8c\u540e\u5c06\u7528\u7684\u4f4d\u7f6e\u6e05\u96f6\u5c31\u89e3\u51b3\u4e86\u3002\n\n\u5176\u6b21\u662f\u5982\u4f55\u5224\u65ad\u76ee\u6807\u70b9\u662f\u5426\u5728 $L$ \u578b\u6c38\u8fdc\u5230\u4e0d\u4e86\u7684\u70b9\u4e0a\u3002\u76f4\u63a5\u5206\u56db\u79cd\u60c5\u51b5\u8ba8\u8bba\u592a\u590d\u6742\u4e86\uff0c\u6240\u4ee5\u9700\u8981\u627e\u5230\u4e00\u70b9\u89c4\u5f8b\u3002\u8bbe\u4e09\u4e2a\u68cb\u5b50\u5206\u522b\u4e3a $chess_1$\uff0c$chess_2$\uff0c$chess_3$\uff0c$L$ \u578b\u7684\u62d0\u89d2\u70b9\u4e3a $chess_2$\u3002\u53d1\u73b0\uff0c\u5176\u4e2d\u4e00\u4e2a\u5230\u4e0d\u4e86\u7684\u70b9\u4e00\u5b9a\u5728 $L$ \u578b\u62d0\u89d2\u70b9\u5de6\u4e0b\u89d2 $(r_2 - 1,c_2 - 1)$ \u7684\u4f4d\u7f6e\u4e0a\u3002\u90a3\u4e48\u5982\u4f55\u8868\u793a\u51fa\u8fd9\u4e2a\u70b9\u5462\uff1f\n\n### \u7ed3\u8bba\n\u8bbe\u8fd9\u4e2a\u70b9\u7684\u4f4d\u7f6e\u4e3a $(r_a,c_a)$\uff0c\u5219\u6ee1\u8db3 $r_a=r_1+r_2+r_3-2 \\times \\max(r_1,r_2,r_3)$\uff0c$c_a=c_c+c_2+c_3-2 \\times \\max(c_1,c_2,c_3)$\u3002\n\n### \u8bc1\u660e\n\u8fd9\u4e24\u4e2a\u7ed3\u8bba\u7684\u8bc1\u660e\u7c7b\u4f3c\uff0c\u6240\u4ee5\u8fd9\u91cc\u7ed9\u51fa $r_a$ \u7684\u8bc1\u660e\u8fc7\u7a0b\u3002\n\n\u8bbe $r_x=\\max(r_1,r_2,r_3)$\uff0c$r_n=\\min(r_1,r_2,r_3)$\u3002\u7531\u4e8e $L$ \u578b\u662f\u4e09\u4e2a\u76f8\u8fde\u7684\u68cb\u5b50\uff0c\u6240\u4ee5\u6ee1\u8db3 $r_x-r_n=1$\u3002\u5bf9\u4e8e\u56db\u79cd $L$ \u578b\u53ef\u4ee5\u8fdb\u884c\u5f52\u7c7b\u3002\n\n#### \u4e24\u4e2a\u68cb\u5b50\u5728\u4e0a\uff0c\u4e00\u4e2a\u68cb\u5b50\u5728\u4e0b\n\u5305\u62ec\n\n| $chess_1$ | $chess_2$ |\n| :----------: | :----------: |\n|  | $chess_3$ |\n\n\u4ee5\u53ca\n\n| $chess_2$ | $chess_1$ |\n| :----------: | :----------: |\n| $chess_3$ |  |\n\n\u4e24\u79cd\u60c5\u51b5\u3002\n\n\u6b64\u65f6\u53ef\u4ee5\u53d1\u73b0 $r_1=r_2=r_x$\uff0c$r_3=r_n$\u3002\u800c $r_a=r_x-1$\u3002\n\u6211\u4eec\u5bf9 $r_a=r_x-1$ \u8fdb\u884c\u53d8\u5f62\u3002\n\n$r_a=r_x-1$\uff0c\n\n\u5c06 $1$ \u7528 $r_x-r_n$ \u4ee3\u66ff\uff0c\n\n$r_a=r_x-(r_x-r_n)$\uff0c\n\n\u53bb\u62ec\u53f7\uff0c\n\n$r_a=r_x-r_x+r_n$\uff0c\n\n\u5728\u540e\u9762\u52a0\u4e0a $r_x$ \u7136\u540e\u518d\u51cf\u53bb\uff0c\u8fd9\u4e00\u6b65\u5176\u5b9e\u975e\u5e38\u7384\u4e4e\uff0c\u4e00\u5f00\u59cb\u6211\u5e76\u6ca1\u6709\u60f3\u5230\u8fd9\u4e48\u5199\uff0c\u76f4\u5230\u5c06\u53e6\u5916\u4e00\u79cd\u60c5\u51b5\u8ba8\u8bba\u5b8c\u540e\u624d\u609f\u5230\u53ef\u4ee5\u8fd9\u4e48\u5199\uff0c\u53ef\u4ee5\u770b\u505a\u7eaf\u6570\u5b57\u505a\u6cd5\u3002\n\n$r_a=r_x-r_x+r_n+r_x-r_x$\uff0c\n\n\u79fb\u9879\uff0c\u90e8\u5206\u5408\u5e76\uff0c\n\n$r_a=r_x+r_x+r_n-2 \\times r_x$\uff0c\n\n\u800c\u524d\u9762\u5df2\u77e5 $r_1=r_2=r_x$\uff0c$r_3=r_n$\uff0c$r_x=\\max(r_1,r_2,r_3)$\uff0c\u6240\u4ee5 $r_a=r_1+r_2+r_3-2 \\times \\max(r_1,r_2,r_3)$\u3002\n\n#### \u4e24\u4e2a\u68cb\u5b50\u5728\u4e0b\uff0c\u4e00\u4e2a\u68cb\u5b50\u5728\u4e0a\n\u5305\u62ec\n\n| $chess_1$ |  |\n| :----------: | :----------: |\n| $chess_2$ | $chess_3$ |\n\n\u4ee5\u53ca\n\n|  | $chess_1$ |\n| :----------: | :----------: |\n| $chess_3$ | $chess_2$ |\n\n\u4e24\u79cd\u60c5\u51b5\u3002\n\n\u6b64\u65f6\u53ef\u4ee5\u53d1\u73b0 $r_1=r_x$\uff0c$r_2=r_3=r_n$\u3002\u800c $r_a=r_x-2$\u3002\n\u6211\u4eec\u5bf9 $r_a=r_x-2$ \u8fdb\u884c\u53d8\u5f62\u3002\n\n$r_a=r_x-2$\uff0c\n\n\u5c06 $2$ \u7528 $r_x-r_n$ \u4ee3\u66ff\uff0c\n\n$r_a=r_x-2 \\times (r_x-r_n)$\uff0c\n\n\u53bb\u62ec\u53f7\uff0c\n\n$r_a=r_x-2 \\times r_x+2\\times r_n$\uff0c\n\n\u62c6\u9879\uff0c\n\n$r_a=r_x-r_x-r_x+r_n+r_n$\uff0c\n\n\u79fb\u9879\uff0c\u90e8\u5206\u5408\u5e76\uff0c\n\n$r_a=r_x+r_n+r_n-2 \\times r_x$\uff0c\n\n\u800c\u524d\u9762\u5df2\u77e5 $r_1=r_x$\uff0c$r_2=r_3=r_n$\uff0c$r_x=\\max(r_1,r_2,r_3)$\uff0c\u6240\u4ee5 $r_a=r_1+r_2+r_3-2 \\times \\max(r_1,r_2,r_3)$\u3002\n\n------------\n\u5316\u7b80\u5b8c\u540e\u53d1\u73b0\u56db\u79cd\u60c5\u51b5\u7684 $r_a$ \u90fd\u53ef\u4ee5\u7528\u540c\u4e00\u4e2a\u5f0f\u5b50\u8868\u793a\u51fa\u6765\u3002\n\n\u90a3\u53c8\u8be5\u5982\u4f55\u5224\u65ad\u9898\u76ee\u7ed9\u51fa\u7684\u76ee\u6807\u70b9\u662f\u5426\u5728\u4e0d\u53ef\u5230\u8fbe\u7684\u70b9\u4e0a\u5462\uff1f\n\n\u7531\u4e8e\u4e0d\u53ef\u5230\u8fbe\u7684\u70b9\u4e5f\u662f\u7531 $(r_a,c_a)$ \u6cbf\u7740 $r$ \u6216 $c$ \u79fb\u52a8 $2k$ \u4e2a\u5355\u4f4d\u5f97\u5230\u7684\uff0c\u5176\u4e2d $k$ \u4e3a\u6574\u6570\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u50cf\u4e0b\u9762\u7684\u4ee3\u7801\u4e00\u6837\u5224\u65ad\u662f\u5426\u6a2a\u7eb5\u5750\u6807\u4e4b\u548c\u6216\u5dee\u662f\u5426\u662f\u4e8c\u7684\u500d\u6570\u5c31\u597d\u4e86\u3002\n```cpp\n\t\t\tll mid_r = p1.r + p2.r + p3.r - 2 * max(p1.r , max(p2.r , p3.r));\n            ll mid_c = p1.c + p2.c + p3.c - 2 * max(p1.c , max(p2.c , p3.c));\n            if((mid_r + target.r) % 2 == 0 && (mid_c + target.c) % 2 == 0)\n            {\n                printf(\"NO\\n\");\n                continue;\n            }\n            else\n            {\n                printf(\"YES\\n\");\n                continue;\n            }\n```\n\u5176\u4e2d `mid_r` \u4fbf\u662f\u521a\u624d\u7684 $r_a$\uff0c`mid_c` \u5c31\u662f $c_a$\u3002$target$ \u662f\u7528\u7ed3\u6784\u4f53\u5b9a\u4e49\u7684\uff0c\u8868\u793a\u76ee\u6807\u70b9\u53ca\u5176\u6a2a\u7eb5\u5750\u6807\u3002\n\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#include<iostream>\n#include<cstdio>\n#include<string>\n#include<ctime>\n#include<cstring>\n#include<algorithm>\n#include<climits>\n#include<queue>\n#include<map>\n#include<set>\n#include<sstream>\n#include<cassert>\n#define ll long long\n#define ld double\n#define inf 0x3f3f3f3f\n#define fr(i , a , b) for(ll i = a ; i <= b ; ++i)\n#define fo(i , a , b) for(ll i = a ; i >= b ; --i)\n#pragma comment(linker , \"/stack : 200000000\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\nusing namespace std;\ninline char gchar()\n{\n    static char buf[1000000] , *p1 = buf , *p2 = buf;\n    return p1 == p2 && (p2 = (p1 = buf) + fread(buf , 1 , 1000000 , stdin) , p1 == p2) ? EOF : *p1++;\n}\ninline ll read()\n{\n    ll x = 0 , f = 1;\n    char ch = getchar();\n    while(ch < '0' || ch > '9')\n\t  {\n        if(ch == '-')\n        {\n        \tf = -1;\n\t\t}\n        ch = getchar();\n    }\n    while(ch >= '0' && ch <= '9')\n\t  {\n        x = (x << 1) + (x << 3) + (ch ^ 48);\n        ch = getchar();\n    }\n    return x * f;\n}\nll t , n;\nstruct node\n{\n    ll r , c;\n}p1 , p2 , p3 , target;\nsigned main()\n{\n    t = read();\n    while(t--)\n    {\n        map<pair<ll , ll> , ll> cr;\n        n = read();\n        cr[{p1.c , p1.r}] = 0;\n        cr[{p2.c , p2.r}] = 0;\n        cr[{p3.c , p3.r}] = 0;\n        p1.r = read();\n        p1.c = read();\n        cr[{p1.c , p1.r}] = 1;\n        p2.r = read();\n        p2.c = read();\n        cr[{p2.c , p2.r}] = 1;\n        p3.r = read();\n        p3.c = read();\n        cr[{p3.c , p3.r}] = 1;\n        target.r = read();\n        target.c = read();\n        if(cr[{1 , 1}] && cr[{1 , 2}] && cr[{2 , 1}])//\u5de6\u4e0b\u89d2\u7279\u5224\n        {\n            if(target.c == 1 || target.r == 1)\n            {\n                printf(\"YES\\n\");\n                continue;\n            }\n            else\n            {\n                printf(\"NO\\n\");\n                continue;\n            }\n        }\n        else if(cr[{1 , n}] && cr[{1 , n - 1}] && cr[{2 , n}])//\u5de6\u4e0a\u89d2\n        {\n            if(target.c == 1 || target.r == n)\n            {\n                printf(\"YES\\n\");\n                continue;\n            }\n            else\n            {\n                printf(\"NO\\n\");\n                continue;\n            }\n        }\n        else if(cr[{n , 1}] && cr[{n - 1 , 1}] && cr[{n , 2}])//\u53f3\u4e0b\u89d2\n        {\n            if(target.c == n || target.r == 1)\n            {\n                printf(\"YES\\n\");\n                continue;\n            }\n            else\n            {\n                printf(\"NO\\n\");\n                continue;\n            }\n        }\n        else if(cr[{n , n}] && cr[{n - 1 , n}] && cr[{n , n - 1}])//\u53f3\u4e0a\u89d2\n        {\n            if(target.c == n || target.r == n)\n            {\n                printf(\"YES\\n\");\n                continue;\n            }\n            else\n            {\n                printf(\"NO\\n\");\n                continue;\n            }\n        }\n        else\n        {\n            ll mid_r = p1.r + p2.r + p3.r - 2 * max(p1.r , max(p2.r , p3.r));\n            ll mid_c = p1.c + p2.c + p3.c - 2 * max(p1.c , max(p2.c , p3.c));\n            if((mid_r + target.r) % 2 == 0 && (mid_c + target.c) % 2 == 0)\n            {\n                printf(\"NO\\n\");\n                continue;\n            }\n            else\n            {\n                printf(\"YES\\n\");\n                continue;\n            }\n        }\n    }\n    system(\"pause\");\n    return 0;\n}\n```",
        "postTime": 1683209441,
        "uid": 461407,
        "name": "\u6731\u91d1\u5e73",
        "ccfLevel": 0,
        "title": "CF1737C Ela and Crickets \u9898\u89e3"
    }
]