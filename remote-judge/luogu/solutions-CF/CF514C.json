[
    {
        "content": "\u6d89\u53ca\u6b64\u7c7b\u5b57\u7b26\u4e32\u5339\u914d\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528 trie\u3002  \n\u6b64\u9898\u63d2\u5165\u8f83\u4e3a\u5e38\u89c4\uff0c\u6545\u7565\u8fc7\u3002  \n\u91cd\u70b9\u5728\u67e5\u8be2\u3002  \n\u7531\u4e8e\u9898\u76ee\u8981\u6c42\u6070\u597d\u4e00\u4e2a\u5b57\u7b26\u4e0d\u540c\uff0c\u53c8\u56e0\u4e3a\u6240\u6709\u5b57\u7b26\u5747\u4e3a `a`\uff0c`b` \u548c `c` \u4e2d\u7684\u4e00\u79cd\uff0c\u79cd\u7c7b\u6570\u5c0f\u7684\u53ef\u601c\uff0c\u76f4\u63a5\u66b4\u529b dfs\u3002  \n\u8003\u8651\u6784\u9020 `dfs(id, rt, tag)` \uff0c\u8868\u793a\u73b0\u5728\u8003\u8651\u5b57\u7b26\u4e32\u7b2c $id$ \u4f4d\uff0c\u6b64\u65f6\u5728 trie \u4e2d\u8282\u70b9 $rt$ \u4e0a\uff0c\u4e14\u7b2c $1$ \u5230 $id-1$ \u4f4d\u4e2d\u662f\u5426\u5df2\u7ecf\u5b58\u5728\u4e00\u4f4d\u4e0d\u540c\u3002\u6309\u7167\u9898\u610f\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002  \n\u5177\u4f53\u7684\u770b\u4ee3\u7801\u5427\u3002\n\n***\n\n## code\n\n```cpp\n#include <bits/stdc++.h>\n#define fq(i,a,b) for (int i = (a); i <= (b); i++)\n#define fnq(i,a,b) for (int i = (a); i < (b); i++)\n#define nfq(i,a,b) for (int i = (a); i >= (b); i--)\n#define nfnq(i,a,b) for (int i = (a); i > (b); i--)\n#define fqs(i,a,b,c) for (int i = (a); i <= (b); i += (c))\n#define fnqs(i,a,b,c) for (int i = (a); i < (b); i += (c))\n#define nfqs(i,a,b,c) for (int i = (a); i >= (b); i -= (c))\n#define nfnqs(i,a,b,c) for (int i = (a); i > (b); i -= (c))\n#define elif else if\nusing namespace std;\n\n//#define int long long\n\n//#define GRAPH\n//const int EDGES = -1;\n//const int VERTEXES = -1;\n////# define EDGE_W\n////typedef int W_TYPE;\n\n//#define COMPLEX\n\ninline int rd () {\n\tint f = 1;\n\tchar ch = getchar ();\n\twhile (!isdigit (ch)) (ch == '-' ? (f = -1) : 0), ch = getchar ();\n\tint num = 0;\n\twhile (isdigit (ch)) num = num * 10 + ch - '0', ch = getchar ();\n\treturn num * f;\n}\n#define d rd ()\n\ninline int rd (const int modp) {\n\tint f = 1;\n\tchar ch = getchar ();\n\twhile (!isdigit (ch)) (ch == '-' ? (f = -1) : 0), ch = getchar ();\n\tint num = 0;\n\twhile (isdigit (ch)) num = (num * 10 + ch - '0') % modp, ch = getchar ();\n\treturn (num * f % modp + modp) % modp;\n}\n\n#ifdef GRAPH\nstruct Edge {\n\tint v, nxt;\n# ifdef EDGE_W\n\tW_TYPE w;\n# endif\n\tEdge () {}\n# ifdef EDGE_W\n\tEdge (int _v, W_TYPE _w, int _nxt) {v = _v, w = _w, nxt = _nxt;}\n# else\n\tEdge (int _v, int _nxt) {v = _v, nxt = _nxt;}\n# endif\n} edge[EDGES];\nint head[VERTEXES], ecnt;\n# ifdef EDGE_W\nvoid addedge (int u, int v, W_TYPE w) {edge[++ecnt] = Edge (v, w, head[u]); head[u] = ecnt;}\n#  define fe(u) for (int i = head[u], v, w; v = edge[i].v, w = edge[i].w, i; i = edge[i].nxt)\n# else\nvoid addedge (int u, int v) {edge[++ecnt] = Edge (v, head[u]); head[u] = ecnt;}\n#  define fe(u) for (int i = head[u], v; v = edge[i].v, i; i = edge[i].nxt)\n# endif\nvoid init () {memset (head, 0, sizeof head); ecnt = 0;}\n#endif\n\n#ifdef COMPLEX\nstruct cpx {\n\tdouble a, b;\n\tcpx () {a = 0, b = 0;}\n\tcpx (double _a) {a = _a, b = 0;}\n\tcpx (double _a, double _b) {a = _a, b = _b;}\n\tfriend cpx operator + (cpx a, cpx b) {return cpx (a.a + b.a, a.b + b.b);}\n\tfriend cpx operator - (cpx a, cpx b) {return cpx (a.a - b.a, a.b - b.b);}\n\tfriend cpx operator * (cpx a, cpx b) {return cpx (a.a * b.a - a.b * b.b, a.b * b.a + a.a * b.b);}\n\tfriend cpx operator / (cpx a, cpx b) {return cpx ((a.a * b.a + a.b * b.b) / (b.b * b.b + b.a * b.a), (a.b * b.a - a.a * b.b) / (b.b * b.b + b.a * b.a));}\n\tfriend cpx operator += (cpx &a, cpx b) {return a = a + b;}\n\tfriend cpx operator -= (cpx &a, cpx b) {return a = a - b;}\n\tfriend cpx operator *= (cpx &a, cpx b) {return a = a * b;}\n\tfriend cpx operator /= (cpx &a, cpx b) {return a = a / b;}\n};\n#endif\nconst int maxn = 1005000;\nint ch[maxn][3], tag[maxn], cnt;\nchar s[maxn];\nvoid insert () {\n\tint p = 0, l = strlen (s + 1);\n\tfq (i, 1, l) { int c = s[i];\n\t\tif (!ch[p][c - 'a']) ch[p][c - 'a'] = ++cnt;\n\t\tp = ch[p][c - 'a'];\n\t} tag[p] = 1;\n}\nint len;\nbool dfs (int i, int p, int tg) {\n\tif (i == len + 1) return !tg && tag[p];//\u67e5\u5230\u672b\u5c3e\uff0c\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u9898\u610f\uff0c\u8be5\u4f4d\u7f6e\u662f\u5426\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u7ed3\u5c3e\n\tint c = s[i] - 'a';\n\tif (ch[p][c] && dfs (i + 1, ch[p][c], tg)) return 1;//\u8be5\u4f4d\u4e0d\u6539\u53d8\n\tif (!tg) return 0;//\u4e4b\u524d\u53d8\u8fc7\u4e86\uff0c\u8fd9\u4e00\u4f4d\u53d8\u4e0d\u4e86\uff0c\u5931\u8d25\u8fd4\u56de0\n\tfq (j, 0, 2) if (c != j && ch[p][j] && dfs (i + 1, ch[p][j], 0)) return 1;//\u8fd9\u4e00\u4f4d\u6539\u53d8\uff0c\u6210\u529f\u5219\u8fd4\u56de1\n    return 0;//\u90fd\u4e0d\u6210\u529f\uff0c\u8fd4\u56de0\n}\nsigned main () {\n\tint n = d, m = d; while (n--) {scanf (\"%s\", s + 1); insert ();}\n\twhile (m--) {\n\t\tscanf (\"%s\", s + 1); len = strlen (s + 1);\n\t\tputs (dfs (1, 0, 1) ? \"YES\" : \"NO\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1658390960,
        "uid": 300313,
        "name": "_luanyi_",
        "ccfLevel": 6,
        "title": "CF514C"
    },
    {
        "content": "trie\u6811\u548cdfs\n\n\u5f88\u7b80\u5355\u5bf9\u5427\uff0c\u90fd\u662f\u5e38\u89c4\u64cd\u4f5c\n\n~~\u5f53\u65f6wa\u4e86\u5f88\u591a\u6b21~~\n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nchar s[600010];\nint trie[400001][26],val[400001],cnt = 0;\n\nvoid insert()//\u5efa\u6811\n{\n    int u = 0,v,len = strlen(s);\n    for (int i = 0; i < len; i++)\n    {\n        v = s[i] - 'a' +1;\n        if (!trie[u][v])\n        {\n        \ttrie[u][v] = ++cnt;\n        \tmemset(trie[cnt],0,sizeof(trie[cnt]));\n        }\n        u = trie[u][v];\n        if (i == len-1) val[u] = 1;\n    }\n}\n\nbool dfs(int r,int u,int num) \n{\n    if (s[r]) \n    {\n    \tint v = s[r] - 'a' + 1;\n    \tif (trie[u][v])\n        {\n            if (dfs(r+1,trie[u][v],num)) return true;\n        }\n        if (!num)\n        {\n            for(int i = 1; i <= 3; i++)\n            {\n                if (i != v && trie[u][i])\n                    if (dfs(r+1,trie[u][i],num+1)) return true;\n            }\n        }\n    }\n    else if (num && val[u]) return true;\n    return false;\n}\n\nint main()\n{\n    int n,m;\n    scanf(\"%d%d\",&n,&m);\n    memset(val,0,sizeof(val));\n    for (int i = 0; i < n; i++)\n    {\n        scanf(\"%s\",s);\n        insert();\n    }\n    for (int i = 0; i < m; i++)\n    {\n        scanf(\"%s\",s);\n        if (dfs(0,0,0)) printf(\"YES\\n\");\n        else printf(\"NO\\n\");\n    }\n    return 0;\n}\n```\n",
        "postTime": 1563507489,
        "uid": 68030,
        "name": "serverkiller",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF514C \u3010Watto and Mechanism\u3011"
    },
    {
        "content": "## $\\text{Start}$\n\u8fd9\u662f\u4e00\u9053\u975e\u5e38\u6a21\u677f\u7684\u5b57\u5178\u6811\u3002\n\n\u5982\u679c\u8fd8\u4e0d\u4f1a\u7684\u53ef\u4ee5\u70b9[\u8fd9\u91cc](https://oi-wiki.org/string/trie/)\u3002\n\n\u5b57\u5178\u6811\u5b66\u8d77\u6765\u5f88\u5feb\uff0c\u800c\u4e14\u5199\u8d77\u6765\u4ee3\u7801\u5f88\u7b80\u77ed\u3002\n\n\u8fd9\u9053\u7d2b\u9898\u6211\u7684 $\\text{AC}$ \u4ee3\u7801\u5c45\u7136\u4e0d\u5230 $\\text{1K}$\u3002  \n&nbsp;\n## \u601d\u8def\n\u5728\u5b57\u5178\u6811\u4e0a\u8fdb\u884c $\\tt dfs$\uff0c\u76f8\u5bf9\u4e8e\u679a\u4e3e\u54ea\u4e00\u4f4d\u4e0d\u540c\u3002\n\n\u4e0e\u522b\u7684\u5b57\u5178\u6811\u4e0d\u540c\uff0c\u89c2\u5bdf\u5230\u672c\u9898\u4e2d\u5b57\u7b26\u4e32\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26 $\\in\\{\\tt a,b,c\\}$\uff0c\u6240\u4ee5\u5355\u6b21\u8be2\u95ee\u7684\u590d\u6742\u5ea6\u5927\u7ea6\u5c06\u81f3 $\\mathcal{O}(3|S|n)$\uff0c$|S|$ \u4ee3\u8868\u9700\u8981\u67e5\u8be2\u7684\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff0c\u8fd9\u4f7f\u5b57\u5178\u6811\u5728\u672c\u9898\u53ef\u7528\u3002\n\n\u5177\u4f53\u5730\u8bf4\uff0c\u5f53\u5904\u7406\u5230\u5b57\u7b26\u4e32\u7684\u4efb\u610f\u4f4d\u7f6e\u65f6\u5206\u7c7b\u8ba8\u8bba\uff1a\n1. \u82e5\u6b64\u8282\u70b9\u5728 $\\tt Trie$ \u4e0a\u4e0d\u5b58\u5728\uff0c\u8fd4\u56de $\\tt False$\u3002\n\n1. \u5df2\u7ecf\u5904\u7406\u5230\u5b57\u7b26\u4e32\u672b\u5c3e\uff0c\u8fd4\u56de $\\tt Trie$ \u4e0a\u662f\u5426\u6709\u5b57\u7b26\u4e32\u4ee5\u6b64\u7ed3\u70b9\u4e3a\u7ed3\u5c3e\u5e76\u4e14\u8d70\u4e14\u4ec5\u8d70\u8fc7\u4e00\u4e2a\u4e0d\u540c\u7684\u70b9\u3002\n2. \u76f4\u63a5\u5411\u4e0b $\\tt dfs$\u3002\n\n2. \u6ca1\u6709\u5728 $\\tt Trie$ \u4e0a\u8d70\u8fc7\u4e0d\u540c\u7684\u70b9\uff0c\u90a3\u4e48\u8fd8\u53ef\u4ee5\u8d70\u4e0d\u540c\u7684\u70b9\u3002\n\n\u8fd9\u6837\u4ee5\u6765\uff0c`dfs(0, 0, 0)` \u5c31\u662f\u8be2\u95ee\u7684\u7b54\u6848\u3002  \n&nbsp;\n## \u4ee3\u7801\n```cpp\n#include <vector>\n#include <string>\n#include <iostream>\nusing namespace std;\nstring a; int n, m;\nstruct Trie { int s[3]; bool end; } b; vector<Trie> t;\ninline void insert()\n{\n    int p(0);\n    for (int i : a) \n    {\n        const char c(i - 'a');\n        if (!t[p].s[c])\n        {\n            t[p].s[c] = t.size();\n            t.emplace_back(b); // \u63d2\u5165\u7a7a\u8282\u70b9\n        }\n        p = t[p].s[c];\n    }\n    t[p].end = true; // \u6709\u4e00\u4e2a\u5b57\u7b26\u4e32\u5728 Trie \u4e0a\u7684 p \u7ed3\u70b9\u7ed3\u5c3e\n}\ninline bool dfs(int p, int l, bool d)\n// \u5728 Trie \u4e0a\u7684\u7ed3\u70b9\u7f16\u53f7\uff0c\u5904\u7406\u5230\u5b57\u7b26\u4e32\u7684\u7b2c\u51e0\u4e2a\u5b57\u7b26\uff08\u4e0b\u6807\u4ece 0 \u5f00\u59cb\uff09\uff0c\u662f\u5426\u8d70\u8fc7\u4e0d\u540c\u7684\u70b9\n{\n    if (l != a.size())\n    {\n        const char c(a[l] - 'a');\n        if (t[p].s[c]) if (dfs(t[p].s[c], l + 1, d)) return true; // \u76f4\u63a5\u5f80\u4e0b\u8d70\n        if (!d) for (int i(0); i < 3; ++i)\n            if (i != c && t[p].s[i])\n                if (dfs(t[p].s[i], l + 1, true)) return true;\n            // \u8d70\u4e00\u4e2a\u4e0d\u540c\u7684\u70b9\uff0c\u5e76\u5c06 d \u8d4b\u503c\u4e3a true\n        return false;\n    } \n    else return d && t[p].end; // \u8d70\u8fc7\u4e0d\u540c\u7684\u70b9\u5e76\u4e14\u6709\u4e00\u4e2a\u5b57\u7b26\u4e32\u5728 Trie \u4e0a\u6b64\u8282\u70b9\u7ed3\u5c3e\n}\nint main()\n{\n    cin >> n >> m;\n    b.s[0] = b.s[1] = b.s[2] = b.end = 0; t.emplace_back(b); // \u63d2\u5165\u7a7a\u8282\u70b9\n    while (n--) cin >> a, insert();\n    while (m--) cin >> a, puts(dfs(0, 0, 0) ? \"YES\" : \"NO\");\n    return 0;\n}\n```\n\n&nbsp;\n## $\\tt End$\n\n\u5982\u679c\u89c9\u5f97\u8fd9\u9898\u518d\u6211\u8bb2\u4e86\u4e4b\u540e\u5f88\u7b80\u5355\u7684\u8bdd\uff0c\u70b9\u4e2a\u8d5e\u518d\u8d70\u5457~",
        "postTime": 1658388241,
        "uid": 282929,
        "name": "\u67f3\u6613\u8fb0",
        "ccfLevel": 0,
        "title": "CF514C \u9898\u89e3"
    },
    {
        "content": "Trie \u6811 + BFS \u8dd1\u5230\u6700\u4f18\u89e3\u4e86\u2026\u2026\n\n------------\n\n\u8003\u8651\u5efa\u51fa Trie \u6811\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u6587\u672c\u4e32\u6700\u540e\u5728\u6811\u4e0a\u7ec8\u6b62\u7684\u8282\u70b9\u4f4d\u7f6e\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u6a21\u5f0f\u4e32\u5728\u6811\u4e0a BFS\uff0c\u6ce8\u610f\u4e0b\u4e00\u4e2a\u8282\u70b9\u52a0\u8fdb\u961f\u5217\u9700\u8981\u5206\u60c5\u51b5\u8ba8\u8bba\uff1a\n\n\u5982\u679c\u6b64\u524d\u8fd8\u6ca1\u6709\u4fee\u6539\u8fc7\uff0c\u90a3\u4e48\u6b64\u65f6\u53ef\u4ee5\u4fee\u6539\uff0c\u53bb\u5230\u4e00\u4e2a\u6811\u4e0a\u6709\u6807\u53f7\u4e14\u4e0d\u662f\u4e0b\u4e00\u4e2a\u5b57\u7b26\u7684\u8282\u70b9\uff1b\u6216\u8005\u4e0d\u4fee\u6539\uff0c\u4f46\u662f\u8981\u4fdd\u8bc1\u4e0b\u4e00\u4e2a\u5b57\u7b26\u53ef\u4ee5\u5728\u6811\u4e0a\u5339\u914d\u3002\n\n\u5982\u679c\u6b64\u524d\u4fee\u6539\u8fc7\uff0c\u90a3\u4e48\u4ec5\u5f53\u4e0b\u4e00\u4e2a\u5b57\u7b26\u53ef\u4ee5\u5728\u6811\u4e0a\u5339\u914d\u624d\u80fd\u52a0\u5165\u961f\u5217\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#define N 600005\nint ch[N][3];//Trie \u6811\nbool vis[N];//u \u8fd9\u4e2a\u8282\u70b9\u662f\u5426\u4e3a\u67d0\u4e2a\u6587\u672c\u4e32\u7ed3\u5c3e\nstruct node{int u,dep,usd;}que[N*3];\nbool bfs(char *str){\n\tint hd = 1,tl = 0,len = strlen(str);\n\tque[++tl] = (node){0,0,0};\n\twhile(hd <= tl){\n\t\tnode np = que[hd++];\n\t\tint u = np.u,dep = np.dep,usd = np.usd;\n\t\tif(dep == len){\n\t\t\tif(usd && vis[u]) return true;\n\t\t\telse continue;\n\t\t}\n\t\tint typ = str[dep]-'a';\n\t\tif(usd == 0){\n\t\t\tif(ch[u][typ]) que[++tl] = (node){ch[u][typ],dep+1,0};\n\t\t\tfor(int i = 0;i<=2;++i){\n\t\t\t\tif(typ == i || ch[u][i] == 0) continue;\n\t\t\t\tque[++tl] = (node){ch[u][i],dep+1,1};\n\t\t\t}\t\n\t\t}else if(ch[u][typ]){\n\t\t\tque[++tl] = (node){ch[u][typ],dep+1,1};\n\t\t}\n\t}\n\treturn false;\n}\n```",
        "postTime": 1629982691,
        "uid": 114173,
        "name": "Computer1828",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF514C"
    },
    {
        "content": "\u5355\u6a21\u54c8\u5e0c\u5c31\u53ef\u4ee5\u4e86\n\n\u8fd9\u79cd\u4e1c\u897f\u53ea\u8981\u4e0d\u88ab\u9762\u5411\u6a21\u6570hack\uff0c\u968f\u4fbf\u53d6\u4e00\u4e2a11-12\u4f4d\u5927\u8d28\u6570\u5e94\u8be5\u5c31\u80fd\u8fc7\n\n\u5177\u4f53\u505a\u6cd5\u5c31\u662f\u628a\u5b57\u5178\u4e32\u90fd\u5148hash\u6389\u6254\u5230set\u91cc  \n\u7136\u540e\u5bf9\u4e8e\u8f93\u5165\u4e32\uff0c\u6bcf\u4e2a\u4e32\u628a\u6bcf\u4e00\u4f4d\u5206\u522b\u6362\u6210\u53e6\u5916\u4e24\u4e2a\u5b57\u6bcd\uff0c\u8ba1\u7b97\u65b0\u4e32\u7684hash\u503c\u5e76\u4e14\u5728set\u91cc\u627e\u662f\u5426\u63d2\u5165\u8fc7\u8fd9\u4e2a\u503c\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u5bf9\u4e8e\u6bcf\u4e2a\u5b57\u6bcd\u4f4d\u590d\u6742\u5ea6\u662fO(logn)\u7684\u3002\n\n\u5927\u8d28\u6570\u5c31\u53d623333333377\u4e4b\u7c7b\u7684\u610f\u601d\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define mod 23333333377ll\nusing namespace std;\n\nset<long long> ht;\nint n,m;\n\nstring tmp;\n\nlong long get_hash(string x)\n{\n\tint len=x.length();\n\tlong long hash_val=0;\n\tfor(int i=0;i<len;i++)\n\t{\n\t\thash_val=(hash_val*4+1ll*(x[i]-'a'))%mod;\n\t}\n\treturn hash_val;\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>tmp;\n\t\tht.insert(get_hash(tmp));\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint flag=0;\n\t\tcin>>tmp;\n\t\tlong long h=get_hash(tmp);\n\t\tint len=tmp.size();\n\t\tlong long base=1;\n\t\tfor(int j=len-1;j>=0;j--)\n\t\t{\n\t\t\tif(flag) break;\n\t\t\tfor(int k=0;k<3;k++)\n\t\t\t{\n\t\t\t\tif(tmp[j]-'a'==k) continue;\n\t\t\t\tlong long res=(h-(tmp[j]-'a')*base%mod+k*base%mod+mod)%mod;\n\t\t\t\tif(ht.count(res))\n\t\t\t\t{\n\t\t\t\t\tflag=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbase=base*4%mod;\n\t\t}\n\t\tif(flag) puts(\"YES\");\n\t\telse puts(\"NO\");\n\t}\n}\n```\n\n\n",
        "postTime": 1541115817,
        "uid": 48740,
        "name": "Styx",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF514C \u3010Watto and Mechanism\u3011"
    },
    {
        "content": "\u8003\u8651\u5b57\u5178\u6811\u4e0a\u6df1\u641c\u3002\n\n\u7531\u4e8e\u5b57\u7b26\u96c6\u53ea\u6709 $\\texttt{abc}$\uff0c\u6240\u4ee5\u6df1\u641c\u662f\u53ef\u8fc7\u7684\u3002\n\n\u5efa\u7acb\u5b8c\u5b57\u5178\u6811\u540e\uff0c\u4ece\u6839\u5f00\u59cb\uff0c\u7ef4\u62a4\u73b0\u5728\u662f\u5426\u6709\u5b58\u5728\u4e00\u4e2a\u4e0d\u540c\u7684\u5b57\u7b26\uff0c\u5982\u679c\u6709\uff0c\u90a3\u4e48\u4e0b\u4e00\u4e2a\u5b57\u7b26\u80af\u5b9a\u548c\u8be2\u95ee\u7684\u4e32\u76f8\u540c\uff0c\u5982\u679c\u6ca1\u6709\u4e0d\u540c\uff0c\u90a3\u4e48\u4e0b\u4e00\u4e2a\u53ef\u4ee5\u9009\u62e9\u76f8\u540c\u4e5f\u53ef\u4ee5\u9009\u62e9\u4e0d\u540c\u7684\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <string>\n#include <queue>\nusing namespace std;\n\nconst int N = 1e6 + 5;\n\nstring s, p;\nint n, m;\n\nclass Trie\n{\npublic:\n\tint son[N][4], idx, rt;\n\tvoid insert(string x)\n\t{\n\t\tint u = rt;\n\t\tfor (auto c : x)\n\t\t{\n\t\t\tint p = c - 'a';\n\t\t\tif (!son[u][p]) son[u][p] = ++idx;\n\t\t\tu = son[u][p];\n\t\t}\n\t}\n\tbool dfs(int x, int u, bool g)\n\t{\n\t\tif (!u && x != 0) return 0;\n\t\tif (x == p.size() && g) return 1;\n\t\tif (g)\n\t\t{\n\t\t\treturn dfs(x + 1, son[u][p[x] - 'a'], g);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (int j = 0; j <= 2; j++)\n\t\t\t{\n\t\t\t\tif (p[x] - 'a' == j)\n\t\t\t\t{\n\t\t\t\t\tif (dfs(x + 1, son[u][j], 0)) return 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (dfs(x + 1, son[u][j], 1)) return 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t}\n}t;\n\nint main()\n{\n\tios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);\n\tcin >> n >> m;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tcin >> s;\n\t\tt.insert(s);\n\t}\n\twhile (m--)\n\t{\n\t\tcin >> p;\n\t\tcout << (t.dfs(0, t.rt, 0) ? \"YES\" : \"NO\") << \"\\n\";\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1671504518,
        "uid": 332914,
        "name": "happybob",
        "ccfLevel": 6,
        "title": "Watto and Mechanism"
    },
    {
        "content": "**\u601d\u8def\uff1a**\n\n- **hash** \uff1a \u8bfb\u5165\u65f6\u5c06\u6240\u6709\u6ee1\u8db3\u9898\u610f\u7684\u5b57\u7b26\u4e32$hash$\u653e\u5165$set$\n\n@ZJQ90202 \u5de8\u4f6c\u5df2\u7ecf\u8bf4\u5f97\u5f88\u6e05\u695a\u4e86\uff0c\u6b64\u9898\u53ef\u4ee5\u7528$Trie$\u3002\u5c31\u8ba9\u6211\u6765\u53d1\u4e00\u4e2a$hash$\u7684\u9898\u89e3\u5427\u3002\n\n$CF$\u7684$hack$\u673a\u5236\u633a\u6709\u7528~~\u6709\u6bd2~~\u7684\uff0c**\u53ef\u4ee5\u9762\u5411\u5bf9\u65b9$hash$\u51fd\u6570$hack$**\n\n\u53ef\u4ee5\u770b\u770b\u8bc4\u6d4b\u8bb0\u5f55\uff0c\u4e94\u6b21\u63d0\u4ea4\uff0c\u5c1d\u8bd5\u4e86\u56db\u79cd\u65b9\u6cd5\n\n**\u4e00\u3001** $hash + unsigned$ $long$ $long$ \u81ea\u7136\u6ea2\u51fa\n\n- $WA$ $on$ $test$ $26$\n\n> ~~\u5f53\u65f6\u4ee5\u4e3a\u80fd\u8fc7~~\n\n**\u4e8c\u3001** \u53cc$hash + unsigned$ $long$ $long + unsigned$ $int$ \u81ea\u7136\u6ea2\u51fa\n\n- $WA$ $on$ $test$ $27$\n\n>  \u60b2\u5267\uff0c\u5c31\u53ea\u591a\u8fc7\u4e86\u4e00\u4e2a\u6d4b\u8bd5\u70b9\n\n**\u4e09\u3001** $hash + 10^9+7$ \u5927\u8d28\u6570\u53d6\u6a21\n\n- $WA$ $on$ $test$ $16$\n\n> \u6ca1\u6709\u6599\u5230$emm$\uff0c\u6b64\u9898\u6570\u636e\u771f\u7684\u6bd2\u7624\n\n**\u56db\u3001** $hash + 10^9+7$ $+ 10^9+9$ \u5b6a\u751f\u8d28\u6570\u3001\u5927\u8d28\u6570\u53d6\u6a21\n\n- $AC$\n\n> ~~\u7ec8\u4e8e\u8fc7\u4e86emm~~\n\n~~AC\u82e6\u65c5~~\n\n\u6211\u8fd9\u53ea\u5c0f\u849f\u84bb\u5df2\u7ecf\u5352\u4e86\n\n**\u4ee3\u7801**\n\n- \u53cc$hash + unsigned$ $long$ $long + unsigned$ $int$ \u81ea\u7136\u6ea2\u51fa\n\n``` cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef unsigned long long ull;\ntypedef unsigned int ui;\ntypedef pair <ui, ull> puu;\nconst int maxn = 6e5 + 10;\nint n, m;\nui pow1[maxn];\null pow2[maxn];\nchar str[maxn];\n\nset <puu> s;\n\nui hash1(char* str) {\n\tui res = 0;\n\tfor (int i = 0; i < strlen(str); i++) {\n\t\tres = (res << 1) + res + (str[i] - 'a');\n\t}\n\treturn res;\n}\n\null hash2(char* str) {\n\tull res = 0;\n\tfor (int i = 0; i < strlen(str); i++) {\n\t\tres = (res << 1) + res + (str[i] - 'a');\n\t}\n\treturn res;\n}\n\nint main() {\n\tpow1[0] = pow2[0] = 1;\n\tfor (int i = 1; i <= 6e5; i++) {\n\t\tpow1[i] = (pow1[i - 1] << 1) + pow1[i - 1];\n\t\tpow2[i] = (pow2[i - 1] << 1) + pow2[i - 1];\n\t}\n\tscanf(\"%d %d\", &n, &m);\n\tgets(str);\n\tfor (int i = 1; i <= n; i++) {\n\t\tgets(str);\n\t\tui t1 = hash1(str);\n\t\tull t2 = hash2(str);\n\t\tint len = strlen(str);\n\t\tfor (int j = 0; j < len; j++) {\n\t\t\tfor (int k = 0; k < 3; k++) {\n\t\t\t\tif (k != str[j] - 'a') {\n\t\t\t\t\ts.insert(make_pair(t1 - (pow1[len - j - 1] * (str[j] - 'a')) + (pow1[len - j - 1] * k), t2 - (pow2[len - j - 1] * (str[j] - 'a')) + (pow2[len - j - 1] * k)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor (; m--; ) {\n\t\tgets(str);\n\t\tputs(s.count(make_pair(hash1(str), hash2(str))) ? \"YES\" : \"NO\");\n\t}\n\treturn 0;\n}\n```\n\n- $hash + 10^9+7$ $+ 10^9+9$ \u5b6a\u751f\u8d28\u6570\u3001\u5927\u8d28\u6570\u53d6\u6a21\n\n``` cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair <ll, ll> pll;\nconst ll mod1 = 1e9 + 7;\nconst ll mod2 = 1e9 + 9;\nconst int maxn = 6e5 + 10;\nint n, m;\nchar str[maxn];\nll pow1[maxn], pow2[maxn];\n\nset <pll> s;\n\nll hash1(char* str) {\n\tll res = 0;\n\tfor (int i = 0; i < strlen(str); i++) {\n\t\tres = ((res << 1) + res + str[i] - 'a') % mod1;\n\t}\n\treturn res;\n}\n\nll hash2(char* str) {\n\tll res = 0;\n\tfor (int i = 0; i < strlen(str); i++) {\n\t\tres = ((res << 1) + res + str[i] - 'a') % mod2;\n\t}\n\treturn res;\n}\n\nint main() {\n\tpow1[0] = pow2[0] = 1;\n\tfor (int i = 1; i <= 6e5; i++) {\n\t\tpow1[i] = ((pow1[i - 1] << 1) + pow1[i - 1]) % mod1;\n\t\tpow2[i] = ((pow2[i - 1] << 1) + pow2[i - 1]) % mod2;\n\t}\n\tscanf(\"%d %d\", &n, &m);\n\tgets(str);\n\tfor (int i = 1; i <= n; i++) {\n\t\tgets(str);\n\t\tint len = strlen(str);\n\t\tll t1 = hash1(str), t2 = hash2(str);\n\t\tfor (int j = 0; j < len; j++) {\n\t\t\tfor (int k = 'a'; k <= 'c'; k++) {\n\t\t\t\tif (k != str[j]) {\n\t\t\t\t\ts.insert(make_pair((t1 + (pow1[len - j - 1] * (k - str[j])) + (mod1 << 1) + mod1) % mod1, (t2 + (pow2[len - j - 1] * (k - str[j])) + (mod2 << 1) + mod2) % mod2));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor (; m--; ) {\n\t\tgets(str);\n\t\tputs(s.count(make_pair(hash1(str), hash2(str))) ? \"YES\" : \"NO\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1531967666,
        "uid": 73934,
        "name": "Juanzhang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF514C \u3010Watto and Mechanism\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u86ee\u7b80\u5355\u7684\uff0c\u4e3a\u4ec0\u4e48\u662f\u7d2b\u9898\u5462\uff1f\n\n## \u9898\u610f\u7b80\u8ff0\n\u7ed9\u5b9a $n$ \u4e2a\u6587\u672c\u4e32\u548c $m$ \u4e2a\u6a21\u5f0f\u4e32\uff0c\u95ee\u5bf9\u4e8e\u6bcf\u4e2a\u6a21\u5f0f\u4e32\uff0c\u662f\u5426\u5b58\u5728\u4e0e\u5176**\u521a\u597d\u6709\u4e00\u4e2a**\u5b57\u7b26\u4e0d\u76f8\u540c\u7684\u6587\u672c\u4e32\u3002\n\n## Solution\n\u672c\u9898\u505a\u6cd5\u9887\u591a\uff0c~~\u6709\u8dd1\u4e86 10.02s \u7684\u54c8\u5e0c~~\uff0c\u4e5f\u6709\u8dd1\u4e86 732ms \u7684\u795e\u5947\u505a\u6cd5\uff08\u4e25\u91cd\u6000\u7591\u8fd9\u4f4d\u4ec1\u5144\u7528\u7684 SAM\uff0c\u5feb\u5230\u79bb\u8c31\uff09\u3002\n\n\u6ce8\u610f\u5230\u5b57\u7b26\u4e32\u53ea\u5305\u542b $a,b,c$\uff0c\u4e14\u8303\u56f4\u4e0d\u592a\u5927\uff0c\u6240\u4ee5\u8003\u8651 Trie \u6811 + bfs\u3002\n\n\u9996\u5148\u5bf9\u4e8e\u6587\u672c\u4e32\u5efa\u51fa Trie \u6811\uff0c\u8fd9\u4e2a\u975e\u5e38[\u6a21\u677f](https://www.luogu.com.cn/problem/P8306)\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002\n\n\u7136\u540e\u5f00\u961f\u5217\u5b58\u4e0b\u5f53\u524d\u5b57\u7b26\u5bf9\u5e94 Trie \u7684\u8282\u70b9\u3001\u539f\u4e32\u4e0b\u6807\u548c\u662f\u5426\u5df2\u7ecf\u8d70\u8fc7\u4e0d\u76f8\u540c\u7684\u5b57\u7b26\u3002\n\n\u8003\u8651\u5f53\u524d\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u72b6\u6001\uff1a\n- \u5982\u679c\u8fd8\u6ca1\u6709\u7ecf\u8fc7\u4efb\u4f55\u4e00\u4e2a\u4e0d\u76f8\u540c\u7684\u5b57\u7b26\uff0c\u5219\u8be5\u8282\u70b9\u6240\u6709\u51fa\u8fb9\u90fd\u53ef\u4ee5\u8d70\u3002\u6ce8\u610f\u5982\u679c\u8d70\u5230\u4e0d\u4e00\u6837\u7684\u5b57\u7b26\uff0c``push`` \u65b0\u5143\u7d20\u7684\u65f6\u5019\u8981\u628a\u6807\u8bb0\u53d8\u4e3a $1$\u3002\n- \u5982\u679c\u5df2\u7ecf\u7ecf\u8fc7\u4e86\u4e0d\u76f8\u540c\u7684\u5b57\u7b26\uff0c\u53ea\u80fd\u987a\u7740\u8ddf\u5f53\u524d\u5b57\u7b26\u4e00\u6837\u7684\u90a3\u6761\u8fb9\u8d70\uff0c\u6807\u8bb0\u4ecd\u7136\u4e3a $1$\u3002\n\n\u5269\u4e0b\u8fb9\u754c\u548c\u679a\u4e3e\u7b49\uff0c\u81ea\u5df1\u770b\u4ee3\u7801\u5427\uff0c\u6709\u6ce8\u91ca\u7684\u3002\n\n## \u4ee3\u7801\n\u4e3a\u4e86\u62fc\u6700\u4f18\u89e3\uff0c\u6211\u7528\u4e86\u624b\u5199\u961f\u5217\u3002\n\n[AC \u7684\u53ef\u4ee5\u770b\u770b\u6211\u7684 STL \u7248\uff08\u6ca1\u5f00 O2 \u5c31\u662f\u6162\uff09](https://www.luogu.com.cn/record/83161494)\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int M = 6e5 + 10;\nint n, m, len;\nint tot, cnt[M], isend[M], son[M][5];\nchar s[M];\nstruct zm{int u, p, tag;} q[M];\n\nvoid insert(char *s){\n\tint u = 0, k = strlen(s + 1); \n\tfor(int i=1;i<=k;i++){\n\t\tint x = s[i] - 'a';\n\t\tif(!son[u][x])\tson[u][x] = ++tot;\n\t\tu = son[u][x];\n\t}\n\tisend[u] = 1;\n}//\u57fa\u7840\u7684\u63d2\u5165\n\nbool query(char *s){\n\tint l = 1, r = 0;\n\tq[++r] = (zm){0, 1, 0};//\u63d2\u5165\u521d\u59cb\u8282\u70b9\n\twhile(l <= r){\n\t\tzm u = q[l++];\n\t\tif(u.p == len + 1){//\u8fd9\u4e0e dfs \u7684\u8fb9\u754c\u4e00\u6837\u7684\uff0c\u6574\u4e2a\u5b57\u7b26\u4e32\u90fd\u904d\u5386\u5b8c\u4e86\n\t\t\tif(u.tag && isend[u.u])\treturn 1;//\u4e0d\u52a0isend\u7684\u5224\u65ad\u5c45\u7136\u4e5f\u80fd\u8fc7\uff0c\u4f46\u662f\u4e0d\u8981\u7701\n\t\t\tcontinue;\n\t\t}\n\t\tint x = s[u.p] - 'a';\n\t\tif(!u.tag){//\u5982\u679c\u6ca1\u6709\u7ecf\u8fc7\u4e0d\u76f8\u540c\u7684\u5b57\u7b26\uff0c\u6240\u6709\u51fa\u8fb9\u90fd\u679a\u4e3e\u4e00\u4e0b\n\t\t\tfor(int i=0;i<3;i++){\n\t\t\t\tif(!son[u.u][i])\tcontinue;\n\t\t\t\tq[++r] = (zm){son[u.u][i], u.p + 1, (i != x)};//\u6ce8\u610ftag\u7684\u7ec6\u8282\n\t\t\t}\n\t\t}else if(son[u.u][x])\tq[++r] = (zm){son[u.u][x], u.p + 1, 1};\n        //\u5df2\u7ecf\u8d70\u8fc7\u4e86\uff0c\u8fd8\u8981\u5224\u65ad\u5f53\u524d\u7684u\u6709\u6ca1\u6709\u8fd9\u4e2a\u513f\u5b50\uff01\n\t}\n\treturn 0;\n}\n\nint main(){\n\tscanf(\"%d%d\", &n, &m);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%s\", s + 1);\n\t\tinsert(s);\n\t}\n\twhile(m--){\n\t\tscanf(\"%s\", s + 1);\n\t\tlen = strlen(s + 1);\n\t\tprintf(query(s) ? \"YES\\n\" : \"NO\\n\");\n\t}\n\treturn 0;\n}\n```\n\n\u5f00 O2 \u4e4b\u540e\u7684\u6d4b\u8bc4\u8bb0\u5f55\uff1a[link](https://www.luogu.com.cn/record/83164816)\uff0c\u4e5f\u662f\u6210\u529f\u8dd1\u5230\u6700\u4f18\u89e3\u7b2c\u4e00\u9875\u524d\u90e8\u3002\n\n",
        "postTime": 1660097866,
        "uid": 363036,
        "name": "chlchl",
        "ccfLevel": 5,
        "title": "CF514C Watto and Mechanism \u9898\u89e3"
    },
    {
        "content": "## \u9996\u5148\u5148\u4ecb\u7ecd\u4e00\u4e0b\u9898\u610f\uff08\u7ba1\u7ba1\u53ef\u89c6\u4e3a\u7ffb\u8bd1\uff09\uff1a\n\n\u7ed9\u51fan\u4e2a\u5b57\u7b26\u4e32\uff08\u5efa\u7acbtrie\u6811\uff09,\u7136\u540e\u518d\u7ed9\u51fam\u4e2a\u5b57\u7b26\u4e32,\n\u8ba9\u4f60\u5224\u65ad\u5728\u539f\u7ed9\u5b9a\u7684n\u4e2a\u5b57\u7b26\u4e32\u4e2d\u662f\u5426\u51fa\u73b0\u8fc7\u51fa\u73b0\u8fc7\u4e0e\u8fd9m\u4e2a\u5b57\u7b26\u4e32\u4e92\u5f02\u7684\u5b57\u7b26\u6570\u6070\u597d\u4e3a1\u7684\u5b57\u7b26\u4e32\n###### \uff08\u5373\u5b57\u7b26\u4e32\u957f\u5ea6\u76f8\u540c,\u5e76\u4e14 \u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u5b57\u7b26\u4e0d\u540c,\u4e0d\u8fc7\u539f\u9898\u4e2d\u7684\u610f\u601d\u597d\u50cf\u662f\u5b57\u7b26\u4e32\u5dee\u5f02\u4e3a1\u554a,\u6ca1\u8bf4\u5b8c\u5168\u76f8\u540c\u7684\u5b57\u7b26\u4e32\u4e0d\u7b97\u6ee1\u8db3\u8981\u6c42,\u4f46\u662f\u4e8b\u5b9e\u4e0a\u7ed9\u51fa\u7684\u6570\u636e\u5c31\u662f\u4e25\u683c\u8981\u6c42\u5b57\u7b26\u4e32\u4e4b\u95f4\u6709\u4e00\u4e2a\u5b57\u7b26\u4e0d\u540c\u7684= =|||\uff09,\n\u5982\u679c\u6709\u5219\u8f93\u51faYES,\u6ca1\u6709\u5219\u8f93\u51faNO,\u4f9d\u6b21\u8f93\u51fa\u7b54\u6848\u3002\n\u7136\u540e\u5b57\u7b26\u4e32\u603b\u6570\u4e0d\u8d85\u8fc76e5,\u5b57\u7b26\u603b\u6570\u4e5f\u4e0d\u8d85\u8fc76e5\uff08\u5e94\u8be5\u5427...\uff09\n\n\n\u9898\u76ee\u5206\u6790\uff1atrie\u6811+\u6df1\u641c\uff08\u53ef\u4ee5\u7b97\u662f\u6c34\u9898\u4f46\u662f\u4e5f\u4e0d\u7b97\u592a\u592a\u592a\u6c34\uff09\n```\n\u89e3\u9898\u6b65\u9aa4\uff1a\n1.\u5efatrie\u6811,\u5bf9\u4e8e\u6bcf\u4e2a\u5b57\u7b26\u4e32\u7ed3\u5c3e\u7684\u8282\u70b9\u6807\u8bb0true\n\uff08\u4f46\u662f\u8fd9\u91cc\u6709\u4e00\u4e2a\u591a\u51fa\u6765\u7684\u64cd\u4f5c,\u7528\u4e8e\u6df1\u641c\u65f6\u7684\u526a\u679d,\u4e0d\u8fc7\u6548\u7387\u6709\u6ca1\u6709\u63d0\u9ad8\u6211\u4e5f\u6ca1\u6d4b,\u6709\u5174\u8da3\u7684\u7ae5\u978b\u53ef\u4ee5\u6d4b\u4e00\u4e0b\uff09\n2.\u4f9d\u6b21\u8bfb\u5165m\u4e2a\u5b57\u7b26\u4e32\u5e76\u5728trie\u6811\u4e2d\u6df1\u641c\u67e5\u627e\u662f\u5426\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u5b57\u7b26\u4e32\n3.\u8f93\u51fa\u7b54\u6848return 0\n```\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#define ll long long\nusing namespace std;\nconst int M=7e5+100;\nconst int inf=1e9;\nint n,m,len,cnt,now;\nint to[M][3],lt[M];\nbool is[M],flag;\nstring s;\nbool dfs(int at,int now) {\n\tif(at==len){ //\u641c\u7d22\u5230\u5c3e\u4e86\n\t\tif(is[now] && !flag) //\u5f53\u524d\u8282\u70b9\u6709\u6807\u8bb0\u4e14flag\u5df2\u88ab\u6807\u8bb0\u4e3a0\n\t\t\treturn true;\n\t\treturn false; //\u4efb\u4e00\u6761\u4ef6\u4e0d\u6ee1\u8db3\u90fd\u8fd4\u56defalse\n\t}\n\tint tmp=s[at]-'a';\n\tif(lt[now]<len) //\u526a\u679d\u64cd\u4f5c,\u540c\u4e0a,\u6548\u7387\u6709\u6ca1\u6709\u63d0\u9ad8\u662f\u4e0d\u6e05\u695a\u7684\u4e0d\u8fc7\u80fd\u8fc7\n\t\treturn false;\n\tfor(int i=0; i<3; ++i)\n\tif(to[now][i]){\n\t\tif(i==tmp){ //\u4e0e\u5f53\u524d\u7684\u5b57\u7b26\u76f8\u540c\n\t\t\tif(dfs(at+1,to[now][i]))\n\t\t\t\treturn true;\n\t\t}\n\t\telse if(flag){ //\u4e0e\u5f53\u524d\u7684\u5b57\u7b26\u4e0d\u540c\n\t\t\tflag=0;\n\t\t\tif(dfs(at+1,to[now][i]))\n\t\t\t\treturn true;\n\t\t\tflag=1;\n\t\t}\n\t}\n\treturn false;\n}\nint main() {\n\tios::sync_with_stdio(false);\n\tcin>>n>>m;\n\tfor(int i=1; i<=n; ++i) { //\u8bfb\u5165n\u4e2a\u5b57\u7b26\u4e32\u5e76\u5efatrie\u6811\n\t\tcin>>s, len=s.length();\n\t\tlt[0]=max(lt[0],len), //\u8fd9\u91cc\u5c31\u662f\u526a\u679d,lt\u6570\u7ec4\u8bb0\u5f55\u5f53\u524d\u8282\u70b9\u4ee5\u4e0b\u7684\u6700\u957f\u5b57\u7b26\u4e32\u957f\u5ea6,\u6df1\u641c\u65f6\u82e5\u641c\u5230\u4e86\u957f\u5ea6\u5c0f\u4e8e\u5f53\u524d\u5b57\u7b26\u4e32\u7684\u679d\u6761\u5219\u526a\u679d\n        now=0;\n\t\tfor(int j=0; j<len; ++j) {\n\t\t\tint tmp=s[j]-'a';\n\t\t\tif(!to[now][tmp])\n\t\t\t\tto[now][tmp]=++cnt;\n\t\t\tnow=to[now][tmp];\n\t\t\tlt[now]=max(lt[now],len);\n\t\t}\n\t\tis[now]=1;\n\t}\n\twhile(m--) { //\u6df1\u641c\u67e5\u8be2m\u4e2a\u5b57\u7b26\u4e32\n\t\tcin>>s, len=s.length(), flag=1;\n\t\tif(dfs(0,0)) cout<<\"YES\"<<endl;\n\t\telse cout<<\"NO\"<<endl;\n\t}\n\treturn 0;\n}\n```\n\n\n\n\n\u7136\u540e\u7b2c\u4e8c\u79cd\u7b97\u6cd5\u662fHash\uff08\u60f3\u770b\u7684\u7ae5\u978b\u53ef\u4ee5\u770b\u4e00\u770b,\u5f88\u77ed\u7684\uff09\n```\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <set>\n#define ll unsigned long long\n#define P make_pair\nusing namespace std;\nconst int M=6e5+100;\nconst ll mod=99991;\nint n,m; string s;\nset< pair<int,ll> > st; ll f[M]={1,1};  //make_pair\u4e86\u4e4b\u540e\u8c8c\u4f3c\u662f\u5feb\u4e86\u4e00\u70b9\nll Hash() {\n\tint len=s.length();\n\tll tmp=0;\n\tfor(int i=0; i<len; ++i)\n\t\ttmp=tmp*mod+s[i];\n\treturn tmp;\n}\nbool check() {\n\tint len=s.length();\n\tll h=Hash();\n\tfor(int i=0; i<len; ++i) for(char c='a'; c<='c'; ++c)\n\t\tif(c!=s[i] && st.find(P(len,h-s[i]*f[len-i]+c*f[len-i]))!=st.end())\n\t\t\treturn true;\n\treturn false;\n}\nint main() {\n\tios::sync_with_stdio(false);\n\tfor(int i=2; i<M; ++i)\n\tf[i]=f[i-1]*mod;\n\tcin>>n>>m;\n\tfor(int i=1; i<=n; ++i)\n\t\tcin>>s, st.insert(P(s.length(),Hash()));\n\twhile(m--) {\n\t\tcin>>s;\n\t\tif(check()) cout<<\"YES\"<<endl;\n\t\telse cout<<\"NO\"<<endl;\n\t}\n\treturn 0;\n}\n```\n\n\u4f46\u662f\u8fd9\u4e2a\u4ee3\u7801WA\u5728\u4e86\u7b2c27\u4e2a\u70b9\u4e0a,\u8868\u793a\u5f88\u96be\u53d7,\u6539\u4e86\u5f88\u4e45,\u4e00\u76f4\u4ee5\u4e3a\u662fmod\u7684\u503c\u7684\u95ee\u9898,\u60f3\u60f3\u6570\u636e\u53ef\u80fd\u7cbe\u5fc3\u6784\u9020\u8fc7,\u4f46\u662f\u522b\u4eba\u7684Hash\u5c31\u8fc7\u4e86\uff1a\n\n\n```\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n#include <set>\nusing namespace std;\ntypedef long long ll;\nconst int MAX = 1e6 + 10;\nconst int INF = 0x3f3f3f3f;\nconst int MOD = 1e9 + 7;\nconst int KEY = 257;//ORZ\nint n, m;\nll f[MAX];\nset <ll> s;\nchar s1[MAX];\nchar s2[MAX];\nvoid inti() {\n    f[0] = 1;\n    for(int i = 1; i <= MAX; i++){\n        f[i] = f[i-1] * KEY % MOD;\n    }\n}\nll Hash(char *s1) {\n    int len = strlen(s1);\n    ll tmp = 0;\n    for(int i = 0 ; i < len; i++){\n        tmp = (tmp * KEY + s1[i]) % MOD;\n    }\n    return tmp;\n}\nbool check(char *s2) {\n    int len = strlen(s2);\n    ll h = Hash(s2);\n    for(int i = 0 ; i < len; i++){\n        for(ll ch = 'a'; ch <= 'c'; ch++){\n            if(ch == s2[i]) continue;\n            if(s.find((((ch - s2[i]) * f[len - i - 1] + h)%MOD + MOD)%MOD) != s.end())\n                return true;\n        }\n    }\n    return false;\n}\nint main() {\n    inti();\n    while(~scanf(\"%d%d\", &n, &m)){\n        for(int i = 1; i <= n; i++)\n            scanf(\"%s\", s1),\n            s.insert(Hash(s1));\n        for(int i = 1; i <= m; i++)\n            scanf(\"%s\", s2),\n            puts(check(s2) ? \"YES\" : \"NO\");\n    }\n    return 0;\n}\n```\n\n\u5f88\u5947\u602a...\n\u5982\u679c\u6709\u7ae5\u978b\u770b\u51fa\u6765\u4ec0\u4e48\u4e86\u53ef\u4ee5\u8bc4\u8bba\u4e00\u4e0b,\u6211\u4e5f\u662f\u6709\u70b9\u65e0\u80fd\u4e3a\u4e86\u4e86",
        "postTime": 1530017045,
        "uid": 38576,
        "name": "J\u03bcdge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF514C \u3010Watto and Mechanism\u3011"
    }
]