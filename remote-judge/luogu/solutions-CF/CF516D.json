[
    {
        "content": "\u9996\u5148\u60f3\u5230 $\\min f_i$ \u80af\u5b9a\u5728\u76f4\u5f84\u4e0a\uff0c\u4e8e\u662f\u4ee5\u8be5\u70b9\u4e3a\u6839\uff0c\u5f97\u5230\u4e00\u68f5\u968f\u6df1\u5ea6\u589e\u52a0 $f_i$ \u9012\u589e\u7684\u6811\u3002\u7136\u540e\u5bf9\u70b9 $u$ \u8003\u8651\uff0c\u5982\u679c $u\\in S$\uff0c\u90a3\u4e48\u5176\u7956\u5148\u4e5f\u53ef\u80fd $\\in S$\uff0c\u4e8e\u662f\u4e00\u8def\u5b58\u4e0b $f_i$\uff0c\u5411\u4e0a\u4e8c\u5206\u627e\u5230\u521a\u597d\u7b26\u5408\u8981\u6c42\u7684\u7956\u5148\uff0c\u7528\u5dee\u5206\u7ed9\u8fd9\u4e00\u6bb5\u90fd $+1$\uff0c\u53d6\u4e2a\u6700\u5927\u503c\u5c31\u662f\u7b54\u6848\u4e86\u3002  \n\u4ee5\u6700\u5c0f\u7684\u8fd9\u4e2a\u70b9\u4e3a\u6839\u8fd8\u662f\u6bd4\u8f83\u96be\u60f3\u7684\uff0c\u4e0d\u8fc7\u60f3\u5230\u4e86\u5c31\u6bd4\u8f83\u597d\u505a\u4e86\u3002\n```cpp\n#include<bits/stdc++.h>\n#define N 100000\n#define reg register\n#define inl inline\n#define int long long\n#define inf 1e18\nusing namespace std;\nint cnt,fst[N+5],nxt[N*2+5],to[N*2+5],w[N*2+5];\nint n,Q,S,T,ans,root=1,dis[N+5],disa[N+5],disb[N+5],f[N+5];\nvector <int> val,pos;\ninl void AddEdge(reg int u,reg int v,reg int c)\n{\n\tto[++cnt]=v;\n\tnxt[cnt]=fst[u];\n\tfst[u]=cnt;\n\tw[cnt]=c;\n}\nvoid Dfs1(reg int u,reg int pre,reg int d[])\n{\n\tfor(reg int i=fst[u];i;i=nxt[i])\n\t{\n\t\treg int v=to[i];\n\t\tif(v==pre) continue;\n\t\td[v]=d[u]+w[i];\n\t\tDfs1(v,u,d);\n\t}\n}\nvoid Dfs(reg int u,reg int pre,reg int x)\n{\n\tval.push_back(dis[u]); pos.push_back(u);\n\tf[u]=1; f[pos[lower_bound(val.begin(),val.end(),dis[u]-x)-val.begin()-1]]--;\n\tfor(reg int i=fst[u];i;i=nxt[i])\n\t{\n\t\treg int v=to[i];\n\t\tif(v==pre) continue;\n\t\tDfs(v,u,x);\n\t\tf[u]+=f[v];\n\t}\n\tans=max(ans,f[u]);\n\tval.pop_back(); pos.pop_back();\n}\nsigned main()\n{\n\tscanf(\"%lld\",&n);\n\tfor(reg int i=1;i<n;i++)\n\t{\n\t\treg int x,y,z;\n\t\tscanf(\"%lld %lld %lld\",&x,&y,&z);\n\t\tAddEdge(x,y,z);\n\t\tAddEdge(y,x,z);\n\t}\n\tDfs1(1,0,disa);\n\tfor(reg int i=1;i<=n;i++) if(disa[i]>disa[S]) S=i;\n\tmemset(disa,0,sizeof(disa));\n\tDfs1(S,0,disa);\n\tfor(reg int i=1;i<=n;i++) if(disa[i]>disa[T]) T=i;\n\tDfs1(T,0,disb);\n\tfor(reg int i=1;i<=n;i++)\n\t{\n\t\tdis[i]=max(disa[i],disb[i]);\n\t\tif(dis[i]<dis[root]) root=i;\n\t}\n\tval.push_back(-inf); pos.push_back(0);\n\tscanf(\"%lld\",&Q);\n\twhile(Q--)\n\t{\n\t\treg int x;\n\t\tscanf(\"%lld\",&x);\n\t\tans=0;\n\t\tDfs(root,0,x);\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1601128476,
        "uid": 23243,
        "name": "VenusM1nT",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF516D \u3010Drazil and Morning Exercise\u3011"
    },
    {
        "content": "\u9898\u76ee\u63cf\u8ff0\uff1a\u4e00\u68f5$n$\u4e2a\u70b9\u7684\u6811\uff0c\u8bbe$d(u)=\\max_{v\\in V}\\text{dis}(u,v)$\uff0c\u6bcf\u6b21\u8be2\u95ee\u4e00\u4e2a\u6570$l$\uff0c\u6c42\u4e00\u4e2a\u6700\u5927\u7684\u8054\u901a\u5b50\u56fe$L$\uff0c\u4f7f\u5f97$\\forall u,v\\in L,|d(u)-d(v)|\\leq l$\u3002\u8f93\u51fa$|L|$.\n\n\u6570\u636e\u8303\u56f4\uff1a$n\\leq 10^5,w\\leq 10^6,l\\leq 10^{11},q\\leq 50$.\n\n------\n\n[\u5728\u6211\u7684\u535a\u5ba2\u9605\u8bfb\u66f4\u4f73](https://www.cnblogs.com/AThousandMoons/p/11544267.html)\n\n\u9996\u5148\u6211\u4eec\u8981\u8ba1\u7b97\u51fa$d(u)$\uff0c\u8fd9\u4e2a\u6211\u4eec\u53ef\u4ee5\u628a$d(u)$\u62c6\u6210$dep_u+\\max_{v\\in V}(dep_v-2dep_{\\text{lca}(u,v)})$\u3002\u679a\u4e3e\u5f53\u524ddfs\u5230\u7684\u662f$x$\u4f5c\u4e3alca\uff0c\u90a3\u4e48$x$\u7684\u5bf9\u5b50\u6811$v$\u7684\u70b9\u8d21\u732e\u4e3a$\\max_{v\\in tr(x),v\\notin tr(v)}dep_v-2dep_x$\uff0c\u5bf9\u81ea\u5df1\u7684\u8d21\u732e\u4e3a$\\max_{v\\in tr(x)}dep_v-2dep_x$\u3002\u540e\u8005\u5148\u9884\u5904\u7406\u5b50\u6811\u6df1\u5ea6\u6700\u5927\u503c\uff0c\u524d\u8005\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a\u513f\u5b50$v$\uff0c\u6392\u6210\u4e00\u6392\u4e4b\u540e\u8ba1\u7b97\u524d\u7f00\u6700\u5927\u503c\u548c\u540e\u7f00\u6700\u5927\u503c\u3002\u65f6\u95f4\u590d\u6742\u5ea6$O(n)$\u3002\n\n\u7136\u540e\u6211\u4eec\u4f1a\u53d1\u73b0\u4e00\u4e2a\u4e8b\u60c5\uff0c\u5c31\u662f\u4ee5$d(u)$\u6700\u5c0f\u7684\u70b9\uff08\u4e2d\u5fc3\uff09\u4e3a\u6839\uff0c$\\forall v\\in tr(x),d(v)\\ge d(x)$\u3002\n\n\u8bc1\u660e\uff1a\u6211\u4eec\u53ea\u9700\u8981\u8bc1\u660e$u$\u7684\u6bcf\u4e2a\u513f\u5b50$x$\u6ee1\u8db3\u539f\u547d\u9898\uff0c\u90a3\u4e48\u53ef\u4ee5\u5f52\u7eb3\u8bc1\u660e\u6240\u6709\u70b9\u90fd\u6ee1\u8db3\u3002\n\n1. \u5982\u679c$x$\u7684\u6700\u957f\u8def\u4e0d\u7ecf\u8fc7$v$\uff0c\u90a3\u4e48$v$\u7684\u8def\u5f84\u53ef\u4ee5\u7ecf\u8fc7$x$\uff0c\u7136\u540e\u8d70$x$\u7684\u6700\u957f\u8def\uff0c\u5373$d(v)>d(x)$\u3002\n2. \u5982\u679c$x$\u7684\u6700\u957f\u8def\u7ecf\u8fc7$v$\uff0c\u90a3\u4e48$u$\u7684\u8def\u5f84\u53ef\u4ee5\u7ecf\u8fc7$x$\uff0c\u7136\u540e\u8d70$x$\u7684\u6700\u957f\u8def\uff0c\u5373$d(u)>d(x)$\uff0c\u77db\u76fe\uff0c\u6240\u4ee5\u4e0d\u53ef\u80fd\u3002\n\n\u73b0\u5728\u6211\u4eec\u77e5\u9053\uff0c\u6211\u4eec\u53ef\u4ee5\u7528two-pointer\u7684\u65b9\u6cd5\uff0c\u6309$d(u)$\u4ece\u5927\u5230\u5c0f\u679a\u4e3e$u$\uff0c\u7136\u540e\u5c06$d(x)>d(u)+l$\u7684\u70b9\u5168\u90e8\u5220\u9664\uff0c\u800c\u4e14\u5220\u9664\u7684\u70b9\u5e76\u4e0d\u4f1a\u5f71\u54cd\u8fde\u901a\u6027\uff08\u56e0\u4e3a\u66f4\u8fdc\u79bb\u4e2d\u5fc3\uff09\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u8054\u901a\u5757\u5927\u5c0f\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\log n+qn\\alpha(n))$\uff0c\u83ab\u540d\u5176\u5999\u8dd1\u5f97\u6bd4\u201c\u83ab\u540d\u5176\u5999\u8dd1\u5f97\u6bd4\u5e76\u67e5\u96c6\u8001\u54e5\u4eec\u5feb\u201d\u7684\u8001\u54e5\u5feb\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define Rint register int\nusing namespace std;\ntypedef long long LL;\nconst int N = 100003;\nint n, q, head[N], to[N << 1], nxt[N << 1], w[N << 1], id[N];\ninline void add(int a, int b, int c){\n\tstatic int cnt = 0;\n\tto[++ cnt] = b; nxt[cnt] = head[a]; head[a] = cnt; w[cnt] = c;\n}\nint fa[N], nod[N], tot;\nLL dep[N], len[N], pre[N], suf[N], tag[N], d[N];\ninline void dfs(int x){\n\tlen[x] = dep[x];\n\tfor(Rint i = head[x];i;i = nxt[i])\n\t\tif(to[i] != fa[x]){\n\t\t\tdep[to[i]] = dep[x] + w[i]; fa[to[i]] = x;\n\t\t\tdfs(to[i]);\n\t\t\tlen[x] = max(len[x], len[to[i]]);\n\t\t}\n\ttot = 0;\n\tfor(Rint i = head[x];i;i = nxt[i])\n\t\tif(to[i] != fa[x]) nod[++ tot] = to[i];\n\tpre[0] = suf[tot + 1] = dep[x];\n\tfor(Rint i = 1;i <= tot;i ++) pre[i] = max(pre[i - 1], len[nod[i]]);\n\tfor(Rint i = tot;i;i --) suf[i] = max(suf[i + 1], len[nod[i]]); \n\tfor(Rint i = 1;i <= tot;i ++){\n\t\ttag[nod[i]] = max(tag[nod[i]], max(pre[i - 1], suf[i + 1]) - 2 * dep[x]);\n\t\td[nod[i]] = max(d[nod[i]], max(pre[i - 1], suf[i + 1]) - 2 * dep[x]);\n\t}\n\td[x] = max(d[x], len[x] - 2 * dep[x]);\n}\ninline void push(int x){\n\tfor(Rint i = head[x];i;i = nxt[i]) if(to[i] != fa[x]){\n\t\ttag[to[i]] = max(tag[to[i]], tag[x]);\n\t\td[to[i]] = max(d[to[i]], tag[x]);\n\t}\n\tfor(Rint i = head[x];i;i = nxt[i]) if(to[i] != fa[x]) push(to[i]);\n}\ninline bool cmp(int a, int b){return d[a] < d[b] || d[a] == d[b] && a < b;}\nint f[N], siz[N];\ninline int getfa(int x){\n\treturn f[x] == x ? x : f[x] = getfa(f[x]);\n}\ninline void merge(int u, int v){\n\tu = getfa(u); v = getfa(v);\n\tif(u != v){\n\t\tif(siz[u] < siz[v]) swap(u, v);\n\t\tsiz[u] += siz[v]; f[v] = u;\n\t}\n}\nint main(){\n\tscanf(\"%d\", &n);\n\tfor(Rint i = 1;i < n;i ++){\n\t\tint a, b, c;\n\t\tscanf(\"%d%d%d\", &a, &b, &c);\n\t\tadd(a, b, c); add(b, a, c);\n\t}\n\tmemset(len, 0x80, sizeof len);\n\tdfs(1); push(1);\n\tfor(Rint i = 1;i <= n;i ++) d[i] += dep[i], id[i] = i;\n\tsort(id + 1, id + n + 1, cmp);\n\tmemset(fa, 0, sizeof fa); fa[id[1]] = 1;\n\tfor(Rint i = 2;i <= n;i ++)\n\t\tfor(Rint j = head[id[i]];j && !fa[id[i]];j = nxt[j])\n\t\t\tif(fa[to[j]]) fa[id[i]] = to[j];\n\tscanf(\"%d\", &q);\n\twhile(q --){\n\t\tLL l; scanf(\"%lld\", &l);\n\t\tint ans = 0;\n\t\tfor(Rint i = 1;i <= n;i ++) f[i] = i, siz[i] = 1;\n\t\tfor(Rint i = n, now = n;i;i --){\n\t\t\twhile(d[id[now]] - d[id[i]] > l) -- siz[getfa(id[now])], -- now;\n\t\t\tans = max(ans, siz[getfa(id[i])]);\n\t\t\tmerge(id[i], fa[id[i]]);\n\t\t}\n\t\tprintf(\"%d\\n\", ans);\n\t}\n}\n```",
        "postTime": 1568801640,
        "uid": 68148,
        "name": "watermoon",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF516D \u3010Drazil and Morning Exercise\u3011"
    },
    {
        "content": "\u6807\u7b7e: \u56fe\u8bba, \u5e76\u67e5\u96c6\n\n\u6ce8\u610f\u8fd9\u4e2a $f$ \u7684\u5b9a\u4e49\u662f\u5bf9\u4e8e\u5168\u5c40\u7684, \u800c\u4e0d\u662f\u5bf9\u4e8e\u67d0\u4e2a\u8fde\u901a\u5757, \u8fd9\u91cc\u641e\u9519\u4e86\u5c31\u4e0d\u662f\u540c\u4e00\u9053\u9898\u4e86(\u6216\u8bb8\u53ea\u6709\u6211\u641e\u9519\u4e86\u5427).\n\n#### Part 1\n\n\u9996\u5148\u4e24\u904d `dfs` \u6c42\u51fa\u6bcf\u4e2a\u70b9\u7684 $f$ . \u4efb\u610f\u9009\u5b9a\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u6839, \u7b2c\u4e00\u904d dfs \u6c42\u51fa\u6bcf\u4e2a\u70b9\u5230\u5b50\u6811\u5185\u6700\u8fdc\u7684\u8ddd\u79bb, \u7b2c\u4e8c\u904d dfs \u7528\u7236\u4eb2\u66f4\u65b0\u513f\u5b50. \u5b9e\u73b0\u5f88\u7b80\u5355, \u4e0d\u8d58\u8ff0, \u53ef\u4ee5\u770b\u770b\u4ee3\u7801.\n\n#### Part 2\n\n\u89c2\u5bdf\u53d1\u73b0\u8ddd\u79bb**\u67d0\u4e2a\u70b9\u6700\u8fdc\u7684\u70b9\u7ec4\u6210\u7684\u70b9\u96c6**\u5fc5\u7136\u5305\u542b**\u6bcf\u4e00\u6761**\u76f4\u5f84\u7684\u4e24\u4e2a\u7aef\u70b9\u4e2d\u81f3\u5c11\u4e00\u4e2a. \u6240\u4ee5\u663e\u7136\u4ee5\u4efb\u610f\u4e00\u6761\u76f4\u5f84\u7684\u4e2d\u70b9\u4f5c\u4e3a\u6811\u6839, \u6bcf\u4e00\u4e2a\u70b9\u7684 $f$ \u90fd\u4e0d\u6bd4\u5176\u5b50\u6811\u5185\u7684\u70b9\u7684 $f$ \u5927.\n\n\u6839\u636e\u8fd9\u4e2a\u5355\u8c03\u6027\u6211\u4eec\u53ef\u4ee5\u7528\u5c3a\u53d6(\u4e5f\u5373 `two points `)\u6765\u505a\u4e86. \n\n``` cpp\n#include <bits/stdc++.h>\nusing namespace std;\nlong long read();\nvoid chmax(long long &x, long long y) { x < y ? x = y : x; }\nint n, q;\nstruct E {\n    int v, w;\n};\nvector<E> e[200005];\nvoid add(int f, int t, int w) {\n    e[f].push_back((E){t, w}), e[t].push_back((E){f, w});\n}\n\nlong long f[200005], g[200005];\n\nvoid update(int u, long long d) {\n    chmax(g[u], d), (g[u] > f[u]) ? swap(g[u], f[u]) : void();\n}\n\nvoid dfs1(int u, int fa) {\n    for (int i = 0, v; i < e[u].size(); ++i)\n        if ((v = e[u][i].v) != fa) dfs1(v, u), update(u, f[v] + e[u][i].w);\n}\n\nint up[200005], p[200005];\nbool cmp(int u, int v) { return f[u] == f[v] ? u < v : f[u] < f[v]; }\nvoid dfs2(int u, int fa) {\n    for (int i = 0, v; i < e[u].size(); ++i) {\n        if ((v = e[u][i].v) == fa) continue;\n        update(v, e[u][i].w + ((f[v] + e[u][i].w == f[u]) ? g[u] : f[u]));\n        dfs2(v, u);\n    }\n    for (int i = 0, v; i < e[u].size(); ++i)\n        cmp(u, v = e[u][i].v) ? up[v] = u : up[u] = v;\n}\n\nint fa[200005], w[200005];\nint find(int u) { return fa[u] == u ? u : fa[u] = find(fa[u]); }\n\nvoid work(long long d) {\n    int res = 0;\n    for (int i = 1; i <= n; ++i) fa[i] = i, w[i] = 1;\n    for (int i = n, j = n; i >= 1; --i) {\n        while (f[p[j]] > f[p[i]] + d) --w[find(p[j--])];\n        res = max(res, w[p[i]]), w[fa[p[i]] = up[p[i]]] += w[p[i]];\n    }\n    printf(\"%d\\n\", res);\n}\n\nint main() {\n    n = read();\n    for (int i = 1, u, v; i < n; ++i) u = read(), v = read(), add(u, v, read());\n    dfs1(1, 0), dfs2(1, 0), q = read();\n    for (int i = 1; i <= n; ++i) p[i] = i;\n    sort(p + 1, p + 1 + n, cmp);\n    while (q--) work(read());\n    return 0;\n}\nconst int _SIZE = 1 << 22;\nchar ibuf[_SIZE], *iS = ibuf, *iT = ibuf;\n#define gc                                                         \\\n    (iS == iT ? iT = ((iS = ibuf) + fread(ibuf, 1, _SIZE, stdin)), \\\n     (iS == iT ? EOF : *iS++) : *iS++)\nlong long read() {\n    long long x = 0, f = 1;\n    char c = gc;\n    while (!isdigit(c)) f = (c == '-') ? -1 : f, c = gc;\n    while (isdigit(c)) x = x * 10 + c - '0', c = gc;\n    return x * f;\n}\n```\n\n\n\n\n\n",
        "postTime": 1580220072,
        "uid": 51237,
        "name": "Kinandra",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF516D \u3010Drazil and Morning Exercise\u3011"
    },
    {
        "content": "\u5b89\u5229$:$ [\u6742\u9898\u9009\u505a](https://www.luogu.com.cn/blog/s-r-f/liu-yue-qi-yue-za-ti-xuan-zuo)\n\n---\n\n\u4e0d\u96be\u53d1\u73b0\u6743\u503c\u5206\u5e03\u7ec4\u6210\u4e86\u4e00\u68f5\u4ee5$f_x$\u6700\u5c0f\u7684$x$\u4e3a\u6839\u7684\u6811$,$\u5176\u4e2d\u7236\u4eb2\u7684\u6743\u503c\u4e00\u5b9a$\\leq$\u513f\u5b50\u7684\u6743\u503c$.$\n\n\u90a3\u4e48\u76f4\u63a5$two-pointers,$\u7136\u540e\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u5f53\u524d\u7684\u7b54\u6848\u5c31\u53ef\u4ee5\u505a\u5230 $O(n\u03b1(n))$\u5904\u7406\u4e00\u7ec4\u8be2\u95ee $.$\n\n$two-pointers$\u7684\u7ec6\u8282\u5927\u6982\u662f$,$\u8003\u8651$l,r$\u7684\u79fb\u52a8$,$ \u4e0d\u96be\u53d1\u73b0$r$\u53d8\u5c0f\u662f\u4e0d\u4f1a\u5f71\u54cd\u8054\u901a\u60c5\u51b5\u7684$,$\u6240\u4ee5\u5c31\u4ece\u5927\u5f80\u5c0f\u626b$.$\n\n\u590d\u6742\u5ea6 $O(qn\u03b1(n)).$\n\n\u4ee3\u7801 $:$\n\n```cpp\n#include <bits/stdc++.h>\n#define LL long long\nusing namespace std;\ntemplate <typename T> void read(T &x){\n\tx = 0; int f = 1; char ch = getchar();\n\twhile (!isdigit(ch)) {if (ch == '-') f = -1; ch = getchar();}\n\twhile (isdigit(ch)) {x = x * 10 + ch - '0'; ch = getchar();}\n\tx *= f;\n}\ninline void write(int x){if (x > 9) write(x/10); putchar(x%10+'0'); }\n\nconst int N = 100050;\nint To[N<<1],Ne[N<<1],Dis[N<<1],He[N],_;\ninline void add(int x,int y,int w){\n\t++_; To[_] = y,Ne[_] = He[x],Dis[_] = w,He[x] = _;\n\t++_; To[_] = x,Ne[_] = He[y],Dis[_] = w,He[y] = _;\n}\nint n; LL a[N]; int p[N],fa[N],dpt[N]; vector<int>ch[N];\ninline bool cmp(int x,int y){ return (a[x] != a[y]) ? (a[x] > a[y]) : (dpt[x] > dpt[y]); }\n\nstruct DS{\n\tint cnt[N],ans,fa[N],size[N];\n\tinline void init(){ memset(cnt,0,(n+1)<<2),ans = 0; for (int i = 1; i <= n; ++i) fa[i] = i,size[i] = 1,++cnt[1]; }\n\tinline int Find(int x){ return x == fa[x] ? x : (fa[x] = Find(fa[x])); }\n\tinline void Merge(int x,int y){\n\t\tx = Find(x),y = Find(y); if (x == y) return;\n\t\tif (size[x] > size[y]) swap(x,y);\n\t\t--cnt[size[x]],--cnt[size[y]]; size[y] += size[x]; ++cnt[size[y]];\n\t\tans = max(ans,size[y]);\n\t\tfa[x] = y;\n\t}\n\tinline void Dec(int x){\n\t\tx = Find(x); --cnt[size[x]];\n\t\tif (size[x] == ans && !cnt[size[x]]) --ans;\n\t\t--size[x]; ++cnt[size[x]];\n\t}\n\tinline int Ans(){ return ans; }\n}T;\n\nnamespace subtask1{\n\tLL dis[N];\n\tinline void dfs(int x,int f){ if (f == -1) dis[x] = 0; for (int y,p = He[x]; p ; p = Ne[p]) if ((y=To[p])^f) dis[y] = dis[x] + Dis[p],dfs(y,x); }\n\tinline void solve(){\n\t\tint i,mx,x,y;\n\t\tdfs(1,-1); for (mx = 1,i = 2; i <= n; ++i) if (dis[i] > dis[mx]) mx = i;\n\t\tx = mx,dfs(x,-1); for (mx = 1,i = 2; i <= n; ++i) if (dis[i] > dis[mx]) mx = i; y = mx;\n\t\tfor (i = 1; i <= n; ++i) a[i] = dis[i];\n\t\tdfs(y,-1); for (i = 1; i <= n; ++i) a[i] = max(a[i],dis[i]);\n\t}\n}\n\ninline void dfs(int x){\n\tdpt[x] = dpt[fa[x]]+1;\n\tfor (int y,p = He[x]; p ; p = Ne[p]) if ((y=To[p])^fa[x]) fa[y] = x,dfs(y),ch[x].push_back(y);\n}\n\ninline int solve(LL d){\n\tint ans = 1,l,r,x,i;\n\tT.init();\n\tfor (l = r = 1; l <= n; ++l){\n\t\twhile (r < n && a[p[l]]-a[p[r+1]] <= d){\n\t\t\t++r; x = p[r];\n\t\t\tfor (i = 0; i < ch[x].size(); ++i) T.Merge(x,ch[x][i]);\n\t\t}\n\t\tans = max(ans,T.Ans());\n\t\tT.Dec(p[l]);\n\t}\n\treturn ans;\n}\n\nint main(){\n\tint i,x,y,z,Rt;\n\tread(n);\n\tfor (i = 1; i < n; ++i) read(x),read(y),read(z),add(x,y,z);\n\tsubtask1::solve();\n\tfor (Rt = 1,i = 2; i <= n; ++i) if (a[i] < a[Rt]) Rt = i;\n\tdfs(Rt);\n\tfor (i = 1; i <= n; ++i) p[i] = i;\n\tsort(p+1,p+n+1,cmp);\n\tint q; LL v;\n\tread(q); while (q--) read(v),write(solve(v)),putchar('\\n');\n\treturn 0;\n}\n```",
        "postTime": 1594120932,
        "uid": 52518,
        "name": "s_r_f",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF516D \u3010Drazil and Morning Exercise\u3011"
    },
    {
        "content": "# T1 CF516D Drazil and Morning Exercise\n\n- \u7ed9\u5b9a\u4e00\u68f5 n \u4e2a\u70b9\u7684\u6811\uff0c\u8fb9\u6709\u8fb9\u6743\u3002\n- \u5b9a\u4e49 $f_x = \\max_{i=1}^n \\text{dist}(x,i)$\u3002\n- q \u6b21\u8be2\u95ee\u6700\u5927\u7684\u6ee1\u8db3 $\\max_{x \\in s} f_x - \\min_{x \\in s} f_x \\le l$ \u7684\u8fde\u901a\u5757 s \u5305\u542b\u7684\u70b9\u6570\u3002\n- $n <= 10^5\uff0cq <= 50$\u3002\n\n**solution**\n\n\u9996\u5148\uff0c\u4e24\u8fb9dfs\u6c42\u51fa\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u7684 $f_x$ \uff0c\u7136\u540e\u8003\u8651\u4ee5\u76f4\u5f84\u7684\u4e2d\u70b9\u4f5c\u4e3a\u6839\uff0c\u90a3\u4e48\u5728\u8fd9\u4e2a\u65b0\u7684\u6811\u91cc\u9762\uff0c\u7236\u4eb2\u7684$f$ \u5c31\u4f1a$ \\le $ \u513f\u5b50\u7684$f$ \uff0c\u6ee1\u8db3\u4e00\u79cd\u5355\u8c03\u6027\uff0c\u4e8e\u662f\u7528\u7c7b\u4f3c\u53cc\u6307\u9488\u7684\u4e1c\u897f\u7ef4\u62a4\u4e00\u904d\u5373\u53ef\u3002\n\n ```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5+10;\n#define int long long\ninline int read()\n{\n\tregister int x = 0 , f = 0; register char c = getchar();\n\twhile(c < '0' || c > '9') f |= c == '-' , c = getchar();\n\twhile(c >= '0' && c <= '9') x = (x << 3) + (x << 1) + (c ^ 48) , c = getchar();\n\treturn f ? -x : x;\n}\nint n;\nint fa[N] , up[N] , f[N] , g[N] , p[N] , siz[N];\nstruct node { int v , c; node(int v = 0 , int c = 0) : v(v) , c(c) {} };\nvector< node > G[N];\n\nvoid dfs1(int x , int Fa)\n{\n\tint tmp;\n\tfor(auto w : G[x]) if(w.v != Fa)\n\t{\n\t\tdfs1(w.v , x);\n\t\ttmp = f[w.v] + w.c;\n\t\tif(tmp > f[x]) g[x] = f[x] , f[x] = tmp;\n\t\telse if(tmp > g[x]) g[x] = tmp;\n\t}\n}\n\ninline bool cmp(const int &A , const int &B) { return f[A] == f[B] ? A < B : f[A] < f[B]; }\n\nvoid dfs2(int x , int Fa)\n{\n\tint tmp;\n\tfor(auto w : G[x]) if(w.v != Fa)\n\t{\n\t\ttmp = w.c + ((f[w.v] + w.c == f[x]) ? g[x] : f[x]);\n\t\tif(tmp > f[w.v]) g[w.v] = f[w.v] , f[w.v] = tmp;\n\t\telse if(tmp > g[w.v]) g[w.v] = tmp;\n\t\tdfs2(w.v , x);\n\t}\n\tfor(auto w : G[x]) if(cmp(x , w.v)) up[w.v] = x; else up[x] = w.v;\n}\n\nint find(int x) { return x == fa[x] ? x : fa[x] = find(fa[x]); }\n\nvoid solve(int d)\n{\n\tfor(int i = 1 ; i <= n ; ++i) fa[i] = i , siz[i] = 1;\n\tint ans = 0;\n\tfor(int i = n , j = n ; i >= 1 ; --i)\n\t{\n\t\twhile(f[p[j]] > f[p[i]] + d) --siz[find(p[j--])];\n\t\tans = max(ans , siz[p[i]]); siz[fa[p[i]] = up[p[i]]] += siz[p[i]];\n\t}\n\tcout << ans << '\\n';\n}\n\nsigned main()\n{\n\tn = read(); int u , v , c;\n\tfor(int i = 1 ; i < n ; ++i)\n\t\tu = read() , v = read() , c = read() , G[u].push_back(node(v , c)) , G[v].push_back(node(u , c));\n\tdfs1(1 , 0); dfs2(1 , 0);\n\tfor(int i = 1 ; i <= n ; ++i) p[i] = i;\n\tsort(p + 1 , p + 1 + n , cmp);\n\tint Q = read(); while(Q--)  solve(read());\n\treturn 0;\n}\n ```\n\n",
        "postTime": 1592278171,
        "uid": 153897,
        "name": "RQ\u3002\u3002\u3002",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF516D \u3010Drazil and Morning Exercise\u3011"
    },
    {
        "content": "> [CF516D Drazil and Morning Exercise](https://codeforc.es/contest/516/problem/D)\n\n## \u9898\u610f\n\n- \u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u70b9\u7684\u6811\uff0c\u8fb9\u6709\u8fb9\u6743\u3002\n- \u5b9a\u4e49 $f_x = \\max_{i=1}^n \\text{dist}(x,i)$\u3002\n- $q$ \u6b21\u8be2\u95ee\u6700\u5927\u7684\u6ee1\u8db3 $\\max_{x \\in s} f_x - \\min_{x \\in s} f_x \\le l$ \u7684\u8fde\u901a\u5757 $s$ \u5305\u542b\u7684\u70b9\u6570\u3002\n- $n \\le 10^5$\uff0c$q \\le 50$\u3002\n\n## \u9898\u89e3\n\n\u5148\u628a $f$ \u7ebf\u6027\u6c42\u51fa\u6765\uff0c\u7136\u540e\u7531\u5927\u5230\u5c0f\u53cc\u6307\u9488\u626b\u4e00\u904d\uff0c\u53d1\u73b0\u53ea\u4f1a\u5408\u5e76\uff0c\u56e0\u6b64\u5e76\u67e5\u96c6\u7ef4\u62a4\u8fde\u901a\u6027\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n \\log n + qn\\alpha(n))$\u3002\n\n## \u4ee3\u7801\n\n```cpp\nconst int N = 1e5 + 7;\nint n, q, fa[N], s[N], v[N], ans;\nll m, f[N][2], g[N];\npair< ll, int > p[N];\nvector< pi > e[N];\n\nvoid dfs1(int x, int fa) {\n\tfor (ui i = 0; i < e[x].size(); i++) {\n\t\tint y = e[x][i].fi;\n\t\tif (y == fa) continue;\n\t\tdfs1(y, x);\n\t\tll z = f[y][0] + e[x][i].se;\n\t\tif (z > f[x][1]) f[x][1] = z;\n\t\tif (z > f[x][0]) swap(f[x][0], f[x][1]);\n\t}\n}\n\nvoid dfs2(int x, int fa) {\n\tfor (ui i = 0; i < e[x].size(); i++) {\n\t\tint y = e[x][i].fi;\n\t\tif (y == fa) continue;\n\t\tint z = e[x][i].se;\n\t\tg[y] = max(g[x], f[y][0] + z == f[x][0] ? f[x][1] : f[x][0]) + z;\n\t\tdfs2(y, x);\n\t} \n}\n\nint get(int x) {\n\treturn x == fa[x] ? x : (fa[x] = get(fa[x]));\n}\n\ninline void merge(int x, int y) {\n\tif (x == y) return;\n\tif (s[x] > s[y]) swap(x, y);\n\tfa[x] = y, s[y] += s[x];\n\tans = max(ans, s[y]);\n}\n\nint main() {\n\trd(n);\n\tfor (int i = 1, x, y, z; i < n; i++)\n\t\trd(x), rd(y), rd(z), e[x].pb(mp(y, z)), e[y].pb(mp(x, z));\n\tdfs1(1, 0);\n\tdfs2(1, 0);\n\tfor (int i = 1; i <= n; i++) p[i] = mp(max(f[i][0], g[i]), i);\n\tsort(p + 1, p + n + 1);\n\treverse(p + 1, p + n + 1);\n\trd(q);\n\twhile (q--) {\n\t\trd(m), ans = 1;\n\t\tfor (int i = 1; i <= n; i++) fa[i] = i, s[i] = 1, v[i] = 0;\n\t\tfor (int l = 1, r = 0; l <= n; l++) {\n\t\t\twhile (r < n && p[l].fi - p[r+1].fi <= m) {\n\t\t\t\tint x = p[++r].se;\n\t\t\t\tv[x] = 1;\n\t\t\t\tfor (ui i = 0; i < e[x].size(); i++) {\n\t\t\t\t\tint y = e[x][i].fi;\n\t\t\t\t\tif (v[y]) merge(get(x), get(y));\n\t\t\t\t}\n\t\t\t}\n\t\t\t--s[get(p[l].se)], v[get(p[l].se)] = 0;\n\t\t}\n\t\tprint(ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1575399780,
        "uid": 100544,
        "name": "xht",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF516D \u3010Drazil and Morning Exercise\u3011"
    },
    {
        "content": "# \u300cCodeforces516D\u300dDrazil and Morning Exercise\n\n## Description\n\n\u7ed9\u51fa\u4e00\u68f5 $n$ \u4e2a\u70b9\u7684\u6811\uff0c\u7ed9\u51fa $n-1$ \u6761 $x$ \u548c $y$ \u4e4b\u95f4\u7684\u8fb9\u3002\n\n\u6bcf\u6761\u8fb9\u6709\u4e00\u4e2a\u957f\u5ea6$v$\uff0c\u8be2\u95ee$q$\u6b21\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u51fa\u4e00\u4e2a$L$\uff0c\u8bf7\u9009\u62e9\u4e00\u4e2a\u7b26\u5408\u8981\u6c42\u7684\u6700\u5927\u8054\u901a\u5757\uff0c\u8981\u6c42\u8be5\u8054\u901a\u5757\u4e2d\u6240\u6709\u70b9\u5230\u6811\u4e0a\u79bb\u5b83\u6700\u8fdc\u7684\u70b9\u7684\u8ddd\u79bb\u7684\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u4e4b\u5dee\u5c0f\u4e8e\u7b49\u4e8e$L$\uff0c\u8f93\u51fa\u8054\u901a\u5757\u7684\u6700\u5927\u5927\u5c0f\u3002\n\n$n \\leq 100000, q \\leq 50$\n\n## Solution\n\n$q \\leq 50$\uff0c\u663e\u7136\u6ca1\u5565\u7528\u3002\n\n\u8bbe$d(i)$\u8868\u793a$i$\u5230\u6811\u4e0a\u79bb\u5b83\u6700\u8fdc\u7684\u70b9\u7684\u8ddd\u79bb\u3002\u663e\u7136\u8fd9\u4e2a\u76f4\u63a5\u9884\u5904\u7406\u3002\n\n~~\u7136\u540e\u679a\u4e3e\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\u6700\u5c0f\u7684$d$\u503c$t$\uff0c\u7ef4\u62a4\u6ee1\u8db3$d \\leq t+lim$\u70b9\u5f62\u6210\u7684\u8054\u901a\u5757\u5927\u5c0f\uff0clct\u5373\u53ef~~\n\n\u4e0a\u9762\u90a3\u4e2a\u65b9\u6cd5\u592a\u96be\u5199\u4e86\uff08\u800c\u4e14\u4e0d\u592a\u80fd\u8fc7\uff09\uff0c\u8003\u8651\u6316\u6398\u4e00\u4e9b\u522b\u7684\u6027\u8d28\uff0c\u53ef\u4ee5\u53d1\u73b0\u6811\u4e0a\u79bb\u4e00\u4e2a\u70b9\u6700\u8fdc\u7684\u70b9\u53ea\u4f1a\u662f\u76f4\u5f84\u7684\u4e24\u7aef\u70b9\uff0c\u90a3\u4e48\u5982\u679c\u4ee5\u76f4\u5f84\u7684\u4e2d\u70b9\u4e3a\u6839\uff08\u53ef\u4ee5\u53d1\u73b0\u8fd9\u662f$d$\u6700\u5c0f\u7684\u70b9\uff09\uff0c\u53ef\u4ee5\u53d1\u73b0\u6bcf\u4e2a\u70b9\u5b50\u6811\u91cc\u7684$d$\u503c\u90fd\u4e0d\u5c0f\u4e8e\u5b50\u6811\u6839\u7684$d$\u503c\u3002\n\n\u6709\u4e86\u8fd9\u4e2a\u6027\u8d28\u5c31\u5f88\u597d\u505a\u4e86\uff0c\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\u6700\u5c0f\u7684$d$\u503c$x$\uff0c\u5bf9\u4e8e$d$\u503c\u8d85\u8fc7$d+lim$\u7684\u70b9\u76f4\u63a5\u5220\u6389\uff0c\u56e0\u4e3a\u5b83\u7684\u5b50\u6811\u80af\u5b9a\u5df2\u7ecf\u88ab\u5220\u6389\u4e86\uff0c\u6240\u4ee5\u4e0d\u4f1a\u5f71\u54cd\u8fde\u901a\u6027\u3002\u6240\u4ee5\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u3002\u65f6\u95f4\u590d\u6742\u5ea6$O(n+nq\\alpha(n))$\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\n\ninline int gi()\n{\n\tchar c = getchar();\n\twhile(c < '0' || c > '9') c = getchar();\n\tint sum = 0;\n\twhile('0' <= c && c <= '9') sum = sum * 10 + c - 48, c = getchar();\n\treturn sum;\n}\n\ninline ll gl()\n{\n\tchar c = getchar();\n\twhile(c < '0' || c > '9') c = getchar();\n\tll sum = 0;\n\twhile('0' <= c && c <= '9') sum = sum * 10 + c - 48, c = getchar();\n\treturn sum;\n}\n\nconst int maxn = 100005;\n\nint n, ans;\n\nstruct edge\n{\n\tint to, next, w;\n} e[maxn * 2];\nint h[maxn], tot, rt, fa[maxn], p[maxn], siz[maxn], vis[maxn];\nll dis[maxn], d[maxn];\n\ninline void add(int w, int u, int v)\n{\n\te[++tot] = (edge) {v, h[u], w}; h[u] = tot;\n\te[++tot] = (edge) {u, h[v], w}; h[v] = tot;\n}\t\t\t\t\t\t\t\t\t\t\t\t\n\nvoid dfs(int u, int fa)\n{\n\td[u] = max(d[u], dis[u]);\n\tif (dis[u] > dis[rt]) rt = u;\n\tfor (int i = h[u], v; v = e[i].to, i; i = e[i].next)\n\t\tif (v != fa) dis[v] = dis[u] + e[i].w, dfs(v, u);\n}\n\nint find(int x)\n{\n\tif (fa[x] == x) return x;\n\treturn fa[x] = find(fa[x]);\n}\n\nvoid merge(int x, int y)\n{\n\tx = find(x); y = find(y);\n\tif (x == y) return ;\n\tif (siz[y] > siz[x]) swap(x, y);\n\tsiz[x] += siz[y]; ans = max(ans, siz[x]); fa[y] = x;\n}\n\nint main()\n{\n\tn = gi(); ++n; --n;\n\tfor (int i = 1; i < n; ++i) add(gi(), gi(), gi());\n\t\n\tdfs(1, 0);\n\tint tmp = rt; dis[rt] = 0; rt = 0;\n\tdfs(tmp, 0);\n\tdis[rt] = 0; dfs(rt, 0);\n\n\tfor (int i = 1; i <= n; ++i) p[i] = i;\n\tsort(p + 1, p + n + 1, [](const int &a, const int &b) {return d[a] < d[b];});\n\tint q = gi();\n\tll lim;\n\twhile (q--) {\n\t\tlim = gl();\n\t\tfor (int i = 1; i <= n; ++i) fa[i] = i, siz[i] = 1, vis[i] = 0;\n\n\t\tans = 1;\n\t\tfor (int k = n, j = n; k >= 1; --k) {\n\t\t\twhile (d[p[j]] > d[p[k]] + lim) {\n\t\t\t\t--siz[find(p[j])];\n\t\t\t\t--j;\n\t\t\t}\n\t\t\tvis[p[k]] = 1;\n\t\t\tfor (int i = h[p[k]], v; v = e[i].to, i; i = e[i].next)\n\t\t\t\tif (vis[v]) merge(p[k], v);\n\t\t}\n\t\tprintf(\"%d\\n\", ans);\n\t}\n\t\n\treturn 0;\n}\n```",
        "postTime": 1571665679,
        "uid": 119899,
        "name": "dsidsi",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF516D \u3010Drazil and Morning Exercise\u3011"
    },
    {
        "content": "\u8fd9\u79cd\u9898\u7b2c\u4e00\u6b65\u4e00\u5b9a\u662f\u5148\u6c42\u51fa$f$\u6570\u7ec4\uff0c\u6211\u7528\u4e86\u6362\u6839 dp\uff0c\u5f53\u7136\u76f4\u63a5 lca \u4e5f\u53ef\u4ee5\uff0c\u4e0d\u8fc7\u6b63\u5e38\u5b9e\u73b0\u8d77\u6765\u4f1a\u5f88\u6162\u3002\n\n\u7136\u540e$q$\u5f88\u5c0f\uff0c\u76f4\u63a5\u53cc\u6307\u9488+LCT\uff0c\u6ca1\u4e86\u3002\u5417\uff1f\n\n\u4f17\u6240\u5468\u77e5\uff0cLCT \u7684\u5e38\u6570\u5927\u5f97\u548c$\\log^2n$\u5dee\u4e0d\u591a\uff0c\u6240\u4ee5\u8fd9\u7edd\u5bf9\u4f1a\u88ab\u5361\uff0c\u60f3\u90fd\u4e0d\u7528\u60f3\uff0c\u66f4\u4f55\u51b5\u5b83\u7ed9\u4e86\u4e00\u4e2a$f$\uff1f\u6240\u4ee5\u4e8b\u60c5\u5e76\u4e0d\u7b80\u5355\uff0c\u6211\u4eec\u8001\u8001\u5b9e\u5b9e\u53bb\u6316\u6398\u6027\u8d28\u3002\n\n\u63a5\u4e0b\u6765\u6709\u7ecf\u9a8c\u7684\u9009\u624b\u53ef\u4ee5\u4e00\u773c\u770b\u51fa\uff08\u6211\u60f3\u4e86$10$\u5206\u949f...\uff09\uff0c\u4e00\u4e2a\u70b9\u7684$f$\u503c\u4e00\u5b9a\u662f\u5728\u76f4\u5f84$2$\u4e2a\u7aef\u70b9\u5904\u53d6\u5230\u7684\u3002\n\n\u7136\u540e\u770b\u770b\u76f4\u5f84\u4ee5\u5916\u7684\u70b9\uff0c\u53d1\u73b0\u79bb\u76f4\u5f84\u8d8a\u8fdc\uff0c$f$\u503c\u8d8a\u5927\u3002\n\n\u518d\u770b\u770b\u76f4\u5f84\u4e0a\u7684\u70b9\u3002\u663e\u7136\u6811\u7684\u4e2d\u5fc3\uff08$f$\u503c\u6700\u5c0f\u7684\u70b9\uff09\u4e00\u5b9a\u5728\u76f4\u5f84\u4e0a\uff0c\u7136\u540e\u79bb\u4e2d\u5fc3\u8d8a\u8fdc\uff0c$f$\u503c\u8d8a\u5927\u3002\n\n\u4ee5\u4e0a\u90fd\u53ef\u4ee5\u7528\u53cd\u8bc1\u6cd5\u8bc1\u660e\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002\n\n\u4e8e\u662f\u6211\u4eec\u60ca\u5947\u5730\u53d1\u73b0\u5982\u679c\u4ee5\u4e2d\u5fc3\u4e3a\u6839\u8282\u70b9\uff0c\u8fd9\u4e2a\u6811\u5c31\u6210\u4e86\u4e00\u4e2a\u5c0f\u6839\u5806\u3002\n\n\u63a5\u4e0b\u6765\u679a\u4e3e\u8fde\u901a\u5757\u6839\u8282\u70b9\u3002\u6b63\u597d\u6839\u8282\u70b9\u5c31\u662f\u5b50\u6811\u6700\u5c0f\u503c\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u8d2a\u5fc3\u5730\u627e\u5230\u6240\u6709\u53ef\u884c\u7684\u70b9\uff0c\u663e\u7136\u8fd9\u662f\u4e00\u4e2a\u8fde\u901a\u5757\u3002\n\n\u7136\u540e\u8fd9\u9898\u5c31\u5207\u4e86\u3002\n\n\u5173\u4e8e\u627e\u5230\u53ef\u884c\u7684\u70b9\uff0c\u6211\u9009\u62e9\u4e86\u5806+\u542f\u53d1\u5f0f\u5408\u5e76\u3002\u8fd9\u770b\u8d77\u6765\u662f$O(qn\\log^2_2n)$\uff0c\u5b9e\u9645\u4e0a\u6bcf\u4e2a\u70b9\u6700\u591a\u53ea\u4f1a\u88ab\u5220\u9664\u4e00\u6b21\uff0c\u52a0\u4e0a\u542f\u53d1\u5f0f\u5408\u5e76\u7684\u7ee7\u627f\uff0c\u8fd9\u662f$O(qn\\log_2n)$\u7684\uff0c\u800c\u4e14\u5e38\u6570\u8dd1\u4e0d\u6ee1\u3002\u53ef\u60dc\u6211\u7528\u4e86 priority_queue\uff0c\u6162\u7684\u4e00\u6279\u3002\u3002\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\ninline char gc(){\n    static char now[1<<16],*S,*T;\n    if (T==S){T=(S=now)+fread(now,1,1<<16,stdin);if (T==S) return EOF;}\n    return *S++;\n}\ninline ll read(){\n    register ll x=0,f=1;char ch=gc();\n    while (!isdigit(ch)){if(ch=='-')f=-1;ch=gc();}\n    while (isdigit(ch)){x=(x<<3)+(x<<1)+ch-'0';ch=gc();}\n    return (f==1)?x:-x;\n}\nint dep[202020],n,head[202020],tot,rt;\nstruct edge{\n\tint to,nxt;ll dis;\n}g[404040];\ninline void made(int from,int to,ll dis){\n\tg[++tot].to=to;g[tot].dis=dis;g[tot].nxt=head[from];head[from]=tot;\n}\nll dp[202020],fadis[202020],F[202020];\nint id[202020],tid[202020];\nvoid dfs1(int u,int fa){\n\tdp[u]=0;tid[u]=id[u]=0;\n\tfor (int i=head[u];i;i=g[i].nxt){\n\t\tint v=g[i].to;\n\t\tif (v==fa) continue;\n\t\tfadis[v]=g[i].dis;\n\t\tdfs1(v,u);\n\t\tif (dp[u]<=dp[v]+g[i].dis){\n\t\t\ttid[u]=id[u];id[u]=v;dp[u]=dp[v]+g[i].dis;\n\t\t}else if (dp[tid[u]]+fadis[tid[u]]<=dp[v]+g[i].dis) tid[u]=v;\n\t}\n}\nvoid dfs2(int u,int fa,ll LAS){\n\tF[u]=max(dp[u],LAS);\n\tfor (int i=head[u];i;i=g[i].nxt){\n\t\tint v=g[i].to;\n\t\tif (v==fa) continue;\n\t\tif (v==id[u]) dfs2(v,u,max(LAS,dp[tid[u]]+fadis[tid[u]])+g[i].dis);\n\t\telse dfs2(v,u,max(LAS,dp[u])+g[i].dis);\n\t}\n}\nint ANS,now,tcnt,tpos[202020];\npriority_queue<ll> dl[202020];\nvoid dfs3(int u,int faa,ll L){\n\ttpos[u]=++tcnt;\n\tfor (int i=head[u];i;i=g[i].nxt){\n\t\tint v=g[i].to;\n\t\tif (v==faa) continue;\n\t\tdfs3(v,u,L);\n\t\tif (dl[tpos[u]].size()<dl[tpos[v]].size()) swap(tpos[u],tpos[v]);\n\t\twhile (!dl[tpos[v]].empty()){\n\t\t\tdl[tpos[u]].push(dl[tpos[v]].top());\n\t\t\tdl[tpos[v]].pop();\n\t\t}\n\t}\n\tdl[tpos[u]].push(F[u]);\n\twhile (F[u]+L<dl[tpos[u]].top()) dl[tpos[u]].pop();\n\tANS=max(ANS,(int)dl[tpos[u]].size());\n}\nsigned main(){\n\tn=read();\n\tfor (int i=1;i<n;i++){\n\t\tint x=read(),y=read(),z=read();\n\t\tmade(x,y,z);made(y,x,z);\n\t}\n\tdfs1(1,0);dfs2(1,0,0);\n\tF[0]=1e18;\n\tfor (int i=1;i<=n;i++){\n\t\tif (F[rt]>F[i]) rt=i;\n\t}\n\tint Q=read();\n\twhile (Q--){\n\t\ttcnt=ANS=0;\n\t\twhile (!dl[tpos[rt]].empty()) dl[tpos[rt]].pop();\n\t\tdfs3(rt,0,read());\n\t\tprintf(\"%d\\n\",ANS);\n\t}\n\treturn 0;\n}\n\n\n```\n",
        "postTime": 1590472101,
        "uid": 20309,
        "name": "Fading",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF516D \u3010Drazil and Morning Exercise\u3011"
    },
    {
        "content": "\u9996\u5148\u6211\u4eec\u901a\u8fc7\u9884\u5904\u7406\u53ef\u4ee5\u6c42\u51fa\u6bcf\u4e00\u4e2a\u70b9\u7684$f$\u3002\n\n\u8003\u8651\u5230\u80fd\u66f4\u65b0\u4e00\u4e2a\u70b9\u7684$f$\u7684\u70b9\u4e00\u5b9a\u4f1a\u662f\u4e00\u6761\u76f4\u5f84\u7684\u4e24\u4e2a\u7aef\u70b9\uff0c\u56e0\u6b64\u6211\u4eec\u627e\u51fa\u76f4\u5f84\u540e\u4e24\u904d$dfs$\u6765\u6c42$f$\u6570\u7ec4\u5373\u53ef\u3002\n\n\u7ee7\u7eed\u6316\u6398\u6027\u8d28\uff0c\u53d1\u73b0\u8fd9\u4e2a$f$\u503c\u662f\u5177\u6709\u5355\u8c03\u6027\u7684\uff0c\u6362\u800c\u8a00\u4e4b\uff0c\u5982\u679c\u6211\u4eec\u94a6\u5b9a\u76f4\u5f84\u7684\u4e2d\u70b9\u4f5c\u4e3a\u6839\u8282\u70b9\uff0c\u90a3\u4e48\u6bcf\u9897\u5b50\u6811\u7684$f$\u90fd\u5177\u6709\u5c0f\u6839\u5806\u7684\u6027\u8d28\u3002\n\n\u8fd9\u6837\u6211\u4eec\u8003\u8651\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\u8fde\u901a\u5757\u4e2d\u6700\u5c0f\u7684$f$\uff0c$twopointer$\u505a\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\uff0c\u7edf\u8ba1\u8fde\u901a\u5757\u5927\u5c0f\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u8003\u8651\u8fd9\u6837\u505a\u4e3a\u4ec0\u4e48\u662f\u5bf9\u7684\u5462\uff0c\u6839\u636e\u5c0f\u6839\u5806\u6027\u8d28\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u88ab\u5220\u9664\u4e86\uff0c\u90a3\u4e48\u5b83\u7684\u5b50\u6811\u4e2d\u6240\u6709\u70b9\u90fd\u4f1a\u88ab\u5220\u9664\uff0c\u56e0\u6b64\u6211\u4eec\u5c31\u4fdd\u8bc1\u4e86\u8054\u901a\u7684\u5355\u8c03\u6027\uff0c\u5220\u9664\u76f4\u63a5\u5728\u5e76\u67e5\u96c6\u7684$siz$\u51cf\u4e00\u5373\u53ef\u3002",
        "postTime": 1581927955,
        "uid": 208081,
        "name": "MikukuOvO",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF516D \u3010Drazil and Morning Exercise\u3011"
    },
    {
        "content": "# \u4e00\u3001\u9898\u610f\n\u89c1[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/CF516D)\n\n# \u4e8c\u3001\u9898\u89e3\n\u9996\u5148\uff0c\u6c42\u51fa\u6811\u7684\u76f4\u5f84\u7684\u4e24\u4e2a\u7aef\u70b9\uff0c\u7ebf\u6027\u7684\u7b97\u51fa $f$\u3002\n\u63a5\u7740\uff0c\u6211\u4eec\u53d1\u73b0 $f$ \u6700\u5c0f\u7684 $u$ \u4e00\u5b9a\u662f\u76f4\u5f84\u7684\u4e2d\u70b9\u3002\n\u53c8\u53d1\u73b0\uff0c\u4ee5\u76f4\u5f84\u4e2d\u70b9\u4e3a\u6839\uff0c$\\forall{u_{\\in tree(root)}, v_{\\in subtree(u)}},f(v) >= f(u)$\u3002~~\uff08\u4ec0\u4e48\u795e\u4ed9\u7ed3\u8bbaqwq~~\n\u4e8e\u662f\u5c06\u7ed3\u70b9\u6309 $f$ \u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u76f4\u63a5 $two-pointers$ + \u5e76\u67e5\u96c6\u7ef4\u62a4\u5373\u53ef\uff0c\u56e0\u4e3a\u88ab\u5220\u9664\u7684\u70b9\u4e00\u5b9a\u662f\u53f6\u5b50\u8282\u70b9\u3002\n\n# \u4e09\u3001\u4ee3\u7801\n```\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n#define rg register\n#define fu(i, a, b) for(rg int i = (a), I = (b) + 1; i < I; ++i)\n#define fd(i, a, b) for(rg int i = (a), I = (b) - 1; i > i; --i)\n#define go(u) for(rg int o = head[u], v = to[o], w = val[o]; o; o = nxt[o], v = to[o], w = val[o])\ntemplate <class T> inline void read(T &x) {\n\tx = 0; char ch = getchar();\n\twhile(ch < 48 || ch > 57) ch = getchar();\n\twhile(ch >= 48 && ch <= 57) x = (x << 3) + (x << 1) + (ch ^ 48), ch = getchar();\n}\ntemplate <class T> inline void ckmax(T &a, T b) {a = max(a, b);}\ntemplate <class T> inline void ckmin(T &a, T b) {a = min(a, b);}\n\nconst int N = 1e5 + 5;\nint n, q, cnt, head[N], to[N << 1], nxt[N << 1], val[N << 1], rt, id[N], mp[N], fa[N], siz[N];\nll f[N], d[N], qd;\n\ninline void add(int u, int v, int w) {\n\tto[++cnt] = v, val[cnt] = w;\n\tnxt[cnt] = head[u], head[u] = cnt;\n}  \n\nvoid dfs1(int u, int fa) {\n\tgo(u) \n\t\tif(v != fa) {\n\t\t\tf[v] = f[u] + w;\n\t\t\tdfs1(v, u); \n\t\t}\n}\n\nvoid dfs2(int u, int fa) {\n\tgo(u) \n\t\tif(v != fa) {\n\t\t\td[v] = d[u] + w;\n\t\t\tdfs2(v, u);\n\t\t}\n}\n\nvoid dfs(int u, int fa) {\n\tckmax(d[u], f[u]);\n\tgo(u)\n\t\tif(v != fa) {\n\t\t\tf[v] = f[u] + w;\n\t\t\tdfs(v, u);\n\t\t}\n}\n\nint get(int x) {\n\treturn x == fa[x] ? x : fa[x] = get(fa[x]);\n}\n\ninline void merge(int u, int v) {\n\tif(u == v) return;\n\tif(siz[u] > siz[v]) swap(u, v);\n\tsiz[v] += siz[u], fa[u] = v;\n} \n\ninline bool cmp(const int &a, const int &b) {return d[a] > d[b];}\n\nint main() {\n\tread(n);\n\tfor(int i = 1, u, v, w; i < n; ++i) {\n\t\tread(u), read(v), read(w);\n\t\tadd(u, v, w), add(v, u, w);\n\t}\n\tdfs1(1, 0); fu(i, 1, n) if(f[rt] < f[i]) rt = i; dfs2(rt, 0); \n\trt = 0; fu(i, 1, n) if(d[rt] < d[i]) rt = i; f[rt] = 0; dfs(rt, 0);\n\tfu(i, 1, n) id[i] = i; sort(id + 1, id + n + 1, cmp);\n\tfu(i, 1, n) mp[id[i]] = i;\n\tread(q); while(q--) {\n\t\tread(qd); int ans = 1;\n\t\tfu(i, 1, n) fa[i] = i, siz[i] = 1;\n\t\tfor(rg int i = 1, l = 1; i <= n; ++i) {\n\t\t\twhile(d[id[l]] - qd > d[id[i]]) --siz[get(id[l++])];\n\t\t\tgo(id[i]) if(l <= mp[v] && mp[v] <= i) merge(get(id[i]), get(v));\n\t\t\tckmax(ans, siz[get(id[i])]);\n\t\t}\n\t\tprintf(\"%d\\n\", ans);\n\t}\n\treturn 0;\n} \n```\n\n# \u56db\u3001\u603b\u7ed3\n**\u6811\u7684\u76f4\u5f84\u7684\u6027\u8d28\uff01\uff01**\n",
        "postTime": 1579763779,
        "uid": 100101,
        "name": "yzc2005",
        "ccfLevel": 9,
        "title": "CF516D Drazil and Morning Exercise\uff08\u6811\u7684\u76f4\u5f84 + \u5e76\u67e5\u96c6\uff09"
    },
    {
        "content": "[\u9898\u76ee](https://www.luogu.org/problem/CF516D)\n\n\u9996\u5148\u6211\u4eec\u77e5\u9053\uff0c\u5728\u6811\u4e0a\u8ddd\u79bb\u4e00\u4e2a\u70b9\u6700\u8fdc\u7684\u70b9\u4e00\u5b9a\u662f\u76f4\u5f84\u7684\u4e24\u4e2a\u7aef\u70b9\u4e4b\u4e00\n\n\u9996\u5148\u4e24\u904d$\\rm dfs$\u628a\u76f4\u5f84\u6c42\u51fa\u6765\uff0c\u5b9a\u4e49$d(u)$\u8868\u793a\u70b9$u$\u8ddd\u79bb\u5176\u6700\u8fdc\u70b9\u7684\u8ddd\u79bb\uff0c\u6709\u4e86\u76f4\u5f84\u6211\u4eec\u5c31\u80fd\u6c42\u51fa$d$\u6570\u7ec4\u4e86\n\n\u5f53\u7136\u53ef\u4ee5\u6811\u5f62$\\rm dp$\uff0c\u8bbe$f_{x,i,j}$\u8868\u793a\u5728$x$\u5b50\u6811\u5185\u90e8\u9009\u62e9\u4e00\u4e2a\u6700\u5927\u503c\u4e3a$i$\u6700\u5c0f\u503c\u4e3a$j$\u7684\u6700\u5927\u8054\u901a\u5757\u662f\u591a\u5c11\uff0c\u663e\u7136\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u5947\u9ad8\u65e0\u6bd4\n\n\u8003\u8651\u628a\u6c42\u51fa\u7684\u76f4\u5f84\u6765\u597d\u597d\u5229\u7528\u4e00\u4e0b\n\n\u9996\u5148\u611f\u6027\u7684\u53d1\u73b0\u4e00\u4e0b\uff0c\u8bbe$x$\u4e3a\u76f4\u5f84\u4e2d\u70b9\uff0c\u90a3\u4e48$d(x)$\u80af\u5b9a\u662f\u6700\u5c0f\u7684\u70b9\u6743\uff0c\u53c8\u53d1\u73b0\u6211\u4eec\u94a6\u5b9a$x$\u4e3a\u6839\uff0c\u90a3\u4e48\u4e00\u4e2a\u70b9\u7684\u70b9\u6743\u80af\u5b9a\u6bd4\u5176\u5b50\u6811\u5185\u90e8\u7684\u70b9\u90fd\u8981\u5c0f\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u94a6\u5b9a$x$\u4e3a\u6839\uff0c\u4e4b\u540e\u679a\u4e3e\u4e00\u4e2a\u8054\u901a\u5757\u7684\u6700\u9ad8\u70b9$i$\uff0c\u4e5f\u5c31\u662f\u70b9\u6743\u7684\u6700\u5c0f\u503c\n\n\u7531\u4e8e\u6df1\u5ea6\u8d8a\u5927\u70b9\u6743\u8d8a\u5927\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u628a\u8fd9\u4e2a\u5b50\u6811\u5185\u90e8\u6240\u6709\u70b9\u6743\u4e0d\u8d85\u8fc7$d(i)+L$\u7684\u70b9\u90fd\u9009\u4e0a\uff0c\u8fd9\u663e\u7136\u6784\u6210\u4e00\u4e2a\u8054\u901a\u5757\n\n\u4e8e\u662f\u95ee\u9898\u8f6c\u5316\u6210\u4e86\u6c42\u4e00\u4e2a\u5b50\u6811\u5185\u90e8\u6709\u591a\u5c11\u4e2a\u70b9\u7684\u70b9\u6743\u5c0f\u4e8e\u67d0\u4e2a\u7ed9\u5b9a\u503c\uff0c\u4e0d\u96be\u53d1\u73b0\u8fd9\u662f\u4e3b\u5e2d\u6811\u88f8\u9898\n\n\u8bf4\u7684\u597d\uff0c\u4e8e\u662f\u6211\u9009\u62e9$\\rm dsu\\ on\\ tree$\uff0c\u590d\u6742\u5ea6$O(nq\\log n+n\\log^2n)$\uff0c\u83ab\u540d\u5176\u5999\u8dd1\u5f97\u6bd4\u5e76\u67e5\u96c6\u8001\u54e5\u4eec\u5feb\n\n\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define re register\n#define LL long long\n#define lb(x) ((x)&(-x))\n#define max(a,b) ((a)>(b)?(a):(b))\ninline int read() {\n\tchar c=getchar();int x=0;while(c<'0'||c>'9') c=getchar();\n\twhile(c>='0'&&c<='9') x=(x<<3)+(x<<1)+c-48,c=getchar();return x;\n}\nconst int maxn=1e5+5;\nstruct E{int v,nxt,w;}e[maxn<<1];\nint n,m,num,Rt,rt,sz,S;\nint head[maxn],sum[maxn],son[maxn],pos[maxn],dep[maxn],d[maxn],Ans[55];\nLL pre[maxn],mx[maxn],q[55],c[maxn];\ninline void add(int x,int y,int w) {\n\te[++num].v=y;e[num].nxt=head[x];head[x]=num;e[num].w=w;\n}\ninline int find(LL x) {\n\tint l=1,r=sz,now=0;\n\twhile(l<=r) {\n\t\tint mid=l+r>>1;\n\t\tif(c[mid]<=x) now=mid,l=mid+1;else r=mid-1;\n\t}\n\treturn now;\n}\nvoid dfs(int x,int fa) {\n\tfor(re int i=head[x];i;i=e[i].nxt) {\n\t\tif(e[i].v==fa) continue;\n\t\tpre[e[i].v]=pre[x]+e[i].w;\n\t\tdfs(e[i].v,x);\n\t}\n}\nvoid dfs1(int x) {\n\tsum[x]=1;\n\tfor(re int i=head[x];i;i=e[i].nxt) {\n\t\tif(dep[e[i].v]) continue;\n\t\tdep[e[i].v]=dep[x]+1;dfs1(e[i].v);sum[x]+=sum[e[i].v];\n\t\tif(sum[e[i].v]>sum[son[x]]) son[x]=e[i].v;\n\t}\n}\ninline void add(int x,int v) {\n\tfor(re int i=x;i<=sz;i+=lb(i)) d[i]+=v;\n}\ninline int ask(int x) {\n\tint now=0;\n\tfor(re int i=x;i;i-=lb(i)) now+=d[i];\n\treturn now;\n}\nvoid calc(int x,int o) {\n\tadd(pos[x],o);\n\tfor(re int i=head[x];i;i=e[i].nxt)\n\tif(dep[e[i].v]>dep[x]&&S!=e[i].v) calc(e[i].v,o);\n}\nvoid dsu(int x,int k) {\n\tfor(re int i=head[x];i;i=e[i].nxt) \n\tif(dep[e[i].v]>dep[x]&&son[x]!=e[i].v) dsu(e[i].v,0);\n\tif(son[x]) dsu(son[x],1);\n\tS=son[x],calc(x,1),S=0;\n\tfor(re int i=1;i<=m;i++) {\n\t\tint g=ask(find(mx[x]+q[i]));\n\t\tAns[i]=max(Ans[i],g);\n\t}\n\tif(!k) calc(x,-1);\n}\nint main() {\n\tn=read();\n\tfor(re int x,y,w,i=1;i<n;++i)\n\t\tx=read(),y=read(),w=read(),add(x,y,w),add(y,x,w);\n\tm=read();for(re int i=1;i<=m;i++) scanf(\"%lld\",&q[i]);\n\tdfs(1,0);rt=1;\n\tfor(re int i=2;i<=n;i++) if(pre[i]>pre[rt]) rt=i;\n\tpre[rt]=0;dfs(rt,0);Rt=1;\n\tfor(re int i=1;i<=n;i++) mx[i]=pre[i];\n\tfor(re int i=2;i<=n;i++) if(pre[i]>pre[Rt]) Rt=i;\n\tpre[Rt]=0;dfs(Rt,0);\n\tfor(re int i=1;i<=n;i++) mx[i]=max(mx[i],pre[i]);\n\trt=1;for(re int i=2;i<=n;i++) if(mx[i]<mx[rt]) rt=i;\n\tdep[rt]=1;dfs1(rt);\n\tfor(re int i=1;i<=n;i++) c[i]=mx[i];\n\tstd::sort(c+1,c+n+1);sz=std::unique(c+1,c+n+1)-c-1;\n\tfor(re int i=1;i<=n;i++) pos[i]=find(mx[i]);\n\tdsu(rt,1);for(re int i=1;i<=m;i++) printf(\"%d\\n\",Ans[i]);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1568536643,
        "uid": 35178,
        "name": "asuldb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3  \u3010CF516D\u3011Drazil and Morning Exercise"
    }
]