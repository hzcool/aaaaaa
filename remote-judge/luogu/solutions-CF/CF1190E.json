[
    {
        "content": "\u9898\u76ee\u8981\u6c42\u8ba9\u8ddd\u79bb\u6700\u77ed\u7684\u90a3\u6761\u76f4\u7ebf\u8ddd\u79bb\u5c3d\u53ef\u80fd\u5927\uff0c\u90a3\u4e48\u5f88\u5bb9\u6613\u60f3\u5230\u4e8c\u5206\u3002\n\n\u5047\u8bbe\u6211\u4eec\u4e8c\u5206\u4e00\u4e2a\u7b54\u6848$d$\uff0c\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u4ee5\u539f\u70b9\u4e3a\u5706\u5fc3\u753b\u4e00\u4e2a\u534a\u5f84\u4e3a$d$\u7684\u5706\uff0c\u7136\u540e\u5f3a\u5236\u6240\u6709\u9009\u62e9\u7684\u76f4\u7ebf\u90fd\u4e0e\u8be5\u5706\u76f8\u5207\uff0c\u56e0\u4e3a\u5982\u679c\u67d0\u6761\u76f4\u7ebf\u5728\u5706\u5916\u9762\u7684\u8bdd\uff0c\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u628a\u5b83\u5411\u4e2d\u5fc3\u5e73\u79fb\uff0c\u8fd9\u6837\u5e76\u4e0d\u4f1a\u53d8\u5dee\u3002\n\n\u8fd9\u6837\u753b\u51fa\u5706\u6765\uff0c\u4e00\u6761\u76f4\u7ebf\u5c31\u53ef\u4ee5\u88ab\u5706\u4e0a\u7684\u4e00\u4e2a\u70b9\u8868\u793a\u3002\u5bb9\u6613\u53d1\u73b0\uff0c\u8fd9\u65f6\u4e00\u4e2a\u70b9$P$\u4e0e\u539f\u70b9\u4e4b\u95f4\u7684\u8fde\u7ebf\u5982\u679c\u80fd\u88ab\u4e00\u6761\u76f4\u7ebf\u5207\u5f00\uff0c\u90a3\u4e48\u8fd9\u6761\u76f4\u7ebf\u5bf9\u5e94\u7684\u70b9\u7684\u8303\u56f4\u662f\u4e00\u4e2a\u786e\u5b9a\u7684\u5706\u5f27\u3002\n\n\u5982\u679c\u6211\u4eec\u6c42\u51fa\u6bcf\u4e2a\u5706\u5f27\uff0c\u90a3\u4e48\u95ee\u9898\u5c31\u53d8\u6210\uff1a\u5982\u4f55\u9009\u62e9\u4e0d\u8d85\u8fc7$m$\u4e2a\u70b9\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u5706\u5f27\u4e0a\u81f3\u5c11\u6709\u4e00\u4e2a\u70b9\u88ab\u9009\u4e2d\u3002\n\n\u5982\u679c\u662f\u5728\u76f4\u7ebf\u4e0a\u7684\u95ee\u9898\uff08\u4e0d\u662f\u73af\uff0c\u8fd9\u65f6\u7684\u5706\u5f27\u5c31\u662f\u4e00\u4e2a\u7ebf\u6bb5\uff09\uff0c\u505a\u6cd5\u5f88\u7b80\u5355\uff1a\u5148\u5c06\u6240\u6709\u7684\u7ebf\u6bb5\u6309\u7167\u5de6\u7aef\u70b9\u6392\u5e8f\uff0c\u90a3\u4e48\u6211\u4eec\u6bcf\u6b21\u90fd\u8d2a\u5fc3\u7684\u9009\u62e9\u4e00\u4e2a\u70b9\uff0c\u4f7f\u5f97\u5b83\u80fd\u8986\u76d6\u5230\u7f16\u53f7\u6700\u5c0f\u7684\u5c3d\u53ef\u80fd\u591a\u7684\u7ebf\u6bb5\uff0c\u8fd9\u6837\u590d\u6742\u5ea6\u662f$O(n)$\u7684\u3002\u8003\u8651\u73af\u4e0a\u7684\u60c5\u51b5\uff0c\u4e00\u4e2a\u505a\u6cd5\u662f\u628a\u73af\u65ad\u5f00\uff0c\u7136\u540e\u6bcf\u6b21\u5355\u72ec\u8dd1\uff0c\u4f46\u8fd9\u6837\u662f$O(n^2)$\u7684\uff0c\u5e76\u4e0d\u80fd\u901a\u8fc7\u8fd9\u9053\u9898\u3002\n\n\u53e6\u4e00\u4e2a\u505a\u6cd5\u662f\u8fd9\u6837\u7684\uff1a\u5148\u628a\u73af\u53d8\u6210\u94fe\uff0c\u7136\u540e\u5728\u53f3\u8fb9\u590d\u5236\u4e00\u4efd\uff0c\u8fd9\u6837\u4e00\u5171\u6709$2n$\u6761\u7ebf\u6bb5\u3002\u6211\u4eec\u5bf9\u8fd9\u4e9b\u7ebf\u6bb5\u6392\u5e8f\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u7f16\u53f7\u4e3a$i$\u7684\u7ebf\u6bb5\uff0c\u6c42\u51fa\u4e00\u4e2a$next_i$\uff0c\u4ee3\u8868\u5982\u679c\u6211\u4eec\u8003\u8651$i$\u4e4b\u540e\u7684\u6240\u6709\u7ebf\u6bb5\uff0c\u5728\u9009\u62e9\u4e00\u4e2a\u70b9\u4e4b\u540e\uff0c\u7b2c\u4e00\u4e2a\u6ca1\u88ab\u8986\u76d6\u5230\u7684\u7ebf\u6bb5\u7684\u7f16\u53f7\u6700\u5927\u662f\u591a\u5c11\u3002\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u7528\u7c7b\u4f3c\u53cc\u6307\u9488\u7684\u65b9\u6cd5\u4ece\u53f3\u5f80\u5de6\u7b97\u51fa\u6765\u3002\n\n\u6c42\u51fa\u4e86\u8fd9\u4e2a\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8003\u8651\u500d\u589e\uff1a$f_{i,j}$\u4ee3\u8868\u4ece$i$\u5f00\u59cb\uff0c\u9009\u62e9\u4e86$2^j$\u4e2a\u70b9\uff0c\u7b2c\u4e00\u4e2a\u6ca1\u88ab\u8986\u76d6\u5230\u7684\u7ebf\u6bb5\u7f16\u53f7\u6700\u5927\u662f\u591a\u5c11\u3002\u5f88\u660e\u663e\uff1a\n\n$$f_{i,0}=next_i,f_{i,j}=f_{f_{i,j-1},j-1}$$\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a$i$\uff0c\u5728$O(\\log m)$\u7684\u65f6\u95f4\u5185\u6c42\u51fa\u9009\u51fa$m$\u4e2a\u70b9\u4e4b\u540e\u80fd\u8986\u76d6\u591a\u5c11\u7684\u7ebf\u6bb5\u3002\u8fd9\u6837\uff0c\u5355\u6b21\u5224\u65ad\u7684\u590d\u6742\u5ea6\u5c31\u53d8\u6210\u4e86$O(n\\log m)$\uff0c\u5728\u5916\u9762\u5957\u4e2a\u4e8c\u5206\uff0c\u8db3\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nconst double PI=acos(-1);\nint n,m;\ndouble x[100010];\ndouble y[100010];\nstruct Seg{\n\tdouble l,r;\n}s[200010];\nbool cmp(Seg a,Seg b){return a.l<b.l;}\ndouble dist(double x,double y){return sqrt(x*x+y*y);}\nconst int M=19;\nint f[200010][M];\nint jump(int u,int x)\n{\n\tint now=0;\n\twhile(x){\n\t\tif(x&1)u=f[u][now];\n\t\tnow++;x>>=1;\n\t}\n\treturn u;\n}\nbool check(double d)\n{\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tdouble ang=atan2(y[i],x[i]);\n\t\tdouble delta=acos(d/dist(x[i],y[i]));\n\t\ts[i].l=ang-delta;\n\t\ts[i].r=ang+delta;\n\t\tif(s[i].l<0){\n\t\t\ts[i].l+=2*PI;\n\t\t\ts[i].r+=2*PI;\n\t\t}\n\t\ts[i+n].l=s[i].l+2*PI;\n\t\ts[i+n].r=s[i].r+2*PI;\n\t}\n\tint N=n*2;\n\tsort(s+1,s+N+1,cmp);\n\tf[N+1][0]=N+1;\n\tint cur=N;\n\tfor(int i=N;i>=1;i--)\n\t{\n\t\twhile(s[cur].l>s[i].r)cur--;\n\t\tf[i][0]=cur+1;\n\t}\n\tfor(int i=1;i<M;i++)\n\t\tfor(int j=1;j<=N+1;j++)\n\t\t\tf[j][i]=f[f[j][i-1]][i-1];\n\tfor(int i=1;i<=n;i++)\n\t\tif(jump(i,m)>=i+n)\n\t\t\treturn true;\n\treturn false;\n}\nint main()\n{\n\tdouble L=0,R=1e9;\n\tscanf(\"%d %d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%lf %lf\",&x[i],&y[i]);\n\t\tR=min(R,dist(x[i],y[i]));\n\t}\n\tif(R<1e-6){\n\t\tprintf(\"%.10lf\\n\",0.0);\n\t\treturn 0;\n\t}\n\tint tim=40;\n\twhile(tim--)\n\t{\n\t\tdouble mid=(L+R)/2;\n\t\tif(check(mid))L=mid;\n\t\telse R=mid;\n\t}\n\tprintf(\"%.10lf\\n\",L);\n\treturn 0;\n}\n```\n",
        "postTime": 1593829288,
        "uid": 54475,
        "name": "\u732a\u8111\u5b50",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1190E \u3010Tokitsukaze and Explosion\u3011"
    }
]