[
    {
        "content": "[Link](https://codeforces.com/problemset/problem/613/A)\n\n\u4ee4 $(x_0,y_0)$ \u5728\u56fe\u5f62\u4e2d\u80fd\u5230\u8fbe\u7684\u6700\u8fdc\u8ddd\u79bb\u4e3a $a$\uff0c\u6700\u8fd1\u8ddd\u79bb\u4e3a $b$\uff0c\u90a3\u4e48\u7b54\u6848\u4e3a $(a^2-b^2)\\pi$\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u80fd\u591f\u53d6\u5230 $a$ \u6216 $b$ \u7684\u70b9\uff0c\u8981\u4e48\u662f\u9898\u76ee\u4e2d\u7ed9\u51fa\u7684\u70b9 $(x_i,y_i)$\uff0c\u8981\u4e48\u662f $(x_0,y_0)$ \u5411\u7ed9\u51fa\u7684\u8fb9 $(x_i,y_i)(x_j,y_j)$ \u4f5c\u5782\u6240\u5f97\u7684\u5782\u8db3\u3002\u5982\u679c\u5c06 $(x_i,y_i),(x_j,y_j)$ \u6240\u5728\u76f4\u7ebf \u548c \u5782\u8db3\u4e0e $(x_0,y_0)$ \u6240\u5728\u76f4\u7ebf \u5206\u522b\u770b\u4f5c\u4e00\u6b21\u51fd\u6570 $f(x)=kx+b$ \u548c $g(x)=k'x+b'$\uff0c\u90a3\u4e48\u5782\u8db3\u5750\u6807\u5c31\u662f $f(x)$ \u4e0e $g(x)$ \u56fe\u50cf\u7684\u4ea4\u70b9\u3002$f(x)$ \u89e3\u6790\u5f0f\u5f88\u5bb9\u6613\u6c42\uff0c$g(x)$ \u5219\u4e0d\u662f\u5f88\u5bb9\u6613\uff0c\u9700\u8981\u4e00\u4e2a\u5f15\u7406\u3002\n\n> \u5f15\u7406\uff1a\u82e5 $f(x)=kx+b$ \u7684\u56fe\u50cf\u4e0e $g(x)=k'x+b'$ \u7684\u56fe\u50cf\u5782\u76f4\uff0c\u90a3\u4e48 $k'=-\\dfrac{1}{k}$\u3002\n>\n> \u8bc1\u660e\uff1a\n>\n> ![](https://s3.ax1x.com/2021/02/05/y8IVRs.png)\n>\n> $\\tan(\\alpha+\\pi/2)=-\\cot\\alpha=-\\dfrac{1}{\\tan\\alpha}$  \n> $\\because  k=\\tan\\alpha,k'=\\tan(\\alpha+\\pi/2)$  \n> $\\therefore k'=-\\dfrac{1}{k}$\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u7b97\u51fa\u5782\u8db3\u5750\u6807\uff1a\n\n![](https://s3.ax1x.com/2021/02/05/y8IpsP.png)\n\n\u6ce8\u610f\uff0c\u8ba1\u7b97\u5782\u8db3\u5750\u6807\u65f6\u6709\u4e09\u79cd\u7279\u6b8a\u60c5\u51b5\uff1a\n\n1. $x_1=x_2$\uff0c\u6b64\u65f6\u76f4\u7ebf $AB$  \u4e0d\u662f\u4e00\u6b21\u51fd\u6570\uff0c$D$ \u7684\u5750\u6807\u4e3a $(x_1,y_0)$\uff1b\n2. $y_1=y_2$\uff0c\u6b64\u65f6\u76f4\u7ebf $CD$ \u4e0d\u662f\u4e00\u6b21\u51fd\u6570\uff0c$D$ \u7684\u5750\u6807\u4e3a $(x_0,y_1)$\uff1b\n3. $D$ \u5728\u7ebf\u6bb5 $AB$ \u5ef6\u957f\u7ebf\u4e0a\uff0c\u6b64\u65f6\u8fd9\u4e2a\u70b9\u4e0d\u5408\u6cd5\uff0c\u9700\u8981\u8df3\u8fc7\u3002\n\n\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\mathcal O(n)$\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\nusing namespace std;\n//#define double long double\nconst double PI=3.14159265358979323846265433832795028841971;\t\ndouble X0,Y0;\npair<double,double> cz(double X1,double Y1,double X2,double Y2)\n{\n\tif(X1==X2) return make_pair(X1,Y0);\n\tif(Y1==Y2) return make_pair(X0,Y1);\n\tdouble k=(Y2-Y1)/(X2-X1),k0=-(1/k);\n\n\tdouble b=Y1-k*X1,b0=Y0-k0*X0;\n\treturn make_pair((b0-b)/(k-k0),(b0-b)/(k-k0)*k0+b0);\n}\ndouble dis(double X1,double Y1,double X2,double Y2)\n{return (X1-X2)*(X1-X2) + (Y1-Y2)*(Y1-Y2);}\ndouble x[100010],y[100010];\nint main()\n{\n//\tX0=-3;Y0=3;\n//\tprintf(\"%Lf,%Lf\",cz(-3,2,5,3).first,cz(-3,2,5,3).second);\n//\tcout<<cz(0,,4,2).first<<\" \"<<cz(0,2,4,2).second;\n//cout<<acos(-1)<<endl; \n\tint n;\n\tscanf(\"%d%lf%lf\",&n,&X0,&Y0);\n\tfor(int i=1;i<=n;i++) scanf(\"%lf%lf\",&x[i],&y[i]);\n\tdouble Min=1e18,Max=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tMin=min(Min,dis(X0,Y0,x[i],y[i]));\n\t\tMax=max(Max,dis(X0,Y0,x[i],y[i]));\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint pre=(i==1?n:i-1);\n\t\tpair<double,double> point=cz(x[pre],y[pre],x[i],y[i]);\n\t\tif(point.first<min(x[pre],x[i]) || point.first>max(x[pre],x[i])) continue;\n\t\tif(point.second<min(y[pre],y[i]) || point.second>max(y[pre],y[i])) continue;\n\t\tMin=min(Min,dis(X0,Y0,point.first,point.second));\n\t\tMax=max(Max,dis(X0,Y0,point.first,point.second)); \n\t}\n\tprintf(\"%.10lf\",(Max-Min)*PI);\n\treturn 0;\n}\n```\n",
        "postTime": 1613368601,
        "uid": 125913,
        "name": "zztqwq",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF613A \u3010Peter and Snow Blower\u3011"
    },
    {
        "content": "\u8fd9\u4e00\u9898\u5176\u5b9e\u5c31\u662f\u544a\u8bc9\u4f60\u4e00\u4e2a\u591a\u8fb9\u5f62\uff0c\u6c42\u8be5\u591a\u8fb9\u5f62\u7ed5\u7ed9\u51fa\u7684\u539f\u70b9\u8f6c\u4e00\u5708\u4ee5\u540e\u626b\u8fc7\u7684\u9762\u79ef\u3002\n\n\u672c\u849f\u84bb\u5f00\u59cb\u7406\u89e3\u9519\u9898\u76ee\u4e86\uff0c\u4ee5\u4e3a\u53ea\u7528\u7b97\u6bcf\u4e2a\u70b9\u5230\u539f\u70b9\u7684\u8ddd\u79bb\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u5c31\u884c\u4e86\uff0c\u4f46\u6700\u540e\u7b2c\u4e09\u4e2a\u70b9\u5c31\u88ab\u5361\u4e86\u3002\n\n\u540e\u6765\u7ecf\u67d0\u4f4d\u4e0d\u613f\u900f\u9732\u59d3\u540d\u7684\u5927\u4f6c\u8bf4\uff0c\u9700\u8981\u7b97\u51fa\u6bcf\u6761\u7ebf\u6bb5\uff08\u6ce8\u610f\u662f\u7ebf\u6bb5\uff0c\u4e0d\u662f\u76f4\u7ebf\uff09\u5230\u539f\u70b9\u7684\u8ddd\u79bb\uff0c\u56e0\u4e3a\u91cc\u9762\u7684\u5706\u5f62\u53ef\u80fd\u662f\u7531\u4e00\u6761\u5207\u7ebf\u7ed5\u4e00\u5708\u5f62\u6210\u7684\u3002\n\n\u4f46\u5c0f\u849f\u84bb\u4e0d\u4f1a\uff0c\u5c31\u67e5\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0\u5176\u5b9e\u6bd4\u8f83\u7b80\u5355\uff0c\u5c31\u5224\u65ad\u4e00\u4e0b\u8fd9\u4e2a\u70b9\u5230\u8fd9\u6761\u7ebf\u6bb5\u7684\u5782\u8db3\u662f\u5426\u5728\u7ebf\u6bb5\u4e0a\uff0c\u82e5\u4e0d\u662f\uff0c\u5219\u8f93\u51fa\u8be5\u70b9\u5230\u7aef\u70b9\u7684\u8ddd\u79bb\uff0c\u82e5\u662f\uff0c\u5219\u8f93\u51fa\u8fd9\u6761\u5782\u7ebf\u7684\u957f\u5ea6\u3002\uff08\u5173\u4e8e\u8fd9\u4e2a\u5782\u7ebf\u7684\u957f\u5ea6\uff0c\u6211\u7528\u4e86\u4e24\u79cd\u65b9\u6cd5\uff0c\u6709\u4e00\u79cd\u7206\u7cbe\u5ea6\u4e86\uff0c\u4ee3\u7801\u4e2d\u7684\u662f\u53ef\u4ee5\u8fc7\u7684\u3002\uff09\n\n~~\u7136\u540e\u8fd9\u9053\u9898\u5c31\u53d8\u6210\u4e00\u9053\u6c34\u9898\u4e86\u3002~~\n\n\u518d\u4e0d\u4f1a\u5c31\u770b\u4ee3\u7801\u5427\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n;\nstruct point{\n    double x,y;\n}p[100010],o;//\u70b9\u7684\u7ed3\u6784\u4f53\nstruct line{\n    double k,b;\n};//\u7ebf\u7684\u7ed3\u6784\u4f53\uff0c\u8fd9\u9898\u6ca1\u6709\u7528\u5230\ninline double dis(point a,point b){\n    return (a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y);\n}//\u8ba1\u7b97\u4e24\u4e2a\u70b9\u7684\u8ddd\u79bb\u7684\u5e73\u65b9\uff0c\u6ce8\u610f\u8fd9\u91cc\u4e0d\u80fd\u5f00\u65b9\uff0c\u8981\u4e0d\u4f1a\u7206\u7cbe\u5ea6\u3002\ninline line make_line(point a,point b){\n    line ret;\n    ret.k=(a.y-b.y)/(a.x-b.x);\n    ret.b=a.y-a.x*ret.k;\n    return ret;\n}//\u8ba1\u7b97\u4e24\u70b9\u6784\u6210\u7684\u7ebf\uff0c\u8fd9\u9898\u6ca1\u6709\u7528\u5230\ninline double dis_ltop(point a,line b){\n    return abs(b.k*a.x+-1*a.y+b.b)/sqrt(1+b.k*b.k);\n}//\u8ba1\u7b97\u70b9\u5230\u76f4\u7ebf\u7684\u8ddd\u79bb\uff0c\u8fd9\u9898\u6ca1\u6709\u7528\u5230\ninline double dis_ltop(point a,point p,point q){\n    double d1=(q.x-p.x)*(a.x-p.x)+(q.y-p.y)*(a.y-p.y);//\u4e00\u4e9b\u795e\u5947\u7684\u6570\u5b66\u65b9\u6cd5\u3002\n    if(d1<=0)return dis(a,p);//\u5982\u679c\u65e9p\u70b9\u4e00\u4fa7\uff0c\u4e14\u5782\u8db3\u4e0d\u5728\u7ebf\u6bb5\u4e0a\uff0c\u8f93\u51faa\u5230p\u7684\u8ddd\u79bb\u3002\n    double d2=dis(p,q);\n    if(d1>=d2)return dis(a,q);//\u5982\u679c\u65e9q\u70b9\u4e00\u4fa7\uff0c\u4e14\u5782\u8db3\u4e0d\u5728\u7ebf\u6bb5\u4e0a\uff0c\u8f93\u51faa\u5230q\u7684\u8ddd\u79bb\u3002\n    double r=d1/d2;\n    point h;//\u6784\u9020\u5782\u8db3\n    h.x=p.x+(q.x-p.x)*r;\n    h.y=p.y+(q.y-p.y)*r;\n    return dis(h,a);\n    //return dis_ltop(a,make_line(p,q));\u4f1aWA\u7684\u7b97\u6cd5\uff0c\u56e0\u4e3a\u91cc\u9762\u6d89\u53ca\u5230\u4e00\u4e9b\u5f00\u65b9\u3002\n}//\u8ba1\u7b97\u70b9\u5230\u7ebf\u6bb5\u7684\u8ddd\u79bb\u3002\ndouble mx=-1e18,mn=1e18;//\u6ce8\u610f\u8981\u5f00\u5230\u5927\u4e00\u70b9\uff0c\u5982\u679c\u5f00\u5c0f\u4f1a\u88ab\u5361\u6389\u3002\nint main()\n{\n    cin>>n>>o.x>>o.y;\n    for(int i=1;i<=n;++i){\n        scanf(\"%lf%lf\",&p[i].x,&p[i].y);\n        double r=dis(p[i],o);\n        mx=max(mx,r);\n        mn=min(mn,r);\n\t}\n\tfor(int i=1;i<=n;++i){\n\t    int j=i+1;if(j>n)j-=n;\n\t    mn=min(mn,dis_ltop(o,p[i],p[j]));\n\t}\n\tprintf(\"%.18lf\",(mx-mn)*acos(-1));//acos(-1)\u51e0\u4e4e\u7b49\u4e8e\u5706\u5468\u7387\uff0c\u8fd9\u4e5f\u662f\u67d0\u4f4d\u4e0d\u613f\u900f\u9732\u59d3\u540d\u7684\u5927\u4f6c\u544a\u8bc9\u6211\u7684\u3002\n}\n```",
        "postTime": 1538120587,
        "uid": 48143,
        "name": "zhenglier",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF613A \u3010Peter and Snow Blower\u3011"
    },
    {
        "content": "\n\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\uff1a\u8fd9\u4e2a\u591a\u8fb9\u5f62\u626b\u8fc7\u7684\u9762\u79ef\u662f\u4e00\u4e2a\u5706\u73af\u5f62\u3002\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u627e\u51fa\u8fd9\u4e2a\u5706\u73af\u6700\u5916\u8fb9\u7684\u5706\u7684\u534a\u5f84\u4e0e\u6700\u91cc\u9762\u7684\u5706\u7684\u534a\u5f84\uff0c\u5c06\u4e24\u8005\u5e73\u65b9\u7684\u5dee\u4e58\u4e0a $\\pi$ \u5373\u53ef\u3002\u63a8\u5bfc\uff1a\u6700\u5927\u7684\u5706\u7684\u9762\u79ef\u4e3a $\\pi r_1^2$\uff0c\u6700\u5c0f\u7684\u5706\u7684\u9762\u79ef\u4e3a $\\pi r_2^2$\uff0c\u5706\u73af\u7684\u9762\u79ef\u4e3a\u4e24\u8005\u7684\u5dee\uff0c\u5373 $\\pi r_1^2 - \\pi r_2^2$\u3002\u63d0\u53d6 $\\pi$ \u8fd9\u4e2a\u516c\u56e0\u5b50\uff0c\u5f97\uff1a$\\pi (r_1^2 - r_2^2)$\u3002\n\n\u8fd9\u65f6\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u53ef\u4ee5\u5f97\u51fa\u4e00\u4e2a\u505a\u6cd5\uff1a\u5229\u7528\u8ddd\u79bb\u516c\u5f0f $dis = \\sqrt {(x_2 - x_1) ^2 + (y_2 - y_1)^2}$ \u8ba1\u7b97\u51fa\u6bcf\u4e2a\u70b9\u4e0e\u70b9 P \u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u7136\u540e\u53d6\u5176\u4e2d\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u5373\u53ef\u3002\u5f88\u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u4e2a\u505a\u6cd5\u5b58\u5728\u4e25\u91cd\u7684\u95ee\u9898\uff1a\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6700\u5c0f\u7684\u5706\u5e76\u4e0d\u662f\u7531\u70b9\u7ed5 P \u65cb\u8f6c\u5f97\u51fa\u7684\uff0c\u800c\u662f\u7531\u4e00\u6761\u8fb9\u7ed5\u70b9 P \u5f97\u51fa\u7684\u3002\u8fd9\u662f\u56e0\u4e3a\uff0c\u4e00\u6761\u8fb9\u5728\u65cb\u8f6c\u8fc7\u7a0b\u4e2d\u5f62\u6210\u7684\u5706\u7684\u534a\u5f84\u662f\u70b9 P \u5230\u5b83\u7684\u5782\u7ebf\uff0c\u5982\u679c\u8fd9\u6761\u5782\u7ebf\u7684\u957f\u5ea6\u5c0f\u4e8e\u79bb\u70b9 P \u6700\u8fd1\u7684\u70b9\u4e0e\u70b9 P \u7684\u957f\u5ea6\uff0c\u90a3\u4e48\u6700\u5c0f\u7684\u5706\u5c31\u662f\u7531\u8fd9\u6761\u7ebf\u6bb5\u8d21\u732e\u7684\u3002\n\n\u9996\u5148\uff0c\u9898\u76ee\u4e2d\u63d0\u5230\u6240\u6709\u7684\u8fb9\u90fd\u662f\u6309\u7167\u7ed9\u51fa\u70b9\u7684\u987a\u5e8f\u987a\u6b21\u8fde\u63a5\u7684\uff0c\u6240\u4ee5\u4e00\u5171\u7684\u8fb9\u6570\u4e3a $n$ \u6761\uff0c\u5b8c\u5168\u53ef\u4ee5\u904d\u5386\u4e00\u904d\u8fdb\u884c\u8ba1\u7b97\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n)$\u3002\u6211\u4eec\u63a5\u4e0b\u6765\u8003\u8651\uff0c\u5bf9\u4e8e\u6bcf\u4e24\u4e2a\u70b9\u6765\u8bf4\uff0c\u7ecf\u8fc7\u8fd9\u4e24\u4e2a\u70b9\u7684\u4e00\u6b21\u51fd\u6570\u7684\u89e3\u6790\u5f0f\u662f\u4ec0\u4e48\uff1a\u5bf9\u4e8e\u7ecf\u8fc7\u70b9 $(x_1, y_1)$\uff0c$(x_2, y_2)$ \u7684\u89e3\u6790\u5f0f $f(x) = kx + b$\uff0c\u6211\u4eec\u53ef\u4ee5\u5217\u51fa\u65b9\u7a0b\u7ec4\uff1a\n \n$\\begin{cases}kx_1 + b = y_1 \\space \\space \\space \\space \\space \\space 1\\\\kx_2 + b = y_2 \\space \\space \\space \\space \\space \\space 2\\end{cases}$\n\n\u7528 $1$ \u5f0f\u51cf $2$ \u5f0f\uff0c\u5f97\uff1a$k = \\dfrac{y_1 - y_2}{x_1 - x_2}$\uff0c$b = y_1 - kx_1 = y_1 - \\dfrac{y_1 - y_2}{x_1 - x_2}x_1$\u3002\n\n\u56e0\u6b64\uff0c\u8be5\u51fd\u6570\u7684\u89e3\u6790\u5f0f\u4e3a $f(x) = \\dfrac{y_1 - y_2}{x_1 - x_2} x + y_1 - \\dfrac{y_1-y_2}{x_1 - x_2}x_1$\u3002\n\n\u8fd9\u91cc\u6211\u4eec\u6709\u4e00\u4e2a\u6027\u8d28\uff1a\u4e24\u4e2a\u4e00\u6b21\u51fd\u6570\u5982\u679c\u4e92\u76f8\u5782\u76f4\uff0c\u90a3\u4e48\u5b83\u4eec\u7684\u659c\u7387\u4e4b\u79ef\u4e3a $-1$\u3002\u5177\u4f53\u8bc1\u660e\u5982\u4e0b\uff1a\n\n\u8bbe $f(x) = kx$\uff0c$g(x) = k'x$\uff0c\u51fd\u6570 $f(x)$ \u4e0e $x$ \u8f74\u7684\u5939\u89d2\u4e3a $\\alpha$\uff0c\u51fd\u6570 $g(x)$ \u4e0e $x$ \u8f74\u7684\u5939\u89d2\u4e3a $\\alpha + 90^{\\circ}$\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u51fd\u6570\u660e\u663e\u4e92\u76f8\u5782\u76f4\u3002\n\n\u6b64\u65f6\u6211\u4eec\u53d1\u73b0\uff1a$\\tan{\\alpha} = \\dfrac{y}{x} = k$\uff0c$\\tan(\\alpha + 90^{\\circ}) = \\dfrac{y}{x} = k'$\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ea\u8981\u8bc1\u660e $\\tan(\\alpha + 90^{\\circ}) = - \\dfrac{1}{\\tan\\alpha}$ \u5c31\u53ef\u4ee5\u8bc1\u660e $k' = -\\dfrac{1}{k}$\u4e86\u3002\n\n\u8bc1\u660e\uff1a$\\tan(\\alpha + 90^{\\circ}) = \\dfrac{\\sin(\\alpha + 90^{\\circ})}{\\cos(\\alpha + 90^{\\circ})} = \\dfrac{\\cos\\alpha}{-\\sin \\alpha} = - \\dfrac{1}{\\tan \\alpha}$\n\n$\\space \\space \\space \\space \\space \\space\\space \\space \\space \\space \\space \\space\\space \\space \\space \\space \\space \\space\\space \\space \\space \\space \\space \\space\\space \\space \\space \\space \\space \\space\\space \\space \\space \\space \\space \\space\\therefore k' = -\\dfrac{1}{k}$\n\n\u56e0\u4e3a\u4e24\u4e2a\u51fd\u6570\u662f\u5426\u5782\u76f4\u53ea\u4e0e\u5176\u659c\u7387\u6709\u5173\uff0c\u6240\u4ee5\u5982\u679c\u51fd\u6570 $f(x) = kx + b$ \u548c $g(x) = k'x + b'$ \u5782\u76f4\uff0c\u90a3\u4e48\u5fc5\u7136\u6709 $k' = -\\dfrac{1}{k}$\u3002\n\n\u7531\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u7b97\u51fa\u4e0e\u7ecf\u8fc7 $(x_1, y_1), (x_2, y_2)$ \u4e24\u70b9\u7684\u51fd\u6570\u5782\u76f4\u7684\u51fd\u6570\u7684\u659c\u7387\uff0c\u8bbe\u5176\u622a\u8ddd\u4e3a $b'$\uff0c\u5219\u5176\u89e3\u6790\u5f0f\u4e3a\uff1a$g(x) = \\dfrac{x_2 - x_1}{y_1 - y_2}x + b'$\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230 $f(x)$ \u548c $g(x)$ \u8fd9\u4e24\u4e2a\u51fd\u6570\u7684\u4ea4\u70b9\uff0c\u5373\u786e\u5b9a\u51fa $g(x) = f(x)$ \u7684 $x$ \u5373\u53ef\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5217\u51fa\u65b9\u7a0b\uff1a\n$$\n\\dfrac{x_2 - x_1}{y_1 - y_2}x + b' = \\dfrac{y_1 - y_2}{x_1 - x_2} x + y_1 - \\dfrac{y_1-y_2}{x_1 - x_2}x_1\n$$\n\u53c8\u56e0\u4e3a $g(x)$ \u7ecf\u8fc7\u70b9 P$(x_p, y_p)$\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5217\u51fa\u65b9\u7a0b\u7ec4\uff1a\n$$\n\\begin{cases}\n\\dfrac{x_2 - x_1}{y_1 - y_2}x + b' = \\dfrac{y_1 - y_2}{x_1 - x_2} x + y_1 - \\dfrac{y_1-y_2}{x_1 - x_2}x_1 \\\\\n\\\\\n\\dfrac{x_2 - x_1}{y_1 - y_2}x_p + b'= y_p \n\\end{cases}\n$$\n\u5316\u7b80\u53ef\u5f97\uff1a\n\n$\n\\begin{aligned}\nb' &= y_p - \\dfrac{x_2 - x_1}{y_1 - y_2}x_p \\\\\n\\dfrac{x_2 - x_1}{y_1 - y_2}x + y_p - \\dfrac{x_2 - x_1}{y_1 - y_2}x_p &= \\dfrac{y_1 - y_2}{x_1 - x_2}x + y_1 - \\dfrac{y_1-y_2}{x_1 - x_2}x_1  \\\\\n\\dfrac{x_2 - x_1}{y_1 - y_2}x - \\dfrac{y_1 - y_2}{x_1 - x_2}x &= y_1 - y_p + \\dfrac{x_2 - x_1}{y_1 - y_2}x_p -\\dfrac{y_1-y_2}{x_1 - x_2}x_1 \\\\\n(\\dfrac{x_2 - x_1}{y_1 - y_2} - \\dfrac{y_1 - y_2}{x_1 - x_2})x &= y_1 - y_p + \\dfrac{x_2 - x_1}{y_1 - y_2}x_p -\\dfrac{y_1-y_2}{x_1 - x_2}x_1 \\\\\nx &= \\dfrac{y_1 - y_p + \\dfrac{x_2 - x_1}{y_1 - y_2}x_p -\\dfrac{y_1-y_2}{x_1 - x_2}x_1}{\\dfrac{x_2 - x_1}{y_1 - y_2} - \\dfrac{y_1 - y_2}{x_1 - x_2}} \\\\\n\\end{aligned} $\n\n\u6b64\u65f6 $g(x)$ \u7684\u89e3\u6790\u5f0f\u4e3a $g(x) = \\dfrac{x_2 - x_1}{y_1 - y_2}x + y_p - \\dfrac{x_2 - x_1}{y_1 - y_2}x_p$\u3002\u5c06 $x$ \u4ee3\u5165\uff0c\u5f97\uff1a\n\n$y = \\dfrac{x_2 - x_1}{y_1 - y_2} \\times \\dfrac{y_1 - y_p + \\dfrac{x_2 - x_1}{y_1 - y_2}x_p -\\dfrac{y_1-y_2}{x_1 - x_2}x_1}{\\dfrac{x_2 - x_1}{y_1 - y_2} - \\dfrac{y_1 - y_2}{x_1 - x_2}} + y_p - \\dfrac{x_2 - x_1}{y_1 - y_2}x_p$\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6b64\u65f6\u5782\u8db3\u7684\u5750\u6807\u4e3a\uff1a\n\n$(\\dfrac{y_1 - y_p + \\dfrac{x_2 - x_1}{y_1 - y_2}x_p -\\dfrac{y_1-y_2}{x_1 - x_2}x_1}{\\dfrac{x_2 - x_1}{y_1 - y_2} - \\dfrac{y_1 - y_2}{x_1 - x_2}}, \\dfrac{x_2 - x_1}{y_1 - y_2} \\times \\dfrac{y_1 - y_p + \\dfrac{x_2 - x_1}{y_1 - y_2}x_p -\\dfrac{y_1-y_2}{x_1 - x_2}x_1}{\\dfrac{x_2 - x_1}{y_1 - y_2} - \\dfrac{y_1 - y_2}{x_1 - x_2}} + y_p - \\dfrac{x_2 - x_1}{y_1 - y_2}x_p)$\n\n\u6211\u4eec\u6b64\u65f6\u53ea\u9700\u8981\u8ba1\u7b97\u5782\u8db3\u548c\u70b9 P \u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u5c06\u5176\u4e0e\u67d0\u4e2a\u70b9\u5230\u70b9 P \u6700\u5c0f\u503c\u6bd4\u8f83\u5373\u53ef\uff08\u6700\u5927\u503c\u4e00\u5b9a\u662f\u70b9 P \u4e0e\u67d0\u8282\u70b9\u7684\u8ddd\u79bb\uff09\u3002\n\n\u6ce8\u610f\uff1a\u5f53 $x_1 = x_2$ \u65f6\uff0c$f(x)$ \u4e0d\u662f\u51fd\u6570\uff0c\u9700\u8981\u7279\u5224\uff1a\u6b64\u65f6\u5782\u8db3\u5750\u6807\u4e3a $(x_1, y_p)$\u3002\u5f53 $y_1 = y_2$ \u65f6\uff0c$g(x)$ \u4e0d\u662f\u51fd\u6570\uff0c\u9700\u8981\u7279\u5224\uff1a\u6b64\u65f6\u5782\u8db3\u5750\u6807\u4e3a $(x_p, y_1)$\u3002\u800c\u4e14\uff0c\u5f53\u5782\u8db3\u4e0d\u5728\u8be5\u7ebf\u6bb5\u4e0a\uff0c\u800c\u662f\u5728\u7ebf\u6bb5\u7684\u5ef6\u957f\u7ebf\u4e0a\u65f6\uff0c\u4e0d\u5e94\u8be5\u8ba1\u5165\u7b54\u6848\u4e2d\uff0c\u9700\u8981\u7279\u5224\u5782\u8db3\u6a2a\u5750\u6807\u4e0e\u7eb5\u5750\u6807\u662f\u5426\u90fd\u5927\u4e8e\u7b49\u4e8e\u7ebf\u6bb5\u4e24\u7aef\u70b9\u4e2d\u6a2a\u7eb5\u5750\u6807\u7684\u6700\u5c0f\u503c\u4e14\u5c0f\u4e8e\u7b49\u4e8e\u7ebf\u6bb5\u4e24\u7aef\u70b9\u4e2d\u6a2a\u7eb5\u5750\u6807\u7684\u6700\u5927\u503c\u3002\n\n\u7531\u4e8e\u7b54\u6848\u4e3a\u5e73\u65b9\u7684\u5dee\u4e0e $\\pi$ \u7684\u79ef\uff0c\u800c\u8ddd\u79bb\u516c\u5f0f\u4e2d\u53c8\u5e26\u6709\u6839\u53f7\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4e8c\u8005\u62b5\u6d88\uff1a\u8ba1\u7b97\u4e24\u70b9\u8ddd\u79bb\u65f6\u4e0d\u52a0\u6839\u53f7\uff0c\u8f93\u51fa\u7b54\u6848\u4e2d\u76f4\u63a5\u8f93\u51fa\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u7684\u5dee\u4e0e $\\pi$ \u7684\u79ef\u3002\n\n\n\n``` c++\n#include <iostream>\n#include <iomanip>\nusing namespace std;\nconst int N = 1e5+10;\nconst double Pi = 3.141592653589793238462643383;\n#define int double\nint n, Px, Py, cx, cy;\nint x[N], y[N];\nint maxn, minn;\nsigned Pair;\nint dis(int ax, int ay, int bx, int by) {return (ax - bx) * (ax - bx) + (ay - by) * (ay - by);}\nsigned main()\n{\n    cin >> n >> Px >> Py;\n    for (signed i = 1; i <= n; i++) cin >> x[i] >> y[i];\n    minn = 0x3f3f3f3f3f3f3f3f;\n    maxn = 0;\n    for (signed i = 1; i <= n; i++)\n    {\n        maxn = max(maxn, dis(Px, Py, x[i], y[i]));\n        minn = min(minn, dis(Px, Py, x[i], y[i]));\n    }\n    for (signed i = 1; i <= n; i++)\n    {\n        if (i == 1) Pair = n;\n        else Pair = i - 1;\n        if (x[Pair] == x[i])\n        {\n            cx = x[i];\n            cy = Py;\n        }\n        else if (y[Pair] == y[i])\n        {\n            cx = Px;\n            cy = y[i];\n        }\n        else\n        {\n            cx = (y[Pair] - Py + (x[i] - x[Pair]) / (y[Pair] - y[i]) * Px - (y[Pair] - y[i]) / (x[Pair] - x[i]) * x[Pair]) / ((x[i] - x[Pair]) / (y[Pair] - y[i]) - (y[Pair] - y[i]) / (x[Pair] - x[i]));\n            cy = (x[i] - x[Pair]) / (y[Pair] - y[i]) * cx + Py - (x[i] - x[Pair]) / (y[Pair] - y[i]) * Px;\n        }\n        if (cx < min(x[Pair], x[i]) || cx > max(x[Pair], x[i])) continue;\n        if (cy < min(y[Pair], y[i]) || cy > max(y[Pair], y[i])) continue;\n        minn = min(minn, dis(Px, Py, cx, cy));\n    }\n    cout << fixed << setprecision(16) << (maxn - minn) * Pi;\n    return 0;\n}\n```",
        "postTime": 1613363283,
        "uid": 312636,
        "name": "David24",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF613A \u3010Peter and Snow Blower\u3011"
    },
    {
        "content": "#### CF613A Peter and Snow Blower\n\n\u7b80\u5355\u51e0\u4f55\u9898\u76ee\u3002\n\n\u8d21\u732e\u4e00\u4e2a\u521d\u4e2d\u6570\u5b66\u89e3\u6cd5\uff0c~~\u5411\u91cf\u70b9\u79ef\u90fd\u62dc\u62dc~~\n\n\u9996\u5148\u8fd9\u9898\u76ee\u662f\u6c42\u4e00\u4e2a\u5706\u73af\u7684\u9762\u79ef\uff0c\u56e0\u6b64\u76f4\u63a5\u7b97\u51fa\u5916\u9762\u7684\u90a3\u4e2a\u5706\u7684\u534a\u5f84\u548c\u91cc\u8fb9\u8fd9\u4e2a\u5706\u7684\u534a\u5f84\u5373\u53ef\u3002\n\n\u5916\u8fb9\u7684\u6bd4\u8f83\u597d\u7b97\uff0c\u56e0\u4e3a\u6700\u8fdc\u7684\u4e00\u5b9a\u662f\u67d0\u4e2a\u9876\u70b9\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u628a\u6240\u6709\u7684\u9876\u70b9\u8ddd\u79bb\u53d6\u4e2a\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\u91cd\u70b9\u8ba8\u8bba\u91cc\u8fb9\u7684\u3002\n\n\u6700\u77ed\u8ddd\u79bb\u80af\u5b9a\u662f\u7ed9\u5b9a\u7684\u70b9\u5230\u67d0\u6761\u8fb9\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u90a3\u600e\u4e48\u6c42\u8fd9\u4e2a\u8ddd\u79bb\u5462\uff0c\u8003\u8651\u679a\u4e3e\u8fb9\uff0c\u7136\u540e\u70b9\u5230\u76f4\u7ebf\u4efb\u4e00\u70b9\u6700\u77ed\u8ddd\u79bb\u5c31\u662f\u5230\u5782\u8db3\u3002\n\n\u8bbe\u679a\u4e3e\u7684\u8fd9\u4e2a\u8fb9\u76f8\u90bb\u7684\u9876\u70b9\u662f$(x_1,y_1)$\u548c$(x_2,y_2)$\n\n\u90a3\u8fd9\u6761\u8fb9\u7684\u659c\u7387\u5373\u4e3a$k=\\frac{y_2-y_1}{x_2-x_1}$\n\n\u5e26\u5165\u4e00\u4e2a\u7aef\u70b9\u5373\u53ef\u6c42\u51fa\u89e3\u6790\u5f0f\uff0c\u6211\u4eec\u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbf\u8868\u793a\u8bbe\u5176\u4e3a$y=k_1x+b_1$\n\n\u7136\u540e\u8003\u8651\u4e24\u6761\u76f4\u7ebf\u5782\u76f4\u7684\u6027\u8d28\uff0c\u5982\u679c\u6709\u4e24\u6761\u76f4\u7ebf\u4e3a$y=kx+b$\u548c$y=Kx+B$\u6ee1\u8db3\u5782\u76f4\uff0c\u90a3\u4e48\u4e00\u5b9a\u6709$k\\times K=-1$\n\n\u5047\u8bbe\u8fd9\u6761\u5782\u7ebf\u7684\u89e3\u6790\u5f0f\u4e3a$y=k_2x+b_2$\uff0c\u90a3\u4e48$k_2=-\\frac{1}{k}$\u3002\n\n\u5e26\u5165\u5373\u53ef\u7b97\u51fa$b_2$\n\n\u8fd9\u4e2a\u65f6\u5019\u5782\u8db3\u5c31\u662f\u8fd9\u4e24\u6761\u76f4\u7ebf\u7684\u4ea4\u70b9\uff0c\u8054\u7acb\u5373\u53ef\u89e3\u51fa\u4ea4\u70b9\u5750\u6807\u3002\n\n\u5982\u679c\u8fd9\u4e2a\u70b9\u5728\u7ebf\u6bb5\u4e0a\u90a3\u4e48\u4ed6\u4e00\u5b9a\u6ee1\u8db3\u6a2a\u5750\u6807\u5927\u4e8e\u4e00\u4e2a\u7aef\u70b9\u800c\u5c0f\u4e8e\u53e6\u4e00\u4e2a\u7aef\u70b9\uff0c\u5bf9\u4e8e\u6ee1\u8db3\u6761\u4ef6\u7684\u5782\u8db3\u6211\u4eec\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002\n\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\u5982\u679c\u8fd9\u6761\u8fb9\u5e73\u884c\u4e8e\u5750\u6807\u8f74\u4f1a\u6b47\u903c\uff0c\u90a3\u4e48\u5224\u6389\u8fd9\u79cd\u60c5\u51b5\u5373\u53ef\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<cstdlib>\n#define N 200005\nusing namespace std;\nint read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}\n\treturn x*f;\n}\nint n;\ndouble maxn=0.0,minn=1e18,x[N],y[N],X,Y;\ndouble dis(int pos){return (x[pos]-X)*(x[pos]-X)+(y[pos]-Y)*(y[pos]-Y);}\ndouble calc(int pos)\n{\n\tdouble X1=x[pos],Y1=y[pos],x2=x[pos+1],y2=y[pos+1];\n\tif(X1==x2)\n\t{\n\t\tif(Y<min(Y1,y2)||Y>max(Y1,y2))return 1e18;\n\t\treturn fabs(X1-X)*fabs(X1-X);\n\t}\n\tdouble k=(y2-Y1)/(x2-X1),b=Y1-X1*k;\n\tdouble K=((k==0)?(1e18):(-1/k)),c=Y-K*X,posx=(b-c)/(K-k),posy=K*posx+c;\n\t//cout<<pos<<\" \"<<X1<<\" \"<<Y1<<\" \"<<x2<<\" \"<<y2<<\" \"<<posx<<\" \"<<posy<<\" \"<<k<<\" \"<<b<<\" \"<<K<<\" \"<<c<<endl;\n\tif(posx>max(X1,x2)||posx<min(X1,x2))return 1e18;\n\treturn (X-posx)*(X-posx)+(Y-posy)*(Y-posy);\n}\nint main()\n{\n\tn=read();X=read();Y=read();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tx[i]=read();\n\t\ty[i]=read();\n\t\tmaxn=max(maxn,dis(i));\n\t\tminn=min(minn,dis(i));\n\t}\n\tx[n+1]=x[1];y[n+1]=y[1];\n\tfor(int i=1;i<=n;i++)minn=min(minn,calc(i));\n\tprintf(\"%.18lf\\n\",(maxn-minn)*acos(-1));\n}\n\n```\n\n",
        "postTime": 1612528957,
        "uid": 179600,
        "name": "shao0320",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF613A \u3010Peter and Snow Blower\u3011"
    },
    {
        "content": "## \u6765\u53d1\u4e00\u4e2a\u5750\u6807\u8fd0\u7b97\u7684\u677f\u5b50\n\n\u601d\u8def\u7684\u8bdd[\u8fd9\u7bc7\u9898\u89e3](https://www.luogu.org/blog/A3080529100/solution-cf613a)\u5df2\u7ecf\u5199\u7684\u5f88\u6e05\u695a\u4e86,\u5177\u4f53\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u8ff0\u4e86\n\n\u4f46\u662f\u90a3\u7bc7\u9898\u89e3\u4e2d\u7684\u4e00\u4e9b\u8fd0\u7b97\u4e0d\u662f\u5f88\u5b8c\u5168\uff0c\u6240\u4ee5\u6765\u53d1\u4e2a\u8ba1\u7b97\u51e0\u4f55\u5e38\u7528\u6a21\u7248\n\n\u8d44\u74f7\u70b9\u548c\u76f4\u7ebf\u7684\u5404\u79cd\u8fd0\u7b97,\u5177\u4f53\u89c1\u4ee3\u7801\n\ncode:\n```cpp\n#include<bits/stdc++.h>\n#define reg register//register\u5361\u5e38 \n#define ll long long//\u4e0d\u5f00long long\u89c1\u7956\u5b97 \n#define inf 0x3f3f3f3f//lint\u65e0\u7a77\u5927\n#define iinf 0x3f3f3f3f3f3f3f3f//long long\u65e0\u7a77\u5927 \n#define pi acos(-1)//pi\u5728\u4e09\u89d2\u51fd\u6570\u4e0a\u7684\u6807\u51c6\u5b9a\u4e49,\u4e0d\u4f1a\u7684\u56de\u53bb\u770b\u9ad8\u4e00\u6570\u5b66 \nusing namespace std;\nclass point //\u5750\u6807\u7cfb\u4e2d\u7684\u70b9 \n{\n\tpublic:\n\t\tdouble x,y;//\u6a2a\u7eb5\u5750\u6807 \n\t\tpoint(reg double a=0,reg double b=0)\n\t\t{\n\t\t\tx=a;\n\t\t\ty=b;\n\t\t}//\u6784\u9020\u51fd\u6570 \n\t\tinline point operator-(const point &b)const\n\t\t{\n\t\t\treturn point(x-b.x,y-b.y);\n\t\t}//\u91cd\u8f7d\u8fd0\u7b97\u7b26 \n\t\tinline double operator*(const point &b)const\n\t\t{\n\t\t\treturn x*b.x+y*b.y;\n\t\t}//\u540c\u4e0a \n\t\tinline double operator^(const point &b)const\n\t\t{\n\t\t\treturn x*b.y-y*b.x;\n\t\t}//\u540c\u4e0a \n};//\u70b9\u7684\u6a21\u7248\n//\u4e0a\u9762\u7684\u8fd0\u7b97\u7b26\u652f\u6301\u5404\u79cd\u8fd0\u7b97 \nclass line //\u76f4\u7ebf\n//\u6838\u5fc3\u601d\u60f3:\u4e00\u6b21\u51fd\u6570\u7684\u4e24\u70b9\u5f0f \n{\n\tpublic:\n\t\tpoint s,e;//\u4e24\u70b9 \n\t\tline(point a=point(),point b=point())\n\t\t{\n\t\t\ts=a;\n\t\t\te=b;\n\t\t}//\u6784\u9020\u51fd\u6570 \n};\nll n;//\u6570\u636e\u4e2a\u6570 \ndouble l,r=iinf;//r\u8981\u9884\u5148\u521d\u59cb\u5316\u4e3a\u65e0\u7a77\u5927 \npoint p,a[100005];//\u5b9a\u4e49\u70b9 \ninline double len(reg point a)\n{\n\treturn sqrt(a*a);\n}\ninline double dis(reg point a,reg point b,reg point c)//\u70b9a\u5230\u76f4\u7ebfbc\u7684\u6a21\u7248 \n{\n\tpoint x=a-b,y=c-b,z=c-a;\n\tif((x*y)<0)return len(x);\n\tif((y*z)<0)return len(z);//\u76f4\u63a5\u5904\u7406 \n\t//return fabs((x^y)/getlen(y));\n\tpoint v=c-b;\n\tdouble t=((a-b)*v)/(v*v);\n\tpoint fot=point(b.x+t*v.x,b.y+t*v.y);//\u6c42\u5782\u8db3\uff0c\u6838\u5fc3\u601d\u60f3 \n\treturn sqrt((fot.x-a.x)*(fot.x-a.x)+(fot.y-a.y)*(fot.y-a.y));\n}//\u70b9\u5230\u76f4\u7ebf\u7684\u8ddd\u79bb \u6a21\u7248 \n//\u4e0b\u9762\u662f\u7b80\u5355\u7684\u4e3b\u51fd\u6570 \nint main()\n{\n\tscanf(\"%lld%lf%lf\",&n,&p.x,&p.y);\n\tfor(reg ll i=1;i<=n;i++)scanf(\"%lf%lf\",&a[i].x,&a[i].y);\n\ta[n+1]=a[1];//\u5904\u7406\u73af\u7684\u5e38\u7528\u65b9\u6cd5 \n\tfor(reg ll i=1;i<=n;i++)\n\t{\n\t\tl=max(l,len(a[i]-p));//\u6700\u5927 \n\t\tr=min(r,dis(p,a[i],a[i+1]));//\u6700\u5c0f\n\t\t//\u5206\u522b\u8ba1\u7b97\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c \n\t}\n\tprintf(\"%.8f\",pi*(l*l-r*r));//\u8f93\u51fa\u7ed3\u679c\uff0c\u8bb0\u5f97\u4e58pi \n\treturn 0;//\u5706\u6ee1\u7684\u7ed3\u675f \n}\n```\n",
        "postTime": 1552804179,
        "uid": 48993,
        "name": "liuyifan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF613A \u3010Peter and Snow Blower\u3011"
    },
    {
        "content": "~~\u6765\u6c34\u4e00\u7bc7\u5411\u91cf\u9898\u89e3~~\n\n\u7b2c\u4e00\u773c\u4e00\u770b\uff1a\u591a\u8fb9\u5f62\u626b\u8fc7\u7684\u9762\u79ef\u4e0d\u5c31\u662f\u4e2a\u5706\u73af\u5417\uff0c\u4e0d\u5c31\u8bb0\u5f55\u4e2a\u5b9a\u70b9\u5230\u6bcf\u4e2a\u70b9\u7684\u957f\u5ea6\u7684\u6700\u503c\u5417 $r_{max},r_{min}$ \u7136\u540e\u7b54\u6848\u5c31\u662f $\\pi(r_{max}^2-r_{min}^2)$ \uff0c\u4ea4\u4e0a\u53bb\uff1a $\\text{Wrong answer on test 3}$ \uff0c~~\u76f4\u63a5\u7206\u7c97\u53e3~~\u3002\n\n\u7ecf\u8fc7 $n$ \u5206\u949f\u540e\u7a81\u7136\u610f\u8bc6\u5230\u8c8c\u4f3c\u8fd8\u8981\u770b\u770b\u5b9a\u70b9\u5230\u6bcf\u6761\u8fb9\uff08**\u6ce8\u610f\uff1a\u8fb9\u662f\u6761\u7ebf\u6bb5\uff0c\u4e0d\u662f\u76f4\u7ebf**\uff09\u7684\u8ddd\u79bb\u8bf6\n\n\u524d\u7f6e\u829d\u58eb\uff1a\u70b9\u4e58\uff0c\u53c9\u4e58\n\n\u4e0b\u9762\u4e3b\u8981\u8bb2\u5982\u4f55\u8ba1\u7b97\u5b9a\u70b9\u5230**\u7ebf\u6bb5**\u7684\u8ddd\u79bb\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/2tz9kp03.png)\n\n(\u5148\u653e\u4e00\u5f20\u56fe)\n\n1) \u5982\u4f55\u5224 $D$ \u662f\u5426\u5728**\u7ebf\u6bb5** $BC$ \u4e0a\n\n\u5f88\u660e\u663e\uff1a\u53ea\u8981 $\\angle B, \\angle C < \\frac{\\pi}{2}$ \u5c31\u53ef\u4ee5\u4e86\uff0c\u7531\u4e8e\u7b97\u89d2\u5ea6\u7cbe\u5ea6\u8f83\u4f4e\uff0c\u6240\u4ee5\u5c31\u6709\u4e86\u70b9\u79ef\u7684\u65b9\u6cd5\uff1a\n\n\u6784\u9020\u5411\u91cf $\\vec{BA}, \\vec{BC}$ \u5982\u679c $\\vec{BA}\\cdot\\vec{BC} \\ge 0$ \u5219 $D$ \u5728\u7ebf\u6bb5 $BC$ \u4e0a\uff0c\u53cd\u4e4b\u4e0d\u7136\u3002\n\n2) \u5982\u4f55\u7b97 $A$ \u5230 $BC$ \u7684\u8ddd\u79bb\n\n\uff08\u7a0d\u5fae\u5410\u69fd\u76f4\u7ebf\u65b9\u7a0b\u4ebf\u79d2\u949f\uff0c\u5dee\u70b9\u6ca1\u7b97 s \u6211\uff09\n\n\u7531\u4e8e\u4e8c\u7ef4\u7684\u5411\u91cf\u53c9\u79ef\u53ef\u4ee5\u8868\u793a\u5411\u91cf\u7ec4\u6210\u7684\u5e73\u884c\u56db\u8fb9\u5f62\u7684\u9762\u79ef\uff0c\u800c\u5e73\u884c\u56db\u8fb9\u5f62\u7684\u9762\u79ef\u6709\u7b49\u4e8e $AD\\times BC$ \uff0c $BC$ \u53ef\u4ee5\u7528\u4e24\u70b9\u8ddd\u79bb\u516c\u5f0f\u7b97\u51fa\u6765\uff0c\u4e8e\u662f\u8fd9\u9053\u9898\u5c31\u89e3\u51b3\u4e86\u3002\n\n\u8d34\u4e0a\u4ee3\u7801\n```cpp\ndouble pi = acos(-1);\nstruct point {\n\tdouble x, y;\n\tpoint(double _x = 0, double _y = 0)\n\t\t: x(_x), y(_y) {}\n\tinline void read() {\n\t\tcin >> x >> y;\n\t}\n\tinline friend double dist(point a, point b) {//\u4e24\u70b9\u8ddd\u79bb\u516c\u5f0f\n\t\tdouble sq1 = (a.x - b.x), sq2(a.y - b.y);\n\t\treturn sqrt(sqr(sq1) + sqr(sq2));\n\t}\n\tinline friend bool operator==(point a, point b) {\n\t\treturn a.x == b.x && a.y == b.y;\n\t}\n\tinline friend bool operator!=(point a, point b) {\n\t\treturn a.x != b.x || a.y != b.y;\n\t}\n\tinline friend point operator-(point a, point b) {\n\t\treturn point(a.x - b.x, a.y - b.y);\n\t}\n\tinline friend point operator+(point a, point b) {\n\t\treturn point(a.x + b.x, a.y + b.y);\n\t}\n\tinline friend double cross(point a, point b) {//\u53c9\u4e58\u7684\u5750\u6807\u8fd0\u7b97\n\t\treturn a.x * b.y - a.y * b.x;\n\t}\n\tinline friend double dot(point a, point b) {//\u70b9\u4e58\u7684\u5750\u6807\u8fd0\u7b97\n\t\treturn a.x * b.x + a.y * b.y;\n\t}\n\tinline friend point operator*(point a, double b) {\n\t\treturn point(a.x * b, a.y * b);\n\t}\n};\ndouble dist_sqr(point a, point b) {//\u4e24\u70b9\u8ddd\u79bb\u7684\u5e73\u65b9\n\treturn sqr(a.x - b.x) + sqr(a.y - b.y);\n}\ninline double distl_sqr(point a, point p, point q) {//\u70b9\u5230\u76f4\u7ebf\n\tif (dot(a - q, p - q) < 0 || dot(a - p, q - p) < 0)//$D$ \u6ca1\u5728 $BC$ \u4e0a\n\t\treturn dist_sqr(a, p);\n\treturn cross(p - a, q - a) * cross(p - a, q - a) / dist_sqr(p, q);//\u8fd4\u56de $cross(p - a, q - a) / dist(p, q)$ \u7684\u5e73\u65b9\n}\nsigned main() {\n\tint n; cin >> n;\n\tpoint rt; rt.read();\n\tvector<point> p(n);\n\tdouble maxi = 0, mini = 1e18;//$r_{max}^2$ \u548c $r_{min}^2$\n\tfor (int i = 0; i < n; i++)\n\t\tp[i].read();\n\tfor (int i = 0; i < n; i++)\n\t\tmaxi = max(maxi, dist_sqr(p[i], rt)), mini = min(mini, dist_sqr(p[i], rt));\n\tfor (int i = 0; i < n; i++) {\n\t\tpoint a = p[i], b = p[(i + 1) % n];\n\t\tmini = min(mini, distl_sqr(rt, a, b));//\u53ea\u9700\u8981\u66f4\u65b0\u6700\u8fd1\u70b9\uff0c\u6700\u8fdc\u70b9\u4e00\u5b9a\u5728\u591a\u8fb9\u5f62\u7684\u5b9a\u70b9\u4e0a\n\t}\n\tprintf(\"%.7llf\", pi * (maxi - mini));\n}\n```",
        "postTime": 1659971103,
        "uid": 404307,
        "name": "Toothless03",
        "ccfLevel": 0,
        "title": "[CF613A Peter and Snow Blower] \u9898\u89e3"
    }
]