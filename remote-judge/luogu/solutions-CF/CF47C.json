[
    {
        "content": "### \u9898\u610f\u7b80\u8ff0\n\u73b0\u5728\u6709 6 \u4e2a\u5b57\u7b26\u4e32\uff0c\u8ba9\u4f60\u628a\u4ed6\u4eec\u6446\u6210\u4e00\u4e2a 8 \u5b57\u5f62\uff0c\u4f7f\u5f97\u4ea4\u53c9\u5904\u76f8\u7b49\u3002\u8f93\u51fa\u6446\u653e\u540e\u7684\u4f4d\u7f6e\u3002\n\n\uff08\u6765\u81ea\u7ffb\u8bd1\uff09\n\n---\n\n### \u601d\u8def\n\u8bfb\u9898\uff0c\u53d1\u73b0\u9898\u76ee\u4e2d\u7684\u6570\u636e\u8303\u56f4\uff1a\n\n- \u516d\u884c\u5305\u542b\u7ed9\u5b9a\u7684\u5355\u8bcd\u3002\u6bcf\u4e2a\u5355\u8bcd\u7531\u4e0d\u8d85\u8fc7 30 \u4e2a\u4e14\u4e0d\u5c11\u4e8e 3 \u4e2a\u5927\u5199\u62c9\u4e01\u5b57\u6bcd\u7ec4\u6210\u3002\n\n\u6211\u4eec\u53d1\u73b0\u5355\u8bcd\u6570\u91cf\u53ea\u6709 6\uff0c\u5e76\u4e14\u6bcf\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7 30\uff0c\u6240\u4ee5\u8003\u8651\u66b4\u529b\u6c42\u89e3\u3002\n\n&nbsp;\n\n\u518d\u6b21\u56de\u987e\u9898\u76ee\uff0c\u53ef\u4ee5\u53d1\u73b0\u9898\u76ee\u4e2d\u8fd8\u6709\u8fd9\u4e48\u4e00\u53e5\u8bdd\uff1a\n\n- \u6309\u7167\u5b57\u5178\u5e8f\u8f93\u51fa\u6700\u5c0f\u7684\u7b54\u6848\u3002\n\n\u6bd4\u8f83\u90e8\u5206\u4ee3\u7801\u5982\u4e0b\uff1a\n\uff08minimum \u6570\u7ec4\u4e3a\u5f53\u524d\u6700\u5c0f\uff0cres \u4e3a\u5f85\u6bd4\u8f83\u6570\u7ec4\uff0cresn \u4e3a\u5f85\u6bd4\u8f83\u6570\u7ec4\u957f\u5ea6\uff0c$minn$ \u4e3a\u5f53\u524d\u6700\u5c0f\u6570\u7ec4\u957f\u5ea6\uff0cstep \u4e3a\u5f53\u524d\u6bd4\u8f83\u7684\u884c\u5e8f\u53f7\uff0c`maxstep=min(minn,resn)`\uff09\n```cpp\nbool check3(int step,int maxstep,string res[110],int resn){\n\tif (step==maxstep+1) return resn<minn; //\u5982\u679c\u7b49\u5230\u4e00\u4e2a\u88ab\u6bd4\u8f83\u5b8c\uff0c\u53e6\u4e00\u4e2a\u8fd8\u6709\u4f59\uff0c\u90a3\u4e48\u88ab\u6bd4\u8f83\u5b8c\u7684\u66f4\u5c0f\u3002\n\tif (res[step]<minimum[step]) return true;//\u5982\u679c\u5f85\u6bd4\u8f83\u6570\u7ec4\u7684\u67d0\u4e00\u884c\u5c0f\u4e8e\u5f53\u524d\u6700\u5c0f\uff0c\u7ed3\u675f\u6bd4\u8f83\n\telse if (res[step]>minimum[step]) return false;//\u548c\u4e0a\u4e00\u884c\u540c\u7406\n\telse return check3(step+1,maxstep,res,resn);//\u5982\u679c\u4e24\u884c\u76f8\u7b49\uff0c\u6bd4\u8f83\u4e0b\u4e00\u884c\n}\n```\n\n---\n\n### \u5b9e\u73b0\n\u81f3\u6b64\uff0c\u6211\u4eec\u5df2\u7ecf\u5b8c\u6210\u4e86\u4e3b\u4f53\u90e8\u5206\u6784\u601d\u3002\u4e0b\u9762\u9488\u5bf9\u641c\u7d22\u90e8\u5206\u7ed9\u51fa\u5b9e\u73b0\u3002\n\n```cpp\nvoid dfs(int step,int state[7]){\n\tif (step==6){//\u516d\u4e2a\u5b57\u7b26\u4e32\u4f4d\u7f6e\u786e\u5b9a\n\t\tif (check2(state)){//\u6ee1\u8db3\u516b\u5b57\u8981\u6c42\n\t\t\tflag=true;//\u6807\u8bb0\u627e\u5230\u7b54\u6848\n\t\t\tint n=str[state[3]].size();\n\t\t\tint m=str[state[4]].size();\n\t\t\tchar ch[110][110];\n\t\t\tstring result[110];\n\t\t\tfor (int i=1;i<=n;i++) for (int j=1;j<=m;j++) ch[i][j]='.';//\u7b54\u6848\u521d\u59cb\u5316\n\t\t\tfor (int i=1;i<110;i++) result[i]=\"\";//\u7b54\u6848\u521d\u59cb\u5316\n\t\t\tfor (int i=1;i<=str[state[1]].size();i++) ch[1][i]=str[state[1]][i-1];//\u672c\u884c\u548c\u4ee5\u4e0b5\u884c\u5747\u4e3a\u7ed8\u56fe\n\t\t\tfor (int i=1;i<=str[state[2]].size();i++) ch[i][1]=str[state[2]][i-1];\n\t\t\tfor (int i=1;i<=str[state[3]].size();i++) ch[i][str[state[1]].size()]=str[state[3]][i-1];\n\t\t\tfor (int i=1;i<=str[state[4]].size();i++) ch[str[state[2]].size()][i]=str[state[4]][i-1];\n\t\t\tfor (int i=str[state[2]].size();i<=n;i++) ch[i][m]=str[state[5]][i-str[state[2]].size()];\n\t\t\tfor (int i=str[state[1]].size();i<=m;i++) ch[n][i]=str[state[6]][i-str[state[1]].size()];\n\t\t\tfor (int i=1;i<=n;i++) for (int j=1;j<=m;j++) result[i]+=ch[i][j];//\u5c06\u6b64\u7b54\u6848\u5b58\u5165string\u6570\u7ec4\u4e2d\n\t\t\tif (check3(1,min(n,minn),result,n)){//\u6c42\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u7b54\u6848\n\t\t\t\tminn=n;\n\t\t\t\tfor (int i=1;i<=n;i++) minimum[i]=result[i];\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\tfor (int i=1;i<=6;i++){//dfs\u57fa\u7840\n\t\tif (check(state,i,step)){\n\t\t\tstate[step+1]=i;\n\t\t\tdfs(step+1,state);\n\t\t}\n\t}\n}\n```\n\ncheck \u51fd\u6570\u4ee3\u7801\u5982\u4e0b\uff08\u5224\u65ad\u5728\u5f53\u524d\u72b6\u6001\u4e2d\u67d0\u6570\u662f\u5426\u5df2\u88ab\u53d6\u8fc7\uff09\n```cpp\nbool check(int state[7],int num,int cnt){\n\tfor (int i=1;i<=cnt;i++){\n\t\tif (num==state[i]) return false;\n\t}\n\treturn true;\n}\n```\n\ncheck2 \u51fd\u6570\u4ee3\u7801\u5982\u4e0b\uff08\u5224\u65ad\u516b\u5b57\u662f\u5426\u5408\u6cd5\uff09\n```cpp\nbool check2(int state[7]){\n\tif (str[state[2]].size()+str[state[5]].size()-1!=str[state[3]].size()) return false;//\u5224\u65ad\u7eb5\u5411\u957f\u5ea6\u662f\u5426\u6b63\u786e\n\tif (str[state[1]].size()+str[state[6]].size()-1!=str[state[4]].size()) return false;//\u5224\u65ad\u6a2a\u5411\u957f\u5ea6\u662f\u5426\u6b63\u786e\n\tif (str[state[1]][0]!=str[state[2]][0]) return false;//\u672c\u884c\u548c\u4e0b\u65b9\u516d\u884c\u5224\u65ad\u4ea4\u70b9\u5b57\u6bcd\u662f\u5426\u76f8\u540c\n\tif (str[state[1]][str[state[1]].size()-1]!=str[state[3]][0]) return false;\n\tif (str[state[2]][str[state[2]].size()-1]!=str[state[4]][0]) return false;\n\tif (str[state[3]][str[state[3]].size()-1]!=str[state[6]][0]) return false;\n\tif (str[state[4]][str[state[4]].size()-1]!=str[state[5]][0]) return false;\n\tif (str[state[3]][str[state[2]].size()-1]!=str[state[4]][str[state[1]].size()-1]) return false;\n\tif (str[state[5]][str[state[5]].size()-1]!=str[state[6]][str[state[6]].size()-1]) return false;\n\treturn true;//\u90fd\u6ee1\u8db3\u8fd4\u56de true\n}\n```\n\n---\n\n### \u4ee3\u7801\n\u81f3\u6b64\uff0c\u5927\u90e8\u5206\u5b9e\u73b0\u90fd\u5df2\u7ed3\u675f\uff0c\u5b8c\u6574\u4ee3\u7801\u5c31\u4e0d\u653e\u4e86\uff0c\u5927\u5bb6\u53ef\u4ee5\u901a\u8fc7 [\u6211\u7684CF\u8bb0\u5f55\u5165\u53e3](https://codeforces.com/contest/47/submission/165733120) \u5b66\u4e60\u4ee3\u7801\u3002\n\n---\n\n### \u6700\u540e\u7684\u6700\u540e\n\u5728\u8fd9\u91cc\uff0c\u6211\u60f3\u548c\u5927\u5bb6\u5206\u4eab\u4e00\u4e0b\u6211\u505a\u8fd9\u9053\u9898\u65f6\u9047\u5230\u7684\u4e00\u4e9b\u5751\u3002\n\n[\u7b2c 1 \u6b21\u63d0\u4ea4](https://codeforces.com/contest/47/submission/165730712)\uff1a\u6392\u5e8f\u65f6 cmp \u51fd\u6570\u5199\u9519\u5bfc\u81f4\u7b54\u6848\u9519\u8bef\u3002\n\n[\u7b2c 2 \u6b21\u63d0\u4ea4](https://codeforces.com/contest/47/submission/165730875)\uff1a\u5224\u65ad\u4ea4\u70b9\u4ee3\u7801\u5c11\u5199\u4e00\u884c\u5e76\u4e14\u6ca1\u6709 return \u5bfc\u81f4\u7b54\u6848\u9519\u8bef\u3002\n\n[\u7b2c 3 \u6b21\u63d0\u4ea4](https://codeforces.com/contest/47/submission/165731146)\uff1a\u8f93\u51fa\u65f6\u628a $m$ \u5199\u6210 $n$ \u5e76\u4e14\u6ca1\u6709 return \u5bfc\u81f4\u7b54\u6848\u9519\u8bef\u3002\n\n[\u7b2c 4 \u6b21\u63d0\u4ea4](https://codeforces.com/contest/47/submission/165731224)\uff1a\u521d\u59cb\u5316\u65f6\u628a $m$ \u5199\u6210 $n$ \u5bfc\u81f4\u7b54\u6848\u9519\u8bef\u3002\n\n[\u7b2c 5 \u6b21\u63d0\u4ea4](https://codeforces.com/contest/47/submission/165731867)\uff1a\u5199\u4e86\u4e24\u6b21 dfs\uff0c\u4f46\u662f\u53ea\u4fdd\u8bc1\u4e86\u7b2c\u4e00\u884c\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u5bfc\u81f4\u7b54\u6848\u9519\u8bef\u3002\n\n[\u7b2c 6 \u6b21\u63d0\u4ea4](https://codeforces.com/contest/47/submission/165733034)\uff1a\u91cd\u6784\u4ee3\u7801\uff0c\u4f46\u662f\u628a\u5224\u65ad\u662f\u5426\u65e0\u89e3\u7684\u4ee3\u7801\u653e\u5728\u4e86\u8f93\u51fa\u8bed\u53e5\u540e\uff0c\u5bfc\u81f4\u7b54\u6848\u9519\u8bef\u3002\n\n[\u7b2c 7 \u6b21\u63d0\u4ea4](https://codeforces.com/contest/47/submission/165733120)\uff1aAccepted\u3002\n\n---\n\u611f\u8c22\u60a8\u80fd\u770b\u5230\u8fd9\u91cc\u3002",
        "postTime": 1658802920,
        "uid": 158025,
        "name": "Confringo",
        "ccfLevel": 0,
        "title": "CF47C Crossword \u9898\u89e3"
    },
    {
        "content": "\u4e4b\u524d\u90a3\u7bc7\u9898\u89e3\u89e3\u91ca\u5f97\u4e0d\u662f\u7279\u522b\u6e05\u695a\uff0c\u6211\u6765\u53d1\u4e2a\u9898\u89e3\u8bf4\u4e00\u4e0b\u3002\n\n### \u9898\u76ee\u5927\u610f\n\n\u8fd9\u9053\u9898\u610f\u601d\u4e00\u770b\u6837\u4f8b\u5c31\u61c2\u4e86\u3002\u628a\u516d\u4e2a\u5b57\u7b26\u4e32\u62fc\u63a5\u6210\u4e00\u4e2a\u201c8\u201d \u5b57\u5f62\u3002\n\n### \u601d\u8def\n\n\u968f\u4fbf\u9009\u4e00\u4e2a\u6837\u4f8b\u8fdb\u884c\u89c2\u5bdf\u3002\u8fd9\u91cc\u9009\u62e9\u6837\u4f8b3\u3002\n\n```plain\nJJFS....\nY..S....\nN..X....\nY..X....\nF..Q....\nD..O....\nS..F....\nG..G....\nIXEJNDOP\n...U...T\n...ZGPPC\n```\n\n\u6211\u4eec\u53d1\u73b0\u201c8\u201d\u5b57\u7531 $6$ \u4e2a\u5355\u8bcd\u6784\u6210\uff0c\u5206\u522b\u662f $3$ \u4e2a\u6a2a\u7684\uff0c $3$ \u4e2a\u7ad6\u7684\u3002\n\n\u89c2\u5bdf\u4e00\u4e0b\u8fd9\u4e09\u4e2a\u6a2a\u7684\u5355\u8bcd\uff1a\n\n```plain\nJJFS.... // \u957f\u5ea6\u4e3a4\n........\nIXEJNDOP // \u957f\u5ea6\u4e3a8\n........\n...ZGPPC // \u957f\u5ea6\u4e3a5\n```\n\n\u53d1\u73b0 $4 + 5 - 1 = 8$\u3002\n\n\u518d\u89c2\u5bdf\u7ad6\u7740\u7684\u4e09\u4e2a\u5355\u8bcd\uff1a\n\n```plain\nJ..S....\nY..S....\nN..X....\nY..X....\nF..Q....\nD..O....\nS..F....\nG..G....\nI..J...P\n...U...T\n...Z...C\n// \u957f\u5ea6\u5206\u522b\u4e3a 9, 11, 3\n```\n\n\u53d1\u73b0 $3 + 9 - 1 = 11$\u3002\n\n\u8fd9\u6837\u89c4\u5f8b\u5c31\u5f88\u660e\u663e\u4e86\u3002\n\n\u5bf9\u4e8e $6$ \u4e2a\u957f\u5ea6\u5206\u522b\u4e3a $a, b, c, d, e, f$ \u7684\u5b57\u7b26\u4e32\uff0c\u53ea\u8981\u6ee1\u8db3 $a + b - 1 = c, d + e - 1 = f$ \uff0c\u5c31\u53ef\u4ee5\u6784\u6210\u4e00\u4e2a $8$ \u5b57\u5f62\u3002\n\n\u8fd9\u91cc\u751f\u6210\u8fd9\u4e2a\u6ee1\u8db3\u8981\u6c42\u7684\u5b57\u7b26\u4e32\u6392\u5217\u65f6\u5019\u4f7f\u7528 `algorithm` \u91cc\u7684 `next_permutation` \u51fd\u6570\u3002\n\n\u8fd9\u4e2a\u51fd\u6570\u53ef\u4ee5\u751f\u6210\u4e00\u4e2a\u6570\u7ec4\u7684\u5168\u90e8\u6392\u5217\uff0c\u6bd4\u5982\u5bf9\u4e8e\u4e00\u4e2a\u6570\u7ec4 `1 2 3 4`\uff0c\u4e0d\u65ad\u8c03\u7528\u5b83\uff0c\u53ef\u4ee5\u4f7f\u6570\u7ec4\u91cc\u7684\u6570\u53d8\u6210 `1 2 4 3`, `1 3 2 4`, `1 3 4 2`, `1 4 2 3`, `1 4 3 2`, `2 1 3 4`, ...\n\n\u6bcf\u6b21\u751f\u6210\u4e00\u4e2a\u6392\u5217\u7684\u65f6\u5019\uff0c\u5224\u65ad\u5b83\u662f\u5426\u5408\u6cd5\uff0c\u5982\u679c\u5408\u6cd5\u5c31\u8f93\u51fa\u3002\u8fd9\u8fc7\u7a0b\u4e2d\u6709\u5f88\u591a\u7ec6\u8282\u8981\u6ce8\u610f\u3002\n\n\u6700\u5751\u7684\u662f\uff0c\u8fd9\u9898\u4e0d\u662fSPJ\uff0c\u4ed6\u8981\u4f60\u8f93\u51fa**\u6309\u5b57\u5178\u5e8f\u6392\u5e8f\u6700\u5c0f**\u7684\u90a3\u4e2a\u89e3\u3002\n\n\u56e0\u4e3a\u52a0\u5165\u4e86\u8fd9\u4e2a\u9650\u5236\uff0c\u5c31\u4e0aSTL\u5427\u3002\n\n### \u4ee3\u7801\uff08\u542b\u6ce8\u91ca\uff09\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <string>\n#include <iostream>\n#include <vector>\nusing std::string; // \u4f7f\u7528std::string\u89e3\u51b3\u672c\u9898\nusing std::cin;\nusing std::cout;\nusing std::endl;\nstring a[1001];\n// \u7528STL\u66f4\u65b9\u4fbf\uff0c\u56e0\u4e3a\u81ea\u5e26\u6bd4\u8f83\u5927\u5c0f\u3001\u6392\u5e8f\u7684\u529f\u80fd\nstd::vector<string> best; // \u76ee\u524d\u6700\u4f18\u76848\u5b57\u5f62\u65b9\u6848\uff08\u52a8\u6001\u6570\u7ec4\uff09\nstd::vector<string> res; // \u5f53\u524d\u8ba1\u7b97\u51fa\u76848\u5b57\u5f62\u65b9\u6848\uff08\u52a8\u6001\u6570\u7ec4\uff09\nint main() {\n\tfor (int i = 1; i <= 6; i += 1) {\n\t\tcin >> a[i]; // \u8f93\u5165\n\t}\n\tstd::sort(a + 1, a + 7); // \u5148\uff08\u6309\u5b57\u5178\u5e8f\uff09\u6392\u5e8f\n\tdo {\n\t\t// \u5982\u679c\u6ee1\u8db3 a + b - 1 = c \u4e14 d + e - 1 = f\n\t\tif (a[1].length() + a[3].length() - 1 == a[2].length()\n\t\t &&  a[4].length() + a[6].length() - 1 == a[5].length()) {\n\t\t\t// \u5224\u65ad\u5355\u8bcd\u7684\u4ea4\u70b9\u5904\u662f\u4e0d\u662f\u540c\u4e00\u4e2a\u5b57\u6bcd\uff0c\u5982\u679c\u4e0d\u662f\u5219\u9000\u51fa\uff08\u8fd9\u90e8\u5206\u7684\u4e0b\u6807\u6bd4\u8f83\u641e\u8111\u5b50\uff0c\u6ce8\u610f\u4e86\uff09\n\t\t\t// a[m][a[m].length() - 1] \u8868\u793a\u7b2cm\u4e2a\u5b57\u7b26\u4e32\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\n\t\t \tif (a[1][0] != a[4][0]) continue;\n\t\t \tif (a[1][a[1].length() - 1] != a[5][0]) continue;\n\t\t \tif (a[4][a[4].length() - 1] != a[2][0]) continue;\n\t\t \tif (a[2][a[1].length() - 1] != a[5][a[4].length() - 1]) continue;\n\t\t \tif (a[2][a[2].length() - 1] != a[6][0]) continue;\n\t\t \tif (a[6][a[6].length() - 1] != a[3][a[3].length() - 1]) continue;\n\t\t \tif (a[5][a[5].length() - 1] != a[3][0]) continue;\n\t\t \t\n\t\t\t// \u521d\u59cb\u5316res\uff0c\u521d\u59cb\u5316\u4e3a\u5168\u662f '.' \u7684\n\t\t\t// res\u6570\u7ec4\u4e0b\u6807\u4ece0\u5f00\u59cb\n\t\t \tres = std::vector<string>(a[5].size(), string(a[2].size(), '.'));\n\t\t \t\n\t\t\t// \u753b\u51fa\u7b2c\u4e00\u4e2a\u5355\u8bcd\n\t\t \tfor (int i = 0; i < a[1].length(); i += 1)\n\t\t \t\tres[0][i] = a[1][i];\n\t\t\t// \u753b\u51fa\u7b2c\u4e8c\u4e2a\u5355\u8bcd\n\t\t \tfor (int i = 0; i < a[2].length(); i += 1)\n\t\t \t\tres[a[4].length() - 1][i] = a[2][i];\n\t\t\t// \u753b\u51fa\u7b2c\u4e09\u4e2a\u5355\u8bcd\n\t\t \tfor (int i = 0; i < a[3].length(); i += 1)\n\t\t \t\tres[a[5].length() - 1][i + a[1].length() - 1] = a[3][i];\n\t\t\t// \u753b\u51fa\u7b2c\u56db\u4e2a\u5355\u8bcd\n\t\t \tfor (int i = 0; i < a[4].length(); i += 1)\n\t\t \t\tres[i][0] = a[4][i];\n\t\t\t// \u753b\u51fa\u7b2c\u4e94\u4e2a\u5355\u8bcd\n\t\t \tfor (int i = 0; i < a[5].length(); i += 1)\n\t\t \t\tres[i][a[1].length() - 1] = a[5][i];\n\t\t\t// \u753b\u51fa\u7b2c\u516d\u4e2a\u5355\u8bcd\n\t\t \tfor (int i = 0; i < a[6].length(); i += 1)\n\t\t \t\tres[i + a[4].length() - 1][a[2].length() - 1] = a[6][i];\n\t\t\t// \u66f4\u65b0best\u7684\u503c\n\t\t \tif (best.size() == 0 || res < best) {\n\t\t \t\tbest = res;\n\t\t \t}\n\t\t }\n\t} while (next_permutation(a + 1, a + 7)); // next_permutation\uff0c\u5728\u201c\u601d\u8def\u201d\u8fd9\u4e00\u90e8\u5206\u8bb2\u8fc7\n\t// \u6ca1\u6709\u65b9\u6848\u5219Impossible\n\tif (best.size() == 0) printf(\"Impossible\\n\");\n\telse {\n\t\t// \u8f93\u51fa\u6bcf\u4e00\u884c\n\t\tfor (int i = 0; i < best.size(); i += 1) {\n\t\t\tstd::cout << best[i] << endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1608968481,
        "uid": 357545,
        "name": "CGDGAD",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF47C \u3010Crossword\u3011"
    },
    {
        "content": "\u672c\u9898\u5c31\u662f\u4e00\u4e2a\u5927\u6a21\u62df\uff0c\u5168\u6392\u5217\u53ef\u4ee5\u901a\u8fc7next_permutation\u5f97\u5230\n\n\u4e0b\u9762\u662f\u4e11\u964b\u7684\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstring s[6];\nint l[6];\nvoid draw (vector<string> &w, int i, int j, int di, int dj, string s) {\n\tfor (int k = 0; k < s.size (); k++, i += di, j += dj)\n\tw[i][j] = s[k];\n}\nint main () {\n\tfor (int i = 0; i < 6; i++) cin >> s[i];\n\tsort (s, s + 6);\n\tvector<string> res; res.clear ();\n\tdo {\n\t\tif (s[0].size () + s[2].size () == s[1].size () + 1 && s[3].size () + s[5].size () == s[4].size () + 1) {\n\tfor (int i = 0; i < 6; i++) l[i] = s[i].size () - 1;\n\tif (s[0][0] == s[3][0] && s[0][l[0]] == s[4][0] && s[1] [0] == s[3][l[3]] && s[1][l[0]] == s[4][l[3]] && s[1][l[1]] == s[5][0] && s[2][0] == s[4][l[4]] && s[2][l[2]] == s[5][l[5]]) {\n\tint n = l[1] + 1, m = l[4] + 1;\n\tvector<string> w (n, string (m, '.'));\n\tdraw (w, 0, 0, 1, 0, s[0]);\n\tdraw (w, 0, l[3], 1, 0, s[1]);\n\tdraw (w, l[0], m - 1, 1, 0, s[2]);\n\tdraw (w, 0, 0, 0, 1, s[3]);\n\tdraw (w, l[0], 0, 0, 1, s[4]);\n\tdraw (w, n - 1, l[3], 0, 1, s[5]);\n\tif (res.size () == 0 || res > w) res = w;}}\n\t} while (next_permutation (s, s + 6));\n    //next_permutation\u5fc5\u987b\u7528do...while\u683c\u5f0f\uff01\n\tif (!res.size ()) cout << \"Impossible\" << endl; else\n\tfor (int i = 0; i < res.size (); i++)\n\tcout << res[i] << endl;\n\treturn 0;\n}\n```",
        "postTime": 1533454543,
        "uid": 111091,
        "name": "lixinran",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF47C \u3010Crossword\u3011"
    },
    {
        "content": "### \u9898\u610f\n\n\u6709 $6$ \u4e2a\u5b57\u7b26\u4e32\uff0c\u8ba9\u4f60\u628a\u4ed6\u4eec\u6446\u6210\u4e00\u4e2a8\u5b57\u5f62\uff0c\u4f7f\u5f97\u4ea4\u53c9\u5904\u76f8\u7b49\uff0c\u5e76\u4e14\u4f7f\u5f97\u6700\u540e\u7ec4\u5408\u6210\u7684\u56fe\u5f62\u5b57\u5178\u5e8f\u6700\u5c0f\u3002\n\n### \u5206\u6790\n\n\u56e0\u4e3a\u5b57\u7b26\u4e32\u7684\u4e2a\u6570\u5f88\u5c0f\uff0c\u6240\u4ee5\u53ef\u4ee5\u679a\u4e3e\u8fd9 $6$ \u4e2a\u5b57\u7b26\u4e32\u7684\u6bcf\u4e00\u4e2a\u6392\u5217\u3002\u89c2\u5bdf\u6837\u4f8b\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e00\u79cd\u6392\u5217\u662f\u5408\u6cd5\u7684\u5f53\u4e14\u4ec5\u5f53 $7$ \u4e2a\u4ea4\u53c9\u5904\u7684\u5b57\u7b26\u76f8\u540c $($ \u8be6\u89c1\u4ee3\u7801 $)$ \u3002\u5982\u679c\u5f53\u524d\u679a\u4e3e\u5230\u7684\u6392\u5217\u5408\u6cd5\uff0c\u4e14\u5b83\u7684\u5b57\u5178\u5e8f\u6bd4\u4e4b\u524d\u7684\u7b54\u6848\u5c0f\uff0c\u5c31\u628a\u7b54\u6848\u66f4\u65b0\u6210\u8fd9\u4e2a\u6392\u5217\u7684\u7ed3\u679c\uff0c\u6700\u540e\u8f93\u51fa\u7ed3\u679c\u5373\u53ef\u3002\n\n### \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\n#define elif else if\nusing namespace std;\nconst int MAXN=37;\nvector<string>s;\nvector<string>tmp,ans;\nbool check(int l1,int l2,int l3,int l4,int l5,int l6)\n{\n    return l1+l3-1==l2\n         &&l4+l6-1==l5\n         &&s[1][0]==s[4][0] //\u5de6\u4e0a\u89d2\u7684\u4ea4\u53c9\u5904\n         &&s[4][l4-1]==s[2][0] //\u6700\u5de6\u5217\uff0c\u7b2c\u4e8c\u4e2a\u4ea4\u53c9\u5904\n         &&s[5][l5-1]==s[3][0] //\u4e2d\u95f4\u4e00\u5217\u6700\u540e\u4e00\u4e2a\u4ea4\u53c9\u5904\n         &&s[5][0]==s[1][l1-1] //\u7b2c\u4e00\u884c\uff0c\u7b2c\u4e8c\u4e2a\u4ea4\u53c9\u5904\n         &&s[2][l1-1]==s[5][l4-1] //\u4e2d\u5fc3\u7684\u4ea4\u53c9\u5904\n         &&s[6][0]==s[2][l2-1] //\u6700\u53f3\u5217\uff0c\u7b2c\u4e00\u4e2a\u4ea4\u53c9\u5904\n         &&s[6][l6-1]==s[3][l3-1]; //\u53f3\u4e0b\u89d2\u7684\u4ea4\u53c9\u5904\n} \nint main()\n{\n    int i,j;bool flag=false;\n    s.resize(7);\n    for(i=1;i<=6;i++) cin>>s[i];\n    sort(s.begin()+1,s.begin()+7);\n    do \n    { \n        //\u4ece\u4e0a\u81f3\u4e0b\u5c06\u6a2a\u884c\u7f16\u62101-3\u53f7\uff0c\u4ece\u5de6\u81f3\u53f3\u5c06\u7ad6\u5217\u7f16\u62104-6\u53f7\n        int l1=s[1].size(),l2=s[2].size(),l3=s[3].size(),l4=s[4].size(),l5=s[5].size(),l6=s[6].size();\n        if(check(l1,l2,l3,l4,l5,l6))\n        {\n            tmp=vector<string>(l5,string(l2,'.')); //\u5c06\u6574\u4e2a\u7ed3\u679c\u521d\u59cb\u5316\n            for(i=0;i<l5;i++)\n            {\n                if(!i)  for(j=0;j<l1;j++) tmp[i][j]=s[1][j]; //\u7ed9\u7b2c\u4e00\u884c\u8d4b\u503c\n                if(i==l4-1) for(j=0;j<l2;j++) tmp[i][j]=s[2][j]; //\u7ed9\u4e2d\u95f4\u4e00\u884c\u8d4b\u503c\n                if(i==l5-1) for(j=l1-1;j<l2;j++) tmp[i][j]=s[3][j-l1+1]; //\u7ed9\u6700\u540e\u4e00\u884c\u8d4b\u503c\n                tmp[i][l1-1]=s[5][i]; //\u7ed9\u4e2d\u95f4\u4e00\u5217\u8d4b\u503c\n                if(i<l4) tmp[i][0]=s[4][i]; //\u7ed9\u7b2c\u4e00\u5217\u8d4b\u503c\n                if(i>=l4) tmp[i][l2-1]=s[6][i-l4+1]; //\u7ed9\u6700\u540e\u4e00\u5217\u8d4b\u503c\n            }\n            if(!flag) ans=tmp,flag=true;\n            elif(ans>tmp) ans=tmp; //\u66f4\u65b0\u7b54\u6848\n        }\n    }while(next_permutation(s.begin()+1,s.begin()+7));\n    if(!flag) printf(\"Impossible\\n\"); //\u6ca1\u6709\u53ef\u884c\u89e3\n    else\n    {\n        for(i=0;i<ans.size();i++)\n        {\n            for(j=0;j<ans[i].size();j++) printf(\"%c\",ans[i][j]);\n            putchar(10);\n        }\n    }\n    return 0;\n}\n```\n\n\n",
        "postTime": 1632745049,
        "uid": 225991,
        "name": "_lxy_",
        "ccfLevel": 6,
        "title": "CF47C Crossword \u9898\u89e3"
    }
]