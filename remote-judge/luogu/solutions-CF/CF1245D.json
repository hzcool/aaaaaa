[
    {
        "content": "\u4e00\u4e0a\u6765\u770b\u5230\u6700\u5c0f\u8054\u901a\u4ee3\u4ef7\u80af\u5b9a\u6700\u5c0f\u751f\u6210\u6811\u554a\u3002\u4f46\u662f\u6b64\u9898\u7531\u4e8e\u6709\u70b9\u6743\u6240\u4ee5\u4e0d\u80fd\u9009\u6700\u5c0f\u82b1\u8d39\u7684\u70b9\u7136\u540e\u8dd1\u6700\u5c0f\u751f\u6210\u6811\u7b97\u6cd5\u3002\n\n\u8003\u8651\u5efa\u7acb\u4e00\u4e2a\u865a\u62df\u76840\u53f7\u8282\u70b9\uff0c\u5411\u5176\u4ed6\u6bcf\u4e2a\u70b9\u8fde\u4e00\u6761\u4ee5\u70b9\u6743\u4e3a\u4ee3\u4ef7\u7684\u8fb9\uff0c\u7136\u540e\u5728\u8fd9n+1\u4e2a\u70b9\u7684\u56fe\u4e2d\u8dd1\u4e00\u904d\u6700\u5c0f\u751f\u6210\u6811\u5373\u53ef\uff0c\u8fd9\u6837\u7684\u7b97\u6cd5\u80af\u5b9a\u662f\u5bf9\u7684\uff0c\u56e0\u4e3a\u9009\u4e2d\u4e00\u6761\u4e0e0\u76f8\u8fde\u7684\u8fb9\u76f8\u5f53\u4e8e\u9009\u4e2d\u8be5\u70b9\uff0c\u7531\u4e8e\u80af\u5b9a\u8981\u4e0e0\u8054\u901a\uff0c\u6240\u6709\u5fc5\u5b9a\u81f3\u5c11\u6709\u4e00\u4e2a\u70b9\u88ab\u9009\u4e2d\u3002\n\n\u7531\u4e8e~~\u624b\u52a8\u5f00\u4e86O2~~sort\u5e38\u6570\u5c0f+\u61d2\u5f97\u5199Prim\uff0c\u6211\u7528\u4e86Kruscal\u3002\n\n\u54e6\uff0c\u987a\u5e26[\u53cc\u500d\u7ecf\u9a8c](https://www.luogu.org/problem/P1550)\n\n\u4ee3\u7801\uff1a\n```cpp\n#pragma GCC optimize(2)\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n \ntypedef long long ll;\ninline void read (int& s) {\n\ts = 0; int f = 0;\n\tstatic char c = getchar ();\n\twhile (c < '0' || c > '9') {if (c == '-') f = 1; c = getchar ();}\n\twhile (c >= '0' && c <= '9') s = (s << 3) + (s << 1) + (c ^ 48), c = getchar ();\n\ts = f ? -s : s; return ;\n}\n \nconst int N = 2003;\nint n, m, x[N], y[N], c[N], k[N];\nstruct stu {\n\tint fr, to;\n\tll w;\n\tinline int operator < (const stu& p) const {\n\t\treturn w < p.w;\n\t}\n}s[N * N];\n \nint st[N], v, fa[N];\nint ano[2][N], num;\n \nint Find (const int p) {return fa[p] == p ? p : fa[p] = Find (fa[p]);}\n \nint main () {\n\tread (n);\n\tint i, j; for (i = 1; i <= n; ++i)\n\t\tread (x[i]), read (y[i]);\n\tfor (i = 1; i <= n; ++i) {\n\t\tread (c[i]);\n\t\ts[++m] = (stu) {0, i, c[i]};\n\t}//\u5efa\u8fb9\n\tfor (i = 1; i <= n; ++i) read (k[i]);\n\tfor (i = 1; i < n; ++i) {\n\t\tfor (j = i + 1; j <= n; ++j)\n\t\t\ts[++m] = (stu) {i, j, 1ll * (k[i] + k[j]) * (abs (x[i] - x[j]) + abs (y[i] - y[j]))};\n\t} //\u5efa\u8fb9\n\tsort (s + 1, s + m + 1);\n\tint now = 0, fx, fy;\n\tll ans = 0;\n\tfor (i = 1; i <= n; ++i) fa[i] = i;\n\tfor (i = 1; i <= m; ++i) {\n\t\tfx = Find (s[i].fr);\n\t\tfy = Find (s[i].to);\n\t\tif (fx != fy) {\n\t\t\t++now;\n\t\t\tfa[fx] = fy;\n\t\t\tans += s[i].w;\n\t\t\tif (!s[i].fr)\n\t\t\t\tst[++v] = s[i].to;\n\t\t\telse {\n\t\t\t\t++num;\n\t\t\t\tano[0][num] = s[i].fr;\n\t\t\t\tano[1][num] = s[i].to;\n\t\t\t} //\u6b63\u5e38Kruscal\u64cd\u4f5c\n\t\t\tif (now == n) break;\n\t\t}\n\t}\n\tcout << ans << '\\n';\n\tprintf (\"%d\\n\", v);\n\tfor (i = 1; i < v; ++i) printf (\"%d \", st[i]);\n\tprintf (\"%d\\n\", st[v]);\n\tprintf (\"%d\\n\", num);\n\tfor (i = 1; i <= num; ++i) printf (\"%d %d\\n\", ano[0][i], ano[1][i]);\n\treturn 0;\n}\n```",
        "postTime": 1572656555,
        "uid": 31193,
        "name": "\u68a7\u6850\u706f",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1245D \u3010Shichikuji and Power Grid\u3011"
    },
    {
        "content": "# \u524d\u7f6e\u77e5\u8bc6\uff1a\n\u66fc\u54c8\u987f\u8ddd\u79bb\uff1a\n\n\u5373\u5bf9\u4e8e\u5750\u6807\u4e3a $(x_1,y_1)$ \u7684 $a$ \u70b9\u548c\u5750\u6807\u4e3a $(x_2,y_2)$ \u7684 $b$ \u70b9\uff0c\u5b83\u4eec\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u4e3a $\\vert x_1-x_2 \\vert + \\vert y_1-y_2 \\vert$\u3002\n\n## \u601d\u8def\uff1a\n\u6709\u70b9\u6743\u6709\u8fb9\u6743\u8fd8\u8981\u6c42\u6700\u5c0f\u65b9\u6848\uff0c\u5bb9\u6613\u60f3\u5230\u5efa\u865a\u70b9\u7136\u540e\u8dd1\u6700\u5c0f\u751f\u6210\u6811\u3002\n\n\u9996\u5148\u4ee5 $0$ \u4e3a\u865a\u70b9\u5411 $n$ \u4e2a\u57ce\u5e02\u5efa\u8fb9\uff0c\u8fb9\u6743\u4e3a\u6bcf\u4e2a\u57ce\u5e02\u5efa\u9020\u53d1\u7535\u7ad9\u7684\u4ee3\u4ef7 $c_i$\u3002\n\n\u7136\u540e\u5c31\u662f\u6bcf\u4e2a\u57ce\u5e02\u4e4b\u95f4\u5efa\u8fb9\uff0c\u8fb9\u6743\u4e3a $k_i+k_j$ \u4e58\u4e0a\u4e24\u8005\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u3002\n\n\u7136\u540e\u5c31\u8dd1\u6700\u5c0f\u751f\u6210\u6811\uff0c\u867d\u7136\u672c\u9898\u662f\u7a20\u5bc6\u56fe\uff0c\u7528 Prim \u4f1a\u66f4\u4f18\uff0c\u4f46 Kruskal \u66f4\u597d\u5199\uff0c\u5e76\u4e14\u672c\u9898\u7684\u6570\u636e\u8303\u56f4\u7528 Kruskal \u6765\u505a\u662f\u80fd\u8fc7\u7684\u3002\n\n\u6ce8\u610f\uff0c\u522b\u5fd8\u4e86\u5f00 long long\u3002\n\n\u53cc\u500d\u7ecf\u9a8c\uff1a[CF 938D](https://www.luogu.com.cn/problem/CF938D)\n\n\uff08\u601d\u8def\u4e0e\u672c\u9898\u5927\u540c\u5c0f\u5f02\uff0c\u65e0\u975e\u5c31\u662f\u5bf9\u8fb9\u6743\u7684\u5904\u7406\u4e0d\u540c\uff09\u3002\n\n```cpp\n// Problem: CF1245D Shichikuji and Power Grid\n// Contest: Luogu\n// URL: https://www.luogu.com.cn/problem/CF1245D\n// Memory Limit: 250 MB\n// Time Limit: 2000 ms\n// \n// Powered by CP Editor (https://cpeditor.org)\n\n//By:Komorebi_03\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n//\u4e0d\u8981\u5fd8\u8bb0\u5f00 long long\nconst int N = 1e6+5;\nint n,sum,ans,tot,e_cnt,st_cnt,u[N],v[N],x[N],y[N],c[N],k[N],st[N],fa[N];\nstruct edge{\n\tint u;\n\tint v;\n\tint w;\n}e[5*N];\ninline int read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile (ch<'0'||ch>'9'){if (ch=='-') f=-1;ch=getchar();}\n\twhile (ch>='0'&&ch<='9'){x=x*10+ch-48;ch=getchar();}\n\treturn x*f;\n}\n\nvoid add(int u,int v,int w)\n{\n\te[++e_cnt].u=u;\n\te[e_cnt].v=v;\n\te[e_cnt].w=w;\n}\n\nint Find(int x)\n{\n\tif(fa[x]==x)\n\t\treturn x;\n\treturn fa[x]=Find(fa[x]);\n}\n\nbool cmp(edge a,edge b)\n{\n\treturn a.w<b.w;\n}\n\nvoid Kru()\n{\n\tsort(e+1,e+1+e_cnt,cmp);\n\tfor (int i=1;i<=e_cnt;i++)\n\t{\n\t\tint U=e[i].u;\n\t\tint V=e[i].v;\n\t\tint W=e[i].w;\n\t\tint r1=Find(U);\n\t\tint r2=Find(V);\n\t\tif(r1!=r2)\n\t\t{\n\t\t\tfa[r1]=r2;\n\t\t\tsum++;\n\t\t\tans+=W;\n\t\t\t//\u5224\u65ad\u662f\u5426\u9700\u8981\u5efa\u7acb\u53d1\u7535\u7ad9\n\t\t\tif(!e[i].u)\n\t\t\t\tst[++st_cnt]=e[i].v;\n\t\t\telse\n\t\t\t{\n\t\t\t\tu[++tot]=e[i].u;\n\t\t\t\tv[tot]=e[i].v;\n\t\t\t}\n\t\t}\n\t\tif(sum==n)\n\t\t\tbreak;\n\t}\n}\n\nsigned main()\n{\n\tn=read();\n\tfor (int i=1;i<=n;i++)\n\t\tfa[i]=i;\n\t//\u522b\u5fd8\u8bb0\u521d\u59cb\u5316\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tx[i]=read();//\u70b9\u7684\u6a2a\u5750\u6807\n\t\ty[i]=read();//\u70b9\u7684\u7eb5\u5750\u6807\n\t}\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tc[i]=read();\n\t\tadd(0,i,c[i]);\n\t\t//\u4ee5 0 \u4e3a\u865a\u70b9\u5efa\u56fe\uff0c\u8fb9\u6743\u4e3a\u6bcf\u4e2a\u70b9\u5efa\u53d1\u7535\u7ad9\u7684\u4ee3\u4ef7\n\t}\n\tfor (int i=1;i<=n;i++)\n\t\tk[i]=read();\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tfor (int j=1;j<=n;j++)\n\t\t{\n\t\t\tint C=(k[i]+k[j])*(abs(x[i]-x[j])+abs(y[i]-y[j]));\n\t\t\t//\u8dd1\u6700\u5c0f\u751f\u6210\u6811\u524d\u5148\u628a\u8fb9\u6743\u8fdb\u884c\u5904\u7406\uff0c\u5373 (k[i] + k[j]) * \u4e24\u8005\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\n\t\t\tadd(i,j,C);\n\t\t}\n\t}\n\tKru();\n\tcout<<ans<<\"\\n\"<<st_cnt<<\"\\n\";\n\tfor (int i=1;i<=st_cnt;i++)\n\t\tcout<<st[i]<<\" \";\n\tputchar('\\n');\n\tcout<<tot<<\"\\n\";\n\tfor (int i=1;i<=tot;i++)\n\t\tcout<<u[i]<<\" \"<<v[i]<<\"\\n\";\n\treturn 0;\n\t//Amireux_35\n}\n```\n",
        "postTime": 1683382455,
        "uid": 748679,
        "name": "Komorebi_03",
        "ccfLevel": 0,
        "title": "CF 1245D\u9898\u89e3"
    },
    {
        "content": "\u8fd9\u5f20\u56fe\u6709\u70b9\u6743\uff0c\u6709\u8fb9\u6743\uff0c\u90a3\u6211\u4eec\u8003\u8651\u628a\u70b9\u6743\u5316\u4e3a\u8fb9\u6743\uff0c\u5373\u5efa\u4e00\u4e2a\u865a\u70b9\uff0c\u5411\u6240\u6709\u70b9\u8fde\u8fb9\uff0c\u8fb9\u6743\u4e3a\u6bcf\u4e2a\u70b9\u7684\u70b9\u6743\uff0c\u8981\u6c42\u662f\u6700\u5c0f\u4ee3\u4ef7\uff0c\u6839\u636e\u9898\u76ee\uff0c\u53ef\u4ee5\u60f3\u5230\u6700\u5c0f\u751f\u6210\u6811\uff0c\u7531\u4e8e $n \\le 2000$\uff0c\u800c\u4e14\u662f\u7a20\u5bc6\u56fe\uff0c\u6211\u4eec\u8003\u8651\u7528 prim \u7b97\u6cd5\u3002\n\n\u6700\u540e\u7edf\u8ba1\u7b54\u6848\u65f6\uff0c\u6211\u8bb0\u5f55\u4e86\u6bcf\u6761\u8fb9\u7684\u8d77\u59cb\u70b9\u548c\u7ec8\u70b9\uff0c\u5728\u5224\u65ad\u8d77\u59cb\u70b9\u662f\u5426\u4e3a\u865a\u70b9\u6765\u5224\u65ad\u8fd9\u4e2a\u70b9\u662f\u5426\u5efa\u53d1\u7535\u7ad9\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, ll> pil;\ntypedef pair<ll, pair<int, int> > plii;\n\nconst int N = 2010;\n\nint n, cnt, cot;\nll tot;\nll x[N], y[N];\nll c[N], k[N], dis[N];\nbool vis[N], ok[N];\nvector<pil> son[N];\npriority_queue<plii, vector<plii>, greater<plii> > q; // pair \u5957 pair\n\nstruct edge {\n\tint u, v;\n\tll w;\n} ans[N]; // \u8bb0\u5f55\u7b54\u6848\n\nvoid prim(int s) {\n\tq.push({0, {s, 0}});\n\tfor (int i = 0; i <= n; ++ i) {\n\t\tdis[i] = 1e18;\n\t}\n\tdis[s] = 0;\n\twhile (! q.empty()) {\n\t\tplii it = q.top();\n\t\tq.pop();\n\t\tint u = it.second.first;\n\t\tif (vis[u])\tcontinue;\n\t\t++ cnt;\n\t\ttot += dis[u];\n\t\tvis[u] = 1;\n\t\tans[cnt] = edge{it.second.second, it.second.first, dis[u]};\n\t\t// \u8bb0\u5f55\u7b54\u6848\n\t\tif (it.second.second == 0) { // \u7531\u6b64\u6765\u5224\u65ad\u8fd9\u4e2a\u70b9\u662f\u5426\u5efa\u53d1\u7535\u7ad9\n\t\t\tok[u] = 1;\n\t\t\t++ cot;\n\t\t}\n\t\tif (cnt >= n + 1)\treturn ;\n\t\tfor (auto it : son[u]) {\n\t\t\tint v = it.first;\n\t\t\tll w = it.second;\n\t\t\tif (dis[v] > w) {\n\t\t\t\tdis[v] = w;\n\t\t\t\tq.push({dis[v], {v, u}});\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main() {\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; ++ i) {\n\t\tscanf(\"%lld%lld\", &x[i], &y[i]);\n\t}\n\tfor (int i = 1; i <= n; ++ i) {\n\t\tscanf(\"%lld\", &c[i]);\n\t\tson[0].push_back({i, c[i]});\n\t}\n\tfor (int i = 1; i <= n; ++ i) {\n\t\tscanf(\"%lld\", &k[i]);\n\t\tfor (int j = 1; j < i; ++ j) {\n\t\t\tll dis = abs(x[i] - x[j]) + abs(y[i] - y[j]);\n\t\t\tdis = dis * (k[i] + k[j]);\n\t\t\tson[i].push_back({j, dis});\n\t\t\tson[j].push_back({i, dis});\n\t\t}\n\t}\n\tprim(0);\n\tprintf(\"%lld\\n%d\\n\", tot, cot - 1);\n\t// \u7531\u4e8e\u7edf\u8ba1 cot \u65f6\u628a 0\uff08\u865a\u70b9\uff09 \u4e5f\u7edf\u8ba1\u4e0a\u4e86,\u6240\u4ee5\u8981\u51cf\u4e00\n\tfor (int i = 1; i <= n; ++ i) {\n\t\tif (ok[i]) {\n\t\t\tprintf(\"%d \", i);\n\t\t}\n\t}\n\tputchar('\\n');\n\tint res = 0;\n\tfor (int i = 1; i <= cnt; ++ i) {\n\t\tif (ans[i].u != 0 && ans[i].v != 0) { // \u4e0e\u865a\u70b9\u7684\u8fde\u8fb9\u4e0d\u80fd\u7edf\u8ba1\u4e0a\n\t\t\t++ res;\n\t\t}\n\t}\n\tprintf(\"%d\\n\", res);\n\tfor (int i = 1; i <= cnt; ++ i) {\n\t\tif (ans[i].u != 0 && ans[i].v != 0) {\n\t\t\tprintf(\"%d %d\\n\", ans[i].u, ans[i].v);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1683184615,
        "uid": 715213,
        "name": "yi_fan0305",
        "ccfLevel": 4,
        "title": "CF1245D \u9898\u89e3"
    },
    {
        "content": "# \u9898\u89e3 CF1245D\n\n## \u601d\u8def\u5206\u6790\u53ca\u7b97\u6cd5\u5206\u6790\n\n\u8fd9\u9053\u9898\u7684\u60f3\u6cd5\u5176\u4ed6 dalao \u4e5f\u90fd\u8bb2\u4e86\uff0c\u5c31\u662f**\u5957\u4e00\u4e2a\u865a\u62df\u8282\u70b9\u518d\u5411\u4e0a\u5efa\u8fb9**\u7684\u60f3\u6cd5\u3002\n\n\u8003\u8651\u5230\u8fd9\u9053\u9898\u6bcf\u4e24\u4e2a\u8282\u70b9\u4e4b\u95f4\u90fd\u4f1a\u6709\u8fb9\u3002\n\nKruscal \u7684\u590d\u6742\u5ea6\u5c31\u5230\u4e86 $O(K \\times \\log_2 K) = O(N^2 \\times \\log_2 N^2)$\u3002\n\n\u800c prim \u7684\u590d\u6742\u5ea6\u8fd8\u662f\u7a33\u5b9a\u7684 $O(N^2)$\u3002\n\nprim \u8981\u4f18\u5316\u4e00\u4e2a $log_2 N^2$ \u65f6\u95f4\uff0c\u6240\u4ee5\u9009\u62e9\u7528 **prim** \u89e3\u51b3\u8fd9\u9053\u9898\u3002\n\n## \u4ee3\u7801\u53ca\u8bb2\u89e3\n\n```cpp\n# include <bits/stdc++.h>\nusing namespace std;\n\nconst int maxn = 2005;\n\nstruct reader {\n\ttemplate <typename Type>\n\treader & operator >> (register Type & ret) {\n\t\tregister int f = 1; ret = 0; register char ch = getchar ();\n\t\tfor (;!isdigit (ch); ch = getchar ()) if (ch == '-') f=-f;\n\t\tfor (; isdigit (ch); ch = getchar ()) ret = (ret << 1) + (ret << 3) + (ch - '0');\n\t\tret *= f; return *this;\n\t}\n} fin;\n\nint N, bd; // bd\u6307\u7684\u662f\u76f4\u63a5\u5efa\u7acb\u4e00\u4e2a\u7535\u6e90\u7684\u8282\u70b9\u4e2a\u6570\nlong long K[maxn];\nlong long X[maxn];\nlong long Y[maxn]; // \u8fd9\u4e9b\u5982\u9898\nlong long las[maxn]; // \u8ba1\u5165\u4e0a\u4e00\u6b21\u66f4\u65b0\u8fd9\u4e2a\u70b9\u662f\u54ea\u4e2a\u70b9\uff0c\u5982\u679c\u9009\u4e0a\u90a3\u5c31\u4ee3\u8868 las[i] \u4e0e i \u4e4b\u95f4\u6709\u8fb9\nlong long res; // \u6700\u540e\u7684\u7b54\u6848\nlong long dis[maxn]; // \u5f53\u524d\u6811\u5230\u5404\u4e2a\u975e\u6811\u8282\u70b9\u7684\u6700\u5c0f\u503c\nbool vis[maxn]; // \u8bb0\u5f55\u5f53\u524d\u662f\u5426\u6709\u88ab\u52a0\u5165\u6811\u4e2d\n\nint main () {\n\tfin >> N;\n\tfor (register int i = 1; i <= N; i++) fin >> X[i] >> Y[i];\n\tfor (register int i = 1; i <= N; i++) fin >> dis[i];\n\tfor (register int i = 1; i <= N; i++) fin >> K[i], las[i] = 0;\n\t//\u8bfb\u5165\u6570\u636e\u7684\u540c\u65f6\u8bb2\u4e0a\u4e00\u6b21\u66f4\u65b0\u7684\u8bbe\u4e3a0\u53f7\u8282\u70b9\uff0c\u7136\u540e\u5c06 dis \u8bbe\u4e3a\u76f4\u63a5\u5efa\u7acb\u7535\u529b\u7ad9\u7684\u4ee3\u4ef7\uff0c\u4e5f\u5c31\u662f\u666e\u901aprim\u5c06\u6240\u6709\u70b9\u8bbe\u7f6e\u4e3a\u521d\u59cb\u76840\u53f7\u70b9\u7684\u6743\u503c\n\tfor (register int t = 1; t <= N; t++) {\n\t\tregister int minn = 2147483640, id;\n\t\tfor (register int i = 1; i <= N; i++)\n\t\tif (!vis[i] && dis[i] < minn) minn = dis[i], id = i;\n\t\tvis[id] = true; res += minn; if (las[id] == 0) bd++;\n\t\tfor (register int i = 1; i <= N; i++)\n\t\tif (!vis[i] && dis[i] > (K[i] + K[id]) * (abs (X[id] - X[i]) + abs (Y[id] - Y[i])))\n\t\tdis[i] = (K[i] + K[id]) * (abs (X[id] - X[i]) + abs (Y[id] - Y[i])), las[i] = id;\n\t\t//\u66f4\u65b0\u70b9\u7684\u540c\u65f6\u5efa\u7acb\u8bb0\u5f55\u6b64\u6b21\u662f\u54ea\u4e2a\u70b9\u66f4\u65b0\uff0c\u8fd9\u91cc\u4e0a\u6587\u6709\u8bf4\n\t}\n\tprintf (\"%lld\\n%d\\n\", res, bd);\n\tfor (register int i = 1; i <= N; i++)\n\tif (las[i] == 0) printf (\"%d \", i);\n\tprintf (\"\\n%d\\n\", N - bd);\n\t//\u5982\u679c\u76f4\u63a5\u8bbe\u7acb\u7535\u529b\u7ad9\u7684\u4ee3\u4ef7\u662f bd \u7684\u8bdd\uff0c\u90a3\u4e48\u5269\u4e0b N-bd \u4e2a\u70b9\u80af\u5b9a\u90fd\u662f\u8fde\u8fb9\u7684\uff0c\u4e00\u4e2a\u70b9\u4e00\u6761\u8fb9\n\tfor (register int i = 1; i <= N; i++)\n\tif (las[i] != 0) printf (\"%lld %d\\n\", las[i], i);\n\treturn 0;\n}\n```\n\u6700\u540e\uff0c\u5c06\u8fd9\u53e5\u8001\u751f\u5e38\u8c08\u7684\u8bdd\u518d\u62ff\u51fa\u6765\uff1a**\u5341\u5e74OI\u4e00\u573a\u7a7a\uff0c\u4e0d\u5f00longlong\u89c1\u7956\u5b97**\n",
        "postTime": 1616972685,
        "uid": 189351,
        "name": "wheneveright",
        "ccfLevel": 7,
        "title": "CF1245D"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f\uff1a\u6709n\u4e2a\u57ce\u5e02\uff0c\u544a\u8bc9\u4f60\u6bcf\u4e2a\u57ce\u5e02\u7684\u5750\u6807\uff0c\u5728\u5f53\u524d\u57ce\u5e02\u5efa\u9020\u53d1\u7535\u5382\u9700\u8981\u82b1\u8d39\u7684\u8d39\u7528\uff0c\u5728\u5f53\u524d\u57ce\u5e02\u4e0e\u5176\u4ed6\u57ce\u5e02\u94fe\u63a5\u6240\u9700\u8981\u7684\u4e00\u90e8\u5206\u8d39\u7528\uff08\u8fd8\u5f97\u548c\u8981\u8fde\u63a5\u57ce\u5e02\u7684\u8d39\u7528\u76f8\u52a0\uff09\uff0c\u95ee\u4f60\u8981\u4f7f\u5f97\u6bcf\u4e2a\u57ce\u5e02\u90fd\u6709\u7535\uff0c\u90a3\u4e48\u6700\u5c0f\u82b1\u8d39\u662f\u591a\u5c11\uff0c\u5e94\u8be5\u5728\u54ea\u51e0\u5ea7\u57ce\u5e02\u5efa\u9020\u53d1\u7535\u5382\uff0c\u5e94\u8be5\u94fe\u63a5\u54ea\u4e9b\u57ce\u5e02\u3002\n\n\u5927\u81f4\u601d\u8def\uff1a\u6211\u4eec\u4e0d\u59a8\u5148\u5c06\u6bcf\u5ea7\u57ce\u5e02\u4e4b\u95f4\u4e92\u76f8\u7684\u8fde\u7ebf\u90fd\u8fde\u8d77\u6765\uff0c\u7136\u540e\u518d\u65b0\u589e\u4e00\u4e2a0\u53f7\u57ce\u5e02\uff0c\u5982\u679c\u6709x\u53f7\u57ce\u5e02\u548c0\u53f7\u76f8\u8fde\uff0c\u5c31\u4ee3\u8868x\u53f7\u5efa\u53d1\u7535\u5382\u3002\u8fd9\u6837\u6211\u4eec\u4f1a\u5f97\u5230n*\uff08n+1\uff09/2\u6761\u8fb9\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8dd1\u4e00\u904d\u6700\u5c0f\u751f\u6210\u6811\u5373\u53ef\u3002\n\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\nstruct lo{\n\tlong long x,y,k;\n} di[2010];\nstruct node{\n\tint x,y;\n\tlong long point;\n} siz[2000010];\nstruct out{\n\tint x,y;\n};\nvector <int > out1;\nvector <out > out2;\nint n,cnt=0,fa[2010];\n\nbool cmp(node a,node b)\n{\n\treturn a.point<b.point;\n}\n\nint find(int x)\n{\n\tif(fa[x]==x)\n\t\treturn x;\n\treturn fa[x]=find(fa[x]);\n}\n\nvoid add(int xx,int yy,long long po)\n{\n\tsiz[cnt].x=xx;\n\tsiz[cnt].y=yy;\n\tsiz[cnt].point=po;\n\t++cnt;\n}\n\nlong long kruskal()\n{\n\tlong long ans=0;\n\tfor(int i=0;i<cnt;++i)\n    {\n        int xx=find(siz[i].x),yy=find(siz[i].y);\n        if(xx!=yy)\n        {\n            ans+=siz[i].point,fa[yy]=xx;\n            if(siz[i].x==0) \n\t\t\t\tout1.push_back(siz[i].y);\n            else \n            {\n            \tout t;\n            \tt.x=siz[i].x,t.y=siz[i].y;\n\t\t\t\tout2.push_back(t);\n\t\t\t}\n    \t}\n\t}\n\treturn ans;\n}\n\nint main() \n{\tcin>>n;\n\tfor(int i=1;i<=n;++i)\n\t\tcin>>di[i].x>>di[i].y;\n\tfor(int x,i=1;i<=n;++i)\n\t{\n\t\tcin>>x;\n\t\tadd(0,i,x);\n\t\tfa[i]=i;\n\t}\n\tfor(int i=1;i<=n;++i)\n\t\tcin>>di[i].k;\n\tfor(int i=1;i<=n;++i)\n    \tfor(int j=i+1;j<=n;++j)\n    \t\tadd(i,j,((abs(di[i].x-di[j].x)+abs(di[i].y-di[j].y))*(di[i].k+di[j].k)));\n    sort(siz,siz+cnt,cmp);\n    cout<<kruskal()<<endl;\n    int cnt1=out1.size();\n    cout<<cnt1<<endl;\n    for(int i=0;i<cnt1;++i)\n    \tcout<<out1[i]<<' ';\n    cout<<endl;\n    cnt1=out2.size();\n    cout<<cnt1<<endl;\n    for(int i=0;i<cnt1;++i)\n    \tcout<<out2[i].x<<' '<<out2[i].y<<endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1572746119,
        "uid": 132290,
        "name": "\u5f00\u59cb\u65b0\u7684\u8bb0\u5fc6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1245D \u3010Shichikuji and Power Grid\u3011"
    },
    {
        "content": "MST \u633a\u597d\u60f3\u7684\u5427 >_< \uff0c\u7136\u800c\u6211\u8fd8\u60f3\u4e86 20 \u591a\u5206\u949f /kk\n\n\u8003\u8651 $n\\le2000$ \u6211\u4eec\u53ef\u4ee5\u66b4\u529b\u628a\u70b9\u6743\u8f6c\u8fb9\u6743\uff0c$n^2$ \u628a 2 \u70b9\u4e4b\u95f4\u7684\u82b1\u8d39\u7b97\u51fa\u6765\u3002\u663e\u7136\uff0c\u6700\u7ec8\u7684\u56fe\u53d8\u6210\u4e86\u4e00\u4e2a\u68ee\u6797\u3002\n\n\u68ee\u6797\u4e0d\u597d\u5904\u7406\uff0c\u7ee7\u7eed\u8003\u8651\u628a\u8fd9\u4e2a\u68ee\u6797\u53d8\u6210\u4e00\u9897\u6811\uff0c\u53ef\u4ee5\u5efa\u7acb\u4e00\u4e2a\u865a\u62df\u70b9 n+1\uff0c\u7136\u540e\u5efa\u9020\u53d1\u7535\u7ad9\u5c31\u662f\u4ece i \u5230 n+1 \u8fde\u4e00\u6761\u8ddd\u79bb c[i] \u7684\u8fb9\uff0c\u7136\u540e\u5728\u8fd9\u4e2a\u56fe\u4e0a\u8dd1 MST \u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u987a\u4fbf\u5410\u69fd\u4e00\u4e0b\u8fd9\u4e2a pretest\uff0c\u5e76\u67e5\u96c6\u8fde\u8fb9\u76f4\u63a5 `fa[u]=v` \u800c\u6ca1\u5199 `fa[find(u)]=find(v)` \u5c45\u7136\u80fd\u8fc7\u3002\n\n```\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\n\nint n, m;\nint read()\n{\n    int s = 0, f = 1;\n    char ch = getchar();\n    while (ch < '0' || ch > '9')\n    {\n        if (ch == '-')\n            f = -1;\n        ch = getchar();\n    }\n    while (ch >= '0' && ch <= '9')\n    {\n        s = s * 10 + ch - '0';\n        ch = getchar();\n    }\n    return s * f;\n}\nstruct node\n{\n    int x, y, v;\n} e[4020202];\nint tot = 0;\nconst int maxn = 2e5 + 10;\nint x[maxn], y[maxn], c[maxn], k[maxn], fa[maxn];\nint find(int x)\n{\n    return fa[x] == x ? fa[x] : fa[x] = find(fa[x]);\n}\nbool cmp(node a, node b)\n{\n    return a.v < b.v;\n}\nint tot1 = 0, tot2 = 0;\nint xx[101010], yy[101010], zz[101010];\nsigned main()\n{\n    n = read();\n    for (int i = 1; i <= n; ++i)\n    {\n        x[i] = read(), y[i] = read();\n    }\n    for (int i = 1; i <= n; ++i)\n    {\n        c[i] = read();\n    }\n    for (int i = 1; i <= n; ++i)\n    {\n        k[i] = read();\n    }\n    for (int i = 1; i <= n; ++i)\n    {\n        for (int j = 1; j < i; ++j)\n        {\n            int nw = (abs(x[i] - x[j]) + abs(y[i] - y[j])) * (k[i] + k[j]);\n            e[++tot].x = i, e[tot].y = j, e[tot].v = nw;\n        }\n    }\n    for (int i = 1; i <= n; ++i)\n    {\n        e[++tot].x = i, e[tot].y = n + 1, e[tot].v = c[i];\n    }\n    sort(e + 1, e + tot + 1, cmp);\n    for (int i = 1; i <= n + 1; ++i)\n    {\n        fa[i] = i;\n    }\n    int nww = 0, ans = 0;\n    for (int i = 1; i <= tot; ++i)\n    {\n        int u = e[i].x, v = e[i].y;\n        if (find(u) != find(v))\n        {\n            ++nww;\n            ans += e[i].v;\n            fa[find(u)] = find(v);\n            if (u == n + 1 || v == n + 1)\n            {\n                zz[++tot1] = u;\n            }\n            else\n            {\n                xx[++tot2] = u;\n                yy[tot2] = v;\n            }\n        }\n        if (nww == n)\n        {\n            break;\n        }\n    }\n    cout << ans << endl;\n    cout << tot1 << endl;\n    for (int i = 1; i <= tot1; ++i)\n        cout << zz[i] << \" \";\n    cout << endl;\n    cout << tot2 << endl;\n    for (int i = 1; i <= tot2; ++i)\n        cout << xx[i] << \" \" << yy[i] << endl;\n}\n```\n",
        "postTime": 1609732267,
        "uid": 150190,
        "name": "Antarctican",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1245D \u3010Shichikuji and Power Grid\u3011"
    },
    {
        "content": "# CF1245D - Shichikuji and Power Grid\n- https://www.luogu.com.cn/problem/CF1245D\n- \u8d2a\u5fc3\u3001\u6700\u5c0f\u751f\u6210\u6811\n\n## \u9898\u610f\n\u5df2\u77e5\u4e00\u4e2a\u4e8c\u7ef4\u5e73\u9762\u4e0a\u6709 $n(1\\leq n\\leq 2000)$ \u4e2a\u57ce\u5e02\uff0c\u7b2c $i$ \u4e2a\u57ce\u5e02\u7684\u5750\u6807\u4e3a $(x_i,y_i)\\ (1\\leq x_i,y_i\\leq 10^6)$\u3002\n\n\u9700\u8981\u7ed9\u8fd9\u4e2a $n$ \u4e2a\u57ce\u5e02\u5747\u901a\u4e0a\u7535\u3002\n\n\u4e00\u4e2a\u57ce\u5e02\u8981\u6709\u7535\uff0c\u9700\u8981\u6ee1\u8db3\u5982\u4e0b\u4efb\u4e00\u6761\u4ef6\uff1a\n- \u8fd9\u4e2a\u57ce\u5e02\u6709\u53d1\u7535\u7ad9\uff1b\n- \u8fd9\u4e2a\u57ce\u5e02\u548c\u4e00\u4e2a\u6709\u7535\u7684\u57ce\u5e02\u7528\u7535\u7f06\u76f8\u8fde\u3002\n\n\u5728\u4e00\u4e2a\u57ce\u5e02\u5efa\u9020\u53d1\u7535\u7ad9\u7684\u82b1\u8d39\u662f $c_i\\ (1\\leq c_i\\leq 10^9)$\u3002\n\n$u$ \u548c $v$ \u4e24\u4e2a\u57ce\u5e02\u76f8\u8fde\u7684\u82b1\u8d39\u662f $(k_u+k_v)\\cdot dis_{u,v}$\uff0c\u5176\u4e2d $dis_{u,v}$ \u6307\u7684\u662f $u$ \u548c $v$ \u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u3002\n\n\u6c42\u6700\u5c11\u82b1\u8d39\u7684\u65b9\u6848\u3002\n\n## \u601d\u8def\n\n\u8bbe $w_{u,v}=(k_u+k_v)\\cdot dis_{u,v}$\u3002\n\n\u8003\u8651\u7ed9\u8fd9 $n$ \u4e2a\u70b9\u4e24\u4e24\u8fde\u8fb9\uff0c\u6bcf\u6761\u8fb9\u7684\u8fb9\u6743\u4e3a\u8fd9\u4e24\u4e2a\u57ce\u5e02\u7535\u7f06\u7684\u82b1\u8d39\u3002\n\n\u6700\u7ec8\u56fe\u7684\u5f62\u6001\u662f\u591a\u4e2a\u8fde\u901a\u5757\uff0c\u6bcf\u4e2a\u8fde\u901a\u5757\u5747\u662f\u4e00\u68f5\u6700\u5c0f\u751f\u6210\u6811\u3002\n\n\u6700\u5c0f\u82b1\u8d39\u4e3a\uff1a$\\sum$ \u6bcf\u68f5\u6700\u5c0f\u751f\u6210\u6811\u6743\u503c $+$ $\\sum$ \u6bcf\u68f5\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u6700\u5c0f\u7684 $c_i$\u3002\n\n\u8003\u8651\u5c06\u6240\u6709\u8fb9\u6309\u7167\u5347\u5e8f\u6392\u5e8f\uff0c\u4eff\u7167 Kruskal \u7b97\u6cd5\uff0c\u5728\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u6700\u5c0f\u751f\u6210\u6811\u7684\u4fe1\u606f\u7684\u57fa\u7840\u4e0a\uff0c\u540c\u65f6\u7ef4\u62a4\u8fb9\u6743\u7684\u52a0\u548c\u4ee5\u53ca\u6700\u5c0f\u7684 $c_i$\u3002\n\n\u52a0\u8fb9\u65f6\uff0c\u9700\u8981\u6ce8\u610f\u52a0\u8fb9\u7684\u6761\u4ef6\uff1a $w_{u,v}\\leq \\max(u$ \u6240\u5728\u7684\u8fde\u901a\u5757\u4e2d\u6700\u5c0f\u7684 $c_i,v$ \u6240\u5728\u7684\u8fde\u901a\u5757\u4e2d\u6700\u5c0f\u7684 $c_i)$\u3002\n\n**\u8003\u8651\u4e0b\u9762\u8fd9\u79cd\u60c5\u51b5\uff1a**\n\n\n\n\u5047\u8bbe\u73b0\u5728\u6709\u8fde\u901a\u5757 $A,B,C$\uff0c\u5176\u4e2d $w_{A,B}=w_{A,C}<w_{B,C}$\u3002\n\n\u6b64\u65f6\uff0c\u5e94\u8be5\u5148\u8003\u8651 $A\\leftrightarrow B$\uff0c\u8fd8\u662f\u5148\u8003\u8651 $A\\leftrightarrow C$\uff1f\n\n\u5148\u540e\u987a\u5e8f\u65e0\u5173\u7d27\u8981\uff0c\u56e0\u4e3a\u65e0\u8bba\u5148\u9009\u54ea\u6761\u8fb9\uff0c\u90fd\u8282\u7701\u4e86 $c-w$ \u7684\u82b1\u8d39\u3002",
        "postTime": 1683601693,
        "uid": 36285,
        "name": "\u6c27\u5c11Kevin",
        "ccfLevel": 4,
        "title": "CF1245D-Shichikuji and Power Grid-\u8d2a\u5fc3,\u6700\u5c0f\u751f\u6210\u6811"
    },
    {
        "content": "\u8003\u5bdf\u7b97\u6cd5\uff1a**\u6700\u5c0f\u751f\u6210\u6811**\n\n\u4e3a\u4ec0\u4e48\u8981\u7528\u6700\u5c0f\u751f\u6210\u6811\uff1f\n\n\u5982\u679c\u6211\u4eec\u5c06\u95ee\u9898\u8f6c\u5316\u4e3a\u4e00\u4e2a\u56fe\uff0c\u90a3\u4e48\u6211\u4eec\u6700\u7ec8\u8981\u505a\u7684\u5c31\u662f\u628a\u6574\u4e2a\u56fe\u8054\u901a\u4e14\u6c42\u5176\u6700\u5c0f\u4ee3\u4ef7\uff0c\u90a3\u4e48\u81ea\u7136\u7684\u80fd\u60f3\u5230\u6700\u5c0f\u751f\u6210\u6811\u3002\n\n\u5982\u4f55\u7528\u6700\u5c0f\u751f\u6210\u6811\u89e3\u51b3\u672c\u95ee\u9898\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u5efa\u4e00\u4e2a\u8d85\u7ea7\u6e90\u70b9 $0$\uff0c\u7136\u540e\u5c06\u6bcf\u4e2a\u57ce\u5e02\u90fd\u4e0e $0$ \u7ed3\u70b9\u8fde\u4e00\u6761\u8fb9\uff0c\u8fb9\u6743\u5c31\u662f\u8fd9\u4e2a\u70b9\u7684 $c$ \u503c\uff0c\u5176\u4ed6\u7684\u8fb9\u6b63\u5e38\u5efa\u5373\u53ef\uff0c\u7136\u540e\u5728 $0$ \u5230 $n$ \u8282\u70b9\u4e4b\u95f4\u8dd1\u6700\u5c0f\u751f\u6210\u6811\u5373\u53ef\u3002",
        "postTime": 1680273570,
        "uid": 774862,
        "name": "Tsinghua_pwtking",
        "ccfLevel": 0,
        "title": "CF1245D\u9898\u89e3"
    },
    {
        "content": "### \u601d\u7ef4\u8def\u5f84\n\n\u770b\u5230\u8fd9\u9053\u9898\uff0c\u9996\u5148\u53d1\u73b0\u9898\u4e2d\u5b58\u5728\u4e24\u79cd\u64cd\u4f5c\uff1a\u5efa\u9020\u53d1\u7535\u7ad9\u548c\u8fde\u63a5\u57ce\u5e02\uff0c\u53c8\u8981\u6c42\u6700\u5c0f\u4ee3\u4ef7\uff0c\u60f3\u5230\u6700\u5c0f\u751f\u6210\u6811\u3002\n\n\u90a3\u4e48\u8fd9\u9053\u9898\u6700\u91cd\u8981\u7684\u90e8\u5206\u5c31\u843d\u5728\u4e86\u5982\u4f55\u6ee1\u8db3\u4e24\u79cd\u64cd\u4f5c\u3002\n\n\u6211\u4eec\u5efa\u7acb\u4e00\u4e2a\u65b0\u7684\u8282\u70b9 $n+1$ \uff0c\u5728\u6700\u7ec8\u65b9\u6848\u4e2d\u4e0e $n+1$ \u53f7\u8282\u70b9\u76f8\u8fde\u7684\u5c31\u4ee3\u8868\u5efa\u9020\u4e86\u53d1\u7535\u7ad9\u3002\n\n### \u5177\u4f53\u5b9e\u73b0\uff08\u5efa\u8fb9\uff09\n\n\u9996\u5148\u8003\u8651\u4e0e $n+1$ \u53f7\u8282\u70b9\u8fde\u8fb9\u7684\u8282\u70b9\uff0c\u8f93\u5165 $c_i$ \uff0c\u5c06\u5b83\u4e0e $n+1$ \u5efa\u8fb9\uff0c\u5177\u4f53\u5b9e\u73b0\u5982\u4e0b\u3002\n\n```cpp\ne[++nE]=(edge){n+1,i,c[i]};\n```\n\n\u518d\u8003\u8651\u5404\u8282\u70b9\u4e4b\u95f4\u7684\u8fde\u8fb9\uff0c\u8f93\u5165 $k_i$ \u540e\uff0c\u679a\u4e3e $1$ \u5230 $i-1$ \uff0c\u4f9d\u6b21\u5efa\u8fb9\uff0c\u5177\u4f53\u5b9e\u73b0\u5982\u4e0b\u3002\n\n```cpp\nfor(ll i=1;i<=n;i++){\n\tcin>>k[i];\n\tfor(ll j=1;j<i;j++){\n\t\te[++nE]=(edge){j,i,(k[j]+k[i])*(abs(x[i]-x[j])+abs(y[i]-y[j]))};\n\t}\n}\n```\n\n*\u6700\u5c0f\u751f\u6210\u6811\u7684\u7b97\u6cd5\u6b65\u9aa4\u5c31\u4e0d\u518d\u8d58\u8ff0\uff0c\u6709\u9700\u8981\u53ef\u79fb\u6b65\u81f3[P3366 \u3010\u6a21\u677f\u3011\u6700\u5c0f\u751f\u6210\u6811](https://www.luogu.com.cn/problem/P3366)\u3002*\n\n### AC\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst ll N=2009;\nconst ll M=2001*2001+9;\nll n,c[N],nE,fa[N],ans,cnt,x[N],y[N],k[N],nL,he[N],nH;\nstruct edge{\n\tll u,v,w;\n} e[M];\nstruct node{\n\tll num1,num2;\n} lian[N]; \n\nvoid input(){\n\tcin>>n;\n\tfor(ll i=1;i<=n;i++){\n\t\tcin>>x[i]>>y[i];\n\t}\n\tfor(ll i=1;i<=n;i++){\n\t\tcin>>c[i];\n\t\te[++nE]=(edge){n+1,i,c[i]};\n\t}\n\tfor(ll i=1;i<=n;i++){\n\t\tcin>>k[i];\n\t\tfor(ll j=1;j<i;j++){\n\t\t\te[++nE]=(edge){j,i,(k[j]+k[i])*(abs(x[i]-x[j])+abs(y[i]-y[j]))};\n\t\t}\n\t}\n}\n\nll findfa(ll x){\n\tif(fa[x]==x) return x;\n\treturn fa[x]=findfa(fa[x]);\n}\n\nbool cmp(const edge&a,const edge&b){\n\tif(a.w<b.w) return true;\n\telse return false;\n}\n\nvoid solve(){\n\tsort(e+1,e+nE+1,cmp);\n\tfor(ll i=1;i<=n+1;i++) fa[i]=i;\n\tfor(ll i=1;i<=nE;i++){\n//\t\tcout<<i<<\" \";\n\t\tll x=e[i].u;\n\t\tll y=e[i].v;\n\t\tll z=e[i].w;\n//\t\tcout<<x<<\" \"<<y<<\" \"<<z<<endl;\n\t\tll fx=findfa(x);\n\t\tll fy=findfa(y);\n\t\tif(fx==fy) continue;\n\t\tans+=z;\n\t\tfa[fx]=fy;\n\t\tcnt++;\n\t\tif(x==n+1){\n\t\t\the[++nH]=y;\n\t\t}\n\t\telse if(y==n+1){\n\t\t\the[++nH]=x;\n\t\t}\n\t\telse{\n\t\t\tlian[++nL]=(node){x,y};\n\t\t}\n\t\tif(cnt==n) break;\n\t} \n\tcout<<ans<<endl;\n\tcout<<nH<<endl;\n\tfor(ll i=1;i<=nH;i++){\n\t\tcout<<he[i]<<\" \";\n\t}\n\tcout<<endl;\n\tcout<<nL<<endl;\n\tfor(ll i=1;i<=nL;i++){\n\t\tcout<<lian[i].num1<<\" \"<<lian[i].num2<<endl;\n\t}\n}\n\nint main(){\n\tinput();\n\tsolve();\n\treturn 0;\n}\n```\n",
        "postTime": 1659965831,
        "uid": 305296,
        "name": "\u4e91\u96f7\u5fc3\u67e0\u6aac\u542c",
        "ccfLevel": 0,
        "title": "CF1245D \u9898\u89e3"
    },
    {
        "content": "\u6765\u6c34\u4e00\u53d1\u9898\u89e3\u3002         \n\n\u8003\u8651 $n \\leq 2000$ \u66b4\u529b $O(n ^ 2)$ \u5efa\u56fe\u5373\u53ef\u3002              \n\n\u7136\u540e\u4e3a\u4e86\u4fdd\u8bc1\u81f3\u5c11\u6709\u4e00\u4e2a\u70b9\u6709\u7535\uff0c\u6240\u4ee5\u5efa\u7acb\u865a\u70b9\u50cf\u6bcf\u4e2a\u70b9 $i$ \u8fde\u4e00\u6761\u8fb9 $c_i$ \u7684\u8fb9\u5373\u53ef\u3002                    \n\n\u7136\u540e\u8dd1\u6700\u5c0f\u751f\u6210\u6811\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n ^ 2 \\log n)$ \u74f6\u9888\u5728\u4e8e\u6392\u5e8f\u3002     \n\n```cpp\n#include \"bits/stdc++.h\"\nusing namespace std;\nconst int Len = 2e3 + 5;\nint n,m,M,X[Len],Y[Len],c[Len],k[Len],num;\nbool vis[Len * Len * 2];\nstruct Node\n{\n\tint x,y,opt;long long w;\n\tNode(){x = y = w = opt = 0;}\n\tNode(int X,int Y,int OPT,long long W){x = X , y = Y , opt = OPT , w = W;}\n}edge[Len * Len * 2],Print[Len];\nbool cmp(Node x,Node y){return x.w < y.w;}\nlong long Ans;\nint Iabs(int x){return x > 0 ? x : -x;} \nint dist(int x,int y,int XX,int YY){return Iabs(x - XX) + Iabs(y - YY);}\nint fa[Len];long long ans;void makeSet(int x){for(int i = 1 ; i <= x ; i ++) fa[i] = i;}\nint findSet(int x){return fa[x] == x ? fa[x] : fa[x] = findSet(fa[x]);}\nvoid unionSet(int x,int y,int id,long long w)\n{\n\tint u = findSet(x) , v = findSet(y);\n\tif(u == v) return;\n\tvis[id] |= 1; \n\tans += w;\n\tfa[v] = u;\n}\nint main()\n{\n\tscanf(\"%d\",&n);M = n + 1;for(int i = 1 ; i <= n ; i ++) scanf(\"%d %d\",&X[i],&Y[i]);for(int i = 1 ; i <= n ; i ++) scanf(\"%d\",&c[i]);for(int i = 1 ; i <= n ; i ++) scanf(\"%d\",&k[i]);\n\tfor(int i = 1 ; i <= n ; i ++)\n\t{\n\t\tedge[++ m] = Node(M , i , 1 , c[i]);\n\t\tfor(int j = i + 1 ; j <= n ; j ++) edge[++ m] = Node(i , j , 2 , 1ll * (k[i] + k[j]) * dist(X[i] , Y[i] , X[j] , Y[j]));\n\t}\n\tsort(edge + 1 , edge + 1 + m , cmp);\n\tmakeSet(M);\n\tfor(int i = 1 ; i <= m ; i ++) unionSet(edge[i].x , edge[i].y , i , edge[i].w);\n\tprintf(\"%lld\\n\",ans);\n\tnum = 0;\n\tfor(int i = 1 ; i <= m ; i ++) if(vis[i] && edge[i].opt == 1) Print[++ num] = Node(edge[i].y , 0 , 0 , 0);\n\tprintf(\"%d\\n\",num);\n\tfor(int i = 1 ; i <= num ; i ++) printf(\"%d \",Print[i].x);\n\tnum = 0;puts(\"\");\n\tfor(int i = 1 ; i <= m ; i ++) if(vis[i] && edge[i].opt == 2) Print[++ num] = Node(edge[i].x , edge[i].y,  0 , 0);\n\tprintf(\"%d\\n\",num);\n\tfor(int i = 1  ; i <= num ; i ++) printf(\"%d %d\\n\",Print[i].x,Print[i].y);\n\treturn 0;\n}\n```",
        "postTime": 1632384550,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 Shichikuji and Power Grid"
    },
    {
        "content": "\u521a\u597d\u6628\u5929\u6bd4\u8d5b\u89c1\u5230\u8fd9\u9053\u9898\u3002\n\n\u9996\u5148\u60f3\u5230\u7684\u662f\u5e76\u67e5\u96c6\uff0c\u5199\u4e86\u4e00\u4e0b\u5361\u4f4f\u4e86\uff0c\u53d7\u5927\u4f6c\u542f\u53d1\uff0c\u6700\u5c0f\u751f\u6210\u6811\u5f88\u5bb9\u6613\u3002\u91cd\u5199\uff01\n\n\u5982\u679c\u6709\u5e76\u67e5\u96c6\u9898\u89e3\u4e00\u5b9a\u8981\u63d0\u9192\u6211\uff01\n\n### \u9898\u610f\uff1a\n#### \u6709n\u4e2a\u70b9\n\n#### \u5206\u522b\u7ed9\u4f60n\u4e2a\u70b9\u7684\u5750\u6807\n\n#### \u70b9\u6743\uff08\u5efa\u7acb\u53d1\u7535\u7ad9\u7684\u82b1\u8d39\uff09\n\n#### \u8fb9\u6743\uff08\u6ca1\u6709\u76f4\u63a5\u7ed9\uff0c\u901a\u8fc7O\uff08n*n)\u6c42\u51fa\uff09\n\n#### \u8981\u8ba9\u6bcf\u4e2a\u57ce\u5e02\u90fd\u901a\u7535\uff0c\u901a\u7535\u7684\u6761\u4ef6\u662f\u8981\u4e48\u8fd9\u4e2a\u70b9\u81ea\u5df1\u5efa\u7acb\u53d1\u7535\u7ad9\uff0c\u8981\u4e48\u4e0e\u5efa\u7acb\u53d1\u7535\u7ad9\u7684\u70b9\u8fde\u901a\n\n### \u601d\u8def\n\n#### \u6709\u70b9\u6743\u53c8\u6709\u8fb9\u6743\u600e\u4e48\u6c42\u6700\u5c0f\u5462\uff1f\n\n#### \u8fd9\u91cc\u5f15\u5165\u4e00\u4e2a\u8d85\u7ea7\u6839\uff0c\u8ba9\u8d85\u7ea7\u6839\u4e0e\u5176\u4ed6\u6240\u6709\u70b9\u76f8\u8fde\u63a5\uff0c\u8fd9\u6837n\u4e2a\u70b9\u7684\u70b9\u6743\u503c\u5c31\u53ef\u4ee5\u8f6c\u5316\u4e3a\u8d85\u7ea7\u8ddf\u4e0e\u4e4b\u8fde\u63a5\u7684\u8fb9\u6743\n\n#### \u8fd9\u6837\u518d\u7528\u4e00\u4e2a\u6700\u5c0f\u751f\u6210\u6811\u5c31\u5b8c\u7f8e\u89e3\u51b3\u4e86\u3002\n\n```cpp\n#include <iostream>\n#include <algorithm>\n//just MST\nusing namespace std;\ntypedef long long LL;\nconst int maxn=2000+3;\n\nint n,m,tot,pnum,wnum;\nint fa[maxn],p[maxn];\nLL c[maxn],k[maxn],sum;\n\nstruct edge\n{\n    int u;\n    int v;\n    LL w;\n}e[maxn*maxn];\nstruct node//save the situation\n{\n    LL x;\n    LL y;\n}a[maxn];\nstruct wire//answer's wire\n{\n    int x;\n    int y;\n}wi[maxn];\nbool cmp(struct edge x,struct edge y)\n{\n    return x.w<y.w;\n}\nint father(int x)\n{\n    if(fa[x]!=x) fa[x]=father(fa[x]);\n    return fa[x];\n}\nvoid join(int x,int y)\n{\n    fa[father(x)]=father(y);\n}\nvoid add(int u,int v,LL w)\n{\n    e[++m].u=u;\n    e[m].v=v;\n    e[m].w=w;\n}\nvoid read()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++)\n        cin>>a[i].x>>a[i].y;\n    for(int i=1;i<=n;i++)\n        cin>>c[i];\n    for(int i=1;i<=n;i++)\n        cin>>k[i];\n\n}\nvoid deal_edge()\n{\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=n;j++)\n        {\n            if(i==j) continue;\n            LL w;\n            //pay attention this place,it may be boom int\n            w=(k[i]+k[j])*(abs(a[i].x-a[j].x)+abs(a[i].y-a[j].y));\n            add(i,j,w);\n        }\n    }\n    for(int i=1;i<=n;i++)\n    {\n        add(0,i,c[i]);\n        add(i,0,c[i]);\n    }\n}\nvoid kruskal()\n{\n    sort(e+1,e+1+m,cmp);\n    for(int i=0;i<=n;i++) fa[i]=i;\n    for(int i=1;i<=m;i++)\n    {\n        int u=e[i].u;\n        int v=e[i].v;\n        LL  w=e[i].w;\n        if(tot==n) break;\n        if(father(u)!=father(v))\n        {\n            //means the point which don't equal 0 is the power\n            if(u==0||v==0)\n            {\n                p[++pnum]=u+v;\n            }\n            else {\n                //they are wire\n                wi[++wnum].x=u;\n                wi[wnum].y=v;\n            }\n            join(u,v);\n            tot++;\n            sum+=w;\n        }\n    }\n}\nint main()\n{\n    read();\n    deal_edge();\n    kruskal();\n    cout<<sum<<endl;\n    cout<<pnum<<endl;\n    for(int i=1;i<=pnum;i++)\n    {\n        cout<<p[i]<<\" \";\n    }\n    cout<<endl;\n    cout<<wnum<<endl;\n    for(int i=1;i<=wnum;i++)\n    {\n        cout<<wi[i].x<<\" \"<<wi[i].y<<endl;\n    }\n}\n```\n",
        "postTime": 1575718942,
        "uid": 147268,
        "name": "\u674e\u4f1f\u4e1a",
        "ccfLevel": 0,
        "title": "CF1245D Shichikuji and Power Grid"
    },
    {
        "content": "\u8003\u573a\u4e0a\u5f53Dijkstra\u5199\u4e86(\u6342\u8138)  \n\u6211\u4eec\u5047\u5b9a\u6709\u4e00\u4e2a\u7ed3\u70b9,\u662f~~\u4e07\u6076~~\u7535\u529b\u4e4b\u6e90\u3002\u6240\u6709\u5efa\u9020\u7535\u7ad9\u53ef\u4ee5\u7b49\u6548\u4e3a\u4e0e\u7535\u529b\u4e4b\u6e90~~\u7b7e\u8ba2\u534f\u8bae~~\u8fde\u63a5\u3002  \n\u4e8e\u662f\u6240\u6709\u64cd\u4f5c\u53d8\u6210\u4e86\u8fde\u8fb9\u64cd\u4f5c,\u90a3\u4e48\u76f4\u63a5\u5f53\u6700\u5c0f\u751f\u6210\u6811\u5957prim\u677f\u5b50\u5373\u53ef\u3002  \n```cpp\n#include <cstdio>\n#define ll long long\n\nusing namespace std;\n\nconst ll INF = 1e17 + 10;\nconst int N = 2345;\n\nll xi[N], yi[N], w[N], dis[N], vis[N], tlen;\nint u[N], v[N], po[N], pre[N], etot, ptot, n;\ninline ll min(ll x, ll y) { return x < y ? x : y; } \ninline ll fabs(ll x) { return x < 0 ? -x : x; }\ninline ll getdis(int x, int y) { return (fabs(xi[x] - xi[y]) +  fabs(yi[x] - yi[y])) * (w[x] + w[y]); }\ninline void addans(int x, int y) { u[etot] = x; v[etot++] = y; }\ninline void addpo(int x) { po[ptot++] = x; }\ninline void prim() {\n\tint cur = 0; dis[0] = INF;\n\tfor(int i = 1; i <= n; ++i) if(dis[cur] > dis[i]) cur = i;\n\ttlen += dis[cur]; vis[cur] = 1;\n\taddpo(cur);\n\tfor(int i = 1; i <= n; ++i) if(!vis[i]) {\n\t\tll w = getdis(cur, i);\n\t\tif(w < dis[i]) dis[i] = w, pre[i] = cur;\n\t}\n\tfor(int i = 1; i < n; ++i) {\n\t\tcur = 0;\n\t\tfor(int i = 1; i <= n; ++i) if(!vis[i] && dis[i] < dis[cur]) cur = i;\n\t\ttlen += dis[cur];\n\t\tif(pre[cur]) addans(pre[cur], cur);\n\t\telse addpo(cur);\n\t\tvis[cur] = 1;\n\t\tfor(int i = 1; i <= n; ++i) if(!vis[i]) {\n\t\t\tll w = getdis(cur, i);\n\t\t\tif(w < dis[i]) dis[i] = w, pre[i] = cur;\n\t\t}\n\t}\n}\n\nint main() {\n\tscanf(\"%d\", &n);\n\tfor(int i = 1; i <= n; ++i) scanf(\"%lld %lld\", xi + i, yi + i);\n\tfor(int i = 1; i <= n; ++i) scanf(\"%lld\", dis + i);\n\tfor(int i = 1; i <= n; ++i) scanf(\"%lld\", w + i);\n\tprim();\n\tprintf(\"%lld\\n%d\\n\", tlen, ptot);\n\tfor(int i = 0; i < ptot; ++i) printf(\"%d \", po[i]);\n\tprintf(\"\\n\");\n\tprintf(\"%d\\n\", etot);\n\tfor(int i = 0; i < etot; ++i)\n\t\tprintf(\"%d %d\\n\", u[i], v[i]);\n\treturn 0;\n}\n```",
        "postTime": 1572745628,
        "uid": 88735,
        "name": "\u5bd2\u9e3d\u513f",
        "ccfLevel": 0,
        "title": "(prim) \u9898\u89e3 CF1245D \u3010Shichikuji and Power Grid\u3011"
    },
    {
        "content": "## \u5206\u6790\n\n\u7531\u4e8e\u6c42\u6700\u5c0f\u8054\u901a\u4ee3\u4ef7\uff0c\u8003\u8651**\u6700\u5c0f\u751f\u6210\u6811**\u3002\u65b9\u6cd5\u548c\u5176\u4ed6\u5927\u4f6c\u4e00\u6837\uff0c**\u4f46**\u6211\u4f1a\u8be6\u7ec6\u89e3\u91ca\u8fc7\u7a0b\uff0c\u611f\u6027\u7406\u89e3\u4e00\u4e0b\u3002\n\n\u9996\u5148\uff0c\u5efa\u7acb\u4e00\u4e2a 0 \u53f7\u8282\u70b9\uff08\u8d85\u7ea7\u6e90\u70b9\uff09\uff0c\u662f\u7535\u529b\u4e4b\u6e90\uff0c\u628a\u5b83\u5f80\u5404\u4e2a\u57ce\u5e02\u8fde\u4e00\u6761\u8fb9\uff0c\u8fb9\u6743\u4e3a\u5efa\u7acb\u53d1\u7535\u7ad9\u7684\u4ee3\u4ef7\u3002\u4e3a\u4ec0\u4e48\u5462\uff1f\u53ef\u4ee5\u60f3\u8c61\u4e00\u4e0b\uff0c\u5efa\u7acb\u53d1\u7535\u7ad9\u7684\u4ee3\u4ef7\uff0c\u4e3a**\u53bb**\u7535\u529b\u4e4b\u6e90\u518d**\u56de\u6765**\u7684\u4ee3\u4ef7**\u4e4b\u548c**\uff0c\u8fd9\u6837\u4e00\u53bb\u4e00\u56de\uff0c\u5c31\u9700\u8981\u8fde\u4e00\u6761\u8fb9\uff0c\u4e5f\u5c31\u5efa\u7acb\u4e86\u53d1\u7535\u7ad9\u3002\n\n\u7136\u540e\u6839\u636e\u4e24\u4e24\u7684\u5750\u6807\u7b49\u5efa\u8fb9\u5e76\u7b97\u51fa\u8fb9\u6743\uff0c\u8fd9\u6837\u6784\u5efa\u4e86\u4e00\u5f20\u56fe\u3002\u7531\u4e8e\u81f3\u5c11\u8981\u6709\u4e00\u6761\u8fb9\u901a\u5411\u7535\u529b\u4e4b\u6e90\uff08\u5426\u5219\u6ca1\u6709\u4efb\u4f55\u53d1\u7535\u7ad9\uff09,\u5c31\u53ef\u4ee5\u76f4\u63a5\u8dd1\u6700\u5c0f\u751f\u6210\u6811\u4e86\uff0c\u6211\u9009\u7528 **Kruskal**\u3002\n\n## AC code:\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\t//\u5341\u5e74OI\u4e00\u573a\u7a7a\uff0c\u4e0d\u5f00long long\u89c1\u7956\u5b97\nusing namespace std;\nstruct Node\n{\n\tint x,y,c;//\u8fb9\u7684\u8d77\u70b9\uff0c\u7ec8\u70b9\uff0c\u6743\u503c\n}g[5000005];\nstruct Edge\n{\n\tint x,y;//\u57ce\u5e02z[]\u7684\u6a2a\u7eb5\u5750\u6807 \u6216 \u8fde\u7ebflx[]\u7684\u8fb9\u7684\u8d77\u70b9\u7ec8\u70b9\n}z[3005];\n\nint n,m,ans,dad[100005],cnt,k[3005],num;\nint fd_n,fd[3005];//\u53d1\u7535\u7ad9\u6570\u91cf\uff0c\u53d1\u7535\u7ad9\u6240\u5728\u57ce\u5e02\nint lx_n;//\u8fde\u7ebf\u6761\u6570\nEdge lx[5000005];//\u8fde\u7ebf\n\nint anc(int x)//\u5e76\u67e5\u96c6\u67e5\u627e\u7956\u5148\n{\n\tif(dad[x]==0)\n\t\treturn x;\n\treturn dad[x]=anc(dad[x]);\n}\nbool cmp(Node a,Node b)//\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n{\n    return a.c<b.c;\n}\nsigned main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t\tcin>>z[i].x>>z[i].y;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcnt++;//cnt\u8bb0\u5f55\u8fb9\u7684\u6570\u91cf\n\t\tg[cnt].x=0;\n\t\tg[cnt].y=i;\n\t\tcin>>g[cnt].c;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tcin>>k[i];\n\t//Kruskal\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tcnt++;\n\t\t\tg[cnt].x=i;\n\t\t\tg[cnt].y=j;\n\t\t\tg[cnt].c=(k[i]+k[j])*(abs(z[i].x-z[j].x)+abs(z[i].y-z[j].y));\n\t\t}\n\t}\n \tsort(g+1,g+1+cnt,cmp);\n\tfor(int i=1;i<=cnt;i++)\n\t{\n\t\tint x=anc(g[i].x);\n\t\tint y=anc(g[i].y);\n\t\tif(x==y)\n\t\t\tcontinue;\n\t\tdad[x]=y;\n\t\tnum++;//\u8bb0\u5f55\u5df2\u7ecf\u5efa\u7acb\u8fb9\u6570\n\t\tans+=g[i].c;//\u8d39\u7528\u589e\u52a0\n\t\tif(g[i].x==0)//\u8d77\u70b9\u4e3a0\uff0c\u5efa\u7acb\u53d1\u7535\u7ad9\n\t\t\tfd[++fd_n]=g[i].y;\n\t\telse//\u8fde\u7ebf\n\t\t{\n\t\t\tlx[++lx_n].x=g[i].x;\n\t\t\tlx[lx_n].y=g[i].y;\n\t\t}\n\t\tif(num==n+1-1)//n+1\u4e3a\u8282\u70b9\u6570\uff08\u5305\u62ec0\uff09\uff0cn+1-1\u4e3a\u8fb9\u6570\n\t\t\tbreak;\n\t}\n\tcout<<ans<<endl;\n\tcout<<fd_n<<endl;\n\tfor(int i=1;i<=fd_n;i++)\n\t\tcout<<fd[i]<<' ';\n\tcout<<endl<<lx_n<<endl;\n\tfor(int i=1;i<=lx_n;i++)\n\t\tcout<<lx[i].x<<' '<<lx[i].y<<endl;\n\treturn 0;\n}\n```\n\n## ~~\u9a97\u8d5e~~\u5c0f\u8d34\u58eb\uff1a\n- \u5341\u5e74 OI \u4e00\u573a\u7a7a\uff0c\u4e0d\u5f00 `long long` \u89c1\u7956\u5b97\n- \u53cc\u500d\u7ecf\u9a8c [P1550 [USACO08OCT]Watering Hole G](https://www.luogu.com.cn/problem/P1550)\n\n\n",
        "postTime": 1644410067,
        "uid": 307912,
        "name": "songxiao",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF1245D Shichikuji and Power Grid"
    }
]