[
    {
        "content": "### \u9898\u610f  \n\n\u7ed9\u5b9a $n,m,k$\uff0c\u5206\u522b\u8868\u793a\u5e03\u4e0a\u7834\u88c2\u7684\u70b9\u7684\u6570\u91cf\uff0c\u5e03\u7684\u603b\u957f\u5ea6\uff0c\u53ea\u80fd\u4f7f\u7528\u7684\u80f6\u5e26\u7684\u6570\u91cf\u3002\u63a5\u4e0b\u6765 $n$ \u4e2a\u6b63\u6574\u6570 $b_i$\uff0c\u4fdd\u8bc1 $b_i$ \u4e25\u683c\u9012\u589e\u4e14 $b_n \\leqslant m$\u3002  \n\n\u80f6\u5e26\u53ef\u4ee5\u901a\u8fc7\u7c98\u5408\u4fee\u590d\u5e03\u3002\u6c42\u4fee\u590d\u5e03\u6240\u9700\u7684\u6700\u5c0f\u7684\u80f6\u5e26\u603b\u957f\u5ea6\u3002\u6ce8\u610f\u6bcf\u4e00\u4e2a\u80f6\u5e26\u7684\u957f\u5ea6\u90fd\u53ea\u80fd\u662f\u6574\u6570\u3002  \n\n\n### \u601d\u8def  \n\n\u8fd9\u4e2a\u9898\u867d\u7136\u662f CF\uff0c\u4f46\u5b9e\u9645\u4e0a\u601d\u7ef4\u5f3a\u5ea6\u4e0d\u5927\u3002\u6211\u4eec\u628a\u64cd\u4f5c\u8fc7\u7a0b\u60f3\u6210\u5206\u5272 $k - 1$ \u6b21\uff0c\u4ee4 $d_i = b_i - b_{i - 1}(i\\in[2, n])$\uff0c\u7136\u540e\u4ece\u5927\u5230\u5c0f\u6392\u5e8f $d$ \u6570\u7ec4\u3002\u663e\u7136\u5272\u6389\u7684\u90a3\u4e9b\u80f6\u5e26\u7684\u957f\u5ea6\u5747\u5927\u4e8e\u7b49\u4e8e $d_{k - 1}$\u3002\n\n\u4f46\u662f\u7ec6\u8282\u95ee\u9898\u53ef\u80fd\u6bd4\u8f83\u4e0d\u597d\u5904\u7406\uff1a\u5f53\u7b2c $k - 1$ \u5927\u7684\u957f\u5ea6\u6709\u5f88\u591a\u4e2a\u65f6\uff0c\u5e94\u8be5\u600e\u4e48\u5206\u5272\uff1f\u4ed4\u7ec6\u60f3\u60f3\u4e5f\u80fd\u60f3\u5230\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5141\u8bb8\u80f6\u5e26\u8d8a\u8fc7\u5dee\u7b49\u4e8e $d_{k - 1}$ \u7684\u6b21\u6570\u7b49\u4e8e $i \\in [k,n]$ \u4e2d $a_i = d_{k - 1}$ \u7684\u6570\u91cf\u3002  \n\n[AC code \u8bb0\u5f55](https://www.luogu.com.cn/record/63564146)  \n\n```cpp\n#include <bits/stdc++.h>\n#define rep1(i, j, n) for (int i = j; i <= int(n); ++i)\n#define rep2(i, j, n) for (int i = j; i >= int(n); --i)\n#define ......\nusing namespace std;\ntypedef long long ll;\ntypedef ......\nconst int MAXN = 1e5 + 10, inf = ~0U >> 2, INF = ~0U >> 1;\nconst int dx[] = {0, 0, 1, -1}, dy[] = {1, -1, 0, 0};\nnamespace stupid_lrc\n{\n\ttemplate <typename T>\n\til void read(T &x)\n    \n    il int read()\n\t\n\ttemplate <typename T>\n\til void write(T x)\n\t\n\ttemplate <typename T>\n\til T my_max(const T &x, const T &y)\n\t\n\ttemplate <typename T>\n\til T my_min(const T &x, const T &y)\n\t\n\ttemplate <typename T>\n\til T lowbit(const T &x)\n\t\n\til string ItS(int k)\n\t\n\til int StI(const string &s)\n}\nusing namespace stupid_lrc;\n// \u5947\u5999\u7f3a\u7701\u6e90\nint n, m, k, a[MAXN], d[MAXN]; ll ans;\n\nint main()\n{\n\tread(n); read(m); read(k);\n\trep1(i, 1, n) read(a[i]), d[i] = a[i] - a[i - 1];\n\td[1] = -inf;\n\tsort(d + 1, d + 1 + n, greater <int>());\n\tint l = 1, r = 1; d[0] = INF;\n\tint q = 0;\n\trep1(i, k, n) q += d[i] == d[k - 1];\n\twhile (l <= r && r <= n)\n\t{\n\t\tbool p = true;\n\t\tif (r < n)\n\t\t{\n\t\t\tint t = a[r + 1] - a[r];\n\t\t\tif (q > 0 && t <= d[k - 1]) q -= t == d[k - 1], ++r, p = false;\n\t\t\telse if (q <= 0 && t < d[k - 1]) ++r, p = false;\n\t\t}\n\t\tif (p) ans += a[r] - a[l] + 1, l = ++r;\n\t}\n\twrite(ans);\n\trout;\n}\n```",
        "postTime": 1637834558,
        "uid": 409236,
        "name": "StayAlone",
        "ccfLevel": 6,
        "title": "CF1110B Tape C++ \u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\uff0c\u8fd9\u9898\u4e2d\u6bcf\u4e00\u4e2a\u70b9\u90fd\u662f\u9700\u8981\u88ab\u8986\u76d6\u7684  \n\u5728\u80f6\u5e26\u6570\u91cf$k=n$\u7684\u60c5\u51b5\u4e0b\uff0c\u53ea\u9700\u8981\u8986\u76d6\u6bcf\u4e2a\u70b9\u5373\u53ef  \n\u5426\u5219\u7684\u8bdd\uff0c\u6bcf\u5c11\u7528\u4e00\u4e2a\u80f6\u5e26\u4ee3\u8868\u4f1a\u6709\u4e24\u4e2a**\u76f8\u90bb\u7684**\u70b9\u8981\u4f7f\u7528\u540c\u4e00\u4e2a\u80f6\u5e26\u8986\u76d6\u5373\u9700\u8981\u8986\u76d6\u8fd9\u4e24\u4e2a\u70b9\u4e4b\u524d\u7684\u533a\u95f4(**\u4e0d\u5305\u62ec\u7aef\u70b9\uff0c\u5373\u5f00\u533a\u95f4**)\u7684\u957f\u5ea6$b[i]-b[i-1]-1$\n\n\u5230\u4e86\u8fd9\u91cc\u6211\u4eec\u5c31\u53ef\u4ee5**\u8d2a\u5fc3**\u4e86  \n\u4e0d\u96be\u53d1\u73b0\uff0c\u53ea\u8981\u6bcf\u6b21\u53d6\u6700\u5c0f\u7684\u533a\u95f4\u77e5\u9053\u80f6\u5e26\u6570\u6ee1\u8db3\u8981\u6c42\u5373\u53ef  \n\u800c\u9700\u8981\u53d6\u7684\u533a\u95f4\u6570\u5373\u4e3a$n-k$  \n\n\u6700\u540e\u52a0\u4e0a\u70b9\u6570n\u5373\u53ef  \n\n## code:\n\n```cpp\n#include <map>\n#include <list>\n#include <cmath>\n#include <queue>\n#include <vector>\n#include <string>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#define LL long long\nusing namespace std;\nconst LL INF = 0x3f3f3f3f3f3f3f3f;\n\nLL n,m,k;\nLL l[100005] = {0};\nLL dl[100005] = {0}; // \u4fdd\u5b58\u533a\u95f4\u957f\u5ea6\nLL sum = 0;\n\nint main(){\n\tios::sync_with_stdio(false);\n\tcin >> n >> m >> k;\n\tk = n - k; // \u5148\u628ak\u6539\u4e3a\u9700\u8981\u53d6\u5f97\u533a\u95f4\u6570\u91cf\n\tfor(register int i = 1;i <= n;i ++){\n\t\tcin >> l[i];\n\t\tdl[i - 1] = l[i] - l[i - 1] - 1; // \u8ba1\u7b97\u533a\u95f4\u957f\u5ea6\n\t}\n\tsort(dl + 1,dl + n); // \u4ece\u5c0f\u5230\u5927\u6392\u5e8f(\u6ce8\u610f\u53ea\u6709n-1\u4e2a\u533a\u95f4)\n\tfor(register int i = 1;i <= k;i ++) sum += dl[i]; // \u8986\u76d6\u533a\u95f4\n\tcout << sum + n << endl; // \u52a0\u4e0a\u6240\u6709\u7aef\u70b9\uff0c\u8f93\u51fa\u7b54\u6848\n\treturn 0;\n}\n```",
        "postTime": 1551875741,
        "uid": 31440,
        "name": "installb",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1110B \u3010Tape\u3011"
    },
    {
        "content": "[\u539f\u9898\u4f20\u9001\u95e8](http://codeforces.com/problemset/problem/1110/B?csrf_token=5c7c36a779badf846118e6a7915707ec)\n\nYou have a long stick, consisting of mm segments enumerated from 11 to mm. Each segment is 11 centimeter long. Sadly, some segments are broken and need to be repaired.\n\nYou have an infinitely long repair tape. You want to cut some pieces from the tape and use them to cover all of the broken segments. To be precise, a piece of tape of integer length tt placed at some position ss will cover segments s,s+1,\u2026,s+t\u22121s,s+1,\u2026,s+t\u22121.\n\nYou are allowed to cover non-broken segments; it is also possible that some pieces of tape will overlap.\n\nTime is money, so you want to cut at most kk continuous pieces of tape to cover all the broken segments. What is the minimum total length of these pieces?\n\nInput\nThe first line contains three integers nn, mm and kk (1\u2264n\u22641051\u2264n\u2264105, n\u2264m\u2264109n\u2264m\u2264109, 1\u2264k\u2264n1\u2264k\u2264n) \u2014 the number of broken segments, the length of the stick and the maximum number of pieces you can use.\n\nThe second line contains nn integers b1,b2,\u2026,bnb1,b2,\u2026,bn (1\u2264bi\u2264m1\u2264bi\u2264m) \u2014 the positions of the broken segments. These integers are given in increasing order, that is, b1<b2<\u2026<bnb1<b2<\u2026<bn.\nOutput\nPrint the minimum total length of the pieces.\ninput\n4 100 2\n20 30 75 80\noutput\n17\ninput\n5 100 3\n1 2 4 60 87\noutput\n6\nNote\nIn the first example, you can use a piece of length 1111 to cover the broken segments 2020 and 3030, and another piece of length 66 to cover 7575 and 8080, for a total length of 1717.\n\nIn the second example, you can use a piece of length 44 to cover broken segments 11, 22 and 44, and two pieces of length 11 to cover broken segments 6060 and 8787.\n\n**\u9898\u76ee\u5927\u610f\uff1a**\n\n\u603b\u957f\u5ea6\u4e3am\u7684\u7eb8\u4e0a\uff0c\u6709n\u4e2a\u70b9\uff0c\u70b9\u7684\u4f4d\u7f6e\u4e3ab\u6570\u7ec4\uff0c\u73b0\u7528k\u6761\u7ebf\u6bb5\u8986\u76d6\u6240\u6709\u7684\u70b9\uff0c\u6c42\u7ebf\u6bb5\u603b\u957f\u5ea6\u6700\u5c0f\u503c\n\n\u5f00\u59cb\u60f3\u5230\u7684\u662fO(n^2)\u7684DP\uff0c\u7136\u540e\u53d1\u73b0n<=100000\uff0c\u679c\u65ad\u6dd8\u6c70\n\n\u4ed4\u7ec6\u4e00\u60f3\uff0c\u6709\u7384\u673a\uff01\n\n\u82e5\u6709\u4e00\u6761\u7ebf\u6bb5\u8986\u76d6\u4e86\u4e24\u4e2a\u5fc5\u987b\u8981\u8986\u76d6\u7684\u70b9\uff0c\u90a3\u4e48\u8fd9\u4e24\u70b9\u4e2d\u95f4\u7684\u666e\u901a\u70b9\u4e5f\u88ab\u8986\u76d6\uff0c\u7ebf\u6bb5\u603b\u957f\u5ea6\u5c31\u662f\u88ab\u8986\u76d6\u7684\u666e\u901a\u70b9+\u6240\u6709\u5fc5\u987b\u8986\u76d6\u7684\u70b9\n\u6240\u4ee5\u6211\u4eec\u4ee4\u88ab\u8986\u76d6\u7684\u666e\u901a\u70b9\u6700\u5c11\n\n\u7136\u540e\u666e\u901a\u70b9\u662f\u4e00\u6bb5\u4e00\u6bb5\u6765\u7684\uff0c\u5c31\u662f\u4e24\u4e2a\u5fc5\u987b\u8986\u76d6\u7684\u70b9\u7684\u95f4\u9694\uff0c\u6240\u4ee5\u53ea\u8981\u7b97\u51fa\u95f4\u9694\uff0c\u6392\u4e2a\u5e8f\u5c31\u884c\u4e86\n\n\nCode\uff1a\n\n```cpp\n/*\n4 100 2\n20 30 75 80\n*/\n#include <bits/stdc++.h>\n#define res register int\n#define ll long long\n#define maxn 100010\nusing namespace std;\nint n, m, k, c[maxn];\n\ninline int read(){\n\tint s = 0, w = 1;\n\tchar c = getchar();\n\twhile (c < '0' || c > '9'){\n\t\tif (c == '-') w = -1; c = getchar();\n\t}\n\twhile (c >= '0' && c <= '9') s = (s << 1) + (s << 3) + (c ^ 48), c = getchar();\n\treturn s * w;\n}\n\nint main(){\n\tn = read(), m = read(), k = read();\n\tint a = read(), b = 0;\n\tfor (res i = 2; i <= n; ++ i){\n\t\tb = read(); c[i - 1] = b - a - 1; a = b;\n\t}\n\tsort(c + 1, c + n);\n\tint ans = 0;\n\tfor (res i = 1; i <= n - k; ++ i) ans += c[i];\n\tprintf(\"%d\\n\", ans + n);\n\treturn 0;\n}\n```\n",
        "postTime": 1549616694,
        "uid": 51719,
        "name": "ModestCoder_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1110B \u3010Tape\u3011"
    },
    {
        "content": "## \u9898\u9762\n\n\u5148\u7ed9\u4f60n,m,k,\u5206\u522b\u8868\u793a\u70b9\u6570\uff0c\u603b\u957f\u5ea6\uff0c\u80f6\u5e26\u7684\u6570\u91cf\n\n\u518d\u7ed9\u4f60n\u4e2a\u70b9\uff0c\u4fdd\u8bc1\u9012\u589e\u3002\n\n\u6c42\u8986\u76d6\u6240\u6709\u7684\u70b9\u6240\u9700\u7684\u6700\u5c0f\u80f6\u5e26\u957f\u5ea6\uff08\u80f6\u5e26\u6570\u91cf<=k\uff09\n\n~~\u8868\u793a\u8bed\u6587\u5dee\u5230\u6781\u70b9~~\n\n---\n\n### \u9898\u89e3\n\n\u6570\u636e\u8303\u56f4100000\uff0c\u5f88\u663e\u7136\u662fnlogn\u7684\u590d\u6742\u5ea6\n\n~~nlogn^2\u4e5f\u6709\u53ef\u80fd~~\n\n\u5148\u8003\u8651k=1\u7684\u60c5\u51b5\n\n\u5f88\u663e\u7136\u5c31\u662f\u4ece\u7b2c1\u4e2a\u70b9\u8986\u76d6\u5230\u7b2cn\u4e2a\u70b9\n\n\u5982\u679ck\u66f4\u5927\u5462\n\n---\n\n\u8003\u8651\u8d2a\u5fc3\n\n\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u90fd\u8981\u8986\u76d6\uff0c\u6240\u4ee5\u51cf\u5c11\u7684\u6700\u591a\u53ea\u80fd\u662f\u76f8\u90bb\u4e24\u70b9\u95f4\u7684\u4e00\u6bb5\n\n\u518d\u6839\u636e\u8d2a\u5fc3\uff0c\u6211\u4eec\u8981\u6c42\u51fa\u80fd\u51cf\u5c11\u4e2d\u7684\u524dk-1\u5927\u7684\n\n\u90a3\u4e48\u8f93\u5165\u65f6\u5904\u7406\u51fa\u76f8\u90bb\u4e24\u70b9\u95f4\u95f4\u8ddd\uff0c\u7136\u540esort\u6392\u4e00\u53d1\u5c31\u597d\u4e86\n\n\u590d\u6742\u5ea6O(nlogn)~~\u4e3b\u8981\u662fsort\u7684\u65f6\u95f4~~\n\n\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint a[100005],sum[100005];\nbool cmp(int i,int j)\n{\n\treturn i>j;\n}\nint main()\n{\n\tint n,k,s;\n\tcin>>n>>k>>s;\n\tfor(int i=1;i<=n;++i)cin>>a[i];\n\tint num=a[n]-a[1]+1;\n\tfor(int i=2;i<=n;++i)\n\tsum[i]=a[i]-1-a[i-1];\n\tsort(sum+2,sum+n+1,cmp);\n\tfor(int i=2;i<=s;++i)\n\tnum-=sum[i];\n\tcout<<num;\n}\n```",
        "postTime": 1549606097,
        "uid": 79926,
        "name": "chenlingxi",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1110B \u3010Tape\u3011"
    },
    {
        "content": "### \u524d\u8a00\n\u5728 nowcoder \u4e0a\u505a\u5230\u4e86\u8fd9\u9053\u9898\uff0c\u4e8e\u662f\u51c6\u5907\u5728\u6d1b\u8c37\u6c34\u4e00\u4e0b\u793e\u533a\u8d21\u732e\u3002\n\n### \u89e3\u6790\n- \u53ef\u4ee5\u53d1\u73b0\u7834\u88c2\u7684\u70b9\u53ea\u6709\u548c\u524d\u540e\u4e24\u70b9\u8fde\u4e0e\u4e0d\u8fde\u4e24\u79cd\u72b6\u6001\uff0c\u53ef\u4ee5\u8d2a\u5fc3\u7684\u8003\u8651\u5982\u679c\u5b83\u548c\u76f8\u90bb\u70b9\u63a5\u8fd1\u7684\u8bdd\u5c31\u8fde\uff0c\u53cd\u4e4b\u4e0d\u8fde\u3002\n\n- \u600e\u4e48\u5b9e\u73b0\uff1f\u53ef\u4ee5\u7528\u5dee\u5206\u6765\u7ef4\u62a4\u76f8\u90bb\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u5f88\u663e\u7136 $k$ \u4e2a\u80f6\u5e26\u5c06\u70b9\u5206\u4e3a\u4e86 $k$ \u4e2a\u8fde\u7eed\u90e8\u5206\uff0c\u8fd9\u7b49\u4ef7\u4e8e\u6211\u4eec\u9700\u8981\u5bfb\u627e $k-1$ \u4e2a\u65ad\u70b9\u3002\n\n- \u663e\u7136\u7684\uff0c\u65ad\u70b9\u524d\u540e\u8ddd\u79bb\u4e4b\u5dee\u8d8a\u5927\uff0c\u5b83\u5bf9\u51cf\u5c11\u80f6\u5e26\u957f\u5ea6\u7684\u8d21\u732e\u5c31\u6700\u5927\uff0c\u6240\u4ee5\u6211\u4eec\u53d6\u524d\u540e\u8ddd\u79bb\u524d $k-1$ \u5927\u7684\u5730\u65b9\u4e3a\u65ad\u70b9\u3002\n\n\u4e0b\u9644\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n\nusing namespace std;\n\nconst int N=100010;\nint n,m,k;\nint a[N],p[N];\nint main()\n{\n    scanf(\"%d%d%d\",&n,&m,&k);\n    for(int i=1;i<=n;i++)  scanf(\"%d\",&a[i]);\n    for(int i=2;i<=n;i++)   p[i]=a[i]-a[i-1];\n    sort(p+2,p+n+1);\n    int ans=0;\n    for(int i=2;i<=n-k+1;i++)  ans+=p[i];\n    \n    printf(\"%d\\n\",ans+k);\n    return 0;\n}\n```\n\u5b8c\u7ed3\u6492\u82b1~\n",
        "postTime": 1673607104,
        "uid": 295398,
        "name": "1105Lee",
        "ccfLevel": 0,
        "title": "Tape \u9898\u89e3"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\n\u4e00\u5171\u6709 $n$\u200b \u4e2a\u70b9\u5206\u5e03\u5728 $1,2,3\\cdots m$\u200b \u4e2d\uff0c\u4f60\u6709 $k$\u200b \u6761\u80f6\u5e03\u3002\n\n\u6bcf\u6761\u80f6\u5e03\u53ef\u4ee5\u6709\u65e0\u9650\u957f\u3002\n\n\u73b0\u5728\u8ba9\u4f60\u7528\u80f6\u5e03\u8986\u76d6 $n$\u200b \u4e2a\u70b9\uff0c\u6700\u7ec8\u6bcf\u6761\u80f6\u5e03\u957f\u5ea6\u548c\u6700\u5c0f\uff0c\u8f93\u51fa\u8fd9\u4e2a\u957f\u5ea6\u548c\u3002\n\n### \u601d\u8def\n\n\u6700\u5f00\u59cb\u88ab\u8fd9\u4e2a\u5c51\u7ffb\u8bd1\u5751\u4e86\uff0c\u4ee5\u4e3a\u662f\u6bcf\u6761\u80f6\u5e03\u957f\u5ea6\u76f8\u7b49\uff0c\u6c42\u6700\u5c0f\u7684\u80f6\u5e03\u957f\u3002\n\n\u6837\u4f8b\u90fd\u6ca1\u770b\uff0c\u5c31\u641e\u4e86\u4e2a\u4e8c\u5206\uff0c\u679c\u7136\u6837\u4f8b\u4e0d\u8fc7\u3002\u7ffb\u8bd1\u4e86\u82f1\u6587\u9898\u9762\u7ec8\u4e8e\u770b\u61c2\u4e86\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u80fd\u60f3\u5230\u4e00\u4e2a\u8d2a\u5fc3\uff1a\n\n\u4e24\u4e2a\u76f8\u90bb\u7684\u70b9\u7684\u8ddd\u79bb\u53ef\u4ee5\u770b\u505a**\u8986\u76d6\u90a3\u4e2a\u70b9\u7684\u80f6\u5e03\u7684\u4e00\u90e8\u5206**\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53d6\u6700\u5c0f\u7684\u8ddd\u79bb\uff0c\u8fd9\u6837\u65e2\u53ef\u4ee5\u4fdd\u8bc1\u80fd\u8986\u76d6 $n$ \u4e2a\u70b9\uff0c\u8fd8\u80fd\u4f7f\u7b54\u6848\u6700\u5c0f\u3002\n\n\u6574\u4e2a\u5dee\u5206\u6570\u7ec4\uff0c`sort` \u4e00\u904d\uff0c\u53d6 $n-k$\u200b \u4e2a\u8ddd\u79bb\uff08\u56e0\u4e3a\u4e00\u6761\u80f6\u5e03**\u81f3\u5c11\u80fd\u8986\u76d6\u4e00\u4e2a\u70b9**\uff0c\u4e8e\u662f $k$ \u4e2a\u70b9\u5c31\u4e0d\u7528\u7b97\u4e86\uff09\u3002\n\n\u6211\u4eec\u5728\u6dfb\u52a0\u7684\u8fc7\u7a0b\u4e2d\u8fd8\u8981\u5904\u7406\u4e00\u4e2a $cnt$\uff0c\u8868\u793a\u5904\u7406\u4e2d\u5df2\u7ecf\u8986\u76d6\u4e86\u591a\u5c11\u4e2a\u70b9\u3002\n\n\u6700\u540e\u8981\u7528\u603b\u957f\u5ea6\u52a0\u4e0a $n-cnt$\u200b\u200b\u200b\u200b\u200b\u200b\u200b\uff0c\u56e0\u4e3a $cnt<n$\u200b\u200b\u200b\u200b\u200b\u200b\u200b \u65f6\uff0c\u4e00\u5b9a\u8981\u7528\u5176\u4ed6\u5269\u4f59\u7684\u80f6\u5e03**\u5355\u72ec\u8986\u76d6\u6ca1\u6709\u8986\u76d6\u5230\u7684\u70b9**\u3002\uff08\u4e3a\u4ec0\u4e48\u4e00\u5b9a\u5269\u4e0b\u591a\u4f59\u7684\u80f6\u5e03\uff0c\u4e4b\u524d\u5df2\u7ecf\u89e3\u91ca\u8fc7\u4e86\uff09\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define rep1(i, j, n) for (int i(j); i <= n; ++i)\n#define rep2(i, j, n) for (int i(j); i >= n; --i)\n#define il inline\nusing namespace std;\ntemplate <typename T>\nil void read(T &x) {\n   x = 0; T f = 1; char ch = getchar();\n   while (!isdigit(ch)) x = (ch == '-') << 1, ch = getchar();\n   while (isdigit(ch)) x = (x << 1) + (x << 3) + (ch & 15), ch = getchar();\n   x *= f;\n}\nconst int N = 1e5 + 5, inf = 0x3f3f3f3f;\nint n, m, k, a[N]; bool vis[N];//vis[i]\u5b58i\u6709\u6ca1\u6709\u88ab\u80f6\u5e03\u8986\u76d6\nstruct node {int i, j, dis; il bool operator < (const node &x) const {return dis < x.dis;}} d[N];\nmain() {\n\tread(n); read(m); read(k);\n\trep1(i, 1, n) {\n\t\tread(a[i]); if (i != 1) d[i - 1] = (node) {i, i - 1, a[i] - a[i - 1]};//\u5904\u7406\u8ddd\u79bb\n\t}\n\tsort(d + 1, d + n);/*\u4ece\u5c0f\u5230\u5927\u6392\u5e8f*/ int cnt = 0, sum = 0;\n\trep1(i, 1, n - k/*n-k\u4e2a\u8ddd\u79bb*/) {\n\t\tif (!vis[d[i].i] && !vis[d[i].j]) cnt += 2, ++sum;\n\t\telse ++cnt; //\u5206\u7c7b\u5bf9cnt\u5904\u7406\n\t\tsum += d[i].dis;\n\t\tvis[d[i].i] = vis[d[i].j] = 1;\n\t}\n\tprintf(\"%d\", sum + (n - cnt)/*\u5269\u4f59n-cnt\u4e2a\u70b9\u662f\u5355\u72ec\u8986\u76d6\u7684\uff0c\u6240\u4ee5\u8981\u52a0n-cnt*/);\n}\n```\n\n",
        "postTime": 1637680559,
        "uid": 377787,
        "name": "Hooch",
        "ccfLevel": 6,
        "title": "CF1110B"
    },
    {
        "content": "# \u601d\u8def\n\u901a\u8fc7\u8bfb\u9898\uff0c\u53ef\u4ee5\u53d1\u73b0\u6211\u4eec\u5fc5\u987b\u4f7f\u7528 $k$ \u957f\u5ea6\u7684\u80f6\u5e26\uff0c\u5269\u4e0b\u6ca1\u6709\u8986\u76d6\u7684\u5c31\u9700\u8981\u901a\u8fc7\u8986\u76d6\u4e24\u4e2a\u70b9\u7684\u533a\u95f4\u6765\u8986\u76d6\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5c31\u662f\u8981\u8986\u76d6 $k$ \u4e2a\u70b9\u548c $n-k$ \u4e2a\u533a\u95f4\u3002\n\n\u62ff\u6837\u4f8b\u6765\u8bf4\uff0c\u9996\u5148\u82b1\u8d39 $2$ \u957f\u5ea6\u7684\u80f6\u5e26\u8986\u76d6\u4e24\u4e2a\u70b9\uff08\u6ce8\u610f\uff0c\u4e0d\u662f\u524d\u4e24\u4e2a\uff09\uff0c\u518d\u5c06\u4e24\u70b9\u4e4b\u95f4\u7684\u533a\u95f4\u957f\u5ea6\u6392\u5e8f\uff0c\u8986\u76d6\u524d $2$ \u4e2a\uff0c\u4e5f\u5c31\u662f $20$ \u5230 $30$ \u548c $75$ \u5230 $80$\u3002\u6700\u540e\u5c06\u603b\u548c\u52a0\u8d77\u6765\u5c31\u884c\u4e86\u3002\n# \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n,m,k,a[100005],s[100005],ans;\nint main(){\n\tcin>>n>>m>>k;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>a[i];\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\ts[i]=a[i]-a[i-1];\n\t}\n\ts[1]=INT_MAX;//\u6392\u9664\u7b2c\u4e00\u4e2a\n\tif(n==k){\n\t\tcout<<n;\n\t\treturn 0;\n\t}//\u6ce8\u610f\uff0c\u5982\u679c\u80f6\u5e26\u548c\u70b9\u4e00\u6837\u591a\uff0c\u5c31\u76f4\u63a5\u6bcf\u4e2a\u70b9\u8986\u76d6\u4e00\u4e2a\u957f\u5ea6\u4e3a1\u7684\u5c31\u884c\u4e86\u3002\n\tans=k;//\u5148\u8986\u76d6k\u4e2a\u70b9\u3002\n\tsort(s+1,s+n+1);\n\tn-=k;\n\tfor(int i=1;i<=n;i++){\n\t\tans+=s[i];//\u52a0\u4e0a\u533a\u95f4\u957f\uff0c\u6ce8\u610f\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u8986\u76d6\u4e86\u4e00\u4e2a\u70b9\u4e86\uff0c\u6240\u4ee5\u52a0\u957f\u5ea6\u7684\u65f6\u5019\u4e0d\u7528\u52a01\u3002\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```",
        "postTime": 1637660188,
        "uid": 461375,
        "name": "_easy_",
        "ccfLevel": 0,
        "title": "CF1110B"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u5176\u5b9e\u5e76\u4e0d\u96be\u3002  \n\u4e0d\u96be\u53d1\u73b0\uff0c\u4e0d\u7ba1\u6211\u4eec\u600e\u6837\u53bb\u8986\u76d6\uff0c\u6309\u7167\u9898\u76ee\u8981\u6c42\uff0c\u6709$n$\u4e2a\u70b9\u662f\u5fc5\u987b\u8986\u76d6\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u8003\u8651\u5148\u5355\u72ec\u8986\u76d6\u6bcf\u4e2a\u70b9\uff0c\u8fd9\u6837\u7684\u8bdd\u9700\u8981$n$\u6bb5\u6765\u8986\u76d6\uff0c\u8003\u8651\u5230\u9898\u76ee\u7ed9\u6211\u4eec\u52a0\u4e86\u4e00\u4e2a\u6700\u591a$k$\u6bb5\u7684\u9650\u5236\uff0c\u89c2\u5bdf\u4e00\u4e0b\u600e\u4e48\u6837\u4f1a\u51cf\u5c11\u6bb5\u6570\u3002  \n\u5f88\u5bb9\u6613\u63a8\u51fa\uff1a\u5982\u679c\u4f60\u628a\u76f8\u90bb\u4e24\u4e2a\u70b9\u8fde\u8d77\u6765\uff08\u4e2d\u95f4\u5168\u90e8\u8986\u76d6\uff09\uff0c\u4f1a\u4f7f\u5f97\u6bb5\u6570-1\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e24\u4e2a\u70b9\u5206\u522b\u6240\u5728\u7684\u6bb5\u5408\u5e76\u6210\u4e00\u4e2a\u6bb5\u3002  \n\u6240\u4ee5\u505a\u6cd5\u5c31\u5f88\u660e\u663e\u4e86\uff0c\u628a\u6bcf\u4e00\u4e2a\u4e2d\u95f4\u6bb5\uff08\u4e0d\u5305\u542b\u4e24\u4e2a\u7aef\u70b9\uff09\u62ff\u51fa\u6765\u6392\u5e8f\uff0c\u53bb\u6389\u6700\u5927\u7684$k-1$\u4e2a\uff08\u4fdd\u7559\u8f83\u5c0f\u7684$n-k$\u4e2a\uff0c\u56e0\u4e3a\u76ee\u524d\u603b\u6bb5\u6570\u662f$n$\uff0c\u6309\u7167\u4e0a\u8ff0\u7ed3\u8bba\u8fd9\u6837\u64cd\u4f5c\u540e\u5269\u4f59\u6bb5\u6570\u662f$n-(n-k)=k$\u4e2a\uff09\uff0c\u5269\u4f59\u7684\u4e2d\u95f4\u6bb5\u6c42\u548c\uff0c\u518d\u52a0\u4e0a$n$\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u603b\u82b1\u8d39\u6700\u5c11\u4e86  \n\u590d\u6742\u5ea6$O(nlogn)$\n```cpp\n#include <bits/stdc++.h>\n#define jh(x,y) x^=y^=x^=y\n#define rg register\n#define inl inline\ntypedef long long ll;\nconst int N = 1e5 + 5, mod = 1e9 + 7;\nusing namespace std;\nnamespace fast_IO {\n    inl ll read()\n    {\n        rg ll num = 0;\n        rg char ch;\n        rg bool flag = false;\n        while ((ch = getchar()) == ' ' || ch == '\\n' || ch == '\\r');\n        if (ch == EOF)return ch; if (ch == '-')flag = true; else num = ch ^ 48;\n        while ((ch = getchar()) != ' '&&ch != '\\n'&&ch != '\\r'&&~ch)\n            num = (num << 1) + (num << 3) + (ch ^ 48);\n        if (flag)return -num; return num;\n    }\n    inl int chread(rg char s[])\n    {\n        rg int len = 0;\n        rg char ch;\n        while ((ch = getchar()) == ' ' || ch == '\\n' || ch == '\\r');\n        s[len++] = ch;\n        while ((ch = getchar()) != ' '&&ch != '\\n'&&ch != '\\r'&&~ch)\n            s[len++] = ch;\n        s[len] = 0;\n        return len;\n    }\n    inl ll max(rg ll a, rg ll b) { if (a > b)return a; return b; }\n    inl ll min(rg ll a, rg ll b) { if (a < b)return a; return b; }\n    void write(rg long long x) { if (x < 0)putchar('-'), x = -x; if (x >= 10)write(x / 10); putchar(x % 10 ^ 48); }\n};\nint b[N], n, m, k, ans, t[N];\n\nint main(void)\n{\n    n = fast_IO::read(), m = fast_IO::read(), k = fast_IO::read(), ans = 0;\n    for (rg int i = 1; i <= n; ++i)b[i] = fast_IO::read();\n    for (rg int i = 1; i != n; ++i)t[i] = b[i + 1] - b[i] - 1;\n    sort(t + 1, t + n);\n    for (rg int i = 1; i <= n - k; ++i)ans += t[i];\n    fast_IO::write(ans + n);\n    return 0;\n}\n\n```",
        "postTime": 1549610410,
        "uid": 87283,
        "name": "Zechariah",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1110B \u3010Tape\u3011"
    },
    {
        "content": "\u533a\u95f4\u8d2a\u5fc3\n\n\u6b63\u96be\u5219\u53cd\uff0c\u6211\u4eec\u628a\u5b83\u5f53\u6210\u4e00\u4e2a\u533a\u95f4\u62c6\u89e3\u95ee\u9898\n\n\u6211\u4eec\u628a\u5b83\u62c6\u6210k\u4e2a\u533a\u95f4\uff0c\u610f\u5473\u8005\u8981\u62c6k-1\u6b21\n\n\u6bcf\u4e00\u6b21\u663e\u7136\u62c6\u533a\u95f4\u957f\u5ea6\u6700\u957f\u7684\u3002\n\n\u4ee3\u7801\uff08codeforces\u8bc4\u6d4bid\uff1a49573821\uff09\uff0c\u6211\u7684\u6bd4\u8d5b\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#include<iostream>\n#include<cstdio>\n#define ll long long\nusing namespace std;\n\nll n,m,k,a[100010],b[100010],ans;\n\ninline bool cmp(ll x,ll y){\n\treturn x>y;\n}\n\nint main(){\n\tcin>>n>>m>>k;\n\tfor(ll i=1; i<=n; i++) scanf(\"%I64d\",&a[i]);\n\tfor(ll i=1; i<n; i++) b[i]=a[i+1]-a[i]-1;//\u7b97\u51fa\u6bcf\u4e00\u4e2a\u533a\u95f4\u7684\u957f\u5ea6\uff0c\u8fd9\u91cc\u8981\u6ce8\u610f\uff0c\u533a\u95f4\u4e24\u7aef\u4e00\u5b9a\u8981\u88ab\u8986\u76d6\uff0c\u76f8\u5f53\u4e8e\u4e00\u4e2a\u4e24\u7aef\u90fd\u4e0d\u79cd\u7684\u690d\u6811\u95ee\u9898\n\tans=a[n]-a[1]+1;//\u7b54\u6848\u521d\u503c\u5c31\u662f\u533a\u95f4\u603b\u957f\n\tsort(b+1,b+1+n,cmp);//\u6309\u533a\u95f4\u957f\u5ea6\u4ece\u957f\u5230\u77ed\u6392\u5e8f\n\tfor(ll i=1; i<k; i++) ans-=b[i];//\u51cf\u53bb\u524dk-1\u957f\u7684\u533a\u95f4\n\tcout<<ans;//\u8f93\u51fa\n\treturn 0;\n}\n```",
        "postTime": 1549599006,
        "uid": 27924,
        "name": "xukuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1110B \u3010Tape\u3011"
    },
    {
        "content": "\u8d2a\u5fc3+\u7ef4\u62a4\u53ef\u91cd\u590d\u524dk\u5c0f\u503c\n\n\u9996\u5148\u53ef\u4ee5\u60f3\u5230\u628a\u6bcf\u4e2a\u574f\u7684\u5730\u65b9\u5355\u72ec\u4fee\u7406\uff0c\u5171\u7528\u78c1\u5e26$n$\n\n\u7136\u540e\u518d\u628a$n-k$\u4e2a\u76f8\u90bb\u7684\u653e\u5728\u4e00\u8d77\u4fee\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u6700\u591a\u7528$k$\u6bb5\u78c1\u5e26\n\n\u6211\u4eec\u4f1a\u53d1\u73b0\u4f60\u9009\u54ea$n-k$\u6bb5\u662f\u65e0\u6240\u8c13\u7684\uff0c\u6240\u4ee5\u53ea\u8981\u7ef4\u62a4\u524d$n-k$\u5c0f\u7684\u76f8\u90bb\u4e24\u70b9\u8ddd\u79bb\u5373\u53ef\n\n\u8fd9\u91cc\u5c31\u6709\u70b9\u6bd2\u7624\u4e86\n\n\u6211\u5148\u524d\u5e76\u4e0d\u77e5\u9053```multiset```\u5220\u9664\u672b\u5c3e\u5143\u7d20\u65f6\uff0c\u4f1a\u628a```multiset```\u4e2d\u7684\u6bcf\u4e2a\u548c\u8fd9\u4e2a\u5143\u7d20\u76f8\u7b49\u7684\u90fd\u5220\u6389\n\n\u7136\u540e```Wrong Answer On Test 10```$\\times 2$\n\n\u6700\u540e\u53d1\u73b0\u8fd9\u70b9\u540e\u52a0\u4e86\u4e2a```map```\u5224\u65ad\u672b\u5c3e\u5143\u7d20\u662f\u5426\u9700\u8981\u5168\u90e8\u5220\u9664\u540e\u624d\u8fc7\u4e86\n\n\u9644\u4e0a\u4ee3\u7801\n\n\u6284\u9898\u89e3\u52ff\u6270\n```cpp\ninclude<cstdio>\ninclude<set>\ninclude<map>\nusing namespace std\nint n,m,k,lst,nw,tp,t;\nmultiset<int> s;\nmap<int,int> mp;\nint main()\n{\n    scanf(\"%d %d %d\",&n,&m,&k);\n    tp=n-k;\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&nw);\n        if(lst) s.insert(nw-lst),mp[nw-lst]++;\n        if(s.size()>n-k)\n        {\n            mp[*(--s.end())]--;\n            if(!mp[*(--s.end())]) s.erase(*(--s.end()));\n        }\n        lst=nw;\n    }\n    for(set<int>::iterator it=s.begin();it!=s.end(),t<tp;it++,t++)\n        k+=*it;\n    printf(\"%d\",k);\n}\n```",
        "postTime": 1549589366,
        "uid": 60899,
        "name": "hpbl",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1110B \u3010Tape\u3011"
    }
]