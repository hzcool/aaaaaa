[
    {
        "content": "# CF497D \u9898\u89e3\n\n~~\u6559\u7ec3\u8003\u8bd5\u8003\u5230\u4e86\u8fd9\u9053\u9898\uff0c\u7136\u540e\u8003\u8bd5\u5305\u91cc\u7ed9\u7684\u9898\u89e3\u5e76\u4e0d\u597d\u800c\u4e14\u6709\u70b9\u53cd\u903b\u8f91\uff0c\u6211\u5c31\u81ea\u5df1\u5199\u4e86qwq~~\n\n~~\u7136\u540e\u6211\u7684\u5929\u6d1b\u8c37\u4e0a\u6ca1\u6709\u9898\u89e3~~\n\n## \u9898\u610f\n\n\u7ed9\u4f60\u4e24\u4e2a\u591a\u8fb9\u5f62\uff0c\u4e24\u4e2a\u591a\u8fb9\u5f62\u65cb\u8f6c\u901f\u5ea6\u548c\u65b9\u5411\u76f8\u7b49\u3002\u6c42\u5728\u4efb\u610f\u65f6\u523b\u662f\u5426\u53ef\u80fd\u76f8\u4ea4\u3002\n\n## \u601d\u8def\n\n\u4e3a\u4e86\u65b9\u4fbf\u8ba8\u8bba\uff0c\u4e24\u4e2a\u591a\u8fb9\u5f62\u90fd\u6309\u7167\u987a\u65f6\u9488\u65cb\u8f6c\u3002\n\n\u53ef\u4ee5\u60f3\u4e00\u60f3\u9006\u65f6\u9488\uff0c\u4f46\u662f\u4e24\u8005\u662f\u4e00\u6837\u7684\u3002\n\n\u9996\u5148\u56fa\u5b9a\u4e00\u4e2a\u591a\u8fb9\u5f62(\u79f0\u547c\u5176\u4e3a A )\uff0c\u4ee5 A \u4e3a\u53c2\u8003\u7cfb\u3002\u5e76\u4e14\u53ea\u65cb\u8f6c A\u3002\u6b64\u65f6\u53ef\u4ee5\u7406\u89e3\u4e3a\u5168\u4e16\u754c\u90fd\u5728\u7ed5\u7740\u8fd9\u4e2a\u591a\u8fb9\u5f62\u7684\u4e2d\u5fc3\uff0c\u505a\u9006\u65f6\u9488\u65cb\u8f6c\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/owwxm8ay.png)\n\n\u8003\u8651\u53e6\u5916\u4e00\u4e2a\u591a\u8fb9\u5f62(\u79f0\u547c\u5176\u4e3aB)\u4e5f\u5728\u65cb\u8f6c\uff0c\u7531\u4e8e A,B \u521a\u597d\u65cb\u8f6c\u901f\u5ea6\u4e00\u81f4\u3002\u6b64\u65f6\u5c31\u4f1a\u53d8\u6210\u4e0b\u9762\u8fd9\u79cd\u753b\u98ce\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/c2nk1esv.png)\n\n\u662f\u4e0d\u662f\u7a81\u7136\u53d8\u5f97\u6709\u610f\u601d\u8d77\u6765\u4e86\u3002\u6b64\u65f6\u4ec5\u4ec5\u76f8\u5f53\u4e8e B \u7684\u4e2d\u5fc3\u5728\u7ed5\u7740 A \u7684\u4e2d\u5fc3\u65cb\u8f6c\u3002\n\n\u82e5 A \u548c B \u76f8\u4ea4\u4e86\uff0c\u53ef\u4ee5\u89c6\u4e3a\u5176\u4e2d\u4e00\u4e2a\u591a\u8fb9\u5f62\u7684\u70b9\u78b0\u5230\u4e86\u53e6\u5916\u4e00\u4e2a\u591a\u8fb9\u5f62\u7684\u8fb9\u3002(\u597d\u50cf\u82f1\u6587\u9898\u9762\u91cc\u8bf4\u660e\u4e86)\n\n\u6b64\u65f6\u5c31\u6709\u4e86\u4e24\u4e2a\u601d\u8def\uff1a\n\n+ \u8003\u8651 A \u7684\u70b9\u78b0\u5230\u4e86 B \u7684\u8fb9\u3002  \n  \u6b64\u65f6\u8003\u8651 B \u8fb9\u626b\u8fc7\u7684\u533a\u57df\uff0c\u82e5 A \u5728 B \u8fb9\u626b\u8fc7\u7684\u533a\u57df\u5185\u4ee3\u8868\u4f1a\u76f8\u4ea4\u3002\u8fd9\u6837\u5b50\u8003\u8651\u5f88\u9ebb\u70e6\uff0c\u53c2\u8003\u4e0b\u56fe\uff0c\u753b\u51fa\u4e86 B \u4e0b\u9762\u4e24\u4e2a\u70b9\u7684\u8f68\u8ff9\uff1a  \n  ![](https://cdn.luogu.com.cn/upload/image_hosting/i3xwanfx.png)  \n  \u5982\u679c\u4f60\u5c1d\u8bd5\u5728\u7a0b\u5e8f\u91cc\u8868\u793a\u51fa B \u8fb9\u626b\u8fc7\u7684\u533a\u57df\uff0c\u4f1a\u53d1\u73b0\u5f88\u9ebb\u70e6\u3002\u6211\u4eec\u6362\u4e00\u4e2a\u601d\u8def\u3002\n\n+ \u8003\u8651 A \u8fb9\u78b0\u5230\u4e86 B \u7684\u70b9\u3002  \n  \u8fd9\u6837\u4f1a\u597d\u8003\u8651\u5f97\u591a\u3002\u4f9d\u65e7\u662f\u4e0a\u9762\u8fd9\u5f20\u56fe\uff0c\u4f1a\u53d1\u73b0\u7b49\u4ef7\u6761\u4ef6\u662f B \u7684\u67d0\u4e00\u4e2a\u70b9\u7684\u8f68\u8ff9\u4e0e A \u7684\u67d0\u4e00\u6761\u8fb9\u76f8\u4ea4\uff0c\u5373\u5224\u65ad\u5706\u662f\u5426\u548c\u7ebf\u6bb5\u76f8\u4ea4\u3002  \n  \u7f51\u4e0a\u6709\u5f88\u591a\u5224\u65ad\u5706\u4e0e\u7ebf\u6bb5\u662f\u5426\u76f8\u4ea4\u7684\u65b9\u6cd5\uff0c\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u662f\u5224\u65ad\u4e24\u70b9\u4e0e\u5706\u7684\u4f4d\u7f6e\u5173\u7cfb\u7136\u540e\u8fdb\u884c\u5206\u7c7b\u8ba8\u8bba\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002\n\n\u4f46\u662f\u4f1a\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u4e24\u4e2a\u591a\u8fb9\u5f62\uff0c\u4f7f\u5f97 B \u7684\u70b9\u8fd0\u52a8\u8f68\u8ff9\u4e0d\u4f1a\u7ecf\u8fc7 A \u7684\u8fb9\u3002\u5982\u4e0b\u9762\u8fd9\u7ec4\uff1a\n\n``` cpp\n-2 -1\n10\n0 3\n-1 2\n-2 4\n-6 1\n-5 0\n-7 -1\n-6 -2\n-4 -4\n-3 -5\n-2 -6\n\n0 0\n10\n20 1\n20 20\n-20 20\n-20 -20\n20 -20\n20 -1\n0 -9\n-9 0\n0 9\n9 0\n\noutput:\nYES\n```\n\n\u4e0d\u8fc7\u65e2\u7136\u4e00\u5b9a\u4f1a\u76f8\u4ea4\uff0c\u90a3\u4e48\u81f3\u5c11 A \u5728\u8fd0\u52a8\u8fc7\u7a0b\u4e2d\u70b9\u4f1a\u78b0\u5230 B \u7684\u8fb9\u3002 \u6240\u4ee5\u6211\u4eec\u4ee5 A \u4e3a\u53c2\u7167\u7cfb\u548c\u4ee5 B \u4e3a\u53c2\u7167\u7cfb\u505a\u4e24\u904d\u3002\n\n\u82f1\u6587\u9898\u9762\u91cc\u4fdd\u8bc1\u4e86 A,B \u4e0d\u4f1a\u76f8\u4e92\u5305\u542b\u540c\u65f6\u4e00\u5f00\u59cb\u5e76\u4e0d\u76f8\u4ea4\u3002\u6240\u4ee5\u65e0\u8bba\u5982\u4f55\u4e5f\u4e0d\u4f1a\u51fa\u73b0\u8fb9\u4e0e\u8fb9\u76f8\u4ea4\u4f46\u662f\u70b9\u8fd0\u52a8\u8f68\u8ff9\u672a\u7ecf\u8fc7\u8fb9\u3002\u624b\u73a9\u51e0\u7ec4\u4f1a\u53d1\u73b0\u8fd9\u662f\u663e\u7136\u7684\u3002\n\n\u7136\u540e\u65e0\u4e86\u3002 \u4ee3\u7801\uff1a\n\n``` cpp\n#include <cmath>\n#include <cstdio>\n#include <stack>\n#include <iostream>\n#include <ctime>\n#include <vector>\n\nusing std::vector;\nusing std::cout;\nusing std::cin;\nusing std::endl;\n\nint n;\nint amidx, amidy;\nint bmidx, bmidy;\nlong double r;\n\nvector<std::pair<int, int>> a, b;\nvector<std::pair<int, int>> rounda, roundb;\n\nlong double dis(const std::pair<int, int>& p1,\n                const std::pair<int, int>& p2) {\n  return std::pow(p1.first - p2.first, 2) + std::pow(p1.second - p2.second, 2);\n}\n\n// \u5224\u65ad\u7ebf\u6bb5\u662f\u5426\u4e0e\u5706\u76f8\u4ea4\nbool check(const std::pair<int, int>& p1,\n           const std::pair<int, int>& p2,\n           const std::pair<int, int>& round) {\n  auto disa = dis(p1, round);\n  auto disb = dis(p2, round);\n  if (disa < r * r && disb < r * r) {\n    return false;\n  }\n  if (disa < r * r || disb < r * r) {\n    return true;\n  }\n  long double a = p1.second - p2.second,\n              b = p2.first - p1.first,\n              c = p1.first * p2.second - p2.first * p1.second;\n  long double dis1 = a * round.first + b * round.second + c;\n  dis1 *= dis1;\n  long double dis2 = (a * a + b * b) * r * r;\n  if (dis1 > dis2) return false;\n  long double angle1 = (round.first - p1.first) * (p2.first - p1.first) +\n                       (round.second - p1.second) * (p2.second - p1.second);\n  long double angle2 = (round.first - p2.first) * (p1.first - p2.first) +\n                       (round.second - p2.second) * (p1.second - p2.second);\n  if (angle1 > 0 && angle2 > 0) return true;\n  return false;\n}\n\nbool solve(vector<std::pair<int, int>> a, int amidx, int amidy, vector<std::pair<int, int>> b, int bmidx, int bmidy) {\n  vector<std::pair<int, int>> round;\n  for (int i = 0; i < a.size(); i++) {\n    a[i].first -= amidx, a[i].second -= amidy;\n  }\n  bmidx -= amidx, bmidy -= amidy;\n  for (int i = 0; i < b.size(); i++) {\n    b[i].first -= amidx, b[i].second -= amidy;\n    round.push_back({b[i].first - bmidx, b[i].second - bmidy});\n  }\n  r = std::sqrt(std::pow(bmidx, 2) + std::pow(bmidy, 2));\n  for (int i = 0; i < a.size(); i++) {\n    for (const auto& round : round) {\n      if (check(a[i], a[(i + 1) % a.size()], round)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nsigned main() {\n  std::ios::sync_with_stdio(false);\n  cin.tie(0), cout.tie(0);\n  cin >> amidx >> amidy;\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    int x, y;\n    cin >> x >> y;\n    a.push_back({x, y});\n  }\n  cin >> bmidx >> bmidy;\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    int x, y;\n    cin >> x >> y;\n    b.push_back({x, y});\n  }\n  if (solve(a, amidx, amidy,\n            b, bmidx, bmidy) ||\n      solve(b, bmidx, bmidy,\n            a, amidx, amidy)) {\n    cout << \"YES\" << endl;\n  } else {\n    cout << \"NO\" << endl;\n  }\n  return 0;\n}\n```\n\n",
        "postTime": 1679397853,
        "uid": 311721,
        "name": "YCSluogu",
        "ccfLevel": 6,
        "title": "CF497D \u9898\u89e3"
    }
]