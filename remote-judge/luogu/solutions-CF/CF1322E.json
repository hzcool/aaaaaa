[
    {
        "content": "\u4e0d\u77e5\u9053\u662f\u6211\u7684\u95ee\u9898\u8fd8\u662f\u5565\uff0c\u505a\u7684\u597d\u9ebb\u70e6\u3002\u6211\u770b\u8c8c\u4f3c\u6709\u4eba\u5f88\u77ed\u7684\u4ee3\u7801\u8fc7\u4e86\uff1f\n\n~~\u505a\u4e4b\u524d\u6700\u597d\u60f3\u6e05\u695a\uff0c\u514d\u5f97\u81ea\u5df1\u9020\u4e86\u5c0f\u6570\u636e\u628a\u4ee3\u7801Hack\u4e86\u4e4b\u540e\u53c8\u8981\u6539\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u66f4\u591a\u7684\u539f\u56e0\u662f\u6211\u592a\u4e45\u6ca1\u6709\u5199\u957f\u4ee3\u7801\u4e86\u5427 /fad~~\n\n---\n\n$\\rm Sol:$\n\n\u5148\u8003\u8651\u4e00\u4e2a\u7ecf\u5178\u9898\uff0c\u5982\u679c\u53ea\u95ee\u4f60\u6700\u540e\u6bcf\u4e2a\u70b9\u7684\u503c\u662f\u5565\u600e\u4e48\u505a\u3002\n\n\u4e8c\u5206\u4e00\u4e2a\u503c $x$\uff0c\u628a\u5927\u7684\u8bbe\u4e3a $1$\uff0c\u5c0f\u7684\u8bbe\u4e3a $0$\uff0c\u7136\u540e $O(n)$ \u626b\u4e00\u904d\u3002\n\n\u73b0\u5728\u8003\u8651\u7b2c\u4e00\u95ee\uff0c\u5982\u679c\u5e8f\u5217\u53ea\u6709 0 \u548c 1\uff0c\u90a3\u4e48\u9700\u8981\u64cd\u4f5c\u591a\u5c11\u6b21\uff1f\n\n\u663e\u7136\u662f\u6700\u957f\u7684 01 \u6bb5\u7684\u957f\u5ea6 $- 1$ \u540e\u9664\u4ee5 $2$\u3002\n\n\u672c\u9898\u5462\uff1f\u5bb9\u6613\u53d1\u73b0\uff0c\u5982\u679c\u6211\u4eec\u66b4\u529b\u679a\u4e3e\u8fd9\u4e2a\u503c $x$\uff0c\u5e76\u8fdb\u884c 01 \u8d4b\u503c\uff0c\u90a3\u4e48\u5bf9\u4e8e\u7b2c\u4e00\u95ee\uff0c\u7b54\u6848\u5f88\u663e\u7136\u5c31\u662f\u6240\u6709\u60c5\u51b5\u4e0b\u6700\u957f\u7684 01 \u6bb5\u957f\u5ea6 $-1$ \u9664\u4ee5 $2$\n\n\u7b2c\u4e8c\u95ee\u5462\uff1f\n\n\u4e00\u4e2a\u70b9\u662f\u503c $x$ \u5f53\u524d\u4ec5\u5f53\u5bf9\u4e8e $x+1$ \u5904\u7406\u5b8c\u7684\u5e8f\u5217\u90a3\u4e2a\u70b9\u662f $0$ \u800c\u5bf9\u4e8e $x$ \u5904\u7406\u5b8c\u540e\u4ed6\u662f $1$\n\n\u5047\u8bbe\u4ece\u5927\u5230\u5c0f\u679a\u4e3e $x$\uff0c\u6211\u4eec\u53d1\u73b0\u6c42\u7b54\u6848 $\\rm ans$ \u7684\u8fc7\u7a0b\u4e2d\u4f3c\u4e4e\u6bcf\u6b21\u8981\u628a\u76f8\u540c\u7684\u503c\u7684\u6240\u6709\u4e0b\u6807\u90fd\u8d4b\u4e3a $1$\n\n\u7136\u800c\u6c42\u70b9\u503c\u7684\u65f6\u5019\u5374\u5e76\u4e0d\u9700\u8981\uff0c\u6bcf\u6b21\u52a0\u5165\u4e00\u4e2a\u70b9\u91cd\u65b0\u6c42\u5373\u53ef\uff0c\u8fd9\u662f\u56e0\u4e3a\u5982\u679c\u5728\u7b2c $i$ \u6b21\u64cd\u4f5c\u540e\u8fd9\u4e2a\u70b9\u4f1a\u53d8\u6210 $1$\uff0c\u90a3\u4e48\u4ee5\u540e\u4ed6\u4f1a\u4e00\u76f4\u90fd\u662f $1$\n\n\u6bcf\u6b21\u52a0\u5165\u70b9 $i$ \u4e4b\u540e\u6c42\u4e00\u4e0b\u5305\u62ec\u4e86 $i$ \u5728\u5185\u7684\u6700\u957f\u7684 01 \u6bb5\uff0c\u6839\u636e\u4e24\u7aef\u7684\u989c\u8272\u6765\u5224\u65ad\u8fd9\u4e2a\u533a\u95f4\u5185\u7684\u70b9\u5e94\u8be5\u662f\u4ec0\u4e48\u503c\uff0c\u5c31\u662f\u4e00\u4e2a\u53d6 $\\max$\u3002\n\n\u6ce8\u610f\u5230\u6bcf\u4e2a\u70b9\u7b2c\u4e00\u6b21\u88ab\u8d4b\u503c\u7684\u65f6\u5019\u5176\u6743\u503c\u6700\u591a\uff0c\u6240\u4ee5\u7528\u4e00\u4e2a set \u7ef4\u62a4\uff0c\u6bcf\u6b21\u5220\u6389\u5143\u7d20\u5373\u53ef\u3002\n\n\u9700\u8981\u7279\u5224\u4e00\u4e2a\u7279\u6b8a\u60c5\u51b5\uff0c\u5c06 $i$ \u53d8\u4e3a $1$ \u4e4b\u540e\u5982\u679c\u4ed6\u4e24\u8fb9\u6709\u4e00\u4e2a\u4e3a $1$ \u90a3\u4e48\u8981\u5f80\u90a3\u4e2a\u65b9\u5411\u5355\u72ec\u8d4b\u4e00\u4e0b\u503c\uff0c\u539f\u56e0\u5927\u6982\u662f\u624b\u73a9\u4f1a\u53d1\u73b0\u53ea\u6709\u8fd9\u7c7b\u60c5\u51b5\u6ca1\u6709\u8003\u8651\u5230\u3002(\u5176\u5b9e\u7ec6\u8282\u662f\u548c\u81ea\u5df1\u5b9e\u73b0\u6709\u5173\u7684\uff0c\u4e3b\u8981\u601d\u8def\u5f88\u7b80\u5355\uff0c\u5b9e\u73b0\u5f88\u7e41\u7410)\n\n$Code:$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std ;\n#define Next( i, x ) for( register int i = head[x]; i; i = e[i].next )\n#define rep( i, s, t ) for( register int i = (s); i <= (t); ++ i )\n#define drep( i, s, t ) for( register int i = (t); i >= (s); -- i )\n#define re register\n#define ls(x) ( x << 1 )\n#define rs(x) ( x << 1 | 1 )\nint gi() {\n\tchar cc = getchar() ; int cn = 0, flus = 1 ;\n\twhile( cc < '0' || cc > '9' ) {  if( cc == '-' ) flus = - flus ; cc = getchar() ; }\n\twhile( cc >= '0' && cc <= '9' )  cn = cn * 10 + cc - '0', cc = getchar() ;\n\treturn cn * flus ;\n}\nconst int N = 1e6 + 5 ; \nint n, ans[N], c[N], a[N], Id[N] ; \nstruct Tree {\n    int L, R, l, r, ans, f ;\n    void init() { L = R = l = r = ans = f = 0 ; }\n    void init2( int x ) { l = r = x, f = 1, L = R = ans = 1 ; }\n} tr[N << 2] ; \nset<int> t ; \nbool cmp( int x, int y ) {\n    return a[x] > a[y] ; \n}\nTree pushup( Tree lx, Tree rx ) {\n    Tree u ; u.init() ; \n    u.ans = max( lx.ans, rx.ans ), u.l = lx.l, u.r = rx.r ;\n    if( lx.r ^ rx.l ) \n\t\tu.ans = max( u.ans, lx.R + rx.L ), u.f = ( lx.f & rx.f ),\n\t\tu.L = ( lx.f ) ? lx.L + rx.L : lx.L,\n\t\tu.R = ( rx.f ) ? rx.R + lx.R : rx.R ; \n\telse \n\t\tu.L = lx.L, u.R = rx.R, u.f = 0 ;\n\treturn u ; \n}\nvoid build( int x, int l, int r ) {\n\tif( l == r ) { tr[x].init2(0) ; return ; }\n\tint mid = ( l + r ) >> 1 ;\n\tbuild( ls(x), l, mid ), build( rs(x), mid + 1, r ) ;\n\ttr[x] = pushup( tr[ls(x)], tr[rs(x)] ) ;\n}\nTree query1( int x, int l, int r, int wh ) {\n\tif( l == r ) return tr[x] ; \n\tint mid = ( l + r ) >> 1 ; \n\tif( mid >= wh ) return query1( ls(x), l, mid, wh ) ;\n\tTree u = query1( rs(x), mid + 1, r, wh ) ;\n\treturn pushup( tr[ls(x)], u ) ;\n}\nTree query2( int x, int l, int r, int wh ) {\n\tif( l == r ) return tr[x] ; \n\tint mid = ( l + r ) >> 1 ; \n\tif( mid < wh ) return query2( rs(x), mid + 1, r, wh ) ;\n\tTree u = query2( ls(x), l, mid, wh ) ;\n\treturn pushup( u, tr[rs(x)] ) ;\n}\nvoid modify( int x, int l, int r, int wh ) {\n\tif( l == r ) { tr[x].init2(1) ; return ; }\n\tint mid = ( l + r ) >> 1 ; \n\tif( mid >= wh ) modify( ls(x), l, mid, wh ) ;\n\telse modify( rs(x), mid + 1, r, wh ) ;\n\ttr[x] = pushup( tr[ls(x)], tr[rs(x)] ) ;\n}\nvoid solve( int L, int R, int id ) {\n\tif( t.empty() ) return ; \n\tset<int>::iterator it = t.lower_bound(L) ;\n\twhile( it != t.end() ) {\n\t\tif( *it <= R ) {\n\t\t\tset<int>::iterator ir = it ; ++ it ;\n\t\t\tans[*ir] = id, t.erase(ir) ; \n\t\t}\n\t\telse break ; \n\t}\n}\nsigned main()\n{\n    n = gi() ; \n    rep( i, 1, n ) a[i] = gi() ; \n    rep( i, 1, n ) Id[i] = i, t.insert( i ) ;\n    build( 1, 1, n ) ;\n\tsort( Id + 1, Id + n + 1, cmp ) ;\n\tint Ans = 0 ;\n    rep( i, 1, n ) {\n    //\tprintf(\"Modify %lld %lld\\n\", Id[i], a[Id[i]] ) ;\n\t\tmodify( 1, 1, n, Id[i] ), c[Id[i]] = 1 ;\n    \tif( a[Id[i]] != a[Id[i + 1]] ) Ans = max( Ans, ( tr[1].ans - 1 ) / 2 ) ; \n\t\tTree ll = query1( 1, 1, n, Id[i] ) ; \n\t\tTree rr = query2( 1, 1, n, Id[i] ) ;\n\t\tint Lx = Id[i] - ll.R + 1, Rx = Id[i] + rr.L - 1 ;\n\t\tint len = Rx - Lx + 1 ; \n\t\tif( c[Lx] == 0 && c[Rx] == 0 ) continue ; \n\t\tif( c[Lx] == 1 && c[Rx] == 1 ) solve( Lx - 1, Rx + 1, a[Id[i]] ) ;\n\t\tif( c[Lx] == 0 && c[Rx] == 1 ) solve( Lx + len / 2, Rx + 1, a[Id[i]] ) ; \n\t\tif( c[Lx] == 1 && c[Rx] == 0 ) solve( Lx - 1, Rx - len / 2, a[Id[i]] ) ;\n\t\tif( Lx == Id[i] && Id[i] != 1 ) {\n\t\t\tTree lll = query1( 1, 1, n, Id[i] - 1 ) ; \n\t\t\tint lx = Id[i] - lll.R ; len = Id[i] - lx ; \n\t\t\tif( c[lx] == 1 ) solve( lx - 1, Id[i], a[Id[i]] ) ;\n\t\t\tif( c[lx] == 0 ) solve( lx + len / 2, Id[i], a[Id[i]] ) ; \n\t\t} \n\t\tif( Rx == Id[i] && Id[i] != n ) {\n\t\t\tTree rrr = query2( 1, 1, n, Id[i] + 1 ) ; \n\t\t\tint rx = Id[i] + rrr.L ; len = rx - Id[i] ; \n\t\t\tif( c[rx] == 1 ) solve( Id[i], rx, a[Id[i]] ) ;\n\t\t\tif( c[rx] == 0 ) solve( Id[i], rx - len / 2, a[Id[i]] ) ; \n\t\t} \n\t}\n    printf(\"%d\\n\", Ans ) ;\n    rep( i, 1, n ) printf(\"%d \", ans[i] ) ;\n\treturn 0 ;\n}\n```\n",
        "postTime": 1587647161,
        "uid": 30036,
        "name": "Soulist",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1322E \u3010Median Mountain Range\u3011"
    },
    {
        "content": "\u6211\u4eec\u5148\u8003\u8651 $01$ \u5e8f\u5217\u600e\u4e48\u505a\u3002\n\n\u5982\u679c $a_i=a_{i+1},i\\in [1,n)$\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5728 $i$ \u548c $i+1$ \u4e4b\u95f4\u5207\u4e00\u5200\u3002\n\n\u6b64\u65f6\u6574\u4e2a\u5e8f\u5217\u4f1a\u88ab\u5212\u5206\u4e3a\u82e5\u5e72\u4e2a\u6bb5\uff0c\u5176\u4e2d\u6bcf\u4e00\u4e2a\u90fd\u662f $01$ \u76f8\u95f4\u7684\uff0c\u5bb9\u6613\u53d1\u73b0\u6bb5\u4e4b\u95f4\u53ef\u4ee5\u8ba4\u4e3a\u662f\u72ec\u7acb\u7684\u3002\n\n\u8003\u8651\u6bcf\u4e00\u6b21\u64cd\u4f5c\u4f1a\u51fa\u73b0\u4ec0\u4e48\u53d8\u5316\u3002\u5bf9\u4e8e\u4e00\u4e2a\u6bb5 $[l,r]$\uff0c\u5982\u679c $r-l\\ge 2$\uff0c\u90a3\u4e48\u7ecf\u8fc7\u4e00\u6b21\u64cd\u4f5c\u4e4b\u540e $l$ \u548c $l+1$ \u4e4b\u95f4\u3001$r-1$ \u548c $r$ \u4e4b\u95f4\u90fd\u4f1a\u88ab\u591a\u5207\u4e00\u5200\uff0c\u4ea7\u751f\u4e86 $[l,l],(l,r),[r,r]$ \u8fd9\u4e09\u4e2a\u65b0\u6bb5\u3002\u5426\u5219\u4e0d\u4f1a\u53d8\u5316\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u6bb5 $[l,r]$\uff0c\u7ecf\u8fc7 $\\lfloor\\dfrac{r-l}{2}\\rfloor$ \u6b21\u64cd\u4f5c\u4e4b\u540e\u5b83\u5c31\u4e0d\u4f1a\u518d\u53d8\u5316\u3002\n\n\u518d\u8003\u8651\u5982\u4f55\u6c42\u51fa\u6700\u7ec8\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u7684\u503c\u3002\u5bf9\u4e8e\u4e00\u4e2a\u6bb5 $[l,r]$\uff1a\n\n- \u5982\u679c $r-l+1$ \u662f\u5076\u6570\uff0c\u90a3\u4e48 $[l,\\lfloor\\dfrac{l+r}{2}\\rfloor]$ \u6700\u7ec8\u90fd\u4e0e $a_l$ \u76f8\u540c\uff0c$(\\lfloor\\dfrac{l+r}{2}\\rfloor,r]$ \u6700\u7ec8\u90fd\u4e0e $a_r$ \u76f8\u540c\u3002\n\n- \u5982\u679c $r-l+1$ \u662f\u5947\u6570\uff0c\u90a3\u4e48 $[l,r]$ \u6700\u7ec8\u90fd\u4e0e $a_l$ \u76f8\u540c\uff08\u6b64\u65f6\u4e00\u5b9a\u6709 $a_l=a_r$\uff09\u3002\n\n\u8fd9\u65f6\u6211\u4eec\u5c31\u80fd\u89e3\u51b3 $01$ \u5e8f\u5217\u4e86\u3002\n\n\u518d\u8003\u8651\u4efb\u610f\u5e8f\u5217\u600e\u4e48\u505a\u3002\n\n\u6211\u4eec\u8bd5\u56fe\u5229\u7528 $01$ \u5e8f\u5217\u7684\u505a\u6cd5\u3002\u56fa\u5b9a\u4e00\u4e2a $x$\uff0c\u628a $\\le x$ \u7684\u4f4d\u7f6e\u8bbe\u4e3a $1$\uff0c\u628a $>x$ \u7684\u4f4d\u7f6e\u8bbe\u4e3a $0$\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5c06 $x$ \u5728 $(-\\infty,\\infty)$ \u4e0a\u4ece\u5de6\u5f80\u53f3\u626b\uff0c\u6bcf\u6b21\u4f1a\u589e\u52a0\u4e00\u4e9b $1$\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u589e\u52a0\u7684 $1$\uff0c\u9700\u8981\u66f4\u6539\u7684\u6bb5\u53ea\u6709 $O(1)$ \u4e2a\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7ef4\u62a4\u51fa\u6bcf\u4e00\u4e2a\u6bb5\u7684\u957f\u5ea6\u5e76\u66f4\u65b0\u7b54\u6848\uff08\u64cd\u4f5c\u6b21\u6570\uff09\u3002\n\n\u4e3a\u4e86\u6c42\u51fa\u6700\u7ec8\u5e8f\u5217\uff0c\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u51fa\u5f53\u524d\u6700\u7ec8\u7684\u5e8f\u5217\u4e2d\u4f9d\u7136\u662f $0$ \u6240\u6709\u4f4d\u7f6e\u3002\u6bcf\u6b21\u66f4\u65b0\u6bb5\u7684\u65f6\u5019\uff0c\u5148\u6c42\u51fa\u6bb5\u4e2d\u64cd\u4f5c\u5b8c\u540e\u6700\u7ec8\u4e3a $1$ \u7684\u533a\u95f4 $[l,r]$\uff0c\u7136\u540e\u66b4\u529b\u5730\u5728\u5f53\u524d\u8fd8\u4e3a $0$ \u7684\u4f4d\u7f6e\u4e2d\u627e\u5230\u6240\u6709\u5728 $[l,r]$ \u4e2d\u7684\u4f4d\u7f6e\uff0c\u5c06\u5b83\u4eec\u5220\u9664\u3002\u7531\u4e8e\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u53ea\u4f1a\u88ab\u5220\u9664\u4e00\u904d\uff0c\u6240\u4ee5\u603b\u5220\u9664\u6b21\u6570\u662f $O(n)$ \u7684\u3002\u53ef\u4ee5\u7528 set \u7ef4\u62a4\u6765\u4fdd\u8bc1\u590d\u6742\u5ea6\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define N 500005\n#define LIM 10000005\n#define gc() (P1==P2 && (P2=(P1=buf)+fread(buf,1,LIM,stdin),P1==P2)?EOF:*P1++)\n#define pb push_back\nchar *P1,*P2,buf[LIM];\nint n,ans1,a[N],ds[N],ans[N];bool b[N];vector<int> vc[N];set<int> z,z1;\nint rd()\n{\n\tint res=0;char c=0;while(!isdigit(c)) c=gc();\n\twhile(isdigit(c)) res=res*10+c-48,c=gc();return res;\n}\nvoid upd1(int l,int r,int w)\n{\n\tint t;set<int>::iterator it=z1.lower_bound(l);\n\twhile(it!=z1.end() && *it<=r) t=*it,ans[t]=w,++it,z1.erase(t);\n}\nvoid upd(int x,int w)\n{\n\tint l,r;set<int>::iterator it=z.lower_bound(x);\n\tr=*it;l=(*--it)+1;ans1=max(ans1,(r-l)/2);\n\tif(b[l]) upd1(l,(l+r)/2,w);if(b[r]) upd1((l+r)/2+1,r,w);\n}\nvoid ins(int x)\n{\n\tif(x>1 && !b[x-1]) z.erase(x-1);else z.insert(x-1);\n\tif(x<n && !b[x+1]) z.erase(x);else z.insert(x);b[x]=1;\n}\nint main()\n{\n\tn=rd();for(int i=1;i<=n;++i) a[i]=rd(),ds[++ds[0]]=a[i];\n\tsort(ds+1,ds+ds[0]+1);ds[0]=unique(ds+1,ds+ds[0]+1)-ds-1;\n\tfor(int i=1;i<=n;++i) a[i]=lower_bound(ds+1,ds+ds[0]+1,a[i])-ds;\n\tz.insert(0);for(int i=1;i<=n;++i) z.insert(i),z1.insert(i),vc[a[i]].pb(i);\n\tfor(int i=1;i<=ds[0];++i)\n\t{\n\t\tfor(auto j:vc[i]) ins(j);\n\t\tfor(auto j:vc[i]) {upd(j,i);if(j>1) upd(j-1,i);if(j<n) upd(j+1,i);}\n\t}printf(\"%d\\n\",ans1);\n\tfor(int i=1;i<=n;++i) printf(\"%d \",ds[ans[i]]);return 0;\n}\n```",
        "postTime": 1642572188,
        "uid": 119621,
        "name": "Kubic",
        "ccfLevel": 10,
        "title": "CF1322E Median Mountain Range"
    },
    {
        "content": "## \u9898\u610f ##\n\n\u7ed9\u5b9a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a_i$\uff0c\u6bcf\u6b21\u5c06 $[2,n-1]$ \u4e4b\u95f4\u7684\u6570\u53d8\u4e3a $median(a_{i-1},a_i,a_{i+1})$\uff0c\u5176\u4e2d $median$ \u8868\u793a\u7684\u662f\u4e09\u8005\u4e2d\u7684\u4e2d\u4f4d\u6570\u3002  \n\n\u6c42\u591a\u5c11\u6b21\u64cd\u4f5c\u540e\uff0c\u5e8f\u5217\u4e0d\u518d\u53d1\u751f\u53d8\u5316\uff1f\u8f93\u51fa\u64cd\u4f5c\u6570\u4ee5\u53ca\u6700\u7ec8\u7684\u5e8f\u5217\u3002  \n\n$n \\leq 500000,1\\leq a_i\\leq10^9$\u3002\n\n## \u601d\u8def ##\n\n\u5b98\u65b9\u53ca\u5927\u591a\u6570\u7528\u6237\u7684\u89e3\u9898\u601d\u8def\u4e3a\u4f7f\u7528\u7ebf\u6bb5\u6811\u6216 set\uff0c\u8fd9\u91cc\u7ed9\u51fa\u4e00\u79cd\u4e0d\u4e00\u6837\u7684 ST \u8868+\u4e8c\u5206\u505a\u6cd5\u3002  \n\n\u89c2\u5bdf\u5230\u4e2d\u4f4d\u6570\uff0c\u6211\u4eec\u7684\u7b2c\u4e00\u60f3\u6cd5\u4fbf\u662f\u5c06\u8be5\u5e8f\u5217\u8f6c\u5316\u4e3a $01$ \u5e8f\u5217\u3002\u5148\u8003\u8651 $01$ \u5e8f\u5217\u7684\u505a\u6cd5\u3002  \n\n\u624b\u6a21\u4e00\u4e0b\u53ef\u4ee5\u5f97\u5230\uff0c\u8fde\u7eed\u7684 $0$ \u4e32\u6216 $1$ \u4e32\u4e0d\u4f1a\u56e0\u4e3a\u64cd\u4f5c\u800c\u6539\u53d8\u3002\u597d\u50cf\u8fd9\u5e76\u4e0d\u80fd\u5f88\u65b9\u4fbf\u6211\u4eec\u7edf\u8ba1\u7b54\u6848\uff0c\u60f3\u60f3\u80fd\u4e0d\u80fd\u628a\u8fd9\u4e9b\u8fde\u7eed\u6bb5\u90fd\u62c6\u5f00\uff1f\u4e8e\u662f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u8bb8\u591a $01$ \u4ea4\u9519\u7684\u4e32\u3002  \n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u5176\u4e2d\u6bcf\u4e00\u4e2a\u4e32\u90fd\u662f\u72ec\u7acb\u7684\u3002\u90a3\u6211\u4eec\u5c31\u9488\u5bf9\u5176\u4e2d\u6700\u957f\u7684\u4e32\u6765\u5206\u6790\u3002  \n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u8be5\u4e32\u957f\u5ea6\u4e3a\u5076\u6570\uff0c\u8fd9\u4e2a\u4e32\u7ecf\u8fc7\u82e5\u5e72\u6b21\u64cd\u4f5c\u540e\u7684\u5f62\u5f0f\u4e00\u5b9a\u4f1a\u662f\u5982 $00001111$ \u6216 $11110000$ \u8fd9\u6837\u7684\u4e32\u3002\u5f62\u5f0f\u5316\u63cf\u8ff0\u4e0b\uff0c\u82e5\u4e32\u5de6\u53f3\u7aef\u70b9\u4e3a $l,r$\uff0c\u5219 $[l,\\left\\lfloor\\dfrac{l+r}{2}\\right\\rfloor]$ \u4e0e $a_l$ \u76f8\u540c\uff0c$(\\left\\lfloor\\dfrac{l+r}{2}\\right\\rfloor,r]$ \u4e0e $a_r$ \u76f8\u540c\u3002\u82e5\u4e3a\u5947\u6570\u5462\uff1f\u5219 $[l,r]$ \u5747\u4e0e $a_l$ \u76f8\u540c\u3002  \n\n\u90a3\u64cd\u4f5c\u6b21\u6570\u662f\u591a\u5c11\u5462\uff1f\u663e\u7136\uff0c\u6bcf\u4e00\u6b21\u64cd\u4f5c\u540e\u5de6\u53f3\u7aef\u70b9\u90fd\u4f1a\u7a33\u5b9a\u4e0b\u6765\uff0c\u4e0d\u518d\u53c2\u4e0e\u540e\u7eed\u7684\u64cd\u4f5c\u3002\u5219\u64cd\u4f5c\u6b21\u6570\u4e3a $\\left\\lfloor\\dfrac{r-l}{2}\\right\\rfloor$\u3002  \n\n\u8fd9\u662f\u7279\u6b8a\u7684 $01$ \u5e8f\u5217\uff0c\u4e00\u822c\u5e8f\u5217\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u8bbe\u4e00\u4e2a\u503c $x$\uff0c\u50cf\u64cd\u4f5c $01$ \u5e8f\u5217\u4e00\u6837\uff0c\u5c06\u539f\u5e8f\u5217\u4e2d\u6240\u6709\u5927\u4e8e\u7b49\u4e8e $x$ \u7684\u503c\u8bbe\u4e3a $1$\uff0c\u5176\u4f59\u8bbe\u4e3a $0$\u3002\u5bb9\u6613\u53d1\u73b0\uff0c\u6700\u7ec8\u7b54\u6848\u5373\u4e3a\u6240\u6709 $x$ \u6240\u4ee3\u8868\u7684 $01$ \u5e8f\u5217\u7684\u7b54\u6848\u7684\u6700\u5927\u503c\u3002  \n\n\u63a5\u7740\u7b2c\u4e8c\u95ee\u3002\u76f4\u63a5\u505a\u4e0d\u592a\u65b9\u4fbf\uff0c\u8ba9\u6211\u4eec\u8003\u8651\u4ece\u6bcf\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u5165\u624b\u3002\u5982\u679c\u80fd\u6c42\u51fa\u6bcf\u4e2a\u4f4d\u7f6e\u7a33\u5b9a\u4e0b\u6765\uff08\u5373\u4e0d\u518d\u53d8\u5316\uff09\u7684\u65f6\u95f4 $t$\uff0c\u662f\u4e0d\u662f\u4f1a\u65b9\u4fbf\u4e00\u4e9b\u5462\uff1f  \n\n\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e $p$\uff0c\u53bb\u679a\u4e3e\u7a33\u5b9a\u4e0b\u6765\u7684\u65f6\u95f4 $t$\u3002\u5219\u4e00\u5171\u8981\u8fdb\u884c $t$ \u6b21\u64cd\u4f5c\uff0c\u6240\u6d89\u53ca\u5230\u7684\u533a\u95f4\u8303\u56f4\u4e3a $[p-t,p+t]$\u3002\u8003\u8651\u600e\u4e48\u6837\u7684\u65f6\u95f4\u662f\u4e0d\u5408\u6cd5\u7684\u3002\u5982\u679c\u5bf9\u4e8e\u9009\u62e9\u7684\u8fd9\u6bb5\u533a\u95f4\uff0c\u5b58\u5728\u4e00\u4e2a $x$ \u6ee1\u8db3\u8be5\u533a\u95f4\u5185\u65e2\u6709\u8fde\u7eed $0$ \u6bb5\u53c8\u6709\u8fde\u7eed $1$ \u6bb5\uff0c\u5219\u8bf4\u660e\u9009\u62e9\u7684\u65f6\u95f4 $t$ \u8fc7\u5927\u3002\u5426\u5219 $t$ \u8fc7\u5c0f\u3002\u4e8e\u662f\u53ef\u4ee5\u7528\u4e8c\u5206\u7684\u65b9\u6cd5\u6c42\u89e3\u6240\u6709\u7684 $t$\u3002   \n\n\u6c42\u51fa $t$ \u540e\u5c31\u8be5\u6c42\u7b54\u6848\u4e86\u3002\u5bf9 $t$ \u8fdb\u884c\u5206\u7c7b\u8ba8\u8bba\u3002\u5bf9\u4e8e\u4f4d\u7f6e $p$\uff0c\u5982\u679c $t=0$\uff0c\u5219\u7b54\u6848\u4e00\u5b9a\u4e3a $a_p$\u3002\u56e0\u4e3a\u8be5\u4f4d\u7f6e\u4e0d\u9700\u8981\u8fdb\u884c\u64cd\u4f5c\u5373\u53ef\u4fdd\u6301\u7a33\u5b9a\uff0c\u5219\u8be5\u4f4d\u7684\u7b54\u6848\u4e00\u5b9a\u4e3a\u539f\u672c\u4f4d\u7f6e\u4e0a\u7684\u6570\u3002  \n\n\u8003\u8651 $t$ \u4e0d\u4e3a $0$ \u7684\u60c5\u51b5\u3002\u8fd9\u65f6\u5019\u8be5\u5bf9 $a_p$ \u548c $a_{p+1}$ \u8fdb\u884c\u5927\u5c0f\u5173\u7cfb\u7684\u8ba8\u8bba\u4e86\u3002$a_p$ \u548c $a_{p+1}$ \u6709\u6ca1\u6709\u53ef\u80fd\u76f8\u7b49\u5462\uff1f\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u5982\u679c\u4e24\u8005\u76f8\u7b49\uff0c\u5219 $t$ \u4e00\u5b9a\u4e3a $0$\u3002\u82e5 $a_p<a_{p+1}$\uff0c\u5219\u5728 $01$ \u5e8f\u5217\u4e0a $a_p$ \u5bf9\u5e94\u7684\u503c\u4e3a $0$\u3002\u6211\u4eec\u5047\u8bbe\u7b54\u6848\u5728 $p$ \u7684\u53f3\u4fa7\uff08\u5047\u8bbe\u5728 $p$ \u7684\u5de6\u4fa7\u4e5f\u53ef\u4ee5\uff0c\u628a\u6574\u4e2a\u5e8f\u5217\u53cd\u4e00\u53cd\u5c31\u53ef\u4ee5\u4e86\uff09\u3002  \n\n\u8ba8\u8bba $t$ \u7684\u5947\u5076\u6027\u3002\u82e5 $t$ \u4e3a\u5947\u6570\uff0c\u5219\u8be5\u6d89\u53ca\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u4e3a $a_{p+t}$\u3002\u6211\u4eec\u6765\u60f3\u60f3 $a_{p+t+1}$ \u7684\u53d6\u503c\u3002\u6709 $a_{p+t} \\ne a_{p+t+1}$ \u7684\u53ef\u80fd\u6027\u5417\uff1f\u6ca1\u6709\u3002\u5982\u679c\u4e24\u8005\u4e0d\u76f8\u7b49\uff0c\u90a3\u4e48\u5bf9\u5e94\u7684\uff0c$a_{p-t}$ \u4e5f\u540c\u6837\u4e0e $a_{p-t-1}$ \u4e0d\u76f8\u7b49\u3002\u90a3\u4e48\u8fd9\u4e2a $01$ \u4ea4\u9519\u4e32\u7684\u5de6\u53f3\u7aef\u70b9\u4f1a\u53d8\u6210 $[p-t-1,p+t+1]$\uff0c\u4e0e\u4e4b\u524d\u7684\u5b9a\u4e49\u77db\u76fe\u3002\u6240\u4ee5 $a_{p+t}$ \u4e00\u5b9a\u4e0e $a_{p+t+1}$ \u76f8\u7b49\u3002\u65e2\u7136\u8fd9\u6837\uff0c\u8fd9\u4e2a $01$ \u4e32\u5c31\u4f1a\u53d8\u6210 $010101\\dots11$ \u7684\u5f62\u5f0f\uff0c\u4e00\u5b9a\u4f1a\u51fa\u73b0 $1$ \u8fde\u7eed\u6bb5\u3002\u90a3\u4e48\u6b64\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u53d6\u6700\u5927\u7684 $x$\uff0c\u6ee1\u8db3\u901a\u8fc7 $x$ \u8f6c\u6362\u800c\u6210\u7684 $01$ \u5e8f\u5217\u6709 $1$ \u8fde\u7eed\u6bb5\u5373\u53ef\u3002\u53cd\u4e4b\uff0c\u6211\u4eec\u9700\u8981\u53d6\u6700\u5c0f\u7684 $x$\uff0c\u6ee1\u8db3\u901a\u8fc7 $x$ \u8f6c\u6362\u800c\u6210\u7684 $01$ \u5e8f\u5217\u6709 $0$ \u8fde\u7eed\u6bb5\u3002  \n\n\u90a3\u4e48\u5bf9\u4e8e $a_p>a_{p+1}$ \u7684\u60c5\u51b5\uff0c\u6211\u4eec\u4e5f\u53ea\u9700\u8981\u628a\u4e0a\u9762\u7684\u7ed3\u679c\u53cd\u4e00\u53cd\uff0c\u5c31\u53ef\u4ee5\u4e86\u3002  \n\n\u8bbe $f_i=\\min(a_i,a_{i+1}),g_i=\\max(a_i,a_{i+1})$\u3002\u5219\u5728\u901a\u8fc7 $f_i$ \u8f6c\u6362\u7684 $01$ \u4e32\u4e2d\uff0c$a_i$ \u4e0e $a_{i+1}$ \u7684\u53d6\u503c\u5747\u4e3a $1$\u3002$g_i$ \u5219\u5747\u4e3a $0$\u3002\u6839\u636e\u4e0a\u4e00\u6b65\u6240\u5f97\u5230\u7684\u7ed3\u8bba\uff0c\u901a\u8fc7 ST \u8868\u6765\u7ef4\u62a4 $\\max{b_i},\\min{c_i}$ \u5c31\u53ef\u4ee5\u4e86\u3002 \n\n## Code ##\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define db double\n#define P pair<int,int>\n#define mkp make_pair\nconst int N=5e5+10;\nint T=1,n,a[N],f[N][30],g[N][30],maxn,ans[N];\nvoid ST(){\n\tfor(int i=1;i<n;i++){\n\t\tf[i][0]=min(a[i],a[i+1]);\n\t\tg[i][0]=max(a[i],a[i+1]);\n\t}\n\tfor(int j=1;j<=25;j++){\n\t\tfor(int i=1;i+(1<<j)-1<n;i++){\n\t\t\tf[i][j]=max(f[i][j-1],f[i+(1<<(j-1))][j-1]);\n\t\t\tg[i][j]=min(g[i][j-1],g[i+(1<<(j-1))][j-1]);\n\t\t}\n\t}\n}\nP find(int l,int r){\n\tint k=log2(r-l+1);\n\treturn mkp(max(f[l][k],f[r-(1<<k)+1][k]),min(g[l][k],g[r-(1<<k)+1][k]));\n}\nvoid solve(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>a[i];\n\t}\n\tST();\n\tfor(int i=1;i<=n;i++){\n\t\tint l=1,r=min(i,n-i+1),now=0;\n\t\twhile(l<=r){\n\t\t\tint mid=(l+r)>>1;\n\t\t\tP k=find(i-mid,i+mid-1);\n\t\t\tif(k.first<k.second) l=mid+1,now=mid;\n\t\t\telse r=mid-1;\n\t\t}\n\t\tmaxn=max(maxn,now);\n\t\tif(now==0){\n\t\t\tans[i]=a[i];\n\t\t\tcontinue;\n\t\t}\n\t\tP k=find(i-now,i+now-1);\n\t\tif(a[i]<=a[i-1]) ans[i]=(now&1)?k.second:k.first;\n\t\telse ans[i]=(now&1)?k.first:k.second;\n\t}\n\tcout<<maxn<<endl;\n\tfor(int i=1;i<=n;i++){\n\t\tcout<<ans[i]<<\" \";\n\t}\n}\nsigned main(){\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\tios::sync_with_stdio(false),cin.tie(0);\n\twhile(T--){\n\t\tsolve();\n\t}\n\treturn 0;\n}\n```\n\n## Q&A ##\n\n1. \u4e3a\u4ec0\u4e48\u4e8c\u5206\u65f6\u9009\u62e9\u7684\u533a\u95f4\u662f $[p-t,p+t]$\uff0c\u5230\u4ee3\u7801\u91cc\u5c31\u53d8\u6210\u4e86 $[p-t,p+t-1]$ \u5462\uff1f  \n\t\u7b54\uff1a\u6211\u4eec\u5728\u9884\u5904\u7406 ST \u8868\u7684\u65f6\u5019\uff0c\u4e0b\u6807 $i$ \u7684\u521d\u59cb\u503c\u662f $a_i$ \u548c $a_{i+1}$ \u6bd4\u8f83\u7684\u7ed3\u679c\u3002\u5982\u679c\u53f3\u7aef\u70b9\u662f $p+t$ \uff0c\u5e26\u8fdb\u53bb\u5224\u65ad\u65f6\u53ef\u80fd\u4f1a\u53d6\u5230 $a_{p+t}$ \u548c $a_{p+t+1}$ \u6bd4\u8f83\u7684\u7ed3\u679c\uff0c\u8fd9\u6837\u5c31\u4e0d\u5728\u89c4\u5b9a\u533a\u95f4\u8303\u56f4\u91cc\u4e86\u3002\n\n2. \u4e3a\u4ec0\u4e48\u4e8c\u5206\u5728\u5224\u65ad\u7684\u65f6\u5019\uff0c\u53ea\u8981\u6709\u4efb\u610f\u4e00\u4e2a $x$ \u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u8fd9\u4e2a $t$ \u5c31\u4e0d\u53ef\u4ee5\u53d6\u4e86\u5462\uff1f  \n\t\u7b54\uff1a\u56e0\u4e3a\u7b54\u6848\u5e8f\u5217\u662f\u552f\u4e00\u4e14\u786e\u5b9a\u7684\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u7a33\u5b9a\u65f6\u95f4 $t$ \u4e5f\u662f\u552f\u4e00\u7684\u3002\u6240\u4ee5 $t$ \u4e00\u5b9a\u5f97\u6ee1\u8db3\u6240\u6709\u7684\u5408\u6cd5\u6761\u4ef6\u3002  \n    \n3. \u4ec0\u4e48\u7ec6\u8282\u8981\u6ce8\u610f\u7684\u5417\uff1f  \n   \u7b54\uff1aST \u8868\u7684\u521d\u59cb\u5316\u8981\u770b\u6e05\u695a\uff0c\u4e8c\u5206\u677f\u5b50\u4e0d\u8981\u5199\u70b8\u4e86\u54e6\uff0c\u8981\u4e0d\u7136\u5e72\u77aa\u773c\u770b\u534a\u5929\u4e5f\u627e\u4e0d\u51fa\u6765\u3002\u3002\n\n## Thanks ##\n\u53c2\u8003\u535a\u5ba2\uff1a[1](https://www.luogu.com.cn/blog/119621/solution-cf1322e)\uff0c[2](https://www.cnblogs.com/Nikrot/p/16545222.html)  \n\n\u611f\u8c22 @[xxzx](https://www.luogu.com.cn/user/309826) \u5de8\u4f6c\u63d0\u51fa\u7684\u95ee\u9898\uff01\uff01  \n\n\u6700\u540e\uff0c\u4ee3\u8868\u6700\u5927\u6d41\uff0c\u7f51\u7edc\u6d41\uff0c\u6807\u51c6\u8f93\u5165\u6d41\uff0c\u6807\u51c6\u8f93\u51fa\u6d41\uff0c\u6587\u4ef6\u8f93\u5165\u6d41\uff0c\u6587\u4ef6\u8f93\u51fa\u6d41\u795d\u6b63\u5728\u9605\u8bfb\u7684\u60a8\u65b0\u5e74\u987a\u987a\u6d41\u6d41\uff01\uff01\n\n",
        "postTime": 1672820631,
        "uid": 221284,
        "name": "Wh2t3zZ",
        "ccfLevel": 0,
        "title": "CF1322E\u9898\u89e3"
    },
    {
        "content": "\u8f6c\u6362\u4e3a $01$ \u5e8f\u5217\u7684\u64cd\u4f5c\u5176\u4ed6\u9898\u89e3\u90fd\u5df2\u7ecf\u8bb2\u7684\u5f88\u6e05\u695a\u4e86\uff0c\u6211\u8fd9\u91cc\u4e3b\u8981\u63d0\u4f9b\u4e00\u79cd\u53ea\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u7b54\u6848\u7684\u65b9\u6cd5\u3002\n\n\u9996\u5148\u662f\u5f97\u5230\u64cd\u4f5c\u6570\u3002\u521d\u59cb\u5e8f\u5217\u4e0a\u662f\u5168 $0$ \u7684\uff0c\u6211\u4eec\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u6bcf\u4e2a\u6570\uff0c\u5e76\u628a\u4ed6\u4eec\u4fee\u6539\u6210 $1$\u3002\u7531\u4e8e\u7b54\u6848\u662f $01$ \u4ea4\u9519\u6bb5\u7684\u957f\u5ea6\u7684\u4e00\u534a\uff0c\u6211\u4eec\u7ebf\u6bb5\u6811\u4e0a\u7684\u6bcf\u4e2a\u7ed3\u70b9\u5206\u522b\u7ef4\u62a4\u5de6\u90e8\u662f $0/1$\uff0c\u53f3\u90e8\u662f $0/1$\uff0c\u5de6\u90e8\u4ea4\u9519\u6bb5\u7684\u957f\u5ea6\uff0c\u53f3\u90e8\u4ea4\u9519\u6bb5\u7684\u957f\u5ea6\uff0c\u533a\u95f4\u5185\u4ea4\u9519\u6bb5\u7684\u6700\u5927\u957f\u5ea6\u3002\u5411\u4e0a\u8f6c\u79fb\u6bd4\u8f83\u5bb9\u6613\u3002\n\n\u7136\u540e\u662f\u5f97\u5230\u6700\u540e\u7684\u64cd\u4f5c\u5e8f\u5217\u3002\u5982\u679c\u4e00\u4e2a\u4f4d\u7f6e\u5728\u5f53\u524d\u4f4d\u7f6e\u7531 $0$ \u53d8\u6210 $1$ \u4e4b\u540e\uff0c\u5728**\u64cd\u4f5c\u5b8c\u540e**\u7684\u5e8f\u5217\u4e2d\u7531 $0$ \u53d8\u6210\u4e86 $1$\uff0c\u90a3\u4e48\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u4e2a\u4f4d\u7f6e\u5728\u64cd\u4f5c\u5b8c\u540e\u53d8\u6210\u4e86\u5f53\u524d\u6539\u53d8\u7684\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u503c\u3002\u800c\u4e00\u4e2a\u4f4d\u7f6e\u80fd\u5f71\u54cd\u5230\u7684\u4f4d\u7f6e\uff0c\u53ea\u6709\u4ed6\u6539\u53d8\u5b8c\u540e\u6240\u5728\u7684\u6700\u957f $01$ \u6bb5\u548c**\u4ed6\u5de6\u53f3\u4e24\u4e2a $1$ \u6240\u5728\u7684\u6700\u957f $01$ \u6bb5**\u3002\u6ce8\u610f\u7b2c\u4e8c\u90e8\u5206\u662f\u5f88\u5bb9\u6613\u5ffd\u7565\u6389\u7684\u3002\u5177\u4f53\u5f71\u54cd\u7684\u4f4d\u7f6e\u8981\u6839\u636e $01$ \u6bb5\u6700\u5916\u9762\u7684\u4e24\u8fb9\u5177\u4f53\u662f $0$ \u8fd8\u662f $1$ \u8fdb\u884c\u5206\u7c7b\u8ba8\u8bba\u3002\u627e\u5230\u4ed6\u5f71\u54cd\u7684\u533a\u95f4\u540e\u505a\u4e00\u4e2a\u533a\u95f4 $\\min$ \u5373\u53ef\uff08\u56e0\u4e3a\u53ef\u80fd\u4e4b\u524d\u7684\u5df2\u7ecf\u4fee\u6539\u8fc7\u53bb\u4e86\uff09\uff0c\u8fd9\u90e8\u5206\u53ef\u4ee5\u7528\u4e00\u4e2a\u6807\u8bb0\u6c38\u4e45\u5316\u7684\u7ebf\u6bb5\u6811\u5b9e\u73b0\u3002\n\n[\u63d0\u4ea4\u8bb0\u5f55](https://codeforces.com/contest/1322/submission/194856264)",
        "postTime": 1677286576,
        "uid": 342873,
        "name": "\u6709\u8da3\u7684\u95ee\u9898",
        "ccfLevel": 0,
        "title": "CF1322E \u9898\u89e3"
    }
]