[
    {
        "content": "[link](https://codeforces.com/contest/1535/problem/F)\n\n> \u9898\u610f\uff1a\n> \n> \u7ed9\u51fa $n$ \u4e2a\u957f\u5ea6\u4e3a $m$ \u7684\u4e32 $s_i$\u3002\u5bf9\u4e8e\u4e24\u4e2a\u4e32 $S,T$\uff0c\u9009\u53d6\u5176\u4e2d\u4e00\u4e2a\u4e32\u4e2d\u7684\u4e00\u4e2a\u533a\u95f4\u8fdb\u884c\u6392\u5e8f\u79f0\u4e3a\u4e00\u6b21\u64cd\u4f5c\uff0c$f(S,T)$ \u8868\u793a\u4f7f\u5f97 $S,T$ \u76f8\u540c\u7684\u6700\u5c11\u64cd\u4f5c\u6b21\u6570\u3002\u6c42 $\\sum_{i=1}^n\\sum_{j=i+1}^nf(s_i,s_j)$\u3002\n>\n> $n\\cdot m\\le 2\\times 10^5$\u3002\n\n\u4ecb\u7ecd\u4e00\u4e2a\u6bd4\u8f83\u4f18\u96c5\u7684\u4e25\u683c $\\mathcal O(n|s_i|\\log n)$ \u7684\u505a\u6cd5\u3002\u770b\u4e86 $\\mathrm{\\color{black}{U}\\color{red}{m\\_nik}}$ \u7684\u4ee3\u7801\u89c9\u5f97\u5f88\u5999\uff0c\u53ef\u60dc\u7f51\u4e0a\u6ca1\u6709\u4eba\u8bb2\uff0c\u4e8e\u662f\u7814\u7a76\u5f88\u5f88\u4e45\uff0c\u5206\u4eab\u4e00\u4e0b\u3002\n\n\u9996\u5148\u53ea\u6709\u5b57\u7b26\u79cd\u7c7b\u7684\u6570\u91cf\u76f8\u540c\u7684\u4e24\u4e2a\u4e32\uff0c\u624d\u80fd\u901a\u8fc7\u82e5\u5e72\u6b21\u64cd\u4f5c\u53d8\u5f97\u76f8\u540c\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u8fd9\u4e9b\u4e32\u5206\u6210\u82e5\u5e72\u4e2a\u96c6\u5408\u5206\u522b\u5904\u7406\u3002\n\n\u7136\u540e\u6211\u4eec\u60f3\u540c\u4e00\u96c6\u5408\u91cc\u7684\u4e24\u4e2a\u4e32 $S,T$ \u7684\u6700\u5c11\u64cd\u4f5c\u6b21\u6570\u3002\u8bbe\u4e00\u4e2a\u533a\u95f4 $[l,r]$\uff0c\u6ee1\u8db3 $S_{l\\dots r}\\not=T_{l\\dots r}$ \u4e14 $S_{0\\dots l-1}=T_{0\\dots l-1}$, $S_{r+1\\dots m}=T_{r+1\\dots m}$\uff0c\u90a3\u4e48\n\n- \u4e00\u822c\u60c5\u51b5\u53ea\u9700\u8981\u5bf9\u4e24\u4e2a\u4e32\u7684 $[l,r]$ \u533a\u95f4\u5206\u522b\u6392\u5e8f\uff0c\u64cd\u4f5c\u6b21\u6570\u6700\u591a\u4e3a $2$\uff1b\n- \u5982\u679c\u5176\u4e2d\u4e00\u4e2a\u4e32\u7684 $[l,r]$ \u533a\u95f4\u539f\u672c\u5c31\u662f\u6709\u5e8f\u7684\uff0c\u64cd\u4f5c\u6b21\u6570\u4e3a $1$\uff1b\n- \u5982\u679c $S=T$\uff0c\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u533a\u95f4\uff0c\u64cd\u4f5c\u6b21\u6570\u4e3a $0$\u3002\n\n\u53ea\u9700\u8981\u7edf\u8ba1\u7b2c\u4e8c\u3001\u4e09\u79cd\u60c5\u51b5\u7684\u6570\u91cf\u5c31\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\u3002\n\n\u5165\u624b\u70b9\u5728\u4e8e\u7b2c\u4e8c\u79cd\uff0c\u6211\u4eec\u56fa\u5b9a\u4e00\u4e2a\u4e32 $S$\uff0c\u7136\u540e\u5bf9\u4e8e $S$ \u6bcf\u4e00\u4e2a\u6781\u5927\u7684\u6709\u5e8f\u5b50\u533a\u95f4\uff0c\u7edf\u8ba1\u4e0e $S$ \u9664\u4e86\u6709\u5e8f\u5b50\u533a\u95f4\u4e4b\u5916\uff0c\u524d\u540e\u7f00\u76f8\u540c\u7684 $T$ \u7684\u6570\u91cf\u3002\n\n\u9996\u5148\u5c06\u96c6\u5408\u5185\u6240\u6709\u4e32\u6392\u5e8f\u4e3a $a_{1\\dots n}$\uff0c\u80fd\u591f\u5f62\u6210\u5f88\u591a\u6709\u7528\u7684\u6027\u8d28\uff1a\n\n- \u4e24\u4e24\u76f8\u90bb\u7684\u70b9\u6c42 $\\operatorname{LCP}$\uff0c\u90a3\u4e48\u4efb\u610f\u4e24\u4e2a\u4e32\u7684 $\\operatorname{LCP}$ \u5c31\u662f\u533a\u95f4\u6700\u5c0f\u503c\uff1b\n- \u5bf9\u4e8e\u533a\u95f4 $[1,l-1]$ \u76f8\u540c\u7684\u82e5\u5e72\u4e2a\u4e32\uff0c$[l,r]$ \u6709\u5e8f\u7684\u4e32\u4e00\u5b9a\u6392\u5728\u524d\u9762\u3002\n\n\u5bf9\u4e8e\u56fa\u5b9a\u7684\u4e32 $S=a_i$\uff0c\u53ea\u8981\u7edf\u8ba1 $T=a_{i+1},\\dots,a_n$ \u7684\u8d21\u732e\u3002\n\n\u800c $a_{i+1},\\dots,a_n$ \u4e0e $a_i$ \u7684 $\\operatorname{LCP}$ \u662f\u5355\u8c03\u4e0d\u589e\u7684\u3002\u6839\u636e\u4e0d\u540c\u7684 $\\operatorname{LCP}$ \u5212\u5206\u6210\u7684\u82e5\u5e72\u4e2a\u533a\u95f4\uff0c\u7528\u4e00\u4e2a\u5355\u8c03\u6808\u6765\u7ef4\u62a4\uff0c\u6ce8\u610f\u8fd9\u4e2a\u5355\u8c03\u6808\u662f $\\mathcal O(m)$ \u7684\u3002\n\n\u5bf9\u4e8e\u5355\u8c03\u6808\u6bcf\u4e2a\u5143\u7d20\u4ee3\u8868\u7684\u533a\u95f4 $L,R$\uff0c\u8bbe $a_L\\dots a_R$ \u4e0e $a_i$ \u7684 $\\operatorname{LCP}$ \u90fd\u4e3a $p$\u3002\u90a3\u4e48 $a_i$ \u4ece $p+1$ \u5f00\u59cb\u7684\u4e00\u4e2a\u6781\u5927\u7684\u6709\u5e8f\u5b50\u533a\u95f4 $[p+1,q]$\uff0c\u5c31\u662f $a_L\\dots a_R$ \u4e2d\u5408\u6cd5\u7684\u4e32\u8981\u64cd\u4f5c\u7684\u533a\u95f4\u3002\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406 $a_i$ \u6709\u5e8f\u5b50\u533a\u95f4\u7684\u5206\u754c\u70b9\uff0c\u4e8c\u5206\u5f97\u5230 $q$\u3002\n\n\u90a3\u4e48\u600e\u4e48\u7edf\u8ba1 $a_L\\dots a_R$ \u5408\u6cd5\u4e32\u7684\u6570\u91cf\uff0c\u4e5f\u5c31\u662f\u533a\u95f4 $[q+1,m]$ \u4e0e $a_i$ \u76f8\u540c\u7684\u4e32\u7684\u6570\u91cf\uff1f\n\n\u8003\u8651 Trie \u6811\uff0c\u5c06\u6240\u6709\u4e32 $a_1\\dots a_n$ \u7684\u53cd\u4e32\u63d2\u5165 Trie \u6811\uff0c\u65e2\u7136\u6211\u4eec\u77e5\u9053\u7684 $q+1$ \u662f\u591a\u5c11\uff0c\u90a3\u4e48\u53ef\u4ee5\u5b9a\u4f4d\u5230 Trie \u6811\u4e0a\u7684\u8282\u70b9\uff0c\u6240\u6709\u7ecf\u8fc7\u8fd9\u4e2a\u8282\u70b9\u7684\u4e32\u5c31\u662f $[q+1,m]$ \u4e0e $a_i$ \u76f8\u540c\u7684\u4e32\uff0c\u901a\u8fc7\u4e8c\u5206\u53ef\u4ee5\u5f97\u5230\u5728 $[L,R]$ \u7684\u4e32\u6570\u91cf\u3002\n\n**code**\n\n```cpp\n#include <bits/stdc++.h>\n\nusing i64 = long long;\n\nstruct Trie {\n    int tot;\n    std::vector<std::vector<int>> id;\n    std::vector<std::array<int, 26>> ch;\n    Trie() {}\n    Trie(int n) : tot(1), id(n), ch(n, std::array<int, 26>{}) {}\n\n    std::vector<int> rev_insert(std::string &s, int k) {\n        int n = s.length();\n        std::vector<int> pos(n + 1);\n        int p = 1;\n        id[1].push_back(k);\n        pos[n] = 1;\n        for (int i = n - 1; ~i; --i) {\n            int c = s[i] - 'a';\n            if (!ch[p][c])\n                ch[p][c] = ++tot;\n            p = ch[p][c];\n            id[p].push_back(k);\n            pos[i] = p;\n        }\n        return pos;\n    }\n    int query(int p, int l, int r) {\n        return std::lower_bound(id[p].begin(), id[p].end(), r) - \n                std::lower_bound(id[p].begin(), id[p].end(), l);\n    }\n};\n\ni64 solve(std::vector<std::string> a) {\n    int n = a.size();\n    int m = a[0].length();\n    std::sort(a.begin(), a.end());\n\n    Trie tr(n * m + 2);\n    std::vector<std::vector<int>> pos(n);\n    for (int i = 0; i < n; ++i)\n        pos[i] = tr.rev_insert(a[i], i);\n\n\n    std::vector<int> lcp(n);\n    for (int i = 1; i < n; ++i) {\n        int j = 0;\n        while (j < m && a[i][j] == a[i - 1][j])\n            ++j;\n        lcp[i] = j;\n    }\n\n    std::vector<std::vector<int>> dec(n); // \u6781\u5927\u6709\u5e8f\u5b50\u533a\u95f4\u7684\u5206\u754c\u70b9\n    for (int i = 0; i < n; ++i) {\n        for (int j = 1; j < m; ++j)\n            if (a[i][j] < a[i][j - 1])\n                dec[i].push_back(j);\n        dec[i].push_back(m);\n    }\n\n    i64 res = (i64) n * (n - 1);\n\n    std::vector<std::pair<int, int>> stk;\n    stk.emplace_back(n, -1);\n    for (int i = n - 1; ~i; --i) {\n        for (int j = 1; j < int(stk.size()); ++j) {\n            int l = stk[j].first, r = stk[j - 1].first;\n            int p = stk[j].second;\n            if (p < m) {\n                p = *std::upper_bound(dec[i].begin(), dec[i].end(), p);\n                res -= tr.query(pos[i][p], l, r);\n            }\n            else res -= (r - l) * 2; // S = T\n        }\n\n        while (stk.back().second >= lcp[i])\n            stk.pop_back();\n        stk.emplace_back(i, lcp[i]);\n    }\n\n    return res;\n}\n\nint main() {\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(nullptr);\n\n    int n;\n    std::cin >> n;\n    std::map<std::string, std::vector<std::string>> map;\n    for (int i = 0; i < n; ++i) {\n        std::string s;\n        std::cin >> s;\n        std::string t = s;\n        std::sort(t.begin(), t.end());\n        map[t].push_back(s);\n    }\n\n    int pre_sum = 0;\n    i64 ans = 0;\n    for (auto i : map) {\n        auto &a = i.second;\n        ans += (i64) a.size() * pre_sum * 1337;\n        ans += solve(a);\n        pre_sum += a.size();\n    }\n    std::cout << ans << '\\n';\n\n    return 0;\n}\n\n```",
        "postTime": 1623219114,
        "uid": 52243,
        "name": "RenaMoe",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1535F String Distance"
    },
    {
        "content": "\u597d\u50cf\u6ca1\u4eba\u5199\u6211\u8fd9\u4e2a\u505a\u6cd5\uff0c\u6c34\u4e00\u4e2a\u3002\n\n\u9996\u5148\u663e\u7136\u5b57\u6bcd\u7ec4\u6210\u4e0d\u540c\u7684\u4e24\u4e2a\u4e32\u4e0d\u80fd\u4e92\u76f8\u53d8\uff0c\u53ef\u4ee5\u5206\u6210\u82e5\u5e72\u7b49\u4ef7\u7c7b\u5206\u522b\u8ba1\u7b97\u3002\u7b49\u4ef7\u7c7b\u5185\u4e24\u4e2a\u4e32\u76f4\u63a5\u90fd\u6392\u5e8f\u4e00\u904d\uff0c\u90a3\u4e48\u8d21\u732e\u81f3\u591a\u4e3a\u4e8c\u3002\u5982\u679c\u8d21\u732e\u4e3a\u4e00\uff0c\u5219\u8bf4\u660e\u53ef\u4ee5\u53ea\u5bf9\u5176\u4e2d\u7684\u4e00\u4e2a\u4e32\u7684\u4e00\u4e2a\u5b50\u4e32\u6392\u5e8f\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5b50\u4e32\u5bf9\u5e94\u7684\u4f4d\u7f6e\u5728\u53e6\u4e00\u4e2a\u4e32\u4e2d\u5fc5\u5b9a\u662f\u6709\u5e8f\u7684\u3002\n\n\u8003\u8651\u5904\u7406\u51fa\u6bcf\u4e2a\u4e32\u7684\u6240\u6709\u6781\u957f\u7684\u6709\u5e8f\u5b50\u4e32\uff0c\u90a3\u4e48\u6240\u6709\u80fd\u4e00\u6b21\u64cd\u4f5c\u53d8\u6210\u5f53\u524d\u4e32\u7684\u4e32\u5fc5\u5b9a\u53ea\u6709\u5728\u8fd9\u4e2a\u6709\u5e8f\u5b50\u4e32\u5185\u4f1a\u4e0e\u5f53\u524d\u4e32\u4e0d\u540c\uff0c\u4e5f\u5c31\u662f\u8bf4\u67d0\u4e2a\u524d\u7f00\u548c\u540e\u7f00\u53ef\u4ee5\u786e\u5b9a\u3002\u540c\u65f6\u53ef\u4ee5\u53d1\u73b0\u6240\u6709\u8fd9\u6837\u7684\u4e32\u90fd\u80fd\u88ab\u4e00\u4e2a\u6709\u5e8f\u5b50\u4e32\u552f\u4e00\u523b\u753b\u3002\n\n\u90a3\u4e48\u8003\u8651 trie \u6811\uff0c\u524d\u7f00\u548c\u540e\u7f00\u786e\u5b9a\u5373\u662f\u5728\u6b63\u4e32\u548c\u53cd\u4e32\u7684 trie \u4e0a\u5728\u67d0\u4e24\u4e2a\u5b50\u6811\u5185\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u4e8c\u7ef4\u6570\u70b9\uff0c\u76f4\u63a5\u626b\u63cf\u7ebf\u52a0\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u4f18\u79c0\u7684 $O(n|s|\\log n|s|)$\uff0c\u8ba1\u7b97\u8d21\u732e\u65f6\u8981\u6ce8\u610f\u4e00\u4e9b\u7ec6\u8282\uff0c\u5199\u5728\u6ce8\u91ca\u91cc\u4e86\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ninline ll readint(){\n\tll x=0;\n\tbool f=0;\n\tchar c=getchar();\n\twhile(!isdigit(c)&&c!='-') c=getchar();\n\tif(c=='-'){\n\t\tf=1;\n\t\tc=getchar();\n\t}\n\twhile(isdigit(c)){\n\t\tx=x*10+c-'0';\n\t\tc=getchar();\n\t}\n\treturn f?-x:x;\n}\nconst int maxn=2e5+5;\nint n,l;\nchar tmp[maxn],*s[maxn],ord[maxn];\nstruct trie{\n\tint sz=1,ch[maxn][26],cnt,pos[maxn],size[maxn];\n\tvoid dfs(int u){\n\t\tpos[u]=++cnt;\n\t\tsize[u]=1;\n\t\tfor(int i=0;i<26;i++) if(ch[u][i]){\n\t\t\tint v=ch[u][i];\n\t\t\tdfs(v);\n\t\t\tsize[u]+=size[v];\n\t\t}\n\t}\n}t1,t2,t3;\nvector<int> vec[maxn];\nvector<int> cur1[maxn],cur2[maxn];\nlong long ans=0;\nvector<int> q1[maxn];\nstruct qr{\n\tint l,r,tp,id;\n};\nvector<qr> q2[maxn];\ninline int lowbit(int x){\n\treturn x&-x;\n}\nint c[maxn];\nvoid modify(int x,int k){\n\twhile(x<=t3.sz){\n\t\tc[x]+=k;\n\t\tx+=lowbit(x);\n\t}\n}\nint query(int x){\n\tint s=0;\n\twhile(x){\n\t\ts+=c[x];\n\t\tx-=lowbit(x);\n\t}\n\treturn s;\n}\nvoid solve(vector<int> vec){\n\tint m=vec.size();\n\tt2.sz=t3.sz=1;\n\tmemset(t2.ch[0],0,sizeof(t2.ch[0]));\n\tmemset(t3.ch[0],0,sizeof(t3.ch[0]));\n\tfor(int i:vec){\n\t\tcur1[i].resize(l+1);\n\t\tfor(int j=1;j<=l;j++){\n\t\t\tif(!t2.ch[cur1[i][j-1]][s[i][j]-'a']){\n\t\t\t\tmemset(t2.ch[t2.sz],0,sizeof(t2.ch[0]));\n\t\t\t\tt2.ch[cur1[i][j-1]][s[i][j]-'a']=t2.sz++;\n\t\t\t}\n\t\t\tcur1[i][j]=t2.ch[cur1[i][j-1]][s[i][j]-'a'];\n\t\t}\n\t\tcur2[i].resize(l+2);\n\t\tfor(int j=l;j>0;j--){\n\t\t\tif(!t3.ch[cur2[i][j+1]][s[i][j]-'a']){\n\t\t\t\tmemset(t3.ch[t3.sz],0,sizeof(t3.ch[0]));\n\t\t\t\tt3.ch[cur2[i][j+1]][s[i][j]-'a']=t3.sz++;\n\t\t\t}\n\t\t\tcur2[i][j]=t3.ch[cur2[i][j+1]][s[i][j]-'a'];\n\t\t}\n\t}\n\tt2.cnt=t3.cnt=0;\n\tt2.dfs(0);\n\tt3.dfs(0);\n\tfor(int i=1;i<=t2.sz;i++) vector<int>().swap(q1[i]);\n\tfor(int i:vec) q1[t2.pos[cur1[i][l]]].push_back(t3.pos[cur2[i][1]]);\n\tfor(int i=1;i<=t2.sz;i++) vector<qr>().swap(q2[i]);\n\tfor(int i:vec){\n\t\tans+=2ll*(m-1)+1337ll*(n-m);//\u5148\u5047\u8bbe\u5bf9\u6240\u6709\u4e32\u7684\u8d21\u732e\u90fd\u662f 2\n\t\tint ml=1;\n\t\tfor(int j=1;j<=l;j++) if(j==l||s[i][j]>s[i][j+1]){\n\t\t\tint u=cur1[i][ml-1],v=cur2[i][j+1];\n\t\t\tq2[t2.pos[u]-1].push_back({t3.pos[v],t3.pos[v]+t3.size[v]-1,2});\n\t\t\tq2[t2.pos[u]+t2.size[u]-1].push_back({t3.pos[v],t3.pos[v]+t3.size[v]-1,-2});\n            //\u8d21\u732e -2 \u662f\u56e0\u4e3a\u8981\u628a 2 \u53d8\u6210 1 \u662f -1\uff0c\u6b63\u53cd\u8981\u7b97\u4e24\u904d\n\t\t\tans+=2;//\u5f53\u524d\u4e32\u81ea\u5df1\u4e5f\u88ab\u7b97\u8fdb\u6765\u4e86\n\t\t\tml=j+1;\n\t\t}\n\t}\n\tfor(int i=1;i<=t2.sz;i++){\n\t\tfor(int j:q1[i]) modify(j,1);\n\t\tfor(qr j:q2[i]) ans+=(query(j.r)-query(j.l-1))*j.tp;\n\t}\n\tfor(int i=1;i<=t2.sz;i++) for(int j:q1[i]) modify(j,-1);\n}\nint main(){\n\t#ifdef LOCAL\n\tfreopen(\"in.txt\",\"r\",stdin);\n\tfreopen(\"out.txt\",\"w\",stdout);\n\t#endif\n\tn=readint();\n\ts[1]=tmp;\n\tscanf(\"%s\",s[1]+1);\n\tl=strlen(s[1]+1);\n\tfor(int i=2;i<=n;i++){\n\t\ts[i]=s[i-1]+l;\n\t\tscanf(\"%s\",s[i]+1);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=l;j++) ord[j]=s[i][j];\n\t\tsort(ord+1,ord+l+1);\n\t\tint u=0;\n\t\tfor(int j=1;j<=l;j++){\n\t\t\tif(!t1.ch[u][ord[j]-'a']) t1.ch[u][ord[j]-'a']=t1.sz++;\n\t\t\tu=t1.ch[u][ord[j]-'a'];\n\t\t}\n\t\tvec[u].push_back(i);\n\t}\n\tfor(int i=1;i<t1.sz;i++) if(vec[i].size()) solve(vec[i]);\n\tprintf(\"%lld\\n\",ans/2);\n\t#ifdef LOCAL\n\tfprintf(stderr,\"%d\\n\",(int)clock());\n\t#endif\n\treturn 0;\n}\n```",
        "postTime": 1631415313,
        "uid": 174045,
        "name": "FZzzz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1535F \u3010String Distance\u3011"
    },
    {
        "content": "upd\uff1a\u4e4b\u524d\u6709\u4e00\u4e2a\u590d\u6742\u5ea6\u5199\u9519\u4e86\uff0c\u6539\u4e86\u4e00\u4e0b\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u4e24\u4e2a\u4e32\u80fd\u591f\u901a\u8fc7\u9898\u76ee\u4e2d\u7684\u64cd\u4f5c\u53d8\u4e3a\u76f8\u540c\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u6784\u6210\u4e24\u4e2a\u4e32\u7684\u5b57\u7b26\u76f8\u540c\u4e14\u6bcf\u79cd\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\u76f8\u540c\u3002\u56e0\u4e3a\u6211\u4eec\u663e\u7136\u53ef\u4ee5\u901a\u8fc7\u4e0d\u591a\u4e8e\u4e24\u6b21\u64cd\u4f5c\u4f7f\u5b83\u4eec\u76f8\u540c\uff08\u5bf9\u4e24\u4e2a\u4e32\u5206\u522b\u6392\u5e8f\u5373\u53ef\uff09\u3002\n\n\u6211\u4eec\u628a\u80fd\u53d8\u6210\u76f8\u540c\u7684\u4e32\u653e\u5230\u4e00\u7c7b\u91cc\uff0c\u4e0d\u540c\u7c7b\u4e4b\u95f4\u7684\u4e32\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5c31\u90fd\u662f $1337$\u3002\u6240\u4ee5\u6211\u4eec\u63a5\u4e0b\u6765\u8981\u8ba1\u7b97\u7684\u5c31\u662f\u6bcf\u4e00\u7c7b\u91cc\u6709\u591a\u5c11\u5bf9\u4e32\u80fd\u591f\u901a\u8fc7\u4e00\u6b21\u64cd\u4f5c\u53d8\u4e3a\u76f8\u540c\u7684\u3002\u4e0b\u6587\u7684 $n$ \u8868\u793a\u7684\u662f\u6bcf\u4e00\u7c7b\u91cc\u7684\u5b57\u7b26\u4e32\u6570\u91cf\uff0c$\\operatorname{lcp(s,t)}=p$ \u8868\u793a $s,t$ \u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u4e3a $[0,p]$\uff0c$\\operatorname{lcs(s,t)}=p$ \u8868\u793a $s,t$ \u7684\u6700\u957f\u516c\u5171\u540e\u7f00\u4e3a $[p,s-1]$\u3002\n\n\u5bf9\u4e8e\u4e24\u4e2a\u4e32 $s,t$ \uff08\u4e0d\u59a8\u8bbe $s$ \u7684\u5b57\u5178\u5e8f\u5c0f\u4e8e $t$\uff09\uff0c\u6211\u4eec\u8003\u8651\u4e00\u6b21\u64cd\u4f5c $t$ \u4f7f\u5b83\u53d8\u6210 $s$\uff08\u56e0\u4e3a\u6392\u5e8f\u64cd\u4f5c\u4e00\u5b9a\u4f1a\u51cf\u5c0f\u5b83\u7684\u5b57\u5178\u5e8f\uff09\u3002\u8bbe $\\operatorname{lcp}(s,t)=p$\uff0c$\\operatorname{lcs}(s,t)=q$\uff0c\u90a3\u4e48 $s,t$ \u53ea\u6709 $[p+1,q-1]$ \u8fd9\u4e00\u6bb5\u662f\u4e0d\u540c\u7684\uff0c\u5982\u679c\u5bf9 $t$ \u7684 $[p+1,q-1]$ \u6392\u5e8f\u540e\u7b49\u4e8e $s$\uff0c\u90a3\u4e48 $s,t$ \u5c31\u80fd\u901a\u8fc7\u4e00\u6b21\u64cd\u4f5c\u76f8\u7b49\u3002\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u8981\u5224\u65ad $s$ \u7684 $[p+1,q-1]$ \u8fd9\u4e00\u6bb5\u662f\u5426\u6709\u5e8f\u3002\u8fd9\u4e2a\u662f\u5f88\u5bb9\u6613\u505a\u7684\uff08\u53ef\u4ee5\u5bf9 $s_i<s_{i-1}$ \u7684\u4f4d\u7f6e\u6c42\u4e2a\u524d\u7f00\u548c\uff0c\u5224\u65ad $s$ \u7684 $[l,r]$ \u662f\u5426\u6709\u5e8f\u53ea\u9700 $O(1)$ \u68c0\u67e5 $[l+1,r]$ \u5185\u662f\u5426\u6709 $s_i<s_{i-1}$ \u7684\u4f4d\u7f6e\uff09\u3002\n\n\u5982\u679c\u6211\u4eec\u91c7\u7528 $O(1)$ \u6c42 $\\operatorname{lcp}$ \u6216 $\\operatorname{lcs}$ \u7684\u7b97\u6cd5\uff08\u6bd4\u5982\u5bf9\u6240\u6709\u4e32\u6392\u5e8f\u6c42\u51fa $height$ \u6570\u7ec4\uff0c\u518d\u7528 ST \u8868\u505a\u5230 $O(1)$ \u67e5\u8be2\uff09\uff0c\u5c31\u53ef\u4ee5\u5728 $O(ns\\log n+n^2)$ \u7684\u65f6\u95f4\u89e3\u51b3\u672c\u9898\u3002\n\n\u7136\u800c $n$ \u5f88\u5927\u65f6\u4e0a\u8ff0\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u65e0\u6cd5\u627f\u53d7\uff0c\u4f46\u6211\u4eec\u53d1\u73b0 $n$ \u5f88\u5927\u65f6 $s$ \u5c31\u4f1a\u5f88\u5c0f\uff08$n\\cdot s\\leq2\\times 10^5$\uff09\u3002\u6240\u4ee5\u6211\u4eec\u518d\u9488\u5bf9 $s$ \u5f88\u5c0f\u7684\u60c5\u51b5\u8bbe\u8ba1\u7b97\u6cd5\u3002\n\n\u8003\u8651\u679a\u4e3e\u4e32\u7684\u6bcf\u4e00\u4e2a\u533a\u95f4 $[l,r]$\uff0c\u518d\u679a\u4e3e\u6bcf\u4e00\u4e2a\u4e32 $t$\uff0c\u6211\u4eec\u8981\u8ba1\u7b97\u7684\u5c31\u662f\u6709\u591a\u5c11\u4e2a\u4e32 $s$ \u80fd\u901a\u8fc7\u5bf9 $t$ \u7684\u533a\u95f4 $[l,r]$ \u6392\u5e8f\u53d8\u6210\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u6c42\u6709\u5bf9\u5c11\u4e32 $s$ \u6ee1\u8db3 $\\operatorname{lcp}(s,t)\\geq l-1$\uff0c$\\operatorname{lcs}(s,t)\\leq r+1$ \u4e14 $s$ \u7684 $[l,r]$ \u8fd9\u4e00\u6bb5\u662f\u6709\u5e8f\u7684\u3002\u5982\u679c\u6211\u4eec\u628a\u6240\u6709\u4e32\u6309\u5b57\u5178\u5e8f\u6392\u5e8f\uff0c\u90a3\u4e48\u6ee1\u8db3 $\\operatorname{lcp}(s,t)\\geq l-1$ \u7684 $s$ \u662f\u8fde\u7eed\u7684\u4e00\u6bb5\u533a\u95f4\uff0c\u540c\u7406\uff0c\u5982\u679c\u6211\u4eec\u628a\u6bcf\u4e2a\u4e32\u7ffb\u8f6c\u518d\u6392\u5e8f\uff0c\u90a3\u4e48\u6ee1\u8db3 $\\operatorname{lcs}(s,t)\\leq r+1$ \u7684 $s$ \u4e5f\u662f\u4e00\u6bb5\u8fde\u7eed\u7684\u533a\u95f4\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e8c\u5206\u6c42\u51fa\u8fd9\u4e24\u6bb5\u533a\u95f4\u3002\u6240\u4ee5\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u4e8c\u7ef4\u6570\u70b9\uff0c\u6211\u7528\u7684\u4e3b\u5e2d\u6811\u5c31\u53ef\u4ee5\u5f88\u5bb9\u6613\u6c42\u51fa\u7b54\u6848\u3002\n\n\u6709\u4e00\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u95ee\u9898\u5c31\u662f\u5982\u679c\u6211\u4eec\u679a\u4e3e\u7684\u533a\u95f4 $[l,r]$ \u7684\u4e00\u6bb5\u524d\u7f00\u6216\u4e00\u6bb5\u540e\u7f00\u5728\u6392\u5e8f\u540e\u6ca1\u6709\u6539\u53d8\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u80fd\u7b97\u91cd\uff0c\u8981\u5224\u6389\u8fd9\u79cd\u60c5\u51b5\u3002\n\n\u8fd9\u4e2a\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u662f $O(s^2n\\log n)$\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u505a\u5230 $O(ns\\log n+\\min\\{n^2,s^2n\\log n\\})$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\u7684\u5f88\u4e11\uff0c\u52ff\u55b7\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<iostream> \n#include<algorithm>\n#include<vector>\n#include<string>\n#include<map>\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\nconst int maxn=2e5+10;\nint n,len;\nstring str[maxn];\nint lg[maxn];\nstruct longest_common_prefix{\n\tint height[maxn];\n\tvector<string> v;\n\tvoid set(vector<string> _v){ v=_v;}\n\tinline int _lcp(string a,string b){\n\t\tint ans=0;\n\t\twhile(a[ans]==b[ans]) ans++;\n\t\treturn ans;\n\t}\n\tvoid get_height(){\n\t\tfor(int i=1;i<n;i++) height[i]=_lcp(v[i-1],v[i]);\n\t}\n\tint f[maxn][19];\n\tvoid init_st(){\n\t\tfor(int i=0;i<n;i++) f[i][0]=height[i];\n\t\tint t=lg[n+1]+1;\n\t\tfor(int j=1;j<t;j++)\n\t\t\tfor(int i=0;i<=n-(1<<j);i++)\n\t\t\t\tf[i][j]=min(f[i][j-1],f[i+(1<<j-1)][j-1]);\n\t}\n\tinline int query_st(int l,int r){\n\t\tint k=lg[r-l+1];\n\t\treturn min(f[l][k],f[r-(1<<k)+1][k]);\n\t}\n\tinline int lcp(int x,int y){\n\t\tif(x>y) swap(x,y);\n\t\treturn query_st(x+1,y)-1;\n\t}\n}v1,v2;\nint pos[maxn];\nvector<int> s[maxn];\ninline int lcs(int x,int y){\n\treturn len-v2.lcp(pos[x],pos[y])-1;\n}\nll calc1(vector<string> v){\n\tll ans=0;\n\tfor(int i=1;i<n;i++)\n\t\tfor(int j=0;j<i;j++){ \n\t\t\tint p=v1.lcp(i,j),q=lcs(i,j);\n\t\t\tif(s[j][p+1]==s[j][q-1]) ans+=1;\n\t\t\telse ans+=2;\n\t\t}\n\treturn ans;\n}\nint mn[maxn],mx[maxn];\ninline int findl(int p,int lcp_){\n\tint l=0,r=p;\n\twhile(l<r){\n\t\tint mid=l+r>>1;\n\t\tif(v1.lcp(mid,p)>=lcp_) r=mid;\n\t\telse l=mid+1;\n\t}\n\treturn l;\n}\ninline int findr(int p,int lcp_){\n\tint l=p,r=n-1;\n\twhile(l<r){\n\t\tint mid=l+r+1>>1;\n\t\tif(v1.lcp(mid,p)>=lcp_) l=mid;\n\t\telse r=mid-1;\n\t}\n\treturn l;\n}\ninline int findl_(int p,int lcs_){\n\tint l=0,r=p;\n\twhile(l<r){\n\t\tint mid=l+r>>1;\n\t\tif(len-v2.lcp(mid,p)-1<=lcs_) r=mid;\n\t\telse l=mid+1;\n\t}\n\treturn l;\n}\ninline int findr_(int p,int lcs_){\n\tint l=p,r=n-1;\n\twhile(l<r){\n\t\tint mid=l+r+1>>1;\n\t\tif(len-v2.lcp(mid,p)-1<=lcs_) l=mid;\n\t\telse r=mid-1;\n\t}\n\treturn l;\n}\nstruct SegTree{ int lc,rc,dat;}tr[maxn*4];\nint rt[maxn],tot;\nint build(int l,int r){\n\tint p=++tot;\n\tif(l==r) return tr[p].dat=tr[p].lc=tr[p].rc=0,p;\n\tint mid=l+r>>1;\n\ttr[p].lc=build(l,mid);\n\ttr[p].rc=build(mid+1,r);\n\treturn p;\n}\nint modify(int now,int l,int r,int pos,int val){\n\tint p=++tot; tr[p]=tr[now];\n\tif(l==r) return tr[p].dat=val,p;\n\tint mid=l+r>>1;\n\tif(pos<=mid) tr[p].lc=modify(tr[now].lc,l,mid,pos,val);\n\telse tr[p].rc=modify(tr[now].rc,mid+1,r,pos,val);\n\ttr[p].dat=tr[tr[p].lc].dat+tr[tr[p].rc].dat;\n\treturn p;\n}\nint ask(int p,int q,int l,int r,int ql,int qr){\n\tif(ql<=l&&qr>=r) return tr[q].dat-tr[p].dat;\n\tint mid=l+r>>1,res=0;\n\tif(ql<=mid) res=ask(tr[p].lc,tr[q].lc,l,mid,ql,qr);\n\tif(qr>mid) res+=ask(tr[p].rc,tr[q].rc,mid+1,r,ql,qr);\n\treturn res;\n}\nll calc2(vector<string> v){\n\tll ans=0;\n\tfor(int i=0;i<len-1;i++){\n\t\tfor(int k=0;k<n;k++) mn[k]=mx[k]=v[k][i];\n\t\tfor(int j=i+1;j<len;j++){\n\t\t\tfor(int k=0;k<n;k++){\n\t\t\t\tmn[k]=min(mn[k],(int)v[k][j]);\n\t\t\t\tmx[k]=max(mx[k],(int)v[k][j]);\n\t\t\t}\n\t\t\ttot=0; rt[0]=build(0,n);\n\t\t\tfor(int k=0;k<n;k++) rt[k+1]=modify(rt[k],0,n,pos[k],s[k][i]==s[k][j]);\n\t\t\tfor(int k=0;k<n;k++){\n\t\t\t\tif(v[k][i]==mn[k]||v[k][j]==mx[k]) continue;\n\t\t\t\tint l=findl(k,i-1),r=findr(k,i-1);\n\t\t\t\tint l_=findl_(pos[k],j+1),r_=findr_(pos[k],j+1);\n\t\t\t\tans+=ask(rt[l],rt[r+1],0,n,l_,r_);\n\t\t\t}\n\t\t}\n\t}\n\treturn (ll)n*(n-1)-ans;\n}\nll calc(vector<string> v){\n\tn=v.size();\n\tsort(v.begin(),v.end());\n\tv1.set(v),v1.get_height(),v1.init_st();\n\tvector<string> rv=v;\n\tmap<string,int> mp;\n\tfor(int i=0;i<n;i++){\n\t\treverse(rv[i].begin(),rv[i].end());\n\t\tmp[rv[i]]=i;\n\t}\n\tsort(rv.begin(),rv.end());\n\tfor(int i=0;i<n;i++) pos[mp[rv[i]]]=i;\n \tv2.set(rv),v2.get_height(),v2.init_st();\n\tfor(int i=0;i<n;i++){\n\t\ts[i].resize(len);\n\t\ts[i][0]=0;\n\t\tfor(int j=1;j<len;j++)\n\t\t\tif(v[i][j]<v[i][j-1]) s[i][j]=s[i][j-1]+1;\n\t\t\telse s[i][j]=s[i][j-1];\n\t}\n\treturn n<=10000?calc1(v):calc2(v);\n}\nint main(){\n\tint n; cin>>n;\n\tfor(int i=0;i<18;i++) lg[1<<i]=i;\n\tfor(int i=3;i<=n+1;i++) if(!lg[i]) lg[i]=lg[i-1];\n\tmap<vector<int>,vector<string> > mp;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>str[i];\n\t\tvector<int> c(26);\n\t\tfor(auto j:str[i]) c[j-'a']++;\n\t\tmp[c].push_back(str[i]);\n\t}\n\tlen=str[1].length();\n\tint tot=0; ll ans=0;\n\tfor(map<vector<int>,vector<string> >::iterator\n\t\t\tit=mp.begin();it!=mp.end();it++){\n\t\tans+=calc(it->second);\n\t\tans+=(ll)tot*it->second.size()*1337;\n\t\ttot+=it->second.size();\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1623042656,
        "uid": 176569,
        "name": "iMya_nlgau",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1535F \u3010String Distance\u3011"
    },
    {
        "content": "with [@SPFA](https://www.luogu.com.cn/user/177999)\n\n~~CF \u6076\u8bc4\uff0cmap \u8feb\u771f\u6570\u636e\u7ed3\u6784~~\n\n\u9996\u5148\u8003\u8651\u4e24\u4e2a\u4e32 $s_1s_2$ \u600e\u4e48\u6c42\u7b54\u6848\n\n- \u5982\u679c\u4e24\u4e2a\u4e32\u5b57\u6bcd\u7ec4\u6210\u4e0d\u4e00\u6837\uff0c\u5219\u65e0\u89e3\n- \u5982\u679c $s_i$ \u5b58\u5728\u4e00\u4e2a\u5b50\u4e32 $s_1[l...r]$ \u6392\u597d\u4e86\u5e8f\uff0c\u4e14 $s_1[1...l-1]=s_2[1...l-1]s_1[r+1...|s_1|]=s_2[r+1...|s_1|]$\uff0c\u90a3\u4e48\u5c31\u53ea\u9700\u8981\u6392 $s_2[l...r]$\n- \u5426\u5219\u6392\u4e24\u6b21\uff0c\u5206\u522b\u5c06 $s_1,s_2$ \u6574\u4e2a\u6392\u5e8f\n\n\u89c2\u5bdf\u5230\u4e00\u4e2a\u6027\u8d28\uff1a\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u4e00\u5b9a\u9009\u6781\u957f\u7684\u533a\u95f4\uff0c\u56e0\u4e3a\u6211\u4eec\u5c3d\u91cf\u5927\u7684\u533a\u95f4\u524d\u7f00\u548c\u540e\u7f00\u8d8a\u597d\u6ee1\u8db3\uff0c\u8fd9\u4e2a\u4e5f\u662f\u5f88\u597d\u7406\u89e3\u7684\n\n\u53e6\u4e00\u4e2a\u91cd\u8981\u6027\u8d28\uff1a\u5982\u679c $s_1$ \u80fd\u6392\u6210 $s_2$\uff0c\u90a3\u4e48 $s_2$ \u4e0d\u80fd\u6392\u6210 $s_1$\u3002\u7531\u4e8e $s_i$ \u4e92\u4e0d\u76f8\u540c\uff0c\u4e00\u5b9a\u662f $s_1$ \u7684\u4e00\u6bb5\u662f\u65e0\u5e8f\u7684\uff0c\u6709\u5e8f\u7684\u4e0d\u53ef\u80fd\u6392\u6210\u65e0\u5e8f\u7684\n\n\u9996\u5148\u628a\u51fa\u73b0\u6b21\u6570\u54c8\u5e0c\uff0c\u51fa\u73b0\u6b21\u6570\u76f8\u540c\u7684\u4e00\u5757\u505a\u3002\u63a5\u7740\u5bf9\u6bcf\u4e00\u4e2a $s_i$\uff0c\u627e\u51fa\u5b83\u6240\u6709\u6781\u957f\u7684\u4e0a\u5347\u533a\u95f4\uff0c\u7136\u540e\u5206\u522b\u8003\u8651\u4f1a\u548c\u591a\u5c11\u4e32\u8d21\u732e\uff0c\u7531\u4e8e\u533a\u95f4\u662f\u4e24\u4e24\u4e0d\u4ea4\u7684\uff0c\u52a0\u4e0a\u4e0a\u9762\u7684\u6027\u8d28\u4fdd\u8bc1\u4e86\u6211\u4eec\u4e0d\u4f1a\u7b97\u91cd\n\n\u524d\u7f00\u8003\u8651 trie \u6216 SA\uff0c\u540e\u7f00\u76f4\u63a5\u54c8\u5e0c\u5373\u53ef\uff0c\u6211\u9009\u62e9\u4e86 SA\n\n\u4f46\u7531\u4e8e\u6211\u4eec\u53ea\u9700\u8981\u4e32\u95f4\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u6240\u4ee5\u4e0d\u9700\u8981 SA \u7684\u5b8c\u5168\u4f53\uff0c\u76f4\u63a5 `std::sort` \u4e00\u904d\u5c31\u884c\u4e86\uff0c\u590d\u6742\u5ea6\u662f $O(n\\log n \\,|s_1|)$\n\n\u4e4b\u540e\u66b4\u529b\u5efa\u4e32\u95f4 `height`\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u533a\u95f4\u627e\u4e32\u7684\u533a\u95f4\uff0c\u95ee\u9898\u8f6c\u5316\u6210\u5bf9\u4e00\u4e2a\u533a\u95f4\uff0c\u95ee\u6709\u51e0\u4e2a\u533a\u95f4\u91cc\u6709\u5bf9\u5e94\u7684\u54c8\u5e0c\u503c\n\n\u76f4\u63a5\u79bb\u7ebf + map \u5373\u53ef\n\n\u603b\u590d\u6742\u5ea6 $O(n|s_1|(\\log n+\\log |s_1|))$\n\n```cpp\n// Problem: CF1535F String Distance\n// Contest: Luogu\n// URL: https://www.luogu.com.cn/problem/CF1535F\n// Memory Limit: 1000 MB\n// Time Limit: 2000 ms\n// \n// Powered by CP Editor (https://cpeditor.org)\n\n/*\n * Author: chenkaifeng @BDFZ\n */\n\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n#define fi first\n#define se second\n#define mp make_pair\n#define pb push_back\n#define pf push_front\n#define rep(i, s, t) for (int i = s; i <= t; i++)\n#define per(i, s, t) for (int i = t; i >= s; i--)\n\n#define int long long\n\nconst ll mod = 999999999999989ll;\n// const int mod = 1234567891;\n\nconst int N = 2e5 + 5;\nconst int base = 131;\n\nint n;\nstring s[N];\npair<string, int> S[N];\nvector<pair<string, int>> ut[N];\nint nn, len;\nint cnthash[N];\nint cnt[27];\nint b[N];\nint lg2[N];\n\nsigned main() {\n\tios::sync_with_stdio(false); cin.tie(0), cout.tie(0);\n\tcout << fixed << setprecision(15); cerr << fixed << setprecision(15);\n\t\n\tcin >> n;\n\trep(i, 1, n) {\n\t\tcin >> s[i];\n\t}\n\tlen = s[1].length();\n\t\n\tsort(s + 1, s + n + 1);\n\t\n\trep(i, 1, n) {\n\t\tif(s[i] != s[i-1]) S[++nn] = mp(s[i], 1);\n\t\telse S[nn].se++;\n\t}\n\t\n\trep(i, 1, nn) {\n\t\tmemset(cnt, 0, sizeof cnt);\n\t\tfor(char c : S[i].fi) cnt[c-'a']++;\n\t\trep(j, 0, 25) cnthash[i] = (1ll * cnthash[i] * base + cnt[j]) % mod;\n\t\tb[i] = cnthash[i];\n\t}\n\tsort(b + 1, b + nn + 1); int pb = unique(b + 1, b + nn + 1) - (b + 1);\n\trep(i, 1, nn) cnthash[i] = lower_bound(b + 1, b + pb + 1, cnthash[i]) - b;\n\trep(i, 1, nn) ut[cnthash[i]].pb(S[i]);\n\t\n\tll ans = 0;\n\t\n\tlg2[0] = -1;\n\trep(i, 1, n) lg2[i] = lg2[i>>1] + 1;\n\t\n\trep(i, 1, pb) {\n\t\t\n\t\t\n\t\tll sum = 0;\n\t\tfor(auto& [str, t] : ut[i]) sum += t;\n\t\tans += 1337ll * sum * (n - sum);\n\t\tsort(ut[i].begin(), ut[i].end());\n\t\t\n\t\tvector<int> height(ut[i].size());\n\t\tvector<vector<int>> st(20, vector<int>(ut[i].size() + 5));\n\t\tvector<vector<int>> sufhash(ut[i].size(), vector<int>(len+1, 0));\n\t\t\n\t\tfor(int j = 1; j < ut[i].size(); j++) {\n\t\t\tfor(int k = 0; k < len; k++) {\n\t\t\t\tif(ut[i][j].fi[k] == ut[i][j-1].fi[k]) {\n\t\t\t\t\theight[j] = k+1;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor(int j = 0; j < ut[i].size(); j++) {\n\t\t\tfor(int k = len-1; k >= 0; k--) {\n\t\t\t\tsufhash[j][k] = (1ll * sufhash[j][k+1] * base + ut[i][j].fi[k]) % mod;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor(int j = 0; j < ut[i].size(); j++) st[0][j] = height[j];\n\t\tfor(int t = 1; t < 20; t++) for(int j = 0; j < ut[i].size(); j++) {\n\t\t\tif(j + (1 << t) - 1 > ut[i].size()) break;\n\t\t\tst[t][j] = min(st[t-1][j], st[t-1][j+(1<<t-1)]);\n\t\t}\n\t\tauto query = [&](int l, int r) {\n\t\t\tint lg = lg2[r-l+1];\n\t\t\treturn min(st[lg][l], st[lg][r-(1<<lg)+1]);\n\t\t};\n\t\t\n\t\t\n\t\tauto binarysearch = [&](int st, int len, int& resL, int& resR) {\n\t\t\tresL = resR = st;\n\t\t\t{\n\t\t\t\tint L = 0, R = st - 1;\n\t\t\t\twhile(L <= R) {\n\t\t\t\t\tint mid = L + R >> 1;\n\t\t\t\t\tif(query(mid+1, st) >= len) resL = mid, R = mid - 1;\n\t\t\t\t\telse L = mid + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\t{\n\t\t\t\tint L = st + 1, R = ut[i].size() - 1;\n\t\t\t\twhile(L <= R) {\n\t\t\t\t\tint mid = L + R >> 1;\n\t\t\t\t\tif(query(st+1, mid) >= len) resR = mid, L = mid + 1;\n\t\t\t\t\telse R = mid - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t\n\t\tvector<pair<int, pair<int, int>>> op;\n\t\t\n\t\tauto calc = [&](int id, int l, int r) {\n\t\t\tint rangeL, rangeR;\n\t\t\tbinarysearch(id, l, rangeL, rangeR);\n\t\t\tint shash = sufhash[id][r+1];\n\t\t\tif(rangeL) op.pb(mp(rangeL-1, mp(shash, -ut[i][id].se)));\n\t\t\top.pb(mp(rangeR, mp(shash, ut[i][id].se)));\n\t\t};\n\t\t\n\t\tauto getans = [&]() {\n\t\t\tll res = 0;\n\t\t\tmap<int, int> cnt;\n\t\t\tassert(!op.empty());\n\t\t\tsort(op.begin(), op.end());\n\t\t\tfor(int j = 0; j <= op[0].fi; j++) {\n\t\t\t\tfor(int hashval : sufhash[j]) {\n\t\t\t\t\tcnt[hashval] += ut[i][j].se;\n\t\t\t\t}\n\t\t\t}\n\t\t\tres += 1ll * cnt[op[0].se.fi] * op[0].se.se;\n\t\t\tfor(int j = 1; j < op.size(); j++) {\n\t\t\t\tfor(int k = op[j-1].fi+1; k <= op[j].fi; k++) {\n\t\t\t\t\tfor(int hashval : sufhash[k]) cnt[hashval] += ut[i][k].se;\n\t\t\t\t}\n\t\t\t\tres += 1ll * cnt[op[j].se.fi] * op[j].se.se;\n\t\t\t}\n\t\t\treturn res;\n\t\t};\n\t\t\n\t\tll cnt1 = 0;\n\t\t\n\t\tfor(int j = 0; j < ut[i].size(); j++) {\n\t\t\tint last = 0;\n\t\t\tfor(int k = 1; k < len; k++) {\n\t\t\t\tif(ut[i][j].fi[k] < ut[i][j].fi[k-1]) {\n\t\t\t\t\tcalc(j, last, k-1);\n\t\t\t\t\tcnt1 -= 1ll * ut[i][j].se * ut[i][j].se;\n\t\t\t\t\tlast = k;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcnt1 -= 1ll * ut[i][j].se * ut[i][j].se;\n\t\t\tcalc(j, last, len-1);\n\t\t}\n\t\t\n\t\tcnt1 += getans();\n\t\t\n\t\t\n\t\tans -= 2 * cnt1;\n\t\tfor(int j = 0; j < ut[i].size(); j++) {\n\t\t\tans += 2ll * ut[i][j].se * (sum - ut[i][j].se);\n\t\t}\n\t}\n\t\n\tcout << ans / 2 << \"\\n\";\n\t\n\treturn 0;\n}\n```",
        "postTime": 1631359298,
        "uid": 95103,
        "name": "KellyFrog",
        "ccfLevel": 9,
        "title": "\u3010CF1535F String Distance\u3011\u9898\u89e3"
    },
    {
        "content": "~~\u8fd9\u7bc7\u9898\u89e3\u662f\u7ed9\u4e0d\u4f1a SA \u4e5f\u60f3\u4e0d\u51fa\u6b63\u89e3\u53ea\u4f1a\u65e0\u8111\u66b4\u529b\u8fd8\u60f3\u8dd1\u5f97\u6bd4\u8f83\u4e0d\u6162\u7684\u4eba\u770b\u7684~~\n\n\u5148\u5c1d\u8bd5\u76f4\u63a5\u66b4\u529b\u3002\u5148\u628a\u5b57\u7b26\u96c6\u4e0d\u540c\u7684\u5b57\u7b26\u4e32\u5206\u5f00\u8003\u8651\uff0c\u679a\u4e3e\u4e24\u4e2a\u4e32\u3002\u7136\u540e\u6316\u6398\u4e00\u4e0b\u8fd9\u4e2a $f$ \u5230\u5e95\u662f\u4ec0\u4e48\u3002\n\n- $f(s_i,s_j)=1337$\uff1a$s_i,s_j$ \u5b57\u7b26\u96c6\u4e0d\u540c\u3002\n- $f(s_i,s_j)=1$\uff1a$s_i,s_j$ \u5b57\u7b26\u96c6\u76f8\u540c\u4e14\u5b58\u5728\u4e00\u5bf9 $l,r$\uff0c\u4f7f\u5f97 $s_i,s_j$ \u7684 $1\\sim l$ \u7684\u5b57\u7b26\u76f8\u7b49\u4e14\u5b83\u4eec\u7684 $r\\sim \\vert s\\vert$ \u7684\u5b57\u7b26\u4e5f\u76f8\u7b49\uff0c\u4e14 $s_i,s_j$ \u6709\u4e00\u4e2a $[l+1,r-1]$ \u533a\u95f4\u5185\u5b57\u7b26\u6709\u5e8f\u3002\n- $f(s_i,s_j)=2$\uff1a\u5b57\u7b26\u96c6\u76f8\u540c\u7684\u5176\u5b83\u60c5\u51b5\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u540c\u4e00\u4e2a\u5b57\u7b26\u96c6\u7684\u6211\u4eec\u53ea\u9700\u8981\u8ba1\u7b97 $f$ \u51fd\u6570\u7b49\u4e8e $1$ \u7684\u4e2a\u6570\u3002\n\n\u6211\u4eec\u5148\u627e\u5230 $s_i,s_j$ \u7684 LCP \u548c LCF\uff0c\u7136\u540e\u5224\u4e00\u4e0b $s_i,s_j$ \u9664\u53bb LCP \u548c LCF \u540e\u662f\u5426\u6709\u5e8f\u3002\u5224\u65ad\u6709\u5e8f\u5728\u5bf9\u4e8e\u6bcf\u4e2a\u5b57\u7b26\u4e32\u7ebf\u6027\u9884\u5904\u7406\u540e\u53ef\u4ee5 $O(1)$ \u5224\u65ad\u3002\n\n\u4f7f\u7528\u54c8\u5e0c\u8ba1\u7b97 LCP \u548c LCF\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^2\\log \\vert s\\vert)$\u3002\n\n---\n\n\u7136\u540e\u8003\u8651\u53e6\u4e00\u4e2a\u66b4\u529b\uff0c\u5c31\u662f\u6362\u4e00\u4e2a\u89d2\u5ea6\uff0c\u60f3\u8981 $f(s_i,s_j)=1$\uff0c\u7b2c\u4e00\u4e2a\u66b4\u529b\u5148\u8003\u8651 $s_i,s_j$ \u7684 $1\\sim l$ \u7684\u5b57\u7b26\u76f8\u7b49\u4e14\u5b83\u4eec\u7684 $r\\sim \\vert s\\vert$ \u7684\u5b57\u7b26\u4e5f\u76f8\u7b49\uff0c\u90a3\u6211\u4eec\u662f\u4e0d\u662f\u53ef\u4ee5\u5148\u8003\u8651 $[l+1,r-1]$ \u533a\u95f4\u5185\u5b57\u7b26\u6709\u5e8f\u8fd9\u4e2a\u9650\u5236\u5462\uff1f\n\n\u65e2\u7136\u8981\u6ee1\u8db3 $[1,l],[r,\\vert s\\vert]$ \u90fd\u76f8\u7b49\uff0c\u90a3\u4e48 $l,r$ \u79bb\u5f97\u8d8a\u8fdc\u5c31\u8d8a\u5bb9\u6613\u6ee1\u8db3\u3002\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a\u5b57\u7b26\u4e32\u90fd\u627e\u51fa\u5b83\u7684\u6781\u957f\u6709\u5e8f\u533a\u95f4\u3002\u5047\u8bbe\u5f53\u524d $s_i$ \u7684 $[l+1,r-1]$ \u533a\u95f4\u6709\u5e8f\uff0c\u90a3\u5c31\u5728\u54c8\u5e0c\u8868 $hash_{l,r}$ \u4e2d\u52a0\u5165 $[1,l]$ \u7684\u5b57\u7b26\u4e32\u8fde\u63a5\u4e0a $[r,\\vert s\\vert]$ \u540e\u7684\u5b57\u7b26\u4e32\u7684\u54c8\u5e0c\u503c\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u5f53\u524d\u5b57\u7b26\u4e32\uff0c\u5148\u679a\u4e3e\u6bcf\u4e2a $hash_{i,j}$ \u7edf\u8ba1\u7b54\u6848\uff0c\u518d\u628a\u5f53\u524d\u5b57\u7b26\u4e32\u7684\u6781\u957f\u6709\u5e8f\u533a\u95f4\u52a0\u5230\u54c8\u5e0c\u8868\u91cc\u9762\u5373\u53ef\u3002\n\n\u4f46\u662f\u6ce8\u610f\u8fd9\u6837\u4f1a\u7b97\u6f0f\uff0c\u8981\u628a\u5b57\u7b26\u4e32\u5e8f\u5217\u53cd\u8fc7\u6765\u518d\u8dd1\u4e00\u904d\u3002\n\n\u8fd9\u6837\u505a\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n\\vert s\\vert^2)$ \u7684\u3002\n\n---\n\n\u53d6\u9608\u503c $2500$ \u8f83\u4e3a\u4f18\u79c0\uff0c$n\\le 2500$ \u8dd1\u7b2c\u4e00\u79cd\u66b4\u529b\uff0c$n>2500$ \u8dd1\u7b2c\u4e8c\u79cd\u66b4\u529b\u3002\n\n\u8fd9\u5176\u5b9e\u5df2\u7ecf\u4e0d\u662f\u6839\u53f7\u5206\u6cbb\u4e86\uff0c\u56e0\u4e3a\u7b2c\u4e00\u79cd\u66b4\u529b\u662f\u5e26 $\\log$ \u7684\uff08\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\n#define hashval(l, r) ((1ll * pre[k][(l)] * Pow[m - (r) + 1] * seed + suf[k][(r)]))\n\ntypedef unsigned long long ull;\nconst ull seed = 233;\nstruct Node {\n\tint l, r;\n\tinline bool operator < (const int x) const {return l < x;}\n};\nint n, m, *seg[200005];\nchar *str[200005], tmp[200005];\null Pow[200005], *pre[200005], *suf[200005];\nlong long ans;\nstd::unordered_map<ull, std::vector<int> > mp;\nstd::unordered_multiset<ull> hash[90][90];\n\nint getlcp(int i, int j) {\n\tint l = 0, r = m;\n\twhile (l < r) {\n\t\tint mid = l + r + 1 >> 1;\n\t\tif (pre[i][mid] == pre[j][mid]) l = mid;\n\t\telse r = mid - 1;\n\t}\n\treturn l;\n}\nint getlcs(int i, int j) {\n\tint l = 1, r = m + 1;\n\twhile (l < r) {\n\t\tint mid = l + r >> 1;\n\t\tif (suf[i][mid] == suf[j][mid]) r = mid;\n\t\telse l = mid + 1;\n\t}\n\treturn l;\n}\nvoid calc1(const std::vector<int>& vec) {\n\tans -= vec.size() * 1ll * (vec.size() - 1) / 2 * 1335ll;\n\tfor (int i = 0; i < vec.size(); ++ i)\n\tfor (int j = i + 1; j < vec.size(); ++ j) {\n\t\tint l = getlcp(vec[i], vec[j]) + 1, r = getlcs(vec[i], vec[j]) - 1;\n\t\tif (seg[vec[i]][l] == seg[vec[i]][r] || seg[vec[j]][l] == seg[vec[j]][r]) -- ans;\n\t}\n}\nvoid calc2(const std::vector<int>& vec) {\n\tfor (int i = 0; i <= m + 1; ++ i)\n\t\tfor (int j = 0; j <= m + 1; ++ j) hash[i][j].clear();\n\tfor (int k : vec) {\n\t\tfor (int i = 0; i <= m; ++ i)\n \t\tfor (int j = m + 1; j > i + 2; -- j)\n \t\t\tans -= hash[i][j].count(hashval(i, j));\n \t\tint lst = 1;\n \t\tfor (int i = 2; i <= m; ++ i)\n \t\t\tif (str[k][i - 1] > str[k][i])\n \t\t\t\thash[lst - 1][i].insert(hashval(lst - 1, i)), lst = i;\n \t\thash[lst - 1][m + 1].insert(hashval(lst - 1, m + 1));\n\t}\n}\n\nint main() {\n\tPow[0] = 1ull;\n\tfor (int i = 1; i <= 200000; ++ i) Pow[i] = Pow[i - 1] * seed;\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; ++ i) {\n\t\tstr[i] = new char[200000 / n + 3];\n\t\tpre[i] = new ull[200000 / n + 3];\n\t\tsuf[i] = new ull[200000 / n + 3];\n\t\tseg[i] = new int[200000 / n + 3];\n\t\tfor (int j = 0; j < 200000 / n + 3; ++ j) str[i][j] = '\\0';\n\t\tscanf(\"%s\", str[i] + 1);\n\t\tif (i == 1) m = strlen(str[i] + 1);\n\t\tpre[i][0] = suf[i][m + 1] = 0;\n\t\tfor (int j = 1; j <= m; ++ j)\n\t\t\tpre[i][j] = pre[i][j - 1] * seed + str[i][j] - 'a' + 1;\n\t\tfor (int j = m, k = 1; j; -- j, k = 1ll * k * seed)\n\t\t\tsuf[i][j] = suf[i][j + 1] + 1ll * k * (str[i][j] - 'a' + 1);\n\t\tint lst = 1, tot = 0;\n\t\tfor (int j = 2; j <= m; ++ j)\n\t\t\tif (str[i][j - 1] > str[i][j]) {\n\t\t\t\t++ tot;\n\t\t\t\tfor (int k = lst; k < j; ++ k) seg[i][k] = tot;\n\t\t\t\tlst = j;\n\t\t\t}\n\t\t++ tot;\n\t\tfor (int k = lst; k <= m; ++ k) seg[i][k] = tot;\n\t\tfor (int j = 1; j <= m; ++ j) tmp[j] = str[i][j];\n\t\tstd::sort(tmp + 1, tmp + m + 1);\n\t\tunsigned long long hash_value = 0ull, now = 1ull;\n\t\tfor (int j = 1; j <= m; ++ j, now = now * seed)\n\t\t\thash_value = hash_value + (tmp[j] - 'a' + 1) * now;\n\t\tmp[hash_value].push_back(i);\n\t}\n\tans = 1337ll * n * (n - 1) / 2ll;\n\tif (n <= 2500) for (auto i : mp) calc1(i.second);\n\telse {\n\t\tfor (auto i : mp) {\n\t\t\tans -= i.second.size() * 1ll * (i.second.size() - 1) / 2 * 1335ll;\n\t\t\tcalc2(i.second);\n\t\t\tstd::reverse(i.second.begin(), i.second.end());\n\t\t\tcalc2(i.second);\n\t\t}\n\t}\n\tprintf(\"%lld\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1643013945,
        "uid": 361308,
        "name": "Stinger",
        "ccfLevel": 0,
        "title": "CF1535F String Distance"
    }
]