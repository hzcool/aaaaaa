[
    {
        "content": "\u8fd9\u9898\u8fd8\u53ef\u4ee5\u7528\u4e00\u79cd\u7c7b\u4f3c\u4e8e $Dijkstra$ \u7684\u7b97\u6cd5\n\n\u6700\u5f00\u59cb\u5148\u5c06\u6240\u6709\u7684\u5355\u8bcd\u53d8\u6210\u5c0f\u5199\u3002\u7136\u540e\u5c06\u5355\u8bcd\u770b\u4f5c\u70b9\uff0c\u9898\u76ee\u4e2d\u7684\u540c\u4e49\u8bcd\u95f4**\u53cd\u5411**\u5efa\u8fb9\uff08\u56e0\u4e3a\u4e00\u5f00\u59cb\u662f\u67d0\u5355\u8bcd\u53ef\u4ee5\u6362\u6210\u67d0\u5355\u8bcd\uff0c\u5e94\u8be5\u53d8\u6210\u7528\u67d0\u5355\u8bcd\u6362\u67d0\u5355\u8bcd\uff0c\u6240\u4ee5\u8981**\u53cd\u5411**\u5efa\u8fb9\uff09\u3002\u5982\u7b2c\u4e00\u4e2a\u6837\u4f8b\u5efa\u51fa\u7684\u56fe\u5c31\u5e94\u8be5\u662f\u8fd9\u6837\u7684\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/dg62s1vj.png)\n\n\u6bcf\u4e2a\u8282\u70b9\u5e94\u8be5\u6709\u4e24\u4e2a\u6743\u503c\uff0c\u4e00\u4e2a\u662f\u5355\u8bcd\u4e2d $r$ \u7684\u6570\u91cf\uff0c\u4e00\u4e2a\u662f\u5355\u8bcd\u7684\u957f\u5ea6\u3002\u7136\u540e\u6211\u4eec\u5c31\u8981\u8fd0\u7528 $Dijkstra$ \u7684\u601d\u60f3\uff1a\n1. \u9996\u5148\u5c06\u6240\u6709\u70b9\u548c\u6743\u503c\u585e\u5165\u5355\u8c03\u961f\u5217\uff0c\u5176\u4e2d\u5355\u8c03\u961f\u5217\u662f\u4ee5 $r$ \u6570\u91cf\u6700\u5c11\uff0c\u7136\u540e\u957f\u5ea6\u6700\u77ed\u6392\u5e8f\u7684\u3002\n1. \u5f39\u51fa\u6700\u4e0a\u9762\u7684\u90a3\u4e2a\u70b9\uff08\u4e5f\u5c31\u662f $r$ \u6570\u91cf\u6700\u5c11\uff0c\u957f\u5ea6\u6700\u77ed\u7684\uff09\uff0c\u7136\u540e\u5c06\u5b83\u6240\u6709\u7684\u90bb\u70b9\u7684\u6743\u503c\u90fd\u8d4b\u6210\u5b83\u7684\u6743\u503c\u3002\u56e0\u4e3a\u662f\u5355\u5411\u7684\uff0c\u6240\u4ee5\u5728\u8d4b\u503c\u65f6\u8981**\u5224\u65ad\u4e00\u4e0b\u8fd9\u4e2a\u70b9\u6743\u503c\u662f\u5426\u6bd4\u90bb\u70b9\u5c0f**\uff0c\u6709\u53ef\u80fd\u4f1a\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/khvdjxc6.png)\n\n\u6700\u540e\u53ea\u9700\u8981\u5c06\u6587\u7ae0\u4e2d\u7684\u6240\u6709\u5355\u8bcd $r$ \u7684\u6570\u91cf\u548c\uff0c\u548c\u603b\u957f\u5ea6\u6253\u51fa\u6765\u5373\u53ef\u3002\n\n\u672c\u9898\u8fd8\u662f\u6709\u4e00\u5b9a\u7ec6\u8282\u7684\uff0c\u8981\u5c0f\u5fc3\u3002**\u6bd4\u5982\u8981\u5f00 `long long`\u3002**\n\n------------\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint m,n,cnt=0,name[100005];\nstring a,b1,b2;\nmap<string,int>mp;\nclass node{\n    public:\n        int r,len,name;\n    bool operator < (const node & n) const {\n        if(r==n.r)return len>n.len;\n        else return r>n.r;\n    } \n};\nstruct edge {\n\tint r,len;\n}c[100005];\npriority_queue<node>q;\nvector<int>e[100005]; \nbool vis[100005];\nvoid dijkstra(){\n    memset(vis,0,sizeof(vis));\n    for(int i=1;i<=cnt;i++) {\n    \tnode t;\n    \tt.r=c[i].r;\n    \tt.len=c[i].len;\n    \tt.name=i;\n    \tq.push(t);\n    }\n    while(!q.empty()) {\n        int now=q.top().name; \n        q.pop();\n        if(vis[now])continue;\n        vis[now]=1;\n        for(int i=0;i<e[now].size();i++) {\n            int v=e[now][i];\n            if(c[v].r>c[now].r||(c[v].r==c[now].r&&c[v].len>c[now].len))c[v]=c[now];\n            node t;\n            t.r=c[v].r;\n            t.len=c[v].len;\n            t.name=v;\n            q.push(t);\n        }\n    }\n}\nint main() {\n\tcin>>m;\n\tfor(int i=1;i<=m;i++) {\n\t\tcin>>a;\n\t\tint sum=0;\n\t\tfor(int j=0;j<a.size();j++) {\n\t\t\tif(a[j]>='A'&&a[j]<='Z')a[j]+='a'-'A';\n\t\t\tif(a[j]=='r')sum++;\n\t\t}\n\t\tif(!mp[a])mp[a]=++cnt,c[cnt].r=sum,c[cnt].len=a.size();\n\t\tname[i]=mp[a];\n\t}\t\n\tcin>>n;\n\tfor(int i=1;i<=n;i++) {\n\t\tcin>>b1>>b2;\n\t\tint sum=0;\n\t\tfor(int j=0;j<b1.size();j++) {\n\t\t\tif(b1[j]>='A'&&b1[j]<='Z')b1[j]+='a'-'A';\n\t\t\tif(b1[j]=='r')sum++;\n\t\t}\n\t\tif(!mp[b1])mp[b1]=++cnt,c[cnt].r=sum,c[cnt].len=b1.size();\n\t\tsum=0;\n\t\tfor(int j=0;j<b2.size();j++) {\n\t\t\tif(b2[j]>='A'&&b2[j]<='Z')b2[j]+='a'-'A';\n\t\t\tif(b2[j]=='r')sum++;\n\t\t}\n\t\tif(!mp[b2])mp[b2]=++cnt,c[cnt].r=sum,c[cnt].len=b2.size();\n\t\te[mp[b2]].push_back(mp[b1]);\n\t}\n    /*for(int i=1;i<=m;i++) {\n\t\tcout<<c[name[i]].r<<\" \"<<c[name[i]].len<<endl;\n\t}*/\n\tdijkstra();\n\tlong long ans1=0,ans2=0;\n\tfor(int i=1;i<=m;i++) {\n\t\tans1+=c[name[i]].r;\n\t\tans2+=c[name[i]].len;\n\t}\n    /*for(int i=1;i<=m;i++) {\n\t\tcout<<c[name[i]].r<<\" \"<<c[name[i]].len<<endl;\n\t}*/\n\tcout<<ans1<<\" \"<<ans2<<endl;\n}\n```\n",
        "postTime": 1626098658,
        "uid": 57779,
        "name": "LRL65",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF467D \u3010Fedor and Essay\u3011"
    },
    {
        "content": "### \u601d\u8def\n\n\u8fd9\u9053\u9898\u5f88\u6c34\uff0c\u5e38\u89c1\u7684\u5957\u56fe\u9898\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u628a\u6240\u6709\u5b57\u7b26\u4e32\u90fd\u53d8\u6210\u70b9\uff0c\u53ef\u4ee5\u91c7\u7528\u6620\u5c04\u6216\u8005\u5b57\u5178\u6811\uff0c\u540e\u8005\u53ef\u4ee5\u505a\u5230\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u8f93\u5165\u89c4\u6a21\u4e00\u6837\u3002\n\n\u63a5\u7740\uff0c\u6211\u4eec\u91c7\u7528\u5f3a\u8fde\u901a\u7f29\u70b9\uff0c\u5e76\u8bbe $f_u$ \u4e3a $u$ \u70b9\u53ef\u4ee5\u53d8\u6210\u7684\u5b57\u7b26\u4e32\u7684\u6700\u5c0f R \u6570\u91cf\uff0c\u800c $g_u$ \u5219\u8868\u793a $u$ \u70b9\u5728 $f_u$ \u6700\u5c0f\u65f6\u6700\u5c0f\u7684\u5355\u8bcd\u957f\u5ea6\u3002\u7684\u7531\u4e8e\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u70b9\u4e4b\u95f4\u4e24\u4e24\u53ef\u8fbe\uff0c\u6240\u4ee5\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u53d8\u6210\u70b9\u540e\u7684\u6700\u5c0f R \u6570\u91cf\u5c31\u662f\u6b64\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u6bcf\u4e2a\u70b9 R \u6570\u91cf\u7684\u6700\u5c0f\u503c\u3002\n\n\u6700\u540e\uff0c\u6211\u4eec\u5efa\u53cd\u56fe\u8dd1\u6709\u5411\u65e0\u73af\u56fe\u4e0a\u52a8\u6001\u89c4\u5212\u5373\u53ef\uff0c\u4e2d\u95f4\u8f6c\u79fb\u53d6\u4ed6\u81ea\u5df1\u7684 R \u6570\u91cf\u548c\u6240\u6709\u80fd\u5230\u8fbe\u4ed6\u7684\u70b9\u4e2d\u7684\u52a8\u6001\u89c4\u5212\u6570\u7ec4\u6700\u5c0f\u503c\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define L(i, a, b) for(int i = a; i <= b; i++)\n#define R(i, a, b) for(int i = a; i >= b; i--)\nusing namespace std;\nconst int N = 3e5 + 10; int m, n, totp, tot, top, col, a[N]; ll ans1, ans2;\nint stk[N], in[N], vl[N], cl[N], dfn[N], low[N], vis[N], f[N], g[N], ln[N];\nqueue<int> q; vector<int> eg[N], e[N]; unordered_map<string, int> mp;\nvoid Upd(int x, int fy, int gy){\n\tif(fy < f[x]) f[x] = fy, g[x] = gy;\n\telse if(f[x] == fy) g[x] = min(g[x], gy);\n}\nint get(string s){\n\tL(i, 0, s.size() - 1) s[i] += (s[i] <= 'Z'? 32 : 0);\n\tif(mp[s]) return mp[s]; mp[s] = ++totp;\n\tL(i, 0, s.size() - 1) vl[totp] += (s[i] == 'r');\n\tln[totp] = s.size(); return totp;\n}\nvoid Tarjan(int u){\n\tdfn[u] = low[u] = ++tot, vis[stk[++top] = u] = 1; \n\tfor(int v: eg[u]){\n\t\tif(!dfn[v])\n\t\t\tTarjan(v), low[u] = min(low[u], low[v]);\n\t\telse if(vis[v]) low[u] = min(low[u], dfn[v]);\n\t}\n\tif(dfn[u] == low[u]){\n\t\tcol++;\n\t\twhile(stk[top] != u)\n\t\t\tvis[stk[top]] = 0, cl[stk[top--]] = col;\n\t\tvis[u] = 0, cl[stk[top--]] = col;\n\t}\n}\nint main(){\n\tstring s, c; scanf(\"%d\", &m);\n\tL(i, 1, m) cin >> s, a[i] = get(s);\n\tscanf(\"%d\", &n);\n\tL(i, 1, n) cin >> s >> c, eg[get(s)].push_back(get(c));\n\tL(i, 1, totp) if(!dfn[i]) Tarjan(i); L(i, 1, tot) f[i] = g[i] = 1e9;\n\tL(u, 1, totp){\n\t\tUpd(cl[u], vl[u], ln[u]);\n\t\tfor(int v: eg[u]) if(cl[u] ^ cl[v])\n\t\t\te[cl[v]].push_back(cl[u]), in[cl[u]]++;\n\t}\n\tL(i, 1, tot) if(!in[i]) q.push(i);\n\twhile(!q.empty()){\n\t\tint u = q.front(); q.pop();\n\t\tfor(int v: e[u]){\n\t\t\tin[v]--, Upd(v, f[u], g[u]);\n\t\t\tif(!in[v]) q.push(v);\n\t\t}\n\t}\n\tL(i, 1, m) ans1 += f[cl[a[i]]], ans2 += g[cl[a[i]]];\n\tprintf(\"%lld %lld\\n\", ans1, ans2);\n\treturn 0;\n}\n```\n",
        "postTime": 1675948136,
        "uid": 341946,
        "name": "zac2010",
        "ccfLevel": 7,
        "title": "CF467D \u9898\u89e3"
    },
    {
        "content": "\u5b57\u7b26\u4e32\u592a\u83dc\u4e86\u3002\n\n# \u9898\u76ee\u94fe\u63a5\n\n[(Luogu) CF467D Fedor and Essay](https://www.luogu.org/problem/CF467D)\n\n# \u9898\u610f\u7b80\u8ff0\n\n\u7ed9\u4f60\u4e00\u7bc7\u6587\u7ae0\u548cn\u5bf9\u5355\u8bcd\uff0c\u53ef\u4ee5\u5c06\u6587\u4e2d\u7684\u5355\u8bcd\u6309\u5bf9\u5e94\u5bf9\u6362\u3002\n\n\u6c42\u5bf9\u6362\u540e\u6587\u7ae0\u542b\u5b57\u6bcd'r'\u7684\u6700\u5c0f\u6570\u91cf\uff0c\u4ee5\u53ca\u6b64\u65f6\u6587\u7ae0\u4e2d\u6240\u6709\u5355\u8bcd\u957f\u5ea6\u4e4b\u548c\u7684\u6700\u5c0f\u503c\u3002\n\n<!--more-->\n\n# \u89e3\u9898\u601d\u60f3\n\n\u5355\u8bcd\u53ef\u4ee5\u770b\u6210\u70b9\uff0c\u7136\u540e\u6bcf\u4e2a\u5355\u8bcd\u542b'r'\u7684\u6570\u91cf\u53ef\u4ee5\u7406\u89e3\u4e3a\u5176\u70b9\u6743\u3002\n\n\u6211\u4eec\u6309\u5bf9\u5e94\u5173\u7cfb\u5efa\u56fe\u540e\uff0c\u5bf9\u8be5\u56fe\u7f29\u70b9\uff0c\u7136\u540e\u6bcf\u4e2a\u8282\u70b9\u8dd1\u4e00\u904d\u6811\u5f62DP\uff0c\u7edf\u8ba1\u4e00\u4e0b\u81ea\u5e95\u5411\u4e0a\u7edf\u8ba1\u6700\u5c0f\u503c\u3002\n\n\u61d2\u5f97\u5199\u54c8\u5e0c\u4e86\uff0c\u6240\u4ee5\u7528\u4e86map\u3002\u6ca1\u60f3\u5230\u5df2\u7ecf\u662f\u6700\u4f18\u89e3\u4e86\u3002\n\n\u7528\u54c8\u5e0c\u7406\u8bba\u4e0a\u4f1a\u8dd1\u66f4\u5feb\uff0c~~\u4f46\u662f\u51fa\u9898\u4eba\u53ef\u80fd\u95f2\u5f97\u65e0\u804a\u6784\u9020\u4e86\u54c8\u5e0c\u51b2\u7a81~~\n\n\u5bf9\u4e8e\u6587\u7ae0\u957f\u5ea6\u6700\u5c0f\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u5728DP\u65f6\u5224\u4e00\u4e0b\u4e24\u4e2aDP\u503c\u76f8\u7b49\u7684\u60c5\u51b5\uff0c\u7136\u540e\u53d6$\\min$\u5c31\u884c\u4e86\u3002\n\n\u8bbe$minn1[i]$\u4e3a\u5bf9\u5e94\u56fe\u4e0a\u5230\u5355\u8bcd$i$\u4e3a\u6b62\u6240\u6709\u5355\u8bcd'r'\u7684\u6700\u5c0f\u503c\uff0c$minn2[i]$\u4e3a\u5bf9\u5e94\u56fe\u4e0a\u5230\u5355\u8bcd$i$\u4f4d\u7f6e\u7b26\u5408\u9898\u76ee\u6761\u4ef6\u7684\u6587\u7ae0\u957f\u5ea6\u7684\u6700\u5c0f\u503c\u3002\n\n\u90a3\u4e48\u4e24\u4e2a\u7b54\u6848\u5206\u522b\u4e3a\uff1a$ans_1 = \\sum\\limits_{1\\le i\\le n} minn1[scc[i]], ans_2 = \\sum\\limits_{1\\le i\\le n}minn2[scc[i]]$\n\n\u8981\u5f00**long long**\n\n# \u53c2\u8003\u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <cctype>\n#include <cstring>\n#include <string>\n#include <map>\n\nstd::map <std::string, int> mp;\n\nnamespace FastIO {\n\tinline int read() {\n\t\tchar ch = getchar(); int r = 0, w = 1;\n\t\twhile(!isdigit(ch)) {if(ch == '-') w = -1; ch = getchar();}\n\t\twhile(isdigit(ch)) {r = r * 10 + ch - '0', ch = getchar();}\n\t\treturn r * w;\n\t}\n\tvoid _write(long long x) {\n\t\tif(x < 0) putchar('-'), x = -x;\n\t\tif(x > 9) _write(x / 10);\n\t\tputchar(x % 10 + '0');\n\t}\n\tinline void write(long long x) {\n\t\t_write(x);\n\t\tputchar(' ');\n\t}\n}\n\nusing namespace FastIO;\n\nconst int N = 3e5 + 6;\nconst int M = N << 2;\n\ntemplate <typename T> inline T min(T a, T b) {return a < b ? a : b;}\ntemplate <typename T> inline T max(T a, T b) {return a > b ? a : b;}\n\nchar ch[M];\nlong long ans1, ans2;\nint n, m, sz;\nint ver[N], nxt[M], head[M], cnt, Cnt;\nint Ver[N], Nxt[M], Head[M];\nint scc[N], dfn[N], low[N], idx, tot;\nint sta[N], stop;\nint id[N], num[N], len[N];\nint minn1[N], minn2[N];\nbool v[N], vis[N];\n\ninline void add(int x, int y) {\n\tver[++cnt] = y, nxt[cnt] = head[x], head[x] = cnt;\n}\n\ninline void Add(int x, int y) {\n\tVer[++cnt] = y, Nxt[cnt] = Head[x], Head[x] = cnt;\n}\n\nvoid tarjan(int x) {\n\tdfn[x] = low[x] = ++idx;\n\tv[x] = 1;\n\tsta[++stop] = x;\n\tfor(register int i = head[x]; i; i = nxt[i]) {\n\t\tint y = ver[i];\n\t\tif(!dfn[y]) {\n\t\t\ttarjan(y);\n\t\t\tlow[x] = min(low[x], low[y]);\n\t\t}\n\t\telse if(v[y]) {\n\t\t\tlow[x] = min(low[x], dfn[y]);\n\t\t}\n\t}\n\tint now = 0;\n\tif(low[x] == dfn[x]) {\n\t\ttot++;\n\t\twhile(now != x) {\n\t\t\tnow = sta[stop--];\n\t\t\tv[now] = 0;\n\t\t\tscc[now] = tot;\n\t\t\tif(num[now] < minn1[tot] || (num[now] == minn1[tot] && len[now] < minn2[tot])) {\n\t\t\t\tminn1[tot] = num[now], minn2[tot] = len[now];\n\t\t\t}\n\t\t}\n\t}\n}\n\ninline void rebuild() {\n\tcnt = 0;\n\tfor(register int x = 1; x <= sz; x++) {\n\t\tfor(register int i = head[x]; i; i = nxt[i]) {\n\t\t\tint y = ver[i];\n\t\t\tif(scc[x] != scc[y]) Add(scc[x], scc[y]);\n\t\t}\n\t}\n}\n\nvoid dp(int x) {\n\tif(vis[x]) return;\n\tvis[x] = 1;\n\tfor(register int i = Head[x]; i; i = Nxt[i]) {\n\t\tint y = Ver[i];\n\t\tdp(y);\n\t\tif(minn1[y] < minn1[x]) {\n\t\t\tminn1[x] = minn1[y];\n\t\t\tminn2[x] = minn2[y];\n\t\t}\n\t\telse if(minn1[y] == minn1[x]) {\n\t\t\tminn2[x] = min(minn2[x], minn2[y]);\n\t\t}\n\t}\n}\n\nint main() {\n\tn = read();\n\tfor(register int i = 1; i <= n; i++) {\n\t\tscanf(\"%s\", ch);\n\t\tint l = strlen(ch), k = 0;\n\t\tfor(register int j = 0; j < l; j++) {\n\t\t\tif(ch[j] >= 'A' && ch[j] <= 'Z') ch[j] = ch[j] - 'A' + 'a';\n\t\t\tif(ch[j] == 'r') k++;\n\t\t}\n\t\tint t = mp[ch]; if(!t) t = mp[ch] = ++sz; len[t] = l; num[t] = k;\n\t\tid[i] = t;\n\t}\n\tm = read();\n\tfor(register int i = 1; i <= m; i++) {\n\t\tscanf(\"%s\", ch);\n\t\tint l = strlen(ch), k = 0;\n\t\tfor(register int j = 0; j < l; j++) {\n\t\t\tif(ch[j] >= 'A' && ch[j] <= 'Z') ch[j] = ch[j] - 'A' + 'a';\n\t\t\tif(ch[j] == 'r') k++;\n\t\t}\n\t\tint x = mp[ch]; if(!x) x = mp[ch] = ++sz; len[x] = l; num[x] = k;\n\t\tscanf(\"%s\", ch);\n\t\tl = strlen(ch), k = 0;\n\t\tfor(register int j = 0; j < l; j++) {\n\t\t\tif(ch[j] >= 'A' && ch[j] <= 'Z') ch[j] = ch[j] - 'A' + 'a';\n\t\t\tif(ch[j] == 'r') k++;\n\t\t}\n\t\tint y = mp[ch]; if(!y) y = mp[ch] = ++sz; len[y] = l; num[y] = k;\n\t\tadd(x, y);\n\t}\n\tmemset(minn1, 0x3f, sizeof(minn1));\n\tmemset(minn2, 0x3f, sizeof(minn2));\n\tfor(register int i = 1; i <= sz; i++) if(!dfn[i]) tarjan(i);\n\trebuild();\n\tfor(register int i = 1; i <= tot; i++) dp(i);\n\tfor(register int i = 1; i <= n; i++) {\n\t\tans1 += minn1[scc[id[i]]];\n\t\tans2 += minn2[scc[id[i]]];\n\t}\n\twrite(ans1);\n\twrite(ans2);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1564715988,
        "uid": 104841,
        "name": "Minakami_Yuki",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF467D Fedor and Essay"
    }
]