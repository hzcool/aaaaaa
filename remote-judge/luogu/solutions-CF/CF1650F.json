[
    {
        "content": "- \u9898\u76ee\u5206\u6790\uff1a\n\n\t \u6709 $n$ \u4e2a\u4efb\u52a1\uff0c\u6bcf\u4e2a\u4efb\u52a1\u6709\u4e00\u4e9b\u65b9\u6848\uff0c\u6bcf\u4e2a\u65b9\u6848\u53ef\u4ee5\u5b8c\u6210\u8fd9\u4e2a\u4efb\u52a1\u7684\u767e\u5206\u4e4b\u51e0\uff0c\u5f53\u7d2f\u8ba1\u8d85\u8fc7 $100$ \u65f6\uff0c\u4efb\u52a1\u5b8c\u6210\uff0c\u8bb0\u5f55\u6700\u5c0f\u65f6\u95f4\uff0c\u5982\u679c\u8d85\u51fa\u65f6\u95f4\u9650\u5236\uff0c\u8f93\u51fa -1\u3002\n     \n- \u601d\u8def\uff1a**\u80cc\u5305**\n\n\u4f46\u6211\u4eec\u5f97\u8003\u8651\u5230\u5e95\u4ec0\u4e48\u4e8b\u5bb9\u91cf\uff0c\u5206\u4e3a\u4e24\u79cd\uff1a\n   \n   1. \u4ee5\u65f6\u95f4\u4e3a\u5bb9\u91cf\uff0c\u767e\u5206\u6bd4\u4e3a\u4ef7\u503c\uff0c\u597d\u4f3c\u4e0d\u53ef\u884c\uff0c\u56e0\u4e3a\u9996\u5148\u65f6\u95f4\u5927\u5c0f\u8303\u56f4\u8fbe\u5230\u4e86 $10^9$\uff0c\u80af\u5b9a\u8d85\u7a7a\u95f4\uff0c\u518d\u8005\uff0c\u4ef7\u503c\u53ea\u9700\u8981\u5728 $100$ \u5230 $200$ \u4e4b\u95f4\uff0c\u8fc7\u5927\u6ca1\u4ec0\u4e48\u610f\u4e49\uff0c\u6240\u4ee5\u4e0d\u4ee5\u65f6\u95f4\u4e3a\u5bb9\u91cf\u3002\n   \n   2. \u767e\u5206\u6bd4\u4e3a\u5bb9\u91cf\uff0c\u65f6\u95f4\u4e3a\u4ef7\u503c\uff0c\u90a3\u4e48\u5bb9\u91cf\u4e3a\u591a\u5927\u5462\uff1f\u7ecf\u8fc7\u8ba1\u7b97\u4e3a $0$ \u5230 $199$\u3002\n   \n\u8bc1\u660e\uff1a\n    \n   \u5f53\u524d\u767e\u5206\u6bd4\u4e4b\u548c\u5c0f\u4e8e $100$\uff0c\u73b0\u5728\u6dfb\u52a0\u8fdb\u6765\u4e00\u4e2a $a_i$\uff0c\u548c\u8d85\u8fc7\u4e86 $100$\uff0c\u4f46\u7edd\u4e0d\u4f1a\u8d85\u8fc7 $200$\uff0c\u56e0\u4e3a $a_i\\le100$\uff0c\u6240\u4ee5\u80af\u5b9a\u5c0f\u4e8e $200$\uff0c\u6b64\u523b\u5c31\u4e0d\u9700\u8981\u518d\u52a0\u4e86\uff0c\u5426\u5219\u4e00\u5b9a\u4e0d\u662f\u66f4\u4f18\uff0c\u8bc1\u6bd5\uff01\n    \n   \u63a5\u4e0a\u6587\u90a3\u5c31\u662f\u4e00\u4e2a\u4e8c\u7ef4\u80cc\u5305\uff0c\u8bb0\u5f55\u65b9\u6848\uff0c\u6700\u77ed\u65f6\u95f4\u5373\u4e3a\uff1a\n   $$dp_{i,j}=\\min(dp_{i+1,j-p}+a_i,dp_{i,j})$$\n   \n   \n   \n\n\n\n\n\u6240\u4ee5\u8d34\u4ee3\u7801\u5566\uff1a\n ```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define re register\nconst int inf = 0x3f3f3f3f3f3f;\nconst int N = 1e5+5;\nstruct node {\n\tint id,ti,val,p;\n} e[N];\nint _,Case,n,m,w,t[N],dp[N][205],ans,cnt;\nbool cmp(node a,node b) {\n\treturn a.id<b.id;\n}\nvector<int> bag;\nvoid solve() {\n\tcnt=0;\n\tbag.clear();\n\tcin>>n>>m;\n\tfor(int i=1; i<=n; i++) {\n\t\tcin>>t[i];\n\t}\n\tfor(int i=1; i<=m; i++) {\n\t\te[i].p=i;\n\t\tcin>>e[i].id>>e[i].ti>>e[i].val;\n\t}\n\tsort(e+1,e+m+1,cmp);\n\tint lft=1,rgt;\n\tfor(int i=0; i<m+2; i++) {\n\t\tfor(int j=0; j<205; j++) {\n\t\t\tdp[i][j]=inf;\n\t\t}\n\t}\n\tfor(int i=1; i<=m+1; i++) {\n\t\tdp[i][0]=0;\n\t}\n\tfor(int i=1; i<=n; i++) {\n\t\tfor(int j=lft; j<=m; j++) {\n\t\t\tif(e[lft].id!=e[j].id)break;\n\t\t\telse rgt=j;\n\t\t}\n\t\tfor(int j=rgt; j>=lft; j--) {\n\t\t\tfor(int k=200; k; k--) {\n\t\t\t\tdp[j][k]=dp[j+1][k];\n\t\t\t\tif(k>=e[j].val)dp[j][k]=min(dp[j+1][k-e[j].val]+e[j].ti,dp[j][k]);\n\t\t\t}\n\t\t}\n\t\tans=inf;\n\t\tfor(int i=1;i<=6;i++)\n\t\tfor(int j=100; j<=200; j++) {\n\t\t\tif(ans>dp[lft][j]) {\n\t\t\t\tw=j;\n\t\t\t\tans=dp[lft][j];\n\t\t\t}\n\t\t}\n\t\tcnt+=ans;\n\t\tif(cnt>t[i]) {\n\t\t\tcout<<\"-1\"<<endl;\n\t\t\treturn ;\n\t\t}\n\t\tfor(int j=lft; j<=rgt; j++) {\n\t\t\tif(w>=e[j].val&&dp[j][w]==dp[j+1][w-e[j].val]+e[j].ti) {\n\t\t\t\tw-=e[j].val;\n\t\t\t\tbag.push_back(e[j].p);\n\t\t\t}\n\t\t}\n\t\tlft=rgt+1;\n\t}\n\tcout<<bag.size()<<endl;\n\tfor(int i=0; i<bag.size(); i++) {\n\t\tcout<<bag[i]<<\" \";\n\t}\n\tcout<<endl;\n}\nsigned main() {\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\tcin>>Case;\n\tfor(_=1; _<=Case; _++)solve();\n\treturn 0;\n}\n```\n\n\nnoip rp++\n",
        "postTime": 1668675917,
        "uid": 302821,
        "name": "\u843d\u6d77\u6c89",
        "ccfLevel": 0,
        "title": "Vitaly and Advanced Useless Algorithms"
    },
    {
        "content": "\u6709\u4e00\u4e2a\u663e\u7136\u7684\u8d2a\u5fc3\u7ed3\u8bba\uff0c\u5c31\u662f\u5148\u5b8c\u6210\u4efb\u52a1\u622a\u6b62\u65f6\u95f4\u8003\u524d\u7684\uff0c\u82e5\u5728\u524d\u9762\u7684\u90fd\u65e0\u6cd5\u5b8c\u6210\uff0c\u90a3\u4e48\u540e\u9762\u7684\u66f4\u52a0\u4e0d\u53ef\u80fd\u5b8c\u6210\u3002\u9898\u76ee\u5341\u5206\u826f\u5fc3\uff0c$a_i$ \u5df2\u7ecf\u5728\u8f93\u5165\u65f6\u5347\u5e8f\u7ed9\u51fa\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u4efb\u52a1\uff0c\u9700\u8981\u7528\u5c3d\u53ef\u80fd\u5c11\u5730\u8017\u65f6\u5b8c\u6210\u5c3d\u53ef\u80fd\u591a\u7684\u767e\u5206\u6bd4\uff0c\u6bcf\u4e2a\u8ba1\u5212\u7684\u72b6\u6001\u5747\u4e3a\u9009\u6216\u4e0d\u9009\uff0c\u8fd9\u4e0d\u5c31\u662f $0-1$ \u80cc\u5305\u561b\u3002\u7531\u4e8e\u8981\u8f93\u51fa\u65b9\u6848\uff0c\u6240\u4ee5\u6211\u4eec\u8bbe\u4e8c\u7ef4\u72b6\u6001\uff0c\u5bf9\u4e8e\u67d0\u4e2a\u4efb\u52a1\uff0c\u8bbe $dp_{i,j}$ \u8868\u793a\u8be5\u4efb\u52a1\u7684\u524d $i$ \u4e2a\u8ba1\u5212\u5b8c\u6210\u7684\u767e\u5206\u7387\u4e3a $j$ \u65f6\u7684\u6700\u5c0f\u8017\u65f6\uff0c\u8fd9\u91cc\u9ed8\u8ba4 $j > 100$ \u65f6\u4e5f\u8868\u793a\u6210 $j = 100$ \u7684\u72b6\u6001\u3002\u6240\u4ee5\u53ef\u4ee5\u5199\u6210\u65b9\u7a0b $dp_{i,j}(j \\le [1,100]) = \\min (dp_{i - 1,j},\\min \\{dp_{i - 1,j - p} + t\\})$\uff0c\u5176\u4e2d\u6709\u4e00\u4e2a\u662f\u7ee7\u627f\u4e0a\u4e00\u6b21\u7684\u72b6\u6001\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u4efb\u52a1\u7684\u65b9\u6848\u8bb0\u5f55\uff0c\u76f4\u63a5\u4ece $dp_{i,100}$ \u8fdb\u884c\u8fd8\u539f\uff0c\u82e5 $dp_{i,j} \u2260 dp_{i - 1,j}$ \u5219\u8bf4\u660e\u53d1\u751f\u6709\u6548\u8f6c\u79fb\uff0c\u8bb0\u5f55\u6b64\u65f6\u7684\u8ba1\u5212\u7f16\u53f7\u5373\u53ef\u3002\u7528\u4e00\u4e2a `vector` \u53bb\u8bb0\u5f55\u4f1a\u6bd4\u8f83\u904d\u5386\uff0c\u6bcf\u4e00\u6b21 $dp$ \u540e\u5c06\u6bcf\u4e2a\u4eba\u7269\u7684\u65b9\u6848\u6c47\u603b\u81f3\u603b\u7684\u65b9\u6848\u6570\u7ec4\u5373\u53ef\u3002\n\n\u601d\u8def\u4e0d\u7b97\u590d\u6742\uff0c\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f $dp$\uff0c\u65b9\u6848\u8bb0\u5f55\u6570\u7ec4\u7684\u521d\u59cb\u5316\u4ee5\u53ca\u65e0\u89e3\u7684\u5224\u65ad\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <vector>\n#define init(x) memset (x,INF,sizeof (x))\n#define ll long long\n#define ull unsigned long long\n#define INF 0x3f3f3f3f\nusing namespace std;\nconst int MAX = 1e5 + 5;\nconst int MOD = 1e9 + 7;\ninline int read ();\nstruct node\n{\n\tint id,t,p;\n};\nint t,n,m,ok,sum,a[MAX],dp[MAX][105];\nvector <int> ans,v;\nvector <node> e[MAX];\nint solve (int x);\nint main ()\n{\n\t//freopen (\".in\",\"r\",stdin);\n\t//freopen (\".out\",\"w\",stdout);\n\tt = read ();\n\twhile (t--)\n\t{\n\t\tn = read ();m = read ();ok = 1;sum = 0;ans.clear ();\n\t\tfor (int i = 1;i <= n;++i) a[i] = read ();\n\t\tfor (int i = 1;i <= m;++i) \n\t\t{\n\t\t\tint x = read (),ti = read (),pi = read ();\n\t\t\te[x].push_back ({i,ti,pi});\n\t\t}\n\t\tfor (int i = 1;i <= n;++i)\n\t\t{\n\t\t\tint x = solve (i);\n\t\t\tif (x == -1 || sum + x > a[i]){ok = 0;break;}//\u65f6\u95f4\u4e0d\u591f\n\t\t\tsum += x;\n\t\t\tfor (auto j : v) ans.push_back (j);//\u7b54\u6848\u7684\u6c47\u603b\n\t\t}\n\t\tif (!ok) puts (\"-1\");\n\t\telse\n\t\t{\n\t\t\tprintf (\"%d\\n\",ans.size ());\n\t\t\tfor (auto i : ans) printf (\"%d \",i);\n\t\t\tputs (\"\");\n\t\t}\n\t\tfor (int i = 1;i <= n;++i) e[i].clear ();\n\t}\n\treturn 0;\n}\ninline int read ()\n{\n    int s = 0;int f = 1;\n    char ch = getchar ();\n    while ((ch < '0' || ch > '9') && ch != EOF)\n\t{\n        if (ch == '-') f = -1;\n        ch = getchar ();\n    }\n    while (ch >= '0' && ch <= '9')\n\t{\n        s = s * 10 + ch - '0';\n        ch = getchar ();\n    }\n    return s * f;\n}\nint solve (int x)\n{\n\tint k = e[x].size ();\n\tfor (int i = 0;i <= k;++i)\n\t\tfor (int j = 0;j <= 100;++j) dp[i][j] = INF;\n\tv.clear ();\n\tdp[0][0] = 0;//\u521d\u59cb\u5316\n\tfor (int i = 1;i <= k;++i)\n\t{\n\t\tnode nw = e[x][i - 1];//\u6ce8\u610f vector \u7684\u4e0b\u6807\u5b58\u50a8\n\t\tfor (int j = 100;~j;--j)\n\t\t\tdp[i][j] = min (dp[i][j],dp[i - 1][max (0,j - nw.p)] + nw.t),dp[i][j] = min (dp[i - 1][j],dp[i][j]);\n\t}\n\tif (dp[k][100] == INF) return -1;//\u65e0\u6cd5\u5b8c\u6210\u4efb\u52a1\n\tint p = k,cnt = 100;\n\twhile (p && cnt > 0)\n\t{\n\t\tif (dp[p][cnt] == dp[p - 1][cnt]) {--p;continue;}//\u8bf4\u660e\u5e76\u6ca1\u6709\u53d1\u751f\u6709\u6548\u8f6c\u79fb\n\t\tv.push_back (e[x][p - 1].id);//\u8bb0\u5f55\u7f16\u53f7\n\t\tcnt -= e[x][p - 1].p;\n\t\t--p;\n\t}\n\treturn dp[k][100];//\u6700\u5c0f\u65f6\u95f4\n}\n```",
        "postTime": 1668664279,
        "uid": 183603,
        "name": "SUNCHAOYI",
        "ccfLevel": 6,
        "title": "\u3010\u9898\u89e3\u3011Vitaly and Advanced Useless Algorithms"
    },
    {
        "content": "### Analysis\n\n\u9075\u5faa\u300c\u54ea\u95e8\u4f5c\u4e1a\u5148\u4ea4\u5c31\u5148\u5199\u54ea\u95e8\u300d\u7684\u539f\u5219\uff0c\u6211\u4eec\u5148\u5c06 Opt \u6309 $e$ \u5206\u7c7b\u3002\n\n\u7531\u4e8e\u8981\u5230\u8fbe\u7684\u6ee1\u989d\u53ea\u6709 $100$\uff0c\u6211\u4eec\u5728\u6bcf\u79cd $e$ \u4e2d\u8dd1 01 \u80cc\u5305\u5373\u53ef\uff0c\u8ba9\u6bcf\u95e8\u8bfe\u5199\u4f5c\u4e1a\u7684\u603b\u65f6\u95f4\u5c3d\u91cf\u5c11\u3002\n\n\u6ce8\u610f\u5224\u65ad\u65e0\u6cd5\u6309\u65f6\u4ea4\u4f5c\u4e1a\u7684\u60c5\u51b5\u548c\u8bb0\u5f55\u80cc\u5305\u7684\u8f6c\u79fb\u3002\n\n\u65f6\u95f4 $O(100(n+m))$\u3002\n\n### Code\n\n[Link](https://codeforces.com/contest/1650/submission/149199429)",
        "postTime": 1647178450,
        "uid": 101868,
        "name": "I_am_Accepted",
        "ccfLevel": 0,
        "title": "CF1650F Vitaly and Advanced Useless Algorithms"
    },
    {
        "content": "\u5410\u69fd\uff1aIs this a fake CF `*2200`\uff1f\n\n## \u601d\u8def\n\n\u9996\u5148\uff0c\u8d2a\u5fc3\u7684\u60f3\uff0c\u6700\u4f18\u7b56\u7565\u4e00\u5b9a\u662f\u6309\u7167 $a$ \u5347\u5e8f\u7684\u987a\u5e8f\u8fdb\u884c\u64cd\u4f5c\u3002\u539f\u56e0\u663e\u7136\uff0c\u56e0\u4e3a\u5982\u679c\u6309\u7167\u975e\u5347\u5e8f\u80fd\u591f\u5b8c\u6210\uff0c\u5347\u5e8f\u4e5f\u4e00\u5b9a\u80fd\u591f\u5b8c\u6210\u3002\n\n\u7136\u540e\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $m$\uff0c\u6309\u7167 $e_i$ \u8fdb\u884c\u5f52\u7c7b\uff0c\u5b58\u5728 vector \u91cc\u9762\u3002\u518d\u6b21\u8d2a\u5fc3\u7684\u60f3\uff0c\u6211\u4eec\u80af\u5b9a\u8ba9\u6bcf\u4e00\u4e2a $i$ \u90fd\u5c3d\u53ef\u80fd\u77ed\u65f6\u95f4\u7684\u5b8c\u6210\u4efb\u52a1\uff0c\u7ed9\u540e\u9762\u7684\u817e\u51fa\u65f6\u95f4\u3002\u56e0\u6b64\u6211\u4eec\u73b0\u5728\u53d8\u6210\u4e86\uff1a\n\n\u201c\u7ed9\u5b9a $k$ \u79cd\u9009\u62e9\uff0c\u7b2c $i$ \u79cd\u9009\u62e9\u6d88\u8017\u5355\u4f4d\u4e3a $t$ \u7684\u65f6\u95f4\uff0c\u6709 $p$ \u7684\u4ef7\u503c\uff0c\u95ee\u586b\u6ee1 $100$ \u7684\u4ef7\u503c\u6700\u5c11\u9700\u8981\u591a\u5c11\u65f6\u95f4\u3002\u201d\n\n\u663e\u7136\uff0c\u8fd9\u662f 01 \u80cc\u5305\u95ee\u9898\uff0c\u8dd1\u4e00\u6b21\u7684\u590d\u6742\u5ea6\u662f $O(k \\cdot 100)$\u3002\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $i$ \u90fd\u8dd1\u4e00\u6b21\uff0c\u590d\u6742\u5ea6\u5c31\u662f $O(\\sum k \\cdot 100)$\u3002\u53c8\u56e0\u4e3a $\\sum k=m$ \u6240\u4ee5\u590d\u6742\u5ea6\u5b9e\u9645\u4e0a\u5c31\u662f $O(100m)$\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\n\n\u7136\u540e\u6211\u4eec\u6c42\u51fa\u6240\u6709\u7684 $i$ \u8017\u8d39\u7684\u6700\u5c0f\u65f6\u95f4 $dp_i$ \u4e4b\u540e\uff0c\u76f4\u63a5\u4ece\u524d\u5f80\u540e\u626b\u4e00\u904d\uff0c\u5224\u65ad\u662f\u5426\u5b58\u5728\u4e00\u4e2a $i$ \u4f7f\u5f97 $\\sum_{j=1}^{i}dp_j>a_i$\u3002\u5982\u679c\u5b58\u5728\u90a3\u4e48\u5c31\u8f93\u51fa `-1`\uff1b\u5426\u5219\u8bb0\u5f55\u4e00\u4e0b\uff0c\u7136\u540e\u8f93\u51fa\u5373\u53ef\u3002\n\n## \u4ee3\u7801\n\n\u6211\u7684\u5b9e\u73b0\u6bd4\u8f83\u79bb\u8c31\uff0c\u5404\u4f4d\u53ef\u4ee5\u81ea\u5df1\u5199\u4e00\u4e0b\u66f4\u7b80\u6d01\u7684\u6765\u540a\u6253\u6211\u634f~\n\n\u53e6\u5916\uff0c\u6211\u53d1\u73b0\u6211\u8fd9\u79cd\u5199\u6cd5\u8bb0\u5f55\u8def\u5f84\u4f1a MLE\uff0c\u6240\u4ee5\u6211\u5bf9\u4e0b\u6807\u8fdb\u884c\u4e86\u54c8\u5e0c\uff0c\u7136\u540e\u628a\u8fd9\u9053\u9898\u7528\u5947\u5947\u602a\u602a\u7684\u65b9\u6cd5\u8349\u8fc7\u53bb\u4e86\uff08\n\n\u7136\u540e\u6211\u53d1\u73b0\u4e86\u5929\u5927\u7684\u79d8\u5bc6\uff1a$n,m \\leq 10^5$\u3002\u4e5f\u5c31\u662f\u8bf4\u6211\u521a\u624d\u90a3\u987f\u795e\u64cd\u4f5c\u6ca1\u5565 P \u7528\uff08\u6253\u8138.jpg\uff09\n\n\u4e0d\u8fc7\u61d2\u5f97\u6539\u4e86\u5c31\u8fd9\u6837\u4e86\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u7a7a\u95f4\u4e5f\u86ee\u5c0f\u7684qwq\n\n\u4ee3\u7801\u53c8\u81ed\u53c8\u957f\u52ff\u55b7\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define pb push_back\n#define mpair make_pair\nusing namespace std;\nconst int MAXN=200005,mod=10001; // \u54c8\u5e0c\u7684\u6a21\u6570\uff08\u6211\u76f8\u4fe1 CF \u6ca1\u4eba\u60f3\u5230\u6211\u8fd9\u79cd\u5947\u602a\u5199\u6cd5\u6240\u4ee5\u80af\u5b9a\u4e0d\u4f1a\u88ab\u5361\uff09\nstruct Node{\n\tint fir,sec,id; // \u5206\u522b\u8868\u793a\u9898\u76ee\u4e2d\u7684 t,p\uff0c\u4ee5\u53ca\u8fd9\u4e2a\u64cd\u4f5c\u7684\u7f16\u53f7\n};\nint a[MAXN],c[MAXN];\nint dp[205],from[10005][205],bian[10005][205]; // from[i][j] \u8bb0\u5f55\u7684\u662f dp[i][j] \u4ece dp[i-1][from[i][j]] \u8f6c\u79fb\u8fc7\u6765\uff0cbian[i][j] \u8868\u793a\u8fd9\u4e2a\u8f6c\u79fb\u7528\u5f97\u8fb9\u7684\u7f16\u53f7\u3002dp[j] \u5c31\u662f dp[i][j] \u538b\u6389\u4e00\u7ef4\u3002\nint cnt=0,ans[MAXN]; // ans \u7528\u6765\u5b58\u50a8\u7f16\u53f7\nvector<Node> p[MAXN];\nstack<int> s; // \u8981\u628a\u987a\u5e8f\u53cd\u8fc7\u6765\uff0c\u61d2\u5f97\u5199\u9012\u5f52\u6240\u4ee5\u7528\u4e86\u6808\n\nvoid DP(int x){\n\tmemset(dp,0x3f,sizeof(dp));\n\tdp[0]=0; c[x]=1000000001; // \u8fd9\u91cc\u4e0d\u8981\u521d\u59cb\u5316\u6210 1000000000\uff0c\u6709\u6bd2\u7624\u6570\u636e\u5361\u3002\n\tfor(int i=0;i<p[x].size();i++){\n\t\tfor(int j=0;j<=200;j++) from[i%mod][j]=j,bian[i%mod][j]=0; // \u4e0b\u6807\u53d6\u6a21\uff08hhh\u6211\u771f\u662f\u4e2a\u3010\u3011\u2026\u2026\uff09\n\t\tfor(int j=200;j>=p[x][i].sec;j--){ //\u8fd9\u91cc\u8981\u4ece 200 \u5f00\u59cb\uff0c\u56e0\u4e3a\u4e00\u4e2a p \u6700\u5927\u662f 100\uff0c\u6240\u4ee5\u4e0d\u53ef\u80fd\u66f4\u65b0\u5230 200 \u4ee5\u4e0a\u7684\u5730\u65b9\n\t\t\tint t=p[x][i].fir;\n\t\t\tint w=p[x][i].sec;\n\t\t\tif(dp[j-w]+t<dp[j]){ // \u8f6c\u79fb\n\t\t\t\tdp[j]=dp[j-w]+t;\n\t\t\t\tfrom[i%mod][j]=j-w;\n\t\t\t\tbian[i%mod][j]=p[x][i].id;\n\t\t\t}\n\t\t}\n\t}\n\tint u=0,now=p[x].size(),ctn=0;\n\tfor(int i=100;i<=200;i++) // \u4ece 100~200 \u5b58\u6700\u5927\u503c\u3002\n\t\tif(dp[i]<c[x]) c[x]=dp[i],u=i; // \u627e\u5230\u6700\u5927\u503c\u7684\u4f4d\u7f6e\n\twhile(now) s.push(u),u=from[(--now)%mod][u]; // \u5411\u524d\u627e\u8def\u5f84\uff0c\u538b\u5230\u6808\u91cc\n\twhile(!s.empty()){\n\t\tif(bian[ctn%mod][s.top()]!=0){\n\t\t\tans[++cnt]=bian[ctn%mod][s.top()]; // \u5f39\u6808\u5c31\u53ef\u4ee5\u53cd\u8fc7\u6765\uff0c\u8fd9\u4e2a\u65f6\u5019\u8bb0\u5f55\u7b54\u6848\n\t\t}s.pop(); ctn++;\n\t}\n}\nint main(){\n\tint T; cin>>T;\n\twhile(T--){\n\t\tint n,m; cin>>n>>m;\n\t\tfor(int i=1;i<=n;i++) cin>>a[i],p[i].clear(); // \u8bb0\u5f97\u6e05\u7a7a\n\t\tfor(int i=1;i<=m;i++){\n\t\t\tint x,y,z; cin>>x>>y>>z;\n\t\t\tp[x].pb((Node){y,z,i});\n\t\t}\n\t\tint sum=0;cnt=0;\n\t\tbool flag=1;\n\t\tfor(int i=1;i<=n;i++) DP(i); // \u5bf9\u4e8e\u6bcf\u4e2a i \u8fdb\u884c dp\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tsum+=c[i]; // \u6c42\u4e00\u4e0b\u524d\u7f00\u548c\n\t\t\tif(sum>a[i]){ // \u770b\u4e00\u4e0b\u662f\u5426\u6709\u89e3\n\t\t\t\tflag=0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flag){\n\t\t\tcout<<cnt<<endl;\n\t\t\tfor(int i=1;i<=cnt;i++) cout<<ans[i]<<\" \";\n\t\t\tcout<<endl;\n\t\t}else cout<<-1<<endl;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1660920093,
        "uid": 195198,
        "name": "E1_de5truct0r",
        "ccfLevel": 7,
        "title": "CF1650F \u9898\u89e3"
    },
    {
        "content": "# CodeForces 1650F\n\u300cVitaly and Advanced Useless Algorithms\u300d\n\nCodeForces\uff1a[Problem - F - Codeforces](https://codeforces.com/contest/1650/problem/F)\n\n\u6d1b\u8c37\uff1a[CF1650F Vitaly and Advanced Useless Algorithms - \u6d1b\u8c37 | \u8ba1\u7b97\u673a\u79d1\u5b66\u6559\u80b2\u65b0\u751f\u6001 (luogu.com.cn)](https://www.luogu.com.cn/problem/CF1650F)\n\n## \u300c\u9898\u610f\u300d\n\n\u6709 $n$ \u4e2a\u4efb\u52a1\uff0c\u6bcf\u4e2a\u4efb\u52a1\u8981\u5728 $a_i$ \u65f6\u523b\u524d\u505a\u5b8c\u3002\uff08$a$ \u5347\u5e8f\uff09\n\n\u6709 $m$ \u4e2a\u8ba1\u5212\uff0c\u6bcf\u4e2a\u8ba1\u5212\u6700\u591a\u53ea\u80fd\u6267\u884c\u4e00\u6b21\uff0c\u6bcf\u4e2a\u8ba1\u5212\u7531 $e_i$, $t_i$, $p_i$ \u63cf\u8ff0\uff1a\u5982\u679c\u6267\u884c\u4e86\u7b2c $i$ \u4e2a\u8ba1\u5212\uff0c\u90a3\u4e48 $t_i$ \u65f6\u95f4\u540e\uff0c\u4efb\u52a1 $e_i$ \u4f1a\u88ab\u5b8c\u6210 $p_i$ \u7684\u767e\u5206\u6bd4\u3002\n\n\n\n\u8f93\u5165 $T$ \u7ec4\u6570\u636e\u3002\n\n\u8f93\u51fa\u6bcf\u7ec4\u6267\u884c\u7684\u8ba1\u5212\u4e2a\u6570 $k$\uff0c\u5e76\u6309\u987a\u5e8f\u8f93\u51fa\u6267\u884c\u7684\u8ba1\u5212\uff08\u82e5\u4e0d\u884c\u5219\u8f93\u51fa `-1`\uff0c\u82e5\u6709\u591a\u79cd\u65b9\u6848\u8f93\u51fa\u5176\u4e2d\u4e00\u79cd\u5373\u53ef\uff09\u3002\n\n## \u300c\u601d\u8def\u300d\n\n\u9996\u5148\u663e\u7136\u6709\u4e00\u4e2a\u8d2a\u5fc3\u7684\u7ed3\u8bba\uff1a\u5728\u5f53\u524d\u4efb\u52a1\u672a\u5b8c\u6210\u65f6\uff0c\u4f18\u5148\u9009\u62e9\u80fd\u5bf9\u5f53\u524d\u4efb\u52a1\u6709\u8fdb\u5c55\u7684\u8ba1\u5212\uff08\u4f18\u5148\u5b8c\u6210\u79bb ddl \u8fd1\u7684\u4efb\u52a1\uff09\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4efb\u52a1\u7684\u76ee\u6807\u5c31\u662f **\u80fd\u4f7f\u8fdb\u5ea6\u8fbe\u5230 100% \u7684\u6700\u5c11\u65f6\u95f4**\u3002\n\n\u5f88\u5bb9\u6613\u501f\u52a9 **\u5dee\u5206** \u5f97\u5230 **\u6bcf\u4e00\u4e2a\u4efb\u52a1\u7684\u9650\u5236\u65f6\u95f4**\u3002\n\n\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4efb\u52a1\uff0c\u5c31\u662f\u4e2a **01\u80cc\u5305**\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8ba1\u5212\u9009\u62e9 **\u6267\u884c** \u6216 **\u4e0d\u6267\u884c**\u3002\n\n\u5728\u5f53\u524d\u4efb\u52a1\u7701\u4e0b\u6765\u7684\u65f6\u95f4\uff0c\u5c31\u53ef\u4ee5\u6dfb\u52a0\u5230\u4e0b\u4e00\u4e2a\u4efb\u52a1\u7684\u65f6\u95f4\u4e2d\u53bb\u3002\n\n## \u300c\u7801\u300d\n\n```c++\n#include <iostream>\n#include <cstring>\n#include <tuple> // \u5143\u7ec4 c++11\n#include <vector>\n\n#define INF 0x7f\n#define ll long long\n\nusing namespace std;\n\nconst int MAXN = 1E5 + 7;\n\nint a[MAXN];\nll dp[200 + 7]; // \u6700\u5c11\u65f6\u95f4\nbool f[MAXN][200 + 7];\n\nint solveTask(int a, vector<tuple<int, int, int>> &plans, vector<int> &ans) {\n    // memset(f, 0, sizeof(f));\n    memset(dp, INF, sizeof(dp));\n    dp[0] = 0;\n\n    int n = plans.size();\n    int endk = 0;\n    for (int j = 0; j < n; j++) {\n        auto [e, t, p] = plans[j]; // \u7ed3\u6784\u5316\u7ed1\u5b9a c++17, auto \u81ea\u52a8\u7c7b\u578b\u63a8\u65ad c++11\n        for (int k = 200; k >= 0; k--) {\n            if (k >= p && dp[k - p] + t < dp[k]) {\n                dp[k] = dp[k - p] + t;\n                f[j][k] = 1;\n                if (k >= 100 && dp[k] <= a && (dp[k] < dp[endk] || endk == 0)) {\n                    endk = k;\n                }\n            } else {\n                f[j][k] = 0;\n            }\n        }\n    }\n\n    if (endk == 0) return -1;\n    int k = endk, j = n-1;\n    for (int j = n-1; j >= 0 && k; j--) {\n        if (f[j][k]) {\n            auto [e, _, p] = plans[j]; // \u7ed3\u6784\u5316\u7ed1\u5b9a c++17, auto \u81ea\u52a8\u7c7b\u578b\u63a8\u65ad c++11\n            ans.emplace_back(e); // \u5728vector\u672b\u5c3e\u539f\u4f4d\u6784\u9020 c++11\n            k -= p;\n        }\n    }\n    return dp[endk];\n}\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n\n    int T; cin >> T;\n\n    int n, m;\n    while (T--) {\n        cin >> n >> m;\n\n        a[0] = 0;\n        for (int i = 1; i <= n; i++) {\n            cin >> a[i];\n            a[i-1] = a[i] - a[i-1];\n        }\n\n        vector<vector<tuple<int, int, int>>> plans(n); // \u5143\u7ec4 c++11\n        for (int i = 1, _e, _t, _p; i <= m; i++) {\n            cin >> _e >> _t >> _p;\n            plans[_e - 1].emplace_back(i, _t, _p); // \u5728vector\u672b\u5c3e\u539f\u4f4d\u6784\u9020 c++11\n        }\n\n        bool f = 0;\n        vector<int> ans;\n        int saved_time = 0;\n        for (int i = 0; i < n; i++) {\n            a[i] += saved_time;\n            int mint = solveTask(a[i], plans[i], ans);\n            if (mint < 0) {\n                f = 1;\n                break;\n            }\n            saved_time = a[i] - mint;\n        }\n\n        if (f) {\n            cout << -1 << endl;\n        } else {\n            cout << ans.size() << endl;\n            // auto \u81ea\u52a8\u7c7b\u578b\u63a8\u65ad c++11\n            for (auto iter = ans.begin(); iter != ans.end(); iter++) {\n                cout << *iter << ' ';\n            }\n            cout << endl;\n        }\n    }\n\n    return 0;\n}\n\n```\n\n## \u300c\u51e0\u4e2a\u5751\u70b9\u300d\n\n\u770b\u5230\u90a3\u4e2a\u6ce8\u91ca\u6389\u7684 `memset()` \u6ca1\uff01\n\n\u5927\u574f\u86cb\uff01\n\n\u8c03\u4e86\u4e00\u4e2a\u5c0f\u65f6\uff0c\u95ee\u4e86\u522b\u4eba\u624d\u77e5\u9053\u8fd9\u4e2a `memset()` \u53ef\u80fd\u4f1a\u5bfc\u81f4\u8d85\u65f6\uff01\n\n\u539f\u56e0\u662f `f` \u6570\u7ec4\u592a\u5927\u4e86\uff0c\u4e14\u8fd9\u4e2a `memset` \u5728\u6bcf\u4e2a `case` \u4e2d\u90fd\u88ab\u8c03\u7528\u4e86 `n` \u6b21\uff01\n\n\u8fd9\u56de\u6211\u53ef\u8bb0\u4f4f\u4e86\uff01\n\n",
        "postTime": 1647766348,
        "uid": 78417,
        "name": "AzurIce",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF1650F"
    }
]