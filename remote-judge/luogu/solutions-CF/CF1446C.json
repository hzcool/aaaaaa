[
    {
        "content": "\u90a3\u662f\u4ee3\u4ee3\u76f8\u4f20\u7684\u5904\u4e8b\u771f\u8a00\uff1a\u201c\u5982\u679c\u4e0d\u80fd\u94f2\u9664\u66f4\u591a\u4e0d\u5982\u610f\uff0c\u4e0d\u5982\u53bb\u4fdd\u7559\u66f4\u591a\u7684\u5e78\u798f\u3002\u201d\n\n\u5c06\u6bcf\u4e2a\u6570\u5b57\u4ee3\u8868\u7684\u70b9\u5316\u4f5c\u661f\u6597\uff0c\u90a3\u4e48\u4ef0\u671b\u661f\u7a7a\uff0c\u661f\u56fe\u4e0a\u6700\u591a\u4f1a\u6709 $n$ \u6761\u8f7b\u7075\u4e1d\u7ebf\u3002\u800c\u6211\u4eec\u9700\u8981\u906e\u853d\u6389\u5c3d\u91cf\u5c11\u7684\u661f\u6597\uff0c\u4e5f\u5c31\u662f\u8ba9\u5c3d\u91cf\u591a\u7684\u661f\u6597\u7167\u8000\uff0c\u4f7f\u5f97\u6709\u4e14\u4ec5\u6709\u4e00\u5bf9\u661f\u6597\u2014\u2014\u725b\u90ce\u7ec7\u5973\u661f $(i,j)$\uff0c\u4e92\u76f8\u90fd\u6709 $a_i\\ \\text{xor}\\ a_j$ \u4e3a\u5b83\u4eec\u7684\u6700\u5c0f\u503c\u3002\u4f9d\u6b64\u6cd5\u505a\uff0c$i$ \u4f1a\u6307\u5411 $j$\uff0c\u4e14 $j$ \u4f1a\u6307\u5411 $i$\uff0c\u53cc\u5411\u5954\u8d74\uff0c\u4e1d\u7ebf\u91cd\u5408\uff0c\u661f\u56fe\u4e0a\u53ea\u6709 $n-1$ \u6761\u4e1d\u7ebf\uff0c\u6211\u4eec\u4ef0\u5934\u63a2\u671b\uff0c\u4fbf\u662f\u6811\u72b6\u661f\u8fb0\u3002\n\n\u60f3\u5230 $\\text{xor}$\uff0c\u601d\u60f3\u7684\u5e73\u539f\u4e0a\u4fbf\u751f\u957f\u51fa\u4e00\u68f5\u8302\u76db\u591a\u679d\u7684\u5b57\u5178\u6811\uff0c\u800c\u795e\u5999\u7684\u80a5\u6599\u5c31\u662f\u6211\u4eec\u63d2\u5165\u7684\u661f\u6597\u6570\u503c $a_i$\u3002\u6211\u4eec\u5728\u5b57\u5178\u6811\u7684 $x$ \u53f7\u70b9\u4e0a\u523b\u4e0a\u6570\u5b57 $f_x$\uff0c\u4ee3\u8868\u63a2\u7d22\u5230 $x$ \u53f7\u70b9\u7684\u77ac\u95f4\uff0c\u6211\u4eec\u6700\u4f18\u8fd8\u80fd\u4fdd\u7559\u591a\u5c11\u661f\u6597\uff0c\u4f7f\u591a\u5c11\u661f\u6597\u7167\u8000\u3002\n\n\u90a3\u4e48\uff0c\u523b\u753b\u7684\u6570\u5b57 $f_x$ \u6ee1\u8db3\u4ee5\u4e0b\u89c4\u5f8b\uff1a\u5982\u679c $f_x$ \u6ca1\u6709\u5de6\u5411\u7684\u679d\u4e2b\uff0c\u90a3\u4e48 $f_x$ \u5c31\u662f\u53f3\u5411\u7684\u679d\u4e2b\u523b\u753b\u7684\u6570\u5b57\uff1b\u5982\u679c $f_x$ \u6ca1\u6709\u53f3\u5411\u7684\u679d\u4e2b\uff0c\u90a3\u4e48 $f_x$ \u5c31\u662f\u5de6\u5411\u7684\u679d\u4e2b\u523b\u753b\u7684\u6570\u5b57\u3002\n\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u5982\u679c $x$ \u65e2\u6709\u5de6\u5411\u7684\u679d\u4e2b\uff0c\u53c8\u6709\u53f3\u5411\u7684\u679d\u4e2b\uff0c\u90a3\u4e48\u8be5\u5982\u4f55\u662f\u597d\uff1f\u4e0d\u8981\u614c\u5f20\uff0c\u4e0d\u8981\u5927\u610f\uff0c\u6211\u4eec\u4ec5\u9700\u4ee4 $f_x$ \u7b49\u4e8e\u5de6\u5411\u7684\u679d\u4e2b\u523b\u753b\u7684\u6570\u5b57\u4e0e\u53f3\u5411\u7684\u679d\u4e2b\u523b\u753b\u7684\u6570\u5b57\u7684\u6781\u5927\u4e4b\u503c\uff0c\u518d\u52a0\u4e0a\u6052\u672c\u4e4b \u201c$1$\u201d \u5373\u53ef\u3002\u539f\u56e0\u5982\u4e0b\uff0c\u5982\u679c\u5de6\u5411\u679d\u4e2b\u3001\u53f3\u5411\u679d\u4e2b\u5404\u53ea\u5bf9\u5e94\u4e00\u4e2a\u661f\u6597\u6570\u503c\uff0c\u5206\u522b\u4e3a $a_i,a_j$ \u90a3\u4e48\u8fd9\u4e00\u5bf9 $(i,j)$ \u6ee1\u8db3\u6761\u4ef6\u3002\u5426\u5219\uff0c\u4f8b\u5982\u5de6\u5411\u679d\u4e2b\u523b\u753b\u4e4b\u6811\u7a0d\u5927\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4fdd\u7559\u5168\u90e8\u7684\u5de6\u5411\u679d\u4e2b\u5bf9\u5e94\u7684\u661f\u8fb0\uff0c\u518d\u9009\u4e00\u4e2a\u53f3\u8fb9\u7684\u661f\u6597\u3002\u8bbe $x$ \u7684\u6df1\u5ea6\u4e3a $dep_x$\uff0c\u7531\u4e8e\u5b83\u4eec\u5728\u4e8c\u8fdb\u5236\u4e0b\u4ece\u9ad8\u5411\u4f4e\u7b2c $dep_x+1$ \u4f4d\u4e0d\u540c\uff0c\u6240\u4ee5\u53f3\u8fb9\u7684\u661f\u6597\u5fc5\u4e0d\u4f1a\u4e0e\u5de6\u8fb9\u7684\u661f\u6597\u6ee1\u8db3\u6761\u4ef6\uff08\u5de6\u8fb9\u7684\u661f\u6597\u4e92\u76f8\u8fde\u663e\u7136\u66f4\u4f18\uff09\u3002\u56e0\u6b64\uff0c\u5f53\u8fd9\u68f5\u5b57\u5178\u6811\u4e0a\u6570\u5b57\u523b\u5c3d\uff0c\u518d\u5411\u4e0a\u671b\u53bb\uff0c\u5fc5\u5c06\u4e5f\u662f\u4e00\u68f5\u5927\u6811\u2014\u2014\u6ee1\u8db3\u9898\u8bbe\u7684\u3001\u957f\u5728\u661f\u8fb0\u5927\u6d77\u4e2d\u7684\u82cd\u5929\u4e4b\u6811\u3002\u800c\u64e6\u62ed\u6c57\u6c34\u540e\uff0c\u7528 $n$ \u51cf\u53bb\u5b57\u5178\u6811\u6839\u8282\u70b9\u7684\u523b\u753b\u7684\u6570\u5b57\uff08\u56e0\u4e3a\u6c42\u7684\u662f\u6700\u5c11\u906e\u853d\u591a\u5c11\u661f\u8fb0\uff0c\u4fbf\u662f $n-f_{\\text{root}}$\uff09\uff0c\u4fbf\u662f\u6211\u4eec\u5c06\u5927\u58f0\u547c\u558a\u51fa\u7684\uff0c\u4e16\u95f4\u7684\u6700\u7ec8\u771f\u7406\u3002",
        "postTime": 1635259023,
        "uid": 99623,
        "name": "BlankAo",
        "ccfLevel": 0,
        "title": "\u8d85\u7ea7\u8bd7\u610f\u7684\u9898\u89e3\uff01"
    },
    {
        "content": "\u9047\u5230\u8fd9\u79cd\u6c42\u6700\u5c0f\u5220\u9664\u6570\u7684\u9898\u76ee\uff0c\u90fd\u53ef\u4ee5\u8f6c\u5316\u4e3a\u6c42\u6700\u5927\u4fdd\u7559\u6570\u3002\n\n\u5c06\u9898\u76ee\u7684\u9898\u610f\u8f6c\u5316\u4e00\u4e0b\uff0c\u4fdd\u7559\u6700\u591a\u7684\u6570\uff0c\u4ee4\u53ea\u5b58\u5728\u4e00\u5bf9 $(i,j)$ \u5bf9\u5f7c\u6b64\u800c\u8a00 $a_i\\oplus a_j$ \u7684\u503c\u90fd\u662f\u6700\u5c0f\u7684\u3002\n\n\u81ea\u7136\u60f3\u5230 $\\text{trie}$\u3002\u628a\u6240\u6709\u6570\u63d2\u5165\u8fdb $\\text{trie}$ \u91cc\uff0c\u9012\u5f52\u8003\u8651 $\\text{trie}$ \u7684\u4e00\u68f5\u5b50\u6811 $x$\uff0c\u8bb0\u4ee4\u5b50\u6811 $x$ \u5408\u6cd5\u7684\u6700\u5927\u4fdd\u7559\u6570\u4e3a $f_x$\uff0c\u5b50\u6811 $x$ \u7684\u5de6\u53f3\u513f\u5b50\u5bf9\u5e94\u7684\u662f\u4e8c\u8fdb\u5236\u610f\u4e49\u4e0b\u7684\u7b2c $k$ \u4f4d\u3002\n\n\u90a3\u4e48\u5f53\u5b50\u6811 $x$ \u53ea\u5b58\u5728\u5de6/\u53f3\u513f\u5b50\u65f6\uff0c$f_x$ \u7684\u503c\u5c31\u662f\u5de6\u53f3\u513f\u5b50\u7684\u503c\u3002\u5426\u5219\u5c31\u662f\u5de6\u513f\u5b50\u7684 $f$ \u503c\u4e0e\u53f3\u513f\u5b50\u7684 $f$ \u503c\u53d6 $\\max$ \u518d $+1$\u3002\u600e\u4e48\u7406\u89e3\u5462\uff1f\u5728\u7b2c $k$ \u4f4d\u4e4b\u524d\uff0c\u5bf9\u5e94\u4f4d\u7684\u503c\u90fd\u76f8\u540c\uff0c\u4ec5\u7b2c $k$ \u4f4d\u4e0d\u76f8\u540c\uff0c\u4fdd\u7559\u5de6\u53f3\u5b50\u6811\u4e2d\u7684\u4e00\u68f5\uff0c\u518d\u4fdd\u7559\u5176\u4f59\u5b50\u6811\u7684\u4e00\u4e2a\u8282\u70b9\uff0c\u4e00\u5b9a\u5c31\u80fd\u786e\u4fdd\u5f53\u524d\u5b50\u6811\u5185\u53ea\u5b58\u5728\u4e00\u5bf9\u4e0a\u8ff0\u7684 $(i,j)$\u3002\n\n\u6700\u540e\u7b54\u6848\u5c31\u662f $n-f_{rt}$\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n \\log n)$\u3002\n\n```cpp\n#include<cstdio>\nint rt=1,tot=1;\nint a[200005],ch[4000005][2];\ninline int read() {\n\tregister int x=0,f=1;register char s=getchar();\n\twhile(s>'9'||s<'0') {if(s=='-') f=-1;s=getchar();}\n\twhile(s>='0'&&s<='9') {x=x*10+s-'0';s=getchar();}\n\treturn x*f;\n}\ninline int max(const int &x,const int &y) {return x>y? x:y;}\ninline void insert(int val) {                        \n\tint p=rt;\n\tfor(register int i=30;i>=0;--i) {\n\t\tint cur=val>>i&1;\n\t\tif(!ch[p][cur]) ch[p][cur]=++tot;\n\t\tp=ch[p][cur];\n\t}\n}\ninline int GetMaxPoint(int p) {\n\tif(!ch[p][0]&&!ch[p][1]) return 1;\n\tif(!ch[p][0]) return GetMaxPoint(ch[p][1]);\n\tif(!ch[p][1]) return GetMaxPoint(ch[p][0]);\n\treturn max(GetMaxPoint(ch[p][0]),GetMaxPoint(ch[p][1]))+1;\n}\nint main() {\n\tint n=read();\n\tfor(register int i=1;i<=n;++i) insert(a[i]=read());\n\tprintf(\"%d\\n\",n-GetMaxPoint(rt));\n\treturn 0;\n}\n```",
        "postTime": 1605664751,
        "uid": 95244,
        "name": "tommymio",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1446C \u3010Xor Tree\u3011"
    },
    {
        "content": "[\u565c\u5566\u565c\u5566\u54a7\u565c\u5566\u565c\u5566\u54a7\u7684\u9605\u8bfb\u4f53\u9a8c\uff01\uff01\uff01\uff01](https://www.cnblogs.com/dysyn1314/p/14008246.html)\n\n\n# CF1446C Xor Tree\n\n## \u9898\u76ee\u5927\u610f\n\n[\u9898\u76ee\u94fe\u63a5](https://codeforces.com/contest/1446/problem/C)\n\n\u5bf9\u4e8e\u4e00\u4e2a\u957f\u5ea6\u4e3a $k$ \u7684\u5e8f\u5217 $b_1,b_2,\\dots,b_k$\uff0c\u6570\u5b57\u4e92\u4e0d\u76f8\u7b49\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u6784\u9020\u4e00\u5f20\u56fe\uff1a\n\n\u56fe\u4e0a\u6709 $k$ \u4e2a\u8282\u70b9\uff0c\u7b2c $i$ \u4e2a\u70b9\u4e0a\u5199\u7740\u6570\u5b57 $b_i$\u3002\u5bf9\u6bcf\u4e2a $i$\uff0c\u627e\u5230\u4e00\u4e2a $j$\uff0c\u6ee1\u8db3 $j\\neq i$\uff0c\u4e14 $b_i\\operatorname{xor}b_j$ \u6700\u5c0f\u3002\u7136\u540e\u5728 $i,j$ \u4e4b\u95f4\u8fde\u4e00\u6761\u65e0\u5411\u8fb9\u3002\n\n\u6211\u4eec\u79f0\u4e00\u4e2a\u5e8f\u5217 $b$ \u662f\u597d\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u7531\u5b83\u751f\u6210\u7684\u65e0\u5411\u56fe\uff0c\u662f\u4e00\u4e2a\u73af\u957f\u4e3a $2$ \u7684\u57fa\u73af\u6811\u3002\n\n\u7ed9\u51fa\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a_1,a_2,\\dots,a_n$\uff0c\u6570\u5b57\u4e92\u4e0d\u76f8\u7b49\u3002\u6c42\u6700\u5c11\u5220\u53bb\u591a\u5c11\u4e2a\u6570\uff0c\u80fd\u4f7f\u5e8f\u5217\u53d8\u6210\u597d\u7684\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a$1\\leq n\\leq 2\\times10^5$\uff0c$1\\leq a_i\\leq 10^9$\u3002\n\n## \u672c\u9898\u9898\u89e3\n\n\u9996\u5148\uff0c\u4efb\u610f\u4e00\u4e2a\u5e8f\u5217\uff0c\u8fde\u51fa\u6765\u7684\u56fe\u4e00\u5b9a\u662f\u4e00\u4e2a\u57fa\u73af\u6811\u68ee\u6797\uff08\u70b9\u6570 $=$ \u8fb9\u6570\uff09\u3002\n\n\u8003\u8651\u6240\u6709 $\\frac{n(n-1)}{2}$ \u5bf9\u6570\u7684 $\\operatorname{xor}$ \u503c\uff0c\u9009\u51fa\u5176\u4e2d\u4e00\u5bf9 $\\operatorname{xor}$ \u503c\u6700\u5c0f\u7684\u6570 $(a_x,a_y)$\uff0c\u5219 $a_x$ \u4e0e $a$ \u4e2d\u5176\u4ed6\u6570\u5f02\u6216\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u4e00\u5b9a\u5927\u4e8e $a_x\\operatorname{xor}a_y$\uff08\u56e0\u4e3a\u9009\u51fa\u7684\u662f\u6700\u5c0f\u7684\uff0c\u6240\u4ee5\u4e0d\u53ef\u80fd\u5c0f\u4e8e\uff1b\u56e0\u4e3a\u6240\u6709\u6570\u4e92\u4e0d\u76f8\u540c\uff0c\u6240\u4ee5\u4e0d\u53ef\u80fd\u7b49\u4e8e\uff09\uff1b\u5bf9 $a_y$ \u4e5f\u662f\u540c\u7406\u3002\u6240\u4ee5 $x$, $y$ \u4e00\u5b9a\u7ec4\u6210\u4e86\u4e00\u4e2a\u5927\u5c0f\u4e3a $2$ \u7684\u73af\u3002\n\n\u4e8e\u662f\u5728\u53ea\u6709\u4e00\u68f5\u57fa\u73af\u6811\u65f6\uff0c\u73af\u7684\u5927\u5c0f\u4e00\u5b9a\u662f $2$\u3002\u8fdb\u800c\u53ef\u4ee5\u5f52\u7eb3\u8bc1\u660e\uff0c**\u6574\u4e2a\u57fa\u73af\u6811\u68ee\u6797\uff0c\u6ca1\u6709\u5927\u5c0f\u8d85\u8fc7 $2$ \u7684\u73af**\u3002\n\n\u4e8e\u662f\u95ee\u9898\u8f6c\u5316\u4e3a\uff0c\u5224\u65ad\u56fe\u7684**\u8fde\u901a\u6027**\uff1a\u5982\u679c\u56fe\u8054\u901a\uff0c\u5e8f\u5217\u5c31\u662f\u597d\u7684\uff1b\u5426\u5219\u5c31\u662f\u4e0d\u597d\u7684\u3002\n\n\u6211\u4eec**\u4ece\u9ad8\u5230\u4f4e**\u8003\u8651\u6bcf\u4e00\u4f4d\u3002\u5047\u8bbe\u5f53\u524d\u5269\u4f59\u7684\u6570\u7684\u603b\u6570\u81f3\u5c11\u4e3a $3$\u3002\u628a\u5f53\u524d\u5269\u4f59\u7684\u6570\u5206\u6210\uff1a\u5f53\u524d\u4f4d\u4e3a $0$ \u7684\u6570\u3001\u5f53\u524d\u4f4d\u4e3a $1$ \u7684\u6570\u4e24\u7c7b\u3002\u5206\u522b\u653e\u5165\u96c6\u5408 $S_0$, $S_1$\u3002\n\n- \u5982\u679c\u67d0\u4e2a\u96c6\u5408\u5927\u5c0f $\\leq 1$\uff0c\u5219\u8be5\u96c6\u5408\u91cc\u7684\u6570\uff0c\u4f1a\u76f4\u63a5\u6302\u5230\u53e6\u4e00\u4e2a\u96c6\u5408\u7684\u67d0\u4e2a\u8282\u70b9\u4e0a\u3002\u6240\u4ee5\u4e0d\u7528\u8003\u8651\u5b83\uff0c\u76f4\u63a5\u5e26\u7740\u53e6\u4e00\u4e2a\u96c6\u5408\uff0c\u8003\u8651\u4e0b\u4e00\u4f4d\u3002\n- \u5426\u5219\uff0c\u5bf9\u4e8e\u5927\u5c0f\u81f3\u5c11\u4e3a $2$ \u7684\u96c6\u5408\uff0c\u91cc\u9762\u7684\u6570\u4e00\u5b9a\u4f1a\u5185\u90e8\u8fde\u8fb9\uff0c\u4e0d\u4f1a\u8003\u8651\u53e6\u4e00\u4e2a\u96c6\u5408\u91cc\u7684\u70b9\uff08\u56e0\u4e3a\u8fd9\u6837\u80fd\u4fdd\u8bc1\u5f53\u524d\u4f4d\u7684\u5f02\u6216\u503c\u4e3a $0$\uff09\u3002\u4e8e\u662f\u56fe\u5c31\u81f3\u5c11\u5206\u88c2\u4e3a\u4e24\u4e2a\u8fde\u901a\u5757\u3002\u6211\u4eec\u9700\u8981\u9009\u62e9\u4e00\u4e2a\u96c6\u5408\uff0c\u5c06\u5176\u5220\u5230\u53ea\u5269\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u9012\u5f52\u5230\u4e0b\u4e00\u4f4d\uff0c\u89e3\u51b3\u53e6\u4e00\u4e2a\u96c6\u5408\u3002\n\n\u7b80\u5355\u8bb2\u5c31\u662f\u4e00\u4e2a\u9012\u5f52\u7684\u8fc7\u7a0b\u3002\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u9012\u5f52\u51fd\u6570\uff0c$f(S,\\text{bit})$\uff0c\u8868\u793a\u5bf9\u4e8e\u96c6\u5408 $S$\uff0c\u8003\u8651\u91cc\u9762\u7684\u6570\u5728\u9ad8\u4e8e $\\text{bit}$ \u7684\u4f4d\u5168\u90e8\u76f8\u7b49\u3002\u73b0\u5728\u8981\u4f7f\u5f97 $S$ \u6784\u6210\u4e00\u4e2a\u8fde\u901a\u56fe\uff0c\u6700\u5c11\u8fd8\u9700\u5220\u6389\u591a\u5c11\u6570\u3002\u90a3\u4e48\uff1a\n$$\nf(S,\\text{bit}) = \\begin{cases}\n0 && |S| < 3\\\\\n\\min(f(S_0,\\text{bit} - 1) + \\max(0,|S_1|-1),f(S_1,\\text{bit} - 1) + \\max(0,|S_0| - 1)) && |S|\\geq 3\n\\end{cases}\n$$\n\u6ce8\u610f\uff1a\u76f4\u63a5\u9009 $S_0,S_1$ \u91cc\u5927\u5c0f\u8f83\u5c0f\u7684\u4e00\u4e2a\u5220\uff0c\u662f\u4e0d\u5bf9\u7684\u3002\u56e0\u4e3a\u8fd9\u672c\u8d28\u662f\u4e00\u4e2a DP \u95ee\u9898\u800c\u4e0d\u662f\u8d2a\u5fc3\u95ee\u9898\uff0c\u5c40\u90e8\u7684\u6700\u4f18\u4e0d\u4e00\u5b9a\u5e26\u6765\u5168\u5c40\u7684\u6700\u4f18\u3002\u6570\u636e #4 \u5c31\u662f\u4e00\u4e2a\u4f8b\u5b50\u3002\n\n\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u5982\u679c\u4f60\u628a\u627e\u5f02\u6216\u6700\u5c0f\u503c\u7684\u8fc7\u7a0b\uff0c\u60f3\u8c61\u6210\u5728 Trie \u6811\u4e0a\u67e5\u627e\uff0c\u5219\u4e0a\u8ff0\u7684\u9012\u5f52\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u5728 Trie \u6811\u4e0a\u505a\u6811\u5f62 DP\u3002\u6211\u4eec\u8981\u4fdd\u8bc1\uff0c\u4e0d\u5b58\u5728\u67d0\u4e2a\u8282\u70b9\uff0c\u4e24\u4e2a\u513f\u5b50\u5b50\u6811\u5927\u5c0f\u90fd $\\geq 2$\u3002\n\n\u56e0\u4e3a\u6700\u591a\u9012\u5f52 $O(\\log a)$ \u5c42\uff0c\u6bcf\u5c42\u91cc\u96c6\u5408\u5927\u5c0f $S$ \u4e4b\u548c\u662f $O(n)$ \u7684\uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log a)$\u3002\n\n## \u53c2\u8003\u4ee3\u7801\n\n[\u52c7\u6562\u5411\u524d\u8fdb\uff0c\u524d\u8fdb\u6709\u5956\u54c1\uff01\uff01\uff01](https://www.cnblogs.com/dysyn1314/p/14008246.html)\n\n\n",
        "postTime": 1605794870,
        "uid": 100674,
        "name": "duyi",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1446C \u3010Xor Tree\u3011"
    },
    {
        "content": "## \u89e3\u6790\n\n\u9996\u5148\u53d1\u73b0\u4efb\u610f\u5e8f\u5217\u81f3\u5c11\u6709\u4e00\u5bf9\u91cd\u8fb9\uff1b\u53ea\u9700\u8003\u8651\u6240\u6709\u5143\u7d20\u5bf9\u4e2d\u5f02\u6216\u548c\u6700\u5c0f\u7684\u90a3\u5bf9\u5c31\u884c\n\n\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u5224\u65ad\u7ed3\u679c\u56fe\u662f\u5426\u8fde\u901a\n\n\u8003\u8651\u4e3a\u6240\u6709\u5143\u7d20\u5efa\u4e00\u4e2a 01trie\u3002\u5bf9\u4e8e\u7b2c $i$ \u4f4d\u7684\u67d0\u5bf9\u5de6\u53f3\u5b50\u6811 $S_{i, 0}, S_{i, 1}$\uff0c\u4e0d\u96be\u53d1\u73b0\u82e5\u6709 $|S_{i, 0}|\\geq 2$ \u4e14 $|S_{i, 1}|\\geq 2$\uff0c\u90a3\u4e48\u4e24\u9897\u5b50\u6811\u4e2d\u7684\u5143\u7d20\u4e00\u5b9a\u90fd\u4ec5\u4f1a\u5f80\u81ea\u5df1\u5b50\u6811\u4e2d\u7684\u5143\u7d20\u8fde\u8fb9\uff08\u8d2a\u5fc3\u8003\u8651\u6700\u9ad8\u4f4d\u5373\u53ef\uff09\uff1b\u8fd9\u6837\u5de6\u53f3\u5b50\u6811\u7684\u5143\u7d20\u95f4\u5c31\u4e0d\u8fde\u901a\u4e86\n\n\u4e8e\u662f\u8003\u8651\u4ece 01trie \u7684\u6839 dfs\uff0c\u505a\u4e00\u904d dp \u5373\u53ef\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u8003\u8651\u5b50\u6811 $T$ \u7684\u7b54\u6848\uff08\u4fdd\u6301\u8fde\u901a\u9700\u8981\u5220\u6389\u7684\u6700\u5c0f\u5143\u7d20\u6570\u91cf\uff09\u3002\u5982\u679c $T$ \u7684\u5de6\u53f3\u5b50\u6811 $S_{i, 0}, S_{i, 1}$ \u7684\u5927\u5c0f\u5747\u4e0d\u5927\u4e8e $1$\uff0c\u90a3\u4e48 $T$ \u5c31\u4e0d\u9700\u8981\u5220\u5143\u7d20\u3002\u5426\u5219\u7684\u8bdd\uff0c\u8bbe\u5b50\u6811\u7684\u7b54\u6848 $v_0, v_1$\uff0c\u5bf9 $v_0+\\max(0, |S_{i, 1}|-1)$ \u548c $v_1+\\max(0, |S_{i, 0}|-1)$ \u53d6\u4e2a min \u5373\u53ef\uff08\u679a\u4e3e\u8981\u5c06\u54ea\u9897\u5b50\u6811\u7684\u5927\u5c0f\u51cf\u5c11\u5230 $1$\uff1b\u6ce8\u610f\u6709\u53ef\u80fd\u679a\u4e3e\u7684\u8981\u51cf\u5c11\u7684\u5b50\u6811\u7684\u5927\u5c0f\u5df2\u7ecf\u4e0d\u5927\u4e8e $1$\uff09\n\n\u89e3\u91ca\u4e0d\u592a\u6e05\u695a\u7684\u5730\u65b9\u53ef\u53c2\u8003\u4ee3\u7801qaq\n\n## CODE\n\n```cpp\n#include <cstdio>\n#include <iostream>\nusing std::min;\nusing std::max;\n\nconst int MAXN =2e5+20, MAXT =2e5*31+20, LEAF =30;\n\n/*------------------------------IO------------------------------*/\n\nint read(){\n\tint x =0; char c =getchar(); bool f =0;\n\twhile(c < '0' || c > '9') (c == '-') ? f =1, c =getchar() : c =getchar();\n\twhile(c >= '0' && c <= '9') x =(x<<1)+(x<<3)+(48^c), c =getchar();\n\treturn (f) ? -x : x;\n}\n\n/*------------------------------01Trie------------------------------*/\n\nint ls[MAXT], rs[MAXT], root =1, tot =1;\nint siz[MAXT];\n\nvoid insert(const int &val, const int &dep =0, const int &x =root){\n\tif(dep == LEAF){\n\t\tsiz[x] =1;\n\t\treturn;\n\t}\n\tif(val&(1<<(LEAF-1-dep)))\n\t\tinsert(val, dep+1, rs[x] =(rs[x]) ? rs[x] : ++tot);\n\telse\n\t\tinsert(val, dep+1, ls[x] =(ls[x]) ? ls[x] : ++tot);\n\tsiz[x] =siz[ls[x]]+siz[rs[x]];\n}\n\nint dfs(const int &x =root){\n\tif(siz[ls[x]] <= 1 && siz[rs[x]] <= 1)\n\t\treturn 0;\n\tint ret =0x3f3f3f3f;\n\tif(ls[x])\n\t\tret =min(ret, dfs(ls[x])+max(0, siz[rs[x]]-1));\n\tif(rs[x])\n\t\tret =min(ret, dfs(rs[x])+max(0, siz[ls[x]]-1));\n\treturn ret;\n}\n\n/*------------------------------Main------------------------------*/\n\nint main(){\n\tint n =read();\n\tfor(int i =0; i < n; ++i){\n\t\tint a =read();\n\t\tinsert(a);\n\t}\n\tprintf(\"%d\", dfs());\n}\n```",
        "postTime": 1605689084,
        "uid": 105254,
        "name": "Piwry",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1446C \u3010Xor Tree\u3011"
    },
    {
        "content": "## [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1446C)\n\n## \u9898\u610f\u7b80\u8ff0\n\n\u7ed9\u5b9a\u4f60\u4e00\u4e2a\u5e8f\u5217 $a$\uff08\u5e8f\u5217\u4e3a\u4e92\u4e0d\u76f8\u540c\u7684\u6b63\u6574\u6570\uff09\uff0c\u5bf9\u4e8e\u6bcf\u4e2a $i$\uff0c\u5b83\u4f1a\u5411\u5e8f\u5217\u4e2d\u7684\u6ee1\u8db3 $a_i\u2295a_j$ \u6700\u5c0f\u7684 $j$ \u8fde\u53cc\u5411\u8fb9\uff0c\u5e76\u4e14\u5982\u679c $j$ \u4e5f\u5411 $i$ \u8fde\u4e86\u8fb9\uff0c\u53ea\u7b97\u4e00\u6761\u8fb9\u3002\u73b0\u5728\u8981\u8ba9\u4f60\u5220\u53bb\u5e8f\u5217\u4e2d\u7684\u4e00\u4e9b\u6570\uff0c\u4f7f\u5f97\u6700\u540e\u5f62\u6210\u7684\u56fe\u662f\u4e00\u9897\u6811\uff0c\u8f93\u51fa\u6700\u5c11\u9700\u8981\u5220\u9664\u51e0\u4e2a\u6570\u3002\n\n## \u524d\u7f6e\u829d\u58eb\n\n- $\\texttt{Trie }$\u6811\uff1a\u770b\u5230\u8fd9\u7c7b\u5f02\u6216\u503c\u6700\u5927\u6700\u5c0f\u7684\u5b57\u773c\u5f88\u5bb9\u6613\u60f3\u5230 \u201c $\\texttt{Trie }$\u6811 \u201d\u3002\n\n- \u7b80\u5355 dp \u80fd\u529b\u3002\n\n## $\\texttt{SOLUTION}$\n\n\u6c42\u6700\u5c0f\u5220\u9664\u6570\u5341\u5206\u56f0\u96be\uff0c\u4e0d\u5982\u8f6c\u8fc7\u6765\u6c42\u6700\u5927\u4fdd\u7559\u3002\n\n\u5148\u5c06\u6bcf\u4e2a\u6570\u5b57\u63d2\u5165 $\\texttt{Trie}$ \u6811\u4e2d\u3002\n\n\u56e0\u4e3a\u5f02\u6216\u503c\u6700\u5c0f\u7684\u4e24\u4e2a\u6570\u624d\u4f1a\u8fde\u8fb9\u3002\n\n\u6240\u4ee5\u6ca1\u5220\u9664\u524d\u4e00\u5b9a\u662f $\\texttt{Trie}$ \u6811\u4e2d\u5982\u4e0b\u56fe\u6240\u793a\u7684\u70b9\u6240\u8868\u793a\u7684\u6570\u4f1a\u8fde\u8fb9\uff0c\u4e0d\u96be\u53d1\u73b0\u4ed6\u4eec\u662f\u4e0d\u8fde\u901a\u7684\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/b3kkyhqz.png)\n\n\u8981\u8ba9\u4ed6\u4eec\u53d8\u4e3a\u4e00\u68f5\u6811\uff0c\u5c31\u5c31\u5fc5\u987b\u5220\u9664\u4e00\u4e9b\u70b9\u3002\n\n\u8bb0\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u7684\u6570\u5b57\u8fde\u5b8c\u8fb9\u540e\u4e3a\u4e00\u68f5\u6811\u7684\u6700\u5927\u4fdd\u7559\u6570\u4e3a $dp_u$\uff08\u6709\u70b9\u62d7\u53e3qwq\uff09\u3002\n\n\u5176\u5b9e\u6309\u4e0a\u56fe\u4e2d\u8fde\u8fb9\uff0c\u6211\u4eec\u5df2\u7ecf\u6c42\u51fa\u4e86\uff1a$dp_4=dp_5=dp_6=dp_7=2$\u3002\n\n\u7136\u540e\u6211\u4eec\u7ee7\u7eed\u9012\u5f52\u5904\u7406\u3002\n\n\u5f00\u59cb\u5904\u7406 $dp_2$ \u60f3\u8981\u8ba9\u4ee5 $4$ \u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u7684\u6570\u4e0e\u4ee5 $5$ \u4e3a\u6839\u7684\u5b50\u6811\u8fde\u8fb9\u3002\u5c31\u5fc5\u987b\u8981\u8ba9\u4e24\u68f5\u5b50\u6811\u7684\u5176\u4e2d\u4e00\u68f5\u53ea\u4fdd\u7559\u4e00\u4e2a\u6570\u5b57\u3002\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\u56e0\u4e3a $\\text{Trie}$ \u6811\u4e2d\u4e00\u4e2a\u5b50\u6811\u5185\u4efb\u610f\u4e24\u4e2a\u6570\u7684\u5f02\u6216\u503c\u4e00\u5b9a\u6bd4\u4e00\u4e2a\u5b50\u6811\u5185\u7684\u6570\u4e0e\u4e00\u4e2a\u5b50\u6811\u5916\u7684\u6570\u5f02\u6216\u503c\u5c0f\u3002\n\n\u6240\u4ee5\u4e3a\u4e86\u8ba9\u8fd9\u68f5\u5b50\u6811\u5185\u7684\u6811\u4e0e\u53e6\u4e00\u68f5\u5b50\u6811\u4e0a\u7684\u6811\u8fde\u8fb9\uff0c\u53ea\u80fd\u4ee4\u8fd9\u68f5\u5b50\u6811\u53ea\u7559\u4e0b\u5b83\u4e00\u4e2a\u6570\u3002\n\n\u4e8e\u662f $dp$ \u8f6c\u79fb\u51fa\u6765\u4e86\u3002\n\n\u8bb0 $u$ \u7684\u4e24\u4e2a\u513f\u5b50\u4e3a $v_1,v_2$\u3002\n\n$$\ndp_u=\\left\\{\n\\begin{aligned}\n1(u\\ \\text{\u4e0d\u5b58\u5728\u513f\u5b50\uff0c\u5373}u\\text{\u4e3a\u53f6\u5b50}) \\\\\ndp_{v_1}\\ (u\\text{\u4e0d\u5b58\u5728}v_2\\text{\u513f\u5b50})\\\\\ndp_{v_2}\\ (u\\text{\u4e0d\u5b58\u5728}v_1\\text{\u513f\u5b50})\\\\\n\\max\\{dp_{v_2},dp_{v_1}\\}+1\\ (u\\text{\u5b58\u5728\u4e24\u4e2a\u513f\u5b50})\\\\\n\n\n\\end{aligned}\n\\right.\n$$\n\n\n\u5217\u5b8c\u8f6c\u79fb\u53d1\u73b0\u751a\u81f3\u4e0d\u9700\u8981\u8bb0\u5f55 $dp$ \u6570\u7ec4\u3002\u4e00\u904d\u9012\u5f52\u5373\u53ef\u89e3\u51b3\u3002\n\n$\\texttt{AC CODE}$\n\n```cpp\n#include<bits/stdc++.h>\n#define IN inline\n\nconst int N=3000010;\n\nIN int read()\n{\n\tint x=0; char ch=getchar();\n\twhile(ch<'0'||ch>'9') ch=getchar();\n\twhile(ch>='0'&&ch<='9') x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n\treturn x;\n}\nint idx;\nstruct Trie_Tree{int son[2];}tr[N];\ninline void insert(int x)\n{\n\tint p=0;\n\tfor(int i=30;i>=0;i--)\n\t{\n\t\tint tmp=(x>>i)&1;\n\t\tif(!tr[p].son[tmp]) tr[p].son[tmp]=++idx;\n\t\tp=tr[p].son[tmp];\n\t}\n}\nlong long dp(int p)\n{\n\tif(!tr[p].son[0]&&!tr[p].son[1]) return 1;\n\tif(!tr[p].son[0]&&tr[p].son[1]) return dp(tr[p].son[1]);\n\tif(tr[p].son[0]&&!tr[p].son[1]) return dp(tr[p].son[0]);\n\treturn std::max(dp(tr[p].son[0]),dp(tr[p].son[1]))+1;\n}\nint main()\n{\n\tint n=read();\n\tfor(int i=1;i<=n;i++) insert(read());\n\treturn !printf(\"%lld\",n-dp(0));\n}\n```\n\n\u6b22\u8fce\u63d0\u95eeor\u63d0\u51fa\u6211\u7684\u95ee\u9898\uff0c\u4f1a\u6539\u7684\u3002",
        "postTime": 1640510191,
        "uid": 254305,
        "name": "Marsrayd",
        "ccfLevel": 0,
        "title": "CF1446C \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u5b57\u5178\u6811\u597d\u9898\u3002\n\n- \u6027\u8d28:\n\n\u6700\u540e\u7559\u4e0b\u7684\u6570\u4e2d\u6709\u4e14\u4ec5\u6709\u4e24\u4e2a\u6570 $(i,j)$ \u76f8\u4e92\u6ee1\u8db3 $a_i\\oplus a_j$ \u662f\u6700\u5c0f\u7684\u3002\n\n- \u8bc1\u660e:\n\n$n$ \u4e2a\u70b9\u5f62\u6210\u6811\uff0c\u5fc5\u7136\u662f $n-1$ \u6761\u8fb9\uff0c\u6240\u4ee5\u6709\u4e14\u4ec5\u6709\u4e00\u6761\u91cd\u8fb9\u3002\n\n- \u505a\u6cd5:\n\n\u5982\u679c\u4f60\u8ba4\u4e3a\u53ea\u9700\u8981\u5bf9\u4e8e\u5176\u4f59\u4e92\u76f8\u6570\u5bf9\u5220\u6389\u4e00\u4e2a\uff0c\u5efa\u8bae\u4f60\u4ed4\u7ec6\u601d\u8003\u4e00\u4e0b\u662f\u5426\u4f1a\u51fa\u73b0\u5220\u53bb\u4ee5\u540e\u91cd\u65b0\u5f62\u6210\u6570\u5bf9\u3002\n\n\u7136\u540e\u63a5\u4e0b\u6765\u6211\u4eec\u8003\u8651\u628a\u6240\u6709\u6570\u53d8\u6210\u4e00\u9897\u5b57\u5178\u6811\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9\u6765\u8bb2\u7684\u8bdd\u3002\n\n\u5047\u8bbe\u5f53\u524d\u8282\u70b9\u5b58\u7684\u662f\u7b2c $k$ \u4f4d\uff0c\u90a3\u4e48\u5bf9\u4e8e\u5f53\u524d\u8282\u70b9\u4f1a\u51fa\u73b0\u4ee5\u4e0b\u4e09\u79cd\u60c5\u51b5:\n\n- \u6ca1\u6709\u5b50\u6811\uff0c\u90a3\u4e48\u76f4\u63a5\u8fd4\u56de $1$\u3002\n\n- \u6ca1\u6709\u5de6\u5b50\u6811\uff0c\u8bbf\u95ee\u53f3\u5b50\u6811\uff0c\u8fd4\u56de\u53f3\u5b50\u6811\u53ef\u5b58\u6700\u5927\u4e2a\u6570\u3002\n\n- \u6ca1\u6709\u53f3\u5b50\u6811\uff0c\u8bbf\u95ee\u5de6\u5b50\u6811\uff0c\u8fd4\u56de\u5de6\u5b50\u6811\u53ef\u5b58\u6700\u5927\u4e2a\u6570\u3002\n\n- \u540c\u65f6\u62e5\u6709\u4e24\u4e2a\u5b50\u6811\uff0c\u6211\u4eec\u5fc5\u7136\u9009\u62e9\u4fdd\u7559\u5176\u4e2d\u4e00\u4e2a\u5b50\u6811\uff0c\u81ea\u7136\u662f\u53ef\u5b58\u6700\u5927\u4e2a\u6570\u6700\u5927\u7684\u90a3\u4e2a\uff0c\u7136\u540e\u5728\u5176\u57fa\u7840\u4e0a\u52a0 $1$\u3002\n\n\u5bf9\u4e8e\u524d\u4e09\u79cd\u60c5\u51b5\uff0c\u60f3\u5fc5\u5927\u5bb6\u662f\u6ca1\u6709\u4ec0\u4e48\u95ee\u9898\u7684\u3002\n\n\u6240\u4ee5\u53ea\u9700\u8981\u8bc1\u660e\u4e00\u4e0b\u6700\u540e\u4e00\u79cd\u60c5\u51b5:\n\n\u5047\u8bbe\u4fdd\u7559\u5b50\u6811 $1$\u3002\n\n\u6240\u8c13\u7684\u52a0 $1$\uff0c\u5176\u5b9e\u662f\u4fdd\u7559\u5b50\u6811 $2$ \u4e0a\u7684\u4e00\u4e2a\u6570\u3002\n\n\u9996\u5148\u5bf9\u4e8e\u5f02\u6216\uff0c\u663e\u7136\u4e24\u6570\u4e0d\u4e00\u6837\u5904\u4f4d\u6570\u8d8a\u4f4e\u8d8a\u597d\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53d6\u4e86\u5176\u4e2d\u5b50\u6811 $1$\uff0c\u5219\u5b50\u6811 $2$ \u4fdd\u7559\u7684\u90a3\u552f\u4e00\u4e00\u4e2a\u6570\u5c31\u4f1a\u5411\u5b50\u6811 $1$ \u8fde\u8fb9\u3002\u5047\u8bbe\u5b50\u6811 $2$ \u4fdd\u7559\u4e24\u4e2a\uff0c\u5b50\u6811 $2$ \u5c31\u4f1a\u4ea7\u751f\u81f3\u5c11\u4e00\u4e2a\u6570\u5bf9\uff0c\u800c\u9274\u4e8e\u5b50\u6811 $1$ \u80fd\u4fdd\u7559\u7684\u66f4\u591a\uff0c\u6240\u4ee5\u5176\u5185\u90e8\u4e5f\u4f1a\u81f3\u5c11\u4ea7\u751f\u4e00\u4e2a\uff0c\u8fd9\u6837\u5c31\u4e0d\u80fd\u6ee1\u8db3\u60c5\u51b5\u4e86\u3002\n\n\u5bf9\u4e8e\u5b50\u6811 $1$:\n\n- \u5185\u90e8\u81ea\u5df1\u8fde\u3002\n\n- \u53ea\u6709\u4e00\u4e2a\u6570\u65f6\u4e0e\u5b50\u6811 $2$ \u7559\u4e0b\u7684\u90a3\u6761\u5f62\u6210\u6570\u5bf9\uff0c\u4e14\u5728\u9012\u5f52\u8fc7\u7a0b\u4e2d\u53ea\u4f1a\u51fa\u73b0\u4e00\u6b21\u3002\n\n\u4ee5\u4e0a\u5219\u6ee1\u8db3\u4e86\u9898\u76ee\u8981\u6c42\uff0c\u90a3\u4e48\u53ea\u8981\u63d2\u5165\u52a0\u9012\u5f52\u5373\u53ef\u5b8c\u6210\u4e86\u3002",
        "postTime": 1680873093,
        "uid": 287545,
        "name": "wind_seeker",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1446C Xor Tree"
    },
    {
        "content": "\u5206\u6cbb\u3002\n\n\u4ece\u9ad8\u5230\u4f4e\u679a\u4e3e\u6bcf\u4e00\u4f4d\uff0c\u5047\u8bbe\u8003\u8651\u5230\u4e86 $i$ \u4f4d\uff0c\u628a\u6570\u5b57\u5206\u7ec4\uff0c\u6bcf\u4e00\u7ec4\u4e2d\u6240\u6709\u5143\u7d20\u524d $i$ \u4f4d\u76f8\u540c\uff0c\u5982\u679c\u4e00\u4e2a\u7ec4\u5185\u5143\u7d20\u4e2a\u6570\u5927\u4e8e $1$\uff0c\u90a3\u4e48\u8be5\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f\u548c\u7ec4\u5185\u7684\u5143\u7d20\u8fde\u8fb9\u3002\n\n\u8bbe $div(a,i)$ \u8868\u793a\u8003\u8651\u4e86\u524d $i$ \u4f4d\u4f7f\u5e8f\u5217 $a$ \u6784\u9020\u51fa\u6765\u7684\u56fe\u662f\u4e00\u68f5\u6811\u80fd\u4fdd\u7559\u7684\u6700\u5927\u5143\u7d20\u4e2a\u6570\u3002\n\n\u5982\u679c $a$ \u7684\u5927\u5c0f\u4e3a $1$\uff0c\u90a3\u4e48 $div(a,i)=1$\u3002\n\n\u5426\u5219\u5c06\u4e00\u4e2a\u5927\u7ec4 $a$ \u5206\u6210\u4e24\u4e2a\u5c0f\u7ec4\uff0c\u5c06 $i$ \u4f4d\u4e3a $0$ \u7684\u6570\u5206\u5230 $x$ \u7ec4\u4e2d\uff0c\u4e3a $1$ \u7684\u6570\u5206\u5230 $y$ \u7ec4\u4e2d\u3002\n\n\u5982\u679c $x$ \u4e3a\u7a7a\uff0c$div(a,i)=div(y,i-1)$\uff1b\n\n\u5982\u679c $y$ \u4e3a\u7a7a $div(a,i)=div(y,i-1)$\uff1b\n\n\u5426\u5219\uff0c$div(a,i)=\\max(div(x,i-1),div(y,i-1))+1$\uff0c\u610f\u5473\u7740 $x,y$ \u4e2d\u5176\u4e2d\u4e00\u4e2a\u96c6\u5408\u53ea\u80fd\u4fdd\u7559\u4e00\u4e2a\u5143\u7d20\uff0c\u56e0\u4e3a\u5982\u679c\u4e24\u4e2a\u96c6\u5408\u4e2d\u90fd\u6709\u8d85\u8fc7 $2$ \u4e2a\u5143\u7d20\uff0c\u91cd\u8fb9\u6570\u91cf\u5c31\u4f1a\u5927\u4e8e $1$\uff0c\u800c\u56fe\u5982\u679c\u662f\u6811\u5fc5\u987b\u4fdd\u8bc1\u91cd\u8fb9\u6709\u4e14\u4ec5\u6709\u4e00\u6761\u3002\n\n```cpp\nint div(vector<int>a,int p)\n{\n\tif((int) a.size()==1) return 1;\n\tvector<int>x,y;\n\tfor(auto &i: a)\n\t\tif(i&(1<<p)) x.push_back(i);\n\t\telse y.push_back(i);\n\tif(y.empty()) return div(x,p-1);\n\tif(x.empty()) return div(y,p-1);\n\treturn max(div(x,p-1),div(y,p-1))+1;\n}\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tvector<int>a(n);\n\trep(i,0,n-1) scanf(\"%d\",&a[i]);\n\tprintf(\"%d\",n-div(a,30));\n\treturn 0;\n}\n```\n",
        "postTime": 1664963665,
        "uid": 571634,
        "name": "hgzxwzf",
        "ccfLevel": 7,
        "title": "CF1446C"
    },
    {
        "content": "\u6211\u4eec\u628a\u95ee\u9898\u8f6c\u5316\u4e3a\u5220\u6389\u82e5\u5e72\u4e2a\u6570\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u56fe\u4e2d\u53ea\u6709\u4e00\u4e2a\u8054\u901a\u5757\uff0c\u663e\u7136\u8fd9\u4e2a\u8fde\u901a\u5757\u4e0d\u4f1a\u4e3a\u4e00\u4e2a\u73af\uff0c\u6240\u4ee5\u95ee\u9898\u8f6c\u5316\u540e\u4e0e\u8f6c\u5316\u524d\u7b49\u4ef7\n\n\u5c06\u6bcf\u4e2a\u6570\u63d2\u5165\u4e00\u68f501trie\n\n\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e\u4efb\u610f\u8282\u70b9\uff0c\u82e5\u5de6\u513f\u5b50\u548c\u53f3\u513f\u5b50\u7684$siz$\u90fd\u5927\u4e8e$1$\uff0c\u5219\u4f1a\u5f62\u6210\u4e24\u4e2a\u5b50\u56fe\uff08\u4e24\u4e2a\u513f\u5b50\u4e4b\u5185\u7684\u6570\u5b50\u4e92\u76f8\u8fde\u8fb9\uff09\n\n\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u5220\u9664\u4e00\u4e9b\u8282\u70b9\uff0c\u4f7f\u67d0\u4e00\u513f\u5b50\u7684$siz=1$\uff0cDP\u89e3\u51b3\u5373\u53ef\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\nint n, s, cnt, dig[31], rt, tot;\nstruct node {\n    int son[2], siz;\n} a[6000011];\nvoid ins(int &k, int w) {\n    if(!k) k = ++tot;\n    a[k].siz++;\n    if(!w) return;\n    ins(a[k].son[dig[w]], w-1);\n}\nint f[6000011]; //f[i]\u5b58\u4ee5i\u4e3a\u6839\u7684\u5b50\u6811\u81f3\u5c11\u9700\u8981\u5220\u9664\u591a\u5c11\u4e2a\u6570\nvoid dfs(int k, int w) {\n    if(!k || !w) return;\n    dfs(a[k].son[0], w-1);\n    dfs(a[k].son[1], w-1);\n    f[k] = f[a[k].son[0]] + f[a[k].son[1]];\n    a[k].siz = a[a[k].son[0]].siz + a[a[k].son[1]].siz; //\u66f4\u65b0siz\n    if(a[a[k].son[0]].siz > 1 && a[a[k].son[1]].siz > 1) {\n        if(a[a[k].son[0]].siz > a[a[k].son[1]].siz) {\n            a[k].siz -= a[a[k].son[1]].siz - 1;\n            f[k] += a[a[k].son[1]].siz - 1;\n        }\n        else {\n            a[k].siz -= a[a[k].son[0]].siz - 1;\n            f[k] += a[a[k].son[0]].siz - 1;\n        }\n    } //\u5982\u679c\u5de6\u53f3\u513f\u5b50\u7684siz\u90fd>1,\u5c31\u5c06siz\u8f83\u5c0f\u7684\u513f\u5b50siz\u51cf\u4e3a1\n}\nint main() {\n    scanf(\"%d\", &n);\n    for(int i = 1; i <= n; i++) {\n        scanf(\"%d\", &s); cnt = 0;\n        memset(dig, 0, sizeof(dig));\n        while(s) {\n            dig[++cnt] = s % 2;\n            s /= 2;\n        }\n        ins(rt, 30);\n    } //01trie\u5efa\u6811\n    dfs(rt, 30);\n    cout << f[rt] << endl;\n    return 0;\n}\n```",
        "postTime": 1605595777,
        "uid": 14559,
        "name": "AFOier",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1446C \u3010Xor Tree\u3011"
    },
    {
        "content": "### 01 Trie \u597d\u9898\n\u840c\u65b0\u521a\u542c\u8bf401 trie,\u5c31\u9047\u5230\u8fd9\u4e2a\u9898.\n\n#### \u5927\u6982\u7ffb\u8bd1\u4e00\u4e0b\n\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217$A$,\u5bf9\u4e8e\u6bcf\u4e00\u4e2a$i$,\u5728\u5269\u4f59\u7684\u5143\u7d20\u4e2d\u9009\u62e9\u4e00\u4e2a\u548c$a[i]$\u5f02\u6216\u503c\u6700\u5c0f\u7684$a[j]$,\u7136\u540e\u7ed9\u8fd9\u4e24\u4e2a\u70b9\u4e4b\u95f4\u8fde\u4e00\u6761\u65e0\u5411\u8fb9.\n\n\u663e\u7136\u8fd9\u5f20\u56fe\u53ef\u80fd\u6709\u73af\u6216\u8005\u4e0d\u8fde\u901a.\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5220\u6389\u4e00\u4e9b\u5e8f\u5217\u4e2d\u7684\u5143\u7d20,\u4f7f\u5f97\u5269\u4e0b\u7684\u5143\u7d20\u7ec4\u6210\u7684\u56fe\u662f\u4e00\u68f5\u6811.\n\n\n\u6211\u4eec\u5148\u5bf9\u4e8e\u539f\u5e8f\u5217\u5efa01trie,\u7136\u540e\u53d1\u73b0\u8fde\u8fb9\u7684\u60c5\u51b5\u80af\u5b9a\u662f\u67d0\u4e00\u4e2a\u8282\u70b9\u7684\u4e24\u68f5\u5b50\u6811\u4e4b\u95f4.\n\n\u7136\u540e\u5bf9\u4e8esize\u5927\u4e8e1\u7684\u5b50\u6811,\u4ed6\u4eec\u80af\u5b9a\u53ea\u4f1a\u5728\u5b50\u6811\u5185\u8fde\u8fb9,\u4e24\u4e2a\u5b50\u6811\u5c31\u5f62\u6210\u4e86\u4e24\u4e2a\u8054\u901a\u5757,\u80af\u5b9a\u662f\u4e0d\u884c\u7684.\n\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u8ba9\u4e00\u4e2a\u5b50\u6811size\u4e3a1\n\n\u800c\u8fd9\u4e2a\u53ef\u4ee5\u76f4\u63a5\u6811\u5f62dp\u6c42\u89e3.\u7ee7\u7eed\u89c1\u4ee3\u7801\u5427..\n```cpp\n#include <vector>\n#include <cstdio>\n#include <cctype>\n#include <utility>\n#include <cstring>\n#include <cassert>\n#include <iostream>\n#include <algorithm>\n#define R register\n#define I inline \n#define int long long\n#define ll long long\n#define pll pair<ll,ll>\n#define rep(i,a,b) for(R int i=a;i<=b;i++)\n#define per(i,a,b) for(R int i=a;i>=b;i--)\nusing namespace std;\ntemplate <class T>\ninline void read(T &x) {\n    x = 0;\n    char ch = getchar(), w = 0;\n    while (!isdigit(ch)) w = (ch == '-'), ch = getchar();\n    while (isdigit(ch)) x = (x << 1) + (x << 3) + (ch ^ 48), ch = getchar();\n    x = w ? -x : x;\n    return;\n}\nconst int N =2e5+50;const int lg=30;\nnamespace Trie\n{\n    int f[N*lg],sz[N*lg],son[N*lg][2],rt,cnt;\n    I void init(){cnt=1;rt=1;}\n    I void insert(int x)\n    {\n        int now =rt;sz[now]++;\n        per(i,30,1)\n        {\n            int opt= (x>>i)&1;\n            \n            if(!son[now][opt])son[now][opt]=++cnt;\n            now=son[now][opt];sz[now]++;\n        }\n\n    }  \n    I void dfs(int now )\n    {\n        if(now==0){f[now]=0;return ;}\n        int lc=son[now][0];int rc=son[now][1];\n        dfs(lc);dfs(rc);\n        if(!lc)f[now]=f[rc];\n        else\n        if(!rc)f[now]=f[lc];\n        else\n                f[now]=min(f[lc]+sz[rc]-1,f[rc]+sz[lc]-1);\n    }\n}\nsigned main()\n{\n    int n;read(n);\n    Trie::init();\n    rep(i,1,n)\n    {\n        int x;read(x);\n        Trie::insert(x);\n    }\n    Trie::dfs(1);\n    cout<<Trie::f[1]<<endl;\n    return 0;\n}\n```\n\n",
        "postTime": 1605667634,
        "uid": 231136,
        "name": "\u51e0\u4f55\u4e4b\u821e\u4e36",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1446C \u3010Xor Tree\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u662f\u5b58\u5728\u4e0d\u752801-trie\u7684\u5199\u6cd5\u7684\u3002\n\n\u6211\u4eec\u8003\u8651\u5bf9\u6240\u6709\u6570\u6309\u4e8c\u8fdb\u5236\u4f4d\u5206\u7ec4\uff0c\u90a3\u4e48\u5220\u5b8c\u6570\u540e\u7684\u6700\u597d\u7ed3\u679c\u4e00\u5b9a\u662f\uff1a\u67d0\u4e00\u7ec4\u7684\u70b9\u6570\uff0c\u52a0\u4e0a\u6bd4\u5b83\u5927\u7684\u7ec4\u6570\uff0c\u5982\u679c\u5b83\u4e0d\u662f\u6700\u5c0f\u7684\u4e00\u7ec4\uff0c\u518d\u52a0\u4e0a1\u3002\u6240\u4ee5\u6211\u4eec\u679a\u4e3e\u6bcf\u4e00\u4e2a\u7ec4\u5bfb\u627e\u7b54\u6848\u3002\n\n![](https://pic.yuntu.ru/2020/12/11/image0161b695a2771349.png)\n\n\u4f46\u662f\u8fd9\u4e2a\u7ec4\u5185\u90e8\u4e0d\u4e00\u5b9a\u6784\u6210\u4e00\u68f5\u6811\uff0c\u6240\u4ee5\u7ec4\u5185\u4e5f\u9700\u8981\u5220\u9664\u90e8\u5206\u6570\u6765\u6784\u6210\u6811\u3002\u800c\u8fd9\u53ea\u9700\u8981\u5220\u53bb\u7ec4\u5185\u6bcf\u4e2a\u6570\u6700\u9ad8\u4f4d\u76841\uff0c\u7136\u540e\u9012\u5f52\u4e0b\u53bb\u5373\u53ef\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 2e5 + 5;\nint A[MAXN];\nint bl(int x) { return 32 - (x == 0 ? 32 : __builtin_clz(x)); } // \u4e8c\u8fdb\u5236\u957f\u5ea6\nvoid d1(int &x) { x ? x -= (1 << (bl(x) - 1)) : 0; } // \u5220\u9664\u6700\u9ad8\u4f4d\u76841\nint solve(int A[], int n)\n{\n    int *B = new int[n], *nxt = new int[n];\n    if (n == 1)\n        return 1;\n    int last = 0, cnt = 1, cur, ma = 0;\n    for (int i = 0; i < n - 1; ++i)\n        if (bl(A[i]) != bl(A[i + 1]))\n            nxt[last] = i + 1, last = i + 1, cnt++;\n    nxt[last] = n;\n    cur = cnt;\n    for (int i = 0; i < n; i = nxt[i])\n    {\n        cur--;\n        copy(A + i, A + nxt[i], B);\n        for_each(B, B + nxt[i] - i, d1);\n        int extra = solve(B, nxt[i] - i);\n        ma = max(cur + extra + (i != 0), ma);\n    }\n    delete[] B;\n    delete[] nxt;\n    return ma;\n}\nint main()\n{\n    int n;\n    cin >> n;\n    for (int i = 0; i < n; ++i)\n        cin >> A[i];\n    sort(A, A + n);\n    cout << n - solve(A, n);\n    return 0;\n}\n```",
        "postTime": 1607658374,
        "uid": 70304,
        "name": "Pecco",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1446C \u3010Xor Tree\u3011"
    },
    {
        "content": "\u6839\u636e\u5957\u8def\uff0c\u8fd9\u79cd\u9898\u5e94\u8be5\u7528\u5b57\u5178\u6811\u6765\u505a\n\n\u6ee1\u8db3\u7684\u6761\u4ef6\u662f\u5b58\u5728\u4e14\u53ea\u5b58\u5728\u4e00\u5bf9$(i,j)$\uff0c$a_i \\space xor \\space a_j$\u7684\u503c\u5bf9\u53cc\u65b9\u90fd\u662f\u6700\u5c0f\u7684\n\n\u90a3\u4e48\u8be2\u95ee\u7684\u65f6\u5019\uff0c\n$$\nquery(p)=\\begin{aligned}\n1,lson_p=empty,rson_p=empty\\\\\nquery(lson_p),lson_p \\neq empty,rson_p=empty\\\\\nquery(rson_p),lson_p=empty,rson_p \\neq empty\\\\\nmax(query(lson_p),query(rson_p))+1,lson_p \\neq empty,rson_p \\neq empty\\\\\n\\end{aligned}\n$$\n\n\u524d\u4e09\u4e2a\u67ff\u5b50\u90fd\u4e0d\u89e3\u91ca\uff0c\u5c31\u89e3\u91ca\u6700\u540e\u4e00\u4e2a\n\n\u6211\u4eec\u5047\u8bbe\u6709\u4e24\u4e2a\u96c6\u5408\uff1alson\u548crson\uff0c\u6700\u5c0f\u7684\u7ed3\u679c\u5c31\u662f\u4e00\u4e2a\u7684\u6700\u4f18\u89e3\u52a0\u4e0a\u53e6\u5916\u91cc\u9762\u90091\u4e2a\uff0c\u8fd9\u6837\u53e6\u5916\u96c6\u5408xor\u5269\u4e0b\u7684\u5f53\u524d\u4e3a\u90fd\u662f1\uff0c\u6240\u4ee5\u4e00\u5b9a\u4e0d\u5f71\u54cd\u7ed3\u679c\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#include<iostream>\n#include<cstdio>\n#define ll long long\nusing namespace std;\n\nconst ll N=200010;\nll n,cnt=1,tree[N*20][2],root=1;\n\ninline ll read(){\n\tll x=0,tmp=1;\n\tchar ch=getchar();\n\twhile(!isdigit(ch)){\n\t\tif(ch=='-') tmp=-1;\n\t\tch=getchar();\n\t}\n\twhile(isdigit(ch)){\n\t\tx=(x<<3)+(x<<1)+(ch^48);\n\t\tch=getchar();\n\t}\n\treturn tmp*x;\n}\n\ninline void Insert(ll val){\n\tll p=root;\n\tfor(ll i=30; i>=0; i--){\n\t\tll x=(val>>i)&1;\n\t\tif(!tree[p][x]) tree[p][x]=++cnt;\n\t\tp=tree[p][x];\n\t}\n}\n\nll query(ll p){\n\tif(!tree[p][0]&&!tree[p][1]) return 1;\n\tif(!tree[p][0]) return query(tree[p][1]);\n\tif(!tree[p][1]) return query(tree[p][0]);\n\treturn max(query(tree[p][0]),query(tree[p][1]))+1;\n}\n\nint main(){\n\tn=read();\n\tfor(ll i=1; i<=n; i++) Insert(read());\n\tcout<<n-query(root)<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1606139832,
        "uid": 27924,
        "name": "xukuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1446C \u3010Xor Tree\u3011"
    }
]