[
    {
        "content": "\u8fd9\u9898\u89c2\u5bdf\u6570\u636e\u8303\u56f4\uff0c\u53d1\u73b0\u4e0en\u6709\u5173\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u4ece\u9ed1\u8272\u68cb\u5165\u624b\u3002\n\n\u5047\u8bbe\u4e0d\u5b58\u5728\u9ed1\u8272\u68cb\uff0c\u90a3\u4e48\u5f88\u5bb9\u6613\u5f97\u5230\u7b54\u6848\u4e3aans=$C_{x+y-2}^{x-1}$ .\n\n\u8bbe $f[i]$ \u8868\u793a\u539f\u70b9\u5230\u7b2c$i$\u4e2a\u9ed1\u8272\u70b9\u7684\u8def\u5f84\u6570\u91cf\u3002\n\n\u7531\u51cf\u6cd5\u539f\u7406\uff0c\u539f\u70b9\u5230\u7b2c$i$\u4e2a\u70b9\u7684\u8def\u5f84\u6570\u91cf\u4e3a$:$\u8def\u5f84\u603b\u6570\u91cf$-$\u7ecf\u8fc7\u9ed1\u8272\u68cb\u7684\u6570\u91cf\u3002\n\n\u7531\u4e58\u6cd5\u539f\u7406\uff0c\u7b2c$j$\u4e2a\u9ed1\u8272\u68cb\u963b\u788d\u901a\u8fc7\u7b2c$i$\u4e2a\u68cb\u7684\u8def\u5f84\u7b49\u4e8e$:$ $f[j]$ * $C_{x_i+y_i-x_j-y_j}^{x_i-x_j}$ \uff0c\u6761\u4ef6\u4e3a $x_i>=x_j$\u5e76\u4e14$y_i>=y_j$.\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$f[i]=C_{x_i+y_i-2}^{x_i-1}-\\sum_{j=1}^{i-1}f[j]*C_{x_i+y_i-x_j-y_j}^{x_i-x_j}$\n\n\uff08\u6761\u4ef6\u4e3a $x_i>=x_j$\u5e76\u4e14$y_i>=y_j$.\uff09\n\n\u6240\u4ee5\u4ee3\u7801\u4e5f\u5f88\u597d\u5199\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define rep(i,a,b) for(int i=a;i<=b;i++)\nusing namespace std;\nconst int N=3e5+50,mod=1e9+7;\nint h,w,n,p[N],inv[N],f[N];\nstruct node{ int x,y; }a[N];\nbool mycmp(node a,node b){ return a.x<b.x||(a.x==b.x&&a.y<b.y); }\nint C(int m,int n){ if(m>n) return 0; return (p[n]*inv[n-m]%mod*inv[m])%mod; }\nint pow(int a,int b){\n\tint res=1;\n\twhile(b){ if(b&1) res=(res*a)%mod; b>>=1; a=(a*a)%mod;}\n\treturn res%mod;\n}\nmain(){\n\tscanf(\"%lld%lld%lld\",&h,&w,&n);\n\trep(i,1,n) scanf(\"%lld%lld\",&a[i].x,&a[i].y);\n\ta[n+1].x=h,a[n+1].y=w;\n\tsort(a+1,a+n+2,mycmp);\n\trep(i,0,N-10) p[i]=(i==0)?1:((p[i-1]*i)%mod),inv[i]=pow(p[i],mod-2);\n\trep(i,1,n+1) f[i]=C(a[i].x-1,a[i].x+a[i].y-2);\n\trep(i,1,n+1) rep(j,1,i-1){\n\t\tif(a[i].x<a[j].x||a[i].y<a[j].y) continue;\n\t\tf[i]-=f[j]*C(a[i].x-a[j].x,a[i].x+a[i].y-a[j].x-a[j].y);\n\t\tf[i]=(f[i]+mod)%mod;\n\t}\n\tprintf(\"%lld\\n\",(f[n+1]+mod)%mod);\n\treturn 0;\n}\n```\n",
        "postTime": 1579263598,
        "uid": 170183,
        "name": "smilke",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF559C \u3010Gerald and Giant Chess\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u548c **\u300cBZOJ4767\u300d\u4e24\u53cc\u624b** \u5176\u5b9e\u662f\u4e00\u6837\u7684\u3002\u4ed6\u4eec\u7684\u533a\u522b\u5728\u4e8e\u79fb\u52a8\u7684\u65b9\u5f0f\u53d1\u751f\u4e86\u6539\u53d8\u3002\n\u9996\u5148\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u767d\u70b9\u7684\u6570\u91cf\u662f\u5f88\u591a\u7684\uff0c\u800c\u9ed1\u70b9\u7684\u6570\u91cf\u5374\u5728\u4e24\u5343\u4ee5\u5185\uff0c\u6240\u4ee5\u6211\u4eec\u80fd\u591f **\u4ece\u9ed1\u70b9\u5165\u624b** \u3002\n\n\u6211\u4eec\u8bbe\u6570\u7ec4f[i]\u8868\u793a\u4ece\u539f\u70b9\u51fa\u53d1\u5230\u8fbe\u7b2ci\u4e2a\u969c\u788d\u70b9\uff0c**\u4e0d\u7ecf\u8fc7\u5176\u4ed6\u969c\u788d\u70b9**\u7684\u8def\u5f84\u6761\u6570\u3002\n\n\u518d\u8bbe\u53e6\u5916\u4e00\u4e2a\u6570\u7ec4g[i][j]\u8868\u793a\u4ecei\u5230j\u7684\u6240\u6709\u8def\u5f84\u6761\u6570\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u4e0d\u96be\u63a8\u5f97\u516c\u5f0f\n\n$f[i]=g[0][i]-\\sum_{j=1}^ig[j][i]*f[j] $\n\n\u8fd9\u4e2a\u516c\u5f0f\u7684\u610f\u601d\u5176\u5b9e\u5c31\u662f\u4ece**\u539f\u70b9\u5230\u8fbe\u9ed1\u70b9i\u7684\u603b\u65b9\u6848\u6570\u51cf\u53bb\u904d\u5386\u65f6\u66f4\u5148\u5230\u8fbe\u7684\u9ed1\u70b9\u7684\u65b9\u6848\u6570**\u3002\u5176\u539f\u56e0\u5728\u4e8e\u5728**\u5230\u8fbe\u8fd9\u4e2a\u9ed1\u70b9\u4e4b\u524d\u5c31\u5df2\u7ecf\u78b0\u5230\u9ed1\u70b9\u7684\u65b9\u6848\u6570\u5df2\u7ecf\u4f5c\u5e9f**\uff0c\u4e0d\u80fd\u8ba1\u5165\u603b\u65b9\u6848\u6570\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\uff0c\u5c31\u4f1a\u51fa\u73b0\u4e00\u4e2a\u95ee\u9898\uff0c\u8fd9\u4e2a\u516c\u5f0f\u548c\u9898\u76ee\u6c42\u89e3\u7684\u5230\u8fbe\u76ee\u6807\u70b9\u7684\u65b9\u6848\u6570\u5e76\u6ca1\u6709\u5173\u7cfb\u3002\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1f\u6211\u4eec\u53ef\u4ee5\u628a\u76ee\u6807\u70b9\u53d8\u6210**\u6700\u540e\u4e00\u4e2a\u9ed1\u70b9**\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e0a\u8ff0\u516c\u5f0f\u6c42\u89e3\u3002\n\n\u63a5\u4e0b\u6765\uff0c\u5c31\u662f\u5148\u5230\u8fbe\u54ea\u4e2a\u9ed1\u70b9\u6211\u4eec\u5e76\u4e0d\u77e5\u9053\uff0c\u6211\u4eec\u53ef\u4ee5**\u6309\u7167x\u548cy\u7684\u589e\u5e8f\u7ed9\u9ed1\u70b9\u6392\u5e8f**\uff0c\u9644\u4e0a\u6b64\u6bb5\u4ee3\u7801\n```cpp\ninline bool cmp(node x,node y)   \n{\n    if(x.x==y.x) return x.y<y.y;\n    return x.x<y.x; \n}\n```\n\u7406\u6e05\u695a\u4e86\u6574\u4e2a\u601d\u8def\uff0c\u6211\u4eec\u73b0\u5728\u6765\u89e3\u51b3f\u6570\u7ec4\u7684\u6c42\u89e3\u3002\n\u5176\u5b9e\uff0c\u6211\u4eec\u80fd\u591f\u53d1\u73b0\uff0c\u6309\u7167\u5982\u9898\u6240\u8ff0\u7684\u8d70\u6cd5\uff0c\u5230\u8fbe\u6bcf\u4e2a\u70b9\u7684\u6b65\u6570\u662f\u4e00\u5b9a\u7684\u6211\u4eec\u53ef\u4ee5\u8bbe\u4ed6\u4e0b\u79fb\u4e86X\u683c\uff0c\u53f3\u79fb\u4e86Y\u683c\uff0c\u800cX\u548cY\u5176\u5b9e\u5c31\u662f**\u5176\u5b9e\u5c31\u662f\u76ee\u6807\u70b9\u7684\u5750\u6807\u51cf\u53bb1**\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u6c42\u51fa\u4ed6\u4e0b\u79fb\u548c\u53f3\u79fb\u7684\u6b65\u6570\uff0c\u90a3\u8fd9\u5c31\u5176\u5b9e\u53ef\u4ee5\u901a\u8fc7**\u7ec4\u5408\u6570**\u6765\u6c42\u89e3\u4e86\uff0c**\u603b\u7684\u6b65\u6570\u4e3aX+Y\uff0c\u4f7f\u7528Y\u6b21B\u5411\u91cf\uff0c\u5176\u4ed6\u4f7f\u7528A\u5411\u91cf**\uff0c\u90a3\u4e48\u603b\u65b9\u6848\u6570\u5c31\u4e3a\n\n$C_{X+Y}^Y$\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u901a\u8fc7\u8fd9\u4e2a\u516c\u5f0f\uff0c\u9010\u6b65\u6c42\u5f97\u5230\u8fbe\u5404\u4e2a\u9ed1\u70b9\u7684\u65b9\u6848\u6570\u3002\u8fd8\u53ef\u4ee5\u89e3\u51b3\u4e24\u4e2a\u9ed1\u70b9\u4e4b\u95f4\u7684\u65b9\u6848\u6570\uff0c\u8bbe\u8d77\u70b9\u5230\u7b2c\u4e00\u4e2a\u9ed1\u70b9\u5206\u522b\u8d70\u7684\u6b65\u6570\u4e3a$X_{1}$\u3001$Y_{1}$\uff0c\u7b2c\u4e8c\u4e2a\u9ed1\u70b9\u4e3a$X_{2}$\u3001$Y_{2}$\u3002\n\n\u90a3\u4e48\u65b9\u6848\u6570\u4e3a\n\n$C_{X_{2}-X_{1}+Y_{2}-Y_{1}}^{X_{2}-X_{1}}$\n\n\u5728\u4e4b\u540e**\u7ed3\u5408\u6c42\u89e3\u65b9\u6848\u6570\u7684\u516c\u5f0f\u548c\u7b2c\u4e00\u4e2a\u516c\u5f0f\u7ed3\u5408**\uff0c\u8fd9\u9053\u9898\u5c31\u80fd\u8fc7\u4e86\u3002\n\n\u6700\u540e\uff0c\u9644\u4e0aAC\u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll; \nconst int N=2020,M=1000000,MAX=1000010,MOD=1000000007;\nstruct node{\n    int x,y;\n}a[N];\nint n,h,w;\nll f[N],fac[MAX],inv[MAX];\n//\u4e3a\u9ed1\u70b9\u6392\u5e8f \ninline bool cmp(node x,node y)   \n{\n    if(x.x==y.x) return x.y<y.y;\n    return x.x<y.x; \n}\n//\u6a21\u677f\u5feb\u901f\u5e42 \ninline ll power(ll x,ll ent)\n{\n    ll ans=1;\n    while(ent){\n        if(ent&1) ans=ans*x%MOD;\n        ent>>=1;\n        x=x*x%MOD;\n    }\n    return ans%MOD;\n}\n//\u7ec4\u5408\u6570\u8f83\u5927\uff0c\u7528\u4e58\u6cd5\u9006\u5143\u6c42\u89e3 \ninline ll C(ll x,ll y)     \n{\n    if(x<y) return 0;\n    return fac[x]*inv[y]%MOD*inv[x-y]%MOD;\n}\n \nint main()\n{\n    scanf(\"%d%d%d\",&h,&w,&n);\n    //\u5230\u8fbe\u76ee\u7684\u5730\u7684\u9700\u8981\u4e0b\u79fb\u548c\u53f3\u79fb\u7684\u6b65\u6570 \n\th=h-1; w=w-1;\n    for(int i=1;i<=n;i++){\n        scanf(\"%d%d\",&a[i].x,&a[i].y);\n        //\u76f4\u63a5\u5c06\u5c31\u7528\u539f\u6570\u7ec4\u4fdd\u5b58\u6b65\u6570\u4e86\n\t\ta[i].x-=1; a[i].y-=1;\t \n    }\n    a[0].x=a[0].y=0;\n    //\u5c06\u76ee\u7684\u5730\u52a0\u5165\u9ed1\u70b9 \n    a[++n].x=h; a[n].y=w;\n    //\u6392\u5e8f\u4f18\u5148\u7ea7 \n    sort(a+1,a+n+1,cmp); \n    fac[0]=1;\n    //\u6c42\u89e3\u4e58\u6cd5\u9006\u5143 \n    for(ll i=1;i<=M;i++) \t\t \n        fac[i]=1ll*fac[i-1]*i%MOD;\n    inv[0]=1;inv[M]=power(fac[M],MOD-2);\n    for(ll i=M-1;i>=1;i--) \n        inv[i]=1ll*inv[i+1]*(i+1)%MOD;\n    //\u6c42\u89e3\u7b54\u6848 \n    for(int i=1;i<=n;i++){\n    \t//\u5230\u8fbe\u6bcf\u4e2a\u9ed1\u70b9\u7684\u65b9\u6848\u6570 \n        f[i]=C(a[i].x+a[i].y,a[i].x);\n        if(f[i]==0) continue;\n        for(int j=1;j<i;j++){\n        \t//\u4ece\u524d\u9762\u9ed1\u70b9\u8f6c\u79fb\u8fc7\u6765\u7684\u65b9\u6848\u6570\uff0c\u603b\u65b9\u6848\u6570\u7b49\u4e8e\u5230\u8fbe\u524d\u9762\u9ed1\u70b9\u7684\u65b9\u6848\u6570\u4e58\u8f6c\u79fb\u7684\u65b9\u6848\u6570 \n        \t//\u5230\u8fbe\u73b0\u5728\u9ed1\u70b9\u7684\u65b9\u6848\u6570\u8981\u51cf\u53bb\u5230\u8fbe\u524d\u9762\u9ed1\u70b9\u7684\u603b\u65b9\u6848\u6570\uff0c\u8fd9\u91cc\u53ef\u80fd\u6709\u70b9\u7ed5\uff0c\u7a0d\u5fae\u7406\u89e3\u4e00\u4e0b \n            f[i]-=(f[j]*C(a[i].x-a[j].x+a[i].y-a[j].y,a[i].x-a[j].x))%MOD;\n            f[i]%=MOD;\n            f[i]+=MOD; f[i]%=MOD;\n        } \n    } \n    //\u6700\u540e\u7b54\u6848\u5c31\u662ff[n] \n    printf(\"%lld\\n\",f[n]);\n    return 0;\n} \n```\n\n\n\n",
        "postTime": 1596457739,
        "uid": 258460,
        "name": "Booksnow",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF559C \u3010Gerald and Giant Chess\u3011"
    },
    {
        "content": "\n\u5982\u679c\u6ca1\u6709\u4e0d\u80fd\u8d70\u5230\u7684\u70b9\uff0c\u8fd9\u9053\u9898\u5c31\u975e\u5e38\u7b80\u5355\u4e86\u3002\u6211\u4eec\u53ea\u9700\u5411\u4e0b\u8d70$h-1$\u6b65\uff0c\u5411\u53f3\u8d70$w-1$\u6b65\uff0c\u5c31\u53ef\u5230\u8fbe\u53f3\u4e0b\u89d2\u3002\u5728\u8fd9$h+w-2$\u6b65\u4e2d\uff0c\u6211\u4eec\u9009$h-1$\u5411\u4e0b\u8d70\uff0c\u90a3\u4e48\u7b54\u6848\u4e3a$C_{h+w-2}^{h-1}$\u3002\n\n\u4f46\u662f\uff0c\u68cb\u76d8\u4e2d\u6709\u4e9b\u70b9\u662f\u4e0d\u80fd\u8d70\u7684\uff0c\u6211\u4eec\u8003\u8651\u7528\u5bb9\u65a5\u539f\u7406\u53bb\u9664\u591a\u4f59\u65b9\u6848\uff0c\u5373\n\n$$\nAns=C_{h+w-2}^{h-1}-P_1+P_2+..+(-1)^n * P_n\n$$\n\n\u5176\u4e2d\uff0c$P_i$\u7ecf\u8fc7$i$\u4e2a\u4e0d\u80fd\u8d70\u7684\u70b9\u7684\u8def\u5f84\uff0c\u4f46\u662f\uff0c\u6b64\u9898$n<=2000$\uff0c\u5bb9\u65a5\u539f\u7406\u76f4\u63a5\u70b8\u6389\u3002\n\n\u4f46\u4e0a\u9762\u7684\u601d\u8def\u7ed9\u4e86\u6211\u4eec\u542f\u793a\uff0c\u8bbe$f_i$\u8868\u793a\u4ece$(1,1)$\u8d70\u5230\u7b2c$i$\u4e2a\u4e0d\u80fd\u8d70\u7684\u70b9\uff0c\u4e14\u4e0d\u7ecf\u8fc7\u5176\u5b83\u4e0d\u80fd\u8d70\u7684\u70b9\u7684\u65b9\u6848\u6570\u3002\u90a3\u4e48\u6709\uff1a\n\n![1.PNG](https://i.loli.net/2019/08/23/kyqlICQNmKEbGSs.png)\n\n\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\uff0c\u8f6c\u79fb\u65f6\u4e0e\u4e0b\u6807\u5148\u540e\u987a\u5e8f\u6709\u5173\uff0c\u6211\u4eec\u5148\u5bf9\u4e0b\u6807\u6392\u5e8f\uff0c\u518d\u8fdb\u884c\u8ba1\u7b97\u3002\n\n\u6211\u4eec\u5c06\u7ec8\u70b9\u4e5f\u770b\u6210\u4e00\u4e2a\u4e0d\u80fd\u8d70\u5230\u7684\u70b9\uff0c\u7b54\u6848\u5c31\u4e3a$f_{n+1}$\n\n\n\u9644\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n#define Mod 1000000007\n\nconst int MAXN = 2000 , MAXDEX = 100000;\nint h , w , n , f[ MAXN + 5 ];\nint Fac[ 2 * MAXDEX + 5 ] , Inv[ 2 * MAXDEX + 5 ];\nstruct node{\n    int x , y;\n    bool operator < ( const node &Other ) {\n        if( x < Other.x )\n            return 1;\n        if( x == Other.x && y < Other.y )\n            return 1;\n        return 0;\n    }\n}a[ MAXN + 5 ];\n\nint Quick_pow( int x , int po ) {\n    int Ans = 1;\n    while( po ) {\n        if( po % 2 )\n            Ans = 1ll * Ans * x % Mod;\n        x = 1ll * x * x % Mod;\n        po /= 2;\n    }\n    return Ans;\n}\nvoid Init( ) {\n    int M = 2 * max( h , w );\n    Fac[ 0 ] = 1;\n    for( int i = 1 ; i <= M ; i ++ )\n        Fac[ i ] = 1ll * Fac[ i - 1 ] * i % Mod;\n    Inv[ M ] = Quick_pow( Fac[ M ] , Mod - 2 );\t\t//\u8d39\u9a6c\u5c0f\u5b9a\u7406\u7b97\u51fa\u9636\u4e58\u6700\u540e\u4e00\u9879\u9006\u5143\n    for( int i = M - 1 ; i >= 0 ; i -- )\n        Inv[ i ] = 1ll * Inv[ i + 1 ] * ( i + 1 ) % Mod;\n    \n    /*for( int i = 1 ; i <= M ; i ++ )\n        printf(\"%d %d\\n\",Fac[ i ],Inv[ i ]);*/\n}\n\nint Combination( int n , int m ) {\t//\u6839\u636e\u7ec4\u5408\u6570\u5b9a\u4e49\n    if( n < m ) return 0;\n    return 1ll * Fac[ n ] * Inv[ n - m ] % Mod * Inv[ m ] % Mod;\n}\n\nint main( ) {\n    scanf(\"%d %d %d\",& h , &w , &n );\n    for( int i = 1 ; i <= n ; i ++ )\n        scanf(\"%d %d\",&a[ i ].x,&a[ i ].y);\n    n ++;\n    a[ n ].x = h , a[ n ].y = w;\n    sort( a + 1 , a + n + 1 );\n    Init( );\n    \n    for( int i = 1 ; i <= n ; i ++ ) {\n        f[ i ] = Combination( a[ i ].x + a[ i ].y - 2 , a[ i ].x - 1 );\n        for( int j = 1 ; j <= i - 1 ; j ++ )\n            f[ i ] = ( ( 1ll * f[ i ] - 1ll * f[ j ] * Combination( a[ i ].x + a[ i ].y - a[ j ].x - a[ j ].y , a[ i ].x - a[ j ].x ) % Mod ) % Mod + Mod ) % Mod;\n    }\n    printf(\"%d\\n\",f[ n ]);\n    return 0;\n}\n```\n",
        "postTime": 1566520225,
        "uid": 123802,
        "name": "chihik",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF559C \u3010Gerald and Giant Chess\u3011"
    },
    {
        "content": "\u8ba1\u6570\u7c7bdp\u95ee\u9898\u3002\n\n\u9996\u5148\u8003\u8651\u6ca1\u6709\u9ed1\u683c\u5b50\u7684\u9650\u5236\u7684\u95ee\u9898\u3002\u6b64\u65f6\u5c31\u662f\u4e00\u4e2a $H\\times W$\u7684\u68cb\u76d8\uff0c\u4ece\u5de6\u4e0a\u89d2\u8d70\u5230\u53f3\u4e0b\u89d2\u7684\u65b9\u6848\u6570\uff0c\u4e3a $C_{H+W-2}^{H-1}$\u3002\n\n\u9898\u76ee\u4e2d\u8981\u6c42\u5bf9\u7ed3\u679c\u6a21\u6570\u3002\u8bbe $p=10^9+7$\uff0c\u56e0\u6b64\u53ef\u4ee5\u5206\u522b\u5c06\u5206\u5b50 $n!\\bmod p$\u3001\u5206\u6bcd $m!(n-m)!\\bmod p$\uff0c\u7136\u540e\u5feb\u901f\u5e42\u8ba1\u7b97\u5206\u6bcd\u7684\u4e58\u6cd5\u9006\u5143\uff0c\u5373$\\left(m!(n-m)!\\right)^{p-2}$\u3002\u6c42\u7ec4\u5408\u6570\u7684\u65f6\u5019\u5c06\u5206\u5b50\u4e58\u4ee5\u5206\u6bcd\u7684\u4e58\u6cd5\u9006\u5143\uff0c\u5373\u53ef\u5f97\u5230\u7ec4\u5408\u6570\u3002\u9884\u5904\u7406\u7684\u590d\u6742\u5ea6\u4e3a $O(n)$\u3002\n\n\u6c42\u9636\u4e58\u4ee5\u53ca\u9006\u5143\uff1a\n\n```\njc[0]=1,jcinv[0]=1;\nfor(int i=1;i<=200000;i++){\n\tjc[i]=jc[i-1]*i%mod;\n\tjcinv[i]=power(jc[i],mod-2);\n}\n```\n\n\u6c42\u7ec4\u5408\u6570\uff1a\n\n```\nint C(int n,int m){\n\treturn jc[n]*jcinv[m]%mod*jcinv[n-m]%mod;\n}\n```\n\n\u73b0\u5728\u9898\u76ee\u52a0\u4e0a\u4e86\u9ed1\u683c\u5b50\u7684\u9650\u5236\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u6c42\u51fa**\u4ece\u5de6\u4e0a\u89d2\u5230\u53f3\u4e0b\u89d2\u7ecf\u8fc7\u4e86\u81f3\u5c11\u4e00\u4e2a\u9ed1\u8272\u683c\u5b50\u7684\u65b9\u6848\u6570**\uff0c\u4e8c\u8005\u76f8\u51cf\u5c31\u662f\u7b54\u6848\u3002\n\n\u628a\u6240\u6709\u9ed1\u8272\u683c\u5b50\u6309\u7167\u884c\u3001\u5217\u9012\u589e\u7684\u987a\u5e8f\u6392\u5e8f\u3002 **\u8bbe $f_i$\u8868\u793a\u4ece\u5de6\u4e0a\u89d2\u8d70\u5230\u7b2c$i$\u4e2a\u9ed1\u8272\u683c\u5b50\uff0c\u5e76\u4e14\u9014\u4e2d\u4e0d\u7ecf\u8fc7\u5176\u4ed6\u9ed1\u8272\u683c\u5b50\u7684\u8def\u7ebf\u6570\u3002** \u5047\u8bbe\u5de6\u4e0a\u89d2\u662f\u7b2c$0$\u4e2a\u9ed1\u8272\u683c\u5b50\uff0c\u53f3\u4e0b\u89d2\u662f\u7b2c $N+1$ \u4e2a\u9ed1\u8272\u683c\u5b50\u3002\u8bbe\u7b2c$i$\u4e2a\u9ed1\u8272\u683c\u5b50\u5728 $\\left(x_i,y_i\\right)$\u3002\u6b64\u65f6\u7b54\u6848\u663e\u7136\u4e3a $f_{N+1}$\u3002\n\n\u5c06\u4ece\u5de6\u4e0a\u89d2\u5230 $(x_i,y_i)$\u4e2d\uff0c\u81f3\u5c11\u7ecf\u8fc7\u4e00\u4e2a\u9ed1\u8272\u683c\u5b50\u7684\u8def\u7ebf\u5206\u4e3a\u4e24\u90e8\u5206\u3002\u8003\u8651\u5728\u7b2c$i$\u4e2a\u9ed1\u8272\u683c\u5b50\u4e4b\u524d\u7684\u4efb\u610f\u4e00\u4e2a\u9ed1\u8272\u683c\u5b50$j$\uff0c\u4f5c\u4e3a\u4ece\u5de6\u4e0a\u89d2\u5230 $(x_i,y_i)$ \u7ecf\u8fc7\u7684**\u7b2c\u4e00\u4e2a**\u9ed1\u8272\u683c\u5b50\u3002\u6b64\u65f6$j$\u5c06\u8def\u7ebf\u5206\u4e3a\u4e86\u4e24\u90e8\u5206\uff0c\u7b2c\u4e00\u90e8\u5206\u662f\u4e0d\u7ecf\u8fc7\u4efb\u4f55\u9ed1\u68cb\u7684\uff0c\u5373$f_j$\uff1b\u7b2c\u5206\u662f\u4ece$j$\u5230$i$\u7684\u6240\u6709\u8def\u7ebf\u3002\u6839\u636e\u5206\u6b65\u4e58\u6cd5\u539f\u7406\uff0c\u4e24\u8005\u76f8\u4e58\u5c31\u5f97\u5230\u4e86**\u4ee5\u7b2c$j$\u4e2a\u9ed1\u683c\u5b50\u4f5c\u4e3a\u5230\u7b2c$i$\u4e2a\u9ed1\u683c\u7684\u8def\u7ebf\u4e2d\u7684\u7b2c\u4e00\u4e2a\u9ed1\u683c\u5b50**\u7684\u6240\u6709\u8def\u7ebf\u3002\n\n\u6839\u636e\u52a0\u6cd5\u539f\u7406\uff0c\u679a\u4e3e\u6bcf\u4e2a$j(j<i)$\uff0c\u6309\u7167\u4e0a\u8ff0\u65b9\u6cd5\u7d2f\u8ba1\uff0c\u5373\u53ef\u5f97\u5230\u4ece\u5de6\u4e0a\u89d2\u5230\u53f3\u4e0b\u89d2\u7ecf\u8fc7\u4e86\u81f3\u5c11\u4e00\u4e2a\u9ed1\u8272\u683c\u5b50\u7684\u65b9\u6848\u6570\u3002\u7136\u540e\u5c06\u6ca1\u6709\u9650\u5236\u7684\u603b\u65b9\u6848\u6570\u51cf\u53bb\u5373\u53ef\u3002\n\n\u56e0\u6b64 **$f_i$ \u4e3a\u4e0d\u8003\u8651\u9ed1\u8272\u683c\u5b50\u7684\u60c5\u51b5\u4e0b\u7684\u603b\u6570\uff0c\u51cf\u53bb\u4ece\u5de6\u4e0a\u89d2\u5230$j$\u4e4b\u524d\u4e0d\u7ecf\u8fc7\u4efb\u4f55\u4e00\u4e2a\u9ed1\u8272\u683c\u5b50\u7684\u603b\u6570\u4e58\u4ee5\u4ece$j$\u5230$i$\u7684\u8def\u7ebf\u603b\u6570\u3002** \u53ef\u5f97\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\n\n$$\nf_i=\\dbinom{x_{i}-1+y_{i}-1}{x_i-1}-\\sum\\limits_{j=0}^{i-1}f_i\\times\\dbinom{x_i-x_j+y_i-y_j}{x_i-x_j}\\quad(x_j\\leq x_i,y_j\\leq y_i)\n$$\n\n```\nsort(a+1,a+n+1);\na[n+1].x=h,a[n+1].y=w;\nfor(int i=1;i<=n+1;i++){\n\tf[i]=C(a[i].x+a[i].y-2,a[i].x-1);\n\tfor(int j=1;j<i;j++){\n\t\tif(a[j].x>a[i].x||a[j].y>a[i].y)continue;\n\t\tf[i]=(f[i]-(long long)f[j]*C(a[i].x+a[i].y-a[j].x-a[j].y,a[i].x-a[j].x))%mod;\n\t}\n}\n```\n\n\u6700\u540e\u7ed3\u679c\u4e3a $f_{N+1}$.\n\n\u653eAC\u4ee3\u7801\u4ee5\u4f9b\u53c2\u8003\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define x first\n#define y second\nconst int SIZE=2010;\npair<int,int> a[SIZE];\nint h,w,n,f[SIZE],mod=1000000007;\nlong long jc[200010],jcinv[200010];\nint C(int n,int m){return jc[n]*jcinv[m]%mod*jcinv[n-m]%mod;}\nlong long power(long long a,long long b){\n\tlong long c=1;\n\tfor(;b;b>>=1){\n\t\tif(b&1)c=c*a%mod;\n\t\ta=a*a%mod;\n\t}\n\treturn c;\n}\nint main(){\n\tjc[0]=1,jcinv[0]=1;\n\tfor(int i=1;i<=200000;i++){\n\t\tjc[i]=jc[i-1]*i%mod;\n\t\tjcinv[i]=power(jc[i],mod-2);\n\t}\n\tcin>>h>>w>>n;\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d%d\",&a[i].x,&a[i].y);\n\tsort(a+1,a+n+1);\n\ta[n+1].x=h,a[n+1].y=w;\n\tfor(int i=1;i<=n+1;i++){\n\t\tf[i]=C(a[i].x+a[i].y-2,a[i].x-1);\n\t\tfor(int j=1;j<i;j++){\n\t\t\tif(a[j].x>a[i].x||a[j].y>a[i].y)continue;\n\t\t\tf[i]=(f[i]-(long long)f[j]*C(a[i].x+a[i].y-a[j].x-a[j].y,a[i].x-a[j].x))%mod;\n\t\t}\n\t}\n\tcout<<(f[n+1]+mod)%mod<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1604113881,
        "uid": 246979,
        "name": "SalomeJLQ",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF559C \u3010Gerald and Giant Chess\u3011"
    },
    {
        "content": "\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u4ece\u70b9$\\left (x_i,y_i \\right )$\u5230\u70b9$\\left (x_j,y_j \\right )$\u7684\u8def\u5f84\u6570\u4e3a$\\binom{x_j-x_i+y_j-y_i}{x_j-x_i}$\n\n\u4e0d\u8003\u8651\u9ed1\u767d\u683c\u5b50\u7684\u9650\u5236\uff0c\u4ece\u70b9$\\left ( 1,1\\right )$\u5230$(h,w)$\u7684\u8def\u5f84\u5171\u6709$\\binom{h+w-2}{h-1}$\u79cd\u3002\n\n\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u9ed1\u683c\u5b50\uff0c\u90a3\u4e48\u6240\u6709\u7ecf\u8fc7\u5f53\u524d\u9ed1\u683c\u5b50\u5230$(h,w)$\u7684\u8def\u5f84\u90fd\u4e0d\u5408\u6cd5\u3002\n\n\u8003\u8651\u4e24\u90e8\u5206\uff0c\u5373\u4ece$(1,1)\u2192(x_i,y_i)$\u4e0e$(x_i,y_i)\u2192(h,w)$\n\n\u6839\u636e\u4e58\u6cd5\u539f\u7406\uff0c\u4ece\u7ecf\u8fc7\u9ed1\u683c\u5b50$(x_i,y_i)$\u5230$(h,w)$\u7684\u603b\u8def\u5f84\u4e3a\n\n$$\n\\binom{x_i+y_i-2}{x_i-1}\\times \\binom{h-x_i+w-y_i}{h-x_i}\n$$\n\n\u5176\u4e2d\u8981\u6ee1\u8db3$x_i\u2264h,y_i\u2264w$\n\n\u8003\u8651\u4e24\u4e2a\u9ed1\u683c\u5b50\u7684\u60c5\u51b5\uff0c$(x_i,y_i),(x_j,y_j)$\u5176\u4e2d$(x_i,y_i)$\u5728$(x_j,y_j)$\u7684\u524d\u9762\u3002\n\n\u5982\u679c\u4e24\u4e2a\u683c\u5b50\u90fd\u50cf\u524d\u9762\u90a3\u6837\u8ba1\u7b97\uff0c\u5219\u4f1a\u4ea7\u751f\u91cd\u590d\u8ba1\u6570\u3002\n\n\u5373\u4ece$(x_i,y_i)\u2192(x_j,y_j)\u2192(h,w)$\u7684\u8def\u5f84\u4f1a\u7b97\u4e24\u6b21\u3002\n\n\u5982\u679c\u6211\u4eec\u8981\u8fdb\u884c\u5bb9\u65a5\uff0c\u4e0d\u540c\u96c6\u5408\u7684\u4ea4\u5404\u4e0d\u76f8\u540c\uff0c\u5176\u590d\u6742\u5ea6\u662f\u6307\u6570\u7ea7\u7684\u3002\n\n\u6211\u4eec\u8003\u8651$(x_j,y_j)$\u7684\u8ba1\u7b97\n\n\u5982\u679c\u6211\u4eec\u6bcf\u6b21\u8ba1\u7b97\u9ed1\u683c\u5b50\u7684\u65b9\u6848\u65f6\uff0c\u90fd\u628a\u7ecf\u8fc7\u4ed6\u524d\u9762\u7684\u9ed1\u683c\u5b50\u7684\u8def\u5f84\u7ed9\u51cf\u6389\uff0c\u4e0d\u5c31\u4e0d\u4f1a\u4ea7\u751f\u91cd\u590d\u8ba1\u6570\u4e86\u5417\uff1f\n\n\u8bbe$f(i)$\u4e3a\u5728\u4e0d\u7ecf\u8fc7\u524d\u9762\u9ed1\u683c\u5b50\u5230\u7b2c$i$\u4e2a\u9ed1\u683c\u5b50\u7684\u65b9\u6848\u6570\u3002\n\n\u90a3\u4e48\u6709\n$$\nans=\\binom{h+w-2}{h-1}-\\sum_{i=1}^nf(i)\\binom{h-x_i+w-y_i}{h-w_i}\n$$\n\u540c\u7406\u5bf9\u4e8e$f(i)$\u6709\n$$\nf(i)=\\binom{x_i+y_i-2}{x_i-1}-\\sum_{j=1}^{i-1}f(j)\\binom{x_i-x_j+y_i-y_j}{x_i-x_j}\n$$\n\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <algorithm>\n\nusing namespace std;\n\nconst int N = 1e5 + 10,M = 2e3 + 10,mod = 1e9 + 7;\n\ntypedef pair<int,int> PII;\n\nPII a[M];\n\nint f[M];\n\nint fac[N << 1],invfac[N << 1];\n\nint C(int n,int m){return n<m?0:(long long)fac[n]*invfac[m]%mod*invfac[n-m]%mod;}\n\nvoid init(){\n    fac[0]=invfac[0]=invfac[1]=1;\n    for(int i=1;i<=2e5 + 10;i++)fac[i]=(long long)fac[i-1]*i%mod;\n    for(int i=2;i<=2e5 + 10;i++)invfac[i]=(long long)(mod-mod/i)*invfac[mod%i]%mod;\n    for(int i=2;i<=2e5 + 10;i++)invfac[i]=(long long)invfac[i-1]*invfac[i]%mod;\n}\n\nint main(){\n    init();\n    int h,w,n;\n    cin >> h >> w >> n;\n    for (int i = 1; i <= n; i++){\n        cin >> a[i].first >> a[i].second;\n    }\n    sort(a + 1,a + n + 1);\n    a[n + 1].first = h,a[n + 1].second = w;\n    for (int i = 1; i <= n + 1; i++){\n        f[i] = C(a[i].first+a[i].second - 2,a[i].first - 1);\n        for (int j = 1; j < i; j++){\n            if (a[j].first > a[i].first || a[j].second > a[i].second) continue;\n            f[i] = (f[i] - 1ll * f[j] * C(a[i].first-a[j].first+a[i].second-a[j].second,a[i].first-a[j].first) + mod) % mod;\n        }\n    }  \n    cout << (f[n + 1] + mod) % mod;\n    return 0;\n}\n\n```\n",
        "postTime": 1596503606,
        "uid": 317459,
        "name": "RyexAwl",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF559C \u3010Gerald and Giant Chess\u3011"
    },
    {
        "content": "# \u4e00\u9053\u8ba1\u6570\u7c7bDP\u4f8b\u9898~~~\n\n\n------------\n\nps\uff1aP\u515a\u4f3c\u4e4e\u4e0d\u591a\u4e86\u2026\u2026\n\n\u6211\u8fd9\u53ea\u849f\u84bb\u7b2c\u4e00\u6b21\u5199\u9898\u89e3\uff0c\u800c\u4e14\u8ba1\u6570\u7c7bDP\u8fd8\u662f\u65e9\u4e0a\u521a\u5b66\u7684\uff0c\u73b0\u5b66\u73b0\u7528\uff0c\u6216\u8005\u8bf4\u662f\u6240\u8c13\u7684\u201c\u6d45\u8c08\u201d\u4e00\u756a\u5427\uff01\u51b5\u4e14\u8fd9\u9898\u5199\u9898\u89e3\u7684\u4eba\u4f3c\u4e4e\u5e76\u4e0d\u591a\uff08~~\u5927\u4f6c\u4f3c\u4e4e\u4e0d\u5c51\u4e8e\u5149\u4e34\u6b64\u9898~~\uff09\n## \u8fdb\u5165\u6b63\u9898\n - \u9898\u76ee\u5927\u610f\uff1a\u6254\u7ed9\u4f60\u4e00\u4e2ah*w\u7684\u68cb\u76d8\uff0c\u5e76\u7ed9\u5b9an\u7ed9\u4e0d\u53ef\u4ee5\u7ecf\u8fc7\u7684\u683c\u5b50\u7684\u5750\u6807\uff0c\u548c\uff08sang\uff09\u853c\uff08xin\uff09\u53ef\uff08bing\uff09\u4eb2\uff08kuang\uff09\u5730\u8ba9\u4f60\u8ba1\u7b97\u4ece(1,1)\u5f00\u59cb\u8d70\u5230(h,w)\u7684\u5408\u6cd5\u8def\u5f84\u7684\u6761\u6570\uff0c\u7b54\u6848\u5bf9$10^9+7$\u53d6\u6a21\u3002\n \n \u770b\u5b8c\u9898\u540e\uff0c\u5475\uff0c\u7b80\u5355\uff0c\u90fd\u505a\u8fc7\u8fc7\u6cb3\u5352\u8fd9\u79cd\u9898\u5427\uff01\u9012\u63a8\u5728\u624b\uff0c\u5929\u4e0b\u6211\u6709\uff01\uff01\n \u5927\u7b11\u7740\uff0c\u4e0d\u7ecf\u610f\u95f4\u779f\u4e86\u4e00\u4e0b\u6570\u636e\u8303\u56f4\uff0c\u7b11\u5bb9\u77ac\u95f4\u51dd\u56fa\u2026\u2026\n \n - $1<=h,w<=10^{5},1<=n<=2000 $\n \n \u5565\u73a9\u610f\uff1f\n\n\u65e0\u5948\uff0c\u51fa\u95e8\u5de6\u8f6c\uff0c~~\u9003~~\uff01\n\n\u591f\u82f1\u660e\u7684\u9009\u62e9\uff0c\u4f46\u8fd8\u6709\u66f4\u82f1\u660e\u7684\u9009\u62e9\u2014\u2014\u5b66\u4e60\uff01\u6ca1\u9519\uff0c\u5b66\u4e60\uff01\n\n\u597d\u7684\uff0c\u4f9d\u9601\u4e0b\u9ad8\u89c1\uff0c\u6211\u6765\u5b66\u4e60\u4e86\u3002\n\n## \u5b7a\u5b50\u53ef\u6559\uff0c\u542d\u542d\uff0c\u542c\u597d\u4e86(\u5192\u72af)\uff1a\n\n-  \u5018\u82e5\u4f60\u6210\u4e86\u8d85\u4eba\uff0c\u901a\u8fc7\u4e86\u4e4b\u524d\u65e0\u6cd5\u903e\u8d8a\u7684\u683c\u5b50\uff0c\u90a3\u4e48\u4f60\u8d70\u5230\u7ec8\u70b9\u7684\u8def\u5f84\u603b\u6570\u662f\u53ef\u4ee5\u7528\u4e00\u4e2a\u7ec4\u5408\u6570\u641e\u51fa\u6765\u7684\u3002\u4e0d\u4f1a\uff1f\u90a3\u5c31\u5bf9\u4e86\uff0c\u63a5\u7740\u770b\u3002\u4ece\u8d77\u70b9\u8d70\u5230\u7ec8\u70b9\uff0c\u4f60\u5fc5\u7136\u8d70\u4e86$h-1$\u6b65\u5f80\u4e0b\uff0c$w-1$\u6b65\u5f80\u53f3\uff0c\u5bf9\u5427\uff1f\u603b\u6b65\u6570\u5c31\u662f$h+w-2$ ,\u7136\u540e\u60f3\u60f3\u7ec4\u5408\u6570\uff0c\u6574\u6761\u8def\u5f84\u6211\u8d70\u4e86$h-1$\u6b65\u5f80\u4e0b\uff0c\u5269\u4e0b$w-1$\u6b65\u5c31\u786e\u5b9a\u4e86\u3002\u90a3\u4e48\u6362\u79cd\u8bf4\u6cd5\uff0c\u6211\u4ece$h+w-2$\u6b65\u4e2d\u9009$h-1$\u6b65\u5f80\u4e0b\uff0c\u5c31\u53ef\u4ee5\u786e\u5b9a\u552f\u4e00\u7684\u4e00\u6761\u8def\u5f84\uff0c\u5219\u603b\u65b9\u6848\u6570\u4e3a$C_{h+w-2}^{h-1}$\u79cd\uff0c\u540c\u7406\uff0c\u8d70$w-1$\u6b65\u5f80\u4e0b\uff0c\u4e5f\u53ef\u4ee5\u786e\u5b9a\u552f\u4e00\u7684\u4e00\u6761\u8def\u5f84\uff0c\u6709$C_{h+w-2}^{w-1}$\u79cd\u65b9\u6848\u6570\u3002\u4e24\u8005\u7b49\u4ef7\u3002\uff08\u7b49\u4ef7\uff1f\u8d28\u7591\u8bf7\u4e86\u89e3$C_n^m=C_n^{n-m}$\uff09\n\n- \u4f46\u662f\uff0c\u68cb\u76d8\u4e2d\u6709\u4e9b\u70b9\u662f\u4e0d\u80fd\u8d70\u7684\uff0c\u6211\u4eec\u8003\u8651\u7528\u5bb9\u65a5\u539f\u7406\u53bb\u9664\u591a\u4f59\u65b9\u6848\u3002\n$$Ans=C_{h+w-2}^{h-1}-P_1+P_2-P_3+...+(-1)^n*P_n$$\t\n\u5176\u4e2d$P_i$\u8868\u793a\u7ecf\u8fc7i\u4e2a\u4e0d\u80fd\u8d70\u7684\u70b9\u7684\u8def\u5f84\uff0c\u4f46\u662f\uff0c\u6b64\u9898n<=2000\uff0c\u5bb9\u65a5\u539f\u7406\u76f4\u63a5\u70b8\u6389\u3002\uff08\u51b5\u4e14\u6211\u4e5f\u4e0d\u4f1a\u5bb9\u65a5\u539f\u7406\uff0c\u6211\u592a\u5f31\u4e86\uff09\n\n- \u4f46\u6211\u4eec\u4e0d\u6025\uff0c\u4e0d\u614c\uff0c\u4e0d\u4e71\u3002\u60f3\u60f3DP\uff0c\u4e71\u8bbe\u4e00\u4e0b\uff0c\u8bbe$f_i$\u8868\u793a\u4ece(1,1)\u8d70\u5230\u7b2ci\u4e2a\u4e0d\u80fd\u8d70\u7684\u70b9\uff0c\u4e14\u4e0d\u7ecf\u8fc7\u5176\u5b83\u4e0d\u80fd\u8d70\u7684\u70b9\u7684\u65b9\u6848\u6570\u3002\u63a8\u4e00\u4e0b\uff0c\u8bbe$x_i,y_i$\u4e3a\u7b2ci\u4e2a\u4e0d\u80fd\u901a\u8fc7\u7684\u70b9\uff08\u4ee5$x_i$\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c$y_i$\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u597d\u5e8f\u540e\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e0a\u6587\u63a8\u5230\u7684\u4e1c\u897f\u5148\u7b97\u51fa(1,1)\u8fd9\u4e2a\u70b9\u5230\u603b\u65b9\u6848\u6570\uff0c\u7136\u540e\u4f9d\u7167\u6211\u4eec\u7684\u5b9a\u4e49\uff1a\u201c\u4e0d\u80fd\u7ecf\u8fc7\u5176\u4ed6\u65e0\u6cd5\u901a\u8fc7\u7684\u70b9\u201d\uff0c\u6240\u4ee5\u8981\u51cf\u53bb\u524d$i-1$\u4e2a\u70b9\u5230\u6b64\u70b9\u7684\u65b9\u6848\u6570\uff08\u4e0d\u5408\u5b9a\u4e49\uff09\uff0c\u5c31\u662f$f_i$\u4e86,\u7efc\u4e0a\uff1a\n\n- $$f_i=C_{x_i+y_i-2}^{x_i-1}-\\sum_{j=1}^{i-1}*C_{x_i+y_i-x_j-x_j}^{x_i-x_j}$$\n\n- \u6211\u4eec\u53ef\u4ee5\u8ba9\u7ec8\u70b9\u6210\u4e3a\u4e0d\u53ef\u901a\u8fc7\u7684\u70b9\uff0c\u7b54\u6848\u5c31\u662f$f_{n+1}$\u4e86\u3002\n\n- \u55ef\u55ef\uff0c\u8bb2\u5b8c\u4e86\u3002\n\n$O(n^2)$  \u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u5b8c\u7f8eAC\u3002$n<=2000$\n\n\u90a3\u4e48\uff0c\u518d\u7efc\u5408\u89e3\u9898\u6b65\u9aa4\uff1a\n\n- \u4ee5$x_i$\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c$y_i$\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u597d\u5e8f\u3002\n\n- \u63d0\u524d\u9884\u5904\u7406\u51fa\u7ec4\u5408\u6570\u6240\u9700\u8981\u7684\u9006\u5143\uff08\u9006\u5143\u53ef\u4ee5\u81ea\u5b66\uff0c\u590d\u4e60\u65f6\u6211\u53ef\u80fd\u4f1a\u5199\u6765\u5de9\u56fa\u4e00\u4e0b\uff09\u3002\n\n- \u628a\u7ec8\u70b9\u52a0\u5165$f$\u4e2d\uff0c\u8ba1\u7b97$f_i$\u7684\u503c\uff0c\u7b54\u6848\u5c31\u662f$f_{n+1}$\n\n\u9644\u4e0a\u5b8c\u6574\u4ee3\u7801\uff0c\u653e\u5fc3\u98df\u7528\u3002(pascal\u7684\uff0c\u91cd\u70b9\u5728\u601d\u8def\uff0c\u8bed\u8a00\u65e0\u592a\u5927\u5173\u7cfb)\n\n\n------------\n\n\n```pascal\nconst p=trunc(1e9)+7;\ntype\n        node=record\n                x,y:int64;\n        end;\nvar\n        fac,inv:array [0..200005] of int64;\n        f:array [0..3005] of int64;\n        a,c:array [0..3005] of node;\n        n,m,i,j,k,maxn:longint;\nprocedure msort(l,r:longint);\nvar\n        i,j,k,mid:longint;\nbegin\n        mid:=(l+r)>>1;\n        if (l<mid) then msort(l,mid);\n        if (mid+1<r) then msort(mid+1,r);\n        i:=l;\n        j:=mid+1;\n        k:=l;\n        while (i<=mid)and(j<=r) do\n        begin\n                if (a[i].x<a[j].x)or(a[i].x=a[j].x)and(a[i].y<a[j].y) then\n                begin\n                        c[k]:=a[i];\n                        inc(i);\n                        inc(k);\n                end\n                else begin\n                        c[k]:=a[j];\n                        inc(j);\n                        inc(k);\n                end;\n        end;\n        while (i<=mid) do\n        begin\n                c[k]:=a[i];\n                inc(i);\n                inc(k);\n        end;\n        while (j<=r) do\n        begin\n                c[k]:=a[j];\n                inc(j);\n                inc(k);\n        end;\n        for i:=l to r do a[i]:=c[i];\nend;\nfunction qpow(x,y:int64):int64;\nvar\n        res:int64;\nbegin\n        res:=1;\n        while (y>0) do\n        begin\n                if (y and 1=1) then res:=res*x mod p;\n                x:=x*x mod p;\n                y:=y>>1;\n        end;\n        exit(res);\nend;\nprocedure prepare;\nvar\n        i:longint;\nbegin\n        fac[0]:=1;\n        for i:=1 to maxn do fac[i]:=fac[i-1]*i mod p;\n        inv[maxn]:=qpow(fac[maxn],p-2);\n        for i:=maxn-1 downto 0 do inv[i]:=inv[i+1]*(i+1) mod p;\nend;\nfunction combination(n,m:int64):int64;\nbegin\n        if (n<m) then exit(0);\n        exit(fac[n]*inv[n-m] mod p*inv[m] mod p);\nend;\nbegin\n        //assign(input,'path.in');reset(input);\n        //assign(output,'path.out');rewrite(output);\n        readln(n,m,k);\n        if (n<m) then maxn:=m<<1\n        else maxn:=n<<1;\n        for i:=1 to k do read(a[i].x,a[i].y);\n        k:=k+1;\n        a[k].x:=n;a[k].y:=m;\n        msort(1,k);\n        prepare;\n        for i:=1 to k do\n        begin\n                f[i]:=combination(a[i].x+a[i].y-2,a[i].x-1);\n                for j:=1 to i-1 do\n                        f[i]:=(f[i]-f[j]*combination(a[i].x+a[i].y-a[j].x-a[j].y,a[i].x-a[j].x) mod p+p) mod p;\n        end;\n        write(f[k]);\n        //close(input);close(output);\nend.\n```\n\n\n------------\n\u66f2\u7ec8\uff0c\u7ee7\u7eed\u52aa\u529b\uff0c\u5907\u6218CSP2019\u3002\n\n\u672c\u6587\u540c\u6b65\u53d1\u8868\u81f3[\u9898\u89e3 CF559C \u3010Gerald and Giant Chess\u3011](https://www.cnblogs.com/leiyuanze/p/11949227.html)\n",
        "postTime": 1572600711,
        "uid": 100622,
        "name": "Indus",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF559C \u3010Gerald and Giant Chess\u3011"
    },
    {
        "content": "> [\u535a\u5ba2\u94fe\u63a5](http://bubbleioa.top/archives/917)\n\n## \u9898\u89e3\n\u5148\u4ecb\u7ecd\u4e00\u4e2a\u4e1c\u897f\uff1a\u591a\u91cd\u96c6(multiset)\u7684\u5168\u6392\u5217\uff08\u8fd9\u91cc\u662f\u7279\u6b8a\u60c5\u51b5\uff0c\u5373\u9009\u7684\u5143\u7d20\u4e2a\u6570\u4e0d\u8d85\u8fc7\u4efb\u610f\u96c6\u5408\u4e2d\u5143\u7d20\u4e2a\u6570\u7684\u60c5\u51b5\uff09  \n\u6211\u4eec\u5b9a\u4e49\u96c6\u5408\u7684\u96c6\u5408\u4e3a\u591a\u91cd\u96c6\uff0c\u6bd4\u5982\u6211\u6709 $a_1$ \u4e2a $1$ \uff0c $a_2$ \u4e2a $2$ \u2026\u2026 $a_n$ \u4e2a $n$ \u3002  \n\u90a3\u4e48\u5199\u6210\u591a\u91cd\u96c6\u5c31\u662f [latex]\\left\\{\\left\\{a_1\u00b71\\right\\},\\left\\{a_2\u00b72\\right\\},\\cdots,\\left\\{a_n\u00b7n\\right\\}\\right\\}[/latex]  \n\u5982\u679c\u6211\u4eec\u8981\u4ece\u4e2d\u53d6 $k$ \u4e2a\u6570\uff08\u4e0a\u9762\u8bf4\u4e86\uff0c$k$ \u4e0d\u5927\u4e8e $a_i$\uff09\uff0c\u90a3\u4e48\u6709\u591a\u5c11\u79cd\u65b9\u6848\u5462\uff1f\n\n\u5177\u4f53\u8bc1\u660e\u8bf7\u79fb\u6b65\u81f3[\u7ef4\u57fa\u767e\u79d1](https://en.wikipedia.org/wiki/Multiset)\uff0c\u8fd9\u91cc\u76f4\u63a5\u7ed9\u51fa\u7ed3\u8bba\uff1a\n![multiset](https://wikimedia.org/api/rest_v1/media/math/render/svg/3085c625fdc63db0b0cf48f07516a78a87109a56)  \n\u4e5f\u5c31\u662f $C_{n+k-1}^{n+1}$  \n\n\u90a3\u4e48\u8fd9\u9898\u5176\u5b9e\u5982\u679c\u6211\u4eec\u628a\u6bcf\u4e00\u884c\u770b\u6210\u4e00\u4e2a\u96c6\u5408\uff0c\u5143\u7d20\u4e2a\u6570\u5c31\u662f\u5217\u6570-1\uff08\u56e0\u4e3a\u6211\u4eec\u6700\u7ec8\u76ee\u6807\u662f\u8d70\u5230\u53f3\u4e0b\u89d2\uff0c\u800c\u5982\u679c\u8d70\u5230\u4e86\u53f3\u4fa7\uff0c\u518d\u8d70\u5230\u53f3\u4e0b\u89d2\u7684\u65b9\u6848\u5df2\u7ecf\u786e\u5b9a\uff0c\u968f\u610f\u7b49\u4ef7\u4e8e\u8d70\u5230\u53f3\u4fa7\uff09\uff0c\u5982\u679c\u6ca1\u6709\u9ed1\u683c\u5b50\u7684\u8bdd\uff0c\u6211\u4eec\u8981\u9009\u7684\u5143\u7d20\u4e2a\u6570\u4e5f\u662f\u5217\u6570-1\uff0c\u7b54\u6848\u5c31\u662f $C_{H+W-2}^{H-1}$\n\n\u800c\u5982\u679c\u6709\u9ed1\u683c\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u7edf\u8ba1\u51fa\u4e0d\u5408\u6cd5\u7684\u65b9\u6848\u6570\u51cf\u53bb\u5373\u53ef\u3002\n\n\u6240\u8c13\u4e0d\u5408\u6cd5\uff0c\u5c31\u662f\u5728\u8def\u5f84\u4e0a\u8d70\u5230\u8fc7\u9ed1\u683c\u5b50\uff0c\u4e3a\u4e86\u907f\u514d\u91cd\u590d\uff0c\u6211\u4eec\u8bbe $f[i]$ \u4e3a\u53ea\u7ecf\u8fc7\u7b2c $i$ \u4e2a\u9ed1\u683c\u5b50\u7684\u65b9\u6848\u6570\uff0c\u5bf9\u4e8e\u5b83\u7684\u6c42\u6cd5\uff0c\u53ef\u4ee5\u628a\u5b83\u5f53\u6210\u53f3\u4e0b\u89d2\uff0c\u6c42\u8d21\u732e\uff0c\u5bf9\u4e8e\u533a\u57df\u5185\u7684\u9ed1\u683c\u5b50\uff0c\u6839\u636e\u4e58\u6cd5\u539f\u7406\uff0c\u5b83\u4eec\u4ea7\u751f\u7684\u4e0d\u5408\u6cd5\u7684\u65b9\u6848\u6570\u4e3a $f[j]\\times C_{x_i-x_j+y_i-y_j}^{x_i-x_j}$ \u5373\u539f\u70b9\u5230\u4ed6\u7684\u65b9\u6848\u6570\u4e58\u4e0a\u4ee5\u7b2c $j$ \u4e2a\u9ed1\u683c\u5b50\u4e3a\u5de6\u4e0a\u89d2\uff0c\u7b2c $i$ \u4e2a\u9ed1\u683c\u5b50\u4e3a\u53f3\u4e0b\u89d2\u7684\u5b50\u77e9\u9635\u7684\u65b9\u6848\u6570\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u65f6\u53ef\u4ee5\u6309\u7167\u5750\u6807\u6392\u4e2a\u5e8f\uff0c\u51cf\u5c11\u679a\u4e3e\u91cf\uff0c\u8bbe\u53f3\u4e0b\u89d2\u4e3a\u7b2c $n+1$ \u4e2a\u9ed1\u683c\u5b50\uff0c\u65b9\u4fbf\u8ba1\u7b97\u7b54\u6848\uff0c\u8fd8\u6709\u5c31\u662f\u4e0d\u8981\u5f04\u6df7\u6a2a\u7eb5\u5750\u6807\u3002\n\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define x first\n#define y second\nusing namespace std;\ntypedef long long ll;\nconst int MOD=1e9+7;\nint h,w,n,ans; \npair<int,int>node[2003];\nll fact[200003];\nll inv[200003];\nll f[2003];\n\nll qpow(ll a,ll b,ll p){\n    ll ans=1;\n    while(b){\n        if(b&1)ans=ans*a%p;\n        a=a*a%p;\n        b>>=1;\n    }\n    return ans;\n}\n\nvoid pre(int n){\n    fact[0]=1;\n    for(int i=1;i<=n;i++){\n        fact[i]=fact[i-1]*i%MOD;\n    }\n    inv[n]=qpow(fact[n],MOD-2,MOD);\n    for(int i=n-1;i>=0;i--){\n        inv[i]=inv[i+1]*(i+1)%MOD;\n    }\n}\n\nint C(int n,int m){\n    if(n==m)return 1; \n    return fact[n]*inv[m]%MOD*inv[n-m]%MOD;\n}\n\nint main(){\n    cin>>h>>w>>n;\n    for(int i=1;i<=n;i++){\n        cin>>node[i].x>>node[i].y;\n    }\n    pre(200000);\n    node[n+1].x=h,node[n+1].y=w;\n    sort(node+1,node+2+n);\n    for(int i=1;i<=n+1;i++){\n        f[i]=C(node[i].x+node[i].y-2,node[i].x-1);\n        for(int j=1;j<i;j++){\n            if(node[i].x<node[j].x||node[i].y<node[j].y)continue;\n            f[i]=(f[i]-(ll)f[j]*C(node[i].y-node[j].y+node[i].x-node[j].x,node[i].x-node[j].x)%MOD)%MOD;\n        }\n        while(f[i]<0)f[i]+=MOD;\n    }\n    cout<<f[n+1]<<endl;\n    return 0;\n}\n\n```",
        "postTime": 1557135613,
        "uid": 61150,
        "name": "\u5192\u6ce1ioa",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF559C \u3010Gerald and Giant Chess\u3011"
    },
    {
        "content": "# \u9898\u76ee\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[\u70b9\u8fd9\u91cc](https://www.luogu.org/problem/CF559C)\u770b\u9898\u76ee\u3002\n# \u5206\u6790\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u9996\u5148\u4ee5$x$\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c$y$\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\uff0c\u7ed9\u70b9\u8fdb\u884c\u6392\u5e8f\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7136\u540e......\u4f3c\u4e4e\u53ef\u4ee5\u7528\u5bb9\u65a5\u89e3\u51b3......\u7136\u540e\u65f6\u95f4\u4e3a$O(2^n)$\uff0c\u7206\u70b8\u4e86\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4e0d\u8fc7\uff0c\u8fd9\u9053\u9898\u5176\u5b9e\u9614\u4ee5$DP$\u7684\uff0c\u65f6\u95f4\u662f$O(n^2)$\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;~~\u597d\u68d2\u68d2\u54df\uff0c\u5e95\u6570\u548c\u6307\u6570\u4ea4\u6362\u4e86~~  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5b9a\u4e49\u72b6\u6001\uff1a  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$DP(i)$\uff1a\u8d70\u5230\u7b2c$i$\u4e2a\u969c\u788d\u70b9\u5e76\u4e14\u4e0d\u7ecf\u8fc7\u5176\u5b83\u969c\u788d\u70b9\u7684\u603b\u65b9\u6848\u6570\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8bbe\u7b2c$i$\u4e2a\u70b9\u4f4d\u4e8e$(x_i,y_i)$\uff0c\u8f6c\u79fb\u5f88\u5bb9\u6613\u770b\u51fa\u6765\uff1a  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$\\displaystyle DP(i)=C_{x_i+y_i-2}^{x_i-1}-\\sum_{j=1}^{i-1}C_{x_i-x_j+y_i-y_j}^{x_i-x_j}DP(j)$  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4e0d\u9700\u8981\u8003\u8651\u524d\u9762\u7684\u70b9\u4e2d\u6709\u70b9\u5728\u81ea\u5df1\u4e0b\u9762\uff0c\u56e0\u4e3a\u8fd9\u6837\u7684\u8bdd\u7ec4\u5408\u6570\u5c31\u662f$0$\uff0c\u8fd9\u4e00\u9879\u81ea\u7136\u5c31\u88ab\u6d88\u6389\u4e86\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u53e6\u5916\uff0c\u4e5f\u53ef\u4ee5\u770b\u4e00\u4e0b[[BZOJ 4767]\u4e24\u53cc\u624b](https://www.lydsy.com/JudgeOnline/problem.php?id=4767)\u8ddf\u8fd9\u9053\u9898\u7c7b\u4f3c\uff0c\u5c31\u662f\u591a\u4e86\u4e00\u4e2a\u6269\u6b27\u89e3\u540c\u4f59\u65b9\u7a0b\u7684\u6b65\u9aa4\u3002\n# \u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <algorithm>\n\nconst int mod = 1e9 + 7;\nconst int MAXN = 2005, MAXH = 100005;\n\ntemplate<typename _T>\nvoid read( _T &x )\n{\n    x = 0;char s = getchar();int f = 1;\n    while( s > '9' || s < '0' ){if( s == '-' ) f = -1; s = getchar();}\n    while( s >= '0' && s <= '9' ){x = ( x << 3 ) + ( x << 1 ) + ( s - '0' ), s = getchar();}\n    x *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x )\n{\n    if( x < 0 ){ putchar( '-' ); x = ( ~ x ) + 1; }\n    if( 9 < x ){ write( x / 10 ); }\n    putchar( x % 10 + '0' );\n}\n\nstruct obstacle\n{\n\tint x, y;\n\tobstacle(){}\n\tobstacle( const int X, const int Y )\n\t{\n\t\tx = X, y = Y;\n\t}\n\tbool operator < ( const obstacle & other ) const\n\t{\n\t\treturn x < other.x || ( x == other.x && y < other.y );\n\t}\n}a[MAXN];\n\nint DP[MAXN];\nint fac[MAXH * 3], inv[MAXH * 3];\nint N, H, W;\n\nvoid init()\n{\n\tfac[0] = fac[1] = 1;\n\tinv[1] = 1;\n\tfor( int i = 2 ; i <= H + W ; i ++ )\n\t{\n\t\tfac[i] = 1ll * fac[i - 1] * i % mod;\n\t\tinv[i] = 1ll * ( mod - mod / i ) * inv[mod % i] % mod;\n\t}\n\tinv[0] = 1;\n\tfor( int i = 1 ; i <= H + W ; i ++ )\n\t{\n\t\tinv[i] = 1ll * inv[i - 1] * inv[i] % mod;\n\t}\n}\n\nint C( const int n, const int m )\n{\n\tif( n < m ) return 0;\n\treturn 1ll * fac[n] * inv[m] % mod * inv[n - m] % mod;\n}\n\nint fix( const int a )\n{\n\treturn ( a % mod + mod ) % mod;\n}\n\nint main()\n{\n\tread( H ), read( W ), read( N );\n\tinit();\n\tfor( int i = 1 ; i <= N ; i ++ )\n\t{\n\t\tread( a[i].x ), read( a[i].y );\n\t}\n\ta[++N] = obstacle( H, W );\n    //\u628a\u76ee\u6807\u70b9\u5f53\u505a\u4e00\u4e2a\u969c\u788d\u70b9\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u65e0\u8111DP\u4e86\n\tstd :: sort( a + 1, a + 1 + N );\n\tfor( int i = 1 ; i <= N ; i ++ )\n\t{\n\t\tDP[i] = C( a[i].x + a[i].y - 2, a[i].y - 1 );\n\t\tfor( int j = 1 ; j < i ; j ++ )\n\t\t{\n\t\t\tDP[i] = fix( DP[i] - 1ll * DP[j] * C( a[i].x - a[j].x + a[i].y - a[j].y, a[i].x - a[j].x ) % mod );\n\t\t}\n\t}\n\twrite( DP[N] ), putchar( '\\n' );\n\treturn 0;\n}\n```",
        "postTime": 1566476974,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "[CF559C]Gerald and Giant Chess"
    },
    {
        "content": "\u8fd9\u9898\u540e\u6765\u88ab\u6539\u7f16\u6210\u4e86\u6211\u4eec\u7684\u8003\u9898\uff0c\u6240\u4ee5\u4eca\u5929\u6765\u4e00\u53d1\u9898\u89e3\n\n\u672c\u8d28\u662f\u5bf9dp\u601d\u60f3\u7684\u4e00\u79cd\u4f18\u5316\n\n\u9996\u5148\u6211\u4eec\u6765\u770b\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u68cb\u76d8\uff0c\u5982\u679c\u76f4\u63a5\u4ece\u5de6\u4e0b\u8d70\u5230\u53f3\u4e0a\uff0c\u65b9\u6848\u6570\u5e94\u4e3aC(n+m-2,n)\n\n\u4f46\u662f\u4e2d\u95f4\u6709\u4e0d\u80fd\u7ecf\u8fc7\u7684\u70b9\uff0c\u8fd9\u6837\u505a\u4f1a\u591a\u7edf\u8ba1\u3002\n\n\u4e8e\u662f\u6211\u4eec\u56de\u5f52\u6700\u672c\u8d28\u7684\u601d\u60f3\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u4e2a\u7ec4\u5408\u6570\u6765\u6e90\u4e8e\u5c06\u8be5\u68cb\u76d8\u89c6\u4f5c\u4e00\u4e2a\u6768\u8f89\u4e09\u89d2\uff0c\u7136\u540edp\u65b9\u6848\u6570\uff0c\u63a8\u51fa\u7684\u7ed3\u8bba\u6ee1\u8db3\u659c\u6768\u8f89\u4e09\u89d2\n\n\u90a3\u4e48\u6211\u4eec\u6062\u590d\u8fd9\u4e2a\u601d\u60f3\uff0c\u7531\u4e8e\u4e0d\u80fd\u7528\u7684\u70b9\u6bd4\u8f83\u5c11\uff0c\u6211\u4eec\u6309\u4e0d\u80fd\u7528\u7684\u70b9\u8d70\u3002\n\n\u5148\u5c06\u6240\u6709\u4e0d\u80fd\u7528\u7684\u70b9\u6309x\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0cy\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u8bbedp[i]\u8868\u793a\u4ece\u539f\u70b9\u5230i\u70b9**\u4e0d\u7ecf\u8fc7\u5176\u4ed6\u4e0d\u80fd\u7528\u7684\u70b9**\u7684\u65b9\u6848\u6570\n\n\u5176\u4e2d\u679a\u4e3e\u7684\u6240\u6709i\u70b9\u90fd\u662f\u4e0d\u80fd\u7528\u7684\u70b9\uff08\u6216\u7ec8\u70b9\uff09\uff0c\u4ee5\u4e0b\u7ed9\u51fa\u539f\u7406\uff1a\n\n\u5176\u5b9e\u6211\u4eec\u53ef\u4ee5\u8bbedp[i]\u662f\u6240\u6709\u70b9\u7684\u65b9\u6848\u6570\uff0c\u4f46\u8fd9\u6837\u65f6\u7a7a\u90fd\u627f\u53d7\u4e0d\u4e86\n\n\u4f46\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u4e0d\u80fd\u7528\u7684\u70b9\u662f\u5f88\u5c11\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u4ec5\u9700\u8ba8\u8bba\u4e0d\u80fd\u7528\u7684\u70b9\u5373\u53ef\n\n\u56e0\u4e3a\u8ba8\u8bba\u5230\u4efb\u4f55\u4e00\u4e2a\u70b9\u7684\u65b9\u6848\u6570\uff0c\u90fd\u53ea\u9700\u8981\u8fd9\u4e2a\u70b9\u4e4b\u524d\u4e0d\u80fd\u7528\u7684\u70b9\u7684\u65b9\u6848\u6570\n\n\u6240\u4ee5\u8fd9\u6837\u505a\u662f\u6b63\u786e\u7684\n\n\u5bf9\u6240\u6709i\uff0cdp[i]\u7684\u521d\u503c\u5e94\u5f53\u90fd\u662f\u539f\u70b9\u5230i\u7684\u65b9\u6848\u6570\uff08\u5373C(xi+yi,xi)\uff09\n\n\u800c\u4e3a\u4e86\u4e0d\u7ecf\u8fc7\u5176\u4ed6\u7684\u201c\u969c\u788d\u201d\u70b9\uff0c\u6211\u4eec\u9700\u8981\u6392\u9664\u524d\u9762\u4e00\u4e9b\u201c\u969c\u788d\u201d\u70b9\u7684\u65b9\u6848\n\n\u5bf9\u4e8e\u6bcf\u4e2ai\uff0c\u6211\u4eec\u4ec5\u9700\u679a\u4e3e\u6240\u6709i\u4e4b\u524d\u7684j\uff0c\u4f7fxi>=xj,yi>=yj\n\n\u7136\u540edp[i]-=dp[j]\u00b7C(xi-xj+yi-yj,xi-xj)\n\n\u8fd9\u91cc\u7b97\u51fa\u7684\u5c31\u662f\u540c\u65f6\u81f3\u5c11\u7ecf\u8fc7i\uff0cj\u4e24\u70b9\u7684\u65b9\u6848\u6570\n\n\u81f3\u4e8e\u4f1a\u4e0d\u4f1a\u91cd\u53e0\uff0c\u7531\u4e8e\u6211\u4eec\u6309x\uff0cy\u6392\u8fc7\u5e8f\uff0c\u518d\u8003\u8651\u539f\u5148\u7684dp[j]\u90fd\u662f\u53ea\u7ecf\u8fc7j\u8fd9\u4e00\u4e2a\u969c\u788d\u7269\u7684\uff0c\u6240\u4ee5\u4e0d\u4f1a\u6709\u91cd\u53e0\n\n\u6700\u540e\u8d34\u4e2a\u4ee3\u7801\uff0c\u7ebf\u6027\u7b5b\u9636\u4e58\u9006\u5143+\u7ec4\u5408\u6570dp\n\n```cpp\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <cstdlib>\n#include <iostream>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#define ll long long\n#define mode 1000000007\n#define maxn 200000\nusing namespace std;\nll inv[200005];\nll mul[200005];\nvoid init()\n{\n  inv[1]=1;\n  inv[0]=1;\n  mul[0]=1;\n  for(int i=2;i<=maxn;i++)\n    {\n      inv[i]=(mode-mode/i)*inv[mode%i]%mode;\n    }\n  for(int i=1;i<=maxn;i++)\n    {\n      inv[i]*=inv[i-1];\n      inv[i]%=mode;\n      mul[i]=mul[i-1]*i;\n      mul[i]%=mode;\n    }\n}\nint n,m,k;\nstruct Bad\n{\n  int x,y;\n}p[3005];\nll dp[3005];\nbool cmp(Bad a,Bad b)\n{\n  if(a.x==b.x)\n    {\n      return a.y<b.y;\n    }\n  return a.x<b.x;\n}\nll C(int x,int y)\n{\n  return mul[x]%mode*inv[y]%mode*inv[x-y]%mode;\n}\nint main()\n{\n//   freopen(\"path.in\",\"r\",stdin);\n//   freopen(\"path.out\",\"w\",stdout);\n  scanf(\"%d%d%d\",&n,&m,&k);\n  init();\n  for(int i=1;i<=k;i++)\n    {\n      scanf(\"%d%d\",&p[i].x,&p[i].y);\n    }\n    k++;\n    p[k].x=n;\n\tp[k].y=m;\n  sort(p+1,p+k+1,cmp);\n  for(int i=1;i<=k;i++)\n    {\n      dp[i]=C(p[i].x+p[i].y,p[i].x);\n      for(int j=1;j<i;j++)\n\t{\n\t  if(p[j].x<=p[i].x&&p[j].y<=p[i].y)\n\t    {\n\t      dp[i]-=dp[j]*C(p[i].x-p[j].x+p[i].y-p[j].y,p[i].x-p[j].x)%mode;\n\t    }\n\t}\n      dp[i]=(dp[i]%mode+mode)%mode;\n    }\n  printf(\"%lld\\n\",dp[k]);\n  return 0;\n}\n\n```",
        "postTime": 1531983911,
        "uid": 66905,
        "name": "leozhang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF559C \u3010Gerald and Giant Chess\u3011"
    },
    {
        "content": "# Link\n[CF559C Gerald and Giant Chess](https://www.luogu.com.cn/problem/CF559C)\n\n# Solve\n\u6709\u4e00\u4e2a\u7ed3\u8bba\uff0c\u5bf9\u4e8e\u4e00\u4e2a$W$\u548c$H$\u7684\u767d\u8272\u65b9\u683c\uff0c\u4ece$(1,1)$\u5230$(H,W)$\u7684\u65b9\u6848\u6570\u662f$C_{H+W-2}^{H-1}$\n\n\u76f4\u63a5\u8003\u8651\u4e0d\u80fd\u8d70\u9ed1\u8272\u7684\u6bd4\u8f83\u96be\uff0c\u4e8e\u662f\u60f3\u5230\u5bb9\u65a5\u4e00\u4e0b\uff0c\u628a\u603b\u7684\u65b9\u6848\u6570-\u7ecf\u8fc7\u9ed1\u70b9\u7684\u65b9\u6848\u6570=\u4e0d\u8d70\u9ed1\u8272\u7684\u65b9\u6848\u6570\n\n\u56e0\u4e3a\u9ed1\u70b9\u7684\u6570\u6bd4\u8f83\u5c11\uff0c\u4e8e\u662f\u7528\u9ed1\u70b9\u6765$DP$,\u5148\u628a\u9ed1\u70b9\u6309\u7167$x$\u6392\u5e8f\n\n\u5b9a\u4e49$F[i]$\u8868\u793a\u4ece\u5de6\u4e0a\u89d2\u8d70\u5230$i$\u8fd9\u4e2a\u9ed1\u8272\u8282\u70b9\u7684\u4f4d\u7f6e\uff0c\u4e0d\u7ecf\u8fc7\u5176\u4ed6\u9ed1\u70b9\u7684\u65b9\u6848\u6570\n\n\u7531\u4e8e\u603b\u7684\u65b9\u6848\u6570-\u7ecf\u8fc7\u81f3\u5c11\u4e00\u4e2a\u9ed1\u70b9\u7684\u65b9\u6848\u6570=\u4e0d\u7ecf\u8fc7\u5176\u4ed6\u9ed1\u70b9\u7684\u65b9\u6848\u6570\n\n\u7ecf\u8fc7\u81f3\u5c11\u4e00\u4e2a\u9ed1\u70b9\u7684\u65b9\u6848\u6570=\u4e0d\u7ecf\u8fc7\u767d\u70b9\u5230\u4e00\u4e2a\u9ed1\u70b9\uff0c\u540e\u9762\u4e71\u8d70\uff0c\u679a\u4e3e\u6bcf\u4e2a\u6ee1\u8db3\u7684\u9ed1\u70b9\uff0c\u628a\u7b54\u6848\u7d2f\u8ba1\u8d77\u6765\u5c31\u597d\u4e86\n\n\u6240\u4ee5\u8f6c\u79fb\u65b9\u7a0b\u5c31\u9000\u51fa\u6765\u4e86\n\n$$F[i]=C_{x_i-1+y_i-1}^{x_i-1}-\\sum_{j=0}^{i-1}F[j]\\ast C_{x_i-x_j+y_i-y_j}^{x_i-x_j}$$\n\n\u5176\u4e2d$x_i\u2265x_j,y_i\u2265y_j$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=2005,TT=1000000007;\ntypedef long long LL;\nint H,W,N;\npair<int,int> a[maxn];\nLL jc[200005],jcinv[200005],F[maxn];\ninline int read(){\n\tint ret=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-f;ch=getchar();}\n\twhile(ch<='9'&&ch>='0')ret=ret*10+ch-'0',ch=getchar();\n\treturn ret*f;\n}\nLL fast_pow(LL a,LL b){\n\tLL s=1,w=a;\n\twhile(b){\n\t\tif(b&1)s=s*w%TT;\n\t\tw=w*w%TT;\n\t\tb>>=1;\n\t}\n\treturn s;\n}\nLL C(LL x,LL y){\n\treturn jc[x]*jcinv[y]%TT*jcinv[x-y]%TT;\n}\nint main(){\n\tjc[0]=1;jcinv[0]=1;\n\tfor(int i=1;i<=200000;i++){\n\t\tjc[i]=jc[i-1]*i%TT;\n\t\tjcinv[i]=fast_pow(jc[i],TT-2);\n\t}\n\tH=read();W=read();N=read();\n\tfor(int i=1;i<=N;i++)a[i].first=read(),a[i].second=read();\n\tsort(a+1,a+1+N);\n\ta[N+1].first=H,a[N+1].second=W;\n\tfor(int i=1;i<=N+1;i++){\n\t\tF[i]=C(a[i].first+a[i].second-2,a[i].first-1);\n\t\tfor(int j=1;j<i;j++){\n\t\t\tif(a[j].first>a[i].first||a[j].second>a[i].second)continue;\n\t\t\tF[i]=(F[i]-F[j]*C(a[i].first+a[i].second-a[j].first-a[j].second,a[i].first-a[j].first)%TT+TT)%TT;\n\t\t}\n\t}\n\tprintf(\"%lld\\n\",(F[N+1]+TT)%TT);\n\treturn 0;\n}\n```",
        "postTime": 1606960753,
        "uid": 128822,
        "name": "OI\u754c\u7684\u5c0f\u6df7\u6df7",
        "ccfLevel": 6,
        "title": "CF559C Gerald and Giant Chess \u9898\u89e3"
    }
]