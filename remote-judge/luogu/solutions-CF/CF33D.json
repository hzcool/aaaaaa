[
    {
        "content": "\u601d\u8def\u697c\u4e0a\u7684\u5927\u4f6c\u5df2\u7ecf\u8bf4\u5f97\u5f88\u6e05\u695a\u4e86\uff0c\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cdTarjan\u7684\u7b97\u6cd5\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\n\nstruct zz{\n\tint u,id;\n}T[300005];\n\nstruct ss{\n\tint r;\n\tint x,y;\n}a[1005],s[1005];\n \nbool cmp(ss x,ss y){\n\treturn x.r<y.r;\n}\n\nll Dist(ss a,ss b){\n\tll x,y,xx,yy;\n\tx=a.x,y=a.y;\n\txx=b.x,yy=b.y;\n\treturn (ll)(x-xx)*(x-xx)+(ll)(y-yy)*(y-yy);\n}\n\nint n,m,k;\nll ans=0;\nvector<int> v[300005];\nvoid Add(int x,int y){\n\tv[x].push_back(y);\n\tv[y].push_back(x);\n}\nvector<zz> sum[300005];\nbool f[300005];\nint pre[300005];\nll dist[300005];\nint tot[3000005];\n\nvoid Make_Set(){\n\tfor(int i=1;i<=m;i++){\n\t\tpre[i]=i;\n\t}\n}\n\nint Find_Set(int x){\n\tif(pre[x]!=x)\n\t\tpre[x]=Find_Set(pre[x]);\n\treturn pre[x];\n}\n\nvoid DFS(int p,int fa){\n\tdist[p]=dist[fa]+1;\n    for(int i=0;i<v[p].size();i++){\n    \tint x=v[p][i];\n    \tif(x!=fa)\n\t\t\tDFS(x,p);\n\t}\n}\n\nvoid Tarjan(int x){\n\tf[x]=1;\n\tfor(int i=0;i<v[x].size();i++){\n\t\tint y=v[x][i];\n\t\tif(f[y])\n\t\t\tcontinue;\n\t\tTarjan(y);\n\t\tpre[y]=Find_Set(x);\n\t}\n\tfor(int i=0;i<sum[x].size();i++){\n\t\tzz now=sum[x][i];\n\t\tif(!f[now.u])\n\t\t\tcontinue;\n\t\ttot[now.id]=Find_Set(now.u);\n\t}\n}\n\nint main(){\n\tcin>>n>>m>>k;\n\tMake_Set();\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d%d\",&a[i].x,&a[i].y);\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d%d\",&s[i].r,&s[i].x,&s[i].y);\n\t}\n\ts[0]=(ss){2147483600,0,0};\n\tsort(s,s+m+1,cmp);\n\t\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=0;j<=m;j++){\n\t\t\tif(Dist(a[i],s[j])<=(ll)s[j].r*(ll)s[j].r){\n\t\t\t\ta[i].r=j;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(int i=0;i<=m;i++){\n    \tfor(int j=i+1;j<=m;j++)\n    \t\tif(Dist(s[i],s[j])<(ll)s[j].r*s[j].r){\n\t\t\t\tAdd(i,j);\n\t\t\t\tbreak;\n\t\t\t}\n    }\n\tDFS(0,0);\n\tfor(int i=1;i<=k;i++){\n\t\tint x,y;\n\t\tscanf(\"%d %d\",&x,&y);\n\t\tx=a[x].r;y=a[y].r;\n\t\tsum[x].push_back({y,i});\n\t\tsum[y].push_back({x,i});\n\t\tT[i].id=x;T[i].u=y;\n\t}\n\tTarjan(0);\n\tfor(int i=1;i<=k;i++){\n\t\tint x=T[i].id,y=T[i].u;\n\t\tcout<<abs(dist[x]+dist[y]-2*dist[tot[i]])<<endl;\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1610690445,
        "uid": 225883,
        "name": "MiRaciss",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF33D \u3010Knights\u3011"
    },
    {
        "content": "# \u9898\u76ee\u63cf\u8ff0\n\n\u4f60\u662f\u4e00\u4f4dOIer\uff0c\u4eca\u5929\u6559\u7ec3\u521a\u8bb2\u4e86LCA\uff0c\u4f60\u770b\u5230\u4e86[CF33D Knights](https://www.luogu.com.cn/problem/CF33D)\uff0c\u6253\u7b97\u505a\u4e00\u4e0b\u5b83\u3002\n\n\u4f60\u7b80\u5316\u4e86\u95ee\u9898\uff1a\u7ed9\u4f60\u51e0\u4e2a\u70b9\u7684\u5750\u6807\u548c\u51e0\u4e2a\u5706\u7684\u5750\u6807\u4e0e\u534a\u5f84\uff08**\u4efb\u610f\u4e24\u4e2a\u5706\u90fd\u6ca1\u6709\u4ea4\u53c9\u70b9**\uff09\uff0c\u6c42\u4e00\u4e2a\u70b9\u5230\u53e6\u4e00\u4e2a\u70b9\u6700\u5c11\u7ecf\u8fc7\u51e0\u4e2a\u5706\u3002\n\n# \u601d\u8def\n\n\u4f60\u60f3\u5230\u4e86\u4e00\u4e2a\u505a\u6cd5\uff1a\u5982\u679c\u5706 $A$ \u5305\u542b\u5706 $B$ \uff0c\u4e14$A$ \u662f**\u5305\u542b\u5706 $B$ \u7684\u5706**\u4e2d**\u534a\u5f84\u6700\u5c0f**\u7684\uff0c\u5219\u5c06 $A$ \u3001 $B$ \u8fde\u8fb9\uff0c\u5bb9\u6613\u8bc1\u5f97\u5f97\u5230\u7684\u662f\u4e00\u4e2a**\u68ee\u6797**\uff0c\u800c**\u6700\u5916\u5c42**\u7684\u5706\u81ea\u7136\u5730\u8fde\u63a5\u5230\u4e86**\u865a\u6839**0\u53f7\u7ed3\u70b9\u3002\u7136\u540e\u6211\u4eec\u8ba1\u7b97\u51fa\u6bcf\u4e00\u4e2a**\u70b9\u5c5e\u4e8e\u54ea\u4e00\u4e2a\u5706**\uff08\u8fd9\u91cc\u7684\u5c5e\u4e8e\u5b9a\u4e49\u4e3a\uff1a\u5706 $A$ \u5305\u542b\u70b9 $B$ \uff0c\u4e14\u5706 $A$ \u662f**\u5305\u542b\u70b9 $B$ \u7684\u5706**\u4e2d**\u534a\u5f84\u6700\u5c0f**\u7684\uff09\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u5c31\u901a\u8fc7 **LCA** \u548c\u6811\u7684**\u6df1\u5ea6**\u6c42\u5f97**\u70b9\u6240\u5c5e\u5706**\u5728**\u6811\u4e0a\u7684\u6700\u77ed\u8ddd\u79bb**\u3002\n\n# \u4ee3\u7801\u5904\u7406\n\n\u4f46\u662f\u7b2c\u4e00\u4e2a\u95ee\u9898\u51fa\u73b0\u4e86\uff1a\u5982\u4f55\u5224\u65ad\u5706 $A$ \u662f\u5305\u542b\u5706 $B$ \u7684\u5706\u4e2d\u534a\u5f84\u6700\u5c0f\u7684\uff1f\n\n\u4f60\u60f3\u4e86\u60f3\uff0c\u5904\u7406\u65b9\u6848\u5982\u4e0b\uff1a\n\n1.\u5148\u5c06\u6240\u6709\u5706\u4ee5**\u534a\u5f84**\u4e3a\u5173\u952e\u5b57**\u5347\u5e8f**\u6392\u5e8f\uff1b\n\n2.\u4ee5\u4e0b\u6807\u4e3a\u5e8f\u641c\u7d22\u6bcf\u4e00\u4e2a\u5706\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n\n~~~cpp\nvoid df(int q)//\u641c\u7d22\u7b2cq\u4e2a\u5706//\u4e0d\u8981\u5728\u610f\u53d8\u91cf\u540d\n{\n\tif(v[q])return;//\u5982\u679c\u88ab\u641c\u7d22\u8fc7\u4e86\u5219return\n\tv[q]=1;//\u6807\u8bb0\n\tfor(int i=1;i<=m;i++)//\u5faa\u73af\u6bcf\u4e00\u4e2a\u5706\n\t{\n\t\tif(check(q,i)&&i!=q)//check(q,j)\u7684\u610f\u601d\u662f\u5706q\u80fd\u88ab\u5706i\u5305\u542b\uff0c\u4e0b\u540c\n\t\t{//\u5982\u679c\u5706q\u88ab\u5706i\u5305\u542b\u4e14i\u4e0d\u7b49\u4e8eq\n\t\t\tadde(q,i);\n\t\t\tadde(i,q);//\u52a0\u8fb9\n\t\t\tdf(i);//\u641c\u7d22\u5730i\u4e2a\u5706\n\t\t\treturn;\n\t\t}\n\t}\n}//\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u5706i\u662f\u5305\u542b\u5706q\u7684\u5706\u4e2d\u534a\u5f84\u6700\u5c0f\u7684\n~~~\n\n\u7b2c\u4e8c\u4e2a\u95ee\u9898\uff1a\u600e\u4e48\u627e\u5230**\u6700\u5916\u5c42**\u7684\u5706\uff1f\n\n\u4e0b\u9762\u662f\u5904\u7406\u65b9\u5f0f+\u4ee3\u7801\uff08\u4e0d\u597d\u53d9\u8ff0\uff0c\u5177\u4f53\u8bb2\u89e3\u5728\u4ee3\u7801\u4e2d\uff09\uff1a\n\n~~~cpp\nfor(int i=1;i<=m;i++)//\u5faa\u73af\u6bcf\u4e00\u4e2a\u5706\n   {\n    bool p=1;\n    for(int j=i+1;j<=m;j++)\n    {\n        if(check(i,j))p=0;//\u5982\u679ci\u80fd\u88ab\u5176\u4ed6\u5706\u5305\u542b\uff0c\u5219\u4e00\u5b9a\u4e0d\u662f\u6700\u5916\u5c42\u7684\u5706\n    }\n    if(p)adde(i,0),adde(0,i);//\u52a0\u8fb9\n}\n~~~\n\n\u4f60\u7684\u4e00\u4e2a\u670b\u53cb\u53d1\u8868\u4e0d\u540c\u7684\u610f\u89c1\uff1a\u201d\u5176\u5b9e\u53ef\u4ee5\u52a0\u4e00\u4e2a**\u65e0\u9650\u5927\u7684\u5706**\u4f7f**\u5176\u5b83\u5706\u88ab\u5b83\u5305\u542b**\u201c\u3002\n\n\u7b2c\u4e09\u4e2a\u95ee\u9898\uff1a\u5982\u4f55\u786e\u5b9a\u70b9\u5c5e\u4e8e\u54ea\u4e00\u4e2a\u5706\uff1f\n\n\u5904\u7406\u65b9\u5f0f+\u4ee3\u7801\uff08\u4e0d\u597d\u53d9\u8ff0\uff0c\u5177\u4f53\u8bb2\u89e3\u5728\u4ee3\u7801\u4e2d\uff09\uff1a\n\n~~~ cpp\nfor(int i=1;i<=m;i++)//\u5faa\u73af\u5706\n{\n    for(int j=1;j<=n;j++)//\u5faa\u73af\u70b9\n    {\n        if(!z[j]&&(\u5224\u65ad\u70b9\u662f\u5426\u5728\u5706\u5185)/*\u4ee3\u7801\u5f88\u957f\u4e14\u53ef\u8bfb\u6027\u8f83\u5dee\uff0c\u6545\u4e0d\u5c55\u793a*/)z[j]=i;//\u5efa\u7acb\u5173\u7cfb\n    }//\u56e0\u4e3a\u5706\u662f\u6309\u534a\u5f84\u6392\u5217\u7684\uff0c\u6240\u4ee5\u5982\u679c\u5706i\u5305\u542b\u4e86\u70b9j\uff0c\u5219\u5706i+1\u4e00\u5b9a\u5305\u542b\u70b9j\n}    //\u6240\u4ee5\u8981\u5224\u65ad\u70b9j\u662f\u5426\u5df2\u7ecf\u5efa\u7acb\u5173\u7cfb\uff0c\u9632\u6b62\u91cd\u590d\u5efa\u7acb\u5173\u7cfb\nfor(int i=1;i<=n;i++)if(!z[i])z[i]=0;\n//\u5982\u679c\u6ca1\u6709\u5706\u4e0e\u8fd9\u4e2a\u70b9\u5efa\u7acb\u5173\u7cfb\u5c31\u4ee3\u8868\u8fd9\u4e2a\u70b9\u4e0e\u865a\u6839\u76f8\u8fde\n//\u6216\u8005\u8bf4\u8fd9\u4e2a\u70b9\u5c5e\u4e8e\u6700\u5916\u9762\u7684\u65e0\u9650\u5927\u7684\u5706\n~~~\n\n# \u4e3b\u51fd\u6570\u4ee3\u7801\u5b9e\u73b0\n\n~~~cpp\nint main()\n{\n    scanf(\"%d%d%d\",&n,&m,&T);\n    for(int i=1;i<=n;i++)scanf(\"%d%d\",&mp[i][1],&mp[i][2]);\n    for(int i=1;i<=m;i++)scanf(\"%d%d%d\",&O[i].r,&O[i].x,&O[i].y);//\u8f93\u5165\n    sort(O+1,O+m+1,cmp);//\u6392\u5e8f\n    for(int i=1;i<=m;i++)\n    {\n        if(!v[i])df(i);\n    }//\u95ee\u9898\u4e00\n    for(int i=1;i<=m;i++)\n\t{\n        bool p=1;\n        for(int j=i+1;j<=m;j++)\n\t\t{\n            if(check(i,j))p=0;\n        }\n        if(p)adde(i,0),adde(0,i);\n    }//\u95ee\u9898\u4e8c\n    dfs(0,0);//LCA\u57fa\u672c\u64cd\u4f5c\n    for(int i=1;i<=m;i++)\n    {\n        for(int j=1;j<=n;j++)\n\t\t{\n              if(!z[j]&&(long long)((long long)(O[i].x-mp[j][1])*(O[i].x-mp[j][1])+(long long)(O[i].y-mp[j][2])*(O[i].y-mp[j][2]))<=(long long)O[i].r*O[i].r)z[j]=i;\n        }\n    }\n    for(int i=1;i<=n;i++)if(!z[i])z[i]=0;//\u95ee\u9898\u4e09\n    while(T--)\n\t{\n        int q,w;\n        scanf(\"%d%d\",&q,&w);\n        printf(\"%d\\n\",d[z[w]]+d[z[q]]-2*d[LCA(z[q],z[w])]);\n        //\u627e\u5230\u6700\u5c11\u6b21\u6570\u5e76\u8f93\u51fa\n    }\n}\n~~~\n\n[\u5b8c\u6574\u4ee3\u7801](https://fat-old-eight.github.io/%E9%A2%98%E8%A7%A3/2022/02/12/solution-cf33d.html)",
        "postTime": 1644655582,
        "uid": 329177,
        "name": "FatOldEight",
        "ccfLevel": 0,
        "title": "CF33D Knights \u9898\u89e3"
    },
    {
        "content": "### \u505a\u9898\u4e4b\u524d\n\u8fd9\u9053\u9898\u7684\u4fe1\u606f\u91cf\u6bd4\u8f83\u5927\uff0c\u9700\u8981\u6211\u4eec\u9010\u5b57\u9010\u53e5\u5730\u53bb\u7406\u89e3\u9898\u610f\uff0c\u7279\u522b\u8981\u6ce8\u610f\u9898\u76ee\u4e2d\u7684\u7ec6\u8282\u3002  \n### \u6cd51\n\u9996\u5148\u6211\u4eec\u53d1\u73b0\uff0c\u6bcf\u4e2a\u6805\u680f\u90fd\u662f\u5706\uff0c\u5e76\u4e14\u4efb\u610f\u4e24\u4e2a\u6805\u680f**\u6ca1\u6709\u4ea4\u53c9\u70b9**\u3002\u8fd9\u662f\u4ec0\u4e48\u610f\u601d\u5462\uff1f\u8fd9\u610f\u5473\u7740\u8fd9\u4e24\u4e2a\u5706\u5185\u542b\u6216\u5916\u79bb\u3002\u540c\u65f6\uff0c\u8fd9\u4e5f\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u53e6\u4e00\u4e2a\u4fe1\u606f\uff1a\u76ee\u6807\u70b9\u95f4\u7684\u8def\u5f84\u7a7f\u8fc7\u6805\u680f\u7684\u6700\u5c11\u6570\u91cf\u4e0d\u4f1a\u56e0\u4e3a\u6ca1\u6709\u5305\u542b\u59cb\u7ec8\u70b9\u7684\u6805\u680f\u800c\u589e\u52a0\uff0c\u56e0\u4e3a\u8def\u5f84\u603b\u53ef\u4ee5\u901a\u8fc7\u5f2f\u66f2\u7ed5\u8fc7\u8fd9\u4e9b\u6805\u680f\u3002\u7531\u6b64\u6211\u4eec\u53ef\u4ee5\u8fdb\u4e00\u6b65\u63a8\u65ad\u51fa\uff0c\u53ea\u6709\u5f53\u4e00\u4e2a\u5706**\u5305\u542b\u6e90\u70b9\u6216\u7ec8\u70b9**\u65f6\uff0c\u5b83\u624d\u4f1a\u5f71\u54cd\u672c\u9898\u7684\u7b54\u6848\u3002  \n\u90a3\u4e48\uff0c\u8fd9\u4e2a\u5f71\u54cd\u662f\u600e\u6837\u7684\u5462\uff1f\u663e\u800c\u6613\u89c1\uff0c\u6bcf\u6709\u4e00\u4e2a\u5305\u542b\u7740\u70b9\u7684\u6805\u680f\uff0c\u9a91\u58eb\u5c31\u8981\u7a7f\u8fc7\u4e00\u4e2a\u6805\u680f\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7edf\u8ba1\u5305\u542b\u8d77\u70b9\u6216\u6e90\u70b9\u7684\u5706\u7684\u4e2a\u6570\uff0c\u518d\u52a0\u8d77\u6765\u5c31\u53ef\u4ee5\u4e86\u2014\u2014\u8fd9\u6837\u505a\u7684\u540e\u679c\u662fWA\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5e76\u975e\u6240\u6709\u8fd9\u6837\u7684\u5706\u90fd\u5e94\u8be5\u88ab\u7edf\u8ba1\u3002\u5982\u679c**\u540c\u65f6\u5305\u542b**\u4e86\u8d77\u70b9\u548c\u6e90\u70b9\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5706\u663e\u7136**\u4e0d\u9700\u8981**\u88ab\u7a7f\u8fc7\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u8981\u6c42\u7684\u7b54\u6848\u5c31\u662f**\u53ea\u5305\u62ec\u8d77\u70b9\u548c\u6e90\u70b9\u5f53\u4e2d\u4e00\u4e2a\u70b9**\u7684\u5706\u7684\u4e2a\u6570\u3002  \n\u5982\u4f55\u6c42\u4e00\u4e2a\u70b9\u662f\u4e0d\u662f\u5728\u4e00\u4e2a\u5706\u4e4b\u5185\u5462\uff1f\u6211\u4eec\u77e5\u9053\uff0c\u5706\u662f\u5230\u5706\u5fc3\u7684\u8ddd\u79bb\u7b49\u4e8e\u534a\u5f84\u7684\u6240\u6709\u70b9\u7684\u96c6\u5408\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u6c42\u4e00\u4e2a\u70b9\u662f\u4e0d\u662f\u5728\u4e00\u4e2a\u5706\u4e4b\u5185\uff0c\u53ea\u9700\u8981\u6c42\u8fd9\u4e2a\u70b9**\u5230\u5706\u5fc3\u7684\u8ddd\u79bb**\u662f\u5426\u5c0f\u4e8e\u534a\u5f84\u3002\u8ddd\u79bb\u53ef\u4ee5\u4f7f\u7528**\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb**\u516c\u5f0f\u8ba1\u7b97\uff0c\u5373d=sqrt((x1-x2)2+(y1-y2)2)\uff0c\u4e3a\u4e86**\u907f\u514d\u635f\u5931\u7cbe\u5ea6**\uff0c\u53ef\u4ee5\u4f7f\u7528\u8ddd\u79bb\u7684**\u5e73\u65b9**\u6765\u8fdb\u884c\u6bd4\u8f83\u3002  \n\u6700\u540e\u6709\u4e00\u4e2a\u5c0f\u7ec6\u8282\uff0c\u8fd9\u9053\u9898\u9898\u76ee\u4e2d\u7684**\u201c\u76f4\u5f84\u201d\u5b9e\u4e3a\u534a\u5f84**\u3002  \n\u7801\u98ce\u5c31\u8fd9\u6837\u4e86\u2026\u2026\u8bf7\u89c1\u8c05\u2026\u2026\n```cpp\n#include<cctype>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint n,m,k,a,b,r[1001],relationship[1001][1001],total[1001][1001];\nstruct point\n{\n\tint x,y;\n}target[1001],circle[1001];\nvoid fastinput(int &t)\n{\n\tchar tmp;\n\tint signum=1;\n\tt=0;\n\tdo\n\t{\n\t\ttmp=getchar();\n\t\tif(tmp=='-')\n\t\t\tsignum=-1;\n\t}\n\twhile(!isdigit(tmp));\n\tdo\n\t{\n\t\tt=t*10+tmp-'0';\n\t\ttmp=getchar();\n\t}\n\twhile(isdigit(tmp));\n\tt*=signum;\n\treturn;\n}\ntemplate<typename Type,typename ..._Type>\n\tvoid fastinput(Type &t,_Type &...temp)\n\t{\n\t\tfastinput(t);\n\t\tfastinput(temp...);\n\t}\nvoid fastoutput(int t)\n{\n\tif(t<0)\n\t{\n\t\tt=-t;\n\t\tputchar('-');\n\t}\n\tif(t>9)\n\t\tfastoutput(t/10);\n\tputchar(t%10+'0');\n\treturn;\n}\nvoid fastoutputln(int t)\n{\n\tfastoutput(t);\n\tputchar('\\n');\n\treturn;\n}\ntemplate<typename Type,typename ..._Type>\n\tvoid fastoutputln(Type t,_Type ...temp)\n\t{\n\t\tfastoutputln(t);\n\t\tfastoutputln(temp...);\n\t}\nlong long distance_2(const point &t1,const point &t2)\n{\n\treturn (long long)(t1.x-t2.x)*(long long)(t1.x-t2.x)+(long long)(t1.y-t2.y)*(long long)(t1.y-t2.y);\n}\nbool in(int t_point,int t_circle)\n{\n\tif(!relationship[t_point][t_circle])//\u8bb0\u5fc6\u5316\n\t\trelationship[t_point][t_circle]=(distance_2(target[t_point],circle[t_circle])<(long long)(r[t_circle])*(long long)(r[t_circle]))+1;//\u8f6c\u6362\u4e3along long\u907f\u514d\u4e58\u6cd5\u8d8a\u754c\n\treturn relationship[t_point][t_circle]-1;\n}\nint answer(int x,int y)\n{\n\tint result=total[x][y];\n\tif(!result)//\u8bb0\u5fc6\u5316\n\t\tfor(int i=1;i<=m;++i)\n\t\t\tif(in(x,i)&&!in(y,i)||in(y,i)&&!in(x,i))\n\t\t\t\t++result;\n\treturn result;\n}\nint main()\n{\n\tfastinput(n,m,k);\n\tfor(int i=1;i<=n;++i)\n\t\tfastinput(target[i].x,target[i].y);\n\tfor(int i=1;i<=m;++i)\n\t\tfastinput(r[i],circle[i].x,circle[i].y);\n\twhile(k--)\n\t{\n\t\tfastinput(a,b);\n\t\tfastoutputln(answer(a,b));\n\t}\n\treturn 0;\n}\n```\n### \u6cd52\n\u8fd9\u91cc\u8fd8\u6709\u53e6\u5916\u4e00\u79cd\u601d\u8def\uff0c\u5e76\u975e\u4f7f\u7528\u66b4\u529b\u7684\u679a\u4e3e\u7b97\u6cd5\u3002\u5c06\u76f8\u90bb\u7684\u7531\u5706\u5206\u5272\u5f97\u5230\u7684**\u533a\u57df\u8fde\u8fb9**\uff0c\u8fb9\u6743\u4e3a\u4e00\uff0c\u5bb9\u6613\u8bc1\u5f97\u5f97\u5230\u7684\u662f\u4e00\u4e2a**\u68ee\u6797**\uff0c\u800c**\u6700\u5916\u5c42**\u7684\u5706\u81ea\u7136\u5730\u8fde\u63a5\u5230\u4e86**\u865a\u6839**0\u53f7\u7ed3\u70b9\u3002\u7136\u540e\u6211\u4eec\u8ba1\u7b97\u51fa\u6bcf\u4e00\u4e2a**\u6218\u7565\u63a7\u5236\u70b9\u5c5e\u4e8e\u54ea\u4e00\u4e2a\u533a\u57df**\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u5c31\u901a\u8fc7**LCA**\u548c\u6811\u7684**\u6df1\u5ea6**\u6c42\u5f97**\u6218\u7565\u63a7\u5236\u70b9\u6240\u5c5e\u533a\u57df**\u5728**\u6811\u4e0a\u7684\u6700\u77ed\u8ddd\u79bb**\u3002  \n\u4ee3\u7801\u8dd1\u4e86\u4e00\u4e2a\u591a\u5c0f\u65f6\u4e86\u8fd8\u5728\u8dd1\u2026\u2026\u6240\u4ee5\u4e0d\u77e5\u9053\u662f\u5bf9\u662f\u9519\u2026\u2026\u5c31\u4e0d\u4e0a\u4ee3\u7801\u4e86\u2026\u2026   \n\n\n------------\n\n**PS\uff1a**\u4ee3\u7801\u5e76\u975e\u6284\u88ad\uff0c\u5b66\u6821\u8003\u8bd5\u7684\u65f6\u5019\u4f7f\u7528\u7684\u662f\u4ed6\u4eba\u8d26\u53f7\u63d0\u4ea4\uff0c\u6240\u4ee5\u548c\u67d0\u4f4d\u4ec1\u5144\u7684\u4ee3\u7801\u76f8\u540c\u2026\u2026",
        "postTime": 1548942926,
        "uid": 67952,
        "name": "\u767d\u9c9f",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF33D \u3010Knights\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u4e2a\u5f88\u66b4\u529b\u7684\u60f3\u6cd5\u2026\u2026\n\n\u9996\u5148\u5f88\u5bb9\u6613\u770b\u51fa\u8fd9\u4e9b\u6218\u7565\u76ee\u6807\u70b9\u80fd\u7ec4\u6210\u4e00\u7ec4\u68ee\u6797\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5efa\u7acb\u4e00\u4e2a\u865a\u6839\uff0c\u5c31\u53ef\u4ee5\u628a\u5b83\u8f6c\u5316\u4e3a\u4e00\u9897\u6709\u6839\u6811\u3002\u800c\u6700\u5c11\u722c\u8fc7\u591a\u5c11\u680f\u6746\u5219\u662f\u95ee\u6811\u4e0a\u4e24\u70b9\u95f4\u7684\u6700\u77ed\u8ddd\u79bb\u662f\u591a\u5c11\u3002\n\n\u90a3\u4e48\u65b9\u6cd5\u5c31\u663e\u800c\u6613\u89c1\u4e86\uff0cLCA\u3002\u8fb9\u6743\u4e3a1\uff0c\u865a\u6839\u4e0d\u5f71\u54cd\u7b54\u6848\uff0c\u591a\u6b21\u67e5\u8be2\uff08\u5982\u679c\u53ea\u6709\u4e00\u6b21\u5176\u5b9e\u53ef\u4ee5\u66b4\u529b\u679a\u4e3e\uff0c\u597d\u50cf\u6709\u8fd9\u4e48\u4e2a\u9898233\uff09\u3002\n\n\u4ee3\u7801\u5982\u4e0b\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nint n,m,k;\nstruct hehe{\n    int nx,nd;\n}e[2000100];\nstruct kk{\n    long long r,x,y;\n}b[1010],a[1010];\nint cnt,fi[1010],dep[1010],f[10001][21],lim;\nbool cmp(const kk & p,const kk & q)\n{\n    return\tp.r<q.r;\n}\nlong long disk(kk p,kk q)\n{\n    return sqrt((p.x-q.x)*(p.x-q.x)+(p.y-q.y)*(p.y-q.y));\n}\nvoid add(int a,int b)\n{\n    e[++cnt]=(hehe){fi[a],b},fi[a]=cnt;\n}\nvoid dfs(int p,int fa){\n    f[p][0]=fa;dep[p]=dep[fa]+1;\n    for(int i=fi[p];i;i=e[i].nx)\n    if(e[i].nd!=fa)dfs(e[i].nd,p);\n}\nint LCA(int u,int v)\n{\n    if(dep[u]>dep[v])swap(u,v);\n    for(int i=lim;i>=0;i--)if(dep[u]<=dep[f[v][i]])v=f[v][i];\n    if(u==v)return u;\n    for(int i=lim;i>=0;i--)if(f[v][i]!=f[u][i])u=f[u][i],v=f[v][i];\n    return f[u][0];\n}\nint main()\n{\n    scanf(\"%d%d%d\",&n,&m,&k);\n    lim=log(n)/log(2)+1;\n    for(int i=1;i<=n;i++)\n    scanf(\"%lld%lld\",&a[i].x,&a[i].y);\n    for(int i=1;i<=m;i++)\n    scanf(\"%lld%lld%lld\",&b[i].r,&b[i].x,&b[i].y);\n    b[0]=(kk){2147483647,0,0};\n    sort(b,b+m+1,cmp);\n    for(int i=1;i<=n;i++)\n    {\n    for(int j=0;j<=m;j++)\n    {\n    int dis=disk(a[i],b[j]);\n    if(dis<b[j].r){a[i].r=j;break;}\n    }\n    }\n    for(int i=0;i<=m;i++)\n    {\n    for(int j=i+1;j<=m;j++)\n    if(disk(b[i],b[j])<b[j].r){add(i,j);add(j,i);break;}\n    }\n    dfs(m,m);\n    for(int j=1;j<=lim;j++)\n    for(int i=0;i<=m;i++)\n    f[i][j]=f[f[i][j-1]][j-1];\n    for(int i=1;i<=k;i++)\n    {\n        int p,q;\n        scanf(\"%d%d\",&p,&q);\n        int lc=LCA(a[p].r,a[q].r);\n        cout<<dep[a[p].r]+dep[a[q].r]-2*dep[lc]<<endl;\n    }\n}\n```",
        "postTime": 1530606084,
        "uid": 21710,
        "name": "\u8fd9\u6709\u4e00\u53ea\u533f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF33D \u3010Knights\u3011"
    },
    {
        "content": "### $\\text{Difficulty : 2000}$\n---\n### \u89e3\u9898\u601d\u8def\uff1a\n\n\u66b4\u529b\u8ba1\u7b97\u51e0\u4f55\u3002\n\n\u4e00\u4e2a\u9a91\u58eb\u9700\u8981\u8de8\u8fc7\u6805\u680f\u5f53\u4e14\u4ec5\u5f53\u4e00\u4e2a\u57ce\u5821\u5728\u6805\u680f\u5185\u90e8\uff0c\u53e6\u4e00\u4e2a\u5728\u5916\u9762\u3002\n\n\u76f4\u63a5\u6839\u636e\u5230\u5706\u5fc3\u7684\u8ddd\u79bb\u548c\u534a\u5f84\u7684\u5927\u5c0f\u5173\u7cfb\u8ba1\u7b97\u51fa\u662f\u5426\u5728\u56ed\u5185\uff0c\u4e24\u4e2a\u4e00\u6bd4\u8f83\u5c31\u51fa\u6765\u4e86\u3002\u53ef\u4ee5\u4e24\u8fb9\u540c\u65f6\u5e73\u65b9\u4ee5\u514d\u7cbe\u5ea6\u8bef\u5dee\u3002\n\n\u603b\u590d\u6742\u5ea6 $O(mk)$\uff0c\u53ef\u4ee5\u63a5\u53d7\u3002\u6709\u4f18\u5316\u65b9\u6848\u4f46\u662f\u6ca1\u6709\u5fc5\u8981\u3002\n\n\n---\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n#define int long long\nconst int MAXN=10005;\nint n,m,Q,x[MAXN],y[MAXN],xx[MAXN],yy[MAXN],r[MAXN],a,b,cnt;\nbool check(int x1,int y1,int x2,int y2,int r){\n\treturn (x1-x2)*(x1-x2)+(y1-y2)*(y1-y2)<=r*r;\n}\nsigned main(){\n\tscanf(\"%I64d%I64d%I64d\",&n,&m,&Q);\n\tfor(int i=1;i<=n;i++)scanf(\"%I64d%I64d\",&x[i],&y[i]);\n\tfor(int i=1;i<=m;i++)scanf(\"%I64d%I64d%I64d\",&r[i],&xx[i],&yy[i]);\n\twhile(Q--){\n\t\tscanf(\"%I64d%I64d\",&a,&b);\n\t\tcnt=0;\n\t\tfor(int i=1;i<=m;i++)\n\t\tcnt+=check(x[a],y[a],xx[i],yy[i],r[i])^check(x[b],y[b],xx[i],yy[i],r[i]);\n\t\tprintf(\"%I64d\\n\",cnt);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1647532279,
        "uid": 223559,
        "name": "qxp101",
        "ccfLevel": 6,
        "title": "CF33D Knights \u9898\u89e3"
    },
    {
        "content": "\u3010\u89e3\u6790\u3011\n\n\u53ea\u9700\u8981\u641c\u7d22\u4e24\u4e2a\u4f4d\u7f6e\u88ab\u4e0d\u540c\u7684\u591a\u5c11\u4e2a\u6805\u680f\u5305\u56f4\u5373\u53ef\u3002\n\n\u3010\u7a0b\u5e8f\u3011\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#define maxn1 1005\n#define maxn2 1005\nusing namespace std;\nint n,m,k;\nint rad[maxn2];\nint u[maxn2][maxn2];\nint tot[maxn1][maxn1];\nstruct point{\n\tint x,y;\n}a[maxn1],b[maxn2];\nlong long distance_2(const point &t1,const point &t2){\n\treturn (long long)(t1.x-t2.x)*(long long)(t1.x-t2.x)+(long long)(t1.y-t2.y)*(long long)(t1.y-t2.y);\n}\nbool in(int x,int y){\n\tif(!u[x][y]){\n\t\tu[x][y]=(distance_2(a[x],b[y])<((long long)rad[y])*((long long)rad[y]))+1;\n\t}\n\treturn u[x][y]-1;\n}\nbool judge(bool x,bool y){\n\treturn (x&&!y)||(!x&&y);\n}\nint work(int x,int y){\n\tint i;\n\tif(!tot[x][y]){\n\t\tfor(i=1;i<=m;i++){\n\t\t\tif(judge(in(x,i),in(y,i))){\n\t\t\t\ttot[x][y]++;\n\t\t\t}\n\t\t}\n\t}\n\treturn tot[x][y];\n}\nint main(){\n\tmemset(tot,0,sizeof(tot));\n\tint i,j,t1,t2;\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tfor(i=1;i<=n;i++){\n    \tscanf(\"%d%d\",&a[i].x,&a[i].y);\n\t}\n\tfor(i=1;i<=m;i++){\n    \tscanf(\"%d%d%d\",&rad[i],&b[i].x,&b[i].y);\n\t}\n\tfor(i=1;i<=k;i++){\n    \tscanf(\"%d%d\",&t1,&t2);\n\t\tprintf(\"%d\\n\",work(t1,t2));\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1556762304,
        "uid": 55121,
        "name": "\u0442\u044b",
        "ccfLevel": 0,
        "title": "Knights"
    }
]