[
    {
        "content": "\u8fd9\u91cc\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u505a\u6cd5\u3002\n\n---\n\n\u4e00\u5f00\u59cb\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u8fd9\u6837\u4e00\u70b9\uff1a\u5982\u679c\u4e0d\u5b58\u5728\u4efb\u4f55\u4e00\u5bf9\u8bb2\u5ea7\u5728\u4e00\u4e2a\u573a\u5730\u4e2d\u51b2\u7a81\uff0c\u53e6\u4e00\u573a\u5730\u4e0d\u51b2\u7a81\uff0c\u90a3\u4e48\u5c31\u4e0d\u4f1a\u5b58\u5728\u4e00\u4e2a\u5b50\u96c6\u7684\u8bb2\u5ea7\u4e0d\u5408\u6cd5\u3002\u53cd\u4e4b\u5219\u4e00\u5b9a\u5b58\u5728\u4e0d\u5408\u6cd5\u7684\u5b50\u96c6\u3002\u76f8\u4fe1\u5927\u5bb6\u90fd\u80fd\u610f\u4f1a\u3002\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u8fd9\u9898\u53ea\u9700\u8981\u5224\u65ad\u5408\u6cd5\u6027\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528\u7c97\u7565\u7684\u5224\u65ad\u65b9\u6cd5\uff0c\u6bd4\u5982\u54c8\u5e0c\u3002\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u7ed9\u4e00\u4e2a\u8bb2\u5ea7\u968f\u673a\u4e00\u4e2a\u5f88\u5927\u7684\u6743\u503c\u3002\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8bb2\u5ea7\uff0c\u5c06\u5176\u4e24\u4e2a\u573a\u5730\u4e2d\u4e0e\u5b83\u65f6\u95f4\u65e0\u51b2\u7a81\u7684\u6240\u6709\u8bb2\u5ea7\u7684\u6743\u503c\u5f02\u6216\u8d77\u6765\uff0c\u5982\u679c\u6743\u503c\u4e3a $0$ \u5219\u8bf4\u660e\u8fd9\u4e2a\u8bb2\u5ea7\u4e0d\u4f1a\u548c\u5176\u4ed6\u8bb2\u5ea7\u51b2\u7a81\u3002\u5426\u5219\u5c31\u4f1a\u5b58\u5728\u51b2\u7a81\u3002\n\n\u4e4d\u4e00\u770b\u611f\u89c9\u8fd9\u4e2a\u4e1c\u897f\u7684\u6b63\u786e\u7387\u5e76\u4e0d\u662f\u5f88\u9ad8\uff0c\u4f46\u662f~~\u5b66\u957f\u544a\u8bc9\u6211~~\u8fd9\u4e2a\u4e1c\u897f\u51b2\u7a81\u7684\u6982\u7387\u662f $\\frac{1}{\\text{\u503c\u57df\u5927\u5c0f}}$ \u7684\u3002\u7528 `unsigned long long` \u7406\u8bba\u4e0a\u4e0d\u4f1a\u51fa\u95ee\u9898\u3002\u9664\u975e\u4f60\u662f\u975e\u914b\u4e2d\u7684\u975e\u914b\u3002\n\n\u7136\u540e\u4e0d\u96be\u53d1\u73b0\uff0c\u6211\u4eec\u8981\u6c42\u7684\u4e1c\u897f\u53ea\u9700\u8981\u6309\u7167\u7aef\u70b9\u4f4d\u7f6e\u6392\u5e8f\u4e4b\u540e\uff0c\u6c42\u4e00\u4e2a \u524d\u7f00 / \u540e\u7f00 \u5f02\u6216\u548c\u5c31\u597d\u4e86\u3002\u52a0\u4e0a\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n \\log n)$ \u7684\u3002\u7801\u91cf\u548c\u5e38\u6570\u90fd\u540a\u6253\u626b\u63cf\u7ebf\u505a\u6cd5\u3002\u5728\u6bd4\u8d5b\u7684\u65f6\u5019\u63a8\u8350\u4f7f\u7528\u8fd9\u79cd\u53ef\u4ee5\u79d2\u8fc7\u53c8\u6ca1\u6709\u7801\u529b\u8981\u6c42\u7684\u505a\u6cd5\u3002\n\n`Code` (\u5934\u6587\u4ef6\u5565\u7684\u8bf7\u81ea\u884c\u8865\u5145)\n\n```cpp\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nconst int MAXN = 200010;\n\nstruct Node {\n\tint p, id, k;\n\n\tNode() {}\n\tNode(int p, int id, int k):p(p), id(id), k(k) {}\n\n\tfriend bool operator < (Node a, Node b) { return a.p == b.p ? a.k < b.k : a.p < b.p; }\n}a1[MAXN], a2[MAXN];\n\null val[MAXN], S[MAXN];\n\nint main() {\n\tsrand(time(NULL));\n\tint n = read, N = 0;\n\tfor(int i = 1; i <= n; i++) {\n\t\tval[i] = (ull)rand() << 31 | rand();\n\t\ta1[++N] = Node(read, i, 0);\n\t\ta1[++N] = Node(read, i, 1);\n\t\tN -= 2;\n\t\ta2[++N] = Node(read, i, 0);\n\t\ta2[++N] = Node(read, i, 1);\n\t}\n\tsort(a1 + 1, a1 + 1 + N);\n\tsort(a2 + 1, a2 + 1 + N);\n\tull Xor = 0;\n\tfor(int i = 1; i <= N; i++)\n\t\tif(a1[i].k) Xor ^= val[a1[i].id];\n\t\telse S[a1[i].id] ^= Xor;\n\tXor = 0;\n\tfor(int i = N; i >= 1; i--)\n\t\tif(!a1[i].k) Xor ^= val[a1[i].id];\n\t\telse S[a1[i].id] ^= Xor;\n\tXor = 0;\n\tfor(int i = 1; i <= N; i++)\n\t\tif(a2[i].k) Xor ^= val[a2[i].id];\n\t\telse S[a2[i].id] ^= Xor;\n\tXor = 0;\n\tfor(int i = N; i >= 1; i--)\n\t\tif(!a2[i].k) Xor ^= val[a2[i].id];\n\t\telse S[a2[i].id] ^= Xor;\n\tint flag = 0;\n\tfor(int i = 1; i <= n; i++) flag |= S[i] > 0;\n\tif(flag) puts(\"NO\");\n\telse puts(\"YES\");\n\treturn 0;\n}\n```",
        "postTime": 1578216104,
        "uid": 20782,
        "name": "CYJian",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1284D \u3010New Year and Conference\u3011"
    },
    {
        "content": "[\u9898\u9762](https://www.luogu.com.cn/problem/CF1284D)\n\n## \u7b80\u8981\u9898\u610f\n\n\u53ef\u80fd\u4e0d\u662f\u5f88\u51c6\u786e\uff0c\u4f46\u662f\u53ef\u4ee5\u8f85\u52a9\u7406\u89e3\u4e00\u4e0b\u9898\u610f\u3002\n\n\u6709 $n$ \u5bf9\u533a\u95f4\uff0c\u6bcf\u4e00\u4e2a\u8868\u8fbe\u4e3a $[sa,ea],[sb,eb]$\u3002\u5b9a\u4e49\u4e24\u5bf9\u533a\u95f4\u201c\u51b2\u7a81\u201d\u5f53\u4e14\u4ec5\u5f53\u4e24\u5bf9\u533a\u95f4\u4e2d\u7684\u4e24\u4e2a\u533a\u95f4\u5206\u522b\u76f8\u4ea4\u6216\u8005\u90fd\u4e0d\u76f8\u4ea4\uff0c\u4e0b\u9762\u4e24\u79cd\u60c5\u51b5\u90fd\u4e0d\u6ee1\u8db3\u3002\n\n1. $[sa_i,ea_i]$ \u4e0e $[sa_j,ea_j]$ \u76f8\u4ea4\u4e14 $[sb_i,eb_i]$ \u4e0e $[sb_j,eb_j]$ \u76f8\u4ea4\u3002\n2. $[sa_i,ea_i]$ \u4e0e $[sa_j,ea_j]$ \u4e0d\u76f8\u4ea4\u4e14 $[sb_i,eb_i]$ \u4e0e $[sb_j,eb_j]$ \u4e0d\u76f8\u4ea4\u3002\n\n\u95ee\u662f\u5426\u4e0d\u5b58\u5728\u201c\u51b2\u7a81\u201d\u7684\u4e24\u5bf9\u533a\u95f4\u3002\n\n\u5176\u4e2d $n\\leq10^5$\uff0c$sa\\leq~ea\\leq10^9,sb\\leq eb\\leq10^9$\u3002\n\n## \u5206\u6790\n\n\u5982\u679c\u4f60\u8bfb\u61c2\u4e86\u9898\u9762\u7684\u8bdd\uff0c\u4f60\u4f1a\u6709\u4e00\u4e2a\u6734\u7d20\u7684\u66b4\u529b\uff0c\u5373 $n^2$ \u7684\u7b97\u6cd5\uff0c\u5c31\u662f\u628a\u6240\u6709\u7684\u533a\u95f4\u5bf9\u6328\u4e2a\u6bd4\u914d\u4e00\u904d\u3002\u8003\u8651\u5728\u8fd9\u4e2a\u66b4\u529b\u7b97\u6cd5\u7684\u57fa\u7840\u4e0a\u4f18\u5316\u3002\n\n\u8003\u8651\u53e6\u4e00\u79cd\u65b9\u6cd5\u3002\u6211\u4eec\u628a\u4e0d\u7b26\u5408\u9898\u610f\u7684\u62c6\u5206\u4e3a\u6ee1\u8db3\u533a\u95f4 $a$ \u4e0d\u548c\u5176\u4ed6\u91cd\u53e0\u4e14$b$\u548c\u5176\u4ed6\u6709\u91cd\u53e0\uff0c\u548c\u533a\u95f4 $b$ \u4e0d\u548c\u5176\u4ed6\u91cd\u53e0\u4e14 $a$ \u548c\u5176\u4ed6\u6709\u91cd\u53e0\u3002\u4e24\u79cd\u60c5\u51b5\u53d8\u4e3a\u4e86\u4e00\u79cd\uff08\u53e6\u4e00\u79cd swap \u4e00\u4e0b\u5373\u53ef\uff09\u3002\n\n### \u514d\u8d39\u8865\u4e60STL\n\nmultiset \u662f\u4e00\u79cd\u63d2\u5165\u5220\u9664\u67e5\u627e\u4e3a $O(\\log n)$ \u7684\u6570\u636e\u7ed3\u6784\uff0c\u9ed8\u8ba4\u4f1a\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2a\u529f\u80fd\u66f4\u591a\u7684 priority_queue \u6216\u8005\u4e00\u4e2a\u53ef\u4ee5\u6709\u91cd\u590d\u5143\u7d20\u7684 set\u3002\n\n\u6309\u7167 $sa$ \u548c $ea$ \u8fdb\u884c\u5347\u5e8f\u6392\u5217\uff0c\u628a\u6bcf\u4e2a\u533a\u95f4 $[sb_i,eb_i]$ \u7684\u62c6\u5206\u4e3a\u4e09\u5143\u7ec4 $(sa_i,[sb_i,eb_i],1)$ \u548c\u533a\u95f4 $(ea_i,[sb_i,eb_i],0)$\u3002\u6211\u4eec\u628a\u8fd9\u4e2a\u4e09\u5143\u7ec4\u7684\u7b2c\u4e00\u5173\u952e\u5b57\u6210\u4e3a\u65f6\u95f4\u3002\u6392\u5e8f\u4fdd\u8bc1\u65f6\u95f4\u5355\u8c03\u9012\u589e\uff0c\u679a\u4e3e\u65f6\u4fdd\u8bc1\u5f53\u524d\u6240\u6709\u5728 multiset \u4e2d\u7684\u533a\u95f4\u90fd\u5305\u542b\u5f53\u524d\u8003\u8651\u7684 $t$ \u65f6\u95f4\u3002\u7ef4\u62a4\u4e00\u4e0b\u5f53\u524d\u60c5\u51b5\u4e0b\u7684 $b$ \u5c31\u884c\u4e86\uff0c\u5c31\u662f\u7528\u4e24\u4e2a multiset \u7ef4\u62a4\u4e00\u4e0b $sb$ \u7684\u6700\u5927\u503c\u548c $eb$ \u7684\u6700\u5c0f\u503c\u3002\n\n\u590d\u6742\u5ea6\uff1a$O(n\\log n)$\n\n\u6838\u5fc3\u4ee3\u7801\u548c\u6ce8\u91ca\uff1a\n\n```cp\nconst ll MAXN=1e5+7;\nll n;\nvector<ll>sa,ea,sb,eb;\nstruct node\n{\n\tll t,s,e,op;\n\tnode(ll t_,ll s_,ll e_,ll op_):t(t_),s(s_),e(e_),op(op_){}\n\tbool operator<(const node& xx)const\n\t{\n\t\treturn t==xx.t?op<xx.op:t<xx.t;\n\t}\n};\nbool check()\n{\n\tmultiset<ll>s,e;\n\tvector<node>a;\n\tfor(ll i=0;i<n;i++)\n\t{\n\t\ta.push_back(node(sa[i],sb[i],eb[i],1));\n\t\ta.push_back(node(ea[i]+1,sb[i],eb[i],0));\n\t}\n\tsort(a.begin(),a.end());\n\tfor(ll i=0;i<2*n;i++)\n\t\tif(a[i].op)//op\u65b9\u4fbf\u7ef4\u62a4\u662f\u52a0\u5165\u8fd8\u662f\u5220\u9664\n\t\t{\n\t\t\tif(s.size())\n\t\t\t{\n\t\t\t\tll maxn=*(--s.end()),minn=*(e.begin());//multiset\u662f\u4ece\u5c0f\u5230\u5927\u7684\u3002\n\t\t\t\tif(maxn>a[i].e||minn<a[i].s)return 0;\n\t\t\t}\n\t\t\ts.insert(a[i].s),e.insert(a[i].e);//\u628a\u5f53\u524d\u65f6\u95f4\u7684\u63d2\u5165\u8fdb\u53bb\n\t\t}\n\t\telse\n\t\t\ts.erase(s.find(a[i].s)),e.erase(e.find(a[i].e));//\u540e\u9762\u7684\u4f1a\u8d85\u8fc7\u8fd9\u4e2a\u65f6\u95f4\uff0c\u4e0d\u4f1a\u5bf9\u7b54\u6848\u6709\u8d21\u732e\u4e86\uff0c\u6240\u4ee5\u53bb\u6389\u3002\n\treturn 1;\n}\nint main()\n{\n\tn=read();\n\tsa.resize(n),ea.resize(n),sb.resize(n),eb.resize(n);\n\tfor(ll i=0;i<n;i++)\n\t{\n\t\tsa[i]=read(),ea[i]=read(),sb[i]=read(),eb[i]=read();\n\t}\n\tbool flag=check();\n\tswap(sa,sb);swap(ea,eb);//\u4ea4\u6362\u4e00\u4e0b\n\tflag&=check();//\u4e24\u4e2a\u90fd\u6ee1\u8db3\u624d\u5bf9\n\tif(flag)puts(\"YES\");\n\telse puts(\"NO\");\n\treturn 0;\n}\n```",
        "postTime": 1651128614,
        "uid": 395288,
        "name": "Yuby",
        "ccfLevel": 6,
        "title": "CF1284D\u9898\u89e3"
    },
    {
        "content": "\u6765\u81ea CF \u8d5b\u65f6\u7684\u667a\u969c\u505a\u6cd5\u3002\n\n\u53ea\u8003\u8651\u4e00\u5bf9\u6f14\u8bb2 A \u533a\u95f4\u76f8\u4ea4 B \u533a\u95f4\u4e0d\u76f8\u4ea4\u7684\u60c5\u51b5\u3002\n\n\u5c06\u6240\u6709\u6f14\u8bb2\u6309 A \u7684\u5de6\u7aef\u70b9\u6392\u5e8f\uff0c\u7ef4\u62a4\u626b\u63cf\u7ebf\uff0c  \n\u7ef4\u62a4 A \u533a\u95f4\u8de8\u8fc7\u626b\u63cf\u7ebf\u7684\u6240\u6709\u6f14\u8bb2\uff0c\u7136\u540e\u5bf9\u4e8e A \u7684\u5de6\u7aef\u70b9\u521a\u597d\u5728\u626b\u63cf\u7ebf\u4e0a\u7684\u6f14\u8bb2 x \uff0c  \n\u5176\u4ed6 A \u533a\u95f4\u4e0e\u5176\u76f8\u4ea4\u7684\u6f14\u8bb2 y \u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n1. y \u8de8\u8fc7\u4e86\u5f53\u524d\u7684\u626b\u63cf\u7ebf\n2. x \u8de8\u8fc7\u4e86 y \u7684\u5de6\u7aef\u70b9\n\n\u524d\u8005\u5728\u73b0\u5728\u88ab\u7ef4\u62a4\u4e86\uff0c\u540e\u8005\u5728\u679a\u4e3e\u5230 y \u7684\u65f6\u5019 x \u4f1a\u88ab\u7ef4\u62a4\u3002\n\n\u90a3\u4e48\u53ea\u9700\u8981\u5c06\u8de8\u8fc7\u626b\u63cf\u7ebf\u7684 B \u533a\u95f4\u7ef4\u62a4\u8d77\u6765\uff0c\u652f\u6301\u67e5\u627e\u6709\u591a\u5c11\u533a\u95f4\u4e0e\u5f53\u524d\u6f14\u8bb2 x \u7684 B \u533a\u95f4\u76f8\u4ea4\u3002\n\n\u533a\u95f4\u76f8\u4ea4\u6709 l, r \u4e24\u4e2a\u7ef4\u5ea6\u7684\u9650\u5236\uff0c\u5bf9\u5e94\u5728\u4e8c\u7ef4\u5e73\u9762\u4e0a\u5c31\u662f\u4e00\u4e2a\u77e9\u5f62\uff0c  \n\u7528\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5f53\u524d\u8de8\u8fc7\u626b\u63cf\u7ebf\u7684\u6f14\u8bb2\u7684 B \u533a\u95f4\u5728\u4e8c\u7ef4\u5e73\u9762\u4e0a\u7684\u4f4d\u7f6e\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u4e00\u5bf9\u6f14\u8bb2 A \u533a\u95f4\u4e0d\u76f8\u4ea4\u800c B \u533a\u95f4\u76f8\u4ea4\u7684\u60c5\u51b5\uff0c\u628a A, B \u533a\u95f4\u4ea4\u6362\u518d\u505a\u4e00\u904d\u5373\u53ef\u3002\n\n\u6765\u81ea CF \u8d5b\u540e\u542c\u522b\u4eba\u8bf4\u7684\u795e\u4ed9\u505a\u6cd5\u3002\n\n\u8fd8\u662f\u53ea\u8003\u8651\u4e00\u5bf9\u6f14\u8bb2 A \u533a\u95f4\u76f8\u4ea4 B \u533a\u95f4\u4e0d\u76f8\u4ea4\u7684\u60c5\u51b5\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u6f14\u8bb2 x \uff0c\u5982\u679c\u80fd\u6c42\u51fa\u4e0e\u5b83 A \u533a\u95f4\u76f8\u4ea4\u7684\u6f14\u8bb2\u96c6\u5408 S \u548c B \u533a\u95f4\u76f8\u4ea4\u7684\u6f14\u8bb2\u96c6\u5408 T \uff0c  \n\u53ea\u9700\u6bd4\u8f83 S, T \u662f\u5426\u76f8\u7b49\u5c31\u53ef\u4ee5\u5224\u65ad\u662f\u5426\u5408\u6cd5\u3002\n\n\u4f46\u662f\u533a\u95f4\u6570\u5f88\u591a\uff0c\u5e76\u4e0d\u80fd\u72b6\u538b\u5728\u4e00\u4e2a\u96c6\u5408\uff0c\u6ce8\u610f\u5230\u5bf9\u4e8e\u96c6\u5408\u552f\u4e00\u9700\u8981\u7684\u64cd\u4f5c\u662f\u6bd4\u8f83\u4e24\u4e2a\u96c6\u5408\u662f\u5426\u76f8\u7b49\u3002\n\n\u4e00\u4e2a\u7ecf\u5178\u5957\u8def\u662f\u7ed9\u6bcf\u4e2a\u6f14\u8bb2\u4e00\u4e2a\u968f\u673a\u53d6\u503c\uff0c\u7136\u540e\u4e00\u4e2a\u96c6\u5408 S \u7528\u5176\u5305\u542b\u7684\u6f14\u8bb2\u7684\u5f02\u6216\u548c\u8868\u793a\u3002\n\n\u7136\u540e\u628a\u5750\u6807\u79bb\u6563\u5316\u540e\u5bf9\u4e8e\u56db\u4e2a\u7ef4\u5ea6\u5206\u522b\u8bb0\u524d\u7f00\u540e\u7f00\u5f02\u6216\u548c\u4e4b\u7c7b\u7684\u5c31\u53ef\u4ee5\u76f4\u63a5\u67e5\u8be2\u4e86\u3002\n\n\u6392\u5e8f + \u626b\u63cf\u7ebf + \u4e8c\u7ef4\u7ebf\u6bb5\u6811\u7684\u53c2\u8003\u5b9e\u73b0\uff1a\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <vector>\n#define debug(...) fprintf(stderr, __VA_ARGS__)\n\ntypedef long long ll;\n\nstruct {\n\tinline operator int () { int x; return scanf(\"%d\", &x), x; }\n\tinline operator ll () { ll x; return scanf(\"%lld\", &x), x; }\n\ttemplate<class T> inline void operator () (T &x) { x = *this; }\n\ttemplate<class T, class ...A> inline void operator () (T &x, A &...a)\n\t{ x = *this; this -> operator ()(a...); }\n} read;\n\nconst int maxn = 100005;\nstruct shit {\n\tint l1, r1, l2, r2;\n};\nshit shi[maxn];\nint tmp[maxn << 1], tp;\n\nint iseg[maxn * 600], lt[maxn * 600], rt[maxn * 600], ip;\nint iquery(int now, int L, int R, int l) {\n\tif(R < l or !now) return 0;\n\tif(L >= l) return iseg[now];\n\tint M = (L + R) >> 1;\n\treturn iquery(lt[now], L, M, l) + iquery(rt[now], M + 1, R, l);\n}\n\nvoid imodi(int &now, int L, int R, int p, int x) {\n\tif(!now) now = ++ ip;\n\tiseg[now] += x;\n\tif(L == R) return;\n\tint M = (L + R) >> 1;\n\tif(p <= M) imodi(lt[now], L, M, p, x);\n\telse imodi(rt[now], M + 1, R, p, x);\n}\n\nint seg[maxn << 3];\nint query(int now, int L, int R, int r, int il) {\n\tif(L > r) return 0;\n\tif(R <= r) return iquery(seg[now], 1, tp, il);\n\tint M = (L + R) >> 1;\n\treturn query(now << 1, L, M, r, il) + query(now << 1 | 1, M + 1, R, r, il);\n}\n\nvoid modi(int now, int L, int R, int p, int pp, int x) {\n\t/* if(now == 1) debug(\"%d %d %d\\n\", p, pp, x); */\n\timodi(seg[now], 1, tp, pp, x);\n\tif(L == R) return;\n\tint M = (L + R) >> 1;\n\tif(p <= M) modi(now << 1, L, M, p, pp, x);\n\telse modi(now << 1 | 1, M + 1, R, p, pp, x);\n}\n\nstd::vector<shit> stmp[maxn << 1];\nbool solve(int n) {\n\tstd::sort(shi + 1, shi + n + 1, [](shit x, shit y) { return x.l1 < y.l1; });\n\n\t/* for(int i = 1; i <= n; i ++) */\n\t/* \tdebug(\"%d %d %d %d\\n\", shi[i].l1, shi[i].r1, shi[i].l2, shi[i].r2); */\n\n\tint be = 1, tot = 0;\n\tfor(int i = 1; i <= n; i ++) {\n\t\twhile(shi[i].l1 > be) {\n\t\t\tfor(shit s : stmp[be]) {\n\t\t\t\tmodi(1, 1, tp, s.l2, s.r2, -1);\n\t\t\t\t-- tot;\n\t\t\t}\n\t\t\t++ be;\n\t\t}\n\t\tint k = query(1, 1, tp, shi[i].r2, shi[i].l2);\n\t\tif(k != tot) return 1;\n\t\tstmp[shi[i].r1].push_back(shi[i]);\n\t\tmodi(1, 1, tp, shi[i].l2, shi[i].r2, 1);\n\t\t++ tot;\n\t}\n\n\tfor(int i = 1; i <= tp; i ++)\n\t\tstmp[i].clear();\n\n\tfor(int i = 1; i <= tp; i ++)\n\t\tiseg[i] = lt[i] = rt[i] = 0;\n\tmemset(seg, 0, sizeof seg);\n\n\treturn 0;\n}\n\nint main() {\n\tint n = read;\n\tfor(int i = 1; i <= n; i ++)\n\t\tread(shi[i].l1, shi[i].r1, shi[i].l2, shi[i].r2);\n\n\ttp = 0;\n\tfor(int i = 1; i <= n; i ++) {\n\t\ttmp[++ tp] = shi[i].l1;\n\t\ttmp[++ tp] = shi[i].r1;\n\t}\n\tstd::sort(tmp + 1, tmp + tp + 1);\n\tfor(int i = 1; i <= n; i ++) {\n\t\tshi[i].l1 = int(std::lower_bound(tmp + 1, tmp + tp + 1, shi[i].l1) - tmp);\n\t\tshi[i].r1 = int(std::lower_bound(tmp + 1, tmp + tp + 1, shi[i].r1) - tmp);\n\t}\n\n\ttp = 0;\n\tfor(int i = 1; i <= n; i ++) {\n\t\ttmp[++ tp] = shi[i].l2;\n\t\ttmp[++ tp] = shi[i].r2;\n\t}\n\tstd::sort(tmp + 1, tmp + tp + 1);\n\tfor(int i = 1; i <= n; i ++) {\n\t\tshi[i].l2 = int(std::lower_bound(tmp + 1, tmp + tp + 1, shi[i].l2) - tmp);\n\t\tshi[i].r2 = int(std::lower_bound(tmp + 1, tmp + tp + 1, shi[i].r2) - tmp);\n\t}\n\n\tif(solve(n)) return puts(\"NO\"), 0;\n\tfor(int i = 1; i <= n; i ++) {\n\t\tstd::swap(shi[i].l1, shi[i].l2);\n\t\tstd::swap(shi[i].r1, shi[i].r2);\n\t}\n\tif(solve(n)) puts(\"NO\");\n\telse puts(\"YES\");\n\t/* debug(\"%lf\\n\", (sizeof iseg) / 1024.0 / 1024.0 * 3); */\n}\n```",
        "postTime": 1578194828,
        "uid": 52232,
        "name": "Kewth",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1284D \u3010New Year and Conference\u3011"
    },
    {
        "content": "\u9650\u4e8e\u6c34\u5e73,\u6bd4\u8d5b\u65f6\u6ca1\u770b\u51fa\u8fd9\u4e2a\u548c\u626b\u63cf\u7ebf\u8fd8\u6709\u54c8\u5e0c\u6709\u4ec0\u4e48\u5173\u7cfb,\u7528\u79bb\u7ebf+\u7ebf\u6bb5\u6811\u6c42\u89e3,\u6b65\u9aa4\u7565\u5fae\u590d\u6742\u4f46\u662f\u5f88\u76f4\u89c2\n\n\u5c06\u8d77\u59cb\u548c\u7ed3\u675f\u770b\u4f5c\u6570\u8f74\u4e0a\u7684\u7ebf\u6bb5,\u5c06sa ea \u653e\u5728x\u8f74, sb eb\u653e\u5728y\u8f74, \u5206\u522b\u8fc7sa ea\u4f5c\u5e73\u884c\u4e8ey\u8f74\u7684\u76f4\u7ebf, \u8fc7sb eb\u4f5c\u5e73\u884c\u4e8ex\u8f74\u7684\u76f4\u7ebf \u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u77e9\u5f62\n\n\u5bf9\u4e8e\u7b2ci\u4e2a\u7684sa,ea,eb,ed (\u56db\u5143\u7ec4,\u4ee5\u4e0b\u7b80\u79f0 Q[i])\u7684x0,y0,x1,y1 ,\u5b83\u4eec\u6784\u6210\u4e86n\u4e2a\u77e9\u5f62\n\n\u672c\u95ee\u9898\u7b49\u4ef7\u4e8e\u6c42\u662f\u5426\u6709 i,j(i<j) \u4f7f\u5f97Q[i],Q[j] \u6ee1\u8db3\u4ee5\u4e0b\u4efb\u4e00\u6761\u4ef6:\n\n  \u4e3a\u4e86\u53d9\u8ff0\u65b9\u4fbf,\u79f0Q[x]\u7684x0,y0 \u4e3aQ[x]\u7684x\u8f74\u6295\u5f71,Q[x]\u7684x1,y1\u4e3aQ[x]\u7684y\u8f74\u6295\u5f71\n\n*1.Q[i]\u7684x\u8f74\u6295\u5f71\u4e0eQ[j]\u7684x\u8f74\u6295\u5f71\u6709\u91cd\u5408\u90e8\u5206\u4e14 Q[i]\u4e0eQ[j]\u7684y\u8f74\u6295\u5f71\u65e0\u91cd\u5408\u90e8\u5206 ------(1--1)\n\n*2.Q[i]\u7684x\u8f74\u6295\u5f71\u4e0eQ[j]\u7684y\u8f74\u6295\u5f71\u6709\u91cd\u5408\u90e8\u5206\u4e14 Q[i]\u4e0eQ[j]\u7684x\u8f74\u6295\u5f71\u65e0\u91cd\u5408\u90e8\u5206------(1--2)\n\n\u6211\u4eec\u5148\u53ea\u5355\u72ec\u8ba1\u7b97(1--2)\u7684\u60c5\u5f62\u662f\u5426\u5b58\u5728\n\u5bf9\u4e8e(1--1) \u53ea\u9700\u8981\u5c06\u56db\u5143\u7ec4Q[1~n]\u7684(sa,ea,sb,ed)\u53d8\u6210(sb,eb,sa,ea)\u518d\u6b21\u6309(1--2)\u7684\u60c5\u5f62\u8ba1\u7b97\u5373\u53ef\n\n\u6211\u4eec\u5bf9y\u8f74,\u8003\u8651\u4f7f\u7528\u4e0b\u5217\u7684\u7ebf\u6bb5\u6811\u8868\u793a\u662f\u5426\u6709\u7ebf\u6bb5\u8986\u76d6:\n  \n  1.\u652f\u6301\u533a\u95f4[l,r]\u53d8\u62101,\u533a\u95f4\u53d8\u62100\n  \n  2.\u652f\u6301\u6c42\u533a\u95f4[l,r]\u533a\u95f4\u548c \u662f\u5426\u5927\u4e8e0\n\n\u6211\u4eec\u66b4\u529b\u679a\u4e3en\u4e2a\u56db\u5143\u7ec4\n\n\u5bf9\u4e8eq[i]\u7684x\u8f74\u6295\u5f71,\u6211\u4eec\u9700\u8981\u5c06\u6240\u6709 q[j](j!=i\u4e14q[j]\u4e0eq[i]\u7684x\u8f74\u6295\u5f71\u6ca1\u6709\u91cd\u53e0) \u7684y\u8f74\u6295\u5f71\u5728 \u521d\u59cb\u5168\u4e3a0\u7684\u7ebf\u6bb5\u6811\u4e0a\u533a\u95f4\u66f4\u65b0\u4e3a1         -----(3--1)\n\n\u7136\u540e\u7528\u7ebf\u6bb5\u6811\u7684qry\u64cd\u4f5c\u770b l=q[i].x1 r=q[i].y1 , \u533a\u95f4[l,r]\u4e0a \u533a\u95f4\u548c\u662f\u5426\u5927\u4e8e0  ----(3--2)\n\n\u66b4\u529b\u8fc7\u7a0b\u4e2d\u53ea\u8981(3--2) \u6210\u7acb\u4e00\u6b21,\u5c31\u662f\u6ee1\u8db3(1--2)\u7684\u6761\u4ef6\u4e86\n\n\u7136\u800c(3--1)\u662fO(NlogN)\u7684\u66b4\u529b,\u8fd9\u662f\u4e2aO(N^2logN) \u89e3\u6cd5,\u9700\u8981\u7528\u79bb\u7ebf\u4f18\u5316,\u4e0d\u5fc5\u6bcf\u6b21\u91cd\u65b0\u5efa\u7acb\u7ebf\u6bb5\u6811\n\n\u7136\u540e\u5c31\u80fd\u6c42\u89e3\u4e86,\u79bb\u7ebf\u5b9e\u9645\u64cd\u4f5c\u4e0d\u4fbf\u53d9\u8ff0,\u8bf7\u770b\u4ee3\u7801\n\n\n```cpp\n    #include <bits/stdc++.h>\n    using namespace std;\n    #define int long long\n    const int maxn=100000+5;\n    int n,sa[maxn],ea[maxn],sb[maxn],eb[maxn];\n    struct Qple{\n      int x0,y0,x1,y1;\n    }a[maxn],q[maxn];\n    bool cmp0(const Qple &a,const Qple &b){return a.y0<b.y0;}\n    bool cmp1(const Qple &a,const Qple &b){return a.x0<b.x0;}\n     \n    const int N=2e5+10;\n    struct SeT{\n      int l,r;\n      int sum,add;\n    #define ls (p<<1)\n    #define rs (p<<1|1)\n    #define mid ((t[p].l+t[p].r)>>1)\n    }t[4*N];\n    void build(int p,int l,int r){\n      t[p].l=l,t[p].r=r;\n      if(r==l) return t[p].sum=0,t[p].add=0,void();\n      build(ls,l,mid);\n      build(rs,mid+1,r);\n      t[p].sum=t[ls].sum+t[rs].sum;\n    }\n    void spread(int p){\n      if(!t[p].add) return;\n      t[ls].add+=t[p].add;\n      t[ls].sum+=(t[ls].r-t[ls].l+1)*t[p].add;\n      t[rs].add+=t[p].add;\n      t[rs].sum+=(t[rs].r-t[rs].l+1)*t[p].add;\n      t[p].add=0;\n    }\n    void change(int p,int l,int r,int d){\n      if(l<=t[p].l&&t[p].r<=r){\n        t[p].sum+=(t[p].r-t[p].l+1)*d;\n        t[p].add+=d;\n        return;\n      }\n      spread(p);\n      if(l<=mid) change(ls,l,r,d);\n      if(r>=mid+1) change(rs,l,r,d);\n      t[p].sum=t[ls].sum+t[rs].sum;\n    }\n    int qry(int p,int l,int r){\n      if(l<=t[p].l&&t[p].r<=r) return t[p].sum;\n      spread(p);\n      int res=0;\n      if(l<=mid) res+=qry(ls,l,r);\n      if(r>=mid+1) res+=qry(rs,l,r);\n      return res;\n    }\n     \n    bool solve(){\n      vector<int>b;\n      for(int i=1;i<=n;++i){\n        b.push_back(sb[i]);\n        b.push_back(eb[i]);\n      }\n      sort(b.begin(),b.end()), b.resize(distance(b.begin(),unique(b.begin(),b.end())));\n      for(int i=1;i<=n;++i){\n        a[i].x0=sa[i],a[i].y0=ea[i];\n        a[i].x1=lower_bound(b.begin(),b.end(),sb[i])-b.begin()+1;\n        a[i].y1=lower_bound(b.begin(),b.end(),eb[i])-b.begin()+1;\n      }\n      sort(a+1,a+n+1,cmp0);\n      memcpy(q,a,sizeof a);\n      sort(q+1,q+n+1,cmp1);\n      int ptr=0;// pointer\n      bool ans=true;\n      //memset(t,0,sizeof t);\n     \n      build(1,1,2*n);\n      for(int i=1;i<=n;++i){\n        change(1,q[i].x1,q[i].y1,1);\n      }\n      for(int i=1;i<=n;++i){\n        while(ptr+1<=n&&q[ptr+1].x0<=a[i].y0){\n          ptr++;\n          change(1,q[ptr].x1,q[ptr].y1,-1);\n        }\n        if(qry(1,a[i].x1,a[i].y1)>0){\n          ans=false;\n        }\n      }\n      return ans;\n    }\n     \n    signed main(){\n      ios::sync_with_stdio(false),cin.tie(0);\n      cin>>n;\n      bool ret=true;\n      for(int i=1;i<=n;++i)\n        cin>>sa[i]>>ea[i]>>sb[i]>>eb[i];\n      if(solve()==false) ret=false;\n      for(int i=1;i<=n;++i)\n        swap(sa[i],sb[i]),swap(ea[i],eb[i]);\n      if(solve()==false) ret=false;\n      cout<<(ret?\"YES\":\"NO\")<<endl;\n      return 0;\n    }\n```\n\n\n\n\n",
        "postTime": 1578578751,
        "uid": 133299,
        "name": "Iveloid",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1284D \u3010New Year and Conference\u3011"
    },
    {
        "content": "# \u9898\u89e3 CF1284D \u3010New Year and Conference\u3011\n\n [\u672c\u573a\u6bd4\u8d5b\u7684\u9898\u89e3](https://www.cnblogs.com/nblyz2003/p/12151883.html)\n\u9898\u76ee\u5927\u610f\uff1a\u6709n\u4e2a\u4eba\uff0c\u6bcf\u4e2a\u4eba\u5728a\u4f1a\u573a\u8bb2\u8bdd\u5f00\u59cb\u65f6\u95f4\u4e3asai\uff0c\u7ed3\u675f\u65f6\u95f4\u4e3aeai\uff0c\u5728b\u4f1a\u573a\u5f00\u59cb\u65f6\u95f4\u4e3asbi\uff0c\u7ed3\u675f\u65f6\u95f4\u4e3aebi\u3002\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u96c6\u5408\u4e2d\u7684\u4eba\u5728a\u5e02\u573a\u6ca1\u6709\u65f6\u95f4\u91cd\u53e0\u5728b\u5e02\u573a\u6709\u91cd\u53e0\u6216\u5728b\u5e02\u573a\u6ca1\u6709\u91cd\u53e0\u5728a\u5e02\u573a\u6709\u6709\u91cd\u53e0\u3002\u8bbe\u4e24\u4e2a\u4eba\u5f00\u59cb\u7ed3\u675f\u65f6\u95f4\u5206\u522b\u4e3a(u\uff0cv)\u548c(x\uff0cy)\uff0c\u5f53max(x\uff0cu) <= min(y\uff0cv)\u65f6\u4e24\u4eba\u91cd\u53e0\u3002\u5b58\u5728\u91cd\u53e0\u65f6\u8f93\u51fa\u201cNO\u201d\uff0c\u5426\u5219\u8f93\u51fa\u201cYES\u201d~~\uff08\u4f3c\u4e4e\u6709\u4ec0\u4e48\u4e0d\u5bf9\u7684\u5730\u65b9\uff09~~\u3002\n\n\u63d0\u524d\u7533\u660e\u4e00\u4e0b\uff0c\u8fd9\u9053\u9898\u6211\u81ea\u5df1\u4ee3\u7801\u4e00\u76f4\u8fc7\u4e0d\u4e86\uff0c\u4f46\u662f\u7fa4\u91cc\u6709\u4eba\u6309\u7167\u6211\u7684\u89e3\u6cd5\u8fc7\u4e86\u2026\u2026\u4ee3\u7801\u4e5f\u5dee\u4e0d\u591a\u2026\u2026\n\n\u53eaWA\u4e86\u7b2c10\u4e2a\u70b9\uff08~~\u52a0\u4e86\u4e2a\u7279\u5224\u8fc7\u4e86~~\uff09\uff0c\u73b0\u5728\u5bf9\u62cd\u8dd1\u4e862\u4e2a\u534a\u5c0f\u65f6\u8fd8\u6ca1\u8dd1\u51fa\u4e00\u7ec4\u9519\u8bef\u6570\u636e\u2026\u2026\n\n\u6211\u7684\u89e3\u6cd5\u751a\u662f\u5947\u602a\u2026\u2026\n\n\u9996\u5148\u5224\u65ada\u4f1a\u573a\u4e0d\u91cd\u53e0b\u4f1a\u573a\u91cd\u53e0\u7684\u60c5\u51b5\uff0c\u53d1\u73b0\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u4ebaa\u4f1a\u573a\u53ea\u8981\u5224\u65ad\u5de6\u8fb9\u4e0d\u91cd\u53e0\u7684\u60c5\u51b5\uff0c\u53f3\u8fb9\u7684\u5230\u65f6\u5019\u4f1a\u679a\u4e3e\u5230\u7684\u3002\n\n\u5bf9\u4e8ei\u8fd9\u4e2a\u4eba\uff0c\u8981\u662feaj < sai\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u4eba\u5c31\u4e0d\u4f1a\u91cd\u53e0\u3002\n\n\u6240\u4ee5\u6211\u4eec\u4ee5sai\u4e3a\u5173\u952e\u5b57\u8fdb\u884c\u6392\u5e8f\uff0c\u4e8c\u5206\u67e5\u627e\u53ef\u4ee5\u627e\u51fa\u6240\u6709\u4e0ei\u4e0d\u91cd\u53e0\u7684\u4eba\u3002\n\n\u4f46\u662f\u5bf9\u6bcf\u4e2a\u4eba\u627e\u4ed6\u5de6\u8fb9\u7684\u4eba\u7684\u533a\u95f4\u80af\u5b9a\u8981\u8d85\u65f6\uff0c\u56e0\u4e3a\u5de6\u8fb9\u7684\u4eba\u4e00\u5b9a\u662f\u4ece1\u5f00\u59cb\u7684\u4e00\u4e2a\u533a\u95f4\uff0c\u6211\u4eec\u8bb0\u5f55\u4e0b\u5bf9\u4e8e\u6bcf\u4e2a\u4ebai\u6240\u6709\u7684\u4ee5i\u4e3a\u6700\u53f3\u8fb9\u7684\u4e0d\u91cd\u53e0\u7684\u4ebapi,j\u3002\uff08\u5373\u4e0d\u5b58\u5728\u4e00\u4e2a\u4ebak\u4f7f\u5f97eai < eak < sapi,j\uff09\n\n\u7136\u540e\u53ea\u9700\u8981\u5224\u65adb\u4f1a\u573a\u662f\u5426\u6709\u91cd\u53e0\uff0c\u4e5f\u5c31\u662f\u8bf4\u5bf9\u7b2ci\u4e2a\u4eba\uff0c\u6240\u6709\u4ed6\u5de6\u8fb9\u7684\u4e0d\u91cd\u53e0\u4ebaj\u7684[sbj\uff0cebj]\u8fd9\u4e2a\u533a\u95f4\u662f\u5426\u548c[sbi\uff0cebi]\u6709\u91cd\u5408\uff0c\u53d8\u6210\u4e86\u4e00\u4e2a\u533a\u95f4\u8986\u76d6\u95ee\u9898\u3002\n\n\u7528\u7ebf\u6bb5\u6811\u8fdb\u884c\u7ef4\u62a4\uff0c\u5c06\u533a\u95f4[sbi\uff0cebi]\u66f4\u6539\u4e3a\u5df2\u8986\u76d6\uff0c\u5224\u65adpi\u4e2d\u662f\u5426\u6709\u70b9\u7684\u8bb2\u8bdd\u533a\u95f4\u4e2d\u6709\u5df2\u8986\u76d6\u7684\u70b9\u3002\n\n\u5bf9\u4e8e\u53e6\u4e00\u79cd\u60c5\u51b5b\u4f1a\u573a\u4e0d\u91cd\u53e0a\u4f1a\u573a\u91cd\u53e0\u60c5\u51b5\u548c\u8fd9\u4e2a\u76f8\u540c\u3002\n\n\u653e\u4e0a\u6211\u7684WA\u6389\u7684\u4ee3\u7801\uff08\u4ec5\u4f9b\u53c2\u8003\uff0c\u5bf9\u7740\u6253\u51fa\u9505\u4e86\u522b\u602a\u6211\uff09\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <vector>\n#define rep(x, l, r) for(int x = l; x <= r; x++)\n#define repd(x, r, l) for(int x = r; x >= l; x--)\n#define clr(x, y) memset(x, y, sizeof(x))\n#define all(x) x.begin(), x.end()\n#define pb push_back\n#define mp make_pair\n#define MAXN 500005\n#define MAXM 2000005\n#define fi first\n#define se second\n#define SZ(x) ((int)x.size())\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef pair<int, int> pii;\nconst int INF = 1 << 30;\nconst int p = 1000000009;\nint lowbit(int x){ return x & (-x);}\nint fast_power(int a, int b){ int x; for(x = 1; b; b >>= 1){ if(b & 1) x = 1ll * x * a % p; a = 1ll * a * a % p;} return x % p;}\n\nstruct node1{\n\tint l1, r1, l2, r2;\n}a[MAXN];\nstruct node2{\n\tint l, r;\n\tbool flag, tag;\n}tree[MAXM];\nbool ans;\nint num[MAXM];\nvi ve1[MAXN], ve2[MAXN];\n\nvoid pushup(int q){\n\ttree[q].flag = tree[q << 1].flag || tree[q << 1 | 1].flag;\n}\n\nvoid pushdown(int q){\n\tif(!tree[q].tag) return;\n\ttree[q << 1].flag = tree[q << 1].tag = 1;\n\ttree[q << 1 | 1].flag = tree[q << 1 | 1].tag = 1;\n\ttree[q].tag = 0;\n}\n\nvoid build(int q, int l, int r){\n\ttree[q].l = l;\n\ttree[q].r = r;\n\ttree[q].tag = 0;\n\ttree[q].flag = 0;\n\tif(l == r) return;\n\tint mid = (l + r) >> 1;\n\tbuild(q << 1, l, mid);\n\tbuild(q << 1 | 1, mid + 1, r);\n\tpushup(q);\n}\n\nvoid update(int q, int l, int r){\n\tif(tree[q].l > r || tree[q].r < l) return;\n\tif(tree[q].l >= l && tree[q].r <= r){\n\t\ttree[q].flag = 1;\n\t\ttree[q].tag = 1;\n\t\treturn;\n\t}\n\tpushdown(q);\n\tupdate(q << 1, l, r);\n\tupdate(q << 1 | 1, l, r);\n\tpushup(q);\n}\n\nvoid query(int q, int l, int r){\n\tif(tree[q].l > r || tree[q].r < l) return;\n\tif(tree[q].l >= l && tree[q].r <= r){\n\t\tans = ans || tree[q].flag;\n\t\treturn;\n\t}\n\tpushdown(q);\n\tquery(q << 1, l, r);\n\tquery(q << 1 | 1, l, r);\n\tpushup(q);\n}\n\nbool cmp1(node1 a, node1 b){\n\treturn a.r1 < b.r1;\n}\n\nbool cmp2(node1 a, node1 b){\n\treturn a.r2 < b.r2;\n}\n\nint main(){\n\tint n, m = 0;\n\tscanf(\"%d\", &n);\n\trep(i, 1, n){\n\t\tscanf(\"%d%d%d%d\", &a[i].l1, &a[i].r1, &a[i].l2, &a[i].r2);\n\t\tnum[++m] = a[i].l1;\n\t\tnum[++m] = a[i].r1;\n\t\tnum[++m] = a[i].l2;\n\t\tnum[++m] = a[i].r2;\n\t}\n\tsort(num + 1, num + m + 1);\n\trep(i, 1, n){\n\t\ta[i].l1 = lower_bound(num + 1, num + m + 1, a[i].l1) - num;\n\t\ta[i].r1 = lower_bound(num + 1, num + m + 1, a[i].r1) - num;\n\t\ta[i].l2 = lower_bound(num + 1, num + m + 1, a[i].l2) - num;\n\t\ta[i].r2 = lower_bound(num + 1, num + m + 1, a[i].r2) - num;\n\t}\n\tsort(a + 1, a + n + 1, cmp1);\n\trep(i, 1, n){\n\t\tint l = 1, r = n, ans = 0;\n\t\twhile(l <= r){\n\t\t\tint mid = (l + r) >> 1;\n\t\t\tif(a[mid].r1 < a[i].l1){\n\t\t\t\tans = mid;\n\t\t\t\tl = mid + 1;\n\t\t\t}\n\t\t\telse r = mid - 1;\n\t\t}\n\t\tve1[ans].pb(i);\n\t}\n\tbuild(1, 1, m);\n\trep(i, 1, n){\n\t\tupdate(1, a[i].l2, a[i].r2);\n\t\trep(j, 0, SZ(ve1[i]) - 1){\n\t\t\tint x = ve1[i][j];\n\t\t\tans = 0;\n\t\t\tquery(1, a[x].l2, a[x].r2);\n\t\t\tif(ans){\n\t\t\t\tputs(\"NO\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\tsort(a + 1, a + n + 1, cmp2);\n\trep(i, 1, n){\n\t\tint l = 1, r = n, ans = 0;\n\t\twhile(l <= r){\n\t\t\tint mid = (l + r) >> 1;\n\t\t\tif(a[mid].r2 < a[i].l2){\n\t\t\t\tans = mid;\n\t\t\t\tl = mid + 1;\n\t\t\t}\n\t\t\tr = mid - 1;\n\t\t}\n\t\tve2[ans].pb(i);\n\t}\n\tbuild(1, 1, m);\n\trep(i, 1, n){\n\t\tupdate(1, a[i].l1, a[i].r1);\n\t\trep(j, 0, SZ(ve2[i]) - 1){\n\t\t\tint x = ve2[i][j];\n\t\t\tans = 0;\n\t\t\tquery(1, a[x].l1, a[x].r1);\n\t\t\tif(ans){\n\t\t\t\tputs(\"NO\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\tputs(\"YES\");\n    return 0;\n}\n```",
        "postTime": 1578202564,
        "uid": 149312,
        "name": "wze\u63cd\u6241\u4e86nm",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1284D \u3010New Year and Conference\u3011"
    }
]