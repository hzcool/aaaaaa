[
    {
        "content": "# \u9898\u610f\uff1a\n\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3an\u7684\u5e8f\u5217a1,a2,...,an\uff0c\u4f60\u9700\u8981\u628a\u8fd9n\u4e2a\u5143\u7d20\u5206\u6210\u4e09\u7c7b\uff1a1\uff0c2\uff0c3\uff1a\n\n1:\u6240\u6709\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u90fd\u4e0d\u5305\u542b\u8fd9\u4e2a\u5143\u7d20\n\n2:\u6709\u4f46\u975e\u6240\u6709\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u5305\u542b\u8fd9\u4e2a\u5143\u7d20\n\n3:\u6240\u6709\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u90fd\u5305\u542b\u8fd9\u4e2a\u5143\u7d20\n\n# \u9898\u89e3\uff1a\n\u9996\u5148\uff0cO(nlogn)\u6c42LIS\u5927\u5bb6\u5e94\u8be5\u90fd\u4f1a\u5427\u2026\u2026\u8fd9\u91cc\u5c31\u4e0d\u9610\u8ff0\u4e86\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7DP\u6765\u7b97\u51fa\u4ee5\u6bcf\u4e2a\u70b9i\u7ed3\u5c3e\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u8bb0\u4e3alength[i]\uff0c\u628a\u6574\u4e2a\u5e8f\u5217\u7684LIS\u957f\u5ea6\u8bb0\u4e3alen\u3002\n\n\u7136\u540e\uff0c\u5927\u5bb6\u8981\u60f3\u660e\u767d\u4e00\u4e2a\u547d\u9898\uff1a\n\n\u5982\u679c\u5143\u7d20i\u53ef\u80fd\u51fa\u73b0\u5728LIS\u4e2d\uff0c\u90a3\u4e48\u5b83\u5728LIS\u4e2d\u7684\u4f4d\u7f6e\u4e00\u5b9a\u521a\u597d\u7b49\u4e8elength[i]\u3002\n\n\u8fd9\u4e2a\u81ea\u8bc1\u4e0d\u96be\u3002\n\n\u5176\u6b21\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u201c\u5206\u5c42\u6570\u7ec4\u201d\uff0c\u5176\u5b9e\u6240\u8c13\u7684\u201c\u5206\u5c42\u6570\u7ec4\u201d\u5c31\u662f\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u53ea\u4e0d\u8fc7\u6211\u4e60\u60ef\u628a\u7b2c\u4e00\u7ef4\u53eb\u505a\u201c\u5c42\u201d\u7f62\u4e86\uff0c\u7b2c\u4e8c\u7ef4\u56e0\u4e3a\u8282\u7701\u7a7a\u95f4\uff0c\u6211\u4eec\u5f00\u4e00\u4e2avector\u3002\n\n\u8fd9\u4e2a\u201c\u5206\u5c42\u6570\u7ec4\u201d\u76f8\u5f53\u91cd\u8981\uff0c\u5b83\u662f\u6211\u4eec\u89e3\u51b3\u95ee\u9898\u7684\u6838\u5fc3\u3002\u6211\u4eec\u5728DP\u65f6\u5c31\u5df2\u7ecf\u7b97\u51fa\u6bcf\u4e2a\u5143\u7d20\u7684length[i]\u4e86\uff0c\u56e0\u6b64\u6211\u4eec\u628a\u8fd9\u4e2a\u5143\u7d20\u7684\u7f16\u53f7\u6dfb\u52a0\u5230\u5c42\u6570\u4e3alength[i]\u7684vector\u4e2d\u53bb\uff0c\u56e0\u6b64\u201c\u5206\u5c42\u6570\u7ec4\u201d\u4e2d\u6bcf\u4e00\u5c42\u7684\u6bcf\u4e2a\u70b9\u5c31\u548c\u5e8f\u5217\u4e2d\u7684\u5143\u7d20\u4e00\u4e00\u5bf9\u5e94\u3002\n\n\u8fd9\u5c31\u662f\u201c\u5206\u5c42\u6570\u7ec4\u201d\u7684\u5efa\u7acb\u8fc7\u7a0b\uff0c\u53ef\u53c2\u89c1\u4ee3\u7801\u6ce8\u91ca\u3002\n\n\u7136\u540e\u5462\uff1f\n\n\u5927\u5bb6\u53c8\u9700\u8981\u60f3\u660e\u767d\u4e24\u4e2a\u547d\u9898\uff1a\n\n\u5728\u6bcf\u4e00\u5c42\u4e2d\uff0c\u968f\u7740\u7f16\u53f7\u7684\u9012\u589e\uff0c\u4e0e\u70b9\u5bf9\u5e94\u7684\u5143\u7d20\u7684\u503c\u5355\u8c03\u4e0d\u9012\u589e\u3002\n\n\u6bcf\u4e00\u5c42\uff08\u9664\u7b2c\u4e00\u5c42\u5916\uff09\u4e2d\u7684\u6bcf\u4e2a\u70b9\u4e00\u5b9a\u5728\u524d\u4e00\u5c42\u4e2d\u6709\u7f16\u53f7\u5c0f\u4e8e\u5b83\u4e14\u5e8f\u5217\u5143\u7d20\u503c\u5c0f\u4e8e\u5b83\u7684\u8282\u70b9\u3002\n\n\u8003\u8651\u6211\u4eecDP\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u5728\u66f4\u65b0dp\u6570\u7ec4\u4e2d\u4e0b\u6807\u4e3alength[i]\u7684\u6700\u5c0f\u503c\u65f6\uff0c\u5982\u679c\u5df2\u7ecf\u901a\u8fc7\u4e8c\u5206\u67e5\u627e\u7b97\u51fa\u8be5\u5143\u7d20\u7684length[i]\uff0c\u5143\u7d20\u53ef\u4ee5\u66f4\u65b0dp[length[i]]\u7684\u6761\u4ef6\u662f\u5143\u7d20\u7684\u503c\u4e00\u5b9a\u4e0d\u80fd\u6bd4dp[length[i]]\u5927\uff0c\u800cdp[length[i]]\u5df2\u7ecf\u901a\u8fc7\u524d\u9762\u7684\u5143\u7d20\u7b97\u51fa\uff0c\u56e0\u6b64\u5728\u201c\u5206\u5c42\u6570\u7ec4\u201d\u5c42\u6570\u4e3alength[i]\u7684\u5c42\u4e2d\uff0c\u8be5\u5143\u7d20\u7684\u503c\u4e00\u5b9a\u5c0f\u4e8e\u7b49\u4e8e\u5728\u8be5\u5c42\u4e2d\u7f16\u53f7\u6bd4\u5b83\u5c0f\u7684\u5143\u7d20\u7684\u503c\u3002\n\n\u53e6\u5916\uff0c\u6211\u4eec\u5728DP\u65f6\uff0c\u4f9d\u636edp\u6570\u7ec4\u5355\u8c03\u9012\u589e\u7684\u7279\u6027\u53ef\u4ee5\u7406\u89e3dp[length[i]-1]\u7684\u503c\u4e00\u5b9a\u6bd4a[i]\u5c0f\uff0c\u56e0\u6b64\u5728\u201c\u5206\u5c42\u6570\u7ec4\u201d\u7684\u524d\u4e00\u5c42\u4e2d\uff0c\u4e00\u5b9a\u6709\u7f16\u53f7\u5c0f\u4e8e\u5b83\u4e14\u5e8f\u5217\u5143\u7d20\u503c\u5c0f\u4e8e\u5b83\u7684\u70b9\uff0c\u8fd9\u6837\u4fdd\u8bc1\u6211\u4eec\u5728\u9010\u5c42\u5f80\u524d\u63a8\u7684\u65f6\u5019\u4e0d\u4f1a\u51fa\u73b0\u201c\u4e00\u5bf9\u7a7a\u201d\u7684\u60c5\u51b5\uff0c\u800c\u662f\u5728\u524d\u4e00\u5c42\u4e2d\u662f\u6709\u4e00\u4e2a\u533a\u95f4\uff08\u5305\u542b\u7f16\u53f7\u3001\u5e8f\u5217\u5143\u7d20\u503c\u4e24\u65b9\u9762\u7684\u9650\u5236\uff09\u4e0e\u4e4b\u5bf9\u5e94\u3002\u8fd9\u4e2a\u533a\u95f4\u4e2d\u7684\u70b9\u5c31\u662f\u5f53\u524d\u70b9\u5728\u524d\u4e00\u5c42\u4e2d\u53ef\u4ee5\u6269\u5c55\u5230\u7684\u8282\u70b9\u3002\n\n\u5927\u5bb6\u53ef\u80fd\u6709\u7591\u95ee\uff1a\u4e3a\u4ec0\u4e48\u8981\u5012\u7740\u4ece\u540e\u5f80\u524d\u63a8\u5462\uff1f\n\n\u56e0\u4e3a\u5012\u7740\u63a8\u80fd\u591f\u4fdd\u8bc1\u8981\u6269\u5c55\u7684\u5f53\u524d\u70b9\u4e00\u5b9a\u6709LIS\u7ecf\u8fc7\u5b83\uff0c\u56e0\u6b64\u5b83\u6269\u5c55\u5230\u7684\u524d\u4e00\u5c42\u7684\u8282\u70b9\u4e5f\u4e00\u5b9a\u6709LIS\u7ecf\u8fc7\uff0c\u7b49\u5230\u8be5\u5c42\u6240\u6709\u70b9\u6269\u5c55\u5b8c\u6bd5\u540e\uff0c\u524d\u4e00\u5c42\u6ca1\u6709\u88ab\u6269\u5c55\u5230\u7684\u70b9\u4e00\u5b9a\u6ca1\u6709LIS\u7ecf\u8fc7\uff0c\u6253\u4e0a\u201c1\u201d\u7c7b\u6807\u8bb0\uff0c\u4e0b\u6b21\u6269\u5c55\u5c31\u4e0d\u8981\u6269\u5c55\u8fd9\u4e9b\u70b9\u4e86\u3002\u800c\u5176\u4ed6\u7684\u70b9\u90fd\u6253\u4e0a\u201c2\u201d\u7c7b\u6807\u8bb0\uff0c\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u201c2\u201d\u7c7b\u6807\u8bb0\uff0c\u90a3\u4e48\u628a\u201c2\u201d\u6539\u6210\u201c3\u201d\uff0c\u8bf4\u660e\u8be5\u8282\u70b9\u662f\u6240\u6709LIS\u7684\u5fc5\u7ecf\u8282\u70b9\u3002\n\n\u53c2\u8003\u4ee3\u7801\u5982\u4e0b\uff08\u82e5\u6709\u4e0d\u7406\u89e3\u7684\u53c2\u770b\u6ce8\u91ca\uff09\uff1a\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<vector>\n#define maxn 100005\nusing namespace std;\nint n,a[maxn];//\u6574\u4e2a\u5e8f\u5217\nint dp[maxn];//dp[i]\u4ee3\u8868\u5f53\u524d\u957f\u5ea6\u4e3ai\u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u672b\u5c3e\u5143\u7d20\u7684\u6700\u5c0f\u503c\nint len=0;//\u6574\u4e2a\u5e8f\u5217LIS\u7684\u957f\u5ea6\nint sign[maxn];//\u5e8f\u5217\u5143\u7d20\u6240\u5c5e\u7c7b\u522b\nvector<int>layer[maxn];//\u5206\u5c42\u6570\u7ec4\uff0c\u4e00\u5171\u6709len\u5c42\u3002layer[i]\u4e2d\u7684\u70b9\u8868\u793a\u8fd9\u4e9b\u5143\u7d20\uff1a\u4ee5\u8fd9\u4e9b\u5143\u7d20\u7ed3\u5c3e\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6\u4e3ai\ninline int bins(int i,int val){\n    int l=0,r=layer[i].size()-1;\n    while(l<r){\n        int m=(l+r)>>1;\n        if(a[layer[i][m]]>=val)l=m+1;\n        else r=m;\n    }\n    return l;\n}\nint main(){\n    scanf(\"%d\",&n);\n    memset(dp,0x3f,sizeof(dp));\n    dp[0]=0;\n    for(int i=1;i<=n;i++){\n        scanf(\"%d\",&a[i]);\n        int length=lower_bound(dp,dp+n+1,a[i])-dp;//O(nlogn)\u6c42LIS\n        dp[length]=min(dp[length],a[i]);\n        //length\u8868\u793a\u4ee5\u8be5\u5143\u7d20\u7ed3\u5c3e\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\n        layer[length].push_back(i);//\u52a0\u5165\u5230\u5206\u5c42\u6570\u7ec4\n        len=max(len,length);//\u66f4\u65b0\u6574\u4e2a\u5e8f\u5217\u7684LIS\u957f\u5ea6\n    }\n    for(int i=1;i<=n;i++)sign[i]=1;//\u521d\u59cb\u5316\u5168\u90fd\u4e3a\u7b2c1\u7c7b\uff0c\u5373\u4efb\u4f55LIS\u90fd\u4e0d\u7ecf\u8fc7\u5b83\u4eec\n    if(layer[len].size()==1)sign[layer[len][0]]=3;\n    else for(int i=0;i<layer[len].size();i++)sign[layer[len][i]]=2;\n    for(int i=len;i>=2;i--){//\u5012\u5e8f\u5904\u7406\u5206\u5c42\u6570\u7ec4\uff0c\u4e00\u5c42\u4e00\u5c42\u5f80\u524d\u63a8\n        for(int j=0;j<layer[i].size();j++){//\u679a\u4e3e\u5f53\u524d\u5c42\u7684\u6240\u6709\u70b9\n            int bh=layer[i][j];//\u70b9\u7684\u7f16\u53f7\n            if(sign[bh]>1){//\u5982\u679c\u5f53\u524d\u8282\u70b9\u53ef\u4ee5\u5411\u524d\u6269\u5c55\uff08\u5b58\u5728LIS\u7ecf\u8fc7\u5f53\u524d\u70b9\uff09\n                int l=bins(i-1,a[bh]);//\u4e8c\u5206\u67e5\u627e\uff0c\u6269\u5c55\u7684\u8282\u70b9\u5728\u5e8f\u5217\u4e2d\u7684\u503c\u5fc5\u987b\u5c0f\u4e8e\u5f53\u524d\u8282\u70b9\uff0c\u624d\u80fd\u4fdd\u8bc1LIS\u4e25\u683c\u9012\u589e\n                int r=lower_bound(layer[i-1].begin(),layer[i-1].end(),bh)-layer[i-1].begin()-1;//\u4e8c\u5206\u67e5\u627e\uff0c\u6269\u5c55\u7684\u70b9\u7f16\u53f7\u5fc5\u987b\u5c0f\u4e8e\u5f53\u524d\u70b9\u7f16\u53f7\uff0c\u624d\u80fd\u662f\u201c\u5e8f\u5217\u201d\n                //\u5f53\u524d\u70b9\u53ef\u6269\u5c55\u5230\u7684\u524d\u4e00\u5c42\u7684\u70b9\u7684\u8303\u56f4\u662f\u533a\u95f4[l,r]\n                for(int k=l;k<=r;k++)sign[layer[i-1][k]]=2;//\u6253\u4e0a\u6807\u8bb0\uff0c\u8be5\u8282\u70b9\u80fd\u591f\u88ab\u6269\u5c55\u5230\u8bf4\u660e\u4e00\u5b9a\u5728\u6574\u4e2a\u5e8f\u5217\u4e2d\u6709\u67d0\u4e2aLIS\u5305\u542b\u8be5\u70b9\n            }\n        }\n        //\u5f53\u524d\u5c42\u80fd\u591f\u6269\u5c55\u5230\u7684\u524d\u4e00\u5c42\u7684\u70b9\u662f\u5f53\u524d\u5c42\u6240\u6709\u70b9\u80fd\u6269\u5c55\u5230\u7684\u524d\u4e00\u5c42\u7684\u8282\u70b9\u7684\u5e76\u96c6\n        int cnt=0,pos=0;\n        for(int j=0;j<layer[i-1].size();j++)if(sign[layer[i-1][j]]==2){\n            cnt++;\n            pos=j;\n        }\n        if(cnt==1)sign[layer[i-1][pos]]=3;//\u5982\u679c\u8be5\u5c42\u6240\u6709\u53ef\u6269\u5c55\u7684\u70b9\u53ea\u80fd\u5728\u524d\u4e00\u5c42\u4e2d\u6269\u5c55\u51fa\u4e00\u4e2a\u8282\u70b9\uff0c\u8bf4\u660e\u8fd9\u4e2a\u8282\u70b9\u662f\u6240\u6709LIS\u7684\u5fc5\u7ecf\u8282\u70b9\u3002\n    }\n    for(int i=1;i<=n;i++)printf(\"%d\",sign[i]);//\u4e0d\u7559\u7a7a\u683c\u6253\u5370\n    return 0;\n}\n```",
        "postTime": 1539908942,
        "uid": 6727,
        "name": "AndyGamma",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF486E \u3010LIS of Sequence\u3011"
    },
    {
        "content": "\u8bbe LIS \u4e3a\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\uff0c\u603b LIS \u4e3a\u6b64\u6570\u7ec4\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\uff08\u65e0\u5176\u4ed6\u9650\u5236\u6761\u4ef6\uff09\uff0c$len1_i$ \u4e3a\u4ee5 $a_i$ \u7ed3\u675f\u7684 LIS \u957f\u5ea6\uff0c$len2_i$ \u4e3a\u4ee5 $a_i$ \u5f00\u59cb\u7684 LIS \u957f\u5ea6\u3002\n\n\u56e0\u4e3a LIS \u6ee1\u8db3\u6700\u4f18\u5b50\u7ed3\u6784\uff0c\u5373 $a_i$ \u5728\u4e00\u4e2a LIS \u4e2d\u7684\u4f4d\u7f6e\u4e00\u5b9a\u7b49\u4e8e $len1_i$\u3002\u6240\u4ee5\u901a\u8fc7 $a_i$ \u7684 LIS \u957f\u5ea6\u7b49\u4e8e $len1_i+len2_i-1$\u3002\u53c8\u56e0\u4e3a\u201cLIS \u5305\u542b $a_i$\u201d\u76f8\u5f53\u4e8e\u201c\u901a\u8fc7 $a_i$ \u80fd\u5f62\u6210\u4e00\u4e2a LIS\u201d\u3002\u6240\u4ee5\u5982\u679c $len1_i+len2_i-1$ \u7b49\u4e8e\u603b LIS \u7684\u957f\u5ea6\uff0c\u5219\u603b LIS \u53ef\u80fd\u5305\u542b $a_i$\uff0c\u5373\u8f93\u51fa2\u3002\n\n\u56e0\u4e3a $len1_i$ \u7b49\u4e8e $a_i$ \u5728\u603b LIS \u4e2d\u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5\u201cLIS \u4e00\u5b9a\u5305\u542b $a_i$\u201d\u76f8\u5f53\u4e8e\u201c\u8fd9\u4e2a\u4f4d\u7f6e\u53ea\u80fd\u662f $a_i$\u201d\uff0c\u5373\u201c$len1_i$ \u552f\u4e00\uff08\u6ca1\u6709\u5176\u4ed6\u7684 $len1$ \u503c\u548c\u5b83\u76f8\u540c\uff09\u201d\uff0c\u5373\u8f93\u51fa3\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\u9996\u5148\u8981\u77e5\u9053 LIS \u7684 $O(n\\log n)$ \u6c42\u6cd5\u3002\u6240\u4ee5\u6bcf\u6b21\u6c42\u51fa\u7684 k \u5c31\u662f $len1_i$\u3002\uff08k \u8be6\u89c1\u4ee3\u7801\uff09\u3002\u7136\u540e\u518d\u628a\u6570\u7ec4\u53cd\u8f6c\u6c42\u4e00\u6b21\u6700\u957f\u4e0b\u964d\u5b50\u5e8f\u5217\uff0c\u5c31\u662f $len2_i$\u3002\u8fd9\u91cc\u6c42\u6700\u957f\u4e0b\u964d\u5b50\u5e8f\u5217\u53ef\u4ee5\u628a\u6570\u90fd\u4e58\u4ee5-1\uff0c\u7136\u540e\u6c42 LIS\u3002\u6700\u540e\u5224\u65ad\u4e00\u4e0b\u3002\u5982\u679c $len1_i+len2_i-1$ \u7b49\u4e8e\u603b LIS \u7684\u957f\u5ea6\uff0c\u5219\u8f93\u51fa2\u3002\u5982\u679c $len1_i+len2_i-1$ \u7b49\u4e8e\u603b LIS \u7684\u957f\u5ea6\u4e14 $len1$ \u503c\u552f\u4e00\uff0c\u5219\u8f93\u51fa3\u3002\u5426\u5219\u8f93\u51fa1\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define read(x) scanf(\"%d\",&x)\nconst int M=1e5+5;\nint a[M],b[M],dp[M],len1[M],len2[M],ty[M],vis[M];\nint main(){\n    int n;read(n);\n    for(int i=1;i<=n;i++)read(a[i]);\n    \n    //\u6c42len1\n    memset(dp,0x3f,sizeof(dp));dp[0]=0;\n    for(int i=1;i<=n;i++){\n        int k=lower_bound(dp+1,dp+n+1,a[i])-dp;\n        dp[k]=a[i];\n        len1[i]=k;//\u4ee5a[i]\u7ed3\u5c3e\u7684LIS\u957f\u5ea6\n    }\n    int m=lower_bound(dp+1,dp+n+1,0x3f3f3f3f)-dp-1;//LIS\u957f\u5ea6\n    \n    //\u628a\u6570\u7ec4\u53cd\u8f6c \u6c42len2\n    for(int i=1;i<=n;i++)b[i]=-a[n-i+1];//\u8d1f\u53f7\uff1a\u9700\u8981\u6c42\u53cd\u8f6c\u540e\u7684\u6700\u957f\u4e0b\u964d\u5b50\u5e8f\u5217\uff0c\u6dfb\u8d1f\u53f7\u5c31\u53d8\u4e3a\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\uff0c\u7136\u540e\u5c31\u548c\u4e0a\u9762\u4e00\u6837\n    memset(dp,0x3f,sizeof(dp));dp[0]=-1e9;\n    for(int i=1;i<=n;i++){\n        int k=lower_bound(dp+1,dp+n+1,b[i])-dp;\n        dp[k]=b[i];\n        len2[i]=k;\n    }\n    for(int i=1;i<=n;i++)if(len1[i]+len2[i]==m+1)ty[i]=2;else ty[i]=1;\n    \n    //\u6c42len1\u662f\u5426\u552f\u4e00\uff0c\u5373ty[i]=3\n    for(int i=1;i<=n;i++)if(ty[i]==2)vis[len1[i]]++;\n    for(int i=1;i<=n;i++)if(vis[len1[i]]==1&&ty[i]==2)ty[i]=3;\n    \n    for(int i=1;i<=n;i++)printf(\"%d\",ty[i]);\n    return 0;\n}\n```\n\n",
        "postTime": 1617011553,
        "uid": 151712,
        "name": "\u4e00\u67b6\u98de\u673a",
        "ccfLevel": 0,
        "title": "CF486E LIS of Sequence \u9898\u89e3"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/Coros-Trusds/p/15951459.html)\n\n# \u9898\u76ee\u5927\u610f\n\n\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a_1,a_2,\\cdots,a_n$\uff0c\u4f60\u9700\u8981\u628a\u8fd9 $n$ \u4e2a\u5143\u7d20\u5206\u6210\u4e09\u7c7b\uff1a$1,2,3$\uff1a\n\n1. \u6240\u6709\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u90fd\u4e0d\u5305\u542b\u8fd9\u4e2a\u5143\u7d20\u3002\n\n2. \u6709\u4f46\u975e\u6240\u6709\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u5305\u542b\u8fd9\u4e2a\u5143\u7d20\u3002\n\n3. \u6240\u6709\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u90fd\u5305\u542b\u8fd9\u4e2a\u5143\u7d20\u3002\n\n# \u9898\u76ee\u5206\u6790\n\n\u4ee4 $f_i$ \u8868\u793a $\\{a_1,a_2,\\cdots,a_i\\}$ \u7684 $\\rm LIS$ \u957f\u5ea6\uff0c$g_i$ \u8868\u793a $\\{a_i,a_{i+1},\\cdots,a_n\\}$ \u7684 $\\rm LIS$ \u957f\u5ea6\uff0c$len$ \u8868\u793a $\\{a_1,a_2,\\cdots,a_n\\}$ \u7684 $\\rm LIS$ \u957f\u5ea6\u3002\n\n\u5bf9\u4e8e $a_i$\uff0c\u82e5 $f_i+g_i\\neq len+1$\uff0c\u8bf4\u660e $a_i$ \u8fd9\u4e2a\u70b9\u4e0d\u5728\u6574\u4e2a\u5e8f\u5217\u6240\u6709\u7684 $\\rm LIS$ \u65b9\u6848\u91cc\u3002\u90a3\u4e48 $ans_i\\gets 1$\u3002\n\n\u82e5 $f_i+g_i=len+1$\uff0c\u5224\u65ad\u662f\u5426\u5b58\u5728 $f_i=f_j$ \u4e14 $g_i=g_j(i\\neq j)$\uff0c\u5219 $a_i$ \u4e00\u5b9a\u5c5e\u4e8e\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff1a\u6709\u4f46\u975e\u6240\u6709\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u5305\u542b\u8fd9\u4e2a\u5143\u7d20\u3002\u56e0\u4e3a\u5176\u4ed6\u5143\u7d20\u548c $a_i$ \u67d0\u79cd\u610f\u4e49\u4e0a\u6765\u8bf4\u7b49\u4ef7\uff0c\u90fd\u5728\u5176 $\\rm LIS$ \u4e2d\u8d77\u5230\u540c\u6837\u7684\u4f5c\u7528\u3002\n\n\u5176\u4ed6\u60c5\u51b5\u4e3a\u6700\u540e\u4e00\u79cd\u60c5\u51b5\u3002\n\n$f_i,g_i$ \u53ef\u4ee5\u7528\u4e8c\u5206\u3001\u7ebf\u6bb5\u6811\u548c\u6811\u72b6\u6570\u7ec4\u5728 $\\mathcal{O(n\\log n)}$ \u7684\u65f6\u95f4\u5185\u6c42\u5f97\uff0c\u8bb0\u5f55\u662f\u5426\u51fa\u73b0\u91cd\u590d\u53ef\u4ee5\u7528\u6876\u6216 $map$\u3002\u6811\u72b6\u6570\u7ec4\u7801\u91cf\u5c0f\uff0c\u5b8c\u7206\u7ebf\u6bb5\u6811\uff1b\u6811\u72b6\u6570\u7ec4\u5bb9\u6613\u7406\u89e3\uff0c\u5b8c\u7206\u4e8c\u5206\u3002\u6545\u6b64\u5904\u9009\u62e9\u6811\u72b6\u6570\u7ec4\u3002\n\n# \u4ee3\u7801\n\n```cpp\n//2022/2/28 \n#define _CRT_SECURE_NO_WARNINGS\n#include <iostream>\n#include <cstdio>\n#include <climits>//need \"INT_MAX\",\"INT_MIN\"\n#include <cstring>//need \"memset\"\n#include <numeric>\n#include <algorithm>\n#include <map>\n#define enter() putchar(10)\n#define debug(c,que) cerr << #c << \" = \" << c << que\n#define cek(c) puts(c)\n#define blow(arr,st,ed,w) for(register int i = (st);i <= (ed); ++ i) cout << arr[i] << w;\n#define speed_up() cin.tie(0),cout.tie(0)\n#define mst(a,k) memset(a,k,sizeof(a))\n#define Abs(x) ((x) > 0 ? (x) : (-x))\nconst int mod = 1e9 + 7;\ninline int MOD(int x) {\n\twhile (x < 0) x += mod;\n\twhile (x >= mod) x -= mod;\n\treturn x;\n}\nnamespace Newstd {\n\tchar buf[1 << 21],*p1 = buf,*p2 = buf;\n\tinline int getc() {\n\t\treturn p1 == p2 && (p2 = (p1 = buf) + fread(buf,1,1 << 21,stdin),p1 == p2) ? EOF : *p1 ++;\n\t}\n\tinline int read() {\n\t\tint ret = 0,f = 0;char ch = getc();\n\t\twhile (!isdigit(ch)) {\n\t\t\tif(ch == '-') f = 1;\n\t\t\tch = getc();\n\t\t}\n\t\twhile (isdigit(ch)) {\n\t\t\tret = (ret << 3) + (ret << 1) + ch - 48;\n\t\t\tch = getc();\n\t\t}\n\t\treturn f ? -ret : ret;\n\t}\n\tinline void write(int x) {\n\t\tif(x < 0) {\n\t\t\tputchar('-');\n\t\t\tx = -x;\n\t\t}\n\t\tif(x > 9) write(x / 10);\n\t\tputchar(x % 10 + '0');\n\t}\n}\nusing namespace Newstd;\nusing namespace std;\n\nconst int ma = 1e5 + 5;\nint a[ma],b[ma],f[ma],g[ma],ans[ma];\nmap<int,int>mp[ma];\nint n;\nstruct BIT {\n\tint tr[ma];\n\t#define lowbit(x) (x & -x)\n\tinline void update(int x,int k) {\n\t\tfor (;x < ma;x += lowbit(x)) {\n\t\t\ttr[x] = max(tr[x],k);\n\t\t}\n\t}\n\tinline int query(int x) {\n\t\tint res = 0;\n\t\tfor (;x;x -= lowbit(x)) {\n\t\t\tres = max(res,tr[x]);\n\t\t}\n\t\treturn res;\n\t}\n\tinline int getsum(int l,int r) {\n\t\treturn query(r) - query(l - 1); \n\t}\n\t#undef lowbit\n} bita,bitb;\nint main(void) {\n#ifndef ONLINE_JUDGE\n\tfreopen(\"in.txt\",\"r\",stdin);\n#endif\n\tn = read();\n\tfor (register int i = 1;i <= n; ++ i) a[i] = read();\n\tfor (register int i = 1;i <= n; ++ i) b[i] = ma - a[i];//\u65b9\u4fbf\u6c42 g[i]\uff0c\u76f4\u63a5\u5c06 a \u5e8f\u5217\u7684\u5143\u7d20\u5927\u5c0f\u5173\u7cfb\u98a0\u5012\u8fc7\u6765\n\tint maxx = 0;\n\tfor (register int i = 1;i <= n; ++ i) {\n\t\tf[i] = bita.getsum(1,a[i] - 1) + 1;\n\t\tbita.update(a[i],f[i]);\n\t\tmaxx = max(maxx,f[i]);\n\t}\n\tfor (register int i = n;i >= 1; -- i) {\n\t\tg[i] = bitb.getsum(1,b[i] - 1) + 1;\n\t\tbitb.update(b[i],g[i]);\n\t}\n\tfor (register int i = 1;i <= n; ++ i) {\n\t\tif (f[i] + g[i] == maxx + 1) {\n\t\t\tmp[f[i]][g[i]] ++;\n\t\t} else {//a[i] \u4e0d\u5728\u4efb\u4f55\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\n\t\t\tans[i] = 1;\n\t\t}\n\t}\n\tfor (register int i = 1;i <= n; ++ i) {\n\t\tif (f[i] + g[i] == maxx + 1) {\n\t\t\tif (mp[f[i]][g[i]] >= 2) {\n\t\t\t\tans[i] = 2;\n\t\t\t} else {\n\t\t\t\tans[i] = 3;\n\t\t\t}\n\t\t}\n\t}\n\tfor (register int i = 1;i <= n; ++ i) printf(\"%d\",ans[i]);\n\t\n\treturn 0;\n}\n```",
        "postTime": 1646127034,
        "uid": 430409,
        "name": "Coros_Trusds",
        "ccfLevel": 6,
        "title": "CF486E \u5e8f\u5217 LIS"
    },
    {
        "content": "## [\u9898\u9762](https://www.luogu.com.cn/problem/CF486E)\n\n# Step1\n\u8bbe $f[i]$ \u4e3a\u4ece\u524d\u5f80\u540e\u7b2c $i$ \u4f4d\u4e3a\u7ed3\u5c3e\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\uff0c $g[i]$ \u4e3a\u4ece\u524d\u5f80\u540e\u7b2c $i$ \u4f4d\u4e3a\u5f00\u5934\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\uff0c$len$ \u4e3a\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6\uff0c $c[i]$ \u4e3a\u7b2c $i$ \u4e2a\u6570\u6240\u5c5e\u7684\u7c7b\u6570\u3002\n\n\u6240\u4ee5\u5f53 $a[i]$ \u5728\u67d0\u4e00\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u91cc\u65f6\uff0c $c[i]=1$ \u5fc5\u5b9a\u6ee1\u8db3 $f[i]+g[i]=len+1$ \u3002\n\n\u6240\u4ee5\u5f53$f[i]+g[i]<len+1$ \u65f6\uff0c $c[i]=1$ \u3002\n\n# Step2\n\u8003\u8651\u5982\u4f55\u533a\u5206 $c[i]=2$ \u548c $c[i]=3$ \u7684\u60c5\u51b5\u3002\n\n\u9996\u5148\u82e5\u5b58\u5728 $f[i]=f[j],g[i]=g[j](i\\not=j)$ \uff0c\u5219 $c[i]=c[j]=2$ \u3002\n\n\u56e0\u4e3a\u65e0\u8bba\u9009\u62e9\u7b2c $i$ \u4f4d\u8fd8\u662f\u7b2c $j$ \u4f4d\u90fd\u4e0d\u5f71\u54cd\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u3002\n\n\u53cd\u4e4b\uff0c\u5219 $c[i]=3$ \u3002\n\n```\nfor(int i=1;i<=n;i++){\n\tif(f[i]+g[i]<len+1)c[i]=1;\n\telse m[f[i]][g[i]]++;\n}\nfor(int i=1;i<=n;i++){\n\tif(f[i]+g[i]<len+1)continue;\n\tif(m[f[i]][g[i]]>1)c[i]=2;\n\telse c[i]=3;\n}\n```\n\u8003\u8651\u5230\u53ea\u7528\u5b58 $10^5$ \u4e2a\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528 $map$ \u3002\n\n# Step3\n\u5173\u4e8e $O(nlogn)$ \u6c42 $f[i]$ \u548c $g[i]$ \uff0c\u53ef\u4ee5\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u3002\n\n# End\n\u8d34\u4e0a\u4ee3\u7801\n```\n#include<bits/stdc++.h>\n#define ll long long\n#define inf 1e8\n#define rg register\nusing namespace std;\nconst int N=1e5+10;\ninline ll read(){\n\tregister ll s=0,f=0;\n\tregister char ch=getchar();\n\twhile(!isdigit(ch)) f|=(ch=='-'),ch=getchar();\n\twhile(isdigit(ch)) s=(s<<1)+(s<<3)+(ch^48),ch=getchar();\n\treturn f?-s:s;\n}\nint n,a[N],b[N],c[N],g[N],f[N],len,s[N];\ninline int lowbit(int x){\n\treturn x&(-x);\n}\ninline void update(int x,int y){\n\tfor(int i=x;i<N;i+=lowbit(i)){\n\t\tif(s[i]<y)s[i]=y;\n\t}\n}\ninline int query(int x){\n\tint ans=0;\n\tfor(int i=x;i;i-=lowbit(i)){\n\t\tif(ans<s[i])ans=s[i];\n\t}\n\treturn ans;\n}\nmap<int,int>m[N];\nint main() {\n\tn=read();\n\tfor(int i=1;i<=n;i++){\n\t\ta[i]=read();\n\t\tf[i]=query(a[i]-1)+1;\n\t\tupdate(a[i],f[i]);\n\t\tif(len<f[i])len=f[i];\n\t}\n\tfor(int i=1;i<=n;i++)b[i]=N-a[i];\n\tmemset(s,0,sizeof(s));\n\tfor(int i=n;i;i--){\n\t\tg[i]=query(b[i]-1)+1;\n\t\tupdate(b[i],g[i]);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(f[i]+g[i]<len+1)c[i]=1;\n\t\telse m[f[i]][g[i]]++;\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(f[i]+g[i]<len+1)continue;\n\t\tif(m[f[i]][g[i]]>1)c[i]=2;\n\t\telse c[i]=3;\n\t}\n\tfor(int i=1;i<=n;i++)printf(\"%d\",c[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1636252154,
        "uid": 310908,
        "name": "Xiao_mo",
        "ccfLevel": 4,
        "title": "\u9898\u89e3CF486E"
    }
]