[
    {
        "content": "# CF383B Volcanoes\n\n[\u9898\u76ee\u94fe\u63a5](https://codeforces.com/contest/383/problem/B)\n\n## \u672c\u9898\u9898\u89e3\n\n\u9996\u5148\u5bb9\u6613\u53d1\u73b0\uff0c\u5982\u679c\u5b58\u5728\u4e00\u6761\u4ece\u8d77\u70b9 $(1,1)$ \u5230\u7ec8\u70b9 $(n,n)$ \u7684\u5408\u6cd5\u8def\u5f84\uff0c\u5176\u7528\u65f6\u4e00\u5b9a\u4e3a $2n-2$\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad\u662f\u5426\u5b58\u5728\u8fd9\u6837\u7684\u8def\u5f84\u3002\n\n\u628a\u70b9\u6309\u884c\u5750\u6807\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u884c\u5750\u6807\u76f8\u540c\u65f6\u6309\u5217\u5750\u6807\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n\n\u4ece\u5c0f\u5230\u5927\u4f9d\u6b21\u8003\u8651\u6bcf\u4e00\u884c\uff0c\u884c\u5750\u6807\u76f8\u540c\u7684\u70b9\u653e\u5728\u4e00\u8d77\u5904\u7406\u3002\u5047\u8bbe\u5f53\u524d\u8003\u8651\u5230\u7b2c $i$ \u884c\uff0c\u8bbe\u8fd9\u884c\u91cc\u4e00\u5171\u6709 $s_i$ \u4e2a\u969c\u788d\u7269\uff08$s_i > 0$\uff09\u3002\n\n\u5728\u6bcf\u4e00\u884c\u91cc\uff0c\u6709\u4e00\u4e9b\u70b9\u662f\u53ef\u4ee5\u5230\u8fbe\u7684\uff0c\u5176\u4ed6\u70b9\u5219\u662f\u4e0d\u80fd\u5230\u8fbe\u7684\u3002\u6211\u4eec\u628a\u76f8\u90bb\u7684\u3001\u53ef\u4ee5\u5230\u8fbe\u7684\u70b9\uff0c\u538b\u7f29\u6210\u4e00\u6761\u7ebf\u6bb5\u3002\u4e00\u4e2a\u91cd\u8981\u7684\u89c2\u5bdf\u662f\uff1a\u6bcf\u884c\u91cc\u53ef\u4ee5\u5230\u8fbe\u7684\u70b9\u7ec4\u6210\u7684\u7ebf\u6bb5\u6570\u91cf\uff0c\u4e0d\u8d85\u8fc7 $s_i + 2$ \u6761\u3002\u56e0\u4e3a\u7ebf\u6bb5\u4e0d\u80fd\u8986\u76d6\u969c\u788d\u7269\uff08\u969c\u788d\u7269\u4e00\u5b9a\u662f\u4e0d\u80fd\u5230\u8fbe\u7684\uff09\uff0c\u5e76\u4e14\u76f8\u90bb\u4e24\u4e2a\u969c\u788d\u7269\u4e4b\u95f4\u81f3\u591a\u53ea\u6709\u4e00\u6761\u7ebf\u6bb5\u3002\n\n\u73b0\u5728\u6211\u4eec\u53ea\u8981\u9012\u63a8\u6c42\u51fa\u6bcf\u4e00\u884c\u7684\u8fd9\u4e9b\u7ebf\u6bb5\uff0c\u7136\u540e\u5224\u65ad\u6700\u540e\u4e00\u884c\u7684\u7ebf\u6bb5\u662f\u5426\u8986\u76d6\u4e86 $(n,n)$\u3002\n\n\u8003\u8651\u672c\u884c\u91cc\u76f8\u90bb\u7684\u4e24\u4e2a\u969c\u788d\u7269 $(i,a), (i,b)$\uff0c\u5219 $[a + 1, b - 1]$ \u533a\u95f4\u91cc\u53ef\u80fd\u5b58\u5728\u7ebf\u6bb5\u3002\u627e\u51fa\u4e0a\u4e00\u884c\u88ab\u7ebf\u6bb5\u8986\u76d6\u7684\u70b9\u4e2d\u3001\u7b2c\u4e00\u4e2a\u5728 $[a + 1, b -1]$ \u533a\u95f4\u5185\u7684\u70b9\uff0c\u8bb0\u4e3a $c$\uff0c\u5219 $[c, b - 1]$ \u5c31\u6210\u4e3a\u4e86\u672c\u884c\u91cc\u7684\u4e00\u6761\u7ebf\u6bb5\uff08\u4e5f\u5c31\u662f\u8fde\u7eed\u7684\u4e00\u6bb5\u53ef\u4ee5\u5230\u8fbe\u7684\u70b9\uff09\u3002\u5982\u679c\u4e0d\u5b58\u5728\u8fd9\u6837\u7684 $c$\uff0c\u5219\u663e\u7136 $[a + 1, b - 1]$ \u533a\u95f4\u91cc\u6ca1\u6709\u7ebf\u6bb5\u3002\n\n\u627e $c$ \u53ef\u4ee5\u5728\u4e0a\u4e00\u884c\u7684\u7ebf\u6bb5\u96c6\u5408\u91cc\u4e8c\u5206\u67e5\u627e\uff0c\u4e5f\u53ef\u4ee5\u7528 two pointers \u7ef4\u62a4\u3002\u4e8c\u5206\u67e5\u627e\u66f4\u597d\u5199\u4e00\u4e9b\uff0c\u5e76\u4e14\u4e5f\u4e0d\u4f1a\u5f71\u54cd\u590d\u6742\u5ea6\uff0c\u56e0\u4e3a\u6211\u4eec\u524d\u9762\u672c\u6765\u5c31\u8981\u6392\u5e8f\u7684\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(m\\log m + \\sum_{s_i > 0}(s_i\\log s_i)) = O(m\\log m)$\u3002\n\n## \u53c2\u8003\u4ee3\u7801\n\n```cpp\n// problem: CF383B\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define pb push_back\n#define mk make_pair\n#define lob lower_bound\n#define upb upper_bound\n#define fi first\n#define se second\n#define SZ(x) ((int)(x).size())\n\ntypedef unsigned int uint;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int, int> pii;\n\ntemplate<typename T> inline void ckmax(T& x, T y) { x = (y > x ? y : x); }\ntemplate<typename T> inline void ckmin(T& x, T y) { x = (y < x ? y : x); }\n\nconst int MAXM = 1e5;\n\nint n, m;\npii p[MAXM + 5];\n\nint main() {\n\tcin >> n >> m;\n\tfor (int i = 1; i <= m; ++i) {\n\t\tcin >> p[i].fi >> p[i].se;\n\t}\n\tsort(p + 1, p + m + 1);\n\tm = unique(p + 1, p + m + 1) - (p + 1);\n\t\n\tvector<pii> seg;\n\tseg.pb(mk(1, 1));\n\tint lst = 0;\n\tfor (int i = 1; i <= m; ++i) {\n\t\tint j = i;\n\t\twhile (j + 1 <= m && p[j + 1].fi == p[i].fi)\n\t\t\t++j;\n\t\t\n\t\tif (!SZ(seg)) {\n\t\t\tcout << -1 << endl;\n\t\t\treturn 0;\n\t\t}\n\t\tif (p[i].fi > lst + 1) {\n\t\t\tpii tmp = mk(seg[0].fi, n);\n\t\t\tvector<pii>().swap(seg);\n\t\t\tseg.pb(tmp);\n\t\t}\n\t\t\n\t\tint pre = 0;\n\t\tvector<pii> newseg;\n\t\tfor (int k = i; k <= j; ++k) {\n\t\t\tif (pre + 1 == p[k].se) {\n\t\t\t\tpre = p[k].se;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// [pre + 1, p[k].se - 1]\n\t\t\tint t = lob(seg.begin(), seg.end(), mk(pre + 1, 0)) - seg.begin();\n\t\t\t\n\t\t\tif (t != 0 && seg[t - 1].se >= pre + 1) {\n\t\t\t\tnewseg.pb(mk(pre + 1, p[k].se - 1));\n\t\t\t} else if (t != SZ(seg) && seg[t].fi <= p[k].se - 1) {\n\t\t\t\tnewseg.pb(mk(seg[t].fi, p[k].se - 1));\n\t\t\t}\n\t\t\tpre = p[k].se;\n\t\t}\n\t\tif (pre != n) {\n\t\t\t// [pre + 1, n]\n\t\t\tint t = lob(seg.begin(), seg.end(), mk(pre + 1, 0)) - seg.begin();\n\t\t\t\n\t\t\tif (t != 0 && seg[t - 1].se >= pre + 1) {\n\t\t\t\tnewseg.pb(mk(pre + 1, n));\n\t\t\t} else if (t != SZ(seg) && seg[t].fi <= n) {\n\t\t\t\tnewseg.pb(mk(seg[t].fi, n));\n\t\t\t}\n\t\t}\n\t\t\n\t\t// for (int k = 0; k < SZ(newseg); ++k) {\n\t\t// \tcerr << \"[\" << newseg[k].fi << \",\" << newseg[k].se << \"]\" << \" \\n\"[k == SZ(newseg) - 1];\n\t\t// }\n\t\t\n\t\tlst = p[i].fi;\n\t\ti = j;\n\t\tseg = newseg;\n\t}\n\tif (!SZ(seg)) {\n\t\tcout << -1 << endl;\n\t\treturn 0;\n\t}\n\tif (lst != n) {\n\t\tpii tmp = mk(seg[0].fi, n);\n\t\tvector<pii>().swap(seg);\n\t\tseg.pb(tmp);\n\t}\n\tfor (int i = 0; i < SZ(seg); ++i) {\n\t\tif (seg[i].fi <= n && seg[i].se >= n) {\n\t\t\tcout << n * 2 - 2 << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << -1 << endl;\n\treturn 0;\n}\n```\n\n",
        "postTime": 1607949841,
        "uid": 100674,
        "name": "duyi",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF383B \u3010Volcanoes\u3011"
    },
    {
        "content": "\u9996\u5148\u6ce8\u610f\u5230\u5982\u679c\u6709\u89e3\u90a3\u4e48\u7b54\u6848\u663e\u7136\u662f $2n-2$\uff0c\u4e8e\u662f\u5224\u6709\u89e3\u6027\u5373\u53ef\u3002\n\n\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u6734\u7d20\u7684 DP\uff0c\u5c31\u662f\u4ece\u4e0a\u9762\u548c\u5de6\u8fb9\u8f6c\u79fb\u8fc7\u6765\u3002\u6211\u4eec\u8003\u8651\u5bf9\u5176\u4f18\u5316\u3002\u6ce8\u610f\u5230\u5b83\u662f\u4e00\u4e2a\u8fde\u7a7a\u95f4\u90fd\u7206\u70b8\u7684 DP\uff0c\u5bf9\u8fd9\u7c7b\u8003\u8651\u60ef\u7528\u5957\u8def\uff1a\u8bbe\u4e00\u4e2a\u9636\u6bb5\uff0c\u7136\u540e\u5728\u9636\u6bb5\u7684\u9012\u589e\u8fc7\u7a0b\u4e2d\u7ef4\u62a4\u8fd9\u4e2a\u9636\u6bb5\u5185\u7684 DP \u5e8f\u5217 / \u77e9\u9635\u3002\u4e8e\u662f\u6211\u4eec\u628a\u884c\u4f5c\u4e3a\u9636\u6bb5\uff0c\u8fd9\u6837\u66f4\u65b0\u6b21\u6570\u663e\u7136\u662f $\\mathrm O(m)$ \u7684\u3002\n\n\u5982\u679c\u7ecf\u8fc7\u7a7a\u884c\uff0c\u90a3\u4e48\u5c31\u627e\u5230\u7b2c\u4e00\u4e2a `true` \u7136\u540e\u8d4b\u540e\u7f00\uff1b\u5982\u679c\u6709\u969c\u788d\u7269\uff0c\u90a3\u5c31\u5728\u969c\u788d\u7269\u5206\u5272\u6210\u7684\u6bb5\u4eec\u5185\u8fdb\u884c\u5982\u4e0a\u64cd\u4f5c\u3002\u8fd9\u663e\u7136\u53ef\u4ee5\u7528\u4e00\u4e2a\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u8f7b\u677e\u7ef4\u62a4\u3002\u4e0d\u8fc7\u770b\u4e86 dyls \u7684\u9898\u89e3\u53d1\u73b0\u6709\u66f4\u7b80\u5355\u7684\u65b9\u6cd5\u3002\u6211\u4eec\u8003\u8651\u7ef4\u62a4\u8d4b\u6210 `true` \u7684\u533a\u95f4\u4eec\uff0c\u7528 `set` \u5b58\uff0c\u6bcf\u6b21\u67e5\u8be2\u5c31\u4e8c\u5206\uff0c\u4fee\u6539\u5c31 `erase` \u82e5\u5e72\u7136\u540e `insert`\u3002\u5176\u5b9e\u8fd8\u53ef\u4ee5\u6bcf\u4e2a\u9636\u6bb5\u91cd\u65b0\u8d4b\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u66f4\u65b9\u4fbf\u5730\u7528 `vector` \u5b58\u3002",
        "postTime": 1608434878,
        "uid": 138400,
        "name": "chenxia25",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF383B \u3010Volcanoes\u3011"
    },
    {
        "content": "# [CF383B  Volcanoes](https://www.luogu.com.cn/problem/CF383B)\n## \u9898\u76ee\u63cf\u8ff0\n\u7ed9\u5b9a\u4e00\u4e2a\u5927\u5c0f\u4e3a $n\\times n$ \u7684\u68cb\u76d8\uff0c\u5176\u4e2d\u6709 $m$ \u4e2a\u70b9\u4e3a\u7981\u533a\u3002  \n\u6c42\u4ece\u68cb\u76d8\u5de6\u4e0a\u89d2\u5f00\u59cb\uff0c\u53ea\u5411\u4e0b\u6216\u53f3\u8d70\uff0c\u5230\u8fbe\u68cb\u76d8\u53f3\u4e0b\u89d2\u7684\u8def\u5f84\u957f\u5ea6\u3002\u65e0\u89e3\u8f93\u51fa `-1`\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a$1 \\leq x_i, y_i \\leq n \\leq 10^9, 1 \\leq m \\leq 10^5$\u3002\n\n## \u9898\u76ee\u5206\u6790\n~~\u88ab\u8bc8\u9a97\u4e86\uff0c\u4ee5\u4e3a\u662f\u4e00\u9053\u8ba1\u6570\u9898\u3002~~  \n\u5b9e\u9645\u4e0a\u7a0d\u52a0\u601d\u8003\u5f88\u5feb\u5c31\u80fd\u53d1\u73b0\u53ea\u8981\u5b58\u5728\u4e00\u6761\u5408\u6cd5\u8def\u5f84\uff0c\u5176\u957f\u5ea6\u4e00\u5b9a\u662f $2n-2$\u3002\u8def\u5f84\u7b49\u957f\u7684\u8bc1\u660e\u53ef\u4ee5\u53c2\u8003\u5c0f\u5b66\u6570\u5b66\u9898\u8ba1\u7b97\u4e0d\u89c4\u5219\u591a\u8fb9\u5f62\u5468\u957f\u65f6\u7684\u5e73\u79fb\u7ebf\u6bb5\u64cd\u4f5c\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad\u662f\u5426\u5b58\u5728\u5408\u6cd5\u8def\u5f84\u5373\u53ef\u3002\u6ce8\u610f\u5230\u8fd9\u4e00\u6b65\u4e0d\u597d\u64cd\u4f5c\uff0c\u6211\u4eec\u8003\u8651\u6309\u884c\u6570\u5206\u5f00\u5904\u7406\u3002  \n\u63a5\u4e0b\u6765\u4f1a\u7528\u4e00\u4e9b\u56fe\u4f8b\u8f85\u52a9\u8bf4\u660e\u3002\u4ee5\u4e0b\u6240\u6709\u56fe\u4f8b\u4e2d `#` \u4ee3\u8868\u7981\u533a\uff0c`.` \u4ee3\u8868\u7a7a\u5730\uff0c`\u00d7` \u4ee3\u8868\u4e0d\u80fd\u5230\u8fbe\uff0c`\u221a` \u4ee3\u8868\u80fd\u591f\u5230\u8fbe\uff0c`-` \u4ee3\u8868\u4e0d\u5728\u53ef\u80fd\u7684\u8fde\u7eed\u6bb5\u5185\u3002  \n```\n......\n.#....\n#..#..\n```  \n\u8003\u8651\u6bcf\u884c\u80fd\u8d70\u5230\u7684**\u8fde\u7eed\u6bb5**\u6709\u54ea\u4e9b\u3002  \n\u5bf9\u4e8e\u7b2c\u4e00\u884c\uff0c\u663e\u7136\u662f\u6574\u6bb5 `[1,6]`\u3002  \n\u5bf9\u4e8e\u7b2c\u4e8c\u884c\uff0c\u7531\u4e8e\u6709\u7981\u533a\u5b58\u5728\uff0c\u8fde\u7eed\u6bb5\u88ab\u5206\u4e3a `[1,1]` \u548c `[3,6]`\u3002  \n\u5bf9\u4e8e\u7b2c\u4e09\u884c\uff0c\u6ce8\u610f\u5230\u7531\u4e8e\u53ea\u80fd\u5411\u4e0b\u6216\u53f3\u8d70\uff0c\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e\u4e0d\u80fd\u8fbe\u5230\uff0c\u6545\u8fde\u7eed\u6bb5\u4e3a `[3,3]` \u548c `[5,6]`\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u80fd\u8d70\u5230\u7684\u4f4d\u7f6e\u90fd\u80fd\u7528\u6bcf\u884c\u7684\u8fde\u7eed\u6bb5\u6765\u91cf\u5316\u3002\u6545\u6211\u4eec\u53ea\u9700\u8981\u7edf\u8ba1\u6bcf\u4e00\u884c\u80fd\u8d70\u5230\u7684\u8fde\u7eed\u6bb5\uff0c\u5e76\u5224\u65ad\u6700\u540e\u4e00\u884c\u7684\u8fde\u7eed\u6bb5\u662f\u5426\u5305\u542b\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u5373\u53ef\u3002\n\n\u8003\u8651\u8fd9\u4e9b\u8fde\u7eed\u6bb5\u7684\u8f6c\u79fb\u3002\u4f7f\u7528 `set` \u7ef4\u62a4\u5404\u4e2a\u8fde\u7eed\u6bb5\u7684\u5de6\u53f3\u7aef\u70b9\uff0c\u540c\u65f6\u8bb0\u5f55\u4e0a\u4e00\u884c\u8fde\u7eed\u6bb5\u4e2d\u6700\u9760\u5de6\u7684\u4f4d\u7f6e `lb`\u3002\u5bb9\u6613\u53d1\u73b0\u8fd9\u4e2a\u4f4d\u7f6e\u5355\u8c03\u4e0d\u51cf\uff0c\u56e0\u4e3a\u6bb5\u662f\u9010\u6e10\u5411\u53f3\u79fb\u7684\u3002  \n\u8f6c\u79fb\u65f6\u6709\u5982\u4e0b\u51e0\u79cd\u60c5\u51b5\uff1a  \n\n1. \u7a7a\u884c\n```\n#..#..#\n.......\n#...#..\n```\n\u7b2c\u4e8c\u884c\u4e3a\u7a7a\u884c\uff0c\u56e0\u800c\u53ea\u8981\u7b2c\u4e00\u884c\u53ef\u4ee5\u5411\u4e0b\u8d70\uff0c\u5176\u540e\u65b9\u7684\u4f4d\u7f6e\u90fd\u80fd\u5230\u8fbe\u3002\u5728 `set` \u4e2d\u76f4\u63a5\u63d2\u5165 `[lb,n]` \u5373\u53ef\u3002\u7a7a\u884c\u5411\u4e0b\u4e00\u884c\u7684\u8f6c\u79fb\u540c\u6837\u9700\u8981\u6ce8\u610f\u3002  \n\u5982\u679c\u8fde\u7eed\u591a\u884c\u662f\u7a7a\u884c\uff0c\u5904\u7406\u4e00\u884c\u4e4b\u540e\u5168\u90e8\u8df3\u8fc7\u5373\u53ef\u3002\n\n2. \u6bb5\u4e2d\u6240\u6709\u4f4d\u7f6e\u90fd\u80fd\u5230\u8fbe\n```\n#.......#\n###...###\n---\u221a\u221a\u221a---\n```\n```\n#...#####\n###.....#\n---\u221a\u221a\u221a\u221a\u221a-\n```\n\u4e24\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u82e5\u7b2c\u4e00\u884c\u4e2d\u7684\u8fde\u7eed\u6bb5\u80fd\u591f\u88ab\u8def\u5f84\u5b8c\u5168\u8986\u76d6\uff0c\u7b2c\u4e8c\u884c\u4e2d\u7684\u4ea6\u53ef\u3002\n\n3. \u6bb5\u4e2d\u53ea\u6709\u90e8\u5206\u4f4d\u7f6e\u80fd\u591f\u5230\u8fbe\n```\n####....#\n#......##\n-\u00d7\u00d7\u00d7\u221a\u221a\u221a--\n```\n```\n##....###\n#.......#\n-\u00d7\u221a\u221a\u221a\u221a\u221a\u221a-\n```\n\u4e24\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5373\u4f7f\u7b2c\u4e00\u884c\u7684\u8fde\u7eed\u6bb5\u80fd\u591f\u88ab\u8def\u5f84\u5b8c\u5168\u8986\u76d6\uff0c\u7b2c\u4e8c\u884c\u7684\u6bb5\u53ea\u6709\u4e0e\u7b2c\u4e00\u884c\u6bb5\u5de6\u7aef\u70b9\u5e73\u9f50\u4f4d\u7f6e\u5f80\u540e\u7684\u90e8\u5206\u80fd\u591f\u5230\u8fbe\u3002\n\n\u6700\u540e\uff0c\u6ce8\u610f\u8d77\u70b9\u884c\u4e0e\u7ec8\u70b9\u884c\u7684\u7279\u6b8a\u5904\u7406\u3002  \n\u8f6c\u79fb\u7684\u90e8\u5206\u4eff\u7167\u4e0a\u8ff0\uff0c\u7528 `set` \u6a21\u62df\u5373\u53ef\u3002\u4ee3\u7801\u4e2d\u7528\u4e86\u4e00\u4e2a\u7c7b\u4f3c\u6eda\u52a8\u6570\u7ec4\u7684\u6280\u5de7\u3002  \n\u6574\u4f53\u96be\u5ea6\u4e0d\u5927\uff0c\u5efa\u8bae\u8bc4\u7eff\u6216\u84dd\u3002\n\n## Code\n```cpp\n#include <cstdio>\n#include <cctype>\n#include <set>\n#include <algorithm>\nusing namespace std;\n\ninline int read()\n{\n    int x = 0; char c;\n    while(!isdigit(c = getchar()));\n    do{\n        x = (x << 1) + (x << 3) + (c ^ 48);\n    }while(isdigit(c = getchar()));\n    return x;\n}\n\nint top = 0, stk[20];\ninline void write(int x)\n{\n    do{\n        stk[++top] = x % 10;\n        x /= 10;\n    }while(x);\n    for(register int i = top; i; --i)\n        putchar(stk[i] | 48);\n    putchar('\\n'); top = 0;\n    return ;\n}\n\nint n, m, l, r, lb = 1, pre = 1, now = 1, last = 0;\nstruct node\n{\n    int x;\n    int y;\n}sz[100010];\ninline bool operator < (node a, node b)\n{\n    if(a.x != b.x) return a.x < b.x;\n    return a.y < b.y;\n}\nset<node> s[2];\nset<node> :: iterator it;\n\ninline void testinsert(int l, int r)\n{\n\tit = s[last].upper_bound((node){l, 2147483647}); --it;\n\tif(it -> x <= l && it -> y >= l)\n\t{\n\t\ts[now].insert((node){l, r});\n\t\treturn ;\n\t}\n\tit = s[last].lower_bound((node){l, 0});\n\tif(it -> x >= l && it -> x <= r)\n\t\ts[now].insert((node){it -> x, r});\n\treturn ;\n}\n\nint main()\n{\n    n = read(); m = read();\n\tif(m == 0)\n\t{\n\t\twrite((n << 1) - 2);\n\t\treturn 0;\n\t}\n    for(register int i = 1; i <= m; ++i)\n    {\n        sz[i].x = read();\n        sz[i].y = read();\n    }\n    sort(sz + 1, sz + m + 1); pre = sz[1].x;\n    if(sz[1].x > 1) s[0].insert((node){1, n});\n    else s[0].insert((node){1, 1});\n    for(register int i = 1; i <= m; ++i)\n    {\n        l = lb;\n        while(i <= m && sz[i].x == pre)\n        {\n            r = sz[i].y - 1;\n            if(l > r)\n            {\n                l = sz[i].y + 1;\n                ++i; continue;\n            }\n            testinsert(l, r);\n            l = sz[i].y + 1; ++i;\n        }\n        if(l <= n) testinsert(l, n);\n        if(s[now].empty())\n        {\n            printf(\"-1\\n\");\n            return 0;\n        }\n        it = s[now].begin(); lb = it -> x;\n        if(i == m + 1)\n        {\n            if(sz[i - 1].x < n)\n\t\t\t{\n\t\t\t\ts[now].clear();\n\t\t\t\ts[now].insert((node){lb, n});\n\t\t\t}\n            last ^= 1; now ^= 1; break;\n        }\n        if(sz[i].x > pre + 1)\n        {\n            s[now].clear();\n            s[now].insert((node){lb, n});\n        }\n        pre = sz[i--].x; now ^= 1; last ^= 1; s[now].clear();\n    }\n    it = s[last].end(); --it;\n    if(it -> y == n) write((n << 1) - 2);\n    else printf(\"-1\\n\"); return 0;\n}\n```",
        "postTime": 1668257259,
        "uid": 632868,
        "name": "Clover_BY",
        "ccfLevel": 0,
        "title": "CF383B  Volcanoes"
    },
    {
        "content": "# CF383B Volcanoes\r\n\r\n\u9996\u5148\u53ea\u6709\u4e24\u79cd\u60c5\u51b5\uff0c\u5982\u679c\u80fd\u8d70\u5230\u5c31\u662f $2n-2$ \uff0c\u5426\u5219\u5c31\u662f $-1$ .\r\n\r\n\u7531\u4e8e\u884c\u6570\u5f88\u5c11\uff0c\u56e0\u6b64\u8003\u8651\u6309\u884c\u7ef4\u62a4\u6240\u6709\u5408\u6cd5\u533a\u95f4\u3002\r\n\r\n\u7528 set \u7ef4\u62a4\u5408\u6cd5\u533a\u95f4\uff0c\u7531\u4e8e\u969c\u788d\u7269\u4e0d\u591a\uff0c\u90a3\u4e48\u62c6\u51fa\u6765\u7684\u533a\u95f4\u5fc5\u7136\u4e5f\u4e0d\u4f1a\u5f88\u591a\uff0c\r\n\u90a3\u4e48\u8003\u8651\u7684\u60c5\u51b5\u5c31\u662f\u4e00\u6bb5\u5408\u6cd5\u533a\u95f4\u4e2d\u95f4\u51fa\u4e86\u4e2a\u969c\u788d\u3002\r\n\r\nset \u76f4\u63a5 lower_bound  \u67e5\u627e\u540e\u7ef4\u62a4\u5373\u53ef\u3002",
        "postTime": 1632398952,
        "uid": 179600,
        "name": "shao0320",
        "ccfLevel": 8,
        "title": "CF383B Volcanoes"
    },
    {
        "content": "### $\\text{Difficulty : 2500}$\n---\n### \u89e3\u9898\u601d\u8def\uff1a\n\n\u9996\u5148\u5bb9\u6613\u53d1\u73b0\u7b54\u6848\u53ea\u6709 $2n-2$ \u548c $-1$ \u4e24\u79cd\uff0c\u4e5f\u5c31\u662f\u53ea\u9700\u8981\u5224\u65ad\u662f\u5426\u5b58\u5728\u8def\u5f84\u5230\u8fbe\u7ec8\u70b9\u5c31\u884c\u3002\n\n\u89c2\u5bdf\u6570\u636e\u8303\u56f4\uff0c\u53ef\u4ee5\u53d1\u73b0\u706b\u5c71\u7684\u6570\u91cf\u76f8\u5bf9\u6574\u4e2a\u56fe\u7684\u5927\u5c0f\u800c\u8a00\u5f88\u5c11\uff0c\u4e5f\u5c31\u662f\u8bf4\u6709\u7528\u7684\u884c\u6216\u8005\u5217\u5f88\u5c11\u3002\u4e24\u8005\u5bf9\u79f0\uff0c\u4e0d\u59a8\u53d6\u884c\u6765\u8ba8\u8bba\u3002\n\n\u5c06\u6240\u6709\u7684\u706b\u5c71\u6309\u7167\u884c\u7684\u5927\u5c0f\u6392\u5e8f\uff0c\u4f9d\u6b21\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6709\u7528\u7684\u884c\u7ef4\u62a4\u51fa\u53ef\u4ee5\u8d70\u5230\u7684\u533a\u95f4\uff0c\u4e24\u884c\u4e4b\u95f4\u5982\u679c\u90fd\u662f\u6709\u7528\u7684\u5219\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u533a\u95f4\u4f9d\u6b21\u5904\u7406\uff0c\u5426\u5219\u5c31\u53ea\u9700\u8981\u76f4\u63a5\u8df3\u8fc7\u5927\u91cf\u7684\u65e0\u7528\u884c\u5c31\u884c\u4e86\u3002\u6700\u540e\u5224\u65ad\u5728\u6700\u540e\u4e00\u884c\u6700\u540e\u4e00\u5217\u662f\u5426\u88ab\u5305\u542b\u5728\u533a\u95f4\u4e4b\u5185\u3002\n\n\u5b9e\u73b0\u4e0a\u53ef\u4ee5\u628a\u4e00\u5806\u7684\u65e0\u7528\u884c\u538b\u7f29\u6210\u4e00\u4e2a\u6709\u7528\u884c\u5904\u7406\u3002\n\n\u53cc\u6307\u9488\u5199\u7684\u8bdd\u597d\u50cf\u7ec6\u8282\u633a\u591a\u7684\uff0c\u9700\u8981\u6ce8\u610f\u4e00\u4e0b\u3002\n\n---\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include<algorithm>\n#include<cstdio>\nusing namespace std;\nconst int MAXN=200005;\nint n,m,now,s[MAXN],tot,cnt1,cnt2;\nstruct str{\n\tint x,y;\n\tbool operator <(str a){\n\t\tif(y==a.y)return x<a.x;\n\t\treturn y<a.y; \n\t}\n}p[MAXN],l[MAXN],l2[MAXN];\n// \u70b9     \u533a\u95f4 \nvoid copy(){\n\tcnt1=cnt2;\n\tfor(int i=1;i<=cnt1;i++)\n\tl[i].x=l2[i].x,l[i].y=l2[i].y;\n}\nvoid work(){\n\tif(cnt1==0)return;\n\tcnt2=0;int p=1;tot++;s[tot]=n+1;\n\tfor(int i=1;i<=tot;i++){\n\t\tif(s[i]-s[i-1]==1)continue;\n\t\twhile(p<cnt1&&l[p].y<=s[i-1])p++;\n\t\tif(l[p].y<=s[i-1])continue;\n\t\tif(l[p].x<=s[i-1]){\n\t\t\tl2[++cnt2].x=s[i-1]+1;\n\t\t\tl2[cnt2].y=s[i]-1;\n\t\t}\n\t\tif(s[i-1]<l[p].x&&l[p].x<s[i]){\n\t\t\tl2[++cnt2].x=l[p].x;\n\t\t\tl2[cnt2].y=s[i]-1;\n\t\t}\n\t}\n\tcopy();\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\tscanf(\"%d%d\",&p[i].x,&p[i].y);\n\tsort(p+1,p+m+1);\n\tp[0].y=1;cnt1=1;l[1].x=1;l[1].y=1;\n\tfor(int i=1;i<=m;i++){\n\t\tif(p[i].y==p[i-1].y)s[++tot]=p[i].x;\n\t\telse{\n\t\t\twork();\n\t\t\tif(p[i].y-p[i-1].y>1){tot=0;work();}\n\t\t\ttot=1;s[tot]=p[i].x;\n\t\t}\n\t}\n\twork();\n\tif(p[m].y<n){tot=0;work();}\n\tif(l[cnt1].y==n)printf(\"%d\\n\",2*n-2);\n\telse printf(\"-1\\n\");\n\treturn 0;\n}\n```\n",
        "postTime": 1666682622,
        "uid": 223559,
        "name": "qxp101",
        "ccfLevel": 6,
        "title": "CF383B \u9898\u89e3"
    }
]