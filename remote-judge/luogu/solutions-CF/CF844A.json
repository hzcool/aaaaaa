[
    {
        "content": "\u8fd9\u9898\u5e94\u8be5\u4e0d\u7b97\u5f88\u96be\u7684\uff0c\u505a\u6cd5\u663e\u7136\uff0c\u6570\u636e\u4e0d\u5f3a\uff0c\u505a\u6cd5\u5927\u81f4\u5982\u4e0b\uff1a     \n>\u5148\u8f93\u5165\u5b57\u7b26\u4e32 $st$ \u548c\u4e00\u4e2a\u6574\u6570 $k$ \u3002      \n>    \n>\u63a5\u7740\u5224\u65ad\u5b57\u7b26\u4e32 $st$ \u7684\u957f\u5ea6\u662f\u5426\u5c0f\u4e8e $k$ \uff0c\u5982\u679c\u5c0f\u4e8e\uff0c\u5c31\u8f93\u51fa $impossible$ \uff0c\u5e76\u9000\u51fa\u7a0b\u5e8f\u3002  \n>         \n>\u4e0b\u4e00\u6b65\u5c31\u662f\u7a0b\u5e8f\u7684\u5173\u952e\u4e86\uff0c\u4ece $0$ \u5f00\u59cb\u5faa\u73af\u5230\u5b57\u7b26\u4e32 $st$ \u7684\u957f\u5ea6\uff0c\u7528\u6570\u7ec4\u8ba1\u6570\u8bb0\u4f4f\u6bcf\u4e2a\u5b57\u7b26\u51fa\u73b0\u7684\u6570\u91cf\u3002   \n>          \n>\u7136\u540e\u5c31\u4ece\u5b57\u7b26 $a$ \u5faa\u73af\u5230\u5b57\u7b26 $z$ \uff0c\u5982\u679c\u8be5\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\u5927\u4e8e $0$ \uff0c\u5219\u7d2f\u52a0\u4e0d\u540c\u7684\u5b57\u7b26\u6570\u91cf\u3002    \n>     \n>\u6700\u540e\u8f93\u51fan-\u4e0d\u540c\u5b57\u7b26\u7684\u51fa\u73b0\u6570\u91cf\u3002   \n>         \n>**\u8bb0\u4f4f\uff1a\u5982\u679c\u7b54\u6848\u51fa\u73b0\u8d1f\u6570\u8981\u8f93\u51fa0**    \n     \n\u8d34 $AC$ \u4ee3\u7801\uff1a    \n``` \n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\u6587\u4ef6 \nusing namespace std;\nint n,ans,x[256];/*\u5b9a\u4e49\u53d8\u91cf*/ string st;/*\u5b9a\u4e49\u5b57\u7b26\u4e32*/\nint main()\n{\n\tios::sync_with_stdio(false);//\u4ee4cin\u548ccout\u8fbe\u5230scanf\u548cprintf\u7684\u901f\u5ea6 \n\tcin>>st>>n;//\u8f93\u5165\u5b57\u7b26\u4e32\u548c\u6574\u6570 \n\tif(n>st.length())//\u5224\u65ad\u5b57\u7b26\u4e32\u957f\u5ea6\u662f\u5426\u5c0f\u4e8ek \n\t{\n\t\tcout<<\"impossible\";//\u8f93\u51faimpossible \n\t\treturn 0;\n\t}\n\tfor(int i=0;i<st.length();i++) //\u5faa\u73af \n\t{\n\t\tx[st[i]]++;//\u7d2f\u52a0\u4e0d\u540c\u5b57\u7b26\u4e32\u51fa\u73b0\u6570\u91cf \n\t}\n\tfor(int i='a';i<='z';i++) //\u4ece\u5b57\u7b26a\u5faa\u73af\u5230\u5b57\u7b26z \n\t{\n\t\tif(x[i]>0) //\u5982\u679c\u51fa\u73b0\u6b21\u6570\u5927\u4e8e0\u5219\u7d2f\u52a0 \n\t\t\tans++;\n\t}\n\tcout<<max(0,n-ans);//\u8f93\u51fa\uff0c\u5e76\u4e14\u7279\u5224\u8d1f\u6570\u7684\u60c5\u51b5 \n\treturn 0;//\u8981\u517b\u6210\u597d\u4e60\u60ef \n}\n```",
        "postTime": 1584865353,
        "uid": 267364,
        "name": "NohaAlpha",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF844A \u3010Diversity\u3011"
    },
    {
        "content": "\u5f88\u7b80\u5355\uff0c\u5224\u65ad\u8fd9\u4e2a\u5b57\u7b26\u4e32\u6709\u591a\u5c11\u4e2a\u4e0d\u540c\u7684\u5b57\u7b26\uff0c\u8ba9\u540e\u7528k\u51cf\u4e00\u51cf  \n\u6ce8\u610f\uff1a  \n1\u3001\u5982\u679c\u4e0d\u540c\u5b57\u7b26\u6570\u5927\u4e8ek\uff0c\u4e0d\u8981\u8f93\u51fa\u8d1f\u6570  \n2\u3001\u53d8\u91cf\u540d\u522b\u6253\u9519\n\n\u4e0a\u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <string>\n#include <algorithm>\n#include <cstring>\n#define ll long long\n\nusing namespace std;\n\nstring s;\n\ninline ll read(){\n    ll x = 0; int zf = 1; char ch = ' ';\n    while (ch != '-' && (ch < '0' || ch > '9')) ch = getchar();\n    if (ch == '-') zf = -1, ch = getchar();\n    while (ch >= '0' && ch <= '9') x = x * 10 + ch - '0', ch = getchar(); return x * zf;\n}\n\nint vis[26];\n\nint main(){\n    while (cin >> s){\n        memset(vis, 0, sizeof(vis));\n        int k, s_l = s.length(), cnt = 0, cnt2 = 0;\n        cin >> k;\n        if (k > s_l || k > 26)\n            printf(\"impossible\\n\");\n        else{\n            for (int i = 0; i < s_l; ++i){\n                if (s[i] < 'a' || s[i] > 'z')\n                    continue;\n                if (!vis[s[i] - 'a']){\n                    vis[s[i] - 'a'] = 1;\n                    ++cnt;\n                }\n            }\n            printf(\"%d\\n\", (k - cnt) < 0 ? 0 : (k - cnt));\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1556421477,
        "uid": 20462,
        "name": "lukelin",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF844A \u3010Diversity\u3011"
    },
    {
        "content": "``STL``\u5927\u6cd5\u597d\uff01\n\n------------\n\u601d\u8def\uff1a\n\n1. \u5982\u679c\u6574\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u8fd8\u6ca1\u6709$n$\u5927\uff0c\u90a3\u4e48\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\u4e8b\uff0c\u56e0\u6b64\u8f93\u51fa``impossible``\u3002\uff08\u56e0\u4e3a\u4e0d\u80fd\u52a0\u5b57\u7b26\u53ea\u80fd\u6539\u53d8\uff09\n2. \u9996\u5148\u5220\u53bb\u91cd\u590d\u7684\u5b57\u7b26\uff0c\u7136\u540e\uff1a\n    - \u5982\u679c\u6b64\u65f6\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u5927\u4e8e$n$\uff0c\u90a3\u4e48\u76f4\u63a5\u8f93\u51fa$0$\uff0c\u56e0\u4e3a\u4e0d\u9700\u8981\u66f4\u6539\u3002\n    - \u5982\u679c\u6b64\u65f6\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u5c0f\u4e8e$n$\uff0c\u90a3\u4e48\u8f93\u51fa$n-s.size()$\uff0c\u5373\u4ee3\u8868\u8fd8\u9700\u8981\u66f4\u6539\u51e0\u4e2a\u3002\n\n\u800c\u8fd9\u4e9b\u64cd\u4f5c\u51e0\u4e4e\u90fd\u7528\u4e86``STL``\u5b8c\u6210\uff0c\u5148\u770b\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstring s;\nint n;\nint main(){\n\tcin>>s>>n;\n\tif(n>s.size()){puts(\"impossible\");return 0;}//\u4e0d\u53ef\u80fd\n\tsort(s.begin(),s.end());//\u6392\u5e8f\n\ts.erase(unique(s.begin(),s.end()),s.end());//\u53bb\u91cd\u590d\n\tif(s.size()>n)puts(\"0\");//\u4e0d\u9700\u8981\u66f4\u6539\n\telse cout<<n-s.size();//\u9700\u8981\u66f4\u6539\n}\n```\n\n\u8fd9\u91cc\u89e3\u91ca\u4e00\u4e0b``unique``\uff1a\n\n``unique(s.begin(),s.end())``\u5728\u5b57\u7b26\u4e32\u4e2d\u5bfb\u627e\u76f8\u90bb\u5e76\u76f8\u540c\u7684\u5b57\u7b26\u201c\u5220\u6389\u201d\uff0c\u4f46\u5e76\u4e0d\u662f\u771f\u6b63\u7684\u5220\u6389\uff0c\u800c\u662f\u5c06\u540e\u9762\u7684\u5b57\u7b26\u4e32\u5f80\u524d\u79fb\u800c\u8986\u76d6\uff0c\u4f8b\u5982\n```\ns=\"ass we can\";\nunique(s.begin(),s.end());\ncout<<s;\n```\n\u6700\u540e\u8f93\u51fa\u7684\u662f``as we cann``\uff0c\u4e5f\u5c31\u662f\u8bf4\uff1a\u628a``s we can``\u5f80\u524d\u79fb\u4e86\u4e00\u683c\uff0c\u4f46\u6700\u540e\u9762``can``\u7684``n``\u5e76\u6ca1\u6709\u6e05\u9664\u3002\n\n\u4f46\u662f\uff0c``unique``\u662f\u6709\u8fd4\u56de\u503c\u7684\uff0c\u5b83\u8fd4\u56de\u7684\u662f\u540e\u9762\u6ca1\u6709\u5220\u9664\u7684\u90a3\u90e8\u5206\u7684\u5f00\u5934\uff0c\u5982\u4e0a\u9762\u5c31\u662f\u8fd4\u56de``cann``\u7684\u7b2c\u4e8c\u4e2a``n``\u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7528``erase``\u51fd\u6570\u5220\u9664\u540e\u9762\u7684\u90e8\u5206\uff0c\u4e8e\u662f\u5c31\u6709\u4e86\u8fd9\u6761\u8bed\u53e5``s.erase(unique(s.begin(),s.end()),s.end());``",
        "postTime": 1566885592,
        "uid": 58546,
        "name": "CZQ_King",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF844A \u3010Diversity\u3011"
    },
    {
        "content": "## \u8fd9\u9053\u9898\u4e0d\u96be\u5427\u2026\u2026\u8fd8\u662f\u6bd4\u8f83\u597d\u60f3\u7684\uff0c\u8981~~\u719f\u7ec3~~\u8fd0\u7528$bool$\u6570\u7ec4\n\n\u7531\u4e8e\u8981\u4f7f\u5b57\u7b26\u4e32\u4e2d\u4e0d\u540c\u5b57\u6bcd\u6570\u4e2a\u6570\u8fbe\u5230$k$\uff0c\u90a3\u4e48\u53ea\u7528\u7279\u5224\u4e00\u4e0b\u5b57\u7b26\u4e32\u957f\u5ea6\u662f\u4e0d\u662f\u6ca1\u6709$k$\u5927\uff08\u8f93\u51fa$impossible$\uff09\uff0c\u5426\u5219\u4e00\u5b9a\u53ef\u884c\u3002\n\n\u7136\u540e\u8bb0\u5f55\u73b0\u5728\u5b57\u7b26\u4e32\u4e2d\u6709\u51e0\u79cd\u4e0d\u540c\u7684\u5b57\u7b26\uff08$bool$\u6570\u7ec4\u5224\u65ad\u4e0d\u89e3\u91ca\uff09\uff0c\u518d\u770b\u4e00\u4e0b\u8fd8\u9700\u8981\u5904\u7406\u51e0\u6b21\u5c31\u597d\u4e86\u3002\n\n### \u6ce8\u610f\uff1a\u5982\u679c\u73b0\u5728\u7684\u4e0d\u540c\u5b57\u7b26\u6570\u5df2\u7ecf\u591f\u5927\uff0c\u8f93\u51fa$0$\u800c\u975e\u8d1f\u6570\u3002\n\n## \u3010\u4ee3\u7801\u3011\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nbool c[256];\nstring s;\nint ans, k;//ans\u8bb0\u5f55\u4e0d\u540c\u5b57\u6bcd\u6570\ninline int __fix(int x)//\u5904\u7406\u5c0f\u4e8e\u96f6\u7684\u60c5\u51b5\n{\n    return (x < 0)? 0:x;\n}\nint main()\n{\n    cin >> s;\n    cin >> k;\n    if(k > s.size()){printf(\"impossible\");return 0;}//\u7279\u5224\n    for (register int i = 0;i < s.size();i ++)\n    {\n        if(!c[s[i]]) ans ++, c[s[i]] = true;//\u76f4\u63a5\u7b80\u5355bool\u5224\u65ad\n    }\n    printf(\"%d\\n\", __fix(k - ans));//\u5904\u7406\u5c0f\u4e8e\u96f6\u7684\u60c5\u51b5\uff0c\u8f93\u51fa\u5373\u53ef\u3002\n}\n\n```",
        "postTime": 1555059091,
        "uid": 66511,
        "name": "DPair",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF844A \u3010Diversity\u3011"
    },
    {
        "content": "\u4e3b\u89c2\u611f\u89c9\u8fd9\u9053\u9898\u7684\u9898\u9762\u7ffb\u8bd1\u5e76\u4e0d\u600e\u4e48\u597d\u7406\u89e3\uff0c~~\u6216\u8bb8\u8fd9\u5c31\u662f\u8fd9\u9053\u9898\u88ab\u8bc4\u4e3a\u7d2b\u9898\u7684\u539f\u56e0\u5427...~~\uff0c\u6240\u4ee5\u6211\u7ed9\u51fa\u4e86\u6211\u8ba4\u4e3a\u6bd4\u8f83\u597d\u7406\u89e3\u7684\u9898\u9762\u7ffb\u8bd1\uff1a\n\n### \u9898\u9762\u7406\u89e3\uff1a\n\n1. \u5148\u7ed9\u4f60\u4e86\u4e00\u4e2a\u7531 $ a $ ~ $ z $ 26\u4e2a\u5b57\u7b26\u6784\u6210\u7684\u5b57\u7b26\u4e32 $ s $ \uff0c\u8ba9\u4f60\u627e\u51fa\u8fd9\u4e2a\u5b57\u7b26\u4e32\u91cc\u6709\u591a\u5c11\u4e2a\u4e0d\u91cd\u590d\u7684\u5b57\u7b26\uff08\u8bf4\u767d\u4e86\u5c31\u662f\u628a\u91cd\u590d\u5b57\u7b26\u53bb\u6389\uff0c\u5269\u4e0b\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\uff09\u3002\n\n2. \u7136\u540e\u7b2c\u4e8c\u884c\u7ed9\u4e86\u4f60\u4e00\u4e2a\u6b63\u6574\u6570 $ k $ \uff0c\u8ba9\u4f60\u6bd4\u8f83 $ (1) $ \u4e2d\u5f97\u5230\u7684\u4e0d\u91cd\u590d\u5b57\u7b26\u4e2a\u6570\u662f\u5426\u5927\u4e8e $ k $ \uff0c\u5982\u679c\u8fd9\u4e2a\u5b57\u7b26\u4e32\u4e2d\u4e0d\u91cd\u590d\u5b57\u7b26\u6570\u91cf\u5c0f\u4e8e $ k $ \uff0c\u90a3\u6700\u5c11\u9700\u8981\u5bf9\u8fd9\u4e2a\u5b57\u7b26\u4e32\u64cd\u4f5c\u591a\u5c11\u6b65\uff08\u6bcf\u6b65\u53ea\u80fd\u6539\u53d8\u4e00\u4e2a\u5b57\u7b26\uff09\u4f7f\u8fd9\u4e2a\u5b57\u7b26\u4e32\u4e2d\u4e0d\u91cd\u590d\u5b57\u7b26\u6570\u91cf\u8fbe\u5230\u8981\u6c42\u7684 $ k $ \uff0c\u5982\u679c\u65e0\u6cd5\u8fbe\u5230 $ k $ \u7684\u8981\u6c42\uff0c\u5c31\u8f93\u51fa $ impossible $ \u3002\n\nHint\uff1a $ k $ \u7684\u53d6\u503c\u8303\u56f4\u5728 $ 1 $ ~ $ 26 $ \u4e4b\u95f4\uff08\u5305\u62ec\u4e24\u4e2a\u7aef\u70b9\uff09\uff0c\u5b57\u7b26\u4e32 $ s $ \u7684\u957f\u5ea6\u5728 $ 1 $ ~ $ 1000 $ \u4e4b\u95f4\uff08\u4e5f\u5305\u62ec\u4e86\u4e24\u4e2a\u7aef\u70b9\uff09\u3002\n\n### \u601d\u8def\uff1a\n\n~~\u6211\u4e00\u770b\uff0c\u4e24\u519b\u9635\u524d...~~\uff08\u8fd8\u662f\u8ba4\u771f\u70b9\uff0c\u4e0d\u8c03\u4f83\u4e86...\uff09\n\n\u6211\u4eec\u8ba4\u771f\u5ba1\u89c6\u9898\u9762\uff0c\u5c31\u4f1a\u53d1\u73b0\u4e0b\u9762\u7684\u51e0\u4e2a\u57fa\u672c\u4e8b\u5b9e\uff1a\n\n1. \u5982\u679c\u5b57\u7b26\u4e32 $ s $ \u7684\u957f\u5ea6\u6bd4 $ k $ \u5c0f\uff0c\u90a3\u6837\u65e0\u8bba\u5982\u4f55\u90fd\u4e0d\u53ef\u80fd\u505a\u5230\u4e0d\u91cd\u590d\u5b57\u7b26\u6570\u91cf\u5230\u8fbe $ k $ \uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u8f93\u51fa $ impossible $ \u3002\n\n2. \u5982\u679c\u8fd9\u4e2a\u5b57\u7b26\u4e32 $ s $ \u7684\u4e0d\u91cd\u590d\u5b57\u7b26\u4e2a\u6570\u5927\u4e8e\u7b49\u4e8e $ k $ \u65f6\uff0c\u91cc\u4e0d\u91cd\u590d\u5b57\u7b26\u7684\u6570\u91cf\u5df2\u7ecf\u5927\u4e8e\u7b49\u4e8e $ k $ \u4e86\uff0c\u90a3\u5c31\u53ef\u4ee5\u76f4\u63a5\u8f93\u51fa $ 0 $ \u3002\n\n3. \u5269\u4e0b\u7684\u60c5\u51b5\u8f93\u51fa $ k-sum $ \uff08 $ sum $ \u662f\u5b57\u7b26\u4e32 $ s $ \u4e2d\u7684\u4e0d\u91cd\u590d\u5b57\u7b26\u6570\u91cf\uff09\u3002\n\n\u6240\u4ee5...\n\n~~\u7d2b\u9898\u5c45\u7136\u53ef\u4ee5\u6a21\u62df\u4e00\u4e0b\u5c31\u901a\u8fc7\u4e86\uff1f\uff01~~\n\n\u4e0d\u7ba1\u4e86\uff0c\u5148\u8bd5\u4e00\u8bd5\u518d\u8bf4\uff1a\n\n1. \u9996\u5148\uff0c\u6211\u4eec\u5148\u6309\u7167\u601d\u8def\u5224\u65ad\u5b57\u7b26\u4e32 $ s $ \u7684\u957f\u5ea6\u662f\u5426\u5c0f\u4e8e $ k $ \uff0c\u89e3\u51b3\u6389\u7279\u5224\u90e8\u5206\u3002\n\n2. \u7136\u540e\uff0c\u6211\u4eec\u6309\u7167\u9898\u610f\u627e\u51fa\u5b57\u7b26\u4e32 $ s $ \u91cc\u9762\u7684\u4e0d\u91cd\u590d\u5b57\u7b26\u4e2a\u6570 $ sum $ \uff0c\u7b97\u597d\u4e4b\u540e\u4e5f\u4e0d\u9700\u8981\u5224\u65ad\uff0c\u76f4\u63a5\u8f93\u51fa $ max(k-sum,0) $ \u5c31\u53ef\u4ee5\u4e86\u3002\n\n   \uff08\u56e0\u4e3a\u5f53\u8fd9\u4e2a\u5b57\u7b26\u4e32 $ s $ \u7684\u4e0d\u91cd\u590d\u5b57\u7b26\u4e2a\u6570\u5927\u4e8e\u7b49\u4e8e $ k $ \u65f6\uff0c $ k-sum $ \u5c0f\u4e8e\u7b49\u4e8e $ 0 $ \uff0c\u800c\u672c\u6765\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53ea\u8981\u8f93\u51fa $ 0 $ \u5c31\u53ef\u4ee5\u4e86\uff0c\u6240\u4ee5\u4e0d\u7528\u5224\u65ad\uff0c\u76f4\u63a5\u5199 $ max(k-sum,0) $ \u4f5c\u4e3a\u8f93\u51fa\u90e8\u5206\u5c31\u53ef\u4ee5\u4e86\uff0c\u4e5f\u4e0d\u4f1a\u5f71\u54cd $ k-sum $ \u5927\u4e8e $ 0 $ \u7684\u90a3\u4e00\u90e8\u5206\u7b54\u6848\u3002\uff09\n\n### \u4e0b\u9762\u8d34\u4e0a\u6211\u7684AC\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n//\u5f00long long\u7eaf\u5c5e\u624b\u6b8b\uff0c\u5927\u4f6c\u522b\u4ecb\u610f\nusing namespace std;\n#define dd c=getchar()\ninline int read(){int s=0,w=1;char c;while (dd,c>'9' || c<'0') if (c=='-') w=-1;while (c>='0' && c<='9') s=s*10+c-'0',dd;return s*w;}\ninline void write(int x){if (x<0) putchar('-'),x=-x;if (x>=10) write(x/10);putchar(x%10|'0');}\ninline void wln(int x){write(x);puts(\"\");}\ninline void wlk(int x){write(x);printf(\" \");}\n#undef dd\n//\u7f8e\u5999\u7684\u5feb\u8bfbQwQ\nstring s;\nsigned main(){\n\tcin>>s;\n  //\u8bfb\u5165\u8be5\u5b57\u7b26\u4e32\n\tint n=read(),a[27],sum=0;\n  //\u8bfb\u5165n\u4ee5\u53ca\u521d\u59cb\u5316sum\n\tfor (register int i=1;i<=26;i++) a[i]=0;\n  //\u521d\u59cb\u5316\u6876\u6570\u7ec4\uff0c\u9632\u6b62WA\u6389\n\tif (s.length()<n) return printf(\"impossible\\n\"),0;\n  //\u7279\u5224\u5f53n\u5927\u4e8es.length()\u65f6\uff0c\u8f93\u51faimpossible\n\tfor (register int i=0;i<s.length();i++)\n\t if (!a[s[i]-'a'+1]) sum++,a[s[i]-'a'+1]++;\n  //\u5bfb\u627e\u5b57\u7b26\u4e32s\u91cc\u9762\u6709\u591a\u5c11\u4e2a\u4e0d\u91cd\u590d\u5b57\u7b26\n\twln(max(n-sum,0ll));\n  //\u8f93\u51fa\u90e8\u5206\uff08\u5bf9\u4e8e\u6211\u7684\u624b\u6b8b\u4ee3\u7801\uff0cmax\u91cc\u4e0d\u53ef\u4ee5\u76f4\u63a5\u51990\uff0c\u8981\u51990ll\uff0c\u8fd9\u4e2a\u8981\u5f15\u8d77\u6ce8\u610f\uff0cmax\u4e2d\u7684\u6570\u636e\u7c7b\u578b\u5fc5\u987b\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\uff0c\u4e0d\u7136\u4f1a\u7206\u7f16\u8bd1\uff09\n   return 0;//\u5b8c\u7f8e\u5730\u7ed3\u675f\u7a0b\u5e8f\n}\n```\n\n[\u6211\u7684AC\u8bb0\u5f55](https://www.luogu.org/recordnew/show/18139624)",
        "postTime": 1555062072,
        "uid": 185759,
        "name": "cz666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF844A \u3010Diversity\u3011"
    },
    {
        "content": "emmmmm.....\n\n------------------\u4ee5\u4e0a\u4e3a\u5410\u69fd\u5185\u5bb9-----------------------------------------\n#### \u8fdb\u5165\u6b63\u9898\uff1a\n\u7ed9\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32S\u4e0e\u4e00\u4e2a\u6574\u6570k\u3002\n\n\u4f60\u53ef\u4ee5\u66f4\u6539S\u4e2d\u7684\u4efb\u610f\u5b57\u7b26\uff0c\u4f7f\u5f97\u5b57\u7b26\u4e32S\u4e2d\u6709\u4e0d\u5c0f\u4e8ek\u4e2a\u4e0d\u540c\u7684\u5b57\u7b26\u3002\n\n\u6c42\u6700\u5c11\u7684\u66f4\u6539\u6b21\u6570\u3002\n#### \u53d8\u6210\u4eba\u8bdd\u5c31\u662f\uff1a\n\u6c42\u51fa\u5b57\u7b26\u4e32S\u4e2d\u4e0d\u540c\u5b57\u7b26\u7684\u4e2a\u6570\uff0c\u6700\u540e\u7528k\u51cf\u3002\n#### \u76f8\u4fe1\u5404\u4f4d\u5927\u4f6c\u5df2\u5b8c\u5168\u660e\u767d,so,\u4e0d\u518d\u8d58\u8ff0\u89e3\u9898\u601d\u8def\u4e0e\u8fc7\u7a0b\u3002\n\n#### \u4e0d\u8fc7\uff0c\u8fd9\u7bc7\u9898\u89e3\u4ecb\u7ecd\u4e00\u4e2a\u4e1c\u897f\u3002\n## Map\u3002\n\u8bf4\u767d\u4e86\u662f\u4e00\u4e2a\u4e0b\u6807\u53ef\u4ee5\u4e3a\u4efb\u610f\u7c7b\u578b\u7684\u6570\u7ec4\u3002\n\u53ef\u7528\u4e8e\u6620\u5c04\u3002\n#### \u5177\u4f53\u89c1\u4ee3\u7801\uff1a\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nmap<char,bool>str;\nint k,ans=0;\nint main(){\n\tstring a;\n\tgetline(cin,a);\n\tscanf(\"%d\",&k);\n\tif(k>a.length()){\n\t    printf(\"impossible\");return 0;\n\t}\n    for(register int i=0;i<a.length();i++){\n   \t    if(!str[a[i]])ans++;\n        str[a[i]]=1;\n    }\n    if(k<ans){\n    \tprintf(\"0\");\n    \treturn 0;\n\t}\n\tprintf(\"%d\",k-ans);\n\treturn 0;\n}\n```\nAC\n\n\n\n",
        "postTime": 1552117771,
        "uid": 82213,
        "name": "defense",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF844A \u3010Diversity\u3011"
    },
    {
        "content": "\u8fd9\u662f\u7d2b\u9898  \uff1f\u00d710^666\uff0c\u597d\u7b80\u5355\n\n\u4e5f\u8bb8\u6709\u4e9b\u4eba\u6076\u610f\u8bc4\u5206\uff0c\u6211\u89c9\u5f97\u6a59\u9898\u96be\u5ea6\u5dee\u4e0d\u591a\u5566\n\n\u5f00\u6876\u4fdd\u5b58\u5404\u4e2a\u5b57\u7b26\n\n\u53ea\u6709\u4e00\u79cd\u60c5\u51b5\u4f1a\u8f93\u51faimpossible\uff0clength(st)<t\n\n\u5176\u4ed6\u60c5\u51b5\u8f93\u51fat-\u5b57\u7b26\u79cd\u6570\u5c31\u53ef\u4ee5\u5566\n\n\u8981\u6ce8\u610f\u5f53\u5b57\u7b26\u79cd\u6570>=t\u65f6\u8f93\u51fa0\n\n\u4e0b\u9762\u662f\u4ee3\u7801\uff1a\n```pascal\nvar\n  st:ansistring;\n  a:array[0..505] of boolean;\n  i,p,k:longint;\nbegin\n  readln(st);\n  readln(k);\n  if k>length(st) then\n    begin\n      writeln('impossible');\n      halt;\n    end;\n  for i:=1 to length(st) do\n    if not a[ord(st[i])] then\n    begin\n      a[ord(st[i])]:=true;\n      inc(p);\n    end;\n  if k-p>0 then\n  writeln(k-p)\n  else writeln(0);\nend.\n```\n\u65f6\u95f4559ms,\u7a7a\u95f4 532KB\uff0c\u4ee3\u7801\u957f\u5ea60.35KB\n\n\u8c22\u8c22\u5927\u5bb6\u89c2\u8d4f\n",
        "postTime": 1548248852,
        "uid": 36957,
        "name": "RainFestival",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF844A \u3010Diversity\u3011"
    },
    {
        "content": "```\n\u592a\u6c34\u4e86!!!\n#include<bits/stdc++.h>\nusing namespace std;\nlong long k,n,difnum,i;\nint a[27];\nstring s;\nint main(){\n    cin>>s>>k;\n    if(k>s.length()){\n    \tputs(\"impossible\");\n    \treturn 0;\n\t}//\u663e\u7136\u5f53s\u7684\u957f\u5ea6\u5c0f\u4e8ek\u65f6\u4e0d\u53ef\u80fd \n    for(i=0;i<s.length();i++){\n    \tif(!a[s[i]-96]) difnum++;\n    \ta[s[i]-96]=1;\n\t}//\u6c42\u4e0d\u540c\u5b57\u6bcd\u4e2a\u6570 \n\tif(k<=difnum) cout<<0;\n\telse cout<<k-difnum;\n\t//\u8f93\u51fa \n\treturn 0;\n}\n```",
        "postTime": 1543718534,
        "uid": 25051,
        "name": "\u0430\u0431\u0432\u0433",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF844A \u3010Diversity\u3011"
    },
    {
        "content": "~~\u65e2\u7136\u6ca1\u6709Pascal\u7684\u9898\u89e3\uff0c\u90a3\u672c\u849f\u84bb\u6765\u6c34\u4e00\u53d1~~\n\n\u663e\u7136\u5f53\u957f\u5ea6\u5c0f\u4e8ek\u65f6\u4e0d\u53ef\u80fd\uff0c\u5426\u5219\u53ea\u9700\u7edf\u8ba1\u51fa\u51fa\u73b0\u4e86\u591a\u5c11\u5b57\u7b26\u518d\u4e0ek\u76f8\u51cf\u5373\u53ef\n\n\u4ee3\u7801\uff1a\n```\nvar s:ansistring;\n    a:array ['a'..'z'] of longint;\n    i,k,ans:longint;\nbegin\n  readln(s);\n  read(k);\n  if length(s)<k then writeln('impossible')//\u7279\u5224\n  else begin\n    for i:=1 to length(s) do if a[s[i]]=0 then a[s[i]]:=1 else inc(ans);//\u7edf\u8ba1\u51fa\u73b0\u5b57\u6bcd\u4e2a\u6570\n    ans:=length(s)-ans;\n    if ans>=k then writeln('0') else writeln(k-ans);//\u5224\u65ad\n  end;\nend.\n```",
        "postTime": 1543395295,
        "uid": 71491,
        "name": "shenmadongdong",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF844A \u3010Diversity\u3011"
    },
    {
        "content": "### \u5176\u5b9e\u8fd9\u9053\u9898\u5c31\u662f\u8003\u5224\u65ad\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nchar a[1010];\nint m[1010]={0};//\u6e050\u5f88\u91cd\u8981\uff0c\u867d\u7136\u597d\u50cf\u4e0d\u7528\nint main()\n{\n\tint x,f=0;\n\tint n;\n\tgets(a);//\u76f4\u63a5\u8bfb\u5165\u4e00\u884c\u5f53\u7136\u7528scanf(\"%s\",a);\u4e5f\u53ef\u4ee5\n\tscanf(\"%d\",&n);\n\tint l=strlen(a);\n\tif(n>l)//\u5982\u679cn>l\u5c31\u80af\u5b9a\u4e0d\u884c\n\t{\n\t\tprintf(\"impossible\");\n\t\treturn 0;\n\t}\n\tfor (int i=0;i<l;i++)\n\t{\n\t\tx=a[i]-'a'+1;\n\t\tm[x]=1;\n\t}\n\tfor (int i=0;i<=1000;i++)//\u867d\u7136\u4e0d\u75281000\u53ea\u8981200\u5c31\u591f\u4e86\u4f46\u62c5\u5fc3\u6709\u522b\u7684\u5b57\u7b26\n\t{\n\t\tif(m[i]!=0)\n\t\t{\n\t\t\tf++;\n\t\t} \n\t}\n\tint w=n-f;\n\tif(w>=0)\n\t\tprintf(\"%d\",n-f);\n\tif(w<0)\n\t\tprintf(\"0\");\n}\n```",
        "postTime": 1533774493,
        "uid": 82597,
        "name": "lhjy666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF844A \u3010Diversity\u3011"
    }
]