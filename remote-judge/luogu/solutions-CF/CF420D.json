[
    {
        "content": "\u6bd4\u8f83\u76f4\u63a5\u7684\u5e73\u8861\u6811\u677f\u5b50\u9898\uff0c\u4f46\u662f\u56e0\u4e3a\u4e00\u4e9b nt \u95ee\u9898\u8c03\u4e86\u4e00\u5929\u3002\n\n\u5148\u6309\u4f4d\u7f6e\u5efa\u4e00\u68f5\u5e73\u8861\u6811\uff0c\u7136\u540e\u4ece\u540e\u5411\u524d\u505a\u3002\u5f00\u59cb\u6bcf\u4e2a\u8282\u70b9\u7684\u503c\u90fd\u4e3a $0$\u3002\u6bcf\u6b21\u5c06\u5e73\u8861\u6811\u6309\u4f4d\u7f6e\u5206\u88c2\uff1a$1$\uff0c$2 \\sim y_i - 1$\uff0c$y_i \\sim n$\u3002\u7136\u540e\u5c06\u7b2c\u4f4d\u7f6e $1$ \u8d4b\u503c\u4e3a $x_i$\uff0c\u63a5\u5230 $y_i-1$ \u540e\u9762\u3002\n\n\u5bf9\u4e8e\u5224\u65ad\u65e0\u89e3\uff1a\n\n- \u5982\u679c\u4f4d\u7f6e $1$ \u7684\u8282\u70b9\u503c\u4e0d\u4e3a $0$ \u4e14\u4e0d\u7b49\u4e8e $x_i$\uff0c\u8f93\u51fa $-1$\u3002  \n- \u5982\u679c\u4f4d\u7f6e $1$ \u7684\u8282\u70b9\u4e0d\u7b49\u4e8e $x_i$ \u4e14 $x_i$ \u5728\u524d\u9762\u7684\u64cd\u4f5c\u4e2d\u5df2\u7ecf\u51fa\u73b0\u8fc7\uff0c\u8f93\u51fa $-1$\u3002\n\n\u6c42\u7b54\u6848\u5c31\u662f\u5e73\u8861\u6811\u7684\u4e2d\u5e8f\u904d\u5386\u3002\u5bf9\u4e8e\u6574\u4e2a\u64cd\u4f5c\u8fc7\u7a0b\u4e2d\u90fd\u6ca1\u6709\u7528\u5230\u7684\u8282\u70b9\uff0c\u6309\u5b57\u5178\u5e8f\u6392\u5e8f\uff0c\u8d4b\u503c\u7ed9\u5728\u4e2d\u5e8f\u904d\u5386\u8fc7\u7a0b\u4e2d\u8282\u70b9\u503c\u4e3a $0$ \u7684\u8282\u70b9\u3002\n\n$\\text{Code}$\uff1a\n\n```cpp\n\n#define def(N, K, b) const K N = b;\n#define rep(i, b, s) for(int i = (b); i <= (s); ++i)\n#define per(i, b, s) for(int i = (b); i >= (s); --i)\n\n#define ls(x) t[x].ch[0]\n#define rs(x) t[x].ch[1]\n\ndef(N, int, 1e6 + 5)\n\nstruct Treap {\n\tint sze;\n\tint val, rnd;\n\tint ch[2];\n\t\n\tTreap(int k = 0) {\n\t\tsze = k;\n\t\trnd = rand();\n\t\tval = ch[0] = ch[1] = 0;\n\t}\n} t[N];\n\nint n, m, root, cnt;\nint x[N], y[N];\nbool vis[N];\nint ans[N];\n\nvoid pushup(int id) { t[id].sze = t[ls(id)].sze + t[rs(id)].sze + 1; }\n\nint merge(int x, int y) {\n\tif(!x || !y) return x + y;\n\tif(t[x].rnd < t[y].rnd) {\n\t\trs(x) = merge(rs(x), y);\n\t\tpushup(x);\n\t\treturn x;\n\t}\n\telse {\n\t\tls(y) = merge(x, ls(y));\n\t\tpushup(y);\n\t\treturn y;\n\t}\n}\n\nvoid split(int rt, int &x, int &y, int k) {\n\tif(!rt) return x = y = 0, void();\n\tint rk = t[ls(rt)].sze + 1;\n\tif(rk <= k) {\n\t\tx = rt;\n\t\tsplit(rs(rt), rs(x), y, k - rk);\n\t}\n\telse {\n\t\ty = rt;\n\t\tsplit(ls(rt), x, ls(y), k);\n\t}\n\tpushup(rt);\n}\n\nvoid init(int rt) {\n\tif(!rt) return ;\n\tinit(ls(rt));\n\tans[++cnt] = t[rt].val;\n\tinit(rs(rt));\n}\n\nint main() {\n\tsrand(19260817);\n\tqread(n, m);\n\trep(i, 1, m) qread(x[i], y[i]);\n\trep(i, 1, n) {\n\t\tt[i] = Treap(1);\n\t\troot = merge(root, i);\n\t}\n\tper(i, m, 1) {\n\t\tint l, mid, r;\n\t\tsplit(root, l, mid, 1);\n\t\tsplit(mid, mid, r, y[i] - 1);\n\t\t//cout << l << endl;\n\n\t\tif(t[l].val != x[i] && vis[x[i]]) {\n\t\t\tputs(\"-1\");\n\t\t\treturn 0;\n\t\t}\n\t\tif(t[l].val && t[l].val != x[i]) {\n\t\t\tputs(\"-1\");\n\t\t\treturn 0;\n\t\t}\n\t\t\n\t\tt[l].val = x[i], vis[x[i]] = true;\n\t\troot = merge(merge(mid, l), r);\n\t}\n\tinit(root);\n\tint now = 1;\n\trep(i, 1, n) {\n\t\tif(!ans[i]) {\n\t\t\twhile(vis[now]) ++now;\n\t\t\tans[i] = now;\n\t\t\tvis[now] = true;\n\t\t}\n\t}\n\trep(i, 1, n) printf(\"%d \", ans[i]);\n \treturn 0;\n}\n```\n",
        "postTime": 1621127538,
        "uid": 242543,
        "name": "BreezeEnder",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF420D Cup Trick"
    },
    {
        "content": "# CF420D Cup Trick\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF420D)\n\n---\n\n**\u9898\u76ee\u5927\u610f\uff1a**\n\n\u6709\u4e00\u4e2a\u4f60\u4e0d\u77e5\u9053\u957f\u5565\u6837\u7684\u6392\u5217\u3002\n\n\u7ed9\u4f60\u4e00\u5806\u64cd\u4f5c\uff0c\u6bcf\u4e2a\u64cd\u4f5c\u90fd\u6709\u4e00\u4e2a $x$ \u548c\u4e00\u4e2a $y$\uff0c\u8981\u4f60\u628a\u5728\u7b2c $y$ \u4e2a\u4f4d\u7f6e\u4e0a\u7684\u6570 $x$ \u6254\u5230\u6700\u524d\u9762\u53bb\u3002\n\n\u8981\u4f60\u6c42\u53ef\u80fd\u7684\u539f\u6392\u5217\u4e2d\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u90a3\u4e2a\u3002\n\n---\n\n**fhq \u505a\u6cd5\uff1a**\n\n\u6211\u4eec\u53d1\u73b0\u6b63\u7740\u505a\u6709\u4e9b\u96be\u5ea6\uff0c\u6240\u4ee5\u8003\u8651\u5012\u7740\u6765\u505a\u64cd\u4f5c\u3002\n\n\u7528\u4e00\u4e2a\u6587\u827a fhq \u6765\u7ef4\u62a4\u8fd9\u4e2a\u6392\u5217\u3002\n\n\u6211\u4eec\u4e0d\u77e5\u9053\u6700\u540e\u7684\u6392\u5217\u957f\u4ec0\u4e48\u6837\uff0c\u6240\u4ee5\u6211\u4eec\u5728 fhq \u91cc\u63d2\u5165 $n$ \u4e2a $0$ \u8868\u793a\u672a\u77e5\u6570\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u64cd\u4f5c $x, y$\uff0c\u628a fhq \u5206\u88c2\u6210 $1-1$\uff0c$2-y$\uff0c$y+1-n$ \u8fd9\u4e09\u4e2a\u90e8\u5206\uff0c\u5c06\u5b83\u4eec\u79f0\u4e3a $l$\u3001$m$\u3001$r$\uff0c\u524d\u4e24\u90e8\u5206\u9006\u5e8f\u5408\u5e76\u5373\u53ef\u3002\n\n\u624b\u73a9\u4e00\u7ec4\u6570\u636e\uff1a\n\n```\n4 3\n3 4\n2 2\n4 3\n```\n\n```\n0 0 0 0  // fhq \u521d\u59cb\u5316\u4e3a 0\n```\n\n\u5c06 3 \u4f4d\u7f6e\u4e0a\u7684 4\uff0c\u653e\u5230 1 \u53f7\u4f4d\u7f6e\uff0c\u5012\u7740\u6765\u505a\uff0c\u4e5f\u5c31\u662f\u5c06 4 \u63d2\u5165\u5230 3 \u53f7\u4f4d\u7f6e\u540e\n\n```\n0 0 4 0 \n```\n\n\u5c06 2 \u4f4d\u7f6e\u4e0a\u7684 2 \u653e\u5230 1 \u53f7\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u662f\u5c06 2 \u63d2\u5165\u5230 2 \u53f7\u4f4d\u7f6e\u540e\n\n```\n0 2 4 0\n```\n\n\u5c06 4 \u4f4d\u7f6e\u4e0a\u7684 3 \u653e\u5230 1 \u53f7\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u662f\u5c06 3 \u63d2\u5165\u5230 4 \u53f7\u4f4d\u7f6e\u540e\n\n```\n2 4 0 3\n```\n\n\u7b54\u6848\u5c31\u662f `2 4 1 3`\u3002\n\n\u6ce8\u610f\u4e00\u4e0b\uff0c\u4ee5\u4e0b\u60c5\u51b5\u65e0\u89e3\uff1a\n\n- \u5982\u679c $l$ \u503c\u4e0d\u4e3a $0$ \u4e14\u4e0d\u7b49\u4e8e $x$\uff0c\u5219\u65e0\u89e3\u3002\n- \u5982\u679c $l$ \u4e0d\u7b49\u4e8e $x_i$\uff0c\u4e14 $x_i$ \u5728\u4e4b\u524d\u5904\u7406\u7684\u64cd\u4f5c\u4e2d\u5df2\u7ecf\u51fa\u73b0\u8fc7\uff0c\u5219\u65e0\u89e3\u3002\n\n\u6700\u540e\u53ea\u9700\u8981\u6309\u987a\u5e8f\u8f93\u51fa\u5373\u53ef\uff0c\u5bf9\u4e8e\u5269\u4e0b\u7684\u672a\u77e5\u6570\uff0c\u5c31\u5728\u6ca1\u51fa\u73b0\u8fc7\u7684\u6570\u4e2d\u6309\u987a\u5e8f\u7ed9\u4ed6\u6392\u4e0a\u5c31\u884c\u4e86\u3002\n\n\u653e\u4e0a~~\u7b80\u6d01\u660e\u4e86~~\u7684\u4ee3\u7801\uff08\u9644\u8d60\u7cbe\u7f8e\u6ce8\u91ca\uff09\n\n```cpp\n#include <bits/stdc++.h>\n#define fi first\n#define se second\n#define il inline\n#define ls(u) fhq[u].l\n#define rs(u) fhq[u].r\n#define INF 0x3f3f3f3f\nusing namespace std;\ntypedef long long ll;\n/*\u6b64\u5904\u7701\u7565 35 \u884c\u5feb\u8bfb*/\nconst int N = 1e6 + 10;\n/*\u4ee5\u4e0b\u4e3a fhq \u6a21\u677f*/\nmt19937 rnd(114514);\nstruct Node\n{\n    int l, r;\n    int val, key;\n    int siz;\n} fhq[N];\nint ncnt, root;\nil int newnode(int val)\n{\n    fhq[++ncnt].val = val;\n    fhq[ncnt].key = rnd();\n    fhq[ncnt].siz = 1;\n    return ncnt;\n}\nil void pushup(int u) { fhq[u].siz = fhq[ls(u)].siz + fhq[rs(u)].siz + 1; }\nint merge(int x, int y)\n{\n    if (!x || !y)\n        return x | y;\n    if (fhq[x].key < fhq[y].key)\n    {\n        fhq[x].r = merge(fhq[x].r, y);\n        pushup(x);\n        return x;\n    }\n    else\n    {\n        fhq[y].l = merge(x, fhq[y].l);\n        pushup(y);\n        return y;\n    }\n}\nvoid split(int u, int &x, int &y, int k)\n{\n    if (!u)\n    {\n        x = y = 0;\n        return;\n    }\n    int lk = fhq[ls(u)].siz + 1;\n    if (lk <= k)\n        x = u, split(rs(u), rs(x), y, k - lk);\n    else\n        y = u, split(ls(u), x, ls(y), k);\n    pushup(u);\n}\n/*\u4ee5\u4e0a\u4e3a fhq \u6a21\u677f*/\nbool vis[N];\nint n, m, acnt = 1;\npair<int, int> q[N];\nvoid print(int u) // \u8f93\u51fa\n{\n    if (!u)\n        return;\n    print(ls(u));\n    if (fhq[u].val) write(fhq[u].val), putchar(' ');\n    else\n    {\n        while (vis[acnt]) acnt++;\n        write(acnt), putchar(' ');\n        vis[acnt] = 1;\n    }\n    print(rs(u));\n}\nsigned main()\n{\n    read(n, m);\n    for (int i = 1; i <= m; i++)\n        read(q[i].fi, q[i].se);\n    for (int i = 1; i <= n; i++) // \u628a n \u4e2a 0 \u63d2\u5230 fhq \u91cc\n        root = merge(root, newnode(0));\n    for (int i = m, x, y, z; i >= 1; i--) // \u9006\u5e8f\u5904\u7406\n    { // \u6b64\u5904\u7684 x,y,z \u5c31\u662f\u9898\u89e3\u91cc\u7684 l,m,r\n        split(root, x, y, 1), split(y, y, z, q[i].se - 1); // \u5206\u88c2\n        if (fhq[x].val != q[i].fi && (fhq[x].val || vis[q[i].fi]))\n        { // \u5224\u65ad\u65e0\u89e3\n            puts(\"-1\");\n            return 0;\n        }\n        fhq[x].val = q[i].fi;\n        vis[q[i].fi] = 1;\n        root = merge(merge(y, x), z);\n    }\n    print(root); // \u5b8c\u7f8e\u7684\u8f93\u51fa\n    return 0; // \u4f18\u96c5\u7684\u7ed3\u675f\u7a0b\u5e8f\n}\n```\n\n\u770b\u5230\u8fd9\u91cc\uff0c\u5148\u522b\u8d70\uff0c\u5176\u5b9e\u6211\u4eec\u53ef\u4ee5\u6b63\u7740\u505a\u3002\n\n---\n\n**\u6811\u72b6\u6570\u7ec4\u505a\u6cd5**\n\n\u4e0a\u9762\u90a3\u4e2a\u505a\u6cd5\u7528 fhq \u6765\u7ef4\u62a4\u7684\u539f\u56e0\u662f\u6570\u7ec4\u63d2\u5165\u64cd\u4f5c\u5341\u5206\u96be\u641e\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8fd9\u4e2a\u505a\u6cd5\u76f4\u63a5\u5c06\u6570\u7ec4\u5f00\u6210\u4e24\u500d\u5927\u3002\n\n\u7531\u4e8e\u4e00\u5f00\u59cb\u540e\u9762\u662f\u6709\u6570\u7684\uff0c\u6240\u4ee5\u540e\u534a\u90e8\u5206\u4e00\u5f00\u59cb\u5168\u662f\u4e00\u3002\n\n\u63d2\u5230\u524d\u9762\u5c31\u76f8\u5f53\u4e8e\u5f53\u524d\u4f4d\u7f6e\u51cf\u4e00\uff0c\u518d\u5728\u524d\u9762\u90a3\u4e00\u534a\u52a0\u4e0a\u52a0\u4e00\u3002\n\n\u8fd9\u4e2a\u6570\u7ec4\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4e00\u4e0b\u3002\n\n\u60f3\u627e\u5230\u67d0\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u6570\uff0c\u53ea\u9700\u4e8c\u5206\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u53e6\u4e00\u4e2a\u6570\u7ec4\uff0c\u4e0e\u8fd9\u4e2a\u6570\u7ec4\u540c\u6b65\u64cd\u4f5c\uff0c\u53ea\u4e0d\u8fc7\u4ed6\u5b58\u7684\u662f\u6bcf\u4e2a\u70b9\u7684\u503c\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u4e00\u6b21\u64cd\u4f5c\u4e2d\u5c06\u4e00\u4e2a\u6570\u4ece\u540e\u4e00\u534a\u63d2\u8fdb\u4e86\u524d\u4e00\u534a\uff0c\u90a3\u6240\u6709\u64cd\u4f5c\u524d\u4ed6\u5c31\u662f\u8fd9\u4e2a\u4f4d\u7f6e\u3002\n\n\u4ece\u5934\u5230\u5c3e\u505a\u5b8c\u6240\u6709\u64cd\u4f5c\u540e\uff0c\u5bf9\u4e8e\u5269\u4e0b\u7684\u672a\u77e5\u6570\uff0c\u5c31\u5728\u6ca1\u51fa\u73b0\u8fc7\u7684\u6570\u4e2d\u6309\u987a\u5e8f\u7ed9\u4ed6\u6392\u4e0a\u5c31\u884c\u4e86\u3002\n\n\u653e\u4e0a\u771f\u6b63\u7b80\u6d01\u660e\u4e86\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define il inline\n#define lb(x) (x & -x)\n#define INF 0x3f3f3f3f\nusing namespace std;\ntypedef long long ll;\n/*\u6b64\u5904\u7701\u7565 35 \u884c\u5feb\u8bfb*/\nconst int N = 1e6 + 10;\nconst int M = 1e6 + 5;\nint n, m;\nint a[N << 1], ans[N], c[N << 1];\nbool vis[N];\nil void add(int x, int val)\n{\n    for (; x <= M << 1; x += lb(x))\n        c[x] += val;\n}\nil int query(int x)\n{\n    int res = 0;\n    for (; x; x -= lb(x))\n        res += c[x];\n    return res;\n}\nsigned main()\n{\n    for (int i = 1; i <= M; i++)\n        add(i + M, 1);\n    read(n, m);\n    for (int i = 1, p = M, x, y; i <= m; i++)\n    {\n        read(x, y);\n        int l = 1, r = M << 1, pos = -1;\n        while (l <= r)\n        {\n            int mid = l + r >> 1;\n            if (query(mid) < y)\n                pos = l = mid + 1;\n            else\n                r = mid - 1;\n        }\n        if (pos > M)\n        {\n            if (vis[x])\n            {\n                puts(\"-1\");\n                return 0;\n            }\n            vis[x] = 1;\n            ans[pos - M] = x;\n        }\n        else\n        {\n            if (a[pos] != x)\n            {\n                puts(\"-1\");\n                return 0;\n            }\n        }\n        a[p] = x;\n        add(pos, -1), add(p--, 1);\n    }\n    for (int i = 1, j = 1; i <= n; i++)\n    {\n        if (!ans[i])\n        {\n            while (vis[j])\n                j++;\n            ans[i] = j;\n            vis[j] = 1;\n        }\n        write(ans[i]), putchar(' ');\n    }\n    return 0;\n}\n```",
        "postTime": 1660298102,
        "uid": 345042,
        "name": "golden_brick",
        "ccfLevel": 5,
        "title": "CF420D Cup Trick"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://codeforces.com/contest/420/problem/D)\n\nCSP \u524d\u4e00\u665a\u5199\u7684\u9898...\n\n#### \u5206\u6790\uff1a\n\n**\u4e0d\u7528\u5e73\u8861\u6811\u4e5f\u80fd\u505a\u3002**\n\n### Part1\uff1a\n\n\u5148\u8003\u8651\u7ed9\u5b9a\u4e86\u521d\u59cb\u6392\u5217\uff0c\u548c\u82e5\u5e72\u6b21\u64cd\u4f5c\uff0c\u5224\u65ad\u80fd\u5426\u6210\u529f\u6267\u884c\u3002\n\n\u5f53\u7136\u662f\u5e73\u8861\u6811\u677f\u9898\uff0c\u4e0d\u4f1a\u600e\u4e48\u529e\uff0c\u53ef\u4ee5\u7ebf\u6bb5\u6811\u3002\n\n\u5177\u4f53\u8bf4\u6765\uff0c\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e\u4e24\u6b21\u5bf9 $x$ \u7eb8\u676f\u7684\u64cd\u4f5c $l\\lt r$\uff08\u5b83\u4eec\u4e2d\u95f4\u4e0d\u518d\u6709\u5bf9 $x$ \u7eb8\u676f\u7684\u64cd\u4f5c\uff09\u6765\u8bf4\uff0c\u7b2c\u4e00\u6b21\u64cd\u4f5c $x$ \u4f1a\u5230 $1$\uff0c\u7136\u540e\u5b83\u7684\u79fb\u52a8\u6b65\u6570\u7b49\u4e8e\u64cd\u4f5c\u533a\u95f4 $(l,r)$ \u91cc\u88ab\u64cd\u4f5c\u8fc7\u7684\u7eb8\u676f\u4e2a\u6570\uff08\u5982\u679c\u4e00\u4e2a\u7eb8\u676f\u88ab\u64cd\u4f5c\u591a\u6b21\u53ea\u8ba1\u6570\u4e00\u6b21\uff09\u3002\n\n\u6240\u4ee5\u53d8\u6210\u4e86\u53f3\u7aef\u70b9\u9012\u589e\uff0c\u6bcf\u6b21\u67e5\u8be2\u533a\u95f4\u989c\u8272\u6570\u7684\u7ecf\u5178\u9898\u3002\n\n\u4e0d\u4f1a\u7684\u5de6\u8f6c [P4065](https://www.luogu.com.cn/problem/P4065)\uff0c\u5bf9\u6b64\u90e8\u5206\u4e0d\u518d\u8d58\u8ff0\u3002\n\n### Part2\uff1a\n\n\u4f60\u53d1\u73b0\u82e5 $x$ \u7eb8\u676f\u521d\u59cb\u4f4d\u7f6e\u4e3a $pos$\uff0c\u5176\u7b2c\u4e00\u6b21\u64cd\u4f5c\u662f\u7b2c $i$ \u6b21\uff0c\u5219\u5b83\u5728\u7b2c $i$ \u6b21\u90a3\u4e2a\u65f6\u5019\u88ab\u64cd\u4f5c\u524d\uff0c\u4f4d\u7f6e\u5e94\u8be5\u662f $pos+cnt$\uff0c\u5176\u4e2d $cnt$ \u662f\u64cd\u4f5c\u533a\u95f4 $[1,i)$ \u91cc\u88ab\u64cd\u4f5c\u8fc7\u7684\u7eb8\u676f\u4e2a\u6570\uff08\u540c\u6837\u591a\u4e2a\u53ea\u8d21\u732e\u4e00\u6b21\uff09\u3002\n\n\u8fd9\u4e2a\u4e1c\u897f\u53ea\u8981\u4f60\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u64cd\u4f5c\uff0c\u7136\u540e\u5982\u679c\u8be5\u64cd\u4f5c\u7684\u7eb8\u676f\u662f\u7b2c\u4e00\u6b21\u88ab\u64cd\u4f5c\u90a3\u4e48\u64cd\u4f5c\u5e8f\u5217\u4e0a\u540e\u7f00\u52a0\u4e00\u5c31\u884c\u4e86\uff0c\u7528 BIT\uff08\u6211\u5f00\u59cb\u7ebf\u6bb5\u6811\u88ab\u5361\u5e38\u4e86\uff0c\u56e0\u4e3a\u540e\u9762\u8fd8\u8981\u4e8c\u5206\uff09\u3002\n\n\u6211\u4eec\u8bbe\u7ef4\u62a4\u51fa\u7684\u8fd9\u4e2a\u4e1c\u897f\u4e3a $f_i$\uff0c\u90a3\u4e48\u7eb8\u676f $x$ \u7684\u521d\u59cb\u4f4d\u7f6e\u5c31\u5fc5\u987b\u662f $pos+f_{pos}=y$ \u7684 $pos$\u3002\u540c\u65f6 $pos$ \u5904\u672a\u88ab\u4e4b\u524d\u7684\u7eb8\u676f\u5360\u636e\u3002\n\n\u9996\u5148\u53d1\u73b0\u8fd9\u4e1c\u897f\u5355\u8c03\u4e0a\u5347\uff0c\u4f46\u662f\u53ef\u80fd\u4f1a\u53d6\u7b49\u53f7\uff0c\u7136\u540e\u53d1\u73b0\u5982\u679c\u53d6\u7b49\u53f7\u7684\u8bdd\uff0c\u5373\u6709\u4e00\u6bb5\u8fde\u7eed\u4f4d\u7f6e\u7684\u503c\u76f8\u7b49\uff0c\u53ea\u53ef\u80fd\u6700\u53f3\u8fb9\u90a3\u4e2a\u4f4d\u7f6e\u662f\u7a7a\u7684\uff08\u81ea\u5df1\u6a21\u62df\u4e00\u4e0b\uff0c\u8bf7\uff09\u3002\n\n\u6240\u4ee5\u76f4\u63a5\u4e8c\u5206\u51fa\u6700\u5927\u7684 $pos$ \u6ee1\u8db3 $pos+f_{pos}=y$ \u5373\u53ef\u3002\u524d\u6587\u63d0\u5230\u8fc7\uff0c\u7531\u4e8e $f$ \u662f\u52a8\u6001\u53d8\u5316\u7684\u6240\u4ee5\u4f7f\u7528 BIT \u7ef4\u62a4\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O((n+m)\\log^2 n)$\u3002\n\n~~\u8fd9tm\u624d 2200*~~\n\n```\n#include<bits/stdc++.h>\n#define rep(i,a,b) for(int i=(a);i<=(b);i++)\n#define per(i,a,b) for(int i=(a);i>=(b);i--)\n#define op(x) ((x&1)?x+1:x-1)\n#define odd(x) (x&1)\n#define even(x) (!odd(x))\n#define lc(x) (x<<1)\n#define rc(x) (lc(x)|1)\n#define lowbit(x) (x&-x)\n#define Max(a,b) (a>b?a:b)\n#define Min(a,b) (a<b?a:b)\n#define next Cry_For_theMoon\n#define il inline\n#define pb(x) push_back(x)\n#define is(x) insert(x)\n#define sit set<int>::iterator\n#define mapit map<int,int>::iterator\n#define pi pair<int,int>\n#define ppi pair<int,pi>\n#define pp pair<pi,pi>\n#define fr first\n#define se second\n#define vit vector<int>::iterator\n#define mp(x,y) make_pair(x,y)\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef unsigned int uint;\ntypedef double db;\nusing namespace std;\nconst int MAXN=1e6+10;\nint n,m,x[MAXN],y[MAXN];\nint p[MAXN],vis[MAXN];\nint ord[MAXN];\nset<int>s;\nvector<int>occ[MAXN];\nstruct BIT{\n\tll tree[MAXN];\n\tvoid update(int x,int val){\n\t\tfor(;x<=n;x+=lowbit(x))tree[x]+=val;\n\t}\n\tint q(int x){\n\t\tll ret=0;\n\t\tfor(;x;x-=lowbit(x))ret+=tree[x];\n\t\treturn ret;\n\t}\n\tint query(int S){\n\t\treturn q(n)-q(S-1);\n\t}\n}tree1;\nstruct SegmentTree{\n\tll sum[MAXN<<2],tag[MAXN<<2];\n\tvoid pushup(int x){sum[x]=sum[lc(x)]+sum[rc(x)];}\n\tvoid pushdown(int x,int l,int r){\n\t\tint mid=(l+r)>>1;\n\t\tsum[lc(x)]+=tag[x]*(mid-l+1);sum[rc(x)]+=tag[x]*(r-mid); \n\t\ttag[lc(x)]+=tag[x];tag[rc(x)]+=tag[x];tag[x]=0;\n\t}\n\tvoid update(int x,int l,int r,int ql,int qr,ll val){\n\t\tif(ql<=l && qr>=r){sum[x]+=val*(r-l+1);tag[x]+=val;return;}\n\t\tpushdown(x,l,r);int mid=(l+r)>>1;\n\t\tif(ql<=mid)update(lc(x),l,mid,ql,qr,val);\n\t\tif(qr>mid)update(rc(x),mid+1,r,ql,qr,val);\n\t\tpushup(x);\n\t}\n\tll query(int x,int l,int r,int ql,int qr){\n\t\tif(ql<=l && qr>=r)return sum[x];\n\t\tpushdown(x,l,r);int mid=(l+r)>>1;ll ret=0;\n\t\tif(ql<=mid)ret+=query(lc(x),l,mid,ql,qr);\n\t\tif(qr>mid)ret+=query(rc(x),mid+1,r,ql,qr);\n\t\tpushup(x);return ret;\n\t}\n}tree2;\nvoid solve1(){\n\trep(i,1,m){if(ord[i]!=0)continue;\n\t\tint L=1,R=n,ret=-1;\n\t\twhile(L<=R){\n\t\t\tint mid=(L+R)>>1;\n\t\t\t//\u627e\u5230\u6700\u53f3\u8fb9\u7684=y[i]\u7684\u4f4d\u7f6e\n\t\t\tll val=mid+tree1.query(mid);\n\t\t\tif(val==y[i]){\n\t\t\t\tret=mid;\n\t\t\t\tL=mid+1;\n\t\t\t}else if(val<y[i])L=mid+1;\n\t\t\telse R=mid-1;\n\t\t}\n\t\tif(ret==-1){printf(\"-1\\n\");exit(0);}\n\t\tif(p[ret]){printf(\"-1\\n\");exit(0);}\n\t\tvis[x[i]]=ret;\n\t\tp[ret]=x[i];\n\t\ttree1.update(ret,1);\n\t}\n}\nvoid add(int pos){\n\tint u=x[pos];\n\tif(ord[pos]==0){\n\t\ttree2.update(1,1,m,1,pos,1);\n\t}else{\n\t\ttree2.update(1,1,m,occ[u][ord[pos]-1]+1,pos,1);\n\t}\n}\nvoid solve2(){\n\trep(i,2,m){\n\t\tadd(i-1);if(ord[i]==0)continue;\n\t\tll ret=0,u=x[i];\n\t\tif(occ[u][ord[i]-1]+1<i){\n\t\t\tret=tree2.query(1,1,m,occ[u][ord[i]-1]+1,occ[u][ord[i]-1]+1);\n\t\t} \n\t\tif(1+ret!=y[i]){\n\t\t\tprintf(\"-1\\n\");exit(0);\n\t\t}\n\t}\n}\nil void Read(int& num){\n\tchar ch;\n\twhile((ch=getchar()) && !isdigit(ch));\n\tnum=ch-'0';\n\twhile((ch=getchar()) && isdigit(ch))num=num*10+ch-'0';\n}\nint main(){\n\tRead(n);Read(m);\n\trep(i,1,m){\n\t\tRead(x[i]);Read(y[i]);\n\t\tord[i]=occ[x[i]].size();\n\t\tocc[x[i]].pb(i);\n\t}\n\tsolve1(); //construct a permutation\n\tsolve2(); //check the permutation\n\trep(i,1,n)if(!vis[i])s.is(i); \n\trep(i,1,n)if(!p[i]){\n\t\tp[i]=*s.begin();\n\t\ts.erase(p[i]);\n\t}\n\trep(i,1,n)printf(\"%d \",p[i]);\n\treturn 0;\n}\n```",
        "postTime": 1635259512,
        "uid": 340632,
        "name": "Cry_For_theMoon",
        "ccfLevel": 8,
        "title": "\u3010CF420D\u3011Cup Trick"
    }
]