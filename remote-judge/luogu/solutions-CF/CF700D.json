[
    {
        "content": "\u5b89\u5229\u4e2a\u4eba blog\uff1ahttps://www.cnblogs.com/ET2006/\n\n[Codeforces \u9898\u76ee\u4f20\u9001\u95e8](https://codeforces.com/contest/700/problem/D) & [\u6d1b\u8c37\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF700D)\n\n~~\u597d\u5bb6\u4f19\uff0c\u521a\u62ff\u5230\u6b64\u9898\u65f6\u6211\u8fde\u5565\u662f huffman \u7f16\u7801\u90fd\u4e0d\u77e5\u9053~~\n\n\u4e00\u79cd\u5bf9 $k$ \u4e2a\u5b57\u7b26\u8fdb\u884c\u7684 huffman \u7f16\u7801\u7684\u65b9\u6848\u53ef\u4ee5\u770b\u4f5c\u4e00\u4e2a\u7531 $k$ \u4e2a\u53f6\u8282\u70b9\u7ec4\u6210\u7684\u4e8c\u53c9\u6811\uff0c\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u8d70\u5230\u5de6\u513f\u5b50\u76f8\u5f53\u4e8e\u5728\u5b57\u7b26\u4e32\u540e\u9762\u6dfb\u4e00\u4e2a $0$\uff0c\u8d70\u5230\u53f3\u513f\u5b50\u76f8\u5f53\u4e8e\u5728\u5b57\u7b26\u4e32\u540e\u9762\u6dfb\u4e00\u4e2a $1$\uff0c\u90a3\u4e48\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u5c31\u5bf9\u5e94\u7740\u4e00\u4e2a\u5b57\u7b26\u7684\u7f16\u7801\u3002\n\nhuffman \u7f16\u7801\u7684\u4e00\u4e2a\u5f88\u7ecf\u5178\u7684\u95ee\u9898\u662f\uff0c\u6211\u4eec\u73b0\u5728\u5bf9\u6bcf\u4e2a\u5b57\u7b26\u5b9a\u4e49\u4e86\u4e00\u4e2a\u9891\u7387 $f_i$\uff0c\u6211\u4eec\u9700\u6784\u9020\u51fa\u4e00\u68f5\u6709 $k$ \u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u4e8c\u53c9\u6811\u5e76\u5c06\u6bcf\u4e2a\u5b57\u7b26\u4e0e\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u5bf9\u5e94\uff0c\u5047\u8bbe\u7b2c $i$ \u79cd\u5b57\u7b26\u5bf9\u5e94\u7684\u53f6\u5b50\u8282\u70b9\u7684\u6df1\u5ea6\u4e3a $d_i$\uff0c\u73b0\u5728\u6211\u4eec\u9700\u6700\u5c0f\u5316 $\\sum\\limits_{i=1}^kf_id_i$\u3002\n\n\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u7528\u8d2a\u5fc3+\u5806\u6765\u89e3\u51b3\uff0c\u6211\u4eec\u8003\u8651\u521d\u59cb $k$ \u4e2a\u70b9\u90fd\u5355\u72ec\u6210\u4e00\u68f5\u68ee\u6797\uff0c\u6bcf\u6b21\u8981\u5408\u5e76\u4e24\u4e2a\u8282\u70b9\uff0c\u4e5f\u5c31\u662f\u65b0\u5efa\u4e00\u4e2a\u8282\u70b9\uff0c\u5de6\u53f3\u513f\u5b50\u5206\u522b\u662f\u5f85\u5408\u5e76\u7684\u4e24\u4e2a\u8282\u70b9\uff0c\u65b0\u8282\u70b9\u7684\u6743\u503c\u4e3a\u4e24\u4e2a\u8282\u70b9\u7684\u6743\u503c\u548c\u3002\u7531\u4e8e\u4e24\u4e2a\u8282\u70b9\u8fdb\u884c\u4e86\u4e00\u6b21\u5408\u5e76\uff0c\u5b83\u4eec\u7684\u6df1\u5ea6\u90fd\u589e\u52a0\u4e86 $1$\uff0c\u6545\u7b54\u6848\u589e\u52a0\u4e86\u4e24\u4e2a\u8282\u70b9\u7684\u70b9\u6743\u4e4b\u548c\u3002\u5982\u6b64\u64cd\u4f5c\u4e0b\u53bb\uff0c\u5408\u5e76 $k-1$ \u6b21\u4e4b\u540e\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u68f5\u4e8c\u53c9\u6811\u3002\u663e\u7136\u6839\u636e\u8d2a\u5fc3\u7684\u601d\u60f3\uff0c\u6bcf\u6b21\u5408\u5e76\u7684\u4e24\u4e2a\u8282\u70b9\u5e94\u5f53\u4e3a\u6240\u6709\u70b9\u70b9\u6743\u503c\u6700\u5c0f\u7684\u4e24\u4e2a\u8282\u70b9\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u7528\u5806\u4f18\u5316\uff0c\u590d\u6742\u5ea6 $k\\log k$\u3002\n\n\u4ee3\u7801\u5927\u6982\u957f\u8fd9\u6837\uff1a\n\n```cpp\nwhile(q.size()>1){\n\tint x=q.top();q.pop();\n    x+=q.top();q.pop();\n\tret+=x;q.push(x);\n}\n```\n\n---\n\n\u56de\u5230\u672c\u9898\u6765\uff0c\u663e\u7136\u6c42\u51fa\u533a\u95f4\u5185\u6bcf\u4e2a\u6570\u7684\u51fa\u73b0\u6b21\u6570\u662f\u5fc5\u987b\u6c42\u51fa\u7684\uff0c\u8fd9\u53ef\u4ee5\u7528\u83ab\u961f\u7ef4\u62a4\uff0c\u590d\u6742\u5ea6 $m\\sqrt{n}$\u3002\u5047\u8bbe $cnt_i$ \u4e3a $i$ \u51fa\u73b0\u7684\u6b21\u6570\u3002\u672c\u9898\u7684\u96be\u70b9\u5c31\u5728\u4e8e\u77e5\u9053\u6bcf\u4e2a\u6570\u7684\u51fa\u73b0\u6b21\u6570\u4e4b\u540e\u600e\u6837\u8ba1\u7b97\u7b54\u6848\uff0c\u663e\u7136\u6bcf\u6b21\u8be2\u95ee\u90fd\u91cd\u590d\u4e00\u904d\u4e0a\u9762\u7684\u64cd\u4f5c\u590d\u6742\u5ea6\u6700\u574f\u53ef\u8fbe $qn\\log n$\uff0c\u4f1a\u70b8\u3002\u4e0d\u8fc7 $cnt$ \u6570\u7ec4\u6709\u4e00\u4e2a\u5f88\u597d\u7684\u6027\u8d28\uff0c\u90a3\u5c31\u662f $\\sum cnt_i=r-l+1$\uff0c\u4e5f\u5c31\u662f\u8bf4\u6240\u6709 $cnt_i$ \u7684\u603b\u548c\u4e0d\u4f1a\u592a\u5927\uff0c\u8fd9\u542f\u53d1\u6211\u4eec\u7528\u6839\u53f7\u5206\u6cbb\u7684\u601d\u60f3\uff0c\u6211\u4eec\u8bbe\u4e00\u4e2a\u9608\u503c $B$\uff0c\u7136\u540e\u8003\u8651\u8fd9\u6837\u4e24\u4e2a\u66b4\u529b\uff1a\n\n- \u5bf9\u4e8e $cnt_i>B$ \u7684\u6570\uff0c\u8fd9\u6837\u7684\u6570\u81f3\u591a\u53ea\u6709 $\\dfrac{n}{B}$ \u4e2a\uff0c\u5bf9\u4e8e\u8fd9\u6837\u7684\u6570\u6211\u4eec\u66b4\u529b\u8dd1\u4e00\u904d\u4e0a\u9762\u7684\u8fc7\u7a0b\u5373\u53ef\u3002\n- \u5bf9\u4e8e $cnt_i\\leq B$ \u7684\u6570\uff0c\u8fd9\u6837\u7684\u6570\u53ef\u80fd\u5f88\u591a\uff0c\u4e0d\u8fc7\u8fd9\u4e9b\u6570\u7684\u51fa\u73b0\u6b21\u6570\u53ea\u6709 $\\mathcal O(B)$ \u7ea7\u522b\uff0c\u6545\u6211\u4eec\u8f6c\u800c\u679a\u4e3e\u51fa\u73b0\u6b21\u6570 $c$\uff0c\u6211\u4eec\u5efa\u7acb\u4e00\u4e2a\u6876 $b_c$ \u8868\u793a\u51fa\u73b0\u6b21\u6570\u4e3a $c$ \u7684\u6570\u6709\u591a\u5c11\u4e2a\uff08$b$ \u6570\u7ec4\u53ef\u4ee5\u5728\u83ab\u961f push/pop \u7684\u8fc7\u7a0b\u4e2d $\\mathcal O(1)$ \u6c42\u51fa\uff09\u3002\u5047\u8bbe\u6211\u4eec\u73b0\u5728\u679a\u4e3e\u5230\u51fa\u73b0\u6b21\u6570\u4e3a $c$ \u7684\u6570\uff0c\u6211\u4eec\u5c06\u8fd9 $b_c$ \u4e2a\u6570\u4e24\u4e24\u914d\u5bf9\u5e76\u5408\u5e76\u6210 $2c$\uff0c\u663e\u7136\u4f1a\u5408\u5e76\u51fa $\\lfloor\\dfrac{b_c}{2}\\rfloor$ \u4e2a $2c$\uff0c\u5bf9\u7b54\u6848\u4ea7\u751f $\\lfloor\\dfrac{b_c}{2}\\rfloor\u00b72c$ \u7684\u8d21\u732e\u3002\u7531\u4e8e\u7ecf\u8fc7\u6211\u4eec\u8fd9\u4e48\u4e00\u5408\u5e76\uff0c\u51fa\u73b0\u6b21\u6570\u4e3a $2c$ \u7684\u6570\u591a\u4e86 $\\lfloor\\dfrac{b_c}{2}\\rfloor$\uff0c\u6545\u4ee4 $b_{2c}\\leftarrow b_{2c}+\\lfloor\\dfrac{b_c}{2}\\rfloor$\uff0c\u7279\u522b\u5730\uff0c\u5982\u679c $2c>B$\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u66b4\u529b\u628a\u8fd9 $\\lfloor\\dfrac{b_c}{2}\\rfloor$ \u4e2a $2c$ \u63d2\u5165\u4f18\u5148\u961f\u5217\uff0c\u5230\u65f6\u5019\u4e0e\u539f\u672c\u51fa\u73b0\u6b21\u6570\u5c31\u5927\u4e8e $B$ \u7684\u6570\u4e00\u8d77\u5408\u5e76\u3002\u53e6\u5916\uff0c\u5982\u679c $b_c$ \u4e3a\u5947\u6570\uff0c\u90a3\u4e48\u610f\u5473\u7740\u4f1a\u6709\u4e00\u4e2a\u843d\u5355\u7684 $c$\uff0c\u6211\u4eec\u5b9e\u65f6\u7ef4\u62a4\u4e00\u4e2a\u53d8\u91cf $pre$ \u8bb0\u5f55\u843d\u5355\u7684\u503c\u662f\u4ec0\u4e48\uff0c\u6211\u4eec\u626b\u63cf\u5230 $c$ \u65f6\u5982\u679c\u53d1\u73b0\u4e34\u65f6\u53d8\u91cf\u4e0d\u4e3a $0$ \u5c31\u9996\u5148\u62ce\u51fa\u4e00\u4e2a $c$ \u51fa\u6765\u4e0e $pre$ \u5408\u5e76\u6210 $pre+c$\uff0c\u5373\u5982\u679c $pre+c\\leq B$ \u5c31\u4ee4 $b_{pre+c}\\leftarrow b_{pre+c}+1$\uff0c\u5426\u5219\u5c06 $pre+c$ \u538b\u5165\u4f18\u5148\u961f\u5217\u3002\u7ec6\u8282\u6709\u4ebf\u70b9\u591a\uff0c\u5177\u4f53\u89c1\u4ee3\u7801\u7f62\u3002\n\n\u7b97\u4e0b\u590d\u6742\u5ea6\uff0c\u5bf9\u4e8e $cnt_i>B$ \u7684\u6570\uff0c\u590d\u6742\u5ea6\u663e\u7136\u662f $\\dfrac{n}{B}\\log\\dfrac{n}{B}$ \u7684\uff0c\u6beb\u65e0\u7591\u95ee\u3002\u5bf9\u4e8e $cnt_i\\leq B$ \u7684\u6570\u626b\u63cf\u4e00\u904d\u4e5f\u662f $\\mathcal O(B)$ \u7684\u3002\u91cd\u70b9\u5728\u4e8e\u6bcf\u6b21\u628a\u8fd9 $\\lfloor\\dfrac{b_c}{2}\\rfloor$ \u4e2a $2c$ \u63d2\u5165\u4f18\u5148\u961f\u5217\uff0c\u6700\u591a\u4f1a\u63d2\u591a\u5c11\u6b21\u3002\u4e0d\u96be\u53d1\u73b0\u6211\u4eec\u6bcf\u6b21\u5408\u5e76\u524d\u540e\uff0c$\\sum c\u00b7b_c$ \u59cb\u7ec8\u662f\u5b9a\u503c\uff0c\u4e3a $r-l+1$\uff0c\u4e5f\u5c31\u662f\u8bf4\u5f53\u6211\u4eec\u5408\u5e76\u5b8c\u51fa\u73b0\u6b21\u6570 $\\leq B$ \u7684\u6570\u540e\u4f9d\u65e7\u6709 $\\sum c\u00b7b_c=r-l+1$\uff0c\u6545\u63d2\u5165\u4f18\u5148\u961f\u5217\u7684\u6570\u8fd8\u662f $\\dfrac{n}{B}$ \u7ea7\u522b\u7684\uff0c\u590d\u6742\u5ea6\u5373\u4e3a $B+\\dfrac{n}{B}\\log\\dfrac{n}{B}$\n\n\u53d6 $B=\\sqrt{n\\log n}$ \u5373\u53ef\u5b9e\u73b0 $\\sqrt{n\\log n}$ \u5b9e\u73b0\u8be2\u95ee\uff0c\u603b\u590d\u6742\u5ea6 $m\\sqrt{n}+m\\sqrt{n\\log n}=m\\sqrt{n\\log n}$\uff0c\u53ef\u901a\u8fc7\u6b64\u9898\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define fi first\n#define se second\n#define fill0(a) memset(a,0,sizeof(a))\n#define fill1(a) memset(a,-1,sizeof(a))\n#define fillbig(a) memset(a,63,sizeof(a))\n#define pb push_back\n#define ppb pop_back\n#define mp make_pair\ntemplate<typename T1,typename T2> void chkmin(T1 &x,T2 y){if(x>y) x=y;}\ntemplate<typename T1,typename T2> void chkmax(T1 &x,T2 y){if(x<y) x=y;}\ntypedef pair<int,int> pii;\ntypedef long long ll;\nnamespace fastio{\n\t#define FILE_SIZE 1<<23\n\tchar rbuf[FILE_SIZE],*p1=rbuf,*p2=rbuf,wbuf[FILE_SIZE],*p3=wbuf;\n\tinline char getc(){return p1==p2&&(p2=(p1=rbuf)+fread(rbuf,1,FILE_SIZE,stdin),p1==p2)?-1:*p1++;}\n\tinline void putc(char x){(*p3++=x);}\n\ttemplate<typename T> void read(T &x){\n\t\tx=0;char c=getchar();T neg=0;\n\t\twhile(!isdigit(c)) neg|=!(c^'-'),c=getchar();\n\t\twhile(isdigit(c)) x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\t\tif(neg) x=(~x)+1;\n\t}\n\ttemplate<typename T> void recursive_print(T x){if(!x) return;recursive_print(x/10);putc(x%10^48);}\n\ttemplate<typename T> void print(T x){if(!x) putc('0');if(x<0) putc('-'),x=~x+1;recursive_print(x);}\n\tvoid print_final(){fwrite(wbuf,1,p3-wbuf,stdout);}\n}\nconst int MAXN=1e5;\nconst int MAX_BLK=316;\nconst int MAX_BLK2=1400;\nint n,qu,a[MAXN+5],cnt[MAXN+5],cnt_cnt[MAXN+5],tmp[MAX_BLK2+5];\nint blk,blk_cnt,blk_v,L[MAX_BLK+2],R[MAX_BLK+2],bel[MAXN+5];\nvector<int> tt;ll ret[MAXN+5];\nvoid ins(int v){cnt_cnt[cnt[v]]--;cnt[v]++;cnt_cnt[cnt[v]]++;}\nvoid del(int v){cnt_cnt[cnt[v]]--;cnt[v]--;cnt_cnt[cnt[v]]++;}\nll deal(){\n\tpriority_queue<int,vector<int>,greater<int> > q;\n\tfor(int i=0;i<tt.size();i++) if(cnt[tt[i]]>blk_v) q.push(cnt[tt[i]]);\n\tfor(int i=1;i<=blk_v;i++) tmp[i]=cnt_cnt[i];int pre=0;ll ret=0;\n\tfor(int i=1;i<=blk_v;i++) if(tmp[i]){\n\t\tif(pre){\n\t\t\tret+=pre+i;tmp[i]--;\n\t\t\tif(pre+i<=blk_v) tmp[pre+i]++;\n\t\t\telse q.push(pre+i);\n\t\t\tpre=0;\n\t\t} ret+=1ll*i*(tmp[i]/2*2);\n\t\tif(i+i<=blk_v) tmp[i+i]+=tmp[i]/2;\n\t\telse for(int j=1;j<=tmp[i]/2;j++) q.push(i+i);\n\t\tif(tmp[i]&1) pre=i;\n\t}\n\tif(pre) q.push(pre);\n\twhile(q.size()>1){\n\t\tint x=q.top();q.pop();x+=q.top();q.pop();\n\t\tret+=x;q.push(x);\n\t} return ret;\n}\nstruct query{\n\tint l,r,id;\n\tbool operator <(const query &rhs){\n\t\tif(bel[l]!=bel[rhs.l]) return bel[l]<bel[rhs.l];\n\t\treturn r<rhs.r;\n\t}\n} q[MAXN+5];\nint main(){\n\tscanf(\"%d\",&n);for(int i=1;i<=n;i++) scanf(\"%d\",&a[i]),cnt[a[i]]++;\n\tblk=(int)pow(n,0.5);blk_v=(int)sqrt(n*log(n)/log(2));blk_cnt=(n-1)/blk+1;\n\tfor(int i=1;i<=MAXN;i++) if(cnt[i]>blk_v) tt.pb(i);memset(cnt,0,sizeof(cnt));\n\tfor(int i=1;i<=blk_cnt;i++){\n\t\tL[i]=(i-1)*blk+1;R[i]=min(i*blk,n);\n\t\tfor(int j=L[i];j<=R[i];j++) bel[j]=i;\n\t} scanf(\"%d\",&qu);\n\tfor(int i=1;i<=qu;i++) scanf(\"%d%d\",&q[i].l,&q[i].r),q[i].id=i;\n\tsort(q+1,q+qu+1);int cl=1,cr=0;\n\tfor(int i=1;i<=qu;i++){\n\t\twhile(cr<q[i].r) ins(a[++cr]);\n\t\twhile(cl>q[i].l) ins(a[--cl]);\n\t\twhile(cl<q[i].l) del(a[cl++]);\n\t\twhile(cr>q[i].r) del(a[cr--]);\n\t\tret[q[i].id]=deal();\n\t}\n\tfor(int i=1;i<=qu;i++) printf(\"%lld\\n\",ret[i]);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1614406804,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF700D\u3010Huffman Coding on Segment\u3011"
    },
    {
        "content": "### Description\n\n\u7ed9\u5b9a\u4e00\u6bb5\u5e8f\u5217$a$\uff0c\u6709$q$\u4e2a\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u5b9a$l$\u548c$r$\uff0c\u6c42$a_l..a_r$\u7684$Huffman$\u7f16\u7801\u957f\u5ea6\u3002\n\n### Solution\n\u5f88\u660e\u663e\u7684Huffman\n\u6838\u5fc3\u4ee3\u7801\n\n#### \u54c8\u592b\u66fc\u6838\u5fc3\u4ee3\u7801\n\n```cpp\nwhile (q.size() > 1) {\n        x = q.top();\n        q.pop();\n        x += q.top();\n        q.pop();\n        q.push(x);\n        sum += x;\n    }\n```\n\n\u4ee5\u6bcf\u4e2a\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570\u4e3a\u70b9\u6743\uff0c\u8fb9\u6743\u4e3a$1$\u5efa\u4e00\u68f5$Huffman$\u6811\uff0c$WPL$\u5c31\u662f\u8fd9\u6bb5\u5b57\u7b26\u4e32\u7684$Huffman$\u7f16\u7801\u957f\u5ea6\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u83ab\u961f\u7ef4\u62a4\u6bcf\u4e2a\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u7136\u540e\u5efa$Huffman$\u6811\uff0c\u7136\u540e\u53d1\u73b0\u8fd9\u6837\u4f1a$TLE$\uff0c\u4e8e\u662f\u53ef\u4ee5\u628a\u51fa\u73b0\u6b21\u6570\u5c0f\u4e8e\u7b49\u4e8e$sqrt(n)$\u6b21\u7684\u5904\u7406\u6389\uff0c\u5269\u4e0b\u5927\u4e8e$sqrt(n)$\u7684\u518d\u5efa$Huffman$\u6811\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 10, M = 315;\nstruct Node {\n    int l, r, id;\n} tr[N];\npriority_queue<int, vector<int>, greater<int> > q;\nvector<int> v;\nint n, m, l, r, a[N], f[N], f1[N], aa[N], ans[N];\ninline int read() {\n    char ch; bool f = false; int res = 0;\n    while (((ch = getchar()) < '0' || ch > '9') && ch != '-');\n    if (ch == '-') f = true; else res = ch - '0';\n    while ((ch = getchar()) >= '0' && ch <= '9') res = (res << 3) + (res << 1) + ch - '0';\n    return f? ~res + 1 : res;\n}\ninline bool cmp(Node a, Node b) {\n    return a.l / M == b.l / M ? a.r < b.r : a.l < b.l;\n}\ninline void Build (int x, int y) {\n    --f[f1[x]], f1[x] += y, ++f[f1[x]];\n}\ninline int solve() {\n    for (int i = 0; i < v.size(); i++)\n        if (f1[v[i]] > M)\n            q.push(f1[v[i]]);\n    for (int i = 1; i <= M; i++)\n        a[i] = f[i];\n    int ans = 0, j = 0;\n    for (int i = 1; i <= M; i++)\n        if (a[i]) {\n            if (j) {\n                if (i + j > M) q.push(i + j); else ++a[i + j];\n                --a[i], ans += i + j, j = 0;\n            }\n            if (a[i] & 1) --a[i], j = i;\n            ans += a[i] * i;\n            if ((i << 1) > M)\n                for (int p = a[i] >> 1; p; --p) q.push(i << 1);\n            else a[i << 1] += a[i] >> 1;\n        }\n    if (j)\n        q.push(j);\n    while (!q.empty()) {\n        int x = q.top(); \n        q.pop();\n        if (q.empty()) break;\n        x = x + q.top();\n        q.pop();\n        ans += x;\n        q.push(x);\n    }\n    return ans;\n}\nint main() {\n    n = read();\n    for (int i = 1; i <= n; i++)\n        ++f1[aa[i] = read()];\n    for (int i = 1; i <= N - 10; i++)\n        if (f1[i] > M) v.push_back(i);\n    for (int i = 1; i <= N - 10; i++)\n        f1[i] = 0;\n    m = read(), l = 1, r = 0;\n    for (int i = 1; i <= m; i++)\n        tr[i].l = read(), tr[i].r = read(), tr[i].id = i;\n    std::sort(tr + 1, tr + m + 1, cmp);\n    for (int i = 1; i <= m; i++) {\n        while (r < tr[i].r) Build(aa[++r], 1);\n        while (l > tr[i].l) Build(aa[--l], 1);\n        while (r > tr[i].r) Build(aa[r--], -1);\n        while (l < tr[i].l) Build(aa[l++], -1);\n        ans[tr[i].id] = solve();\n    }\n    for (int i = 1; i <= m; i++)\n        printf(\"%d\\n\", ans[i]);\n    return 0;\n}\n```\n\n[\u849f\u84bb\u535a\u5ba2](https://www.cnblogs.com/wjnclln/p/11070208.html)qwq",
        "postTime": 1564396246,
        "uid": 13746,
        "name": "Trimsteanima",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF700D \u3010Huffman Coding on Segment\u3011"
    }
]