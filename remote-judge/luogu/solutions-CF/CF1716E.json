[
    {
        "content": "\u663e\u7136\u64cd\u4f5c\u4e4b\u95f4\u7684\u987a\u5e8f\u662f\u5bf9\u7b54\u6848\u6ca1\u6709\u5f71\u54cd\u7684\uff0c\u800c\u4e24\u4e2a\u76f8\u540c\u64cd\u4f5c\u4f1a\u62b5\u6d88\uff0c\u6240\u4ee5\u53ef\u80fd\u7684\u72b6\u6001\u53ea\u6709 $2^n$ \u79cd\uff0c\u6211\u4eec\u5c1d\u8bd5\u76f4\u63a5\u9884\u5904\u7406\u51fa\u6240\u6709\u7684\u7b54\u6848\u3002\u5168\u5c40\u6700\u5927\u5b50\u6bb5\u548c\u95ee\u9898\u53ef\u4ee5\u7528\u5206\u6cbb\u505a\uff0c\u53ea\u9700\u6c42\u51fa\u6bcf\u4e2a\u533a\u95f4\u7684\u6700\u5927\u524d\u7f00\uff0c\u6700\u5927\u540e\u7f00\uff0c\u6700\u5927\u5b50\u6bb5\u548c\u4ee5\u53ca\u5143\u7d20\u548c\u3002\u4e00\u6b21\u53c2\u6570\u4e3a $i$ \u7684\u64cd\u4f5c\u76f8\u5f53\u4e8e\u628a\u5206\u6cbb\u8fc7\u7a0b\u4e2d\u7b2c\u4e00\u4e2a\u957f\u5ea6\u4e3a $2^i$ \u7684\u533a\u95f4\u4e0e\u7b2c\u4e8c\u4e2a\u957f\u5ea6\u4e3a $2^i$ \u7684\u533a\u95f4\u4ea4\u6362\uff0c\u628a\u5206\u6cbb\u8fc7\u7a0b\u4e2d\u7b2c\u4e09\u4e2a\u957f\u5ea6\u4e3a $2^i$ \u7684\u533a\u95f4\u4e0e\u7b2c\u56db\u4e2a\u957f\u5ea6\u4e3a $2^i$ \u7684\u533a\u95f4\u4ea4\u6362\u2026\u2026\u800c\u6bcf\u6b21\u4ea4\u6362\u7684\u4e24\u4e2a\u533a\u95f4\u5408\u5728\u4e00\u8d77\u6b63\u597d\u662f\u4e00\u4e2a\u5206\u6cbb\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u8fc7\u7684\u533a\u95f4\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u6ca1\u6709\u5fc5\u8981\u771f\u7684\u4ea4\u6362\u5143\u7d20\uff0c\u53ea\u9700\u8bb0\u5f55\u5f53\u524d\u72b6\u6001\u6709\u54ea\u4e9b\u957f\u5ea6\u7684\u533a\u95f4\u88ab\u4ea4\u6362\u4e86\u3002\r\n\r\n\u4e00\u4e2a\u6734\u7d20\u7684\u505a\u6cd5\u662f\u5728\u5bf9\u6bcf\u4e2a\u72b6\u6001\u76f4\u63a5\u5206\u6cbb\u6c42\u7b54\u6848\u3002\u8fd9\u65f6\u6211\u4eec\u53d1\u73b0\u6709\u4e00\u90e8\u5206\u5b50\u95ee\u9898\u662f\u91cd\u53e0\u7684\uff0c\u5982\u679c\u91cd\u590d\u8ba1\u7b97\u590d\u6742\u5ea6\u5c31\u4e0d\u4f18\u79c0\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u5c42\u5206\u6cbb\u7684\u7b54\u6848\u653e\u8fdb\u4e00\u4e2a\u7c7b\u4f3c\u7ebf\u6bb5\u6811\u7684\u7ed3\u6784\u4e2d\uff0c\u5206\u6cbb\u65f6\u5982\u679c\u6709\u91cd\u590d\u5c31\u4e0d\u7ee7\u7eed\u5411\u4e0b\u6c42\u89e3\u3002\u8fd9\u65f6\u6211\u4eec\u53ea\u9700\u627e\u5230\u4e00\u4e2a\u5408\u9002\u7684\u987a\u5e8f\u6c42\u89e3\u6bcf\u4e2a\u72b6\u6001\u3002\u6211\u4eec\u7528\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570 $i$ \u8868\u793a\u4e00\u4e2a\u72b6\u6001\uff0c\u7b2c $i$ \u4f4d\u4e3a $1$ \u8868\u793a\u8fdb\u884c\u4e86\u5947\u6570\u6b21\u53c2\u6570\u4e3a $n-i$ \u7684\u64cd\u4f5c\uff0c\u4ece $0$ \u679a\u4e3e\u5230 $2 ^n-1$\u3002\u8bbe $i$ \u7684\u6700\u4f4e\u7684\u4e3a $1$ \u7684\u4f4d\u662f $\\operatorname{lowbit}(i)$\uff08\u4ece $1$ \u5f00\u59cb\u8bb0\uff09\uff0c\u7f16\u53f7\u4e3a $i$ \u4e0e\u7f16\u53f7\u4e3a $i - 1$ \u7684\u72b6\u6001\u4e4b\u95f4\u53ea\u6709 $1$ \u5230 $\\operatorname{lowbit}(i)$ \u8fd9\u51e0\u4f4d\u4e0d\u540c\uff0c\u9700\u8981\u9012\u5f52 $\\operatorname{lowbit}(i)$ \u5c42\u5171 $2^{lowbit(i)}-1$ \u4e2a\u8282\u70b9\u3002\r\n\r\n\u5f53\u7136\uff0c\u7531\u4e8e\u6811\u7684\u7ed3\u6784\u662f\u56fa\u5b9a\u7684\uff0c\u4f60\u6ca1\u5fc5\u8981\u771f\u7684\u5206\u6cbb\uff0c\u53ef\u4ee5\u4ece\u5e95\u5411\u4e0a\u5904\u7406\u3002\r\n\r\n\u53d1\u73b0 $j$ \u4f5c\u4e3a $\\operatorname{lowbit}(i)$ \u4f1a\u51fa\u73b0 $2^{n-j}$ \u6b21\uff0c\u6bcf\u6b21\u904d\u5386 $2^j-1$ \u4e2a\u8282\u70b9\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\times2^n+q)$\u3002\r\n\r\ncode:\r\n\r\n```cpp\r\n#include <bits/stdc++.h>\r\n#define LL long long\r\n#define max(i, j) (i > j ? i : j)\r\n#define min(i, j) (i < j ? i : j)\r\n#define mes(s, x) memset(s, x, sizeof(s))\r\n#define lb(i) (i & -(i))\r\n#define mod 998244353\r\ninline LL read(){char c;c = getchar();while(!(('0' <= c && c <= '9') || c == '-')) c = getchar();bool flag = 0;if(c == '-'){flag = 1;c = getchar();}LL tot = 0;while('0' <= c && c <= '9'){tot = 10 * tot + c - '0';c = getchar();}return flag ? -tot : tot;}\r\ninline void _write(LL i){if(i == 0) return;_write(i / 10);putchar(i % 10 + '0');return;}\r\ninline void write(LL i){if(i == 0) putchar('0');else if(i < 0){putchar('-');_write(-i);}else _write(i);return;}\r\nusing namespace std;\r\nint a[262150], pw[25], cur, lg2[262150];\r\nstruct node{\r\n\tLL l, r, s, x;\r\n\tnode operator+(const node i)const{\r\n\t\treturn{\r\n\t\t\tmax(l, s + i.l),\r\n\t\t\tmax(r + i.s, i.r),\r\n\t\t\ts + i.s,\r\n\t\t\tmax(r + i.l, max(x, i.x))\r\n\t\t};\r\n\t}\r\n}b[524295];\r\nLL ans[262150];\r\nint main(){\r\n\tint n = read(), x, q;\r\n\tpw[0] = 1;\r\n\tfor(int i = 1; i <= n + 1; i++) pw[i] = 2 * pw[i - 1];\r\n\tlg2[1] = 0;\r\n\tfor(int i = 2; i < pw[n]; i++) lg2[i] = lg2[i / 2] + 1;\r\n\tfor(int i = pw[n]; i < pw[n + 1]; i++){\r\n\t\tx = read();\r\n\t\tif(x > 0) b[i] = {x, x, x, x};\r\n\t\telse b[i] = {0, 0, x, 0};\r\n\t}\r\n\tfor(int i = pw[n] - 1; i >= 1; i--) b[i] = b[2 * i] + b[2 * i + 1]; \r\n\tans[0] = b[1].x;\r\n\tfor(cur = 1; cur < (1 << n); cur++){\r\n\t\tx = log2(lb(cur));\r\n\t\tfor(int i = pw[lg2[lb(cur)] + 1] - 1; i >= 1; i--){\r\n\t\t\tif(cur & (1 << lg2[i])) b[i] = b[2 * i + 1] + b[2 * i];\r\n\t\t\telse b[i] = b[2 * i] + b[2 * i + 1];\r\n\t\t}\r\n\t\tans[cur] = b[1].x;\r\n\t}\r\n\tq = read(), cur = 0;\r\n\tfor(int i = 1; i <= q; i++){\r\n\t\tx = read();\r\n\t\tcur ^= (1 << (n - x - 1));\r\n\t\tprintf(\"%lld\\n\", ans[cur]);\r\n\t}\r\n \treturn 0;\r\n}\r\n```",
        "postTime": 1659705440,
        "uid": 488539,
        "name": "E_firework",
        "ccfLevel": 7,
        "title": "CF1716E \u9898\u89e3"
    },
    {
        "content": "# [Swap and Maximum Block](https://codeforces.com/contest/1716/problem/E)\n\n## \u89e3\u6790\uff1a\n\n### \u9898\u76ee\u5927\u610f\uff1a\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $2^n$ \u7684\u6570\u7ec4\u3002\u4f60\u9700\u8981\u56de\u7b54 $q$ \u6b21\u67e5\u8be2\u3002\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\u5c06\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570 $k(0\\leq k\\le n-1)$ \u3002\n\n\u5bf9\u4e8e\u4e00\u6b21\u8be2\u95ee\uff0c\u4f60\u9700\u8981\u64cd\u4f5c\u6bcf\u4e2a $a_i,i \\in [1,2^n-2^k]$\uff0c\u5982\u679c**\u5728\u6b64\u67e5\u8be2\u671f\u95f4**\u7b2c i \u4e2a\u5143\u7d20\u672a\u4e0e\u5176\u4ed6\u5143\u7d20\u4ea4\u6362\uff0c\u5219\u4ea4\u6362 $a_i$ \u548c $a_{i+2^k}$\uff1b\u5426\u5219\uff0c\u5219\u8df3\u8fc7\u5b83\uff1b\u5e76\u8f93\u51fa\u4ea4\u6362\u5b8c\u6210\u540e\u7684\u6570\u7ec4\u7684\u6700\u5927\u5b50\u6bb5\u548c\uff08\u5305\u62ec\u7a7a\u5b50\u6bb5\uff09\u3002\n\n\u6bcf\u6b21\u6267\u884c\u67e5\u8be2\u540e\uff0c\u6570\u7ec4\u4e0d\u4f1a\u6062\u590d\u5230\u539f\u6765\u7684\u72b6\u6001\u3002\n\n--------------------------\n\n### \u601d\u8def\uff1a\n\n\u7384\u5b66\u590d\u6742\u5ea6\u597d\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5e8f\u5217\u62bd\u8c61\u6210\u7ebf\u6bb5\u6811\u7684\u6a21\u578b\uff0c\u90a3\u4e48\u4e00\u6b21\u64cd\u4f5c\u5b9e\u9645\u4e0a\u5c31\u662f\u4ea4\u6362 $k$ \u5c42\u7684\u6240\u6709\u533a\u95f4\u7684\u5de6\u53f3\u5b50\u6811\uff0c\u5e76\u4e14\u4e0d\u540c\u7684 $k$ \u4e4b\u95f4\u4e92\u4e0d\u5f71\u54cd\u3002\u90a3\u4e48\u6211\u4eec\u8003\u8651\u5b9e\u9645\u4e0a\u6709 $2^n$ \u79cd\u4e0d\u540c\u7684\u7b54\u6848\uff0c\u5373\u5bf9\u4e8e\u6bcf\u5c42\u90fd\u6709\u4ea4\u6362\u548c\u4e0d\u6362\u4e24\u79cd\u72b6\u6001\u3002\n\n\u5982\u679c\u6211\u4eec\u76f4\u63a5\u66b4\u529b\u5904\u7406\u8fd9 $2^n$ \u79cd\u7b54\u6848\uff0c\u90a3\u4e48\u590d\u6742\u5ea6\u4e3a $\\mathcal O(2^{2n})$\uff0c\u65e0\u6cd5\u63a5\u53d7\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8003\u8651\u526a\u679d\uff0c\u6211\u4eec\u9010\u5c42\u8003\u8651\u5f53\u524d\u5c42\u4ea4\u4e0d\u4ea4\u6362\uff0c\u5047\u8bbe\u5f53\u524d\u5c42\u4e3a $k$\uff0c\u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u5904\u7406\u597d\u6bcf\u6b21\u64cd\u4f5c\u7684 $q_i \\in[0,k-1]$ \u5171 $2^{k-1}$ \u79cd\u4e0d\u540c\u60c5\u51b5\u7684\u7b54\u6848\uff08\u6b64\u65f6\u53ef\u4ee5\u56de\u7b54\u6bcf\u6b21\u64cd\u4f5c\u7684 $i$ \u90fd\u5c0f\u4e8e $k$ \u7684\u7b54\u6848\uff09\uff0c\u6211\u4eec\u8bb0\u5f55\u4e0b\u9762\u7684 $2^{k-1}$ \u6240\u5bf9\u5e94\u7684\u6bcf\u4e00\u4e2a $k-1$ \u5c42\u7684\u4fe1\u606f\uff08\u5373\u6700\u5927\u5b50\u6bb5\u548c\uff0c\u4e0d\u4f1a\u7684\u79fb\u6b65[\u5c0f\u767d\u901b\u516c\u56ed](https://www.luogu.com.cn/problem/P4513)\uff09\u3002\u5bf9\u4e8e\u6bcf\u79cd\u60c5\u51b5\u5728 $k$ \u8fd9\u4e00\u5c42\u90fd\u53ef\u4ee5\u6362/\u4e0d\u6362\uff0c\u90a3\u4e48\u5c31\u6269\u5c55\u5230\u4e86 $2\\times 2^{k-1}=2^k$\u79cd\u60c5\u51b5\uff0c\u6bcf\u79cd\u90fd\u66b4\u529b\u5f80\u4e0a\u5408\u5e76\u51fa $[k+1,n]$ \u5c42\u90fd\u4e0d\u6362\u7684\u6700\u5927\u5b50\u6bb5\u548c\u3002\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u79cd\u4fe1\u606f\u9700\u8981\u5f80\u4e0a\u5408\u5e76 $2^{n-k}$ \u6b21\uff0c\u5e76\u4e14\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4 $n$ \u5c42\u7684\u7b54\u6848\u3002\n\n\u526a\u679d\u540e\u7684\u590d\u6742\u5ea6\u7384\u5b66\u7684\u964d\u5230\u4e86 $\\mathcal O(n\\times 2^k\\times 2^{n-k})=\\mathcal O(n\\times 2^n)$\u3002\n\n\u7ef4\u62a4\u8fd9\u4e2a\u4e1c\u897f\u76f4\u63a5\u5206\u6cbb\u5373\u53ef\u3002\n\n----------------------------------------------------\n\n## code\uff1a\n\n```c++\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int N = (1 << 18) + 10;\nconst int INF = 0x3f3f3f3f;\ntypedef pair <int, int> pii;\ninline int read ()\n{\n    int x = 0, f = 1;\n    char ch = getchar ();\n    while (ch < '0' || ch > '9') { if (ch == '-') f = -1; ch = getchar (); }\n    while (ch >= '0' && ch <= '9') { x = (x << 1) + (x << 3) + (ch ^ 48); ch = getchar (); }\n    return x * f;\n}\nint n, q;\nint a[N];\nstruct node {\n    int lx, rx, mx, sum;\n} s[N << 1], s2[N << 1];\nint id[N], ans[N];\ninline void merge (node &res, node x, node y)\n{\n    res.mx = max (max (x.mx, y.mx), max (0ll, x.rx + y.lx));\n    res.lx = max (x.lx, x.sum + y.lx);\n    res.rx = max (y.rx, y.sum + x.rx);\n    res.sum = x.sum + y.sum;\n}\nnode divide (int l, int r, int len, int st)\n{\n    if (r - l + 1 == len) return s[st + (r / len)];\n    int mid = (l + r) >> 1;\n    node x = divide (l, mid, len, st);\n    node y = divide (mid + 1, r, len, st);\n    node res;\n    merge (res, x, y);\n    return res;\n}\nsigned main()\n{\n    n = read (); n = (1 << n);\n    for (int i = 1; i <= n; i++) a[i] = read ();\n    for (int i = 1; i <= n; i++) s[i] = s[n + i] = (node) { a[i], a[i], a[i], a[i]};\n    for (int i = n + 1; i <= 2 * n; i += 2) swap (s[i], s[i + 1]);\n    ans[0] = divide (1, n, 1, 0).mx;\n    ans[1] = divide (1, n, 1, n).mx;\n    int li = 2; id[1] = 0, id[2] = 1;\n    for (int i = 2, j = 2; j + i <= n; j += i, i <<= 1)\n    {\n        queue <int> que;\n        for (int k = 1; k <= li; k++) que.push (id[k]); li = 0;\n        while (!que.empty ()) { int x = que.front (); que.pop (); id[++li] = x, id[++li] = x ^ i; }\n        int len = n / i;\n        for (int k = 1; k <= n; k++) merge (s2[k], s[2 * k - 1], s[2 * k]);\n        int it1 = 0, it2 = 0;\n        for (int cnt = 1; cnt <=  i; cnt++)\n        {\n            for (int x = len; x--; ) s[++it1] = s2[++it2];\n            int h = it1;\n            for (int x = len; x--; ) s[it1] = s[++it1 - len];\n            for (int k = h + 1; k <= h + len; k += 2) swap (s[k], s[k + 1]);\n            ans[id[2 * cnt]] = divide (1, n, i, h).mx;\n        }\n    }\n    int now = 0;\n    q = read ();\n    while (q--)\n    {\n        int k = read ();\n        now ^= (1 << k);\n        printf (\"%lld\\n\", ans[now]);\n    }\n    return 0;\n}\n```",
        "postTime": 1662976998,
        "uid": 177837,
        "name": "violin_wyl",
        "ccfLevel": 6,
        "title": "CF1716E Swap and Maximum Block"
    }
]