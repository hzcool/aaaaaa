[
    {
        "content": "\u8fd9\u9898\u6709\u9ed1\u9898\u96be\u5ea6\uff1f\uff1f\uff1f~~\u7d2b\u9898\u90fd\u5acc\u9ad8~~\n\n\u600e\u4e48\u90fd\u662f $RMQ$ + \u4e8c\u5206\uff1f\u90a3\u4e48\u6211\u7ed9\u4e00\u7bc7\u7ebf\u6bb5\u6811\u7684\u597d\u4e86\n\n\u5148\u79bb\u6563\u4e00\u4e0b\u5e8f\u5217\uff0c\u7136\u540e\u8bb0\u5f55 $pre[i]$ \u8868\u793a\u5728 $1\\sim i-1$ \u4e2d\u8ddf $a[i]$ \u76f8\u540c\u6700\u8fd1\u7684\u4f4d\u7f6e\u3002\u8003\u8651\u79bb\u7ebf\uff0c\u628a\u8be2\u95ee\u6309\u53f3\u7aef\u70b9\u6392\u5e8f\uff0c\u5982\u679c $pre[i]\\not =0$ \u5c31\u628a $pre[i]$ \u7684\u4f4d\u7f6e\u4fee\u6539\u4e3a $i-pre[i]$\uff0c\u7136\u540e\u5c31\u662f\u533a\u95f4\u6c42\u6700\u5c0f\u503c\u4e86\n\n$Code\\ Below:$\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn=500000+10;\nconst int inf=0x3f3f3f3f;\nint n,m,a[maxn],mp[maxn],pre[maxn],pos[maxn],sum[maxn<<2],ans[maxn];\n\nstruct Query{\n\tint l,id;\n};\nvector<Query> q[maxn];\n\ninline int read(){\n\tregister int x=0,f=1;char ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-')f=-1;ch=getchar();}\n\twhile(isdigit(ch)){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();}\n\treturn (f==1)?x:-x;\n}\n\nvoid pushup(int rt){\n\tsum[rt]=min(sum[rt<<1],sum[rt<<1|1]);\n}\n\nvoid modify(int x,int v,int l,int r,int rt){\n\tif(l == r){\n\t\tsum[rt]=v;\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tif(x <= mid) modify(x,v,l,mid,rt<<1);\n\telse modify(x,v,mid+1,r,rt<<1|1);\n\tpushup(rt);\n}\n\nint query(int L,int R,int l,int r,int rt){\n\tif(L <= l && r <= R){\n\t\treturn sum[rt];\n\t}\n\tint mid=(l+r)>>1,ans=inf;\n\tif(L <= mid) ans=min(ans,query(L,R,l,mid,rt<<1));\n\tif(R > mid) ans=min(ans,query(L,R,mid+1,r,rt<<1|1));\n\treturn ans;\n}\n\nint main()\n{\n\t\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++) mp[i]=a[i]=read();\n\tsort(mp+1,mp+n+1);\n\tint cnt=unique(mp+1,mp+n+1)-mp-1;\n\tfor(int i=1;i<=n;i++){\n\t\ta[i]=lower_bound(mp+1,mp+cnt+1,a[i])-mp;\n\t\tpre[i]=pos[a[i]];pos[a[i]]=i;\n\t}\n\tint l,r;\n\tfor(int i=1;i<=m;i++){\n\t\tl=read(),r=read();\n\t\tq[r].push_back((Query){l,i});\n\t}\n\tmemset(sum,inf,sizeof(sum));\n\tfor(int i=1;i<=n;i++){\n\t\tif(pre[i]) modify(pre[i],i-pre[i],1,n,1);\n\t\tfor(int j=0;j<q[i].size();j++)\n\t\t\tans[q[i][j].id]=query(q[i][j].l,i,1,n,1);\n\t}\n\tfor(int i=1;i<=m;i++) printf(\"%d\\n\",(ans[i]==inf)?-1:ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1543202685,
        "uid": 35069,
        "name": "Owen_codeisking",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF522D \u3010Closest Equals\u3011"
    },
    {
        "content": "## \u5206\u6790 + \u9898\u89e3\n\n\u9996\u5148\uff0c\u8bbe\u67d0\u79cd\u6570\u503c\u51fa\u73b0\u5728 $p_1<p_2<\\cdots<p_k$ \u8fd9 $k$ \u4e2a\u4f4d\u7f6e\uff0c\u5219\u6211\u4eec\u53ea\u9700\u7528\u6240\u6709\u6ee1\u8db3 $1 \\le i < k$ \u4e14 $l \\le p_i < p_{i+1} \\le r$ \u7684 $i$ \u7684 $p_{i+1}-p_i$ \u53bb\u66f4\u65b0\u7b54\u6848\u3002\u56e0\u6b64\u8fd9\u8f6c\u5316\u6210\u4e86\u4e00\u4e2a**\u67e5\u8be2\u533a\u95f4\u5185\u6700\u77ed\u7ebf\u6bb5\u957f\u5ea6**\u7684\u95ee\u9898\u3002\uff08\u7ebf\u6bb5\u5de6\u7aef\u70b9\u4e3a $p_i$\uff0c\u53f3\u7aef\u70b9\u4e3a $p_{i+1}$\uff09\n\n\u663e\u7136\u8fd9\u4e9b\u7ebf\u6bb5\u7684\u4e2a\u6570\u4e0d\u8d85\u8fc7 $n-1$\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5bf9\u8fd9\u4e9b\u7ebf\u6bb5\u8fdb\u884c**\u6392\u5e8f**\uff0c**\u4e8c\u5206\u67e5\u627e**\u5904\u7406\u6389\u5de6\u7aef\u70b9\u8fd9\u4e00\u7ef4\uff0c\u4f46\u662f\u5982\u4f55\u5904\u7406\u53f3\u7aef\u70b9\u8fd9\u4e00\u7ef4\u5462\uff1f\n\n\u8003\u8651**\u53bb\u91cd**\uff0c\u5373\u82e5\u7ebf\u6bb5 $i$ \u5b8c\u5168\u8986\u76d6\u7ebf\u6bb5 $j$\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u7ebf\u6bb5 $i$ \u5220\u9664\uff0c\u56e0\u4e3a\u5305\u542b\u7ebf\u6bb5 $i$ \u7684\u533a\u95f4\u4e00\u5b9a\u5305\u542b\u66f4\u77ed\u7684\u7ebf\u6bb5 $j$\u3002\n\n\u53bb\u91cd\u540e**\u7ebf\u6bb5\u7684\u53f3\u7aef\u70b9\u4e00\u5b9a\u4f1a\u968f\u7740\u7ebf\u6bb5\u7684\u5de6\u7aef\u70b9\u589e\u5927\u800c\u589e\u5927**\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5bf9\u5de6\u53f3\u7aef\u70b9\u7684\u9650\u5236\u5206\u522b\u8fdb\u884c\u4e8c\u5206\u67e5\u627e\uff0c\u5373\u53ef\u6c42\u5f97\u8be5\u533a\u95f4\u6240\u5305\u542b\u7684\u7ebf\u6bb5\u7ec4\u6210\u7684\u533a\u95f4\uff0c\u4f7f\u7528 **ST \u8868**\u5373\u53ef\u6c42\u533a\u95f4\u6700\u5c0f\u503c\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\u65f6\uff0c\u7ebf\u6bb5\u7684\u751f\u6210\u65b9\u5f0f\u53ef\u4ee5\u4fdd\u8bc1\u53f3\u7aef\u70b9\u9012\u589e\uff0c\u6211\u4eec\u53ea\u9700\u8003\u8651\u5f53\u524d\u7ebf\u6bb5\u662f\u5426\u5305\u542b\u4e0a\u4e00\u6761\u7ebf\u6bb5\uff0c\u4ee5\u6b64\u51b3\u5b9a\u662f\u5426\u52a0\u5165\u8fd9\u6761\u7ebf\u6bb5\uff0c\u5373\u53ef\u4fdd\u8bc1\u6709\u5e8f\u3002\uff08\u5373\u65e0\u9700\u53e6\u5916\u6392\u5e8f+\u53bb\u91cd\uff09\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n \\log n)$\uff08ST \u8868\u9884\u5904\u7406\u5e26\u4e00\u4e2a $\\log$\uff09\n\n## \u4ee3\u7801\n\n\u8fd8\u6709\u4ec0\u4e48\u4e0d\u6e05\u695a\u7684\u5c31\u770b\u4ee3\u7801\u5427\u3002\n\n``` cpp\n#include<bits/stdc++.h>\nusing namespace std;\nmap<int,int> pos;//pos[i] \u8bb0\u5f55 i \u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e \nconst int max_n=5e5+5;\nint l[max_n],r[max_n];//\u7ebf\u6bb5\u7684\u5de6\u53f3\u7aef\u70b9 \nint Log[max_n],f[20][max_n]; \ninline void init(int n)//ST \u8868\u9884\u5904\u7406 \n{\n\tLog[0]=-1;\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tLog[i]=Log[i>>1]+1;\n\t\tf[0][i]=r[i]-l[i];//\u503c\u4e3a\u7ebf\u6bb5\u957f\u5ea6 \n\t}\n\tfor(int i=1;i<=Log[n];++i)\n\t\tfor(int j=1;j+(1<<i)-1<=n;++j)\n\t\t\tf[i][j]=min(f[i-1][j],f[i-1][j+(1<<i-1)]);\n}\ninline int query(int l,int r)//ST \u8868\u67e5\u8be2\u533a\u95f4\u6700\u5c0f\u503c \n{\n\tint k=Log[r-l+1];\n\treturn min(f[k][l],f[k][r-(1<<k)+1]);\n}\nint main()\n{\n\tint n,m,cnt=0;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tint x;\n\t\tscanf(\"%d\",&x);\n\t\tint id=pos[x];\n\t\tif(id!=0)\n\t\t{\n\t\t\tif(id>l[cnt])//\u5224\u65ad\u662f\u5426\u5305\u542b \n\t\t\t\tl[++cnt]=id,r[cnt]=i;\n\t\t}\n\t\tpos[x]=i;\n\t}\n\tinit(cnt);\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tint L,R;\n\t\tscanf(\"%d%d\",&L,&R);\n\t\tint x=lower_bound(l+1,l+cnt+1,L)-l;\n\t\tint y=upper_bound(r+1,r+cnt+1,R)-r-1;\n\t\tif(x<=y)\n\t\t\tprintf(\"%d\\n\",query(x,y));\n\t\telse//\u82e5 x>y \u5219\u65e0\u89e3 \n\t\t\tputs(\"-1\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1610615432,
        "uid": 145355,
        "name": "wsyhb",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011CF522D Closest Equals"
    },
    {
        "content": "# CF522D Closest Equals\n\nupdated\uff1a\u4fee\u6539\u4e86\u90e8\u5206\u7ec6\u8282\uff0c\u5220\u9664\u4e86\u5197\u4f59\u63cf\u8ff0\n\n## \u524d\u8a00\n\n\u8fd9\u4e2a\u9898\u770b\u7740\u975e\u5e38\u50cf\u56de\u6eda\u83ab\u961f\u7684\u677f\u5b50\uff0c\u4e8e\u662f\u9ad8\u5174\u5730\u6572\u4e0a\u53bb\u53d1\u73b0 WA \u4e86\u3002\n\n\u4e8e\u662f\u5728\u9898\u89e3\u533a\u627e\u554a\u627e\u554a\u53ea\u627e\u5230\u4e86\u4e00\u7bc7\uff0c\u4f46\u662f\u4e0d\u592a\u80fd\u770b\u61c2 /kk\n\n\u5e94\u8be5\u662f\u592a\u5f31\u4e86\u3002\n\n\u56de\u6eda\u83ab\u961f\u5b66\u4e60\u6233[\u8fd9\u91cc](https://lawrencesivan.github.io/2021/04/22/\u83ab\u961f\u5168\u5bb6\u6876/)\n\n## \u9898\u76ee\u6982\u8ff0\n\n> \u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217\uff0c\u6bcf\u6b21\u8be2\u95ee\u4e00\u4e2a\u533a\u95f4\uff0c\u6c42\u533a\u95f4\u4e2d\u76f8\u540c\u5143\u7d20\u7684\u6700\u8fd1\u8ddd\u79bb\n\n\u7a0d\u52a0\u601d\u8003\u53ef\u4ee5\u53d1\u73b0\uff0c\u672c\u9898\u4e2d\u7684\u63d2\u5165\u64cd\u4f5c\u53ef\u4ee5\u5728 $\\mathcal{O(1)}$ \u590d\u6742\u5ea6\u5185\u5b8c\u6210\u3002\n\n\u5220\u9664\u64cd\u4f5c\u5c31\u6ca1\u6709\u90a3\u4e48\u5bb9\u6613\u3002\n\n\u6bcf\u6b21\u5220\u9664\u9700\u8981\u627e\u5230\u6b21\u5c0f\uff0c\u4e4b\u540e\u53c8\u8981\u627e\u5230\u6b21\u6b21\u5c0f\uff0c\u5982\u679c\u5168\u90fd\u5b58\u4e0b\u6765\u7a7a\u95f4\u662f $\\mathcal{O(n^2)}$ \u7684\u3002\n\n\u9700\u8981\u53e6\u8f9f\u8e4a\u5f84\u3002\n\n\u53d1\u73b0\u548c\u677f\u5b50\u9898\u8c8c\u4f3c\u5c31\u662f\u76f8\u5bf9\u7684\uff0c\u90a3\u4e2a\u662f\u6700\u5927\uff0c\u8fd9\u4e2a\u662f\u6700\u5c0f\u3002\n\n\u53ef\u4ee5\u4f7f\u7528\u7c7b\u4f3c\u7684\u624b\u6bb5\u5904\u7406\u3002\n\n\u6ce8\u610f\u5230\u7b54\u6848\u53ea\u53ef\u80fd\u6709\u4ee5\u4e0b\u6765\u6e90\uff1a\n\n- \u5de6\u534a\u533a\u95f4\u3002\n\n- \u53f3\u534a\u533a\u95f4\u3002\n\n- \u8de8\u8d8a\u4e86\u5de6\u53f3\u4e24\u533a\u95f4\uff0c\u5982\u4e0b\u56fe\uff1a\n\n  ![](https://i.loli.net/2021/08/27/kO31c9nYqLH7lNb.png)\n\n\u5206\u522b\u8003\u8651\uff1a\n\n- \u6765\u81ea\u5de6\u534a\u533a\u95f4\uff1a\u968f\u7740\u5de6\u6307\u9488\u7684\u626b\u63cf\u8fc7\u7a0b\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8bb0\u5f55 $last$ \u7684\u65b9\u6cd5\u5feb\u901f\u5f97\u51fa\u5f53\u524d\u7b54\u6848\u3002\u8fd9\u91cc\u7684\u624b\u6bb5\u6bd4\u8f83\u50cf [P1972 [SDOI2009]HH\u7684\u9879\u94fe](https://www.luogu.com.cn/problem/P1972)\uff0c\u662f\u4e00\u79cd\u6bd4\u8f83\u5e38\u89c1\u7684\u5957\u8def\u3002\n\n  \u5177\u4f53\u624b\u6bb5\u662f\u6bcf\u6b21\u626b\u5165\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5982\u679c\u989c\u8272\u8fd8\u6ca1\u6709\u51fa\u73b0\u8fc7\u90a3\u4e48\u5c31\u8bb0\u5f55\u4e0b\u6765\uff0c\u5982\u679c\u51fa\u73b0\u8fc7\u4e86\u8bf4\u660e\u73b0\u5728\u51fa\u73b0\u4e86\u4e24\u79cd\u76f8\u540c\u7684\u989c\u8272\uff0c\u4e8e\u662f\u53ef\u80fd\u4f1a\u5bf9\u7b54\u6848\u4ea7\u751f\u8d21\u732e\uff0c\u6240\u4ee5\u4e0e\u7b54\u6848\u53d6 `min` \u3002\n\n  \u4e4b\u540e\u66f4\u6539 $last$ \u7684\u503c\u3002\u539f\u56e0\u662f\u8981\u6c42\u6700\u5c0f\u7684\u8ddd\u79bb\uff0c\u6240\u4ee5\u66f4\u8fdc\u7684\u5c31\u6ca1\u6709\u7528\u4e86\u3002\n\n- \u53f3\u534a\u533a\u95f4\u540c\u7406\u3002\n\n- \u95ee\u9898\u5728\u4e8e\u8de8\u8d8a\u4e24\u4e2a\u533a\u95f4\u7684\u60c5\u51b5\uff1a\n\n  \u53ef\u4ee5\u770b\u51fa\uff0c\u60c5\u51b5\u53ea\u4f1a\u6765\u81ea\u4e8e\u53f3\u8fb9\u533a\u95f4\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u4e0e\u5de6\u8fb9\u533a\u95f4\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\n\n  \u8fd9\u4e2a\u4e5f\u662f\u597d\u7edf\u8ba1\u7684\uff0c\u8bb0\u5f55\u4e0b\u6765\u5c31\u597d\u4e86\uff0c\u5904\u7406\u5de6\u533a\u95f4\u7684\u65f6\u5019\u540c\u6b65\u5904\u7406\u4e00\u4e0b\u3002\n\n\u8981\u8bb0\u5f97\u79bb\u6563\u5316\uff01\n\n```cpp\n// #define LawrenceSivan\n\n#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\n\n#define INF 0x3f3f3f3f\n#define re register\n\nconst int maxn=5e5+5;\n\nint n,m,ans;\n\nint belong[maxn],block,tot;\n\nint a[maxn],b[maxn]/*\u79bb\u6563\u5316\u6570\u7ec4*/,tmp;\n\nnamespace Mo_Captain{\n\tstruct MOCAP{\n\t\tint l,r,id;\n\t\tinline bool operator < (const MOCAP &x)const{\n\t\t\treturn belong[l]^belong[x.l]?belong[l]<belong[x.l]:r<x.r;\n\t\t}\n\t}mocap[maxn];\n\n\tinline void Discretization(){//\u8bb0\u5f97\u79bb\u6563\u5316\n\t\tsort(b+1,b+1+n);\n\t\ttmp=unique(b+1,b+1+n)-b-1;\n\t\tfor(re int i=1;i<=n;i++){\n\t\t\ta[i]=lower_bound(b+1,b+1+tmp,a[i])-b;\n\t\t}\n\t}\n\n\tint last[maxn];\n\n\tinline int calc(int l,int r){\n\t\tint res=INF,cntt[maxn];\n\t\tfor(re int i=l;i<=r;i++){\n\t\t\tcntt[a[i]]=0;\n\t\t}\n\t\tfor(re int i=l;i<=r;i++){\n\t\t\tif(!cntt[a[i]])cntt[a[i]]=i;\n\t\t\telse res=min(res,i-cntt[a[i]]),cntt[a[i]]=i;\n\t\t}\n\t\t\n\t\treturn res^INF?res:-1;\n\t}\n\n\tint pl[maxn],pr[maxn];//\u4f34\u968f\u7740\u626b\u63cf\u6211\u4eec\u8bb0\u5f55\u7684 last \u503c\uff0c\u7528\u4e8e\u5904\u7406\u53ea\u5728\u5de6\u533a\u95f4\u548c\u53ea\u5728\u53f3\u533a\u95f4\u7684\u60c5\u51b5\n\n\tint maxl[maxn],minr[maxn];//\u5de6\u533a\u95f4\u51fa\u73b0\u7684\u6700\u5927\u4f4d\u7f6e\u548c\u53f3\u533a\u95f4\u51fa\u73b0\u7684\u6700\u5c0f\u4f4d\u7f6e\n\n\tint Ans[maxn];\n}\n\nusing namespace Mo_Captain;\n\nnamespace IO{\n\ttemplate<typename T>\n\tinline void read(T &x){\n\t\tx=0;T f=1;char ch=getchar();\n\t\twhile (!isdigit(ch)) {if(ch=='-')f=-1;ch=getchar();}\n\t\twhile (isdigit(ch)){x=x*10+(ch^48);ch=getchar();}\n\t\tx*=f;\n\t}\n\n\ttemplate <typename T, typename... Args>\n\tinline void read(T& t, Args&... args){\n\t\tread(t); read(args...);\n\t}\n\n\ttemplate<typename T>\n\tvoid write(T x){\n\t\tif(x<0)putchar('-'),x=-x;\n\t\tif(x>9)write(x/10);\n\t\tputchar(x%10+'0');\n\t}\n\n\ttemplate<typename T,typename... Args>\n\tvoid write(T t,Args... args){\n\t\twrite(t);putchar(' ');write(args...);\n\t}\n}\n\nusing namespace IO;\n\nsigned main(){\n#ifdef LawrenceSivan\n\tfreopen(\"D1.in\",\"r\", stdin);\n\tfreopen(\"aa.out\",\"w\", stdout);\n#endif\n\tread(n,m);\n\tblock=sqrt(n);\n\n\tfor(re int i=1;i<=n;i++){\n\t\tbelong[i]=(i-1)/block+1;\n\t}\n\ttot=belong[n];\n\n\tfor(re int i=1;i<=n;i++){\n\t\tread(a[i]);b[i]=a[i];\n\t}\n\n\tDiscretization();\n\n\t// for(re int i=1;i<=n;i++){cout<<a[i]<< \" \";}\n\n\tfor(re int i=1;i<=m;i++){\n\t\tread(mocap[i].l,mocap[i].r);\n\t\tmocap[i].id=i;\n\t}\n\n\tsort(mocap+1,mocap+1+m);\n\n\t//  for(int i=1;i<=m;i++){\n //    \tcout<<mocap[i].l<<\" \"<<mocap[i].r<<\" \"<<mocap[i].id<<endl;\n\t// }\n\n\tfor(re int i=1,j=1;j<=tot;j++){\n\t\tint nowr=min(n,j*block),l=nowr+1,r=nowr,ans=INF;\n\t\tmemset(pl,0,sizeof(pl));memset(pr,0,sizeof(pr));//\u522b\u9a82\u4e86\u522b\u9a82\u4e86\uff0cmemset\u4e0d\u548b\u5403\u5e38\u6570\u7684\uff08\u786e\u4fe1\uff09\n\t\tmemset(maxl,0,sizeof(maxl));memset(minr,0,sizeof(minr));\n\t\tfor(;belong[mocap[i].l]==j;i++){\n\t\t\tif(belong[mocap[i].r]==j){//\u540c\u4e00\u4e2a\u5757\u5185\u66b4\u529b\u505a\n\t\t\t\tAns[mocap[i].id]=calc(mocap[i].l,mocap[i].r);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\twhile(r<mocap[i].r){//\u53f3\u533a\u95f4\u8d70\n\t\t\t\tr++;\n\t\t\t\tif(!minr[a[r]])minr[a[r]]=r;//\u8bb0\u5f55\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\n\t\t\t\telse ans=min(ans,r-pr[a[r]]);\n\t\t\t\tpr[a[r]]=r;\n\t\t\t}\n\n\t\t\tint tmpp=ans;\n\n\t\t\twhile(l>mocap[i].l){//\u5de6\u533a\u95f4\u8d70\n\t\t\t\tl--;\n\t\t\t\tif(!pl[a[l]]){\n\t\t\t\t\tif(minr[a[l]])ans=min(ans,minr[a[l]]-l);//\u5904\u7406\u8de8\u8d8a\u533a\u95f4\u7684\u60c5\u51b5\n\t\t\t\t}\n\t\t\t\telse ans=min(ans,pl[a[l]]-l);//\u5904\u7406\u5de6\u533a\u95f4\n\t\t\t\tpl[a[l]]=l;\n\t\t\t} \n\n\t\t\tif(ans^INF)Ans[mocap[i].id]=ans;\n\t\t\telse Ans[mocap[i].id]=-1;\n\n\t\t\twhile(l<=nowr){//\u6eda\u56de\u6765\uff01\n\t\t\t\tpl[a[l]]=0;\n\t\t\t\tl++;\n\t\t\t}\n\t\t\tans=tmpp;\n\t\t}\n\t}\n\n\tfor(re int i=1;i<=m;i++){\n\t\twrite(Ans[i]),puts(\"\");\n\t}\n\n\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1630065744,
        "uid": 375208,
        "name": "LawrenceSivan",
        "ccfLevel": 0,
        "title": "CF522D Closest Equals"
    },
    {
        "content": "### \u9898\u610f\n\n\u7ed9\u5b9a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a$\uff0c$m$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u5b9a $l,r$\uff0c\u5728\u6ee1\u8db3 $a_x=a_y,l\\leq x,y\\leq r$ \u7684\u524d\u63d0\u4e0b\u6c42 $\\vert a_x-a_y\\vert$ \u7684\u6700\u5c0f\u503c\u3002\n\n$\\texttt{Data Range:}1\\leq n,m\\leq 5\\times 10^5$\n\n### \u9898\u89e3\n\n\u4e0d\u7b97\u5f88\u96be\u7684\u9898\u3002\n\n\u9996\u5148\u6ce8\u610f\u5230\u5bf9\u4e8e\u67d0\u4e2a\u4f4d\u7f6e\u6765\u8bf4\uff0c\u53ea\u6709\u7b2c\u4e00\u4e2a\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u5de6\u8fb9\u4e14\u503c\u76f8\u540c\u7684\u4f4d\u7f6e\u624d\u53ef\u80fd\u9020\u6210\u8d21\u732e\uff08\u53f3\u8fb9\u7684\u8bdd\u4f1a\u5728\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u679a\u4e3e\u5230\uff09\uff0c\u6240\u4ee5\u9884\u5904\u7406\u4e00\u4e2a $prv_i$ \u8868\u793a\u8fd9\u4e2a\u4f4d\u7f6e\u53ef\u80fd\u7684\u8d21\u732e\uff0c\u4e5f\u5373\u8fd9\u4e2a\u4f4d\u7f6e\u4e0e\u7b2c\u4e00\u4e2a\u5728\u5b83\u5de6\u8fb9\u7684\u4f4d\u7f6e\u7684\u8ddd\u79bb\u3002\n\n\u63a5\u4e0b\u6765\u6709\u4e00\u4e2a\u975e\u5e38\u66b4\u529b\u7684\u505a\u6cd5\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\uff0c\u53d6\u6240\u6709\u6ee1\u8db3 $i-prv_i\\geq l $ \u4f4d\u7f6e\u4e0a\u7684 $prv_i$ \u7684\u6700\u5c0f\u503c\u3002\u4f46\u662f\u8fd9\u4e2a\u4e1c\u897f\u5728\u7ebf\u505a\u6ca1\u6cd5\u505a\uff08\u4e5f\u6709\u53ef\u80fd\u662f\u6211\u4e0d\u4f1a\uff09\uff0c\u4e8e\u662f\u8003\u8651\u5c06\u6240\u6709\u8be2\u95ee\u79bb\u7ebf\u4e0b\u6765\u6309\u7167\u5de6\u7aef\u70b9\u6392\u5e8f\uff0c\u6bcf\u4e00\u6b21\u5904\u7406\u5de6\u7aef\u70b9\u76f8\u540c\u7684\u6240\u6709\u8be2\u95ee\u3002\n\n\u6ce8\u610f\u5230\u5f53\u5de6\u7aef\u70b9\u5f80\u53f3\u79fb\u4e00\u4e2a\u4f4d\u7f6e\u7684\u65f6\u5019\uff0c\u6709\u4e00\u4e2a\u4f4d\u7f6e\u4f1a\u5931\u6548\uff0c\u6240\u4ee5\u628a\u5b83\u6539\u6210 $+\\infty$ \u5c31\u597d\u4e86\uff0c\u8fd9\u4e2a\u65f6\u5019\u6bcf\u4e2a\u8be2\u95ee\u53ef\u4ee5\u76f4\u63a5\u67e5\u8be2\u5bf9\u5e94\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u5199\u4e2a\u7ebf\u6bb5\u6811\u5373\u53ef\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef int ll;\ntypedef long long int li;\nconst ll MAXN=5e5+51,inf=0x3f3f3f3f;\nstruct SegmentTree{\n\tll l,r,mn;\n};\nstruct Query{\n\tll l,r,id;\n\tinline bool operator <(const Query &rhs)const\n\t{\n\t\treturn l<rhs.l;\n\t} \n};\nSegmentTree tree[MAXN<<2];\nQuery qry[MAXN];\nunordered_map<ll,ll>mp;\nll n,m,l,r;\nll x[MAXN],d[MAXN],nxt[MAXN],res[MAXN];\ninline ll read()\n{\n    register ll num=0,neg=1;\n    register char ch=getchar();\n    while(!isdigit(ch)&&ch!='-')\n    {\n        ch=getchar();\n    }\n    if(ch=='-')\n    {\n        neg=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch))\n    {\n        num=(num<<3)+(num<<1)+(ch-'0');\n        ch=getchar();\n    }\n    return num*neg;\n}\n#define ls node<<1\n#define rs (node<<1)|1\ninline void update(ll node)\n{\n\ttree[node].mn=min(tree[ls].mn,tree[rs].mn);\n}\ninline void create(ll l,ll r,ll node)\n{\n\ttree[node]=(SegmentTree){l,r};\n\tif(l==r)\n\t{\n\t\treturn (void)(tree[node].mn=d[l]);\n\t}\n\tll mid=(l+r)>>1;\n\tcreate(l,mid,ls),create(mid+1,r,rs),update(node);\n}\ninline void change(ll pos,ll val,ll node)\n{\n\tif(tree[node].l==tree[node].r)\n\t{\n\t\treturn (void)(tree[node].mn=val);\n\t}\n\tll mid=(tree[node].l+tree[node].r)>>1;\n\tchange(pos,val,pos<=mid?ls:rs),update(node);\n}\ninline ll query(ll l,ll r,ll node)\n{\n\tif(l<=tree[node].l&&r>=tree[node].r)\n\t{\n\t\treturn tree[node].mn;\n\t}\n\tll mid=(tree[node].l+tree[node].r)>>1;\n\treturn min((l<=mid?query(l,r,ls):inf),(r>mid?query(l,r,rs):inf));\n}\nint main()\n{\n    n=read(),m=read();\n    for(register int i=1;i<=n;i++)\n    {\n    \tx[i]=read(),d[i]=mp.find(x[i])==mp.end()?inf:i-mp[x[i]];\n    \tmp.find(x[i])!=mp.end()?nxt[mp[x[i]]]=i:1,mp[x[i]]=i; \n\t}\n\tcreate(1,n,1);\n\tfor(register int i=1;i<=m;i++)\n\t{\n\t\tl=read(),r=read(),qry[i]=(Query){l,r,i};\n\t}\n\tsort(qry+1,qry+m+1),l=1;\n\tfor(register int i=1;i<=m;i++)\n\t{\n\t\twhile(l<qry[i].l)\n\t\t{\n\t\t\tchange(nxt[l++],inf,1);\n\t\t}\n\t\tres[qry[i].id]=query(qry[i].l,qry[i].r,1);\n\t}\n\tfor(register int i=1;i<=m;i++)\n\t{\n\t\tprintf(\"%d\\n\",res[i]==inf?-1:res[i]);\n\t}\n}\n```",
        "postTime": 1612274566,
        "uid": 60990,
        "name": "Karry5307",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF522D \u3010Closest Equals\u3011"
    },
    {
        "content": "# \u9898\u76ee\u5927\u610f\n\n\u7ed9\u51fa\u4e00\u4e2a\u5e8f\u5217,\u6bcf\u6b21\u67e5\u8be2\u4e00\u6bb5\u533a\u95f4\u5185\u8ddd\u79bb\u6700\u8fd1\u7684\u76f8\u540c\u5143\u7d20\u4e4b\u95f4\u7684\u8ddd\u79bb.\n\n# \u5206\u6790\n\nRMQ+\u4e8c\u5206\u7684\u505a\u6cd5\u597d\u5999\u554a,\u6211\u5c31\u6839\u672c\u60f3\u4e0d\u51fa\u6765.\n\n\u8003\u8651\u4e00\u4e2a\u6570\u5bf9\u53ea\u6709\u5f53\u4e24\u4e2a\u6570\u76f8\u7b49\u4e14\u90fd\u5728\u533a\u95f4\u5185\u624d\u53ef\u80fd\u4f1a\u4ea7\u751f\u8d21\u732e.\n\n\u8bb0\u5f55\u4e00\u4e2a $pre_i$ \u8868\u793a\u7b2c $i$ \u4e2a\u6570\u76f8\u540c\u7684\u6570\u4e0a\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\n\n\u8fd9\u4e2a\u4e1c\u897f\u5c31\u5f88\u50cf\u533a\u95f4\u53d6 $\\min$ \u4e86,\u5c06 $i$ \u4e0e $pre_i$ \u7684\u8d21\u732e\u653e\u5728 $pre_i$ \u7684\u4f4d\u7f6e,\u90a3\u4e48\u8fd9\u4e2a\u533a\u95f4\u67e5\u8be2\u7684\u7b54\u6848\u5c31\u662f $l\\sim r$ \u4e2d\u8bb0\u5f55\u7684\u8d21\u732e\u7684\u6700\u5c0f\u503c\u4e86.\n\n\u53ef\u662f\u76f4\u63a5\u8fd9\u6837\u641e\u53ef\u80fd\u4f1a\u5bfc\u81f4 $i$ \u5728\u533a\u95f4\u5916 $pre_i$ \u5728\u533a\u95f4\u5185\u7684\u60c5\u51b5\u51fa\u73b0,\u90a3\u4e48\u5c31\u8003\u8651\u5c06\u67e5\u8be2\u79bb\u7ebf\u4e0b\u6765,\u6309\u53f3\u7aef\u70b9\u6392\u5e8f,\u53ea\u6709\u5f53 $i\\leq right$ \u65f6\u624d\u5c06\u8d21\u732e\u653e\u5728 $pre_i$ \u4e0a.\n\n# \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define REP(i,first,last) for(int i=first;i<=last;++i)\n#define DOW(i,first,last) for(int i=first;i>=last;--i)\nusing namespace std;\nconst int MAXN=5e5+5;\nconst int INF=1e9;\nint n,m;\nint arr[MAXN];\nstruct Sor\n{\n\tint num,id;\n}sor[MAXN];\nbool Cmp(Sor a,Sor b)\n{\n\treturn a.num>b.num;\n}\nstruct SegmentTree//\u4e00\u9897\u7ef4\u62a4\u533a\u95f4 min \u7684\u7ebf\u6bb5\u6811\n{\n\tint min;\n}sgt[MAXN*4];\n#define LSON (now<<1)\n#define RSON (now<<1|1)\n#define MIDDLE ((left+right)>>1)\n#define LEFT LSON,left,MIDDLE\n#define RIGHT RSON,MIDDLE+1,right\n#define NOW now_left,now_right\nvoid PushUp(int now)\n{\n\tsgt[now].min=min(sgt[LSON].min,sgt[RSON].min);\n}\nvoid Build(int now=1,int left=1,int right=n)\n{\n\tif(left==right)\n\t{\n\t\tsgt[now].min=INF;\n\t\treturn;\n\t}\n\tBuild(LEFT);\n\tBuild(RIGHT);\n\tPushUp(now);\n}\nvoid Updata(int place,int num,int now=1,int left=1,int right=n)//\u5355\u70b9\u4fee\u6539\n{\n\tif(right<place||place<left)\n\t{\n\t\treturn;\n\t}\n\tif(left==right)\n\t{\n\t\tsgt[now].min=num;\n\t\treturn;\n\t}\n\tUpdata(place,num,LEFT);\n\tUpdata(place,num,RIGHT);\n\tPushUp(now);\n}\nint Query(int now_left,int now_right,int now=1,int left=1,int right=n)//\u533a\u95f4\u67e5\u8be2 min\n{\n\tif(now_right<left||right<now_left)\n\t{\n\t\treturn INF;\n\t}\n\tif(now_left<=left&&right<=now_right)\n\t{\n\t\treturn sgt[now].min;\n\t}\n\treturn min(Query(NOW,LEFT),Query(NOW,RIGHT));\n}\n#undef LSON\n#undef RSON\n#undef MIDDLE\n#undef LEFT\n#undef RIGHT\n#undef NOW\nint pre[MAXN];\nint last[MAXN];\nint answer[MAXN];\nstruct Range\n{\n\tint left,right,id;\n}range[MAXN];\nbool Cmp2(Range a,Range b)\n{\n\treturn a.right<b.right;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tREP(i,1,n)//\u79bb\u6563\u5316\n\t{\n\t\tscanf(\"%d\",&sor[i].num);\n\t\tsor[i].id=i;\n\t}\n\tsort(sor+1,sor+1+n,Cmp);\n\tsor[0].num=sor[1].num-1;\n\tint tot=0;\n\tREP(i,1,n)\n\t{\n\t\tif(sor[i].num^sor[i-1].num)\n\t\t{\n\t\t\t++tot;\n\t\t}\n\t\tarr[sor[i].id]=tot;\n\t}\n\tREP(i,1,n)//\u5904\u7406 pre \u6570\u7ec4\n\t{\n\t\tpre[i]=last[arr[i]];\n\t\tlast[arr[i]]=i;\n\t}\n\tREP(i,1,m)\n\t{\n\t\tscanf(\"%d%d\",&range[i].left,&range[i].right);\n\t\trange[i].id=i;\n\t}\n\tsort(range+1,range+1+m,Cmp2);//\u5c06\u67e5\u8be2\u7684\u533a\u95f4\u6309\u53f3\u7aef\u70b9\u6392\u5e8f\n\tint now=1;\n\tBuild();\n\tREP(i,1,m)\n\t{\n\t\twhile(now<=range[i].right)//\u5c06\u5c0f\u4e8e\u53f3\u7aef\u70b9\u7684\u8d21\u732e\u653e\u4e0a\n\t\t{\n\t\t\tif(pre[now])\n\t\t\t{\n\t\t\t\tUpdata(pre[now],now-pre[now]);\n\t\t\t}\n\t\t\t++now;\n\t\t}\n\t\tanswer[range[i].id]=Query(range[i].left,range[i].right);\n\t\tif(answer[range[i].id]==INF)\n\t\t{\n\t\t\tanswer[range[i].id]=-1;\n\t\t}\n\t}\n\tREP(i,1,m)//\u8f93\u51fa\n\t{\n\t\tprintf(\"%d\\n\",answer[i]);\n\t}\n\treturn 0;\n}\n```\n\n~~\u8fd9\u4e2a\u4e1c\u897f\u600e\u4e48\u641e\u5728\u7ebf $\\mathcal{O}(m\\log n)$ \u554a~~\n\n\u5efa\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u5c31\u597d\u4e86.",
        "postTime": 1592133821,
        "uid": 86625,
        "name": "Limit",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF522D \u3010Closest Equals\u3011"
    },
    {
        "content": "\u4e00\u4e2a\u5e38\u6570\u5927\uff0c\u590d\u6742\u5ea6\u9ad8\uff0c\u4f46\u662f\u597d\u60f3\u597d\u5199\u7684 $\\log^2n$ \u5728\u7ebf\u505a\u6cd5\u3002\n\n\u4e00\u5f00\u59cb\u60f3\u7684\u662f\u83ab\u961f\u5957\u4e00\u4e2a\u503c\u57df\u5206\u5757\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u6570\u7528\u53cc\u7aef\u961f\u5217\u7ef4\u62a4\u4e0b\u6807\u7684\u505a\u6cd5\uff0c\u4f46\u662f\u9274\u4e8e\u5176\u5e38\u6570\u548c $5\\times 10^5$ \u7684\u6570\u636e\u8303\u56f4\u88ab\u629b\u5f03\u4e86\u3002\n\n\u7136\u540e\u662f\u8fd9\u6837\u601d\u8003\u7684\uff1a\n\n\u5c1d\u8bd5\u7528 $pre$ \u6570\u7ec4\uff0c\u5373\u4e0a\u4e00\u4e2a\u6570\u51fa\u73b0\u4f4d\u7f6e\u7684\u6570\u7ec4\u6765\u505a\u3002\u8fd9\u6837\u770b\u8d77\u6765\u5c31\u53d8\u6210\u4e86 RMQ \u95ee\u9898\uff0c\u5373\u6c42\u533a\u95f4 $x-pre_x$ \u7684\u6700\u5c0f\u503c\u3002\u4f46\u5176\u5b9e\u8fd8\u6709\u4e00\u4e2a\u9650\u5236\u6761\u4ef6\uff0c\u5c31\u662f $l\\le pre_x$ \u7684 $x$ \u624d\u80fd\u505a\u8d21\u732e\uff0c\u56e0\u4e3a\u5982\u679c $l>pre_x$ \u4e0a\u4e00\u4e2a\u6570\u5c31\u4e0d\u5728\u8fd9\u4e2a\u533a\u95f4\u5185\u4e86\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u4e2a\u8be1\u5f02\u7684\u4e1c\u897f\uff0c\u8003\u8651\u7ebf\u6bb5\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u7ef4\u62a4\u8fd9\u4e2a\u533a\u95f4\u7684\u4e00\u4e9b\u4fe1\u606f\uff08\u5e9f\u8bdd\uff09\uff0c\u5c06\u4e00\u4e2a\u5927\u533a\u95f4\u62c6\u5206\u6210 $\\log n$ \u4e2a\u533a\u95f4\u3002\u76f8\u5e94\u7684\uff0c\u4e5f\u53d8\u6210\u4e86\u6574\u4f53\u95ee\u9898\uff0c\u5373\u5bf9\u4e8e\u4e00\u4e2a\u5e8f\u5217\uff0c\u6bcf\u6b21\u6c42\u6ee1\u8db3 $l\\le pre_x$ \u7684 $\\min(x-pre_x)$\u3002\n\n\u8fd9\u4e2a\u95ee\u9898\u5c31\u5341\u5206\u7b80\u5355\u4e86\uff0c\u6309 $pre$ \u6392\u5e8f\uff0c\u9884\u5904\u7406 $x-pre_x$ \u7684\u540e\u7f00 $\\min$ \u6bcf\u6b21\u4e8c\u5206\u5373\u53ef\u3002\n\n\u4ee3\u7801\u4e0d\u5230 70 \u884c\uff0c\u8fd9\u91cc\u53ea\u7ed9\u51fa\u7ebf\u6bb5\u6811\u7684\u4ee3\u7801\u3002\n\n```cpp\nstruct seg\n{\n\tint l,r;\n\tvector<pair<int,int> > a;\n}t[2000005];\nvoid build(int w,int l,int r)\n{\n\tint i,mid=l+r>>1;\n\tfor(i=l;i<=r;i++)\n\t\tt[w].a.push_back({pre[i],i-pre[i]});\n\tsort(t[w].a.begin(),t[w].a.end());\n\tt[w].l=l,t[w].r=r;\n\tfor(i=t[w].a.size()-2;i>=0;i--)\n\t\tt[w].a[i].second=min(t[w].a[i].second,t[w].a[i+1].second);\n\tif(l<r)\n\t{\n\t\tbuild(ls,l,mid);\n\t\tbuild(rs,mid+1,r);\n\t}\n}\nint ask(int w,int l,int r)\n{\n\tif(t[w].l>=l&&t[w].r<=r)\n\t{\n\t\tif(t[w].a.back().first<l) return 2e9;\n\t\treturn (*lower_bound(t[w].a.begin(),t[w].a.end(),make_pair(l,0))).second;\n\t}\n\tint mn=2e9;\n\tif(t[ls].r>=l) mn=ask(ls,l,r);\n\tif(t[rs].l<=r) mn=min(mn,ask(rs,l,r));\n\treturn mn;\n}\n```\n",
        "postTime": 1610944675,
        "uid": 203623,
        "name": "Ntokisq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF522D \u3010Closest Equals\u3011"
    },
    {
        "content": "# \u7ec8\u4e8e\u8fc7\u4e86\uff0c\u53d1\u7bc7\u9898\u89e3\u5e86\u795d\u4e00\u4e0b\n~~\u5b9e\u9645\u4e0a\u662f\u4e3a\u4e86\u4e0d\u8ba9\u540e\u4eba\u6ca1\u4e00\u7bc7\u4f18\u79c0\u7684\u9898\u89e3\u770b~~\n\n### \u8fdb\u5165\u6b63\u9898\n\n[\u7ffb\u8bd1](https://www.luogu.org/discuss/show/50529) ~~\u5b9e\u9645\u4e0a\u662f\u6211\u61d2\u5f97\u6253\u4e86~~\n\nemmmm\uff0c\u600e\u4e48\u8fd9\u4e48\u591a\u5b9e\u9645\u4e0aQAQ\uff1f\n\n\u4e0d\u7ba1\u5566\uff0c\u770b\u9898\uff0c\u6211\u4eec\u5c06\u76f8\u540c\u7684\u6570\u4f5c\u4e3a\u4e00\u4e2a\u533a\u95f4\u5b58\u4e0b\u6765\n\n\u5c06\u4e24\u4e2a\u7684\u5750\u6807\u5206\u522b\u4f5c\u4e3a\u533a\u95f4\u7684\u5de6\u53f3\u7aef\u70b9\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\n\n\u5982\u679c\u6709\u4e00\u4e2a\u533a\u95f4\u5305\u542b\u4e86\u53e6\u4e00\u4e2a\u533a\u95f4\uff0c\u90a3\u4e48\uff01\uff01\uff01\n\n\u5c31\u53ef\u4ee5\u5220\u6389\u90a3\u4e2a\u8f83\u5927\u7684\u533a\u95f4\uff0c\u662f\u4e0d\u662f\u5f88\u795e\u5947\uff01\u662f\u4e0d\u662f\uff01\u662f\u4e0d\u662f\uff01\n\n\u54b3\u54b3\uff0c\u8a00\u5f52\u6b63\u4f20\uff0c\u90a3\u4e48\u6211\u4eec\u4eec\u5728\u8fb9\u8bfb\u8fb9\u505a\u65f6\u5c31\u4f1a\u81ea\u52a8\u7684\u5c06\u533a\u95f4\u6309\u5de6\u7aef\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n\n\u7531\u4e0a\u53ef\u77e5\uff0c\u53f3\u7aef\u70b9\u4e5f\u662f\u6709\u5e8f\u7684\n\n\u5728\u6bcf\u6b21\u8be2\u95ee\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u4e00\u4e2a\u67e5\u627e\uff0c\u627e\u5230\u53ef\u4ee5\u5f97\u51fa\u7b54\u6848\u7684\u8303\u56f4\n\n\u5728\u5176\u4e2d\u627e\u6700\u5c0f\u7684\u533a\u95f4\u957f\u5ea6\uff0c\u5c31\u53ef\u4ee5\u5566~~~\n\n\u4e0a\u9762\u7684\u4e00\u6b65\u53ef\u4ee5\u7528RMQ\u54e6QAQ\n\n\u6ce8\u610f\uff1a\u5f53\u6211\u4eec\u627e\u51fa\u7684l\u548cr\u6709l>r\u65f6\uff0c\u5c31\u8f93\u51fa-1\u5566\n\n\u4e22\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\nint a[500001],d[500001],cnt;\nint logg[500001];\nint f[500001][40];\nint l[500001],r[500001];\nmap <int,int> mp;//\u7b2c\u4e00\u4e2a\u662f\u539f\u503c\uff0c\u7b2c\u4e8c\u4e2a\u662f\u539f\u503c\u7684\u4f4d\u7f6e\ninline int min(int a,int b)\n{\n\treturn a<b? a:b;\n}\ninline int read()\n{\n    int x=0,w=0;char ch=0;\n    while(!(ch>='0'&&ch<='9'))\n    {\n        if(ch=='-') w=1;\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9')\n    x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\n    return w?-x:x;\n}\nint main(){\n\tn=read();\n\tm=read();\n\tfor(register int i=1;i<=n;++i)\n\t{\n\t\ta[i]=read();\n\t\tif(mp.count(a[i]))\n\t\t{\n\t\t\tint j=mp.find(a[i])->second;\n\t\t\tmp[a[i]]=i;\n\t\t\tif(!cnt) l[++cnt]=j,r[cnt]=i,d[cnt]=i-j;\n\t\t\telse if(l[cnt]>=j) continue;\n\t\t\telse l[++cnt]=j,r[cnt]=i,d[cnt]=i-j;\n\t\t}\n\t\telse mp.insert(make_pair(a[i],i));\n\t}\n\tlogg[0]=-1;\n    for(register int i=1;i<=cnt;++i)\n      f[i][0]=d[i],logg[i]=logg[i>>1]+1;\n    for(register int j=1;(1<<j)<=cnt;++j)\n      for(register int i=1;i+(1<<j)-1<=cnt;++i)\n      \tf[i][j]=min(f[i][j-1],f[i+(1<<j-1)][j-1]);\n    for(register int i=1;i<=m;++i)\n    {\n        int x,y;\n        x=read();\n\t\ty=read();\n        x=lower_bound(l+1,l+cnt+1,x)-l;\n        y=upper_bound(r+1,r+cnt+1,y)-r-1;\n\t\tif(y<x) {cout<<-1<<endl; continue;}\n        int s=logg[y-x+1];\n        printf(\"%d\\n\",min(f[x][s],f[y-(1<<s)+1][s]));\n    }\n}\n```",
        "postTime": 1537932154,
        "uid": 92496,
        "name": "\u6587\u6b66\u6b66\u667a\u969c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF522D \u3010Closest Equals\u3011"
    },
    {
        "content": "\u8865\u4e00\u4e2a\u9898\u89e3~\n\n~~\u4e00\u770b\u5230 5e5 \u76f4\u63a5\u60f3\u6839\u53f7\u7b97\u6cd5\u3002~~\n\n\u9996\u5148\u5bf9\u6bcf\u4e00\u4e2a\u4f4d\u7f6e $i$ \u9884\u5904\u7406\u51fa\u6765\u4e0a\u4e00\u4e2a\u7b49\u4e8e\u5b83\u7684\u4f4d\u7f6e $pre[i]$ \u4e0e\u4e0b\u4e00\u4e2a\u7b49\u4e8e\u5b83\u7684\u4f4d\u7f6e $nxt[i]$\u3002\u4ece\u8fd9\u4e9b\u503c\u5c31\u53ef\u4ee5\u8ba1\u7b97\u51fa\u6765\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u5bf9\u4e00\u4e2a\u533a\u95f4\u7684\u7b54\u6848\u8d21\u732e\uff0c\u56e0\u4e3a\u663e\u7136\u8d21\u732e\u53ea\u53ef\u80fd\u662f $(pre[i],i)$ \u8fd9\u4e00\u5bf9\u6216\u8005\u662f $(i,nxt[i])$ \u8fd9\u4e00\u5bf9\u3002\n\n\u5206\u5757\uff0c\u8bbe\u5757\u957f\u4e3a $B$\u3002\u9884\u5904\u7406\u51fa\u6765\u6240\u6709\u5757\u533a\u95f4\u7684\u7b54\u6848\uff1b$O(B^2)$ \u4e2a\u5757 $O(N^2/B)$ \u65f6\u95f4\u3002\u6bcf\u4e00\u4e2a\u8be2\u95ee\u663e\u7136\u662f\uff08\u5757\u5185\u7b54\u6848\uff0c\u5de6\u8fb9\u7684\u8d21\u732e\uff0c\u53f3\u8fb9\u7684\u4e1c\u7ebf\uff09\u7684\u6700\u5927\u503c\uff1b\u5de6\u8fb9\u548c\u53f3\u8fb9\u5206\u522b\u6700\u591a\u6709 $O(B)$ \u4e2a\u5143\u7d20\uff0c\u53ef\u4ee5\u66b4\u529b\u8ba1\u7b97\u8d21\u732e\u3002\n\n\u4e8e\u662f\u5f97\u5230\u4e00\u4e2a $O(N^2/B+QB)$ \u7684\u4e00\u4e2a\u5c0f\u5e38\u6570\u89e3\uff0c\u53d6 $B=O(\\sqrt N)$ \u5f97\u5230 $O((N+Q)\\sqrt N)$ ~~\u8f7b\u677e\u8dd1\u8fc7\uff08\u5927\u96fe~~\n\n\u4ee3\u7801\uff1a\n\n```cpp\n// writer: w33z8kqrqk8zzzx33\n#include <bits/stdc++.h>\nusing namespace std;\n\n// begin fast read template by CYJian (source: https://www.luogu.com.cn/paste/i11c3ppx)\n\nnamespace io {\n\tconst int __SIZE = (1 << 21) + 1;\n\tchar ibuf[__SIZE], *iS, *iT, obuf[__SIZE], *oS = obuf, *oT = oS + __SIZE - 1, __c, qu[55]; int __f, qr, _eof;\n\t#define Gc() (iS == iT ? (iT = (iS = ibuf) + fread (ibuf, 1, __SIZE, stdin), (iS == iT ? EOF : *iS ++)) : *iS ++)\n\tinline void flush () { fwrite (obuf, 1, oS - obuf, stdout), oS = obuf; }\n\tinline void gc (char &x) { x = Gc(); }\n\tinline void pc (char x) { *oS ++ = x; if (oS == oT) flush (); }\n\tinline void pstr (const char *s) { int __len = strlen(s); for (__f = 0; __f < __len; ++__f) pc (s[__f]); }\n\tinline void gstr (char *s) { for(__c = Gc(); __c < 32 || __c > 126 || __c == ' ';)  __c = Gc();\n\t\tfor(; __c > 31 && __c < 127 && __c != ' '; ++s, __c = Gc()) *s = __c; *s = 0; }\n\ttemplate <class I> inline bool gi (I &x) { _eof = 0;\n\t\tfor (__f = 1, __c = Gc(); (__c < '0' || __c > '9') && !_eof; __c = Gc()) { if (__c == '-') __f = -1; _eof |= __c == EOF; }\n\t\tfor (x = 0; __c <= '9' && __c >= '0' && !_eof; __c = Gc()) x = x * 10 + (__c & 15), _eof |= __c == EOF; x *= __f; return !_eof; }\n\ttemplate <class I> inline void print (I x) { if (!x) pc ('0'); if (x < 0) pc ('-'), x = -x;\n\t\twhile (x) qu[++ qr] = x % 10 + '0',  x /= 10; while (qr) pc (qu[qr --]); }\n\tstruct Flusher_ {~Flusher_(){flush();}}io_flusher_;\n} using io::pc; using io::gc; using io::pstr; using io::gstr; using io::gi; using io::print;\n\n// end fast read template by CYJian\n\n#define iter(i, a, b) for(int i=(a); i<(b); i++)\n#define rep(i, a) iter(i, 0, a)\n#define rep1(i, a) iter(i, 1, (a)+1)\n#define log(a) cerr<<\"\\033[32m[DEBUG] \"<<#a<<'='<<(a)<<\" @ line \"<<__LINE__<<\"\\033[0m\"<<endl\n#define all(a) a.begin(), a.end()\n#define fi first\n#define se second\n#define pb push_back\n#define mp make_pair\n \nusing ll=long long;\nusing pii=pair<int, int>;\n//#define int ll\nconst int MOD = 1000000007;\n\nmap<int, int> oc;\nint ar[500005];\nint pre[500005], nxt[500005];\nconstexpr int csize = 716;\n\nint cnk[705][705];\n\nsigned main() {\n    ios_base::sync_with_stdio(false); cin.tie(0);\n    int n, m; gi(n), gi(m);\n\trep(i, n) gi(ar[i]);\n\trep(i, n) {\n\t\tif(oc.count(ar[i])) pre[i] = oc[ar[i]];\n\t\telse pre[i] = -1000000000;\n\t\toc[ar[i]] = i;\n\t}\n\toc.clear();\n\tfor(int i=n-1; i>=0; i--) {\n\t\tif(oc.count(ar[i])) nxt[i] = oc[ar[i]];\n\t\telse nxt[i] = 1000000000;\n\t\toc[ar[i]] = i;\n\t}\n\tfor(int i=0,c=0; i<n; i+=csize,c++) {\n\t\tint cur = 0x3f3f3f3f;\n\t\tfor(int j=i; j<n; j++) {\n\t\t\tif(i <= pre[j]) cur = min(cur, j-pre[j]);\t\n\t\t\tif(j%csize == csize-1) cnk[c][j/csize] = cur;\n\t\t}\n\t}\n\twhile(m--) {\n\t\tint l, r; gi(l), gi(r); l--, r--;\n\t\tint cl = l/csize, cr = r/csize;\n\t\tif(cl == cr) {\n\t\t\tif(l % csize == 0 && r % csize == csize - 1) \n\t\t\t\tprint(cnk[cl][cr] == 0x3f3f3f3f ? -1 : cnk[cl][cr]);\n\t\t\telse {\n\t\t\t\tint cur = 0x3f3f3f3f;\n\t\t\t\titer(i, l, r+1) if(l <= pre[i]) cur = min(cur, i-pre[i]);\n\t\t\t\tprint(cur == 0x3f3f3f3f ? -1 : cur);\n\t\t\t}\n\t\t} else {\n\t\t\tint cl1 = cl+1, cr1 = cr-1;\n\t\t\tif(l % csize == 0) cl1--;\n\t\t\tif(r % csize == (csize-1)) cr1++;\n\t\t\tassert(l <= cl1*csize);\n\t\t\tassert((cr1+1)*csize-1 <= r);\n\t\t\tint cur = (cl1 <= cr1) ? cnk[cl1][cr1] : 0x3f3f3f3f;\n\t\t\titer(i, l, cl1*csize) {\n\t\t\t\tif(l <= pre[i]) cur = min(cur, i-pre[i]);\n\t\t\t\tif(nxt[i] <= r) cur = min(cur, nxt[i]-i);\n\t\t\t}\n\t\t\titer(i, (cr1+1)*csize, r+1) {\n\t\t\t\tif(l <= pre[i]) cur = min(cur, i-pre[i]);\n\t\t\t\tif(nxt[i] <= r) cur = min(cur, nxt[i]-i);\n\t\t\t}\n\t\t\tprint(cur == 0x3f3f3f3f ? -1 : cur);\n\t\t}\n\t\tpc('\\n');\n\t}\n}\n```",
        "postTime": 1600911113,
        "uid": 220037,
        "name": "w33z8kqrqk8zzzx33",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF522D \u3010Closest Equals\u3011"
    },
    {
        "content": "\u5b9a\u4e49 $v_x$ \u4e3a $a_x$ \u4e0e $a_x$ \u524d\u6700\u8fd1\u7684\u4e0e\u5176\u76f8\u540c\u7684\u5143\u7d20\u7684\u8ddd\u79bb\uff0c\u90a3\u4e48\u6bcf\u6b21\u8be2\u95ee\u7684\u7b54\u6848\u5c31\u662f $\\min_{x\\in[l,r]}v_x$ \u2026\u2026\u5417\uff1f\n\n\u5e76\u4e0d\uff0c\u5982\u679c $x-v_x<l$\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u79bb $x$ \u6700\u8fd1\u7684\u4e0e\u5176\u76f8\u540c\u7684\u5143\u7d20\u4e0d\u5728\u8be2\u95ee\u533a\u95f4\u5185\uff0c$v_x$ \u5c31\u4e0d\u80fd\u8ba1\u5165\u7b54\u6848\u3002\u4f46\u4e0a\u9762\u90a3\u4e2a\u5f0f\u5b50\u663e\u7136\u6ca1\u8003\u8651\u8fd9\u4e00\u70b9\u3002\n\n\u6ce8\u610f\u5230\u8be2\u95ee\u4e0d\u5f3a\u5236\u5728\u7ebf\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u628a\u8be2\u95ee\u79bb\u7ebf\u540e\u6309 $l$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\u7136\u540e $l$ \u6bcf\u589e\u5927 $1$\uff0c\u5c31\u628a\u539f\u6765 $a_l$ \u7684\u8d21\u732e\u62b9\u53bb\u3002\u7ecf\u8fc7\u8fd9\u756a\u5904\u7406\u540e\u8be2\u95ee\u7684\u7b54\u6848\u5373\u4e3a\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u95ee\u9898\u8f6c\u4e3a\u5355\u70b9\u4fee\u6539\u533a\u95f4\u67e5 min\uff0c\u5957\u4e00\u68f5\u7ebf\u6bb5\u6811\u5c31\u80fd\u505a\u5230 $O(n\\log n)$\u3002\n\n\u4ec0\u4e48\uff1f\u4f60\u95ee\u600e\u4e48\u6c42 $v$ \u6570\u7ec4\uff1f\u79bb\u6563\u5316\u4e00\u4e0b\u5457qwq\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#include<vector>\n#define ll long long\n#define ls(p) p<<1\n#define rs(p) p<<1|1\n#define fo(i,x,y) for(register int i=x;i<=y;++i)\n#define go(i,x,y) for(register int i=x;i>=y;--i)\nusing namespace std;\ninline int read(){int x=0,fh=1; char ch=getchar(); while(!isdigit(ch)){if(ch=='-') fh=-1; ch=getchar();} while(isdigit(ch)){x=(x<<1)+(x<<3)+ch-'0'; ch=getchar();} return x*fh;}\n\nconst int N=5e5+5,inf=1e9;\nint a[N],b[N],v[N],ql[N],qr[N],m,n,od[N],pre[N],suf[N],ans[N];\nstruct Node{\n\tint L,R,val;\n}tree[N<<2];\n\nvoid push_up(int x){tree[x].val=min(tree[ls(x)].val,tree[rs(x)].val);}\nvoid build(int x,int L,int R){\n\ttree[x].L=L,tree[x].R=R;\n\tif(L==R){\n\t\ttree[x].val=v[L];\n\t\treturn;\n\t} \n\tint mid=(L+R)>>1;\n\tbuild(ls(x),L,mid);\n\tbuild(rs(x),mid+1,R);\n\tpush_up(x);\n} \n\nvoid update(int x,int aim,int k){\n\tif(tree[x].L==tree[x].R){\n\t\ttree[x].val=k;\n\t\treturn;\n\t}\n\tint mid=(tree[x].L+tree[x].R)>>1;\n\tif(aim<=mid) update(ls(x),aim,k);\n\telse update(rs(x),aim,k);\n\tpush_up(x);\n}\n\nint ask(int x,int L,int R){\n\t//printf(\"ask(%d,%d,%d)\\n\",x,L,R);\n\tif(tree[x].L>=L&&tree[x].R<=R) return tree[x].val;\n\tint mid=(tree[x].L+tree[x].R)>>1,ans=inf;\n\tif(L<=mid) ans=min(ans,ask(ls(x),L,R));\n\tif(R>mid) ans=min(ans,ask(rs(x),L,R));\n\treturn ans;\n}\n\nbool cmp1(int x,int y){return a[x]<a[y];} \nbool cmp2(int x,int y){return ql[x]<ql[y];} \n\nvoid _order(){//\u79bb\u6563\u5316 \n\tint rp=1;\n\tfo(i,1,n) od[i]=i;\n\tsort(od+1,od+1+n,cmp1);\n\tfo(i,1,n){\n\t\tb[od[i]]=rp;\n\t\tif(a[od[i]]!=a[od[i+1]]) rp++;\n\t}\n\tfo(i,1,n) a[i]=b[i];\n\tfo(i,1,m) od[i]=i;\n\tsort(od+1,od+1+m,cmp2);\n\t//fo(i,1,n) printf(\"%d \",a[i]);puts(\"\");\n\t//fo(i,1,m) printf(\"%d %d\\n\",ql[od[i]],qr[od[i]]); \n}\n\nvoid get_v(){\n\tfo(i,1,n) pre[i]=-inf;\n\tfo(i,1,n){\n\t\tv[i]=i-pre[a[i]];\n\t\tif(pre[a[i]]>0)suf[pre[a[i]]]=i;\n\t\tpre[a[i]]=i;\n\t}\n\t//fo(i,1,n) printf(\"%d \",v[i]);puts(\"\");\n\t//fo(i,1,n) printf(\"%d \",suf[i]);puts(\"\"); \n}\n\nint main(){\n\tcin>>n>>m;\n\tfo(i,1,n) a[i]=read();\n\tfo(i,1,m) ql[i]=read(),qr[i]=read();\n\t_order();\n\tget_v();\n\tbuild(1,1,n); \n\tfo(i,1,m){\n\t\tint p=od[i];\n\t\tfo(j,ql[od[i-1]],ql[p]-1) if(suf[j]) update(1,suf[j],inf);\n\t\tans[p]=ask(1,ql[p],qr[p]);\n\t\tif(ans[p]>=inf-5) ans[p]=-1;\n\t}\n\tfo(i,1,m) printf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n/*\n-------------------------------------------------\n*/\n```\n",
        "postTime": 1620485105,
        "uid": 238408,
        "name": "vectorwyx",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF522D Closest Equals"
    },
    {
        "content": "## \u9898\u610f\u7b80\u8ff0\n\n\u4e0d\u5e26\u4fee\u533a\u95f4 Closest Equals\u3002\n\n## \u9898\u89e3\n\n~~\u5c31\u8fd9\u80fd\u9ed1\uff1f~~\n\n\u53ef\u8c13\u662f\u975e\u5e38\u5957\u8def\u7684\u4e00\u9053\u9898\u3002\n\n\u5f00\u59cb\u6253\u4e86\u4e2a\u56de\u6eda\u83ab\u961f\u6253\u7b97\u4ea4\u4e0a\u53bb T \u4e86\u5361\u5e38\u3002\n\n\u7ed3\u679c WA \u4e86\uff08\u96fe\u3002\n\n\u5148\u628a\u8be2\u95ee\u79bb\u7ebf\uff0c\u6309\u7167\u53f3\u7aef\u70b9\u6392\u5e8f\u3002\n\n\u7136\u540e\u8003\u8651\u7ef4\u62a4\u4e00\u4e2a\u6570\u7ec4 `pre[x]` \u8868\u793a\u6570 $x$ \u7684\u4e0a\u4e00\u4e2a\u4f4d\u7f6e\u3002\n\n\u7136\u540e\u6211\u4eec\u904d\u5386\u6bcf\u4e00\u4e2a\u8be2\u95ee\uff08\u6709\u5e8f\uff09\uff0c\u5e76\u6574\u4e00\u4e2a\u539f\u5e8f\u5217\u7684\u6307\u9488 `ptr`\uff0c\u4ece\u4e00\u5f00\u59cb\u3002\n\n\u7136\u540e\u6211\u4eec\u8bbe\u5f53\u524d\u904d\u5386\u5230\u7684\u8be2\u95ee\u662f\u7b2c $i$ \u4e2a\uff0c\u628a `ptr` \u4ece\u5f53\u524d\u7684\u4f4d\u7f6e\u4e00\u76f4\u79fb\u5230\u8be2\u95ee\u7684\u53f3\u7aef\u70b9\u3002\n\n`ptr` \u7684\u79fb\u52a8\u7684\u8fc7\u7a0b\u4e2d\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u524d\u7f00\u4fe1\u606f\uff0c\u628a\u5f53\u524d\u7684\u8d21\u732e `ptr-pre[a[ptr]]` \uff08\u5373\u5f53\u524d `ptr` \u6307\u9488\u6307\u5230\u7684\u6570\u7684\u6700\u8fd1\u4e00\u4e2a\u76f8\u7b49\u7684\u6570\uff09\u52a0\u5230 `pre[a[ptr]]` \u91cc\u3002\n\n\u79fb\u52a8\u5b8c\u6210\u540e\uff0c\u8fd9\u4e2a\u8be2\u95ee\u7684\u7b54\u6848\u5c31\u662f\u8fd9\u4e2a\u8be2\u95ee\u7684\u5de6\u53f3\u7aef\u70b9\u4ee3\u8868\u533a\u95f4\u7684\u533a\u95f4\u6700\u5c0f\u503c\u3002\n\n\u7efc\u4e0a\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u652f\u6301\u5355\u70b9\u52a0\uff0c\u533a\u95f4\u67e5\u6781\u503c\u7684\u6570\u636e\u7ed3\u6784\uff0c\u7ebf\u6bb5\u6811\u5373\u53ef\u3002\n\n\u505a\u5b8c\u8fd9\u9898\u540e\u53ef\u4ee5\u53bb\u505a\u4e00\u4e0b CF703D\u3002\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <queue>\n\nusing namespace std;\n\nconst int Maxn = 5e5 + 5;\nint n, m, isa[Maxn], pre[Maxn], ans[Maxn], sgt[Maxn << 2];\nvector < int > disc;\nstruct Queries\n{\n\tint l, r, id;\n\tbool operator < (const Queries& rhs) const\n\t{\n\t\treturn r < rhs.r;\n\t}\n} Q[Maxn];\n\nvoid ins(int p, int l, int r, int x, int v)\n{\n\tif (l == r)\n\t{\n\t\tsgt[p] = v;\n\t\treturn ;\n\t}\n\tint mid = (l + r) >> 1;\n\tif (mid >= x)\tins(p << 1, l, mid, x, v);\n\telse\tins(p << 1 | 1, mid + 1, r, x ,v);\n\tsgt[p] = min(sgt[p << 1], sgt[p << 1 | 1]);\n}\n\nint find(int p, int l, int r, int x, int y)\n{\n\tif (l > y || r < x) \treturn 2e9;\n\tif (l >= x && r <= y)\treturn sgt[p];\n\tint mid = (l + r) >> 1, ret = 2e9;\n\tif (mid >= x)\tret = min(ret, find(p << 1, l, mid, x, y));\n\tif (mid < y)\tret = min(ret, find(p << 1 | 1, mid + 1, r, x, y));\n\treturn ret;\n}\n\n// \u4ee5\u4e0a\u7684\u90e8\u5206\u4e0d\u9700\u8981\u89e3\u91ca\u5427\n\nsigned main()\n{\n\tscanf(\"%d %d\", &n, &m);\n\tfor (int i = 1; i <= n; ++i)\n\t{\n\t\tscanf(\"%d\", &isa[i]);\n\t\tdisc.push_back(isa[i]);\n\t}\n\tsort(disc.begin(), disc.end());\n\tdisc.erase(unique(disc.begin(), disc.end()), disc.end());\n\tfor (int i = 1; i <= n; ++i)\tisa[i] = lower_bound(disc.begin(), disc.end(), isa[i]) - disc.begin() + 1;\n\tfor (int i = 0; i < (Maxn << 2); ++i)\tsgt[i] = 2e9; // \u79bb\u6563\u5316 & \u7ebf\u6bb5\u6811\u8d4b\u521d\u503c\uff08\u61d2\u5f97\u5efa\u6811\uff09\n\tfor (int i = 1; i <= m; ++i)\n\t{\n\t\tscanf(\"%d %d\", &Q[i].l, &Q[i].r);\n\t\tQ[i].id = i;\n\t}\n\tsort(Q + 1, Q + 1 + m);\n\tint ptr = 1;\n\tfor (int i = 1; i <= m; ++i)\n\t{\n\t\twhile (ptr <= Q[i].r) // \u79fb\u52a8 ptr \u6307\u9488\u5230\u8be2\u95ee\u53f3\u7aef\u70b9\n\t\t{\n\t\t\tif (pre[isa[ptr]])\tins(1, 1, n, pre[isa[ptr]], ptr - pre[isa[ptr]]); // \u628a\u5f53\u524d\u8fd9\u4e2a\u6570\u7684\u8d21\u732e\u52a0\u5230\u4e0a\u4e00\u4e2a\u51fa\u73b0\u8fd9\u4e2a\u6570\u7684\u4f4d\u7f6e\n\t\t\tpre[isa[ptr]] = ptr; // \u987a\u624b\u7ef4\u62a4 pre \u6570\u7ec4\uff0c\u987a\u5e26\u4e00\u63d0\u5982\u679c\u4f60\u8981\u9884\u5904\u7406 pre \u6570\u7ec4\u7684\u8bdd\u5b9a\u4e49\u4f1a\u6709\u533a\u522b\n\t\t\t++ptr;\n\t\t}\n\t\tans[Q[i].id] = find(1, 1, n, Q[i].l, Q[i].r);\n\t\tif (ans[Q[i].id] == 2e9)\tans[Q[i].id] = -1;\n\t}\n\tfor (int i = 1; i <= m; ++i)\tprintf(\"%d\\n\", ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1596352085,
        "uid": 161849,
        "name": "cirnovsky",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF522D \u3010Closest Equals\u3011"
    },
    {
        "content": "### [\u539f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/CF522D)\n\n## \u89e3\u9898\u601d\u8def\n\n\u770b\u5230\u8fd9\u9898\u6ca1\u6709\u4fee\u6539\uff0c\u4e8e\u662f\u5c31\u60f3\u5230\u4f7f\u7528\u79bb\u7ebf\u64cd\u4f5c\uff1a\u5c06\u8be2\u95ee\u533a\u95f4\u6309\u7167\u53f3\u7aef\u70b9\u6392\u5e8f\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4f4d\u7f6e $i$\uff0c\u8bb0\u5f55\u5b83\u4e0e**\u4e0b\u4e00\u4e2a**\u548c $a_i$ \u76f8\u540c\u7684\u6570\u5b57\u7684\u8ddd\u79bb\uff0c\u8bb0\u4e3a $min_i$\uff0c\u5982\u679c $i$ \u540e\u9762\u6ca1\u6709\u627e\u5230\u76f8\u540c\u7684\u6570\u5b57\uff0c\u5219 $min_i=\\mathrm{INF}$\u3002\u56e0\u4e3a\u6211\u4eec\u662f\u6309\u7167\u53f3\u7aef\u70b9\u6709\u5e8f\u8fdb\u884c\u79bb\u7ebf\u64cd\u4f5c\u7684\uff0c\u6240\u4ee5 $min_i$ \u4e0d\u4f1a\u53d7\u5230 $r$ \u53f3\u8fb9\u6570\u5b57\u7684\u5f71\u54cd\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u53ef\u4ee5\u76f4\u63a5\u627e\u51fa $[l,r]$ \u4e2d $min_i$ \u7684\u6700\u5c0f\u503c\u3002\u6bcf\u6b21\u679a\u4e3e\u5230\u4e00\u4e2a\u4f4d\u7f6e $p$ \u65f6\u90fd\u66f4\u65b0\u4e00\u4e0b $min_{pos_{a_p}}\\gets i-pos_{a_p}$\uff0c\u5176\u4e2d $pos_{a_p}$ \u4e3a\u6570\u5b57 $a_p$ \u4e0a\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\n\n\u8fd9\u5176\u5b9e\u662f\u5355\u70b9\u4fee\u6539\u4e0e\u533a\u95f4\u6700\u503c\u7684\u95ee\u9898\uff0c\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u6574\u4e2a\u6d41\u7a0b\u662f\uff1a\n\n$\\begin{aligned}\n&\\texttt{for }i\\texttt{ in }[1,n]:\\\\\n&\\qquad \\texttt{if }pos[i]:\\\\\n&\\qquad\\qquad \\text{modify}(pos[i],i-pos[i])\\\\\n&\\qquad pos[i]\\gets i\\\\\n&\\qquad\\texttt{for }j\\texttt{ with }r[j]=i:\\\\\n&\\qquad\\qquad ans[j]\\gets\\text{query}(l[j],i)\n\\end{aligned}$\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int INF=0x7fffffff;\nint n,m,a[500005],b[500005],pos[500005],ans[500005];\nint read()\n{\n    char ch=getchar();\n    int res=0,sym=1;\n    for(;isspace(ch);ch=getchar());\n    if(ch=='-') sym=-1,ch=getchar();\n    for(;isdigit(ch);ch=getchar())  res=res*10+ch-'0';\n    return res*sym;\n}\nstruct TreeNode\n{\n    int val;\n    TreeNode *lc,*rc;\n    TreeNode(int v): val(v)\n        { lc=rc=nullptr; }\n}*rt;\ntypedef TreeNode *pNode;\nvoid build(int l=1,int r=n,pNode &i=rt)\n{\n    i=new TreeNode(INF);\n    if(l!=r)\n    {\n        int mid=(l+r)>>1;\n        build(l,mid,i->lc),build(mid+1,r,i->rc);\n    }\n}\nvoid modify(int p,int x,pNode i=rt,int l=1,int r=n)\n{\n    if(l==r)    return i->val=x,void();\n    int mid=(l+r)>>1;\n    if(mid>=p)  modify(p,x,i->lc,l,mid);\n    else    modify(p,x,i->rc,mid+1,r);\n    i->val=min(i->lc->val,i->rc->val);\n}\nint query(int lq,int rq,pNode i=rt,int l=1,int r=n)\n{\n    if(l>=lq && r<=rq)\treturn i->val;\n    int mid=(l+r)>>1,res=INF;\n    if(mid>=lq) res=min(res,query(lq,rq,i->lc,l,mid));\n    if(mid<rq)  res=min(res,query(lq,rq,i->rc,mid+1,r));\n    return res;\n}\nstruct Edge{ int to,w,nxt; }e[500005];\nint cnt,head[500005];\ninline void addEdge(int u,int v,int w)\n{\n    e[++cnt]=(Edge){v,w,head[u]};\n    head[u]=cnt;\n}\nint main()\n{\n    n=read(),m=read();\n    for(int i=1;i<=n;i++)   b[i]=a[i]=read();\n    sort(b+1,b+n+1);\n    int siz=unique(b+1,b+n+1)-b;\n    for(int i=1;i<=n;i++)   a[i]=lower_bound(b+1,b+siz,a[i])-b;\n    for(int i=1;i<=m;i++)\n    {\n        int l=read(),r=read();\n        addEdge(r,l,i);\n    }\n    build(1,n);\n    for(int i=1;i<=n;i++)\n    {\n        int x=a[i];\n        if(pos[x])\n            modify(pos[x],i-pos[x]);\n        pos[x]=i;\n        for(int j=head[i];j;j=e[j].nxt)\n            ans[e[j].w]=query(e[j].to,i);\n    }\n    for(int i=1;i<=m;i++)\n        if(ans[i]==INF)\tputs(\"-1\");\n        else    printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```\n",
        "postTime": 1627955969,
        "uid": 279800,
        "name": "ExplodingKonjac",
        "ccfLevel": 7,
        "title": "\u3010\u9898\u89e3\u3011 CF522D Closest Equals"
    },
    {
        "content": "\u597d\u9898\uff0c\u4e0d\u4f1a\u5f88\u96be\uff0c\u7701\u9009\u4e4b\u524d\u5e2e\u83dc\u9e21\u590d\u4e60\u4e86\u4e00\u4e0b\u79bb\u7ebf\u6570\u636e\u7ed3\u6784\u7684\u5957\u8def\uff08\n\n\u8fd9\u9898\u7684\u601d\u60f3\u548c $\\texttt{SDOI2009}$ HH\u7684\u9879\u94fe\u633a\u50cf\u7684\u3002\u5904\u7406\u51fa $pre_i$ \u4e3a\u6700\u8fd1\u4e00\u6b21 $a_i$ \u8fd9\u79cd\u6743\u503c\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee $[L,R]$\uff0c\u7b54\u6848\u5373\u4e3a\uff1a\n\n$$\n\\min\\limits_{L\\leq i\\leq R}\\{i-pre_i\\}(pre_i\\geq L)\n$$\n\n\u8fd9\u4e2a $pre_i\\geq L$ \u7684\u9650\u5236\u80fd\u4e0d\u80fd\u53bb\u6389\u5462\uff1f\u5f53\u7136\u53ef\u4ee5\u3002\u5bf9\u4e8e\u4e00\u4e2a $i-pre_i$\uff0c\u6211\u4eec\u53ea\u5728 $pre_i$ \u5904\u7edf\u8ba1\u8d21\u732e\uff0c\u5bf9\u8be2\u95ee\u53f3\u7aef\u70b9\u6392\u5e8f\u79bb\u7ebf\u5904\u7406\uff0c\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u51fa\u73b0\u8d21\u732e\u7684 $i$ \u548c $pre_i$ \u90fd\u51fa\u73b0\u5728\u8be2\u95ee $[L,R]$ \u5185\u4e86\u3002\n\n\u5f53\u7136\u6211\u4eec\u4e5f\u6709\u5176\u4ed6\u66f4\u7b80\u5355\u7c97\u66b4\u7684\u5728\u7ebf\u5904\u7406\u65b9\u6cd5\u3002\u5bf9\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u4e00\u4e2a\u4ee5 $pre_i$ \u4e3a\u5173\u952e\u5b57\u7684 $i-pre_i$ \u7684\u540e\u7f00 $\\min$\uff0c\u7136\u540e\u67e5\u8be2\u7684\u65f6\u5019\u76f4\u63a5\u4e8c\u5206\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(Q\\log^2 n)$\u3002\n\n\u8fd9\u91cc\u7ed9\u51fa\u7b2c\u4e00\u79cd\u505a\u6cd5\u7684\u5b9e\u73b0awa\n\n```cpp\n/* stuff you should look for\n\t* int overflow, array bounds, uppercase/lowercase\n\t* special cases (n=1?)\n\t* do sth. instead of nothing and stay organized\n\t* WRITE STUFF DOWN\n\t* DON'T GET STUCK ON ONE APPROACH\n*/\n#include<cstdio>\n#include<algorithm>\nconst int inf=0x3f3f3f3f;\nint num=0;\nstruct node {int l,r,id;}q[500005];\ninline bool cmp(const node &x,const node &y) {return x.r<y.r;}\nstruct SegmentTree {\n\t#define ls p<<1\n\t#define rs p<<1|1\n\tint n,mn[1600005];\n\tinline int min(const int &x,const int &y) {return x<y? x:y;}\n\tinline void init(int n) {this->n=n; for(register int i=1;i<=4*n;++i) mn[i]=inf;}\n//\tinline void print(int p,int l,int r) {printf(\"%d %d %d\\n\",l,r,mn[p]); if(l==r) return; int mid=l+r>>1; print(ls,l,mid); print(rs,mid+1,r);}\n//\tinline void show() {print(1,1,n);}\n\tinline void _modify(int p,int l,int r,int x,int val) {\n\t\tif(l==r) {mn[p]=val; return;}\n\t\tint mid=l+r>>1;\n\t\tif(x<=mid) _modify(ls,l,mid,x,val);\n\t\telse _modify(rs,mid+1,r,x,val);\n\t\tmn[p]=min(mn[ls],mn[rs]);\n//\t\tprintf(\"mod=%d %d %d\\n\",l,r,mn[p]);\n\t}\n\tinline int _ask(int p,int l,int r,int L,int R) {\n//\t\tprintf(\"ask=%d %d\\n\",l,r);\n\t\tif(L<=l&&r<=R) return mn[p];\n\t\tint mid=l+r>>1;\n\t\tif(R<=mid) return _ask(ls,l,mid,L,R);\n\t\tif(L>mid) return _ask(rs,mid+1,r,L,R);\n\t\treturn min(_ask(ls,l,mid,L,mid),_ask(rs,mid+1,r,mid+1,R));\n\t}\n\tinline void modify(int pos,int v) {_modify(1,1,n,pos,v);}\n\tinline int ask(int L,int R) {return _ask(1,1,n,L,R);}\n}SGT;\nint res[500005],a[500005],b[500005],pre[500005];\ninline int read() {\n\tregister int x=0,f=1;register char s=getchar();\n\twhile(s>'9'||s<'0') {if(s=='-') f=-1;s=getchar();}\n\twhile(s>='0'&&s<='9') {x=x*10+s-'0';s=getchar();}\n\treturn x*f;\n}\nint main() {\n\tint n=read(),Q=read(); SGT.init(n);\n\tfor(register int i=1;i<=n;++i) b[++num]=a[i]=read();\n\tstd::sort(b+1,b+1+num); num=std::unique(b+1,b+1+num)-b-1;\n\tfor(register int i=1;i<=n;++i) a[i]=std::lower_bound(b+1,b+1+num,a[i])-b;\n//\tfor(register int i=1;i<=n;++i) printf(\"%d \",a[i]); printf(\"\\n\"); \n\tfor(register int i=1;i<=Q;++i) {q[i].l=read();q[i].r=read();q[i].id=i;}\n\tstd::sort(q+1,q+1+Q,cmp); int cur=1;\n\tfor(register int i=1;i<=Q;++i) {\n\t\twhile(cur<=q[i].r) {\n\t\t\tif(pre[a[cur]]) SGT.modify(pre[a[cur]],cur-pre[a[cur]]);//printf(\"?=%d %d\\n\",pre[a[cur]],cur-pre[a[cur]]);\n//\t\t\tprintf(\"%d %d %d\\n\",cur,pre[a[cur]],cur-pre[a[cur]]);\n\t\t\tpre[a[cur]]=cur; ++cur; \n\t\t}\n\t\tint tmp=SGT.ask(q[i].l,q[i].r);\n\t\tif(tmp==inf) res[q[i].id]=-1;\n\t\telse res[q[i].id]=tmp;  \n//\t\tSGT.show();\n//\t\tprintf(\"L,R=%d %d %d ans=%d\\n\",cur,q[i].l,q[i].r,tmp);\n\t\t\n\t}\n\tfor(register int i=1;i<=Q;++i) printf(\"%d\\n\",res[i]);\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1617503306,
        "uid": 95244,
        "name": "tommymio",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF522D \u3010Closest Equals\u3011"
    },
    {
        "content": "## \u5199\u5728\u524d\u9762\n\n\u6ce8\uff1a\u56e0\u4e3a\u53d8\u91cf\u540d\u4e2d\u6709\u4e0b\u5212\u7ebf\uff0c\u6240\u4ee5\u6709\u4e9b\u5730\u65b9\u4f7f\u7528\u7684\u662f\u4ee3\u7801\u5757\u800c\u6ca1\u6709\u4f7f\u7528 $\\text{LateX}$ \u6e32\u67d3\uff0c\u6073\u8bf7\u7ba1\u7406\u5927\u5927\u539f\u8c05\u3002\n\n\u8f6c\u4e86\u4e00\u5708\u9898\u89e3\u53d1\u73b0\u6ca1\u6709\u7528\u83ab\u961f\u7684\uff1f\n\n~~\u552f\u4e00\u4e00\u4e2a\u6d89\u53ca\u5230\u7684\u8c8c\u4f3c\u8fd8\u88ab\u5361\u4e86\uff1f~~\n\n\u90a3\u4e48\u6211\u5c31\u6765\u4e00\u53d1\u56de\u6eda\u83ab\u961f\u5427\u3002\n\n\u9898\u9762\uff1a[CF522D Closest Equals](https://www.luogu.com.cn/problem/CF522D)\n\n## Solution\n\n\u4e00\u5f00\u59cb\u628a\u9898\u76ee\u8bfb\u9519\u4e86\uff0c\u4ee5\u4e3a\u6c42\u7684\u662f\u4e00\u6bb5\u533a\u95f4\u5185\u6700\u8fdc\u7684\u4e24\u4e2a\u76f8\u540c\u7684\u6570\u7684\u8ddd\u79bb\uff0c\n\n~~\u8fd9\u4e0d\u5c31\u56de\u6eda\u83ab\u961f\u677f\u5b50\u561b~~\u3002\n\n\u8c03\u534a\u5929\u53d1\u73b0\u662f\u6c42\u6700\u8fd1\u7684\u4e24\u4e2a\u76f8\u540c\u7684\u6570\u7684\u8ddd\u79bb\uff0c\u60f3\u60f3\u600e\u4e48\u7528\u83ab\u961f\u7ef4\u62a4\u3002\n\n\u8ddf\u7740\u56de\u6eda\u83ab\u961f\u7684\u505a\u6cd5\uff0c\u5148\u8fdb\u884c\u79bb\u6563\u5316\u3001\u5206\u5757\u3001\u6392\u5e8f\u8fd9\u4e00\u7c7b\u57fa\u672c\u64cd\u4f5c\u3002\n\n\u7136\u540e\u6bcf\u6b21\u8f6e\u5230\u4e00\u4e2a\u65b0\u5757\u65f6\uff0c\u6211\u4eec\u4e0d\u662f\u8981\u79fb\u52a8\u4e24\u7aef\u70b9\u5230\u5757\u7684\u53f3\u7aef\u561b\u3002\n\n\u6211\u4eec\u8981\u67e5\u8be2\u7684\u533a\u95f4\u56e0\u6b64\u5c31\u5206\u6210\u4e86\u4e24\u5757\uff0c\u6682\u4e14\u79f0\u4f5c\u5de6\u5757\u548c\u53f3\u5757\u3002\n\n\u9898\u76ee\u8981\u6c42\u662f\u6c42\u6700\u8fd1\u7684\uff0c\u90a3\u4e48\u53ea\u9700\u7edf\u8ba1\u76f8\u90bb\u7684\u4e24\u4e2a\u76f8\u540c\u7684\u6570\u7684\u8d21\u732e\u3002\n\n\u5f00\u56db\u4e2a\u6570\u7ec4 ```cntr[x], cntr_pre[x], cntl_t[x], cntl_pre_t[x]```\uff0c\u5206\u522b\u8868\u793a\u4e00\u4e2a\u6570 $x$ \u5728\u53f3\u5757\u7684\u6700\u5c0f\u7684\u4f4d\u7f6e\uff0c$x$ \u5728\u53f3\u5757\u4e2d\u4e0a\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c$x$ \u5728\u5de6\u5757\u4e2d\u7684\u6700\u5927\u4f4d\u7f6e\uff0c$x$ \u5728\u5de6\u5757\u4e2d\u4e0a\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\n\n\u753b\u6210\u56fe\u5927\u4f53\u662f\u8fd9\u4e2a\u6837\u5b50\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/t5agh6xs.png)\n\n\u5047\u8bbe\u56fe\u4e2d\u6807\u8bb0\u7684\u90fd\u662f\u4e00\u4e2a\u6570\uff1a\n\n- \u5982\u679c\u5728\u5de6\u5757\u4e2d\u53c8\u679a\u4e3e\u5230\u4e00\u4e2a\u6570 $pos_1$\uff0c\u5b83\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u663e\u7136\u662f ```cntl_pre_t - pos1```\u3002\n- \u5982\u679c\u5728\u53f3\u5757\u4e2d\u53c8\u679a\u4e3e\u5230\u4e00\u4e2a\u6570 $pos_2$\uff0c\u5b83\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u663e\u7136\u662f\n```pos2 - cntr_pre```\u3002\n- \u56e0\u4e3a\u5de6\u5757\u548c\u53f3\u5757\u4e4b\u95f4\u53ef\u80fd\u4e5f\u4f1a\u6709\u8d21\u732e\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u7edf\u8ba1 ```cntr - cntl_t```\u3002\n\n\n#### \u4e00\u4e9b\u5c0f\u7ec6\u8282\uff1a\n\n- \u6ce8\u610f\u6ca1\u6709\u76f8\u540c\u7684\u6570\u65f6\u8981\u8f93\u51fa $-1$\uff1b\n- \u5728\u5de6\u5757\u6216\u8005\u53f3\u5757\u4e2d\u7edf\u8ba1\u7b54\u6848\u65f6\uff0c\u5982\u679c\u5176\u4e2d\u67d0\u4e00\u4e2a\u503c\u4e0d\u5b58\u5728\u5c31\u4e0d\u8981\u7edf\u8ba1\u7b54\u6848\u4e86\u3002\n\n\n## Code\n\n\n```cpp\n/*\nWork by: Suzt_ilymics\nKnowledge: ??\nTime: O(??)\n*/\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#define LL long long\n#define orz cout<<\"lkp AK IOI!\"<<endl\n\nusing namespace std;\nconst int MAXN = 5e5+5;\nconst int INF = 1e9+7;\nconst int mod = 1e9+7;\n\nstruct Ques{\n    int l, r, bh;\n}q[MAXN];\n\nint n, m; \nint L = 1, R = n, preL = 0, Ans, Res, _L;\nint a[MAXN], date[MAXN], date_num = 0;\nint lef[MAXN], rig[MAXN], bel[MAXN];\nint cntr[MAXN], cntr_pre[MAXN], cntl_t[MAXN], cntl_pre_t[MAXN];\nint ans[MAXN];\n\nint read(){\n    int s = 0, f = 0;\n    char ch = getchar();\n    while(!isdigit(ch))  f |= (ch == '-'), ch = getchar();\n    while(isdigit(ch)) s = (s << 1) + (s << 3) + ch - '0' , ch = getchar();\n    return f ? -s : s;\n}\n\nbool cmp(Ques x, Ques y) { return bel[x.l] == bel[y.l] ? x.r < y.r : x.l < y.l; } //\u6309\u5757\u6392\u5e8f \n\nvoid Init() {\n    n = read(), m = read();\n    for(int i = 1; i <= n; ++i) a[i] = date[i] = read();\n    sort(date + 1, date + n + 1); date[0] = -INF; //\u79bb\u6563\u5316 \n    for(int i = 1; i <= n; ++i) if(date[i] != date[i - 1]) date[++date_num] = date[i];\n    for(int i = 1; i <= n; ++i) a[i] = lower_bound(date + 1, date + date_num + 1, a[i]) - date;\n    for(int i = 1; i <= date_num; ++i) cntr[i] = cntr_pre[i] = ans[i] = INF; \n    for(int i = date_num + 1; i <= m; ++i) ans[i] = INF; //\u521d\u59cb\u5316\u4e3a\u6781\u5927\u503c \n    \n    int len = sqrt(n + 0.5);//\u5206\u5757 \n    int block_num = n / len;\n    for(int i = 1; i <= block_num; ++i) lef[i] = rig[i - 1] + 1, rig[i] = rig[i - 1] + len; \n    if(rig[block_num] < n) {\n        ++ block_num;\n        lef[block_num] = rig[block_num - 1] + 1;\n        rig[block_num] = n;\n    }\n    for(int i = 1; i <= block_num; ++i) \n        for(int j = lef[i]; j <= rig[i]; ++j) \n            bel[j] = i;\n}\n\nvoid Add(int pos, int &ans_) {\n    int x = a[pos];\n    cntr[x] = min(cntr[x], pos); //\u66f4\u65b0\u53f3\u5757\u4e2dx\u7684\u6700\u5c0f\u7684\u4f4d\u7f6e\n    if(cntr_pre[x] != INF) ans_ = min(ans_, pos - cntr_pre[x]); // \u53ea\u6709x\u5728\u53f3\u5757\u4e2d\u51fa\u73b0\u8fc7\u624d\u7edf\u8ba1\u7b54\u6848\n    cntr_pre[x] = pos; // \u66f4\u65b0\n}\nvoid Add_tem(int pos, int &ans_, int type) {\n    int x = a[pos];\n    cntl_t[x] = max(cntl_t[x], pos); // \u66f4\u65b0\u5de6\u5757\u4e2dx\u7684\u6700\u5927\u4f4d\u7f6e\n    if(cntl_pre_t[x]) ans_ = min(ans_, cntl_pre_t[x] - pos); //\u53ea\u6709x\u5728\u5de6\u5757\u4e2d\u51fa\u73b0\u8fc7\u624d\u7edf\u8ba1\u7b54\u6848\n    cntl_pre_t[x] = pos; //\u66f4\u65b0\n    if(cntr[x] != INF && cntl_t[x] && type) ans_ = min(ans_, cntr[x] - cntl_t[x]); //\u7edf\u8ba1\u5de6\u53f3\u5757\u4e4b\u95f4\u7684\u8d21\u732e\n}\n\nvoid Del(int pos) { cntr[a[pos]] = cntr_pre[a[pos]] = INF; }\nvoid Del_tem(int pos) { cntl_t[a[pos]] = cntl_pre_t[a[pos]] = 0; }\n\nint main()\n{\n    Init();\n    for(int i = 1; i <= m; ++i) q[i].l = read(), q[i].r = read(), q[i].bh = i;\n    sort(q + 1, q + m + 1, cmp);\n    for(int i = 1; i <= m; ++i) { //\u56de\u6eda\u83ab\u961f\u57fa\u64cd\uff1f\n        if(preL != bel[q[i].l]) {\n            while(R > rig[bel[q[i].l]]) Del(R--);\n            while(L <= rig[bel[q[i].l]]) Del(L++);\n            Ans = INF, R = rig[bel[q[i].l]], preL = bel[q[i].l];\n        }\n        if(bel[q[i].l] == bel[q[i].r]) {\n            for(int j = q[i].r; j >= q[i].l; --j) Add_tem(j, ans[q[i].bh], 0); //\u5012\u5e8f\u679a\u4e3e\u65b9\u4fbf\u7edf\u8ba1\u7b54\u6848 \n            for(int j = q[i].r; j >= q[i].l; --j) Del_tem(j);\n        } else {\n            while(R < q[i].r) Add(++R, Ans);\n            _L = L, Res = Ans;\n            while(_L > q[i].l) Add_tem(--_L, Res, 1);\n            ans[q[i].bh] = Res;\n            while(_L < L) Del_tem(_L++);\n        }\n    }\n    for(int i = 1; i <= m; ++i) printf(\"%d\\n\", ans[i] == INF ? -1 : ans[i]);\n    return 0;\n}\n```",
        "postTime": 1616899932,
        "uid": 230580,
        "name": "Suzt_ilymtics",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF522D Closest Equals"
    }
]