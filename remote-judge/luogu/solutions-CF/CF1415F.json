[
    {
        "content": "\u6309\u65f6\u95f4\u6392\u5e8f\uff0c\u4ee4$mi[i]$\u8868\u793a\u5f53\u524d\u5728\u7b2c$i$\u4e2a\u70b9\uff0c$i-1$\u53ca\u4e4b\u524d\u6240\u6709\u7684\u70b9\u90fd\u5df2\u7ecf\u63a5\u5230\u6216\u8005\u7528\u5206\u8eab\u63a5\u5230\u6240\u8981\u7528\u7684\u6700\u77ed\u65f6\u95f4\uff08\u7528\u5206\u8eab\u63a5\u8fd9\u4e2a\u70b9\uff09\uff0c$dp[i][j]$\u8868\u793a\u5f53\u524d\u5728\u70b9$i$\uff0c\u5206\u8eab\u7559\u7ed9\u4e4b\u540e\u7684\u70b9$j$\u662f\u5426\u53ef\u884c\u3002($j>i$)\n\n\u7136\u540e\u5206\u60c5\u51b5\u8ba8\u8bba\uff1a\n\n\u4e00\u3001\u5206\u8eab\u662f\u7559\u7ed9\u5f53\u524d\u70b9\u2014\u2014\u90a3\u4e48\u6211\u4eec\u5728$mi[i]$\u7684\u65f6\u95f4\u653e\u4e0b\u5206\u8eab\uff0c\u7136\u540e\u6709\u4e24\u79cd\u9009\u62e9\uff1a\n\n1.\u76f4\u63a5\u5230\u8fbe$i+1$\uff0c\u66f4\u65b0$mi[i+1]$\u3002\n\n2.\u5148\u5f80\u540e\u5230\u8fbe$i+1$\u540e\u9762\u7684\u70b9\uff0c\u653e\u4e0b\u5206\u8eab\uff0c\u7136\u540e\u518d\u8d76\u56de$i+1$\uff0c\u5373\u66f4\u65b0$dp[i+1][j]$\n\n\u4e0a\u8ff0\u4e24\u79cd\u90fd\u8981\u6ce8\u610f\u4e00\u5b9a\u8981\u7b49\u5230$i$\u63a5\u5230\u4ee5\u540e\u624d\u80fd\u66f4\u65b0\u3002\n\n\u4e8c\u3001\u5206\u8eab\u662f\u7559\u7ed9\u540e\u9762\u7684\u2014\u2014\u90a3\u4e48\u5f53\u524d\u5728\u70b9$i$\u4e00\u5b9a\u662f$t[i]$\u3002\n\n1.\u5206\u8eab\u4e0d\u662f\u7559\u7ed9$i+1$\u7684\uff0c\u90a3\u4e48\u53ea\u80fd\u8001\u8001\u5b9e\u5b9e\u7b49$t[i]$\u63a5\u5230\u4ee5\u540e\u7136\u540e\u8d76\u5230$i+1$\uff0c\u5982\u679c\u53ef\u4ee5\u8d76\u5230\u90a3\u4e48$dp[i+1][j]|=dp[i][j]$\n\n2.\u5206\u8eab\u662f\u7559\u7ed9$i+1$\u7684\uff0c\u518d\u5206\u4e24\u79cd\u8ba8\u8bba\n\n(1)\u76f4\u63a5\u8d70\u5230$i+2$\uff0c\u66f4\u65b0$i+2$\u7684$mi$\u3002\n\n(2)\u5148\u51b2\u5230$i+2$\u4e4b\u540e\u7684\u653e\u4e0b\u5206\u8eab\uff0c\u7136\u540e\u518d\u8d76\u56de$i+2$\u3002\n\n\u6ce8\u610f\u548c$i+1$\u5206\u8eab\u63a5\u5230\u7684\u65f6\u95f4\u53d6$max$\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u6ce8\u610f\u70b9\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u6700\u7ec8\u7684$mi[i]$\u5927\u4e8e\u4e86$t[i]$\uff0c\u5e76\u4e0d\u610f\u5473\u7740\u6574\u4e2a\u4e0d\u53ef\u884c\uff0c\u53ea\u662f\u4e0d\u53ef\u80fd\u5b58\u5728\u5904\u4e8e$i$\uff0c\u524d\u9762$i-1$\u4e2a\u5168\u90e8\u641e\u5b9a\u4e86\u7684\u60c5\u51b5\uff08\u8fd8\u53ef\u80fd\u662f\u5206\u8eab\u7559\u7ed9\u4ed6\uff09\uff0c\u76f4\u63a5\u8df3\u8fc7\u8fd9\u4e00\u5c42\u7684\u8f6c\u79fb\u5373\u53ef\u3002\n```cpp\nint _abs(int x){return x<0 ? -x : x;}\nint t[N],a[N];\nint n,mi[N]; \nbool dp[N][N]; \nbool check(int x,int y){\n    return t[y]-t[x]>=_abs(a[x]-a[y]);\n}\n \nsigned main()\n{\n    n=read();\n    for(int i=1;i<=n;i++) t[i]=read(),a[i]=read();\n    memset(dp,0,sizeof(dp));\n    for(int i=1;i<=n;i++) mi[i]=INF;\n    t[0]=0; a[0]=0;\n    mi[0]=0;\n    for(int i=0;i<n;i++){\n        if(mi[i]>t[i]) continue;\n        //the clone is in the ith position-mintime(mi) \n        //1.go to the i+1th and put the clone at i+1th position\n        checkmin(mi[i+1],max(mi[i]+_abs(a[i]-a[i+1]),t[i]));\n        //2.go to another position-j,put the clone,and go back to the i+1th position\n        //remember to wait for the ith clone to be used\n        for(int j=i+2;j<=n;j++){\n            int go=max(t[i],mi[i]+_abs(a[i]-a[j]));\n            int back=_abs(a[j]-a[i+1]);\n            if(go+back<=t[i+1]) dp[i+1][j]=1;\n        }\n \n        //the clone is not in the ith position\n        //1.the clone is not used for the i+1th\n        for(int j=i+2;j<=n;j++) if(check(i,i+1)) dp[i+1][j]|=dp[i][j];\n        //2.the clone is for the i+1th\n        //2(1):directly goto the i+2th, update the minitime of i+2th(wait for the i+1th)\n        if(dp[i][i+1]) checkmin(mi[i+2],max(t[i+1],t[i]+_abs(a[i]-a[i+2])));\n        //2(2):go to another position j,and go back to the i+2th\n        if(dp[i][i+1]){\n            for(int j=i+3;j<=n;j++){\n                int go=max(t[i+1],t[i]+_abs(a[i]-a[j]));\n                int back=_abs(a[j]-a[i+2]);\n                if(go+back<=t[i+2]) dp[i+2][j]=1;\n            }\n        }\n    }\n    if(mi[n]<=t[n]||dp[n-1][n]) puts(\"YES\");\n    else puts(\"NO\");\n    return 0;\n}\n```",
        "postTime": 1609511270,
        "uid": 69107,
        "name": "_tourist_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1415F \u3010Cakes for Clones\u3011"
    },
    {
        "content": "dyls nb \u55f7\uff0c\u5207 2900 \u7684\u9898\uff01~~\u867d\u7136\u6211\u4e5f\u6ca1\u770b\u9898\u89e3\uff08\u548b\u53c8\u88c5\u8d77\u6765\u4e86\uff09~~\n\n~~\u7136\u540e\u6211\u7684\u590d\u6742\u5ea6\u597d\u50cf\u6bd4 dyls \u4f18~~\n\n---\n\n\u628a\u8fd9\u9898 A \u6389\u7684\u65f6\u5019\u662f**\u5047\u7684**\u70ed\u6cea\u76c8\u7736\u2026\u2026\u5468\u5929\u641e\u4e86\u4e00\u4e0b\u5348\u8fd9\u4e2a\u9898\u5230\u6700\u540e\u90fd\u6ca1\u8c03\u51fa\u6765\uff0c\u4eca\u5929\u7adf\u7136\u4e00\u4e0b\u5b50\u5c31\u628a\u9519\u8bef\u627e\u51fa\u6765\u4e86\uff0c\u611f\u52a8\u4e2d\u56fd\uff08\n\n\u4ea4\u4e86 22 \u6b21\uff0c\u6709[\u63d0\u4ea4\u8bb0\u5f55](https://codeforces.ml/submissions/tzcWhoIsYcxsCleverestSon/contest/1415)\u4e3a\u8bc1\uff0c\u867d\u7136\u8fdc\u62b5\u4e0d\u4e0a 455D \u8fd9\u4e2a\u4ea4\u4e86 50 \u6b21\u7684\uff08\n\n---\n\n~~\u4e0b\u9762\u626f\u6b63\u9898~~\n\n\u6211\u4eec\u8003\u8651\u6309\u7167\u65f6\u95f4\u987a\u5e8f\uff0c\u6bcf\u4e2a\u86cb\u7cd5\u662f\u88ab\u672c\u4eba\u8fd8\u662f\u88ab\u5206\u8eab\u6536\u96c6\u4e86\uff0c\u8fd9\u6837\u4e00\u4e2a 01 \u5e8f\u5217\u3002\u8003\u8651\u5bf9\u4e00\u4e2a particular \u7684 01 \u5e8f\u5217\u8003\u8651\u662f\u5426\u80fd\u591f\u5b9e\u73b0\u3002\n\n\u6211\u4eec\u8003\u8651\u4ee5\u65f6\u95f4\u4e3a\u6a2a\u8f74\uff0c\u4f4d\u7f6e\u4e3a\u7eb5\u8f74\u5efa\u76f4\u89d2\u5750\u6807\u7cfb\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u753b\u51fa\u8fd9\u4e2a\u4eba\u7684\u884c\u52a8\u8f68\u8ff9\u3002\u90a3\u4e48\u8fd9\u4e2a 01 \u5e8f\u5217\u7684\u9650\u5236\u662f\u5206 0 \u548c 1\uff1a\u88ab\u672c\u4eba\u6536\u96c6\u90a3\u5c31\u662f\u884c\u52a8\u8f68\u8ff9\u5fc5\u987b\u7ecf\u8fc7\u8fd9\u4e2a\u70b9\uff1b\u88ab\u5206\u8eab\u6536\u96c6\u7684\u8bdd\uff0c\u90a3\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u8fd9\u6837\u7684\u86cb\u7cd5\uff0c\u884c\u52a8\u8f68\u8ff9\u5fc5\u987b\u7a7f\u8fc7 $y=$ \u5f53\u524d\u86cb\u7cd5\u4f4d\u7f6e\uff0c\u5e76\u4e14\u5de6\u7aef\u662f\u4e0a\u4e00\u4e2a\u86cb\u7cd5\u7684\u65f6\u95f4\uff0c\u53f3\u7aef\u662f\u8fd9\u4e2a\u86cb\u7cd5\u7684\u65f6\u95f4\uff0c\u8fd9\u6837\u4e00\u6761\u6c34\u5e73\u7ebf\u3002\u6ce8\u610f\u5230\u672c\u4eba\u6536\u96c6\u7684\u86cb\u7cd5\u80fd\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u7684\u786e\u5b9a\u884c\u52a8\u8f68\u8ff9\uff0c\u6bd4\u8f83\u7a33\u5b9a\uff0c\u4e8e\u662f\u6211\u4eec\u4ee5\u5b83\u4e3a\u9636\u6bb5\u8003\u8651\u3002\n\n\u90a3\u4e48\u4e24\u4e2a\u76f8\u90bb\u7684\u88ab\u672c\u4eba\u6536\u96c6\u86cb\u7cd5\u4e4b\u95f4\u4f1a\u662f\u4ec0\u4e48\u6837\u7684\u5462\u3002\u5047\u8bbe\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a\u5206\u8eab\u6536\u96c6\u7684\u86cb\u7cd5\uff0c\u6ca1\u6709\u7684\u8bdd\u540e\u9762\u53e6\u8bf4\u3002\u90a3\u4e48\u663e\u7136\u6700\u5de6\u8fb9\u540e\u9762\u7684\u90fd\u4e00\u5b9a\u662f\u5728\u672c\u9636\u6bb5\u5185\u88ab\u7a7f\u8fc7\uff1b\u800c\u6700\u5de6\u8fb9\u7684\u90a3\u4e2a\u6240\u5bf9\u5e94\u7684\u6c34\u5e73\u7ebf\u4e00\u5b9a\u7a7f\u8fc7\u4e86\u5de6\u7aef\u70b9\u6240\u5728\u7ad6\u76f4\u7ebf\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b83\u53ef\u80fd\u5148\u4e8e\u6216\u540e\u4e8e\u5de6\u7aef\u70b9\u88ab\u6536\u96c6\u3002\u540c\u7406\uff0c\u53f3\u7aef\u70b9\u540e\u9762\u7b2c\u4e00\u4e2a\u4e5f\u53ef\u80fd\u5148\u4e8e\u53f3\u7aef\u70b9\u88ab\u6536\u96c6\u3002\u8fd9\u6837\u4e00\u6765\u6211\u4eec\u53ef\u4ee5\u5f88\u81ea\u7136\u7684\u60f3\u51fa\u4e00\u4e2a DP \u72b6\u6001\uff1a$dp_{i,0/1}$ \u8868\u793a\u8003\u8651\u5230\u86cb\u7cd5 $i$ \u4e14 $i$ \u88ab\u672c\u4eba\u6536\u96c6\uff0c\u7136\u540e $i+1$ \u662f\u5426\u88ab\u5206\u8eab\u6536\u96c6\u4e14\u5728\u672c\u9636\u6bb5\u5185\u88ab\u6536\u96c6\uff0c\u8fd9\u79cd\u72b6\u6001\u662f\u5426\u80fd\u505a\u5230\u3002\n\n\u8f6c\u79fb\u7684\u8bdd\u5c31\u76f4\u63a5\u679a\u4e3e\u672c\u9636\u6bb5\u5de6\u7aef\u70b9 $j$\u3002\u7136\u540e\u663e\u7136\u9700\u8981\u4ece $j\\to i$\uff0c\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u4ece $j$ \u5f00\u59cb\u51fa\u53d1\u5230\u67d0\u4e2a\u5730\u65b9\u4e00\u8fde\u4e32\u90fd\u662f\u88ab\u5206\u8eab\u6536\u96c6\uff0c\u7684\u6700\u5c0f\u5230\u8fbe\u65f6\u95f4\uff08\u8d2a\u5fc3\u5c31\u53ef\u4ee5\u4e86\uff0c\u6ce8\u610f\u6bcf\u6b21\u9700\u8981\u548c\u6c34\u5e73\u7ebf\u5de6\u7aef\u70b9\u53d6 $\\max$\uff09\u3002\u56e0\u4e3a $j$ \u5bf9\u5e94\u72b6\u6001\u53ef\u80fd\u662f $0/1$\uff0c\u6240\u4ee5\u9884\u5904\u7406\u7684\u65f6\u5019\u9700\u8981\u5206\u5f00\u8003\u8651\u662f\u5426\u9700\u8981\u7ecf\u8fc7 $j+1$\u3002\u7136\u540e\u4e5f\u9700\u8981\u6839\u636e $i$ \u5bf9\u5e94 $0/1$ \u5224\u65ad\u662f\u5426\u9700\u8981\u7ecf\u8fc7 $i+1$\u3002\u8fd9\u65f6\u5019\u6ce8\u610f\u4e5f\u8981\u548c\u6c34\u5e73\u7ebf\u5de6\u7aef\u70b9\u53d6 $\\max$\uff0c\u8fd9\u5c31\u662f\u5bfc\u81f4\u6211\u8c03\u8fd9\u4e48\u957f\u65f6\u95f4\u7684\u539f\u56e0\u3002\n\n\u4f46\u8fd9\u6837\u8003\u8651\u8fd8\u4e0d\u5b8c\u5907\uff0c\u524d\u9762\u9057\u7559\u4e86\u4e00\u4e2a\u95ee\u9898\uff1a\u672c\u9636\u6bb5\u5185\u53ef\u80fd\u4e0d\u5b58\u5728\u88ab\u5206\u8eab\u6536\u96c6\u7684\u70b9\u3002\u8fd9\u79cd\u60c5\u51b5\u7a0d\u5fae\u6709\u70b9\u9ebb\u70e6\u3002\u90a3\u4e48\u5c31\u4f1a\u51fa\u73b0\u8fd9\u79cd\u73b0\u8c61\uff1a$i+1$ \u7684\u6c34\u5e73\u7ebf\u4f1a\u8d2f\u7a7f\u597d\u51e0\u6761\u7ad6\u76f4\u7ebf\uff0c\u90a3\u4e48\u524d\u9762\u90a3\u4e9b\u7ad6\u76f4\u7ebf\u6240\u5bf9\u5e94\u7684\u53f3\u8fb9\u7684\u88ab\u5206\u8eab\u6536\u96c6\u7684\u70b9\u5c31\u4e0d\u518d\u662f $+1$ \u4e86\uff0c\u800c\u8981\u518d\u5f80\u540e\u96c6\u4e2d\u5230 $i+1$\u3002\n\n\u4e0d\u8fc7\u8fd8\u662f\u53ef\u505a\u7684\u3002\u51e0\u7ecf\u5c1d\u8bd5\uff0c\u53d1\u73b0\u53ef\u4ee5\u679a\u4e3e $i+1$ \u662f\u5728\u54ea\u4e24\u4e2a\u76f8\u90bb\u86cb\u7cd5 $j,j+1$ \u4e4b\u95f4\u88ab\u6536\u96c6\u7684\u3002\u53c8\u5206\u4e3a\u4e24\u7c7b\uff1a\n1. \u4e24\u4e2a\u86cb\u7cd5\u90fd\u662f\u88ab\u672c\u4eba\u6536\u96c6\u3002\u8fd9\u79cd\u60c5\u51b5\u8f83\u7b80\u5355\uff0c\u56e0\u4e3a\u53ea\u80fd\u662f $dp_{j,0}$\uff0c$j+1$ \u672c\u6765\u5c31\u4e0d\u662f\u5206\u8eab\u6536\u96c6\u7684\u3002\u7136\u540e\u9700\u8981 $j\\to i+1\\to j+1\\to i$\uff0c$j+1\\to i$ \u53ef\u4ee5\u533a\u95f4 DP \u9884\u5904\u7406\uff1b\n1. $j$ \u662f\u5206\u8eab\u6536\u96c6\uff0c$j+1$ \u662f\u672c\u4eba\u6536\u96c6\u3002\u6211\u4eec\u8003\u8651\u518d\u679a\u4e3e\u5f80\u5de6\u6570\u7b2c\u4e00\u4e2a\u672c\u4eba\u6536\u96c6\u7684\u4f4d\u7f6e $k$\uff0c\u90a3\u4e48 $k\\to j$ \u4e4b\u95f4\u6309\u7167\u4e4b\u524d\u8bf4\u7684 DP \u8f6c\u79fb\u65b9\u5f0f\u8003\u8651\uff0c\u5bf9\u540e\u9762\u5217\u5f0f\u8ba1\u7b97\u662f\u5426\u53ef\u4ee5\u5230 $j+1$ \u7684\u8d21\u732e\u662f\u4e00\u4e2a\u5173\u4e8e $k,j$ \u7684\u521d\u59cb\u65f6\u95f4 DP \u503c\u3002\u7136\u540e\u5c31\u5224 $j\\to i+1\\to j+1\\to i$\uff0c\u8001\u6837\u5b50\u3002\u8fd9\u6837\u5b50\u662f\u4e09\u65b9\u7684\uff0c\u7136\u540e\u6ce8\u610f\u5230 $k$ \u552f\u4e00\u4ea7\u751f\u7684\u8d21\u732e\u5c31\u662f\u4e00\u4e2a\u53ea\u5173\u4e8e $k,j$ \u7684\u4e1c\u897f\uff0c\u4e8e\u662f\u53ef\u4ee5\u5bf9 $j$ \u524d\u7f00\u9884\u5904\u7406\u4e00\u4e0b\uff0c\u5c31\u53d8\u6210\u5e73\u65b9\u4e86\u3002\n\n\u867d\u7136\u4e5f\u8981\u5206\u633a\u591a\u7c7b\uff0c\u4f46\u662f\u4ee3\u7801\u53ea\u6709 2.5k\uff0c\u4e0d\u50cf dy \u6709 6k\uff08\uff09\u3002\u800c\u4e14\u8fd9\u6837\u4e00\u4e2a 2900 \u9898\uff0c\u548c\u4e0a\u9762\u90a3\u4e2a 2600 \u9898\u6bd4\u8d77\u6765\uff0c\u5df2\u7ecf\u5f88\u5e78\u798f\u4e86\uff08\n\n**_[code](https://www.luogu.com.cn/paste/2kfbz50e)_**",
        "postTime": 1608648250,
        "uid": 138400,
        "name": "chenxia25",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1415F \u3010Cakes for Clones\u3011"
    },
    {
        "content": "### \u9898\u76ee\u6982\u8981\n\u4e00\u4e2a\u4eba\u521d\u59cb\u5728 $(0,0)$ \uff0c\u6bcf\u6b21\u53ef\u4ee5\u5411\u5de6\u5411\u53f3\u8d70\u4e00\u683c\uff0c\u6709 $n$ \u4e2a\u4efb\u52a1 $(t_i,x_i)$ \u8868\u793a\u65f6\u523b $t_i$ \u4ed6\u6216\u8005\u4ed6\u7684\u514b\u9686\u5fc5\u987b\u5728 $x_i$ \u8fd9\u4e2a\u4f4d\u7f6e\u4e0a\u3002\u6bcf\u6b21\u4ed6\u5230\u8fbe\u4e00\u4e2a\u4f4d\u7f6e\u53ef\u4ee5\u6d88\u9664\u4ee5\u524d\u7684\u514b\u9686\u5e76\u65b0\u589e\u4e00\u4e2a\u65b0\u7684\u5728\u5f53\u524d\u4f4d\u7f6e\u4e0a\u7684\u514b\u9686\u3002\u95ee\u662f\u5426\u80fd\u591f\u5b8c\u6210\u6240\u6709\u4efb\u52a1\u3002\n### \u9898\u89e3\n\u8bbe $f_{i,j}$ \u8868\u793a $t_i$ \u65f6\u523b\u4eba\u5728 $x_i$ \uff0c\u73b0\u5728\u5206\u8eab\u5728 $j$ \u662f\u5426\u53ef\u884c\u3002\n\u8003\u8651\u8f6c\u79fb\uff1a\n+ \u5982\u679c\u7b2c $i-1$ \u4e2a\u4efb\u52a1\u662f\u7528\u771f\u8eab\u5b8c\u6210\u7684\u3002\u90a3\u4e48\u76f4\u63a5\u4ece $f_{i-1},j$ \u8f6c\u79fb\u5373\u53ef\u3002\u5f88\u660e\u663e\u6709\u514b\u9686\u4e4b\u540e\u66f4\u6362\u8fd9\u6837\u7684\u8f6c\u79fb\u4e0d\u9700\u8981\u3002\n+ \u5982\u679c\u662f\u514b\u9686\u5b8c\u6210\u7684\u7b2c $i-1$ \u4e2a\u4efb\u52a1\uff0c\u6709\u4e24\u79cd\u53ef\u80fd\uff1a\n\t+ \u514b\u9686\u662f\u5728\u5b8c\u6210 $1\\sim i-2$ \u6240\u6709\u4efb\u52a1\u4e4b\u540e\u5230 $i-1$ \u653e\u7f6e\u7684\u3002\n    + \u514b\u9686\u662f\u5728\u5b8c\u6210 $1\\sim i-2$ \u7684\u8fc7\u7a0b\u4e2d\u653e\u7f6e\u7684\u3002$i-2$ \u5fc5\u987b\u901a\u8fc7\u771f\u8eab\u5b8c\u6210\uff08\u56e0\u4e3a\u514b\u9686\u5f97\u7559\u7ed9 $i-1$\uff09\u3002\u5bf9\u5e94\u4ece $f_{i-2,i-1}$ \u8f6c\u79fb\u3002\n\n\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e\u7b2c\u4e8c\u6761\u4e00\u4e2a\u8f6c\u79fb\u65e0\u6cd5\u8fdb\u884c\u3002\u56e0\u6b64\u8003\u8651\u589e\u52a0\u72b6\u6001 $g_i$ \u8868\u793a\u5b8c\u6210 $1\\sim i-1$ \u4e4b\u540e\u5230 $i$ \u653e\u7f6e\u514b\u9686\u7684\u6700\u5c0f\u65f6\u95f4\u3002\u90a3\u4e48\u5c31\u53ef\u4ee5\u5b8c\u6210 $f$ \u7684\u8f6c\u79fb\u4e86\u3002\u600e\u4e48\u5b8c\u6210 $g$ \u7684\u8f6c\u79fb\u5462\uff1a\n+ $i-1$ \u662f\u901a\u8fc7\u514b\u9686\u5b8c\u6210\u7684\n\t+ $i-2$ \u662f\u901a\u8fc7\u771f\u8eab\u5b8c\u6210\u7684\uff0c\u4e5f\u5c31\u662f\u4ece $f_{i-2,i-1}$ \u8f6c\u79fb\u3002\n    + $i-2$ \u4e5f\u662f\u901a\u8fc7\u514b\u9686\u5b8c\u6210\u7684\uff0c\u4ece $g_{i-1}$ \u8f6c\u79fb\u3002\n+ $i-1$ \u662f\u901a\u8fc7\u771f\u8eab\u5b8c\u6210\u7684\n\t+ \u4ece $f_{i,j}$ \u8f6c\u79fb\u3002\n\n\u6709\u4eba\u8bf4\u8fd9\u91cc\u53ef\u80fd\u6f0f\u4e86\u4ece $i-1$ \u662f\u771f\u8eab\u5b8c\u6210\u4f46\u662f\u90a3\u65f6\u8fd8\u6ca1\u6709\u514b\u9686\u7684\u65b9\u6848\u3002\u4f46\u8fd9\u65e0\u4f24\u5927\u96c5\uff0c\u56e0\u4e3a\u5176\u5b9e\u8fd9\u6837\u7684\u65b9\u6848\u4e00\u5b9a\u4e0d\u5982 $g_{i-1}$ \u66f4\u4f18\u3002\n\n\u6ce8\u610f\u5728 $g_i>t_i$ \u7684\u65f6\u5019\u628a $g_i$ \u8d4b\u503c\u4e3a $\\inf$ \u3002\n\n### \u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <iostream>\nusing namespace std;\ntypedef long long LL;\nconst LL CN=5e3+5,inf=1e9+10;\nLL N,x[CN],t[CN];\nbool f[CN][CN];\nLL g[CN];\nLL dis(LL x,LL y){return ((x-y)<0)?(y-x):(x-y);}\nvoid tran_f(LL i,LL j){\n\tif(i>=3&&f[i-2][i-1]&&t[i]>=max(t[i-1],t[i-2]+dis(x[i-2],x[j]))+dis(x[j],x[i]))\n\t\treturn f[i][j]=1,void(); // this\n\tif(f[i-1][j]&&dis(x[i],x[i-1])<=dis(t[i],t[i-1]))return f[i][j]=1,void();\n\tif(t[i]>=max(t[i-1],dis(x[i-1],x[j])+g[i-1])+dis(x[j],x[i]))\n\t\treturn f[i][j]=1,void();\n}\nvoid tran_g(LL i){\n\tif(i>=3&&f[i-2][i-1])g[i]=max(t[i-2]+dis(x[i-2],x[i]),t[i-1]); // this\n\tfor(LL j=i;j<=N;++j)if(f[i-1][j])\n\t\tg[i]=min(g[i],t[i-1]+dis(x[i-1],x[i]));\n\tg[i]=min(g[i],max(dis(x[i],x[i-1])+g[i-1],t[i-1]));\n\tif(g[i]>t[i])g[i]=inf;\n}\nint main(){\n\tfreopen(\"f.in\",\"r\",stdin);\n\tfreopen(\"f.out\",\"w\",stdout);\n\tscanf(\"%lld\",&N);\n\tfor(LL i=1;i<=N;++i)scanf(\"%lld%lld\",&t[i],&x[i]);\n\tg[0]=0;for(LL i=1;i<=N;++i)g[i]=inf;\n\tf[0][0]=1;\n\tfor(LL i=1;i<=N;++i){\n\t\tfor(LL j=i+1;j<=N;++j)tran_f(i,j);\n\t\ttran_g(i);\n\t}\n\tif(g[N]<=t[N]||f[N-1][N])printf(\"YES\\n\"); // this\n\telse printf(\"NO\\n\");\n\tfclose(stdin);\n\tfclose(stdout);\n\treturn 0;\n}\n```",
        "postTime": 1655005188,
        "uid": 75715,
        "name": "KokiNiwa",
        "ccfLevel": 0,
        "title": "\u300cDP\u300dCF1415F"
    },
    {
        "content": "# CF1456D Cakes for Clones\n\n[\u9898\u76ee\u94fe\u63a5](http://codeforces.com/contest/1456/problem/D)\n\n## \u672c\u9898\u9898\u89e3\n\n\u8bbe $\\text{dp}(i,j) \\in\\{0,1\\}$ \u8868\u793a\u6309\u65f6\u95f4\u987a\u5e8f\u8003\u8651\u4e86\u524d $i$ \u4e2a\u86cb\u7cd5\uff0c\u5f53\u524d\u65f6\u95f4\u662f\u7b2c $t_i$ \u79d2\uff0c\u4e14\u4f60\u6070\u597d\u4f4d\u4e8e\u4f4d\u7f6e $x_i$\uff0c\u4f60\u7684\u66ff\u8eab\u4f4d\u4e8e\u4f4d\u7f6e $x_j$\uff0c\u8fd9\u79cd\u72b6\u6001\u662f\u5426\u53ef\u80fd\u5b9e\u73b0\u3002\n\n\u53d1\u73b0\u8f6c\u79fb\u603b\u662f\u628a\u4e00\u6bb5\u8fde\u7eed\u7684\u4f4d\u7f6e\u8bbe\u4e3a $1$\uff0c\u6240\u4ee5\u5c06\u7b2c\u4e8c\u7ef4\u6309 $x$ \u6392\u5e8f\u540e\uff0c\u8f6c\u79fb\u5c31\u662f\u4e00\u4e2a\u533a\u95f4\u8986\u76d6\uff0c\u53ef\u4ee5\u7528\u5dee\u5206\u7ef4\u62a4\u3002\n\n\u786e\u5b9a\u8981\u8986\u76d6\u7684\u533a\u95f4\u65f6\uff0c\u53ef\u80fd\u9700\u8981\u4e8c\u5206\u67e5\u627e\u3002\u6545\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n^2\\log n)$\u3002\n\n\u8be5\u505a\u6cd5\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u5206\u7c7b\u8ba8\u8bba\u3002\u8bf7\u8bfb\u8005\u81ea\u884c\u5b8c\u6210\u3002\n\n## \u53c2\u8003\u4ee3\u7801\n\n```cpp\n// problem: CF1456D\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define pb push_back\n#define mk make_pair\n#define lob lower_bound\n#define upb upper_bound\n#define fi first\n#define se second\n#define SZ(x) ((int)(x).size())\n\ntypedef unsigned int uint;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int, int> pii;\n\ntemplate<typename T> inline void ckmax(T& x, T y) { x = (y > x ? y : x); }\ntemplate<typename T> inline void ckmin(T& x, T y) { x = (y < x ? y : x); }\n\n/* --------------- fast io --------------- */ // begin\nnamespace Fread {\nconst int SIZE = 1 << 21;\nchar buf[SIZE], *S, *T;\ninline char getchar() {\n\tif (S == T) {\n\t\tT = (S = buf) + fread(buf, 1, SIZE, stdin);\n\t\tif (S == T) return EOF;\n\t}\n\treturn *S++;\n}\n} // namespace Fread\nnamespace Fwrite {\nconst int SIZE = 1 << 21;\nchar buf[SIZE], *S = buf, *T = buf + SIZE;\ninline void flush() {\n\tfwrite(buf, 1, S - buf, stdout);\n\tS = buf;\n}\ninline void putchar(char c) {\n\t*S++ = c;\n\tif (S == T) flush();\n}\nstruct NTR {\n\t~ NTR() { flush(); }\n}ztr;\n} // namespace Fwrite\n#ifdef ONLINE_JUDGE\n\t#define getchar Fread :: getchar\n\t#define putchar Fwrite :: putchar\n#endif\nnamespace Fastio {\nstruct Reader {\n\ttemplate<typename T>\n\tReader& operator >> (T& x) {\n\t\tchar c = getchar();\n\t\tT f = 1;\n\t\twhile (c < '0' || c > '9') {\n\t\t\tif (c == '-') f = -1;\n\t\t\tc = getchar();\n\t\t}\n\t\tx = 0;\n\t\twhile (c >= '0' && c <= '9') {\n\t\t\tx = x * 10 + (c - '0');\n\t\t\tc = getchar();\n\t\t}\n\t\tx *= f;\n\t\treturn *this;\n\t}\n\tReader& operator >> (char& c) {\n\t\tc = getchar();\n\t\twhile (c == '\\n' || c == ' ') c = getchar();\n\t\treturn *this;\n\t}\n\tReader& operator >> (char* str) {\n\t\tint len = 0;\n\t\tchar c = getchar();\n\t\twhile (c == '\\n' || c == ' ') c = getchar();\n\t\twhile (c != '\\n' && c != ' ') {\n\t\t\tstr[len++] = c;\n\t\t\tc = getchar();\n\t\t}\n\t\tstr[len] = '\\0';\n\t\treturn *this;\n\t}\n\tReader(){}\n}cin;\nconst char endl = '\\n';\nstruct Writer {\n\ttemplate<typename T>\n\tWriter& operator << (T x) {\n\t\tif (x == 0) { putchar('0'); return *this; }\n\t\tif (x < 0) { putchar('-'); x = -x; }\n\t\tstatic int sta[45];\n\t\tint top = 0;\n\t\twhile (x) { sta[++top] = x % 10; x /= 10; }\n\t\twhile (top) { putchar(sta[top] + '0'); --top; }\n\t\treturn *this;\n\t}\n\tWriter& operator << (char c) {\n\t\tputchar(c);\n\t\treturn *this;\n\t}\n\tWriter& operator << (char* str) {\n\t\tint cur = 0;\n\t\twhile (str[cur]) putchar(str[cur++]);\n\t\treturn *this;\n\t}\n\tWriter& operator << (const char* str) {\n\t\tint cur = 0;\n\t\twhile (str[cur]) putchar(str[cur++]);\n\t\treturn *this;\n\t}\n\tWriter(){}\n}cout;\n} // namespace Fastio\n#define cin Fastio :: cin\n#define cout Fastio :: cout\n#define endl Fastio :: endl\n/* --------------- fast io --------------- */ // end\n\nconst int MAXN = 5000;\nint n;\nbool dp[MAXN + 5][MAXN + 5];\n\nstruct Event {\n\tint t, x, id;\n};\nEvent a[MAXN + 5], b[MAXN + 5];\nbool cmp_t(Event e1, Event e2) { return e1.t < e2.t; }\nbool cmp_x(Event e1, Event e2) { return e1.x < e2.x; }\n\nint xs[MAXN + 5], t_to_x[MAXN + 5];\n\nstruct StaticRangeCover {\n\tint c[MAXN + 5];\n\tvoid range_cover(int l, int r) {\n\t\tassert(l <= r);\n\t\tc[l]++;\n\t\tc[r + 1]--;\n\t}\n\tvoid getres(bool* res) {\n\t\tfor (int i = 1; i <= n; ++i) {\n\t\t\tc[i] += c[i - 1];\n\t\t\tres[i] = (c[i] > 0);\n\t\t}\n\t}\n\tvoid clear() {\n\t\tmemset(c, 0, sizeof(c));\n\t}\n\tStaticRangeCover() {}\n};\nStaticRangeCover T[MAXN + 5];\n\nint main() {\n\tcin >> n;\n\tfor (int i = 1; i <= n; ++i) {\n\t\tcin >> a[i].t >> a[i].x;\n\t}\n\tsort(a + 1, a + n + 1, cmp_t);\n\tfor (int i = 1; i <= n; ++i) {\n\t\ta[i].id = i;\n\t\tb[i] = a[i];\n\t}\n\tsort(b + 1, b + n + 1, cmp_x);\n\tfor (int i = 1; i <= n; ++i) {\n\t\tt_to_x[b[i].id] = i;\n\t\txs[i] = b[i].x;\n\t}\n\t\n\tdp[0][0] = 1;\n\tfor (int i = 0; i < n; ++i) {\n\t\tT[i].getres(dp[i]);\n\t\t\n\t\tbool flag = 0;\n\t\tfor (int j = 0; j <= n; ++j) if (dp[i][j]) { flag = 1; break; }\n\t\tif (!flag) continue;\n\t\t\n\t\tif (i + 1 <= n && a[i + 1].t - a[i].t >= abs(a[i + 1].x - a[i].x)) {\n\t\t\tfor (int j = 1; j <= n; ++j)\n\t\t\t\tif (dp[i][j])\n\t\t\t\t\tT[i + 1].range_cover(j, j);\n\t\t\t\n\t\t\tint l, r;\n\t\t\tl = t_to_x[i];\n\t\t\tr = t_to_x[i + 1];\n\t\t\tif (i == 0) {\n\t\t\t\tif (a[1].x >= 0) {\n\t\t\t\t\tl = lob(xs + 1, xs + n + 1, 0) - xs;\n\t\t\t\t} else {\n\t\t\t\t\tl = upb(xs + 1, xs + n + 1, 0) - xs - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (l > r)\n\t\t\t\tswap(l, r);\n\t\t\tT[i + 1].range_cover(l, r);\n\t\t\t\n\t\t\tint t_rest = a[i + 1].t - (a[i].t + abs(a[i + 1].x - a[i].x));\n\t\t\tt_rest /= 2;\n\t\t\tl = lob(xs + 1, xs + n + 1, a[i + 1].x - t_rest) - xs;\n\t\t\tr = upb(xs + 1, xs + n + 1, a[i + 1].x + t_rest) - xs - 1;\n\t\t\tT[i + 1].range_cover(l, r);\n\t\t\tl = lob(xs + 1, xs + n + 1, a[i].x - t_rest) - xs;\n\t\t\tr = upb(xs + 1, xs + n + 1, a[i].x + t_rest) - xs - 1;\n\t\t\tif (l <= r)\n\t\t\t\tT[i + 1].range_cover(l, r);\n\t\t}\n\t\t\n\t\tif (i + 2 <= n && a[i + 2].t - a[i].t >= abs(a[i + 2].x - a[i].x) && dp[i][t_to_x[i + 1]]) {\n\t\t\tint l, r;\n\t\t\tif (a[i].x < a[i + 2].x) {\n\t\t\t\tl = lob(xs + 1, xs + n + 1, min(a[i].x + (a[i + 1].t - a[i].t), a[i + 2].x)) - xs;\n\t\t\t\tr = t_to_x[i + 2];\n\t\t\t\t\n\t\t\t\tT[i + 2].range_cover(l, r);\n\t\t\t} else {\n\t\t\t\tl = t_to_x[i + 2];\n\t\t\t\tr = upb(xs + 1, xs + n + 1, max(a[i].x - (a[i + 1].t - a[i].t), a[i + 2].x)) - xs - 1;\n\t\t\t\t\n\t\t\t\tT[i + 2].range_cover(l, r);\n\t\t\t}\n\t\t\t\n\t\t\tint t_rest = a[i + 2].t - (a[i].t + abs(a[i + 2].x - a[i].x));\n\t\t\tint tt;\n\t\t\ttt = min(t_rest / 2, a[i + 2].t - a[i + 1].t);\n\t\t\tl = lob(xs + 1, xs + n + 1, a[i + 2].x - tt) - xs;\n\t\t\tr = upb(xs + 1, xs + n + 1, a[i + 2].x + tt) - xs - 1;\n\t\t\tT[i + 2].range_cover(l, r);\n\t\t\t\n\t\t\ttt = min(t_rest / 2, t_rest - (a[i + 1].t - a[i].t));\n\t\t\tif (tt >= 0) {\n\t\t\t\tl = lob(xs + 1, xs + n + 1, a[i].x - tt) - xs;\n\t\t\t\tr = upb(xs + 1, xs + n + 1, a[i].x + tt) - xs - 1;\n\t\t\t\tT[i + 2].range_cover(l, r);\n\t\t\t}\n\t\t}\n\t\t\n\t\tint t = a[i].t;\n\t\tint j;\n\t\tfor (j = i + 2; j <= n; ++j) {\n\t\t\t// insert: j - 1\n\t\t\t\n\t\t\tint newt = max(a[j - 2].t, t + abs(a[j - 1].x - a[j - 2].x));\n\t\t\t// t \u662f\u53ef\u4ee5\u79bb\u5f00 j - 2 \u7684\u6700\u5c0f\u65f6\u95f4\n\t\t\t// newt \u662f\u53ef\u4ee5\u79bb\u5f00 j - 1 \u7684\u6700\u5c0f\u65f6\u95f4\n\t\t\tif (j == i + 3 && dp[i][t_to_x[i + 1]]) {\n\t\t\t\tckmin(newt, max(a[i + 1].t, a[i].t + abs(a[j - 1].x - a[i].x)));\n\t\t\t}\n\t\t\tif (newt >= a[j - 1].t) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tt = newt; // \u53ef\u4ee5\u79bb\u5f00 j - 1 \u7684\u6700\u5c0f\u65f6\u95f4\n\t\t\tint t_rest = a[j].t - (t + abs(a[j].x - a[j - 1].x));\n\t\t\tif (t_rest >= 0) {\n\t\t\t\tint tt, l, r;\n\t\t\t\ttt = min(t_rest / 2, a[j].t - a[j - 1].t);\n\t\t\t\tl = lob(xs + 1, xs + n + 1, a[j].x - tt) - xs;\n\t\t\t\tr = upb(xs + 1, xs + n + 1, a[j].x + tt) - xs - 1;\n\t\t\t\tT[j].range_cover(l, r);\n\t\t\t\t\n\t\t\t\ttt = min(t_rest / 2, t_rest - (a[j - 1].t - t));\n\t\t\t\tif (tt >= 0) {\n\t\t\t\t\tl = lob(xs + 1, xs + n + 1, a[j - 1].x - tt) - xs;\n\t\t\t\t\tr = upb(xs + 1, xs + n + 1, a[j - 1].x + tt) - xs - 1;\n\t\t\t\t\tT[j].range_cover(l, r);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttt = min(a[j - 1].t, a[j].t - abs(a[j].x - a[j - 1].x));\n\t\t\t\tif (a[j - 1].x < a[j].x) {\n\t\t\t\t\tl = lob(xs + 1, xs + n + 1, min(a[j - 1].x + (a[j - 1].t - tt), a[j].x)) - xs;\n\t\t\t\t\tr = t_to_x[j];\n\t\t\t\t\t\n\t\t\t\t\tT[j].range_cover(l, r);\n\t\t\t\t} else {\n\t\t\t\t\tl = t_to_x[j];\n\t\t\t\t\tr = upb(xs + 1, xs + n + 1, max(a[j - 1].x - (a[j - 1].t - tt), a[j].x)) - xs - 1;\n\t\t\t\t\t\n\t\t\t\t\tT[j].range_cover(l, r);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (j >= i + 3 || !dp[i][t_to_x[i + 1]])\n\t\t\tcontinue;\n\t\tt = a[i].t;\n\t\tfor (int j = i + 3; j <= n; ++j) {\n\t\t\t// insert: j - 1\n\t\t\t\n\t\t\tint newt = max(a[j - 2].t, t + abs(a[j - 1].x - a[(j == i + 3) ? i : j - 2].x));\n\t\t\t// t \u662f\u53ef\u4ee5\u79bb\u5f00 j - 2 \u7684\u6700\u5c0f\u65f6\u95f4\n\t\t\t// newt \u662f\u53ef\u4ee5\u79bb\u5f00 j - 1 \u7684\u6700\u5c0f\u65f6\u95f4\n\t\t\tif (newt >= a[j - 1].t) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tt = newt; // \u53ef\u4ee5\u79bb\u5f00 j - 1 \u7684\u6700\u5c0f\u65f6\u95f4\n\t\t\tint t_rest = a[j].t - (t + abs(a[j].x - a[j - 1].x));\n\t\t\tif (t_rest >= 0) {\n\t\t\t\tint tt;\n\t\t\t\ttt = min(t_rest / 2, a[j].t - a[j - 1].t);\n\t\t\t\tint l, r;\n\t\t\t\tl = lob(xs + 1, xs + n + 1, a[j].x - tt) - xs;\n\t\t\t\tr = upb(xs + 1, xs + n + 1, a[j].x + tt) - xs - 1;\n\t\t\t\tT[j].range_cover(l, r);\n\t\t\t\t\n\t\t\t\ttt = min(t_rest / 2, t_rest - (a[j - 1].t - t));\n\t\t\t\tif (tt >= 0) {\n\t\t\t\t\tl = lob(xs + 1, xs + n + 1, a[j - 1].x - tt) - xs;\n\t\t\t\t\tr = upb(xs + 1, xs + n + 1, a[j - 1].x + tt) - xs - 1;\n\t\t\t\t\tT[j].range_cover(l, r);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttt = min(a[j - 1].t, a[j].t - abs(a[j].x - a[j - 1].x));\n\t\t\t\tif (a[j - 1].x < a[j].x) {\n\t\t\t\t\tl = lob(xs + 1, xs + n + 1, min(a[j - 1].x + (a[j - 1].t - tt), a[j].x)) - xs;\n\t\t\t\t\tr = t_to_x[j];\n\t\t\t\t\t\n\t\t\t\t\tT[j].range_cover(l, r);\n\t\t\t\t} else {\n\t\t\t\t\tl = t_to_x[j];\n\t\t\t\t\tr = upb(xs + 1, xs + n + 1, max(a[j - 1].x - (a[j - 1].t - tt), a[j].x)) - xs - 1;\n\t\t\t\t\t\n\t\t\t\t\tT[j].range_cover(l, r);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tT[n].getres(dp[n]);\n\tbool ans = 0;\n\tfor (int i = 1; i <= n; ++i) ans |= dp[n][i];\n\tif (n > 1) {\n\t\tans |= dp[n - 1][t_to_x[n]];\n\t}\n\tcout << (ans ? \"YES\" : \"NO\") << endl;\n\treturn 0;\n}\n```\n\n\n\n\n\n",
        "postTime": 1608440420,
        "uid": 100674,
        "name": "duyi",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1415F \u3010Cakes for Clones\u3011"
    }
]