[
    {
        "content": "\u9898\u610f\uff1a\n\n\u6709\u4e00\u4e2a\u77e9\u9635\uff0c\u8f93\u5165\u51e0\u4e2a(x,y),\n\n\u5982\u679c(x,y)\u6ca1\u6709\u88ab\u5360\u9886\uff0c\u5219\u8f93\u51fa(x,y),\u6807\u8bb0\u88ab\u5360\u9886\n\n\u5426\u5219\u627e\u4e00\u4e2a\u4e0e(x,y)\u66fc\u54c8\u987f\u8ddd\u79bb\u6700\u5c0f\u7684\u70b9\u4e14\u6ca1\u6709\u88ab\u5360\u9886\u7684\u70b9\u8f93\u51fa\uff0c\u5e76\u6807\u8bb0\u88ab\u5360\u9886\n\n\u5206\u6790\uff1a\n\n\u5f88\u5bb9\u6613\u60f3\u51fa\u66b4\u529b\uff0c\u5c31\u662f\u83f1\u5f62\u7740\u641c\uff08\u5c31\u662f\u5728\u641c\u7d22\u5305\u542b\u8be5\u70b9\uff08\u5708\uff09\u7684\u66f4\u5927\u7684\u5708\u4e0a\u7684\u70b9\u662f\u5426\u53c8\u6ee1\u8db3\u7684\uff09\n\n\u4f46\u662f\u8fd9\u6837\u4f1a\u88ab\u90fd\u662f\u4e00\u4e2a\u4f4d\u7f6e\u7684~~\u6bd2\u7624\u6570\u636e~~\u5361\u5230O(NM)\n\n\u601d\u8003\u3002\u3002\u3002\n\n\u600e\u4e48\u4f18\u5316\u66b4\u529b\uff1f\n\n\u5728\u4e0a\u9762\u6240\u8bb2\u7684\u90a3\u4e2a\u6bd2\u7624\u6570\u636e\u4e2d\uff0c\u6211\u4eec\u7684\u66b4\u529b\u662f\u6bcf\u6b21\u90fd\u8981\u8d70\u8fc7\u4e00\u904d\u83f1\u5f62\uff0c\u8fd9\u6837\u4e00\u6b21\u4e00\u6b21\u641c\u9519\u8bef\u7684\u70b9\u975e\u5e38\u6d6a\u8d39\u65f6\u95f4\n\n\u4e8e\u662f\u6211\u4eec\u628a\u5b83\u8bb0\u5f55\u4e00\u4e0b\n\n\u6211\u4eec\u5f53\u7136\u77e5\u9053\u540c\u4e00\u4e2a\u83f1\u5f62\u4e0a\u7684\u70b9\u5230\u8be5\u70b9\u5f97\u66fc\u54c8\u987f\u8ddd\u79bb\u76f8\u7b49\u3002\n\nd[x][y]\u8868\u793a\u8fd9\u4e2a\u70b9\u5468\u56f4\u5df2\u7ecf\u8d70\u4e86\u591a\u5c11\u6b21\n\n\u8fd9\u91cc\u6211\u4eec\u8981\u8003\u8651\u4e00\u4e2a\u60c5\u51b5\uff0c\u5c31\u662f\u5305\u56f4\u60c5\u51b5\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u7684\u4f4d\u7f6e\u5728\u53e6\u4e00\u4e2a\u70b9\u9009\u62e9\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u8bbf\u95ee\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8981\u901a\u8fc7\u53e6\u4e00\u4e2a\u70b9\u66f4\u65b0\u8be5\u70b9\n\n\u4e8e\u662f\u66f4\u65b0\u5c31\u53ef\u4ee5\u4e86\n\n```cpp\n#include <set>\n#include <cmath>\n#include <ctime>\n#include <queue>\n#include <stack>\n#include <vector>\n#include <bitset>\n#include <cstdio>\n#include <cctype>\n#include <string>\n#include <cstring>\n#include <cassert>\n#include <climits>\n#include <cstdlib>\n#include <iostream>\n#include <algorithm>\n#include <functional>\nusing namespace std ;\n\n#define rep(i, a, b) for (int (i) = (a); (i) <= (b); (i)++)\n#define Rep(i, a, b) for (int (i) = (a) - 1; (i) < (b); (i)++)\n#define REP(i, a, b) for (int (i) = (a); (i) >= (b); (i)--)\n#define clr(a) memset(a, 0, sizeof(a))\n#define Sort(a, len, cmp) sort(a + 1, a + len + 1, cmp)\n#define ass(a, sum) memset(a, sum, sizeof(a))\n\n#define ls ((rt) << 1)\n#define rs ((rt) << 1 | 1)\n#define lowbit(x) (x & -x)\n#define mp make_pair\n#define pb push_back\n#define fi first\n#define se second\n#define endl '\\n'\n#define ENDL cout << endl\n#define SZ(x) ((int)x.size())\n\ntypedef long long ll ;\ntypedef unsigned long long ull ;\ntypedef vector <int> vi ;\ntypedef pair <int, int> pii ;\ntypedef pair <ll, ll> pll ;\n\nconst int N = 2010 ;\nconst double eps = 1e-8 ;\nconst int iinf = INT_MAX ;\nconst ll linf = 2e18 ;\nconst double dinf = 1e30 ;\nconst int MOD = 1000000007 ;\n\ninline int read(){\n    int X = 0, w = 0 ;\n\tchar ch = 0 ;\n    while (!isdigit(ch)) { w |= ch == '-' ; ch = getchar() ; }\n    while (isdigit(ch)) X = (X << 3) + (X << 1) + (ch ^ 48), ch = getchar() ;\n    return w ? - X : X ;\n}\n\nvoid write(int x){\n     if (x < 0) putchar('-'), x = - x ;\n     if (x > 9) write(x / 10) ;\n     putchar(x % 10 + '0') ;\n}\n\nvoid print(int x) {\n\tcout << x << endl ;\n\texit(0) ;\n}\n\nvoid PRINT(string x) {\n\tcout << x << endl ;\n\texit(0) ;\n}\n\nvoid douout(double x){\n\t printf(\"%lf\\n\", x + 0.0000000001) ;\n}\n\nint d[N][N], vis[N][N] ;\nint n, m, ex, ey, k, x, y ;\n\nbool check(int x, int y) {\n\tint l = max(x - d[x][y], 1), r = min(x + d[x][y], n) ;\n\tfor (int i = l; i <= r; i++) {\n\t\tint t = d[x][y] - abs(i - x) ;\n\t\tif (y - t > 0 && !vis[i][y - t]) {\n\t\t\tex = i ;\n\t\t\tey = y - t ;\n\t\t\treturn false ;\n\t\t}\n\t\tif (y + t <= m && !vis[i][y + t]) {\n\t\t\tex = i ;\n\t\t\tey = y + t ;\n\t\t\treturn false ;\n\t\t}\n\t}\n\treturn true ;\n}\n\nsigned main(){\n\tscanf(\"%d%d%d\", &n, &m, &k) ;\n\twhile (k--) {\n\t\tscanf(\"%d%d\", &x, &y) ;\n\t\tif (!vis[x][y]) {\n\t\t\tprintf(\"%d %d\\n\", x, y) ;\n\t\t\tvis[x][y] = 1 ;\n\t\t\tcontinue ;\n\t\t}\n\t\tfor (int i = -1; i <= 1; i++)\n\t\tfor (int j = -1; j <= 1; j++) {\n\t\t\tif (x + i >= n || y + j >= m || x - i <= 0 || y - j <= 0) continue ;\n\t\t\td[x][y] = max(d[x][y], d[x + i][y + j] - abs(i) - abs(j)) ;\n\t\t}\n\t\twhile (check(x, y)) d[x][y]++ ;\n\t\tvis[ex][ey]++ ;\n\t\tprintf(\"%d %d\\n\", ex, ey) ;\n\t}\n\n}\n\n/*\n\u5199\u4ee3\u7801\u65f6\u8bf7\u6ce8\u610f\uff1a\n\t1.\u662f\u5426\u8981\u5f00Long Long\uff1f\u6570\u7ec4\u8fb9\u754c\u5904\u7406\u597d\u4e86\u4e48\uff1f\n\t2.\u5b9e\u6570\u7cbe\u5ea6\u6709\u6ca1\u6709\u5904\u7406\uff1f\n\t3.\u7279\u6b8a\u60c5\u51b5\u5904\u7406\u597d\u4e86\u4e48\uff1f\n\t4.\u505a\u4e00\u4e9b\u603b\u6bd4\u4e0d\u505a\u597d\u3002\n\u601d\u8003\u63d0\u9192\uff1a\n\t1.\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u95ee\u9898\u53ef\u4e0d\u53ef\u4ee5\u7528\u4e8c\u5206\u7b54\u6848\uff1f\n\t2.\u6709\u6ca1\u6709\u8d2a\u5fc3\u7b56\u7565\uff1f\u5426\u5219\u80fd\u4e0d\u80fddp\uff1f\n*/\n\n```",
        "postTime": 1543888895,
        "uid": 54900,
        "name": "__Hacheylight__",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF200A \u3010Cinema\u3011"
    },
    {
        "content": "\u6839\u636e\u9898\u610f\uff0c\u82e5\u8981\u586b\u7684\u4f4d\u7f6e\u5df2\u7ecf\u88ab\u5360\u4e86\uff0c\u90a3\u4e48\u5c31\u6309\u7167\u534a\u5f84\u9012\u589e\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u5706\u586b\u5165\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u4e00\u4e2a\u70b9\u5468\u56f4\u6700\u5bc6\u96c6\u7684\u60c5\u51b5\u4e0b\u4e5f\u53ea\u53ef\u80fd\u6709 $k$ \u4e2a\u70b9\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e2a\u6b63\u65b9\u5f62\u7684\u8fb9\u957f\u4e0d\u4f1a\u8d85\u8fc7 $\\sqrt k$ \u3002\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u627e\u7684\u53ea\u6709\u5bf9\u89d2\u7ebf\u4e3a $\\sqrt{2k}$ \u7684\u6b63\u65b9\u5f62\uff0c\u7528\u5e76\u67e5\u96c6\u5206\u522b\u7ef4\u62a4\u6bcf\u4e00\u884c\u7684\u8054\u901a\u5757\u7684\u5de6\u53f3\u8fb9\u754c\u5c31\u53ef\u4ee5\u5728 $O(\\sqrt{k})$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u5b9e\u73b0\u5355\u6b21\u67e5\u8be2\u3002 \n\n\u4f46\u662f\u5f53 $m$ \u5f88\u5c0f\u7684\u65f6\u5019\uff0c\u5de6\u53f3\u8fb9\u754c\u88ab\u586b\u6ee1\u4e86\uff0c\u90a3\u4e48\u5c31\u4f1a\u5bfc\u81f4\u8fd9\u65f6\u5019\u4e0d\u662f\u4e00\u4e2a\u6b63\u65b9\u5f62\uff0c\u9700\u8981\u904d\u5386\u7684\u884c\u6570\u589e\u591a\u3002\n\n\u4f46\u662f\u8fd9\u65f6\u5019\u6211\u4eec\u53d1\u73b0\u4e2d\u95f4\u7684\u4e00\u90e8\u5206\u5df2\u7ecf\u586b\u6ee1\uff0c\u4e0d\u9700\u8981\u518d\u586b\uff0c\u90a3\u4e48\u6211\u4eec\u4e5f\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u4e00\u4e0b\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u67e5\u8be2\u7684\u533a\u95f4\u4e00\u5b9a\u662f\u4e00\u4e2a\u6b63\u65b9\u5f62\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(k\\sqrt{k})$ \u3002\n\n[aclink](https://codeforces.com/contest/200/submission/168743887)\n\n",
        "postTime": 1660779791,
        "uid": 212349,
        "name": "ChengJY_",
        "ccfLevel": 7,
        "title": "CF200A Cinema \u9898\u89e3"
    }
]