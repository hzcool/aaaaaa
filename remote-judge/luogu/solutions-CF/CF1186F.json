[
    {
        "content": "\u597d\u9898\u3002\n\n\u6211\u4eec\u9996\u5148\u89c2\u5bdf\u4e00\u4e0b\u9898\u76ee\u3002\n\n\u8981\u6c42\u81f3\u591a\u4fdd\u7559$(n + m + 1) / 2$\u6761\u8fb9\uff0c\u5373\u5220\u9664\u4e0d\u5c11\u4e8e$m - (n + m + 1) / 2$\uff0c\u6211\u4eec\u5c31\u5c3d\u91cf\u591a\u5220\n\n\u6bcf\u4e2a\u8282\u70b9\u7684\u5ea6\u6570\u4e0d\u80fd\u5c11\u4e8e$(deg[i] + 1) / 2$,\uff0c\u5373\u6700\u591a\u5220\u53bb$deg[i] - (deg[i] + 1) / 2$\u8fd9\u4e48\u591a\u3002\u5b9a\u4e49\u4e00\u4e2a\u8282\u70b9\u7684$g$\u503c\u4e3a\u5176\u8fd8\u53ef\u4ee5\u5220\u591a\u5c11\u3002\n\n\u6211\u4eec\u8d2a\u5fc3\u7684\u9009\u53d6\u8fb9\u5220\u9664\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u9009\u53d6\u4e00\u4e2a\u76ee\u524d$g$\u503c\u6700\u5c0f\u7684\u8282\u70b9\u3002\n\n\u4e3a\u4ec0\u4e48\uff1f\n\n\u56e0\u4e3a\u6211\u4eec\u5c3d\u91cf\u591a\u5220\u3002\u611f\u6027\u7406\u89e3\u4e00\u4e0b\uff0c\u5982\u679c\u4e00\u4e2a$g$\u5c0f\u7684\u70b9\u548c\u4e00\u4e2a$g$\u5927\u7684\u70b9\u540c\u6837\u8fde\u7740\u4e00\u4e9b\u70b9\uff0c\u90a3\u4e48\u5982\u679c\u8fd9\u4e9b\u70b9\u7684$g$\u5747\u56e0\u5220\u53bb\u800c\u53d8\u6210\u4e860\uff0c$g$\u5c0f\u7684\u70b9\u53ef\u80fd\u5c31\u6ca1\u6709\u5176\u5b83\u51fa\u8fb9\u53ef\u4ee5\u5220\uff0c$g$\u5927\u7684\u70b9\u4e00\u5b9a\u4f1a\u6709\u5176\u4ed6\u7684\u51fa\u8fb9\u3002\u8fd9\u6837\u4f1a\u4f7f\u5f97$g$\u5c0f\u7684\u70b9\u7684\u5220\u7684\u673a\u4f1a\u6d6a\u8d39\u3002\u6240\u4ee5\u8981\u5148\u9009\u53d6$g$\u5c0f\u7684\u70b9\u3002\n\n\u7136\u540e\uff0c\u6211\u4eec\u628a\u5176\u90bb\u63a5\u7684\u8fb9\u5bf9\u5e94\u7684\u70b9\u7684$g$\u4ece\u5927\u5230\u5c0f\u7684\u5220\u9664\u3002\n\n\u56e0\u4e3a\u5982\u679c\u9009\u62e9$g$\u5c0f\u7684\u5148\u5220\uff0c\u90a3\u53ef\u80fd\u5220\u5b8c\u5b83\u4eec\u7684$g$\u90fd\u53d8\u4e3a0\uff0c\u4e0d\u80fd\u5220\u4e86\u3002\u53ea\u80fd\u5220\u4e00\u6761\u8fb9\u3002\n\u4f46\u662f\u53ef\u80fd\u5b58\u5728\u8fd9\u4e24\u4e2a\u70b9\u90fd\u90bb\u63a5\u4e00\u4e2a$g$\u5927\u7684\u70b9\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5220\u4e24\u6761\u8fb9\u3002\n\n\u6240\u4ee5\u8fd9\u6837\u8d2a\u5fc3\u662f\u6700\u4f18\u7684\u3002\n\n\u5b9e\u73b0\u9700\u8981\u4e00\u5b9a\u7684\u6280\u5de7\u3002\u5efa\u8bae\u81ea\u884c\u7ec3\u4e60\u3002\n\n\u4ee3\u7801\uff1a\n```\n#pragma GCC optimize(3)\n#pragma GCC optimize(2)\n#include<bits/stdc++.h>\n#define mst(a,b) memset(a,b,sizeof(a))\n#define For(i, k, j) for(register int i = (k); i <= (j); i++)\n#define INF (1 << 30) - 1\n#define ll long long\n#define reaD() read()\nusing namespace std;\ninline int read()\n{\n    int num=0,flag=1;char c=' ';\n    for(;c>'9'||c<'0';c=getchar()) if(c=='-') flag = -1;\n    for(;c>='0'&&c<='9';num=(num<<1)+(num<<3)+c-48,c=getchar());\n    return num*flag;\n}\n#define MAXN 1000005\nbool del[MAXN];\nint u[MAXN], v[MAXN];\nint deg[MAXN];\nstruct Node {\n\tint val, id;\n\tbool operator < (Node b) const {return val > b.val;}\n};\nstruct Vertex {\n\tint v, id;\n\tbool operator < (Vertex b) const {return deg[v] > deg[b.v];}\n};\nvector < Vertex > g[MAXN];\npriority_queue < Node > Q;\nsigned main()\n{\n\tmemset(del, 0, sizeof(del));\n\tint n = read(), m = read();\n\tfor(int i = 1; i <= m; i++) {\n\t\tu[i] = read(), v[i] = read();\n\t\tg[u[i]].push_back((Vertex) {v[i], i});\n\t\tg[v[i]].push_back((Vertex) {u[i], i});\n\t\tdeg[u[i]]++, deg[v[i]]++;\n\t}\n\tint delnum = m - (n + m + 1) / 2;\n\tif(delnum <= 0) {\n\t\tprintf(\"%d\\n\", m);\n\t\tfor(int i = 1; i <= m; i++)\n\t\t\tprintf(\"%d %d\\n\", u[i], v[i]);\n\t\treturn 0;\n\t}\n\t\t\n\tfor(int i = 1; i <= n; i++) {\n\t\tdeg[i] = deg[i] - (deg[i] + 1) / 2;\n\t\tQ.push((Node) {deg[i], i});\n\t}\n//\tcout << Q.top().val << endl;\n\twhile(delnum > 0) {\n\t\tint U = Q.top().id;\n\t\tif(deg[U] <= 0) { Q.pop(); continue; }\n\t\tQ.pop();\n\t\tsort(g[U].begin(), g[U].end());\n\t\tfor(int i = 0; i < g[U].size(); i++) {\n\t\t\tif(del[g[U][i].id]) continue;\n\t\t\tint V = g[U][i].v;\n\t\t\tif(deg[V] <= 0) break;//\n\t\t\tdel[g[U][i].id] = 1;\n\t\t\tdeg[U]--, deg[V]--, delnum--;\n\t\t\tif(deg[V] > 0) {\n\t\t\t\tQ.push((Node) {deg[V], V});\n\t\t\t}\n\t\t\tif(deg[U] <= 0 || delnum <= 0) break; \n\t\t}\n\t}\n\tprintf(\"%d\\n\", (n + m + 1) / 2);\n\tFor(i, 1, m) {\n\t\tif(del[i] == 0) {\n\t\t\tprintf(\"%d %d\\n\", u[i], v[i]);\n\t\t}\n\t}\n    return 0;\n}\n\n```\n\n",
        "postTime": 1562382515,
        "uid": 55078,
        "name": "YLWang",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1186F \u3010Vus the Cossack and a Graph\u3011"
    },
    {
        "content": "\u6a21\u62df\u8d5b\u7684\u6570\u636e\u8303\u56f4\u66f4\u6709\u63d0\u793a\u6027\u3002\u5176\u4e2d\u6709\u4e00\u4e2a Sub \u662f\u5ea6\u6570\u5168\u4e3a\u5076\u6570\u3002\u90a3\u8fd9\u5c31\u63d0\u793a\u6211\u4eec\u627e\u4e00\u6761\u6b27\u62c9\u56de\u8def\u3002\u90a3\u4e48\u6211\u4eec\u5728\u6b27\u62c9\u56de\u8def\u4e0a\u6bcf\u9694\u4e00\u6761\u8fb9\u5220\u4e00\u6761\u5373\u53ef\u3002\n\n\u63a5\u4e0b\u6765\u601d\u8003\u5ea6\u6570\u6709\u4e3a\u5947\u6570\u7684\u60c5\u51b5\uff0c\u7531\u4e8e\u603b\u5ea6\u6570\u548c\u4e00\u5b9a\u662f\u5076\u6570\uff0c\u90a3\u4e48\u4e00\u5b9a\u6709\u5076\u6570\u4e2a\u5947\u5ea6\u6570\u7684\u70b9\uff0c\u6211\u4eec\u65b0\u5efa\u4e00\u4e2a\u865a\u70b9\uff0c\u5411\u6bcf\u4e2a\u5947\u6570\u70b9\u8fde\u8fb9\u3002\u8fd9\u6837\u5c31\u6240\u6709\u70b9\u7684\u5ea6\u6570\u5c31\u662f\u5076\u6570\u4e86\u3002\u7136\u540e\u6211\u4eec\u8003\u8651\u5220\u8fb9\uff0c\u7531\u4e8e\u865a\u8fb9\u4e0d\u80fd\u5220\uff0c\u4e0e\u865a\u8fb9\u76f8\u90bb\u7684\u8fb9\u5176\u5b9e\u4e5f\u4e0d\u80fd\u5220\uff08\u5220\u4e86\u90a3\u4e2a\u5947\u6570\u70b9\u5c31\u4e0d\u6ee1\u8db3\u4e86\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ea\u6709\u4e24\u8fb9\u90fd\u662f\u5b9e\u8fb9\u7684\u5b9e\u8fb9\u624d\u53ef\u4ee5\u5220\u3002\u7136\u540e\u7ee7\u7eed\u9694\u4e00\u4e2a\u5220\u4e00\u4e2a\u5373\u53ef\u3002\n\n```cpp\nint n,m,deg[maxn],zz[maxn],cur[maxn];\nvector<int>vec,stk;\nvector<pii>G[maxn],ans;\nbool vis[maxn<<2];\nint id=1,pos[maxn],top;\nbool dfn[maxn];\npii edge[maxn<<2];\nvoid add_edge(int u,int v){\n\tedge[++id]=MP(u,v);\n\tG[u].pb(MP(v,id));\n}\nvoid dfs(int u){\n\tif(!dfn[u])pos[++top]=u;\n\tdfn[u]=1;\n\tfor(int i=cur[u];i<(int)G[u].size();i=cur[u]){\n\t\tcur[u]=i+1;\n\t\tif(!vis[G[u][i].second])vis[G[u][i].second]=vis[G[u][i].second^1]=true,dfs(G[u][i].first),vec.pb(G[u][i].second);\n\t}\n}\nint main(){\n\tread(n);read(m);\n\tfor(int i=1,u,v;i<=m;i++){\n\t\tread(u);read(v);\n\t\tdeg[u]++;deg[v]++;\n\t\tadd_edge(u,v);add_edge(v,u);\n\t}\n\tfor(int i=1;i<=n;i++)if(deg[i]&1)stk.pb(i);\n\tfor(int i:stk){\n\t\tadd_edge(i,n+1);add_edge(n+1,i);\n\t}\n\tfor(int r=1;r<=n;r++)if(!dfn[r]){\n\t\tvec.clear();\n\t\ttop=0;\n\t\tdfs(r);\n\t\treverse(vec.begin(),vec.end());\n\t\tint len=vec.size()-1;\n\t\tfor(int i=0,flg=1;i<(int)vec.size();i++){\n\t\t\tif(vec[i]/2>m)continue;\n\t\t\tif(vec[i==0?len-1:i-1]/2<=m&&vec[i==len-1?0:i+1]/2<=m&&!flg){\n\t\t\t\tflg=1;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tflg=0;\n\t\t\tans.emplace_back(edge[vec[i]].first,edge[vec[i]].second);\n\t\t}\n\t}\n\tsort(ans.begin(),ans.end());\n\tprintf(\"%d\\n\",(int)ans.size());\n\tfor(auto x:ans){\n\t\tprintf(\"%d %d\\n\",x.first,x.second);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1674532372,
        "uid": 328405,
        "name": "Gemini7X",
        "ccfLevel": 9,
        "title": "CF1186F Vus the Cossack and a Graph"
    },
    {
        "content": "## Solution\n\n\u4e0d\u4f1a\u8d2a\u5fc3\uff0c\u53ea\u4f1a\u9ebb\u70e6\u6784\u9020\u3002\n\n\u6784\u9020\u7684\u57fa\u672c\u601d\u8def\u662f\uff1a\u5982\u679c\u7ed9\u5b9a\u4e00\u4e2a\u6240\u6709\u70b9\u7684\u5ea6\u6570\u90fd\u662f\u5076\u6570\u7684\u65e0\u5411\u8fde\u901a\u56fe\uff0c\u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u505a\u4e00\u904d\u6b27\u62c9\u56de\u8def\uff0c\u8bbe\u6c42\u51fa\u7684\u6b27\u62c9\u56de\u8def\u4e3a $e_1e_2e_3\\dots e_m$ \uff0c\u90a3\u4e48\u6211\u4eec\u4fdd\u7559\u6240\u6709\u7684 $e_{2k-1},k\\in\\mathbb{Z_+}$ \u5c31\u80fd\u4fdd\u8bc1\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570\u81f3\u5c11\u4e3a $\\lceil\\frac{d}{2}\\rceil$ \uff0c\u9700\u8981\u4fdd\u7559\u7684\u8fb9\u6570\u4e3a $\\lceil\\frac{m}{2}\\rceil$\u3002\n\n\u90a3\u4e48\u73b0\u5728\u6709\u4e9b\u70b9\u7684\u5ea6\u6570\u4e3a\u5947\u6570\u600e\u4e48\u529e\uff1f\u6211\u4eec\u8003\u8651\u7ed9\u5947\u6570\u70b9\u4e4b\u95f4\u8fde\u201c\u5047\u8fb9\u201d\uff0c\u628a\u539f\u56fe $G$ \u8865\u6210\u4e00\u4e2a\u5ea6\u6570\u90fd\u662f\u5076\u6570\u7684\u56fe $G'$\u3002\u7136\u540e\u518d\u5bf9\u6bcf\u4e2a\u8fde\u901a\u5757\u505a\u4e0a\u9762\u7684\u8fc7\u7a0b\uff0c\u552f\u4e00\u4e0d\u540c\u7684\u53ea\u662f\u6392\u5728\u201c\u5047\u8fb9\u201d\u4e24\u8fb9\u7684\u8fb9\u5fc5\u987b\u4fdd\u7559\uff0c\u7136\u540e\u201c\u5047\u8fb9\u201d\u4e0d\u9009\u3002\n\n\u6b64\u65f6\u663e\u7136\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570\u81f3\u5c11\u4e3a $\\lceil\\frac{d}{2}\\rceil$\uff0c\u73b0\u5728\u6211\u4eec\u6765\u8bc1\u660e\u8fd9\u5f20\u56fe\u6700\u591a\u53ea\u4f1a\u4fdd\u7559 $\\lceil\\frac{n+m}{2}\\rceil$ \u6761\u8fb9\u3002\n\n\u5bf9\u4e8e $G'$ \u4e2d\u7684\u4e00\u4e2a\u8fb9\u6570\u81f3\u5c11\u4e3a $1$ \u7684\u8fde\u901a\u5757\uff0c\u8bbe\u5b83\u7684\u8fb9\u6570\u4e3a $m$\uff0c\u201c\u5047\u8fb9\u201d\u6570\u4e3a $x$\uff0c\u5206\u7c7b\u8ba8\u8bba\uff1a\n- \u5f53 $x=0$ \u65f6\uff0c\u6700\u591a\u4fdd\u7559 $\\lceil\\frac{m}{2}\\rceil$ \u6761\u8fb9\u3002\n- \u5f53 $x>0$ \u65f6\uff0c\u6700\u591a\u4fdd\u7559 $\\lfloor \\frac{m}{2}\\rfloor+x$ \u6761\u8fb9\u3002\n\n\u4e4d\u4e00\u770b\u4f3c\u4e4e\u4e24\u79cd\u60c5\u51b5\u52a0\u8d77\u6765\u4f1a\u8d85\u8fc7\u9650\u5236\uff0c\u4f46\u5b9e\u9645\u4e0a\u7b2c\u4e00\u79cd\u60c5\u51b5\u4ea7\u751f\u65f6\uff0c$\\sum x$ \u7684\u4e0a\u9650\u4f1a\u51cf\u5c11\u81f3\u5c11 $1$\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u7b2c\u4e00\u79cd\u7684\u82b1\u8d39\u653e\u7f29\u4e3a $\\lfloor \\frac{m}{2}\\rfloor+1$ \uff0c\u5373 $x=1$ \u65f6\u7684\u82b1\u8d39\u3002\n\n\u7531\u4e8e\u5047\u8fb9\u6700\u591a $\\lfloor\\frac{n}{2}\\rfloor$ \u6761\uff0c\u56e0\u6b64\u603b\u82b1\u8d39\u4e3a $\\sum{\\lfloor \\frac{m}{2}\\rfloor+x}\\leq \\lceil\\frac{m+n}{2}\\rceil$\uff0c\u6ee1\u8db3\u9650\u5236\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n+m)$ \uff0c\u4e2a\u4eba\u611f\u89c9\u7ec6\u8282\u4e0d\u5c11\uff0cWA/TLE \u4e86\u597d\u591a\u53d1\u3002\n\n## Code\n\n```cpp\nvector<PR> Ans;\nint a[MAXN << 1], b[MAXN << 1], d[MAXN], head[MAXN], vis[MAXN << 1], id[MAXN << 2], n, m, Num, M, edgenum = 0;\nstruct enode{ int to, nxt; } e[MAXN << 2];\n\nvoid addedge(int u, int v) {\n\te[++ edgenum] = (enode){v, head[u]}, head[u] = edgenum;\n}\nvoid rebuild() {\n\tvector<int> O; O.clear();\n\tfor (int i = 1; i <= n ; ++ i) if (d[i] & 1) O.PB(i);\n\twhile ((int)O.size()) { \n\t\tint x = O.back(); O.pop_back(); \n\t\tint y = O.back(); O.pop_back(); \n\t\t++ M, a[M] = x, b[M] = y; \n\t}\n\tfor (int i = 1; i <= M ; ++ i) addedge(a[i], i), addedge(b[i], i);\n}\n\ninline void Dfs(int x) {\n\tfor (int &i = head[x]; i ; i = e[i].nxt) {\n\t\tint t = e[i].to;\n\t\tif (vis[t]) continue;\n\t\tint v = (a[t] == x ? b[t] : a[t]);\n\t\tvis[t] = 1, Dfs(v), id[++ Num] = t;\n\t}\n}\nvoid solve() {\n\tfor (int i = 1; i <= n ; ++ i) {\n\t\tNum = 0;\n\t\tDfs(i);\n\t\tint t = 1;\n\t\tfor (int j = 1; j <= Num ; ++ j) if (id[j] > m) { t = j; break; }\n\t\tfor (int j = 1; j <= t - 1 ; ++ j) id[j + Num] = id[j];\n\t\tfor (int j = 1; j <= Num ; ++ j) id[j] = id[j + t - 1];\n\n\t\tfor (int j = 1, flag = 1; j <= Num ; ++ j) { \n\t\t\tif (id[j] > m) continue;\n\t\t\tif ((j == 1 ? id[Num] : id[j - 1]) > m || (j == Num ? id[1] : id[j + 1]) > m || flag) Ans.PB(MP(a[id[j]], b[id[j]])), flag = 0;\n\t\t\telse flag = 1;\n\t\t}\n\t}\n\tprint((int)Ans.size()), putc('\\n');\n\tfor (auto v : Ans) print(v.fi), putc(' '), print(v.se), putc('\\n');\n}\nsigned main() {\n#ifndef ONLINE_JUDGE\n\tfreopen(\"a.in\", \"r\", stdin);\n#endif\n\tread(n), read(m), M = m;\n\tfor (int i = 1; i <= m ; ++ i) read(a[i]), read(b[i]), ++ d[a[i]], ++ d[b[i]];\n\n\trebuild();\n\tsolve();\n\n\treturn 0;\n}\n```\n",
        "postTime": 1635491236,
        "uid": 32063,
        "name": "fade_away",
        "ccfLevel": 0,
        "title": "CF1186F Vus the Cossack and a Graph"
    }
]