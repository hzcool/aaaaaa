[
    {
        "content": "\u63d0\u4f9b\u4e00\u79cd\u4e0d\u7528\u5e7f\u4e49$SAM$\u7684\u505a\u6cd5\n\n\u5bf9$s$\u5efa$SAM$\uff0c\u7136\u540e\u7528$t$\u53bb\u8dd1\u5339\u914d\uff0c\u5bf9\u4e8e\u5f53\u524d$i$\uff0c\u5339\u914d\u5230\u7684\u8282\u70b9\u4e3a$cur$\uff0c\u5339\u914d\u957f\u5ea6\u4e3a$nowlen$\n- \u82e5$cur$\u4e0d\u662f$SAM$\u7684$parent$\u6811\u53f6\u5b50\u8282\u70b9\uff0c\u5219continue\n- \u5426\u5219\u8bf4\u660e$t$\u4e2d$len\\in[len(fa(cur))+1,nowlen]$\uff0c$r=i$\u7684\u8fd9\u4e9b\u5b50\u4e32\u90fd\u6ee1\u8db3**\u540c\u65f6\u5728\u4e24\u4e2a\u4e32\u4e2d\u51fa\u73b0\uff0c\u4e14\u5728$s$\u4e2d\u4ec5\u51fa\u73b0\u4e00\u6b21**\n\n\u7136\u540e\u5bf9\u4e8e$t$\u518d\u5efa$SAM$\uff0c\u5bf9\u4e8e\u5f53\u524d$i$\uff0c$SAM$\u6811\u4e0a\u5bf9\u5e94\u8282\u70b9\u4e3a$pos$\n\n- \u82e5$pos$\u4e0d\u662f$SAM$\u7684$parent$\u6811\u53f6\u5b50\u8282\u70b9\uff0c\u5219continue\n- \u5426\u5219\u8bf4\u660e$t$\u4e2d$len\\in[len(fa(pos))+1,len(pos)],r=i$\u7684\u8fd9\u4e9b\u5b50\u4e32\u90fd\u6ee1\u8db3**\u5728$t$\u4e2d\u4ec5\u51fa\u73b0\u4e00\u6b21**\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a$r$\u90fd\u53ef\u4ee5\u6c42\u51fa\u5bf9\u5e94\u7684\u6ee1\u8db3\u6761\u4ef6\u7684$len$\u7684\u533a\u95f4\uff08\u5373\u4e0a\u9762\u4e24\u4e2a\u533a\u95f4\u7684\u4ea4\uff09\uff0c\u7136\u540e\u53d6\u6700\u5c0f$len$\u66f4\u65b0\u7b54\u6848\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\ntemplate<typename T>\ninline void Read(T &n){\n    char ch; bool flag=false;\n    while(!isdigit(ch=getchar()))if(ch=='-')flag=true;\n    for(n=ch^48;isdigit(ch=getchar());n=(n<<1)+(n<<3)+(ch^48));\n    if(flag)n=-n;\n}\n\nconst int MAXN = 5005;\n\nstruct SAM{\n    struct node{\n        int son[26], fa, len;\n        #define son(x,opt) t[x].son[opt]\n        #define fa(x) t[x].fa\n        #define len(x) t[x].len\n    }t[MAXN<<1];\n    int node_cnt=1, prv=1;\n\n    inline int insert(int v){\n        int x = ++node_cnt; len(x) = len(prv)+1;\n        while(prv and !son(prv,v)) son(prv,v) = x, prv = fa(prv);\n        if(!prv) fa(x) = 1;\n        else{\n            int p = son(prv,v);\n            if(len(p) == len(prv)+1) fa(x) = p;\n            else{\n                int new_p = ++node_cnt; len(new_p) = len(prv)+1;\n                fa(new_p) = fa(p); fa(p) = fa(x) = new_p;\n                copy(t[p].son,t[p].son+26,t[new_p].son);\n                while(prv and son(prv,v)==p) son(prv,v) = new_p, prv = fa(prv);\n            }\n        }\n        return prv=x;\n    }\n\n    char mk[MAXN<<1];\n    inline void Unique(){for(register int i=1; i<=node_cnt; i++) mk[fa(i)] = true;}\n}S,T;\n\nchar a[MAXN];\nint pos[MAXN];\n\nint main(){\n    scanf(\"%s\",a+1); int n = strlen(a+1);\n    for(register int i=1; i<=n; i++) S.insert(a[i]-'a'); S.Unique();\n    scanf(\"%s\",a+1); n = strlen(a+1);\n    for(register int i=1; i<=n; i++) pos[i] = T.insert(a[i]-'a'); T.Unique();\n    int ans = INT_MAX;\n    for(register int i=1, cur=1, len=0; i<=n; i++){\n        while(cur and !S.son(cur,a[i]-'a')) cur = S.fa(cur), len = S.len(cur);\n        if(!cur) cur = 1, len = 0;\n        else{\n            cur = S.son(cur,a[i]-'a'), len++;\n            if(S.mk[cur] or T.mk[pos[i]]) continue;\n            if(len <= T.len(T.fa(pos[i]))) continue;\n            if(T.len(pos[i]) <= S.len(S.fa(cur))) continue;\n            ans = min(ans,max(S.len(S.fa(cur))+1,T.len(T.fa(pos[i]))+1));\n        }\n    }\n    cout<<(ans==INT_MAX?-1:ans)<<endl;\n    return 0;\n}\n```",
        "postTime": 1611110216,
        "uid": 56825,
        "name": "oisdoaiu",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF427D \u3010Match and Catch\u3011"
    },
    {
        "content": "\u6211\u5176\u5b9e\u5f88\u7591\u60d1\uff0c\u4e3a\u4ec0\u4e48\u5168\u7f51\u6ca1\u4eba\u7528 SA\uff1f\u8fd9\u4e2a\u9898\u7528 SA \u4e0d\u662f\u5de8\u6c34\u5417\uff1f~~\u6211\u6d17\u4e2a\u6fa1\u5c31\u505a\u51fa\u6765\u4e86~~\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u4f20\u7edf\u62fc\u63a5\u5b57\u7b26\u4e32\u7684\u65b9\u5f0f\u62fc\u63a5\u4e00\u4e0b\u5b57\u7b26\u4e32\uff0c\u6c42\u4e00\u904d SA \u548c `height` \u6570\u7ec4\u3002\n\n\u7136\u540e\u5462\uff1f\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u9898\u76ee\u8ba9\u6211\u4eec\u6c42\u7684\u662f\u6700\u77ed\u7684\u6ee1\u8db3\u5404\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u8fde\u7eed\u516c\u5171\u5b57\u4e32\u3002\u597d\uff0c\u6211\u4eec\u77e5\u9053\u5bf9\u4e8e `height` \u6570\u7ec4\uff0c\u5982\u679c\u4e00\u4e2a\u5b50\u4e32\u53ea\u5728\u4e24\u4e2a\u4e32\u4e2d\u5404\u51fa\u73b0\u4e00\u6b21\uff0c\u4e00\u5b9a\u662f\u4e00\u4e2a\u201c\u5cf0\u503c\u201d\uff0c\u5373\u5982 $height_{x-1}<height_x>height_{x+1}$\u3002\u90a3\u4e48\u8fd9\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u53d6\u5230\u7684\u6700\u77ed\u7684\u4e32\u662f\u591a\u957f\uff1f\u6211\u4eec\u53ea\u8981\u6bd4\u4e24\u8fb9\u7684\u4e32\u957f\u4e00\u70b9\u5c31\u591f\u4e86\uff0c\u56e0\u6b64\u662f $\\max(height_{x-1},height_{x+1})+1$\u3002\u4e00\u53e5\u8bdd\u7b54\u6848\uff1a\n\n$$ans=\\min\\limits_{x\\in (1,n)\\operatorname{and}height_{x-1}<height_x>height_{x+1}} {\\{\\max(height_{x-1},height_{x+1})+1}\\}$$\n\n\u6ca1\u6709\u6ee1\u8db3\u6761\u4ef6\u7684 $x$\uff0c\u5c31\u8f93\u51fa $-1$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n+n)$\u3002\n\n```cpp\n//Don't act like a loser.\n//This code is written by huayucaiji\n//You can only use the code for studying or finding mistakes\n//Or,you'll be punished by Sakyamuni!!!\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\n\nint read() {\n\tchar ch=getchar();\n\tint f=1,x=0;\n\twhile(ch<'0'||ch>'9') {\n\t\tif(ch=='-')\n\t\t\tf=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9') {\n\t\tx=x*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn f*x;\n}\n\nconst int MAXN=2e5+10; \n\nint n,m;\nint sa[MAXN],rnk[MAXN],height[MAXN],tmp[MAXN],a[MAXN],b[MAXN],cnt[MAXN],calc[MAXN],bel[MAXN];\nchar s[MAXN];\n\nvoid bucket_sort(int v[]) {\n\tfill(cnt,cnt+m+1,0);\n\tfor(int i=1;i<=n;i++) {\n\t\tcnt[v[i]+1]++;\n\t}\n\tfor(int i=1;i<=m;i++) {\n\t\tcnt[i]+=cnt[i-1];\n\t}\n\tfor(int i=1;i<=n;i++) {\n\t\ttmp[++cnt[v[sa[i]]]]=sa[i];\n\t}\n\tfor(int i=1;i<=n;i++) {\n\t\tsa[i]=tmp[i];\n\t}\n}\n\nvoid get_sa() {\n\tfor(int i=1;i<=n;i++) {\n\t\trnk[i]=tmp[i]=s[i];\n\t\tsa[i]=i;\n\t}\n\tsort(tmp+1,tmp+n+1);\n\tm=unique(tmp+1,tmp+n+1)-tmp-1;\n\tfor(int i=1;i<=n;i++) {\n\t\trnk[i]=lower_bound(tmp+1,tmp+m+1,rnk[i])-tmp;\n\t}\n\t\n\tfor(int l=1;l<n;l<<=1) {\n\t\tfor(int i=1;i<=n;i++) {\n\t\t\ta[i]=rnk[i];\n\t\t\tb[i]=(i+l<=n? rnk[i+l]:0);\n\t\t}\n\t\tbucket_sort(b);\n\t\tbucket_sort(a);\n\t\t\n\t\tm=0;\n\t\tfor(int i=1;i<=n;i++) {\n\t\t\tif(a[sa[i]]!=a[sa[i-1]]||b[sa[i]]!=b[sa[i-1]]) {\n\t\t\t\tm++;\n\t\t\t}\n\t\t\trnk[sa[i]]=m;\n\t\t}\n\t}\n}\n\nvoid get_height() {\n\tint h=0;\n\tfor(int i=1;i<=n;i++) {\n\t\tif(h) {\n\t\t\th--;\n\t\t}\n\t\tif(rnk[i]==1) {\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tint p=i+h;\n\t\tint q=sa[rnk[i]-1]+h;\n\t\t\n\t\twhile(p<=n&&q<=n&&s[p]==s[q]) {\n\t\t\tp++;\n\t\t\tq++;\n\t\t\th++;\n\t\t}\n\t\theight[rnk[i]]=h;\n\t}\n}\n\nint solve() {\n\tint ans=1e9+10;\n\tbool flag=0;\n\t\n\tfor(int i=2;i<=n;i++) {\n\t\tif(height[i]>height[i-1]&&height[i]>height[i+1]) {\n\t\t\tif(bel[sa[i]]!=bel[sa[i-1]]) {\n\t\t\t\tans=min(max(height[i-1],height[i+1])+1,ans);\n\t\t\t\tflag=1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn flag? ans:-1;\n}\n\nsigned main() {\n\tscanf(\"%s\",s+1);\n\tn=strlen(s+1);\n\tfor(int i=1;i<=n;i++) {\n\t\tbel[i]=1;\n\t}\n\ts[n+1]='$';\n\tscanf(\"%s\",s+n+2);\n\tn=strlen(s+1);\n\tfor(int i=1;i<=n;i++) {\n\t\tif(!bel[i]&&s[i]!='$') {\n\t\t\tbel[i]=2;\n\t\t}\n\t}\n\t\t\n\tget_sa();\n\tget_height();\n\t\n\tprintf(\"%lld\\n\",solve());\n\treturn 0;\n}\n\n```",
        "postTime": 1613402162,
        "uid": 132976,
        "name": "huayucaiji",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF427D \u3010Match &amp; Catch\u3011"
    },
    {
        "content": "z\u7b97\u6cd5\n\n\u679a\u4e3e$S_1$\u7684\u6bcf\u4e00\u4e2a\u540e\u7f00$T_i$\n\n\u8bbe\n\n$$ S = T_i + \\# + S_1 + \\$ +S_2 $$\n\n\u8fd9\u6837\uff0cS\u7684\u6bcf\u4e00\u4e2a\u957f\u5ea6\u5c0f\u4e8e$T_i$\u7684\u524d\u7f00\u5c31\u662f$S_1$\u7684\u4e00\u4e2a\u5b50\u4e32\uff08\u5373\u6bcf\u4e2a\u540e\u7f00\u7684\u6bcf\u4e2a\u524d\u7f00\uff09\n\n\u4f7f\u7528z\u7b97\u6cd5\uff0c\u6c42\u51fa$z_i$\n\n\u5982\u4f55\u627e\u53ef\u884c\u89e3\uff1f\n\n\u628a\u539f\u6765$T$\u7684\u4f4d\u7f6e\u7684$z$\u5ffd\u7565\u6389\n\n\u7136\u540e\u5bfb\u627e$z$\u6700\u5927\u7684\u5143\u7d20\n\n\u5982\u679c\u8fd9\u4e2a\u5143\u7d20\u552f\u4e00\uff0c\u90a3\u4e48\u8fd9\u5c31\u662f\u4e00\u4e2a\u7b54\u6848\n\n_\u60f3\u4e00\u60f3\uff0c\u4e3a\u4ec0\u4e48\uff1f_\n\n\u4f46\u662f\u4e0d\u96be\u53d1\u73b0\uff0c\u8fd9\u4e2a\u7b54\u6848\u4e0d\u662f\u6700\u5c0f\u7684\n\n**\u65b0\u7684\u601d\u8def\u53ef\u6709\u7c7b\u6bd4\u539f\u6765\u601d\u8def\u5f97\u51fa**\n\n\u60f3\u4e00\u60f3\u4e3a\u4ec0\u4e48\u8981\u5bfb\u627e$z$\u6700\u5927\u7684\u5143\u7d20\uff1f\n\n\u56e0\u4e3a\u5982\u679c\u5c0f\u4e8e\u6700\u5927\u503c\uff0c\u90a3\u4e48\u6700\u5927\u503c\u5c31\u4f1a\u5305\u542b\u8fd9\u4e2a\u5e8f\u5217\n\n\u6240\u4ee5\u7b54\u6848\u5c31\u662f\uff0c\u4e00\u4e2a\u5143\u7d20\uff0c\u6ca1\u6709z\u503c\u6bd4\u8fd9\u4e2a\u5143\u7d20\u5927\u7684\uff0c\u81ea\u7136\u5c31\u662f\u8981\u9009z\u7684\u6700\u5927\u503c\n\n\u4ece\u4e0a\u8ff0\u601d\u8def\uff0c\u5bfb\u627e\u5982\u4f55\u8ba9\u7b54\u6848\u5c3d\u91cf\u5c0f\n\nz\u7684\u6b21\u5927\u503c\u81ea\u7136\u662f\u4e0d\u884c\u7684\n\n\u4f46\u662f\u53d1\u73b0\u6b21\u5927\u503c+1\u662f\u6ee1\u8db3\u6761\u4ef6\u7684\n\n\u4e00\u65b9\u9762\uff0c\u5b83\u6bd4\u6700\u5927\u503c\u5c0f\uff0c\u6240\u4ee5\u88ab\u552f\u4e00\u7684\u6700\u5927\u503c\u5305\u542b\uff1b\n\n\u53e6\u4e00\u65b9\u9762\uff0c\u5b83\u6bd4\u6b21\u5927\u503c\u5927\uff0c\u6240\u4ee5**\u4ec5**\u88ab\u6700\u5927\u503c\u5305\u542b\n\n\u6240\u4ee5\u53ef\u8bc1\uff0c\u6b21\u5927\u503c+1\u4e5f\u662f\u552f\u4e00\u7684\n\n\u6240\u4ee5\uff0c\u6309\u5982\u4e0a\u65b9\u6cd5\uff0c\u5bf9$S_1$\u7684\u6bcf\u4e00\u4e2a\u540e\u7f00\u6c42\u6700\u5927\u503c\u548c\u6b21\u5927\u503c\uff0c\u518d\u7528\u6b21\u5927\u503c\u66f4\u65b0\u7b54\u6848\n\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<string>\nconst int MAXL = 5e3 + 5;\nconst int inf = 0x3fffffff;\nusing namespace std;\n\ninline int min(int a,int b){ return a<b? a: b;}\n\nstring s1,s2,s;\nint z[MAXL*3];\n\ninline void calc_z(void)\n{\n\tint l=0, r=0;\n\tfor(int i=1; i<(int)s.size(); ++i)\n\t{\n\t\tz[i]=0;\n\t\tif(i<r) z[i] = min(r-i, z[i-l]);\n\t\twhile(r<(int)s.size() && s[z[i]] == s[i+z[i]]) ++z[i];\n\t\tif(i+z[i] > r) l=i, r=i+z[i];\n\t}\n}\n\nint main(void)\n{\n\tcin>>s1>>s2;\n\t\n\tint ans = inf;\n\tfor(int i=0; i<(int)s1.size(); ++i)\n\t{\n\t\ts = s1.substr(i,s1.size()-i) + '#' + s1 + '$' + s2;\n\t\tcalc_z();\n\t\tz[s1.size()+1] = 0;\n\t\tcout<<s<<\"\\t\";\n\t\tint tmp=0, tmp2=0;\n\t\tbool flag=0;\n\t\tint pos = -1;\n\t\tfor(int j=1; j<(int)s.size(); ++j)\n\t\t{\n\t\t\tif(z[j] > tmp)\n\t\t\t{\n\t\t\t\ttmp2=tmp;\n\t\t\t\ttmp=z[j];\n\t\t\t\tpos=j;\n\t\t\t\tflag=1;\n\t\t\t}\n\t\t\telse if(z[j]==tmp) flag=0;\n\t\t\telse if(z[j] > tmp2) tmp2=z[j];\n\t\t}\n\t\tif(flag && pos > 2*(int)s1.size() - i + 1)\n\t\t\tans = min(ans, tmp2+1);\n\t}\n\t\n\tif(ans==inf) printf(\"-1\");\n\telse printf(\"%d\",ans);\n\treturn 0;\n}\n\n```",
        "postTime": 1565705197,
        "uid": 73687,
        "name": "He_Ren",
        "ccfLevel": 10,
        "title": "\u89e3\u9898\u62a5\u544a CF427D \u3010Match & Catch\u3011"
    },
    {
        "content": "\u9898\u610f:\n>\u5728\u4e24\u4e2a\u4e32\u4e2d\u5404\u51fa\u73b0\u4e00\u6b21\u7684\u6700\u77ed\u516c\u5171\u5b50\u4e32.\n\n# \u65b9\u6cd51:$SAM$\n~~\u7b80\u76f4\u662f\u88f8\u9898.~~\n\n\u5176\u5b9e\u7528SAM\u7684\u505a\u6cd5\u53ef\u4ee5\u4e0d\u7528\u57fa\u6570\u6392\u5e8f,\u76f4\u63a5\u8df3\u540e\u7f00\u94fe\u63a5\u904d\u5386\u6240\u6709\u7684\u540e\u7f00\u5c31\u884c\u4e86.\n\n\u5b9a\u4e49$f[x],g[x]$\u5206\u522b\u8868\u793a$x$\u5728$A,B$\u7684\u51fa\u73b0\u6b21\u6570.\n\n$ans=min(len[x]) ~~if(f[x]=g[x]=1)$\n\n\u91cd\u70b9\u662f\u8981\u52a0\u4e00\u4e2a\u5c0f\u526a\u679d:\n>while(x&&cnt[x]<=1) cnt[x]++,x=tr[x].fa;\n\n$cnt[x]>1$\u76f4\u63a5\u8df3\u8fc7\u5c31\u884c\u5566,\u56e0\u4e3a\u4e0a\u9762\u5168\u90e8\u88ab\u8d21\u732e\u8fc7\u4e86,\u80af\u5b9a\u4e5f>1.\n\n\u8fd9\u91cc\u867d\u7136\u662f\u4e24\u4e2a\u4e32,\u4f46\u662f\u5e76\u4e0d\u7528\u6309\u7167\u5e7f\u4e49\u540e\u7f00\u81ea\u52a8\u673a\u90a3\u6837\u6253,\u56e0\u4e3a\u8fd9\u6837\u4ec5\u4ec5\u662f\u591a\u4e86\u51e0\u4e2a\u7a7a\u8282\u70b9\u800c\u5df2.\n\n\n\u4ee3\u7801\u5f88\u77ed\u54e6~:\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int N=2e4+10;\n\nint n,last=1,tot=1,f[N],g[N],ans=N; char s[N];\nstruct node{int fa,len,v[26];}tr[N];\nvoid add(int c,int *cnt) {\n\tint p=last,x=last=++tot; tr[x].len=tr[p].len+1;\n\tfor(\t;p&&tr[p].v[c]==0;p=tr[p].fa) tr[p].v[c]=x;\n\tif(!p)  tr[x].fa=1;\n\telse {\n\t\tint q=tr[p].v[c],y;\n\t\tif(tr[p].len+1==tr[q].len) tr[x].fa=q;\n\t\telse {\n\t\t\ttr[y=++tot]=tr[q]; f[y]=f[q]; g[y]=g[q];\n\t\t\ttr[y].len=tr[p].len+1;\n\t\t\ttr[q].fa=tr[x].fa=y;\n\t\t\tfor(\t;p&&tr[p].v[c]==q;p=tr[p].fa) tr[p].v[c]=y;\n\t\t}\n\t}\n\tx=last;\n\twhile(x&&cnt[x]<=1) cnt[x]++,x=tr[x].fa;\n}\n\n\nint main() {\n\tscanf(\"%s\",s+1);last=1;for(int i=1;s[i];i++) add(s[i]-'a',f);\n\tscanf(\"%s\",s+1);last=1;for(int i=1;s[i];i++) add(s[i]-'a',g);\n\tfor(int i=2;i<=tot;i++) if(f[i]==g[i]&&f[i]==1) ans=min(ans,tr[tr[i].fa].len+1);\n\tif(ans==N) puts(\"-1\");\n\telse printf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n# \u65b9\u6cd52:$SA$\n[\u601d\u8def\u6765\u6e90](https://bubbleioa.blog.luogu.org/solution-cf427d)\n\n\u90a3\u91cc\u7684\u590d\u6742\u5ea6\u662f$O(n^2)$,\u4f46\u662f\u6211\u53d1\u73b0\u53ef\u4ee5\u4f18\u5316\u4e3a$O(n)$.\n\n**\u5177\u4f53\u505a\u6cd5**:\n\n\u6309\u7167SA\u5e38\u89c4\u64cd\u4f5c,\u7528\u4e00\u4e2a\u7279\u6b8a\u5b57\u7b26(\u5982'#')\u628a\u4e24\u4e2a\u4e32\u5148\u8fde\u63a5\u8d77\u6765.\n\n\u9996\u5148,\u663e\u7136\u5b50\u4e32\u4e3a\u4e00\u4e2a\u540e\u7f00\u7684\u524d\u7f00,\u6240\u4ee5\u7b54\u6848\u5bf9\u5e94\u7684\u4e32\u5373\u4e3a\u4e24\u4e2a\u4e32\u7684\u540e\u7f00(\u8bbe\u4e3a$x,y$)\u7684\u524d\u7f00\u5566.\n\n\u8981\u6ee1\u8db3\u5728\u4e24\u4e2a\u4e32\u90fd\u552f\u4e00\u51fa\u73b0,\u540e\u7f00$x,y$\u4e00\u5b9a\u5728\u6392\u5e8f\u540e\u76f8\u90bb,\u5426\u5219\u8bbe\u4e2d\u95f4\u6709\u4e00\u4e2a\u540e\u7f00$z$,$x,y$\u9009\u62e9\u957f\u5ea6\u4e3a$l$\u7684\u524d\u7f00,\u90a3\u4e48$z$\u4e0e$x,y$\u7684\u516c\u5171\u524d\u7f00\u4e5f\u4e00\u5b9a$\\ge l$.\n\n\u5982\u679c\u6211\u4eec\u679a\u4e3e\u7b54\u6848$k$,\u5e76\u5bf9$height$\u8fdb\u884c\u5206\u7ec4\u7684\u8bdd.\n\u53ea\u6709\u4e00\u7ec4\u5185\u6b63\u597d\u6709\u4e00\u4e2a\u6765\u81eaA,\u4e00\u4e2a\u6765\u81eaB,\u90a3\u4e48\u5c31\u53ef\u884c.\n\n\u8fd9\u662f\u4e00\u4e2a$O(n^2)$\u7684\u505a\u6cd5:\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int N=1e4+10;\n\nchar s[N];\nint n,m,mid,ans,sa[N],wa[N],wb[N],wv[N],c[N],height[N],rk[N],f[N];\nvoid DA() {\n\tint *x=wa,*y=wb,i,j,p,k;\n\tfor(i=1;i<=m;i++) c[i]=0;\n\tfor(i=1;i<=n;i++) c[x[i]=s[i]]++;\n\tfor(i=2;i<=m;i++) c[i]+=c[i-1];\n\tfor(i=n;i>=1;i--) sa[c[x[i]]--]=i;\n\tfor(j=p=1;p<n;m=p,j*=2) {\n\t\tfor(p=0,i=n-j+1;i<=n;i++) y[++p]=i;\n\t\tfor(i=1;i<=n;i++) if(sa[i]>j) y[++p]=sa[i]-j;\n\t\tfor(i=1;i<=n;i++) wv[i]=x[y[i]];\n\t\tfor(i=1;i<=m;i++) c[i]=0;\n\t\tfor(i=1;i<=n;i++) c[wv[i]]++;\n\t\tfor(i=2;i<=m;i++) c[i]+=c[i-1];\n\t\tfor(i=n;i>=1;i--) sa[c[wv[i]]--]=y[i];\n\t\tswap(x,y); p=x[sa[1]]=1;\n\t\tfor(i=2;i<=n;i++)\n\t\t\tx[sa[i]]=(y[sa[i-1]]==y[sa[i]]&&y[sa[i-1]+j]==y[sa[i]+j])?p:++p;\n\t}\n\tfor(i=1;i<=n;i++) rk[sa[i]]=i;\n\tfor(i=1,k=0;i<=n;height[rk[i++]]=k)\n\t\tfor(k?k--:0,j=sa[rk[i]-1];s[i+k]==s[j+k];k++);\n}\n\nbool check(int k) {//\u7b54\u6848\u662f\u5426>=k \n\tint c1,c2; c1=c2=0;\n\tfor(int i=2;i<=n;i++) {//\u6392\u540d\u4e3a1\u7684\u4e3a#\n\t\tif(height[i]<k) {\n\t\t\tif(c1==1&&c2==1) return 1;\n\t\t\tc1=c2=0; \n\t\t\tif(sa[i]<mid) c1=1;//A\n\t\t\telse c2=1;\n\t\t\tcontinue;\n\t\t}\n\t\tif(sa[i]<mid) c1++;\n\t\telse c2++;\n\t}\n\treturn c1==1&&c2==1;\n}\n\nvoid solve() {\n\tint ans=-1;\n\tfor(int i=1;i<mid;i++)\n\t\tif(check(i)) {ans=i; break;}\n\tprintf(\"%d\\n\",ans);\n}\n\nint main() {\n\tscanf(\"%s\",s+1); mid=strlen(s+1); s[++mid]='#';\n\tscanf(\"%s\",s+mid+1); n=mid+strlen(s+mid+1); m=122;\n\tDA(); solve(); return 0;\n}\n```\n\n\u8fd9\u6837\u5f53\u7b54\u6848\u4e3a-1\u65f6,\u5224\u65ad\u7684\u4ee3\u4ef7\u8fc7\u9ad8,\u6211\u4eec\u8003\u8651\u8fdb\u884c\u4f18\u5316.\n\n\u5047\u8bbe\u6211\u4eec\u77e5\u9053$k$,\u5e76\u4e14\u5206\u7ec4\u60c5\u51b5\u4e3a$[i,i+1]$,\u5219\u6709:\n$\\begin{cases}\nheight[i]<k\\\\\nheight[i+1]>=k\\\\\nheight[i+2]<k\\\\\n((sa[i]<mid)\\operatorname{xor}(sa[i+1]<mid))==1\n\\end{cases}$\n\n(mid\u4e3a\u4e2d\u95f4'#'\u7684\u4f4d\u7f6e,\u4e0a\u9762\u8fd9\u53e5\u8bdd\u8868\u793a\u4e00\u4e2a\u662fA\u4e32,\u4e00\u4e2a\u662fB\u4e32).\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u53cd\u8fc7\u6765,\u6709$[i,i+2]$\u7684\u5173\u7cfb\u6765\u6c42\u51fa\u6700\u5c0f\u7684$k$.\n\n\u5bb9\u6613\u77e5\u9053:\n$ k\\in (max(height[i],height[i+2]),height[i+1]) [if~~~i,i+1$\u6765\u81ea\u4e0d\u540c\u4e32$]$\n\n\u6240\u4ee5\u6211\u4eec$O(n)$\u626b\u63cf\u5373\u53ef\u6c42\u51fa\u6700\u5c0f\u7684$k$\u5566.\n\n\u5982\u679c\u7528$O(n)$\u6c42SA,\u6574\u4e2a\u7b97\u6cd5\u5c31$O(n)$\u5566.~~(\u7136\u800c\u6211\u5e76\u4e0d\u60f3\u6253)~~\n\n\u5982\u679c\u5b57\u7b26\u603b\u6570\u591a\u8fbe1e7,\u5b57\u7b26\u96c6\u6709\u5f88\u5927,\u5c31\u80fd\u987a\u5229\u628a$SAM$\u5361\u6389\u5566.\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int N=1e4+10;\n\nchar s[N];\nint n,m,mid,ans,sa[N],wa[N],wb[N],wv[N],c[N],height[N],rk[N],f[N];\nvoid DA() {\n\tint *x=wa,*y=wb,i,j,p,k;\n\tfor(i=1;i<=m;i++) c[i]=0;\n\tfor(i=1;i<=n;i++) c[x[i]=s[i]]++;\n\tfor(i=2;i<=m;i++) c[i]+=c[i-1];\n\tfor(i=n;i>=1;i--) sa[c[x[i]]--]=i;\n\tfor(j=p=1;p<n;m=p,j*=2) {\n\t\tfor(p=0,i=n-j+1;i<=n;i++) y[++p]=i;\n\t\tfor(i=1;i<=n;i++) if(sa[i]>j) y[++p]=sa[i]-j;\n\t\tfor(i=1;i<=n;i++) wv[i]=x[y[i]];\n\t\tfor(i=1;i<=m;i++) c[i]=0;\n\t\tfor(i=1;i<=n;i++) c[wv[i]]++;\n\t\tfor(i=2;i<=m;i++) c[i]+=c[i-1];\n\t\tfor(i=n;i>=1;i--) sa[c[wv[i]]--]=y[i];\n\t\tswap(x,y); p=x[sa[1]]=1;\n\t\tfor(i=2;i<=n;i++)\n\t\t\tx[sa[i]]=(y[sa[i-1]]==y[sa[i]]&&y[sa[i-1]+j]==y[sa[i]+j])?p:++p;\n\t}\n\tfor(i=1;i<=n;i++) rk[sa[i]]=i;\n\tfor(i=1,k=0;i<=n;height[rk[i++]]=k)\n\t\tfor(k?k--:0,j=sa[rk[i]-1];s[i+k]==s[j+k];k++);\n}\n\nvoid solve() {\n\tint ans=N;\n\tfor(int i=2;i<n;i++) if((sa[i]<mid)^(sa[i+1]<mid)) {\n\t\tint a=max(height[i],height[i+2]),b=height[i+1];//k\u5c5e\u4e8e(a,b]\n\t\tif(a<b) ans=min(ans,a+1);\n\t}\n\tif(ans==N) puts(\"-1\");\n\telse printf(\"%d\\n\",ans);\n}\n\nint main() {\n\tscanf(\"%s\",s+1); mid=strlen(s+1); s[++mid]='#';\n\tscanf(\"%s\",s+mid+1); n=mid+strlen(s+mid+1); m=122;\n\tDA(); solve(); return 0;\n}\n```\n\n\n\n\n",
        "postTime": 1585229323,
        "uid": 118826,
        "name": "2018LZY",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF427D \u3010Match &amp; Catch\u3011"
    },
    {
        "content": "\u6765\u4e00\u7bc7\u7b80\u5355\u6613\u61c2\u7684 hash \u8868\u7684\u9898\u89e3\u3002\n\n\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u5b57\u7b26\u4e32\u957f\u5ea6 $l$\uff0c\u518d\u4f9d\u6b21\u5c06\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u957f\u5ea6\u4e3a $l$ \u7684\u5b57\u7b26\u4e32\u4e22\u8fdb hash \u8868\uff0c\u5982\u679c\u90fd\u4e22\u5b8c\u4e86\u53d1\u73b0\u5b58\u5728\u4e00\u4e2a hash \u503c\u6070\u597d\u88ab\u4e24\u4e2a\u5b57\u7b26\u4e32\u4f7f\u7528\u4e86\u4e00\u6b21\uff0c\u90a3\u4e48 $l$ \u5c31\u662f\u7b54\u6848\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2)$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define uLL unsigned long long\nconst int mod=12227;\nconst int N=10010;\nstruct HashMap{ //hash \u8868\n\tint eb[N],ec[mod],tot[N][2],etot;\n\tuLL ea[N];\n\tvoid init(){\n\t\tetot=0;memset(ec,0,sizeof(ec));\n\t}\n\tbool insert(uLL hashVal,bool tp){ //\u63d2\u5165\uff0ctp \u8868\u793a\u8fd9\u662f\u54ea\u4e2a\u5b57\u7b26\u4e32\u7684\u8d21\u732e\n\t\tint x=hashVal%mod;\n\t\tfor (int i=ec[x];i;i=eb[i]){ //\u5bfb\u627e\u5df2\u6709\u7684 hash \u503c\u91cc\u6709\u6ca1\u6709\u8981\u63d2\u5165\u7684\u90a3\u4e2a\n\t\t\tif (hashVal==ea[i]){\n\t\t\t\ttot[i][tp]++; //\u5982\u679c\u6709\u5c31\u539f\u5730\u63d2\u5165\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t\tetot++; //\u5982\u679c\u6ca1\u6709\u5c31\u65b0\u5efa\n\t\tea[etot]=hashVal;eb[etot]=ec[x];ec[x]=etot;\n\t\ttot[etot][tp]=1;tot[etot][tp^1]=0;\n\t\treturn 0;\n\t}\n\tbool check(){\n\t\tfor (int i=1;i<=etot;++i){ //\u679a\u4e3e\u6bcf\u4e00\u4e2a hash \u503c\uff0c\u5982\u679c\u6070\u597d\u4e24\u8fb9\u90fd\u7528\u4e86\u4e00\u6b21\uff0c\u5c31\u5408\u6cd5\n\t\t\tif (tot[i][0]==tot[i][1] && tot[i][0]==1) return 1;\n\t\t}\n\t\treturn 0;\n\t}\n}hashTable;\nchar S[N],T[N];\nconst int basis=13331;\nuLL A[N],B[N],P[N];\n//\u4ee5\u4e0b\u4e24\u4e2a\u51fd\u6570\u6c42\u5b50\u4e32\u7684 hash \u503c\nuLL getHashA(int l,int r){\n\treturn A[r]-A[l-1]*P[r-l+1];\n}\nuLL getHashB(int l,int r){\n\treturn B[r]-B[l-1]*P[r-l+1];\n}\nint read(){\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile (ch<'0' || ch>'9'){\n\t\tif (ch=='-') f=-f;\n\t\tch=getchar();\n\t}\n\twhile (ch>='0' && ch<='9'){\n\t\tx=x*10+ch-48;\n\t\tch=getchar();\n\t}\n\treturn x*f;\n}\nsigned main(){\n\tscanf(\"%s%s\",S,T);\n\tint n=strlen(S),m=strlen(T);\n    //\u4ee5\u4e0b\u4e09\u884c\u9884\u5904\u7406 hash \u503c\n\tP[0]=1;for (int i=1;i<=N-1;++i) P[i]=P[i-1]*basis;\n\tA[0]=0;for (int i=1;i<=n;++i) A[i]=A[i-1]*basis+S[i-1];\n\tB[0]=0;for (int i=1;i<=m;++i) B[i]=B[i-1]*basis+T[i-1];\n\tbool flag=0;\n\tfor (int i=1;i<=min(n,m);++i){ //\u679a\u4e3e\u957f\u5ea6\n\t\thashTable.init();\n\t\tfor (int j=i;j<=n;++j) hashTable.insert(getHashA(j-i+1,j),0); //\u5c06 S \u957f\u5ea6\u4e3a i \u7684\u6240\u6709\u5b50\u4e32\u4e22\u8fdb hash \u8868\n\t\tfor (int j=i;j<=m;++j) hashTable.insert(getHashB(j-i+1,j),1); //\u540c\u7406\n\t\tif (hashTable.check()){\n\t\t\tprintf(\"%d\\n\",i);flag=1;break; //\u627e\u5230\u4e86\u5c31\u7ed3\u675f\n\t\t}\n\t}\n\tif (!flag) puts(\"-1\");\n\treturn 0;\n}\n```",
        "postTime": 1610178285,
        "uid": 107231,
        "name": "zombie462",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF427D \u3010Match &amp; Catch\u3011"
    },
    {
        "content": "\u9996\u5148\u5355\u4e32\u5efa `SAM`\uff0c\u53e6\u4e00\u4e2a\u4e32\u4e0a\u53bb\u8dd1\u53d1\u73b0\u65e0\u6cd5\u4fdd\u8bc1\u53e6\u4e00\u4e2a\u4e32\u7684\u51fa\u73b0\u6b21\u6570\u4e3a $1$\u3002\n\n\u90a3\u4e48\u53cc\u4e32\u5efa\u51fa\u5e7f\u4e49 `SAM` \uff0c\u8bb0\u4e24\u4e2a $cnt$ \u5206\u522b\u7edf\u8ba1\u4e24\u4e2a\u4e32\u7684\u5b50\u4e32\u51fa\u73b0\u6b21\u6570\uff0c\u7136\u540e\u66b4\u529b\u626b\u6240\u6709\u8282\u70b9\u7528\u4e24\u4e2a $cnt$ \u90fd\u662f $1$ \u7684\u8282\u70b9\u7684 `minlen` \u66f4\u65b0\u7b54\u6848\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6\u662f\u7ebf\u6027\u7684\u3002\n\n\u4ee3\u7801\uff1a[https://codeforc.es/problemset/submission/427/199604071](https://codeforc.es/problemset/submission/427/199604071)",
        "postTime": 1680049339,
        "uid": 202791,
        "name": "louis_11",
        "ccfLevel": 0,
        "title": "CF427D"
    },
    {
        "content": "\u9898\u89e3\u91cc\u5df2\u7ecf\u6709\u4e2asam\u7684\u4e86\uff0c\u4f46\u662f\u4ed6\u4ee3\u7801\u4e0d\u7ed9\u5168\n\n\u663e\u7136\u90a3\u4e2a\u4ec0\u4e48O(n(n+m))\u7684\u90a3\u4e2a\u663e\u7136\u662f\u4e0d\u5bf9\u7684\uff0c\u54ea\u91cc\u9700\u8981\u90a3\u4e48\u505a..\n\n\u76f4\u63a5\u5bf9\u4e24\u4e2a\u4e32\u5efa\u4e2a\u5e7f\u4e49sam\uff0c\u7136\u540e\u5206\u522b\u7edf\u8ba1\u4e24\u4e2asize\uff0c\u6700\u540e\u5bf9\u6240\u6709\u8282\u70b9\u770b\u662f\u4e0d\u662f\u6ee1\u8db3$size[0]==1 \\&\\& size[1]==1$\uff0c\u7136\u540e\u56e0\u4e3a\u4e00\u4e2a\u8282\u70b9$p$\u80fd\u8868\u793a\u7684\u6700\u77ed\u4e32\u957f\u662f$len[fa[p]]+1$\uff0c\u5bf9\u8fd9\u4e2a\u73a9\u610f\u53d6\u4e2a\u6700\u5c0f\u503c\uff0c\u6ca1\u5f97\u53d6\u5224-1\u5373\u53ef\n\n```cpp\n#include<cstdio>\n#include<cstring>\ntemplate<class type>inline const void read(type &in)\n{\n\tin=0;char ch=getchar();bool f=0;\n\twhile (ch<48||ch>57){if (ch=='-')f=1;ch=getchar();}\n\twhile (ch>47&&ch<58)in=(in<<3)+(in<<1)+(ch&15),ch=getchar();\n\tif (f)in=-in;\n}\ntemplate<class type>inline const void write(type out)\n{\n\tif (out<0)putchar('-'),out=-out;\n\tif (out>9)write(out/10);\n\tputchar(out%10+48);\n}\ntemplate<class type>inline const void writeln(type out)\n{\n\twrite(out);putchar('\\n');\n}\ntemplate<class type>inline const int min(const type &a,const type &b)\n{\n\treturn a<b?a:b;\n}\nconst int N=5e3+10,M=5e3+10;\ntemplate<int maxn,int maxc>class Suffix_Automaton\n{\n    private:\n        static const int maxs=maxn<<1;\n        int head[maxs],edc,to[maxs],next[maxs];\n        int len[maxs],last,cnt,son[maxs][maxc],size[maxs][2],fa[maxs];\n        inline const void addedge(int u,int v)\n        {\n            next[++edc]=head[u];to[head[u]=edc]=v;\n        }\n        inline const void extend(int id,int c)\n        {\n            int p=last;\n            if (!son[p][c])\n            {\n                int np=++cnt;\n                size[np][id]++;\n                len[last=np]=len[p]+1;\n                for (;p&&!son[p][c];p=fa[p])son[p][c]=np;\n                if (!p)return fa[np]=1,void();\n                int q=son[p][c];\n                if (len[q]==len[p]+1)return fa[np]=q,void();\n                int nq=++cnt;len[nq]=len[p]+1;\n                memcpy(son[nq],son[q],sizeof(son[q]));\n                fa[nq]=fa[q];fa[q]=fa[np]=nq;\n                for (;son[p][c]==q;p=fa[p])son[p][c]=nq;\n                return;\n            }\n            int q=son[p][c];\n            if (len[q]==len[p]+1)return size[last=q][id]++,void();\n            int nq=++cnt;len[nq]=len[p]+1;\n            memcpy(son[nq],son[q],sizeof(son[q]));\n            fa[nq]=fa[q];fa[q]=nq;\n            for (;son[p][c]==q;p=fa[p])son[p][c]=nq;\n            size[last=nq][id]++;\n        }\n        inline const void dfs(int p)\n        {\n            for (int son,i=head[p];i;i=next[i])\n\t\t\t\tdfs(son=to[i]),\n\t\t\t\tsize[p][0]+=size[son][0],\n\t\t\t\tsize[p][1]+=size[son][1];\n        }\n    public:\n        inline Suffix_Automaton():cnt(1){}\n        inline const void insert(int id,char *s)\n        {\n            last=1;\n            int n=strlen(s+1);\n            for (int i=1;i<=n;i++)extend(id,s[i]-'a');\n        }\n        inline const int build()\n        {\n            for (int i=2;i<=cnt;i++)addedge(fa[i],i);\n            dfs(1);int mn=maxn;\n            for (int i=2;i<=cnt;i++)\n                if (size[i][0]==1&&size[i][1]==1)\n                \tmn=min(mn,len[fa[i]]+1);\n            return mn==maxn?-1:mn;\n        }\n};\nSuffix_Automaton<N+M,26>sam;\nchar s[N],t[N];\nint main()\n{\n\tscanf(\"%s%s\",s+1,t+1);\n\tsam.insert(0,s);\n\tsam.insert(1,t);\n\twriteln(sam.build());\n\treturn 0;\n}\n```",
        "postTime": 1571573064,
        "uid": 14374,
        "name": "zhengrunzhe",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF427D \u3010Match &amp; Catch\u3011"
    },
    {
        "content": ">### [\u6d1b\u8c37\u9898\u76ee\u9875\u9762\u4f20\u9001\u95e8](https://www.luogu.org/problem/CF427D) & [CodeForces\u9898\u76ee\u9875\u9762\u4f20\u9001\u95e8](https://codeforces.com/contest/427/problem/D)\n\n>\u7ed9\u5b9a$2$\u4e2a\u5b57\u7b26\u4e32$a,b,|a|=n,|b|=m$\uff0c\u6c42\u6700\u957f\u7684\u65e2\u5728$a$\u4e2d\u51fa\u73b0\u6070\u597d$1$\u6b21\u53c8\u5728$b$\u4e2d\u51fa\u73b0\u6070\u597d$1$\u6b21\u7684\u975e\u7a7a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u8f93\u51fa$-1$\u3002\n\n>$n,m\\in[1,5000]$\u3002\n\nemmm\uff0c\u6570\u636e\u8303\u56f4\u5f88\u4e0d\u53cb\u597d\uff0c$\\mathrm O(nm)$\u5e26$\\log$\u90fd\u4e0d\u884c\u3002\u3002\u3002\n\n\u8003\u8651\u679a\u4e3e$a$\u7684\u5b50\u4e32\u3002\u679a\u4e3e\u5b50\u4e32\u53ef\u4ee5\u8f6c\u5316\u4e3a\u679a\u4e3e\u6240\u6709\u540e\u7f00\u7684\u6240\u6709\u524d\u7f00\uff0c\u8fd9\u6837\u4e00\u6765\u5c31\u6709\u4e86\u201c\u524d\u7f00\u201d\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u5229\u7528\u3002\n\n\u6211\u4eec\u5728\u679a\u4e3e$a$\u7684\u540e\u7f00$a_{i\\sim n}$\u7684\u65f6\u5019\uff0c\u4ee4$c=a_{i\\sim n}+\\texttt{!}+a+\\texttt{@}+b,s=|c|$\u3002\u5bf9$c$\u8dd1\u4e00\u904dZ\u7b97\u6cd5\uff08\u5982\u679c\u806a\u660e\u7684\u8bfb\u8005\u8fd8\u4e0d\u77e5\u9053Z\u7b97\u6cd5\u662f\u4ec0\u4e48\uff0cplease\u70b9\u51fb[\u8fd9\u4e2a](https://www.luogu.org/blog/Chenxiao-Yan/Z-algorithm)\uff09\uff0c\u5c31\u53ef\u4ee5\u77e5\u9053\u540e\u7f00$a_{i\\sim n}$\u5728$a,b$\u4e2d\u7684\u51fa\u73b0\u60c5\u51b5\u4e86\u3002\n\n\u6211\u4eec\u5148\u628a$z_{c,n-i+3\\sim 2n-i+2},z_{c,2n-i+4\\sim s}$\u5206\u522b\u88c5\u5728$2$\u4e2a\u6876$buc1,buc2$\u91cc\uff0c\u5373$buc1_j$\u8868\u793a\u4f7f\u5f97\u4ece$a$\u7684\u8fd9\u4e2a\u4f4d\u7f6e\u5f80\u540e\u548c$a_{i\\sim n}$\u7684\u524d\u7f00\u5339\u914d\u6700\u957f\u957f\u5ea6\u4e3a$j$\u7684\u4f4d\u7f6e\u6570\uff0c$buc2$\u7c7b\u4f3c\u3002\u53ef\u662f\u6211\u4eec\u60f3\u8981\u7684\u662f\u4f7f\u5f97\u4ece$a$\u7684\u8fd9\u4e2a\u4f4d\u7f6e\u5f80\u540e\u548c$a_{i\\sim n}$\u7684\u524d\u7f00\u5339\u914d**\u6700\u957f\u957f\u5ea6${\\ge j}$**\u7684\u4f4d\u7f6e\u6570\uff0c\u4e5f\u5c31\u662f\u4f7f\u5f97\u4ece$a$\u7684\u8fd9\u4e2a\u4f4d\u7f6e\u5f80\u540e\u548c$a_{i\\sim n}$\u7684\u524d\u7f00**\u80fd\u591f\u5339\u914d$ j$\u8fd9\u4e48\u957f**\u7684\u4f4d\u7f6e\u6570\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u4ece$j=n-i+1$\u5230$j=1$\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\u5373\u5c06\u88abcheck\u7684$a_{i\\sim n}$\u7684\u524d\u7f00\u7684\u957f\u5ea6$j$\uff0c\u6bcf\u6b21\u82e5$buc1_j=buc2_j=1$\uff0c\u5219check\u6210\u529f\uff0c\u66f4\u65b0\u7b54\u6848$ans=\\max(ans,j)$\uff0c\u7136\u540e\u4ee4$buc1_{j-1}=buc1_{j}+buc1_{j-1},buc2_{j-1}=buc2_{j}+buc2_{j-1}$\u5373\u53ef\u3002\u8003\u8651\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u4ece\u5927\u5230\u5c0f\u9012\u63a8\u662f\u5bf9\u7684\uff1a\u9996\u5148$buc1_{n-i+1},buc2_{n-i+1}$\u672c\u6765\u5c31\u6709\u6211\u4eec\u60f3\u8981\u7684\u610f\u601d\u3002\u6bcf\u6b21\u66f4\u65b0$buc1_{j-1},buc2_{j-1}$\u90fd\u4f1a\u628a\u5b83\u4eec\u53d8\u6210\u6211\u4eec\u60f3\u8981\u7684\u610f\u601d\u4e0b\u7684\u503c~~\uff08\u611f\u6027\u7406\u89e3\u7406\u89e3\uff09~~\uff0c\u4e8e\u662f\u6bcf\u5230\u4e00\u4e2a$j$\uff0c$buc1_j,buc2_j$\u90fd\u4f1a\u662f\u6211\u4eec\u60f3\u8981\u7684\u610f\u601d\u54af\u3002\uff08\u60f3\u4e00\u60f3\u5c31\u4f1a\u53d1\u73b0\uff0c\u4e0a\u8ff0\u90a3\u4e2a\u9012\u63a8\u5c31\u662f$[1,buc1_j/buc2_j]$\u533a\u95f4$+1$\u7684\u5dee\u5206\u3002\u5f53\u7136\u5982\u679c\u60f3\u4e0d\u5230\u5dee\u5206\u7684\u8bdd\uff0c\u7ebf\u6bb5\u6811\u6216\u6811\u72b6\u6570\u7ec4\u662f\u6bd4\u8f83\u5bb9\u6613\u60f3\u7684\uff0c\u4f46\u662f\u5e26$\\log$\uff0c\u8fc7\u4e0d\u6389\u3002\u3002\u3002\uff09\n\n\u8fd9\u6837\u590d\u6742\u5ea6\u5c31\u662f$\\mathrm O(n(n+m))$~~\uff0c\u4fa5\u5e78\u8fc7~~\u3002\n\n\u4e0b\u9762\u8003\u8651\u54c8\u5e0c\u600e\u4e48\u505a\u3002\u5f88\u663e\u7136\u662f\u505a\u4e0d\u4e86\u7684\u3002\u3002\u3002\u6700\u5feb\u4e5f\u5c31\u662f\u6309\u4e0a\u8ff0\u65b9\u6cd5\uff0c\u7528\u54c8\u5e0c+\u4e8c\u5206\u6c42$z$\u6570\u7ec4\uff0c\u4f46\u6570\u636e\u8303\u56f4\u4e0d\u53cb\u597d\u554aQWQ\n\n\u5bf9\u4e86\uff0c\u6570\u636e\u4e0d\u6e05\u7a7a\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\u6bcf\u679a\u4e3e\u4e00\u4e2a$a$\u7684\u540e\u7f00\u65f6\uff0c\u90fd\u8981\u6e05\u7a7a$2$\u4e2a\u6876\uff01\uff01\uff01\n\n\u4e0b\u9762\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int inf=0x3f3f3f3f;\nconst int N=5000,M=5000;\nint n,m,s;//|a|\uff0c|b|\uff0c|c| \nchar a[N+5],b[M+5],c[2*N+M+5]/*a\u7684\u540e\u7f00+'!'+a+'@'+b*/;\nint z[2*N+M+1];//z\u6570\u7ec4 \nvoid z_init(){//Z\u7b97\u6cd5 \n\tint zl=0,zr=0;\n\tfor(int i=2;i<=s;i++)\n\t\tif(zr<i){\n\t\t\tz[i]=0;\n\t\t\twhile(i+z[i]<=s&&c[i+z[i]]==c[1+z[i]])z[i]++;\n\t\t\tif(z[i])zl=i,zr=i+z[i]-1;\n\t\t}\n\t\telse if(i+z[i-zl+1]<=zr)z[i]=z[i-zl+1];\n\t\telse{\n\t\t\tz[i]=zr-i+1;\n\t\t\twhile(i+z[i]<=s&&c[i+z[i]]==c[1+z[i]])z[i]++;\n\t\t\tzl=i;zr=i+z[i]-1;\n\t\t}\n//\tcout<<\"z\";for(int i=2;i<=s;i++)cout<<z[i];puts(\"\");\n}\nint buc1[N+1],buc2[N+1];//2\u4e2a\u6876 \nint main(){\n\tcin>>a+1>>b+1;\n\tn=strlen(a+1);m=strlen(b+1);\n\tint ans=inf; \n\tfor(int i=1;i<=n;i++){//\u679a\u4e3e\u540e\u7f00\u7684\u5de6\u7aef\u70b9 \n\t\ts=0;\n\t\tfor(int j=i;j<=n;j++)c[++s]=a[j];\n\t\tc[++s]='!';\n\t\tfor(int j=1;j<=n;j++)c[++s]=a[j];\n\t\tc[++s]='@';\n\t\tfor(int j=1;j<=m;j++)c[++s]=b[j];\n\t\tc[s+1]=0;\n\t\t//\u4e0a\u9762\u90fd\u5728\u9020c \n//\t\tcout<<c+1<<\"\\n\";\n\t\tz_init();\n\t\tmemset(buc1,0,sizeof(buc1));memset(buc2,0,sizeof(buc2));//\u6570\u636e\u4e0d\u6e05\u7a7a\uff0c\u7206\u96f6\u4e24\u884c\u6cea \n//\t\tfor(int j=n-i+3;j<=2*n-i+2;j++)cout<<c[j];cout<<\" \";for(int j=2*n-i+4;j<=s;j++)cout<<c[j];puts(\"\");\n\t\tfor(int j=n-i+3;j<=2*n-i+2;j++)buc1[z[j]]++;//\u88c5\u5230\u6876\u91cc\u9762 \n\t\tfor(int j=2*n-i+4;j<=s;j++)buc2[z[j]]++;//\u540c\u4e0a \n\t\tfor(int j=n-i+1;j;j--){//\u679a\u4e3e\u540e\u7f00\u7684\u524d\u7f00\u7684\u957f\u5ea6 \n//\t\t\tprintf(\"buc1[%d]=%d buc2[%d]=%d\\n\",j,buc1[j],j,buc2[j]);\n\t\t\tif(buc1[j]==1&&buc2[j]==1)ans=min(ans,j);//\u5982\u679c\u5404\u51fa\u73b0\u6070\u597d1\u6b21\uff0c\u5219\u66f4\u65b0\u7b54\u6848 \n\t\t\tbuc1[j-1]+=buc1[j];buc2[j-1]+=buc2[j];//\u5c06buc1[j-1],buc2[j-1]\u53d8\u4e3a\u6211\u4eec\u60f3\u8981\u7684\u610f\u601d \n\t\t}\n//\t\tputs(\"\");\n//\t\tcout<<\"ans=\"<<ans<<\"\\n\";\n\t}\n\tprintf(\"%d\",ans<inf?ans:-1);\n\treturn 0;\n}\n```",
        "postTime": 1565939143,
        "uid": 138400,
        "name": "chenxia25",
        "ccfLevel": 9,
        "title": "CodeForces 427D - Match & Catch"
    },
    {
        "content": "SAM \u88f8\u9898\u3002\n\n\u5bf9 $S$ \u548c $T$ \u90fd\u5efa\u51fa SAM\uff0c\u7531\u4e8e\u8fd9\u9898\u5141\u8bb8 $O(n^2)$\uff0c\u5c31\u5728 $S$ \u4e2d\u679a\u4e3e\u5de6\u7aef\u70b9\uff0c\u7136\u540e\u518d\u679a\u4e3e\u53f3\u7aef\u70b9\uff0c\u5728 $S$ \u548c $T$ \u7684 SAM \u4e2d\u540c\u65f6\u5339\u914d\uff0c\u53f3\u7aef\u70b9\u5f80\u53f3\u5c31\u5f80\u540e\u8df3\u4e00\u4e2a\u5b57\u7b26\u3002\u5982\u679c\u51fa\u73b0\u6b21\u6570\u90fd\u662f $1$ \u5c31\u66f4\u65b0\u7b54\u6848\u7136\u540e\u8df3\u51fa\u5faa\u73af\uff0c\u5982\u679c\u5728 $T$ \u4e2d\u7684\u51fa\u73b0\u6b21\u6570\u4e3a $0$ \u5c31\u76f4\u63a5\u8df3\u51fa\u5faa\u73af\u3002\n\n\u6c42 SAM \u6bcf\u4e2a\u72b6\u6001\u7684\u51fa\u73b0\u6b21\u6570\u53ef\u4ee5\u53c2\u8003\u6a21\u677f\u3002\n\n\u5b9e\u5728\u770b\u4e0d\u61c2\u7684\u8bdd\uff0c\u5c31\u770b\u4ee3\u7801\u7406\u89e3\u597d\u4e86\uff0c\u975e\u5e38\u7b80\u5355\u6613\u61c2\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ninline int read() {\n\tint s = 0,f = 1;char ch = getchar();\n\twhile (!isdigit(ch)) f = ch == '-' ? -1 : 1, ch = getchar();\n\twhile (isdigit(ch)) s = (s << 3) + (s << 1) + ch - '0', ch = getchar();\n\treturn s*f;\n}\nchar s[5010],t[5010];\nstruct Suffix_Automaton {\n\tstruct node {\n\t\tint len,link;\n\t\tint nxt[26];\n\t}st[10010];\n\tint sum[10010],cnt[10010],pre[10010];\n\tint sz,last;\n\tSuffix_Automaton() {\n\t\tsz = last = 1;\n\t}\n\tvoid insert(char ch) {\n\t\tint x = ++sz,p = last; last = x;\n\t\tst[x].len = st[p].len + 1;\n\t\tsum[x] = 1;\n\t\tfor (;!st[p].nxt[ch];p = st[p].link) st[p].nxt[ch] = x;\n\t\tif (!p) st[x].link = 1;\n\t\telse {\n\t\t\tint q = st[p].nxt[ch];\n\t\t\tif (st[p].len + 1 == st[q].len) st[x].link = q;\n\t\t\telse {\n\t\t\t\tint y = ++sz;\n\t\t\t\tst[y] = st[q], st[y].len = st[p].len + 1;\n\t\t\t\tfor (;st[p].nxt[ch] == q;p = st[p].link) st[p].nxt[ch] = y;\n\t\t\t\tst[x].link = st[q].link = y;\n\t\t\t}\n\t\t}\n\t}\n\tvoid init() {\n\t\tfor (int i = 1;i <= sz;i ++ ) cnt[st[i].len] ++;\n\t\tfor (int i = 1;i <= sz;i ++ ) cnt[i] += cnt[i-1];\n\t\tfor (int i = 1;i <= sz;i ++ ) pre[cnt[st[i].len]--] = i;\n\t\tfor (int i = sz;i >= 1;i -- ) {\n\t\t\tint x = pre[i];\n\t\t\tsum[st[x].link] += sum[x];//\u6c42\u5728\u8fd9\u4e2a\u72b6\u6001\u4e2d\u6bcf\u4e2a\u5b50\u4e32\u7684\u51fa\u73b0\u6b21\u6570\n\t\t}\n\t}\n}S,T;\nint main() {\n\tscanf(\"%s%s\",s+1,t+1);\n\tint ls = strlen(s+1),lt = strlen(t+1);\n\tfor (int i = 1;i <= ls;i ++ ) S.insert(s[i] - 'a');\n\tfor (int i = 1;i <= lt;i ++ ) T.insert(t[i] - 'a');\n\tS.init(); T.init();\n\tint ans = 2e9;\n\tfor (int i = 1;i <= ls;i ++ ) {\n\t\tint us = 1,ut = 1;//\u540c\u65f6\u5728 SAM \u4e0a \u5339\u914d\n\t\tfor (int j = i;j <= ls;j ++ ) {\n\t\t\tus = S.st[us].nxt[s[j] - 'a'];\n\t\t\tif (!T.st[ut].nxt[s[j] - 'a']) break;\n\t\t\tut = T.st[ut].nxt[s[j] - 'a'];\n\t\t\tif (S.sum[us] == 1 && T.sum[ut] == 1) {\n\t\t\t\tans = min(ans,j - i + 1);//\u66f4\u65b0\u7b54\u6848\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans == 2e9 ? -1 : ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1650950920,
        "uid": 94777,
        "name": "Jsxts_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF427D"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u79cd $\\Theta(n^2)$ \u7684 DP \u505a\u6cd5\u3002\n\n**\u601d\u8def\u6765\u81ea CF \u5b98\u65b9\u9898\u89e3**\u3002\n\n\u8fd9\u91cc\u5747\u9ed8\u8ba4\u5b57\u7b26\u4e32\u4e0b\u6807\u4ece $1$ \u5f00\u59cb\u3002\n\n\u6211\u4eec\u5148\u5bf9\u5b57\u7b26\u4e32 $s_1$ \u6c42\u51fa\u5b83\u672c\u8eab\u7684 $\\text{LCP}$\uff0c\u5e76\u6c42\u51fa\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $i\\in [1,\\left |s_1 \\right |]$ \u5b83\u7684\u6700\u77ed\u552f\u4e00\u5b50\u4e32\u7684\u957f\u5ea6\u3002\u5bf9\u5b57\u7b26\u4e32 $s_2$ \u4e5f\u505a\u8fd9\u6837\u7684\u64cd\u4f5c\u3002\n\n\u7136\u540e\u6211\u4eec\u5bf9\u4e8e\u5b57\u7b26\u4e32 $s_1$ \u548c $s_2$ \u6c42\u51fa\u5b83\u4eec\u7684 $\\text{LCP}$\u3002\n\n\u6700\u540e\u679a\u4e3e\u4e00\u904d\uff0c\u7edf\u8ba1\u7b54\u6848\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u4ee5\u53ca\u7ec6\u8282\u53ef\u4ee5\u770b\u4ee3\u7801\uff0c\u82e5\u89c9\u5f97\u4e0a\u9762\u8bf4\u7684\u6709\u70b9\u62bd\u8c61\u4e5f\u53ef\u4ee5\u901a\u8fc7\u770b\u4ee3\u7801\u5e76\u624b\u73a9\u51e0\u4e2a\u6837\u4f8b\u6765\u52a0\u6df1\u7406\u89e3\u3002\n\nCode\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 5005, inf = 0x3f3f3f3f;\nint lcp[N][N];\nchar a[N], b[N];\nint mUA[N], mUB[N];\nint ans = inf;\nint n, m;\n\nvoid calcLCP(char a[N], char b[N], int LCP[N][N]) {\n\tn = strlen(a + 1), m = strlen(b + 1);\n\tfor (int i = n; i; --i)\n\t\tfor (int j = m; j; --j) {\n\t\t\tif (a[i] == b[j]) LCP[i][j] = LCP[i + 1][j + 1] + 1;\n\t\t\telse LCP[i][j] = 0;\n\t\t}\n}\n\nint main() {\n\tscanf(\"%s%s\", a + 1, b + 1);\n\tcalcLCP(a, a, lcp);\n\tn = strlen(a + 1);\n\tfor (int i = 1; i <= n; ++i) {\n\t\tint len = 0;\n\t\tfor (int j = 1; j <= n; ++j) {\n\t\t\tif (i == j) continue;\n\t\t\tlen = max(len, lcp[i][j]);\n\t\t}\n\t\t++len;\n\t\tmUA[i] = len;\n\t}\n\tmemset(lcp, 0, sizeof lcp);\n\tcalcLCP(b, b, lcp);\n\tm = strlen(b + 1);\n\tfor (int i = 1; i <= m; ++i) {\n\t\tint len = 0;\n\t\tfor (int j = 1; j <= m; ++j) {\n\t\t\tif (i == j) continue;\n\t\t\tlen = max(len, lcp[i][j]);\n\t\t}\n\t\t++len;\n\t\tmUB[i] = len;\n\t}\n\tmemset(lcp, 0, sizeof lcp);\n\tcalcLCP(a, b, lcp);\n\tfor (int i = 1; i <= n; ++i)\n\t\tfor (int j = 1; j <= m; ++j)\n\t\t\tif (lcp[i][j] >= max(mUA[i], mUB[j]))\n\t\t\t\tans = min(ans, max(mUA[i], mUB[j]));\n\tif (ans == inf) ans = -1;\n\tprintf(\"%d\", ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1647743528,
        "uid": 292300,
        "name": "Kobe303",
        "ccfLevel": 0,
        "title": "CF427D"
    },
    {
        "content": "### CF427D Match & Catch\n\n\u8003\u8651\u66b4\u529b\u5230\u4e0d\u80fd\u518d\u66b4\u529b\u7684\u4e00\u4e2a\u73a9\u610f\u513f\u3002\n\n\u679a\u4e3e\u7b54\u6848 $i$ \uff0c\u627e\u51fa $S_1$ \u4e2d\u6240\u6709\u957f\u5ea6\u4e3a $i$ \u7684\u5b50\u4e32\uff0c\u770b\u770b\u5b83\u5728 $S_1$ \u548c $S_2$ \u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u3002\n\n\u548b\u4f18\u5316\uff1f\n\n\u53ef\u4ee5\u5148\u679a\u4e3e\u4e00\u904d\uff0c\u518d\u66b4\u529b\u679a\u4e3e\u5b50\u4e32\u7edf\u8ba1\uff0c\u62ff\u4e2a $\\text{map}$ \u5b58\u4e00\u4e0b\u3002\n\n\u4f46\u8fd8\u662f\u6b47\uff0c\u548b\u6574\uff1f\n\n\u54c8\u5e0c\uff01\n\n\u4f46 $O(N^2 \\log N)$\u8fd8\u662f\u8fc7\u4e0d\u4e86\uff0c\u548b\u529e\uff1f\n\n\u54c8\u5e0c\u8868\uff01\u624b\u5199\u4e2a\u54c8\u5e0c\u8868\u4ee3\u66ff $\\text{map}$ \u5c31\u8fc7\u5566\uff01",
        "postTime": 1625919537,
        "uid": 179600,
        "name": "shao0320",
        "ccfLevel": 8,
        "title": "CF427D Match & Catch"
    },
    {
        "content": "\u5e7f\u4e49SAM\u88f8\u9898   \n\n\u76f4\u63a5\u63d2\u5165\u53cc\u4e32\u4ee5\u540e\u66b4\u529b\u679a\u4e3e\u6240\u6709\u8282\u70b9\u5373\u53ef\n\n\n\u7ec6\u8282\u770b\u4e3b\u4ee3\u7801\uff1a\n\n```cpp\n\n \nint main()\n{\n\tios::sync_with_stdio(false);\n\tEXSAM part;\n\tstring a, b;\n\tcin >> a >> b;\n\tpart.init();\n\tfor (auto &s : a)\n\t\tpart.Insert(s - 'a', 0);\n\tpart.last = part.root;\n\tfor (auto &s : b)\n\t\tpart.Insert(s - 'a', 1);\n\tpart.topo();\n\tint cnt = part.cur - EXSAM_Pool;\n\tfor (int i = cnt - 1; i >= 1; i--)\n\t{\n\t\tEXpool[i]->pre->cnt[0] += EXpool[i]->cnt[0];\n\t\tEXpool[i]->pre->cnt[1] += EXpool[i]->cnt[1];\n\t}\n\tint ans = 100000;\n\tfor (int i = cnt - 1; i >= 1; i--)\n\t{\n\t\tif (EXpool[i]->cnt[0] == 1 && EXpool[i]->cnt[1] == 1)\n\t\t{\n\t\t\tans = min(ans, EXpool[i]->pre->step+1);\n\t\t}\n\t}\n\tif (ans != 100000)\n\t\tcout << ans << endl;\n\telse\n\t\tcout << -1 << endl;\n\treturn 0;\n}\n \n```\n",
        "postTime": 1570001192,
        "uid": 154957,
        "name": "qiyue7",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF427D \u3010Match &amp; Catch\u3011"
    },
    {
        "content": "> [\u535a\u5ba2\u94fe\u63a5](http://bubbleioa.top/archives/915)\n## \u9898\u89e3\n\u9898\u76ee\u5927\u610f\uff1a\u6c42\u6700\u5c0f\u4e0d\u91cd\u590d\u76f8\u540c\u5b50\u4e32\u3002\n\n\u8003\u8651\u628a\u4e24\u4e2a\u5b57\u7b26\u4e32\u5408\u5e76\u8d77\u6765\uff0c\u6c42\u51fasa\uff0crk\u548cHeight\u6570\u7ec4\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u5b50\u4e32\u957f\u5ea6k\uff0c\u7136\u540e\u518d\u679a\u4e3e\u540e\u7f00\u3002  \n\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u662f\u6839\u636e\u5b50\u4e32\u5b57\u5178\u5e8f\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u540e\u7f00\u7684  \n\u5982\u679cHeight[i]\u4e0d\u5c0f\u4e8ek\uff08\u5373\u7b2ci-1\u4e2a\u5b50\u4e32\u548c\u7b2ci\u4e2a\u5b50\u4e32\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u4e0d\u5c0f\u4e8ek\uff09\uff0c  \n\u5e76\u4e14\u5982\u679c\u6b64\u540e\u7f00\u7684\u8d77\u59cb\u70b9\u5728\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0ccnt1++  \n\u5426\u5219cnt2++\n\ncnt1\u548ccnt2\u5206\u522b\u4ee3\u8868\u6700\u957f\u516c\u5171\u5b50\u4e32\u51fa\u73b0\u5728\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u548c\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e32\u7684\u6b21\u6570\uff0c\u7531\u4e8e\u662f\u8fde\u7eed\u66f4\u65b0\u7684\uff0c\u6240\u4ee5\u5047\u5982\u4e0a\u4e00\u8f6ecnt1=1\uff0c\u73b0\u5728\u66f4\u65b0cnt2=1\u90a3\u4e48\u8bf4\u660e\u8fd9\u4e24\u4e2a\u5b50\u7b26\u4e32\u6709\u76f8\u540c\u7684\u957f\u5ea6\u5927\u4e8ek\u7684\u516c\u5171\u5b50\u4e32\uff0c\u4f46\u662f\u4e0d\u662f\u552f\u4e00\u8fd8\u4e0d\u77e5\u9053\u3002  \n\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e2a\u6570\u5b57\u53ea\u5728\u4e24\u8f6e\u66f4\u65b0\u4e2d\u6709\u7528\uff0c\u5982\u679ccnt1>1\u6216cnt2>1\u90fd\u6ca1\u6709\u4ef7\u503c\u4e86\uff08\u8981\u4e48\u6ca1\u6709\u516c\u5171\u5b50\u4e32\uff0c\u8981\u4e48\u6709\u91cd\u590d\u7684\uff09\u3002  \n\u5982\u679c\u8981\u786e\u4fdd\u552f\u4e00\u6027\uff0c\u5c31\u8981\u5f53Height[i]\u679a\u4e3e\u5230\u5c0f\u4e8ek\u7684\u65f6\u5019\uff0c\u5982\u679c\u6b64\u65f6cnt1==1&&cnt2==1\u7684\u8bdd\uff0c\u5219\u6709\u89e3\u3002\n\n\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nstring s1,s2,str;\nint len1,tot,m;\nconst int MAXN=10004;\nint a[MAXN],Height[MAXN],tax[MAXN],tp[MAXN],sa[MAXN],rk[MAXN];\n\nvoid RSort(){\n    for(int i=1;i<=m;i++)tax[i]=0;\n    for(int i=1;i<=tot;i++)tax[rk[i]]++;\n    for(int i=1;i<=m;i++)tax[i]+=tax[i-1];\n    for(int i=tot;i>=1;i--)sa[tax[rk[tp[i]]]--]=tp[i];\n}\n\n\nbool cmp(int *f,int x,int y,int w){\n    return f[x]==f[y]&&f[x+w]==f[y+w];\n}\n\nvoid Suffix(){\n    m=127;\n    for(int i=1;i<=tot;i++)rk[i]=a[i],tp[i]=i;\n    int p=0;RSort();\n    for(int w=1;p<tot;w+=w,m=p){\n        p=0;for(int i=tot-w+1;i<=tot;i++)tp[++p]=i;\n        for(int i=1;i<=tot;i++)if(sa[i]>w)tp[++p]=sa[i]-w;\n        RSort();swap(rk,tp);rk[sa[1]]=p=1;\n        for(int i=2;i<=tot;i++)rk[sa[i]]=cmp(tp,sa[i],sa[i-1],w)?p:++p;\n    }\n    int j=0,k=0;\n    for(int i=1;i<=tot;Height[rk[i++]]=k){\n        for(k=k?k-1:k,j=sa[rk[i]-1];a[i+k]==a[j+k];k++);\n    }\n}\n\nbool solve(int k,int div){\n    int cnt1=0,cnt2=0;\n    for(int i=1;i<=tot;i++){\n        if(Height[i]<k){\n            if(cnt1==1&&cnt2==1){\n                return true;    \n            }\n            cnt1=0;cnt2=0;\n            if(sa[i]<=div)cnt1++;\n            else if(sa[i]>=div)cnt2++;\n            continue;\n        }\n        if(sa[i]<=div)cnt1++;\n        else if(sa[i]>=div)cnt2++;\n    }\n    return cnt1==1&&cnt2==1;//\u5982\u679c\u679a\u4e3e\u5b8c\u4e86\u4e5f\u8981\u5224\u65ad\u4e00\u4e0b\n}\n\nint main(){\n    cin>>s1>>s2;\n    len1=s1.length();\n    str=s1+'#'+s2;//\u5c06\u4e24\u4e2a\u5b57\u7b26\u4e32\u9694\u5f00\u6765\uff0c\u907f\u514dsa\u7b49\u6570\u7ec4\u91cd\u53e0\n    tot=len1+s2.length()+1;\n    for(int i=1;i<=tot;i++)a[i]=str[i-1]; \n    Suffix();//\u540e\u7f00\u6570\u7ec4\n    int ans=-1;\n    for(int i=1;i<=len1;i++){//\u679a\u4e3e\u957f\u5ea6\n        if(solve(i,len1)){\n            ans=i;break;\n        }\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```\n",
        "postTime": 1556879472,
        "uid": 61150,
        "name": "\u5192\u6ce1ioa",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF427D \u3010Match &amp; Catch\u3011"
    }
]