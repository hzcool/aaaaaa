[
    {
        "content": "\u9898\u89e3\u533a\u7684\u4e00\u4e9b\u5927\u4f6c\u89e3\u91ca\u7684\u6709\u70b9\u96be\u4ee5\u7406\u89e3\uff0c\u6211\u6765\u53d1\u8868\u4e00\u4e0b\u6bd4\u8f83\u901a\u4fd7\u6613\u61c2\u7684\u53e6\u4e00\u79cd\u601d\u8def\u3002\n\n### \u4e00\u3001\u9898\u610f\u89e3\u91ca\n\n\u4ece\u7ed9\u5b9a\u7684\u56fe\u4e2d\u9009\u51fa\u4e00\u4e2a\u5b50\u56fe\uff0c\u4f7f\u5f97\u8be5\u5b50\u56fe\u4e2d\u6240\u6709\u8fb9\u7684\u6743\u503c\u548c\u51cf\u53bb\u6240\u6709\u70b9\u7684\u6743\u503c\u548c**\u6700\u5927**\u3002\n\n### \u4e8c\u3001\u4e3a\u4ec0\u4e48\u662f\u6700\u5c0f\u5272\uff1f\n\n\u5927\u5bb6\u90fd\u8bf4\u8fd9\u79cd\u9898\u8981\u7528\u6700\u5c0f\u5272\u2014\u2014\u4f46\u662f\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n\u6211\u4eec\u8981\u77e5\u9053\uff0c\u5bf9\u4e8e\u4efb\u4f55\u4e00\u9053\uff08\u770b\u8d77\u6765\u4e0d\u50cf\u662f\u6700\u5c0f\u5272\u7684\uff09\u9898\uff0c\u5b83\u80fd\u7528\u6700\u5c0f\u5272\u7b97\u6cd5\u6765\u89e3\u51b3\uff0c\u6709\u4e24\u4e2a\u663e\u8457\u7684\u7279\u5f81\uff1a\n\n* \u6bcf\u4e2a```\u7269\u4f53```**\u53ea\u6709\u4e24\u79cd\u72b6\u6001**\uff0c\u8981\u4e48\u9009\uff0c\u8981\u4e48\u4e0d\u9009\uff1b\n\n* **\u7ed9\u5b9a\u6240\u6709**```\u7269\u4f53```**\u88ab\u9009\u62e9\u7684\u72b6\u6001\uff0c\u5219\u95ee\u9898\u80fd\u591f\u5f97\u5230\u552f\u4e00\u7684\u7b54\u6848\u3002**\n\n\uff08\u6ce8\uff1a\u5e76\u4e0d\u662f\u8bf4\u6ee1\u8db3\u4ee5\u4e0a\u6761\u4ef6\u7684\u90fd\u80fd\u7528\u6700\u5c0f\u5272\u6c42\u89e3\uff0c\u53ea\u662f\u8bf4\u53d1\u73b0\u4ee5\u4e0a\u4e24\u4e2a\u6027\u8d28\u65f6\uff0c\u601d\u8def\u53ef\u4ee5\u5f80\u6700\u5c0f\u5272\u9760\u62e2\u4e00\u70b9\uff09\n\n\u6211\u4eec\u77e5\u9053\uff0c\u6839\u636e\u9898\u610f\uff0c\u56fe\u4e2d\u6240\u6709\u7684\u70b9\u8981\u4e48\u88ab\u9009\u62e9\uff0c\u8981\u4e48\u6ca1\u88ab\u9009\u62e9\uff0c\u53ea\u6709\u4e24\u79cd\u53ef\u80fd\u7684\u72b6\u6001\uff0c\u6240\u4ee5```\u6761\u4ef6(1)```\u662f\u6ee1\u8db3\u7684\uff1b\u90a3\u4e48```\u6761\u4ef6(2)```\u5462\uff1f\u6211\u4eec\u77e5\u9053\u6240\u6709\u70b9\u7684\u9009\u62e9\u72b6\u6001\uff0c\u5c31\u80fd\u63a8\u65ad\u51fa\u95ee\u9898\u7684\u7b54\u6848\u5417\uff1f\n\n\u7b54\u6848\u662f\u80af\u5b9a\u7684\uff01\u56e0\u4e3a\u4f60\u4f1a\u53d1\u73b0\uff0c**\u77e5\u9053\u4e86\u70b9\u7684\u9009\u62e9\u72b6\u6001\uff0c\u4e5f\u5c31\u77e5\u9053\u4e86\u8fb9\u7684\u9009\u62e9\u72b6\u6001\u3002**\n\n\u8fd9\u662f\u56e0\u4e3a\uff0c\u6240\u6709\u8fb9\u7684\u6743\u503c\u90fd\u662f\u5927\u4e8e $0$ \u7684\u3002\u6240\u4ee5\uff0c\u5bf9\u4e8e\u4efb\u4f55\u4e00\u6761\u8fb9\uff0c\u5982\u679c\u5b83\u8fde\u63a5\u7684\u70b9\u90fd\u88ab\u9009\u4e2d\u4e86\uff0c\u90a3\u4e48\u628a\u5b83\u9009\u4e0a\uff0c\u4e00\u5b9a\u4f1a\u5bf9\u7b54\u6848\u4ea7\u751f\u8d21\u732e\u3002\n\n\u65e2\u7136```\u6761\u4ef6(1)```\u548c```\u6761\u4ef6(2)```\u90fd\u80fd\u6ee1\u8db3\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5c1d\u8bd5\u4e00\u4e0b\uff0c\u4ece\u6700\u5c0f\u5272\u8fd9\u6761\u8def\u5f84\u6765\u89e3\u9898\u3002\n\n### \u4e09\u3001\u5982\u4f55\u89e3\u51b3\uff1f\n\n#### \u7b2c\u4e00\u6b65\uff1a\u7406\u6e05\u903b\u8f91\u5173\u7cfb\uff08\u8d21\u732e/\u635f\u5931\uff09\n\n\u6211\u4eec\u5c06\u95ee\u9898\u8f6c\u5316\u6210```\u5982\u679c...\uff0c\u5219\u80fd\u5bf9\u7b54\u6848\u4ea7\u751f...\u7684\u8d21\u732e/\u635f\u5931```\u7684\u5f62\u5f0f\u3002\n\n\u6ce8\u610f\uff1a\u7406\u6e05\u903b\u8f91\u5173\u7cfb\u7684\u65f6\u5019\uff0c\u9996\u5148\uff0c\u4e3b\u8bed\u5fc5\u987b\u662f\u4f60\u4e4b\u524d\u9009\u5b9a\u7684\u90a3\u79cd```\u7269\u4f53```\uff08\u5728\u8fd9\u9053\u9898\u76ee\u4e2d\uff0c\u5b83\u662f\u56fe\u4e2d\u7684\u70b9\uff09\uff1b\u5176\u6b21\uff0c\u4e00\u5b9a\u8981**\u6982\u62ec\u5168\u9762**\uff01\u5982\u679c\u4e0d\u80fd\u540c\u65f6\u6ee1\u8db3\u4ee5\u4e0a\u4e24\u70b9\uff0c\u90a3\u4e48\u8fd9\u9053\u9898\u5c31\u51e0\u4e4e\u65e0\u6cd5\u8fdb\u884c\u6700\u5c0f\u5272\uff08\u6216\u4f60\u9009\u62e9\u7684\u8fd9\u79cd```\u7269\u4f53```\u65e0\u6cd5\u8fdb\u884c\u6700\u5c0f\u5272\uff09\n\n\u6211\u4eec\u6765\u7406\u4e00\u4e0b\u8fd9\u9053\u9898\u7684\u903b\u8f91\uff1a\n\n* \u5982\u679c\u9009\u62e9\u4e86\u4e00\u4e2a\u70b9 $i$ \uff0c\u5219\u5bf9\u7b54\u6848\u4ea7\u751f $a_i$ \u7684\u635f\u5931\u3002\n\n* \u5982\u679c\u4e24\u4e2a\u70b9 $u_i$ \u548c $v_i$ \u540c\u65f6\u88ab\u9009\u62e9\uff0c\u5219\u5bf9\u7b54\u6848\u4ea7\u751f $w_i$ \u7684\u8d21\u732e\u3002\n\n* \u6c42\u6700\u5927\u8d21\u732e\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u4ee5\u4e0a\u5c31\u662f\u8fd9\u9053\u9898\u7684\u5168\u90e8\u5185\u5bb9\u4e86\u3002\n\n#### \u7b2c\u4e8c\u6b65\uff1a\u5c06\u635f\u5931\u8f6c\u5316\u4e3a\u8d21\u732e\uff0c\u5c06\u6700\u5927\u503c\u8f6c\u5316\u4e3a\u6700\u5c0f\u503c\n\n\u53ea\u8981\u7b2c\u4e00\u6b65\u8fdb\u884c\u6210\u529f\uff0c\u8fd9\u9053\u9898\u5c31\u5b8c\u6210\u4e86\u4e00\u534a\u4e86\u3002\u4e0d\u8fc7\u9898\u76ee\u8981\u6c42\u7684\u662f\u6700\u5927\u503c\uff0c\u800c\u6700\u5c0f\u5272\u662f\u7528\u6765\u6c42\u6700\u5c0f\u503c\u7684\u3002\u6240\u4ee5\u6211\u4eec\u8981\u8f6c\u5316\u95ee\u9898\uff0c**\u5c06\u8d21\u732e\u6700\u5927\u8f6c\u5316\u6210\u635f\u5931\u6700\u5c0f**\u3002\n\n\u4e3a\u4e86\u6c42\u6700\u5c0f\u635f\u5931\uff0c\u6211\u4eec\u5148\u8981**\u5047\u8bbe\u8d21\u732e\u8fbe\u5230\u4e86\u6700\u5927\u503c**\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5148\u5047\u8bbe\u6240\u6709\u70b9\u90fd\u6ca1\u6709\u9009\uff0c\u800c\u6240\u6709\u7684\u8fb9\u90fd\u88ab\u9009\u62e9\uff08\u867d\u7136\u8fd9\u79cd\u60c5\u51b5\u662f\u4e0d\u5b58\u5728\u7684\uff09\uff0c\u6b64\u65f6\u4e0d\u96be\u770b\u51fa\uff0c$ans=\\sum\\limits_{i=1}^mw_i.$\n\n\u63a5\u7740\u5c31\u53ef\u4ee5\u628a\u628a\u8fd9\u9053\u9898\u7684\u903b\u8f91\u8f6c\u6362\u6210\uff1a\n\n* \u5982\u679c\u9009\u62e9\u4e86\u4e00\u4e2a\u70b9 $i$ \uff0c\u5219\u5bf9\u7b54\u6848\u4ea7\u751f $a_i$ \u7684\u635f\u5931\u3002\n\n* \u5982\u679c**\u6ca1\u6709\u540c\u65f6\u9009\u62e9** $u_i$ \u548c $v_i$ \uff0c\u5219\u5bf9\u7b54\u6848\u4ea7\u751f $w_i$ \u7684\u635f\u5931\u3002\n\n* \u6c42\u6700\u5c0f\u635f\u5931\u3002\n\n\u6c42\u51fa\u6765\u6700\u5c0f\u635f\u5931\u4e4b\u540e\uff0c\u518d\u628a\u4e4b\u524d\u6c42\u5f97\u7684\u6781\u7aef\u60c5\u51b5\u4e0b\u7684\u6700\u5927\u503c\u51cf\u53bb\u6c42\u51fa\u6765\u7684\u6700\u5c0f\u635f\u5931\u5373\u53ef\u3002\n\n#### \u7b2c\u4e09\u6b65\uff1a\u6839\u636e\u903b\u8f91\u5173\u7cfb\u5efa\u56fe\uff0c\u6c42\u6700\u5c0f\u5272\uff08\u6700\u5927\u6d41\uff09\n\n\u6839\u636e\u7f51\u7edc\u6d41\u5957\u8def\uff0c\u6211\u4eec\u5148\u8bbe\u7f6e\u4e00\u4e2a\u6e90\u70b9 $s$ \u548c\u4e00\u4e2a\u6c47\u70b9 $t.$\n\n\u5bf9\u4e8e\u4e00\u4e2a\u70b9 $i$ \uff0c\u82e5 $i\\in s$ \uff0c\u5219\u4ee3\u8868\u8282\u70b9 $i$ \u88ab\u9009\u62e9\uff0c\u5426\u5219\uff08\u5373\u5f53 $i\\in t$ \u65f6\uff09\u5219\u4ee3\u8868\u8282\u70b9 $i$ \u6ca1\u88ab\u9009\u62e9\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u770b\uff1a\n\n```\u5982\u679c\u9009\u62e9\u4e86\u4e00\u4e2a\u70b9 i \uff0c\u5219\u5bf9\u7b54\u6848\u4ea7\u751f a_i \u7684\u635f\u5931\u3002```\n\n\n\u8fd9\u4e2a\u5f88\u597d\u5efa\u56fe\uff0c\u76f4\u63a5\u4ece $i$ \u5411 $t$ \u8fde\u4e00\u6761\u6743\u503c\u4e3a $a_i$ \u7684\u8fb9\u5373\u53ef\uff0c\u8fd9\u6837\u5b50\uff0c\u5f53 $i\\in s$ \u7684\u65f6\u5019\uff0c\u5c31\u5fc5\u987b\u8981\u628a\u8fd9\u6761\u8fb9\u5272\u6389\u3002\n\n\u96be\u70b9\u5728\u8fd9\u91cc\uff1a\n\n```\u5982\u679c\u6ca1\u6709\u540c\u65f6\u9009\u62e9 u_i \u548c v_i \uff0c\u5219\u5bf9\u7b54\u6848\u4ea7\u751f w_i \u7684\u635f\u5931\u3002```\n\n\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u8fd8\u9700\u8981\u518d\u521b\u5efa\u4e00\u4e2a\u989d\u5916\u7684\u8282\u70b9 $p$ \uff0c\u7136\u540e $s\\to p$ \u8fde\u4e00\u6761\u8fb9\uff0c $p\\to u_i$ \u8fde\u4e00\u6761\u8fb9\uff0c $p\\to v_i$ \u8fde\u4e00\u6761\u8fb9\uff0c\u8fd9\u4e09\u6761\u8fb9\u7684\u6743\u503c\u90fd\u662f $w_i$.\n\n\u753b\u753b\u56fe\u6a21\u62df\u4e00\u4e0b\uff0c\u4f60\u4f1a\u53d1\u73b0\u786e\u5b9e\u53ef\u4ee5\u5b9e\u73b0\u3002\n\n\u5230\u8fd9\u91cc\u56fe\u5c31\u5efa\u597d\u4e86\uff0c\u6211\u4eec\u6c42\u4e00\u904d\u6700\u5c0f\u5272\uff08\u6700\u5927\u6d41\uff09\u5373\u53ef\u3002\n\n\u522b\u5fd8\u4e86\u6700\u540e\u8981\u62ff\u7406\u60f3\u60c5\u51b5\u53bb\u51cf\u54e6\n\n***\n\n### Code\n\n```cpp\n#include <cstdio>\n#include <queue>\n#include <cstring>\nusing namespace std;\n#define MAXN 500000\n#define MAXM 500000\n#define INF 0x7fffffff\nstruct Edge\n{\n    long long next, to, dis;\n} bian[MAXM];\nlong long h[MAXN], used[MAXN], dep[MAXN];\nlong long s, t;\nlong long temp = 1;\nvoid add(long long from, long long to, long long dis)\n{\n    temp++;\n    bian[temp].dis = dis;\n    bian[temp].next = h[from];\n    bian[temp].to = to;\n    h[from] = temp;\n}\nvoid addE(long long from, long long to, long long dis)\n{\n    add(from, to, dis);\n    add(to, from, 0);\n}\nbool bfs()\n{\n    long long x, i;\n    queue<long long> Q;\n    Q.push(s);\n    memset(dep, 0, sizeof(dep));\n    dep[s] = 1;\n    while (!Q.empty())\n    {\n        x = Q.front();\n        Q.pop();\n        for (i = h[x]; i; i = bian[i].next)\n            if (bian[i].dis != 0 && dep[bian[i].to] == 0)\n            {\n                dep[bian[i].to] = dep[x] + 1;\n                Q.push(bian[i].to);\n            }\n    }\n    return dep[t] != 0;\n}\nlong long dfs(long long x, long long in)\n{\n    long long out = 0, i, k;\n    if (x == t)\n        return in;\n    for (i = used[x]; i && in != 0; i = bian[i].next, used[x] = i)\n    {\n        if (bian[i].dis != 0 && dep[bian[i].to] == dep[x] + 1)\n        {\n            k = dfs(bian[i].to, min(bian[i].dis, in));\n            bian[i].dis -= k;\n            bian[i ^ 1].dis += k;\n            in -= k;\n            out += k;\n        }\n    }\n    if (out == 0)\n        dep[x] = 0;\n    return out;\n}\nlong long getId(long long depth, long long x)\n{\n    return (depth - 1) * 5000 + x;\n}\nlong long n, m;\nint main()\n{\n    scanf(\"%lld%lld\", &n, &m);\n    long long i, j;\n    long long x, y, z;\n    long long tot = 0;\n    s = MAXN - 1;\n    t = MAXN - 2;\n    for (i = 1; i <= n; i++)\n    {\n        scanf(\"%lld\", &x);\n        addE(getId(1, i), t, x);\n    }\n    for (i = 1; i <= m; i++)\n    {\n        scanf(\"%lld%lld%lld\", &x, &y, &z);\n        addE(s, getId(2, i), z);\n        addE(getId(2, i), getId(1, x), z);\n        addE(getId(2, i), getId(1, y), z);\n        tot += z;\n    }\n    long long ans = 0;\n    while (bfs())\n    {\n        memcpy(used, h, sizeof(h));\n        ans += dfs(s, INF);\n    }\n    printf(\"%lld\", tot - ans);\n    return 0;\n}\n```\n",
        "postTime": 1624099787,
        "uid": 125429,
        "name": "SfumatoCannon_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1082G \u3010Petya and Graph\u3011"
    },
    {
        "content": "### \u9898\u610f\n\n\u5b9a\u4e49\u56fe\u6743 $=$ \u56fe\u4e2d\u8fb9\u6743\u603b\u548c $-$ \u56fe\u4e2d\u70b9\u6743\u603b\u548c\uff08\u7a7a\u56fe\u7684\u56fe\u6743 $= 0$\uff09\uff0c\u6c42 $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe\u6700\u5927\u6743\u5b50\u56fe\u3002\n\n---\n\n### \u89e3\u9898\u601d\u8def\n\n\u672c\u9898\u540c [P4174](https://www.luogu.org/problemnew/show/P4174)\u3002~~\uff08\u522b\u95ee\u6211\u4e3a\u4ec0\u4e48\uff0c\u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48 $CF$ \u5f04\u51fa\u4e2a $NOI$ \u539f\u9898\u51fa\u6765\uff0c\u5efa\u8bae\u7206\u7834\uff09~~\n\n\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u6a21\u677f\u9898\u3002\n\n\u95ed\u5408\u5b50\u56fe\uff0c\u6ee1\u8db3\u5b50\u56fe\u4e2d\u7684\u70b9\u7684**\u5165\u5ea6**\u7b49\u4e8e\u539f\u56fe\u4e2d\u5bf9\u5e94\u7684\u70b9\u3002\u8bf4\u767d\u4e86\uff0c\u8981\u9009\u4e00\u4e2a\u4e1c\u897f\uff0c\u5fc5\u987b\u628a\u5176\u4f9d\u8d56\u7684\u4e1c\u897f\u5168\u90e8\u5148\u9009\u4e0a\u3002\n\n\u5e38\u89c1\u5e94\u7528\u662f\u6709\u4e00\u7c7b\u7269\u54c1\uff0c\u6709\u4ee3\u4ef7\u9009\u62e9\uff0c\u4f46\u628a\u6307\u5b9a\u7684\u4e00\u7ec4\u7269\u54c1\u5168\u9009\u4e86\u4f1a\u4ea7\u751f\u6536\u76ca\u3002\n\n\u8003\u8651\u7528\u914d\u5408\u7f51\u7edc\u6d41\u7684\u6700\u5c0f\u5272 $=$ \u6700\u5927\u6d41\u89e3\u51b3\uff0c\u628a\u95ee\u9898\u653e\u5728\u4e8c\u5206\u56fe\u4e0a\uff0c\u8fde\u8fb9\u5982\u4e0b\uff1a\n\n> **\u6e90\u70b9**\uff08$S$\uff09\u5f80 **\u6709\u4ee3\u4ef7\u7269\u54c1**\uff08$A$\uff09\u8fde\u5176\u4ee3\u4ef7\u3002\n\n> **\u6709\u4ee3\u4ef7\u7269\u54c1**\uff08$A$\uff09\u5f80\u9009\u4e86\u5b83\u53ef\u80fd\u4ea7\u751f\u6536\u76ca\u7684**\u7ec4**\uff08$B$\uff09\u8fde $\\infty$\u3002\n\n> **\u6bcf\u4e2a\u7ec4**\uff08$B$\uff09\u5f80 **\u6c47\u70b9**\uff08$T$\uff09\u8fde\u5176\u6536\u76ca\u3002\n\n\u5148\u628a\u5168\u90e8\u6536\u76ca\u52a0\u5728\u4e00\u8d77\uff0c\u6700\u540e\u51cf\u53bb\u6700\u5927\u6d41\uff08\u6700\u5c0f\u5272\uff09\uff0c\u5373\u4e3a\u7b54\u6848\u3002\n\n\u611f\u6027\u7406\u89e3\uff0c\u5982\u679c\u67d0\u4e2a\u7ec4\u5728\u4ee3\u4ef7\u5904\u5c31\u5df2\u7ecf\u5272\u65ad\u4e86\uff0c\u901a\u8fc7\u6700\u5c0f\u5272\uff0c\u6211\u4eec\u589e\u52a0\u4e86\u4ee3\u4ef7\uff0c\u4f46\u4fdd\u4f4f\u4e86\u6536\u76ca\uff0c\u5982\u679c\u5272\u6389\u6536\u76ca\uff0c\u8bf4\u660e\u8fd9\u4e2a\u7ec4\u7684\u6536\u76ca\u4e0d\u4f18\uff0c\u5b81\u613f\u4e0d\u8981\u5b83\uff0c\u4e8e\u662f\u62b5\u6d88\u4e86\u6536\u76ca\uff0c\u4f46\u6ca1\u6709\u4ee3\u4ef7\u3002\n\n---\n\n\u56de\u6765\u770b\u8fd9\u9053\u9898\uff0c\u5176\u5b9e\u672c\u8d28\u4e00\u6a21\u4e00\u6837\u3002\n\n\u6bcf\u6761\u8fb9 $=$ \u4e00\u4e2a\u7ec4\uff0c\u6536\u76ca $=$ \u8fb9\u6743\uff0c\u800c\u7ec4\u9700\u8981\u7684\u7269\u54c1 $=$ \u70b9\uff0c\u4ee3\u4ef7 $=$ \u70b9\u6743\u3002\u80fd\u770b\u51fa\u6765\uff0c\u4ea4\u7ed9\u6a21\u677f\u5c31\u884c\u5566\u3002\n\n---\n\n### \u4ee3\u7801\u5b9e\u73b0\n\n\u8981\u5f00 $long\\ long$\uff01~~\uff08\u5f53\u65f6\u76f4\u63a5\u7c98\u6a21\u677f $WA$ \u4e86\u4e24\u53d1\uff09~~\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n\ninline int read() {\n    char c = getchar(); int n = 0; bool f = false;\n    while (c < '0' || c > '9') { if (c == '-') { f = true; } c = getchar(); }\n    while (c >= '0' && c <= '9') { n = (n << 1) + (n << 3) + (c & 15); c = getchar(); }\n    return f ? -n : n;\n}\n\nconst int maxN = 5005, maxE = 100005;\n\nint n, m, s, t, dis[maxN], q[maxN];\nlong long ans;\nbool vis[maxN];\n\nstruct List {\n    int len, fst[maxN], nxt[maxE], v[maxE], w[maxE], fl[maxE];\n    \n    List() { memset(fst, -1, sizeof(fst)); }\n    inline void insert(int u, int vv, int ww) { v[len] = vv, w[len] = ww, nxt[len] = fst[u], fst[u] = len++; }\n    inline void connect(int u, int vv, int ww) { insert(u, vv, ww), insert(vv, u, 0); }\n} ls;\n\nbool bfs() {\n    memset(dis, 0, sizeof(dis)); dis[q[1] = s] = 1;\n    for (int l = 1, r = 1; l <= r; l++) {\n        int u = q[l];\n        for (int i = ls.fst[u]; ~i; i = ls.nxt[i]) {\n            int v = ls.v[i], w = ls.w[i], fl = ls.fl[i];\n            if (!dis[v] && fl < w) {\n                dis[v] = dis[u] + 1;\n                if (v == t) { return true; }\n                q[++r] = v;\n            }\n        }\n    }\n    return false;\n}\nlong long dinic(int u, long long f) {\n    if (u == t) { return f; }\n    long long lef = f;\n    vis[u] = true;\n    for (int i = ls.fst[u]; ~i; i = ls.nxt[i]) {\n        int v = ls.v[i], w = ls.w[i], fl = ls.fl[i];\n        if (dis[v] == dis[u] + 1 && fl < w && !vis[v]) {\n            long long df = dinic(v, std::min(lef, (long long) w - fl));\n            if (!df) { dis[v] = 0; continue; }\n            lef -= df; ls.fl[i] += df; ls.fl[i ^ 1] -= df;\n            if (!lef) { break; }\n        }\n    }\n    vis[u] = false;\n    return f - lef;\n}\n\nint main() {\n    n = read(); m = read(); s = 0; t = n + m + 1;\n    for (int i = 1; i <= n; i++) { ls.connect(s, i, read()); } // \u6e90\u70b9 \u5230 \u7b2c\u4e00\u5c42 \u8fde \u4ee3\u4ef7.\n    for (int i = 1; i <= m; i++) {\n        int u = read(), v = read(), w = read(); ans += w;\n        ls.connect(u, n + i, 1e9); ls.connect(v, n + i, 1e9); // \u7b2c\u4e00\u5c42 \u5230 \u7b2c\u4e8c\u5c42 \u8fde inf.\n        ls.connect(n + i, t, w); // \u7b2c\u4e8c\u5c42 \u5230 \u6c47\u70b9 \u8fde \u6536\u76ca.\n    }\n    while (bfs()) { ans -= dinic(s, 1e18); }\n    printf(\"%I64d\\n\", ans);\n    return 0;\n}\n```",
        "postTime": 1543573827,
        "uid": 26673,
        "name": "Sooke",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1082G \u3010Petya and Graph\u3011"
    },
    {
        "content": "###  \u9898\u610f\n- \u7ed9\u5b9a\u4e00\u4e2a $n$ \u70b9 $m$ \u8fb9\u65e0\u5411\u56fe\u3002\u70b9 $i$ \u7684\u70b9\u6743\u4e3a $a_i$\uff0c\u8fb9 $i$ \u7684\u8fb9\u6743\u4e3a $b_i$\u3002\n- \u5b9a\u4e49\u56fe\u6743\u4e3a\u56fe\u4e2d\u8fb9\u6743\u548c $-$ \u56fe\u4e2d\u70b9\u6743\u548c\uff0c\u7a7a\u56fe\u56fe\u6743\u4e3a $0$\u3002\u6c42\u8be5\u56fe\u7684\u6700\u5927\u6743\u5b50\u56fe\u3002\n- $1\\le{n,m}\\le10^3,1\\le{a_i,b_i}\\le{10^9}$\u3002\n\n### \u505a\u6cd5\n\n\u672c\u9898\u5c31\u662f [P4174](https://www.luogu.com.cn/problem/P4174)\uff0c\u662f **\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe** \u7684\u6a21\u677f\u9898\u3002\n\n\u9996\u5148\u4ec0\u4e48\u662f\u95ed\u5408\u5b50\u56fe\uff1f\n\n\u95ed\u5408\u5b50\u56fe\u6307\u7684\u662f\u5b50\u56fe\u4e2d\u7684\u70b9\u7684\u5165\u5ea6\u5747\u4e0e\u539f\u56fe\u4e00\u6837\u7684\u5b50\u56fe\u3002\u901a\u4fd7\u800c\u8a00\u5c31\u662f\uff0c\u5982\u679c\u8981\u9009\u4e00\u4e2a\u4e1c\u897f\uff0c\u5fc5\u987b\u628a\u5176\u6240\u6709\u4f9d\u8d56\u7684\u4e1c\u897f\u90fd\u9009\u4e0a\u3002\n\n\u5e38\u89c1\u5e94\u7528\u60c5\u666f\u5c31\u662f [P4174](https://www.luogu.com.cn/problem/P4174) \u8fd9\u9898\u3002\n\n\u600e\u4e48\u505a\u5462\uff1f\n\n- \u5efa\u8d85\u7ea7\u6e90\u70b9 $S$ \u548c\u8d85\u7ea7\u6c47\u70b9 $T$\u3002\n- $S$ \u4e0e\u9700\u8981\u4ee3\u4ef7\u7684\u7269\u54c1 $x_i$ \u8fde\u6743\u503c\u4e3a\u4ee3\u4ef7\uff08\u662f\u6b63\u7684\uff09\u7684\u8fb9\uff0c\u5e76\u5c06\u8be5\u7269\u54c1\u7684\u70b9\u6743\u8bbe\u4e3a\u4ee3\u4ef7\uff08\u662f\u8d1f\u7684\uff09\u3002\n- $x_i$ \u4e0e\u90e8\u5206\u4f9d\u8d56\u4e8e $x_i$ \u7684\u90a3\u4e9b\u6536\u76ca  $y_i$ \u8fde\u6743\u503c\u4e3a\u65e0\u7a77\u5927\u7684\u8fb9\uff0c\u5e76\u5c06\u8be5\u6536\u76ca\u7684\u70b9\u6743\u8bbe\u4e3a\u6536\u76ca\u3002\n- $y_i$ \u518d\u4e0e $T$ \u8fde\u6743\u503c\u4e3a\u6536\u76ca\u7684\u8fb9\u3002\n- \u7b54\u6848\u4e3a\uff0c\u6240\u6709\u6536\u76ca\u7684\u548c $-$ \u6700\u5c0f\u5272\u3002\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\u6211\u4eec\u770b\u4e00\u5f20\u56fe\u5c31\u4f1a\u4e86\u7136\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/j8yi1nv2.png)\n\n\u663e\u7136\uff0c\u6839\u636e\u4e0a\u9762\u7684\u8fc7\u7a0b\uff0c\u4e2d\u95f4\u7684\u8fb9\u6743\u503c\u4e3a $\\infty$\uff0c\u6240\u4ee5 **\u4e00\u5b9a\u4e0d\u4f1a\u5272\u4e2d\u95f4\u7684\u8fb9**\uff0c\u4e00\u5b9a\u662f\u5272\u8fde\u7740 $S$ \u6216 $T$ \u7684\u8fb9\u3002\u800c\u539f\u56fe\u5219\u88ab\u5272\u6210\u4e86\u5206\u522b\u4e0e $S$ \u548c $T$ \u76f8\u8fde\u7684 $\\color{Orchid}\\text{Orchid}$ \u548c $\\color{yellow}\\text{Yellow}$ \u4e24\u90e8\u5206\u3002\u6211\u4eec\u7528 $W$ \u8868\u793a\u6536\u76ca\uff0c\u5373 $\\color{yellow}\\text{Yellow}$ \u4e2d\u7684\u70b9\u6743\u548c\u3002\u8bbe $w_+$ \u4e3a $\\color{yellow}\\text{Yellow}$ \u4e2d\u7684\u6b63\u7684\u70b9\u6743\u548c\uff0c$w_-$ \u4e3a $\\color{yellow}\\text{Yellow}$ \u4e2d\u8d1f\u7684\u70b9\u6743\u548c\uff0c$W=w_++w_-$\u3002\u8bbe\u5272\u4e2d\u4e0e $S$ \u76f8\u8fde\u7684\u8fb9\u6743\u548c\u4e3a $c_S$\uff0c\u4e0e $T$ \u76f8\u8fde\u7684\u4e3a $c_T$\u3002\u5219\u5272 $C$ \u4e3a $c_S+c_T$\u3002**\u6ce8\u610f\u5230 $\\bm{c_S=-w_-}$**\uff0c\u6240\u4ee5 $W+C=w_++w_-+c_S+c_T=w_++c_T$\uff0c\u800c $w_++c_T$ \u53c8\u6070\u597d\u662f\u6240\u6709\u6536\u76ca\u7684\u548c\uff0c\u5373\u56fe\u4e2d\u6240\u6709\u6b63\u70b9\u6743 $Sum$ \u7684\u548c\u3002\u6240\u4ee5 $W=Sum-C$\uff0c**\u6b63\u70b9\u6743\u7684\u548c\u4e00\u5b9a\uff0c\u5272\u8d8a\u5c0f\uff0c\u6536\u76ca\u8d8a\u5927**\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u6c42\u7684\u5c31\u662f **\u6700\u5c0f\u5272**\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst long long inf=2000000000000;\nint n,m,T,S,cnt=1;\nlong long sum,maxflow,val[400005];\nint h[60004],nxt[400005],t[400005];\nint dep[60004],gap[60004],q[1001001],f,e;\nint cur[60004];\ninline void addedge(int a,int b,int c){t[++cnt]=b,val[cnt]=c,nxt[cnt]=h[a],h[a]=cnt;}\ninline int read()\n{\n\tint x=0,f=1;char c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-')f=-f;c=getchar();}\n\twhile(c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();}\n\treturn x*f;\n}\ninline void bfs()\n{\n\tmemset(dep,-1,sizeof(dep));\n\tmemset(gap,0,sizeof(gap));\n\tdep[T]=0,gap[0]=1;\n\tf=e=1,q[1]=T;\n\twhile(f<=e)\n\t{\n\t\tint u=q[f++];\n\t\tfor(int p=h[u];p;p=nxt[p])\n\t\t{\n\t\t\tint v=t[p];\n\t\t\tif(dep[v]!=-1)\tcontinue;\n\t\t\tq[++e]=v;\n\t\t\tdep[v]=dep[u]+1;\n\t\t\tgap[dep[v]]++;\n\t\t}\n\t}\n\treturn ;\n}\nlong long dfs(int u,long long flow)\n{\n\tif(u==T)\n\t{\n\t\tmaxflow+=flow;\n\t\treturn flow;\n\t}\n\tint used=0;\n\tfor(int p=cur[u];p;p=nxt[p])\n\t{\n\t\tcur[u]=p;\n\t\tint v=t[p];\n\t\tif(val[p]&&dep[v]+1==dep[u])\n\t\t{\n\t\t\tlong long mi=dfs(v,min(flow-used,val[p]));\n\t\t\tif(mi)\n\t\t\t{\n\t\t\t\tval[p]-=mi;\n\t\t\t\tval[p^1]+=mi;\n\t\t\t\tused+=mi;\n\t\t\t}\n\t\t\tif(used==flow)\treturn used;\n\t\t} \n\t}\n\tif(--gap[dep[u]]==0)\tdep[S]=T+1;\n\tdep[u]++;\n\tgap[dep[u]]++;\n\treturn used;\n}\ninline long long ISAP()\n{\n\tmaxflow=0;\n\tbfs();\n\twhile(dep[S]<T)\tmemcpy(cur,h,sizeof(h)),dfs(S,inf);\n\treturn maxflow;\n}\nsigned main()\n{\n\tn=read(),m=read();T=m+n+1,S=0;\n\tfor(int i=1;i<=n;i++){int x=read();addedge(S,i,x),addedge(i,S,0);}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u=read(),v=read(),w=read();\n\t\taddedge(n+i,T,w),addedge(T,n+i,0),sum+=w;\n\t\taddedge(u,n+i,inf),addedge(n+i,u,0);\n\t\taddedge(v,n+i,inf),addedge(n+i,v,0);\n\t}\n\tprintf(\"%lld\\n\",sum-ISAP());\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1649509276,
        "uid": 181775,
        "name": "_Fontainebleau_",
        "ccfLevel": 0,
        "title": "\u300cCF1082G Petya and Graph\u300d"
    },
    {
        "content": "## \u9898\u76ee\u63cf\u8ff0\n\n[\u9898\u76ee\u4f20\u9001\u95e8](codeforces.com/problemset/problem/1082/G)\n\n## \u601d\u8def\n\n\u8fd9\u9053\u9898\u548c [[NOI2006] \u6700\u5927\u83b7\u5229](https://www.luogu.com.cn/problem/P4174) \u662f\u4e00\u6a21\u4e00\u6837\u7684\uff0c\u505a\u5b8c\u8bb0\u5f97\u53bb\u62ff\u53cc\u500d\u7ecf\u9a8c\u3002\n\n\u8fd9\u9053\u9898\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u7f51\u7edc\u6d41\u6a21\u578b\uff1a**\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe**\u3002\n\n\u5148\u8bf4\u505a\u6cd5\uff1a\n\n1. \u65b0\u5efa\u539f\u70b9 $s$ \u4e0e\u6c47\u70b9 $t$\uff1b\n\n2. \u5c06 $s$ \u4e0e\u56fe\u4e2d\u6bcf\u4e00\u4e2a\u6b63\u6743\u70b9\u76f8\u8fde\uff0c\u6743\u503c\u4e3a\u8be5\u6b63\u6743\u70b9\u70b9\u6743\uff1b\n\n3. \u5c06 $t$ \u4e0e\u56fe\u4e2d\u6bcf\u4e00\u4e2a\u8d1f\u6743\u70b9\u76f8\u8fde\uff0c\u6743\u503c\u4e3a\u8be5\u8d1f\u6743\u70b9\u70b9\u6743\u7684\u7edd\u5bf9\u503c\uff1b\n\n4. \u6839\u636e\u8f93\u5165\u8fde\u8fb9\uff0c\u8fb9\u6743\u4e3a $\\infty$\u3002\n\n\u6700\u540e\uff0c\u7b54\u6848\u4e3a\u6b63\u6743\u70b9\u548c - \u6700\u5927\u6d41\u3002\n\n\u4e0b\u9762\u7ed9\u51fa\u8bc1\u660e\uff1a\n\n\u8bbe\u96c6\u5408 $S$ \u548c\u96c6\u5408 $T$ \u662f\u539f\u56fe\u7684 $s-t$ \u5272\u3002\n\n\u8bb0 $w$ \u4e3a\u5f53\u524d\u7684\u6536\u76ca \uff0c $Cnt$ \u4e3a\u5f53\u524d\u7684\u5272\u3002\n\n\u5219 $w = S_\\text{\u6b63\u6743\u548c} - |S_\\text{\u8d1f\u6743\u548c}|$\u3002\n\n\u663e\u7136 $Cut = \\text{\u6b63\u6743\u548c} - S_\\text{\u6b63\u6743\u548c} + |S_\\text{\u8d1f\u6743\u548c}|$\u3002\n\n\u52a0\u8d77\u6765\u5c31\u6709\uff1a$w + Cut = \\text{\u6b63\u6743\u548c}$\u3002\n\n\u79fb\u9879\u5f97\uff1a$w = \\text{\u6b63\u6743\u548c} - Cut$\u3002\n\n\u663e\u7136\u5f53 $Cut$ \u53d6\u6700\u5c0f\u503c\uff08\u5373\u6700\u5c0f\u5272\uff09\u65f6 $w$ \u53d6\u6700\u5927\u503c\u3002\n\n\u7531\u6700\u5927\u6d41\u6700\u5c0f\u5272\u5b9a\u7406\u5f97\uff1a$w = \\text{\u6b63\u6743\u548c} - \\text{\u6700\u5927\u6d41}$\u3002\n\n\u8bc1\u5fc5\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define int long long\n\nconst int MAXN = 50010 , MAXM = 500010 , INF = 1 << 30;\n\nint N , M;\n\nint Head[MAXN * 4];\nint Cnt = 1;\nstruct Edge {\n    int Next , To;\n    int Val;\n} G[MAXM * 15];\n\nvoid _add(int u , int v , int w) {\n    G[++Cnt].To = v;\n    G[Cnt].Val = w;\n    G[Cnt].Next = Head[u];\n    Head[u] = Cnt;\n}\n\nvoid Add(int a , int b , int c) {\n    _add(a , b , c);\n    _add(b , a , 0);\n}\n\nint Dep[MAXN * 4];\nint Hash[MAXN * 4];\n\nint S , T;\nint Max_Flow;\n\nvoid Bfs() {\n    memset(Dep , -1 , sizeof Dep);\n    memset(Hash , 0 , sizeof Hash);\n    queue<int> q;\n    q.push(T);\n    Dep[T] = 0;\n    while(!q.empty()) {\n        int u = q.front();\n        q.pop();\n        for(int i = Head[u]; i; i = G[i].Next) {\n            int v = G[i].To;\n            if(Dep[v] != -1) continue;\n            q.push(v);\n            Dep[v] = Dep[u] + 1;\n            Hash[Dep[v]]++;\n        }\n    }\n}\n\nint Dfs(int u , int flow) {\n    if(u == T) {\n        Max_Flow += flow;\n        return flow;\n    }\n    int used = 0;\n    for(int i = Head[u]; i; i = G[i].Next) {\n        int v = G[i].To;\n        if(G[i].Val && Dep[v] + 1 == Dep[u]) {\n            int Min = Dfs(v , min(flow - used , G[i].Val));\n            if(Min) {\n                G[i].Val -= Min;\n                G[i ^ 1].Val += Min;\n                used += Min;\n            }\n            if(used == flow) {\n                return used;\n            }\n        }\n    }\n    Hash[Dep[u]]--;\n    if(Hash[Dep[u]] == 0) Dep[S] = N + M + 10;\n    Dep[u]++;\n    Hash[Dep[u]]++;\n    return used;\n}\n\nint ISAP() {\n    Max_Flow = 0;\n    Bfs();\n    while(Dep[S] < N + M + 10) Dfs(S , INF);\n    return Max_Flow;\n}\n\nint Sum;\n\nsigned main() {\n    scanf(\"%lld%lld\" ,&N ,&M);\n\n    S = 0;\n    T = N + M + 1;\n\n    for(int i = 1 , k; i <= N; i++) {\n        scanf(\"%lld\" ,&k);\n        Add(i + M , T , k);\n    }\n\n    for(int i = 1 , u , v , w; i <= M; i++) {\n        scanf(\"%lld%lld%lld\" ,&u ,&v ,&w);\n        Sum += w;\n        Add(S , i , w);\n        Add(i , M + u , INF);\n        Add(i , M + v , INF);\n    }\n\n    printf(\"%lld\\n\" ,Sum - ISAP());\n\n    return 0;\n}\n```",
        "postTime": 1649659724,
        "uid": 461426,
        "name": "CmsMartin",
        "ccfLevel": 6,
        "title": "CF1082G Petya and Graph"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1082G)\u3002\n\n\u540c\u6b65\u53d1\u8868\u4e8e\u6211\u7684 [$\\text{cnblog}$](https://www.cnblogs.com/UperFicial/p/16120803.html)\u3002\n\n### $\\texttt{Description}$\n\n\u5b9a\u4e49\u56fe\u6743 $=$ \u56fe\u4e2d\u8fb9\u6743\u603b\u548c $-$ \u56fe\u4e2d\u70b9\u6743\u603b\u548c\u3002\u6c42\u65e0\u5411\u56fe\u6700\u5927\u6743\u5b50\u56fe\u3002\n\n$1\\le n,m\\le 10^3$.\n\n### $\\texttt{Solution}$\n\n\u6700\u5927\u6743\u5b50\u56fe\u6a21\u578b\uff0c\u8003\u8651\u7528\u6700\u5c0f\u5272\u6765\u89e3\u51b3\u3002\n\n\u6240\u4ee5\u8bf4\u4e00\u4e2a\u521d\u6b65\u601d\u8def\u662f\u9009\u62e9\u6240\u6709\u8fb9\uff0c\u7136\u540e\n\n- \u6263\u53bb\u4e00\u4e9b\u8fb9\u6743\uff08\u4e0d\u9009\u8fd9\u4e2a\u8fb9\uff09\n\n- \u6263\u53bb\u4e00\u4e9b\u70b9\u6743\uff08\u9009\u62e9\u4e86\u76f8\u5e94\u7684\u8fb9\uff0c\u4f46\u6839\u636e\u9898\u610f\u8981\u51cf\u53bb\u70b9\u6743\uff09\u3002\n\n\u7136\u540e\u8003\u8651\u62bd\u8c61\u6210\u4e00\u4e2a\u4e8c\u5206\u56fe\u6a21\u578b\u3002\n\n\u628a\u8fb9\u653e\u5230\u5de6\u8fb9\uff0c\u70b9\u653e\u5230\u53f3\u8fb9\uff0c\u8fdb\u884c\u5339\u914d\u3002\n\n\u4ee4\u7b2c $i$ \u6761\u8fb9\u7684\u5e8f\u53f7\u4e3a $i+n$\u3002\n\n\u6211\u4eec\u5bf9\u4e8e\u56fe\u4e2d\u7684\u7b2c $j$ \u6761\u8fb9 $(u,v,w)$\uff0c\u5047\u8bbe\u8bf4\u9009\u4e86\u8fd9\u6761\u8fb9\uff0c\u90a3\u4e48 $u,v$ \u4e5f\u90fd\u8981\u9009\u3002\n\n\u5728\u6700\u5c0f\u5272\u4e2d\u4e00\u822c\u7528 $\\infty$ \u8868\u793a\u5fc5\u987b\u9009\u62e9\u7684\u5173\u7cfb\u3002\n\n\u5219\u5efa\u56fe\u65b9\u5f0f\u4e3a\uff1a\n\n- $s\\to j+n$\uff0c\u6d41\u91cf\u4e3a $w$\u3002\n\n- $j+n\\to u$\uff0c\u6d41\u91cf\u4e3a $\\infty$\u3002\n\n- $j+n\\to v$\uff0c\u6d41\u91cf\u4e3a $\\infty$\u3002\n\n- \u5bf9\u4e8e $\\forall i\\in [1,n]$\uff0c\u8fde $i\\to t$ \u8fb9\u6743\u4e3a $a_i$\u3002\n\n\u6ce8\u610f $a_i\\le 10^9$ \u9700\u8981\u5f00 $\\texttt{long long}$\uff0c\u5e76\u4e14\u6570\u7ec4\u4e0d\u8981\u5f00\u5c0f\u3002\n\n\u4ee3\u7801\u5c31\u4e0d\u7ed9\u4e86\uff0c\u5efa\u5b8c\u56fe\u5c31\u662f $\\texttt{dinic}$ \u7684\u677f\u5b50\u4e86\u3002\n\n$\\texttt{AC}$ \u8bb0\u5f55\uff1a[$\\texttt{Link}$](https://www.luogu.com.cn/record/73511646)\u3002\n\n$$\\texttt{The End.by UF}$$",
        "postTime": 1649465099,
        "uid": 360511,
        "name": "UperFicial",
        "ccfLevel": 0,
        "title": "\u9898\u89e3\u3010CF1082G Petya and Graph\u3011"
    },
    {
        "content": "## CF1082G \u9898\u89e3\n\n##### $\\text{Description}$\n\n\u7ed9\u5b9a\u4e00\u4e2a $n$ \u70b9 $m$ \u8fb9\u65e0\u5411\u56fe\uff0c\u8fb9\u6709\u8fb9\u6743 $b_i$\uff0c\u70b9\u6709\u70b9\u6743 $a_i$\uff0c\u8981\u6c42\u9009\u51fa\u4e00\u4e2a\u70b9\u96c6\uff0c\u4f7f\u5f97\u5176\u5bfc\u51fa\u5b50\u56fe\u7684\u8fb9\u6743\u548c\u51cf\u5176\u70b9\u6743\u548c\u6700\u5927\u3002\n\n$1\\le n,m\\le 10^3$\n\n##### $\\text{Solution}$\n\n\u82e5\u9009\u62e9\u4e86\u4e00\u6761\u8fb9\uff0c\u5219\u5176\u4e24\u4e2a\u7aef\u70b9\u4e5f\u5fc5\u987b\u88ab\u9009\u62e9\uff0c\u5219\u95ee\u9898\u53ef\u4ee5\u8f6c\u6362\u4e3a\u6700\u5927\u6743\u95ed\u5408\u56fe\u3002\n\n\u8003\u8651\u5efa\u7acb\u6e90\u70b9 $S$ \u4e0e\u6c47\u70b9 $T$\uff0c\u539f\u56fe\u4e2d\u7684\u6bcf\u4e2a\u70b9\u770b\u4f5c\u65b0\u56fe\u4e2d\u7684\u70b9\uff0c\u7f16\u53f7 $[1,n]$\uff0c\u539f\u56fe\u4e2d\u7684\u6bcf\u6761\u8fb9\u4e5f\u770b\u4f5c\u65b0\u56fe\u4e2d\u7684\u70b9\uff0c\u7f16\u53f7 $[n+1,n+m]$\u3002\n\n\u5bf9\u4e8e\u539f\u56fe\u4e2d\u7684\u6bcf\u4e2a\u70b9 $i$\uff0c\u8fde\u8fb9 $(i,T,a_i)$\u3002\n\n\u5bf9\u4e8e\u539f\u56fe\u4e2d\u7684\u6bcf\u6761\u8fb9 $i(u,v)$\uff0c\u8fde\u8fb9 $(S,n+i,b_i),(n+i,u,+\\infty),(n+i,v,+\\infty)$\u3002\n\n\u7b54\u6848\u5373\u8fb9\u6743\u548c\u51cf\u53bb\u8be5\u6d41\u56fe\u7684\u6700\u5c0f\u5272\u3002\n\n\u9996\u5148\u7531\u4e8e\u539f\u56fe\u4e2d\u8fb9\u4e0e\u70b9\u5bf9\u5e94\u7684\u70b9\u95f4\u7684\u8fb9\u5bb9\u91cf\u4e3a $+\\infty$\uff0c\u6545\u6211\u4eec\u4e0d\u4f1a\u9009\u62e9\u5220\u8fd9\u4e9b\u8fb9\u3002\n\n\u6211\u4eec\u628a\u5220\u53bb\u539f\u56fe\u4e2d\u7684\u70b9\u4e0e\u6c47\u70b9\u7684\u8fb9\u770b\u4f5c\u9009\u62e9\u8be5\u70b9\uff0c\u90a3\u4e48\uff0c\u5982\u679c\u6709\u4e00\u6761\u539f\u56fe\u4e2d\u7684\u8fb9\uff0c\u5176\u4e24\u7aef\u70b9\u6709\u4efb\u610f\u4e00\u4e2a\u6ca1\u6709\u88ab\u9009\u62e9\uff08\u5373\u4e0e\u6c47\u70b9\u7684\u8fb9\u6ca1\u6709\u88ab\u5220\u9664\uff09\uff0c\u90a3\u4e48\u6e90\u70b9\u5230\u5176\u5728\u65b0\u56fe\u4e2d\u5bf9\u5e94\u7684\u70b9\u7684\u8fb9\u5c31\u5fc5\u987b\u88ab\u5220\u9664\uff0c\u5426\u5219\u8fde\u901a\u3002\n\n\u90a3\u4e48\u4e00\u4e2a\u53ef\u884c\u7684\u5272\u5373\u4e3a\u6240\u6709\u88ab\u9009\u62e9\u7684\u70b9\u7684\u70b9\u6743\u548c\uff0c\u52a0\u4e0a\u4e0d\u5728\u9009\u51fa\u7684\u70b9\u96c6\u7684\u5bfc\u51fa\u5b50\u56fe\u4e2d\u7684\u8fb9\u7684\u8fb9\u6743\u548c\u3002\n\n\u7528\u603b\u8fb9\u6743\u548c\u51cf\u53bb\u8be5\u5272\u5c31\u662f\u8fd9\u4e2a\u70b9\u96c6\u7684\u6743\u503c\u3002\n\n\u4e3a\u4e86\u8ba9\u8fd9\u4e2a\u6743\u503c\u6700\u5927\uff0c\u6211\u4eec\u9700\u8981\u8ba9\u5272\u6700\u5c0f\uff0c\u5373\u6700\u5c0f\u5272\u3002\n\n\u6839\u636e\u6700\u5927\u6d41\u6700\u5c0f\u5272\u5b9a\u7406\uff0c\u6211\u4eec\u53ea\u9700\u8dd1\u4e00\u904d Dinic \u6c42\u51fa\u6700\u5927\u6d41\u3002\n\n##### $\\text{Code}$\n\n```cpp\n#include<bits/stdc++.h>\n#define REG register\nusing namespace std;\ninline void read(int& x){\n\tREG char c;\n\twhile(!isdigit(c=getchar()));x=c^48;\n\twhile(isdigit(c=getchar()))x=(x*10)+(c^48);\n}\ntypedef long long ll;\nconst int N=5005,M=100005;\nconst ll INF=0x3f3f3f3f3f3f3f3fll;\n\nint n,m,s,t,u,v;\n\nint Nv[N],Mv[M];\n\nstruct Edge{int v,nxt,w;}ed[M];\nint head[N],cur[N],cnt=1;\ninline void adde(int u,int v,int w){ed[++cnt]=(Edge){v,head[u],w},head[u]=cnt;}\ninline void add(int u,int v,int w){adde(u,v,w),adde(v,u,0);}\n\nll Mf;\n\nint dep[N];\n\nqueue<int> Q;\n\nbool bfs(){\n\tmemset(dep,0,sizeof dep);\n\twhile(Q.size()) Q.pop();\n\tQ.push(s),dep[s]=1,cur[s]=head[s];\n\twhile(Q.size()){\n    \tint now=Q.front();Q.pop();\n    \tfor(REG int i=head[now];i;i=ed[i].nxt){\n        \tint v=ed[i].v,w=ed[i].w;\n        \tif((!w)||dep[v]) continue;\n        \tdep[v]=dep[now]+1,Q.push(v),cur[v]=head[v];\n        \tif(v==t) return 1;\n        }\n    }\n\treturn 0;\n}\n\nll dfs(int now,ll flow){\n\tif(now==t) return flow;\n\tll rst=flow;\n\tfor(REG int i=cur[now];i&&rst;i=ed[i].nxt){\n    \tint v=ed[i].v;\n    \tif(dep[v]!=dep[now]+1||!ed[i].w) continue;\n    \tcur[now]=i;\n    \tll k=dfs(v,min(1ll*ed[i].w,rst));\n    \tif(!k) dep[v]=0;\n    \ted[i].w-=k,ed[i^1].w+=k,rst-=k;\n    }\n\treturn flow-rst;\n}\n\nll ans;\n\ninline void Work(){\n\tread(n),read(m),s=n+m+1,t=s+1;\n\tfor(REG int i=1;i<=n;++i) read(Nv[i]),add(i,t,Nv[i]);\n\tfor(REG int i=1;i<=m;++i) read(u),read(v),read(Mv[i]),add(n+i,u,INF),add(n+i,v,INF),add(s,n+i,Mv[i]),ans+=Mv[i];\n\twhile(bfs())\n    \tif(Mf=dfs(s,INF)) ans-=Mf;\n\tprintf(\"%lld\\n\",ans);\n}\n\nint main(){Work();}\n```\n\n",
        "postTime": 1605179315,
        "uid": 83547,
        "name": "LCuter",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1082G \u3010Petya and Graph\u3011"
    },
    {
        "content": "## \u9898\u610f\n\u4ece\u56fe\u4e2d\u9009\u51fa\u4e00\u4e9b\u8fb9\uff0c\u4f7f\u8fb9\u6743\u603b\u548c $-$ \u70b9\u6743\u603b\u548c\u6700\u5c0f\u3002[$QWQ$](https://www.luogu.com.cn/blog/xzc/solution-cf1082g)\n## \u5206\u6790\n\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u6a21\u677f\u9898\u4e86\u3002\n\u8fd9\u4e2a\u6a21\u578b\u53ef\u4ee5\u8bf4\u662f\u975e\u5e38\u975e\u5e38\u591a\u4e86\uff0c\u6211\u5148\u629b\u51fa\u5b83\u7684\u5b9a\u4e49\u3002\n\n- \u5728\u4e00\u4e2a\u56fe\u4e2d\uff0c\u6211\u4eec\u9009\u53d6\u4e00\u4e9b\u70b9\u6784\u6210\u96c6\u5408\uff0c\u8bb0\u4e3a $V$ \uff0c\u4e14\u96c6\u5408\u4e2d\u7684\u51fa\u8fb9(\u5373\u96c6\u5408\u4e2d\u7684\u70b9\u7684\u5411\u5916\u8fde\u51fa\u7684\u5f27)\uff0c\u6240\u6307\u5411\u7684\u7ec8\u70b9(\u5f27\u5934)\u4e5f\u5728 $V$ \u4e2d\uff0c\u5219\u6211\u4eec\u79f0 $V$ \u4e3a\u95ed\u5408\u56fe\u3002\u6700\u5927\u6743\u95ed\u5408\u56fe\u5373\u5728\u6240\u6709\u95ed\u5408\u56fe\u4e2d\uff0c\u96c6\u5408\u4e2d\u70b9\u7684\u6743\u503c\u4e4b\u548c\u6700\u5927\u7684 $V$ \uff0c\u6211\u4eec\u79f0 $V$\u4e3a\u6700\u5927\u6743\u95ed\u5408\u56fe -- \u9009\u81ea\u7f51\u7edc\u3002\n\n- \u5148\u8bf4\u4e00\u4e0b\u5904\u7406\u65b9\u5f0f\u3002\n\n- \u8bbe\u7f6e\u8d85\u7ea7\u6e90\u6c47 $S,T$\u3002\n\n- \u7136\u540e\u4f7f $S$ \u548c\u6240\u6709\u7684\u6b63\u6743\u7684\u70b9\u8fde\u63a5\u5bb9\u91cf\u4e3a\u70b9\u6743\u7684\u8fb9\uff0c\u6240\u6709\u70b9\u6743\u4e3a\u8d1f\u7684\u70b9\u548c $T$ \u8fde\u63a5\u5bb9\u91cf\u4e3a\u70b9\u6743\u7edd\u5bf9\u503c\u7684\u8fb9\u3002\u7136\u540e\u5982\u679c\u9009\u62e9\u4e86\u67d0\u4e2a $v$ \u70b9\u624d\u53ef\u4ee5\u9009 $u$ \u70b9\uff0c\u90a3\u4e48\u628a $u$ \u5411 $v$ \u8fde\u63a5\u4e00\u6761\u5bb9\u91cf\u4e3a $inf$ \u7684\u8fb9\u3002\n\n- \u6700\u5927\u70b9\u6743\u548c $=$ \u6b63\u70b9\u6743\u548c $-$ \u6700\u5c0f\u5272\u3002\n\n\u90a3\u4e48\u8fd9\u9053\u9898\u5982\u679c\u9009\u62e9\u4e86\u8fd9\u4e00\u6761\u8fb9\uff0c\u90a3\u4e48\u5fc5\u987b\u9009\u62e9\u4e24\u4e2a\u7aef\u70b9\uff0c\u8fd9\u4e0d\u5c31\u662f\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u4e86\u5417\u3002\n\n## \u8bc1\u660e\n- \u8bc1\u660e\u53ef\u4ee5\u770b\u7f51\u4e0a\u7684\uff0c\u6211\u8fd9\u91cc\u642c\u8fd0\u4e00\u4e0b\n\n- \u5272\u8fb9\u4e00\u5b9a\u51fa\u73b0\u5728\u4e0e $S,T$ \u8054\u63a5\u7684\u8fb9\u4e0a\uff0c\u56e0\u4e3a\u9664\u5f00\u8fd9\u4e9b\u8fb9\uff0c\u5176\u4f59\u7684\u8fb9\u7684\u5bb9\u91cf\u90fd\u4e3a $inf$ \u663e\u7136\u662f\u4e0d\u53ef\u80fd\u6210\u4e3a\u5272\u8fb9\u7684\u3002\n\n- \u6211\u4eec\u5047\u8bbe\u8dd1\u5b8c\u6700\u5c0f\u5272\u4e4b\u540e\u7684\u56fe\u4e2d\u4e00\u5171\u6709\u4e24\u90e8\u5206\u70b9\n- $X$ \u8868\u793a\u4e0e $S$ \u76f8\u8fde\u7684\u70b9\uff0c $Y$ \u8868\u793a\u4e0e $T$ \u76f8\u8fde\u7684\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8bbe $X_0,Y_0$ \u4e3a\u8d1f\u6743\u70b9\uff0c$X_1,Y_1$ \u4e3a\u6b63\u6743\u70b9\u3002\u7136\u540e\u7531\u4e8e\u6211\u4eec\u6c42\u4e86\u4e00\u904d\u6700\u5c0f\u5272\uff0c\u6839\u636e\u4e0a\u9762\u7b80\u5355\u5272\u7684\u8bc1\u660e\u6211\u4eec\u53d1\u73b0\u4e0d\u4f1a\u5272\u53bb\u4e2d\u95f4 $inf$ \u7684\u8fb9\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6c42\u51fa\uff1a\u6700\u5c0f\u5272 $=|X_0|+|Y_1|$ \n\n- \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0 $X$ \u7684\u6743\u503c\u548c\u53ef\u4ee5\u8868\u793a\u4e3a $Sum_X=X_1-|X_0|$ \u6211\u4eec\u628a\u4e0a\u9762\u90a3\u4e2a\u5f0f\u5b50\u4ee3\u5165\u5230\u8fd9\u4e2a\u5f0f\u5b50\u91cc\u3002 \n$$Sum_X+\\text{\u6700\u5c0f\u5272}=X_1-|X_0|+|X_0|+Y_1$$ \n\n\u7136\u540e\u6211\u4eec\u5f97\u51fa\uff1a \n$$\nSumX+\\text{\u6700\u5c0f\u5272}=X1+Y1=\\text{\u539f\u56fe\u6240\u6709\u6b63\u6743\u70b9\u6743\u503c\u4e4b\u548c}\n$$\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long \nconst int N = 31001,inf=0x3f3f3f3f3f3f3f3f;\nstruct Edge{int cap,flow,nxt,to;}e[N<<1];\nint dis[N],head[N],cnt = 1,cur[N],n,m;\nint read(){\n\tint x=0,f=0;char ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-')f=1;ch=getchar();}\n\twhile(isdigit(ch)){x=x*10+ch-'0';ch=getchar();}\n\treturn f?-x:x;\n}\nvoid add(int x,int y,int c){\n\te[++cnt].cap = c;e[cnt].flow = 0;e[cnt].to = y;e[cnt].nxt = head[x];head[x] = cnt;\n\te[++cnt].cap = 0;e[cnt].flow = 0;e[cnt].to = x;e[cnt].nxt = head[y];head[y] = cnt;\n}\nqueue<int> Q;\nbool Bfs(int s,int t){\n\twhile(Q.size()) Q.pop();memset(dis,0,sizeof(dis));\n\tQ.push(s);dis[s] = 1;while(Q.size()){\n\t\tint x = Q.front();Q.pop();\n\t\tfor(int i = head[x];i;i=e[i].nxt){\n\t\t\tif(e[i].cap>e[i].flow && !dis[e[i].to]){\n\t\t\t\tdis[e[i].to] = dis[x]+1;Q.push(e[i].to);\n\t\t\t\tif(e[i].to == t) return true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nint Dfs(int x,int a,int t){\n\tif(x==t||a==0) return a;int flow=0,f;\n\tfor(int i = cur[x];i;i=e[i].nxt){\n\t\tint y = e[i].to;\n\t\tif(dis[y]==dis[x]+1&&(f=Dfs(y,min(e[i].cap-e[i].flow,a),t))>0)\n\t\t{\n\t\t\te[i].flow+=f;e[i^1].flow-=f;flow+=f;a-=f;cur[x]=i;\n\t\t\tif(!a) break;\n\t\t}\n\t}\n\treturn flow;\n}\n\nsigned main()\n{\n\tn = read();m = read();\n\tint S = 0,T = n+m+1,tot = 0;\n\tfor(int i = 1;i <= n;i++){\n\t\tint a = read();add(i,T,a);\n\t}\n\tfor(int i = 1;i <= m;i++){\n\t\tint l=read(),r=read(),c=read();\n\t\ttot+=c;\n\t\tadd(S,i+n,c);add(i+n,l,inf);add(i+n,r,inf);\n\t}\n\tint maxflow = 0;\n\twhile(Bfs(S,T)){\n\t\tfor(int i = 0;i <= T;i++) cur[i]=head[i];\n\t\tmaxflow += Dfs(S,inf,T);\n//\t\tcout<<maxflow<<endl;\n\t}\n\tcout << tot - maxflow << endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1597740100,
        "uid": 227824,
        "name": "JK_LOVER",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1082G \u3010Petya and Graph\u3011"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1082G)\n\n\u77e5\u8bc6\u70b9\uff1a**\u6700\u5927\u6743\u95ed\u5408\u56fe\u6a21\u578b**\uff01\n\n\u9898\u76ee\u7684\u7ffb\u8bd1\u4fbf\u662f\u8fd9\u4e2a\u6a21\u578b\u7684\u9002\u7528\u6761\u4ef6\u3002\n\n- \u6b64\u6a21\u578b\u5efa\u56fe\u65b9\u5f0f\uff1a\n\n1. \u9996\u5148\u5efa\u7acb\u8d85\u7ea7\u6e90\u70b9 $s$\uff0c\u548c\u8d85\u7ea7\u6c47\u70b9 $t$\uff0c\u5e76\u65b0\u5efa $m$ \u4e2a\u70b9 $p_i,i \\in [1,m]$ \u4f7f\u4e00\u4e00\u5bf9\u5e94\u6bcf\u4e00\u6761\u8fb9\uff0c\u5c06\u539f\u6765\u7684 $n$ \u4e2a\u70b9\u7684\u7f16\u53f7\u521d\u59cb\u5316\u4e3a $p_i,i \\in[m+1,n+m]$\u3002\n\n2. \u518d\u5c06\u539f\u6765\u7684\u7b2c $i$ \u6761\u8fb9 $E_i(u,v)=w$ \u5728\u6211\u4eec\u5efa\u7684\u56fe\u4e0a\u5904\u7406\u4e3a $s\\longrightarrow i$\uff0c\u4e14\u8fb9\u6743\u5904\u7406\u4e3a $E(s,i)=w$\uff0c\u518d\u5c06 $i\\longrightarrow u+m,i\\longrightarrow v+m$ \u5206\u522b\u8fde\u4e00\u6761\u8fb9\u3002\n\n3. \u6700\u540e\u5c06\u6bcf\u4e00\u4e2a\u70b9 $p_i,i\\in [m+1,m+n]$ \u5411\u6c47\u70b9\u8fde\u8fb9\u6743\u4e3a\u8be5\u70b9\u70b9\u6743\u7684\u6709\u5411\u8fb9\uff0c\u5373 $ p_i ,i \\in [m,m+n] \\longrightarrow t$\uff0c\u4e14 $E(p_i,t)=V_{p_i}$\u3002\n\n\u8fd9\u6837\u5efa\u56fe\u4e4b\u540e\u7b54\u6848\u5373\u4e3a**\u70b9\u6743\u4e4b\u548c $-$ \u65b0\u5efa\u56fe\u7684\u6700\u5c0f\u5272**\u3002\n\n- \u8bc1\u660e\uff1a\n\n\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u6a21\u578b\u8f6c\u5316\u4e3a\u4e00\u4e2a\u60c5\u666f\uff1a\u6709 $m$ \u4e2a\u4eba\uff0c$n$ \u79cd\u4f7f\u7528\u9700\u8981\u4ed8\u8d39\u7684\u5de5\u5177\u7684\u82b1\u8d39\u5206\u522b\u4e3a $V_{n_i}$\u3002\u8fd9 $m$ \u4e2a\u4eba\u6bcf\u4e2a\u4eba\u505a\u4efb\u52a1\uff0c\u5b8c\u6210\u540e\u5206\u522b\u4f1a\u5f97\u5230 $w_{m_i}$ \u7684\u76c8\u5229\uff0c\u4f46\u4f1a\u4f7f\u7528 $k_{m_i}$ \u79cd\u5de5\u5177\u3002\u4e00\u4e2a\u5de5\u5177\u88ab\u591a\u6b21\u4f7f\u7528\u65f6\u53ea\u9700\u6536\u8d39\u4e00\u6b21\uff0c\u8bf7\u4f60\u5b89\u6392\u4e00\u4e9b\u4eba\u53bb\u505a\u4efb\u52a1\u4f7f\u7684\u603b\u83b7\u5229\u6700\u5927\u3002\n\n\u5982\u679c\u6211\u4eec\u9009\u62e9\u4e86 $p$ \u4e2a\u4eba\u8ba9\u4ed6\u4eec\u4e0d\u505a\u4efb\u52a1\uff0c\u90a3\u4e48\u5219\u9700\u8981\u4ed8\u5269\u4e0b\u7684 $m-p$ \u4e2a\u4eba\u6240\u9700\u7684\u5168\u90e8\u5de5\u5177\u7684\u8d39\u7528\u3002\u8f6c\u5316\u5230\u56fe\u4e0a\uff0c\u5373\u662f\u6784\u6210\u4e86\u8fd9\u5f20\u56fe\u7684\u4e00\u4e2a\u5272\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u753b\u56fe\u81ea\u8bc1\u3002\u90a3\u4e48\u6b64\u65f6\u7684\u5229\u6da6\u5373\u4e3a **$m-p$ \u4e2a\u4eba\u7684\u5229\u6da6 $-$ \u8fd9 $m-p$ \u4e2a\u4eba\u5de5\u5177\u8d39\u7528 $=\\sum w-p$ \u4e2a\u4e0d\u5de5\u4f5c\u7684\u4eba\u7684\u5229\u6da6 $-$ \u8fd9 $(m-p)$ \u4e2a\u4eba\u5de5\u5177\u8d39\u7528 $=\\sum w-$ \u8fd9\u5f20\u56fe\u7684\u5272**\u3002\n\n\u4e3a\u4e86\u5229\u6da6\u66f4\u5927\uff0c\u5219\u51cf\u53bb\u6700\u5c0f\u5272\u5373\u53ef\u3002\n\n\u8bc1\u6bd5\u3002\n",
        "postTime": 1685455139,
        "uid": 774862,
        "name": "Tsinghua_pwtking",
        "ccfLevel": 0,
        "title": "CF1082G Petya and Graph \u9898\u89e3"
    },
    {
        "content": "\u56e0\u4e3a\u8fd9\u4e2a\u9898\u7684\u8fb9\u6743\u5168\u90fd\u975e\u8d1f\uff0c\u53ef\u4ee5\u60f3\u5230\u9009\u7684\u8282\u70b9\u96c6\u5408\u4e3a $S$ \uff0c\u90a3\u4e48\u8fb9\u6743\u548c $=\\sum_{x,y\\in S \\& (x,y) \\in E}val(x,y)$\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u786e\u5b9a\u9009\u51fa\u8282\u70b9\u7684\u96c6\u5408\u5373\u53ef\u3002\n\n\u4ece\u8fb9\u7684\u89d2\u5ea6\u6765\u8003\u8651\u8fd9\u4e2a\u95ee\u9898\uff0c\u5982\u679c $(x,y)$ \u88ab\u9009\u4e2d\uff0c\u5fc5\u7136\u6709 $x,y \\in S$\u3002\n\n\u8fd9\u662f\u4ec0\u4e48\uff1f\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u5bf9\u5427\u3002\n\n\u76f4\u63a5\u7528\u7f51\u7edc\u6d41\u89e3\u51b3\u95ee\u9898\uff0c\u590d\u6742\u5ea6\u4e0a\u754c $O((n+m) \\sqrt{n+m})$\uff0c\u53ef\u4ee5\u8f7b\u677e\u901a\u8fc7\u672c\u9898\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int NR=1e4+10;\n#define int long long\nint n,m,s,t,ans,a[NR];\n\nstruct edge{\n\tint to,next;\n\tint flow;\n}g[NR];\nint tot=1,fte[NR];\nvoid add(int x,int y,int z){\n\tg[++tot]=(edge){y,fte[x],z};fte[x]=tot;\n\tg[++tot]=(edge){x,fte[y],0};fte[y]=tot;\n}\nint dis[NR],cur[NR];\nbool bfs(){\n\tmemset(dis,-1,sizeof(dis));\n\tqueue<int>q;q.push(s);\n\tdis[s]=0;cur[s]=fte[s];\n\twhile(!q.empty()){\n\t\tint x=q.front();q.pop();\n\t\tfor(int i=fte[x];i;i=g[i].next){\n\t\t\tint y=g[i].to;\n\t\t\tif(dis[y]==-1&&g[i].flow){\n\t\t\t\tq.push(y);dis[y]=dis[x]+1;\n\t\t\t\tcur[y]=fte[y];\n\t\t\t\tif(y==t)return true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nint dfs(int id,int Limit){\n\tif(id==t)return Limit;\n\tint flow=0;\n\tfor(int i=cur[id];i&&flow<Limit;i=g[i].next){\n\t\tcur[id]=i;\n\t\tint y=g[i].to;\n\t\tif(g[i].flow!=0&&dis[y]==dis[id]+1){\n\t\t\tint f=dfs(y,min(g[i].flow,Limit-flow));\n\t\t\tif(!f)dis[y]=-1;\n\t\t\tg[i].flow-=f;g[i^1].flow+=f;\n\t\t\tflow+=f;\n\t\t}\n\t}\n\treturn flow;\n}\nint Dinic(){\n\tint MaxFlow=0,flow=0;\n\twhile(bfs())\n\t\twhile(flow=dfs(s,1e18))MaxFlow+=flow;\n\treturn MaxFlow;\n}\n\nsigned main(){\n\tcin>>n>>m;s=n+m+1;t=s+1;\n\tfor(int i=1;i<=n;i++)cin>>a[i],add(i+m,t,a[i]);\n\tfor(int i=1;i<=m;i++){\n\t\tint x,y,z;cin>>x>>y>>z;ans+=z;\n\t\tadd(i,x+m,1e9);add(i,y+m,1e9);add(s,i,z);\n\t}\n\tcout<<ans-Dinic()<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1652277830,
        "uid": 117771,
        "name": "intel_core",
        "ccfLevel": 7,
        "title": "CF1082G \u9898\u89e3"
    }
]