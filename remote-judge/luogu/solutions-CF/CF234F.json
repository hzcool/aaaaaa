[
    {
        "content": "\u52a8\u6001\u89c4\u5212\u597d\u9898\uff0c\u76ee\u6d4b\u672c\u9898\u96be\u5ea6\u4e3a\u7eff\u9898\u5de6\u53f3\u3002\n\n### \u9898\u610f\n\u7ed9\u5b9a $n$ \u4e2a\u76f8\u90bb\u7684\u5bbd\u5ea6\u4e3a $1$ \u7684\u6805\u680f\uff0c\u7b2c $i$ \u4e2a\u6805\u680f\u9ad8\u5ea6\u4e3a $h_i$\uff0c\u6bcf\u4e2a\u6805\u680f\u5fc5\u987b**\u5168\u90e8**\u5237\u7ea2\u8272\u6216\u8005\u7eff\u8272\u3002\u5b9a\u4e49\u96be\u770b\u7a0b\u5ea6\u4e3a\u6240\u6709\u7684\u76f8\u90bb\u7684**\u4e0d\u540c**\u989c\u8272\u7684\u6805\u680f\u4e4b\u95f4**\u8f83\u5c0f**\u6805\u680f\u7684\u9ad8\u5ea6\u4e4b\u548c\u3002\u6c42\u5728\u6ee1\u8db3\u7ea2\u8272\u6805\u680f\u9762\u79ef\u4e0d\u8d85\u8fc7 $a$ \uff0c\u4e14\u7eff\u8272\u6805\u680f\u9762\u79ef\u4e0d\u8d85\u8fc7 $b$ \u7684\u524d\u63d0\u4e0b\uff0c\u96be\u770b\u7a0b\u5ea6\u7684\u6700\u5c0f\u503c\u3002 \n\n### \u601d\u8def\n\n\u521d\u770b\u6b64\u9898\uff0c\u6709\u4e00\u79cd\u6734\u7d20\u7684\u60f3\u6cd5\uff0c\u5b9a\u4e49 $f[i][j][k][l]$ \u6765\u8868\u793a\u5728\u524d $i$ \u4e2a\u6805\u680f\u4e2d\uff0c\u7ea2\u8272\u6805\u680f\u9762\u79ef\u4e3a $j$\uff0c\u7eff\u8272\u6805\u680f\u9762\u79ef\u4e3a $k$\uff0c\u4e14\u6700\u540e\u4e00\u4e2a\u6805\u680f\u989c\u8272\u4e3a $l$ \uff08$0$ \u8868\u793a\u7ea2\u8272\uff0c$1$ \u8868\u793a\u7eff\u8272\uff09\u65f6\u7684\u6700\u5c0f\u96be\u770b\u7a0b\u5ea6\u3002\n\u4e8e\u662f\u5c31\u53ef\u4ee5\u5f97\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$f[i][j][k][0]=min(f[i][j-h[i]][k][0],f[i][j-h[i]][k][1]+min(h[i],h[i-1]))$ \u3002\n\n$f[i][j][k][1]=min(f[i][j][k-h[i]][1],f[i][j][k-h[i]][1]+min(h[i],h[i-1]))$ \u3002\n\n\n\u4f46\u662f\u4ed4\u7ec6\u4e00\u770b\u672c\u9898\u6570\u636e\u8303\u56f4 \uff1a$(0 \\leq a,b \\leq 40000)$\uff0c~~\u663e\u7136~~\u65e0\u6cd5\u901a\u8fc7\u3002\u4e8e\u662f\u9700\u8981\u8003\u8651\u4f18\u5316\u3002\n \n\u901a\u8fc7\u89c2\u5bdf\u53ef\u4ee5\u53d1\u73b0\u3002\u5728\u524d $i$ \u4e2a\u6805\u680f\u4e2d\uff0c\u6240\u6709\u7ea2\u8272\u6805\u680f\u7684\u9762\u79ef\u4e0e\u6240\u6709\u7eff\u8272\u6805\u680f\u9762\u79ef\u7684\u603b\u548c\u4e00\u5b9a\u4e3a\u524d $i$ \u4e2a\u6805\u680f\u7684\u9762\u79ef\u4e4b\u548c\u3002\u4e8e\u662f\u53ef\u4ee5\u5728\u8f6c\u79fb\u7684\u65f6\u5019\u53ea\u679a\u4e3e\u7ea2\u8272\u6805\u680f\u7684\u603b\u9762\u79ef\uff0c\u7eff\u8272\u6805\u680f\u7684\u9762\u79ef\u53ef\u4ee5\u7528\u603b\u9762\u79ef\u51cf\u53bb\u7ea2\u8272\u6805\u680f\u7684\u9762\u79ef\u5f97\u5230\u3002\u4e8e\u662f\u5c31\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n### code\uff1a\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int INF=0x3f3f3f3f;\nconst int N=210;\nconst int M=40010;\nint abs(int a){return a>0?a:-a;}\nint min(int a,int b){return a<b?a:b;}\nint max(int a,int b){return a>b?a:b;}\nint n,a,b,h[N],f[N][M][2],s[N];//0 a\uff0c1 b \nint main()\n{\n\tmemset(f,0x3f,sizeof(f));\n\tf[0][0][0]=f[0][0][1]=0;\n\tscanf(\"%d%d%d\",&n,&a,&b);\n\tfor(int i=1;i<=n;i++) \n\t{\n\t    scanf(\"%d\",&h[i]);\t\n\t    s[i]=s[i-1]+h[i];\n\t}\n\tfor(int i=1;i<=n;i++)\n\t    for(int j=max(0,s[i]-b);j<=min(a,s[i]);j++)\n\t    {\n\t    \tif(j>=h[i]) f[i][j][0]=min(f[i-1][j-h[i]][1]+min(h[i],h[i-1]),f[i-1][j-h[i]][0]);\n\t    \tf[i][j][1]=min(f[i-1][j][1],f[i-1][j][0]+min(h[i],h[i-1]));\n\t\t}\n\tint ans=INF;\n\tfor(int i=0;i<=a;i++) ans=min(ans,min(f[n][i][1],f[n][i][0]));\n\tif(ans==INF) puts(\"-1\");\n\telse printf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1622468380,
        "uid": 288192,
        "name": "ListenSnow",
        "ccfLevel": 7,
        "title": "CF234F Fence"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f\uff1a\u7ed9\u51fan\u4e2a\u957f\u65b9\u5f62\u4ed6\u4eec\u7684\u9ad8\uff0c\u5bbd\u4e3a1\uff0c\u7ed9\u51fa\u67d3\u6599\u53ef\u4ee5\u67d3\u7684\u9762\u79ef\uff08\u4e24\u79cd\uff0c\u5206\u522b\u4e3aa\u3001b\uff09A\u503c\u4e3a\u4e0d\u540c\u67d3\u8272\u4e4b\u95f4\u7684\u9762\u79ef\uff08\u5c31\u662f\u76f8\u90bb\u4e24\u4e2a\u957f\u65b9\u5f62\u6328\u7740\u7684\u9762\u79ef\uff09\u3002\u95ee\u8fd9\u4e2a\u503c\u6700\u5c0f\u591a\u5c11\n\n\u601d\u8def\uff1adp[i][j][k]\u4ee3\u8868\u5df2\u7ecf\u67d3\u4e86i\u4e2a\u957f\u65b9\u5f62\uff0c\u7528\u4e86j\u4e2aa\u67d3\u6599\uff0c\u5f53\u524d\u67d3a\u3001b\uff08\u75280\u30011\u4ee3\u8868\uff09\u3002\u521d\u59cb\u5316 dp[0][0][0]=dp[0][0][1]=0;\uff08\u72b6\u6001\u8f6c\u6362\u65b9\u7a0b\u56e0\u4e3a\u60c5\u51b5\u8f83\u591a\uff0c\u53ef\u5728\u4ee3\u7801\u4e2d\u67e5\u770b\uff09\n\ncode\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int INF = 0x3f3f3f3f;\nint dp[210][40010][2],n,a,b,h[210], c[210], s[210];\n\nint main()\n{\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n    cin>>n>>a>>b;\n    for(int i = 1; i<=n; ++i) \n    {\n        cin>>h[i];\n        c[i] = min(h[i-1], h[i]);\n        s[i] = s[i-1] + h[i];\n    }\n    memset(dp, 0x3f, sizeof(dp));\n    dp[0][0][0] = dp[0][0][1] = 0;\n    for(int i = 1; i <= n; ++i) \n    {\n        for(int j = 0; j<=s[i]; ++j) \n        {\n            if(j > a)\n                break;\n            if(s[i] - j > b)\n                continue;\n            if(j >= h[i])\n                dp[i][j][0] = min(dp[i-1][j - h[i]][0], dp[i-1][j - h[i]][1] + c[i]);\n            dp[i][j][1] = min(dp[i-1][j][0] + c[i], dp[i-1][j][1]);\n        }\n    }\n    int res = INF;\n    for(int j = 0; j<=a; ++j) \n        for(int k = 0; k<=1; ++k)\n            res = min(res, dp[n][j][k]);\n    if(res==INF)\n        cout<<-1<<endl;\n    else\n        cout<<res<<endl;\n}\n```\n",
        "postTime": 1566273199,
        "uid": 132290,
        "name": "\u5f00\u59cb\u65b0\u7684\u8bb0\u5fc6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF234F \u3010Fence\u3011"
    },
    {
        "content": "# [CF234F  Fence](https://www.luogu.com.cn/problem/CF234F)\n## \u9898\u76ee\u63cf\u8ff0\n\u4f60\u88ab\u8981\u6c42\u4e3a $n$ \u4e2a\u5bbd\u4e3a $1$\uff0c\u9ad8\u4e3a $h_i$ \u7684\u6805\u680f\u67d3\u4e0a\u7ea2\u3001\u7eff\u4e24\u79cd\u989c\u8272\uff0c\u8981\u6c42\u7ea2\u8272\u9762\u79ef\u4e0d\u8d85\u8fc7 $a$\uff0c\u7eff\u8272\u9762\u79ef\u4e0d\u8d85\u8fc7 $b$\uff0c\u4e14\u6700\u5c0f\u5316\u603b\u4ee3\u4ef7\u3002  \n\u603b\u4ee3\u4ef7\u5b9a\u4e49\u4e3a\u76f8\u90bb\u4e14\u989c\u8272\u4e0d\u540c\u7684\u6805\u680f\u76f8\u4ea4\u90e8\u5206\u7684\u7ebf\u6bb5\u957f\u5ea6\u4e4b\u548c\u3002\n## \u9898\u76ee\u5206\u6790\n\u5bf9\u4e8e\u6b64\u7c7b\u5177\u6709\u591a\u4e2a\u9650\u5236\u6761\u4ef6\uff0c\u4ec5\u51ed\u7b80\u5355\u679a\u4e3e\u96be\u4ee5\u5904\u7406\u7684\u9898\u76ee\uff0c\u53ef\u4ee5\u8003\u8651\u8fdb\u884c\u52a8\u6001\u89c4\u5212\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u5f53\u6211\u4eec\u5904\u7406\u5230\u67d0\u4e00\u4e2a\u6805\u680f\u65f6\uff0c\u5148\u524d\u5904\u7406\u8fc7\u7684\u6805\u680f\u7684\u9762\u79ef\u662f\u786e\u5b9a\u7684\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u8bb0\u5f55\u4e00\u79cd\u989c\u8272\u6805\u680f\u7684\u603b\u9762\u79ef\uff0c\u90a3\u4e48\u53e6\u4e00\u79cd\u989c\u8272\u6805\u680f\u7684\u603b\u9762\u79ef\u5373\u53ef\u901a\u8fc7\u524d\u7f00\u548c\u5feb\u901f\u5f97\u5230\u3002  \n\n\u8bbe $dp_{i, j, 0/1}$ \u8868\u793a\u5904\u7406\u5230\u7b2c $i$ \u4e2a\u6805\u680f\uff0c\u7ea2\u8272\u9762\u79ef\u4e3a $j$\uff0c \u4e14\u5f53\u524d\u6805\u680f\u88ab\u6d82\u4e0a\u7ea2\u8272/\u7eff\u8272\u65f6\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002  \n\n\u8f6c\u79fb\u65f6\u9884\u5148\u5904\u7406\u51fa\u7eff\u8272\u90e8\u5206\u7684\u9762\u79ef\uff0c\u518d\u6839\u636e $a$ \u548c $b$ \u7684\u9650\u5236\uff0c\u5206\u522b\u8003\u8651\u662f\u5426\u53ef\u4ee5\u5bf9\u8fd9\u4e00\u6839\u6805\u680f\u6d82\u4e0a\u4e24\u79cd\u989c\u8272\u3002\u82e5\u5f53\u524d\u8981\u6d82\u7684\u989c\u8272\u548c\u4e0a\u4e00\u6839\u7684\u989c\u8272\u4e0d\u540c\uff0c\u5219\u4ee3\u4ef7\u589e\u52a0 $\\min (h_{i-1}, h_i)$\u3002  \n\n\u6ce8\u610f\u6587\u4ef6\u8f93\u5165\u8f93\u51fa\u4ee5\u53ca\u5bf9\u65e0\u89e3\u7684\u5224\u65ad\u3002  \n\u9898\u76ee\u8f83\u4e3a\u7b80\u5355\uff0c\u5efa\u8bae\u8bc4\u9ec4/\u7eff\u3002\n\nCode Time\n```cpp\n#include <cstdio>\n#include <cctype>\n#include <cstring>\nusing namespace std;\n\ninline int min(int &a, int b){return a < b ? a : b;}\ninline int read()\n{\n    int x = 0; char c;\n    while(!isdigit(c = getchar()));\n    do{\n        x = (x << 1) + (x << 3) + (c ^ 48);\n    }while(isdigit(c = getchar()));\n    return x;\n}\n\nint top = 0, stk[20];\ninline void write(int x)\n{\n    do{\n        stk[++top] = x % 10;\n        x /= 10;\n    }while(x);\n    for(register int i = top; i; --i)\n        putchar(stk[i] | 48);\n    putchar('\\n'); top = 0;\n    return ;\n}\n\nint n, a, b, ans = 2147483647;\nint sz[205], sum[205], dp[205][40010][2];\n//\u6d82\u4e86i\u5757\u6805\u680f\uff0c\u6709j\u7684\u9762\u79ef\u6d82\u4e0a\u7ea2\u8272\uff0c\u5f53\u524d\u4ee5\u7ea2/\u7eff\u7ed3\u5c3e\u7684\u6700\u5c0f\u4e0d\u7f8e\u89c2\u5ea6\nint main()\n{\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);//\u6ce8\u610f\u6b64\u9898\u6587\u4ef6\u8f93\u5165\u8f93\u51fa\n    n = read(); a = read(); b = read();\n    for(register int i = 1; i <= n; ++i)\n    {\n        sz[i] = read();\n        sum[i] = sum[i - 1] + sz[i];\n    }\n    memset(dp, 0x3f, sizeof(dp));\n    dp[0][0][0] = dp[0][0][1] = 0;\n    for(register int i = 1; i <= n; ++i)\n    {\n        for(register int j = sum[i - 1]; j >= 0; --j)\n        {\n            for(register int k = 0; k <= 1; ++k)\n            {\n                int l1 = j + sz[i], l2 = sum[i - 1] - j + sz[i];//l1\u4e3a\u5047\u8bbe\u8fd9\u6839\u6805\u680f\u6d82\u7ea2\u8272\u540e\u7ea2\u8272\u603b\u9762\u79ef\uff0cl2\u540c\u7406\n                if(l1 <= a) dp[i][l1][0] = min(dp[i - 1][j][0], dp[i - 1][j][1] + min(sz[i], sz[i - 1]));\n                if(l2 <= b) dp[i][j][1] = min(dp[i - 1][j][1], dp[i - 1][j][0] + min(sz[i - 1], sz[i]));\n            }//\u8f6c\u79fb\u9700\u6ee1\u8db3a,b\u9650\u5236\n        }\n    }\n    for(register int i = 0; i <= a; ++i)\n        for(register int j = 0; j <= 1; ++j)\n            ans = min(ans, dp[n][i][j]);\n    if(ans == 0x3f3f3f3f) printf(\"-1\\n\");//\u82e5\u76ee\u6807\u72b6\u6001\u6ca1\u6709\u88ab\u66f4\u65b0\uff0c\u8bf4\u660e\u4e0d\u5b58\u5728\u5408\u6cd5\u65b9\u6848\n    else write(ans); return 0;\n}\n```",
        "postTime": 1666437919,
        "uid": 632868,
        "name": "Clover_BY",
        "ccfLevel": 0,
        "title": "CF234F  Fence"
    }
]