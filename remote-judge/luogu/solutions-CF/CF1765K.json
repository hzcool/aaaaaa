[
    {
        "content": "**\u8d5b\u65f6\u505a\u6cd5**\uff1a\u4ece\u67d0\u4e00\u5217\u7684\u6700\u540e\u4e00\u884c\u8de8\u8d8a\u81f3\u7b2c\u4e00\u884c\u540e\uff0c\u65e0\u6cd5\u4ece\u67d0\u4e00\u884c\u7684\u6700\u540e\u4e00\u5217\u8de8\u8d8a\u81f3\u7b2c\u4e00\u5217\uff0c\u5426\u5219\u8def\u5f84\u5fc5\u7136\u4ea4\u53c9\u3002\u56e0\u6b64\uff0c\u8bbe $f_{i, j, k}$ \u8868\u793a\u7b2c\u4e00\u6b21\u8fdb\u5165\u7b2c $i$ \u5217\u7684\u4f4d\u7f6e\u4e3a $(k, i)$\uff0c\u5f53\u524d\u4f4d\u7f6e\u4e3a $(j, i)$ \u7684\u6700\u5927\u6536\u76ca\u3002\u6839\u636e\u5b9e\u9645\u610f\u4e49\u8f6c\u79fb\u3002\u6ce8\u610f\u884c\u5217\u4ea4\u6362\u518d\u505a\u4e00\u6b21\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n ^ 3)$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nconstexpr int N = 200 + 5;\nint n, a[N][N], vis[N][N][N];\nll f[N][N][N], ans;\nll dfs(int i, int j, int k) {\n  if(i == n && j == n) return a[i][j];\n  if(vis[i][j][k]) return f[i][j][k];\n  ll ans = -1e18;\n  vis[i][j][k] = 1;\n  if(i < n) ans = max(ans, dfs(i + 1, j, j));\n  int nxt = j == n ? 1 : j + 1;\n  if(nxt != k) ans = max(ans, dfs(i, nxt, k));\n  return f[i][j][k] = ans + a[i][j];\n}\nint main() {\n  #ifdef ALEX_WEI\n    FILE* IN = freopen(\"1.in\", \"r\", stdin);\n    FILE* OUT = freopen(\"1.out\", \"w\", stdout);\n  #endif\n  cin >> n;\n  for(int i = 1; i <= n; i++)\n    for(int j = 1; j <= n; j++)\n      cin >> a[i][j];\n  ans = dfs(1, 1, 1);\n  for(int i = 1; i <= n; i++)\n    for(int j = 1; j <= i; j++)\n      swap(a[i][j], a[j][i]);\n  memset(vis, 0, sizeof(vis));\n  cout << max(ans, dfs(1, 1, 1)) << \"\\n\";\n  return 0;\n}\n/*\ng++ K.cpp -o K -std=c++14 -O2 -DALEX_WEI\n*/\n```\n\n**\u5b98\u65b9\u505a\u6cd5**\uff1a\u624b\u73a9\u51e0\u7ec4 $n$ \u8f83\u5c0f\u65f6\u7684\u7b80\u5355\u60c5\u51b5\uff0c\u53d1\u73b0\u65e0\u8bba\u600e\u4e48\u8d70\uff0c\u81f3\u5c11\u4e00\u4e2a\u526f\u5bf9\u89d2\u7ebf\u4e0a\u7684\u5143\u7d20\u65e0\u6cd5\u7ecf\u8fc7\uff0c\u4e14\u9664\u6b64\u4ee5\u5916\u6240\u6709\u4f4d\u7f6e\u90fd\u80fd\u7ecf\u8fc7\u3002\u8bc1\u660e\u5373\u8003\u8651\u53ef\u8fbe\u526f\u5bf9\u89d2\u7ebf\u7684\u4f4d\u7f6e\u5171 $n$ \u4e2a\uff0c\u4f46 $(n, n)$ \u4f5c\u4e3a\u7ec8\u70b9\uff0c\u6240\u4ee5\u6700\u591a $n - 1$ \u6b21\u7ecf\u8fc7\u53ef\u8fbe\u526f\u5bf9\u89d2\u7ebf\u7684\u4f4d\u7f6e\u3002\u94a6\u5b9a\u67d0\u4f4d\u7f6e\u4e0d\u53ef\u8fbe\u540e\uff0c\u53ef\u7528\u7b80\u5355\u7b56\u7565\u751f\u6210 $(1, 1)$ \u5230 $(n, n)$ \u7684\u8def\u5f84\uff1a\u6bcf\u6b21\u5411\u4e0b\u8d70\uff0c\u53ea\u6709\u5411\u4e0b\u8d70\u975e\u6cd5\u65f6\u624d\u5411\u53f3\u8d70\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n ^ 2)$\u3002\n\n\u8d5b\u65f6\u505a\u6cd5\u53ef\u4ee5\u89e3\u51b3 $a_i < 0$ \u7684\u60c5\u51b5\uff0c\u4f46\u6807\u7b97\u4e0d\u884c\u3002\u662f\u5426\u5b58\u5728 $\\mathcal{O}(n ^ 2)$ \u4e14\u80fd\u89e3\u51b3 $a_i < 0$ \u7684\u505a\u6cd5\uff1f\n\n\u8bbe $f_{i, j}$ \u8868\u793a\u7b2c $i$ \u5217\u7ecf\u8fc7\u6700\u540e\u4e00\u4e2a\u683c\u5b50\u4e3a $(j, i)$ \u7684\u6700\u5927\u6536\u76ca\uff0c\u5219\u5bf9\u4e8e $k\\geq j$\uff0c\u4ea7\u751f $f_{i, j} + \\sum_{p = j} ^ k a_{p, i + 1}$ \u8d21\u732e\u3002\u5bf9\u4e8e $k < j$\uff0c\u4ea7\u751f $f_{i, j} + \\sum_{p = j} ^ n a_{p, i + 1} + \\sum_{p = 1} ^ k a_{p, i + 1}$ \u8d21\u732e\u3002\u5bb9\u6613\u524d\u7f00\u548c\uff0c\u524d\u540e\u7f00 $\\max$ \u4f18\u5316\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n ^ 2)$\u3002\u4ee3\u7801\u61d2\u5f97\u5199\u4e86\u3002",
        "postTime": 1671173164,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "CF1765K Torus Path"
    },
    {
        "content": "\u9898\u610f\uff1a\u6709 $ n $ $\\times$ $ n $ \u4e2a\u683c\u5b50\uff0c\u7b2c $ i $ \u884c\u7b2c $ j $ \u5217\u7684\u683c\u5b50\u7684\u6743\u503c\u4e3a $ a_{i,j} $\uff0c\u4f60\u9700\u8981\u4ece\u5de6\u4e0a\u89d2 $ (1, 1) $ \u51fa\u53d1\uff0c\u8d70\u82e5\u5e72\u6b65\uff0c\u5230\u8fbe\u53f3\u4e0b\u89d2 $ (n, n) $\u3002\u6bcf\u4e00\u6b65\u53ea\u80fd\u5411\u53f3\u6216\u5411\u4e0b\u8d70\u3002\u7279\u522b\u5730\uff0c\u5982\u679c\u5f53\u524d\u5728\u7b2c $ n $ \u884c\u7b2c $ y $ \u5217\uff0c\u5f80\u4e0b\u8d70\u4e00\u6b65\u4f1a\u5230\u8fbe\u7b2c $ 1 $ \u884c\u7b2c $ y $ \u5217\uff1b\u5982\u679c\u5f53\u524d\u5728\u7b2c $ x $ \u884c\u7b2c $ n $ \u5217\uff0c\u5f80\u53f3\u8d70\u4e00\u90e8\u4f1a\u5230\u8fbe\u7b2c $ x $ \u884c\u7b2c $ 1 $ \u5217\u3002\u540c\u4e00\u4e2a\u683c\u5b50\u4e0d\u80fd\u88ab\u7ecf\u8fc7\u8d85\u8fc7\u4e00\u6b21\u3002\u95ee\u6240\u6709\u5408\u6cd5\u65b9\u6848\u4e2d\uff0c\u7ecf\u8fc7\u70b9\u7684\u6743\u503c\u548c\u6700\u5927\u662f\u591a\u5c11\u3002\n\n\u4fdd\u8bc1 $ n $ \u4e0d\u8d85\u8fc7 $ 200 $\u3002\n\n===================================================\n\n\u9996\u5148\uff0c\u7b2c\u4e00\u884c\u4e0d\u80fd\u6a2a\u7740\u7a7f\u8d8a\uff0c\u7b2c\u4e00\u5217\u4e0d\u80fd\u7ad6\u7740\u7a7f\u8d8a\uff0c\u5426\u5219\u4f1a\u4e8c\u6b21\u7ecf\u8fc7 $ (1, 1) $\u3002\u6211\u4eec\u628a\u7b2c\u4e00\u6b21\u7a7f\u8d8a\u524d\u548c\u7b2c\u4e00\u6b21\u7a7f\u8d8a\u540e\u5206\u6210\u4e24\u90e8\u5206\u3002\u8bbe\u4ece $ (1, 1) $ \u51fa\u53d1\uff0c\u4e0d\u7ecf\u8fc7\u7a7f\u8d8a\uff0c\u8d70\u5230\u4e86 $ (x, y) $\uff0c\u7136\u540e\u4ece $ (x, y) $ \u5411\u53f3\u8d70\uff0c\u76f4\u5230\u7a7f\u8d8a\u5230 $ (x, 1) $\u3002\u6ce8\u610f\u5230\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u73b0\u8c61\uff1a\u5728\u6b64\u4e4b\u540e\uff0c\u8981\u4e48\u4e0d\u7a7f\u8d8a\uff0c\u8981\u4e48\u8fd8\u662f\u6a2a\u7740\u7a7f\u8d8a\uff0c\u4f46\u4e0d\u80fd\u7ad6\u7740\u7a7f\u8d8a\u4e86\u3002\u56e0\u4e3a\u4ee5\u4e0a\u7ecf\u8fc7\u7684\u8fd9\u4e9b\u70b9\u5df2\u7ecf\u6784\u6210\u4e86\u4e00\u5835\u5899\uff0c\u5982\u679c\u5728\u8fd9\u4e4b\u540e\u7ad6\u7740\u7a7f\u8d8a\uff0c\u90a3\u4e48\u7a7f\u8d8a\u5230\u7b2c\u4e00\u884c\u4ee5\u540e\u5f80\u4e0b\u8d70\u7684\u8fc7\u7a0b\u4e2d\u4e00\u5b9a\u4f1a\u88ab\u5899\u5835\u4f4f\uff0c\u5373\u65e0\u8bba\u600e\u4e48\u8d70\u90fd\u4f1a\u6709\u683c\u5b50\u88ab\u7ecf\u8fc7\u4e24\u6b21\u3002\u6240\u4ee5\u8bf4\uff0c\u5982\u679c\u7b2c\u4e00\u6b21\u7a7f\u8d8a\u662f\u6a2a\u7740\u7a7f\u8d8a\uff0c\u90a3\u4e48\u4e4b\u540e\u5c31\u4e0d\u80fd\u518d\u7ad6\u7740\u7a7f\u8d8a\u4e86\u3002\u540c\u7406\uff0c\u5982\u679c\u7b2c\u4e00\u6b21\u7a7f\u8d8a\u662f\u7ad6\u7740\u7a7f\u8d8a\uff0c\u90a3\u4e48\u4e4b\u540e\u5c31\u4e0d\u80fd\u518d\u6a2a\u7740\u7a7f\u8d8a\u4e86\u3002\n\n\u4ee5\u4e0a\uff0c\u6211\u4eec\u5df2\u7ecf\u5206\u6790\u51fa\uff0c\u65e2\u6709\u6a2a\u7740\u7a7f\u8d8a\uff0c\u53c8\u6709\u7ad6\u7740\u7a7f\u8d8a\u7684\u65b9\u6848\u4e00\u5b9a\u4e0d\u5408\u6cd5\u3002\u90a3\u4e48\u53ea\u8981\u8003\u8651\u53ea\u6a2a\u7740\u7a7f\u8d8a\u6216\u53ea\u7ad6\u7740\u7a7f\u8d8a\u7684\u65b9\u6848\u5373\u53ef\u3002\n\n\u5148\u8003\u8651\u53ea\u6a2a\u7740\u7a7f\u8d8a\u7684\u60c5\u51b5\u3002\n\n\u8bb0\u72b6\u6001 $ g_{i,j} $ \u8868\u793a\u8d70\u5230 $ (i, j) $ \u4e4b\u540e\uff0c\u5f80\u53f3\u4e00\u76f4\u8d70\u5230 $ (i, n) $\uff0c\u7ecf\u8fc7\u7684\u70b9\u7684\u6743\u503c\u548c\u7684\u6700\u5927\u503c\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c\u53ea\u8981\u5728\u8fd9\u4e2a\u57fa\u7840\u4e0a\u518d\u5f80\u53f3\u8d70\u4e00\u6b65\uff0c\u5c31\u53ef\u4ee5\u7a7f\u8d8a\u5230 $ (i, 1) $\u3002\u6211\u4eec\u53ef\u4ee5\u518d\u8bb0\u72b6\u6001 $ f_{i,j} $ \u8868\u793a\u7b2c i \u884c\u5df2\u7ecf\u4ece $ (i, n) $ \u6a2a\u7740\u7a7f\u8d8a\u5230 $ (i, 1) $ \u4e4b\u540e\uff0c\u518d\u5f80\u53f3\u8d70\u5230 $ (i, j) $\uff0c\u7ecf\u8fc7\u7684\u70b9\u7684\u6743\u503c\u548c\u7684\u6700\u5927\u503c\u3002\n\n\u4e00\u5f00\u59cb\u5148\u9884\u5904\u7406\u51fa $ s_{i,j} $\uff0c\u8868\u793a\u7b2c $ i $ \u884c\uff0c\u524d $ j $ \u4e2a\u683c\u5b50\u7684\u6743\u503c\u548c\u3002\n\n```cpp\n\tfor (register int i = 1; i <= n; ++i)\n\t\tfor (register int j = 1; j <= n; ++j)\n\t\t\ts[i][j] = s[i][j - 1] + a[i][j];\n```\n\n\u8fd9\u662f\u7b2c\u4e00\u884c\u7684\u72b6\u6001\uff08\u7b2c\u4e00\u884c\u56e0\u4e3a\u4e0d\u80fd\u6a2a\u7740\u7a7f\u8d8a\uff0c\u6240\u4ee5 $ g $ \u5168\u662f\u96f6\uff09\u3002\n\n```cpp\n\tfor (register int i = 1; i <= n; ++i)\n\t\tf[1][i] = s[1][i];\n```\n\n\u901a\u8fc7\u5237\u8868\u6cd5\u6c42\u51fa\u5176\u4ed6\u7684\u72b6\u6001\u3002\n\n```cpp\n\tfor (register int i = 1; i < n; ++i)\n\t{\n\t\tfor (register int j = 1; j <= n; ++j)\n\t\t\tg[i + 1][j] = f[i][j] + s[i + 1][n] - s[i + 1][j - 1];\n\t\tfor (register int j = 1; j <= n; ++j)\n\t\t\tfor (register int k = j; k <= n; ++k)\n\t\t\t\tf[i + 1][k] = max(f[i + 1][k], f[i][j] + s[i + 1][k] - s[i + 1][j - 1]);\n\t\tfor (register int j = 1; j < n; ++j)\n\t\t\tfor (register int k = j + 1; k <= n; ++k)\n\t\t\t\tf[i + 1][j] = max(f[i + 1][j], s[i + 1][j] + g[i + 1][k]);\n\t}\n\n```\n\n\u4ee5\u4e0a\u6c42\u51fa\u7684 $ f_{n,n} $ \u8868\u793a\u7684\u662f\u53ea\u6a2a\u7740\u7a7f\u8d8a\uff0c\u5230\u8fbe $ (n, n) $ \u7684\u6240\u6709\u65b9\u6848\u4e2d\uff0c\u7ecf\u8fc7\u7684\u70b9\u7684\u6743\u503c\u548c\u7684\u6700\u5927\u503c\u3002\n\n\u7528\u540c\u6837\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u6c42\u51fa\u53ea\u7ad6\u7740\u7a7f\u8d8a\uff0c\u5230\u8fbe $ (n, n) $ \u7684\u6240\u6709\u65b9\u6848\u4e2d\uff0c\u7ecf\u8fc7\u7684\u70b9\u7684\u6743\u503c\u548c\u7684\u6700\u5927\u503c\uff0c\u4e24\u8005\u53d6 $ max $ \u5373\u4e3a\u6700\u7ec8\u7b54\u6848\u3002",
        "postTime": 1670243937,
        "uid": 187034,
        "name": "hanjinghao",
        "ccfLevel": 7,
        "title": "Torus Path \u9898\u89e3"
    }
]