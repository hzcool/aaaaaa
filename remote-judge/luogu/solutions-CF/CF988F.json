[
    {
        "content": "dp[i][j]\u8868\u793a\u5728\u7b2ci\u70b9\uff0c\u6709\u7b2cj\u628a\u4f1e\n\n\u51b3\u7b56\u5206\u4e09\u79cd\n\n1.\u6254\u6389\u4f1e \uff08\u8981\u6c42i\u70b9\u4e0d\u4e0b\u96e8\uff09\n\n2.\u6491\u4f1e\u524d\u8fdb\uff08\u8981\u6c42i-1\u70b9\u624b\u4e2d\u6709\u4f1e\uff09\n\n3.\u6362\u4f1e\uff08\u8981\u6c42i-1\u70b9\u6709\u96e8\u4f1e\u63d0\u4f9b\uff09\n\n\u968f\u4fbf\u8f6c\u79fb\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nconst int N=2005,INF=1e9;\nint A,n,m,rain[N],w[N],cho[N]; \ninline void init(){\n    scanf(\"%d%d%d\",&A,&n,&m);\n    for (int i=1;i<=n;i++){\n        int l,r; \n        scanf(\"%d%d\",&l,&r);\n        for (int j=l+1;j<=r;j++){\n            rain[j]=1;\n        }\n    }\n    w[0]=INF;\n    for (int i=1;i<=m;i++){\n        int p;\n        scanf(\"%d%d\",&p,&w[i]);\n        if (w[i]<w[cho[p]]){\n            cho[p]=i;\n        }\n    }\n}\nint dp[N][N];\ninline void solve(){\n    memset(dp[0],127/3,sizeof(dp[0]));\n    dp[0][0]=0;\n    for (int i=1;i<=A;i++){\n        memset(dp[i],127/3,sizeof(dp[i]));\n        for (int j=0;j<=m;j++){\n            if (!rain[i]){\n                dp[i][0]=min(dp[i][0],dp[i-1][j]);\n            }\n            if (j) {\n                dp[i][j]=min(dp[i][j],dp[i-1][j]+w[j]);\n            }\n            if (cho[i-1]){\n                dp[i][cho[i-1]]=min(dp[i][cho[i-1]],dp[i-1][j]+w[cho[i-1]]);\n            }\n        }\n    }\n    int ans=INF;\n    for (int i=0;i<=m;i++){\n        ans=min(ans,dp[A][i]);\n    }\n    if (ans==dp[0][1]) puts(\"-1\");\n        else printf(\"%d\\n\",ans);\n}\nint main(){\n    init();\n    solve();\n    return 0;\n} \n```",
        "postTime": 1533345514,
        "uid": 34444,
        "name": "\u5927\u83dc\u9e21fks",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF988F \u3010Rain and Umbrellas\u3011"
    },
    {
        "content": "\u9996\u5148\u5f88\u660e\u663e\u7684\u4e00\u4e2a\u5730\u65b9\u5c31\u662f:\u5728\u4efb\u610f\u65f6\u523b\u4eba\u53ea\u8981\u62ff\u4e00\u628a\u4f1e\u5c31\u884c\u4e86\n\n\u8003\u8651\u8bbedp[i][j]\u8868\u793a\u5728\u7b2ci\u4e2a\u70b9\u62ff\u7740\u7b2cj\u628a\u4f1e\u6240\u4ed8\u51fa\u6700\u5c0f\u4ee3\u4ef7(j=0\u65f6\u4ee3\u8868\u4e0d\u62ff\u4f1e)\n\n\u518d\u8ba9r[i]\u8868\u793a:r[i]=1,\u7b2ci-1\u4e2a\u70b9\u5230\u7b2ci\u4e2a\u70b9\u4e4b\u95f4\u4e0b\u96e8\uff0c\u5426\u5219\u4e0d\u4e0b\u96e8\n\n\u6ce8\u610f\u4e00\u4e2a\u5730\u65b9\u53ef\u80fd\u6709\u591a\u628a\u4f1e\n\n\u5177\u4f53\u8f6c\u79fb\u65b9\u7a0b\u89c1\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define inf 0x3f3f3f3f\n#define ll long long\n#define ull unsigned long long\nusing namespace std;\ninline int read(){\n    int x=0,f=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\nconst int N=2005;\nint dp[N][N],r[N],u[N],p[N];\nint main(){\n\tint a=read(),n=read(),m=read();\n\tfor(int i=1;i<=n;i++){\n\t\tint L=read(),R=read();\n\t\tfor(int j=L+1;j<=R;j++) r[j]=1;\n\t}\n\tp[0]=1e9;\n\tfor(int i=1;i<=m;i++){\n\t\tint x=read();p[i]=read();\n\t\tif(p[i]<p[u[x]]) u[x]=i;\n\t}\n\tmemset(dp,0x3f,sizeof(dp));\n\tdp[0][0]=dp[0][u[0]]=0;\n\tint mn1=inf,mn2=inf;\n\tif(u[0]!=0) mn1=0,mn2=p[u[0]];\n\tfor(int i=1;i<=a;i++){\n\t\tif(r[i]==0)\n\t\t\tdp[i][0]=min(dp[i][0],min(dp[i-1][0],mn1));\n\t\telse if(r[i+1]==0)\n\t\t\tdp[i][0]=min(dp[i][0],mn2);\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tdp[i][j]=min(dp[i][j],dp[i-1][j]+p[j]);\n\t\t\tif(u[i]==j){\n\t\t\t\tif(r[i]==0) dp[i][j]=min(dp[i][j],min(dp[i-1][0],mn1));\n\t\t\t\telse dp[i][j]=min(dp[i][j],mn2);\n\t\t\t}\n\t\t} \n\t\tmn1=mn2=inf;\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tif(mn1>dp[i][j]) mn1=dp[i][j];\n\t\t\tif(mn2>dp[i][j]+p[j]) mn2=dp[i][j]+p[j];\n\t\t}\n\t}\n\tint ans=inf;\n\tfor(int j=0;j<=m;j++) ans=min(ans,dp[a][j]);\n\tif(ans==inf) cout<<-1;\n\telse cout<<ans;\n}\n\n```",
        "postTime": 1528441283,
        "uid": 38096,
        "name": "Position",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF988F \u3010Rain and Umbrellas\u3011"
    },
    {
        "content": "### \u9898\u610f\n\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a $a$ \u7684\u533a\u95f4\uff0c\u7ed9\u5b9a $n$ \u4e2a\u6709\u96e8\u7684\u533a\u95f4\u548c $m$ \u628a\u4f1e\u7684\u4f4d\u7f6e\u4e0e\u91cd\u91cf\uff0c\u6bcf\u6b21\u53ef\u4ee5\u5411\u53f3\u79fb\u52a8\u4e00\u4e2a\u5355\u4f4d\uff0c\u4ee3\u4ef7\u662f\u643a\u5e26\u4f1e\u7684\u603b\u91cd\u91cf\u3002\u5728\u7ecf\u8fc7\u6709\u96e8\u7684\u5355\u4f4d\u65f6\uff08**\u6ce8\u610f\u662f\u8fb9\u800c\u4e0d\u662f\u70b9\uff0c\u56e0\u6b64\u533a\u95f4\u4e24\u7aef\u4e0d\u7b97**\uff09\uff0c\u5fc5\u987b\u643a\u5e26\u4f1e\u624d\u80fd\u901a\u8fc7\u3002\u6c42\u6700\u5c0f\u7684\u901a\u8fc7\u533a\u95f4\u7684\u4ee3\u4ef7\u4e4b\u548c\u3002\n\n\n### \u5206\u6790\n\u4e3a\u4e86\u80fd\u66f4\u6e05\u695a\u7684\u8868\u73b0\u51fa\u5f53\u524d\u7684\u5c40\u9762\uff0c\u56e0\u6b64\u4e0d\u59a8\u8003\u8651\u72b6\u6001\u4e3a $i,j,v$ \u5206\u522b\u8868\u793a\u524d $i$ \u4e2a\u5355\u4f4d\u7528\u5230\u4e86\u7b2c $j$ \u628a\u4f1e\u6700\u5c0f\u82b1\u8d39\u7684\u4ee3\u4ef7 $v$\uff0c\u7ed3\u679c\u662f $i=x$ \u65f6\u7684\u4efb\u4f55\u5408\u6cd5\u72b6\u6001\u3002\u5f53\u72b6\u6001\u8f6c\u79fb\u4e0d\u5230\u7ed3\u679c\u65f6\uff0c\u5219\u8f93\u51fa ```-1```\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u6709\u4e09\u79cd\u64cd\u4f5c\uff1a\u6361\u4f1e\u3001\u4e22\u4f1e\u3001\u6362\u4f1e\u3002\u6bcf\u4e2a\u72b6\u6001\u53ef\u4ee5\u5206\u4e24\u6b21\u8f6c\u79fb\uff0c\u5206\u522b\u662f:\uff08$k$ \u662f\u5f53\u524d\u4f4d\u7f6e\u62e5\u6709\u7684\u4f1e\uff0c$k$ \u7b49\u4e8e\u96f6\u8868\u793a\u6ca1\u4f1e\uff0c$k$ \u7b49\u4e8e $j$ \u8868\u793a\u4e0d\u53d8\uff0c$0 \\le i \\le a$\uff0c$0 \\le$ \u5f53\u524d\u4f4d\u7f6e\u4f1e\u7684\u6570\u91cf\uff0c$w_i$ \u8868\u793a\u7b2c $i$ \u4e2a\u4f1e\u7684\u91cd\u91cf\u3002\uff09\n$$i,j,v \\rightarrow i,k,v$$\n$$i,k,v \\rightarrow i+1,k,v+w_k$$\n\u7b2c\u4e00\u4e2a\u8f6c\u79fb\u662f\u5c06\u5f53\u524d\u4f1e\u6362\u6210\u5f53\u524d\u4f4d\u7f6e\u7684\u5176\u4ed6\u4f1e\uff0c\u7b2c\u4e8c\u4e2a\u8f6c\u79fb\u662f\u5411\u53f3\u8d70\u4e00\u4e2a\u5355\u4f4d\u3002\n\n\u7b54\u6848\u5c31\u662f\u4ece $0,0,0$ \u5230 $a,j,v$ \u82b1\u8d39\u6700\u5c0f\u4ee3\u4ef7\u7684\u4e00\u6761\u8def\u5f84\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u76f8\u540c\u7684 $i,j,v$\uff0c\u5b83\u4eec\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5b8c\u5168\u76f8\u540c\uff0c\u53ea\u6709\u9009\u62e9\u7684\u65b9\u6848\u4e0d\u540c\uff0c\u56e0\u6b64\u53ef\u4ee5\u53ea\u4fdd\u7559\u4e00\u4e2a\u3002\n\n\u5bf9\u4e8e\u7b54\u6848\u6765\u8bf4\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u77e5\u9053\u5b83\u6bcf\u6b21\u9009\u62e9\u7684\u65b9\u6848\uff0c\u53ea\u9700\u8981\u77e5\u9053\u5b83\u7684\u4ee3\u4ef7\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u4fdd\u7559\u5355\u4e2a\u72b6\u6001 $i,j,v$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6:$\\mathit{O}(am^2)$\u3002\n\n\n### \u601d\u8def\n\u63a5\u4e0b\u6765\u5c31\u662f\u8003\u8651\u4f18\u5316\u4e00\u4e0b\u72b6\u6001\u4e86\uff0c\u8003\u8651\u72b6\u6001\u5206\u7ec4\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $i,j$\uff0c\u53ea\u8981\u5b83\u7684\u72b6\u6001\u6700\u4f18\uff0c\u90a3\u4e48\u5b83\u4f5c\u6700\u4f18\u7684\u8f6c\u79fb\u4e4b\u540e\u5c31\u4e0d\u4f1a\u6bd4\u5176\u4ed6\u72b6\u6001\u66f4\u52a3\u3002\u56e0\u6b64\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06 $i,j$ \u5206\u5728\u4e00\u8d77\uff0c$v$ \u4f5c\u4e3a\u9644\u5e26\u5c5e\u6027\u3002\u5bf9\u4e8e\u6bcf\u4e2a $i,j$ \u76f8\u7b49\u7684\u72b6\u6001\uff0c\u53ea\u9700\u8981\u4fdd\u7559 $v$ \u6700\u4f18\u7684\u90a3\u4e2a\u5c31\u884c\u4e86\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u6bcf\u6b21\u8f6c\u79fb\u53ea\u9700\u8981\u4f5c\u6700\u4f18\u7684\u5c31\u884c\u4e86\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5c31\u53ef\u4ee5\u8003\u8651\u526a\u679d\uff0c\u6bcf\u6b21\u5f53\u5f53\u524d\u72b6\u6001\u66f4\u4f18\u65f6\uff0c\u5219\u66f4\u65b0\u6700\u4f18\u503c\uff0c\u5426\u5219\u653e\u5f03\u3002\n\n\u867d\u7136\u53ef\u4ee5\u4f18\u5316\u4ee3\u7801\u65f6\u95f4\uff0c\u4f46\u662f\u5e76\u4e0d\u4f1a\u6539\u53d8\u5b83\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u5f53\u503c\u662f\u6309\u7167\u4ece\u52a3\u5230\u4f18\u6392\u5e8f\u65f6\uff0c\u5219\u65f6\u95f4\u590d\u6742\u5ea6\u4f9d\u65e7\u662f\uff1a$\\mathit{O}(am^2)$\u3002\n\n\n\u72b6\u6001\u4f18\u5316\u5b8c\u4e86\uff0c\u5c31\u53ef\u4ee5\u4f18\u5316\u8f6c\u79fb\u4e86\u3002\u5b9e\u9645\u4e0a\uff0c\u6bcf\u6b21\u8f6c\u79fb\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\uff1a$\\mathit{O}(m)$\uff0c\u800c\u72b6\u6001\u7684\u6570\u91cf\u53c8\u662f\uff1a$\\mathit{O}(am)$\u3002\u56e0\u6b64\u53ea\u80fd\u5c06\u8f6c\u79fb\u4f18\u5316\u5230\uff1a$\\mathit{O}(1)$\u3002\n\n\u6309\u7167\u4f18\u5316\u72b6\u6001\u7684\u601d\u8def\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4fdd\u7559\u6700\u4f18\u7684\u8f6c\u79fb\u5c31\u884c\u4e86\u3002\u6362\u8a00\u4e4b\uff0c\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u6709\u591a\u628a\u4f1e\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8f6c\u79fb\u5230\u91cd\u91cf\u6700\u5c0f\u7684\u90a3\u628a\u5c31\u884c\u4e86\uff0c\u56e0\u4e3a\u6700\u4f18\u7684\u72b6\u6001\u4f5c\u6700\u4f18\u7684\u8f6c\u79fb\uff0c\u4e00\u5b9a\u4e0d\u4f1a\u8f6c\u79fb\u5230\u6bd4\u5b83\u66f4\u52a3\u7684\u72b6\u6001\u4e0a\uff0c\u6240\u4ee5\u4f18\u5316\u662f\u6b63\u786e\u7684\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$\\mathit{O}(am)$\n\n\n### \u5ef6\u4f38\n\u81f3\u6b64\uff0c\u6211\u4f9d\u65e7\u6ca1\u6709\u8bb2\u52a8\u6001\u89c4\u5212\uff0c\u56e0\u4e3a\u4ece\u8fd9\u4e2a\u72b6\u6001\u56fe\u4e2d\uff0c$i$ \u867d\u7136\u5177\u6709\u62d3\u6251\u5e8f\uff0c\u4f46\u662f $j$ \u6ca1\u6709\u3002\u56e0\u4e3a\u540c\u4e00\u4f4d\u7f6e\u4e0a\u7684\u4efb\u610f\u4e24\u628a\u4f1e\u90fd\u53ef\u4ee5\u4e92\u6362\uff0c\u8fd9\u6837\u663e\u7136\u4e0d\u5177\u6709\u62d3\u6251\u5e8f\u3002\u4f46\u662f\u6839\u636e\u641c\u7d22\u7684\u89e3\u51b3\u601d\u8def\uff1a**\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u76f8\u540c\u7684 $i,j,v$\uff0c\u5b83\u4eec\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5b8c\u5168\u76f8\u540c\uff0c\u53ea\u6709\u9009\u62e9\u7684\u65b9\u6848\u4e0d\u540c\uff0c\u56e0\u6b64\u53ef\u4ee5\u53ea\u4fdd\u7559\u4e00\u4e2a**\uff0c\u518d\u52a0\u4e0a**\u540c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u65e0\u8bba\u6362\u591a\u5c11\u6b21\u4f1e\uff0c\u90fd\u4e0d\u4f1a\u589e\u52a0\u4ee3\u4ef7**\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u6362\u4e00\u6b21\u4f1e\u5c31\u884c\u4e86\u3002\u8fd9\u6837\u7684\u8bdd $j$ \u5c31\u975e\u5e38\u795e\u5947\u7684\u53d8\u5f97\u6709\u62d3\u6251\u5e8f\u4e86\u3002\n\n\u4e0a\u8ff0\u601d\u8def\u5982\u679c\u6ca1\u7406\u89e3\uff0c\u53ef\u4ee5\u60f3\u8c61\u6210\u5c06\u62d3\u6251\u5e8f\u62c9\u4f38\u51fa\u6765\u4e86\uff1a\u5c06 $j$ \u8fd9\u4e00\u7ef4\u770b\u6210\u6362\u4e4b\u524d\u4e0e\u6362\u4e4b\u540e\u3002\u6bcf\u6b21 $i,j,v$ \u53ef\u4ee5\u8f6c\u79fb\u6210 $i,k,v$\uff08$k$ \u8868\u793a\u5f53\u524d\u4f4d\u7f6e\u62e5\u6709\u4f1e\u7684\u6570\u91cf\uff09\u3002\n\n\u518d\u6839\u636e\u641c\u7d22\u4f18\u5316\u8f6c\u79fb\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5c06\u6ca1\u6709\u4f1e\u7684\u4f4d\u7f6e\u8bbe\u4e3a\u5f53\u524d\u4f4d\u7f6e\u6700\u4f18\u7684\u72b6\u6001\uff0c\u5728\u7531\u6ca1\u6709\u4f1e\u7684\u4f4d\u7f6e\u53bb\u66f4\u65b0\u5f53\u524d\u4f4d\u7f6e\u6240\u62e5\u6709\u7684\u4f1e\u3002\u5982\u679c\u5f53\u524d\u4f4d\u7f6e\u4e0b\u96e8\uff0c\u90a3\u4e48\u5c31\u5c06\u6ca1\u6709\u4f1e\u7684\u72b6\u6001\u8bbe\u4e3a\u4e00\u4e2a\u6781\u52a3\u503c\u3002\n\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$$1 \\leq i \\leq a$$\n$$1 \\leq j \\leq m$$\n$$dp_{i,0}=\\min(dp_{i,j},dp_{i,0})$$\n$$dp_{i,j}=\\min(dp_{i,j},dp_{i,0})$$\n$$dp_{i+1,j}=\\min(dp_{i+1,j},dp_{i,j}+w_j)$$\n\n\n### \u4ee3\u7801\n```cpp\n// \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b \uff1a(1 <= i <= x) (1 <= j <= m) dp[i][0]=min(dp[i][j],dp[i][0])  dp[i][j]=min(dp[i][j],dp[i][0]) dp[i+1][j] = min(dp[i+1][j], dp[i][j] + a[j].second)\n#include <iostream>\nusing namespace std;\nusing LL = long long;\nconst LL MAXN = 2005;\nLL x, n, m, dp[MAXN][MAXN], ans = INT_MAX;\nbool vis[MAXN];\npair<LL, LL> a[MAXN];\nsigned main() {\n  ios::sync_with_stdio(0);\n  cin >> x >> n >> m;\n  fill(dp[0], dp[x] + m + 1, INT_MAX);\n  dp[0][0] = 0;\n  for (LL i = 1, l, r; i <= n; i++) {\n    cin >> l >> r;\n    fill(vis + l, vis + r, 1);//\u6807\u8bb0\u4e0b\u96e8\n  }\n  for (LL i = 1; i <= m; i++) {\n    cin >> a[i].first >> a[i].second;\n  }\n  for (LL i = 0; i <= x; i++) {\n    for (LL j = 1; j <= m; j++) {\n      dp[i][0] = min(dp[i][0], dp[i][j]);//\u66f4\u65b0\u6700\u4f18\n    }\n    for (LL j = 0; j <= m; j++) {\n      a[j].first == i && (dp[i][j] = min(dp[i][j], dp[i][0]));//\u66f4\u65b0\u5f53\u524d\u4f4d\u7f6e\u7684\u6240\u6709\u72b6\u6001\n      dp[i + 1][j] = min(dp[i + 1][j], (!j && vis[i] ? INT_MAX : dp[i][j] + a[j].second));//\u5411\u53f3\u8d70\u4e00\u6b65\n      i == x && (ans = min(ans, dp[i][j]));//\u66f4\u65b0\u6700\u7ec8\u7b54\u6848\n    }\n    vis[i] && (dp[i][0] = INT_MAX);//\u6807\u4e3a\u4e0d\u5408\u6cd5\n  }\n  cout << (ans == INT_MAX ? -1 : ans);\n  return 0;\n}\n```\n",
        "postTime": 1679994134,
        "uid": 713285,
        "name": "guanyf",
        "ccfLevel": 3,
        "title": "Rain and Umbrellas  \u9898\u89e3"
    }
]