[
    {
        "content": "## \u95f2\u8bdd\n~~\u8fd9\u9053\u9898\u6df1\u523b\u5730\u6559\u4f1a\u4e86\u6211\u4ec0\u4e48\u53eb\u505a\u7801\u9898\u4e94\u5206\u949f\uff0c\u8c03\u9898\u4e24\u5c0f\u65f6\u3002~~\n\n\u6253 VP \u65f6\u6ca1\u6709\u592a\u591a\u7684\u770b\u9898\uff0c\u76f4\u63a5\u6253\u4e86\u4e2a\u72b6\u538b\uff0c\u540e\u9762\u770b\u5230\u7b2c\u4e00\u4e2a\u6837\u4f8b\u7684 test case 2 \u624d\u53d1\u73b0\u539f\u6765\u4e0d\u540c\u7684\u4eba\u53ef\u4ee5\u4f4f\u5728\u4e00\u4e2a\u5730\u65b9\uff0c\u7136\u540e\u5c31\u8003\u8651\u4e86 01 \u80cc\u5305\uff0c\u7ed3\u679c\u5fd8\u8bb0\u8981\u5012\u5e8f\u679a\u4e3e\u4e86\uff0c\u8c03\u4e86\u4e00\u4e0b\u5348\u3002\n\n## Solution\n\u770b\u5230 $k$ \u7684\u6570\u636e\u8303\u56f4\uff0c\u5f88\u72b6\u538b\u7684\u4e9a\u5b50\uff0c\u8bbe $f_{i,j}$ \u4e3a\u5728\u7b2c $i$ \u4e2a\u70b9\u7684\u65f6\u5019\uff0c\u670b\u53cb\u642d\u987a\u98ce\u8f66\u7684\u72b6\u6001\u4e3a $j$ \u65f6\uff0c\u662f\u5426\u53ef\u4ee5\u6ee1\u8db3\uff0c\u6240\u4ee5\u6570\u7ec4\u53ef\u4ee5\u4e3a bool \u7c7b\u578b\u3002\u4e3b\u8981\u8003\u8651\u600e\u4e48\u8f6c\u79fb\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fb9\u6743\u4e3a 1\uff0c\u5728\u7528 bfs \u6c42\u89e3\u6700\u77ed\u8def\u5f84\u65f6\uff0cbfs \u641c\u7d22\u6811\u7684\u6df1\u5ea6\u5c31\u7b49\u4e8e\u6700\u77ed\u8def\u5f84\uff0c\u6240\u4ee5\u5f53\u7b2c\u4e00\u6b21\u641c\u5230\u8be5\u70b9\u65f6\uff0c\u5c31\u4e00\u5b9a\u662f\u6700\u77ed\u8def\u5f84\uff0c\u6240\u4ee5\u5728\u8fd9\u4e2a\u5730\u65b9\u53ef\u4ee5\u76f4\u63a5\u8f6c\u79fb\uff0c\u5982\u679c\u8be5\u70b9\u4e3a\u6ca1\u8f66\u670b\u53cb\u7684\u5bb6\uff0c\u5c31\u53ef\u4ee5\u628a\u4ed6\u6dfb\u52a0\u8fdb\u72b6\u6001\u3002\n\n\u9898\u76ee\u95ee\u7684\u662f\u6709\u8f66\u670b\u53cb\u53ef\u4ee5\u642d\u7684\u4eba\u6570\uff0c\u800c\u4e0d\u662f\u6bcf\u4e00\u4e2a\u70b9\uff0c\u6240\u4ee5\u518d\u6765\u4e00\u6b21\u72b6\u538b\uff0c\u7edf\u8ba1\u7b54\u6848\uff0c\u53ef\u4ee5\u91c7\u53d6 01 \u80cc\u5305\u7684\u65b9\u5f0f\u3002\n\n## Detail\n1. \u56e0\u4e3a\u56fe\u4e2d\u70b9\u53ef\u80fd\u6709\u591a\u4e2a\u6700\u77ed\u8def\u5f84\uff0c\u6240\u4ee5\u8981\u6539\u52a8\u4e00\u4e0b\u666e\u901a\u7684 bfs\uff0c\u770b\u6b64\u5904\u4ee3\u7801\u3002\n```cpp\n    while(!q.empty()){\n        int now=q.front();q.pop();\n        for(int i=head[now];i;i=edge[i].next){\n            int v=edge[i].to;\n            if(dis[now]+1<=dis[v]){\n                for(int j=0;j<(1<<k);j++)f[v][j]|=f[now][j],f[v][j|bit[v]]|=f[now][j];\n                if(dis[now]+1<dis[v])q.push(v);\n                dis[v]=dis[now]+1;\n            }\n        }\n    }\n```\n2. 01 \u80cc\u5305\u8981\u5012\u5e8f\u679a\u4e3e\u3002\n```cpp\n    for(int i=1;i<=fl;i++){\n        if(vis[i])continue;\n        for(int j=(1<<k);j>=0;j--)\n            for(int l=0;l<(1<<k);l++)\n                if(f[pos[i]][l])ff[j|l]|=ff[j];\n    }\n```\n3. \u591a\u7ec4\u6d4b\u8bd5\uff0c\u4e00\u5b9a\u8981\u6e05\u7a7a\u3002\n\n\u6700\u540e\u8d34\u4e0a\u4ee3\u7801\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e4+100;\nint t,n,m,fl,k,pos[N],head[N],dis[N],max_,tot,c,bit[N],nocar;\nbool f[N][1<<7],vis[N],ff[1<<7];\nstruct xzh{\n    int next,to;\n}edge[2*N];\nvoid add(int u,int v){\n    c++;\n    edge[c].next=head[u];\n    edge[c].to=v;\n    head[u]=c;\n}\nvoid bfs(){\n    f[1][0]=true;\n    for(int i=1;i<=n;i++)dis[i]=1e9;\n    queue<int>q;\n    q.push(1);\n    dis[1]=0;\n    while(!q.empty()){\n        int now=q.front();q.pop();\n        for(int i=head[now];i;i=edge[i].next){\n            int v=edge[i].to;\n            if(dis[now]+1<=dis[v]){\n                for(int j=0;j<(1<<k);j++)f[v][j]|=f[now][j],f[v][j|bit[v]]|=f[now][j];\n                if(dis[now]+1<dis[v])q.push(v);\n                dis[v]=dis[now]+1;\n            }\n        }\n    }\n}\nvoid solve(){\n    max_=0;c=0;\n    memset(f,false,sizeof(f));\n    memset(ff,false,sizeof(ff));\n    memset(vis,false,sizeof(vis));\n    memset(bit,0,sizeof(bit));\n    memset(head,0,sizeof(head));\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++){\n        int u,v;\n        scanf(\"%d%d\",&u,&v);\n        add(u,v);add(v,u);\n    }\n    scanf(\"%d\",&fl);\n    for(int i=1;i<=fl;i++)scanf(\"%d\",&pos[i]);\n    scanf(\"%d\",&k);\n    for(int i=1;i<=k;i++)scanf(\"%d\",&nocar),vis[nocar]=true,bit[pos[nocar]]|=(1<<(i-1));\n    bfs();\n    ff[0]=true;\n    for(int i=1;i<=fl;i++){\n        if(vis[i])continue;\n        for(int j=(1<<k);j>=0;j--)\n            for(int l=0;l<(1<<k);l++)\n                if(f[pos[i]][l])ff[j|l]|=ff[j];\n    }\n    for(int i=0;i<(1<<k);i++){\n        if(ff[i]){\n            int cnt=0;\n            for(int j=0;j<k;j++)if(i&(1<<j))cnt++;\n            max_=max(max_,cnt);\n        }\n    }\n    printf(\"%d\\n\",k-max_);\n}\nint main(){\n    scanf(\"%d\",&t);\n    while(t--)solve();\n    return 0;\n}\n```\n",
        "postTime": 1668344778,
        "uid": 327295,
        "name": "GalwayGirl",
        "ccfLevel": 6,
        "title": "CF1741G  01\u80cc\u5305\u72b6\u538b"
    },
    {
        "content": "### \u9898\u610f\n\u7ed9\u4e00\u4e2a\u65e0\u5411\u8fde\u901a\u56fe\uff0c\u6709 $f$ \u4e2a\u670b\u53cb\u5728\u8282\u70b91\uff0c\u6bcf\u4e2a\u4eba\u7684\u5bb6\u5728 $h_i$ \uff0c\u5176\u4e2d\u6709   $k(k \\leq 6)$ \u4e2a\u670b\u53cb\u6ca1\u6709\u8f66\uff0c\u6709\u8f66\u7684\u670b\u53cb\u53ef\u4ee5\u5f00\u8f66\u8f7d\u4efb\u610f\u6570\u91cf\u7684\u6ee1\u8db3**\u6761\u4ef6**\u7684\u65e0\u8f66\u670b\u53cb\u56de\u5bb6\u3002\u95ee\u6700\u540e\u65e0\u6cd5\u88ab\u5f00\u8f66\u9001\u56de\u7684\u670b\u53cb\u7684\u6700\u5c0f\u6570\u91cf\u3002\n\n**\u6761\u4ef6**\uff1a\u5bf9\u4e8e\u8fd9\u4e2a\u4eba\uff0c\u4ed6\u7684\u5bb6\u5728\u6709\u8f66\u670b\u53cb\u56de\u5bb6\u7684\u6700\u77ed\u8def\u4e0a\u7684\uff08\u5176\u5b9e\u5c31\u662f\u987a\u8def\uff09\uff0c\u5219\u79f0\u6ee1\u8db3**\u6761\u4ef6**\n\n### \u601d\u8def\n\n$k$ \u7684\u6570\u91cf\u5f88\u5c0f\uff0c\u53ef\u4ee5\u8003\u8651\u5c06\u670b\u53cb\u9001\u5230\u6bcf\u4e2a\u8282\u70b9\u7684\u72b6\u6001\u538b\u5165 $k$ \u4e2a bit \u4f4d\u4e2d\u3002\u7136\u540e\u95ee\u9898\u5c31\u53d8\u6210\u5bf9\u6709\u8f66\u670b\u53cb\u6700\u5927\u5316\u53ef\u884c\u65b9\u6848\u7684 bit \u4f4d\u4e2d $1$ \u7684\u4e2a\u6570\u3002\u8fd9\u4e2a\u505a\u4e00\u4e2a\u53ef\u884c\u6027dp\u3002\n\n\n#### \u4ee3\u7801(\u9a6c\u8702\u5de8\u4e11)\n\n```cpp\n#include<bits/stdc++.h>\n#define inf 0x3f3f3f3f\n#define linf 0x3f3f3f3f3f3f3f3fll\n#define endl '\\n'\n#define ll long long\n#define SZ(x) (int)x.size()\n#define rep(i,a,n) for(int i = (a);i <= (n);i++)\n#define dec(i,n,a) for(int i = (n);i >= (a);i--)\nusing namespace std;\nusing PII = pair<int, int>;\nmt19937 mrand(random_device{}());\nint rnd(int x) { return mrand() % x;}\nconst int N =10 + 2e5 ,mod=1e9 + 7;\n/* \n    \u8054\u901a\u65e0\u5411\u56fe\uff0c \u8d77\u70b91\uff0c\u670b\u53cb\u90fd\u57281\uff0c\u7b2ci\u4e2a\u670b\u53cb\u8981\u53bbh_i\n    k <= 6 no car \u3002\u6709\u8f66\u7684\u670b\u53cb\u53ef\u4ee5\u8ba9\u4ed6\u4eec\u642d\u4fbf\u8f66\uff0c\u4f46\u53ea\u80fd\u6cbf\u7740\u6700\u77ed\u8def\u8d70\n    \u8f93\u51fa\u6700\u5c0f\u8d70\u8def\u7684\u670b\u53cb\n    \u6700\u591an\u65b9\u7684\u53ef\u80fd\u72b6\u6001\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u6709\u8f66f\u8003\u8651\uff0c\u4f7f\u5f97\u6216\u503c\u6700\u5927\n    f[i][mask] |= f[i - 1][j] if(can find t | j == mask)\n    \n */\nvoid solve()\n{    \n    int n, m; cin >> n >> m;\n    vector<vector<int>> adj(n + 1);\n    rep(i, 1, m) {\n        int u, v; cin >> u >> v;\n        adj[u].emplace_back(v);\n        adj[v].emplace_back(u);\n    }    \n    int fn; cin >> fn;\n    vector<int> h(fn + 1);\n    rep(i, 1, fn) cin >> h[i];\n    int k; cin >> k;\n    vector<int> p(k + 1);\n    rep(i, 1, k) cin >> p[i];\n    \n    vector<int> state[n + 1];\n    vector<vector<bool>> ex(n + 1, vector<bool>(1 << k));\n    {\n        queue<PII> q; q.push({1, 0});\n        vector<bool> st(n + 1); \n        vector<int> dis(n + 1, -1); dis[1] = 0;\n        state[1].push_back(0);\n        ex[1][0] = 1;\n\n        auto chk = [&](int x) {\n            int ans = 0;\n            rep(i, 1, k) if(x == h[p[i]]) ans |= (1 << (i - 1));\n            return ans;\n        };\n        while(!q.empty()) {\n            auto [u, fa] = q.front(); q.pop();\n            if(~fa and dis[fa] + 1 == dis[u]) {\n                int where = chk(u);\n                for(auto x : state[fa]) if(!ex[u][where | x])\n                    state[u].push_back(where | x), ex[u][where | x] = 1;\n            }\n            if(st[u]) continue;\n            st[u] = 1;\n            for(int v : adj[u]) if(v != fa) {\n                if(dis[v] == -1) dis[v] = dis[u] + 1;\n                q.push({v, u});\n            }\n        }\n    }\n    int ans = 0;\n    {\n        // f[i][mask] |= f[i - 1][j] if(can find t | j == mask)\n        vector<vector<int>> f(fn - k + 1, vector<int>(1 << k, 0));\n        f[0][0] = 1;\n        int cur = 1;\n        rep(i, 1, fn) {\n            bool jump = 0;\n            rep(j, 1, k) if(p[j] == i) jump = 1;\n            if(jump) continue;\n\n            rep(mask, 0, (1 << k) - 1) {\n                for(auto t : state[h[i]]) {\n                    rep(j, 0, (1 << k) - 1) if(mask == (t | j)) {\n                        f[cur][mask] |= f[cur - 1][j];\n                    }\n                }\n            }\n            cur ++;\n        }\n        rep(mask, 0, (1 << k) - 1) if(f[fn - k][mask]) \n            ans = max(ans, __builtin_popcount(mask));\n    }\n    cout << k - ans << endl;\n\n}\nsigned main()\n{\n    ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n\n    int T;cin>>T;\n    while(T--)\n        solve();\n\n    return 0;\n}\n```",
        "postTime": 1665978152,
        "uid": 632955,
        "name": "MnZn",
        "ccfLevel": 4,
        "title": "CF1741G(\u72b6\u6001\u538b\u7f29)"
    },
    {
        "content": "\u8fd9\u9898\u601d\u8def\u633a\u597d\u60f3\u7684\uff0c\u5c31\u662f\u6709\u5f88\u591a\u7ec6\u8282\u3002\n\n## \u601d\u8def\n\n\u9996\u5148\uff0c\u6ce8\u610f\u5230 $k$ \u6bd4\u8f83\u5c0f\uff0c\u53ef\u4ee5\u60f3\u5230\u72b6\u538b\u3002\n\n\u8bbe $go_{i,j}$ \u8868\u793a\u7b2c $i$ \u4e2a\u70b9\u5904\u7684\u4efb\u610f\u4e00\u4e2a\u5e26\u8f66\u7684\u4eba\u662f\u5426\u80fd\u5e26\u72b6\u6001\u4e3a $j$\uff08\u6ca1\u5e26\u8f66\u7684\u4eba\uff09\u7684\u4e00\u4e9b\u4eba\u3002\n\n\u5728 bfs \u4e0a\u8f6c\u79fb\u3002\u4e00\u4e2a\u70b9\u53ef\u4ee5\u4ece\u6240\u6709\u5b83\u7684\u6700\u77ed\u8def\u5f84\u6765\u6e90\u70b9\u8fc7\u6765\uff0c\u4e5f\u5c31\u662f\u8bf4\u6700\u77ed\u8def\u5f84\u6765\u6e90\u70b9\u53ef\u4ee5\u5e26\u7684\u4e00\u4e9b\u4eba\u8fd9\u4e2a\u70b9\u4e5f\u53ef\u4ee5\u5e26\u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u8f6c\u79fb\u4e86\u3002\u9996\u5148\u679a\u4e3e\u8f6c\u79fb\u70b9\uff0c\u7136\u540e\u679a\u4e3e\u72b6\u6001 $S$\uff0c\u6b64\u65f6\u5982\u679c\u8f6c\u79fb\u70b9\u53ef\u4ee5\u5e26\u8fd9\u4e2a\u72b6\u6001\uff0c\u90a3\u4e48\u5f53\u524d\u70b9\u4e5f\u53ef\u4ee5\u5e26\u8fd9\u4e2a\u72b6\u6001\u3002\u4f46\u662f\u5f53\u524d\u70b9\u4e5f\u53ef\u4ee5\u5e26\u5f53\u524d\u70b9\u6ca1\u6709\u5e26\u8f66\u7684\u4eba\uff0c\u6240\u4ee5\u679a\u4e3e\u4e00\u4e0b\u5f53\u524d\u70b9\u6ca1\u6709\u5e26\u8f66\u7684\u4eba\u5e26\u54ea\u4e00\u4e9b\uff08\u518d\u6b21\u679a\u4e3e\u72b6\u6001\uff09\uff0c\u7136\u540e\u5c06 $S$ \u51cf\u53bb\u8fd9\u4e9b\u70b9\u8f6c\u79fb\u5373\u53ef\u3002\n\n\u9700\u8981\u6ce8\u610f\u4e00\u70b9\uff1a\u4e00\u4e2a\u70b9\u80fd\u5e26\u4e00\u4e2a\u72b6\u6001 $S$\uff0c\u4e5f\u80fd\u5e26\u53e6\u4e00\u4e2a\u72b6\u6001 $T$\uff0c\u4f46\u4e0d\u4e00\u5b9a\u90fd\u80fd\u5e26\u3002\u6240\u4ee5\u6700\u540e\u6c42\u7b54\u6848\u7684\u65f6\u5019\u4e0d\u80fd\u628a\u6bcf\u4e00\u4e2a\u70b9\u90fd\u5408\u5e76\u8d77\u6765\uff0c\u800c\u662f\u518d\u6b21\u7528\u72b6\u538b dp \u6c42\u3002\u8bbe $dp_{i,j}$ \u8868\u793a\u524d $i$ \u4e2a\u4eba\u662f\u5426\u80fd\u5e26\u72b6\u6001\u4e3a $j$ \u7684\u4eba\u3002\u6b64\u65f6 $i$ \u8fd9\u4e2a\u4eba\u5fc5\u987b\u5e26\u8f66\u3002\u627e\u5230\u4e0a\u4e00\u6b21\u80fd\u5e26\u8f66\u7684\u4eba $k$\uff0c\u679a\u4e3e $i$ \u8fd9\u4e2a\u4eba\u5e26\u54ea\u4e00\u4e9b\u4eba\uff08\u679a\u4e3e $j$ \u7684\u5b50\u96c6\u964d\u4f4e\u590d\u6742\u5ea6\uff09\uff08\u53ef\u4ee5\u901a\u8fc7 $i$ \u6240\u5728\u7684\u70b9\u7684 $go$ \u503c\u5224\u65ad\uff09\uff0c\u7136\u540e\u8f6c\u79fb\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6\uff1abfs \u90e8\u5206\u867d\u7136\u8981\u679a\u4e3e\u5f53\u524d\u70b9\u6ca1\u5e26\u8f66\u7684\u4eba\u7684\u72b6\u6001\uff0c\u4f46\u662f\u603b\u5171\u6ca1\u5e26\u8f66\u7684\u4eba\u4e2a\u6570\u5c31\u53ea\u6709 $k$\uff0c\u6240\u4ee5\u8fd9\u4e2a\u4e1c\u897f\u603b\u548c\u6700\u591a\u4e3a $2^k\\times k$\u3002\u6240\u6709\u70b9\u6700\u77ed\u8def\u5f84\u6765\u6e90\u70b9\u603b\u548c\u4e00\u5b9a\u5c0f\u4e8e\u7b49\u4e8e $m$\u3002\u6240\u4ee5\u8fd9\u4e00\u90e8\u5206\u590d\u6742\u5ea6\u4e3a $\\mathcal O((m+2^k \\times k) \\times 2^k)$\u3002dp \u90e8\u5206\u9996\u5148\u9700\u8981\u679a\u4e3e\u4eba\uff0c\u7136\u540e\u679a\u4e3e\u72b6\u6001\u548c\u5b50\u96c6\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u4e3a $\\mathcal O(f \\times 3^k)$\u3002\u603b\u590d\u6742\u5ea6\u4e3a $\\mathcal O(m \\times 2^k + f\\times 3^k)$\u3002\u80fd\u8fc7\u3002\n\n## \u4ee3\u7801\n\n\u597d\u96be\u5199:(\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,f,k;\nvector<int> e[10010];\nint a[10010],p[10010]; vector<int> lst[10010]; // lst[i] \u8868\u793a\u70b9\u5728 i \u7684\u4f4d\u7f6e\u662f\u5426\u6ca1\u5e26\u8f66\uff0c\u6ca1\u5e26\u8f66\u7684\u7f16\u53f7 \nint dis[10010]; vector<int> zy[10010]; // \u8f6c\u79fb\u70b9\nqueue<int> q;\nbool ifgo[10010][1<<6]; // \u662f\u5426\u53ef\u4ee5\u5e26\u8fd9\u4e9b\u4eba \nbool dp[10010][1<<6];\nbool vis[10010];\nint main()\n{\n\tios::sync_with_stdio(false),cin.tie(0);\n\tint t; cin>>t; while(t--)\n\t{\n\t\tcin>>n>>m;\n\t\tfor(int i=1; i<=n; ++i) e[i].clear();\n\t\tfor(int i=1; i<=m; ++i)\n\t\t{\n\t\t\tint u,v; cin>>u>>v;\n\t\t\te[u].push_back(v),e[v].push_back(u);\n\t\t}\n\t\tcin>>f;\n\t\tfor(int i=1; i<=f; ++i) cin>>a[i];\n\t\tfor(int i=1; i<=n; ++i) lst[i].clear();\n\t\tcin>>k;\n\t\tmemset(vis,0,sizeof(vis));\n\t\tfor(int i=1; i<=k; ++i) cin>>p[i],lst[a[p[i]]].push_back(i),vis[p[i]]=1;\n\t\tmemset(dis,0x3f,sizeof(dis)); dis[1]=0; q.push(1);\n\t\tfor(int i=0; i<=n; ++i) for(int j=0; j<(1<<k); ++j) ifgo[i][j]=0;\n\t\tfor(int i=0; i<=f; ++i) for(int j=0; j<(1<<k); ++j) dp[i][j]=0;\n\t\tifgo[1][0]=1;\n\t\twhile(!q.empty())\n\t\t{\n\t\t\tint frn=q.front(); q.pop();\n\t\t\tfor(int i:zy[frn])\n\t\t\t{\n\t\t\t\tfor(int j=0; j<(1<<k); ++j)\n\t\t\t\t{\n\t\t\t\t\tifgo[frn][j]|=ifgo[i][j];\n\t\t\t\t\tif(lst[frn].size())\n\t\t\t\t\t{\n\t\t\t\t\t\tfor(int ll=0; ll<(1<<lst[frn].size()); ++ll)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tint nowzt=0; bool flag=1;\n\t\t\t\t\t\t\tfor(int kk=0; kk<lst[frn].size(); ++kk)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif(ll>>kk&1)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif(!(j>>(lst[frn][kk]-1)&1)) { flag=0; break; }\n\t\t\t\t\t\t\t\t\tnowzt+=(1<<lst[frn][kk]-1);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!flag) continue;\n\t\t\t\t\t\t\tifgo[frn][j]|=ifgo[i][j^nowzt];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int v:e[frn])\n\t\t\t{\n\t\t\t\tif(dis[v]>dis[frn]+1)\n\t\t\t\t{\n\t\t\t\t\tzy[v].clear(); zy[v].push_back(frn);\n\t\t\t\t\tdis[v]=dis[frn]+1;\n\t\t\t\t\tq.push(v);\n\t\t\t\t}\n\t\t\t\telse if(dis[v]==dis[frn]+1) zy[v].push_back(frn);\n\t\t\t}\n\t\t}\n\t\tdp[0][0]=1; int ans=0,llst=0;\n\t\tfor(int i=1; i<=f; ++i)\n\t\t{\n\t\t\tif(vis[i]) continue;\n\t\t\tfor(int j=0; j<(1<<k); ++j)\n\t\t\t{\n\t\t\t\t// dp[i][j], f[i]\n\t\t\t\tfor(int k=j; ; k=(k-1)&j)\n\t\t\t\t{\n\t\t\t\t\tif(ifgo[a[i]][k]) dp[i][j]|=dp[llst][j^k];\n\t\t\t\t\tif(!k) break;\n\t\t\t\t}\n\t\t\t\tif(dp[i][j]) ans=max(ans,__builtin_popcount(j));\n\t\t\t}\n\t\t\tllst=i;\n\t\t}\n\t\tcout<<k-ans<<'\\n';\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1665649850,
        "uid": 353688,
        "name": "\u738b\u7199\u6587",
        "ccfLevel": 0,
        "title": "CF1741G \u9898\u89e3"
    },
    {
        "content": "\u6709\u610f\u601d\u7684\u9898\u3002\n\n\u4e00\u4e2a\u4eba\u53ef\u4ee5\u8f7d\u7684\u4eba\u7684\u5bb6\u5728\u5176\u5230 $1$ \u53f7\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u4e0a\uff08\u53ef\u4ee5\u6709\u591a\u6761\uff09\u3002\u6ce8\u610f\u5230 $k$ \u5f88\u5c0f\uff0c\u53ef\u4ee5\u7528\u72b6\u538b\u6765\u8868\u793a\u5f53\u524d\u70b9\u53ef\u4ee5\u8f7d\u7684\u4eba\uff08\u53ef\u80fd\u6709**\u591a\u7ec4**\uff09\u3002\u9884\u5904\u7406\u7528 bfs \u5c31\u597d\u4e86\u3002\n\n\u6211\u4eec\u8981\u8f7d\u5c3d\u53ef\u80fd\u591a\u7684\u4eba\uff0c\u76f8\u5f53\u4e8e\u5c06\u8fd9\u4e9b\u53ef\u4ee5\u8f7d\u4eba\u7684\u70b9\u7684\u72b6\u6001\u62fc\u51fa\u5c3d\u53ef\u80fd\u591a\u7684 $1$\uff0c\u53ef\u4ee5\u7528 $f_i$ \u8868\u793a\u72b6\u6001 $i$ \u80fd\u5426\u88ab\u62fc\u51fa\uff0c\u505a\u5206\u7ec4 01 \u80cc\u5305\u5c31\u662f\u4e86\u3002\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<set>\n#include<vector>\n#include<cstring>\n#include<queue>\nusing namespace std;\ntemplate <typename T>\ninline void read(T& r) {\n    r=0;bool w=0; \n    char ch=getchar();\n    while(ch<'0'||ch>'9') w=ch=='-'?1:0,ch=getchar();\n    while(ch>='0'&&ch<='9') r=(r<<3)+(r<<1)+(ch^48), ch=getchar();\n    r=w?-r:r;\n}\n \nconst int N=1e4+10,M=10;\n \nint n,m,f,k,h[N],bit[N],ans;\nvector<int>e[N];\nbool dp[1<<M],car[N],flag[N][1<<M];//flag[i][j]:\u7b2c $i$ \u4e2a\u8282\u70b9\u662f\u5426\u80fd\u8f7d\u72b6\u6001\u4e3a $j$\n \nqueue<int>q;\nint dis[N];\nvoid bfs(){\n    for(int i=1;i<=n;++i)dis[i]=-1;\n    dis[1]=0;q.push(1);flag[1][0]=1;\n    while(!q.empty()){\n        int u=q.front();q.pop();\n        for(int v:e[u]){\n            if(dis[v]==-1||dis[v]==dis[u]+1){//\u6700\u77ed\u8def\u5f84\u4e0a\u90fd\u53ef\u4ee5\u8f7d\n                for(int i=0;i<(1<<k);++i){\n                    if(flag[u][i])flag[v][i]=flag[v][i|bit[v]]=1;//\u8bb0\u5f97\u7b97\u4e0a\u5f53\u524d\u70b9\u7684\u72b6\u6001\n                }\n                if(dis[v]==-1){\n                    dis[v]=dis[u]+1;\n                    q.push(v);\n                }\n            }\n        }\n    }\n}\n \ninline int count(int x){int res=0;while(x)++res,x-=(x&-x);return res;}\n \nvoid init(){\n    for(int i=1;i<=n;++i)e[i].clear();\n    memset(flag,0,sizeof flag);\n    memset(bit,0,sizeof bit);memset(car,0,sizeof car);\n}\n \nvoid solve(){\n    read(n),read(m);init();\n    for(int i=1,u,v;i<=m;++i){\n        read(u),read(v);\n        e[u].push_back(v),e[v].push_back(u);\n    }read(f);\n    for(int i=1;i<=f;++i)read(h[i]),car[i]=1;\n    read(k);\n    for(int i=0,p;i<k;++i)read(p),bit[h[p]]|=(1<<i),car[p]=0;//\u8ba1\u7b97\u5f53\u524d\u70b9\u7684\u72b6\u6001\n\n    bfs();\n    memset(dp,0,sizeof dp);dp[0]=1;ans=0;\n    for(int i=1;i<=f;++i){\n        if(!car[i])continue;\n        for(int j=(1<<k);j>=0;--j){\n            for(int v=0;v<(1<<k);++v){\n                if(flag[h[i]][v])dp[j|v]|=dp[j];\n            }\n        }\n    }\n    for(int i=1;i<=(1<<k);++i)if(dp[i])ans=max(ans,count(i));\n    printf(\"%hd\\n\",k-ans);\n}\n \nint main(){\n    #ifdef LOCAL\n        freopen(\"std.in\",\"r\",stdin);\n        freopen(\"my.out\",\"w\",stdout);\n    #endif\n    int t;read(t);\n    while(t--)solve();\n    return 0;\n}\n```",
        "postTime": 1665629759,
        "uid": 339846,
        "name": "RuntimeErr",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1741G Kirill and Company"
    }
]