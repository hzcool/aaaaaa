[
    {
        "content": "### \u89e3\u9898\u601d\u8def\uff1a\n\n\u5b98\u65b9\u9898\u89e3\u8bf4\u7684\u662f\u7528\u6570\u5b66\u65b9\u6cd5\u76f4\u63a5\u63a8\u5bfc\u51fa\u65b9\u6848\u6570\u4e3a $6\\times 4^{2^{k}-2}$\uff0c\u4f46\u662f\u8fd9\u4e00\u79cd\u505a\u6cd5\u4f3c\u4e4e\u5e76\u4e0d\u80fd\u5f88\u65b9\u4fbf\u5730\u62d3\u5c55\u5230\u8fd9\u9053\u9898\u7684\u52a0\u5f3a\u7248\uff0c\u6240\u4ee5\u4ecb\u7ecd\u4e00\u79cd\u5229\u7528\u52a8\u6001\u89c4\u5212\u7684\u65b9\u6cd5\u6c42\u89e3\u3002\n\n\u7531\u4e8e\u6ca1\u6709\u989c\u8272\u5df2\u7ecf\u88ab\u9650\u5236\uff0c\u6240\u4ee5\u6240\u6709\u7684\u989c\u8272\u90fd\u662f\u5bf9\u79f0\u7684\uff0c\u53ea\u9700\u8981\u6c42\u51fa\u4efb\u610f\u4e00\u79cd\u989c\u8272\u7684\u65b9\u6848\u6570\u76f4\u63a5\u4e58\u4ee5 $6$ \u5c31\u662f\u603b\u65b9\u6848\u4e86\u3002\n\n\u8bbe $f_i$ \u4e3a\u67d0\u4e00\u79cd\u989c\u8272\u5728\u4e00\u9897\u9ad8\u5ea6\u4e3a $i$ \u7684\u6ee1\u4e8c\u53c9\u6811\u4e0a\u7684\u65b9\u6848\u6570\uff0c\u5176\u4e2d $f_1$ \u663e\u7136\u662f $1$\u3002\n\n\u5bf9\u4e8e $f_{i+1}$ \u8fd9\u4e2a\u503c\u7b49\u4e8e\u5de6\u53f3\u4e24\u4e2a\u5b50\u6811\u65b9\u6848\u6570\u76f8\u4e58\uff0c\u7531\u4e8e\u8fd9\u91cc\u7684 $f_i$ \u662f\u6bcf\u4e00\u79cd\u989c\u8272\u7684\u65b9\u6848\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u4e58\u4e0a $16$ \u4f5c\u4e3a\u4e0d\u540c\u989c\u8272\u65b9\u6848\u7684\u642d\u914d\uff08\u5de6\u5b50\u6811 $4$ \u79cd\u53ef\u9009\u989c\u8272\u65b9\u6848\uff0c\u53f3\u5b50\u6811\u4e5f\u662f\uff0c\u4e58\u6cd5\u539f\u7406\u76f4\u63a5\u7b97\uff09\u3002\n\n\u5f62\u5f0f\u5316\u5730\uff0c\u6709 $f_{i+1}=16\\times f_i^2$\uff0c\u9700\u8981\u6ce8\u610f\u53d6\u6a21\u3002\n\n\n---\n### \u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\nusing namespace std;\nlong long n,MOD=1e9+7,f[65];\nint main(){\n\tscanf(\"%d\",&n);\n\tf[1]=1;\n\tfor(int i=2;i<=n+1;i++){\n\t\tf[i]=(f[i-1]*f[i-1])%MOD*16%MOD;\n\t}\n\tprintf(\"%lld\",f[n]*6%MOD);\n\treturn 0;\n}\n```\n",
        "postTime": 1633755117,
        "uid": 223559,
        "name": "qxp101",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1594E1 Rubik's Cube Coloring (easy version)"
    },
    {
        "content": "\u9898\u610f\uff1a\u7ed9\u4e00\u68f5\u6df1\u5ea6\u4e3a $k$ \u7684\u6ee1\u4e8c\u53c9\u6811\u67d3\u8272\uff0c\u540c\u8272\u548c\u5bf9\u8272\u4e0d\u80fd\u76f8\u90bb\uff08\u5bf9\u8272\u662f\u6307\u6807\u51c6\u9b54\u65b9\u76f8\u5bf9\u4e24\u9762\u7684\u989c\u8272\uff09\uff0c\u6c42\u65b9\u6848\u6570\u3002\n\n\u65b9\u6cd5 $1$\uff1a\u6811\u5f62 dp\u3002\u4ee4 $f(i,j)$ \u8868\u793a\u6df1\u5ea6\u4e3a $i$ \u7684\u6ee1\u4e8c\u53c9\u6811\uff0c\u4e14\u6839\u7ed3\u70b9\u989c\u8272\u4e3a $j$ \u65f6\u7684\u65b9\u6848\u6570\uff0c\u8f6c\u79fb\u65f6\u679a\u4e3e\u5de6\u53f3\u5b50\u6811\u7684\u6839\u7ed3\u70b9\u67d3\u4ec0\u4e48\u989c\u8272\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define pii pair<int,int>\n#define pb push_back\n#define sml(x,y) (x=min(x,y))\n#define big(x,y) (x=max(x,y))\n#define int ll \n#define ll long long\n#define db double\n#define fo(i,x,y) for(int i=x;i<=y;++i)\n#define go(i,x,y) for(int i=x;i>=y;--i)\nusing namespace std;\ninline int read(){int x=0,fh=1; char ch=getchar(); while(!isdigit(ch)){if(ch=='-') fh=-1; ch=getchar();} while(isdigit(ch)){x=(x<<1)+(x<<3)+ch-'0'; ch=getchar();} return x*fh;}\ninline void out(int *a,int l,int r){fo(i,l,r) printf(\"%lld \",*(a+i));puts(\"\");}\n\nconst int N=1e6+5,qlr=1e9+7;\nint f[N][7];\n//white:1 yellow:6\n//green:2 blue:5\n//red:3 orange:4\n\nsigned main(){\n\tint n=read();\n\tfo(i,1,6) f[1][i]=1;\n\tfo(i,2,n)\n\t\tfo(j,1,6)\n\t\t\tfo(k,1,6)if(j!=k&&j+k!=7)\n\t\t\t\tfo(w,1,6)if(j!=w&&j+w!=7)  f[i][j]=(f[i][j]+f[i-1][k]*f[i-1][w])%qlr;\n\tint ans=0;\n\tfo(i,1,6) ans=(ans+f[n][i])%qlr;\n\tcout<<ans;\n\treturn 0;\n}\n/*\n-------------------------------------------------\n*/\n\n```\n\n\n\u65b9\u6cd5 $2$\uff1a\u76f4\u63a5\u8ba1\u6570\uff1a\u6839\u7ed3\u70b9\u6709 $6$ \u79cd\u9009\u62e9\uff0c\u6839\u7ed3\u70b9\u7684\u989c\u8272\u786e\u5b9a\u4e4b\u540e\u81ea\u9876\u5411\u4e0b\u4f9d\u6b21\u67d3\u8272\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u6709\u4e14\u4ec5\u6709 $4$ \u79cd\u9009\u62e9\uff0c\u56e0\u6b64\u7b54\u6848\u4e3a $6\\times 4^{2^{k}-2}$\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define fo(i,x,y) for(int i=x;i<=y;++i)\n#define go(i,x,y) for(int i=x;i>=y;--i)\n#define sml(x,y) x=min(x,y)\n#define big(x,y) x=max(x,y)\n#define mk make_pair\n#define pb push_back\n#define int ll\n#define ll long long\n#define db double\nusing namespace std;\ninline void out(int *a,int l,int r){fo(i,l,r) printf(\"%d \",*(a+i));puts(\"\");}\ninline int read(){ int x=0,f=1; char ch=getchar(); while(!isdigit(ch)){ if(ch=='-') f=-1; ch=getchar(); } while(isdigit(ch)){ x=(x<<1)+(x<<3)+(ch^48); ch=getchar(); } return x*f; }\n\nconst int qlr=1e9+7;\nint ksm(int x,int y){\n\tint ans=1,t=x;\n\twhile(y){\n\t\tif(y&1) ans=ans*t%qlr;\n\t\tt=t*t%qlr;\n\t\ty>>=1;\n\t}\n\treturn ans;\n}\n\nsigned main(){\n\tint k=read(),w=(1ll<<k)-2;\n\tcout<<6*ksm(4,w)%qlr;\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1633764584,
        "uid": 238408,
        "name": "vectorwyx",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1594E1 Rubik's Cube Coloring (easy version)"
    },
    {
        "content": "\u663e\u7136\u6839\u8282\u70b9\u6709 $6$ \u79cd\u65b9\u6848\uff0c\u5176\u4f59\u6240\u6709\u70b9\u90fd\u662f $4$ \u79cd\uff0c\u4e92\u4e0d\u5e72\u6270\u3002\n\u6545\u7b54\u6848\u4e3a\n$$6*4^{2^k-2}$$\n\u8f93\u51fa\u5373\u53ef\u3002\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n;\ntypedef long long ll;\nconst int MOD = 1e9 + 7;\nint fast_pow(ll n, ll k){\n\tint ans = 1;\n\twhile(k){\n\t\tif(k & 1) ans = ans * n % MOD;\n\t\tn = n * n % MOD;\n\t\tk >>= 1;\n\t}\n\treturn ans;\n}\nll ans;\nint main(){\n\tscanf(\"%d\", &n);\n\tans = 6ll * fast_pow(4, (1ll<<n)-2) % MOD;\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1633743504,
        "uid": 61834,
        "name": "Huami360",
        "ccfLevel": 6,
        "title": "\u9898\u89e3"
    },
    {
        "content": "# CF1594E1&E2 \u9898\u89e3\n\n\u4e00\u9053\u6811\u4e0a\u7684DP\u8ba1\u6570\u9898\u3002\n\n\u5148\u8003\u8651 Easy Version \uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u6df1\u5ea6\u76f8\u540c\u7684\u6ee1\u4e8c\u53c9\u6811\u672c\u8d28\u7b49\u4ef7\uff0c\u6545\u6211\u4eec\u53ef\u4ee5\u663e\u7136\u7684\u5199\u51fa\u4e00\u4e2aDP\u5f0f\uff1a\n\n\u8bb0 $dp_{i,col}$ \u4ee3\u8868\u6df1\u5ea6\u4e3a $i$ \u7684\u6ee1\u4e8c\u53c9\u6811\uff0c\u6839\u8282\u70b9\u989c\u8272\u4e3a $col$ \u7684\u65b9\u6848\u6570\uff0c\u5219\u6709\uff1a\n\n$dp_{i,col} = dp_{i-1,c1} \\times dp_{i-1,c2}$ \uff0c\u8f6c\u79fb\u524d\u63d0\u662f\u989c\u8272 $col,c1$ \u4ee5\u53ca $col,c2$ \u5206\u522b\u5728\u9b54\u65b9\u4e2d\u76f8\u90bb\u3002\n\n\u8fd9\u4e2aDP\u5f0f\u8db3\u4ee5\u901a\u8fc7 Easy Version \uff0c\u4f46\u5728 Hard Version \u4e2d\uff0c\n\n\u8fd9\u4e2a\u5f0f\u5b50\u65e0\u6cd5\u5c06\u4e8b\u5148\u5df2\u9009\u989c\u8272\u7684\u8282\u70b9\u8ba1\u7b97\u8fdb\u53bb\uff0c\u6545\u6211\u4eec\u5148\u8003\u8651\u4e00\u79cd\u66f4\u66b4\u529b\u7684DP\u65b9\u6cd5\uff0c\u5373\uff1a\n\n\u8bb0 $dp_{u,col}$ \uff0c\u4ee3\u8868\u4e8c\u53c9\u6811\u4e2d\u7b2c $u$ \u4e2a\u70b9\u67d3\u4e86\u989c\u8272 $col$ \uff0c\u8fd9\u68f5\u4ee5 $u$ \u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u7684\u65b9\u6848\u6570\uff0c\n\n\u5219\u8f6c\u79fb\u5f0f\u4e3a\uff1a$dp_{u,col} = dp_{ls(u),c1} \\times dp_{rs(u),c2}$ \uff0c\u8f6c\u79fb\u524d\u63d0\u662f $col,c1$ \u4ee5\u53ca $col,c2$ \u5206\u522b\u5728\u9b54\u65b9\u4e2d\u76f8\u90bb\u3002\n\n\u8fd9\u4e2aDP\u5f0f\u53ef\u4ee5\u901a\u8fc7\u9650\u5236\u8282\u70b9\u4e0a\u989c\u8272\u7684\u9009\u53d6\u6765\u8ba1\u7b97\u4e8b\u5148\u5df2\u9009\u989c\u8272\u7684\u8282\u70b9\uff0c\u4f46\u76f4\u63a5\u8fd9\u6837\u8ba1\u7b97\u4f1a\u7206\u590d\u6742\u5ea6\uff0c\n\n\u6545\u6211\u4eec\u9700\u8981\u4f18\u5316\u8fd9\u4e2a\u505a\u6cd5\u3002\n\n\u6211\u4eec\u6ce8\u610f\u5230\uff0c\u5728\u67d0\u4e00\u68f5\u5b50\u6811\u91cc\uff0c\u4e0d\u5b58\u5728\u67d0\u4e2a\u8282\u70b9\u4e8b\u5148\u5df2\u9009\u597d\u4e86\u989c\u8272\uff0c\n\n\u90a3\u4e48\u68f5\u5b50\u6811\u7684\u65b9\u6848\u6570\u5c31\u662f\u4e0a\u9762 Easy Version \u4e2d\u7684DP\u503c\u3002\n\n\u8fd9\u4e2a\u6709\u4ec0\u4e48\u7528\u5462\uff1f\u6211\u4eec\u6765\u8fdb\u4e00\u6b65\u63a2\u7a76 Easy Version \u91ccDP\u5f0f\u7684\u6027\u8d28\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4efb\u610f\u4e00\u4e2a\u989c\u8272\uff0c\u4e0e\u5176\u76f8\u90bb\u7684\u989c\u8272\u6070\u6709 $4$ \u79cd\uff0c\u6240\u4ee5\u4e0a\u9762DP\u72b6\u6001\u4e2d\uff0c\u4e0d\u540c\u7684\u989c\u8272\u5e76\u4e0d\u5f71\u54cdDP\u503c\u7684\u5927\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u6709\uff1a\n\n $\\large dp_{1,col}=1$ \uff0c\n\n$\\large dp_{i,col} =(4 \\times dp_{i-1,col})^2$ .\n\n\u4e24\u4e2a\u5f0f\u5b50\u3002\n\n\u6211\u4eec\u8bb0 $\\large F_i = dp_{i,col} $ \uff0c$\\large T_i = 4^{2^i-2}$ \uff0c\n\n\u5219\u6709\uff1a $\\large { {F_i} \\over {T_i} } = { {16(F_{i-1})^2} \\over {T_i} }$ .\n\n\u6211\u4eec\u53d1\u73b0\uff0c$\\large \\sqrt { {T_i} \\over {16} } = 4^{2^{i-1}-2} = T_{i-1}$ \uff0c\n\n\u5373\uff1a$\\large { {F_i} \\over {T_i} } = { {(F_{i-1})^2} \\over {(T_{i-1})^2} }$ .\n\n\u90a3\u6211\u4eec\u518d\u8bb0 $\\large P_i =  { {F_i} \\over {T_i} } $ \uff0c\u5219\u6211\u4eec\u6709\uff1a\n\n$\\large P_1 = 1$ \uff0c\n\n$\\large P_i = (P_{i-1})^2$ .\n\n\u4e24\u4e2a\u5f0f\u5b50\u3002\n\n\u663e\u7136\uff0c\u4e0a\u5f0f\u91cc\uff0c $P_i$ \u6052\u4e3a $1$ \uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5f97\u51fa\u4e86\uff1a $dp_{i,col}=F_i = T_i =4^{2^i-2} $ .\n\n\u6545 $dp_{i,col}$ \u7684\u503c\u5b9e\u9645\u4e0a\u7b49\u4e8e $4^{2^i-2}$ \uff0c\u800c\u4e00\u9897\u6ee1\u4e8c\u53c9\u6811\u7684\u65b9\u6848\u6570\uff0c\u5f53\u6839\u8282\u70b9\u989c\u8272\u786e\u5b9a\u540e\uff0c\u4e5f\u5c31\u662f $4^{2^i-2}$ \u79cd\u3002\n\n\u90a3\u4e48\uff0c\u73b0\u5728\u6211\u4eec\u8003\u8651\u8fd9\u4e2a\u503c\u7684\u53e6\u4e00\u79cd\u542b\u4e49\uff1a\u6211\u4eec\u53d1\u73b0\uff0c\u4e00\u68f5\u6df1\u5ea6\u4e3a $i$ \u7684\u6ee1\u4e8c\u53c9\u6811\u91cc\uff0c\u9664\u53bb\u6839\u8282\u70b9\uff0c\u5176\u4f59\n\n\u8282\u70b9\u8fd8\u6709 $2^i-2$ \u4e2a\uff0c\u800c\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u6070\u6709 $4$ \u79cd\u9009\u62e9\uff0c\u6545$dp_{i,col}$ \u7684\u503c\u7b49\u4e8e $4^{2^i-2}$ .\n\n\u6240\u4ee5\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9 $u$ \uff0c\u82e5\u5176\u5b50\u6811\u4e2d\u6ca1\u6709\u4e8b\u5148\u5df2\u9009\u989c\u8272\u7684\u8282\u70b9\uff0c\u5219\u5b83\u6070\u6709 $4$ \u79cd\u67d3\u8272\u65b9\u6848\uff0c\u8fd9\u4e2a\u503c\u662f\u56fa\u5b9a\n\n\u7684\uff0c\u90a3\u6211\u4eec\u5c31\u4e0d\u9700\u8981\u8003\u8651\u8fd9\u4e2a\u8282\u70b9\uff0c\u800c\u662f\u628a\u6700\u540e\u7684\u7b54\u6848\u4e58\u4e0a\u8fd9\u4e2a $4$ \u7684\u8d21\u732e\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u73b0\u5728\u9700\u8981\u8003\u8651\u7684\u70b9\uff0c\u90fd\u5fc5\u987b\u6ee1\u8db3\u4ee5\u4e0b\u9650\u5236\u6761\u4ef6\uff1a\n\n\u5bf9\u4e8e\u4e00\u4e2a\u8981\u8003\u8651\u7684\u70b9 $v$ \uff0c$v$ \u6240\u5728\u5b50\u6811\u4e2d\u5fc5\u987b\u542b\u6709\u81f3\u5c11\u4e00\u4e2a\u4e8b\u5148\u5df2\u9009\u989c\u8272\u7684\u8282\u70b9\u3002\n\n\u6211\u4eec\u63a5\u4e0b\u6765\u8ba1\u7b97\uff0c\u6709\u54ea\u4e9b\u8282\u70b9\u9700\u8981\u6211\u4eec\u8003\u8651\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u4e8b\u5148\u5df2\u9009\u989c\u8272\u7684\u8282\u70b9\uff0c\u5176\u5230\u6839\u7684\u8def\u5f84\u4e0a\u6240\u6709\u7684\u70b9\u90fd\u9700\u8981\u8003\u8651\uff1b\n\n\u800c\u4e0d\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\u7684\u70b9\uff0c\u5219\u4e00\u5b9a\u4e0d\u9700\u8981\u8003\u8651\u3002\u800c\u8fd9\u6837\u7684\u70b9\u6700\u591a\u6709 $nk$ \u4e2a\uff0c\u5373\u4e8c\u53c9\u6811\u7684\u6df1\u5ea6\u4e58\u4e0a\n\n\u4e8b\u5148\u5df2\u9009\u989c\u8272\u8282\u70b9\u7684\u6570\u91cf\u3002\n\n\u5e76\u4e14\uff0c\u6211\u4eec\u8bbe\u5305\u542b\u8fd9\u4e9b\u70b9\u7684\u70b9\u96c6\u4e3a $S$ \uff0c\u5219 $S$ \u4e2d\u4efb\u610f\u4e24\u70b9 $u,v$ \uff0c\u90fd\u53ef\u4ee5\u53ea\u8d70 $S$ \u4e2d\u7684\u70b9\u76f8\u4e92\u5230\u8fbe\u3002\n\n\u8fd9\u65f6\u6211\u4eec\u53d1\u73b0\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u8fd9\u4e9b\u70b9\u62ff\u51fa\u6765\u8dd1\u4e00\u6b21\u6811\u5f62DP\uff0c\u518d\u5c06\u6700\u540e\u7b54\u6848\u4e58\u4e0a $4^{2^k-1-|S|}$ \u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6\u4e3b\u8981\u4f53\u73b0\u5728\u7528map\u9884\u5904\u7406\u4e0a\uff0c\u662f $O(nklog(nk))$ \u7684\u3002\n\n**E1 code:**\n\n```\n#define int long long\n\nconst int N (104);\nconst int mod (1e9 + 7);\n\nint f[N][10];\n\nsigned main() {\n\trep (i, 1, 6) f[1][i] = 1ll;\n\trep (i, 2, 80) rep (j, 1, 6) {\n\t\tint det = 1;\n\t\tif (j % 2 == 0) det = -1;\n\t\trep (le, 1, 6) rep (ri, 1, 6) {\n\t\t\tif (le != j && le != j + det && ri != j && ri != j+det)\n\t\t\tf[i][j] = (f[i][j] + (f[i-1][le] * f[i-1][ri]) % mod) % mod;\n\t\t}\n\t}\n\tint x = read(), ans = 0;\n\trep (i, 1, 6) ans = (ans + f[x][i]) % mod;\n\tcout << ans;\n}\n```\n\n**E2 code:**\n\n\uff08\u53c2\u8003\u4e86CF\u5b98\u89e3\u7684\u4ee3\u7801\uff09\n\n```\n#define int long long\n\nconst int N (1e6 + 10);\nconst int mod (1e9 + 7);\n\ninline int ksm(int a, int b) {\n\tint res = 1ll;\n\twhile (b) {\n\t\tif (b & 1ll) res = 1ll * res * a % mod;\n\t\ta = 1ll * a * a % mod, b >>= 1ll;\n\t} return res;\n}\n\nint k,n;\nint tot;\nint col[N];\nint dp[N][6];\nvector < int > G[N];\nmap < int , int > buk, vl;\nint color[6][6] = { {1, 2, 4, 5}, {0, 2, 3, 5}, {0, 1, 3, 4},\n\t\t\t\t\t{1, 2, 4, 5}, {0, 2, 3, 5}, {0, 1, 3, 4} };\n\ninline int dfs(int u, int c) {\n\tif (col[u] != -1 && col[u] != c) return 0;\n\tif (dp[u][c] != -1) return dp[u][c];\n\tint res = 0, sum[2] = {0}, siz = G[u].size();\n\trep (i, 0, 3) rep (j, 0, siz - 1) \n\t  sum[j] += dfs(G[u][j], color[c][i]), sum[j] %= mod;\n\tif (G[u].empty()) sum[0] = sum[1] = 1;\n\tif ((int)(G[u].size()) == 1) sum[1] = 1;\n\treturn dp[u][c] = res = sum[0] * sum[1] % mod;\n}\n\nsigned main() {\n\tmemset(col, -1, sizeof(col)), memset(dp, -1, sizeof(dp));\n\tk = read(), n = read();\n\tint rem = (1ll << k) - 1; map < string , int > val ;\n\tval[\"white\"] = 0, val[\"yellow\"] = 3, val[\"green\"] = 4;\n\tval[\"blue\"] = 1, val[\"red\"] = 2, val[\"orange\"] = 5;\n\trep (i, 1, n) {\n\t\tint x = read(), u; string s; cin >> s, vl[x] = val[s], u = x;\n\t\twhile (u >= 1 && !buk.count(u)) buk[u] = tot++, rem --, u >>= 1ll;\n\t}\n\tmap < int , int > ::iterator p ;\n\tfor (p = buk.begin(); p != buk.end(); p++) {\n\t\tint F = p -> fi, S = p -> se;\n\t\tif (vl.count(F)) col[S] = vl[F];\n\t\tif (buk.count(F << 1ll)) G[S].pb(buk[F << 1ll]);\n\t\tif (buk.count(F << 1ll | 1ll)) G[S].pb(buk[F << 1ll | 1ll]);\n\t}\n\tint res = ksm(4ll, rem), sum = 0;\n\trep (c, 0, 5) sum += dfs(buk[1], c), sum %= mod;\n\tcout << res * sum % mod;\n\treturn 0;\n}\n```\n\n",
        "postTime": 1633768155,
        "uid": 100091,
        "name": "GaryH",
        "ccfLevel": 6,
        "title": "CF1584E1 \u9898\u89e3"
    },
    {
        "content": "\n## \u9898\u610f  \n\n\u6709\u4e00\u68f5\u6df1\u5ea6\u4e3a $k$ \u7684\u6ee1\u4e8c\u53c9\u6811\uff08\u6839\u8282\u70b9\u6df1\u5ea6\u4e3a $1$\uff09\u3002  \n\u4f60\u8981\u7528 $6$ \u79cd\u989c\u8272\u53bb\u67d3\u8272\uff0c\u4f7f\u5f97\u76f8\u90bb\u8282\u70b9\u989c\u8272\u4e0d\u540c\uff0c\u5e76\u4e14\u4e5f\u4e0d\u4f1a\u662f\u9b54\u65b9\u5bf9\u9762\u7684\u4e24\u4e2a\u9762\u7684\u989c\u8272\u3002  \n\u5177\u4f53\u6765\u8bf4\uff1a  \n- \u5982\u679c\u4e00\u4e2a\u8282\u70b9\u662f\u767d\u8272\u7684\uff0c\u90a3\u4e48\u76f8\u90bb\u8282\u70b9\u4e0d\u80fd\u662f\u767d\u8272\u7684\u6216\u9ec4\u8272\u7684\u3002 \n- \u5982\u679c\u4e00\u4e2a\u8282\u70b9\u662f\u9ec4\u8272\u7684\uff0c\u90a3\u4e48\u76f8\u90bb\u8282\u70b9\u4e0d\u80fd\u662f\u767d\u8272\u7684\u6216\u9ec4\u8272\u7684\u3002 \n- \u5982\u679c\u4e00\u4e2a\u8282\u70b9\u662f\u7eff\u8272\u7684\uff0c\u90a3\u4e48\u76f8\u90bb\u8282\u70b9\u4e0d\u80fd\u662f\u7eff\u8272\u7684\u6216\u84dd\u8272\u7684\u3002 \n- \u5982\u679c\u4e00\u4e2a\u8282\u70b9\u662f\u84dd\u8272\u7684\uff0c\u90a3\u4e48\u76f8\u90bb\u8282\u70b9\u4e0d\u80fd\u662f\u7eff\u8272\u7684\u6216\u84dd\u8272\u7684\u3002 \n- \u5982\u679c\u4e00\u4e2a\u8282\u70b9\u662f\u7ea2\u8272\u7684\uff0c\u90a3\u4e48\u76f8\u90bb\u8282\u70b9\u4e0d\u80fd\u662f\u7ea2\u8272\u7684\u6216\u6a59\u8272\u7684\u3002 \n- \u5982\u679c\u4e00\u4e2a\u8282\u70b9\u662f\u6a59\u8272\u7684\uff0c\u90a3\u4e48\u76f8\u90bb\u8282\u70b9\u4e0d\u80fd\u662f\u7ea2\u8272\u7684\u6216\u6a59\u8272\u7684\u3002 \n\n\u73b0\u5728\u5df2\u77e5\u4e86 $n$ \u4e2a\u8282\u70b9\u7684\u989c\u8272\u4fe1\u606f\uff08\u5728 E1 \u4e2d\u4e3a 0\uff09\uff0c\u6c42\u7ed9\u6574\u68f5\u6811\u67d3\u8272\u7684\u65b9\u6848\u6570\u3002  \n\n## \u9898\u89e3  \n\n\u6709\u4e00\u4e2a\u516c\u5f0f\uff1a$6 \\times 4^{2^k-2}$\u3002  \n\u89e3\u91ca\u5c31\u662f\uff0c\u5982\u679c\u786e\u5b9a\u4e86\u7236\u4eb2\u8282\u70b9\u7684\u989c\u8272\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8282\u70b9\u7684\u989c\u8272\u53ea\u6709 $4$ \u79cd\u53ef\u80fd\u4e86\u3002  \n\u4f46\u662f\u6839\u8282\u70b9\u6ca1\u6709\u7236\u4eb2\u8282\u70b9\uff0c\u6240\u4ee5\u8fd8\u662f\u6709 $6$ \u79cd\u53ef\u80fd\u3002\u56e0\u6b64\u7b54\u6848\u4e3a $6 \\times 4 ^{2^k -2}$\u3002  \n\n\u4ee3\u7801\u4e0d\u653e\u4e86\uff0c\u6ce8\u610f\u5e42\u6b21\u8981\u5bf9 $10^9+6$ \u53d6\u6a21\u800c\u4e0d\u662f $10^9+7$\u3002",
        "postTime": 1633760636,
        "uid": 167006,
        "name": "WitheredZeal",
        "ccfLevel": 0,
        "title": "CF1594E1"
    },
    {
        "content": "\u540c\u65f6\u4f5c\u4e3a $E1$ \u9898\u89e3\u4e86\u3002\n\n[$MyBlog$](https://www.cnblogs.com/h-lka/)\n\n## \u9898\u76ee\u63cf\u8ff0\n\n\u7ed9\u5b9a $2^n-1$ \u4e2a\u8282\u70b9\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u6bcf\u4e2a\u70b9\u6709\u516d\u79cd\u989c\u8272\uff0c\u989c\u8272\u6709\u4e92\u65a5\u6027\u8d28\uff0c\u6c42\u6240\u6709\u5408\u6cd5\u7684\u4e8c\u53c9\u6811\u67d3\u8272\u65b9\u6848\u3002\n\n### Easy version\n\n\u8fd9\u4e2a\u6bd4\u8f83\u7b80\u5355\uff0c\u4f46\u6211\u4e5f\u6389\u8fdb\u5751\u91cc\u4e86\uff09\u9996\u5148\u5148\u624b\u73a9\u4e00\u4e0b\uff0c\u770b\u5230\u6837\u4f8b $n=3$ \u7684\u65f6\u5019\u6570\u5b57\u5c31\u90a3\u4e48\u5927\uff0c\u7edd\u5bf9\u6709\u4ec0\u4e48\u6b21\u5e42\u6027\u8d28\u3002\n\n\u4e00\u4e2a\u70b9\u7684\u7b54\u6848\u663e\u7136\u662f\u516d\u79cd\u3002\u8003\u8651\u4e0d\u65ad\u5411\u4e0a\u5408\u5e76\uff0c\u6bcf\u4e00\u4e2a\u8282\u70b9\u53ef\u4ee5\u9009\u62e9\u516d\u79cd\u989c\u8272\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u4e00\u79cd\u989c\u8272\u518d\u4e58\u56de\u53bb\u5373\u53ef\u3002\n\n\u53d1\u73b0\uff0c\u5bf9\u4e8e\u9009\u5b9a\u4e00\u79cd\u989c\u8272\uff0c\u4e24\u8fb9\u5747\u6709\u56db\u79cd\u989c\u8272\u53ef\u4ee5\u9009\uff0c\u4e58\u8d77\u6765\u5c31\u662f $16$ \u79cd\uff0c\u6700\u540e\u7684\u7b54\u6848\u5fc5\u7136\u5f62\u5982 $6\\times 4^{x}.$ \u6211\u4eec\u628a\u624b\u63a8\u7684\u4e00\u4e9b\u5199\u4e0b\u6765\uff1a\n\n$$0,2,6,14,30...$$\n\n\u5230\u8fd9\u91cc\u89c4\u5f8b\u4e5f\u5c31\u5f88\u660e\u663e\u4e86\uff0c\u4e5f\u53ef\u4ee5\u7ed9\u51fa\u4e25\u8c28\u63a8\u5bfc\u3002\u8bbe\u5de6\u53f3\u5b50\u6811\u6bcf\u79cd\u989c\u8272\u7684\u5bf9\u5e94\u65b9\u6848\u6570\u4e3a $4^x,$ \u5219\u5bf9\u4e8e\u4e00\u79cd\u989c\u8272\uff0c\u5de6\u4fa7\u53f3\u4fa7\u5747\u6709 $4^{x+1}$ \u79cd\u53ef\u80fd\uff0c\u4e58\u8d77\u6765\u5c31\u662f $4^{2x+2}$ \u79cd\u3002\n\n\u6240\u4ee5\u5bf9\u4e8e $4$ \u6307\u6570\u4e0a\u7684\u9012\u63a8\u5c31\u641e\u5b9a\u4e86\u3002**\u4f46\u662f\u6ce8\u610f\uff0c\u5bf9\u4e8e\u6307\u6570\u4e0a\u9762\u7684\u53d6\u6a21\uff0c\u6211\u4eec\u8981\u5bf9 $\\varphi(p)=(10^9+6)$ \u53d6\u6a21\uff0c\u8fd9\u91cc\u5229\u7528\u6b27\u62c9\u5b9a\u7406**\n\n\u4e8e\u662f\u7b80\u5355\u7248\u672c\u5c31\u505a\u5b8c\u4e86\u3002\n\n### Hard version\n\n\u6811\u592a\u5927\u4e86\uff0c~~\u5fcd\u4e0d\u4e86~~\uff0c\u600e\u4e48\u529e\uff1f\n\n\u53d1\u73b0\u6709\u6548\u7684\u70b9\u53ea\u6709\u4e24\u5343\u4e2a\uff0c\u7b97\u4e0a\u628a\u5b83\u4eec\u5168\u90e8\u94a9\u6784\u9020\u6210\u5b8c\u6574\u7ed3\u6784\u7684\u4e5f\u4e0d\u591a\uff0c\u6240\u4ee5\u76f4\u63a5\u8003\u8651\u5efa\u7acb\u865a\u6811\u8fdb\u884c $dp.$\n\n\u663e\u7136\u7684\u6027\u8d28\u662f\u53ea\u6709\u5176\u7956\u5148\u6709\u7528\uff0c\u800c\u7531\u4e8e\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u6240\u4ee5\u7956\u5148\u4e2a\u6570\u53ea\u6709 $O(\\log n)$ \u4e2a\uff0c\u4e8e\u662f\u70b9\u6570\u5c31\u53ef\u4ee5\u63a5\u53d7\u4e86\u3002\n\n\u540c\u65f6\u6211\u4eec\u4e5f\u53d1\u73b0\uff0c\u8fd9\u4e2a\u4e0d\u540c\u4e8e\u4e00\u822c\u7684\u865a\u6811\uff0c\u8fd9\u91cc\u6211\u4eec\u5efa\u7acb\u4e00\u5b9a\u662f\u8981\u628a\u4ece\u8fd9\u4e2a\u70b9\u5230\u6839\u8282\u70b9\u7684\u4e00\u6574\u6761\u94fe\u5168\u90e8\u5efa\u7acb\u51fa\u6765\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u90fd\u662f\u5fc5\u987b\u70b9\u3002**\u6240\u4ee5\u6211\u4eec\u6700\u540e\u8981 $dp$ \u7684\u6811\u5c31\u662f\u666e\u901a\u7684\u6811\uff0c\u4f46\u662f\u5176\u6240\u6709\u9690\u5f0f\u8282\u70b9\uff0c\u6216\u8005\u8bf4\u6ca1\u6709\u88ab\u5efa\u7acb\u7684\u8282\u70b9\uff0c\u5176\u503c\u4e0d\u53d7\u56fa\u5b9a\u989c\u8272\u70b9\u7684\u5e72\u6270\u3002**\n\n\u8003\u8651\u666e\u901a\u6811\u600e\u4e48 $dp:$ \u8bbe $f[x][1..3]$ \u8868\u793a\u5bf9\u5e94\u4e09\u79cd\u4e0d\u540c\u5212\u5206\u989c\u8272\u5bf9\u5e94\u7684\u65b9\u6848\u6570\u3002\uff08\u4e09\u79cd\u662f\u56e0\u4e3a\u8fd9\u9898\u4e92\u65a5\u6027\u8d28\u4e24\u4e2a\u989c\u8272\u76f8\u5bf9\uff09\n\n\u90a3\u4e48\u8f6c\u79fb\u5c31\u662f\u76f4\u63a5\u628a\u4e24\u4e2a\u5b50\u6811\u4e58\u8d77\u6765\u3002\n\n\u90a3\u4e48\u73b0\u5728\u8003\u8651\u5b9a\u521d\u503c\u3002\u521d\u503c\u663e\u7136\u4e0d\u53d7\u5176\u4ed6\u5e26\u989c\u8272\u70b9\u5f71\u54cd\uff0c\u6240\u4ee5\u76f4\u63a5\u7528\u7b2c\u4e00\u95ee\u7684\u65b9\u6cd5\uff0c**\u53d6 $\\frac{1}{6}$ \u5373\u53ef\u3002**\n\n\u77e5\u9053\u521d\u503c\u548b\u6c42\u4e86\uff0c\u8fd9 $dp$ \u7684\u65b9\u7a0b\u4e5f\u77e5\u9053\u4e86\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u4e00\u4e2a $dfs$ \u7684\u4e8b\u60c5\u4e86\u3002\n\n\u6ce8\u610f\u7528 ```map<int,int>``` \u4e00\u5f00\u59cb\u6709\u4e00\u4e2a\u6570\u7ec4\u5fd8\u8bb0\u5f00 RE \u4e86\u597d\u51e0\u6b21\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef double db;\n#define int long long\nconst int mod=1e9+7;\nconst db eps=1e-10;\ninline int Max(int x,int y){return x>y?x:y;}\ninline int Min(int x,int y){return x<y?x:y;}\ninline db Max(db x,db y){return x-y>eps?x:y;}\ninline db Min(db x,db y){return x-y<eps?x:y;}\ninline int Add(int x,int y,int M=mod){return (x+y)%M;}\ninline int Mul(int x,int y,int M=mod){return 1ll*x*y%M;}\ninline int Dec(int x,int y,int M=mod){return (x-y+M)%M;}\ninline int Abs(int x){return x<0?-x:x;}\ninline int read(){\n\tint s=0,w=1;\n\tchar ch=getchar();\n\twhile(!isdigit(ch)){\n\t\tif(ch=='-')w=-1;\n\t\tch=getchar();\n\t}\n\twhile(isdigit(ch)){\n\t\ts=s*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn s*w;\n}\ninline void write(int x){\n\tif(x<0)putchar('-'),x=-x;\n\tif(x>9)write(x/10);\n\tputchar(x%10+'0');\n}\nconst int N=2e5+10;\nint k,n;\nint F[61];\nstring s;\ntypedef long long ll;\nmap<ll,ll>pa,col,lson,rson,f[4];\nvector<ll>Node;\ninline int qpow(int x,int y){\n\tint res=1;\n\twhile(y){\n\t\tif(y&1)res=Mul(res,x);\n\t\tx=Mul(x,x);y>>=1;\n\t}\n\treturn res;\n}\ninline int Getdep(int v){return log2(v)+1;}\nvoid Treat(){\n\tfor(auto v:Node){\n\t\tif(lson[v]||rson[v])continue;\n\t\tint Dep=k-Getdep(v)+1;\n\t\tif(col[v])f[col[v]][v]=Mul(1,qpow(4,F[Dep]));\n\t\telse for(int i=1;i<=3;++i)f[i][v]=Mul(2,qpow(4,F[Dep]));\n\t}\n}\nvoid DP(ll x){\n\tif(!lson[x]&&!rson[x])return;\n\tif(lson[x])DP(lson[x]);\n\tif(rson[x])DP(rson[x]);\n\tll L1=f[1][lson[x]],L2=f[2][lson[x]],L3=f[3][lson[x]],R1=f[1][rson[x]],R2=f[2][rson[x]],R3=f[3][rson[x]];\n\tif(!lson[x]){L1=L2=L3=Mul(2,qpow(4,F[k-Getdep(x*2)+1]));}\n\tif(!rson[x]){R1=R2=R3=Mul(2,qpow(4,F[k-Getdep(x*2)+1]));}\n\tif(!col[x]){\n\t\tf[1][x]=Mul(2,Mul(Add(L2,L3),Add(R2,R3)));\n\t\tf[2][x]=Mul(2,Mul(Add(L1,L3),Add(R1,R3)));\n\t\tf[3][x]=Mul(2,Mul(Add(L2,L1),Add(R2,R1)));\n\t}\n\telse{\n\t\tif(col[x]==1)f[1][x]=Mul(Add(L2,L3),Add(R2,R3));\n\t\tif(col[x]==2)f[2][x]=Mul(Add(L1,L3),Add(R1,R3));\n\t\tif(col[x]==3)f[3][x]=Mul(Add(L2,L1),Add(R2,R1));\n\t}\n}\nsigned main(){\n \tfreopen(\"My.out\",\"r\",stdin);\n\tk=read();\n\tF[1]=0;\n\tfor(int i=2;i<=60;++i){\n\t\tF[i]=Add(F[i-1],1,mod-1);\n\t\tF[i]=Mul(F[i],2,mod-1);\n\t}\n\tn=read();\n\tfor(int i=1;i<=n;++i){\n\t\tint pos=read();\n\t\tcin>>s;\n\t\tif(s==\"orange\"||s==\"red\")col[pos]=1;\n\t\tif(s==\"white\"||s==\"yellow\")col[pos]=2;\n\t\tif(s==\"blue\"||s==\"green\")col[pos]=3;\n\t\twhile(pos){\n\t\t\tNode.emplace_back(pos);\n\t\t\tpa[pos]=pos/2;\n\t\t\tif(pos%2==0)lson[pos/2]=pos;\n\t\t\telse rson[pos/2]=pos;\n\t\t\tpos/=2;\n\t\t}\n\t}\n\tsort(Node.begin(),Node.end());\n\tll root=1;\n\tTreat();\n\tDP(root);\n\tint res=Add(f[3][root],Add(f[1][root],f[2][root]));\n\twrite(res);putchar('\\n');\n\treturn 0;\n}\n```\n",
        "postTime": 1633760291,
        "uid": 128591,
        "name": "Refined_heart",
        "ccfLevel": 9,
        "title": "CF1594E1 Rubik's Cube Coloring (hard version) \u9898\u89e3"
    },
    {
        "content": "### Solution\n\n\u663e\u7136\uff0c\u5bf9\u4e8e\u7b2c\u4e00\u4e2a node \u4f60\u6709 6 \u79cd\u9009\u62e9\uff0c\u5bf9\u4e8e\u5176\u4ed6\u7684 node \u4f60\u6709 4 \u79cd\u9009\u62e9\uff0c\u6240\u4ee5\u7b54\u6848\u5c31\u662f $6 \\cdot 4 ^ {2^{k} - 2}$\uff0c\u7136\u540e\u5c31\u6ca1\u4e86\u3002\n\n### Code\n\n```python3\nk = int(input())\nprint(6 * (pow(4, (pow(2, k) - 2), 1000000007)) % 1000000007)\n```",
        "postTime": 1633754064,
        "uid": 219791,
        "name": "tZERO\u3061\u3083\u3093",
        "ccfLevel": 0,
        "title": "CF1594E1"
    }
]