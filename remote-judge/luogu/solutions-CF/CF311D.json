[
    {
        "content": "\u7b80\u5355\u9898\u3002\n\n\u4ece\u7279\u6b8a\u6a21\u6570 $95542721$ \u5165\u624b\uff0c\u5957\u8def\u5730\u53bb\u601d\u8003\u662f\u5426\u5b58\u5728\u5faa\u73af\u8282\u3002\n\n$a^{3^n} \\equiv a\\ (\\bmod\\ 95542721)$ \u4e5f\u5c31\u662f $3^n \\equiv 1(\\bmod\\ 95542720)$\u3002\u968f\u4fbf\u5199\u4e2a\u7a0b\u5e8f\u7b97\u4e00\u4e0b\u53d1\u73b0\u5f53 $n=48$ \u65f6\uff0c\u4e0a\u5f0f\u6210\u7acb\u3002\n\n\u90a3\u4e48\u5c31\u5bb9\u6613\u4e86\uff0c\u76f4\u63a5\u7528\u66b4\u529b\u5206\u5757\u7ef4\u62a4\uff08\u57fa\u672c\u64cd\u4f5c\uff09\u3002\u4e24\u7aef\u6563\u5757\u66b4\u529b\u4fee\u6539\uff0c\u4e2d\u95f4\u6574\u5757\u6253\u6807\u8bb0\u3002\u67e5\u8be2\u540c\u7406\u3002\n\n\u6ce8\u610f\u5230\u4fee\u6539\u6563\u5757\u7684\u5e38\u6570\u4e3a $48$\uff0c\u4e3a\u4e86\u5e73\u8861\u6563\u5757\u4fee\u6539\u548c\u6574\u5757\u4fee\u6539\u7684\u590d\u6742\u5ea6\uff0c\u9009\u62e9\u5757\u957f $50$\u3002\uff08\u6216\u8005\u4f60\u7528 $\\sqrt \\frac{n}{48}$ \u4e5f\u884c\uff09\n\n\u4ee3\u7801\u633a\u77ed\u7684\uff0c\u8dd1\u5f97\u4e5f\u6bd4\u51e0\u4e4e\u6240\u6709\u7ebf\u6bb5\u6811\u505a\u6cd5\u5feb\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define GC c=getchar()\n#define IG isdigit(c)\n#define U(i,l,r) for(int i(l),END##i(r);i<=END##i;++i)\n#define D(i,r,l) for(int i(r),END##i(l);i>=END##i;--i)\ntemplate<class T>void rd(T &x=0,char GC,bool f=1)\n{\n    for(x=0;!IG;GC)f=c!='-';for(;IG;GC)x=x*10+(c^48);x=f?x:-x;\n}\ntemplate<class A,class... B>void rd(A& x,B&... y) {rd(x),rd(y...);}\nusing namespace std;\nconst int N(1e5+5),P(95542721),B(50);\nint n,lab,q,a[N+5],b[50][N+5];\nint tot,pos[N+5],L[N/B+5],R[N/B+5],s[50][N/B+5],tag[N+5];\n\nint pw3(int x) {return 1ll*x*x%P*x%P;}\nvoid inc(int &x,int y) {x+=y,x>=P?x-=P:1;}\n\nvoid build() \n{\n\twhile(R[tot]<n) ++tot,L[tot]=R[tot-1]+1,R[tot]=R[tot-1]+B;\n\tU(i,1,tot)\n\t\tU(j,L[i],R[i])\n\t\t{\n\t\t\tpos[j]=i;\n\t\t\tU(z,0,47) inc(s[z][i],b[z][j]),b[z+1][j]=pw3(b[z][j]);\n\t\t}\n}\n\n#define doit(k) {U(z,0,47) inc(s[z][k],P-b[z][i]),inc(s[z][k],b[z+1][i]),b[z][i]=b[z+1][i];b[48][i]=b[0][i];}\n\nvoid mdy(int l,int r)\n{\n\tint pl(pos[l]),pr(pos[r]);\n\tif(pl==pr) \n\t{\n\t\tU(i,l,r) doit(pl);return ;\n\t}\n\tU(i,l,R[pl]) doit(pl);\n\tU(i,L[pr],r) doit(pr);\n\tU(i,pl+1,pr-1) ++tag[i];\n}\n\nint ask(int l,int r)\n{\n\tint pl(pos[l]),pr(pos[r]),res(0);\n\tif(pl==pr)\n\t{\n\t\tU(i,l,r) inc(res,b[tag[pl]%48][i]);return res;\n\t} \n\tU(i,l,R[pl]) inc(res,b[tag[pl]%48][i]);\n\tU(i,L[pr],r) inc(res,b[tag[pr]%48][i]);\n\tU(i,pl+1,pr-1) inc(res,s[tag[i]%48][i]);\n\treturn res;\n}\nsigned main()\n{\n\trd(n);\n\tU(i,1,n) rd(a[i]),b[0][i]=a[i]%P;\n\tbuild(),rd(q);\n\twhile(q--)\n\t{\n\t\tint op,l,r; rd(op,l,r);\n\t\tif(op==1) printf(\"%d\\n\",ask(l,r));\n\t\telse mdy(l,r);\n\t}\n    return 0;\n}\n```",
        "postTime": 1667725036,
        "uid": 312306,
        "name": "LJ07",
        "ccfLevel": 0,
        "title": "[Solution]CF311D"
    },
    {
        "content": "\u9898\u610f\uff1a\u533a\u95f4\u53d8\u6210\u81ea\u5df1\u7684\u4e09\u6b21\u65b9\uff0c\u533a\u95f4\u6c42\u548c\u3002\n\n\u9996\u5148\u4f60\u53d1\u73b0\u8fd9\u4e2a\u6a21\u6570\u5f88\u725b\u903c\uff0c\u4f60\u5c31\u5f00\u59cb\u63a2\u7a76\u8fd9\u4e2a\u6a21\u6570\u7684\u7279\u6027\u3002\u3002\u3002\n\n\u4f60\u7ecf\u8fc7\u4e0d\u61c8\u7684\u6253\u8868\uff0c\u53d1\u73b0 $48$ \u4e00\u5faa\u73af\uff0c\u4e8e\u662f\u4f60\u5e26\u5165\u9a8c\u8bc1\u3002\n\n$$a^{3^{48}}\u2261a \\Leftrightarrow \\varphi(p)|3^{48}-1$$\n\n\u4f60\u6253\u5f00 $\\text{calc}$ \u53d1\u73b0\u8fd9\u662f\u5bf9\u7684\u3002\n\n\u4e8e\u662f\u4f60\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u6ce2\uff0c\u5f00\u4e00\u4e2a $\\text{sm}$ \u8868\u793a\u533a\u95f4\u548c\uff0c\u4e00\u4e2a $\\text{cnt}$ \u8868\u793a\u88ab\u64cd\u4f5c\u4e86\u51e0\u6b21\uff0c\u7136\u540e\u5f00 $48$ \u68f5\u7ebf\u6bb5\u6811\u5c31\u884c\u4e86\u3002\n\n\u5404\u79cd\u5fd8\u4e86\u53d6\u6a21\uff0c\u5927\u5927\u5730\u964d\u667a\u4e86\u3002\n\n```cpp\nconst int p=95542721;\ntemplate<class _Tp,class _tp>void add(_Tp&x,const _tp& y){((x+=y)>=p)&&(x-=p);}template<class _Tp,class _tp>_Tp Add(_Tp x,const _tp y){add(x,y);return x;}\ntemplate<class _Tp,class _tp>void sub(_Tp&x,const _tp&y){((x-=y)<0)&&(x+=p);}template<class _Tp,class _tp>_Tp Sub(_Tp x,const _tp y){sub(x,y);return x;}\ntemplate<class _Tp,class _tp>void mul(_Tp&x,const _tp&y){x=1ll*x*y%p;}template<class _Tp,class _tp>_Tp Mul(const _Tp x,const _tp y){return 1ll*x*y%p;}\ntemplate<class _Tp,class _tp>_Tp ksm(_Tp a,_tp b){_Tp ans(1);for(;b;b>>=1,mul(a,a))if(b&1)mul(ans,a);return ans;} \ntemplate<class _Tp>_Tp div2(_Tp a){if(a&1)a+=p;return a>>1;}\n#define maxn 400010\nint n,m,op,l,r;\nint sm[maxn][48];\nint uu[maxn];//tag\nvoid pushup(int x){\n\tfor(int i=0;i<48;i++)\n\tsm[x][i]=Add(sm[x<<1][(i+uu[x<<1])%48],sm[x<<1|1][(i+uu[x<<1|1])%48]);\n}\nvoid pushdown(int x){\n\tif(uu[x]){\n\t\tuu[x<<1]+=uu[x];\n\t\tuu[x<<1|1]+=uu[x];\n\t\tuu[x]=0;\n\t\tpushup(x);\n\t}\n}\nvoid build(int l,int r,int x=1){\n\tif(l==r){\n\t\tcin>>sm[x][0];sm[x][0]%=p;\n\t\tfor(int i=1;i<48;i++)sm[x][i]=Mul(sm[x][i-1],Mul(sm[x][i-1],sm[x][i-1]));\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(l,mid,x<<1),build(mid+1,r,x<<1|1);\n\tpushup(x);\n}\nvoid change(int x,int y,int l=1,int r=n,int o=1){\n\tif(x<=l&&r<=y){\n\t\tuu[o]++;\n\t\treturn;\n\t}\n\tpushdown(o);\n\tint mid=(l+r)>>1;\n\tif(x<=mid)change(x,y,l,mid,o<<1);\n\tif(y>mid)change(x,y,mid+1,r,o<<1|1);\n\tpushup(o);\n}\nint ask(int x,int y,int l=1,int r=n,int o=1){\n\tif(x<=l&&r<=y)return sm[o][uu[o]%48];\n\tpushdown(o);\n\tint mid=(l+r)>>1;\n\tint ans=0;\n\tif(x<=mid)add(ans,ask(x,y,l,mid,o<<1));\n\tif(y>mid)add(ans,ask(x,y,mid+1,r,o<<1|1));\n\treturn ans;\n}\nsigned main(){\n#ifndef ONLINE_JUDGE\n\tfreopen(\"testdata.in\",\"r\",stdin);\n#endif\n\tcin>>n;\n\tbuild(1,n,1);\n\tcin>>m;\n\twhile(m--){\n\t\tcin>>op>>l>>r;\n\t\tif(op==1)cout<<ask(l,r)<<endl;\n\t\telse change(l,r);\n\t}\n#ifndef ONLINE_JUDGE\n\tcerr<<endl<<(double)clock()/CLOCKS_PER_SEC;\n#endif\n}\n```",
        "postTime": 1631259196,
        "uid": 100325,
        "name": "peterwuyihong",
        "ccfLevel": 7,
        "title": "CF311D Interval Cubing \u8bb0\u5f55"
    },
    {
        "content": "\u6bcf\u6b21\u628a\u4e00\u6bb5\u533a\u95f4\u7684\u6307\u6570\u4e58 $3$\u3002$p$ \u662f\u7d20\u6570\uff0c\u6307\u6570\u53ef\u4ee5\u5bf9 $\\varphi(p)=p-1$ \u53d6\u819c\u3002\u53d6\u819c\u4e4b\u540e\uff0c\u6709\u957f\u5ea6\u4e3a $48$ \u7684\u5faa\u73af\u8282\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u7528\u5206\u5757\u8fdb\u884c\u7ef4\u62a4\u3002\u5177\u4f53\u5730\uff0c\u5bf9\u6bcf\u5757\u6c42\u51fa\u6574\u5757\u64cd\u4f5c $k \\in [0, 48)$ \u6b21\u4e4b\u540e\u6574\u5757\u7684\u548c\uff0c\u6563\u5757\u64cd\u4f5c\u65f6\u66b4\u529b\u91cd\u6784\u3002\u53d6\u5757\u957f\u4e3a $T$\uff0c\u5219\u6709 $48T=n/T$\uff0c\u5e73\u8861\u5f97\u5230 $T=\\sqrt{n/48}$ \u65f6\u6700\u4f18\u3002",
        "postTime": 1667724844,
        "uid": 120324,
        "name": "Yansuan_HCl",
        "ccfLevel": 7,
        "title": "[\u9898\u89e3] CF311D Interval Cubing"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://codeforces.com/problemset/problem/311/D)\n\n\u4e00\u822c\u6211\u4eec\u89c1\u5230\u8fd9\u79cd\u9898\u90fd\u4f1a\u60f3\u5230\u53d6\u7acb\u65b9\u64cd\u4f5c\u5728\u5269\u4f59\u7cfb\u4e0b\u4f1a\u6709\u5faa\u73af\u8282\uff0c\u4f46\u662f\u5c31\u7b97\u627e\u5230\u4e86\u6bcf\u4e2a\u6570\u7684\u5faa\u73af\u8282\uff0c\u8981\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u7684\u8bdd\u662f\u8981\u7ef4\u62a4\u5230\u8fd9\u4e9b\u5faa\u73af\u8282\u7684 $lcm$ \u7684\u3002\n\n\u6240\u4ee5\u6211\u4eec\u4e0d\u59a8\u8003\u8651\u8fd9\u4e2a\u5947\u602a\u7684 $95542721$ \u7684\u6027\u8d28\u3002\n\n\u4e00\u4e2a\u6570 $a$ \uff0c\u8fdb\u884c $k$ \u6b21\u64cd\u4f5c\u540e\u4f1a\u53d8\u4e3a $a^{3^k}$ \uff0c\u6839\u636e\u6b27\u62c9\u5b9a\u7406\uff0c\u5982\u679c $3^k \\equiv 1\\ (mod\\ \\varphi(p))$ \u5c31\u4f1a\u51fa\u73b0\u5faa\u73af\u8282\uff0c\u7ecf\u8fc7\u5de7\u5999\u7684\u8ba1\uff08da\uff09\u7b97\uff08biao\uff09\uff0c\u5f97\u5230 $k$ \u4e3a $48$ \u5c31\u6ee1\u8db3\u4e86\u6761\u4ef6\u3002\n\n\u81f3\u4e8e\u7ef4\u62a4\u5faa\u73af\u8282\uff0c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4 $48$ \u4e2a $sum$ \u5373\u53ef\uff0c\u5177\u4f53\u89c1\u4ee3\u7801\u3002\n\n## $Code$\n```cpp\n#include<iostream>\n#include<stdio.h>\n#define N 100005\n#define mo 95542721\n#define ls k<<1\n#define rs k<<1|1\n#define int long long\nusing namespace std;\ninline int read(){\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0' || ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9')x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\n\treturn x*f;\n}\nstruct segment_tree{\n\tint l,r,sum[50],lazy;\n}d[4*N];\nint n,a[N],tt[50];\nint MOD(int x){return x>=mo?x-mo:x;}\nvoid build(int k,int l,int r){\n\td[k].l=l,d[k].r=r;\n\tif(l==r){\n\t\td[k].sum[0]=a[l];\n\t\tfor(int i=1;i<48;++i)\n\t\t\td[k].sum[i]=d[k].sum[i-1]*d[k].sum[i-1]%mo*d[k].sum[i-1]%mo;\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tbuild(ls,l,mid),build(rs,mid+1,r);\n\tfor(int i=0;i<48;++i) d[k].sum[i]=MOD(d[ls].sum[i]+d[rs].sum[i]);\n}\ninline void rotate(int k,int v){\n\tfor(int i=0;i<v;++i) tt[i]=d[k].sum[i];\n\tfor(int i=v;i<48;++i) d[k].sum[i-v]=d[k].sum[i];\n\tfor(int i=48-v;i<48;++i) d[k].sum[i]=tt[i-(48-v)];\n}\ninline void pushdown(int k){\n\tif(!d[k].lazy) return;\n\trotate(ls,d[k].lazy),rotate(rs,d[k].lazy);\n\td[ls].lazy+=d[k].lazy,d[rs].lazy+=d[k].lazy,d[k].lazy=0;\n\tif(d[ls].lazy>=48) d[ls].lazy-=48;\n\tif(d[rs].lazy>=48) d[rs].lazy-=48;\n}\nvoid update(int k,int x,int y){\n\tif(x<=d[k].l && d[k].r<=y){\n\t\trotate(k,1);\n\t\t(d[k].lazy+=1)%=48;\n\t\treturn;\n\t}\n\tpushdown(k);\n\tint mid=d[k].l+d[k].r>>1;\n\tif(x<=mid) update(ls,x,y);\n\tif(mid+1<=y) update(rs,x,y);\n\tfor(int i=0;i<48;++i) d[k].sum[i]=MOD(d[ls].sum[i]+d[rs].sum[i]);\n}\nint query(int k,int x,int y){\n\tif(x<=d[k].l && d[k].r<=y) return d[k].sum[0];\n\tpushdown(k);\n\tint mid=d[k].l+d[k].r>>1,res=0;\n\tif(x<=mid) (res+=query(ls,x,y))%=mo;\n\tif(mid+1<=y) (res+=query(rs,x,y))%=mo;\n\treturn res;\n}\nsigned main(){\n\tn=read();\n\tfor(int i=1;i<=n;++i) a[i]=read();\n\tbuild(1,1,n);\n\tint m=read();\n\twhile(m--){\n\t\tint op=read(),l=read(),r=read();\n\t\tif(op==1) printf(\"%lld\\n\",query(1,l,r));\n\t\telse update(1,l,r);\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1634643702,
        "uid": 238861,
        "name": "xzzduang",
        "ccfLevel": 0,
        "title": "CF311D Interval Cubing"
    },
    {
        "content": "[\u9898\u4f20](https://www.luogu.com.cn/problem/CF311D)\n\n\n\u770b\u5230\u8fd9\u79cd\u5355\u4e2a\u6570\u503c\u4e0d\u65ad\u8fdb\u884c\u540c\u4e00\u64cd\u4f5c\u7684\u5927\u6982\u7387\u5c31\u6709\u5faa\u73af\u8282\u4e86\u3002\u3002\u3002\n\n\u6253\u8868\u51fa\u6765\u53d1\u73b0\u5faa\u73af\u957f\u5ea6 $48$\uff0c\u73c2\u662f\u4f60\u8fd8\u662f\u4e00\u7b79\u83ab\u5c55\u5462\uff1a\u82e5\u628a\u5b83\u4e22\u5230\u7ebf\u6bb5\u6811\u4e0a\uff0c\u533a\u95f4\u7acb\u65b9\u64cd\u4f5c\u76f4\u63a5\u6253\u4e2a\u6807\u8bb0\uff0c\u4f46\u662f $sum$ \u5c31\u65e0\u6cd5\u66f4\u65b0\uff0c\u600e\u4e48\u529e\uff1f\n\n\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u80af\u5b9a\u4e0d\u80fd\u53ea\u7ef4\u62a4\u4e00\u4e2a $sum$\uff0c\u8003\u8651\u8bb0 $sum_{k, i}$ \u4e3a\u6574\u4e2a\u533a\u95f4\u5728**\u6240\u6709\u64cd\u4f5c\u5b8c\u6210\u540e**\u518d\u53f3\u79fb $i$ \u6b21\u7684\u533a\u95f4\u548c\uff0c$cnt_k$ \u4e3a\u8be5\u533a\u95f4\u7684\u53f3\u79fb\u6807\u8bb0\uff08\u8fd8\u672a\u5bf9 $sum_{k}$ \u4fee\u6539\uff09\uff0c\u8003\u8651\u600e\u4e48\u5408\u5e76\uff1a\n\n$$\\large sum_{k, i}=sum_{lc, i+cnt_{lc}}+sum_{rc, i+cnt_{rc}}$$\n\n\u89e3\u91ca\uff1a\u7531\u4e8e $cnt_{lc}$ \u548c $cnt_{rc}$ \u90fd\u8fd8\u6ca1\u4e0b\u653e\uff0c\u6240\u4ee5\u9700\u8981\u90fd\u52a0\u4e0a\u3002\n\n\u90a3\u4e48\u8fd9\u6837\u5728\u67e5\u8be2\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8fd4\u56de $sum_{k, cnt_{k}}$ \u5373\u53ef\u3002\n\n\u6ce8\u610f\u5728 pushdown \u540e\uff0c\u7531\u4e8e\u6211\u4eec\u5728\u533a\u95f4\u7acb\u65b9\u7684\u65f6\u5019\u53ea\u5bf9 $cnt$ \u8fdb\u884c\u4e86\u4fee\u6539\uff0c\u6ca1\u6709\u4fee\u6539 $sum$\uff0c\u6240\u4ee5\u9700\u8981\u91cd\u65b0 pushup \u4e00\u904d\u3002\uff08\u5176\u5b9e\u4e5f\u73c2\u4ee5\u5728\u533a\u95f4\u4fee\u6539\u7684\u65f6\u5019\u91cd\u65b0 pushup\uff0c\u770b\u4e2a\u4eba\u4e60\u60ef\uff09\n\n\u590d\u6742\u5ea6 $O(48 n \\log n)$\u3002\n\n### Code\uff1a\n\n```cpp\n#include <stdio.h>\n#include <algorithm>\n#include <string.h>\n#include <cmath>\n#include <stdlib.h>\n#include <cctype>\nusing namespace std;\ntypedef long long ll;\nconst int INF=0x3f3f3f3f;\nconst int mo=95542721;\ninline int read(){\n\tchar ch=getchar();int x=0, f=1;\n\twhile(!isdigit(ch)) f=(ch=='-'?-1:f), ch=getchar();\n\twhile(isdigit(ch)) x=(x<<3)+(x<<1)+ch-'0', ch=getchar();\n\treturn x*f;\n}\ninline int ksm(int a, int b){\n\tint ret=1;\n\tfor(; b; b>>=1, a=1ll*a*a%mo)\n\t\tif(b&1) ret=1ll*ret*a%mo;\n\treturn ret;\n}\nconst int N=1e5+5;\nint n, m, a[N];\n#define ls k<<1\n#define rs k<<1|1\n#define mid (l+r>>1)\nint sum[N<<2][48], tag[N<<2];\nvoid pushup(int k){\n\tfor(int i=0; i<48; i++)\n\t\tsum[k][i]=(sum[ls][(i+tag[ls])%48]+sum[rs][(i+tag[rs])%48])%mo;\n}\nvoid upd(int k, int v){tag[k]=tag[k]+v;}\nvoid pushdown(int k){\n\tif(!tag[k]) return ;\n\tupd(ls, tag[k]), upd(rs, tag[k]);\n\ttag[k]=0;pushup(k);\n\treturn ;\n}\nvoid build(int k, int l, int r){\n\tif(l==r){\n\t\tsum[k][0]=a[l&r];\n\t\tfor(int i=1; i<48; i++)\n\t\t\tsum[k][i]=ksm(sum[k][i-1], 3);\n\t\treturn ;\n\t}\n\tbuild(ls, l, mid), build(rs, mid+1, r);\n\treturn pushup(k);\n}\nvoid modify(int k, int l, int r, int x, int y){\n\tif(x<=l&&r<=y) return upd(k, 1);pushdown(k);\n\tif(x<=mid) modify(ls, l, mid, x, y);\n\tif(mid<y) modify(rs, mid+1, r, x, y);\n\treturn pushup(k);\n}\nint query(int k, int l, int r, int x, int y){\n\tif(r<x||l>y) return 0;\n\tif(x<=l&&r<=y) return sum[k][tag[k]%48];pushdown(k);\n\treturn (query(ls, l, mid, x, y)+query(rs, mid+1, r, x, y))%mo;\n}\n#undef ls\n#undef rs\n#undef mid\nsigned main(){\n\tn=read();\n\tfor(int i=1; i<=n; i++) a[i]=read();\n\tbuild(1, 1, n);m=read();\n\tfor(int i=1; i<=m; i++){\n\t\tint opt=read(), l=read(), r=read();\n\t\tif(opt&1) printf(\"%d\\n\", query(1, 1, n, l, r));\n\t\telse modify(1, 1, n, l, r);\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1634458093,
        "uid": 341102,
        "name": "ReKoJ",
        "ccfLevel": 0,
        "title": "CF311D Interval Cubing"
    }
]