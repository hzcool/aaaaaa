[
    {
        "content": "\u6bd4\u8d5b\u7684\u65f6\u5019\u6ee1\u8111\u5b50\u865a\u6811 \u5c31\u6b7b\u6389\u4e86\n\n\u770b\u6765\u771f\u7684\u4e0d\u80fd\u5148\u5165\u4e3a\u4e3b\n\n\u8fd9\u79cd\u8be2\u95ee\u70b9\u96c6\u7684\uff0c\u9996\u5148\u8003\u8651\u5efa\u865a\u6811\uff0c\u7136\u540e\u6309\u5957\u8def\u8bbe$dp(x,i)$\u8868\u793a\u5c06\u4ee5$x$\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u7684\u5173\u952e\u70b9\u5206\u6210$i$\u7ec4\u7684\u65b9\u6848\u6570\uff0c\u90a3\u4e48\u4f60\u5f88\u5feb\u5c31\u4f1a\u53d1\u73b0\u8fd9\u73a9\u610f\u6839\u672c\u4e0d\u80fd\u8f6c\u79fb\uff0c\u56e0\u4e3a\u5b83\u4e0d\u662f\u6b63\u5e38\u7684\u80cc\u5305\u3002\n\n\u6362\u4e00\u4e2a\u601d\u8def\uff0c\u5982\u679c\u6211\u4eec\u8003\u8651\u5c06\u5173\u952e\u70b9\u6309$\\text{dfs}$\u5e8f\u6392\u5e8f\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u70b9$\\text{node}_i$\uff0c\u6240\u6709\u4e0d\u80fd\u8ddf\u5b83\u653e\u5728\u540c\u4e00\u7ec4\u91cc\u7684\u70b9\uff08\u4e5f\u5c31\u662f\u5b83\u5230\u6839\u7684\u8def\u5f84\u4e0a\u7684\u70b9\uff09\u90fd\u4f1a\u6392\u5728\u5b83\u524d\u9762\u3002\u4e0d\u59a8\u8bbe\u70b9$x$\u5230\u6839\u7684\u8def\u5f84\u4e0a\u7684\u5173\u952e\u70b9\u4e3a$f(x)$\uff0c\u8bbe$dp(i,j)$\u8868\u793a\u524d$i$\u4e2a\u70b9\u5206\u6210$j$\u7ec4\u7684\u65b9\u6848\u6570\uff0c\u90a3\u4e48\u5c31\u6709\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u7b2c\u4e8c\u7c7b\u65af\u7279\u6797\u6570\u7684\u8f6c\u79fb\uff1a\n\n$$dp(i,j)=\\max\\{j-f(\\text{node}_i),0\\}\\cdot dp(i-1,j)+dp(i-1,j-1)$$\n\n$f(x)$\u7684\u5904\u7406\u975e\u5e38\u7b80\u5355\uff1a\u5148\u628a\u6bcf\u4e2a\u70b9\u5728\u6811\u4e0a\u505a\u4e2a\u6807\u8bb0\uff0c\u7136\u540e\u67e5\u8be2$x$\u5230\u6839$r$\u7684\u8def\u5f84\u4e0a\u6709\u591a\u5c11\u4e2a\u6807\u8bb0\u5c31\u884c\u4e86\uff08\u4e0d\u8981\u5fd8\u4e86\u51cf\u53bb\u81ea\u5df1\uff09\uff0c\u6811\u5256+\u6811\u72b6\u6570\u7ec4\u5373\u53ef\u89e3\u51b3\u3002\n\n\u5904\u7406\u5b8c\u8be2\u95ee\u4e0d\u8981\u5fd8\u4e86\u6e05\u7a7a\n\n```cpp\n#include <cctype>\n#include <cstdio>\n#include <climits>\n#include <algorithm>\n\ntemplate <typename T> inline void read(T& x) {\n    int f = 0, c = getchar(); x = 0;\n    while (!isdigit(c)) f |= c == '-', c = getchar();\n    while (isdigit(c)) x = x * 10 + c - 48, c = getchar();\n    if (f) x = -x;\n}\ntemplate <typename T, typename... Args>\ninline void read(T& x, Args&... args) {\n    read(x); read(args...); \n}\ntemplate <typename T> void write(T x) {\n    if (x < 0) x = -x, putchar('-');\n    if (x > 9) write(x / 10);\n    putchar(x % 10 + 48);\n}\ntemplate <typename T> inline void writeln(T x) { write(x); puts(\"\"); }\ntemplate <typename T> inline bool chkmin(T& x, const T& y) { return y < x ? (x = y, true) : false; }\ntemplate <typename T> inline bool chkmax(T& x, const T& y) { return x < y ? (x = y, true) : false; }\n\nconst int maxn = 1e5 + 207;\nconst int maxm = 307;\nconst int mod = 1e9 + 7;\n\nint v[maxn << 1], head[maxn], next[maxn << 1], tot;\nint dep[maxn], size[maxn], top[maxn], son[maxn], fa[maxn], dfn[maxn], xys;\nint n, q;\n\ninline void ae(int x, int y) {\n    v[++tot] = y; next[tot] = head[x]; head[x] = tot;\n    v[++tot] = x; next[tot] = head[y]; head[y] = tot;\n}\nvoid dfs(int x) {\n    size[x] = 1; dep[x] = dep[fa[x]] + 1;\n    for (int i = head[x]; i; i = next[i])\n        if (v[i] != fa[x]) {\n            fa[v[i]] = x;\n            dfs(v[i]);\n            size[x] += size[v[i]];\n            if (size[v[i]] > size[son[x]]) son[x] = v[i];\n        }\n}\nvoid dfs(int x, int t) {\n    top[x] = t; dfn[x] = ++xys;\n    if (son[x]) dfs(son[x], t);\n    for (int i = head[x]; i; i = next[i])\n        if (v[i] != son[x] && v[i] != fa[x])\n            dfs(v[i], v[i]);\n}\n\nint s[maxn];\ninline void add(int x, int val) { for (; x <= n; x += x & -x) s[x] += val; }\ninline int sum(int l, int r) {\n    int ans = 0;\n    for (; r; r -= r & -r) ans += s[r];\n    for (--l; l; l -= l & -l) ans -= s[l];\n    return ans;\n}\n\ninline void mark(int x) { add(dfn[x], 1); }\ninline void del(int x) { add(dfn[x], -1); }\ninline int query(int x, int y) {\n    int ans = 0;\n    while (top[x] != top[y]) {\n        if (dep[top[x]] < dep[top[y]]) std::swap(x, y);\n        ans += sum(dfn[top[x]], dfn[x]);\n        x = fa[top[x]];\n    }\n    return ans + (dep[x] < dep[y] ? sum(dfn[x], dfn[y]) : sum(dfn[y], dfn[x]));\n}\n\nint dp[maxn][maxm];\nint f[maxn];\nint node[maxn], K, m, r;\n\ninline void clear() {\n    for (int i = 1; i <= K; ++i)\n        for (int j = 1, _end = std::min(i, m); j <= _end; ++j)\n            dp[i][j] = 0;\n    for (int i = 1; i <= K; ++i) {\n        f[node[i]] = 0;\n        del(node[i]);\n    }\n}\n\nint main() {\n    read(n, q);\n    for (int i = 1, x, y; i < n; ++i)\n        read(x, y), ae(x, y);\n    dfs(1); dfs(1, 1);\n    while (q--) {\n        read(K, m, r);\n        for (int i = 1; i <= K; ++i) {\n            read(node[i]);\n            mark(node[i]);\n        }\n        for (int i = 1; i <= K; ++i)\n            f[node[i]] = query(node[i], r) - 1;\n        std::sort(node + 1, node + K + 1, [](int a, int b) -> bool { return f[a] < f[b]; });\n        dp[1][1] = 1;\n        for (int i = 2; i <= K; ++i)\n            for (int j = 1, _end = std::min(i, m); j <= _end; ++j)\n                if (j - f[node[i]] >= 0)\n                    dp[i][j] = (1ll * dp[i - 1][j] * (j - f[node[i]]) % mod + dp[i - 1][j - 1]) % mod;\n                else\n                    dp[i][j] = dp[i - 1][j - 1];\n        int ans = 0;\n        for (int i = 1; i <= m; ++i)\n            if ((ans += dp[K][i]) >= mod) ans -= mod;\n        writeln(ans);\n        clear();\n    }\n    return 0;\n}\n```\n",
        "postTime": 1555829045,
        "uid": 72071,
        "name": "GKxx",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1111E \u3010Tree\u3011"
    },
    {
        "content": "\u540c\u6837\u53d1\u5e03\u4e8e\u6211\u7684[$\\tt CSDN$](https://blog.csdn.net/qq_42101694/article/details/108212827)\u535a\u5ba2\u3002\n\n# \u9898\u76ee\n[\u4f20\u9001\u95e8 to luogu](https://www.luogu.com.cn/problem/CF1111E)\n\n# \u601d\u8def\n\u663e\u7136\u662f\u865a\u6811\u3002\u6839\u636e\u5957\u8def\uff0c\u5b9a\u4e49\u72b6\u6001 $f(x,i)$ \u4e3a $x$ \u5b50\u6811\u5185\u7684\u6240\u6709\u70b9\u653e\u8fdb\u81f3\u591a $i$ \u4e2a\u76d2\u5b50\u3002\n\n\u53d1\u73b0\u4e0d\u662f\u5f88\u597d\u8f6c\u79fb\u3002\u8003\u8651\u8ba9\u72b6\u6001\u66f4\u4e25\u683c\uff0c\u8fd9\u6837\u6211\u4eec\u77e5\u9053\u7684\u4fe1\u606f\u66f4\u591a\u3002\u7528 $f(x,i)$ \u8868\u793a\uff0c$x$ \u5b50\u6811\u5185\u7684\u6240\u6709\u70b9\u653e\u8fdb __\u6070\u597d__ $i$ \u4e2a __\u4e0d\u540c\u7684__ \u76d2\u5b50\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u76d2\u5b50\u6709\u7f16\u53f7\u3002\u90a3\u4e48\u5c31\u53ef\u4ee5\u8f7b\u677e\u5f97\u5230\u8f6c\u79fb\n\n$$f(x,i)=\\prod_{y\\in son(x)}f(y,i)$$\n\n\u4e3a\u4f55\u662f\u8fd9\u4e2a\u5f0f\u5b50\uff1f\u56e0\u4e3a\u4e0d\u540c\u5b50\u6811\u5185\u7684\u70b9\u53ef\u4ee5\u653e\u5165\u4e00\u4e2a\u76d2\u5b50\uff0c\u6240\u4ee5\u76f4\u63a5\u5c06\u5bf9\u5e94\u7f16\u53f7\u7684\u76d2\u5b50\u5408\u5e76\u5373\u53ef\u3002\u4e3e\u6817\u5b50\uff1a\n\n\u5de6\u8fb9\u5b50\u6811\u51c6\u5907\u653e $[1],[2]$\uff08\u6ce8\u610f\uff0c\u8fd9\u548c $[2],[1]$ \u4e0d\u540c\uff09\uff0c\u800c\u53f3\u8fb9\u5b50\u6811\u653e $[],[3,4]$ \uff0c\u5408\u5e76\u8d77\u6765\u5c31\u662f $[1],[2,3,4]$ \u4e86\u3002\n\n\u5982\u679c $x$ \u81ea\u8eab\u662f\u4e2a\u7279\u6b8a\u70b9\u5462\uff1f\u663e\u7136\u53ea\u80fd\u81ea\u5df1\u653e\u4e00\u4e2a\u76d2\u5b50\u3002\u6240\u4ee5\u6700\u540e\u8fdb\u884c\u8f6c\u79fb\n\n$$f'(x,i)=i\\cdot f(x,i-1)$$\n\n\u5c31\u662f\u679a\u4e3e $x$ \u5728\u54ea\u4e2a\u76d2\u5b50\u4e2d\uff0c\u56e0\u4e3a\u76d2\u5b50\u662f\u4e0d\u540c\u7684\uff0c\u6240\u4ee5\u8fd9 $i$ \u4e2a\u7c7b\u522b\u662f\u4e0d\u91cd\u590d\u7684\u3002\n\n\u6700\u540e\u8f93\u51fa\u7b54\u6848\u7684\u65f6\u5019\u5c31\u6709\u95ee\u9898\u4e86\uff0c\u56e0\u4e3a\u5b9e\u9645\u4e0a\uff0c\u76d2\u5b50\u662f\u6ca1\u6709\u533a\u522b\u7684\u3002\u6211\u4eec\u5f97\u60f3\u529e\u6cd5\u9664\u4ee5\u4e00\u4e2a\u9636\u4e58\u3002__\u975e\u7a7a\u76d2\u5b50\u6570\u7684\u9636\u4e58__\u3002\n\n\u600e\u4e48\u7b97\u6070\u597d\u6709 $j$ \u4e2a\u975e\u7a7a\u76d2\u5b50\u7684\u60c5\u51b5\uff1f\u7b54\u6848\u662f __\u5bb9\u65a5__\u3002\u8bb0\u5176\u4e3a $g(j)$ \uff0c\u5219\n\n$$g(j)=\\sum_{i=0}^{j}(-1)^{i}{j\\choose i}f(x,j-i)$$\n\n\u5c31\u662f\u679a\u4e3e\u6709 $i$ \u4e2a\u76d2\u5b50\u662f\u7a7a\u7684\u3002\u8fd9\u4e2a\u590d\u6742\u5ea6\u662f $\\mathcal O(m^2)$ \u7684\u3002\n\n\u603b\u590d\u6742\u5ea6\u662f\u591a\u5c11\u5462\uff1f\u662f $\\sum m_i^2\\le\\max_m\\sum m_i\\le\\max_m\\sum k_i$ \u7684\uff0c\u4e5f\u5c31\u662f $\\mathcal O(mk)$ \u7684\uff0c\u6070\u597d\u548c $\\tt dp$ \u590d\u6742\u5ea6\u4e00\u6837\u3002\n\n# \u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\ntypedef long long int_;\ninline int readint(){\n\tint a = 0; char c = getchar(), f = 1;\n\tfor(; c<'0'||c>'9'; c=getchar())\n\t\tif(c == '-') f = -f;\n\tfor(; '0'<=c&&c<='9'; c=getchar())\n\t\ta = (a<<3)+(a<<1)+(c^48);\n\treturn a*f;\n}\n\nconst int MaxN = 100005;\nint n, m;\n\nstruct Edge{\n\tint to, nxt; Edge(){ }\n\tEdge(int T,int N){\n\t\tto = T, nxt = N;\n\t}\n};\nEdge e[MaxN<<1];\nint cntEdge, head[MaxN];\nvoid addEdge(int a,int b){\n\te[cntEdge] = Edge(b,head[a]);\n\thead[a] = cntEdge ++;\n}\n\nint fa[MaxN][20], dep[MaxN];\nint dfn[MaxN], dfsClock;\nvoid buildTree(int x,int pre = 0){\n\tdfn[x] = ++ dfsClock;\n\tfa[x][0] = pre;\n\tdep[x] = dep[pre]+1;\n\tfor(int j=0; j+1<20; ++j){\n\t\tif(fa[x][j] == 0) break;\n\t\tfa[x][j+1] = fa[fa[x][j]][j];\n\t}\n\tfor(int i=head[x]; ~i; i=e[i].nxt)\n\t\tif(e[i].to != pre)\n\t\t\tbuildTree(e[i].to,x);\n}\nint getLca(int a,int b){\n\tif(dep[a] < dep[b]) swap(a,b);\n\tfor(int j=19; ~j; --j)\n\t\tif((dep[a]-dep[b])>>j&1)\n\t\t\ta = fa[a][j];\n\tif(a == b) return a;\n\tfor(int j=19; ~j; --j)\n\t\tif(fa[a][j] != fa[b][j]){\n\t\t\ta = fa[a][j];\n\t\t\tb = fa[b][j];\n\t\t}\n\treturn fa[a][0];\n}\n\nint rt, all[MaxN];\nbool val[MaxN]; // \u662f\u5426\u4e3a\u7279\u6b8a\u70b9\nvector< int > v;\nbool cmp(const int &a,const int &b){\n\treturn dfn[a] < dfn[b];\n}\nvoid build(){\n\tint k = readint()+1;\n\tm = readint(), rt = readint();\n\tfor(int i=1; i<k; ++i){\n\t\tall[i] = readint();\n\t\tval[all[i]] = true;\n\t}\n\tall[k] = rt; // matter as well\n\tsort(all+1,all+k+1,cmp);\n\tk = unique(all+1,all+k+1)-all-1;\n\tv.resize(1), v[0] = all[1];\n\tcntEdge = 0; // head \u5fc5\u987b\u624b\u52a8\u8d4b\u503c\n\tfor(int i=2; i<=k; ++i){\n\t\thead[all[i]] = -1;\n\t\thead[getLca(all[i-1],all[i])] = -1;\n\t}\n\thead[all[1]] = -1; // \u522b\u6f0f\u4e86\n\tfor(int i=2; i<=k; ++i){\n\t\tint lca = getLca(all[i-1],all[i]);\n\t\twhile(!v.empty()){\n\t\t\tint x = v.back();\n\t\t\tif(dep[x] <= dep[lca])\n\t\t\t\tbreak; // \u4e0d\u9700\u8981\u518d\u5f39\u4e86\n\t\t\tv.pop_back(); int y = lca;\n\t\t\tif(!v.empty())\n\t\t\tif(dep[v.back()] > dep[lca])\n\t\t\t\ty = v.back();\n\t\t\taddEdge(x,y), addEdge(y,x);\n\t\t}\n\t\tif(v.empty() || v.back() != lca)\n\t\t\tv.push_back(lca);\n\t\tv.push_back(all[i]);\n\t}\n\twhile(!v.empty()){\n\t\tint x = v.back(); v.pop_back();\n\t\tif(v.empty()) break;\n\t\taddEdge(v.back(),x);\n\t\taddEdge(x,v.back());\n\t}\n}\n\nconst int Mod = 1e9+7;\nint dp[MaxN][301];\nvoid dfs(int x,int pre){\n\tfor(int j=0; j<=m; ++j)\n\t\tdp[x][j] = 1; // nothing\n\tfor(int i=head[x]; ~i; i=e[i].nxt){\n\t\tif(e[i].to == pre) continue;\n\t\tdfs(e[i].to,x);\n\t\tfor(int j=0; j<=m; ++j)\n\t\t\tdp[x][j] = 1ll*dp[x][j]*dp[e[i].to][j]%Mod;\n\t}\n\tif(val[x]){\n\t\tfor(int j=m; j; --j)\n\t\t\tdp[x][j] = 1ll*dp[x][j-1]*j%Mod;\n\t\tdp[x][0] = 0; // \u4e0d\u53ef\u80fd\u4e86\n\t\tval[x] = false; // \u987a\u4fbf\u6e05\u7a7a\n\t}\n}\n\nint jc[301]; // \u9884\u5904\u7406\u7684\u9636\u4e58\nint inv[301]; // \u9884\u5904\u7406\u7684\u9636\u4e58\u7684\u9006\u5143\nvoid prepare(){\n\tfor(int i=jc[0]=1; i<=300; ++i)\n\t\tjc[i] = 1ll*jc[i-1]*i%Mod;\n\tinv[0] = inv[1] = 1;\n\tfor(int i=2; i<=300; ++i)\n\t\tinv[i] = 1ll*(Mod-Mod/i)*inv[Mod%i]%Mod;\n\tfor(int i=2; i<=300; ++i)\n\t\tinv[i] = 1ll*inv[i]*inv[i-1]%Mod;\n}\nvoid solve(int x){\n\tint ans = 0;\n\tfor(int i=1; i<=m; ++i){\n\t\tint res = 0, now;\n\t\tfor(int j=0; j<=i; ++j){\n\t\t\tnow = 1ll*jc[i]*inv[j]%Mod;\n\t\t\tnow = 1ll*now*inv[i-j]%Mod;\n\t\t\tif(j&1) now = Mod-now;\n\t\t\tres += 1ll*now*dp[x][i-j]%Mod;\n\t\t\tres %= Mod;\n\t\t}\n\t\tres = 1ll*res*inv[i]%Mod;\n\t\tans = (ans+res)%Mod;\n\t}\n\tprintf(\"%d\\n\",ans);\n}\n\nint main(){\n\tprepare();\n\tn = readint(); int q = readint();\n\tfor(int i=1; i<=n; ++i)\n\t\thead[i] = -1;\n\tfor(int i=1,a,b; i<n; ++i){\n\t\ta = readint(), b = readint();\n\t\taddEdge(a,b), addEdge(b,a);\n\t}\n\tbuildTree(1); // whatever\n\twhile(q --)\n\t\tbuild(), dfs(rt,-1), solve(rt);\n\treturn 0;\n}\n```\n",
        "postTime": 1598315156,
        "uid": 123796,
        "name": "Damo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1111E \u3010Tree\u3011"
    },
    {
        "content": "\u4e00\u4e2a\u6bd4\u4ef7\u52a3\u7684\u6839\u53f7\u505a\u6cd5......\n\n\u9996\u5148\u8003\u8651\u6c42\u51fa $num_x$ \u8868\u793a $x$ \u5728 $r$ \u4e3a\u6839\u7684\u6811\u4e2d\u6709\u591a\u5c11\u4e2a\u7956\u5148\u662f\u5173\u952e\u70b9\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u53ef\u4ee5 $\\mathcal{O}(k\\log k+km)$ dp \u51fa\u3002\n\n\u5177\u4f53\u5c31\u662f\u5148\u7ed9 $num$ \u6392\u4e2a\u5e8f\u4fdd\u8bc1\u7956\u5148\u6bd4\u5b50\u5b59\u5148\u88ab\u8ba1\u7b97\u5230 dp \u72b6\u6001\u91cc\uff0c\u7136\u540e\u5c31\u662f\u4ee4 $dp_{i,j}$ \u8868\u793a\u524d $i$ \u4e2a\u70b9\u5206 $j$ \u7ec4\uff0c\u90a3\u4e48\u5373\u6709\u8f6c\u79fb $dp_{i,j}=dp_{i-1,j-1}+dp_{i-1,j}\\times \\max(j-num_i,0)$\uff0e\n\n\u7136\u540e\u6839\u53f7\u5206\u6cbb\uff0c\u8003\u8651 $k>\\sqrt{10^5}$ \u76f4\u63a5\u66b4\u529b dfs \u7edf\u8ba1\uff0c$k\\leq \\sqrt{10^5}$ \u5229\u7528 $\\mathcal{O}(n\\log n)-\\mathcal{O}(1)$ LCA\uff08ST \u8868\uff09\u53ef\u4ee5\u505a\u5230 $\\mathcal{O}(k^2)$ \u66b4\u529b\u7edf\u8ba1\uff08\u7528 $dis(x,y)+dis(y,z)=dis(x,z)$ \u6765\u5224\u65ad $y$ \u662f\u5426\u5728 $x\\to z$ \u4e0a\uff09\u3002\n\n\u90a3\u4e48\u590d\u6742\u5ea6\u5c31\u53ef\u4ee5\u505a\u5230 $\\mathcal{O}(n\\sqrt n+\\sum km)$\uff08\u5047\u8bbe $n,q,\\sum k$ \u540c\u9636\uff09\uff0e\n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<queue>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#include<ctime>\n#include<random>\n#include<assert.h>\n#define pb emplace_back\n#define mp make_pair\n#define fi first\n#define se second\n#define dbg(x) cerr<<\"In Line \"<< __LINE__<<\" the \"<<#x<<\" = \"<<x<<'\\n';\n#define dpi(x,y) cerr<<\"In Line \"<<__LINE__<<\" the \"<<#x<<\" = \"<<x<<\" ; \"<<\"the \"<<#y<<\" = \"<<y<<'\\n';\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int,int>pii;\ntypedef pair<ll,int>pli;\ntypedef pair<ll,ll>pll;\ntypedef pair<int,ll>pil;\ntypedef vector<int>vi;\ntypedef vector<ll>vll;\ntypedef vector<pii>vpii;\ntypedef vector<pil>vpil;\ntemplate<typename T>T cmax(T &x, T y){return x=x>y?x:y;}\ntemplate<typename T>T cmin(T &x, T y){return x=x<y?x:y;}\ntemplate<typename T>\nT &read(T &r){\n\tr=0;bool w=0;char ch=getchar();\n\twhile(ch<'0'||ch>'9')w=ch=='-'?1:0,ch=getchar();\n\twhile(ch>='0'&&ch<='9')r=r*10+(ch^48),ch=getchar();\n\treturn r=w?-r:r;\n}\ntemplate<typename T1,typename... T2>\nvoid read(T1 &x,T2& ...y){read(x);read(y...);}\nconst int mod=1000000007;\ninline void cadd(int &x,int y){x=(x+y>=mod)?(x+y-mod):(x+y);}\ninline void cdel(int &x,int y){x=(x-y<0)?(x-y+mod):(x-y);}\ninline int add(int x,int y){return (x+y>=mod)?(x+y-mod):(x+y);}\ninline int del(int x,int y){return (x-y<0)?(x-y+mod):(x-y);}\nint qpow(int x,int y){\n\tint s=1;\n\twhile(y){\n\t\tif(y&1)s=1ll*s*x%mod;\n\t\tx=1ll*x*x%mod;\n\t\ty>>=1;\n\t}\n\treturn s;\n}\nconst int N=100010;\nconst int B=350;\nint n,q,r;\nvi eg[N];\nint fac[N],inv[N];\nint d[B+10][B+10],in[B+10],f[B+10];\nvi tr[B+10];\nint g[N],vis[N];\nint dp[N][310];\nint lg[N<<1],dep[N],dfn[N],rk[N<<1],tot;\nint st[20][N<<1];\nint cmpd(int x,int y){\n\treturn dep[x]<dep[y]?x:y;\n}\nint LCA(int x,int y){\n\tint l=dfn[x],r=dfn[y];\n\tif(l>r)swap(l,r);\n\tint k=lg[r-l+1];\n\treturn cmpd(st[k][l],st[k][r-(1<<k)+1]);\n}\nint dis(int x,int y){\n\treturn dep[x]+dep[y]-2*dep[LCA(x,y)];\n}\nvoid dfs1(int x,int fa){\n\trk[dfn[x]=++tot]=x;dep[x]=dep[fa]+1;\n\tfor(auto v:eg[x])if(v!=fa){\n\t\tdfs1(v,x);\n\t\trk[++tot]=x;\n\t}\n}\nvoid dfs2(int x,int fa,int h){\n\tg[x]=h;\n\tfor(auto v:eg[x])if(v!=fa)dfs2(v,x,h+vis[x]);\n}\nsigned main(){\n\t#ifdef do_while_true\n//\t\tassert(freopen(\"data.in\",\"r\",stdin));\n//\t\tassert(freopen(\"data.out\",\"w\",stdout));\n\t#endif\n\tread(n,q);\n\tfac[0]=1;for(int i=1;i<=n;i++)fac[i]=1ll*fac[i-1]*i%mod;\n\tinv[n]=qpow(fac[n],mod-2);for(int i=n-1;~i;--i)inv[i]=1ll*inv[i+1]*(i+1)%mod;\n\tfor(int i=1,u,v;i<n;i++){\n\t\tread(u,v);\n\t\teg[u].pb(v);eg[v].pb(u);\n\t}\n\tdfs1(1,0);\n\tfor(int i=1;i<=tot;i++)st[0][i]=rk[i];\n\tfor(int i=2;i<=tot;i++)lg[i]=lg[i>>1]+1;\n\tfor(int i=1;i<20;i++)\n\t\tfor(int j=1;j+(1<<i)-1<=tot;j++)\n\t\t\tst[i][j]=cmpd(st[i-1][j],st[i-1][j+(1<<(i-1))]);\n\twhile(q--){\n\t\tint k,m,r;\n\t\tread(k,m,r);\n\t\tvi vec;\n\t\tfor(int i=1,x;i<=k;i++)read(x),vec.pb(x);\n\t\tif(k<=B){\n\t\t\tint fl=0,rt=0;\n\t\t\tfor(int i=0;i<k;i++)if(vec[i]==r)fl=1,rt=i;\n\t\t\tif(!fl)vec.pb(r),rt=k++;\n\t\t\tfor(int i=0;i<k;i++)vi().swap(tr[i]),in[i]=f[i]=0;\n\t\t\tfor(int i=0;i<k;i++)\n\t\t\t\tfor(int j=i+1;j<k;j++)\n\t\t\t\t\td[i][j]=d[j][i]=dis(vec[i],vec[j]);\n\t\t\tfor(int i=0;i<k;i++)\n\t\t\t\tfor(int j=0;j<k;j++)\n\t\t\t\t\tif(i!=j && d[rt][i]+d[i][j]==d[rt][j])\n\t\t\t\t\t\ttr[i].pb(j),++in[j];\n\t\t\tqueue<int>q;q.push(rt);\n\t\t\twhile(!q.empty()){\n\t\t\t\tint x=q.front();q.pop();\n\t\t\t\tfor(auto v:tr[x]){\n\t\t\t\t\t--in[v];\n\t\t\t\t\tif(!in[v]){\n\t\t\t\t\t\tf[v]=f[x]+1;\n\t\t\t\t\t\tq.push(v);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!fl){\n\t\t\t\t--k;\n\t\t\t\tfor(int i=0;i<k;i++)--f[i];\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tfor(auto x:vec)vis[x]=1;\n\t\t\tdfs2(r,0,0);\n\t\t\tfor(int i=0;i<k;i++)f[i]=g[vec[i]],vis[vec[i]]=0;\n\t\t}\n\t\tfor(int i=0;i<=k;i++)\n\t\t\tfor(int j=0;j<=i;j++)\n\t\t\t\tdp[i][j]=0;\n\t\tdp[0][0]=1;\n\t\tsort(f,f+k);\n\t\tfor(int i=1;i<=k;i++)\n\t\t\tfor(int j=0;j<=min(i,m);j++){\n\t\t\t\tdp[i][j]=j?dp[i-1][j-1]:0;\n\t\t\t\tif(j>f[i-1])cadd(dp[i][j],1ll*dp[i-1][j]*(j-f[i-1])%mod);\n\t\t\t}\n\t\tint ans=0;\n\t\tfor(int i=0;i<=m;i++)cadd(ans,dp[k][i]);\n\t\tcout << ans << '\\n';\n\t}\n    #ifdef do_while_true\n\t\tcerr<<'\\n'<<\"Time:\"<<1.0*clock()/CLOCKS_PER_SEC*1000<<\" ms\"<<'\\n';\n\t#endif\n\treturn 0;\n}\n```",
        "postTime": 1667556351,
        "uid": 223298,
        "name": "do_while_true",
        "ccfLevel": 8,
        "title": "\u300c\u9898\u89e3\u300dCodeforces 1111E Tree"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9898\u5bf9\u6362\u6839\u7684\u5904\u7406\u76f4\u63a5\u7528\u4e2aLCT\u65e0\u8111\u5904\u7406\u5373\u53ef\u2026\u2026\u5e76\u4e0d\u7528\u4ec0\u4e48\u7ebf\u6bb5\u6811\u2026\u2026\n\n\u9996\u5148\u6211\u770b\u5230\u8fd9\u9898\u7684\u7b2c\u4e00\u60f3\u6cd5\u5c31\u662f\uff0c\u8fd9\u4e0d\u5efa\u4e2a\u865a\u6811\uff0c\u7136\u540e\u5728\u5b50\u6811\u91cc\u8dd1\u4e2a\u6811\u5f62\u80cc\u5305\u4e0d\u5c31\u884c\u4e86\u5417\uff1f\u4f46\u662f\u8fd9\u4e2a\u5408\u5e76\u4e24\u68f5\u5b50\u6811\u5e76\u4e0d\u662f\u4e00\u822c\u7684\u5377\u79ef\u7684$a+b=c$\u7684\u5f62\u5f0f\u800c\u662f$a+b>=c$\u7684\u5f62\u5f0f\uff0c\u8fd9\u6837\u590d\u6742\u5ea6\u5c31\u7206\u70b8\u4e86\u2026\u2026\n\n\u8fd9\u9898\u7684\u6700\u91cd\u8981\u7684\u6027\u8d28\u5c31\u662f\u81ea\u5df1\u4e0d\u80fd\u548c\u7956\u5148\u5728\u540c\u4e00\u7ec4\u91cc\uff0c\u663e\u7136\uff0c\u4ed6\u7684\u7956\u5148\u4eec\u4e5f\u5206\u5c5e\u4e0d\u540c\u7684\u7ec4\uff0c\u7136\u540e\u6211\u4eec\u770b\u8fd9\u4e2ak\u4e2a\u70b9\u5206\u6210m\u7ec4\u548c\u7b2c\u4e8c\u7c7b\u65af\u7279\u6797\u6570\u5f88\u50cf\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e0d\u5728\u6811\u4e0adp\uff0c\u800c\u662f\u628a\u8fd9\u4e9b\u70b9\u63d0\u51fa\u6765\u7528\u4e00\u4e2a\u7c7b\u4f3c$dp[i][j]=j*dp[i-1][j]+dp[i-1][j-1]$\u53bb\u641e\uff0c\u5373\u8003\u8651\u65b0\u7684\u4e00\u4e2a\u70b9\u662f\u5426\u65b0\u5efa\u4e00\u4e2a\u7ec4\u8fd8\u662f\u653e\u5230\u5df2\u7ecf\u6709\u7684j\u7ec4\u4e2d\u7684\u4e00\u4e2a\u53bb\u3002\n\n\u90a3\u4e48\u5c31\u53ef\u4ee5\u8fd9\u6837\u505a\uff1a\u6211\u4eec\u4ee4\u6bcf\u4e2a\u70b9\u7684\u987a\u5e8f\u5fc5\u987b\u6392\u5728\u4ed6\u7956\u5148\u4e4b\u540e\uff0c\u7136\u540e$i$\u70b9\u6709$cnt$\u4e2a\u7956\u5148\u5728\u8be2\u95ee\u70b9\u5185\uff0c\u5c31\u76f8\u5f53\u4e8e\u524d\u9762\u6709$cnt$\u7ec4\u5206\u522b\u5305\u542b\u4e861\u4e2a\u7956\u5148\uff0ci\u4e0d\u80fd\u653e\u5230\u90a3\u91cc\u9762\u53bb\uff0c\u6240\u4ee5\u5c31\u662f$dp[i][j]$\u4e3a\u524di\u4e2a\u5206\u4e86j\u7ec4\u7684\u65b9\u6848\uff0c$dp[i][j]=(j-cnt)dp[i-1][j]+dp[i-1][j-1]$\u3002\n\n\u5173\u4e8e\u6362\u6839\u7684\u95ee\u9898\u8fd9\u4e2a\u5e76\u4e0d\u7528\u975e\u5f97\u6c42\u51fadfs\u5e8f\u641e\uff0c\u6211\u4eec\u5c31\u662f\u60f3\u6c42\u51fa\u8fd9\u4e2a\u70b9\u6709\u591a\u5c11\u4e2a\u88ab\u6807\u8bb0\u8fc7\u7684\u7956\u5148\uff0c\u4ee5\u53ca\u8ba9\u8fd9\u4e2a\u70b9\u6392\u5728\u7956\u5148\u4e4b\u540e\uff0c\u53ef\u4ee5\u7528\u4e2aLCT\u8fdb\u884c\u5355\u70b9\u52a0\u94fe\u4e0a\u6c42\u548c\uff0c\u7136\u540e\u6bcf\u4e2a\u70b9deep\u53ef\u4ee5\u901a\u8fc7splay\u7684size\u5224\u65ad\uff0c\u5c31\u6309deep\u6392\u5e8f\u5c31\u884c\u4e86\u3002\n\n\u53e6\u5916\u6211\u5f00\u59cb\u5728\u6392\u5e8f\u4e0a\u72af\u4e86\u4e2a\u9519\u5c31\u662f\u6211\u5728cmp\u7684\u65f6\u5019\u5224\u65ad\u4e86\u4e00\u4e0ba\u662f\u5426\u4e3ab\u7684\u7956\u5148\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528splay\u4e0a\u4e8c\u5206\u5224\u5b9a\uff0c\u4f46\u662f\u5982\u679c\u6ca1\u6709\u7956\u5148\u5173\u7cfb\u7684\u8bdd\u5c31\u6ca1\u6cd5\u6bd4\u8f83\u4e86\uff0c\u8fd9\u4e2a\u6392\u5e8f\u5728\u6b63\u786e\u6027\u4e0a\u5c31\u662f\u4e0d\u7a33\u5b9a\u7684\uff0c~~\u8fd8\u591a\u4e2alog~~\n\n\u4e0a\u4ee3\u7801~\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define ll long long\n#define p 1000000007\n#define isroot(_o) (_o!=ch[fa[_o]][0]&&_o!=ch[fa[_o]][1])\n#define opp(_o) (_o==ch[fa[_o]][1])\nusing namespace std;\nnamespace ywy{\n\tinline int get(){\n\t\tint n=0;char c;while((c=getchar())||23333){\n\t\t\tif(c>='0'&&c<='9')break;if(c=='-')goto s;\n\t\t}n=c-'0';while((c=getchar())||23333){\n\t\t\tif(c>='0'&&c<='9')n=n*10+c-'0';else return(n);\n\t\t}s:while((c=getchar())||23333){\n\t\t\tif(c>='0'&&c<='9')n=n*10-c+'0';else return(n);\n\t\t}\n\t}\n\tint ch[100001][2],fa[100001],val[100001],data[100001],stk[100001],size[100001];\n\tunsigned char bj[100001];\n\tinline void up(int tree){\n\t\tsize[tree]=1+size[ch[tree][0]]+size[ch[tree][1]];\n\t\tdata[tree]=val[tree]+data[ch[tree][0]]+data[ch[tree][1]];\n\t}\n\tint dp[100001][301];\n\tint ints[100001],deep[100001];\n\tinline void down(int tree){\n\t\tif(!bj[tree])return;bj[tree]=0;\n\t\tswap(ch[tree][0],ch[tree][1]);\n\t\tbj[ch[tree][0]]^=1;bj[ch[tree][1]]^=1;\n\t}\n\tinline void xuan(int me){\n\t\tint tree=fa[me],cjr=fa[tree];\n\t\tdown(cjr);down(tree);down(me);\n\t\tint op=opp(me),ls=ch[me][op^1];\n\t\tch[me][op^1]=tree;ch[tree][op]=ls;\n\t\tfa[ls]=tree;\n\t\tif(!isroot(tree))ch[cjr][opp(tree)]=me;\n\t\tfa[me]=cjr;fa[tree]=me;\n\t\tup(tree);up(me);\n\t}\n\tinline void splay(int tree){\n\t\tif(isroot(tree)){down(tree);return;}\n\t\tint sp=0,tmp=tree;\n\t\twhile(!isroot(tmp))stk[sp]=tmp,sp++,tmp=fa[tmp];\n\t\tdown(tmp);\n\t\twhile(sp)sp--,down(stk[sp]);\n\t\twhile(!isroot(tree)){\n\t\t\tint cjr=fa[tree];if(!isroot(cjr))xuan((opp(cjr)==opp(tree))?cjr:tree);xuan(tree);\n\t\t}\n\t\tup(tree);\n\t}\n\tinline void access(int tree){\n\t\tsplay(tree);down(tree);\n\t\tch[tree][1]=0;up(tree);\n\t\twhile(fa[tree]){\n\t\t\tint cjr=fa[tree];splay(cjr);down(cjr);\n\t\t\tch[cjr][1]=tree;up(cjr);splay(tree);\n\t\t}\n\t\tup(tree);\n\t}\n\tinline void makeroot(int tree){\n\t\taccess(tree);splay(tree);bj[tree]^=1;\n\t}\n\tinline void link(int a,int b){\n\t\tmakeroot(a);makeroot(b);fa[b]=a;\n\t}\n\tint rankof(int tree,int rk){\n\t\tif(rk<=size[ch[tree][0]])return(rankof(ch[tree][0],rk));\n\t\trk-=size[ch[tree][0]];\n\t\tif(rk==1)return(tree);rk--;\n\t\treturn(rankof(ch[tree][1],rk));\n\t}\n\tinline int cmp(const int &a,const int &b){\n\t\treturn(deep[a]<deep[b]);\n\t}\n\tinline void add(int a,int num){\n\t\tsplay(a);val[a]+=num;data[a]+=num;\n\t}\n\tvoid print(int num){\n\t\tif(num>=10)print(num/10);putchar(num%10+'0');\n\t}\n\tvoid ywymain(){\n\t\tint n=get(),q=get();\n\t\tfor(register int i=1;i<=n;i++)size[i]=1;\n\t\tfor(register int i=1;i<n;i++){\n\t\t\tint s=get(),t=get();link(s,t);\n\t\t}\n\t\twhile(q){\n\t\t\tq--;\n\t\t\tint k=get(),m=get(),rt=get();\n\t\t\tmakeroot(rt);\n\t\t\tfor(register int i=1;i<=k;i++){\n\t\t\t\tadd(ints[i]=get(),1);access(ints[i]);splay(ints[i]);deep[ints[i]]=size[ch[ints[i]][0]]+1;\n\t\t\t}\n\t\t\tsort(ints+1,ints+1+k,cmp);\n\t\t\tdp[0][0]=1;\n\t\t\tfor(register int i=1;i<=k;i++){\n\t\t\t\taccess(ints[i]);splay(ints[i]);\n\t\t\t\tint cnt=data[ints[i]]-1; \n\t\t\t\tfor(register int j=max(1,cnt+1);j<=i&&j<=m;j++){\n\t\t\t\t\tdp[i][j]=((ll)dp[i-1][j]*(ll)(j-cnt)+dp[i-1][j-1])%p;\n\t\t\t\t}\n\t\t\t}\n\t\t\tll ans=0;\n\t\t\tfor(register int i=1;i<=m;i++)ans=(ans+dp[k][i])%p\n\t\t\t;print(ans);putchar('\\n');\n\t\t\tfor(register int i=1;i<=k;i++){\n\t\t\t\tadd(ints[i],-1);for(register int j=1;j<=i&&j<=m;j++)dp[i][j]=0;\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tywy::ywymain();return(0);\n}\n```",
        "postTime": 1550887939,
        "uid": 125124,
        "name": "ywy_c_asm",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1111E \u3010Tree\u3011"
    },
    {
        "content": "\u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u7ed3\u70b9\u7684\u6811\uff0c\u56de\u7b54 $q$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u5b9a $k,m,r$ \u4ee5\u53ca $k$ \u4e2a\u7ed3\u70b9\u7f16\u53f7\uff0c\u6c42\u51fa\u4ee5 $r$ \u4e3a\u6839\u7684\u60c5\u51b5\u4e0b\uff0c\u628a $k$ \u4e2a\u7ed9\u5b9a\u70b9\u5206\u4e3a\u81f3\u591a $m$ \u7ec4\u70b9\uff0c\u540c\u7ec4\u70b9\u4e4b\u95f4\u4e0d\u5b58\u5728\u7956\u5148\u540e\u4ee3\u5173\u7cfb\u7684\u65b9\u6848\u6570\u3002\n\n$n,q,\\sum k,r\\leq 10^5$\uff0c$m\\leq 300$\u3002\n\n\u5e0c\u671b\u627e\u5230\u5355\u6b21 $O(mk)$ \u7684 dp\u3002\n\n\u8003\u8651\u4e00\u6b21 $r=1,k=n$ \u7684\u8be2\u95ee\uff0c\u5728\u6811\u4e0a dfs \u65f6\u8f6c\u79fb\uff0c\u8bbe $f_{i,j}$ \u8868\u793a\u8003\u8651\u4e86\u524d $i$ \u4e2a\u8bbf\u95ee\u7684\u70b9\uff0c\u5206\u4e86 $j$ \u7ec4\u7684\u65b9\u6848\u6570\u3002\u5bb9\u6613\u8f6c\u79fb $f_{i,j}=(j-dep_{id_i})f_{i-1,j}+f_{i-1,j-1}$\uff0c\u8981\u6c42 $j\\ge dep_i$\uff0c\u5176\u4e2d $dep_{rt}=0$\uff0c$dep_i$ \u8868\u793a $i$ \u7684\u7956\u5148\uff08\u4e0d\u542b\u81ea\u5df1\uff09\u7684\u4e2a\u6570\u3002\u76f8\u5f53\u4e8e\u59cb\u7ec8\u5bf9\u4e00\u4e2a\u8fde\u901a\u5b50\u6811\u6dfb\u52a0\u53f6\u5b50\u3002\u8fd9\u91cc\u76f8\u5f53\u4e8e\u662f\u6309\u7167 dfn \u4e3a\u987a\u5e8f\u8fdb\u884c\u8f6c\u79fb\u3002\n\n\u8003\u8651\u6269\u5c55\u5230 $r=1,k\\neq n$ \u7684\u60c5\u51b5\uff0c\u4f9d\u7136\u6309\u7167 dfn \u5e8f\u8f6c\u79fb\uff0c$f_{i,j}=(j-g_{id_i})f_{i-1,j}+f_{i-1,j-1}$\uff0c\u5176\u4e2d $g_u$ \u8868\u793a $u$ \u7684\u7956\u5148\u4e2d\u5173\u952e\u70b9\u7684\u4e2a\u6570\u3002\u53d1\u73b0\u201c\u6811\u201d\u7684\u7ed3\u6784\u88ab\u5f31\u5316\u4e86\uff0c\u505a\u7684\u66f4\u50cf\u662f\u56fa\u5b9a\u4e86\u67d0\u4e2a\u8f6c\u79fb\u987a\u5e8f\u7684\u5e8f\u5217 dp\u3002\u8fd9\u4e2a\u987a\u5e8f\u4ec5\u6709\u4e00\u4e2a\u8981\u6c42\uff1a\u4e00\u4e2a\u70b9\u88ab\u52a0\u5165\u505a dp \u65f6\u5b83\u7684\u7956\u5148\u5df2\u7ecf\u5b8c\u6210\u4e86\u8f6c\u79fb\uff0c\u5373\u8f6c\u79fb\u5f0f\u672c\u8d28\u53ea\u89c4\u907f\u4e86\u201c\u548c\u7956\u5148\u653e\u5728\u540c\u4e00\u7ec4\u201d\u7684\u60c5\u51b5\uff0c\u800c\u89c4\u907f\u201d\u548c\u5b50\u5b59\u653e\u5728\u540c\u4e00\u7ec4\u201c\u7684\u60c5\u51b5\u7531\u8f6c\u79fb\u987a\u5e8f\u6765\u5904\u7406\u3002\n\n\u8003\u8651\u6269\u5c55\u5230 $r\\neq 1$ \u7684\u60c5\u51b5\uff0c\u5931\u53bb\u4e86\"dfn\"\u8fd9\u4e2a\u4fe1\u606f\uff0c\u800c\u6839\u636e\u4e0a\u9762\u7684\u5206\u6790\uff0c\u53ea\u9700\u8981\u627e\u5230\u4e00\u4e2a\u8f6c\u79fb\u987a\u5e8f\uff0c\u6ee1\u8db3\u4e00\u4e2a\u70b9\u88ab\u52a0\u5165\u65f6\uff0c\u5176\u7956\u5148\u90fd\u88ab\u52a0\u5165\u4e86\u3002\u4e0d\u59a8\u6cbf\u7528 $g$ \u7684\u5b9a\u4e49\uff0c\u53d1\u73b0\u7956\u5148\u7684 $g$ \u4e00\u5b9a\u4e25\u683c\u5c0f\u4e8e\u81ea\u5df1\u7684\uff0c\u5219\u6309\u7167 $g$ \u4ece\u5c0f\u5f80\u5927\u52a0\u5165\u505a\u4e0a\u8ff0 dp\u3002\n\n\u6700\u540e\u8981\u5904\u7406\u7684\u95ee\u9898\u5c31\u662f\u600e\u4e48\u7b97 $g$\uff0c\u5373\u5355\u70b9\u52a0\uff0c\u94fe\u6c42\u548c\uff0c\u53ef\u4ee5\u7528 dfn+BIT+LCA 1log \u5b8c\u6210\u3002\n\n$O(\\sum k(m+\\log n))$\u3002[Submission](https://codeforces.com/contest/1111/submission/179007748)\u3002",
        "postTime": 1667432467,
        "uid": 447750,
        "name": "luogubot",
        "ccfLevel": 0,
        "title": "CF1111E"
    },
    {
        "content": "\u9898\u89e3\u91cc\u8c8c\u4f3c\u90fd\u662f\u4e8c\u7ef4 DP\uff0c\u4f46\u5176\u5b9e\u53ef\u4ee5\u4e00\u7ef4 DP\u3002\n\n\u5206\u7ec4\u65b9\u6848\u6570\u7a0d\u5fae\u6709\u70b9\u96be\u7b97\uff0c\u56e0\u4e3a $\\{\\{1\\},\\{2\\}\\}$ \u548c $\\{\\{2\\},\\{1\\}\\}$ \u662f\u4e00\u79cd\u5206\u7ec4\u65b9\u6848\u3002\u4e0d\u59a8\u8003\u8651\u7b97\u51fa\u6240\u6709 $f_i$ \u8868\u793a\u5c06\u6240\u6709\u5173\u952e\u70b9\u67d3\u4e0a\u989c\u8272 $[1,i]$\uff08\u6bcf\u79cd\u90fd\u88ab\u4f7f\u7528\uff09\uff0c\u4f7f\u5f97\u4e0d\u5b58\u5728\u4e00\u5bf9\u7956\u5148\u4e0e\u540e\u4ee3\u989c\u8272\u76f8\u540c\u7684\u65b9\u6848\u6570\u3002\n\n\u90a3\u4e48\u7b54\u6848\u5c31\u662f $\\sum\\limits_{i=0}^m \\dfrac{f_i}{i!}$\u3002\n\n\u4f46\u8fd9\u6837\u4ecd\u7136\u4e0d\u592a\u597d\u7b97\uff0c\u4e0d\u59a8\u7ee7\u7eed\u653e\u5bbd\u9650\u5236\uff0c\u6539\u4e3a\u7b97\u51fa $g_i$ \u8868\u793a\u5c06\u6240\u6709\u5173\u952e\u70b9\u67d3\u4e0a $[1,i]$ \u7684\u989c\u8272\uff0c\u4e0d\u8981\u6c42\u6bcf\u79cd\u90fd\u88ab\u4f7f\u7528\u7684\u65b9\u6848\u6570\u3002\n\n$g_p$ \u76f8\u5bf9\u662f\u597d\u6c42\u7684\u3002\u628a\u6839\u8f6c\u6210 $r$ \u540e\uff0c\u6211\u4eec\u4ece\u6d45\u5230\u6df1\u8003\u8651\u6bcf\u4e2a\u5173\u952e\u70b9\uff0c\u53ea\u9700\u8981\u8ba9\u6bcf\u4e2a\u70b9\u88ab\u8003\u8651\u65f6\uff0c\u4e0e\u5176\u7956\u5148\u989c\u8272\u90fd\u4e0d\u76f8\u540c\u5373\u53ef\u6ee1\u8db3\u9650\u5236\u3002\u5047\u8bbe $i$ \u5230\u6839\u6709 $t$ \u4e2a\u70b9\uff08\u4e0d\u5305\u542b $i$\uff09\u3002\u90a3\u4e48\u6839\u636e\u9650\u5236\uff0c\u8fd9 $t$ \u4e2a\u70b9\u989c\u8272\u4e92\u4e0d\u76f8\u540c\uff0c\u800c\u65e0\u8bba\u5b83\u4eec\u600e\u4e48\u67d3\u8272\uff0c$i$ \u70b9\u603b\u662f\u6709 $(p-t)$ \u79cd\u4e0e\u5b83\u4eec\u4e0d\u540c\u7684\u65b9\u6848\u3002\n\n\u6545\u53ef\u4ee5\u5f97\u51fa $g_p = \\prod\\limits_{v \\in S} (p-t_v)$\uff0c$S$ \u662f\u7ed9\u5b9a\u7684\u70b9\u96c6\u3002\n\n\u6c42\u51fa\u6240\u6709 $g$ \u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u5bb9\u65a5\u5f97\u5230 $f$\u3002\u5177\u4f53\u800c\u8a00\uff0c$f_i = g_i - \\sum\\limits_{j=0}^{i-1} \\dbinom{i}{j} f_j$\uff0c$i$ \u4ece $0 \\sim m$ \u904d\u5386\u5373\u53ef\u63a8\u51fa\u6240\u6709 $f$\u3002\n\n\u5728\u7b97 $g$ \u7684\u65f6\u5019\uff0c\u663e\u7136 $t$ \u76f8\u540c\u7684\u70b9\u53ef\u4ee5\u538b\u7f29\u5230\u4e00\u8d77\u7b97\u3002\u4e8e\u662f\u53ef\u4ee5 $O(m^2 \\log m)$ \u6c42\u51fa\u6240\u6709 $g$\u3002\n\n\u7b97 $t$ \u662f\u7ecf\u5178\u7684\u5355\u70b9\u4fee\u6539\uff0c\u94fe\u6c42\u548c\u3002\u7528 dfs \u5e8f + \u6811\u72b6\u6570\u7ec4\u53ef\u4ee5\u7b80\u5355 1log \u89e3\u51b3\u3002\n\n\u4e8e\u662f\u603b\u590d\u6742\u5ea6 $O(n + (\\sum k) \\log n + \\sum m^2 \\log m)$\u3002\n\n\u867d\u7136\u770b\u7740\u591a\u4e86\u4e2a $\\log$ \u6bd4\u8f83\u52a3\uff0c\u4f46\u4f60\u7a0d\u5fae\u5206\u6790\u4e00\u4e0b\u5c31\u4f1a\u53d1\u73b0\u590d\u6742\u5ea6\u5176\u5b9e\u4e0d\u9ad8\u4e8e $\\sum km$\u3002\n\n\u53ef\u80fd\u53ef\u4ee5\u7528\u591a\u9879\u5f0f\u79d1\u6280\u505a\u5230 $m \\log^? m$\uff0c\u4f46\u6211\u4e0d\u61c2\u8fd9\u65b9\u9762\uff0c\u4e8e\u662f\u6446\u70c2\u4e86\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define mod 1000000007\nusing namespace std;\nint n,q;\n\nint cnt;\nint head[100005];\nstruct eg{\n\tint to,nxt;\n}edge[200005];\n\nvoid make(int u,int v){\n\tedge[++cnt].to = v;\n\tedge[cnt].nxt = head[u];\n\thead[u] = cnt;\n}\nint to[20][100005],dep[100005],siz[100005],dfn[100005];\n\nvoid dfs1(int u,int f){\n\tto[0][u] = f;\n\tdep[u] = dep[f] + 1;\n\tdfn[u] = ++cnt;\n\tsiz[u] = 1;\n\tfor(int i = head[u];i;i = edge[i].nxt){\n\t\tint v = edge[i].to;\n\t\tif(v == f) continue;\n\t\tdfs1(v,u);\n\t\tsiz[u] += siz[v];\n\t}\n}\n\nint LCA(int u,int v){\n\tif(dep[u] < dep[v]) swap(u,v);\n\tfor(int i = 17;i >= 0;i--) if(dep[to[i][u]] >= dep[v]) u = to[i][u];\n\tif(u == v) return u;\n\tfor(int i = 17;i >= 0;i--){\n\t\tif(to[i][u] != to[i][v]){\n\t\t\tu = to[i][u];\n\t\t\tv = to[i][v];\n\t\t}\n\t}\n\treturn to[0][u];\n}\nint tree[100005];\n\n#define lowbit(x) (x & (-x))\n\nvoid add(int id,int v){\n\twhile(id <= n){\n\t\ttree[id] += v;\n\t\tid += lowbit(id);\n\t}\n}\n\nint qry(int id){\n\tint res = 0;\n\twhile(id >= 1){\n\t\tres += tree[id];\n\t\tid -= lowbit(id);\n\t}\n\treturn res;\n}\n\nint tag[100005];\n\nvoid modify(int u){//\u7ffb\u8f6c\u70b9 u \u7684\u72b6\u6001\n\tif(tag[u]){\n\t\tadd(dfn[u],-1);\n\t\tadd(dfn[u] + siz[u],1);\n\t}else{\n\t\tadd(dfn[u],1);\n\t\tadd(dfn[u] + siz[u],-1);\n\t}\n\ttag[u] ^= 1;\n}\n\nint query(int u,int v){\n\tint d = LCA(u,v);\n\t//printf(\"LCA of %d and %d=%d\\n\",u,v,d);\n\treturn qry(dfn[u]) + qry(dfn[v]) - 2 * qry(dfn[d]) + tag[d];\n}\nint S[100005],tmp[100005],rec[305];//\u5230 r \u8def\u5f84\u4e0a\u6709 i \u4e2a\u70b9\u7684\u6709 rec[i] \u4e2a\u70b9\nll C[305][305],fact[305],ifac[305],f[305];//f[i] \u5206\u4e3a i \u7ec4\u7684\u65b9\u6848\u6570\n\nll power(ll p,int k){\n\tll ans = 1;\n\twhile(k){\n\t\tif(k % 2 == 1) ans = ans * p % mod;\n\t\tp = p * p % mod;\n\t\tk /= 2;\n\t}\n\treturn ans;\n}\n\nvoid calc(int m){\n\tint p;//rec[i] \\neq 0 \u7684\u6700\u5927 i\n\tfor(int i = 0;i <= m;i++) if(rec[i]) p = i;\n\tfor(int i = 0;i <= m;i++) f[i] = 0;\n\n\tfor(int i = p + 1;i <= m;i++){\n\t\tf[i] = 1;\n\t\tfor(int j = 0;j <= p;j++) f[i] = f[i] * power(i - j,rec[j]) % mod;\n\t}\n\t//printf(\"array f:\\n\");\n\t//for(int i = 0;i <= m;i++) printf(\"%lld \",f[i]);\n\t//printf(\"\\n\");\n\tll ans = 0;\n\tfor(int i = 0;i <= m;i++){\n\t\tfor(int j = i + 1;j <= m;j++){\n\t\t\tf[j] -= f[i] * C[j][i] % mod;\n\t\t\tf[j] %= mod;\n\t\t}\n\t\tans = (ans + f[i] * ifac[i]) % mod;\n\t}\n\t//for(int i = 0;i <= m;i++) printf(\"%lld \",f[i]);\n\t//printf(\"\\n\");\n\tans = (ans + mod) % mod;\n\tprintf(\"%lld\\n\",ans);\n}\n\nint main(){\n\tfact[0] = ifac[0] = 1;\n\tfor(int i = 1;i <= 300;i++) fact[i] = fact[i - 1] * i % mod;\n\tfor(int i = 1;i <= 300;i++) ifac[i] = power(fact[i],mod - 2);\n\tfor(int i = 1;i <= 300;i++){\n\t\tC[i][0] = C[i][i] = 1;\n\t\tfor(int j = 1;j < i;j++) C[i][j] = (C[i - 1][j - 1] + C[i - 1][j]) % mod;\n\t}\n\tscanf(\"%d%d\",&n,&q);\n\tfor(int i = 1;i < n;i++){\n\t\tint u,v;\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tmake(u,v);make(v,u);\n\t}\n\tcnt = 0;\n\tdfs1(1,0);\n\t//for(int i = 1;i <= n;i++) printf(\"node %d siz %d fa %d dep %d dfn %d\\n\",i,siz[i],to[0][i],dep[i],dfn[i]);\n\t//printf(\"\\n\");\n\n\tfor(int i = 1;i <= 17;i++){\n\t\tfor(int j = 1;j <= n;j++){\n\t\t\tto[i][j] = to[i - 1][to[i - 1][j]];\n\t\t}\n\t}\n\tint k,m,r;\n\tfor(int i = 1;i <= q;i++){\n\t\tscanf(\"%d%d%d\",&k,&m,&r);\n\t\tfor(int j = 1;j <= k;j++) scanf(\"%d\",&S[j]);\n\t\tfor(int j = 1;j <= k;j++) modify(S[j]);\n\t\tfor(int j = 1;j <= k;j++) tmp[j] = query(S[j],r);\n\t\tfor(int j = 1;j <= k;j++) modify(S[j]);\n\t\t//for(int j = 1;j <= k;j++) printf(\"%d \",tmp[j]);\n\t\t//printf(\"\\n\");\n\n\t\tfor(int j = 1;j <= k;j++) rec[tmp[j] - 1]++;\n\t\tcalc(m);\n\t\tfor(int j = 1;j <= k;j++) rec[tmp[j] - 1]--;\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1657633332,
        "uid": 49776,
        "name": "chenxinyang2006",
        "ccfLevel": 0,
        "title": "CF1111E \u53e6\u89e3"
    },
    {
        "content": "\u770b\u7740\u597d\u50cf\u4e00\u9053\u865a\u6811\u9898\u3002\u3002\u3002\n\n\u8fd8\u662f\u8003\u8651\u9898\u76ee\u7684\u6027\u8d28\uff0c\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u5c06\u865a\u6811\u5efa\u51fa\u6765\uff0c\u90a3\u4e48\u8be5\u600e\u4e48\u505a\u3002\n\n\u6211\u4eec\u5c06\u865a\u6811\u4e2d\u7684\u6bcf\u4e2a\u70b9\u6309\u7167$dfn$\u5e8f\u6392\u5e8f\uff0c\u90a3\u4e48\u5982\u679c\u4e00\u4e2a\u70b9\u662f\u53e6\u4e00\u4e2a\u70b9\u7684\u7956\u5148\uff0c\u90a3\u4e48\u5c31\u4e00\u5b9a\u6392\u5728\u524d\u9762\u3002\n\n\u6211\u4eec\u5b9a\u4e49$f[i][j]$\u8868\u793a\u8003\u8651\u524d$i$\u4e2a\u70b9\uff0c\u5206\u6210$j$\u7ec4\u7684\u65b9\u6848\u6570\u3002\n\n$f[i][j]+=f[i-1][j-1]+f[i-1][j] \\times (j-cnt[i])$\n\n\u5176\u4e2d$cnt[i]$\u8868\u793a$i$\u7684\u7956\u5148\u4e2a\u6570\u3002\n\n\u4f46\u662f\u7531\u4e8e\u9898\u76ee\u4e2d\u7684\u6362\u6839\u64cd\u4f5c\u7684\u5b58\u5728\uff0c\u76f4\u63a5\u5efa\u865a\u6811\u6709\u4e00\u4e9b\u56f0\u96be\u3002\n\n\u8003\u8651\u5230\u672c\u9898\u865a\u6811\u7684\u4ef7\u503c\u5728\u4e8e\u6c42\u51fa\u4e00\u4e2a\u70b9\u5230\u6839\u8282\u70b9\u8def\u5f84\u7684\u5173\u952e\u70b9\u7684\u6570\u76ee\uff0c\u6839\u8282\u70b9\u4e0d\u56fa\u5b9a\u5219\u53d8\u6210\u4e24\u70b9\u95f4\u5173\u952e\u70b9\u7684\u6570\u76ee\uff0c\u53d1\u73b0\u53ef\u4ee5\u7528\u6811\u5256\u5904\u7406\u3002\n\n\u590d\u6742\u5ea6$nlogn+n \\times m$\n\n```cpp\nconst int N=1e5+5;\nconst int M=305;\nconst ll mod=1e9+7;\n\nint n,q,cnt,idx;\nint head[N],dep[N],anc[N],siz[N],son[N],top[N],s[N],id[N],dfn[N];\nll t[N],f[N][M];\nstruct edge\n{\n    int to,nxt;\n};\nedge e[N<<1];\n\nvoid add(int x,int y)\n{\n    e[++cnt].to=y;\n    e[cnt].nxt=head[x];\n    head[x]=cnt;\n}\nvoid link(int x,int y)\n{\n    add(x,y),add(y,x);\n}\nvoid dfs1(int x,int fa,int d)\n{\n    dep[x]=d,anc[x]=fa,siz[x]=1;\n    int maxson=0;\n    for(int i=head[x];i;i=e[i].nxt)\n    {\n        int v=e[i].to;\n        if(v==fa) continue;\n        dfs1(v,x,d+1);\n        siz[x]+=siz[v];\n        if(siz[v]>maxson) maxson=siz[v],son[x]=v;\n    }\n}\nvoid dfs2(int x,int topf)\n{\n    top[x]=topf,id[x]=++idx;\n    if(son[x]) dfs2(son[x],topf);\n    for(int i=head[x];i;i=e[i].nxt)\n    {\n        int v=e[i].to;\n        if(v==anc[x]||v==son[x]) continue;\n        dfs2(v,v);\n    }\n}\nint lowbit(int x)\n{\n    return x&-x;\n}\nvoid modify(int x,int z)\n{\n    while(x<=n) t[x]+=z,x+=lowbit(x);\n}\nint query(int x)\n{\n    int res=0;\n    while(x) res+=t[x],x-=lowbit(x);\n    return res;\n}\nint calc(int x,int y)\n{\n    int res=0;\n    while(top[x]!=top[y])\n    {\n        if(dep[top[x]]<dep[top[y]]) swap(x,y);\n        res+=query(id[x])-query(id[top[x]]-1);\n        x=anc[top[x]];\n    }\n    if(dep[x]<dep[y]) swap(x,y);\n    res+=query(id[x])-query(id[y]-1);\n    return res;\n}\nint main()\n{\n    fio();\n    gi(n,q);\n    for(int i=1,x,y;i<=n-1;++i) gi(x,y),link(x,y);\n    dfs1(1,0,1),dfs2(1,1);\n    while(q--)\n    {\n        int k,m,r;\n        gi(k,m,r);\n        for(int i=1;i<=k;++i) gi(s[i]),modify(id[s[i]],1);\n        for(int i=1;i<=k;++i) dfn[s[i]]=calc(s[i],r)-1;\n        sort(s+1,s+k+1,[](int x,int y){\n            return dfn[x]<dfn[y];\n        });\n        f[0][0]=1;\n        for(int i=1;i<=k;++i)\n        {\n            for(int j=1;j<=min(i,m);++j)\n            {\n                if(j<dfn[s[i]]) f[i][j]=f[i-1][j-1];\n                else f[i][j]=(f[i-1][j-1]+f[i-1][j]*(j-dfn[s[i]])%mod)%mod;\n            }\n        }\n        ll ans=0;\n        for(int i=1;i<=m;++i) ans=(ans+f[k][i])%mod;\n        print(ans),pc(10);\n\n        for(int i=1;i<=k;++i) modify(id[s[i]],-1);\n        for(int i=1;i<=k;++i) for(int j=1;j<=min(i,m);++j) f[i][j]=0;\n    }\n    end();\n}\n```",
        "postTime": 1583284092,
        "uid": 208081,
        "name": "MikukuOvO",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1111E \u3010Tree\u3011"
    },
    {
        "content": "# CF1111E Tree\n\n[LG\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/CF1111E)\n\n\u65e5\u5e38\u5b89\u5229[\u535a\u5ba2](https://www.cnblogs.com/cj-chd/p/10352143.html)\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\u70b9$x$\uff0c\u8bbe\u5b83\u7684\u7956\u5148\u5373\u4e0d\u80fd\u548c\u5b83\u653e\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u4e2d\u7684\u70b9\u7684\u4e2a\u6570\u4e3a$f[x]$\uff0c\u8bbe$dp[i][j]$\u8868\u793a\u524d$i$\u4e2a\u8be2\u95ee\u70b9\u653e\u5728$j$\u4e2a\u975e\u7a7a\u96c6\u5408\u4e2d\u7684\u65b9\u6848\u6570\uff0c\u6ce8\u610f\u8fd9\u91cc\u201c\u524d$i$\u4e2a\u201d\u7684\u610f\u4e49\uff0c\u8fd9\u8868\u793a\u4f1a\u5bf9\u7b2c$i$\u4e2a\u70b9\u9020\u6210\u5f71\u54cd\u7684\u70b9\u90fd\u5df2\u88ab\u8003\u8651\u8fc7\u4e86\uff0c\u8f6c\u79fb\u5c31\u662f$dp[i][j] = dp[i - 1][j] * (j - f[j]) + dp[i -1][j - 1]$\u3002\n\n\u4e0b\u9762\u7684\u95ee\u9898\u5c31\u662f\u600e\u4e48\u5904\u7406\u51fa$f$\u6570\u7ec4\u548c\u627e\u51faDP\u7684\u987a\u5e8f\u3002\u53d1\u73b0$f$\u6570\u7ec4\u53ef\u4ee5\u76f4\u63a5\u6811\u5256\uff1a\u5148\u5728\u7ebf\u6bb5\u6811\u4e0a\u628a\u6240\u6709\u8be2\u95ee\u70b9\u66f4\u65b0\u4e00\u904d\uff0c\u7136\u540e\u518d\u67e5\u8be2\u6bcf\u4e2a\u70b9\u5230\u5f53\u524d\u6839\u7684\u8def\u5f84\u4e0a\u8be2\u95ee\u70b9\u7684\u4e2a\u6570\uff0c$f[x]$\u5c31\u662f\u7ebf\u6bb5\u6811\u4e0a\u67e5\u8be2\u7684\u503c$- 1$\uff08\u4e0d\u7b97\u81ea\u5df1\uff09\u3002\u5904\u7406\u51fa$f$\u6570\u7ec4\u4e4b\u540e\uff0c\u53d1\u73b0\u7956\u5148\u7684$f$\u503c\u4e00\u5b9a\u6bd4\u5b50\u5b59\u7684$f$\u503c\u5c0f\uff0c\u90a3\u4e48\u76f4\u63a5\u5bf9$f$\u6570\u7ec4\u6392\u4e00\u8fb9\u5e8f\u5c31\u53ef\u4ee5DP\u4e86\u3002\n\nUPD:\u6539\u6b63\u4e86DP\u8f6c\u79fb\u7684\u624b\u8bef\n\n```cpp\n//written by newbiechd\n#include <cstdio>\n#include <cctype>\n#include <vector>\n#include <algorithm>\n#define R register\n#define I inline\n#define B 1000000\n#define L long long\nusing namespace std;\nconst int N = 100003, yyb = 1e9 + 7;\nchar buf[B], *p1, *p2;\nI char gc() { return p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, B, stdin), p1 == p2) ? EOF : *p1++; }\nI int rd() {\n    R int f = 0;\n    R char c = gc();\n    while (c < 48 || c > 57)\n        c = gc();\n    while (c > 47 && c < 58)\n        f = f * 10 + (c ^ 48), c = gc();\n    return f;\n}\nint a[N], s[N], fa[N], dep[N], siz[N], son[N], dfn[N], top[N], f[N], v[N << 2], n, tim;\nL dp[N], ans;\nvector <int> g[N];\nvoid dfs1(int x, int f) {\n    fa[x] = f, dep[x] = dep[f] + 1, siz[x] = 1;\n    for (R int i = 0, y, m = 0; i < s[x]; ++i)\n        if ((y = g[x][i]) ^ f) {\n            dfs1(y, x), siz[x] += siz[y];\n            if (siz[y] > m)\n                m = siz[y], son[x] = y;\n        }\n}\nvoid dfs2(int x, int t) {\n    dfn[x] = ++tim, top[x] = t;\n    if (son[x])\n        dfs2(son[x], t);\n    for (R int i = 0, y; i < s[x]; ++i)\n        if ((y = g[x][i]) ^ fa[x] && y ^ son[x])\n            dfs2(y, y);\n}\nvoid modify(int k, int l, int r, int x, int y) {\n    v[k] += y;\n    if (l == r)\n        return ;\n    R int p = k << 1, q = p | 1, m = l + r >> 1;\n    if (x <= m)\n        modify(p, l, m, x, y);\n    else\n        modify(q, m + 1, r, x, y);\n}\nint tquery(int k, int l, int r, int x, int y) {\n    if (x <= l && r <= y)\n        return v[k];\n    R int p = k << 1, q = p | 1, m = l + r >> 1, o = 0;\n    if (x <= m)\n        o += tquery(p, l, m, x, y);\n    if (m < y)\n        o += tquery(q, m + 1, r, x, y);\n    return o;\n}\nint query(int x, int y) {\n    R int o = 0;\n    while (top[x] ^ top[y]) {\n        if (dep[top[x]] < dep[top[y]])\n            swap(x, y);\n        o += tquery(1, 1, n, dfn[top[x]], dfn[x]), x = fa[top[x]];\n    }\n    if (dep[x] > dep[y])\n        swap(x, y);\n    return o + tquery(1, 1, n, dfn[x], dfn[y]);\n}\nint main() {\n    R int Q, k, m, rt, i, j, x, y, flag;\n    n = rd(), Q = rd();\n    for (i = 1; i < n; ++i)\n        x = rd(), y = rd(), g[x].push_back(y), g[y].push_back(x);\n    for (i = 1; i <= n; ++i)\n        s[i] = g[i].size();\n    dfs1(1, 0), dfs2(1, 1);\n    while (Q--) {\n        k = rd(), m = rd(), rt = rd(), ans = 0, flag = 0;\n        for (i = 1; i <= k; ++i)\n            a[i] = rd(), modify(1, 1, n, dfn[a[i]], 1);\n        for (i = 1; i <= k; ++i) {\n            f[i] = query(a[i], rt) - 1;\n            if (f[i] >= m)\n                flag = 1;\n        }\n        for (i = 1; i <= k; ++i)\n            modify(1, 1, n, dfn[a[i]], -1), dp[i]  = 0;\n        if (flag) {\n            printf(\"0\\n\");\n            continue;\n        }\n        sort(f + 1, f + k + 1), dp[0] = 1;\n        for (i = 1; i <= k; ++i)\n            for (j = min(i, m); ~j; --j) {\n                if (j <= f[i])\n                    dp[j] = 0;\n                dp[j] = (dp[j] * (j - f[i]) + dp[j - 1]) % yyb;\n            }\n        for (j = 1; j <= k; ++j)\n            ans = (ans + dp[j]) % yyb;\n        printf(\"%I64d\\n\", ans);\n    }\n    return 0;\n}\n\n```",
        "postTime": 1549333917,
        "uid": 91933,
        "name": "newbiechd",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1111E \u3010Tree\u3011"
    },
    {
        "content": "[\u6211\u7684\u535a\u5ba2](https://www.cnblogs.com/Memory-of-winter/p/10357755.html)\n\n**\u9898\u76ee\u5927\u610f\uff1a**\u7ed9\u4e00\u68f5$n(n\\leqslant10^5)$\u4e2a\u70b9\u7684\u6811\uff0c\u6709$q(q\\leqslant10^5)$\u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u51fa$k,m,r$\u8868\u793a\u628a\u4e00\u4e0b$k$\u4e2a\u70b9\u5206\u6210\u4e0d\u8d85\u8fc7$m$\u7ec4\uff0c\u4f7f\u5f97\u5728\u4ee5$r$\u4e3a\u6839\u7684\u60c5\u51b5\u4e0b\uff0c\u7ec4\u5185\u7684\u4efb\u610f\u4e24\u4e2a\u7ed3\u70b9\u4e0d\u5b58\u5728\u7956\u5148\u5173\u7cfb\u3002$\\sum k\\leqslant10^5,m\\leqslant300$\n\n**\u9898\u89e3\uff1a**\u9488\u5bf9\u4e00\u6b21\u8be2\u95ee\uff0c\u53ef\u4ee5\u60f3\u5230\u4e00\u4e2a$DP$\uff0c$f_{i,j}$\u8868\u793a\u5904\u7406\u5230\u7b2c$i$\u4e2a\u70b9\uff08\u5047\u8bbe\u4e3a$u$\uff09\uff0c$u$\u7684\u7956\u5148\u90fd\u5df2\u7ecf\u5904\u7406\u5b8c\uff0c\u8fd9$i$\u4e2a\u70b9\u653e\u5230$j$\u7ec4\u7684\u65b9\u6848\u6570\u3002$f_{i,j}=f_{i-1,j-1}+f_{i-1,j-father_u}$\uff0c$father_u$\u8868\u793a\u8fd9$k$\u4e2a\u70b9\u4e2d$u$\u7684\u7956\u5148\u7684\u4e2a\u6570\u3002\n\n\u73b0\u5728\u8003\u8651\u5982\u4f55\u5904\u7406$DP$\u987a\u5e8f\uff0c\u53d1\u73b0\u53ef\u4ee5\u6df1\u5ea6\u7531\u6d45\u5230\u6df1\u5904\u7406\uff0c$dfs$\u5e8f\u4e5f\u662f\u53ef\u4ee5\u7684\u3002\u800c\u540e\u518d\u8003\u8651\u5982\u4f55\u5904\u7406$father$\uff0c\u6211\u60f3\u5230\u4e86\u51e0\u79cd\u5199\u6cd5\uff1a\n\n1. \u7528\u6811\u72b6\u6570\u7ec4\uff0c\u7ed9\u5b50\u6811\u52a0\uff0c\u7136\u540e\u67e5\u8be2\u9700\u8981\u7684\u70b9\uff0c\u8fd9\u79cd\u5199\u6cd5\u56e0\u4e3a\u6362\u6839\u9700\u8981\u5206\u7c7b\u8ba8\u8bba\uff0c\u590d\u6742\u5ea6$O(k\\log_2n)$\u3002\n2. \u6811\u5256\u540e\u5355\u70b9\u52a0\uff0c\u8be2\u95ee\u9700\u8981\u7684\u70b9\u5230\u6839\u7684\u548c\uff08\u8fd9\u79cd\u5199\u6cd5\u5728\u5199\u4e4b\u524d\u88ab\u6211\u4ee5\u4e3a\u9700\u8981\u5206\u7c7b\u8ba8\u8bba\uff09\uff0c\u590d\u6742\u5ea6$O(k\\log_2^2n)$\u3002\n3. \u5efa\u865a\u6811\uff0c\u76f4\u63a5$dfs$\uff0c\u590d\u6742\u5ea6$O(k\\log_2k)$\u3002\n\n\u6211\u5199\u7684\u65f6\u5019\u4e0d\u60f3\u5206\u7c7b\u8ba8\u8bba\uff0c\u5c31\u9009\u62e9\u4e86\u7b2c$3$\u79cd\uff0c\u5728\u6211\u4ea4\u7684\u65f6\u5019\u6210\u529f\u8dd1\u5230$rank$\u5012\u4e00\u3002\u5199\u9898\u89e3\u7684\u65f6\u5019\u7a81\u7136\u53d1\u73b0\u8fd9\u79cd\u5199\u6cd5\u4f3c\u4e4e\u590d\u6742\u5ea6\u6700\u4f18\u79c0\uff1f~~\u81ea\u5e26\u5927\u5e38\u6570~~\n\n\n\n**C++ Code\uff1a**\n\n```cpp\n#include <algorithm>\n#include <cstdio>\n#include <iostream>\n#define maxn 100010\nconst int mod = 1e9 + 7;\ninline void reduce(int &x) { x += x >> 31 & mod; }\n\nint head[maxn], cnt;\nstruct Edge {\n\tint to, nxt;\n} e[maxn << 1];\ninline void addedge(int a, int b) {\n\te[++cnt] = (Edge) { b, head[a] }; head[a] = cnt;\n\te[++cnt] = (Edge) { a, head[b] }; head[b] = cnt;\n}\n\nnamespace Tree {\n\tint sz[maxn], dep[maxn], fa[maxn];\n\tint dfn[maxn], out[maxn], top[maxn], idx;\n#define f top\n\tint find(int x) { return x == f[x] ? x : (f[x] = find(f[x])); }\n#undef f\n\tvoid dfs(int u) {\n\t\tint son = 0; top[u] = u;\n\t\tdfn[u] = ++idx, sz[u] = 1;\n\t\tfor (int i = head[u], v; i; i = e[i].nxt) {\n\t\t\tv = e[i].to;\n\t\t\tif (v != fa[u]) {\n\t\t\t\tdep[v] = dep[u] + 1, fa[v] = u;\n\t\t\t\tdfs(v), sz[u] += sz[v];\n\t\t\t\tif (sz[v] > sz[son]) son = v;\n\t\t\t}\n\t\t}\n\t\tout[u] = idx; if (son) top[son] = u;\n\t}\n\tinline int LCA(int x, int y) {\n\t\twhile (top[x] != top[y]) {\n\t\t\tif (dep[top[x]] > dep[top[y]]) x = fa[top[x]];\n\t\t\telse y = fa[top[y]];\n\t\t}\n\t\treturn dep[x] < dep[y] ? x : y;\n\t}\n}\nusing Tree::dfn;\nusing Tree::out;\n\nint n, q, k, m, r;\n\nint Mark[maxn], f[305], idx;\ninline bool cmp(int x, int y) { return dfn[x] < dfn[y]; }\n\nvoid dfs(int u, int fa = 0, int num = 0) {\n\tif (Mark[u]) {\n\t\t++idx;\n\t\tfor (int i = std::min(m, idx); ~i; --i) {\n\t\t\tif (i > num) f[i] = (static_cast<long long> (i - num) * f[i] + f[i - 1]) % mod;\n\t\t\telse f[i] = 0;\n\t\t}\n\t\t++num;\n\t}\n\tfor (int i = head[u], v; i; i = e[i].nxt) {\n\t\tv = e[i].to;\n\t\tif (v != fa) dfs(v, u, num);\n\t}\n\n\thead[u] = Mark[u] = 0;\n}\n\nvoid solve() {\n\tstatic int List[maxn << 1], tot, S[maxn], top;\n\tstd::cin >> k >> m >> r;\n\tfor (int i = 0; i < k; ++i) {\n\t\tstd::cin >> List[i];\n\t\tMark[List[i]] = 1;\n\t}\n\ttot = k;\n\tif (!Mark[r]) List[tot++] = r;\n\n\tstd::sort(List, List + tot, cmp);\n\tfor (int i = tot - 1; i; --i) List[tot++] = Tree::LCA(List[i], List[i - 1]);\n\ttot = (std::sort(List, List + tot, cmp), std::unique(List, List + tot) - List);\n\ttop = 0;\n\tfor (int I = 0, i = *List; I < tot; i = List[++I]) {\n\t\twhile (top && out[S[top]] < dfn[i]) --top;\n\t\tif (top) addedge(S[top], i);\n\t\tS[++top] = i;\n\t}\n\n\tf[idx = 0] = 1, dfs(r);\n\tint ans = 0;\n\tfor (int i = 1; i <= m; ++i) reduce(ans += f[i] - mod);\n\tstd::cout << ans << '\\n';\n\n\tcnt = 0;\n\t__builtin_memset(f, 0, m + 1 << 2);\n}\n\nint main() {\n\tstd::ios::sync_with_stdio(false), std::cin.tie(0), std::cout.tie(0);\n\tstd::cin >> n >> q;\n\tfor (int i = 1, a, b; i < n; ++i) {\n\t\tstd::cin >> a >> b;\n\t\taddedge(a, b);\n\t}\n\tTree::dfs(1);\n\tfor (int i = 1; i <= n; ++i) Tree::find(i);\n\t__builtin_memset(head, 0, n + 1 << 2), cnt = 0;\n\n\twhile (q --> 0) solve();\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1549706731,
        "uid": 22072,
        "name": "Memory_of_winter",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1111E \u3010Tree\u3011"
    }
]