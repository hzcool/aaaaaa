[
    {
        "content": "\u8fd9\u9898\u7684\u6570\u636e\u8303\u56f4\u975e\u5e38\u5c0f\uff0c\u56e0\u6b64\u662f\u53ef\u4ee5\u5b57\u7b26\u4e32hash\u4e71\u641e\u4e00\u6ce2\u7684\uff0c\u4f46\u6211\u89c9\u5f97\u8fd9\u6837\u7684\u8bdd\uff0c\u8fd9\u9898\u5c31\u51fa\u7684\u4e00\u70b9\u610f\u4e49\u90fd\u6ca1\u6709\u4e86\uff0c\u4e3a\u4e86\u53d1\u6325\u8fd9\u9898\u7684\u4ef7\u503c\uff0c\u6211\u4eec\u628a\u5b83\u5f53\u505a|s|\u22645000000\u7684\u9898\u76ee\u6765\u505a\n\n\u628a\u5b83\u5f00\u5230\u4e86\u8fd9\u4e2a\u8303\u56f4\uff0c\u90a3\u80af\u5b9a\u5c31\u662f\u8981\u7ebf\u6027\u7684\u505a\u6cd5\u4e86\uff0c\u6211\u4eec\u8003\u8651\u4f7f\u7528\u56de\u6587\u81ea\u52a8\u673a\n\n\u5bf9\u4e8e\u56de\u6587\u81ea\u52a8\u673a\u4e0a\u6bcf\u4e2a\u7ed3\u70b9p\uff0c\u8ba1\u7b97\u5176\u51fa\u73b0\u7684\u6b21\u6570cnt[p]\uff0c\u4ee5\u53ca\u957f\u5ea6\u5c0f\u4e8elen[p]/2\u7684\u6700\u957f\u56de\u6587\u540e\u7f00g[p]\n\n\u53ef\u4ee5\u5728\u6bcf\u6b21\u63d2\u5165\u5b8c\u4e4b\u540e\u5bf9cnt[last]+1\uff0c\u5168\u90e8\u63d2\u5165\u5b8c\u4e86\u518d\u6cbffail\u6811\u4e0a\u4f20\uff0c\u8fd9\u6837\u53ef\u4ee5O(n)\u6c42\u51facnt\u6570\u7ec4\n\n\u8bbef[p]\u8868\u793a\u56de\u6587\u4e32p\u662f\u51e0\u9636\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n- f[p]=1  ,  len[p]/2\u2260len[g[p]]\n\n- f[p]=f[g[p]]+1  ,  len[p]/2=len[g[p]]\n\n\u8f6c\u79fb\u987a\u5e8f\u5e94\u8be5\u6309\u7167\u70b9\u7f16\u53f7\u9012\u589e\uff0c\u56e0\u4e3ap\u603b\u662f\u51fa\u73b0\u5728g[p]\u540e\u9762\n\n\u90a3\u4e48\u6211\u4eec\u679a\u4e3ep\uff0c\u8ba9ans[f[p]]+=cnt[p]\uff0c\u7531\u4e8ek\u9636\u56de\u6587\u4e32\u5fc5\u5b9a\u662f1~k-1\u9636\u56de\u6587\u4e32\uff0c\u6240\u4ee5\u6211\u4eec\u5bf9ans\u6570\u7ec4\u6c42\u4e00\u904d\u540e\u7f00\u548c\u5c31\u5f97\u5230\u4e86\u6700\u7ec8\u7b54\u6848\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int MAXN=50010;\nchar ss[MAXN];\nint s[MAXN],n;\nint ch[MAXN][26],sz;\nint fail[MAXN],lst;\nint len[MAXN],cnt[MAXN];\nint g[MAXN],f[MAXN];\nlong long ans[MAXN];\n\nint newnode(int l){len[++sz]=l;return sz;}\n\nvoid init()\n{\n    sz=-1;\n    n=lst=0;\n    newnode(0);\n    newnode(-1);\n    fail[0]=1;\n    s[0]=-1;\n}\n\nint find(int p)\n{\n    while(s[n]!=s[n-len[p]-1]) p=fail[p];\n    return p;\n}\n\nvoid insert(int c)\n{\n    s[++n]=c;\n    int cur=find(lst);\n    if(!ch[cur][c])\n    {\n        int now=newnode(len[cur]+2);\n        fail[now]=ch[find(fail[cur])][c];\n        if(len[now]<=2)\n            g[now]=fail[now];\n        else\n        {\n            int p=g[cur];\n            while(s[n]!=s[n-len[p]-1]||(len[p]+2)*2>len[now]) p=fail[p];\n            g[now]=ch[p][c];\n        }\n        ch[cur][c]=now;\n    }\n    lst=ch[cur][c];\n    cnt[lst]++;\n}\n\nint main()\n{\n    scanf(\"%s\",ss);\n    init();\n    int l=strlen(ss);\n    for(int i=0;i<l;i++)\n        insert(ss[i]-'a');\n    for(int i=sz;i>=2;i--)\n        cnt[fail[i]]+=cnt[i];\n    for(int i=2;i<=sz;i++)\n    {\n        if(len[i]/2==len[g[i]])\n            f[i]=f[g[i]]+1;\n        else f[i]=1;\n        ans[f[i]]+=cnt[i];\n    }\n    for(int i=l;i>=1;i--)\n        ans[i]+=ans[i+1];\n    for(int i=1;i<=l;i++)\n        printf(\"%lld\\n\",ans[i]);\n    return 0;\n}\n```",
        "postTime": 1527594087,
        "uid": 20158,
        "name": "Ebola",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF835D \u3010Palindromic characteristics\u3011"
    },
    {
        "content": "\u548c\u5df2\u6709\u7684\u4e00\u7bc7\u56de\u6587\u81ea\u52a8\u673a\u7684\u89e3\u6cd5\u4e0d\u540c\uff0c\u8fd9\u91cc\u7ed9\u51fa\u7684\u662f\u7b80\u5355\u7684 $n\\leq 5000 $ \u7684\u89e3\u6cd5\uff0c\u505a\u6cd5\u662f dp\u3002\n\n\u9898\u610f\uff1a\n\n\u7ed9\u4f60\u4e00\u4e2a\u4e32\uff0c\u8ba9\u4f60\u6c42\u51fa $k$ \u9636\u56de\u6587\u5b50\u4e32\u6709\u591a\u5c11\u4e2a\u3002\u5176\u4e2d\uff1a\n\n1. \u5982\u679c\u4e00\u4e2a\u5b57\u4e32\u662f $k$ \u9636\u56de\u6587\uff0c\u90a3\u4ed6\u4e00\u5b9a\u8fd8\u662f $k-1$ \u9636\u56de\u6587\u3002\n2. \u5982\u679c\u4e00\u4e2a\u4e32\u662f $k$ \u9636\u56de\u6587\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4e32\u9700\u8981\u6ee1\u8db3\uff1a\u5b83\u672c\u662f\u662f\u56de\u6587\u7684\u4e14\u4ed6\u7684\u5de6\u534a\u90e8\u5206\u662f $k-1$ \u56de\u6587\u7684\uff08\u5982\u679c\u957f\u5ea6\u662f\u5947\u6570\uff0c\u5219\u5de6\u534a\u90e8\u5206\u957f\u5ea6\u5411\u4e0b\u53d6\u6574\uff09\u3002\n\n---\n\n\u9898\u76ee\u4e2d $n\\leq 5000$\uff0c\u76f4\u63a5\u8003\u8651\u4e8c\u7ef4 $dp$ \u3002\n\n\u8bbe $dp[i][j]$ \u8868\u793a $s[i...j]$ \u7684\u56de\u6587\u9636\u6570\uff0c\u82e5\u4e3a $0$ \u5219\u4e0d\u662f\u56de\u6587\u4e32\u3002\n\n\u8003\u8651\u4ece $dp[i+1][j-1]$ \u5230 $dp[i][j]$ \u7684\u8f6c\u79fb\uff1a\n\n\u82e5 $s[i] \\not = s[j] $ \u6216\u8005 $dp[i+1][j-1]=0$ \u90a3\u4e48 $dp[i][j]=0$ \u3002\n\n\u5426\u5219 $dp[i][j]=dp[i][i+(i-j+1)/2-1]+1$ \u3002\uff08\u7b49\u4e8e\u5de6\u534a\u90e8\u5206\u7684\u9636\u6570 $+1$ \uff09\u3002\n\n\u77e5\u9053\u8f6c\u79fb\uff0c\u6700\u540e\u8bb0\u5f97\u641e\u4e2a\u524d\u7f00\u548c\u5c31\u597d\u4e86\uff0c\u8fd9\u91cc\u662f\u6838\u5fc3\u4ee3\u7801\u3002\n\n```cpp\nint main(){\n    scanf(\"%s\",s+1);n=strlen(s+1);\n    for(int i=1;i<=n;++i) dp[i][i]=1,ans[1]++;\n    for(int len=2;len<=n;++len)\n    for(int i=1,j=i+len-1;i+len-1<=n;++i,ans[dp[i][j]]+=(bool)dp[i][j],j=i+len-1)\n    if(s[i]!=s[j]||i+1<=j-1&&dp[i+1][j-1]==0) dp[i][j]=0;\n    else dp[i][j]=dp[i][i+len/2-1]+1;\n    for(int i=n;i>=1;--i) ans[i]+=ans[i+1];\n    for(int i=1;i<=n;++i) printf(\"%d \",ans[i]);\n}\n```",
        "postTime": 1611913348,
        "uid": 288460,
        "name": "xzggzh1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF835D \u3010Palindromic characteristics\u3011"
    },
    {
        "content": "\u5728 [\u535a\u5ba2\u56ed](https://www.cnblogs.com/2020gyk080/p/16130111.html) \u9605\u8bfb\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u4f53\u9a8c\u3002\n\n## \u505a\u6cd5\u4e00\uff1a\u5b57\u7b26\u4e32\u54c8\u5e0c\n\n\u66b4\u529b\u679a\u4e3e\u5b50\u4e32\uff0cHash \u5224\u65ad\u4e24\u8fb9\u662f\u5426\u53ef\u884c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2 \\log n)$\u3002\n\n## \u505a\u6cd5\u4e8c\uff1aDP\n\n[\u8fd9\u7bc7\u6587\u7ae0](https://www.luogu.com.cn/blog/xzggzh/solution-cf835d) \u5199\u7684\u5f88\u6e05\u695a\u3002\n\n## \u505a\u6cd5\u4e09\uff1aPAM\n\n\u5f53\u6570\u636e\u8303\u56f4 $1 \\leq |s| \\leq 5000000$ \u65f6\uff0c\u524d\u4e24\u79cd\u65b9\u6cd5\u662f\u8fc7\u4e0d\u53bb\u7684\uff0c~~\u80fd\u8fc7\u53bb\u4e5f\u53ef\u4ee5\u88ab Hack~~\u3002\u6240\u4ee5\u6211\u4eec\u8003\u8651\u7ebf\u6027\u7684\u505a\u6cd5\uff0c\u800c PAM \u5728\u63d2\u5165\u4e4b\u540e\u4e0a\u4f20 $fail$ \u6811\uff0c\u4f7f $cnt$ \u6570\u7ec4\u53ef\u4ee5 $O(n)$ \u6c42\u51fa\u3002\n\n\u8bbe $g_p$ \u8868\u793a\u957f\u5ea6\u5c0f\u4e8e $\\dfrac{len_p}{2}$ \u7684\u6700\u957f\u56de\u6587\u540e\u7f00\uff0c$f_p$ \u8868\u793a\u56de\u6587\u4e32 $\\text{p}$ \u7684\u9636\u6570\uff0c\u6613\u5f97\u4ee5\u4e0b\u7ed3\u8bba\uff1a\n\n$$\n\\begin{cases}\n f_p=1 & \\text{ if } \\dfrac{len_p}{2} \\neq len_{g_{p}} \\\\\n f_p=f_{g_{p}}+1 & \\text{ otherwise } \n\\end{cases}\n$$\n\n\u7edf\u8ba1\u7b54\u6848\u65f6\uff0c\u679a\u4e3e $p$\uff0c\u4ee4 $ans_{f_p}+=cnt_p$\uff0c\u6700\u7ec8\u7b54\u6848\u5c31\u662f\u5bf9 $ans$ \u6570\u7ec4\u6c42\u51fa\u540e\u7f00\u548c\u3002\n\n```cpp\nnamespace LZX\n{\n    using namespace std;\n    const int MAXN=5000005;\n    int s[MAXN],n,ch[MAXN][26],idx,fail[MAXN],last,len[MAXN],cnt[MAXN],g[MAXN],f[MAXN];\n    long long ans[MAXN];\n    char str[MAXN];\n    int s_PAM_newnode(int l)\n    {\n        len[++idx]=l;\n        return idx;\n    }\n    void s_PAM_clear()\n    {\n        idx=-1;\n        n=last=0;\n        s_PAM_newnode(0);\n        s_PAM_newnode(-1);\n        fail[0]=1;\n        s[0]=-1;\n        return;\n    }\n    int s_PAM_getfail(int p)\n    {\n        while(s[n]^s[n-len[p]-1])\n        {\n            p=fail[p];\n        }\n        return p;\n    }\n    void s_PAM_insert(int awa)\n    {\n        int p,c,now;\n        s[++n]=awa;\n        p=s_PAM_getfail(last);\n        if(!ch[p][awa])\n        {\n            c=s_PAM_newnode(len[p]+2);\n            fail[c]=ch[s_PAM_getfail(fail[p])][awa];\n            if(len[c]<=2)\n            {\n                g[c]=fail[c];\n            }\n            else\n            {\n                now=g[p];\n                while(s[n]^s[n-len[now]-1]||(len[now]+2)*2>len[c])\n                {\n                    now=fail[now];\n                }\n                g[c]=ch[now][awa];\n            }\n            ch[p][awa]=c;\n        }\n        last=ch[p][awa];\n        cnt[last]++;\n        return;\n    }\n    int _main()\n    {\n        int l;\n        scanf(\"%s\",str);\n        l=strlen(str);\n        s_PAM_clear();\n        for(int i=0;i<l;i++)\n        {\n            s_PAM_insert(str[i]-'a');\n        }\n        for(int i=idx;i>=2;i--)\n        {\n            cnt[fail[i]]+=cnt[i];\n        }\n        for(int i=2;i<=idx;i++)\n        {\n            if(len[i]/2==len[g[i]])\n            {\n                f[i]=f[g[i]]+1;\n            }\n            else\n            {\n                f[i]=1;\n            }\n            ans[f[i]]+=1ll*cnt[i];\n        }\n        for(int i=l;i;i--)\n        {\n            ans[i]+=ans[i+1];\n        }\n        for(int i=1;i<=l;i++)\n        {\n            printf(\"%lld \",ans[i]);\n        }\n        printf(\"\\n\");\n        return 0;\n    }\n}\n```",
        "postTime": 1649656930,
        "uid": 470638,
        "name": "Steven_lzx",
        "ccfLevel": 5,
        "title": "CF835D Palindromic characteristics \u9898\u89e3"
    },
    {
        "content": "\u4e00\u9053\u5f88\u9002\u5408\u7ec3\u624b\u7684\u56de\u6587\u81ea\u52a8\u673a\uff08PAM\uff09\u7ec3\u4e60\u9898\u3002  \n&nbsp;\n\n### \u601d\u8def \n\u7531\u56de\u6587\u4e32\u7684\u6027\u8d28\u5f97\u51fa\uff0c\u82e5\u4e00\u4e2a\u56de\u6587\u4e32 $S$ \u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a $\\left\\lfloor\\dfrac{|S|}{2}\\right\\rfloor$ \u7684\u56de\u6587\u540e\u7f00 $T$ \uff0c\u5219 $S$ \u62e5\u6709\u4e00\u4e2a\u7684\u4e0e\u540e\u7f00\u4e00\u81f4\u7684\u56de\u6587\u524d\u7f00\uff0c\u5373 $T$\u3002\u8bbe $T$ \u7684\u9636\u6570\u4e3a $x$\uff0c\u5219 $S$ \u7684\u9636\u6570\u4e3a $x+1$ \u3002  \n\u6839\u636e\u56de\u6587\u81ea\u52a8\u673a\u7684\u6027\u8d28\uff0c\u53ef\u4ee5\u901a\u8fc7 $fail$ \u6307\u9488\u627e\u5230\u957f\u5ea6\u6070\u597d\u4e3a\u5f53\u524d\u56de\u6587\u4e32\u957f\u5ea6\u4e00\u534a\u7684\u56de\u6587\u540e\u7f00\uff0c\u5219\u53ef\u4ee5\u5f97\u5230\u5f53\u524d\u56de\u6587\u4e32\u7684\u9636\u6570\u3002  \n&nbsp;  \n&nbsp;\n \n\u8fd8\u6709\u51e0\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\uff1a  \n1. \u6709\u4e9b\u56de\u6587\u4e32\u5728\u6bcd\u4e32\u4e2d\u591a\u6b21\u51fa\u73b0\uff0c\u9700\u8981\u91cd\u590d\u8ba1\u7b97\u3002\u5904\u7406\u65f6\u53ef\u4ee5\u5229\u7528 $fail$ \u6307\u9488\u6307\u5411\u5f53\u524d\u56de\u6587\u4e32\u6700\u957f\u975e\u81ea\u8eab\u56de\u6587\u540e\u7f00\u7684\u7279\u70b9\uff0c\u53e0\u52a0\u8be5\u56de\u6587\u540e\u7f00\u7684\u51fa\u73b0\u6b21\u6570\uff08\u5f53\u524d\u56de\u6587\u4e32\u51fa\u73b0\u65f6\uff0c\u8be5\u56de\u6587\u540e\u7f00\u4e5f\u8ddf\u7740\u51fa\u73b0\uff09\uff0c\u4ee5\u8ba1\u7b97\u6bcf\u4e2a\u56de\u6587\u4e32\u51fa\u73b0\u7684\u6b21\u6570\uff1b\n```cpp\ninline void insert(int c,int id)\n{\n    ......;\n    sum[last]++;   //\u5f53\u524d\u56de\u6587\u4e32\u51fa\u73b0\u6b21\u6570+1\n}\t\ninline void sort()\n{\n    for(int i=cnt;i>=2;i--)   //\u5229\u7528fail\u6307\u9488\u5f80\u56de\u8ba1\u7b97\uff0c\u9632\u6b62\u9057\u6f0f \n    {\n        sum[p[i].fail] += sum[i];\n    }\n    ......;\n}\n```  \n2. \u82e5\u5f53\u524d\u56de\u6587\u4e32\u6ca1\u6709\u957f\u5ea6\u6070\u597d\u4e3a\u81ea\u8eab\u4e00\u534a\u7684\u56de\u6587\u540e\u7f00\uff0c\u5219\u5f53\u524d\u56de\u6587\u4e32\u7684\u9636\u6570\u4e3a $1$ \u3002\n```cpp\nfor(int i=2;i<=cnt;i++)\n{\n    int tmp = i;\n    while(p[tmp].len*2>p[i].len)  //\u5982\u679c\u5f53\u524d\u56de\u6587\u540e\u7f00\u7684\u957f\u5ea6\u5927\u4e8e\u56de\u6587\u4e32\u7684\u4e00\u534a \n    {\n        tmp = p[tmp].fail;\n    }\n    if(p[tmp].len==p[i].len/2)    //\u56de\u6587\u4e32\u957f\u5ea6\u6709\u5947\u6709\u5076 \n    {\n        tot[i] = tot[tmp]+1;      //\u7d2f\u52a0\u9636\u6570 \n    }\n    else tot[i] = 1;              //\u5de6\u534a\u90e8\u5206\u4e0d\u4e3a\u56de\u6587\u4e32\uff0c\u5219\u9636\u6570\u4e3a1 \n    ans[tot[i]] += sum[i];        //\u56de\u6587\u4e32\u53ef\u80fd\u591a\u6b21\u51fa\u73b0\n}\n```\n3.  \n> \u4e00\u4e2a\u4e32\u5982\u679c\u662f $k$ \u9636\u56de\u6587\u4e32\uff0c\u5b83\u4e5f\u662f $k-1$ \u9636\u56de\u6587\u4e32\u3002  \n\n\u6ce8\u610f\u7528\u540e\u7f00\u548c\u7684\u65b9\u6cd5\u7d2f\u52a0\u7b54\u6848\u3002\n```cpp\nfor(int i=len;i>=1;i--)\n{\n    ans[i] += ans[i+1];\n}\n```  \n&nbsp;  \n&nbsp;\n\n## $Code$\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn=5e4+5;\nconst int maxm=30;\nint n;\nint tot[maxn],sum[maxn],ans[maxn];\nchar str[maxn];\nstruct node\n{\n    int fail,len,e[maxm];\n};\nstruct PAM\n{\n    int cnt = 1,last = 0;\n    int s[maxn];\n    node p[maxn];\n    inline PAM()\n    {\n        s[0] = '#';\n        p[0].fail = 1;\n        p[1].len = -1;\n    }\n    \n    inline void insert(int c,int id)\n    {\n        s[id] = c;\n        while(s[id-p[last].len-1]!=s[id]) last = p[last].fail;\n        if(!p[last].e[c])\n        {\n            p[++cnt].len = p[last].len+2;\n            int tmp = p[last].fail;\n            while(s[id-p[tmp].len-1]!=s[id]) tmp = p[tmp].fail;\n            p[cnt].fail = p[tmp].e[c];\n            p[last].e[c] = cnt;\n        }\n        last = p[last].e[c];\n        sum[last]++;   //\u5f53\u524d\u56de\u6587\u4e32\u51fa\u73b0\u6b21\u6570+1\n    }\n    \n    inline void sort()\n    {\n        for(int i=cnt;i>=2;i--)   //\u5229\u7528fail\u6307\u9488\u5f80\u56de\u8ba1\u7b97\uff0c\u9632\u6b62\u9057\u6f0f \n        {\n            sum[p[i].fail] += sum[i];\n        }\n        for(int i=2;i<=cnt;i++)\n        {\n            int tmp = i;\n            while(p[tmp].len*2>p[i].len)  //\u5982\u679c\u5f53\u524d\u56de\u6587\u540e\u7f00\u7684\u957f\u5ea6\u5927\u4e8e\u56de\u6587\u4e32\u7684\u4e00\u534a \n            {\n                tmp = p[tmp].fail;\n            }\n            if(p[tmp].len==p[i].len/2)    //\u56de\u6587\u4e32\u957f\u5ea6\u6709\u5947\u6709\u5076 \n            {\n                tot[i] = tot[tmp]+1;      //\u7d2f\u52a0\u9636\u6570 \n            }\n            else tot[i] = 1;              //\u5de6\u534a\u90e8\u5206\u4e0d\u4e3a\u56de\u6587\u4e32\uff0c\u5219\u9636\u6570\u4e3a1 \n            ans[tot[i]] += sum[i];        //\u56de\u6587\u4e32\u53ef\u80fd\u591a\u6b21\u51fa\u73b0\n        }\n    }\n} pam;\nint main()\n{\n    scanf(\"%s\",str+1);\n    int len = strlen(str+1);\n    for(int i=1;i<=len;i++)\n    {\n        pam.insert(str[i]-'a',i);\n    }\n    pam.sort();\n    for(int i=len;i>=1;i--)\n    {\n        ans[i] += ans[i+1];   //\u6ce8\u610f\u7528\u540e\u7f00\u548c\u7684\u65b9\u6cd5\u7d2f\u52a0\u7b54\u6848 \n    }\n    for(int i=1;i<=len;i++)\n    {\n        printf(\"%d \",ans[i]);\n    } \n    printf(\"\\n\");\n    return 0;\n}\n```\n\n\n",
        "postTime": 1659841450,
        "uid": 320282,
        "name": "\u6211\u548c\u9c7c\u8fc7\u4e0d\u53bb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF835D \u3010Palindromic characteristics\u3011"
    },
    {
        "content": "~~\u56e0\u4e3a\u968f\u673a\u8df3\u9898\u8df3\u5230\u8fd9\u9898\u53d1\u73b0\u4ee5\u524d\u505a\u8fc7[\u7c7b\u4f3c\u7684\u9898](https://www.luogu.com.cn/problem/CF7D)\u5c31\u6765\u53d1\u9898\u89e3\u4e86~~\n\n## Description\n\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF835D)\n\n## Solution\n\n\u8fd9\u9898\u548c CF7D \u57fa\u672c\u4e00\u6837\uff0c\u4f46\u662f\u8fd9\u9898\u662f\u6c42\u6240\u6709\u5b50\u4e32\u7684\u9636\u7ea7\u3002\n\n\u56e0\u4e3a\u8fd9\u9898\u6570\u636e\u8303\u56f4\u53ea\u6709 $5000$\uff0c\u6240\u4ee5\u679a\u4e3e\u4ece\u6bcf\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u5c31\u884c\u4e86\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u548c CF7D \u4e00\u6837\u4e86\u3002\n\n\u7528 $f_{j,i}$ \u8868\u793a\u5b50\u4e32 $j\\sim i$ \u7684\u9636\u7ea7\u3002\n\n~~\u8bfb\u9898\u540e~~\u53ef\u4ee5\u77e5\u9053\uff1a\n\n- \u82e5 $j\\sim i$ \u4e0d\u662f\u56de\u6587\u4e32\uff0c\u90a3\u4e48 $f_{j,i}=0$\u3002\n\n- \u82e5 $j\\sim i$ \u662f\u56de\u6587\u4e32\uff0c\u90a3\u4e48 $f_{j,i}=f_{j,\\left\\lfloor\\frac{i}{2}\\right\\rfloor}+1$\u3002\n\n\u53ef\u4ee5\u5f00\u4e2a\u6876\u7edf\u8ba1\u7b54\u6848\uff0c\u7136\u540e\u5c31\u662f\u600e\u4e48\u5224\u65ad\u56de\u6587\u4e32\u4e86\u3002\n\n\u53ef\u4ee5\u7528 manacher \u6216\u8005 \u54c8\u5e0c \u89e3\u51b3\uff0c\u8fd9\u91cc\u7528\u7684\u662f \u54c8\u5e0c\u3002\n\n\u6ce8\u610f\u5230\u6bcf\u4e2a $k$ \u9636\u7ea7\u5b50\u4e32\u90fd\u662f $0\\sim k-1$ \u9636\u7ea7\u5b50\u4e32\uff0c\u6240\u4ee5\u8981\u505a\u4e00\u904d\u540e\u7f00\u548c\u3002\n\n## Code\n```cpp\n#include<bits/stdc++.h>\n#define re register\n#define ull unsigned long long\nusing namespace std;\nchar c[5005];\null fac,fro,bac;\n/*\nfac\u8ba1\u7b97base\u7684\u5e42\nfro\u8ba1\u7b97\u4ece\u524d\u5f80\u540e\u7684\u54c8\u5e0c\u503c\nbac\u8ba1\u7b97\u4ece\u540e\u5f80\u524d\u7684\u54c8\u5e0c\u503c\n\u8fd9\u91cc\u662f\u76f4\u63a5\u63a8\u8fc7\u53bb\u7684\uff0c\u4e5f\u53ef\u4ee5\u9884\u5904\u7406\u4e00\u904d\n*/\nint n,dp[5005],ans[5005];\nint main(){\n  scanf(\"%s\",c),n=strlen(c);\n  //\u6ce8\u610f\u8981\u628a\u53ef\u80fd\u5f71\u54cd\u540e\u9762\u7b54\u6848\u7684dp\u6e05\u96f6\uff08\u4e5f\u53ef\u76f4\u63a5\u628adp\u5f00\u4e24\u7ef4\uff09\n  for(re int j=0;j<n;dp[j++]=0){\n    fro=bac=0,fac=1;\n    for(re int i=j;i<n;++i){\n      dp[i]=0,fro=fro*131+c[i],bac=bac+fac*c[i],fac=fac*131;\n      fro^bac?0:++ans[dp[i]=dp[(i-j-1>>1)+j]+1];\n    }\n  }\n  for(re int i=n;i;--i)ans[i]+=ans[i+1];//\u540e\u7f00\u548c\n  for(re int i=1;i<=n;++i)printf(\"%d \",ans[i]);\n}\n```",
        "postTime": 1615213524,
        "uid": 150843,
        "name": "\u5510\u4e00\u6587",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF835D \u3010Palindromic characteristics\u3011"
    },
    {
        "content": "\u51c6\u5907\u628a\u8fd9\u4e2a\u73a9\u610f\u513f\u5f53\u6210\u56de\u6587\u81ea\u52a8\u673a\u7684\u6a21\u677f\u505a\uff0c\u5148\u6c34\u4e00\u53d1 $O(n ^ 2 \\log n)$ \u7684\u89e3\u6cd5\u3002          \n\n\u66b4\u529b\u679a\u4e3e\u5b50\u4e32\uff0c\u7136\u540e\u5206\u6cbb\u4f7f\u7528 $Hash$ \u5224\u65ad\u5de6\u53f3\u4e24\u8fb9\u53ef\u4e0d\u53ef\u4ee5\u8d70\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n ^ 2 \\log n)$ \u3002        \n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int Len = 5e3 + 5 , K = 131;\nint n,ans[Len];\nunsigned long long a[Len][2],b[Len];\nunsigned long long Hash_1(int l,int r){return a[r][0] - a[l - 1][0] * (b[r - l + 1]);}\nunsigned long long Hash_2(int l,int r){return a[l][1] - a[r + 1][1] * (b[r - l + 1]);}\nint Calc(int l,int r)\n{\n\tif(l == r) return 1;\n\tint len = (r - l + 1);\n\tif(len % 2 == 1) \n\t{\n\t\tint mid = (l + r) >> 1;\n\t\tif(Hash_1(l , mid - 1) == Hash_2(mid + 1 , r)) return 1 + Calc(l , mid - 1);\n\t\treturn 0;\n\t}\n\telse\n\t{\n\t\tint mid = (l + r) >> 1;\n\t\tif(Hash_1(l , mid) == Hash_2(mid + 1 , r)) return 1 + Calc(l , mid);\n\t\treturn 0;\n\t}\n}\nchar s[Len];\nint main()\n{\n\tscanf(\"%s\",s + 1);\n\tn = strlen(s + 1);\n\tb[0] = 1;\n\tfor(int i = 1 ; i <= n ; i ++) \n\t{\n\t\ta[i][0] = a[i - 1][0] * K + (s[i] - '0');\n\t\tb[i] = b[i - 1] * K;\n\t}\n\tfor(int i = n ; i >= 1 ; i --) a[i][1] = a[i + 1][1] * K + (s[i] - '0');\n\tfor(int i = 1 ; i <= n ; i ++) \n\t\tfor(int j = i ; j <= n ; j ++)\n\t\t{\n\t\t\tint num = Calc(i , j);if(num < 0) continue;\n\t\t\tans[num] ++;\n\t\t}\n\tfor(int i = n ; i >= 1 ; i --) ans[i] += ans[i + 1]; \n\tfor(int i = 1 ; i <= n ; i ++) printf(\"%d \",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1617788585,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF835D Palindromic characteristics"
    }
]