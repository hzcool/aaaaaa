[
    {
        "content": "## \u601d\u8def\n\n\u8003\u8651\u5bf9\u6bcf\u4e2a\u6570\u503c\u505a\uff1a\n\n- \u8fd9\u4e2a\u6570\u503c\u53ea\u51fa\u73b0\u4e86\u4e00\u6b21\uff1a\u6ca1\u7528\u3002\n- \u51fa\u73b0\u4e86\u81f3\u5c11\u4e09\u6b21\uff1a\u8fd9\u4e2a\u6570\u503c\u5bf9\u6574\u68f5\u6811\u6240\u6709\u8fb9\u90fd\u6709\u8d21\u732e\u3002  \n    \u8bc1\u660e\u8fd9\u4e00\u70b9\uff1a~~\u611f\u6027\u7406\u89e3~~\u3002\u5b98\u65b9\u9898\u89e3\u5199\u7684\u662f\u62bd\u5c49\u539f\u7406\uff0c\u5272\u4e86\u4e00\u6761\u8fb9\u540e\u4e24\u68f5\u80af\u5b9a\u662f\u4e00\u68f5\u4e00\u4e2a\uff0c\u53e6\u4e00\u68f5\u4e24\u4e2a\u3002\n- \u6b63\u597d\u4e24\u6b21\uff1a\u5bf9\u4e8e\u8fd9\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8fb9\u6ca1\u8d21\u732e\uff0c\u5176\u4ed6\u90fd\u6709\u8d21\u732e\u3002\n\n\u8003\u8651\u76f4\u63a5\u5199\u4e2a\u6811\u5256\u8dd1\u8fd9\u4e2a\u4e1c\u897f\u3002\u53ef\u4ee5\u5957\u7ebf\u6bb5\u6811\u533a\u95f4\u8d4b\u503c\u3002\u6211\u5199\u7684\u662f\u79bb\u7ebf\u3002\n\n## code\n\n```cpp\n#include<stdio.h>\n#include<algorithm>\n#include<vector>\n#include<map>\n#define N 100009\nusing namespace std;\ninline char nc()\n{\n\tstatic char buf[99999],*l,*r;\n\treturn l==r&&(r=(l=buf)+fread(buf,1,99999,stdin),l==r)?EOF:*l++;\n}\ninline void read(int&x)\n{\n\tchar c=nc();for(;c<'0'||'9'<c;c=nc());\n\tfor(x=0;'0'<=c&&c<='9';x=(x<<3)+(x<<1)+(c^48),c=nc());\n}\nint n,h[N],e[N<<1],nxt[N<<1],a[N],lsh[N],lsz;vector<int>b[N],c[N];\nint dfn[N],mmp[N],now,fa[N],top[N],dep[N],sz[N],son[N],ans[N];\nmap<int,int>cnt;\ninline int dfs1(const int&i,const int&f)\n{\n\tfa[i]=f;dep[i]=dep[f]+1;son[i]=-1;sz[i]=1;int maxn=-1;\n\tfor(int j=h[i];j;j=nxt[j])if(e[j]^f)\n\t{\n\t\tsz[i]+=dfs1(e[j],i);\n\t\tif(maxn<sz[e[j]])maxn=sz[e[j]],son[i]=e[j];\n\t}\n\treturn sz[i];\n}\ninline void dfs2(const int&i,const int&t)\n{\n\ttop[i]=t;dfn[i]=now;mmp[now++]=i;\n\tif(~son[i])\n\t{\n\t\tdfs2(son[i],t);\n\t\tfor(int j=h[i];j;j=nxt[j])if(e[j]^fa[i])if(e[j]^son[i])\n\t\t\tdfs2(e[j],e[j]);\n\t}\n}\ninline void work(int u,int v,const int&i)\n{\n\tc[0].emplace_back(i);\n\tfor(;top[u]^top[v];)\n\t\tif(dep[top[u]]>dep[top[v]])\n\t\t\tc[dfn[u]+1].emplace_back(i),\n\t\t\tc[dfn[top[u]]].emplace_back(~i),\n\t\t\tu=fa[top[u]];\n\t\telse c[dfn[v]+1].emplace_back(i),\n\t\t\tc[dfn[top[v]]].emplace_back(~i),\n\t\t\tv=fa[top[v]];\n\tif(dep[u]>dep[v])u^=v^=u^=v;\n\tc[dfn[u]+1].emplace_back(~i);\n\tc[dfn[v]+1].emplace_back(i);\n}\nmain()\n{\n\tread(n);\n\tfor(int i=1,u,v;i<n;++i)read(u),read(v),--u,--v,\n\t\te[i]=v,nxt[i]=h[u],h[u]=i,\n\t\te[i+n]=u,nxt[i+n]=h[v],h[v]=i+n;\n\tfor(int i=0;i<n;read(a[i]),lsh[i]=a[i],++i);\n\tsort(lsh,lsh+n);lsz=unique(lsh,lsh+n)-lsh;\n\tfor(int i=0;i<n;ans[i++]=-1)a[i]=lower_bound(lsh,lsh+lsz,a[i])-lsh;//\u79bb\u6563\u5316\n\tdfs1(0,0);dfs2(0,0);//\u6811\u5256\n\tfor(int i=0;i<n;++i)b[a[mmp[i]]].emplace_back(mmp[i]);\n\tfor(int i=0;i<lsz;++i)\n\t\tif(b[i].size()==2)work(b[i][0],b[i][1],i);//\u6b63\u597d\u4e24\u4e2a\n\t\telse if(b[i].size()>2)c[0].emplace_back(i);//\u81f3\u5c11\u4e09\u4e2a\n\tfor(int i=0;i<n;++i)\n\t{\n\t\tfor(int j=0;j<c[i].size();++j)\n\t\t\tif(c[i][j]>>31)--cnt[~c[i][j]];\n\t\t\telse++cnt[c[i][j]];\n\t\tfor(;cnt.size()&&!(--cnt.end())->second;cnt.erase(--cnt.end()));\n\t\tif(cnt.size())ans[mmp[i]]=(--cnt.end())->first;\n\t\telse ans[mmp[i]]=-1;\n\t}//\u79bb\u7ebf\u5904\u7406\n\tfor(int i=1;i<n;++i)\n\t{\n\t\tint u=e[i],v=e[i+n];\n\t\tif(dep[u]<dep[v])u^=v^=u^=v;\n\t\tv=ans[u];\n\t\tprintf(\"%d\\n\",~v?lsh[v]:0);\n\t}\n}\n```\n\n## \u770b\u770b\u5b98\u65b9\u9898\u89e3\u5199\u4e86\u4e2a\u5565\n\n\u5bf9\u4e8e\u6700\u5927\u7684\u51fa\u73b0\u81f3\u5c11\u4e24\u6b21\u7684\u503c\u8fdb\u884c\u8003\u8651\uff1a\n\n- \u81f3\u5c11\u4e09\u6b21\uff1a\u6574\u68f5\u6811\u7b54\u6848\u90fd\u662f\u4ed6\u3002\n- \u4e24\u6b21\uff1a\u9664\u4e86\u4e00\u6761\u94fe\uff0c\u7b54\u6848\u90fd\u662f\u4ed6\u3002  \n    \u7136\u540e\u5bf9\u4e8e\u8fd9\u6761\u94fe\u66b4\u529b\u8dd1\u3002\n\n## [code](https://codeforces.com/blog/entry/114644)\n\n## \u770b\u770b\u5927\u4f6c\u5199\u4e86\u4e2a\u5565\n\n\u6811\u5256\uff0c\u7136\u540e\u76f4\u63a5\u66b4\u529b\u3002\n\n## [code](https://codeforces.com/contest/1805/submission/200407518)",
        "postTime": 1680683865,
        "uid": 90693,
        "name": "_\u2022\u0301\u3078\u2022\u0301\u256c_",
        "ccfLevel": 7,
        "title": "CF1805E There Should Be a Lot of Maximums \u9898\u89e3"
    },
    {
        "content": "\u8003\u8651\u4e00\u4e0b\uff0c\u6211\u4eec\u53d1\u73b0\u65ad\u4e86\u4e00\u6761\u8fb9\u540e\u6574\u68f5\u6811\u53d8\u6210\u4e86\u4e00\u4e2a\u5b50\u6811\u8282\u70b9\u548c\u5176\u4ed6\u8282\u70b9\u4e24\u4e2a\u90e8\u5206\u3002\n\n\u5229\u7528 dfs \u5e8f\u8f6c\u6362\u4e3a\u533a\u95f4\u95ee\u9898\uff0c\u5f97\u5230\uff1a\n\n\u8be2\u95ee\u533a\u95f4 $[l,r]$ \u5185\u51fa\u73b0\u6b21\u6570\u5927\u4e8e\u7b49\u4e8e $2$ \u7684\u6570\u7684\u6700\u5927\u503c\u4e0e\u603b\u51fa\u73b0\u6b21\u6570\u51cf\u53bb\u533a\u95f4\u5185\u51fa\u73b0\u6b21\u6570\u5927\u4e8e\u7b49\u4e8e $2$ \u7684\u6570\u7684\u6700\u5927\u503c\u3002\n\n\u6211\u4eec\u6709\u4e24\u4e2a\u65b9\u6848\u7ef4\u62a4\u3002\n\n\u65b9\u6848 $1$\uff1a\n\n\u5148\u4f7f\u7528 **\u56de\u6eda\u83ab\u961f\uff08\u4e0d\u5220\uff09** \u7ef4\u62a4\u533a\u95f4 $[l,r]$ \u5185\u51fa\u73b0\u6b21\u6570\u5927\u4e8e\u7b49\u4e8e $2$ \u7684\u6570\u7684\u6700\u5927\u503c\uff0c\u5f53\u533a\u95f4\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u6570 $x$ \u65f6\uff0c\u5148\u66f4\u65b0\u533a\u95f4\u5185\u51fa\u73b0\u6b21\u6570\uff0c\u518d\u5224\u65ad $x$ \u533a\u95f4\u5185\u51fa\u73b0\u6b21\u6570\u662f\u5426\u7b49\u4e8e $2$\uff0c\u5982\u679c\u662f\u7684\u5c31\u66f4\u65b0\u6700\u5927\u503c\u3002\n\n\u518d\u4f7f\u7528 **\u56de\u6eda\u83ab\u961f\uff08\u4e0d\u589e\uff09** \u7ef4\u62a4\u603b\u51fa\u73b0\u6b21\u6570\u51cf\u53bb\u533a\u95f4\u5185\u51fa\u73b0\u6b21\u6570\u5927\u4e8e\u7b49\u4e8e $2$ \u7684\u6570\u7684\u6700\u5927\u503c\uff0c\u5f53\u533a\u95f4\u5220\u9664\u4e00\u4e2a\u6570 $x$ \u65f6\uff0c\u5148\u66f4\u65b0\u533a\u95f4\u5185\u51fa\u73b0\u6b21\u6570\uff0c\u518d\u5224\u65ad\u603b\u51fa\u73b0\u6b21\u6570\u51cf\u53bb\u533a\u95f4\u5185\u51fa\u73b0\u6b21\u6570\u662f\u5426\u7b49\u4e8e $2$\uff0c\u5982\u679c\u662f\u7684\u4e5f\u66f4\u65b0\u6700\u5927\u503c\u3002\n\n\u4f46\u4e8b\u5b9e\u4e0a\u56de\u6eda\u83ab\u961f\u7684\u5e38\u6570\u6709\u70b9\u5927\uff0c\u6240\u4ee5\u8003\u8651\u53e6\u4e00\u79cd\u65b9\u6848\u3002\n\n\u65b9\u6848 $2$\uff1a\n\n\u4e0d\u96be\u53d1\u73b0\u6211\u4eec\u73b0\u5728\u9700\u8981\u7528\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u83ab\u961f\uff0c\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u5e94\u8be5\u6709\u4e00\u4e0b\u529f\u80fd\uff1a\n\n1. $O(1)$ \u52a0\u5165\u6216\u8005\u5220\u9664\u4e00\u4e2a\u6570\u3002\n\n2. $O(\\sqrt n)$ \u67e5\u8be2\u6700\u5927\u503c\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\u5c31\u53ef\u4ee5\u5f88\u81ea\u7136\u7684\u60f3\u5230\u503c\u57df\u5206\u5757\uff0c\u7528\u5176\u8bb0\u5f55\u6bcf\u79cd\u6570\u51fa\u73b0\u6b21\u6570\uff0c\u4ee5\u53ca\u67e5\u8be2\u6700\u5927\u7684\u51fa\u73b0\u8fc7\u7684\u6570\u3002\n\n\u5e76\u4e14\u4e24\u79cd\u65b9\u6cd5\u590d\u6742\u5ea6\u90fd\u662f $O(n \\sqrt n)$\u3002\n\n\u7531\u4e8e\u5e38\u6570\u7b49\u539f\u56e0\uff0c\u6b64\u5904\u7ed9\u51fa\u65b9\u6848 $2$ \u7684\u5b9e\u73b0\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int maxsq = 500;\nconst int B = 317;\nconst int maxn = 2e5+114;\nint sq;\nvector<int> edge[maxn];\nint dfn[maxn];//dfs \u5e8f\u5217\u989c\u8272 \nint val[maxn];//\u70b9\u7684\u989c\u8272\nint mx[maxn],mi[maxn];//\u5b50\u6811\u5185 dfs \u5e8f\u6700\u5927/\u6700\u5c0f\u503c \nint num;//\u8bb0\u5f55\u76ee\u524d dfs\u4e86\u591a\u5c11\u70b9 \nmap< pair<int,int> ,int> edge_pos;//\u8bb0\u5f55\u6bcf\u6761\u8fb9\u7684\u7f16\u53f7 \nint id[maxn];//\u8bb0\u5f55\u70b9 u-fa[u] \u8fd9\u6761\u8def\u5f84\u7684\u7f16\u53f7 \nint id_dfn[maxn];//dfs \u5e8f\u4e3a u \u7684 id[u] \nint anser[maxn];//\u8bb0\u5f55\u7b54\u6848 \nint cnt[maxn][2];//\u5e8f\u5217 \u5185/\u5916 \u51fa\u73b0\u6b21\u6570\nmap<int,int> lsh;//\u79bb\u6563\u5316\u540e\u6620\u5c04\u56de\u6765 \nint n;\ninline int pmap(int x){\n\treturn x/B;\n}\ninline int Lmap(int x){\n\treturn x*B;\n}\ninline int Rmap(int x){\n\treturn (x+1)*B-1;\n}\nclass Node{\n\tprivate:\n\t\tint bl_cnt[maxsq];\n\t\tint cnt[maxn];\n\tpublic:\n\t\tinline void add(int x);\n\t\tinline void del(int x);\n\t\tinline int query();\n}chifan;\ninline void Node::add(int x){\n\tint bl=pmap(x);\n\tcnt[x]++;\n\tbl_cnt[bl]++;\n}\ninline void Node::del(int x){\n\tint bl=pmap(x);\n\tcnt[x]--;\n\tbl_cnt[bl]--;\n}\ninline int Node::query(){\n\tfor(int i=B+3;i>=0;i--){\n\t\tif(bl_cnt[i]>0){\n\t\t\tint L=Lmap(i),R=Rmap(i);\n\t\t\tfor(int j=R;j>=L;j--){\n\t\t\t\tif(cnt[j]>0) return j;\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}\ninline void add(int x){\n\tif(cnt[x][1]==2){\n\t\tchifan.del(x);\n\t}\n\tcnt[x][0]++;\n\tcnt[x][1]--;\n\tif(cnt[x][0]==2){\n\t\tchifan.add(x);\n\t}\n}\ninline void del(int x){\n\tif(cnt[x][0]==2){\n\t\tchifan.del(x);\n\t}\n\tcnt[x][0]--;\n\tcnt[x][1]++;\n\tif(cnt[x][1]==2){\n\t\tchifan.add(x);\n\t}\n}\nmap<int,int> lwx;//\u53cd\u5411\u6620\u5c04 \ninline void dfs(int u,int fa){\n\tid[u]=edge_pos[make_pair(max(u,fa),min(u,fa))];\n\tmi[u]=mx[u]=++num;\n\tlwx[num]=u;\n\tid_dfn[num]=id[u];\n\tdfn[num]=val[u];\n\tfor(int v:edge[u]){\n\t\tif(v==fa) continue;\n\t\tdfs(v,u);\n\t\tmx[u]=max(mx[u],mx[v]);\n\t}\n}\nstruct Query{\n\tint l,r,id;//\u5b58\u50a8\u8be2\u95ee\uff1a\u5de6\u53f3\u7aef\u70b9\u4ee5\u53ca\u7f16\u53f7 \n}q[maxn];\ninline bool cmp(Query a, Query b){\n    return (a.l/sq)==(b.l/sq) ? a.r<b.r : a.l<b.l;\n}\ninline void work(){\n\tfor(int i=1;i<=n;i++){\n\t\tq[i].id=id_dfn[i];\n\t\tq[i].l=mi[lwx[i]];\n\t\tq[i].r=mx[lwx[i]];\n\t\t//\u521d\u59cb\u5316\u51fa\u73b0\u6b21\u6570 \n\t\tcnt[dfn[i]][1]++;\n\t\tif(cnt[dfn[i]][1]==2){\n\t\t\tchifan.add(dfn[i]);\n\t\t}\n\t}\n\tsort(q+1,q+n+1,cmp);\n\tint l=1,r=1;\n\tadd(dfn[1]);\n\tfor(int i=1;i<=n;i++){\n\t\twhile(r<q[i].r){\n\t\t\tr++;\n\t\t\tadd(dfn[r]);\n\t\t}\n\t\twhile(l>q[i].l){\n\t\t\tl--;\n\t\t\tadd(dfn[l]);\n\t\t}\n\t\twhile(r>q[i].r){\n\t\t\tdel(dfn[r]);\n\t\t\tr--;\n\t\t}\n\t\twhile(l<q[i].l){\n\t\t\tdel(dfn[l]);\n\t\t\tl++;\n\t\t}\n\t\tanser[q[i].id]=lsh[chifan.query()];\n\t}\n}\ninline void edge_add(int u,int v,int pos){\n\tedge[u].push_back(v);\n\tedge[v].push_back(u);\n\tedge_pos[make_pair(max(u,v),min(u,v))]=pos;\n}\ninline void init(){\n\tcin>>n;\n\tsq=sqrt(n);\n\tfor(int i=1;i<n;i++){\n\t\tint u,v;\n\t\tcin>>u>>v;\n\t\tedge_add(u,v,i);\n\t}\n\tvector< pair<int,int> > wyb;//val:id\n\tfor(int i=1;i<=n;i++){\n\t\tint x;\n\t\tcin>>x;\n\t\twyb.push_back(make_pair(x,i));\n\t}\n\tsort(wyb.begin(),wyb.end());\n\tint last=1;\n\tfor(int i=0;i<wyb.size();i++){\n\t\tif(wyb[i].first!=wyb[last].first){\n\t\t\tlast=i;\n\t\t}\n\t\tval[wyb[i].second]=(last+1);\n\t\tlsh[(last+1)]=wyb[i].first;\n\t}\n}\nsigned main(){\n\tios::sync_with_stdio(0);\n\tcin.tie(0);\n\tcout.tie(0);\n\tinit();\n\tdfs(1,0);\n\twork();\n\tfor(int i=1;i<n;i++){\n\t\tcout<<anser[i]<<'\\n';\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1682173987,
        "uid": 520748,
        "name": "_ChiFAN_",
        "ccfLevel": 4,
        "title": "CF1805E \u9898\u89e3"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1805E)\n\n\u770b\u5230\u7ef4\u62a4\u6811\u4e0a\u95ee\u9898\uff0c\u53ef\u4ee5\u60f3\u5230\u7ebf\u6bb5\u6811\u5408\u5e76\u3002\n\n\u4f46\u76f4\u63a5\u7ef4\u62a4\u663e\u7136\u4e0d\u884c\uff0c\u8981\u4e00\u70b9\u6280\u5de7\u3002\n\n\u53d1\u73b0 $val$ \u7684\u51fa\u73b0\u6b21\u6570 $cnt_{val}$ \u5982\u679c $\\ge 3$\uff0c\u90a3\u4e48\u4e00\u5b9a\u662f\u4e00\u4e2a\u5019\u9009\u9879\uff0c\u82e5 $cnt_{val}  = 1$\uff0c\u90a3\u4e48\u4e00\u5b9a\u4e0d\u80fd\u4f5c\u4e3a\u5019\u9009\u9879\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u7528\u6743\u503c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5bf9\u4e8e $val$ \u6709 $cnt_{val} = 2$ \u7684 $val$\u3002\u5148\u79bb\u6563\u5316\uff0c\u7136\u540e\u518d\u5408\u5e76\u7ebf\u6bb5\u6811\u3002\u67e5\u627e\u65f6\uff0c\u82e5\u53f3\u5b50\u8282\u70b9\u7684 $\\max = 2$ \u6216\u53f3\u5b50\u8282\u70b9\u7684 $\\min = 0$\uff0c\u5c31\u9012\u5f52\u67e5\u627e\u53f3\u8282\u70b9\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\u82e5\u5de6\u53f3\u5b50\u8282\u70b9\u90fd\u4e0d\u6ee1\u8db3\uff0c\u5c31\u8fd4\u56de $0$\uff0c\u5b9e\u73b0\u9700\u8981\u4e00\u70b9\u7ec6\u8282\u3002\n\n\u7a7a\u95f4\u53ea\u9700\u8981\u5f00 $32$ \u500d\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$\\mathcal{O}(n\\log n)$\u3002\n\n[\u8bc4\u6d4b\u8bb0\u5f55](https://www.luogu.com.cn/record/108317122)\n\n\u6700\u540e\u63d0\u4f9b\u4e00\u7ec4 hack\uff1a\n\n\u8f93\u5165\uff1a\n```\n10 \n1 2\n1 3\n1 4\n1 5\n1 6\n2 7\n2 8\n3 9\n4 10\n1 3 3 3 3 4 10 4 6 2\n```\n\n\u8f93\u51fa\uff1a\n```\n3\n4\n4\n4\n3\n4\n3\n4\n4\n```",
        "postTime": 1681709450,
        "uid": 678877,
        "name": "Pengzt",
        "ccfLevel": 0,
        "title": "CF1805E There Should Be a Lot of Maximums"
    },
    {
        "content": "~~\u5927\u534a\u591c\u770b\u540c\u5b66\u6253 CF\uff0c\u81ea\u5df1\u5374\u6ca1\u6709\u8bbe\u5907\u53ea\u80fd\u53e3\u80e1\uff0c\u7ed3\u679c\u76f4\u63a5\u628a\u4e94\u4e2a\u9898\u5168\u53e3\u80e1\u51fa\u6765\u4e86\uff0c\u8d5b\u540e\u6765\u8865\u4e00\u4e2a\u9898\u89e3\uff0c\u5341\u5206\u611f\u8c22\u7ba1\u7406\u5458\u7684\u5ba1\u6838~~\n\n------------\n\n## \u9898\u610f\n\u5b9a\u4e49\u4e00\u68f5\u6811\u7684 $ \\text{MAD} $ \u503c\u4e3a\u5176\u51fa\u73b0\u6b21\u6570\u5927\u4e8e\u7b49\u4e8e\u4e24\u6b21\u7684\u70b9\u6743\u6700\u5927\u503c\uff0c\u73b0\u5728\u7ed9\u51fa\u4e00\u68f5\u6811\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u6761\u8fb9\uff0c\u4f60\u8981\u6c42\u51fa\u5c06\u5176\u5220\u9664\u540e\u5f62\u6210\u7684\u4e24\u68f5\u65b0\u6811\u7684 $ \\text{MAD} $ \u503c\u7684\u6700\u5927\u503c\u3002\n\n\u6ce8\u610f\u4e0d\u662f\u771f\u6b63\u5220\u6389\u8fb9\uff0c\u8be2\u95ee\u95f4\u76f8\u4e92\u72ec\u7acb\u3002\n\n------------\n\n## \u66b4\u529b\n\n\u5c06\u4e00\u6761\u8fb9\u5220\u9664\uff0c\u4e8b\u5b9e\u4e0a\u5c31\u662f\u628a\u8fd9\u68f5\u6811\u5206\u4e3a\u4e00\u68f5\u539f\u6811\u7684\u5b50\u6811\u548c\u5b50\u6811\u5916\u7684\u8282\u70b9\u6784\u6210\u7684\u6811\u3002\u6bcf\u6761\u8fb9\u7684\u7b54\u6848\u5c31\u662f\u4e24\u68f5\u6811\u7684\u7b54\u6848\u7684\u6700\u5927\u503c\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5bf9\u503c\u57df\u8fdb\u884c\u79bb\u6563\u5316\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u8fdb\u884c\u4e00\u6b21 DFS\uff0c\u5f00\u4e00\u4e2a\u6876\u8bb0\u5f55\u5176\u5b50\u6811\u4e2d\u6bcf\u4e2a\u503c\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u6bcf\u4e2a\u503c\u5728\u5b50\u6811\u5916\u7684\u51fa\u73b0\u6b21\u6570\u4e5f\u53ef\u4ee5\u5f00\u4e00\u4e2a\u6876\u6765\u7ef4\u62a4\uff0c\u66b4\u529b\u6c42\u89e3\u51fa\u7b54\u6848\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $ O(n^{2}) $\uff0c~~\u53ef\u4ee5\u901a\u8fc7\u6837\u4f8b~~\u3002\n\n## \u6b63\u89e3\n\n\u6ce8\u610f\u5230\u4e0d\u5b58\u5728\u4fee\u6539\uff0c\u800c\u4e14\u9700\u8981\u5bf9\u6bcf\u4e2a\u70b9\u8fdb\u884c\u503c\u57df\u4e0a\u7684\u7edf\u8ba1\uff0c\u90a3\u4e48\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u6811\u4e0a\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u5feb\u901f\u5408\u5e76\u51fa\u6bcf\u4e2a\u8282\u70b9\u7684\u7b54\u6848\u3002\n\n\u5c06\u8be2\u95ee\u79bb\u7ebf\u5230\u8fb9\u4e0a\uff0cDFS \u65f6\u7edf\u8ba1\u6bcf\u6761\u8fb9\u7684\u7b54\u6848\uff0c\u5f00\u6876\u7ef4\u62a4\u503c\u57df\u7b54\u6848\u65f6\u53ef\u4ee5\u4f7f\u7528\u4e24\u4e2a set \u6765\u7ef4\u62a4\u5b50\u6811\u5185\u4e0e\u5b50\u6811\u5916\u6240\u6709\u53ef\u80fd\u7b54\u6848\uff0c\u4ee5\u4fbf\u5728\u503c\u57df\u4e0a\u8fdb\u884c\u64cd\u4f5c\u65f6\u66f4\u65b0\u7b54\u6848\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $ O(n\\log^{2}n) $\uff0c\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n\n\u5173\u4e8e\u4ec0\u4e48\u662f\u6811\u4e0a\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u53ef\u4ee5\u81ea\u884c\u67e5\u9605\u76f8\u5173\u8d44\u6599\uff0c\u4e0b\u9762\u4ee3\u7801\u4e2d\u6709\u6ce8\u91ca\u89e3\u91ca\u5177\u4f53\u7684\u5408\u5e76\u65b9\u6cd5\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn=2e5+5;\nstruct egde{\n\tint to,nxt,id;\n}e[maxn];\nint cnt,c,tot;\nint dfn[maxn],id[maxn];\nint a[maxn],w[maxn],X[maxn],head[maxn],t[maxn];\nint s[maxn],ans[maxn],son[maxn],tong1[maxn],tong2[maxn];\nset<int>S1,S2;\n\nvoid adde(int u,int v,int id)//\u52a0\u8fb9 \n{\n\te[++cnt].nxt=head[u];\n\te[cnt].to=v;\n\te[cnt].id=id;\n\thead[u]=cnt;\n}\n\nvoid dfs1(int u,int fa)//\u91cd\u94fe\u5256\u5206\u65b9\u4fbf\u627e\u8f7b\u91cd\u513f\u5b50 \n{\n\ts[u]=1;\n\tdfn[u]=++c;\n\tid[c]=u;\n\tint m=0;\n\tfor(int i=head[u];i;i=e[i].nxt)\n\t{\n\t \tint y=e[i].to;\n\t \tif(y==fa) continue;\n\t \tdfs1(y,u);\n\t \ts[u]+=s[y];\n\t \tif(s[y]>m)\n\t \t{\n\t \t\tm=s[y];\n\t \t\tson[u]=y;\n\t\t}\n\t}\n}\n\nvoid add(int u)//\u5728\u5b50\u6811\u6876\u4e2d\u52a0\u5165\u5f53\u524d\u8282\u70b9 \n{\n\ttong1[w[u]]++;\n\tif(tong1[w[u]]==2) S1.insert(X[w[u]]);\n\ttong2[w[u]]--;\n\tif(tong2[w[u]]==1) S2.erase(X[w[u]]);\n}\n\nvoid del(int u)//\u5728\u5b50\u6811\u6876\u4e2d\u5220\u9664\u5f53\u524d\u8282\u70b9 \n{\n\ttong1[w[u]]--;\n\tif(tong1[w[u]]==1) S1.erase(X[w[u]]);\n\ttong2[w[u]]++;\n\tif(tong2[w[u]]==2) S2.insert(X[w[u]]);\n}\n\nvoid dfs3(int u,int fa)//\u66b4\u529bdfs\u5e76\u5c06\u8282\u70b9\u52a0\u5165\u6876\u4e2d \n{\n\tadd(u);\n\tfor(int i=head[u];i;i=e[i].nxt)\n\t{\n\t\tint y=e[i].to;\n\t\tif(y==fa) continue;\n\t\tdfs3(y,u);\n\t}\n}\n\nint dfs2(int u,int fa)//\u6811\u4e0a\u542f\u53d1\u5f0f\u5408\u5e76 \n{\n\tfor(int i=head[u];i;i=e[i].nxt)//\u5148\u6c42\u89e3\u8f7b\u513f\u5b50 \n\t{\n\t\tint y=e[i].to;\n\t\tif(y==fa||y==son[u]) continue;\n\t\tans[e[i].id]=dfs2(y,u);\n\t}\n\tfor(int i=head[u];i;i=e[i].nxt)//\u6c42\u89e3\u91cd\u513f\u5b50 \n\t{\n\t\tint y=e[i].to;\n\t\tif(y==fa||y!=son[u]) continue;\n\t\tans[e[i].id]=dfs2(y,u);\n\t}\n\tfor(int i=head[u];i;i=e[i].nxt)//\u5c06\u8f7b\u513f\u5b50\u7684\u70b9\u6743\u5408\u5e76\u5230\u4e0a\u9762\u91cd\u513f\u5b50\u7684\u6876\u4e2d \n\t{\n\t\tint y=e[i].to;\n\t\tif(y==fa||y==son[u]) continue;\n\t\tdfs3(y,u);\n\t}\n\tadd(u);//\u6c42\u89e3\u5b8c\u5f53\u524d\u8282\u70b9\u7684\u5b69\u5b50\u7684\u7b54\u6848\u540e\u5c06\u5f53\u524d\u8282\u70b9\u52a0\u5165\u6876 \n\tint res=max((S1.size()!=0?*(--S1.end()):0),(S2.size()!=0?*(--S2.end()):0));//\u7edf\u8ba1\u7b54\u6848 \n\tif(son[fa]!=u)//\u5982\u679c\u8fd9\u4e2a\u8282\u70b9\u662f\u7236\u4eb2\u7684\u8f7b\u513f\u5b50\uff0c\u5219\u5c06\u6876\u6e05\u7a7a \n\t\tfor(int i=dfn[u];i<=dfn[u]+s[u]-1;i++)\n\t\t\tdel(id[i]);\n\treturn res;\n}\n\nint main()\n{\n\tint n,u,v;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tadde(u,v,i);\n\t\tadde(v,u,i);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",&a[i]),X[i]=a[i];\n\tsort(X+1,X+1+n);\n\ttot=unique(X+1,X+1+n)-X-1;//\u79bb\u6563\u5316\u4e0e\u9884\u5904\u7406 \n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tw[i]=lower_bound(X+1,X+1+tot,a[i])-X;\n\t\ttong2[w[i]]++;\n\t\tif(tong2[w[i]]==2) S2.insert(X[w[i]]);\n\t}\n\tdfs1(1,0);\n\tdfs2(1,0);\n\tfor(int i=1;i<n;i++)\n\t\tprintf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1680513932,
        "uid": 826754,
        "name": "sakana0117",
        "ccfLevel": 0,
        "title": "CF1805E There Should Be a Lot of Maximums \u9898\u89e3"
    },
    {
        "content": "### \u505a\u6cd5\uff1a\u6811\u4e0a\u83ab\u961f+\u503c\u57df\u5206\u5757\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u6bcf\u4e00\u6761\u8fb9\u90fd\u8fde\u63a5\u4e00\u4e2a\u5b50\u6811\u548c\u5176\u4ed6\u90e8\u5206\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5206\u522b\u7edf\u8ba1\u5b50\u6811\u7684  MAD \u548c\u5176\u4ed6\u6240\u6709\u70b9\u7684 MAD\u3002\n\n\u5f53\u6211\u4eec\u8981\u5904\u7406\u5b50\u6811\u7b54\u6848\u7684\u65f6\u5019\uff0c\u5bb9\u6613\u60f3\u5230\u53ef\u4ee5\u7528 dfn \u5e8f\u6765\u8fdb\u884c\u533a\u95f4\u5904\u7406\u4ee5\u6b64\u51cf\u5c0f\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n\n\u6240\u4ee5\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a **\u5728 dfn \u5e8f\u4e0a\u67e5\u8be2\u533a\u95f4\u51fa\u73b0\u6b21\u6570\u5927\u4e8e\u7b49\u4e8e2\u7684\u6570\u7684\u6700\u5927\u503c**\uff0c\u800c\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u7528\u83ab\u961f\u6765\u505a\u3002\n\n\u7edf\u8ba1\u5176\u4ed6\u90e8\u5206\u7684 MAD \u4ea6\u662f\u540c\u7406\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5148\u628a\u6240\u6709\u7684\u70b9\u90fd ```add``` \u4e00\u6b21\uff0c\u518d\u628a\u6b63\u5e38\u83ab\u961f\u7684\u64cd\u4f5c\u53d6\u53cd\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u5728\u539f\u672c\u83ab\u961f\u7684\u57fa\u7840\u4e0a\u8be5 ```add``` \u65f6 ```sub```,\u8be5 ```sub``` \u65f6 ```add```\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u7edf\u8ba1 **l \u5230 r \u533a\u95f4\u5916\u7684\u6570\u7684\u51fa\u73b0\u6b21\u6570**\u3002\n\n### \u4f46\u662f\n\n\u5bb9\u6613\u53d1\u73b0\u5220\u53bb\u4e00\u4e2a\u6570\u540e\u7b54\u6848\u662f\u4e0d\u597d\u7edf\u8ba1\u7684\u3002\u6240\u4ee5\u7528 ~~\u6811\u4e0a\u56de\u6eda\u83ab\u961f~~ \u503c\u57df\u5206\u5757\uff0c\u5728\u6bcf\u6b21\u64cd\u4f5c\u5b8c\u540e\u7edf\u8ba1\u7b54\u6848\u3002\n\n\u6211\u4eec\u7528 $cc_i$ \u8868\u793a **\u7b2c i \u4e2a\u5757\u4e2d\u51fa\u73b0\u6b21\u6570\u5927\u4e8e\u7b49\u4e8e2\u7684\u6570\u7684\u6570\u91cf**\uff0c$cnt_i$ \u8868\u793a **i \u7684\u51fa\u73b0\u6b21\u6570**\uff0c\u6700\u540e\u518d\u5199\u4e00\u4e2a get \u51fd\u6570\u7edf\u8ba1\u4e0b\u7b54\u6848\u5c31\u884c\u4e86\u3002\u5177\u4f53\u5b9e\u73b0\u53ef\u4ee5\u770b\u4ee3\u7801\u3002\n\n\u6700\u7ec8\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(m \\sqrt n + n\\sqrt n )$\u3002\n\n\n## CODE\n\n```cpp\n#include<bits/stdc++.h>\n#pragma GCC optimize(2)\nusing namespace std;\nconst int N=2e5+5;\nint n,cnt_,head[N],dfn[N],in[N],out[N],k;\nint real_num[N],a[N],bel[N],hd[N],cnt[N];\nint ans[N][2],fa[N],dep[N],x[N],y[N],cc[N];\nmap<int,int>mp;\nstruct node{int v,nxt;}e[N<<1];\nstruct query{int l,r,id;}q[N];\nstruct node1{int v,id;}t[N];\nbool cmp1(node1 a,node1 b)\n{\n\treturn a.v<b.v;\n}\nvoid lsh()//\u79bb\u6563\u5316 \n{\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",&a[i]),t[i].v=a[i],t[i].id=i;\n\tsort(t+1,t+n+1,cmp1);\n\tfor(int i=1,tot=0;i<=n;i++)if(t[i].v!=t[i-1].v)mp[t[i].v]=++tot,real_num[tot]=t[i].v;\n\tfor(int i=1;i<=n;i++)a[i]=mp[a[i]];\n}\nvoid adde(int u,int v)\n{\n\te[++cnt_]={v,head[u]};\n\thead[u]=cnt_;\n}\nvoid dfs(int u,int f)\n{\n\tdfn[++cnt_]=u,in[u]=cnt_;\n\tdep[u]=dep[f]+1;fa[u]=f;\n\tfor(int i=head[u];i;i=e[i].nxt)\n\t{\n\t\tint v=e[i].v;\n\t\tif(v==f)continue;\n\t\tdfs(v,u);\n\t}\n\tout[u]=cnt_;\n}\nbool cmp(query x,query y)\n{\n\treturn (bel[x.l]==bel[y.l]?x.r<y.r:x.l<y.l);\n}\nvoid add(int w)//\u83ab\u961f\u52a0\u6570\u64cd\u4f5c \n{\n\t++cnt[a[dfn[w]]];\n\tif(cnt[a[dfn[w]]]==2)cc[bel[a[dfn[w]]]]++;\n}\nvoid sub(int w)//\u83ab\u961f\u5220\u6570\u64cd\u4f5c \n{\n\t--cnt[a[dfn[w]]];\n\tif(cnt[a[dfn[w]]]==1)cc[bel[a[dfn[w]]]]--;\n} \nint ask()\n{\n\tfor(int i=bel[n];i>=1;i--)//\u4ece\u5927\u5230\u5c0f\u679a\u4e3e \n\t{\n\t\tif(!cc[i])continue;\n\t\tfor(int j=hd[i+1]-1;j>=hd[i];j--)//\u4ece\u5927\u5230\u5c0f\u679a\u4e3e \n\t\t\tif(cnt[j]>=2)return real_num[j];//\u8bb0\u5f97\u8fd4\u56de\u771f\u5b9e\u503c \n\t}\n\treturn 0;\n}\nvoid mo_algorithm_which_can_not_roll_back()\n{\n\tint l=q[1].l,r=l-1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\twhile(l>q[i].l)add(--l);\n\t\twhile(l<q[i].l)sub(l++);\n\t\twhile(r<q[i].r)add(++r);\n\t\twhile(r>q[i].r)sub(r--);\n\t\tans[q[i].id][0]=ask();\n\t}\n\tmemset(cnt,0,sizeof(cnt));\n\tmemset(cc,0,sizeof(cc));\n}//\u672c\u6765\u60f3\u5199\u56de\u6eda\u83ab\u961f\u7684\uff0c\u4f46\u53d1\u73b0\u4e0d\u9700\u8981\uff0c\u4e8e\u662f\u5c31\u6709\u4e86\u8fd9\u4e2a\u611a\u8822\u7684\u51fd\u6570\u540dQAQ\nvoid mo_algorithm()\n{\n\tint l=q[1].l,r=l-1;\n\tfor(int i=1;i<=n;i++)add(i);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\twhile(l<q[i].l)add(l++);//\u64cd\u4f5c\u53d6\u53cd \n\t\twhile(l>q[i].l)sub(--l);\n\t\twhile(r>q[i].r)add(r--);\n\t\twhile(r<q[i].r)sub(++r);\n\t\t//\u6267\u884c\u5230\u8fd9\u6b65\u65f6cnt\u91cc\u8bb0\u7684\u5c31\u662f\u9664\u4e86\u5b50\u6811\u5916\u7684\u5176\u4ed6\u90e8\u5206\u7684\u51fa\u73b0\u6b21\u6570\u3002 \n\t\tans[q[i].id][1]=ask();\n\t}\n}\nint main()\n{\n\tscanf(\"%d\",&n);k=sqrt(n);\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tscanf(\"%d%d\",&x[i],&y[i]);\n\t\tadde(x[i],y[i]),adde(y[i],x[i]);\n\t}\n\tlsh();cnt_=0;//\u56de\u6536\u518d\u5229\u7528\n   dfs(1,0);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tbel[i]=(i-1)/k+1;\n\t\tif(bel[i]!=bel[i-1])hd[bel[i]]=i;\n\t}\n\thd[bel[n]+1]=n+1;\n\tq[n]={in[1],out[1],n};\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tif(fa[y[i]]==x[i])swap(y[i],x[i]);\n\t\tq[i]={in[x[i]],out[x[i]],i};//\u8bb0\u4e00\u4e0b\u5b50\u6811\u7684\u533a\u95f4 \n\t}\n\tsort(q+1,q+n+1,cmp); \n\tmo_algorithm_which_can_not_roll_back();\n\tmo_algorithm();\n\tfor(int i=1;i<n;i++)cout<<max(ans[i][0],ans[i][1])<<\"\\n\";\n\treturn 0;\n}\n```",
        "postTime": 1681202119,
        "uid": 242089,
        "name": "luohanzhao",
        "ccfLevel": 0,
        "title": "CF1805E"
    },
    {
        "content": "\u8fd8\u662f\u6539\u4e0d\u4e86\u770b\u5230\u4e00\u9053\u9898\u5c31\u7cca\u4e00\u4e2a ds \u4e0a\u53bb\u7684\u4e60\u60ef\u3002\u3002\u3002\n\n\u6709\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u6027\u8d28\uff1a\u5f53\u4e00\u4e2a\u6570\u5728\u8fd9\u68f5\u6811\u4e2d\u51fa\u73b0\u6b21\u6570\u5927\u4e8e\u7b49\u4e8e $3$ \u6b21\uff0c\u90a3\u4e48\u5728\u5220\u6389\u4e00\u6761\u8fb9\u4e4b\u540e\u5206\u6210\u7684\u4e24\u68f5\u6811\u4e2d\uff0c\u8fd9\u4e00\u4e2a\u6570\u80af\u5b9a\u4f1a\u5728\u5176\u4e2d\u7684\u4e00\u68f5\u6811\u4e2d\u7684\u51fa\u73b0\u6b21\u6570\u5927\u4e8e\u7b49\u4e8e $2$ \u6b21\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u627e\u5230\u6700\u5927\u7684\u51fa\u73b0\u6b21\u6570\u5927\u4e8e\u7b49\u4e8e $3$ \u6b21\u7684\u6570\uff0c\u7136\u540e\u5c06\u6240\u6709\u5927\u4e8e\u5b83\u4e14\u51fa\u73b0\u8fc7 $2$ \u6b21\u7684\u6570\u653e\u5230\u4e00\u4e2a\u96c6\u5408 $S$ \u91cc\u3002\n\n\u53d1\u73b0\u6bcf\u6b21\u5220\u8fb9\u76f8\u5f53\u4e8e\u5206\u89e3\u51fa\u6765\u4e00\u9897\u5b50\u6811\uff0c\u6211\u4eec\u5148\u627e\u96c6\u5408 $S$ \u4e2d\u6700\u5927\u7684\u5728\u8fd9\u68f5\u5b50\u6811\u4e2d\u51fa\u73b0\u8fc7 $2$ \u6b21\u7684\u6570\uff0c\u518d\u627e\u96c6\u5408 $S$ \u4e2d\u6700\u5927\u7684\u6ca1\u6709\u5728\u8fd9\u68f5\u5b50\u6811\u4e2d\u51fa\u73b0\u8fc7\u7684\u6570\u3002\n\n\u663e\u7136\u4e0a\u9762\u4e24\u79cd\u64cd\u4f5c\u5206\u522b\u662f\u627e\u8fd9\u68f5\u5b50\u6811\u4e2d\u7684 $\\textrm{MAD}$ \u4e0e\u9664\u8fd9\u68f5\u5b50\u6811\u5185\u7684\u8282\u70b9\u5916\u7684\u6240\u6709\u8282\u70b9\u7ec4\u6210\u7684\u6811\u7684 $\\textrm{MAD}$\u3002\n\n\u90a3\u4e48\u5148\u79bb\u6563\u5316\u96c6\u5408\u91cc\u7684\u6570\uff0c\u7136\u540e\u7ebf\u6bb5\u6811\u5408\u5e76\u7ef4\u62a4\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n\\log n)$\u3002\n\nCode\uff1a\n\n```cpp\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native\")\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 5;\nint n, m, tot, cnt, mx = 0, a[N], b[N], f[N], hd[N], rt[N], ans[N];\nstruct edge {int u, v, nxt;}e[N << 2];\nmap<int, int> mp;\nvoid adde(int u, int v)\n{\n\te[++cnt].u = u, e[cnt].v = v;\n\te[cnt].nxt = hd[u], hd[u] = cnt;\n}\nvoid init()\n{\n\tfor (int i = 1; i <= n; i++)\n\t\tif (mp[a[i]] >= 3) mx = max(mx, a[i]);\n\tfor (int i = 1; i <= n; i++)\n\t\tif (mp[a[i]] >= 2 && a[i] > mx) b[++m] = a[i];\n\tsort(b + 1, b + m + 1);\n\tm = unique(b + 1, b + m + 1) - b - 1;\n\tfor (int i = 1; i <= n; i++)\n\t\tif (mp[a[i]] >= 2 && a[i] > mx)\n\t\t{\n\t\t\tint tmp = lower_bound(b + 1, b + m + 1, a[i]) - b;\n\t\t\tf[tmp] = a[i], a[i] = tmp;\n\t\t}\n\t\telse a[i] = 0;\n}\nstruct segt {int ls, rs, mx, sm;}t[N << 7];\nvoid pushup(int id)\n{\n\tt[id].mx = max(t[t[id].ls].mx, t[t[id].rs].mx);\n\tt[id].sm = t[t[id].ls].sm + t[t[id].rs].sm;\n}\nvoid update(int &id, int l, int r, int p, int x)\n{\n\tif (!id) id = ++tot;\n\tif (l == r) {t[id].mx += x, t[id].sm = min(1, t[id].sm + x); return ;}\n\tint mid = (l + r) >> 1;\n\tif (p <= mid) update(t[id].ls, l, mid, p, x);\n\telse update(t[id].rs, mid + 1, r, p, x);\n\tpushup(id);\n}\nvoid merge(int &x, int y, int l, int r)\n{\n\tif (!x) {x = y; return ;}\n\tif (!y) return ;\n\tif (l == r) {t[x].mx += t[y].mx, t[x].sm = min(1, t[x].sm + t[y].sm); return ;}\n\tint mid = (l + r) >> 1;\n\tmerge(t[x].ls, t[y].ls, l, mid);\n\tmerge(t[x].rs, t[y].rs, mid + 1, r);\n\tpushup(x);\n}\nint query1(int id, int l, int r)\n{\n\tif (l == r && !t[id].sm) return r;\n\tif (l == r && t[id].sm) return 0;\n\tint mid = (l + r) >> 1;\n\tif (t[t[id].rs].sm == (r - mid)) return query1(t[id].ls, l, mid);\n\treturn query1(t[id].rs, mid + 1, r);\n}\nint query2(int id, int l, int r)\n{\n\tif (l == r && t[id].mx >= 2) return r;\n\tif (l == r && t[id].mx < 2) return 0;\n\tint mid = (l + r) >> 1;\n\tif (t[t[id].rs].mx <= 1) return query2(t[id].ls, l, mid);\n\treturn query2(t[id].rs, mid + 1, r);\n}\nvoid dfs(int u, int fa, int nw)\n{\n\tfor (int i = hd[u]; i; i = e[i].nxt)\n\t{\n\t\tint v = e[i].v;\n\t\tif (v == fa) continue;\n\t\tdfs(v, u, i);\n\t\tmerge(rt[u], rt[v], 1, m);\n\t}\n\tif (a[u]) update(rt[u], 1, m, a[u], 1);\n\tint x = query1(rt[u], 1, m), y = query2(rt[u], 1, m);\n\tans[(nw + 1) >> 1] = max(f[x], f[y]);\n}\nsigned main()\n{\n\tios::sync_with_stdio(false);\n\tcin.tie(nullptr);\n\tcin >> n;\n\tfor (int i = 1; i < n; i++) \n\t{\n\t\tint u, v; cin >> u >> v;\n\t\tadde(u, v), adde(v, u);\n\t}\n\tfor (int i = 1; i <= n; i++) \n\t{\n\t\tcin >> a[i];\n\t\tmp[a[i]]++;\n\t}\n\tinit();\n\tif (!m)\n\t{\n\t\tfor (int i = 1; i < n; i++) cout << mx << '\\n';\n\t\treturn 0;\n\t}\n\tdfs(1, 0, 0); \n\tfor (int i = 1; i < n; i++) \n\t\tcout << max(mx, ans[i]) << '\\n';\n\treturn 0;\n}\n```\n",
        "postTime": 1680919859,
        "uid": 570066,
        "name": "Fatal_Cactus",
        "ccfLevel": 6,
        "title": "CF1805E \u7ebf\u6bb5\u6811\u5408\u5e76 \u9898\u89e3"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\u6709\u4e00\u68f5\u6709 $n$ \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u5b9a\u4e49\u4e00\u4e2a\u6811\u7684 $MAD$ \u662f\u8fd9\u68f5\u6811\u4e2d\u70b9\u6743\u51fa\u73b0\u81f3\u5c11\u4e24\u6b21\u7684\u6570\u7684\u6700\u5927\u503c\u3002\u73b0\u5728\u5220\u6389\u4e00\u6761\u8fb9\uff0c\u539f\u6765\u7684\u6811\u88ab\u5206\u6210\u4e24\u68f5\u6811\uff0c\u8ba9\u4f60\u6c42\u8fd9\u4e24\u68f5\u6811\u7684 $MAD$ \u4e2d\u7684\u8f83\u5927\u503c\u3002\u8f93\u51fa\u4e2d\u7b2c $i$ \u884c\u7684\u6570\u8868\u793a\u5728\u5220\u6389\u7b2c $i$ \u6761\u8fb9\u540e\u7684\u7b54\u6848\u3002\n## \u9898\u76ee\u5206\u6790\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5c31\u60f3\u5230\u4e00\u5171\u53ea\u6709 $3$ \u79cd\u60c5\u51b5\uff1a\n\n1. \u70b9\u6743\u4e24\u4e24\u90fd\u4e0d\u76f8\u540c\u3002\n\n1. \u503c\u4e3a $MAD$ \u7684\u70b9\u521a\u597d\u6709\u4e24\u4e2a\u3002\n\n1. \u503c\u4e3a $MAD$ \u7684\u70b9\u6709\u4e24\u4e2a\u4ee5\u4e0a\u3002\n\n## \u89e3\u9898\u601d\u8def\n\u9996\u5148\u6211\u4eec\u770b\u7b2c\u4e00\u79cd\uff0c\u65e0\u8bba\u5220\u53bb\u54ea\u4e00\u6761\u8fb9\uff0c\u7b54\u6848\u6c38\u8fdc\u4e3a $0$ \uff0c\u6240\u4ee5\u76f4\u63a5\u8f93\u51fa $0$ \u5373\u53ef\u3002\n\n\u6211\u4eec\u518d\u770b\u7b2c\u4e09\u79cd\uff0c\u65e0\u8bba\u5220\u53bb\u54ea\u4e00\u6761\u8fb9\uff0c\u5176\u4e2d\u603b\u4f1a\u6709\u4e00\u68f5\u6811\u6709\u5927\u4e8e\u7b49\u4e8e $2$ \u4e2a\u503c\u4e0e\u539f\u6811\u7684 $MAD$ \u76f8\u7b49\u7684\u70b9\u5b58\u5728\uff0c\u6240\u4ee5\u7b54\u6848\u4e00\u5b9a\u662f\u539f\u6811\u7684 $MAD$ \u3002\n\n\u6700\u540e\u662f\u7b2c\u4e8c\u79cd\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u60f3\uff0c\u503c\u4e0e $MAD$ \u76f8\u540c\u7684\u70b9\u53ea\u6709\u4e24\u4e2a\uff0c\u90a3\u8981\u4f7f\u7b54\u6848\u4e0d\u662f\u539f\u6811\u7684 $MAD$\uff0c\u90a3\u5c31\u53ea\u53ef\u80fd\u5220\u6389\u7684\u8fb9\u5728\u8fd9\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u94fe\u4e0a\uff0c\u6211\u4eec\u5c31\u5148\u5904\u7406\u51fa\u5728\u8fd9\u6761\u94fe\u4e0a\u7684\u8fb9\uff0c\u5220\u6389\u8fd9\u6761\u8fb9\u540e\u5206\u5de6\u53f3\u4e24\u68f5\u6811**\u4ece\u5927\u5230\u5c0f\u679a\u4e3e**\uff0c\u56e0\u4e3a\u8fd9\u6837\u5c31\u80fd\u4fdd\u8bc1\u5220\u53bb\u4e0a\u4e00\u6761\u8fb9\u7684\u6811\u7684 $MAD$ \u5fc5\u7136\u5927\u4e8e\u7b49\u4e8e\u5220\u53bb\u8fd9\u4e00\u6761\u8fb9\u7684\u6811\u7684 $MAD$\uff0c\u4e8e\u662f\u53ea\u9700\u8981\u987a\u7740\u4f9d\u6b21\u679a\u4e3e\u53ef\u80fd\u7684 $MAD$ \u5373\u53ef(\u6ce8\u610f\u8981\u79bb\u6563\u5316)\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n)$\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#pragma GCC optimize(2)\n#define int long long\nusing namespace std;\ninline int read(){\n\tint x=0,f=1; char c=getchar();\n\twhile(!isdigit(c)){if(c=='-') f=-1; c=getchar();}\n\twhile(isdigit(c)){x=(x<<1)+(x<<3)+(c^48); c=getchar();}\n\treturn x*f;\n}\nconst int N=1e5+5;\nint n=read(),head[N],a[N],gen[N],cnt,ans,rt,fl,rr;\nint u[N],v[N],tot,res[N];\nint qi[N];\nmap<int,int> yuan,num;\nstruct node{int v,nxt,id;}p[N<<1];\nstruct path{int u,v,id;}path[N];\ninline void add(int x,int y,int id){\n\tp[++cnt].v=y;\n\tp[cnt].id=id;\n\tp[cnt].nxt=head[x];\n\thead[x]=cnt;\n}\ninline void dfs(int x,int fa){\n\tif(fl) return ;\n\tfor(int i=head[x];i;i=p[i].nxt){\n\t\tint v=p[i].v;\n\t\tif(v==fa) continue;\n\t\tif(!fl){\n\t\t\tpath[++tot].id=p[i].id;\n\t\t\tpath[tot].u=x;\n\t\t\tpath[tot].v=v;\t\n\t\t}\n\t\tif(a[v]==ans){\n\t\t\tfl=1;\n\t\t\trr=v;\n\t\t\treturn ;\n\t\t}\n\t\tdfs(v,x);\n\t\tif(!fl)tot--;\n\t}\n}\ninline void dfs2(int x,int fa){\n\tqi[yuan[a[x]]]++;\n\tfor(int i=head[x];i;i=p[i].nxt){\n\t\tint v=p[i].v;\n\t\tif(v==fa) continue;\n\t\tdfs2(v,x);\n\t}\n}\ninline void dfs3(int x,int fa){\n\tqi[yuan[a[x]]]--;\n\tfor(int i=head[x];i;i=p[i].nxt){\n\t\tint v=p[i].v;\n\t\tif(v==fa) continue;\n\t\tdfs3(v,x);\n\t}\n}\nsigned main(){\n\tfor(int i=1;i<n;i++){\n\t\tu[i]=read(),v[i]=read();\n\t\tadd(u[i],v[i],i),add(v[i],u[i],i);\n\t}\n\tfor(int i=1;i<=n;i++) a[i]=read(),++num[a[i]],gen[i]=a[i];\n\tsort(gen+1,gen+n+1);\n\tfor(int i=n;i>=1;i--){\n\t\tif(num[gen[i]]>=2){\n\t\t\tans=gen[i];\n\t\t\tfl=1;\n\t\t\tif(num[gen[i]]>2) fl=2;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(!fl){for(int i=1;i<n;i++) cout<<0<<'\\n'; return 0;} //\u7b2c\u4e00\u79cd \n\tif(fl==2){for(int i=1;i<n;i++) cout<<ans<<'\\n'; return 0;} //\u7b2c\u4e09\u79cd\n\t//\u7b2c\u4e8c\u79cd \n\tint m=unique(gen+1,gen+n+1)-gen-1;//\u79bb\u6563\u5316 \n\tfor(int i=1;i<=m;i++) yuan[gen[i]]=i;\n\tfor(int i=1;i<=n;i++) if(a[i]==ans){rt=i; break;}\n\tint pos=yuan[ans];\n\tfl=0;\n\tfor(int i=1;i<n;i++) res[i]=-1;\n\tdfs(rt,0);\n\tdfs2(path[1].v,path[1].u);//\u5de6\u6811\u4ece\u6700\u5927\u7684\u5f00\u59cb \n\tfor(int i=1;i<=tot;i++){\n\t\twhile(qi[pos]<2&&pos>0) pos--;\n\t\tres[path[i].id]=gen[pos];\n\t\tint k=path[i].v;\n\t\tqi[yuan[a[k]]]--;\n\t\tfor(int j=head[k];j;j=p[j].nxt){\n\t\t\tint v=p[j].v;\n\t\t\tif(v!=path[i+1].v&&v!=path[i].u)\n\t\t\tdfs3(v,k);\n\t\t}\n\t}\n\t//\u53f3\u6811\u540c\u7406 \n\tint k=path[tot].u;\n\tqi[yuan[a[k]]]++;\n\tfor(int i=head[k];i;i=p[i].nxt){\n\t\tint v=p[i].v;\n\t\tif(v==path[tot].v) continue;\n\t\tdfs2(v,k);\n\t}\n\tpos=yuan[ans];\n\tfor(int i=tot;i>=1;i--){\n\t\twhile(qi[pos]<2&&pos>0) pos--;\n\t\tres[path[i].id]=max(res[path[i].id],gen[pos]);\n\t\tint k=path[i].u;\n\t\tqi[yuan[a[k]]]--;\n\t\tfor(int j=head[k];j;j=p[j].nxt){\n\t\t\tint v=p[j].v;\n\t\t\tif(v==path[i].v||v==path[i-1].u) continue;\n\t\t\tdfs3(v,k);\n\t\t}\n\t\t\n\t}\n\tfor(int i=1;i<n;i++){\n\t\tif(res[i]==-1){\n\t\t\tcout<<ans<<'\\n';\n\t\t\tcontinue;\n\t\t}\n\t\tcout<<res[i]<<'\\n';\n\t}\n}\n```",
        "postTime": 1680770651,
        "uid": 480292,
        "name": "_Cyan_",
        "ccfLevel": 0,
        "title": "CF1805E There Should Be a Lot of Maximums"
    },
    {
        "content": "## \u9898\u610f\u7b80\u8ff0\n\n- \u7ed9\u4e00\u4e2a $n$ \u4e2a\u70b9\u7684\u6811\uff0c\u70b9\u6709\u70b9\u6743\u3002\n- \u9700\u8981\u5bf9\u6bcf\u6761\u8fb9\u6c42\u51fa\u5220\u9664\u8fd9\u6761\u8fb9\u540e\u7684\u4e24\u9897\u6811\u4e2d\u6700\u5927\u7684\u5728\u5176\u4e2d\u4e00\u68f5\u6811\u4e2d\u51fa\u73b0\u81f3\u5c11\u4e24\u6b21\u7684\u70b9\u6743\u3002\n- $2 \\le n \\le 10^5$\u3002\n\n## \u9898\u76ee\u5206\u6790\n\n\u8fd9\u4e2a\u65b9\u6cd5\u6ca1\u6709\u4f7f\u7528 $\\mathrm{MAD}$ \u7684\u6027\u8d28\uff0c\u628a\u4e24\u6b21\u6362\u6210\u4efb\u4f55\u6b21\u6570\u90fd\u80fd\u505a\u3002\n\n\u9996\u5148\u53ef\u4ee5\u53d1\u73b0\uff0c\u9009\u4e00\u4e2a\u70b9\u4e3a\u6839\u540e\uff0c\u4e00\u6761\u8fb9\u53ef\u4ee5\u628a\u4e00\u9897\u6811\u5207\u6210\u539f\u6811\u7684\u4e00\u9897\u5b50\u6811\u548c\u9664\u4e86\u8fd9\u9897\u5b50\u6811\u5916\u7684\u90e8\u5206\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/q612oxt4.png)\n\n\u7136\u540e\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u7edf\u8ba1\u6bcf\u9897\u5b50\u6811\u5185\u548c\u6bcf\u9897\u5b50\u6811\u5916\u7684 $\\mathrm{MAD}$\u3002\n\n\u8fd9\u4e48\u8f6c\u6362\u4e4b\u540e\u95ee\u9898\u5c31\u597d\u89e3\u51b3\u4e86\uff0c\u8fd9\u91cc\u4f7f\u7528\u6811\u4e0a\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u4f7f\u7528\u4e24\u4e2a `std::set` \u5206\u522b\u7ef4\u62a4\u5728\u5b50\u6811\u5185\u7684\u548c\u5728\u5b50\u6811\u5916\u7684\u81f3\u5c11\u51fa\u73b0\u4e24\u6b21\u7684\u70b9\u6743\uff08\u5f53\u7136\u4e5f\u53ef\u4ee5\u7528\u56db\u4e2a\u5806\uff09\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log^2 n)$\uff0c\u8db3\u591f\u901a\u8fc7\u672c\u9898\u3002\n\n\u5982\u679c\u4e0d\u4e86\u89e3\u6811\u4e0a\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u53ef\u4ee5\u770b [OI Wiki \u4e0a\u7684\u76f8\u5173\u5185\u5bb9](https://oi-wiki.org/graph/dsu-on-tree/)\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing ull = unsigned long long;\nconst int maxn = 1e5+5;\nint n,a[maxn],b[maxn],u[maxn],v[maxn];\nint dep[maxn],sz[maxn],hs[maxn];\nint cnt1[maxn],cnt2[maxn];\nint ans[maxn];\nvector<int> G[maxn];\nset<int> s1,s2;\nvoid dfs1(int u,int fa){\n    dep[u]=dep[fa]+1;\n    sz[u]=1;\n    for(auto v:G[u]){\n        if(v==fa)continue;\n        dfs1(v,u);\n        sz[u]+=sz[v];\n        if(sz[v]>sz[hs[u]])hs[u]=v;\n    }\n}\nvoid add(int x){\n    ++cnt1[x];\n    if(cnt1[x]==2)s1.insert(x);\n    --cnt2[x];\n    if(cnt2[x]==1)s2.erase(x);\n}\nvoid del(int x){\n    --cnt1[x];\n    if(cnt1[x]==1)s1.erase(x);\n    ++cnt2[x];\n    if(cnt2[x]==2)s2.insert(x);\n}\nvoid add_tree(int u,int fa){\n    add(a[u]);\n    for(auto v:G[u])if(v!=fa)add_tree(v,u);\n}\nvoid del_tree(int u,int fa){\n    del(a[u]);\n    for(auto v:G[u])if(v!=fa)del_tree(v,u);\n}\nvoid dfs2(int u,int fa,bool keep){\n    for(auto v:G[u])if(v!=fa&&v!=hs[u])dfs2(v,u,0);\n    if(hs[u])dfs2(hs[u],u,1);\n    add(a[u]);\n    for(auto v:G[u])if(v!=fa&&v!=hs[u])add_tree(v,u);\n    ans[u]=max((s1.empty()?0:*s1.rbegin()),(s2.empty()?0:*s2.rbegin()));\n    if(!keep)del_tree(u,fa);\n}\nint main(){\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cout.tie(nullptr);\n    cin>>n;\n    for(int i=1;i<n;++i){\n        cin>>u[i]>>v[i];\n        G[u[i]].push_back(v[i]);\n        G[v[i]].push_back(u[i]);\n    }\n    for(int i=1;i<=n;++i){\n        cin>>a[i];\n        b[i]=a[i];\n    }\n    sort(b+1,b+n+1);\n    for(int i=1;i<=n;++i){\n        a[i]=lower_bound(b+1,b+n+1,a[i])-b;\n        ++cnt2[a[i]];\n    }\n    for(int i=1;i<=n;++i)if(cnt2[i]>1)s2.insert(i);\n    dfs1(1,0);\n    dfs2(1,0,1);\n    for(int i=1;i<n;++i){\n        if(dep[u[i]]>dep[v[i]])cout<<b[ans[u[i]]]<<'\\n';\n        else cout<<b[ans[v[i]]]<<'\\n';\n    }\n    return 0;\n}\n```\n",
        "postTime": 1685700270,
        "uid": 460457,
        "name": "KnownError_",
        "ccfLevel": 4,
        "title": "CF1805E There Should Be a Lot of Maximums \u9898\u89e3"
    },
    {
        "content": "### [CF1805E There Should Be a Lot of Maximums](https://www.luogu.com.cn/problem/CF1805E)\n\n\u63d0\u4f9b\u4e00\u4e2a\u4e0d\u57fa\u4e8e $\\mathrm{occ} = 2$ \u7684\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n\\log n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n)$ \u7684\u505a\u6cd5\uff08\u8fd9\u4e2a\u6bd4\u9898\u89e3\u533a\u73b0\u6709\u9898\u89e3\u5747\u4f18\u79c0\uff09\u3002\n\n\u8003\u8651\u5feb\u901f\u63cf\u8ff0\u4e00\u6761\u8fb9\u7684\u4e24\u4fa7\uff0c\u81ea\u7136\u60f3\u5230 DFS \u5e8f\u62cd\u5e73\uff0c\u5b50\u6811\u662f\u4e00\u6bb5\u533a\u95f4\uff0c\u5b50\u6811\u5916\u662f\u4e00\u6bb5\u524d\u7f00\u62fc\u4e0a\u4e00\u6bb5\u540e\u7f00\u3002\u5c06 DFS \u5e8f\u590d\u5236\u4e00\u904d\uff0c\u4e24\u90e8\u5206\u90fd\u662f\u533a\u95f4\u3002\n\n\u95ee\u9898\u6765\u5230\uff1a\u533a\u95f4\u67e5\u8be2\u51fa\u73b0\u6b21\u6570\u4e0d\u5c0f\u4e8e $k$ \u7684\u6570\u7684\u6700\u5927\u503c\u3002\u5c06\u8be2\u95ee\u79bb\u7ebf\u626b\u63cf\u7ebf\uff0c\u7528\u6743\u503c\u7ebf\u6bb5\u6811\u5b9e\u65f6\u7ef4\u62a4\u6bcf\u4e2a\u6570\u5f53\u524d\u7684\u5012\u6570\u7b2c $k$ \u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u67e5\u8be2\u76f8\u5f53\u4e8e\u7ebf\u6bb5\u6811\u4e0a\u503c\u4e0d\u5c0f\u4e8e $l$ \u7684\u6700\u5927\u4e0b\u6807\uff0c\u8fd9\u4e2a\u7ebf\u6bb5\u6811\u4e8c\u5206\u5373\u53ef\u3002\n\n\u4ee3\u7801\u60f3\u5fc5\u4e0d\u96be\u5199\u3002",
        "postTime": 1685675183,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "CF1805E There Should Be a Lot of Maximums"
    },
    {
        "content": "## \u9898\u610f\n- \u7ed9\u4f60\u4e00\u68f5\u6709 $n$ \u4e2a\u7ed3\u70b9\u7684\u6811\uff0c\u70b9\u6709\u70b9\u6743\u3002\n- \u5b9a\u4e49\u4e00\u68f5\u6811\u7684 $\\operatorname{MAD}$ \u4e3a\u8fd9\u68f5\u6811\u4e2d\u51fa\u73b0\u4e24\u6b21\u53ca\u4ee5\u4e0a\u7684\u70b9\u6743\u4e2d\u6700\u5927\u7684\uff08\u82e5\u6ca1\u6709\u51fa\u73b0\u8d85\u8fc7\u4e24\u6b21\u7684\u90a3\u4e48\u4ef7\u503c\u4e3a $0$\uff09\u3002\n- \u5b9a\u4e49\u65ad\u5f00\u4e00\u6761\u8fb9\u7684\u4ef7\u503c\u4e3a\u65ad\u5f00\u540e\u7684\u4e24\u68f5\u6811\u7684 $\\operatorname{MAD}$ \u4e2d\u8f83\u5927\u7684\u90a3\u4e2a\u3002\n- \u95ee\u65ad\u5f00\u6bcf\u6761\u8fb9\u5bf9\u5e94\u7684\u4ef7\u503c\u3002\n- $2 \\le n \\le 10^5$\n\n## \u9898\u89e3\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u5224\u5b9a\u4e00\u4e9b\u663e\u7136\u7684\u7ed3\u8bba\uff1a\n- \u6240\u6709\u70b9\u6743\u5747\u4e0d\u76f8\u540c\uff0c\u5168\u8f93\u51fa $0$\uff08\u8fd9\u4e2a\u4e0d\u7528\u8bc1\u5427\uff09\u3002\n- \u6574\u68f5\u6811\u7684 $\\operatorname{MAD}$ \u5bf9\u5e94\u7684\u70b9\u6743\u51fa\u73b0\u6b21\u6570\u5927\u4e8e $2$\uff0c\u5168\u8f93\u51fa\u8fd9\u4e2a\u503c\uff08\u6211\u4eec\u53d1\u73b0\uff0c\u65e0\u8bba\u65ad\u5f00\u54ea\u4e00\u6761\u8fb9\u90fd\u6709\u4e00\u8fb9\u6709\u81f3\u5c11\u4e24\u4e2a\u8fd9\u6837\u7684\u70b9\uff0c\u4e14\u663e\u7136\u4e0d\u53ef\u80fd\u6709\u6bd4\u5b83\u66f4\u5927\u7684\uff09\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u53ea\u9700\u8981\u5224\u65ad\u6574\u68f5\u6811\u7684 $\\operatorname{MAD}$ \u51fa\u73b0\u6070\u597d\u4e24\u6b21\u7684\u60c5\u51b5\u3002\n\n![\u56fe\u793a](https://cdn.luogu.com.cn/upload/image_hosting/heiri6dc.png)\n\n\u6b64\u5904\u52a0\u7c97\u7684\u4e24\u70b9\u662f $\\operatorname{MAD}$\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u6b64\u5904\u9664\u4e86\u6807\u7ea2\u7684\u4e24\u6761\u8fb9\uff0c\u5176\u5b83\u6240\u6709\u8fb9\u65ad\u5f00\u540e\u7b54\u6848\u5747\u4e3a $2$\u3002\n\n\u6211\u4eec\u5c31\u628a\u95ee\u9898\u7b80\u5316\u5230\u4e86\u8fd9\u6761\u8def\u5f84\u4e0a\u6240\u6709\u8fb9\u65ad\u5f00\u540e\u5206\u6210\u7684\u4e24\u68f5\u6811\u7684\u7b54\u6848\u3002\n\n\u5bb9\u6613\u60f3\u5230\uff0c\u5047\u5982\uff08\u5728\u4e0a\u56fe\u4e2d\uff09\u4ece $1$ \u5230 $4$ \u4e00\u6761\u6761\u7684\u8003\u8651\uff0c\u53ef\u4ee5\u4ece\u4e0a\u4e00\u6761\u8fb9\u7684\u7b54\u6848\u63a8\u51fa\u4e0b\u4e00\u6761\u8fb9\u7684\u7b54\u6848\u3002\n\n\u6bd4\u5982\u65ad\u5f00 $1,2$ \u4e4b\u95f4\u7684\u8fb9\u540e\uff0c$1$ \u6240\u5728\u7684\u8fd9\u4e2a\u5b50\u6811\u7b54\u6848\u5c31\u5305\u542b\u4e86 $1,5$ \u7684\u7ed3\u679c\uff0c\u5982\u679c\u8981\u65ad\u5f00 $2,4$ \u4e4b\u95f4\u7684\u8fb9\u5c31\u53ea\u9700\u8981\u5728\u539f\u5148\u7b54\u6848\u4e0a\u52a0\u4e0a $2,3$ \u7684\u5f71\u54cd\uff08\u83ab\u961f\u65e2\u89c6\u611f\u03a3(\u2299\u25bd\u2299\"a\uff09\uff09\u3002\n\n\u6b63\u5982\u666e\u901a\u83ab\u961f\u5b58\u5728\u7684\u95ee\u9898\uff0c\u6211\u4eec\u5e76\u4e0d\u80fd\u7528\u8fd9\u79cd\u65b9\u6cd5\u8ba1\u7b97\u51cf\u70b9\u7684\u8d21\u732e\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u9009\u62e9\u4ece\u53e6\u4e00\u4e2a\u65b9\u5411\u518d\u8dd1\u4e00\u6b21\uff0c\u8fd9\u6837\u5c31\u907f\u514d\u4e86\u96be\u4ee5\u5904\u7406\u51cf\u70b9\uff08\u6211\u4eec\u673a\u623f\u6709\u4e00\u4e2a\u795e\u7287\u7528\u4e86\u4e24\u68f5\u6743\u503c\u7ebf\u6bb5\u6811\u5904\u7406\u52a0\u51cf\u70b9\uff0c\u4f46\u662f\u6211\u61d2\u5f97\u6253\u7ebf\u6bb5\u6811\uff0c\u8fd9\u91cc\u6743\u5f53\u63d0\u4f9b\u53e6\u4e00\u79cd\u601d\u8def\uff09\u3002\n\n\u5e76\u4e14\u8fd9\u4e2a\u65b9\u6cd5\u7684\u5b9e\u73b0\u5f02\u5e38\u7b80\u4fbf\uff0c\u6211\u4eec\u5c06\u5176\u4e2d\u4e00\u4e2a\u7ed3\u70b9\u5b9a\u4e3a\u6839\uff0c\u4ece\u53e6\u4e00\u4e2a\u7ed3\u70b9\u4e00\u6b65\u6b65\u5f80\u4e0a\u8df3\uff08\u5b58\u4e00\u4e2a $fa$ \u6570\u7ec4\u5373\u53ef\uff09\uff0c\u6bcf\u6b21\u7edf\u8ba1\u5f53\u524d\u7ed3\u70b9\u5b57\u6570\u5185\u7684\u7b54\u6848\uff0c\u518d\u5b58\u4e00\u4e2a $vis$ \u6570\u7ec4\u9632\u6b62\u91cd\u590d\u8ba1\u7b97\u3002\n\n~~\u9700\u8981\u6ce8\u610f\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u9700\u8981\u79bb\u6563\u5316\uff0c\u4e0d\u7136\u4f1a\u9047\u5230\u4e0b\u9762\u8fd9\u79cd\u60c5\u51b5\u3002~~\n\n![\u5176\u5b9e\u8fd9\u662f\u6570\u636e\u70b9 $3$](https://cdn.luogu.com.cn/upload/image_hosting/8a35gvi5.png)\n\n\u79bb\u6563\u5316\u590d\u6742\u5ea6 $O(n \\log n)$\uff0c\u540e\u9762\u8ba1\u7b97\u7684\u590d\u6742\u5ea6\u662f $O(n)$\uff08\u56e0\u4e3a\u6bcf\u6b21\u6bcf\u4e2a\u70b9\u53ea\u4f1a\u8ba1\u7b97\u4e00\u6b21\uff0c\u5e76\u4e14\u53ea\u4f1a\u8dd1\u4e24\u6b21\uff09\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u975e\u5e38\u4f18\u79c0\uff0c\u6700\u6162\u7684\u70b9\u53ea\u8dd1\u4e86 $202$ \u6beb\u79d2\u3002\n\n## code\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<string.h>\n#define mem(a,b) memset(a,b,sizeof(a))\n#include<vector>\n#define forup(i,s,e) for(register int i=(s);i<=(e);i++)\n#define fordown(i,s,e) for(register int i=(s);i>=(e);i--)\nusing namespace std;\n#define gc getchar()\ninline int read(){//\u5feb\u8bfb\n    int x=0,f=1;char c;\n    while(!isdigit(c=gc)) if(c=='-') f=-1;\n    while(isdigit(c)){x=(x<<3)+(x<<1)+(c^48);c=gc;}\n    return x*f;\n}\n#undef gc\nconst int N=1e5+5,inf=0x3f3f3f3f;\nint n,a[N],tt[N],ans,rt,f[N],pf[N],st,vis[N];\nvector<int> lsh;\nstruct edge{\n\tint v,pos;//\u8bb0\u5f55\u6bcf\u6761\u8fb9\u7684\u7f16\u53f7\u3002\n\tedge(int _v=0,int _pos=0){pos=_pos;v=_v;};\n};\nvector<edge> e[N];\nvoid dfs(int x,int fa){\n\tf[x]=fa;\n\tif(x!=rt&&a[x]==ans) st=x;\n\tfor(auto i:e[x]){\n\t\tif(i.v==fa) continue;\n\t\tpf[i.v]=i.pos;\n       //\u8bb0\u5f55\u6bcf\u4e2a\u8282\u70b9\u5230\u7236\u7ed3\u70b9\u8fd9\u6761\u8fb9\u7684\u7f16\u53f7\uff0c\u6bcf\u6b21\u4e00\u9897\u5b50\u6811\u4f1a\u5bf9\u8fd9\u6761\u8fb9\u4ea7\u751f\u8d21\u732e\u3002\n\t\tdfs(i.v,x);\n\t}\n}\nint anst[N],res;//\u6876\u548c\u7edf\u8ba1\u7b54\u6848\u3002\nint res1[N],res2[N];//\u4e24\u6b21\u5206\u522b\u7b97\u51fa\u7684\u7b54\u6848\u3002\nvoid dfs1(int x,int fa){//\u8ba1\u7b97\u6bcf\u4e00\u5c42\u65b0\u589e\u7684\n\tanst[a[x]]++;vis[x]=1;\n\tif(anst[a[x]]>=2&&res<a[x]) res=a[x];\n\tfor(auto i:e[x]){\n\t\tif(i.v==fa||vis[i.v]) continue;\n\t\tdfs1(i.v,x);\n\t}\n}\nsigned main(){\n\tn=read();\n\tforup(i,1,n-1){\n\t\tint u=read(),v=read();\n\t\te[u].push_back(edge(v,i));e[v].push_back(edge(u,i));\n\t}\n\tlsh.push_back(0);//\u585e\u4e00\u4e2a 0\uff0c\u540e\u9762\u6709\u7528\u3002\n\tforup(i,1,n){\n\t\ta[i]=read();\n\t\tlsh.push_back(a[i]);\n\t}\n\tsort(lsh.begin(),lsh.end());\n\tlsh.erase(unique(lsh.begin(),lsh.end()),lsh.end());\n\tforup(i,1,n){\n\t\ta[i]=lower_bound(lsh.begin(),lsh.end(),a[i])-lsh.begin();\n\t\ttt[a[i]]++;\n\t\tif(tt[a[i]]>=2&&a[i]>ans){ans=max(ans,a[i]);rt=i;}\n\t}//\u79bb\u6563\u5316\u987a\u5e26\u7279\u5224\uff0c\u5b9a\u6839\u3002\n\tif(ans==0){\n\t\tforup(i,1,n-1){\n\t\t\tputs(\"0\");\n\t\t}\n\t\treturn 0;\n\t}else if(tt[ans]>2){\n\t\tforup(i,1,n-1){\n\t\t\tprintf(\"%d\\n\",lsh[ans]);\n\t\t}\n\t\treturn 0;\n\t}\n\tdfs(rt,0);//\u5148\u4ee5\u5176\u4e2d\u4e00\u4e2a\u4e3a\u6839\u3002\n\tint l=st;\n\twhile(l!=rt){\n\t\tdfs1(l,f[l]);\n\t\tres1[pf[l]]=res==0?-1:res;//\u7279\u5224\u6ca1\u627e\u5230\u7684\u60c5\u51b5\n\t\tl=f[l];//\u4e00\u6b65\u6b65\u5f80\u4e0a\u8df3\n\t}\n\trt=st;//\u6362\u6839\n\tmem(anst,0);res=0;mem(vis,0);//\u4e00\u5b9a\u8bb0\u5f97\u6e05\u7a7a\n\tdfs(rt,0);\n\tl=st;\n\twhile(l!=rt){\n\t\tdfs1(l,f[l]);\n\t\tres2[pf[l]]=(res==0?-1:res);\n\t\tl=f[l];\n\t}\n\tforup(i,1,n-1){\n\t\tint asdf=max(res1[i],res2[i]);//\u9632\u91cd\u540d\uff0c\u53e6\u5916\u7b54\u6848\u5e94\u53d6\u8f83\u5927\u503c\n\t\tif(asdf==-1){//\u5982\u679c\u662f -1 \u8bf4\u660e\u6ca1\u7b54\u6848\n\t\t\tputs(\"0\");\n\t\t}else if(asdf==0){//\u5982\u679c\u662f 0 \u8bf4\u660e\u4e0d\u5728\u90a3\u6761\u8def\u5f84\u4e0a\n\t\t\tprintf(\"%d\\n\",lsh[ans]);\n\t\t}else{//\u5176\u4f59\u7684\u5219\u662f\u627e\u5230\u7b54\u6848\n\t\t\tprintf(\"%d\\n\",lsh[asdf]);\n\t\t}\n\t}\n}\n```\n",
        "postTime": 1680784454,
        "uid": 537230,
        "name": "\u516d\u697c\u6e9c\u5218",
        "ccfLevel": 5,
        "title": "CF1805E There Should Be a Lot of Maximums \u9898\u89e3"
    },
    {
        "content": "\u9898\u610f\uff1a\u7ed9\u51fa\u4e00\u68f5\u6811\uff08\u9876\u70b9\u6570 $n \\le 2 \\cdot 10^{5}$ )\uff0c \u6bcf\u4e2a\u9876\u70b9\u6709\u4e00\u4e2a\u6743\u91cd $a_{i}$ \uff0c\u5b9a\u4e49\u4e00\u68f5\u6811\u7684 $MAD$ \u4e3a\uff1a\u8fd9\u68f5\u6811\u7684\u9876\u70b9\u4e0a\u51fa\u73b0\u81f3\u5c11 $2$ \u6b21\u7684\u6743\u91cd\u7684\u6700\u5927\u503c\uff08\u5982\u679c\u6ca1\u6709\u51fa\u73b0\u81f3\u5c11 $2$ \u6b21\u7684\uff0c\u5c31\u5b9a\u4e49\u4e3a $0$ \u3002\u5bf9\u6bcf\u6761\u8fb9\uff0c\u6c42\u51fa\u8fd9\u6761\u8fb9\u5c06\u539f\u6765\u7684\u6811\u5206\u6210\u7684\u4e24\u68f5\u5b50\u6811\u7684 $MAD$ \u503c\u7684\u6700\u5927\u503c\u3002\n\n\u601d\u8def\uff1a\u9009\u5b9a\u4e00\u4e2a\u6839\uff0c\u5c06\u8282\u70b9\u6309\u7167 DFS \u5e8f\u91cd\u65b0\u7f16\u53f7\uff0c\u90a3\u4e48\u6bcf\u4e2a\u8282\u70b9\u5bf9\u5e94\u7684\u5b50\u6811\u7684 DFS \u5e8f\u90fd\u662f\u4e00\u4e2a\u533a\u95f4\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u5c06\u539f\u95ee\u9898\u8f6c\u6362\u4e3a\u533a\u95f4\u67e5\u8be2\u95ee\u9898\uff1a\u7ed9\u5b9a $n-1$ \u4e2a\u533a\u95f4\uff0c\u5bf9\u533a\u95f4\u5185\u90e8\u548c\u5916\u90e8\u5206\u522b\u67e5\u8be2\u51fa\u73b0\u81f3\u5c11 $2$ \u6b21\u7684\u6700\u5927\u7684\u6570\u3002\u4ece\u800c\u60f3\u5230\u6211\u4eec\u53ef\u4ee5\u7528\u83ab\u961f\u7ef4\u62a4\u533a\u95f4\u5185\u5916\u90e8\u6240\u6709\u6570\u7684\u51fa\u73b0\u9891\u7387\u3002\n\n\u4ee4 `in` \uff0c `out` \u5206\u522b\u8868\u793a\u201c\u533a\u95f4\u5185\u90e8\u51fa\u73b0\u81f3\u5c11 $2$ \u6b21\u7684\u6570\u6784\u6210\u7684\u96c6\u5408\u201d\u4e0e\u201c\u533a\u95f4\u5916\u90e8\u51fa\u73b0\u81f3\u5c11 $2$ \u6b21\u7684\u6570\u6784\u6210\u7684\u96c6\u5408\u201d\uff0c `cnt_in` \uff0c `cnt_out` \u5206\u522b\u8868\u793a\u533a\u95f4\u5185\u90e8\u3001\u5916\u90e8\u4e2d\u6bcf\u4e2a\u6570\u7684\u51fa\u73b0\u9891\u7387\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u5982\u4e0b\u7684\u4ee3\u7801\uff1a\n\n```cpp\nvoid add(int u){\n\tcnt_in[u]++;\n\tif(cnt_in[u]==2) in.insert(u);\n\tcnt_out[u]--;\n\tif(cnt_out[u]==1) out.erase(u);\n}\n\nvoid remove(int u){\n\tcnt_out[u]++;\n\tif(cnt_out[u]==2) out.insert(u);\n\tcnt_in[u]--;\n\tif(cnt_in[u]==1) in.erase(u);\n}\n```\n\n\u4f46\u662f\u6ce8\u610f\u4e86\uff1a\u6211\u4eec\u9700\u8981\u67e5\u8be2\u96c6\u5408\u4e2d\u7684\u6700\u5927\u503c\uff0c\u5982\u679c\u6211\u4eec\u76f4\u63a5\u7528 `std::set` \u7ef4\u62a4\u6570\u636e\u7684\u8bdd\uff0c\u5355\u6b21\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u662f $O(\\log n)$ \uff0c\u800c\u6211\u4eec\u603b\u5171\u9700\u8981\u5bf9\u96c6\u5408\u8fdb\u884c $O(n \\sqrt{n})$ \u6b21\u589e\u5220\u64cd\u4f5c\uff0c\u603b\u5171\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u8fbe\u5230 $O(n \\sqrt{n} \\log n)$ \uff0c\u8fd9\u6837\u662f\u4f1a\u8d85\u65f6\u7684\uff08\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u5728\u6bd4\u8d5b\u7684\u65f6\u5019\u53ea\u505a\u51fa A-D \u9898\u3002\u8981\u662f div1+div2 \u7684\u8bdd\u80af\u5b9a\u72e0\u72e0\u5730\u6389\u5206\u4e86\uff09\n\n\u6240\u4ee5\u4e3a\u4e86\u8fc7\u9898\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u96c6\u5408\u672c\u8eab\u4e5f\u8fdb\u884c\u5e73\u65b9\u6839\u5206\u5757\u5904\u7406\uff1a\u5c06\u96c6\u5408\u4e2d\u7684\u6570\u6bcf $\\sqrt{n}$ \u4e2a\u5206\u4e00\u4e2a\u5757\uff0c\u5728\u589e\u5220\u7684\u8fc7\u7a0b\u4e2d\u7ef4\u62a4\u6bcf\u4e2a\u5757\u7684\u5143\u7d20\u4e2a\u6570\uff08\u8fd9\u6837\u589e\u5220\u64cd\u4f5c\u90fd\u662f $O(1)$ \uff09\uff0c\u67e5\u627e\u6700\u5927\u503c\u7684\u65f6\u5019\u6211\u4eec\u4ece\u6700\u540e\u4e00\u4e2a\u5757\u5411\u524d\u627e\uff0c\u627e\u5230\u4e00\u4e2a\u975e\u7a7a\u5757\u540e\u5c31\u5728\u8fd9\u4e2a\u5757\u91cc\u627e\u6700\u5927\u503c\u3002\u7531\u4e8e\u6211\u4eec\u6bcf\u6b21\u67e5\u8be2\u6700\u591a\u627e $\\sqrt{n}$ \u4e2a\u5757\uff0c\u5728\u4e00\u4e2a\u5757\u5185\u90e8\u6700\u591a\u627e $\\sqrt{n}$ \u6b21\uff0c \u5355\u6b21\u67e5\u8be2\u7684\u590d\u6742\u5ea6\u662f $O(\\sqrt{n})$ \u3002\u7531\u4e8e\u6211\u4eec\u53ea\u9700\u8981\u67e5\u8be2 $n-1$ \u6b21\u6700\u5927\u503c\uff0c\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4f9d\u7136\u662f $O(n \\sqrt{n})$ \u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u8fc7\u9898\u4e86\u3002\u4e0b\u9762\u5206\u5757\u67e5\u8be2\u7684\u5b9e\u73b0\u4ee3\u7801\uff1a\n\n```cpp\nclass sqrt_set{\npublic:\n\tsqrt_set(int M=1){\n\t\tassert(M>=0);\n\t\tmax_value=M;\n\t\tblock_size=(int)sqrt(M+1);\n\t\tblock_cnt=(M+block_size)/block_size;\n\t\tblock=new int[block_cnt];\n\t\tfor(int i=0;i<block_cnt;i++){\n\t\t\tblock[i]=0;\n\t\t}\n\t\texist=new bool[M+1];\n\t\tfor(int i=0;i<=M;i++){\n\t\t\texist[i]=false;\n\t\t}\n\t\t_size=0;\n\t}\n\t\n\tvoid add(int t){\n\t\tassert(0<=t && t<=max_value);\n\t\tif(exist[t]) return;\n\t\texist[t]=true;\n\t\tblock[t/block_size]++;\n\t\t_size++;\n\t}\n\t\n\tvoid remove(int t){\n\t\tassert(0<=t && t<=max_value);\n\t\tif(!exist[t]) return;\n\t\texist[t]=false;\n\t\tblock[t/block_size]--;\n\t\t_size--;\n\t}\n\t\n\tint get_max(){\n\t\tfor(int i=block_cnt-1;i>=0;i--){\n\t\t\tif(block[i]==0) continue;\n\t\t\tfor(int j=min(max_value,(i+1)*block_size-1);j>=i*block_size;j--){\n\t\t\t\tif(exist[j]) return j;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\t\n\tint get_min(){\n\t\tfor(int i=0;i<block_cnt;i++){\n\t\t\tif(block[i]==0) continue;\n\t\t\tfor(int j=i*block_size;j<=min(max_value,(i+1)*block_size-1);j++){\n\t\t\t\tif(exist[j]) return j;\n\t\t\t}\n\t\t}\n\t\treturn max_value+1;\n\t}\n\t\n\tint size(){\n\t\treturn _size;\n\t}\n\t\n\tbool empty(){\n\t\treturn _size==0;\n\t}\n\t\nprivate:\n\tbool* exist;\n\tint* block;\n\tint max_value;\n\tint block_size;\n\tint block_cnt;\n\tint _size;\n};\n```\n\n[\u5b8c\u6574\u4ee3\u7801\u94fe\u63a5](https://codeforc.es/contest/1805/submission/200532197)\n",
        "postTime": 1680521761,
        "uid": 931737,
        "name": "YocyCraft",
        "ccfLevel": 0,
        "title": "CF1805E \u83ab\u961f\u89e3\u6cd5"
    },
    {
        "content": "\u771f\u7684\u5f88\u9057\u61be\u7684\u4e00\u573a CF\u3002\u5c31\u5dee\u90a3\u4e48\u4e00\u70b9\u5c31\u8c03\u51fa E \u4e86\u3002\n\n\u8003\u8651\u4e00\u4e0b\u5982\u679c\u53ea\u8981\u6c42\u6c42\u5b50\u6811\u5185\uff0c\u51fa\u73b0\u6b21\u6570 $\\ge 2$ \u7684\u6700\u5927\u7684\u6570\u600e\u4e48\u505a\uff1a\u5bf9\u6bcf\u4e2a\u70b9\u5f00\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u4e0b\u6807\u8868\u793a\u6743\u503c\uff0c\u7ebf\u6bb5\u6811\u5408\u5e76\uff0c\u7ef4\u62a4\u51fa\u73b0\u6b21\u6570\u7684\u6700\u5927\u503c\uff0c\u82e5\u53f3\u5b50\u6811\u6700\u5927\u503c $\\ge 2$ \u5c31\u66f4\u65b0\u4e3a\u53f3\u5b50\u6811\u7684\u7b54\u6848\uff0c\u5426\u5219\u82e5\u5de6\u5b50\u6811\u6700\u5927\u503c $\\ge 2$ \u5c31\u66f4\u65b0\u4e3a\u5de6\u5b50\u6811\u7684\u7b54\u6848\uff0c\u5426\u5219\u4e0d\u66f4\u65b0\u3002\n\n\u73b0\u5728\u52a0\u4e0a\u5b50\u6811\u5916\u7684\u9650\u5236\u3002\u5bb9\u6613\u53d1\u73b0\uff0c\u5b50\u6811\u5916\u4e00\u4e2a\u6743\u503c\u51fa\u73b0\u6b21\u6570\u7b49\u4e8e\u603b\u6b21\u6570\u51cf\u53bb\u5b50\u6811\u5185\u7684\u6b21\u6570\u3002\u6240\u4ee5\uff0c\u5bf9\u4e8e\u5b50\u6811\u5185\u51fa\u73b0\u8fc7\u7684\u6743\u503c\uff0c\u6211\u4eec\u540c\u6837\u53ef\u4ee5\u7528\u7c7b\u4f3c\u4e0a\u9762\u7684\u65b9\u6cd5\uff0c\u7ef4\u62a4\u5b50\u6811\u5916\u90e8\u5206\u7684\u6700\u5927\u503c\u3002\u5bf9\u4e8e\u5b50\u6811\u5185\u6ca1\u6709\u51fa\u73b0\u8fc7\u7684\uff0c\u5b83\u5728\u5b50\u6811\u5916\u7684\u51fa\u73b0\u6b21\u6570\u5c31\u7b49\u4e8e\u603b\u7684\u51fa\u73b0\u6b21\u6570\u3002\u603b\u6b21\u6570\u53ef\u4ee5\u7528\u53e6\u4e00\u68f5\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u90a3\u4e48\u5728 pushup \u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u8fd9\u4e00\u79cd\u60c5\u51b5\u8003\u8651\u4e0a\u5c31\u884c\u4e86\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n)$\u3002\n\n\u8d5b\u540e\u53d1\u73b0\u5b98\u65b9\u9898\u89e3\u7684\u505a\u6cd5\u662f\u57fa\u4e8e\u51fa\u73b0\u6b21\u6570 $\\ge 2$ \u8fd9\u4e2a\u6027\u8d28\u7684\u3002\u4e8b\u5b9e\u4e0a\u9898\u76ee\u8fd9\u4e2a\u9650\u5236\u5b8c\u5168\u662f\u591a\u4f59\u7684\u3002\u800c\u4e14 1log \u53ea\u5f00\u4e86 $10^5$\uff0c\u5f88\u4e0d\u7406\u89e3\u3002\n\n### Code\uff1a\n\n```c++\n#include <bits/stdc++.h>\nusing namespace std;\n#define lc(x) x<<1\n#define rc(x) x<<1|1\nint n, p, x, y, cnt, tot, t[100010], a[100010], h[100010], f[400010], g[400010], tm1[100010], ans[100010], rev[100010], F[100010];\nmap <int, int> mp;\nmap <int, int> :: iterator it;\nstruct ask{\n\tint x, y;\n}q[200010];\nstruct node{\n\tint x, y, next;\n}d[200010];\nstruct segment{\n\tint l, r, s, sx, yu, yux;\n}seg[2000010];\nvoid add(int x, int y){\n\td[++p].y = y, d[p].next = h[x], h[x] = p;\n}\nvoid build(int k, int l, int r){\n\tif (l == r){\n\t\tf[k] = tm1[l];\n\t\tg[k] = l;\n\t\treturn ;\n\t}\n\tint mid = l + r >> 1;\n\tbuild(lc(k), l, mid);\n\tbuild(rc(k), mid+1, r);\n\tif (f[rc(k)] >= 2) f[k] = f[rc(k)], g[k] = g[rc(k)];\n\telse if (f[lc(k)] >= 2) f[k] = f[lc(k)], g[k] = g[lc(k)]; \n}\nvoid pushup(int k, int p){\n\tif (seg[seg[p].r].s >= 2){\n\t\tseg[p].s = seg[seg[p].r].s;\n\t\tseg[p].sx = seg[seg[p].r].sx;\n\t}\n\telse if (seg[seg[p].l].s >= 2){\n\t\tseg[p].s = seg[seg[p].l].s;\n\t\tseg[p].sx = seg[seg[p].l].sx;\n\t}\n\telse seg[p].s = seg[p].sx = 0;\n\tif (seg[seg[p].r].yu >= 2){\n\t\tseg[p].yu = seg[seg[p].r].yu;\n\t\tseg[p].yux = seg[seg[p].r].yux;\n\t}\n\telse if (seg[seg[p].l].yu >= 2){\n\t\tseg[p].yu = seg[seg[p].l].yu;\n\t\tseg[p].yux = seg[seg[p].l].yux;\n\t}\n\telse seg[p].yu = seg[p].yux = 0;\n\tif (!seg[p].l){\n\t\tif (f[lc(k)] >= 2 && seg[p].yux < g[lc(k)]) seg[p].yu = f[lc(k)], seg[p].yux = g[lc(k)];\n\t}\n\tif (!seg[p].r){\n\t\tif (f[rc(k)] >= 2) seg[p].yu = f[rc(k)], seg[p].yux = g[rc(k)];\n\t}\n}\nvoid modify(int &p, int k, int l, int r, int x){\n\tif (!p) p=++cnt;\n\tif (l == r){\n\t\tseg[p].s = 1;\n\t\tseg[p].yu = tm1[x] - 1;\n\t\tif (seg[p].yu >= 2) seg[p].yux = x;\n\t\treturn ;\n\t}\n\tint mid = l + r >> 1;\n\tif (x <= mid) modify(seg[p].l, lc(k), l, mid, x);\n\telse modify(seg[p].r, rc(k), mid+1, r, x);\n\tpushup(k, p);\n}\nint hb(int X, int Y, int k, int l, int r){\n\tif (!X) return Y;\n\tif (!Y) return X;\n\tif (l == r){\n\t\tseg[X].s += seg[Y].s;\n\t\tif (seg[X].s >= 2) seg[X].sx = l;\n\t\tseg[X].yu = tm1[l] - seg[X].s;\n\t\tif (seg[X].yu >= 2) seg[X].yux = l;\n\t\treturn X; \n\t}\n\tint mid = l + r >> 1;\n\tseg[X].l = hb(seg[X].l, seg[Y].l, lc(k), l, mid);\n\tseg[X].r = hb(seg[X].r, seg[Y].r, rc(k), mid+1, r);\n\tpushup(k, X);\n\treturn X;\n}\nvoid dfs(int x, int fa){\n\tfor (int i=h[x]; i; i=d[i].next){\n\t\tint y = d[i].y;\n\t\tif (y == fa) continue;\n\t\tdfs(y, x);\n\t\tt[x] = hb(t[x], t[y], 1, 1, tot);\n\t}\n\tint now = max(seg[t[x]].sx, seg[t[x]].yux);\n\tF[x] = fa;\n\tans[x] = now;\n}\nint main(){\n\tscanf (\"%d\", &n);\n\tfor (int i=1; i<n; i++){\n\t\tscanf (\"%d%d\", &x, &y);\n\t\tq[i].x = x, q[i].y = y;\n\t\tadd(x, y); add(y, x);\n\t}\n\tfor (int i=1; i<=n; i++){\n\t\tscanf (\"%d\", &a[i]);\n\t\tmp[a[i]] = 1;\n\t}\n\tfor (it=mp.begin(); it!=mp.end(); it++){\n\t\tit->second = ++tot;\n\t\trev[tot] = it->first;\n\t}\n\tfor (int i=1; i<=n; i++){\n\t\ta[i] = mp[a[i]];\n\t\ttm1[a[i]] ++;\n\t}\n\tbuild(1, 1, tot);\n\tfor (int i=1; i<=n; i++){\n\t\tmodify(t[i], 1, 1, tot, a[i]);\n\t}\n\tdfs(1, 0);\n\tfor (int i=1; i<n; i++){\n\t\tif (F[q[i].x] == q[i].y) printf (\"%d \", rev[ans[q[i].x]]);\n\t\telse printf (\"%d \", rev[ans[q[i].y]]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1680455549,
        "uid": 399286,
        "name": "\u82cf\u8054\u5c0f\u6e23",
        "ccfLevel": 0,
        "title": "CF1805E There Should Be a Lot of Maximums"
    }
]