[
    {
        "content": "**\u9898\u76ee\u7ffb\u8bd1**\n```cpp\n\u7ed9\u60a8\u4e00\u4e2a\u6b63\u6574\u6570n n\uff0c\n\u4e0d\u5e26\u524d\u5bfc\u96f6\uff08\u4f8b\u5982\uff0c\u6570\u5b5704\u4e0d\u6b63\u786e\uff09\u3002\n\u5728\u4e00\u4e2a\u64cd\u4f5c\u4e2d\uff0c\u60a8\u53ef\u4ee5\u5220\u9664\u7ed9\u5b9a\u6574\u6570\u7684\u4efb\u4f55\u6570\u5b57\uff0c\n\u4ee5\u4fbf\u7ed3\u679c\u4fdd\u6301\u6b63\u6574\u6570\u800c\u4e0d\u5e26\u524d\u5bfc\u96f6\u3002\n\u786e\u5b9a\u9700\u8981\u4e00\u81f4\u5730\u5e94\u7528\u4e8e\u7ed9\u5b9a\u6574\u6570n n\u7684\u6700\u5c0f\u64cd\u4f5c\u6570\uff0c\n\u4ee5\u4f7f\u5176\u6210\u4e3a\u67d0\u4e2a\u6b63\u6574\u6570\u7684\u5e73\u65b9\u6216\u62a5\u544a\u5b83\u662f\u4e0d\u53ef\u80fd\u7684\u3002\n\u5f53\u4e14\u4ec5\u5f53x=y^2 x=y\u65f6\uff0c\u6574\u6570x x x\u662f\u67d0\u4e2a\u6b63\u6574\u6570\u7684\u5e73\u65b9\u3002\nx=y^2\n\u5bf9\u4e8e\u67d0\u4e2a\u6b63\u6574\u6570y\u3002\n```\n**\u9898\u76ee\u610f\u601d**\n```cpp\n\u7ed9\u4f60\u6b63\u6574\u6570n\uff0c\n\u6bcf\u6b21\u53ef\u4ee5\u8fdb\u884c\u4e00\u6b21\u64cd\u4f5c\u79fb\u9664\u4e00\u4e2a\u6570\u5b57\n\uff08\u5f53\u7136\u4e5f\u53ef\u4ee5\u4e0d\u64cd\u4f5c\uff09\uff0c\n\u6c42\u51fa\u4e00\u4e2a\u6570x\uff0cx\u662f\u64cd\u4f5c\u540e\u5f00\u65b9\u7684\u7ed3\u679c\u3002\n\u8f93\u51fa\u6700\u5c11\u7684\u64cd\u4f5c\u6b65\u6570.\u4e0d\u80fd\u7684\u8bdd\u5c31\u8f93\u51fa-1.\n```\n**\u601d\u8def**\n```cpp\n\u66b4\u529b\u65f6\u95f4\u7ed9\u4e86\u4e24\u79d2\uff0c\n\u800c\u4e14\u53ea\u67099\u4f4d\u6570\u5b57\uff0c\n\u66b4\u529b\u65f6\u95f4\u90fd\u662f\u591a\u7684\u3002\n\u505a\u6bd4\u8d5b\u7684\u65f6\u5019\uff0c\n\u60f3\u7684\u662f\u6df1\u641c\uff0c\u4e0d\u8fc7dfs\uff0c\u8fd8\u8981\u5904\u7406\u524d\u5bfc\u96f6\u5199\u6655\u5934\u4e86\uff0c\n\u5c31\u653e\u5f03\u4e86\u3002\n\u6709\u7684\u5927\u4f6c\u6709\u7684\u4f4d\u8fd0\u7b97/2\u7684\uff0c\n\u770b\u4e0d\u61c2\u522b\u4eba\u7684\u601d\u8def\uff0c\n\u7136\u540e\u770b\u5230\u4e86\u6709\u66b4\u529b\u7684\uff0c\n\u4e5f\u5c31\u66b4\u529b\u4e86\u3002\u5148\u628a\u8f93\u5165\u7684n\u6bcf\u4f4d\u6570\u5206\u89e3\u5b58\u5165\u6570\u7ec4\uff0c\n\u5728\u4ece\u6700\u5927\u7684\u53ef\u80fd\uff08sqrt\uff08n\uff09\uff09\n\u91cc\u9762\u9012\u51cf\u627e\u662f\u5426\u7b49\u4e8en\u91cc\u9762\u7684\u51e0\u4f4d\u6570\u5b57\uff0c\n\u7b49\u4e8e\u5bf9\u7684\u4f4d\u6570\u8d8a\u591a\uff0c\n\u8bf4\u660e\u9700\u8981\u79fb\u9664\u7684\u6570\u5b57\u5c31\u8d8a\u5c11\uff0c\u64cd\u4f5c\u6b65\u6570\u4e5f\u8d8a\u5c11\u3002\n```\n**AC\u4ee3\u7801**\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nsigned main(){\n    long long n,m,a[10],b[10];\n    cin>>n;m=n;\n    int cnt1=0,cnt2=0,l;\n    while(m)a[cnt1++]=m%10,m/=10;\n    for(int i=sqrt(n);i>=1;i--){\n        long long x=i*i;cnt2=0;\n        long long k=x;\n        while(x)b[cnt2++]=x%10,x/=10;\n        l=0;\n        for(int j=0;j<cnt1;j++){\n            if(a[j]==b[l]){\n                l++;\n                if(l==cnt2)break;\n            }\n        }\n        if(l==cnt2)return cout<<cnt1-l,0;\n    }\n    puts(\"-1\");\n    return 0;\n}\n```",
        "postTime": 1566888906,
        "uid": 191132,
        "name": "GusyNight",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF962C \u3010Make a Square\u3011"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF962C)\n## \u9898\u76ee\u5206\u6790\n\n\u89c2\u5bdf\u5230\u4f4d\u6570\u6700\u5927\u4e3a $9$\uff0c$O(n!)$ \u53ef\u8fc7\uff0c\u66b4\u529b\u641c\u7d22\u3002\n\n\u6309\u4f4d\u641c\u7d22\uff0c\u9009\u62e9\u5220\u6216\u4e0d\u5220\uff0c\u5e76\u8bb0\u5f55\u5728\u4e00\u4e2a\u5b57\u7b26\u4e32\u5185\u3002\n\n\u641c\u7d22\u5230\u5c3d\u5934\u540e\uff0c\u7c7b\u6bd4\u5feb\u8bfb\uff0c\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5341\u8fdb\u5236\u6570\uff0c\u5224\u65ad\u5f00\u65b9\u540e\u662f\u5426\u4e3a\u6574\u6570\uff0c\u5e76\u66f4\u65b0\u7b54\u6848\u3002\n\n\u6700\u540e\u6ce8\u610f\u5904\u7406\u524d\u5bfc\u96f6\u7684\u60c5\u51b5\u3002\n\n\u7ec6\u8282\u770b\u4ee3\u7801\u3002\n\n## code\n\n\u559c\u63d0\u6700\u4f18\u89e3\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define rei register int\n#define N 200010\nusing namespace std;\n\ntemplate <typename T> inline void read(T &x)\n{\n\tx = 0; T f = 1; char ch = getchar();\n\twhile (!isdigit(ch)) {if (ch == '-') f = -f; ch = getchar();}\n\twhile (isdigit(ch)) {x = x * 10 + ch - 48; ch = getchar();}\n\tx *= f;\n}\n\nint len, ans = 1e9;\nchar c[N], str[N];\n\ninline bool check(int tot)\n{\n\tdouble num = 0; \n\tfor (rei i = 1; i <= tot; i++) num = num * 10 + str[i] - 48;\n\tdouble ret = sqrt(num);\n\treturn (ret == (int)ret);\n}\n\ninline void dfs(int k, int tot)\n{\n\tif (k > len)\n\t{\n\t\tif (tot && check(tot)) ans = min(len - tot, ans);\n\t\treturn;\n\t} \n\tdfs(k + 1, tot);\n\tif (c[k] == '0' && !tot) return;\n\tstr[++tot] = c[k];\n\tdfs(k + 1, tot);\n}\n\nint main()\n{\n\tscanf(\"%s\", c + 1); len = strlen(c + 1);\n\tdfs(1, 0);\n\tprintf(\"%d\", (ans == 1e9 ? -1 : ans));\n\treturn 0;\n}\n```\n",
        "postTime": 1647000055,
        "uid": 200930,
        "name": "\u30d9\u72d0\u4ed9\u59d0\u59d0\u3054",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF962C \u3010Make a Square\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u4e2a\u6df1\u641c\u7684\u6a21\u677f\u9898\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u53d1\u73b0n\u7684\u4f4d\u6570\u5f88\u5c0f\uff0c\u53ea\u67099\u4f4d\u3002\u4e8e\u662f\u6211\u4eec\u60f3\u5230\u4e86\u6df1\u641c\u7b97\u6cd5\u3002\n\n\u9996\u5148\uff0c\u628an\u62c6\u5206\u6210\u6570\u7ec4\uff0c\u8bb0n\u7684\u6570\u4f4d\u4e2a\u6570\u4f4d$|n|$\u3002\n\n\u679a\u4e3e$|n|$\u4e2a\u5143\u7d20\u7684\u5168\u6392\u5217\u3002\n\n\u4e4b\u540e\u6211\u4eec\u5224\u5b9a\u3002\n\n\u4e00\u4e2a\u662f\u5b8c\u5168\u5e73\u65b9\u6570\u5f53\u4e14\u4ec5\u5f53 \n$\\left\\lfloor\\sqrt(x)\\right\\rfloor$ = $\\sqrt(x)$\n\n\u4e8e\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5168\u6392\u5217\uff0c\u628a\u4ed6\u4eec\u62fc\u8d77\u6765\uff0c\u7136\u540e\u5224\u5b9a\u5373\u53ef\n\n\u6ce8\u610f\u8981\u53bb\u9664\u524d\u5bfc\u96f6\u548c\u957f\u5ea6\u4e3a0\u7684\u60c5\u51b5\u3002\n\n\u4ee3\u7801\u4e2d\uff0c\u5b58\u653e\u6392\u5217\u4f7f\u7528$vector$\u5b9e\u73b0\u7684\n\n\n```cpp\n// Author : harry\n// Language : C++ (GNU C++ 11)\n// Upload : CodeForces / luogu\n// Time : 2018.9\n// Problem : Make a Square\n// Tell Myself : Think Twice Code Once\n// All rights reserved\n\n#include <map>\n#include <set>\n#include <cmath>\n#include <ctime>\n#include <queue>\n#include <stack>\n#include <vector>\n#include <cstdio>\n#include <cctype>\n#include <string>\n#include <cstring>\n#include <cassert>\n#include <climits>\n#include <cstdlib>\n#include <iostream>\n#include <algorithm>\n#include <functional>\nusing namespace std ;\n\n#define rep(i,a,b) for (int (i)=(a);(i)<=(b);(i)++)\n#define Rep(i,a,b) for (int (i)=(a)-1;(i)<(b);(i)++)\n#define REP(i,a,b) for (int (i)=(a);(i)>=(b);(i)--)\n#define reg(i,x) for (int (i)=head[x];(i);i=e[i].next)\n\n#define ull unsigned long long\n#define ll long long\n#define ls ((x)<<1)\n#define rs ((x)<<1|1)\n#define mp make_pair\n#define pb push_back\n#define fi first\n#define se second\n#define endl '\\n'\n#define Pii pair<int,int>\n\nconst int N = 100010 ;\nconst int iinf = INT_MAX/2 ;\nconst ll linf = LONG_MAX/2 ;\nconst int MOD = 1e9+7 ;\n\ninline int read(){\n    int X=0,w=0; char ch=0;\n    while(!isdigit(ch)) {w|=ch=='-';ch=getchar();}\n    while(isdigit(ch)) X=(X<<3)+(X<<1)+(ch^48),ch=getchar();\n    return w?-X:X;\n}\n\nvoid write(int x){\n     if(x<0) putchar('-'),x=-x;\n     if(x>9) write(x/10);\n     putchar(x%10+'0');\n}\n\nint a[20] ;\nint n,ans=-1,x ;\nvector<int> b ;\n\nvoid init(int x){\n\twhile(x) a[++n]=x%10,x/=10 ;\n\treverse(a+1,a+n+1) ;\n}\n\nbool judge(int m){ //\u5224\u5b9a\u662f\u4e0d\u662f\u5b8c\u5168\u5e73\u65b9\u6570\n    double x=sqrt(m);\n    if (floor(x)==x) return 1;\n    return 0;\n}\n\nbool check(vector<int> dig){ //\u6df1\u641c\n\tint tmp=0 ;\n\tfor (int i=0;i<dig.size();i++) tmp=tmp*10+dig[i] ;\n\tif (dig.size()==0 || dig[0]==0 || !judge(tmp)) return 0 ;\n\treturn 1 ;\n}\n\nvoid dfs(int k,vector<int> dig){\n\tif (k==n+1){\n\t\tif (check(dig)) ans=max(ans,(int)dig.size());\n\t\treturn ;\n\t}\n\tdfs(k+1,dig);\n\tdig.pb(a[k]);dfs(k+1,dig) ;\n}\n\nint main(){\n\tscanf(\"%d\",&x) ;\n\tinit(x) ;\n\tdfs(1,b) ;\n\tif (ans==-1) printf(\"-1\\n\") ;\n\telse printf(\"%d\\n\",n-ans) ;\n}\n\n```",
        "postTime": 1536654120,
        "uid": 54900,
        "name": "__Hacheylight__",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF962C \u3010Make a Square\u3011"
    },
    {
        "content": "\t\u9898\u610f\uff1a\u7ed9\u4f60\u4e00\u4e2a\u5927\u5c0f\u57281\u52302e9\u7684\u6570\uff0c\u95ee\u80fd\u5426\u5220\u53bb\u90e8\u5206\u6570\u5b57\uff0c\u4f7f\u8fd9\u4e2a\u6570\u6210\u4e3a\u4e00\u4e2a\u5e73\u65b9\u6570\uff0c\u82e5\u80fd\uff0c\u5219\u8f93\u51fa\u6700\u5c11\u9700\u8981\u5220\u9664\u591a\u5c11\u4e2a\u6570\u5b57\u4f7f\u5f97\u539f\u6765\u7684\u6570\u6210\u4e3a\u4e00\u4e2a\u5e73\u65b9\u6570\uff0c\u5426\u5219\u8f93\u51fa-1\u3002\n    \u5206\u6790\uff1a\u62ff\u5230\u9898\u76ee\u770b\u5230\u6570\u636e\u8303\u56f4\uff1an\u6700\u59272e9\uff0c\u56e0\u6b64\u76f4\u63a5\u5927\u66b4\u529b\u4f30\u8ba1\u4f1a\u8d85\u65f6\u3002\u7136\u800c\u56e0\u4e3a\u9898\u76ee\u8981\u6c42\u662f\u8981\u5220\u9664\u4f4d\u6570\uff0c\u6545\u8054\u60f3\u5230\u6570\u4f4ddp\u3002\u5148\u5b58\u50a8\u6bcf\u4e00\u4f4d\u7684\u6570\u5b57\uff0c\u7136\u540e\u8fdb\u884cdfs\u8bb0\u5f55\u6700\u5c0f\u64cd\u4f5c\u6570\u5373\u53ef\u3002\n    \n  ```cpp\n#include <bits/stdc++.h>\n#define maxn 10005\nusing namespace std;\nconst int INF=0x3f3f3f3f;\nint bit[maxn],res;//bit\u6570\u7ec4\u5b58\u50a8\u4f4d\u6570\uff0cres\u8bb0\u5f55\u7ed3\u679c\nint cnt=0;//\u7edf\u8ba1\u603b\u4f4d\u6570\u5927\u5c0f\nvoid getbit(int x){//\u83b7\u53d6\u4e00\u4e2a\u6570\u4e0a\u5404\u4e2a\u4f4d\u4e0a\u7684\u6570\u5b57\n    while(x){\n        bit[++cnt]=x%10;\n        x/=10;\n    }\n}\nvoid dfs(int x,int num,int lowbit)//x\u4ee3\u8868\u679a\u4e3e\u4e2a\u6570\uff0cnum\u4ee3\u8868\u5f53\u524d\u7684\u6570\uff0clowbit\u4ee3\u8868\u5f53\u524d\u7684\u4f4d\u6570\n{\n\tint tmp=num;\n\tint cntt=0;//\u5f53\u524d\u7684\u6570\u7684\u4f4d\u6570\n\twhile(tmp) tmp/=10,cntt++;//\u83b7\u53d6\u5f53\u524d\u6570\u7684\u4f4d\u6570\n\tint q=sqrt(num);//\u6c42\u5f53\u524d\u7684\u5f00\u6839\n\tif(num==q*q) res=min(cnt-cntt,res);//\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u5e73\u65b9\u6570\uff0c\u5982\u679c\u662f\uff0c\u8bb0\u5f55\u4f4d\u6570\u5dee\u7684\u6700\u5c0f\u503c\n\tif(lowbit>=cnt) return;//\u5982\u679c\u5f53\u524d\u7684\u4f4d\u6570\u5927\u4e8e\u603b\u4f4d\u6570\uff0c\u8fd4\u56de\n\tfor(int i=lowbit+1;i<=cnt;i++) //\u4ece\u5f53\u524d\u4f4d\u6570\u679a\u4e3e\u5230\u603b\u4f4d\u6570\n        dfs(x+1,num*10+bit[i],i);//\u4e0d\u65ad\u9012\u5f52\u4e0b\u53bb\u6c42\u89e3\n}\nint main(){\n    //startcoding\n    int n;\n\tcin>>n;//\u8f93\u5165\u6570\n\tgetbit(n);//\u83b7\u53d6\u4f4d\u6570\n\tres=INF;//\u521d\u59cb\u503c\u8d4b\u4e88INF\n\treverse(bit+1,bit+1+cnt);//bit\u6570\u7ec4\u6240\u5b58\u50a8\u7684\u4f4d\u6570\u4e0e\u5b9e\u9645\u4f4d\u6570\u76f8\u53cd\uff0c\u56e0\u6b64\u8981\u53cd\u8f6c\u4e00\u4e0b\n\tdfs(1,0,0);//dfs\u7edf\u8ba1\u7b54\u6848\n\tif(res==cnt) puts(\"-1\"); //\u5982\u679c\u7b54\u6848\u6570\u521a\u597d\u7b49\u4e8e\u603b\u4f4d\u6570\uff0c\u5219\u4e0d\u5b58\u5728\n\telse cout<<res<<endl;//\u5426\u5219\u8f93\u51fa\u7b54\u6848\n    return 0;\n}\n\n```",
        "postTime": 1523424935,
        "uid": 83908,
        "name": "ChenJr",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF962C \u3010Make a Square\u3011(\u6570\u4f4ddp)/dfs"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u4e0d\u542b\u524d\u5bfc 0 \u7684\u6b63\u6574\u6570 $n(1\\le n\\le2\u00d710^9)$\uff0c\u4f60\u6bcf\u6b21\u53ef\u4ee5\u9009\u53d6\u8fd9\u4e2a\u6570\u7684\u4efb\u610f\u4e00\u4f4d\u5220\u53bb\uff0c\u4f46\u662f\u5f97\u5230\u7684\u6570\u4e0d\u80fd\u542b\u524d\u5bfc 0\uff0c\u95ee\u4f60\u6700\u5c11\u5220\u53bb\u51e0\u4f4d\u8fd9\u4e2a\u6570\u624d\u53d8\u6210\u5b8c\u5168\u5e73\u65b9\u6570\uff0c\u5982\u679c\u4e0d\u53ef\u80fd\uff0c\u8f93\u51fa $-1$\u3002\n\n## \u601d\u8def\n\n\u56e0\u4e3a\u539f\u6570\u5b57\u6700\u591a\u4e3a\u5341\u4f4d\u6570\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n!)$ \u7684\u66b4\u529b\u679a\u4e3e\uff1a\u4ece\u5220\u53bb 0 \u4e2a\uff0c\u5220\u53bb 1 \u4e2a\u2026\u2026\u4e00\u76f4\u679a\u4e3e\u5230\u5220\u81f3\u53ea\u5269\u4e0b\u4e00\u4e2a\uff0c\u679a\u4e3e\u5220\u53bb\u54ea\u4e9b\uff0c\u7559\u4e0b\u54ea\u4e9b\uff0c\u628a\u6240\u6709\u60c5\u51b5\u90fd\u8bd5\u4e00\u904d\u5373\u53ef\uff0c\u6ce8\u610f\u5bf9\u524d\u5bfc 0 \u7684\u5224\u65ad\uff0c\u53ea\u8981\u4e00\u53ef\u4ee5\uff0c\u5c31\u76f4\u63a5\u8f93\u51fa\u5220\u53bb\u7684\u4e2a\u6570\uff0c\u7ed3\u675f\u7a0b\u5e8f\u3002\u82e5\u5168\u90e8\u8bd5\u4e86\u4e00\u904d\u90fd\u4e0d\u884c\uff0c\u8f93\u51fa $-1$\u3002\n\n\u5173\u952e\u70b9\uff1a\n\n\u66b4\u529b\u679a\u4e3e\u53ef\u4ee5\u4f7f\u7528\u5168\u6392\u5217\uff0c\u5f00\u4e00\u4e2a\u6570\u7ec4\uff0c0 \u4ee3\u8868\u8981\u5220\u53bb\uff0c1 \u4ee3\u8868\u4fdd\u7559\u4e0b\u6765\u3002\n\n\u5224\u65ad\u524d\u5bfc 0 \uff1a\u5982\u679c\u7b2c\u4e00\u4e2a\u4fdd\u7559\u4e0b\u6765\u7684\u6570\u5b57\u4e3a 0\uff0c\u90a3\u5c31\u76f4\u63a5\u8df3\u8fc7\u8fd9\u79cd\u60c5\u51b5\u3002\n\n\u5224\u65ad\u662f\u5426\u4e3a\u5b8c\u5168\u5e73\u65b9\u6570\uff1a\u82e5\u539f\u6570\u4e3a $sum$\u3002\u5219\u5224\u65ad\u6761\u4ef6\u4e3a $(\\lfloor \\sqrt{sum}\\rfloor)^2=sum$\uff0c\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\uff1a\n\n```cpp\nfloor(sqrt(sum))*floor(sqrt(sum))==sum\n```\n\n\u8fd9\u9053\u9898\u5c31\u8fd9\u6837\u5b8c\u7f8e\u7684\u89e3\u51b3\u4e86\uff0c\u6700\u540e\u629b\u51fa\u4e2a\u95ee\u9898\u7ed9\u5927\u5bb6\u601d\u8003\uff1a\u5982\u679c $1\\le n\\le10^{18}$\uff0c\u90a3\u8be5\u5982\u4f55\u89e3\u51b3\u5462\u3002\u63d0\u793a\uff1a\u65f6\u95f4\u590d\u6742\u5ea6\u7ea6 $O(2^{\\lg n})$\uff0c\u679a\u4e3e\u6bcf\u4e2a\u6570\u5b57\u662f\u5426\u9009\u3002\n\n## \u4ee3\u7801\n\n\u4e0b\u9762\u653e\u4e0a\u6211\u7684\u4ee3\u7801\u3002\u5e0c\u671b\u5927\u5bb6\u4e0d\u8981\u6284\u88ad\uff01\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,a[20],m[20],c,f[10],d;\nbool b;\nint main(){\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    cin>>n;\n    while(n>0){\n        a[c++]=n%10;\n        n/=10;\n    }\n    for(int i=0;i<c;i++)f[i]=1;\n    for(int i=0;i<c;i++)m[i]=a[c-i-1];\n    while(1){\n\tdo{\n\t    int sum=0;\n\t    bool p=0;\n\t    for(int i=0;i<c;i++){\n\t\tif(f[i]){\n\t\t    sum=sum*10+m[i];\n\t\t    if(m[i]==0&&p==0)break;\n\t\t    p=1;\t\n\t\t}\n\t    }\n\t    if(p&&floor(sqrt(sum))*floor(sqrt(sum))==sum){\n\t        cout<<d<<endl;\n\t        return 0;\n\t    }\n\t}while(next_permutation(f,f+c));\n\tf[d++]=0;\n\tif(d==c){\n\t    b=1;\n\t    break;\n\t}\t\n    }\n\tif(b==1)cout<<-1<<endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1649505274,
        "uid": 305424,
        "name": "yuheng_wang080904",
        "ccfLevel": 0,
        "title": "CF962C"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u4e00\u4e2a\u6570\uff0c\u8981\u627e\u51fa\u4f7f\u8fd9\u4e2a\u6570\u6210\u4e3a\u5b8c\u5168\u5e73\u65b9\u6570\u7684\u6700\u5c0f\u5220\u6570\u4e2a\u6570\u3002\n\n## \u601d\u8def\n\n\u4e00\u770b\u8fd9\u4e2a\u6570\u636e\u8303\u56f4\uff0c$n\\leqslant2\\times10^9$\uff0c\u610f\u601d\u5c31\u662f\u8bf4 $n$ \u6700\u591a\u6709\u4e5d\u4f4d\u3002\n\n\u518d\u770b\u5230 _\u53ef\u4ee5\u5220\u9664\u5176\u4e2d\u7684\u4e00\u4e9b\u4f4d_\uff0c \n\n\u90a3\u8fd9\u4e0d\u5c31\u662f\u4e2a\u641c\u5417\u3002\n\n\u4e8e\u662f\u76f4\u63a5\u638f\u51fa DFS \u796d\u5929\u3002(~~\u8fd8\u796d\u4e86\u4e94\u6b21\uff0c\u53ea\u80fd\u8bf4\u6211\u592a\u849f\u84bb\u4e86~~)\n\n\u6709\u4eba\u7528\u4e86\u66b4\u529b\uff0c\u4e0d\u8fc7\u6211\u672c\u4eba\u849f\u84bb\u5f97\u8fde\u66b4\u529b\u90fd\u770b\u4e0d\u61c2\uff0c\u8fd8\u662f DFS \u5427\u3002\n\n\u6700\u5f00\u59cb\u672c\u849f\u84bb\u60f3\u9650\u5b9a\u4f4d\u6570\uff0cWA \u5f97\u5f88\u60e8...\n\n\u540e\u6765\u6539\u7528 ``bool`` \u6570\u7ec4\u5224\u65ad\u4e00\u4e2a\u6570\u7684\u53ef\u884c\u6027\uff0c\u52a0\u4e86\u7b97\u4f4d\u6570\u7684\u64cd\u4f5c\uff0c\u624d A \u6389\u4e86\u5b83\u3002\n\n## \u4ee3\u7801\u89e3\u6790\n\n+ \u7528\u4e24\u4e2a\u53c2\u6570 $K , S$ \u8868\u793a\u4e0a\u4e00\u4e2a\u9009\u4e86\u7b2c $K$ \u4e2a\u6570(\u63a5\u4e0b\u6765\u53ea\u80fd\u4ece $K+1$ \u5f00\u59cb\u641c)\uff0c\u73b0\u5728\u7684\u6570\u662f $S$\u3002\n\n+ \u6bcf\u6b21\u5bf9 $S$ \u53d6\u4f4d\u6570\uff08\u7b80\u79f0 ``ws``\uff09\uff0c\u5982\u679c $S$ \u662f\u5b8c\u5168\u5e73\u65b9\u6570\u5c31\u5c06 ``ws`` \u6807\u8bb0\u2014\u2014**\u53ef\u4ee5\u53d6\u5230\u4f4d\u6570\u4e3a** ``ws`` **\u7684\u6570**\u3002\n\n+ \u6700\u540e ``for`` \u4e00\u4e0b\u5224\u65ad ``i`` \u662f\u5426\u88ab\u6807\u8bb0\uff0c\u53d6\u6700\u5927\u503c\u3002\n\n+ ``i`` \u4e00\u5b9a\u8981**\u4ece\u5927\u5230\u5c0f**\u5faa\u73af\uff0c\u5426\u5219 TLE \u4e24\u884c\u6cea\uff01\n\n+ \u6700\u6700\u6700\u540e\uff0c\u6211\u4eec\u5c06\u8f93\u5165\u7684 ``char`` \u6570\u7ec4\u8fdb\u884c\u5904\u7406\u524d\u5bfc\u96f6\uff0c\u5e76\u5c06\u5176\u8f6c\u6362\u6210 ``int`` \u7c7b\u578b\u3002\uff08\u597d\u7b97\uff09\uff0848\u662f ASCII \u76840\uff09\n$$\na\\left[i-q+1\\right]=c_i-48\n$$\n\u5177\u4f53\u770b\u4ee3\u7801~\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nchar c[10];\nint a[10];\nint n,i,j,q;\nbool f[10];\nvoid dfs(int k,int s)\n{\n\tint tmp=s;\n\tint ws=0;//\u4f4d\u6570\n\twhile(tmp) tmp/=10,ws++;//\u6c42\u4f4d\u6570\n\tint nw=sqrt(s);\n\tif(nw*nw==s)f[ws]=1;//\u6807\u8bb0\n\tif(k>=n)return;//\u5982\u679c\u4e0a\u4e00\u4e2a\u53d6\u7684\u6570\u7684\u4f4d\u7f6e\u5728n\u4e4b\u5916\u5c31return\n\tfor(int i=k+1;i<=n;i++)\n\t\tdfs(i,s*10+a[i]);//\u9012\u5f52DFS\n}\nint main()\n{\n\tscanf(\"%s\",c);\n\tn=strlen(c);\n\twhile(c[i]=='0') i++,q++;//q\u662fc\u6570\u7ec4\u7684\u524d\u5bfc\u96f6\u7684\u4f4d\u7f6e\n\tfor(i=q;i<n;i++) a[i-q+1]=c[i]-'0';//\u5904\u7406\u524d\u5bfc\u96f6\n\tdfs(0,0);//\u521d\u59cb\u4e0a\u4e00\u4e2a\u9009\u4e86\u7b2c0\u4e2a\u6570\uff0c\u5f53\u524d\u6570\u4e3a\u96f6\n\tfor(i=n;i>0;i--)\n\t{\n\t\tif(f[i])\n\t\t{printf(\"%d\",n-i);return 0;//\u6709\u6807\u8bb0\u5c31\u8f93\u51fa\uff0c\u7b2c\u4e00\u4e2a\u5c31\u662f\u6700\u5927\u7684\n\t\t}\n\t}\n\tprintf(\"-1\");\n\treturn 0;//OVER~~\n}\n```",
        "postTime": 1645764401,
        "uid": 643735,
        "name": "RNTBW",
        "ccfLevel": 0,
        "title": "CF962C solution\u2014DFS"
    },
    {
        "content": "\u8fd9\u4e00\u9898\u4e0d\u662f\u5f88\u96be\uff0c\u601d\u8def\u5bf9\u4e86\u5c31\u884c\u4e86\u3002~~\u4f46\u662f\u6211\u8c03\u8bd5\u4e86\u4e00\u4e2a\u5c0f\u65f6\u3002~~\n### \u601d\u8def\n\u628a**\u6b63\u6574\u6570**\u62c6\u5206\u51fa\u6765\u5b58\u5165\u4e00\u4e2a\u6570\u7ec4\u91cc\uff0c\u518d\u7528\u4e00\u4e2a\u53d8\u91cf\u8bb0\u5f55\u4f4d\u6570\uff0c\u679a\u4e3e**\u5e73\u65b9\u6570**\uff0c\u628a**\u5e73\u65b9\u6570**\u4e5f\u62c6\u62c6\u5206\u51fa\u6765\u5b58\u5165\u4e00\u4e2a\u6570\u7ec4\u91cc\uff0c\u4e5f\u7528\u4e00\u4e2a\u53d8\u91cf\u8bb0\u5f55\u4f4d\u6570\uff0c\u63a5\u7740\u5224\u65ad\u5220\u6389\u540e\u80fd\u4e0d\u80fd\u53d8\u6210\u4e00\u4e2a\u5e73\u65b9\u6570\u3002\n\n------------\n\u6574\u4f53\u601d\u8def\u5c31\u662f\u8fd9\u6837\uff0c\u5176\u4ed6\u7684\u6ce8\u91ca\u770b\u4ee3\u7801\u5427\u3002\n### \u4ee3\u7801\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\nlong long n,s,b,wwss,ans=300000000000,sum;    //b= \u6b63\u6574\u6570 \u7684\u4f4d\u6570\uff0cwwss=\u679a\u4e3e\u7684 \u5e73\u65b9\u6570 \u7684\u4f4d\u6570\uff0csum=\u5bf9\u4e0a\u4e86\u7684\u6570\u91cf\u3002 \nint a[15],c[15];\nint main(){\n\tcin>>n;\n\tfor(int i=n;i>0;i/=10)\n\t\tb++;    //\u7d2f\u52a0 \u6b63\u6574\u6570 \u4f4d\u6570\u3002\n\n\tfor(int i=n,j=b-1;i>0;i/=10,j--)\n\t\ta[j]=i%10;    //\u628a \u6b63\u6574\u6570 \u4e00\u4f4d\u4e00\u4f4d\u5b58\u8fdb\u53bb\uff0c\u5012\u7740\u5b58\u5165\u662f\u4e3a\u4e86\u65b9\u4fbf\u3002\n\n\tfor(s=sqrt(n);s>=1;s--)\n\t{\n\t\twwss=0;    //\u6e05\u96f6 \u5e73\u65b9\u6570 \u7684\u4f4d\u6570\u3002 \n\t\tsum=0;    //\u6e05\u96f6sum\u3002 \n\t\tfor(int i=s*s;i>0;i/=10)\n\t\t\twwss++;    //\u7d2f\u52a0 \u5e73\u65b9\u6570 \u4f4d\u6570\u3002\n\t\tfor(int i=s*s,j=wwss-1;i>0;i/=10,j--)\n\t\t\tc[j]=i%10;    //\u628a \u5e73\u65b9\u6570 \u4e00\u4f4d\u4e00\u4f4d\u5b58\u8fdb\u53bb\uff0c\u65e0\u9700\u5012\u7740\u5b58\u5165\u4e86\u3002\n\t\tfor(int i=0;i<b;i++)\n\t\t\tif(c[sum]==a[i])sum++;    //\u5224\u65ad\u5220\u6389\u540e\u80fd\u4e0d\u80fd\u53d8\u6210\u4e00\u4e2a\u5e73\u65b9\u6570\u3002\n\t\tif(sum>=wwss)    //\u5982\u679c\u548c \u6b63\u6574\u6570 \u5bf9\u4e0a\u7684\u6570\u91cf\u5927\u4e8e \u5e73\u65b9\u6570 \u7684\u4f4d\u6570\u7684\u8bdd\uff0cans\u5b58\u8d77\u6765\u3002\n\t\t{\n\t\t\tcout<<b-wwss;\n\t\t\treturn 0;\n\t\t}\t\n\t}\n\tcout<<-1;    //\u65e0\u89e3\u8f93\u51fa-1\u3002\n \treturn 0;\n}\n```",
        "postTime": 1639058711,
        "uid": 410283,
        "name": "\u5343\u5e74\u9648\u76ae\u7cbe",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF962C \u3010Make a Square\u3011"
    }
]