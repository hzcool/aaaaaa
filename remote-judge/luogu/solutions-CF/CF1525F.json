[
    {
        "content": "## \u9898\u89e3\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u8003\u8651\u5982\u4f55\u6c42\u51fa\u4e00\u4e2a\u56fe\u7684\u6700\u5c0f\u8def\u5f84\u8986\u76d6\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5c06\u4e00\u4e2a\u6709\u5411\u56fe\u7684\u6bcf\u4e2a\u70b9\u62c6\u6210\u5165\u70b9\u4e0e\u51fa\u70b9\u4e24\u4e2a\u70b9\uff0c\u5728\u5165\u70b9\u4e0e\u51fa\u70b9\u4e24\u70b9\u4e4b\u95f4\u8fde\u8fb9\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u5c31\u5c06\u6211\u4eec\u7684\u56fe\u53d8\u6210\u4e86\u4e00\u4e2a\u4e8c\u5206\u56fe\uff0c\u7531\u4e8e\u4e8c\u5206\u56fe\u7684 $\u6700\u5c0f\u8def\u5f84\u8986\u76d6=\u70b9\u6570-\u6700\u5927\u5339\u914d$\uff0c\u539f\u56fe DAG \u7684\u8def\u5f84\u6570\u7b49\u4e8e\u6709\u6ca1\u6709\u4e0e\u51fa\u70b9\u8fde\u63a5\u7684\u5982\u70b9\u7684\u6570\u91cf\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5308\u7259\u5229\u6c42\u51fa\u539f\u56fe\u7684\u6700\u5c0f\u8def\u5f84\u8986\u76d6\u3002\n\n\u6b64\u65f6\u6211\u4eec\u7684\u5220\u8fb9\u64cd\u4f5c\u5c31\u53d8\u6210\u4e86\u4ece\u4e8c\u5206\u56fe\u4e2d\u5220\u53bb\u4e00\u4e2a\u51fa\u70b9\u6216\u5165\u70b9\u3002\n\n\u5f88\u660e\u663e\uff0c\u6211\u4eec\u5220\u53bb\u4e00\u4e2a\u70b9\u6700\u591a\u53ea\u4f1a\u8ba9\u6700\u5c0f\u8def\u5f84\u8986\u76d6\u589e\u52a0 $1$\uff0c\u4e5f\u5c31\u662f\u8ba9\u6700\u5927\u5339\u914d\u51cf $1$\uff0c\u56e0\u4e3a\u5b83\u6700\u591a\u53ea\u4f1a\u5bf9\u4e00\u5bf9\u5339\u914d\u9020\u6210\u5f71\u54cd\u3002\n\n\u800c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u6700\u5927\u5339\u914d\u4e0d\u4e3a $0$ \u7684\u4e8c\u5206\u56fe\uff0c\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a\u8282\u70b9\uff0c\u4f7f\u5f97\u6211\u4eec\u5c06\u8fd9\u4e2a\u8282\u70b9\u5220\u53bb\u540e\uff0c\u6700\u5927\u5339\u914d\u521a\u597d\u51cf $1$ \uff0c\u5373\u6240\u6709\u7684\u6700\u5927\u5339\u914d\u5b58\u5728\u4e00\u4e2a\u516c\u5171\u7684\u5339\u914d\u70b9\u3002\n\n\u5982\u679c\u4e0d\u5b58\u5728\u4e00\u4e2a\u516c\u5171\u70b9\uff0c\u90a3\u4e48\u5fc5\u5b9a\u6709\u70b9\u53ef\u4ee5\u5411\u4e00\u6761\u589e\u5e7f\u8def\u5f84\u7684\u672b\u5c3e\u8fde\u8fb9\uff0c\u4f7f\u5f97\u6700\u5927\u5339\u914d\u589e\u5927\u3002\n\n\u6240\u4ee5\u6240\u6709\u7684\u6700\u5927\u5339\u914d\u5fc5\u7136\u5b58\u5728\u8fd9\u6837\u7684\u4e00\u4e2a\u516c\u5171\u70b9\u3002\n\n\u90a3\u4e48\u5047\u8bbe\u6211\u4eec\u6700\u5f00\u59cb\u7684\u6700\u5927\u5339\u914d\u4e3a $x$\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8981\u53bb\u627e\u5230 $k+1-x$ \u6b21\u8fd9\u6837\u7684\u516c\u5171\u70b9\uff0c\u5e76\u5c06\u4ed6\u5220\u53bb\u3002\n\n\u627e\u516c\u5171\u70b9\u53ef\u4ee5\u76f4\u63a5\u4e00\u4e2a\u4e00\u4e2a\u70b9\u5730\u679a\u4e3e\uff0c\u5982\u679c\u5220\u53bb\u8fd9\u4e2a\u70b9\u540e\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\u51cf\u5c0f\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u5c31\u662f\u6240\u6709\u6700\u5927\u5339\u914d\u7684\u516c\u5171\u70b9\u3002\n\n\u5728\u627e\u5230\u8fd9\u4e9b\u516c\u5171\u70b9\u540e\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u5b83\u4eec\u5728\u5408\u9002\u7684\u65f6\u5019\u5220\u53bb\u5373\u53ef\u3002\n\n\u81f3\u4e8e\u5220\u70b9\u7684\u987a\u5e8f\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 dp\uff0c\u6765\u5b9e\u73b0\uff0c\u5373 $dp_{i,j}$ \u8868\u793a\u54e5\u5e03\u6797\u88ad\u51fb\u4e86 $i$ \u6b21\uff0c\u5df2\u7ecf\u5220\u53bb\u4e86 $j$ \u4e2a\u70b9\u3002\n\n\u6211\u4eec\u53ea\u5bf9 $i<x+j$ \u7684 $dp_{i,j}$ \u8fdb\u884c dp \u5373\u53ef\uff0c\u76f4\u63a5\u679a\u4e3e\u6bcf\u6b21\u591a\u5220\u51e0\u4e2a\u70b9\u66b4\u529b dp \u5c31\u884c\u4e86\u3002\n\n\u6700\u540e\u6211\u4eec\u53ea\u9700\u8981\u5bf9 $dp_{k,k+1-x}$ \u6309\u539f\u8def\u8fd4\u56de\u8f93\u51fa\u7b54\u6848\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O\\left(n^5\\right)$\uff0c\u5982\u679c\u4e0d\u4e00\u4e2a\u4e00\u4e2a\u70b9\u5220\u53bb\u540e\u627e\uff0c\u800c\u662f\u4e00\u6b21\u627e\u5b8c\u7684\u8bdd\u662f\u53ef\u4ee5\u505a\u5230 $O\\left(n^3\\right)$ \u7684 ~~\uff0c\u4e0d\u8fc7   $O\\left(n^5\\right)$ \u5df2\u7ecf\u53ef\u4ee5\u8fc7\u4e86~~\u3002\n## \u6e90\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define MAXN 2505\n#define lowbit(x) (x&-x)\n#define reg register\n#define mkpr make_pair\n#define fir first\n#define sec second\ntypedef long long LL;\ntypedef unsigned long long uLL;\nconst LL INF=0x7f7f7f7f7f7f7f7f;\nconst LL jzm=2333;\nconst int zero=2500;\nconst int mo=998244353;\nconst double Pi=acos(-1.0);\ntypedef pair<int,int> pii;\nconst double PI=acos(-1.0);\ntemplate<typename _T>\n_T Fabs(_T x){return x<0?-x:x;}\ntemplate<typename _T>\nvoid read(_T &x){\n\t_T f=1;x=0;char s=getchar();\n\twhile(s>'9'||s<'0'){if(s=='-')f=-1;s=getchar();}\n\twhile('0'<=s&&s<='9'){x=(x<<3)+(x<<1)+(s^48);s=getchar();}\n\tx*=f;\n}\ntemplate<typename _T>\nvoid print(_T x){if(x<0){x=(~x)+1;putchar('-');}if(x>9)print(x/10);putchar(x%10+'0');}\nint n,m,k,sta[55],stak,pre[55][55];bool link[55][55];LL dp[55][55];\nvector<int> ans[55];\nstruct ming{int x,y;}s[55];\nclass Graph{\n\tprivate:\n\t\tint head[55],tot,p[55];bool mp[55][55],vis[55];\n\tpublic:\n\t\tvoid Remove(int u){\n\t\t\tif(u<=n)for(int i=1;i<=n;i++)mp[u][i]=0;\n\t\t\telse for(int i=1;i<=n;i++)mp[i][u-n]=0;\n\t\t}\n\t\tvoid Insert(int u){\n\t\t\tif(u<=n)for(int i=1;i<=n;i++)mp[u][i]=link[u][i];\n\t\t\telse for(int i=1;i<=n;i++)mp[i][u-n]=link[i][u-n];\n\t\t}\n\t\tvoid Copy(int u){\n\t\t\tif(u<=n)for(int i=1;i<=n;i++)link[u][i]=mp[u][i];\n\t\t\telse for(int i=1;i<=n;i++)link[i][u-n]=mp[i][u-n];\n\t\t}\n\t\tbool misaka(int x){\n\t\t\tvis[x]=1;\n\t\t\tfor(int i=1;i<=n;i++){\n\t\t\t\tif(!mp[x][i])continue;\n\t\t\t\tif(p[i]==-1||(!vis[p[i]]&&misaka(p[i])))\n\t\t\t\t\treturn (p[i]=x,1);\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t\tint sakura(){\n\t\t\tfor(int i=1;i<=n;i++)p[i]=-1;int res=0;\n\t\t\tfor(int i=1;i<=n;i++){\n\t\t\t\tfor(int j=1;j<=n;j++)vis[j]=0;\n\t\t\t\tif(misaka(i))res++;\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n}G;\nsigned main(){\n\tread(n);read(m);read(k);\n\tfor(int i=1,u,v;i<=m;i++)read(u),read(v),link[u][v]=1;\n\tfor(int i=1;i<=n;i++)G.Insert(i),G.Insert(i+n);\n\tfor(int i=1;i<=k;i++)read(s[i].x),read(s[i].y);int now=n-G.sakura(),tmp=now;\n\tif(now>k){printf(\"%d\\n\",k);while(k--)printf(\"0 \");puts(\"\");return 0;}\n\tprintf(\"%d\\n\",k+k+1-now);\n\twhile(now<=k){\n\t\tfor(int i=1;i<=2*n;i++){\n\t\t\tG.Remove(i);\n\t\t\tif(n-G.sakura()>now){now++,G.Copy(i);sta[++stak]=i;break;}\n\t\t\telse G.Insert(i);\n\t\t}\n\t}\n\tmemset(dp,-0x7f,sizeof(dp));dp[0][0]=0;\n\tfor(int i=0;i<k;i++){\n\t\tfor(int j=0;j<=i-tmp;j++)dp[i][j]=-INF;\n\t\tfor(int j=max(0,i+1-tmp);j<=k+1-tmp;j++){\n\t\t\tint num=s[i+1].x;\n\t\t\tfor(int d=0;d<=k+1-j-tmp;d++){\n\t\t\t\tif(dp[i+1][j+d]<dp[i][j]+1ll*num)\n\t\t\t\t\tdp[i+1][j+d]=dp[i][j]+1ll*num,pre[i+1][j+d]=j;\n\t\t\t\tnum=max(num-s[i+1].y,0);\n\t\t\t}\n\t\t}\n\t}\n\tnow=k+1-tmp;\n\tfor(int i=k;i>0;i--){\n\t\tfor(int j=pre[i][now]+1;j<=now;j++)\n\t\t\tif(sta[j]>n)ans[i].push_back(-(sta[j]-n));\n\t\t\telse ans[i].push_back(sta[j]);\n\t\tnow=pre[i][now];\n\t}\n\tfor(int i=1;i<=k;i++){\n\t\tfor(int j=0;j<ans[i].size();j++)printf(\"%d \",ans[i][j]);\n\t\tprintf(\"0 \");\n\t}\n\tputs(\"\");\n\treturn 0;\n}\n\n```\n## \u8c22\u8c22\uff01\uff01\uff01",
        "postTime": 1621435038,
        "uid": 105141,
        "name": "StaroForgin",
        "ccfLevel": 9,
        "title": "[CF1525F]Goblins And Gnomes"
    },
    {
        "content": "\u8bc1\u660e\u89d2\u5ea6\u548c\u6784\u9020\u65b9\u6cd5\u90fd\u548c\u9898\u89e3\u6709\u6240\u4e0d\u540c\uff0c\u611f\u89c9\u53ef\u80fd\u66f4\u4e3a\u7b80\u6d01\u4e00\u4e9b\uff1f\n## \u89e3\u6790\n\uff08\u4ee5\u4e0b\u57fa\u672c\u6a21\u62df\u672c\u4eba\u5fc3\u8def\u5386\u7a0b\uff09  \n\u770b\u5230\u6700\u5c0f\u94fe\u8986\u76d6\uff0c\u8054\u60f3\u5230\u7ecf\u5178\u505a\u6cd5\uff1a\u6700\u5927\u5339\u914d\u3002  \n\u7136\u540e\u5c31\u53d1\u73b0\u9898\u76ee\u4e2d\u7684\u64cd\u4f5c\u5c31\u7b49\u4ef7\u4e8e\u5220\u9664\u4e8c\u5206\u56fe\u7684\u4efb\u610f\u4e00\u4e2a\u70b9\uff0c\u5982\u6b64\u6070\u5230\u597d\u5904\u751a\u81f3\u4e8e\u7565\u663e\u523b\u610f\u7684\u8bbe\u8ba1\uff0c\u4e5f\u4fa7\u9762\u8bf4\u660e\u8fd9\u662f\u672c\u9898\u7684\u6b63\u786e\u65b9\u5411\u4e86\u3002\n\n\u663e\u7136\u6700\u540e\u7684\u4ee3\u4ef7\u8ba1\u7b97\u5c31\u662f\u5957\u4e86\u4e00\u4e2a\u65e0\u804a\u7684\u76ae\uff0c\u5173\u952e\u5c31\u662f\u6c42\u51fa\u51cf\u5c11 $i$ \u4e2a\u6700\u5927\u5339\u914d\u7684\u6700\u5c0f\u5220\u70b9\u6570 $f_i$\u3002  \n\u7136\u540e\u5728\u7eb8\u4e0a\u753b\u6765\u753b\u53bb...\u600e\u4e48\u611f\u89c9\u5220\u9664\u4e00\u4e2a\u70b9\u5fc5\u7136\u51cf\u5c11\u4e00\u4e2a\u5339\u914d\u963f...  \n~~\u7ed3\u5408\u8fd9\u662fCF\u9898~~\uff0c\u731c\u7ed3\u8bba\uff1a\u5220\u9664\u4e00\u4e2a\u70b9\u5fc5\u7136\u51cf\u5c11\u4e00\u4e2a\u6700\u5927\u5339\u914d\u3002\n\n\u600e\u4e48\u8bc1\uff1f\n\n\u638f\u51fa\u7ecf\u5178\u7ed3\u8bba\uff1a\u6700\u5927\u5339\u914d $=$ \u6700\u5c0f\u70b9\u8986\u76d6 $=$ $n$ $-$ \u6700\u5927\u72ec\u7acb\u96c6\u3002  \n\n\u95ee\u9898\u4e00\u4e0b\u5b50\u53d8\u5f97\u7b80\u5355\u4e86\uff1a\u8f6c\u5316\u4e3a\u6bcf\u6b21\u5220\u9664\u4e00\u4e2a\u70b9\u7684\u6240\u6709\u8fb9\uff0c\u4f7f\u6700\u5927\u72ec\u7acb\u96c6\u53d8\u5927\u3002\u90a3\u4e48\u663e\u7136\u53ea\u9700\u8981\u4efb\u610f\u9009\u53d6\u4e00\u4e2a\u4e0d\u5728\u5f53\u524d\u6700\u5927\u72ec\u7acb\u96c6\u7684\u70b9\u5373\u53ef\u3002\u81f3\u4e8e\u6784\u9020\u65b9\u6848\uff0c\u9884\u5904\u7406\u51fa\u72ec\u7acb\u96c6\uff0c\u6bcf\u6b21\u5728\u8865\u96c6\u91cc\u968f\u4fbf\u6311\u4e00\u4e2a\u70b9\u5220\u53bb\u5c31\u884c\u5566\u3002  \n\n\u4e0d\u4f1a\u6784\u9020\u6700\u5927\u72ec\u7acb\u96c6\uff1f\u53ef\u4ee5\u770b\u770b [\u8fd9\u9053\u9898](https://www.luogu.com.cn/problem/P4298)\u3002\n\n\u4f7f\u7528\u5308\u7259\u5229\u5b9e\u73b0\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^3)$\uff0c\u4e5f\u53ef\u4ee5\u7528\u7f51\u7edc\u6d41\u83b7\u5f97\u66f4\u4f18\u7684\u590d\u6742\u5ea6\u3002  \n\n\uff08\u6700\u540e\u6700\u5c0f\u5316\u4ee3\u4ef7\u7684\u90a3\u90e8\u5206\u6211\u91c7\u7528\u4e86\u8d2a\u5fc3\u800c\u4e0d\u662f dp \u7684\u5b9e\u73b0\u3002\uff09  \n\uff08~~\u6240\u4ee5\u5199\u6302\u4e86\u597d\u51e0\u53d1~~\uff09\u3002  \n\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define ull unsigned ll\n#define debug(...) fprintf(stderr,__VA_ARGS__)\n#define ok debug(\"ok\\n\")\n\nconst int N=105;\nconst bool Flag=1;\n\ninline ll read() {\n  ll x(0),f(1);char c=getchar();\n  while(!isdigit(c)) {if(c=='-')f=-1;c=getchar();}\n  while(isdigit(c)) {x=(x<<1)+(x<<3)+c-'0';c=getchar();}\n  return x*f;\n}\nbool mem1;\n\nint n,m,k;\nvector<int>e[N];\nint mat[N],tag[N],tim;\nint ans;\nbool dfs(int x){\n  if(tag[x]==tim) return false;\n  tag[x]=tim;\n  for(int to:e[x]){\n    if(!mat[to]||dfs(mat[to])){\n      mat[to]=x;\n      mat[x]=to;\n      return true;\n    }\n  }\n  return false;\n}\nint op[N];\nvoid find(int x){\n  if(op[x]) return;\n  op[x]=1;\n  if(x<=n){\n    if(mat[x]) find(mat[x]);\n  }\n  else{\n    for(int to:e[x]){\n      if(to==mat[x]) continue;\n      find(to);\n    }\n  }\n}\nint q[N],ed,cur;\nvoid hangry(){\n  for(int i=1;i<=n;i++){\n    ++tim;\n    ans+=dfs(i);\n  }\n  for(int i=n+1;i<=n+n;i++){\n    if(!mat[i]) find(i);\n  }\n  for(int i=1;i<=n;i++){\n    if(op[i]) q[++ed]=i;\n    else ++cur;\n    if(!op[i+n]) q[++ed]=i+n;\n    else ++cur;\n  }\n  //printf(\"ans=%d cur=%d\\n\",ans,cur);\n  return;\n}\nint a[N],b[N];\nint cnt[N];\nint mnb=1e9+100,mna=1e9+100,idb,ida;\nint pos;\n\nbool mem2;\nsigned main() {\n#ifndef ONLINE_JUDGE\n  freopen(\"a.in\",\"r\",stdin);\n  freopen(\"a.out\",\"w\",stdout);\n#endif\n  \n  n=read();m=read();k=read();\n  for(int i=1;i<=m;i++){\n    int x=read(),y=read();  \n    e[x].push_back(y+n);\n    e[y+n].push_back(x);\n  }\n  hangry();\n  int tot=k,ori=cur;\n  ll res(0),ans=2e18;  \n  for(int i=1;i<=k;i++){\n    a[i]=read();\n    b[i]=read();\n    if(b[i]<mnb){\n      mnb=b[i];\n      idb=i;\n    }\n    if(a[i]<mna){\n      mna=a[i];\n      ida=i;\n    }\n    if(res+mna<ans){\n      ans=res+mna;\n      pos=ida;\n    }\n    while(cur<=i+n){\n      cur++;\n      res+=mnb;\n    }\n  }\n  if(res<ans){\n    ans=res;pos=k+1;\n  }\n  mnb=1e9;\n  cur=ori;\n  for(int i=1;i<=k;i++){\n    if(b[i]<mnb){\n      mnb=b[i];\n      idb=i;\n    }\n    \n    while(cur<=i+n){\n      //cnt[id]++;\n      cur++;\n      if(i>=pos) cnt[pos]++;\n      else cnt[idb]++;\n      ++tot;\n    }\n  }\n  printf(\"%d\\n\",tot);\n  for(int i=1;i<=k;i++){\n    for(int j=1;j<=cnt[i];j++){\n      int x=q[ed--];\n      printf(\"%d \",x<=n?x:-(x-n));\n    }\n    printf(\"0 \");\n  }\n  return 0;\n}\n\n```\n",
        "postTime": 1657709832,
        "uid": 449265,
        "name": "wind_whisper",
        "ccfLevel": 10,
        "title": "CF1525F Goblins And Gnomes"
    }
]