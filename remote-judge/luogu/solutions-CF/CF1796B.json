[
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\uff1f](https://zhuanlan.zhihu.com/p/610522558)\n\n\n## \u9898\u610f\u63cf\u8ff0\n\n\u7ed9\u4f60\u4e24\u4e2a\u5b57\u7b26\u4e32 $S,T$\uff0c\u4f60\u9700\u8981\u7ed9\u51fa\u4e00\u4e2a\u7531 * \u4e0e\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\uff0c\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a\n\n1. \u5176\u4e2d\u4e2a\u6570\u5c0f\u4e8e\u7b49\u4e8e\u5c0f\u5199\u5b57\u6bcd\u7684\u4e2a\u6570\u3002\n2. \u4f7f\u7528\u82e5\u5e72\u5c0f\u5199\u5b57\u6bcd\u4ee3\u66ff * \u4f7f\u5f97\u4e0e $S$ \u76f8\u540c\uff0c\u6bcf\u4e2a * \u53ef\u4ee5\u7528\u4e0d\u540c\u7684\u82e5\u5e72\u5c0f\u5199\u5b57\u6bcd\u4ee3\u66ff\u3002\n3. \u4f7f\u7528\u82e5\u5e72\u5c0f\u5199\u5b57\u6bcd\u4ee3\u66ff * \u4f7f\u5f97\u4e0e $T$ \u76f8\u540c\uff0c\u6bcf\u4e2a * \u53ef\u4ee5\u7528\u4e0d\u540c\u7684\u82e5\u5e72\u5c0f\u5199\u5b57\u6bcd\u4ee3\u66ff\u3002\n\n\u6ca1\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u8f93\u51fa NO\uff0c\u5426\u9700\u8981\u5148\u8f93\u51fa YES\u3002\n\n## \u7b80\u8981\u5206\u6790\n\n\u4e0d\u6309\u53d1\u73b0\uff0c\u9700\u8981\u7ed9\u51fa\u7684\u5b57\u7b26\u4e32\u8981\u4e48\u662f $X*$\uff0c$*X$ \u6216 $*X*$\uff0c\u5176\u4e2d $X$ \u4ee3\u8868\u82e5\u5e72\u5c0f\u5199\u5b57\u6bcd\uff0c\u5bf9\u4e8e\u7b2c\u4e09\u8005 $X$ \u7684\u957f\u5ea6\u5fc5\u987b\u5927\u4e8e\u7b49\u4e8e $2$\u3002\n\n\u968f\u540e\uff0c\u5206\u7c7b\u8ba8\u8bba\u5373\u53ef\u3002\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n```C++\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\ntypedef long long ll;\nconst ll maxn = 1e5 + 7;\nconst ll INF = 1e9 + 7, MOD = 998244353;\n\ninline ll read() {\n    char cCc;\n    ll xXx = 0, wWw = 1;\n    while (cCc < '0' || cCc > '9')\n        (cCc == '-') && (wWw = -wWw), cCc = getchar();\n    while (cCc >= '0' && cCc <= '9')\n        xXx = (xXx << 1) + (xXx << 3) + (cCc ^ '0'), cCc = getchar();\n    xXx *= wWw;\n    return xXx;\n}\n\ninline void write(ll xXx) {\n    if (xXx < 0)\n        putchar('-'), xXx = -xXx;\n    if (xXx > 9)\n        write(xXx / 10);\n    putchar(xXx % 10 + '0');\n}\n\nvoid solve() {\n    string s, t;\n    cin >> s >> t;\n    if (s[0] == t[0]) {\n        cout << \"YES\\n\";\n        cout << s[0] << \"*\\n\";\n    } else if (s[s.size() - 1] == t[t.size() - 1]) {\n        cout << \"YES\\n\" << \"*\" << t[t.size() - 1] << '\\n';\n    } else {\n        bool flag = false;\n        set<string> v1;\n        for (ll i = 0; i + 1 < s.size(); i++) {\n            v1.insert(s.substr(i, 2));\n        }\n        for (ll i = 0; i + 1 < t.size(); i++) {\n            if (v1.contains(t.substr(i, 2))) {\n                cout << \"YES\\n\" << '*' << t.substr(i, 2) << \"*\\n\";\n                flag = true;\n                break;\n            }\n        }\n        if(!flag)cout << \"NO\\n\";\n    }\n}\n\nsigned main() {\n//    freopen(\"code.in\",\"r\",stdin);\n//    freopen(\"code.out\",\"w\",stdout);\n    ll T = read();\n    while (T--)solve();\n    return 0;\n}\n```\n",
        "postTime": 1677755891,
        "uid": 378222,
        "name": "fakestd",
        "ccfLevel": 0,
        "title": "[CF1796B] Asterisk-Minor Template \u9898\u89e3"
    },
    {
        "content": "## CF1796B Asterisk-Minor Template \u9898\u89e3\n### ~~\u51e0~~\u53e5\u95f2\u8bdd\n\u6709\u53ef\u80fd\u662f SPJ \u54e6\u3002\n### \u9898\u76ee\u601d\u8def\n\u6a21\u677f\u5b57\u7b26\u4e32 $T$ \u6709\u4ee5\u4e0b\u51e0\u79cd\u60c5\u51b5\uff08\u5047\u8bbe $T$ \u4e2d\u5c0f\u5199\u5b57\u6bcd\u4e32\u7528 `s` \u8868\u793a\uff09\uff1a\n\n- `s*`\uff0c\u5373 $a_0$ \u4e0e $b_0$ \u76f8\u540c\u7684\u60c5\u51b5\u3002\n\n- `*s`\uff0c\u5373 $a$ \u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u4e0e $b$ \u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u76f8\u540c\u7684\u60c5\u51b5\u3002\n\n- `*s*`\uff0c\u5373 $a$ \u7684\u67d0\u4e2a\u5b57\u4e32\u4e0e $b$ \u7684\u67d0\u4e2a\u5b50\u4e32\u76f8\u540c\u7684\u60c5\u51b5\uff0c\u9700\u8981\u4fdd\u8bc1 `s` \u81f3\u5c11\u6709\u4e24\u4e2a\u5b57\u7b26\u3002\n\n### \u9898\u76ee\u5b9e\u73b0\n\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u76f4\u63a5\u7279\u5224\uff1a\n\n```cpp\nif(a[0]==b[0]){\n\tcout<<\"YES\"<<endl<<a[0]<<\"*\"<<endl;\n}\n```\n\n\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4e5f\u4e00\u6837\uff1a\n\n```cpp\nelse if(a[lena-1]==b[lenb-1]){\n\tcout<<\"YES\"<<endl<<\"*\"<<a[lena-1]<<endl;\n}\n```\n\n\u7b2c\u4e09\u79cd\u60c5\u51b5\uff0c\u7531\u4e8e\u524d\u4e24\u79cd\u60c5\u51b5\u5df2\u7ecf\u6392\u9664\u4e86 $a_0$ \u548c $a_{lena-1}$\uff0c\u6240\u4ee5\u9700\u8981\u4ece $a_1$ \u5230 $a_{lena-2}$ \u8fdb\u884c\u904d\u5386\u3002\n\n\u6bcf\u6b21\u53d6 $a_i$ \u81f3 $a_{i+1}$ \u4e24\u4e2a\u5b57\u7b26\u5b58\u50a8\u5230\u4e00\u4e2a\u4e32\uff0c\u539f\u56e0\u5df2\u8bf4\u660e\u3002\u968f\u540e\u5728 $b$ \u4e2d\u67e5\u627e\uff0c\u82e5\u627e\u5230\uff0c\u5c31\u8f93\u51fa\u5e76\u6807\u8bb0\uff0c\u7136\u540e\u9000\u51fa\u3002\n\n```cpp\nelse{\n\tfor(int i=0;i<lena-1;i++){\n\t\tstring ext=a.substr(i,2);  //\u622a\u53d6\uff0c\u5b58\u50a8\n\t\tif(b.find(ext)!=string::npos){  //\u5982\u679c\u627e\u5230\n\t\t\tcout<<\"YES\"<<endl<<\"*\"<<ext<<\"*\"<<endl;\n\t\t\tf=true;  //\u6807\u8bb0\u5df2\u627e\u5230\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(!f) cout<<\"NO\"<<endl;  //\u5982\u679c\u6ca1\u627e\u5230\n\telse f=false;  //\u5426\u5219\u8fd8\u539f\n}\n```\n## AC Coding\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n;\nstring s,s2;\nbool f;\nint main(){\n\tcin>>n;\n\twhile(n--){\n\t\tcin>>s>>s2;\n\t\tif(s[0]==s2[0]){\n\t\t\tcout<<\"YES\"<<endl<<s[0]<<\"*\"<<endl;\n\t\t}\n\t\telse if(s[s.size()-1]==s2[s2.size()-1]){\n\t\t\tcout<<\"YES\"<<endl<<\"*\"<<s[s.size()-1]<<endl;\n\t\t}\n\t\telse{\n\t\t\tfor(int i=0;i<s.size()-1;i++){\n\t\t\t\tstring ext=s.substr(i,2);\n\t\t\t\tif(s2.find(ext)!=string::npos){\n\t\t\t\t\tcout<<\"YES\"<<endl<<\"*\"<<ext<<\"*\"<<endl;\n\t\t\t\t\tf=true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!f) cout<<\"NO\"<<endl;\n\t\t\telse f=false;\n\t\t}\n\t}\n\treturn 0;\n}\n\n```\n\n## Thanks for watching.",
        "postTime": 1682414134,
        "uid": 448485,
        "name": "lizongze0910",
        "ccfLevel": 4,
        "title": "CF1796B Asterisk-Minor Template \u9898\u89e3"
    },
    {
        "content": "## \u9898\u610f\uff1a\n\u9898\u610f\u7ffb\u8bd1\u4e2d\u5df2\u6709\u3002\n\n## \u5206\u6790\uff1a\n\u8bbe $n=a$ \u7684\u957f\u5ea6 $-1$\uff0c$m=b$ \u7684\u957f\u5ea6 $-1$\uff0c\u5e76\u4e14\u4ece $0$ \u5f00\u59cb\u3002\n- \u5bf9\u4e8e $a_0=b_0$ \u8f93\u51fa $a_0+$`*` \u5373\u53ef\u3002\n- \u5bf9\u4e8e $a_n=b_m$ \u8f93\u51fa `*`$+a_n$ \u5373\u53ef\u3002\n- \u5426\u5219\u81f3\u5c11\u9700\u8981 $a$ \u548c $b$ \u81f3\u5c11\u6709\u4e00\u4e2a\u76f8\u540c\u7684\u4e14\u957f\u5ea6\u5927\u4e8e $2$ \u7684\u5b50\u4e32\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u5b50\u4e32\uff08\u8bbe\u4e3a $s$\uff09\u8f93\u51fa `*`$s$`*`\u3002\n\n## \u4ee3\u7801\uff1a\n```cpp\ninline void solve() {\n\tstring a, b;\n\tcin >> a >> b;\n\tint N = a.size() - 1, M = b.size() - 1;\n\tif (a[0] == b[0]) {\n\t\tcout << \"YES\\n\" << a[0] << \"*\\n\";\n\t\treturn ;\n\t}\n\tif (a[N] == b[M]) {\n\t\tcout << \"YES\\n\" << '*' << a[N] << '\\n';\n\t\treturn ;\n\t}\n\tfor (int i = 0; i < N; i ++) {\n\t\tstring temp = a.substr(i, 2);\n\t\tif (b.find(temp) != b.npos) {\n\t\t\tcout << \"YES\\n\" << \"*\" << temp << \"*\\n\";\n\t\t\treturn ;\n\t\t}\n\t}\n\tcout << \"NO\\n\";\n}\n```",
        "postTime": 1678975618,
        "uid": 706290,
        "name": "NOI365",
        "ccfLevel": 0,
        "title": "CF1796B\u9898\u89e3"
    },
    {
        "content": "\u8003\u8651\u6784\u9020\u7684\u5b57\u7b26\u4e32\u7684\u6700\u7b80\u5f62\u5f0f\uff0c\u663e\u7136\u53ea\u6709\u56db\u79cd\uff0c\u5206\u522b\u662f\uff1a\n\n1. $\\text S \\texttt *$\n2. $\\texttt * \\text S$\n3. $\\texttt * \\text S \\texttt *$\n4. $\\texttt * $\n\n\uff08$\\text S$ \u8868\u793a\u4efb\u610f\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\uff09\n\n\u5176\u4e2d\uff0c\u7b2c 1 \u79cd\u65e0\u8bba $\\text S$ \u957f\u5ea6\u662f\u591a\u5c11\u90fd\u5df2\u7ecf\u6ee1\u8db3\u4e86\u6761\u4ef6\uff0c\u7b2c 2 \u79cd\u4e5f\u662f\uff0c\u7b2c 4 \u79cd\u5219\u662f\u65e0\u8bba\u5982\u4f55\u4e5f\u4e0d\u6ee1\u8db3\u6761\u4ef6\u3002\n\n\u800c\u7b2c 3 \u79cd\u5982\u679c $\\text S$ \u7684\u957f\u5ea6\u4e3a $1$\uff0c\u90a3\u4e48\u5c06\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff08\u56e0\u4e3a $\\texttt * $ \u7684\u4e2a\u6570\u5927\u4e8e\u5c0f\u5199\u5b57\u6bcd\u7684\u4e2a\u6570\uff09\uff0c\u800c $\\text S$ \u7684\u957f\u5ea6\u5927\u4e8e $1$\uff0c\u5c31\u6ee1\u8db3\u6761\u4ef6\u4e86\u3002\n\n\u5047\u5982 $\\text S$ \u7684\u957f\u5ea6\u7b49\u4e8e $1$\uff0c\u4e14 $a$ \u4e0e $b$ \u540e\u9762\u8fd8\u6709\u76f8\u540c\u7684\u5b57\u7b26\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u5c06\u539f\u6765\u6784\u9020\u51fa\u6765\u7684\u5b57\u7b26\u4e32\u53d8\u6210 $\\texttt * \\text S \\texttt * \\text T \\texttt * $\u3002\n\n\u6b64\u65f6\uff0c\u53c8\u4f1a\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5\uff1a\n- $\\text T$ \u957f\u5ea6\u4e3a $1$\n- $\\text T$ \u957f\u5ea6\u5927\u4e8e $1$\n\n\u5f53 $\\text T$ \u7684\u957f\u5ea6\u4e3a $1$ \u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u5b57\u7b26\u4e32\u4ecd\u7136\u4e0d\u4f1a\u6ee1\u8db3\u6761\u4ef6\uff0c\u800c $\\text T$ \u7684\u957f\u5ea6\u5927\u4e8e $1$ \u7684\u65f6\u5019\uff0c\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u6784\u9020\u8fd9\u6837\u7684\u5b57\u7b26\u4e32\uff1a$\\texttt * \\text T \\texttt * $\uff0c\u800c\u4e0d\u53bb\u7ba1 $\\text S$\u3002\n\n\u4e4b\u540e\u4ecd\u7136\u540c\u7406\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad $a$ \u548c $b$ \u662f\u5426\u6709\u7684\u5728\u6700\u4e24\u8fb9\u7684\u76f8\u540c\u5b57\u7b26\uff0c\u4ee5\u53ca\u5728\u4e2d\u95f4\u7684\u957f\u5ea6\u4e3a $2$ \u7684\u76f8\u540c\u5b57\u7b26\u4e32\u5373\u53ef\u3002\n\n- - -\n\n\u7a0b\u5e8f\u8bbe\u8ba1\uff1a\n1. \u5148\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u6784\u9020\u7b2c 1 \u79cd\u548c\u7b2c 2 \u79cd\u3002\n2. \u904d\u5386\u5b57\u7b26\u4e32 $a$ \u548c $b$\uff0c\u67e5\u627e\u957f\u5ea6\u4e3a $2$ \u4ee5\u4e0a\u7684\u76f8\u540c\u7684\u5b50\u4e32\u3002\n3. \u5982\u679c\u627e\u5230\u5c31\u8f93\u51fa\uff0c\u5426\u5219\uff0c\u8f93\u51fa $\\tt NO$ \u5373\u53ef\u3002\n\n```c\n#include \"bits/stdc++.h\"\nusing namespace std;\nstring a, b;\n#define l1 a.size() - 1\n#define l2 b.size() - 1\n\nvoid get() {\n\tfor (int i = 0; i < l1; ++i) {\n\t\tfor (int j = 0; j < l2; ++j) {\n\t\t\tif (a[i] == b[j] && a[i + 1] == b[j + 1]) {\n\t\t\t\tcout << \"YES\\n\";\n\t\t\t\tcout << '*' << a[i] << a[i + 1] << \"*\\n\";\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\tcout << \"NO\\n\";\n\treturn;\n}\n\nint main() {\n\tint T;\n\tios::sync_with_stdio(false); cin.tie(0); cout.tie(0);\n\tcin >> T;\n\twhile (T--) {\n\t\tcin >> a >> b;\n\t\tif (a[0] == b[0]) {\n\t\t\tcout << \"YES\\n\";\n\t\t\tcout << a[0] << \"*\\n\";\n\t\t} else if (a[l1] == b[l2]) {\n\t\t\tcout << \"YES\\n\";\n\t\t\tcout << '*' << a[l1] << '\\n';\n\t\t} else get();\n\t}\n}\n```",
        "postTime": 1678599101,
        "uid": 322620,
        "name": "_SHM_",
        "ccfLevel": 3,
        "title": "CF1796B"
    }
]