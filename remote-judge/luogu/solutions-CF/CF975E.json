[
    {
        "content": "## CF975E\n\n\u6839\u636e\u4f60\u7684\u521d\u4e2d\u7269\u7406\u5b66\u77e5\u8bc6\u53ef\u4ee5\u53d1\u73b0\uff0c\u65cb\u8f6c\u4e2d\u5fc3\u548c\u91cd\u5fc3\u7684\u8fde\u7ebf\u5728\u91cd\u529b\u6240\u5728\u7684\u76f4\u7ebf\u4e0a\u65f6\uff0c\u65cb\u8f6c\u624d\u4f1a\u505c\u6b62\u3002\n\n\u7136\u540e\u91cd\u5fc3\u8fd9\u4e2a\u4e1c\u897f\u53c8\u5f88\u597d\u7ef4\u62a4\uff0c\u53ea\u7528\u77e5\u9053\u65cb\u8f6c\u4e2d\u5fc3\u7684\u5750\u6807\u548c\u5b83\u5230\u65cb\u8f6c\u4e2d\u5fc3\u7684\u8ddd\u79bb\u5c31\u597d\u4e86\u3002\n\n\u4e8e\u662f\u8003\u8651\u7ef4\u62a4\u91cd\u5fc3\u4f4d\u7f6e\u548c\u91cd\u5fc3\u548c\u591a\u8fb9\u5f62\u4e0a\u5404\u70b9\u7ec4\u6210\u7684**\u5411\u91cf**\uff0c\u518d\u8bb0\u5f55\u4e0b\u65cb\u8f6c\u4e86\u591a\u5c11\u89d2\u5ea6\uff0c\u6bcf\u6b21\u4fee\u6539\u76f4\u63a5\u7528\u65cb\u8f6c\u89d2\u5ea6\u7b97\u5f53\u524d\u5411\u91cf\uff0c\u5f97\u5230\u5f53\u524d\u70b9\u7684\u4f4d\u7f6e\u3002\n\n**\u4e00\u4e2a\u6bd4\u8f83\u91cd\u8981\u7684\u70b9**\n\n\u521d\u59cb\u91cd\u5fc3\u5750\u6807**\u4e0d\u662f**$(\\frac{\\sum_{i\\le n}x_i}{n},\\frac{\\sum_{i\\le n}y_i}{n})$\n\n\u4e00\u4e2a\u53cd\u4f8b\uff1a\u5728$\\frac{1}{4}$\u5706\u7684\u5706\u5f27\u4e0a\u53d6\u5f88\u591a\u4e2a\u70b9\uff0c\u6309\u7167\u9006\u65f6\u9488\u987a\u5e8f\u8fde\u8fb9\uff0c\u7136\u540e\u628a\u6700\u5de6\u8fb9\u548c\u6700\u53f3\u8fb9\u7684\u70b9\u548c\u5706\u5fc3\u8fde\u8fb9\u3002\u8fd9\u6837\u7684\u56fe\u5f62\u6309\u7167\u4e0a\u5f0f\u6c42\u51fa\u7684\u91cd\u5fc3\u548c\u5706\u5f27\u4f1a\u975e\u5e38\u63a5\u8fd1\uff0c\u4f46\u663e\u7136\u4e0d\u662f\u8fd9\u6837\u7684\u3002\n\n\u6b63\u786e\u7684\u6c42\u91cd\u5fc3\u65b9\u6cd5\u662f**\u4e09\u89d2\u5256\u5206+\u5e26\u6743\u5e73\u5747**\uff0c\u5bf9\u51f8\u591a\u8fb9\u5f62\u6709$G=\\frac{\\sum_{i} s_i\\times G_i}{\\sum_i s_i}$\uff0c\u5176\u4e2d$s_i,G_i$\u8868\u793a\u5256\u51fa\u6765\u7b2c$i$\u4e2a\u4e09\u89d2\u5f62\u7684\u9762\u79ef\u548c\u91cd\u5fc3\u3002\n\n\u5982\u679c\u628a\u4e09\u89d2\u5f62\u770b\u6210\u8d28\u70b9\u4e0a\u9762\u7684\u5f0f\u5b50\u5927\u6982\u4f1a\u6bd4\u8f83\u597d\u7406\u89e3\u4e9b\uff1f\n\n\u4ee3\u7801\n```cpp\n//maremaremaremaremaremaremaremaremaware\n#include<bits/stdc++.h>\n#define For(i,x,y) for(int i=(x);i<=(y);++i)\n#define Rof(i,x,y) for(int i=(x);i>=(y);--i)\ntypedef double db;\ntypedef long double ldb;\ntypedef long long ll;\nconst int N=1e4+5;\nusing namespace std;\n\nint pin[2],x[N],y[N];\ndb gx=0,gy=0,dd=0,S=0;\nstruct vec{\n\tvec(db a=0,db b=0){ x=a,y=b; }\n\tdb x,y;\n}a[N];\n\ndb dist(db x,db y,db _x,db _y){ return sqrt((x-_x)*(x-_x)+(y-_y)*(y-_y)); }\ndb dot(vec a,vec b){ return a.x*b.x+a.y*b.y; }\ndb cross(vec a,vec b){ return a.x*b.y-a.y*b.x; } \ndb deg(vec a,vec b){ return atan2(cross(a,b),dot(a,b)); }\nvec rotate(vec l,ldb d){ return vec(l.x*cos(d)-l.y*sin(d),l.y*cos(d)+l.x*sin(d)); }\n\nint main(){\n\tint n,q,op,f,t;\n\tscanf(\"%d%d\",&n,&q);\n\tFor(i,1,n){\n\t\tscanf(\"%d%d\",&x[i],&y[i]);\n//\t\tgx+=(ldb)1.0*x[i]/n,gy+=(ldb)1.0*y[i]/n;\n\t}\n\tpin[0]=1,pin[1]=2;\n\tFor(i,2,n-1){\n\t\tdb xx=(x[i]+x[i+1]+x[1])/3.00,yy=(y[i]+y[i+1]+y[1])/3.00;\n\t\tdb s=cross(vec((db)x[i]-x[1],(db)y[i]-y[1]),vec((db)x[i+1]-x[1],(db)y[i+1]-y[1]))/2.00;\n\t\tS+=s,gx+=s*xx,gy+=s*yy;\n\t}\n\tgx/=S,gy/=S;\n//\tgx/=1.0*n,gy/=1.0*n;\n//\tprintf(\"%.10Lf %.10Lf\\n\",gx,gy);\n\tFor(i,1,n) a[i]=vec(x[i]-gx,y[i]-gy);\n\twhile(q--){\n\t\tscanf(\"%d\",&op);\n\t\tif(op==1){\n\t\t\tscanf(\"%d%d\",&f,&t);\n\t\t\tif(f==pin[0]) f=pin[1]; else f=pin[0];\n\t\t\tvec nowaf=rotate(a[f],dd);\n\t\t\tdb fx=gx+nowaf.x,fy=gy+nowaf.y;\n\t\t\tdb d=deg(vec(-nowaf.x,-nowaf.y),vec(0.00,-1.00));\n\t\t\tdd+=d,gy=fy-dist(fx,fy,gx,gy),gx=fx;\n\t\t\tif(f==pin[1]) pin[0]=t; else pin[1]=t;\n\t\t} else{\n\t\t\tscanf(\"%d\",&f);\n\t\t\tvec nowaf=rotate(a[f],dd);\n\t\t\tprintf(\"%.10f %.10f\\n\",gx+nowaf.x,gy+nowaf.y);\n\t\t}\n\t}\n}\n```\n",
        "postTime": 1591313638,
        "uid": 76186,
        "name": "\u5947\u5361",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF975E \u3010Hag's Khashba\u3011"
    }
]