[
    {
        "content": "\u4f17\u6240\u5468\u77e5\u6811\u7684\u91cd\u5fc3\u6709\u4e2a\u6027\u8d28\uff1a\u4e00\u68f5\u6811\u6700\u591a\u6709\u4e24\u4e2a\u91cd\u5fc3\uff0c\u4e14\u76f8\u90bb\n\n\u90a3\u4e48\u53ea\u9700\u8981\u8003\u8651\u53ea\u6709\u4e00\u4e2a\u91cd\u5fc3\u548c\u4e24\u4e2a\u91cd\u5fc3\u7684\u60c5\u51b5\n\n\u9996\u5148\u5982\u679c\u8fd9\u68f5\u6811\u53ea\u6709\u4e00\u4e2a\u91cd\u5fc3\uff0c\u90a3\u4e48\u968f\u4fbf\u5220\u4e00\u6761\u8fb9\u518d\u52a0\u56de\u6765\u5c31\u597d\u4e86\n\n\u7136\u540e\u662f\u4e24\u4e2a\u91cd\u5fc3\u7684\u60c5\u51b5\uff0c\u8003\u8651\u8fd9\u6837\u4e00\u68f5\u6811\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/mui5q3yu.png)\n\n\u8bbe\u8282\u70b9 $1$ $2$ \u662f\u8fd9\u68f5\u6811\u7684\u4e24\u4e2a\u91cd\u5fc3\uff0c\u90a3\u4e48\u5220\u53bb\u8282\u70b9 $1$ \u540e\u6700\u5927\u7684\u5b50\u6811\u5fc5\u5b9a\u662f\u8282\u70b9 $2$ \u8fd9\u68f5\u5b50\u6811\uff0c\u5220\u53bb\u8282\u70b9 $2$ \u540e\u6700\u5927\u7684\u5b50\u6811\u4e5f\u5fc5\u5b9a\u662f\u8282\u70b9 $1$ \u8fd9\u68f5\u5b50\u6811\n\n\u4e3a\u4ec0\u4e48\uff1f\u8003\u8651\u53cd\u8bc1\u6cd5\uff0c\u5982\u679c\u5220\u53bb\u8282\u70b9 $1$ \u540e\u6700\u5927\u7684\u5b50\u6811\u662f $3$ \u8fd9\u68f5\u5b50\u6811\uff0c\u90a3\u4e48\u5c06\u8282\u70b9 $2$ \u5220\u53bb\u540e\uff0c\u8282\u70b9 $1$ \u8fd9\u68f5\u5b50\u6811\u7684\u5927\u5c0f\u81f3\u5c11\u4e3a\u5b50\u6811 $3$ \u7684\u5927\u5c0f$+1$\uff08\u8282\u70b9 $1$\uff09\n\n\u4e5f\u5c31\u662f\u8bf4\u5220\u53bb\u8282\u70b9 $2$ \u540e\uff0c\u6700\u5927\u5b50\u6811\u7684\u5927\u5c0f\u81f3\u5c11\u4e3a\u5b50\u6811 $3$ \u7684\u5927\u5c0f$+1$\uff0c\u8fd9\u4e2a\u503c\u6bd4\u8282\u70b9 $1$ \u6700\u5927\u7684\u5b50\u6811\u4e5f\u5c31\u662f $3$ \u8fd9\u68f5\u5b50\u6811\u5927\uff0c\u6240\u4ee5\u8282\u70b9 $2$ \u5c31\u4e0d\u53ef\u80fd\u662f\u91cd\u5fc3\u4e86\uff0c\u4e0d\u7b26\u5408\u8bbe\u5b9a\u3002\u6240\u4ee5\u539f\u547d\u9898\u6210\u7acb\n\n\u7531\u6b64\u6211\u4eec\u53ef\u4ee5\u63a8\u51fa\u8282\u70b9 $1$ \u7684\u5b50\u6811\u548c\u8282\u70b9 $2$ \u7684\u5b50\u6811\u5927\u5c0f\u76f8\u7b49\uff08\u56e0\u4e3a\u4ed6\u4eec\u4e24\u4e2a\u90fd\u662f\u91cd\u5fc3\uff0c\u5220\u53bb\u540e\u6700\u5927\u5b50\u6811\u76f8\u7b49\uff09\n\n\u63a5\u4e0b\u6765\u5c31\u597d\u529e\u4e86\uff0c\u6211\u4eec\u53ea\u8981\u4e24\u4e2a\u5b50\u6811\u4e0d\u76f8\u7b49\u5c31\u53ef\u4ee5\u4e86\n\n\u4ece\u8282\u70b9 $2$ \u7684\u5b50\u6811\u91cc\u53d6\u4e00\u4e2a\u53f6\u5b50\u51fa\u6765\u8fde\u5230\u8282\u70b9 $1$ \u4e0a\u5373\u53ef\n\n$Code\\ Below$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e5+5; \n\nint read()\n{\n\tint s=0;\n\tchar c=getchar(),lc='+';\n\twhile (c<'0'||'9'<c) lc=c,c=getchar();\n\twhile ('0'<=c&&c<='9') s=s*10+c-'0',c=getchar();\n\treturn lc=='-'?-s:s;\n}\nvoid write(int x)\n{\n\tif (x<0)\n\t{\n\t\tputchar('-');\n\t\tx=-x;\n\t}\n\tif (x<10) putchar(x+'0');\n\telse\n\t{\n\t\twrite(x/10);\n\t\tputchar(x%10+'0');\n\t}\n}\nvoid print(int x,char c='\\n')\n{\n\twrite(x);\n\tputchar(c);\n}\nstruct edge\n{\n\tint to,nxt;\n}e[N*2];\nint head[N],cnt=0;\nvoid add(int u,int v)\n{\n\te[++cnt].to=v;\n\te[cnt].nxt=head[u];\n\thead[u]=cnt;\n}\nint n,siz[N],Max[N],Min,a[N],cntt,tmp2;\nvoid dfs(int now,int fa)\n{\n\tsiz[now]=Max[now]=1;\n\tfor (int i=head[now];i;i=e[i].nxt)\n\tif (e[i].to!=fa)\n\t{\n\t\tint to=e[i].to;\n\t\tdfs(to,now);\n\t\tsiz[now]+=siz[to];\n\t\tMax[now]=max(Max[now],siz[to]);\n\t}\n\tMax[now]=max(Max[now],n-siz[now]);\n\tif (Max[now]<Min) Min=Max[now];\n}\nint find(int now,int fa)\n{\n\tfor (int i=head[now];i;i=e[i].nxt)\n\tif (e[i].to!=fa)\n\t{\n\t\ttmp2=now;\n\t\treturn find(e[i].to,now);\n\t}\n\treturn now;\n}\n\nsigned main()\n{\n\tint T=read();\n\twhile (T--)\n\t{\n\t\tcnt=cntt=0;\n\t\tn=read();\n\t\tMin=n+1;\n\t\tfor (int i=1;i<=n;i++) head[i]=0;\n\t\tfor (int i=1;i<n;i++)\n\t\t{\n\t\t\tint u=read(),v=read();\n\t\t\tadd(u,v);\n\t\t\tadd(v,u);\n\t\t}\n\t\tdfs(1,0);\n\t\tfor (int i=1;i<=n;i++)\n\t\tif (Max[i]==Min)\n\t\ta[++cntt]=i;\n\t\tif (cntt==1) printf(\"%d %d\\n%d %d\\n\",a[1],e[head[a[1]]].to,a[1],e[head[a[1]]].to);\n\t\telse\n\t\t{\n\t\t\tint tmp=find(a[2],a[1]);\n\t\t\tprint(tmp2,' ');\n\t\t\tprint(tmp);\n\t\t\tprint(a[1],' ');\n\t\t\tprint(tmp);\n\t\t}\n\t}\n\n\treturn 0;\n}\n```",
        "postTime": 1599981225,
        "uid": 61120,
        "name": "QwQcOrZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1406C \u3010Link Cut Centroids\u3011"
    },
    {
        "content": "\u5206\u7c7b\u8ba8\u8bba.\n\n\u9996\u5148\u5f53\u6811\u53ea\u6709\u4e00\u4e2a\u91cd\u5fc3\u7684\u65f6\u5019,\u6211\u4eec\u5220\u6389\u4efb\u610f\u8fb9\u518d\u52a0\u4e0a\u539f\u8fb9\u5373\u53ef.\n\n\u518d\u770b\u6709\u4e24\u4e2a\u91cd\u5fc3\u7684\u60c5\u51b5.\n\n\u663e\u7136\u8fd9\u68f5\u6811\u5fc5\u5b9a\u662f\u7c7b\u4f3c\u8fd9\u6837\u7684:\n\n![Photo for CF1406C](https://cdn.luogu.com.cn/upload/image_hosting/t1x1nrei.png)\n\n\u5373\u5220\u6389 $ A $ \u540e,\u4ee5 $ B $ \u4e3a\u6839\u7684\u5b50\u6811\u662f\u5269\u4e0b\u7684\u6700\u5927\u8fde\u901a\u5757,\u53cd\u4e4b\u4ea6\u7136.\n\n\u90a3\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u7ed3\u8bba:\n\n- \u5220\u6389\u8fb9 $ (A,B) $ \u540e,\u4e24\u68f5\u6811\u7684\u5927\u5c0f\u76f8\u7b49.\n\n\u90a3\u6211\u4eec\u53ea\u8981\u4f7f\u4e24\u68f5\u6811\u7684\u5927\u5c0f\u4e0d\u76f8\u7b49,\u4e14\u4e0d\u4f7f\u65b0\u7684\u70b9\u6210\u4e3a\u91cd\u5fc3\u5373\u53ef.\n\n\u90a3\u5c31\u8003\u8651\u76f4\u63a5\u4ece $ A $ \u6811\u4e2d\u968f\u673a\u62bd\u53d6\u4e00\u4f4d~~\u5e78\u8fd0~~\u53f6\u5b50\u8282\u70b9,\u628a\u8fd9\u4e2a\u8282\u70b9\u4e0e\u5b83\u7236\u4eb2\u7684\u8fb9\u65ad\u5f00,\u8fde\u5230 $ B $ \u7684\u76f4\u63a5\u513f\u5b50\u91cc\u53bb.\n\n\u8fd9\u6837, $ A $ \u6811\u7684\u5927\u5c0f\u53d8\u5c0f\u4e86,\u800c $ B $ \u6811\u7684\u5927\u5c0f\u53d8\u5927\u4e86,\u4e14\u4e0d\u4f1a\u6709\u65b0\u7684\u8282\u70b9\u6210\u4e3a\u91cd\u5fc3.\n\n\u90a3 $ A $ \u5c31\u4e0d\u518d\u662f\u91cd\u5fc3\u4e86,\u800c $ B $ \u5219\u6210\u4e3a\u4e86\u552f\u4e00\u7684\u91cd\u5fc3.\n\n$Code$:\n\n```\n//This Code was made by Chinese_zjc_.\n#define int long long\n#define PI 3.14159265358979323\n#define INF 0x3fffffffffffffff\nusing namespace std;\nint T,n,a,b,fa[100005],siz[100005],v[100005];\nvector<int> son[100005];\nvoid init(int now)// Initiation \u266a\n{\n    siz[now]=1;\n    for(int i=0;i<(int)son[now].size();++i)\n    {\n        if(fa[now]==son[now][i])\n        {\n            swap(son[now][i],son[now].back());\n            --i;\n            son[now].pop_back();\n            continue;\n        }\n        fa[son[now][i]]=now;\n        init(son[now][i]);\n        siz[now]+=siz[son[now][i]];\n    }\n}\nvoid dfs(int now)// \u6c42\u5220\u6389\u8fd9\u4e2a\u70b9\u540e\u7684\u6700\u5927\u8fde\u901a\u5757\u5927\u5c0f\n{\n    v[now]=siz[1]-siz[now];\n    for(int i=0;i<(int)son[now].size();++i)\n    {\n        v[now]=max(v[now],siz[son[now][i]]);\n        dfs(son[now][i]);\n    }\n}\nint fin(int now)\n{\n    if(son[now].size())\n    {\n        return fin(son[now][0]);\n    }\n    else\n    {\n        return now;\n    }\n}\nsigned main()\n{\n    ios::sync_with_stdio(false);\n    cin>>T;\n    while(T--)\n    {\n        cin>>n;\n        for(int i=1;i<=n;++i)\n        {\n            son[i].clear();\n            fa[i]=0;\n        }\n        for(int i=1;i<n;++i)\n        {\n            cin>>a>>b;\n            son[a].push_back(b);\n            son[b].push_back(a);\n        }\n        init(1);\n        dfs(1);\n        int MIN=INF;\n        for(int i=1;i<=n;++i)\n        {\n            MIN=min(MIN,v[i]);\n        }\n        vector<int> z;\n        for(int i=1;i<=n;++i)\n        {\n            if(v[i]==MIN)\n            {\n                z.push_back(i);\n            }\n        }\n        if(z.size()==1)//\u5206\u7c7b\u8ba8\u8bba\n        {\n            cout<<1<<' '<<son[1][0]<<endl;\n            cout<<1<<' '<<son[1][0]<<endl;\n        }\n        else\n        {\n            if(fa[z[0]]!=z[1])\n            {\n                swap(z[0],z[1]);\n            }\n            int k=fin(z[0]);\n            cout<<k<<' '<<fa[k]<<endl;\n            cout<<k<<' '<<z[1]<<endl;\n        }\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1599994988,
        "uid": 118239,
        "name": "Chinese_zjc_",
        "ccfLevel": 0,
        "title": "CF1406C \u9898\u89e3"
    },
    {
        "content": "\u9898\u610f\uff1a\u7ed9\u4f60\u4e00\u68f5\u6811\uff0c\u8ba9\u4f60\u5220\u53bb\u4e00\u6761\u8fb9\u518d\u6dfb\u4e0a\u4e00\u6761\u8fb9\uff0c\u4f7f\u6811\u53ea\u6709\u4e00\u4e2a\u91cd\u5fc3\n\n\u6211\u7684\u6784\u9020\u65b9\u6cd5\uff1a\u5148\u5220\u53bb\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\uff0c\u7136\u540e\u627e\u5230\u5220\u53bb\u540e\u7684\u91cd\u5fc3\u4e4b\u4e00\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a\u53f6\u5b50\u8282\u70b9\u8fde\u5230\u91cd\u5fc3\u4e0a\n\n\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u505a\u662f\u5bf9\u7684\u5462\uff1f\n\n\u9996\u5148\uff0c\u5220\u53bb\u4e00\u4e2a\u8282\u70b9\u7684\u6570\u53ea\u6709$n-1$\u4e2a\u8282\u70b9\n\n1.\u5220\u53bb\u8282\u70b9\u540e\u7684\u6811\u53ea\u6709\u4e00\u4e2a\u91cd\u5fc3\uff0c\u8bbe\u8fd9\u4e2a\u91cd\u5fc3\u7684\u7f16\u53f7\u4e3a$k$\uff1a\n\n\u90a3\u4e48\uff0c$k$\u4e5f\u80af\u5b9a\u662f\u65b0\u7684\u91cd\u5fc3\u4e4b\u4e00\uff0c\u800c\u4e14\u56e0\u4e3a\u6811\u6700\u591a\u53ea\u6709\u4e24\u4e2a\u76f8\u8fde\u7684\u91cd\u5fc3\uff0c\u6240\u4ee5\u82e5\u6709\u7b2c\u4e8c\u4e2a\u91cd\u5fc3\uff0c\u5219\u7b2c\u4e8c\u4e2a\u91cd\u5fc3\u4e00\u5b9a\u548c$k$\u76f8\u8fde\n\n\u6839\u636e\u6811\u7684\u91cd\u5fc3\u7684\u6027\u8d28\uff1a\u5220\u9664\u91cd\u5fc3\u540e\u6240\u5f97\u7684\u6240\u6709\u5b50\u6811\uff0c\u8282\u70b9\u6570\u4e0d\u8d85\u8fc7\u539f\u6811\u7684\u8282\u70b9\u6570\u7684$\\frac1 2$\uff0c\u90a3\u4e48\u8bf4\u660e\u5f53\u5176\u4ed6\u4e0e\u91cd\u5fc3\u76f8\u8fde\u7684\u70b9\u4f5c\u4e3a\u6839\u65f6\uff0c\u539f\u91cd\u5fc3\u6240\u5728\u7684\u5b50\u6811\u7684\u8282\u70b9\u6570\u4e00\u5b9a$ \\ge \\frac1 2 (n-1)$\uff0c\u7136\u540e\u53c8\u56e0\u4e3a\u628a\u5220\u53bb\u7684\u8282\u70b9\u8fde\u5230$k$\u4e0a\uff0c\u90a3\u4e48\u5c31\u6709$ \\ge \\frac 1 2 (n+1)$\u4e2a\u8282\u70b9\uff0c\u4e0e$ \\le \\frac 1 2 n$\u77db\u76fe\u3002\u6240\u4ee5\u53ea\u6709\u4e00\u4e2a\u91cd\u5fc3\n\n2.\u5220\u53bb\u8282\u70b9\u540e\u7684\u6811\u6709\u4e24\u4e2a\u91cd\u5fc3\uff0c\u8bbe\u91cd\u5fc3\u7684\u7f16\u53f7\u5206\u522b\u4e3a$k1,k2$\uff1a\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a~~\u663e\u7136\u7684~~\u7ed3\u8bba\uff1a\u8bbe$n1$\u4e3a\u4ee5$k1$\u4e3a\u6839\uff0c$k2$\u7684\u5b50\u6811\u4e2d\u7684\u8282\u70b9\u4e2a\u6570\uff0c$n2$\u4e3a\u4ee5$k2$\u4e3a\u6839\uff0c$k1$\u7684\u5b50\u6811\u4e2d\u7684\u8282\u70b9\u4e2a\u6570\uff0c\u90a3\u4e48$n1+n2 = n - 1$\n\n\u53c8\u56e0\u4e3a$n1 \\le \\frac 1 2 (n - 1)$\uff0c$n2 \\le \\frac 1 2 (n - 1)$\uff0c\u6240\u4ee5$n1 = n2 = \\frac 1 2 (n - 1)$\n\n\u5f53\u53f6\u5b50\u8282\u70b9\u8fde\u5230$k1$\u4e0a\u65f6\uff0c$k1$\u80af\u5b9a\u8fd8\u662f\u91cd\u5fc3\uff0c\u4f46\u662f$n2=\\frac 1 2 (n - 1)+1 = \\frac 1 2 (n + 1)$\uff0c\u77db\u76fe\uff0c\u6240\u4ee5\u6b64\u65f6$k2$\u4e0d\u662f\u91cd\u5fc3\u3002\u7136\u540e\u53ef\u4ee5\u7528\u524d\u9762\u7684\u65b9\u6cd5\u8bc1\u660e\u5176\u4ed6\u8282\u70b9\u4e5f\u4e0d\u662f\u91cd\u5fc3\uff0c\u6240\u4ee5\u91cd\u5fc3\u552f\u4e00\n\n\u82e5\u8fde\u5230\u4e86$k2$\uff0c\u90a3\u4e48\u540c\u7406\u53ef\u5f97\u91cd\u5fc3\u552f\u4e00\n\n\u6240\u4ee5\u8fd9\u79cd\u65b9\u6cd5\u662f\u6b63\u786e\u7684\n\ncode\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int M=1e5+10;\nint T,n,sum[M],fa[M],minn,ssum;\nint x,y,mm[M],out[M];\n\nvector<int>e[M];\n\nvoid dfs(int u,int fat)\n{\n\tsum[u]=1,fa[u]=fat;\n\tfor (int i=0;i<e[u].size();i++)\n\t{\n\t\tint to=e[u][i];\n\t\tif (to!=fat)\n\t\t\tdfs(to,u),sum[u]+=sum[to];\n\t}\n\tfor (int i=0;i<e[u].size();i++)\n\t{\n\t\tint to=e[u][i];\n\t\tif (to!=fat)\n\t\t\tmm[u]=max(mm[u],sum[to]);\n\t}\n\tmm[u]=max(mm[u],n-1-sum[u]);\n\tminn=min(minn,mm[u]);\n}\n\nint main()\n{\n\tcin>>T;\n\twhile(T--)\n\t{\n\t\tcin>>n;minn=n+10;\n\t\tfor (int i=1;i<n;i++)\n\t\t{\n\t\t\tcin>>x>>y;\n\t\t\te[x].push_back(y),e[y].push_back(x); \n\t\t\tout[x]++,out[y]++;\n\t\t}\n\t\tfor (int i=1;i<=n;i++)\n\t\t\tif (out[i]==1)\n\t\t\t{\n\t\t\t\tx=i;y=e[i][0];\n\t\t\t\te[x].erase(find(e[x].begin(),e[x].end(),y));\n\t\t\t\te[y].erase(find(e[y].begin(),e[y].end(),x));\n\t\t\t\tbreak;\n\t\t\t}\n\t\tdfs(x==1?2:1,0);//\u56e0\u4e3a\u53f6\u5b50\u8282\u70b9\u4e5f\u53ef\u80fd\u662f1\u53f7\u70b9\uff0c\u6240\u4ee5\u7279\u5224\n\t\tfor (int i=1;i<=n;i++)\n\t\t\tif (mm[i]==minn)\n\t\t\t{\n\t\t\t\tprintf(\"%d %d\\n%d %d\\n\",x,y,x,i);\n\t\t\t\tbreak;\n\t\t\t}\n\t\tfor (int i=1;i<=n;i++)e[i].clear();\n\t\tfor (int i=0;i<=n;i++)fa[i]=sum[i]=out[i]=mm[i]=0;//\u8bb0\u5f97\u6e05\u7a7a\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1599983290,
        "uid": 141179,
        "name": "pigstd",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1406C \u3010Link Cut Centroids\u3011"
    },
    {
        "content": "\u51fa\u9898\u4eba\u9898\u89e3\uff1a\n\n\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u91cd\u5fc3\uff0c\u968f\u4fbf\u5220\u4e00\u6761\u518d\u52a0\u4e00\u6761\u5373\u53ef\u3002\n\n\u5426\u5219\u53ea\u6709\u4e24\u4e2a\u91cd\u5fc3\uff0c\u4e14\u76f8\u4e92\u8fde\u63a5\uff0c\u6b64\u65f6\u6211\u4eec\u53ea\u8981\u65ad\u6389\u4e00\u6761\u5176\u4e2d\u4e00\u4e2a\u91cd\u5fc3\u8fde\u51fa\u53bb\u7684\u5176\u4ed6\u7684\u8fb9\u7136\u540e\u8fde\u5411\u53e6\u4e00\u4e2a\u91cd\u5fc3\u3002\u6b64\u65f6\u4e00\u4e2a\u70b9\u4f1a\u53d8\u4e3a\u4e0d\u4e3a\u91cd\u5fc3\uff0c\u4e5f\u5c31\u662f\u8bf4\u91cd\u5fc3\u552f\u4e00\u3002\n\n\u53ef\u4ee5\u81ea\u5df1\u753b\u56fe\u6216\u8005\u6839\u636e\u6837\u4f8b\u63a8\u4e00\u63a8\uff0c\u8fd8\u662f\u6bd4\u8f83\u597d\u7406\u89e3\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<vector>\nusing namespace std;\nint n,size[100005],fa[100005],minn=1e9,cent1,cent2;\nvector<int> g[100005];\nvoid dfs(int x,int f){\n\tfa[x]=f,size[x]=1;\n\tint mx=0;\n\tfor(int y:g[x]){\n\t\tif(y==f)continue;\n\t\tdfs(y,x);\n\t\tsize[x]+=size[y];\n\t\tmx=max(mx,size[y]);\n\t}\n\tmx=max(mx,n-size[x]);\n\tif(mx<minn)minn=mx,cent1=x,cent2=0;\n\telse if(mx==minn)cent2=x;\n}\nint S;\nvoid dfs2(int x,int f){\n\tif(g[x].size()==1){\n\t\tS=x;\n\t\treturn ;\n\t}\n\tfor(int y:g[x]){\n\t\tif(y==f)continue;\n\t\tdfs2(y,x);\n\t}\n}\nint main(){\n\tint t;\n\tcin>>t;\n\twhile(t--){\n\tcin>>n,cent1=cent2=0,minn=1e9;\n\tfor(int i=1;i<=n;i++)g[i].clear(),fa[i]=0;\n\tfor(int i=1;i<n;i++){\n\t\tint x,y;\n\t\tcin>>x>>y;\n\t\tg[x].push_back(y),g[y].push_back(x);\n\t}\n\tdfs(1,0);\n\tif(!cent2){\n\t\tprintf(\"1 %d\\n1 %d\\n\",g[1][0],g[1][0]);\n\t\tcontinue;\n\t}\n\tif(fa[cent1]!=cent2)swap(cent1,cent2);\n\tdfs2(cent1,cent2);\n\tprintf(\"%d %d\\n%d %d\\n\",S,fa[S],S,cent2);}\n\treturn 0;\n}\n```\n",
        "postTime": 1599967233,
        "uid": 41476,
        "name": "gyh20",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1406C \u3010Link Cut Centroids\u3011"
    },
    {
        "content": "> ### [\u6d1b\u8c37\u9898\u76ee\u9875\u9762\u4f20\u9001\u95e8]( https://www.luogu.com.cn/problem/CF1406C ) & [CF \u9898\u76ee\u9875\u9762\u4f20\u9001\u95e8]( https://codeforces.com/contest/1406/problem/C )\n>\n> \u7ed9\u5b9a\u4e00\u68f5\u5927\u5c0f\u4e3a $n$ \u7684\u6811\u3002\u8981\u6c42\u5220\u6389\u4e00\u6761\u8fb9\u52a0\u4e0a\u4e00\u6761\u8fb9\u4f7f\u91cd\u5fc3\u552f\u4e00\u3002\u7ed9\u51fa\u65b9\u6848\u3002\u672c\u9898\u591a\u6d4b\u3002\n>\n> $n\\in\\left[3,10^5\\right],\\sum n\\leq 10^5$\u3002\n\n\u5047\u5982\u8bf4\u672c\u6765\u5c31\u552f\u4e00\u7684\u8bdd\u4e0d\u7528\u8bf4\u3002\u5426\u5219\uff1a\n\n\u663e\u7136\u4e24\u4e2a\u91cd\u5fc3\u76f8\u90bb\u3002\u94a6\u5b9a\u5176\u4e2d\u4e00\u4e2a\u4e3a\u6839\uff0c\u90a3\u4e48\u53e6\u4e00\u4e2a\u5c31\u662f\u7b2c $2$ \u5c42\u3002\u6211\u4e5f\u4e0d\u77e5\u9053\u600e\u4e48\u60f3\u51fa\u6765\u7684\uff0c\u5c31\u968f\u4fbf\u8bd5\u5427\uff0c\u53ef\u4ee5\u5220\u6389\u7b2c $2$ \u5c42\u91cd\u5fc3\u7684\u4efb\u610f\u4e00\u6761\u901a\u5411\u513f\u5b50\u7684\u8fb9\uff08\u7531 $n\\geq 3$ \u6613\u8bc1\u4e00\u5b9a\u6709\u513f\u5b50\uff09\uff0c\u7136\u540e\u628a\u90a3\u4e2a\u513f\u5b50\u8fde\u5411\u6839\u5373\u53ef\u3002\n\n\u8bc1\u660e\u7684\u8bdd\uff0c\u663e\u7136\u5220\u52a0\u8fc7\u4e4b\u540e\u6839\u4f9d\u7136\u662f\u91cd\u5fc3\uff0c\u56e0\u4e3a\u5b50\u6811\u5927\u5c0f\u6700\u5927\u503c\u53d8\u5c0f\u4e86\u561b\u3002\u800c\u7b2c $2$ \u5c42\u90a3\u4e2a\u7684\u76f8\u5bf9\u5e94\u7684\u663e\u7136\u53d8\u5927\u4e86\uff0c\u90a3\u4e48\u5b83\u4eec\u7684\u6700\u5927\u5b50\u6811\u5927\u5c0f\u5c31\u4e0d\u7b49\u4e86\uff0c\u5c31\u4e0d\u53ef\u80fd\u540c\u65f6\u4e3a\u91cd\u5fc3\u3002\u7136\u540e\u5982\u4f55\u8bc1\u5176\u4ed6\u70b9\u4e0d\u4e3a\u91cd\u5fc3\u5462\uff1f\u56e0\u4e3a\u8981\u60f3\u662f\u91cd\u5fc3\u5c31\u5fc5\u987b\u4e0e\u6839\u76f8\u90bb\uff0c\u800c\u8fd9\u4e09\u4e2a\u70b9\u53d1\u751f\u5173\u7cfb\u8ddf\u5176\u4ed6\u513f\u5b50\u6709\u4e2a\u5c41\u7684\u5173\u7cfb\uff0c\u90a3\u6700\u5927\u5b50\u6811\u5927\u5c0f\u80af\u5b9a\u5c31\u4e0d\u53d8\u554a\uff0c\u5c31\u65e0\u6cd5\u7ffb\u8eab\u3002\u5f97\u8bc1\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define pb push_back\nconst int N=100000;\nint n;\nvector<int> nei[N+1];\nint sz[N+1];\nvoid dfs(int x=1,int fa=0){\n\tsz[x]=1;\n\tfor(int i=0;i<nei[x].size();i++){\n\t\tint y=nei[x][i];\n\t\tif(y==fa)continue;\n\t\tdfs(y,x);\n\t\tsz[x]+=sz[y];\n\t}\n}\nvoid mian(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)nei[i].clear();\n\tfor(int i=1;i<n;i++){\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tnei[x].pb(y);nei[y].pb(x);\n\t}\n\tdfs();\n\tvector<int> cen;\n\tfor(int i=1;i<=n;i++){\n\t\tbool flg=true;\n\t\tint sum=1;\n\t\tfor(int j=0;j<nei[i].size();j++){\n\t\t\tint x=nei[i][j];\n\t\t\tif(sz[x]>sz[i])continue;\n\t\t\tflg&=sz[x]<=n/2;\n\t\t\tsum+=sz[x];\n\t\t}\n\t\tflg&=n-sum<=n/2;\n\t\tif(flg)cen.pb(i);\n\t}\n\tassert(cen.size()<=2);\n\tif(cen.size()==1)printf(\"%d %d\\n%d %d\\n\",1,nei[1][0],1,nei[1][0]);\n\telse{\n\t\tint son=nei[cen[0]][0]==cen[1]?nei[cen[0]][1]:nei[cen[0]][0];\n\t\tprintf(\"%d %d\\n%d %d\\n\",cen[0],son,cen[1],son);\n\t}\n}\nint main(){\n\tint testnum=1;\n\tcin>>testnum;\n\twhile(testnum--)mian();\n\treturn 0;\n}\n```",
        "postTime": 1600179525,
        "uid": 138400,
        "name": "chenxia25",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1406C \u3010Link Cut Centroids\u3011"
    },
    {
        "content": "[luogu's link](https://www.luogu.com.cn/problem/CF1406C)\n\n[CF's link](http://codeforces.com/problemset/problem/1406/C)\n\n#### \u9898\u610f\uff1a\n\n\u7ed9\u5b9a\u4e00\u68f5\u8282\u70b9\u6570\u4e3a $n$ \u7684\u6811 \uff0c \u5220\u4e00\u6761\u8fb9\u7136\u540e\u52a0\u4e0a\u4e00\u6761\u8fb9 \uff0c \u4f7f\u5f97\u8be5\u6811\u7684\u91cd\u5fc3\u552f\u4e00 \u3002\uff08\u5220\u6389\u7684\u8fb9\u548c\u52a0\u4e0a\u7684\u8fb9\u53ef\u4ee5\u662f\u540c\u4e00\u6761\uff09\n\n#### Solution\uff1a\n\n1. \u5982\u679c\u8fd9\u68f5\u6811\u7684\u91cd\u5fc3\u662f\u552f\u4e00\u7684\uff0c\u90a3\u4e48\u53ef\u4ee5\u5220\u4efb\u4e00\u6761\u8fb9\u518d\u52a0\u4e0a\u8fd9\u4e00\u6761\u8fb9\u3002\n2. \u5982\u679c\u8fd9\u68f5\u6811\u7684\u91cd\u5fc3\u4e0d\u662f\u552f\u4e00\u7684\uff0c\u90a3\u4e48\u4ee5\u5176\u4e2d\u4e00\u4e2a\u91cd\u5fc3\u4e3a\u6839\uff0c\u5220\u53bb\u53e6\u4e00\u4e2a\u91cd\u5fc3\u6240\u5728\u5b50\u6811\u4e2d\u4e00\u6761\u4e0e\u53f6\u5b50\u8fde\u63a5\u7684\u8fb9\uff0c\u52a0\u5230\u53e6\u5916\u4e00\u4e2a\u5b50\u6811\u4e2d\u3002\n\n#### Code\uff1a\n\n```cpp\n/*\n * @Author: FuTianyu \n * @Date: 2020-11-30 16:02:08 \n * @Last Modified by: FuTianyu\n * @Last Modified time: 2020-12-01 16:13:50\n */\n#include<bits/stdc++.h>\nusing namespace std;\n#define FOR(i,a,b) for(int i=a;i<=b;i++)\n#define REP(i,a,b) for(int i=a;i>=b;i--)\n/*\n\u5feb\u8bfb\u5feb\u8f93\n*/\nconst int N=1e5+5;\nnamespace work{\n    int n,tot,fir[N],sum[5],cnt,tmp;\n    struct edge{\n        int nxt,to;\n    }e[N<<1];\n    inline void add(int u,int v){\n        tot++;\n        e[tot].nxt=fir[u];\n        e[tot].to=v;\n        fir[u]=tot;\n    }\n    int siz[N],ma[N],mi;\n    inline void clear(){\n        memset(fir,0,sizeof fir);\n        memset(sum,0,sizeof sum);\n        tot=0;tmp=0;cnt=0;mi=n+1;\n        memset(ma,0,sizeof ma);\n        memset(siz,0,sizeof siz);\n    }\n    inline void dfs(int u,int dad){\n        siz[u]=ma[u]=1;\n        for(int i=fir[u];i;i=e[i].nxt){\n            int v=e[i].to;\n            if(v==dad) continue;\n            dfs(v,u);\n            siz[u]+=siz[v];\n            ma[u]=max(ma[u],siz[v]);\n        }\n        ma[u]=max(ma[u],n-siz[u]);\n        mi=min(mi,ma[u]);\n    }\n    inline int dfs1(int u,int dad){\n        for(int i=fir[u];i;i=e[i].nxt){\n            int v=e[i].to;\n            if(v==dad) continue;\n            tmp=u;\n            return dfs1(v,u);\n        }\n        return u;\n    }\n    inline void main(){\n        n=read();\n        clear();\n        int noteu,notev;\n        FOR(i,1,n-1){\n            int u=read(),v=read();\n            add(u,v);\n            add(v,u);\n            if(i==1) noteu=u,notev=v;\n        }\n        dfs(1,0);\n        FOR(i,1,n) if(ma[i]==mi) sum[++cnt]=i;\n        if(cnt==1){\n            write(noteu),putchar(' ');\n            write(notev),puts(\"\");\n            write(noteu),putchar(' ');\n            write(notev),puts(\"\");\n        }\n        else{\n            int x=dfs1(sum[2],sum[1]);\n            write(tmp);putchar(' ');\n            write(x);puts(\"\");\n            write(sum[1]);putchar(' ');\n            write(x);puts(\"\");\n        }\n    }\n}\nint main(){\n    int t=read();\n    while(t--) work::main();\n    return 0;\n}\n```\n\n\n\n",
        "postTime": 1606813547,
        "uid": 306443,
        "name": "\u5085\u5929\u5b87",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1406C \u3010Link Cut Centroids\u3011"
    },
    {
        "content": "## \u9898\u610f\uff1a\n\n\u7ed9\u4e00\u68f5\u6811\u5220\u4e00\u6761\u8fb9\u518d\u52a0\u4e00\u6761\u8fb9\uff0c\u662f\u8be5\u6811\u4e2d\u5fc3\u552f\u4e00\u3002\n\n## \u5206\u6790\uff1a\n\n\u82e5\u53ea\u6709\u4e00\u4e2a\u91cd\u5fc3\uff0c\u968f\u4fbf\u5220\u4e00\u6761\u518d\u52a0\u56de\u53bb\u3002\u82e5\u6709\u4e24\u4e2a\u91cd\u5fc3\uff0c\u6839\u636e\u4e00\u4e2a\u63a8\u8bba\uff0c\u6811\u81f3\u591a\u6709\u4e24\u4e2a\u91cd\u5fc3\u4e14\u8fd9\u4e24\u4e2a\u91cd\u5fc3\u5448\u7236\u5b50\u5173\u7cfb\u3002\u6240\u4ee5\u53ef\u5c06\u4e00\u91cd\u5fc3\u8fde\u5230\u53e6\u4e00\u91cd\u5fc3\u7684\u5b69\u5b50\u8282\u70b9\u4e0a\u3002\n\n\u8fd9\u6837\u9898\u5c31\u505a\u5b8c\u4e86\u3002\n\n\u653e\u4e0a\u6700\u77ed\u4ee3\u7801...\n\n## \u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nstd::vector<int>v[100001];\nint t,n,p,s[100001];\nint d(int x,int f){\n\tfor(int i=0;i<v[x].size();i++)if(v[x][i]!=f)s[x]+=d(v[x][i],x);\n\tif(p&&s[x]*2==n)p=0,printf(\"%d %d\\n%d %d\\n\",x,v[x][v[x][0]==f],v[x][v[x][0]==f],f);\n\treturn s[x];\n} main(){\n\tscanf(\"%d\",&t); while(t--){\n\t\tp=1,scanf(\"%d\",&n);\n\t\tfor (int i=1;i<=n;i++)v[i].clear(),s[i]=1;\n\t\tfor (int i=1,x,y;i<n;i++)scanf(\"%d%d\",&x,&y),v[x].push_back(y),v[y].push_back(x);d(1,0);\n\t\tif(p)printf(\"%d %d\\n%d %d\\n\",1,v[1][0],1,v[1][0]);\n\t}\n}\n```",
        "postTime": 1604052919,
        "uid": 130812,
        "name": "XyzL",
        "ccfLevel": 0,
        "title": "CF1406C \u3010Link Cut Centroids\u3011\u9898\u89e3"
    },
    {
        "content": "\u6709\u4e00\u4e2a\u6027\u8d28\u662f\u8fd9\u6837\u7684\u2014\u2014\u91cd\u5fc3\u8fde\u63a5\u7684\u6700\u5927\u7684\u5b50\u6811\u5927\u5c0f\u4e0d\u8d85\u8fc7\u6574\u68f5\u6811\u7684\u4e00\u534a\u3002\n\n\u5f53\u91cd\u5fc3\u8fde\u63a5\u7684\u6700\u5927\u7684\u5b50\u6811\u5927\u5c0f\u5c0f\u4e8e\u6574\u68f5\u6811\u7684\u4e00\u534a\u65f6\uff0c\u8fd9\u4e2a\u6811\u7684\u91cd\u5fc3\u662f\u552f\u4e00\u7684\u3002\n\n\u6709\u4e86\u8fd9\u4e2a\u6027\u8d28\u5c31\u597d\u505a\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u968f\u4fbf\u627e\u5230\u4e00\u4e2a\u91cd\u5fc3\uff0c\u7136\u540e\u5c06\u5b83\u8fde\u63a5\u7684\u6700\u5927\u7684\u5b50\u6811\u4e0b\u7684\u4e00\u4e2a\u70b9\u8fde\u5411\u5b83\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff1a\n\n![](https://i.loli.net/2020/09/14/7F9RnlWrABJx8de.png)\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntemplate<typename T>inline void read(T &FF){\n\tT RR=1;FF=0;char CH=getchar();\n\tfor(;!isdigit(CH);CH=getchar())if(CH=='-')RR=-1;\n\tfor(;isdigit(CH);CH=getchar())FF=(FF<<1)+(FF<<3)+(CH^48);\n\tFF*=RR;\n}\nvector<int>v[100010];\nint n,s[100010],ans[100010],as;\nvoid dfs(int x,int fa){\n\ts[x]=1;ans[x]=0;\n\tfor(int i:v[x])\n\t\tif(i!=fa){\n\t\t\tdfs(i,x);\n\t\t\tans[x]=max(ans[x],s[i]);\n\t\t\ts[x]+=s[i];\n\t\t}\n\tans[x]=max(ans[x],n-s[x]);\n\tas=min(as,ans[x]);\n}\nvoid work(){\n\tmemset(s,0,sizeof(s));//\u591a\u6d4b\u4e0d\u6e05\u7a7a\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\tread(n);as=n;\n\tfor(int i=1;i<=n;i++)v[i].clear();//\u591a\u6d4b\u4e0d\u6e05\u7a7a\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\tfor(int i=1;i<n;i++){\n\t\tint x,y;read(x);read(y);\n\t\tv[x].push_back(y);\n\t\tv[y].push_back(x);\n\t}\n\tdfs(1,0);\n\tfor(int i=1;i<=n;i++)\n\t\tif(ans[i]==as){\n\t\t\tdfs(i,0);\n\t\t\tfor(int j:v[i])\n\t\t\t\tif(s[j]==as){\n\t\t\t\t\tif(as==1){//\u8fd9\u91cc\u9700\u8981\u7279\u5224\n\t\t\t\t\t\tcout<<i<<\" \"<<j<<endl<<i<<\" \"<<j<<endl;\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t\tfor(int k:v[j]){\n\t\t\t\t\t\tif(k!=i){\n\t\t\t\t\t\t\tcout<<k<<\" \"<<j<<endl<<k<<\" \"<<i<<endl;\n\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t}\n}\n```\n\n",
        "postTime": 1600077478,
        "uid": 180242,
        "name": "orzdevinwang",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1406C \u3010Link Cut Centroids\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1406C)  \n\n\u9898\u610f\u633a\u6e05\u6670\u7684\uff0c\u5c31\u662f\u4e00\u68f5\u7531 $n$ \u4e2a\u8282\u70b9\u6784\u6210\u7684\u6811\uff0c\u5220\u53bb\u4e00\u6761\u8fb9\u5728\u52a0\u4e0a\u4e00\u6761\u8fb9\u4f7f\u5f97\u8fd9\u68f5\u6811\u53ea\u6709\u4e00\u4e2a\u91cd\u5fc3\uff0c\u95ee\u5220\u53bb\u7684\u8fb9\u548c\u52a0\u4e0a\u7684\u8fb9\u90fd\u662f\u54ea\u6761\u8fb9\u3002  \n\n\n\u9996\u5148\uff0c\u6211\u4eec\u8003\u8651\u4e00\u68f5\u6811\u4e00\u5171\u4f1a\u6709\u51e0\u4e2a\u91cd\u5fc3\uff1f  \n\n\u8bf6\uff1f\u91cd\u5fc3\u7684\u5b9a\u4e49\u662f\u4ec0\u4e48\uff1f  \n\u5bf9\u4e8e\u6811\u4e0a\u7684\u6bcf\u4e00\u4e2a\u70b9\uff0c\u8ba1\u7b97\u5176\u6240\u6709\u5b50\u6811\u4e2d\u6700\u5927\u7684\u5b50\u6811\u8282\u70b9\u6570\uff0c\u8fd9\u4e2a\u503c\u6700\u5c0f\u7684\u70b9\u5c31\u662f\u8fd9\u68f5\u6811\u7684\u91cd\u5fc3\u3002\u2014\u2014OI Wiki  \n\u8fd9\u5565\u5440\u8fd9\u662f...  \n\u6362\u6210\u4eba\u8bdd\uff0c\u5c31\u662f\u4ee5\u8fd9\u4e2a\u8282\u70b9\u4e3a\u6839\u7684\u65f6\u5019\uff0c\u4e00\u68f5\u5b50\u6811\u5927\u5c0f\u4e0d\u8d85\u8fc7 $n/2$ \u3002  \n\u6240\u4ee5\u5f88\u5bb9\u6613\u53ef\u4ee5\u63a8\u5f97\u4e00\u68f5\u6811\u6700\u591a\u4f1a\u6709\u4e24\u4e2a\u91cd\u5fc3\uff0c\u6700\u5c11\u4f1a\u6709\u4e00\u4e2a\u91cd\u5fc3\u3002  \n\n\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u91cd\u5fc3\u7684\u8bdd\uff0c\u5f88\u597d\u505a\uff0c\u968f\u4fbf\u5220\u4e00\u6761\u8fb9\u518d\u52a0\u4e0a\u5c31\u884c\u4e86\n\n\u5982\u679c\u6709\u4e24\u4e2a\u91cd\u5fc3\uff0c\u90a3\u5c31\u4ece\u4e00\u4e2a\u91cd\u5fc3\u7684\u5b50\u6811\u91cc\u62bd\u51fa\u4e00\u90e8\u5206\u63a5\u5230\u53e6\u4e00\u4e2a\u91cd\u5fc3\u7684\u5b50\u6811\u4e0a\u3002  \n\n\u7b49\u7b49\uff0c\u91cd\u5fc3\u600e\u4e48\u627e\uff1f\n\n\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9 $u$ \uff0c\u627e\u5230\u5b83\u6240\u6709\u5b50\u8282\u70b9 $v$ \u7684\u5b50\u6811\u5927\u5c0f\u7684\u6700\u5927\u503c\uff0c\u5e76\u4e14\u548c $n-siz_u$ \u518d\u53d6\u4e2a\u6700\u5927\u503c\uff0c\u5c31\u662f\u4ee5\u4ed6\u4e3a\u6839\u7684\u6700\u5927\u5b50\u6811\u5927\u5c0f\uff0c\u7136\u540e\u5982\u679c\u8fd9\u4e2a\u6700\u5927\u5b50\u6811\u5927\u5c0f $\\leq n/2$ \u7684\u8bdd\u5c31\u662f\u91cd\u5fc3\u3002\n\n\u603b\u7ed3\u4e00\u4e0b\u5c31\u662f\n$$Controid_u=max(siz_v , n-siz_u)$$\n\n$O(n)$ \u6811\u5f62dp\u53ef\u6c42  \n\n$Code\\ Time\\ :$  \n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nconst int maxn=1e5+5;\n\nint head[maxn],cnt=0,nxt[maxn<<1],to[maxn<<1];\n\nvoid add(int u,int v)\n{\n\tcnt++;\n\t\n\tto[cnt]=v;\n\t\n\tnxt[cnt]=head[u];\n\t\n\thead[u]=cnt;\n}\n\nint n,siz[maxn],Max[maxn],Min,a[maxn],cntt,tmp2;\n\nvoid dfs(int x,int fa)\n{\n\tsiz[x]=Max[x]=1;\n\t\n\tfor(int i=head[x];i;i=nxt[i])\n\t{\n\t\tint v=to[i];\n\t\t\n\t\tif(v==fa)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tdfs(v,x);\n\t\t\n\t\tsiz[x]+=siz[v];\n\t\t\n\t\tMax[x]=max(Max[x],siz[v]);\n\t\t\n\t}\n\t\t\n\tMax[x]=max(Max[x],n-siz[x]);\n\t\n\tif(Max[x]<Min)\n\t{\n\t\tMin=Max[x];\n\t}\n}\n\nint find(int x,int fa)\n{\n\tfor(int i=head[x];i;i=nxt[i])\n\t{\n\t\tint v=to[i];\n\t\t\n\t\tif(v==fa)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\ttmp2=x;\n\t\t\n\t\treturn find(v,x);\n\t\t\n\t}\n\t\n\treturn x;\n}\n\nint main()\n{\n\tint T;\n\t\n\tcin>>T;\n\t\n\twhile(T--)\n\t{\n\t\tcnt=cntt=0;\n\t\t\n\t\tscanf(\"%d\",&n);\n\t\t\n\t\tMin=n+1;\n\t\t\n\t\tmemset(head,0,sizeof head);\n\t\t\n\t\tfor(int i=1;i<n;i++)\n\t\t{\n\t\t\tint x,y;\n\t\t\t\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\t\n\t\t\tadd(x,y);\n\t\t\t\n\t\t\tadd(y,x);\n\t\t}\n\t\t\n\t\tdfs(1,0);\n\t\t\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(Max[i]==Min)\n\t\t\t{\n\t\t\t\ta[++cntt]=i;\n\t\t\t}\n\t\t}\n\t\t\t\n\t\tif(cntt==1)\n\t\t{\n\t\t\tprintf(\"%d %d\\n%d %d\\n\",a[1],to[head[a[1]]],a[1],to[head[a[1]]]);\n\t\t}\n\t\t\n\t\telse\n\t\t{\n\t\t\tint tmp=find(a[2],a[1]);\n\t\t\t\n\t\t\tprintf(\"%d %d\\n%d %d\\n\",tmp2,tmp,a[1],tmp);\n\t\t}\n\t}\n\n\treturn 0;\n}\n```",
        "postTime": 1606835754,
        "uid": 226805,
        "name": "VanHelsing",
        "ccfLevel": 8,
        "title": "CF1406C Link Cut Centroids \u9898\u89e3"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n- \u7ed9\u5b9a\u4e00\u68f5\u70b9\u6570\u4e3a n \uff08n $\\ge$ 3\uff09\u7684\u65e0\u6839\u6811\n- \u5c06\u5176\u5220\u6389\u4e00\u6761\u8fb9\u5e76\u52a0\u4e0a\u4e00\u6761\u8fb9\uff0c\u4f7f\u6811\u7684\u91cd\u5fc3\u552f\u4e00\n\n## \u524d\u7f6e\u77e5\u8bc6\n1. \u4e00\u4e2a\u70b9\u662f\u6811\u7684\u91cd\u5fc3\u5f53\u4e14\u4ec5\u5f53\u5176\u6240\u6709\u5b50\u6811\u7684\u5927\u5c0f\u4e0d\u5927\u4e8e$\\frac{n}{2}$ \u3002\n1. \u4e00\u4e2a\u6811\u81f3\u591a\u6709\u4e24\u4e2a\u91cd\u5fc3\uff0c\u4e14\u76f8\u90bb\u3002\n1. \u6811\u5f62 dp \u6c42\u6811\u7684\u91cd\u5fc3\u3002\n\n## \u89e3\u6cd5\n1. \u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u6811\u7684\u91cd\u5fc3\u53ea\u6709\u4e00\u4e2a\u3002\u5c06\u4efb\u610f\u4e00\u6761**\u5b58\u5728\u7684**~~\u6211\u56e0\u6b64\u800cWA~~\u8fb9\u5220\u9664\uff0c\u5e76\u539f\u5904\u6dfb\u52a0\u5373\u53ef\u3002\n1. \u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u6811\u6709\u4e24\u4e2a\u91cd\u5fc3\uff0c\u663e\u7136\u5b83\u4eec\u4e4b\u95f4\u76f8\u90bb\u4e14\u5176\u8fb9\u5c06\u6811\u5206\u4e3a\u4e24\u4e2a\u70b9\u6570\u76f8\u540c\u7684\u90e8\u5206\uff0c\u5426\u5219\u5fc5\u6709\u4e00\u4e2a\u201c\u91cd\u5fc3\u201d\u6709\u4e00\u4e2a\u5927\u4e8e $\\frac{n}{2}$ \u7684\u5b50\u6811\u3002\u4e0d\u96be\u60f3\u51fa\u7b56\u7565\uff0c\u5373\u5728\u4efb\u610f\u4e00\u4e2a\u91cd\u5fc3 $c_{1}$ \u4e0a\u627e\u4efb\u610f\u4e00\u6761\u8fb9\uff08\u4e0d\u4e0e\u53e6\u4e00\u91cd\u5fc3 $c_{2}$ \u76f8\u8fde\uff09\uff0c\u5c06\u5176\u5220\u9664\uff0c\u5e76\u5c06\u8be5\u8fb9\u53e6\u4e00\u7aef\u70b9 v \u4e0e\u53e6\u4e00\u91cd\u5fc3\u76f8\u8fde\u5373\u53ef\u3002\n\t\n   \u8bc1\u660e\uff1a\n   1. \u4ee5 $c_{2}$ \u4e3a\u6839\u8fdb\u884c\u8ba8\u8bba\u3002\u663e\u7136 $c_{2}$ \u4f9d\u7136\u662f\u91cd\u5fc3\uff0c\u56e0\u4e3a\u4ed6\u6709\u4e09\u7c7b\u5b50\u6811\uff0c\u4e00\u662f\u4ee5 $c_{1}$ \u4e3a\u6839\u7684\u5b50\u6811\uff0c\u5176\u5927\u5c0f\u663e\u7136\u53d8\u5c0f\uff0c\u4e8c\u662f\u4ee5 v \u4e3a\u6839\u7684\u5b50\u6811\uff0c\u663e\u7136$\\operatorname{size}$(\u4ee5 v \u4e3a\u6839\u7684\u5b50\u6811) $\\le$ $\\operatorname{size}$(\u539f\u6765\u4ee5 $c_{1}$ \u4e3a\u6839\u7684\u5b50\u6811) $\\le$ $\\frac{n}{2}$ \uff0c\u4e09\u662f\u672a\u6539\u53d8\u7684\u5b50\u6811\uff0c\u663e\u7136\u4e0d\u4f1a\u9020\u6210\u5f71\u54cd\u3002\n   1. \u4ee5 $c_{1}$ \u4e3a\u6839\u8fdb\u884c\u8ba8\u8bba\u3002\u663e\u7136 $\\operatorname{size}$(\u4ee5 $c_{2}$ \u4e3a\u6839\u7684\u5b50\u6811) $=$ $\\operatorname{size}$(\u539f\u6765\u4ee5 $c_{2}$ \u4e3a\u6839\u7684\u5b50\u6811) + $\\operatorname{size}$(\u539f\u6765\u4ee5 v \u4e3a\u6839\u7684\u5b50\u6811) $=$  $\\operatorname{size}$(\u539f\u6765\u4ee5 v \u4e3a\u6839\u7684\u5b50\u6811) + $\\frac{n}{2}$ $>$ $\\frac{n}{2}$\u3002\u6545\u975e\u6811\u6839\u3002\n   1. \u4ee5 v \u4e3a\u6839\u8fdb\u884c\u8ba8\u8bba\u3002\u663e\u7136 $\\operatorname{size}$(\u4ee5 $c_{2}$ \u4e3a\u6839\u7684\u5b50\u6811) $=$ $\\operatorname{size}$(\u539f\u6765\u4ee5 $c_{2}$ \u4e3a\u6839\u7684\u5b50\u6811) + $\\operatorname{size}$\uff08\u4ee5 $c_{1}$ \u4e3a\u6839\u7684\u5b50\u6811) $=$  $\\operatorname{size}$(\u539f\u6765\u4ee5 $c_{1}$ \u4e3a\u6839\u7684\u5b50\u6811) + $\\frac{n}{2}$ $>$ $\\frac{n}{2}$\u3002\u6545\u975e\u6811\u6839\u3002\n   1. \u5bf9\u4e8e\u5176\u5b83\u4efb\u4e00\u8282\u70b9\uff0c\u5176\u5b50\u6811\u5927\u5c0f\u5747\u672a\u6539\u53d8\uff0c\u6545\u4e0d\u4f1a\u53d8\u6210\u91cd\u5fc3\u3002\n   \n## \u4ee3\u7801\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <iomanip>\n#include <algorithm>\n#include <string>\n#include <cstring>\n#include <set>\n#include <deque>\n#define lowbit(x) ((x) & (-(x)))\ntypedef long long ll;\nll MIN(ll x, ll y) { return x < y ? x : y; }\nll MAX(ll x, ll y) { return x > y ? x : y; }\nconst ll INF = 0x7fffffffffffffff;\nconst int MAXN = 1e5 + 123;\nusing namespace std;\n\nint T , N;\nint h[MAXN] , now;\nstruct Edge{\n    int u , v , next;\n}e[MAXN << 1];\nvoid addEdge(int u , int v) {\n    now ++;\n    e[now].u = u;\n    e[now].v = v;\n    e[now].next = h[u];\n    h[u] = now;\n}\n\nint sz[MAXN] , mx[MAXN];\nvoid dfs(int x , int f) {\n    sz[x] = 1;\n    mx[x] = 0;\n    for (int i = h[x] ; i ; i = e[i].next) {\n        const int &v = e[i].v;\n        if (v == f)\n            continue;\n        dfs(v , x);\n        sz[x] += sz[v];\n        mx[x] = max(mx[x] , sz[v]);\n    }\n    mx[x] = max(mx[x] , N - sz[x]);\n}\nint mi , id , ed;\nvoid work() {\n    scanf (\"%d\" , &N);\n    for (int i = 1 ; i <= N ; i ++)\n        h[i] = 0;\n    now = 0;\n    for (int i = 1 ; i < N ; i ++) {\n        register int x , y;\n        scanf (\"%d %d\" , &x , &y);\n        addEdge(x , y);\n        addEdge(y , x);//\u4e00\u53e5\u9042\u6210\u5343\u53e4\u6068\n    }\n    dfs(1 , 0);\n    mi = 0x7fffffff;\n    for (int i = 1 ; i <= N ; i ++) {\n        if (mi > mx[i]) {\n            mi = mx[i];\n            id = i;\n        }\n    }\n    for (int i = h[id] ; i ; i = e[i].next) {\n        const &v = e[i].v;\n        if (mx[v] == mi) {\n            for (int j = h[v] ; j ; j = e[j].next) {\n                if (e[j].v != id) {\n                    printf (\"%d %d\\n%d %d\\n\" , v , e[j].v , id , e[j].v);\n                    return;\n                }\n            }\n        }\n    }\n    printf (\"%d %d\\n%d %d\\n\" , e[1].u , e[1].v , e[1].u , e[1].v);//\u5343\u53e4\u6068\n}\n\nint main() {\n    scanf (\"%d\" , &T);\n    while (T --) {\n        work();\n    }\n    return 0;\n}\n```\n",
        "postTime": 1600515007,
        "uid": 219202,
        "name": "code_hunter",
        "ccfLevel": 0,
        "title": "CF1406C Link Cut Centroids \u9898\u89e3"
    },
    {
        "content": "## \u9898\u610f\u7b80\u8ff0\n\u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u70b9\u7684\u6811\uff0c\u8981\u6c42\u5207\u65ad\u4e00\u6761\u8fb9\u5e76\u8fde\u63a5\u4e00\u6761\u8fb9\uff0c\u4f7f\u5f97\u4fee\u6539\u540e\u7684\u56fe\u662f\u4e00\u68f5\u6811\uff0c\u4e14\u53ea\u6709\u4e00\u4e2a\u91cd\u5fc3\u3002\n\n$n \\le 10^5$\n\n## Sol\n\u6211\u4eec\u8003\u8651\u5177\u6709\u4e24\u4e2a\u91cd\u5fc3\u7684\u6811\u7684\u6027\u8d28\uff0c\u89c2\u5bdf\u5230\u5982\u679c\u6811\u6709\u4e24\u4e2a\u91cd\u5fc3\uff0c\u90a3\u4e48\u5b83\u4eec\u5fc5\u5b9a\u662f\u76f8\u90bb\u7684\uff0c\u6211\u4eec\u8003\u8651\u5229\u7528\u8fd9\u4e2a\u6027\u8d28\u6c42\u89e3\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/mpa9b00c.png)\n\n\u6211\u4eec\u89c2\u5bdf\u5230\u6709\u4e24\u4e2a\u91cd\u5fc3\u7684\u6811\u5fc5\u5b9a\u957f\u7684\u50cf\u4e0a\u56fe\u90a3\u6837\uff08\u56fe\u4e2d\u7ea2\u70b9\u4e3a\u91cd\u5fc3\uff09\uff0c\u4e5f\u5c31\u662f\u5bf9\u4e8e\u4e00\u4e2a\u91cd\u5fc3\u800c\u8a00\uff0c\u5b83\u9664\u4e86\u8fde\u5411\u53e6\u4e00\u4e2a\u91cd\u5fc3\u5916\uff0c\u5fc5\u7136\u6709\u53e6\u5916\u7684\u8282\u70b9\u4e0e\u5176\u76f8\u8fde\uff0c\u8bc1\u660e\u4e5f\u5f88\u7b80\u5355\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/d6gb6zsx.png)\n\n\u65e0\u8bba\u5982\u4f55\uff0c\u6700\u4e0a\u9762\u7684\u90a3\u4e2a\u70b9\u6c38\u8fdc\u4e0d\u4f1a\u662f\u91cd\u5fc3\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/5sc2vzzx.png)\n\n\u8003\u8651\u5982\u4e0a\u56fe\u6240\u793a\u7684\u6784\u9020\u65b9\u5f0f\uff0c\u5220\u53bb\u9ec4\u8272\u8fb9\uff0c\u8fde\u4e0a\u7eff\u8272\u8fb9\uff0c\u90a3\u4e48\u73b0\u5728\u6211\u4eec\u8981\u8bc1\u660e\u8be5\u65b9\u6cd5\u6784\u9020\u51fa\u7684\u6811\u53ea\u6709\u4e00\u4e2a\u91cd\u5fc3\u3002\n\n\u5bf9\u4e8e\u7ed3\u70b9 $2$ \u6765\u8bf4\uff0c\u5176\u539f\u6765\u7684\u6700\u5927\u5b50\u6811\u8981\u4e48\u662f\u5b83\u81ea\u5df1\u7684\u5b50\u6811\uff0c\u8981\u4e48\u662f\u9664\u4e86\u4ee5\u5b83\u81ea\u5df1\u4e3a\u6839\u7684\u5b50\u6811\u5269\u4e0b\u7684\u90e8\u5206\uff0c\u800c\u65b0\u7684\u6784\u9020\u65b9\u5f0f\u4e2d\uff0c \u7ed3\u70b9 $2$ \u65b0\u589e\u7684\u5b50\u6811\u5927\u5c0f\u662f\u4ece\u5269\u4e0b\u7684\u90e8\u5206\u5206\u79bb\u800c\u6765\uff0c\u6545\u5927\u5c0f\u80af\u5b9a\u5c0f\u4e8e\u539f\u6765\u6700\u5927\u5b50\u6811\u7684\u5927\u5c0f\uff0c\u800c\u5269\u4e0b\u7684\u90e8\u5206\u5927\u5c0f\u51cf\u5c0f\uff0c\u81ea\u5df1\u7684\u5b50\u6811\u5927\u5c0f\u4e0d\u53d8\uff0c\u6545\u6700\u5927\u5b50\u6811\u5927\u5c0f\u662f\u5c0f\u4e8e\u7b49\u4e8e\u539f\u6765\u7684\u60c5\u51b5\u3002\n\n\u5bf9\u4e8e\u7ed3\u70b9 $1$ \u6765\u8bf4\uff0c\u540c\u6837\u5206\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\uff0c\u5f97\u5230 $1$ \u5728\u65b0\u7684\u6811\u4e2d\u7684\u6700\u5927\u5b50\u6811\u5927\u5c0f\u662f\u5927\u4e8e\u7b49\u4e8e\u539f\u6765\u7684\u60c5\u51b5\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u5f97 $2$ \u7684\u6700\u5927\u5b50\u6811\u5927\u5c0f\u662f\u5c0f\u4e8e\u7b49\u4e8e $1$ \u7684\u6700\u5927\u5b50\u6811\u5927\u5c0f\u7684\uff0c\u4f46\u6211\u4eec\u89c2\u5bdf\u7b49\u4e8e\u65f6\u7684\u60c5\u51b5\uff0c\u53d1\u73b0\u8fd9\u79cd\u60c5\u51b5\u662f\u663e\u7136\u77db\u76fe\u7684\uff0c\u6545\u4e0d\u53ef\u80fd\u53d6\u7b49\uff0c\u90a3\u4e48\u65b0\u6784\u9020\u7684\u6811\u5c31\u53ea\u80fd\u6709\u4e00\u4e2a\u91cd\u5fc3\uff0c\u5c31\u662f\u7ed3\u70b9 $2$\u3002\n\n## \u4ee3\u7801\n```\n#include<bits/stdc++.h>\nusing namespace std;\nvector<int> Edg[100005];\nint rt, sum, sz[100005], son[100005], rt1, rt2;\nvoid getrt(int u, int fa) {             //\u627e\u91cd\u5fc3\n\tsz[u] = 1, son[u] = 0;\n\tfor(int i = 0; i < Edg[u].size(); i++) {\n\t\tint v = Edg[u][i];\n\t\tif(v == fa)  continue;\n\t\tgetrt(v, u);\n\t\tsz[u] += sz[v];\n\t\tson[u] = max(son[u], sz[v]);n\n\t}\n\tson[u] = max(son[u], sum - sz[u]);\n\tif(!rt1)  rt1 = u;\n\tif(rt1 && son[u] < son[rt1])  rt1 = u, rt2 = 0;\n\telse if(rt1 && son[u] == son[rt1])  rt2 = u;\n}\nint main() {\n\tint T; scanf(\"%d\", &T);\n\twhile(T--) {\n\t\trt1 = rt2 = 0;\n\t\tint n; scanf(\"%d\", &n);\n\t\tfor(int i = 1; i <= n; i++)  Edg[i].clear();\n\t\tfor(int i = 1; i < n; i++) {\n\t\t\tint x, y;\n\t\t\tscanf(\"%d%d\", &x, &y);\n\t\t\tEdg[x].push_back(y); Edg[y].push_back(x);\n\t\t}\n\t\tsum = n;\n\t\tgetrt(1, 0);\n\t\tif(rt2 == 0) {\n\t\t\tprintf(\"%d %d\\n%d %d\\n\", 1, Edg[1][0], 1, Edg[1][0]);\n\t\t\tcontinue;\n\t\t}\n\t\tfor(int i = 0; i < sz[rt1]; i++) {\n\t\t\tint v = Edg[rt1][i];\n\t\t\tif(v != rt2) {\n\t\t\t\tprintf(\"%d %d\\n%d %d\\n\", rt1, v, rt2, v);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}",
        "postTime": 1599997336,
        "uid": 48257,
        "name": "wlj_55",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1406C \u3010Link Cut Centroids\u3011"
    },
    {
        "content": "\u9898\u610f\u662f\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u5220\u6389\u4e00\u6761\u8fb9\u5e76\u52a0\u5165\u4e00\u6761\u8fb9\uff0c\u4f7f\u5f97\u5176\u4ecd\u4e3a\u4e00\u68f5\u6811\u4e14\u91cd\u5fc3\u53ea\u6709\u4e00\u4e2a\u3002\n\n\u5982\u679c\u91cd\u5fc3\u672c\u6765\u5c31\u53ea\u6709\u4e00\u4e2a\uff0c\u90a3\u4e48\u5220\u53bb\u5e76\u52a0\u5165\u540c\u4e00\u6761\u8fb9\u5373\u53ef\u3002\n\n\u5982\u679c\u91cd\u5fc3\u6709\u4e24\u4e2a\uff0c\u90a3\u4e48\u6839\u636e\u91cd\u5fc3\u7684\u6027\u8d28\uff0c\u4e24\u91cd\u5fc3\u76f8\u90bb\u4e14\u5220\u6389\u4e24\u91cd\u5fc3\u7684\u8fb9\u540e\u4e24\u68f5\u5b50\u6811\u5927\u5c0f\u4e3a$n/2$\u3002\u6211\u4eec\u5c06\u4e00\u4e2a\u91cd\u5fc3\u7684\u513f\u5b50\u63a5\u5728\u53e6\u4e00\u4e2a\u91cd\u5fc3\u3002\n\n\u6b63\u786e\u6027\uff08\u4ee5\u4e0b\u9ed8\u8ba4\u6240\u8ba8\u8bba\u8282\u70b9\u4e3a\u6839\uff09\uff1a\n\n- \u6240\u6709\u975e\u91cd\u5fc3\u8282\u70b9\u80af\u5b9a\u4e0d\u4f1a\u6210\u4e2d\u5fc3\uff08\u59cb\u7ec8\u6709\u4e00\u4e2a\u5b50\u6811\u5927\u5c0f\u5927\u4e8e$n/2$\uff09\u3002\n\n- \u4e00\u4e2a\u91cd\u5fc3\u56e0\u4e3a\u628a\u513f\u5b50\u63a5\u5728\u4e86\u5b83\u7684\u53e6\u4e00\u4e2a\u5b50\u6811\u5927\u5c0f\u4e3a$n/2$\u4e2d\uff0c\u6240\u4ee5\u6700\u5927\u503c\u5927\u4e8e$n/2$\uff0c\u4e0d\u662f\u91cd\u5fc3\u3002\n\n- \u53e6\u4e00\u4e2a\u91cd\u5fc3\u5b83\u6700\u5927\u7684\u5b50\u6811\u51cf\u5c0f\uff0c\u4e14\u5ac1\u63a5\u8fc7\u6765\u513f\u5b50\u7684\u5b50\u6811\u5927\u5c0f\uff08\u4ee5\u8be5\u91cd\u5fc3\u4e3a\u6839\u7684\u60c5\u51b5\u4e0b\uff09\u4e0d\u4f1a\u8d85\u8fc7$n/2$\u3002\u6240\u4ee5\u662f\u91cd\u5fc3\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\nstruct bian\n{\n    int from, to;\n}eg[200010];\nint fa[100010], t, n, siz[100010], f[100010];\nint front[100010], num;\nvoid lian(int x, int y)\n{\n    eg[++ num].to = y;\n    eg[num].from = front[x];\n    front[x] = num;\n}\nvoid dfs(int o, int from)\n{\n    siz[o] = 1;\n    fa[o] = from;\n    for (int i = front[o]; i; i = eg[i].from)\n    {\n        int to = eg[i].to;\n        if(to == from)continue;\n        dfs(to, o);\n        siz[o] += siz[to];\n        f[o] = max(f[o], siz[to]);\n    }\n    f[o] = max(f[o], n - siz[o]);\n}\nint main()\n{\n    scanf(\"%d\", &t);\n    while(t --)\n    {\n        memset(fa, 0, sizeof(fa));\n        memset(eg, 0, sizeof(eg));\n        memset(front, 0, sizeof(front));\n        memset(f, 0, sizeof(f));\n        num = 0;\n        scanf(\"%d\", &n);\n        int x, y;\n        for (int i = 1; i < n; ++ i)\n        {\n            scanf(\"%d%d\", &x, &y);\n            lian(x, y);\n            lian(y, x);\n        }\n        dfs(1, 0);//\u6c42\u91cd\u5fc3\n        int mins = n + 1, zong = 0;\n        for (int i = 1; i <= n; ++ i)\n        {\n            if(mins == f[i])\n            {\n                ++ zong;\n            }\n            if(mins > f[i])\n            {\n                zong = 1;\n                mins = f[i];\n            }\n        }\n        if(zong == 1)//\u91cd\u5fc3\u6570\u91cf\u4e3a1\n        printf(\"%d %d\\n%d %d\\n\", x, y, x, y);\n        else//\u91cd\u5fc3\u6570\u91cf\u4e3a2\n        {\n            int a = 0, b = 0;\n            for (int i = 1; i <= n; ++ i)\n            {\n                if(f[i] == mins)\n                {\n                    if(a)\n                    b = i;\n                    else\n                    a = i;\n                }\n            }\n            int i, ne;\n            for (i = front[a]; i; i = eg[i].from)\n            {\n                int to = eg[i].to;\n                if(to != b)\n                {\n                    ne = to;\n                    break;\n                }\n            }\n            printf(\"%d %d\\n%d %d\\n\", a, ne, b, ne);\n        }\n    }\n}\n\n```\n",
        "postTime": 1599993038,
        "uid": 111728,
        "name": "\u5e7b\u5f71\u661f\u575a\u5f3a",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1406C \u3010Link Cut Centroids\u3011"
    },
    {
        "content": "## \u524d\u8a00\n\u539f\u6765\u662f\u7ed3\u8bba\u9898=_=\n\n\u60f3\u4e86\u534a\u5929\u6ca1\u601d\u8defQAQ\n## \u9898\u610f\n\u5c06\u4e00\u68f5\u6811\u5220\u4e00\u6761\u8fb9\u52a0\u4e00\u6761\u8fb9\uff0c\u4f7f\u5f97\u65b0\u751f\u6210\u7684\u6811\u91cd\u5fc3\u552f\u4e00\u3002\n## \u601d\u8def\n\u4e00\u68f5\u6811\u6700\u591a\u53ea\u6709 $2$ \u4e2a\u91cd\u5fc3\u3002\n\n\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u91cd\u5fc3\uff0c\u4f60\u4ec0\u4e48\u4e5f\u4e0d\u9700\u8981\u5e72\uff0c\u968f\u4fbf\u5220\u4e00\u6761\u518d\u52a0\u56de\u53bb\u5c31\u884c\u4e86\u3002\n\n\u5982\u679c\u6709\u4e24\u4e2a\u91cd\u5fc3\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u628a\u4e00\u4e2a\u91cd\u5fc3\u8fde\u5230\u53e6\u5916\u4e00\u4e2a\u91cd\u5fc3\u7684\u5b69\u5b50\u8282\u70b9\u4e0a\uff0c\u4e07\u4e8b\u5927\u5409\u3002\n## \u4ee3\u7801\n```\n#include<bits/stdc++.h>\n#define mp make_pair\n#define pi pair<int,int>\n#define pb push_back\nusing namespace std;\ninline int read(){\n   int s=0,w=1;\n   char ch=getchar();\n   while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n   while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n   return s*w;\n}\nvector<int> e[1000003];\nint a[1000003],b[1000003],f[1000003],sz[1000003];\nint n,zx;\nbool flag;\ninline void dfs(int u,int fa) {\n\tsz[u]=1;\n\tf[u]=fa;\n\tint s=e[u].size();\n\tfor(int i=0; i<s; i++) if(e[u][i]!=fa) dfs(e[u][i],u),sz[u]+=sz[e[u][i]];\n\tif(sz[u]==n-sz[u]) flag=1,zx=u;\n\treturn ;\n}\nint main()\n{\n\tint T=read();\n\twhile(T--)\n\t{\n\t\tn=read(),zx=0;\n\t\tfor(int i=1; i<=n; i++) e[i].clear();\n\t\tflag=0;\n\t\tfor(int i=1; i<n; i++) \n\t\t{\n\t\t\tint u=read(),v=read();\n\t\t\te[v].pb(u),e[u].pb(v);\n\t\t\ta[i]=u,b[i]=v;\n\t\t\tif(a[i]<b[i]) swap(a[i],b[i]);\n\t\t}\n\t\tdfs(1,0);\n\t\tif(flag) for(int i=1; i<n; i++) \n\t\t{\n \t\t\tif(zx==a[i] && f[a[i]]!=b[i]) { printf(\"%d %d\\n%d %d\\n\",a[i],b[i],b[i],f[a[i]]); break; }\n\t\t\tif(zx==b[i] && f[b[i]]!=a[i]) { printf(\"%d %d\\n%d %d\\n\",a[i],b[i],a[i],f[b[i]]); break; }\n\t\t}\n\t\telse for(int i=1; i<=2; i++) printf(\"%d %d\\n\",a[1],b[1]);\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1599969047,
        "uid": 111055,
        "name": "dead_X",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1406C \u3010Link Cut Centroids\u3011"
    },
    {
        "content": "\u8fd9\u9898\u8981\u7528\u5230\u91cd\u5fc3\u7684\u4e24\u4e2a\u91cd\u8981\u7ed3\u8bba\uff1a\n\n$1.$ \u91cd\u5fc3\u81f3\u591a\u6709\u4e24\u4e2a\u3002  \n$2.$ \u82e5\u4e00\u68f5\u6811\u6709\u4e24\u4e2a\u91cd\u5fc3\uff0c\u90a3\u4e48\u5b83\u4eec\u5fc5\u7136\u76f8\u90bb\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5148\u627e\u5230\u4e24\u4e2a\u91cd\u5fc3\uff0c\u7136\u540e\u5272\u6389\u5b83\u4eec\u4e4b\u95f4\u8fde\u63a5\u7684\u8fb9\uff0c\u7136\u540e\u5c06\u5176\u4e2d\u4e00\u4e2a\u91cd\u5fc3\u4e0e\u53e6\u4e00\u4e2a\u91cd\u5fc3\u7684\u4e00\u4e2a\u513f\u5b50\u8fde\u8fb9\u3002\u53ef\u4ee5\u8bc1\u660e\uff0c\u8fd9\u6837\u5904\u7406\u540e\u7684\u6811\u5fc5\u7136\u53ea\u6709\u4e00\u4e2a\u91cd\u5fc3\u3002\n\nCode:\n\n```cpp\n#include <cstdio>\n#include <vector>\nusing namespace std ;\nconst int MAXN = 1e5 + 10 ;\nint T , n , size[MAXN] , rt[MAXN] , cnt , minn , fa[MAXN] ;\nvector <int> G[MAXN] ;\nvector <pair <int , int> > S ; \nvoid dfs (int x , int f) {\n\tint maxx = -1 ;\n\tsize[x] = 1 ;\n\tfor (int i = 0 ; i < G[x].size () ; i++) {\n\t\tint v = G[x][i] ;\n\t\tif (v == f) continue ;\n\t\tdfs (v , x) ;\n\t\tsize[x] += size[v] ;\n\t\tif (size[v] > maxx) maxx = size[v] ;\n\t}\n\tif (n - size[x] > maxx) maxx = n - size[x] ;\n\tif (maxx < minn) {\n\t\tminn = maxx ;\n\t\tcnt = 0 ;\n\t\trt[++cnt] = x ;\n\t}\n\telse if (maxx == minn) rt[++cnt] = x ; \n}\nvoid dfs2 (int x) {\n\tfor (int i = 0 ; i < G[x].size () ; i++) {\n\t\tint v = G[x][i] ;\n\t\tif (v == fa[x]) continue ;\n\t\tfa[v] = x ;\n\t\tdfs2 (v) ;\n\t}\n}\nint main () {\n\tscanf (\"%d\" , &T) ;\n\twhile (T--) {\n\t\tscanf (\"%d\" , &n) ; cnt = 0 ; minn = 0x3f3f3f3f ;\n\t\tfor (int i = 1 ; i <= n ; i++) G[i].clear () , fa[i] = 0 ;\n\t\tS.clear () ; \n\t\tfor (int i = 1 ; i < n ; i++) {\n\t\t\tint u , v ;\n\t\t\tscanf (\"%d %d\" , &u , &v) ;\n\t\t\tG[u].push_back (v) ;\n\t\t\tG[v].push_back (u) ;  \n\t\t} \n\t\tdfs (1 , 0) ;\n\t\tif (cnt == 1) {\n\t\t\tprintf (\"%d %d\\n%d %d\\n\" , rt[1] , G[rt[1]][1] , rt[1] , G[rt[1]][1]) ;\n\t\t\tcontinue ;\n\t\t} \n\t\tdfs2 (rt[1]) ;\n\t\tfor (int i = 0 ; i < G[rt[2]].size () ; i++) {\n\t\t\tint v = G[rt[2]][i] ;\n\t\t\tif (v == fa[rt[2]]) continue ;\n\t\t\tS.push_back (make_pair (rt[2] , v)) ;\n\t\t\tS.push_back (make_pair (v , rt[1])) ; \n\t\t\tbreak ;\n\t\t}\n\t\tfor (int i = 0 ; i < 2 ; i++)\n\t\t\tprintf (\"%d %d\\n\" , S[i].first , S[i].second) ;\n\t}\n\treturn 0 ;\n}\n```",
        "postTime": 1599966571,
        "uid": 122641,
        "name": "GIFBMP",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1406C \u3010Link Cut Centroids\u3011"
    }
]