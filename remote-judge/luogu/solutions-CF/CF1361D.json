[
    {
        "content": "## Preface\n\n\u4e0d\u77e5\u9053\u53e6\u4e00\u7bc7\u9898\u89e3\u5728\u5199\u5565\uff0c\u4e3a\u5565\u70b9\u7f16\u53f7\u80fd\u5f53\u4f5c\u4e2a\u6570\u6765\u4e58\u7684\u3002\n\n## Analysis\n\n\u9996\u5148\u6709\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u8fd9\u68f5\u6811\u662f\u6709\u4e00\u5806\u94fe\u76f4\u63a5\u4e0e\u6839\u76f8\u8fde\u6784\u6210\u7684\u3002\n\n\u8003\u8651\u6bcf\u4e2a\u88ab\u9009\u4e2d\u7684\u70b9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u3002\u6211\u4eec\u79f0\u4e00\u4e2a\u70b9 $u$ \u5230\u539f\u70b9\u7684\u8ddd\u79bb\u662f $dis_u$\u3002\n\n\u5047\u8bbe\u8fd9\u4e2a\u70b9\u6240\u5728\u7684\u94fe\u4e0a\u7684\u70b9\u7684\u4e2a\u6570\u662f $U$\uff0c\u8fd9\u4e2a\u70b9\u7684\u513f\u5b50\u6570\u91cf\uff08\u5305\u62ec\u5979\u81ea\u5df1\uff09\u662f $V$\uff0c\u9664\u8fd9\u4e2a\u70b9\u6240\u5728\u94fe\u5916\u7684\u9009\u4e2d\u7684\u70b9\u4e2a\u6570\u662f $W$\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u662f\uff1a\n\n$$\nW\\cdot dis_u-(V-1)\\cdot dis_u+(U-V)\\cdot dis_u\n$$\n\n\u89e3\u91ca\u4e00\u4e0b\uff1a\n\n- \u7b2c\u4e00\u90e8\u5206\u8868\u793a\u8fd9\u4e2a\u70b9\u5230\u522b\u7684\u94fe\u4e0a\u7684\u70b9\u7684\u8ddd\u79bb\u8d21\u732e\u3002\u5373\u5bf9\u4e8e\u4e00\u5bf9\u4e0d\u5728\u540c\u4e00\u4e2a\u94fe\u4e0a\u7684\u70b9\uff0c\u5979\u4eec\u7684\u8ddd\u79bb\u53ef\u4ee5\u88ab\u62c6\u6210\u4e24\u4e2a\u70b9\u5206\u522b\u5230\u6839\u7684\u8ddd\u79bb\u4e4b\u548c\u3002\u56e0\u6b64\u662f $W\\cdot dis_u$\u3002\n\n- \u540e\u4e24\u90e8\u5206\u662f\u540c\u4e00\u6761\u94fe\u4e0a\u7684\u70b9\u7684\u8d21\u732e\u3002\u5373\u5bf9\u4e8e\u5728\u540c\u4e00\u94fe\u4e0a\u7684\u4e00\u5bf9\u70b9\uff0c\u8ddd\u79bb\u662f\u6df1\u5ea6\u5927\u7684\u70b9\u5230\u6839\u7684\u8ddd\u79bb $-$ \u6df1\u5ea6\u5c0f\u7684\u70b9\u5230\u6839\u7684\u8ddd\u79bb\u3002\u4ed6\u4f5c\u4e3a\u6df1\u5ea6\u5c0f\u7684\u70b9\u51fa\u73b0\u8fc7 $V-1$ \u6b21\uff0c\u6df1\u5ea6\u5927\u7684\u70b9\u51fa\u73b0\u8fc7 $U-V$ \u6b21\uff0c\u56e0\u6b64\u8d21\u732e\u662f $-(V-1)\\cdot dis_u+(U-V)\\cdot dis_u$\u3002\n\n\u5c06\u5f0f\u5b50\u5316\u7b80\u4e00\u4e0b\uff0c\u5f97\u5230\u4e00\u4e2a\u70b9\u5f97\u8d21\u732e\uff1a\n\n$$\n(W-2V+U+1)\\cdot dis_u=(k-2V+1)\\cdot dis_u\n$$\n\n\u6240\u4ee5\u4e00\u4e2a\u70b9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5c31\u6e05\u6670\u4e86\u3002\n\n\u6211\u4eec\u53d1\u73b0\u5982\u679c\u4e00\u4e2a\u70b9\u7684\u513f\u5b50\u4e2a\u6570 $\\le\\lfloor\\frac{k}{2}\\rfloor$\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u662f\u6b63\u7684\uff0c\u5426\u5219\u662f\u975e\u6b63\u7684\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5f97\u51fa\u4e86\u9009\u70b9\u7684\u7b56\u7565\uff1a\u6bcf\u6761\u94fe\u4e0a\u5148\u9009\u6df1\u5ea6\u6700\u5927\u7684 $\\lfloor\\frac{k}{2}\\rfloor$ \u4e2a\u70b9\uff0c\u518d\u9009\u6df1\u5ea6\u5c0f\u7684\u70b9\uff08\u8fd9\u4e9b\u70b9\u8d21\u732e\u662f\u975e\u6b63\u7684\uff09\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7b97\u51fa\u9009\u62e9\u6bcf\u4e2a\u70b9\u540e\u7b54\u6848\u7684\u53d8\u5316\u91cf\uff1a\n\n- \u5bf9\u4e8e\u524d $\\lfloor\\frac{k}{2}\\rfloor$ \u4e2a\u6df1\u5ea6\u4ece\u5927\u5411\u5c0f\u53d6\u7684\u70b9\uff0c\u8d21\u732e\u5bf9\u7740\u5f0f\u5b50\u76f4\u63a5\u7b97\u5373\u53ef\u3002\n\n- \u5bf9\u4e8e\u6df1\u5ea6\u4ece\u5c0f\u5411\u5927\u53d6\u7684\u70b9\uff0c\u9996\u5148\u5bf9\u4e8e\u5979\u4e0a\u9762\u7684\u70b9\uff0c\u5b50\u6811\u5927\u5c0f\u90fd $+1$\uff0c\u6240\u4ee5\u8981\u51cf\u4e24\u500d\u7684\u7956\u5148\u8282\u70b9\u6df1\u5ea6\u548c\uff0c\u518d\u52a0\u4e0a\u81ea\u5df1\u7684\u8d21\u732e\u3002\n\n\u5c06\u6240\u6709\u70b9\u7684 \u201c\u589e\u52a0\u540e\u5bf9\u7b54\u6848\u7684\u53d8\u5316\u91cf\u201d \u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u53d6\u524d $k$ \u5927\u7684\u5373\u53ef\u3002\n\n## Code\n\n```cpp\n#define int long long\nconst int N=500010;\nint n,m,k,tot,cur[N];\nstruct node{\n  int x,y,dx,dy;\n  double dis(){\n    return sqrt(x*x+y*y);\n  }\n}a[N];\nmap<pair<int,int>,int> mp;\nvector<int> v[N];\nvector<double> ans;\nvoid solve(int id){\n  m=0;\n  for(int i:v[id]) cur[++m]=i;\n  sort(cur+1,cur+m+1,[](int x,int y){\n    return a[x].dis()>a[y].dis();\n  });\n  int lim=min(k/2,m);\n  double sum=0;\n  rep(i,1,lim){\n    int idx=cur[i];\n    ans.eb(a[idx].dis()*(k-2*i+1));\n  }\n  per(i,m,lim+1){\n    int idx=cur[i];\n    double sub=2*sum,add=(k-2*(lim+1)+1)*a[idx].dis();\n    ans.eb(add-sub),sum+=a[idx].dis();\n  }\n}\nsigned main(){IOS;\n  cin>>n>>k;\n  rep(i,1,n){\n    cin>>a[i].x>>a[i].y;\n    if(a[i].x==0&&a[i].y==0){\n      a[i].dx=a[i].dy=0;\n    }else if(a[i].x==0){\n      a[i].dx=0,a[i].dy=a[i].y/abs(a[i].y);\n    }else if(a[i].y==0){\n      a[i].dx=a[i].x/abs(a[i].x),a[i].dy=0;\n    }else{\n      int d=gcd(a[i].x,a[i].y);\n      a[i].dx=a[i].x/d,a[i].dy=a[i].y/d;\n    }\n    if(!mp[mkp(a[i].dx,a[i].dy)])\n      mp[mkp(a[i].dx,a[i].dy)]=++tot;\n    v[mp[mkp(a[i].dx,a[i].dy)]].eb(i);\n  }\n  rep(i,1,tot) solve(i);\n  sort(ALL(ans)),reverse(ALL(ans));\n  double res=0;\n  rep(i,0,k-1) res+=ans[i];\n  cout<<fixed<<setprecision(8)<<res;\n}\n```",
        "postTime": 1668130818,
        "uid": 169574,
        "name": "Enucai",
        "ccfLevel": 7,
        "title": "CF1361D Johnny and James"
    },
    {
        "content": "\u9996\u5148\u4e0d\u96be\u60f3\u51fa\u5efa\u6811\u65b9\u6cd5\uff1a\u5904\u7406\u51fa\u539f\u70b9\u5230\u6240\u6709\u70b9\u7684\u5c04\u7ebf\u7684\u65b9\u5411\u5411\u91cf\uff0c\u7136\u540e\u5982\u679c\u8fd9\u4e2a\u5411\u91cf\u76f8\u540c\u5c31\u8bf4\u660e\u4ed6\u4eec\u5728\u4e00\u6761\u5c04\u7ebf\u4e0a\uff0c\u5b58\u5165\u4e00\u4e2avector\u5373\u53ef\uff0c\u800c\u65b9\u5411\u5411\u91cf\u7684\u8868\u793a\u53ef\u4ee5\u94a6\u5b9a$x=1$\u7136\u540e$y=x/y$\uff0c\u662f\u9ad8\u4e2d\u6570\u5b66\u57fa\u7840\u3002\u3002\u3002\n\n\u5904\u7406\u597d\u8fd9\u6837\u51e0\u4e2avector\u540e,\u6bcf\u4e2avector\u5185\u8981\u6309\u7167\u5230\u539f\u70b9\u7684\u8ddd\u79bb\u6392\u5e8f\uff0c\u90a3\u4e48\u6bcf\u4e2a\u6811\u94fe\u5c31\u662f\u4ecevector\u9876\u5230\u5e95\n\n\u7136\u540e\u6211\u4eec\u5728\u8003\u8651\u9009\u53d6k\u4e2a\u4f7f\u5f97\u4ed6\u4eec\u4e24\u4e24\u5728\u6811\u4e0a\u7684\u8ddd\u79bb\u548c\u6700\u5927\n\n\u53d1\u73b0\uff1a$n \\leq 1e6,k \\leq 1e6$/jk\n\n\u6734\u7d20\u7684\u6811\u5f62DP\u662fO(nk)\u7684\uff0c\u6240\u4ee5\u8003\u8651\u8fd9\u4e2a\u6811\u7684\u7279\u6b8a\u6027\u8d28\uff1a\u5b8c\u5168\u7531\u94fe\u6784\u6210\n\n\u65e2\u7136\u7531\u94fe\u6784\u6210\u5176\u5b9e\u6211\u4eec\u80fd\u5f88\u5bb9\u6613\u7b97\u51fa**\u6bcf\u4e2a\u70b9\u5230\u6839\u7684\u8ddd\u79bb**\u5bf9\u4e8e\u7b54\u6848\u7684\u8d21\u732e,\u8fd9\u4e00\u5b9a\u662f\u4ed6\u513f\u5b50\u4e2d\u9009\u7684\u70b9\u6570$i*(k-i)$\n\n\u53c8\u4e0d\u96be\u770b\u51fa\uff0c\u5728\u4e00\u6761\u94fe\u4e0a\uff0c\u8fd9\u4e2a\"**\u6bcf\u4e2a\u70b9\u5230\u6839\u7684\u8ddd\u79bb**\"\u662f\u5355\u8c03\u9012\u51cf\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff1a\u6211\u4eec\u5728\u4e00\u6761\u94fe\u4e0a\u7684\u9009\u62e9\u65b9\u6848\u53ef\u80fd\u662f\u786e\u5b9a\u7684\uff0c\u800c\u4e14\u5927\u6982\u7387\u662f\u4ece\u94fe\u5e95\u5230\u94fe\u9876\u8fd9\u6837\u9009\n\n\u8bbe\u6811\u94fe\u5305\u62ec\u70b9\u7684\u96c6\u5408\u4e3aS\uff0c\u5047\u5982\u6211\u4eec\u6309\u7167\u6df1\u5ea6\u4f9d\u6b21\u8bbf\u95ee\u7684\u8bdd\uff0c\u8d21\u732e\u662f\uff1a\n\n$$\\sum_{u \\in S}u*(k-u)*dis_u$$\n\n\u5176\u4e2d$u*(k-u)$\u5c31\u662f\u4e0a\u9762\u8bf4\u7684\u90a3\u4e2a\n\n$u*(k-u)$\u597d\u50cf\u5f53u\u5728$[1,k/2]$\u53d8\u5316\u65f6\u5355\u8c03\u9012\u589e\n\n\u800c\u5f53$u>k/2$\u7684\u65f6\u5019\uff0c\u597d\u50cf\u53c8\u9012\u51cf\u4e86\uff0c\u5f53\u7136\u4e0d\u884c\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u786e\u4fdd\u6bcf\u65f6\u6bcf\u523b\u8fd9\u4e2a$u$\u90fd\u5c0f\u4e8e$k/2$\n\n\u90a3\u4e48\u4e00\u6761\u94fe\u4e0a\u9009\u62e9\u7684\u65b9\u6848\u5c31\u80fd\u770b\u51fa\u4e86\uff1a\n\n> \u5148\u9009\u62e9\u6700\u6df1\u7684$\\frac k 2$\u4e2a\u70b9\uff0c\u5982\u679c\u8fd8\u80fd\u9009\u7684\u8bdd\u518d\u9009\u6700\u6d45\u7684$\\frac k 2$\u4e2a\u70b9\n\n\u4e8e\u662f\uff1f\u4e00\u4e2a\u81ea\u7136\u7684\u60f3\u6cd5\u662f\u770b\u770b**\u80fd\u9009**\u7684\u6761\u4ef6\u662f\u4ec0\u4e48\uff0c\u4e8e\u662f\u6211\u4eec\u8981\u8ba1\u7b97\u4e00\u4e2a\u70b9\u9009\u540e\u7684**\u589e\u91cf**\n\n1. \u6700\u6df1\u7684$\\frac k 2$\u4e2a\u70b9\n\n\u6b64\u65f6\u6211\u4eec\u9009\u4e2d\u8fd9\u4e2a\u70b9\u53ef\u4ee5\u653e\u5fc3\u7684\u7528$(k-u)$(\u56e0\u4e3a\u4ed6\u4e0b\u9762\u7684\u70b9\u4e00\u5b9a\u90fd\u9009\u4e86)\u8ba1\u7b97\u4e00\u90e8\u5206\u8d21\u732e\n\n\u7136\u800c\u8fd9\u6837\u4f1a\u591a\u7b97\uff0c\u56e0\u4e3a\u76f8\u5f53\u4e8e\u5728\u94fe\u4e0a\u9009\u7684\u70b9\u591a\u4e86\u4e00\u4e2a\uff0c\u800c\u4ed6\u4e0b\u9762\u90a3\u4e9b\u70b9v\u5bf9\u4e8e\u4ed6\u7684\u8d21\u732e\u8fd8\u662f$dis_v$\uff0c\u73b0\u5728\u5e94\u8be5\u662f$dis_v-dis_u$\u4e86\n\n\u6240\u4ee5\u662f$(k-u)*dis_u-u*dis_u$\n\n2. \u6700\u6d45\u7684$\\frac k 2$\u4e2a\u70b9\n\n\u663e\u7136\u7b2c\u4e00\u7c7b\u60c5\u51b5\u4e5f\u662f\u4e00\u6837\u7684\n\n\u800c\u6b64\u65f6\u6211\u4eec\u53c8\u8981\u8003\u8651\u4ed6\u4e0a\u9762\u7684\u70b9v\u5bf9\u4e8e\u4ed6\u7684\u8d21\u732e\u8981\u51cf\u5c0f\u3002\u3002\u3002\n\n\u539f\u6765\u662f$dis_v$\uff0c\u73b0\u5728\u53d8\u6210\u4e86$dis_u-dis_v$\n\n\u5dee\u503c\u662f$dis_u-2*dis_v$\n\n\u7edf\u8ba1\u4e00\u4e2a$dis_v$\u7684\u524d\u7f00\u548c\u5373\u53ef\uff01\n\ncode:\n\n\n```cpp\n\n#include<bits/stdc++.h>\n#define int long long\n#define db double\n#define mkp(x,y) (make_pair(x,y))\n#define pii pair<int,int>\nusing namespace std;\nconst int MAXN=5e5+7;\nconst db eps=1e-9;\nint n,k,tot,sm;\nmap<pii,int> mp;\ndb ans;\nstruct rec {\n\tint x,y;\n\tdb dis;\n\tinline void gdis() {\n\t\tdis=sqrt(x*x+y*y);\n\t}\n} e[MAXN];\ndb mv[MAXN];\nvector<int> v[MAXN];\ninline bool qwq(int x,int y) {\n\treturn e[x].dis-e[y].dis<eps;\n}\ninline int gcd(int x,int y) {\n\tif(x<0)x=-x;\n\tif(y<0)y=-y;\n\treturn y==0?x:gcd(y,x%y);\n}\ninline void solve(int o) {\n\tint m=v[o].size();\n\tsort(v[o].begin(),v[o].end(),qwq);\n\treverse(v[o].begin(),v[o].end());\n\tdb s=0;\n\tfor(int i=0; i<min(m,k/2); ++i) {\n\t\tint u=v[o][i];\n\t\tmv[++sm]=e[u].dis*(k-i-1)-e[u].dis*i;\n\t}\n\tfor(int i=k/2; i<m; ++i) {\n\t\tint u=v[o][m-i+k/2-1];\n\t\tmv[++sm]=e[u].dis*(k-i-k/2-1)-s*2+e[u].dis*(i-k/2);\n\t\ts+=e[u].dis;\n\t}\n\treturn;\n}\nsigned main() {\n\tscanf(\"%lld%lld\",&n,&k);\n\tfor(int i=1,x,y; i<=n; ++i) {\n\t\tscanf(\"%lld%lld\",&x,&y);\n\t\te[i].x=x;\n\t\te[i].y=y;\n\t\te[i].gdis();\n\t\tif(x==0 && y==0) {\n\t\t\tv[++tot].push_back(i);\n\t\t\tcontinue;\n\t\t}\n\t\tint d=gcd(x,y);\n\t\tx/=d;\n\t\ty/=d;\n\t\tif(mp.find(mkp(x,y))!=mp.end()) {\n\t\t\tv[mp[mkp(x,y)]].push_back(i);\n\t\t} else {\n\t\t\t++tot;\n\t\t\tmp[mkp(x,y)]=tot;\n\t\t\tv[tot].push_back(i);\n\t\t}\n\t}\n\tfor(int i=1; i<=tot; ++i)solve(i);\n\tsort(mv+1,mv+sm+1);\n\tfor(int i=sm; i>=sm-k+1; --i)ans+=mv[i];\n\tprintf(\"%.10lf\\n\",ans);\n\treturn 0;\n}\n\n\n```\n",
        "postTime": 1604411548,
        "uid": 76990,
        "name": "loveJY",
        "ccfLevel": 9,
        "title": "CF1361D Johnny and James"
    }
]