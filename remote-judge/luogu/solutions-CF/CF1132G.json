[
    {
        "content": "[$$\\large \\color{purple} My\\; Blog$$](https://www.cnblogs.com/p-b-p-b/p/10502681.html)\n\n---------------------\n\n\u770b\u5230\u9898\u89e3\u90a3\u4e48\u5c11\u5c31\u6765\u53d1\u4e00\u7bc7\u5427\u2026\u2026\n\n---------------------\n\n## \u601d\u8def\n\n\u770b\u5b8c\u9898\u76ee\u4e00\u8138\u61f5\u903c\uff0c\u611f\u89c9\u65e0\u4ece\u4e0b\u624b\u3002\n\n\u83ab\u540d\u5176\u5999\u5730\u60f3\u5230\u7b1b\u5361\u5c14\u6811\uff0c\u4f46\u7b1b\u5361\u5c14\u6811\u597d\u50cf\u5e76\u6ca1\u6709\u592a\u5927\u4f5c\u7528\u3002\n\n\u8003\u8651\u628a\u7b1b\u5361\u5c14\u6811\u6539\u4e00\u4e0b\uff1a\u6bcf\u4e2a\u70b9\u7684\u7236\u4eb2\u8bbe\u4e3a\u5b83\u7684\u53f3\u8fb9\u7b2c\u4e00\u4e2a\u5927\u4e8e\u5b83\u7684\u4f4d\u7f6e\u3002\n\n\u8fd9\u65f6\u7a81\u7136\u53d1\u73b0\u4e00\u4e2a\u5f88\u597d\u7684\u6027\u8d28\uff1a\u641e\u7b54\u6848\u65f6\u6bcf\u6b21\u4ece\u53f3\u8fb9\u52a0\u5165\u4e00\u4e2a\u70b9$x$\u65f6\uff0c\u4ee5$x$\u7684\u5b50\u6811\u4e2d\u7684\u4e00\u4e2a\u70b9\u4e3a\u8d77\u70b9\u7684\u957f\u5ea6\u5168\u90fd\u52a0\u4e00\u3002\n\n\u90a3\u4e48\u6309dfs\u5e8f\u5efa\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u548c\u3001\u533a\u95f4\u52a0\u3001\u5355\u70b9\u4fee\u6539\u4e3a-INF\uff08\u4ece\u5de6\u8fb9\u5220\u70b9\uff09\u5373\u53ef\u3002\n\n--------------------------\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nclock_t t=clock();\nnamespace my_std{\n    using namespace std;\n    #define pii pair<int,int>\n    #define fir first\n    #define sec second\n    #define MP make_pair\n    #define rep(i,x,y) for (int i=(x);i<=(y);i++)\n    #define drep(i,x,y) for (int i=(x);i>=(y);i--)\n    #define go(x) for (int i=head[x];i;i=edge[i].nxt)\n    #define templ template<typename T>\n    #define sz 1001010\n    typedef long long ll;\n    typedef double db;\n    mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\n    templ inline T rnd(T l,T r) {return uniform_int_distribution<T>(l,r)(rng);}\n    templ inline bool chkmax(T &x,T y){return x<y?x=y,1:0;}\n    templ inline bool chkmin(T &x,T y){return x>y?x=y,1:0;}\n    templ inline void read(T& t)\n    {\n        t=0;char f=0,ch=getchar();double d=0.1;\n        while(ch>'9'||ch<'0') f|=(ch=='-'),ch=getchar();\n        while(ch<='9'&&ch>='0') t=t*10+ch-48,ch=getchar();\n        if(ch=='.'){ch=getchar();while(ch<='9'&&ch>='0') t+=d*(ch^48),d*=0.1,ch=getchar();}\n        t=(f?-t:t);\n    }\n    template<typename T,typename... Args>inline void read(T& t,Args&... args){read(t); read(args...);}\n    char __sr[1<<21],__z[20];int __C=-1,__Z=0;\n    inline void __Ot(){fwrite(__sr,1,__C+1,stdout),__C=-1;}\n    inline void print(register int x)\n    {\n    \tif (__C>1<<20) __Ot(); if (x<0) __sr[++__C]='-',x=-x;\n    \twhile (__z[++__Z]=x%10+48,x/=10);\n    \twhile (__sr[++__C]=__z[__Z],--__Z);__sr[++__C]='\\n';\n    }\n    void file()\n    {\n        #ifndef ONLINE_JUDGE\n        freopen(\"a.in\",\"r\",stdin);\n        #endif\n    }\n    inline void chktime()\n    {\n        #ifndef ONLINE_JUDGE\n        cout<<(clock()-t)/1000.0<<'\\n';\n        #endif\n    }\n    #ifdef mod\n    ll ksm(ll x,int y){ll ret=1;for (;y;y>>=1,x=x*x%mod) if (y&1) ret=ret*x%mod;return ret;}\n    ll inv(ll x){return ksm(x,mod-2);}\n    #else\n    ll ksm(ll x,int y){ll ret=1;for (;y;y>>=1,x=x*x) if (y&1) ret=ret*x;return ret;}\n    #endif\n//\tinline ll mul(ll a,ll b){ll d=(ll)(a*(double)b/mod+0.5);ll ret=a*b-d*mod;if (ret<0) ret+=mod;return ret;}\n}\nusing namespace my_std;\n\nint n,m;\nint a[sz];\nstruct hh{int t,nxt;}edge[sz<<1];\nint head[sz],ecnt;\nvoid make_edge(int f,int t)\n{\n\tedge[++ecnt]=(hh){t,head[f]};\n\thead[f]=ecnt;\n\tedge[++ecnt]=(hh){f,head[t]};\n\thead[t]=ecnt;\n}\n\nint dfn[sz],low[sz],cnt;\nvoid dfs(int x,int fa)\n{\n\tdfn[x]=++cnt;\n\tgo(x) if (edge[i].t!=fa) dfs(edge[i].t,x);\n\tlow[x]=cnt;\n}\n\nvoid build()\n{\n\tstack<int>s;\n\trep(i,1,n)\n\t{\n\t\twhile (!s.empty()&&a[s.top()]<a[i]) make_edge(s.top(),i),s.pop();\n\t\ts.push(i);\n\t}\n\twhile (!s.empty()) make_edge(s.top(),n+1),s.pop();\n}\n\nint mx[sz<<2];\nint tag[sz<<2];\n#define ls k<<1\n#define rs k<<1|1\n#define lson ls,l,mid\n#define rson rs,mid+1,r\nvoid Add(int k,int w){mx[k]+=w;tag[k]+=w;}\nvoid pushdown(int k){Add(ls,tag[k]);Add(rs,tag[k]);tag[k]=0;}\nvoid pushup(int k){mx[k]=max(mx[ls],mx[rs]);}\nvoid add(int k,int l,int r,int x,int y)\n{\n\tif (x<=l&&r<=y) return Add(k,1);\n\tint mid=(l+r)>>1;\n\tpushdown(k);\n\tif (x<=mid) add(lson,x,y);\n\tif (y>mid) add(rson,x,y);\n\tpushup(k);\n}\nvoid modify(int k,int l,int r,int x)\n{\n\tif (l==r) return void(mx[k]=-1e9);\n\tint mid=(l+r)>>1;\n\tpushdown(k);\n\tif (x<=mid) modify(lson,x);\n\telse modify(rson,x);\n\tpushup(k);\n}\n\nint main()\n{\n\tfile();\n\tread(n,m);\n\trep(i,1,n) read(a[i]);\n\tbuild();\n\tdfs(n+1,0);\n\trep(i,1,n) --dfn[i],--low[i];\n\trep(i,1,n)\n\t{\n\t\tadd(1,1,n,dfn[i],low[i]);\n\t\tif (i>m) modify(1,1,n,dfn[i-m]);\n\t\tif (i>=m) printf(\"%d \",mx[1]);\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1552131575,
        "uid": 76481,
        "name": "p_b_p_b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1132G \u3010Greedy Subsequences\u3011"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a$ \u548c\u4e00\u4e2a\u6574\u6570 $k$\uff0c\u5bf9\u4e8e\u8be5\u5e8f\u5217\u6240\u6709\u957f\u5ea6\u4e3a $k$ \u7684\u5b50\u533a\u95f4\u6c42\u51fa\u5176\u4e2d\u6700\u957f\u7684\u4e25\u683c\u4e0a\u5347\u8d2a\u5fc3\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u3002\u4e25\u683c\u4e0a\u5347\u8d2a\u5fc3\u5b50\u5e8f\u5217\u6ee1\u8db3\u5982\u679c\u9009\u62e9\u4e86\u4e00\u4e2a\u5143\u7d20\uff0c\u90a3\u4e48\u4e0b\u4e00\u4e2a\u8981\u9009\u7684\u5143\u7d20\u5fc5\u987b\u662f\u5176\u540e\u9762\u7b2c\u4e00\u4e2a\u6bd4\u5b83\u5927\u7684\u5143\u7d20\u3002\n\n## \u601d\u8def\n\n\u8bbe $dp_i$ \u8868\u793a\u4ece\u7b2c $i$ \u4e2a\u5143\u7d20\u5f00\u59cb\u9009\u7684\u4e25\u683c\u8d2a\u5fc3\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u5148\u5c06\u5b83\u4eec\u6240\u6709\u7684\u521d\u503c\u90fd\u8d4b\u6210 $1$\uff0c\u4ece $1$ \u5230 $n$ \u4f9d\u6b21\u52a0\u5165\u6240\u6709\u5143\u7d20\u3002\u82e5\u52a0\u5165\u4e86\u4e00\u4e2a\u5143\u7d20 $a_i$\uff0c\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u627e\u5230\u6700\u9760\u524d\u7684l\u4f7f\u5f97\u533a\u95f4 $[l,i-1]$ \u4e2d\u7684\u6240\u6709\u5143\u7d20\u90fd\u5c0f\u4e8e $a_i$\uff0c\u4e8c\u5206\u65f6\u8981\u67e5\u8be2\u7684\u533a\u95f4\u6700\u5927\u503c\u53ef\u4ee5\u7528 $st$ \u8868\u6765\u7ef4\u62a4\u3002\u90a3\u4e48\u5143\u7d20 $a_i$ \u5c31\u53ef\u4ee5\u4f7f\u533a\u95f4 $[l,i-1]$ \u7684\u6240\u6709 $dp$ \u503c\u90fd\u52a0 $1$\uff0c\u56e0\u4e3a\u5b83\u4f1a\u63a5\u5728\u4e14\u4ec5\u4f1a\u63a5\u5728\u6240\u6709\u4ee5\u533a\u95f4 $[l,i-1]$ \u4e2d\u7684\u5143\u7d20\u5f00\u5934\u7684\u4e25\u683c\u4e0a\u5347\u8d2a\u5fc3\u5b50\u5e8f\u5217\u7684\u540e\u9762\u3002\u6700\u540e\uff0c\u5bf9\u4e8e\u6bcf\u6b21\u52a0\u5165\u5143\u7d20 $a_i$\uff0c\u82e5 $i>=k$\uff0c\u5219\u8f93\u51fa\u533a\u95f4 $[i-k+1,i]$ \u4e2d $dp$ \u7684\u6700\u5927\u503c\u4f5c\u4e3a\u5b50\u533a\u95f4 $[i-k+1,i]$ \u7684\u7b54\u6848\u3002\u56e0\u4e3a\u6d89\u53ca\u533a\u95f4\u52a0\u6cd5\u548c\u67e5\u8be2\u533a\u95f4\u6700\u5927\u503c\u7684\u64cd\u4f5c\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4 $dp$ \u7684\u503c\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#pragma GCC O(2)\n#pragma GCC O(3)\n#pragma O(fast)\nusing namespace std;\ninline int read()\n{\n\tint read_result=0,is_below_0=0;\n\tchar now_ch=0;\n\twhile(!isdigit(now_ch))\n\t{\n\t\tis_below_0|=now_ch=='-';\n\t\tnow_ch=getchar();\n\t}\n\twhile(isdigit(now_ch))\n\t{\n\t\tread_result=(read_result<<3)+(read_result<<1)+(now_ch^48);\n\t\tnow_ch=getchar();\n\t}\n\treturn is_below_0?-read_result:read_result;\n}\ninline void write(int x)\n{\n\tif(x<0)\n\t{\n\t\tputchar('-');\n\t\tx=-x;\n\t}\n\tif(x>9) write(x/10);\n\tputchar(x%10+'0');\n}\nint n,k,c[1000001],st[1000001][21],tr[4000001],lz[4000001];\ninline void build(int o,int l,int r)\n{\n\tif(l==r)\n\t{\n\t\ttr[o]=1;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(o<<1,l,mid);\n\tbuild(o<<1|1,mid+1,r);\n\ttr[o]=max(tr[o<<1],tr[o<<1|1]);\n}\ninline void update(int o,int l,int r,int x,int y)\n{\n\tif(x<=l&&r<=y)\n\t{\n\t\t++tr[o];\n\t\t++lz[o];\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif(lz[o])\n\t{\n\t\ttr[o<<1]+=lz[o];\n\t\tlz[o<<1]+=lz[o];\n\t\ttr[o<<1|1]+=lz[o];\n\t\tlz[o<<1|1]+=lz[o];\n\t\tlz[o]=0;\n\t}\n\tif(x<=mid) update(o<<1,l,mid,x,y);\n\tif(y>mid) update(o<<1|1,mid+1,r,x,y);\n\ttr[o]=max(tr[o<<1],tr[o<<1|1]);\n}\ninline int query(int o,int l,int r,int x,int y)\n{\n\tif(x<=l&&r<=y) return tr[o];\n\tint mid=(l+r)>>1,res=0;\n\tif(lz[o])\n\t{\n\t\ttr[o<<1]+=lz[o];\n\t\tlz[o<<1]+=lz[o];\n\t\ttr[o<<1|1]+=lz[o];\n\t\tlz[o<<1|1]+=lz[o];\n\t\tlz[o]=0;\n\t}\n\tif(x<=mid) res=query(o<<1,l,mid,x,y);\n\tif(y>mid) res=max(res,query(o<<1|1,mid+1,r,x,y));\n\treturn res;\n}\nint main()\n{\n\tn=read();\n\tk=read();\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tst[i][0]=read();\n\t\tc[i]=c[i-1];\n\t\tif((1<<(c[i]+1))<=i) ++c[i];\n\t}\n\tfor(int i=1;i<=20;++i)\n\t{\n\t\tfor(int j=1;j<=n;++j)\n\t\t{\n\t\t\tif(j+(1<<(i-1))<=n) st[j][i]=max(st[j][i-1],st[j+(1<<(i-1))][i-1]);\n\t\t\telse st[j][i]=st[j][i-1];\n\t\t}\n\t}\n\tbuild(1,1,n);\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tint l=1,r=i;\n\t\twhile(l<r)\n\t\t{\n\t\t\tint mid=(l+r)>>1,maxa=max(st[mid][c[i-mid]],st[mid+i-mid-(1<<c[i-mid])][c[i-mid]]);\n\t\t\tif(maxa>=st[i][0]) l=mid+1;\n\t\t\telse r=mid;\n\t\t}\n\t\tif(l<i) update(1,1,n,l,i-1);\n\t\tif(i<k) continue;\n\t\twrite(query(1,1,n,i-k+1,i));\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1662381247,
        "uid": 488734,
        "name": "wrzSama",
        "ccfLevel": 7,
        "title": "CF1132G Greedy Subsequences \u9898\u89e3"
    },
    {
        "content": "## \u601d\u8def\n\n\u9996\u5148\u6a21\u62df\u4e00\u4e0b\u6837\u4f8b\uff0c\u627e\u627e\u89c4\u5f8b\u3002\n\n\u7ed9\u5b9a\u8fd9\u6837\u4e00\u4e2a\u5e8f\u5217\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u6570\u5fc5\u987b\u53d6\u4ed6\u540e\u9762\u7b2c\u4e00\u4e2a\u5927\u4e8e\u5b83\u7684\u6570\uff0c\u6240\u4ee5 **\u6bcf\u4e2a\u6570\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u662f\u552f\u4e00\u7684**\u3002\u4e00\u5b9a\u4f1a\u5b58\u5728\u8fd9\u4e48\u4e00\u4e9b\u6570\uff0c\u4ed6\u4eec\u662f**\u6ca1\u6709\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684**\uff08\u5373\u5b83\u662f\u4ece\u5f53\u524d\u4f4d\u7f6e $x$ \u5230 $n$ \u4e4b\u95f4\u6700\u5927\u7684\u6570\uff09\u3002\u60f3\u8c61\u4e00\u4e0b\uff0c\u628a\u8fd9\u4e9b\u70b9\u4e00\u4e2a\u4e2a\u90fd\u62ce\u8d77\u6765\uff0c\u90a3\u4e48\u6bcf\u4e00\u4e2a\u8282\u70b9\u4e0b\u9762\u90fd\u662f\u4e00\u9897\u6811\uff0c\u5373\u662f\u4e00\u4e2a**\u68ee\u6797**\u3002\u4e3a\u4e86\u65b9\u4fbf\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u5e38\u89c4\u64cd\u4f5c\u4e00\u4e0b\uff0c\u5efa\u7acb\u4e00\u4e2a**\u8d85\u6839** $n+1$\uff0c\u628a\u8fd9\u4e9b\u6ca1\u6709\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u70b9\u4e0e\u8d85\u6839\u8fde\u4e00\u6761\u8fb9\u3002\u7136\u540e\u6574\u4e2a\u5e8f\u5217\u5c31\u662f\u4e00\u4e2a\u6811\u5f62\u7ed3\u6784\uff0c\u4e24\u70b9 $(u,v)$ \u4e4b\u95f4\u7684\u8fde\u8fb9\u8868\u793a\u7b2c $v$ \u4e2a\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u662f\u7b2c $u$ \u4e2a\u70b9\u3002\n\n---\n\n\u65b9\u4fbf\u7406\u89e3\uff0c\u6765\u641e\u4e00\u4e0b\u6837\u4f8b\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ic2y18nz.png)\n\n\u5148\u5efa\u6210\u8fd9\u4e48\u4e00\u4e2a\u56fe\u3002\n\n\u7136\u540e\uff0c\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u6570 $1$\uff0c\u628a $1$ \u7684\u5b50\u6811\u5168\u90e8\u52a0\u4e00\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ikulpcer.png)\n\n$2$ \u81f3 $k$ \u540c\u7406\uff08\u6837\u4f8b $k=4$\uff09\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/0mjj35wl.png)\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/98o46w4i.png)\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/87ozd480.png)\n\n\u7136\u540e\uff0c\u6b64\u65f6\u7684 $p_{\\max}=2$\u3002\n\n$k+1$ \u81f3 $n$ \u6dfb\u52a0\u548c\u4e4b\u524d\u540c\u7406\uff0c\u4f46\u662f\u6bcf\u6b21\u8981\u5220\u6389\u6700\u5de6\u8fb9\u7684\u4e00\u4e2a\uff0c\u56e0\u4e3a\u4ed6\u4e0d\u5728\u8fd9\u4e2a\u533a\u95f4\u91cc\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/v0ygohe1.png)\n\n\u6b64\u65f6\uff0c$p_{\\max}=2$\u3002\n\n\u6700\u540e\u4e00\u4e2a\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/q3il3gx7.png)\n\n\u6b64\u65f6\uff0c$p_{\\max}=3$\u3002\n\n\u6240\u4ee5\uff0c\u8f93\u51fa\u4e3a ```2 2 3```\u3002\n\n\u5404\u4f4d\u5e94\u8be5\u7406\u89e3\u4e86\u5427\uff1f\n\n---\n\n\u90a3\u4e48\u6bcf\u6b21\u600e\u4e48\u8fdb\u884c\u67e5\u8be2\u5462\uff1f\u53ef\u4ee5\u53d1\u73b0\uff0c\u4ee5\u6bcf\u4e00\u4e2a\u70b9\u5f00\u59cb\u7684\u8d2a\u5fc3\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\uff0c**\u968f\u7740\u53f3\u7aef\u70b9\u7684\u589e\u957f\uff0c\u957f\u5ea6\u662f\u5355\u8c03\u4e0d\u51cf\u7684**\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u67e5\u8be2\u957f\u5ea6\u4e3a $k$ \u4e2d\u7684\u6700\u957f\u8d2a\u5fc3\u4e0a\u5347\u5b50\u5e8f\u5217\u5373\u53ef\u3002\u66b4\u529b\u7684\u65b9\u6cd5\u663e\u7136\u662f\u6bcf\u6b21\u5982\u679c\u52a0\u5165\u4e86\u4e00\u4e2a\u6570\uff0c\u90a3\u4e48 **\u6240\u6709\u4e0b\u4e00\u4e2a\u8282\u70b9\u662f\u8fd9\u4e2a\u6570\u7684\u4f4d\u7f6e** \u7684\u6570\uff0c\u4ee5\u4ed6\u4eec\u5f00\u5934\u7684\u6700\u957f\u8d2a\u5fc3\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6\u90fd\u4f1a\u52a0\u4e00\u3002\u67e5\u8be2\u5c31\u662f\u5bf9\u4e8e $[l,l+k-1]$ \u8fd9\u4e2a\u533a\u95f4\u4e2d\u6bcf\u4e00\u4e2a $i$\uff0c\u4ee5\u5b83\u4e3a\u5f00\u5934\u7684\u6700\u957f\u8d2a\u5fc3\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6\uff08\u8bb0\u4e3a $p_i$\uff09\u7684\u6700\u5927\u503c\u3002\n\n\u90a3\u4e48\u66b4\u529b\u663e\u7136\u662f $O(n^2)$\uff0c\u53c8\u662f\u4e00\u4e2a\u663e\u7136\u7684\u533a\u95f4\u52a0 & \u533a\u95f4\u67e5\u8be2\u6700\u5927\u503c \u7684~~\u50bb\u661f~~\u7ebf\u6bb5\u6811\u677f\u5b50\uff0c\u7528\u7ebf\u6bb5\u6811\u7b80\u5355\u4f18\u5316\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n)$\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN=1000005;\nconst int INF=1000000000;\n\nint tr[MAXN<<2],tag[MAXN<<2]; // \u7ebf\u6bb5\u6811 & \u61d2\u6807\nvoid push_down(int p,int l,int r,int k) // \u4e0b\u4f20\n{\n\tint mid=(l+r)>>1; \n\ttr[p<<1]+=k;\n\ttr[p<<1|1]+=k;\n\ttag[p<<1]+=k;\n\ttag[p<<1|1]+=k;\n\ttag[p]=0;\n}\nvoid add(int p,int l,int r,int st,int ed,int k)\n{\n\tif(st<=l && r<=ed)\n\t{\n\t\ttr[p]+=k;\n\t\ttag[p]+=k;\n\t\treturn;\n\t}\n\tif(r<st || l>ed) return;\n\tint mid=(l+r)>>1;\n\tpush_down(p,l,r,tag[p]);\n\tadd(p<<1,l,mid,st,ed,k);\n\tadd(p<<1|1,mid+1,r,st,ed,k);\n\ttr[p]=max(tr[p<<1],tr[p<<1|1]);\n}\nint query(int p,int l,int r,int st,int ed)\n{\n\tif(st<=l && r<=ed) return tr[p];\n\tif(r<st || l>ed) return 0;\n\tint mid=(l+r)>>1;\n\tpush_down(p,l,r,tag[p]);\n\treturn max(query(p<<1,l,mid,st,ed),query(p<<1|1,mid+1,r,st,ed));\n}\n\nint a[MAXN],nxt[MAXN],dfn[MAXN],s[MAXN],tot;\nvector<int> E[MAXN];\nvoid dfs(int u) // \u8bb0\u5f55\u6bcf\u4e2a\u70b9\u7684 dfn \u5e8f\u548c\u5b50\u6811\u5927\u5c0f\uff08\u8fd9\u6837\u6bcf\u4e2a\u70b9\u7684\u5b50\u6811\u4e2d dfn \u5e8f\u662f\u8fde\u7eed\u7684\uff0c\u7ebf\u6bb5\u6811\u4fee\u6539\u65b9\u4fbf\uff09\n{\n\tdfn[u]=++tot; s[u]=1;\n\tfor(int i=0;i<E[u].size();i++)\n\t{\n\t\tint v=E[u][i];\n\t\tdfs(v);\n\t\ts[u]+=s[v];\n\t}\n}\n\nint main()\n{\n\tint n,k; scanf(\"%d%d\",&n,&k);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n\t\n\tstack<int> st;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\twhile(st.size() && a[st.top()]<a[i])\n\t\t\tE[i].push_back(st.top()),st.pop();\n\t\tst.push(i);\n\t}\n\twhile(st.size())\n\t\tE[n+1].push_back(st.top()),st.pop();\n\t// \u5355\u8c03\u6808\u6a21\u62df\u6c42\u524d\u9a71\uff08\u8fd9\u4e2a\u548c\u4eca\u5e74\uff0c\u5373 2022 \u5e74 NOI Online T1 \u7c7b\u4f3c\uff09\n\t\n\tdfs(n+1); // \u6c42\u51fa\u6bcf\u4e2a\u70b9\u5728\u6811\u91cc\u7684 dfn \u5e8f\u548c\u5b50\u6811\u5927\u5c0f\n\t\n\tfor(int i=1;i<=k;i++) add(1,1,n+1,dfn[i],dfn[i]+s[i]-1,1);\n\tprintf(\"%d\",query(1,1,n+1,1,n+1));\n\tfor(int i=k+1;i<=n;i++)\n\t{\n\t\tadd(1,1,n+1,dfn[i],dfn[i]+s[i]-1,1); //\u6bcf\u6b21\u5bf9\u6240\u6709\u4e0b\u4e00\u4e2a\u8282\u70b9\u662f i \u7684\u90fd +1\uff08\u5373 i \u7684\u5b50\u6811\u91cc\u3002\uff09\n\t\tadd(1,1,n+1,dfn[i-k],dfn[i-k],-INF); // \u5220\u53bb\u533a\u95f4\u6700\u5de6\u8fb9\u7684\u70b9\uff08\u8d4b\u6781\u5c0f\u503c\u76f8\u5f53\u4e8e\u662f\u4e0d\u53ef\u80fd\u53d6\u5230\uff09\n\t\tprintf(\" %d\",query(1,1,n+1,1,n+1)); // dfn \u8981\u4ece 1 \u5230 n+1\uff0c\u56e0\u4e3a\u4e00\u5171\u5176\u5b9e\u662f n+1 \u4e2a\u70b9\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1648630718,
        "uid": 195198,
        "name": "E1_de5truct0r",
        "ccfLevel": 7,
        "title": "CF1132G \u9898\u89e3"
    },
    {
        "content": "[\u53bb\u535a\u5ba2\u56ed\u98df\u7528\u66f4\u4f73](https://www.cnblogs.com/AThousandMoons/p/10624072.html)\n\n\u6211\u4eec\u6ce8\u610f\u5230\u6bcf\u4e2a\u6570\u7684\u540e\u7ee7\u662f\u552f\u4e00\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u5728\u6570\u5217\u540e\u9762\u52a0\u4e0a\u4e00\u4e2a$n+1$\uff0c\u7136\u540e\u5b83\u5c31\u662f\u4e00\u4e2a\u6811\u7ed3\u6784\u3002\n\n\u7136\u540e\u76f4\u63a5\u7528\u4e00\u4e2a\u5355\u8c03\u6808\u5c31\u53ef\u4ee5\u5efa\u51fa\u6765\u8fd9\u68f5\u6811\u4e86\u3002\n\n\u90a3\u4e48\u8fd9\u4e2a\u6700\u957f\u8d2a\u5fc3\u4e25\u683c\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u5c31\u662f\u8fd9\u4e2a\u6811\u4e0a\u7684\u6700\u957f\u94fe\uff08\u53ea\u80fd\u4ece\u513f\u5b50\u5230\u7236\u4eb2\uff09\n\n\u5982\u679c\u5728\u8fd9\u4e2a\u5b50\u533a\u95f4\u5185\u589e\u52a0\u4e00\u4e2a$a[x]$\uff0c\u90a3\u5c31\u662f\u4ee5$x$\u8fd9\u4e2a\u70b9\u7684\u5b50\u6811\u5185\u7684\u70b9\u4e3a\u8d77\u70b9\u7684\u6700\u957f\u8d2a\u5fc3\u4e25\u683c\u4e0a\u5347\u5b50\u5e8f\u5217\u90fd\u52a0\u4e0a1\uff0c\u5220\u9664\u5c31\u662f\u51cf\u53bb1\u3002\n\n\u5c31\u7528\u4e00\u4e2a\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u52a0\uff0c\u533a\u95f4$\\max$\u5c31\u53ef\u4ee5\u4e86\u3002\n```cpp\n#include<bits/stdc++.h>\n#define Rint register int\nusing namespace std;\nconst int N = 1000003;\nint n, k, p[N], stk[N], top, head[N], to[N], nxt[N], dfn[N], siz[N], tim;\ninline void add(int a, int b){\n    static int cnt = 0;\n    to[++ cnt] = b; nxt[cnt] = head[a]; head[a] = cnt;\n}\ninline void dfs(int x){\n    dfn[x] = ++ tim; siz[x] = 1;\n    for(Rint i = head[x];i;i = nxt[i]) dfs(to[i]), siz[x] += siz[to[i]];\n}\nint seg[N << 2], lazy[N << 2];\ninline void pushdown(int x){\n    if(lazy[x]){\n        seg[x << 1] += lazy[x];\n        seg[x << 1 | 1] += lazy[x];\n        lazy[x << 1] += lazy[x];\n        lazy[x << 1 | 1] += lazy[x];\n        lazy[x] = 0;\n    }\n}\ninline void pushup(int x){seg[x] = max(seg[x << 1], seg[x << 1 | 1]);}\ninline void change(int x, int L, int R, int l, int r, int v){\n    if(l <= L && R <= r){\n        seg[x] += v; lazy[x] += v;\n        return;\n    }\n    int mid = L + R >> 1;\n    pushdown(x);\n    if(l <= mid) change(x << 1, L, mid, l, r, v);\n    if(mid < r) change(x << 1 | 1, mid + 1, R, l, r, v);\n    pushup(x);\n}\nint main(){\n    scanf(\"%d%d\", &n, &k);\n    for(Rint i = 1;i <= n;i ++) scanf(\"%d\", p + i);\n    for(Rint i = 1;i <= n;i ++){\n        while(top && p[stk[top]] < p[i]){\n            add(i, stk[top]); -- top;\n        }\n        stk[++ top] = i;\n    }\n    while(top) add(n + 1, stk[top]), -- top;\n    dfs(n + 1);\n    for(Rint i = 1;i <= k;i ++) change(1, 1, n + 1, dfn[i], dfn[i] + siz[i] - 1, 1);\n    printf(\"%d\", seg[1]);\n    for(Rint i = k + 1;i <= n;i ++){\n        change(1, 1, n + 1, dfn[i], dfn[i] + siz[i] - 1, 1);\n        change(1, 1, n + 1, dfn[i - k], dfn[i - k] + siz[i - k] - 1, -1);\n        printf(\" %d\", seg[1]);\n    }\n}\n```",
        "postTime": 1553866756,
        "uid": 68148,
        "name": "watermoon",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1132G \u3010Greedy Subsequences\u3011"
    },
    {
        "content": "\u7b80\u5355\u9898\u3002\n\n$i$ \u5411 $i$ \u540e**\u7b2c\u4e00\u4e2a** $j$\uff0c$a_j$ \u6bd4 $a_i$ \u5927\u7684\u70b9\u8fde\u8fb9\uff0c\u4e0d\u96be\u53d1\u73b0\u6700\u540e\u5f62\u6210\u4e86\u4e00\u68f5\u68ee\u6797\uff0c\u5e76\u4e14\u4e00\u4e2a\u70b9\u7684\u7236\u4eb2 $\\text{fa}_i>i$\u3002\n\n\u9898\u76ee\u53d8\u6210\u4e86\u53d6 $[l,r]$ \u4e2d\u7684\u70b9\u4e3a\u8d77\u70b9\uff0c\u5411\u7956\u5148\u65b9\u5411\u8d70\u53bb\u5e76\u4e14\u7ec8\u70b9\u7f16\u53f7 $\\le r$ \u7684\u6700\u957f\u94fe\u957f\u5ea6\u3002\n\n\u8003\u8651\u79bb\u7ebf\uff0c\u7ef4\u62a4\u4ece\u6bcf\u4e2a\u70b9\u5f00\u59cb\u7684\u6700\u957f\u94fe\u957f\u5ea6 $f_i$\uff0c\u7b54\u6848\u5373\u5168\u5c40\u67e5\u8be2\u6700\u5927\u503c\u3002\n\n\u5982\u679c $i<l$\uff0c\u76f8\u5f53\u4e8e\u5220\u53bb $i$ \u70b9\uff0c$f_i$ \u53ef\u4ee5\u76f4\u63a5\u8d4b\u4e3a `-inf`\uff0c\u7531\u4e8e\u8be2\u95ee\u5de6\u7aef\u70b9\u9012\u589e\uff0c\u66b4\u529b\u4fee\u6539\u5373\u53ef\u3002\n\n\u8003\u8651\u52a0\u5165\u4e00\u4e2a\u53f3\u7aef\u70b9 $r$ \u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u5bf9\u4e8e\u6240\u6709 $r$ \u5b50\u6811\u5185\u5e76\u4e14\u672a\u88ab\u5220\u53bb\u7684\u70b9 $i$\uff0c$f_i\\gets f_i+1$\u3002\n\n\u7ef4\u62a4\u5b50\u6811\u52a0\uff0c\u5355\u70b9\u4fee\u6539\uff0c\u5168\u5c40\u67e5\u8be2\u6700\u5927\u503c\u5373\u53ef\uff0c$O(n\\log n)$\u3002\n\n[\u8bc4\u6d4b\u8bb0\u5f55\u3002](https://codeforces.com/contest/1132/submission/192228376)",
        "postTime": 1675573134,
        "uid": 306573,
        "name": "Ender32k",
        "ccfLevel": 0,
        "title": "CF1132G Greedy Subsequences"
    },
    {
        "content": "### Part0.\u9898\u5916\u8bdd\n\n\u8fd9\u7bc7\u9898\u89e3\u6211\u6ca1\u6709\u4ec0\u4e48\u9898\u5916\u8bdd\u6b38...\n\n\u90a3\u5c31\u201c\u7460\u8863\u8d5b\u9ad8\uff01\u201d\u2467\n\n------------\n\n### Part1.\u601d\u8def\n\n\u6240\u4ee5\u8bf4\u521a\u5f00\u59cb\u505a\u7740\u9898\u7684\u65f6\u5019\uff0c\u6211\u540c\u5b66\u770b\u4e86\u4e0bp_b_p_b\u795e\u4f6c\u7684\u9898\u89e3\uff08Orz p_b_p_b)\uff0c\u8bf4\u662f\u7b1b\u5361\u5c14\u6811\u3002\n\n\u7136\u540e\u6211\u5c31\u4e00\u76f4\u5f80\u7b1b\u5361\u5c14\u6811\u90a3\u4e2a\u65b9\u5411\u60f3...\n\n\u641e\u4e86\u534a\u5929\uff0c\u8001\u5e08\u90fd\u8bb2\u9898\u4e86\uff0c\u6211\u8fd8\u6ca1\u505a\u51fa\u6765\u3002\n\n\u540e\u6765\u6211\u624d\u77e5\u9053\u4e3a\u4ec0\u4e48p_b_p_b\u628a\u5b83\u53eb\u201c\u7b1b\u5361\u5c14\u6811\u201d\n\n\u53ea\u4e0d\u8fc7\u662f\u5efa\u4e2a\u6811\u51fa\u6765\uff0c\u7528\u7b1b\u5361\u5c14\u6811\u7684\u6784\u9020\u65b9\u6cd5\u7f62\u4e86...\n\n\u53ef\u4ee5\u4e00\u773c\u770b\u89c1\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5e8f\u5217\u4e0a\u7684\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5b83\u4e0b\u4e00\u4e2a\u6ee1\u8db3\u201cGreedy Subsequences\u201d\u7684\u70b9\u662f\u56fa\u5b9a\u7684\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f9d\u9760\u8fd9\u4e2a\u4e1c\u897f\u5efa\u4e00\u68f5\u6811\u3002\n\n\u4ec0\u4e48\u610f\u601d\uff1f\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a$i$\uff0c\u6211\u4eec\u627e\u5230\u6700\u5c0f\u7684$j$\u6ee1\u8db3$(i<j , A[i] > A[j])$\uff0c\u7136\u540e\u628a$i$\u7684\u7238\u7238\u8bbe\u7f6e\u6210$j$\n\n\u7136\u540e\u8fd9\u4f1a\u6709\u4e2a\u68ee\u6797\u3002\n\n\u4e8e\u662f\u5728\u5e8f\u5217\u6700\u540e\u9762\u52a0\u4e0a\u4e00\u4e2a$\\rm inf$ \uff0c\u5c31\u4f1a\u6709\u68f5\u6811\n\n\u5230\u8fd9\u91cc\u719f\u7ec3\u7684\u540c\u5b66\u5df2\u7ecf\u719f\u7ec3\u5730\u4e0a\u4e86\u4e00\u4e2a\u6808\u5efa\u51fa\u4e86\u8fd9\u4e2a\u6811\uff08\u548c\u7b1b\u5361\u5c14\u5dee\u4e0d\u591a\uff09\n\n\u7136\u540e\u6211\u4eec\u770b\u770b\uff0c\u5e8f\u5217\u4e0a\u4e00\u4e2aGreedy Subsequences\u4e00\u5b9a\u662f\u4e0a\u9762\u7684\u4e00\u6bb5\u8fde\u7eed\u8def\u5f84\n\n\u8bb0$Ans[i]$\u4ee3\u8868\u5f53$i$\u4f5c\u4e3a\u8d77\u70b9\u65f6\uff0cGreedy Subsequences\u7684\u957f\u5ea6\n\n\u53d1\u73b0\u6bcf\u4e00\u4e2a\u70b9\u88ab\u52a0\u5165\u5230\u8be2\u95ee\u533a\u95f4\u7684\u65f6\u5019\uff0c\u5b83\u7684\u5b50\u6811\u6240\u6709\u7684$Ans$\u90fd\u4f1a+1\n\n\u7136\u540e\u4ece\u8be2\u95ee\u533a\u95f4\u5220\u9664\u7684\u65f6\u5019\uff0c\u5b83\u5b50\u6811$Ans$\u90fd\u4f1a-1\n\n\u6bcf\u4e00\u6b21\u8be2\u95ee\u5c31\u56de\u7b54\u6574\u68f5\u6811\u4e2d$Ans$\u6700\u5927\u503c\u5c31\u597d\u4e86\n\n\u6362\u53e5\u8bdd\u6765\u8bf4\uff0c\u4f60\u73b0\u5728\u7ef4\u62a4\u4e00\u68f5\u6811\uff0c\u652f\u6301\u4e24\u4e2a\u64cd\u4f5c\n\n1. u k\n\n\u4ee5u\u7684\u6839\u8282\u70b9\u7684\u5b50\u6811\u70b9\u6743\u90fd\u52a0\u4e0ak\n\n2.u\n\n\u8be2\u95ee\u4ee5u\u4e3a\u6839\u7684\u5b50\u6811\u70b9\u6743\u6700\u5927\u503c\u662f\u591a\u5c11\n\n\u7136\u540e\u8fd9\u91cc\u5341\u5206\u719f\u7ec3\u5730\u4e0a\u4e86\u4e00\u4e2adfs\u5e8f+\u7ebf\u6bb5\u6811\n\n------------\n\n### Part3.Code\n```cpp\n#include<bits/stdc++.h>\n#define lc (o << 1)\n#define rc (lc | 1)\n#define mid ((l + r) >> 1)\n#define mp(x , y) make_pair(x , y)\nusing namespace std;\n\ntypedef pair<int , int> pii;\n\nconst int MAXN = 1000000 + 5;\nconst int inf = 0x3f3f3f3f;\n\nint n , k , dfs_clock , A[MAXN] , dfn[MAXN] , sz[MAXN];\n\nvector <int> G[MAXN];\nstack <pii> s;\n\ninline void add(int u , int v) {G[u].push_back(v);}\n\nvoid dfs(int u) {\n\tsz[u] = 1 , dfn[u] = ++dfs_clock;\n\tfor(int i = 0 ; i < (int)G[u].size() ; ++i) dfs(G[u][i]) , sz[u] += sz[G[u][i]];\n}\n\nint maxv[MAXN << 2] , addv[MAXN << 2];\ninline void up(int o) {maxv[o] = max(maxv[lc] , maxv[rc]);}\ninline void Add(int o , int k) {maxv[o] += k , addv[o] += k;}\ninline void down(int o) {\n\tif(addv[o]) {\n\t\tAdd(lc , addv[o]); Add(rc , addv[o]);\n\t\taddv[o] = 0;\n\t}\n}\ninline void modify(int o , int l , int r , int ql , int qr , int k) {\n\tif(qr < l || ql > r) return ;\n\tif(ql <= l && r <= qr) return Add(o , k);\n\tdown(o);\n\tmodify(lc , l , mid , ql , qr , k); modify(rc , mid + 1 , r , ql , qr , k);\n\tup(o);\n}\n\nint main() {\n\tscanf(\"%d %d\" , &n , &k);\n\tfor(int i = 1 ; i <= n ; ++i) scanf(\"%d\" , A + i);\n\tA[++n] = inf;\n\tfor(int i = 1 ; i <= n ; ++i) {\n\t\twhile(!s.empty() && s.top().first < A[i]) add(i , s.top().second) , s.pop();\n\t\ts.push(mp(A[i] , i));\n\t}\n\tdfs(n);\n\tfor(int i = 1 ; i <= k ; ++i) modify(1 , 1 , n , dfn[i] , dfn[i] + sz[i] - 1 , 1);\n\tprintf(\"%d \" , maxv[1]);\n\tfor(int i = k + 1 ; i < n ; ++i) {\n\t\tmodify(1 , 1 , n , dfn[i] , dfn[i] + sz[i] - 1 , 1); \n\t\tmodify(1 , 1 , n , dfn[i - k] , dfn[i - k] + sz[i - k] - 1 , -1);\n\t\tprintf(\"%d \" , maxv[1]);\n\t}\n\treturn 0;\n} \n```\n",
        "postTime": 1552728035,
        "uid": 55537,
        "name": "Parabola",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1132G \u3010Greedy Subsequences\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1132G)\n\n\u5148\u8003\u8651\u6ca1\u6709 $k$ \u8fd9\u4e2a\u9650\u5236\uff0c\u76f4\u63a5\u6c42\u6574\u4e2a\u5e8f\u5217\u7684\u6700\u957f\u8d2a\u5fc3\u9012\u589e\u5b50\u5e8f\u5217\uff0c\u5982\u679c\u4ece\u53f3\u5f80\u5de6\u8f6c\u79fb\uff0c\u5bb9\u6613\u53d1\u73b0\uff0c\u6bcf\u4e2a\u70b9\u53ea\u80fd\u4ece\u5176\u53f3\u4fa7\u7b2c\u4e00\u4e2a\u6bd4\u4ed6\u5927\u7684\u70b9\u8f6c\u79fb\u3002\u6240\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u961f\u5217\u5373\u53ef\uff0c\u6bcf\u4e00\u65f6\u523b\u7684\u961f\u5217\u5927\u5c0f\u5373\u4e3a\u4ee5\u5f53\u524d\u70b9\u4e3a\u5f00\u5934\u7684\u5b50\u5e8f\u5217\u957f\u5ea6\uff08\u5148\u8bbe\u4e3a $f_x$\uff0c\u4e4b\u540e\u8981\u7528\u5230\uff09\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u6b63\u89e3\uff1a\u5173\u952e\u5728\u4e8e\u5220\u70b9\u64cd\u4f5c\u3002\u5bb9\u6613\u53d1\u73b0\uff0c\u5220\u9664\u4e00\u4e2a\u70b9\u4e4b\u540e\u6240\u5f71\u54cd\u5230\u7684\u533a\u95f4\u662f\u4e00\u6bb5\u8fde\u7eed\u533a\u95f4\uff0c\u8fd9\u6bb5\u533a\u95f4\u5185\u7684 $f_x$ \u90fd\u8981 $-1$\uff0c\u6240\u4ee5\u73b0\u5728\u9700\u8981\u627e\u5230\u8fd9\u6837\u7684\u4e00\u6bb5\u533a\u95f4\u3002\u8003\u8651\u4e00\u4e2a\u70b9\u5de6\u4fa7\u7684 $k-1$ \u4e2a\u70b9\uff0c\u5982\u679c\u8fd9\u4e9b\u70b9\u4e2d\u6709\u7684\u70b9\u70b9\u6743\u6bd4\u5b83\u5927\uff0c\u8bb0\u4e3a $end_x$\uff0c\u90a3\u4e48\u5220\u9664 $x$ \u6240\u5f71\u54cd\u7684\u533a\u95f4\u4e3a $[end_x+1,x]$\uff0c\u5982\u679c\u6ca1\u6709\u70b9\u6743\u6bd4\u5b83\u5927\u7684\uff0c\u5219\u8bb0 $end_x=x-k$\uff0c\u8fd9\u6837\u5220\u9664 $x$ \u6240\u5f71\u54cd\u7684\u533a\u95f4\u4e5f\u662f $[end_x+1,x]$\u3002\u800c\u4ee5\u4e0a\u8fd9\u4e24\u7c7b\u5206\u522b\u662f\u4ece\u961f\u5c3e\u5f39\u51fa\u548c\u4ece\u961f\u9876\u5f39\u51fa\uff0c\u6240\u4ee5\u5728\u5f39\u51fa\u7684\u65f6\u5019\u8bb0\u5f55\u5373\u53ef\uff0c\u628a $f_x$ \u7edf\u8ba1\u5728\u7ebf\u6bb5\u6811\u4e2d\uff0c\u6bcf\u6b21\u5220\u70b9\u7684\u65f6\u5019\u533a\u95f4\u4fee\u6539\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n// Problem: CF1132G Greedy Subsequences\n// Contest: Luogu\n// URL: https://www.luogu.com.cn/problem/CF1132G\n// Memory Limit: 250 MB\n// Time Limit: 2000 ms\n//\n// Powered by CP Editor (https://cpeditor.org)\n\n#include <bits/stdc++.h>\n#define int long long\n#define miny(x, y) x = min(x, y)\n#define maxy(x, y) x = max(x, y)\n#define lowbit(x) ((x) & (-(x)))\n#define fu(i, l, r) for (int i = (l); i <= (r); ++i)\n#define fd(i, r, l) for (int i = (r); i >= (l); --i)\n#define mem(x, y) memset(x, y, sizeof(x))\n#define file(x)                 \\\n  freopen(x \".in\", \"r\", stdin); \\\n  freopen(x \".out\", \"w\", stdout);\n#define mod 998244353\n#ifdef int\n#define inf 0x3f3f3f3f3f3f3f3f\n#else\n#define inf 0x3f3f3f3f\n#endif\n#define inv(x) qp(x, mod - 2)\nusing namespace std;\nnamespace Std {\ntemplate <typename tp>\nvoid read(tp &x) {\n  x = 0;\n  int y = 1;\n  char c = getchar();\n  while (c < '0' || c > '9') {\n    if (c == '-') y = -1;\n    c = getchar();\n  }\n  while (c >= '0' && c <= '9') {\n    x = (x << 1) + (x << 3) + (c & 15);\n    c = getchar();\n  }\n  x *= y;\n}\ntemplate <typename tp>\nvoid write(tp x) {\n  if (x < 0) {\n    putchar('-');\n    write(-x);\n    return;\n  }\n  if (x > 9) write(x / 10);\n  putchar((x % 10) | 48);\n}\nint qp(int x, int y) {\n  int cmp = 1;\n  while (y) {\n    if (y & 1) (cmp *= x) %= mod;\n    (x *= x) %= mod;\n    y >>= 1;\n  }\n  return cmp;\n}\nint n, k, ans[1000010], tot, a[1000010], id[1000010], q[1000010], tr[4000010],\n    tag[4000010], end[4000010];\ninline void pushdown(int x) {\n  tr[x << 1] += tag[x];\n  tr[x << 1 | 1] += tag[x];\n  tag[x << 1] += tag[x];\n  tag[x << 1 | 1] += tag[x];\n  tag[x] = 0;\n}\ninline void pushup(int x) { tr[x] = max(tr[x << 1], tr[x << 1 | 1]); }\nvoid change(int x, int l, int r, int L, int R, int num) {\n  if (L <= l && r <= R) {\n    tr[x] += num;\n    tag[x] += num;\n    return;\n  }\n  pushdown(x);\n  int mid = (l + r) >> 1;\n  if (L <= mid) change(x << 1, l, mid, L, R, num);\n  if (R > mid) change(x << 1 | 1, mid + 1, r, L, R, num);\n  pushup(x);\n}\nvoid modify(int x, int l, int r, int pos, int num) {\n  if (l == r) {\n    tr[x] = num;\n    return;\n  }\n  pushdown(x);\n  int mid = (l + r) >> 1;\n  if (pos <= mid)\n    modify(x << 1, l, mid, pos, num);\n  else\n    modify(x << 1 | 1, mid + 1, r, pos, num);\n  pushup(x);\n}\nint query(int x, int l, int r, int L, int R) {\n  if (L <= l && r <= R) return tr[x];\n  if (L > r || l > R) return 0;\n  pushdown(x);\n  int mid = (l + r) >> 1;\n  return max(query(x << 1, l, mid, L, R), query(x << 1 | 1, mid + 1, r, L, R));\n}\nbool cmp(int x, int y) { return a[x] < a[y]; }\nvoid main() {\n  read(n);\n  read(k);\n  fu(i, 1, n) read(a[i]), id[i] = i;\n  int head = 1, tail = 0;\n  fd(i, n, n - k + 2) {\n    while (head <= tail && a[i] >= a[q[tail]]) end[q[tail--]] = i;\n    q[++tail] = i;\n    modify(1, 1, n, i, tail - head + 1);\n  }\n  fd(i, n - k + 1, 1) {\n    while (head <= tail && a[i] >= a[q[tail]]) end[q[tail--]] = i;\n    q[++tail] = i;\n    modify(1, 1, n, i, tail - head + 1);\n    if (i + k <= n && q[head] - i == k) end[q[head++]] = i - 1;\n    if (i + k <= n) change(1, 1, n, end[i + k] + 1, i + k, -1);\n    ans[i] = query(1, 1, n, i, i + k - 1);\n  }\n  fu(i, 1, n - k + 1) printf(\"%lld \", ans[i]);\n  puts(\"\");\n}\n}  // namespace Std\n#undef int\nint main() {\n  Std::main();\n  return 0;\n}\n```\n",
        "postTime": 1656309085,
        "uid": 576737,
        "name": "Wilson_Inversion",
        "ccfLevel": 7,
        "title": "CF1132G Greedy Subsequences \u9898\u89e3"
    }
]