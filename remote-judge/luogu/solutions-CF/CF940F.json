[
    {
        "content": "\u5176\u5b9e\u8fd9\u9898\u6839\u672c\u4e0d\u7528\u628a\u6570\u5b57\u4e5f\u5206\u5757..\n\n\u5982\u679c\u4e0d\u4f1a\u5e26\u4fee\u83ab\u961f\u7684\u8bdd\u53ef\u4ee5\u5230\u7f51\u4e0a\u627e\u6559\u7a0b\uff0c\u4e5f\u53ef\u4ee5\u770b[\u6211\u5199\u7684\u6559\u7a0b](https://www.cnblogs.com/ouuan/p/MoDuiTutorial.html)\n\n\u9996\u5148\u5c06\u6570\u5217\u4e2d\u539f\u672c\u7684\u6570\u5b57\u4ee5\u53ca\u6240\u6709\u4fee\u6539\u4e2d\u7684\u6570\u5b57\u5168\u90e8\u79bb\u6563\u5316\uff0c\u7136\u540e\u5c31\u662f\u666e\u901a\u7684\u5e26\u4fee\u83ab\u961f\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u66f4\u65b0\u7b54\u6848\u65f6\u4e0d\u662f\u8bb0\u5f55\u67d0\u4e2a\u6570\u5b57\u51fa\u73b0\u4e86\u51e0\u6b21\uff0c\u800c\u662f\u5728\u66f4\u65b0\u6570\u5b57\u51fa\u73b0\u7684\u6b21\u6570\u7684\u540c\u65f6\u66f4\u65b0\u201c\u6570\u5b57\u51fa\u73b0\u7684\u6b21\u6570\u201d\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5373\uff1a\n\n```\nvoid add(int x)\n{\n\t--tot[cnt[x]];\n\t++tot[++cnt[x]];\n}\n\nvoid del(int x)\n{\n\t--tot[cnt[x]];\n\t++tot[--cnt[x]];\n}\n```\n\n\u7136\u540e\u662f\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u66b4\u529b\u6c42mex\uff1a\n\n\u8003\u8651\u7b54\u6848\u4e3a $x$\uff0c\u90a3\u4e48\u5b58\u5728\u51fa\u73b0\u4e86 $1$ \u6b21\u7684\u6570\u3001\u51fa\u73b0\u4e86 $2$ \u6b21\u7684\u6570\u2026\u2026\u51fa\u73b0\u4e86 $x-1$ \u6b21\u7684\u6570\u3002\u6240\u4ee5\uff0c$\\sum\\limits_{i=1}^{x-1}i<=n$\uff0c\u5c31\u662f\u8bf4\u7b54\u6848\u662f $O(\\sqrt{n})$ \u7ea7\u522b\u7684\uff0c\u66b4\u529b\u6c42\u89e3\u7684\u590d\u6742\u5ea6\u4e3a $O(n\\sqrt{n})$\uff0c\u800c\u5e26\u4fee\u83ab\u961f\u7684\u590d\u6742\u5ea6\u4e3a $O(n^{\\frac{5}{3}})$\uff0c\u4e5f\u5c31\u662f\u8bf4\u66b4\u529b\u6c42mex\u5b8c\u5168\u4e0d\u5f71\u54cd\u603b\u590d\u6742\u5ea6\u3002\n\n\u6240\u4ee5\u4e00\u884c\u6c42mex\u5c31\u597d\u4e86\uff1a\n\n```\nfor (ans[q[i].id]=1;tot[ans[q[i].id]]>0;++ans[q[i].id]);\n```\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n\nusing namespace std;\n\ninline int read()\n{\n    char c;int out=0;\n    for (c=getchar();c<'0'||c>'9';c=getchar());\n    for (;c>='0'&&c<='9';c=getchar()){out=(out<<3)+(out<<1)+c-'0';}\n    return out;\n}\nvoid write(int x)\n{\n    if (x>9){write(x/10);}\n\tputchar(x%10+'0');\n}\n\nconst int B=2154;\n\nstruct Query\n{\n\tint l,r,t,id;\n\tbool operator<(Query& y)\n\t{\n\t\treturn l/B==y.l/B?(r/B==y.r/B?t<y.t:r<y.r):l<y.l;\n\t}\n} q[100010];\n\nstruct Change\n{\n\tint p,x;\n} c[100010];\n\nvoid add(int x);\nvoid del(int x);\nvoid modify(int ti,int qu);\n\nint n,m,a[100010],b[200010],cnt[200010],tot[100010],qcnt,ccnt,qaq,now,ans[100010];\n\nint main()\n{\n\tint i,j,l=1,r=0,type;\n\t\n\tn=read();\n\tm=read();\n\t\n\tfor (i=1;i<=n;++i)\n\t{\n\t\tb[qaq++]=a[i]=read();\n\t}\n\t\n\tfor (i=0;i<m;++i)\n\t{\n\t\ttype=read();\n\t\tif (type==1)\n\t\t{\n\t\t\tq[++qcnt].l=read();\n\t\t\tq[qcnt].r=read();\n\t\t\tq[qcnt].t=ccnt;\n\t\t\tq[qcnt].id=qcnt;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc[++ccnt].p=read();\n\t\t\tb[qaq++]=c[ccnt].x=read();\n\t\t}\n\t}\n\t\n\tsort(b,b+qaq);\n\tqaq=unique(b,b+qaq)-b;\n\t\n\tfor (i=1;i<=n;++i)\n\t{\n\t\ta[i]=lower_bound(b,b+qaq,a[i])-b;\n\t}\n\t\n\tfor (i=1;i<=ccnt;++i)\n\t{\n\t\tc[i].x=lower_bound(b,b+qaq,c[i].x)-b;\n\t}\n\t\n\tsort(q+1,q+qcnt+1);\n\t\n\tfor (i=1;i<=qcnt;++i)\n\t{\n\t\twhile (l>q[i].l)\n\t\t{\n\t\t\tadd(a[--l]);\n\t\t}\n\t\twhile (r<q[i].r)\n\t\t{\n\t\t\tadd(a[++r]);\n\t\t}\n\t\twhile (l<q[i].l)\n\t\t{\n\t\t\tdel(a[l++]);\n\t\t}\n\t\twhile (r>q[i].r)\n\t\t{\n\t\t\tdel(a[r--]);\n\t\t}\n\t\twhile (now<q[i].t)\n\t\t{\n\t\t\tmodify(++now,i);\n\t\t}\n\t\twhile (now>q[i].t)\n\t\t{\n\t\t\tmodify(now--,i);\n\t\t}\n\t\tfor (ans[q[i].id]=1;tot[ans[q[i].id]]>0;++ans[q[i].id]);\n\t}\n\t\n\tfor (i=1;i<=qcnt;++i)\n\t{\n\t\twrite(ans[i]);\n\t\tputchar('\\n');\n\t}\n\t\n\treturn 0;\n}\n\nvoid add(int x)\n{\n\t--tot[cnt[x]];\n\t++tot[++cnt[x]];\n}\n\nvoid del(int x)\n{\n\t--tot[cnt[x]];\n\t++tot[--cnt[x]];\n}\n\nvoid modify(int ti,int qu)\n{\n\tif (c[ti].p>=q[qu].l&&c[ti].p<=q[qu].r)\n\t{\n\t\tdel(a[c[ti].p]);\n\t\tadd(c[ti].x);\n\t}\n\tswap(c[ti].x,a[c[ti].p]);\n}\n```",
        "postTime": 1538301751,
        "uid": 49742,
        "name": "ouuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF940F \u3010Machine Learning\u3011"
    },
    {
        "content": "\u8fd9\u9898\u592a**\u4e86\u3002\u3002\u7406\u89e3\u9898\u610f\u90fd\u7528\u4e86\u534a\u5929\u3002  \n\n\u6b64\u5904\u8865\u4e00\u4e0b\u6837\u4f8b\u89e3\u91ca\uff1a  \n\u5bf9\u4e8e\u7b2c\u4e8c\u6b21\u67e5\u8be2\uff0c\u533a\u95f4$[2,8]$\u4e2d\u51fa\u73b0\u4e86\uff1a  \n$4$\u4e2a2\uff0c$2$\u4e2a1\uff0c$1$\u4e2a3\u3002  \n$1,2,4$\u90fd\u51fa\u73b0\u4e86\uff0c\u6700\u5c0f\u6ca1\u6709\u51fa\u73b0\u7684\u6b63\u6574\u6570\u662f$3$\uff0c\u6240\u4ee5\u7b2c\u4e8c\u4e2a\u8be2\u95ee\u8f93\u51fa`3`\u3002  \n****\n\u4e0b\u9762\u662f\u9898\u89e3\uff1a  \n\n\u8003\u8651\u83ab\u961f\uff0c\u6211\u4eec\u9700\u8981\u5199\u4e00\u4e2aupdate\u51fd\u6570\uff0c\u7528\u6765\u7ef4\u62a4\u533a\u95f4\u4e2d\u589e\u52a0/\u51cf\u5c11\u4e00\u4e2a\u6570\u5e26\u6765\u7684\u5f71\u54cd\u3002  \n\u9996\u5148\u5f00\u4e00\u4e2a\u6570\u7ec4$\\text{cnt}_1$\uff0c\u5176\u4e2d$\\text{cnt}_1[i]$\u8868\u793a\u539f\u6570\u7ec4\u533a\u95f4\u4e2d\u6570\u5b57$i$\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u5728update\u7684\u65f6\u5019\u5bf9\u5e94\u9879$+1/-1$\u5373\u53ef\u3002  \n\u7136\u540e\u518d\u5f00\u4e00\u4e2a\u6570\u7ec4$\\text{cnt}_2$\uff0c$\\text{cnt}_2[i]$\u8868\u793a$\\text{cnt}_1$\u4e2d$i$\u7684\u51fa\u73b0\u6b21\u6570\u3002  \n\u73b0\u5728\u8981\u505a\u7684\uff0c\u5c31\u662f\u5728$\\text{cnt2}$\u4e2d\u6c42$\\text{mex}$\u4e86\u3002  \n\n\u5728$\\text{cnt}_1$\u4e2d\u5220\u9664\u4e86\u4e00\u4e2a\u6570$x$\u65f6(\u4e5f\u5c31\u662f$\\text{cnt}_2[x]$\u51cf\u5c11\u4e86$1$)\uff0c\u82e5$\\text{cnt}_2[x]$\u4e3a$0$\uff0c\u90a3\u8bf4\u660e$x$\u5728$\\text{cnt}_1$\u4e2d\u6ca1\u6709\u51fa\u73b0\u8fc7\u3002\u8fd9\u65f6\u9700\u8981\u628a\u7b54\u6848\u548c$x$\u53d6$\\min$\u3002  \n\u7c7b\u4f3c\u7684\uff0c\u82e5$\\text{cnt}_1$\u4e2d\u591a\u4e86\u4e00\u4e2a\u6570$x$\uff0c\u5c31\u66b4\u529b\u5730\u627e\u6bd4$x$\u5927\u4e14\u6700\u5c0f\u7684\u3001\u6ca1\u6709\u5728$\\text{cnt}_1$\u4e2d\u51fa\u73b0\u8fc7\u7684\u6570\u3002  \n\n\u5269\u4e0b\u7684\uff0c\u5c31\u662f\u5199\u5e26\u4fee\u83ab\u961f\u7684\u677f\u5b50\u4e0a\u53bb\u3002\u6ce8\u610f$a_i$\u7684\u8303\u56f4$[1,10^9]$\uff0c\u9700\u8981\u79bb\u6563\u5316\u4e00\u4e0b\u3002  \n\u6211\u5728\u8fd9\u91cc\u539f\u672c\u7528\u7684\u662f`unordered_map`\uff0c\u7136\u540e\u5c31\u5b8c\u7f8eTLE\u4e86\u3002\u3002\u8fd9\u91cc\u4e00\u5b9a\u8981\u6ce8\u610f\u3002  \n\n\u4f60\u4e5f\u8bb8\u4f1a\u8bf4\uff1a\u201c\u6bcf\u6b21\u66b4\u529b\u5730\u627e$\\text{mex}$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u663e\u7136\u4e3a$\\text{O}(n)$\u554a\uff1f\u201d   \n\u8fd9\u91cc\u53ef\u4ee5(\u4f46\u6211\u4e0d\u4f1a)\u8bc1\u660e\uff0c\u6bcf\u6b21update\u64cd\u4f5c\u662f\u5747\u644a$\\Theta(1)$\u7684\uff0c\u6bcf\u6b21\u8be2\u95ee\u5c31\u662f\u5747\u644a$\\Theta(n^\\frac23)$\u3002  \n\u8fd9\u4e2a\u597d\u50cflxl\u8bf4\u8fc7\uff1f\u5177\u4f53\u6211\u4e5f\u627e\u4e0d\u7740\u4e86QAQ  \n\n\u53c2\u8003\u4ee3\u7801\uff1a  \n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#define N 400003\n#define reg register\nusing namespace std;\n\nstruct query{\n    int l,r,t,id;\n    query(int l=0,int r=0,int t=0,int id=0):l(l),r(r),t(t),id(id){}\n};\n\nstruct change{\n    int pos,last,next;\n    change(int pos=0,int last=0,int next=0):pos(pos),last(last),next(next){}\n};\n\nquery q[N];\nchange c[N];\nint a[N],be[N],dt[N],ans[N],cnt[N],lsh[N],mp[N];\nint n,m,unit,qc,res,l,r;\n\ninline void read(int &x);\nvoid print(int x);\ninline bool cmp(query x,query y); //\u83ab\u961f\u7684\u8be2\u95ee\u6392\u5e8f\ninline void modify(int i,int t); //\u4fee\u6539\ninline void update(int i,int t); //\u66f4\u65b0\nvoid discretization(); //\u79bb\u6563\u5316\n\nint main(){\n    int op,t = 0;\n    read(n),read(m);\n    unit = pow(n,0.666666666);\n    for(reg int i=1;i<=n;++i){\n        read(a[i]);\n        lsh[i] = dt[i] = a[i];\n        be[i] = i/unit+1;\n    }\n    for(reg int i=1;i<=m;++i){\n        read(op),read(l),read(r);\n        if(op==1){\n            ++qc;\n            q[qc] = query(l,r,t,qc);\n        }else{\n            c[++t] = change(l,dt[l],r);\n            lsh[n+t] = dt[l] = r;\n        }\n    }\n    discretization();\n    sort(q+1,q+1+qc,cmp);\n    l = 1;\n    r = t = 0;\n    cnt[0] = n<<2; //\u4e00\u5f00\u59cb\u5168\u90e8\u662f0,\u6240\u4ee5\u8981\u628acnt[0]\u8bbe\u7684\u5f88\u5927\n    for(reg int i=1;i<=qc;++i){\n        while(t<q[i].t) modify(c[t+1].pos,c[t+1].next),++t;\n        while(t>q[i].t) modify(c[t].pos,c[t].last),--t;\n        while(l<q[i].l) update(a[l],-1),++l;\n        while(l>q[i].l) update(a[l-1],1),--l;\n        while(r<q[i].r) update(a[r+1],1),++r;\n        while(r>q[i].r) update(a[r],-1),--r;\n        ans[q[i].id] = res;\n    }\n    for(reg int i=1;i<=qc;++i){\n        print(ans[i]);\n        putchar('\\n');\n    }\n    return 0;\n}\n\nvoid discretization(){\n    sort(lsh+1,lsh+1+n+t);\n    int len = unique(lsh+1,lsh+n+t+1)-lsh-1;\n    for(reg int i=1;i<=n;++i)\n        a[i] = lower_bound(lsh+1,lsh+len+1,a[i])-lsh;\n    for(reg int i=1;i<=t;++i){  \n        c[i].last = lower_bound(lsh+1,lsh+len+1,c[i].last)-lsh;\n        c[i].next = lower_bound(lsh+1,lsh+len+1,c[i].next)-lsh;\n    }\n}\n\ninline void update(int i,int t){\n    int x = mp[i];\n    --cnt[x];\n    if(cnt[x]==0) res = min(res,x);\n    mp[i] += t;\n    if(x+t>=0) ++cnt[x+t];\n    x = res;\n    while(cnt[x]>0) ++x; //\u8fd9\u91cc\u662f\u5747\u644aO(1)\u7684\n    res = x;\n}\n\ninline void modify(int i,int t){\n    if(l<=i&&i<=r){\n        update(a[i],-1);\n        update(t,1);\n    }\n    a[i] = t;\n}\n\ninline bool cmp(query x,query y){\n    if(be[x.l]==be[y.l]){\n        if(be[x.r]==be[y.r]) return x.t < y.t;\n        return x.r < y.r;\n    }\n    return x.l < y.l;\n}\n\ninline void read(int &x){\n    x = 0;\n    char c = getchar();\n    while(c<'0'||c>'9') c = getchar();\n    while(c>='0'&&c<='9'){\n        x = (x<<3)+(x<<1)+(c^48);\n        c = getchar();\n    }\n}\n\nvoid print(int x){\n    if(x>9) print(x/10);\n    putchar(x%10+'0');\n}\n```",
        "postTime": 1551949011,
        "uid": 115864,
        "name": "NaCly_Fish",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF940F \u3010Machine Learning\u3011"
    },
    {
        "content": "upd on 2021.4.1 \u4fee\u4e86\u4e2a\u4ee3\u7801\u53ef\u80fdre\u7684\u9505\n\n### \u5e26\u4fee\u83ab\u961f\n\n\u6c42 $\\text{mex}$ \u662f\u83ab\u961f\u7684\u7ecf\u5178\u64cd\u4f5c\n\n\u4e0d\u5e26\u4fee\u6539\u7684\u6c42\u533a\u95f4\u5185\u6570\u503c\u7684 $\\text{mex}$ \u7528\u56de\u6eda\u83ab\u961f\u53ef\u4ee5\u89e3\u51b3\n\n\u8fd9\u91cc\u662f\u51fa\u73b0\u6b21\u6570\u7684 $\\text{mex}$\n\n\u6211\u4eec\u60f3\u8fd9\u6837\u4e00\u4e2a\u5c0f\u7ed3\u8bba\n\n\u6211\u4eec\u6709 $n$ \u4e2a\u6570\u5b57\uff0c\u5047\u5982\u7528\u8fd9\u4e9b\u6570\u5b57\u80fd\u6784\u6210\u7684\u6700\u5927\u7684\u51fa\u73b0\u6b21\u6570 $\\text{mex}$ \u662f\u591a\u5c11\n\n\u5047\u5982\u6211\u4eec\u7684 $\\text{mex}$ \u8fbe\u5230 $k$ \uff0c\u90a3\u4e48\u5e94\u8be5\u6709$\\frac{k*(k+1)}2$\u8fd9\u4e48\u591a\u4e2a\u6570\u5b57\n\n\u90a3\u4e48\u8fd9\u4e2a $\\text{mex}$ \u5e94\u8be5\u662f$\\sqrt n$\u7ea7\u522b\u7684\n\n\u90a3\u6211\u4eec\u5c31\u4e0d\u8981\u62c5\u5fc3\u4e86\n\n\u76f4\u63a5\u8dd1\u5e26\u4fee\u83ab\u961f\n\n\u7ef4\u62a4\u6bcf\u4e2a\u6570\u7684\u51fa\u73b0\u6b21\u6570\n\n\u518d\u62ff\u4e00\u4e2a\u6876\u8bb0\u5f55\u6bcf\u4e2a\u51fa\u73b0\u6b21\u6570\u6709\u591a\u5c11\u4e2a\u503c\n\n\u7b49\u8dd1\u5b8c\u8fd9\u4e2a\u533a\u95f4\uff0c\u6211\u4eec\u4ece1\u5f00\u59cb\u5f80\u540e\u626b\n\n\u7531\u4e8e\u6700 $\\text{mex}$ \u6700\u5927\u5c31$\\sqrt n$\n\n\u6545\u590d\u6742\u5ea6\u53d6\u5e26\u4fee\u83ab\u961f\u7684$O(n^\\frac 5 3)$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=100005,maxm=100005,maxw=200005;\nint base;\nstruct query{\n\tint id;\n\tint x,y,t;\n\tbool operator <(query i)const{\n\t\treturn x/base==i.x/base?(y/base==i.y/base?t<i.t:y<i.y):x<i.x;\n\t}\n}q[maxm];\nstruct node{\n\tint id,s;\n\tbool operator <(node i)const{\n\t\treturn s<i.s;\n\t}\n}b[maxn+maxm];\nint c[maxn];\nint a[maxm][2];\nint l,r,p;\nint ans=0;\nint ANS[maxm];\nint cnt[maxw];\nint st[maxn];\nbool vis[maxm];\ninline int read(){\n\tregister int x=0,y=1;\n\tregister char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')y=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9')x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\n\treturn x*y;\n}\ninline void write(register int x){\n\tif(!x)return ;\n\twrite(x/10);\n\tputchar(x%10+'0');\n\treturn ;\n}\ninline void ins(register int x){\n\tst[cnt[c[x]]]--;\n\tcnt[c[x]]++;\n\tst[cnt[c[x]]]++;\n\treturn ;\n}\ninline void del(register int x){\n\tst[cnt[c[x]]]--;\n\tcnt[c[x]]--;\n\tst[cnt[c[x]]]++;\n\treturn ;\n}\ninline void change(register int x){\n\tif(a[x][0]>=l&&a[x][0]<=r)del(a[x][0]);\n\tswap(c[a[x][0]],a[x][1]);\n\tif(a[x][0]>=l&&a[x][0]<=r)ins(a[x][0]);\n\treturn ;\n}\nint main(){\n\tregister int n,m;\n\tn=read();m=read();\n\tbase=pow(n,0.66666);\n\tfor(register int i=1;i<=n;i++){\n\t\tb[i].id=i;\n\t\tb[i].s=read();\n\t}\n\tregister int tot=0,tim=0;\n\tfor(register int i=1;i<=m;i++){\n\t\tregister int opt,x,y;\n\t\topt=read();x=read();y=read();\n\t\tif(opt==1){\n\t\t\ttot++;\n\t\t\tvis[i]=1;\n\t\t\tq[tot].id=i;\n\t\t\tq[tot].x=x;\n\t\t\tq[tot].y=y;\n\t\t\tq[tot].t=tim;\n\t\t}\n\t\telse{\n\t\t\ttim++;\n\t\t\ta[tim][0]=x;\n\t\t\tb[tim+n].id=tim+n;\n\t\t\tb[tim+n].s=y;\n\t\t}\n\t}\n\tsort(b+1,b+n+tim+1);\n\tint w=0;\n\tfor(int i=1;i<=n+tim;i++){\n\t\tif(b[i].s>b[i-1].s)w++;\n\t\tif(b[i].id<=n)c[b[i].id]=w;\n\t\telse a[b[i].id-n][1]=w;\n\t}\n\tsort(q+1,q+tot+1);\n\tl=1;r=0;p=0;\n\tfor(register int i=1;i<=tot;i++){\n\t\tint x=q[i].x,y=q[i].y,t=q[i].t;\n\t\twhile(l>x)ins(--l);\n\t\twhile(r<y)ins(++r);\n        while(l<x)del(l++);\n\t\twhile(r>y)del(r--);\n\t\twhile(p<t)change(++p);\n\t\twhile(p>t)change(p--);\n\t\tans=0;\n\t\twhile(st[ans+1])ans++;//\u66b4\u529b\u626b\n\t\tANS[q[i].id]=ans+1;\n\t}\n\tfor(register int i=1;i<=m;i++){\n\t\tif(!vis[i])continue;\n\t\twrite(ANS[i]);\n\t\tif(!ANS[i])putchar('0');\n\t\tputchar('\\n');\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1585756932,
        "uid": 98527,
        "name": "juju527",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF940F \u3010Machine Learning\u3011"
    },
    {
        "content": "## \u4e00\u9053\u5e26\u4fee\u83ab\u961f\n\n\u82e5\u4e0d\u4f1a\u5e26\u4fee\u83ab\u961f\uff0c\u53ef\u4ee5\u5148\u505a\u4e00\u4e0b[P1903 [\u56fd\u5bb6\u96c6\u8bad\u961f]\u6570\u989c\u8272 / \u7ef4\u62a4\u961f\u5217](https://www.luogu.com.cn/problem/P1903)\n\n\u7531\u4e8e\u9898\u4e2d\u8981\u6c42$mex$,\u800c$mex$\u6700\u5927\u4e3a$(-1+sqrt(1+8n))/2$\n\n\u7b80\u5355\u8bc1\u660e\uff1a\n\n\u82e5$mex$\u4e3a$x$,\u5219\u81f3\u5c11\u9700\u8981$1+2+3+...+x$\u4e2a\u5143\u7d20\uff0c\u5373$(1+x)*x/2$\u4e2a\n\n$(1+x)*x/2=n$,\u53c8\u56e0$x>0$\u89e3\u5f97$x=(-1+sqrt(1+8n))/2$\n\n\u6545\u6c42$mex$\u662f$O(sqrt(n))$,\u53ef\u4ee5\u66b4\u529b\n\n```\nint getans()\n{\n\tfor(int i=1;i<=n;i++)\n    \tif(!si[i])return i;\n}\n```\n\n\n\u5176\u4f59\u5c31\u6309\u5e26\u4fee\u83ab\u961f\u4e00\u6837\u505a\u5373\u53ef\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read()\n{\n\tchar ch=getchar();bool f=0;int x=0;\n\tfor(;!isdigit(ch);ch=getchar())if(ch=='-')f=1;\n\tfor(;isdigit(ch);ch=getchar())x=(x<<1)+(x<<3)+(ch^48);\n\tif(f==1)x=-x;return x;\n}\nconst int maxn=200005;\nstruct node\n{\n\tint l,r,id,pre;\n}b[maxn];\nint m,n,x,y,a[maxn],t,id[maxn],ans[maxn],sum=0,k,l,r,num=0,s[maxn],si[maxn],now,d[maxn];\nint opt,tot=0,c[maxn],c2[maxn],qnum=0,cnt=0;\nbool cmp(node a,node b)\n{\n\tif(id[a.l]!=id[b.l])return id[a.l]<id[b.l];\n\telse if(id[a.r]!=id[b.r])return id[a.r]<id[b.r];\n\treturn a.pre<b.pre;\n}\nint add(int x){si[s[x]]--,s[x]++,si[s[x]]++;}\nint cut(int x){si[s[x]]--,s[x]--,si[s[x]]++;}\nint change(int x,int l,int r)\n{\n\tif(c[x]>=l&&c[x]<=r)\n\t{\n\t\tsi[s[a[c[x]]]]--,s[a[c[x]]]--,si[s[a[c[x]]]]++;\n\t\tsi[s[c2[x]]]--,s[c2[x]]++,si[s[c2[x]]]++;\n\t}swap(c2[x],a[c[x]]);\n}\nint getans(){for(int i=1;i<=n;i++)if(!si[i])return i;}\nsigned main()\n{\n\tn=read();\n   t=pow(n,0.6666666);//\u611f\u89c9\u8fd9\u6837\u5feb\u4e00\u4e9b\n   m=read();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\ta[i]=d[++cnt]=read(),id[i]=(i-1)/t+1;\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\topt=read();\n\t\tif(opt==1)b[++qnum].l=read(),b[qnum].r=read(),b[qnum].id=qnum,b[qnum].pre=tot;\n\t\telse if(opt==2)c[++tot]=read(),c2[tot]=d[++cnt]=read();\n\t}\n\tsort(d+1,d+cnt+1);\n\tint un=unique(d+1,d+1+cnt)-d-1;\n\tfor(int i=1;i<=n;i++) a[i]=lower_bound(d+1,d+1+un,a[i])-d;\n\tfor(int i=1;i<=tot;i++) c2[i]=lower_bound(d+1,d+1+un,c2[i])-d;\n\tsort(b+1,b+qnum+1,cmp);l=b[1].l,r=b[1].r;now=0;\n\tfor(int i=b[1].l;i<=b[1].r;i++)add(a[i]);\n\twhile(now<b[1].pre)change(++now,b[1].l,b[1].r);ans[b[1].id]=getans();//cout<<b[1].id<<endl;\n\tfor(int i=2;i<=qnum;i++)\n\t{\n\t\twhile(l<b[i].l)cut(a[l++]);\n\t\twhile(l>b[i].l)add(a[--l]);//cout<<si[1]<<endl;\n\t\twhile(r<b[i].r)add(a[++r]);\n\t\twhile(r>b[i].r)cut(a[r--]);//cout<<si[1]<<\" \"<<b[i].id<<\" \"<<r+1<<\" \"<<s[2]<<\" \"<<s[3]<<\" \"<<s[1]<<endl;//cout<<now<<\" \"<<b[i].id<<endl;\n\t\twhile(now>b[i].pre)change(now--,b[i].l,b[i].r);\n\t\twhile(now<b[i].pre)change(++now,b[i].l,b[i].r);\n\t\tans[b[i].id]=getans();\n\t}\n\tfor(int i=1;i<=qnum;i++)printf(\"%d\\n\",ans[i]);\n\treturn 0;\n} \n```\n\n\u6700\u540e\uff0c\u6700\u91cd\u8981\u4e00\u70b9\u662f\u8981\u5f00\u4f18\u5316~~\u6d1b\u8c37\u4f18\u5316\u6ca1\u7528\uff0c\u8981\u624b\u52a8\u5f00~~\uff0c\u8fd9\u6837\u624d\u80fdA\n\n\n\n",
        "postTime": 1611416281,
        "uid": 343748,
        "name": "louhao088",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF940F \u3010Machine Learning\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF940F)\n\n---\n\n\u8fd9\u9053\u9898\u4e0d\u7b97\u7279\u522b\u96be\uff0c\u57fa\u672c\u7b97\u5f97\u4e0a\u662f\u5e26\u4fee\u83ab\u961f\u7684\u677f\u5b50\u9898\uff0c\u9996\u5148\u5e94\u8be5\u60f3\u5230\u7684\u662f\u7edf\u8ba1\u6bcf\u4e2a\u6570\u5b57\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u4e0d\u8fc7\u8fd9\u9053\u9898\u6bd4\u8f83\u6709\u8da3\u7684\u4e00\u70b9\u662f\uff0c\u8981\u6c42\u67e5\u8be2\u7684\u662f\u6bcf\u4e2a\u6570\u5b57\u51fa\u73b0\u6b21\u6570\u7684 Mex\uff0c\u6240\u4ee5\u8fd8\u5e94\u8be5\u7edf\u8ba1\u4e00\u4e2a\u51fa\u73b0\u6b21\u6570\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u7528\u4e00\u4e2a $cnt$ \u6570\u7ec4\u6765\u7edf\u8ba1\u6570\u5b57\u51fa\u73b0\u6b21\u6570\uff0c\u7136\u540e\u518d\u7528\u4e00\u4e2a $cnt2$ \u6570\u7ec4\u6765\u7edf\u8ba1 $cnt$ \u6570\u7ec4\u5185\u6bcf\u4e2a\u6570\u5b57\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u5728\u66f4\u65b0 $cnt$ \u7684\u65f6\u5019\u987a\u4fbf\u4e5f\u66f4\u65b0\u4e00\u4e0b $cnt2$ \u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4f46\u6709\u4e00\u70b9\u4e0d\u592a\u597d\u60f3\u7684\u662f\u5982\u4f55\u6c42\u8fd9\u4e2a\u51fa\u73b0\u6b21\u6570\u7684 Mex\uff0c\u4e00\u5f00\u59cb\uff0c\u6211\u60f3\u7684\u662f\u53ef\u4ee5\u8ddf\u7740 $cnt2$ \u6570\u7ec4\u4e00\u8d77\u66f4\u65b0\uff0c\u4f46\u8fd9\u6837\u4f1a\u6709\u5f88\u591a\u95ee\u9898\uff0c\u56e0\u4e3a\u6211\u4eec\u65e0\u6cd5\u5224\u65ad\u5982\u679c $cnt2_{ans}$ \u4e0d\u4e3a $0$ \u4e86\uff0c\u90a3\u4e48\u7b54\u6848\u5e94\u8be5\u662f\u591a\u5c11\uff0c\u6240\u4ee5\u6211\u91c7\u7528\u4e86\u4e00\u4e2a\u5f88\u7384\u5b66\u7684\u65b9\u6cd5\uff0c\u7528\u4e00\u4e2a bitset \u6765\u7edf\u8ba1\u54ea\u4e9b\u51fa\u73b0\u6b21\u6570\u662f\u6ca1\u6709\u51fa\u73b0\u8fc7\u7684\uff0c\u6700\u540e\u627e\u4e00\u4e2a\u6700\u5c0f\u7684\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u8981\u5728\u66f4\u65b0 $cnt2$ \u7684\u65f6\u5019\u5224\u65ad\u4e00\u4e0b\u8fd9\u4e2a\u88ab\u66f4\u65b0\u7684\u503c\u662f\u5426\u4ece $0$ \u5230 $1$ \u6216\u662f\u4ece $1$ \u5230 $0$\uff0c\u7136\u540e\u76f8\u5bf9\u5e94\u5730\u628a bitset \u4e5f\u66f4\u65b0\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\u800c\u5728\u627e\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u7528 bitset \u7684\u4e00\u4e2a\u6210\u5458\u51fd\u6570`_Find_first`\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u5bfb\u627e\u8fd9\u4e2a bitset \u4e2d\u7b2c\u4e00\u4e2a $1$\uff0c\u5e76\u4e14\u8fd4\u56de\u5b83\u7684\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u662f\u6240\u6709\u6570\u5b57\u51fa\u73b0\u6b21\u6570\u7684 Mex\u3002\n\n\u5bf9\u4e86\uff0c\u8fd9\u9053\u9898\u7531\u4e8e\u503c\u57df\u4e3a $[1,10^9]$\uff0c\u6240\u4ee5\u9700\u8981\u79bb\u6563\u5316\uff0c\u5728\u79bb\u6563\u5316\u65f6\u8981\u6ce8\u610f\uff0c\u4e0d\u4ec5\u5bf9\u4e8e $a$ \u6570\u7ec4\u8981\u79bb\u6563\u5316\uff0c\u5bf9\u4e8e\u4fee\u6539\u64cd\u4f5c\u4e2d\u8981\u6c42\u6539\u6210\u7684\u90a3\u4e9b\u6570\u4e5f\u8981\u8fdb\u884c\u79bb\u6563\u5316\uff0c\u800c\u4e14\u5e94\u8be5\u662f\u4e00\u8d77\u8fdb\u884c\uff0c\u5426\u5219\u6709\u53ef\u80fd\u4f1a RE\uff0c\u540c\u65f6\uff0c\u7531\u4e8e\u8fd9\u4e24\u90e8\u5206\u662f\u4e00\u8d77\u79bb\u6563\u5316\u7684\uff0c\u6240\u4ee5\u6700\u7ec8\u79bb\u6563\u540e\u7684\u503c\u57df\u5e94\u8be5\u662f $[1,2\\times n]$\uff0c\u8bb0\u5f97\u8981\u628a\u6570\u7ec4\u5927\u5c0f\u5f00\u591f\uff0c\u5426\u5219\u4e5f\u4f1a RE\u3002\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define N 200010//\u6570\u7ec4\u5927\u5c0f\u5f00\u591f\uff01\nusing namespace std;\nint n,m,p,len,k,k1,lastc,l=1,r,t,ans[N],cnt[N],cnt1[N],a[N];\nstruct Query\n{\n\tint x;\n\tint y;\n\tint z;\n\tint id;\n\tbool operator < (Query const &a) const\n\t{\n\t\treturn ((x/len)^(a.x/len)) ? x/len<a.x/len : ((y/len)^(a.y/len)) ? y/len<a.y/len : z<a.z;\n        //\u5e26\u4fee\u83ab\u961f\u4e0d\u50cf\u666e\u901a\u83ab\u961f\uff0c\u5728\u6392\u5e8f\u65f6\u5e94\u5f53\u4ee5\u5de6\u7aef\u70b9\u6240\u5728\u7684\u5757\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u53f3\u7aef\u70b9\u6240\u5728\u7684\u5757\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\uff0c\u65f6\u95f4\u4e3a\u7b2c\u4e09\u5173\u952e\u5b57\n\t}\n};\nstruct Change\n{\n\tint p;\n\tint v;\n};\nQuery q[N];\nChange c[N];\nvector<int> rec;//\u7528\u6765\u79bb\u6563\u7684\u6570\u7ec4\uff0c\u4e3a\u4e86\u65b9\u4fbf\u7528\u4e86 vector\nbitset<N> num;//\u7edf\u8ba1\u7b54\u6848\u7684 bitset\nvoid add(int i)\n{\n\tcnt1[cnt[a[i]]]--;\n\tif(!cnt1[cnt[a[i]]])//\u5148\u628a\u5f53\u524d\u6570\u5b57\u51fa\u73b0\u6b21\u6570\u7684\u51fa\u73b0\u6b21\u6570\u51cf\u4e00\n\t\tnum[cnt[a[i]]]=1;\n\tcnt[a[i]]++;\n\tif(!cnt1[cnt[a[i]]])//\u518d\u628a\u5f53\u524d\u6570\u5b57\u51fa\u73b0\u6b21\u6570\u7684\u51fa\u73b0\u6b21\u6570\u52a0\u4e00\n\t\tnum[cnt[a[i]]]=0;\n\tcnt1[cnt[a[i]]]++;\n}\nvoid del(int i)\n{\n\tcnt1[cnt[a[i]]]--;\n\tif(!cnt1[cnt[a[i]]])//\u64cd\u4f5c\u57fa\u672c\u540c\u4e0a\n\t\tnum[cnt[a[i]]]=1;\n\tcnt[a[i]]--;\n\tif(!cnt1[cnt[a[i]]])\n\t\tnum[cnt[a[i]]]=0;\n\tcnt1[cnt[a[i]]]++;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tlen=(int)pow(n,2.0/3.0);//\u8fd9\u4e5f\u662f\u8981\u6ce8\u610f\u7684\u4e00\u70b9\uff0c\u5e26\u4fee\u83ab\u961f\u7684\u5757\u957f\u5e94\u8be5\u4e3an^(2/3)\n\trec.push_back(0);//\u9632\u6b62\u79bb\u6563\u540e\u7684\u503c\u4e3a 0\uff08\u5176\u5b9e\u4e0d\u52a0\u4e5f\u80fd AC\uff0c\u4f46\u6211\u89c9\u5f97\u8981\u66f4\u4e25\u8c28\u4e00\u70b9\uff09\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\trec.push_back(a[i]);\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint op,l,r;\n\t\tscanf(\"%d%d%d\",&op,&l,&r);\n\t\tif(op==1)\n\t\t\tq[++k]=Query{l,r,lastc,k};\n\t\telse\n\t\t{\n\t\t\tk1++;\n\t\t\tlastc=k1;\n\t\t\trec.push_back(r);\n\t\t\tc[k1]=Change{l,r};\n\t\t}\n\t}\n\tsort(rec.begin(),rec.end());\n\trec.erase(unique(rec.begin(),rec.end()),rec.end());\n\tfor(int i=1;i<=n;i++)\n\t\ta[i]=lower_bound(rec.begin(),rec.end(),a[i])-rec.begin();\n\tfor(int i=1;i<=k1;i++)\n\t\tc[i].v=lower_bound(rec.begin(),rec.end(),c[i].v)-rec.begin();\n\tsort(q+1,q+1+k);\n\tcnt1[0]=0x3f3f3f3f;//\u7531\u4e8e\u7b54\u6848\u4e00\u5b9a\u4e0d\u4e3a 0\uff0c\u6240\u4ee5\u53ef\u4ee5\u628a cnt1[0] \u8bbe\u4e3a\u65e0\u7a77\u5927\n\tnum.set();//bitset \u6210\u5458\u51fd\u6570\u4e4b\u4e00\uff0c\u628a\u6240\u6709\u503c\u8bbe\u4e3a 1\n\tnum[0]=0;\n\tfor(int i=1;i<=k;i++)\n\t{\n\t\twhile(l>q[i].x)\n\t\t\tadd(--l);\n\t\twhile(r<q[i].y)\n\t\t\tadd(++r);\n\t\twhile(l<q[i].x)\n\t\t\tdel(l++);\n\t\twhile(r>q[i].y)\n\t\t\tdel(r--);\n\t\twhile(t<q[i].z)\n\t\t{\n\t\t\tt++;\n\t\t\tif(l<=c[t].p&&r>=c[t].p)\n\t\t\t{\n\t\t\t\tdel(c[t].p);\n\t\t\t\tswap(a[c[t].p],c[t].v);\n\t\t\t\tadd(c[t].p);\n\t\t\t}\n\t\t\telse\n\t\t\t\tswap(a[c[t].p],c[t].v);\n\t\t}\n\t\twhile(t>q[i].z)\n\t\t{\n\t\t\tif(l<=c[t].p&&r>=c[t].p)\n\t\t\t{\n\t\t\t\tdel(c[t].p);\n\t\t\t\tswap(a[c[t].p],c[t].v);\n\t\t\t\tadd(c[t].p);\n\t\t\t}\n\t\t\telse\n\t\t\t\tswap(a[c[t].p],c[t].v);\n\t\t\tt--;\n\t\t}\n\t\tans[q[i].id]=num._Find_first();//\u4e0a\u9762\u8bb2\u8fc7\u4e86\uff0c\u83b7\u53d6\u51fa\u73b0\u6b21\u6570\u7684 Mex\n\t}\n\tfor(int i=1;i<=k;i++)\n\t\tprintf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1603372668,
        "uid": 183235,
        "name": "Islauso",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF940F \u3010Machine Learning\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF940F)\n\n---\n\n\u8fd9\u9053\u9898\u76ee\u770b\u5230\u65f6\uff0c\u662f\u60f3\u5230\u4e86\u8fd9\u9053[Rmq Problem / mex](https://www.luogu.com.cn/problem/P4137)\u3002\n\n\u5c31\u662f\u7ef4\u62a4\u51fa\u73b0\u6b21\u6570\uff0c\u518d\u5bf9\u51fa\u73b0\u6b21\u6570\u5206\u5757\uff0c\u4f46\u8fd9\u91cc\u662f\u4e0d\u5fc5\u8981\u7684\u3002\n\n\n\u56e0\u4e3a\u533a\u95f4\u6570\u5b57\u51fa\u73b0\u6b21\u6570\u7684\u548c\u6700\u591a\u4e3a n\uff0c\u6240\u4ee5\u5c31\u7b97\u6570\u5b57\u51fa\u73b0\u6b21\u6570\u5206\u5e03\u975e\u5e38\u5e73\u5747\uff0c\n\n\u8fd9\u4e2a mex \u4e5f\u5e94\u8be5\u662f $\\sqrt{n}$ \u8fd9\u4e2a\u8303\u56f4\u7684\uff0c\u6240\u4ee5\u5c31\u53ef\u4ee5\u4e0d\u7528\u5bf9\u51fa\u73b0\u6b21\u6570\u5206\u5757\u3002\n\n\u9996\u5148\uff0c\u672c\u9898\u9700\u8981\u4fee\u6539\uff0c\u8981\u7528\u5e26\u4fee\u83ab\u961f\uff0c\u5176\u6b21\u8fd9\u91cc\u6c42\u7684\u662f**\u6570\u5b57\u51fa\u73b0**\u6b21\u6570\u7684 mex\u3002\n\n\n\u6ce8\u610f\uff1a\u56e0\u4e3a\u6709\u66f4\u6539\u64cd\u4f5c\uff0c\u79bb\u6563\u5316\u6570\u7ec4\u8981\u5f00\u5230\u4e24\u500d\u3002\n\n\u8fd8\u6709\u554a\uff0c$cnt$ \u6570\u7ec4\u8981\u8bb0\u5f97\u5c06\u4e4b\u524d\u7684\u51fa\u73b0\u6b21\u6570\u51cf\u6389\u3002\n\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\ntemplate<typename T>void read(T &x) {\n\tT f = 1;x = 0;char s = getchar();\n\twhile(s < '0' || s > '9') {if(s == '-')f = -1;s = getchar();}\n\twhile(s >= '0' && s <= '9') {x = x * 10 + s - '0';s = getchar();}\n\tx *= f;\n}\ntemplate<typename T>void print(T x) {\n\tif(x < 0) putchar('-'),x = -x;\n\tif(x > 9) print(x / 10);\n\tputchar(x % 10 + '0');\n}\n\nconst int maxn = 200005;\n\nint n,m,a[maxn],cnt1,cnt2,ans[maxn],res,vis[maxn],cnt[maxn],num[maxn],pos[maxn],tot,b[maxn],L[maxn],R[maxn],t;\n\nstruct Query {\n\tint l,r,now,id;\n\tQuery() {}\n\tQuery(int L,int R,int N,int I) {l = L,r = R,now = N,id = I;}\n}ask[maxn];\n\nstruct Maintain {\n\tint p,c;\n\tMaintain() {}\n\tMaintain(int P,int C) {p = P,c = C;}\n}up[maxn];\n\nbool cmp(Query x,Query y) {\n\tif (pos[x.l] ^ pos[y.l]) return x.l < y.l;\n\tif (pos[x.r] ^ pos[y.r]) return x.r < y.r;\n\treturn x.now < y.now;\n}\n\nvoid Change(int x,int y) {\n\tif (ask[y].l <= up[x].p && up[x].p <= ask[y].r) {\n\t\tcnt[vis[up[x].c]] --;\t\t//\u6ce8\u610f\u54e6\n\t\tcnt[++ vis[up[x].c]] ++;\n\t\tcnt[vis[a[up[x].p]]] --;\n\t\tcnt[-- vis[a[up[x].p]]] ++;\n\t}\n\tswap(a[up[x].p],up[x].c);\n}\n\nvoid Add(int x) {\n\tcnt[vis[a[x]]] --;\n\tcnt[++ vis[a[x]]] ++;\n}\n\nvoid Sub(int x) {\n\tcnt[vis[a[x]]] --;\n\tcnt[-- vis[a[x]]] ++;\n}\n\nint op[maxn],x[maxn],y[maxn];\n\nint main () {\n\tread(n);read(m);\n\tt = pow(n,0.66666667);\n\tfor (int i = 1 ; i <= n ; ++ i) read(a[i]),b[i] = a[i],pos[i] = i / t;\n\ttot = n;\n\tfor (int i = 1 ; i <= m ; ++ i) {\n\t\tread(op[i]);read(x[i]);read(y[i]);\n\t\tif (op[i] == 2) b[++ tot] = y[i];\n\t}\n\tsort(b + 1,b + 1 + tot);\n\ttot = unique(b + 1,b + 1 + tot) - b - 1;\n\tfor (int i = 1 ; i <= n ; ++ i) a[i] = lower_bound(b + 1,b + 1 + tot,a[i]) - b;\n\tfor (int i = 1 ; i <= m ; ++ i) {\n\t\tif (op[i] == 2) y[i] = lower_bound(b + 1,b + 1 + tot,y[i]) - b;\n\t\tif (op[i] == 1) ++ cnt1,ask[cnt1] = Query(x[i],y[i],cnt2,cnt1);\n\t\tif (op[i] == 2) up[++ cnt2] = Maintain(x[i],y[i]);\n\t}\n\tsort(ask + 1,ask + 1 + cnt1,cmp);\n\tint l = 1,r = 0,tm = 0;\n\tfor (int i = 1 ; i <= cnt1 ; ++ i) {\n\t\twhile (l > ask[i].l) Add(-- l);\n\t\twhile (r < ask[i].r) Add(++ r);\n\t\twhile (l < ask[i].l) Sub(l ++);\n\t\twhile (r > ask[i].r) Sub(r --);\n\t\twhile (ask[i].now > tm) Change(++ tm,i);\n\t\twhile (ask[i].now < tm) Change(tm --,i);\n\t\tans[ask[i].id] = 1;\n\t\twhile (cnt[ans[ask[i].id]]) ans[ask[i].id] ++;\n\t}\n\tfor (int i = 1 ; i <= cnt1 ; ++ i) print(ans[i]),putchar('\\n');\n\treturn 0;\n}\n```",
        "postTime": 1597149948,
        "uid": 163516,
        "name": "Strelitzia",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF940F \u3010Machine Learning\u3011"
    },
    {
        "content": "\u8fd9\u4e0d\u5c31\u662f\u79bb\u6563\u5316+\u5e26\u4fee\u6539\u83ab\u961f\u5417\uff1f\n\n\u5927\u5bb6\u53ef\u4ee5\u53bb\u627e\u4e00\u4e0b\u8fd9\u4e2a\u9898\u76ee\u5176\u5b9e\u5c31\u662f\u4e24\u4e2a\u9898\u76ee\u6df7\u5408\u800c\u6210\n[[\u56fd\u5bb6\u96c6\u8bad\u961f]\u6570\u989c\u8272](https://www.luogu.org/problemnew/show/P1903)+[Rmq Problem / mex](https://www.luogu.org/problemnew/show/P4137)\uff0c\u51fa\u73b0\u6b21\u6570\u5c31\u662f\u88f8\u7684\u6570\u989c\u8272\uff0c\u7136\u540e\u5957\u4e2a\u6876\u53bb\u6570$mex$\uff0c\u7136\u540e\u5c31\u80fd\u66b4\u529bAC\u4e86(\u6b64\u8bdd\u6765\u6e90\u4e8e\u673a\u623f\u5927\u4f6c[$yl$](http://www.cnblogs.com/cjoieryl/p/8468558.html),~~\u6b22\u8fce\u63a5\u53d7Ta\u7684\u5c0f\u8ff7\u5f1f\u548c\u5c0f\u8ff7\u59b9~~)\n\n\u5410\u69fd\u4e00\u4e0b\uff1a\n$mex$\n\u503c\u5f00\u6876\u66b4\u529b\u6c42\u5c31\u80fd\u8fc7\u4e86\n\n\u6211\u7684\u505a\u6cd5\uff1a\n\u628a\u6570\u5b57\u4e5f\u5206\u5757\uff0c\u8ba1\u7b97$mex$\u65f6\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u4e0d\u6ee1\u7684\u5757\uff0c\u518d\u5728\u5757\u5185\u627e\u7684\u90a3\u4e2a$mex$\u503c\n\n\u4e0a\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n#define ll long long\n#define RG register\n#define MAX 200000\ninline int read()\n{\n    RG int x=0,t=1;RG char ch=getchar();\n    while((ch<'0'||ch>'9')&&ch!='-')ch=getchar();\n    if(ch=='-')t=-1,ch=getchar(); \n    while(ch<='9'&&ch>='0')x=x*10+ch-48,ch=getchar();\n    return x*t;\n}\nstruct Event\n{\n    int id;\n    int l,r,blk;\n    int lst;\n}Q[MAX],P[MAX];\nint ans[MAX];\nint S[MAX<<1],ss,n,m,a[MAX],b[MAX],blk=3000,tot,q;\nint sum[MAX],Sum[MAX];\nint Blk[MAX];\nbool cmp(Event a,Event b){\n    if(a.blk!=b.blk) return a.blk<b.blk;\n    if((a.r-1)/blk!=(b.r-1)/blk)return (a.r-1)/blk<(b.r-1)/blk;\n    return a.lst<b.lst;\n}\nvoid Change(int num,int w)\n{\n    Sum[sum[num]]--;\n    if(Sum[sum[num]]==0)Blk[(Sum[sum[num]]-1)/500]--;\n    sum[num]+=w;\n    Sum[sum[num]]++;\n    if(Sum[sum[num]]==1)Blk[(Sum[sum[num]]-1)/500]++;\n}\nint GetAns()\n{\n    for(int i=0;;++i)\n    {\n        if(Blk[i]==blk)continue;\n        for(int j=1;j<=blk;++j)\n            if(!Sum[i*blk+j])return i*blk+j;\n    }\n}\nvoid Modify(int st,int now,int l,int r)\n{\n    if(st==now)return;\n    if(now<st)\n        for(int i=now+1;i<=st;++i)\n        {\n            a[P[i].l]=P[i].r;\n            if(P[i].l>=l&&P[i].l<=r)\n            {\n                Change(P[i].lst,-1);\n                Change(P[i].r,1);\n            }\n        }\n    else \n        for(int i=now;i>st;--i)\n        {\n            a[P[i].l]=P[i].lst;\n            if(P[i].l>=l&&P[i].l<=r)\n            {\n                Change(P[i].r,-1);\n                Change(P[i].lst,1);\n            }\n        }\n}\nvoid Work(int pos,int w)\n{\n    Change(a[pos],w);\n}\nint main()\n{\n    n=read();m=read();\n    for(int i=1;i<=n;++i)b[i]=a[i]=read(),S[++ss]=a[i];\n    for(int i=1;i<=m;++i)\n    {\n        int opt=read(),l=read(),r=read();\n        if(opt==1){Q[++q]=(Event){q,l,r,(l-1)/blk,tot};}\n        else\n        {\n            P[++tot]=(Event){tot,l,r,0,b[l]};\n            b[l]=r;\n            S[++ss]=r;\n        }\n    }\n    \n    sort(&S[1],&S[ss+1]);\n    ss=unique(&S[1],&S[ss+1])-S-1;\n    for(int i=1;i<=n;++i)a[i]=lower_bound(&S[1],&S[ss+1],a[i])-S;\n    for(int i=1;i<=tot;++i)\n    {\n        P[i].r=lower_bound(&S[1],&S[ss+1],P[i].r)-S;\n        P[i].lst=lower_bound(&S[1],&S[ss+1],P[i].lst)-S;\n    }\n    sort(&Q[1],&Q[q+1],cmp);\n\n    int md=0,l=1,r=0;\n    for(int i=1;i<=q;++i)\n    {\n        while(r<Q[i].r)Work(++r,1);\n        while(l>Q[i].l)Work(--l,1);\n        while(r>Q[i].r)Work(r--,-1);\n        while(l<Q[i].l)Work(l++,-1);\n        Modify(Q[i].lst,md,l,r);\n        md=Q[i].lst;\n        ans[Q[i].id]=GetAns();\n    }\n    for(int i=1;i<=q;++i)\n        printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n\n```",
        "postTime": 1521859309,
        "uid": 47901,
        "name": "\u9f99\u795e\u54c8\u8fea\u65af",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF940F \u3010Machine Learning\u3011"
    },
    {
        "content": "**\u5148\u5410\u69fd\u4e00\u6ce2\uff1a** \u8fd9\u9898\u9898\u76ee\u63cf\u8ff0\u592a\u60ca\u4eba\u4e86\uff0c\u5185\u4e2a mex \u7684\u5b9a\u4e49\u662f\u9760\u6837\u4f8b\u7406\u89e3\u7684...\n# \u9898\u76ee\u5927\u610f\n\u5bf9\u4e00\u4e2a\u7ebf\u5f62\u5b58\u50a8\u7684\u6570\u636e\u8fdb\u884c\u4fee\u6539\u548c\u67e5\u8be2\u3002\n\n\u8fd9\u91cc\u7ed9\u4e00\u4e2a\u5bf9 mex \u7684\u597d\u7406\u89e3\u7684\u5b9a\u4e49\uff08\u6211\u4e5f\u4e0d\u77e5\u9053\u9898\u76ee\u91cc\u7684\u5230\u5e95\u5bf9\u4e0d\u5bf9...\uff09\uff1a\u5728\u533a\u95f4\u91cc\u51fa\u73b0\u7684\u201c\u6570\u5b57\u7684\u6b21\u6570\u201d\u7684\u6b21\u6570\u6700\u5c0f\u7684\u672a\u51fa\u73b0\u7684\u6570\u5b57\u3002\n# \u5206\u6790\uff08\u601d\u8def\uff09\n\u8fd9\u9898\u5c31\u662f\u4e00\u4e2a\u88f8\u7684\u5e26\u4fee\u83ab\u961f\uff0c\u4e0d\u61c2\u7684\u53ef\u4ee5\u53bb\u5148\u5b66\u5b66\u3002\n\n\u6700\u96be\u7684\u4e00\u70b9\u5c31\u662f\u5982\u4f55\u5904\u7406 mex\uff0c\u672c\u6765\u6211\u662f\u60f3\u6253\u503c\u57df\u5206\u5757\u7684\uff0c\u4f46\u662f\u6211\u771f\u7684~~\u592a\u61d2\u4e86~~\u3002\u4e8e\u662f\u5c31\u8bd5\u4e86\u4e00\u4e0b\u66b4\u529b\uff0c\u6ca1\u60f3\u5230\u771f\u7684\u8fc7\u4e86\uff0c\u4ecb\u7ecd\u4e00\u4e0b\u66b4\u529b\uff0c\u8fd9\u9898\u9996\u5148\u5f00\u4e00\u4e2a $cnt$ \u6570\u7ec4\u5b58\u6bcf\u4e2a\u6570\u5b57\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u518d\u5f00\u4e00\u4e2a $ccnt$ \u6570\u7ec4\u5b58 $cnt$ \u6570\u7ec4\u91cc\u6570\u5b57\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5728\u79bb\u6563\u5316\u5c31\u884c\u4e86\uff0c\u7136\u540e\u4f60\u4f1a\u53d1\u73b0\u4fee\u6539\u4e5f\u8981\u79bb\u6563\u5316\uff0c\u4e8e\u662f\u79bb\u6563\u5316\u7684\u6570\u7ec4\u548c $cnt$ \u548c $ccnt$ \u90fd\u8981\u5f00 $2*n$ \u7684\u957f\u5ea6\u3002\n\n\u6700\u540e\u7684 $ans$ \u5c31\u679a\u4e3e $ccnt$ \u91cc\u7684\u6700\u65e9\u4e3a 0 \u7684\u4e0b\u6807\u5c31\u884c\u4e86\u3002\n\n\u91cd\u70b9\u90fd\u8bb2\u5b8c\u4e86\uff0c\u4e0a\u4ee3\u7801\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline void qr(register int &ret){register int x=0,f=0;register char ch=getchar();while(ch<'0'||ch>'9')f|=ch=='-',ch=getchar();while(ch>='0'&&ch<='9')x=(x<<3)+(x<<1)+(ch^48),ch=getchar();ret=f?-x:x;}\nconst int maxn=100005;\nint n,m,s,l=1,r,t,tot,cntq,cntr,Q,idx[maxn],a[maxn],cnt[maxn<<1],ccnt[maxn<<1],ans[maxn],flag[maxn<<1],top;\nstruct node{\n\tint l,r,ti,id; \n\tbool operator<(const node ot)const{//\u6bd4\u8f83\u51fd\u6570\uff0c\u8bb0\u5f97\u5206\u5757\u6392\u5e8f \n\t\treturn idx[l]==idx[ot.l]?(idx[r]==idx[ot.r]?ti<ot.ti:r<ot.r):l<ot.l;\n\t}\n}p[maxn];\nstruct edon{int i,from,to;}c[maxn];//change\u4fee\u6539\u6570\u7ec4 \nvoid add(int x){\n\t--ccnt[cnt[x]];\n\t++ccnt[++cnt[x]];\n}\nvoid del(int x){\n\t--ccnt[cnt[x]];\n\t++ccnt[--cnt[x]];\n}\nint main() {\n\tqr(n),qr(m);\n\ts=pow(n,2.0/3);//\u5757\u957f \n\tfor(int i=1;i<=n;++i){\n\t\tqr(a[i]);\n\t\tidx[i]=(i+s-1)/s;\n\t\tflag[++top]=a[i];\n\t}\n\tfor(int i=1;i<=m;++i){\n\t\tqr(Q);\n\t\tif(Q==1){\n\t\t\t++cntq;\n\t\t\tqr(p[cntq].l),qr(p[cntq].r);\n\t\t\tp[cntq].id=cntq;\n\t\t\tp[cntq].ti=cntr;\n\t\t}else{\n\t\t\t++cntr;\n\t\t\tqr(c[cntr].i),qr(c[cntr].to);\n\t\t\tc[cntr].from=a[c[cntr].i],a[c[cntr].i]=c[cntr].to,flag[++top]=c[cntr].to;//\u8bb0\u5f97\u4fee\u6539\u6570\u7ec4 \n\t\t}\n\t}\n\tfor(int i=cntr;i>=1;--i) a[c[i].i]=c[i].from;//\u8fd8\u539f\u6570\u7ec4 \n\tsort(flag+1,flag+top+1);\n\ttop=unique(flag+1,flag+top+1)-flag-1;//\u79bb\u6563\u5316 \n\tfor(int i=1;i<=n;++i) a[i]=lower_bound(flag+1,flag+top+1,a[i])-flag;\n\tfor(int i=1;i<=cntr;++i) c[i].from=lower_bound(flag+1,flag+top+1,c[i].from)-flag,c[i].to=lower_bound(flag+1,flag+top+1,c[i].to)-flag;\n\tsort(p+1,p+cntq+1);\n\tfor(int i=1;i<=cntq;++i){//\u83ab\u961f\u677f\u677f\uff0c\u5982\u679c\u8fd9\u90fd\u4e0d\u4f1a\uff0c\u4f60\u4e3a\u4ec0\u4e48\u8981\u6765\u505a\u8fd9\u9053\u9898\u5462\uff1f \n\t\twhile(t>p[i].ti) {\n\t\t\tif(c[t].i>=l&&c[t].i<=r) add(c[t].from),del(c[t].to);\n\t\t\ta[c[t].i]=c[t--].from;\n\t\t}\n\t\twhile(t<p[i].ti) {\n\t\t\tif(c[++t].i>=l&&c[t].i<=r) add(c[t].to),del(c[t].from);\n\t\t\ta[c[t].i]=c[t].to;\n\t\t}\n\t\twhile(l>p[i].l) add(a[--l]);\n\t\twhile(r<p[i].r) add(a[++r]);\n\t\twhile(l<p[i].l) del(a[l++]);\n\t\twhile(r>p[i].r) del(a[r--]);\n\t\tfor(int j=1; ;++j){//\u66b4\u529b\u679a\u4e3e \n\t\t\tif(ccnt[j]==0){\n\t\t\t\tans[p[i].id]=j;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=cntq;++i){\n\t\tprintf(\"%d\\n\",ans[i]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1627022727,
        "uid": 383791,
        "name": "Others",
        "ccfLevel": 7,
        "title": "CF940F\u9898\u89e3"
    },
    {
        "content": "\u8981\u67e5\u8be2\u7684\u662f\u533a\u95f4\u4e2d\u6bcf\u4e2a\u6570\u5b57\u51fa\u73b0\u6b21\u6570\u7684 mex\uff0c\u8003\u8651\u5230\u8fd9\u4e2a mex \u7684\u5224\u65ad\u662f\u57fa\u4e8e\u51fa\u73b0\u6b21\u6570\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u7ef4\u62a4\u6bcf\u4e2a\u6570\u5b57\u7684\u51fa\u73b0\u6b21\u6570\u548c\u6bcf\u79cd\u51fa\u73b0\u6b21\u6570\u5bf9\u5e94\u7684\u6570\u5b57\u3002\n\n\u5f53\u5220\u9664\u6216\u52a0\u5165\u67d0\u4e2a\u6570\u65f6\uff0c\u6211\u4eec\u5c06\u8fd9\u4e2a\u6570\u5bf9\u5e94\u7684\u51fa\u73b0\u6b21\u6570\u589e\u51cf\uff0c\u540c\u65f6\u5c06\u5bf9\u5e94\u6b21\u6570\u7684\u6570\u7684\u4e2a\u6570\u4e5f\u589e\u51cf\u3002\n\n\u6bcf\u6b21\u8be2\u95ee\u7684\u7b54\u6848\u4e0d\u662f\u5728\u589e\u51cf\u8fc7\u7a0b\u4e2d\u6c42\u51fa\uff0c\u4e5f\u65e0\u6cd5\u5728\u589e\u51cf\u8fc7\u7a0b\u4e2d\u6c42\u51fa\u3002\n\u5904\u7406\u5b8c\u5f53\u524d\u533a\u95f4\u6240\u6709\u6570\u5bf9\u5e94\u7684\u6b21\u6570\u540e\uff0c\u6211\u4eec\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u6b21\u6570\uff0c\u7b2c\u4e00\u4e2a\u51fa\u73b0\u7684\u6ca1\u6709\u5bf9\u5e94\u6570\u5b57\u7684\u6b21\u6570\u5c31\u662f\u5f53\u524d\u8be2\u95ee\u7684\u7b54\u6848\u3002\n\n\u81f3\u4e8e\u4fee\u6539\u64cd\u4f5c\uff0c\u5219\u4e0e\u666e\u901a\u5e26\u4fee\u83ab\u961f\u65e0\u5f02\uff0c\u53ef\u4ee5\u770b[\u8fd9\u91cc](https://www.cnblogs.com/KnightL/p/14130517.html)\uff0c\u8fd9\u91cc\u4e0d\u591a\u8d58\u8ff0\u3002\n\n```cpp\n#include<cmath>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define maxn 1000010\n//#define int long long\n\nusing namespace std;\n\nint a[maxn],b[maxn];\nint n,m,Ans,len,L=1,R;\nint all,cntq,cntc,Now,id;\nint cnt[maxn],num[maxn],ans[maxn];\nstruct question{int l,r,t,now;}q[maxn];\nstruct change{int pos,val;}c[maxn];\n\nint read(){\n\tint s=0,w=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-') w=1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') s=(s<<1)+(s<<3)+ch-'0',ch=getchar();\n\treturn s*w;\n}\n\nbool cmp(question a,question b){\n    return (a.l/len)^(b.l/len)?a.l<b.l:(a.r/len)^(b.r/len)?a.r<b.r:a.t<b.t;\n}\n\nvoid Add(int x){\n    num[cnt[x]]--;\n    num[++cnt[x]]++;\n}\n\nvoid Del(int x){\n    num[cnt[x]]--;\n    num[--cnt[x]]++;\n}\n\nvoid Modify(int ti,int x){\n    if(c[ti].pos>=q[x].l&&c[ti].pos<=q[x].r)\n        Del(a[c[ti].pos]),Add(c[ti].val);\n    swap(a[c[ti].pos],c[ti].val);\n}\n\nint main(){\n    n=read();m=read();len=pow(n,2.0/3);\n    for(int i=1;i<=n;i++)b[++id]=a[i]=read();\n    for(int i=1,opt;i<=m;i++){\n        opt=read();\n        if(opt==1){\n            q[++cntq].l=read();q[cntq].r=read();\n            q[cntq].t=cntc;q[cntq].now=cntq;\n        }\n        else c[++cntc].pos=read(),c[cntc].val=read();\n    }\n    sort(b+1,b+id+1);all=unique(b+1,b+id+1)-b-1;\n    for(int i=1;i<=n;i++)a[i]=lower_bound(b+1,b+all+1,a[i])-b;\n    sort(q+1,q+cntq+1,cmp);\n    for(int i=1;i<=cntq;i++){\n        while(L<q[i].l) Del(a[L++]);\n        while(L>q[i].l) Add(a[--L]);\n        while(R<q[i].r) Add(a[++R]);\n        while(R>q[i].r) Del(a[R--]);\n        while(Now<q[i].t) Modify(++Now,i);\n        while(Now>q[i].t) Modify(Now--,i);\n        for(ans[q[i].now]=1;num[ans[q[i].now]]>0;ans[q[i].now]++);\n    }\n    for(int i=1;i<=cntq;i++) printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```\n",
        "postTime": 1619010230,
        "uid": 281497,
        "name": "KEBrantily",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF940F \u3010Machine Learning\u3011"
    },
    {
        "content": "# \u5e26\u4fee\u83ab\u961f+\u503c\u57df\u5206\u5757\n\u503c\u57df\u5206\u5757\u662f\u628a\u503c\u5206\u5757\uff0c\u8fdb\u884c\u67e5\u8be2\uff0c\u8fd9\u6837\u5355\u6b21\u67e5\u8be2\u8ba1\u6570\u5668\u5c31\u662f$O(\\sqrt n)$\uff0c\u4e0e**\u666e\u901a\u83ab\u961f**\u5355\u6b21\u79fb\u52a8\u590d\u6742\u5ea6\u5dee\u4e0d\u591a\u662f**\u540c\u7ea7**\u7684,\u867d\u7136\u8fd9\u9898\u662f\u6c42$mex$\u66b4\u529b\u590d\u6742\u5ea6\u4e5f\u662f$O(\\sqrt n)$\u3002\n\n\u4f46\u7531\u4e8e\u505a\u4e86[\u66fc\u54c8\u987f\u4ea4\u6613](https://www.luogu.com.cn/problem/P3730)\uff0c\u5bfc\u81f4\u4e00\u5f00\u59cb\u5c31\u60f3\u5230\u4e86\u503c\u57df\u5206\u5757+\u5e26\u4fee\u83ab\u961f\u3002~~\u6240\u4ee5\u53ea\u8981\u67e5\u8be2\u7b2ck\u5c0f\u7684\u51fa\u73b0\u6b21\u6570\u5c31\u53ef\u4ee5\u5361\u6389\u66b4\u529b\u4e86~~\n___\n\n## 1.\u5e26\u4fee\u83ab\u961f\n\u5e26\u4fee\u83ab\u961f\u5c31\u662f\u666e\u901a\u83ab\u961f\u52a0\u4e00\u4e2a\u65f6\u95f4\u6307\u9488\uff0c\u6bcf\u6b21\u67e5\u8be2\u8bb0\u5f55\u4e0a\u4e00\u6b21\u4fee\u6539\u7684\u7f16\u53f7\uff0c\n\u6bcf\u6b21\u9664\u4e86\u79fb\u52a8$l,r$\u6307\u9488\u4ee5\u5916\u518d\u79fb\u52a8$pre$\u6307\u9488\uff0c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n### 1.1 \u5947\u5076\u6392\u5e8f\n\u867d\u7136\u8fd9\u662f\u5e26\u4fee\u83ab\u961f\uff0c\u4f46\u662f\u4e2a\u4eba\u5728\u6a21\u677f[[\u56fd\u5bb6\u96c6\u8bad\u961f]\u6570\u989c\u8272 / \u7ef4\u62a4\u961f\u5217](https://www.luogu.com.cn/problem/P1903)\u91cc\u9762\u53d1\u73b0\u5947\u5076\u6392\u5e8f\u8fd8\u662f\u8981\u6bd4\u666e\u901a\u6392\u5e8f\u8981\u5feb\u7684~~\u522b\u8bf4\u662f\u6d4b\u8bc4\u59ec\u6ce2\u52a8~~\n\u6839\u636e[\u65e5\u62a5](https://www.luogu.com.cn/blog/codesonic/Mosalgorithm)\u6240\u8bf4\uff1a\n> \u8fd9\u6837\u80fd\u5feb\u662f\u56e0\u4e3a\u6307\u9488\u79fb\u5230\u53f3\u8fb9\u540e\u4e0d\u7528\u518d\u8df3\u56de\u5de6\u8fb9\uff0c\u800c\u8df3\u56de\u5de6\u8fb9\u540e\u5904\u7406\u4e0b\u4e00\u4e2a\u5757\u53c8\u8981\u8df3\u56de\u53f3\u8fb9\uff0c\u8fd9\u6837\u80fd\u51cf\u5c11\u4e00\u534a\u64cd\u4f5c\uff0c\u7406\u8bba\u4e0a\u80fd\u5feb\u4e00\u500d\n\n\u6240\u4ee5\u5927\u90e8\u5206\u83ab\u961f\u9898\u6211\u90fd\u7528**\u5947\u5076\u6392\u5e8f**\n```cpp\nreturn l/size==x.l/size&&r/size==x.r/size?pre<x.pre:l/size^x.l/size?l<x.l:l/size&1?r<x.r:r>x.r;\n```\n### 1.2 \u5757\u957f\n\u5e26\u4fee\u83ab\u961f\u7384\u5b66\u5757\u957f\n```cpp\nsize=ceil(exp((log(n)+log(m))/3));\n```\n___\n## 2.\u503c\u57df\u5206\u5757\n\u9664\u4e86\u8ba1\u6570\u5668\u4ee5\u5916\uff0c\u518d\u7ef4\u62a4\u6bcf\u4e00\u5757\u7684\u4fe1\u606f\uff0c\u6bcf\u6b21\u4e0a\u4f20\u8ba1\u6570\u5668\u7684\u540c\u65f6\u4e0a\u4f20\u5757\u7684\u4fe1\u606f\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u5982\u679c\u6574\u4e00\u5757\u90fd\u4e0d\u7b26\u5408\u8981\u6c42\uff0c\u5c31\u76f4\u63a5\u8df3\u8fc7\u3002\n___\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,x,y,z,size,v[100010],cnta,cntb,cnt[200010],ans[100010],sum1[10010]={1},sum2[100010]={1},q[200010],cnt2,len,r,w;\n//sum2\u7ef4\u62a4\u7684\u662f\u5355\u70b9\u4fe1\u606f\uff0csum1\u7ef4\u62a4\u7684\u662f\u5757\u4fe1\u606f \u8bb0\u5f97cnt\u5f00\u4e24\u500d\uff01\u56e0\u4e3a\u4fee\u6539\u7684\u4e2a\u6570\u52a0\u4e0a\u539f\u6765\u6570\u7684\u4e2a\u6570\u4f1a\u4e0d\u53ean\u4e2a\u6570\u8c03\u4e86\u534a\u5929 \nchar ch;\nint read()\n{\n\tch=getchar(),r=0,w=1;\n\twhile(ch<'0'||ch>'9') w=ch=='-'?-1:w,ch=getchar();\n\twhile(ch>='0'&&ch<='9') r=r*10+ch-'0',ch=getchar();\n\treturn r*w;\n}\nstruct ina\n{\n\tint l,r,pre,id;\n\tbool operator<(const ina &x)const\n\t{\n\t\treturn l/size==x.l/size&&r/size==x.r/size?pre<x.pre:l/size^x.l/size?l<x.l:l/size&1?r<x.r:r>x.r;\n\t\t//\u5947\u5076\u6392\u5e8f \n\t}\n}a[100010];\nstruct inb\n{\n\tint wz,x;\n}b[100010];\nvoid insert(int x,int k)//\u503c\u57df\u5206\u5757\u63d2\u5165 \n{\n\tif(x<=0)\n\treturn;\n\tsum2[x]+=k;\n\tif(sum2[x]==1&&k==1||!sum2[x]&&k==-1)\n\tsum1[x/100]+=k;\n}\nvoid add(int x)\n{\n\tinsert(cnt[v[x]],-1);\n\tinsert(++cnt[v[x]],1);\n}\nvoid del(int x)\n{\n\tinsert(cnt[v[x]],-1);\n\tinsert(--cnt[v[x]],1);\n}\nvoid change(int x,int l,int r)//\u5e26\u4fee\u83ab\u961f\u65f6\u95f4\u6307\u9488\u79fb\u52a8 \n{\n\tif(b[x].wz>=l&&b[x].wz<=r)\n\t{\n\t\tdel(b[x].wz);\n\t\tswap(b[x].x,v[b[x].wz]);\n\t\tadd(b[x].wz);\n\t\treturn;\n\t}\n\tswap(b[x].x,v[b[x].wz]);\n}\nint ask()//\u503c\u57df\u5206\u5757\u67e5\u8be2 \n{\n\tint i;\n\tfor(i=0;sum1[i]==100;i++);\n\tfor(i=i*100;sum2[i];i++);\n\treturn i;\n}\nint main()\n{\n\tn=read(),m=read();\n\tsize=ceil(exp((log(n)+log(m))/3));//\u5e26\u4fee\u83ab\u961f\u7684\u7384\u5b66\u5757\u957f \n\tfor(int i=1;i<=n;i++)\n\tq[++cnt2]=v[i]=read();\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tx=read(),y=read(),z=read();\n\t\tif(x==1)\n\t\ta[++cnta]={y,z,cntb,cnta};\n\t\telse\n\t\tb[++cntb]={y,z},q[++cnt2]=z;\n\t}\n\tsort(q+1,q+cnt2+1);\n\tlen=unique(q+1,q+cnt2+1)-q;\n\tfor(int i=1;i<=n;i++)\n\tv[i]=lower_bound(q+1,q+len,v[i])-q;//\u79bb\u6563\u5316 \n\tfor(int i=1;i<=cntb;i++)\n\tb[i].x=lower_bound(q+1,q+len,b[i].x)-q;\n\tsort(a+1,a+cnta+1);\n\tint left=1,right=0,now=0;\n\tfor(int i=1;i<=cnta;i++)\n\t{\n\t\tint l=a[i].l,r=a[i].r,x=a[i].pre;\n\t\twhile(l<left) add(--left);\n\t\twhile(r>right) add(++right);\n\t\twhile(l>left) del(left++);\n\t\twhile(r<right) del(right--);\n\t\twhile(now<x) change(++now,l,r);\n\t\twhile(now>x) change(now--,l,r);\n\t\tans[a[i].id]=ask();\n\t}\n\tfor(int i=1;i<=cnta;i++)\n\tprintf(\"%d\\n\",ans[i]);\n}\n```",
        "postTime": 1612490427,
        "uid": 363350,
        "name": "hxdts",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF940F \u3010Machine Learning\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u4e2a\u9898\u6709\u4e25\u683c $\\operatorname{O}(n\\sqrt n)$ \u7684\u505a\u6cd5\uff08\u597d\u50cf ouuan \u5927\u4f6c\u5c31\u662f\u8fd9\u4e48\u505a\u7684\uff09\u3002\n\n\u6211\u4eec\u53ea\u7ef4\u62a4\u4e00\u4e2a\u5b58\u5728\u6b21\u6570\u5bf9\u5e94\u7684\u6570\u6709\u51e0\u4e2a\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u83ab\u961f\u3002\n\n\u7136\u540e\u6211\u4eec\u6709\u4e00\u4e2a\u975e\u5e38\u4f18\u79c0\u7684\u6027\u8d28\uff1a\n\n\u8003\u8651\u6700\u574f\u60c5\u51b5\uff0c\u5f53\u5728\u5e8f\u5217\u4e2d\u6709\u4e00\u79cd\u6570\u51fa\u73b0 $1$ \u6b21\uff0c\u4e00\u79cd\u6570\u51fa\u73b0 $2$ \u6b21\u2026\u2026\u65f6\uff0c$\\operatorname{mex}$ \u663e\u7136\u662f\u6700\u5927\u7684\u3002\n\n\u4f46\u662f\u5373\u4f7f\u662f\u8fd9\u6837\uff0c\u6211\u4eec\u4e5f\u53ea\u80fd\u51fa\u73b0\u7ea6 $\\sqrt n$ \u79cd\u4e0d\u540c\u7684\u6570\u636e\uff08\u56e0\u4e3a\u8fd9\u4e2a\u5e8f\u5217\u4e2d\u6700\u591a\u5341\u4e07\u4e2a\u6570\uff09\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5728\u6bcf\u6b21\u8be2\u95ee\u540e\u67e5\u8be2\u7b54\u6848\uff0c\u5176\u590d\u6742\u5ea6\u4e25\u683c $\\sqrt n$\u3002\n\n\u6545\u53ef\u4ee5\u4e25\u683c\u901a\u8fc7\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\ninline int read(){\n\tregister int x=0;\n\tregister bool f=0;\n\tregister char c=getchar();\n\twhile(c<'0'||c>'9'){\n\t\tif(c=='-') f=1;\n\t\tc=getchar();\n\t}\n\twhile(c>='0'&&c<='9'){\n\t\tx=(x<<3)+(x<<1)+c-48;\n\t\tc=getchar();\n\t}\n\treturn f?-x:x;\n}\nchar cr[200];int tt;\ninline void print(register int x,register char k='\\n') {\n    if(!x) putchar('0');\n    if(x < 0) putchar('-'),x=-x;\n    while(x) cr[++tt]=x%10+'0',x/=10;\n    while(tt) putchar(cr[tt--]);\n    putchar(k);\n}\nconst int maxn=233333;\nint n,m,a[maxn],res,len,lst[maxn],sum[maxn];\nint bl,ans[maxn],lsh[maxn],cnt[maxn],l,r,now;\nstruct query{\n\tint l,r,tim,id;\n\tfriend bool operator <(query a,query b){\n\t\tif(a.l/bl!=b.l/bl) return a.l<b.l;\n\t\tif(a.r/bl!=b.r/bl) return a.r<b.r;\n\t\treturn a.tim<b.tim;\n\t}\n}q[maxn];\nstruct change{\n\tint pos,val,lst;\n}c[maxn];\nvoid add(int v){    \n    cnt[sum[v]]--;\n    sum[v]++;\n    cnt[sum[v]]++;\n}\nvoid del(int v){\n    cnt[sum[v]]--;\n    sum[v]--;\n    cnt[sum[v]]++;\n}\nvoid upd(int i,int v){\n    if(l<=i&&i<=r){\n        del(a[i]);\n        add(v);\n    }\n    a[i]=v;\n}\nsigned main(){\n\tlen=n=read();m=read();bl=pow(n,0.666666666);\n\tfor(int i=1;i<=n;i++)\n\t\tlsh[i]=lst[i]=a[i]=read();\n\tint qnum=0,cnum=0;\n\tfor(int i=1;i<=m;i++){\n\t\tint opt=read();\n\t\tif(opt==1){\n            q[++qnum].l=read();\n            q[qnum].r=read();\n            q[qnum].tim=cnum; \n            q[qnum].id=qnum;        \n        }\n        else{\n            c[++cnum].pos=read();\n            c[cnum].lst=lst[c[cnum].pos];\n            c[cnum].val=lsh[++len]=lst[c[cnum].pos]=read();\n        }\n    }\n\tsort(q+1,q+qnum+1);\n\tsort(lsh+1,lsh+len+1);\n\tlen=unique(lsh+1,lsh+len+1)-lsh-1;\n\tfor(int i=1;i<=n;++i)\n        a[i]=lower_bound(lsh+1,lsh+len+1,a[i])-lsh;\n    for(int i=1;i<=cnum;++i){\n        c[i].lst=lower_bound(lsh+1,lsh+len+1,c[i].lst)-lsh;\n        c[i].val=lower_bound(lsh+1,lsh+len+1,c[i].val)-lsh;\n    }\n\tl=1,r=0,now=0;\n\tcnt[0]=n<<3;\n    for(int i=1;i<=qnum;i++){\n    \twhile(now<q[i].tim)++now,upd(c[now].pos,c[now].val);\n        while(now>q[i].tim)upd(c[now].pos,c[now].lst),now--;\n\t\twhile(l>q[i].l)add(a[--l]);\n\t\twhile(r<q[i].r)add(a[++r]);\n\t\twhile(l<q[i].l)del(a[l++]);\n        while(r>q[i].r)del(a[r--]);\n        for(int j=1;j<=maxn;j++){\n        \tif(!cnt[j]){\n\t\t\t\tans[q[i].id]=j;\t\n        \t\tbreak;\n\t\t\t}\n\t\t} \n    }\n    for(int i=1;i<=qnum;i++){\n    \tprint(ans[i]);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1589378923,
        "uid": 120074,
        "name": "BFqwq",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF940F \u3010Machine Learning\u3011"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u5b9a $n$ \u4e2a\u6570\u7684\u5e8f\u5217 $a$\uff0c\u6709 $m$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u6709\u5355\u70b9\u4fee\u6539\u548c\u8be2\u95ee\u533a\u95f4 $a_l, a_{l+1}, \\cdots, a_r$ \u4e2d\u6bcf\u4e2a\u6570\u7684\u51fa\u73b0\u6b21\u6570\u7684 mex\u3002\n\n## \u89e3\u6cd5\n\n\u8003\u8651\u83ab\u961f\u7ef4\u62a4\u3002\n\n\u6211\u4eec\u8981\u7ef4\u62a4 mex\uff0c\u5e76\u4e14\u662f\u5e26\u4fee\u83ab\u961f\uff0c\u6240\u4ee5\u56de\u6eda\u83ab\u961f\u7528\u4e0d\u4e86\u3002\u6211\u4eec\u8003\u8651\u5728\u83b7\u5f97\u7b54\u6848\u65f6\u66b4\u529b\u3002\n\n\u8003\u8651\u7ef4\u62a4\u4e24\u4e2a\u6570\u7ec4\uff0c\u5206\u522b\u662f $ca$ \u548c $cb$\uff0c$ca$ \u8bb0\u5f55\u6bcf\u4e2a\u6570\u51fa\u73b0\u6b21\u6570\uff0c$cb$ \u8bb0\u5f55\u6bcf\u4e2a $ca$ \u7684\u51fa\u73b0\u6b21\u6570\u3002\n\n\u8be2\u95ee\u7b54\u6848\u65f6\u4ece $1$ \u5230 $\\infty$ \u66b4\u529b\u679a\u4e3e\uff0c\u590d\u6742\u5ea6\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#pragma GCC optimize(\"-Ofast\")\n#pragma GCC target(\"avx,sse,sse2,sse3,sse4\")\n#pragma unroll 10\n#include <iostream>\n#include <algorithm>\n#include <cstdio>\n#include <vector>\n#include <cmath>\nusing namespace std;\n\nconst int N = 2e5 + 10;\n\nint a[N], len, ans[N];\nvector<int> b;\n\nint n, m, cnta, cntb;\n\nint ca[N], cb[N];\n\nstruct Query\n{\n\tint id, l, r, k;\n}q[N];\n\nstruct Modify\n{\n\tint x, y;\n}g[N];\n\ninline int read()\n{\n\tregister char ch = getchar();\n\tregister int x = 0;\n\twhile (ch < '0' || ch > '9') ch = getchar();\n\twhile (ch >= '0' && ch <= '9')\n\t{\n\t\tx = (x << 1) + (x << 3) + (ch ^ 48);\n\t\tch = getchar();\n\t}\n\treturn x;\n}\n\ninline bool cmp(const Query& x, const Query& y)\n{\n\tregister int xl = x.l / len, xr = x.r / len;\n\tregister int yl = y.l / len, yr = y.r / len;\n\tif (xl ^ yl) return xl < yl;\n\tif (xr ^ yr) return xr < yr;\n\treturn x.k < y.k;\n}\n\ninline void add(int x)\n{\n\t--cb[ca[a[x]]];\n\t++cb[++ca[a[x]]];\n}\n\ninline void del(int x)\n{\n\t--cb[ca[a[x]]];\n\t++cb[--ca[a[x]]];\n}\n\ninline void change(int x, int l, int r)\n{\n\tint rem = 0;\n\tif (g[x].x >= l && g[x].x <= r)\n\t{\n\t\t--cb[ca[a[g[x].x]]];\n\t\t++cb[--ca[a[g[x].x]]];\n\t\t--cb[ca[g[x].y]];\n\t\t++cb[++ca[g[x].y]];\n\t}\n\tswap(a[g[x].x], g[x].y);\n}\n\nint main()\n{\n\tn = read();\n\tm = read();\n\tfor (register int i = 1; i <= n; ++i)\n\t{\n\t\ta[i] = read();\n\t\tb.push_back(a[i]);\n\t}\n\tfor (register int i = 1; i <= m; ++i)\n\t{\n\t\tregister int opt = read(), l = read(), r = read();\n\t\tif (opt == 1)\n\t\t{\n\t\t\t++cnta;\n\t\t\tq[cnta] = { cnta, l, r, cntb };\n\t\t}\n\t\telse\n\t\t{\n\t\t\t++cntb;\n\t\t\tb.push_back(r);\n\t\t\tg[cntb] = { l, r };\n\t\t}\n\t}\n\tsort(b.begin(), b.end());\n\tb.erase(unique(b.begin(), b.end()), b.end());\n\tfor (register int i = 1; i <= n; ++i)\n\t{\n\t\ta[i] = lower_bound(b.begin(), b.end(), a[i]) - b.begin();\n\t}\n\tfor (register int i = 1; i <= cntb; ++i)\n\t{\n\t\tg[i].y = lower_bound(b.begin(), b.end(), g[i].y) - b.begin();\n\t}\n\tlen = pow(n, 2.0 / 3);\n\tsort(q + 1, q + cnta + 1, cmp);\n\tregister int nl = 1, nr = 0, now = 0;\n\tfor (register int i = 1; i <= cnta; ++i)\n\t{\n\t\tint l = q[i].l, r = q[i].r, k = q[i].k, ansk = 0;\n\t\twhile (nl < l) del(nl++);\n\t\twhile (nl > l) add(--nl);\n\t\twhile (nr < r) add(++nr);\n\t\twhile (nr > r) del(nr--);\n\t\twhile (now < k) change(++now, l, r);\n\t\twhile (now > k) change(now--, l, r);\n\t\tfor (register int j = 1; ; ++j)\n\t\t{\n\t\t\tif (!cb[j])\n\t\t\t{\n\t\t\t\tansk = j;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tans[q[i].id] = ansk;\n\t}\n\tfor (register int i = 1; i <= cnta; ++i) printf(\"%d\\n\", ans[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1645780497,
        "uid": 332914,
        "name": "happybob",
        "ccfLevel": 6,
        "title": "CF940F Machine Learning"
    },
    {
        "content": "# Machine Learning \u9898\u89e3\n\n\u524d\u7f6e\u829d\u58eb\uff1a[\u5e26\u4fee\u83ab\u961f](https://www.luogu.com.cn/blog/s19418/mu-dui-xue-xi-bi-ji)\n\n\u9996\u5148\u770b\u5230\u8fd9\u9898\u662f\u533a\u95f4\u95ee\u9898\uff0c\u7b2c\u4e00\u4e2a\u60f3\u5230\u7ebf\u6bb5\u6811\u3002\u4f46\u662f\u770b\u5230\u4e86\u8981\u6c42mex\uff0c\u7acb\u523b\u5426\u5b9a\u6b64\u60f3\u6cd5\u3002\n\n\u4e00\u822c\u7684mex\u90fd\u662f\u7528\u83ab\u961f\u505a\u7684\uff0c\u6240\u4ee5\u8003\u8651\u7528\u83ab\u961f\u3002\n\n\u770b\u5230\u6709\u4fee\u6539\u90a3\u80af\u5b9a\u662f\u5e26\u4fee\u83ab\u961f\u3002\n\n\u4f46\u662f\u83ab\u961f\u6c42mex\u4e00\u822c\u662f\u7528\u56de\u6eda\u83ab\u961f\uff0c\u96be\u9053\u8981\u7528\u201c\u5e26\u4fee\u56de\u6eda\u83ab\u961f\u201d\uff08\u4ec0\u4e48\u9b3c\uff09\uff1f\n\n\u4f46\u662f\u770b\u5230\u662f\u6c42\u8fd9\u4e2a\u533a\u95f4\u91cc\u6570\u5b57\u51fa\u73b0\u6b21\u6570\u7684mex\uff0c\u611f\u89c9\u6709\u8e4a\u8df7\u3002\n\n\u60f3\u60f3\u66b4\u529b\u5982\u4f55\u6c42mex\uff0c\u679a\u4e3e\u6bcf\u4e2a\u6570\uff0c\u770b\u770b\u51fa\u73b0\u6ca1\u6709\uff0c\u77e5\u9053\u8fd9\u4e2a\u6570\u6ca1\u6709\u5c31\u8f93\u51fa\u3002\n\n\u5047\u8bbemex\u6700\u5927\u53d6 $x$\uff0c\u663e\u7136\u6570\u5b57\u6700\u591a\u6709 $\\frac{x(x+1)}{2}$ \u4e2a\uff08\u5373\u7c7b\u4f3c\u8fd9\u6837\u7684\u6570\u5217\uff1a$1223334444...$\uff09\u3002\n\n\u56e0\u4e3a\u6570\u5217\u5927\u5c0f $n\\leq 10^5$\uff0c\u6240\u4ee5 $\\frac{x(x+1)}{2}\\leq 10^5$\uff0c\u90a3 $x$ \u5e94\u8be5\u662f $\\sqrt{n}$ \u7ea7\u522b\u7684\u3002\n\n\u90a3\u679a\u4e3e\u7684\u8bdd\u5c31\u8981\u679a\u4e3e $\\sqrt{n}$ \u6b21\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f $O(n^\\frac{5}{3}+n^\\frac{2}{3})=O(n^\\frac{5}{3})$\uff0c\u80fd\u5728\u89c4\u5b9a\u65f6\u95f4\u5185\u8fd0\u884c\u3002\n\n\u4e8e\u662f\u4ee3\u7801\u5c31\u6765\u54af\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define N 100005\nint n,m,a[N],h[N<<1],len;\nstruct Query{int l,r,pre,id;} q[N];\nstruct Change{int p,c;} c[N];\nint qnum,cnum;\nint block,pos[N];\nint cnt[N<<1],cnt2[N<<1],l,r,t;\nint res,ans[N];\n#undef N\n\ninline int read(){\n    int x(0),y(1);\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')y=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}\n    return x*y;\n}\n\ninline void Hash(){\n    sort(h+1,h+1+len);len=unique(h+1,h+1+len)-h-1;\n    for(int i(1);i<=n;++i) a[i]=lower_bound(h+1,h+1+len,a[i])-h;\n    for(int i(1);i<=cnum;++i) c[i].c=lower_bound(h+1,h+1+len,c[i].c)-h;\n}\ninline void Add(int x){\n    --cnt2[cnt[x]];\n    ++cnt2[++cnt[x]];\n}\ninline void Del(int x){\n    --cnt2[cnt[x]];\n    ++cnt2[--cnt[x]];\n}\ninline void Update(int x){\n    if(c[x].p>=l&&c[x].p<=r){\n        Add(c[x].c);\n        Del(a[c[x].p]);\n    }\n    swap(c[x].c,a[c[x].p]);\n}\ninline void Setblock(){\n    block=pow(n,2.0/3.0);\n    for(int i(1);i<=n;++i) pos[i]=(i-1)/block+1;\n}\ninline bool cmp(const Query& a,const Query& b){\n    if(pos[a.l]!=pos[b.l]) return pos[a.l]<pos[b.l];\n    if(pos[a.r]!=pos[b.r]) return pos[a.l]&1?pos[a.r]<pos[b.r]:pos[a.r]>pos[b.r];\n    return pos[a.r]&1?a.pre<b.pre:a.pre>b.pre;\n}\ninline void Solve(){\n    sort(q+1,q+1+qnum,cmp);\n    for(int i(1);i<=qnum;++i){\n        while(l<q[i].l) Del(a[l++]);\n        while(r<q[i].r) Add(a[++r]);\n        while(l>q[i].l) Add(a[--l]);\n        while(r>q[i].r) Del(a[r--]);\n        while(t<q[i].pre) Update(++t);\n        while(t>q[i].pre) Update(t--);\n        for(res=1;cnt2[res];++res);\n        ans[q[i].id]=res;\n    }\n    for(int i(1);i<=qnum;++i) cout<<ans[i]<<endl;\n}\n\nint main(){\n    n=read();m=read();\n    for(int i(1);i<=n;++i) a[i]=h[++len]=read();\n    for(int i(1);i<=m;++i){\n        int op;cin>>op;\n        if(op==1){\n            ++qnum;\n            q[qnum].l=read();q[qnum].r=read();\n            q[qnum].pre=cnum;\n            q[qnum].id=qnum;\n        } else{\n            ++cnum;\n            c[cnum].p=read();c[cnum].c=read();\n            h[++len]=c[cnum].c;\n        }\n    }\n    Hash();\n    Setblock();\n    Solve();\n    return 0;\n}\n```",
        "postTime": 1644934133,
        "uid": 554574,
        "name": "gyyyyx",
        "ccfLevel": 0,
        "title": "Machine Learning"
    },
    {
        "content": "## \u601d\u8def\n\n\u4e00\u9053\u5e26\u4fee\u83ab\u961f\u6a21\u677f\u9898\u3002\n\n\u770b\u5230\u9898\u610f\u4e2d\u201c\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\u6570\u5b57\u51fa\u73b0\u6b21\u6570 $mex$\u201d \u7684\u64cd\u4f5c\u540e\uff0c\u4e0d\u96be\u60f3\u5230\u7528\u5e26\u4fee\u83ab\u961f\u7ef4\u62a4\uff0c\u4f46\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u6b63\u786e\u6027\u9700\u8981\u8bc1\u660e\u3002\n\n\u5047\u8bbe\u533a\u95f4\u5f53\u524d\u533a\u95f4\u7684 $mex$ \u4e3a $n$\uff0c\u5219\u8fd9\u4e2a\u533a\u95f4\u7684\u6570\u7684\u4e2a\u6570\u81f3\u5c11\u4e3a \n\n$$\\sum\\limits_{i = 1}^{n}i = \\dfrac{n(n + 1)}{2}$$\n\n\u6240\u4ee5\u4efb\u4f55\u533a\u95f4\u7684\u7b54\u6848\u80af\u5b9a\u5728 $O(\\sqrt{n})$ \u7ea7\u522b\uff0c\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u67e5\u627e $mex$\u3002\n\n\u4ee3\u7801\u4e2d\u4e5f\u6709\u4e00\u4e9b\u8981\u6ce8\u610f\u7684\u7ec6\u8282\uff1a$x_i$ \u6700\u5927\u53ef\u4ee5\u4e3a $10^9$\uff0c\u6240\u4ee5\u5e8f\u5217\u4e2d\u7684\u6570\u548c\u4fee\u6539\u4e2d\u7684\u6570\u90fd\u5fc5\u987b\u79bb\u6563\u5316\u3002\n\n\u7edf\u8ba1\u65f6\u5f00\u4e24\u4e2a\u6570\u7ec4\uff0c\u4e00\u4e2a\u6570\u7ec4 `cnt` \u7edf\u8ba1\u6bcf\u4e2a\u6570\u51fa\u73b0\u4e86\u51e0\u6b21\uff0c`tot` \u7edf\u8ba1\u8fd9\u4e2a\u51fa\u73b0\u6b21\u6570\u51fa\u73b0\u4e86\u51e0\u6b21\u3002\u7531\u4e8e `add` \u548c `del` \u64cd\u4f5c\u90fd\u4f1a\u4f7f `tot` \u6570\u7ec4\u6539\u53d8\u4e24\u6b21\uff0c\u6240\u4ee5\u6bcf\u6b21\u64cd\u4f5c\u90fd\u8981\u66f4\u65b0\u4e24\u904d $mex$\u3002\u5177\u4f53\u64cd\u4f5c\u5982\u4e0b\uff1a\n\n```cpp\nvoid add(int x) {\n    tot[cnt[x]]--;\n    if(tot[cnt[x]] == 0) {\n        mex = min(mex, cnt[x]); //\u53ef\u80fd\u51fa\u73b0\u4e86\u66f4\u5c0f\u7684\u7b54\u6848\n    }\n    cnt[x]++;\n    tot[cnt[x]]++;\n    if(tot[cnt[x]] == 1 && mex == cnt[x]) { //\u5f53\u524d\u7b54\u6848\u5df2\u7ecf\u51fa\u73b0\uff0c\u5411\u4e0a\u5bfb\u627e\u7b26\u5408\u8981\u6c42\u7684 mex\n        for(int i = mex; i <= siz; i++) {\n            if(tot[i + 1] == 0) {\n                mex = i + 1;\n                break;\n            }\n        }\n    }\n}\n\nvoid del(int x) {\n    tot[cnt[x]]--;\n    if(tot[cnt[x]] == 0) {\n        mex = min(mex, cnt[x]); //\u53ef\u80fd\u51fa\u73b0\u4e86\u66f4\u5c0f\u7684\u7b54\u6848\n    }\n    cnt[x]--;\n    tot[cnt[x]]++;\n    if(tot[cnt[x]] == 1 && mex == cnt[x]) { //\u5f53\u524d\u7b54\u6848\u5df2\u7ecf\u51fa\u73b0\uff0c\u5411\u4e0a\u5bfb\u627e\u7b26\u5408\u8981\u6c42\u7684 mex\n        for(int i = mex; i <= siz; i++) {\n            if(tot[i + 1] == 0) {\n                mex = i + 1;\n                break;\n            }\n        }\n    }\n}\n```\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nstruct Query {\n    int l, r, t, id;\n};\n\nstruct Change {\n    int pos, v;\n};\n\nconst int MAXN = 100000 * 2 + 5;\n\nQuery q[MAXN];\nChange c[MAXN];\nint v[MAXN], cnt[MAXN], tot[MAXN], ans[MAXN], a[MAXN];\nint cntQ, cntC;\nint n, m, t, siz, mex = 1;\n\nbool cmp(Query& a, Query& b) {\n    if(a.l / t != b.l / t) {\n        return a.l < b.l;\n    }\n    if(a.r / t != b.r / t) {\n        return a.r < b.r;\n    }\n    return a.t < b.t;\n}\n\nvoid add(int x) {\n    tot[cnt[x]]--;\n    if(tot[cnt[x]] == 0) {\n        mex = min(mex, cnt[x]);\n    }\n    cnt[x]++;\n    tot[cnt[x]]++;\n    if(tot[cnt[x]] == 1 && mex == cnt[x]) {\n        for(int i = mex; i <= siz; i++) {\n            if(tot[i + 1] == 0) {\n                mex = i + 1;\n                break;\n            }\n        }\n    }\n}\n\nvoid del(int x) {\n    tot[cnt[x]]--;\n    if(tot[cnt[x]] == 0) {\n        mex = min(mex, cnt[x]);\n    }\n    cnt[x]--;\n    tot[cnt[x]]++;\n    if(tot[cnt[x]] == 1 && mex == cnt[x]) {\n        for(int i = mex; i <= siz; i++) {\n            if(tot[i + 1] == 0) {\n                mex = i + 1;\n                break;\n            }\n        }\n    }\n}\n\nvoid modify(int i, int t) {\n    if(q[i].l <= c[t].pos && c[t].pos <= q[i].r) {\n        del(a[c[t].pos]);\n        add(c[t].v);\n    }\n    swap(a[c[t].pos], c[t].v);\n}\n\nint main() {\n    scanf(\"%d%d\", &n, &m);\n    t = pow(n, 2.0 / 3);\n    for(int i = 1; i <= n; i++) {\n        scanf(\"%d\", &a[i]);\n        v[++siz] = a[i];\n    }\n    for(int i = 1; i <= m; i++) {\n        int op;\n\n        scanf(\"%d\", &op);\n        if(op == 1) {\n            cntQ++;\n            scanf(\"%d%d\", &q[cntQ].l, &q[cntQ].r);\n            q[cntQ].t = cntC;\n            q[cntQ].id = cntQ;\n        } else {\n            cntC++;\n            scanf(\"%d%d\", &c[cntC].pos, &c[cntC].v);\n            v[++siz] = c[cntC].v;\n        }\n    }\n    sort(v + 1, v + siz + 1);\n    siz = unique(v + 1, v + siz + 1) - (v + 1);\n    for(int i = 1; i <= n; i++) {\n        a[i] = lower_bound(v + 1, v + siz + 1, a[i]) - v;\n    }\n    for(int i = 1; i <= cntC; i++) {\n        c[i].v = lower_bound(v + 1, v + siz + 1, c[i].v) - v;\n    }\n    sort(q + 1, q + cntQ + 1, cmp);\n    int l = 1, r = 0, t = 0;\n    for(int i = 1; i <= cntQ; i++) {\n        while(l > q[i].l) add(a[--l]);\n        while(r < q[i].r) add(a[++r]);\n        while(l < q[i].l) del(a[l++]);\n        while(r > q[i].r) del(a[r--]);\n        while(t < q[i].t) modify(i, ++t);\n        while(t > q[i].t) modify(i, t--);\n        ans[q[i].id] = mex;\n    }\n    for(int i = 1; i <= cntQ; i++) {\n        printf(\"%d\\n\", ans[i]);\n    }\n\n    return 0;\n}\n\n```",
        "postTime": 1642220126,
        "uid": 132435,
        "name": "\u667a\u5b50",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF940F Machine Learning"
    },
    {
        "content": "# \u9898\u610f\n\n \u8be2\u95ee\u533a\u95f4\u5185 **\u6700\u5c0f** \u672a\u51fa\u73b0\u7684**\u6570\u5b57\u6b21\u6570**\n \n \u5177\u4f53\u53ef\u770b\u4e0b\u6587\u4e2d $cnt$ \u6570\u7ec4\u5b9a\u4e49\n\n# \u7b97\u6cd5\n\n\u666e\u901a\u7684\u5e26\u4fee\u83ab\u961f\uff0c\u518d\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\u5185\u51fa\u73b0\u76f8\u540c\u6b21\u6570\u7684\u6570\u5b57\u4e2a\u6570\u3002\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF940F)\n\n[\u4e2a\u4eba\u535a\u5ba2](https://www.luogu.com.cn/blog/yanhangyn/)\n\n# \u5177\u4f53\u601d\u8def\n\n\u5e26\u4fee\u83ab\u961f\u7684\u57fa\u672c\u5e38\u8bc6\u5728\u6b64\u4e0d\u518d\u8d58\u8ff0\u3002\n\n[\u5173\u4e8e\u83ab\u961f\u5f88\u597d\u7684\u4e00\u7bc7\u535a\u5ba2](https://www.cnblogs.com/WAMonster/p/10118934.html)\n\n\u5f53\u6211\u4eec\u518d\u79fb\u52a8 $l,r$ \u65f6\uff0c\u5bf9\u4e8e\u8981\u65b0\u52a0\u5165\u533a\u95f4\u6570\uff0c\u6211\u4eec\u8981\u4fee\u6539\u4e24\u4e2a\u6570\u7ec4\u3002\n\n1. $used$ \u6570\u7ec4\uff0c\u8be5\u6570\u7ec4\u7528\u4e8e\u7edf\u8ba1\u533a\u95f4 $[l,r]$ \u4e4b\u95f4\u6570\u5b57 $i$ \u51fa\u73b0\u7684\u6b21\u6570\u3002\n\n2. $cnt$ \u6570\u7ec4\uff0c\u8be5\u6570\u7ec4\u7528\u4e8e\u7edf\u8ba1\u533a\u95f4 $[l,r]$ \u4e4b\u95f4\u51fa\u73b0 $j$ \u6b21\u7684\u6570\u5b57\u4e2a\u6570\u3002\n\n\u5982\u5728 $ 1,2,3,1,1,2,2,2,9,9$ \u6570\u5217\u4e2d\uff0c\u5f53 $l=2,r=8$ \u65f6\n\n$used[1]=2$\uff0c$used[2]=4$\uff0c$used[3]=1$\uff0c$used[4]=0$\uff0c\n$used[5]=0$\uff0c$used[6]=0$\uff0c$used[7]=0$\uff0c$used[8]=0$\uff0c$used[9]=0$ $......$\n\n$cnt[1]=1$\uff0c$cnt[2]=1$\uff0c$cnt[3]=0$\uff0c$cnt[4]=1$\uff0c$cnt[5]=0$ $......$\n\n\u800c\u6b64\u65f6\u5728 $cnt$ \u4e2d \u201c\u6700\u5c0f\u7684\u672a\u51fa\u73b0\u7684\u81ea\u7136\u6570\u201d \u5c31\u662f $3$ \n\n# \u5982\u4f55\u7ef4\u62a4\n\n\u9996\u5148\u5bf9\u6240\u6709\u8f93\u5165\u7684\u6570\u636e\u8fdb\u884c\u79bb\u6563\u5316\uff0c\u5305\u62ec\u539f\u6570\u5217\uff0c\u8981\u4fee\u6539\u7684\u6570\u3002\n\n**\u5bf9\u4e8e $used$ \u6570\u7ec4**\uff0c\u548c\u666e\u901a\u83ab\u961f\u4e00\u6837\u7ef4\u62a4\n\n```cpp\nwhile(r<b[o].r)\tans+=!used[a[++r]]++;\nwhile(r>b[o].r)\tans-=!--used[a[r--]];\nwhile(l<b[o].l)\tans-=!--used[a[l++]];\nwhile(l>b[o].l)\tans+=!used[a[--l]]++;\n```\n\n**\u5bf9\u4e8e $cnt$ \u6570\u7ec4** \n\n\u5047\u8bbe\u539f\u672c\u5e8f\u5217\u4e2d\u6709 $k$ \u4e2a\u6570\u7b49\u4e8e $a_i$\n,\u90a3\u4e48\n\n**\u5f53\u4e00\u4e2a\u6570 $a_i$ \u52a0\u8fdb\u6765\u65f6\uff0c**\n\n$cnt[k]--$\n\n$cnt[k+1]++ $\n\n**\u51cf\u53bb\u4e00\u4e2a $a_i$ \u65f6**\n\n$cnt[k+1]--$\n\n$cnt[k]++$ \n\n\u4ee3\u7801\u89c1\u4e0b\n\n```cpp\nwhile(r<b[o].r)\t--cnt[used[a[r+1]]],++cnt[used[a[r+1]]+1];\nwhile(r>b[o].r)\t--cnt[used[a[r]]],++cnt[used[a[r]]-1];\nwhile(l<b[o].l)\t--cnt[used[a[l]]],++cnt[used[a[l]]-1];\nwhile(l>b[o].l)\t--cnt[used[a[l-1]]],++cnt[used[a[l-1]]+1];\n```\n**\u5bf9\u4e8e\u65f6\u95f4 $t$ \u7ef4\u62a4**\uff0c\n\n\u56e0\u4e3a\u6539\u53d8 $t$ \u800c\u4fee\u6539\u4e00\u4e2a\u6570\u65f6\uff0c\u5148\u5224\u65ad\u8be5\u6570\u662f\u4e0d\u662f\u5728 $[l,r]$ \u4e4b\u95f4\n\n\u82e5\u4e0d\u5728\uff0c\u5219\u76f4\u63a5\u4fee\u6539\n\n\u672c\u5904\u5c06\u539f\u6570\u4e0e\u8981\u6539\u6210\u7684\u6570\u4ea4\u6362\uff0c\u56e0\u4e3a\u5c06\u65f6\u95f4\u5012\u56de\u65f6\uff0c\u8981\u5c06\u6570\u8fd8\u539f\u3002\u5177\u4f53\u53ef\u4ee5\u81ea\u5df1\u4ee3\u5165\u5206\u6790\u3002\n\n**\u82e5\u5728\u533a\u95f4\u5185**\n\n\u4fee\u6539\u4e00\u4e2a\u6570\u7b49\u4e8e\u51cf\u53bb\u4e00\u4e2a\u6570\uff0c\u518d\u52a0\u4e0a\u4e00\u4e2a\u6570\n\n\u5219\u91cd\u590d\u7c7b\u4f3c\u4e0a\u9762\u5bf9\u4e8e $cnt$ \u7684\u64cd\u4f5c\uff0c\u5148\u51cf\u53bb\u88ab\u4fee\u6539\u6570\uff0c\u518d\u52a0\u4e0a\u6539\u6210\u7684\u6570\u3002\n\n**\u6ce8\uff1a$c[i].num$ \u4ee3\u8868\u8981\u4fee\u6539\u6570\u4f4d\u7f6e\uff0c $c[i].col$ \u4ee3\u8868\u8981\u6539\u6210\u7684\u6570**\n\n```cpp\nint nnn=c[tim].num;\n--cnt[used[a[nnn]]];\n++cnt[used[a[nnn]]-1];\nans-=!--used[a[nnn]];\nswap(a[nnn],c[tim].col);\n--cnt[used[a[nnn]]];\n++cnt[used[a[nnn]]+1];\nans+=!used[a[nnn]]++;\n```\n\n**\u7efc\u4e0a\u6240\u8ff0 \u5173\u952e\u4ee3\u7801\u4e3a**\uff1a\n\n```cpp\nwhile(p--){\n\twhile(r<b[o].r)\t--cnt[used[a[r+1]]],++cnt[used[a[r+1]]+1],ans+=!used[a[++r]]++;\n\twhile(r>b[o].r)\t--cnt[used[a[r]]],++cnt[used[a[r]]-1],ans-=!--used[a[r--]];\n\twhile(l<b[o].l)\t--cnt[used[a[l]]],++cnt[used[a[l]]-1],ans-=!--used[a[l++]];\n\twhile(l>b[o].l)\t--cnt[used[a[l-1]]],++cnt[used[a[l-1]]+1],ans+=!used[a[--l]]++;\n\twhile(tim<b[o].t){\n\t\tif(c[++tim].num>=b[o].l && c[tim].num<=b[o].r){\n\t\t\tint nnn=c[tim].num;\n\t\t\t--cnt[used[a[nnn]]];\n\t\t\t++cnt[used[a[nnn]]-1];\n\t\t\tans-=!--used[a[nnn]];\n\t\t\tswap(a[nnn],c[tim].col);\n\t\t\t--cnt[used[a[nnn]]];\n\t\t\t++cnt[used[a[nnn]]+1];\n\t\t\tans+=!used[a[nnn]]++;\n\t\t}\n\t\telse\tswap(a[c[tim].num],c[tim].col);\n\t}\n\twhile(tim>b[o].t){\n\t\tif(c[tim].num>=b[o].l && c[tim].num<=b[o].r){\n\t\t\tint nnn=c[tim].num;\n\t\t\t--cnt[used[a[nnn]]];\n\t\t\t++cnt[used[a[nnn]]-1];\n\t\t\tans-=!--used[a[nnn]];\n\t\t\tswap(a[nnn],c[tim].col);\n\t\t\t--cnt[used[a[nnn]]];\n\t\t\t++cnt[used[a[c[tim--].num]]+1];\n\t\t\tans+=!used[a[nnn]]++;\n\t\t}\n\t\telse\tswap(a[c[tim].num],c[tim].col),tim--;\n\t}\n\tint c=0;\n\twhile(cnt[++c]);\n\tla[b[o].num]=c,++o;\n}\t\n```\n**\u90e8\u5206\u8bf4\u660e\uff1a$d$ \u6570\u7ec4\uff0c$cha$ \u7b49\u7528\u4e8e\u79bb\u6563\u5316**\n\n\u4ee3\u7801\u8f83\u4e11\uff0c\u5404\u4f4d\u89c1\u8c05\n\n# \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read(){\n\tint x=0,f=1;\n\tchar ch=getchar(); \n\twhile(!isdigit(ch)){\n\t\tif(ch=='-')\tf=-1;\n\t\tch=getchar(); \n\t}\n\twhile(isdigit(ch)){\n\t\tx=x*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn x*f;\n}\nint n,m,q;\nint a[200000];\nint used[200000],cnt[200000];\nstruct node{\n\tint l,r,num,lk,rk,t;\n}b[200000];\nstruct node2{\n\tint num,col;\t\n}c[200000];\nstruct node3{\n\tbool f;\n\tint v,num;\n}d[500000];\ninline bool cmp2(node3 x,node3 y){\n\treturn x.v<y.v;\n}\ninline bool cmp(node x,node y){\n\tif(x.lk==y.lk){\n\t\tif(x.rk==y.rk)\treturn x.t<y.t;\n\t\treturn x.rk<y.rk;\n\t} \n\treturn x.lk<y.lk;\n}\nint la[200000];\nint l,r,ans,o=1,pro,cha,tim,tot;\nint main(){\n\tn=read(),m=2500,q=read();\n\tfor(register int i=1;i<=n;++i)\n\t\td[i].v=read(),d[i].f=1,d[i].num=i;\n\tfor(register int i=1;i<=q;++i){\n\t\tint z;\n\t\tint x,y;\n\t\tz=read();\n\t\tx=read(),y=read();\n\t\tif(z==1){\n\t\t\t++pro;\n\t\t\tb[pro].l=x;\n\t\t\tb[pro].r=y;\n\t\t\tb[pro].lk=(b[pro].l-1)/m+1;\n\t\t\tb[pro].rk=(b[pro].r-1)/m+1;\n\t\t\tb[pro].num=pro; \n\t\t\tb[pro].t=cha;\n\t\t} \n\t\telse{\n\t\t\t++cha;\n\t\t\tc[cha].num=x;\n\t\t\tc[cha].col=y;\n\t\t\td[n+cha].v=y;\n\t\t\td[n+cha].f=0;\n\t\t\td[n+cha].num=cha;\n\t\t}\n\t}\n\tsort(d+1,d+n+cha+1,cmp2);\n\tfor(int i=1;i<=n+cha;++i){\n\t\tif(d[i-1].v!=d[i].v)\t++tot;\n\t\tif(d[i].f)\n\t\t\ta[d[i].num]=tot;\n\t\telse\n\t\t\tc[d[i].num].col=tot;\n\t}\n\tsort(b+1,b+pro+1,cmp);\n\tl=b[1].l,r=b[1].l-1;\n\tint p=pro;\n\twhile(p--){\n\t\twhile(r<b[o].r)\t--cnt[used[a[r+1]]],++cnt[used[a[r+1]]+1],ans+=!used[a[++r]]++;\n\t\twhile(r>b[o].r)\t--cnt[used[a[r]]],++cnt[used[a[r]]-1],ans-=!--used[a[r--]];\n\t\twhile(l<b[o].l)\t--cnt[used[a[l]]],++cnt[used[a[l]]-1],ans-=!--used[a[l++]];\n\t\twhile(l>b[o].l)\t--cnt[used[a[l-1]]],++cnt[used[a[l-1]]+1],ans+=!used[a[--l]]++;\n\t\twhile(tim<b[o].t){\n\t\t\tif(c[++tim].num>=b[o].l && c[tim].num<=b[o].r){\n\t\t\t\tint nnn=c[tim].num;\n\t\t\t\t--cnt[used[a[nnn]]];\n\t\t\t\t++cnt[used[a[nnn]]-1];\n\t\t\t\tans-=!--used[a[nnn]];\n\t\t\t\tswap(a[nnn],c[tim].col);\n\t\t\t\t--cnt[used[a[nnn]]];\n\t\t\t\t++cnt[used[a[nnn]]+1];\n\t\t\t\tans+=!used[a[nnn]]++;\n\t\t\t}\n\t\t\telse\tswap(a[c[tim].num],c[tim].col);\n\t\t}\n\t\twhile(tim>b[o].t){\n\t\t\tif(c[tim].num>=b[o].l && c[tim].num<=b[o].r){\n\t\t\t\tint nnn=c[tim].num;\n\t\t\t\t--cnt[used[a[nnn]]];\n\t\t\t\t++cnt[used[a[nnn]]-1];\n\t\t\t\tans-=!--used[a[nnn]];\n\t\t\t\tswap(a[nnn],c[tim].col);\n\t\t\t\t--cnt[used[a[nnn]]];\n\t\t\t\t++cnt[used[a[c[tim--].num]]+1];\n\t\t\t\tans+=!used[a[nnn]]++;\n\t\t\t}\n\t\t\telse\tswap(a[c[tim].num],c[tim].col),tim--;\n\t\t}\n\t\tint c=0;\n\t\twhile(cnt[++c]);\n\t\tla[b[o].num]=c,++o;\n\t}\t\n\tfor(register int i=1;i<=pro;i++)\tprintf(\"%d\\n\",la[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1616334361,
        "uid": 202606,
        "name": "\u8f7b\u7ed8",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF940F Machine Learning"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5e26\u4fee\u83ab\u961f+\u79bb\u6563\u5316\uff08\u4e00\u5f00\u59cb\uff0c\u6211\u61d2\u5f97\u6253\u79bb\u6563\u5316\uff0c\u7528\u7684map\u4f46\u8d85\u65f6\u4e86\u3002\u3002\u3002\uff09\n\n\u5e26\u4fee\u83ab\u961f\u7684\u6a21\u677f\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\uff0c\u4e3b\u8981\u8003\u8651$add$\uff0c$del$\u8fd9\u4e24\u4e2a\u51fd\u6570\u8fd8\u6709\u7b54\u6848\u5982\u4f55\u8bb0\u5f55\u3002\n\u8fd9\u4e2a$mex$\u6211\u770b\u4e86\u597d\u4e00\u4f1a\u624d\u5f04\u660e\u767d\u662f\u4ec0\u4e48\uff0c\u5c31\u7528\u6837\u4f8b\u4e3e\u4f8b\uff1a\u5bf9\u4e8e\u7b2c\u4e8c\u67e5\u8be2\uff0c\u51fa\u73b0\u4e861\u4e2a3\uff0c2\u4e2a1\u548c4\u4e2a2\uff0c\u6bcf\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\u4e2d\uff0c3\u662f\u672a\u51fa\u73b0\u7684\u6700\u5c0f\u81ea\u7136\u6570\uff0c\u8fd9\u5c31\u662f\u6837\u4f8b\u7684\u7531\u6765\u3002\u6211\u4eec\u5c31\u53ef\u4ee5\u5b9a\u4e24\u4e2a\u6570\u7ec4$cnt[i]$,\u8868\u793a$i$\u8fd9\u4e2a\u6570\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\uff0c$dcnt[i]$,\u8868\u793a\u51fa\u73b0i\u6b21\u7684\u6b21\u6570\u662f\u591a\u5c11\uff08\u8fd9\u91cc\u9700\u8981\u4ed4\u7ec6\u601d\u8003\uff09\uff0c\u540e\u5177\u64cd\u4f5c\u89c1\u4ee3\u7801\u3002\n\n\u627e\u7b54\u6848\u65f6\uff0c\u53ef\u4ee5\u66b4\u529b\u4ece\u4e00\u5f00\u59cb\u679a\u4e3e\uff0c\u6700\u574f\u7684\u60c5\u51b5\u4f1a\u679a\u4e3e$\\sqrt{n}$\u6b21,\u5177\u4f53\u8bc1\u660e\u4e0d\u518d\u8d58\u8ff0\u3002\n\n\u6700\u540e\u8bb0\u5f97\u52a0\u4e0a\u79bb\u6563\u5316\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=100005;\nint a[N],dt[N],ans[N];\nint mc,mq,len,n,m;\nint b[2*N],dc;\nint cnt[2*N],dcnt[2*N];\nstruct nod{\n\tint id,l,r,t;\n}q[N];\nstruct chang{\n\tint p,c;\n}ch[N];\nbool cmp(const nod& x,const nod& y){\n\tint xl=dt[x.l],xr=dt[x.r];\n\tint yl=dt[y.l],yr=dt[y.r];\n\tif(xl!=yl)return xl<yl;\n\tif(xr!=yr)return xr<yr;\n\treturn x.t<y.t;\n}\nint find(){\n\tint i=1;\n\twhile(i){\n\t\tif(!dcnt[i])return i;\n\t\ti++;\n\t}\n}\nvoid add(int x){//\u66f4\u65b0\u533a\u95f4cnt\u548cdcnt\u7684\u503c\uff0c\u8fd9\u91cc\u9700\u8981\u4ed4\u7ec6\u4f53\u4f1a \n\tdcnt[cnt[x]]--;\n\tcnt[x]++;\n\tdcnt[cnt[x]]++;\n}\nvoid del(int x){\n\tdcnt[cnt[x]]--;\n\tcnt[x]--;\n\tdcnt[cnt[x]]++;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tlen=pow(n,2.0/3);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t\tdt[i]=(i-1)/len+1;\n\t\tb[++dc]=a[i]; \n\t}\n\tint x,y,z;\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d%d\",&z,&x,&y);\n\t\tif(z==1)mq++,q[mq].id=mq,q[mq].t=mc,q[mq].l=x,q[mq].r=y;\n\t\telse mc++,ch[mc].p=x,b[++dc]=ch[mc].c=y;\n\t}\n\tsort(b+1,b+dc+1);//\u79bb\u6563\u5316 \n\tint le=unique(b+1,b+dc+1)-b-1;\n\tfor(int i=1;i<=n;i++)\n\t\ta[i]=lower_bound(b+1,b+le+1,a[i])-b;\t\n\tfor(int i=1;i<=mc;i++){\n\t\tch[i].c=lower_bound(b+1,b+le+1,ch[i].c)-b;\n\t}\n\tsort(q+1,q+mq+1,cmp);\n\tint l=1,r=0,t=0;\n\tfor(int i=1;i<=mq;i++){//\u5e26\u4fee\u83ab\u961f\u6a21\u677f \n\t\twhile(l>q[i].l)add(a[--l]);\n\t\twhile(l<q[i].l)del(a[l++]);\n\t\twhile(r>q[i].r)del(a[r--]);\n\t\twhile(r<q[i].r)add(a[++r]);\n\t\twhile(t<q[i].t){\n\t\t\tt++;\n\t\t\tif(ch[t].p>=l&&ch[t].p<=r){\n\t\t\t\tdel(a[ch[t].p]);\n\t\t\t\tadd(ch[t].c);\n\t\t\t}\n\t\t\tswap(ch[t].c,a[ch[t].p]);\t\t\t\n\t\t}\n\t\twhile(t>q[i].t){\n\t\t\tif(ch[t].p>=l&&ch[t].p<=r){\n\t\t\t\tdel(a[ch[t].p]);\n\t\t\t\tadd(ch[t].c);\n\t\t\t}\n\t\t\tswap(ch[t].c,a[ch[t].p]);\n\t\t\tt--;\n\t\t}\n\t\tans[q[i].id]=find();//\u66b4\u529b\u679a\u4e3e\u7b54\u6848 \n\t}\n\tfor(int i=1;i<=mq;i++){\n\t\tprintf(\"%d\\n\",ans[i]);\n\t}\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1612271789,
        "uid": 277664,
        "name": "\u968f\u4fbfAK",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF940F \u3010Machine Learning\u3011"
    },
    {
        "content": "### [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF940F)\n\n## \u9898\u610f\n\n- \u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217\uff0c\u6709\u4e24\u79cd\u64cd\u4f5c\u3002\n\n- \u7b2c\u4e00\u79cd \u4fee\u6539\u67d0\u4f4d\u6570\u503c\u3002\n\n- \u7b2c\u4e8c\u79cd \u67e5\u8be2\u533a\u95f4\u5185\u5404\u6570\u7684\u51fa\u73b0\u6b21\u6570\u4e4b\u4e2d\u6700\u5c0f\u7684\u6ca1\u51fa\u73b0\u8fc7\u7684\u6b63\u6570\uff08\u663e\u7136 $0$ \u4e0d\u53ef\u80fd\u5b58\u5728\uff09\u3002\n\n## Sol\n\n\u5e26\u4fee\u83ab\u961f\u6a21\u677f\u3002\n\n\u56e0\u4e3a\u53ef\u4ee5\u53d1\u73b0\u6bcf\u4e2a\u503c\u5177\u4f53\u662f\u5565\u6ca1\u5565\u7528\uff0c\u6211\u4eec\u5173\u6ce8\u7684\u662f\u5b83\u7684**\u51fa\u73b0\u6b21\u6570**\u3002\n\n\u6240\u4ee5\u9700\u8981**\u79bb\u6563\u5316**\uff0c\u4e0d\u7136\u4f1a $\\text{MLE}$\u3002\n\n\u4fee\u6539\u64cd\u4f5c\u5bfb\u5e38\uff0c\u8bb0\u5f55\u65f6\u95f4\u7ef4\u5ea6\u5373\u53ef\u3002\n\n\u6211\u4eec\u8003\u8651\u67e5\u8be2\u64cd\u4f5c\u3002\n\n\u6211\u4eec\u53d1\u73b0\u5728\u6bcf\u4e00\u6b21\u4fee\u6539\u65f6\uff0c\u6211\u4eec\u6ca1\u529e\u6cd5 $O(1)$ \u66f4\u65b0\u7b54\u6848\u3002/kk\n\n\u6bd4\u5982 $\\text{1 0 1 1 0} \\to \\text{1 1 1 1 0}$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u5728\u6240\u6709\u4fee\u6539\u53ca\u79fb\u52a8\u5b8c\u6210\u540e\uff0c\u5728\u6700\u540e\u66b4\u529b\u6c42\u7b54\u6848\u3002\n\n\u5c31\u662f $1$ \u5f00\u59cb\u679a\u4e3e\uff0c\u4e00\u76f4\u679a\u4e3e\u5230\u7b2c\u4e00\u4e2a\u6ee1\u8db3\u8981\u6c42\u7684\u6570\u3002\n\n\u542c\u4e0a\u53bb\u662f\u4e0d\u662f\u7279\u522b\u66b4\u529b\u3002\uff08\u5c31\u662f\u8fd9\u4e48\u66b4\u529b\n\n\u6211\u4eec\u6765\u5206\u6790\u6bcf\u6b21\u7684\u590d\u6742\u5ea6\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u51fa\u73b0\u6b21\u6570\uff0c\u6211\u4eec\u8003\u8651**\u6700\u52a3\u60c5\u51b5**\uff0c\u53d1\u73b0\u4e00\u79cd\u51fa\u73b0\u6b21\u6570\u53ea\u6709 $1$ \u4e2a\u624d\u662f\u6700\u52a3\u7684\u3002\n\n\u901a\u8fc7\u8fd9\u4e2a $\\sum\\limits^{\\sqrt n}_{i=1}i=\\dfrac{\\sqrt n \\times (\\sqrt{n}+1)}{2}$ \u5220\u53bb\u5e38\u6570\u540e\u7ea6\u4e3a $n$\u3002\n\n\u53ef\u5f97\u7b54\u6848\u4e25\u683c\u5c0f\u4e8e $\\sqrt {2n}$\uff0c\u7ea6\u4e3a $\\sqrt n$\u3002\n\n\u90a3\u4e48\u4e00\u6b21\u6c42\u7b54\u6848\u590d\u6742\u5ea6\u6700\u9ad8\u5373\u4e3a $\\sqrt n$\u3002\n\n\u90a3\u4e48\u6700\u7ec8\u590d\u6742\u5ea6\u5373\u4e3a $O(n^{\\frac{5}{3}}+m\\sqrt n)$\u3002\n\n```cpp\n/*\n***\n\u8fd8\u8981\u7ee7\u7eed\u52aa\u529b\n\u6210\u4e3a\u4e00\u540d\u70e4\u5495\u5b66\u5bb6\u54e6\n***\n*/\n#include<bits/stdc++.h>\n#define re register int\nusing namespace std;\ntypedef long long ll;\nconst int N=2e5+5;\nint n,m,ans[N],a[N],l=1,r,len,cnt[N],nw,qaq,qwq,lsh[N],cntcnt[N];\nstruct Question{int id,l,r,pl,pr,t;}q[N];\nstruct change{int x,to,pre;}mo[N];\ntemplate <typename T> inline void rd(T &x){\n\tint fl=1;x=0;char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') fl=-fl;\n\tfor(;isdigit(c);c=getchar()) x=(x<<3)+(x<<1)+c-'0';\n\tx*=fl;\n}\nvoid wr(int x){\n\tif(x<0) x=-x,putchar('-');\n\tif(x<10) putchar(x+'0');\n\tif(x>9) wr(x/10),putchar(x%10+'0');\n}\ninline bool cmp(Question x,Question y){\n\tif(x.pl^y.pl) return x.pl<y.pl;\n\tif(x.pr^y.pr) return x.pr<y.pr;\n\treturn x.t<y.t; \n}\ninline void update(int x,int op){\n\tcntcnt[cnt[a[x]]]--,cnt[a[x]]+=op,cntcnt[cnt[a[x]]]++;\n}\ninline void modify(int x,int op){\n\tif(mo[x].x>=l&&mo[x].x<=r){\n\t\tif(op==1){\n\t\t\tcntcnt[cnt[a[mo[x].x]]]--;\n\t\t\tcnt[a[mo[x].x]]--;\n\t\t\tcntcnt[cnt[a[mo[x].x]]]++;\n\t\t\tmo[x].pre=a[mo[x].x];a[mo[x].x]=mo[x].to;\n\t\t\tcntcnt[cnt[a[mo[x].x]]]--;\n\t\t\tcnt[a[mo[x].x]]++;\n\t\t\tcntcnt[cnt[a[mo[x].x]]]++;\n\t\t}\n\t\telse{\n\t\t\tcntcnt[cnt[a[mo[x].x]]]--;\n\t\t\tcnt[a[mo[x].x]]--;\n\t\t\tcntcnt[cnt[a[mo[x].x]]]++;\n\t\t\ta[mo[x].x]=mo[x].pre;\n\t\t\tcntcnt[cnt[a[mo[x].x]]]--;\n\t\t\tcnt[a[mo[x].x]]++;\n\t\t\tcntcnt[cnt[a[mo[x].x]]]++;\n\t\t}\n\t}\n\telse{\n\t\tif(op==1) mo[x].pre=a[mo[x].x],a[mo[x].x]=mo[x].to;\n\t\telse a[mo[x].x]=mo[x].pre;\n\t}\n}\nint main(){\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\tios::sync_with_stdio(0);\n\trd(n);rd(m);\n\tlen=(int)pow(n,2./3.);\n\tfor(re i=1;i<=n;i++) rd(a[i]),lsh[i]=a[i];\n\tfor(re i=1;i<=m;i++){\n\t\tint op;rd(op);\n\t\tif(op==2) ++qaq,rd(mo[qaq].x),rd(mo[qaq].to),lsh[qaq+n]=mo[qaq].to;\n\t\telse if(op==1) ++qwq,rd(q[qwq].l),rd(q[qwq].r),q[qwq].id=qwq,q[qwq].pl=(q[qwq].l-1)/len+1,q[qwq].pr=(q[qwq].r-1)/len+1,q[qwq].t=qaq;\n\t}\n\tsort(q+1,q+qwq+1,cmp);sort(lsh+1,lsh+n+qaq+1);\n\tll awa=unique(lsh+1,lsh+n+qaq+1)-lsh-1;\n\tfor(re i=1;i<=n;i++) a[i]=lower_bound(lsh+1,lsh+awa+1,a[i])-lsh;\n\tfor(re i=1;i<=qaq;i++) mo[i].to=lower_bound(lsh+1,lsh+awa+1,mo[i].to)-lsh; \n\tfor(re i=1;i<=qwq;i++){\n\t\twhile(l>q[i].l) --l,update(l,1);\n\t\twhile(r<q[i].r) ++r,update(r,1);\n\t\twhile(l<q[i].l) update(l,-1),l++;\n\t\twhile(r>q[i].r) update(r,-1),r--;\n\t\twhile(nw<q[i].t) ++nw,modify(nw,1);\n\t\twhile(nw>q[i].t) modify(nw,-1),nw--;\n\t\tfor(re k=1;k<N;k++)\n\t\t\tif(cntcnt[k]==0){\n\t\t\t\tans[q[i].id]=k;\n\t\t\t\tbreak;\n\t\t\t}\n\t}\n\tfor(re i=1;i<=qwq;i++) wr(ans[i]),puts(\"\");\n\treturn 0;\n}\n```",
        "postTime": 1599310780,
        "uid": 83999,
        "name": "Demoe",
        "ccfLevel": 7,
        "title": "CF940F Machine Learning \u9898\u89e3 \u5e26\u4fee\u83ab\u961f"
    },
    {
        "content": "[Problem](https://codeforces.com/contest/940/problem/F)\n\n\u7ed9\u51fa \u6570\u7ec4 $a\\{\\}$\n\n$q$\u6b21\u64cd\u4f5c\n\n1\u3001\u67e5\u8be2\u533a\u95f4$l$ ~ $r$ \u4e2d\u6bcf\u4e2a\u6570\u5b57`\u51fa\u73b0\u6b21\u6570`\u7684 $mex$\n2\u3001\u5355\u70b9\u4fee\u6539\u3002\n\n`\u51fa\u73b0\u6b21\u6570\u7684mex` \u6ce8\u610f\u4e0d\u662f\u6570\u503c\u7684 mex\n\n$1 \\leq a_i \\leq 10^9$\n\n\u8003\u8651\u79bb\u6563\u5316 \u56e0\u4e3a\u6570\u5b57\u8f83\u5927 $map$ \u81ea\u5e26 $\\log$ \u548c \u5927\u5e38\u6570\u3002\u3002\n\u7136\u540e\u7528\u5e26\u4fee\u83ab\u961f\u7ef4\u62a4\u7684\u590d\u6742\u5ea6\u5c31\u4f1a\u53d8\u6210 $n^{5/3}* log n$\n\u663e\u7136\u662f\u8dd1\u4e0d\u8fc7\u53bb\u7684\u3002\u3002\n\n\u79bb\u6563\u5316\u6709\u4e00\u4e2a\u95ee\u9898 \u5c31\u662f\u4f60\u8981\u628a\u8be2\u95ee\u4e2d\u7684\u4fee\u6539\u7684\u6570\u503c\u4e5f\u79bb\u6563\u5316\n\n\u7136\u540e \u7528\u4e00\u4e2a $cntt_i$ \u8bb0\u5f55 $i$ \u51fa\u73b0\u7684\u6b21\u6570 $tot_i$ \u8bb0\u5f55\u51fa\u73b0 $i$ \u6b21\u7684\u4e2a\u6570\n\n\u5e26\u4fee\u83ab\u961f\u6709\u4e00\u4e2a\u65f6\u95f4\u6233 \u6392\u5e8f\u5e94\u8be5\u662f\u6309 $l$\u6240\u5728\u7684\u5757 -> $r$\u6240\u5728\u7684\u5757 -> \u5f53\u524d\u4fee\u6539\u7684\u65f6\u95f4\u6233\u3002\u3002\n\n\u5e26\u4fee\u83ab\u961f\u7684\u5757\u5927\u5c0f\u5e94\u8be5\u662f $n^{2/3}$\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898\u8fd8\u6709\u4e00\u4e2a\u4e0d\u592a\u4e25\u8c28\u7684\u7ed3\u8bba\uff1a\u6c42$mex$\u7684\u590d\u6742\u5ea6\u6bcf\u6b21\u626b\u4e00\u904d\u4e0d\u4f1a\u8d85\u8fc7 $\\sqrt n$\n\n$n\\sqrt n \\le n^{5/3}$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std ;\nint n , Q ;\nvector < int > v , b ;\nconst int N = 2e5 + 10 ;\nint bl[N] ;\nstruct node { int l , r , id , t ; } q[N] ;\nstruct change { int x , val ; } c[N] ;\nint tot[N] , cntt[N] ;\ninline void add(int x) {\n  -- tot[cntt[x]] ;\n  ++ tot[++ cntt[x]] ;\n}\ninline void del(int x) {\n  -- tot[cntt[x]] ;\n  ++ tot[-- cntt[x]] ;\n}\ninline void modify(int now , int i) {\n  if(q[i].l <= c[now].x && c[now].x <= q[i].r) {\n    del(v[c[now].x]) ;\n    add(c[now].val) ;\n  } swap(v[c[now].x] , c[now].val) ;\n}\nint ans[N] ;\nsigned main() {\n  ios :: sync_with_stdio(false) ;\n  cin.tie(nullptr) ; cout.tie(nullptr) ;\n  cin >> n >> Q ; int unt = pow(n , 2.0 / 3.0) ;\n  for(register int i = 0 ; i < n ; i ++) { int x ; cin >> x ; v.push_back(x) ; }\n  for(register int i = 0 ; i < n ; i ++) { b.push_back(v[i]) ; bl[i] = (i - 1) / unt + 1 ; }\n  int cnt , cnt2 ; cnt = cnt2 = 0 ;\n  for(register int i = 0 ; i < Q ; i ++) { int opt , x , y ; cin >> opt >> x >> y ;\n    if(opt == 1) { ++ cnt ; q[cnt] = {-- x , -- y , cnt , cnt2} ; }\n    if(opt == 2) { ++ cnt2 ; c[cnt2] = { -- x , y } ; b.push_back(y) ; }\n  }\n  sort(b.begin() , b.end()) ; b.erase(unique(b.begin() , b.end()) , b.end()) ;\n  for ( int & x : v ) x = lower_bound(b.begin() , b.end() , x) - b.begin() ;\n  for(register int i = 1 ; i <= cnt2 ; i ++) { c[i].val = lower_bound(b.begin() , b.end() , c[i].val) - b.begin() ; }\n  sort(q + 1 , q + cnt + 1 , [] (node x , node y) {\n    if(bl[x.l] ^ bl[y.l]) return x.l < y.l ;\n    if(bl[x.r] ^ bl[y.r]) return x.r < y.r ;\n    return x.t < y.t ;\n  }) ;\n  int l = 1 , r = 0 , now = 0 ;\n  for(register int i = 1 ; i <= cnt ; i ++) {\n    while(l > q[i].l) add(v[-- l]) ;\n    while(r < q[i].r) add(v[++ r]) ;\n    while(l < q[i].l) del(v[l ++]) ;\n    while(r > q[i].r) del(v[r --]) ;\n    while(now < q[i].t) modify(++ now , i) ;\n    while(now > q[i].t) modify(now -- , i) ;\n    for(ans[q[i].id] = 1 ; tot[ans[q[i].id]] > 0 ; ++ ans[q[i].id]) ;\n  } for(register int i = 1 ; i <= cnt ; i ++) cout << ans[i] << '\\n' ;\n  return 0 ;\n}\n```",
        "postTime": 1572404314,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF940F \u3010Machine Learning\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u5e26\u4fee\u83ab\u961f\u7684\u6a21\u677f\u9898\uff0c\u5177\u4f53\u7ec6\u8282\u4e0d\u518d\u8d58\u8ff0\uff0c\u4f46\u662f\u6709\u4e00\u4e9b\u5b9e\u73b0\u65f6\u5019\u7684\u6280\u5de7\u8981\u6ce8\u610f\u4e00\u4e0b\u3002\n\n\u5bf9\u4e8e\u6bcf\u6b21\u7684\u65f6\u5149\u5012\u6d41\u3001\u63a8\u79fb\u64cd\u4f5c\uff0c\u9996\u5148\u5f97\u653e\u5728\u533a\u95f4\u79fb\u52a8\u540e\u9762\u505a(\u56e0\u4e3a\u653e\u5728\u524d\u9762\u505a\u6539\u7684\u5c31\u662f\u4e0a\u4e00\u4e2a\u533a\u95f4\u7684\u503c\uff0c\u4f46\u662f\u4fee\u6539\u5bf9\u5b83\u662f\u6ca1\u6709\u5f71\u54cd\u7684)\u3002\u7f51\u4e0a\u6709\u4e00\u79cd\u5e7f\u4e3a\u6d41\u4f20\u7684\u505a\u6cd5\u662f\uff1aswap(\u539f\u503c\uff0c\u4fee\u6539\u503c)\n\u8fd9\u6837\u7684\u8bdd\u63a8\u79fb\u4e00\u6b21\u518d\u5012\u6d41\u56de\u6765\uff0c\u7ed3\u679c\u662f\u4e00\u6837\u7684\u3002\n\n\u8fd8\u6709\uff0c\u5bf9\u4e8emex\u64cd\u4f5c\u590d\u6742\u5ea6\u7684\u8bc1\u660e\uff0c\u6211\u6709\u4e00\u79cd\u611f\u6027\u60f3\u6cd5:\u03a3mex[i]=n,\u5e76\u4e14\u5bf9\u4e8e\u6bcf\u6b21\u79fb\u52a8\u533a\u95f4\uff0c\u4fee\u6539\u7684mex[i]\u90fd\u4e0d\u4f1a\u5f88\u591a\uff0c\u6240\u4ee5\u6211\u8ba4\u4e3amex[i]\u6700\u540e\u4f1a\u8d8b\u8fd1\u4e8e\u5e73\u5747\u5316\uff0c\u4e5f\u5c31\u662fsqrt(n)\u7ea7\u522b\u7684\n\ncode\uff1a\n```cpp\n#include <bits/stdc++.h>   \n#define N 300005    \n#define ll long long  \n#define setIO(s) freopen(s\".in\",\"r\",stdin) \nusing namespace std;      \nint n,m,tot,opcnt,qcnt,B,now;          \nint a[N],A[N],output[N],cnt[N],mex[N];            \nstruct query\n{\n    int l,r,id,t;    \n    query(int l=0,int r=0):l(l),r(r){} \n    bool operator<(query b) const \n    {\n        return l/B==b.l/B?(r/B==b.r/B?t<b.t:r<b.r):l<b.l;       \n    }\n}q[N]; \nstruct change\n{\n    int p,x;   \n    change(int p=0,int x=0):p(p),x(x){}  \n}c[N];   \nvoid add(int num) \n{     \n    --mex[cnt[num]];           \n    ++mex[++cnt[num]];         \n}\nvoid del(int num) \n{   \n    --mex[cnt[num]];  \n    ++mex[--cnt[num]];             \n}\nvoid update(int id,int t) \n{\n    if(c[t].p>=q[id].l&&c[t].p<=q[id].r) \n    {\n        del(a[c[t].p]);  \n        add(c[t].x);        \n    }   \n    swap(c[t].x, a[c[t].p]);     \n}\nint getans() \n{\n    int i,j; \n    for(i=1;mex[i]>0;++i);   \n    return i;    \n}\nint main() \n{ \n    int i,j,l=2,r=1;       \n    // setIO(\"input\");       \n    scanf(\"%d%d\",&n,&m);   \n    B=pow(n,0.6666);   \n    for(i=1;i<=n;++i) \n    {\n        scanf(\"%d\",&a[i]); \n        A[++tot]=a[i];   \n    }\n    for(i=1;i<=m;++i) \n    {\n        int op,a,b;    \n        scanf(\"%d%d%d\",&op,&a,&b);    \n        if(op==1) \n        {\n            ++qcnt;       \n            q[qcnt]=query(a,b);  \n            q[qcnt].id=qcnt; \n            q[qcnt].t=opcnt;   \n        }\n        else \n        {\n            ++opcnt;   \n            c[opcnt]=change(a,b);    \n            A[++tot]=b;     \n        }\n    }\n    sort(A+1,A+1+tot);   \n    for(i=1;i<=n;++i) a[i]=lower_bound(A+1,A+1+tot,a[i])-A;     \n    for(i=1;i<=opcnt;++i) c[i].x=lower_bound(A+1,A+1+tot,c[i].x)-A;       \n    sort(q+1,q+1+qcnt);    \n    for(i=1;i<=qcnt;++i) \n    {\n        for(;l>q[i].l;) add(a[--l]);     \n        for(;r<q[i].r;) add(a[++r]);   \n        for(;l<q[i].l;) del(a[l++]);   \n        for(;r>q[i].r;) del(a[r--]);   \n        for(;now<q[i].t;) update(i, ++now);     \n        for(;now>q[i].t;) update(i, now--);   \n        output[q[i].id]=getans();    \n    }\n    for(i=1;i<=qcnt;++i) printf(\"%d\\n\",output[i]);   \n    return 0;     \n}\n```\n",
        "postTime": 1571058405,
        "uid": 127915,
        "name": "Bosun",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF940F \u3010Machine Learning\u3011"
    }
]