[
    {
        "content": "## CF1607F Robot on the Board 2 \u9898\u89e3\n\n [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/solution/CF1607F)\u3002\n\n### \u4e00\u3001\u9898\u76ee\u7b80\u8ff0\n\n\u7ed9\u4f60\u4e00\u4e2a**\u6709\u5411\u56fe**\uff0c\u6bcf\u4e2a\u70b9\u7684\u6743\u503c\u4e3a $1$\uff0c\n\n\u7136\u540e\u4ece\u4e00\u4e2a\u70b9\u51fa\u53d1\uff0c\u6bcf\u4e2a\u70b9**\u53ea\u80fd\u7ecf\u8fc7\u4e00\u6b21**\uff0c\n\n\u6c42\u4ece\u4f55\u5904\u51fa\u53d1\u6240\u7ecf\u8fc7\u70b9\u7684\u6743\u503c\u548c**\u6700\u5927**\uff0c\u5e76\u6c42\u51fa**\u6700\u5927\u503c**\u3002\n\n### \u4e8c\u3001\u601d\u8def\u5206\u6790\n\n\u90a3\u8fd9\u9898\u5c82\u4e0d\u662f\u5f88\u7b80\u5355\uff0c\u76f4\u63a5\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u4ece\u8fd9\u4e2a\u70b9\u5f00\u59cb\u641c\u7d22\uff0c\u6700\u540e\u6c42\u51fa\u6700\u5927\u503c\u3002\n\n\u4f46\u770b\u4e00\u4e0b $n$ \u548c $m$ \u7684\u8303\u56f4\uff0c\u8fd9\u79cd\u5199\u6cd5\u663e\u7136\u662f\u4e0d\u884c\u7684\u3002\n\n\u6240\u4ee5\u8fd9\u91cc\u6211\u4eec\u8981\u7528\u5230**\u8bb0\u5fc6\u5316\u641c\u7d22**\uff0c\u5bf9\uff0c\u5c31\u662f\u641c\u5b8c\u4e00\u4e2a\u70b9\u540e\u7528\u6570\u7ec4\u628a\u4ed6\u8bb0\u5f55\u4e0b\u6765\u3002\n\n```cpp\nint w[N], to[N];\nchar status[N] = {1};\n\ninline int dfs(int u)\n{\n    if(status[u]) return w[u]; //\u5982\u679c\u641c\u7d22\u8fc7\u76f4\u63a5\u8fd4\u56de\u5c31\u884c \n    \n    status[u] = 1; // \u6807\u8bb0\u4e00\u4e0b \n    w[u] = 1 + dfs(to[u]); // \u63a5\u7740\u5411\u4e0b\u641c \n    \n    return w[u];\n}\n\n```\n\n\u4f46\u8fd9\u4e2a\u56fe\u53ef\u662f\u6709**\u73af**\u7684\u5440\uff0c\u6240\u4ee5\u8fd9\u6837\u5199\u80af\u5b9a\u4e0d\u884c\u3002\n\n\u90a3\u6211\u4eec\u5c31\u8981\u5728\u641c\u7d22\u5230\u73af\u65f6\u628a**\u6574\u4e2a\u73af**\u5904\u7406\u4e00\u904d\uff0c\u4e0b\u6b21\u518d\u641c\u7d22\u5230\u5b83\u5c31\u76f4\u63a5\u8fd4\u56de\u3002\n\n\u6240\u4ee5 dfs \u5e94\u8fd9\u6837\u5199\uff1a\n\n```cpp\n\nint w[N], to[N];\nchar status[N] = {2};\n// status[i] \u8868\u793ai\u7684\u72b6\u6001\n// 0 \u8868\u793a\u672a\u641c\u7d22\uff0c1 \u8868\u793a\u641c\u7d22\u4e2d\uff0c 2 \u8868\u793a\u641c\u7d22\u8fc7 \n\ninline int dfs(int u)\n{\n    if(status[u] == 2) return w[u]; //\u5982\u679c\u641c\u7d22\u8fc7\u76f4\u63a5\u8fd4\u56de\u5c31\u884c \n    if(status[u] == 1) //\u5982\u679c\u641c\u7d22\u5230 \u641c\u7d22\u4e2d\u7684\u70b9 \u90a3\u8bf4\u660e\u9047\u5230\u73af\u4e86 \n    {\n        sum = 1; //sum \u7528\u6765\u8bb0\u5f55\u73af\u7684\u5927\u5c0f \n        for(int i = to[u]; i != u; i = to[i]) ++sum;\n        for(int i = to[u]; i != u; i = to[i]) status[i] = 2, w[i] = sum;\n        status[u] = 2; w[u] = sum;\n        // \u5c06\u6574\u4e2a\u73af\u6807\u8bb0\u4e3a \u641c\u7d22\u8fc7\uff0c\u5e76\u4e14 \u66f4\u65b0 w[] \n        return 0; // \u8fd9\u91cc\u8fd4\u56de\u591a\u5c11\u90fd\u884c\uff0c \u56e0\u4e3a\u7528\u4e0d\u5230\u5b83 \n    }\n    status[u] = 1; // \u5230\u8fd9\u513f\u8fd8\u6ca1return\u7684\u8bdd\uff0c\u8bf4\u660e\u8fd9\u4e2a\u70b9\u6ca1\u641c\u8fc7\uff0c\u6807\u8bb0\u4e00\u4e0b \n    dfs(to[u]); // \u63a5\u7740\u5411\u4e0b\u641c \n    // \u4f60\u4ee5\u4e3a\u641c\u5b8c\u540e\u5c31\u53ef\u4ee5\u66f4\u65b0\u4e86\uff1f\uff1f \n    // \u6211\u4eec\u8fd8\u9700\u8981\u770b\u4e00\u4e0b \u5f53\u5148\u70b9\u7684\u72b6\u6001\u662f\u5426\u88ab\u6807\u8bb0\u6210 2 \n    // \u5982\u679c\u6807\u8bb0\u4e3a 2 \u7684\u8bdd \uff0cw[u] \u5df2\u7ecf\u5728\u5904\u7406\u73af\u7684\u65f6\u5019 \u66f4\u65b0\u8fc7\u4e86 \n    if(status[u] != 2) w[u] = 1 + w[to[u]]; \n    return status[u] = 2, w[u]; // \u6807\u8bb0\u4e3a\u641c\u7d22\u8fc7\uff0c\u7136\u540e\u8fd4\u56de \n}\n```\n\n\u8fd9\u6837\u5199\u5c31\u6ca1\u4ec0\u4e48\u95ee\u9898\u4e86\uff0c\u4f46\u8fd8\u6709\u4e00\u4e9b**\u7ec6\u8282**\u95ee\u9898\u8981\u5904\u7406\u4e00\u4e0b\u3002\n\n\u56e0\u4e3a\u8fd9\u9053\u9898\u662f**\u591a\u7ec4\u6570\u636e**\uff0c\u6240\u4ee5\u6bcf\u6b21\u90fd\u8981\u521d\u59cb\u5316\u3002\n\n\u4f46\u806a\u660e\u7684\u4f60\u53d1\u73b0\u603b\u7684\u70b9\u6570\u4e0d\u8d85\u8fc7 $4\\times10^6$,\n\n\u6240\u4ee5\u6570\u636e\u53ef\u4ee5\u8fd9\u6837\u5904\u7406\uff1a\n\n\u5b9a\u4e49\u4e24\u4e2a\u53d8\u91cf\uff0c$start$ \u548c $end$\uff0c\u8868\u793a\u7684\u662f\u8fd9\u7ec4\u6570\u636e\u4e2d\u70b9\u6807\u53f7\u7684\u8303\u56f4\uff0c\n\n\u5f53\u6c42\u4e0b\u4e00\u7ec4\u6570\u636e\u65f6\uff0c\u76f4\u63a5\u66f4\u65b0 $start$\uff0c\u8fd9\u6837\u6240\u6709\u70b9\u7684\u6807\u53f7\u662f\u8fde\u7eed\u7684\uff0c\u4e0d\u4f1a\u91cd\u590d\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n\nvoid work()\n{\n    scanf(\"%d%d\", &n, &m);  \n    start = end + 1; // \u66f4\u65b0 start\n    for(int i = 1; i <= n; ++i)\n        for(int j = 1; j <= m; ++j)\n        {\n            ++end; // \u65b0\u7684\u70b9 \n            to[end] = read(); // \u8f93\u5165 to[] \n        }\n    ans = 0;\n    for(int i = start; i <= end; ++i)\n        if(ans < dfs(i))  ansp = i,ans = w[i];\n        \n    ansp -= start;\n    // \u8f93\u51fa\u65f6 \u518d\u628a\u70b9\u7684\u6807\u53f7\u8f6c\u6362\u6210\u884c\u5217\u5f62\u5f0f \n    printf(\"%d %d %d\\n\", (ansp) / m + 1, ansp % m + 1, ans);\n}\n```\n\n### \u4e09\u3001\u5b8c\u6574\u4ee3\u7801\n\n```cpp\n#include <cstdio>\nconst int N = 4000003;\n\nint T, n, m, start, end, sum;\nint w[N], to[N];\nchar status[N] = {2};\n\ninline int dfs(int u)\n{\n    if(status[u] == 2) return w[u];\n    if(status[u] == 1)\n    {\n        sum = 1;\n        for(int i = to[u]; i != u; i = to[i]) ++sum;\n        for(int i = to[u]; i != u; i = to[i]) status[i] = 2, w[i] = sum;\n        status[u] = 2; w[u] = sum;\n        return 0;\n    }\n    status[u] = 1;\n    dfs(to[u]);\n    if(status[u] != 2) w[u] = 1 + w[to[u]];\n    return status[u] = 2, w[u];\n}\nvoid work()\n{\n    scanf(\"%d%d\", &n, &m);\n    start = end + 1;\n    for(int i = 1; i <= n; ++i)\n        for(int j = 1; j <= m; ++j)\n        {\n            ++end;\n            char c = getchar();\n            while(c == '\\n' || c == ' ') c = getchar();\n            if(c == 'L' && j != 1) to[end] = end - 1;\n            else if(c == 'R' && j != m) to[end] = end + 1;\n            else if(c == 'U' && i != 1) to[end] = end - m;\n            else if(c == 'D' && i != n) to[end] = end + m;\n        }\n    int ans = 0, ansp = 0;\n    for(int i = start; i <= end; ++i)\n        if(ans < dfs(i))  ansp = i,ans = w[i];\n    ansp -= start;\n    printf(\"%d %d %d\\n\", (ansp) / m + 1, ansp % m + 1, ans);\n}\nint main(void)\n{\n    scanf(\"%d\", &T);\n    while(T--) work();\n}\n```\n\n\n\n",
        "postTime": 1637117272,
        "uid": 455674,
        "name": "jielos",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1607F Robot on the Board 2"
    },
    {
        "content": "## CF1607F\n\n\u8003\u8651\u56fe\u8bba\u8f6c\u6362\n\n\u8003\u8651\u8f6c\u5316\u51fa\u6765\u7684\u56fe\u7684\u6027\u8d28:\n\n\u6bcf\u4e2a\u70b9,\u53ea\u6709\u4e00\u6761\u51fa\u8fb9,\u53ca\u8fb9\u70b9\u6570\u76f8\u7b49,\u8fd9\u662f\u4ec0\u4e48?\n\n\u5185\u5411\u57fa\u73af\u6811\u68ee\u6797!\n\n---\n\n\u7136\u540e\u5c31\u597d\u529e\u4e86,\u53ea\u9700\u6c42\u57fa\u73af\u6811\u4e0a\u6700\u957f\u53f6\u5b50\u5230\u73af\u7684\u8def\u5f84\n\n\u62d3\u6251\u6392\u5e8f\u987a\u4fbf dp \u4e00\u4e0b\u5373\u53ef\n\n\u600e\u4e48 dp \u5462?\n\n\u6811\u4e0a\u6839\u5f80\u4e0b\u7684\u6700\u957f\u94fe\u52a0\u4e0a\u73af\u957f\n\n\u6ce8\u610f\u8981\u5bf9\u4e8e\u51fa\u754c\u591a\u7ef4\u62a4\u4e00\u4e2a\u8282\u70b9(\u4ee3\u7801\u4e2d\u76841\u53f7\u8282\u70b9)\u5e76\u8fde\u4e2a\u81ea\u73af\n\n\u6ce8\u610f\u8981\u8f93\u51fa\u65b9\u6848\n\n```cpp\n#include<bits/stdc++.h>\ntypedef long long LL;\ntypedef long double LD;\ntypedef unsigned uint;\nusing namespace std;\n#define pii pair<int,int>\n#define fs first\n#define sc second\n#define pb push_back\n//==header==\nconst int N=2.2e3,mod=998244353;\nchar t[N];\n#define pack(x,y) ((x)*(m+1)+(y))//\u5c06\u5750\u6807\u8f6c\u6362\u6210\u70b9\n#define tox(w) ( (w)/(m+1) )\n#define toy(w) ( (w)%(m+1) )//\u5c06\u70b9\u89e3\u5305\u6210\u5750\u6807\nint to[N*N],in[N*N],f[N*N],from[N*N];\nint dy(char c){\n\tif(c=='L')return -1;\n\tif(c=='R')return 1;\n\treturn 0;\n}\nint dx(char c){\n\tif(c=='U')return -1;\n\tif(c=='D')return 1;\n\treturn 0;\n}\nint cir,vis[N*N],cnt[N*N];\nvoid dfs(int x,int num){\n\tvis[x]=num;cnt[num]++;//vis[i]:i\u6240\u5728\u73af\u7684\u7f16\u53f7,cnt[i]: i\u53f7\u73af\u7684\u73af\u957f\n\tif(!vis[to[x]])dfs(to[x],num);\n}\nvoid work(){\n\tint n,m;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%s\",t+1);\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tint x=i+dx(t[j]),y=j+dy(t[j]);\n\t\t\tif(x>n||x<=0||y>m||y<=0)to[pack(i,j)]=1,in[1]++;\n\t\t\telse to[pack(i,j)]=pack(x,y),in[pack(x,y)]++;\n\t\t}\n\t}\n\tto[1]=1,in[1]++;\n\t\n\tqueue<int>q;//\u62d3\u6251,f: dp\u503c\n\tint tot=(n+1)*(m+2);//\u6ce8\u610ftot\u4e0d\u8981\u5c0f\u4e86\n\tfor(int i=1;i<=tot;i++)from[i]=i;\n\tfor(int i=1;i<=tot;i++)if(!in[i])q.push(i);\n\twhile(!q.empty()){\n\t\tint k=q.front();q.pop();\n\t\tif(!to[k])continue;\n\t\tif(f[k]+1>f[to[k]])f[to[k]]=f[k]+1,from[to[k]]=from[k];\n\t\tif(!--in[to[k]])q.push(to[k]);\n\t}\n\tcir=0;\n\tfor(int i=1;i<=tot;i++)if(in[i]==1&&!vis[i])dfs(i,++cir);//\u5904\u7406\u73af\n\tint ans=0,st=0;\n\tcnt[1]=0;\n\tfor(int i=1;i<=tot;i++)if(in[i]==1&&f[i]+cnt[vis[i]]>ans)\n\t\tans=f[i]+cnt[vis[i]],st=from[i];//\u7edf\u8ba1\u7b54\u6848\n\tprintf(\"%d %d %d\\n\",tox(st),toy(st),ans);\n\t\n\tfor(int i=1;i<=tot;i++)vis[i]=cnt[i]=to[i]=in[i]=f[i]=from[i]=0;\n\t//clear\n}\nint main(){\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)work();\n\treturn 0;\n}\n\n```",
        "postTime": 1636202911,
        "uid": 157677,
        "name": "maruize",
        "ccfLevel": 0,
        "title": "CF1607F"
    },
    {
        "content": "## \u9898\u76ee\u7b80\u8ff0\n\n- \u5047\u8bbe\u6709\u4e00\u4e2a $n\\times m$ \u7684\u65b9\u9635\uff0c\u6bcf\u4e2a\u65b9\u9635\u4e0a\u6709\u4e2a\u6307\u5b9a\u65b9\u5411\u3002\n- \u95ee\u4ece\u54ea\u4e2a\u4f4d\u7f6e\u51fa\u53d1\u8d70\u5230\u7684\u4e0d\u91cd\u590d\u8def\u7ebf\u957f\u5ea6\u6700\u5927\u3002\n- \u591a\u7ec4\u6570\u636e\uff0c$T\\leq10^4$\uff0c$n,m\\leq2000$\u3002\n\n## \u89e3\u9898\u601d\u8def\n\n\u663e\u7136\uff0c\u4e00\u4e2a\u683c\u5b50\u8d70\u7684\u957f\u5ea6\u4f9d\u8d56\u4e8e\u5b83\u6240\u6307\u5411\u65b9\u5411\u7684\u683c\u5b50\u8d70\u7684\u957f\u5ea6\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651 dfs\u3002\u8fd9\u91cc\u5206\u4e24\u79cd\u60c5\u51b5\u3002\n\n####  \u7b2c\u4e00\u79cd\uff0c\u6b64\u683c\u5b50\u672c\u8eab\u5305\u542b\u5728\u4e00\u4e2a\u5c01\u95ed\u73af\u5185\n\n\u663e\u7136\uff0c\u8fd9\u4e2a\u73af\u5185\u6240\u6709\u683c\u5b50\u8d70\u7684\u6700\u5927\u957f\u5ea6\u90fd\u662f\u8fd9\u4e2a\u73af\u7684\u957f\u5ea6\u3002\n\n\u4e3e\u4e2a\u6817\u5b50\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/lmf5nsj7.png)\n\n\u8fd9\u4e2a\u56fe\u5c31\u662f\u4e00\u4e2a\u73af\uff0c\u957f\u5ea6\u4e3a $20$\uff0c\u6240\u4ee5\u6bcf\u4e2a\u683c\u5b50\u6700\u591a\u8d70 $20$ \u6b65\u3002\n\n#### \u7b2c\u4e8c\u79cd\uff0c\u6b64\u683c\u5b50\u672c\u8eab\u4e0d\u5305\u542b\u5728\u5c01\u95ed\u73af\u5185\n\n\u90a3\u4e48\u4ed6\u80fd\u8d70\u7684\u957f\u5ea6\u662f\u4ed6\u6240\u6307\u5411\u683c\u5b50\u7684\u957f\u5ea6\u52a0\u4e00\u3002\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n\u6211\u4eec\u770b dfs \u90e8\u5206\u3002\n\n```cpp\nvoid dfs(int x,int y,int t){\n\t//cout<<x<<\" \"<<y<<\" \"<<t<<endl;\n\t\u2460if(x==0||x==n+1||y==0||y==m+1||cnt[x][y]){//\u73c2\u8dd1\u51fa\u53bb\u4e86 \n\t\tfor(int i=1;i<t;i++)\n\t\t\tcnt[p[i]][q[i]]=cnt[x][y]+(t-i);\n\t\treturn;\n\t}\n\t\u2461if(vis[x][y]){//\u6210\u73af\u4e86 MMP\n\t\tint res=0;\n\t\tfor(int i=1;i<t;i++)\n\t\t\tif(x==p[i]&&y==q[i])\n\t\t\t\tres=i;\n\t\tfor(int i=res;i<t;i++)\n\t\t\tcnt[p[i]][q[i]]=t-res;//\u73af\u90e8\u5206 \n\t\tfor(int i=1;i<res;i++)\n\t\t\tcnt[p[i]][q[i]]=t-i;//\u9888\u90e8\u5206 \n\t\treturn;\n\t}\n\tvis[x][y]=true;\n\tp[t]=x,q[t]=y;//\u589e\u52a0\u5386\u53f2\u72b6\u6001\n\tif(a[x][y]=='L') dfs(x,y-1,t+1);\n\tif(a[x][y]=='U') dfs(x-1,y,t+1);\n\tif(a[x][y]=='R') dfs(x,y+1,t+1);\n\tif(a[x][y]=='D') dfs(x+1,y,t+1);//\u8feb\u5bb3\u4e0b\u4e00\u4e2a\u9e3d\u5b50 . \n\treturn;\n}\n```\n\u8fd9\u91cc\uff0c$p,q$ \u662f\u8bb0\u5f55\u8ddf\u8fd9\u4e2a\u683c\u5b50\u6709\u5173\u7684\u70b9\u3002\n\n\u6211\u4eec\u89e3\u91ca\u4e00\u4e0b\u8fd9\u6bb5\u4ee3\u7801\u3002\n\n\u7b2c \u2460 \u90e8\u5206\u7684 if \u5224\u65ad\u7684\u662f\u662f\u5426\u8dd1\u51fa\u53bb\u4e86\u6216\u8005\u649e\u5230\u5df2\u7ecf\u641c\u7d22\u8fc7\u7684\u683c\u5b50\u3002\u4e3e\u4e2a\u6817\u5b50\u3002\n\n1. \u8dd1\u51fa\u53bb\u4e86\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/rmczp540.png)\n\n\u8fd9\u4e2a\u6837\u5b50\u76f4\u63a5\u4e00\u4e2a\u4e00\u4e2a\u66f4\u65b0 $cnt$ \u5c31\u597d\u4e86\u3002\uff08\u8fb9\u754c\u7684 $cnt$ \u4e3a $0$\uff09\u3002\n\n\u53d8\u6210\u8fd9\u4e2a\u4e9a\u5b50\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/1b840deu.png)\n2. \u649e\u5230\u641c\u7d22\u8fc7\u7684\u683c\u5b50\n![](https://cdn.luogu.com.cn/upload/image_hosting/tli0adb8.png)\n\n\u540c\u6837\u7684\uff0c\u4e00\u4e2a\u4e00\u4e2a\u66f4\u65b0 cnt\uff0c\u53d8\u6210\u8fd9\u6837\uff08\u4e0b\u9762\u90a3\u4e00\u5768\u5df2\u7ecf\u641c\u7d22\u8fc7\u4e86\uff09\u3002\n![](https://cdn.luogu.com.cn/upload/image_hosting/7kzf8q9w.png)\n\n\u7b2c\u2461\u90e8\u5206\u662f\u5904\u7406\u641c\u5230\u4e00\u534a\u9047\u5230\u73af\u4e86\u3002\n\n\u7528 $res$ \u8bb0\u5f55\u73af\u63a5\u53e3\uff0c\u5269\u4e0b\u8bf7\u8bfb\u8005\u81ea\u5df1\u770b\u5427\u3002\uff08\u539f\u8c05\u6211\u4e0d\u60f3\u753b\u56fe\u7684\u672c\u8d28\uff09\n\n## \u63d0\u793a\n\n\u6bd2\u7624\u7684\u51fa\u9898\u4eba\u5361\u6389\u4e86\u4e0a\u9762\u7684 dfs\uff0c\u4f1a MLE\u3002\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u4f7f\u7528\u4e00\u4e2a `while` \u6765\u66f4\u65b0 $x,y$ \u5373\u53ef\u3002\n\n[\u5b8c\u6574\u4ee3\u7801\u6233\u8fd9\u91cc](https://www.luogu.com.cn/paste/zxd9bxng)",
        "postTime": 1636268005,
        "uid": 248400,
        "name": "Inaba_Meguru",
        "ccfLevel": 7,
        "title": "CF1607F Robot on the Board 2 \u9898\u89e3"
    },
    {
        "content": "### \u4ece\u641c\u7d22\u8bf4\u8d77\n\n\u9996\u5148\u6211\u4eec\u770b\u5230\u8fd9\u4e2a\u9898\u76ee\u53ef\u4ee5\u5f88\u81ea\u7136\u5730\u60f3\u5230\u5982\u4f55\u66b4\u529b\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u683c\u5b50\u4ece\u5f53\u524d\u70b9\u51fa\u53d1\u8fdb\u884c\u641c\u7d22\u3002\n\n\u4f46\u662f\u8fd9\u4e2a\u8fc7\u7a0b\u6709\u5f88\u591a\u6b65\u641c\u7d22\u662f\u4e0d\u5fc5\u8981\u7684\uff1a\u4ece\u4e00\u4e2a\u683c\u5b50\u51fa\u53d1\uff0c\u6700\u540e\u505c\u4e0b\u6765\u7684\u4f4d\u7f6e\u662f\u4e00\u5b9a\u7684\uff0c\u90a3\u4e48\u5982\u679c\u8fd9\u4e2a\u683c\u5b50\u88ab\u641c\u8fc7\u4e00\u904d\u4e86\uff0c\u6211\u4eec\u8fd8\u7ee7\u7eed\u641c\u5b83\u5e72\u4ec0\u4e48\u5462\uff1f\u76f4\u63a5\u7528\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u7684\u4fe1\u606f\u4e0d\u5c31\u597d\u4e86\u5417\uff1f\n\n\u4e8e\u662f\u6211\u4eec\u8003\u8651\u91c7\u7528\u8bb0\u5fc6\u5316\u7684\u601d\u60f3\uff1a\u8bb0\u5f55\u4e00\u4e2a `dist[i][j]` \u8868\u793a\u4ece\u4f4d\u7f6e `(i, j)` \u51fa\u53d1\u80fd\u6267\u884c\u7684\u6700\u5927\u6307\u4ee4\u6570\u3002\n\n\u63a5\u4e0b\u6765\u4ece\u4e00\u4e2a\u672a\u641c\u8fc7\u7684\u8d77\u59cb\u70b9\u5f00\u59cb\u641c\u7d22\uff0c\u76f4\u5230\u6211\u4eec\u78b0\u89c1\u4e00\u4e2a\u4e4b\u524d\u8d70\u8fc7\u7684\u683c\u5b50\u3002\u8fd9\u4e2a\u7ed3\u675f\u6709\u4e09\u79cd\u60c5\u51b5\uff1a\n\n- \u8df3\u51fa\u5730\u56fe\u8fb9\u754c\n- \u8d70\u5230**\u8fd9\u6b21\u641c\u7d22**\u8d70\u8fc7\u7684\u683c\u5b50\uff0c\u4e5f\u5c31\u662f\u6210\u73af\n- \u8d70\u5230**\u4ee5\u524d\u641c\u7d22**\u8d70\u8fc7\u7684\u683c\u5b50\n\n\u6211\u4eec\u5206\u522b\u8ba8\u8bba\u4e00\u4e0b\uff1a\n\n### \u8df3\u51fa\u5730\u56fe\u8fb9\u754c\n\n[![IEHFnH.png](https://z3.ax1x.com/2021/11/03/IEHFnH.png)](https://imgtu.com/i/IEHFnH)\n\n~~\u56fe\u662f\u62ff Excel \u753b\u7684~~\n\n\u8fd9\u79cd\u60c5\u51b5\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u7167\u7740\u8def\u5f84\u987a\u5e8f\u9006\u7740\u66f4\u65b0 `dist` \u5373\u53ef\u3002\n\n[![IEHu38.png](https://z3.ax1x.com/2021/11/03/IEHu38.png)](https://imgtu.com/i/IEHu38)\n\n### \u8d70\u51fa\u73af\n\n[![IEHU3T.png](https://z3.ax1x.com/2021/11/03/IEHU3T.png)](https://imgtu.com/i/IEHU3T)\n\n\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4ece\u73af\u4e0a\u7684\u6240\u6709\u70b9\u51fa\u53d1\uff0c\u90fd\u80fd\u7ed5\u73af\u8d70\u4e00\u5708\uff0c\u6240\u4ee5**\u73af\u4e0a\u7684\u70b9**\u7b54\u6848\u5c31\u662f\u73af\u957f\uff1b\u73af\u5916\u7684\u70b9\u5c31\u7167\u7740\u8def\u5f84\u987a\u5e8f\u9006\u7740\u66f4\u65b0 `dist`\u3002\n\n[![IEbNdA.png](https://z3.ax1x.com/2021/11/03/IEbNdA.png)](https://imgtu.com/i/IEbNdA)\n\n### \u8d70\u5230\u4ee5\u524d\u8d70\u8fc7\u7684\u4f4d\u7f6e\n\n[![IEq71f.png](https://z3.ax1x.com/2021/11/03/IEq71f.png)](https://imgtu.com/i/IEq71f)\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u7b54\u6848\u53ef\u4ee5\u76f4\u63a5\u4ece\u6211\u4eec\u4e4b\u524d\u8d70\u8fc7\u7684\u70b9\u7ee7\u627f\u8fc7\u6765\u7684\uff0c\u7167\u7740\u8def\u5f84\u987a\u5e8f\u9006\u7740\u66f4\u65b0 `dist` \u5373\u53ef\u3002\n\n[![IELCcT.png](https://z3.ax1x.com/2021/11/03/IELCcT.png)](https://imgtu.com/i/IELCcT)\n\n### \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\nconst int MAXN = 2000 + 10;\n\nconst std::string drr = \"RLDU\";\nconst int dx[] = {0, 0, 1, -1};\nconst int dy[] = {1, -1, 0, 0};\n\nint n, m;\nchar mat[MAXN][MAXN];\n\nint dist[MAXN][MAXN];\nbool vis[MAXN][MAXN];\n\nvoid SearchGetPath(std::vector<std::pair<int, int> > &path, int &x, int &y) {\n    while (!(x < 1 || y < 1 || x > n || y > m || vis[x][y])) {\n        // DEBUG(x); DEBUG(y);\n        vis[x][y] = true;\n        path.push_back({x, y});\n        int dr = (int) (drr.find(mat[x][y]));\n        x += dx[dr]; y += dy[dr];\n    }\n}\n\nvoid _main() {\n    cin >> n >> m;\n    rep (i, 1, n) cin >> (mat[i] + 1);\n    rep (x, 1, n) rep (y, 1, m) {\n        dist[x][y] = -1;\n        vis[x][y] = 0;\n    }\n    rep (x, 1, n) rep (y, 1, m) if (dist[x][y] == -1) {\n        int nx = x, ny = y; std::vector<std::pair<int, int> > path;\n        SearchGetPath(path, nx, ny);\n        if (nx < 1 || ny < 1 || nx > n || ny > m) {\n            // \u8df3\u51fa\u5730\u56fe\u8fb9\u754c\n            path.push_back({nx, ny});\n            dist[nx][ny] = 0;\n            for (int i = (int) path.size() - 2; i >= 0; --i) {\n                dist[path[i].fi][path[i].se] = dist[path[i + 1].fi][path[i + 1].se] + 1;\n            }\n        } else {\n            // \u627e\u73af\u957f\n            int circlesize = (int) (path.end() - std::find(ALL(path), std::make_pair(nx, ny)));\n            if (circlesize == 0) {\n                // \u8fd9\u4e0d\u662f\u73af\uff0c\u662f\u4e4b\u524d\u8d70\u8fc7\u7684\u8def\u5f84\n                path.push_back({nx, ny});\n                for (int i = (int) path.size() - 2; i >= 0; --i) {\n                    dist[path[i].fi][path[i].se] = dist[path[i + 1].fi][path[i + 1].se] + 1;\n                }\n                continue;\n            }\n            int i = path.size() - 1;\n            int step = 1; // \u4e00\u4e2a\u5c0f trick\uff0c\u5728\u73af\u4e0a\u7684\u65f6\u5019\u7b54\u6848\u662f circlesize\uff0c\u5728\u73af\u5916\u7684\u65f6\u5019\u7b54\u6848\u5c31\u662f step\n            for (i = path.size() - 1; i >= 0; --i) {\n                dist[path[i].fi][path[i].se] = std::max(step, circlesize);\n                ++step;\n            }\n        }\n    }\n    int ax = 0, ay = 0;\n    rep (i, 1, n) rep (j, 1, m) {\n        if (dist[i][j] > dist[ax][ay]) {\n            ax = i; ay = j;\n        }\n    }\n    cout << ax << ' ' << ay << ' ' << dist[ax][ay] << endl;\n}\n\nint main() {\n    std::ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);\n    int T; cin >> T;\n    while (T --> 0) {\n        _main();\n    }\n    return 0;\n}\n```",
        "postTime": 1635938305,
        "uid": 56626,
        "name": "HDWR",
        "ccfLevel": 6,
        "title": "CF1607F Robot on the Board 2 \u9898\u89e3"
    },
    {
        "content": "# \u524d\u8a00\n\n\u641c\u7d22\u9898\u5355\u7684\u4e00\u9053\u597d\u9898\u3002\n\n# \u6b63\u6587\n\n\u8003\u8651\u66b4\u529b\u641c\u7d22\u3002\n\n\u679a\u4e3e\u8d77\u59cb\u70b9\uff0c\u53bb\u66b4\u529b\u641c\u7d22\uff0c\u590d\u6742\u5ea6\u6700\u591a\u4e3a $\\mathcal{O}(\\sum_{i = 1}^{T}{(N_i M_i)^2})$, \u76f4\u63a5\u53bb\u4e16\u3002\n\n\u90a3\u4e48\u8003\u8651\u8bb0\u5fc6\u5316\u641c\u7d22. \u8bbe $f_{i,j}$ \u8868\u793a\u4ece $(i, j)$ \u51fa\u53d1\u6700\u591a\u53ef\u4ee5\u5230\u8fbe\u7684\u70b9\u6570\u3002\n\n\u6839\u636e\u7ec8\u6b62\u539f\u56e0\uff0c\u5206\u4e09\u79cd\u60c5\u51b5\u8003\u8651\u3002\n\n## 1. \u56e0\u4e3a\u51fa\u754c\u7ec8\u6b62\n\n\u53ef\u4ee5\u77e5\u9053 $f_{i,j}$ \u4ece\u53ef\u4ee5\u62b5\u8fbe\u5b83\u7684\u5730\u65b9\u8f6c\u79fb\u800c\u6765\u3002\n\n\u90a3\u8fd9\u5c31\u5f88\u7b80\u5355\uff0c\u641c\u7d22\u65f6\u8bb0\u5f55\u6df1\u5ea6\uff0c\u7ec8\u6b62\u540e\u4e00\u8def\u56de\u6eaf\u5373\u53ef\u3002\n\n## 2. \u56e0\u4e3a\u649e\u5230\u81ea\u5df1\u7684\u8def\u5f84\u7ec8\u6b62\n\n\u5c31\u662f\u5f62\u6210\u4e86\u73af\u3002\n\n\u73af\u4e0a\u7684\u70b9\u56e0\u4e3a\u4e92\u76f8\u649e\u51fb\uff0c\u7b54\u6848\u90fd\u76f8\u540c\uff1b\u51fa\u73af\u7684\u8def\u5f84\u4e0a\u7684\u70b9\u79bb\u73af\u8d8a\u8fdc\u7b54\u6848\u8d8a\u5927\u3002\n\n\u53ef\u4ee5 `vector` \u7ef4\u62a4\u8def\u5f84\uff0c\u8fd9\u6837\u65b9\u4fbf\u5904\u7406\u7b54\u6848\u3002\n\n## 3. \u56e0\u4e3a\u649e\u5230\u5df2\u7ecf\u6709\u7b54\u6848\u7684\u70b9\u7ec8\u6b62\n\n\u8003\u8651\u63a5\u9f99\uff0c\u7b54\u6848\u4ece\u63a5\u4e0a\u7684\u90a3\u4e2a\u6709\u7b54\u6848\u7684\u70b9\u8f6c\u79fb\u3002\n\n\u90a3\u4e48\u7b54\u6848\u4e3a\u63a5\u4e0a\u7684\u90a3\u4e2a\u70b9\u7684\u7b54\u6848\u52a0\u4e0a\u4e00\uff1b\u60f3\u6c42\u4e00\u8def\u4e0a\u7684\u7b54\u6848\uff0c\u90a3\u5c31\u56de\u6eaf\u3002\n\n---\n\n\u81f3\u6b64\uff0c\u5206\u7c7b\u8ba8\u8bba\u7ed3\u675f\u4e86\u3002\n\n\u7b97\u6cd5\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(\\sum_{i = 1}^{T}{N_i M_i})$, \u4e0d\u8d85\u8fc7 $4 \\times 10^6$. \u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n# \u4ee3\u7801\n\n``` cpp\n#include <bits/stdc++.h>\n#define Node pair<int, int>\n#define fir first\n#define sec second\n#define mkpr make_pair\nusing namespace std;\n\nint T, N, M;\nint f[2005][2005];\nbool vis[2005][2005];\nchar MAP[2005][2005];\n\nint dx[5] = {0, 1, 0, -1, 0};\nint dy[5] = {0, 0, 1, 0, -1};\n\nint __gd(char c)\n{\n    switch(c)\n    {\n        case 'D': return 1;\n        case 'R': return 2;\n        case 'U': return 3;\n        case 'L': return 4;\n    }\n\n    return 0;\n}\n\nvoid search(vector<Node> &path, int &nx, int &ny)\n{\n    while(nx >= 1 && nx <= N && ny >= 1 && ny <= M && !vis[nx][ny])\n    {\n        vis[nx][ny] = true;\n        path.push_back(mkpr(nx, ny));\n        int dir = __gd(MAP[nx][ny]);\n        nx += dx[dir];\n        ny += dy[dir];\n    }\n}\n\nint main()\n{\n    std::ios::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    cin >> T;\n    while(T --)\n    {\n        cin >> N >> M;\n        for(int i = 1; i <= N; ++ i)\n            for(int j = 1; j <= M; ++ j)\n                cin >> MAP[i][j], vis[i][j] = false, f[i][j] = -1;\n        \n        for(int i = 1; i <= N; ++ i)\n        {\n            for(int j = 1; j <= M; ++ j)\n            {\n                if(f[i][j] == -1)\n                {\n                    int rx = i, ry = j;\n                    vector<Node> path;\n                    search(path, rx, ry);\n                    if(rx < 1 || rx > N || ry < 1 || ry > M)\n                    {\n                        path.push_back(mkpr(rx, ry));\n                        f[rx][ry] = 0;\n                        for(int k = path.size() - 2; k >= 0; -- k)\n                            f[path[k].fir][path[k].sec] = f[path[k + 1].fir][path[k + 1].sec] + 1;\n                    }\n                    else\n                    {\n                        int cs = (int) (path.end() - find(path.begin(), path.end(), mkpr(rx, ry)));\n                        if(cs == 0)\n                        {\n                            path.push_back(mkpr(rx, ry));\n                            for(int k = path.size() - 2; k >= 0; -- k)\n                                f[path[k].fir][path[k].sec] = f[path[k + 1].fir][path[k + 1].sec] + 1;\n                        }\n                        else\n                        {\n                            int step = 1; \n                            for(int k = path.size() - 1; k >= 0; -- k) \n                            {\n                                f[path[k].fir][path[k].sec] = max(step, cs);\n                                ++ step;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        int fx = 0, fy = 0;\n        for(int i = 1; i <= N; ++ i)\n            for(int j = 1; j <= M; ++ j)\n                if(f[i][j] > f[fx][fy])\n                    fx = i, fy = j;\n\n        cout << fx << ' ' << fy << ' ' << f[fx][fy] << endl;        \n    }\n\n    return 0;\n}\n```\n\n# \u540e\u8a00\n\n\u672c\u9898\u5176\u5b9e\u4e0d\u96be\uff0c\u8fd9\u79cd\u9898\u76ee\u90fd\u662f\u5148\u53bb\u7206\u641c\uff0c\u518d\u8003\u8651\u4f18\u5316\u7684\u3002",
        "postTime": 1658479657,
        "uid": 224558,
        "name": "JackMerryYoung",
        "ccfLevel": 5,
        "title": "CF1607F Robot on the Board 2 \u9898\u89e3"
    }
]