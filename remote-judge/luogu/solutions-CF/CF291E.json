[
    {
        "content": "\u9898\u610f\uff1a\u7ed9\u4f60\u4e00\u68f5\u6811\uff0c\u6bcf\u4e2a\u8fb9\u4e0a\u6709\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5b9a\u4e49\u4e00\u4e2a\u8282\u70b9\u7684\u5b57\u7b26\u4e32\u4e3a $1$ \u5230\u8fd9\u4e2a\u70b9\u5b57\u7b26\u4e32\u76f8\u8fde\uff0c\u6700\u540e\u7ed9\u4f60\u4e00\u4e2a\u4e32 $t$ \uff0c\u6c42\u8fd9\u4e2a\u4e32\u5728\u6240\u6709\u8282\u70b9\u7684\u5b57\u7b26\u4e32\u51fa\u73b0\u6b21\u6570\u3002\n\n\u5199\u8fd9\u4e2a\u9898\u7684\u539f\u56e0\uff1a[\u8fd9\u4e2a](https://codeforces.com/blog/entry/44351)\u91cc\u627e\u5230\u7684\uff08\u96fe\n\n\u4e0d\u4f1a $\\text{dsu}$\u3002\u3002\u3002\n\n1.\u53ef\u4ee5\u505a\u4e00\u4e2a\u524d\u7f00 $\\text{Hash}$\uff0c**\u65b0\u5230\u4e00\u4e2a\u70b9\u5c31\u66f4\u65b0\u591a\u4e86\u591a\u5c11\u7b54\u6848**\u3002\u6bd4\u5982 $1-2-3$ \u7684\u8def\u5f84\uff0c$1-2$ \u4e0a\u662f $aba$\uff0c$2-3$ \u4e0a\u662f $bab$\uff0c$t$ \u662f $ab$\u3002\u4f60\u505a\u597d $2$ \u7684\u524d\u7f00 $\\text{Hash}$\uff0c\u6269\u5c55\u5230 $3$ \u7684\u65f6\u5019\u5c31\u589e\u52a0 $([a]b)(ab)$ \u4e24\u4e2a\uff0c$[]$ \u8868\u793a\u4e0a\u4e00\u4e2a\u4e32\u7684\uff0c\u590d\u6742\u5ea6 $O(|\u2211|+n)$\u3002\n\n2.\u53ef\u4ee5\u505a\u4e00\u4e2a\u524d\u7f00 $\\text{kmp}$\uff0c\u7136\u540e\u4f60\u65b0\u5b9a\u4e49\u6bcf\u4e2a\u70b9\u7684\u5b57\u7b26\u4e32\u4e3a $t+\\#+$ \u6839\u5230\u8fd9\u4e2a\u70b9\u8def\u5f84\u4e0a\u7684\u5b57\u7b26\u4e32\uff0c\u5bf9\u8fd9\u4e2a\u505a $\\text{kmp}$\uff0c\u7136\u540e\u6c42\u6709\u591a\u5c11 $\\pi$ \u6570\u7ec4\u7684\u957f\u5ea6\u4e3a $|t|$ \u5373\u53ef\u3002\n\n2 \u505a\u6cd5\u662f\u53e3\u80e1\u7684\uff0c\u4f46\u662f\u548c 1 \u5dee\u4e0d\u591a\uff0c\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2a 1 \u7684\u5199\u6cd5\u3002\n\n\u73b0\u5728\u662f $10:56$\uff0c\u6211\u5f00\u59cb\u5199\u8fd9\u4e2a\u9898\u3002\n\n\u73b0\u5728\u662f $11:22$\uff0c\u6211\u5199\u5b8c\u4e86\u3002\n\n```cpp\n#define maxn 300010\nusing u64=unsigned long long;\nint n;\nint x;\nstring edge[maxn],t;\nint len[maxn],mx;\nint head[maxn],Next[maxn],tot,ver[maxn];\nvoid add(int x,int y,string z){\n\tver[++tot]=y;\n\tedge[tot]=z;\n\tlen[tot]=z.size();\n\tmx+=len[tot];\n\tNext[tot]=head[x];\n\thead[x]=tot;\n}\nu64 pw[maxn];\nint ans[maxn];\nu64 Ans;\nu64 f[maxn],G;\nint top;\nu64 H(int l,int r){\n\treturn f[r]-f[l-1]*pw[r-l+1];\n}\nvoid dfs(int x){\n\tfor(int i=head[x];i;i=Next[i]){\n\t\tint y=ver[i];\n\t\tfor(auto j:edge[i]){\n\t\t\ttop++;\n\t\t\tf[top]=f[top-1]*131+j-'a'+1;\n\t\t\tif(top-len[0]+1>=1)\n\t\t\t\tans[y]+=H(top-len[0]+1,top)==G;\n\t\t}\n\t\tdfs(y);\n\t\ttop-=len[i];\n\t}\n}\nsigned main(){\n#ifndef ONLINE_JUDGE\n\tfreopen(\"testdata.in\",\"r\",stdin);\n#endif\n\tcin>>n;\n\trep(i,2,n)cin>>x>>t,add(x,i,t);\n\tcin>>t;\n\tlen[0]=t.size();\n\tfor(auto i:t)G=G*131+i-'a'+1;\n\tpw[0]=1;\n\trep(i,1,mx)pw[i]=pw[i-1]*131;\n\tdfs(1);\n\trep(i,2,n)Ans+=ans[i];\n\tcout<<Ans;\n#ifndef ONLINE_JUDGE\n\tcerr<<endl<<(double)clock()/CLOCKS_PER_SEC;\n#endif\n}\n```\n\u6211\u53bb\uff0c\u88ab++\u8fd0\u7b97\u7684\u4f18\u5148\u7ea7\u57cb\u4f0f\u5230\u4e86\u3002\u3002\u3002\u6211\u539f\u6765\u5199\u7684\u662f ```f[++top]=f[top-1]*131+j-'a'+1```",
        "postTime": 1634093782,
        "uid": 100325,
        "name": "peterwuyihong",
        "ccfLevel": 7,
        "title": "CF291E Tree-String Problem \u8bb0\u5f55"
    },
    {
        "content": "\u4e0d\u7528\u4ec0\u4e48kmp,ac\u81ea\u52a8\u673a\uff0c\u500d\u589e\u4e4b\u7c7b\uff0c\u4e00\u4e2ahash\u76f4\u63a5\u89e3\u51b3\n\n---\n\n### \u9898\u89e3\uff1a\n\n\u6ce8\u610f\u5230\u5b57\u7b26\u6570\u6700\u591a\u53ea\u6709$3\\times 10^5$\uff0c\u4e8e\u662f\u66b4\u529b\u62c6\u5f00\u91cd\u65b0\u6784\u6811\uff0c\u4ece\u4e0a\u5f80\u4e0bdfs\u4e00\u904d\uff0c\u540c\u65f6\u5f00\u4e00\u4e2a\u6808\u8bb0\u5f55\u4e00\u4e0b\u5404\u4e2a\u6df1\u5ea6\u7684\u524d\u7f00hash\u503c\uff0c\u5728\u6bcf\u4e2a\u70b9\u4e0aO(1)\u5224\u65ad\u4e00\u4e0b\u5408\u4e0d\u5408\u6cd5\u5c31\u597d\u4e86\n\n---\n\n### \u4ee3\u7801\uff1a\n\n```cpp\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#pragma GCC target(\"avx,avx2\")\n#include <bits/stdc++.h>\nusing namespace std;\ntemplate<class t> inline t read(t &x){\n\tchar c=getchar();bool f=0;x=0;\n\twhile(!isdigit(c)) f|=c=='-',c=getchar();\n\twhile(isdigit(c)) x=(x<<1)+(x<<3)+(c^48),c=getchar();\n\tif(f) x=-x;return x;\n}\ntemplate<class t,class ...A> inline void read(t &x,A &...a){\n\tread(x);read(a...);\n}\ntemplate<class t> inline void write(t x){\n\tif(x<0) putchar('-'),write(-x);\n\telse{if(x>9) write(x/10);putchar('0'+x%10);}\n}\n\nconst int N=3e5+5;\nint pw,mod,aim,n,m,ha[N],ans;\nchar s[N],ch[N];\nvector<int> g[N];\n\nbool isprime(int x){\n\tfor(int i=2;1ll*i*i<=x;i++) if(x%i==0) return 0;\n\treturn 1;\n}\n\nbool check(int x){\n\treturn (1ll*ha[x-m]*pw%mod+aim)%mod==ha[x]; //O1\u5224\u65ad\n}\n\nvoid dfs(int x,int d){\n\tif(d) ha[d]=(233ll*ha[d-1]+ch[x])%mod; //\u5f00\u4e2a\u6808\u8bb0\u5f55\n\tif(d>=m) ans+=check(d);\n\tfor(int y:g[x]) dfs(y,d+1);\n}\n\nsigned main(){\n\tsrand(time(NULL));\n\tfor(mod=1e9+7+rand();!isprime(mod);mod++) ; //\u6211\u7528\u4e86\u968f\u673a\u6a21\u6570\n\tread(n);\n\tfor(int i=2,nn=n,fa;i<=nn;i++){\n\t\tread(fa);\n\t\tscanf(\"%s\",s+1);m=strlen(s+1);\n\t\tfor(int i=1,last=fa;i<m;i++) g[last].push_back(++n),ch[last=n]=s[i];\n\t\tch[i]=s[m];\n\t\tg[m==1?fa:n].push_back(i);\n\t}\n\tscanf(\"%s\",s+1);m=strlen(s+1);pw=1;\n\tfor(int i=1;i<=m;i++) aim=(233ll*aim+s[i])%mod,pw=233ll*pw%mod;\n\tdfs(1,0);\n\twrite(ans);\n}\n```",
        "postTime": 1596206215,
        "uid": 65735,
        "name": "yuzhechuan",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF291E \u3010Tree-String Problem\u3011"
    },
    {
        "content": "\u9898\u76ee\u8bf4\u6811\u8fb9\u4e0a\u6709\u5c0f\u5199\u5b57\u7b26\u4e32,\u53ef\u4ee5\u770b\u6210\u4ece\u6811\u6839\u5230\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u4e3a\u539f\u4e32,\u6709\u591a\u5c11\u4e2a\u53f6\u5b50\u8282\u70b9\u5c31\u6709\u591a\u5c11\u539f\u4e32,\u5bf9\u6240\u6709\u8fd9\u4e9b\u5b57\u7b26\u4e32\u90fd\u8fdb\u884ckmp\u5c31\u53ef\u4ee5\u8ba1\u7b97\u5339\u914d\u4e32\u51fa\u73b0\u6b21\u6570\n\n**\u90a3\u4e48\u5c31\u662f\u5728\u6811\u4e0a\u8dd1KMP**,\u5177\u4f53\u8dd1kmp\u7684\u65b9\u6cd5\u770b\u4ee3\u7801\n\nps:KMP\u8981\u52a0\u4f18\u5316,\u4e0d\u52a0\u4f18\u5316\u4f1a\u88ab\u6700\u540e\u4e00\u4e2a\u70b9\u5361\n\n```c\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n;\nstruct node\n{\n    int to;\n   string  s;\n};\nvector<node>bian[100005];\nint ans;\nchar  a[100005];\nint next1[100005];int lena;\nvoid get_next(char *b)//\u6c42next\u6570\u7ec4\n{\n     next1[0]=-1;\n    int k=-1;\n    int lenb=strlen(b);\n    for(int i=1;i<lenb;i++)\n    {\n        while(k>=0&&b[k+1]!=b[i])\n        {\n            k=next1[k];\n        }\n        if(b[k+1]==b[i])\n            k++;\n        if(b[i+1]==b[k+1])//kmp\u7684\u4f18\u5316\n        next1[i]=next1[k+1];\n        else next1[i]=k;\n    }\n}\nvoid dfs(int now,int nowj,int fa)//\u8dd1kmp\n{\n    for(int i=0;i<bian[now].size();i++)\n    {\n        if(bian[now][i].to==fa)return;\n        string temp=bian[now][i].s;\n        int lens=temp.size();\n        int j=nowj;\n        for(int k=0;k<lens;k++)\n        {\n            while(j>=0&&a[j+1]!=temp[k])\n            {\n                j=next1[j];\n            }\n            if(a[j+1]==temp[k])j++;\n            if(j==lena-1)\n            {\n               //cout<<temp;\n               // printf(\" now=%d to=%d  %d  %d\\n\",now,bian[now][i].to ,k+1,j+1);\n                ans++;\n                j=next1[j];\n            }\n        }\n        dfs(bian[now][i].to,j,now);\n    }\n   \n}\n\nint main()\n{\n ios_base::sync_with_stdio(0);//cin\u4f18\u5316\n    cin.tie(0);\n    cin>>n;\n    for(int i=2;i<=n;i++)\n    {\n         int p;string temp;\n         cin>>p;\n         cin>>temp;\n         bian[p].push_back(node{i,temp});\n  \n    }\n    cin>>a;\n    lena=strlen(a);\n    get_next(a);\n    dfs(1,-1,0);\n    cout<<ans;\n    return 0;\n}\n\n```\n",
        "postTime": 1579952030,
        "uid": 184309,
        "name": "Little_Biscuit",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF291E \u3010Tree-String Problem\u3011"
    }
]