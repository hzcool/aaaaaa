[
    {
        "content": "**\u9898\u610f**\n\n\u7ed9\u5b9a\u4e00\u68f5$n$\u4e2a\u8282\u70b9\u7684\u65e0\u6839\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u4e3a\u9ed1\u8272\u6216\u8005\u767d\u8272\uff0c\u6bcf\u4e2a\u70b9\u7684\u7b54\u6848\u4e3a\u5305\u542b\u8be5\u70b9\u7684\u5b50\u6811\uff08\u6307\u65e0\u6839\u5b50\u6811\uff09\u7684\u767d\u8272\u8282\u70b9\u6570\u51cf\u9ed1\u8272\u8282\u70b9\u6570\u7684\u6700\u5927\u503c\n\n**\u5206\u6790**\n\n\u5bf9\u4e8e\u65e0\u6839\u6811\u7684\u9898\u4e00\u822c\u6307\u5b9a\u67d0\u4e00\u4e2a\u70b9\u4e3a\u6839\uff0c\u4e0d\u59a8\u8bbe\u4e3a$1$\n\n\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e$1$\u53f7\u8282\u70b9\uff0c\u4ed6\u7684\u67d0\u68f5\u5b50\u6811\uff08\u5c06$1$\u89c6\u4e3a\u6839\uff09\u5982\u679c\u767d\u8272\u8282\u70b9\u6570\u5927\u4e8e\u9ed1\u8272\u8282\u70b9\u6570\uff0c\u5219\u4ed6\u7684\u7b54\u6848\u52a0\u4e0a\u8be5\u5dee\u503c\n\n\u6211\u4eec\u5148\u91c7\u7528\u6811\u5f62$DP$\u5c06\u6240\u6709\u8282\u70b9\u90fd\u8fd9\u6837\u7edf\u8ba1\u4e00\u904d\uff0c\u8fd9\u6837\u5c31\u83b7\u5f97\u4e86\u6765\u81ea\u5b50\u6811\u7684\u8d21\u732e\n\n\u5373$a[i]$\u4e3a\u4ee5$i$\u4e3a\u6839\uff0c\u6240\u6709\u767d\u8272\u8282\u70b9\u6570\u5927\u4e8e\u9ed1\u8272\u8282\u70b9\u6570\u7684\u5b50\u6811\u7684\u8d21\u732e\n\n\u7136\u540e\u5bf9\u4e8e\u9664$1$\u8282\u70b9\u4ee5\u5916\u6240\u6709\u8282\u70b9\uff0c\u8fd8\u9700\u8981\u7edf\u8ba1\u4e0e\u7236\u4eb2\u8fd9\u4e00\u68f5\u65e0\u5411\u5b50\u6811\u7684\u5173\u7cfb\n\n\u8bbe\u904d\u5386\u5230$now$\u8282\u70b9\uff0c\u5b50\u6811\u8282\u70b9\u4e3a$to$\u8282\u70b9\n\n+ $a[to]>0$\uff0c\u5219$now$\u7684\u7b54\u6848\u5b50\u6811\u5305\u62ec$to$\u8282\u70b9\uff0c$to$\u8282\u70b9\u9009\u62e9$now$\u7684\u7b54\u6848\u5b50\u6811\u548c$to$\u7684\u7b54\u6848\u5b50\u6811\u4e2d\u7684\u6700\u5927\u503c\uff08\u56e0\u4e3a\u5df2\u7ecf\u5305\u62ec\uff0c\u6240\u4ee5\u4e0d\u662f\u52a0\u548c\uff09\n  $$\n  a[to] = max(a[to], a[now])\n  $$\n\n+ $a[to]\\leq0$\uff0c\u5219$now$\u7684\u7b54\u6848\u5b50\u6811\u4e0d\u5305\u62ec$to$\u8282\u70b9\uff0c$to$\u8282\u70b9\u9009\u62e9\u4e0e$now$\u7684\u7b54\u6848\u5b50\u6811\u8fdb\u884c\u62fc\u63a5\u6216\u4e0d\u62fc\u63a5\u7684\u6700\u5927\u503c\uff08\u56e0\u4e3a\u4e0d\u5305\u62ec\uff0c\u6240\u4ee5\u662f\u52a0\u548c\uff09\n  $$\n  a[to] = max(a[to], a[now] + a[to])\n  $$\n  \n\n```cpp\n#pragma GCC optimize(3, \"Ofast\", \"inline\")\n\n#include <bits/stdc++.h>\n\n#define start ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n#define ll long long\n#define int ll\n#define ls st<<1\n#define rs st<<1|1\n#define pii pair<int,int>\nusing namespace std;\nconst int maxn = (ll) 3e5 + 5;\nconst int mod = 1000000007;\nconst int inf = 0x3f3f3f3f;\nvector<int> v[maxn];\nint a[maxn];\n\nvoid dfs(int now, int pre) {\n    for (auto &to:v[now]) {\n        if (to == pre)\n            continue;\n        dfs(to, now);\n        if (a[to] > 0)\n            a[now] += a[to];\n    }\n}\n\nvoid dfs2(int now, int pre) {\n    for (auto &to:v[now]) {\n        if (to == pre)\n            continue;\n        if (a[to] > 0)\n            a[to] = max(a[to], a[now]);\n        else\n            a[to] = max(a[to], a[now] + a[to]);\n        dfs2(to, now);\n    }\n}\n\nsigned main() {\n    start;\n    int n;\n    cin >> n;\n    for (int i = 1; i <= n; ++i) {\n        cin >> a[i];\n        if (a[i] == 0)\n            a[i] = -1;\n    }\n    for (int i = 1; i < n; ++i) {\n        int x, y;\n        cin >> x >> y;\n        v[x].push_back(y);\n        v[y].push_back(x);\n    }\n    dfs(1, 0);\n    dfs2(1, 0);\n    for (int i = 1; i <= n; ++i)\n        cout << a[i] << ' ';\n    return 0;\n}\n```",
        "postTime": 1584072160,
        "uid": 147428,
        "name": "F_Mu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1324F \u3010Maximum White Subtree\u3011"
    },
    {
        "content": "# \u3010DP\u3011 CF1324F Maximum White Subtree\n\n## Description\n\n- \u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u8282\u70b9\u65e0\u6839\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9 $u$ \u6709\u4e00\u4e2a\u989c\u8272 $a_u$\uff0c\u82e5 $a_u$ \u4e3a $0$ \u5219 $u$ \u662f\u9ed1\u70b9\uff0c\u82e5 $a_u$ \u4e3a $1$ \u5219 $u$ \u662f\u767d\u70b9\u3002\n- \u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9 $u$\uff0c\u9009\u51fa\u4e00\u4e2a**\u5305\u542b** $u$ \u7684\u8fde\u901a\u5b50\u56fe\uff0c\u8bbe\u5b50\u56fe\u4e2d\u767d\u70b9\u4e2a\u6570\u4e3a $cnt_1$\uff0c\u9ed1\u70b9\u4e2a\u6570\u4e3a $cnt_2$\uff0c\u8bf7\u6700\u5927\u5316 $cnt_1 - cnt_2$\u3002\u5e76\u8f93\u51fa\u8fd9\u4e2a\u503c\u3002\n- $1 \\leq n \\leq 2 \\times 10^5$\uff0c$0 \\leq a_u \\leq 1$\u3002\n\n## Solution\n\n\u9996\u5148\u4e0d\u59a8\u94a6\u5b9a $1$ \u662f\u8fd9\u68f5\u6811\u7684\u6839\u3002\n\n\u6211\u4eec\u8003\u8651\u8fc7\u4e00\u4e2a\u70b9 $u$ \u7684\u8fde\u901a\u5757\u53ef\u4ee5\u88ab\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u7b2c\u4e00\u90e8\u5206\u662f\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\u5185\u7684\u90e8\u5206\uff0c\u7b2c\u4e8c\u90e8\u5206\u662f $u$ \u4e3a\u6839\u7684\u5b50\u6811\u5916\u7684\u90e8\u5206\u3002\u5982\u679c\u80fd\u5206\u522b\u8ba1\u7b97\u51fa\u8fd9\u4e24\u90e8\u5206\u7684\u6700\u5927\u503c\uff0c\u663e\u7136\u5c06\u4ed6\u4eec\u52a0\u8d77\u6765\u5c31\u662f $u$ \u6240\u5728\u8fde\u901a\u5757\u7684\u6700\u5927\u503c\u3002\n\n\u9996\u5148\u8003\u8651\u7b2c\u4e00\u90e8\u5206\u7684\u8ba1\u7b97\uff0c\u662f\u4e00\u4e2a\u57fa\u7840\u7684\u6811\u5f62 dp\uff0c\u8bbe $f_u$ \u662f\u8003\u8651\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\uff0c$u$ \u6240\u5728\u7684\u8fde\u901a\u5757\u7684\u6700\u5927\u503c\u3002\u8f6c\u79fb\u4e3a\n\n$$f_u = \\operatorname{colour}_u + \\sum\\limits_{v \\in \\operatorname{Subtree}(u)} \\max(f_v, 0)$$\n\n\u5176\u4e2d\u82e5 $a_u = 1$\uff0c\u5219 $\\operatorname{colour}_u = 1$\uff0c\u5426\u5219 $\\operatorname{colour}_u = -1$\u3002\n\n\u5373\u679a\u4e3e $u$ \u7684\u6bcf\u4e2a\u5b50\u8282\u70b9 $v$\uff0c\u82e5 $f_v$ \u5927\u4e8e $0$\uff0c\u5219\u5c06 $v$ \u5b50\u6811\u5185\u7684\u8fde\u901a\u5757\u4e0e $u$ \u8054\u901a\u3002\n\n\u8003\u8651\u7b2c\u4e8c\u90e8\u5206\u7684\u8ba1\u7b97\uff0c\u4e5f\u662f\u4e00\u4e2a\u6811\u5f62 dp\u3002\u8bbe $g_u$ \u662f\u6574\u5f20\u56fe\u53bb\u6389\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\uff0c\u4f46\u4fdd\u7559\u70b9 $u$ \u4ee5\u540e\u6784\u6210\u7684\u56fe\u4e2d\uff0c$u$ \u6240\u5728\u7684\u8fde\u901a\u5757\u7684\u6700\u5927\u503c\u3002\u5f62\u8c61\u5730\u8bf4\uff0c$g_u$ \u6240\u4ee3\u8868\u7684\u8fde\u901a\u5757\u8981\u4e48\u53ea\u6709 $u$ \u4e00\u4e2a\u8282\u70b9\uff0c\u8981\u4e48\u4e0e $u$ \u76f4\u63a5\u76f8\u8fde\u7684\u53ea\u6709 $u$ \u7684\u7236\u4eb2\u4e00\u4e2a\u8282\u70b9\u3002\n\n\u8bbe $u$ \u7684\u7236\u4eb2\u4e3a $p$\uff0c$u$ \u7684\u8f6c\u79fb\u4e00\u5b9a\u6765\u81ea $g_p$ \u548c $u$ \u7684\u5144\u5f1f\u8282\u70b9\u7684\u5b50\u6811\u3002\u5373\n\n$$g_u = \\operatorname{colour}_u + \\max(0, g_p + \\sum\\limits_{v \\in \\operatorname{Subtree}(p)}^{v \\neq u} \\max(f_v,0 ))$$\n\n\u663e\u7136\u8fd9\u4e2a dp \u662f $O(n^2)$ \u7684\uff0c\u6211\u4eec\u8003\u8651\u4f18\u5316\u3002\n\n\u6ce8\u610f\u5230 $g_u$ \u7684\u6700\u540e\u4e00\u4e2a $\\Sigma$ \u957f\u5f97\u5f88\u50cf $f_p$ \u7684\u8ba1\u7b97\u8fc7\u7a0b\uff0c\u6211\u4eec\u8003\u8651\u7528 $f_p$ \u6765\u8868\u793a\u8fd9\u4e2a\u5f0f\u5b50\u3002\n\n\u7531\u4e8e\n\n$$f_p = \\operatorname{colour}_p + \\sum\\limits_{v \\in \\operatorname{Subtree}(p)} \\max(f_v, 0)$$\n\n\u6240\u4ee5\n\n$$\\sum\\limits_{v \\in \\operatorname{Subtree}(p)}^{v \\neq u} \\max(f_v,0 )) = f_p - \\max(0, f_u) - \\operatorname{colour}_p$$\n\n\u56e0\u6b64\n\n$$g_u = \\operatorname{colour}_u + \\max(0, g_p + f_p - \\max(0, f_u) - \\operatorname{colour}_p)$$\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5 $O(n)$ \u8ba1\u7b97 $g$ \u4e86\u3002\n\n\u6700\u540e\u8003\u8651\u7edf\u8ba1\u7b54\u6848\uff0c\u6211\u4eec\u6ce8\u610f\u5230 $\\operatorname{color}_u$ \u88ab\u7b97\u4e86\u4e24\u904d\uff0c\u6240\u4ee5\u8981\u5728 $g_u$ \u4e2d\u51cf\u53bb\u4e00\u904d\u3002\u5f53\u7136\uff0c\u53bb\u6389 $\\operatorname{color}_u$ \u4ee5\u540e\uff0c$g_u$ \u4e5f\u53ef\u4ee5\u6574\u4e2a\u4e0d\u9009\u3002\u56e0\u6b64\n\n$$ans_u = f_u + \\max(0, g_u - \\operatorname{colour}_u)$$\n\n\u505a\u4e24\u6b21 dfs \u5373\u53ef\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$\u3002\n\n## Code\n\n```cpp\nconst int maxn = 200005;\n\nint n;\nint a[maxn], fa[maxn], f[maxn], g[maxn], ans[maxn], h[maxn];\nstd::vector<int> e[maxn];\n\nvoid dfs(const int u);\nvoid dfs(const int u, const int ff);\n\nint main() {\n  freopen(\"1.in\", \"r\", stdin);\n  qr(n);\n  for (int i = 1; i <= n; ++i) {\n    qr(a[i]);\n  }\n  for (int i = 1, u, v; i < n; ++i) {\n    u = v = 0; qr(u); qr(v);\n    e[u].push_back(v);\n    e[v].push_back(u);\n  }\n  dfs(1, 0);\n  g[1] = a[1] ? 1 : -1;\n  ans[1] = f[1];\n  for (auto u : e[1]) {\n    dfs(u);\n  }\n  for (int i = 1; i <= n; ++i) {\n    qw(ans[i], i == n ? '\\n' : ' ', true);\n  }\n  return 0;\n}\n\nvoid dfs(const int u, const int p) {\n  fa[u] = p;\n  f[u] = a[u] ? 1 : -1;\n  for (auto v : e[u]) if (v != p) {\n    dfs(v, u);\n    if (f[v] > 0) f[u] += f[v];\n  }\n}\n\nvoid dfs(const int u) {\n  int p = fa[u], tt = g[p] + f[p] - (a[p] ? 1 : -1);\n  if (f[u] > 0) tt -= f[u];\n  if (tt < 0) tt = 0;\n  ans[u] = f[u] + tt;\n  g[u] = tt + (a[u] ? 1 : -1);\n  for (auto v : e[u]) if (v != fa[u]) {\n    dfs(v);\n  }\n}\n```\n\n",
        "postTime": 1584081106,
        "uid": 65363,
        "name": "\u4e00\u6276\u82cf\u4e00",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1324F \u3010Maximum White Subtree\u3011"
    },
    {
        "content": "upd\uff1a\u4fee\u6539\u4e86\u4e00\u5904\u7b14\u8bef\uff0c\u8bf7\u7ba1\u7406\u5458\u91cd\u65b0\u5ba1\u6838\u3002\u611f\u8c22[dezhonger](https://www.luogu.com.cn/user/200037)\u6307\u51fa\u3002\n\n\u9898\u76ee\u5927\u610f\uff1a\u7ed9\u5b9a\u4e00\u68f5**\u65e0\u6839**\u6811\uff0c\u6bcf\u4e2a\u70b9\u90fd\u662f\u9ed1\u8272\u6216\u767d\u8272\uff0c\u8bbe\u4e00\u68f5\u5b50\u6811\u7684\u6743\u503c\u662f\u5176\u4e2d\u767d\u70b9\u7684\u4e2a\u6570\u51cf\u53bb\u5176\u4e2d\u9ed1\u70b9\u7684\u4e2a\u6570\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u6c42\u51fa\u5305\u542b\u5b83\u7684\u6240\u6709\u5b50\u6811\u4e2d\u6743\u503c\u7684\u6700\u5927\u503c\u3002$n\\le 2\\times10^5$\u3002\n\n\u89e3\u6790\uff1a\u601d\u535a tree dp+\u6362\u6839 dp\u3002\n\n\u82e5\u4e00\u4e2a\u70b9 $i$ \u4e3a\u767d\u8272\uff0c\u5219\u4ee4 $col_i=1$\uff0c\u5426\u5219\u4ee4 $col_i=-1$\u3002\n\n\u6211\u4eec\u9996\u5148\u94a6\u5b9a $1$ \u4e3a\u6839\uff0c\u7136\u540e\u5047\u8bbe $dp_i$ \u662f\u4ee5 $i$ \u4e3a\u6839\u7684\u5b50\u6811\u7684\u7b54\u6848\uff0c\u5219\u663e\u7136\n\n$$dp_i=col_i+\\sum\\limits_{v\\in son_j}\\max(0,dp_j)$$\n\n\u8fd9\u7b2c\u4e00\u90e8\u5206\u662f\u5f88\u663e\u7136\u7684\u3002\n\n\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u8981\u6362\u6839 dp \u4e86\uff0c\u5047\u8bbe $dp^\\prime_i$ \u8868\u793a $i$ \u4e3a\u6839\u7684\u7b54\u6848\uff0c\u82e5 $i\\neq 1$ \u5219\n\n$$dp^\\prime_i=\\max(0,dp^\\prime_f-\\max(0,dp_i))+dp_i$$\n\n\u5176\u4e2d $f$ \u8868\u793a $1$ \u4e3a\u6839\u65f6 $i$ \u7684\u7236\u4eb2\uff0c\u5373\u5c06\u7236\u4eb2\u7684\u7b54\u6848\u6d88\u53bb\u81ea\u8eab\u5f71\u54cd\u540e\u5f53\u6210\u81ea\u5df1\u7684\u5b50\u6811\u3002\n\n\u4e8e\u662f dfs \u4e24\u904d\u5373\u53ef\u3002\u6ce8\u610f dp \u7684\u987a\u5e8f\uff0c\u4e00\u4e2a\u662f\u4ece\u53f6\u5230\u6839\uff0c\u4e00\u4e2a\u662f\u4ece\u6839\u5230\u53f6\u3002\n\n$\\texttt{code:}$\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<fstream>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n#define Set(a) memset(a,0,sizeof(a))\n#define F(i,a,b) for(register int i=a,i##end=b;i<=i##end;++i)\n#define UF(i,a,b) for(register int i=a,i##end=b;i>=i##end;--i)\n#define openf(a) freopen(#a\".in\",\"r\",stdin);freopen(#a\".out\",\"w\",stdout)\n#define re register\n#define ri re int\n#define il inline\ntypedef long long ll;\ntypedef unsigned long long ull;\ntemplate<typename T> inline T rd(T& x)\n{\n\tT f=1;x=0;char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n\tfor(; isdigit(c);c=getchar()) x=(x<<3)+(x<<1)+(T)(c-'0');\n\tx*=f;\n\treturn x;\n}\nll rd(){ll x;rd(x);return x;}\ninline int max(int a,int b){return a>b?a:b;}\ninline int min(int a,int b){return a<b?a:b;}\nconst int inf=1<<30;\n\nconst int N=200005;\nint col[N],dp[N],dp2[N];\nint head[N],to[N<<1],nxt[N<<1],tot=0;void add(int u,int v){to[++tot]=v;nxt[tot]=head[u];head[u]=tot;}\nvoid dfs1(int u,int f)\n{\n\tdp[u]=col[u];\n\tfor(ri i=head[u];i;i=nxt[i]) if(to[i]!=f) {dfs1(to[i],u);dp[u]+=max(0,dp[to[i]]);}\n}\nvoid dfs2(int u,int f)\n{\n\tif(u!=1) dp2[u]=max(dp2[f]-max(0,dp[u]),0)+dp[u];\n\tfor(ri i=head[u];i;i=nxt[i]) if(to[i]!=f) dfs2(to[i],u);\n}\nint main()\n{\n\tint n=rd();\n\tF(i,1,n) col[i]=2*rd()-1;\n\tF(i,1,n-1) {int u,v;rd(u);rd(v);add(u,v);add(v,u);}\n\tdfs1(1,0);dp2[1]=dp[1];dfs2(1,0);\n\tF(i,1,n) printf(\"%d \",dp2[i]);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1584064864,
        "uid": 130151,
        "name": "WYXkk",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1324F \u3010Maximum White Subtree\u3011"
    },
    {
        "content": "\u6811\u5f62DP\u9898  \n\u6c42\u5b50\u6811\u4e2d\u7684\u8d21\u732e\u6bd4\u8f83\u7b80\u5355, \u8bbe$f_i$\u4e3a$i$\u7684\u5b50\u6811\u4e2d\u7684\u8d21\u732e, \u6709$f_i = color_i \\sum_{k \\in son_{i}}max\\{f_k,0\\}$\uff0c \u5176\u4e2d$color_i \\in \\{-1,1\\}$\uff08\u9ed1\u8272 /\u767d\u8272\uff09  \n\u7136\u540e\u8003\u8651\u975e\u6839\u8282\u70b9, \u5047\u8bbe\u5c06\u5b83\u4f5c\u4e3a\u6839\u8282\u70b9, \u663e\u7136\u539f\u6765\u8fde\u63a5\u7740\u7236\u8282\u70b9\u7684\u8fb9\u4f1a\u53d8\u6210\u8fde\u63a5\u7740\u4e00\u68f5\u5b50\u6811\u3002\u8fd9\u68f5\u5b50\u6811\u4e5f\u8981\u8003\u8651\u5728\u5185\u3002\u8003\u8651\u4ece\u4e0a\u5f80\u4e0b$dp$, \u8bb0\u8282\u70b9$i$\u7684\u7236\u4eb2\u4e3a$fa_i$, \u5b83\u7684\u5144\u5f1f\u96c6\u5408$A=son_{fa_i}-i$, $g_i$\u4ee3\u8868\u8fd9\u4e2a\u989d\u5916\u5b50\u6811\u5bf9\u7b54\u6848\u7684\u8d21\u732e, \u5219\u6709$g_i = g_{fa_i}+color_{fa_i}+\\sum_{k \\in A}f_k$\u3002\u8fd9\u4e2a\u201c\u5b50\u6811\u201d\u662f\u53ef\u9009\u7684, \u82e5\u5176\u503c\u5c0f\u4e8e0\u4e5f\u53ef\u4ee5\u820d\u5f03\u3002 \u56e0\u6b64\u8282\u70b9$i$\u7684\u7b54\u6848\u4e3a$f_i + max\\{g_i, 0\\}$\u3002  \n```cpp\n#include <bits/stdc++.h>\n#define endl '\\n'\n#define rep(i,a,b) for(int i=a;i<=(b);++i)\n#define per(i,a,b) for(int i=a;i>=(b);--i)\n#define repp(i,a,b) for(int i=a;i<(b);++i)\n#define perr(i,a,b) for(int i=a;i>(b);--i)\n#define pb push_back\n#define rz resize\n#define itra(T) vector<T>::iterator\n#define VI vector<int>\n#define VL vector<long long>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int,int> pii;\n\nconst int inf = 0x3f3f3f3f;\nconst ll linf = 0x3f3f3f3f3f3f3f3f;\n\ninline void ponchline() { cout << \"##################################\" << endl; }\ninline ll qp(ll a, ll b, ll p) { ll res = 1%p; for(;b;b>>=1) { if(b&1)res=res*a%p; a=a*a%p; } return res; }\ninline ll gcd(ll a, ll b) { while(b) { int t = b; b = a%b; a=t; } return a; }\nmt19937 mrand(random_device{}()); int rnd(int x) { return mrand() % x;}\n\nvector< VI > edge;\nvector<int> fa, col, dp1, dp2;\n\nvoid dfs1(int pre, int cur) {\n\tfa[cur] = pre;\n\tdp1[cur]=col[cur];\n\tfor(int ver : edge[cur]) {\n\t\tif(ver == pre) continue;\n\t\tdfs1(cur, ver);\n\t\tdp1[cur] += dp1[ver]<0?0:dp1[ver];\n\t}\n}\n\nvoid dfs2(int pre, int cur) {\n\tdp2[cur] = max(dp2[pre]+dp1[pre]-(dp1[cur]>0?dp1[cur]:0), 0);\n\tfor(int ver : edge[cur]) {\n\t\tif(ver==pre) continue;\n\t\tdfs2(cur, ver);\n\t}\n}\n\nint main() {\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\tint n,u,v;\n\tcin >> n;\n\tedge.rz(n+1);\n\tfa.rz(n+1);\n\tcol.rz(n+1);\n\tdp1.rz(n+1);\n\tdp2.rz(n+1);\n\trep(i,1,n) {\n\t\tcin>>col[i];\n\t\tif(!col[i]) col[i]=-1;\n\t}\n\trep(i,1,n-1) {\n\t\tcin>>u>>v;\n\t\tedge[u].pb(v);\n\t\tedge[v].pb(u);\n\t}\n\tdfs1(1,1);\n\tdfs2(0,1);\n\trep(i,1,n) cout << dp1[i] + max(dp2[i], 0) << ' ';\n\tcout << endl;\n\treturn 0;\n}\n\n\n```",
        "postTime": 1585454188,
        "uid": 88735,
        "name": "\u5bd2\u9e3d\u513f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1324F \u3010Maximum White Subtree\u3011"
    },
    {
        "content": "\u770b\u4e86\u770b\u9898\u89e3,\u5927\u591a\u6570\u90fd\u662fDP.\n\n\u5176\u5b9e\u4f5c\u4e3a\u4e00\u9053div3\u7684\u9898\u6765\u8bf4,\u8fd9\u9053\u9898\u4e5f\u7b97\u633a\u6c34\u4e86.\n\n\u770b\u4e00\u773c\u6570\u636e\u8303\u56f4,\u611f\u89c9\u7b97\u6cd5\u5e94\u8be5\u662f\u4e00\u4e2aO(n).\n\n\u56e0\u4e3a\u662f\u4e00\u4e2a\u65e0\u6839\u6811,\u53ef\u4ee5\u8003\u8651\u5148\u4ee51\u53f7\u70b9\u4e3a\u6839,DFS\u4e00\u4e0b,\u6c42\u51fa\u6bcf\u4e2a\u70b9\u80fd\u8fbe\u5230\u7684\u6700\u5927\u5dee\u503c.\n\n\u6b64\u65f6\u6ce8\u610f\u5230,\u53ea\u8981\u662f\u5305\u542b\u8be5\u8282\u70b9\u7684\u5b50\u56fe,\u5c31\u53ef\u4ee5,\u56e0\u6b64\u6211\u4eec\u8fd8\u9700\u8981\u5904\u7406\u4e00\u4e0b\u6bcf\u4e00\u4e2a\u8282\u70b9\u4e0e\u5b83\u7236\u4eb2\u8282\u70b9\u7684\u5173\u7cfb,\u5373\u9009\u62e9\u5b50\u56fe\u7684\u65f6\u5019\u8981\u4e0d\u8981\u9009\u7236\u4eb2\u8282\u70b9.\n\n\u4e24\u8fb9DFS,\u590d\u6742\u5ea6O(n),\u8fd9\u9898\u5c31\u8fc7\u5566.\n\n\u8bdd\u4e0d\u591a\u8bf4,\u4e0a\u4ee3\u7801.\u4e00\u4e9b\u96be\u7406\u89e3\u7684\u5730\u65b9\u4ee3\u7801\u4e5f\u5df2\u7ecf\u5199\u6e05\u695a\u4e86.\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<queue>\n#include<stack>\n#include<vector>\n#include<map>\n//#include<windows.h>\n#include<algorithm>\n#define N 200050\n#define INF 0x7fffffff\n#define int long long \n#define ll long long \n#define lson (now<<1)\n#define rson (now<<1|1)\n#define pii pair<int ,int >\n#define pushup(now)  tr[now].sum=(tr[lson].sum+tr[rson].sum)%mod;\nusing namespace std;\ninline int read(){\n\tint now=0;char c=getchar();int f=1;\n\twhile(c<'0'||c>'9'){\n\t\tif(c=='-')f=-1;c=getchar();\n\t}\n\twhile(c>='0'&&c<='9'){\n\t\tnow=(now<<1)+(now<<3)+(c^48);\n\t\tc=getchar();\n\t}\n\treturn f*now;\n}\nint n,m,ans,size[N],tot,head[N],a[N];\nstruct node{\n    int next,v;\n}edge[N<<1];\ninline void add(int x,int y){\n    edge[++tot].next=head[x];edge[tot].v=y;head[x]=tot;\n}\ninline int dfs1(int now,int fa){\n    size[now]=(a[now]==1?1:-1);\n    for(int i=head[now];i;i=edge[i].next){\n        int v=edge[i].v;\n        if(v==fa)continue;\n        int sum=dfs1(v,now);\n        if(sum>0)size[now]+=sum;\n    }\n    return size[now];\n}\ninline void dfs2(int now,int fa){\n    for(int i=head[now];i;i=edge[i].next){\n        int v=edge[i].v;\n        if(v==fa)continue;\n        if(size[v]<0){//\u5982\u679c\u8fd9\u4e2a\u70b9\u7684size\u5927\u4e8e0,\u5219\u5728\u6c42\u5b83\u7236\u4eb2\u7684\u6700\u5927\u63d2\u503c\u65f6,\u80af\u5b9a\u5df2\u7ecf\u9009\u8fc7\u8fd9\u4e2a\u70b9\u4e86,\u9632\u6b62\u91cd\u590d\u8ba1\u6570.\n            size[v]=max(size[v],size[now]+size[v]);\n        }\n        else\n        size[v]=max(size[v],size[now]);\n        dfs2(v,now);\n    }\n}\nsigned main(){\n    n=read();\n    for(int i=1;i<=n;i++)a[i]=read();\n    for(int i=1;i<n;i++){\n        int x,y;x=read();y=read();\n        add(x,y);add(y,x);\n    }\n    dfs1(1,0);\n    dfs2(1,0);\n    for(int i=1;i<=n;i++)\n    printf(\"%d \",size[i]);\n    printf(\"\\n\");\n    system(\"pause\");\n    return 0;\n}\n```\n",
        "postTime": 1584445502,
        "uid": 231136,
        "name": "\u51e0\u4f55\u4e4b\u821e\u4e36",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1324F \u3010Maximum White Subtree\u3011"
    },
    {
        "content": "# \u8bf4\u4e00\u4e2a\u4e0d\u7528\u6362\u6839\u7684\u65b9\u6cd5\n\n## Part 1 \u5148\u6c42\u51fa\u6709\u6839\u6811\u4e2d\u6bcf\u4e00\u4e2a\u8282\u70b9\u53ca\u5176\u513f\u5b50\u6784\u6210\u7684\u6811\uff08\u5305\u62ec\u5f53\u524d\u8282\u70b9\uff09\u7684\u6700\u5927\u503c\u3002\n\n\u600e\u4e48\u6c42\u5462\uff1f\n\n\u8bbe$dp_i$\u8868\u793a\u7b2c$i$\u4e2a\u8282\u70b9\u53ca\u5176\u513f\u5b50\u6811\u4e2d\u5fc5\u987b\u9009$i$\u7684\u6700\u5927\u503c\u3002\n\n\u521d\u503c\uff1a\n\n$$\ndp_i\n\\begin{cases}\n1, &(a_i=1)\\\\\n-1, &(a_i=0)\n\\end{cases}\n$$\n\nDFS\u56de\u6eaf\u65f6\u6c42\u7ed3\u679c\uff1a\n\n**\u5982\u679c$i$\u7684\u4e00\u4e2a\u513f\u5b50\u7684\u503c\u5927\u4e8e0\uff0c\u5c31\u8ba9$i$\u7684\u503c\u52a0\u5b83\uff08\u6bcf\u4e2a\u513f\u5b50\u4e92\u4e0d\u76f8\u901a\uff0c\u4e0d\u5b58\u5728\u91cd\u590d\uff09\uff0c\u4ee5\u4fdd\u8bc1\u503c\u6700\u5927\u3002**\n\n$$dp_i+=\\sum{dp_{son_i}(dp_{son_i}>0)}$$\n\n## Part 2 \u6c42\u8282\u70b9\u9664\u4e86\u81ea\u5df1\u548c\u513f\u5b50\u5916\u7684\u6811\u7684\u6700\u5927\u503c\n\n**\u5982\u679c\u6700\u5927\u503c\u65f6\u7684\u5b50\u6811\u5305\u62ec\u4e0d\u5c5e\u4e8e\u5b83\u53ca\u5b83\u7684\u513f\u5b50\u7684\u8282\u70b9\uff0c\u90a3\u4e48\u4e00\u5b9a\u5305\u62ec\u5b83\u7684\u7236\u4eb2\u3002**\n\n\u4ece\u4e0a\u5f80\u4e0bDFS\uff0c\u8bbf\u95ee\u8282\u70b9\u524d\uff0c\u66f4\u65b0\u7b54\u6848\u3002\n\n$$dp_i=dp_i+dp_{father}(dp_{father}>0)$$\n\n\u8fd9\u6837\u662f\u5426\u6b63\u786e\uff1f\n\n\u8fde\u6837\u4f8b\u90fd\u8fc7\u4e0d\u4e86\uff01\n\n**\u4e3a\u4ec0\u4e48\uff1f**\n\n\u7ecf\u8fc7\u601d\u8003\uff0c\u4f60\u627e\u51fa\u4e86\u95ee\u9898\uff1a\n\n**\u4e00\u4e2a\u8282\u70b9\u7684\u7236\u4eb2\u7684\u7b54\u6848\uff0c\u53ef\u80fd\u5305\u62ec\u4e86\u8fd9\u4e2a\u8282\u70b9\u53ca\u5176\u5b50\u6811\uff0c\u4f1a\u5bfc\u81f4\u7b54\u6848\u88ab\u8ba1\u7b97\u4e86\u4e24\u904d\u3002**\n\n\u5982\u4f55\u89e3\u51b3\uff1f\n\n\u8fd9\u91cc\u56e0\u4e3a\u662f\u5728\u6253\u6bd4\u8d5b\u65f6\u505a\u7684\uff0c\u6ca1\u6709\u591a\u60f3\u3002\u76f4\u63a5\u7528\u4e86\u4e00\u4e2amap\u5b58\u50a8\u5bf9\u5f53\u524d\u8282\u70b9\u6709\u8d21\u732e\u7684\u513f\u5b50\u53ca\u5176\u7b54\u6848\u3002\uff08Part 1\u4e2d\u7684\uff09\n\n\u8f6c\u79fb\u5f0f\u53d8\u4e3a\uff1a\n$$\ndp_i=dp_i+dp_{father}-g_{father,i}(dp_{father}-g_{father,i}>0)\n$$\n\u5176\u4e2d$g_{father,i}$\u8868\u793a\u8282\u70b9$i$\u5728Part 1\u4e2d\u5bf9\u8282\u70b9$father$\u505a\u51fa\u4e86\u8d21\u732e\uff0c\u503c\u4e3a$g_{father,i}$\u3002\n\n## Part 3 \u8f93\u51fa\u7b54\u6848\n\n$dp_i$\u5373\u4e3a\u6240\u6c42\u3002\n\n## \u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n)$\u3002\n\n\u8fd9\u91cc\u662f\u6309\u7167\u603b\u5171\u6709$(n-1)$\u4e2a\u513f\u5b50\uff0cmap\u590d\u6742\u5ea6\u4e3a$O(\\log n)$\u8ba1\u7b97\u7684\uff0cDFS\u7684\u590d\u6742\u5ea6\u4e3a$O(n)$\uff0c\u4f46\u663e\u7136map\u8dd1\u4e0d\u6ee1\u4e00\u4e2a$\\log$\u3002\n\n### \u53c2\u8003\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<map>\n#include<algorithm>\n#define ri register in\n#define in long long\n#define g() getchar()\ninline in read(){//\u5feb\u8bfb \n\tri x=0;register char ch=g();\n\twhile(ch>'9' || ch<'0')ch=g();\n\twhile(ch<='9' && ch>='0')\n\t\tx=(x<<3)+(x<<1)+ch-'0',ch=g();\n\treturn x;\n}\nusing namespace std;\nin a[200005],fir[200005],nex[400005],to[400005],idx;\n//dp\u6570\u7ec4\u7528a\u4ee3\u66ff\uff0c\u540e\u9762\u4e3a\u94fe\u5f0f\u524d\u5411\u661f\nmap<in,in>v[200005];//map\u771f\u597d\uff01\uff08unordered_map\u66f4\u597d\uff09 \nvoid dfs(in x,in fa){//Part 1\n\tfor(in i=fir[x],y;i;i=nex[i]){\n\t\tif((y=to[i])==fa)continue;\n\t\tdfs(y,x);\n\t\tif(a[y]>0)a[x]+=a[y],v[x][y]=a[y];\n\t\t//\u5bf9\u7b54\u6848\u6709\u8d21\u732e\uff0c\u66f4\u65b0\u7b54\u6848\uff0c\u8bb0\u5f55\u8d21\u732e \n\t}\n\treturn;\n}\nvoid dfs2(in x,in fa){//Part 1 \n\tin T=a[fa]-v[fa][x];\n\t//\u8bb0\u5f55\u82e5\u52a0\u5165\u4e0d\u5c5e\u4e8e\u81ea\u5df1\u6216\u513f\u5b50\uff08\u7956\u5b59\uff09\u7684\u70b9\u7684\u8d21\u732e\uff0c\n\t//\u4e3a\u4ec0\u4e48\u662f\u8fd9\u6837\u9898\u89e3\u91cc\u9762\u5df2\u7ecf\u5199\u4e86\u3002\n\t//\u82e5\u4e0d\u5b58\u5728\u8d21\u732e\uff0cv[fa][x]\u9ed8\u8ba4\u4e3a0\uff08map\u7279\u6027\uff09\u3002 \n\tif(T>0)a[x]+=T;//\u505a\u51fa\u8d21\u732e \n\tfor(ri i=fir[x],y;i;i=nex[i]){\n\t\tif((y=to[i])==fa)continue;\n\t\tdfs2(y,x);\n\t\t//\u4e3a\u4ec0\u4e48\u8981\u5728\u5f00\u59cb\u7684\u65f6\u5019\u66f4\u65b0\u7b54\u6848\u5462\uff1f\n\t\t//\u56e0\u4e3a\u8fd9\u4e00\u6b21\u7b54\u6848\u7531\u7236\u4eb2\u66f4\u65b0\uff0c\u800c\u4e0d\u662f\u513f\u5b50\u3002 \n\t}\n\treturn;\n}\nint main(){\n\tri n=read();\n\tfor(ri i=1;i<=n;++i)a[i]=(read()==1)?1:-1;\n\tfor(ri i=1,x,y;i<n;++i)//\u8bfb\u5165\uff0c\u5efa\u8fb9 \n\t\tnex[++idx]=fir[x=read()],fir[x]=idx,to[idx]=y=read(),\n\t\tnex[++idx]=fir[y],fir[y]=idx,to[idx]=x;\n\tdfs(1,0),dfs2(1,0);//\u65e0\u6839\u53d8\u6709\u6839\uff0cfa\u7684\u503c\u4e5f\u53ef\u4ee5\u4e3a1\u3002 \n\tfor(ri i=1;i<=n;++i)printf(\"%d \",a[i]);//\u8f93\u51fa\u7b54\u6848\u3002 \n\treturn 0;\n}\n```\n## \u6548\u7387\uff1a\n\u7528\u65f6 $1.51s$ \u5185\u5b58 $21.49MB$\n\n\u6d4b\u8bd5\u70b9\u6700\u5927\u7528\u65f6\uff1a$217ms$\n\n[\u63d0\u4ea4\u8bb0\u5f55](https://www.luogu.com.cn/record/31683026)\n\n\u9644\uff1a$O(n \\log n)$\u7684\u590d\u6742\u5ea6\u662f\u5426\u6b63\u786e\uff1f\u6709\u6ca1\u6709\u6781\u9650\u6570\u636e\uff1f\u53ef\u4ee5\u5728\u8bc4\u8bba\u533a\u7559\u8a00\u3002",
        "postTime": 1584073641,
        "uid": 158593,
        "name": "\u590f\u5b50\u6c50",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1324F \u3010Maximum White Subtree\u3011"
    },
    {
        "content": "\u6362\u6839$dp$\u5165\u95e8\u9898\uff0c\u5e76\u4e14\u6c34\u7684\u4e00\u6279\uff0c\u662f\u8fde\u6211\u8fd9\u79cd\u5f31\u667a\u90fd\u60f3\u5f97\u51fa\u6765\u7684$dp$\n\n\u9996\u5148\u770b\u9898\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u60f3\u5230\u4ee5\u6bcf\u4e2a\u70b9\u4e3a\u6839\u6765\u6c42\u51fa\u7b54\u6848\u7684$O(n^2)$\u505a\u6cd5\uff0c\u90a3\u4e48\u8fd9\u65f6\uff0c\u76f8\u4fe1\u53ea\u8981\u662f\u4e00\u4e2a\u77e5\u9053\u6362\u6839$dp$\u7684\u4eba\u90fd\u4e0d\u96be\u770b\u51fa\u6b64\u9898\u7b97\u6cd5\u4e86\n\n\u9996\u5148\uff0c\u7ed9\u6bcf\u4e2a\u9ed1\u70b9\u8d4b\u6743\u503c\u4e3a-1\uff0c\u767d\u70b9\u4e3a1\uff0c\u90a3\u4e48$cnt_w-cnt_b$\u5c31\u76f8\u5f53\u4e8e\u6743\u503c\u548c\n\n\u6211\u4eec\u8003\u8651\u5148\u8fdb\u884c\u4e00\u6b21$dfs$\uff0c\u6c42\u51fa\u6bcf\u4e2a\u70b9\u5728\u5176\u5b50\u6811\u5185\u7684\u7b54\u6848\uff0c\u8bbe$f[x]$\u4e3a\u4ee5x\u4e3a\u6839\u7684\u5b50\u6811\u7684\u7b54\u6848\n\n\u4e0d\u96be\u5f97\u5230\uff0c${\\sum_{v\u2208x}^{}}max(0,f[v])$ \n\n\u63a5\u4e0b\u6765\uff0c\u8fdb\u884c\u7b2c\u4e8c\u6b21$dfs$\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u70b9$x$\u4e0e\u5b83\u7684\u7236\u4eb2$fa$\uff0c\u8bbe\u8fd9\u4e2a\u70b9\u7684\u7b54\u6848\u4e3a$g[x]$\n\n\u8003\u8651\u5b50\u6811\u5185\uff0c\u5219$g[x]+=f[x]$\n\n\u63a5\u4e0b\u6765\u8003\u8651\u5b50\u6811\u5916\uff0c\u8003\u8651\u7236\u4eb2\u53ef\u4ee5\u9009\u6216\u8005\u4e0d\u9009\uff0c\u7531\u524d\u9762$f$\u7684\u8f6c\u79fb\u65b9\u7a0b\u53ef\u77e5\uff0c\u5982\u679c$f[x]>0$\uff0c\u5b83\u5fc5\u5b9a\u5df2\u7ecf\u88ab\u7b97\u8fdb\u4e86\u5b83\u7684\u7236\u4eb2\u7684\u7b54\u6848\u4e2d\uff0c\u5219\u5f88\u5bb9\u6613\u5f97\u5230$g[x]+=max(0,g[fa]-max(0,f[x]))$\n\n$Code$\n\n```\n#pragma GCC optimize(2)\n#pragma GCC optimize(3)\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#define inf 0x3f3f3f3f\n#define rep(a,b,c) for(int a=b;a<=c;a++)\n#define per(a,b,c) for(int a=b;a>=c;a--)\nconst int mod=1e9+7;\nconst int maxn=2e5+5;\ntemplate<class T>inline void read(T &x) {\n\tT f=1;x=0;char s=getchar();\n\twhile(s<'0'||s>'9'){if(s=='-')f=-1;s=getchar();}\n\twhile(s>='0'&&s<='9'){x=(x<<1)+(x<<3)+(s&15);s=getchar();}\n\tx*=f;\n}\ntemplate<class T>inline T min(T a,T b) { return a<b?a:b; }\ntemplate<class T>inline T max(T a,T b) { return a>b?a:b; }\ntemplate<class T>inline T fabs(T a) { return a>0?a:-a; }\nstruct Edge {\n\tint u,v;\n}e[maxn<<1];\nint head[maxn],ecnt;\ninline void addedge(int u,int v) { e[++ecnt].v=v;e[ecnt].u=head[u];head[u]=ecnt; }\ninline void add(int u,int v) { addedge(u,v); addedge(v,u); }\nint f[maxn],g[maxn],v,val[maxn],c[maxn],n,a,b;\ninline void dfs1(int x,int fa) {\n\tf[x]=val[x];\n\tfor(int i=head[x];i;i=e[i].u) {\n\t\tif(e[i].v==fa) continue;\n\t\tdfs1(e[i].v,x);\n\t\tf[x]+=max(f[e[i].v],0);\n\t}\n}\ninline void dfs2(int x,int fa) {\n\tg[x]=f[x];\n\tg[x]+=max(0,g[fa]-max(f[x],0));\n\tfor(int i=head[x];i;i=e[i].u) {\n\t\tif(e[i].v==fa) continue;\n\t\tdfs2(e[i].v,x);\n\t}\n}\nsigned main() {\n\tread(n);\n\trep(i,1,n) read(c[i]),val[i]=(c[i]==0)?-1:1;\n\trep(i,1,n-1) read(a),read(b),add(a,b);\n\tdfs1(1,0);\n\t//rep(i,1,n) printf(\"%d %d\\n\",i,f[i]);\n\tdfs2(1,0);\n\trep(i,1,n) printf(\"%d \",g[i]);\n}\n```",
        "postTime": 1584191506,
        "uid": 64729,
        "name": "KJGKMTZB",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1324F \u3010Maximum White Subtree\u3011"
    },
    {
        "content": ">### [\u6d1b\u8c37\u9898\u76ee\u9875\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1324F) & [CodeForces\u9898\u76ee\u9875\u9762\u4f20\u9001\u95e8](https://codeforces.com/contest/1324/problem/F)\n\n>\u7ed9\u5b9a\u4e00\u68f5\u6811$T=(V,E),|V|=n,|E|=n-1$\uff0c\u8282\u70b9$i$\u6709\u4e00\u4e2a\u6743\u503c$a_i\\in\\{0,1\\}$\uff0c\u5206\u522b\u8868\u793a\u662f\u767d\u70b9\u3001\u9ed1\u70b9\u3002$\\forall i\\in[1,n]$\uff0c\u627e\u4e00\u4e2a\u6811\u4e0a\u8fde\u901a\u5b50\u56fe\uff0c\u8bbe\u6b64\u56fe\u5185\u767d\u3001\u9ed1\u70b9\u5404\u6709$cnt1,cnt2$\u4e2a\uff0c\u8981\u6c42\u6700\u5927\u5316$cnt1-cnt2$\u3002\u8f93\u51fa\u6700\u5927\u503c\u3002\n\n>$n\\in\\left[1,2\\times10^5\\right]$\u3002\n\n~~\u5148\u5410\u69fd\u4e00\u53e5\uff1a\u4e3a\u4ec0\u4e48\u6211\u603b\u5171\u5c31\u6253\u8fc7$4$\u573adiv. 3\uff0c\u5176\u4e2d$3$\u573a\u7684F\u90fd\u662f\u6811\u5f62DP\u00bf\u00bf\u00bf/yiw~~\n\n\u975e\u5e38\u663e\u7136\u7684\u6811\u5f62DP+\u4e8c\u6b21\u626b\u63cf\u4e0e\u6362\u6839\u3002\n\n\u9996\u5148\uff0c\u5982\u679c\u5f53\u524d\u8981\u6c42\u7684\u8fd9\u4e2a\u70b9$x$\u662f\u6811\u6839\u7684\u8bdd\uff0c\u90a3\u4e00\u5207\u90fd\u597d\u529e\u4e86\u3002\u8bbe$dp_i$\u8868\u793a\u5728\u4ee5$x$\u4e3a\u6574\u68f5\u6811\u7684\u6839\u7684\u60c5\u51b5\u4e0b\uff0c\u5728\u4ee5$i$\u4e3a\u6839\u7684\u5b50\u6811\u5185\u9009\u8fde\u901a\u5b50\u56fe\uff0c\u5fc5\u987b\u5305\u542b$i$\u65f6$cnt1-cnt2$\u7684\u6700\u5927\u503c\u3002\u76ee\u6807\u662f$dp_x$\uff0c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u662f$dp_i=\\sum\\limits_{j\\in son_i}\\max(0,dp_j)+\\begin{cases}-1&a_i=0\\\\1&a_i=1\\end{cases}$\uff08\u7d2f\u52a0\u4ee5\u6bcf\u4e2a\u513f\u5b50\u4e3a\u6839\u7684\u5b50\u6811\u80fd\u7ed9$dp_i$\u5e26\u6765\u7684\u8d21\u732e\u7684\u6700\u5927\u503c\uff0c\u5982\u679c\u4e3a\u8d1f\u5c31\u4e0d\u9009\uff09\u3002\u65f6\u95f4\u590d\u6742\u5ea6$\\mathrm O(n)$\u3002\n\n\u7136\u800c\u9898\u76ee\u8981\u6c42\u5bf9\u4e8e\u6240\u6709\u70b9\u3002\u4e0d\u59a8\u5148\u4ee4$1$\u4e3a\u6839\u6c42\u51fa\u6240\u6709\u70b9\u7684DP\u503c\uff0c\u518d\u4e00\u904d\u4e8c\u6b21\u626b\u63cf\u4e0e\u6362\u6839\u6c42\u51fa\u6240\u6709\u70b9\u7684\u7b54\u6848\u3002\u65f6\u95f4\u590d\u6742\u5ea6$\\mathrm O(n)$\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6$\\mathrm O(n)+\\mathrm O(n)=\\mathrm O(n)$\u3002\n\n\u4e0b\u9762\u662fAC\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define pb push_back\nconst int N=200000;\nint n;\nbool a[N+1];//\u70b9\u6743\nvector<int> nei[N+1];\nint dp[N+1];\nvoid dfs(int x=1,int fa=0){//\u6c42\u51fa\u4ee51\u4e3a\u6839\u65f6\u6240\u6709\u70b9\u7684DP\u503c \n\tdp[x]=a[x]?1:-1;\n\tfor(int i=0;i<nei[x].size();i++){\n\t\tint y=nei[x][i];\n\t\tif(y==fa)continue;\n\t\tdfs(y,x);\n\t\tdp[x]+=max(0,dp[y]);\n\t}\n}\nint ans[N+1];\nvoid dfs0(int x=1,int fa=0){//\u4e8c\u6b21\u626b\u63cf\u4e0e\u6362\u6839 \n\tans[x]=dp[x];//\u8bb0\u5f55\u7b54\u6848 \n\tfor(int i=0;i<nei[x].size();i++){\n\t\tint y=nei[x][i];\n\t\tif(y==fa)continue;\n\t\tdp[x]-=max(0,dp[y]);\n\t\tdp[y]+=max(0,dp[x]);\n\t\tdfs0(y,x);\n\t\tdp[y]-=max(0,dp[x]);\n\t\tdp[x]+=max(0,dp[y]);\n\t}\n}\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)cin>>a[i];\n\tfor(int i=1;i<n;i++){\n\t\tint x,y;\n\t\tcin>>x>>y;\n\t\tnei[x].pb(y);nei[y].pb(x);\n\t}\n\tdfs();\n\tdfs0();\n\tfor(int i=1;i<=n;i++)cout<<ans[i]<<\" \";\n\treturn 0;\n}\n```",
        "postTime": 1584162620,
        "uid": 138400,
        "name": "chenxia25",
        "ccfLevel": 9,
        "title": "CodeForces 1324F - Maximum White Subtree"
    },
    {
        "content": "[\u535a\u5ba2\u5185\u98df\u7528\u66f4\u4f73](https://blog.csdn.net/devout_/article/details/104858457)\n\n\u5f00\u59cb\u60f3\u590d\u6742\u4e86\uff0c\u4e00\u76f4\u5728\u5f80\u6811\u5256\u4e0a\u60f3\uff0c\u800c\u4e14\u4e00\u60f3\u5c31\u5239\u4e0d\u4f4f\u4e86\n\n\u540e\u6765\u611f\u89c9\u50cf\u4e2a\u6811\u5f62dp\uff0c\u4f46\u662fT5\u521a\u8003\u4e86dp\uff0cT6\u63a5\u7740\u8003\uff0c\u4e0d\u53ef\u80fd\u5427\uff08flag\uff09\n\n\u7ecf\u8fc7\u4e86\u534a\u4e2a\u5c0f\u65f6\u82b1\u5728\u6811\u5256\u4e0a\uff0c\u7a81\u7136\u731b\u7136\u53d1\u73b0\uff0c\u8fd9\u662fdiv3\u7684\u6bd4\u8d5b\u8bf6\uff0c\u53ef\u80fd\u8003\u6811\u5256\u5417\uff1f\n\n\u4e8e\u662f\u5c31\u5f80\u50bb\u4e86\u60f3\n\n\u8fd8\u662f\u8003\u8651\u6811\u5f62DP\u5427\n\n\u5148\u968f\u4fbf\u6307\u5b9a\u4e00\u4e2a\u68391\n\n\u6211\u4eec\u5904\u7406\u51fa$f_u$\u8868\u793a\u4ee5$u$\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u4e2d\uff0c\u6700\u5927\u7684\u5dee\u503c\uff0c\u8f6c\u79fb\u5176\u5b9e\u633a\u7b80\u5355\u7684\n$$f_u=color_u$$\n$$f_u=\\sum_{v}^{v\\in son_u,f_v>0} f_v$$\n\u7136\u540e\u600e\u4e48\u505a\u5462\uff1f\n\n\u629b\u5f00\u4e00\u5207\u6570\u636e\u7ed3\u6784\n\n\u6211\u4eec\u8003\u8651\u6211\u4eecDP\u600e\u4e48\u8f6c\u79fb\u8fc7\u6765\u7684\uff0c\u7136\u540e\u9006\u7740\u63a8\u4e00\u4e0b\u5c31\u597d\u4e86\n\n\u9996\u5148\uff0c$ans_1$\u5c31\u662f$f_1$\n\n\u7136\u540e\u6211\u4eec\u5411\u4e0bdfs\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u70b9\uff0c\u4ed6\u6709\u53ef\u80fd\u6709\u4e24\u79cd\u60c5\u51b5\n\n1.\u4ed6\u7238\u7238\u7684\u7b54\u6848\u91cc\u9762\u5305\u62ec\u4e86\u4ed6\u7684\u5b50\u6811($f_u>0$)\n\n2.\u4ed6\u7238\u7238\u7684\u7b54\u6848\u4e2d\u6ca1\u6709\u5305\u62ec\u4ed6\u7684\u5b50\u6811($f_u\\leq 0$)\n\n\u90a3\u4e48\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u6709\u53ef\u80fd\u662f\n\n1.\u5c31\u662f\u4ed6\u7238\u7238\u7684\u7b54\u6848\n\n2.$f_u$\n\n\u4e3a\u4ec0\u4e48\u4f1a\u6709\u7b2c\u4e8c\u79cd\u60c5\u51b5\u5462\uff1f\u6bd4\u5982\u8bf4\u4ed6\u7238\u7238\u662f-1\uff0c\u90a3\u4e48\u663e\u7136\u8fd9\u4e2a\u70b9\u7684\u7b54\u6848\u8981\u4ed6\u7238\u7238\u5c31\u6ca1\u6709\u7528\u4e86\uff08\u8be6\u89c1\u6837\u4f8b2\uff09\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u7c7b\u6bd4\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u7b54\u6848\u5c31\u662f\n\n1.\u4ed6\u7238\u7238\u7684\u7b54\u6848-1\uff08\u56e0\u4e3a\u8fdb\u5165\u7b2c\u4e8c\u79cd\u60c5\u51b5\u7684\u663e\u7136\u8fd9\u4e2a\u70b9\u662f\u9ed1\u70b9\uff09\n\n2.-1\n\u7136\u540e\u6211\u4eec\u4e00\u76f4\u5f80\u4e0b\u9012\u63a8\u5c31\u53ef\u4ee5\u5566\n\n\n\u7ecf\u8fc7wa\u4e86\u4e24\u6b21\uff0c\u538b\u54e8A\u4e86\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n# define Rep(i,a,b) for(int i=a;i<=b;i++)\n# define _Rep(i,a,b) for(int i=a;i>=b;i--)\n# define RepG(i,u) for(int i=head[u];~i;i=e[i].next)\n\ntypedef long long ll;\n\nconst int N=2e5+5;\n\ntemplate<typename T> void read(T &x){\n   x=0;int f=1;\n   char c=getchar();\n   for(;!isdigit(c);c=getchar())if(c=='-')f=-1;\n   for(;isdigit(c);c=getchar())x=(x<<1)+(x<<3)+c-'0';\n    x*=f;\n}\n\nint n;\nint col[N];\nint f[N],sum[N],out[N];\nint head[N],cnt;\n\nstruct Edge{\n    int to,next;\n}e[N<<1];\n\nvoid add(int x,int y){\n    e[++cnt]=(Edge){y,head[x]},head[x]=cnt;\n}\n\nvoid dfs1(int u,int fa){\n    sum[u]=sum[fa]+col[u];\n    f[u]=col[u];\n    RepG(i,u){\n        int v=e[i].to;\n        if(v==fa)continue;\n        dfs1(v,u);\n        if(f[v]>0)f[u]+=f[v];\n    }\n    // f[u]=max(f[u],0);\n}\n\nvoid dfs2(int u,int fa){\n    if(f[u]>0){\n        out[u]=max(out[fa],f[u]);\n    }\n    else {\n        out[u]=max(out[fa]+col[u],col[u]);\n        RepG(i,u){\n            int v=e[i].to;\n            if(v==fa)continue;\n            if(f[v]>0)out[u]+=f[v];\n        }\n    }\n    RepG(i,u){\n        int v=e[i].to;\n        if(v==fa)continue;\n        dfs2(v,u);\n    }\n}\n\nint main()\n{\n    memset(head,-1,sizeof(head));\n    read(n);\n    Rep(i,1,n)read(col[i]);\n    Rep(i,1,n)if(!col[i])col[i]=-1;\n    Rep(i,1,n-1){\n        int x,y;\n        read(x),read(y);\n        add(x,y),add(y,x);\n    }\n    dfs1(1,0);\n    // Rep(i,1,n)printf(\"%d\\n\",f[i]);\n    out[1]=f[1];\n    for(int i=head[1];~i;i=e[i].next)dfs2(e[i].to,1);\n    Rep(i,1,n)\n        printf(\"%d \",out[i]);\n    puts(\"\");\n    return 0;\n}\n```\n",
        "postTime": 1584162587,
        "uid": 97344,
        "name": "devout",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1324F \u3010Maximum White Subtree\u3011"
    }
]