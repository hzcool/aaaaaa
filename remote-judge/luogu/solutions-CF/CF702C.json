[
    {
        "content": "## [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF702C)\n\n### \u9898\u610f\n\n\u4e00\u6761\u76f4\u7ebf\u4e0a\u6709 $n$ \u4e2a\u57ce\u5e02\u548c $m$ \u4e2a\u5854\uff0c\u5854\u53ef\u4ee5\u4e3a\u5b83\u5de6\u53f3\u8ddd\u79bb $r$ \u4ee5\u4e0b\u7684\u57ce\u5e02\u63d0\u4f9b\u6d41\u91cf\uff0c\u95ee\u6700\u5c0f $r$ \u503c\u662f\u591a\u5c11\uff1f\n\n### \u601d\u8def\n\n\u672c\u9898\u8003\u67e5\u7b97\u6cd5\uff1a\u8d2a\u5fc3 & \u4e8c\u5206\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u57ce\u5e02\uff0c\u4e3a\u5b83\u63d0\u4f9b\u6d41\u91cf\u7684\u80af\u5b9a\u662f\u79bb\u5b83\u6700\u8fd1\u7684\u5854\u3002\u6c42\u51fa\u6bcf\u4e2a\u57ce\u5e02\u79bb\u4e3a\u5b83\u63d0\u4f9b\u6d41\u91cf\u7684\u5854\u7684\u8ddd\u79bb\uff0c\u5b83\u4eec\u7684\u6700\u5927\u503c\u5c31\u662f\u6211\u4eec\u8981\u6c42\u7684\u7b54\u6848\u3002\n\n### **code**\n\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <map>\n#include <queue>\n#define int long long\nusing namespace std;\nint a[100005], b[100005];\nint n, m;\nsigned main() {\n    int ans = -1e9;\n    cin >> n >> m;\n\n    for (int i = 1; i <= n; i++)\n        cin >> a[i];\n\n    for (int i = 1; i <= m; i++)\n        cin >> b[i];\n\n    sort(a + 1, a + 1 + n);\n    sort(b + 1, b + 1 + m);\n\n    for (int i = 1; i <= n; i++) {\n        int k;\n        /*while(b[k]<a[i]&&k<=m)\n        k++;*/\n        k = lower_bound(b + 1, b + 1 + m, a[i]) - b;\n        //\u8fd9\u4e2a\u51fd\u6570\u53ef\u4ee5\u4ece\u5b83\u7b2c\u4e00\u4e2a\u53c2\u6570\u5230\u7b2c\u4e8c\u4e2a\u53c2\u6570\u95f4\u627e\u5230\u7b2c\u4e00\u4e2a\u6bd4\u7b2c\u4e09\u4e2a\u53c2\u6570\u5927\u7684\u6570\n        //\u5e76\u8fd4\u56de\u4ed6\u7684\u4e0b\u6807\n\n        if (k > m) {\n        //\u7279\u5224\uff0c\u5982\u679c\u6ca1\u6709\u6bd4\u8fd9\u4e2a\u57ce\u5e02\u7684\u5750\u6807\u5927\u7684\u8bdd\uff0c\u5c31\u662f\u6700\u540e\u4e00\u4e2a\n            ans = max(ans, abs(b[m] - a[i]));\n        } else if (k == 1) {\n        //\u540c\u4e0a\uff08\u6ca1\u6709\u6bd4\u4ed6\u5c0f\u7684\uff09\n            ans = max(ans, abs(b[1] - a[i]));\n        } else {\n            ans = max(ans, min(abs(b[k] - a[i]), abs(b[k - 1] - a[i])));\n        }\n    }\n\n    cout << ans;\n    return 0;\n}\n```\n\n",
        "postTime": 1629702014,
        "uid": 410365,
        "name": "Expressive",
        "ccfLevel": 0,
        "title": "CF702C\u9898\u89e3"
    },
    {
        "content": "#### \u7b97\u6cd5\n\n\u8d2a\u5fc3+\u4e8c\u5206~~\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u662f\u84dd\u9898~~\n\n#### \u601d\u8def\n\n\u663e\u7136\uff0c\u6211\u4eec\u5c06\u57ce\u5e02\u4e0e\u5854\u90fd\u6309\u7167$x$\u5750\u6807\u6392\u5e8f\u4ee5\u540e\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u57ce\u5e02\uff0c\u8986\u76d6\u5b83\u7684\u5fc5\u7136\u662f$x$\u5750\u6807\u4e0e\u5b83\u6700\u76f8\u8fd1\u7684\u4e24\u5ea7\u5854\u4e4b\u4e00\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u4e8c\u5206\u6765\u7528\u57ce\u5e02\u627e\u5854\uff0c\u5728\u76f8\u90bb\u4e24\u5854\u4e0e\u5b83\u7684\u8ddd\u79bb\u4e2d\u53d6$min$\uff0c\u518d\u53d6\u6240\u6709\u57ce\u5e02\u7684$max$\u5c31\u662f\u7b54\u6848\u4e86\n\n**tips\uff1a** \u6709\u7684\u57ce\u5e02\u53ef\u80fd\u5728\u6240\u6709\u5854\u7684\u5de6\u8fb9\u6216\u8005\u662f\u53f3\u8fb9\uff0c\u8fd9\u65f6\u5b83\u53ea\u6709\u4e00\u79cd\u9009\u62e9\uff0c\u9700\u8981\u7279\u5224\u4e00\u4e0b\n\n#### \u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n\nusing namespace std;\n\nconst int maxn = 1e5 + 10;\nint t[maxn],c[maxn],n,m,minn;\n\nint main(){\n    scanf(\"%d%d\", &n, &m);\n    for(int i = 1; i <= n; ++ i) scanf(\"%d\", c + i);\n    for(int i = 1; i <= m; ++ i) scanf(\"%d\", t + i);\n    sort(c + 1, c + 1 + n); sort(t + 1, t + 1 + m);\n    for(int i = 1; i <= n; ++ i){\n        int pos = lower_bound(t + 1, t + 1 + m, c[i]) - t;\n        if(pos > m) minn = max(minn, abs(t[pos - 1] - c[i]));\n        else if(pos - 1 <= 0) minn = max(minn, abs(t[pos] - c[i]));\n        else minn = max(minn, min( abs(t[pos] - c[i]), abs(t[pos - 1] - c[i]) ));\n    } printf(\"%d\\n\", minn);\n    return 0;\n}\n```\n\n",
        "postTime": 1604490519,
        "uid": 120351,
        "name": "When",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF702C \u3010Cellular Network\u3011"
    },
    {
        "content": "## \u9898\u610f\u7b80\u8ff0\uff1a\n\n\u7ed9\u51fa\u4e00\u4e2a\u6570\u8f74\u4e0a $n$ \u4e2a\u70b9\u7684\u5750\u6807 $a_1$,$a_2$,$\\cdots$,$a_n$ \u4ee5\u53ca $m$ \u4e2a\u70b9\u7684\u5750\u6807 $b_1$,$b_2$,$\\cdots$,$b_m$\uff0c\u82e5\u5bf9\u4e8e\u4efb\u610f\u7684 $a_i$\uff0c\u5b58\u5728 $b_j$\uff0c\u4f7f\u5f97$\\operatorname{abs}$($a_i$-$b_j$) $\\leq$ $ans$\uff0c\u6c42 $ans$ \u7684\u6700\u5c0f\u503c\u3002\n\n## \u9898\u76ee\u5206\u6790\n\n\u6839\u636e\u4e0a\u8ff0\u7b80\u8ff0\u53ef\u77e5\uff1a\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u70b9 $a_i$\uff0c\u82e5\u4ece $m$ \u4e2a\u70b9\u4e2d\u9009\u51fa\u7684\u90a3\u4e2a\u70b9\u4e0d\u662f\u5b83\u5de6\u8fb9\u6216\u53f3\u8fb9\u7684\u7b2c\u4e00\u4e2a\u70b9\uff0c\u90a3\u4e48\u5c31\u4e0d\u7b26\u5408 $ans$ \u6700\u5c0f\u8fd9\u4e00\u6761\u4ef6\u4e86\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u8d2a\u5fc3\u6765\u505a\uff1a\u6c42\u51fa $a_i$ \u5230\u5de6\u8fb9\u4ee5\u53ca\u53f3\u8fb9\u7b2c\u4e00\u4e2a\u70b9\u7684\u8ddd\u79bb\u7684\u6700\u5c0f\u503c $l_i$\uff0c\u90a3\u4e48 $ans$=$\\max${$l_1$,$l_2$,$\\cdots$,$l_n$}\u3002\n\n~~\u7531\u4e8e\u8bed\u6587\u8868\u8fbe\u80fd\u529b\u6709\u9650~~\uff0c\u4e0b\u9762\u501f\u52a9\u6837\u4f8b\u6765\u8fdb\u884c\u89e3\u91ca\u3002\n\n### \u6837\u4f8b1:\n\n```\n3 2\n-2 2 4\n-3 0\n```\n\n\u5219 $l_1$=$\\min${1,2}=1\uff0c$l_2$=$\\min${2,+$\\infty$}=2\uff0c$l_3$=$\\min${4,+$\\infty$}=4\u3002\n\n\u6240\u4ee5 $ans$=$\\max${$l_1$,$l_2$,$l_3$}=4\u3002\n\n### \u6837\u4f8b2\uff1a\n\n```\n5 3\n1 5 10 14 17\n4 11 15\n```\n\u5219 $l_1$=$\\min${+$\\infty$,3}=3\uff0c$l_2$=$\\min${1,6}=1\uff0c$l_3$=$\\min${6,1}=1\uff0c$l_4$=$\\min${3,1}=1\uff0c$l_5$=$\\min${2,+$\\infty$}=2\u3002\n\n\u6240\u4ee5 $ans$=$\\max${$l_1$,$l_2$,$l_3$,$l_4$,$l_5$}=3\u3002\n\n\u4e0d\u8fc7\uff0c\u6709\u51e0\u70b9\u9700\u8981\u6ce8\u610f\uff1a\n\n#### \u4e00\u3001\u53ef\u80fd\u5b58\u5728\u5de6\u8fb9\u6216\u53f3\u8fb9\u6ca1\u6709\u70b9\u7684\u60c5\u51b5\uff0c\u56e0\u6b64\u9700\u8981\u7279\u5224\uff0c\u6216\u8005\u4ee4\u5176\u7b49\u4e8e-$\\infty$\u6216+$\\infty$\u3002\n\n#### \u4e8c\u3001\u53ef\u80fd\u8f93\u5165\u7684\u70b9\u4e0d\u662f\u6309\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u6392\u7684\uff0c\u56e0\u6b64\u9700\u8981\u6392\u5e8f\uff0c\u4e0d\u8fc7\u672c\u9898\u4e0d\u7528\u3002\n\n\u6700\u540e\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4efd\u4ee3\u7801\u4e86\u3002\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int N=1e5+5;\nint a[N],b[N],n,m,p,s;\ninline int r(){\n\tint o=0,f=1;char c=getchar();\n\twhile(c<48||c>57)\tf=c^45?1:-1,c=getchar();\n\twhile(c<58&&c>47)\to=(o<<1)+(o<<3)+(c^48),c=getchar();\n\treturn o*f;\n}\nint main(){\n\tn=r();m=r();\n\tfor(int i=0;i<n;++i)\ta[i]=r();sort(a,a+n);\n\tfor(int i=0;i<m;++i)\tb[i]=r();sort(b,b+m);\n\tfor(int i=0;i<n;++i){\n\t\twhile(b[p]<a[i]&&p<m)\t++p;\n\t\tif(p==m&&b[p]<a[i])\ts=max(s,a[i]-b[p-1]);\n\t\telse if(!p)\ts=max(s,b[p]-a[i]);\t\n\t\telse s=max(s,min(a[i]-b[p-1],b[p]-a[i]));\n\t}\n\tprintf(\"%d\",s);\n\treturn 0;\n}\n```",
        "postTime": 1581311556,
        "uid": 141555,
        "name": "Trinitrotoluene",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF702C \u3010Cellular Network\u3011"
    },
    {
        "content": "\u4e8c\u5206\u5957\u4e8c\u5206\uff0c\u4f46\u6211\u8c03\u4e86\u5927\u534a\u5929\u3002\n\n---\n\n\u9898\u76ee\u8981\u6c42 $r$ \u7684\u6700\u5c0f\u503c\uff0c\u800c $r$ \u7684\u8303\u56f4\u53ef\u80fd\u5f88\u5927\uff0c\u4e00\u4e00\u679a\u4e3e\u80af\u5b9a\u4e0d\u884c\uff0c\u8003\u8651\u4e8c\u5206 $r$\u3002\n\n\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u4e8c\u5206\u5462\uff1f\u611f\u6027\u7406\u89e3\u4e00\u4e0b\uff0c\u8fd9\u4e2a\u51b3\u7b56\u663e\u7136\u662f\u6709\u5355\u8c03\u6027\u7684\u3002\u5047\u8bbe\u4e00\u4e2a $r_0$\uff0c\u90a3\u4e48 $r_0+k(k>0)$ \u7684\u8986\u76d6\u8303\u56f4\u80af\u5b9a\u6bd4 $r_0$ \u66f4\u5e7f\u3002\u6240\u4ee5\u968f\u7740 $r_0$ \u7684\u589e\u52a0\uff0c\u8986\u76d6\u7684\u8303\u56f4\u4e5f\u4f1a\u4e0d\u65ad\u589e\u5927\u3002\n\n\u4e8c\u5206\u7684 $l$ \u5e94\u8be5\u662f $0$\uff0c$r$ \u8981\u8bbe\u591a\u5927\u5462\uff1f\u6ce8\u610f\u5230 $a_i,b_i \\in [-10^9,10^9]$\uff0c\u80fd\u591f\u8986\u76d6\u5168\u90e8\u7684\u6700\u5927\u503c $r_{\\max}$ \u5c31\u662f $2 \\times 10^9$\u3002\u4e8c\u5206\u6a21\u677f\u5982\u4e0b\uff1a\n\n```c++\nint l=0, r=2e9;\nwhile (l <= r){\n\tint mid = l + r >> 1;\n\tif (check(mid)) s = mid, r = mid - 1;\n\telse l = mid + 1;\n}\n```\n\n\u90a3\u4e48 `check` \u51fd\u6570\u600e\u4e48\u5199\u5462\uff1f\u6bcf\u4e00\u6b21 `check` \u8981\u6c42\u51fa\u5f53\u524d\u6709\u591a\u5c11\u4e2a\u70b9\u53ef\u4ee5\u88ab\u7f51\u7edc\u8986\u76d6\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $a_i$\uff0c\u79bb\u5b83\u6700\u8fd1\u7684\u7f51\u7edc\u8981\u4e48\u662f $b$ \u4e2d\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e\u5b83\u7684\uff0c\u8981\u4e48\u662f $b$ \u4e2d\u7b2c\u4e00\u4e2a\u5c0f\u4e8e\u7b49\u4e8e\u5b83\u7684\u3002\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e\u7684\u53ef\u4ee5\u518d\u4e00\u6b21\u4e8c\u5206\u67e5\u627e\u5f97\u5230\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u7b2c\u4e00\u4e2a\u5c0f\u4e8e\u7b49\u4e8e\u7684\u4f4d\u7f6e\u5c31\u662f\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e\u7684\u4f4d\u7f6e $-1$\uff08\u5982\u679c\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e\u7684\u5c31\u662f\u5b83\u672c\u8eab\u90a3\u4e48 $-1$ \u4e5f\u4e0d\u5f71\u54cd\uff09\u3002\u6240\u4ee5\u53ea\u8981\u7528\u4e24\u8005\u5224\u65ad\u4e00\u4e0b\uff0c\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u548c $a_i$ \u76f8\u5dee\u4e0d\u8d85\u8fc7 $\\text{mid}$\uff0c\u90a3\u4e48\u8fd9\u91cc\u5c31\u88ab\u7f51\u7edc\u8986\u76d6\u4e86\u3002\u5982\u679c\u53ef\u4ee5\u8986\u76d6\u7684\u70b9\u4e3a $n$ \u4e2a\uff0c\u5c31\u8fd4\u56de `true`\u3002\n\n\u6700\u540e\u7528\u5916\u9762\u7684\u4e8c\u5206\u53ef\u4ee5\u6700\u5c0f\u5316 $r$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log(2 \\times 10^9)\\log n)\\approx O(31n \\log n)$\u3002\n\n\u7ec6\u8282\u6709\u70b9\u591a\uff0c\u8fd8\u8981\u5f00 `long long`\u3002\n\n### Code\uff1a\n\n```c++\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\nint n, m, s, a[100010], b[100010];\nint check(int x){\n\tint cnt = 0;\n\tfor (int i=1; i<=n; i++){\n\t\t//\u5de6\u8fb9\u4e0d\u8d85\u8fc7x\uff0c\u53f3\u8fb9\u4e0d\u8d85\u8fc7x\n\t\tint pos1 = lower_bound(b+1, b+m+1, a[i]) - b; \n\t\tint pos2 = pos1 - 1;\n\t\tif (pos1 > m) pos1 = m, pos2 = m;\n\t\tif (abs(a[i] - b[pos1]) <= x || abs(a[i] - b[pos2]) <= x) cnt ++;\n\t}\n\treturn cnt == n;\n}\nsigned main(){\n\tscanf (\"%lld%lld\", &n, &m);\n\tfor (int i=1; i<=n; i++){\n\t\tscanf (\"%lld\", &a[i]);\n\t}\n\tsort (a+1, a+n+1);\n\tfor (int i=1; i<=m; i++){\n\t\tscanf (\"%lld\", &b[i]);\n\t}\n\tsort (b+1, b+m+1);\n\tb[0] = 1e18;\n\tint l=0, r=2e9;\n\twhile (l <= r){\n\t\tint mid = l + r >> 1;\n\t\tif (check(mid)) s = mid, r = mid - 1;\n\t\telse l = mid + 1;\n\t}\n\tprintf (\"%lld\\n\", s);\n\treturn 0;\n}\n\n```",
        "postTime": 1649735187,
        "uid": 399286,
        "name": "\u82cf\u8054\u5c0f\u6e23",
        "ccfLevel": 0,
        "title": "[\u9898\u89e3] CF702C Cellular Network"
    },
    {
        "content": "\uff08\u65e5\u5e38\u804a\u5929\uff09\uff0c\u95f2\u7740\u65e0\u804a\uff0c\u6765CF\u5237\u5237\u9898\uff0c\u6bd5\u7adfCF~~\u7a7f\u8d8a\u8fd9\u4e48\u597d\u73a9~~.\n\n\n\n------------\n\n\u9898\u610f\uff0c\u4e00\u4e2ax\u8f74\uff0c\u6709n\u4e2a\u7ec8\u70b9\u4e0em\u4e2a\u8d77\u70b9\uff0c\u627e\u5230\u6700\u5927\u7684\u8def\u7a0b\u3002\n\n------------\n\n\n\u7136\u540e\uff0c\u6211\u4eec\u8003\u8651\u505a\u6cd5\uff0c\u8fd9\u5176\u5b9e\u662f\u4e00\u9053\u6c34\u9898\uff08\u4e0e\u4ed6\u7684\u989c\u8272\u4e00\u6837\u6c34\uff09\u3002\n\n\u5176\u5b9e\u53ea\u8981\u5148\u4ece\u5de6\u5230\u53f3\u904d\u5386\uff0c\u5982\u679c\u5f53\u524d\u7ec8\u70b9\u6ca1\u6709\u4e0b\u4e00\u4e2a\u7ec8\u70b9\u66f4\u4f18\uff0c\u6211\u4eec\u5c31\u5230\u4e0b\u4e00\u4e2a\u7ec8\u70b9\u3002\n\n\u56e0\u4e3a\u4e0b\u4e00\u4e2a\u8d77\u70b9\u4e00\u5b9a\u5728\u5f53\u524d\u8d77\u70b9\u7684\u53f3\u8fb9\uff0c\u800c\u4e0b\u4e00\u4e2a\u7ec8\u70b9\u4e5f\u5728\u5f53\u524d\u7ec8\u70b9\u7684\u53f3\u8fb9\uff0c\n\n\u5982\u679c\u5f53\u524d\u7ec8\u70b9\u6ca1\u6709\u4e0b\u4e00\u4e2a\u7ec8\u70b9\u5230\u5f53\u524d\u8d77\u70b9\u66f4\u4f18\uff0c\u90a3\u4e48\u81ea\u7136\u4e0b\u4e00\u4e2a\u8d77\u70b9\u5230\u4e0b\u4e00\u4e2a\u7ec8\u70b9\u66f4\u4f18\u3002\n\n\u5c31\u662f\u4e0b\u9762\u8fd9\u4ee3\u7801\uff1a\n```cpp\n\tfor(int i=1;i<=cnt;i++)\n\t{\n\t\tif(abs(a[i]-b[j])>abs(a[i]-b[j+1])&&j<cntt)\n\t\t{\n\t\t\twhile(abs(a[i]-b[j])>abs(a[i]-b[j+1])&&j<cntt) j++;\n\t\t\t\n\t\t\tans=max(ans,abs(a[i]-b[j]));\n\t\t} \n\t\t\n\t\telse ans=max(ans,abs(a[i]-b[j]));\n\t}\n```\n\n\n\u636e\u672c\u4eba\u849f\u84bb\u5206\u6790\uff0c\u590d\u6742\u5ea6\u5e94\u8be5\u662fO(N+M);\n\n#### \u8fd8\u6709\u4e0d\u8981\u5fd8\u4e86\u53bb\u91cd\u3002\n\n```cpp\n#include<bits/stdc++.h>\n\n#define int long long\n\nusing namespace std;\n\nint x[500500],y[500500],n,m,ans,cnt,cntt,a[500500],b[500500];\n\nsigned main()//\u4e3b\u7a0b\u5e8f \n{\n\tcin>>n>>m;\n\t\n\tfor(int i=1;i<=n;i++) cin>>x[i];\n\t\n\tfor(int j=1;j<=m;j++) cin>>y[j];\n\t\n\tsort(x+1,x+1+n);\n\t\n\tsort(y+1,y+1+m);\n\t\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(x[i]==x[i+1]&&i!=n) continue;\n\t\t\n\t\ta[++cnt]=x[i];\n\t}\n\t\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tif(y[i]==y[i+1]&&i!=m) continue;\n\t\t\n\t\tb[++cntt]=y[i];\n\t}\n\t\n//\tfor(int i=1;i<=cnt;i++) cout<<a[i]<<\" \";\n//\tcout<<endl;\n//\tfor(int j=1;j<=cntt;j++) cout<<b[j]<<\" \";\n\t\n\tint j=1;\n\t\n\tfor(int i=1;i<=cnt;i++)\n\t{\n\t\tif(abs(a[i]-b[j])>abs(a[i]-b[j+1])&&j<cntt)\n\t\t{\n\t\t\twhile(abs(a[i]-b[j])>abs(a[i]-b[j+1])&&j<cntt) j++;\n\t\t\t\n\t\t\tans=max(ans,abs(a[i]-b[j]));\n\t\t} \n\t\t\n\t\telse ans=max(ans,abs(a[i]-b[j]));\n\t}\n\t\n\tcout<<ans;\n\t\n\treturn 0;\n\t\n}\n```\n",
        "postTime": 1569638871,
        "uid": 174026,
        "name": "\u6b27\u9e70",
        "ccfLevel": 0,
        "title": "CF702C Cellular Network \u9898\u89e3"
    },
    {
        "content": "## \u601d\u8def \n\n\u6211\u5bf9\u5dee\u5206\u4e0d\u662f\u5f88\u719f\u7ec3\uff0c\u6240\u4ee5......\u6211\u9009\u62e9\u4e0d\u7528\u5dee\u5206\u3002\n\n\n\n\u4ed4\u7ec6\u8bfb\u9898\u9762\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u9053\u9898\u8981\u6c42\u7684 $r$ \u503c\u80af\u5b9a\u5927\u4e8e\u7b49\u4e8e\u6bcf\u4e00\u4e2a\u57ce\u5e02\u4e0e\u6700\u8fd1\u7684\u8702\u7a9d\u5854\u7684\u8ddd\u79bb\uff0c\u5373\uff1a\n\n\n\n~~~cpp\nr=max(r,min(dis(tower[l-1],city[i]),dis(tower[l],city[i])));\n~~~\n\n\n\n\u6ce8\u610f\u70b9\uff1a\n\n- $tower$\u6570\u7ec4\u8981\u5148\u5347\u5e8f\u6392\u5e8f\u597d\u3002\n- \u7528\u4e8c\u5206\u6c42\u51fa\u79bb\u57ce\u5e02\u6700\u8fd1\u53f3\u8fb9\u7684\u8702\u7a9d\u5854$l$\u548c\u5de6\u8fb9\u7684$l-1$\u65f6\uff0c\u82e5$l=1$\uff0c\u5373\u5de6\u8fb9\u6ca1\u6709\u8702\u7a9d\u5854\u65f6\uff0c\u53ea\u7528\u8ba1\u7b97\u53f3\u8fb9\u7684\u3002\n\n\u8d34\u4e0a\u4ee3\u7801\uff1a\n\n## \u4ee3\u7801\n\n~~~cpp\n#include<bits/stdc++.h>\ntemplate<typename T>inline void read(T &x){\n\tT f=0;x=0;char ch=getchar();\n    for(;!isdigit(ch);ch=getchar())f|=ch=='-';\n    for(;isdigit(ch);ch=getchar())x=(x<<1)+(x<<3)+(ch^48);\n    x=f?-x:x;\n}\ntemplate<typename T>inline void write(T x){\n\tif(x<0){putchar('-');x=-x;}\n\tif(x>9)write(x/10);\n\tputchar(x%10+48);\n}\nusing namespace std;\ninline int dis(int a,int b){\n\treturn abs(a-b);\n}\nint n,m,ans;\nint city[100005],tower[100005];\nint main(){\n\tread(n),read(m);\n\tfor(int i=1;i<=n;++i) read(city[i]);\n\tfor(int i=1;i<=m;++i) read(tower[i]);\n\tsort(tower+1,tower+m+1);\n\tfor(int i=1;i<=n;++i){\n\t\tint l=1,r=m,mid;\n\t\twhile(l<r){\n\t\t\tmid=(l+r)>>1;\n\t\t\tif(city[i]>tower[mid]) l=mid+1;\n\t\t\telse r=mid;\n\t\t}\n\t\tif(l==1) ans=max(ans,dis(tower[l],city[i]));\n\t\telse ans=max(ans,min(dis(tower[l-1],city[i]),dis(tower[l],city[i])));\n\t}\n\twrite(ans);\n\treturn 0;\n}\n\n~~~\n\n",
        "postTime": 1600672867,
        "uid": 165113,
        "name": "linaonao",
        "ccfLevel": 0,
        "title": "CF702C Cellular Network\u9898\u89e3"
    },
    {
        "content": "qwq\u611f\u89c9\u8fd9\u9053\u9898\u8fd1\u4f3c\u4e8c\u5206\u7684\u6a21\u677f\u9898\uff0c\u4e00\u5f00\u59cb\u770b\u5230\u662f\u84dd\u9898\u88ab\u5413\u5230\u4e86...\n\n\n------------\n\n\n### **\u601d\u8def**\n\n\u9898\u76ee\u8981\u6c42\u627e\u4e00\u4e2a\u5c3d\u53ef\u80fd\u5c0f\u7684r\u8986\u76d6\u6240\u6709\u57ce\u5e02\uff0c\u53ef\u4ee5\u60f3\u5230\u7528\u4e8c\u5206\u7b54\u6848\u3002\n\n\u5148\u8ba9r\u5c3d\u53ef\u80fd\u5730\u5927\uff08\u521d\u59cb\u5316\u64cd\u4f5c\uff09\uff0c\u7136\u540e\u4e8c\u5206\u5bf9l+r\u8fdb\u884c\u4e8c\u5206\u3002\n\n\u5982\u679c\u5f53\u524d\u7684r\u80fd\u591f\u8986\u76d6\u6240\u6709\u57ce\u5e02\uff0c\u8bf4\u660e\u6211\u4eec\u8fd8\u80fd\u628ar\u53d6\u5c0f\u4e00\u70b9\uff1b\u5982\u679c\u5f53\u524d\u7684r\u4e0d\u80fd\u8986\u76d6\u6240\u6709\u57ce\u5e02\uff0cr\u5c31\u8981\u5f80\u5927\u53d6\u3002\u6700\u540e\u8fd4\u56der\u3002\n\n\n------------\n\n\n### **\u5751\u70b9**(dalao\u8bf7\u65e0\u89c6)\n\n1.\u56e0\u4e3a\u57ce\u5e02\u548c\u8702\u7a9d\u5854\u7684\u5750\u6807\u53ef\u4ee5\u53d6\u8d1f\u6570\uff0c\u6240\u4ee5\u5728\u8f93\u5165\u7684\u65f6\u5019\u8981\u627e\u51fa\u5750\u6807\u4e2d\u7684max\u548cmin\u503c\uff0c\u4e3a\u4e86**r\u5c3d\u53ef\u80fd\u5927**\uff0c\u6240\u4ee5\u521d\u59cb\u5316r=maxn-min(0,minn)\uff0c\u5f53\u7136\u770b\u5230\u6709dalao\u628ar\u521d\u59cb\u5316\u4e00\u4e2a\u8fb9\u754c\u6761\u4ef6\u5e38\u6570\u503c\u4e5f\u662f\u53ef\u4ee5\u7684\u3002\n\n2.\u6709\u4e00\u4e2a\u6d4b\u8bd5\u70b9\u7684\u6570\u636e\u5f88\u5927\uff0c\u6211\u4e00\u5f00\u59cbT\u6389\u3002l\uff0cr\uff0cmid\u503c\u5f00\u6210long long\u5c31\u53ef\u4ee5\u4e86\u3002\n\n3.\u8981\u6ce8\u610f\u4e8c\u5206\u7b54\u6848\u7684\u8fb9\u754c\u6761\u4ef6\u548c\u5faa\u73af\u6761\u4ef6\uff0c\u53ef\u4ee5\u624b\u52a8\u6a21\u62df\u4e00\u4e0b\uff0c\u4e0d\u540c\u7684\u9898\u76ee\u4e8c\u5206\u7684\u5199\u6cd5\u6709\u7740\u7ec6\u5fae\u4f46\u662f\u4e3e\u8db3\u8f7b\u91cd\u7684\u533a\u522b\uff0c\u5982\u679c\u5199\u9519\u5f88\u53ef\u80fd\u5c31\u662f\u6ca1\u6709\u8f93\u51fa......\uff08\u5c31\u50cf\u6211\u4e00\u6837\u8c03\u4e86\u534a\u5929\uff09\n\n\n------------\n### **AC\u4ee3\u7801**\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int N=1e5+5;\nint n,m,x[N],net[N],maxn=-1,minn=0x7ffffff;\nbool check(long long R)\n{\n    int pos=1;\n    for(int i=1;i<=m;i++)\n    {\n    while((x[pos]>=(net[i]-R))&&(x[pos]<=(net[i]+R))&&pos<=n) pos++;\n    if(pos==n+1) return true;\n    }\n    return false;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n    {\n    scanf(\"%d\",&x[i]);  \n    maxn=max(maxn,x[i]);\n    minn=min(minn,x[i]);\n    }   \n    for(int i=1;i<=m;i++)\n    {\n    scanf(\"%d\",&net[i]);    \n    maxn=max(maxn,net[i]);\n    minn=min(minn,net[i]);\n    }\n    long long l=0,r=maxn-min(0,minn);\n    while(l<=r)\n    {\n        long long mid=(l+r)>>1;\n        if(check(mid)) r=mid-1;\n        else l=mid+1;\n    }\n    printf(\"%lld\\n\",l);\n    return 0;\n}\n```\n",
        "postTime": 1564544653,
        "uid": 88522,
        "name": "\u83ab\u5948\u7684\u5d16\u5f84",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF702C \u3010Cellular Network\u3011"
    },
    {
        "content": "#### \u8fd9\u4e2a\u9898\u5176\u5b9e\u53ef\u4ee5\u4e0d\u7528\u4e8c\u5206\u3002\u3002\n\n\u8d2a\u5fc3\u7684\uff0c\u6bcf\u4e2a\u57ce\u5e02\u88ab\u79bb\u5b83\u6700\u8fd1\u7684\u5854\u8986\u76d6 \u5219r\u7684\u503c\u4e3a\u6bcf\u4e2a\u57ce\u548c\u79bb\u5b83\u6700\u8fd1\u7684\u5854\u4e2d\u7684\u6700\u5927\u503c\u3002\n\n\u76f4\u63a5\u5411\u5de6\u5411\u53f3\u66b4\u529b\u4f1a\u8d85\u65f6\uff0c\u6240\u4ee5\u4f1a\u60f3\u5230\uff0c\n\u5982\u679c\u4e00\u4e2a\u57ce\u5e02\u7684\u5de6\u8fb9\u4e5f\u662f\u57ce\u5e02,\u90a3\u4e48\u4f4d\u4e8e\u5b83\u5de6\u8fb9\u7684\u6700\u8fd1\u7684\u5854\u4e5f\u5c31\u662f\u4f4d\u4e8e\u5b83\u5de6\u8fb9\u57ce\u5e02\u7684\u5de6\u8fb9\u7684\u6700\u8fd1\u7684\u5854\u3002\n\n\u5148\u6309\u5750\u6807\u6392\u5e8f\uff0c\u57ce\u5e02\u548c\u5854\u5206\u522b\u4f5c\u6807\u8bb0\u3002 \u7136\u540e\u8fdb\u884c\u9884\u5904\u7406\uff0c\u5904\u7406\u51fa\u6bcf\u4e2a\u57ce\u5e02\u5de6\u8fb9\u548c\u53f3\u8fb9\u5206\u522b\u6700\u8fd1\u7684\u5854\u3002\n\n\u4e3e\u4e2a\u6817\u5b50\uff0c\u5411\u5de6\u9884\u5904\u7406\n```\nfor(int i=n;i>0;--i)\n    if(a[i].p==0&&fil[i]==-1)\n        fil[i]=L_find(i);\n```\n\n\u6838\u5fc3\u7684\uff0c\u627e\u5854\u7684\u51fd\u6570\n```\nint L_find(int x)\n{\nif(a[x-1].p==0) return fil[x-1]=fil[x]=L_find(x-1);\nelse return x-1;\n}\n```\n\nfil\u662f\u5de6\u8fb9\u6700\u8fd1\u5854\u7684\u6807\u53f7\uff0cfir\u662f\u53f3\u8fb9\u7684\uff0ca\u6570\u7ec4\u662f\u7ed3\u6784\u4f53\uff0c.x\u662f\u5750\u6807\uff0c.p\u662f\u6807\u8bb0\uff0c0\u662f\u57ce\uff0c1\u662f\u5854\u3002 \u5de6\u53f3\u6ca1\u6709\u5854\u7684\u65f6\u5019\u7279\u5224\u4e00\u4e0b\uff0c\u7136\u540e\u8f93\u51fa\uff0c\u8fd9\u9898\u5c31\u5b8c\u4e86\u3002\n\n\u9644\u5b8c\u6574\u4ee3\u7801\u3002\n```\n#include <algorithm>\n#include <cstring>\n#include <cstdio>\nusing namespace std;\nstruct node\n{\n    int x,p;\n}a[200005];\nint fil[200005],fir[200005];\nint n,m,ans;\nbool cmp(node a,node b)\n{\n    return a.x<b.x;\n}\nint L_find(int x)\n{\n    if(a[x-1].p==0) return fil[x-1]=fil[x]=L_find(x-1);\n    else return x-1;\n}\nint R_find(int x)\n{\n    if(a[x+1].p==0) return fir[x+1]=fir[x]=R_find(x+1);\n    return x+1;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    memset(fil,-1,sizeof(fil));\n    memset(fir,-1,sizeof(fir));\n    for(int i=1;i<=n;++i)\n    {\n        a[i].p=0;\n        scanf(\"%d\",&a[i].x);\n    }\n    for(int i=1;i<=m;++i)\n    {\n        a[n+i].p=1;\n        scanf(\"%d\",&a[n+i].x);\n    }\n    n+=m;\n    sort(a+1,a+n+1,cmp);\n    a[0].p=1;\n    a[n+1].p=1;\n    for(int i=n;i>0;--i)\n        if(a[i].p==0&&fil[i]==-1)\n            fil[i]=L_find(i);\n    for(int i=1;i<=n;++i) if(a[i].p==0)\n    {\n        if(fir[i]==-1) fir[i]=R_find(i);\n        ans=max(ans,min(fil[i]==0?2000000000:a[i].x-a[fil[i]].x,fir[i]==n+1?2000000000:a[fir[i]].x-a[i].x));\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n\n```",
        "postTime": 1564472690,
        "uid": 73472,
        "name": "BennyHu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF702C \u3010Cellular Network\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5176\u5b9e\u633a\u6c34\uff0c\u4e0d\u77e5\u9053\u600e\u4e48\u8bc4\u6210\u4e86\u84dd\u9898\u3002\n\n\u57fa\u672c\u60f3\u6cd5\u662f\u4e8c\u5206\u901a\u4fe1\u5854\u7684\u534a\u5f84\uff0c\u5bf9\u6bcf\u4e00\u4e2aai\u5224\u65ad\u4e00\u4e0b\u5de6\u53f3\u79bb\u4ed6\u6700\u8fd1\u7684bi\uff0c\u5982\u679c\u5de6\u53f3\u7684\u8ddd\u79bb\u90fd\u5927\u4e8er\uff0c\u90a3\u4e48\u663e\u7136\u8fd4\u56defalse\n\n\u5bf9\u4e8e\u627e\u5de6\u53f3\u6700\u8fd1\u7684bi\u53ef\u4ee5\u4e8c\u5206\uff0c\u514d\u53bb\u64cd\u4f5c\u5dee\u5206\u6570\u7ec4\u3002\u6bcf\u4e00\u6b21check\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(nlogm)\uff0c\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6O(nlogmlog\u6700\u5927\u8ddd\u79bb)\u3002\n\n\u6709\u51e0\u4e2a\u5751\u70b9\uff0c\u4e8c\u5206\u65f6\u5019\u53ef\u80fd\u4f1a\u51fa\u73b0ai\u5728\u6700\u5927\u7684bi\u53f3\u4fa7\u7684\u60c5\u51b5\uff0c\u6bd4\u5982\u6837\u4f8b\u4e8c\uff0c\u8fd9\u65f6\u5e94\u5f53\u628abm+1\u8bbe\u7f6e\u5728\u975e\u5e38\u8fdc\u7684\u4f4d\u7f6e\uff0c\u6211\u4f7f\u7528\u7684\u662f0x3f3f3f3f3f3f3f3f\uff0c\u5f53\u6211\u4f7f\u75280x3f3f3f3f\u65f6\u4f1aWA\n\n\u540c\u7406\uff0cb0\u4e5f\u5e94\u5f53\u8bbe\u7f6e\u5728-0x3f3f3f3f3f3f3f3f\u7684\u4f4d\u7f6e\uff0c\u7b2c\u4e09\u4e2a\u6d4b\u8bd5\u70b9\u6570\u636e\u5982\u4e0b\uff1a\n\n1 1\n\n1000000000\n\n-1000000000\n\n\u7b54\u6848\u5e94\u5f53\u662f2000000000\uff0c\u540c\u65f6\u4e5f\u8bf4\u660e\u4e8c\u5206\u7b54\u6848\u7684\u4e0a\u9650\u4e5f\u5c31\u662f2e9\u4e86\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int maxn=100005;\nconst int inf=0x3f3f3f3f3f3f3f3f;\n\nint n,m;\nint a[maxn],b[maxn];\n\nbool chk(int r)\n{\n    for(int i=1;i<=n;++i){\n        int pos=lower_bound(b+1,b+1+m,a[i])-b;\n        if(a[i]-b[pos-1]>r&&b[pos]-a[i]>r)\n            return false;\n    }\n    return true;\n}\n\nvoid half(int l,int r)\n{\n    while(l<=r){\n        int m=(l+r)/2;\n        if(chk(m))\n            r=m-1;\n        else\n            l=m+1;\n    }\n    printf(\"%lld\",l);\n}\n\nsigned main()\n{\n    scanf(\"%lld %lld\",&n,&m);\n    for(int i=1;i<=n;++i)\n        scanf(\"%lld\",&a[i]);\n    for(int j=1;j<=m;++j)\n        scanf(\"%lld\",&b[j]);\n    b[0]=-inf;b[m+1]=inf;\n    half(0,2000000000);\n    return 0;\n}\n\n```\n",
        "postTime": 1563778778,
        "uid": 170866,
        "name": "oneman233",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF702C \u3010Cellular Network\u3011"
    },
    {
        "content": "# \u9898\u610f\n\u7ed9\u5b9a $n$ \u4e2a\u57ce\u5e02\u5728\u6570\u8f74\u4e0a\u7684\u4f4d\u7f6e\u548c $m$ \u4e2a\u8702\u7a9d\u5854\u5728\u6570\u8f74\u4e0a\u7684\u4f4d\u7f6e\uff0c\u7b2c $i$ \u4e2a\u57ce\u5e02\u7684\u4f4d\u7f6e\u4e3a $a_i$\uff0c\u7b2c $j$ \u4e2a\u8702\u7a9d\u5854\u7684\u4f4d\u7f6e\u4e3a $b_j$\u3002\u6c42\u6700\u5c0f\u7684 $r$\uff0c\u4f7f\u5f97 $\\forall\\ 1 \\leq i \\leq n$\uff0c\u90fd\u81f3\u5c11\u6709\u4e00\u4e2a $j(1 \\leq j \\leq m)$\uff0c\u4f7f\u5f97 $i$ \u548c $j$ \u6ee1\u8db3 $\\vert a_i - b_j \\vert \\leq r$\u3002\n# \u89e3\u6790\n\u9996\u5148\uff0c\u56e0\u4e3a\u4e3a\u4e00\u4e2a\u57ce\u5e02\u4f9b\u7f51\u7684\u8702\u7a9d\u5854\u4e00\u5b9a\u662f\u79bb\u8fd9\u4e2a\u57ce\u5e02\u6700\u8fd1\u7684\u8702\u7a9d\u5854\uff0c\u6240\u4ee5\u6211\u4eec\u5f88\u5bb9\u6613\u5c31\u53ef\u4ee5\u60f3\u5230\u8d2a\u5fc3\uff1a\u5bf9\u4e8e\u6bcf\u4e2a $i$\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u627e\u5230\u4f7f\u5f97 $\\vert a_i - b_j \\vert$ \u6700\u5c0f\u7684 $j$\uff08\u8bb0\u4e3a $x_i$\uff09\uff0c\u4e5f\u5c31\u662f\u627e\u5230\u79bb\u57ce\u5e02 $i$ \u6700\u8fd1\u7684\u8702\u7a9d\u5854 $x_i$\uff0c\u8fd9\u6837\u4e00\u6765\uff0c\u6700\u540e\u7684\u7b54\u6848 $r$ \u5c31\u662f $\\max\\limits_{1 \\leq i \\leq n}{\\vert a_i - b_{x_i} \\vert}$ \u4e86\u3002\uff08\u4e3a\u4ec0\u4e48\u8981\u53d6\u6700\u5927\u503c\u5462\uff1f\u56e0\u4e3a\u8981\u4fdd\u8bc1\u6bcf\u4e2a\u57ce\u5e02\u90fd\u80fd\u5728 $r$ \u7684\u8ddd\u79bb\u5185\u627e\u5230\u4e00\u4e2a\u8702\u7a9d\u5854\u4e3a\u5176\u4f9b\u7f51\u3002\uff09\n\n\u95ee\u9898\u662f\uff1a\u6211\u4eec\u5982\u4f55\u627e\u5230\u79bb\u57ce\u5e02 $i$ \u6700\u8fd1\u7684\u8702\u7a9d\u5854 $x_i$ \u5462\uff1f\u6bcf\u6b21\u90fd\u66b4\u529b\u626b\u4e00\u904d\u5417\uff1f\u4e0d\u53ef\u80fd\u7684\uff0c\u56e0\u4e3a $n$ \u548c $m$ \u90fd\u5f88\u5927\uff0c\u76f4\u63a5\u66b4\u529b\u626b\u7edd\u5bf9\u4f1a\u8d85\u65f6\u3002\u8fd9\u91cc\u63d0\u4f9b $2$ \u79cd\u65b9\u6cd5\uff1a\n## 1. \u7528 lower_bound\uff08\u4e8c\u5206\u67e5\u627e\uff09\u3002\n`STL` \u91cc\u9762\u6709\u4e2a\u597d\u4e1c\u897f\uff0c\u540d\u5b57\u53eb\u505a `lower_bound`\uff0c\u4e00\u822c\u6211\u4eec\u8fd9\u6837\u8c03\u7528\u5b83\uff1a\n```\nint p = lower_bound(a + x,a + y + 1,z) - a;\n```\n~~\u770b\u7740\u597d\u5947\u602a\u554a\u3002~~\n\n\u8c03\u7528\u8fd9\u4e00\u884c\u4ee3\u7801\u540e\uff0c$p$ \u7684\u503c\u5c31\u4f1a\u53d8\u4e3a\u6570\u7ec4 $a$ \u4e2d $\\left[x,y\\right]$ \u8fd9\u4e2a\u533a\u95f4\u5185\u7b2c\u4e00\u4e2a $\\ge z$ \u7684\u5143\u7d20\u7684\u4e0b\u6807\u3002\u5982\u679c\u8fd9\u6bb5\u533a\u95f4\u5185\u6ca1\u6709 $ \\geq z$ \u7684\u5143\u7d20\uff0c\u5219 $p = y + 1$\u3002\n\n`lower_bound` \u7684\u5de5\u4f5c\u539f\u7406\u662f\u4e8c\u5206\u67e5\u627e\uff0c\u6240\u4ee5\u5b83\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u4e8c\u5206\u67e5\u627e\u4e00\u6837\uff0c\u90fd\u662f $O(\\log(y - x + 1))$ \u7684\u3002\u5f53\u7136\uff0c\u548c\u4e8c\u5206\u67e5\u627e\u4e00\u6837\uff0c\u4f7f\u7528 `lower_bound` \u6709\u4e2a\u524d\u63d0\u6761\u4ef6\uff0c\u5c31\u662f\u6570\u7ec4 $a$ \u5355\u8c03\u4e0d\u964d\u6216\u5355\u8c03\u4e0a\u5347\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5b83\uff0c\u6765\u5feb\u901f\u5730\u627e\u5230\u7b26\u5408\u6761\u4ef6\u7684 $x_i$\u3002\n```c++\n#include<bits/stdc++.h>\n#define int1 long long\n#define p 1145141919810114514\nusing namespace std;\nint1 n,m,i,j,a[100005],b[100005],s,x;\nint1 read(){//\u5feb\u8bfb\u3002 \n\tint1 x = 0,f = 1;\n\tchar ch = getchar();\n\twhile(!isdigit(ch)){\n\t\tif(ch == '-'){\n\t\t\tf = -1;\n\t\t}\n\t\tch = getchar();\n\t}\n\twhile(isdigit(ch)){\n\t\tx = (x << 1) + (x << 3) + ch - '0';\n\t\tch = getchar();\n\t}\n\treturn x * f;\n}\nvoid print(int1 x){//\u5feb\u5199\u3002 \n  \tif(x < 0){\n    \tputchar('-');\n    \tx = -x;\n  \t}\n  \tif(x > 9){\n    \tprint(x / 10);\n  \t}\n  \tputchar(x % 10 + 48);\n  \treturn ;\n}\nint main(){\n\tn = read(),m = read();\n\tfor(i = 1; i <= n; i++){\n\t\ta[i] = read();\n\t}\n\tfor(i = 1; i <= m; i++){\n\t\tb[i] = read();\n\t}\n\tsort(b + 1,b + m + 1);//\u4fdd\u8bc1\u4f7f\u7528 lower_bound \u65f6\u6570\u7ec4 b \u5355\u8c03\u4e0d\u964d\u6216\u5355\u8c03\u4e0a\u5347\u3002 \n\ta[n + 1] = b[m + 1] = p,a[0] = b[0] = -p;//\u8bbe\u4e2a\u8fb9\u754c\uff0c\u9632\u6b62\u6ea2\u51fa\u3002\n\tfor(i = 1; i <= n; i++){\n\t\tx = lower_bound(b + 1,b + m + 1,a[i]) - b;//\u627e\u5230\u7b2c\u4e00\u4e2a\u5750\u6807\u4e0d\u5c0f\u4e8e a[i] \u7684 b[j]\u3002 \n\t\ts = max(s,min(b[x] - a[i],a[i] - b[x - 1]));//\u6839\u636e lower_bound \u7684\u7279\u6027\uff0c\u53ef\u4ee5\u5f97\u51fa b[j - 1] \u7684\u5750\u6807\u4e00\u5b9a\u6bd4 a[i] \u5c0f\u3002 \n\t}\n\tprint(s);\n  \treturn 0;\n}\n```\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n)$\u3002[AC\u8bb0\u5f55\u3002](https://www.luogu.com.cn/record/78719686)\n## 2. \u4f18\u5316\u4e86\u4ebf\u4e0b\u7684\u66b4\u529b\u3002\n\u5047\u5982\u6211\u4eec\u5c06 $a,b$ \u90fd\u6309\u5347\u5e8f\u6392\u5e8f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u51fa\u4e00\u4e2a\u7ed3\u8bba\uff1a\u5f53 $i < j$ \u65f6\uff0c$x_i \\leq x_j$\u3002\u56e0\u4e3a\u6392\u5e8f\u540e\uff0c$a_i \\leq a_j$\uff0c$b_i \\leq b_j$\uff0c\u6240\u4ee5 $x_j$ \u76f8\u8f83\u4e8e $x_i$\uff0c\u53ea\u80fd\u66f4\u5927\uff0c\u4e0d\u80fd\u66f4\u5c0f\u3002\n\n\u8fd9\u6837\u4e00\u6765\uff0c\u6211\u4eec\u5c31\u4e0d\u9700\u8981\u6bcf\u6b21\u66b4\u529b\u90fd\u91cd\u65b0\u626b\u4e00\u904d\u4e86,\u800c\u662f\u53ef\u4ee5\u4ece\u4e0a\u4e00\u6b21\u7684\u7b54\u6848\u7a0d\u52a0\u4fee\u6539\u5c31\u5f97\u5230\u4e86\uff01\n```c++\n#include<bits/stdc++.h>\n#define int1 long long\n#define p 1145141919810114514\nusing namespace std;\nint1 n,m,i,j,a[100005],b[100005],s,x;\nint1 read(){//\u5feb\u8bfb\u3002 \n\tint1 x = 0,f = 1;\n\tchar ch = getchar();\n\twhile(!isdigit(ch)){\n\t\tif(ch == '-'){\n\t\t\tf = -1;\n\t\t}\n\t\tch = getchar();\n\t}\n\twhile(isdigit(ch)){\n\t\tx = (x << 1) + (x << 3) + ch - '0';\n\t\tch = getchar();\n\t}\n\treturn x * f;\n}\nvoid print(int1 x){//\u5feb\u5199\u3002 \n  \tif(x < 0){\n    \tputchar('-');\n    \tx = -x;\n  \t}\n  \tif(x > 9){\n    \tprint(x / 10);\n  \t}\n  \tputchar(x % 10 + 48);\n  \treturn ;\n}\nint main(){\n\tn = read(),m = read();\n\tfor(i = 1; i <= n; i++){\n\t\ta[i] = read();\n\t}\n\tfor(i = 1; i <= m; i++){\n\t\tb[i] = read();\n\t}\n\tsort(a + 1,a + n + 1); \n\tsort(b + 1,b + m + 1);\n\ta[n + 1] = b[m + 1] = p,a[0] = b[0] = -p;//\u8bbe\u4e2a\u8fb9\u754c\uff0c\u9632\u6b62\u6ea2\u51fa\u3002 \n\tfor(i = 1; i <= n; i++){\n\t\twhile(b[x] < a[i]){//\u5982\u679c b[x] < a[i]\uff0cx \u5c31\u4e00\u76f4\u52a0 1\uff0c\u76f4\u5230 b[x] \u521a\u597d >= a[i] \u4e3a\u6b62\uff08\u548c lower_bound \u7684\u7ed3\u679c\u4e00\u6837\uff09\u3002 \n\t\t\tx++;\n\t\t}\n\t\ts = max(s,min(b[x] - a[i],a[i] - b[x - 1]));//\u7edf\u8ba1\u7b54\u6848\u3002 \n\t}\n\tprint(s);\n  \treturn 0;\n}\n```\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n)$\uff0c\u4f46\u662f\u4ee3\u7801\u91cf\u7a0d\u5fae\u591a\u4e24\u884c\u3002[AC\u8bb0\u5f55\u3002](https://www.luogu.com.cn/record/78725567)",
        "postTime": 1657202974,
        "uid": 510555,
        "name": "owo_ImposterAnYu_owo",
        "ccfLevel": 5,
        "title": "Cellular Network"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u79cd\u4e24\u53ea $log$ \u7684\u505a\u6cd5\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\u7b54\u6848\u6ee1\u8db3\u5355\u8c03\u6027\uff0c\u6240\u4ee5\u53ef\u4ee5\u4e8c\u5206\u3002\n\n\u5728\u5224\u65ad\u65f6\u6211\u4eec\u9996\u5148\u8981\u627e\u5230\u8ddd\u79bb\u8fd9\u4e2a\u57ce\u5e02\u6700\u8fd1\u7684\u8702\u7a9d\u5854\uff0c\u5728\u5224\u65ad\u4ed6\u4eec\u4e24\u4e2a\u7684\u8ddd\u79bb\u662f\u5426\u5927\u4e8e\u4e8c\u5206\u7684\u503c\u3002\u627e\u6700\u8fd1\u7684\u8702\u7a9d\u5854\u6211\u4eec\u53ef\u4ee5\u6392\u5e8f\u4e4b\u540e\u7528 lower_bound \u6c42\u3002\u6240\u4ee5\u590d\u6742\u5ea6\u53c8\u5e26\u4e86\u4e00\u53ea $log$\u3002\n\n\u4f3c\u4e4e\u53ef\u4ee5\u9884\u5904\u7406\u4f18\u5316\u5230\u4e00\u53ea $log$\u3002\n\n\u4e0d\u8fc7\u65e2\u7136\u8fc7\u4e86\u5c31\u4e0d\u7ea0\u7ed3\u4e86\uff0c\u60f3\u8981\u4f18\u5316\u7684\u53ef\u4ee5\u81ea\u884c\u5c1d\u8bd5\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int N = 100002;\nint n, m, l, r, p, t, k, ans, sum, tot, cnt, a[N], b[N], c[N], d[N];\ninline int read()\n{\n    int x = 0, f = 1;\n    char ch = getchar();\n    while(ch < '0' || ch > '9')\n\t{\n        if(ch == '-') f = -1;\n        ch = getchar();\n    }\n    while('0' <= ch && ch <= '9')\n\t{\n        x = x * 10 + ch - '0';\n        ch = getchar();\n    }\n    return x * f;\n}\nbool check(int x)\n{\n    int flag = 0;\n    for (int i = 1; i <= n; i++)\n    {\n        t = lower_bound(b + 1, b + m + 1, a[i]) - b;\n        if(t == 1)\n        {\n            if(abs(b[t] - a[i]) > x) { flag = 1; break; }\n        }\n        else if(t > m) \n        {\n            if(abs(a[i] - b[m]) > x) { flag = 1; break; }\n        }\n        else \n        {\n            int mn = min(abs(b[t - 1] - a[i]), abs(b[t] - a[i]));\n            if(mn > x) { flag = 1; break; }\n        }\n    }\n    if(!flag) return 1;\n    else return 0;\n}\nsigned main()\n{\n\tn = read(); m = read();\n\tfor (int i = 1; i <= n; i++) a[i] = read(); \n\tsort(a + 1, a + n + 1);\n\tfor (int i = 1; i <= m; i++) b[i] = read();\n\tsort(b + 1, b + m + 1);\n\tl = 0, r = 1e18;\n\twhile (l <= r)\n\t{\n\t    int mid = (l + r) >> 1;\n\t    if(check(mid)) ans = mid, r = mid - 1;\n\t    else l = mid + 1;\n\t}\n\tcout << ans << endl;\n    return 0;\n} \n```\n\n\u96be\u5ea6\u4f3c\u4e4e\u8bc4\u9ad8\u4e86\uff0c\u9876\u591a\u9ec4\u9898\u5427\u3002",
        "postTime": 1627212028,
        "uid": 503899,
        "name": "_byta",
        "ccfLevel": 0,
        "title": "CF702C Cellular Network"
    },
    {
        "content": "### \u4e00\u3001\u524d\u7f6e\u829d\u58eb\n\n`lower_bound` \u51fd\u6570\uff0c\u7528\u4e8e\u6c42\u51fa\u6570\u7ec4\u4e2d\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7ed9\u5b9a\u6570\u636e\u7684\u4f4d\u7f6e\u3002\n\n\u53c2\u6570\uff1a\n\n1. \u6570\u7ec4\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u6307\u9488\u3002\n\n2. \u6570\u7ec4\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u518d\u5f80\u53f3\u8fb9\u7684\u6307\u9488\u3002\n\n3. \u7ed9\u5b9a\u6570\u636e\u3002\n\n\u8fd4\u56de\uff1a\u6570\u7ec4\u6240\u6c42\u4f4d\u7f6e\u7684\u6307\u9488\u3002\u53ef\u4ee5\u5c06\u8fd4\u56de\u503c\u76f4\u63a5\u51cf\u53bb\u6570\u7ec4\uff0c\u5f97\u51fa\u4e00\u4e2a\u6570\u5b57\uff0c\u4ee3\u8868\u4f4d\u7f6e\u3002\n\n\u4f7f\u7528\u793a\u4f8b\uff1a`int position=lower_bound(tower+1,tower+1+m,city[i])-tower;`\n\n\u7279\u6b8a\u60c5\u51b5\uff1a\u5982\u679c\u6570\u7ec4\u4e2d\u6ca1\u6709\u6570\u636e\u5927\u4e8e\u7ed9\u5b9a\u6570\u636e\uff0c\u5219\u8fd4\u56de\u53c2\u6570 $2$ \u7684\u503c\u3002\n\n### \u4e8c\u3001\u601d\u8def\n\n\u672c\u9898\u53ef\u4ee5\u4f7f\u7528\u8d2a\u5fc3\u4e0e\u4e8c\u5206\u7b97\u6cd5\u3002\n\n\u9996\u5148\uff0c\u5c06\u6240\u6709\u57ce\u5e02\u548c\u8702\u7a9d\u5854\u7684\u4f4d\u7f6e\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n\n\u7136\u540e\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u57ce\u5e02\uff0c\u7528 STL \u7684 `lower_bound` \u51fd\u6570\u8f85\u52a9\uff0c\u5bfb\u627e\u79bb\u8fd9\u4e2a\u57ce\u5e02\u6700\u8fd1\u7684\u8702\u7a9d\u5854\uff0c\u5e76\u5f97\u51fa\u8ddd\u79bb\u3002\n\n\u6700\u540e\uff0c\u5c06\u8fd9\u4e9b\u8ddd\u79bb\u53d6\u6700\u5927\u503c\uff0c\u5373\u4e3a\u7b54\u6848\u3002\n\n### \u4e09\u3001\u5b8c\u6574\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint n,m;\nint city[100005],tower[100005];\nint ans=0;\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&city[i]);\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d\",&tower[i]);\n\t}\n\tsort(city+1,city+1+n);//\u6392\u5e8f\u3002\n\tsort(tower+1,tower+1+m);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint position=lower_bound(tower+1,tower+1+m,city[i])-tower;//\u5bfb\u627e\u7b2c\u4e00\u4e2a\u5728\u57ce\u5e02\u53f3\u8fb9\u7684\u8702\u7a9d\u5854\u3002\n\t\tif(position>m)//\u5982\u679c\u8fd9\u4e2a\u57ce\u5e02\u5728\u6240\u6709\u8702\u7a9d\u5854\u7684\u53f3\u8fb9\uff1a\n\t\t{\n\t\t\tans=max(ans,abs(city[i]-tower[position-1]));//\u53d6\u57ce\u5e02\u5de6\u8fb9\u7684\u8702\u7a9d\u5854\u3002\n\t\t}\n\t\telse if(position<=1)//\u5982\u679c\u8fd9\u4e2a\u57ce\u5e02\u5728\u6240\u6709\u8702\u7a9d\u5854\u7684\u5de6\u8fb9\uff1a\n\t\t{\n\t\t\tans=max(ans,abs(city[i]-tower[position]));//\u53d6\u57ce\u5e02\u53f3\u8fb9\u7684\u8702\u7a9d\u5854\u3002\n\t\t}\n\t\telse\n\t\t{\n\t\t\tans=max(ans,min(abs(city[i]-tower[position]),abs(city[i]-tower[position-1])));//\u5728\u57ce\u5e02\u4e24\u8fb9\u7684\u8702\u7a9d\u5854\u4e2d\u53d6\u6700\u8fd1\u7684\u3002\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;//\u5b8c\u7ed3\u6492\u82b1\uff01\n}\n\n```\n\nBy [dengzijun](https://www.luogu.com.cn/user/387836)",
        "postTime": 1625559616,
        "uid": 387836,
        "name": "dengzijun",
        "ccfLevel": 5,
        "title": "CF0702C\u9898\u89e3"
    },
    {
        "content": "### 1 \u601d\u8def\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u57ce\u5e02\uff0c\u8ba1\u7b97\u51fa\u5b83\u8ddf\u7f51\u7edc\u5854\u7684\u6700\u8fd1\u8ddd\u79bb\uff0c\u518d\u5bf9\u8fd9\u4e00\u5806\u6570\u636e\u53d6\u6700\u5927\u503c\u5373\u53ef\u3002\n\n### 2 \u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int max_t=200000;\nconst int max_num=2000000000;//\u8bbe\u7f6e\u4e00\u4e2a\u6781\u5927\u503c2\u4e5810\u76849\u6b21\u65b9\nint n,m;\nstruct C{//\u57ce\u5e02\u7ed3\u6784\u4f53\n\tint x;//\u5750\u6807\n\tbool k;//\u7c7b\u578b\n\t\t//0 \u57ce\u5e02  1 \u7f51\u7edc\u5854\n}a[max_t+2];\nbool cmp(C a,C b){return a.x<b.x;}//\u5347\u5e8f\u6392\u4e00\u904d\nint min_d=2000000000;\nint ans=0;\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;++i){\n\t\tscanf(\"%d\",&a[i].x);\n\t\ta[i].k=false;\n\t}\n\tfor(int i=1;i<=m;++i){\n\t\tscanf(\"%d\",&a[i+n].x);\n\t\ta[i+n].k=true;\n\t}\n\tsort(a+1,a+n+m+1,cmp);\n\tfor(int i=1;i<=n+m;++i){\n\t\tif(!a[i].k){//\u8fd9\u662f\u4e00\u4e2a\u57ce\u5e02\n\t\t\tint d1=max_num,d2=max_num;\n\t\t\tfor(int j=i;j>=1;--j){\n\t\t\t\tif(a[j].k){//\u8702\u7a9d\u5854\n\t\t\t\t\td1=a[i].x-a[j].x;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int j=i;j<=n+m;++j){\n\t\t\t\tif(a[j].k){//\u8702\u7a9d\u5854\n\t\t\t\t\td2=a[j].x-a[i].x;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tans=max(ans,min(d1,d2));\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\nBy **dengziyue**",
        "postTime": 1623421173,
        "uid": 387840,
        "name": "happy_dengziyue",
        "ccfLevel": 6,
        "title": "CF702C\u9898\u89e3"
    },
    {
        "content": "\u5927\u5bb6\u597d\uff0c\u8fd9\u662f\u6211\u505a\u7684\u7b2c\u4e8c\u9053 CF \u9898\uff0c\u5199\u7684\u7b2c\u4e00\u7bc7 CF \u9898\u89e3\uff0c\u5982\u679c\u6ca1\u770b\u7684\u592a\u61c2\u8f7b\u591a\u591a\u5305\u6db5\uff01\n\n## \u7b97\u6cd5\uff1a\u4e8c\u5206\u7b54\u6848+\u5dee\u5206\n\u505a\u8fd9\u9053\u9898\u7684\u601d\u8def\u662f\uff0c\u9996\u5148\u6211\u4eec\u7528\u4e8c\u5206\u7b54\u6848\u6765\u5bfb\u627e\u6700\u5c0f\u7684 $r$\uff0c\u7136\u540e\u5e94\u8be5\u6709\u4e00\u4e2a check \u7684\u51fd\u6570\u3002\u600e\u4e48 check \u5462\uff1f\u6211\u4eec\u60f3\uff0c\u679a\u4e3e\u6bcf\u4e00\u4e2a\u4fe1\u53f7\u70b9\uff0c\u5224\u65ad\u4ed6\u80fd\u591f\u8986\u76d6\u5230\u7684\u5730\u65b9\uff0c\u6700\u540e\u770b\u4e00\u770b\u662f\u4e0d\u662f\u6240\u6709\u7684\u57ce\u5e02\u90fd\u88ab\u8986\u76d6\u5230\u4e86\uff0c\u5c31\u597d\u4e86\uff0c\u6211\u4eec\u5c31\u8fd4\u56de\u771f\uff0c\u5426\u5219\u8fd4\u56de\u5047\u3002\n\n\u90a3\u4e48\u600e\u4e48\u628a\u80fd\u591f\u8986\u76d6\u7684\u5730\u65b9\u6807\u8bb0\u4e00\u4e0b\u5462\uff1f\u6211\u4eec\u80af\u5b9a\u4e0d\u53ef\u80fd\u53bb\u9010\u4e00\u5224\u65ad\u57ce\u5e02\u662f\u4e0d\u662f\u5728\u8be5\u4fe1\u53f7\u70b9\u7684\u8986\u76d6\u8303\u56f4\u5185\u3002\u7136\u540e\u6211\u4eec\u60f3\u5230\u5dee\u5206\uff0c\u76f4\u63a5\u628a\u80fd\u591f\u8986\u76d6\u5230\u7684\u5730\u65b9\u5168\u90e8\u52a0\u4e00\u5c31\u597d\u4e86\u3002\uff08\u5982\u679c\u4f60\u8fd8\u4e0d\u4f1a\u5dee\u5206\uff0c\u8bf7\u770b\u9898\u89e3\u6700\u4e0b\u9762\u7684\u7f51\u5740\u4e2d\u6211\u7684\u535a\u5ba2\uff0c\u91cc\u9762\u6709\u8bb2\u7b80\u5355\u7684\u5dee\u5206\u64cd\u4f5c\u548c\u539f\u7406\u3002\uff09\u4f46\u662f\u6211\u4eec\u80fd\u8fd9\u4e48\u505a\u5417\u2014\u2014\u8fd9\u4e2a\u4fe1\u53f7\u70b9\u7684\u5750\u6807\u662f $x$\uff0c\u6211\u4eec\u628a\u6570\u8f74\u4e0a $x-dis$ ~ $x+dis$ \u5168\u90e8\u6807\u8bb0\u4e0b\u6765\uff08\u5176\u4e2d $dis$ \u662f\u4e8c\u5206\u5230\u7684 $r$\uff09\u3002\u8fd9\u6837\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u4e00\u5b9a\u662f $10^9$ \u7ea7\u522b\u7684\uff0c\u4e0d\u80fd\u901a\u8fc7\u3002\n\n\u7136\u540e\u6211\u4eec\u60f3\uff0c\u90a3\u6211\u4eec\u53ef\u4ee5\u628a $a$ \u6570\u7ec4\u4e2d\u7684\u53ef\u4ee5\u88ab\u8986\u76d6\u5230\u7684\u57ce\u5e02\u6807\u8bb0\u554a\u3002\u597d\uff0c\u90a3\u6211\u4eec\u5c31\u60f3\u4ece $1$ \u5230 $n$ \u679a\u4e3e\u57ce\u5e02\uff0c\u770b\u4e00\u770b\u8fd9\u4e2a\u57ce\u5e02\u662f\u4e0d\u662f\u5927\u4e8e\u7b49\u4e8e $x-dis$ \u4e14\u5c0f\u4e8e\u7b49\u4e8e $x+dis$\u3002\u53ef\u662f\uff0c\u8fd9\u6837\u590d\u6742\u5ea6\u53c8\u9ad8\u8d77\u6765\u4e86\uff0c\u4e0d\u80fd\u884c\u3002\u6240\u4ee5\u6211\u4eec\u53c8\u60f3\u5230\u4e8c\u5206\uff0c\u4e8c\u5206\u5230 $a$ \u6570\u7ec4\u4e2d\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e $x-dis$ \u7684\u6570\uff0c\u4ee5\u53ca\u6700\u540e\u4e00\u4e2a\u5c0f\u4e8e\u7b49\u4e8e $x+dis$ \u7684\u6570\uff0c\u4e5f\u5373\u662f\u8fd9\u4e2a\u53ef\u4ee5\u8986\u76d6\u5230\u7684\u57ce\u5e02\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u4e0e\u53f3\u7aef\u70b9\u3002\u7136\u540e\u6211\u4eec\u628a\u8fd9\u4e00\u6bb5\u5dee\u5206\u52a0\u4e0a $1$ \u5c31\u597d\u4e86\u3002\n\n\u5f53\u7136\uff0c\u8fd8\u6709\u4e00\u4e9b\u7ec6\u8282\uff0c\u5982\u6839\u672c\u6ca1\u6709\u57ce\u5e02\u6ee1\u8db3\u8981\u6c42\uff0c\u6216\u8005\u5de6\u7aef\u70b9\u5728\u53f3\u7aef\u70b9\u7684\u53f3\u8fb9\u7b49\u7b49\u4e0d\u5408\u5b9e\u9645\u7684\u60c5\u51b5\uff0c\u4e00\u4e00\u7b5b\u53bb\uff0c\u5177\u4f53\u64cd\u4f5c\u89c1\u4ee3\u7801\u53ca\u6ce8\u91ca\u3002\n## \u5b8c\u6574\u4ee3\u7801\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\ntypedef long long ll;//\u8bb0\u5f97\u5f00long long\u8981\u4e0d\u4f1aTLE\u6216\u8005RE\nconst ll MaxD=1e9*2+5;//\u6700\u5927r\u5927\u7ea6\u4e0d\u80fd\u8d85\u8fc7\u8fd9\u4e2a\u6570\nint n,m;\nll a[100010],b[100010];//\u5982\u9898\nll p[100010];//\u5dee\u5206\u6570\u7ec4\nbool check(ll dis){\n    memset(p,0,sizeof(p));//\u6bcf\u4e00\u6b21\u90fd\u8981\u5f52\u96f6\uff0c\u56e0\u4e3a\u8fd9\u662f\u65b0\u4e00\u6b21\u5728\u5224\u65ad\u6bcf\u4e2a\u57ce\u5e02\u662f\u5426\u6ee1\u8db3\n    ll x,y;\n    ll L,R,mid,u,v;\n    for(int i=1;i<=m;i++){\n        x=b[i]-dis,y=b[i]+dis;\n        L=0,R=n+1;\n        while(L<R-1){//\u5bfb\u627e\u5de6\u7aef\u70b9\n            mid=(L+R)/2;\n            if(a[mid]<x) L=mid;\n            else R=mid;\n        }\n        if(R==n+1) continue;//R\u6839\u672c\u6ca1\u53d8\u8bf4\u660e\u6ca1\u6709\u4e00\u4e2a\u57ce\u5e02\u5728\u5de6\u7aef\u70b9\u8303\u56f4\u5185\uff0c\u5982\u679c\u4e0d\u592a\u6e05\u695a\u53ef\u4ee5\u770b\u4e00\u4e0b\u9898\u89e3\u6700\u4e0b\u65b9\u7684\u56fe\u4e00\n        u=R;\n        L=0,R=n+1;\n        while(L<R-1){//\u5bfb\u627e\u53f3\u7aef\u70b9\n            mid=(L+R)/2;\n            if(a[mid]>y) R=mid;\n            else L=mid;\n        }\n        if(L==0) continue;//L\u6839\u672c\u6ca1\u53d8\u8bf4\u660e\u6ca1\u6709\u4e00\u4e2a\u57ce\u5e02\u5728\u6709\u7aef\u70b9\u8303\u56f4\u5185\uff0c\u5982\u679c\u4e0d\u592a\u6e05\u695a\u53ef\u4ee5\u770b\u4e00\u4e0b\u9898\u89e3\u6700\u4e0b\u65b9\u7684\u56fe\u4e8c\n        v=L;\n        if(u>v) continue;//\u5de6\u7aef\u70b9\u6bd4\u53f3\u7aef\u70b9\u8fd8\u5927\n        p[u]++,p[v+1]--;//\u533a\u95f4\u52a0\u6cd5\uff08\u5dee\u5206\uff09\n    }\n    for(int i=1;i<=n;i++){\n        p[i]+=p[i-1];//\u524d\u7f00\u548c\u5dee\u5206\u5b9e\u73b0\n        if(p[i]==0) return false;//\u57ce\u5e02\u6ca1\u88ab\u8986\u76d6\n    }\n    return true;\n}\nvoid Finddis(){//\u4e8c\u5206r\n    ll L=-1,R=MaxD,mid;\n    while(L<R-1){\n        mid=(L+R)/2;\n        if(check(mid)) R=mid;\n        else L=mid;\n    }\n    cout<<R<<endl;\n}\nint main()\n{\n    scanf(\"%d %d\",&n,&m);\n    for(int i=1;i<=n;i++) scanf(\"%lld\",&a[i]);\n    for(int i=1;i<=m;i++) scanf(\"%lld\",&b[i]);\n    Finddis();\n    return 0;\n}\n```\n## \u590d\u6742\u5ea6\u5206\u6790\n1. \u7b2c\u4e00\u5c42\uff1a\u4e8c\u5206 $r$\uff0c\u590d\u6742\u5ea6 $\\log (2\\times 10^9+5)$\n2. \u7b2c\u4e8c\u5c42\uff1a\u679a\u4e3e\u4fe1\u53f7\u70b9\uff0c\u590d\u6742\u5ea6 $m$\n3. \u7b2c\u4e09\u5c42\uff1a\u4e8c\u5206\u5bfb\u627e\u8986\u76d6\u533a\u95f4\u5de6\u53f3\u7aef\u70b9\uff0c\u590d\u6742\u5ea6 $\\log n$\n\n\u603b\u590d\u6742\u5ea6\uff1a$O(m\\cdot\\log n\\cdot \\log (2\\times 10^9+5))$\uff0c\u4e0d\u5e94\u8d85\u8fc7 $10^8$ \u6b21\u8fd0\u7b97\u3002\n## \u9644\u4ef6\n- **\u56fe\u7247**\n![image.png](https://i.loli.net/2020/05/29/FoSpN5ZseKDmT4O.png)\uff08\u56fe\u4e00\uff09\n![image.png](https://i.loli.net/2020/05/29/ZsR2gL8c97oHVFm.png)\uff08\u56fe\u4e8c\uff09\n\n- **\u5b66\u4e60\u7f51\u5740**\n\n[\u5dee\u5206\u7b97\u6cd5\uff08\u5927\u5bb6\u53ef\u4ee5\u53ea\u770b\u4e0b\u534a\u90e8\u5206\uff09](https://www.luogu.com.cn/blog/hellosandy/wei-yun-suan-yu-ci-fen-suan-fa)\n\n\u8c22\u8c22\u5927\u5bb6\uff0c\u5e0c\u671b\u8fd9\u7bc7\u9898\u89e3\u5bf9\u4f60\u6709\u5e2e\u52a9\uff01",
        "postTime": 1590745602,
        "uid": 300078,
        "name": "pengyule",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF702C \u3010Cellular Network\u3011"
    },
    {
        "content": "## \u4e8c\u5206\u7b54\u6848\uff1f\u4e0d\u5b58\u5728\u7684\uff0c\n\n\u9996\u5148\u6211\u6bd4\u8f83\u8d5e\u540c\u697c\u4e0bdalao\u7684\u8bf4\u6cd5\uff0c~~\u8fd9\u9898\u786e\u5b9e\u6bd4\u8f83\u6c34~~\u3002\u3002\u3002\n\n\u770b\u5230dalao\u4eec\u90fd\u662f\u7528\u4e8c\u5206\u7b54\u6848\u6765\u89e3\u51b3\u8fd9\u9053\u9898\u7684\uff0c\u4f46\u5176\u5b9e\u53ef\u4ee5\u7528\u4e8c\u5206\u67e5\u627e\u6765\u505a\uff0c\u5177\u4f53\u601d\u8def\u548c\u4e8c\u5206\u7b54\u6848\u7684\u67e5\u8be2\u64cd\u4f5c\u7c7b\u4f3c\u3002\n\n\u56e0\u4e3a\u6211\u4eec\u5fc5\u987b\u4fdd\u8bc1\u6bcf\u4e2a\u57ce\u5e02\u90fd\u80fd\u591f\u63a5\u53d7\u5230\u4fe1\u53f7\uff0c\u6545\u53ea\u9700\u8981\u5bf9\u6bcf\u5ea7\u57ce\u5e02\uff08\u5373 a ) \u627e\u5230\u6700\u8fd1\u7684\u8702\u7a9d\u7f51\u7edc\uff08 \u5373 b ) \n\n\u76f4\u63a5\u5bf9b\u6570\u7ec4\u6392\u4e00\u6b21\u5e8f\uff0c\u6bcf\u6b21\u4e8c\u5206\u67e5\u627e\u6700\u63a5\u8fd1\u5b83\u7684\u4e24\u4e2a\u8702\u7a9d\u7f51\u7edc\uff0c\u53d6\u4e00\u4e2a\u6700\u5c0f\u503c\uff0c\u6700\u5c0f\u503c\u4e2d\u7684\u6700\u5927\u503c\u5c31\u662f\u7b54\u6848\u4e86\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int N=1000010;\ninline int read()\n{\n\tint z=0,x=1;char c=getchar();\n\twhile(c<'0'||c>'9') { if(c=='-') x=-1; c=getchar(); }\n\twhile(c>='0'&&c<='9') z=z*10+c-'0',c=getchar();\n\treturn z*x;\n}\ninline int abs(int a)\n{\n\treturn a<0?-a:a;\n}\nint n,m;\nint ans=0;\nint a[N],b[N];\nint main()\n{\n\tn=read(),m=read();\n\tfor(register int q1=1;q1<=n;q1++) a[q1]=read();\n\tfor(register int q1=1;q1<=m;q1++) b[q1]=read();\n\tsort(b+1,b+m+1);\n\tint le=1,ri=m,mid;\n\tfor(register int q1=1;q1<=n;q1++)\n\t{\n\t\tint le=1,ri=m,mid;\n\t\twhile(le<ri)\n\t\t{\n\t\t\tmid=(le+ri)>>1;\n\t\t\tif(a[q1]>b[mid]) le=mid+1;\n\t\t\telse ri=mid;\n\t\t}\n\t\tif(le!=1)\n\t\t\tans=max(ans,min(abs(b[le-1]-a[q1]),abs(b[le]-a[q1])));\n\t\telse\n\t\t\tans=max(ans,abs(b[le]-a[q1]));\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1564535594,
        "uid": 71178,
        "name": "lzjsy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF702C \u3010Cellular Network\u3011"
    }
]