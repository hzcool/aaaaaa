[
    {
        "content": "\u4e2a\u4eba\u611f\u89c9\u662f\u4e00\u9053\u975e\u5e38\u597d\u7684\u8d2a\u5fc3\u9898...\n\n\u9996\u5148\u4f1a\u8003\u8651\u5230\u8349\u5730\u6216\u6c34\u4e2d\u79ef\u7d2f\u4e00\u5b9a\u7684\u80fd\u91cf\u6765\u98de\u884c\u662f\u4e0d\u6bd4\u5728\u8349\u5730\u4e2d\u884c\u8d70\uff0c\u6c34\u4e2d\u6e38\u6cf3\u66f4\u4f18\u7684\u3002\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u8d2a\u5fc3\u5730\u5728\u8349\u5730\u4e0a\u884c\u8d70\uff0c\u6c34\u4e2d\u6e38\u6cf3\uff0c\u5ca9\u6d46\u4e0a\u98de\u884c\u5373\u53ef\u3002\n\n\u8003\u8651\u5728\u7ecf\u8fc7\u5ca9\u6d46\uff0c\u9700\u8981\u98de\u884c\u7684\u65f6\u5019\u80fd\u91cf\u4e0d\u591f\u7684\u60c5\u51b5\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u4e00\u5b9a\u8981\u5728\u4e4b\u524d\u7684\u8349\u5730\u6216\u8005\u6c34\u4e2d\u79ef\u7d2f\u80fd\u91cf\u3002\u663e\u7136\u7684\uff0c\u5728\u6c34\u4e2d\u79ef\u7d2f\u80fd\u91cf\u662f\u66f4\u4f18\u7684\uff0c\u56e0\u4e3a\u6240\u6d88\u8017\u7684\u65f6\u95f4\u66f4\u77ed\u3002\u6240\u4ee5\uff0c\u5f53\u9700\u8981\u79ef\u7d2f $x$ \u80fd\u91cf\u65f6\uff0c\u5982\u679c\u524d\u9762\u51fa\u73b0\u8fc7 $W$\uff0c\u5219\u8981\u589e\u52a0 $3x$ \u7684\u65f6\u95f4\uff1b\u5426\u5219\uff0c\u9700\u8981\u589e\u52a0 $5x$ \u7684\u65f6\u95f4\uff08\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u628a\u6240\u6709\u8981\u79ef\u7d2f\u7684\u80fd\u91cf\u90fd\u653e\u5728\u7b2c\u4e00\u4e2a\u6c34\u4e2d\u6216\u8005\u7b2c\u4e00\u4e2a\u8349\u5730\u53bb\u79ef\u7d2f\uff0c\u6240\u4ee5\u8fd9\u662f\u6b63\u786e\u7684\uff09\u3002\n\n\u8fd8\u8981\u8003\u8651\u8d70\u5230\u6700\u540e\uff0c\u5982\u679c\u80fd\u91cf\u6709\u591a\u4f59\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5728\u4e4b\u524d\u7ecf\u8fc7\u7684\u8349\u5730\u6216\u6c34\u4e2d\u7528\u98de\u884c\u6765\u589e\u5feb\u901f\u5ea6\u3002\u663e\u7136\u7684\uff0c\u6211\u4eec\u8981\u5c3d\u91cf\u5728\u8349\u5730\u591a\u98de\u884c\uff0c\u5982\u679c\u8fd8\u6709\u5269\u4e0b\u7684\uff0c\u90a3\u4e48\u5728\u6c34\u4e0a\u98de\u884c\u3002\u90a3\u4e48\u53ef\u4ee5\u7528\u6765\u589e\u5feb\u7684\u80fd\u91cf\u53ea\u6709 $\\frac{E}{2}$\uff0c\u539f\u56e0\u662f\u5728\u90a3\u4e2a\u4f4d\u7f6e\u6211\u4eec\u4e0d\u4f46\u6ca1\u6709\u79ef\u6512\u80fd\u91cf\u8fd8\u6d88\u8017\u4e86\u4e00\u4e2a\u80fd\u91cf\u3002\u8bb0\u7ecf\u8fc7\u7684\u8349\u5730\u957f\u5ea6\u4e3a Groad\uff0c\u5219\u53ef\u4ee5\u589e\u5feb\u7684\u957f\u5ea6\u662f $min(\\frac{E}{2},Groad)$\u3002\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7528 Groad \u53bb\u66f4\u65b0\u5b83\u3002\u90a3\u4e48\u6211\u4eec\u628a\u5269\u4e0b $\\frac{E}{2}-Groad$ \u7684\u80fd\u91cf\u7ed9\u5230\u6c34\u4e0a\u98de\u884c\u5373\u53ef\u3002\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0 $\\frac{E}{2}$ \u53ef\u80fd\u4e0d\u662f\u4e2a\u6574\u6570\uff01\u89c2\u5bdf\u9898\u76ee\u7ed9\u7684\u6570\u636e\u5f88\u5de7\uff0c\u591a\u4f59\u80fd\u91cf\u5728\u8349\u5730\u53ef\u4ee5\u6bcf\u4e00\u7c73\u589e\u5feb $4s$\uff0c\u5728\u6c34\u4e2d\u53ef\u4ee5\u6bcf\u4e00\u7c73\u589e\u5feb $2s$\u3002\u6240\u4ee5\u76f4\u63a5\u628a $Groad$ \u4e58\u4e0a $2$ \u53bb\u66f4\u65b0\u5373\u53ef\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u51fa\u73b0\u6709\u5c0f\u6570\u800c\u7cbe\u5ea6\u7206\u70b8\u7684\u60c5\u51b5\u4e86\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <iostream>\n#include <algorithm>\n#include <queue>\n#include <set>\n#include <vector>\n#include <stack>\n#include <map>\n#define ri register\n#define inf 0x7fffffff\n#define E (1)\n#define mk make_pair\n#define int long long\nusing namespace std; const int N=200010;\ninline int read()\n{\n\tint s=0, w=1; ri char ch=getchar();\n\twhile(ch<'0'||ch>'9') {if(ch=='-') w=-1; ch=getchar(); }\n\twhile(ch>='0'&&ch<='9') s=(s<<3)+(s<<1)+(ch^48), ch=getchar(); return s*w;\n}\nvoid print(int x) {if(x<0) x=-x, putchar('-'); if(x>9) print(x/10); putchar(x%10+'0'); }\nint n,l[N],T,minn=1e18; char s[N];\nsigned main()\n{\n\tn=read(); bool wb=false;\n\tfor(ri int i=1;i<=n;i++) l[i]=read();\n\tscanf(\"%s\",s+1);\n\tint nowr,Gr,Wr; nowr=Gr=Wr=0;\n\tfor(ri int i=1;i<=n;Gr=min(Gr,nowr), i++)\n\t{\n\t\tif(s[i]=='G') nowr+=l[i], Gr+=l[i]*2, T+=l[i]*5;\n\t\tif(s[i]=='W') nowr+=l[i], T+=l[i]*3, wb=true;\n\t\tif(s[i]=='L')\n\t\t{\n\t\t\tnowr-=l[i]; T+=l[i]; if(nowr>=0) continue;\n\t\t\tif(wb) T-=nowr*3; else T-=nowr*5; nowr=0;\n\t\t}\n\t}\n\tif(!nowr) printf(\"%lld\\n\",T);\n\telse printf(\"%lld\\n\",T-Gr*2-(nowr-Gr));\n\treturn 0;\n}\n```\n",
        "postTime": 1588508667,
        "uid": 98618,
        "name": "Provicy",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1091F"
    }
]