[
    {
        "content": "### CF670C \u3010Cinema\u3011\n\n\u8fd9\u9053\u9898\u6211\u53ea\u7528\u4e86sort\uff0c\u5176\u5b83\u4e1c\u897f\u90fd\u662f\u81ea\u5df1\u624b\u5199\u7684\uff0c\u4ee3\u7801\u53ef\u8bfb\u6027\u5e94\u8be5\u6bd4\u5176\u4ed6\u4eba\u9ad8\u4e00\u70b9\uff0c\u5e0c\u671b\u8fd9\u7bc7\u9898\u89e3\u7ba1\u7406\u5458\u53ef\u4ee5\u901a\u8fc7\u3002\n\n\u5148\u8bf4\u4e00\u4e0b\u6211\u8fd9\u9053\u9898\u7684\u601d\u8def\u5427\uff1a\n\n**1.\u56e0\u4e3a\u8fd9\u9053\u9898\u8bed\u8a00\u79cd\u7c7b\u7684\u8303\u56f4\u662fint\uff0c\u6240\u4ee5\u76f4\u63a5\u66b4\u529b\u7edf\u8ba1\u662f\u4e0d\u884c\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5c06\u6570\u636e\u79bb\u6563\u5316\u4e00\u4e0b\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5map\u6216\u8005hash\u4e4b\u7c7b\u7684\uff0c\u4e0d\u8fc7\u6211\u611f\u89c9\u79bb\u6563\u5316\u4e0d\u662f\u592a\u96be\uff0c\u5c31\u76f4\u63a5\u5199\u4e86\u4e2a\u79bb\u6563\u5316\u3002**\n\n**2.\u5c06\u6240\u6709\u8bed\u8a00\u79bb\u6563\u5316\u540e\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e8c\u5206\u641c\u7d22\u76f4\u63a5\u53bb\u627e\u6bcf\u4e00\u4e2a\u79d1\u5b66\u5bb6\u4f1a\u7684\u8bed\u8a00\uff0c\u5e76\u5f00\u4e00\u4e2a\u6570\u7ec4\u5b58\u4e0b\u6bcf\u79cd\u8bed\u8a00\u6709\u51e0\u4e2a\u4eba\u4f1a\u3002**\n\n**3.\u5206\u522b\u641c\u7d22\u5e76\u8ba1\u5f55\u914d\u97f3\u8bed\u8a00\u548c\u5b57\u5e55\u8bed\u8a00\uff0c\u901a\u8fc7\u5bf9\u6bd4\u5224\u65ad\u51fa\u9009\u62e9\u54ea\u4e00\u4e2a\u624d\u662f\u6700\u4f73\u7684\u9009\u62e9\u3002**\n\n\u60f3\u8fd9\u9053\u9898\u7684\u601d\u8def\u5176\u5b9e\u5e76~~\u4e0d\u96be~~\uff0c\u6211\u4e5f\u5c31\u53eaWA\u4e86\u4e24\u904d\uff08QAQ\uff09\n\u53ea\u8981\u7ec6\u8282\u591a\u6ce8\u610f\u4e00\u70b9\u8fc7\u8fd9\u9053\u9898\u8fd8\u662f\u4e0d\u96be\u7684\u3002\n\n\u9644\u4e0a\u6211\u7684\u4ee3\u7801\uff08**\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO((n + m)log(n + m**\uff09:\n```cpp\n#include <cstdio>\n#include <algorithm>\n\nusing namespace std;\nconst int N = 400005;\n\nint n, m;\nint a[N], b[N], c[N], d[N + N / 2], e[N + N / 2], k[N];\nint ans = 1, ans1, ans2;\n//\u79bb\u6563\u5316 \ninline void discrete(int x) {\n    int t = 0;\n    sort(d + 1, d + 1 + x);\n    for(int i = 1; i <= x; ++i)\n        if(i == 1 || d[i] != d[i - 1]) e[++t] = d[i];//\u53bb\u91cd+\u79bb\u6563 \n    e[0] = t;//\u5c06\u53bb\u91cd\u540e\u7684\u957f\u5ea6\u76f4\u63a5\u4fdd\u5b58\u5728e[0]\u91cc\u9762\u3002 \n}\n//\u4e8c\u5206\u641c\u7d22 \ninline int query(int x) {\n    \n    int l = 1, r = e[0], mid;//\u81ea\u5df1\u5199\u7684\u4e8c\u5206 \n    while(l < r) {\n        mid = (l + r) >> 1;\n        if(e[mid] >= x) r = mid;\n        else l = mid + 1;\n    }\n    return l;\n}\n\nint main() {\n//\tfreopen(\"in.txt\", \"r\", stdin);\n    int t = 0;\n    scanf(\"%d\", &n);\n    for(int i = 1; i <= n; ++i) {\n        scanf(\"%d\", a + i);\n        d[++t] = a[i];\n    }\n    scanf(\"%d\", &m);\n    for(int i = 1; i <= m; ++i) {\n        scanf(\"%d\", b + i);\n        d[++t] = b[i];\n    }\n    for(int i = 1; i <= m; ++i) {\n        scanf(\"%d\", c + i);\n        d[++t] = c[i];\n    }\n    \n    discrete(t);//\u628a\u6240\u6709\u8bed\u8a00\u79bb\u6563\u5316\u4e00\u904d\n\n    for(int i = 1; i <= n; ++i) k[query(a[i])]++;//\u66b4\u529b\u7edf\u8ba1\n    \n    for(int i = 1; i <= m; ++i) {\n        int x = k[query(b[i])], y = k[query(c[i])];\n        if(x > ans1 || (x == ans1 && y > ans2)){//\u4e0e\u4e0a\u4e00\u4e2a\u7b54\u6848\u5bf9\u6bd4\u9009\u51fa\u6700\u4f73 \n            ans = i;\n            ans1 = x;\n            ans2 = y;//\u4e3a\u4e86\u4e0b\u4e00\u6b21\u6bd4\u8f83\uff0c\u4fdd\u5b58\u8fd9\u4e00\u6b21\u7b54\u6848 \n        }\n    }\n    \n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```\n\n",
        "postTime": 1552567923,
        "uid": 56940,
        "name": "\u9677\u8bed",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF670C \u3010Cinema\u3011"
    },
    {
        "content": "- \u9898\u76ee\u94fe\u63a5\uff1a\n   \n   https://www.luogu.org/problemnew/show/CF670C\n   \n- \u601d\u8def\uff1a\n\n  - step-1\uff1a\n  \n    \u8bed\u8a00\u7684\u6570\u636e\u8303\u56f4\u662f10^9,\u6240\u4ee5\u6211\u4eec\u91c7\u53d6\u7528map\u79bb\u6563\u5316,\u8fd9\u6837\u5c31\u80fd\u65b9\u4fbf\u4e14\u4e0dMLE\u5730\u8bb0\u5f55\u6bcf\u4e2a\u8bed\u8a00\u4f1a\u7684\u4eba\u6570\u3002\n  \n  - step-2\uff1a\n  \n    \u7136\u540e\u6211\u4eec\u518d\u904d\u5386\u4e00\u904d\u6240\u6709\u573a\u6b21\u7684\u7535\u5f71,\u8bb0\u5f55\u4e0b\u6700\u591a\u4eba\u80fd\u542c\u61c2\u58f0\u97f3\u7684\u90a3\u4e00\u573a,\u653e\u5728\u4e00\u4e2aok\u6570\u7ec4\u91cc\u3002\n    \n    \u63a5\u7740\u518d\u904d\u5386ok\u6570\u7ec4,\u8bb0\u5f55\u6700\u591a\u4eba\u80fd\u770b\u61c2\u5b57\u5e55\u7684\u90a3\u4e00\u573a\u5c31\u662f\u7b54\u6848\u3002\n    \n- Tips:\n\n  - step-2\u80fd\u7528sort\u4ee3\u66ff\uff0c\u4f46\u5b9e\u6d4b\u8fd9\u6837\u4f1a\u8fc7\u4e0d\u4e86\u7b2c125\u4e2a\u70b9\uff0c\u56e0\u4e3a\u90a3\u4e2a\u70b9\u6570\u636e\u6bd4\u8f83\u6bd2\u7624\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u4e5f\u7ed9\u51fa\u4e86sort\u7684cmp\u51fd\u6570\u3002\n  - mx\uff08\u6700\u5927\u503c\uff09\u8981\u8bbe\u6210\u5c0f\u4e8e0\u7684\u6570,\u591a\u4e8f\u4e86\u6837\u4f8b2,\u56e0\u4e3a\u6837\u4f8b2\u4e2d\u7b2c\u4e00\u573a\u7535\u5f71\u7684\u5b57\u5e55\u6ca1\u6709\u4e00\u4e2a\u4eba\u61c2\u3002\n  \n- \u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <map>\n#include <cstring>\n#include <algorithm>\n#include <cctype>\nusing namespace std;\nconst int maxn=200005;\nmap <int,int> lan;\nstruct Film{\n    int voi,tit,index;\n}film[maxn];\nint n,m;\ntemplate <class T>inline void read(T &x)\n{\n    x=0;char c;int ne=0;\n    while(!isdigit(c=getchar()))ne=c=='-';\n    x=c-48;\n    while(isdigit(c=getchar()))x=(x<<3)+(x<<1)+c-48;\n    x=ne?-x:x;\n}\ninline bool cmp(const Film &x,const Film &y)\n{\n    if(lan[x.voi]==lan[y.voi])\n    {\n        return lan[x.tit]>lan[y.tit];\n    }\n    return lan[x.voi]>lan[y.voi];\n}\nint main()\n{\n    int x,mx=-1;\n    scanf(\"%d\",&n);\n    for(register int i=1;i<=n;i++){\n        read(x);\n        lan[x]++;\n    }\n    scanf(\"%d\",&m);\n    for(register int i=1;i<=m;i++){\n        read(film[i].voi);\n        film[i].index=i;\n    }\n    for(register int i=1;i<=m;i++){\n        read(film[i].tit);\n    }\n    //sort(film+1,film+1+m,cmp);\n    int ok[maxn],cnt=0,ans;  //step-2\n    for(register int i=1;i<=m;i++){\n        if(lan[film[i].voi]>mx){\n            cnt=0,mx=lan[film[i].voi];\n            ok[++cnt]=i;\n        }\n        else if(lan[film[i].voi]==mx){\n            ok[++cnt]=i;\n        }\n    }mx=-1;\n    for(register int i=1;i<=cnt;i++){\n        if(lan[film[ok[i]].tit]>mx){\n            mx=lan[film[ok[i]].tit];ans=ok[i];\n        }\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n```",
        "postTime": 1521796236,
        "uid": 61382,
        "name": "Rye_Catcher",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF670C \u3010Cinema\u3011"
    },
    {
        "content": "### \u770b\u89c1\u5927\u4f6c\u4eec\u4e00\u4e2a\u4e2a\u90fd\u7528map\uff0c\u8eab\u4e3a\u849f\u84bb\u7684\u6211\u745f\u745f\u53d1\u6296\uff0c\u53ea\u597d\u624b\u6253\u79bb\u6563\u5316~~~\u867d\u7136\u65f6\u95f4\u6709\u70b9\u6162~\u53ea\u8dd1\u4e866000ms\n\n\u6211\u8fd9\u91cc\u91c7\u53d6\u7684\u662f\u7528vector\u8fdb\u884c\u79bb\u6563\u5316\uff1a\n\n```cpp\nvector<int>v;\n```\nv\u7528\u6765\u50a8\u5b58\u9700\u8981\u79bb\u6563\u7684\u6570\n\n------------------------\n```cpp\nread(a[i]),v.push_back(a[i]);\nstable_sort(v.begin(),v.end());\n```\n\u8bfb\u5165\u5e76\u6392\u5e8f\n\n\n------------------------\n**\u5f88\u5173\u952e\u7684\u4e00\u6b65\u64cd\u4f5c\u2193\u2193\u2193**\n\n```\nv.erase(unique(v.begin(),v.end()),v.end());\n```\n\n------------------------\n\n\u8fd9\u91cc\u6211\u6765\u89e3\u91ca\u4e00\u4e0b\n\nunique()\u662fC++\u6807\u51c6\u5e93\u51fd\u6570\u91cc\u9762\u7684\u51fd\u6570\uff0c\u5176\u529f\u80fd\u662f**\u53bb\u9664**\u76f8\u90bb\u7684**\u91cd\u590d\u5143\u7d20**\uff08\u53ea\u4fdd\u7559\u4e00\u4e2a\uff09\uff0c\u6240\u4ee5\u4f7f\u7528\u524d\u9700\u8981\u5bf9\u6570\u7ec4\u8fdb\u884c**\u6392\u5e8f**\uff08\u5347\u5e8f\u964d\u5e8f\u5747\u53ef\uff09\uff0c\u5177\u4f53\u4f7f\u7528\u5982\u4e0b\uff1a\n\n\u5bf9\u4e8e\u957f\u5ea6\u4e3an\u6570\u7ec4a\uff0cunique(a+1,a+n+1)\u8fd4\u56de\u7684\u662f**\u8fed\u4ee3\u5668**\uff0c\u8fed\u4ee3\u5668\u6307\u5411\u7684\u662f**\u91cd\u590d\u5143\u7d20\u7684\u9996\u5730\u5740**\n\n\u5982\u679c\u975e\u8981\u5f97\u5230**\u4e0d\u91cd\u5143\u7d20\u7684\u4e2a\u6570**\uff0c\u53ef\u4ee5\u7528 unique(a+1,a+n+1) -a - 1\u8868\u793a\uff1b\n\n\u4e0b\u9762\u4e3e\u4e2a\u6817\u5b50\uff1a\n\n\u6bd4\u5982\u8fd9\u662f\u53bb\u91cd\u524d\u5df2\u6392\u597d\u5e8f\u7684\u6570\uff1a\n\n|  1|1  | 1 | 2 | 3 | 4 | 4 | 5 |\n| :----------: | :----------: | :----------: | :----------: | :----------: | :----------: | :----------: | :----------: |\n\n\u90a3\u4e48unique\u4e00\u904d\u540e\uff0c\u5c31\u4f1a\u5f97\u5230\u5982\u4e0b\u7684\u6570\u7ec4\uff1a\n\n|  1| 2 | 3 | 4 | 5 | 1 | 1 | 4 |\n| :----------: | :----------: | :----------: | :----------: | :----------: | :----------: | :----------: | :----------: |\n\n\u4ece\u8fd9\u91cc\u53ef\u4ee5\u770b\u51faunique\u53ea\u662f\u5e2e\u4f60**\u6574\u7406\u51fa\u4e0d\u91cd\u590d\u5143\u7d20\uff0c\u91cd\u590d\u7684\u5143\u7d20\u8fd8\u662f\u7801\u653e\u5728\u540e\u9762**\u3002\n\n\u6240\u4ee5\u8fd9\u662f\u6211\u4eec\u5c31\u8981\u7528\u5230erase\uff1a\n\nerase\u662fvector\u81ea\u5e26\u7684\u51fd\u6570,\u5373\u5220\u9664**a[v.begin()]~~a[v.end()-1]**\uff1b\n\n------------------------\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u5199\u4e00\u4e2aquery\u51fd\u6570\u627e\u51fa\u67d0\u4e2a\u6570\u88ab\u79bb\u6563\u5316\u6210\u4e86\u4ec0\u4e48\uff1a\n\n```cpp\nint query(int x) {return lower_bound(v.begin(),v.end(),x)-v.begin()+1;}\n```\n------------------------\n\n\u4e86\u89e3\u4e0a\u8ff0\u77e5\u8bc6\u540e\u5c31\u53ef\u4ee5\u5199\u51fa\u4e00\u4e2a\u7528vector\u8fdb\u884c\u79bb\u6563\u5316\u7684\u6a21\u677f\u4e86\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,a[10005],c[10005];\n//c[]\u5373\u50a8\u5b58\u79bb\u6563\u5316\u540e\u7684\u6570 \nvector<int>v;\ninline int query(int x){return lower_bound(v.begin(),v.end(),x)-v.begin()+1;}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(register int i=1;i<=n;++i) \n    \tscanf(\"%d\",&a[i]),v.push_back(a[i]);\n\tstable_sort(v.begin(),v.end());\n\tv.erase(unique(v.begin(),v.end()),v.end());\n\tfor(int i=1;i<=n;++i) c[i]=query(a[i]);\n}\n```\n\n------------------------\n\n\u90a3\u4e48\u5173\u4e8e\u8fd9\u9053\u9898\uff0c\u6211\u7684\u601d\u8def\u662f\uff1a\n\n### 1. m\u90e8\u7535\u5f71\u548cn\u4e2a**\u73c2\u5b66\u5bb6**\u6700\u591a\u6709**(m*2+n)\u79cd\u8bed\u8a00**\uff0c\u6211\u4eec\u628a\u6240\u6709\u6d89\u53ca\u7684\u8bed\u8a00push\u5230v\u91cc\u9762\uff0c\u6392\u5e8f\u5e76\u8fdb\u884c\u79bb\u6563\u5316\uff0c\n\n### 2. \u7136\u540e\u5f00\u4e2a**2\u2217m+n**\u7684\u6570\u7ec4\u53bb\u7edf\u8ba1\u6bcf\u4e2a\u4eba\u4f1a\u7684\u8bed\u8a00\uff0c \n\n### 3. \u6700\u540e\u679a\u4e3e\u6bcf\u4e2a\u7535\u5f71\u5224\u65ad.\n\n\n\u4e0b\u9762\u5c31\u662f\u5927\u5bb6\u6700\u559c\u6b22\u7684\u9ad8\u6e05\u65e0\u7801\u7684\u4ee3\u7801\u65f6\u95f4\u4e86\u3002\n\n------------------------\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#include<climits>\n#include<bitset>\n#include<vector>\nusing namespace std;\n#define R register int\n#define LL long long\n#define db double\n#define I inline int\n#define V inline void\nconst int maxn=200005;\n#define F1(i,a,b) for(R i=a;i<=b;++i)\n#define F2(i,a,b) for(R i=a;i>=b;--i)\n#define F3(i,a,b,c) for(R i=a;i<=b;i+=c)\n#define F4(i,a,b,c) for(R i=a;i>=b;i-=c)\n#define min(x,y) x<y?x:y\n#define max(x,y) x>y?x:y\nV read(R &x)\n{\n\tR f=1;x=0;register char c=getchar();\n\tfor(;c>'9'||c<'0';c=getchar()) if(c=='-') f=-1;\n\tfor(;c>='0'&&c<='9';c=getchar()) x=(x<<3)+(x<<1)+(c^48);\n\tx*=f;\n}\nV print(R x)\n{\n\tif(x<0) x=-x,putchar('-');\n\tif(x>9) print(x/10);\n\tputchar(x%10+'0');\n}\nint a[maxn],s[maxn],n,t,index[maxn*3],m,r[maxn],maxx=-1,maxy=-1,ans=1;\n\n//a[]\u8868\u793a\u7535\u5f71\u8bed\u8a00\uff0cs[]\u8868\u793a\u7535\u5f71\u5b57\u5e55\uff0cr[]\u4e3a\u4eba\u7684\u8bed\u8a00\uff0cmaxx\u662f\u6700\u591a\u6709\u51e0\u4e2a\u4eba\u542c\u5f97\u61c2\uff0cmaxy\u8868\u793a\u6709\u51e0\u4e2a\u4eba\u770b\u5f97\u61c2\n\n//\u56e0\u4e3a\u6211\u5bb3\u6015\u6709\u6ca1\u6709\u4eba\u80fd\u542c\u61c2\u6216\u770b\u61c2\u8fd9\u6837\u7684\u6570\u636e\uff0c\u6240\u4ee5\u5c31\u628aans\u521d\u503c\u7f6e\u4e3a1\nvector<int>v;\nI query(R x) {return lower_bound(v.begin(),v.end(),x)-v.begin()+1;}\nint main()\n{\n\tread(n);\n\tF1(i,1,n) read(r[i]),v.push_back(r[i]);\n\tread(m);\n\tF1(i,1,m) read(a[i]),v.push_back(a[i]);\n\tF1(i,1,m) read(s[i]),v.push_back(s[i]);\n\tstable_sort(v.begin(),v.end());\n\tv.erase(unique(v.begin(),v.end()),v.end());\n\tF1(i,1,n) t=query(r[i]),++index[t];\n\tF1(i,1,m)\n\t{\n\t\tR x=query(a[i]),y=query(s[i]);\n\t\tif(index[x]>maxx)\n\t\t\tmaxx=index[x],maxy=index[y],ans=i;\n        //\u5982\u679c\u4e24\u90e8\u7535\u5f71\u80fd\u542c\u61c2\u7684\u4eba\u4e00\u6837\u591a\uff0c\u5c31\u6bd4\u8f83\u80fd\u770b\u61c2\u5b57\u5e55\u7684\u4eba\u7684\u591a\u5c11\n\t\telse if(index[x]==maxx&&index[y]>maxy)\n\t\t\tmaxy=index[y],ans=i;\n\t}\n\tprint(ans);\n\treturn 0;\n}\n```",
        "postTime": 1545486676,
        "uid": 122407,
        "name": "Ein_Niemand",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF670C \u3010Cinema\u3011"
    },
    {
        "content": "~~\u5237lyd\u5927\u4f6c\u9898\u76ee\u770b\u89c1\u4e86\u8fd9\u9053\u9898\uff0c\u7ed3\u679c\u8c03\u4e8620min\uff0c\u6211\u592a\u83dc\u4e86~~\n\n\u6211\u4eec\u6765\u770b\u4e00\u770b\u8fd9\u9053\u9898\u3002\n\n##### \uff08\u611f\u8c22Acwing\u7684\u826f\u5fc3\u7ffb\u8bd1\uff09\n\n\u83ab\u65af\u79d1\u6b63\u5728\u4e3e\u529e\u4e00\u4e2a\u5927\u578b\u56fd\u9645\u4f1a\u8bae\uff0c\u6709n\u4e2a\u6765\u81ea\u4e0d\u540c\u56fd\u5bb6\u7684\u79d1\u5b66\u5bb6\u53c2\u4f1a\u3002\n\n\u6bcf\u4e2a\u79d1\u5b66\u5bb6\u90fd\u53ea\u61c2\u5f97\u4e00\u79cd\u8bed\u8a00\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u4eec\u628a\u4e16\u754c\u4e0a\u7684\u6240\u6709\u8bed\u8a00\u75281\u523010^9\u4e4b\u95f4\u7684\u6574\u6570\u7f16\u53f7\u3002\n\n\u5728\u4f1a\u8bae\u7ed3\u675f\u540e\uff0c\u6240\u6709\u7684\u79d1\u5b66\u5bb6\u51b3\u5b9a\u4e00\u8d77\u53bb\u770b\u573a\u7535\u5f71\u653e\u677e\u4e00\u4e0b\u3002\n\n\u4ed6\u4eec\u53bb\u7684\u7535\u5f71\u9662\u91cc\u4e00\u5171\u6709m\u90e8\u7535\u5f71\u6b63\u5728\u4e0a\u6620\uff0c\u6bcf\u90e8\u7535\u5f71\u7684\u8bed\u97f3\u548c\u5b57\u5e55\u90fd\u91c7\u7528\u4e0d\u540c\u7684\u8bed\u8a00\u3002\n\n\u5bf9\u4e8e\u89c2\u5f71\u7684\u79d1\u5b66\u5bb6\u6765\u8bf4\uff0c\u5982\u679c\u80fd\u542c\u61c2\u7535\u5f71\u7684\u8bed\u97f3\uff0c\u4ed6\u5c31\u4f1a\u5f88\u5f00\u5fc3\uff1b\u5982\u679c\u80fd\u770b\u61c2\u5b57\u5e55\uff0c\u4ed6\u5c31\u4f1a\u6bd4\u8f83\u5f00\u5fc3\uff1b\u5982\u679c\u5168\u90fd\u4e0d\u61c2\uff0c\u4ed6\u5c31\u4f1a\u4e0d\u5f00\u5fc3\u3002\n\n\u73b0\u5728\u79d1\u5b66\u5bb6\u4eec\u51b3\u5b9a\u5927\u5bb6\u770b\u540c\u4e00\u573a\u7535\u5f71\u3002\n\n\u8bf7\u4f60\u5e2e\u5fd9\u9009\u62e9\u4e00\u90e8\u7535\u5f71\uff0c\u53ef\u4ee5\u8ba9\u89c2\u5f71\u5f88\u5f00\u5fc3\u7684\u4eba\u6700\u591a\u3002\n\n\u5982\u679c\u6709\u591a\u90e8\u7535\u5f71\u6ee1\u8db3\u6761\u4ef6\uff0c\u5219\u5728\u8fd9\u4e9b\u7535\u5f71\u4e2d\u6311\u9009\u89c2\u5f71\u6bd4\u8f83\u5f00\u5fc3\u7684\u4eba\u6700\u591a\u7684\u90a3\u4e00\u90e8\u3002\n\n\n------------\n\n\u597d\u7684\uff0c\u6211\u4eec\u770b\u5b8c\u4e86\u9898\uff0c\u6765\u770b\u4e00\u770b\u6838\u5fc3\u601d\u60f3\u3002\n\n### \u6838\u5fc3\uff1a\u79bb\u6563\u5316\u53bb\u91cd\n\n\u4e3a\u4ec0\u4e48\u8981\u79bb\u6563\u5316\u5462\uff1f\u9898\u9762\u4e0a\u8bb2\u4e86\uff0c\u539f\u6570\u5728int\u8303\u56f4\u5185\uff0chash\u6570\u7ec4\u80af\u5b9a\u662f\u5f00\u4e0d\u4e0b\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u6765\u4e00\u53d1\u79bb\u6563\u5316\u3002\n\n\u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u628a\u51fa\u73b0\u7684\u8f83\u5927\u7684\u6570\u53bb\u6389\u91cd\u590d\u7684\u6570\u540e\u7ed9\u5b83\u4eec\u4e00\u4e2a\u6bd4\u8f83\u5c0f\u7684\u65b0\u7684\u7f16\u53f7\uff0c\u7136\u540e\u5728hash\u5224\u65ad\u3002\n\n```\ninline void discrete() {\n\tlen = 0;\n\tint l = 0;\n\tfor (int i = 1; i <= n; i ++) {\n\t\td[++ l] = a[i];\n\t}\n\tfor (int i = 1; i <= m; i ++) {\n\t\td[++ l] = b[i];\t\n\t}\n\tfor (int i = 1; i <= m; i ++) {\n\t\td[++ l] = c[i];\n\t}\n\tsort(d + 1, d + l + 1);\n\tfor (int i = 1; i <= l; i ++) if (d[i] != d[i - 1]) e[++ len] = d[i];//\u53bb\u91cd+\u6392\u5e8f\n}\ninline int query(int x) {\n\treturn lower_bound(e + 1, e + len + 1, x) - e; //\u67e5\u8be2x\u5728e\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\uff0c\u4f5c\u4e3ax\u7684\u65b0\u7f16\u53f7\n}\n```\n\n\u79bb\u6563\u5316\u5b8c\u540e\u600e\u4e48\u9009\u62e9\u7535\u5f71\u5462\uff1f\n\n\u6211\u4eec\u628a\u79d1\u5b66\u5bb6\u4eec\u7684\u8bed\u8a00\u5168\u90e8hash\u8fdbvis\u6570\u7ec4\u4e2d\u3002\u7136\u540e\u904d\u5386\u7535\u5f71\uff0c\u5224\u65ad\u58f0\u97f3\u548c\u5b57\u5e55\u7b26\u5408\u7684\u4e2a\u6570\uff0c\u627e\u5230\u58f0\u97f3\u4e2a\u6570\u6700\u5927\u7684\u67d0\u4e2a\u7535\u5f71\uff0c\u4f7f\u5b83\u5728\u540c\u6837\u58f0\u97f3\u4e2a\u6570\u7684\u7535\u5f71\u4e2d\u5b57\u5e55\u4e2a\u6570\u6700\u5927\u5c31\u884c\u4e86\u3002\n\n\u4e0a\u4ee3\u7801\uff08\u9001\u4e00\u53d1\u5feb\u8bfb\uff09\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\ntemplate <typename T>\ninline void read(T &x) {\n\tx = 0;\n\tT f = 1;\n\tchar c = getchar();\n\tfor (; !isdigit(c); c = getchar()) if (c == '-') f = -1;\n\tfor (; isdigit(c); c = getchar()) x = (x << 1) + (x << 3) + (c ^ 48);\n\tx *= f;\n}\ninline void d_read(double &x) {\n\tx = 0.0;\n\tint f = 1;\n\tchar c = getchar();\n\tfor (; !isdigit(c); c = getchar()) if (c == '-') f = -1;\n\tfor (; isdigit(c); c = getchar()) x = x * 10 + (c ^ 48);\n\tif (c == '.'){\n\t\tdouble num = 1.0;\n\t\tc = getchar();\n\t\tfor (; isdigit(c); c = getchar()) x = x + (num /= 10) * (c ^ 48);\n\t}\n\tx *= f;\n}\n\ntemplate <typename T>\ninline void w(T x) {\n\tif (x > 9) w(x / 10);\n\tputchar(x % 10 + 48);\n}\ntemplate <typename T>\ninline void write(T x, char c) {\n\tif (x < 0){\n\t\tputchar('-');\n\t\tx = -x;\n\t}\n\tw(x);\n\tputchar(c);\n}\nint len, n, m, a[200005], b[200005], c[200005], d[600005], e[600005], vis[1000005];\ninline void discrete() {\n\tlen = 0;\n\tint l = 0;\n\tfor (int i = 1; i <= n; i ++) {\n\t\td[++ l] = a[i];\n\t}\n\tfor (int i = 1; i <= m; i ++) {\n\t\td[++ l] = b[i];\t\n\t}\n\tfor (int i = 1; i <= m; i ++) {\n\t\td[++ l] = c[i];\n\t}\n\tsort(d + 1, d + l + 1);\n\tfor (int i = 1; i <= l; i ++) if (d[i] != d[i - 1]) e[++ len] = d[i];\n}\ninline int query(int x) {\n\treturn lower_bound(e + 1, e + len + 1, x) - e;\n}\nint main(){\n\tread(n);\n\tfor (int i = 1; i <= n; i ++) {\n\t\tread(a[i]);\n\t}\n\tread(m);\n\tfor (int i = 1; i <= m; i ++) read(b[i]);\n\tfor (int i = 1; i <= m; i ++) read(c[i]);\n\tdiscrete();\n\tfor (int i = 1; i <= n; i ++) {\n\t\tint u = query(a[i]);\n\t\tvis[u] ++;\n\t}\n\tint tot = 0, cnt = 0;\n\tint ans = 1;\n\tfor (int i = 1; i <= m; i ++) {\n\t\tint u = query(b[i]), v = query(c[i]);\n\t\tif (vis[u] > tot || vis[u] == tot && vis[v] > cnt) {\n\t\t\ttot = vis[u];\n\t\t\tans = i;\n\t\t\tcnt = vis[v];\n\t\t}\n\t}\n\twrite(ans, '\\n');\n\treturn 0;\n}\n```",
        "postTime": 1591368741,
        "uid": 46820,
        "name": "Wall_breaker",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF670C \u3010Cinema\u3011"
    },
    {
        "content": "\u5148\u628a\u8bed\u8a00\u6392\u5e8f\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u7535\u5f71\u7684\u8bed\u97f3\u548c\u5b57\u5e55\u5206\u522b\u8fdb\u884c\u4e8c\u5206\u8ba1\u7b97\u4eba\u6570\uff0c\u7136\u540e\u5c31\u662f\u6bd4\u5927\u5c0f\uff0c\u7b54\u6848\u521d\u59cb\u5316\u4e3a1\uff0c\u907f\u514d\u51fa\u73b00\u7684\u60c5\u51b5\u3002\n\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <string>\nint a[200002],b[2000002];\n\nint inline read()\n{\n    int x=0,f=1;char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\nint main()\n{\n    int n;\n    std::cin>>n;\n    for(int i=1;i<=n;i++)a[i]=read();\n    \n    std::sort(a+1,a+1+n);\n    int m;\n    std::cin>>m;\n    for(int i=1;i<=m;i++)b[i]=read();\n    int gg=0,hh=0,ff=1,v;\n    for(int i=1;i<=m;i++)\n    {\n        v=read();\n        \n        int k1=(int)(std::upper_bound(a+1,a+1+n,b[i])-a)-(int)(std::lower_bound(a+1,a+1+n,b[i])-a);\n        \n        int k2=(int)(std::upper_bound(a+1,a+1+n,v)-a)-(int)(std::lower_bound(a+1,a+1+n,v)-a);\n        if(k1>gg||(k1==gg&&k2>hh))gg=k1,hh=k2,ff=i;\n    }\n    \n    std::cout<<ff<<std::endl;\n}\n```",
        "postTime": 1522069147,
        "uid": 26123,
        "name": "\u6d6e\u4e91\u542f\u5fc3",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF670C \u3010Cinema\u3011"
    },
    {
        "content": "\u53ef\u4ee5\u5f88\u5feb\u5730\u60f3\u5230\u4e00\u4e2a\u66b4\u529b\u505a\u6cd5\uff1a\n\n\u5f00\u4e00\u4e2a 1e9 \u7684\u6876 $t_i$\n\n\u4f7f\u7528\u4e00\u4e2a\u7ed3\u6784\u4f53\u50a8\u5b58\u4e24\u4e2a\u5173\u952e\u5b57\uff1a\n\n\u4e00\u4e2a\u662f second = \u5b57\u5e55\u53ef\u4ee5\u770b\u61c2\u7684\u4eba\u6570\n\n\u4e00\u4e2a\u662f first = \u7535\u5f71\u672c\u8eab\u53ef\u4ee5\u770b\u61c2\u7684\u4eba\u6570\n\n\u6bcf\u6b21\u8f93\u5165\u7684 $b_i$ \u4e0e $c_i$\n\n$first=t_{b_i}$\n\n$second = t_{c_i}$\n\n\u6700\u540e\u518d\u6309\u4e24\u4e2a\u5173\u952e\u5b57\u6392\u5e8f\u5c31\u53ef\u4ee5\u4e86\u3002\u3002\n\n\u4f46\u662f 1e9 \u7684\u6876\u4f1a MLE\n\n\u6240\u4ee5\u4e0d\u7528\u6876\uff0c\u7528\u4e00\u4e2a map \u6620\u5c04\u5c31\u53ef\u4ee5\u4e86\u5427\n\nCode:\n``` cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAX = 200010;\nint n,mm;\nmap<int, int> m;\nstruct node {\n    int pos,first,second;\n}a[MAX];\ninline bool cmp(node x,node y){\n\tif(x.first!=y.first)\treturn x.first>y.first;\n\treturn x.second>y.second;\t\n}\nint main(){\n    scanf(\"%d\",&n);\n    int x;\n    for(int i = 1;i <= n;++i){\n        int x;\n        scanf(\"%d\",&x);\n        m[x]++;\n    }\n    scanf(\"%d\",&mm);\n    for(int i = 1;i <= mm;++i){\n        scanf(\"%d\",&x);\n        a[i].pos = i,a[i].first = m[x];\n    }\n    for(int i = 1;i <= mm;++i){\n        scanf(\"%d\",&x);\n        a[i].second = m[x];\n    }\n    sort(a+1,a+mm+1,cmp);\n    printf(\"%d\\n\",a[1].pos);\n    return 0;\n}\n\n\n```",
        "postTime": 1599746208,
        "uid": 67621,
        "name": "NuoCarter",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF670C \u3010Cinema\u3011"
    },
    {
        "content": "## \u5e7f\u544a\uff1a[\u6211\u7684\u535a\u5ba2](https://blog.likecoding.ooo)\n## \u7ed9\u5927\u5bb6\u8bb2\u4e2a\u7b11\u8bdd\uff0c\u8fd9\u9053\u9898\u6709138\u4e2a\u6d4b\u8bd5\u70b9\n\u8c8c\u4f3c\u6ca1\u6709\u7528struct+sort\u4e00\u8d77\u6392\u5e8f\u7684\u3002\u90a3\u4e48\u6211\u5c31\u8bb2\u8bb2\u6211\u81ea\u5df1\u7684\u4ee3\u7801\u3002  \n\u6211\u7684\u7b2c\u4e00\u53cd\u5e94\u5c31\u662f\u8fd9\u9053\u9898\u9700\u8981\u6392\u5e8f\uff0c\u90a3\u4e48\u6211\u4eec\u6ce8\u610f\u5230\u8fd9\u4e2a$a_i$,$b_i$,$c_i$\u4ed6\u7684\u6570\u636e\u8303\u56f4\u662f$10^9$\u3002\u6240\u4ee5\u9700\u8981\u8fdb\u884c\u79bb\u6563\u5316\u3002\u7136\u800c\u6211\u592a\u83dc\u4e86\uff0c\u6240\u4ee5\u4f7f\u7528\u4e86map\u6765\u4ee3\u66ff\u79bb\u6563\u5316\u3002  \n\u603b\u4f53\u601d\u8def\u5982\u4e0b\uff1a  \n1. \u8f93\u5165$a_i$\u7684\u65f6\u5019\uff0c\u6211\u4eec\u8bb0\u5f55\u4f1a$a_i$\u8bed\u8a00\u7684\u4eba\u6709\u591a\u5c11 `ma[a[i]]++;`  \n2. \u7136\u540e\uff0c\u6211\u4eec\u67e5\u770b$b_i$\u6709\u591a\u5c11\u4eba\u4f1a\u542c\u61c2\u914d\u97f3\u7528\u7684\u8bed\u8a00`t[i].t1=ma[b[i]];`\n3. \u540c\u7406\uff0c\u6211\u4eec\u4e5f\u8981\u7edf\u8ba1$c_i$\u6709\u591a\u5c11\u4eba\u4f1a\u770b\u61c2\u5b57\u5e55\u7528\u7684\u8bed\u8a00 `t[i].t2=ma[c[i]];`\n4. \u6211\u4eec\u5bf9\u6b64\u8fdb\u884c\u6392\u5e8f\uff0c\u67e5\u770b\u54ea\u4e2a\u7535\u5f71\u6700\u53d7\u4ed6\u4eec\u6ee1\u610f\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e00\u6bb5\u4ee3\u7801\u3002 \n```\nbool cmp(const language &x,const language &y) {\n\treturn x.t1>y.t1 || x.t1==y.t1 && x.t2>y.t2;\n}\n```\n\u5982\u679c\u5927\u5bb6\u5bf9\u8fd9\u4e2a\u4ee3\u7801\u770b\u7684\u4e0d\u662f\u7279\u522b\u61c2\u7684\u8bdd\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u8fd9\u6bb5\u66f4\u597d\u7406\u89e3\u7684\u4ee3\u7801\n```\nbool cmp(const language &x,const language &y) {\n\tif(x.t1>y.t1) return true;\n   if(x.t1<t.t1) return false; //\u8fd9\u91cc\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528else\uff0c\u76f4\u63a5\u4f7f\u7528else\u4f1a\u5bfc\n   \t\t\t             //\u81f4x.t1==y.t1\u60c5\u51b5\u4e5f\u4f1a\u76f4\u63a5\u88abreturn false\n   \t\t\t             //\uff0c\u800c\u4e0d\u80fd\u88ab\u8003\u8651\u5230\u5b57\u5e55\u7528\u7684\u8bed\u8a00\n   //\u8fd9\u4e2a\u65f6\u5019\u5c31\u53ea\u5269x.t1==y.t1\u7684\u60c5\u51b5\u4e86\uff0c\u5728\u914d\u97f3\u7528\u7684\u8bed\u8a00\u76f8\u540c\u7684\u60c5\u51b5\u4e0b\u5728\u8003\u8651\u5b57\u5e55\u7528\u7684\u8bed\u8a00\n   if(x.t2>y.t2) return true;\n   else return false; //\u53ea\u6709\u8fd9\u4e2a\u65f6\u5019\u624d\u53ef\u80fd\u4f7f\u7528else\u54e6\n}\n```\n5. \u90a3\u4e48\u6392\u5b8c\u5e8f\u7b2c\u4e00\u4e2a\u5c31\u662f\u6700\u53d7\u6b22\u8fce\u7684\u7535\u5f71\n\n\u8bb0\u5f55ID\u7684\u539f\u56e0\uff1a\u6392\u5e8f\u8fc7\u540e\u4ed6\u4eec\u7684\u4e0b\u6807\u5c31\u4f1a\u6539\u53d8\uff0c\u6240\u4ee5\u9700\u8981\u8bb0\u5f55\u539f\u6765\u7684\u4e0b\u6807\uff0c\u6700\u540e\u624d\u80fd\u8f93\u51fa\n\n\u8d34\u4e0a\u4ee3\u7801\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\nint a[200010],b[200010],c[200010];\nint f[200010];\nstruct language {\n\tint t1,t2,id;\n};language t[200100];\nmap<int,int> ma;\nbool cmp(const language &x,const language &y) {\n\treturn x.t1>y.t1 || x.t1==y.t1 && x.t2>y.t2;\n}\nint main() {\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++) {\n\t\tscanf(\"%d\",&a[i]);\n\t\tma[a[i]]++;\n\t}\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;i++) {\n\t\tscanf(\"%d\",&b[i]);\n\t\tt[i].t1=ma[b[i]];\n\t\tt[i].id=i;\n\t}\n\tfor(int i=1;i<=m;i++) {\n\t\tscanf(\"%d\",&c[i]);\n\t\tt[i].t2=ma[c[i]];\n\t}\n\tsort(t+1,t+1+m,cmp);\n\tprintf(\"%d\",t[1].id);\n\treturn 0;\n}\n```\n\u53ef\u80fd\u6709\u4e9b\u4eba\u5bf9map\u7684\u5177\u4f53\u4f7f\u7528\u65b9\u6cd5\u53ef\u80fd\u4e0d\u662f\u7279\u522b\u4e86\u89e3\u3002\u4e0d\u4e86\u89e3\u7684\u53ef\u4ee5\u53bb\u53c2\u8003\u4e00\u4e0b\u4e09\u4e2a\u7f51\u7ad9\n1. [cppreference](https://zh.cppreference.com/w/cpp/container/map)\n2. [oi-wiki](https://oi-wiki.org/ds/stl/map/)\n3. [cplusplus\u5b98\u7f51\uff08\u82f1\u6587\uff09](http://www.cplusplus.com/reference/map/map/?kw=map)",
        "postTime": 1563847924,
        "uid": 119065,
        "name": "Kizuna_AI",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF670C \u3010Cinema\u3011"
    },
    {
        "content": "# **\u524d\u7f6e\u77e5\u8bc6**\uff1a\u79bb\u6563\u5316\u6216[map](https://oi-wiki.org/lang/csl/associative-container/#map)\n\u5148\u8bfb\u9898\uff0c\u8bfb\u5b8c\u9898\u76ee\u540e\u672c\u80fd\u60f3\u5230\u7528\u6876\u6765\u505a\uff0c\u6ca1\u8bfb\u5165\u4e00\u540d\u79d1\u5b66\u5bb6\u7684\u8bed\u8a00i\u5c31\u5c06$tong_i$\u52a01\uff0c\u6700\u540e\u5c06\u7535\u5f71\u7684\u5f00\u5fc3\u4eba\u6570\u5b58\u5230\u7ed3\u6784\u4f53\u4e2d\uff0c\u5728\u6392\u5e8f\u4fbf\u597d\u3002\u4f46\u662f\u67091e9\u79cd\u8bed\u8a00\uff0c\u6570\u7ec4\u80af\u5b9a\u5b58\u4e0d\u4e0b\u3002\u4f46\u662f $1 \\le n,m \\le 200000$\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u7528**\u79bb\u6563\u5316**\u6765\u4f18\u5316\u5373\u53ef\u3002\u4f46\u5948\u4f55\u849f\u84bb\u592a\u5f31\uff0c\u4e0d\u4f1a\u5199\u79bb\u6563\u5316\uff0c\u4fbf\u7528\u4e86map\u6765\u505a\u3002\n# \u80fd\u8ba9XXSAC\u6b64\u9898\u7684\u4e1c\u897f\n```cpp\n#include<stdio.h>\n#include<bits/stdc++.h>\n#define ll long long//\u5176\u5b9e\u5e76\u4e0d\u9700\u8981\u5f00long long\nusing namespace std;\nint n,m;\nstruct node\n{\n\tint more,most;\n\tll ID;//\u6700\u540e\u8f93\u51fa\u7f16\u53f7\uff0c\u6545\u5b58\u50a8\u4e0b\u6807\u3002\n};\nnode poi[200005];\nbool cmp(node a,node b)//\u7ed3\u6784\u4f53\u6392\u5e8f\u5e38\u89c4\u64cd\u4f5c\u3002\n{\n\tif(a.most==b.most)return a.more>b.more;\n\treturn a.most>b.most;\n}\nmap<ll,int> mp;\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint a;//\u8282\u7701\u7a7a\u95f4\uff0c\u4ece\u6211\u505a\u8d77\u3002\n\t\tscanf(\"%d\",&a);\n\t\tmp[a]++;\n\t}\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint b;\n\t\tscanf(\"%d\",&b);\n\t\tpoi[i].most=mp[b];\n\t\tpoi[i].ID=i;\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint c;\n\t\tscanf(\"%d\",&c);\n\t\tpoi[i].more=mp[c];\n\t}\n\tsort(poi+1,poi+1+m,cmp);\n\tprintf(\"%lld\",poi[1].ID);// \u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u6545\u8f93\u51fa\u7b2c\u4e00\u9879\u3002\n\treturn 0;\n}\n```\n",
        "postTime": 1603341777,
        "uid": 313249,
        "name": "Energy_Making",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF670C \u3010Cinema\u3011"
    },
    {
        "content": "## CF670C \u3010Cinema\u3011\n### \u601d\u8def\uff1a\n\u8fd9\u4e00\u9898\u662f\u4e00\u9053\u5f88\u7b80\u5355\u7684\u6392\u5e8f\u9898\uff0c\u84dd\u4e66\u4e0a\u9762\u90fd\u6709\uff0c\u601d\u8def\u5c31\u662f\uff0c\u770b\u5230\u8fd9\u9053\u9898\uff0c\u5927\u5bb6\u80af\u5b9a\u548c\u6211\u4e00\u6837\u90fd\u60f3\u5230\u4e86\u7528\u6876\u5c06\u6bcf\u4e2a\u4eba\u8bed\u8a00\u4f1a\u7684\u8bed\u8a00\u7ed9\u5b58\u8d77\u6765\uff0c\u56e0\u4e3a$n,m$\u5c0f\u4e8e$200000$,\u6240\u4ee5\u66b4\u529b\u626b\u4e00\u904d\u662f\u4e0d\u4f1a\u8d85\u65f6\u7684\uff0c\u4f46\u662f$a[i]$\u6700\u5927\u53ef\u80fd\u8fbe\u5230$10^9$,\u90a3\u4e48\u4f60\u7528\u6876\u662f\u5f00\u4e0d\u4e0b\u7684\uff0c\u8fd9\u662f\u6211\u4eec\u5c31\u4f1a\u60f3\u5230\u4e00\u4e2a\u597d\u4e1c\u897f\u2014\u2014**\u79bb\u6563\u5316**\u3002\n\n#### \u79bb\u6563\u5316\u662f\u5565\uff1f\n\n>\u79bb\u6563\u5316\uff0c\u5c31\u662f\u628a\u65e0\u9650\u7a7a\u95f4\u4e2d\u6709\u9650\u7684\u4e2a\u4f53\u6620\u5c04\u5230\u6709\u9650\u7684\u7a7a\u95f4\u4e2d\u53bb\uff0c\u4ee5\u6b64\u63d0\u9ad8\u7b97\u6cd5\u7684\u65f6\u7a7a\u6548\u7387\u3002\n\u901a\u4fd7\u7684\u8bf4\uff0c\u79bb\u6563\u5316\u662f\u5728\u4e0d\u6539\u53d8\u6570\u636e\u76f8\u5bf9\u5927\u5c0f\u7684\u6761\u4ef6\u4e0b\uff0c\u5bf9\u6570\u636e\u8fdb\u884c\u76f8\u5e94\u7684\u7f29\u5c0f\u3002\n\n\u90a3\u4e48\u63a5\u4e0b\u6765\uff0c$n$\u4e2a\u4eba\uff0c**\u6bcf\u4e2a\u4eba\u4f1a\u4e00\u79cd\u8bed\u8a00**\uff0c$m$\u573a\u7535\u5f71\uff0c**\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u5c31\u662f$n+2*m$\u79cd\u8bed\u8a00**,\u90a3\u4e48\u76f4\u63a5\u5f00\u4e00\u4e2a\u5927\u5c0f\u4e3a$n+2*m$\u5927\u5c0f\u7684\u6570\u7ec4\u8bb0\u5f55\u6211\u4eec\u6392\u5e8f\u5e76\u79bb\u6563\u5316\u540e\u7684\u6570\uff0c\u7136\u540e\u7528\u6876\u626b\u4e00\u904d\uff0c\u4e0d\u8fc7\u5bf9\u4e8e\u6761\u4ef6\u5148\u5224\u65ad\u542c\u61c2\u7684\u4eba\uff0c\u518d\u5224\u65ad\u770b\u61c2\u6587\u5b57\u7684\u4eba\uff0c\u987a\u4fbf\u521d\u59cb\u7b54\u6848\u76f4\u63a5\u4e3a1\uff0c\u63a5\u4e0b\u6765\u5c31\u76f4\u63a5\u4e0a\u4ee3\u7801\u3002\n## \u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,vis[600009],a[600009],f,b[600009],c[600009],m,t,d[600009],e[600009];\nvoid pre(){\n\tsort(d,d+t+1);\n\tfor(int i=1;i<=t;i++){\n\t\tif(i==1||d[i]!=d[i-1]){\n\t\t\te[++f]=d[i];\n\t\t}\n\t}\n}//\u79bb\u6563\u5316\nint query(int x){\n\treturn lower_bound(e+1,e+f+1,x)-e;//\u4e8c\u5206\u67e5\u627e\u51fd\u6570\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t\td[++t]=a[i];\n\t} \n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d\",&b[i]);\n\t\td[++t]=b[i];\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d\",&c[i]);\n\t\td[++t]=c[i];\n\t}\n\tpre();\n\tfor(int i=1;i<=n;i++){\n\t\tvis[query(a[i])]++;//\u6876\u7edf\u8ba1\n\t}\n\tint ans=0,k=1,now=0;\n\tfor(int i=1;i<=m;i++){\n\t\tint r=query(b[i]);\n\t\tint rt=query(c[i]);\n\t//\tprintf(\"%d %d\\n\",vis[r],vis[rt]);\n\t\tif(vis[r]>=ans){\n\t\t\tif(vis[r]==ans){\n\t\t\t\tif(vis[rt]>now){\n\t\t\t\t\tnow=vis[rt];\n\t\t\t\t\tans=vis[r];\n\t\t\t\t\tk=i;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tnow=vis[rt];\n\t\t\t\tans=vis[r];\n\t\t\t\tk=i;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",k);\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1599476745,
        "uid": 206021,
        "name": "Pitiless0514",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF670C \u3010Cinema\u3011"
    },
    {
        "content": "\u9000\u5f79\u524d\u53d1\u6587\u4e86\u3002\n\n\u6392\u5e8f\u548c\u79bb\u6563\u90fd\u662f\u7a33\u5b9a\u7684\u4e00\u53ea$log$\u7684\u505a\u6cd5\uff0c\u8fd9\u91cc\u7ed9\u5927\u5bb6\u4ecb\u7ecd\u4e00\u79cd\u7384\u5b66\u590d\u6742\u5ea6\u7684\u6570\u636e\u7ed3\u6784\uff0c$hash$\u8868\u3002\n\n$hash$\u8868\u7684\u601d\u60f3\u5f88\u7b80\u5355\uff0c**\u5c06\u6240\u6709\u5bf9$mod$\u53d6\u6a21\u5728\u4e00\u4e2a\u540c\u4f59\u7c7b\u7684\u6570\u7528\u94fe\u8868\u4e32\u8d77\u6765** ~~\uff08\u4e0d\u8981\u544a\u8bc9\u6211\u4f60\u4e0d\u4f1a\u94fe\u8868\uff09~~\uff0c\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u4f9d\u8d56\u4e8e$mod$\u5927\u5c0f\u3002**\u7406\u8bba\u4e0a\u6765\u8bf4**\uff0c$mod$\u8d8a\u5927\uff0c\u540c\u4f59\u7c7b\u7684\u51b2\u7a81\u8d8a\u5c0f\uff0c\u8dd1\u5f97\u5c31\u5feb\u4e9b\uff1b$mod$\u8d8a\u5c0f\uff0c\u6bcf\u4e2a\u540c\u4f59\u7c7b\u91cc\u805a\u96c6\u7684\u6570\u8f83\u591a\uff0c\u8dd1\u5f97\u5c31\u6162\u4e9b\u3002\u6211\u4eec\u5f80\u5f80\u9700\u8981\u627e\u5230\u90a3\u4e2a\u7a7a\u95f4\u548c\u65f6\u95f4\u4e0a\u7684\u5e73\u8861\u70b9\u3002\n\n\u7ecf\u5b9e\u6d4b\uff0c\u672c\u9898\u7684\u8f83\u4f18$mod$\u662f$1e6$\uff0c\u8fd8\u6709\u4e00\u4e2a\u5c0f\u4f18\u5316\uff0c\u5c31\u662f\u5bf9\u4e8e\u5c0f\u4e8e$mod$\u7684\u6570\uff0c\u5355\u72ec\u5f00\u6876\u6765\u8bb0\uff0c\u4f46\u5f71\u54cd\u4e0d\u5927\u3002\n\n\u89e3\u51b3\u4e86\u672c\u9898\u7684\u74f6\u9888\uff0c\u5176\u4ed6\u5730\u65b9\u5c31\u4e0d\u7ec6\u8bb2\u4e86\u3002\n\n\u672c\u9898\u89e3\u5361\u4e86\u4e0b\u5e38\uff0c[\u62ff\u5230\u4e86$rank 1$](https://www.luogu.org/record/24901296)\uff08\u4f46\u4f30\u8ba1\u5f88\u5feb\u5c31\u6b7b\u4e86QwQ\uff09\uff0c[$rank 2$\u662f\u6211\u4eec\u673a\u623f\u7684\u4e00\u4e2a\u5946\u5946](https://www.luogu.org/record/24901493)\uff0c\u4ed6\u7684$mod$\u662f$1e6+7$\uff0c\u4f46\u6ca1\u6709\u52a0\u90a3\u4e2a\u5c0f\u4f18\u5316\u3002\n\n```cpp\n#include<iostream>\n#include<iomanip>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n#define INF 0x3f3f3f3f\ninline char gc(){\n\tstatic char buf[100000],*p1=buf,*p2=buf;\n\treturn p1==p2&&(p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++;\n}\ninline int read(){\n\tchar ch;\n\tint bj=1;\n\twhile(!isdigit(ch=gc()))\n\t  bj=(ch=='-')?-1:1;\n\tint res=ch^(3<<4);\n\twhile(isdigit(ch=gc()))\n\t  res=(res<<1)+(res<<3)+(ch^(3<<4));\n\treturn res*bj;\n}\nvoid printnum(int x){\n\tif(x>9)printnum(x/10);\n\tputchar(x%10+'0');\n}\ninline void print(int x,char ch){\n\tif(x<0){\n\t\tputchar('-');\n\t\tx=-x;\n\t}\n\tprintnum(x);\n\tputchar(ch);\n}\nconst int mod=1e6;\nint to[200000],v[200000],nxt[200000],h[mod],cnt;\nint n,m,a[200005],b[200005],t[mod];\nint maxn1=-INF,maxn2=-INF,ans;\ninline void Insert(int x){\n\tif(x<mod){\n\t\tt[x]++;\n\t\treturn;\n\t}\n\tfor(int i=h[x%mod];i;i=nxt[i])\n\t\tif(to[i]==x){\n\t\t\tv[i]++;\n\t\t\treturn;\n\t\t} \n\tto[++cnt]=x;\n\tv[cnt]=1;\n\tnxt[cnt]=h[x%mod];\n\th[x%mod]=cnt;\n}\ninline int query(int x){\n\tif(x<mod)return t[x];\n\tfor(int i=h[x%mod];i;i=nxt[i])\n\t\tif(to[i]==x)return v[i];\n\treturn 0;\n}\nsigned main(){\n\tn=read();\n\tint x;\n\twhile(n--)x=read(),Insert(x);\n\tm=read();\n\tfor(int i=1;i<=m;i++)a[i]=read();\n\tfor(int i=1;i<=m;i++)b[i]=read();\n\tfor(int i=1;i<=m;i++){\n\t\tint tmp1=query(a[i]),tmp2=query(b[i]);\n\t\tif(tmp1>maxn1){\n\t\t\tmaxn1=tmp1;\n\t\t\tmaxn2=tmp2;\n\t\t\tans=i;\n\t\t}\n\t\telse if(tmp1==maxn1&&tmp2>maxn2){\n\t\t\tmaxn1=tmp1;\n\t\t\tmaxn2=tmp2;\n\t\t\tans=i;\n\t\t}\n\t}\n\tprint(ans,'\\n');\n\treturn 0;\n}\n\n```\n",
        "postTime": 1570453170,
        "uid": 76873,
        "name": "Soledad_S",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF670C \u3010Cinema\u3011"
    },
    {
        "content": "**\u9898\u610f\u63cf\u8ff0**\uff1a\u6709\u8bb8\u591a\u7535\u5f71\u548c\u73c2\u5b66\u5bb6\uff0c\u7535\u5f71\u6709\u5b57\u5e55\u548c\u97f3\u9891\uff0c\u73c2\u5b66\u5bb6\u542c\u7684\u61c2\u97f3\u9891\u6ee1\u610f\uff0c\u770b\u5f97\u61c2\u5b57\u5e55\u4e3a\u8f83\u6ee1\u610f\uff0c\u6c42\u6700\u591a\u6ee1\u610f\u7684\u4eba\uff0c\u4f46\u8bed\u8a00\u7684\u6570\u975e\u5e38\u5927\u2026\u2026\n\n**\u601d\u8def**\uff1a\u54c8\u5e0c\u7edf\u8ba1\uff08\u53ef\u7528STL map\uff09STL\u5927\u6cd5\u597d\uff01\uff01\n\n\u5410\u69fd\uff1a\u6570\u636e\u5c45\u7136\u4f1a\u5361\u6b7bunordered_map\uff01\n\n**\u4ee3\u7801**\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=200005;\nunordered_map<int,int> m1;//\u7edf\u8ba1\u7528\u6620\u5c04\nint n,m,a[N],b[N],c[N],ans=-1;//ans \u8bb0\u5f55\u7b54\u6848\u4e0b\u6807\nint main(){\n\tcin>>n;\n\tfor(int i=0;i<n;i++) cin>>a[i],m1[a[i]]++;//\u7edf\u8ba1\u73c2\u5b66\u5bb6 \n\tcin>>m;\n\tfor(int i=0;i<m;i++) cin>>b[i];\n\tfor(int i=0;i<m;i++) cin>>c[i];\n\tans=0;\n\tfor(int i=0;i<m;i++){\n\t\tif(m1[b[i]]>m1[b[ans]]) ans=i;\n\t\telse if(m1[b[i]]==m1[b[ans]]&&m1[c[i]]>m1[c[ans]]) ans=i;\n\t}\n\tcout<<ans+1;//\u56e0\u4e3a\u662f\u4e0b\u6807\uff0c\u6240\u4ee5\u8981\u52a0\u4e00\n\treturn 0;\n}\n```",
        "postTime": 1563848598,
        "uid": 149872,
        "name": "\u5c0f\u5c0f\u5c0f\u670b\u53cb",
        "ccfLevel": 5,
        "title": "\u6d1b\u8c37CF670C Cinema"
    },
    {
        "content": "\u63a8\u5e7f\u535a\u5ba2\uff1ahttps://llf0703.com/p/cf-670c.html\n\n**\u4e0d\u9700\u8981\u7528\u79bb\u6563\u5316**\u7684\u6734\u7d20\u6392\u5e8f\u505a\u6cd5\u3002\n\n## \u9898\u610f\n\n\u4ece $m$ \u90e8\u7535\u5f71\u4e2d\u9009\u51fa $1$ \u90e8\u7ed9 $n$ \u4e2a\u4eba\u770b\u3002\u6bcf\u90e8\u7535\u5f71\u7684\u914d\u97f3\u548c\u5b57\u5e55\u90fd\u4f7f\u7528\u7684\u4e0d\u540c\u7684\u8bed\u8a00\uff0c\u6bcf\u4e2a\u4eba\u53ea\u638c\u63e1\u4e00\u79cd\u8bed\u8a00\uff0c\u7528 $1\\le id\\le 10^{9}$ \u7684\u6570\u8868\u793a\u4e0d\u540c\u8bed\u8a00\u3002\n\n\u5bf9\u4e8e\u9009\u51fa\u6765\u7684\u7535\u5f71\uff0c\u5982\u679c\u67d0\u4eba\u80fd\u542c\u61c2\u914d\u97f3\uff0c\u4ed6\u4f1a\u975e\u5e38\u9ad8\u5174\uff1b\u5982\u679c\u80fd\u770b\u61c2\u5b57\u5e55\uff0c\u4ed6\u4f1a\u6bd4\u8f83\u9ad8\u5174\u3002\u95ee\uff1a\u9009\u62e9\u54ea\u90e8\u7535\u5f71\uff0c\u4f7f\u5f97\u975e\u5e38\u9ad8\u5174\u7684\u4eba\u6700\u591a\uff1b\u5982\u679c\u4e00\u6837\u591a\uff0c\u5e94\u4f7f\u6bd4\u8f83\u9ad8\u5174\u7684\u4eba\u6700\u591a\u3002\n\n$n,m\\le 200000$ \u3002\n\n## \u9898\u89e3\n\n\u663e\u7136\u53ef\u4ee5\u5bf9\u6bcf\u90e8\u7535\u5f71\u5206\u522b\u8ba1\u7b97\u51fa\u4e24\u4e2a\u5c5e\u6027\uff0c\u6700\u540e\u53d6\u6700\u5927\u5373\u53ef\u3002\n\n\u4e0d\u540c\u7684\u4eba\u638c\u63e1\u7684\u8bed\u8a00\u53ef\u80fd\u76f8\u540c\uff0c\u90a3\u4e48\u53ef\u4ee5\u628a\u76f8\u540c\u8bed\u8a00\u7684\u4eba\u5408\u5e76\uff0c\u8bb0\u5f55\u8bed\u8a00\u548c\u4eba\u6570\u5728\u6570\u7ec4 $\\text{s[]}$ \u4e2d\u3002\n\n\u7136\u540e\u5c06\u4e24\u4e2a\u5c5e\u6027\u5206\u5f00\u8003\u8651\uff0c\u5148\u8003\u8651\u914d\u97f3\u3002\u5c06\u914d\u97f3\u7684\u8bed\u8a00\u548c\u6240\u6709\u4eba\u638c\u63e1\u7684\u8bed\u8a00\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u53ef\u4ee5\u5728 $O(n+m)$ \u4e0b\u5f88\u5bb9\u6613\u7684\u5f97\u5230\u975e\u5e38\u9ad8\u5174\u7684\u4eba\u7684\u4e2a\u6570\u3002\u5b57\u5e55\u540c\u7406\u3002\n\n\u5177\u4f53\u7684\u5b9e\u73b0\u662f\u5bf9\u7535\u5f71\u7684\u4e24\u4e2a\u5c5e\u6027\uff0c\u7528\u7ed3\u6784\u4f53 $(id,lan,ans)$ \u8868\u793a`\u7535\u5f71\u7684\u5e8f\u53f7`\u3001`\u8bed\u8a00`\u548c`\u975e\u5e38\u9ad8\u5174/\u8f83\u9ad8\u5174`\u7684\u4eba\u6570\u3002\u5bf9\u4e8e\u89c2\u4f17\uff0c~~\u6211\u61d2\u5f97\u518d\u5f00\u7ed3\u6784\u4f53~~\uff0c\u7528 $(id,lan)$ \u8868\u793a`\u8bed\u8a00`\u548c`\u4eba\u6570`\u3002\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\ninline int read()\n{\n    char ch=getchar();\n    int f=1,x=0;\n    while (ch<'0' || ch>'9')\n    {\n        if (ch=='-') f=-1;\n        ch=getchar();\n    }\n    while (ch>='0' && ch<='9')\n    {\n        x=x*10+ch-'0';\n        ch=getchar();\n    }\n    return f*x;\n}\n\nint n,m,a[200005];\nstruct node {\n    int id,lan,ans;\n} b[200005],c[200005],s[200005];\n\ninline bool cmp(node x,node y) { return x.lan<y.lan; } //\u6309\u8bed\u8a00\u6392\u5e8f\n\ninline bool cmp2(node x,node y) { return x.id<y.id; } //\u6309\u5e8f\u53f7\u6392\u5e8f\uff0c\u65b9\u4fbf\u7edf\u8ba1\u7b54\u6848\n\nsigned main()\n{\n    n=read();\n    for (int i=1;i<=n;i++) a[i]=read();\n    sort(a+1,a+n+1);\n    int cnt=1;\n    s[1].id=a[1]; s[1].lan=1;\n    for (int i=2;i<=n;i++)\n    {\n        if (a[i]==a[i-1]) s[cnt].lan++;\n        else s[++cnt].id=a[i],s[cnt].lan=1;\n    } //\u5408\u5e76\u76f8\u540c\u8bed\u8a00\u7684\u4eba\n    n=cnt;\n    m=read();\n    for (int i=1;i<=m;i++) b[i].lan=read(),b[i].id=i;\n    for (int i=1;i<=m;i++) c[i].lan=read(),c[i].id=i;\n    sort(b+1,b+m+1,cmp);\n    sort(c+1,c+m+1,cmp);\n    int j=1;\n    for (int i=1;i<=m;i++) //\u5904\u7406\u914d\u97f3\n    {\n        while (s[j].id<b[i].lan) j++;\n        if (s[j].id==b[i].lan) b[i].ans+=s[j].lan;\n    }\n    j=1;\n    for (int i=1;i<=m;i++) //\u5904\u7406\u5b57\u5e55\n    {\n        while (s[j].id<c[i].lan) j++;\n        if (s[j].id==c[i].lan) c[i].ans+=s[j].lan;\n    }\n    sort(b+1,b+m+1,cmp2);\n    sort(c+1,c+m+1,cmp2); //\u6309\u5e8f\u53f7\u8fd8\u539f\u539f\u6765\u7684\u987a\u5e8f\n    int ans=1;\n    for (int i=2;i<=m;i++)\n    {\n        if (b[i].ans<b[ans].ans) continue;\n        if (b[i].ans>b[ans].ans) ans=i; //\u975e\u5e38\u9ad8\u5174\u7684\u4eba\u8f83\u591a\n        else if (c[i].ans>c[ans].ans) ans=i; //\u975e\u5e38\u9ad8\u5174\u7684\u4eba\u76f8\u540c\uff0c\u8f83\u9ad8\u5174\u7684\u4eba\u8f83\u591a\n    }\n    return !printf(\"%d\",ans);\n}\n```",
        "postTime": 1560776941,
        "uid": 29696,
        "name": "Llf0703",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF670C \u3010Cinema\u3011"
    },
    {
        "content": "# \u601d\u8def\n\u56e0\u4e3a\u8bed\u8a00\u7684\u7f16\u53f7\u503c\u57df\u5f88\u5927\uff0c\u76f4\u63a5\u7edf\u8ba1\u4e0d\u662f\u7206\u65f6\u95f4\u5c31\u662f\u7206\u7a7a\u95f4\u3002\u4f46\u6ce8\u610f\u5230\u6700\u591a\u53ea\u6709 $4\\times10^5$ \u79cd\u8bed\u8a00\uff0c\u6240\u4ee5\u8003\u8651\u79bb\u6563\u5316\uff0c\u5c06\u7f16\u53f7\u6620\u5c04\u5230 $1$ \u81f3 $4\\times10^5$ \u4e0a\u3002\n\n\u79bb\u6563\u5316\u540e\uff0c\u5bf9\u4e8e\u6bcf\u90e8\u7535\u5f71\uff1a\n1. \u7edf\u8ba1\u975e\u5e38\u6109\u60a6\u7684\u4eba\u6570\uff0c\u8bb0\u4e3a $x$\uff1b\n2. \u7edf\u8ba1\u6bd4\u8f83\u6ee1\u610f\u7684\u4eba\u6570\uff0c\u8bb0\u4e3a $y$\uff1b\n3. \u7528 $x,y$ \u66f4\u65b0\u7b54\u6848\u3002\n\n# \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int MAXN = 400005;\n\nint a[MAXN], b[MAXN], c[MAXN];\nint all[2 * MAXN];\nint e[2 * MAXN];\nint cnt[2 * MAXN];\nint n, m;\nint len = 0;\nint id = 1, ans0, ans1;\n\nvoid discrete(int t) { //\u79bb\u6563\u5316\n    sort(all + 1, all + 1 + t);\n    for(int i = 1; i <= t; i++) {\n        if(i == 1 || all[i] != all[i - 1]) e[++len] = all[i];\n    }\n}\n\nint query(int x) { //\u67e5\u8be2 x \u6620\u5c04\u4e3a\u54ea\u4e2a\u6574\u6570\n    //\u76f8\u5f53\u4e8e\u4e8c\u5206\u67e5\u627e x\n    return lower_bound(e + 1, e + 1 + len, x) - e;\n}\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(0); cout.tie(0);\n\n    int t = 0;\n\n    cin >> n;\n    for(int i = 1; i <= n; i++) {\n        cin >> a[i];\n        all[++t] = a[i];\n    }\n    cin >> m;\n    for(int i = 1; i <= m; i++) {\n        cin >> b[i];\n        all[++t] = b[i];\n    }\n    for(int i = 1; i <= m; i++) {\n        cin >> c[i];\n        all[++t] = c[i];\n    }\n\n    discrete(t);\n    for(int i = 1; i <= n; i++)\n    \tcnt[query(a[i])]++; //cnt \u7edf\u8ba1\u61c2\u5f97\u6bcf\u79cd\u8bed\u8a00\u7684\u4eba\u6570\n\n    for(int i = 1; i <= m; i++) {  \n        int x = cnt[query(b[i])], y = cnt[query(c[i])];\n        if(x > ans0 || (x == ans0 && y > ans1)) {\n            id = i; ans0 = x; ans1 = y;\n        }\n    }\n\n    cout << id << endl;\n    return 0;\n}\n```\n[AC\u8bb0\u5f55](https://www.luogu.com.cn/record/52371091)\n\n---\n$\\large\\text{THE\\ \\ \\ END}$",
        "postTime": 1625370543,
        "uid": 227623,
        "name": "John_yangliwu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF670C \u3010Cinema\u3011"
    },
    {
        "content": "$\\quad$\u601d\u8def\u6bd4\u8f83\u76f4\u63a5\uff0c\u5148\u628a\u6bcf\u79cd\u8bed\u8a00\u4f7f\u7528\u4eba\u6570\u7edf\u8ba1\u51fa\u6765\uff0c\u518d\u4ee5\u201c\u975e\u5e38\u6109\u60a6\u201d\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u201c\u6bd4\u8f83\u6109\u60a6\u201d\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\uff0c\u627e\u51fa\u7b26\u5408\u6761\u4ef6\u7684\u7535\u5f71\u3002\n\n\u6ce8\u610f\u4ee5\u4e0b\u51e0\u70b9\uff1a\n- \u8bed\u8a00\u79cd\u7c7b\u8fbe $10^9$ \u79cd\uff0c\u9700\u8981\u79bb\u6563\u5316\u5904\u7406\u3002\n- \u7535\u5f71\u7684\u914d\u97f3\u6216\u5b57\u5e55\u53ef\u80fd\u6240\u6709\u79d1\u5b66\u5bb6\u90fd\u4e0d\u61c2\uff0c\u6240\u4ee5\u8981\u521d\u59cb\u5316\u7b54\u6848\u4e3a\u7b2c\u4e00\u90e8\u7535\u5f71\u3002\n- $\\operatorname{lowerbound}$ \u51fd\u6570\u4f1a\u8fd4\u56de\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e\u8981\u627e\u7684\u6570\u7684\u4f4d\u7f6e\uff0c\u5c31\u662f\u8bf4\uff0c\u5373\u4f7f\u6570\u7ec4\u4e2d\u6ca1\u6709\u8be5\u6570\u4e5f\u80fd\u8fd4\u56de\u4e00\u4e2a\u503c\uff0c\u56e0\u6b64\u9700\u8981\u7279\u5224\u3002\n\n\u4ee3\u7801\u6ce8\u91ca\u6bd4\u8f83\u8be6\u7ec6\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\uff08\u9644\u53e6\u4e00\u6837\u4f8b\uff09\u3002\n\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<algorithm>\nusing namespace std;\ninline int read() {\n\tint res;char c;\n\twhile(!isdigit(c=getchar()));res=c^48;\n\twhile(isdigit(c=getchar())) res=(res<<3)+(res<<1)+(c^48);\n\treturn res;\n}\nint a[200005],b[200005],c[200005],cnt[200005],tot=1; // a,b,c\u610f\u4e49\u5982\u9898\uff0ctot\u8868\u793a\u8bed\u8a00\u603b\u6570\uff0ccnt\u5b58\u6bcf\u79cd\u8bed\u8a00\u4f7f\u7528\u4eba\u6570 \nint main() {\n\tint n=read(),m,x,y,ans=1,rec=1,maxn=0,maxm=0;//maxn\u8bb0\u5f55\u7b2c\u4e00\u5173\u952e\u5b57\uff0cmaxm\u8bb0\u5f55\u7b2c\u4e8c\u5173\u952e\u5b57 \n\tfor(int i=1;i<=n;++i) a[i]=read();\n\tsort(a+1,a+n+1);\n\tfor(int i=1;i<=n;++i) { //\u7edf\u8ba1\u6bcf\u79cd\u8bed\u8a00\u4f7f\u7528\u4eba\u6570 \n\t\tif(a[i]!=a[rec]) {\n\t\t\trec=i;\n\t\t\ttot++;\n\t\t}\n\t\tcnt[tot]++;\n\t}\n\tunique(a+1,a+n+1); //\u53bb\u91cd \n\tm=read();\n\tfor(int i=1;i<=m;++i) b[i]=read();\n\tfor(int i=1;i<=m;++i) c[i]=read();\n\tfor(int i=1;i<=m;++i) {\n\t\tx=lower_bound(a+1,a+tot+1,b[i])-a; \n\t\ty=lower_bound(a+1,a+tot+1,c[i])-a;\n\t\tif(a[x]!=b[i]) x=0; //\u9700\u8981\u7279\u5224\u8bed\u8a00\u6ca1\u4eba\u4f7f\u7528\u7684\u60c5\u51b5 \n\t\tif(a[y]!=c[i]) y=0;\n\t\tif(cnt[x]>maxn) {\n\t\t\tmaxn=cnt[x];\n\t\t\tmaxm=cnt[y];\n\t\t\tans=i;\n\t\t}\n\t\telse if(cnt[x]==maxn&&cnt[y]>maxm) {\n\t\t\tmaxm=cnt[y];\n\t\t\tans=i;\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n  \n/*\n\u6837\u4f8b\uff1a \n20\n2 2 1 6 6 5 10 2 5 5 4 8 6 8 8 10 2 1 5 6\n20\n1 9 1 1 5 1 9 10 1 10 9 9 8 7 5 1 1 10 2 7\n3 5 9 10 10 8 2 9 6 7 8 8 6 5 3 4 6 3 7 4\n\u7b54\u6848\uff1a\n5\n*/\n```\n",
        "postTime": 1619231215,
        "uid": 186477,
        "name": "SegTre",
        "ccfLevel": 4,
        "title": "\u9898\u89e3CF670C"
    },
    {
        "content": "### \u5199\u9898\u89e3\u5199\u9898\u89e3\n\n------------\n\n\u5176\u5b9e\u8fd9\u9898\u9898\u610f\u597d\u7406\u89e3\uff0c\u4f46\u662f\u4e00\u770b\u4e0d\u77e5\u9053\u548b\u505a\u5bf9\u4e0d\u5bf9\uff1f\n\n### $Step 1:$\u666e\u901a\u60f3\u6cd5$:$\n\u53ef\u4ee5\u8fd9\u6837\uff1a\u5f04\u4e00\u4e2a\u6570\u7ec4$t[i]$\u8868\u793a\u6709\u51e0\u4e2a\u4eba\u4f1a\u7b2c$i$\u79cd\u8bed\u8a00\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u573a\u7535\u5f71$j$\u7684\u8bed\u8a00$a$,$b$\uff0c\u6c42\u51fa$t[a]$\u548c$t[b]$,\u7136\u540e\u5f00\u4e00\u4e2a$ans$\u5c31\u4e07\u4e8b\u5927\u5409\u4e86\u3002\n\n\u4ee3\u7801\u957f\u8fd9\u6837\uff08\u522b\u6025\u7740\u6284\uff0c\u90fd\u6709\u201c\u666e\u901a\u60f3\u6cd5\u201d\u56db\u4e2a\u5b57\u4e86\uff0c\u7edd\u5bf9\u6ca1\u8fc7\uff09\uff1a\n\n```\n#include<algorithm>\n#include<bitset>\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<map>\n#include<iostream>\n#include<queue>\n#include<set>\n#include<stack>\n#include<string>\n#include<vector>\nusing namespace std;\n#define ll long long\n#define f(i,a,b) for(int i=a;i<=b;i++)\ninline ll rr() {\n\tll x=0,f=1;\n\tchar c=getchar();\n\tif(c=='-')f=-1,c=getchar();\n\twhile(isdigit(c))x=x*10+c-'0',c=getchar();\n\treturn x*f;\n}\n#define d rr()\nll pe[1000010];\nll n,m;\nstruct mo{\n\tll a,b;\n}mo[1000010];\nll t[1000010];\nll xx,yy,mx=1;\nint main(){\n\tn=d;\n\tf(i,1,n)pe[i]=d,t[pe[i]]++;\n\tm=d;\n\tf(i,1,m)mo[i].a=d;\n\tf(i,1,m)mo[i].b=d;\n\tf(i,1,m){\n\t\tll x=mo[i].a;\n\t\tll y=mo[i].b;\n\t\tll xk=t[x];\n\t\tll yk=t[y];\n\t\tif(xk>xx||(xk==xx&&yk>yy))xx=xk,yy=yk,mx=i;\n\t}\n\tcout<<mx;\n\treturn 0;\n}\n\n```\n\n\u90a3\u4e48\u662f\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n\u539f\u56e0\u5f88\u7b80\u5355:\u9898\u76ee\u8bf4\u4e86\uff0c\u8bed\u8a00\u7684\u7f16\u53f7\u5728$int$\u8303\u56f4\u5185\u3002\n\n\u90a3\u600e\u4e48\u53d7\u5f97\u4e86\uff1f\uff1f\n\n\u4f60\u6709\u672c\u4e8b\u5f00\u4e00\u4e2a$t[1000000001]$\u554a\uff0c\u4fdd\u8bc1\u4e0d\u4f1a$MLE$\u6b7b\u4f60\n\n### $Step 2:$\u79bb\u6563\u5316$:$\n\n```\n\u79bb\u6563\u5316\uff0c\u628a\u65e0\u9650\u7a7a\u95f4\u4e2d\u6709\u9650\u7684\u4e2a\u4f53\u6620\u5c04\u5230\u6709\u9650\u7684\u7a7a\u95f4\u4e2d\u53bb\uff0c\u4ee5\u6b64\u63d0\u9ad8\u7b97\u6cd5\u7684\u65f6\u7a7a\u6548\u7387\u3002\n\u901a\u4fd7\u7684\u8bf4\uff0c\u79bb\u6563\u5316\u662f\u5728\u4e0d\u6539\u53d8\u6570\u636e\u76f8\u5bf9\u5927\u5c0f\u7684\u6761\u4ef6\u4e0b\uff0c\u5bf9\u6570\u636e\u8fdb\u884c\u76f8\u5e94\u7684\u7f29\u5c0f\u3002\n\t----\u767e\u5ea6\u767e\u79d1\n```\n\u521a\u597d\u9002\u5408\u672c\u9898\u5462~~\n\n\u76f4\u63a5\u4e0a\u4ee3\u7801\u5427\uff0c\u79bb\u6563\u5316\u8fd9\u4e2a\u4e1c\u897f\u561b\uff0c\u5c31\u662f$unique$\u554a\uff0c\u628a\u4e00\u5927\u5806\u5f88\u5927\u7684\u6570\u5f04\u6210\u5bf9\u5e94\u7684\u5c0f\u4e00\u70b9\u7684\u6570\uff0c\u7c7b\u4f3c$map$\u7684\u6620\u5c04\u3002\n\n```\n#include<algorithm>\n#include<bitset>\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<map>\n#include<iostream>\n#include<queue>\n#include<set>\n#include<stack>\n#include<string>\n#include<vector>\nusing namespace std;\n#define ll long long\n#define f(i,a,b) for(int i=a;i<=b;i++)\ninline ll rr() {\n\tll x=0,f=1;\n\tchar c=getchar();\n\tif(c=='-')f=-1,c=getchar();\n\twhile(isdigit(c))x=x*10+c-'0',c=getchar();\n\treturn x*f;\n}\n#define d rr()\nll lan[1000010];\nll pe[1000010];\nll bb[1000010];\nll n,m;\nll tot,num;\nvoid disc(){\n\tsort(lan+1,lan+tot+1);\n\tf(i,1,tot)\n\t\tif(i==1||lan[i]!=lan[i-1])bb[++num]=lan[i];\n}\nll k(ll x){\n\treturn lower_bound(bb+1,bb+num+1,x)-bb;\n}\nstruct mo{\n\tll a,b;\n}mo[1000010];\nll t[1000010];\nll xx=-1,yy=-1,mx=1;\nint main(){\n\tn=d;\n\tf(i,1,n){\n\t\tll x=d;\n\t\tlan[++tot]=x;\n\t\tpe[i]=x;\n\t}\n\tm=d;\n\tf(i,1,m){\n\t\tll x=d;\n\t\tlan[++tot]=x;\n\t\tmo[i].a=x;\n\t}\n\tf(i,1,m){\n\t\tll x=d;\n\t\tlan[++tot]=x;\n\t\tmo[i].b=x;\n\t}\n\tdisc();\n\tf(i,1,n)\n\t\tt[k(pe[i])]++;\n\tf(i,1,m){\n\t\tll x=mo[i].a;\n\t\tll y=mo[i].b;\n\t\tll xk=t[k(x)];\n\t\tll yk=t[k(y)];\n\t\tif(xk>xx||(xk==xx&&yk>yy))xx=xk,yy=yk,mx=i;\n\t}\n\tcout<<mx;\n\treturn 0;\n}\n\n```\n\u5b8c\u7ed3\u6492\u82b1\uff01\uff01\uff01",
        "postTime": 1583487938,
        "uid": 90706,
        "name": "_jimmywang_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF670C \u3010Cinema\u3011"
    },
    {
        "content": "## \u9898\u9762\n\n### [\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/CF670C)\n\n## \u601d\u8def\uff1a\n\n### **\u79bb\u6563\u5316**\u3001**hash**\n\n\u5bf9\u4e8e\u8fd9\u6837\u4e00\u4e2a\u660e\u663e\u7684\u7edf\u8ba1\u6392\u5e8f\u7684\u9898\u76ee\uff0c\u5f53\u7136\u8f7b\u800c\u6613\u4e3e\u5566~\n\n\u4f46\u662f\uff01\u770b\uff01\u8bed\u8a00\u7684\u7f16\u53f7 **a**\u6570\u7ec4\u548c **b**\u6570\u7ec4\u7684\u503c\u6700\u5927\u5728$10^9$\u7684\u7ea7\u522b\uff0c\u6240\u4ee5\u5f00\u4e2a\u6570\u7ec4\u6765\u5b58\u2014\u2014\u2014That's impossible!\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u4e0a**\u79bb\u6563\u5316**\uff08\u4e5f\u5c31\u662fhash\uff09\n\n\u79bb\u6563\u5316\uff0c\u6211\u4eec\u6709\u4e24\u79cd\u5199\u6cd5\n\n#### \u7b2c\u4e00\u79cd\u662f\u81ea\u5df1\u624b\u7801\u4ee3\u7801\n\n\u5148\u6392\u5e8f\uff0c\u7136\u540e\u53bb\u91cd\uff0c\u63a5\u7740\u7528\u4e8c\u5206\u4e00\u4e00\u5bf9\u5e94\uff0c\u8fbe\u5230\u79bb\u6563\u5316\u7684\u76ee\u7684\n\n\u677f\u5b50\uff1a\n```cpp\nsort(b+1,b+n+1,cmp);\nn=unique(b+1,b+n+1)-b-1\nfor(i=1;i<=n;i++)\n\ta[i]=lower_bound(b+1,b+n+1,a[i])-b;\n```\n#### \u7b2c\u4e8c\u79cd\u662f\u4f7f\u7528STL\u5e93\u7684map\n\n\u5934\u6587\u4ef6\uff1a`#include <map>`\n\n\u5b9a\u4e49\u65b9\u5f0f\uff1a`map<type,type> p;`\u8868\u793a\u5c06\u524d\u4e00\u79cdtype\u6620\u5c04\u5230\u540e\u4e00\u79cdtype\n\n\u5176\u4e2d\u7684\u7c7b\u578b\u53ef\u4ee5\u5f88\u591a\uff0c\u6bd4\u5982double\uff0cstring\uff0cint\uff0cbool\u7b49\u57fa\u672c\u7c7b\u578b\uff0c\u4e5f\u5305\u62ecpair\u8fd9\u79cd\n\n\u5982`map<pair<int,int>,bool>p;`\u5141\u8bb8\u7684\n\n\u64cd\u4f5c\uff1a\u4e00\u822c\u7528\u6570\u7ec4\u7684\u5f62\u5f0f\uff0c\u76f4\u63a5`p[x]`\u8bbf\u95ee\u3001\u5199\u5165\n\n**PS**\uff1a\u4f46\u662fmap\u7684\u901f\u5ea6\u6bd4\u8f83\u6162\uff0c\u60f3\u8fdb\u4e00\u6b65\u63d0\u9ad8\u53ef\u4ee5\u4f7f\u7528unordered_map\n\n\u6b64\u5904\u4e0d\u624d\u4e0d\u505a\u8bb2\u89e3\uff0c\u5177\u4f53\u8be6\u89c1[\u6d1b\u8c37\u65e5\u62a5](https://www.luogu.org/blog/yihan/unordered)\n\nCode:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\nint b;\nint a[200010];\nmap<int,int> p;\nint cur,res,ans;\nint read()\n{\n\tint s=0;\n\tchar c=getchar();\n\twhile(!isdigit(c))\n\t\tc=getchar();\n\twhile(isdigit(c))\n\t{\n\t\ts=(s<<1)+(s<<3)+c-'0';\n\t\tc=getchar();\n\t}\n\treturn s;\n}\nint main()\n{\n\tint i;\n\tint x;\n\tn=read();\n\tfor(i=1;i<=n;i++)\n\t\tp[read()]++;//\u79d1\uff08\u73c2\uff09\u5b66\u5bb6\u4eec\u80fd\u542c\u61c2\u7684\u8bed\u8a00\n\tm=read();\n\tfor(i=1;i<=m;i++)//\u7535\u5f71\u914d\u97f3\n\t\ta[i]=read();\n\tb=p[read()];\n\tans=1;//\u4e00\u5f00\u59cb\u9ed8\u8ba4\u7b2c\u4e00\u79cd\u662f\u7b54\u6848\n\tres=p[a[1]];\n\tcur=b;\n\tfor(i=2;i<=m;i++)\n\t{\n\t\tb=p[read()];\n\t\tx=p[a[i]];\n\t\tif(x>=res)//\u6bd4\u8f83\u542c\u7684\u61c2\u914d\u97f3\uff0c\u770b\u7684\u61c2\u5b57\u5e55\u7684\u4eba\u6570\n\t\t{\n\t\t\tif(x>res)\n\t\t\t{\n\t\t\t\tres=x;\n\t\t\t\tcur=b;\n\t\t\t\tans=i;\n\t\t\t}\n\t\t\telse\n\t\t\t\tif(cur<b)\n\t\t\t\t{\n\t\t\t\t\tans=i;\n\t\t\t\t\tcur=b;\n\t\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\",ans);//\u8dd1\u8fc7138\u4e2a\u70b9\uff01\u4eba\u6194\u60b4\uff01\n\treturn 0;\n}\n```\n\n### \u63a8\u8350\u9898\u76ee\uff1a\n\n[\u300cLuogu\u300d[NOI2015]\u7a0b\u5e8f\u81ea\u52a8\u5206\u6790](https://www.luogu.org/problemnew/show/P1955)\n\n",
        "postTime": 1545024589,
        "uid": 83564,
        "name": "hovny",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF670C \u3010Cinema\u3011"
    },
    {
        "content": "\u5148\u7528map\u7edf\u8ba1\u6bcf\u79cd\u8bed\u8a00\u6709\u591a\u5c11\u79d1\u5b66\u5bb6\u4f1a\uff0c\u7136\u540e\u904d\u5386\u6bcf\u573a\u7535\u5f71\uff0c\u627e\u5230\u6109\u60a6\u4eba\u6570\u6700\u591a\u524d\u63d0\u4e0b\uff0c\u6ee1\u8db3\u4eba\u6570\u6700\u591a\u7684\u7535\u5f71\u3002\n```cpp\n#include <cstdio>\n#include <map>\nusing namespace std;\n\nint N,M,mova[200005],movs[200005];\nmap<int,int> lang;\n\nint read()\n{\n\tint r=0;\n\tchar ch=getchar();\n\twhile(ch<'0' || ch>'9')ch=getchar();\n\twhile(ch>='0' && ch<='9')r=r*10+ch-'0',ch=getchar();\n\treturn r;\n}\n\nint main()\n{\n\tN=read();\n\tfor(int i=1;i<=N;i++)lang[read()]+=1;\n\tM=read();\n\tfor(int i=1;i<=M;i++)mova[i]=read();\n\tfor(int i=1;i<=M;i++)movs[i]=read();\n\t\n\t//bestI-\u76ee\u524d\u6700\u4f73\u7535\u5f71\uff08\u8981\u521d\u59cb\u5316\u4e3a1\uff09 \n\t//bestP-\u76ee\u524d\u6700\u591a\u51e0\u4eba\u6109\u60a6\n\t//bestS-\u76ee\u524d\u6700\u591a\u51e0\u4eba\u6ee1\u610f \n\tint bestI=1,bestP=0,bestS=0;\n\tfor(int i=1;i<=M;i++)\n\t{\n\t\tint a=lang[mova[i]],s=lang[movs[i]];\n\t\tif(a==bestP && s>bestS)bestI=i,bestS=s;\n\t\telse if(a>bestP)bestI=i,bestP=a,bestS=s;\n\t}\n\tprintf(\"%d\",bestI);\n}\n```",
        "postTime": 1538752247,
        "uid": 82001,
        "name": "zhlgzhh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF670C \u3010Cinema\u3011"
    }
]