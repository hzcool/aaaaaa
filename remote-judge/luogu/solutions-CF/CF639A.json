[
    {
        "content": "#### \u9898\u76ee\u4f20\u9001\u95e8\uff1a [CF639A](https://www.luogu.com.cn/problem/CF639A)\n\n### \u9898\u610f\uff1a  \n\u4e00\u4e2a\u961f\u5217\uff0c\u6bcf\u6b21\u53ef\u4ee5\u653e\u4e00\u4e2a\u6570\u8fdb\u53bb\uff0c\u6216\u8005\u95ee\u67d0\u6570\u662f\u4e0d\u662f\u8fd9\u4e2a\u961f\u5217\u524d $k$ \u5927\u3002\n\n### \u601d\u8def\uff1a  \n\u8fd9\u9053\u9898\u7528 STL \u5e93\u4e2d\u7684 set \u6a21\u62df\u8fc7\u7a0b\u5373\u53ef\u3002  \n$Q:$ \u4e3a\u4ec0\u4e48\u8981\u7528 ```set```\uff1f  \n$A:$  \u56e0\u4e3a\u9898\u76ee\u4f1a\u8be2\u95ee\u67d0\u6570\u662f\u4e0d\u662f\u8fd9\u4e2a\u961f\u5217\u524d $k$ \u5927\u3002\u5e76\u4e14 ```set``` \u6709 ```find()``` \u51fd\u6570\uff0c\u53ef\u4ee5\u6309\u5143\u7d20\u67e5\u627e\uff0c\u8fd4\u56de\u5143\u7d20\u5730\u5740\uff0c\u800c\u4e14\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\log n)$\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528 ```find()``` \u6765\u67e5\u627e\u5b83\u3002\n\n### \u4ee3\u7801\u5982\u4e0b\uff1a  \n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nset<int> s;\nset<int>::iterator it;\nint t,n,k,x,y,friendship[150005];\nsigned main()\n{\n    cin >> n >> k >> t;\n    for(int i=1; i<=n; i++)\n        cin >> friendship[i];\n    while(t--)\n    {\n        cin >> x >> y;\n        if (x==1)\n            s.insert(friendship[y]);\n        else\n        {\n            if (s.find(friendship[y])!=s.end())\n                cout << \"YES\\n\";\n            else\n                cout << \"NO\\n\";\n        }\n        if (s.size()>k)\n            s.erase(s.begin());\n    }\n    return 0;\n}\n```",
        "postTime": 1639887662,
        "uid": 367194,
        "name": "kdy20100729",
        "ccfLevel": 0,
        "title": "CF639A \u9898\u89e3"
    },
    {
        "content": "### \u89e3\u9898\u601d\u8def\n\u6bcf\u6b21\u8f93\u5165\u90fd\u8981 $\\operatorname{sort}$ \u592a\u9ebb\u70e6\uff0c\u4f46\u4f7f\u7528 `set<long long> st` \u65e2\u53ef\u4ee5\u81ea\u52a8\u6392\u5e8f\u8fd8\u53ef\u4ee5\u7ed9\u51fa\u6570\u7ec4\u957f\u5ea6\uff0c\u54c8\u54c8\u3002\n\n\u5148\u5c06 Limak \u7684 $n$ \u4e2a\u670b\u53cb\u7684\u4eb2\u5bc6\u503c\u63d2\u5165\u6570\u7ec4 $a$\u3002\n\n\u6bcf\u6b21\u5faa\u73af\u65f6\uff1a\n> + \u5982\u679c $type$ \u662f $1$\uff1a\n>> \u90a3\u5c31\u76f4\u63a5\u7528 $\\operatorname{insert}$ \u63d2\u5165 $a_{id}$\u3002\n\n> + \u5426\u5219\uff1a\n>> \u5148\u770b\u770b $st$ \u6570\u7ec4\u7684\u957f\u5ea6\u662f\u5426\u8d85\u8fc7\u4e86 $k$\uff0c\u5982\u679c\u8d85\u8fc7\u4e86\u5c31\u5220\u6389\u961f\u5934\u5373\u53ef\uff0c\u56e0\u4e3a `set` \u6570\u7ec4\u662f\u6709\u5e8f\u7684\u3002\u7136\u540e\u518d\u67e5\u627e Limak \u7684\u7b2c $id$ \u4e2a\u670b\u53cb\uff08$a_{id}$\uff09\u662f\u5426\u5728 $st$ \u961f\u5217\u91cc\uff0c\u8f93\u51fa `YES` \u6216 `NO` \u5373\u53ef\u3002\n\n### \u4ee3\u7801\n```cpp\n\n#include <bits/stdc++.h>\nusing namespace std;\nlong long n, k, q, a[150005];\nset<long long> st;\nint main() {\n  cin >> n >> k >> q;\n  for (long long i = 1; i <= n; i++) {\n    cin >> a[i];\n  }\n  for (long long i = 1; i <= q; i++) {\n    long long op, id;\n    cin >> op >> id;\n    if (op == 1) {\n      st.insert(a[id]);\n    } else {\n      if (st.size() > k) {  //\u6570\u7ec4\u7684\u957f\u5ea6\u662f\u5426\u8d85\u8fc7\u4e86 k\u3002\n        st.erase(st.begin());\n      }\n\n      auto it = st.lower_bound(a[id]);  //\u67e5\u627e\u3002\n      if (*it == a[id]) {\n        cout << \"YES\\n\";\n      } else {\n        cout << \"NO\\n\";\n      }\n    }\n  }\n  return 0;\n}\n```",
        "postTime": 1639891869,
        "uid": 482347,
        "name": "ZZQF5677",
        "ccfLevel": 0,
        "title": "CF639A TJ"
    },
    {
        "content": "\u9898\u89e3\u91cc\u5927\u90e8\u5206\u90fd\u662f\u4f7f\u7528 set \u7684\u9898\u89e3\uff0c\u6211\u63d0\u4f9b\u4e00\u7bc7\u4f7f\u7528\u4f18\u5148\u961f\u5217\u7684\u3002\n\n### \u601d\u8def\n\n\u5f00\u4e00\u4e2a pair \u7684\u4f18\u5148\u961f\u5217\uff0c\u7b2c\u4e00\u7ef4\u5b58\u53cb\u8c0a\u503c\uff0c\u7b2c\u4e8c\u7ef4\u5b58 id\uff0c\u4e0d\u505c\u5730\u5c06\u5f53\u524d\u4eba\u5165\u961f\uff0c\u5f53\u5f53\u524d\u663e\u793a\u4eba\u6570\u8d85\u8fc7 $k$ \u65f6\uff0c\u628a\u5f53\u524d\u4e0a\u7ebf\u7684\u4eba\u548c\u4e4b\u524d\u4e0a\u7ebf\u53cb\u8c0a\u503c\u6700\u5c0f\u7684\u4eba\u8fdb\u884c\u4e00\u4e2a\u6bd4\u8f83\u3002\n\n### \u4ee3\u7801\u5b9e\u73b0\n\n```\n#include <iostream>\n#include <queue>\n#include <algorithm>\nusing namespace std;\nconst int N=1e5+5e4+5;\nint n,k,q;\nint id[N];\nbool f[N];\npriority_queue<pair<int,int> >Q;//\u7b2c\u4e00\u7ef4\u5b58\u53cb\u8c0a\uff0c\u7b2c\u4e8c\u7ef4\u5b58id\nsigned main(){\n    scanf(\"%d%d%d\",&n,&k,&q);\n    for(int i=1;i<=n;i++){\n        int x;\n        scanf(\"%d\",&x);\n        id[i]=x;//id\u4e3ai\u7684\u4eba\u7684\u53cb\u8c0a\u503c\u4e3ax\n    }\n    while(q--){\n        int K,L;\n        scanf(\"%d%d\",&K,&L);//L\u4e3aid\n        if(K==1){\t\n            if(Q.size()>=k){//\u5982\u679c\u5f53\u524d\u663e\u793a\u7684\u4eba\u6570\u8d85\u8fc7\u4e86k\n                if(id[L]>(-Q.top().first)){\n                    f[Q.top().second]=0,Q.pop();//\u5982\u679c\u5f53\u524d\u4e0a\u7ebf\u7684\u4eba\u6bd4\u4e4b\u524d\u4e0a\u7ebf\u7684\u4eba\u7684\u53cb\u8c0a\u7684\u6700\u5c0f\u503c\u8981\u5927\uff0c\u5c31\u628a\u4e4b\u524d\u7684\u6700\u5c0f\u503c\u5f39\u51fa\uff0c\u4e0d\u663e\u793a\n                    Q.push(make_pair(-id[L],L));//\u5c06\u53cb\u8c0a\u548c\u7f16\u53f7\u5b58\u8fdb\u5c0f\u6839\u5806\n                    f[L]=1;//\u6807\u8bb0\u662f\u5426\u663e\u793a\n                }\n            }\n            else{\n                Q.push(make_pair(-id[L],L));\n                f[L]=1;\n            }\n        }\n        else{\n            if(f[L]) printf(\"YES\\n\");\n            else printf(\"NO\\n\");\n        }\n    }\n    return 0;\n}\n```\n",
        "postTime": 1666410940,
        "uid": 190931,
        "name": "cannotdp",
        "ccfLevel": 4,
        "title": "Bear and Displayed Friends"
    },
    {
        "content": "# \u3010\u6c34\u9898\u89e3\u8bb0\u5f55\u3011CF639A Bear and Displayed Friends\n\n## \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217\u3002\u53e6\u6709\u4e00\u4e2a\u7a7a\u7684\u961f\u5217\uff0c\u6bcf\u6b21\u52a0\u5165\u5176\u4e2d\u4e00\u4e2a\u6570\u6216\u8005\u67e5\u8be2\u8fd9\u4e2a\u6570\u662f\u4e0d\u662f\u5176\u4e2d\u7684\u524d $k$ \u5927\u3002\n\n## \u9898\u89e3\n\n\u67e5\u8be2\u524d $k$ \u5927\uff0c\u9996\u5148\u8003\u8651\u4f18\u5148\u961f\u5217\uff0c\u518d\u5176\u6b21\u8003\u8651\u5e73\u8861\u6811\u4e4b\u7c7b\u7684\u4e1c\u897f\u3002\n\n* \u5982\u679c\u961f\u5217\u4e2d\u6ca1\u6709\u5230 $k$ \u4e2a\u6570\uff0c\u76f4\u63a5\u6254\u8fdb\u53bb\u3002\n* \u5982\u679c\u961f\u5217\u4e2d\u5df2\u7ecf\u6709 $k$ \u4e2a\u6570\uff0c\u8ddf\u7b2c $k$ \u4e2a\u6570\u8fdb\u884c\u6bd4\u8f83\u3002\u6240\u4ee5\u6211\u4eec\u8981\u7ef4\u62a4\u4e00\u4e2a\u5c0f\u6839\u5806\u3002\n\n## Code\n\n```cpp\n#include<bits/stdc++.h>\n#define rg register\n#define ll long long \n#define maxn 200005\n#define put() putchar('\\n')\nusing namespace std;\ninline void read(int &x){\n    int f=1;x=0;char c=getchar();\n    while (c<'0'||c>'9') {if (c=='-') f=-1;c=getchar();}\n    while (c>='0'&&c<='9') {x=x*10+c-'0';c=getchar();}\n    x*=f;\n}\nint n,k,T;\nint a[maxn],tot,t[maxn];\nstruct node{\n\tint id,w;\n\tnode(int x=0,int y=0){\n\t\tid=x;w=y;\n\t}\n\tbool operator <(const node &x) const{\n\t    return w>x.w;\n\t}\n}; \npriority_queue<node>q;\nsigned main(){\n    rg int i,x,y;\n    read(n);read(k);read(T);\n    for (i=1;i<=n;i++) read(a[i]);\n\twhile (T--){\n\t\tread(x);read(y);\n\t\tif (x==1) {\n\t\t\tif (++tot<=k) q.push(node(y,a[y])),t[y]=1;\n\t\t\telse {\n\t\t\t\tif (a[y]>q.top().w) t[q.top().id]=0,q.pop(),t[y]=1,q.push(node(y,a[y])); \n\t\t\t}\n\t\t}\n\t\telse puts(t[y]?\"YES\":\"NO\");\n\t} \n    return 0;\n}\n```\n\n\n\n",
        "postTime": 1622355687,
        "uid": 51569,
        "name": "\u8fdd\u89c4\u7528\u6237\u540dFkZyA0!2",
        "ccfLevel": 0,
        "title": "\u3010\u6c34\u9898\u89e3\u8bb0\u5f55\u3011CF639A Bear and Displayed Friends"
    },
    {
        "content": "\u9898\u76ee\u662f\u6211\u4e00\u5e74\u524d\u7ffb\u8bd1\u7684\uff0c\u6211\u627f\u8ba4\u5f53\u65f6\u4e0d\u4f1amarkdown\uff0c\u6240\u4ee5\u518d\u6b21\u4e3a\u5927\u5bb6\u8bf4\u4e00\u4e0b\u9898\u76ee\u5927\u610f:\n\n\u6709\u4e00\u4e2a\u961f\u5217\uff0c\u6bcf\u6b21\u53ef\u4ee5\u653e\u4e00\u4e2a\u6570\u8fdb\u53bb\uff0c\u6216\u8005\u8be2\u95ee\u67d0\u6570\u662f\u4e0d\u662f\u8fd9\u4e2a\u5bf9\u5217\u524d$k$\u5927\u3002\n\n\n------------\n\n\u8fd9\u9053\u9898\u6bcf\u6b21\u4fdd\u7559\u524d$k$\u5927\uff0c\u80af\u5b9a\u4f1a\u60f3\u5230\u4f18\u5148\u961f\u5217\u6216\u8005\u6808\uff0c\u60f3\u8981\u8ba9\u4ed6\u4eec\u7684\u957f\u5ea6$\\le k$\uff0c\u90a3\u4e48\u653e\u6570\u5c31\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n- \u5982\u679c\u8fd8\u6ca1\u6709$k$\u4e2a\u6570\uff0c\u76f4\u63a5\u653e\u8fdb\u53bb\u5c31\u884c\u3002\n- \u5df2\u7ecf$k$\u4e2a\u4e86\uff0c\u5982\u679c\u653e\u7684\u6570\u5c0f\u4e8e\u961f\u5217\u6700\u5c0f\u7684\u6570\uff0c\u5c31\u4e0d\u653e\uff0c\u53cd\u4e4b\u5c31\u66ff\u6362\u3002\n\n\u8003\u8651\u5230\u653e\u7684\u6570\u4e00\u5b9a\u6ca1\u6709\u91cd\u590d\u7684\uff0c\u800c\u4e14set\u81ea\u5e26\u67e5\u627e\u529f\u80fd\uff0c\u6240\u4ee5\u6211\u76f4\u63a5\u9009\u62e9\u4e86set\u3002 ~~\uff08\u5927\u4f6c\u4eec\u522b\u542c\u672c\u849f\u84bb\u7684\uff09~~\n```cpp\n#include <iostream>\n#include <set>\nusing namespace std;\nset<int> s;                                //set\u9ed8\u8ba4\u4ece\u5c0f\u5230\u5927\nint a[150005];\nint main()\n{\n    int n,k,q;\n    cin >> n >> k >> q;\n    for(int i = 1;i <= n;i++)cin >> a[i];   //\u8f93\u5165\u4e0d\u7528\u6211\u591a\u8bf4\u5427\n    while(q--)\n    {\n        int t,id;\n        cin >> t >> id;\n        if(t==1)\n        {\n            if(s.size()<k)s.insert(a[id]);    //\u76f4\u63a5\u653e\u8fdb\u53bb\n            else                               //\u5224\u65ad\n                if(a[id]>*s.begin())    //*s.begin()\u6307s\u7684\u5f00\u5934\uff0c\u5c31\u662f\u7b2ck\u5927\u7684\u6570\n                {s.erase(*s.begin());s.insert(a[id]);}  //\u8fd9\u4e9b\u51fd\u6570\u5f85\u4f1a\u8bb2\n        }\n        else\n            cout << (s.count(a[id])?\"YES\\n\":\"NO\\n\");\n    }\n    return 0;\n}\n ```\n \u4e0b\u9762\uff0c\u4e3a\u5927\u5bb6\u6269\u5c55\u4e00\u4e9bset\u7684\u51fd\u6570\n ```\nbegin();            //\u8fd4\u56de\u6307\u5411\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u8fed\u4ee3\u5668\nend();              //\u8fd4\u56de\u6307\u5411\u8fed\u4ee3\u5668\u7684\u6700\u672b\u5c3e\u5904\uff08\u5373\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\uff09\nclear();            //\u6e05\u9664\u6240\u6709\u5143\u7d20\ncount(a);           //\u8fd4\u56dea\u8fd9\u4e2a\u503c\u5143\u7d20\u7684\u4e2a\u6570\uff08\u56e0\u4e3aset\u6709\u53bb\u91cd\uff0c\u6240\u4ee5\u53ea\u6709\u53ef\u80fd\u8fd4\u56de1\u62160\uff09\nempty();            //\u5982\u679c\u96c6\u5408\u4e3a\u7a7a\uff0c\u8fd4\u56detrue\nerase(a)            //\u5220\u9664\u96c6\u5408\u4e2da\u8fd9\u4e2a\u5143\u7d20\ninsert(a)           //\u5728\u96c6\u5408\u4e2d\u63d2\u5165\u5143\u7d20a\nlower_bound(a)      //\u8fd4\u56de\u6307\u5411\u5927\u4e8e\uff08\u6216\u7b49\u4e8e\uff09a\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u8fed\u4ee3\u5668\nupper_bound(a)      //\u8fd4\u56de\u5927\u4e8ea\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u8fed\u4ee3\u5668\n\n```\n\u6ce8\u610f\uff0c\u82e5it\u662f\u8fed\u4ee3\u5668\uff0c\u5219*it\u5c31\u662f\u4ed6\u6307\u5411\u7684\u5143\u7d20\u7684\u503c\n\n\u793a\u4f8b\n```cpp\n#include <iostream>\n#include <set>\nusing namespace std;\nset<int> s;\nint main()\n{\n    int n;\n    cin >> n;\n    for(int i = 1;i <= n;i++)\n    {\n        int x;\n        cin >> x;\n        s.insert(x);\n    }\n    set<int>::iterator it;//\u8fed\u4ee3\u5668\n    for(it = s.begin();it!=s.end();it++)\n        cout << *it << ' ';\n    cout << endl << s.count(2) << endl;\n    s.erase(1);\n    cout << s.size() << endl;\n    cout << *s.lower_bound(3) << endl;\n    cout << *s.upper_bound(3) << endl;\n    return 0;\n}\n\n```\n\u8f93\u5165\n```\n5\n1 5 3 7 2\n```\n\u8f93\u51fa\n```\n1 2 3 5 7 \n1\n4\n3\n5\n```",
        "postTime": 1601432733,
        "uid": 167465,
        "name": "max0810",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF639A \u3010Bear and Displayed Friends\u3011"
    },
    {
        "content": "\u4e00\u5f00\u59cb\u60f3\u5230\u7684\u601d\u8def\uff1a\u7528 map\uff0c\u5b9a\u4e49\u4e00\u4e2a `map` \u7c7b\u578b\u7684 $m$\uff0c\u7528\u6570\u7ec4 $a$ \u50a8\u5b58\u6bcf\u4e2a\u670b\u53cb\u7684\u53cb\u8c0a\u503c\uff0c\u6bcf\u6b21\u5f53 $type$ \u7b49\u4e8e $1$ \u65f6\uff0c\u5c06\u952e\u503c\u4e3a $a_{id}$ \u5bf9\u5e94\u7684\u6620\u5c04\u4e3a $id$\uff0c\u82e5 $m$ \u7684\u5927\u5c0f\u5927\u4e8e $k$\uff0c\u5219\u5f39\u51fa\u7b2c\u4e00\u4e2a\u5143\u7d20\uff08`map` \u6309\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff09\uff0c\u67e5\u627e\u65f6\u5224\u65ad\u952e\u503c\u4e3a $a_id$ \u7684\u662f\u5426\u5728 $m$ \u4e2d\u3002\u4f46\u6211\u4eec\u5f88\u5feb\u53d1\u73b0\u8fd9\u79cd\u65b9\u6cd5\u4e0d\u53ef\u884c\uff0c\u4e00\u65e6\u6709\u4e24\u4e2a\u670b\u53cb\u7684\u53cb\u8c0a\u503c\u76f8\u540c\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u5224\u65ad\u9519\u8bef\u7684 $id$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u91cd\u65b0\u60f3\u529e\u6cd5\uff0c\u4e8e\u662f\u60f3\u5230\u4e86\u53e6\u4e00\u79cd\u529e\u6cd5\uff0c\u540c\u6837\u662f\u7528 `map`\uff0c\u4f46\u952e\u503c\u53d8\u4e3a\u4e00\u4e2a `pair`\uff0c\u7b2c\u4e8c\u4e2a\u503c\u53d8\u4e3a `bool` \u7c7b\u578b\uff0c\u56e0\u4e3a `pair` \u53ef\u4ee5\u81ea\u52a8\u6309\u7b2c\u4e00\u4e2a\u5143\u7d20\u6392\u5e8f\uff0c\u6240\u4ee5\u6211\u4eec\u5c06 `pair` \u7684 `first` \u8bb0\u5f55 $a_{id}$\uff0c`second` \u8bb0\u5f55 $id$\uff0c\u800c `bool` \u7c7b\u578b\u5219\u8bb0\u5f55\u662f\u5426\u6709\u8fd9\u6837\u4e00\u4f4d\u670b\u53cb\u4e0a\u7ebf\u3002\u67e5\u627e\u65f6\uff0c\u5224\u65ad\u662f\u5426\u5b58\u5728\u6709\u4e00\u4e2a\u952e\u503c\u4e3a `first` \u662f $a_id$ \u800c `second` \u662f $id$ \u7684\u5728 $m$ \u5f53\u4e2d\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <map>\nusing namespace std;\n\nint n, k, q;\nint a[157300];\nmap<pair<int, int>, int> m;\n\nint main() {\n  cin >> n >> k >> q;\n  for (int i = 1; i <= n; i++) {\n    int x;\n    cin >> x;\n    a[i] = x;  // id\u4e3ai\u7684\u4eba\u7684\u53cb\u8c0a\u503c\n  }\n  while (q--) {\n    int type, id;\n    cin >> type >> id;\n    if (type == 1) {\n      m[make_pair(a[id], id)] = 1;\n      if (m.size() > k)\n        m.erase(m.begin());  // \u53bb\u9664\u53cb\u8c0a\u503c\u6700\u5c0f\u7684\u90a3\u4e2a\n    } else {\n      if (m.count(make_pair(a[id], id)))\n        cout << \"YES\" << endl;\n      else\n        cout << \"NO\" << endl;\n    }\n  }\n  return 0;\n}\n```",
        "postTime": 1678534595,
        "uid": 662037,
        "name": "_Jonny_404",
        "ccfLevel": 3,
        "title": "CF639A Bear and Displayed Friends"
    },
    {
        "content": "### \u9898\u76ee\n\n[Link](https://www.luogu.com.cn/problem/CF639A)\n\n### \u601d\u8def&\u9898\u610f\n\n\u4e00\u4e2a\u961f\u5217\uff0c\u6bcf\u6b21\u53ef\u4ee5\u653e\u4e00\u4e2a\u6570\u8fdb\u53bb\uff0c\u6216\u8005\u95ee\u67d0\u6570\u662f\u4e0d\u662f\u8fd9\u4e2a\u961f\u5217\u524d $k$ \u5927\u3002\n\n\u7528 STL \u4e2d\u7684 set \u6a21\u62df\u8fd9\u4e2a\u8fc7\u7a0b\u3002\n\n\u4e0d\u4f1a set \u7684\u540c\u5b66\u770b\u8fd9\u91cc\uff1a [Link](https://www.luogu.com.cn/blog/chenzhangpei/set-di-yong-fa)\u3002\n\n$Q$ \uff1a \u4e3a\u4ec0\u4e48\u8981\u7528 set \u5440\uff1f\n\n$A$ \uff1a \u56e0\u4e3a\u9898\u76ee\u4f1a\u8be2\u95ee\u67d0\u6570\u662f\u4e0d\u662f\u8fd9\u4e2a\u961f\u5217\u524d k \u5927\u3002\u5e76\u4e14 set \u6709 find() \u51fd\u6570\uff0c\u53ef\u4ee5\u6309\u5143\u7d20\u67e5\u627e\uff0c\u8fd4\u56de\u5143\u7d20\u5730\u5740\uff0c\u800c\u4e14\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $ O(log n) $\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528 find() \u6765\u67e5\u627e\u5b83\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn=150005;\nint n,k,q,x,y,t[maxn];\nset<int> s; //set\nset<int>::iterator it; //\u8fed\u4ee3\u5668\nint \nint main(){\n    cin>>n>>k>>q;\n    for(int i=1;i<=n;i++){\n        cin>>t[i];\n    }\n    while(q--){\n        cin>>x>>y;\n        if(x==1){ //\u63d2\u5165\u5143\u7d20\n\t        s.insert(t[y]);\n        }else{\n            if(s.find(t[y])!=s.end()){ //\u5982\u679ct[y]\u4e0d\u662ft[n]\n                cout<<\"YES\"<<endl;\n            }else{ \n                cout<<\"NO\"<<endl;\n            }\n        }\n        if(s.size()>k){ \n            s.erase(s.begin());\n        }\n    }\t\n    return 0;\n}\n```\n",
        "postTime": 1639667492,
        "uid": 455286,
        "name": "chenzhangpei",
        "ccfLevel": 0,
        "title": "CF639A"
    },
    {
        "content": "#### \u9898\u76ee\u5927\u610f\n\n\u5bf9\u4e8e\u4e00\u4e2a\u96c6\u5408 $S$\uff0c\u5176\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u6709\u4e00\u4e2a\u6743\u503c $t_i$\u3002\u63a5\u4e0b\u6765\u6709 $q$ \u6b21\u64cd\u4f5c\uff1a\n\n- \u5c06\u5143\u7d20 $i$ \u52a0\u5165\u96c6\u5408 $S'$ \u4e2d\u3002\u4fdd\u8bc1\u6b64\u524d $i\\notin S'$\u3002\n- \u8be2\u95ee\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5143\u7d20 $i$\uff0c\u82e5 $i\\in S'$ \u4e14 $t_i$ \u5728 $S'$ \u4e2d\u7684\u6240\u6709 $t_i$ \u7684\u6392\u540d\u5728\u524d $k$ \u4f4d\uff0c\u8f93\u51fa \"YES\"\uff1b\u5426\u5219\u8f93\u51fa \"NO\"\u3002\n\n#### \u89e3\u9898\u601d\u8def\n\n\u9996\u5148\u6211\u4eec\u4e0d\u8003\u8651\u6392\u540d\u3002\u7531\u4e8e\u4fdd\u8bc1\u4e86\u65b0\u4e0a\u7ebf\u7684\u670b\u53cb\u6b64\u524d\u4e0d\u5728\u7ebf\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00\u4e00\u4e2a\u6570\u7ec4 $on_i = 0/1$\uff0c\u8868\u793a\u8fd9\u4f4d\u670b\u53cb\u662f\u5426\u4e0a\u7ebf\u3002\u5224\u65ad\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u68c0\u67e5 $on_i$ \u7684\u60c5\u51b5\u3002\u5982\u679c\u73b0\u5728\u9700\u8981\u5224\u65ad\u7684\u670b\u53cb\u662f $x$ \u53f7\uff0c\u82e5 $on_x = 0$\uff0c\u53ef\u4ee5\u76f4\u63a5\u8f93\u51fa \"NO\"\u3002\n\n\u5bf9\u4e8e\u6392\u540d\uff0c\u6211\u4eec\u8003\u8651\u4f7f\u7528\u4e00\u4e2a\u4f18\u5148\u961f\u5217\u3002\u5efa\u7acb\u4e00\u4e2a\u4e8c\u5143\u7ec4 $\\text{<first, second>}$\uff0c\u7b2c\u4e00\u7ef4\u8868\u793a $t_i$\uff0c\u7b2c\u4e8c\u4f4d\u8868\u793a $i$\u3002\u5bf9\u4e8e\u64cd\u4f5c\u4e00\uff0c\u6211\u4eec\u5c06 $\\text{<}t_i, i\\text{>}$ \u52a0\u5165\u961f\u5217\u3002\u7531\u4e8e $\\text{pq}$ \u9ed8\u8ba4\u7684\u662f\u5927\u6839\u5806\uff0c\u6211\u4eec\u5c31\u4fdd\u8bc1\u4e86\u961f\u5934\u7684\u524d $k$ \u4e2a\u670b\u53cb\u4e00\u5b9a\u662f $t_i$ \u503c\u524d $k$ \u5927\u7684\u3002\u7279\u522b\u5730\uff0c\u5982\u679c\u8fdb\u884c\u8be2\u95ee\u65f6\u961f\u5217\u7684\u5927\u5c0f\u4e0d\u8d85\u8fc7 $k$\uff0c\u6b64\u65f6\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad\u5f53\u524d\u8be2\u95ee\u5bf9\u8c61\u7684 $on$ \u503c\u5373\u53ef\u3002\n\n\u5982\u679c\u4e0d\u662f\u8fd9\u6837\uff0c\u6211\u4eec\u8ba9\u961f\u5934\u7684\u524d $k$ \u4e2a\u4e8c\u5143\u7ec4\u5f39\u51fa\u5e76\u6682\u5b58\u3002\u63a5\u4e0b\u6765\u5224\u65ad\u8fd9 $k$ \u4e2a\u4e8c\u5143\u7ec4\u4e2d\u662f\u5426\u6709\u4e00\u4e2a $\\text{second}$ \u503c\u4e3a\u5f53\u524d\u8be2\u95ee\u7684\u5bf9\u8c61\uff0c\u5982\u679c\u6709\uff0c\u8f93\u51fa \"YES\"\uff1b\u5426\u8005\u8f93\u51fa \"NO\" \u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\text{O}(qk)$\uff0c\u5927\u7ea6\u662f $1e6$ \u7684\u7ea7\u522b\u3002\u56e0\u4e3a $k$ \u5b9e\u9645\u4e0a\u4e0d\u4f1a\u8d85\u8fc7 $6$\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2a $\\text{O}(q)$ \u7684\u7b97\u6cd5\uff0c\u5728\u672c\u9898\u662f\u80fd\u591f\u8f7b\u677e\u901a\u8fc7\u7684\u3002\n\n\u672c\u9898\u8fd8\u6709\u4e00\u4e2a\u7406\u8bba\u4e0a\u66f4\u4e3a\u4f18\u79c0\u7684\u5e73\u8861\u6811\u7b97\u6cd5\uff0c\u4f46\u5e38\u6570\u8fdc\u6bd4\u6b64\u7b97\u6cd5\u5927\uff0c\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u4e86\u89e3\u3002\n\n#### \u5b8c\u6574\u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define re register int\n#define rl register ll\n#define rep(i,a,b) for(re i=(a),i##end=(b);i<=i##end;++i)\n#define pre(i,a,b) for(re i=(a),i##end=(b);i>=i##end;--i)\n#define mem(x,val) memset(x,val,sizeof(x))\n#define cpy(a1,a2) memcpy(a1,a2,sizeof(a2))\nusing namespace std;\n\nconst int N=1.5e6+10;\nint n,K,Q,tot,flg,t[N],on[N];\npair <int,int> tmp[10];\npriority_queue < pair <int,int> > q;\n\ninline int rint()\n{\n    re x=0,f=1; char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-') f=-1; ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+(ch^48); ch=getchar();}\n    return x*f;\n}\n\nsigned main()\n{\n    n=rint(),K=rint(),Q=rint();\n    rep(i,1,n) t[i]=rint();\n\n    while(Q--)\n    {\n        re typ=rint(),x=rint();\n        if(typ==1)\n        {\n            q.push(make_pair(t[x],x));\n            on[x]=1;\n        }\n        else\n        {\n            if(!on[x])\n            {\n                puts(\"NO\");\n                continue;\n            }\n            if(q.size()<=K)\n            {\n                puts(\"YES\");\n                continue;\n            }\n            tot=0,flg=0;\n            rep(i,1,K)\n            {\n                if(q.top().second==x)\n                {\n                    puts(\"YES\");\n                    flg=1;\n                    break;\n                }\n                tmp[++tot]=q.top();\n                q.pop();\n            }\n            rep(i,1,tot) q.push(tmp[i]);\n            if(!flg) puts(\"NO\");\n        }\n    }\n\n    return 0;\n}\n```\n\n\u611f\u8c22\u9605\u8bfb\uff01",
        "postTime": 1623657990,
        "uid": 177531,
        "name": "ZolaWatle",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF639A \u3010Bear and Displayed Friends\u3011"
    }
]