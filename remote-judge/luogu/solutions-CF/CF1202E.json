[
    {
        "content": "\u6d1b\u8c37\u7684$L^AT_EX$\u53ef\u80fd\u6302\uff0c\u8bf7\u5728[My blog](https://oierwanhong.cc/2020/04/18/CF1202E/)\u67e5\u770b\n\n## CF1202E\n\n\u9898\u610f\uff1a\u7ed9\u4e00\u4e2a\u4e32$T$\u548c$n$\u4e2a\u4e32$s_i$.\u5b9a\u4e49$f(T,s)$\u8868\u793a$s$\u5728$T$\u4e2d\u7684\u51fa\u73b0\u6b21\u6570\u3002\n\n\u6c42$\\sum_{i=1}^n\\sum_{j=1}^nf(T,s_i+s_j)$. \u6570\u636e\u8303\u56f4\uff1a$|T|,\\sum_{i=1}|s_i|\\le 2\\times 10^5$\n\n<!--more-->\n\n\u89e3\uff1a\u8003\u8651\u679a\u4e3e\u5212\u5206\u70b9$x$\uff0c\u8be5\u70b9\u53ca\u4e4b\u524d\u4e3a$s_i$,\u8be5\u70b9\u4e4b\u540e\u4e3a$s_j$,\u7edf\u8ba1\u4e00\u4e0b$s_i,s_j$\u7684\u6570\u91cf$f1(x),f2(x+1)$\u7136\u540e\u4e58\u6cd5\u539f\u7406\u76f8\u4e58\u5373\u53ef\u3002\n\n\u5177\u4f53\u5982\u4f55\u7edf\u8ba1\uff1f\u8be5\u95ee\u9898\u7b49\u4ef7\u4e8e\uff0c\u7ed9\u4e00\u4e2a\u6587\u672c\u4e32\u548c\u4e00\u4e9b\u6a21\u5f0f\u4e32\uff0c\u8981\u5bf9\u6587\u672c\u4e32\u7684\u6bcf\u4e2a\u524d\u7f00\u6c42\u51fa\u6709\u591a\u5c11\u6a21\u5f0f\u4e32\u662f\u4ed6\u7684\u540e\u7f00\uff08\u540e\u9762\u90a3\u4e2a\u53ea\u8981\u628a\u4e32\u53cd\u8f6c\u5c31\u597d\uff09\n\u6587\u672c\u4e32\u957f\u5ea6\u81f3\u591a2e5,\u6a21\u5f0f\u4e32\u957f\u5ea6\u548c\u81f3\u591a2e5.  \n\u5bf9\u6a21\u5f0f\u4e32\u5efaAC\u81ea\u52a8\u673a\uff0c\u8003\u8651fail\u6307\u9488\u6307\u5411\u7684\u662f\u6839\u5230\u5f53\u524d\u4e32\u7684\u6700\u957f\u540e\u7f00\u3002\u800c\u6240\u6c42\u7b49\u4ef7\u4e8e\u4e3a\u6a21\u5f0f\u4e32\u7684\u540e\u7f00\u7684\u6570\u91cf\uff0c\u56e0\u6b64\u901a\u8fc7fail\u6c42\u548c\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u7ebf\u6027\u3002\n```\n#define MAXN 400011\nstruct ACAM\n{\n    ll t[MAXN][26],val[MAXN],fail[MAXN],vis[MAXN];//val[u]\u8868\u793a\u70b9\u6839\u5230u\u7684\u4e32\u7684\u4e3a\u6a21\u5f0f\u4e32\u7684\u540e\u7f00\u6570\u91cf\n    ll cnt=0;\n    void insert(char* a,ll n)\n    {\n        ll u=0;\n        for(ll i=1;i<=n;++i)\n        {\n            ll &v=t[u][a[i]-'a'];\n            if(!v)v=++cnt;\n            u=v;\n        }\n        ++val[u];\n    }\n    void build()//\u5efaAC\u81ea\u52a8\u673a\u5e76\u6c42val\n    {\n        std::queue<ll>q;\n        for(ll i=0;i<26;++i)\n            if(t[0][i])q.push(t[0][i]);\n        while(!q.empty())\n        {\n            ll u=q.front();q.pop();\n            for(ll i=0;i<26;++i)\n            {\n                ll &v=t[u][i];\n                if(v)fail[v]=t[fail[u]][i],val[v]+=val[fail[v]],q.push(v);\n                else v=t[fail[u]][i];\n            }\n        }\n    }\n    void Query(char* a,ll n,ll f[])//\u6c42f\n    {\n        for(ll i=0;i<=cnt;++i)vis[i]=0;\n        ll u=0;\n        for(ll i=1;i<=n;++i)\n        {\n            u=t[u][a[i]-'a'];\n            f[i]=val[u];\n        }\n    }\n}ac,Rac;//ac\u81ea\u52a8\u673a\u548c\u53cd\u4e32\u7684ac\u81ea\u52a8\u673a\nll f1[MAXN],f2[MAXN];\nchar a[MAXN],b[MAXN];\nint main()\n{\n    scanf(\"%s\",a+1);\n    ll n=read(),la=strlen(a+1);\n    while(n--)\n    {\n        scanf(\"%s\",b+1);\n        ll lb=strlen(b+1);\n        ac.insert(b,lb);//\u63d2\u5165ac\u81ea\u52a8\u673a\n        std::reverse(b+1,b+lb+1);Rac.insert(b,lb);\n    }\n    ac.build();Rac.build();\n    ac.Query(a,la,f1);std::reverse(a+1,a+la+1);Rac.Query(a,la,f2);\n    ll ans=0;\n    for(ll i=1;i<=la;++i)\n\t{\n\t\tans+=f1[i]*f2[la-i];//\u6ce8\u610f\u8fd9\u91cc\u7684f2\u6ca1\u6709\u53cd\u8f6c\uff0c\u5982\u679c\u53cd\u8f6c\u4e86\u5c31\u5e94\u8be5\u662ff1[i]*f2[i+1]\n\t}\n    printf(\"%lld\",ans);\n    return 0;\n}\n```",
        "postTime": 1587218184,
        "uid": 73142,
        "name": "\u4e07\u5f18",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1202E \u3010You Are Given Some Strings...\u3011"
    },
    {
        "content": "\u9996\u5148\u8bb0 $f_i$ \u4e3a\u4ee5 $i$ \u5f00\u5934\u7684\u5b57\u7b26\u4e32\u4e2a\u6570\uff0c$g_i$ \u4e3a\u4ee5 $i$ \u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32\u4e2a\u6570\uff0c\u90a3\u4e48\u7b54\u6848\u4e3a $\\sum_{i=1}^{|t|}g_if_{i+1}$\u3002\uff0c\u8003\u8651\u5982\u4f55\u8ba1\u7b97 $f_i$ \u548c $g_i$\u3002\n\n\u6839\u53f7\u5206\u6cbb\u3002\u8bb0\u4e00\u4e2a\u9608\u503c $B$\uff0c\u957f\u5ea6\u5927\u4e8e $B$ \u7684\u4e32\u4e0d\u8d85\u8fc7 $\\dfrac{\\sum|s|}{B}$ \u4e2a\uff0c\u76f4\u63a5\u66b4\u529b\u8dd1\u5339\u914d\uff0c\u5c06\u5339\u914d\u4e0a\u7684\u5b57\u7b26\u4e32\u5f00\u5934\u7684 $f_i$ \u548c\u7ed3\u5c3e\u7684 $g_i$ \u52a0\u4e00\u3002\n\n\u7136\u540e\u679a\u4e3e $t$ \u4e2d\u957f\u5ea6\u4e3a $1\\sim B$ \u7684\u5b50\u4e32\uff0c\u5bf9\u6bcf\u4e2a\u5b50\u4e32\u7edf\u8ba1\u51fa\u6240\u6709\u957f\u5ea6\u4e0d\u5927\u4e8e $B$ \u7684\u4e32\u4e2d\u4e0e\u5176\u76f8\u540c\u7684\u4e2a\u6570\uff0c\u5c06\u8be5\u5b50\u4e32\u5f00\u5934\u7684 $f_i$ \u548c\u7ed3\u5c3e\u7684 $g_i$ \u52a0\u4e0a\u4e2a\u6570\u3002\n\n\u53ef\u4ee5\u7528\u4e00\u4e9b\u5b57\u7b26\u4e32\u7b97\u6cd5\u4f18\u5316\u5339\u914d\u548c\u627e\u76f8\u540c\u5b57\u7b26\u4e32\u7684\u8fc7\u7a0b\uff0c\u590d\u6742\u5ea6\u4e3a $O(\\dfrac{\\sum|s|}{B}|t|+B|t|)$\uff0c\u5f53 $B=\\sqrt{\\sum|s|}$ \u65f6\u6700\u4f18\u3002\n\n\u8fd9\u91cc\u7528\u7684\u662f\u54c8\u5e0c\u3002\u4e0d\u8fc7\u8fd9\u9898\u628a\u5355\u54c8\u5e0c\u51e0\u4e2a\u5e38\u89c1\u7684\u6a21\u6570\u5361\u6389\u4e86\uff0c\u6240\u4ee5\u7528\u4e86\u53cc\u54c8\u5e0c\u3002\n\n[Code](https://www.luogu.com.cn/paste/7mn3mza5)",
        "postTime": 1633590051,
        "uid": 150843,
        "name": "\u5510\u4e00\u6587",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1202E \u3010You Are Given Some Strings...\u3011"
    },
    {
        "content": "\u7531\u4e8e\u76f4\u63a5\u8ba1\u7b97\u6bcf\u4e00\u5bf9$s_i+s_j$\u7684\u51fa\u73b0\u6b21\u6570\u5e76\u4e0d\u597d\u505a\uff0c\u8003\u8651\u679a\u4e3e\u5b83\u4eec\u5206\u5272\u7684\u4f4d\u7f6e\uff08$s_i$\u7ed3\u675f$s_j$\u5f00\u59cb\u5904\uff09\u6765\u8ba1\u7b97\u603b\u6570\u3002\n\n\u56e0\u6b64\u4efb\u4f55\u5728\u5206\u5272\u5904\u7ed3\u675f\u7684$s_i$\u90fd\u53ef\u4ee5\u4e0e\u4ece\u8fd9\u91cc\u5f00\u59cb\u7684$s_j$\u914d\u5bf9\u3002\n\n\u6240\u4ee5\u8bf4\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u6bcf\u4e00\u4e2a\u540e\u7f00\u8ba1\u7b97\u4ece\u8fd9\u91cc\u5f00\u59cb\u7684\u5b57\u7b26\u4e32$s_i$\u7684\u6570\u91cf\uff0c\u4ee5\u53ca\u5bf9\u6bcf\u4e00\u4e2a\u524d\u7f00\u8ba1\u7b97\u4ece\u8fd9\u91cc\u7ed3\u675f\u7684\u5b57\u7b26\u4e32$s_i$\u7684\u6570\u91cf\u3002\u8ba1\u7b97\u524d\u7f00\u53ef\u4ee5\u901a\u8fc7\u53cd\u8f6c$t$\u548c\u6240\u6709\u7684$s_i$\u8f6c\u5316\u4e3a\u8ba1\u7b97\u540e\u7f00\u3002\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5bf9\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e$pos$\u8ba1\u7b97\u4ece$pos$\u5f00\u59cb\u6216\u7ed3\u675f\u7684\u5b57\u7b26\u4e32\u4e2a\u6570\u3002\u4e2a\u4eba\u7684\u505a\u6cd5\u662fSAM\uff0c\u4f46\u5b98\u65b9\u9898\u89e3\u6709\u4e00\u79cd\u6709\u8da3\u7684\u6839\u53f7\u5206\u6cbb\u505a\u6cd5\u3002\n\n\u5148\u786e\u5b9a\u4e00\u4e2a\u9619\u503c$MAG$\u3002\u7136\u540e\u5c06\u5b57\u7b26\u4e32\u5206\u4e3a\u957f\u6216\u77ed\u4e24\u7c7b\uff1a\u82e5$|s_i|\\leq MAG$\u5c31\u5f53\u505a\u77ed\u7684\uff0c\u5426\u5219\u5f53\u505a\u957f\u7684\u3002\u663e\u7136\u4e0d\u4f1a\u6709\u8d85\u8fc7$\\frac{\\sum|s_i|}{MAG}$\u4e2a\u957f\u5b57\u7b26\u4e32\u3002\u5bf9\u4e8e\u8fd9\u4e9b\u957f\u5b57\u7b26\u4e32\u53ef\u4ee5\u7528Z\u51fd\u6570\u6216\u8005\u524d\u7f00\u51fd\u6570\u627e\u5230\u5b83\u7684\u6240\u6709\u51fa\u73b0\u3002\u8fd9\u90e8\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(\\frac{\\sum |s_i|}{MAG}+\\sum |s_i|)$\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u77ed\u7684\u5b57\u7b26\u4e32\u8003\u8651\u76f4\u63a5\u5efa\u4e00\u68f5Trie\u3002\u8fd9\u68f5Trie\u5c06\u4f1a\u6709$O\\left(\\sum |s_i| \\right)$\u4e2a\u70b9\uff0c\u4f46\u662f\u6700\u5927\u6df1\u5ea6\u4e3a$MAG$\u3002\u6240\u4ee5\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a$pos$\u5411\u4e0b\u79fb\u52a8\u904d\u5386Trie\uff0c\u540c\u65f6\u8ba1\u7b97\u51fa\u73b0\u6b21\u6570\uff0c\u8fd9\u53ea\u4f7f\u7528\u4e86$s[pos\\ldots (pos+MAG)]$\u8fd9\u90e8\u5206\u5b50\u4e32\u3002\u6240\u4ee5\u8fd9\u90e8\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(|t|\\cdot MAG)$\u3002\n\n\u6240\u4ee5\u5f53$MAG=\\sqrt{\\sum |s_i|}$\u65f6\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O\\left(\\sum |s_i|+|t|\\sqrt{\\sum |s_i|} \\right)$\u3002\u8fd9\u6ca1\u6709\u4f7f\u7528\u4efb\u4f55\u5b57\u7b26\u4e32\u6570\u636e\u7ed3\u6784\u3002\n\n\n\n\u7136\u540e\u8bb2\u4e00\u4e0b\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6\u7684SAM\u505a\u6cd5\u3002\n\n\u5bf9\u4e8e$t$\u548c$\\operatorname{reverse}(t)$\u5efa\u51faSAM\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a$s_i$\u548c$\\operatorname{reverse}(s_i)$\u5728SAM\u4e0a\u8dd1\u4e00\u904d\uff0c\u5e76\u5bf9\u4e8e\u5b83\u7684\u7ed3\u675f\u4f4d\u7f6e\u7684\u6574\u4e2a\u5b50\u6811\u6253\u4e2a\u6807\u8bb0\u3002\u6700\u540e\u76f4\u63a5\u8ba1\u7b97\u6bcf\u4e2a\u4f4d\u7f6e\u5b58\u5728\u7684\u5b57\u7b26\u4e32\u6570\u91cf\u5c31\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\u3002\n\n```cpp\nstring str;\nint t[222222];\n\nint n,lent;\nstruct SAM\n{\n    struct node\n    {\n        int len,nxt,son[26];\n    }a[444444];\n    int ans[444444],edp[444444],cnt[444444];\n    int lst,tn;\n    vector<int>e[444444];\n    inline void init_SAM()\n    {\n        tn=lst=1; \n    }\n    void extend_SAM(int c)\n    {\n        int cur=++tn,p=lst;\n        a[cur].len=a[p].len+1;edp[cur]=a[p].len;\n        for(;p&&!a[p].son[c];p=a[p].nxt) a[p].son[c]=cur;\n        if(!p) a[cur].nxt=1;\n        else\n        {\n            int v=a[p].son[c];\n            if(a[v].len==a[p].len+1) a[cur].nxt=v;\n            else\n            {\n                int x=++tn;a[x]=a[v];\n                a[x].len=a[p].len+1;edp[x]=-1;\n                for(;p&&a[p].son[c]==v;p=a[p].nxt)a[p].son[c]=x;\n                a[cur].nxt=a[v].nxt=x;\n            }\n        } \n        lst=cur;\n    }\n    void solve(const string &s)\n    {\n        int p=1,len=(int)s.size(),x;\n        R(i,0,len-1) \n        {\n            x=s[i]-'a';\n            if(!a[p].son[x]) return;\n            p=a[p].son[x];\n        }\n        ++cnt[p];\n    }\n    void dfs(int u)\n    {\n        \n        if(~edp[u]) ans[edp[u]]=cnt[u];\n        for(int v:e[u]) cnt[v]+=cnt[u],dfs(v);\n    }\n    void mian()\n    {\n        R(i,2,tn) e[a[i].nxt].pb(i);\n        dfs(1);\n    }\n}SAM1,SAM2;\n\nsigned main()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    SAM1.init_SAM(),SAM2.init_SAM();\n    cin>>str>>n;lent=str.size();\n    R(i,0,lent-1) t[i]=str[i]-'a';\n    R(i,0,lent-1) SAM1.extend_SAM(t[i]);\n    L(i,0,lent-1) SAM2.extend_SAM(t[i]);    \n    R(i,1,n)\n    {\n        cin>>str;\n        SAM1.solve(str);\n        reverse(str.begin(),str.end());\n        SAM2.solve(str);\n    }\n    SAM1.mian();\n    SAM2.mian();\n    ll ans=0;\n    R(i,0,lent-2) ans+=1ll*SAM1.ans[i]*SAM2.ans[lent-i-2];\n    cout<<ans;\n}\n```",
        "postTime": 1622464288,
        "uid": 115779,
        "name": "\u6781\u5bd2\u795e\u51b0",
        "ccfLevel": 0,
        "title": "CF1202E"
    },
    {
        "content": "\u8bf6\u6211\u5c31\u4e0d\u7528 AC \u81ea\u52a8\u673a\uff0c\u6211\u5c31\u4e0d\u7528 SA\uff0c\u6211\u5c31\u8981\u54c8\u5e0c\uff01\uff01\n\n\u5f53\u7136\u95ee\u9898\u8fd8\u8981\u7a0d\u5fae\u8f6c\u6362\u4e00\u4e0b\uff0c\u76f4\u63a5\u66b4\u529b\u505a\u4e0d\u592a\u73b0\u5b9e\u3002\n\n\u770b\u5230\u8fd9\u79cd\u603b\u957f\u5ea6\u7684\u6709\u9650\u5236\u7684\u4e00\u822c\u5c31\u53ef\u4ee5\u8fdb\u884c\u6839\u53f7\u5206\u6cbb\u4e86\u3002\n\n\u5148\u4e0d\u7ba1\u9898\u76ee\u91cc\u9762\u8981\u6c42\u7684\u4e1c\u897f\u3002\n\n\u8fd9\u91cc\u7684 $|s|$ \u8868\u793a\u5b57\u7b26\u4e32 $s$ \u7684\u957f\u5ea6\u3002\n\n\u9996\u5148\uff0c\u5bf9\u4e8e $|s_i| \\ge B$ \u7684\uff0c\u66b4\u529b\u5728 $t$ \u4e0a\u9762\u5339\u914d\uff0c\u5339\u914d\u8fc7\u7a0b\u53ef\u4ee5\u7528\u54c8\u5e0c\u5b9e\u73b0\uff0c\u590d\u6742\u5ea6\u662f $O(\\dfrac{\\sum |s_i|}{B} \\times |t|)$ \u7684\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u5c0f\u7684\uff0c\u53ef\u4ee5\u679a\u4e3e $t$ \u548c\u5c0f\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\uff0c\u5f00\u4e2a\u54c8\u5e0c\u8868\u8bb0\u4e0b\u6765\u5339\u914d\u5373\u53ef\uff0c\u590d\u6742\u5ea6 $O(|t| \\times B)$\uff0c\u7531\u4e8e\u957f\u5ea6\u5747\u540c\u9636\uff0c\u6240\u4ee5 $B$ \u53d6 $300$ \u5de6\u53f3\u5c31\u53ef\u4ee5\uff0c\u5f53\u7136\u7531\u4e8e\u54c8\u5e0c\u8868\u5e38\u6570\u539f\u56e0\uff0c\u5757\u957f\u53ef\u4ee5\u8c03\u5c0f\uff0c\u8fd9\u662f\u6b21\u8981\u7684\u3002\n\n\u7136\u540e\u7531\u4e8e `__int128` \u4f1a\u88ab\u5361\u5e38\uff0c\u6240\u4ee5\u76f4\u63a5\u53cc\u6a21\u54c8\u5e0c\uff0c\u81ea\u7136\u6ea2\u51fa\u914d\u5408\u5355\u6a21\u54c8\u5e0c\uff0c\u8fd9\u6837\u5c31\u80fd\u901a\u8fc7\u8fd9\u4e2a\u9898\u4e86\u3002\n\n\u54c8\u5e0c\u8868\u5185\u90e8\u80fd\u5b58\u70b9\u4e1c\u897f\uff0c\u6240\u4ee5\u4e0d\u7528\u62c5\u5fc3\u54c8\u5e0c\u8868\u91cc\u9762\u627e\u9519\u4e86\u5143\u7d20\u3002\n\n\u8bbe $b_i$ \u4e3a $t_i$ \u5f00\u5934\u548c $s_i$ \u5339\u914d\u7684\u6570\u91cf\u3002\n\n\u7136\u540e\u6211\u4eec\u5bf9\u4e8e $[l,r]$ \u80fd\u5339\u914d $b_l$ \u4e2a\u5b57\u7b26\u4e32\u4e4b\u540e\uff0c\u4ed6\u5bf9\u4e8e\u7b54\u6848\u7684\u8d21\u732e\u5c31\u662f $b_l \\times b_{r+1}$ \u4e86\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u8fc7\u6389\u8fd9\u9053\u9898\u4e86\uff0c\u7a0d\u5fae\u6709\u70b9\u5c0f\u5361\u5e38\u3002\n\n\u7f3a\u7701\u6e90\u5220\u4e86\uff0c\u8981\u770b\u5b8c\u6574\u4ee3\u7801\u7684\u53ef\u4ee5\u53bb CF \u4e0a\u641c fzx\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define int unsigned long long\n#define pb push_back\nusing namespace std;\nconst int B=85;\nconst int INF=2e5+5;\nconst int base=233;\nconst int base1=191;\nconst int Mod=1e9+7;\nstring s1;\nint n,ba[INF],hash1[INF],b[INF],ans,q,vis2[INF],vis3[INF],ba1[INF],hash2[INF];\nstring s3[INF];\nint mul(long long a,long long b,long long mod) {\n    long long d=(long double)a/mod*b;\n    long long ans=(unsigned long long)a*b-(unsigned long long)d*mod;\n    return (ans+mod)%mod;\n}\nconst int Mod3=3000017;\nstruct hash2{\n\tvector <int> h2[Mod3+6],h3[Mod3+6];\n\tvoid ins(int x) {\n\t\tint xx=x%Mod3,len=h2[xx].size();\n\t\tfor (int i=0;i<len;i++) \n\t\t\tif (h2[xx][i]==x) {h3[xx][i]++;return ;}\n\t\th2[xx].pb(x);\n\t\th3[xx].pb(1);\n\t}\n\tint query(int x) {\n\t\tint xx=x%Mod3,len=h2[xx].size();\n\t\tfor (int i=0;i<len;i++) \n\t\t\tif (h2[xx][i]==x) return h3[xx][i];\n\t\treturn -1;\n\t}\n}HH;\n//unordered_map <int,int> Map; // \u7b49\u4f1a\u5728\u8bf4 \nint Get(int l,int r) {\n\treturn (hash1[r]-hash1[l-1]*ba[r-l+1]);\n}\nint Get2(int l,int r) {\n    return (hash2[r]-hash2[l-1]*ba1[r-l+1]%Mod+Mod)%Mod;\n}\nsigned main()\n{\n    // freopen(\"data.in\",\"r\",stdin);\n\tcin>>s1>>q;\n\tint n=s1.size();\n\ts1=\" \"+s1;\n\tba[0]=1;ba1[0]=1;\n\tfor (int i=1;i<=n;i++) ba[i]=ba[i-1]*base;\n    for (int i=1;i<=n;i++) ba1[i]=ba1[i-1]*base1%Mod;\n\tfor (int i=1;i<=n;i++)\n\t\thash1[i]=hash1[i-1]*base+s1[i],\n        hash2[i]=hash2[i-1]*base1%Mod+s1[i],hash2[i]%=Mod;\n\t\n\tfor (int i=1;i<=q;i++) {\n\t\tstring s2;cin>>s2;s3[i]=s2;\n\t\tif (s2.size()>B) {\n\t\t\tint H=0,H1=0;\n\t\t\tfor (char x:s2)\n\t\t\t\tH=(H*base+x);\n            for (char x:s2)\n\t\t\t\tH1=(H1*base1%Mod+x)%Mod;\n\t\t\tvis2[i]=H;vis3[i]=H1;\n\t\t\tfor (int j=1;j<=n;j++) {\n\t\t\t\tint r=j+s2.size()-1;\n\t\t\t\tif (r>n) break;\n\t\t\t\tif (Get(j,r)==H && Get2(j,r)==H1) b[j]++;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tint H=0;\n\t\t\tfor (char x:s2)\n\t\t\t\tH=(H*base+x);\n//\t\t\tMap[H]++;\n\t\t\tHH.ins(H);\n\t\t}\n\t}\n\t\n\tfor (int i=n;i;i--) {\n\t\tfor (int j=1;j<=B;j++) {\n\t\t\tif (i+j-1>n) continue;\n\t\t\tint xx=Get(i,i+j-1);\n\t\t\tint qq=HH.query(xx);\n\t\t\tif (qq!=-1) \n\t\t\t\tb[i]+=qq,ans+=qq*b[i+j];\n\t\t}\n\t}\n\t\n\tfor (int i=1;i<=q;i++) {\n\t\tif (s3[i].size()>B) {\n\t\t\tint H=vis2[i],H1=vis3[i];\n\t\t\tfor (int j=1;j<=n;j++) {\n\t\t\t\tint r=j+s3[i].size()-1;\n\t\t\t\tif (r>n) break;\n\t\t\t\tif (Get(j,r)==H && Get2(j,r)==H1) ans+=b[r+1];\n\t\t\t}\n\t\t}\n\t}\n\tcout<<ans<<\"\\n\";\n\treturn 0;\n}\n```\n",
        "postTime": 1673055920,
        "uid": 208653,
        "name": "_edge_",
        "ccfLevel": 0,
        "title": "CF1202E"
    },
    {
        "content": "> [CF1202E You Are Given Some Strings... \u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1202E)\u3002\n\n> \u9898\u610f\u7b80\u8ff0\uff1a\u7ed9\u51fa $t$ \u4e0e $s_{1,2,\\cdots,n}$\u3002\u6c42\u5bf9\u4e8e\u6240\u6709 $i,j\\in[1,n]$\uff0c$s_i+s_j$ \u5728 $t$ \u4e2d\u51fa\u73b0\u6b21\u6570\u4e4b\u548c\u3002\n\n[\u5728\u6211\u7684 cnblogs \u5185\u67e5\u770b](https://www.cnblogs.com/alex-wei/p/CF1202E.html)\u3002\n\n---\n\n\u5982\u679c\u53ea\u6709 $s_i$ \u90a3\u4e48\u663e\u7136\u662f ACAM \u7684\u677f\u5b50\u9898\uff0c\u5bf9\u6bcf\u4e2a\u4f4d\u7f6e $p$ \u8bb0\u5f55\u5b83\u7684\u524d\u7f00\u7684\u6240\u6709\u540e\u7f00\u80fd\u4e0e\u591a\u5c11 $s_i$ \u76f8\u7b49\uff0c\u5373\u4e3a $a_p$\uff08\u5373\u6709\u591a\u5c11 $i$ \u6ee1\u8db3 $t[p-|s_i|+1:p]=s_i$\u3002\u5b9e\u9645\u4e0a\u5c31\u662f\u8be5\u4f4d\u7f6e\u524d\u7f00 $t[1:p]$ \u5728 ACAM \u4e0a\u8dd1\u5230\u7684\u4f4d\u7f6e\u5728 fail \u6811\u4e0a\u4e0e\u6839\u7684\u8def\u5f84\u4e0a\u6709\u591a\u5c11 $s_i$ \u7684\u7ec8\u6b62\u8282\u70b9\uff09\u3002\u5982\u679c\u518d\u52a0\u4e0a $s_j$\uff0c\u5c31\u8981\u6c42\u4e00\u4e2a\u4f4d\u7f6e\u7684\u540e\u7f00\u6709\u591a\u5c11\u4e0e $s_j$ \u76f8\u7b49\u7684\u524d\u7f00\uff0c\u5373\u4e3a $b_p$\u3002\u90a3\u4e48\u53ef\u4ee5\u5efa $s$ \u6240\u6709\u53cd\u4e32\u7684 ACAM\uff0c\u518d\u7528 $t$ \u7684\u53cd\u4e32\u4e0a\u53bb\u8dd1\u5373\u53ef\u3002\u6839\u636e\u4e58\u6cd5\u539f\u7406\uff0c\u7b54\u6848\u4e3a $\\sum a_ib_{i+1}$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u5b57\u7b26\u603b\u957f\u5ea6\u4e58\u4ee5\u5b57\u7b26\u96c6\u5927\u5c0f\u3002\n\n```cpp\n/*\n\tPowered by C++11.\n\tAuthor : Alex_Wei.\n*/\n\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define ll long long\n#define all(x) x.begin(),x.end()\n#define rev(x) reverse(all(x))\n\nconst int N=2e5+5;\nconst int S=26;\n\nstruct ACAM{\n\tint cnt,f[N],son[N][S],ed[N];\n\tvoid ins(string s){\n\t\tint p=0;\n\t\tfor(char it:s){\n\t\t\tif(!son[p][it-'a'])son[p][it-'a']=++cnt;\n\t\t\tp=son[p][it-'a'];\n\t\t} ed[p]++;\n\t} void build(){\n\t\tqueue <int> q;\n\t\tfor(int i=0;i<26;i++)if(son[0][i])q.push(son[0][i]);\n\t\twhile(!q.empty()){\n\t\t\tint t=q.front(); q.pop();\n\t\t\tfor(int i=0;i<26;i++)\n\t\t\t\tif(son[t][i])f[son[t][i]]=son[f[t]][i],q.push(son[t][i]);\n\t\t\t\telse son[t][i]=son[f[t]][i];\n\t\t\ted[t]+=ed[f[t]];\n\t\t}\n\t}\n}a,b;\n\nll n,ans,s[N];\nstring t;\n\nint main(){\n\tcin>>t>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tstring s; cin>>s;\n\t\ta.ins(s),rev(s),b.ins(s);\n\t} a.build(),b.build();\n\tfor(int i=1,p=0;i<=t.size();i++)\n\t\tp=a.son[p][t[i-1]-'a'],s[i]=a.ed[p];\n\tfor(int i=t.size(),p=0;i;i--)\n\t\tp=b.son[p][t[i-1]-'a'],ans+=s[i-1]*b.ed[p];\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1614994219,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1202E You Are Given Some Strings..."
    },
    {
        "content": "\u5982\u679c\u76f4\u63a5\u6c42\u548c\uff0c$s_i+s_j$ \u7684\u7ec4\u5408\u6709 $O(n^2)$ \u79cd\uff0c\u76f4\u63a5\u786c\u5e72\u6781\u4e3a\u56f0\u96be\u3002\n\n\u8fd0\u7528\u7b97\u4e24\u6b21\u7684\u60f3\u6cd5\uff0c\u8f6c\u800c\u8003\u8651 $s_i,s_j$ \u4e4b\u95f4\u7684\u5206\u5272\u4f4d\u7f6e $k$\u3002\n\n\u8f6c\u5316\u4e4b\u540e\uff0c\u53ea\u9700\u7edf\u8ba1\u591a\u5c11\u4e2a\u6a21\u677f\u4e32\u662f $t_1t_2\\cdots t_k$ \u7684\u540e\u7f00\u53ca\u591a\u5c11\u4e2a\u6a21\u677f\u4e32\u662f $t_{k+1}t_{k+2}\\cdots t_n$ \u7684\u524d\u7f00\u5373\u53ef\u3002\n\n\u8bbe $f_k$ \u8868\u793a\u662f $t_1t_2\\cdots t_k$ \u7684\u540e\u7f00\u7684\u6a21\u677f\u4e32\u7684\u4e2a\u6570\u3002\n\n\u5bf9\u6a21\u677f\u4e32\u5efa $\\text{AC}$ \u81ea\u52a8\u673a\uff0c\u627e\u5230\u5f53\u524d\u81ea\u52a8\u673a\u4e0a\u5bf9\u5e94\u7684\u8282\u70b9\uff1b\u4e00\u76f4\u6cbf\u7740 $\\text{fail}$ \u6307\u9488\u8df3\uff0c\u6b64\u65f6 $f_k$ \u4e3a\u6240\u6709\u8df3\u5230\u7684\u8282\u70b9\u4e0a\u4ee5\u8fd9\u4e9b\u8282\u70b9\u7ed3\u5c3e\u7684\u6a21\u677f\u4e32\u7684\u4e2a\u6570\u3002\n\n\u524d\u7f00\u548c\u540e\u7f00\u7684\u7edf\u8ba1\u65b9\u6cd5\u662f\u4e00\u6837\u7684\uff0c\u628a\u6587\u672c\u4e32\u548c\u6a21\u677f\u4e32\u7ffb\u8f6c\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6700\u540e\u628a\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u8d21\u732e\u52a0\u4e00\u4e0b\u5c31\u597d\u4e86\uff0c\u590d\u6742\u5ea6 $O(26n)$\u3002\n\n",
        "postTime": 1661090380,
        "uid": 117771,
        "name": "intel_core",
        "ccfLevel": 7,
        "title": "CF1202E \u9898\u89e3"
    },
    {
        "content": "# \u539f\u9898\u8fde\u63a5\n\n[\u6d1b\u8c37\u7684](https://www.luogu.com.cn/problem/CF1202E)\n\n[CF\u7684](http://codeforces.com/problemset/problem/1202/E)\n\n[VJ\u7684](https://vjudge.net/problem/CodeForces-1202E)\n\n# \u95ee\u9898\u63cf\u8ff0\n\u7ed9\u5b9a\u51fa\u4e00\u5927\u5806\u5b57\u7b26\u4e32\uff0c\u8981\u6c42\u4efb\u610f\u4e24\u4e2a\u5b57\u7b26\u4e32\u62fc\u5728\u4e00\u8d77\u5728 t \u4e32\u4e2d\u51fa\u73b0\u7684\u4e2a\u6570\u4e4b\u548c\u3002\u6709\u591a\u4efb\u610f\u5462\uff1f\u53ea\u8981\u6ee1\u8db3\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u90fd\u662f\u8fd9\u4e00\u5927\u5806\u7684\u5b57\u7b26\u4e32\u4e2d\u7684\u5c31\u884c\uff08\u62fc\u8d77\u6765\u4e00\u6837\u7684\u4e24\u7ec4\u7b97\u4e24\u4e2a\uff0c\u540c\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e5f\u53ef\u4ee5\u62fc\u8d77\u6765\uff09\u3002\n\n~~\u8bf4\u5b9e\u8bdd\uff0c\u6211\u8fd9\u6982\u62ec\u7684\u63cf\u8ff0\u6bd4\u6d1b\u8c37\u7684\u63cf\u8ff0\u8fd8\u591a~~\n\n# \u89e3\u51b3\u95ee\u9898\n\u770b\u5230\u4e00\u5927\u5806\u5b57\u7b26\u4e32\u8981\u5339\u914d\uff0c\u4e8c\u8bdd\u4e0d\u8bf4\uff0c\u5148\u770b\u6f0f\u8981\u4e24\u4e2a\u5b57\u7b26\u4e32\u62fc\u5728\u4e00\u8d77\u7684\u6761\u4ef6\uff0c\u8dd1\u4e00\u904d AC \u81ea\u52a8\u673a\u3002\u90a3\u4e48\u4e24\u4e2a\u5b57\u7b26\u4e32\u62fc\u5230\u4e00\u8d77\u5462\uff1f\u53cd\u7740\u8dd1\u4e00\u904d\u518d\u63a5\u4e0a\u4e0d\u5c31\u884c\u4e86\u561b\u3002\u600e\u4e48\u63a5\u4e0a\u5462\uff1f\u8bb0\u5f55\u6b63\u7740\u5339\u914d\u548c\u53cd\u7740\u5339\u914d\u5728 i \u7ed3\u675f\u5339\u914d\u7684\u6570\u91cf\uff0c\u90a3\u5c31\u662f\u5c0f\u5b66\u6570\u5b66\u2014\u2014\u4e58\u6cd5\u539f\u7406\u4e86\u3002\u6ce8\u610f\uff0c\u8fd9\u4e2a\u9898\u8981\u7528\u4f18\u5316\u7684 AC \u81ea\u52a8\u673a\uff0c\u5426\u5219\u4f60\u5c31 TLE \u4e86\u3002\n\n# \u4e11\u964b\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int NN=2e5+4;\nstring s[NN];\nint ne[NN][2],st[NN][30][2],sum[NN][2],res[NN][2],idx[2],len;\nvoid insert(string x,int k)\n{\n\tint len=x.size(),u=0;\n\tfor(int i=0;i<len;i++)\n\t{\n\t\tif(!st[u][x[i]-'a'][k])\n\t\t\tst[u][x[i]-'a'][k]=++idx[k];\n\t\tu=st[u][x[i]-'a'][k];\n\t}\n\tsum[u][k]++;\n}\nvoid before_ACAM()\n{\n\tqueue<int>q;\n\tfor(int k=0;k<2;k++)\n\t{\n\t\tfor(int i=0;i<26;i++)\n\t\t\tif(st[0][i][k])\n\t\t\t\tq.push(st[0][i][k]);\n\t\twhile(q.size())\n\t\t{\n\t\t\tint t=q.front();\n\t\t\tq.pop();\n\t\t\tfor(int i=0;i<26;i++)\n\t\t\t{\n\t\t\t\tint u=st[t][i][k];\n\t\t\t\tif(u)\n\t\t\t\t{\n\t\t\t\t\tne[u][k]=st[ne[t][k]][i][k];\n\t\t\t\t\tsum[u][k]+=sum[ne[u][k]][k];\n\t\t\t\t\tq.push(u);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tst[t][i][k]=st[ne[t][k]][i][k];\n\t\t\t}\n\t\t}\n\t}\n}\nvoid ACAM(string t,int k)\n{\n\tint u=0;\n\tfor(int i=0;i<len;i++)\n\t{\n\t\tu=st[u][t[i]-'a'][k];\n\t\tres[i][k]=sum[u][k];\n\t}\n}\nint main()\n{\n\tstring t;\n\tint n;\n\tcin>>t>>n;\n\tlen=t.size();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>s[i];\n\t\tinsert(s[i],0);\n\t\treverse(s[i].begin(),s[i].end());\n\t\tinsert(s[i],1);\n\t}\n\tbefore_ACAM();\n\tACAM(t,0);\n\treverse(t.begin(),t.end());\n\tACAM(t,1);\n\tlong long ans=0;\n\tfor(int i=0;i<len-1;i++)\n\t\tans+=1ll*res[i][0]*res[len-i-2][1];\n\tcout<<ans;\n\treturn 0;\n}\n```",
        "postTime": 1616067326,
        "uid": 132424,
        "name": "\u826f\u5fc3WA\u9898\u4eba",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1202E \u3010You Are Given Some Strings...\u3011"
    },
    {
        "content": "\u9898\u5f88\u6709\u8da3\u5462\uff0c\u5176\u5b9e\u4e5f\u5f88\u7b80\u5355\uff0c\u628a\u6a21\u5f0f\u4e32\u548c\u5339\u914d\u4e32\u6b63\u7740\u8dd1\u4e00\u8fb9Ac automaton\u518d\u7528\u4ed6\u4eec\u7684\u53cd\u4e32\u8dd1\u4e00\u6b21\uff0c\u7136\u540e\u4e00\u8fb9\u6c42fail\u6307\u9488\u4e00\u8fb9\u8ba1\u6570\uff0c\u6700\u540e\u5339\u914d\u4e00\u6b21\u4ee5\u53ca\u4e58\u6cd5\u539f\u7406\u5c31\u53ef\u4ee5ac\u4e86\uff1b\n```\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <queue>\nusing namespace std;\nconst int N = 2 * 1e5 + 10;\nchar s[N], t[N];\nint trie[N][26][2], tot[2], size[N][2];\ninline void insert(char *a, int len, bool k) {\n    int p = 0;\n    for (int i = 0; i < len; i++) {\n        int c = a[i] - 'a';\n        if (!trie[p][c][k])\n            trie[p][c][k] = ++tot[k];\n        p = trie[p][c][k];\n    }\n    size[p][k]++;\n}\nint fail[N][2], num[N][2];\ninline void bfs() { \n\tqueue<int> q;\n    for (int k = 0; k <= 1; k++) {\n        for (int i = 0; i < 26; i++)\n            if (trie[0][i][k])\n                q.push(trie[0][i][k]);\n        while (!q.empty()) {\n            int x = q.front();\n            q.pop();\n            for (int i = 0; i < 26; i++) {\n                int v = trie[x][i][k];\n                if (v) {\n                    fail[v][k] = trie[fail[x][k]][i][k];\n                    size[v][k] += size[fail[v][k]][k];\n                    q.push(v);\n                } else\n                    trie[x][i][k] = trie[fail[x][k]][i][k];\n            }\n        }\n    }\n}\ninline void cale(char *a, int len, int k) {\n    int p = 0;\n    for (int i = 0; i < len; i++) {\n        p = trie[p][a[i] - 'a'][k];\n        num[i][k] = size[p][k];\n    }\n}\nint n;\nlong long ans;\nint main() {\n    scanf(\"%s\", &s);\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; i++) {\n        scanf(\"%s\", &t);\n        int len = strlen(t);\n        insert(t, len, 1);\n        reverse(t, t + len);\n        insert(t, len, 0);\n    }\n    bfs();\n    int len = strlen(s);\n    cale(s, len, 1);\n    reverse(s, s + len);\n    cale(s, len, 0);\n    for (int i = 0; i < len; i++) ans += (long long)(num[i][1]) * num[len - i - 2][0];\n    printf(\"%lld\", ans);\n    return 0;\n}\n```",
        "postTime": 1565346709,
        "uid": 122822,
        "name": "Merci",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1202E \u3010You Are Given Some Strings...\u3011"
    },
    {
        "content": "\u96be\u5ea6\u4e00\u822c\u7684\u5b57\u7b26\u4e32\u9898\u76ee...   \u770b\u5230\u8fd9\u79cd\u4e24\u4e32\u62fc\u63a5\u7684\u9898\u76ee\u4e00\u822c\u60c5\u51b5\u4e0b\u4f1a\u5148\u8003\u8651\u662f\u5426\u80fd\u901a\u8fc7\u5bf9\u539f\u5e8f\u5217\u8fdb\u884cdp\u6216\u8ba1\u7b97\u5f97\u5230\u7b54\u6848\uff0c\u90a3\u4e48\u8fd9\u9898\u7b54\u6848\u8fd8\u662f\u6bd4\u8f83\u663e\u7136\u7684\uff0c\u5373\u679a\u4e3e\u6bcf\u4e2a\u5207\u5206\u70b9\u4e24\u7aef\u7684\u6807\u8bb0\u70b9\u7684\u4e2a\u6570\u4e58\u8d77\u6765\u52a0\u548c\u5c31\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\u4e86\n\n\u6bcf\u4e2a\u524d\u7f00\u7684\u6807\u8bb0\u70b9\u4e2a\u6570\u5373\u4e3a\u5176fail\u6307\u9488\u4e0a\u6240\u6709\u7684\u6807\u8bb0\u70b9\u6570\u91cf\u7684\u548c\uff0cSAM\u6b63\u5411\u9012\u63a8\u9884\u5904\u7406\u4e00\u4e0b\uff0c\u7136\u540e\u6b63\u53cd\u5404\u505a\u4e00\u904d\u9884\u5904\u7406\u518d\u4e58\u8d77\u6765\u5c31\u662f\u7b54\u6848\u3002\n\n\nAC\u4ee3\u7801\uff1a\n\n```java\nimport java.math.BigInteger;\nimport java.util.*;\nimport java.io.*;\n\npublic class Main {\n    static String pp[];\n    static String s;\n    static long prefix[], suffix[];\n    static int n;\n    static void solve(long res[])\n    {\n        SAM1 sam=new SAM1();\n        sam.init(410000,26);\n        for(int i=0;i<s.length();++i)\n        sam.insert(s.charAt(i) - 'a');\n        sam.topo();\n        SAM_node k = sam.root;\n        for (int i = 1; i <= n; ++i)\n        {\n            k = sam.root;\n            for (int j=0;j<pp[i].length();++j)\n            if (k!=null)\n                k = k.next[pp[i].charAt(j) - 'a'];\n            if (k!=null)\n                k.times++;\n            StringBuilder sp=new StringBuilder(pp[i]);\n            sp.reverse();\n            pp[i]=sp.toString();\n        }\n        int cnt = sam.cur;\n        for (int i = 1; i < cnt; ++i)\n            sam.pool[i].times += sam.pool[i].pre.times;\n        k = sam.root;\n        for (int i = 0; i < s.length(); ++i)\n        {\n            k = k.next[s.charAt(i) - 'a'];\n            res[i + 1] = k.times;\n        }\n    }\n    public static InputReader in = new InputReader(System.in);\n    public static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));\n    public static void main(String[] args)\n    {\n        prefix=new long[210000];\n        suffix=new long[210000];\n        long suffix2[]=new long[210000];\n        Arrays.fill(suffix2,0);\n        Arrays.fill(prefix,0);\n        Arrays.fill(suffix,0);\n        pp=new String[210000];\n        s=in.next();\n        n=in.nextInt();\n        for(int i=1;i<=n;++i)\n            pp[i]=in.next();\n        solve(prefix);\n        StringBuilder sp=new StringBuilder(s);\n        sp.reverse();\n        s=sp.toString();\n        solve(suffix);\n\n        for (int i = 1; i <= s.length(); ++i)\n            suffix2[i]=suffix[s.length()-i+1];\n        long ans = 0;\n        for (int i = 1; i < s.length(); ++i)\n            ans += prefix[i] * suffix2[i + 1];\n        out.println(ans);\n        out.flush();\n        out.close();\n    }\n}\nclass SAM_node\n{\n    SAM_node pre,next[];\n    int step;\n    long times;\n    SAM_node(int sigma)\n    {\n        times=0;\n        next=new SAM_node[sigma];\n        step=0;\n        pre=null;\n    }\n}\nclass SAM1\n{\n    SAM_node SAM_pool[],root,last;\n    int d[];\n    SAM_node pool[];\n    int cur;\n    int sigma;\n    void topo() {\n        // \u6c42\u51faparent\u6811\u7684\u62d3\u6251\u5e8f\n        int cnt = cur;\n        int maxVal = 0;\n        Arrays.fill(d, 0);\n        for (int i = 1; i < cnt; i++) {\n            maxVal = Math.max(maxVal, SAM_pool[i].step);\n            d[SAM_pool[i].step]++;\n        }\n        for (int i = 1; i <= maxVal; i++)\n            d[i] += d[i - 1];\n        for (int i = 1; i < cnt; i++)\n            pool[d[SAM_pool[i].step]--] = SAM_pool[i];\n        pool[0] = root;\n    }\n    void init(int a,int b)\n    {\n        d=new int[a];\n        pool=new SAM_node[a];\n        SAM_pool=new SAM_node[a];\n        SAM_pool[0]=new SAM_node(b);\n        sigma=b;\n        root=last=SAM_pool[0];\n        cur=1;\n    }\n    void insert(int w)\n    {\n        SAM_node p=last;\n        SAM_pool[cur]=new SAM_node(sigma);\n        SAM_node np=SAM_pool[cur];\n        last=np;\n        cur++;\n        np.step=p.step+1;\n        while (p!=null && p.next[w]==null)\n        {\n            p.next[w]=np;\n            p = p.pre;\n        }\n        if(p==null)\n        {\n            np.pre=root;\n        }\n        else\n        {\n            SAM_node q=p.next[w];\n            if(p.step+1==q.step)\n                np.pre=q;\n            else {\n                SAM_node nq = SAM_pool[cur++] = new SAM_node(sigma);\n                nq.next = Arrays.copyOf(q.next, sigma);\n                nq.step = p.step + 1;\n                nq.pre = q.pre;\n                q.pre = nq;\n                np.pre = nq;\n                while (p != null && p.next[w]==(q)) {\n                    p.next[w] = nq;\n                    p = p.pre;\n                }\n            }\n        }\n    }\n}\nclass InputReader{\n    private final static int BUF_SZ = 65536;\n    BufferedReader in;\n    StringTokenizer tokenizer;\n    public InputReader(InputStream in) {\n        super();\n        this.in = new BufferedReader(new InputStreamReader(in),BUF_SZ);\n        tokenizer = new StringTokenizer(\"\");\n    }\n    public boolean hasNext() {  //\u5904\u7406EOF\n        while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            try {\n                String line = in.readLine();\n                if(line == null) return false;\n                tokenizer = new StringTokenizer(line);\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n        return true;\n    }\n    public String next() {\n        while (!tokenizer.hasMoreTokens()) {\n            try {\n                tokenizer = new StringTokenizer(in.readLine());\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n        return tokenizer.nextToken();\n    }\n    public int nextInt() {\n        return Integer.parseInt(next());\n    }\n    public long nextLong()\n    {\n        return Long.parseLong(next());\n    }\n}\n```\n",
        "postTime": 1565333697,
        "uid": 154957,
        "name": "qiyue7",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1202E \u3010You Are Given Some Strings...\u3011"
    },
    {
        "content": "\u4f3c\u4e4e\u9898\u89e3\u533a\u8fd8\u6ca1\u8fd9\u4e2a\u505a\u6cd5\n\n\u9996\u5148\u6709\u4e2a\u86ee\u7ecf\u5178\u7684\u6027\u8d28 \u5bf9\u4e8e\u4e92\u4e0d\u76f8\u540c\u7684 $T_1\\dots T_n$ \u5728 $S$ \u4e2d\u7684\u51fa\u73b0\u4f4d\u7f6e\u91cf\u7ea7\u662f $O(|S|\\sqrt{\\sum T_i})$ \u7684\n\n\u8bc1\u660e\u7684\u8bdd \u8003\u8651 $T$ \u4e0e $S[1,i]$ \u7684\u540e\u7f00\u7684\u76f8\u540c\u60c5\u51b5 \n\n\u7531\u4e8e $T$ \u4e2d\u4e32\u4e0d\u540c \u6240\u4ee5\u5339\u914d\u957f\u5ea6\u53ea\u80fd\u662f $1,2,3,\\dots i$ \u603b\u548c\u662f\u5e73\u65b9\u91cf\u7ea7\u7684 \u6240\u4ee5\u53ea\u80fd\u6709 $T$ \u603b\u957f\u6839\u53f7\u91cf\u7ea7\n\n\u6240\u4ee5\u603b\u5171\u7684\u5339\u914d\u6b21\u6570\u662f\u6bcf\u4e2a\u524d\u7f00\u7684\u540e\u7f00\u4e0e $T$ \u5339\u914d\u6210\u529f\u7684\u6b21\u6570\u548c \u662f $|S|\\sqrt{\\sum |T_i|}$ \u7684\n\n\u56de\u5230\u8fd9\u9053\u9898 \u6211\u4eec\u8003\u8651\u5982\u679c\u77e5\u9053\u6bcf\u4e2a\u4e32 $T_i$ \u5728 $S$ \u4e2d\u6240\u6709\u51fa\u73b0\u4f4d\u7f6e\u540e\u5982\u4f55\u89e3\u51b3\u6b64\u95ee\u9898\n\n\u6211\u4eec\u8bb0\u5f55\u4e00\u4e2a\u6570\u7ec4 \u7ed9\u6bcf\u4e2a\u4e32\u6240\u6709\u51fa\u73b0\u5f00\u5934\u4f4d\u7f6e\u90fd $+1$ \u7136\u540e\u8fdb\u884c\u67e5\u8be2 \u6bcf\u4e2a\u4e32\u67e5\u6240\u6709\u51fa\u73b0\u5f00\u5934\u4f4d\u7f6e\u51cf\u53bb $|T_i|$ \u7684\u4f4d\u7f6e\u7684\u503c\u52a0\u5230\u7b54\u6848\u4e2d\u5373\u53ef \u601d\u8def\u6709\u70b9\u50cf\u70b9\u5206\u6cbb\u7684\u5904\u7406\u8fc7\u7a0b\n\n\u5b9e\u73b0\u4e0a\u53ef\u4ee5\u7528AC\u81ea\u52a8\u673a \u628a\u6240\u6709 $T_i$ \u63d2\u8fdbAC\u81ea\u52a8\u673a \u987a\u4fbf\u5b8c\u6210\u4e86\u53bb\u91cd \u8bb0\u5f55\u4e00\u4e2a nxt \u6570\u7ec4 \u5904\u7406 fail \u6811\u4e0a\u4e0a\u4e00\u4e2a\u662f\u5b8c\u6574\u4e32\u7684\u4f4d\u7f6e \u7136\u540e\u8ba9 $S$ \u5728\u81ea\u52a8\u673a\u4e0a\u8dd1 \u8df3\u6240\u6709 nxt \u7edf\u8ba1\u7b54\u6848\u5373\u53ef\n\n\u603b\u590d\u6742\u5ea6\u662f AC\u81ea\u52a8\u673a\u7684\u5e38\u89c4\u590d\u6742\u5ea6\u548c $O(|S|\\sqrt{\\sum |T_i|})$ \u7684\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define ll long long\n#define int ll\n#define pii pair<int,int>\n#define fi first\n#define se second\n#define mk make_pair\n#define pb emplace_back\nconst int N=2e5+7;\nint a[N],ANS;\nstruct AC\n{\n\tsigned d[N][26],tot,fail[N],len[N],nxt[N];\n\tint v[N];\n\tvoid ins(string &s,int n)\n\t{\n\t\tint x=0;\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tint c=s[i]-'a';\n\t\t\tif(!d[x][c])d[x][c]=++tot;\n\t\t\tx=d[x][c];\n\t\t}\n\t\tv[x]++,len[x]=n;\n\t}\n\tvoid build()\n\t{\n\t\tqueue<int>q;\n\t\tfor(auto y:d[0])if(y)q.push(y);\n\t\twhile(!q.empty())\n\t\t{\n\t\t\tint x=q.front();\n\t\t\tq.pop();\n\t\t\tnxt[x]=v[x]?x:nxt[fail[x]];\n\t\t\tfor(int i=0;i<26;i++)\n\t\t\t{\n\t\t\t\tif(d[x][i])fail[d[x][i]]=d[fail[x]][i],q.push(d[x][i]);\n\t\t\t\telse d[x][i]=d[fail[x]][i];\n\t\t\t}\n\t\t}\n\t}\n\tvoid solve(string &s,int n)\n\t{\n\t\tfor(int i=1,x=0;i<=n;i++)\n\t\t{\n\t\t\tint c=s[i]-'a';\n\t\t\tx=d[x][c];\n\t\t\tint y=nxt[x];\n\t\t\twhile(y)\n\t\t\t{\n\t\t\t\ta[i]+=v[y];\n\t\t\t\ty=nxt[fail[y]];\n\t\t\t}\n\t\t}\n\t\tfor(int i=1,x=0;i<=n;i++)\n\t\t{\n\t\t\tint c=s[i]-'a';\n\t\t\tx=d[x][c];\n\t\t\tint y=nxt[x];\n\t\t\twhile(y)\n\t\t\t{\n\t\t\t\tANS+=a[i-len[y]]*v[y];\n\t\t\t\ty=nxt[fail[y]];\n\t\t\t}\n\t\t}\n\t}\n}ac;\ninline int lth(string &s)\n{\n\ts=' '+s;\n\treturn s.size()-1;\n}\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0);\n\tstring s;\n\tcin>>s;\n\tint n;\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tstring s;\n\t\tcin>>s;\n\t\tac.ins(s,lth(s));\n\t}\n\tac.build();\n\tac.solve(s,lth(s));\n\tcout<<ANS;\n\treturn 0;\n}\n```\n",
        "postTime": 1669968179,
        "uid": 223560,
        "name": "_HL_",
        "ccfLevel": 0,
        "title": "CF1202E\u9898\u89e3"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u5b9a $1$ \u4e2a\u5b57\u7b26\u4e32 $t$ $(1 \\le \\lvert t \\rvert\\le 2 \\times 10^5$)\uff0c\u548c $n$ $(1 \\le n \\le 2 \\times 10^5)$ \u4e2a\u5b57\u7b26\u4e32 $s_1,s_2,\\cdots,s_n$\uff0c\u4fdd\u8bc1 $\\sum\\limits_{i=1}^n \\lvert s_i \\rvert\\le 2 \\times 10^5$\u3002\u8bf7\u8ba1\u7b97 $\\sum\\limits_{i=1}^n \\sum\\limits_{j=1}^n f(t,s_i+s_j)$\uff0c\u5176\u4e2d $f(t,s_i+s_j)$ \u8868\u793a\u5b57\u7b26\u4e32 $s_i+s_j$ \u5728\u5b57\u7b26\u4e32 $t$ \u4e2d\u7684\u51fa\u73b0\u6b21\u6570\uff0c$s_i+s_j$ \u8868\u793a\u5c06 $s_j$ \u62fc\u5728 $s_i$ \u7684\u540e\u9762\u3002\n\n## \u601d\u8def\n\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u679a\u4e3e\u5b57\u7b26\u4e32 $t$ \u7684\u6bcf\u4e2a\u4f4d\u7f6e\u4f5c\u4e3a $s_i+s_j$ \u4e2d\u7684\u65ad\u70b9\uff0c\u82e5\u8fd9\u4e2a\u4f4d\u7f6e\u4e3a $i$\uff0c\u90a3\u4e48\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5c31\u662f\u4ee5 $i$ \u4e3a\u7ed3\u5c3e\u7684 $s$ \u7684\u6570\u91cf\u4e58\u4e0a\u4ee5 $i+1$ \u4e3a\u5f00\u5934\u7684 $s$ \u7684\u6570\u91cf\u3002\u8ba1\u7b97\u4ee5 $i$ \u4e3a\u7ed3\u5c3e\u7684 $s$ \u7684\u6570\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u6240\u6709\u7684 $s$ \u5efa $1$ \u4e2a AC \u81ea\u52a8\u673a\uff0c\u5e76\u7edf\u8bb0 $s$ \u4f5c\u4e3a\u540e\u7f00\u5728 AC \u81ea\u52a8\u673a\u4e0a\u6bcf\u4e2a\u8282\u70b9\u4ee3\u8868\u7684\u5b57\u7b26\u4e32\u4e2d\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u518d\u5728 AC \u81ea\u52a8\u673a\u4e0a\u8dd1\u4e00\u904d $t$ \u5c31\u80fd\u6c42\u51fa\u7b54\u6848\u3002\u8ba1\u7b97\u4ee5 $i+1$ \u4e3a\u5f00\u5934\u7684 $s$ \u7684\u6570\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u628a $t$ \u548c\u6240\u6709\u7684 $s$ \u53cd\u8f6c\uff0c\u540c\u7406\u5efa AC \u81ea\u52a8\u673a\u8dd1\u4e00\u904d\u4e5f\u80fd\u6c42\u51fa\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define re register\n#define ll long long\nusing namespace std;\ninline int read()\n{\n\tint res=0;\n\tbool op=0;\n\tchar ch=getchar();\n\twhile(!isdigit(ch))\n\t{\n\t\top|=ch=='-';\n\t\tch=getchar();\n\t}\n\twhile(isdigit(ch))\n\t{\n\t\tres=(res<<3)+(res<<1)+(ch^48);\n\t\tch=getchar();\n\t}\n\treturn op?-res:res;\n}\ninline void write(ll x)\n{\n\tif(x<0)\n\t{\n\t\tputchar('-');\n\t\tx=-x;\n\t}\n\tif(x>9) write(x/10);\n\tputchar(x%10^48);\n}\nint n,tr[200005][26],tot,fail[200005];\nll c[200005],sum[200005],ans;\nvector<int>g[200005];\nstring t,s[200005];\ninline void insert(int x)\n{\n\tint o=0;\n\tfor(re int i=0;i<s[x].size();++i)\n\t{\n\t\tif(!tr[o][s[x][i]-'a']) tr[o][s[x][i]-'a']=++tot;\n\t\to=tr[o][s[x][i]-'a'];\n\t}\n\t++c[o];\n}\ninline void build()\n{\n\tqueue<int>q;\n\tfor(re int i=0;i<26;++i) if(tr[0][i]) q.push(tr[0][i]);\n\twhile(q.size())\n\t{\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tg[fail[u]].push_back(u);\n\t\tfor(re int i=0;i<26;++i)\n\t\t{\n\t\t\tif(tr[u][i])\n\t\t\t{\n\t\t\t\tfail[tr[u][i]]=tr[fail[u]][i];\n\t\t\t\tq.push(tr[u][i]);\n\t\t\t}\n\t\t\telse tr[u][i]=tr[fail[u]][i];\n\t\t}\n\t}\n}\ninline void dfs(int u)\n{\n\tfor(re int i=0;i<g[u].size();++i)\n\t{\n\t\tint v=g[u][i];\n\t\tc[v]+=c[u];\n\t\tdfs(v);\n\t}\n}\ninline void query()\n{\n\tint o=0;\n\tfor(re int i=1;i<=t.size();++i)\n\t{\n\t\to=tr[o][t[i-1]-'a'];\n\t\tsum[i]=c[o];\n\t}\n}\nint main()\n{\n\tcin>>t;\n\tn=read();\n\tfor(re int i=1;i<=n;++i)\n\t{\n\t\tcin>>s[i];\n\t\tinsert(i);\n\t}\n\tbuild();\n\tdfs(0);\n\tquery();\n\tfor(re int i=0;i<=tot;++i)\n\t{\n\t\tc[i]=fail[i]=0;\n\t\tg[i].clear();\n\t\tfor(re int j=0;j<26;++j) tr[i][j]=0;\n\t}\n\ttot=0;\n\tfor(re int i=1;i<=n;++i)\n\t{\n\t\treverse(s[i].begin(),s[i].end());\n\t\tinsert(i);\n\t}\n\tbuild();\n\tdfs(0);\n\treverse(t.begin(),t.end());\n\tint o=0;\n\tfor(re int i=1;i<t.size();++i)\n\t{\n\t\to=tr[o][t[i-1]-'a'];\n\t\tans+=c[o]*sum[t.size()-i];\n\t}\n\twrite(ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1666949071,
        "uid": 488734,
        "name": "wrzSama",
        "ccfLevel": 7,
        "title": "CF1202E You Are Given Some Strings... \u9898\u89e3"
    },
    {
        "content": "[LINK](https://www.luogu.com.cn/problem/CF1202E)\n\n---\n\n\u8003\u8651\u628a\u6240\u6709\u4e32\u5efa\u7acb$ACAM$\n\n\u90a3\u4e48\u5176\u5b9e\u95ee\u9898\u7b49\u4ef7\u4e8e\n\n\u8ba1\u7b97$t$\u4e32\u7684\u6bcf\u4e2a\u524d\u7f00\u4e2d,\u6709\u591a\u5c11\u540e\u7f00\u5339\u914d\u591a\u5c11$s_i+s_j$\u7684\u5f62\u5f0f\n\n**\u4e8e\u662f\u73b0\u5728\u6211\u4eec\u5355\u72ec\u5bf9\u6bcf\u4e00\u4e2a\u524d\u7f00\u6765\u8ba1\u7b97\u7b54\u6848**\n\n\u6211\u4eec\u9884\u5904\u7406\u4e00\u4e2a$ok[x]$\u8868\u793a\u8282\u70b9$x$\u80fd\u901a\u8fc7$fail$\u8fb9\u8f6c\u79fb\u5230\u591a\u5c11\u4e2a\u5355\u8bcd\n\n\u90a3\u4e48\u8bbe$x_1,x_2$\u90fd\u662f\u4e32$t$\u7684\u524d\u7f00\u8282\u70b9,$|x_1|,|x_2|$\u5206\u522b\u8868\u793a\u8fd9\u4e24\u4e2a\u524d\u7f00\u7684\u957f\u5ea6\n\n$x_2$\u901a\u8fc7\u8df3$fail$\u53d8\u80fd\u5230\u4e00\u4e2a\u957f\u5ea6\u4e3a$k$\u7684\u5355\u8bcd,\u4e14\u6ee1\u8db3$|x_2|-k=|x_1|$\n\n\u90a3\u4e48\u7b54\u6848\u81ea\u7136\u53ef\u4ee5\u52a0\u4e0a$ok[x_1]$\n\n\u4e8e\u662f\u6709\u4ee3\u7801[LINK](https://paste.ubuntu.com/p/zVVxwh57Rg/)\n\n---\n\n\u4e0d\u96be\u53d1\u73b0\u8fd9\u6837\u66b4\u529b\u8df3$fail$,\u662f\u4e0d\u5408\u7406\u7684,$2*10^5$\u4e2a$'a'$\u5c31\u4f1a\u88ab\u5361\u6b7b\u4e86\n\n\u8bbe$t$\u4e32\u7684\u67d0\u4e2a\u524d\u7f00\u8282\u70b9\u662f$x$,\u4e0d\u59a8\u8003\u8651$ok[x]$\u88ab\u8ba1\u7b97\u591a\u5c11\u6b21\n\n$ok[x]$\u88ab\u8ba1\u7b97\u7684\u6b21\u6570,\u5c31\u662f$[x+1,|t|]$\u6240\u6709\u524d\u7f00\u88ab\u5339\u914d\u7684\u6b21\u6570\n\n\u524d\u7f00\u662f\u7b97\u4e0d\u4e86\u7684,$ACAM$\u53ea\u80fd\u8ba1\u7b97\u540e\u7f00....\n\n\u6240\u4ee5\u6211\u4eec\u518d\u628a$t$\u7684\u53cd\u4e32\u4e5f\u63d2\u5165$ACAM$,\u90a3\u4e48\u53cd\u4e32\u7684\u540e\u7f00\u5c31\u662f\u6b63\u4e32\u7684\u524d\u7f00\u561b!!\n\n\u540c\u65f6\u6ce8\u610f,$t$\u7684\u6b63\u4e32\u548c\u53cd\u4e32\u9700\u8981\u5206\u522b\u5efa\u7acb\u81ea\u52a8\u673a,\u56e0\u4e3a\u53cd\u4e32\u81ea\u52a8\u673a\u63d2\u5165\u7684\u5b57\u7b26\u4e32\u4e5f\u5fc5\u987b\u662f\u53cd\u7684\n\n\u56e0\u4e3a\u5339\u914d\u7684\u65f6\u5019\u662f\u5728\u62ff\u53cd\u4e32\u5339\u914d\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\nconst int maxn = 4e5+10;\nint n,ID[maxn];\nchar t[maxn],s[maxn],ft[maxn];\nstruct ACAM\n{\n\tint ok[maxn],fail[maxn],zi[maxn][26],id;\n\tvoid insert(char a[],int val)\n\t{\n\t\tint len = strlen( a+1 ), now = 0;\n\t\tfor(int i=1;i<=len;i++)\n\t\t{\n\t\t\tif( !zi[now][a[i]-'a'] )\tzi[now][a[i]-'a'] = ++id;\n\t\t\tnow = zi[now][a[i]-'a']; \n\t\t}\n\t\tok[now]+=val;\n\t}\n\tvoid get_fail()\n\t{\n\t\tqueue<int>q;\n\t\tfor(int i=0;i<=25;i++)\n\t\t\tif( zi[0][i] )\tq.push( zi[0][i] );\n\t\twhile( !q.empty() )\n\t\t{\n\t\t\tint u = q.front(); q.pop();\n\t\t\tok[u] += ok[fail[u]];\n\t\t\tfor(int i=0;i<=25;i++)\n\t\t\t{\n\t\t\t\tif( zi[u][i] )\tfail[zi[u][i]] = zi[fail[u]][i],q.push( zi[u][i] );\n\t\t\t\telse\tzi[u][i] = zi[fail[u]][i];\n\t\t\t}\n\t\t}\n\t}\n}T1,T2;\nsigned main()\n{\n\tscanf(\"%s\",t+1 ); \n\tint l = strlen( t+1 ); for(int i=1;i<=l;i++)\tft[i] = t[l-i+1]; \n\tT1.insert( t,0 );  T2.insert( ft,0 );\n\tcin >> n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%s\",s+1 ),T1.insert( s,1 );\n\t\treverse(s+1,s+1+strlen(s+1) ); T2.insert( s,1 );\n\t}\n\tT1.get_fail(); T2.get_fail();\n\t\n\tint now = 0, len = strlen( t+1 ), ans = 0;\n\tfor(int i=1;i<=len;i++) { now = T2.zi[now][ft[i]-'a'];\tID[i] = now; }//\u4fdd\u5b58\u53cd\u4e32\u7684\u6240\u6709\u4e0b\u6807 \n\tnow = 0;\n\tfor(int i=1;i<=len-1;i++)\n\t{\n\t\tnow = T1.zi[now][t[i]-'a'];\n\t\tans += T1.ok[now]*T2.ok[ID[len-i]];\n\t}\n\tcout << ans;\n}\n```\n",
        "postTime": 1614324023,
        "uid": 299810,
        "name": "issue_is_fw",
        "ccfLevel": 0,
        "title": "E. You Are Given Some Strings..."
    }
]