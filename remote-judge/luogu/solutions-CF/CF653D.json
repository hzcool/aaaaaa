[
    {
        "content": "- ## CF653D Delivery Bears\n\n\u6bd4\u8f83\u7279\u522b\u7684\u7f51\u7edc\u6d41\u9898\u76ee\u3002\n\n~~\u5c31\u662f\u65e0\u8111\u4e71\u641e\uff0c\u76f8\u4fe1\u81ea\u5df1\u5c31\u8fc7\u4e86\uff01~~\n\n\n-----------\n\n- ### Prelude\n\n\u8fd9\u4e2a\u9898\u4e0a\u624b\u5c31\u611f\u89c9\u592a\u795e\u5fc5\u4e86\uff0c\u6839\u672c\u611f\u89c9\u4e0d\u662f\u7f51\u7edc\u6d41\u3002~~\u8be5\u7528\u7f51\u7edc\u6d41\u4f60\u4e0d\u7528\uff0c\u4e0d\u7528\u7684\u4f60\u4e00\u4e2a\u52b2\u60f3\u3002~~\n\n\u56e0\u4e3a\u4f17\u6240\u5468\u77e5\u9898\u9762\u544a\u8bc9\u4f60\u4e00\u4e2a\u7b97\u6cd5\u7684\u90a3\u8fd9\u4e2a\u9898\u80af\u5b9a\u4e0d\u7528\u8fd9\u4e2a\u7b97\u6cd5\uff08\u96fe\uff09\u3002\n\n\u4e3a\u5565\u8981\u8bf4\u8fd9\u4e2a\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u9898\u4e0a\u624b\u4e00\u770b\uff1a\u6bcf\u6761\u8fb9\u6709\u5bb9\u91cf\uff0c\u6709\u6d41\u91cf\uff0c\u6c42\u6700\u5927\u6d41\u91cf\uff0c\u8fd9\u4e0d\u662f\u7f51\u7edc\u6d41\u5417\uff1f\n\n\u4f46\u662f\u5176\u5b9e\u611f\u89c9\u5f88\u96be\u505a\uff0c\u56e0\u4e3a\u8981\u6c42\u7684\u6d41\u91cf\u9650\u5236\u592a\u591a\uff0c\u5f88\u96be\u76f4\u63a5\u505a\u3002\u4e8e\u662f\u6211\u4eec\u9700\u8981\u8f6c\u6362\u601d\u8def\u4e86\u3002\n\n--------------\n\n- ### Solution\n\n\u8fd9\u4e2a\u9898\u4e5f\u6ca1\u5565\u5efa\u6a21\uff0c\u76f4\u63a5\u8bb2\u5427\u3002\n\n\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u8003\u8651\u5230\u5bf9\u4e8e\u4e00\u4e2a\u8981\u6c42\u7684\u91cd\u91cf\u7684\u9650\u5236\u53ea\u662f\u8fb9\u4e0a\u7684\u9650\u5236 $c_i$ \u3002\u5982\u679c\u6211\u4eec\u77e5\u9053\u8d27\u7269\u7684\u7edf\u4e00\u91cd\u91cf $d$ \uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ea\u9700\u8981\u8003\u8651\u4e00\u6761\u8fb9\u4e0a\u7ecf\u8fc7\u7684\u718a\u7684\u4e2a\u6570\u4e0a\u9650 $\\displaystyle\\lfloor \\frac{c_i}{d}\\rfloor$ \u3002\u8fd9\u6837\u6709\u663e\u7136\u7684\u597d\u5904\uff1a\n\n- \u6211\u4eec\u53ef\u4ee5\u628a\u8fd0\u7b97\u8f6c\u6362\u6210 `int` \u7c7b\u578b\u7684\u3002\n- \u8fd9\u6837\u65b9\u4fbf\u5224\u65ad\u6bcf\u53ea\u718a\u662f\u5426\u80fd\u5230\u8fbe\u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u76f4\u63a5\u5224\u4e86\uff0c\u56e0\u4e3a\u628a\u6bcf\u53ea\u718a\u770b\u4f5c $1$ \u7684\u6d41\u91cf\uff0c\u90a3\u4e48\u6bcf\u53ea\u718a $1\\rightarrow n$ \u4e00\u8def\u8d70\u4e0b\u53bb\u5982\u679c\u4e0d\u6ea2\u51fa\u5fc5\u7136\u6709 $x$ \u7684\u6d41\u91cf\u3002\u6240\u4ee5\u53ea\u9700\u8981\u5224\u65ad\u80fd\u5426\u6709 $x$ \u6d41\u91cf\u5230\u8fbe\u6c47\u70b9 $n$ \u5c31\u8fd9\u4e2a $d$ \u6ee1\u8db3\u6761\u4ef6\u3002\n\n\u90a3\u4e48 $d$ \u600e\u4e48\u786e\u5b9a\u5462\uff0c\u90fd\u8bf4\u5230\u8fd9\u4efd\u4e0a\u4e86\uff0c\u8fd8\u4e0d\u60f3\u60f3\u4e8c\u5206\u7b54\u6848\uff1f\n\n\u4e0a\u9762\u90a3\u4e2a\u663e\u7136\u662f `check(mid)` \u7684\u601d\u8def\uff0c\u6240\u4ee5\u76f4\u63a5\u505a\u4e8c\u5206\u7b54\u6848\uff0c\u4e0a\u754c `r` \u6700\u591a\u4e5f\u5c31 $1e6$ \u3002\n\n\u4e00\u770b $n\\leq 50$ \uff0c\u663e\u7136\u53ef\u4ee5\u8fc7\u3002\n\n\u6700\u540e\u7684\u7b54\u6848\u662f\u603b\u91cd\u91cf\uff0c\u6240\u4ee5\u662f $x\\times ans$ \u3002\n\n-------------------------\n\n- ### Code\n\n\u5b9e\u73b0\u5224\u65ad\u76f4\u63a5\u7528 $\\texttt{Dinic}$ \u8dd1\u6700\u5927\u6d41\u5c31\u53ef\u4ee5\u4e86\uff0c\u8d85\u8fc7 $x$ \u5373\u662f\u5408\u6cd5\u7684\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<iostream>\n#include<cstring>\n#include<cmath>\n#include<queue>\n#include<map>\n#include<stack>\n//#include<bits/stdc++.h>\n\n#define ll long long\n#define ull unsigned long long\n#define INL inline\n#define Re register\n\n//Tosaka Rin Suki~\nusing namespace std;\n\nINL int read()\n{\n\t int x=0;int w=1;\n\t char ch=getchar();\n\t while((ch<'0'||ch>'9')&&ch!='-')ch=getchar();\n\t if(ch=='-')w=-1,ch=getchar();\n\t while(ch>='0'&&ch<='9')\n\t {x=(x<<1)+(x<<3)+ch-48,ch=getchar();}\n\t return x*w;\n}\n\nINL int mx(int a,int b){return a>b?a:b;}\nINL int mn(int a,int b){return a<b?a:b;}\n\nconst int INF=1<<30,N=1005,M=1000005;\n\nint n,m,x,S,T;\n\nstruct Rey\n{\n\tint nxt,to,c;\n}e[M];\nint head[N],cnt;\nint dis[N],cur[N];\nint a[N],b[N],c[N];\n\nINL void add_edge(int u,int v,int w)\n{\n\te[++cnt].nxt=head[u];\n\te[cnt].to=v;\n\te[cnt].c=w;\n\thead[u]=cnt;\n}\n\nINL void add_flow(int u,int v,int w)\n{\n\tadd_edge(u,v,w);\n\tadd_edge(v,u,0);\n}\n\nINL bool bfs()\n{\n\tqueue <int> q;\n\tq.push(S);\n\tmemset(dis,0,sizeof(dis));\n\tdis[S]=1;\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();q.pop();\n\t\tfor(int i=head[u];i;i=e[i].nxt)\n\t\t{\n\t\t\tint go=e[i].to;\n\t\t\tif(e[i].c>0&&!dis[go])\n\t\t\t{\n\t\t\t\tdis[go]=dis[u]+1;\n\t\t\t\tq.push(go);\n\t\t\t\tif(dis[T])return 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn dis[T]!=0;\n}\n\nINL int dfs(int x,int flow)\n{\n\tif(x==T||!flow)return flow;\n\tint usd=0;\n\tfor(int i=cur[x];i;i=e[i].nxt)\n\t{\n        cur[x]=i;\n\t\tint go=e[i].to;\n\t\tif(e[i].c>0&&dis[go]==dis[x]+1)\n\t\t{\n\t\t\tint C=dfs(go,min(flow-usd,e[i].c));\n\t\t\tusd+=C;\n\t\t\te[i].c-=C,e[i^1].c+=C;\n\t\t\tif(flow==0)return usd;\n\t\t}\n\t}\n\tif(!usd)dis[x]=0;\n\treturn usd;\n}\n\nINL int Dinic()\n{\n\tint fl=0;\n\twhile(bfs())\n\t{\n\t\tmemcpy(cur,head,sizeof(head));\n\t\tfl+=dfs(S,INF);\n\t}\n\treturn fl;\n}\n\nINL bool check(double p)\n{\n\tcnt=1;memset(head,0,sizeof(head));\n\tfor(int i=1;i<=m;i++)\n\t{\n        int x=min(c[i]/p,1e9);//p \u6709\u65f6\u5019\u4f1a\u83ab\u540d\u5176\u5999\u7684\u5f88\u5c0f\u6216\u8005\u4e00\u4e9b\u6ea2\u51fa\u95ee\u9898\uff0c\u6240\u4ee5\u7279\u5224\u3002\n\t\tadd_flow(a[i],b[i],x);\n\t}\n\treturn Dinic()>=x;\n}\n\nint main()\n{\n\t//freopen(\".in\",\"r\",stdin);\n\t//freopen(\".out\",\"w\",stdout);\n\tn=read(),m=read(),x=read();\n\tS=1,T=n;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\ta[i]=read();b[i]=read(),c[i]=read();\n\t}\n\tdouble l=0,r=1e6;\n\tfor(int i=0;i<80;i++)//\u56e0\u4e3a\u662f double \u6240\u4ee5\u76f4\u63a5\u66b4\u529b\u5faa\u73af\u591a\u6b21\uff0c\u5728\u590d\u6742\u5ea6\u80fd\u627f\u53d7\u8303\u56f4\u4ee5\u53ca\u8bef\u5dee\u8303\u56f4\u5185\u5373\u53ef\u3002\n\t{\n\t\tdouble mid=(l+r)/2;\n\t\tif(check(mid))l=mid;\n\t\telse r=mid;\n\t}\n\tprintf(\"%.12lf\\n\",(double)l*x);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1614270172,
        "uid": 57273,
        "name": "Reywmp",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF653D \u3010Delivery Bears\u3011"
    }
]