[
    {
        "content": "#  \u770b\u5230\u8fd9\u9898\u6ca1\u4eba\u5c31\u5199~~\uff08shui\uff09~~\u4e00\u53d1\u9898\u89e3\n\n\n\u9996\u5148\u8bbef(i)\u4e3a\u4ece\u7ec8\u70b9\u80fd\u6d3b\u5230i\u7684\u65b9\u6848\u6570\n\u5219\u9700\u6c42\u51fa$f(1)$\u7684\u503c\n\n$f(i)=f(i-1)*(1-p(i))+f(i+1)*p(i)$\n\n\u7531\u6b64\u53ef\u63a8\u51fa\n$p(i)*(f(i+1)-f(i-1))=f(i)-f(i-1)$\n\n\u8bbe$g(i)=f(i)-f(i-1)$\n\n\u6240\u4ee5\u6709$(g(i+1)+g(i))*p(i)=g(i)$\n\n\u7531\u6b64\u63a8\u51fa$g(i)*(1-p(i))/p(i)=g(i+1)$\n\n\u56e0\u4e3a$f(n)=1,f(0)=0$\n\n\u6240\u4ee5$g(1)+g(2)+...+g(n)=1$\n\n\u8bbe$(1-p(i))/(p(i))=t(i)$\n\n\u6240\u4ee5$g(1)*(1+t(1)+t(1)t(2)+...+t(1)t(2)...t(n))=1$\n\n\u6240\u4ee5\u53ea\u9700\u7ef4\u62a4\u533a\u95f4\u53f3\u8fb9\u62ec\u53f7\u8fd9\u4e2a\u503c\u5373\u53ef\n\n\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\n\n$A=t(1)t(2)t(3)...t(n)$\n\n$B=t(1)+t(1)t(2)+...+t(1)t(2)...t(n)$\n\n\u5219\u5408\u5e76\u540e\u7684\u503c$C=B[l,mid]+B(mid,r]*A[l,mid]$\n\n#\u7ec8\u4e8e\u5199\u5b8c\u4e86~~\uff08\u9003\uff09~~# \n\n```cpp\n#include <bits/stdc++.h>\n#define lson l,mid,rt<<1\n#define rson mid+1,r,rt<<1|1\nusing namespace std;\n#define ll long long\ntemplate <class T> void read(T &x) {\n\tx = 0;\n\tint f = 1;\n\tchar ch = getchar();\n\twhile(ch < '0' || ch > '9') {\n\t\tif(ch == '-') f = -1;\n\t\tch = getchar();\n\t}\n\twhile(ch >= '0' && ch <= '9') x = (x << 3) + (x << 1) + ch - '0', ch = getchar();\n\tx *= f;\n}\n/*ti=(1/pi)/pi=(b-a)/a\nANS=1/(1+t1+t1t2+t1t2t3+t1t2t3t4+...+t1t2t3t4...tn-1)*/\n/*\u7ebf\u6bb5\u6811\u7ef4\u62a4t1t2t3t4...tn\nANS=(t1+t1t2+t1t2t3+t1t2t3t4+...+t1t2t3t4...tmid)+(t1t2t3t4...tmid)*(tmid+tmidtmid+1.....-1)\n*/\nint n,m;\ndouble jl[100005],tree1[400005],tree2[400005];\nvoid build(int l,int r,int rt)\n{\n\tif(l==r)\n\t{\n\t\ttree1[rt]=jl[l];\n\t\ttree2[rt]=jl[l];\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(lson);build(rson);\n\ttree1[rt]=tree1[rt<<1]*tree1[rt<<1|1];\n\ttree2[rt]=tree2[rt<<1]+1.0*(tree2[rt<<1|1])*tree1[rt<<1];\n}\nvoid update(int to,double x,int l,int r,int rt)\n{\n\tif(l==r)\n\t{\n\t\ttree1[rt]=x;\n\t\ttree2[rt]=x;\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tif(to<=mid)update(to,x,lson);\n\telse update(to,x,rson);\n\ttree1[rt]=tree1[rt<<1]*tree1[rt<<1|1];\n\ttree2[rt]=tree2[rt<<1]+1.0*(tree2[rt<<1|1])*tree1[rt<<1];\n}\ndouble query1(int L,int R,int l,int r,int rt)\n{\n\tif(L<=l&&R>=r)return tree1[rt];\n\tint mid=(l+r)>>1;\n\tdouble ans=1.0;\n\tif(L<=mid)ans=1.0*ans*query1(L,R,lson);\n\tif(R>mid)ans=1.0*ans*query1(L,R,rson);\n\treturn ans;\n}\ndouble query(int L,int R,int l,int r,int rt)\n{\n\tif(L<=l&&R>=r)return tree2[rt];\n\tint mid=(l+r)>>1;\n\tdouble ans=0.0;\n\tif(L<=mid)ans+=1.0*query(L,R,lson);\n\tif(R>mid)ans+=1.0*query(L,R,rson)*query1(L,mid,lson);\n\treturn ans;\n}\nint main()\n{\n\tint a,b,c,qwq;\n\tread(n);read(m);\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tread(a);read(b);\n\t\tjl[i]=1.0*(b-a)/a;\n\t}\n\tbuild(1,n,1);\n\twhile(m--)\n\t{\n\t\t read(qwq);\n\t\t if(qwq==1)\n\t\t {\n\t\t\tread(a);read(b);read(c);/*\u4ee4a\u53d8\u4e3ab/c*/\n\t\t\tjl[a]=1.0*(c-b)/b;\n\t\t\tupdate(a,jl[a],1,n,1);\n\t\t }\n\t\t if(qwq==2)\n\t\t {\n\t\t \tread(a);read(b);\n\t\t \tprintf(\"%.10f\\n\",1.0/(query(a,b,1,n,1)+1.0));\n\t\t }\n\t}\n}\n```",
        "postTime": 1544097540,
        "uid": 55703,
        "name": "ywh666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF712E \u3010Memory and Casinos\u3011"
    },
    {
        "content": "\u953b\u70bc\u6211\u601d\u7ef4\u6c34\u5e73\u7684\u597d\u9898\u3002\n\n\u8bbe $f_i$ \u8868\u793a\u4ece $i$ \u51fa\u53d1\u8d70\u5230\u7ec8\u70b9\u7684\u6982\u7387\uff0c\u5219\u9700\u8981\u67e5\u8be2\u7684\u662f $f_l$ \u3002\n\n\u7531\u9898\u77e5\uff0c$f_i=\\begin{cases}0&i=l-1\\\\p_if_{i+1}+(1-p_i)f_{i-1}&l \\le i \\le r\\\\1&i=r+1\\end{cases}$\n\n\u628a\u4e2d\u95f4\u90a3\u4e2a\u5f0f\u5b50\u79fb\u9879\uff0c\u5f97 $f_i-f_{i-1}=p_i(f_{i+1}-f_{i-1})$\n\n\u8bbe $a_i=f_{i}-f_{i-1}$ ,\u5219 $a_i=p_i(a_i+a_{i+1})$\n\n\u79fb\u9879\uff0c\u5f97 $a_{i+1}= \\dfrac{1-p_i}{p_i}a_i$ (\u4e0b\u9762\u4e3a\u4e86\u65b9\u4fbf\uff0c\u8bbe $b_i=\\dfrac{1-p_i}{p_i}$)\n\n\u5219 $a_i=a_l\\prod_{j=l}^{i-1}b_j$\n\n\u56e0\u4e3a $f_{r+1}-f_{l-1}=1$ \uff0c\u6240\u4ee5 $\\sum_{i=l}^{r+1}a_i=1$ \u3002\n\n\u90a3\u4e48 $f_l=a_l=1/(\\sum_{i=l}^{r+1}\\prod_{j=l}^{i-1}b_j)$\n\n $\\sum_{i=l}^{r+1}\\prod_{j=l}^{i-1}b_j$ \u80fd\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff1a\n \n \u8bbe $p_{l,r}$ \u8868\u793a $\\prod_{i=l}^rb_i$ ,$a_{l,r}$ \u8868\u793a $[l,r] $ \u7684\u67e5\u8be2\u7ed3\u679c\u3002\u8bbe $mi$ \u6ee1\u8db3 $l\\le mi\\le r$ \uff0c\n \n\u5219 $a_{l,r}=a_{l,mi}+(p_{l,mi}-1)a_{mi+1,r}$\n\n\u53d1\u73b0\u6ee1\u8db3\u7ed3\u5408\u5f8b\uff0c\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\u5355\u70b9\u6539\uff0c\u533a\u95f4\u67e5\u3002\n\n\u6ce8\u610f\u7cbe\u5ea6\u95ee\u9898\uff0c\u6bcf\u4e2a\u503c\u90fd\u548c $1e9$ \u53d6 $min$ \uff0c\u56e0\u4e3a\u5927\u4e8e $1e9$ \u4e0d\u5f71\u54cd\u7b54\u6848\u3002 \n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\ndouble sum[400010],ans[400010];\n//\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u79ef\nvoid build(int p,int l,int r){\n\tif(l==r){ans[p]=2;sum[p]=1;return;}\n\tint mid=(l+r)>>1;\n\tbuild(p<<1,l,mid);build(p<<1|1,mid+1,r);\n\tsum[p]=min(1e9,sum[p<<1]*sum[p<<1|1]);\n\tans[p]=min(1e9,ans[p<<1]+sum[p<<1]*(ans[p<<1|1]-1));\n}\nvoid update(int p,int l,int r,int x,double z){\n\tif(l==r){ans[p]=z+1;sum[p]=z;return;}\n\tint mid=(l+r)>>1;\n\tif(x<=mid)update(p<<1,l,mid,x,z);\n\telse update(p<<1|1,mid+1,r,x,z);\n\tsum[p]=min(1e9,sum[p<<1]*sum[p<<1|1]);\n\tans[p]=min(1e9,ans[p<<1]+sum[p<<1]*(ans[p<<1|1]-1));\n}\nstruct qq{double as,sum;};\nqq ask(int p,int l,int r,int x,int y){\n\tint mid=(l+r)>>1;\n\tif(x<=l&&y>=r)return (qq){ans[p],sum[p]};\n\tif(y<=mid)return ask(p<<1,l,mid,x,y);\n\tif(x>mid)return ask(p<<1|1,mid+1,r,x,y);\n\tqq t=ask(p<<1,l,mid,x,y),t2=ask(p<<1|1,mid+1,r,x,y);\n\treturn (qq){min(1e9,t.as+t.sum*(t2.as-1)),min(t.sum*t2.sum,1e9)};\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tbuild(1,1,n);\n\tfor(int i=1,a,b;i<=n;i++)scanf(\"%d%d\",&a,&b),update(1,1,n,i,1.0*(b-a)/a);\n\tfor(int i=1,ty,l,r,a,b,x;i<=m;i++){\n\t\tscanf(\"%d\",&ty);\n\t\tif(ty&1)scanf(\"%d%d%d\",&x,&a,&b),update(1,1,n,x,1.0*(b-a)/a);\n\t\telse scanf(\"%d%d\",&l,&r),printf(\"%.6lf\\n\",1.0/ask(1,1,n,l,r).as);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1608369708,
        "uid": 223624,
        "name": "Apollo13",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF712E \u3010Memory and Casinos\u3011"
    },
    {
        "content": "# \u9898\u76ee\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[$luogu$](https://www.luogu.org/problem/CF712E).\n# \u9898\u89e3\n## \u9898\u610f\u8f6c\u5316\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u672c\u9898\u53ef\u4ee5\u7406\u89e3\u4e3a:  \n> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5bf9\u4e8e\u4e00\u884c$n$\u4e2a\u683c\u5b50, \u6bcf\u4e2a\u683c\u5b50\u6709\u4e00\u4e2a\u5411\u53f3\u8d70\u7684\u6982\u7387$p_i$, \u5bf9\u5e94\u7684, \u5411\u5de6\u8d70\u7684\u6982\u7387$1-p_i$, \u591a\u6b21\u4fee\u6539\u67d0\u4e2a$p_i$\u6216\u8be2\u95ee\u4f60\u7ad9\u5728$l$, \u5728\u4e0d\u8d70\u5411$l-1$\u7684\u524d\u63d0\u4e0b\u8d70\u5230$r+1$\u7684\u6982\u7387.  \n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u9996\u5148, \u6211\u4eec\u8bbe$f(l,r)$\u8868\u793a**\u7ad9\u5728$l$, \u4e0d\u5230$l-1$, \u4ece$r$\u8d70\u51fa\u7684\u6982\u7387**; \u4e3a\u4e86\u65b9\u4fbf\u8f6c\u79fb, \u5bf9\u5e94\u7684\u6709$g(l,r)$\u8868\u793a**\u7ad9\u5728$r$, \u4e0d\u5230$r+1$, \u4ece$l$\u8d70\u51fa\u7684\u6982\u7387**.  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u89c2\u5bdf\u9898\u76ee\u5bf9\u533a\u95f4\u7684\u5404\u79cd\u8be2\u95ee, \u53ef\u4ee5\u60f3\u8c61\u8fd9\u662f\u4e00\u9053\u7ebf\u6bb5\u6811.  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u800c\u540e, \u6211\u4eec\u7684\u96be\u70b9\u5728\u4e8e\u533a\u95f4\u7684\u5408\u5e76\u64cd\u4f5c.  \n## \u533a\u95f4\u5408\u5e76\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8bbe\u7ebf\u6bb5\u6811\u4e0a\u5de6\u533a\u95f4\u7684\u6709$(f_1,g_1)$, \u53f3\u533a\u95f4\u6709$(f_2,g_2)$, \u63a5\u4e0b\u6765\u6211\u4eec\u8003\u8651\u5982\u4f55\u8ba1\u7b97\u6574\u4e2a\u533a\u95f4\u7684$(f,g)$.  \n### \u8003\u8651$f$:  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$\\displaystyle f=f_1f_2+f_1(1-f_2)(1-g_1)f_2+f_1((1-f_2)(1-g_1))^2f_2+...$  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5f62\u5f0f\u5730\u8bf4:  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$\\displaystyle f=\\sum_{i=0}^{+\\infty}f_1f_2((1-f_2)(1-g_1))^i=f_1f_2\\sum_{i=0}^{+\\infty}((1-f_2)(1-g_1))^i$  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5f62\u8c61\u7406\u89e3, $f$\u5c31\u662f $p($\u4e00\u904d\u901a\u8fc7\u533a\u95f4$)+$ $p($\u5728\u4e2d\u95f4\u8f6c\u4e00\u5708\u901a\u8fc7\u533a\u95f4$)+$ $p($\u8f6c\u4e24\u5708\u901a\u8fc7\u533a\u95f4$)+...$ ~~\u8f6c\u6655\u4e86\u6ca1?~~  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5feb\u4e50\u5730\u7b49\u6bd4\u6570\u5217\u6c42\u548c:  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$\\displaystyle f=\\frac{f_1f_2(1-((1-f_2)(1-g_1))^{+\\infty})}{1-(1-f_2)(1-g_1)}=\\frac{f_1f_2}{1-(1-f_2)(1-g_1)}$  \n### \u7c7b\u4f3c\u5730, \u8003\u8651$g$:\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$\\displaystyle g=g_2g_1+g_2(1-g_1)(1-f_2)g_1+g_2((1-g_1)(1-f_2))^2g_1+...$  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5b83\u4e0e$f$\u4e2d\u7684\u516c\u6bd4\u90fd\u662f\"$p($\u5728\u4e2d\u95f4\u5b8c\u6210\u8f6c\u5708$)$\". \u6240\u4ee5:  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$\\displaystyle g=\\frac{g_1g_2}{1-(1-f_2)(1-g_1)}$  \n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7279\u522b\u5730, \u5f53$l=r$, $f(l,r)=p_l$, $g(l,r)=1-p_l$, \u4e22\u5230\u6811\u91cc\u7ef4\u62a4\u5373\u53ef.  \n```cpp\n#include <cstdio>\n#include <utility>\n\n#define Int register int\n\nusing namespace std;\n\ntypedef pair<double, double> pdd;\n\nconst int MAXN = 1e5;\nint n, q;\ndouble p[MAXN + 5] = {};\n\nclass Segment_Tree {\nprivate:\n\tstruct Node {\n\t\tint l, r;\n\t\tdouble f, g;\n\t} Tree[MAXN << 2];\n\npublic:\n\tinline void Push_up ( const int i ) {\n\t\tdouble f1 = Tree[i << 1].f, f2 = Tree[i << 1 | 1].f;\n\t\tdouble g1 = Tree[i << 1].g, g2 = Tree[i << 1 | 1].g;\n\t\tTree[i].f = f1 * f2 / ( 1 - ( 1 - f2 ) * ( 1 - g1 ) );\n\t\tTree[i].g = g1 * g2 / ( 1 - ( 1 - f2 ) * ( 1 - g1 ) );\n\t}\n\tinline void Build ( const int i, const int l, const int r, double* p ) {\n\t\tTree[i] = { l, r, 0.0, 0.0 };\n\t\tif ( l == r ) { Tree[i].f = p[l], Tree[i].g = 1 - p[l]; return ; }\n\t\tint mid = l + r >> 1;\n\t\tBuild ( i << 1, l, mid, p ), Build ( i << 1 | 1, mid + 1, r, p );\n\t\tPush_up ( i );\n\t}\n\tinline void Update ( const int i, const int Indx, const double p ) {\n\t\tif ( Tree[i].r < Indx || Indx < Tree[i].l ) return ;\n\t\tif ( Tree[i].l == Indx && Tree[i].r == Indx ) {\n\t\t\tTree[i].f = p, Tree[i].g = 1 - p;\n\t\t\treturn ;\n\t\t}\n\t\tUpdate ( i << 1, Indx, p ), Update ( i << 1 | 1, Indx, p );\n\t\tPush_up ( i );\n\t}\n\tinline pdd Query ( const int i, const int l, const int r ) {\n\t\tif ( l <= Tree[i].l && Tree[i].r <= r ) return { Tree[i].f, Tree[i].g };\n\t\tint mid = Tree[i].l + Tree[i].r >> 1;\n\t\tif ( r <= mid ) return Query ( i << 1, l, r );\n\t\telse if ( mid < l ) return Query ( i << 1 | 1, l, r );\n\t\tpdd lret = Query ( i << 1, l, mid ), rret = Query ( i << 1 | 1, mid + 1, r );\n\t\treturn { lret.first * rret.first / ( 1 - ( 1 - rret.first ) * ( 1 - lret.second ) ),\n\t\t\t\tlret.second * rret.second / ( 1 - ( 1 - rret.first ) * ( 1 - lret.second ) ) };\n\t}\n} SegTree;\n\ninline int rint () {\n\tint x = 0, f = 1; char s = getchar ();\n\tfor ( ; s < '0' || '9' < s; s = getchar () ) f = s == '-' ? -f : f;\n\tfor ( ; '0' <= s && s <= '9'; s = getchar () ) x = ( x << 3 ) + ( x << 1 ) + ( s ^ '0' );\n\treturn x * f;\n}\n\ninline void Work () {\n\tn = rint (), q = rint ();\n\tfor ( Int i = 1; i <= n; ++ i ) p[i] = 1.0 * rint () / rint ();\n\tSegTree.Build ( 1, 1, n, p );\n\tfor ( Int opt, i, a, b; q --; ) {\n\t\topt = rint ();\n\t\tif ( opt & 1 ) {\n\t\t\ti = rint (), a = rint (), b = rint ();\n\t\t\tSegTree.Update ( 1, i, 1.0 * a / b );\n\t\t} else {\n\t\t\ta = rint (), b = rint ();\n\t\t\tprintf ( \"%.10lf\\n\", SegTree.Query ( 1, a, b ).first );\n\t\t}\n\t}\n}\n\nint main () {\n\tWork ();\n\treturn 0;\n}\n```",
        "postTime": 1571464668,
        "uid": 123807,
        "name": "Rainybunny",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF712E \u3010Memory and Casinos\u3011"
    },
    {
        "content": "# \u9898\u76ee\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[\u70b9\u8fd9\u91cc](https://www.luogu.org/problem/CF712E)\u770b\u9898\u76ee\u3002\n# \u5206\u6790\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u770b\u5230\u8fd9\u79cd\u8ddf\u533a\u95f4\u548c\u4fee\u6539\u6709\u5173\u7684\uff0c\u5f53\u573a\u7ebf\u6bb5\u6811\u5f00\u641e\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8003\u8651\u533a\u95f4\u7684\u5408\u5e76\uff08\u8fd9\u4e2a\u6700\u96be\u641e\uff09\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u51fd\u6570$f(l,r)(1\\le l \\le r \\le n)$\u8868\u793a\u4ece$l$\u5f00\u59cb\u4e0d\u4ece\u5de6\u8fb9\u8d70\u51fa$[l,r]$\uff08\u4e5f\u5c31\u662f\u4e0d\u8d70\u5230$l-1$\uff09\u7684\u60c5\u51b5\u4e0b\uff0c\u4ece\u53f3\u8fb9\u8d70\u51fa\u533a\u95f4$[l,r]$\uff08\u4e5f\u5c31\u662f\u8d70\u5230$r+1$\uff09\u7684\u6982\u7387\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8003\u8651\u8f6c\u79fb......emmmmmm......\u505a\u4e0d\u6765......  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u518d\u52a0\u4e00\u4e2a\u72b6\u6001\uff0c$g(l,r)$\u7c7b\u4f3c\u4e8e$f(l,r)$\uff0c\u53ea\u4e0d\u8fc7\u662f\u5728\u533a\u95f4$[l,r]$\u4e2d\u53f3\u8fdb\u5de6\u51fa\u3002\u5047\u8bbe\u533a\u95f4\u7684\u4e2d\u70b9\u662f$mid$\uff0c\u6211\u4eec\u8003\u8651\u8fd9\u6837\u8f6c\u79fb\uff1a  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$\\displaystyle f(l,r)=f(l,mid)f(mid+1,r)\\ \\ \\ \\ \\ \\ \\ \\text{\u4e00\u904d\u8d70\u51fa\u53bb}$  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$\\displaystyle \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ +f(l,mid)(1-f(mid+1,r))(1-g(l,mid))f(mid+1,r)\\ \\ \\ \\ \\ \\ \\ \\text{\u4e2d\u95f4\u7a7f\u4e00\u904d\u624d\u51fa\u53bb}$  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$\\displaystyle \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ +f(l,mid)[(1-f(mid+1,r))(1-g(l,mid))]^2f(mid+1,r)\\ \\ \\ \\ \\ \\ \\ \\text{\u53cd\u53cd\u590d\u590d......}$  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4ee4$t=(1-f(mid+1,r))(1-g(l,mid))$\uff0c\u5219\u53ef\u4ee5\u5f97\u5230\uff1a  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$\\displaystyle f=f(l,mid)f(mid+1,r)(1+t+t^2+t^3+......)$  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$\\displaystyle \\ \\ \\ \\ =f(l,mid)f(mid+1,r)\\frac{1-t^\\infty}{1-t}$    \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$\\displaystyle \\ \\ \\ \\ =f(l,mid)f(mid+1,r)\\frac 1 {1-t}$  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$\\displaystyle \\ \\ \\ \\ =\\frac{f(l,mid)f(mid+1,r)}{f(mid+1,r)+g(l,mid)-f(mid+1,r)g(l,mid)}$  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8fd9\u6837\u5c31\u53ef\u4ee5\u76f4\u63a5\u7b97\u4e86\uff0c$g$\u7684\u7b97\u6cd5\u7c7b\u4f3c\uff0c\u5c31\u662f\u628a\u5206\u5b50\u6362\u4e00\u4e0b\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u6ce8\u610f\uff0c\u5982\u679c$f(mid+1,r)$\u548c$g(l,mid)$\u540c\u65f6\u4e3a$0$\u548c\u540c\u65f6\u4e3a$1$\uff0c\u5206\u6bcd\u5c31\u4f1a\u53d8\u6210$0$\u3002\u89e3\u51b3\u65b9\u6cd5\u5c31\u662f\u2014\u2014  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7528\u4e00\u4e2a$eps$\u4fee\u6b63\u4e00\u4e0b\u5c31\u5c31\u597d\u4e86\uff0c\u7cbe\u5ea6\u8303\u56f4\u4e4b\u5185\u4e0d\u4f1a\u5f71\u54cd\u7ed3\u679c\u3002  \n# \u4ee3\u7801\n```cpp\n#include <cstdio>\n\n#define isLeaf( a ) ( segTree[a].l == segTree[a].r )\n\nconst double eps = 1e-8;\nconst int MAXN = 1e5 + 5;\n\ntemplate<typename _T>\nvoid read( _T &x )\n{\n\tx = 0;char s = getchar();int f = 1;\n\twhile( s > '9' || s < '0' ){if( s == '-' ) f = -1; s = getchar();}\n\twhile( s >= '0' && s <= '9' ){x = ( x << 3 ) + ( x << 1 ) + ( s - '0' ), s = getchar();}\n\tx *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x )\n{\n\tif( x < 0 ){ putchar( '-' ); x = ( ~ x ) + 1; }\n\tif( 9 < x ){ write( x / 10 ); }\n\tputchar( x % 10 + '0' );\n}\n\ntemplate<typename _T>\n_T ABS( const _T a )\n{\n\treturn a < 0 ? -a : a;\n}\n\nstruct segmentTreeNode\n{\n\tint l, r;\n\tdouble f, g;\n}segTree[MAXN << 2];\n\ntypedef struct result\n{\n\tdouble f, g;\n\tresult() { f = 0, g = 0; }\n\tresult( const double F, const double G ) { f = F, g = G; }\n}R;\n\ndouble p[MAXN];\nint N, M;\n\nvoid upt( const int now )\n{\n\tsegTree[now].f = segTree[now << 1].f * segTree[now << 1 | 1].f / ( segTree[now << 1 | 1].f + segTree[now << 1].g - segTree[now << 1].g * segTree[now << 1 | 1].f );\n\tsegTree[now].g = segTree[now << 1].g * segTree[now << 1 | 1].g / ( segTree[now << 1 | 1].f + segTree[now << 1].g - segTree[now << 1].g * segTree[now << 1 | 1].f );\n}\n\nR upt( const R v, const R w )\n{\n\tR u;\n\tu.f = v.f * w.f / ( w.f + v.g - v.g * w.f );\n\tu.g = v.g * w.g / ( w.f + v.g - v.g * w.f );\n\treturn u;\n}\n\nvoid build( const int now, const int left, const int right )\n{\n\tsegTree[now].l = left, segTree[now].r = right;\n\tif( isLeaf( now ) ) { segTree[now].f = p[left], segTree[now].g = 1 - p[left]; return; }\n\tbuild( now << 1, left, ( left + right ) >> 1 ), build( now << 1 | 1, ( ( left + right ) >> 1 ) + 1, right );\n\tupt( now );\n}\n\nvoid update( const int now, const int indx, const double val )\n{\n\tif( indx < segTree[now].l || segTree[now].r < indx ) return ;\n\tif( indx <= segTree[now].l && segTree[now].r <= indx ) { segTree[now].f = val, segTree[now].g = 1 - val; return ; }\n\tif( isLeaf( now ) ) return ;\n\tupdate( now << 1, indx, val ), update( now << 1 | 1, indx, val );\n\tupt( now );\n}\n\nR query( const int now, const int segL, const int segR )\n{\n\tif( segL <= segTree[now].l && segTree[now].r <= segR ) { return R( segTree[now].f, segTree[now].g ); }\n\tint mid = ( segTree[now].l + segTree[now].r ) >> 1;\n\tif( segR <= mid ) return query( now << 1, segL, segR );\n\telse if( segL > mid ) return query( now << 1 | 1, segL, segR );\n\telse return upt( query( now << 1, segL, segR ), query( now << 1 | 1, segL, segR ) );\n}\n\nbool equal( const double x, const double y = 0 ) { return ABS( x - y ) <= eps; }\ndouble fix( const double x ) { return equal( x ) ? x + eps : ( equal( x, 1 ) ? x - eps : x ); }\n\nint main()\n{\n\tint a, b;\n\tread( N ), read( M );\n\tfor( int i = 1 ; i <= N ; i ++ )\n\t\tread( a ), read( b ), p[i] = fix( 1.0 * a / b );\n\tint opt, pos;\n\tR t;\n\tbuild( 1, 1, N );\n\twhile( M -- )\n\t{\n\t\tread( opt );\n\t\tif( opt & 1 )\n\t\t{\n\t\t\tread( pos ), read( a ), read( b );\n\t\t\tupdate( 1, pos, fix( 1.0 * a / b ) );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tread( a ), read( b );\n\t\t\tt = query( 1, a, b );\n\t\t\tprintf( \"%.10lf\\n\", t.f );\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1571463443,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "[CF712E]Memory and Casinos"
    },
    {
        "content": "[$\\tt Link$](/problem/CF712E)\u3002\n\n\u8fd9\u4e00\u770b\u5c31\u5f88\u7ebf\u6bb5\u6811\u3002\u4e8e\u662f\u6211\u4eec\u8003\u8651\u628a\u95ee\u9898\u8f6c\u5316\u6210\u6709\u7ed3\u5408\u5f8b\u7684\u4fe1\u606f\u3002\n\n\u4e0b\u9762\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee $[l,r]$ \u8fdb\u884c\u8ba8\u8bba\u3002\n\n\u6211\u4eec\u8bb0 $a_i$ \u4e3a\u4ece $i\\to r$ \u7684\u6982\u7387\u3002\uff08\u4f60\u4f1a\u53d1\u73b0\u786e\u5b9e\u5b58\u5728\u65e0\u9650\u5faa\u73af\u7684\u60c5\u51b5\uff0c\u4f46\u662f\u6211\u4eec\u5bf9\u5f0f\u5b50\u8fdb\u884c\u8f6c\u5316\uff0c\u4f7f\u5f97\u53ef\u4ee5\u7ef4\u62a4\uff09\u3002\n\n\uff08\u9ed8\u8ba4\u4e0b $a_0=a_l=0,a_r=a_n=n$\uff09\u800c\u6709\n\n$$a_i=a_{i-1}(1-p_i)+a_{i+1}p_i$$\n\n\u79fb\u9879\u5f97\n\n$$p_i(a_{i+1}-a_{i-1})=a_i-a_{i-1}$$\n\n\u6211\u4eec\u5b9a\u4e49 $a_{1\\cdot\\cdot n}$ \u7684\u5dee\u5206 $b_i=a_i-a_{i-1}$\u3002\n\n\u56e0\u4e3a $a_{i+1}-a_{i-1}=b_{i+1}+b_i,a_i=a_{i-1}=b_i$\u3002\n\n\u6240\u4ee5\n\n$$p_i(b_{i+1}+b_i)=b_i$$\n\n\u79fb\u9879\uff0c\u5373\n\n$$\\dfrac{1-p_i}{p_i}\\times b_i=b_{i+1}$$\n\n\u6211\u4eec\u8bbe $v_i=\\dfrac{1-p_i}{p_i}$\uff0c\u8fd9\u65f6\u89c2\u5bdf\u5230\u6709\n\n$$1+\\color{red}\\sum_{i=1}^n\\prod_{j=1}^iv_j\\color{black}=\\dfrac 1{b_1}$$\n\n\u6240\u4ee5\u6211\u4eec\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7ea2\u8272\u90e8\u5206\u7684\u503c\u5c31\u884c\u4e86\u3002\n\n\u7ef4\u62a4\n\n$$\n\\begin{cases}\nf_{l,r}=\\prod_{j=l}^rv_j\\\\\ng_{l,r}=\\sum_{i=l}^r\\prod_{j=l}^iv_j\n\\end{cases}\n$$\n\n\u8f6c\u79fb\u6709\uff08$u,v$ \u5206\u522b\u662f\u5de6\u513f\u5b50\u548c\u53f3\u513f\u5b50\uff09\n\n$$\n\\begin{cases}\nf_i=f_uf_v\\\\\ng_i=g_u+f_ug_v\n\\end{cases}\n$$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int N = 1e5 + 5,S = N << 2;\n\nint n,m,cc = 0;\n\nnamespace ST{\n\tusing node = pair<double,double>; node T[S];\n\t\n\t#define f first\n\t#define g second\n\t\n\t#define lc (i << 1)\n\t#define rc (i << 1 | 1)\n\t#define mid ((L + R) >> 1)\n\t\n\t#define id int i,int L,int R\n\t\n\tauto mrg(const auto &cl,const auto &cr){\n\t\treturn node(cl.f * cr.f,cl.g + cl.f * cr.g);\n\t}\n\t\n\tvoid build(id){\n\t\tif(L == R){\n\t\t\tint p,q; scanf(\"%d%d\",&p,&q);\n\t\t\tdouble v = 1.0 * (q - p) / p;\n\t\t\tT[i] = node(v,v);\n\t\t\treturn;\n\t\t}\n\t\tbuild(lc,L,mid);\n\t\tbuild(rc,mid + 1,R);\n\t\tT[i] = mrg(T[lc],T[rc]);\n\t}\n\t\n\tvoid upd(int v,id){\n\t\tif(L == R){\n\t\t\tint p,q; scanf(\"%d%d\",&p,&q);\n\t\t\tdouble v = 1.0 * (q - p) / p;\n\t\t\tT[i] = node(v,v);\n\t\t\treturn;\n\t\t}\n\t\tv <= mid ? upd(v,lc,L,mid) : upd(v,rc,mid + 1,R);\n\t\tT[i] = mrg(T[lc],T[rc]);\n\t}\n\t\n\tnode qry(int l,int r,id){\n\t\tif(l <= L && R <= r) return T[i];\n\t\tif(r <= mid) return qry(l,r,lc,L,mid);\n\t\tif(l > mid) return qry(l,r,rc,mid + 1,R);\n\t\treturn mrg(qry(l,r,lc,L,mid),qry(l,r,rc,mid + 1,R));\n\t}\n}\n\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tST::build(1,1,n);\n\twhile(m--){\n\t\tint op; scanf(\"%d\",&op);\n\t\tif(op == 1){\n\t\t\tint i; scanf(\"%d\",&i);\n\t\t\tST::upd(i,1,1,n);\n\t\t} else {\n\t\t\tint l,r; scanf(\"%d%d\",&l,&r);\n\t\t\tcc = 0;\n\t\t\tprintf(\"%.10f\\n\",1.0 / (ST::qry(l,r,1,1,n).g + 1.0));\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1659018047,
        "uid": 368107,
        "name": "xfrvq",
        "ccfLevel": 7,
        "title": "CF712E \u63a8\u5f0f\u5b50+\u7ebf\u6bb5\u6811"
    },
    {
        "content": "\u770b\u9898\u89e3\u533a\u6ca1\u5199\u77e9\u9635\u7ebf\u6bb5\u6811\u7684 \u5199\u4e00\u53d1\u9898\u89e3\n\n\u8bbe $f_i$ \u4e3a $i$ \u53ef\u4ee5\u6309\u8981\u6c42\u5230\u8fbe\u76ee\u6807\u7684\u6982\u7387 \u53d1\u73b0\u4e0d\u7ba1\u9650\u5236\u8bbe\u6210\u4ec0\u4e48\u90fd\u6709 \n\n$f_i=p_if_{i+1}+(1-p_i)f_{i-1}$ \n\n\u5373\u5206\u522b\u7edf\u8ba1\u5f80\u5de6\u5f80\u53f3\u5230\u8fbe\u76ee\u6807\u7684\u6982\u7387\n\n\u53d8\u4e00\u4e2a\u5f62 $f_{i+1}=\\dfrac{1}{p_i}f_i+(1-\\dfrac{1}{p_i})f_{i-1}$\n\n\u53d1\u73b0\u662f\u4e00\u4e2a\u4e8c\u9636\u7ebf\u6027\u9012\u63a8\u7684\u5f62\u5f0f \u5199\u6210\u77e9\u9635\n\n$\\begin{bmatrix} f_{i+1}&f_{i}\\end{bmatrix}=\\begin{bmatrix} f_{i}&f_{i-1}\\end{bmatrix}\\begin{bmatrix} \\frac{1}{p_i}&1-\\frac{1}{p_i}\\\\1&0\\end{bmatrix}$\n\n\u7136\u540e\u7ebf\u6bb5\u6811\u7ef4\u62a4\u77e9\u9635\u4e58\u79ef \u6bcf\u6b21\u533a\u95f4\u67e5\u8be2\u5f97\u5230\u7684\u77e9\u9635 $A$ \u6709\n\n$\\begin{bmatrix} f_{r+1}&f_{r}\\end{bmatrix}=\\begin{bmatrix} f_{l}&f_{l-1}\\end{bmatrix}A$\n\n\u6709 $f_{r+1}=1,f_{l-1}=0$ \u53ef\u4ee5\u89e3\u51fa $f_l$\n\n\u4e3a\u5565\u4e0d\u53d6\u6a21 \u8c03\u4e86\u597d\u4e45\u7cbe\u5ea6\u3002\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=1e5+3;\ndouble a[N];\nstruct matrix\n{\n\tdouble a,b,c,d;\n}t[N<<2];\n#define ls p<<1\n#define rs p<<1|1\ninline matrix mul(const matrix &x,const matrix &y)\n{\n\tmatrix res;\n\tres.a=min(1e10,x.a*y.a)+min(1e10,x.b*y.c);\n\tres.b=min(1e10,x.a*y.b)+min(1e10,x.b*y.d);\n\tres.c=min(1e10,x.c*y.a)+min(1e10,x.d*y.c);\n\tres.d=min(1e10,x.c*y.b)+min(1e10,x.d*y.d);\n\treturn res;\n}\ninline void update(int p)\n{\n\tt[p]=mul(t[rs],t[ls]);\n}\nvoid build(int l,int r,int p)\n{\n\tif(l==r)\n\t{\n\t\tdouble o=1.0/a[l];\n\t\tt[p]={o,1.0-o,1.0,0.0};\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tbuild(l,mid,ls);\n\tbuild(mid+1,r,rs);\n\tupdate(p);\n}\nvoid modify(int l,int r,int x,const matrix &dx,int p)\n{\n\tif(l==r)\n\t{\n\t\tt[p]=dx;\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tif(x<=mid)modify(l,mid,x,dx,ls);\n\telse\n\tmodify(mid+1,r,x,dx,rs);\n\tupdate(p);\n}\nmatrix query(int l,int r,int ql,int qr,int p)\n{\n\tif(ql<=l&&r<=qr)\n\t{\n\t\treturn t[p];\n\t}\n\tint mid=l+r>>1;\n\tmatrix tmp={1.0,0.0,0.0,1.0};\n\tif(ql<=mid)tmp=query(l,mid,ql,qr,ls);\n\tif(qr>mid)tmp=mul(query(mid+1,r,ql,qr,rs),tmp);\n\treturn tmp;\n}\nsigned main()\n{\n\tint n,m;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\ta[i]=(double)(x)/(double)(y);\n\t}\n\tbuild(1,n,1);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint op;\n\t\tcin>>op;\n\t\tif(op==1)\n\t\t{\n\t\t\tint pos,x,y;\n\t\t\tscanf(\"%d%d%d\",&pos,&x,&y);\n\t\t\tdouble p=(double)(x)/(double)(y);\n\t\t\ta[pos]=p;\n\t\t\tp=1.0/p;\n\t\t\tmatrix tmp={p,1.0-p,1.0,0.0};\n\t\t\tmodify(1,n,pos,tmp,1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint l,r;\n\t\t\tscanf(\"%d%d\",&l,&r);\n\t\t\tmatrix tmp=query(1,n,l,r,1);\n\t\t\tdouble ans=1.0/tmp.a;\n\t\t\tprintf(\"%.9lf\\n\",ans);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1655820317,
        "uid": 223560,
        "name": "_HL_",
        "ccfLevel": 0,
        "title": "CF712E"
    },
    {
        "content": "> [CF712E Memory and Casinos](https://www.luogu.com.cn/problem/CF712E)\n\n\u8003\u8651\u5bf9\u5168\u5c40\u6c42\u7b54\u6848\u3002\n\n\u8fd9\u79cd\u53ef\u80fd\u7ecf\u8fc7\u91cd\u590d\u72b6\u6001\u7684\u6982\u7387\u671f\u671b\u9898\u4e00\u822c\u90fd\u8003\u8651\u5217\u65b9\u7a0b\u9ad8\u65af\u6d88\u5143\u3002\u56e0\u4e3a\u83b7\u80dc\u6982\u7387\u548c\u4e4b\u524d\u7684\u7ecf\u5386\u65e0\u5173\uff0c\u53ea\u9700\u5f53\u524d\u4f4d\u7f6e\u6709\u5173\uff0c\u6545\u8bbe $f_i$ \u8868\u793a\u5728 $i$ \u5904\u83b7\u80dc\u7684\u6982\u7387\u3002$f_0 = 0$\uff0c$f_{n + 1} = 1$\u3002\n\n\u5bf9\u4e8e $f_i$\uff0c\u6839\u636e\u5b9e\u9645\u610f\u4e49\uff0c\u6709\u65b9\u7a0b $f_i = p_i f_{i + 1} + (1 - p) f_{i - 1}$\u3002\u5bf9 $n$ \u4e2a\u8fd9\u6837\u7684\u65b9\u7a0b\u505a\u9ad8\u65af\u6d88\u5143\u5b9e\u5728\u662f\u592a\u8822\u4e86\u3002\u8003\u8651\u5316\u7b80\u3002\n$$\n\\begin{aligned}\np_if_i + (1 - p_i)f_i & = p_i f_{i + 1} + (1 - p) f_{i - 1} \\\\\n(1 - p_i)(f_i - f_{i - 1}) & = p_i(f_{i + 1} - f_i) \\\\\nd_{i + 1} & = \\dfrac {1 - p_i}{p_i} d_i\n\\end{aligned}\n$$\n\u8fd9\u6837\u6211\u4eec\u5f97\u5230\u4e86 $f$ \u7684\u5dee\u5206\u6570\u7ec4\u7684\u9012\u63a8\u5f0f\u3002\u4ee4 $pd_i$ \u8868\u793a $\\dfrac {1 - p_i}{p_i}$ \u7684\u524d\u7f00\u79ef\uff0c\u5219 $d_i = pd_{i - 1} d_1$\uff0c\u800c\u7b54\u6848\u5373 $\\dfrac {d_1}{\\sum\\limits_{i = 1} ^ {n + 1} d_i}$\uff0c\u76f8\u5f53\u4e8e $\\dfrac 1 {1 + \\sum\\limits_{i = 1} ^ n pd_i}$\u3002\n\n\u5bf9\u4e8e\u533a\u95f4 $[l, r]$\uff0c\u6839\u636e\u4e0a\u8ff0\u63a8\u5bfc\uff0c\u5bb9\u6613\u5f97\u51fa\u7b54\u6848\u5f0f $\\dfrac{1}{1 + \\sum\\limits_{i = l} ^ r\\prod\\limits_{j = l} ^ i p_j}$\u3002\u4e3a\u652f\u6301\u5e26\u4fee\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4 $p_i$ \u7684\u524d\u7f00\u79ef\u4ee5\u53ca\u524d\u7f00\u79ef\u7684\u548c\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n + q\\log n)$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nbool Mbe;\nconstexpr int N = 1e5 + 5;\nstruct dat {\n  double prod, sum;\n  dat operator + (const dat &rhs) const {\n    dat res;\n    res.prod = prod * rhs.prod;\n    res.sum = sum + prod * rhs.sum;\n    return res;\n  }\n} val[N << 2];\nvoid modify(int l, int r, int p, int x, double v) {\n  if(l == r) return val[x] = {v, v}, void();\n  int m = l + r >> 1;\n  if(p <= m) modify(l, m, p, x << 1, v);\n  else modify(m + 1, r, p, x << 1 | 1, v);\n  val[x] = val[x << 1] + val[x << 1 | 1];\n}\ndat query(int l, int r, int ql, int qr, int x) {\n  if(ql <= l && r <= qr) return val[x];\n  int m = l + r >> 1;\n  dat ans = {1, 0};\n  if(ql <= m) ans = query(l, m, ql, qr, x << 1);\n  if(m < qr) ans = ans + query(m + 1, r, ql, qr, x << 1 | 1);\n  return ans;\n}\nbool Med;\nint main() {\n  fprintf(stderr, \"%.4lf\\n\", (&Mbe - &Med) / 1048576.0);\n#ifdef ALEX_WEI\n  freopen(\"1.in\", \"r\", stdin);\n  freopen(\"1.out\", \"w\", stdout);\n#endif\n  int n, q;\n  cin >> n >> q;\n  for(int i = 1; i <= n; i++) {\n    int a, b;\n    scanf(\"%d%d\", &a, &b);\n    double p = 1. * a / b;\n    modify(1, n, i, 1, (1 - p) / p);\n  }\n  for(int i = 1; i <= q; i++) {\n    int op;\n    scanf(\"%d\", &op);\n    if(op == 1) {\n      int x, a, b;\n      scanf(\"%d%d%d\", &x, &a, &b);\n      double p = 1. * a / b;\n      modify(1, n, x, 1, (1 - p) / p);\n    }\n    if(op == 2) {\n      int l, r;\n      scanf(\"%d%d\", &l, &r);\n      printf(\"%.9lf\\n\", 1. / (query(1, n, l, r, 1).sum + 1));\n    }\n  }\n  return 0;\n}\n/*\n2022/6/16\nstart coding at 14:24\nfinish debugging at 14:35\n*/\n```",
        "postTime": 1655425783,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "CF712E Memory and Casinos"
    },
    {
        "content": "### Description\n\n\u6709 $n$ \u4e2a\u70b9\uff0c\u6bcf\u4e2a\u70b9\u6709\u4e00\u4e2a\u6982\u7387$p_i$\uff0c\u7ad9\u5728\u8fd9\u4e2a\u70b9\u65f6\uff0c\u4f60\u6709$p_i$\u7684\u6982\u7387\u79fb\u52a8\u5230$i + 1$,\u6709$1 \u2212 p_i $\u7684\u6982\u7387\u79fb\u52a8\u5230$i\u22121$\uff0c\u652f\u6301\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n    \n - \u4fee\u6539\u4e00\u4e2a$p_i$\n - \u7ed9\u5b9a\u4e00\u4e2a\u533a\u95f4$[l, r]$\uff0c\u6c42\u5728\u8fd9\u4e2a\u533a\u95f4\u4ece $l$ \u79fb\u52a8\u5230 $r + 1$\uff0c\u4e14\u5728\u79fb\u52a8\u5230 $r + 1$ \u4e4b\u524d\u4e0d\u8d70\u51fa\u533a\u95f4\u8fb9\u754c\u7684\u6982\u7387\u3002\n    \n$n,q \\leq 10^5$\n    \n### Solution\n\n\u8bbe$L(l,r),R(l,r)$\u5206\u522b\u8868\u793a\u4ece$l,r$\u51fa\u53d1\u5230\u8fbe$r+1$\u7684\u6982\u7387\uff08\u4e00\u65e6\u8d70\u51fa$[l,r]$\u7acb\u5373\u505c\u6b62\uff09\u3002\n\n\u73b0\u5728\u8981\u5408\u5e76\u4e24\u6bb5\u533a\u95f4\u7684$L,R$\uff0c\u8bbe\u5bf9\u5e94\u7684\u503c\u5206\u522b\u4e3a$l_1,r_1,l_2,r_2$\n\n$$\n\\begin{matrix}\nL(l,r)&=&l_1l_2\\sum_{i=0}^\\infty(1-l_2)^ir_1^n\\\\\n&=&\\frac{l_1l_2}{1-(1-l_2)r_1}\\\\\nR(l,r)&=&r_2+(1-r_2)r_1l_2\\sum_{i=0}^\\infty(1-l_2)^nr_1^n\\\\\n&=&r_2+\\frac{(1-r_2)r_1l_2}{1-(1-l_2)r_1}\n\\end{matrix}\n$$\n\n\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int maxn = 100005;\n\ninline int gi()\n{\n\tchar c = getchar();\n\twhile (c < '0' || c > '9') c = getchar();\n\tint sum = 0;\n\twhile ('0' <= c && c <= '9') sum = sum * 10 + c - 48, c = getchar();\n\treturn sum;\n}\n\nint n, q;\n\nstruct node\n{\n\tdouble l, r;\n\tnode (double _x = 0) {l = r = _x;}\n\tnode (double _l, double _r) {l = _l; r = _r;}\n\tnode operator + (const node &a) const {\n\t\treturn node(l * a.l / (1 - (1 - a.l) * r), a.r + (1 - a.r) * r * a.l / (1 - (1 - a.l) * r));\n\t}\n} t[maxn << 2];\n\n#define mid ((l + r) >> 1)\n#define lch (s << 1)\n#define rch (s << 1 | 1)\n\nvoid build(int s, int l, int r)\n{\n\tif (l == r) return t[s] = node(1. * gi() / gi()), void();\n\tbuild(lch, l, mid);\n\tbuild(rch, mid + 1, r);\n\tt[s] = t[lch] + t[rch];\n}\n\nvoid modify(int s, int l, int r, int x)\n{\n\tif (l == r) return t[s] = node(1. * gi() / gi()), void();\n\tif (x <= mid) modify(lch, l, mid, x);\n\telse modify(rch, mid + 1, r, x);\n\tt[s] = t[lch] + t[rch];\n}\n\nnode query(int s, int l, int r, int ql, int qr)\n{\n\tif (ql <= l && r <= qr) return t[s];\n\tif (qr <= mid) return query(lch, l, mid, ql, qr);\n\telse if (ql >= mid + 1) return query(rch, mid + 1, r, ql, qr);\n\telse return query(lch, l, mid, ql, qr) + query(rch, mid + 1, r, ql, qr);\n}\n\nint main()\n{\n\tfreopen(\"E.in\", \"r\", stdin);\n\tfreopen(\"E.out\", \"w\", stdout);\n\n\tn = gi(); q = gi();\n\tbuild(1, 1, n);\n\n\tint op, x, y;\n\twhile (q--) {\n\t\top = gi();\n\t\tif (op == 1) modify(1, 1, n, gi());\n\t\telse x = gi(), y = gi(), printf(\"%.10lf\\n\", query(1, 1, n, x, y).l);\n\t}\n\t\n\treturn 0;\n}\n```",
        "postTime": 1577864974,
        "uid": 119899,
        "name": "dsidsi",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF712E \u3010Memory and Casinos\u3011"
    },
    {
        "content": "## \u9898\u76ee\u94fe\u63a5\n\n[CF712E Memory and Casinos](https://www.luogu.org/problem/CF712E)\n\n## $Firstly$,\u524d\u8a00\n\n\u8fd9\u9053\u9898\u662f\u9053\u5047\u7684\u9ed1\u9898\n\n~~\u4e00\u7fa4\u5b66\u5f1f\u6bd4\u6211\u5148A \uff0c\u6211\u771f\u662f\u592a\u5f31\u4e86~~\n\n\u6211\u4eec\u7684\u601d\u8def\u90fd\u5e94\u8be5\u662f\u6765\u81ea\u4e8e\u8fd9\u4f4d\u5927\u4f6c\u7684 [czpcf](https://www.luogu.org/space/show?uid=65771)\n\n~~\u81ea\u6211\u8ba4\u4e3a\u4ed6\u4eec\u7684\u516c\u5f0f\u90fd\u63a8\u5f97\u5f88\u8349\u7387~~\n\n\u6240\u4ee5\u6211\u624d\u51b3\u5b9a\u518d \u5199\u4e00\u7bc7\n\n## $Secondly$,\u601d\u8def\n\n\u5b9a\u4e49 $f(i,j)$ \u4e3a\u4ece\u8d4c\u573a$i$\u51fa\u53d1 \u5728\u8d4c\u573a$i$\u8d62 \u5728\u8d4c\u573a$j$\u8d62\u5e76\u7ed3\u675f\u7684\u6982\u7387\n\n\u5b9a\u4e49 $f(j + 1,k)$ \u4e3a\u4ece\u8d4c\u573a$j$ \uff0b 1\u51fa\u53d1 \u5728\u8d4c\u573a$j$ + 1\u8d62 \u5728\u8d4c\u573a$k$\u8d62\u5e76\u7ed3\u675f\u7684\u6982\u7387\n\n\u5b9a\u4e49 $g(i,j)$ \u4e0e $f$\u6070\u76f8\u53cd\n\n\u90a3\u4e48 $f(i,k)$ = \u76f4\u63a5\u8d70\u8fc7\u53bb\u7684\u6982\u7387\uff08\u8fd9\u91cc\u4e2d\u95f4\u4e5f\u53ef\u80fd\u8f6c\u4e86\u5708 \u4f46\u6ca1\u6709\u8fc7$j$\uff09 + \u5728\u4e2d\u95f4\u8f6c\u4e86\u5708\u4e14\u8d70\u8fc7\u53bb\u7684\u6982\u7387(\u4e2d\u95f4\u7684\u5708\u8fc7\u4e86$j$)\n\n\u76f4\u63a5\u8d70\u8fc7\u53bb\u7684\u6982\u7387 = $f(i,j) *f(j + 1,k)$\n\n\u5728\u4e2d\u95f4\u8f6c\u4e86\u5708\u4e14\u8d70\u8fc7\u53bb\u7684\u6982\u7387 = $f(i,j) *f(j + 1,k)$*$\\displaystyle\\sum^{+\\infty}_{p=1}w^p$\n\n\u5176\u4e2d$w$\u4e3a\u5728\u4e2d\u95f4\u8f6c\u4e00\u5708\u7684\u6982\u7387\n\n\u91cd\u70b9\u5c31\u662f $w$\u600e\u4e48\u7b97\n\n$w$ = $(1-f(j+1,k))(1-g(i,j))$\n\n\u8fd9\u4e2a\u5f0f\u5b50\u662f\u600e\u4e48\u5f97\u51fa\u7684\u5462\uff1f\n\n\u5148\u7406\u89e3$1-f(j+1,k)$\n\n\u4e3a\u4ece\u8d4c\u573a$j$ \uff0b 1\u51fa\u53d1 \u5728\u8d4c\u573a$j$ + 1\u8d62 \u5728\u8d4c\u573a$k$\u8d62\u5e76\u7ed3\u675f\u7684\u6982\u7387\n\n\u8fd9\u91cc $1-f(j+1,k)$ \n\n\u8d4c\u573a$j$ \uff0b 1\u51fa\u53d1\u662f\u9ed8\u8ba4\u7684 \n\n\u6761\u4ef6\u53ea\u6709\n- **1**:\u5728\u8d4c\u573a$j$ + 1\u8d62 \n\n- **2**:\u5728\u8d4c\u573a$k$\u8d62\n\n\u4e24\u4e2a\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u4e0d\u6210\u7acb\n\n\u4f46\u6700\u540e$1,2$\u9020\u6210\u7684\u7ed3\u679c\u90fd\u662f\u4ece\u53f3\u533a\u95f4\u8fd4\u56de \uff08\u4e0d\u7ba1\u5979\u5728$[j + 1,k]$\u8f6c\u591a\u5c11\u5708\uff09\n\n## $Additionally$,\u5316\u7b80\n\n\n$$f(i,k)$$\n\n$$= f(i,j) *f(j + 1,k)\\displaystyle\\sum^{+\\infty}_{p=1}w^p$$\n\n$$= f(i,j) *f(j + 1,k)\\frac{1-w^{+\\infty}}{1-w}$$\n\n$$w^{+\\infty} = 0$$\n\n$$\\Rightarrow= \\frac{f(i,j) *f(j + 1,k)}{1-(1-f(j+1,k))(1-g(i,j))}$$\n\n\n\u8fd9\u4e0b\u5c31\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e86\n\n## $Eventually$\uff0c$Code$\n\n```cpp\n#include <map>\n#include <cstdio>\n#include <vector>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n#define reg register int\n#define isdigit(x) ('0' <= (x)&&(x) <= '9')\ntemplate<typename T>\ninline T Read(T Type)\n{\n\tT x = 0,f = 1;\n\tchar a = getchar();\n\twhile(!isdigit(a)) {if(a == '-') f = -1;a = getchar();}\n\twhile(isdigit(a)) {x = (x << 1) + (x << 3) + (a ^ '0');a = getchar();}\n\treturn x * f;\n}\n#define fi first\n#define se second\ntypedef double db;\nconst int MAXN = 100010;\ndb p[MAXN];\nstruct node\n{\n\tdouble g,f;\n}tree[MAXN << 2];\ninline void sum(db &f,db &g,db f1,db f2,db g1,db g2)\n{\n\tf = f1 * f2 / (1 - (1 - f2) * (1 - g1));\n\tg = g1 * g2 / (1 - (1 - f2) * (1 - g1));\n}\ninline void BuildTree(int k,int l,int r)\n{\n\tif(l == r)\n\t{\n\t\ttree[k].f = p[l],tree[k].g = 1 - p[l];\n\t\treturn;\n\t}\n\tint mid = l + r >> 1;\n\tBuildTree(k << 1,l,mid);\n\tBuildTree(k << 1 | 1,mid + 1,r);\n\tsum(tree[k].f,tree[k].g,tree[k << 1].f,tree[k << 1 | 1].f,tree[k << 1].g,tree[k << 1 | 1].g);\n}\ninline pair<db,db> query(int k,int l,int r,int L,int R)\n{\n\tif(L <= l&&r <= R) return make_pair(tree[k].f,tree[k].g);\n\tint mid = l + r >> 1;\n\tpair<db,db> k1,k2;k1.fi = k2.fi = k1.se = k2.se = 1;\n\tif(L <= mid) k1 = query(k << 1,l,mid,L,R);\n\tif(mid < R) k2 = query(k << 1 | 1,mid + 1,r,L,R);\n\tdb T1,T2;\n\tsum(T1,T2,k1.fi,k2.fi,k1.se,k2.se);\n\treturn make_pair(T1,T2);\n}\ninline void update(int k,int l,int r,int pos,db x)\n{\n\tif(l == r)\n\t{\n\t\ttree[k].f = x,tree[k].g = 1 - x;\n\t\treturn;\n\t}\n\tint mid = l + r >> 1;\n\tif(pos <= mid) update(k << 1,l,mid,pos,x);\n\telse update(k << 1 | 1,mid + 1,r,pos,x);\n\tsum(tree[k].f,tree[k].g,tree[k << 1].f,tree[k << 1 | 1].f,tree[k << 1].g,tree[k << 1 | 1].g);\n}\nint main()\n{\n\tint n = Read(1),q = Read(1);\n\tfor(reg i = 1;i <= n;i++)\n\t{\n\t\tint a = Read(1),b = Read(1);\n\t\tp[i] = (db)a / b;\n\t}\n\tBuildTree(1,1,n);\n\twhile(q--)\n\t{\n\t\tint sit = Read(1);\n\t\tif(sit & 1)\n\t\t{\n\t\t\tint pos = Read(1),a = Read(1),b = Read(1);\n\t\t\tupdate(1,1,n,pos,((db)a / b));\n\t\t} else {\n\t\t\tint l = Read(1),r = Read(1);\n\t\t\tcout << query(1,1,n,l,r).fi << endl;\n\t\t}\n\t}\n    return 0;\n}\n```\n\n\n\n\n\n\n ",
        "postTime": 1571723485,
        "uid": 73992,
        "name": "resftlmuttmotw",
        "ccfLevel": 0,
        "title": "CF712E Memory and Casinos \u671f\u671b\uff0c\u6982\u7387\u590d\u4e60"
    },
    {
        "content": "## \u9898\u610f\n\u6bcf\u6b21\u8be2\u95ee\u4e00\u6bb5\u533a\u95f4[l,r]\uff0c\u6c42\u4ece\u6700\u5de6\u8fb9\u8d70\u5230\u6700\u53f3\u8fb9\uff08r+1\uff09\u7684\u6982\u7387\uff08\u82e5\u8d70\u5230l-1\uff0c\u5219GG\u4e86\uff09\uff0c\u6bcf\u4e2a\u70b9\u4e0a\u5199\u6709\u5411\u53f3\u8d70\u7684\u6982\u7387\u3002\u652f\u6301\u5355\u70b9\u4fee\u6539\u3002\n\n\n## \u601d\u8003\n\u82e5\u53ea\u67e5\u8be2\u4e00\u6b21\uff0c\u90a3\u53ea\u8981\u77e5\u9053\u6bcf\u4e2a\u70b9\u5728\u4e0d\u8d70\u5230l-1\u7684\u60c5\u51b5\u4e0b\uff0c\u5411\u53f3\u79fb\u52a8\u4e00\u683c\u7684\u6982\u7387\u5c31\u884c\u4e86\uff0c\u6700\u540e\u4e58\u8d77\u6765\u5c31\u662f\u7b54\u6848\u3002\n\n\u4f46\u6211\u4eec\u5ffd\u7565\u4e86\u4e00\u4ef6\u4e8b\u60c5\uff0c\u82e5\u4ece\u4e00\u4e2a\u533a\u95f4\u7684\u67d0\u4e00\u70b9\u51fa\u53d1\uff0c\u4ece\u5de6\u8fb9\u8d70\u51fa\u53bb\u548c\u53f3\u8fb9\u8d70\u51fa\u53bb\u7684\u6982\u7387\u548c\u4e3a1\uff08\u4e0d\u53ef\u80fd\u505c\u5728\u4e2d\u95f4\uff09\uff0c\u4e8e\u662f\u6211\u4eec\u8981\u8bbe\u8ba1\u4e00\u4e2a\u72b6\u6001\uff0c\u5e76\u80fd\u591f\u5408\u5e76\uff0c\u8fd9\u6837\u624d\u6709\u53ef\u80fd\u4f18\u5316\u590d\u6742\u5ea6\u3002\n\n\n\u8bbe [l,r] \u533a\u95f4\u7684L\u4e3a\u4ece\u7b2cl\u4e2a\u70b9\uff08\u6700\u5de6\u8fb9\uff09\u51fa\u53d1\uff0c\u5728\u53f3\u8fb9\u8d70\u51fa\u53bb\u7684\u6982\u7387\uff0cR\u4e3a\u7b2cR\u4e2a\u70b9\u51fa\u53d1\uff0c\u5728\u5de6\u8fb9\u8d70\u51fa\u53bb\u7684\u6982\u7387\u3002\n\n\n|[L1|-->|R1]|[L2|-->|R2]|\n| :----------: | :----------: | :----------: | :----------: | :----------: | :----------: |\n|[ L|--|--|--|-->|R ]|\n\n\n\n\u8bf7\u8bb0\u4f4f\uff0c\u4ed6\u4eec\u6bcf\u4e2a\u7684\u5b9e\u9645\u610f\u4e49\u3002\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u8981\u4e48\u4ece\u5de6\u8fb9\u8d70\u51fa\u53bb\uff0c\u8981\u4e48\u4ece\u53f3\u8fb9\u8d70\u51fa\u53bb\uff0c\u6240\uff081-L1\uff09\u7684\u5b9e\u9645\u610f\u4e49\u5c31\u662f\u4ece\uff08\u5de6\u8fb9\u51fa\u53d1\uff0c\u4e0d\u4ece\u53f3\u8fb9\u8d70\u51fa\uff09\uff0c\u5373\uff08\u4ece\u5de6\u8fb9\u51fa\u53d1\uff0c\u4ece\u5de6\u8fb9\u8d70\u51fa\u53bb\u7684\u6982\u7387\uff09\u3002\n\n\u90a3\u4e48\u82e5\u6709\u4e24\u4e2a\u8fde\u7eed\u7684\u533a\u95f4\uff0c\u5408\u5e76\u6210\u4e00\u4e2a\u65b0\u533a\u95f4\u4f1a\u6709\u600e\u6837\u7684\u7b54\u6848\uff1f\n\u8bbe\u5de6\u53f3\u4e24\u4e2a\u533a\u95f4\u7684\u7b54\u6848\u5206\u522b\u4e3aL1,R1,L2,R2\uff0c\u5219\uff1a\n\n###### L= L1*L2----\u8d70\u5230\u53f3\u8fb9\u8fd8\u8981\u518d\u8d70\u5230\u66f4\u53f3\u8fb9\n###### +L1*(1-L2)*(1-R1)*L2----\u7b2c\u4e00\u6b21\u5411\u53f3\u8fb9\u8d70\u5931\u8d25\u4e86\uff0c\u518d\u9000\u56de\u6765\u518d\u5411\u53f3\u8d70\n###### +L1*(1-L2)*(1-R1)*(1-L2)*(1-R1)*L2----\u53cd\u53cd\u590d\u590d.......\n###### +.......\n\n\u6574\u7406\u4e00\u4e0b\uff0c\n\n###### L=L1*L2+L1*L2*(1-L2)*(1-R1)+L1*L2*(1-L2)^2+.......\n###### (1-L2)*(1-R1)L=L1*L2*(1-L2)*(1-R1)+L1*L2*(1-L2)^2+.......\n\u4f5c\u5dee\uff0c\n###### L(1-(1-L2)(1-R1))=L1L2\n###### L=L1L2/(1-(1-L2)(1-R1))\nR\u4e5f\u53ef\u4ee5\u7c7b\u4f3c\u5730\u5f97\u5230\uff0c\u4f46\u6ce8\u610f\u5b83\u4eec\u7684\u548c\u4e0d\u4e00\u5b9a\u4e3a1\uff0c\u56e0\u4e3a\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u7aef\u70b9\u3002\n\n\u7b80\u5355\u5730\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=1E5+5;\nint n,m;\ndouble x,y,a[maxn];\nstruct tree{int l,r;double L,R;}t[maxn*4];\ntree merge(tree x,tree y)\n{\n\ttree z;\n\tz.l=x.l;z.r=y.r;\n\tz.L=x.L*y.L/(1-(1-y.L)*(1-x.R));\n\tz.R=x.R*y.R/(1-(1-y.L)*(1-x.R));//\u4e0d\u8981\u8ba4\u4e3a\u53cd\u4e00\u53cd\u5c31\u5bf9\u4e86QAQ \n\treturn z;\n}\nvoid build(int l,int r,int num)\n{\n\tt[num].l=l,t[num].r=r;\n\tif(l==r)\n\t{\n\t\tt[num].L=a[l];\n\t\tt[num].R=1-a[l];\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(l,mid,num*2);build(mid+1,r,num*2+1);\n\tt[num]=merge(t[num*2],t[num*2+1]);\n}\nvoid change(int pos,double val,int num)\n{\n\tif(t[num].l==t[num].r)\n\t{\n\t\tt[num].L=val;\n\t\tt[num].R=1-val;\n\t\treturn;\n\t}\n\tint mid=(t[num].l+t[num].r)>>1;\n\tif(pos<=mid)change(pos,val,num*2);\n\telse change(pos,val,num*2+1);\n\tt[num]=merge(t[num*2],t[num*2+1]);\n}\ntree ask(int L,int R,int num)\n{\n\tif(L<=t[num].l&&t[num].r<=R)return t[num];\n\tint mid=(t[num].l+t[num].r)>>1;\n\tif(R<=mid)return ask(L,R,num*2);\n\telse if(mid<L)return ask(L,R,num*2+1);\n\telse return merge(ask(L,R,num*2),ask(L,R,num*2+1));\n}\nint main()\n{\n\tios::sync_with_stdio(false);\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tcin>>x>>y;\n\t\ta[i]=x/y;\n\t}\n\tbuild(1,n,1);\n\twhile(m--)\n\t{\n\t\tint opt,d;\n\t\tcin>>opt;\n\t\tif(opt==1)\n\t\t{\n\t\t\tcin>>d>>x>>y;\n\t\t\tchange(d,x/y,1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint l,r;\n\t\t\tcin>>l>>r;\n\t\t\tcout<<fixed<<setprecision(8)<<ask(l,r,1).L<<endl;\n\t\t}\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1552649256,
        "uid": 65771,
        "name": "czpcf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF712E \u3010Memory and Casinos\u3011"
    }
]