[
    {
        "content": "\u7b80\u5355\u9898\u3002\n\n\u5148\u628a\u6811\u62cd\u6241\u6210\u5e8f\u5217\uff0c\u5728 dfn \u5e8f\u4e0a\u533a\u95f4\u4fee\u6539\u533a\u95f4\u67e5\u8be2\u3002\n\n\u7531\u4e8e\u65f6\u9650 4s\uff0c\u6211\u4eec\u53ef\u4ee5\u6574\u70b9\u602a\u7684\uff0c\u6bd4\u5982 `bitset`\u3002\n\n\u628a\u533a\u95f4\u5185\u7684\u6570\u6709/\u6ca1\u6709\u8868\u793a\u6210 $01$ \u5e8f\u5217\uff0c\u8003\u8651\u5230\u533a\u95f4\u52a0\u53d6\u6a21\u76f8\u5f53\u4e8e\u533a\u95f4\u5185\u7684\u6570\u5168\u90e8**\u5faa\u73af\u53f3\u79fb**\uff0c\u7528 `bitset` \u53ef\u4ee5\u505a\u5230 $O(\\frac m \\omega)$\u3002\n\n\u7136\u540e\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u8fd9\u4e2a\u5e8f\u5217\u5c31\u884c\u4e86\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u548c\u8d28\u6570\u7684 `bitset` \u4e0e\u4e00\u4e0b\uff0c\u590d\u6742\u5ea6 $O\\left(\\dfrac{nm\\log n}{\\omega}\\right)$\u3002\u8dd1\u5f97\u98de\u5feb\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nnamespace vbzIO {\n\tchar ibuf[(1 << 20) + 1], *iS, *iT;\n\t#if ONLINE_JUDGE\n\t#define gh() (iS == iT ? iT = (iS = ibuf) + fread(ibuf, 1, (1 << 20) + 1, stdin), (iS == iT ? EOF : *iS++) : *iS++)\n\t#else\n\t#define gh() getchar()\n\t#endif\n\t#define rd read\n\t#define wr write\n\t#define pc putchar\n\t#define pi pair<int, int>\n\t#define mp make_pair\n\t#define fi first\n\t#define se second\n\t#define pb push_back\n\t#define ins insert\n\t#define era erase\n\tinline int read () {\n\t\tchar ch = gh();\n\t\tint x = 0;\n\t\tbool t = 0;\n\t\twhile (ch < '0' || ch > '9') t |= ch == '-', ch = gh();\n\t\twhile (ch >= '0' && ch <= '9') x = (x << 1) + (x << 3) + (ch ^ 48), ch = gh();\n\t\treturn t ? ~(x - 1) : x;\n\t}\n\tinline void write(int x) {\n\t\tif (x < 0) {\n\t\t\tx = ~(x - 1);\n\t\t\tputchar('-');\n\t\t}\n\t\tif (x > 9)\n\t\t\twrite(x / 10);\n\t\tputchar(x % 10 + '0');\n\t}\n}\nusing vbzIO::read;\nusing vbzIO::write;\n\nconst int N = 1e5 + 100;\nconst int M = 1e3 + 100;\nint n, m, q, dfc, tot, pr[M], a[N], id[N], p[N], sz[N], tg[N << 2];\nvector<int> g[N];\nbitset<M> tr[N << 2], vis, S;\n\nvoid dfs(int u, int fa) {\n\tp[id[u] = ++dfc] = u, sz[u] = 1;\n\tfor (int v : g[u]) {\n\t\tif (v == fa) continue;\n\t\tdfs(v, u), sz[u] += sz[v];\n\t}\n}\n\n#define ls x << 1\n#define rs x << 1 | 1\n#define mid ((l + r) >> 1)\nvoid pushup(int x) { tr[x] = tr[ls] | tr[rs]; }\nvoid pushtg(int x, int c) {\n\tc %= m, tg[x] = (tg[x] + c) % m;\n\ttr[x] = (tr[x] >> (m - c)) | ((tr[x] << c) & S);\n}\n\nvoid pushdown(int x) {\n\tif (!tg[x]) return;\n\tpushtg(ls, tg[x]), pushtg(rs, tg[x]);\n\ttg[x] = 0;\n}\n\nvoid build(int l, int r, int x) {\n\tif (l == r) return tr[x][a[p[l]]] = 1, void();\n\tbuild(l, mid, ls), build(mid + 1, r, rs), pushup(x);\n}\n\nvoid add(int l, int r, int s, int t, int c, int x) {\n\tif (s <= l && r <= t) return pushtg(x, c);\n\tpushdown(x);\n\tif (s <= mid) add(l, mid, s, t, c, ls);\n\tif (t > mid) add(mid + 1, r, s, t, c, rs);\n\tpushup(x);\n}\n\nauto qry(int l, int r, int s, int t, int x) {\n\tif (s <= l && r <= t) return tr[x];\n\tpushdown(x);\n\tif (s > mid) return qry(mid + 1, r, s, t, rs);\n\telse if (t <= mid) return qry(l, mid, s, t, ls);\n\telse return qry(l, mid, s, t, ls) | qry(mid + 1, r, s, t, rs);\n}\n\nint main() {\n\tn = rd(), m = rd();\n\tfor (int i = 1; i <= n; i++) a[i] = rd() % m;\n\tfor (int i = 1, u, v; i <= n - 1; i++) {\n\t\tu = rd(), v = rd();\n\t\tg[u].pb(v), g[v].pb(u);\n\t}\n\tdfs(1, 0), build(1, n, 1);\n\tvis.set(), vis[1] = vis[0] = 0;\n\tfor (int i = 2; i <= m; i++) {\n\t\tif (vis[i]) pr[++tot] = i;\n\t\tfor (int j = 1; j <= tot && i * pr[j] <= m; j++) {\n\t\t\tvis[i * pr[j]] = 0;\n\t\t\tif (i % pr[j] == 0) break;\n\t\t}\n\t}\n\tfor (int i = 0; i <= m - 1; i++) S[i] = 1;\n\tq = rd();\n\twhile (q--) {\n\t\tint op = rd(), u = rd();\n\t\tif (op == 1) {\n\t\t\tint v = rd();\n\t\t\tadd(1, n, id[u], id[u] + sz[u] - 1, v % m, 1);\n\t\t} else wr((qry(1, n, id[u], id[u] + sz[u] - 1, 1) & vis).count()), puts(\"\");\n\t}\n\t\n\treturn 0;\n}\n\n```",
        "postTime": 1682574333,
        "uid": 306573,
        "name": "Ender32k",
        "ccfLevel": 0,
        "title": "CF633G Yash And Trees"
    },
    {
        "content": "\n\n\u7528 `dfs` \u5e8f\u628a\u6811\u62cd\u6210\u533a\u95f4\uff0c\u8f6c\u5316\u4e3a\u533a\u95f4\u95ee\u9898\u3002\n\n\u5efa\u7ebf\u6bb5\u6811\uff0c\u7ef4\u62a4\u533a\u95f4 `bitset` \u8868\u793a\u4e00\u4e2a\u53d6\u6a21\u540e\u7684\u6570\u662f\u5426\u5728\u533a\u95f4\u5185\u51fa\u73b0\u8fc7\u3002\n\n\u7b54\u6848\u5373\u4e3a\u533a\u95f4\u7684 `bitset` $\\&$ \u8d28\u6570\u96c6\u7684 `bitset` \u5f97\u5230\u7684 `bitset` \u4e2d $1$ \u7684\u4e2a\u6570\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(\\frac{nm\\log n}{\\omega})$\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\ninline ll read()\n{\n\tll x = 0, f = 1;\n\tchar c = getchar();\n\twhile (c < '0' || c > '9')\n\t{\n\t\tif (c == '-')\n\t\t\tf = -1;\n\t\tc = getchar();\n\t}\n\twhile (c >= '0' && c <= '9')\n\t\tx = x * 10ll + c - '0', c = getchar();\n\treturn x * f;\n}\n\nconst int _ = 1e5 + 10;\n\nint n, m, q, a[_];\n\nbitset<1005> full, tr[_ << 2], ans, pr;\n\nint lz[_ << 2];\n\nint id[_], dfn[_], ed[_], cnt;\n\nvector<int> d[_];\n\nvoid dfs(int u, int fa)\n{\n\tid[++cnt] = u, dfn[u] = cnt;\n\tfor(int v : d[u]) if(v != fa) dfs(v, u);\n\ted[u] = cnt;\n}\n\nvoid pushup(int o)\n{\n\ttr[o] = tr[o << 1] | tr[o << 1 | 1];\n}\n\nvoid tag(int o, int v)\n{\n\tlz[o] += v;\n\tif(lz[o] >= m) lz[o] -= m;\n\ttr[o] = ((tr[o] << v) & full) | (tr[o] >> (m - v));\n}\n\nvoid pushdown(int o)\n{\n\tif(lz[o])\n\t\ttag(o << 1, lz[o]), tag(o << 1 | 1, lz[o]), lz[o] = 0;\n}\n\nvoid build(int o, int l, int r)\n{\n\tif(l == r)\n\t{\n\t\ttr[o].reset();\n\t\ttr[o].set(a[id[l]]);\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tbuild(o << 1, l, mid), build(o << 1 | 1, mid + 1, r);\n\tpushup(o);\n}\n\nvoid update(int o, int l, int r, int L, int R, int v)\n{\n\tif(r < L || l > R) return;\n\tif(L <= l && r <= R) return tag(o, v), void();\n\tpushdown(o);\n\tint mid = (l + r) >> 1;\n\tif(L <= mid)\n\t\tupdate(o << 1, l, mid, L, R, v);\n\tif(R > mid)\n\t\tupdate(o << 1 | 1, mid + 1, r, L, R, v);\n\tpushup(o);\n}\n\nvoid query(int o, int l, int r, int L, int R)\n{\n\tif(r < L || l > R) return;\n\tif(L <= l && r <= R) return ans |= tr[o], void();\n\tpushdown(o);\n\tint mid = (l + r) >> 1;\n\tif(L <= mid) query(o << 1, l, mid, L, R);\n\tif(R > mid) query(o << 1 | 1, mid + 1, r, L, R);\n\tpushup(o);\n}\n\nsigned main()\n{\n\tn = read(), m = read();\n\tfor(int i = 0; i < m; ++i) full.set(i);\n\tfor(int i = 1; i <= n; ++i) a[i] = read() % m;\n\tfor(int i = 1, u, v; i < n; ++i)\n\t{\n\t\tu = read(), v = read();\n\t\td[u].push_back(v);\n\t\td[v].push_back(u);\n\t}\n\tq = read();\n\tdfs(1, 0);\n\tbuild(1, 1, n);\n\tfor(int i = 2; i < m; ++i) pr.set(i);\n\tfor(int i = 2; i < m; ++i)\n\t\tif(pr[i])\n\t\t\tfor(int j = i * 2; j <= m; j += i)\n\t\t\t\tpr.reset(j);\n\tint op, x, y;\n\twhile(q--)\n\t{\n\t\top = read();\n\t\tif(op == 1)\n\t\t{\n\t\t\tx = read(), y = read() % m;\n\t\t\tupdate(1, 1, n, dfn[x], ed[x], y);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tx = read();\n\t\t\tans.reset();\n\t\t\tquery(1, 1, n, dfn[x], ed[x]);\n\t\t\tcout << (ans & pr).count() << \"\\n\";\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1669857453,
        "uid": 257146,
        "name": "orz_z",
        "ccfLevel": 0,
        "title": "CF633G Yash And Trees"
    },
    {
        "content": "`bitset` \u548c\u7ebf\u6bb5\u6811\u878d\u5408\u3002\n\n## \u601d\u8def\n\n\u8003\u8651\u5148\u628a\u6811\u8dd1\u4e00\u904d dfs \u5e8f\u6254\u5230\u5e8f\u5217\u4e0a\u64cd\u4f5c\u3002\u8fd9\u6837\u4f1a\u65b9\u4fbf\u8bb8\u591a\u3002\u95ee\u9898\u53d8\u6210\u533a\u95f4\u4fee\u6539\uff08\u7edf\u4e00\u52a0\uff09\u533a\u95f4\u67e5\u8be2\u3002\n\n\u5bb9\u6613\u53d1\u73b0 $m$ \u4e0d\u5927\uff0c\u53ef\u4ee5\u8bb0\u5f55\u4e00\u6bb5\u533a\u95f4\u5185\u6709\u6ca1\u6709\u8fd9\u4e2a\u6570\uff0c\u9700\u8981\u4f7f\u7528 `bitset` \u53bb\u64cd\u4f5c\u3002\n\n\u5bf9\u4e8e\u52a0\u6cd5\u64cd\u4f5c\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f `<<` \u64cd\u4f5c\uff0c\u5728\u7ebf\u6bb5\u6811\u4e0a\u9700\u8981\u4f7f\u7528\u4e00\u4e2a `lazytag` \u6765\u7ef4\u62a4\uff0c\u7ef4\u62a4\u7684\u65f6\u5019\u6bcf\u6b21\u5148\u53d6\u51fa `bitset` \u7684\u524d `lazytag` \u4f4d\uff08\u64cd\u4f5c\u65f6\u5019\u5c31\u662f\u53f3\u79fb\u957f\u5ea6\u51cf\u53bb `lazytag` \u4f4d\uff09\uff0c\u7136\u540e\u5c06\u5269\u4f59\u4f4d\u5411\u5de6\u79fb `lazytag` \u4f4d\u6216\u8d77\u6765\u5373\u53ef\uff0c\u672c\u8d28\u4e0a\u662f\u6a21\u62df\u4e00\u4e2a\u5faa\u73af\u3002\n\n\u5269\u4e0b\u6765\u5c31\u662f\u7ecf\u5178\u7ebf\u6bb5\u6811\uff0c\u6216\u8bb8\u4f60\u9700\u8981\u6ce8\u610f\u4e00\u4e0b\u5e38\u6570\u3002\n\n\u7ec6\u8282\u8fd8\u53ef\u4ee5\uff0c\u590d\u6742\u5ea6 $O(\\dfrac{nm\\log n}{w})$\uff0c\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define s(i,j) ((i-1)*m+j)\n#define int long long\n#define double long double\n#define mid ((l+r)>>1)\nusing namespace std;\nconst int mod=1e9+7;\nvector<int> vc[100005];\nint a[100005];\nint cnt,ind[100005],outd[100005],num[100005];\nvoid dfs(int now,int fa){\n\tind[now]=++cnt;\n\tnum[cnt]=a[now];\n\tfor(auto v:vc[now]) if(v!=fa) dfs(v,now);\n\toutd[now]=cnt;\n}\nint m;\nstruct sgt{\n\tbitset<1000> f[400005],ept;\n\tint lzt[400005];\n\tvoid pushdown(int i){\n\t\tf[i*2]=((f[i*2]>>(m-lzt[i]))|(f[i*2]<<lzt[i]));\n\t\t(lzt[i*2]+=lzt[i])%=m;\n\t\tf[i*2+1]=((f[i*2+1]>>(m-lzt[i]))|(f[i*2+1]<<lzt[i]));\n\t\t(lzt[i*2+1]+=lzt[i])%=m;\n\t\tlzt[i]=0;\n\t}\n\tvoid build(int i,int l,int r){\n\t\tif(l==r){\n\t\t\tf[i].set(num[l]);\n\t\t\treturn ;\n\t\t}\n\t\tbuild(i*2,l,mid),build(i*2+1,mid+1,r);\n\t\tf[i]=f[i*2]|f[i*2+1];\n\t}\n\tvoid change(int i,int l,int r,int ql,int qr,int cg){\n\t\tif(ql<=l&&r<=qr){\n\t\t\tf[i]=((f[i]>>(m-cg))|(f[i]<<cg));\n\t\t\t(lzt[i]+=cg)%=m;\n\t\t\treturn ;\n\t\t}\n\t\tpushdown(i);\n\t\tif(ql<=mid) change(i*2,l,mid,ql,qr,cg);\n\t\tif(qr>mid) change(i*2+1,mid+1,r,ql,qr,cg);\n\t\tf[i]=f[i*2]|f[i*2+1];\n\t}\n\tbitset<1000> qry(int i,int l,int r,int ql,int qr){\n\t\tif(ql<=l&&r<=qr) return f[i];\n\t\tif(ql>r||qr<l) return ept;\n\t\tpushdown(i);\n\t\treturn qry(i*2,l,mid,ql,qr)|qry(i*2+1,mid+1,r,ql,qr);\n\t}\n}tree;\nint prm[100005],tot;\nbool isp(int n){\n\tfor(int i=2;i*i<=n;i++) if(n%i==0) return false;\n\treturn true;\n}\nsigned main(){\n\tint n;\n\tcin>>n>>m;\n\tfor(int i=2;i<m;i++) if(isp(i)) prm[++tot]=i;\n\tfor(int i=1;i<=n;i++) cin>>a[i],a[i]%=m;\n\tfor(int i=1;i<n;i++){\n\t\tint u,v;\n\t\tcin>>u>>v;\n\t\tvc[u].push_back(v);\n\t\tvc[v].push_back(u);\n\t}\n\tdfs(1,0);\n\ttree.build(1,1,n);\n\tint q;\n\tcin>>q;\n\twhile(q--){\n\t\tint opt;\n\t\tcin>>opt;\n\t\tif(opt==1){\n\t\t\tint u,v;\n\t\t\tcin>>u>>v; v%=m;\n\t\t\ttree.change(1,1,n,ind[u],outd[u],v);\n\t\t}\n\t\telse{\n\t\t\tint u;\n\t\t\tcin>>u;\n\t\t\tauto v=tree.qry(1,1,n,ind[u],outd[u]);\n\t\t\tint ans=0;\n\t\t\tfor(int i=1;i<=tot;i++){\n\t\t\t\tans+=v[prm[i]];\n\t\t\t}\n\t\t\tcout<<ans<<endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1667663410,
        "uid": 116664,
        "name": "Daniel_lele",
        "ccfLevel": 8,
        "title": "CF633G \u9898\u89e3"
    },
    {
        "content": "\u53c8\u662f\u4e00\u4e2a\u96be\u5ea6\u865a\u9ad8\u7684\u65e0\u601d\u7ef4\u96be\u5ea6\u9898\u3002\n\n\u6811\u4e0a\u5b50\u6811\u64cd\u4f5c\u76f4\u63a5\u641e dfs \u5e8f\u4e0b\u6765\uff0c\u90a3\u4e48 u \u7684\u5b50\u6811\u533a\u95f4\u5728 dfs \u5e8f\u4e0a\u5bf9\u5e94 $[dfn_u,dfn_u+siz_u-1]$\u3002\n\n\u95ee\u9898\u8f6c\u53d8\u4e3a\u533a\u95f4\u64cd\u4f5c\uff0c\u6ce8\u610f\u5230 m \u5f88\u5c0f\uff0c\u800c\u6211\u4eec\u53ea\u5173\u5fc3\u6709\u591a\u5c11\u79cd\u5e76\u4e0d\u5173\u5fc3\u5177\u4f53\u6570\u91cf\uff0c\u6240\u4ee5\u76f4\u63a5\u5bf9\u7ebf\u6bb5\u6811\u4e0a\u6bcf\u4e2a\u7ed3\u70b9\u5f00\u4e00\u4e2a bitset \u5373\u53ef\u3002\n\n\u533a\u95f4\u52a0\u5c31\u76f8\u5f53\u4e8e\u8fd9\u4e2a\u533a\u95f4\u7684 bitset \u96c6\u4f53\u5de6\u79fb\uff0c\u6ce8\u610f\u8fd8\u6709\u6700\u5de6\u8fb9\u7684\u4e00\u90e8\u5206\u4f4d\u8981\u79fb\u5230\u6700\u53f3\u8fb9\u3002\n\n\u8fd9\u91cc\u53e3\u80e1\u4e00\u4e0b bitset \u7684\u533a\u95f4\u6e05 0 \u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\u8981\u5c06\u540e len \u4f4d\u6e05\u96f6\u5c31\u5148\u53f3\u79fb len \u4f4d\u518d\u5de6\u79fb\u56de\u6765\u5373\u53ef\u3002\n\n\u5728\u5916\u9762\u9884\u5904\u7406\u4e00\u4e2a\u8d28\u6570\u7684 bitset\uff0c\u90a3\u4e48\u7b54\u6848\u4e3a\u533a\u95f4\u7684 bitset \u6216\u8d77\u6765\uff0c\u7136\u540e\u518d\u4e0e\u4e0a\u8d28\u6570\u7684 bitset\uff0c\u7b54\u6848\u5c31\u662f 1 \u7684\u4e2a\u6570\u3002\n\n\u590d\u6742\u5ea6 $O(\\frac{nm\\log n}{w})$\u3002\u5b9e\u6d4b\u8dd1\u5f97\u4e0d\u6162\uff0c\u53ea\u7528\u4e86 1.2s\u3002\n\nhttps://codeforces.com/contest/633/submission/167127754",
        "postTime": 1659716875,
        "uid": 115936,
        "name": "\u6cf7\u6cfd\u4e09\u6708",
        "ccfLevel": 0,
        "title": "CF633G"
    },
    {
        "content": "## CF633G\n\n\u4e00\u9053\u6076\u5fc3\u7684dfn\u7ebf\u6bb5\u6811\u9898\u76ee.\n\n\u9898\u610f\u7b80\u4ecb: \u4e24\u79cd\u64cd\u4f5c, \u7b2c\u4e00\u4e2a\u662f\u533a\u95f4\u52a0\u6cd5, \u7b2c\u4e8c\u4e2a\u662f\u533a\u95f4\u53d6\u4f59\u4e4b\u540e\u6570**\u4e0d\u540c\u7684**\u8d28\u6570\u4e2a\u6570.\n\n\u770b\u8d77\u6765\u5f88\u5947\u602a, \u4f46\u662f\u901a\u8fc7\u7ecf\u9a8c, \u6bcf\u4e00\u6b21\u9047\u89c1\u4e00\u4e2a\u5947\u602a\u7684\u9898, \u5148\u770b\u6570\u636e\u8303\u56f4\u91cc\u9762\u6700\u5c0f\u7684\u6570: $m(m\\leqslant1000)$, \u4e5f\u5c31\u662f\u819c\u6570. \u819c\u6570\u5f88\u5c0f, \u4e0d\u59a8\u5148\u628a\u6811\u62cd\u5e73, \u7136\u540e\u5efa\u4e00\u9897\u7ebf\u6bb5\u6811, \u6bcf\u4e2a\u8282\u70b9\u5b58\u4e00\u4e2a\u5927\u5c0f\u4e3a$m$\u7684\u7ebf\u6bb5\u6811, \u8bb0\u5f55\u91cc\u9762\u819c$m$\u4e0d\u540c\u7684\u6570\u6709\u591a\u5c11\u4e2a. \u7136\u540e\u6240\u6709\u7684\u64cd\u4f5c\u5c31\u5f88\u6e05\u6670\u4e86.\n\n\u653e\u4e0a\u4e11\u964b\u7684\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<bitset>\n#include<queue>\n#define mid ((l+r)>>1)\nusing namespace std;\nint n, m, q;\nint arr[100005];\nbitset<1005>full;// \u5168\u90e8\u4e3a1, \u53bb\u6389\u5de6\u79fb\u65f6\u4ea7\u751f\u7684\u8d8a\u754c\u76841\nbitset<1005>tree[400005];// \u7ebf\u6bb5\u6811\nint tag[400005];// lazy_tag\nvector<int>road[100005];// \u5b58\u56fe\nint id[100005], dfn[100005], las[100005], cnt;// \u62cd\u5e73\u6574\u68f5\u6811\nvoid dfs(int x, int pa) {// \u62cd\u5e73\u6574\u68f5\u6811\n\tid[++cnt] = x; dfn[x] = cnt;\n\tfor (int it : road[x])if (it != pa)dfs(it, x);\n\tlas[x] = cnt;\n}\nvoid push_up(int id) {\n\ttree[id] = tree[id << 1] | tree[id << 1 | 1];\n}\nvoid operate(int id, int v) {// \u52a0\u6cd5\u64cd\u4f5c, \u5e76\u4e14\u53d6\u4f59\n\ttag[id] += v; if (tag[id] >= m)tag[id] -= m;\n\ttree[id] = ((tree[id] << v) & full) | (tree[id] >> (m - v));\n}\nvoid push_down(int id) { if (tag[id])operate(id << 1, tag[id]), operate(id << 1 | 1, tag[id]), tag[id] = 0; }\nvoid build(int l, int r, int id) {\n\tif (l == r) {\n\t\ttree[id].reset();\n\t\ttree[id].set(arr[::id[l]]);\n\t\treturn;\n\t}\n\tbuild(l, mid, id << 1), build(mid + 1, r, id << 1 | 1), push_up(id);\n}\nvoid shift(int l, int r, int s, int t, int v, int id) {// \u533a\u95f4\u52a0\u6cd5\n\tif (r<s || l>t)return;\n\tif (s <= l && r <= t)operate(id, v);\n\telse push_down(id), shift(l, mid, s, t, v, id << 1), shift(mid + 1, r, s, t, v, id << 1 | 1), push_up(id);\n}\nbitset<1005>ans, prime;\nvoid query(int l, int r, int s, int t, int id) {// (\u6211\u7684)\u6807\u51c6\u7ebf\u6bb5\u6811\u5199\u6cd5......\n\tif (r<s || l>t)return;\n\tif (s <= l && r <= t)ans |= tree[id];\n\telse push_down(id), query(l, mid, s, t, id << 1), query(mid + 1, r, s, t, id << 1 | 1), push_up(id);\n}\nint main() {\n\tcin >> n >> m;\n\tfor (int i = 0; i < m; i++)full.set(i);\n\tfor (int i = 1; i <= n; i++)cin >> arr[i], arr[i] %= m;\n\tfor (int i = 1; i < n; i++) {\n\t\tint l, r;\n\t\tcin >> l >> r;\n\t\troad[l].emplace_back(r);\n\t\troad[r].emplace_back(l);\n\t}\n\tcin >> q;\n\tdfs(1, 0);\n\tbuild(1, n, 1);\n\tfor (int i = 2; i < m; i++)prime.set(i);\n\tfor (int i = 2; i < m; i++)\n\t\tif (prime[i])\n\t\t\tfor (int u = (i << 1); u <= m; u += i)\n\t\t\t\tprime.reset(u);// \u5904\u7406\u8d28\u6570\u7684bitset\n\tfor (int i = 1; i <= q; i++) {\n\t\tint op;\n\t\tcin >> op;\n\t\tif (op == 1) {\n\t\t\tint x, q;\n\t\t\tcin >> x >> q;\n\t\t\tq %= m;\n\t\t\tshift(1, n, dfn[x], las[x], q, 1);\n\t\t}\n\t\telse {\n\t\t\tint x;\n\t\t\tcin >> x;\n\t\t\tans.reset();\n\t\t\tquery(1, n, dfn[x], las[x], 1);\n\t\t\tcout << (ans & prime).count() << endl;// bitset\u7684count()\u51fd\u6570\u5904\u7406\u4e00\u7684\u6570\u91cf.\n\t\t}\n\t}\n}\n```\n",
        "postTime": 1563869813,
        "uid": 38485,
        "name": "Erina",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF633G \u3010Yash And Trees\u3011"
    }
]