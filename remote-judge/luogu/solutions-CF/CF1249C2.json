[
    {
        "content": "hard version \u6b63\u89e3\uff1a\u72b6\u6001\u538b\u7f29 + \u4e8c\u5206\u67e5\u627e\n\n\u770b\u5230\u9898\u76ee\u4e2d\u201c\u6bcf\u4e2a $3$ \u7684\u5e42\u6700\u591a\u53ea\u80fd\u4f7f\u7528\u4e00\u6b21\u201d\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u60f3\u5230\u7528\u72b6\u6001\u538b\u7f29\u6765\u89e3\u51b3\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u597d\u7684\u6570\uff08Good Number\uff09$x$\uff0c\u53ef\u4ee5\u5c06\u5b83\u7528\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570 $y$ \u8868\u793a\u3002\u5176\u4e2d\uff0c\u5982\u679c\u5bf9\u5e94\u7684\u4e8c\u8fdb\u5236\u6570\u7684\u7b2c $i$ \u4f4d\u4e3a $1$\uff0c\u4ee3\u8868\u6784\u6210 $x$ \u65f6\u4f7f\u7528\u4e86 $3^i$\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u5c06\u6563\u843d\u5728\u533a\u95f4\u4e2d\u7684\u597d\u6570\u96c6\u4e2d\u4e86\u8d77\u6765\uff0c\u4e8c\u5206\u67e5\u627e\u5927\u4e8e\u7b49\u4e8e $n$ \u7684\u6700\u5c0f\u597d\u6570\u5373\u53ef\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$\\operatorname{O}((\\log_2n)^2)$\n\n```cpp\n#include<cstdio>\n#include<iostream>\nusing namespace std;\nconst long long Maxn=50;\nconst long long n=39;\nlong long a[Maxn],m;\ninline long long read()\n{\n\tlong long s=0,w=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n\twhile(ch>='0' && ch<='9') s=(s<<3)+(s<<1)+(ch^48),ch=getchar();\n\treturn s*w;\n}\nlong long get(long long x) // \u8ba1\u7b97\u4e8c\u8fdb\u5236\u6570x\u5bf9\u5e94\u7684\u597d\u6570\n{\n\tlong long ret=0;\n\tfor(long long i=0;i<=n;++i)\n\tif((x>>i) & 1)ret+=a[i];\n\treturn ret;\n}\nint main()\n{\n//\tfreopen(\"in.txt\",\"r\",stdin);\n\ta[0]=1;\n\tfor(long long i=1;i<=n;++i)\n\ta[i]=a[i-1]*3;\n\tlong long T=read();\n\twhile(T--)\n\t{\n\t\tm=read();\n\t\tlong long l=1,r=(1ll<<n)-1;\n\t\twhile(l<r) // \u4e8c\u5206\n\t\t{\n\t\t\tlong long mid=(l+r)>>1;\n\t\t\tlong long tmp=get(mid);\n\t\t\tif(tmp>=m)r=mid;\n\t\t\telse l=mid+1;\n\t\t}\n\t\tprintf(\"%lld\\n\",get(l));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1582777464,
        "uid": 120362,
        "name": "Priori_Incantatem",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1249C2 \u3010Good Numbers (hard version)\u3011"
    },
    {
        "content": "## Start\n\u6700\u4f18\u89e3\uff0c$\\text{0ms\\ 0B}$\u3002\n\n\u6b64\u7b97\u6cd5\u4e0d\u52a0\u5feb\u8bfb\u5feb\u5199\u4e0d\u52a0\u4f18\u5316\u5c31\u540a\u6253\u6240\u6709\u5176\u5b83\u7b97\u6cd5\uff0c\u7a7a\u95f4\u65f6\u95f4\u90fd\u662f\u5b8c\u7f8e\u7684\u3002  \n&nbsp;\n## \u601d\u8def\n\u5f88\u660e\u663e\uff0c\u8fd9\u9898\u6709\u4e00\u4e2a\u6027\u8d28\uff0c$\\sum^{x-1}_{i=0}3^i<3^x(x\\neq0)$\u3002\n\n\u5047\u8bbe $m_i$ \u4e3a $m$ \u7684\u4e09\u8fdb\u5236\u4ece\u53f3\u5f80\u5de6\u7b2c $i$ \u4f4d\u4e0a\u7684\u503c\u3002\n\n\u6211\u4eec\u8003\u8651**\u4ece\u5de6\u5f80\u53f3**\u5904\u7406\uff0c\u82e5\u5f53\u524d\u5904\u7406\u5230\u7b2c $i$ \u4f4d\uff0c\u4e14\u524d\u9762\u7684\u503c\u4e3a $m$\uff0c\u82e5 $m+\\sum^{j-1}_{i=0}3^j<n$\uff0c\u90a3\u4e48 $m_i$ \u4e00\u5b9a\u4e3a $1$ \u624d\u80fd\u4f7f $m\\geqslant n$\u3002\u5e76\u4e14\uff0c\u8fd9\u79cd\u5904\u7406\u987a\u5e8f\u53ef\u4ee5\u4fdd\u8bc1 $m$ \u6700\u5c0f\u3002  \n&nbsp;\n## \u4ee3\u7801\n```\n#include <stdio.h>\ntypedef long long ll;\nint q; ll n, p[40] = {1}, s[40] = {1}; \nint main()\n{\n\tscanf(\"%d\", &q);\n\tfor (int i(1); i < 39; ++i) s[i] = s[i - 1] + (p[i] = p[i - 1] * 3);\n\twhile (q--)\n   \t{\n\t\tscanf(\"%lld\", &n); ll m(0);\n\t\tfor (int i(39); i; --i) if (m + s[i - 1] < n) m += p[i];\n\t\tprintf(\"%lld\\n\", m < n ? n : m);\n\t}\n    return 0;\n} \n```\n\u5176\u4e2d $p_i=3^i,s_i=\\sum^{i}_{j=0}3^i$\uff0c\u8fd9\u4e24\u4e2a\u6570\u7ec4\u5747\u662f\u4e3a\u4e86\u51cf\u5c0f\u5e38\u6570\u3002\n\n\u7531\u4e8e\uff0c$3^{37}<10^{18}<3^{38}$\uff0c\u6545\u5faa\u73af\u4ece $38$ \u5230 $1$\u3002\n\n\u5f53 $i=0$ \u65f6\uff0c\u4e0a\u9762\u4ee3\u7801\u4f1a\u8d8a\u754c\uff0c\u6240\u4ee5\u5c06\u6700\u540e\u4e00\u4f4d\u52a0\u5165\u7279\u5224\u3002\u5373\u8f93\u51fa\u65f6 $m < n(m=n- 1)$ \u8f93\u51fa $n$ \u5373\u53ef\u3002  \n&nbsp;\n## End\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$\\mathcal{O}(q\\log_3n)$\n\n\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a$\\mathcal{O}(2 \\log_3n)$\n\n~~\u8be2\u95ee\u6570\u8fd9\u4e48\u5c11\u6839\u672c\u4f53\u73b0\u4e0d\u51fa\u672c\u7b97\u6cd5\u7684\u4f18\u8d8a\u6027\uff01~~",
        "postTime": 1657523234,
        "uid": 282929,
        "name": "\u67f3\u6613\u8fb0",
        "ccfLevel": 0,
        "title": "CF1249C2 \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7684\u4e3b\u8981\u7684\u6050\u60e7\u70b9\u8fd8\u662f\u6211\u4eec\u4e00\u770b\u5230$n \\le 10^{18}$\u5c31\u614c\u4e86\uff0c\u8fd9\u4e2a\u65f6\u5019\u80af\u5b9a\u4e0d\u80fd\u6309\u7167\u5e38\u89c4\u5904\u7406\u601d\u8def\u4e86\u3002\u600e\u4e48\u529e\uff1f\u6709\u7ecf\u9a8c\u7684\u540c\u5b66\u9a6c\u4e0a\u60f3\u5230\u8fd9\u80af\u5b9a\u9700\u8981\u4e2a$\\log$\u7ea7\u522b\u7684\u505a\u6cd5\uff0c\u90a3\u600e\u4e48\u505a\u5462\uff1f\n\n## \u89e3\u6cd51\n\n\u6211\u4eec\u4ed4\u7ec6\u601d\u8003\u6761\u4ef6\uff0c\u628a $m$ \u8868\u793a\u4e3a3\u7684\u4e0d\u540c\u81ea\u7136\u6570\u6b21\u5e42\u4e4b\u548c\u2026\u2026\u7b49\u7b49\uff0c\u4e0d\u5c31\u662f\u628a\u8fd9\u4e2a\u6570\u641e\u6210\u4e09\u8fdb\u5236\u5417\uff01\u5982\u679c\u8981\u6ee1\u8db3\u4e0d\u540c\u7684\u81ea\u7136\u6570\u6b21\u5e42\u4e4b\u548c\u2026\u2026\u4e0d\u5c31\u662f\u6700\u540e\u76843\u8fdb\u5236\u4e2d\u4e0d\u51fa\u73b02\u5417\uff01\n\n\u7ecf\u8fc7\u4e0a\u9762\u7684\u5206\u6790\u8fd9\u4e2a\u9898\u5c31\u9a6c\u4e0a\u53d8\u5f97\u4eba\u755c\u65e0\u5bb3\u4e86\u8d77\u6765\u3002\u600e\u4e48\u628a2\u53bb\u6389\uff1f\u8fdb\u4f4d\u554a~\u600e\u4e48\u5feb\u901f\u628a2\u53bb\u6389\u8fd8\u80fd\u4f7f\u8fd9\u4e2a\u6570\u5c3d\u53ef\u80fd\u7684\u5c0f\uff1f\u4ece\u5de6\u5f80\u53f3\u627e\u5230\u7b2c\u4e00\u4e2a2\u628a\u5b83\u540e\u9762\u5168\u53d8\u62100\u518d\u8fdb\u4f4d\u554a\uff01\u4e3a\u4ec0\u4e48\u8981\u628a\u540e\u9762\u5168\u53d8\u62100\uff1f\u80af\u5b9a\u662f\u56e0\u4e3a\u53d8\u62100\u5c0f\u554a\u2026\u2026\u5982\u679c\u8fdb\u5b8c\u4f4d\u53c8\u6709\u65b0\u76842\u4ea7\u751f\u600e\u4e48\u641e\uff1f\u5982\u6cd5\u70ae\u5236\u8bf7\u3002\n\n## \u89e3\u6cd52\n\n\u611f\u8c22\u672c\u6821\u5de8\u4f6c\u63d0\u4f9b\u8fd9\u4e2a\u7206\u8e29\u849f\u84bb\u7684\u601d\u8def\uff01\n\n\n\u8bbe\u6700\u9ad8\u6b21\u9879\u6307\u6570\u4e3a$x$\uff0c\u90a3\u5f88\u663e\u7136\u53ef\u4ee5\u5f97\u5230\uff1a\n\n$$3^x > \\sum_{i=0}^{x-1} 3^i$$\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4ece$3^0$\u4e00\u76f4\u8ba1\u548c\u76f4\u5230\u603b\u548c$\\ge m$\u7684\u65f6\u5019\u505c\u6b62\uff0c\u786e\u5b9a\u6700\u9ad8\u6b21\u9879\u6307\u6570\u4e3a$x$\uff0c\u518d\u4ece\u9ad8\u6b21\u9879\u5411\u4f4e\u6b21\u9879\u5c1d\u8bd5\u5220\u9879\uff0c\u6700\u540e\u6784\u9020\u51fa\u7684\u597d\u6570\u4e00\u5b9a\u662f\u5c3d\u53ef\u80fd\u5c0f\u7684\u3002\n\n## Code\n\n\u4e0b\u9762\u662f\u89e3\u6cd51\u7684\u5177\u4f53\u5b9e\u73b0\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define ull unsigned long long\nusing namespace std;\ninline ll read() \n{\n    register ll x = 0 , ch = getchar(); \n    while( !isdigit( ch ) ) ch = getchar(); \n    while( isdigit( ch ) ) x = x * 10 + ch - '0' , ch = getchar();     \n    return x; \n}\nll quick_power(ll a,ll b,ll modn)\n{\n    ll ans=1;\n    while(b)\n    {\n        if(b%2)\n            ans=ans*a%modn;\n        a=a*a%modn;\n        b=(b>>1);\n    }\n}\nll turtle_muti(ll ain,ll bin,ll modn)\n{\n    ll res=0;\n    for(;bin;bin>>=1) \n    {\n        if(bin&1)\n            res=(res+ain)%modn;\n        ain=(ain<<1)%modn;\n    }\n    return res;\n}\n/*------------------Coding Area------------------*/\nconst ll maxn=2e5+51;\nll num[maxn];\nll n,nlen,ans;\n\nsigned main()\n{\n    ll q=read();\n    while(q--)\n    {\n        n=read();\n        memset(num,0,sizeof(num));\n        nlen=0,ans=0;\n        while(n)\n            num[++nlen]=n%3,n/=3;\n        for(int i=nlen;i;--i)\n            if(num[i]==2)\n            {\n                ll ptr=i+1;\n                num[i]=0;\n                for(int j=i-1;j;--j)\n                    num[j]=0;\n                while(num[ptr]==1)\n                    num[ptr++]=0;\n                num[ptr]=1,nlen=max(nlen,ptr);\n            }\n        for(int i=nlen;i;--i)\n            ans=ans*3+num[i];\n        printf(\"%lld\\n\",ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1581560053,
        "uid": 109988,
        "name": "34ytw8ew7ft",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1249C2 \u3010Good Numbers (hard version)\u3011"
    },
    {
        "content": "\u770b\u5230${10}^{18}$\u80af\u5b9a\u662f\u6309\u4f4d\u5904\u7406\u3002\n\n\u9996\u5148\u6709\u8fd9\u6837\u4e00\u4e2a\u7ed3\u8bba\uff1a\u5c06\u4e00\u4e2a\u6570\u8f6c\u5316\u4e3a3\u8fdb\u5236\u8fc7\u540e\uff0c\u5982\u679c\u67d0\u4e00\u4f4d\u4e0a\u67092\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u4e00\u5b9a\u662f\u574f\u6570\u3002\n\n\u56e0\u4e3a\u4e00\u4e2a\u6570\u4e0d\u80fd\u51cf\u53bb\u540c\u4e00\u4e2a3\u7684\u6b21\u5e42\uff0c\u6240\u4ee5\u8fd9\u4e2a\u7ed3\u8bba\u663e\u7136\u6210\u7acb\u3002\n\n\u8003\u8651\u8d2a\u5fc3\u505a\u6cd5\uff1a\n\n\u5c06\u8fd9\u4e2a\u6570\u8f6c\u5316\u4e3a3\u8fdb\u5236\uff0c\u7136\u540e\u4ece\u9ad8\u4f4d\u5f80\u5730\u4f4d\u627e\u5230\u7b2c\u4e00\u4e2a\u662f2\u7684\u4f4d\uff0c\u5c06\u8fd9\u4e00\u4f4d\u540e\u9762\u5168\u90e8\u7f6e\u4e3a0\uff0c\u5e76\u5c06\u6b64\u4f4d+1\uff0c\u518d\u6a21\u62df\u4e00\u4e0b\u8fdb\u4f4d\u3002\n\n\u8fd9\u6837\u8d2a\u5fc3\u5f97\u51fa\u6765\u7684\u7ed3\u679c\u663e\u7136\u662f\u5927\u4e8e\u6b64\u6570\u6700\u5c0f\u7684\u201c\u597d\u6570\u201d\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#pragma GCC optimize(8)\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <iostream>\nusing namespace std;\n \ntypedef long long ll;\nll n;\nint a[100], v;\n \nint main () {\n\ta[0] = 1;\n\tregister int i;\n\tint Q; scanf (\"%d\", &Q);\n\twhile (Q--) {\n\t\tmemset (a, 0, sizeof (a));\n\t\tcin >> n;\n\t\tv = 0;\n\t\twhile (n) {\n\t\t\ta[++v] = n % 3;\n\t\t\tn /= 3;\n\t\t} //\u8f6c\u5316\u8fdb\u5236\n\t\tint mx = 0;\n\t\tfor (i = 1; i < 40; ++i) {\n\t\t\tif (a[i] > 1) mx = i;\n\t\t}\n\t\tll ans = 0;\n\t\tif (!mx) {\n\t\t\tfor (i = v; i; --i) ans = ans * 3 + a[i];\n\t\t\tcout << ans << '\\n';\n\t\t} //\u5982\u679c\u8fd9\u4e2a\u6570\u672c\u6765\u5c31\u662f\u597d\u6570\uff0c\u76f4\u63a5\u8f93\u51fa\u5373\u53ef\n\t\telse {\n\t\t\tfor (i = 1; i <= mx; ++i) a[i] = 0; //\u6bd4\u7b2c\u4e00\u4e2a2\u4f4e\u7684\u4f4d\u7f6e\u4e3a0\n\t\t\t++a[mx + 1];\n\t\t\tfor (i = mx + 1; i < 40; ++i) {\n\t\t\t\tif (a[i] > 1) {\n\t\t\t\t\t++a[i + 1];\n\t\t\t\t\ta[i] -= 2;\n\t\t\t\t} //\u6a21\u62df\u8fdb\u4f4d\n\t\t\t}\n\t\t\tfor (i = 40; !a[i]; --i);\n\t\t\twhile (i) ans = ans * 3 + a[i--];\n\t\t\tcout << ans << '\\n';\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1571831032,
        "uid": 31193,
        "name": "\u68a7\u6850\u706f",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1249C2 \u3010Good Numbers (hard version)\u3011"
    },
    {
        "content": "### \u9898\u610f\n\n\u6709$q$\u7ec4\u8be2\u95ee\uff0c\u6bcf\u7ec4\u8be2\u95ee\u7ed9\u5b9a$n$\uff0c\u8981\u4f60\u6c42\u51fa\u4e00\u4e2a\u6700\u5c0f\u7684$m$\u4f7f\u5f97$m\\geq n$\u4e14$m$\u7684\u4e09\u8fdb\u5236\u8868\u793a\u4e0b\u6ca1\u6709$2$\u3002\n\n$\\texttt{Data Range:}1\\leq q\\leq 10^3,1\\leq n\\leq 10^{18}$\n\n### \u9898\u89e3\n\n\u8d2a\u5fc3\u597d\u9898\u3002\n\nmmp\u6211\u505a\u5230\u8fd9\u91cc\u7136\u540e\u5c31\u88ab\u62c9\u53bb\u7761\u89c9\u4e86\uff0c\u7136\u540e\u65e9\u4e0a\u53d1\u73b0$\\texttt{D1,D2,E}$\u5f88\u53ef\u505a\u554aqwq\uff0c\u6211\u7684$\\color{blue}\\texttt{Expert}$\u554a\uff01\uff08\u5176\u5b9e\u662f\u7528\u5c0f\u53f7\u6253\u7684\uff09\n\n\u9996\u5148\u7b2c\u4e00\u6b65\u6211\u5df2\u7ecf\u8bf4\u4e86\uff0c\u628a\u5b83\u8868\u793a\u6210\u4e09\u8fdb\u5236\u3002\n\n\u5047\u8bbe\u628a$n$\u52a0\u4e0a$k$\u80fd\u5f97\u5230$p$\u3002\n\n\u5982\u679c$k$\u4e0d\u8db3\u4ee5\u4f7f$n$\u7684\u4e09\u8fdb\u5236\u8868\u793a\u4e2d$2$\u6240\u5904\u7684\u4f4d\u7f6e\u4e2d\u7684\u6700\u9ad8\u4f4d\u53d1\u751f\u8fdb\u4f4d\uff0c\u90a3\u4e48$p$\u662f\u4e0d\u7b26\u5408\u8981\u6c42\u7684\uff0c\u56e0\u4e3a\u90a3\u4e2a$2$\u8fd8\u662f\u5728\u90a3\u91cc\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u6a21\u62df\u8fdb\u4f4d\uff0c\u628a\u8fd9\u4e00\u4f4d\u4ee5\u53ca\u4f4e\u4e8e\u4ed6\u7684\u4f4d\u5168\u90e8\u6539\u6210$0$\uff0c\u5c06\u6bd4\u8fd9\u8fd9\u4e00\u4f4d\u9ad8\u4e14\u76f8\u90bb\u7684\u4f4d\u52a0\u4ee5\u3002\n\n\u7531\u4e8e\u8fd9\u4e00\u4f4d\u662f$2$\u6240\u5904\u4f4d\u7f6e\u7684\u6700\u9ad8\u4f4d\uff0c\u6240\u4ee5\u6bd4\u5b83\u8fd8\u9ad8\u7684\u4f4d\u53ea\u53ef\u80fd\u662f$0$\u548c$1$\uff0c\u52a0\u4e0a$1$\u540e\u662f$1$\u548c$2$\u3002\n\n\u4e07\u4e00\u52a0\u4e0a$1$\u540e\u53c8\u51fa\u73b0\u4e00\u4e2a\u65b0\u7684$2$\u7684\u4e3a\u600e\u4e48\u529e\u5462\uff1f\u6ca1\u5173\u7cfb\uff0c\u6211\u4eec\u4ee5\u8fd9\u4e2a\u6570\u4f5c\u4e3a$n$\uff0c\u518d\u6765\u4e00\u904d\uff0c\u76f4\u5230\u6ca1\u6709\u4f4d\u7f6e\u6709$2$\u3002\n\n\u8fd9\u91cc\u7528\u4e00\u4e2a\u4f8b\u5b50\u6765\u89e3\u91ca\u4e00\u4e0b\uff0c\u6bd4\u5982$n=(1001111121021)_3$\uff0c\u9996\u5148\u627e\u51fa$2$\u6240\u5904\u7684\u4f4d\u7f6e\u4e2d\u7684\u6700\u9ad8\u4f4d\uff0c\u7136\u540e\u6a21\u62df\u8fdb\u4f4d\uff0c\u5f97\u5230$(1001111200000)_3$\uff0c\u53d1\u73b0\u8fd8\u6709\u4e00\u4e2a\u4f4d\u7f6e$2$\uff0c\u5c31\u91cd\u65b0\u6765\uff0c\u5f97\u5230$(1001112000000)_3$\uff0c\u5982\u6b64\u5f80\u590d\uff0c\u76f4\u5230\u6ca1\u6709\u4f4d\u7f6e\u4e3a$2$\u3002\u6700\u7ec8\u6211\u4eec\u5f97\u5230\u7b54\u6848\u5c31\u662f$(1010000000000)_3$\u3002\n\n\u8fd9\u4e2a\u64cd\u4f5c\u5176\u5b9e\u662f\u5c06$2$\u6240\u5904\u7684\u4f4d\u7f6e\u4e2d\u7684\u6700\u9ad8\u4f4d\u524d\u9762\u7684\u8fde\u7eed\u7684$1$\u5168\u90e8\u6539\u4e3a$0$\uff0c\u800c\u8fd9\u4e00\u6bb5$1$\u524d\u9762\u7684$0$\u6539\u4e3a$1$\uff0c\u7136\u540e\u5c31\u5b8c\u7ed3\u6492\u82b1\u4e86qwq\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(q\\log n)$\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long int ll;\nconst ll MAXN=2e5+51;\nll test,tot,kk,ptr,res;\nll num[MAXN];\ninline ll read()\n{\n    register ll num=0,neg=1;\n    register char ch=getchar();\n    while(!isdigit(ch)&&ch!='-')\n    {\n        ch=getchar();\n    }\n    if(ch=='-')\n    {\n        neg=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch))\n    {\n        num=(num<<3)+(num<<1)+(ch-'0');\n        ch=getchar();\n    }\n    return num*neg;\n} \ninline void solve()\n{\n\tkk=read();\n\tmemset(num,0,sizeof(num)),tot=0,res=0;\n\twhile(kk)\n\t{\n\t\tnum[++tot]=kk%3,kk/=3;\n\t}\n\tfor(register int i=tot;i;i--)\n\t{\n\t\tif(num[i]==2)\n\t\t{\n\t\t\tnum[i]=0,ptr=i+1;\n\t\t\tfor(register int j=i-1;j;j--)\n\t\t\t{\n\t\t\t\tnum[j]=0;\n\t\t\t}\n\t\t\twhile(num[ptr]==1)\n\t\t\t{\n\t\t\t\tnum[ptr++]=0;\n\t\t\t}\n\t\t\tnum[ptr]=1,tot=max(tot,ptr);\n\t\t}\t\n\t} \n\tfor(register int i=tot;i;i--)\n\t{\n\t\tres=(res*3)+num[i];\n\t}\n\tprintf(\"%lld\\n\",res);\n}\nint main()\n{\n\ttest=read();\n\tfor(register int i=0;i<test;i++)\n\t{\n\t\tsolve();\n\t}\n}\n```",
        "postTime": 1571833572,
        "uid": 60990,
        "name": "Karry5307",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1249C2 \u3010Good Numbers (hard version)\u3011"
    },
    {
        "content": "\u7b80\u5316\u9898\u610f\uff1a\u6211\u4eec\u73b0\u5728\u8981\u5728\u6570\u5217 $[3^0,3^1,3^2,...,3^k](3^k>n)$ \u4e2d\u9009\u51fa\u4e00\u4e9b\u6570\uff0c\u4f7f\u5f97\u5b83\u4eec\u7684\u548c $\u2a7en$ \uff0c\u5e76\u4f7f\u5f97\u8fd9\u4e2a\u548c\u6700\u5c0f\u3002\n\n\u8003\u8651\u7206\u641c\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u6570 \u9009/\u4e0d\u9009\u3002\u6709 $2^{40}$ \u8fd1\u4f3c\u4e8e $10^{18}$\uff0c\u56e0\u6b64\u76f4\u63a5\u8fd9\u6837\u505a\u5927\u6982\u662f $O(q\u00b72^{40})$ \u7684\uff0c\u80af\u5b9a\u4e0d\u884c\u3002\n\n\u8003\u8651\u600e\u4e48\u8dd1\u5f97\u66f4\u5feb\u3002\u5b9e\u9645\u4e0a\u4e0a\u8ff0\u679a\u4e3e\u8fc7\u7a0b\u53ef\u4ee5\u901a\u8fc7\u679a\u4e3e\u4e8c\u8fdb\u5236\u72b6\u6001\u6765\u5b9e\u73b0\uff0c\u5373\u7528\u4e00\u4e2a\u6570\u5b57\u4e8c\u8fdb\u5236\u4f4d\u4e0a\u7684 $0/1$ \u6765\u8868\u793a\u6570\u5217\u67d0\u4e00\u9879\u9009\u4e0d\u9009\u3002\n\n\u5047\u8bbe\u6211\u4eec\u5f53\u524d\u4e8c\u8fdb\u5236\u679a\u4e3e\u7684\u72b6\u6001\u7801\u4e3a $S$ \uff0c\u90a3\u4e48\u5b9e\u9645\u4e0a\u8be5\u72b6\u6001\u7801\u6240\u5bf9\u5e94\u7684\u6570\u503c\u662f\u5355\u8c03\u7684\uff1b\u6362\u53e5\u8bdd\u8bf4\uff0c\u968f\u7740 $S$ \u53d8\u5927\uff0c\u5176\u8868\u793a\u7684\u90a3\u4e2a\u6570\u5b57\u4e5f\u53d8\u5927\u3002\n\n\u7b80\u5355\u7684 proof \uff0c~~\u8bf7\u7406\u6027\u5077\u7a0e~~\u3002\n\u8003\u8651\u628a\u4e8c\u8fdb\u5236\u6570 $0100$ \u53d8\u6210 $0101$ \uff08\u524d\u8005\u8868\u793a $3^2$ \uff0c\u540e\u8005\u8868\u793a $3^2+3^0$\uff09 \uff0c\u5373\u5728\u539f\u6765\u72b6\u6001\u7801\u7684\u57fa\u7840\u4e0a\u52a0\u4e00\u4f4d\u4f7f\u5176\u53d8\u5927\uff0c\u6b64\u65f6\u5176\u8868\u793a\u7684\u6570\u5b57\u4e00\u5b9a\u53d8\u5927\uff0c\u56e0\u4e3a\u53c8\u591a\u4e86\u65b0\u7684\u4e00\u9879\u3002\u8003\u8651\u628a\u4e8c\u8fdb\u5236\u6570 $0100$ \u53d8\u6210 $1000$ \uff08\u524d\u8005\u8868\u793a $3^2$ \uff0c\u540e\u8005\u8868\u793a $3^3$\uff09\uff0c\u5373\u53f3\u79fb\u539f\u6765\u72b6\u6001\u7801\u7684\u67d0\u4e00\u4f4d\u4f7f\u5176\u53d8\u5927\uff0c\u6b64\u65f6\u5176\u8868\u793a\u7684\u6570\u5b57\u4e5f\u4e00\u5b9a\u53d8\u5927\uff0c\u56e0\u4e3a\u6709\u4e00\u9879\u7684\u6b21\u6570$+1$\u3002\n\n\u90a3\u4e48\u4e5f\u5c31\u662f\u8bf4\u73b0\u5728\u679a\u4e3e\u7684\u6570\u503c\u5177\u6709\u5355\u8c03\u6027\uff0c\u90a3\u4e48\u4e3a\u4ec0\u4e48\u4e0d\u4e8c\u5206\u5462\uff1f\u53ea\u9700\u8981\u4e8c\u5206\u67e5\u627e\u51fa\u4e00\u4e2a $\u2a7en$ \u7684\u6700\u5c0f\u4f4d\u7f6e\u5c31\u597d\u4e86\uff0c\u603b\u590d\u6742\u5ea6 $O(qk)$\uff0c\u5176\u4e2d $k$ \u4e3a\u5e38\u6570\uff0c\u5b83\u5927\u6982\u662f $\\log_2 2^{40}=40$\u3002\n\n\u4ee3\u7801:\n\nEasy Version\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<string>\nusing namespace std;\nint read(){\n    int s=0,ne=1; char c=getchar();\n    for(;c<'0'||c>'9';c=getchar()) if(c=='-') ne=-1;\n    for(;c>='0'&&c<='9';c=getchar()) s=(s<<1)+(s<<3)+c-'0';\n    return s*ne; \n}\nint q,n;\nint Pow3(int x){\n    int rec = 1,base = 3;\n    while(x) {if(x & 1) rec *= base; base *= base; x >>= 1;}\n    return rec;\n}\nint gen(int u){\n    int g = 0;\n    for(int i=0;i<14;i++) if(u & (1<<i)) g += Pow3(i);\n    return g;\n}\nint main()\n{\n    q = read();\n    while(q--){\n        int n = read();\n        for(int S = 0; S < (1<<14); S++)\n            if(gen(S) >= n) {printf(\"%d\\n\",gen(S));break;}\n    }\n    return 0;\n}\n```\n\nHard Version\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<string>\nusing namespace std;\n\n#define LL long long\n\nLL read(){\n    LL s=0,ne=1; char c=getchar();\n    for(;c<'0'||c>'9';c=getchar()) if(c=='-') ne=-1;\n    for(;c>='0'&&c<='9';c=getchar()) s=(s<<1)+(s<<3)+c-'0';\n    return s*ne; \n}\n\nint q; LL n;\n\nLL Pow3(int a){\n    LL rec = 1,base = 3; \n    while(a) {if(a & 1) rec *= base; base *= base,a >>= 1;}\n    return rec;\n}\nLL gen(LL u){\n    LL g = 0;\n    for(int i=0;i<40;i++) if(u & (1ll << i)) g += Pow3(i);\n    return g;\n}\n\nint main()\n{\n    q = read();\n    while(q--){\n        n = read();\n        LL l = 0,r = (1ll << 40);\n        while(l < r){\n            LL m = (l + r) >> 1;\n            if(gen(m) >= n) r = m;\n            else l = m + 1;\n        }\n        printf(\"%lld\\n\",gen((l + r) >> 1));\n    }\n    return 0;\n}\n```",
        "postTime": 1572265620,
        "uid": 70177,
        "name": "big_news",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1249C2 \u3010Good Numbers (hard version)\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e8c\u5206\u7b54\u6848\u505a\u6cd5 ~~\uff08\u63a9\u76d6\u8003\u573a\u4e0a\u60f3\u590d\u6742\u7684\u5b9e\u9645\u60c5\u51b5\uff09~~\n\n\u9884\u5904\u7406 ~~\uff08\u6307\u6253\u8868\uff09~~ \u51fa$3^i$\uff0c\u5305\u62ec$>1e18$\u7684\u7b2c\u4e00\u4e2a\u6570$3^{38}$\uff0c\u5728$1e18$\u5185\u6700\u591a\u53ea\u6709$39$\u4e2a$3^i$\u3002\n\n\u5f00\u4e00\u4e2a$long\\ long$\u8868\u793a$N$\u7684\u538b\u7f29\u72b6\u6001\uff08\u5373\u4e8c\u8fdb\u5236\u8868\u793a3\u7684\u5e42\uff09\uff0c\u672b\u4f4d\u4ee3\u8868$3^0$\uff0c\u5012\u6570\u7b2c\u4e8c\u4f4d\u4ee3\u8868$3^1$\uff0c\u2026\u2026\u4e00\u5171\u9700\u8981$39$\u4f4d\u3002\n\n\u4e8c\u5206\u7b54\u6848\uff0c$l=1,r=2^{40}-1$\uff0c\u6bcf\u6b21\u53d6$mid$\u8f6c\u6362\u6210\u5b9e\u9645\u4ee3\u8868\u7684\u6570\u5b57\u4e0e$N$\u6bd4\u8f83\uff0c\u66f4\u65b0\u5de6\u53f3\uff0c\u6700\u540e\u8f93\u51fa$l$\u5373\u53ef\u3002\n\n```cpp\n#include<cctype>\n#include<cstdio>\n#define R register\n#define ll long long\nint Q;\nll N,l,r,pow3[]={1,3,9,27,81,243,729,2187,6561,19683,59049,177147,531441,1594323,4782969,14348907,43046721,129140163,387420489,1162261467,3486784401,10460353203,31381059609,94143178827,282429536481,847288609443,2541865828329,7625597484987,22876792454961,68630377364883,205891132094649,617673396283947,1853020188851841,5559060566555523,16677181699666569,50031545098999707,150094635296999121,450283905890997363,1350851717672992089};\n//3\u7684\u5e42\ninline ll turnto(ll type)//\u72b6\u6001\u8f6c\u6570\u5b57\n{\n\tR int base=0;\n\tR ll mean=0;\n\twhile(type)\n\t{\n\t\tif(type&1)\n\t\t{\n\t\t\tmean+=pow3[base];\n\t\t}\n\t\ttype>>=1;\n\t\t++base;\n\t}\n\treturn mean;\n}\ntemplate<class T>inline void read(T &m)\n{\n\tm=0;\n\tchar c=getchar();\n\twhile(!isdigit(c))c=getchar();\n\twhile(isdigit(c))m=(m<<3)+(m<<1)+(c&15),c=getchar();\n}\nint main()\n{\n\tread(Q);\n\twhile(Q--)\n\t{\n\t\tread(N);\n\t\tl=1,r=(1ll<<40)-1;//\u5de6\u53f3\u8303\u56f4\n\t\twhile(l<r)//\u4e8c\u5206\u7b54\u6848\n\t\t{\n\t\t\tll mid=((l+r)>>1);\n\t\t\tif(turnto(mid)<N)\n\t\t\t{\n\t\t\t\tl=mid+1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tr=mid;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%lld\\n\",turnto(l));\n\t\t//\u8f93\u51fa\u72b6\u6001l\u6240\u4ee3\u8868\u7684\u6570\u5b57\u5373\u53ef\n\t}\n}\n```\n\u4e3b\u4ee3\u7801\u7b80\u6d01\uff0c\u5c31\u662f\u6253$3^i$\u8981\u82b1\u70b9\u65f6\u95f4",
        "postTime": 1571822920,
        "uid": 5880,
        "name": "B_Qu1e7",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1249C2 \u3010Good Numbers (hard version)\u3011"
    },
    {
        "content": "## \u9898\u610f\n\u663e\u7136\u662f\u8981\u6c42\u51fa\u5927\u4e8e\u7b49\u4e8e\u8f93\u5165\u7684\u6700\u5c0f\u4e09\u8fdb\u5236\u6570\n## \u89e3\u6cd5\n\u5148\u5224\u65ad\u81ea\u8eab\u662f\u5426\u662f\u4e09\u8fdb\u5236\u6570\u663e\u793a\u53ea\u542b\u67091\u6216\u80050\u7684\u6570\u5b57\uff0c\u5982\u679c\u662f\u7684\u8bdd\u76f4\u63a5\u8f93\u51fa\u5c31\u53ef\u4ee5\u4e86\uff0c\u5982\u679c\u4e0d\u662f\u4ece\u5f53\u524d\u4f4d\u6570\u5f00\u59cb,\u5982\u679c\u5f53\u524d\u4f4d\u7684\u6570\u5b57\u4e3a2\uff0c\u5c31\u628a\u8fd9\u4e2a\u4f4d\u4e0a\u7684\u6570\u5b57\u53d8\u62100\uff0c\u7ed9\u9ad8\u4f4d\u8fdb\u4f4d\uff0c\u5e76\u4e14\u8bb0\u5f55\u6700\u9ad8\u4f4d\u7684\u6570\u5b57\uff0c\u628a\u540e\u9762\u7684\u6570\u5b57\u6e05\u7a7a\u62100\uff0c\u6bd5\u7adf\u662f\u8fdb\u4f4d\u4e86\uff0c\u540e\u9762\u518d\u5c0f\u4e5f\u80af\u5b9a\u6bd4\u539f\u672c\u7684\u6570\u5b57\u5927\n```c++\n#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <algorithm>\n\nusing namespace std;\ntypedef long long ll;\nll digitx[100];\nll x, y;\nint cnt = 0;\n\nvoid trans(ll num) {//\u8f6c\u53163\u8fdb\u5236 \n\tcnt = 0;\n\twhile (num) {\n\t\tdigitx[cnt++] = num % 3;\n\t\tnum /= 3;\n\t}\n}\n\nvoid add(int st) {\n\tbool flag = 0;\n\tint jin = 0, c = 0;\n\t//jin \u8fdb\u4f4d c \u6700\u9ad8\u4f4d \n\tfor (int i = st; i < cnt; i++) {\n\t\tdigitx[i] += jin;\n\t\tjin = 0;\n\t\tif (digitx[i] > 1) {\n\t\t\tdigitx[i] = 0;\n\t\t\tjin = 1;\n\t\t\tc = i;\n\t\t}\n\t}\n\t\n\tfor (int i = 0; i < c; i++) digitx[i] = 0;\n\t//\u628a\u540e\u9762\u7684\u6570\u5b57\u6e05\u62100\uff0c\u5c3d\u53ef\u80fd\u5c0f \n\tif (jin) digitx[cnt++] = 1;\n}\n\nll getans() {\n\tll res = 0, bas = 1;\n\tfor (int i = 0; i < cnt; i++, bas = bas * 3) {\n\t\tif (digitx[i])\n\t\t\tres = res + bas;\n\t}\n\treturn res;\n}\n\nint main()\n{\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile (t--) {\n\t\tscanf(\"%I64d\", &x);\n\t\ttrans(x);\n\t\tbool adf = false;\n\t\tint st = -1;\n\t\tfor (int i = 0; i < cnt; i++) \n\t\t\tif (digitx[i] > 1) {//\u5982\u679c\u4e09\u8fdb\u5236\u6570\u6709 2  \n\t\t\t\tadf = true;\n\t\t\t\tst = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tif (adf == true) {//\u5c31\u8981\u628a2\u90fd\u53d8\u62100\uff0c\u8fdb\u4f4d \n\t\t\tadd(st);\n\t\t}\n\t\tll ans = getans();\t\t\n\t\tprintf(\"%I64d\\n\", ans);\n\t}\n    return 0;\n}\n```\n",
        "postTime": 1571801253,
        "uid": 215942,
        "name": "CLer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1249C2 \u3010Good Numbers (hard version)\u3011"
    }
]