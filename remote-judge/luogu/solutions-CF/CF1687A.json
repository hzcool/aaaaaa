[
    {
        "content": "\u4e00\u5f00\u59cb\u4ee5\u4e3a\u662f\u4e00\u4e2a $\\texttt{dp}$\uff0c\u4ed4\u7ec6\u4e00\u770b\u53d1\u73b0\u53ea\u662f\u4e00\u4e2a\u666e\u901a\u7684\u8d2a\u5fc3\u3002\n\n\u82e5 $k \\le n$\uff0c\u5219\u4e0d\u80fd\u6536\u96c6\u5b8c\u6216\u6070\u597d\u6536\u96c6\u5b8c\u6240\u6709\u7684\u8611\u83c7\u3002\u5982\u679c\u4e00\u4e2a\u5730\u65b9\u7684\u8611\u83c7\u88ab\u91cd\u590d\u5730\u6536\u53d6\uff0c\u5219\u4f1a\u6d6a\u8d39\u4e4b\u524d\u5230\u8fbe\u8be5\u5730\u6240\u82b1\u7684\u65f6\u95f4\u3002\u6211\u4eec\u7684\u76ee\u6807\u662f\u4f7f\u5f97\u65f6\u95f4\u4e4b\u548c\u6700\u5927\uff0c\u6545\u4e00\u4e2a\u5730\u65b9\u91cd\u590d\u904d\u5386\u4e0d\u53ef\u53d6\u3002\u5c1d\u8bd5\u6a21\u62df\u540e\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u65b0\u957f\u51fa\u6765\u7684\u8611\u83c7\uff0c\u6536\u96c6\u7684\u6570\u76ee\u662f\u786e\u5b9a\u7684\uff0c\u4e3a $\\sum_{i = 1}^{k - 1}$\uff0c\u8fd0\u7528\u9ad8\u65af\u6c42\u548c\u516c\u5f0f\u540e\u5f97\u5230 $\\dfrac{k \\times (k - 1)}{2}$\u3002\u73b0\u5728\u95ee\u9898\u5c31\u8f6c\u6362\u4e3a\u6c42\u539f\u6709\u8611\u83c7\u5e8f\u5217\u7684\u957f\u5ea6\u4e3a $k$ \u7684\u533a\u95f4\u548c\u7684\u6700\u5927\u503c\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u7c7b\u4f3c\u6ed1\u52a8\u7a97\u53e3\u822c\u7684\u601d\u60f3\u626b\u4e00\u904d\u6c42\u51fa\u6700\u5927\u503c\u3002\n\n\u82e5 $k > n$\uff0c\u5219\u53ef\u4ee5\u6536\u96c6\u5b8c\u539f\u6709\u7684\u6240\u6709\u7684\u8611\u83c7\uff08\u7531\u4e8e\u6bcf\u6b21\u53ea\u957f\u4e00\u4e2a\u8611\u83c7\uff0c\u521d\u59cb\u4f4d\u7f6e\u7684\u8611\u83c7\u6570\u91cf\u5927\u4e8e\u7b49\u4e8e $1$\uff0c\u6240\u4ee5\u6536\u96c6\u539f\u6709\u7684\u6240\u6709\u8611\u83c7\u81f3\u5c11\u4e0d\u6bd4\u4e0d\u5168\u6536\u52a3\uff09\uff0c\u5bf9\u4e8e\u5982\u4f55\u6c42\u51fa\u65b0\u957f\u51fa\u7684\u8611\u83c7\u7684\u6700\u503c\u7684\u5e8f\u5217\u7684\u95ee\u9898\uff0c\u6211\u7684\u65b9\u6cd5\u662f\u9006\u5411\u8003\u8651\u3002\u7531\u4e8e\u6536\u96c6\u5b8c\u539f\u6709\u7684\u6240\u6709\u7684\u8611\u83c7\uff0c\u6240\u4ee5\u6bcf\u4e2a\u8282\u70b9\u81f3\u5c11\u5230\u4e00\u6b21\uff0c\u4ee4\u6700\u540e\u4e00\u6b21\u6240\u5230\u8fbe\u7684\u8282\u70b9\u4e3a $n$\uff0c\u5012\u6570\u7b2c\u4e8c\u4e2a\u5230\u8fbe\u7684\u70b9\u4e3a $n - 1$\uff0c\u4ee5\u6b64\u7c7b\u63a8\u2026\u2026\u90a3\u4e48\u53ef\u4ee5\u53d1\u73b0\uff0c$n$ \u70b9\u6700\u540e\u751f\u957f\u7684\u4e00\u4e2a\u8611\u83c7\u6ca1\u7528\u80fd\u591f\u91c7\u96c6\uff0c$n - 1$ \u70b9\u6709\u4e24\u4e2a\uff0c\u4e00\u6b21\u7c7b\u63a8\u2026\u2026\u6240\u4ee5\u8bf4\uff0c\u5728 $k$ \u79d2\u540e\uff0c\u5171\u65b0\u957f\u51fa\u4e86 $n \\times k$ \u4e2a\u8611\u83c7\uff0c\u800c\u8282\u70b9 $n$ \u81f3 $1$ \u5206\u522b\u6709 $1,2,\\cdots,n$ \u4e2a\u8611\u83c7\u672a\u91c7\u96c6\uff0c\u5373\u603b\u5171\u91c7\u96c6\u5230\u7684\u65b0\u957f\u51fa\u7684\u8611\u83c7\u6570\u91cf\u4e3a $n \\times k - \\sum_{i = 1}^{n} = n \\times t - \\frac{(n + 1) \\times n}{2}$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n)$\uff0c\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\u6700\u540e\uff0c**\u5343\u5343\u4e07\u4e07\u6ce8\u610f\u5f00$\\texttt{long long}$**\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n#define init(x) memset (x,0,sizeof (x))\n#define ll long long\n#define ull unsigned long long\n#define INF 0x3f3f3f3f\nusing namespace std;\nconst int MAX = 2e5 + 5;\nconst int MOD = 1e9 + 7;\ninline int read ();\nint t;\nll k,n,ans,a[MAX];\nint main ()\n{\n\t//freopen (\".in\",\"r\",stdin);\n\t//freopen (\".out\",\"w\",stdout);\n\tt = read ();\n\twhile (t--)\n\t{\n\t\tans = 0;\n\t\tn = read ();k = read (); \n\t\tfor (int i = 1;i <= n;++i) a[i] = read ();\n\t\tif (k <= n)\n\t\t{\n\t\t\tll s = 0;\n\t\t\tfor (int i = 1;i <= n;++i)\n\t\t\t{\n\t\t\t\tif (i <= k) s += a[i],ans = s;\n\t\t\t\telse ans = max (ans,s - a[i - k] + a[i]),s = s - a[i - k] + a[i];\n\t\t\t}\n\t\t\tans += k * (k - 1) >> 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (int i = 1;i <= n;++i) ans += a[i];\n\t\t\tans += n * k;\n\t\t\tans -= n * (n + 1) >> 1;\n\t\t}\n\t\tprintf (\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}\ninline int read ()\n{\n    int s = 0;int f = 1;\n    char ch = getchar ();\n    while ((ch < '0' || ch > '9') && ch != EOF)\n\t{\n        if (ch == '-') f = -1;\n        ch = getchar ();\n    }\n    while (ch >= '0' && ch <= '9')\n\t{\n        s = s * 10 + ch - '0';\n        ch = getchar ();\n    }\n    return s * f;\n}\n```",
        "postTime": 1654424189,
        "uid": 183603,
        "name": "SUNCHAOYI",
        "ccfLevel": 6,
        "title": "\u9898\u89e3\u3010CF1687A The Enchanted Forest\u3011"
    },
    {
        "content": "\u663e\u7136\uff0c\u5982\u679c $k\\le n$\uff0c\u6211\u4eec\u8981\u6c42\u7684\u5c31\u662f\u6570\u7ec4\u4e2d\u957f\u5ea6\u4e3a $k$ \u7684\u5b50\u6570\u7ec4\u7684\u6700\u5927\u4ef7\u503c\u3002\n\n\u5982\u679c $k>n$\uff0c\u8003\u8651\u8d2a\u5fc3\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u524d $k-n+1$ \u5206\u949f\u90fd\u5728\u4e00\u53f7\u70b9\u91c7\u8611\u83c7\uff0c\u5269\u4e0b\u7684\u65f6\u95f4\u904d\u5386\u4e00\u904d\uff0c\u53ef\u4ee5\u8bc1\u660e\u8fd9\u6837\u662f\u6700\u4f18\u7684\u3002\n\n\u8003\u8651\u8bc1\u660e\uff0c\u8fd9\u6837\u505a\u4e00\u5b9a\u53ef\u4ee5\u628a\u6240\u6709\u7684\u521d\u59cb\u8611\u83c7\u7ed9\u5403\u6389\uff0c\u800c\u589e\u52a0\u7684\u8611\u83c7\u8fd9\u4e48\u505a\u662f\u53ef\u4ee5\u5403\u6389\u5927\u90e8\u5206\u7684\u8611\u83c7\uff0c\u6240\u4ee5\u603b\u91cf\u662f\u6700\u4f18\u7684\u3002\n\n\u5bf9\u4e8e\u6c42\u51fa\u533a\u95f4\u4ef7\u503c\uff0c\u6211\u4eec\u91c7\u7528\u9ad8\u65af\u7b49\u5dee\u6570\u5217\u6c42\u548c\u516c\u5f0f\u5373\u53ef\u3002",
        "postTime": 1682076091,
        "uid": 670775,
        "name": "12345678hzx",
        "ccfLevel": 4,
        "title": "CF1687A\u9898\u89e3"
    },
    {
        "content": "#### \u9898\u610f\uff1a\n\n\u9b54\u6cd5\u68ee\u6797\u53ef\u4ee5\u88ab\u62bd\u8c61\u6210\u4e00\u6761\u6709\u7740 $n$ \u4e2a\u8282\u70b9\uff0c\u4ece $1$ \u5230 $n$ \u6807\u53f7\u7684\u6570\u8f74\u3002\u5728\u9b54\u7406\u6c99\u51fa\u53d1\u4e4b\u524d\uff0c\u5979\u7684\u597d\u53cb\u5e15\u79cb\u8389\u8fd0\u7528\u9b54\u6cd5\u53bb\u4fa6\u6d4b\u4e86\u6bcf\u4e2a\u8282\u70b9\u4e0a\u7684\u8611\u83c7\u6570\u91cf\uff0c\u5206\u522b\u4e3a $a_1,a_2,\\dots,a_n$\u3002\n\n\u5728\u7b2c $0$ \u5206\u949f\u7684\u65f6\u5019\uff0c\u9b54\u7406\u6c99\u53ef\u4ee5\u4ece\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\u51fa\u53d1\u3002\u5728\u6bcf\u4e00\u5206\u949f\u7684\u65f6\u5019\uff0c\u5979\u5c06\u4f1a\u505a\u4ee5\u4e0b\u4e8b\u60c5\uff1a\n\n$1.$ \u5979\u5c06\u4ece\u8282\u70b9 $x$ \u79fb\u52a8\u5230\u8282\u70b9 $y$\u3002\uff08$|x-y| \\leq 1$\uff0c\u5373 $y$ \u53ef\u80fd\u7b49\u4e8e $x$\u3002\uff09\n\n$2.$ \u5979\u5c06\u4f1a\u6536\u96c6\u8282\u70b9 $y$ \u4e0a\u7684\u6240\u6709\u8611\u83c7\u3002\n\n$3.$ \u9b54\u6cd5\u68ee\u6797\u4e2d\u6bcf\u4e2a\u8282\u70b9\u4f1a\u518d\u751f\u957f\u51fa\u4e00\u4e2a\u8611\u83c7\u3002\n\n\u6ce8\u610f\uff0c\u5979\u4e0d\u80fd\u5728\u7b2c $0$ \u5206\u949f\u7684\u65f6\u5019\u6536\u96c6\u8611\u83c7\u3002\n\n\u73b0\u5728\u9b54\u7406\u6c99\u5e0c\u671b\u77e5\u9053\u5979\u5728\u524d $k$ \u5206\u949f\u7684\u65f6\u5019\uff0c\u6700\u591a\u80fd\u6536\u96c6\u5230\u591a\u5c11\u4e2a\u8611\u83c7\u3002\n\n#### \u5206\u6790\uff1a\n\n\u633a\u597d\u60f3\u7684\u8d2a\u5fc3\u9898\u3002\n\n\u56e0\u4e3a $n$ \u6570\u636e\u89c4\u6a21\u6bd4 $k$ \u5c0f\u5f97\u591a\uff0c\u6545\u8003\u8651\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n\u82e5 $k \\leq n$\uff0c\u5219\u9009\u62e9\u5e8f\u5217\u5185\u957f\u5ea6\u4e3a $k$ \u7684\u6700\u5927\u5b50\u6bb5\u548c\uff0c\u518d\u52a0\u4e0a $k$ \u5206\u949f\u65b0\u751f\u957f\u7684 $\\sum_{i=1}^{k}i=\\frac{k\\times(k+1)}{2}$ \u4e2a\u8611\u83c7\u3002\n\n\u82e5 $k > n$\uff0c\u5219\u5148\u82b1 $k$ \u5206\u949f\u91c7\u6458\u5b8c\u5e8f\u5217\u6240\u6709\u8611\u83c7\uff0c\u4e0d\u65ad\u4ece\u5e8f\u5217\u4e00\u7aef\u8d70\u5230\u53e6\u4e00\u7aef\uff0c\u8003\u8651 $k$ \u79d2\u5185\uff0c\u5171\u751f\u957f $nk$ \u4e2a\u8611\u83c7\uff0c\u800c\u8fd9\u6837\u91c7\u70b9 $1$ \u5230 $n$ \u5206\u522b\u5269\u6709 $1,2,\\dots,n$ \u4e2a\u8611\u83c7\uff0c\u5219\u5171\u6458 $nk-\\sum_{i=1}^{n}i=nk-\\frac{n\\times(n+1)}{2}$ \u4e2a\u8611\u83c7\u3002\n\n```cpp\n\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;\nconst int N=2e5+5;\nll a[N],s[N];\nll read()\n{\n\tll res,f=1;\n\tchar ch;\n\twhile((ch=getchar())<'0'||ch>'9')\n\tif(ch=='-')\n\tf=-1;\n\tres=ch^48;\n\twhile((ch=getchar())>='0'&&ch<='9')\n\tres=(res<<1)+(res<<3)+(ch^48);\n\treturn res*f;\n}\nint main()\n{\n\tll T,n,k,i,ans;\n\tT=read();\n\twhile(T--)\n\t{\n\t\tn=read();k=read();\n\t\tfor(i=1;i<=n;i++)\n\t\t{\n\t\t\ta[i]=read();\n\t\t\ts[i]=s[i-1]+a[i];\n\t\t}\n\t\tif(n<k)\n\t\t{\n\t\t\tprintf(\"%lld\\n\",s[n]+n*(k*2-n-1)/2);\n\t\t\tcontinue;\n\t\t}\n\t\tans=0;\n\t\tfor(i=k;i<=n;i++)\n\t\tans=max(ans,s[i]-s[i-k]+(k-1)*k/2);\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1660486421,
        "uid": 372907,
        "name": "SpasmodicZsf",
        "ccfLevel": 4,
        "title": "CF1687A The Enchanted Forest \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9898\u597d\u6c34\uff0c\u751a\u81f3\u6bd4 $C$ \u8981\u6c34......\n## \u601d\u8def\n\u9996\u5148\u770b\u5230\u8fd9\u4e2a\u9898\u76ee\uff0c\u6839\u636e CF \u7cfb\u5217\u9898\u76ee\u4e00\u8d2f\u7684\u98ce\u683c\uff0c\u80af\u5b9a\u662f\u4e2a\u5c0f\u8d2a\u5fc3\uff0c\u6211\u4eec\u7ee7\u7eed\u4ed4\u7ec6\u9605\u8bfb\u9898\u76ee\uff0c\u53d1\u73b0\u8fd9\u4e2a $k$ \u5f88\u5927\uff0c$n$ \u5374\u8f83\u5c0f\uff0c\u8fd9\u8868\u660e\u6211\u4eec\u8981\u5206\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\uff0c\u4e00\u79cd\u662f $k\u2265n$\uff0c\u8fd8\u6709\u4e00\u79cd\u5c31\u662f $k<n$\u3002\n\n$\\bullet \\ \\ k\u2265n$\uff1a\u6211\u4eec**\u9996\u5148\u53ef\u4ee5\u82b1\u8d39 $n$ \u6b65\u628a\u6240\u6709\u7684\u8611\u83c7\u90fd\u53d6\u5b8c**\uff0c\u7136\u540e\u7684 $k-n$ \u6b65\u6211\u4eec\u5f00\u59cb**\u6361\u5355\u4f4d\u65f6\u95f4\u5185\u957f\u51fa\u6765\u7684\u8611\u83c7**\u3002\u5728 $k$ \u7684\u65f6\u95f4\u5185\u6bcf\u4e2a\u683c\u5b50\u6211\u4eec\u53ef\u4ee5\u6361\u5230 $k$ \u4e2a\u957f\u51fa\u6765\u7684\u8611\u83c7\uff0c\u4f46\u662f\u7531\u4e8e\u6211\u4eec\u9700\u8981\u4ece\u5e8f\u5217\u4e00\u6bb5\u79fb\u52a8\u5230\u53e6\u4e00\u7aef\uff0c\u6211\u4eec\u65e0\u6cd5\u6361\u62fe\u7684\u8611\u83c7\u603b\u548c\u5c31\u662f $n+(n-1)+...+1$\uff0c\u672c\u6765\u53ef\u4ee5\u6361\u5230\u7684\u8611\u83c7\u603b\u548c\u662f $n \\times k$\uff0c\u51cf\u4e00\u51cf\u6211\u4eec\u53d1\u73b0\u53ef\u4ee5\u6361\u5230 $(k-1)+(k-2)+...+(k-n)$\uff0c**\u7b49\u5dee\u6570\u5217**\u6c42\u4e2a\u548c\u5c31\u662f $\\frac{(k-1+k-n) \\times n}{2}$\uff0c\u518d\u52a0\u4e0a\u6700\u521d\u7684\u603b\u8611\u83c7\u6570\u91cf\u3002\n\n$\\bullet \\ \\ k<n$\uff1a\u9996\u5148\u6211\u4eec\u8981\u660e\u786e\uff0c\u5982\u679c\u6211\u4eec\u5f53\u524d\u4f4d\u7f6e\u5728 $x$\uff0c\u6211\u4eec\u662f\u4ece $x-1$ \u79fb\u52a8\u800c\u6765\u7684\u3002\u6211\u4eec\u6709**\u4e09\u4e2a\u9009\u62e9**\uff0c\u4e00\u79cd\u662f\u6361**\u81ea\u5df1\u957f\u51fa\u6765\u7684**\uff0c\u6709\u4e00\u4e2a\uff0c\u4e00\u79cd\u662f\u62fe\u53d6 **$x-1$ \u957f\u51fa\u6765\u7684**\uff0c\u6709\u4e24\u4e2a\uff0c\u4e00\u79cd\u662f**\u62fe\u53d6 $x+1$ \u7684**\uff0c\u603b\u5171\u6709 $y+t$ \u4e2a\uff0c\u5176\u4e2d $y$ \u8868\u793a\u539f\u6709\u6570\u91cf\uff0c$y\u22651$\uff0c$t$ \u8868\u793a\u5df2\u7528\u6b65\u6570\uff0c$t\u22651$\uff0c\u6240\u4ee5 $y+t\u22652$\u3002**\u7efc\u4e0a\u6240\u8ff0\uff0c\u6211\u4eec\u9009\u53d6\u7684\u533a\u95f4\u662f\u4e00\u4e2a\u8fde\u7eed\u7684\uff0c\u4e14\u957f\u5ea6\u4e3a $k$ \u7684\uff0c\u6240\u4ee5\u53ea\u8981\u524d\u7f00\u548c\u4e00\u4e0b\u5c31\u597d\u4e86\u3002**\n\n\u5173\u4e8e\u4e3a\u4ec0\u4e48\u8981\u7ecf\u8fc7\u5c3d\u53ef\u80fd\u591a\u7684\u8611\u83c7\uff0c\u56e0\u4e3a\u52a0\u5165\u4f60\u5728\u4f4d\u7f6e $a$\uff0c\u4f60\u662f\u4ece\u4f4d\u7f6e $a-1$ \u8fc7\u6765\u7684\u3002\u7b2c\u4e00\u79cd\u60c5\u51b5\u662f\u4f60\u518d\u56de\u5230 $a-1$\uff0c\u90a3\u4e48\u4f60\u5f97\u5230\u7684\u8611\u83c7\u6570\u662f $1$\uff0c\u7b2c\u4e8c\u79cd\u60c5\u51b5\u662f\u4f60\u5f80\u524d\u8d70\uff0c\u4f60\u5f97\u5230\u7684\u8611\u83c7\u6570\u4e00\u5b9a $\u22651$\uff0c\u6240\u4ee5\u6211\u4eec\u80af\u5b9a\u9009\u7b2c\u4e8c\u79cd\u3002\u6ce8\u610f\u5230\u7b2c\u4e8c\u79cd\u60c5\u51b5\u5c31\u662f**\u4e0d\u8d70\u56de\u5934\u8def**\uff0c\u7ecf\u8fc7**\u5c3d\u53ef\u80fd\u591a\u7684\u8611\u83c7**\u3002\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long//\u8981\u5f00 long long\uff01\nint const N=2e5+10; \nint s[N];\nsigned main(){\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\tcout.tie(0);\n\tint t;cin>>t;\n\twhile (t--){\n\t\tint n,k;cin>>n>>k;\n\t\tfor (int i=1;i<=n;i++){\n\t\t\tint x;cin>>x;\n\t\t\ts[i]=s[i-1]+x;//\u6c42\u524d\u7f00\u548c\n\t\t}\n\t\tif (k>n){cout<<((k-1+k-n)*n/2)+s[n]<<'\\n';continue;}//\u5206\u7c7b\u8ba8\u8bba\n\t    int ans=0;\n\t\tfor (int i=k;i<=n;i++)\n\t\t    ans=max(ans,s[i]-s[i-k]+((k-1)*k/2));\n\t\tcout<<ans<<'\\n';\n\t} \n\treturn 0;\n}\n```\n",
        "postTime": 1654522741,
        "uid": 253608,
        "name": "Tx_Lcy",
        "ccfLevel": 7,
        "title": "CF1687A The Enchanted Forest"
    },
    {
        "content": "# **\u89e3\u9898\u601d\u8def\uff1a**\n\u8fd9\u9053\u9898\u8003\u67e5\u7684\u65b9\u6cd5\u662f\u8d2a\u5fc3\u3002\n\n\u6211\u4eec\u6765\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b $k$ \u7684\u8303\u56f4\uff1a\n+ \u82e5 $k \\le n $\uff0c\u4e5f\u5c31\u662f\u4e0d\u80fd\u5168\u90e8\u6536\u96c6\u5b8c\u539f\u6709\u7684\u6240\u6709\u7684\u8611\u83c7\u3002\n  - \u9996\u5148\u6211\u4eec\u7684\u76ee\u6807\u662f\u8ba9\u65f6\u95f4\u7684\u548c\u6700\u5927\uff0c\u6240\u4ee5\u4e0d\u80fd\u6536\u96c6\u4e4b\u524d\u6536\u96c6\u8fc7\u7684\u8611\u83c7\uff1b\n  - \u5176\u6b21\uff0c\u6bcf\u6b21\u6536\u96c6\u5b8c\u65b0\u957f\u7684\u8611\u83c7\uff0c\u53ef\u4ee5\u6536\u96c6\u7684\u6570\u91cf\u662f $\\sum_{i=1}^{k-1}i $\uff0c\u7528\u6c42\u548c\u516c\u5f0f\u8868\u793a\u5c31\u662f $\\dfrac{k \\times \\left ( k - 1 \\right ) }{2} $\u3002\n  - \u8fd9\u6837\u95ee\u9898\u5c31\u8f6c\u6362\u4e3a\u6c42\u539f\u6709\u8611\u83c7\u5e8f\u5217\u7684\u957f\u5ea6\u4e3a k\u7684\u533a\u95f4\u548c\u7684\u6700\u5927\u503c\uff0c\u53ef\u4ee5\u7528\u5355\u8c03\u961f\u5217\u7684\u65b9\u6cd5\u6c42\u6700\u5927\u503c\u3002\n\n+ \u82e5 $ k > n $\uff0c\u5219\u53ef\u4ee5\u6536\u96c6\u5b8c\u539f\u6709\u7684\u6240\u6709\u7684\u8611\u83c7\u3002\u7531\u4e8e\u6536\u96c6\u5b8c\u539f\u6709\u7684\u6240\u6709\u7684\u8611\u83c7\uff0c\u6240\u4ee5\u6bcf\u4e2a\u8282\u70b9\u81f3\u5c11\u9700\u8981\u5230\u8fbe\u4e00\u6b21\u3002\u4ee4\u5012\u6570\u7b2c\u4e00\u4e2a\u5230\u8fbe\u7684\u70b9\u4e3a $ n $\uff0c\u5012\u6570\u7b2c\u4e8c\u4e2a\u5230\u8fbe\u7684\u70b9\u4e3a $n-1$\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u90a3\u4e48\u53ef\u4ee5\u53d1\u73b0\uff0c$ n $ \u70b9\u6700\u540e\u751f\u957f\u6709\u4e00\u4e2a\u8611\u83c7\u6ca1\u7528\u80fd\u591f\u91c7\u96c6\uff0c$n-1$ \u70b9\u6709\u4e24\u4e2a\u8611\u83c7\u6ca1\u7528\u80fd\u591f\u91c7\u96c6\uff0c\u4ee5\u6b21\u7c7b\u63a8\u3002\u6240\u4ee5\u8bf4\uff0c\u5728 $k$ \u79d2\u540e\uff0c\u5171\u65b0\u957f\u51fa\u4e86 $ n \\times k $ \u4e2a\u8611\u83c7\uff0c\u8fd8\u9700\u8981\u51cf\u53bb\u4ece\u8282\u70b9 $1$ \u81f3 $n$ \u5206\u522b\u6709 $ 1,2, \\cdots ,n $ \u4e2a\u8611\u83c7\u672a\u91c7\u96c6\uff0c\u5373\u603b\u5171\u91c7\u96c6\u5230\u7684\u65b0\u957f\u51fa\u7684\u8611\u83c7\u6570\u91cf\u4e3a $ n \\times k - \\sum_{i=1}^{n} i= n \\times k - \\frac{\\left ( n+1 \\right ) \\times n}{2}  $\u3002\n\n\u6700\u540e\u63d0\u9192\u4e00\u53e5\uff0c\u6b64\u9898\u5fc5\u987b\u5f00 long long\u3002\n\n# **AC \u4ee3\u7801\uff1a**\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nint a[200005];\nsigned main ()\n{\n\tint T;\n\tcin>>T;\n\twhile(T--)\n\t{\n\t\tint n,k;\n\t\tcin>>n>>k;\n\t\tint ans=0;\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tcin>>a[i];\n\t\tif(k<=n)\n\t\t{\n\t\t\tint sum=0;\n\t\t\tfor(int i=1;i<=n;i++)\n\t\t\t{\n\t\t\t\tif(i<=k)\n\t\t\t\t{\n\t\t\t\t\tsum+=a[i];\n\t\t\t\t\tans=sum;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tans=max(ans,sum-a[i-k]+a[i]);\n\t\t\t\t\tsum=sum-a[i-k]+a[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tans+=k*(k-1)/2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(int i=1;i<=n;i++)\n\t\t\t\tans+=a[i];\n\t\t\tans+=n*k;\n\t\t\tans-=n*(n+1)/2;\n\t\t}\n\t\tcout<<ans<<endl;\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1665756212,
        "uid": 529476,
        "name": "Banana_yeah",
        "ccfLevel": 0,
        "title": "CF1687A The Enchanted Forest \u9898\u89e3"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://codeforces.com/problemset/problem/1687/A) & [\u524d\u5f80 blog \u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://by505244.github.io/oi_blogs/2022/06/07/CF1687A\u9898\u89e3)\n\n\u5c06\u6b64\u95ee\u9898\u62c6\u5206\u6210 $2$ \u5c0f\u9898\u6765\u89e3\u7b54\u3002\n\n1. \u6c42 $a$ \u6570\u7ec4\u4e2d\u957f\u5ea6\u4e3a $k$ \u7684\u548c\u7684\u6700\u5927\u503c\u3002\uff08$k\\ge n$ \u65f6 \u4e0d\u9700\u8003\u8651\u6b64\u95ee\u9898\uff09\n2. \u6c42\u5728 $k$ \u7684\u65f6\u95f4\u91cc\uff0c\u627e\u5230\u4e00\u79cd\u65b9\u6cd5\uff0c\u4f7f\u5f97**\u6240\u6709\u4f4d\u7f6e\u88ab\u6700\u540e\u4e00\u6b21\u904d\u5386\u5230\u7684\u65f6\u95f4\u4e4b\u548c\u6700\u5927**\u3002\n\n####  \u5bf9\u4e8e $n< k$ \u7684\u60c5\u51b5\n\n\u5148\u8003\u8651\u7b2c\u4e8c\u4e2a\u5c0f\u95ee\u3002\n\n\u5982\u679c\u4e00\u4e2a\u5730\u65b9\u88ab\u91cd\u590d\u904d\u5386\uff0c\u90a3\u4e48\u4ed6\u5c31\u4f1a\u6d6a\u8d39\u6389\u4e0a\u6b21\u904d\u5386\u5b8c\u7684\u65f6\u95f4\uff0c\u800c\u6211\u4eec\u7684\u76ee\u6807\u662f\u4f7f\u5f97\u65f6\u95f4\u4e4b\u548c\u6700\u5927\uff0c\u6545\u4e00\u4e2a\u5730\u65b9\u91cd\u590d\u904d\u5386\u4e0d\u53ef\u53d6\u3002\n\n\u6545\u7b54\u6848\u4fbf\u662f\uff1a\n\n$$\\max\\limits_{1\\le i\\le n-k}(\\sum\\limits^{i+k}_{j=i}a_j)+\\sum\\limits_{i=0}^{k-1}i$$\n\n#### \u5bf9\u4e8e $n\\ge k$ \u7684\u60c5\u51b5\uff1a\n\n\u7531\u4e8e $n\\ge k$\uff0c\u4e0d\u9700\u8981\u518d\u8003\u8651\u7b2c\u4e00\u5c0f\u95ee\uff0c\u8f6c\u800c\u8003\u8651\u7b2c\u4e8c\u5c0f\u95ee\u3002\n\n\u4e3a\u4e86\u6ee1\u8db3\u65f6\u95f4\u4e4b\u548c\u6700\u5927\uff0c\u9700\u8981\u5728\u6700\u540e $n$ \u79d2\u5185\u5c06\u6240\u6709\u6570\u90fd\u904d\u5386\u4e00\u904d\u3002\u6240\u4ee5\u4ece**\u5de6\u5230\u53f3\u6216\u4ece\u53f3\u5230\u5de6\u4e00\u5b9a\u6240\u904d\u5386\u5230\u7684\u65f6\u95f4\u4e4b\u548c\u4e00\u5b9a\u6700\u5927**\u3002\n\n\u7531\u4e8e\u53ef\u4ee5\u539f\u5730\u8d70\uff0c\u4e0d\u96be\u8bc1\u660e\u5728 $n\\ge k$ \u7684\u60c5\u51b5\u4e0b\u662f\u53ef\u4ee5\u6784\u9020\u7684\u3002\n\n\u6545\u7b54\u6848\u4fbf\u662f\uff1a\n\n$$(\\sum\\limits_{i=1}^{n}a_i)+\\sum\\limits_{i=k-n}^{k-1}i$$\n\n\u524d\u4e00\u6bb5\u7528\u524d\u7f00\u548c\u5904\u7406\uff0c\u540e\u4e00\u6bb5\u53ef\u7528\u9ad8\u65af\u6c42\u548c\u516c\u5f0f\u5904\u7406\u3002\n\n\u6ce8\u610f\u5230\u9898\u76ee\u6570\u636e\u8303\u56f4\u8f83\u5927\uff0c\u9700\u8981\u5f00 `long long` \u5904\u7406\u3002\n\n~~\u6700\u540e\u611f\u8c22 cocoly \u8ba9\u6211\u91cd\u5199\u9898\u89e3\uff0csto cocoly orz~~\n\n```cpp\n#define int long long\nll a[200005];\nvoid solve(){\n    int n,k;\n    scanf(\"%lld%lld\",&n,&k);\n    for(int i=1;i<=n;i++){\n        scanf(\"%lld\",&a[i]);\n    }\n    ll cnt=0,ans=0;\n    for(int i=1;i<=n;i++)a[i]+=a[i-1];\n    if(k<=n){\n        for(int i=k;i<=n;i++){\n            ans=max(ans,a[i]-a[i-k]);\n        }\n        printf(\"%lld\\n\",ans+(k*(k-1)/2));\n        return;\n    }\n    if(n==1){\n        printf(\"%lld\\n\",a[n]+k-1);\n        return;\n    }\n    printf(\"%lld\\n\",((k-1)+(k-n))*(n)/2+ a[n]);\n}\n\n```",
        "postTime": 1654493680,
        "uid": 505244,
        "name": "linyuhuai",
        "ccfLevel": 0,
        "title": "solution-cf1687a"
    },
    {
        "content": "\u5b98\u65b9\u9898\u89e3\u3002\n\nWe can solve the problem by deviding them into two cases:\n\n1. $k<n$: We can easily found that we can't walk into a blocks more than one times,so just choose $k$ continuous blocks and eat them all,the final answer is the sum of these k blocks plus the additional mushrooms.We can calculated the additional mushrooms by using these equation $\\frac{k\\times\\left(k - 1\\right)}{2}$. the following picture shows the additional mushrooms clearly.\n2. $k\\geq n$: We can found that if we wanna make the number of additional mushrooms biggest,we have to pass by all the blocks in the last $n - 1$ seconds,so one way is to stay on the first blocks for $k - n + 1$ seconds and than goto the $n$ th blocks in $n-1$ seconds,by this way,we can eat all the mushrooms and make the number of additional mushrooms biggest.\n\n\u522b\u95ee\uff0c\u95ee\u5c31\u662f\u8fd9\u662f\u7b2c\u4e00\u7248\u7684\u8e69\u811a\u82f1\u6587\uff0css \u5199\u7684\u6da6\u8272\u7248\u672c\u81ea\u5df1\u53bb CF \u4e0a\u770b\u3002\n\n\u7ffb\u8bd1\u4e00\u4e0b\uff1a\n\n\u5bb9\u6613\u53d1\u73b0\u589e\u91cf\u5f88\u672c\u8eab\u7684\u8611\u83c7\u53ef\u4ee5\u5206\u5f00\u8003\u8651\u3002\n\n1. \u5f53 $k<n$ \u65f6\uff0c\u8d70\u91cd\u590d\u7684\u8def\u5fc5\u7136\u662f\u4e0d\u4f18\u7684\uff08\u8003\u8651\u53cd\u8bc1\uff09\uff0c\u53ef\u4ee5\u53d1\u73b0\u589e\u91cf\u65f6\u56fa\u5b9a\u7684\uff0c\u4e3a $\\frac{k\\times\\left(k - 1\\right)}{2}$ \uff0c\u56e0\u6b64\u627e\u5230\u8fde\u7eed\u7684 $k$ \u4e2a\u683c\u5b50\u4f7f\u5f97\u5176\u672c\u8eab\u7684\u503c\u6700\u5927\u5373\u53ef\uff0c\u7528\u524d\u7f00\u548c\u53ef\u4ee5\u5728 $\\mathcal{O}\\left(n\\right)$ \u5185\u89e3\u51b3\u3002\n\n2. \u5f53 $k\\geq n$ \u65f6\u3002\u9996\u5148\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u683c\u5b50\u6700\u540e\u5e26\u6765\u7684\u589e\u91cf\u8d21\u732e\u53ea\u548c\u6700\u540e\u4e00\u6b21\u7ecf\u8fc7\u8fd9\u4e2a\u5404\u81ea\u7684\u65f6\u95f4\u6709\u5173\uff0c\u6240\u4ee5\u5982\u679c\u60f3\u8ba9\u589e\u91cf\u6700\u5927\uff0c\u5fc5\u987b\u5728\u6700\u540e $n$ \u79d2\u5185\u628a\u6240\u6709\u683c\u5b50\u5404\u8d70\u4e00\u6b21\uff0c\u53ef\u4ee5\u6784\u9020\u5f62\u5982 $1\\rightarrow 1\\rightarrow \\cdots \\rightarrow 2\\rightarrow 3\\rightarrow \\cdots \\rightarrow n$ \u7684\u8d70\u6cd5\uff0c\u53ef\u4ee5\u8bc1\u660e\uff0c\u8fd9\u79cd\u8d70\u6cd5\u4e00\u5b9a\u80fd\u628a\u6bcf\u4e2a\u683c\u5b50\u521d\u59cb\u7684\u8611\u83c7\u90fd\u5403\u5230\uff0c\u56e0\u6b64\u672c\u91cf\u548c\u589e\u91cf\u90fd\u662f\u6700\u5927\u7684\uff0c\u90a3\u4e48\u603b\u91cf\u4e5f\u5fc5\u7136\u662f\u6700\u5927\u7684\u3002\n\n",
        "postTime": 1654391314,
        "uid": 183026,
        "name": "Cocoly1990",
        "ccfLevel": 0,
        "title": "CF1687A The Enchanted Forest"
    }
]