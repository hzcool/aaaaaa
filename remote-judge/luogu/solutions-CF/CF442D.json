[
    {
        "content": "~~\u524d\u4e00\u7bc7\u9898\u89e3\u8fde\u590d\u6742\u5ea6\u90fd\u6ca1\u8bf4\u6211\u8fd8\u4ee5\u4e3a\u662f\u66b4\u529b\u8001\u54e5\u3002~~\n\n\u9996\u5148\u4e00\u4e2a\u70b9\u7684\u5230\u513f\u5b50\u7684\u4e24\u6761\u8fb9\u989c\u8272\u76f8\u540c\u7b54\u6848\u663e\u7136\u4e0d\u4f1a\u66f4\u4f18\uff0c\u539f\u56e0\u662f\u8fd9\u4e24\u6761\u8fb9\u4e0d\u4f1a\u540c\u65f6\u51fa\u73b0\u5728\u67d0\u4e2a\u8282\u70b9\u5230\u6839\u7684\u8def\u5f84\u4e0a\u3002\u6240\u4ee5\u6bcf\u4e2a\u8282\u70b9\u5230\u5176\u513f\u5b50\u7684\u6240\u6709\u8fb9\u989c\u8272\u90fd\u4e0d\u4e00\u6837\u3002\n\n\u6211\u4eec\u4e0b\u6587\u79f0\u4e00\u4e2a\u8282\u70b9\u7684\u503c\u4e3a\u786e\u5b9a\u8be5\u8282\u70b9\u7684\u5b50\u6811\u5185\u53ca\u5230\u5176\u7236\u4eb2\u7684\u6240\u6709\u8fb9\u7684\u989c\u8272\u540e\u7b54\u6848\u7684\u6700\u5c0f\u503c\u3002\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u5728\u4e00\u4e2a\u70b9\u5b50\u6811\u5185\u7684\u6700\u4f18\u65b9\u6848\u5df2\u7ecf\u786e\u5b9a\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e2a\u70b9\u5230\u5176\u7236\u4eb2\u8fd9\u6761\u8fb9\u7684\u989c\u8272\u5e94\u5f53\u662f\u5b83\u5230\u5176\u513f\u5b50\u4e2d\u503c\u6700\u5927\u7684\u90a3\u4e00\u6761\u8fb9\u7684\u989c\u8272\uff0c\u539f\u56e0\u662f\u5047\u5982\u8fd9\u4e24\u6761\u8fb9\u7684\u989c\u8272\u4e0d\u540c\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u5c06\u4f1a\u7ecf\u8fc7\u4e00\u6761\u989c\u8272\u4e0d\u540c\u7684\u8fb9\uff0c\u6240\u4ee5\u8fd9\u4e2a\u8282\u70b9\u7684\u503c\u5c06\u662f\u5176\u513f\u5b50\u6700\u5927\u503c\u52a0\u4e00\uff0c\u663e\u7136\u6ca1\u6709\u8ba9\u8fd9\u4e2a\u513f\u5b50\u4e0d\u52a0\u6765\u5f97\u4f18\u3002\u6240\u4ee5\u4e00\u4e2a\u8282\u70b9\u5176\u5b83\u513f\u5b50\u90fd\u4f1a\u7ecf\u8fc7\u4e00\u6761\u989c\u8272\u4e0d\u540c\u7684\u8fb9\uff0c\u6211\u4eec\u76f4\u63a5\u62ff\u51fa\u5176\u513f\u5b50\u7684\u6b21\u5927\u503c\u4fbf\u80fd\u4ee3\u8868\u8fd9\u4e9b\u7ecf\u8fc7\u989c\u8272\u4e0d\u540c\u7684\u8fb9\u3002\u8bbe\u4e00\u4e2a\u8282\u70b9\u7684\u503c\u4e3a $f$\uff0c\u5176\u513f\u5b50 $f$ \u7684\u6700\u5927\u503c\u4e3a $max_o$\uff0c\u5176\u513f\u5b50 $f$ \u7684\u6b21\u5927\u503c\u4e3a $se_o$\uff0c\u6211\u4eec\u4fbf\u6709\uff1a\n\n$$f_o=\\max(max_o,se_o+1)$$\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u6b21\u52a0\u70b9\u90fd\u66b4\u529b\u8f6c\u79fb\u7684\u590d\u6742\u5ea6\u4e3a $O(n^2)$\u3002\n\n\u6709\u4e2a\u975e\u5e38\u4e0d\u50cf\u4f18\u5316\u7684\u4f18\u5316\uff0c\u5bf9\u4e8e\u6bcf\u6b21\u52a0\u70b9\uff0c\u6211\u4eec\u53d1\u73b0\u53ea\u8981\u66f4\u65b0\u5b83\u5230\u6839\u8fd9\u6761\u8def\u5f84\u4e0a\u7684\u70b9\uff0c\u8fd9\u6837\u5728\u94fe\u7684\u60c5\u51b5\u4f9d\u7136\u662f $O(n^2)$ \u7684\uff0c\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u6bcf\u52a0\u4e00\u4e2a $f$ \u503c\u4f1a\u53d1\u751f\u4fee\u6539\u7684\u70b9\u53ea\u4f1a\u662f\u5b83\u5230\u5176\u67d0\u4e2a\u7956\u5148\u7684\u8fd9\u6761\u8def\u5f84\u3002\u56e0\u4e3a\u5047\u5982\u6709\u67d0\u4e2a\u503c\u4e0d\u4f1a\u53d1\u751f\u4fee\u6539\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u5230\u5176\u7236\u4eb2\u7684\u8f6c\u79fb\u5c06\u548c\u4e0d\u52a0\u8be5\u70b9\u76f8\u540c\uff0c\u6240\u4ee5\u4e0d\u5fc5\u7ee7\u7eed\uff0c\u6211\u4eec\u8bbe $ans_o$ \u4e3a\u6240\u6709\u70b9\u90fd\u52a0\u5b8c\u540e\u7684 $f_o$\uff0c\u8fd9\u6837\u6bcf\u4e2a\u70b9\u53ea\u4f1a\u88ab\u66f4\u65b0 $O(ans_o)$ \u6b21\uff0c\u590d\u6742\u5ea6\u4e3a $O(\\sum_{i=1}^{n} ans_i)$\u3002\u8fd9\u6837\u770b\u4e0a\u53bb\u4f9d\u7136\u662f $O(n^2)$ \u7684\uff0c\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u5047\u5982\u5bf9\u8fd9\u68f5\u6811\u8fdb\u884c\u91cd\u94fe\u5256\u5206\u5e76\u6309\u5256\u5206\u540e\u7684\u7ed3\u679c\u8fdb\u884c\u67d3\u8272\uff0c\u6839\u636e\u91cd\u94fe\u5256\u5206\u7684\u6027\u8d28\uff0c\u6bcf\u4e2a\u70b9\u5230\u6839\u7ecf\u8fc7\u7684\u91cd\u94fe\u6761\u6570\u662f $O(\\log n)$ \u7684\u3002\u4e8e\u662f $ans_o$ \u7684\u7ea7\u522b\u4e5f\u662f $O(\\log n)$\uff0c\u8fd9\u6837\u590d\u6742\u5ea6\u4fbf\u662f $O(n \\log n)$\u3002\n\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\u6839\u6ca1\u6709\u5411\u4e0a\u7684\u8fb9\uff0c\u6240\u4ee5\u6839\u7684 $f$ \u503c\u5c31\u662f $max$ \u503c\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e6 + 10;\nint n;\nint dp[N], maxs[N], se[N];\nvector<int>v[N];\nbool pushup(int to, int o)\n{\n\tif(dp[to] > maxs[o])\n\tse[o] = maxs[o], maxs[o] = dp[to];\n\telse\n\tif(dp[to] > se[o])\n\tse[o] = dp[to];\n\tif(max(maxs[o], se[o] + 1) == dp[o])return 0;\n\treturn 1;\n}\nint from[N];\nint main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n;\n\tdp[1] = 1;\n\tfor (int i = 2; i <= n + 1; ++ i)\n\t{\n\t\tdp[i] = 1;\n\t\tint fa;\n\t\tcin >> fa;\n\t\tfrom[i] = fa;\n\t\tv[fa].push_back(i);\n\t\tfa = i;\n\t\tfor (; pushup(fa, from[fa]) && from[fa]; fa = from[fa])\n\t\tdp[from[fa]] = max(maxs[from[fa]], se[from[fa]] + 1);\n\t\tcout << maxs[1] << \" \";\n\t}\n}\n```\n",
        "postTime": 1636167527,
        "uid": 111728,
        "name": "\u5e7b\u5f71\u661f\u575a\u5f3a",
        "ccfLevel": 7,
        "title": "CF442D Adam and Tree"
    },
    {
        "content": "//--------------------\u56e0\u4e3a\u524d\u51e0\u5929\u540c\u5b66\u63d0\u9192\u6211\u5728\u8d34\u4ee3\u7801\u65f6\u5c11\u8d34\u4e86\u4e00\u4e2areturn 1-------------------------// //--------------------\u6240\u4ee5\u91cd\u65b0\u4ea4\u4e86\u4e00\u904d\uff0c\u5e0c\u671b\u80fd\u591f\u901a\u8fc7\uff0c\u4ee5\u514d\u8bef\u5bfc\u4ed6\u4eba-------------------------------//\n\n\n\n\u8fd9\u4e2a\u9898\u662f\u524d\u5929\u6811\u5f62dp\u8003\u8bd5\u65f6\u7684\u7b2c\u4e00\u9898\uff0c\u5b66\u957f\u539f\u672c\u8981\u7ed9\u6211\u4eec\u8bb2\u8fd9\u4e2a\u9898\u76ee\uff0c\u7ed3\u679c\u53d1\u73b0\u67d0\u5f20\u59d3\u5de8\u4f6c\u5207\u4e86\u8fd9\u9053\u9898\u3002\u3002\u3002\u6240\u4ee5\u8fd9\u7bc7\u9898\u89e3\u7b97\u662f\u8f6c\u8ff0\u4ed6\u7684\u601d\u8def\u3002\n\u9996\u5148\uff0c\u53ef\u4ee5\u60f3\u51fa\u4e00\u4e2adp\uff0c\u7528dp i\u8868\u793a\u5728\u542bi\u7684\u5b50\u6811\u4e2d\u6700\u5927\u6743\u503c\uff0c\u7528mx1 i\u8868\u793ai\u5b50\u6811\u4e2d\u6700\u5927\u7684\u6743\u503c\uff0cmx2 i\u8868\u793ai\u5b50\u6811\u4e2d\u6b21\u5927\u7684\u6743\u503c\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0cdp i=max(mx1 i,mx2 i+1)\u800c\u4e0d\u96be\u53d1\u73b0\uff0c\u6bcf\u4e00\u6b21\u52a0\u4e0a\u4e00\u4e2a\u8282\u70b9\u5f71\u54cd\u7684\u5fc5\u5b9a\u53ea\u662f\u5176\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u7684\u4e00\u6761\u94fe\uff0c\u6240\u4ee5\u6bcf\u6b21\u66f4\u65b0\u53ea\u8981\u5411\u4e0a\u66f4\u65b0\u5373\u53ef\u3002\n```cpp\nbool update(int x,int y)\n{\n\tif(mx2[y]>dp[x])\n\treturn 0;\n\tif(mx1[y]<dp[x])\n\t{\n\t\tmx2[y]=mx1[y];\n\t\tmx1[y]=dp[x];\n\t}\n\telse if(mx2[y]<dp[x])\n\t{\n\t\tmx2[y]=dp[x];\n\t}\n\tint upd=max(mx1[y],mx2[y]+1);\n\t\n\tif(upd==dp[y])\n\treturn 0;\n    \treturn 1;\n   ```\n\n\u4ece\u590d\u6742\u5ea6\u4e0a\u6765\u770b\u5e94\u8be5\u6ca1\u6709\u592a\u5927\u95ee\u9898\uff0c\u4e0d\u8fc7\u8fd8\u662f\u5e94\u8be5\u5728\u4e0d\u80fd\u66f4\u65b0\u65f6\u76f4\u63a5\u9000\u51fa\uff0c\u9632\u6b62\u8d85\u65f6\n```\nfor(j=i;fth[j]&&update(j,fth[j]);j=fth[j]);\n```\n\u6700\u540e\u7684\u7b54\u6848\u663e\u7136\u5c31\u662fdp 1\u4e86\uff0c\u6bcf\u6b21\u8f93\u51fa\u5373\u53ef\u3002\n\u5b8c\u6574\u4ee3\u7801\uff1a\n```\n#include<cstdio>\n#include<iostream>\n#include<cmath>\n#include<algorithm>\n#define N 1000010\nusing namespace std;\nint i,j,k,m,n,u,v;\nint mx1[N]={},mx2[N]={};\nint dp[N]={},fth[N]={};\nvoid read(int &s)\n{\n\ts=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9') ch=getchar();\n\twhile(ch>='0'&&ch<='9')\n\t{\n\t\ts=(s<<3)+(s<<1)+ch-'0';\n\t\tch=getchar();\n\t}\n}\nbool update(int x,int y)\n{\n\tif(mx2[y]>dp[x])\n\treturn 0;\n\tif(mx1[y]<dp[x])\n\t{\n\t\tmx2[y]=mx1[y];\n\t\tmx1[y]=dp[x];\n\t}\n\telse if(mx2[y]<dp[x])\n\t{\n\t\tmx2[y]=dp[x];\n\t}\n\tint upd=max(mx1[y],mx2[y]+1);\n\t\n\tif(upd==dp[y])\n\treturn 0;\n\tdp[y]=upd;\n\treturn 1;\n}\nint main()\n{\n//\tfreopen(\"tree1.in\",\"r\",stdin);\n//\tfreopen(\"tree.out\",\"w\",stdout);\n\tread(n);\n\tn++;\n//\tcout<<\"0\"<<'\\n';\n\tdp[1]=1;\n\tfor(i=2;i<=n;i++)\n\t{\n\t\tread(fth[i]);\n\t\tdp[i]=1;\n\t\tfor(j=i;fth[j]&&update(j,fth[j]);j=fth[j]);\n\t\tcout<<mx1[1]<<'\\n';\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1572525806,
        "uid": 241616,
        "name": "Meltryllis_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF442D \u3010Adam and Tree\u3011"
    },
    {
        "content": "[CF442D](https://www.luogu.com.cn/problem/CF442D)\n\n\u72b6\u6001\u6709\u70b9\u96be\u60f3\u4f46\u60f3\u51fa\u72b6\u6001\u6765\u5c31\u7b80\u5355\u4e86\u7684 DP \u9898\u3002\n\n------------\n\n\u4e0d\u96be\u60f3\u5230\u7528 DP\u3002\n\n\u72b6\u6001\u8bbe 3 \u4e2a\uff1a$dp_u$ \u8868\u793a**\u975e\u6839**\u8282\u70b9 $u$ \u7684\u6743\u503c\uff1b$fir_u$ \u8868\u793a\u8282\u70b9 $u$ \u7684\u6240\u6709\u513f\u5b50\u4e2d\u6743\u503c\u6700\u5927\u7684\u4e00\u4e2a\uff1b$sec_u$ \u8868\u793a\u8282\u70b9 $u$ \u7684\u6240\u6709\u513f\u5b50\u4e2d\u6743\u503c\u6b21\u5927\u7684\u4e00\u4e2a\u3002\n\n\u8f6c\u79fb\u663e\u7136\u3002\u7528\u513f\u5b50\u7684 $dp_v$ \u66f4\u65b0\u7236\u4eb2 $u$ \u7684\u72b6\u6001\u3002\u5148\u66f4\u65b0 $fir_u,sec_u$\uff0c\u7136\u540e $dp_u=\\max(fir_u,sec_u+1)$\u3002\n\n\u7b54\u6848\u6700\u540e\u5c31\u662f $fir_{root}$\u3002\u6ce8\u610f\u5e76\u4e0d\u662f $dp_{root}$\uff0c\u56e0\u4e3a\u6839 $root$ \u5230\u81ea\u5df1\u662f\u6ca1\u8fb9\u7684\uff0c\u6211\u4eec\u8bbe\u5b9a\u72b6\u6001 $dp$ \u7684\u65f6\u5019\u4e5f\u6ca1\u6709\u7b97\u4e0a\u6839\u3002\n\n\u6ce8\u610f\u5230\u6bcf\u65b0\u62f4\u4e0a\u4e00\u4e2a\u8282\u70b9 $u$\uff0c\u4e0d\u5fc5\u6539\u53d8\u6574\u68f5\u6811\u7684\u6743\u503c\uff0c\u53ea\u9700\u6539\u53d8\u4ece $u$ \u5230\u6839 $root$ \u8fd9\u6761\u8def\u5f84\u4e0a\u7684\u8282\u70b9\u6743\u503c\uff0c\u663e\u7136\u4e0d\u4f1a\u66f4\u52a3\u3002\n\n\u5f53\u5411\u4e0a\u66f4\u65b0\u65f6\u53d1\u73b0\u5df2\u7ecf\u66f4\u65b0\u4e0d\u4e86\u8fd9\u4e2a\u8282\u70b9\u4e86\uff0c\u90a3\u5c31\u76f4\u63a5\u9000\u51fa\uff08\u66f4\u5411\u4e0a\u7684\u8282\u70b9\u4e5f\u66f4\u65b0\u4e0d\u4e86\u4e86\uff09\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\mathcal O(n \\log n)$ \u7684\u3002\u53ef\u4ee5\u8003\u8651\u91cd\u94fe\u5256\u5206\u7684\u7ed3\u8bba\u6765\u8bc1\u660e\u8fd9\u70b9\u3002\n\n------------\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\n\nconst long long N=1e6+10;\nlong long n,f[N],dp[N],fir[N],sec[N],ok;\n\ninline long long read(){char ch=getchar();long long x=0,f=1;while(ch<'0' || ch>'9'){if(ch=='-') f=-1;ch=getchar();}while('0'<=ch && ch<='9'){x=x*10+ch-'0';ch=getchar();}return x*f;}\ninline void write(long long x){if(x<0){putchar('-');x=-x;}if(x>9) write(x/10);putchar(x%10+'0');}//1e6\u7684IO\u91cf\u5f97\u7528\u66f4\u5feb\u7684\u8f93\u5165\u8f93\u51fa\u65b9\u5f0f\n\nbool upd(long long x){\n    if(fir[f[x]]<dp[x]){\n        sec[f[x]]=fir[f[x]];\n        fir[f[x]]=dp[x];\n    }\n    else if(sec[f[x]]<dp[x]){\n        sec[f[x]]=dp[x];\n    }\n    long long ans=max(fir[f[x]],sec[f[x]]+1);\n    if(dp[f[x]]==ans) return 0;//\u4e0d\u80fd\u66f4\u65b0\u5c31\u9000\u51fa\n    dp[f[x]]=ans;\n    return 1;\n}\n\nint main(){\n    long long i,j,u,v;\n    n=read();n++;\n    dp[1]=1;\n    for(i=2;i<=n;i++){\n        f[i]=read();\n        dp[i]=1;\n        for(j=i;f[j];j=f[j]){\n            if(!upd(j)) break;//\u4e0d\u80fd\u66f4\u65b0\u5c31\u9000\u51fa\n        }\n        write(fir[1]);\n        putchar(' ');\n    }\n    putchar('\\n');\n    return 0;\n}\n```\n",
        "postTime": 1636330488,
        "uid": 150064,
        "name": "Gokix",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF442D \u3010Adam and Tree\u3011"
    },
    {
        "content": "# **Adam and Tree**\n\n## **\u9898\u76ee\u63cf\u8ff0**\n\nAdam \u6709\u4e00\u68f5\u5f69\u8272\u6811\uff0c\u521d\u59cb\u65f6\u53ea\u6709\u6839\u8282\u70b9\u3002\u6bcf\u6b21\u5f80\u8fd9\u68f5\u6811\u4e2d\u52a0\u5165\u4e00\u4e2a\u8282\u70b9\uff0c\u4f60\u9700\u8981\u5bf9\u6bcf\u6761\u8fb9\u67d3\u4e0a\u4e00\u79cd\u989c\u8272\uff0c\u4f7f\u5f97\u6811\u4e2d\u6bcf\u4e2a\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u8fb9\u7684\u989c\u8272\u79cd\u7c7b\u6570\u6700\u5c0f\u3002\u6c42\u6bcf\u6b21\u6dfb\u52a0\u8282\u70b9\u540e\u7684\u6700\u5c0f\u989c\u8272\u79cd\u7c7b\u6570\u3002\n\n**\u6ce8\u610f**\uff1a\n- \u7ed9\u5b9a\u7684\u4fdd\u8bc1\u4e00\u5b9a\u662f\u4e00\u68f5\u6811\u3002\n- \u67d3\u8272\u65f6\u4e00\u5b9a\u8981\u4fdd\u8bc1\u540c\u4e00\u79cd\u989c\u8272\u5fc5\u987b\u5f62\u6210\u4e00\u6761\u8def\u5f84\uff0c**\u8fd9\u4e00\u70b9\u975e\u5e38\u91cd\u8981\uff0c\u662f\u7406\u89e3\u9898\u610f\u7684\u91cd\u8981\u5185\u5bb9**\u3002\n\n## **\u601d\u8def\u5206\u6790**\n\n\u9996\u5148\u9700\u8981\u7406\u89e3\u4e00\u4e0b\u9898\u610f\u4e2d\u7684**\u8fb9\u7684\u989c\u8272\u79cd\u7c7b\u6570\u6700\u5c0f**\u662f\u4ec0\u4e48\u610f\u601d\u3002\u6211\u4eec\u53ef\u4ee5\u4ece\u6837\u4f8b\u4e2d\u770b\u5230\u4e00\u4e2a\u6709\u7528\u7684\u4fe1\u606f\uff1a\u7b2c $6$ \u4e2a\u65f6\u523b\u6dfb\u52a0\u8282\u70b9\u540e\uff0c\u6839\u8282\u70b9\u5230\u8282\u70b9 $11$ \u7684\u8def\u5f84\u4e0a\u989c\u8272\u79cd\u7c7b\u6570\u4e3a $2$\uff0c\u800c\u5230\u8282\u70b9 $12$ \u7684\u8def\u5f84\u4e0a\u989c\u8272\u79cd\u7c7b\u6570\u4e3a $3$\u3002\u7531\u6b64\u53ef\u77e5\uff0c\u6bcf\u6b21\u6dfb\u52a0\u8282\u70b9\u540e\u6700\u5c0f\u989c\u8272\u79cd\u7c7b\u6570\u7684\u5b9a\u4e49\u5e94\u8be5\u662f\uff1a**\u4ece\u6839\u8282\u70b9\u5230\u65b0\u6dfb\u52a0\u7684\u8282\u70b9\u8def\u5f84\u4e0a\u989c\u8272\u79cd\u7c7b\u6570\u7684\u6700\u5927\u503c**\u3002\n\n**\u90a3\u4e48\u6211\u4eec\u5982\u4f55\u53bb\u67d3\u8272\u5462**\uff1f\u9996\u5148\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u6765\u7ef4\u62a4\u6bcf\u4e2a\u8282\u70b9\u5230\u6839\u8282\u70b9\u8def\u5f84\u4e0a\u7684\u989c\u8272\u79cd\u7c7b\u6570\u3002\u56e0\u4e3a\u6bcf\u6b21\u6dfb\u52a0\u8282\u70b9\u540e\u53ea\u4f1a\u5f71\u54cd\u5230\u65b0\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u7684\u989c\u8272\u79cd\u7c7b\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5**\u4ece\u65b0\u8282\u70b9\u5f00\u59cb\u5411\u4e0a\u66f4\u65b0\u8def\u5f84\u4e0a\u6240\u6709\u8282\u70b9\u7684\u989c\u8272\u79cd\u7c7b\u6570**,\u5373\u7528\u6811\u94fe\u90e8\u5206\u5c06\u590d\u6742\u5ea6\u964d\u4f4e\u5230 $O(n \\log n)$\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u4ece\u65b0\u8282\u70b9\u5f00\u59cb\u5411\u4e0a\u904d\u5386\u6bcf\u4e2a\u8282\u70b9\u7684\u7236\u4eb2\uff0c\u5206\u522b\u8bb0\u5f55\u5b83\u4eec\u7684\u513f\u5b50\u8282\u70b9\u4e2d**\u6700\u5927\u7684\u6743\u503c $v_1$** \u548c**\u6b21\u5927\u7684\u6743\u503c $v_2$**\uff0c\u4ee5\u53ca\u5b83\u4eec**\u5c06\u8981\u66f4\u65b0\uff08\u5373\u4e34\u65f6\u8bb0\u5f55\uff09\u7684\u513f\u5b50\u8282\u70b9\u7684\u6700\u5927\u6743\u503c $s$**\uff0c\u7136\u540e\u8ba1\u7b97\u51fa**\u5f53\u524d\u8282\u70b9\u7684\u6743\u503c $w$**\uff1a\n\n$$w = \\max(v_1, v_2 + 1)$$\n\n\u5176\u4e2d $v_1$,$v_2$ \u662f\u5f53\u524d\u8282\u70b9\u7684\u7236\u4eb2\u8282\u70b9\u7684\u513f\u5b50\u8282\u70b9\u7684\u6700\u5927\u6743\u503c\u548c\u6b21\u5927\u6743\u503c\uff0c\u800c $v_2 + 1$ \u662f\u56e0\u4e3a\u5f53\u524d\u8282\u70b9\u548c\u5b83\u7684\u7236\u4eb2\u8282\u70b9\u4e4b\u95f4\u7684\u8fb9\u7684\u989c\u8272\u79cd\u7c7b\u6570\u4e3a $1$\u3002\u5982\u679c\u8ba1\u7b97\u51fa\u6765\u7684 $w$ \u5927\u4e8e\u5f53\u524d\u8282\u70b9\u5c06\u8981\u66f4\u65b0\u7684\u513f\u5b50\u8282\u70b9\u7684\u6700\u5927\u6743\u503c $s$\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u7528 $w$ \u66f4\u65b0 $s$\uff0c\u7136\u540e\u5c06 $s$ \u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u6743\u503c\u3002**\u8fd9\u91cc\u4e4b\u6240\u4ee5\u7528 $s$ \u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u6743\u503c\uff0c\u662f\u56e0\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u6743\u503c\u53ea\u4e0e\u5b83\u7684\u7236\u4eb2\u8282\u70b9\u6709\u5173\uff0c\u800c $s$ \u6b63\u662f\u7236\u4eb2\u8282\u70b9\u5c06\u8981\u66f4\u65b0\u7684\u513f\u5b50\u8282\u70b9\u7684\u6700\u5927\u6743\u503c\u3002**\n### **\u603b\u7ed3**\n\n\n- \u672c\u9898\u51fa\u53d1\u70b9\u5c31\u662f\u5bf9\u4e8e\u6bcf\u6dfb\u52a0 $1$ \u6761\u8fb9\u4f1a\u5bf9\u7b54\u6848\u6709\u600e\u6837\u7684\u8d21\u732e\uff1f\n- \u7b54\u6848\u53c8\u662f\u600e\u6837\u5904\u7406\u51fa\u6765\u7684\uff1f\n- \u5982\u4f55\u627e\u5230\u9012\u63a8\u5173\u7cfb\uff1f\n\n## \u53c2\u8003\u4ee3\u7801\n\n```cpp\n#include<iostream>\nusing namespace std;\ntemplate<typename T>inline void read(T &x){\n\tx=0;T f=1;char ch=getchar();\n\twhile(ch<48||ch>57){if(ch=='-'){f=-1;}ch=getchar();}\n\twhile(ch>=48&&ch<=57){x=x*10+ch-48;ch=getchar();}\n\tx*=f;\n}\ntemplate<typename T>inline void write(T x) {\n    if(x<0) putchar('-'),x=-x;\n    if(x>9) write(x/10);\n    putchar(x%10+48);\n}\nconst int N=1e6+10;\n//first_val\u8868\u793a\u5f53\u524d\u8282\u70b9\u7684\u513f\u5b50\u4e2d\u6700\u5927\u6743\u503c\uff0csecond_val\u8868\u793a\u5f53\u524d\u8282\u70b9\u7684\u513f\u5b50\u4e2d\u6b21\u5927\u6743\u503c\n//son_max\u8868\u793a\u5f53\u524d\u8282\u70b9\u5c06\u8981\u66f4\u65b0\uff08\u5373\u4e34\u65f6\u8bb0\u5f55\uff09\u7684\u513f\u5b50\u7684\u6700\u5927\u6743\u503c\nint n,father[N],son_max[N],first_val[N],second_val[N];\nbool update(int x){\n    //\u6700\u5927\u503c\u66f4\u65b0\n    if(first_val[father[x]]<son_max[x]){\n        second_val[father[x]]=first_val[father[x]];\n        first_val[father[x]]=son_max[x];\n    }\n    //\u6b21\u5927\u503c\u66f4\u65b0\n    else if(second_val[father[x]]<son_max[x]){\n        second_val[father[x]]=son_max[x];\n    }\n    int ans=max(first_val[father[x]],second_val[father[x]]+1);\n    //\u82e5\u7b54\u6848\u4ecd\u76f8\u540c\u4e0d\u66f4\u65b0\n    if(son_max[father[x]]==ans) return 0;\n    son_max[father[x]]=ans;\n    return 1;\n}\nint main(){\n    read(n);n++;son_max[1]=1;\n    for(int i=2;i<=n;i++){\n        read(father[i]);son_max[i]=1;\n        for(int j=i;father[j];j=father[j]){if(!update(j)){break;}}\n        write(first_val[1]);putchar(' ');\n    }\n    return 0;\n}\n```\n",
        "postTime": 1685532269,
        "uid": 828664,
        "name": "Llx2022",
        "ccfLevel": 0,
        "title": "Adam and tree"
    }
]