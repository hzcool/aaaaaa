[
    {
        "content": "\u4e00\u770b\u8fd9\u9898\uff0c\u53ef\u4ee5\u679a\u4e3e\u4e24\u6761\u8def\u5f84\u7684\u4e09\u79cd\u60c5\u51b5\uff0c\u5206\u522b\u8ba1\u7b97\u8def\u5f84\u4ea4\u7684\u957f\u5ea6\u53d6 $\\max$\u3002  \n\n\u6c42\u4e24\u6761\u8def\u5f84\u7684\u4ea4\uff0c\u53ef\u4ee5\u5148\u5728\u6811\u4e0a\u628a\u4e00\u6761\u94fe\u6743\u503c\u53d8\u4e3a $1$\uff0c\u53e6\u4e00\u6761\u94fe\u4e0a\u76f4\u63a5\u67e5\u8be2\u548c\uff0c\u4e4b\u540e\u518d\u53d8\u56de\u53bb\uff0c\u7b80\u5355\u66b4\u529b\u3002\n\n\u7136\u540e\u968f\u4fbf\u7528\u6811\u5256\u4ec0\u4e48\u7684\u7ef4\u62a4\u4e00\u4e0b\u5c31\u884c\u4e86\uff0c\uff0c\u8fd9\u91cc\u5199\u7684\u662f LCT\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\text O(q\\log n)$\u3002\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#define reg register\n#define N 100003\n#define ls son[u][0]\n#define rs son[u][1]\nusing namespace std;\n\ninline void read(int &x){\n\tx = 0;\n\tchar c = getchar();\n\twhile(c<'0'||c>'9') c = getchar();\n\twhile(c>='0'&&c<='9'){\n\t\tx = (x<<3)+(x<<1)+(c^48);\n\t\tc = getchar();\n\t}\n}\n\nint fa[N],son[N][2],st[N],a[N],sum[N],size[N],tag[N];\nbool rev[N];\nint n,q;\n\ninline void pushup(int u){\n    sum[u] = sum[ls]+sum[rs]+a[u];\n    size[u] = size[ls]+size[rs]+1;\n}\n\ninline bool notrt(const int& u){\n    return son[fa[u]][0]==u||son[fa[u]][1]==u;\n}\n\ninline void pushr(const int& u){\n    swap(ls,rs);\n    rev[u] ^= 1;\n}\n\ninline void pushc(const int& u,const int& k){\n    a[u] = tag[u] = k;\n    sum[u] = k==0?0:size[u];\n}\n\ninline void pushdown(const int& u){\n    if(tag[u]!=-1){\n        if(ls) pushc(ls,tag[u]);\n        if(rs) pushc(rs,tag[u]);\n        tag[u] = -1;\n    }\n    if(!rev[u]) return;\n    if(ls) pushr(ls);\n    if(rs) pushr(rs);\n    rev[u] = 0;\n}\n\ninline void rotate(const int& x){\n    int y = fa[x],z = fa[y];\n    int k = son[y][1]==x,w = son[x][k^1];\n    if(notrt(y)) son[z][son[z][1]==y] = x;\n    son[x][k^1] = y;\n    son[y][k] = w;\n    if(w) fa[w] = y;\n    fa[y] = x,fa[x] = z;\n    pushup(y);\n}\n\ninline void splay(const int& x){\n    reg int y = x,z = 0;\n    st[++z] = y;\n    while(notrt(y)) st[++z] = y = fa[y];\n    while(z) pushdown(st[z--]);\n    while(notrt(x)){\n        y = fa[x],z = fa[y];\n        if(notrt(y)) rotate((son[z][1]==y)==(son[y][1]==x)?y:x);\n        rotate(x);\n    }\n    pushup(x);\n}\n\ninline void access(int u){\n    for(reg int v=0;u;u=fa[u]){\n        splay(u),rs = v;\n        pushup(u),v = u;\n    }\n}\n\ninline void makeroot(int u){\n    access(u),splay(u);\n    pushr(u);\n}\n\ninline void link(int u,int v){\n    makeroot(u);\n    fa[u] = v;\n}\n\ninline void split(int u,int v){\n    makeroot(u);\n    access(v),splay(v);\n}\n\ninline int check(int u1,int v1,int u2,int v2){\n    split(u1,v1),pushc(v1,1);\n    split(u2,v2);\n    int res = sum[v2];\n    split(u1,v1),pushc(v1,0);\n    return res;\n}\n\nint main(){\n    int x,y,z,ans;\n    read(n),read(q);\n    for(reg int i=1;i<=n;++i) tag[i] = -1;\n    for(reg int i=2;i<=n;++i){\n        read(x);\n        link(x,i);\n    }\n    while(q--){\n        read(x),read(y),read(z);\n        ans = check(x,y,x,z);\n        ans = max(ans,check(x,y,y,z));\n        ans = max(ans,check(x,z,y,z));\n        printf(\"%d\\n\",ans);\n    }\n\treturn 0;\n}\n```",
        "postTime": 1572418326,
        "uid": 115864,
        "name": "NaCly_Fish",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF832D \u3010Misha, Grisha and Underground\u3011"
    },
    {
        "content": "#### Description\n\n> \u7ed9\u5b9a\u4e00\u68f5\u5927\u5c0f\u4e3a $n$ \u7684\u6811\uff0c\u5e76\u7ed9\u5b9a $q$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u51fa\u70b9 $a,b,c$\uff0c\u53ef\u4ee5\u4ee5\u4e24\u4e2a\u70b9\u4e3a\u8d77\u70b9\uff0c\u4e00\u4e2a\u70b9\u4e3a\u7ec8\u70b9\uff0c\u5f15\u51fa\u4e24\u6761\u8def\u5f84\uff0c\u6c42\u8fd9\u4e24\u6761\u8def\u5f84\u7684\u6700\u5927\u4ea4\u70b9\u4e2a\u6570\u3002\n\n#### Solution\n\nLCA \u6c34\u9898\u3002\u4e0b\u6587\u5b9a\u4e49 $p(a,b)$ \u4e3a\u70b9 $a$ \u5230\u70b9 $b$ \u7684\u8def\u5f84\uff0c$len(p)$ \u4e3a\u8def\u5f84 $p$ \u7684\u957f\u5ea6\u3002\n\n\u9996\u5148\u5047\u8bbe\u6211\u4eec\u4ee5\u70b9 $a,b$ \u4e3a\u8d77\u70b9\uff0c\u70b9 $c$ \u4e3a\u7ec8\u70b9\uff0c\u8ba1\u7b97\u7b54\u6848\uff0c\u4e0d\u96be\u53d1\u73b0\u4f1a\u5b58\u5728\u4e00\u4e2a\u4ea4\u70b9 $d$\uff0c\u5373 $p(a,c)$ \u4e0e $p(b,c)$ \u7684\u4ea4\u70b9\u3002\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u7684\u4e1c\u897f\u5373\u4e3a $len(p(d,c))$\u3002\n\n\u6c42 $d$ \u5e76\u4e0d\u597d\u6c42\uff0c\u4ed6\u6709\u7684\u65f6\u5019\u662f LCA\uff0c\u6709\u7684\u65f6\u5019\u662f\u522b\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u8f6c\u5316\u7b54\u6848\u4e3a $a,b,c$ \u4e09\u4e2a\u70b9\u7684\u8def\u5f84\u957f\u5ea6\u76f8\u52a0\u51cf\uff0c\u56e0\u4e3a\u6c42\u8def\u5f84\u957f\u5ea6\u5f88\u597d\u6c42\uff0c\u7528 LCA \u4f5c\u4e3a\u6865\u6881\u6c42\u5373\u53ef\u3002\n\n\u56e0\u4e3a $p(d,c)$ \u662f $p(a,c)$ \u4e0e $p(b,c)$ \u7684\u91cd\u53e0\u90e8\u5206\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8ba9\u8fd9\u4e24\u6761\u8def\u5f84\u957f\u5ea6\u76f8\u52a0\uff0c\u5373 $len(p(a,c))+len(p(b,c))$\uff0c\u4f46\u8fd9\u6837\u4f1a\u505a\u51fa\u6765\u4e24\u90e8\u5206\uff1a\n\n1. $p(a,d)$\uff0c$p(b,d)$\n2. $p(d,c)$\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u7b2c\u4e00\u90e8\u5206\u521a\u597d\u5c31\u662f $p(a,b)$\uff0c$d$ \u53ea\u662f\u4e00\u4e2a\u4e2d\u4ecb\u70b9\u7684\u4f5c\u7528\u3002\n\n\u7b2c\u4e8c\u90e8\u5206\u521a\u597d\u5c31\u662f\u7b54\u6848\uff0c\u6240\u4ee5\u8981\u6c42\u7684\u8bdd\u76f4\u63a5\u9664\u4ee5 $2$ \u5373\u53ef\u3002\n\n\u6ce8\u610f\u9898\u76ee\u8981\u6c42\u7684\u662f **\u70b9\u6570**\uff0c\u6211\u4eec\u6c42\u7684\u662f **\u8def\u5f84\u957f\u5ea6**\uff0c\u628a\u7b54\u6848\u52a0 $1$ \u5373\u53ef\u3002\n\n\u6240\u4ee5\u6700\u7ec8\u7b54\u6848\u5c31\u662f\uff1a\n\n$$\\dfrac{len(p(a,c))+len(p(b,c))-len(p(a,b))}{2}+1$$\n\n\u9664\u4e86 $a,b$ \u4e3a\u8d77\u70b9\uff0c$c$ \u4e3a\u7ec8\u70b9\u5916\uff0c\u8fd8\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n- $a,c$ \u4e3a\u8d77\u70b9\uff0c$b$ \u4e3a\u7ec8\u70b9\u3002\n- $b,c$ \u4e3a\u8d77\u70b9\uff0c$a$ \u4e3a\u7ec8\u70b9\u3002\n\n\u6240\u4ee5\u7b97\u51fa\u6765\u7b54\u6848\u53d6\u4e2a $\\max$ \u5373\u53ef\u3002\n\n#### Code\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 1e6 + 5;\n\n//\n\nstruct node {\n\tint u, v;\n} e[N];\n\nint cnt;\nint head[N];\n\nvoid AddEdge (int u, int v) {\n\te[++cnt].u = v;\n\te[cnt].v = head[u];\n\thead[u] = cnt;\n}\n\n//\n\nstruct to {\n\tint id; // \u8282\u70b9\u7f16\u53f7 \n\tint dep; // \u8282\u70b9\u6df1\u5ea6 \n\tbool operator < (const to &oth) const {\n\t\treturn dep < oth.dep;\n\t} // \u91cd\u8f7d\u8fd0\u7b97\u7b26 '<'\n} dfn[N], dp[N][20]; // dfs \u5e8f & ST \n\nint dep[N], id[N]; // \u8282\u70b9\u6df1\u5ea6 & \u7b2c\u4e00\u6b21\u51fa\u73b0\u5728 dfs \u5e8f\u7684\u4f4d\u7f6e\nint len; // dfs \u5e8f\u957f\u5ea6\n\nvoid dfs (int cur, int fa) {\n\tdep[cur] = dep[fa] + 1;\n\tdfn[++len] = (to){cur, dep[cur]};\n\tid[cur] = len;\n//\tprintf(\"dfs \u5916\u5c42\uff0ccur = %d\uff0cfa = %d\uff0clen = %d\\n\", cur, fa, len);\n\tfor (int p = head[cur]; p; p = e[p].v) {\n\t\tif (e[p].u == fa) continue;\n//\t\tprintf(\"dfs \u5185\u5c42 1\uff0ccur = %d\uff0cfa = %d\uff0clen = %d\\n\", cur, fa, len);\n\t\tdfs(e[p].u, cur);\n//\t\tprintf(\"dfs \u5185\u5c42 2\uff0ccur = %d\uff0cfa = %d\uff0clen = %d\\n\", cur, fa, len);\n\t\tdfn[++len] = (to){cur, dep[cur]};\n\t}\n} \n\n//\n\nint LCA (int u, int v) {\n\tint l = id[u], r = id[v];\n\tif (l > r) swap(l, r);\n\tint k = log2(r - l + 1);\n\tto tmp = min(dp[l][k], dp[r - (1 << k) + 1][k]);\n\tint ans = tmp.id;\n\treturn ans;\n}\n\nint dist (int u, int v) {\n\tint ans = LCA(u, v);\n\tans = dep[u] - dep[ans] + dep[v] - dep[ans];\n\treturn ans;\n}\n\nint main () {\n\tint n, q;\n\tscanf(\"%d%d\", &n, &q);\n\tint s = 1;\n\tfor (int i = 2, p; i <= n; i++) {\n\t\tscanf(\"%d\", &p);\n\t\tAddEdge(i, p);\n\t\tAddEdge(p, i);\n\t}\n\tdfs(s, 0);\n\tfor (int i = 1; i <= len; i++) dp[i][0] = dfn[i];\n\tfor (int k = 1; (1 << k) <= len; k++)\n\t\tfor (int i = 1; i + (1 << k) - 1 <= len; i++)\n\t\t\tdp[i][k] = min(dp[i][k - 1], dp[i + (1 << (k - 1))][k - 1]);\n\twhile (q--) {\n\t\tint a, b, c;\n\t\tscanf(\"%d%d%d\", &a, &b, &c);\n\t\tint ans1 = (dist(a, c) + dist(b, c) - dist(a, b)) / 2;\n\t\tint ans2 = (dist(a, b) + dist(c, b) - dist(a, c)) / 2;\n\t\tint ans3 = (dist(b, a) + dist(c, a) - dist(b, c)) / 2;\n\t\tprintf(\"%d\\n\", max(ans1, max(ans2, ans3)) + 1);\n\t}\n\treturn 0;\n}\n```\n\n\u4ee3\u7801\u5199\u7684\u662f ST \u8868\u6c42 LCA\u3002",
        "postTime": 1612164092,
        "uid": 114914,
        "name": "\u4e00\u53ea\u4e66\u866b\u4ed4",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF832D \u3010Misha, Grisha and Underground\u3011"
    },
    {
        "content": "#### \u9898\u89e3\uff1a\n\n\u6211\u4eec\u8003\u8651\u5206\u7c7b\u8ba8\u8bba\uff1a\u5206\u4e09\u79cd\u60c5\u51b5\uff0c\u4f9d\u6b21\u679a\u4e3e\u4e09\u4e2a\u70b9\u5206\u522b\u4e3a\u516c\u5171\u70b9\u65f6\uff0c\u8def\u5f84\u7684\u516c\u5171\u8282\u70b9\u6570\u3002\n\n\u4e0d\u59a8\u5148\u6c42\u4ece $a$ \u5230 $b$ \u7684\u8def\u5f84\u4e0e\u4ece $a$ \u5230 $c$ \u7684\u8def\u5f84\u7684\u516c\u5171\u8282\u70b9\u6570\u3002\n\n\u7531\u4e8e\u8fd9\u662f\u4e00\u68f5\u6811\uff0c\u90a3\u4e48\u8fd9\u4e24\u6761\u8def\u5f84\u7684\u516c\u5171\u90e8\u5206\u5fc5\u5b9a\u4e3a $a$ \u5230 $\\operatorname{lca}(b,c)$ \u7684\u8def\u5f84\u3002\n\n\u8def\u5f84\u957f\u5ea6\u5373\u4e3a $\\operatorname{dep}a-\\operatorname{dep}\\operatorname{lca}(b,c)$\u3002\n\n[\u6c42 lca](https://www.luogu.com.cn/problem/P3379)\n\n\u628a\u677f\u5b50\u5957\u4e00\u4e0b\u5c31\u53ef\u4ee5\u5566\u3002\n\n~~\u53ef\u662flca\u662f\u9ec4\u9898~~\n\n\u7a0d\u5fae\u6ce8\u610f\u7684\u5730\u65b9\uff1a\n\n- \u500d\u589e\u6c42 lca \u7684\u8bdd\uff0c\u9884\u5904\u7406\u51fa $\\log$ \u503c\u6570\u7ec4\u4f1a\u5feb\u5f88\u591a\u3002\n\n- ~~\u8fd9\u9053\u9898\u600e\u4e48\u53ef\u80fd\u662f\u7d2b\u7684~~\n\n\n\n~~\u9ad8\u6e05\u65e0\u7801~~\u7684\u4ee3\u7801\uff1a\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=1e5+233;\nstruct Edge{int to,nxt;}e[2*maxn];\nstruct Point{int dep,fa[20];}v[maxn];\nint n,m,x,y,z,cnt,head[maxn],lg[maxn];\nvoid add(int i,int j){\n\te[++cnt].to=j;\n\te[cnt].nxt=head[i];\n\thead[i]=cnt;\n}\nvoid dfs(int u,int fa){\n\tv[u].fa[0]=fa,v[u].dep=v[fa].dep+1;\n    \n\tfor(int i=1;(1<<i)<v[u].dep;i++)\n\t\tv[u].fa[i]=v[v[u].fa[i-1]].fa[i-1];\n    \n\tfor(int i=head[u];i!=-1;i=e[i].nxt)\n\t\tif(e[i].to!=fa)\n\t\t\tdfs(e[i].to,u);\n}\nint lca(int x,int y){\n\tif(v[x].dep<v[y].dep)\n\t\tswap(x,y);\n    \n\twhile(v[x].dep!=v[y].dep)\n\t\tx=v[x].fa[lg[v[x].dep-v[y].dep]];\n    \n\tfor(int i=lg[v[x].dep-1];i>=0;i--)\n\t\tif(v[x].fa[i]!=v[y].fa[i])\n\t\t\tx=v[x].fa[i],y=v[y].fa[i];\n    \n\treturn x==y?x:v[x].fa[0];\n}\nint solve(){\n\tint i=lca(x,y),j=lca(x,z),k=lca(y,z);\n    \n\tint res1=v[z].dep-max(v[j].dep,v[k].dep);\n\tif(j==k)res1+=(v[i].dep-v[k].dep);\n\t\t\n\tint res2=v[y].dep-max(v[i].dep,v[k].dep);\n\tif(k==i)res2+=(v[j].dep-v[i].dep);\n\t\t\n\tint res3=v[x].dep-max(v[j].dep,v[i].dep);\n\tif(i==j)res3+=(v[k].dep-v[j].dep);\n    \n\treturn max(res1,max(res2,res3))+1;\n}\nint main(){\n\tmemset(head,-1,sizeof(head));\n\tcin>>n>>m;\n\tfor(int i=2;i<=n;i++){\n\t\tcin>>x;\n\t\tadd(x,i);\n\t\tadd(i,x);\n\t}\n\tlg[0]=-1;\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tlg[i]=lg[i/2]+1;\n\tv[0].dep=0;\n\tdfs(1,0);\n\tfor(int i=1;i<=m;i++){\n\t\tcin>>x>>y>>z;\n\t\tcout<<solve()<<endl;\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1583934082,
        "uid": 119526,
        "name": "codecode",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF832D \u3010Misha, Grisha and Underground\u3011"
    },
    {
        "content": "# Misha, Grisha and Underground\n\u6709\u4e00\u68f5n\u4e2a\u8282\u70b9\u7684\u6811\uff0c\u4e00\u5171q\u6b21\u8be2\u95ee\n\n\u6bcf\u6b21\u8be2\u95ee\u7ed9\u5b9a3\u4e2a\u70b9\uff0c\u6c42\u4e24\u6761\u8d77\u70b9\u7ec8\u70b9\u5728\u8fd9\u4e09\u4e2a\u70b9\u4e0a\u4e14\u4e0d\u5b8c\u5168\u91cd\u5408\u7684\u8def\u5f84\u7684\u6700\u591a\u516c\u5171\u8282\u70b9\u6570\n## \u5e7f\u544a\u63d2\u5165\n\u5728\u6211\u7684\u535a\u5ba2\u91cc\u770b\u9898\u89e3\u4f7f\u7528\u6548\u679c\u66f4\u4f73\u54e6QwQ\n\n[\u6155\u5bb9\u7433\u7684\u540e\u82b1\u56ed](https://muronglin.top/hgoi-20190512/)\n## \u89e3\u6cd5\nlca\u677f\u5b50\u9898\uff0c\u6c42\u51fa\u4e09\u4e2a\u70b9\u7684lca\u4e4b\u540e\uff0c\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u516c\u5171\u70b9\u7684\u53ef\u80fd\u6027\uff0c\u63a8\u4e00\u4e0b\u5f0f\u5b50\uff0c\u516c\u5171\u8282\u70b9\u6709\u4e24\u79cd\u60c5\u51b5\uff1a(\u516c\u5171\u70b9\u4e3aa\uff0c\u5176\u4ed6\u4e24\u70b9\u4e3ab\u3001c\uff0ci=lca(a,b)\uff0cj=lca(a,c)\uff0ck=lca(b,c))\n\n1\u3001min(a->i,a->j)\u4ea7\u751f\u4e00\u6bb5\u8d21\u732e\n\n2\u3001\u5982\u679ci=j\uff0ck->i\u4ea7\u751f\u4e00\u6bb5\u8d21\u732e\n\n\u81f3\u4e8e\u8d21\u732e\u7684\u7b97\u6cd5\uff0c\u5c31\u662f\u6df1\u5ea6\u7684\u5dee\n## ac\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct p{int to,next;}a[200010];\nstruct point{int dep,fa[20];}po[100010];\nint n,m,head[100010],x,y,z,l=0,lg[100010];\nvoid add(int i,int j){a[++l].to=j,a[l].next=head[i],head[i]=l;}\nvoid dfs(int u,int f)\n{\n    po[u].fa[0]=f,po[u].dep=po[f].dep+1;\n    for(int i=1;(1<<i)<po[u].dep;i++)po[u].fa[i]=po[po[u].fa[i-1]].fa[i-1];\n    for(int i=head[u];i!=-1;i=a[i].next)if(a[i].to!=f)dfs(a[i].to,u);\n}\nint f(int xx,int yy)\n{\n    if(po[xx].dep<po[yy].dep)swap(xx,yy);\n    while(po[xx].dep!=po[yy].dep)xx=po[xx].fa[lg[po[xx].dep-po[yy].dep]];\n    for(int i=lg[po[xx].dep-1];i>=0;i--)if(po[xx].fa[i]!=po[yy].fa[i])xx=po[xx].fa[i],yy=po[yy].fa[i];\n    return xx==yy?xx:po[xx].fa[0];\n}\nint calc()\n{\n\tint i=f(x,y),j=f(x,z),k=f(y,z),ans=0;\n\tans=max(ans,po[z].dep-max(po[j].dep,po[k].dep)+(j==k?po[i].dep-po[j].dep:0));\n\tans=max(ans,po[y].dep-max(po[i].dep,po[k].dep)+(i==k?po[j].dep-po[i].dep:0));\n\tans=max(ans,po[x].dep-max(po[j].dep,po[i].dep)+(j==i?po[k].dep-po[j].dep:0));\n\treturn ans+1;\n}\nint main()\n{\n    memset(head,-1,sizeof(head)),scanf(\"%d%d\",&n,&m);\n    for(int i=2;i<=n;i++)scanf(\"%d\",&x),add(x,i),add(i,x),lg[i]=log2(i);\n    lg[1]=log2(1),po[0].dep=0,dfs(1,0);\n    for(int i=1;i<=m;i++)scanf(\"%d%d%d\",&x,&y,&z),printf(\"%d\\n\",calc());\n}\n```",
        "postTime": 1557631692,
        "uid": 24663,
        "name": "\u6ce0\u5c0f\u6bd2",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF832D \u3010Misha, Grisha and Underground\u3011"
    },
    {
        "content": "\u7b80\u5355LCA\u6c42\u8ddd\u79bb\uff0c\u4ee4a\u4e3a\u6c47\u5408\u70b9\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f`(dis(a,b) + dis(a,c) - dis(b,c)) / 2 + 1`\uff0cdis\u7528lca\u6c42\u51fa\uff0c\u679a\u4e3ea\u5c31\u597d\u3002\n\n\u5f53\u7136\u4e5f\u53ef\u4ee5\u4e00\u4e00\u8ba8\u8bbaabc\u7684\u4f4d\u7f6e\u5173\u7cfb\uff0c\u4e0d\u8fc7\u5bb9\u6613\u51fa\u9519\u3002\n\n```cpp\n#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nconst int MAXN = 100010;\nconst int INF = 0x3f3f3f3f;\n\nclass LFS {\n   public:\n    LFS() {\n        memset(head, -1, sizeof head);\n        ecnt = 0;\n        n = 0;\n    }\n    LFS(int N) {\n        memset(head, -1, sizeof head);\n        ecnt = 0;\n        n = N;\n    }\n    void adde(int from, int to, int w) {\n        e[ecnt].to = to;\n        e[ecnt].w = w;\n        e[ecnt].next = head[from];\n        head[from] = ecnt++;\n    }\n    void addde(int a, int b, int w) {\n        adde(a, b, w);\n        adde(b, a, w);\n    }\n\n   protected:\n    struct Edge {\n        int to, next, w;\n    } e[MAXN * 2];\n    int head[MAXN];\n    int ecnt;\n    int n;\n\n   private:\n    virtual void dfs(int u, int fa) {\n        for (int i = head[u]; i != -1; i = e[i].next) {\n            int v = e[i].to;\n            if (v != fa) {\n                dfs(v, u);\n            }\n        }\n    }\n};\n\nclass LCA : public LFS{\n   public:\n   \tint dep[MAXN];\n    LCA(int n) : LFS(n) {\n        memset(dep, -1, sizeof dep);\n    }\n    void pre(int rt = 1) { dfs(rt, 1, 0); }\n    int querylca(int a, int b) {\n        if (dep[a] > dep[b]) swap(a, b);\n        int h = dep[b] - dep[a];\n        for (int i = 20; i >= 0; i--) {\n            if(h & (1 << i)) {\n\t\t\t\tb = f[b][i];\n\t\t\t}\n        }\n        if (a == b) return a;\n        for (int i = 20; i >= 0; i--) {\n            if (f[a][i] == f[b][i]) continue;\n            a = f[a][i];\n            b = f[b][i];\n        }\n        return f[a][0];\n    }\n    \n    int querydis(int a,int b){\n    \tint lca = querylca(a,b);\n    \treturn dep[a] + dep[b] - dep[lca]*2;\n    }\n\n   protected:\n    int f[MAXN][22];\n\n   private:\n    void dfs(int u, int d, int fa) {\n        dep[u] = d;\n        f[u][0] = fa;\n        for (int i = 1; i < 21; i++) {\n            f[u][i] = f[f[u][i - 1]][i - 1];\n        }\n        for (int i = head[u]; i != -1; i = e[i].next) {\n            int v = e[i].to;\n            if (dep[v] == -1) {\n                dfs(v, d + 1, u);\n            }\n        }\n    }\n};\n\n#include <cctype>\n#include <cstdio>\n\ninline int read() {\n    int X = 0, w = 0;\n    char ch = 0;\n    while (!isdigit(ch)) {\n        w |= ch == '-';\n        ch = getchar();\n    }\n    while (isdigit(ch)) {\n        X = (X << 3) + (X << 1) + (ch ^ 48);\n        ch = getchar();\n    }\n    return w ? -X : X;\n}\n\nint solve(LCA* tree,int a,int b,int c){\n\tint disab = tree->querydis(a,b);\n\tint disac = tree->querydis(a,c);\n\tint disbc = tree->querydis(b,c);\n\treturn (disab + disac - disbc) / 2 + 1;\n}\n\nint main(){\n\tint n,q;\n\tcin >> n >> q;\n\tLCA* tree = new LCA(n);\n\tfor(int i = 2;i<=n;i++){\n\t\tint a;\n\t\tcin >> a;\n\t\ttree->addde(i,a,1);\n\t}\n\ttree->pre();\n\tfor(int i = 1;i<=q;i++){\n\t\tint a,b,c;\n\t\tcin >> a >> b >> c;\n\t\tint ans = 0;\n\t\tans = max(solve(tree,a,b,c),max(solve(tree,b,a,c),solve(tree,c,a,b)));\n\t\tcout << ans << endl;\n\t}\n}\n```",
        "postTime": 1552650606,
        "uid": 48256,
        "name": "duanyll",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF832D \u3010Misha, Grisha and Underground\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://codeforces.com/contest/832/problem/D)\n\n[\u53ef\u80fd\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/1358id/p/14725896.html)\n# Description\n\u7ed9\u5b9a\u4e00\u68f5\u6811\u4e0a\u7684\u4e09\u4e2a\u70b9 $a,b,c$\uff0c\u4f60\u8981\u5236\u5b9a\u4e24\u6761\u8d77\u70b9\u548c\u7ec8\u70b9\u90fd\u5728\u8fd9\u4e09\u4e2a\u70b9\u4e2d\u7684\u8def\u5f84\uff0c\u4f7f\u5f97\u4e24\u6761\u8def\u5f84\u91cd\u53e0\u7684\u8282\u70b9\u6700\u591a\u3002\n# Solution\n~~\u611f\u89c9\u6211\u7684\u65b9\u6cd5\u548c\u5927\u4f17\u4e0d\u540c\uff0c\u663e\u7136\u662f\u73c2\u4ee5Hack\u7684~~\n\n\u8003\u8651\u5206\u7c7b\u8ba8\u8bba\uff0c\u5206\u4e09\u7c7b\uff1a\n1. $a$ \u70b9\u5728\u8fd9\u4e24\u6761\u8def\u5f84\u7684\u8d77\u6b62\u70b9\u4e2d\u51fa\u73b0 $2$ \u6b21\u3002\n1. $b$ \u70b9\u5728\u8fd9\u4e24\u6761\u8def\u5f84\u7684\u8d77\u6b62\u70b9\u4e2d\u51fa\u73b0 $2$ \u6b21\u3002\n1. $c$ \u70b9\u5728\u8fd9\u4e24\u6761\u8def\u5f84\u7684\u8d77\u6b62\u70b9\u4e2d\u51fa\u73b0 $2$ \u6b21\u3002\n\n\u4e0b\u9762\u53ea\u5206\u6790\u4e00\u7c7b\uff0c\u5373 $a$ \u51fa\u73b0\u4e24\u6b21\uff08\u5176\u5b9e\u90fd\u4e00\u6837\u7684\uff09\u3002\n![](https://cdn.luogu.com.cn/upload/image_hosting/rl0g2fwv.png)\n\u5982\u56fe\uff0c\u8fd9\u65f6 $\\operatorname{LCA}(b,c)$ **\u4e0d\u5728** $a$ \u5230 $b$ \u7684\u7b80\u5355\u8def\u5f84\u4e0a\u6216$\\operatorname{LCA}(b,c)$ **\u4e0d\u5728** $a$ \u5230 $c$ \u7684\u7b80\u5355\u8def\u5f84\u4e0a\u3002\n\n\u8fd9\u5c31\u662f\u8bf4\uff0c $\\operatorname{LCA}(b,c)$ \u4e0d\u4f1a\u88ab\u91cd\u590d\u8d70\u8fc7\u3002\n\n\u90a3\u4e48\u7b54\u6848\u5c31\u662f $\\operatorname{dis}(a,\\operatorname{LCA}(a,c))$ \u548c $\\operatorname{dis}(a,\\operatorname{LCA}(a,b))$ \u4e2d\u7684\u6700\u5c0f\u503c\u3002\uff08\u8fd9\u4e2a\u7406\u89e3\u8d77\u6765\u4e0d\u96be\uff09\n![](https://cdn.luogu.com.cn/upload/image_hosting/rb474e11.png)\n\u5982\u56fe\uff0c\u8fd9\u65f6 $\\operatorname{LCA}(b,c)$ **\u5728** $a$ \u5230 $b$ \u7684\u7b80\u5355\u8def\u5f84\u4e0a\u4e14$\\operatorname{LCA}(b,c)$ **\u5728** $a$ \u5230 $c$ \u7684\u7b80\u5355\u8def\u5f84\u4e0a\u3002\n\u8fd9\u5c31\u662f\u8bf4\uff0c $\\operatorname{LCA}(b,c)$ \u4f1a\u88ab\u91cd\u590d\u8d70\u8fc7\u3002\n\n\u90a3\u4e48\u7b54\u6848\u5c31\u662f $\\operatorname{dis}(a,\\operatorname{LCA}(b,c))$ \u3002\uff08\u8fd9\u4e2a\u7406\u89e3\u8d77\u6765\u66f4\u4e0d\u96be\uff09\n\n\u7136\u540e\u8fd9\u9898\u5c31\u6109\u5feb\u5730\u505a\u5b8c\u4e86\u3002\n# Code\n```cpp\nstruct Edge {\n  int to, nxt, val;\n} e[1000010];\nint n, q, cnt, head[1000010], fath[1000010][22], dep[1000010], s, lg[500010];\nvoid add(int u, int v, int val) {\n  e[++cnt].to = v;\n  e[cnt].nxt = head[u];\n  e[cnt].val = val;\n  head[u] = cnt;\n}\nvoid dfs(int now, int fa) {\n  dep[now] = dep[fa] + 1;\n  fath[now][0] = fa;\n  rep(i, 1, lg[dep[now]]) fath[now][i] = fath[fath[now][i - 1]][i - 1];\n  for(int i = head[now]; i; i = e[i].nxt) if(e[i].to != fa) dfs(e[i].to, now);\n}\nint lca(int x, int y) {\n  if(dep[x] < dep[y]) swap(x, y);\n  while(dep[x] > dep[y]) x = fath[x][lg[dep[x] - dep[y]] - 1];\n  if(x == y) return x;\n  nrep(i, lg[dep[x]] - 1, 0) if(fath[x][i] != fath[y][i]) x = fath[x][i], y = fath[y][i];\n  return fath[x][0];\n}\nint abs(int x) { return x < 0 ? -x : x; }\nint dis(int x, int y) {\n\tint l = lca(x, y);\n\treturn abs(dep[l] - dep[x]) + abs(dep[l] - dep[y]);\n}\nint check(int a, int b, int c) {\n\tif(dis(a, c) + dis(b, c) == dis(a, b)) return 1;\n\treturn 0;\n}\nint solve(int a, int b, int c) {\n  if(check(a, b, lca(b, c)) && check(a, c, lca(b, c))) return dis(a, lca(b, c));\n  return min(dis(a, lca(a, b)), dis(a, lca(a, c))); \n}\nint main() {\n  read(n), read(q);\n  rep(i, 2, n) {\n    int x;\n    read(x);\n    add(x, i, 1), add(i, x, 1);\n  }\n  rep(i, 1, n) lg[i] = lg[i - 1] + (1 << lg[i - 1] == i);\n  dfs(1, 0);\n  rep(i, 1, q) {\n    int x, y, z;\n    read(x), read(y), read(z);\n    int ans = max(solve(x, y, z), max(solve(y, x, z), solve(z, x, y)));\n    printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n```",
        "postTime": 1619943909,
        "uid": 222865,
        "name": "\u8fdf\u66ae\u5929\u590d\u660e",
        "ccfLevel": 6,
        "title": "\u9898\u89e3CF832D"
    },
    {
        "content": "\u63d0\u4f9b\u4e86\u4e00\u79cd\u5206\u7c7b\u8ba8\u8bba\u4e4b\u540e\u5f97\u5230\u7684\u901a\u89e3\uff0c\u4e0d\u7528\u5728\u4ee3\u7801\u91cc\u5206\u7c7b\u8ba8\u8bba\u4e86\u3002\n\n\u9996\u5148\u6211\u4eec\u77e5\u9053\u4e09\u4e2a\u70b9\u4e24\u4e24\u6c42 LCA\uff0c\u81f3\u591a\u6709\u4e24\u4e2a\u4e0d\u540c\u7684LCA\u3002\u677f\u5b50\u9898[P4281](https://www.luogu.com.cn/problem/P4281).\n\n\u5982\u679cLCA\u5168\u76f8\u540c\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f\u4e09\u4e2a\u70b9\u5230LCA\u7684\u8ddd\u79bb\u53d6\u6700\u5927\u503c\uff0c\u8fd9\u4e2a\u753b\u4e2a\u56fe\u5f88\u597d\u7406\u89e3\u3002\n\n\u5982\u679c\u6709\u4e24\u4e2a\u4e0d\u540cLCA\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f\u4e09\u4e2a\u70b9\u5230**\u6df1\u5ea6\u66f4\u5927**\u7684\u90a3\u4e2aLCA\u7684\u8ddd\u79bb\u53d6\u6700\u5927\u503c\u3002\n\n\u611f\u6027\u7406\u89e3\u5c31\u662f\uff0c\u4e24\u4e2a\u70b9\u5fc5\u7136\u8981\u5728\u90a3\u4e2aLCA\u4ea4\u6c47\u7136\u540e\u4e00\u8d77\u8d70\u5411\u53e6\u4e00\u4e2a\u70b9\uff0c\u8981\u8bc1\u660e\u7684\u8bdd\uff0c\u5206\u7c7b\u8ba8\u8bba\u4e5f\u662f\u5f88\u5bb9\u6613\u7684\u3002\n\n\u6240\u4ee5\u53d6\u6df1\u5ea6\u6700\u6df1\u7684\u90a3\u4e2a LCA \u6765\u8ba1\u7b97\u7b54\u6848\u5c31\u884c\u4e86\u3002\n\ncode\uff1a\n\n```cpp\n#define N 100010\n#define ri register int\nint n,q,x,y,head[N],wl,dep[N],f[N][18],a,b,c;\nstruct node{\n    int nxt,to;\n}star[N<<1];\ninline void add(int from,int to){\n    wl++;\n    star[wl].to=to;\n    star[wl].nxt=head[from];\n    head[from]=wl;\n}\ninline void dfs(int x,int fa){\n    dep[x]=dep[fa]+1;f[x][0]=fa;\n    for(ri j=1;j<=17;++j) f[x][j]=f[f[x][j-1]][j-1];\n    for(ri i=head[x];i;i=star[i].nxt){\n        int u=star[i].to;if(u==fa) continue;\n        dfs(u,x);\n    }\n}\ninline int get_lca(int x,int y){\n    if(dep[x]<dep[y]) swap(x,y);\n    int t=dep[x]-dep[y];\n    for(ri i=0;i<=17;++i) if(t&(1<<i)) x=f[x][i];if(x==y) return x;\n    for(ri i=17;i>=0;--i) if(f[x][i]!=f[y][i]) x=f[x][i],y=f[y][i];\n    return f[x][0];\n}\ninline int get_dis(int x,int y){return dep[x]+dep[y]-2*dep[get_lca(x,y)];}\nint main(){\n    cin>>n>>q;\n    for(ri i=2;i<=n;++i) cin>>x,add(x,i),add(i,x);\n    dfs(1,0);\n    while(q--){\n        cin>>a>>b>>c;\n        int lca1=get_lca(a,b),lca2=get_lca(b,c),lca3=get_lca(a,c),tar;\n        if(lca1==lca2){\n            if(dep[lca1]<dep[lca3]) tar=lca3;\n            else tar=lca1;\n        }\n        else{\n            if(dep[lca1]<dep[lca2]) tar=lca2;\n            else tar=lca1;\n        }\n        cout<<max(get_dis(tar,a),max(get_dis(tar,b),get_dis(tar,c)))+1<<endl;//\u6c42\u7ecf\u8fc7\u70b9\u6570\uff0c\u6240\u4ee5+1\n    }\n    return 0;\n}\n```\n",
        "postTime": 1612415598,
        "uid": 135839,
        "name": "Fairicle",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF832D \u3010Misha, Grisha and Underground\u3011"
    }
]