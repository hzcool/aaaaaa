[
    {
        "content": "[CF\u9898\u9762\u4f20\u9001\u95e8](https://codeforces.com/contest/1399/problem/D) [\u6d1b\u8c37\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1399D) [\u535a\u5ba2\u98df\u7528\u66f4\u4f73](https://www.luogu.com.cn/blog/b6e0/tijie-CF1399D)\n\n## 8.10\u66f4\u65b0 LaTeX\u3001\u82f1\u6587\u548c\u4e2d\u6587\u4e4b\u95f4\u52a0\u4e86\u7a7a\u683c\n\n\u53d1\u73b0\u597d\u591a\u5927\u4f6c\u90fd\u505a\u590d\u6742\u4e86\u3002\n\n\u9996\u5148\u8d2a\u5fc3\uff1a\u8981\u8ba9 $k$ \u6700\u5c0f\uff0c\u90a3\u4e48\u5f53\u524d\u7684\u5b57\u7b26\u8981\u5c3d\u53ef\u80fd\u5730\u8ddf\u5728\u524d\u9762\u7684\u5b57\u7b26\u4e32\u5185\u800c\u4e0d\u662f\u65b0\u5f00\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6bcf\u626b\u5230\u4e00\u4e2a\u5b57\u7b26\u5c31\u626b\u63cf\u524d\u9762\u521b\u5efa\u51fa\u6765\u7684\u5b57\u7b26\u4e32\uff0c\u770b\u770b\u80fd\u4e0d\u80fd\u8ddf\u5728\u5b83\u4eec\u540e\u9762\uff0c\u4e0d\u80fd\u5c31\u65b0\u5f00\u4e00\u4e2a\uff0c\u7d2f\u52a0\u7b54\u6848\u3002\u53ef\u662f\u8fd9\u79cd\u505a\u6cd5\u4f1a TLE\uff0c\u5047\u5982\u8f93\u5165\u7684\u662f\u4e00\u4e2a\u5168 $0$ \u6216\u5168 $1$ \u7684\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f $O(n^2)$ \u7684\uff0c\u65e0\u6cd5\u627f\u53d7\u3002\n\n\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u7ed3\u5c3e\u53ea\u6709 $0$ \u548c $1$ \u4e24\u79cd\u53ef\u80fd\u3002\u6211\u4eec\u53ef\u4ee5\u5f00\u4e00\u4e2a `vector` \u6570\u7ec4 $p$\uff0c$p_i$ \u8868\u793a\u7ed3\u5c3e\u4e3a$i$\u7684\u5b57\u7b26\u4e32\u6709\u54ea\u4e9b\u3002\u6bcf\u626b\u5230\u4e00\u4e2a\u5b57\u7b26\u5c31\u53bb\u5b83\u5e0c\u671b\u5b57\u7b26\u7684 `vector` \u91cc\u9762\u53d6\u4e00\u4e2a\uff0c\u5220\u9664\uff0c\u5728\u53e6\u4e00\u4e2a `vector` \u4e2d\u52a0\u5165\u5b83\u3002\u7531\u4e8e `vector` \u53ea\u65b9\u4fbf\u5feb\u901f\u5220\u9664\u7ed3\u5c3e\uff0c\u6240\u4ee5\u53d6\u6700\u540e\u9762\u4e00\u4e2a\u3002\u5982\u679c\u627e\u4e0d\u5230\uff08\u4e3a\u7a7a\uff09\uff0c\u5c31\u65b0\u5f00\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u7d2f\u52a0\u7b54\u6848\u3002\n\n\u5176\u5b9e\u4e5f\u53ef\u4ee5\u7528\u6808\u6216\u8005\u961f\u5217\u6765\u5b9e\u73b0\u3002\n\n\u5177\u4f53\u7ec6\u8282\u770b\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nint be[200010];//\u5c5e\u4e8e\u54ea\u4e2a\u5b57\u7b26\u4e32\nsigned main()\n{\n    int t,n,i,ans;\n    string s;\n    cin>>t;\n    while(t--)\n    {\n        cin>>n>>s;\n        ans=1;\n        vector<int>p[2];\n        p[s[0]-'0'].push_back(1);\n        be[0]=1;//\u7b2c\u4e00\u4e2a\u5b57\u7b26\n        for(i=1;i<n;i++)\n        {\n            int tar=(s[i]-'0')^1;//\u5e0c\u671b\u8981\u7684\u7ed3\u5c3e\n            if(p[tar].empty())//\u627e\u4e0d\u5230\n            {\n                be[i]=++ans;\n                p[tar^1].push_back(ans);\n            }\n            else\n            {\n                int tmp=p[tar][p[tar].size()-1];//\u53d6\u6700\u540e\u4e00\u4e2a\n                be[i]=tmp;\n                p[tar].pop_back();\n                p[tar^1].push_back(tmp);\n            }\n        }\n        cout<<ans<<endl;\n        for(i=0;i<n;i++)\n            cout<<be[i]<<' ';\n        cout<<endl;\n    }\n    return 0;\n}\n```\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n)$\u3002",
        "postTime": 1597042294,
        "uid": 150522,
        "name": "b6e0_",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1399D \u3010Binary String To Subsequences\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\u628a\u4e00\u4e2a 01 \u4e32\u5212\u5206\u6210\u82e5\u5e72\u4e2a 01 \u4ea4\u66ff\u7684\u5b50\u5e8f\u5217\uff0c\u6c42\u6700\u5c0f\u5212\u5206\u6570\u91cf\u5e76\u7ed9\u51fa\u4efb\u610f\u4e00\u7ec4\u5408\u6cd5\u5212\u5206\n\n\u9996\u5148\u6211\u4eec\u8003\u8651\u5230\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\uff0c\u6211\u4eec\u5e76\u4e0d\u5173\u5fc3\u6bcf\u4e00\u4f4d\u5c5e\u4e8e\u54ea\u4e00\u4e2a\u5b50\u5e8f\u5217\uff0c\u6211\u4eec\u53ea\u662f\u5173\u5fc3\u8fd9\u4e00\u4f4d\u662f\u5426\u53ef\u4ee5\u88ab\u5212\u5206\u8fdb\u524d\u9762\u7684\u5b50\u5e8f\u5217\u4e2d\n\n\u663e\u7136\uff0c\u6bcf\u4e00\u4f4d 0 \u53ef\u4ee5\u5339\u914d\u5728\u5b83\u524d\u9762\u7684\u4efb\u610f\u4e00\u4e2a\u6ca1\u6709\u88ab\u5339\u914d\u76841\uff0c\u6bcf\u4e00\u4f4d 1 \u53ef\u4ee5\u5339\u914d\u5728\u5b83\u524d\u9762\u7684\u4efb\u610f\u4e00\u4e2a\u6ca1\u6709\u88ab\u5339\u914d\u7684 0\uff0c\u6bcf\u4e00\u4f4d\u90fd\u53ea\u80fd\u88ab\u5339\u914d 1 \u6b21\n\n\u6211\u4eec\u5728\u5b9e\u73b0\u65f6\u53ea\u8981\u627e\u5230\u8ddd\u79bb\u5f53\u524d\u4f4d\u6700\u8fd1\u7684\u5408\u6cd5\u5339\u914d\u5373\u53ef\n\n\u8003\u8651\u7ef4\u62a4\u6bcf\u4e00\u4f4d\u7684\u524d\u7f00 $pre_{0/1}$\uff0c\u8868\u793a\u8fd9\u4e00\u4f4d\u7684\u6392\u5728\u5b83\u524d\u9762\u4e14\u6700\u63a5\u8fd1\u5f53\u524d\u4f4d\u7684 $0/1$ \u7684\u4f4d\u7f6e\uff0c\u53e6\u5916\u5f00\u4e00\u4e2a $vis$ \u6570\u7ec4\u6765\u8bb0\u5f55\u5f53\u524d\u4f4d\u662f\u5426\u88ab\u5339\u914d\u8fc7\n\n\u5339\u914d\u65f6\u76f4\u63a5\u67e5\u627e $pre$ \u6570\u7ec4\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u4e3a\u88ab\u5339\u914d\u7684\u4f4d\u5373\u53ef\n\n\u4e0d\u8fc7\u8fd9\u6837\u505a\u9047\u5230\u6574\u4e2a\u5e8f\u5217\u5168\u662f 0 \u6216 1 \u60c5\u51b5\u4f1a\u88ab\u5361\u6210 $O(n^2)$ \u65e0\u6cd5\u901a\u8fc7\n\n\u8fd9\u65f6\u6211\u4eec\u53ef\u4ee5\u52a0\u4e00\u4e2a\u7c7b\u4f3c\u5e76\u67e5\u96c6\u8def\u5f84\u538b\u7f29\u7684\u4f18\u5316\uff0c\u5728\u67e5\u627e\u65f6\u66f4\u65b0 $pre$ \u6570\u7ec4\uff0c\u8ba9\u5176\u6307\u5411\u524d\u4e00\u4e2a**\u672a\u88ab\u5339\u914d**\u7684\u8282\u70b9\uff0c\u8fd9\u6837\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint t,n,a[200001],ans[200001],sum,pre[200001][2],lst[2],num[200001],cnt;\nbool vis[200001];\nvoid print(int x)\n{\n    if(x>=10)\n        print(x/10);\n    putchar(x%10+'0');\n}\nint find(int k,int f)\n{\n    if(!k)\n        return 0;\n    if(!vis[k])\n    {\n        vis[k]=1;\n        return k;\n    }\n    return pre[k][f]=find(pre[k][f],f);\n}\nint main()\n{\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d\",&n);\n        lst[0]=lst[1]=0;\n        sum=n;\n        cnt=0;\n        for(register int i=1;i<=n;++i)\n        {\n            char c=getchar();\n            while(c!='0'&&c!='1')\n                c=getchar();\n            a[i]=c-'0';\n            pre[i][a[i]^1]=lst[a[i]^1];\n            pre[i][a[i]]=lst[a[i]];\n            lst[a[i]]=i;\n            ans[i]=i;\n        }\n        for(register int i=2;i<=n;++i)\n        {\n            int node=find(pre[i][a[i]^1],a[i]^1);\n            if(node)\n            {\n                --sum;\n                ans[i]=ans[node];\n            }\n        }\n        print(sum);\n        puts(\"\");\n        for(register int i=1;i<=n;++i)\n        {\n            pre[i][0]=pre[i][1]=vis[i]=0;\n            if(!num[ans[i]])\n                num[ans[i]]=++cnt;\n            print(num[ans[i]]);\n            putchar(' ');\n        }\n        for(register int i=1;i<=n;++i)\n            num[i]=0;\n        puts(\"\");\n    }\n    return 0;\n}\n```\n",
        "postTime": 1597042591,
        "uid": 85682,
        "name": "\u7edd\u9876\u6211\u4e3a\u5cf0",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1399D \u3010Binary String To Subsequences\u3011"
    },
    {
        "content": "\u7531\u4e8e\u8981\u6c42\u6700\u540e\u7684\u5b50\u5e8f\u5217\u662f\u4e00\u4e2a $0,1$ \u4ea4\u66ff\u51fa\u73b0\u7684\u4e32\uff0c\u4e00\u4e2a\u5f88\u81ea\u7136\u7684\u60f3\u6cd5\u662f\u679a\u4e3e\u6bcf\u4e2a\u5143\u7d20\u5c5e\u4e8e\u54ea\u4e2a\u5b50\u5e8f\u5217\u3002\n\n\u8003\u8651\u4e00\u4e2a\u5b50\u5e8f\u5217\uff0c\u5b83\u7684\u6700\u540e\u4e00\u4f4d\u662f $0$ \u3002\u90a3\u4e48\u663e\u7136\u5b83\u7684\u4e0b\u4e00\u4f4d\u53ea\u80fd\u662f $1$ \u3002\u8fd9\u6709\u70b9\u50cf\u7eb8\u724c\u6e38\u620f\uff1a\u9ed1 $6$ \u53ea\u80fd\u63a5\u5728\u7ea2 $7$ \u4e0a\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u82e5\u5e72\u4e2a vector \uff0c\u6765\u5b58\u50a8\u6bcf\u4e2a\u5b50\u5e8f\u5217\u3002\n\n\u5bf9\u4e8e\u7b2c $i$ \u4e2a\u5143\u7d20\uff0c\u6211\u4eec\u5728\u6240\u6709 vector \u4e2d\u627e\u4e00\u4e2a\u80fd\u8ba9\u7b2c $i$ \u4e2a\u5143\u7d20\u63a5\u4e0a\u53bb\u7684\u5e8f\u5217\uff0c\u5c06\u5b83\u63a5\u4e0a\u53bb\u3002\u5982\u679c\u627e\u4e0d\u5230\uff0c\u6211\u4eec\u5c31\u53ea\u80fd\u4e3a\u5b83\u5355\u72ec\u5f00\u4e00\u4e2a\u5e8f\u5217\u4e86\u3002\n\n\u7136\u540e\u60a8\u4fe1\u5fc3\u6ee1\u6ee1\u7684\u4ea4\u4e86\u4e0a\u53bb\uff0c\u7136\u540e `Time limit exceeded on test 4`\n\n~~\u4e5f\u8bb8\u60a8\u662f\u6b27\u7687\u6ca1 T \uff0c\u53cd\u6b63\u6211\u662f T \u4e86\u7684\u3002~~\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n\u8003\u8651\u8fd9\u6837\u4e00\u7ec4\u6570\u636e\uff1a\n\n```\n6\n111111\n```\n\n\u6309\u7167\u6211\u4eec\u7684\u505a\u6cd5\uff0c\u6bcf\u4e2a\u5b57\u7b26\u90fd\u5f97\u679a\u4e3e\u4e00\u904d\u6240\u6709\u5e8f\u5217\uff0c\u6700\u540e\u65b0\u5f00\u4e00\u4e2a\u5e8f\u5217\u3002\u5982\u679c\u6574\u4e2a\u5b57\u7b26\u4e32\u5168\u90e8\u90fd\u662f $0$ \u6216 $1$ \uff0c\u90a3\u6211\u4eec\u7684\u505a\u6cd5\u5c31\u76f8\u5f53\u4e8e\u662f\u4e2a $O(n^2)$ \u7684\u505a\u6cd5\u3002\u7136\u540e $1\\le n\\le 2\\times 10^5$ \u2026\u2026~~\u60a8\u89c9\u5f97\u60a8\u80fd $n^2$ \u8fc7\u5341\u4e07\u656c\u8bf7\u5c1d\u8bd5~~\n\n\u600e\u4e48\u4f18\u5316\u5462\uff1f\n\n\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e\u6bcf\u4e2a\u5b57\u7b26\uff0c\u6211\u4eec\u5b9e\u9645\u4e0a\u53ea\u60f3\u77e5\u9053\u6709\u6ca1\u6709\u4e00\u4e2a\u80fd\u8ba9\u5b83\u63a5\u4e0a\u53bb\u7684\u5e8f\u5217\u3002\u5982\u679c\u679a\u4e3e\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u5c06\u505a\u5927\u91cf\u65e0\u7528\u529f\u3002\u80fd\u5426\u5c06\u8fd9\u90e8\u5206\u7684\u65f6\u95f4\u8282\u7701\u4e0b\u6765\uff1f\n\n\u5f53\u7136\u662f\u53ef\u4ee5\u7684\u3002\u6211\u4eec\u7ef4\u62a4\u4e00\u4e0b\u5f53\u524d\u6709\u54ea\u4e9b\u5e8f\u5217\u4ee5 $0$ \u7ed3\u5c3e\uff0c\u54ea\u4e9b\u5e8f\u5217\u4ee5 $1$ \u7ed3\u5c3e\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u5143\u7d20\uff0c\u6211\u4eec\u76f4\u63a5\u770b\u5b83\u8981\u63a5\u4e0a\u7684\u5e8f\u5217\u662f\u5426\u5b58\u5728\u5c31\u597d\u4e86\uff1a\n\n- \u5b58\u5728\uff0c\u63a5\u4e0a\u53bb\uff1b\n\n- \u4e0d\u5b58\u5728\uff0c\u65b0\u5f00\u4e00\u4e2a\u3002\n\n\u81f3\u4e8e\u600e\u4e48\u7ef4\u62a4\u54ea\u4e9b\u5e8f\u5217\u4ee5 $0$ \u7ed3\u5c3e\uff0c\u54ea\u4e9b\u5e8f\u5217\u4ee5 $1$ \u7ed3\u5c3e\uff0c\u76f4\u63a5\u5404\u5f00\u4e00\u4e2a\u961f\u5217\u5b58\u50a8\u5e8f\u5217\u7684\u7f16\u53f7\u5c31\u53ef\u4ee5\u4e86\u3002~~\u4f46\u662f\u6211\u56e0\u4e3a\u8d2a\u56fe\u5c11\u6253\u51e0\u4e2a\u5b57\u7b26\uff0c\u5f00\u4e86\u4e24\u4e2a\u5806\uff0c\u7ed3\u679c\u662f\u591a\u5e26\u4e86\u4e00\u4e2a $log$ \u3002~~\n\n```cpp\n#include <bits/stdc++.h>\n#define min(x,y) ((y)^(((x)^(y))&(-((x)<(y)))))\n#define max(x,y) ((x)^(((x)^(y))&(-((x)<(y)))))\nusing namespace std;\nint t,n,cnt[200005];\nstring s;\npriority_queue<int,vector<int>,greater<int> > p,q;\nint main(){\n    ios::sync_with_stdio(false);\n    cin.tie(0),cout.tie(0);\n    cin>>t;\n    while(t--){\n        cin>>n>>s;\n        int k=1;cnt[0]=1;\n        if(s[0]=='0')q.push(1);//\u5bf91\u6765\u8bf4\uff0c\u6700\u9760\u524d\u7684\u4ee50\u7ed3\u5c3e\u7684\u5e8f\u5217\u7f16\u53f7\u662f1\n        else p.push(1);//\u5bf90\u6765\u8bf4\uff0c\u6700\u9760\u524d\u7684\u4ee51\u7ed3\u5c3e\u7684\u5e8f\u5217\u7f16\u53f7\u662f1\n        for(int i=1;i<n;i++){\n            if(s[i]=='0'){\n                if(p.empty())q.push(++k),cnt[i]=k;//\u5982\u679c\u5f53\u524d\u662f0\uff0c\u800c\u4e14\u6ca1\u6709\u4ee51\u7ed3\u5c3e\u7684\u5e8f\u5217\uff0c\u5c31\u53ea\u597d\u5355\u5f00\u4e00\u4e2a\u4e86\n                else cnt[i]=p.top(),p.pop(),q.push(cnt[i]);//\u5426\u5219\u63a5\u4e0a\u53bb\uff0c\u628a\u539f\u5e8f\u5217\u4ece\u4ee51\u7ed3\u5c3e\u7684\u961f\u5217\u4e2d\u5220\u6389\uff0c\u6362\u5230\u4ee50\u7ed3\u5c3e\u7684\u961f\u5217\u4e2d\u3002\n            }else{\n                if(q.empty())p.push(++k),cnt[i]=k;\n                else cnt[i]=q.top(),q.pop(),p.push(cnt[i]);//\u540c\u4e0a\n            }\n        }\n        cout<<k<<endl;\n        for(int i=0;i<n;i++)cout<<cnt[i]<<' ';\n        cout<<endl;\n        while(!p.empty())p.pop();//\u8bb0\u5f97\u6e05\u7a7a\n        while(!q.empty())q.pop();\n    }\n    return 0;\n}\n```",
        "postTime": 1596696550,
        "uid": 39863,
        "name": "\u5f15\u9886\u5929\u4e0b",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF1399D \u3010Binary String To Subsequences\u3011"
    },
    {
        "content": "## \u9898\u610f\n\u628a\u7ed9\u5b9a\u7684 $01$ \u5b57\u7b26\u4e32\u5206\u6210\u82e5\u5e72\u4e2a\u5f62\u5982 $101010\\cdots$ \u6216 $010101\\cdots$ \u7684\u5b57\u7b26\u4e32\uff0c\u6c42\u6700\u5c11\u5206\u6210\u51e0\u4e2a\u3002\n## \u601d\u8def\n\u8d2a\u5fc3\uff1a\u6709\u80fd\u7528\u4e0a\u7684\u5b57\u7b26\u4e32\u5c31\u7528\u4e0a\uff0c\u4e0d\u7136\u5c31\u52a0\u4e00\u4e2a\u3002\n\n$n=1$ \u7684\u65f6\u5019\u663e\u7136\u4e00\u4e2a\u5c31\u591f\u4e86\u3002\n\n$n>1$ \u7684\u65f6\u5019\u6309\u7167\u5982\u4e0b\u65b9\u6cd5\u64cd\u4f5c\uff1a\n\n\u521d\u59cb\u5316\uff1a\u7b2c\u4e00\u4e2a\u6570\u5982\u679c $0$ \uff0c\u628a\u5269\u4f59 $1$ \u6570\u91cf $+1$ \uff0c\u4e0d\u7136\u628a\u5269\u4f59 $0$ \u6570\u91cf $+1$\u3002\u7b54\u6848\u521d\u59cb\u5316\u4e3a $0$ \u3002\n\n\u63a5\u4e0b\u6765\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\u5b57\u6267\u884c\u4e24\u4e2a\u64cd\u4f5c\uff1a\n\n1. \u5982\u679c\u5269\u4f59\u8fd9\u4e2a\u6570\u5b57\u7684\u6570\u91cf\u5927\u4e8e $0$ \u5c31\u5c06\u5269\u4f59\u8fd9\u4e2a\u6570\u5b57\u7684\u6570\u91cf $-1$ \uff0c\u4e0d\u7136\u5c31\u5c06\u7b54\u6848 $+1$\u3002\n\n2. \u5c06\u5269\u4f59\u53e6\u5916\u4e00\u4e2a\u6570\u5b57\u7684\u6570\u91cf $+1$\u3002\n## \u4ee3\u7801\n```\n//\u5176\u5b9e\u8fd9\u91cc\u4e0d\u9700\u8981\u5199set,int\u5b58\u5c31\u53ef\u4ee5\u4e86\n#include<bits/stdc++.h>\n#define qwq int T=read(); while(T--)\nusing namespace std;\ninline int read(){\n   int s=0,w=1;\n   char ch=getchar();\n   while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n   while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n   return s*w;\n}\nchar ch[1000003];\nint a[1000003];\nset<int> s0,s1;\nint main()\n{\n\ta[1]=1;\n\tqwq\n\t{\n\t\ts0.clear(),s1.clear();\n\t\tint n=read(),ans=1;\n\t\tscanf(\"%s\",ch+1);\n\t\tif(n==1) { puts(\"1\\n1\"); continue; }\n\t\tif(ch[1]=='0') s1.insert(1); else s0.insert(1);\n\t\tfor(int i=2; i<=n; i++) \n\t\tif(ch[i]=='0') \n\t\tif(s0.empty()) s1.insert(++ans),a[i]=ans; else s1.insert(*s0.begin()),a[i]=*s0.begin(),s0.erase(s0.begin());\n\t\telse\n\t\tif(s1.empty()) s0.insert(++ans),a[i]=ans; else s0.insert(*s1.begin()),a[i]=*s1.begin(),s1.erase(s1.begin());\n\t\tprintf(\"%d\\n\",ans);\n\t\tfor(int i=1; i<=n; i++) printf(\"%d \",a[i]);\n\t\tputs(\"\");\n\t}\n    return 0;\n}\n//By dead_X\n```",
        "postTime": 1596684951,
        "uid": 111055,
        "name": "dead_X",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1399D \u3010Binary String To Subsequences\u3011"
    },
    {
        "content": "### \u6613\u9519\u70b9\n\n\u8fd9\u9053\u9898\u6ce8\u610f\u4e00\u4e2a\u70b9\uff1a\u6c42\u6700\u957f0\u548c\u6700\u957f1\u7684\u6700\u5927\u503c\u5e76\u4e0d\u662f\u6b63\u89e3\uff0c\u56e0\u4e3a\u57281\u4e0e0\u603b\u4e2a\u6570\u4e0d\u4e00\u6837\u65f6\u4f1a\u51fa\u95ee\u9898\n\n\u4f8b\uff1a11011 \n\n\u82e5\u6309\u7167\u6c42\u6700\u957f\u5e8f\u5217\uff0c\u5219\u7b54\u6848\u4e3a2\uff0c\u5b9e\u9645\u4e0a\u6700\u4f18\u53ea\u67093\uff1b\n\n### \u6b63\u89e3\n\n\u6b64\u9898\u7684\u6b63\u89e3\u662f\u901a\u8fc7\u4e24\u4e2a\u53d8\u91cfnum1\uff0cnum0\u5206\u522b\u7edf\u8ba1\u7ed3\u675f\u70b9\u4e3a1\u62160\u7684\u5e8f\u5217\u7684\u4e2a\u6570\u3002\u5f53\u52a0\u5165\u4e00\u4e2a1\u662f\uff0c\u4e00\u4e2a\u672b\u5c3e\u4e3a0\u7684\u5e8f\u5217\u5c31\u53d8\u4e3a1\uff0cnum0--\uff0cnum1++\uff1b\n\n\u81f3\u4e8e\u5206\u7ec4\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2a\u6570\u7ec4pos0\u548cpos1\u6765\u5b58\u50a8\u6bcf\u4e2a\u8282\u70b9\u4f4d\u7f6e\u5c31\u53ef\u4ee5\u4e86\n\n\u8be6\u60c5\u89c1\u4ee3\u7801\n\n### \u4ee3\u7801\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAX=200001;\nint a,b,c,n,m,t,maxa,k[MAX],sta,d[MAX];\nint pos1[MAX],pos0[MAX];\nint num1,num0;\nchar st[MAX];\nint main ( )\n{\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%d%s\",&n,&st);\n\t\tnum0=0;num1=0;\n\t\tmaxa=0;\n\t\tfor(int i=0;i<=n-1;i++)\n\t\t{\n\t\t\tif(st[i]=='1')\n\t\t\t{\n\t\t\t\tnum1++;\n\t\t\t\tpos1[num1]=i;\n\t\t\t\tif(num0>0)\n\t\t\t\t{\n\t\t\t\t\td[i]=d[pos0[num0]];\n\t\t\t\t\tnum0--;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\td[i]=++maxa;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tnum0++;\n\t\t\t\tpos0[num0]=i;\n\t\t\t\tif(num1>0)\n\t\t\t\t{\n\t\t\t\t\td[i]=d[pos1[num1]];\n\t\t\t\t\tnum1--;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\td[i]=++maxa;\n\t\t\t}\n\t\t}\n\t\tcout<<maxa<<endl;\n\t\tfor(int i=0;i<n;i++)\n\t\tcout<<d[i]<<' ';\n\t\tcout<<endl;\n\t}\n\treturn 0 ;\n}\n```\n\n\n\u6ce8\uff1a\u672c\u4eba\u4e0d\u7ecf\u5e38\u7528printf\uff0c\u4e00\u822c\u7528cout\uff0c\u5927\u4f6c\u52ff\u55b7",
        "postTime": 1602839827,
        "uid": 187923,
        "name": "liuyanxi2",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF1399D \u3010Binary String To Subsequences\u3011"
    },
    {
        "content": "\u6211\u4eec\u53ef\u4ee5\u8ba9\u4e00\u4e2a\u70b9\u6839\u636e\u539f\u5e8f\u5217\u7684\u5185\u5bb9\u8fdb\u884c\u79fb\u52a8\uff0c\u5c06\u8fd9\u4e2a\u95ee\u9898\u8f6c\u5316\u4e3a\u4e0b\u9762\u7684\u5f62\u5f0f\uff1a\n\n\u5047\u8bbe\u5728\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\u4e2d\u6709\u4e00\u4e2a\u70b9\u5750\u6807\u4e3a $(x,y)$\uff0c\u5f53\u8d70\u5230\u5e8f\u5217\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\u65f6\uff0c\u5982\u679c\u662f `0` \u8be5\u70b9\u5c31\u79fb\u52a8\u5230 $(x+1,y-1)$ \u5904\uff0c\u5982\u679c\u662f `1` \u8be5\u70b9\u5c31\u79fb\u52a8\u5230 $(x+1,y+1)$ \u5904\u3002\u4e3a\u4e86\u4fbf\u4e8e\u6a21\u62df\uff0c\u6211\u4eec\u8ba9\u8fd9\u4e2a\u70b9\u7684\u521d\u59cb\u72b6\u6001\u4f4d\u4e8e\u539f\u70b9\u3002\n\n\u663e\u7136\uff0c\u8fd9\u4e2a\u70b9\u7684\u8fd0\u52a8\u8f68\u8ff9\u662f\u4e00\u6761\u6298\u7ebf\uff0c\u800c\u4e14\u7ec8\u70b9\u5728 $(n,num_1-num_0)$\u3002$k$ \u7684\u6700\u5c0f\u503c\u5c31\u662f\u6298\u7ebf\u6700\u9ad8\u70b9\u548c\u6700\u4f4e\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002\u8fd9 $k$ \u4e2a\u5b50\u5e8f\u5217\u4e5f\u53ef\u4ee5\u7528\u5b83\u4eec\u7684\u7eb5\u5750\u6807\u6765\u8868\u793a\uff0c\u753b\u4e2a\u56fe\u7a0d\u4f5c\u63a8\u5bfc\u5373\u53ef\u5f97\u51fa\u3002\n\n\u6700\u540e\u9644\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 2e5 + 9;\nint ans[maxn];\nunordered_map<int, int> mp;\nint main()\n{\n    int T;\n    scanf(\"%d\", &T);\n    while (T--)\n    {\n        int n, x;\n        scanf(\"%d\", &n);\n        mp.clear();\n        int h = 0, maxx = 0, minn = 0, cnt = 0;\n        for (int i = 1; i <= n; ++i)\n        {\n            scanf(\"%1d\", &x);\n            if (x == 1)\n                h++;\n            else\n                h--;\n            if (h > 0)\n            {\n                if (h > maxx)\n                    mp[h] = ++cnt, maxx = h;//\u66f4\u65b0\u6700\u9ad8\u70b9\u9ad8\u5ea6\n                ans[i] = h;\n                if (x == 0)\n                    ans[i]++;\n            }\n            else if (h < 0)\n            {\n                if (h < minn)\n                    mp[h] = ++cnt, minn = h;//\u66f4\u65b0\u6700\u4f4e\u70b9\u9ad8\u5ea6\n                ans[i] = h;\n                if (x == 1)\n                    ans[i]--;\n            }\n            else\n            {\n                if (x == 1)\n                    ans[i] = -1;\n                else\n                    ans[i] = 1;\n            }\n        }\n        printf(\"%d\\n\", cnt);\n        for (int i = 1; i <= n; ++i)\n            printf(\"%d \", mp[ans[i]]);\n        printf(\"\\n\");\n    }\n    return 0;\n}\n```\n",
        "postTime": 1596800354,
        "uid": 256465,
        "name": "Theophania",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1399D \u3010Binary String To Subsequences\u3011"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f\u662f\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a$n$\u7684$01$\u4e32\uff0c\u628a\u5b83\u5206\u89e3\u6210\u6700\u5c11\u6570\u91cf\u7684\u5b50\u5e8f\u5217\uff0c\u4f7f\u6240\u6709\u7684\u5b50\u5e8f\u5217\u4e2d\u6ca1\u6709$0$\u548c$1$\u76f8\u90bb\u3002\n\n\u6211\u5f00\u59cb\u505a\u8fd9\u9053\u9898\u7684\u65f6\u5019\uff0c\u60f3\u7684\u662f\u627e\u6700\u957f\u7684\u8fde\u7eed\u662f$0$\u6216$1$\u7684\u5b50\u4e32\u3002\u663e\u7136\u662f\u9519\u8bef\u7684\uff0c\u6bd4\u5982$11011$\uff0c\u7b54\u6848\u4e3a$3$\u3002\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\u56e0\u4e3a\u6211\u4eec\u5728\u4e2d\u9014\u5df2\u7ecf\u628a$0$\u90fd\u201c\u6d88\u8017\u201d\u5b8c\u4e86\uff0c\u5bfc\u81f4\u6700\u540e\u4e00\u4e2a$1$\u524d\u9762\u6ca1\u6709$0$\uff0c\u53ea\u80fd\u65b0\u5f00\u4e00\u4e2a\u5b50\u5e8f\u5217\u3002\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4e24\u4e2a\u53d8\u91cf$num0$\uff0c\u548c$num1$\uff0c\u8bb0\u5f55\u5f53\u524d\u4ee5$0$\u7ed3\u5c3e\u7684\u5b50\u5e8f\u5217\u7684\u6570\u91cf\u548c\u5f53\u524d\u4ee5$1$\u7ed3\u5c3e\u7684\u5b50\u5e8f\u5217\u7684\u6570\u91cf\u3002\u5f53\u6211\u4eec\u53c8\u8981\u52a0\u5165\u4e00\u4e2a$1$\u65f6\uff0c\u5148\u770b$num0$\u662f\u5426\u4e3a$0$\uff0c\u5982\u679c\u662f\u5219++$ans$\uff0c++$num1$\uff0c\u5426\u5219--$num0$,++$num1$\uff0c\u52a0\u5165\u4e00\u4e2a$0$\u65f6\u7c7b\u4f3c\u3002\n\n\u90a3\u5982\u4f55\u5206\u7ec4\uff1f\u8bbe\u7b2c$i$\u4e2a\u6570\u7684\u5206\u7ec4\u4e3a$d_i$\uff0c\u6211\u4eec\u53ea\u9700\u8bb0\u5f55\u5f53\u524d$num0$\u4e2a$0$\u5206\u522b\u6240\u5728\u7684\u4f4d\u7f6e$pos0$\u6570\u7ec4\u548c$num1$\u4e2a$1$\u7684\u4f4d\u7f6e$pos1$\u6570\u7ec4\uff0c\u5f53\u52a0\u5165\u4e00\u4e2a$1$\u65f6\u5982\u679c$num0$\u4e3a$0$\u5219\u65b0\u52a0\u4e00\u4e2a\u5b50\u5e8f\u5217\uff0c\u5426\u5219\u4ee4$d[i]=d[pos0[num0]$\uff0c\u6700\u540e\u5c06\u5176\u52a0\u5165$pos1$\u5373\u53ef\u3002$0$\u7c7b\u4f3c\u3002\n\n\u5230\u6b64\u6211\u4eec\u6109\u5feb\u7684\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nint t,n,a[200001]={2},d[200001];\ninline int read()\n{\n\tint res=0,flag=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9')\n\t{\n\t\tif(ch=='-')\n\t\t    flag=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9')\n\t{\n\t\tres=res*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn res*flag;\n}\nint pos1[200001],pos0[200001];\nint main()\n{\n\tt=read();\n\twhile(t--)\n\t{\n\t\tn=read();\n\t\tint ans=0,num1=0,num0=0;\n\t\tfor(register int i=1;i<=n;++i)\n\t\t{\n\t\t\tscanf(\"%1d\",&a[i]);\n\t\t\tif(a[i]==1)\n\t\t\t{\n\t\t\t\t++num1;\n\t\t\t\tpos1[num1]=i;\n\t\t\t\tif(num0>0)\n\t\t\t\t{\n\t\t\t\t\td[i]=d[pos0[num0]];\n\t\t\t\t\t--num0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t    d[i]=++ans;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t++num0;\n\t\t\t\tpos0[num0]=i;\n\t\t\t\tif(num1>0)\n\t\t\t\t{\n\t\t\t\t\td[i]=d[pos1[num1]];\n\t\t\t\t\t--num1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t    d[i]=++ans;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t\tfor(register int i=1;i<=n;++i)\n\t\t\tprintf(\"%d \",d[i]);\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1596701781,
        "uid": 68011,
        "name": "\u53e4\u660e\u5730_ypc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1399D \u3010Binary String To Subsequences\u3011"
    },
    {
        "content": "~~\u8c22\u9080\uff0c\u4eba\u5728 CF\uff0c\u521a\u4e0b\u8d5b\u573a~~\n\n~~\u6709\u6ca1\u6709\u4e4d\u4e00\u770b\u60f3\u5230\u62e6\u622a\u5bfc\u5f39~~\n\n\u7b56\u7565\u5f88\u7b80\u5355\uff0c\u8bbe\u5f53\u524d\u6570\u5b57\u4e3a $s_i$\uff0c\u5219\u82e5\u6709\u4ee5 $s_i \\oplus 1$ \u7ed3\u5c3e\u7684\u5e8f\u5217\u5c31\u968f\u4fbf\u9009\u4e00\u4e2a\u63d2\u5165 $s_i$\uff0c\u5426\u5219\u65b0\u589e\u4e00\u4e2a\u5e8f\u5217\n\n\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd $O(n)$ \u53cc\u6808\u89e3\u6cd5~~\u6709\u63d2\u5165\u5220\u9664\u5143\u7d20\u548c\u5224\u7a7a\u7684\u4ec0\u4e48\u5bb9\u5668\u90fd\u884c~~\n\n`st[0]` \u5b58 $0$ \u7ed3\u5c3e\u5b50\u5e8f\u5217\u7684\u5e8f\u53f7\uff0c`st[1]` \u5b58 $1$ \u7ed3\u5c3e\u5b50\u5e8f\u5217\u7684\u5e8f\u53f7\n\n\u5047\u8bbe\u5df2\u6709 $k$ \u4e2a\u5b50\u5e8f\u5217\u3002\u82e5 `st[s[i] ^ 1]` \u975e\u7a7a\u5c31 pop \u4e00\u4e2a\u51fa\u6765 push \u5230 `st[s[i]]` \u91cc\uff0c\u5426\u5219\u9700\u65b0\u589e\u4e00\u4e2a\u5b50\u5e8f\u5217\uff0c`st[s[i]].push(++k)`\uff0c\u6b64\u65f6 `a[i]=st[s[i]].top()`\n\n\u4ee3\u7801\u89c1\u4e0b\n\n```cpp\n#include <cstdio>\n#include <stack>\n\nusing namespace std;\n\nvoid r(int& i) {\n    i = 0;\n    int c = getchar();\n    for (; c < '0' || '9' < c; c = getchar()) ;\n    for (; '0' <= c && c <= '9'; c = getchar()) i = i * 10 + (c - '0');\n}\n\nvoid r01(int& i) {\n    i = 0;\n    int c = getchar();\n    for (; c != '0' && c != '1'; c = getchar()) ;\n    i = c - '0';\n}\n\nint t;\nint n;\nint s[200001];\nint a[200001];\n\nint main() {\n    int t;\n    r(t);\n    while (t--) {\n        int n;\n        r(n);\n        stack<int> st[2];\n        int k = 0;\n        for (int i = 1; i <= n; ++i) {\n            r01(s[i]);\n            if (!st[s[i] ^ 1].empty()) {\n                st[s[i]].push(st[s[i] ^ 1].top());\n                st[s[i] ^ 1].pop();\n            }\n            else {\n                st[s[i]].push(++k);\n            }\n            a[i] = st[s[i]].top();\n        }\n        printf(\"%d\\n\", k);\n        for (int i = 1; i <= n; ++i) {\n            printf(\"%d \", a[i]);\n        }\n        putchar('\\n');\n    }\n    return 0;\n}\n```",
        "postTime": 1596689961,
        "uid": 67939,
        "name": "tengkaize",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1399D \u3010Binary String To Subsequences\u3011"
    },
    {
        "content": "\n## [CF1399D.Binary String To Subsequences](https://codeforces.ml/problemset/problem/1399/D)\n\n> \u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u4e14\u7531 $1,0$ \u7ec4\u6210\u7684\u5b57\u7b26\u4e32 $s$\n> \n> \u4f60\u7684\u4efb\u52a1\u662f\u5c06\u7ed9\u5b9a\u7684\u5b57\u7b26\u4e32\u5212\u5206\u4e3a\u6700\u5c11\u7684\u5b50\u5e8f\u5217\uff0c\u6bcf\u4e2a\u5b50\u5e8f\u5217\u7684\u5b57\u7b26\u53ea\u5c5e\u4e8e\u4e00\u4e2a\u5b50\u5e8f\u5217\uff0c\u6bcf\u4e2a\u5b50\u5e8f\u5217\u5f62\u5982 `010101` \u6216 `101010101` (\u5373\u5b50\u5e8f\u5217\u4e0d\u5e94\u8be5\u5305\u542b\u4e24\u4e2a\u76f8\u90bb\u7684 0 \u6216 1 )\u3002\n>\n> \u8981\u6c42\u8f93\u51fa\u6bcf\u4e2a\u5143\u7d20\u7684\u5206\u7ec4\u65b9\u6848\n> \n> $n \\leq 2 \\times 10 ^ 5$\n\n\u8003\u8651\u6784\u9020\u3002\n\n\u5206\u6790\u9898\u610f\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a 1 \u6700\u591a\u548c\u4e00\u4e2a 0 \u8fdb\u884c\u5339\u914d\uff0c\u6240\u4ee5\u53ef\u4ee5\u5229\u7528\u4e00\u4e2a\u6808\u5b8c\u6210\u8fd9\u4e2a\u64cd\u4f5c\u3002\n\n\u4f46\u5b9e\u9645\u4e0a\u5e76\u6ca1\u6709\u90a3\u4e48\u7b80\u5355\uff0c\u8003\u8651\u4e00\u7ec4\u6837\u4f8b `10101` \u8fd9\u91cc\u5982\u679c\u66b4\u529b\u5339\u914d\u7684\u8bdd\u4f1a\u53d1\u73b0\u540e\u9762\u7684 `1` \u88ab\u5206\u5230\u4e86\u53e6\u5916\u4e00\u7ec4\uff0c\u5b9e\u9645\u4e0a\u8fd9\u91cc\u662f\u53ef\u4ee5\u5206\u6210\u4e00\u7ec4\u7684\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8003\u8651\u5728\u6bcf\u6b21\u5339\u914d\u5b8c\u540e\uff0c\u90fd\u628a\u4e0a\u6b21\u5339\u914d\u5b8c\u7684\u4e1c\u897f\u63d2\u5165\u6808\u4e2d\u8fdb\u884c\u4e8c\u6b21\u5339\u914d\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u5efa\u7acb\u4e24\u4e2a\u6808\uff0c\u4e00\u4e2a\u6808\u5b58 1 \u6240\u5728\u7684\u4f4d\u7f6e\uff0c\u4e00\u4e2a\u6808\u5b58 0 \u6240\u5728\u7684\u4f4d\u7f6e\u3002\n\n\u6bcf\u6b21\u626b\u63cf\u5230\u4e00\u4e2a\u65b0\u5b57\u7b26\uff0c\u8bbe\u5f53\u524d\u5b57\u7b26\u4e3a 1\uff0c\u90a3\u4e48\u5148\u67e5\u8be2 0 \u7684\u6808\u91cc\u6709\u6ca1\u6709\u53ef\u4ee5\u5339\u914d\u7684\uff08\u4ee3\u8868\u8fd9\u4e2a 1 \u53ef\u4ee5\u5206\u5230\u5df2\u7ecf\u5b58\u5728\u7684\u7ec4\u4e2d\uff09\uff0c\u4ee4 `pos[now] = pos[s1.top()]`\n\n\u5982\u679c\u6ca1\u6709\uff0c\u5219\u5f53\u524d\u8fd9\u4e2a 1 \u80af\u5b9a\u662f\u5728\u65b0\u7684\u4e00\u7ec4\u4e2d\uff0c\u5c31\u662f\u8981\u65b0\u5efa\u4e00\u4e2a\u7ec4 `pos[now] = ++tot`\n\n\u53cd\u4e4b\u4ea6\u7136\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$\n\n### \u4ee3\u7801\n\n```cpp\nint n;\nint pos[N];\nstack <int> a,b;\nchar ch[N];\nsigned main() {\n    int T;cin >> T;\n    while (T--) {\n        while (!a.empty()) a.pop();\n        while (!b.empty()) b.pop();\n        memset(pos,0,sizeof pos);\n        cin >> n;\n        scanf(\"%s\",ch);\n        int ans = 0;\n        for (int i = 0;i < n;++i) {\n            int p = ch[i] - '0';\n            if (p == 0) {\n                a.push(i);\n                if (!b.empty()) {\n                    pos[i] = pos[b.top()];\n                    b.pop();\n                } else {\n                    pos[i] = ++ans;\n                }\n            }\n            else {\n                b.push(i);\n                if (!a.empty()) {\n                    pos[i] = pos[a.top()];\n                    a.pop();\n                } else {\n                    pos[i] = ++ans;\n                }\n            }\n        }\n        cout << ans << endl;\n        for (int i = 0;i < n;++i) {\n            cout << pos[i] << \" \";\n        }\n        puts(\"\");\n    }\n    return 0;\n}\n```",
        "postTime": 1596682570,
        "uid": 105230,
        "name": "Retired_Doubeecat",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1399D \u3010Binary String To Subsequences\u3011"
    },
    {
        "content": "#### CF1339D Binary String To Subsequences \u9898\u610f~~\u7b80~~\u8ff0\n\n\u5bf9\u4e8e\u957f\u5ea6\u4e3a $n$\uff0c\u53ea\u5305\u542b $0$ \u548c $1$ \u7684\u4e00\u4e2a\u5b57\u7b26\u4e32 $s$\uff0c\u628a\u5b83\u62c6\u6210 $k$ \u4e2a\u65b0\u5b57\u7b26\u4e32\uff0c\u4f7f\u5f97\uff1a\n\n- \u6bcf\u4e2a\u65b0\u5b57\u7b26\u4e32\u662f $s$ \u7684\u4e00\u4e2a**\u5b50\u5e8f\u5217**\uff1b\n- $s$ \u7684\u6bcf\u4e00\u4e2a\u5b57\u7b26\u5728\u8fd9 $k$ \u4e2a\u65b0\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u4e14\u4ec5\u51fa\u73b0**\u4e00\u6b21**\uff1b\n- \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u65b0\u5b57\u7b26\u4e32\uff0c\u76f8\u90bb\u4e24\u4e2a\u5b57\u7b26**\u4e0d\u540c**\uff08\u4f8b\u5982 `010101\u2026`\uff0c`101010\u2026`\uff09\u3002\n\n\u6c42\u51fa $k$ \u7684\u6700\u5c0f\u503c\u3002\n\n\u8f93\u5165\uff1a$t$ \u7ec4\u6570\u636e\uff08$1\\le t\\le 2\\times 10^4$\uff09\uff0c\u5bf9\u4e8e\u6bcf\u7ec4\u6570\u636e\uff0c\u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570 $n$\uff08$1\\le n\\le 2\\times 10^5$\uff09\uff0c\u7b2c\u4e8c\u884c\u4e00\u4e2a 01 \u5b57\u7b26\u4e32 $s$\u3002\u4fdd\u8bc1\u6240\u6709\u6570\u636e $n$ \u7684\u603b\u548c\u5c0f\u4e8e $2\\times 10^5$\u3002\n\n\u8f93\u51fa\uff1a\u5bf9\u4e8e\u6bcf\u7ec4\u6570\u636e\uff0c\u7b2c\u4e00\u884c\u662f $k$ \u7684\u6700\u5c0f\u503c\uff0c\u7b2c\u4e8c\u884c $n$ \u4e2a\u6574\u6570\uff0c\u7b2c $i$ \u4e2a\u6574\u6570 $a_i$ \u8868\u793a $s_i$ \u6240\u5728\u65b0\u5b57\u7b26\u4e32\u7684\u7f16\u53f7\uff08$1\\le a_i\\le k$\uff09\u3002\u5982\u6709\u591a\u89e3\uff0c\u8f93\u51fa\u4efb\u610f\u4e00\u4e2a\u5373\u53ef\u3002\n\n#### \u601d\u8def~~\u7b80~~\u8ff0\n\n\u663e\u7136\u5728\u6bcf\u4e2a\u65b0\u5b57\u7b26\u4e32\u4e2d\uff0c$0$ \u7684\u524d\u9a71\u662f $1$\uff0c$1$ \u7684\u524d\u9a71\u662f $0$\uff08\u4e0d\u8003\u8651\u7b2c\u4e00\u4e2a\u5b57\u7b26\uff09\u3002\n\n\u5bf9\u4e8e $s$ \u7684\u6bcf\u4e00\u4e2a\u5b57\u7b26\uff0c\u5c1d\u8bd5\u627e\u5b83\u7684\u524d\u9a71\uff0c\u5982\u679c\u627e\u5230\u5c31\u63a5\u4e0a\u53bb\uff0c\u6ca1\u627e\u5230\u5c31\u4ee5\u8fd9\u4e2a\u5b57\u7b26\u4e3a\u7b2c\u4e00\u4e2a\u5b57\u7b26\uff0c\u65b0\u589e\u4e00\u4e2a\u65b0\u5b57\u7b26\u4e32\u3002\n\n\u5f00\u4e24\u4e2a\u6808\uff08\u961f\u5217\u4e5f\u53ef\u4ee5\uff09\uff0c\u8bb0\u5f55\u6240\u6709\u65b0\u5b57\u7b26\u4e32\u672b\u5c3e\u5143\u7d20\u7684\u4f4d\u7f6e\uff0c$0$ \u5c31\u5b58\u5728\u6808 $0$ \u91cc\uff0c$1$ \u5c31\u5b58\u5728\u6808 $1$ \u91cc\u3002\n\n\u521d\u59cb\u5316 $k=0$\uff0c\u6bcf\u4e2a\u6808\u4e3a\u7a7a\u3002\u987a\u5e8f\u8003\u8651 $s$ \u7684\u6bcf\u4e00\u4e2a\u5b57\u7b26\uff0c\u82e5\u4e3a $0$\uff0c\u5219\u5728\u6808 $1$ \u4e2d\u627e\u5230\u6808\u9876\u5143\u7d20\uff0c\u5f39\u51fa\uff0c\u628a\u8fd9\u4e2a\u4f4d\u7f6e\u8bb0\u4e3a\u8fd9\u4e2a\u5b57\u7b26\u4f4d\u7f6e\u7684\u524d\u9a71\uff1b\u5982\u679c\u8be5\u6808\u4e3a\u7a7a\uff0c\u5219\u65b0\u589e\u4e00\u4e2a\u65b0\u5b57\u7b26\u4e32\uff0c$k$ \u503c\u52a0 $1$\u3002\u6700\u540e\u628a\u8fd9\u4e2a\u4f4d\u7f6e\u538b\u5165\u6808 $0$ \u4e2d\u3002\n\n\u5b57\u7b26\u4e3a $1$ \u7684\u505a\u6cd5\u7c7b\u4f3c\u3002 \n\n\u8003\u8651\u5b8c\u6bd5\uff0c$k$ \u5c31\u662f\u6700\u5c0f\u503c\uff08\u8fd8\u4e0d\u4f1a\u8bc1\u554a\u2026\u2026\uff09\u3002\n\n\u81f3\u4e8e\u8f93\u51fa\u7f16\u53f7\uff0c\u53ef\u4ee5\u60f3\u8c61\u6210\u67d3\u8272\u3002\u53e6\u5f00\u6570\u7ec4\u8bb0\u5f55\u67d3\u8272\uff0c\u5728\u8003\u8651\u6bcf\u4e00\u4e2a\u5b57\u7b26\u7684\u8fc7\u7a0b\u4e2d\uff0c\u65b0\u589e\u5b57\u7b26\u4e32\u65f6\uff0c$k$ \u81ea\u589e\u540e\u628a\u8be5\u4f4d\u7f6e\u67d3\u8272\u6210 $k$\uff1b\u8fd9\u4e2a\u4f4d\u7f6e\u6709\u524d\u9a71\uff0c\u5219\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u989c\u8272\u5c31\u662f\u524d\u9a71\u7684\u989c\u8272\u3002\n\n\u8f93\u51fa\u67d3\u8272\u6570\u7ec4\u5373\u53ef\u3002\n\n> \u5f53\u65f6\u505a\u9898\u8fd8\u60f3\u7528\u5e76\u67e5\u96c6\u6765\u7740\u2026\u2026\u53d1\u73b0\u4e0d\u597d\u67d3\u8272\uff0c\u5c31\u8fd9\u6837\u505a\u4e86\u3002\n\n#### \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint t, ans, n;\nint sta0[200010], sta1[200010], top0, top1;\nint a[200010], colo[200010], prea[200010];\nchar ch;\n/*\nint find_set(int x){\n\tif(fa[x]==x)\n\t\treturn x;\n\treturn fa[x] = find_set(fa[x]);\n}\n\ninline void Merge(int x, int y){\n\tint fax = find_set(x);\n\tint fay = find_set(y);\n\tif(fax==fay)\n\t\treturn;\n\tfa[fay] = fax;\n}\n*/\ninline void real_main(){\n\ttop0 = top1 = ans = 0;\n\tscanf(\"%d\\n\", &n);\n\tfor(register int i=1; i<=n; ++i){\n\t\tch = getchar();\n\t\tif(ch=='0')\n\t\t\ta[i] = 0;\n\t\tif(ch=='1')\n\t\t\ta[i] = 1;\n//\t\tfa[i] = i;\n\t}\n\tfor(int i=1; i<=n; ++i){\n\t\tif(a[i]==0){\n\t\t\tif(top1==0){\n\t\t\t\t++ans;//\u65b0\u589e\u5b57\u7b26\u4e32\n\t\t\t\tprea[i] = 0;//\u76f8\u5f53\u4e8e\u6e05\u7a7a\u6570\u7ec4\uff0c\u9632\u6b62\u5728\u591a\u7ec4\u6570\u636e\u4e2d\u51fa\u9519\n\t\t\t\tcolo[i] = ans;//\u67d3\u8272\n\t\t\t}\n\t\t\telse{\n\t\t\t\tprea[i] = sta1[--top1];//\u5f39\u51fa\u6808\u9876\u5143\u7d20\u5e76\u8bb0\u5f55\u524d\u9a71\n\t\t\t\tcolo[i] = colo[prea[i]];//\u67d3\u8272\n\t\t\t}\n\t\t\tsta0[top0++] = i;\n\t\t}\n\t\tif(a[i]==1){\n\t\t\tif(top0==0){\n\t\t\t\tprea[i] = 0;\n\t\t\t\t++ans;\n\t\t\t\tcolo[i] = ans;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tprea[i] = sta0[--top0];\n\t\t\t\tcolo[i] = colo[prea[i]];\n\t\t\t}\n\t\t\tsta1[top1++] = i;\n\t\t}\n\t}\n\tprintf(\"%d\\n\", ans);\n\tfor(int i=1; i<=n; ++i)\n\t\tprintf(\"%d \", colo[i]);\n\tprintf(\"\\n\");\n}\n\nint main(){\n\tscanf(\"%d\\n\",&t);\n\twhile(t>0){\n\t\t--t;\n\t\treal_main();\n\t}\n\treturn 0;\n}\n\u00a0\n```\n\n",
        "postTime": 1596682141,
        "uid": 222223,
        "name": "Lylighter_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1399D \u3010Binary String To Subsequences\u3011"
    }
]