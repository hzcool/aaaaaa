[
    {
        "content": "\u8fd9\u9053\u9898\u53ef\u4ee5\u4f7f\u7528\u5bbd\u641c\u6765\u505a\uff0c\u56e0\u4e3a\u6df1\u641c\u662f\u4e00\u641c\u5230\u5e95\uff0c\u800c\u5bbd\u641c\u662f\u9010\u5c42\u7684\u641c\u7d22\uff0c\u6240\u4ee5\u5728\u8fd9\u9898\u5c31\u4f53\u73b0\u51fa\u4e86\u5bbd\u641c\u7684\u597d\u5904\u2014\u2014\u6bcf\u4e00\u6b21\u589e\u52a0$4$\u6216$7$\u4f5c\u4e3a\u6269\u5c55\u3002\u5982\u679c\u7528\u6df1\u641c\u7684\u8bdd\uff0c\u90a3\u4e48\u4f1a\u4e00\u76f4\u4e0d\u505c\u5730\u8d70\u4e0b\u53bb\uff0c\u8fd9\u6837\u987a\u5e8f\u5c31\u4e0d\u540c\uff0c\u800c\u5bbd\u641c\u7684\u8bdd\uff0c\u662f\u5148\u8d70$4$\u518d\u8d70$7$\uff0c\u518d\u4e0b\u4e00\u5c42\u3002\n\n```cpp\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\u6587\u4ef6\n#pragma GCC optimize(2)//\u624b\u52a8O2\uff0c\u7ade\u8d5b\u52ff\u7528\uff01\nusing namespace std;\nconst int maxn=1e6;//\u521d\u6b65\u5927\u6982\u662f\u8981\u5f001e6\u7684\nint n,front=1,rear=1;//\u57fa\u672c\u521d\u59cb\u5316\nlong long q[maxn];//\u5341\u5e74OI\u4e00\u573a\u7a7a\uff0c\u4e0d\u5f00long long\u89c1\u7956\u5b97\nvoid check(long long x)//check\u51fd\u6570\u6765\u770b\u662f\u5426\u4e3alucky number\n{\n    if(x<n)return;//\u5982\u679cx\u8fd8\u6ca1\u6709\u8f93\u5165\u5927\u6216\u8005\u4e0d\u7b49\u4e8ex\uff0c\u5c31\u76f4\u63a5\u8df3\u51fa\n    long long y=x,a=0,b=0;//a\u3001b\u5206\u522b\u4ee3\u88687\u548c4\u7684\u6570\u91cf\n    while(x)\n    {\n        if(x%10-4)a++;//\u8bb0\u5f55\n        else b++;\n        x/=10;//\u62b9\u6389\u672b\u4f4d\n    }\n    if(a==b)//\u76f8\u7b49\u5c31\u76f4\u63a5\u8f93\u51fa\u5e76\u9000\u51fa\u6574\u4e2a\u7a0b\u5e8f\n    {\n        cout<<y;\n        exit(0);\n    }\n}\nint main()\n{\n    ios::sync_with_stdio(0);//\u5173\u540c\u6b65\n    cin>>n;\n    while(front<=rear)//\u5bbd\u641c\n    {\n        q[++rear]=q[front]*10+4;//\u4f9d\u6b21\u6309\u987a\u5e8f\u6269\u5c55\n        check(q[rear]);\n        q[++rear]=q[front]*10+7;\n        check(q[rear]);\n        front++;\n    }\n}\n```\n\n\u62d3\u5c55\u987a\u5e8f\uff1a\n\n|$front$|$1$|$1$|$1$|$2$|$2$|$2$|$2$|$3$|$...$|\n| :----------: | :----------: | :----------: | :----------: | :----------: | :----------: | :----------: | :----------: | :----------: | :----------: |\n|$rear$|$1$|$2$|$3$|$4$|$5$|$6$|$7$|$8$|$...$|\n|$val$|$0$|$4$|$7$|$44$|$47$|$74$|$77$|$444$|$...$|\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/09havpxi.png)\n\n~~\uff08\u56fe\u90fd\u662f\u4e00\u70b9\u4e00\u70b9\u5730\u753b\u51fa\u6765\u7684\uff0c\u4e0d\u8981\u5fd8\u8bb0\u70b9\u51fb\u90a3\u4e2a\u5927\u62c7\u6307\u6309\u94ae\u54e6\uff01\uff09~~",
        "postTime": 1585973241,
        "uid": 137367,
        "name": "hensier",
        "ccfLevel": 6,
        "title": "CF96B Lucky Numbers (easy) \u9898\u89e3"
    },
    {
        "content": "## \u8981\u5b66\u4f1a\u6253\u8868\u3002\n## \u8981\u5b66\u4f1a\u6253\u8868\u3002\n## \u8981\u5b66\u4f1a\u6253\u8868\u3002\n\u91cd\u8981\u7684\u4e8b\u60c5\u8bf4\u4e09\u904d\u3002\n\n\u9996\u5148\uff0c\u8981\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff1a\n\n```cpp\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint main(){\n    for(int i=1;i<=5;i++){\n        int a[10]={},t=0;\n        for(int j=0;j<i;j++){\n            a[t++]=4;\n        }\n        for(int j=0;j<i;j++){\n            a[t++]=7;\n        }\n        do{\n            for(int j=0;j<i*2;j++){\n                cout<<a[j];\n            }\n            cout<<',';\n        }while(next_permutation(a,a+i*2));\n    }\n    return 0;\n}\n```\n\u5f97\u5230\u8fd9\u6837\u4e00\u4e2a\u8868\uff1a\n\n```cpp\nlong long ln[350]={47,74,4477,4747,4774,7447,7474,7744,444777,447477,447747,447774,474477,474747,474774,477447,477474,477744,744477,744747,744774,747447,747474,747744,774447,774474,774744,777444,44447777,44474777,44477477,44477747,44477774,44744777,44747477,44747747,44747774,44774477,44774747,44774774,44777447,44777474,44777744,47444777,47447477,47447747,47447774,47474477,47474747,47474774,47477447,47477474,47477744,47744477,47744747,47744774,47747447,47747474,47747744,47774447,47774474,47774744,47777444,74444777,74447477,74447747,74447774,74474477,74474747,74474774,74477447,74477474,74477744,74744477,74744747,74744774,74747447,74747474,74747744,74774447,74774474,74774744,74777444,77444477,77444747,77444774,77447447,77447474,77447744,77474447,77474474,77474744,77477444,77744447,77744474,77744744,77747444,77774444,4444477777,4444747777,4444774777,4444777477,4444777747,4444777774,4447447777,4447474777,4447477477,4447477747,4447477774,4447744777,4447747477,4447747747,4447747774,4447774477,4447774747,4447774774,4447777447,4447777474,4447777744,4474447777,4474474777,4474477477,4474477747,4474477774,4474744777,4474747477,4474747747,4474747774,4474774477,4474774747,4474774774,4474777447,4474777474,4474777744,4477444777,4477447477,4477447747,4477447774,4477474477,4477474747,4477474774,4477477447,4477477474,4477477744,4477744477,4477744747,4477744774,4477747447,4477747474,4477747744,4477774447,4477774474,4477774744,4477777444,4744447777,4744474777,4744477477,4744477747,4744477774,4744744777,4744747477,4744747747,4744747774,4744774477,4744774747,4744774774,4744777447,4744777474,4744777744,4747444777,4747447477,4747447747,4747447774,4747474477,4747474747,4747474774,4747477447,4747477474,4747477744,4747744477,4747744747,4747744774,4747747447,4747747474,4747747744,4747774447,4747774474,4747774744,4747777444,4774444777,4774447477,4774447747,4774447774,4774474477,4774474747,4774474774,4774477447,4774477474,4774477744,4774744477,4774744747,4774744774,4774747447,4774747474,4774747744,4774774447,4774774474,4774774744,4774777444,4777444477,4777444747,4777444774,4777447447,4777447474,4777447744,4777474447,4777474474,4777474744,4777477444,4777744447,4777744474,4777744744,4777747444,4777774444,7444447777,7444474777,7444477477,7444477747,7444477774,7444744777,7444747477,7444747747,7444747774,7444774477,7444774747,7444774774,7444777447,7444777474,7444777744,7447444777,7447447477,7447447747,7447447774,7447474477,7447474747,7447474774,7447477447,7447477474,7447477744,7447744477,7447744747,7447744774,7447747447,7447747474,7447747744,7447774447,7447774474,7447774744,7447777444,7474444777,7474447477,7474447747,7474447774,7474474477,7474474747,7474474774,7474477447,7474477474,7474477744,7474744477,7474744747,7474744774,7474747447,7474747474,7474747744,7474774447,7474774474,7474774744,7474777444,7477444477,7477444747,7477444774,7477447447,7477447474,7477447744,7477474447,7477474474,7477474744,7477477444,7477744447,7477744474,7477744744,7477747444,7477774444,7744444777,7744447477,7744447747,7744447774,7744474477,7744474747,7744474774,7744477447,7744477474,7744477744,7744744477,7744744747,7744744774,7744747447,7744747474,7744747744,7744774447,7744774474,7744774744,7744777444,7747444477,7747444747,7747444774,7747447447,7747447474,7747447744,7747474447,7747474474,7747474744,7747477444,7747744447,7747744474,7747744744,7747747444,7747774444,7774444477,7774444747,7774444774,7774447447,7774447474,7774447744,7774474447,7774474474,7774474744,7774477444,7774744447,7774744474,7774744744,7774747444,7774774444,7777444447,7777444474,7777444744,7777447444,7777474444,7777744444};\n```\n### \u6838\u5fc3\u7a0b\u5e8f\uff1a\n```cpp\nint main(){\n    int n;\n    cin>>n;\n    for(int i=0;i<350;i++){\n        if(ln[i]>=n){\n            cout<<ln[i]<<endl;\n            return 0;\n        }\n    }\n    return 0;\n}\n```\n### \u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<iostream>\nusing namespace std;\nlong long ln[350]={47,74,4477,4747,4774,7447,7474,7744,444777,447477,447747,447774,474477,474747,474774,477447,477474,477744,744477,744747,744774,747447,747474,747744,774447,774474,774744,777444,44447777,44474777,44477477,44477747,44477774,44744777,44747477,44747747,44747774,44774477,44774747,44774774,44777447,44777474,44777744,47444777,47447477,47447747,47447774,47474477,47474747,47474774,47477447,47477474,47477744,47744477,47744747,47744774,47747447,47747474,47747744,47774447,47774474,47774744,47777444,74444777,74447477,74447747,74447774,74474477,74474747,74474774,74477447,74477474,74477744,74744477,74744747,74744774,74747447,74747474,74747744,74774447,74774474,74774744,74777444,77444477,77444747,77444774,77447447,77447474,77447744,77474447,77474474,77474744,77477444,77744447,77744474,77744744,77747444,77774444,4444477777,4444747777,4444774777,4444777477,4444777747,4444777774,4447447777,4447474777,4447477477,4447477747,4447477774,4447744777,4447747477,4447747747,4447747774,4447774477,4447774747,4447774774,4447777447,4447777474,4447777744,4474447777,4474474777,4474477477,4474477747,4474477774,4474744777,4474747477,4474747747,4474747774,4474774477,4474774747,4474774774,4474777447,4474777474,4474777744,4477444777,4477447477,4477447747,4477447774,4477474477,4477474747,4477474774,4477477447,4477477474,4477477744,4477744477,4477744747,4477744774,4477747447,4477747474,4477747744,4477774447,4477774474,4477774744,4477777444,4744447777,4744474777,4744477477,4744477747,4744477774,4744744777,4744747477,4744747747,4744747774,4744774477,4744774747,4744774774,4744777447,4744777474,4744777744,4747444777,4747447477,4747447747,4747447774,4747474477,4747474747,4747474774,4747477447,4747477474,4747477744,4747744477,4747744747,4747744774,4747747447,4747747474,4747747744,4747774447,4747774474,4747774744,4747777444,4774444777,4774447477,4774447747,4774447774,4774474477,4774474747,4774474774,4774477447,4774477474,4774477744,4774744477,4774744747,4774744774,4774747447,4774747474,4774747744,4774774447,4774774474,4774774744,4774777444,4777444477,4777444747,4777444774,4777447447,4777447474,4777447744,4777474447,4777474474,4777474744,4777477444,4777744447,4777744474,4777744744,4777747444,4777774444,7444447777,7444474777,7444477477,7444477747,7444477774,7444744777,7444747477,7444747747,7444747774,7444774477,7444774747,7444774774,7444777447,7444777474,7444777744,7447444777,7447447477,7447447747,7447447774,7447474477,7447474747,7447474774,7447477447,7447477474,7447477744,7447744477,7447744747,7447744774,7447747447,7447747474,7447747744,7447774447,7447774474,7447774744,7447777444,7474444777,7474447477,7474447747,7474447774,7474474477,7474474747,7474474774,7474477447,7474477474,7474477744,7474744477,7474744747,7474744774,7474747447,7474747474,7474747744,7474774447,7474774474,7474774744,7474777444,7477444477,7477444747,7477444774,7477447447,7477447474,7477447744,7477474447,7477474474,7477474744,7477477444,7477744447,7477744474,7477744744,7477747444,7477774444,7744444777,7744447477,7744447747,7744447774,7744474477,7744474747,7744474774,7744477447,7744477474,7744477744,7744744477,7744744747,7744744774,7744747447,7744747474,7744747744,7744774447,7744774474,7744774744,7744777444,7747444477,7747444747,7747444774,7747447447,7747447474,7747447744,7747474447,7747474474,7747474744,7747477444,7747744447,7747744474,7747744744,7747747444,7747774444,7774444477,7774444747,7774444774,7774447447,7774447474,7774447744,7774474447,7774474474,7774474744,7774477444,7774744447,7774744474,7774744744,7774747444,7774774444,7777444447,7777444474,7777444744,7777447444,7777474444,7777744444};\nint main(){\n    int n;\n    cin>>n;\n    for(int i=0;i<350;i++){\n        if(ln[i]>=n){\n            cout<<ln[i]<<endl;\n            return 0;\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1544351727,
        "uid": 83849,
        "name": "Vader10",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF96B \u3010Lucky Numbers (easy)\u3011"
    },
    {
        "content": "## \u672c\u9898\u89e3\u4f7f\u7528 **BFS** \u7b97\u6cd5\n\n### **\u8fd9\u9053\u9898\u6838\u5fc3\u601d\u8def\u5c31\u662f\uff1a**\n\n1.\u4ece $0$ \u5f00\u59cb\u5b58\u5165\u961f\u5217\u8fdb\u884c\u641c\u7d22\u3002\n\n\u8bbe **\u961f\u9996\u5143\u7d20** \u4e3a: $k$\u3002\n\n2.\u5c06 $k \\times 10+4$ \u5b58\u5165\u961f\u5217\u3002\n\n3.\u518d\u5c06 $k \\times 10+7$ \u5b58\u5165\u961f\u5217\u3002\n\n4.\u76f4\u5230 $k\\geqslant n$ \u4e3a\u6b62\u3002\n\nps:\u4e00\u5b9a\u662f\u5148\u653e\u5165 $k \\times 10+4$ \uff0c\u518d\u653e\u5165 $k \\times 10+7$ ,\u5426\u5219\u65e0\u6cd5\u6ee1\u8db3:\n\n\u5bfb\u627e\u5927\u4e8e\u7b49\u4e8e $n$ \u7684 **\u6700\u5c0f** super lucky number\u3002\n\n### **\u5982\u4f55\u5224\u65ad\u6570\u5217\u4e2d $4$ \u548c $7$ \u7684\u4e2a\u6570\u662f\u5426\u76f8\u540c\uff1f**\n\n\u53ea\u9700\u8981\u5f00\u4e00\u4e2a\u7ed3\u6784\u4f53\u578b\u7684\u961f\u5217 $q$\u3002\n\n\u7528 $stp$ \u6765\u5224\u65ad\u8fd9\u4e2a\u6570\u662f\u5426\u7531\u6570\u91cf\u76f8\u7b49\u7684 $4$ \u548c $7$ \u7ec4\u6210\u3002\n\n\u6bcf\u6b21\u5b58\u5165 $k \\times 10+4$ \u540e\u3002\n\n```cpp\nstp++;\n```\n\u6bcf\u6b21\u5b58\u5165 $k \\times 10+7$ \u540e\u3002\n\n```cpp\nstp--;\n```\n\u5982\u679c $stp=0$ \u65f6\uff0c\u6570\u5217 $4$ \u548c $7$ \u6570\u91cf\u76f8\u540c\u3002\n\n## code\n\n```cpp\n//\u8bb0\u5f97\u5f00 long long,\u4e0d\u7136WA\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nstruct node{\n\tll x,stp;//\u4f9d\u6b21\u4ee3\u8868\u5f53\u524d\u7684\u503c\u548c\u662f\u5426 4 \u548c 7 \u6570\u91cf\u76f8\u540c\u3002\n};\nint main(){\n\tll n;\n\tcin>>n;\n\tqueue<node>q;\n\tq.push((node){0,0});\n\twhile(!q.empty()){\n\t\tnode k=q.front();\n\t\tif(k.x>=n&&k.stp==0){//\u5224\u65ad\u5f53\u524d\u6570\u503c\u662f\u5426\u5927\u4e8en\u4ee5\u53ca\u6ee1\u8db3 4 7 \u6570\u91cf\u76f8\u540c\u3002\n\t\t\tcout<<k.x;\n\t\t\treturn 0;\n\t\t}\n\t\tif(k.x<1e9){//\u65f6\u95f4\u4f18\u5316\uff0c\u5982\u679c\u5927\u4e8e\u6700\u5927\u503c\u6ca1\u5fc5\u8981\u518d\u8fdb\u884c\u4e0b\u53bb\u3002\n\t\t\tq.push((node){k.x*10+4,k.stp+1});\n\t\t\tq.push((node){k.x*10+7,k.stp-1});\n\t\t}\n\t\tq.pop();\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1614338726,
        "uid": 247220,
        "name": "StarryWander",
        "ccfLevel": 4,
        "title": "CF96B Lucky Numbers (easy)"
    },
    {
        "content": "BFS\u505a\u6cd5\n\n\u7528\u5e7f\u641c\u662f\u56e0\u4e3a\u8981\u627e\u6700\u5c0f\u7684\u6570\n\n\u4ee50\u4e3a\u8d77\u70b9\uff0c\u641c\u6bcf\u4e00\u4e2a\u53ef\u80fd\u7684\u6570\uff08\u56e0\u4e3a\u6bcf\u4e2a\u6570\u5fc5\u987b\u4e3a4\u62167\uff0c\u4e8e\u662f\u6bcf\u4e00\u4f4d\u5c31\u4e24\u79cd\u60c5\u51b5\uff0c$n<=10^9$\u6240\u4ee5\u53ef\u4ee5\u8fd9\u4e48\u641e\uff09\n\n\u6bcf\u6b21\u5f80\u5f53\u524d\u6570\u540e\u9762\u52a0\u4e0a4\u62167\uff08\u5148\u52a04\u4fdd\u8bc1\u6700\u5148\u641c\u51fa\u6765\u7684\u6700\u5c0f\uff09\n\n\u5224\u65ad\u5408\u6cd5\u7684\u6761\u4ef6\u5c31\u662f\u5927\u4e8en\u4e144\u548c7\u51fa\u73b0\u6b21\u6570\u76f8\u540c\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nlong long n;//longlong\u4fdd\u9669\ninline bool check(long long x) {//\u5224\u65ad\u5408\u6cd5\uff08\u5927\u4e8en\u7684\u5224\u65ad\u6211\u653e\u5916\u8fb9\u4e86\uff09\n    int a = 0, b = 0;\n    //a\u4e3a7\u51fa\u73b0\u6b21\u6570\uff0cb\u4e3a4\u51fa\u73b0\u6b21\u6570\n    while (x) {//\u6570\u6bcf\u4e00\u4f4d\u6570\n        if (x % 10 == 7) {\n            ++a;\n        } else {\n            ++b;\n        }\n        x /= 10;\n    }\n    return a == b;//\u4f4d\u6570\u76f8\u7b49\n}\nlong long bfs[10100], head, tail;\n//\u641eBFS\nint main() {\n    cin >> n;\n    bfs[tail++] = 0;//\u8d77\u70b9\n    while (head < tail) {\n        long long u = bfs[head++];\n        if (u >= n && check(u)) {//\u5408\u6cd5\n            cout << u << endl;\n            return 0;//\u7ed3\u675f\n        }\n        bfs[tail++] = u * 10 + 4;\n        bfs[tail++] = u * 10 + 7;\n        //\u641c\u63a5\u4e0b\u6765\u7684\u4e24\u79cd\u60c5\u51b5\n    }\n    return 0;\n}\n\n```",
        "postTime": 1530279053,
        "uid": 37539,
        "name": "_Qer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF96B \u3010Lucky Numbers (easy)\u3011"
    },
    {
        "content": "\u6765\u5440~\u6a21\u62df\u5440~\u53cd\u6b63\u6709~\u5927\u628a\u65f6\u5149~\n\n\u8fd9\u9898\u5176\u5b9e\u53ef\u4ee5\u6a21\u62df\uff0c\u6ca1\u6709\u6a21\u62df\u9898\u89e3\uff0c\u672c\u849f\u84bb\u6765\u4e00\u7bc7~~\n\n\u6e29\u99a8\u63d0\u793a\uff1a\u6a21\u62df\u6bd4\u8f83\u9ebb\u70e6\uff0c\u8003\u573a\u4e0d\u5efa\u8bae\u7528\u54e6~\n\n* _\u672c\u9898\u89e3\u4ec5\u4f9b\u53c2\u8003\uff0c\u614e\u7528\u6a21\u62df\uff01_ \n\n\u8fdb\u5165\u6b63\u9898\uff1a\n \n \u8fd9\u9898\u9996\u5148\u5224\u65ad\u4f4d\u6570\uff0c\u5947\u6570\u4f4d\u7684\u8bdd\u8981\u957f\u5ea6+1\uff0c\u76f4\u63a5\u8f93\u51fa\u3002\n \n \u5982\u679c\u7b2c\u4e00\u4f4d\u5927\u4e8e7\uff0c\u6ca1\u620f\uff0c\u53ea\u80fd\u589e\u52a0\u4f4d\u6570\uff0c\u76f4\u63a5\u8f93\u51fa\u3002\n \n \u5f53\u8fd9\u4e00\u4f4d\u4e3a4\u62167\uff0c\u76f4\u63a5\u4e0a\uff0c\u5982\u679c\u5c0f\u4e8e\uff0c\u540e\u9762\u6682\u65f6\u5168\u662f4\u3002\n \n \u5f53\u8fd9\u4e00\u4f4d\u5927\u4e8e7\uff0c\u5c31\u8981\u8fdb\u4f4d\uff08\u5177\u4f53\u505a\u6cd5\u53c2\u8003\u4e0b\u9762\u4ee3\u7801\uff09\u3002\n \n \u6700\u540e\u52244\u548c7\u7684\u4e2a\u6570\u662f\u5426\u76f8\u7b49\uff08\u5177\u4f53\u7ec6\u8282\u53c2\u8003\u4e0b\u9762\u4ee3\u7801\u6ce8\u91ca\uff09\n\n--------------------------------------\u8d85\u957f\u4ee3\u7801\u9884\u8b66--------------------------------------\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n\tstring s1,s2;\n\tcin>>s1;\n\tint s4=0,s7=0,l;\n\tl=s1.size();\n\tif(s1[0]>'7')\n\t{\n\t\tif(l%2)\n\t\t\tl+=1;\n\t\telse\n\t\t\tl+=2;\n\t}\n\tif(l%2)\n\t\tl++;\n\tif(l>s1.size())//\u7279\u5224\n\t{\n\t\tfor(int i=1;i<=l/2;i++)\n\t\t\tcout<<4;\n\t\tfor(int i=1;i<=l/2;i++)\n\t\t\tcout<<7;\n\t\treturn 0;\n\t}\n\tint t=0;\n\tfor(int i=l-1;i>=0;i--)//\u8fdb\u4f4d\n\t{\n\t\tif(s1[i]<'7'&&t)\n\t\t{\n\t\t\tt=0;\n\t\t\ts1[i]+=1;\n\t\t}\n\t\tif(s1[i]>'7')\n\t\t{\n\t\t\tt++;\n\t\t\ts1[i]='0';\n\t\t}\n\t}\n\tbool f=0;\n\tfor(int i=0;i<l;i++)//\u8f6c\u6362\u6210\u201847\u2019\u4e32\n\t{\n\t\tif(f)\n\t\t{\n\t\t\ts2+='4';\n\t\t\ts4++;\n\t\t}\n\t\tif(s1[i]=='4'&&!f)//\u7b49\u4e8e4\n\t\t{\n\t\t\ts2+='4';\n\t\t\ts4++;\n\t\t}\n\t\tif(s1[i]=='7'&&!f)//\u7b49\u4e8e7\n\t\t{\n\t\t\ts2+='7';\n\t\t\ts7++;\n\t\t}\n\t\tif(s1[i]>'4'&&s1[i]<'7'&&!f)//\u57284\u548c7\u4e4b\u95f4\n\t\t{\n\t\t\ts2+='7';\n\t\t\ts7++;\n\t\t\tf=1;\n\t\t}\n\t\tif(s1[i]<'4'&&!f)\n\t\t{\n\t\t\ts2+='4';\n\t\t\ts4++;\n\t\t\tf=1;\n\t\t}\n\t\tif(s1[i]>'7'&&!f)//\u5927\u4e8e7\u7684\u7279\u6b8a\u60c5\u51b5\n\t\t{\n\t\t\tfor(int j=i-1;j>=0;j--)\n\t\t\t{\n\t\t\t\tif(s2[j]=='4')//\u627e\u4e00\u4e2a\u524d\u9762\u76844\uff0c\u6539\u62107\uff0c\u8fd9\u6837\u540e\u9762\u7684\u5c31\u53ef\u4ee5\u5168\u662f4\n\t\t\t\t{\n\t\t\t\t\ts2[j]='7';\n\t\t\t\t\ts4--;\n\t\t\t\t\ts7++;\n\t\t\t\t\tf=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!f)\n\t\t\t{\n\t\t\t\tl+=2;\n\t\t\t\tfor(int i=1;i<=l/2;i++)\n\t\t\t\t\tcout<<4;\n\t\t\t\tfor(int i=1;i<=l/2;i++)\n\t\t\t\t\tcout<<7;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n   //\u6ce8\u610f\uff01\u4ee5\u4e0b\u6709\u5751\uff01\n\tif(s7>s4)//\u5f537\u6bd44\u591a\n\t{\n\t\tfor(int i=l-1;i>=0;i--)\n\t\t{\n\t\t\tif(s2[i]=='4')//\u5c06\u4e00\u4e2a4\u6539\u4e3a7\uff0c\u8fd9\u65f6\u4e00\u5b9a\u5927\u4e8e\u539f\u6570\uff0c\u540e\u9762\u76847\u6539\u62104\uff0c\u8ba94\u548c7\u4e2a\u6570\u76f8\u7b49\u3002\n\t\t\t{\t\n\t\t\t\ts2[i]='7';\n\t\t\t\ts4--;\n\t\t\t\ts7++;\n\t\t\t\tfor(int j=i+1;j<l;j++)\n\t\t\t\t{\n\t\t\t\t\tif(s7>s4&&s2[j]=='7')\n\t\t\t\t\t{\n\t\t\t\t\t\ts2[j]='4';\n\t\t\t\t\t\ts4++;\n\t\t\t\t\t\ts7--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(s7>s4)//\u8fd8\u662f\u5927\u4e8e\u5c31\u5f7b\u5e95\u6ca1\u6551\n\t\t{\n\t\t\tl+=2;\n\t\t\tfor(int i=1;i<=l/2;i++)\n\t\t\t\tcout<<4;\n\t\t\tfor(int i=1;i<=l/2;i++)\n\t\t\t\tcout<<7;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tif(s4>s7)//4\u6bd47\u591a\n\t{\n\t\tfor(int i=l-1;i>=0;i--)\n\t\t{\n\t\t\tif(s4==s7)\n\t\t\t\tbreak;\n        if(s2[i]=='4')//\u5c3d\u91cf\u6539\u540e\u9762\u7684\uff0c\u8ba9\u6570\u6700\u5c0f\n        {\n              s2[i]='7';\n              s4--;\n              s7++;\n        }\n\t\t}\n\t}\n\tcout<<s2;//\u603b\u7b97\u5b8c\u5de5\u4e86\u3002\u3002\u3002\n\treturn 0;\n}\n```\n\n\u8d70\u8fc7\u8def\u8fc7\uff0c\u70b9\u4e2a\u8d5e\u5457QAQ",
        "postTime": 1583286358,
        "uid": 95170,
        "name": "Little_Hamster",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF96B \u3010Lucky Numbers (easy)\u3011"
    },
    {
        "content": "\u5f88\u660e\u663e\uff0c\u7b54\u6848\u7684\u957f\u5ea6(lenans)\u662f\u4e00\u4e2a\u5076\u6570\u3002\u82e5\u7ed9\u7684\u6570\u957f\u5ea6(len)\u662f\u5076\u6570\uff0c\u90a3\u4e48lenans\u5fc5\u4e3alen\u6216len+2.\u5426\u5219lenans\u4e3alen+1\n\n\u5f97\u5230\u4e86lenans\u540e\uff0c\u5c31\u53ef\u4ee5\u7528dfs\u5f97\u5230\u7b54\u6848\u3002\n\nc++\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\n\nstring a,ans;\nint n,h;\n\nbool check()//\u5224\u65adans\u662f\u5426\u53ef\u884c\n{\n\tint _7=0,_4=0,sum=0;\n\tfor (int i=0;i<h;i++)\n\t{\n\t\tif (ans[i]=='7')_7++;\n\t\telse if (ans[i]=='4')_4++;\n\t\telse return 0;//\u5982\u679c\u4e0d\u662f4\u4e5f\u4e0d\u662f7\uff0creturn 0\n\t\tsum=sum*10+ans[i]-'0';\n\t}\n\treturn _7==_4&&sum>=n;\n}\n\nvoid dfs(int k)//dfs\n{\n\tif (k==h)\n\t{\n\t\tif (check())\n\t\t\t{\n\t\t\t\tfor (int i=0;i<h;i++)\n\t\t\t\t\tcout<<ans[i];\n\t\t\t\texit(0);//\u56e0\u4e3a\u8d4b\u503c\u65f6\u662f\u51484\u518d7\uff0c\u6240\u4ee5\u5f97\u5230\u4e00\u4e2a\u7b54\u6848\u540e\u53ef\u4ee5\u76f4\u63a5\u9000\u51fa\u7a0b\u5e8f\n\t\t\t}\n\t\treturn;\n\t}\n\tans[k]='4';\n\tdfs(k+1);\n\tans[k]='7';\n\tdfs(k+1);\n}\n\nsigned main()\n{\n\tcin>>a;//\u7528string\u8bfb\u5165\uff0c\u518d\u8f6c\u6362\u6210long long\n\tint len=a.size();\n\tfor (int i=0;i<len;i++)\n\t\tn=n*10+a[i]-'0';\n\tif (len%2==0)\n\t{\n\t\th=len;\n\t\tdfs(0);\n\t\th=len+2;\n\t\tdfs(0);\n\t}\n\telse\n\t{\n\t\th=len+1;\n\t\tdfs(0);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1567603297,
        "uid": 141179,
        "name": "pigstd",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF96B \u3010Lucky Numbers (easy)\u3011"
    },
    {
        "content": "~~next_permutation\u662f\u4e2a\u597d\u4e1c\u897f\uff0cOier\u90fd\u8981\u73cd\u60dc\u5b83\u3002~~\n\n\u4e0a\u7a0b\u5e8f\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define l(s) s.size()\nint up(int n)\n{\n    return(n%2?n/2+1:n/2);//\u4e0a\u53d6\u6574\n}\nstring s;\nint se,fo,el;\nint main()\n{\n    cin>>s;\n    for(int i=0;i<l(s);i++)\n        if(s[i]=='7')\n            se++;\n        else if(s[i]=='4')\n            fo++;\n        else\n            el++;\n    //\u7edf\u8ba14\u548c7\u7684\u4e2a\u6570\n    if(fo==se&&el==0)\n    {\n        cout<<s;\n        return 0;\n    }\n    //4747474477\uff1f\n    int n=l(s);\n    int m=up(n);\n    string t;\n    for(int i=0;i<m;i++)\n        t+=\"47\";\n    sort(t.begin(),t.end());\n    //\u6784\u9020Lucky Numbers\n    string u;\n    for(int i=0;i<l(s)/2;i++)\n        u+='7';\n    for(int i=l(s)/2;i<l(s);i++)\n        u+='4';\n    if(l(s)&1)//&1=%2(\u4f4d\u8fd0\u7b97)\n    {\n        cout<<t;\n        return 0; \n    }\n    else if(s>=u)//\u7279\u5224\uff0c\u5982\u679cs>=777\u2026444\u2026\n    {\n        t+=\"47\";\n        sort(t.begin(),t.end());\n        cout<<t;\n        return 0;\n    }\n    do\n        if(t>=s)\n        {\n            cout<<t;\n            return 0;\n        }\n    while(next_permutation(t.begin(),t.end()));//\u8981\u7528do--while\n    return 0;\n}\n```\n",
        "postTime": 1558869255,
        "uid": 98489,
        "name": "rng_59",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF96B \u3010Lucky Numbers (easy)\u3011"
    },
    {
        "content": "### \u4e00\u3001\u601d\u8def\n\n\u672c\u9898\u53ef\u4ee5\u4f7f\u7528[\u5bbd\u5ea6\u4f18\u5148\u641c\u7d22](https://baike.baidu.com/item/%E5%AE%BD%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/5224802?fromtitle=BFS&fromid=542084&fr=aladdin)\u53bb\u505a\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u4e00\u6b65\u6b65\u679a\u4e3e\u53ea\u542b\u6709 $4$ \u548c $7$ \u7684\u6570\u5b57\uff0c\u6bcf\u4e00\u6b21\u589e\u52a0 $4$ \u6216 $7$ \u4f5c\u4e3a\u6269\u5c55\uff0c\u76f4\u5230\u627e\u5230\u7b26\u5408\u8981\u6c42\u7684\u6570\u5b57\u4e3a\u6b62\u3002\n\n\u672c\u9898 $1\\le n\\le10^9$\uff0c\u5e76\u4e0d\u662f\u5f88\u5927\uff0c\u4f46\u662f\u9700\u8981\u4f7f\u7528 `long long` \u6570\u636e\u7ed3\u6784\u3002\n\n### \u4e8c\u3001\u5b8c\u6574\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<queue>\nusing namespace std;\n#define int long long//\u4e00\u52b3\u6c38\u9038\u3002\nint n;\nqueue<int>num_list;//BFS\u961f\u5217\u3002\nbool check(int num)//\u68c0\u67e5\u6570\u636e\u662f\u5426\u7b26\u5408\u8981\u6c42\u3002\n{\n\tif(num<n)//\u592a\u5c0f\uff0c\u4e0d\u53ef\u80fd\u3002\n\t{\n\t\treturn false;\n\t}\n\tint temp=num;\n\tint cnt_4=0,cnt_7=0;\n\twhile(temp)//\u6570\u6570\u4f4d\u3002\n\t{\n\t\tint digit=temp%10;\n\t\ttemp/=10;\n\t\tif(digit==4)\n\t\t{\n\t\t\tcnt_4++;\n\t\t}\n\t\telse if(digit==7)\n\t\t{\n\t\t\tcnt_7++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif(cnt_4==cnt_7)//4\u4e0e7\u7684\u6570\u91cf\u4e00\u81f4\uff1a\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nsigned main()\n{\n\tscanf(\"%lld\",&n);\n\tnum_list.push(0);//\u5148\u8ba90\u8fdb\u961f\uff0c\u5360\u4e2a\u4f4d\u7f6e\u3002\n\twhile(!num_list.empty())\n\t{\n\t\tint num=num_list.front();//\u53d6\u6570\u3002\n\t\tnum_list.pop();//\u5f39\u51fa\u3002\n\t\tif(check(num))\n\t\t{\n\t\t\tprintf(\"%lld\\n\",num);//\u8f93\u51fa\u3002\n\t\t\treturn 0;//\u5b8c\u7ed3\u6492\u82b1\uff01\n\t\t}\n\t\tnum_list.push(num*10+4);\n\t\tnum_list.push(num*10+7);\n\t\t//\u601d\u8003\uff1a\u4ee5\u4e0a\u4e24\u884c\u662f\u5426\u53ef\u4ee5\u4e92\u6362\uff1f\n\t}\n\treturn 0;\n}\n\n```\n\n### \u4e09\u3001\u601d\u8003\u9898\u7b54\u6848\n\n\u5f53\u7136\u4e0d\u884c\u3002\u56e0\u4e3a\uff0c\u5982\u679c\u4e92\u6362\uff0c\u56e0\u4e3a\u53ea\u8981 $num\\ge0$\uff0c\u5c31\u6709 $num\\times10+4<num\\times10+7$\uff0c\u800c\u4e92\u6362\u4ee3\u7801\u5c31\u5bfc\u81f4\u8f93\u51fa\u7684\u6570\u5b57\u53ef\u80fd\u4e0d\u662f\u6700\u5c0f\u7684\uff0c\u800c\u662f\u7b2c\u4e8c\u5c0f\u7684\u3002\n\n### \u56db\u3001\u540e\u8bb0\n\n\u8bb0\u5f55\uff1a<https://www.luogu.com.cn/record/51569117>\u3002\n\nBy [dengzijun](https://www.luogu.com.cn/user/387836)",
        "postTime": 1622989523,
        "uid": 387836,
        "name": "dengzijun",
        "ccfLevel": 5,
        "title": "CF0096B\u9898\u89e3"
    },
    {
        "content": "# \u9898\u89e3 CF96B \u3010Lucky Numbers (easy)\u3011\n\n\u6ca1\u8ba4\u771f\u770b\u8fc7\u9898\u76ee\u7684\u540c\u5b66\u8bf7\u8d70\u8fd9\u91cc\uff08[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF96B)\uff09\n\n\u8fd9\u9053\u9898\u5c31\u662f\u6c42\u4e00\u4e2aLucky Number\u3002\n\n\u5bf9\u4e8eLucky Number\u7684\u8981\u6c42\u662f\uff1a\n\n```\n\u662f\u53ea\u542b\u6709 4\uff0c7 \u4e14 4 \u7684\u4f4d\u6570\u7b49\u4e8e 7 \u7684\u4f4d\u6570\u7684\u6570\u5b57\n```\n\n\u5148\u770b\u524d\u534a\u53e5\u8981\u53ea\u6709 4 \u548c 7 \u3002\u5f88\u660e\u663e\u5c31\u662f\u4e00\u4e2a\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\n\n\u518d\u524d\u9762\u4e00\u4e2a\u5df2\u6709\u6570\u5b57\u7684\u540e\u9762\u52a0\u4e0a 4 \u6216 7\u3002\n\n\u5b9a\u4e49\u524d\u4e00\u4e2a\u4e3as\uff1b\n\n\u6240\u4ee5 Lucky Number = s * 10 + 4 \u6216 s * 10 + 7\u3002\n\n\u7136\u540e\u8bb0\u5f55\u4f4d\u6570\u4fdd\u8bc1 <= 19\n\n\u6240\u4ee5\u53ef\u4ee5\u5199\u51fadfs\u51fd\u6570\uff1a\n\n```\ndfs(k+1,s*10+4); \ndfs(k+1,s*10+7); \n```\n\n## BUT\n\n\u8fd9\u91cc\u8981\u6c42 4 \u7684\u4e2a\u6570\u548c 7 \u7684\u4e2a\u6570\u8981\u4e00\u6837\u591a\n\n\u6240\u4ee5\u8981\u5728\u539fdfs\u7684\u57fa\u7840\u4e0a\u52a0\u4e0a\u4e00\u4e2a\u5bf9\u4e8e 4 \u7684\u4e2a\u6570\u548c 7 \u7684\u4e2a\u6570 \u7684\u8ba1\u6570\u5668\n\n\u53ea\u6709\u6570\u503c\u76f8\u540c\u65f6\u8be5\u6570\u5b57\u624d\u662f Lucky Number\n\n\u6545\u66f4\u65b0\u7684dfs\u51fd\u6570\u5982\u4e0b\uff1a\n\n```\ndfs(k+1,s*10+4,n4+1,n7); \ndfs(k+1,s*10+7,n4,n7+1);\n```\n\n\u6700\u540e\u6392\u5e8f\u4e00\u4e0b\uff0c\u8f93\u5165\u8981\u5bf9\u6bd4\u7684\u6570\uff0c\u7136\u540e while\uff08true\uff09 \u987a\u5e8f\u6a21\u62df\uff0c\u5bfb\u627e\u7b2c\u4e00\u4e2a\u5927\u4e8e\u6240\u8981\u6c42\u6570\u7684 Lucky Number\uff0c\u9000\u51fa\u5faa\u73af\n\n# code\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nll lucky_num[10000050];\nll tot;\nvoid dfs(ll k,ll s,ll n4,ll n7){\n\tif (s && n4 == n7) lucky_num[++tot]=s; \n\tif (k == 19){\n\t\treturn;\n\t}\n\tdfs(k+1,s*10+4,n4+1,n7); \n\tdfs(k+1,s*10+7,n4,n7+1); \n}\nvoid add_index(){\n\tdfs(1,0,0,0); \n\tsort(lucky_num+1,lucky_num+tot+1); \n}\nint main(){\n\tadd_index();\n\tll n;\n\tscanf(\"%lld\",&n);\n\tfor (ll i = 1; true; ++i){\n\t\tif(lucky_num[i] < n){\n\t\t\tcontinue;\n\t\t}\n\t\tprintf(\"%lld\\n\",lucky_num[i]);\n\t\tbreak;\n\t}\n}\n\n```\n",
        "postTime": 1596718788,
        "uid": 129390,
        "name": "yangwenbin",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF96B \u3010Lucky Numbers (easy)\u3011"
    },
    {
        "content": "# \u8fd9\u9898\u633a\u6709\u8da3\u7684\u5462\uff01\n\n## \u4e4d\u4e00\u770b\u6570\u636e\u8303\u56f4\uff0c\u2026\u2026\u8d2a\u5fc3\uff1f\u4e0d\u5bf9\uff0c\u6211\u4eec\u9700\u8981\n\n### \u6ee1\u8db34,7\u7684\u6570\u91cf\u76f8\u540c\uff0c\u60c5\u51b5\u6709\u5f88\u591a\uff0c\u6240\u4ee5\uff0c\u5148\u6253\u4e2a\u8868\u5440\uff01\n\n\u5148\u5199dfs\u7a0b\u5e8f\uff0c\u4e0d\u75281~1e9\u7684\u66b4\u529b\u641c\uff0c\u53ea\u9700\u8981\u8ba94,7\u7684\u6570\u4f4d\u76f8\u540c\u5c31\u884c\u4e86\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u6570\u6700\u591a\u53ea\u67098\u4f4d\uff0c\u4e5f\u5c31\u662f\u8bf44,7\u6700\u591a4\u4f4d\uff0c\u8fd9\u6837\u76f4\u63a5for\u4e5f\u53ef\u4ee5\uff0c\u627e\u51fa\u8fd9\u4e9b$lucky$  $number$\u540e\uff0c\u76f4\u63a5\u5224\u65ad\u5c31\u884c\u4e86\u3002\n\n#### dfs\u7684\u7a0b\u5e8f\u5728\u6b64\u7565\u8fc7\u3002\n\n\n------------\n\nAC\uff1a\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n;\nlong long ln[350]={47,74,4477,4747,4774,7447,7474,7744,444777,447477,447747,447774,474477,474747,474774,477447,477474,477744,744477,744747,744774,747447,747474,747744,774447,774474,774744,777444,44447777,44474777,44477477,44477747,44477774,44744777,44747477,44747747,44747774,44774477,44774747,44774774,44777447,44777474,44777744,47444777,47447477,47447747,47447774,47474477,47474747,47474774,47477447,47477474,47477744,47744477,47744747,47744774,47747447,47747474,47747744,47774447,47774474,47774744,47777444,74444777,74447477,74447747,74447774,74474477,74474747,74474774,74477447,74477474,74477744,74744477,74744747,74744774,74747447,74747474,74747744,74774447,74774474,74774744,74777444,77444477,77444747,77444774,77447447,77447474,77447744,77474447,77474474,77474744,77477444,77744447,77744474,77744744,77747444,77774444,4444477777,4444747777,4444774777,4444777477,4444777747,4444777774,4447447777,4447474777,4447477477,4447477747,4447477774,4447744777,4447747477,4447747747,4447747774,4447774477,4447774747,4447774774,4447777447,4447777474,4447777744,4474447777,4474474777,4474477477,4474477747,4474477774,4474744777,4474747477,4474747747,4474747774,4474774477,4474774747,4474774774,4474777447,4474777474,4474777744,4477444777,4477447477,4477447747,4477447774,4477474477,4477474747,4477474774,4477477447,4477477474,4477477744,4477744477,4477744747,4477744774,4477747447,4477747474,4477747744,4477774447,4477774474,4477774744,4477777444,4744447777,4744474777,4744477477,4744477747,4744477774,4744744777,4744747477,4744747747,4744747774,4744774477,4744774747,4744774774,4744777447,4744777474,4744777744,4747444777,4747447477,4747447747,4747447774,4747474477,4747474747,4747474774,4747477447,4747477474,4747477744,4747744477,4747744747,4747744774,4747747447,4747747474,4747747744,4747774447,4747774474,4747774744,4747777444,4774444777,4774447477,4774447747,4774447774,4774474477,4774474747,4774474774,4774477447,4774477474,4774477744,4774744477,4774744747,4774744774,4774747447,4774747474,4774747744,4774774447,4774774474,4774774744,4774777444,4777444477,4777444747,4777444774,4777447447,4777447474,4777447744,4777474447,4777474474,4777474744,4777477444,4777744447,4777744474,4777744744,4777747444,4777774444,7444447777,7444474777,7444477477,7444477747,7444477774,7444744777,7444747477,7444747747,7444747774,7444774477,7444774747,7444774774,7444777447,7444777474,7444777744,7447444777,7447447477,7447447747,7447447774,7447474477,7447474747,7447474774,7447477447,7447477474,7447477744,7447744477,7447744747,7447744774,7447747447,7447747474,7447747744,7447774447,7447774474,7447774744,7447777444,7474444777,7474447477,7474447747,7474447774,7474474477,7474474747,7474474774,7474477447,7474477474,7474477744,7474744477,7474744747,7474744774,7474747447,7474747474,7474747744,7474774447,7474774474,7474774744,7474777444,7477444477,7477444747,7477444774,7477447447,7477447474,7477447744,7477474447,7477474474,7477474744,7477477444,7477744447,7477744474,7477744744,7477747444,7477774444,7744444777,7744447477,7744447747,7744447774,7744474477,7744474747,7744474774,7744477447,7744477474,7744477744,7744744477,7744744747,7744744774,7744747447,7744747474,7744747744,7744774447,7744774474,7744774744,7744777444,7747444477,7747444747,7747444774,7747447447,7747447474,7747447744,7747474447,7747474474,7747474744,7747477444,7747744447,7747744474,7747744744,7747747444,7747774444,7774444477,7774444747,7774444774,7774447447,7774447474,7774447744,7774474447,7774474474,7774474744,7774477444,7774744447,7774744474,7774744744,7774747444,7774774444,7777444447,7777444474,7777444744,7777447444,7777474444,7777744444};\nint main(){\n    int n;\n    cin>>n;\n    for(int i=0;i<350;i++){\n        if(ln[i]>=n){\n            cout<<ln[i]<<endl;\n            return 0;\n        }\n    }\n    return 0;\n}\n```\n",
        "postTime": 1571748547,
        "uid": 225299,
        "name": "Coding__QAQ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF96B \u3010Lucky Numbers (easy)\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u4e00\u770b\u5c31\u662f01\u7a77\u4e3e\u3002\n\u539f\u56e0\u5982\u4e0b\uff1a\n\n- \u8fd9\u91ccn\u6700\u5927\u624d\u5230$10^9$\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u662f$1,000,000,000$\uff0c\u6211\u4eec\u679a\u4e3e\u6bcf\u4e00\u4f4d\u662f\u51e0\uff0c\u6700\u591a\u4e5f\u5c312^10\uff0c$1,024$\u3002\n- \u8fd9\u91cc\u6bcf\u4e2a\u6570\u4f4d\u5c31\u4e24\u79cd\u53ef\u80fd\uff0c'$4$'\u6216'$7$'\uff0c\u5f88\u660e\u663e\u662f01\u7a77\u4e3e\u3002\n---\n### \u8981\u70b9\n- \u4e3a\u4e86\u6c42\u4f4d\u6570\u65b9\u4fbf\uff0c\u6211\u4eec\u7528string\u6765\u5b58\u50a8\uff0c\u540e\u9762\u4e5f\u5bb9\u6613\u7528\u6570\u4f4d\u505a01\u7a77\u4e3e\u3002\n- \u7531\u4e8e4\u548c7\u7684\u6570\u91cf\u8981\u76f8\u540c\uff0c\u5982\u679c\u8fd9\u4e2a\u6570\u7684\u6570\u4f4d\u53ea\u6709\u5947\u6570\u4e2a\uff0c\u90a3\u4e48\u5c31\u5f88\u7b80\u5355\uff1a\n```\ninput:\n111111111\noutput:\n4444477777\n-----v----\n(\u6570\u4f4d+1)/2\u4e2a4\uff0c(\u6570\u4f4d+1)/2\u4e2a7\u3002\n```\n- \u7531\u4e8e4\u548c7\u7684\u6570\u91cf\u8981\u76f8\u540c\uff0c\u5982\u679c\u8fd9\u4e2a\u6570\u7684\u6570\u4f4d\u662f\u5076\u6570\u4e2a\uff0c\u90a3\u4e48\u4e5f\u5f88\u7b80\u5355\uff1a\n```\n\u5982\u679c \u8fd9\u4e2a\u6570\u5927\u4e8e 7777744444\n              -----v----\n          size/2\u4e2a7\uff0csize/2\u4e2a4\n\n\n     \u8f93\u51fa444444777777\u3002\n        ------v------\n      size/2+1\u4e2a4\uff0csize/2+1\u4e2a7\n\n\n\u5426\u5219{\n\n      01\u7a77\u4e3e\uff0c\u770b\u54ea\u79cd\u6700\u597d\uff0c\u6ce8\u610f\u8fb9\u754c\u548ccheck\uff08\u5224\u65ad\u662f\u5426\u4e3aLucky Numbers\uff09\u3002\n\n      \u6253\u5370\u7ed3\u679c\u3002\n}\n\n\u7ed3\u675f\u7a0b\u5e8f\u3002\n```\n~~\u7248\u5f0f\u603b\u662f\u4f1a\u51fa\u95ee\u9898\uff0c\u5927\u5bb6\u51d1\u5408\u770b\u5427~~",
        "postTime": 1564884229,
        "uid": 214645,
        "name": "\u5b66\u9738\u58f9\u53f7",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF96B \u3010Lucky Numbers (easy)\u3011"
    }
]