[
    {
        "content": "\u8fd9\u9053\u9898\u8fd8\u662f\u633a\u7b80\uff08du\uff09\u5355\uff08liu\uff09\u7684\u3002\n\n\u9996\u5148\uff0c \u8fd9\u9898\u5c31\u662f\u5178\u578b\u7684\u8d2a\u5fc3\u9898\u3002 \u4e00\u770b\uff0c $N$ \u548c $M$ \u624d $100$ \uff0c \u66b4\u529b\u6ca1\u95ee\u9898\u554a\uff01\n\n\u601d\u8def\u4e5f\u662f\u633a\u7b80\u5355\u7684\uff0c \u5b83\u8981\u6c42\u6211\u4eec\u6c42\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u3002 \u5148\u770b\u6700\u5c0f\u503c\uff0c \u90a3\u4e48\u5b57\u7b26\u4e32\u7684\u6570\u91cf\u8d8a\u591a\uff0c \u7ed9\u5b83\u7684\u503c\u80af\u5b9a\u5f97\u6700\u5c0f\u8fa3\uff01 \u90a3\u4e48\u6700\u5927\u503c\u5462\uff1f ~~\uff08\u53cd\u4e00\u53cd\u4e0d\u5c31\u884c\u4e86\uff09~~\n\n\u76f8\u4fe1\u5927\u5bb6\u5230\u8fd9\u4e00\u6b65\u90fd\u662f\u80fd\u60f3\u901a\u7684\u3002 \u73b0\u5728\u95ee\u9898\u6765\u4e86\uff0c \u600e\u4e48\u4fdd\u5b58\u5b57\u7b26\u4e32\u7684\u4e2a\u6570\u5462\uff1f\n\n~~\u6211\u4f1a\u5b57\u5178\u6811\uff01~~\n\n~~\u6211\u4f1a\u4e8c\u5206\uff01~~\n\n\u5176\u5b9e\uff0c \u5728 $C++$ \u7684 $STL$ \u9762\u524d\uff0c \u90fd\u592a\u590d\u6742\u4e86\uff01\n\n## Map!!!\n\n\u8fd8\u8bb0\u5f97\u5c0f\u5b66\u7684\u65f6\u5019\u7528\u8fc7\u7684\u6876\u6392\u5e8f\u5417\uff1f \u539f\u7406\u5176\u5b9e\u662f\u4e00\u6837\u7684\u3002\n\n\u4f46\u662f\u6570\u7ec4\u7684\u4e0b\u6807\u4e0d\u80fd\u7528\u5b57\u7b26\u4e32\u554a\uff01\n\n\u522b\u614c\uff01\n\n\u4e0d\u662f\u8fd8\u6709 MAP \u5728\u8fd9\u513f\u6321\u7740\u5417\uff1f\n\n\u53ef\u662f MAP \u4e0d\u80fd\u6392\u5e8f\uff08\u5c31\u7b97\u80fd\u6392\u5e8f\u6211\u4e5f\u4e0d\u4f1a\u554a\uff01\uff09\uff0c \u600e\u4e48\u529e\uff1f\n\nMAP \u9000\u5f79\u4e86\uff0c \u6570\u7ec4\u63a5\u4e0a\u4e0d\u5c31\u884c\u4e86\uff1f\n\n\u628a MAP \u91cc\u7684\u503c\u5b58\u5230\u6570\u7ec4\u91cc\uff0c \u518d\u6392\u5e8f\u5440\uff01\n\n#### NOTICE\uff1a\n\n1.MAP \u5176\u5b9e\u5c31\u662f\u4e00\u79cd\u4e0b\u6807\u80fd\u5b9a\u4e49\u6210\u4efb\u4f55\u7c7b\u578b\u7684\u6570\u7ec4\u3002\n\n2.\u628a MAP \u91cc\u7684\u503c\u5b58\u5230\u6570\u7ec4\u91cc\u7684\u65f6\u5019\uff0c \u8981\u8bb0\u5f97\u4e0d\u80fd\u91cd\u590d\u5b58\u3002\n\n### \u4ee3\u7801\u541b\uff1a\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<map>\n#include<cstring>\nusing namespace std;\nint n, m, a[100001], c[100001], len = 0, Min=0, Max=0;\nmap <string, int> b;\nstring s[100001];\nint main() {\n\tcin >> n >> m;\n\tfor(int i = 1; i <= n; i++) cin >> a[i];\n\tfor(int i = 1; i <= m; i++) {\n\t\tcin >> s[i];\n\t\tb[s[i]]++;\n\t}\n\tsort(a + 1, a + n + 1, less<int>());\n\tfor(int i = 1; i <= m; i++) {\n\t\tif (b[s[i]] != 0) c[++len] = b[s[i]];\n\t\tb[s[i]] = 0;\n\t}\n\tsort(c + 1, c + len + 1, greater<int>());\n\tfor(int i = 1; i <= len; i++) {\n\t\tMin += c[i] * a[i];\n\t\tMax += c[i] * a[n - i + 1];\n\t}\n\tcout << Min << \" \" << Max;\n\treturn 0;\n}\n```\n                             \n\u5b8c\u7ed3\u6492\u82b1\uff01\n\n\n\n\n",
        "postTime": 1603597770,
        "uid": 355448,
        "name": "Fido_Puppy",
        "ccfLevel": 0,
        "title": "CF12C Fruits"
    },
    {
        "content": "\u9996\u5148\u8ba9\u6211\u6307\u51fa\u4e00\u4e2a\u7ffb\u8bd1\u4e2d\u7684\u7f3a\u6f0f\uff1a\n\n\u5982\u679c\u4f1a\u51fa\u73b0\u4e0d\u540c\u5b57\u7b26\u4e32\u7684\u6570\u91cf\u6bd4 $n$ \u5927\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u5c82\u4e0d\u662f\u8981\u5206\u7c7b\u8ba8\u8bba...\u4f46\u662f\u8fd9\u9898\u8c8c\u4f3c\u6ca1\u6709\u5230\u8fbe\u90a3\u6837\u7684\u96be\u5ea6...\n\n\u6211\u4ed4\u7ec6\u7ffb\u770b\u539f\u9898\u9762\uff0c\u627e\u5230\u4e86\u4e00\u53e5\u8bdd\uff1a\n\nIt is guaranteed that the number of distinct fruits from the list is less of equal to $n$\n\n\u7b80\u5355\u7ffb\u8bd1\u4e00\u4e0b\uff1a**\u4fdd\u8bc1\u4e0d\u540c\u7684\u5b57\u7b26\u4e32\u6570\u91cf\u5c0f\u4e8e** $n$ \u3002\n\n\u4e8e\u662f\u8fd9\u9898\u5c31\u7b80\u5355\u5f88\u591a\u4e86\u3002\n\n------------\n\n\u8003\u8651\u600e\u4e48\u5206\u914d\u4ef7\u683c\u3002\u6211\u4eec\u53ef\u4ee5\u9a6c\u4e0a\u5f97\u51fa\u4e00\u4e2a\u8d2a\u5fc3\u7b56\u7565\uff1a**\u5bf9\u4e8e\u603b\u4ef7\u683c\u6700\u5927\uff0c\u4f18\u5148\u628a\u5927\u7684\u4ef7\u683c\u5206\u914d\u7ed9\u6570\u91cf\u6700\u591a\u7684\u5b57\u7b26\u4e32\uff1b\u5bf9\u4e8e\u603b\u4ef7\u683c\u6700\u5c0f\uff0c\u4f18\u5148\u628a\u6700\u5c0f\u7684\u4ef7\u683c\u5206\u914d\u7ed9\u6570\u91cf\u6700\u591a\u7684\u5b57\u7b26\u4e32** \u3002\n\n\u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u8981**\u7edf\u8ba1\u6bcf\u79cd\u5b57\u7b26\u4e32\u7684\u6570\u91cf\uff0c\u7136\u540e\u6309\u7167\u6570\u91cf\u7684\u591a\u5c11\u8fdb\u884c\u5206\u914d**\u3002\n\n\u5177\u4f53\u7684\u5b9e\u73b0\u6d41\u7a0b\u662f\uff1a\n1. \u628a $n$ \u4e2a\u4ef7\u683c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff1b\n2. \u628a $m$ \u4e2a\u5b57\u7b26\u4e32\u53bb\u91cd\uff0c\u7edf\u8ba1\u6bcf\u79cd\u5b57\u7b26\u4e32\u7684\u4e2a\u6570\uff1b\n3. \u628a\u6bcf\u79cd\u5b57\u7b26\u4e32\u7684\u4e2a\u6570\u6392\u5e8f\uff1b\n4. \u5206\u522b\u8ba1\u7b97\u6700\u5c0f\u603b\u4ef7\u683c\u548c\u6700\u5927\u603b\u4ef7\u683c\u3002\n\n\u90a3\u4e48\uff0c\u4e0b\u9762\u6765\u5b9e\u73b0\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio> \n#include<string>\n#include<algorithm>\n#define rgt register int\n#define ll long long\n#define MX 111\nusing namespace std;\n\nint cost[MX],cnt[MX];\n/* cost[]\u4e3a\u8bfb\u5165\u7684n\u4e2a\u4ef7\u683c\n  cnt[]\u4e3a\u6bcf\u79cd\u5b57\u7b26\u4e32\u7684\u6570\u91cf*/\nstring fruits[MX];    //fruits\u4e3a\u53bb\u91cd\u540e\u7684\u5b57\u7b26\u4e32\nint n,m,len,minans,maxans;\n//len\u4e3a\u5b57\u7b26\u4e32\u7684\u79cd\u7c7b\u7684\u6570\u91cf\n  \nint main()\n{\n\tstring str;\n\tbool fd;\n  \n\tcin>>n>>m;\n\tfor(rgt i=0;i<n;i++)\n\t\tcin>>cost[i];\n\tsort(cost,cost+n);\n    //\u8bfb\u5165\u4ef7\u683c\u5e76\u6392\u5e8f\n  \n\tfor(rgt i=0;i<m;i++){\n\t\tcin>>str;  //\u8bfb\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\n\t\tfd=false;\n\t\tfor(rgt j=0;j<len;j++){\n\t\t\tif(str==fruits[j]){  //\u5982\u679c\u91cd\u590d\n\t\t\t\tfd=true;  //\u6807\u8bb0\n\t\t\t\tcnt[j]++;  //\u8ba1\u6570\n\t\t\t}\n\t\t}\n\t\tif(!fd){   //\u6ca1\u6709\u91cd\u590d\n\t\t\tfruits[len]=str;\n\t\t\tcnt[len]++;\n\t\t\tlen++;\n            //\u52a0\u4e00\u4e2a\u79cd\u7c7b\n\t\t}\n\t}\n\tsort(cnt,cnt+len);   //\u6570\u91cf\u6392\u5e8f\n                                \n\tfor(rgt j=0,i=len-1;i>=0;i--,j++){\n\t\tminans+=cnt[i]*cost[j];\n\t} //\u8ba1\u7b97\u6700\u5c0f\u4ef7\u683c\n  \n\tfor(rgt j=n-1,i=len-1;i>=0;i--,j--){\n\t\tmaxans+=cnt[i]*cost[j];\n\t} //\u8ba1\u7b97\u6700\u5927\u4ef7\u683c\n  \n\tcout<<minans<<\" \"<<maxans;   //\u8f93\u51fa\u7b54\u6848\n\t\n    return 0;\n}\n```\n",
        "postTime": 1580005331,
        "uid": 57421,
        "name": "fls233666",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF12C \u3010Fruits\u3011"
    },
    {
        "content": "~~\u771f\u662f\u4e00\u9053\u7e41\u7410\u7684\u9898~~\n\n~~\u9898\u89e3\u6709\u70b9\u957f\u770b\u4e0d\u4e0b\u53bb\u5c31\u7b97\u4e86\u5427~~\n\n\u8fd9\u9898\u53ef\u4ee5\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\u6765\u505a\uff0c\u4e00\u90e8\u5206\u662f\u6c42\u6700\u5927\u4ef7\u503c\uff0c\u53e6\u4e00\u90e8\u5206\u662f\u6c42\u6700\u5c0f\u4ef7\u503c\u3002\n\n\u8868\u8ff0\u53ef\u80fd\u4e0d\u662f\u5f88\u6e05\u6670\uff0c\u4e0d\u61c2\u7684\u53ef\u4ee5\u81ea\u5df1\u5148\u770b\u770b\u4ee3\u7801\uff0c\u7406\u89e3\u4e00\u4e0b\u7528\u5904\uff0c\u5b9e\u5728\u6709\u95ee\u9898\u5c31\u79c1\u4fe1\u6211\u5427\uff0c\u5982\u679c\u770b\u5230\u4f1a\u7b2c\u4e00\u65f6\u95f4\u56de\u590d\u7684\n____\n### **\u5148\u6765\u89e3\u51b3\u516c\u5171\u7684\u95ee\u9898\uff1a**\n\n#### \u9996\u5148\u662f\u53d8\u91cf\u548c\u51fd\u6570\u90e8\u5206\uff1a\n\n```cpp\nint n, m, v[110], minv = 0, maxv = 0;\n//\u4f9d\u6b21\u4e3a\u4ef7\u683c\u6570\u3001\u6c34\u679c\u6570\u3001\u6bcf\u4e2a\u4ef7\u683c\u3001\u6700\u5c0f\u4ef7\u503c\u3001\u6700\u5927\u4ef7\u503c\nstruct fruit{\n    string name;\n    int num;\n}arr[110];\nstring s;//\u8f93\u5165\u6c34\u679c\u540d\nint top;//\u6c34\u679c\u79cd\u7c7b\u6570\n//\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u8868\u793a\u6bcf\u4e2a\u6c34\u679c\uff0c\u6709\u6c34\u679c\u540d\uff08\u4ec5\u7528\u4e8e\u67e5\u8be2\uff09\u548c\u6570\u91cf\nbool com(fruit a, fruit b) {\n    return a.num < b.num;\n}\n//\u7ed3\u6784\u4f53fruit\u6570\u7ec4\u6392\u5e8f\u9700\u8981\u7684\u51fd\u6570\uff0c\u5347\u5e8f\nbool comn(int a, int b) {\n    return a < b;\n}\n//\u6570\u7ec4\u5347\u5e8f\u6392\u5217\n```\n#### \u63a5\u4e0b\u6765\u662f\u8f93\u5165\u548c\u7b80\u5355\u5904\u7406\u90e8\u5206\uff1a\n\n```cpp\n\tcin >> n >> m;\n    for (int i = 0; i < n; ++i) {\n        cin >> v[i];\n    }\n    //\u4e0a\u9762\u7684\u8f93\u5165\u6ca1\u4ec0\u4e48\u597d\u8bb2\u7684\uff0c\u5982\u9898\n    sort(v, v + n, comn);//\u5c06\u4ef7\u683c\u5347\u5e8f\u6392\u5e8f\uff0c\u539f\u56e0\u4e0b\u9762\u8bb2\n    //\u4e0b\u9762\u662f\u8f93\u5165\u540d\u5b57\u53ca\u5904\u7406\n    bool ad;//\u8bb0\u5f55\u8f93\u5165\u7684\u6c34\u679c\u540d\u662f\u5426\u662f\u65b0\u7684\n    for (int i = 0; i < m; ++i) {\n        cin >> s;//\u8f93\u5165\u540d\u5b57\n        ad = false;//ad\u4e3afalse\u8868\u793a\u662f\u65b0\u6c34\u679c\n        for (int j = 0; j < top; ++j) {//\u5728\u5df2\u6709\u6c34\u679c\u4e2d\u627e\n            if (arr[j].name == s) {//\u627e\u5230\u4e86\n                ++arr[j].num;//\u6c34\u679c\u6570\u91cf+1\n                ad = true;//\u4e0d\u662f\u65b0\u7684\n                break;\n            }\n        }\n        if (!ad) {//\u6ca1\u6709\u627e\u5230\n            arr[top].name = s;\n            arr[top].num = 1;\n            ++top;\n            //\u6dfb\u52a0\u65b0\u6c34\u679c\n        }\n    }\n    sort(arr, arr + top, com);//\u5c06\u6c34\u679c\u6309\u6570\u91cf\u5347\u5e8f\u6392\u5217\n```\n\n____\n### **\u6700\u5927\u4ef7\u503c\uff1a**\n\n\u5c3d\u91cf**\u5c06\u66f4\u9ad8\u7684\u5355\u4ef7\u7ed9\u6709\u66f4\u591a\u6570\u91cf\u7684\u6c34\u679c**\uff0c\u53ef\u4ee5\u5f97\u5230\u6700\u5927\u7684\u4ef7\u503c\uff0c\u56e0\u6b64\u9700\u8981\u6309\u7167\u964d\u5e8f\uff08\u4e3a\u4e86\u51cf\u5c11\u4ee3\u7801\u91cf\uff0c\u628a\u6c42\u6700\u5927\u548c\u6700\u5c0f\u4ef7\u503c\u7684\u5faa\u73af\u5408\u8d77\u6765\uff0c\u6240\u4ee5\u8fd9\u91cc\u6309\u7167**\u4ece\u540e\u5f80\u524d\u627e**\uff0c\u66ff\u4ee3\u964d\u5e8f\u6392\u5217\uff09\u3002\n\n#### \u6838\u5fc3\u90e8\u5206\uff1a\n```cpp\n\tfor (int i = 0; i < top; ++i)//\u6bcf\u4e2a\u6c34\u679c\u90fd\u8981\u6709\u4ef7\u503c\n\t\tmaxv += v[n - i - 1] * arr[top - i - 1].num;\n        //\u6700\u5927\u4ef7\u503c\u52a0\u4e0a\u6570\u91cf\u4e0e\u5355\u4ef7\u7684\u79ef\n```\n____\n### **\u6700\u5c0f\u4ef7\u503c\uff1a**\n\n\u4e0e\u6700\u5927\u4ef7\u503c\u76f8\u53cd\uff0c\u5c3d\u91cf**\u628a\u66f4\u4f4e\u7684\u5355\u4ef7\u7ed9\u66f4\u591a\u7684\u6c34\u679c**\uff0c\u83b7\u5f97\u6700\u5c11\u6536\u76ca\uff0c\u56e0\u6b64\u6309\u7167\u5347\u5e8f\u6392\u5217\uff0c\u6309\u987a\u5e8f\u53d6\u6bcf\u79cd\u6c34\u679c\u7684\u6536\u76ca\u3002\n\n#### \u6838\u5fc3\u90e8\u5206\uff1a\n\n```cpp\n\tfor (int i = 0; i < top; ++i)//\u6bcf\u4e2a\u6c34\u679c\u90fd\u8981\u6709\u4ef7\u503c\n\t\tminv += v[i] * arr[top - i - 1].num;\n        //\u8fd9\u91ccarr\u6570\u7ec4\u662f\u6309\u6570\u91cf\u591a\u5230\u5c11\u6392\u5217\uff0c\u6240\u4ee5\u7528top - i - 1\u4ece\u6570\u91cf\u591a\u5230\u5c11\u53d6\n        //\u6700\u5c0f\u4ef7\u503c\u52a0\u4e0a\u6570\u91cf\u4e0e\u5355\u4ef7\u7684\u79ef\n```\n____\n\u5927\u5bb6\u4e5f\u770b\u5230\u4e86\uff0c\u4e0a\u9762\u6211\u6c42\u6700\u5927\u4ef7\u503c\u7684\u65f6\u5019\u4e5f\u662f\u6309\u5347\u5e8f\u6392\u5217\uff0c\u53ea\u662f\u4ece\u540e\u5f80\u524d\u6570\u7684\uff0c\u53ef\u4ee5\u77e5\u9053\uff0c\u6211\u662f\u8981\u5408\u5e76\u7684\uff0c\u800c\u4e14\u7ec6\u5fc3\u7684\u540c\u5b66\u4e5f\u80fd\u53d1\u73b0\uff0c\u4e24\u4e2a\u5faa\u73af\u7684\u6b65\u9aa4\u90fd\u662f\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u5c31\u628a\u8fd9\u4e24\u4e2a\u548c\u8d77\u6765\uff0c\u5982\u4e0b\uff1a\n\n```cpp\n\tfor (int i = 0; i < top; ++i) {\n        minv += v[i] * arr[top - i - 1].num;//\u6700\u5c0f\u4ef7\u503c\n        maxv += v[n - i - 1] * arr[top - i - 1].num;//\u6700\u5927\u4ef7\u503c\n    }\n    //\u8fd9\u6837\u5c31\u53ef\u4ee5\u540c\u65f6\u6c42\u4e24\u4e2a\u5566\n```\n____\n### **\u5b8c\u6574\u4ee3\u7801\uff1a**\n\uff08\u5df2\u7ecf\u770b\u61c2\u4e0a\u9762\u89e3\u91ca\u7684\u540c\u5b66\u53ef\u4ee5\u4e0d\u7528\u770b\u5b8c\u6574\u4ee3\u7801\u4e86\uff0c\u8fd9\u91cc\u7684\u4ee3\u7801\u6ca1\u6709\u6ce8\u91ca\uff09\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n, m, v[110], minv = 0, maxv = 0;\nstruct fruit{\n    string name;\n    int num;\n}arr[110];\nbool com(fruit a, fruit b) {\n    return a.num < b.num;\n}\nbool comn(int a, int b) {\n    return a < b;\n}\nstring s;\nint top;\nint main() {\n    cin >> n >> m;\n    for (int i = 0; i < n; ++i) {\n        cin >> v[i];\n    }\n    sort(v, v + n, comn);\n    bool ad;\n    for (int i = 0; i < m; ++i) {\n        cin >> s;\n        ad = false;\n        for (int j = 0; j < top; ++j) {\n            if (arr[j].name == s) {\n                ++arr[j].num;\n                ad = true;\n                break;\n            }\n        }\n        if (!ad) {\n            arr[top].name = s;\n            arr[top].num = 1;\n            ++top;\n        }\n    }\n    sort(arr, arr + top, com);\n    for (int i = 0; i < top; ++i) {\n        minv += v[i] * arr[top - i - 1].num;\n        maxv += v[n - i - 1] * arr[top - i - 1].num;\n    }\n    cout << minv << \" \" << maxv << endl;\n    cout << \"\u62d2\u7edd\u6284\u88ad\uff0c\u5171\u5efa\u548c\u8c10\u6d1b\u8c37\" << endl;\n    return 0;\n}\n```",
        "postTime": 1524749208,
        "uid": 37539,
        "name": "_Qer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF12C \u3010Fruits\u3011"
    }
]