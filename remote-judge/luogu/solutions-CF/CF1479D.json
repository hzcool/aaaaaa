[
    {
        "content": "\u6d1b\u8c37\u7ec8\u4e8e\u628a cf \u722c\u4e0a\u6765\u4e86\uff0c\u6c34\u7bc7\u9898\u89e3 qwq\n\n[cnblogs \u91cc\u6765\u770b](https://www.cnblogs.com/zkyJuruo/p/14392030.html#cf1479d-odd-mineral-resource)\n\n## \u9898\u9762\n\n> [CF1479D Odd Mineral Resource](https://www.luogu.com.cn/problem/CF1479D)\n\n> \u7ed9\u5b9a\u4e00\u9897\u6709 $n$ \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u6bcf\u4e00\u4e2a\u8282\u70b9\u6709\u4e00\u79cd\u989c\u8272 $a_i$\u3002$q$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u70b9 $x$ \u5230\u70b9 $y$ \u7684\u6700\u77ed\u8def\u5f84\u4e0a\u662f\u5426\u6709\u4e00\u79cd\u7f16\u53f7\u5728 $[l, r]$ \u7684\u989c\u8272\uff0c\u6ee1\u8db3\u5176\u51fa\u73b0\u6b21\u6570\u4e3a\u5947\u6570\u3002\u5982\u679c\u6709\uff0c\u8f93\u51fa\u4efb\u610f\u4e00\u4e2a\uff1b\u5426\u5219\u8f93\u51fa `-1`\u3002\n\n> \u6570\u636e\u8303\u56f4\uff1a$1 \\le n, q \\le 3 \\times 10^5$\uff0c$1 \\le l \\le r \\le n$\uff0c$1 \\le a_i, x, y \\le n$\u3002\n\n## \u9898\u89e3\n\n\u4ecb\u7ecd\u4e24\u79cd\u65b9\u6cd5\u3002\n\n### \u6cd5 1\n\n\u8fd9\u662f\u4e00\u4e2a\u6709\u5173\u6811\u4e0a\u6570\u989c\u8272\u7684\u95ee\u9898\uff0c\u7528\u6811\u4e0a\u83ab\u961f\u3002\n\n\u5bf9\u989c\u8272\u7f16\u53f7\u8fdb\u884c\u5206\u5757\uff0c\u5757\u5185\u7ef4\u62a4\u53ef\u80fd\u6210\u4e3a\u7b54\u6848\u7684\u989c\u8272\u3002\n\n\u4fee\u6539\u65f6\uff0c\u5982\u679c\u6b64\u989c\u8272\u7684\u51fa\u73b0\u6b21\u6570\u662f\u5947\u6570\uff0c\u90a3\u4e48\u5c31\u8ba4\u4e3a\u8fd9\u79cd\u989c\u8272\u53ef\u80fd\u6210\u4e3a\u7b54\u6848\u3002\n\n\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u5bf9\u4e8e\u6574\u5757\u626b\u63cf\u53ef\u80fd\u6210\u4e3a\u7b54\u6848\u7684\u989c\u8272\u3002\u5bf9\u4e8e\u4e00\u4e2a\u626b\u5230\u7684\u6570 $x$\uff0c\u5982\u679c\u51fa\u73b0\u6b21\u6570\u786e\u5b9e\u662f\u5947\u6570\u5c31\u505c\uff0c\u5426\u5219\u5c31\u628a $x$ \u4ece\u53ef\u80fd\u6210\u4e3a\u7b54\u6848\u7684\u6570\u4e2d\u5220\u9664\u3002\u6563\u5757\u66b4\u529b\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(n \\sqrt m)$\n\n\u559c\u63d0\u6700\u52a3\u89e3\u3002\n\n[aclink](https://codeforces.com/contest/1479/submission/106944471)\n\n### \u6cd5 2\n\n\u51fa\u73b0\u5947\u6570\u6b21\u53ef\u4ee5\u7528\u5f02\u6216\u6765\u5904\u7406\u3002\n\n\u5982\u679c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5143\u7d20\uff0c\u8fdb\u884c\u968f\u673a\u8d4b\u503c\u3002\u6211\u4eec\u67e5\u8be2\u6811\u4e0a $u$ \u5230 $v$ \u4e0a\uff0c\u7f16\u53f7\u5728 $l$ \u5230 $r$ \u7684\u6743\u503c\u5f02\u6216\u548c\uff0c\u5982\u679c\u662f $0$ \u90a3\u4e48\u6211\u4eec\u5c31\u8ba4\u4e3a\u7b54\u6848\u662f `-1`\u3002\n\n\u7136\u540e\u6211\u4eec\u8fdb\u884c\u4e8c\u5206\u7b54\u6848\uff0c\u67e5\u8be2\u4e00\u4e0b $[l, mid]$\uff0c\u5982\u679c\u5f02\u6216\u548c\u4e0d\u662f $0$ \u5c31\u5728 $[l, mid]$ \u5f80\u4e0b\u505a\uff0c\u5426\u5219 $[mid + 1, r]$ \u7684\u5f02\u6216\u548c\u4e00\u5b9a\u4e0d\u662f $0$\uff0c\u5728 $[mid + 1, r]$ \u5f80\u4e0b\u505a\u3002\n\n\u8fd9\u4e2a\u53ef\u4ee5\u4e3b\u5e2d\u6811\u7ef4\u62a4\u3002\u7531\u4e8e\u4e3b\u5e2d\u6811\u7684\u4f18\u826f\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5728\u4e3b\u5e2d\u6811\u4e0a\u4e8c\u5206\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta((n + m) \\log n)$\n\n\u559c\u63d0\u6700\u4f18\u89e3\u3002\n\n[aclink](https://codeforces.com/contest/1479/submission/106944375)",
        "postTime": 1613549035,
        "uid": 173660,
        "name": "zhoukangyang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1479D Odd Mineral Resource"
    },
    {
        "content": "## \u76ee\u5f55\n\n- \u9898\u610f\u7b80\u8ff0\n- \u601d\u8def\u4e00\n\t- \u5927\u5e38\u6570 $O(n\\sqrt{q}\\log{n}+q\\log{n})$ \u7b97\u6cd5\n    - \u5c0f\u5e38\u6570 $O(n\\sqrt{q}\\log{n}+q\\log{n})$ \u7b97\u6cd5\n    \t- \u4ee3\u7801\n    - \u6b63\u89e3 $O(n\\sqrt{q}+q\\sqrt{n})$\n    \t- \u4ee3\u7801\n- \u601d\u8def\u4e8c\n\t- \u5206\u6790 + \u9898\u89e3\n\t- \u4ee3\u7801\n    - \u6709\u5173 $X$ \u7684\u968f\u673a\u751f\u6210\n\n## \u9898\u610f\u7b80\u8ff0\n\n\u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u8282\u70b9\u7684\u6811\uff0c$i$ \u53f7\u8282\u70b9\u7684\u6743\u503c\u4e3a $a_i$\u3002\n\n\u6709 $q$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u5b9a $u,v,l,r$\uff0c\u8868\u793a\u8be2\u95ee\u662f\u5426\u5b58\u5728 $c$ \u6ee1\u8db3 $l \\le c \\le r$ \u4e14 $u,v$ \u4e24\u70b9\u8def\u5f84\u4e0a\u6070\u597d\u6709**\u5947\u6570\u4e2a**\u6743\u503c\u4e3a $c$ \u7684\u8282\u70b9\u3002\u82e5\u5b58\u5728\uff0c\u8f93\u51fa\u4efb\u610f\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684 $c$\uff0c\u5426\u5219\u8f93\u51fa `-1`\u3002\n\n**\u6570\u636e\u8303\u56f4**\uff1a$n,q \\le 3 \\times 10^5$\uff0c$1 \\le a_i \\le n$\uff0c$1 \\le l \\le r \\le n$\u3002\n\n## \u601d\u8def\u4e00\n\n\u770b\u5b8c\u9898\u9762\uff0c\u5f88\u5bb9\u6613\u60f3\u5230**\u6811\u4e0a\u83ab\u961f**\uff0c\u7528\u4ee5\u7ef4\u62a4\u5f53\u524d\u6bcf\u79cd\u6743\u503c\u51fa\u73b0\u7684\u5947\u5076\u6027\uff0c\u4f46\u662f\u5982\u4f55\u6c42\u5f97\u533a\u95f4 $[l,r]$ \u4e2d\u67d0\u4e2a\u51fa\u73b0\u5947\u6570\u6b21\u7684\u503c\u5462\uff1f\n\n### \u5927\u5e38\u6570 $O(n\\sqrt{q}\\log{n}+q\\log{n})$ \u7b97\u6cd5\n\n\u6211\u4eec\u53ef\u4ee5\u5c06\u65b0\u589e\u7684\u51fa\u73b0\u5947\u6570\u6b21\u7684\u6743\u503c\u653e\u8fdb **set** \u91cc\uff0c\u5c06\u65b0\u589e\u7684\u51fa\u73b0\u5076\u6570\u6b21\u7684\u6743\u503c\u4ece **set** \u4e2d\u5220\u9664\uff0c\u67e5\u8be2\u65f6**\u4e8c\u5206\u67e5\u627e**\u5373\u53ef\u3002\u5355\u6b21\u4fee\u6539\u548c\u5355\u6b21\u67e5\u8be2\u90fd\u662f**\u5927\u5e38\u6570** $O(\\log{n})$ \u7684\uff0c**\u4e0d\u8db3\u4ee5\u901a\u8fc7\u6b64\u9898**\u3002\n\n### \u5c0f\u5e38\u6570 $O(n\\sqrt{q}\\log{n}+q\\log{n})$ \u7b97\u6cd5\n\n\u6211\u4eec\u4e5f\u53ef\u4ee5\u5728**\u6811\u72b6\u6570\u7ec4**\u4e0a\u5c06\u65b0\u589e\u7684\u51fa\u73b0\u5947\u6570\u6b21\u548c\u5076\u6570\u6b21\u7684\u6743\u503c\u5bf9\u5e94\u4f4d\u7f6e `+1` \u548c `-1`\uff0c\u5355\u6b21\u4fee\u6539\u662f**\u5c0f\u5e38\u6570** $O(\\log{n})$ \u7684\uff1b\u67e5\u8be2\u65f6**\u5728\u6811\u72b6\u6570\u7ec4\u4e0a\u4e8c\u5206**\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\log^2{n})$ \u6216 $O(\\log{n})$\uff08\u5982\u679c\u4e0d\u4f1a $O(\\log{n})$ \u7684\u505a\u6cd5\uff0c\u53ef\u4ee5\u70b9[\u6b64\u5904](https://blog.csdn.net/Defener/article/details/106926034)\u5b66\u4e60\uff09\u3002\n\n\u7531\u4e8e $q\\log^2{n}<n\\sqrt{q}\\log{n}$\uff08\u5373\u74f6\u9888\u4e3a\u524d\u534a\u90e8\u5206\uff09\uff0c\u52a0\u4e4b\u5e38\u6570\u95ee\u9898\uff0c\u7406\u8bba\u4e0a\u6765\u8bf4\u8dd1\u5f97\u4f1a\u6bd4\u524d\u4e00\u79cd\u5feb\u4e00\u4e9b\uff0c\u4f46**\u4f9d\u7136\u4f1a `Time limit exceeded on test 7`**\u3002\n\n#### \u4ee3\u7801\n\n\u7531\u4e8e\u662f\u8d5b\u65f6\u5199\u7684\uff0c\u5199\u5f97\u4e11\u8bf7\u89c1\u8c05\u3002\uff08\u7ed3\u6784\u4f53\u53d8\u91cf `l,r,L,R` \u548c\u5c40\u90e8\u53d8\u91cf `L,R,ll,rr` \u4e0d\u8981\u5f04\u6df7\u4e86\uff0c\u672c\u4eba\u56e0\u4e3a\u5f04\u6df7\u5728\u8d5b\u65f6\u83b7\u5f97\u4e86 `Wrong answer on pretest 1` \u7684\u597d\u6210\u7ee9\u2014\u2014\u5f53\u7136\u8fd9\u91cc\u5df2\u7ecf\u4fee\u6b63\uff09\n\n``` cpp\n#include<bits/stdc++.h>\nusing namespace std;\nnamespace IO\n{\n\tconst int buffer_size=1e5+5;\n\tchar buf[buffer_size],*S,*T;\n\tbool flag_EOF;\n\tinline char read_char()\n\t{\n\t    if(S==T)\n\t\t\tT=(S=buf)+fread(buf,1,buffer_size,stdin);\n\t    return S!=T?*(S++):EOF;\n\t}\n\tinline int read_int()\n\t{\n\t    int flag=1;\n\t    char c=read_char();\n\t    while(c<'0'||c>'9')\n\t    {\n\t        if(c==EOF)\n\t        {\n\t            flag_EOF=true;\n\t            return 0;\n\t        }\n\t        flag=(c=='-'?-1:1);\n\t        c=read_char();\n\t    }\n\t    int x=0;\n\t    while(c>='0'&&c<='9')\n\t    {\n\t        x=x*10+(c^48);\n\t        c=read_char();\n\t    }\n\t    return x*flag;\n\t}\n\tchar st[13];\n\tint _top;\n\tinline void Write(int x)\n\t{\n\t\tif(!x)\n\t\t{\n\t\t\tputchar('0');\n\t\t\treturn;\n\t\t}\n\t\tif(x<0)\n\t\t{\n\t\t\tputchar('-');\n\t\t\tx=-x;\n\t\t}\n\t\twhile(x)\n\t\t{\n\t\t\tst[++_top]=x%10+'0';\n\t\t\tx/=10;\n\t\t}\n\t\twhile(_top>0)\n\t\t\tputchar(st[_top--]);\n\t}\n}\nint n,m;\nconst int max_n=3e5+5;\nvector<int> edge[max_n];\nint id[max_n<<1],Time,dfn[max_n][2];\nvoid dfs(int x,int fa)\n{\n\tdfn[x][0]=++Time;\n\tid[Time]=x;\n\tfor(int i=0;i<int(edge[x].size());++i)\n\t{\n\t\tint y=edge[x][i];\n\t\tif(y!=fa)\n\t\t\tdfs(y,x);\n\t}\n\tdfn[x][1]=++Time;\n\tid[Time]=x;\n}\nint dep[max_n],sz[max_n],son[max_n],fath[max_n];\nvoid dfs1(int x,int fa)\n{\n\tdep[x]=dep[fa]+1;\n\tsz[x]=1;\n\tson[x]=-1;\n\tfath[x]=fa;\n\tint max_sz=0;\n\tfor(int i=0;i<int(edge[x].size());++i)\n\t{\n\t\tint y=edge[x][i];\n\t\tif(y!=fa)\n\t\t{\n\t\t\tdfs1(y,x);\n\t\t\tsz[x]+=sz[y];\n\t\t\tif(sz[y]>max_sz)\n\t\t\t{\n\t\t\t\tmax_sz=sz[y];\n\t\t\t\tson[x]=y;\n\t\t\t}\n\t\t}\n\t}\n}\nint _top[max_n];\nvoid dfs2(int x,int top_now)\n{\n\t_top[x]=top_now;\n\tif(son[x]!=-1)\n\t\tdfs2(son[x],top_now);\n\tfor(int i=0;i<int(edge[x].size());++i)\n\t{\n\t\tint y=edge[x][i];\n\t\tif(y!=fath[x]&&y!=son[x])\n\t\t\tdfs2(y,y);\n\t}\n}\ninline int get_LCA(int x,int y)\n{\n\twhile(_top[x]!=_top[y])\n\t{\n\t\tif(dep[_top[x]]<dep[_top[y]])\n\t\t\tswap(x,y);\n\t\tx=fath[_top[x]];\n\t}\n\treturn dep[x]<dep[y]?x:y;\n}\nnamespace BIT\n{\n\tint c[max_n];\n\tinline void modify(int k,int v)\n\t{\n\t\tfor(int i=k;i<=n;i+=i&(-i))\n\t\t\tc[i]+=v;\n\t}\n\tinline int query(int k)\n\t{\n\t\tint res=0;\n\t\tfor(int i=k;i>0;i-=i&(-i))\n\t\t\tres+=c[i];\n\t\treturn res;\n\t}\n}\nconst int max_m=3e5+5;\nint ans[max_m];\nstruct Query\n{\n\tint l,blo,r,lca,L,R,id;\n}q[max_m];\ninline bool cmp(const Query &a,const Query &b)\n{\n\treturn a.blo!=b.blo?a.blo<b.blo:a.r<b.r;\n}\nint a[max_n];\nbool odd[max_n];\ninline void work(int x)\n{\n\tif(odd[a[x]])\n\t{\n\t\tBIT::modify(a[x],-1);\n\t\todd[a[x]]=false;\n\t}\n\telse\n\t{\n\t\tBIT::modify(a[x],1);\n\t\todd[a[x]]=true;\n\t}\n}\nint main()\n{\n\tn=IO::read_int(),m=IO::read_int();\n\tfor(int i=1;i<=n;++i)\n\t\ta[i]=IO::read_int();\n\tfor(int i=1;i<=n-1;++i)\n\t{\n\t\tint x=IO::read_int(),y=IO::read_int();\n\t\tedge[x].push_back(y);\n\t\tedge[y].push_back(x);\n\t}\n\tdfs(1,0);\n\tdfs1(1,0);\n\tdfs2(1,1);\n\tint s=int(2*n/sqrt(m));\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tint u=IO::read_int(),v=IO::read_int(),l=IO::read_int(),r=IO::read_int();\n\t\tif(dfn[u][0]>dfn[v][0])\n\t\t\tswap(u,v);\n\t\tint p=get_LCA(u,v);\n\t\tif(p==u)\n\t\t\tq[i].l=dfn[u][0],q[i].r=dfn[v][0];\n\t\telse\n\t\t\tq[i].l=dfn[u][1],q[i].r=dfn[v][0],q[i].lca=p;\n\t\tq[i].L=l,q[i].R=r,q[i].id=i;\n\t\tq[i].blo=(q[i].l-1)/s+1;\n\t}\n\tsort(q+1,q+m+1,cmp);\n\tint L=1,R=0;\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\twhile(L<q[i].l)\n\t\t\twork(id[L++]);\n\t\twhile(L>q[i].l)\n\t\t\twork(id[--L]);\n\t\twhile(R<q[i].r)\n\t\t\twork(id[++R]);\n\t\twhile(R>q[i].r)\n\t\t\twork(id[R--]);\n\t\tif(q[i].lca)\n\t\t\twork(q[i].lca);\n\t\tint v1=BIT::query(q[i].L-1);\n\t\tint v2=BIT::query(q[i].R);\n\t\tif(v1==v2)\n\t\t\tans[q[i].id]=-1;\n\t\telse\n\t\t{\n\t\t\tint ll=q[i].L,rr=q[i].R,mid,res=q[i].R;\n\t\t\twhile(ll<=rr)\n\t\t\t{\n\t\t\t\tmid=(ll+rr)>>1;\n\t\t\t\tif(BIT::query(mid)>=v1+1)\n\t\t\t\t\tres=mid,rr=mid-1;\n\t\t\t\telse\n\t\t\t\t\tll=mid+1;\n\t\t\t}\n\t\t\tans[q[i].id]=res;\n\t\t}\n\t\tif(q[i].lca)\n\t\t\twork(q[i].lca);\n\t}\n\tfor(int i=1;i<=m;++i)\n\t\tprintf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```\n\n### \u6b63\u89e3 $O(n\\sqrt{q}+q\\sqrt{n})$\n\n\u6ce8\u610f\u5230\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u74f6\u9888\u5728\u4e8e\u4fee\u6539\uff0c\u5373\u8981\u6c42\u5355\u6b21\u4fee\u6539 $O(1)$\uff0c\u5355\u6b21\u8be2\u95ee\u4e0d\u8d85\u8fc7 $O(\\sqrt{n})$\uff0c\u4f7f\u7528\u5206\u5757\u5373\u53ef\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u7528\u4e00\u4e2a `bool` \u6570\u7ec4\u8bb0\u5f55\u6bcf\u79cd\u6743\u503c\u662f\u5426\u51fa\u73b0\u5947\u6570\u6b21\uff0c\u518d\u7528\u4e00\u4e2a `int` \u6570\u7ec4\u8bb0\u5f55\u6bcf\u4e00\u5757\u6709\u591a\u5c11\u4e2a\u51fa\u73b0\u5947\u6570\u6b21\u7684\u6743\u503c\u3002\u4fee\u6539\u65f6\u628a\u5f53\u524d\u8fd9\u79cd\u6743\u503c\u53ca\u5176\u6240\u5728\u5757\u4fee\u6539\uff1b\u67e5\u8be2\u65f6\u66b4\u529b\u626b\u63cf\u5de6\u53f3\u4e24\u7aef\u7684\u90e8\u5206\uff0c\u4e2d\u95f4\u5757\u82e5\u51fa\u73b0\u4e2a\u6570 $>0$ \u5219\u626b\u63cf\u3002\n\n#### \u4ee3\u7801\n\n``` cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\nconst int max_n=3e5+5;\nvector<int> edge[max_n];\nint id[max_n<<1],Time,dfn[max_n][2];\nvoid dfs(int x,int fa)\n{\n\tdfn[x][0]=++Time;\n\tid[Time]=x;\n\tfor(int i=0;i<int(edge[x].size());++i)\n\t{\n\t\tint y=edge[x][i];\n\t\tif(y!=fa)\n\t\t\tdfs(y,x);\n\t}\n\tdfn[x][1]=++Time;\n\tid[Time]=x;\n}\nint dep[max_n],sz[max_n],son[max_n],fath[max_n];\nvoid dfs1(int x,int fa)\n{\n\tdep[x]=dep[fa]+1;\n\tsz[x]=1;\n\tson[x]=-1;\n\tfath[x]=fa;\n\tint max_sz=0;\n\tfor(int i=0;i<int(edge[x].size());++i)\n\t{\n\t\tint y=edge[x][i];\n\t\tif(y!=fa)\n\t\t{\n\t\t\tdfs1(y,x);\n\t\t\tsz[x]+=sz[y];\n\t\t\tif(sz[y]>max_sz)\n\t\t\t{\n\t\t\t\tmax_sz=sz[y];\n\t\t\t\tson[x]=y;\n\t\t\t}\n\t\t}\n\t}\n}\nint _top[max_n];\nvoid dfs2(int x,int top_now)\n{\n\t_top[x]=top_now;\n\tif(son[x]!=-1)\n\t\tdfs2(son[x],top_now);\n\tfor(int i=0;i<int(edge[x].size());++i)\n\t{\n\t\tint y=edge[x][i];\n\t\tif(y!=fath[x]&&y!=son[x])\n\t\t\tdfs2(y,y);\n\t}\n}\ninline int get_LCA(int x,int y)\n{\n\twhile(_top[x]!=_top[y])\n\t{\n\t\tif(dep[_top[x]]<dep[_top[y]])\n\t\t\tswap(x,y);\n\t\tx=fath[_top[x]];\n\t}\n\treturn dep[x]<dep[y]?x:y;\n}\nconst int max_m=3e5+5;\nint ans[max_m];\nstruct Query\n{\n\tint l,blo,r,lca,L,R,id;\n}q[max_m];\ninline bool cmp(const Query &a,const Query &b)\n{\n\treturn a.blo!=b.blo?a.blo<b.blo:a.r<b.r;\n}\nint a[max_n];\nbool odd[max_n];\nint sn;\nconst int max_sqrt_n=548+5;\nint cnt[max_sqrt_n];\ninline void work(int x)\n{\n\tif(odd[a[x]])\n\t{\n\t\t--cnt[(a[x]-1)/sn+1];\n\t\todd[a[x]]=false;\n\t}\n\telse\n\t{\n\t\t++cnt[(a[x]-1)/sn+1];\n\t\todd[a[x]]=true;\n\t}\n}\ninline int query(int l,int r)\n{\n\tint id_l=(l-1)/sn+1,id_r=(r-1)/sn+1;\n\tif(id_l==id_r)\n\t{\n\t\tfor(int i=l;i<=r;++i)\n\t\t{\n\t\t\tif(odd[i])\n\t\t\t\treturn i;\n\t\t}\n\t\treturn -1;\n\t}\n\tfor(int i=l;i<=id_l*sn;++i)\n\t{\n\t\tif(odd[i])\n\t\t\treturn i;\n\t}\n\tfor(int i=(id_r-1)*sn+1;i<=r;++i)\n\t{\n\t\tif(odd[i])\n\t\t\treturn i;\n\t}\n\tfor(int i=id_l+1;i<=id_r-1;++i)\n\t{\n\t\tif(cnt[i])\n\t\t{\n\t\t\tfor(int j=(i-1)*sn+1;j<=i*sn;++j)\n\t\t\t{\n\t\t\t\tif(odd[j])\n\t\t\t\t\treturn j;\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;++i)\n\t\tscanf(\"%d\",a+i);\n\tfor(int i=1;i<=n-1;++i)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tedge[x].push_back(y);\n\t\tedge[y].push_back(x);\n\t}\n\tdfs(1,0);\n\tdfs1(1,0);\n\tdfs2(1,1);\n\tsn=int(sqrt(n));\n\tint s=int(2*n/sqrt(m));\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tint u,v,l,r;\n\t\tscanf(\"%d%d%d%d\",&u,&v,&l,&r);\n\t\tif(dfn[u][0]>dfn[v][0])\n\t\t\tswap(u,v);\n\t\tint p=get_LCA(u,v);\n\t\tif(p==u)\n\t\t\tq[i].l=dfn[u][0],q[i].r=dfn[v][0];\n\t\telse\n\t\t\tq[i].l=dfn[u][1],q[i].r=dfn[v][0],q[i].lca=p;\n\t\tq[i].L=l,q[i].R=r,q[i].id=i;\n\t\tq[i].blo=(q[i].l-1)/s+1;\n\t}\n\tsort(q+1,q+m+1,cmp);\n\tint L=1,R=0;\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\twhile(L<q[i].l)\n\t\t\twork(id[L++]);\n\t\twhile(L>q[i].l)\n\t\t\twork(id[--L]);\n\t\twhile(R<q[i].r)\n\t\t\twork(id[++R]);\n\t\twhile(R>q[i].r)\n\t\t\twork(id[R--]);\n\t\tif(q[i].lca)\n\t\t\twork(q[i].lca);\n\t\tans[q[i].id]=query(q[i].L,q[i].R);\n\t\tif(q[i].lca)\n\t\t\twork(q[i].lca);\n\t}\n\tfor(int i=1;i<=m;++i)\n\t\tprintf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```\n\nPS\uff1a\u51fa\u9898\u4eba\u5e94\u8be5\u662f\u60f3\u653e\u8fd9\u79cd\u89e3\u6cd5\u8fc7\u7684\uff0c\u56e0\u4e3a\u53e6\u5916\u4e00\u79cd\u65f6\u95f4\u590d\u6742\u5ea6\u66f4\u4f18\u79c0\u7684\u6b63\u89e3\u53ea\u9700 1s \u5de6\u53f3\uff0c\u4f46\u65f6\u9650\u662f 5s\uff0c\u800c\u8fd9\u4efd\u4ee3\u7801\u6700\u5927\u7528\u65f6 4742 ms\u3002\n\n## \u601d\u8def\u4e8c\n\n### \u5206\u6790 + \u9898\u89e3\n\n\u9898\u76ee\u7684\u8981\u6c42\u76f8\u5f53\u4e8e\u201c**\u5947\u6570\u6b21\u7b97\u51fa\u73b0\uff0c\u5076\u6570\u6b21\u7b97\u6ca1\u51fa\u73b0**\u201d\uff0c\u8fd9\u8ddf**\u5f02\u6216**\u7684\u6027\u8d28\u7c7b\u4f3c\uff0c\u8003\u8651\u7528\u5f02\u6216\u503c\u6765\u523b\u753b\u8be2\u95ee\u662f\u5426\u6709\u89e3\u3002\n\n\u5b9a\u4e49 $f(u,v,l,r)$ \u8868\u793a $u$ \u5230 $v$ \u8def\u5f84\u4e0a\u6743\u503c $\\in [l,r]$ \u7684\u6743\u503c\u7684\u5f02\u6216\u548c\uff0c\u5219\u82e5\u65e0\u89e3\uff0c\u5fc5\u6709 $f(u,v,l,r) = 0$\u3002\u8fdb\u4e00\u6b65\uff0c\u82e5 $f(u,v,l,r) \\neq 0$\uff0c\u5fc5\u7136\u6709\u89e3\u3002\n\n\u4f46\u5373\u4f7f\u6709\u89e3\uff0c$f(u,v,l,r)=0$ \u4ecd\u7136\u6709\u5f88\u5927\u6982\u7387\u6210\u7acb\uff08\u6216\u8005\u8bf4\u5f88\u5bb9\u6613\u6784\u9020\u8fd9\u6837\u7684\u4f8b\u5b50\uff09\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u5c06\u539f\u6765\u7684 $n$ \u79cd\u6743\u503c\u6620\u5c04\u5230\u65b0\u7684 $n$ \u79cd\u6743\u503c\uff0c\u4f7f\u5f97\u201c$f(u,v,l,r)=0$ \u7b49\u4ef7\u4e8e\u65e0\u89e3\u201d**\u6709\u8db3\u591f\u5927\u7684\u6982\u7387\u6210\u7acb**\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u8bbe $X$ \u662f\u4e00\u7ec4\u5927\u5c0f\u4e3a $n$ \u7684**\u503c\u57df**\u4e3a $[0,2^{64})$ \u7684**\u968f\u673a\u53d8\u91cf**\uff0c\u5c06\u6743\u503c $i$ \u6620\u5c04\u4e3a\u6743\u503c $X_i$ \u5373\u53ef\u4f7f\u5f97\uff1a\u5bf9\u4e8e\u5355\u6b21\u67e5\u8be2\uff0c\u4e0a\u8ff0\u5f0f\u5b50\u6210\u7acb\u7684\u6982\u7387 $p \\ge 1-2^{-64}$\uff1b\u5bf9\u4e8e $q$ \u6b21\u67e5\u8be2\uff0c\u4e0a\u8ff0\u5f0f\u5b50\u5747\u6210\u7acb\u7684\u6982\u7387\u4e3a\uff1a\n\n$$\n\\begin{aligned}\nPr\\big[\\bigwedge_{i=1}^{q}A_i\\big]&=1-Pr\\big[\\bigvee_{i=1}^{q}\\overline{A}_i\\big]\\\\\n&\\ge 1-\\sum_{i=1}^{q}Pr[\\overline{A}_i]\\\\\n&=1-\\sum_{i=1}^{q}(1-Pr[A_i])\\\\\n&\\ge 1-\\sum_{i=1}^{q}(1-(1-2^{-64}))\\\\\n&=1-2^{-64}q\n\\end{aligned}\n$$\n\n\u5f53 $q \\le 2^{20}$ \u65f6\uff0c\u8be5\u6982\u7387\u4e0d\u5c0f\u4e8e $1-2^{-64}q \\ge 1-2^{-44}$\uff0c\u8fd1\u4f3c\u4e8e $1$\u3002\n\n\u6211\u4eec\u77e5\u9053\uff0c\u539f\u95ee\u9898\u76f8\u5f53\u4e8e\u6c42\u533a\u95f4 $[l,r]$ \u4e2d\u7684\u67d0\u4e2a $c$ \u4f7f\u5f97 $f(u,v,c,c) \\neq 0$\uff0c\u90a3\u4e48\u5982\u4f55\u7ef4\u62a4 $f$ \u503c\u5462\uff1f\n\n\u5148\u6765\u4e00\u4e2a\u5e38\u7528\u5957\u8def\uff0c\u4e00\u6761\u8def\u5f84\u62c6\u6210\u56db\u6761\u8282\u70b9\u5230\u6839\u7684\u94fe\uff1a\n\n$$f(u,v,l,r)=f(1,u,l,r) \\oplus f(1,v,l,r) \\oplus f(1,lca(u,v),l,r) \\oplus f(1,father(lca(u,v)),l,r)$$\n\n\u56e0\u6b64\u53ea\u9700\u7ef4\u62a4 $f(1,x,l,r)$\uff0c\u4f7f\u7528**\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811**\uff0c**\u65f6\u95f4\u590d\u6742\u5ea6**\u4e3a $O(n\\log{n}+q\\log{n})$\u3002\uff08\u6839\u636e\u201c$f(u,v,l,r)=0$ \u7b49\u4ef7\u4e8e\u65e0\u89e3\u201d\u8fd9\u4e00\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u6c42\u89e3\uff0c\u5177\u4f53\u5b9e\u73b0\u89c1\u4ee3\u7801\uff09\n\nPS\uff1a\u7531\u4e8e $f(1,lca(u,v),l,r) \\oplus f(1,father(lca(u,v)),l,r)=f(lca(u,v),lca(u,v),l,r)$\uff0c\u4f60\u4e5f\u53ef\u4ee5\u6bcf\u4e2a\u70b9\u989d\u5916\u518d\u5f00\u4e00\u9897\u7ebf\u6bb5\u6811\uff0c\u7528\u4e8e\u76f4\u63a5\u67e5\u8be2\u540e\u4e24\u9879\u3002\n\n\n### \u4ee3\u7801\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u67e5\u8be2\u65f6\u4e00\u65e6\u627e\u5230\u7b54\u6848\uff0c\u5c31\u4e0d\u518d\u7ee7\u7eed\u6c42\u89e3\uff0c\u5426\u5219\u65f6\u95f4\u590d\u6742\u5ea6\u4f1a\u53d8\u6210 $O(n\\log{n}+q\\log^2{n})$\u3002\n\n``` cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,q;\nconst int max_n=3e5+5;\nint End[max_n<<1],Last[max_n],Next[max_n<<1],e;\ninline void add_edge(int x,int y)\n{\n\tEnd[++e]=y;\n\tNext[e]=Last[x];\n\tLast[x]=e;\n\tEnd[++e]=x;\n\tNext[e]=Last[y];\n\tLast[y]=e;\n}\nint dep[max_n],fath[max_n],sz[max_n],son[max_n];\nvoid dfs1(int x,int fa)\n{\n\tdep[x]=dep[fa]+1;\n\tfath[x]=fa;\n\tsz[x]=1;\n\tson[x]=-1;\n\tint max_sz=0;\n\tfor(int i=Last[x];i;i=Next[i])\n\t{\n\t\tint y=End[i];\n\t\tif(y!=fa)\n\t\t{\n\t\t\tdfs1(y,x);\n\t\t\tsz[x]+=sz[y];\n\t\t\tif(sz[y]>max_sz)\n\t\t\t{\n\t\t\t\tmax_sz=sz[y];\n\t\t\t\tson[x]=y;\n\t\t\t}\n\t\t}\n\t}\n}\nint _top[max_n];\nvoid dfs2(int x,int top_now)\n{\n\t_top[x]=top_now;\n\tif(son[x]!=-1)\n\t\tdfs2(son[x],top_now);\n\tfor(int i=Last[x];i;i=Next[i])\n\t{\n\t\tint y=End[i];\n\t\tif(y!=fath[x]&&y!=son[x])\n\t\t\tdfs2(y,y);\n\t}\n}\ninline int get_LCA(int x,int y)\n{\n\twhile(_top[x]!=_top[y])\n\t{\n\t\tif(dep[_top[x]]<dep[_top[y]])\n\t\t\tswap(x,y);\n\t\tx=fath[_top[x]];\n\t}\n\treturn dep[x]<dep[y]?x:y;\n}\nint a[max_n];\nunsigned long long X[max_n];\nnamespace SegmentTree\n{\n\tconst int max_sz=20*3e5+5;\n\tunsigned long long val[max_sz];\n\tint ls[max_sz],rs[max_sz],cnt_node;\n\tvoid modify(int old,int &p,int l,int r,int k,unsigned long long v)\n\t{\n\t\tp=++cnt_node;\n\t\tval[p]=val[old]^v,ls[p]=ls[old],rs[p]=rs[old];\n\t\tif(l<r)\n\t\t{\n\t\t\tint mid=(l+r)>>1;\n\t\t\tif(k<=mid)\n\t\t\t\tmodify(ls[old],ls[p],l,mid,k,v);\n\t\t\telse\n\t\t\t\tmodify(rs[old],rs[p],mid+1,r,k,v);\n\t\t}\n\t}\n\tint res;\n\tvoid query(int p1,int p2,int p3,int p4,int l,int r)\n\t{\n\t\tif(l==r)\n\t\t{ \n\t\t\tres=l;\n\t\t\treturn;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tif(val[ls[p1]]^val[ls[p2]]^val[ls[p3]]^val[ls[p4]])\n\t\t\tquery(ls[p1],ls[p2],ls[p3],ls[p4],l,mid);\n\t\telse\n\t\t\tquery(rs[p1],rs[p2],rs[p3],rs[p4],mid+1,r);\n\t}\n\tvoid query(int p1,int p2,int p3,int p4,int l,int r,int a,int b)\n\t{\n\t\tif(a<=l&&r<=b)\n\t\t{\n\t\t\tif(val[p1]^val[p2]^val[p3]^val[p4])\n\t\t\t\tquery(p1,p2,p3,p4,l,r);\n\t\t\treturn;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tif(a<=mid)\n\t\t\tquery(ls[p1],ls[p2],ls[p3],ls[p4],l,mid,a,b);\n\t\tif(b>mid&&res==-1)\n\t\t\tquery(rs[p1],rs[p2],rs[p3],rs[p4],mid+1,r,a,b);\n\t}\n}\nint root[max_n];\nvoid dfs(int x,int fa)\n{\n\tSegmentTree::modify(root[fa],root[x],1,n,a[x],X[a[x]]);\n\tfor(int i=Last[x];i;i=Next[i])\n\t{\n\t\tint y=End[i];\n\t\tif(y!=fa)\n\t\t\tdfs(y,x);\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&q);\n\tfor(int i=1;i<=n;++i)\n\t\tscanf(\"%d\",a+i);\n\tfor(int i=1;i<=n-1;++i)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd_edge(x,y);\n\t}\n\tdfs1(1,0);\n\tdfs2(1,1);\n\tsrand(time(NULL));\n\tfor(int i=1;i<=n;++i)\n\t\tX[i]=1ull*rand()<<60|1ull*rand()<<45|1ull*rand()<<30|1ull*rand()<<15|1ull*rand();\n\tdfs(1,0);\n\twhile(q--)\n\t{\n\t\tint u,v,l,r;\n\t\tscanf(\"%d%d%d%d\",&u,&v,&l,&r);\n\t\tint p=get_LCA(u,v);\n\t\tSegmentTree::res=-1;\n\t\tSegmentTree::query(root[u],root[v],root[p],root[fath[p]],1,n,l,r);\n\t\tprintf(\"%d\\n\",SegmentTree::res);\n\t}\n\treturn 0;\n}\n```\n\n### \u6709\u5173 $X$ \u7684\u968f\u673a\u751f\u6210\n\n\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u4f7f\u7528\u7684\u65b9\u6cd5\u662f\uff0c\u5c06 $5$ \u4e2a `rand()` \u51fd\u6570\u901a\u8fc7\u79fb\u4f4d\u8fdb\u884c\u53e0\u52a0\uff0c\u5373\uff1a\n\n``` cpp\nsrand(time(NULL));\nfor(int i=1;i<=n;++i)\n\tX[i]=1ull*rand()<<60|1ull*rand()<<45|1ull*rand()<<30|1ull*rand()<<15|1ull*rand();\n```\n\n\uff08\u5728 Windows \u4e0b\uff0c`rand()` \u7684\u53d6\u503c\u8303\u56f4\u4e3a $[0,2^{15})$\uff09\n\n\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6bd4\u8f83\u9ad8\u7ea7\u7684\u968f\u673a\u6570\uff1a\n\n``` cpp\nmt19937_64 rd(chrono::steady_clock::now().time_since_epoch().count());\nfor(int i=1;i<=n;++i)\n\tX[i]=rd();\n```\n\n\u4e8b\u5b9e\u4e0a\uff0c\u672c\u4eba\u4e00\u5f00\u59cb\u4f7f\u7528\u7684\u662f\u4e0b\u9762\u8fd9\u79cd\u65b9\u6cd5\uff0c\u4f1a\u88ab test 7 \u7684\u7b2c $164990$ \u4e2a\u8be2\u95ee\u5361\u6389\uff0c\u7b54\u6848\u4e0d\u4e3a `-1`\uff0c\u4f46\u4ee3\u7801\u8f93\u51fa `-1`\u3002\n\n``` cpp\nsrand(time(NULL));\nfor(int i=1;i<=n;++i)\n\tfor(int j=0;j<64;++j)\n\t\tX[i]=X[i]<<1|(rand()&1);\n```\n\n\uff08\u5373\u4ece\u9ad8\u5230\u4f4e\u6bcf\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u5747\u4e3a `rand()&1`\uff0c\u6211\u8bd5\u8fc7\u5176\u5b83\u79cd\u5b50\uff0c\u90fd\u4f1a\u88ab\u540c\u6837\u5361\u6389\uff09\n\n\u4e2a\u4eba\u7406\u89e3\u662f\u56e0\u4e3a `rand()` \u7684\u5747\u5300\u968f\u673a\u6027\u4e0d\u9ad8\uff0c\u5bb9\u6613\u51fa\u73b0\u5faa\u73af\u2014\u2014**\u8fd9\u53ea\u662f\u611f\u6027\u7406\u89e3\uff0c\u5982\u679c\u4f60\u80fd\u7ed9\u51fa\u66f4\u4e25\u8c28\u7684\u89e3\u7b54\u6216\u6784\u9020\u8fd9\u6837\u7684 Hack \u6570\u636e\uff0c\u8bf7\u52a1\u5fc5\u79c1\u4fe1\u544a\u77e5\u6211\uff0c\u6211\u4f1a\u5c06\u5176\u6dfb\u52a0\u81f3\u8be5\u7bc7\u6587\u7ae0\uff0c\u4f9b\u5927\u5bb6\u5b66\u4e60\u3002**",
        "postTime": 1612951042,
        "uid": 145355,
        "name": "wsyhb",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011CF1479D Odd Mineral Resource"
    },
    {
        "content": "\u5ba3\u4f20\u535a\u5ba2 $\\to$ [link](https://blog.csdn.net/BWzhuzehao/article/details/118999062)\n\n\u672c\u9898\u6709\u4e24\u79cd\u7b97\u6cd5\uff0c\u4e00\u79cd\u662f $\\log n$ \u7ea7\u522b\u7b97\u6cd5\uff0c\u4e00\u79cd\u662f $\\sqrt{n}$ \u7ea7\u522b\u7b97\u6cd5\uff0c\u8fd9\u91cc\u53ea\u8bb2\u6839\u53f7\u7b97\u6cd5\u3002\n\n\u8fd9\u9053\u9898\u5c31\u662f\u4e00\u4e2a\u6811\u4e0a\u6570\u989c\u8272\u95ee\u9898\uff0c\u53ea\u662f\u989c\u8272\u88ab\u9650\u5b9a\u5728\u4e00\u4e2a\u533a\u95f4\u3002\n\n\u5982\u679c\u4f60\u505a\u8fc7 [P4396 [AHOI2013]\u4f5c\u4e1a](https://www.luogu.com.cn/problem/P4396)\uff0c\u6211\u76f8\u4fe1\u4f60\u80fd\u4e00\u773c\u770b\u51fa\u8fd9\u9053\u9898\u7684\u505a\u6cd5\u3002\n\n\u6570\u989c\u8272\u95ee\u9898\u7684\u6839\u53f7\u7b97\u6cd5\u505a\u6cd5\u4e00\u822c\u662f\u83ab\u961f\uff0c\u800c\u8fd9\u9053\u9898\u662f\u6811\u4e0a\u83ab\u961f\u3002\n\n\u5982\u679c\u4f60\u6ca1\u5b66\u8fc7\u83ab\u961f\uff0c\u770b\u4e00\u4e0b[\u6211\u7684\u7b97\u6cd5\u603b\u7ed3](https://blog.csdn.net/BWzhuzehao/article/details/110889871)\u3002\n\n\u5982\u679c\u4f60\u6ca1\u5b66\u8fc7\u6811\u4e0a\u83ab\u961f\u4f46\u662f\u5b66\u8fc7\u83ab\u961f\uff0c\u53ef\u4ee5\u770b[\u6211\u7684\u7b97\u6cd5\u603b\u7ed3](https://blog.csdn.net/BWzhuzehao/article/details/110940154)\uff0c\u4e5f\u53ef\u4ee5\u5728\u4ee3\u7801\u540e\u9762\u770b\u6211\u5199\u7684\u7b80\u8981\u63cf\u8ff0\u3002\n\n\u597d\u7684\u4e0b\u9762\u9ed8\u8ba4\u4f60\u5b66\u4f1a\u4e86\u6811\u4e0a\u83ab\u961f\u3002\n\n\u90a3\u4e48\u6709\u4e00\u79cd\u65b9\u6cd5\u5c31\u662f\u6211\u4eec\u5728\u6811\u4e0a\u83ab\u961f\u7684\u65f6\u5019\u7ef4\u62a4\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u5bf9\u4e8e\u52a0\u5220\u64cd\u4f5c\u800c\u8a00\u6211\u4eec\u5728\u7ebf\u6bb5\u6811\u5bf9\u5e94\u4f4d\u7f6e\u4fee\u6539\uff0c\u7ebf\u6bb5\u6811\u4e2d\u7ef4\u62a4\u5f53\u524d\u533a\u95f4\u662f\u5426\u5b58\u5728\u5947\u6570\u4e2a\u989c\u8272\uff0c\u67e5\u8be2\u65f6\u76f4\u63a5\u67e5\u5373\u53ef\u3002\n\n\u8fd9\u4e2a\u505a\u6cd5\u7684\u590d\u6742\u5ea6\u662f $O(q \\log n \\sqrt{n}+q \\log n)$ \u7684\uff0c\u4f1a\u88ab #7 \u5361 TLE\u3002\n\n\u53d1\u73b0\u4fee\u6539\u64cd\u4f5c\u590d\u6742\u5ea6 $q \\log n \\sqrt{n}$ \u8fdc\u5927\u4e8e\u67e5\u8be2\u64cd\u4f5c\u590d\u6742\u5ea6 $q \\log n$\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u8003\u8651\u5e73\u8861\u4e00\u4e0b\u8fd9\u4e24\u8005\u3002\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u503c\u57df\u5206\u5757\u3002\n\n\u5982\u679c\u4f60\u6ca1\u5b66\u8fc7\u503c\u57df\u5206\u5757\uff0c\u5efa\u8bae\u5148\u53bb\u5b66\u4e00\u4e0b\u5206\u5757\uff08[\u6211\u7684\u7b97\u6cd5\u603b\u7ed3](https://blog.csdn.net/BWzhuzehao/article/details/111057797)\uff09\uff0c\u7136\u540e\u7c7b\u6bd4\u503c\u57df\u7ebf\u6bb5\u6811\uff0c\u503c\u57df\u5206\u5757\u5c31\u662f\u5728\u503c\u57df\u4e0a\u5206\u5757\u3002\n\n\u503c\u57df\u5206\u5757\u6709\u4e00\u4e2a\u597d\u5904\u662f $O(1)$ \u4fee\u6539 $O(\\sqrt{n})$ \u67e5\u8be2\uff0c\u800c\u8fd9\u53ef\u4ee5\u5e73\u8861\u590d\u6742\u5ea6\uff0c\u4f7f\u5f97\u4fee\u6539\u64cd\u4f5c\u548c\u67e5\u8be2\u64cd\u4f5c\u90fd\u662f $O(q\\sqrt{n})$\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\u5982\u679c\u5757\u957f\u4e0d\u5f53\uff0c\u53ef\u80fd\u4f1a\u88ab #7 \u5361\u6389\uff0c\u8fd9\u91cc\u5efa\u8bae\u8c03\u6210\u7406\u8bba\u6700\u4f18\u5757\u957f $\\dfrac{2n}{\\sqrt{m}}$\uff08$2n$ \u662f\u56e0\u4e3a\u6b27\u62c9\u5e8f\u957f\u4e3a $2n$\uff09\uff0c\u5982\u679c\u8fd8\u4e0d\u8fc7\u5c31\u5728\u8fd9\u9644\u8fd1\u8c03\u5757\u957f\u3002\n\nCode\uff1a[GitHub CodeBase-of-Plozia CF1479D Odd Mineral Resource.cpp](https://github.com/Plozia/CodeBase-of-Plozia/blob/main/Codeforces%20%E5%88%B7%E9%A2%98%E5%90%88%E9%9B%86/CF1479D%20Odd%20Mineral%20Resource.cpp)\n\n```cpp\n/*\n========= Plozia =========\n\tAuthor:Plozia\n\tProblem:CF1479D Odd Mineral Resource\n\tDate:2021/7/21\n========= Plozia =========\n*/\n\n#include <bits/stdc++.h>\n\ntypedef long long LL;\nconst int MAXN = 3e5 + 5;\nint n, m, Head[MAXN], cnt_Edge = 1, cnt_n, Eular[MAXN << 1], a[MAXN], fa[MAXN][21], Block, Num_Block, dep[MAXN], ys[MAXN << 1], val[MAXN], sum[MAXN], fir[MAXN], las[MAXN], ans[MAXN], book[MAXN];\nstruct node { int to, Next; } Edge[MAXN << 1];\nstruct Query { int x, y, l, r, id, lca; } q[MAXN];\n\nint Read()\n{\n\tint sum = 0, fh = 1; char ch = getchar();\n\tfor (; ch < '0' || ch > '9'; ch = getchar()) fh -= (ch == '-') << 1;\n\tfor (; ch >= '0' && ch <= '9'; ch = getchar()) sum = (sum * 10)+ (ch ^ 48);\n\treturn sum * fh;\n}\nint Max(int fir, int sec) { return (fir > sec) ? fir : sec; }\nint Min(int fir, int sec) { return (fir < sec) ? fir : sec; }\nvoid add_Edge(int x, int y) { ++cnt_Edge; Edge[cnt_Edge] = (node){y, Head[x]}; Head[x] = cnt_Edge; }\nbool cmp(const Query &fir, const Query &sec) { return (ys[fir.x] ^ ys[sec.x]) ? (fir.x < sec.x) : ((ys[fir.x] & 1) ? (fir.y < sec.y) : (fir.y > sec.y)); }\n\nvoid dfs(int now, int father)\n{\n\tEular[++cnt_n] = now, fa[now][0] = father; fir[now] = cnt_n; dep[now] = dep[father] + 1;\n\tfor (int i = Head[now]; i; i = Edge[i].Next)\n\t{\n\t\tint u = Edge[i].to;\n\t\tif (u == father) continue ;\n\t\tdfs(u, now);\n\t}\n\tEular[++cnt_n] = now; las[now] = cnt_n;\n}\n\nvoid init()\n{\n\tfor (int j = 1; j <= 20; ++j)\n\t\tfor (int i = 1; i <= n; ++i)\n\t\t\tfa[i][j] = fa[fa[i][j - 1]][j - 1];\n}\n\nint LCA(int x, int y)\n{\n\tif (dep[x] < dep[y]) std::swap(x, y);\n\tfor (int i = 20; i >= 0; --i)\n\t\tif (dep[fa[x][i]] >= dep[y]) x = fa[x][i];\n\tif (x == y) return x;\n\tfor (int i = 20; i >= 0; --i)\n\t\tif (fa[x][i] != fa[y][i]) x = fa[x][i], y = fa[y][i];\n\treturn fa[x][0];\n}\n\nvoid Add(int x)\n{\n\t++val[a[x]];\n\tif (val[a[x]] & 1) ++sum[(a[x] - 1) / Num_Block + 1];\n\telse --sum[(a[x] - 1) / Num_Block + 1];\n}\n\nvoid Del(int x)\n{\n\t--val[a[x]];\n\tif (val[a[x]] & 1) ++sum[(a[x] - 1) / Num_Block + 1];\n\telse --sum[(a[x] - 1) / Num_Block + 1];\n}\n\nvoid Work(int x)\n{\n\tbook[x] ? Del(x) : Add(x);\n\tbook[x] ^= 1;\n}\n\nint Ask(int l, int r)\n{\n\tint yl = (l - 1) / Num_Block + 1, yr = (r - 1) / Num_Block + 1;\n\tif (yl == yr)\n\t{\n\t\tfor (int i = l; i <= r; ++i)\n\t\t\tif (val[i] & 1) return i;\n\t\treturn -1;\n\t}\n\tint el = yl * Num_Block, br = (yr - 1) * Num_Block + 1;\n\tfor (int i = l; i <= el; ++i)\n\t\tif (val[i] & 1) return i;\n\tfor (int i = br; i <= r; ++i)\n\t\tif (val[i] & 1) return i;\n\tfor (int i = yl + 1; i <= yr - 1; ++i)\n\t{\n\t\tif (sum[i])\n\t\t{\n\t\t\tl = (i - 1) * Num_Block + 1, r = i * Num_Block;\n\t\t\tfor (int j = l; j <= r; ++j)\n\t\t\t\tif (val[j] & 1) return j;\n\t\t}\n\t}\n\treturn -1;\n}\n\nint main()\n{\n\tn = Read(), m = Read();\n\tfor (int i = 1; i <= n; ++i) a[i] = Read();\n\tfor (int i = 1; i < n; ++i) { int x = Read(), y = Read(); add_Edge(x, y); add_Edge(y, x); }\n\tdfs(1, 1); init(); Block = cnt_n / sqrt(m); Num_Block = sqrt(n);\n\tfor (int i = 1; i <= cnt_n; ++i) ys[i] = (i - 1) / Block + 1;//cnt_n=2n\n\tfor (int i = 1; i <= m; ++i)\n\t{\n\t\tq[i].x = Read(), q[i].y = Read(), q[i].l = Read(), q[i].r = Read(), q[i].id = i;\n\t\tq[i].lca = LCA(q[i].x, q[i].y);\n\t\tif (fir[q[i].x] > fir[q[i].y]) std::swap(q[i].x, q[i].y);\n\t\tif (q[i].x == q[i].lca) { q[i].x = fir[q[i].x]; q[i].y = fir[q[i].y]; q[i].lca = 0; }\n\t\telse { q[i].x = las[q[i].x]; q[i].y = fir[q[i].y]; }\n\t}\n\tstd::sort(q + 1, q + m + 1, cmp);\n\tint l = 1, r = 0;\n\tfor (int i = 1; i <= m; ++i)\n\t{\n\t\twhile (l > q[i].x) Work(Eular[--l]);\n\t\twhile (r < q[i].y) Work(Eular[++r]);\n\t\twhile (l < q[i].x) Work(Eular[l++]);\n\t\twhile (r > q[i].y) Work(Eular[r--]);\n\t\tif (q[i].lca) Work(q[i].lca);\n\t\tans[q[i].id] = Ask(q[i].l, q[i].r);\n\t\tif (q[i].lca) Work(q[i].lca);\n\t}\n\tfor(int i = 1; i <= m; ++i) printf(\"%d\\n\", ans[i]);\n\treturn 0;\n}\n```\n\n\u6811\u4e0a\u83ab\u961f\u7b80\u4ecb\uff1a\n\n\u505a\u6811\u4e0a\u83ab\u961f\uff0c\u4f60\u9700\u8981\u77e5\u9053\u6b27\u62c9\u5e8f\u3002\n\n\u6b27\u62c9\u5e8f\u5c31\u662f DFS \u5e8f\u7684\u5347\u7ea7\u7248\uff0c\u5728\u6bcf\u4e00\u6b21\u904d\u5386\u5230\u8fd9\u4e2a\u8282\u70b9\u7684\u65f6\u5019\u8bb0\u5f55\u4e00\u6b21\uff0c\u79bb\u5f00\u8fd9\u4e2a\u8282\u70b9\u7684\u65f6\u5019\u518d\u8bb0\u5f55\u4e00\u6b21\u3002\n\n\u4e00\u822c\u91c7\u7528 $fir_{x}$ \u8868\u793a $x$ \u5728\u6b27\u62c9\u5e8f\u4e2d\u7b2c\u4e00\u4e2a\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c$las_{x}$ \u8868\u793a $x$ \u5728\u6b27\u62c9\u5e8f\u4e2d\u7b2c\u4e8c\u4e2a\uff08\u6700\u540e\u4e00\u4e2a\uff09\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\n\n\u5f53\u4e00\u4e2a\u8be2\u95ee\u8be2\u95ee\u8def\u5f84 $x \\to y$ \u7684\u65f6\u5019\uff0c\u5982\u679c $x,y$ \u5728\u4e00\u6761\u94fe\u4e0a\uff0c\u8be2\u95ee\u7684\u533a\u95f4\u5c31\u662f $[fir_x,fir_y]$\uff0c\u5426\u5219\u5c31\u662f $[las_x,fir_y]$\uff0c\u5177\u4f53\u8be2\u95ee\u533a\u95f4\u53ef\u4ee5\u4f7f\u7528 LCA \u5224\u65ad\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\u5f53\u8be2\u95ee $[las_x,fir_y]$ \u7684\u65f6\u5019\uff0c\u4e0d\u80fd\u5fd8\u8bb0\u8ba1\u7b97\u4ed6\u4eec LCA \u7684\u8d21\u732e\u3002\n\n> LCA\uff1a\u6811\u4e0a\u6700\u8fd1\u516c\u5171\u7956\u5148\u3002\n\n\u7531\u4e8e\u4e00\u4e2a\u70b9\u5728\u6b27\u62c9\u5e8f\u4e2d\u4f1a\u51fa\u73b0\u4e24\u6b21\uff0c\u56e0\u6b64\u6811\u4e0a\u83ab\u961f\u7684\u4fee\u6539\u91c7\u7528\u5947\u589e\u5076\u5220\u539f\u5219\uff0c\u5373\u82e5\u8fd9\u4e2a\u70b9\u662f\u5947\u6570\u6b21\u88ab\u4fee\u6539\u5c31\u589e\u52a0\uff0c\u5076\u6570\u6b21\u88ab\u4fee\u6539\u5c31\u51cf\u5c11\u3002\n\n\u5199\u7684\u6709\u70b9\u5c11\u5927\u81f4\u770b\u770b\u5427qwq",
        "postTime": 1626937916,
        "uid": 134000,
        "name": "Plozia",
        "ccfLevel": 7,
        "title": "CF1479D Odd Mineral Resource \u9898\u89e3"
    },
    {
        "content": "## \u524d\u8a00\n\u573a\u4e0a\u6ca1\u5f00\u8fd9\u9898\uff01\uff011\n\nA \u88ab hack \u4e86\uff01\uff011\n\n\u6389\u5206\u4e86\uff01\uff011\n## \u601d\u8def\n\u524d\u7f6e\u77e5\u8bc6\uff1aCF1000F \u7684\u5747\u644a\u590d\u6742\u5ea6\u5206\u6790\u3002\n\n\u8003\u8651\u6811\u4e0a\u83ab\u961f\uff0c\u6bcf\u6b21\u79fb\u52a8\u7aef\u70b9\u65f6\uff0c\u7ef4\u62a4\u6bcf\u4e2a\u6570\u7684\u51fa\u73b0\u6b21\u6570\u3002\n\n\u7136\u540e\u5bf9\u6bcf\u4e2a\u70b9\u7684\u6743\u503c\u503c\u57df\u5206\u5757\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u503c\u57df\u5757\uff0c\u7ef4\u62a4\u4e00\u4e2a\u6808\uff0c\u5f53\u67d0\u4e2a\u6570\u88ab\u8bbf\u95ee\u5230\u4e14\u8fd8\u6ca1\u5165\u6808\u7684\u65f6\u5019\u5c31\u5c06\u5b83\u52a0\u5165\u5bf9\u5e94\u503c\u57df\u5757\u7684\u6808\u3002\n\n\u4e8e\u662f\u6211\u4eec\u4fdd\u8bc1\u4e86\u6bcf\u6b21\u79fb\u52a8\u5b8c\u7aef\u70b9\u540e\uff0c**\u6240\u6709\u53ef\u80fd\u6210\u4e3a\u7b54\u6848\u7684\u6570**\u90fd\u5728\u6808\u4e2d\u3002\n\n\u8fd9\u6837\u6211\u4eec\u53ea\u8981\u5bf9\u6574\u5757\u7684 $\\sqrt n$ \u4e2a\u6808\u4e0d\u65ad\u5f39\u51fa\u76f4\u5230\u627e\u5230\u7b54\u6848\u6216\u6808\u7a7a\u65f6\u505c\u6b62\uff0c\u518d\u5bf9\u4e24\u8fb9\u6563\u5757\u76f4\u63a5\u67e5\u8be2\u51fa\u73b0\u6b21\u6570\u5373\u53ef\u3002\n\n\u79fb\u52a8\u7aef\u70b9\u5355\u6b21\u590d\u6742\u5ea6 $O(1)$\uff0c\u6bcf\u4e2a\u8be2\u95ee\u67e5\u8be2\u5355\u6b21\u590d\u6742\u5ea6 $O(\\sqrt n+popcnt)$\uff0c$\\sum popcnt=O(n\\sqrt n)$\uff0c\u56e0\u6b64\u603b\u590d\u6742\u5ea6 $O(n\\sqrt n)$\u3002\n## \u4ee3\u7801\n$4991$ \u6beb\u79d2\uff0c\u5dee\u70b9\u5c31\u6700\u52a3\u89e3\u4e86/shake\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read()\n{\n    int x=0,f=1;char ch=getchar();\n    while(ch<'0' || ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while('0'<=ch && ch<='9'){x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}\n    return x*f;\n}\nint n,m,qcnt,bl,Q;\nint a[600003],cnt[300003];\nint Ans[600003];\nstruct query\n{\n\tint vl,vr,l,r,id,pl,qwq;\n\tbool operator<(const query&a) const { return (pl<a.pl)||(pl==a.pl&&r<a.r); }\n}q[600003];\nint nxt[600003],head[300003],to[600003],ecnt;\nint IN[300003],OUT[300003],CNT;\nint A[600003],d[300003],fa[300003][20];\nbool flag[300003];\nstack<int> s[603];\ninline void ins(int x)\n{\n\tif(flag[x]) --cnt[a[x]];\n\telse ++cnt[a[x]];\n\tif(cnt[a[x]]&1) s[a[x]>>10].push(a[x]);\n\tflag[x]^=1;\n} \ninline void dfs(int x,int y)\n{\n\tfa[x][0]=y,d[x]=d[y]+1;\n\tfor(int i=1; i<=19; i++) fa[x][i]=fa[fa[x][i-1]][i-1];\n\tIN[x]=++CNT,A[CNT]=x;\n\tfor(int i=head[x]; i; i=nxt[i]) if(to[i]!=y) dfs(to[i],x);\n\tOUT[x]=++CNT,A[CNT]=x;\n}\ninline int LCA(int x,int y)\n{\n\tif(d[x]>d[y]) swap(x,y);\n\tfor(int i=19; i>=0; i--) if(d[x]<=d[fa[y][i]]) y=fa[y][i];\n\tif(x==y) return x;\n\tfor(int i=19; i>=0; i--) if(fa[x][i]!=fa[y][i]) x=fa[x][i],y=fa[y][i];\n\treturn fa[x][0];\n}\nsigned main()\n{\n\tn=read(),Q=read(),bl=sqrt(n)*2+1;\n\tfor(int i=1; i<=n; i++) a[i]=read();\n\tfor(int i=1,u,v; i<n; i++) u=read(),v=read(),\n\tto[++ecnt]=v,nxt[ecnt]=head[u],head[u]=ecnt,\n\tto[++ecnt]=u,nxt[ecnt]=head[v],head[v]=ecnt;\n\tdfs(1,1);\n\tfor(int i=1,x,y,l,r; i<=Q; i++) \n\t{\n\t\tx=read(),y=read(),l=read(),r=read();\n\t\tif(IN[x]>IN[y]) swap(x,y);\n\t\tif(LCA(x,y)==x) q[++qcnt].l=IN[x],q[qcnt].r=IN[y];\n\t\telse q[++qcnt].l=OUT[x],q[qcnt].r=IN[y],q[qcnt].qwq=LCA(x,y);\n\t\tq[qcnt].pl=q[qcnt].l/bl,q[qcnt].id=qcnt,q[qcnt].vl=l,q[qcnt].vr=r;\n\t}\n\tsort(q+1,q+qcnt+1),memset(Ans,-1,sizeof(Ans));\n\tfor(int i=1,l=1,r=0; i<=qcnt; i++)\n\t{\n\t\twhile(l<q[i].l) ins(A[l++]);\n\t\twhile(l>q[i].l) ins(A[--l]);\n\t\twhile(r<q[i].r) ins(A[++r]);\n\t\twhile(r>q[i].r) ins(A[r--]);\n\t\tif(q[i].qwq) ins(q[i].qwq);\n\t\tint L=q[i].vl,R=q[i].vr,pl=L>>10,pr=R>>10;\n\t\tif(pl==pr)\n\t\t{\n\t\t\tfor(int j=L; j<=R; ++j) if(cnt[j]&1)\n\t\t\t{\n\t\t\t\tAns[q[i].id]=j;\n\t\t\t\tbreak;\n\t\t\t } \n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(int j=L,t=(pl+1)<<10; j<t; ++j) if(cnt[j]&1)\n\t\t\t{\n\t\t\t\tAns[q[i].id]=j;\n\t\t\t\tbreak;\n\t\t\t} \n\t\t\tif(Ans[q[i].id]==-1) for(int j=pr<<10; j<=R; ++j) if(cnt[j]&1)\n\t\t\t{\n\t\t\t\tAns[q[i].id]=j;\n\t\t\t\tbreak;\n\t\t\t} \n\t\t\tif(Ans[q[i].id]==-1) for(int j=pl+1; j<pr; ++j)\n\t\t\t{\n\t\t\t\twhile(!s[j].empty())\n\t\t\t\t{\n\t\t\t\t\tif(cnt[s[j].top()]&1) \n\t\t\t\t\t{\n\t\t\t\t\t\tAns[q[i].id]=s[j].top();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse s[j].pop();\n\t\t\t\t}\t\n\t\t\t\tif(Ans[q[i].id]!=-1) break;\n\t\t\t}\n\t\t}\n\t\tif(q[i].qwq) ins(q[i].qwq);\n\t} \n\tfor(int i=1; i<=qcnt; i++) printf(\"%d\\n\",Ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1613615341,
        "uid": 111055,
        "name": "dead_X",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1479D\u3010\u540d\u5b57\u61d2\u5f97\u6253\u4e86\u3011"
    },
    {
        "content": "### CF1479D Odd Mineral Resource\n\n`CF1000F` \u4e0a\u6811\uff0c\u8003\u8651\u6811\u4e0a\u83ab\u961f\u3002\n\n\u540c\u7406\uff0c\u5bf9\u503c\u57df\u5206\u5757\uff0c\u8bb0 $sum_i$ \u8868\u793a\u7b2c $i$ \u5757\u503c\u57df\u51fa\u73b0\u6b21\u6570\u4e3a\u5947\u6570\u7684\u6570\u7684\u4e2a\u6570\uff0c\u518d\u5f00\u4e2a\u6876\u8bb0\u5f55\u4e00\u4e0b\u6bcf\u4e2a\u6570\u7684\u51fa\u73b0\u6b21\u6570\u5c31\u884c\u4e86\uff0c\u5355\u6b21\u4fee\u6539 $\\mathcal O(1)$\u3002\n\n\u5bf9\u4e8e\u8be2\u95ee\uff0c\u540c\u5757\u66b4\u529b\uff0c\u5426\u5219\u4ece\u5de6\u6563\u5757\uff0c\u4e2d\u6574\u5757\uff0c\u53f3\u6563\u5757\u5224\u65ad\uff0c\u627e\u5230\u5c31\u7ed3\u675f\uff0c\u5355\u6b21\u8be2\u95ee $\\mathcal O(\\sqrt n)$\u3002\n\n\u8bf4\u4e0b\u6811\u4e0a\u83ab\u961f\u7684\u7ec6\u8282\uff1a\n\n* \u5efa\u62ec\u53f7\u5e8f\uff0c\u6709\u4e24\u79cd\u60c5\u51b5\uff0c\u6709\u4e00\u79cd\u9700\u7279\u5224 `LCA`\uff08\u6811\u5256\u7ef4\u62a4\uff09\u3002\n* \u6ce8\u610f\u4e00\u4e9b\u52a0\u52a0\u51cf\u51cf\u7684\u7ec6\u8282\u95ee\u9898\uff0c\u672c\u4eba\u6a21\u62df\u8d5b\u56e0\u4e3a\u8fd9\u7206\u96f6\u3002\n\n\u7efc\u4e0a\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n\\sqrt n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n)$\uff0c$n$ \u4e0e\u503c\u57df\u540c\u9636\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define he putchar('\\n')\n#define ha putchar(' ')\n\ntypedef long long ll;\n\ninline int read() {\n\tint x = 0;\n\tchar c = getchar();\n\twhile (c < '0' || c > '9')\n\t\tc = getchar();\n\twhile (c >= '0' && c <= '9')\n\t\tx = (x << 3) + (x << 1) + (c ^ 48), c = getchar();\n\treturn x;\n}\n\ninline void write(int x) {\n\tif (x < 0) {\n\t\tx = -x;\n\t\tputchar('-');\n\t}\n\tif (x > 9) write(x / 10);\n\tputchar(x % 10 + 48);\n}\n\nconst int _ = 7e5 + 10;\n\nint n, m, cnt, a[_], L[_], R[_], fn[_], ans[_];\n\nint sq, bel[_];\n\nvector<int> d[_];\n\nvoid dfs(int u, int fa) {\n\tfn[++cnt] = u, L[u] = cnt;\n\tfor (int v : d[u]) {\n\t\tif (v == fa) continue;\n\t\tdfs(v, u);\n\t}\n\tfn[++cnt] = u, R[u] = cnt;\n}\n\nint siz[_], dep[_], fa[_], hson[_], top[_];\n\nvoid dfs1(int u, int D = 1) {\n\tsiz[u] = 1, dep[u] = D;\n\tfor (int v : d[u])\n\t\tif (!siz[v]) {\n\t\tfa[v] = u;\n\t\tdfs1(v, D + 1);\n\t\tsiz[u] += siz[v];\n\t\tif (siz[hson[u]] < siz[v]) hson[u] = v;\n\t}\n}\n\nvoid dfs2(int u, int tf) {\n\ttop[u] = tf;\n\tif (hson[u]) dfs2(hson[u], tf);\n\tfor (int v : d[u])\n\t\tif (!top[v]) dfs2(v, v);\n}\n\nint LCA(int u, int v) {\n\twhile (top[u] != top[v]) {\n\t\tif (dep[top[u]] < dep[top[v]]) swap(u, v);\n\t\tu = fa[top[u]];\n\t}\n\treturn dep[u] > dep[v] ? v : u;\n}\n\nstruct Query {\n\tint l, r, L, R, id, dd;\n} q[_];\n\nbool cmp(Query x, Query y) {\n\tif (bel[x.L] != bel[y.L]) return x.L < y.L;\n\tif (bel[x.L] & 1) return x.R < y.R;\n\treturn x.R > y.R;\n}\n\nint t[_], sum[_], lp[_], rp[_];\n\nvoid upd(int x) {\n\tif (t[x] & 1) sum[bel[x]]--;\n\telse sum[bel[x]]++;\n\tt[x] ^= 1;\n}\n\nsigned main() {\n\tn = read(), m = read();\n\tfor (int i = 1; i <= n; ++i) a[i] = read();\n\tfor (int i = 1; i < n; ++i) {\n\t\tint x = read(), y = read();\n\t\td[x].push_back(y), d[y].push_back(x);\n\t}\n\tdfs(1, 0);\n\tdfs1(1), dfs2(1, 1);\n\tsq = sqrt(cnt) * 1.2;\n\tfor (int i = 1; i <= cnt; ++i) bel[i] = (i - 1) / sq + 1;\n\tfor (int i = 1; i <= bel[cnt]; ++i) lp[i] = rp[i - 1] + 1, rp[i] = min(cnt, i * sq);\n\tfor (int i = 1, u, v; i <= m; ++i) {\n\t\tu = read(), v = read();\n\t\tq[i].l = read(), q[i].r = read(), q[i].id = i;\n\t\tif (L[u] > L[v]) swap(u, v);\n\t\tif (R[u] < L[v]) q[i].L = R[u], q[i].R = L[v], q[i].dd = LCA(u, v);\n\t\telse q[i].L = L[u], q[i].R = L[v];\n\t}\n\tsort(q + 1, q + m + 1, cmp);\n\tint l = 0, r = 0;\n\tfor (int i = 1; i <= m; ++i) {\n\t\twhile (l > q[i].L) upd(a[fn[--l]]);\n\t\twhile (r < q[i].R) upd(a[fn[++r]]);\n\t\twhile (l < q[i].L) upd(a[fn[l++]]);\n\t\twhile (r > q[i].R) upd(a[fn[r--]]);\n\t\tupd(a[fn[L[q[i].dd]]]);\n\t\tbool flg = 0;\n\t\tif (bel[q[i].l] == bel[q[i].r]) {\n\t\t\tfor (int j = q[i].l; j <= q[i].r; ++j)\n\t\t\t\tif (t[j] & 1) {ans[q[i].id] = j, flg = 1;break;}\n\t\t} else {\n\t\t\tif (!flg) for (int j = q[i].l; j <= rp[bel[q[i].l]]; ++j) if (t[j] & 1) {ans[q[i].id] = j;flg = 1;break;}\n\t\t\tif (!flg) for (int j = bel[q[i].l] + 1; j <= bel[q[i].r] - 1; ++j) if (sum[j]) {\n\t\t\t\tfor (int k = lp[j]; k <= rp[j]; ++k) if (t[k] & 1) {ans[q[i].id] = k;flg = 1;break;}\n\t\t\t\tif (flg) break;\n\t\t\t}\n\t\t\tif (!flg) for (int j = lp[bel[q[i].r]]; j <= q[i].r; ++j) if (t[j] & 1) {ans[q[i].id] = j;flg = 1;break;}\n\t\t}\n\t\tif (!flg) ans[q[i].id] = -1;\n\t\tupd(a[fn[L[q[i].dd]]]);\n\t}\n\tfor (int i = 1; i <= m; ++i) write(ans[i]), he;\n\treturn 0;\n}\n```\n\n",
        "postTime": 1658732809,
        "uid": 257146,
        "name": "orz_z",
        "ccfLevel": 0,
        "title": "CF1479D Odd Mineral Resource"
    },
    {
        "content": "\u6811\u4e0a\u5947\u602a\u95ee\u9898\uff0c$n=3\\times10^5$\uff0c\u76f4\u63a5\u8003\u8651\u6839\u53f7\u3002\n\n\u6811\u4e0a\u83ab\u961f\uff0c\u7136\u540e\u5957\u4e0a\u503c\u57df\u5206\u5757\u7ef4\u62a4\u6bcf\u4e2a\u4f4d\u7f6e\u989c\u8272\u7684\u5947\u5076\u6027\uff0c\u6bcf\u4e2a\u5757\u5947\u989c\u8272\u7684\u4e2a\u6570\u3002\n\n\u5361\u5e38\uff1a\n\n+ \u6811\u5256\u6c42 $\\tt LCA$\uff08\u4f60\u751a\u81f3\u53ef\u4ee5\u5199\u57fa\u4e8e\u62ec\u53f7\u5e8f\u3001$\\tt RMQ$ \u7684 $\\mathcal O(1)$ \u590d\u6742\u5ea6 $\\tt LCA$\uff0c\u4f46\u662f\u6811\u5256\u5c31\u591f\u4e86\uff09\n+ $\\tt IO$ \u4f18\u5316\uff08\u8f83\u4e3a\u5e38\u89c4\uff0c\u7528\u5904\u4e0d\u5927\uff09\n+ $\\texttt{inline,register}$\uff08\u6211\u89c9\u5f97\u6709\u70b9\u7528\uff09\n+ \u83ab\u961f\u5757\u957f $\\dfrac {2n}{\\sqrt m}$\uff08\u633a\u5feb\uff0c\u4f46\u662f\u5fae\u8c03\u4f1a\u66f4\u597d\uff09\n+ \u5206\u5757\u5757\u957f\u778e\u8c03\n\n\u6a21\u62df\u8d5b\u88ab\u5361\u5e38\u4e86\uff0c\u6ca1\u8fc7\uff0c\u9057\u61be\u3002\n\n```cpp\nconst int N = 3e5 + 5,SQ = 560;\n\nint n,m,a[N],in[N],out[N],ans[N],path[N * 2];\nvector<int> G[N];\nstruct qry{ int l,r,L,R,p,i; } Q[N];\nint dep[N],siz[N],son[N],fa[N],top[N],tot;\nint B,C,st[SQ],ed[SQ],bl[N],sum[SQ],cnt[N];\n\ninline void dfs1(int u = 1,int ft = 0){\n\tdep[u] = dep[fa[u] = ft] + 1; siz[u] = 1;\n\tfor(int v : G[u]) if(v != ft){\n\t\tdfs1(v,u);\n\t\tif(siz[v] > siz[son[u]]) son[u] = v;\n\t}\n}\n\ninline void dfs2(int u = 1,int tp = 1){\n\ttop[u] = tp;\n\tpath[in[u] = ++tot] = u;\n\tif(son[u]) dfs2(son[u],tp);\n\tfor(int v : G[u]) if(!top[v]) dfs2(v,v);\n\tpath[out[u] = ++tot] = u;\n}\n\ninline int lca(int u,int v){\n\twhile(top[u] != top[v]){\n\t\tif(dep[top[u]] < dep[top[v]]) swap(u,v);\n\t\tu = fa[top[u]];\n\t}\n\treturn dep[u] < dep[v] ? u : v;\n}\n\ninline void init(){\n\tB = 600; C = (n - 1) / B + 1;\n\trep(i,1,C){\n\t\tst[i] = ed[i] + 1;\n\t\ted[i] = (i == C) ? n : i * B;\n\t\trep(j,st[i],ed[i]) bl[j] = i;\n\t}\n}\n\ninline void Upd(int x){\n\t(cnt[x] ^= 1) ? ++sum[bl[x]] : --sum[bl[x]];\n}\n\ninline int Qry(int L,int R){\n\tif(bl[L] == bl[R]){\n\t\trep(i,L,R) if(cnt[i]) return i;\n\t\treturn -1;\n\t}\n\trep(i,L,ed[bl[L]]) if(cnt[i]) return i;\n\trep(i,bl[L] + 1,bl[R] - 1) if(sum[i])\n\t\trep(j,st[i],ed[i]) if(cnt[i]) return i;\n\trep(i,st[bl[R]],R) if(cnt[i]) return i;\n\treturn -1;\n}\n\nint main(){\n\tn = read(),m = read(); init();\n\trep(i,1,n) a[i] = read();\n\trep(i,1,n - 1){\n\t\tint u = read(),v = read();\n\t\tG[u].push_back(v);\n\t\tG[v].push_back(u);\n\t}\n\tdfs1(); dfs2();\n\trep(i,1,m){\n\t\tint u = read(),v = read(),p = lca(u,v);\n\t\tint L = read(),R = read();\n\t\tif(in[u] > in[v]) swap(u,v);\n\t\tif(p != u && p != v) Q[i] = (qry){out[u],in[v],L,R,p,i};\n\t\telse Q[i] = (qry){in[u],in[v],L,R,0,i};\n\t}\n\tint Bl = 2 * n / sqrt(m);\n\tsort(Q + 1,Q + m + 1,[Bl](qry x,qry y){\n\t\treturn (x.l / Bl) ^ (y.l / Bl) ? x.l < y.l : (x.l / Bl) & 1 ? x.r < y.r : x.r > y.r;\n\t});\n\tint l = 1,r = 0;\n\trep(i,1,m){\n\t\twhile(r < Q[i].r) Upd(a[path[++r]]);\n\t\twhile(l > Q[i].l) Upd(a[path[--l]]);\n\t\twhile(r > Q[i].r) Upd(a[path[r--]]);\n\t\twhile(l < Q[i].l) Upd(a[path[l++]]);\n\t\tif(Q[i].p) Upd(a[Q[i].p]);\n\t\tans[Q[i].i] = Qry(Q[i].L,Q[i].R);\n\t\tif(Q[i].p) Upd(a[Q[i].p]);\n\t}\n\trep(i,1,m) printf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1658725976,
        "uid": 368107,
        "name": "xfrvq",
        "ccfLevel": 7,
        "title": "CF1479D Odd Mineral Resource"
    },
    {
        "content": "\u8003\u8651\u5728\u5e8f\u5217\u4e0a\u6211\u4eec\u600e\u4e48\u505a\uff1a\n\n\u8003\u8651\u83ab\u961f\u53bb\u7ef4\u62a4\u4e00\u4e2a\u503c\u57df\u5206\u5757\uff0c\u8be5\u503c\u57df\u5206\u5757\u6bcf\u5757\u7ef4\u62a4\u51fa\u73b0\u6b21\u6570\u4e3a\u5947\u6570\u7684\u6570\u7684\u4e2a\u6570\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u6574\u5757\u67e5\u4e00\u4e0b\u5176\u51fa\u73b0\u6b21\u6570\u4e3a\u5947\u6570\u7684\u6570\u7684\u4e2a\u6570\uff0c\u5982\u679c\u4e0d\u4e3a $0$ \u5219\u904d\u5386\u8be5\u5757\u5185\u7684\u5143\u7d20\uff0c\u627e\u5230\u5408\u6cd5\u7684 $x$ \u76f4\u63a5\u8f93\u51fa\u3002 \u5e76\u4e14\u8fd9\u4e2a\u503c\u57df\u5206\u5757\u6211\u4eec\u53ef\u4ee5\u505a\u5230 $O(1)$ \u4fee\u6539 $O(\\sqrt{N})$ \u67e5\u8be2\uff0c\u56e0\u6b64\u603b\u7684\u590d\u6742\u5ea6\u5373 $O(M\\sqrt{N} + N\\sqrt{M})$\u3002\n\n\u76f4\u63a5\u5c06\u4e0a\u9762\u505a\u6cd5\u4e0a\u6811\u5373\u53ef\u3002\n\n\u5361\u5e38\u5c0f\u6280\u5de7\uff08\u96fe\uff09\uff1a\u53ea\u79bb\u6563\u5316\u70b9\u6743\u5e76\u5728\u6b64\u57fa\u7840\u4e0a\u5efa\u7acb\u503c\u57df\u5206\u5757\uff0c\u6bcf\u4e2a\u8be2\u95ee\u4e8c\u5206\u5bf9\u5e94\u533a\u95f4\u3002\n\n```cpp\n#include <bits/stdc++.h>\n \nnamespace wxy{\n \nconst int N = 3e5+5,Q = 3e5+5;\n \nint head[N],edge[N<<1],fail[N<<1],tot;\n \nint w[N],b[N<<2],a[N<<1],c[N<<2],n,m,q,dfn,S;\n \nint ans[Q],f[25][N],d[N],st[N],ed[N],use[N<<2],bm[N],cnt[N<<2],cj[N];\n \nbool vis[N];\n \nstruct node{int u,v,l,r,LCA,idx;}ask[Q],qa[Q];\n \ninline int read(){\n    int s=0,f=1;char ch=getchar();\n    while(!isdigit(ch)) {if(ch=='-') f=-1;ch=getchar();}\n    while(isdigit(ch)) s=s*10+ch-'0',ch=getchar();\n    return s*f;\n}\n \ninline int get(int x){return std::lower_bound(b + 1,b + 1 + m,x) - b;}\n \ninline bool cmp(node a,node b){return (a.v/1001)==(b.v/1001)?a.u<b.u:a.v<b.v;}\n \ninline void ins(int x,int y){\n    edge[++tot] = y;\n    fail[tot] = head[x];\n    head[x] = tot;\n}\n \ninline void dfs(int x){\n    vis[x] = true; st[x] = ++dfn; a[dfn] = x;\n    for (int i = 1; i <= 19; i++)\n        f[i][x] = f[i-1][f[i-1][x]];\n    for (int i = head[x]; i; i = fail[i]){\n        int v = edge[i];\n        if (vis[v]) continue;\n        d[v] = d[x] + 1; f[0][v] = x;\n        dfs(v);\n    }\n    ed[x] = ++dfn; a[dfn] = x;\n}\n \ninline int lca(int x,int y){\n    if (d[x] < d[y]) std::swap(x,y);\n    for (int i = 19; i >= 0; i--)\n        if (d[f[i][x]] >= d[y]) x = f[i][x];\n    if (x == y) return x;\n    for (int i = 19; i >= 0; i--)\n        if (f[i][x] != f[i][y]) {x = f[i][x]; y = f[i][y];}\n    return f[0][x];\n}\n \ninline int getL(int idx){return (idx-1)*S+1;}\ninline int getR(int idx){return std::min(idx*S,m);}\n \ninline void init(){for (int i = 1; i <= m; i++) bm[i] = (i-1)/S+1;}\n \ninline int bf(int l,int r){\n    for (int i = l; i <= r; i++)\n        if (cnt[i] % 2 == 1) return b[i];\n    return -1;\n}\n \ninline int query(int l,int r){\n    if (bm[l] == bm[r]) return bf(l,r);\n    for (int i = l; i <= getR(bm[l]); i++){\n        if (cnt[i] % 2 == 1) return b[i];\n    }\n    for (int i = getL(bm[r]); i <= r; i++){\n        if (cnt[i] % 2 == 1) return b[i];\n    }\n    for (int i = bm[l] + 1; i < bm[r]; i++)\n        if (cj[i] > 0) return bf(getL(i),getR(i));\n    return -1;\n}\n \ninline void change(int x,int v){cnt[x] += v;cnt[x]%2==0?cj[bm[x]]--:cj[bm[x]]++;}\n \ninline void add(int x){change(x,1);}\ninline void del(int x){change(x,-1);}\n \ninline void Add(int x){use[x] ? del(w[x]) : add(w[x]); use[x] ^= 1;}\n \ninline void solve(){\n    init();int l = 1,r = 0; //std::cout << q;\n    for (int i = 1; i <= q; i++){\n        int ql = qa[i].u,qr = qa[i].v;\n        int qL = qa[i].l,qR = qa[i].r; \n        //std::cout << qL << \" \" << qR << std::endl;\n        while (l < ql){Add(a[l]); l++;}\n        while (l > ql){l--; Add(a[l]);}\n        while (r < qr){r++; Add(a[r]);}\n        while (r > qr){Add(a[r]); r--;}\n        if (qa[i].l == qa[i].r && qa[i].l == 0) {ans[qa[i].idx] = -1; continue;}\n        if (qa[i].LCA != -1) Add(qa[i].LCA);\n        ans[qa[i].idx] = query(qL,qR);\n        if (qa[i].LCA != -1) Add(qa[i].LCA);\n    }\n}\n \ninline void fprint(){for (int i = 1; i <= q; i++) printf(\"%d\\n\",ans[i]);}\n \ninline void initlr(){\n    for (int i = 1; i <= q; i++){\n        int l = ask[i].l,r = ask[i].r;\n        int pl = get(l),pr = get(r);\n        if (pr > m) pr--;\n        if (pl > m) pl--;\n        if (b[pl] > r) {ask[i].l = ask[i].r = 0; continue;}\n        if (b[pr] > r) pr--;\n        if (b[pr] < l) {ask[i].l = ask[i].r = 0; continue;}\n        ask[i].l = pl; ask[i].r = pr;\n    }\n}\n\ninline void main(){\n    #ifndef ONLINE_JUDGE\n        freopen(\"in.in\",\"r\",stdin);\n        freopen(\"out.out\",\"w\",stdout);\n    #endif\n    dfn = m = tot = 0; memset(d,-1,sizeof d);\n    n = read(); q = read(); S = 800;\n    for (int i = 1; i <= n; i++) w[i] = read();\n    for (int i = 1; i <= n; i++) c[i] = w[i]; int idx = n;\n    std::sort(c + 1,c + 1 + idx);\n    for (int i = 1; i <= idx; i++)\n        if (i == 1 || c[i] != c[i-1]) b[++m] = c[i];\n    for (int i = 1; i <= n; i++) w[i] = get(w[i]);\n    for (int i = 1; i < n; i++){\n        int a,b; a = read(); b = read();\n        ins(a,b); ins(b,a);\n    }\n    d[1] = 0; dfs(1);\n    for (int i = 1; i <= q; i++){\n        ask[i].u = read(); ask[i].v = read(); \n        ask[i].l = read(); ask[i].r = read();\n    }\n    initlr();\n    for (int i = 1; i <= q; i++){\n        if (st[ask[i].u] > st[ask[i].v]) std::swap(ask[i].u,ask[i].v);\n        int LCA = lca(ask[i].u,ask[i].v); //ask[i].l = get(ask[i].l); ask[i].r = get(ask[i].r);\n        int x = ask[i].u,y = ask[i].v;\n        if (LCA == x) {qa[i].u = st[x]; qa[i].v = st[y]; qa[i].LCA = -1;}\n        else {qa[i].u = ed[x]; qa[i].v = st[y]; qa[i].LCA = LCA;}\n        qa[i].idx = i; qa[i].l = ask[i].l; qa[i].r = ask[i].r;\n    }\n    std::sort(qa + 1,qa + 1 + q,cmp);\n    solve(); fprint();\n}\n \n}signed main(){wxy::main(); return 0;}\n```\n",
        "postTime": 1618552098,
        "uid": 317459,
        "name": "RyexAwl",
        "ccfLevel": 6,
        "title": "CF1479D Odd Mineral Resource \u6811\u4e0a\u83ab\u961f \u503c\u57df\u5206\u5757"
    },
    {
        "content": "[\u6d1b\u8c37\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1479D) & [CF \u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1479D)\u3002\n\n> \u9898\u610f\uff1a\u7ed9\u5b9a $n$ \u4e2a\u70b9\u7684\u6811\u548c $m$ \u4e2a\u64cd\u4f5c\uff0c\u70b9\u6709\u989c\u8272\uff0c\u6bcf\u6b21\u8be2\u95ee\u6709\u6ca1\u6709\u4e00\u79cd\u989c\u8272\u5c5e\u4e8e\u7279\u5b9a\u533a\u95f4\u5e76\u5728\u7279\u5b9a\u8def\u5f84\u4e0a\u51fa\u73b0\u5947\u6570\u6b21\u3002\n\n>$n, m \\le 3\\times 10^5$\u3002\n\n~~\u53c8\u662f\u4e00\u9053 DS \u795e\u4ed9\u9898\uff0c\u800c\u4e14\u7801\u91cf\u6781\u5927\uff0cdebug \u6781\u4e45\uff0c\u4e0d\u6127\u4e3a *2900 \u7684\u9898\u3002~~\n\n---\n\n### $Solution:$\n\n\u4ee5\u4e0b\u9ed8\u8ba4 $n, m$ \u540c\u9636\n\n\u770b\u5230\u6570\u989c\u8272\u7684\u9898\u4e45\u60f3\u5230\u7528\u83ab\u961f\uff0c\u7531\u4e8e\u662f\u6811\u4e0a\u7684\u6240\u4ee5\u6211\u4eec\u8fd8\u8981\u5957\u4e00\u4e2a\u6811\u4e0a\u83ab\u961f\u3002\n\n\u6211\u4eec\u5bf9\u989c\u8272\u8fdb\u884c\u5206\u5757\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5757\uff0c\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u6570\u7ec4\uff0c\u5f53\u6211\u4eec\u5728\u83ab\u961f\u79fb\u52a8\u7aef\u70b9\u7684\u65f6\u5019\u5c31\u628a\u6ca1\u51fa\u73b0\u8fc7\u7684\u989c\u8272\u5168\u90fd\u4e22\u8fdb\u6240\u5728\u5757\u7684\u6570\u7ec4\u91cc\u3002\u5f88\u663e\u7136\uff0c\u6b64\u65f6**\u6570\u7ec4\u5185\u6240\u6709\u7684\u5143\u7d20\u4e0d\u4e00\u5b9a\u662f\u7b54\u6848\uff0c\u800c\u6240\u6709\u53ef\u80fd\u7684\u7b54\u6848\u90fd\u4e00\u5b9a\u4f1a\u5728\u8fd9\u4e2a\u6570\u7ec4\u91cc\u3002**\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u6563\u70b9\u76f4\u63a5\u66b4\u529b\u67e5\u8be2\u5373\u53ef\uff0c\u6574\u5757\u5c31\u4e00\u76f4\u627e\u8fd9\u4e2a\u6570\u7ec4\u91cc\u6709\u6ca1\u6709\u5408\u6cd5\u7684\uff0c\u800c\u4e14\u4e0d\u5408\u6cd5\u7684\u76f4\u63a5\u4ece\u8fd9\u4e2a\u6570\u7ec4\u4e2d\u79fb\u9664\u5373\u53ef\u3002\n\n\u5206\u6790\u4e00\u4e0b\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u9996\u5148\u6811\u4e0a\u83ab\u961f\u7684\u590d\u6742\u5ea6\u662f $O(n\\sqrt n)$ \u7684\uff0c\u7531\u4e8e\u79fb\u52a8\u6b21\u6570\u662f $n\\sqrt n$\uff0c\u6545\u8fdb\u5165\u6570\u7ec4\u7684\u6b21\u6570\u662f $n\\sqrt n$\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u5373\u4e3a $O(n\\sqrt n)$\u3002\n\n\u8fd9\u6837\u5c31\u641e\u5b9a\u4e86\uff0c\u53ea\u662f\u6811\u4e0a\u83ab\u961f\u7684\u677f\u5b50\u53ef\u80fd\u6709\u70b9\u957f\u800c\u5df2\u3002\n\n---\n### $Code:$\n\n\u4ee3\u7801\u53ef\u80fd\u6709\u4ebf\u70b9\u957f\uff0c\u8bf7\u8010\u5fc3\u98df\u7528\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <cmath>\n#include <vector>\n#include <queue>\n#include <map>\n#include <set>\nusing namespace std;\n#define ll long long\n#define ull unsigned long long\n#define ld long double\n#define fi first\n#define se second\n#define mpr make_pair\n#define dingyi int mid = l + r >> 1, ls = p << 1, rs = p << 1 | 1\n#define y0 y_csyakioi_0\n#define y1 y_csyakioi_1\n#define rep(i, x, y) for(int i = x; i <= y; ++i)\n#define per(i, x, y) for(int i = x; i >= y; --i)\n#define repg(i, u) for(int i = head[u]; i; i = e[i].nxt)\ninline int read(){\n\tint x = 0, f = 1; char ch = getchar();\n\twhile(ch < '0' || ch > '9'){ if(ch == '-') f = -1; ch = getchar(); }\n\twhile(ch >= '0' && ch <= '9'){ x = x * 10 + (ch ^ 48); ch = getchar(); }\n\treturn x * f;\n}\nconst int N = 300010, M = 610;\nstruct edge{ int v, nxt; }e[N << 1];\nint head[N], cnt, n, m, k, p, t, x, y, z, l, r, tot, maxx, c[N], dep[N], L[N], R[N], rev[N << 1], f[N][20], ans[N], pl[N], pr[N], pos[N], num[N], st[M][M], len[M]; bool vis[N];\nstruct ask{\n\tint idx, x, y, l, r, z;\n\task(int a = 0, int b = 0, int c = 0, int d = 0, int e = 0, int f = 0){\n\t\tidx = a; x = b; y = c; l = d; r = e; z = f;\n\t}\n\tbool operator < (const ask&rhs)const{\n\t\treturn (x - 1) / t + 1 ^ (rhs.x - 1) / t + 1 ? x < rhs.x : (x - 1) / t + 1 & 1 ? y < rhs.y : y > rhs.y;\n\t}\n}q[N];\ninline void change(int x){\n\tx = c[rev[x]]; num[x] ^= 1;\n\tif(num[x]){\n\t\tint y = pos[x];\n\t\tif(!vis[x]) st[y][++len[y]] = x, vis[x] = 1;\n\t}\n}\ninline void add(int u, int v){ e[++cnt].v = v; e[cnt].nxt = head[u]; head[u] = cnt; }\ninline void dfs(int u, int fa){\n\tdep[u] = dep[fa] + 1; f[u][0] = fa; L[u] = ++tot; rev[tot] = u;\n\trep(i, 1, 18) f[u][i] = f[f[u][i - 1]][i - 1];\n\trepg(i, u) if(e[i].v != fa) dfs(e[i].v, u);\n\tR[u] = ++tot; rev[tot] = u;\n}\ninline int lca(int x, int y){\n\tif(dep[x] < dep[y]) swap(x, y); per(i, 18, 0) if(dep[f[x][i]] >= dep[y]) x = f[x][i];\n\tif(x == y) return x; per(i, 18, 0) if(f[x][i] != f[y][i]) x = f[x][i], y = f[y][i];\n\treturn f[x][0];\n}\ninline void mian(){\n\tn = read(); m = read(); rep(i, 1, n) c[i] = read(), maxx = max(maxx, c[i]);\n\tk = sqrt(maxx); p = (maxx - 1) / k + 1; rep(i, 1, maxx) pos[i] = (i - 1) / k + 1;\n\trep(i, 1, p) pl[i] = (i - 1) * k + 1, pr[i] = min(maxx, i * k);\n\trep(i, 1, n - 1) x = read(), y = read(), add(x, y), add(y, x); dfs(1, 0);\n\trep(i, 1, m){\n\t\tx = read(); y = read(); l = read(); r = read(); r = min(r, maxx);\n\t\tif(L[x] > L[y]) swap(x, y); z = lca(x, y);\n\t\tif(R[y] <= R[x]) q[i] = ask(i, L[x], L[y], l, r, 0);\n\t\telse q[i] = ask(i, R[x], L[y], l, r, z);\n\t}\n\tt = sqrt(tot); sort(q + 1, q + m + 1); int ql = 1, qr = 0;\n\trep(i, 1, m){\n\t\tint idx = q[i].idx; x = q[i].x; y = q[i].y; z = q[i].z; l = q[i].l; r = q[i].r;\n\t\tif(l > r){ ans[idx] = -1; continue; }\n\t\twhile(qr < y) change(++qr); while(ql > x) change(--ql);\n\t\twhile(qr > y) change(qr--); while(ql < x) change(ql++);\n\t\tif(z) change(L[z]); int bl = pos[l], br = pos[r];\n\t\tif(bl == br){\n\t\t\trep(i, l, r) if(num[i]){\n\t\t\t\tans[idx] = i; break;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\trep(i, l, pr[bl]) if(num[i]){\n\t\t\t\tans[idx] = i; break;\n\t\t\t}\n\t\t\tif(!ans[idx])\n\t\t\trep(i, pl[br], r) if(num[i]){\n\t\t\t\tans[idx] = i; break;\n\t\t\t}\n\t\t\tif(!ans[idx])\n\t\t\trep(i, bl + 1, br - 1){\n\t\t\t\twhile(len[i] && !num[st[i][len[i]]]) vis[st[i][len[i]]] = 0, --len[i];\n\t\t\t\tif(len[i]){\n\t\t\t\t\tans[idx] = st[i][len[i]]; break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(!ans[idx]) ans[idx] = -1; if(z) change(L[z]);\n\t}\n\trep(i, 1, m) printf(\"%d\\n\", ans[i]);\n}\nint main(){ int qwq = 1; while(qwq--) mian(); return 0; }\n```\n",
        "postTime": 1615368401,
        "uid": 147999,
        "name": "Warriors_Cat",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1479D\u3010Odd Mineral Resource\u3011"
    }
]