[
    {
        "content": "> [CF576E Painting Edges](https://codeforc.es/contest/576/problem/E)\n\n## \u9898\u610f\n\n- \u7ed9\u5b9a\u4e00\u5f20 $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe\u3002\n- \u4e00\u5171\u6709 $k$ \u79cd\u989c\u8272\uff0c\u4e00\u5f00\u59cb\uff0c\u6bcf\u6761\u8fb9\u90fd\u6ca1\u6709\u989c\u8272\u3002\n- \u5b9a\u4e49**\u5408\u6cd5\u72b6\u6001**\u4e3a\u4ec5\u4fdd\u7559**\u67d3\u6210 $k$ \u79cd\u989c\u8272\u4e2d\u7684\u4efb\u4f55\u4e00\u79cd\u989c\u8272**\u7684\u8fb9\uff0c\u56fe\u90fd\u662f\u4e00\u5f20\u4e8c\u5206\u56fe\u3002\n- \u6709 $q$ \u6b21\u64cd\u4f5c\uff0c\u7b2c $i$ \u6b21\u64cd\u4f5c\u5c06\u7b2c $e_i$ \u6761\u8fb9\u7684\u989c\u8272\u67d3\u6210 $c_i$\u3002\n- \u4f46\u5e76\u4e0d\u662f\u6bcf\u6b21\u64cd\u4f5c\u90fd\u4f1a\u88ab**\u6267\u884c**\uff0c\u53ea\u6709\u5f53\u6267\u884c\u540e\u4ecd\u7136\u5408\u6cd5\uff0c\u624d\u4f1a\u6267\u884c\u672c\u6b21\u64cd\u4f5c\u3002\n- \u4f60\u9700\u8981\u5224\u65ad\u6bcf\u6b21\u64cd\u4f5c\u662f\u5426\u4f1a\u88ab\u6267\u884c\u3002\n- $n,m,q \\le 5 \\times 10^5$\uff0c$k \\le 50$\u3002\n\n## \u9898\u89e3\n\n\u7c7b\u4f3c [P5787 \u4e8c\u5206\u56fe /\u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811\u5206\u6cbb](https://www.luogu.com.cn/problem/P5787)\uff08[\u5b66\u4e60\u7b14\u8bb0 & \u9898\u89e3](https://www.xht37.com/\u7ebf\u6bb5\u6811\u5206\u6cbb-\u5b66\u4e60\u7b14\u8bb0/)\uff09\u3002\n\n\u53ea\u662f\u4e00\u4e2a\u53ef\u64a4\u9500\u5e76\u67e5\u96c6\u53d8\u6210\u4e86 $k$ \u4e2a\uff0c\u4ee5\u53ca\u8981\u591a\u52a0\u4e00\u4e2a\u5224\u65ad\u3002\n\n\u8fd9\u4e2a\u5224\u65ad\u4e0d\u592a\u597d\u5f04\uff0c\u8003\u8651\u628a\u5224\u65ad\u548c\u533a\u95f4\u64cd\u4f5c\u5206\u5f00\u8fdb\u884c\u3002\n\n\u533a\u95f4\u64cd\u4f5c\u5176\u5b9e\u5c31\u662f\uff0c\u5bf9\u4e8e\u4e00\u6761\u8fb9\u7684\u4e24\u6b21\u67d3\u8272 $x,y$\uff0c\u67d3\u8272\u533a\u95f4\u4e3a $[x+1,y-1]$\uff0c\u989c\u8272\u6709\u4e24\u79cd\u53ef\u80fd\uff1a\n\n1. \u67d3\u4e0a\u53bb\u4e86\uff0c\u5219\u989c\u8272\u662f $x$ \u67d3\u8272\u65f6\u7684\u989c\u8272\u3002\n2. \u6ca1\u67d3\u4e0a\u53bb\uff0c\u5219\u989c\u8272\u662f\u4e0a\u4e00\u6b21\u67d3\u8272\u7684\u989c\u8272\u3002\n\n\u90a3\u4e48\u5224\u65ad\u53d8\u6210\u4e00\u4e2a\u5355\u70b9\u5224\u65ad\u4e86\uff0c\u5206\u6cbb\u5230\u90a3\u4e2a\u53f6\u5b50\u7684\u65f6\u5019\u8fdb\u884c\u5224\u65ad\u5c31\u597d\u4e86\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(m \\log n \\log q)$\u3002\n\n## \u4ee3\u7801\n\n```cpp\nconst int N = 5e5 + 7, K = 51;\nint n, m, k, q, f[K][N<<1], d[K][N<<1], u[N], v[N], a[N], c[N], p[N];\nstruct T {\n\tint l, r;\n\tvi e;\n} t[N<<2];\nstruct S {\n\tint c, x, z;\n\tinline S() {}\n\tinline S(int c, int x, int z) : c(c), x(x), z(z) {}\n};\nstack< S > s;\n\nvoid build(int p, int l, int r) {\n\tt[p].l = l, t[p].r = r;\n\tif (l == r) return;\n\tbuild(ls, l, md), build(rs, md + 1, r);\n}\n\nvoid ins(int p, int l, int r, int x) {\n\tif (t[p].l >= l && t[p].r <= r) return t[p].e.pb(x), void();\n\tif (l <= md) ins(ls, l, r, x);\n\tif (r > md) ins(rs, l, r, x);\n}\n\ninline int get(int o, int x) {\n\twhile (x ^ f[o][x]) x = f[o][x];\n\treturn x;\n}\n\ninline void merge(int o, int x, int y) {\n\tif (x == y) return;\n\tif (d[o][x] > d[o][y]) swap(x, y);\n\tint z = d[o][x] == d[o][y];\n\ts.push(S(o, x, z)), f[o][x] = y, d[o][y] += z;\n}\n\nvoid dfs(int p, int l, int r) {\n\tui o = s.size();\n\tfor (ui i = 0; i < t[p].e.size(); i++) {\n\t\tint x = t[p].e[i], a = ::a[x], c = ::c[x], u = ::u[a], v = ::v[a];\n\t\tif (c) merge(c, get(c, u + n), get(c, v)), merge(c, get(c, v + n), get(c, u));\n\t}\n\tif (l == r) {\n\t\tint a = ::a[l], c = ::c[l], u = ::u[a], v = ::v[a];\n\t\tif (get(c, u) == get(c, v)) prints(\"NO\"), ::c[l] = ::p[a];\n\t\telse prints(\"YES\"), ::p[a] = ::c[l];\n\t} else dfs(ls, l, md), dfs(rs, md + 1, r);\n\twhile (s.size() > o) {\n\t\tint c = s.top().c, x = s.top().x, z = s.top().z;\n\t\ts.pop(), d[c][f[c][x]] -= z, f[c][x] = x;\n\t}\n}\n\nint main() {\n\trd(n), rd(m), rd(k), rd(q);\n\tbuild(1, 1, q);\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= k; j++)\n\t\t\tf[j][i] = i, f[j][i+n] = i + n;\n\tfor (int i = 1; i <= m; i++) rd(u[i]), rd(v[i]), p[i] = q + 1;\n\tfor (int i = 1; i <= q; i++) rd(a[i]), rd(c[i]);\n\tfor (int i = q; i; i--) {\n\t\tint a = ::a[i];\n\t\tif (i < p[a] - 1) ins(1, i + 1, p[a] - 1, i);\n\t\tp[a] = i;\n\t}\n\tfor (int i = 1; i <= m; i++) p[i] = 0;\n\tdfs(1, 1, q);\n\treturn 0;\n}\n```",
        "postTime": 1575998992,
        "uid": 100544,
        "name": "xht",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF576E \u3010Painting Edges\u3011"
    },
    {
        "content": "\u6807\u7b7e: \u7ebf\u6bb5\u6811\u5206\u6cbb, \u5e76\u67e5\u96c6.\n\n### Part 1\n\n\u663e\u7136\u4e0d\u540c\u989c\u8272\u7684\u8fb9\u4e92\u4e0d\u5f71\u54cd, \u6211\u4eec\u53ea\u8981\u5bf9\u6bcf\u79cd\u989c\u8272\u5206\u522b\u5224\u65ad\u5408\u6cd5\u5373\u53ef, \u5224\u65ad\u4e00\u4e2a\u56fe\u662f\u5426\u4e3a\u4e8c\u5206\u56fe\u53ea\u9700\u8981\u5224\u65ad\u8fd9\u4e2a\u56fe\u4e2d\u6709\u6ca1\u6709\u5947\u73af. \u8fd9\u4e2a\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u6765\u7ef4\u62a4.\n\n\u5177\u4f53\u5730, \u5c06\u56fe\u4e2d\u6240\u6709\u8fb9\u4f9d\u6b21\u52a0\u5165\u5e76\u67e5\u96c6, \u7ef4\u62a4\u6bcf\u4e2a\u8282\u70b9\u5230\u7236\u4eb2\u8282\u70b9\u7684\u8ddd\u79bb\u7684\u5947\u5076\u6027, \u52a0\u8fb9\u65f6\u82e5\u4e24\u4e2a\u70b9\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u5185\u5c31\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u4e3a\u5947\u73af\u5373\u53ef.\n\n### Part 2\n\n\u7136\u800c\u666e\u901a\u5e76\u67e5\u96c6\u4e0d\u80fd\u7ef4\u62a4\u672c\u9898\u6240\u6d89\u53ca\u7684\u5220\u8fb9\u64cd\u4f5c(\u5373\u5c06\u67d0\u79cd\u989c\u8272\u7684\u8fb9\u53d8\u6210\u53e6\u4e00\u79cd\u989c\u8272), \u6211\u4eec\u5c31\u9700\u8981\u4f7f\u7528\u53ef\u64a4\u9500\u7684\u5e76\u67e5\u96c6, \u5e76\u4e14\u501f\u52a9\u7ebf\u6bb5\u6811\u5206\u6cbb\u6765\u89e3\u51b3.\n\n\u5bf9\u64cd\u4f5c\u6309\u5148\u540e\u987a\u5e8f\u8fdb\u884c\u7ebf\u6bb5\u6811\u5206\u6cbb\u540e, \u53d1\u73b0\u6211\u4eec\u4e0d\u80fd\u9884\u5148\u77e5\u9053\u6bcf\u4e2a\u64cd\u4f5c\u662f\u5426\u88ab\u6267\u884c, \u4e14\u4e0d\u80fd\u786e\u5b9a\u67d0\u4e2a\u64cd\u4f5c\u7684\u5f71\u54cd\u8303\u56f4(\u5373\u4e0b\u4e00\u4e2a\u4f5c\u7528\u5728\u540c\u4e00\u6761\u8fb9\u4e0a\u7684\u64cd\u4f5c\u53ef\u80fd\u4e0d\u4f1a\u88ab\u6267\u884c).\n\n\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u95ee\u9898, \u6211\u4eec\u53ef\u4ee5\u5728\u5206\u6cbb\u5230\u5728\u53f6\u5b50\u8282\u70b9\u7684\u65f6\u5019\u5224\u65ad\u64cd\u4f5c\u7684\u5408\u6cd5\u6027.\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u95ee\u9898, \u6211\u4eec\u53ef\u4ee5\u8fb9\u8fdb\u884c\u5224\u65ad, \u8fb9\u7528\u64cd\u4f5c\u8986\u76d6\u7ebf\u6bb5\u6811\u4e0a\u7684\u533a\u95f4. \u5177\u4f53\u7684, \u82e5\u6709\u64cd\u4f5c $i$ \u548c\u64cd\u4f5c $j$ \u4f5c\u7528\u4e8e\u540c\u4e00\u6761\u8fb9(\u5176\u4e2d $i$ \u88ab**\u6267\u884c**\u4e86\u4e14 $(i,j)$ \u4e2d\u6ca1\u6709\u5176\u4ed6\u4f5c\u7528\u4e8e\u8be5\u8fb9\u7684\u64cd\u4f5c, \u663e\u7136 $i$ \u81f3\u5c11\u4f5c\u7528\u5230\u4e86 $[i,j-1]$ , \u6240\u4ee5\u6211\u4eec\u5728\u5206\u6cbb\u5230 $i$ \u7684\u53f6\u5b50\u8282\u70b9\u65f6\u5c06\u64cd\u4f5c $i$ \u8986\u76d6 $[i,j-1]$ , $j$ \u4e4b\u540e\u7684\u90e8\u5206\u53d7\u54ea\u4e2a\u64cd\u4f5c\u5f71\u54cd\u53ef\u4ee5\u5728\u5206\u6cbb\u5230 $j$ \u7684\u53f6\u5b50\u8282\u70b9\u7684\u65f6\u5019\u5224\u65ad\u51fa\u6765, \u5e76\u5c06\u8fd9\u4e2a\u64cd\u4f5c\u8986\u76d6\u5230\u4e4b\u540e\u7684\u4e00\u6bb5.\n\n\u6240\u4ee5\u7ebf\u6bb5\u6811\u5206\u6cbb\u5199\u51fa\u6765\u662f\u8fd9\u6837\u7684.\n\n```cpp\nvoid work(int l, int r, int k, int d) {\n    ins(k, d);\n    if (l == r) {\n        int id = p[l].e;\n        ++pos[id], dsu[p[l].c].check(id) ? (puts(\"YES\"), e[id].c = p[l].c)\n                                         : (puts(\"NO\"));\n        return modi(root, l + 1, (*pos[id]) - 1, e[id]), del(k, d);\n    }\n    int mid = l + r >> 1;\n    work(ls, d + 1), work(rs, d + 1), del(k, d);\n}\n```\n\n`ins` \u4e3a\u5c06\u6539\u533a\u95f4\u7684\u64cd\u4f5c\u4f5c\u7528\u5230\u5e76\u67e5\u96c6\u4e0a, `del` \u4e3a\u64a4\u9500 `ins` \u7684\u64cd\u4f5c.\n\n\u65f6\u95f4\u590d\u6742\u5ea6(\u89c6 $n,m,q$ \u540c\u7ea7) $\\mathcal O(n\\log^2n)$, \u4e24\u4e2a $\\log$ \u5206\u522b\u662f\u7ebf\u6bb5\u6811\u5206\u6cbb\u7684\u548c\u53ef\u64a4\u9500\u7684\u5e76\u67e5\u96c6\u7684.\n\n```cpp\n#include <bits/stdc++.h>\n#define root 1, q, 1\n#define ls l, mid, k << 1\n#define rs mid + 1, r, k << 1 | 1\nusing namespace std;\nint read();\nint n, m, k, q;\nstruct E {\n    int u, v, c;\n} e[500005];\n\nstruct P {\n    int e, c;\n} p[500005];\n\nvector<int> chan[500005];\nvector<int>::iterator pos[500005];\n\nstruct Dsu {\n    int fa[500005];\n    bool fw[500005];\n    short h[500005];\n    bool check(int id) {\n        int u = e[id].u, v = e[id].v, w = 0;\n        while (fa[u]) w ^= fw[u], u = fa[u];\n        while (fa[v]) w ^= fw[v], v = fa[v];\n        return u != v || w;\n    }\n    E merge(int u, int v) {\n        int w = 1;\n        while (fa[u]) w ^= fw[u], u = fa[u];\n        while (fa[v]) w ^= fw[v], v = fa[v];\n        if (u == v) return (E){0};\n        h[u] > h[v] ? swap(u, v) : void(), fa[u] = v, fw[u] = w;\n        return (E){u, v, (h[u] == h[v]) ? h[v]++ : h[v]};\n    }\n} dsu[51];\n\nstruct Seg {\n    vector<E> t[2000006], rec[202];\n    void ins(int k, int d) {\n        rec[d].clear();\n        for (int i = 0; i < t[k].size(); ++i)\n            rec[d].push_back(dsu[t[k][i].c].merge(t[k][i].u, t[k][i].v));\n    }\n    void del(int k, int d) {\n        for (int i = t[k].size() - 1; i >= 0; --i) {\n            if (!rec[d][i].u) continue;\n            int u = rec[d][i].u, v = rec[d][i].v, c = t[k][i].c;\n            dsu[c].fa[u] = dsu[c].fw[u] = 0, dsu[c].h[v] = rec[d][i].c;\n        }\n    }\n    void modi(int l, int r, int k, int st, int en, E v) {\n        if (st > r || en < l) return;\n        if (st <= l && en >= r) return t[k].push_back(v);\n        int mid = l + r >> 1;\n        modi(ls, st, en, v), modi(rs, st, en, v);\n    }\n    void work(int l, int r, int k, int d) {\n        ins(k, d);\n        if (l == r) {\n            int id = p[l].e;\n            ++pos[id], dsu[p[l].c].check(id) ? (puts(\"YES\"), e[id].c = p[l].c)\n                                             : (puts(\"NO\"));\n            return modi(root, l + 1, (*pos[id]) - 1, e[id]), del(k, d);\n        }\n        int mid = l + r >> 1;\n        work(ls, d + 1), work(rs, d + 1), del(k, d);\n    }\n} seg;\n\nint main() {\n    n = read(), m = read(), k = read(), q = read();\n    for (int i = 1; i <= m; ++i) e[i].u = read(), e[i].v = read();\n    for (int i = 1; i <= q; ++i)\n        p[i].e = read(), p[i].c = read(), chan[p[i].e].push_back(i);\n    for (int i = 1; i <= m; ++i)\n        chan[i].push_back(q + 1), pos[i] = chan[i].begin();\n    seg.work(root, 0);\n    return 0;\n}\n\nint read() {\n    int x = 0, f = 1;\n    char c = getchar();\n    while (c < '0' || c > '9') f = (c == '-') ? -1 : f, c = getchar();\n    while (c >= '0' && c <= '9') x = x * 10 + c - '0', c = getchar();\n    return x * f;\n}\n```",
        "postTime": 1579090789,
        "uid": 51237,
        "name": "Kinandra",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF576E \u3010Painting Edges\u3011"
    },
    {
        "content": "# Painting Edges\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF576E)\n## \u601d\u8def\n\u771f\u7684\u795e\u4ed9\u3002\u3002\u3002\n\n\u56e0\u4e3a\u8fd9\u9053\u9898\u591a\u79cd\u989c\u8272\u53ef\u4ee5\u62c6\u6210\u4e00\u4e2a\u4e00\u4e2a\u989c\u8272\u7684\u8003\u8651\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u76f4\u63a5\u4e00\u79cd\u989c\u8272\u7684\u60c5\u51b5\u3002\n\n\u8fd9\u9053\u9898\u8ddf\u5176\u4ed6\u7684\u7ebf\u6bb5\u6811\u5206\u6cbb\u6700\u5927\u7684\u4e0d\u540c\u5c31\u5728\u4e8e\u6bcf\u6761\u8fb9\u6ca1\u6709\u7ed9\u51fa\u51fa\u73b0\u7684\u65f6\u95f4\u3002\u90a3\u600e\u4e48\u529e\u5462\uff1f\n\n\u5176\u5b9e\u6211\u4eec\u8fd8\u662f\u6709\u89e3\u51b3\u529e\u6cd5\u7684\uff0c\u5bf9\u4e8e\u4e00\u6761\u8fb9\u800c\u8a00\uff0c\u5982\u679c\u6709$(u,v)$\u4e24\u6b21\u67d3\u8272\u64cd\u4f5c\uff0c\u90a3\u4e48$[u+1,v-1]$\u8fd9\u6bb5\u65f6\u95f4\u5185\u53ea\u6709\u4e24\u79cd\u60c5\u51b5\n\n1. \u8981\u4e48\u6ca1\u6210\u529f\u8fd8\u662f\u539f\u5148\u7684\u989c\u8272\n\n2. \u6210\u529f\u4e86\u5c31\u662f$u$\u67d3\u7684\u989c\u8272\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u76f4\u63a5\u5047\u5b9a\u67d3\u6210\u529f\u4e86\uff0c\u7136\u540e\u76f4\u63a5\u9012\u5f52\u6bcf\u4e2a\u53f6\u5b50\u5224\u65ad\u662f\u5426\u6210\u529f\u4e86\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5c31\u76f4\u63a5\u64a4\u9500\u3002\u90a3\u4e3a\u4ec0\u4e48\u662f\u5bf9\u7684\u5462\uff1f\u56e0\u4e3a\u65f6\u95f4\u662f\u4e24\u4e24\u4e0d\u540c\u7684\uff0c\u5982\u679c\u6211\u4eec\u8fd9\u4e2a\u5931\u8d25\u4e86\u64a4\u9500\u4e4b\u540e\u662f\u4e0d\u4f1a\u4ea7\u751f\u5f71\u54cd\u7684\u3002\n\n\u90a3\u600e\u4e48\u5224\u65ad\u6210\u529f\u4e0d\u6210\u529f\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7528\u6309\u79e9\u5408\u5e76\u5e76\u67e5\u96c6\u5c31\u597d\u4e86\u3002\n\n\u53e3\u80e1\u4e86\u8fd9\u4e48\u591a\u8fd8\u662f\u4e0a\u4ee3\u7801\u597d\u7406\u89e3\u4e00\u70b9\u3002\n\n\uff08\u4ecexnt\u5946\u4f6c\u90a3\u5b66\u5230\u4e86\u907f\u514d\u6570\u7ec4\u548c\u53d8\u91cf\u91cd\u540d\u7684\u65b9\u6cd5tql%%%\uff09\n## $\\text {Code}$\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define Int register int\n#define MAXN 500005\n#define MAXX 55\n\nint n,m,k,q;\nint a[MAXN],c[MAXN],u[MAXN],v[MAXN],p[MAXN],fa[MAXX][MAXN << 1],size[MAXX][MAXN << 1];\n\nstruct Node{int c,x;};\n\nstack <Node> S;\n\nint findSet (int c,int x)\n{\n\twhile (x ^ fa[c][x]) x = fa[c][x];\n\treturn x;\t\n}\n\nvoid unionSet (int c,int x,int y)\n{\n\tif (x == y) return ;\n\tif (size[c][x] > size[c][y]) swap (x,y);\t\n\tS.push (Node {c,x}),size[c][y] += size[c][x],fa[c][x] = y;\n}\n\nvector <int> tree[MAXN << 2];\n\nvoid update (int k,int l,int r,int tl,int tr,int res)\n{\n\tif (l > tr || tl > r) return ;\n\tif (l >= tl && r <= tr) return tree[k].push_back (res);\n\tint mid = (l + r) >> 1;\n\tupdate (k << 1,l,mid,tl,tr,res);\n\tupdate (k << 1 | 1,mid + 1,r,tl,tr,res);\n}\n\nvoid Divide (int k,int l,int r)\n{\n\tint tag = S.size ();\n\tfor (Int i = 0;i < tree[k].size();++ i)\n\t{\n\t\tint x = tree[k][i],a = ::a[x],c = ::c[x],u = ::u[a],v = ::v[a];\n\t\tif (c) unionSet (c,findSet (c,u),findSet (c,v + n)),unionSet (c,findSet (c,v),findSet (c,u + n));\n\t} \n\tif (l == r)\n\t{\n\t\tint a = ::a[l],c = ::c[l],u = ::u[a],v = ::v[a];\n\t\tif (findSet (c,u) == findSet (c,v)) puts (\"NO\"),::c[l] = ::p[a];\n\t\telse puts (\"YES\"),::p[a] = ::c[l];\n\t\treturn ;\n\t}\n\tint mid = (l + r) >> 1;\n\tDivide (k << 1,l,mid),Divide (k << 1 | 1,mid + 1,r);\n\twhile (S.size() > tag)\n\t{\n\t\tint c = S.top().c,x = S.top().x;\n\t\tsize[c][fa[c][x]] -= size[c][x],fa[c][x] = x;\n\t\tS.pop();\n\t}\n}\n\nint read ()\n{\n\tint x = 0;char c = getchar();int f = 1;\n\twhile (c < '0' || c > '9'){if (c == '-') f = -f;c = getchar();}\n\twhile (c >= '0' && c <= '9'){x = (x << 3) + (x << 1) + c - '0';c = getchar();}\n\treturn x * f;\n}\n\nvoid write (int x)\n{\n\tif (x < 0){x = -x;putchar ('-');}\n\tif (x > 9) write (x / 10);\n\tputchar (x % 10 + '0');\n}\n\nsigned main()\n{\n\tn = read (),m = read (),k = read (),q = read ();\n\tfor (Int i = 1;i <= n;++ i)\n\t\tfor (Int j = 1;j <= k;++ j)\n\t\t\tfa[j][i] = i,fa[j][n + i] = n + i,\n\t\t\tsize[j][i] = 1,size[j][n + i] = 1;\n\tfor (Int i = 1;i <= m;++ i) u[i] = read (),v[i] = read (),p[i] = q + 1;\n\tfor (Int i = 1;i <= q;++ i) a[i] = read (),c[i] = read ();\n\tfor (Int i = q;i >= 1;-- i)\n\t{\n\t\tint a = ::a[i];\n\t\tif (i < p[a] - 1) update (1,1,q,i + 1,p[a] - 1,i);\n\t\tp[a] = i;\n\t}\n\tmemset (p,0,sizeof (p));\n\tDivide (1,1,q);\n\treturn 0;\n}\n```",
        "postTime": 1584510627,
        "uid": 124781,
        "name": "Walking_Dead",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF576E \u3010Painting Edges\u3011"
    },
    {
        "content": "**\u9898\u610f**\n- [\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/CF576E)\u3002\n- \u7ed9\u5b9a\u4e00\u4e2a $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u65e0\u5411\u56fe\uff0c\u4e00\u5f00\u59cb\u8fb9\u65e0\u8272\u900f\u660e\u3002\n- $q$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u5c06\u4e00\u6761\u8fb9\u67d3\u6210\u67d0\u4e2a\u989c\u8272\uff0c\u5982\u679c\u53d1\u73b0\u53ea\u4fdd\u7559\u8fd9\u4e2a\u989c\u8272\u7684\u8fb9\u540e\u56fe\u4e0d\u662f\u4e8c\u5206\u56fe\u5c31\u4e0d\u8fdb\u884c\u8be5\u64cd\u4f5c\u3002\n- \u5bf9\u6bcf\u4e2a\u64cd\u4f5c\u8f93\u51fa\u8be5\u64cd\u4f5c\u80fd\u5426\u6b63\u5e38\u8fdb\u884c\u3002\n- \u989c\u8272\u6570\u4e0d\u5927\u4e8e $50$\uff0c$n,m,q\\le 5\\times 10^5$\u3002\n\n**\u5206\u6790**\n- \u4e0e[\u8fd9\u9053](https://www.luogu.com.cn/blog/luo1gu1zui1bang1/solution-p5787)\u5176\u5b9e\u5f88\u76f8\u4f3c\uff0c\u90fd\u662f\u7ebf\u6bb5\u6811\u5206\u6cbb\u5957\u53ef\u64a4\u9500\u5e76\u67e5\u96c6\u7684\u6837\u5b50\uff0c\u4f46\u64cd\u4f5c\u7565\u6709\u4e0d\u540c\uff0c\u6240\u4ee5\u91cd\u70b9\u8bb2\u5b9e\u73b0\u7ec6\u8282\u3002\n- \u7531\u4e8e $k$ \u5f88\u5c0f\u8003\u8651\u5f00 $k$ \u4e2a\u53ef\u64a4\u9500\u5e76\u67e5\u96c6\u7ef4\u62a4\u3002\n- \u8fd8\u662f\u7c7b\u4f3c\u5730\uff0c\u628a\u64cd\u4f5c\u653e\u5230\u4e00\u4e2a\u65f6\u95f4\u7684\u7ebf\u6bb5\u6811\u91cc\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u77e5\u9053\u6bcf\u4e2a\u64cd\u4f5c\u8981\u5e72\u5565\u5440\u3002\n- \u4ed4\u7ec6\u601d\u8003\u4e00\u4e0b\u53d1\u73b0~~\u5341\u5206\u56f0\u96be\u6240\u4ee5\u4f5c\u8005\u51b3\u5b9a\u653e\u5f03\u6539\u7528\u5728\u7ebf\u505a\u6cd5\u3002~~\n- \u4f5c\u8005\u9996\u5148\u5c1d\u8bd5\u5728\u7ebf\u6bb5\u6811\u5206\u6cbb\u7684\u57fa\u7840\u4e0a\u80fd\u5426\u5224\u65ad\u64cd\u4f5c\u7684\u5185\u5bb9\u662f\u5565\u7684\u601d\u8def\u3002\n- \u7b80\u5355\u5730\u8bb2\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u64cd\u4f5c $u$\uff08\u88ab\u7f16\u7801\u5728 $u$ \u65f6\u523b\uff09\uff0c\u5b83\u5728 $v$ \u65f6\u523b\u5df2\u7ecf\u4e0d\u5b58\u5728\u4e86\uff08\u88ab\u8986\u76d6\uff09\uff0c\u6211\u4eec\u77e5\u9053\u5728 $[u,v-1]$ \u65f6\u6bb5\u7684\u6807\u8bb0\u53ef\u80fd\u6709\u4e24\u79cd\uff0c\u4e00\u79cd\u662f\u65b0\u7684\u989c\u8272\u53e6\u4e00\u79cd\u662f\u539f\u6765\u7684\uff0c\u5982\u679c\u6211\u4eec\u4ecd\u7136\u4f7f\u7528\u53ef\u64a4\u9500\u5e76\u67e5\u96c6\u52a0\u4e0a\u5224\u65ad\u64cd\u4f5c\u662f\u5426\u6210\u7acb\u7684\u8bdd\uff0c\u90a3\u4e48\u5728 $u$ \u65f6\u523b\uff0c\u5b83\u9700\u8981\u6700\u540e\u88ab\u653e\u8fdb\u53bb\uff08\u6765\u5224\u65ad\u662f\u5426\u53ef\u884c\uff09\uff0c\u5728 $[u+1,v-1]$ \u65f6\u6bb5\u91cc\uff0c\u5b83\u9700\u8981\u63d0\u524d\u653e\u8fdb\u53bb\uff0c\u4ee5\u514d\u540e\u6765\u7684\u52a0\u5165\u7136\u540e\u8ba9\u65b0\u52a0\u7684\u4e0d\u53ef\u884c\u3002\n- \u4e8e\u662f\u5c31\u76f8\u5bf9\u660e\u663e\u4e86\uff0c\u64cd\u4f5c\u53d8\u6210\u4e86 $[u+1,v-1]$ \u65f6\u95f4\u6bb5\u7684\u64cd\u4f5c\uff0c\u5b83\u53d6\u51b3\u4e8e $u$ \u65f6\u523b\u7684\u5224\u65ad\uff0c\u800c\u8fd9\u4e2a\u53ef\u4ee5\u5728\u9012\u5f52\u5230\u53f6\u8282\u70b9\u7684\u65f6\u5019\u987a\u4fbf\u5b8c\u6210\u3002\n- \u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(nk+q\\lg q\\lg n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u662f $O(nk)$ \u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n- ~~\u4f5c\u8005\u89c9\u5f97\u633a\u795e\u5947\u7684\uff0c\u4e0d\u77e5\u9053\u4e3a\u5565\u6709\u4eba\u89c9\u5f97\u5f88\u7b80\u5355\u3002~~\n\n**\u4ee3\u7801**\n- \u60f3\u901a\u4e86\uff0c\u5c31\u53ef\u4ee5 $1A$\uff0c\u611f\u89c9\u633a\u795e\u5947\u7684\u3002\n- [\u4ee3\u7801\u5b9e\u73b0](https://www.luogu.com.cn/paste/62w8pkau)\u3002",
        "postTime": 1640091323,
        "uid": 260884,
        "name": "WeLikeStudying",
        "ccfLevel": 0,
        "title": "\u3010\u6570\u636e\u7ed3\u6784\u3011\u6c34\u9898"
    },
    {
        "content": "\u53ef\u4ee5\u770b\u51fa\u4e0d\u5f31\u4e8e\u52a0\u8fb9\u5220\u8fb9\u4e8c\u5206\u56fe\u5224\u5b9a\uff0c\u8003\u8651\u7ebf\u6bb5\u6811\u5206\u6cbb\u3002\n\n\u56e0\u4e3a\u8fb9\u7684\u989c\u8272\u53ea\u6709 $50$ \u79cd\uff0c\u6240\u4ee5\u8003\u8651\u5bf9\u6bcf\u4e00\u79cd\u989c\u8272\uff0c\u5f00\u4e00\u4e2a\u53ef\u64a4\u9500\u6269\u5c55\u57df\u5e76\u67e5\u96c6\u6765\u7ef4\u62a4\u4e8c\u5206\u56fe\u5224\u5b9a\u3002\n\n\u4f46\u662f\u8fd9\u9898\u6709\u4e00\u4e2a\u5730\u65b9\u6bd4\u8f83\u70e6\uff1a\u4e0d\u77e5\u9053\u4e00\u4e2a\u4fee\u6539\u4e4b\u540e\u56fe\u662f\u5426\u4ecd\u7136\u5408\u6cd5\uff0c\u4e5f\u5c31\u4e0d\u77e5\u9053\u540e\u9762\u8fb9\u7684\u989c\u8272\u5230\u5e95\u5e94\u8be5\u662f\u4ec0\u4e48\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ea\u80fd\u5728\u5206\u6cbb\u5230\u4e00\u6b21\u4fee\u6539\u7684\u65f6\u5019\u77e5\u9053\u8fd9\u6761\u8fb9\u7684\u989c\u8272\u3002\n\n\u90a3\u4e48\u6211\u4eec\u65e2\u7136\u53ea\u80fd\u8fd9\u65f6\u77e5\u9053\u90a3\u5c31\u8fd9\u65f6\u518d\u6539\u5457\uff0c\u6bcf\u6b21\u5206\u6cbb\u5230 $i$\uff0c\u5224\u65ad\u662f\u5426\u5408\u6cd5\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u77e5\u9053 $i$ \u7684\u989c\u8272\uff1b\u6b64\u65f6\u518d\u5411 $(i,\\text{nxt}_i)$ \u52a0\u5165\u8fd9\u6761\u8fb9\u4ee5\u53ca\u5bf9\u5e94\u7684\u989c\u8272\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6240\u4ee5\u8fd9\u9898\u5c31\u505a\u5b8c\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(nk+n\\log^2n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(nk)$\u3002\n\n```cpp\n#include <iostream>\n#include <cmath>\n#include <cstring>\n#include <cstdio>\n#include <vector>\n#include <stack>\nusing namespace std;\n\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1 << 21], *p1 = buf, *p2 = buf;\n\ninline int qread() {\n\tregister char c = getchar();\n\tregister int x = 0, f = 1;\n\twhile (c < '0' || c > '9') {\n\t\tif (c == '-') f = -1;\n\t\tc = getchar();\n\t}\n\twhile (c >= '0' && c <= '9') {\n\t\tx = (x << 3) + (x << 1) + c - 48;\n\t\tc = getchar();\n\t}\n\treturn x * f;\n}\n\ninline int Abs(const int& x) {return (x > 0 ? x : -x);}\ninline int Max(const int& x, const int& y) {return (x > y ? x : y);}\ninline int Min(const int& x, const int& y) {return (x < y ? x : y);}\n\nint n, m, k, q, nxt[500005], lst[500005];\nstruct UndoDSU {\n\tint f[1000005];\n\tshort dep[1000005];\n\tinline void Init(int n) {\n\t\tfor (int i = 1;i <= 2 * n;i++) {\n\t\t\tf[i] = i;\n\t\t\tdep[i] = 1;\n\t\t}\n\t}\n\tstack <pair <int, int> > stk;\n\tinline int GetRoot(int v) {\n\t\treturn (f[v] == v ? v : GetRoot(f[v]));\n\t}\n\tinline void Merge(int x, int y) {\n\t\tint u = GetRoot(x), v = GetRoot(y);\n\t\tif (u != v) {\n\t\t\tif (dep[u] < dep[v]) swap(u, v);\n\t\t\tstk.push(make_pair(v, f[v]));\n\t\t\tstk.push(make_pair(u + n * 2, dep[u]));\n\t\t\tf[v] = u;\n\t\t\tdep[u] = Max(dep[u], dep[v] + 1);\n\t\t} else {\n\t\t\tstk.push(make_pair(0, 0));\n\t\t\tstk.push(make_pair(0, 0));\n\t\t}\n\t}\n\tinline void Backroll() {\n\t\tpair <int, int> cur = stk.top();\n\t\tif (cur.first <= 2 * n) f[cur.first] = cur.second;\n\t\telse dep[cur.first - 2 * n] = cur.second;\n\t\tstk.pop();\n\t\tcur = stk.top();\n\t\tif (cur.first <= 2 * n) f[cur.first] = cur.second;\n\t\telse dep[cur.first - 2 * n] = cur.second;\n\t\tstk.pop();\n\t}\n};\nUndoDSU dsu[51];\nstruct Edge {\n\tint u, v, c;\n};\nEdge e[500005];\nstruct Query {\n\tint e, c;\n};\nQuery qry[500005];\n\nstruct Segtree {\n\tvector <Query> vc[2000005];\n\tinline void Modify(int p, int pl, int pr, int l, int r, Query v) {\n\t\tif (l > r) return;\n\t\tif (pl == l && pr == r) {\n\t\t\tvc[p].push_back(v);\n\t\t\treturn;\n\t\t}\n\t\tint mid = pl + pr >> 1;\n\t\tif (mid >= r) Modify(p << 1, pl, mid, l, r, v);\n\t\telse if (mid + 1 <= l) Modify(p << 1 | 1, mid + 1, pr, l, r, v);\n\t\telse {\n\t\t\tModify(p << 1, pl, mid, l, mid, v);\n\t\t\tModify(p << 1 | 1, mid + 1, pr, mid + 1, r, v);\n\t\t}\n\t}\n\tinline void Dfs(int p, int pl, int pr) {\n\t\t//printf(\"%d %d %d\\n\", p, pl, pr);\n\t\tint siz = vc[p].size();\n\t\tvector <int> col;\n\t\tfor (int i = 0;i < siz;i++) {\n\t\t\tint eid = vc[p][i].e;\n\t\t\tdsu[e[eid].c].Merge(e[eid].u, e[eid].v + n);\n\t\t\tdsu[e[eid].c].Merge(e[eid].u + n, e[eid].v);\n\t\t\tcol.push_back(e[eid].c);\n\t\t}\n\t\tif (pl == pr) {\n\t\t\tEdge cur = e[qry[pl].e];\n\t\t\tif (dsu[qry[pl].c].GetRoot(cur.u) != dsu[qry[pl].c].GetRoot(cur.v)) {\n\t\t\t\tputs(\"YES\");\n\t\t\t\te[qry[pl].e].c = qry[pl].c;\n\t\t\t\t//dsu[e[qry[pl].e].c].Merge(e[qry[pl].e].u, e[qry[pl].e].v + n);\n\t\t\t\t//dsu[e[qry[pl].e].c].Merge(e[qry[pl].e].u + n, e[qry[pl].e].v);\n\t\t\t} else {\n\t\t\t\tqry[pl].c = e[qry[pl].e].c;\n\t\t\t\tputs(\"NO\");\n\t\t\t}\n\t\t\t//printf(\"%d %d\\n\", pl + 1, nxt[pl] - 1);\n\t\t\tModify(1, 1, q, pl + 1, nxt[pl] - 1, qry[pl]);\n\t\t\twhile (!col.empty()) {\n\t\t\t\tdsu[col.back()].Backroll();\n\t\t\t\tdsu[col.back()].Backroll();\n\t\t\t\tcol.pop_back();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tint mid = pl + pr >> 1;\n\t\tDfs(p << 1, pl, mid);\n\t\tDfs(p << 1 | 1, mid + 1, pr);\n\t\twhile (!col.empty()) {\n\t\t\tdsu[col.back()].Backroll();\n\t\t\tdsu[col.back()].Backroll();\n\t\t\tcol.pop_back();\n\t\t}\n\t}\n};\nSegtree sgt;\n\ninline void Read() {\n\tn = qread(); m = qread(); k = qread(); q = qread();\n\tfor (int i = 1;i <= m;i++) {\n\t\te[i].u = qread(); e[i].v = qread();\n\t}\n\tfor (int i = 1;i <= q;i++) {\n\t\tqry[i].e = qread(); qry[i].c = qread();\n\t}\n}\n\ninline void Prefix() {\n\tfor (int i = 1;i <= m;i++) lst[i] = q + 1;\n\tfor (int i = q;i >= 1;i--) {\n\t\tnxt[i] = lst[qry[i].e];\n\t\tlst[qry[i].e] = i;\n\t}\n\tfor (int i = 1;i <= k;i++) dsu[i].Init(n);\n}\n\nint main() {\n\tRead();\n\tPrefix();\n\tsgt.Dfs(1, 1, q);\n\t#ifndef ONLINE_JUDGE\n\twhile (1);\n\t#endif\n\treturn 0;\n}\n```",
        "postTime": 1613301302,
        "uid": 61088,
        "name": "Solystic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF576E \u3010Painting Edges\u3011"
    },
    {
        "content": "[$$\\large \\color{purple} My\\; Blog$$](https://www.cnblogs.com/p-b-p-b/p/10359721.html)\n\n---------\n\n\u5efa\u8bae\u9605\u8bfb[\u8fd9\u7bc7\u535a\u5ba2](https://www.cnblogs.com/p-b-p-b/p/10358515.html)\u4f5c\u4e3a\u9884\u5907\u3002~~\u65e0\u803b\u5730\u6253\u5e7f\u544a~~\n\n------------\n\n## \u601d\u8def\n\n\u4e0ebzoj4025\u5f88\u76f8\u4f3c\uff0c\u601d\u8def\u4e5f\u5dee\u4e0d\u591a\uff0c\u53ef\u4ee5\u770b\u4e0a\u9762\u90a3\u7bc7\u535a\u5ba2\u3002\n\n\u4ecd\u7136\u662f\u7528\u4e8c\u5206\u56fe\u7684\u5145\u8981\u6761\u4ef6\uff1a\u6ca1\u6709\u5947\u73af\u3002\n\n\u7136\u800c\u8fd9\u9898\u96be\u5728\u6bcf\u6761\u8fb9\u7684\u5b58\u5728\u65f6\u95f4\u4e0d\u56fa\u5b9a\uff0c\u65e0\u6cd5\u4e00\u5f00\u59cb\u77e5\u9053\u3002\n\n\u53ef\u4ee5\u6bcf\u6b21\u5728\u52a0\u5165\u8fd9\u6761\u8fb9\u7684\u65f6\u95f4\u70b9\u5224\u65ad\u80fd\u5426\u6210\u529f\u4fee\u6539\uff0c\u786e\u5b9a\u63a5\u4e0b\u6765\u4e00\u6bb5\u65f6\u95f4\u5b83\u7684\u989c\u8272\u662f\u4ec0\u4e48\u3002\n\n\u5177\u4f53\u89c1\u4ee3\u7801\u3002\n\n------------\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nnamespace my_std{\n\tusing namespace std;\n\t#define pii pair<int,int>\n\t#define fir first\n\t#define sec second\n\t#define MP make_pair\n\t#define rep(i,x,y) for (int i=(x);i<=(y);i++)\n\t#define drep(i,x,y) for (int i=(x);i>=(y);i--)\n\t#define go(x) for (int i=head[x];i;i=edge[i].nxt)\n\t#define sz 505050\n\ttypedef long long ll;\n\ttemplate<typename T>\n\tinline void read(T& t)\n\t{\n\t\tt=0;char f=0,ch=getchar();\n\t\tdouble d=0.1;\n\t\twhile(ch>'9'||ch<'0') f|=(ch=='-'),ch=getchar();\n\t\twhile(ch<='9'&&ch>='0') t=t*10+ch-48,ch=getchar();\n\t\tif(ch=='.')\n\t\t{\n\t\t\tch=getchar();\n\t\t\twhile(ch<='9'&&ch>='0') t+=d*(ch^48),d*=0.1,ch=getchar();\n\t\t}\n\t\tt=(f?-t:t);\n\t}\n\ttemplate<typename T,typename... Args>\n\tinline void read(T& t,Args&... args){read(t); read(args...);}\n\tvoid file()\n\t{\n\t\t#ifndef ONLINE_JUDGE\n\t\tfreopen(\"a.txt\",\"r\",stdin);\n\t\t#endif\n\t}\n//\tinline ll mul(ll a,ll b){ll d=(ll)(a*(double)b/mod+0.5);ll ret=a*b-d*mod;if (ret<0) ret+=mod;return ret;}\n}\nusing namespace my_std;\n\nint n,m,K,Q;\nstruct hh{int u,v,col;}edge[sz];\nint id[sz],las[sz],L[sz],R[sz],pre[sz],col[sz];\n\nstruct hhhh{int x,y,col;bool s;};\n\nstruct hhh\n{\n\tint fa[sz],f[sz],dep[sz];\n\tint getfa(int x){return x==fa[x]?x:getfa(fa[x]);}\n\tint getdis(int x){return x==fa[x]?0:f[x]^getdis(fa[x]);}\n\tvoid cancel(hhhh a){f[fa[a.x]=a.x]=0;dep[a.y]-=a.s;}\n\tbool connected(int x,int y){return getfa(x)==getfa(y);}\n\thhhh merge(int x,int y,int col)\n\t{\n\t\tint fx=getfa(x),fy=getfa(y);\n\t\tif (dep[fx]>dep[fy]) swap(fx,fy),swap(x,y);\n\t\tint w=getdis(x)^getdis(y)^1;\n\t\thhhh ret=(hhhh){fx,fy,col,0};\n\t\tf[fx]=w;fa[fx]=fy;\n\t\tif (dep[fx]==dep[fy]) ++dep[fy],ret.s=1;\n\t\treturn ret;\n\t}\n}G[55];\nvoid cancel(stack<hhhh>S){while (!S.empty()) G[S.top().col].cancel(S.top()),S.pop();}\n\nvector<int>v[sz<<2];\n#define ls k<<1\n#define rs k<<1|1\n#define lson ls,l,mid\n#define rson rs,mid+1,r\nvoid insert(int k,int l,int r,int x,int y,int e)\n{\n\tif (x<=l&&r<=y) return (void)(v[k].push_back(e));\n\tint mid=(l+r)>>1;\n\tif (x<=mid) insert(lson,x,y,e);\n\tif (y>mid) insert(rson,x,y,e);\n}\nvoid solve(int k,int l,int r)\n{\n\tstack<hhhh>S;\n\trep(i,0,(int)v[k].size()-1) \n\t{\n\t\thh e=edge[v[k][i]];\n\t\tif (!e.col) continue;\n\t\tint x=e.u,y=e.v,col=e.col;\n\t\tif (G[col].connected(x,y)) continue;\n\t\tS.push(G[col].merge(x,y,col));\n\t}\n\tif (l==r)\n\t{\n\t\thh e=edge[id[l]];\n\t\tint w=G[col[l]].getdis(e.u)^G[col[l]].getdis(e.v)^1;\n\t\tbool t=G[col[l]].connected(e.u,e.v);\n\t\tcancel(S);\n\t\tif (!t||!w) return (void)(puts(\"YES\"),edge[id[l]].col=col[l]);\n\t\treturn (void)puts(\"NO\");\n\t}\n\tint mid=(l+r)>>1;\n\tsolve(lson);solve(rson);\n\tcancel(S);\n}\n\nint main()\n{\n\tfile();\n\tint x,y;\n\tread(n,m,K,Q);\n\trep(i,1,K) rep(j,1,n) G[i].fa[j]=j;\n\trep(i,1,m) read(x,y),edge[i]=(hh){x,y,0}; \n\trep(i,1,Q)\n\t{\n\t\tread(x,y);\n\t\tid[i]=x;col[i]=y;\n\t\tif (las[x]) R[las[x]]=i-1;\n\t\tpre[i]=las[x];las[x]=i;\n\t\tL[i]=i+1,R[i]=Q;\n\t}\n\trep(i,1,Q) if (L[i]<=R[i]) insert(1,1,Q,L[i],R[i],id[i]);\n\tsolve(1,1,Q);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1549791221,
        "uid": 76481,
        "name": "p_b_p_b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF576E \u3010Painting Edges\u3011"
    },
    {
        "content": "[\u9898\u9762](https://www.luogu.org/problemnew/show/CF576E)\n\n\u7ebf\u6bb5\u6811\u5206\u6cbb\u3002\n\n\u8fd9\u9898\u7684\u96be\u70b9\u5728\u4e8e\u5982\u4f55\u5224\u65ad\u67d3\u8272\u64a4\u9500\u7684\u95ee\u9898\uff0c\u5176\u5b9e\u662f\u5f88\u597d\u5904\u7406\u7684\u3002\u6211\u4eec\u53ea\u9700\u8981\u7528\u4e00\u4e2a\u6808\u53bb\u4fdd\u5b58\u5b83\u67d3\u8272\u7684\u60c5\u51b5\uff0c\u5982\u679c\u5931\u8d25\uff0c\u5219\u76f4\u63a5\u51fa\u6808\u5c31\u884c\u4e86\u3002\n\n~~\u7136\u540e\u6211\u8fd9\u9898\u5fd8\u8bb0\u6539\u989c\u8272\u4e4b\u540e\u5bf9\u5e94\u7684\u4f4d\u7f6e\u90fd\u53d8\u4e86\u7684\u95ee\u9898\uff0c\u8c03\u4e86\u4e09\u5c0f\u65f6\u3002~~\n\ncode:\n```\n//2018.8.10 by ljz\n#include<bits/stdc++.h>\nusing namespace std;\n#define res register int\n#define LL long long\n#define inf 0x3f3f3f3f\n#define eps 1e-15\ninline int read(){\n    res s=0;\n    bool w=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')w=1;ch=getchar();}\n    while(ch>='0'&&ch<='9')s=s*10+ch-'0',ch=getchar();\n    return w?-s:s;\n}\ninline void _swap(res &x,res &y){\n    x^=y^=x^=y;\n}\ninline int _abs(const res &x){\n    return x>0?x:-x;\n}\ninline int _max(const res &x,const res &y){\n    return x>y?x:y;\n}\ninline int _min(const res &x,const res &y){\n    return x<y?x:y;\n}\nconst int M=5e5+10,Q=5e5+10,N=5e5+10,K=50+10;\nint n,m,k,q;\nstruct E{\n    int u,v;\n    E() {}\n    E(res u,res v):u(u),v(v) {}\n}edge[M];\nstruct MOD{\n    int s,col,id,l,r;\n    MOD() {}\n    MOD(res s,res col,res id,res l):s(s),col(col),id(id),l(l) {}\n}mod[Q];\nint las[M],pre[Q],nxt[Q];\nvector<MOD> F[Q<<2];\nvoid insertmodify(res rt,res l,res r,res L,res R,MOD id){\n    if(L<=l&&r<=R){\n        F[rt].push_back(id);\n        return;\n    }\n    if(l==r)return;\n    res mid=(l+r)>>1;\n    if(L<=mid)insertmodify(rt<<1,l,mid,L,R,id);\n    if(R>mid)insertmodify(rt<<1|1,mid+1,r,L,R,id);\n}\nint st[Q][3],top;\nnamespace UNOINSET{\n    int fa[K][M],H[K][M];\n    bool va[K][M];\n    int find(res x,res col,bool &flag){\n    \twhile(fa[col][x])flag^=va[col][x],x=fa[col][x];\n    \treturn x;\n    }\n    inline void unoin(res x,res y,res col,bool flag){\n        if(H[col][x]>H[col][y])_swap(x,y);\n        fa[col][x]=y,va[col][x]=flag,st[++top][0]=x,st[top][1]=col,st[top][2]=0;\n        if(H[col][x]==H[col][y])H[col][y]++,st[top][2]=1;\n    }\n}\nusing namespace UNOINSET;\ninline void solve(vector<MOD>G){\n    if(!G.size())return;\n    for(res i=0;i<G.size();i++){\n        if(!mod[G[i].id].col)continue;\n        res x=edge[G[i].s].u,y=edge[G[i].s].v,col=mod[G[i].id].col;\n        bool flag=1;\n        res fx=find(x,col,flag),fy=find(y,col,flag);\n//\t\tprintf(\"%d %d\\n\",fx,fy);\n        if(fx==fy)continue;\n        unoin(fx,fy,col,flag);\n    }\n}\ninline void remove(res now){\n    while(top>now){\n        if(st[top][2])st[top][2]=0,H[st[top][1]][fa[st[top][1]][st[top][0]]]--;\n        fa[st[top][1]][st[top][0]]=0,top--;\n    }\n}\nvoid segdiv(res rt,res l,res r){\n    res now=top;\n    solve(F[rt]);\n    if(l==r){\n        res x=edge[mod[l].s].u,y=edge[mod[l].s].v,col=mod[l].col;\n        bool flag=1;\n        res fx=find(x,col,flag),fy=find(y,col,flag);\n//\t\tprintf(\"%d %d\\n\",fx,fy);\n//\t\tprintf(\"%d\\n\",flag);\n        if(fx==fy&&flag)puts(\"NO\"),mod[l].col=mod[pre[l]].col;\n        else puts(\"YES\");\n        remove(now);\n        return;\n    }\n    res mid=(l+r)>>1;\n    segdiv(rt<<1,l,mid),segdiv(rt<<1|1,mid+1,r);\n    remove(now);\n}\nint main(){\n    n=read(),m=read(),k=read(),q=read();\n    for(res i=1;i<=m;i++){\n        res u=read(),v=read();\n        edge[i]=E(u,v);\n    }\n    for(res i=1;i<=q;i++){\n        res s=read(),col=read();\n        mod[i]=MOD(s,col,i,i+1);\n        if(las[s])pre[i]=las[s],nxt[las[s]]=i-1;\n        las[s]=i,nxt[i]=q;\n    }\n    for(res i=1;i<=q;i++)if(mod[i].l<=(mod[i].r=nxt[i]))insertmodify(1,1,q,mod[i].l,mod[i].r,mod[i]);\n//\tfor(res i=1;i<=q;i++)printf(\"%d %d %d %d %d\\n\",mod[i].id,mod[i].l,mod[i].r,mod[i].s,mod[i].col);\n    segdiv(1,1,q);\n    return 0;\n}\n```",
        "postTime": 1533946348,
        "uid": 32878,
        "name": "foreverlasting",
        "ccfLevel": 7,
        "title": "\u3010CF576E\u3011Painting Edges"
    },
    {
        "content": "[\u539f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/CF576E)\n\n## \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u5f20 $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe\u3002\n\n\u4e00\u5171\u6709 $k$ \u79cd\u989c\u8272\uff0c\u4e00\u5f00\u59cb\uff0c\u6bcf\u6761\u8fb9\u90fd\u6ca1\u6709\u989c\u8272\u3002\n\n\u5b9a\u4e49\u5408\u6cd5\u72b6\u6001\u4e3a\u4ec5\u4fdd\u7559\u67d3\u6210 $k$ \u79cd\u989c\u8272\u4e2d\u7684\u4efb\u4f55\u4e00\u79cd\u989c\u8272\u7684\u8fb9\uff0c\u56fe\u90fd\u662f\u4e00\u5f20\u4e8c\u5206\u56fe\u3002\n\n\u6709 $q$ \u6b21\u64cd\u4f5c\uff0c\u7b2c $i$ \u6b21\u64cd\u4f5c\u5c06\u7b2c $e_i$\t\u6761\u8fb9\u7684\u989c\u8272\u67d3\u6210 $c_i$\u3002\n\n\u4f46\u5e76\u4e0d\u662f\u6bcf\u6b21\u64cd\u4f5c\u90fd\u4f1a\u88ab\u6267\u884c\uff0c\u53ea\u6709\u5f53\u6267\u884c\u540e\u4ecd\u7136\u5408\u6cd5\uff0c\u624d\u4f1a\u6267\u884c\u672c\u6b21\u64cd\u4f5c\u3002\n\n\u4f60\u9700\u8981\u5224\u65ad\u6bcf\u6b21\u64cd\u4f5c\u662f\u5426\u4f1a\u88ab\u6267\u884c\u3002\n\n### \u6570\u636e\u8303\u56f4\n\n$n,m,q \\leq 5 \\times 10^5,k \\leq 50$\u3002\n\n## \u601d\u8def\n\n\u6ce8\u610f\u5230\u672c\u9898\u4e2d\u7b2c $i$ \u6b21\u67d3\u8272\u64cd\u4f5c\u53ea\u4f1a\u5bf9\u4fdd\u7559\u989c\u8272\u4e3a $c_i$ \u7684\u8fb9\u80fd\u5426\u5f62\u6210\u4e8c\u5206\u56fe\u4ea7\u751f\u5f71\u54cd\uff0c\u540c\u65f6\u989c\u8272\u7684\u603b\u6570\u4e5f\u5f88\u5c0f\uff0c\u5c31\u53ef\u4ee5\u8003\u8651\u7c7b\u4f3c\u4e8e [P5787](https://www.luogu.com.cn/problem/P5787) \u7684\u6280\u5de7\uff0c\u7528 $k$ \u4e2a**\u6269\u5c55\u57df\u5e76\u67e5\u96c6**\u5206\u522b\u7ef4\u62a4\u6bcf\u4e00\u79cd\u989c\u8272\u7684\u60c5\u51b5\u3002\n\n\u8003\u8651\u5bf9\u4e8e\u4e00\u6761\u8fb9\u76f8\u90bb\u7684\u67d3\u8272\u64cd\u4f5c\uff08\u8bb0\u4e3a\u64cd\u4f5c $i$ \u548c\u64cd\u4f5c $j$\uff09\uff0c\u64cd\u4f5c $i$ \u6240\u80fd\u76f4\u63a5\u5f71\u54cd\u7684\u8303\u56f4\u4e3a $[i,j-1]$\uff0c\u800c\u5176\u5bf9\u67d3\u8272\u64cd\u4f5c $[i+1,j-1]$ \u7684\u5f71\u54cd\u53d6\u51b3\u4e8e\u64cd\u4f5c $i$ \u80fd\u5426\u88ab\u6267\u884c\u3002\n\n\u4e8e\u662f\u5c31\u53ef\u4ee5\u5c06\u64cd\u4f5c $i$ \u8986\u76d6\u5230 $[i+1,j-1]$ \u4e2d\uff0c\u5728\u5206\u6cbb\u5230\u53f6\u5b50\u8282\u70b9\u65f6\u5224\u65ad\u64cd\u4f5c $i$ \u80fd\u5426\u88ab\u6267\u884c\uff0c\u5982\u679c\u4e0d\u80fd\u88ab\u6267\u884c\u3002\u6b64\u65f6\u867d\u7136\u64cd\u4f5c\u6ca1\u6709\u6267\u884c\uff0c\u4f46\u8fb9\u8fd8\u662f\u5b58\u5728\u7684\uff0c\u8fd8\u662f\u9700\u8981\u5224\u65ad\u539f\u6765\u7684\u989c\u8272\u662f\u5426\u4e3a\u4e8c\u5206\u56fe\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u64cd\u4f5c\u4e0d\u88ab\u6267\u884c\u5b9e\u9645\u4e0a\u4e5f\u5c31\u662f\u628a\u4e0a\u4e00\u6b21\u6267\u884c\u7684\u67d3\u8272\u64cd\u4f5c\u91cd\u65b0\u6267\u884c\u4e86\u4e00\u904d\uff0c\u90a3\u4e48\u76f4\u63a5\u628a $c[i]$ \u6539\u4e3a\u4e0a\u4e00\u6b21\u64cd\u4f5c\u7684\u989c\u8272\u5373\u53ef\u3002\n\n## code\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<vector>\nusing namespace std;\nconst int N=5e5+10,K=55;\nvector<int>e[N<<2];\nint pos[N],top,u[N],v[N],a[N],c[N],n,m,k,q,f[K][N<<1],height[K][N<<1];\nint find(int c,int x){return f[c][x]==x?x:find(c,f[c][x]);}\nstruct node{int c,x,y,add;}stk[N];\nvoid merge(int c,int x,int y)\n{\n\tif(x==y) return ;\n    if(height[c][x]>height[c][y]) swap(x,y);\n    stk[++top]=node{c,x,y,height[c][x]==height[c][y]};\n    f[c][x]=y;height[c][y]+=height[c][x]==height[c][y];\n}\nvoid update(int p,int l,int r,int nl,int nr,int k)\n{\n\tif(nl<=l&&r<=nr){e[p].push_back(k);return ;}\n\tint mid=l+r>>1;\n\tif(nl<=mid) update(p<<1,l,mid,nl,nr,k);\n\tif(nr>mid) update(p<<1|1,mid+1,r,nl,nr,k);\n}\nvoid solve(int p,int l,int r)\n{\n\tint back=top,mid=l+r>>1;\n\tfor(auto i:e[p])\n\t{\n\t\tint fx=find(c[i],u[a[i]]),fy=find(c[i],v[a[i]]);\n\t\tmerge(c[i],find(c[i],u[a[i]]),find(c[i],v[a[i]]+n));\n\t\tmerge(c[i],find(c[i],u[a[i]]+n),find(c[i],v[a[i]]));\n\t}\n\tif(l==r)\n\t{\n\t\tif(find(c[r],u[a[r]])==find(c[r],v[a[r]])) puts(\"NO\"),c[r]=pos[a[r]]; \n\t\telse puts(\"YES\"),pos[a[r]]=c[r];\n\t}\n\telse solve(p<<1,l,mid),solve(p<<1|1,mid+1,r);\n\twhile(top>back)\n\t{\n\t\tint c=stk[top].c,x=stk[top].x,z=stk[top].add;top--;\n\t\theight[c][f[c][x]]-=z;f[c][x]=x;\n\t}\n}\nint main()\n{\n//\tfreopen(\"in.txt\",\"r\",stdin);\n\tscanf(\"%d%d%d%d\",&n,&m,&k,&q);\n\tfor(int j=1;j<=k;j++)\n\t    for(int i=1;i<=n;i++)\n\t        f[j][i]=i,f[j][i+n]=i+n;\n\tfor(int i=1;i<=m;i++) scanf(\"%d%d\",&u[i],&v[i]),pos[i]=q+1;\n\tfor(int i=1;i<=q;i++) scanf(\"%d%d\",&a[i],&c[i]);\n\tint cnt=0;\n\tfor(int i=q;i>=0;i--)\n\t{\n\t\tif(i+1<pos[a[i]]) update(1,1,q,i+1,pos[a[i]]-1,i);\n\t\t//i+1\u662f\u56e0\u4e3a\u5982\u679c\u5224\u65adi\u65f6\u76f4\u63a5\u628a\u5b83\u52a0\u8fdb\u6765\uff0c\u8fd9\u65f6\u7684\u989c\u8272\u662f\u65b0\u7684\u989c\u8272\uff0c\u4f46\u540e\u9762\u64a4\u9500\u7684\u5c31\u662f\u539f\u6765\u7684\u989c\u8272\uff0c\u5c31\u4f1a\u4ea7\u751f\u9519\u8bef \n\t\tpos[a[i]]=i;\n\t}\n\tmemset(pos,0,sizeof(pos));solve(1,1,q);\n\treturn 0;\n}\n```\n",
        "postTime": 1657113642,
        "uid": 288192,
        "name": "ListenSnow",
        "ccfLevel": 7,
        "title": "CF576E Painting Edges"
    }
]