[
    {
        "content": "- \u521a\u5f00\u59cb\u770b\u4ee5\u4e3a\u662f\u6700\u77ed\u8def\u7684\u6a21\u677f\u9898\uff0c\u5c31\u76f4\u63a5\u7528\u5806\u4f18\u5316dijkstra+\u8f93\u51fa\u8def\u5f84\u641e\u4e86\u4e00\u6ce2\u3002\u7ed3\u679c\u5341\u5206\u60e8\u70c8\u2026\u2026\n\n\u8fd9\u9053\u9898\u5751\u8fd8\u662f\u6709\u7684\uff0c\u6bd4\u5982\uff1a\n- \u8fb9\u662f\u53cc\u5411\u8fb9\uff08\u8fd9\u4e00\u70b9\u7ffb\u8bd1\u6ca1\u6709\u5f88\u597d\u7684\u8bf4\u660e\uff09\n- \u540e\u8fb9\u7684\u6570\u636e\u5927\u5230\u8981\u5f00long long\n\n\u77e5\u9053\u4e86\u8fd9\u4e9b\u540e\uff0c\u8fd9\u9898\u5c31\u6bd4\u8f83\u7b80\u5355\u4e86\uff0c\u76f4\u63a5\u6700\u77ed\u8def+\u8def\u5f84\u8f93\u51fa \u5c31\u53ef\u4ee5\u4e86\n\n\u5728\u4e0b\u7528\u7684\u662f\u5806\u4f18\u5316dijkstra\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<queue>\n#include<cstdio>\nusing namespace std;\nstruct yyy{\n    int f,\n        t,\n        len,\n        nex;\n}e[500100*2]; //\u524d\u5411\u661f\u5b58\u56fe \nstruct node{\n    int x; long long y;\n    bool operator < (const node& hhh) const{ return y>hhh.y; } //\u91cd\u8f7d\u8fd0\u7b97\u7b26\u5b9e\u73b0\u5c0f\u6839\u5806 \n}; \npriority_queue <node> q; //STL\u5927\u6cd5\u597d \nint tot,head[100100];\nvoid add(int x,int y,int z) //\u52a0\u8fb9\u51fd\u6570 \n{\n    e[++tot].f=x;\n    e[tot].t=y;\n    e[tot].len=z;\n    e[tot].nex=head[x];\n    head[x]=tot;\n}\nlong long int dis[100100]; //\u4e00\u5b9a\u8981\u5f00long long \nint flag,ans[100100],pos[100100]; //\u5b58\u50a8\u8def\u5f84 \nint main()\n{\n    int n,m,s;\n    cin>>n>>m; s=1;\n    for(int i=1;i<=m;i++)\n    {\n        int x,y,z;\n        scanf(\"%d%d%d\",&x,&y,&z);\n        add(x,y,z); //\u53cc\u5411\u8fb9 \n        add(y,x,z);\n    }\n    for(int i=1;i<=n;i++)\n      dis[i]=9223372036854775806;\n    dis[s]=0; ans[flag]=s;\n    q.push(node{s,dis[s]});\n    while(!q.empty())  //dijkstra\u4e3b\u4f53 \n    {\n        node ww=q.top(); q.pop();\n        int k=ww.x;\n        if(ww.y!=dis[k]) continue;\n        for(int j=head[k];j;j=e[j].nex)\n          if(dis[e[j].t]>dis[k]+e[j].len)\n          {\n            dis[e[j].t]=dis[k]+e[j].len;\n            q.push(node{e[j].t,dis[e[j].t]});\n            pos[e[j].t]=k; //\u5b58\u50a8\u8def\u5f84 \n          }\n    }\n    bool flag2=1; //\u5224\u65ad\u80fd\u5426\u627e\u5230\u8d77\u70b9 \n    for(int i=n;i;i=pos[i]) //\u5230\u7740\u4ece\u7ec8\u70b9\u627e\u56de\u53bb\n    {\n        ans[++flag]=i;\n        if(i==1) //\u5982\u679c\u627e\u5230\u8d77\u70b9\uff0c\u66f4\u6539\u5224\u65ad\u53d8\u91cf \n          flag2=0;\n    }\n\n    if(flag2){\n        cout<<-1; return 0;\n    } //\u6ca1\u6709\u627e\u5230\u8d77\u70b9\uff0c\u8f93\u51fa\"-1\"\n\n    for(int i=flag;i>=1;i--) //\u56e0\u4e3a\u662f\u5012\u7740\u627e\u56de\u53bb\u7684\uff0c\u6240\u4ee5\u8981\u5012\u5e8f\u8f93\u51fa \n      cout<<ans[i]<<\" \";\n    return 0;\n}\n```",
        "postTime": 1522320208,
        "uid": 34188,
        "name": "MorsLin",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF20C \u3010Dijkstra?\u3011"
    },
    {
        "content": "\u5927\u5bb6\u597d\uff0c\u6211\u662fhpz\uff0c\u6211\u975e\u5e38\u559c\u6b22\u66b4\u529b\uff0c\u6240\u4ee5\u6211\u5c31\u7528\u66b4\u529b\u901a\u8fc7\u4e86\u6b64\u9898\u3002\n\n\u8fd9\u4e00\u9898\u88f8\u66b4\u529b`dfs`\u60f3\u90fd\u522b\u60f3\uff0c\u6240\u4ee5\u5fc5\u987b\u5927\u529b\u4f18\u5316\uff0c\u672c\u7bc7\u9898\u89e3\u4e3b\u8981\u5c31\u662f\u8bb2\u4f18\u5316\u3002\n\n1. \u8bb0\u5fc6\u5316\u3002\n\n\u8fd9\u662f\u6bd4\u8f83\u5e38\u89c1\u7684\u4f18\u5316\u3002\n\n\u6211\u4eec\u5728`dfs`\u51fd\u6570\u4e2d\uff0c\u4e00\u822c\u9700\u8981\u6709$\\text{n}$\uff08\u5f53\u524d\u8282\u70b9\u7f16\u53f7\uff09\uff0c\u548c$\\text{w}$\uff08\u76ee\u524d\u8d70\u8fc7\u7684\u8def\u5f84\u6743\u503c\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4$\\text{f}$\uff0c\u5176\u4e2d$f_{i}$\u8868\u793a\u8d70\u5230\u8282\u70b9$\\text{i}$\u76ee\u524d\u6240\u9700\u8981\u82b1\u8d39\u7684\u65f6\u95f4\u3002\n\n\u90a3\u4e48\u5728`dfs`\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u526a\u4e2a\u679d\uff0c\u5982\u679c$f_n \\leq w$\u5c31\u76f4\u63a5\u8df3\u51fa\u3002\n\n\n2. \u5982\u679c\u5f53\u524d\u7684$\\text{w}$\u5df2\u7ecf\u6bd4\u6211\u4eec\u7684\u5f53\u524d\u7b54\u6848$\\text{ans}$\u8981\u5927\uff0c\u76f4\u63a5\u8df3\u51fa\u3002\n\n3. \u7384\u5b66\u4f18\u5316\n\n\u8fd9\u4e00\u70b9\u8981\u5b9e\u73b0\u5f97\u7528$\\text{vector}$\u5b58\u56fe\u3002\n\n\u6211\u4eec\u5728\u6bcf\u6761\u8fb9\u5b58\u5b8c\u4ee5\u540e\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u4ece\u8fd9\u4e2a\u70b9\u51fa\u53d1\u7684\u6240\u6709\u8fb9\u6309\u7167**\u8282\u70b9\u7f16\u53f7**\u6392\u5e8f\u3002\n\n\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u2026\u2026\u5c31\u662f\u9632\u6b62CF\u7684\u6bd2\u7624Hacker\u7ed9\u4e86\u4e00\u5927\u5806\u8fb9\uff0c\u4f46\u5176\u5b9e\u6709$1-n$\u7684\u8fb9\uff0c\u800c\u4e14\u5c31\u662f\u6700\u77ed\u8def\u5f84\u7684\u60c5\u51b5\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e86\u3002\n\n[code](https://www.luogu.com.cn/paste/akrypxop)",
        "postTime": 1624953669,
        "uid": 253765,
        "name": "houpingze",
        "ccfLevel": 5,
        "title": "CF20C \u66b4\u529b\u9898\u89e3\uff08"
    },
    {
        "content": "**\u57fa\u672c**\u548c\u5355\u6e90\u6700\u77ed\u8def\u662f\u91cd\u9898\n\n[\u540c\u65f6\u53d1\u8868\u5728\u672c\u4eba\u535a\u5ba2\u56ed](https://www.cnblogs.com/j1yx/p/11066192.html)\n\n\u56e0\u4e3a\u9898\u76ee\u4e2d\u8bf4\u4e86Dijkstra\uff0c\u5e72\u5565\u8fd8\u7528~~\u6b7b\u4e86\u7684SPFA?~~\n\n\u4f30\u8ba1\u7528Floyd100%\u4f1a\u6302...\n\n\u90a3\u4e48\u5c31\u7528\u5806\u4f18\u5316\u7684Dijkstra~~\uff08\u8fea\u6770\u514b\u65af\u6b58\uff09~~\n\n\u867d\u7136\u6211\u770b\u9898\u89e3\u533a\u7684\u786e\u6709Dijkstra\u4e86\uff0c\u4f46\u662f\u6ca1\u6709\u4ecb\u7ecd\uff0c\u6211\u5c31\u53d1\u4e00\u7bc7\u5427\uff0c\u5e0c\u671b\u4f60\u4eec\u80fd\u4ece\u4e2d\u83b7\u76caQaQ\n\n\u5173\u4e8e\u4ec0\u4e48\u662fDijkstra?\n\n[\u5de6\u8f6c\u767e\u5ea6](https://baike.baidu.com/item/%E8%BF%AA%E6%9D%B0%E6%96%AF%E7%89%B9%E6%8B%89%E7%AE%97%E6%B3%95/4049057?fr=aladdin)\n\n\u4f46\u662f\u6211\u81ea\u5df1\u90fd\u89c9\u5f97\u90a3\u4e2a\u8bb2\u7684\u592a\u590d\u6742\uff0c\u5c31\u7b80\u5355\u7684\u8bb2\u4e00\u4e0b\u5427\n\nDijkstra\u4e0d\u4f1a\u6b7b\u53bb\u7684\u6761\u4ef6\uff1a\n\n\u8be5\u6709\u6743\u56fe\u4e0d\u542b\u8d1f\u6743\u8fb9\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n^2)\n\n\u4ecb\u7ecd\u4e00\u4e0b\uff1a\n\nDijkstra\u7c7b\u4f3c\u4e8e\u8d2a\u5fc3\n\n\u9996\u5148\u5148\u786e\u5b9a\u4e00\u4e2a\u6e90\u70b9\uff08\u8fd9\u91cc\u5c31\u662f1\u53f7\u70b9\uff09\uff0c\u5148\u628a\u6240\u6709Dis(1,i)\uff08i!=1\uff09\u90fd\u5b9a\u4e3aINF\uff0c\u7136\u540e\u5148\u904d\u5386\u4e00\u904d\uff0c\u628a\u4e0e\u70b91\u76f8\u8fde\u7684\u70b9\uff08\u5373\u53ea\u7528\u8d70\u4e00\u4e2a\u8fde\u8fb9\uff09\u7684\u70b9i\u7684\u8ddd\u79bb\u90fd\u7b2c\u4e00\u6b21\u76f4\u63a5\u5904\u7406\u4e3aDis(1,i)\n\n\u7b2c\u4e8c\u6b21\u904d\u5386\u628a\u4e0e`Dis(1,i)<INF`\u7684\u70b9\u6709\u8fde\u63a5\u7684\u70b9j\u7684Dis\u5904\u7406\u4e3aDis(1,i,j)\u610f\u4e3a\u7528i\u70b9\u7684Dis\u6765\u7ed9j\u70b9\u9644\u4e0aDis\uff0c\u53ef\u4ee5\u8bf4`Dis(1,j)=Dis(1,i)+Dis(i,j)\uff1b`\n\n\u4e4b\u540e\u6211\u4eec\u91cd\u590d\u7b2c\u4e8c\u6b21\u7684\u64cd\u4f5c\uff0c\u4e0d\u8fc7\u8fd9\u6b21\u4f1a\u591a\u4e00\u79cd\u60c5\u51b5\uff0c\u5373\u7528Dis(j)\u6765\u5904\u7406Dis(i)\uff0c\u5c31\u662f\u8bf4\u8fd9\u6b21\u904d\u5386\u5230j\u70b9\u7684\u65f6\u5019\uff0c\u5982\u679c\u6709`Dis(1,j,i)<Dis(1,i)<INF`,\u6211\u4eec\u5c31Dis(1,i)\u7684\u503c\u53d8\u4e3a `min(Dis(1,j),Dis(1,j)+Dis(j,i))`\n\n\u904d\u5386\u8fc7\u540e\uff0c\u5982\u679c\u4ecd\u6709Dis(k)=INF\u7684\u8bdd\uff0c\u5c31\u8bc1\u660e\u70b91\u65e0\u6cd5\u5230\u70b9k\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u8f93\u51fa`-1`\u5c31\u53ef\u4ee5\u4e86\n\n\u90a3\u4e48\u4ec0\u4e48\u662f\u5806\u4f18\u5316Dijkstra\u5462\uff1f\n\n\u6bcf\u6b21\u6269\u5c55\u4e00\u4e2a\u8ddd\u79bb\u6700\u5c0f\u7684\u70b9\uff0c\u518d\u66f4\u65b0\u4e0e\u5176\u76f8\u90bb\u7684\u70b9\u7684\u8ddd\u79bb\u3002\n\u5982\u4f55\u5bfb\u627e\u8ddd\u79bb\u6700\u5c0f\u7684\u70b9\uff1f\n\u4f18\u5316\u65b9\u6848\u662f\u5efa\u4e00\u4e2a\u5c0f\u6839\u5806\uff0c\u5c0f\u6839\u5806\u91cc\u5b58\u50a8\u7531\u5f53\u524d\u7ed3\u70b9\u66f4\u65b0\u8ddd\u79bb\u7684\u6240\u6709\u70b9\uff0c\u90a3\u4e48\u5806\u9876\u5c31\u662f\u8ddd\u79bb\u6700\u5c0f\u7684\u70b9\n\n\u5efa\u4e00\u4e2a\u5c0f\u6839\u5806\uff0c\u7528\u6765\u5b58\u50a8\u7ed3\u70b9\u7684\u5e8f\u53f7\uff0c\u7528\u4e00\u4e2a\u6570\u7ec4\u6765\u5b58\u50a8\u7b2ci\u4e2a\u7ed3\u70b9\u5728\u5806\u4e2d\u7684\u4f4d\u7f6e\uff0c\u7528\u4e00\u4e2a\u6807\u8bb0\u6570\u7ec4\u6765\u8bb0\u5f55\u7ed3\u70b9\u662f\u5426\u5728\u5806\u4e2d\n\n\u5bf9\u4e8e\u5c0f\u6839\u5806\u7684\u64cd\u4f5c\u8fd8\u662f\u57fa\u672c\u7684put() \u548cget() \uff0c\u4f46\u7531\u4e8e\u6709\u7684\u7ed3\u70b9\u5df2\u7ecf\u5728\u5806\u4e2d\u4e86\uff0c\u6240\u4ee5\u53ef\u4ee5\u628aput() \u62c6\u4e3a\u63d2\u5165\u5806\u548c\u8c03\u6574\u4f4d\u7f6e\u4e24\u4e2a\u90e8\u5206\n\n```\n1.\u5c06\u4e0e\u6e90\u70b9\u76f8\u90bb\u7684\u70b9\u8fdb\u884c\u677e\u5f1b\u64cd\u4f5c\u540e\u52a0\u5165\u5806\n2.\u53d6\u51fa\u4f4d\u4e8e\u5806\u9876\u7684\u7ed3\u70b9\n3.\u82e5\u53d6\u51fa\u7684\u70b9\u4e3a\u7ec8\u70b9\uff0c\u5219\u7ed3\u675f\u7b97\u6cd5\n4.\u5c06\u4e0e\u5f53\u524d\u7ed3\u70b9\u76f8\u90bb\u7684\u70b9\u8fdb\u884c\u677e\u5f1b\u64cd\u4f5c\n(1)\u5982\u679c\u8be5\u70b9\u5df2\u7ecf\u5728\u5806\u4e2d\uff0c\u5c31\u8c03\u6574\u5728\u5806\u4e2d\u7684\u4f4d\u7f6e\n(2)\u5982\u679c\u8be5\u70b9\u4e0d\u5728\u5806\u4e2d\uff0c\u5c31\u52a0\u5165\u5806\n```\n\n\u4ee3\u7801\u5982\u4e0b\n\n```\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#include <queue>\nusing namespace std;\n\ntypedef long long ll;\nconst int MAXN = 1e5 + 10;\nconst ll INF = 1ll<<62;\nvector<int>e[MAXN];\nvector<int>w[MAXN];\nbool vis[MAXN];\nll d[MAXN];\nint pre[MAXN];\nint n;\n\nstruct Node {\n\tll d;\n\tint u;\n\tbool operator < (const Node & rhs) const {\n\t\treturn d > rhs.d;\n\t}\n};\n\nvoid Dijkstra() {\n\tpriority_queue<Node>q;\n\tfor( int i=1; i<=n; i++ ) d[i] = INF;\n\td[1] = 0;\n\tmemset(vis, 0, sizeof(vis));\n\tNode tn;\n\ttn.d = 0, tn.u = 1;\n\tq.push(tn);\n\twhile(!q.empty()) {\n\t\tNode t = q.top();\n\t\tq.pop();\n\t\tint u = t.u;\n\t\tif(vis[u]) continue;\n\t\tvis[u] = true;\n\t\tfor( int i=0; i<e[u].size(); i++ ) {\n\t\t\tint v = e[u][i];\n\t\t\tif(d[v] > d[u] + w[u][i]) {\n\t\t\t\td[v] = d[u] + w[u][i];\n\t\t\t\tpre[v] = u;\n\t\t\t\ttn.d = d[v], tn.u = v;\n\t\t\t\tq.push(tn);\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main() {\n\tint m;\n\twhile(scanf(\"%d%d\", &n, &m) != EOF) {\n\t\tfor( int i=1; i<=n; i++ ) e[i].clear(), w[i].clear();\n\t\tint a, b, c;\n\t\tfor( int i=0; i<m; i++ ) {\n\t\t\tscanf(\"%d%d%d\", &a, &b, &c);\n\t\t\te[a].push_back(b);\n\t\t\tw[a].push_back(c);\n\t\t\te[b].push_back(a);\n\t\t\tw[b].push_back(c);\n\t\t}\n\t\tDijkstra();\n\t\tif(d[n] == INF) printf(\"-1\\n\");\n\t\telse {\n\t\t\te[1].clear();\n\t\t\te[1].push_back(n);\n\t\t\twhile(pre[n] != 1) {\n\t\t\t\tn = pre[n];\n\t\t\t\te[1].push_back(n);\n\t\t\t}\n\t\t\te[1].push_back(1);\n\t\t\tfor( int i=e[1].size()-1; i>0; i-- ) printf(\"%d \", e[1][i]);\n\t\t\tprintf(\"%d\\n\", e[1][0]);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1561112435,
        "uid": 114677,
        "name": "Yoo_",
        "ccfLevel": 0,
        "title": "CodeForces 20C      \u3010Dijkstra? \u3011"
    },
    {
        "content": "\u5806\u4f18\u5316\u7684DJ\n\n\u6ce8\u610f\u8981\u5f00long long\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=100010;\nstruct node\n{\n\tint next;\n\tint to;\n\tlong long value;\n}edge[4*maxn];\nint n,m;\nint x,y,v;\nint head[maxn],cnt,tot;\nbool flag;\nlong long dis[maxn],nxt[maxn],pre[maxn],vis[maxn],pa[maxn];\npriority_queue< pair<long long,long long> >q;\nvoid add(int x,int y,int v)\n{\n\tedge[++cnt].next=head[x];\n\tedge[cnt].to=y;\n\tedge[cnt].value=v;\n\thead[x]=cnt;\n}\nvoid dijkstra()\n{\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tdis[i]=9e13+7;\n\t}\n\tmemset(vis,false,sizeof(vis));\n\tq.push(make_pair(0,1));\n\tdis[1]=0;\n\twhile(q.size()!=0)\n\t{\n\t\tint x=q.top().second;\n\t\tq.pop();\n\t\tif(vis[x])\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tvis[x]=true;\n\t\tfor(int i=head[x];i;i=edge[i].next)\n\t\t{\n\t\t\tint h=edge[i].to;\n\t\t\tif(dis[x]+edge[i].value<dis[h])\n\t\t\t{\n\t\t\t\tdis[h]=dis[x]+edge[i].value;\n\t\t\t\tq.push(make_pair(-dis[h],h));\n\t\t\t\tpre[h]=x;\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n}\nvoid print()\n{\n\tfor(int i=n;i;i=pre[i])\n\t{\n\t\tpa[++tot]=i;\n\t\tif(i==1)\n\t\t{\n\t\t\tflag=true;\n\t\t}\n\t}\n\tif(flag)\n\t{\n\t\tfor(int i=tot;i>=1;i--)\n\t\t{\n\t\t\tprintf(\"%d \",pa[i]);\n\t\t}\n\t}\n\telse\n\t{\n\t\tprintf(\"-1\");\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&x,&y,&v);\n\t\tadd(x,y,v);\n\t\tadd(y,x,v);\n\t}\n\tdijkstra();\n\tprint();\n\treturn 0;\n}\n```\n",
        "postTime": 1554282614,
        "uid": 108746,
        "name": "JBLee",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF20C \u3010Dijkstra?\u3011"
    },
    {
        "content": "\u770b\u5230\u9898\u89e3\u91cc\u90fd\u662f\u7ed3\u6784\u4f53+\u91cd\u8f7d\u8fd0\u7b97\u7b26\u7684\u505a\u6cd5\n\n\u6211\u6765\u53d1\u4e00\u53d1pair\u7684\u524d\u5411\u661f~~\u849f\u84bb\u4e13\u5c5e\u798f\u5229~~\n\u3001\u3001\u3001cpp\n~~~cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct xing{\n\tlong long next,to,w;//\u522b\u8bef\u4f1a\uff0c\u8fd9\u867d\u7136\u662f\u7ed3\u6784\u4f53\uff0c\u4f46\u8fd9\u4e0d\u662f\u5b58\u8fdb\u5806\u7684\uff0c\u53ea\u662f\u524d\u5411\u661f\u5b58\u8fb9\n};\nxing xx[10000002];\nlong long dis[100009],vis[100009],cnt,pos[100009],flag,boo=1,ans[100009];\npriority_queue< pair<long long,long long> > q;//\u5566\u5566\u5566\uff0c\u6211\u5c31\u662fpair\u7684\u524d\u5411\u661f\nlong long  head[100009],n,m,g;\ninline void spfa()\n{\n\tfor(int j=1;j<=n;j++)\n\t  dis[j]=9e13;//\u521d\u59cb\u5316\n\tq.push(make_pair(0,g));\n\tdis[g]=0;\n\twhile(!q.empty())\n\t{\n\t    int now=q.top().second;//\u5bf9\u9996\u51fa\u961f\n\t\tq.pop();\n\t\tif(vis[now]==1)continue;\n\t\tvis[now]=1;\n\t\tfor(int j=head[now];j;j=xx[j].next)\n\t\t{\n\t\t\tint v=xx[j].to;\n\t\t\tif(dis[v]>dis[now]+xx[j].w)\n\t\t\t  {\n\t\t\t  \tdis[v]=dis[now]+xx[j].w;\n\t\t\t  \tq.push(make_pair(-dis[v],v));//\u52a0\u4e0a-\uff0c\u5c31\u662f\u5927\u6839\u5806\u6a21\u62df\u5c0f\u8ddf\u5806\u4e86\uff08\u4f18\u5148\u961f\u5217\uff09\n\t\t\t  \tpos[v]=now;\n\t\t\t  }\n\t\t}\n\t}\n}\nint main()\n{\n     cin>>n>>m;\n     g=1;//\u8d77\u70b9\n     int a,b,c;\n     for(int i=1;i<=m;i++)\n     {\n     \tcin>>a>>b>>c;\n     \txx[++cnt].to=b;//\u53cc\u5411\u8fb9\u5b58\u8fb9\n     \txx[cnt].next=head[a];\n     \txx[cnt].w=c;\n     \thead[a]=cnt;\n     \txx[++cnt].to=a;\n     \txx[cnt].next=head[b];\n     \txx[cnt].w=c;\n     \thead[b]=cnt;\n     }\n     spfa();\n     for(int i=n;i;i=pos[i]) \n    {\n        ans[++flag]=i;\n        if(i==1)\n         boo=0;\n    }\n    if(boo)//\u7279\u5224\u4e00\u4e0b-1\u7684\u60c5\u51b5\n\t  {\n\t  \tcout<<-1;\n\t  \treturn 0;\n\t  }\n    else\n      for(int i=flag;i>=1;i--)\n        cout<<ans[i]<<\" \";//\u6253\u5370\u8def\u5f84\n     return 0;\n}\n\n~~~",
        "postTime": 1540094662,
        "uid": 28190,
        "name": "\u4f1a\u6253\u6c99\u5305\u7684\u732b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF20C \u3010Dijkstra?\u3011"
    },
    {
        "content": ">Dijkstra?\n\nYeah.it is Dijkstra.\n\n~~\u770b[P3371](https://www.luogu.org/problem/P3371)\u548c[P4779](https://www.luogu.org/problem/P4779)\u7684\u9898\u89e3\u633a\u591a\u7684\uff0c\u5c31\u6765\u5199[CF20C](https://www.luogu.org/problem/CF20C)\u7684\u9898\u89e3\u4e86~~\n\n### \u4e0b\u9762\u4ecb\u7ecdDijkstra\u7b97\u6cd5\n\n\u7b97\u6cd5\u601d\u60f3\uff1a\u8d2a\u5fc3\n\n\u5e38\u7528\u9898\u578b\uff1a\u5355\u6e90\u6700\u77ed\u8def\u5f84\n\n\u9650\u5236\u6761\u4ef6\uff1a\u8fb9\u6743\u975e\u8d1f\n\n\u4e3b\u8981\u65b9\u6cd5\uff1a\u7528\u4e2a\u6570\u7ec4\u5b58\u8be5\u8282\u70b9\u5230\u6240\u7ed9\u8282\u70b9\uff08\u5373\u201c\u5355\u6e90\u6700\u77ed\u8def\u201d\u4e2d\u7684\u201c\u6e90\u201d\uff09\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\n\n\u7b80\u5355\u561a\u5575\u4e00\u4e0b\u6d41\u7a0b(\u52a0\u4e86\u5806\u4f18\u5316$ ^*$):\n\n1. \u521d\u59cb\u5316\uff1a\u6240\u7ed9\u8282\u70b9dis\u4e3a0\uff0c\u5176\u4f59\u70b9\u7684dis\u4e3a\u4e00\u4e2a\u8f83\u5927\u7684\u6570\n\n1. \u4ee5dis\u5927\u5c0f\u4e3a\u6bd4\u8f83\u6761\u4ef6\u5efa\u7acb\u5c0f\u6839\u5806\uff0c\u628a\u6240\u7ed9\u8282\u70b9\u6254\u5230\u5806\u91cc\uff08\u8981\u7528\u4e00\u4e2apair\u7c7b\u578b\u50a8\u5b58dis\u7684\u503c\u548c\u8282\u70b9\u6807\u53f7\uff09\n\n1. \u82e5\u5806\u4e0d\u4e3a\u7a7a\uff0c\u6bcf\u6b21\u53d6\u51fa\u5806\u9876\u5143\u7d20(\u5373dis\u6700\u5c0f\u7684\u4e00\u4e2a\u5143\u7d20)\u7684\u8282\u70b9\u6807\u53f7x\uff0c\u7136\u540e\u5f39\u51fa\u5806\u9876\u5143\u7d20\u3002\u82e5\u5df2\u8bbf\u95ee\u8fc7\u8be5\u8282\u70b9\uff0c\u5c31continue\uff1b\u5426\u5219\u679a\u4e3e\u6240\u6709\u4e0ex\u8282\u70b9\u6709\u8fb9\u76f4\u63a5\u76f8\u8fde\u7684\u8282\u70b9y\uff1a\u82e5**dis[x]+ x\u548cy\u4e4b\u95f4\u7684\u8fb9\u7684\u6743\u503c < dis[y]** (\u5373\u627e\u5230\u4e86\u8282\u70b9y\u7684\u66f4\u4f18\u7684\u89e3)\u5219\u66f4\u65b0dis[y],\u5e76\u628a\u8282\u70b9y\u6254\u5230\u5806\u91cc\n\n--------------------------------------------\n\n\\*\u52a0\u5806\u4f18\u5316\u540e\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O((n+m)log n)$\uff0c\u800c\u4e0d\u52a0\u5806\u4f18\u5316\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(n^2)$\n\n\u5728\u7a20\u5bc6\u56fe\u4e2d$m$\u63a5\u8fd1$n^2$\uff0c\u6545\u4e0d\u5fc5\u7528\u5806\u4f18\u5316\u3002\n\n---------------------------------------------\n#### \u53e6\u5916\uff0c\u5bf9\u4e8e\u8fd9\u9053\u9898\u76ee\n\u7528\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u5f53\u524d\u8282\u70b9\u5230\u6240\u7ed9\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u4e0a\u7684\u524d\u4e00\u4e2a\u8282\u70b9\u662f\u4ec0\u4e48\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u5f97\u5230\u5177\u4f53\u7684\u8def\u5f84\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;      //\u672c\u9898\u8981\u5f00long long\nconst int N = 1e5 + 5;\ntemplate <typename T> inline void read(T &x) //\u8bfb\u5165\u4f18\u5316\n{\n\tx=0; char ch=0; int f=1;\n\tfor(;!isdigit(ch);ch=getchar()) if(ch=='-') f=-f;\n\tfor(; isdigit(ch);ch=getchar()) x=(x<<1)+(x<<3)+ch-48;\n\tx*=f;\n}\ntemplate <typename T> inline void wrote(T x) //\u8f93\u51fa\u4f18\u5316\n{\n\tif(x<0) {putchar('-'); wrote(-x); return;}\n\tif(x<10){putchar(x+48);return;}\n\twrote(x/10);\n\tputchar(x%10+48);\n}\nvector < pair<int,ll> > g[N]; //\u7528vector\u7684\u90bb\u63a5\u8868\u5b58\u56fe\npriority_queue < pair<ll,int> > q; //\u7528\u76f8\u53cd\u6570\u5efa\u7acb\u5c0f\u6839\u5806\ndeque <ll> ans; //\u5b58\u8def\u5f84,\u65b9\u4fbf\u8f93\u51fa\nll dis[N],vis[N],pre[N];\nint n,m;\nint main()\n{\n\tread(n); read(m);\n\tfor(int i=1; i<=m; ++i)\n\t{\n\t\tint u,v,w;\n\t\tread(u); read(v); read(w);\n\t\tg[u].push_back(make_pair(v,w));\n\t\tg[v].push_back(make_pair(u,w));\n\t}\n\tq.push(make_pair(0,1));\n\tmemset(dis,0x7f,sizeof(dis));\n\tdis[1]=0;\n\twhile(!q.empty())\n\t{\n\t\tint u=q.top().second; q.pop();\n\t\tif(vis[u]) continue;\n\t\tvis[u]=1;\n\t\tfor(int i=0; i<g[u].size(); ++i)\n\t\t{\n\t\t\tint y=g[u][i].first; int z=g[u][i].second;\n\t\t\tif(dis[y]>dis[u]+z)\n\t\t\t{\n\t\t\t\tdis[y]=dis[u]+z;\n\t\t\t\tpre[y]=u;\n\t\t\t\tq.push(make_pair(-dis[y],y));\n\t\t\t}\n\t\t}\n\t}\n\tif(dis[n]==0x7f7f7f7f7f7f7f7f)\n\t{\n\t\tputs(\"-1\");\n\t\treturn 0;\n\t}\n\tint x=n;\n\twhile(pre[x])\n\t{\n\t\tans.push_back(x);\n\t\tx=pre[x];\n\t}\n\tans.push_back(1);\n\twhile(!ans.empty())\n\t{\n\t\twrote(ans.back());\n\t\tputchar(' ');\n\t\tans.pop_back();\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1565709916,
        "uid": 93689,
        "name": "retired_LeoStrange",
        "ccfLevel": 0,
        "title": "\u56fe\u8bba\u57fa\u7840\u2014\u2014\u6700\u77ed\u8def\u4e4bDijkstra\u7b97\u6cd5"
    },
    {
        "content": "### \u9898\u610f\u7ffb\u8bd1\n\n\u9898\u76ee\u5927\u610f\n\n\u7ed9\u51fa\u4e00\u5f20\u56fe\uff0c\u8bf7\u8f93\u51fa\u5176\u4e2d\u4efb\u610f\u4e00\u6761\u53ef\u884c\u7684\u4ece\u70b9 111 \u5230\u70b9 nnn \u7684\u6700\u77ed\u8def\u5f84\u3002\n\n\u8f93\u5165\u8f93\u51fa\u683c\u5f0f\n\n\u8f93\u5165\u683c\u5f0f\n\n\u7b2c\u4e00\u884c\uff1a\u4e24\u4e2a\u6574\u6570n\uff0cm\uff0c\u5206\u522b\u8868\u793a\u70b9\u6570\u548c\u8fb9\u6570\n\n\u63a5\u4e0b\u6765m\u884c\uff1a\u6bcf\u884c\u4e09\u4e2a\u6574\u6570u\uff0cv\uff0cw\uff0c\u8868\u793au\u548cv\u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\u6743\u4e3aw\u7684\u53cc\u5411\u8fb9\u3002\n\n\u8f93\u51fa\u683c\u5f0f\n\n\u4e00\u884c\uff1a\u4e00\u4e2a\u53ef\u884c\u7684\u8def\u5f84\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u8fd9\u79cd\u8def\u5f84\u8f93\u51fa-1\n\n2<=n<=105\uff0c0<=m<=105\n\n### \u9898\u76ee\u63cf\u8ff0\n\nYou are given a weighted undirected graph. The vertices are  enumerated from 1 to n n n . Your task is to find the shortest path  between the vertex 1 1 1 and the vertex n n n .\n\n### \u8f93\u5165\u683c\u5f0f\n\nThe first line contains two integers n n n and m m m (  2<=n<=105,0<=m<=105 2<=n<=10^{5},0<=m<=10^{5}  2<=n<=105,0<=m<=105 ), where n n n is the number of vertices  and m m m is the number of edges. Following m m m lines contain one  edge each in form ai a_ ai , bi b_ bi and wi w_ wi (  1<=ai,bi<=n,1<=wi<=106 1<=a_,b_<=n,1<=w_<=10^{6}  1<=ai,bi<=n,1<=wi<=106 ), where ai,bi a_,b_ ai,bi are edge  endpoints and wi w_ wi is the length of the edge.\n\nIt is possible that the graph has loops and multiple edges between pair of vertices.\n\n### \u8f93\u51fa\u683c\u5f0f\n\nWrite  the only integer -1 in case of no path. Write the shortest  path in  opposite case. If there are many solutions, print any of them.\n\n### \u8f93\u5165\u8f93\u51fa\u6837\u4f8b\n\n**\u8f93\u5165 #1**\n\n> 5 6 1 2 2 2 5 5 2 3 4 1 4 1 4 3 3 3 5 1\n\n**\u8f93\u51fa #1**\n\n> 1 4 3 5\n\n**\u8f93\u5165 #2**\n\n> 5 6 1 2 2 2 5 5 2 3 4 1 4 1 4 3 3 3 5 1\n\n**\u8f93\u51fa #2**\n\n> 1 4 3 5\n\n### \u9898\u89e3\n\n\u6700\u77ed\u8def\u6a21\u677f\u9898\u3002\u3002\u3002\n\n\u5728\u8ba1\u7b97\u6700\u77ed\u8def\u8fc7\u7a0b\u4e2d\uff0cpre[i]\u8bb0\u5f55\u70b9 i \u7684\u6700\u77ed\u8def\u524d\u9a71\u3002\n\n\u5229\u7528pre[i]\u6570\u7ec4\u8f93\u51fa\u7b54\u6848\u5373\u53ef\u3002\n\n\u6ce8\u610f\u6700\u540e\u4e00\u4e2a\u70b9\u8303\u56f4\u7206long long.\n\n### code:\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <queue>\n#include <cstring>\nusing namespace std;\ntypedef long long LL;\nconst int N = 2e5 + 5;\nint n, m;\nstruct edge { int to, nxt, val; } e[N];\nint cnt, head[N];\nvoid add(int from, int to, int val) {\n\te[++ cnt].to = to;\n\te[cnt].val = val;\n\te[cnt].nxt = head[from];\n\thead[from] = cnt;\n}\nint dis[N], vis[N], pre[N];\nLL ans[N];\nvoid spfa() {\n\tfor(int i = 1;i <= n;i ++) dis[i] = 1e15;\n\tqueue <int> q; q.push(1);\n\tdis[1] = 0; vis[1] = 1;\n\twhile(! q.empty()) {\n\t\tint tp = q.front(); q.pop();\n\t\tvis[tp] = 0;\n\t\tfor(int i = head[tp]; i ;i = e[i].nxt) {\n\t\t\tint to = e[i].to, val = e[i].val;\n\t\t\tif(dis[to] > dis[tp] + val) {\n\t\t\t\tdis[to] = dis[tp] + val;\n\t\t\t\tpre[to] = tp;\n\t\t\t\tif(! vis[to]) q.push(to), vis[to] = 1;\n\t\t\t}\n\t\t}\n\t}\n}\nsigned main() {\n\tcin >> n >> m;\n\tfor(int i = 1, a, b, l;i <= m;i ++) {\n\t\tcin >> a >> b >> l;\n\t\tadd(a, b, l); add(b, a, l);\n\t}\n\tspfa();\n\tif(dis[n] == 1e15) { cout << \"-1\"; return 0; }\n\tint t = n, tot = 0;\n\twhile(t != 1) {\n\t\tans[++ tot] = t;\n\t\tt = pre[t];\n\t}\n\tans[++ tot] = 1;\n\tfor(int i = tot; i ;i --) cout << ans[i] << \" \";\n\treturn 0;\n}\n```\n\n~~\u5c31\u8fd9\u6837\uff0c\u6211\u53c8\u6c34\u4e86\u4e00\u7bc7\u9898\u89e3\u3002~~\n\n",
        "postTime": 1565574640,
        "uid": 151852,
        "name": "Paranoid\u4e36\u79bb\u6b87",
        "ccfLevel": 6,
        "title": "CF20C Dijkstra? \u6700\u77ed\u8def"
    },
    {
        "content": "\n~~\u8fd9\u7edd\u5bf9\u4e0d\u662f\u6b63\u89e3~~\n\n\u6ca1\u9519\uff0cspfa\u662f\u88ab\u5361\u4e86\u3002\n\n\u7136\u800c\uff0cspfa\u6709\u4e00\u4e2a\u7279\u70b9\uff0c\u50a8\u5b58\u810f\u9876\u70b9\u7684\u5bb9\u5668\u53ef\u4ee5\u968f\u4fbf\u9009\u3002\u4e00\u822c\u5927\u5bb6\u7528\u7684\u90fd\u662f\u961f\u5217\uff0c\u6240\u4ee5\u6570\u636e\u5361\u7684\u4e5f\u662f\u961f\u5217\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u6362\u4e00\u79cd\u6570\u636e\u7ed3\u6784\u50a8\u5b58\u810f\u9876\u70b9\u3002\n\n\u6808\u8bd5\u8fc7\u4e86\uff0c30# TLE\u4e86\u3002\n\n\u5c1d\u8bd5\u4f18\u5148\u961f\u5217\uff0c\u5c45\u7136\u8fc7\u4e86\u3002\u800c\u4e14\u6211\u7684\u4f18\u5148\u961f\u5217\u7684\u5143\u7d20\u662f\u9876\u70b9\u7f16\u53f7\u2026\u2026\u8fd9\u4e5f\u592a\u7384\u5b66\u4e86\n\n```cpp\n#include <iostream>\n#include <queue>\n#include <vector>\n#include <list>\n#include <limits>\n#include <stack>\nusing namespace std;\n\n#define INF (std::numeric_limits<long long>::max())\nstruct Edge\n{\n\tint to, w;\n};\n\nvector<Edge> g[100005];\nvector<int> last(100005, -1);\nvector<long long> dis(100005, INF);\nvector<bool> vis(100005, false);\nint n, m;\n\nint main() {\n\tios::sync_with_stdio(false);\n\tcin >> n >> m;\n\tfor (int i = 0; i < m; ++i) {\n\t\tint u, v, w;\n\t\tcin >> u >> v >> w;\n\t\tg[u].push_back({ v, w });\n\t\tg[v].push_back({ u, w });\n\t}\n\t//\u5bf9\u7684\uff0c\u4f60\u6ca1\u6709\u770b\u9519\uff0c\u5173\u4e8e\u9876\u70b9\u7f16\u53f7\u7684\u6700\u5927\u5806\n\t//\u522b\u95ee\uff0c\u95ee\u5c31\u662f\u7384\u5b66\n\tpriority_queue<int> q;\n\tvis[1] = true;\n\tdis[1] = 0;\n\tq.push(1);\n\twhile (!q.empty()) {\n\t\tint f = q.top();\n\t\tq.pop();\n\t\tvis[f] = false;\n\t\tfor (auto e : g[f]) {\n\t\t\tif (dis[e.to] > dis[f] + e.w) {\n\t\t\t\tdis[e.to] = dis[f] + e.w;\n\t\t\t\tlast[e.to] = f;\n\t\t\t\tif (!vis[e.to]) {\n\t\t\t\t\tvis[e.to] = true;\n\t\t\t\t\tq.push(e.to);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif (dis[n] == INF) {\n\t\tcout << -1 << endl;\n\t}\n\telse {\n\t\tstack<int> stk;\n\t\tint cur = n;\n\t\twhile (cur != -1) {\n\t\t\tstk.push(cur);\n\t\t\tcur = last[cur];\n\t\t}\n\t\twhile (!stk.empty()) {\n\t\t\tcout << stk.top() << \" \";\n\t\t\tstk.pop();\n\t\t}\n\t}\n\treturn 0;\n};\n```\n",
        "postTime": 1563440161,
        "uid": 28027,
        "name": "KaenbyouRin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF20C \u3010Dijkstra?\u3011"
    },
    {
        "content": "## Content\n\u7ed9\u5b9a\u4e00\u5f20 $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u8bf7\u5224\u65ad\u662f\u5426\u6709\u4e00\u6761\u53ef\u884c\u7684\u4ece $1$ \u5230 $n$ \u7684\u8def\u5f84\uff0c\u6709\u7684\u8bdd\u8f93\u51fa\u957f\u5ea6\u6700\u77ed\u7684\uff0c\u6ca1\u6709\u7684\u8bdd\u8f93\u51fa `-1`\u3002\n\n**\u6570\u636e\u8303\u56f4\uff1a$2\\leqslant n\\leqslant 10^5$\uff0c$0\\leqslant m\\leqslant 10^5$\uff0c\u6bcf\u6761\u8fb9\u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7 $10^6$\u3002**\n## Solution\n\u8fd9\u9053\u9898\u7684\u6807\u9898\u5f53\u4e2d\u770b\u4e0a\u53bb\u662f\u5728\u8bef\u5bfc\u4f60\u4e0d\u7528 $\\textsf{Dijkstra}$\uff0c\u5176\u5b9e\u5df2\u7ecf\u7ed9\u51fa\u4e86\u8fd9\u9053\u9898\u76ee\u7684\u505a\u6cd5\u5c31\u662f\uff1a$\\textsf{Dijkstra}$\u3002\u4e3a\u4e86\u4f18\u5316\u590d\u6742\u5ea6\uff0c\u6211\u7528\u4e86\u5806\u4f18\u5316 + $\\textsf{Dijkstra}$\u3002\n\n\u90a3\u4e48 $\\textsf{Dijkstra}$ \u5982\u4f55\u505a\u5230\u80fd\u591f\u8f93\u51fa\u8def\u5f84\u5462\uff1f\u8fd9\u91cc\u6211\u4eec\u5c31\u9700\u8981\u7528\u5230\u4e00\u4e2a $\\textit{pre}$ \u6570\u7ec4\uff0c\u5176\u4e2d $\\textit{pre}_i$ \u8868\u793a\u6700\u77ed\u8def\u5f84\u4e2d\u5728 $i$ \u70b9\u524d\u9762\u7684\u70b9\u3002\u6211\u4eec\u53ef\u4ee5\u5728 $\\textsf{Dijkstra}$ \u5904\u7406 $\\textit{dis}$ \u6570\u7ec4\u7684\u65f6\u5019\u5c31\u628a\u8fd9\u4e2a $pre$ \u66f4\u65b0\u4e00\u904d\uff0c\u5c31\u50cf\u8fd9\u6837\uff1a\n\n```cpp\nfor(int i = h[x]; i; i = e[i].nxt) {\n\tint y = e[i].to, z = e[i].v;\n\tif(dis[y] > dis[x] + z) { //\u66f4\u65b0\u6700\u77ed\u8def\n\t\tdis[y] = dis[x] + z, pre[y] = x; //\u66f4\u65b0\u6700\u77ed\u8def\u7684\u957f\u5ea6\u548c\u5f53\u524d\u70b9\u5728\u6700\u77ed\u8def\u4e0a\u7684\u524d\u4e00\u4e2a\u8282\u70b9\u3002\n\t\tq.push(make_pair(-dis[y], y));\n\t}\n}\n```\n\n\u90a3\u4e48\u6211\u4eec\u53c8\u5982\u4f55\u5224\u65ad\u662f\u5426\u5b58\u5728\u4ece $1$ \u5230 $n$ \u6700\u77ed\u8def\u5f84\u5462\uff1f\u8fd9\u91cc\u7ed9\u51fa\u4e24\u79cd\u65b9\u6cd5\uff1a\n\n\u7b2c\u4e00\u79cd\uff0c\u8fd8\u8bb0\u5f97\u6211\u4eec\u5728\u8dd1 $\\textsf{Dijkstra}$ \u7684\u65f6\u5019\u8981\u5148\u505a\u4ec0\u4e48\u5417\uff1f\u6ca1\u9519\uff0c\u521d\u59cb\u5316 $\\textit{dis}$ \u6570\u7ec4\u3002\u7531\u4e8e\u662f\u6700\u77ed\u8def\uff0c\u6211\u4eec\u9700\u8981\u5c06\u8fd9\u4e2a $\\textit{dis}$ \u6570\u7ec4\u7684\u521d\u503c\u8bbe\u5f97\u5c3d\u53ef\u80fd\u5927\uff0c\u53c8\u56e0\u4e3a\u5728\u6570\u636e\u8303\u56f4\u4e2d\u6211\u4eec\u53d1\u73b0\uff1a\n\n> $0\\leqslant m\\leqslant 10^5$\uff0c\u6bcf\u6761\u8fb9\u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7 $10^6$\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u77e5\u9053\u4e86\uff0c\u53ef\u80fd\u6700\u957f\u7684\u6700\u77ed\u8def\u957f\u5ea6\u4e3a $10^5\\times 10^6=10^{11}$\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5f00 long long\uff0c\u5e76\u5c06\u8fd9\u4e2a $\\textit{dis}$ \u6570\u7ec4\u8d4b\u521d\u503c\u8d4b\u5728 $10^{11}$ \u4ee5\u4e0a\uff0c\u4e0b\u9762\u8fd9\u4e00\u6bb5\u4ee5\u7b14\u8005\u5728\u4ee3\u7801\u4e2d\u8d4b\u7684\u521d\u503c $10^{18}$ \u4e3a\u51c6\u3002\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u6765\u5224\u65ad\u662f\u5426\u5b58\u5728\u5230 $n$ \u7684\u6700\u77ed\u8def\u5f84\u4e86\uff1a\u53ea\u9700\u8981\u5224\u65ad\u662f\u5426\u6709 $\\textit{dis}_n\\neq10^{18}$ \u5373\u53ef\uff0c\u56e0\u4e3a\u5982\u679c $\\textit{dis}_n=10^{18}$\uff0c\u90a3\u4e48\u5c31\u8bf4\u660e $\\textit{dis}_n$ \u8fd8\u4ece\u6765\u6ca1\u6709\u66f4\u65b0\u8fc7\uff0c\u81ea\u7136\u4e5f\u5c31\u4e0d\u5b58\u5728\u4ece $1$ \u5230 $n$ \u7684\u6700\u77ed\u8def\u5f84\u4e86\u3002\n\n\u7b2c\u4e8c\u79cd\uff0c\u5c31\u8981\u7528\u5230\u8fd9\u4e00\u9898\u4e2d\u6240\u5f15\u5165\u7684 $\\textit{pre}$ \u6570\u7ec4\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece $n$ \u5f00\u59cb\uff0c\u76f4\u63a5\u5229\u7528 $x\\leftarrow\\textit{pre}_x$ \u5411\u524d\u63a8\u6700\u77ed\u8def\u5f84\u4e0a\u7684\u8282\u70b9\uff0c\u770b\u662f\u5426\u80fd\u591f\u63a8\u5230 $1$\uff0c\u5982\u679c\u6700\u7ec8\u4e0d\u80fd\u591f\u63a8\u5230 $1$ \u5c31\u8bf4\u660e\u4e0d\u5b58\u5728\u4ece $1$ \u5230 $n$ \u7684\u6700\u77ed\u8def\u5f84\u3002\n\n\u4e24\u79cd\u65b9\u6cd5\u867d\u7136\u770b\u4e0a\u53bb\u7b2c\u4e00\u79cd\u7684\u8868\u8ff0\u8981\u591a\u4e00\u4e9b\uff0c\u4f46\u5b9e\u9645\u4e0a\u8fd9\u4e24\u79cd\u65b9\u6cd5\u7684\u5b9e\u73b0\u7a0b\u5ea6\u90fd\u662f\u4e0d\u96be\u7684\uff0c\u56e0\u6b64\u63a8\u8350\u5927\u5bb6\u628a\u4e24\u79cd\u5199\u6cd5\u90fd\u5199\u4e00\u904d\u3002\n\n\u53e6\u5916\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4ece\u8fd9\u9053\u9898\u76ee\u4e2d\u5438\u53d6\u4e00\u4e9b\u6559\u8bad\uff1a**\u6807\u9898\u5e76\u4e0d\u4e00\u5b9a\u5c31\u51b3\u5b9a\u4e86\u4f60\u7684\u505a\u9898\u601d\u8def\uff0c\u4f60\u7684\u505a\u9898\u601d\u8def\u5e94\u5f53\u4ece\u9898\u9762\u4e2d\u901a\u8fc7\u601d\u8003\u800c\u5f97\u51fa**\u3002\n\n## Code 1\n```cpp\nconst int N = 1e5 + 7, M = N << 1;\nint n, m, u, v, w, cnt, fl, vis[N], h[M], ans[N], pre[N];\nll dis[N];\nstruct edge {int v, to, nxt;}e[M];\npq<pair<ll, int> > q;\n\niv a_e(int u, int v, int w) {e[++cnt] = (edge){w, v, h[u]}; h[u] = cnt;}\niv dj() {\n\tF(i, 1, 100000) dis[i] = 1e18;\n\tdis[1] = 0, q.push(mp(0, 1));\n\twhile(!q.empty()) {\n\t\tint x = q.top().se; q.pop();\n\t\tif(vis[x]) continue; vis[x] = 1;\n\t\tE {\n\t\t\tint y = e[i].to, z = e[i].v;\n\t\t\tif(dis[y] > dis[x] + z) {\n\t\t\t\tdis[y] = dis[x] + z, pre[y] = x;\n\t\t\t\tq.push(mp(-dis[y], y));\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main() {\n\tn = Rint, m = Rint;\n\tF(i, 1, m) {\n\t\tu = Rint, v = Rint, w = Rint;\n\t\ta_e(u, v, w), a_e(v, u, w);\n\t}\n\tdj();\n\tfor(int cur = n; cur; cur = pre[cur]) ans[++ans[0]] = cur;\n\tif(dis[n] != (ll)1e18) R(i, ans[0], 1) write(ans[i]), putchar(\" \\n\"[i == n]);\n\telse puts(\"-1\");\n    return 0;\n}\n```\n\n## Code 2\n```cpp\nconst int N = 1e5 + 7, M = N << 1;\nint n, m, u, v, w, cnt, fl, vis[N], h[M], ans[N], pre[N];\nll dis[N];\nstruct edge {int v, to, nxt;}e[M];\npq<pair<ll, int> > q;\n\niv a_e(int u, int v, int w) {e[++cnt] = (edge){w, v, h[u]}; h[u] = cnt;}\niv dj() {\n\tF(i, 1, 100000) dis[i] = 1e18;\n\tdis[1] = 0, q.push(mp(0, 1));\n\twhile(!q.empty()) {\n\t\tint x = q.top().se; q.pop();\n\t\tif(vis[x]) continue; vis[x] = 1;\n\t\tE {\n\t\t\tint y = e[i].to, z = e[i].v;\n\t\t\tif(dis[y] > dis[x] + z) {\n\t\t\t\tdis[y] = dis[x] + z, pre[y] = x;\n\t\t\t\tq.push(mp(-dis[y], y));\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main() {\n\tn = Rint, m = Rint;\n\tF(i, 1, m) {\n\t\tu = Rint, v = Rint, w = Rint;\n\t\ta_e(u, v, w), a_e(v, u, w);\n\t}\n\tdj();\n\tfor(int cur = n; cur; cur = pre[cur]) {\n\t\tans[++ans[0]] = cur;\n\t\tif(cur == 1) fl = 1;\n\t}\n\tif(fl) R(i, ans[0], 1) write(ans[i]), putchar(\" \\n\"[i == n]);\n\telse puts(\"-1\");\n    return 0;\n}\n```",
        "postTime": 1625183678,
        "uid": 112917,
        "name": "Eason_AC",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF20C \u3010Dijkstra?\u3011"
    },
    {
        "content": "\u51e0\u4e4e\u63a5\u8fd1\u6a21\u677f\u9898\u3002\n\n~~\u9898\u76ee\u540e\u9762\u52a0\u4e86\u95ee\u53f7\u8868\u793a\u8fd9\u9898\u4e00\u5b9a\u6709\u5751\uff08~~\n\n\u9664\u4e86\u9898\u9762\u4e0a\u7684\u53cc\u5411\u8fb9\u5916\uff0c\u540e\u9762\u7684\u6570\u636e\u8981\u5f00 long long \u624d\u80fd\u8fc7\u3002\n\n\u5269\u4e0b\u7684\u5c31\u662f dijkstra \u6c42\u6700\u77ed\u8def+\u8def\u5f84\u8f93\u51fa\u4e86\u3002\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst long long N=1e5+10,MAX=1e15;\nstruct Edge{int u,v,w;}edge[N*2];\nint head[N],cnt;\nint m,n;\nvoid addedge(int u,int v,int w)\n{\n\tedge[++cnt].v=v;\n\tedge[cnt].w=w;\n\tedge[cnt].u=head[u];\n\thead[u]=cnt;\n}\nstruct Node\n{\n\tint dis,pos;\n\tbool operator < (const Node &x) const {return x.dis<dis;}\n};\npriority_queue <Node> q;\nlong long dis[N],vis[N],pre[N],ans[N];\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u,v,w;\n\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\taddedge(u,v,w);\n\t\taddedge(v,u,w);\n\t}\n\tfor(int i=1;i<=n;i++) dis[i]=MAX;\n\tdis[1]=0;\n\tq.push((Node){0,1});\n\twhile(!q.empty())\n\t{\n\t\tNode t=q.top();\n\t\tq.pop();\n\t\tint x=t.pos,y=t.dis;\n\t\tif(vis[x]) continue;\n\t\tvis[x]=1;\n\t\tfor(int i=head[x];i;i=edge[i].u)\n\t\t{\n\t\t\tint y=edge[i].v,z=edge[i].w;\n\t\t\tif(dis[y]>dis[x]+z)\n\t\t\t{\n\t\t\t\tdis[y]=dis[x]+z;\n\t\t\t\tpre[y]=x;//\u8bb0\u5f55\u8def\u5f84\n\t\t\t\tq.push((Node){dis[y],y});\n\t\t\t}\n\t\t}\n\t}\n\tif(dis[n]==MAX) {puts(\"-1\");return 0;}\n\tint cnt=0;\n\twhile(n!=1)\n\t{\n\t\tans[++cnt]=n;\n\t\tn=pre[n];\n\t}\n\tans[++cnt]=1;\n\tfor(int i=cnt;i;i--) printf(\"%lld \",ans[i]); \n\treturn 0;\n}\n```\n\n\n\u96c6\u8bad\u524d\u4e00\u5929\u5199\u9898\u89e3\uff0cRP++\u3002",
        "postTime": 1626403872,
        "uid": 240165,
        "name": "\u897f\u5361\u6d1b\u65af",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF20C Dijkstra?"
    },
    {
        "content": "## \u601d\u8def\uff1a\n\n\u7531\u6807\u9898\u53ef\u5f97\uff0c\u7528dijkstra\n\n\u65e2\u7136\u90fd\u7528\u4e86dijkstra\uff0c\u4e0d\u59a8\u52a0\u4e0a\u5806\u4f18\u5316\u5427\n\n\u518d\u8bb0\u5f55\u8def\u5f84\u5373\u53ef\n\n## \u7279\u522b\u6ce8\u610f\uff1a\n\n1.dis\u7684\u5e38\u6570\u4e00\u5b9a\u8981\u5f00\u7684\u591f\u5927\uff0c\u5fc5\u987blong long \u672c\u849f\u84bb\u5728#31\u5361\u4e86\u5f88\u4e45\n\n2.\u8def\u5f84\u4e2a\u6570\u4e0d\u4e00\u5b9a\u53ea\u6709n\u4e2a\u4ece#3\u5f00\u59cb\u5c31\u6709\u5927\u4e8en\u4e2a\u4e86\n\n3.\u6ce8\u610f\u6ca1\u8def\u5f84\u8f93\u51fa\u201c-1\u201d\n\n\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<queue>\n#include<iostream>\n#include<cstring>\n\nusing namespace std;\n\nstruct edge//\u94fe\u5f0f\u524d\u5411\u661f\n{\n\tint to,next;\n\tlong long val;\n}g[500005];\nint n,m;\nlong long dis[500005];\nint vis[5000005];\nint cnt;\nint head[500005];\nint road[500005];\n\nvoid add(int a,int b,long long c)//\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\n{\n\tcnt++;\n\tg[cnt].to=b;\n\tg[cnt].val=c;\n\tg[cnt].next=head[a];\n\thead[a]=cnt;\n}\n\nstruct Point//\u91cd\u6784\u5c0f\u6839\u5806\n{\n\tint num;\n\tlong long dist;\n\tbool operator<(Point t) const\n\t{\n\t\treturn dist>t.dist;\n\t}\n};\n\npriority_queue <Point> q;\n\nvoid dijkstra()//dijkstra+\u5806\u4f18\u5316\n{\n\tPoint tmp;\n\ttmp.num=1;\n\ttmp.dist=0;\n\tdis[1]=0;\n\tmemset(vis,0,sizeof(vis));\n\tq.push(tmp);\n\twhile(!q.empty())\n\t{\n\t\tPoint u=q.top();\n\t\tq.pop();\n\t\tif(vis[u.num]==1)continue;\n\t\tvis[u.num]=1;\n\t\tfor(int i=head[u.num];i!=0;i=g[i].next)\n\t\t{\n\t\t\tint v=g[i].to;\n\t\t\tif(dis[v]>dis[u.num]+g[i].val && vis[v]!=1)\n\t\t\t{\n\t\t\t\troad[v]=u.num;//\u8bb0\u5f55\u8def\u5f84\n\t\t\t\tdis[v]=dis[u.num]+g[i].val;\n\t\t\t\ttmp.num=v;\n\t\t\t\ttmp.dist=dis[v];\n\t\t\t\tq.push(tmp);\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main(void)\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=0;i<m;i++)\n\t{\n\t\tint x,y;\n\t\tlong long z;\n\t\tscanf(\"%d%d%lld\",&x,&y,&z);\n\t\tadd(x,y,z);//\u53cc\u5411\n\t\tadd(y,x,z);\n\t}\n\tfor(int i=1;i<=n;i++)dis[i]=9223372036854775806;//\u5f00\u5927\u5e38\u6570\n\tdijkstra();\n\tbool flag=1;\n\tfor(int i=n;i!=0;i=road[i])if(i==1)flag=0;//\u5224\u65ad\u662f\u5426\u6709\u8def\u5f84\n\tif(flag==1)\n\t{\n\t\tprintf(\"-1\");\n\t\treturn 0;\n\t}\n\telse\n\t{\n\t\tvector<int> ans;//\u7528vector\u5b58\u4e0d\u5b9a\u4e2a\u6570\u7684\u8def\u5f84\n\t\tfor(int i=n;i!=0;i=road[i])ans.push_back(i);\n\t\tfor(int i=ans.size()-1;i>=0;i--)printf(\"%d \",ans[i]);\n\t}\n}\n```\n\n# AC\u901a\u77e5\u4e66~~~",
        "postTime": 1573044336,
        "uid": 68947,
        "name": "wally",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF20C \u3010Dijkstra?\u3011"
    },
    {
        "content": "\u6211\u51b3\u5b9a\u518d\u6c34\u4e00\u7bc7\u9898\u89e3~\n\n\u5728\u6c421~i\u6700\u77ed\u8def\u65f6\u987a\u4fbf\u4fdd\u7559i\u7684\u524d\u9a71\uff08\u6240\u6709\u6700\u77ed\u8def\u4e2d\u7684\u4e00\u4e2a\u53ef\u884c\u524d\u9a71\uff09\u5373\u53ef\n\n\u522b\u5fd8\u4e86\u5012\u5e8f\u8f93\u51fa\u548c-1\u7684\u7279\u5224\n\n```cpp\n#include<cstdio>\n#include<queue>\nusing namespace std;\nconst int MAXN=1e5 + 2;\ntypedef long long ll;\nconst ll inf=1e12; \nint read()\n{\n\tint x=0,w=1;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-') w=-1;c=getchar();}\n\twhile(c>='0'&&c<='9'){x=(x<<3)+(x<<1)+c-48;c=getchar();}\n\treturn x*w;\n}\nstruct Edge\n{\n\tint to,next;\n\tll w;\n}e[MAXN<<1];\nint head[MAXN]={0},cnt=0;\ninline void add(int u,int v,ll w)\n{\n\te[++cnt].to=v;\n\te[cnt].w=w;\n\te[cnt].next=head[u];\n\thead[u]=cnt;\n}\n\nll d[MAXN];\nint vis[MAXN]={0},last[MAXN]={0},n,m;\n//last[i]\u5b58i\u7684\u524d\u9a71\npriority_queue<pair<ll,int> > Q;\nvoid dij()\n{\n\tfor(int i=1;i<=n;i++) d[i]=inf;\n\td[1]=0;\n\tQ.push(make_pair(-d[1],1));\n\twhile(!Q.empty())\n\t{\n\t\tpair<int,int> p=Q.top();\n\t\tQ.pop();\n\t\tint u=p.second;\n     if(vis[u]) continue;\n\t\tvis[u]=1;\n\t\tfor(int i=head[u];i;i=e[i].next)\n\t\t{\n\t\t\tint v=e[i].to;\n\t\t\tif(d[v]>d[u]+e[i].w)\n\t\t\t{\n\t\t\t\td[v]=d[u]+e[i].w;\n\t\t\t\tlast[v]=u;\n\t\t\t\tQ.push(make_pair(-d[v],v));\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main()\n{\n\tn=read(),m=read();\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u=read(),v=read(),w=read();\n\t\tadd(u,v,w);\n\t\tadd(v,u,w); \n\t}\n\tint now=n;\n\tdij();\n\tint path[MAXN],num=0;\n\twhile(now)\n\t{\n\t\tpath[++num]=now; \n\t\tnow=last[now];\n\t}\n\tif(!last[n])\n\t{\n\t\tprintf(\"-1\\n\");\n\t\treturn 0;\n\t}\n\tfor(int i=num;i>1;i--)\n\t\tprintf(\"%d \",path[i]);\n\tprintf(\"%d\\n\",path[1]);\n\treturn 0;\t\n}\n```\n",
        "postTime": 1553154555,
        "uid": 88736,
        "name": "Sober_Clever",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011\u6d1b\u8c37CF20C"
    },
    {
        "content": "\u4e0d\u4ed4\u7ec6\u770b\u539f\u6587\u6216\u8005\u9898\u89e3\u8fd8\u771f\u7684\u6ce8\u610f\u4e0d\u5230\u9898\u76ee\u7ed9\u5b9a\u7684\u8fb9\u90fd\u662f\u53cc\u5411\u8fb9\u3002\n\n\u8fd9\u91cc\u4f7f\u7528Heap_Dijkstra\u5b9e\u73b0\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u6839\u636e\u5404\u79cd\u6700\u77ed\u8def\u7b97\u6cd5\u7684\u677e\u5f1b\u7279\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u66f4\u65b0\u6700\u77ed\u8def\u7684\u65f6\u5019\u987a\u624b\u5c31\u8bb0\u5f55\u67d0\u4e2a\u8282\u70b9\u7684\u201c\u4e0a\u4e00\u4e2a\u70b9\u201d\u4e86\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u548c\u5c0f\u7ec6\u8282\u5728\u4ee3\u7801\u6ce8\u91ca\u91cc\u3002\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=2e5+10;\nconst long long INF=1e12;\nint n,m;\nstruct edge{\n\tint u,v,w;\n};\nedge E[maxn];\nvector<int>G[maxn];\nint p[maxn];//p[k]\u8bb0\u5f55\u6700\u77ed\u8def\u4e0a\u5230\u8fbek\u7684\u8282\u70b9 \nlong long dis[maxn];\nbool vis[maxn];\nstruct Node{\n\tint u,d;\n\tbool operator < (const Node &tmp)const{\n\t\treturn d>tmp.d;\n\t}\n};\npriority_queue<Node>q;\n//\u4e00\u63fd\u5b50Heap_Dijkstra\u9700\u8981\u7684\u53d8\u91cf \n \nvoid readin(){//\u8bfb\u5165\u6570\u636e \n\tcin>>n>>m;\n\tfor(int i=1;i<=m;++i){\n\t\tint u,v,w; scanf(\"%d%d%d\",&u,&v,&w);\n\t\tE[i]=(edge){u,v,w};\n\t\tE[i+m]=(edge){v,u,w};//\u5904\u7406\u53cc\u5411\u8fb9\n\t\tG[u].push_back(i);\n\t\tG[v].push_back(i+m);//\u5904\u7406\u53cc\u5411\u8fb9 \n\t}\n}\n\nbool Dijkstra(){\n\tfill(dis+1,dis+n+1,INF);\n\tfill(vis+1,vis+n+1,false);\n\tdis[1]=0;\n\tq.push((Node){1,0});\n\twhile(!q.empty()){\n\t\tNode tmp=q.top(); q.pop();\n\t\tif(vis[tmp.u]) continue;\n\t\tvis[tmp.u]=true;\n\t\tfor(int i=0;i<G[tmp.u].size();++i){\n\t\t\tedge &e=E[G[tmp.u][i]];\n\t\t\tif(dis[e.v]>dis[e.u]+e.w){\n\t\t\t\tdis[e.v]=dis[e.u]+e.w;\n\t\t\t\tq.push((Node){e.v,dis[e.v]});\n\t\t\t\tp[e.v]=e.u;//\u201c\u987a\u5e26\u201d\u8bb0\u5f55\u4e00\u4e0b\u8def\u5f84 \n\t\t\t}\n\t\t}\n\t}\n\treturn !(dis[n]==INF);//dis[n]==INF \u5373\u4e3a\u4e0d\u8fde\u901a \n}\n\nvoid print_G(int k){//\u9012\u5f52\u6253\u5370\u8def\u5f84 \n\tif(p[k]!=-1) print_G(p[k]);//\u9012\u5f52\u7ec8\u70b9\uff0c\u5bf9\u5e94Give_Ans\u4e2dp[1]=-1 \n\tprintf(\"%d \",k);\n}\n\nvoid Give_Ans(bool if_pas){//\u5224\u65ad\u7b54\u6848\u662f\u5426\u5b58\u5728 \n\tif(!if_pas){\n\t\tputs(\"-1\");\n\t\treturn;\n\t}\n\tp[1]=-1;\n\tprint_G(n);\n}\n\nint main(){\n\treadin();\n\tbool if_pas=Dijkstra();\n\tGive_Ans(if_pas);\n\treturn 0;\n}\n```",
        "postTime": 1530697627,
        "uid": 38283,
        "name": "Dog_Two",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF20C \u3010Dijkstra?\u3011"
    },
    {
        "content": "Yes, Dijkstra. ~~Because SPFA  has died.~~  \n\n\n------------\n\u8a00\u5f52\u6b63\u4f20\u3002  \n\u2196\u8fd9\u4e2a\u5c51\u6ca1\u770b\u9898\u76ee\u76f4\u63a5\u5199\u4e86\u4e2a\u6700\u77ed\u8def\u6a21\u677f ~~\uff08\u867d\u7136\u67d0\u79cd\u610f\u4e49\u4e0a\u8fd9\u9898\u5c31\u662f\uff09~~ \uff0c\u7ed3\u679c\u663e\u7136\u60e8\u4e0d\u5fcd\u7779\u3002  \n\u9700\u8981\u6ce8\u610f\u7684\u6709\u4ee5\u4e0b\u51e0\u70b9\uff1a  \n+ \u9898\u76ee\u6240\u6c42\u662f\u6700\u77ed\u8def\u7ecf\u8fc7\u7684\u70b9\uff0c\u800c\u975e\u6700\u77ed\u8def\u957f\u5ea6\u3002\uff08\u8fd9\u79cd\u9519\u8bef\u5e94\u8be5\u4e5f\u53ea\u6709\u535a\u4e3b\u8fd9\u6837\u7684\u5c51\u624d\u4f1a\u72af\u4e86\n+ \u5341\u5e74 OI \u4e00\u573a\u7a7a\uff0c\u4e0d\u5f00 `long long` \u89c1\u7956\u5b97\u3002  \n\n\u5269\u4e0b\u7684\u5c31\u662f\u7b80\u5355\u7684 Djikstra \u6a21\u677f\u4e86\u3002  \n\u552f\u4e00\u9700\u8981\u7279\u522b\u8bf4\u660e\u7684\u5c31\u662f\u8def\u5f84\u8bb0\u5f55\u65b9\u5f0f\u3002\u6b64\u5904\u9898\u89e3\u533a\u597d\u591a\u5927\u4f6c\u9009\u62e9\u7528 `vector` \u5b58\uff0c\u4f46\u662f\u8fd9\u4e2a\u5c51\u89c9\u5f97 `vector` \u592a\u6162\uff0c\u5c31\u81ea\u5df1\u5199\u4e86\u4e2a DFS\uff1a  \n```cpp\nint prpt[100005];\nvoid putans(int id){\n\tif(id) putans(prpt[id]),printf(\"%d \",id);\n}\n```\n\u597d\u7684\uff0c\u53ef\u4ee5\u4e0a\u4ee3\u7801\u4e86\u3002  \n**\u6ce8\uff1a\u672c\u9898\u4e2d\u4f7f\u7528\u7684\u5b58\u56fe\u65b9\u6cd5\u4e3a\u94fe\u5f0f\u524d\u5411\u661f\uff0c\u4e0d\u4f1a\u4f7f\u7528\u7684\u8bfb\u8005\u8bf7\u81ea\u884c\u67e5\u627e\u6709\u5173\u8d44\u6599\u3002**  \n```cpp\n//Luogu-CF20C Solution\n//Luogu @Enterpr1se (Userid 363523)\n//@_Qijia (Userid 363524) AK IOI!\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#define regll register long long\n#define regint register int\n#define regshort register short\n#define _Qijia using\n#define AK namespace\n#define IOI std\n_Qijia AK IOI;\nint n,m,u,v,ecnt/*\u524d\u5411\u661f\u53d8\u91cf*/,last[100005]/*\u524d\u5411\u661f\u53d8\u91cf*/,prpt[100005]/*\u8bb0\u5f55\u8def\u5f84\u4e0a\u7684\u70b9*/;\n/*\u4ee4\u4eba\u60f3\u8fb1\u9a82\u51fa\u9898\u4eba\u7684*/long long w,dist[100005],temp;\nbool vis[100005]; \nstruct edge{\n\tint to,prev;\n\tlong long wei;\n} fig[200005];\nstruct node{\n\tint id;\n\tlong long di;\n\tconst operator < (const node &tocomp) const {\n\t\treturn di>tocomp.di;\n\t}\n} curr;\npriority_queue<node> pqu;\ninline void add(int s,int e,int w){\n\t++ecnt;\n\tfig[ecnt]={e,last[s],w};\n\tlast[s]=ecnt;\n\t++ecnt;\n\tfig[ecnt]={s,last[e],w};\n\tlast[e]=ecnt;\n\treturn;\n}\nvoid putans(int id){\n\tif(id) putans(prpt[id]),printf(\"%d \",id);\n}\nsigned main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(regint i=1;i<=m;++i) scanf(\"%d%d%lld\",&u,&v,&w),add(u,v,w);\n\tpqu.push({1,0});\n\tmemset(dist,0x3f,sizeof(dist));\n\tdist[1]=0;\n\t//Dijkstra\u672c\u4f53\u7684\u5faa\u73af \n\twhile(pqu.size()){\n\t\tcurr=pqu.top();\n\t\tpqu.pop();\n\t\tvis[curr.id]=true;\n\t\tfor(regint i=last[curr.id];i;i=fig[i].prev){\n\t\t\tif(vis[fig[i].to]) continue;\n\t\t\ttemp=curr.di+fig[i].wei;\n\t\t\tif(temp<dist[fig[i].to]){\n\t\t\t\tdist[fig[i].to]=temp;\n\t\t\t\tpqu.push({fig[i].to,temp});\n\t\t\t\tprpt[fig[i].to]=curr.id;//\u672c\u9898\u9700\u8981\u52a0\u5165\u7684\u7279\u6b8a\u5904\u7406\uff1a\u8bb0\u5f55\u4e0a\u4e00\u4e2a\u70b9 \n\t\t\t}\n\t\t}\n\t}\n\tif(prpt[n]/*\u5224\u65ad\u662f\u5426\u6709\u89e3*/) putans(n);\n\telse putchar('-'),putchar('1');\n\treturn 0;\n}\n```\n$\\mathtt{Thanks}\\text{ }\\mathtt{for}\\text{ }\\mathtt{reading.}$",
        "postTime": 1625705822,
        "uid": 363523,
        "name": "Enterpr1se",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF20C\u3010Dijkstra?\u3011"
    }
]