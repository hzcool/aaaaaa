[
    {
        "content": "\u4f20\u9001\u95e8 [\u6d1b\u8c37](https://www.luogu.com.cn/problem/CF158C) [cf](http://codeforces.com/problemset/problem/158/C)\n### \u9898\u5916\u8bdd\n\u300a\u5173\u4e8e\u6211\u6ca1\u770b\u89c1\u201c\u8def\u5f84\u6709\u76f8\u5bf9\u8def\u5f84\u548c\u7edd\u5bf9\u8def\u5f84\u201d\u800c\u8ba4\u4e3a\u52a0\u4e0a ``/`` \u662f\u672c\u9898\u7684\u96be\u70b9\u4e4b\u4e00\u8fd9\u4ef6\u4e8b\u300b\n## \u9898\u610f\n\u4f60\u9700\u8981\u5b9e\u73b0\u7c7b\u4f3c $\\texttt{Unix}$ / $\\texttt{Linux}$ \u4e0b\u7684 $\\texttt{cd}$ \u548c $\\texttt{pwd}$ \u547d\u4ee4\u3002\n\n\u4e00\u5f00\u59cb\uff0c\u7528\u6237\u5904\u4e8e\u6839\u76ee\u5f55 ``/`` \u4e0b\u3002\n\n\u5bf9\u4e8e $\\texttt{cd}$ \u547d\u4ee4\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u8df3\u8f6c\u5230\u67d0\u4e2a\u8def\u5f84\u3002\u8def\u5f84\u6709\u76f8\u5bf9\u8def\u5f84\u548c\u7edd\u5bf9\u8def\u5f84\uff0c\u76f8\u5bf9\u8def\u5f84\u4ee5\u6587\u4ef6\u5939\u540d\u5f00\u5934\uff0c\u8868\u793a\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u5939\uff0c\u7edd\u5bf9\u8def\u5f84\u4ee5 ``/`` \u5f00\u5934\uff0c\u8868\u793a\u6839\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u5939\u3002\u540c\u65f6\uff0c``..`` \u6587\u4ef6\u5939\u8868\u793a\u4e0a\u4e00\u5c42\u6587\u4ef6\u5939\u3002\n\n\u5bf9\u4e8e $\\texttt{pwd}$ \u547d\u4ee4\uff0c\u4f60\u9700\u8981\u8f93\u51fa\u5f53\u524d\u6240\u5728\u7684\u7edd\u5bf9\u8def\u5f84\u3002\n\n\u4fdd\u8bc1\u8f93\u5165\u6570\u636e\u4e2d\u6240\u6709\u7684\u6587\u4ef6\u5939\u90fd\u5b58\u5728\u3002\n\n## \u89e3\u6cd5\n\u8fd9\u662f\u4e00\u9053\u660e\u6446\u7740\u7684\u6a21\u62df\u9898\u3002\u8003\u8651\u7528\u4e00\u4e2a\u5b57\u7b26\u4e32 ``s`` \u6765\u5b58\u50a8\u5f53\u524d\u6587\u4ef6\u5939\u3002\n\n\u6bcf\u6b21\u8f93\u5165\u5206\u4e24\u79cd\u60c5\u51b5\uff1a\n\n1\u3001$\\texttt{pwd}$\uff1a\u76f4\u63a5\u8f93\u51fa\u5f53\u524d\u7684 ``s`` \u52a0\u4e0a\u4e00\u4e2a ``/``\u3002\n\n2\u3001$\\texttt{cd}$\uff1a\u4f9d\u6b21\u5faa\u73af\u627e\u51fa\u6bcf\u4e00\u7ec4\u5f00\u5934\u4e3a ``/`` \u7684\u5b57\u7b26\u4e32\uff0c\u5982\u679c\u662f ``/..`` \uff0c\u5219\u901a\u8fc7\u4e00\u4e2a\u51fd\u6570\u6765\u56de\u5230\u4e0a\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u5426\u5219\u5c06\u8fd9\u4e2a\u5b57\u7b26\u4e32\u52a0\u5230 ``s`` \u540e\u9762\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f $\\texttt{cd}$ \u540e\u8f93\u5165\u7684\u8def\u5f84\u662f\u76f8\u5bf9\u8def\u5f84\u8fd8\u662f\u7edd\u5bf9\u8def\u5f84\uff08\u672c\u849f\u84bb\u8dcc\u5728\u6b64\u5751\uff09\u3002\n\n## \u4ee3\u7801\n\u4ee3\u7801\u4e3b\u8981\u90e8\u5206\uff1a\n```cpp\nint n;\nstring s;\nvoid del(){  //\u56de\u5230\u4e0a\u4e00\u4e2a\u6587\u4ef6\u5939\n\tif(!s.size())return;\n\tint x=s.size();\n\twhile(x>0&&s[x]!='/')x--;\n\ts=s.substr(0,x);\n}\nvoid Main() {\n\tstring t;\n\tcin>>t;\n\tif(t==\"pwd\")cout<<s<<'/'<<endl;  //\u5206\u7c7b\u8ba8\u8bba\n\telse{\n\t\tcin>>t;\n\t\tif(t[0]!='/')t='/'+t;\n\t\telse s=\"\";  //\u7edd\u5bf9\u8def\u5f84\uff0c\u5c06\u539f\u5b57\u7b26\u4e32\u6e05\u7a7a\n\t\tif(t[t.size()-1]!='/')t+=\"/\";  //\u672b\u5c3e\u52a0\u4e0a/\uff0c\u9632\u6b62\u6f0f\u7b97\n\t\tstring st=\"/\";\n\t\tfor(int i=1;i<(int)t.size();i++){\n\t\t\tif(t[i]=='/'){  //\u5206\u79bb\u51fa\u6bcf\u4e00\u4e2a\u5c0f\u8def\u5f84\n\t\t\t\tif(st==\"/..\")del();  //\u5224\u65ad\u662f\u5426\u662f\u8fd4\u56de\n\t\t\t\telse s+=st;\n\t\t\t\tst=\"\";\n\t\t\t}\n\t\t\tst+=t[i];\n\t\t}\n\t}\n}\nvoid TC() {\n\tull t = 1;\n\tcin>>t;\n\twhile ( t-- ) {\n\t\tMain();\n\t}\n}\n```",
        "postTime": 1646493067,
        "uid": 447479,
        "name": "IvanZhang2009",
        "ccfLevel": 7,
        "title": "CF158C Cd and pwd commands\u9898\u89e3"
    },
    {
        "content": "\u5927\u6a21\u62df\uff0c\u4f46\u662f\u6709\u5751\u70b9\u3002\n\n## \u601d\u8def\n\u4f9d\u7167\u9898\u610f\u6a21\u62df\u3002\u7528\u4e00\u4e2a\u5b57\u7b26\u4e32 $out$ \u8bb0\u5f55\u5728\u8fdb\u884c\u4e86 $i$ \u6b21\u64cd\u4f5c\u540e\u5982\u679c\u8981\u8f93\u51fa\u8f93\u51fa\u7684\u4e1c\u897f\uff0c\u5b57\u7b26\u4e32 $in$ \u548c $s$ \u6765\u5206\u522b\u8bb0\u5f55\u8f93\u5165\u7684\u64cd\u4f5c\u53ca\u64cd\u4f5c\u7c7b\u578b\u3002\n\n\u7531\u4e8e\u8f93\u51fa\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e00\u5b9a\u662f `/`\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u5c06 $out$ \u7684\u521d\u59cb\u5316\u5b9a\u4e3a `out = \"/\"`\u3002\u8fd9\u6837\u5b50\u53ef\u4ee5\u7701\u53bb\u5f88\u591a\u9ebb\u70e6\u3002\u53c8\u56e0\u4e3a\u8f93\u51fa\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u4e5f\u4e00\u5b9a\u662f `/`\uff0c\u800c\u8f93\u5165\u7684\u5b57\u7b26\u4e32 $in$ \u6700\u540e\u4e00\u5b9a\u4e0d\u5e26 `/`\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u5728\u540e\u9762\u52a0\u4e0a\u4e00\u4e2a `/`\uff0c\u50cf `in = in + '/'` \u8fd9\u6837\u3002\n\n\u5f53\u7136\uff0c\u8981\u7279\u5224\u7edd\u5bf9\u8def\u5f84\u7684\u60c5\u51b5\uff0c\u8fd9\u4e2a\u65f6\u5019\u7684 $in$ \u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5c31\u662f `/`\uff0c\u6ca1\u5fc5\u8981\u518d\u52a0\u3002**\u5373\u4f7f\u662f\u7edd\u5bf9\u8def\u5f84\u4e5f\u4f1a\u6709\u5220\u9664\u64cd\u4f5c\uff0c\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\uff01\uff01\uff01**\n\n\u904d\u5386\u4e00\u904d\u8f93\u5165\u7684 $in$\uff0c\u7528\u4e00\u4e2a\u53d8\u91cf $last$ \u6765\u8bb0\u5f55\u5bf9\u4e8e\u5f53\u524d`in[i] = '/'` \u65f6\u7684\u4e0a\u4e00\u4e2a `/` \u7684\u4f4d\u7f6e\u3002\u8c03\u7528\u51fd\u6570 `check(last , i)` \u6765\u64cd\u4f5c\u3002\n\n\u4f20\u5165\u7684\u5176\u5b9e\u5c31\u662f\u4e24\u4e2a `/` \u7684\u4f4d\u7f6e\uff0c\u6bcf\u6b21\u90fd\u5bf9\u8fd9\u4e24\u4e2a\u4f4d\u7f6e\u95f4\u7684\u5b57\u7b26\u4e32\u8fdb\u884c\u64cd\u4f5c\u3002\u7279\u5224\u5f53\u957f\u5ea6\u4e3a\u4e8c\u65f6\u662f\u5426\u662f\u5220\u9664\u64cd\u4f5c\uff0c\u662f\u7684\u8bdd\u5c31\u8c03\u7528\u51fd\u6570 `del()`\u3002\u4e0d\u662f\u7684\u8bdd\u5c31\u5c06\u8fd9\u4e00\u6bb5\u52a0\u5165\u5230 $out$ \u4e2d\uff0c\u8c03\u7528\u51fd\u6570 `add(l , r)`\uff0c\u5176\u4e2d $l$ \u4e3a\u4e0a\u9762\u7684 $last$\uff0c$r$ \u4e3a\u4e0a\u9762\u7684 $i$\u3002\n\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#include<iostream>\n#include<cstdio>\n#include<string>\n#include<ctime>\n#include<cstring>\n#include<algorithm>\n#include<climits>\n#include<queue>\n#include<map>\n#include<set>\n#include<sstream>\n#include<cassert>\n#include<stdio.h>\n#define ll long long\n#define inf 0x3f3f3f3f\n#define fr(i , a , b) for(ll i = a ; i <= b ; ++i)\n#define fo(i , a , b) for(ll i = a ; i >= b ; --i)\n#pragma comment(linker , \"/stack : 200000000\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\nusing namespace std;\ninline char gchar()\n{\n    static char buf[1000000] , *p1 = buf , *p2 = buf;\n    return p1 == p2 && (p2 = (p1 = buf) + fread(buf , 1 , 1000000 , stdin) , p1 == p2) ? EOF : *p1++;\n}\ninline ll read()\n{\n    ll x = 0 , f = 1;\n    char ch = getchar();\n    while(ch < '0' || ch > '9')\n\t  {\n        if(ch == '-')\n        {\n        \tf = -1;\n\t\t}\n        ch = getchar();\n    }\n    while(ch >= '0' && ch <= '9')\n\t  {\n        x = (x << 1) + (x << 3) + (ch ^ 48);\n        ch = getchar();\n    }\n    return x * f;\n}\nll n;\nstring s , in , out;\ninline void del()\n{\n    ll len_out = out.size();\n    if(len_out == 1)\n    {\n        return ;\n    }\n    ll L = 0 , R = 0;\n    fo(i , len_out - 1 , 0)\n    {\n        if(out[i] == '/' && R == 0)\n        {\n            R = i;\n            continue;\n        }\n        if(out[i] == '/' && R != 0)\n        {\n            L = i;\n            break;\n        }\n    }\n    // printf(\"del : L = %lld R =  %lld\\n\" , L , R);\n    out.erase(L + 1 , R);//\u4eceL + 1\u5f00\u59cb\u5c31\u4e0d\u9700\u8981\u52a0\u56de\u2018/\u2019\u4e86\n    // cout << \"out = \" << out << endl;\n}\ninline void add(ll L , ll R)\n{\n    string kkk;\n    fr(i , L + 1 , R)\n    {\n        kkk += in[i];\n    }\n    out += kkk;\n    // cout << \"out = \" << out << endl;\n}\ninline void check(ll l , ll r)\n{\n    if(r - l - 1 == 2)\n    {\n        if(in[l + 1] == '.' && in[r - 1] == '.')\n        {\n            del();\n        }\n        else\n        {\n            add(l , r);\n        }\n    }\n    else\n    {\n        add(l , r);\n    }\n}\nsigned main()\n{\n    n  = read();\n    out = \"/\";\n    while(n--)\n    {\n        cin >> s;\n        if(s == \"pwd\")\n        {\n            cout << out;\n            puts(\"\");\n        }\n        else if(s == \"cd\")\n        {\n            cin >> in;\n            in = in + '/';\n            if(in[0] == '/')\n            {\n                out = \"/\";\n            }\n            else\n            {\n                in = '/' + in;\n            }\n            ll len = in.size() , last = 0;\n            fr(i , 0 , len - 1)\n            {\n                if(in[i] == '/')\n                {\n                    // cout << in;\n                    // puts(\"\");\n                    // printf(\"check : l = %lld r =  %lld\\n\" , last , i);\n                    check(last , i);\n                    last = i;\n                }\n            }\n        }\n    }\n    system(\"pause\");\n    return 0;\n}\n```\n## \u603b\u7ed3\n\u5176\u5b9e\u6a21\u62df\u65b9\u6cd5\u6709\u5f88\u591a\uff0c\u8fd9\u4e2a\u662f\u6700\u6734\u7d20\u7684\u4e00\u79cd\uff0c\u4e00\u5f00\u59cb\u601d\u8def\u5c31\u8fd9\u6837\u60f3\uff0c\u6ca1\u6709\u4f18\u5316\u5c31\u4ea4\u4e86\u3002",
        "postTime": 1683797239,
        "uid": 461407,
        "name": "\u6731\u91d1\u5e73",
        "ccfLevel": 0,
        "title": "CF158C Cd and pwd commands \u9898\u89e3"
    },
    {
        "content": "\u4f20\u9001\u95e8\u548c\u9898\u610f @IvanZhang2009 \u5df2\u7ecf\u8bb2\u8fc7\u4e86,\u6211\u5c31\u4e0d\u5728\u8bb2\u4e86\u3002\n\n\u8fd9\u9898\u5176\u5b9e\u8fd8\u53ef\u4ee5\u7528 `stl` \u505a\uff0c\u7528 `vector<string>` \u8bb0\u5f55\u6bcf\u4e00\u5c42\u6587\u4ef6\u5939\uff0c\u628a\u8bfb\u5165\u91cc\u9762\u6bcf\u4e24\u4e2a `/` \u4e4b\u95f4\u7684\u5185\u5bb9\u5206\u79bb\u5f00\uff0c\u7136\u540e\u538b\u8fdb `vector<string>` \u91cc\uff0c\u8f93\u51fa\u7684\u65f6\u5019\u628a\u8fd9\u91cc\u9762\u7684\u8f93\u51fa\u5c31\u597d\u4e86\uff0c\u8f93\u51fa\u7684\u65f6\u5019\u518d\u52a0 `/`\u3002\n\nsb\u7684\u6211\u4e00\u5f00\u59cb `cd` \u5fd8\u8bb0\u6e05\u7a7a vector \u4e86\uff0cWA \u4e86\u4e24\u53d1\u3002\n\n\u4ee3\u7801\n```cpp\nsigned main(){\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\t\n\tcin>>n;\n\twhile(n--){\n\t\tstring op;\n\t\tcin>>op;\n\t\tif(op==\"cd\"){\n\t\t\tstring s;\n\t\t\tcin>>s;\n\t\t\tif(s[0]=='/') v.clear();\n\t\t\ts+='/';\n\t\t\tif(s[0]=='/') s.erase(s.begin());\n\t\t\tint i=0,j=0;\n\t\t\tfor(i=0;i<s.size();i++){\n\t\t\t\tstring t=\"\";\n\t\t\t\tfor(j=i;j<s.size();j++){\n\t\t\t\t\tif(s[j]=='/') break;\n\t\t\t\t\tt+=s[j];\n\t\t\t\t}\n\t\t\t\tif(t==\"..\") v.pop_back();\n\t\t\t\telse v.push_back(t);\n\t\t\t\ti=j;\n\t\t\t}\n\t\t}\n\t\tif(op==\"pwd\"){\n\t\t\tcout<<'/';\n\t\t\trep(i,v.size()){\n\t\t\t\tcout<<v[i]<<'/';\n\t\t\t}\n\t\t\tcout<<endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1659008584,
        "uid": 367830,
        "name": "JerryMao",
        "ccfLevel": 0,
        "title": "CF 158C Cd and pwd commands"
    },
    {
        "content": "\u8bb0\u5f55\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4 $a$ \u5b58\u50a8\u5f53\u524d\u8def\u5f84\uff0c\u5bf9\u4e8e `cd` \u547d\u4ee4\uff0c\u4f7f\u7528 `split('/')` \u5206\u5272\u5e76\u4f9d\u6b21\u5904\u7406\u6bcf\u4e00\u90e8\u5206\uff0c\u9047\u5230 `..` \u5c31\u5220\u9664 $a$ \u7684\u672b\u5c3e\u5143\u7d20\uff0c\u5426\u5219\u5c06\u76ee\u5f55\u540d\u6dfb\u52a0\u5230 $a$ \u7684\u672b\u5c3e\u3002\u6ce8\u610f\u5982\u679c\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84\u8868\u793a\u5e94\u5f53\u5148\u6e05\u7a7a $a$\u3002  \n\n```python\na = []\nfor _ in range(int(input())):\n    s = input().split(' ')\n    if len(s) == 1:\n        for s in a:\n            print(f'/{s}', end='')\n        print('/')\n    else:\n        s = s[1]\n        if s[0] == '/': # \u7edd\u5bf9\u8def\u5f84\n            a = []\n            s = s[1:]\n        for t in s.split('/'):\n            if t == '..':\n                a.pop()\n            else:\n                a += t,\n```",
        "postTime": 1682611610,
        "uid": 84282,
        "name": "andyli",
        "ccfLevel": 7,
        "title": "CF158C Cd and pwd commands \u9898\u89e3"
    }
]