[
    {
        "content": "## Problem\n\n\u9898\u76ee\u5df2\u7ecf\u8bf4\u7684\u5f88\u6e05\u695a\u4e86\uff0c\u53ea\u4e0d\u8fc7\u8fd8\u6709\u8981\u6ce8\u610f\u7684\u5c31\u662f\u8fd9\u4e2a\u201c\u53f3\u4e0a\u65b9\u201d\u6307\u7684\u662f\u4e25\u683c\u5927\u4e8e\uff0c\u4e5f\u5c31\u662f $x_1>x_2$\uff0c$y_1>y_2$ \u3002\n\n## Solution\n\n\u9996\u5148\u770b\u5230\u503c\u57df\u7684\u6570\u636e\u8303\u56f4\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u5148\u79bb\u6563\u5316\u4e00\u4e0b\u3002\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6a2a\u5750\u6807\u4e3a $1,2,3,4...$ \u65f6\u7684\u7eb5\u5750\u6807\u6700\u5927\u503c\u3002\uff08\u4e5f\u5c31\u662f\u6bcf\u4e00\u4e2a\u6a2a\u5750\u6807\u4e0a\u7684\u6700\u5927\u7eb5\u5750\u6807\uff0c\u5728\u8fd9\u4e2a\u57fa\u7840\u4e0a\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6700\u5927\u503c\u3002\uff09\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6a2a\u5750\u6807\u53ef\u4ee5\u5f00\u4e00\u4e2a set \u7ef4\u62a4\u8fd9\u4e2a\u5750\u6807\u5185\u90e8\u7684\u70b9\u3002\n\n\u90a3\u4e48\u9898\u76ee\u4e0a\u7684\u64cd\u4f5c\u5c31\u5f88\u597d\u5b9e\u73b0\u4e86\uff0c\u6dfb\u52a0\u64cd\u4f5c\u5c31\u662f\u5148\u770b\u770b\u53ef\u4e0d\u53ef\u4ee5\u53d6\u4ee3\u5f53\u524d\u7684\u90a3\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u6700\u5927\u503c\uff0c\u7136\u540e\u518d\u63d2\u5165\u8fdb set \u91cc\u3002\n\n\u5220\u9664\u64cd\u4f5c\u5c31\u662f\u5148\u5728\u5bf9\u5e94\u6a2a\u5750\u6807\u7684 set \u91cc\u5220\u9664\uff0c\u7136\u540e\u518d\u7528\u5f53\u524d set \u91cc\u7684\u6700\u5927\u503c\u653e\u8fdb\u7ebf\u6bb5\u6811\u91cc\uff0c\u8986\u76d6\u6389\u539f\u6765\u7684\u90a3\u4e2a\u3002\n\n\u6700\u540e \u67e5\u627e\u64cd\u4f5c\u5c31\u662f\u5148\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\uff0c\u627e\u5230\u6700\u5de6\u8fb9\u7684\uff0c\u4e14\u6a2a\u5750\u6807\u5927\u4e8e $x$ \uff0c\u503c\u5927\u4e8e $y$ \u7684\u4f4d\u7f6e\u3002\n\n\uff08\u6ce8\u610f\u8fd9\u91cc\u7684\u503c\u6307\u7684\u662f\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u90a3\u4e2a Max \uff0c\u56e0\u4e3a\u6211\u4eec\u8fd9\u91cc\u53ea\u662f\u770b\u5728\u8fd9\u4e2a\u5750\u6807\u4e0a\u6709\u6ca1\u6709\u89e3\uff0c\u81f3\u4e8e\u9898\u76ee\u8981\u6c42\u7684\u8fd8\u8981 $y$ \u5c3d\u53ef\u80fd\u5c0f\uff0c\u6211\u4eec\u4e00\u4f1a\u5148\u5b9a\u4f4d\u6a2a\u5750\u6807\uff0c\u518d\u5728\u8fd9\u4e2a\u6a2a\u5750\u6807\u7684 set \u4e0a\u627e\u3002\uff09\n\n\u4e8e\u662f\u6211\u4eec\u518d\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u4e0a\u7684 set \u5f53\u4e2d\u4e8c\u5206\u627e\u5230\u7b2c\u4e00\u4e2a\u5927\u4e8e $y$ \u7684\u503c\uff0c\u518d\u6620\u5c04\u56de\u539f\u6570\u7ec4\uff08\u56e0\u4e3a\u79bb\u6563\u5316\u4e86\u7684\uff09\uff0c\u5c31\u662f\u7b54\u6848\u4e86\u3002\n\n## Code\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntemplate <typename T>\ninline void read(T &x){\n    x=0;char ch=getchar();bool f=false;\n    while(!isdigit(ch)){if(ch=='-'){f=true;}ch=getchar();}\n    while(isdigit(ch)){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n    x=f?-x:x;\n    return ;\n}\ntemplate <typename T>\ninline void write(T x){\n    if(x<0) putchar('-'),x=-x;\n    if(x>9) write(x/10);\n    putchar(x%10^48);\n    return ;\n}\nconst int N=4e5+5; \n#define ll long long\nstruct Query{int op,x,y;}Q[N];\nint n,m,b[N],cnt,Max[N<<2];\nset<int> ST[N];\nvoid Pushup(int x){Max[x]=max(Max[x<<1],Max[x<<1|1]);return ;}\nvoid Modify(int x,int l,int r,int pos,int v){\n    if(l==r){Max[x]=max(Max[x],v);return ;}\n    int mid=l+r>>1;\n    if(pos<=mid) Modify(x<<1,l,mid,pos,v);\n    else Modify(x<<1|1,mid+1,r,pos,v);\n    Pushup(x);\n    return ;\n} \nvoid Change(int x,int l,int r,int pos,int v){\n    if(l==r){Max[x]=v;return ;}\n    int mid=l+r>>1;\n    if(pos<=mid) Change(x<<1,l,mid,pos,v);\n    else Change(x<<1|1,mid+1,r,pos,v);\n    Pushup(x);\n    return ;\n} \nint QueryPos(int x,int l,int r,int X,int Y){\n    if(l==r){\n        if(Max[x]>Y) return l;\n        return -1;\n    }\n    int mid=l+r>>1,res=-1;\n    if(X<=mid&&Max[x<<1]>Y) res=QueryPos(x<<1,l,mid,X,Y);\n    if(~res) return res;\n    if(Max[x<<1|1]>Y) return QueryPos(x<<1|1,mid+1,r,X,Y); \n    return -1;\n}\nint main(){\n    read(n);\n    for(int i=1;i<=n;i++){\n        char op[10];int x,y;\n        scanf(\"%s\",op);read(x),read(y);\n        if(op[0]=='a') Q[i].op=1,Q[i].x=x,Q[i].y=y; \n        else if(op[0]=='r') Q[i].op=2,Q[i].x=x,Q[i].y=y; \n        else Q[i].op=3,Q[i].x=x,Q[i].y=y; \n        b[++cnt]=x,b[++cnt]=y;\n    }\n    sort(b+1,b+cnt+1);\n    int idx=unique(b+1,b+cnt+1)-b-1;\n    for(int i=1;i<=n;i++) Q[i].x=lower_bound(b+1,b+idx+1,Q[i].x)-b,Q[i].y=lower_bound(b+1,b+idx+1,Q[i].y)-b;\n    for(int i=1;i<=n;i++){\n        if(Q[i].op==1) ST[Q[i].x].insert(Q[i].y),Modify(1,1,idx,Q[i].x,Q[i].y);\n        else if(Q[i].op==2){\n        \tST[Q[i].x].erase(ST[Q[i].x].find(Q[i].y));\n        \tif(ST[Q[i].x].empty()){\n        \t\tChange(1,1,idx,Q[i].x,0);\n        \t\tcontinue;\n        \t}\n        \tChange(1,1,idx,Q[i].x,*ST[Q[i].x].rbegin());\n        }\n        else{\n            int Pos=QueryPos(1,1,idx,Q[i].x+1,Q[i].y);\n            if(Pos==-1) puts(\"-1\");\n            else write(b[Pos]),putchar(' '),write(b[*ST[Pos].upper_bound(Q[i].y)]),putchar('\\n');\n        }\n    }\n    return 0;\n}\n```\n",
        "postTime": 1615464434,
        "uid": 130387,
        "name": "_Anchor",
        "ccfLevel": 0,
        "title": "\u9898\u89e3CF19D Points"
    },
    {
        "content": "## Solution\n\n$x,y$\u8fd9\u4e48\u5927\uff0c\u5148\u7ed9\u4ed6\u79bb\u6563\u5316\u518d\u8bf4\u3002\n\n\u8003\u8651\u4e00\u4e2a\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\u4e0a\uff0c\u5bf9\u6bcf\u4e2a\u6a2a\u5750\u6807$x$\u4efb\u53d6**\u4e00\u4e2a**$y$\u7ec4\u6210\u70b9$(x,y)$\uff0c\u662f\u4e0e\u4e00\u4e2a\u6570\u5217$A$\u6709\u4e00\u4e00\u5bf9\u5e94\u5173\u7cfb\u7684\u3002\u5373\uff0c\u70b9$(x,y)$\u5bf9\u5e94\u5e8f\u5217$A_x=y$\u3002\n\n\u8003\u8651\u5bf9\u4e8e\u4e00\u6b21\u67e5\u8be2\uff0c\u4e00\u5217\u80fd\u505a\u4e3a\u7b54\u6848\u7684\u5fc5\u8981\u6761\u4ef6\u662f\u8fd9\u4e00\u5217\u4e0a$y$\u8f74\u6700\u5927\u7684\u70b9\u5927\u4e8e\u88ab\u67e5\u8be2\u7684\u70b9\u7684\u7eb5\u5750\u6807\u3002\u4e8e\u662f\u5c31\u60f3\u5230\u5c06\u6bcf\u4e2a$x$\u5bf9\u5e94\u7684\u6700\u5927\u7684$y$\u5199\u5165\u5e8f\u5217\u3002\u4e8e\u662f\u6bcf\u6b21\u67e5\u8be2\u65f6\u5728\u5e8f\u5217\u4e0a\u67e5\u8be2\u5927\u4e8e$x$\u7684\u540e\u7f00\u4e0a\u7b2c\u4e00\u4e2a\u5927\u4e8e$y$\u7684\u4f4d\u7f6e\u7684\u4e0b\u6807\u3002\u8fd9\u4e2a\u663e\u7136\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u641e\u5b9a\u3002\u8003\u8651\u5269\u4e0b\u7684$y$\u600e\u4e48\u8bb0\u5f55\u3002\u4f7f\u7528\u7ebf\u6bb5\u6811\u53ef\u4ee5\u67e5\u8be2\u51fa\u5e94\u8be5\u88ab\u9009\u62e9\u7684\u6a2a\u5750\u6807\u3002\u5219\u7eb5\u5750\u6807\u5c31\u662f\u8fd9\u4e00\u5217\u4e0a\u5927\u4e8e$y$\u7684\u7b2c\u4e00\u4e2a\u6570\u3002\u4e8e\u662f\u5bf9\u4e8e\u6bcf\u4e00\u5217\u5f00\u4e00\u4e2a$set$\uff0c\u7ef4\u62a4\u8fd9\u4e00\u5217\u4e0a\u6240\u6709\u7684$y$\uff0c\u67e5\u8be2\u65f6\u76f4\u63a5upper_bound\u5373\u53ef\u3002\n\n\u8003\u8651\u7ebf\u6bb5\u6811\u7684\u5199\u6cd5\u3002\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u7684\u4e00\u4e2a\u533a\u95f4\uff0c\u7ef4\u62a4\u8fd9\u6bb5\u533a\u95f4\u4e2d\u6700\u5927\u503c\u7684\u4e0b\u6807\u662f\u591a\u5c11\u3002\u67e5\u8be2\u65f6\uff0c\u5148\u9012\u5f52\u67e5\u8be2\u5de6\u533a\u95f4\uff0c\u5982\u679c\u5de6\u533a\u95f4\u4e0d\u5408\u6cd5\u5219\u9012\u5f52\u67e5\u8be2\u53f3\u533a\u95f4\u3002\u4e00\u4e2a\u533a\u95f4\u4e0d\u5408\u6cd5\u5f53\u4e14\u4ec5\u5f53\u4ed6\u4e0e\u88ab\u67e5\u8be2\u7684\u533a\u95f4\u65e0\u4ea4\u6216\u4ed6\u7684\u6700\u5927\u503c\u5c0f\u4e8e\u88ab\u67e5\u8be2\u7684\u503c$k$\u3002\n\n\u8003\u8651\u8fd9\u4e48\u505a\u7684\u590d\u6742\u5ea6\uff1a\u56e0\u4e3a\u4e00\u4e2a\u533a\u95f4\u4f1a\u88ab\u7ebf\u6bb5\u6811\u5212\u5206\u6210$O(log(len))$\u4e2a\u7ebf\u6bb5\u3002\u53d1\u73b0\u8fd9\u4e9b\u904d\u5386\u8fd9\u4e9b\u7ebf\u6bb5\u662f$O(log)$\u7684\uff0c\u4e8e\u662f\u4e00\u6b21\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u662f$O(log)$\u7684\u3002\u603b\u590d\u6742\u5ea6$O(nlogn)$\n\n## Code\n\n```cpp\n#include<set>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#ifdef ONLINE_JUDGE\n#define putchar(o)\\\nputs(\"I am a cheater!\")\n#endif\n#define rg register\n#define ci const int\n#define cl const long long\n\ntypedef long long int ll;\n\ntemplate <typename T>\ninline void qr(T &x) {\n\trg char ch=getchar(),lst=' ';\n\twhile((ch > '9') || (ch < '0')) lst=ch,ch=getchar();\n\twhile((ch >= '0') && (ch <= '9')) x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n\tif(lst == '-') x=-x;\n}\n\nnamespace IO {\n\tchar buf[120];\n}\n\ntemplate <typename T>\ninline void qw(T x,const char aft,const bool pt) {\n\tif(x < 0) {x=-x,putchar('-');}\n\trg int top=0;\n\tdo {IO::buf[++top]=x%10+'0';} while(x/=10);\n\twhile(top) putchar(IO::buf[top--]);\n\tif(pt) putchar(aft);\n}\n\ntemplate <typename T>\ninline T mmax(const T a,const T b) {return a > b ? a : b;}\ntemplate <typename T>\ninline T mmin(const T a,const T b) {return a < b ? a : b;}\ntemplate <typename T>\ninline T mabs(const T a) {return a < 0 ? -a : a;}\n\ntemplate <typename T>\ninline void mswap(T &_a,T &_b) {\n\tT _temp=_a;_a=_b;_b=_temp;\n}\n\nconst int maxn = 200010;\nconst int maxt = 1600010;\n\nstruct M {\n\tint opt,x,y;\n};\nM MU[maxn];\n\nint n,tcnt,num;\nint temp[maxt],CU[maxt];\nstd::set<int>ss[maxt];\n\nstruct Tree {\n\tint v;\n\tinline void update(const Tree &_ls,const Tree _rs) {\n\t\tif(!(~(_ls.v))) this->v = _rs.v;\n\t\telse if(!(~(_rs.v))) this->v = _ls.v;\n\t\telse {\n\t\t\tif(CU[_ls.v] >= CU[_rs.v]) this->v=_ls.v;\n\t\t\telse this->v=_rs.v;\n\t\t}\n\t}\n};\nTree tree[maxt];\n\nvoid init_hash();\nvoid change(ci,ci,ci,ci);\nint ask(ci,ci,ci,ci,ci);\n\nint main() {\n\tqr(n);\n\tfor(rg int i=1;i<=n;++i) {\n\t\tM &now=MU[i];\n\t\trg char ch=getchar();\n\t\twhile((ch > 'z') || (ch < 'a')) ch=getchar();\n\t\tif(ch == 'a') now.opt=1;\n\t\telse if(ch == 'r') now.opt=3;\n\t\telse now.opt=2;\n\t\tqr(now.x);qr(now.y);\n\t\ttemp[++tcnt]=now.x;temp[++tcnt]=now.y;\n\t}\n\tinit_hash();\n\tmemset(tree,-1,sizeof tree);\n\tfor(rg int i=1;i<=n;++i) {\n\t\tM &now=MU[i];\n\t\tswitch(now.opt) {\n\t\t\tcase 1: {\n\t\t\t\tss[now.x].insert(now.y);\n\t\t\t\tif(now.y == *(--ss[now.x].end())) {CU[now.x]=now.y;change(1,num,1,MU[i].x);}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 2: {\n\t\t\t\tint k=ask(1,num,1,now.x+1,now.y);\n\t\t\t\tif(!(~k)) {puts(\"-1\");break;}\n\t\t\t\tqw(temp[k],' ',true);\n\t\t\t\tstd::set<int>::iterator zay = ss[k].upper_bound(now.y);\n\t\t\t\tqw(temp[*zay],'\\n',true);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 3: {\n\t\t\t\tif(now.y == *(--ss[now.x].end())) {\n\t\t\t\t\tss[now.x].erase(now.y);\n\t\t\t\t\tif(ss[now.x].empty()) CU[now.x]=0;\n\t\t\t\t\telse CU[now.x]=*(--ss[now.x].end());\n\t\t\t\t\tchange(1,num,1,MU[i].x);\n\t\t\t\t}\n\t\t\t\telse ss[now.x].erase(now.y);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n\nvoid init_hash() {\n\tstd::sort(temp+1,temp+1+tcnt);s\n\tint *ed=std::unique(temp+1,temp+1+tcnt);\n\tnum=ed-temp-1;\n\tfor(rg int i=1;i<=n;++i) {\n\t\tMU[i].x=std::lower_bound(temp+1,ed,MU[i].x)-temp;\n\t\tMU[i].y=std::lower_bound(temp+1,ed,MU[i].y)-temp;\n\t}\n}\n\nvoid change(ci l,ci r,ci p,ci aim) {\n\tif(l > r) return;\n\tif((l > aim) || (r < aim)) return;\n\tif(l == r) {tree[p].v=l;return;}\n\tint mid=(l+r)>>1,dp=p<<1,ddp=dp|1;\n\tchange(l,mid,dp,aim);change(mid+1,r,ddp,aim);\n\ttree[p].update(tree[dp],tree[ddp]);\n}\n\nint ask(ci l,ci r,ci p,ci aim,ci v) {\n\tif(l > r) return -1;\n\tif(r < aim) return -1;\n\tif(!(~(tree[p].v))) return -1;\n\tif(CU[tree[p].v] <= v) return -1;\n\tif(l == r) return tree[p].v;\n\tint mid=(l+r)>>1,dp=p<<1,ddp=dp|1;\n\tif(mid >= r) return ask(l,mid,dp,aim,v);\n\telse if(mid < l) return ask(mid+1,r,ddp,aim,v);\n\telse {\n\t\tint _ans;\n\t\tif(~(_ans=ask(l,mid,dp,aim,v))) return _ans;\n\t\telse return ask(mid+1,r,ddp,aim,v);\n\t}\n}\n```\n\n## Solution\n\n\u4e00\u4e2a\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\u4e2d\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6a2a\u5750\u6807$x$\u9009\u62e9\u4e00\u4e2a\u7eb5\u5750\u6807$y$\u540e\uff0c\u53ef\u4ee5\u5c06\u4e4b\u4e00\u4e00\u5bf9\u5e94\u5230\u4e00\u4e2a\u4e0b\u6807\u4e3a$x$\uff0c\u503c\u4e3a$y$\u7684\u7ebf\u6bb5\u4e0a\u3002\u5229\u7528\u8fd9\u4e2a\u6027\u8d28\u53ef\u4ee5\u5c06\u5750\u6807\u95ee\u9898\u6539\u4e3a\u5e8f\u5217\u4fee\u6539\u95ee\u9898\u4f7f\u7528\u6570\u636e\u7ed3\u6784\u5904\u7406\u3002",
        "postTime": 1540903808,
        "uid": 65363,
        "name": "\u4e00\u6276\u82cf\u4e00",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF19D \u3010Points\u3011"
    },
    {
        "content": "\n## $Firstly$,\u79bb\u6563\n\u5750\u6807\u8303\u56f4\u592a\u5927\n\n\u8003\u8651\u79bb\u6563\u5316\n\n## $Secondly$,\u7ebf\u6bb5\u6811\n\n**\u5728\u4e00\u4e2a\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\u4e2d\uff0c\u5b9a\u4e49\u4e09\u79cd\u64cd\u4f5c:**\n\n\u7531\u9898\u610f\u7684\u8fd9\u53e5\u8bdd\u975e\u5e38\u5bb9\u6613\u60f3\u5230\u8fd9\u662f\u4e00\u9053\u6570\u636e\u7ed3\u6784\u9898\n\n$1<=n<=2\u22c510^5$$\\Rightarrow$\u6700\u591a\u6709$2\u22c510^5$\u4e2a\u6a2a\u5750\u6807\n\n\u9488\u5bf9\u6bcf\u4e00\u4e2a$x_i$\u5bf9\u5e94\u7684${y_i}_{max}$\u6211\u4eec\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\n\n> 3.find x y :\u627e\u5230\u6240\u6709\u5df2\u6807\u8bb0\u5e76\u5728\uff08x\uff0cy\uff09\u53f3\u4e0a\u65b9\u7684\u70b9\u4e2d,\u6700\u5de6\u8fb9\u7684\u70b9\uff0c\u82e5\u70b9\u4e0d\u552f\u4e00,\u9009\u62e9\u6700\u4e0b\u9762\u7684\u4e00\u4e2a\u70b9; \u5982\u679c\u6ca1\u6709\u7b26\u5408\u8981\u6c42\u7684\u70b9,\u7ed9\u51fa\"-1\",\u5426\u5219\u7ed9\u51fax y.\n\n\u9171\u7d2b,\u6211\u4eec\u53ef\u4ee5\u518d\u4e8c\u5206\u7ebf\u6bb5\u6811$\\Rightarrow$\u5728$logn$\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u5b8c\u6210\u64cd\u4f5c$3$\n\n\u64cd\u4f5c$1$,$2$\u5c31\u53ea\u662f\u66f4\u6539\u67d0\u4e2a$x$\u7684${y_i}_{max}$$\\Rightarrow$\u5355\u70b9\u4fee\u6539\n\n## $Additionally$,$set$\n\n\u4e5f\u8bb8\u4f60\u8ba4\u4e3a\u5230\u8fd9\u5c31\u53ef\u4ee5\u4e86\n\n\u4f46\u662f\u4f60\u5ffd\u7565\u4e86\u4e00\u70b9 : \u64cd\u4f5c$1$,$2$\u662f\u5426\u8be5\u66f4\u6539\n\n\u4e00\u4e9b\u6570\u636e\u7ed3\u6784\u5927\u795e\u8df3\u51fa\u6765\u8bdd\u8bf4 \u9488\u5bf9\u6bcf\u4e00\u4e2a$x$\u4e0a\u7684$y$\u6211\u4eec\u6784\u5efa\u4e00\u4e2a\u5e73\u8861\u6811\n\n\u652f\u6301\u63d2\u5165,\u5220\u9664,\u7ef4\u62a4\u6700\u5927\u503c\n\n\u5176\u5b9e $set$\u5c31\u53ef\u4ee5\u5b8c\u5168\u5b9e\u73b0\u8fd9\u4e9b\u64cd\u4f5c\n\n## $Finally$\n\n\u8fd9\u9053\u9898\u6709\u5361\u5e38\u503e\u5411\n\n\u7ebf\u6bb5\u6811$+$\u5e73\u8861\u6811\u8c8c\u4f3c\u662f\u8fc7\u4e0d\u4e86\u7684\n\n\u7ebf\u6bb5\u6811$+$ $set$ $+$\u76f4\u63a5\u4e8c\u5206\u53ea\u80fd$A51$\u4e2a\u70b9\n\n\u7ebf\u6bb5\u6811$+$ $set$ $+$\u7ebf\u6bb5\u6811\u4e8c\u5206\u624d\u80fd$AC$\n\n## $Code$\n\n\n$AC Code$\n```cpp\n#include <map>\n#include <set>\n#include <cstdio>\n#include <string>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n#define reg register\nconst int MAXN = 2e5 + 10;\nstruct node {\n\tint sit,x,y;\n\tvoid assignedment(int SIT) {\n\t\tsit = SIT;\n\t}\n};\nint T,Right,seg[MAXN];\nset<int> st[MAXN];\nnode option[MAXN];\nmap<string,int> mp;\nmap<int,int> past_x,past_y;\n//\u8bb0\u5f55\u4ee5\u524d\u7684\u503c  \nnamespace pre {\n\tpair<int,int> a[MAXN],b[MAXN];\n\tinline void init() {\n\t\tmp[\"add\"] = 1,mp[\"find\"] = 2,mp[\"remove\"] = 3;\n\t\tscanf(\"%d\",&T);\n\t\tfor(reg int i = 1; i <= T; i++) {\n\t\t\tstring sit;\n\t\t\tcin >> sit;\n\t\t\tint x,y;\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\ta[i] = make_pair(x,i);\n\t\t\tb[i] = make_pair(y,i);\n\t\t\toption[i].assignedment(mp[sit]);\n\t\t}\n\t}\n\tinline void hash() {\n\t\tsort(a + 1,a + 1 + T);\n\t\tsort(b + 1,b + 1 + T);\n\t\tint va,vb;\n\t\tva = vb = 0;\n\t\tfor(reg int i = 1; i <= T; i++) {\n\t\t\tif(i == 1||a[i].first > a[i - 1].first) va++;\n\t\t\tif(i == 1||b[i].first > b[i - 1].first) vb++;\n\t\t\toption[a[i].second].x = va;\n\t\t\tpast_x[va] = a[i].first;\n\t\t\tpast_y[vb] = b[i].first;\n\t\t\toption[b[i].second].y = vb;\n\t\t}\n\t\tRight = va;\n\t}\n\t//\u8f93\u5165\u53ca\u79bb\u6563\u5316 \n}\nnamespace segment {\n\tint tree[MAXN << 2];\n\tinline void change(int l,int r,int k,int pos,int x) {\n\t\tif(l == r&&l == pos) {\n\t\t\ttree[k] = x;\n\t\t\treturn;\n\t\t}\n\t\tint mid = l + r >> 1;\n\t\tif(pos <= mid) change(l,mid,k << 1,pos,x);\n\t\telse change(mid + 1,r,k << 1 | 1,pos,x);\n\t\ttree[k] = max(tree[k << 1],tree[k << 1 | 1]);\n\t}\n\tinline int query(int l,int r,int k,int ql,int qr) {\n\t\tif(ql <= l&&r <= qr)\n\t\t\treturn tree[k];\n\t\tint mid = l + r >> 1,k1,k2;\n\t\tk1 = k2 = -1;\n\t\tif(ql <= mid) k1 = query(l,mid,k << 1,ql,qr);\n\t\tif(qr > mid) k2 = query(mid + 1,r,k << 1 | 1,ql,qr);\n\t\treturn max(k1,k2);\n\t}\n\t//\u7ebf\u6bb5\u6811 \n\tinline int findans(int l,int r,int k,int pos,int x)\n\t{\n\t\tif(l == r) return l;\n\t\tint mid = l + r >> 1,k1,k2;\n\t\tk1 = k2 = Right + 1;\n\t\tif(pos < mid&&tree[k << 1] > x) k1 = findans(l,mid,k << 1,pos,x);\n\t\tif(k1 < Right + 1) return k1;\n\t\t//\u8fd9\u4e00\u53e5\u5fc5\u987b\u52a0 \u4e0d\u7136T(\u5de6\u8fb9\u5df2\u7ecf\u627e\u5230\u4e86 \u6ca1\u5fc5\u8981\u627e\u53f3\u8fb9\u7684) \n\t\tif(tree[k << 1 | 1] > x) k2 = findans(mid + 1,r,k << 1 | 1,pos,x);\n\t\treturn min(k1,k2);\n\t}\n\t//\u7ebf\u6bb5\u6811\u4e0a\u7684\u4e8c\u5206 \n}\ninline void solve() {\n\tfor(reg int i = 1; i <= T; i++) {\n\t\tswitch(option[i].sit) {\n\t\t\tcase 1: {\n\t\t\t\tif(st[option[i].x].size() == 0)\n\t\t\t\t\tsegment::change(1,Right,1,option[i].x,option[i].y);\n\t\t\t\telse {\n\t\t\t\t\tauto it = st[option[i].x].end();\n\t\t\t\t\tif(option[i].y > *(--it)) segment::change(1,Right,1,option[i].x,option[i].y);\n\t\t\t\t}\n\t\t\t\tst[option[i].x].insert(option[i].y);\n\t\t\t\t//\u52a0\u70b9 \u7528set \n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 2: {\n\t\t\t\tint l = option[i].x + 1,r = Right;\n\t\t\t\tint res = segment::query(1,Right,1,l,r);\n\t\t\t\tif(res <= option[i].y) printf(\"-1\\n\");\n\t\t\t\telse {\n\t\t\t\t\tint j = segment::findans(1,Right,1,option[i].x,option[i].y);\n\t\t\t\t\tprintf(\"%d %d\\n\",past_x[j],past_y[*(st[j].upper_bound(option[i].y))]);\n\t\t\t\t}\n\t\t\t\t//\u6c42\u7b54\u6848 \n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 3: {\n\t\t\t\tauto it = st[option[i].x].upper_bound(option[i].y);\n\t\t\t\tbool f = 0;\n\t\t\t\tif(it == st[option[i].x].end()) f = 1;\n\t\t\t\tst[option[i].x].erase((--it));\n\t\t\t\tif(f) {\n\t\t\t\t\tint pas;\n\t\t\t\t\tif(st[option[i].x].size() == 0)\n\t\t\t\t\t\tpas = 0;\n\t\t\t\t\telse {\n\t\t\t\t\t\tauto it = st[option[i].x].end();\n\t\t\t\t\t\tpas = *--it;\n\t\t\t\t\t}\n\t\t\t\t\tsegment::change(1,Right,1,option[i].x,pas);\n\t\t\t\t}\n\t\t\t\t//\u5220\u70b9 \u7528set \n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\nint main() {\n\tpre::init();\n\tpre::hash();\n\tsolve();\n\treturn 0;\n}\n```\n$Tle code$\n\n```cpp\n#include <map>\n#include <set>\n#include <cstdio>\n#include <string>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n#define reg register\nconst int MAXN = 2e5 + 10;\nstruct node {\n\tint sit,x,y;\n\tvoid assignedment(int SIT) {\n\t\tsit = SIT;\n\t}\n};\nint T,Right,seg[MAXN];\nset<int> st[MAXN];\nnode option[MAXN];\nmap<string,int> mp;\nmap<int,int> past_x,past_y;\nnamespace pre {\n\tpair<int,int> a[MAXN],b[MAXN];\n\tinline void init() {\n\t\tmp[\"add\"] = 1,mp[\"find\"] = 2,mp[\"remove\"] = 3;\n\t\tscanf(\"%d\",&T);\n\t\tfor(reg int i = 1; i <= T; i++) {\n\t\t\tstring sit;\n\t\t\tcin >> sit;\n\t\t\tint x,y;\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\ta[i] = make_pair(x,i);\n\t\t\tb[i] = make_pair(y,i);\n\t\t\toption[i].assignedment(mp[sit]);\n\t\t}\n\t}\n\tinline void hash() {\n\t\tsort(a + 1,a + 1 + T);\n\t\tsort(b + 1,b + 1 + T);\n\t\tint va,vb;\n\t\tva = vb = 0;\n\t\tfor(reg int i = 1; i <= T; i++) {\n\t\t\tif(i == 1||a[i].first > a[i - 1].first) va++;\n\t\t\tif(i == 1||b[i].first > b[i - 1].first) vb++;\n\t\t\toption[a[i].second].x = va;\n\t\t\tpast_x[va] = a[i].first;\n\t\t\tpast_y[vb] = b[i].first;\n\t\t\toption[b[i].second].y = vb;\n\t\t}\n\t\tRight = va;\n\t}\n}\nnamespace segment {\n\tint tree[MAXN << 2];\n\tinline void change(int l,int r,int k,int pos,int x) {\n\t\tif(l == r&&l == pos) {\n\t\t\ttree[k] = x;\n\t\t\treturn;\n\t\t}\n\t\tint mid = l + r >> 1;\n\t\tif(pos <= mid) change(l,mid,k << 1,pos,x);\n\t\telse change(mid + 1,r,k << 1 | 1,pos,x);\n\t\ttree[k] = max(tree[k << 1],tree[k << 1 | 1]);\n\t}\n\tinline int query(int l,int r,int k,int ql,int qr) {\n\t\tif(ql <= l&&r <= qr)\n\t\t\treturn tree[k];\n\t\tint mid = l + r >> 1,k1,k2;\n\t\tk1 = k2 = -1;\n\t\tif(ql <= mid) k1 = query(l,mid,k << 1,ql,qr);\n\t\tif(qr > mid) k2 = query(mid + 1,r,k << 1 | 1,ql,qr);\n\t\treturn max(k1,k2);\n\t}\n}\ninline void solve() {\n\tfor(reg int i = 1; i <= T; i++) {\n\t\tswitch(option[i].sit) {\n\t\t\tcase 1: {\n\t\t\t\tif(st[option[i].x].size() == 0)\n\t\t\t\t\tsegment::change(1,Right,1,option[i].x,option[i].y);\n\t\t\t\telse {\n\t\t\t\t\tauto it = st[option[i].x].end();\n\t\t\t\t\tif(option[i].y > *(--it)) segment::change(1,Right,1,option[i].x,option[i].y);\n\t\t\t\t}\n\t\t\t\tst[option[i].x].insert(option[i].y);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 2: {\n\t\t\t\tint l = option[i].x + 1,r = Right;\n\t\t\t\tint res = segment::query(1,Right,1,l,r);\n\t\t\t\tif(res <= option[i].y) printf(\"-1\\n\");\n\t\t\t\telse {\n\t\t\t\t\twhile(l < r) {\n\t\t\t\t\t\tint mid = l + r >> 1;\n\t\t\t\t\t\tint res = segment::query(1,Right,1,l,mid);\n\t\t\t\t\t\tif(res > option[i].y) r = mid;\n\t\t\t\t\t\telse l = mid + 1;\n\t\t\t\t\t}\n\t\t\t\t\tint j = l;\n\t\t\t\t\tprintf(\"%d %d\\n\",past_x[j],past_y[*(st[j].upper_bound(option[i].y))]);\n\t\t\t\t}\n                \n                //\u4e0e\u4e0a\u9762AC\u7684\u4ee3\u7801\u4e0d\u4e00\u6837\u7684\u53ea\u6709\u8fd9\u91cc \u4e0a\u9762\u662f\u5728\u6811\u4e0a\u4e8c\u5206\u7684 \u65f6\u95f4\u590d\u6742\u5ea6O(logn) \u800c\u8fd9\u91cc\u76f4\u63a5\u4e8c\u5206+\u7ebf\u6bb5\u6811\u6c42\u533a\u95f4\u6700\u5927\u503cO(log^2n)\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 3: {\n\t\t\t\tauto it = st[option[i].x].upper_bound(option[i].y);\n\t\t\t\tbool f = 0;\n\t\t\t\tif(it == st[option[i].x].end()) f = 1;\n\t\t\t\tst[option[i].x].erase((--it));\n\t\t\t\tif(f) {\n\t\t\t\t\tint pas;\n\t\t\t\t\tif(st[option[i].x].size() == 0)\n\t\t\t\t\t\tpas = 0;\n\t\t\t\t\telse {\n\t\t\t\t\t\tauto it = st[option[i].x].end();\n\t\t\t\t\t\tpas = *--it;\n\t\t\t\t\t}\n\t\t\t\t\tsegment::change(1,Right,1,option[i].x,pas);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\nint main() {\n\tpre::init();\n\tpre::hash();\n\tsolve();\n\treturn 0;\n}\n```",
        "postTime": 1570181022,
        "uid": 73992,
        "name": "resftlmuttmotw",
        "ccfLevel": 0,
        "title": "CF19D Points"
    },
    {
        "content": "~~\u5199\u4e86\u534a\u5929\u7684\u6811\u5957\u6811\u88ab\u5361\u7a7a\u95f4~~\n\n\u7ebf\u6bb5\u6811+set\u5373\u53ef\u3002\n\n\u9996\u5148\u663e\u7136\u8981\u79bb\u7ebf\u4e0b\u6765\uff0c\u7136\u540e\u79bb\u6563\u5316\u4e00\u4e0b\u3002\n\n\u5bf9\u6bcf\u4e2a$x$\uff0c\u5f00\u4e00\u4e2a\u5bf9\u5e94\u7684set\uff0c\u5b58\u6a2a\u5750\u6807\u4e3a$x$\u7684\u70b9\u7684\u6240\u6709\u7eb5\u5750\u6807\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee$x,y$\uff0c\u6211\u4eec\u8981\u627e\u5230\u5728$x$\u53f3\u8fb9\u7684\u3001\u6700\u5927\u7eb5\u5750\u6807\u5927\u4e8e$y$\u7684\u3001\u6700\u5de6\u8fb9\u7684\u5217$x'$\u3002\n\n\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u6bb5\u6a2a\u5750\u6807\u533a\u95f4\u5185\uff0c\u7eb5\u5750\u6807\u6700\u5927\u503c\u3002\n\n\u7136\u540e\u627e\u6ee1\u8db3\u6761\u4ef6\u7684\u6a2a\u5750\u6807$x'$\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u5373\u53ef\u3002\u6700\u5c0f\u7684\u7eb5\u5750\u6807\u5219\u76f4\u63a5\u5728\u76f8\u5e94\u7684set\u91cclower_bound\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u4fee\u6539\u64cd\u4f5c\uff0c\u5728\u7ebf\u6bb5\u6811\u4e0a\u548c\u5bf9\u5e94\u7684set\u91cc\u76f4\u63a5\u4fee\u6539\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\log n)$\u3002\n\n## Code\uff1a\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<set> \n#include<vector>\n#define N 200005\nstruct istream{\n\ttemplate<typename T>\n\tinline istream&operator>>(T&d){\n\t\tstatic int c;\n\t\twhile(!isdigit(c=getchar()));\n\t\tfor(d=0;isdigit(c);c=getchar())\n\t\td=(d<<3)+(d<<1)+(c^'0');\n\t\treturn*this;\n\t}\n}cin;\nint n;\nstd::vector<int>X,Y;\nstruct cmd{\n\tchar opt[7];\n\tint x,y;\n}q[N];\nint d[N<<2];\nstd::set<int>b[N]; \nvoid modify(int l,int r,int o,const int&pos,const int&ch){\n\tif(l==r)d[o]=ch;else{\n\t\tconst int mid=l+r>>1;\n\t\tif(pos<=mid)modify(l,mid,o<<1,pos,ch);else\n\t\tmodify(mid+1,r,o<<1|1,pos,ch);\n\t\td[o]=std::max(d[o<<1],d[o<<1|1]);\n\t}\n}\nvoid query(int l,int r,int o,const int&X,const int&Y,int&x){\n\tif(l==r){\n\t\tif(d[o]>=Y)\n\t\tx=l;return;\n\t}\n\tconst int mid=l+r>>1;\n\tif(X<=mid&&d[o<<1]>=Y)query(l,mid,o<<1,X,Y,x);\n\tif(~x)return;\n\tif(d[o<<1|1]>=Y)query(mid+1,r,o<<1|1,X,Y,x);\n}\nvoid build(int l,int r,int o){\n\td[o]=-1;\n\tif(l<r){\n\t\tconst int mid=l+r>>1;\n\t\tbuild(l,mid,o<<1),build(mid+1,r,o<<1|1);\n\t}\n}\nint main(){\n\tX.push_back(-1),Y.push_back(-1);\n\tcin>>n;\n\tbuild(1,n,1);\n\tfor(int i=1;i<=n;++i){\n\t\tscanf(\"%s\",q[i].opt);cin>>q[i].x>>q[i].y;\n\t\tif(*q[i].opt=='f')++q[i].x,++q[i].y;\n\t\tX.push_back(q[i].x),Y.push_back(q[i].y);\n\t\tb[i].insert(-1);\n\t}\n\tstd::sort(X.begin(),X.end());\n\tstd::sort(Y.begin(),Y.end());\n\tX.erase(std::unique(X.begin(),X.end()),X.end());\n\tY.erase(std::unique(Y.begin(),Y.end()),Y.end());\n\tfor(int i=1;i<=n;++i){\n\t\tq[i].x=std::lower_bound(X.begin(),X.end(),q[i].x)-X.begin();\n\t\tq[i].y=std::lower_bound(Y.begin(),Y.end(),q[i].y)-Y.begin();\n\t\tif(*q[i].opt=='a'){\n\t\t\tint mx=*b[q[i].x].rbegin();\n\t\t\tif(mx<q[i].y)modify(1,n,1,q[i].x,q[i].y);\n\t\t\tb[q[i].x].insert(q[i].y);\n\t\t}else\n\t\tif(*q[i].opt=='r'){\n\t\t\tb[q[i].x].erase(b[q[i].x].find(q[i].y));\n\t\t\tmodify(1,n,1,q[i].x,*b[q[i].x].rbegin());\n\t\t}else{\n\t\t\tint x=-1;\n\t\t\tquery(1,n,1,q[i].x,q[i].y,x);\n\t\t\tif(x==-1)puts(\"-1\");else\n\t\t\tprintf(\"%d %d\\n\",X[x],Y[*b[x].lower_bound(q[i].y)]);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1543561003,
        "uid": 6813,
        "name": "mrsrz",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF19D \u3010Points\u3011"
    },
    {
        "content": "upd : \u4fee\u6539\u4e86\u4ee3\u7801\u4e2d\u7684\u9519\u8bef\uff0c\u539f `tr[x].st.end()` \u5e94\u6539\u6210 `tr[x].st.rbegin()`\u3002\n\n## Description\n\n\u5b9a\u4e49\u4e09\u79cd\u64cd\u4f5c:\n\n1. `add x y` : \u5728\u5750\u6807\u7cfb\u4e0a\u6dfb\u52a0\u4e00\u4e2a\u70b9 $(x,y)$\u3002\n\n2. `remove x y` : \u79fb\u9664\u70b9 $(x,y)$\u3002\n\n3. `find x y` : \u627e\u5230\u6240\u6709\u5df2\u6807\u8bb0\u5e76\u5728 $(x,y)$ \u53f3\u4e0a\u65b9\u7684\u70b9\u4e2d\uff0c\u6700\u5de6\u8fb9\u7684\u70b9\u3002\n\n$m \\le 2 \\times 10^5$\uff0c$0 \\le x,y \\le 10^9$\u3002\n\n## Solution\n\n\u53ef\u4ee5\u5148\u5c06\u6240\u6709\u70b9**\u6309\u6a2a\u5750\u6807\u79bb\u6563\u5316**\u4e00\u904d\uff0c\u4f7f\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u5728\u67d0\u4e2a $x$ \u5750\u6807\u4e0a\u7684**\u6240\u6709\u70b9\u7684\u7eb5\u5750\u6807**\u3002\n\n\u6211\u4eec\u601d\u8003\u4e00\u4e0b\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u4ec0\u4e48\uff0c\u7531\u4e8e\u67e5\u8be2\u9700\u8981 $y_{ans}>y$\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u8bb0\u5f55\u6bcf\u4e2a $x$ \u5750\u6807**\u5bf9\u5e94\u7684\u6240\u6709\u70b9\u7684 $y$ \u5750\u6807\u7684\u6700\u5927\u503c**\uff0c\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\uff0c\u67e5\u8be2\u65f6\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u5373\u53ef\u3002\n\n\u4e8c\u5206\u5230\u7b2c\u4e00\u4e2a\u5b58\u5728\u4e00\u4e2a\u70b9\uff0c\u4f7f\u5f97\u7eb5\u5750\u6807\u5927\u4e8e\u7ed9\u5b9a $y$ \u7684\u6a2a\u5750\u6807\u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u6c42\u51fa\u8fd9\u4e2a\u6a2a\u5750\u6807\u5bf9\u5e94\u7684\u3001\u7eb5\u5750\u6807\u5927\u4e8e $y$ \u7684\u6700\u4e0b\u9762\u7684\u70b9\u3002\u7531\u4e8e\u4e00\u5171\u4e0d\u8d85\u8fc7 $2\\times 10^5$ \u4e2a\u70b9\uff0c\u6211\u4eec\u79bb\u6563\u5316\u540e\u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u6a2a\u5750\u6807\u5f00\u4e00\u4e2a `set`\uff0c\u5b58\u50a8\u6a2a\u5750\u6807\u5bf9\u5e94\u70b9\u7684\u6240\u6709\u7eb5\u5750\u6807\uff0c\u67e5\u8be2\u4e8c\u5206\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6\u5927\u6982\u662f $O(n\\log^2 n)$ \u7684\uff0c\u4e0d\u7528\u5361\u5e38\u3002\n\n[AC \u8bb0\u5f55](https://codeforces.com/contest/19/submission/174303857)",
        "postTime": 1664451638,
        "uid": 306573,
        "name": "Ender32k",
        "ccfLevel": 0,
        "title": "CF19D Points \u9898\u89e3"
    },
    {
        "content": "\u5199\u4e00\u7bc7\u8f83\u4e3a\u8be6\u7ec6\u7684\u9898\u89e3\u3002\n\n\u9996\u5148\uff0c\u6709\u4e00\u4e2a\u663e\u7136\u7684\u505a\u6cd5\u5c31\u662f\u5148\u5c06 $n$ \u4e2a\u70b9\u79bb\u7ebf\u4e0b\u6765\u5e76\u79bb\u6563\u5316\u5e76\u7528\u7ebf\u6bb5\u6811\u5957 set \u7ef4\u62a4\uff0c\u7136\u540e\u4e8c\u5206\u627e\u5230\u5b58\u5728\u5408\u6cd5\u70b9\u7684\u6700\u5c0f\u6a2a\u5750\u6807\uff0c\u6700\u540e\u5728 set \u4e0a\u67e5\u8be2\u5373\u53ef\u3002\n\n\u53ef\u60dc\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n\\log^2n)$ \u7684\u3002\n\n\u5176\u5b9e $O(n\\log n)$ \u7684\u505a\u6cd5\u4e5f\u662f\u7b80\u5355\u7684\uff0c\u53ea\u9700\u8981\u5728\u7ebf\u6bb5\u6811\u4e0a\u7ef4\u62a4\u533a\u95f4\u7eb5\u5750\u6807\u6700\u5927\u503c\uff0cset \u7ef4\u62a4\u540c\u4e00\u6a2a\u5750\u6807\u7684\u70b9\u96c6\uff0c\u4fee\u6539\u7684\u8bdd\u5148\u5728 set \u4e0a\u4fee\u6539\uff0c\u7136\u540e\u5f97\u51fa\u5355\u70b9\u6700\u5927\u503c\u540e\u5728\u7ebf\u6bb5\u6811\u4e0a\u5355\u70b9\u4fee\u6539\u5373\u53ef\u3002\n\n\u67e5\u8be2\u7684\u8bdd\u5206\u4e3a\u4e24\u6b65\uff0c\u7ebf\u6bb5\u6811\u4e0a\u533a\u95f4\u4e8c\u5206\u51fa\u6700\u5c0f\u7684 $x$ \u4f7f\u5f97\u5bf9\u5e94\u7684\u6700\u5927\u7eb5\u5750\u6807\u5927\u4e8e\u67e5\u8be2\u7684\u7eb5\u5750\u6807\uff0cset upper_bound \u67e5\u8be2\u7b54\u6848\u3002\n\n\u8fd9\u91cc\u53ea\u8bb2\u524d\u8005\uff0c\u533a\u95f4\u7ebf\u6bb5\u6811\u4e8c\u5206\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u6309\u7167\u5168\u5c40\u7ebf\u6bb5\u6811\u4e8c\u5206\u5199\u6cd5\uff0c\u53ea\u4e0d\u8fc7\u52a0\u4e86\u4e2a\u6761\u4ef6\u5177\u4f53\u505a\u6cd5\u5206\u4e3a $3$ \u6b65\uff1a\n\n$1$\u3001\u82e5\u5de6\u5b50\u6811\u4e0e\u67e5\u8be2\u533a\u95f4\u6709\u4ea4\u4e14\u533a\u95f4\u6700\u5927\u503c\u5927\u4e8e\u67e5\u8be2\u503c\uff0c\u9012\u5f52\u5de6\u5b50\u6811\u3002\n\n$2$\u3001\u82e5\u9012\u5f52\u5b8c\u5de6\u5b50\u6811\u540e\u5f97\u5230\u4e86\u7b54\u6848\uff0c\u76f4\u63a5\u9000\u51fa\u3002\n\n$3$\u3001\u82e5\u53f3\u5b50\u6811\u7684\u533a\u95f4\u6700\u5927\u503c\u5927\u4e8e\u67e5\u8be2\u503c\uff0c\u9012\u5f52\u53f3\u5b50\u6811\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nint getpos(int x,int l,int r,int pos,int val){\n\tif(l==r){if(maxn[x]>val) return l;return 0;}\n\tint mid=l+r>>1,tmp;\n\tif(pos<=mid&&maxn[ls[x]]>val) if(tmp=getpos(ls[x],l,mid,pos,val)) return tmp;\n\tif(maxn[rs[x]]>val) return getpos(rs[x],mid+1,r,pos,val);return 0;\n}\n```\n\u4e4d\u4e00\u770b\u4f60\u4f1a\u611f\u89c9\u4e0d\u592a\u5bf9\u52b2\uff0c\u8fd9\u600e\u4e48\u8fd8\u6709\u53ef\u80fd\u540c\u65f6\u9012\u5f52\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u554a\uff0c\u590d\u6742\u5ea6\u786e\u5b9a\u4e0d\u662f $O(n)$ \u7684\u5417\uff1f\uff1f\uff1f\n\n\u4e0d\u597d\u610f\u601d\uff0c\u786e\u5b9e\u662f $O(\\log n)$ \u7684\uff0c\u4e0d\u59a8\u6211\u4eec\u770b\u4e00\u4e2a\u80fd\u8ba9\u4f60\u5b8c\u5168\u8bf4\u670d\u7684 $O(\\log n)$ \u7684\u4ee3\u7801\uff1a\n\n```cpp\nint getpos2(int x,int l,int r,int val){\n\tif(l==r) return l;\n\tint mid=l+r>>1;\n\tif(maxn[ls[x]]>val) return getpos2(ls[x],l,mid,val);\n\treturn getpos2(rs[x],mid+1,r,val);\n}\nint getpos1(int x,int l,int r,int l1,int r1,int val){\n\tif(l>r) return 0;\n\tif(l<=l1&&r1<=r){if(maxn[x]>val) return getpos2(x,l1,r1,val);return 0;}\n\tint mid=l1+r1>>1,tmp;\n\tif(l<=mid) if(tmp=getpos1(ls[x],l,r,l1,mid,val)) return tmp;\n\tif(mid<r) return getpos1(rs[x],l,r,mid+1,r1,val);return 0;\n}\n```\n$\\text{getpos1}$ \u51fd\u6570\u5c31\u662f\u666e\u901a\u7684\u904d\u5386\u533a\u95f4\u5185\u7684\u6240\u6709\u4e0d\u4ea4\u4e14\u6570\u91cf\u6700\u5c0f\u7684\u8282\u70b9\uff0c\u590d\u6742\u5ea6\u4e3a $O(\\log n)$\uff0c\u76ee\u7684\u662f\u627e\u5230\u4f4d\u7f6e\u6700\u5c0f\u7684\u5408\u6cd5\u8282\u70b9\uff0c$\\text{getpos2}$ \u51fd\u6570\u5c31\u662f\u5728\u8fd9\u4e2a\u8282\u70b9\u4e0a\u8fdb\u884c\u666e\u901a\u7684\u7ebf\u6bb5\u6811\u4e8c\u5206\uff0c\u590d\u6742\u5ea6\u4f9d\u65e7\u4e3a $O(\\log n)$\uff0c\u7531\u4e8e $\\text{getpos2}$ \u51fd\u6570\u53ea\u4f1a\u88ab\u8c03\u7528 $1$ \u6b21\uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f $O(\\log n)$ \u7684\u3002\n\n\u89c2\u5bdf\u5176\u539f\u6765\u7684\u4ee3\u7801\uff0c\u53d1\u73b0\u548c\u521a\u624d\u7684\u4ee3\u7801\u57fa\u672c\u4e0a\u4e00\u6a21\u4e00\u6837\uff0c\u5176\u5b9e\u5c31\u662f\u627e\u5230\u4e00\u4e2a\u5408\u6cd5\u8282\u70b9\u4e0a\u7ebf\u6bb5\u6811\u4e8c\u5206\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u5c31\u662f $O(\\log n)$\uff0c\u751a\u81f3\u8fd8\u80fd\u5728\u539f\u6765\u7684\u4ee3\u7801\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u5c0f\u5c0f\u7684\u4f18\u5316\uff08\u9047\u5230\u4e0d\u5408\u6cd5\u7684\u5927\u533a\u95f4\u76f4\u63a5\u9000\u51fa\uff09\u3002\n\n\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f\u4e25\u683c\u7684 $O(n\\log n)$\u3002\n\n# AC code\uff1a\n\n```cpp\nint a[200005],tot,ls[400005],rs[400005],maxn[400005];\nstruct node{string x;int y,z;}q[200005];\nset<int> s[200005];\nvoid build(int &x,int l,int r){\n\tx=++tot;if(l==r) return ;\n\tint mid=l+r>>1;\n\tbuild(ls[x],l,mid),build(rs[x],mid+1,r);\n}\nvoid change(int x,int l,int r,int pos,int val,bool type){\n\tif(l==r){if(type) s[l].erase(val);else s[l].insert(val);if(!s[l].empty()) maxn[x]=*--s[l].end();else maxn[x]=0;return ;}\n\tint mid=l+r>>1;\n\tif(pos<=mid) change(ls[x],l,mid,pos,val,type);else change(rs[x],mid+1,r,pos,val,type);\n\tmaxn[x]=max(maxn[ls[x]],maxn[rs[x]]);\n}\nint getpos(int x,int l,int r,int pos,int val){\n\tif(l==r){if(maxn[x]>val) return l;return 0;}\n\tint mid=l+r>>1,tmp;\n\tif(pos<=mid&&maxn[ls[x]]>val) if(tmp=getpos(ls[x],l,mid,pos,val)) return tmp;\n\tif(maxn[rs[x]]>val) return getpos(rs[x],mid+1,r,pos,val);return 0;\n}\nint getval(int x,int l,int r,int pos,int val){\n\tif(l==r) return *s[l].ub(val);\n\tint mid=l+r>>1;\n\tif(pos<=mid) return getval(ls[x],l,mid,pos,val);return getval(rs[x],mid+1,r,pos,val);\n}\nint main(){\n\tint n=read(n),i,cnt,rt;\n\tfor(i=1;i<=n;i++) cin>>q[i].x,a[i]=read(q[i].y),read(q[i].z);\n\tsort(a+1,a+n+1),cnt=unique(a+1,a+n+1)-a-1,build(rt,1,cnt+1);\n\tfor(i=1;i<=n;i++){\n\t\tif(q[i].x==\"add\") change(1,1,cnt+1,lb(a+1,a+cnt+1,q[i].y)-a,q[i].z,0);\n\t\tif(q[i].x==\"remove\") change(1,1,cnt+1,lb(a+1,a+cnt+1,q[i].y)-a,q[i].z,1);\n\t\tif(q[i].x==\"find\"){\n\t\t\tint pos=getpos(1,1,cnt+1,ub(a+1,a+cnt+1,q[i].y)-a,q[i].z);\n\t\t\tif(pos) print(a[pos]),space,print(getval(1,1,cnt+1,pos,q[i].z)),enter;\n\t\t\telse puts(\"-1\");\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1648229283,
        "uid": 80614,
        "name": "ZCPB",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF19D"
    },
    {
        "content": "\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u5c06x\u4f5c\u4e3a\u7ebf\u6bb5\u6811\u7684\u4e0b\u6807\uff0cy\u4f5c\u4e3a\u4e0b\u6807\u4e3ax\u7684\u53f6\u5b50\u8282\u70b9\u7684\u503c\uff08\u6bcf\u4e00\u4e2ax\u4e0a\u53ef\u80fd\u4f1a\u6709\u8bb8\u591ay\uff0c\u6211\u4eec\u53ea\u5728\u7ebf\u6bb5\u6811\u4e0a\u5b58\u6700\u5927\u7684y\uff0c\u5269\u4e0b\u7684\u5b58\u5230set\u91cc\u3002set\u652f\u6301log\u6548\u7387\u67e5\u8be2\u6700\u5927\u503c\uff0c\u67e5\u627e\u5927\u4e8e\u67d0\u6811\u7684\u6700\u5c0f\u503c\uff0c\u63d2\u5165\uff0c\u5220\u9664\uff0c\u4ee3\u66ff\u4e86\u624b\u5199\u5e73\u8861\u6811\uff09\u3002  \n\u6bcf\u6b21\u5220\u9664\uff0c\u76f4\u63a5\u7528set\u4e2d\u7684\u67e5\u8be2\u5220\u9664\u76f8\u5e94\u503c\uff0c\u518d\u7528set\u4e2d\u7684\u6700\u5927\u503c\u66f4\u65b0x\u70b9\u7684\u503c\u5373\u53ef\u3002\n\u6bcf\u6b21\u67e5\u8be2\uff0c\u67e5\u8be2x+1\u5230n\u4e2dy\u503c\u5927\u4e8e\u6240\u8981\u67e5\u8be2\u7684y\u4e14x\u503c\u6700\u5c0f\u7684\u70b9\uff0c\u5f97\u5230\u7b54\u6848\u7684x\u3002\u8fd9\u4e2a\u70b9\u4e0a\u53ef\u80fd\u6709\u591a\u4e2ay\u6ee1\u8db3\u6761\u4ef6\uff0c\u6240\u4ee5\u8981\u67e5\u8be2set\u4e2d\u6bd4\u8981\u67e5\u8be2\u7684y\u7684\u503c\u5927\u4e00\u4e9b\u7684\u503c\uff0c\u5f97\u5230\u7b54\u6848\u7684y\u3002\n\u53e6\u5916\u7a7a\u95f4\u6709\u9650\uff0c\u6240\u4ee5\u8981\u79bb\u6563\u5316\u3002\n\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <set>\n\nusing namespace std;\n\nconst int maxn=200002;\n\nchar op[maxn][8];\nint x[maxn],y[maxn];\nint nums[maxn<<1];\nint n;\n\nset<int> pos_x[maxn];\n\nstruct node \n{\n    int max;\n    node *ls,*rs;\n}pool[maxn<<1],*root;\nint cnt=0;\n\nint max(int a,int b)\n{\n    return a>b?a:b;\n}\n\nvoid change(node *&p,int l,int r,int pos)\n{\n    if(!p)\n    {\n        p=&pool[++cnt];\n        p->max=-1;\n    }\n    if(l==r)\n    {\n    \tp->max=(pos_x[pos].size()==0)?-1:(*(--pos_x[pos].end()));\n        return;\n    }\n    int mid=(l+r)>>1;\n    if(pos<=mid)\n        change(p->ls,l,mid,pos);\n    else\n        change(p->rs,mid+1,r,pos);\n    if(!p->ls)\n    {\n        p->ls=&pool[++cnt];\n        p->max=-1;\n    }\n    if(!p->rs)\n    {\n        p->rs=&pool[++cnt];\n        p->max=-1;\n    }\n    p->max=max(p->ls->max,p->rs->max);\n}\n\nint query(node *&p,int l,int r,int ql,int qr,int v)\n{\n    if(!p)\n    {\n        p=&pool[++cnt];\n        p->max=-1;\n    }\n    int ans=0;\n    if(l==r)\n    {\n    \treturn p->max>v?l:-1;\n    }\n    if(l==ql && r==qr)\n    \tif(p->max<=v)\n    \t\treturn -1;\n    int mid=(l+r)>>1;\n    if(qr<=mid)\n        return query(p->ls,l,mid,ql,qr,v);\n    else if(ql>mid)\n        return query(p->rs,mid+1,r,ql,qr,v);\n    else\n    {\n    \tif(p->ls)\n    \t{\n\t    \tans=query(p->ls,l,mid,ql,mid,v);\n\t    \tif(ans>=0)\n\t    \t\treturn ans;\n    \t}\n    \tif(p->rs)\n    \t\treturn query(p->rs,mid+1,r,mid+1,qr,v);\n    }\n    return -1;\n}\n\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n    \tscanf(\"%s%d%d\",&op[i],&x[i],&y[i]);\n        nums[i]=x[i];\n    }\n    sort(nums+1,nums+n+1);\n    int o=unique(nums+1,nums+n+1)-(nums+1)+1;\n    for(int i=1;i<=n;i++)\n        x[i]=lower_bound(nums+1,nums+o,x[i])-nums;\n    \n    int pos=0,pos_y=0;\n    for(int i=1;i<=n;i++)\n    {\n        if(op[i][0]=='a')\n        {\n            pos_x[x[i]].insert(y[i]);\n            change(root,1,o,x[i]);\n        }\n        else if(op[i][0]=='r')\n        {\n            pos_x[x[i]].erase(pos_x[x[i]].find(y[i]));\n            change(root,1,o,x[i]);\n        }\n        else\n        {\n            pos=query(root,1,o,x[i]+1,o,y[i]);\n            if(pos==-1)\n            \tprintf(\"-1\\n\");\n            else\n            {\n                pos_y=*pos_x[pos].upper_bound(y[i]);\n                printf(\"%d %d\\n\",nums[pos],pos_y);\t\n            }\n        }\n    }\n    return 0;\n}\n\n```",
        "postTime": 1540455069,
        "uid": 38188,
        "name": "\u6570\u5b66\u7cfb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF19D \u3010Points\u3011"
    },
    {
        "content": "\u6240\u6709\u64cd\u4f5c\u5747\u5efa\u7acb\u5728\u4e8c\u7ef4\u5e73\u9762\u4e0a\uff0c\u5bb9\u6613\u60f3\u5230 STL \u5e93\u7684 `set`\u3002\u5c06\u70b9\u7684 $y$ \u5750\u6807\u653e\u5165\u5230\u5bf9\u5e94\u7684\u96c6\u5408 $x$ \u4e2d\u8fdb\u884c\u76f8\u5e94\u7684\u64cd\u4f5c\u3002\u63d2\u5165\u64cd\u4f5c\u4e3a ` s[x].insert (y)`\uff0c\u5220\u9664\u64cd\u4f5c\u4e3a `s[x].erase (y)`\uff0c\u800c\u67e5\u8be2\u64cd\u4f5c\u9700\u8981\u4ece\u5c0f\u5230\u5927\u904d\u5386\u4e0b\u6807\u5927\u4e8e $x$ \u7684\u96c6\u5408\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u4e0d\u4e3a\u7a7a\u7684\u96c6\u5408\u4e14\u96c6\u5408\u4e2d\u5b58\u5728\u4e00\u4e2a\u5143\u7d20\u5927\u4e8e $y$\u3002\u7531\u9898\u53ef\u77e5 $x,y$ \u5747\u8f83\u5927\uff0c\u4f46\u662f\u6700\u591a\u53ea\u6709 $2 \\times 10^5$ \u6b21\u63d2\u5165\uff0c\u5bb9\u6613\u60f3\u5230\u5c06 $x$ \u8fdb\u884c\u79bb\u6563\u5316\uff0c\u6240\u4ee5\u67e5\u8be2\u64cd\u4f5c\u53ef\u4ee5\u5199\u6210\uff1a\n\n```cpp\n//\u5bf9\u4e8e\u6240\u6709 j \u5747\u6ee1\u8db3\u5927\u4e8e x \uff08\u79bb\u6563\u5316\u540e\u7684\u7f16\u53f7\uff09\nif (!s[j].empty () && s[j].upper_bound (q[i].y) != s[j].end ()) // print the answer\n```\n\n\u7efc\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u7b2c\u4e00\u4efd\u4ee3\u7801\uff0c\u53ea\u653e\u4e86\u4e3b\u51fd\u6570\u7684\u90e8\u5206\uff1a\n\n```cpp\nint main ()\n{\n\tn = read ();\n\tfor (int i = 1;i <= n;++i) scanf (\"%s\",q[i].ty),q[i].x = read (),tmp[i] = q[i].x,q[i].y = read ();\n\tsort (tmp + 1,tmp + 1 + n);\n\ttot = unique (tmp + 1,tmp + n + 1) - tmp - 1;\n\tfor (int i = 1;i <= n;++i) q[i].id = lower_bound (tmp + 1,tmp + 1 + tot,q[i].x) - tmp;//\u79bb\u6563\u5316\n\tfor (int i = 1;i <= n;++i)\n\t{\n\t\tif (q[i].ty[0] == 'a') s[q[i].id].insert (q[i].y);\n\t\telse if (q[i].ty[0] == 'r') s[q[i].id].erase (q[i].y);\n\t\telse \n\t\t{\n\t\t\tbool ok = 0;\n\t\t\tfor (int j = q[i].id + 1;j <= tot;++j)\n\t\t\t{\n\t\t\t\tif (!s[j].empty () && s[j].upper_bound (q[i].y) != s[j].end ())\n\t\t\t\t{\n\t\t\t\t\tok = 1;\n\t\t\t\t\tprintf (\"%d %d\\n\",tmp[j],*s[j].upper_bound (q[i].y));\n\t\t\t\t\tbreak;//\u627e\u5230\u6700\u5c0f\u7684\u4e00\u4e2a\u5373\u53ef\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!ok) puts (\"-1\");//\u4e0d\u5b58\u5728\u5c31\u8f93\u51fa -1\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\u5bb9\u6613\u770b\u5f97\u51fa\u590d\u6742\u5ea6\u4e3b\u8981\u5728\u67e5\u8be2\u64cd\u4f5c\u4e0a\uff0c\u6700\u574f\u60c5\u51b5\u4e0b\u53ef\u4ee5\u8fbe\u5230 $O(n^2)$\u3002\u7531\u4e8e\u8981\u627e\u5230\u4e00\u4e2a\u6700\u5c0f\u7684\u7b54\u6848\uff0c\u6240\u4ee5\u53ef\u4ee5\u8fdb\u884c\u7ebf\u6bb5\u6811\u4e0a\u7684\u4e8c\u5206\u3002\u6bcf\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u5b58\u7684\u662f\u79bb\u6563\u5316\u540e $x$ \u5bf9\u5e94\u7f16\u53f7\u7684\u96c6\u5408\u7684\u6700\u5927\u503c\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u6700\u5927\u503c\u90fd\u4e0d\u7b26\u9898\u610f\uff0c\u90a3\u4e48\u8be5\u96c6\u5408\u4e2d\u4e00\u5b9a\u65e0\u89e3\u3002\n\n\u5c06 `set` \u4e0e\u7ebf\u6bb5\u6811\u914d\u5408\u7740\u4f7f\u7528\uff0c\u63d2\u5165\u7684\u540c\u65f6\u5c06\u79bb\u6563\u5316\u540e $x$ \u5bf9\u5e94\u7f16\u53f7\u7684\u96c6\u5408\u7684\u6240\u5bf9\u5e94\u7684\u8282\u70b9\u6539\u4e3a\u5f53\u524d\u96c6\u5408\u7684\u6700\u5927\u503c\uff08\u53ef\u80fd\u4e0d\u4f1a\u53d1\u751f\u53d8\u5316\uff09\uff0c\u5220\u9664\u64cd\u4f5c\u4e5f\u662f\u540c\u7406\uff0c\u4f46\u8981\u6ce8\u610f\u5220\u9664\u540e\u96c6\u5408\u4e3a\u7a7a\u7684\u60c5\u51b5\u3002\n\n\u67e5\u8be2\u64cd\u4f5c\u901a\u8fc7\u7ebf\u6bb5\u6811\u6c42\u5f97\u5bf9\u5e94\u7684\u79bb\u6563\u5316\u540e\u7684 $x$ \u6216\u8005\u65e0\u89e3\uff0c\u7136\u540e\u518d\u901a\u8fc7 `set` \u91cc\u7684\u51fd\u6570\u6c42\u89e3\uff0c\u56e0\u6b64\u4e3b\u8981\u7684\u96be\u5ea6\u5728\u4e8e\u5982\u4f55\u5199\u7ebf\u6bb5\u6811\u7684\u67e5\u8be2\u64cd\u4f5c\uff0c\u8fdb\u884c\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n- \u533a\u95f4\u4e0d\u5b58\u5728\u6216\u7ebf\u6bb5\u6811\u7684\u67d0\u4e00\u4e2a\u533a\u95f4\u7684\u6700\u5927\u503c\u5c0f\u4e8e $y$\uff0c\u4e0d\u7b26\uff0c\u76f4\u63a5\u8fd4\u56de $-1$\u3002\n\n- \u5df2\u7ecf\u9012\u5f52\u81f3\u4e00\u4e2a\u5927\u5c0f\u4e3a $1$ \u7684\u7b26\u5408\u9898\u610f\u7684\u533a\u95f4\uff08\u9000\u5316\u6210\u70b9\uff09\uff0c\u4e4b\u95f4\u8fd4\u56de\u7aef\u70b9\u7f16\u53f7\u3002\n\n- \u9012\u5f52\u5de6\u533a\u95f4\uff0c\u5982\u679c\u5408\u6cd5\u5c31\u8fd4\u56de\u5de6\u533a\u95f4\u7684\u9012\u5f52\u503c\uff1b\u5426\u5219\u518d\u9012\u5f52\u53f3\u533a\u95f4\u3002\n\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n \\log n)$ \u7684\u4ee3\u7801\uff0c\u4e00\u4e9b\u91cd\u70b9\u5728\u6ce8\u91ca\u4e2d\u6709\u8bb2\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <set>\n#define init(x) memset (x,0,sizeof (x))\n#define ll long long\n#define ull unsigned long long\n#define INF 0x3f3f3f3f\nusing namespace std;\nconst int MAX = 4e5 + 5;\nconst int MOD = 1e9 + 7;\ninline int read ();\nint n,tot,cnt,k[MAX],tree[MAX << 2]; \nstruct node\n{\n\tchar ty[10];\n\tint x,y;\n} q[MAX];\nset <int> s[MAX];\nvoid modify (int cur,int l,int r,int x,int v);\nint query (int cur,int l,int r,int x,int y,int v);\nint main ()\n{\n\t//freopen (\".in\",\"r\",stdin);\n\t//freopen (\".out\",\"w\",stdout);\n\tn = read ();\n\tfor (int i = 1;i <= n;++i) scanf (\"%s\",q[i].ty),q[i].x = read (),q[i].y = read (),k[++cnt] = q[i].x,k[++cnt] = q[i].y;\n\tsort (k + 1,k + 1 + cnt);\n\ttot = unique (k + 1,k + cnt + 1) - k - 1;\n\tfor (int i = 1;i <= n;++i)//x y \u90fd\u8fdb\u884c\u4e86\u79bb\u6563\u5316\n\t{\n\t\tq[i].x = lower_bound (k + 1,k + 1 + tot,q[i].x) - k;\n\t\tq[i].y = lower_bound (k + 1,k + 1 + tot,q[i].y) - k;//y \u8fdb\u884c\u79bb\u6563\u5316\u662f\u56e0\u4e3a\u5b58\u5728 y = 0 \u7684\u70b9 \u79bb\u6563\u5316\u540e\u4fbf\u4e8e\u4e0e\u7a7a\u96c6\u5408\u4f5c\u533a\u5206\n\t}\n\tfor (int i = 1;i <= n;++i)\n\t{\n\t\tif (q[i].ty[0] == 'a') s[q[i].x].insert (q[i].y),modify (1,1,tot,q[i].x,*(--s[q[i].x].end ()));//\u63d2\u5165\u540e\u67e5\u627e\u6700\u503c\n\t\telse if (q[i].ty[0] == 'r')\n\t\t{\n\t\t\ts[q[i].x].erase (q[i].y);\n\t\t\tif (!s[q[i].x].size ()) modify (1,1,tot,q[i].x,0);//\u533a\u95f4\u4e3a\u7a7a\uff0c\u76f4\u63a5\u66f4\u65b0\u6210 0\n\t\t\telse modify (1,1,tot,q[i].x,*(--s[q[i].x].end ()));//\u5220\u9664\u540e\u67e5\u627e\u6700\u503c\n\t\t}\n\t\telse \n\t\t{\n\t\t\tint pos = query (1,1,tot,q[i].x + 1,tot,q[i].y);\n\t\t\tif (pos == -1) puts (\"-1\");//\u65e0\u89e3\n\t\t\telse printf (\"%d %d\\n\",k[pos],k[*s[pos].upper_bound (q[i].y)]);//\u8fd8\u539f\u6210\u539f\u6765\u7684\u503c\u540e\u8f93\u51fa\n\t\t}\n\t}\n\treturn 0;\n}\ninline int read ()\n{\n    int s = 0;int f = 1;\n    char ch = getchar ();\n    while ((ch < '0' || ch > '9') && ch != EOF)\n\t{\n        if (ch == '-') f = -1;\n        ch = getchar ();\n    }\n    while (ch >= '0' && ch <= '9')\n\t{\n        s = s * 10 + ch - '0';\n        ch = getchar ();\n    }\n    return s * f;\n}\nvoid modify (int cur,int l,int r,int x,int v)//\u5355\u70b9\u66f4\u65b0\n{\n\tif (l == r)\n\t{\n\t\ttree[cur] = v;\n\t\treturn ;\n\t}\n\tint mid = (l + r) >> 1;\n\tif (x <= mid) modify (cur << 1,l,mid,x,v);\n\telse modify (cur << 1 | 1,mid + 1,r,x,v);\n\ttree[cur] = max (tree[cur << 1],tree[cur << 1 | 1]);//\u7ef4\u62a4\u6700\u5927\u503c\n}\nint query (int cur,int l,int r,int x,int y,int v)\n{\n\tif (tree[cur] <= v || y < l || x > r) return -1;//\u65e0\u89e3\n\tif (l == r) return l;//\u533a\u95f4\u957f\u5ea6\u4e3a 1\n\tint mid = (l + r) >> 1,s = query (cur << 1,l,mid,x,y,v);\n\tif (~s) return s;//\u6709\u89e3 \u663e\u7136\u5de6\u533a\u95f4\u7684\u7f16\u53f7\u66f4\u5c0f\n\treturn query (cur << 1 | 1,mid + 1,r,x,y,v);//\u5de6\u533a\u95f4\u65e0\u89e3\u5728\u8fdb\u884c\u53f3\u533a\u95f4\u7684\u9012\u5f52\n}\n```",
        "postTime": 1661751658,
        "uid": 183603,
        "name": "SUNCHAOYI",
        "ccfLevel": 6,
        "title": "\u9898\u89e3\u3010CF19D Points\u3011"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF19D)\n# \u9898\u610f\n\u5728\u4e00\u4e2a\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\u4e0a\u652f\u6301\u52a0\u70b9\u3001\u5220\u70b9\u4ee5\u53ca\u67e5\u8be2\u67d0\u4e2a\u70b9\u53f3\u4e0a\u65b9\u6700\u9760\u8fd1\u8be5\u70b9\u7684\u5750\u6807\u3002\n# \u601d\u8def\n$n$ \u5c0f $x$ \u5927\u79bb\u6563\u5316\uff08~~\u5927\u96fe~~\uff09\n\n\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u5bf9 $x$ \u5750\u6807\u5efa\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u90a3\u4e48\u7ef4\u62a4\u7684\u5f53\u7136\u662f $y$ \u5750\u6807\u7684\u4fe1\u606f\u3002\n\n\u4e8e\u662f\u6211\u4eec\u9700\u8981\u9009\u53d6\u4e00\u4e2a\u201c\u6709\u4ee3\u8868\u6027\u201d\u7684 $y$ \u5750\u6807\u5b58\u5165\uff0c\u540c\u65f6\u8003\u8651\u5230\u9700\u8981\u5224\u65ad\u5728\u67d0\u4e2a\u70b9\u53f3\u4fa7\u4e0a\u65b9\u662f\u5426\u6709\u70b9\u5b58\u5728\uff08\u5373\u67e5\u8be2\u64cd\u4f5c\uff09\uff0c\u8fd9\u91cc\u9700\u8981\u5b58\u50a8\u7684\u662f $y$ \u5750\u6807\u7684\u6700\u5927\u503c\u3002\n\n\u90a3\u4e48\u5982\u4f55\u628a\u5176\u4f59\u7684 $y$ \u5750\u6807\u8bb0\u4e0b\u6765\uff1f\u7b80\u5355\u6574\u7406\u4e00\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u63d2\u5165\u3001\u5220\u9664\u4ee5\u53ca\u67e5\u6700\u5927\u503c\uff08\u4ee5\u4fbf\u5220\u70b9\u540e\u66ff\u6362\u7ebf\u6bb5\u6811\u7684\u4fe1\u606f\uff09\uff0c\u800c\u4e14 $y$ \u5750\u6807\u8fd8\u662f\u4e92\u5f02\u7684\uff0c\u7528 set \u7ef4\u62a4\u5373\u53ef\u3002\n\n# \u5177\u4f53\u64cd\u4f5c\n- \u52a0\u70b9\u65f6\uff0c\u4fee\u6539\u7ebf\u6bb5\u6811\u4e0a\u4fe1\u606f\u5e76\u63d2\u5165 set \u4e2d\u3002\n- \u5220\u9664\u65f6\uff0c\u5224\u65ad set \u662f\u5426\u4e3a\u7a7a\uff0c\u4e4b\u540e\u628a\u5f53\u524d\u6700\u5927\u503c\u6216\u8005\u201c\u7a7a\u201d\u4fee\u6539\u5230\u7ebf\u6bb5\u6811\u4e2d\u3002\n- \u67e5\u8be2\u65f6\uff0c\u9650\u5b9a\u7ebf\u6bb5\u6811\u533a\u95f4\u4e3a $[x+1,n]$\uff0c\u5148\u5de6\u540e\u53f3\u627e\u662f\u5426\u5b58\u5728\u4e0a\u65b9\u7684\u70b9\uff0c\u56de\u8fc7\u5934\u6765\u53bb set \u91cc\u4e8c\u5206\u51fa\u7b54\u6848\u3002\n\n# \u7801\n\u7ebf\u6bb5\u6811\n```cpp\nstruct SegmentTree{\n\tint val[maxm];\n\t#define mid ((l+r)>>1)\n\t#define lson rt<<1,l,mid\n\t#define rson rt<<1|1,mid+1,r\n\tinline void build(int rt,int l,int r){\n\t\tval[rt]=-1;\n\t\tif(l==r) return;\n\t\tbuild(lson),build(rson);\n\t}\n\tinline void update(int rt,int l,int r,int p,int k,bool pd){\n\t\tif(l==r){\n\t\t\tif(!pd) val[rt]=k;\n\t\t\telse val[rt]=max(val[rt],k);\n\t\t\treturn;\n\t\t}\n\t\tif(p<=mid) update(lson,p,k,pd);\n\t\telse update(rson,p,k,pd);\n\t\tval[rt]=max(val[rt<<1],val[rt<<1|1]);\n\t}\n\tinline int query(int rt,int l,int r,int p,int k){\n\t\tif(l==r){\n\t\t\tif(val[rt]>k) return l;\n\t\t\telse return -1;\n\t\t}\n\t\tint res=-1;\n\t\tif(p<=mid&&val[rt<<1]>k) res=query(lson,p,k);\n\t\tif(res==-1&&val[rt<<1|1]>k) res=query(rson,p,k);\n\t\treturn res;\n\t}\n}T;\n```\n\u64cd\u4f5c\n```cpp\nfor(int i=1;i<=n;++i){\n\t\tif(q[i].opt==1){\n\t\t\tS[q[i].x].insert(q[i].y);\n\t\t\tT.update(1,1,V.size(),q[i].x,q[i].y,1);\n\t\t}\n\t\telse if(q[i].opt==2){\n\t\t\tset<int>::iterator it=S[q[i].x].find(q[i].y);\n\t\t\tS[q[i].x].erase(it);\n\t\t\tif(S[q[i].x].empty()) T.update(1,1,V.size(),q[i].x,-1,0);\n\t\t\telse T.update(1,1,V.size(),q[i].x,*S[q[i].x].rbegin(),0);\n\t\t}\n\t\telse{\n\t\t\tint res;\n\t\t\tif(q[i].x!=V.size()) res=T.query(1,1,V.size(),q[i].x+1,q[i].y);\n\t\t\telse res=-1;\n\t\t\tif(res==-1) printf(\"-1\\n\");\n\t\t\telse{\n\t\t\t\tset<int>::iterator it=S[res].upper_bound(q[i].y);\n\t\t\t\tprintf(\"%d %d\\n\",V[res-1],*it);\n\t\t\t}\n\t\t}\n\t}\n```",
        "postTime": 1654431015,
        "uid": 321177,
        "name": "SoyTony",
        "ccfLevel": 6,
        "title": "CF\u9898\u89e3\u2014\u2014CF19D Points"
    },
    {
        "content": "\u4e4b\u524d\u5927\u5927\u5df2\u7ecf\u5ba1\u6838\u8fc7\u4e86\uff0c\u81ea\u5df1\u624b\u6b8b\u7ed9\u5f7b\u5e95\u5220\u9664\u4e86\uff0c\u671b\u5927\u5927\u8fc7~\n\n# \u89e3\u9898\u601d\u8def\uff1a\u7ebf\u6bb5\u6811+\u5e73\u8861\u6811\n\n- $x,y$ \u8fd9\u4e48\u5927\uff0c\u4e3a\u4e86\u4e0d MLE \uff0c\u5148\u79bb\u6563\u5316\u4ebf\u4e0b\u3002\n- \u6211\u4eec\u53ef\u4ee5\u5229\u7528\u5e73\u8861\u6811\u7ef4\u62a4\u5df2\u6807\u8bb0\u70b9\u4e2d\u6bcf\u4e2a $x$ \u5bf9\u5e94\u6240\u6709 $y$ \u7684\u96c6\u5408\uff0c\u6bcf\u6b21\u67e5\u8be2\u80fd\u786e\u5b9a\u662f\u5426\u6709\u7b26\u5408\u6761\u4ef6\u7684 $x$ \u3002\n- \u786e\u5b9a\u4e86 $x$ \uff0c\u8fd8\u8981\u786e\u5b9a\u662f\u5426\u6709\u7b26\u5408\u6761\u4ef6\u7684 $y$ \uff0c\u8fd9\u65f6\u6211\u4eec\u5c31\u9700\u8981\u7528\u5230\u7ebf\u6bb5\u6811\uff0c\u7ef4\u62a4\u7684\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u6a2a\u5750\u6807\u4e3a$x$\u7684\u5df2\u6807\u8bb0\u70b9\u4e2d $y$ \u7684\u6700\u5927\u503c\u3002\n- \u786e\u5b9a\u4e86\u6709\u89e3\uff0c\u5c31\u53ef\u4ee5\u7528\u4e8c\u5206\u6c42\u51fa\u6700\u4f18 $x$ \u548c $y$ \u5566~\n- \u603b\u7ed3\u4e00\u4e0b\uff0c\u8fd9\u9053\u9898\u8003\u5bdf\u4e86\u8f83\u4e3a\u6a21\u677f\u7684\u7ebf\u6bb5\u6811\u4e0e\u5e73\u8861\u6811\uff0c\u53ea\u8981\u6ce8\u610f\u7ec6\u8282\uff0c\u5957\u597d\u6a21\u677f\uff0c\u96be\u5ea6\u5e76\u4e0d\u5927\uff0c\u4f5c\u4e3a\u7d2b\u9898\u8fd8\u662f\u8f83\u6c34\u3002\n\n# \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\n#include <bits/stdc++.h>  \nusing namespace std;\nconst int N = 200005;\nstruct edge {\n    int op, x, y;\n} e[N];\nstruct Node{\n    int l, r, maxv;\n} node[4 * N];\nint n, m, a[N];\nset<int> s[N];\ninline void pushup(int id) {\n    node[id].maxv = max(node[id << 1].maxv, node[id << 1 | 1].maxv);\n}\nvoid build(int id, int l, int r) {\n    node[id] = {l, r, -1};\n    if (l == r) {\n        return ;\n    }\n    int mid = l + r >> 1;\n    build(id << 1, l, mid);\n    build(id << 1 | 1, mid + 1, r);\n}\nvoid update(int id, int x) {\n    int l = node[id].l, r = node[id].r;\n    if (l == r) {\n        node[id].maxv = s[x].size() ? *--s[x].end() : -1;\n        return ;\n    }\n    int mid = l + r >> 1;\n    if (x <= mid) {\n        update(id << 1, x);\n    } else {\n        update(id << 1 | 1, x);\n    }\n    pushup(id);\n}\nint query(int id, int x, int y) {\n    int l = node[id].l, r = node[id].r, maxv = node[id].maxv;\n    if (r <= x || maxv <= y) {\n        return -1;\n    }\n    if (l == r) {\n        return l;\n    }\n    int resl = query(id << 1, x, y);\n    return resl == -1 ? query(id << 1 | 1, x, y) : resl;\n}\nint main() {\n    ios :: sync_with_stdio(0);\n    cin >> n;\n    for (int i = 1; i <= n; ++i) {\n        string S;\n        cin >> S >> e[i].x >> e[i].y;\n        e[i].op = S[0] == 'a' ? 1 : S[0] == 'r' ? 2 : 3;\n        a[i] = e[i].x;\n    }\n    sort(a + 1, a + n + 1);\n    int m = unique(a + 1, a + n + 1) - (a + 1);\n    build(1, 1, n);\n    for (int i = 1; i <= n; ++i) {\n        int x = upper_bound(a + 1, a + m + 1, e[i].x) - (a + 1), y = e[i].y;\n        if (e[i].op == 1) {\n            s[x].insert(y);\n            update(1, x);\n        } else if (e[i].op == 2) {\n            s[x].erase(y);\n            update(1, x);\n        } else {\n            int res = query(1, x, y);\n            if (res == -1) { \n                cout << -1 << '\\n';\n            } else {\n                cout << a[res] << ' ' << *s[res].upper_bound(y) << '\\n';\n            }  \n        }   \n    }  \n    return 0;\n}\n```\n\nGood Good \u8d3a\u9898 \uff0c Day Day Up \uff01\uff01",
        "postTime": 1643249736,
        "uid": 308106,
        "name": "_rockyyue_",
        "ccfLevel": 0,
        "title": "\u849f\u84bb\u541b\u7684\u5237\u9898\u65e5\u8bb0Day4\uff08\u7ebf\u6bb5\u6811\u4e13\u9898T1\uff09\uff1aCF19D Points"
    },
    {
        "content": "\u4ecb\u7ecd\u4e00\u79cd\u64cd\u4f5c\u5206\u5757\u505a\u6cd5\u3002\n\n\u9996\u5148\u5bf9\u4e8e\u6bcf\u4e00\u7ec4\u8be2\u95ee\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u67e5\u8be2\u6240\u6709\u70b9\u662f\u5426\u662f\u6700\u4f18\u7b54\u6848\uff0c\u5355\u6b21\u590d\u6742\u5ea6 $O(n)$\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u79bb\u7ebf\u6240\u6709\u70b9\u5e76\u6392\u5e8f\uff08\u5148\u6a2a\u5750\u6807\u4ece\u5927\u5230\u5c0f\uff0c\u540e\u7eb5\u5750\u6807\u4ece\u5927\u5230\u5c0f\uff09\uff0c\u5bf9\u4e8e\u52a0\u5165\u7684\u70b9\u6211\u4eec\u628a\u5b83\u52a0\u5165\u4e00\u4e2a\u5355\u8c03\u6808\u5185\uff0c\u56e0\u4e3a\u6392\u5e8f\u8fc7\uff0c\u6240\u4ee5\u52a0\u5165\u7684\u70b9\u80af\u5b9a\u5728\u8be2\u95ee\u7684\u5de6\u8fb9\uff0c\u4e8e\u662f\u5bf9\u4e8e\u8be2\u95ee\u7684\u70b9\u6211\u4eec\u5728\u5355\u8c03\u6808\u4e8c\u5206\u7b2c\u4e00\u4e2a\u5728\u5b83\u4e0a\u65b9\u7684\u70b9\u5373\u53ef\uff0c\u8fd9\u6837\u9884\u5904\u7406\u5355\u8c03\u6808\u7684\u590d\u6742\u5ea6\u4e3a $O(n \\log n)$\uff08\u9700\u8981\u5148\u6392\u5e8f\uff09\uff0c\u6240\u6709\u8be2\u95ee\u7684\u590d\u6742\u5ea6\u4e4b\u548c\u4e3a $O(q\\log n)$\u3002\n\n\u4e4b\u540e\u6211\u4eec\u5148\u9884\u5904\u7406\u51fa\u6240\u6709\u70b9\u7684\u987a\u5e8f\u3002\u4e4b\u540e\u8003\u8651\u6bcf $B$ \u6b21\u64cd\u4f5c\u5c06\u4e0b\u9762 $B$ \u6b21\u4fee\u6539\u7684\u70b9\u5355\u72ec\u62ff\u51fa\u66b4\u529b\u67e5\u8be2\uff0c\u5176\u4f59\u7684\u70b9\u7528\u5355\u8c03\u6808\u5904\u7406\uff0c\u7136\u540e\u5bf9\u4e8e\u8be2\u95ee\u53d6\u4e24\u8005\u7684\u6700\u4f18\u503c\u3002\n\u56e0\u4e3a\u6240\u6709\u70b9\u7684\u987a\u5e8f\u90fd\u5df2\u6c42\u51fa\uff0c\u6240\u4ee5\u9884\u5904\u7406\u5355\u8c03\u6808\u5c31\u65e0\u987b\u6392\u5e8f\uff0c\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log n + \\frac{q}{B}\\times n + q\\times B + q\\log n)$\u3002\u7406\u8bba\u4e0a $B=\\sqrt{n}$ \u6700\u4f18\uff0c\u590d\u6742\u5ea6\u4e3a $O(n\\log n + q\\sqrt{n} + q\\log n)$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2e5 + 10;\nconst int block = 1500;\n#define x first\n#define y second\nstruct QUE\n{\n\tint op, ids, x, y;\n}que[N];\nint n, m;\npair<int, int> P[N], now[N];\nint vis[N], sf[N], nw[N];\nint S[N], top, ans[N];\nint main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n;\n\tfor (int i = 1; i <= n; ++ i)\n\t{\n\t\tchar now[10];\n\t\tpair <int, int> p;\n\t\tcin >> now >> p.x >> p.y;\n\t\tif(now[0] == 'a')\n\t\t{\n\t\t\tque[i].op = 1;\n\t\t\tque[i].x = p.x;\n\t\t\tque[i].y = p.y;\n\t\t\tP[++ m] = p;\n\t\t}\n\t\telse\n\t\tif(now[0] == 'r')\n\t\t{\n\t\t\tque[i].op = 2;\n\t\t\tque[i].x = p.x;\n\t\t\tque[i].y = p.y;\n\t\t\tP[++ m] = p;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tque[i].op = 3;\n\t\t\tque[i].x = p.x;\n\t\t\tque[i].y = p.y;\n\t\t\tP[++ m] = p;\n\t\t}\n\t}\n\tsort(P + 1, P + 1 + m);\n\tm = unique(P + 1, P + 1 + m) - P - 1;\n\tfor (int i = 1; i <= n; ++ i)\n\t{\n\t\tque[i].ids = lower_bound(P + 1, P + 1 + m, make_pair(que[i].x, que[i].y)) - P;\n\t}\n\tP[0].x = -2e9;\n\tP[0].y = -2e9;\n\ttop = 0;\n\tfor (int l = 1; l <= n; l += block)\n\t{\n\t\tint r = min(l + block - 1, n);\n\t\tint num = 0, tot = 0;\n\t\tmemcpy(sf, vis, sizeof(sf));\n\t\tfor (int i = l; i <= r; ++ i)\n\t\t{\n\t\t\tif(que[i].op <= 2)\n\t\t\tsf[que[i].ids] = 0, nw[++ tot] = que[i].ids;\n\t\t\telse\n\t\t\tsf[que[i].ids] |= 2;\n\t\t}\n\t\tsort(nw + 1, nw + 1 + tot);\n\t\ttot = unique(nw + 1, nw + 1 + tot) - nw - 1;\n\t\tfor (int i = 1; i <= m; ++ i)\n\t\t{\n\t\t\tif(sf[i] & 1)\n\t\t\tnow[++ num] = make_pair(i, 1);\n\t\t\t\n\t\t\tif(sf[i] & 2)\n\t\t\tnow[++ num] = make_pair(i, 0);\n\t\t}\n\t\ttop = 0;\n\t\tfor (int i = num; i; -- i)\n\t\t{\n\t\t\tint be = i;\n\t\t\tfor (int j = i; ; -- j)\n\t\t\t{\n\t\t\t\tif(now[j].y == 0)\n\t\t\t\t{\n\t\t\t\t\tint l = 1, r = top;\n\t\t\t\t\tans[now[j].x] = -1;\n\t\t\t\t\twhile(l <= r)\n\t\t\t\t\t{\n\t\t\t\t\t\tint mid = (l + r) >> 1;\n\t\t\t\t\t\tif(P[S[mid]].y > P[now[j].x].y) ans[now[j].x] = S[mid], l = mid + 1;\n\t\t\t\t\t\telse r = mid - 1;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\ti = j;\n\t\t\t\tif(P[now[j].x].x != P[now[j - 1].x].x)\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor (int j = be; j >= i; -- j)\n\t\t\t{\n\t\t\t\tif(now[j].y == 1)\n\t\t\t\t{\n\t\t\t\t\twhile(top && P[S[top]].y <= P[now[j].x].y)-- top;\n\t\t\t\t\tS[++ top] = now[j].x;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tfor (int i = l; i <= r; ++ i)\n\t\t{\n\t\t\tif(que[i].op == 1)\n\t\t\t\tvis[que[i].ids] = 1;\n\t\t\telse\n\t\t\tif(que[i].op == 2)\n\t\t\t\tvis[que[i].ids] = 0;\n\t\t\telse\n\t\t\t{\n\t\t\t\tint aa = ans[que[i].ids];\n\t\t\t\tfor (int j = 1; j <= tot; ++ j)\n\t\t\t\tif(vis[nw[j]] && P[nw[j]].x > que[i].x && P[nw[j]].y > que[i].y && (aa == -1 || P[nw[j]].x < P[aa].x || (P[nw[j]].x == P[aa].x && P[nw[j]].y < P[aa].y)))\n\t\t\t\taa = nw[j];\n\t\t\t\tif(aa == -1)\n\t\t\t\tcout << \"-1\\n\";\n\t\t\t\telse\n\t\t\t\tcout << P[aa].x << \" \" << P[aa].y << \"\\n\";\n\t\t\t}\n\t\t}\n\t}\n}\n```\n",
        "postTime": 1636543241,
        "uid": 111728,
        "name": "\u5e7b\u5f71\u661f\u575a\u5f3a",
        "ccfLevel": 7,
        "title": "CF19D Points"
    }
]