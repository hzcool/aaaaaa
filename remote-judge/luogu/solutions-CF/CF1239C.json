[
    {
        "content": "\u9898\u76ee\u94fe\u63a5\uff1a[CF1239C Queue in the Train](https://www.luogu.org/problem/CF1239C)\n\n\u3010\u5e7f\u544a\u3011[\u5728\u4e2a\u4eba\u535a\u5ba2\u98df\u7528](https://toxic2018.ml/1895/)\u98ce\u5473\u66f4\u4f73\n\n****\n\n### \u9898\u76ee\u6807\u9898\n\n\u706b\u8f66\u4e0a\u7684\u961f\u5217\n\n### \u9898\u610f\u7b80\u8ff0\n\n\u706b\u8f66\u4e0a\u6709\u4e00\u6392\u5ea7\u4f4d\uff0c\u6807\u53f7 $1..n$ \u3002\u5ea7\u4f4d\u4e0a\u7684\u6bcf\u4e2a\u4eba\u9700\u8981\u53bb\u63a5\u5f00\u6c34~~\u70e7\u65b9\u4fbf\u9762\uff08\u9898\u76ee\u8fd9\u4e48\u8bf4\u7684\uff09~~\u3002\u6bcf\u4e2a\u4eba\u63a5\u5f00\u6c34\u90fd\u4e00\u81f4\u5730\u9700\u8981 $p$ \u5206\u949f\uff0c\u800c\u8d70\u52a8\u7684\u65f6\u95f4\u53ef\u5ffd\u7565\u4e0d\u8ba1\u3002\u7b2c $i$ \u4e2a\u4eba\u4ece\u7b2c $t_i$ \u5206\u949f\u5f00\u59cb\uff0c\u5c31\u4f1a\u6253\u7b97\u53bb\u63a5\u5f00\u6c34\u3002\n\n\u540c\u4e00\u65f6\u523b\u53ea\u80fd\u6709\u4e00\u4eba\u5728\u63a5\u6c34\uff0c\u56e0\u6b64\uff0c\u81ea\u7136\u4f1a\u51fa\u73b0\u6392\u961f\u7684\u60c5\u51b5\u3002\n\n\u7136\u800c\u4eba\u4eec\u90fd\u4e0d\u60f3\u6392\u961f\u3002\u7b2c $i$ \u4e2a\u4eba\u4f1a\u5173\u6ce8\u7b2c $1$ \u5230 $i-1$ \u4e2a\u5ea7\u4f4d\uff08\u5982\u679c\u8fd9\u4e9b\u5ea7\u4f4d\u662f\u7a7a\u7684\uff0c\u90a3\u4e48\u5ea7\u4f4d\u4e0a\u7684\u4eba\u80af\u5b9a\u662f\u5728\u63a5\u6c34\u6216\u8005\u6392\u961f\uff09\u3002\u5373\uff0c\u7b2c $i$ \u4e2a\u4eba\u4f1a\u5728\u7b2c $t_i$ \u5206\u949f\u540e\u7684\uff0c`(`\u7b2c $i$ \u5230\u7b2c $i-1$ \u4e2a\u5ea7\u4f4d\u90fd\u4e0d\u662f\u7a7a\u7684`)`\u7684\u6700\u65e9\u65f6\u95f4\u79bb\u5f00\u5ea7\u4f4d\uff0c\u53bb\u63a5\u6c34\u6216\u8005\u6392\u961f\u3002\n\n\u53e6\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u6f5c\u89c4\u5219\uff1a\u5982\u679c\u5728\u540c\u4e00\u65f6\u523b\uff0c\u6709\u591a\u4e2a\u4eba\u53ef\u4ee5\u79bb\u5f00\u5ea7\u4f4d\uff0c\u90a3\u4e48\u53ea\u6709\u5750\u5728\u7f16\u53f7\u6700\u5c0f\u7684\u5ea7\u4f4d\u4e0a\u7684\u4eba\u4f1a\u79bb\u5f00\u5ea7\u4f4d\uff0c\u5176\u4ed6\u7684\u5219\u7ee7\u7eed\u7b49\u5f85\u3002\n\n\u73b0\u5728\uff0c\u4f60\u9700\u8981\u8ba1\u7b97\u6bcf\u4e2a\u4eba\u63a5\u5b8c\u6c34\u7684\u65f6\u523b\u3002\n\n****\n\n### \u89e3\u9898\u601d\u8def\n\n\u8fd9\u9898\u9898\u76ee\u4e2d\u5b58\u5728\u5f88\u591a\u8981\u7ef4\u62a4\u7684\u4e1c\u897f\uff0c\u6bd4\u5982\uff0c\u6b63\u5728\u7b49\u5f85\u7684\u4eba\u7684\u96c6\u5408\u3001\u961f\u5217\u4e2d\u7684\u4eba\u7684\u96c6\u5408\uff08\u5305\u62ec\u6b63\u5728\u63a5\u6c34\u7684\u90a3\u4e2a\uff09\uff0c\u4ee5\u53ca\u5f53\u524d\u65f6\u95f4\u3002\u5982\u679c\u4f7f\u7528\u666e\u901a\u7684\u6a21\u62df\u505a\u6cd5\uff0c\u5219\u8f83\u4e3a\u96be\u5199\u3002\u5982\u679c\u5c06\u65f6\u95f4\u79bb\u6563\u5316\uff0c\u6309\u7167\u65f6\u523b\u5904\u7406\uff0c\u540c\u6837\u975e\u5e38\u96be\u5904\u7406\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u201c\u4e8b\u4ef6\u5316\u201d\u7684\u529e\u6cd5\u8fdb\u884c\u6a21\u62df\u3002\n\n\u6b64\u5904\u5b9a\u4e49\u201c\u4e8b\u4ef6\u201d\u662f\u4e00\u4e2a\u4e09\u5143\u7ec4 $(time,type,id)$ \u3002\u5176\u4e2d\uff0c $time$ \u8868\u793a\u4e8b\u4ef6\u53d1\u751f\u7684\u65f6\u95f4\uff0c $type$ \u8868\u793a\u4e8b\u4ef6\u7c7b\u578b\uff08$0$ \u8868\u793a\u63a5\u6c34\u5b8c\u6210\uff0c\u79bb\u5f00\u63a5\u6c34\u7684\u961f\u5217\uff1b$1$ \u8868\u793a\u5f00\u59cb\u7b49\u5f85\uff09\uff0c $id$ \u5219\u8868\u793a\u4e8b\u4ef6\u7684\u5bf9\u8c61\uff08\u5373\uff0c\u53d7\u5f71\u54cd\u7684\u4eba\u7684\u7f16\u53f7\uff09\u3002\n\n\u4e00\u5f00\u59cb\uff0c\u6709 $n$ \u4e2a\u4e8b\u4ef6\uff0c\u5373\uff0c\u5bf9\u4e8e\u6240\u6709 $1 \\leq i \\leq n$ \u7684 $(t_i,1,i)$\u3002\u6211\u4eec\u5c06\u8fd9 $n$ \u4e2a\u4e8b\u4ef6\u653e\u5165\u4e8b\u4ef6\u961f\u5217\u3002\n\n\u6211\u4eec\u8fd8\u9700\u8981\u7ef4\u62a4\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\n- $wait$ \uff0c\u8868\u793a\u5f53\u524d\u6b63\u5728\u7b49\u5f85\u7684\u4eba\u7684\u96c6\u5408\uff08\u8fd9\u4e9b\u4eba\u8fd8\u5728\u5ea7\u4f4d\u4e0a\uff09\u3002\u7ef4\u62a4\u7684\u6570\u636e\u7ed3\u6784\u9700\u8981\u652f\u6301\u4ee5\u4e0b\u64cd\u4f5c\uff08\u56e0\u6b64\u9009\u62e9\u4f7f\u7528\u4f18\u5148\u961f\u5217\uff09\uff1a\n  - \u53d6\u51fa\u6700\u5c0f\u503c\u3002\u5bf9\u4e8e\u4efb\u4f55\u7b49\u5f85\u961f\u5217\u4e2d\u7684\u4eba\u53ef\u4ee5\u8fdb\u5165\u63a5\u6c34\u961f\u5217\u7684\u60c5\u666f\uff0c\u4e00\u5b9a\u662f\u6700\u5c0f\u503c\u4f18\u5148\u3002\n  - \u5220\u9664\u6700\u5c0f\u503c\u3002\u5f53\u4e00\u4e2a\u4eba\u8fdb\u5165\u4e86\u63a5\u6c34\u961f\u5217\uff0c\u5c31\u4e0d\u518d\u5c5e\u4e8e\u7b49\u5f85\u961f\u5217\u3002\n  - \u63d2\u5165\u503c\u3002\u5f53\u5904\u7406\u5230 $type = 1$ \u7684\u4e8b\u4ef6\u65f6\uff0c\u5bf9\u5e94\u7684\u4eba\u8981\u8fdb\u5165\u7b49\u5f85\u961f\u5217\u3002\n- $q$ \uff0c\u8868\u793a\u5f53\u524d\u63a5\u6c34\u961f\u5217\u4e2d\u7684\u4eba\u7684\u96c6\u5408\uff08\u5305\u62ec\u6b63\u5728\u6392\u961f\u548c\u6b63\u5728\u63a5\u6c34\u7684\uff09\u3002\u9700\u8981\u652f\u6301\u4ee5\u4e0b\u64cd\u4f5c\uff08\u56e0\u6b64\u9009\u62e9\u4f7f\u7528set\uff09\uff1a\n  - \u5220\u9664\u6307\u5b9a\u503c\u3002\u5f53\u5904\u7406 $type = 0$ \u7684\u4e8b\u4ef6\u65f6\uff0c\u9700\u8981\u5c06\u6307\u5b9a\u7684\u503c\u4ece\u961f\u5217\u4e2d\u79fb\u9664\n  - \u53d6\u51fa\u6700\u5c0f\u503c\u3002\u5982\u679c\u7b49\u5f85\u961f\u5217\u4e2d\u7f16\u53f7\u6700\u5c0f\u7684\u4eba\u7f16\u53f7\u6bd4\u63a5\u6c34\u961f\u5217\u4e2d\u7684\u6700\u5c0f\u7f16\u53f7\u8fd8\u8981\u5c0f\uff0c\u8fd9\u4e2a\u4eba\u624d\u80fd\u8fdb\u5165\u63a5\u6c34\u961f\u5217\u3002\n  - \u63d2\u5165\u503c\u3002\u5982\u679c\u7b49\u5f85\u961f\u5217\u4e2d\u7f16\u53f7\u6700\u5c0f\u7684\u4eba\u7f16\u53f7\u6bd4\u63a5\u6c34\u961f\u5217\u4e2d\u7684\u6700\u5c0f\u7f16\u53f7\u8fd8\u8981\u5c0f\uff0c\u8fd9\u4e2a\u4eba\u5c31\u8981\u8fdb\u5165\u63a5\u6c34\u961f\u5217\u3002\n- $currtime$ \uff0c\u5f53\u524d\u6b63\u5728\u5904\u7406\u7684\u4e8b\u4ef6\u53d1\u751f\u7684\u65f6\u95f4\u3002\n- $emptytime$ \u3002\u5728\u4e0d\u4f1a\u518d\u6709\u4eba\u8fdb\u5165\u63a5\u6c34\u961f\u5217\u7684\u60c5\u51b5\u4e0b\uff0c\u9884\u8ba1\u63a5\u6c34\u961f\u5217\u5c06\u4f1a\u4e3a\u7a7a\u7684\u65f6\u523b\u3002\u6216\u8005\u8bf4\uff0c\u6700\u540e\u4e00\u4e2a\u8fdb\u5165\u63a5\u6c34\u961f\u5217\u7684\u4eba\u5b8c\u6210\u63a5\u6c34\u7684\u65f6\u523b\u3002\n\n\u968f\u540e\uff0c\u6211\u4eec\u4ece\u4e8b\u4ef6\u961f\u5217\u4e2d\u53d6\u51fa\u6700\u65e9\u53d1\u751f\u7684\u4e8b\u4ef6\uff0c\u5e76\u5c06\u5176\u5220\u9664\uff08\u6211\u4eec\u8ba4\u4e3a\uff0c$type = 0$ \u7684\u4e8b\u4ef6\u603b\u662f\u5728 $type = 1$ \u7684\u4e8b\u4ef6\u4e4b\u524d\u8fdb\u884c\uff08\u539f\u56e0\u89c1\u4e0b\u6587\uff09\uff0c\u5e76\u4e14\uff0c\u5bf9\u4e8e $type = 1$ \u7684\u4e8b\u4ef6\uff0c$id$ \u5c0f\u7684\u5148\u8fdb\u884c\uff09\u3002\u968f\u540e\uff0c\u6211\u4eec\u5bf9\u8fd9\u4e2a\u4e8b\u4ef6\u8fdb\u884c\u5904\u7406\u3002\n\n- \u5982\u679c $type = 0$\uff0c\u90a3\u4e48\u76f4\u63a5\u4ece\u63a5\u6c34\u961f\u5217\u4e2d\u5c06\u5bf9\u5e94\u7684\u4eba\u5220\u9664\n- \u5982\u679c $type = 1$\uff0c\u90a3\u4e48\u5c06\u6307\u5b9a\u7684\u4eba\u52a0\u5165\u7b49\u5f85\u961f\u5217\n\n\u5728\u5904\u7406\u5b8c\u4e00\u4e2a\u4e8b\u4ef6\u540e\uff0c\u8981\u4e48\u662f\u63a5\u6c34\u961f\u5217\u6539\u53d8\uff0c\u8981\u4e48\u662f\u7b49\u5f85\u961f\u5217\u6539\u53d8\u3002\u8fd9\u4e9b\u6539\u53d8\u53ef\u80fd\u4f1a\u5f15\u8d77\u5f53\u524d\u7b49\u5f85\u961f\u5217\u4e2d\u7f16\u53f7\u6700\u5c0f\u7684\u4eba\u7f16\u53f7\u6bd4\u63a5\u6c34\u961f\u5217\u4e2d\u7684\u6700\u5c0f\u7f16\u53f7\u8fd8\u8981\u5c0f\u3002\u90a3\u4e48\uff0c\u8fd9\u65f6\u5019\uff0c\u7b49\u5f85\u961f\u5217\u4e2d\u7f16\u53f7\u6700\u5c0f\u7684\u4eba\u5c31\u9700\u8981\u8fdb\u5165\u63a5\u6c34\u961f\u5217\u3002\u8fd9\u4e2a\u4eba\u8fdb\u53bb\u4e4b\u540e\uff0c\u7b49\u5f85\u961f\u5217\u7684\u6700\u5c0f\u7f16\u53f7\u5fc5\u5b9a\u8981\u5927\u4e8e\u63a5\u6c34\u961f\u5217\u7684\u6700\u5c0f\u7f16\u53f7\uff0c\u56e0\u6b64\u65e0\u9700\u7ee7\u7eed\u5224\u65ad\u3002\n\n\u4e00\u4e2a\u4eba$t$\u4ece\u7b49\u5f85\u961f\u5217\u8fdb\u5165\u63a5\u6c34\u961f\u5217\u540e\uff0c\u663e\u7136\uff0c\u4ed6\u5b8c\u6210\u63a5\u6c34\u7684\u65f6\u523b\u662f $max(currtime,emptytime) + p$ \u3002\u56e0\u6b64\uff0c\u6211\u4eec\u8981\u6dfb\u52a0\u4e00\u4e2a\u4e8b\u4ef6 $(max(currtime,emptytime) + p,0,t)$ \uff0c\u7136\u540e\u5c06 $emptytime$ \u66f4\u65b0\u4e3a $max(currtime,emptytime) + p$ \u3002\u6b64\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8fdb\u884c\u7b54\u6848\u7684\u7edf\u8ba1\uff0c\u56e0\u4e3a\u6211\u4eec\u77e5\u9053\u4e86\u7f16\u53f7\u4e3a$t$\u7684\u4eba\u63a5\u6c34\u7ed3\u675f\u7684\u65f6\u95f4\u3002\n\n\u56e0\u6b64\u53ea\u8981\u53cd\u590d\u5904\u7406\u4e8b\u4ef6\uff0c\u76f4\u5230\u4e8b\u4ef6\u961f\u5217\u4e3a\u7a7a\uff0c\u6211\u4eec\u5c31\u6c42\u5f97\u4e86\u6240\u6709\u7b54\u6848\u3002\n\n### \u603b\u7ed3\n\n\u95ee\u9898\uff1a\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u4e0a\u6587\u63d0\u5230\u7684\uff0c\u5bf9\u4e8b\u4ef6\u7684\u6392\u5e8f\u65b9\u5f0f\u5462\uff1f\n\n\u5982\u679c $type = 1$ \u7684\u64cd\u4f5c\u5148\u4e8e $type = 0$ \u7684\u6267\u884c\uff0c\u4f60\u4f1a\u53d1\u73b0\uff0c\u4f60\u6109\u5feb\u5730\u88ab\u6837\u4f8b\u53c9\u6389\u4e86\u3002\u56e0\u4e3a\uff0c\u5982\u679c\u5148\u6267\u884c $type = 1$ \uff0c\u90a3\u4e48\u5728\u5224\u65ad\u7b49\u5f85\u961f\u5217\u4e2d\u7684\u4eba\u662f\u5426\u80fd\u8fdb\u5165\u63a5\u6c34\u961f\u5217\u65f6\uff0c\u539f\u672c\u5df2\u7ecf\u63a5\u6c34\u5b8c\u6210\uff0c\u8981\u79bb\u5f00\u63a5\u6c34\u961f\u5217\u7684\u4eba\u5374\u6ca1\u6709\u5373\u4f7f\u79bb\u5f00\uff0c\u4f1a\u5bfc\u81f4\u5f71\u54cd\u5224\u65ad\u3002\u800c\u5982\u679c\u5728 $type = 1$ \u65f6\uff0c$id$ \u5927\u7684\u5148\u6267\u884c\uff0c\u5219\u4f1a\u8fdd\u53cd\u9898\u76ee\u4e2d\u63d0\u5230\u7684\u201c\u6f5c\u89c4\u5219\u201d\u3002\n\n\u603b\u7ed3\uff1a\u672c\u9898\u4e2d\uff0c\u8fdb\u5165\u7b49\u5f85\u961f\u5217\u548c\u79bb\u5f00\u63a5\u6c34\u961f\u5217\u7684\u4e8b\u4ef6\u6709\u7740\u5171\u540c\u4e4b\u5904\uff0c\u90a3\u5c31\u662f\uff0c\u2460\u5fc5\u987b\u6309\u7167\u65f6\u95f4\u987a\u5e8f\u4ea4\u66ff\u5904\u7406\uff0c\u2461\u5904\u7406\u5b8c\u6bd5\u540e\uff0c\u90fd\u5fc5\u987b\u68c0\u67e5\u7b49\u5f85\u961f\u5217\u7684\u4eba\u80fd\u5426\u8fdb\u5165\u63a5\u6c34\u961f\u5217\u3002\u53e6\u5916\uff0c\u6211\u4eec\u9700\u8981\u6c42\u63a5\u6c34\u961f\u5217\u7684\u6700\u5c0f\u503c\u3002\u5982\u679c\u4f7f\u7528\u961f\u5217`std::queue`\u5904\u7406\uff0c\u5219\u76f8\u5f53\u9ebb\u70e6\uff0c\u800c\u4f7f\u7528\u4e8b\u4ef6\u5316\u7684\u65b9\u5f0f\u5904\u7406\u79bb\u5f00\u63a5\u6c34\u961f\u5217\u7684\u4e8b\u4ef6\uff0c\u5219\u5b8c\u7f8e\u5730\u907f\u514d\u4e86\u4f7f\u7528\u961f\u5217\uff0c\u65b9\u4fbf\u4e86\u6700\u5c0f\u503c\u7684\u7edf\u8ba1\u3002\n\n### \u4ee3\u7801\n\n```cpp\n// status: [Accepted][unofficial]\n// oj:     [Codeforces]\n\n#include<bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\n#define int ll\n\nconst int MAXN = 100005;\nint n,tt;\nint t[MAXN];\nint ans[MAXN];\n\n// \u4e8b\u4ef6\nstruct Event {\n    int time; // \u53d1\u751f\u65f6\u95f4\n    int type; // \u7c7b\u578b\n    int id;   // \u5f71\u54cd\u5230\u7684\u4eba\n    Event() {}\n    Event(int _time,int _type,int _id) {time=_time;type=_type;id=_id;}\n    bool operator<(const Event &other) const {\n        if(time != other.time) return time > other.time; // \u6b64\u5904\u7684\u6392\u5e8f\u5fc5\u987b\u53cd\u8fc7\u6765\uff0c\u56e0\u4e3a\u4f18\u5148\u961f\u5217\u662f\u4ece\u5927\u5230\u5c0f\u6392\u5217\u7684\u3002\n        if(type != other.type) return type < other.type;\n        return id > other.id;\n    }\n};\n\n// \u4e8b\u4ef6\u961f\u5217\npriority_queue<Event> ev;\n// \u63a5\u6c34\u961f\u5217\nset<int> q;\n// \u7b49\u5f85\u961f\u5217\u3002\u4f7f\u7528\u6a21\u677f greater<int>\uff0c\u4ee5\u4f7f\u5f97\u7f16\u53f7\u5c0f\u7684\u4eba\u5148\u88ab\u53d6\u51fa\u3002\npriority_queue<int,vector<int>,greater<int> > wait;\n\nsigned main() {\n    ios::sync_with_stdio(false);\n\n    cin>>n>>tt;\n    for(int i=1;i<=n;i++) {\n        cin>>t[i];\n        // \u521b\u5efa\u4e00\u5f00\u59cb\u7684n\u4e2a\u4e8b\u4ef6\n        ev.push(Event(t[i],true,i));\n    }\n\n    int currtime = 0;\n    int emptytime = 0;\n    while(!ev.empty()) {\n        Event c = ev.top(); ev.pop();\n        currtime = c.time;\n        if(c.type == 0) {\n            // cerr<<currtime<<\": \"<<c.id<<\" left the queue.\"<<endl;\n            q.erase(c.id);\n        }\n        else {\n            // cerr<<currtime<<\": \"<<c.id<<\" became waiting.\"<<endl;\n            wait.push(c.id);\n        }\n\n        // \u8fd9\u662f\u7b49\u5f85\u961f\u5217\u4e2d\u7684\u4eba\u8fdb\u5165\u63a5\u6c34\u961f\u5217\u7684\u6761\u4ef6\n        while(!wait.empty() && (q.empty() || wait.top() < *q.begin())) {\n            int p = wait.top();wait.pop();\n            // cerr<<currtime<<\": \"<<p<<\" entered the queue.\"<<endl;\n            q.insert(p);\n            // \u8ba1\u7b97\u8fd9\u4e2a\u4eba\u63a5\u6c34\u5b8c\u6bd5\u7684\u65f6\u523b\n            int et = max(currtime, emptytime) + tt;\n            // \u521b\u5efa\u8fd9\u4e2a\u4eba\u79bb\u5f00\u63a5\u6c34\u961f\u5217\u7684\u4e8b\u4ef6\n            ev.push(Event(et,false,p));\n            // \u66f4\u65b0emptytime\n            emptytime = et;\n            // \u7edf\u8ba1\u7b54\u6848\n            ans[p] = et;\n        }\n    }\n\n    for(int i=1;i<=n;i++) {\n        if(i>1) cout<<' ';\n        cout<<ans[i];\n    }\n    cout<<endl;\n}\n\n```\n\n\u8bc4\u6d4b\u8bb0\u5f55\uff1a[R25487378](https://www.luogu.org/record/25487378)\n",
        "postTime": 1571654237,
        "uid": 49067,
        "name": "\u53f6ID",
        "ccfLevel": 7,
        "title": "[\u6d1b\u8c37\u9898\u89e3] CF1239C Queue in the Train"
    },
    {
        "content": "div1\u7684C\u9898\u8003\u4e86\u4e00\u9053STL\u7684\u5e94\u7528\uff0c\u8fd9\u8ba9\u6211\u5f88\u60ca\u8bb6\n\n\u6211\u4eec\u5f00\uff1a\n- \u4f18\u5148\u961f\u5217pq\uff0cpair<time,id>\u8868\u793a\u5728time\u65f6\u523b\u7b2cid\u4e2a\u7528\u6237\u4f1a\u60f3\u5230\u8981\u63a5\u6c34\n- \u96c6\u5408s\uff0c\u8868\u793a\u60f3\u8981\u63a5\u6c34\u7684\u4eba\n- q\u961f\u5217\uff0c\u8868\u793a\u80fd\u63a5\u6c34\u7684\u4eba\n\n\u6bcf\u6b21\u5904\u7406\u7684\u65f6\u5019\uff1aq\u961f\u5217\u4e3a\u7a7a\u6216\u5f53\u524d\u90a3\u4e2a\u4eba\u7684id\u66f4\u5c0f\u5c31push\u5230q\u91cc\u9762\uff0c\u5426\u5219insert\u5230\u96c6\u5408s\u91cc\u9762\u3002\u51fa\u961f\u540e\u5982\u679cq\u4e3a\u7a7a\u5c31\u628a\u96c6\u5408\u6700\u5c0f\u7684push\u8fdb\u961f\u5217\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#include<iostream>\n#include<cstdio>\n#define ll long long\nusing namespace std;\n\nconst ll N=100010;\nll n,m,ans[N];\npriority_queue<pair<ll,ll> > pq;\nqueue<ll> q;\nset<ll> s;\n\ninline ll read(){\n\tll x=0,tmp=1;\n\tchar ch=getchar();\n\twhile(!isdigit(ch)){\n\t\tif(ch=='-') tmp=-1;\n\t\tch=getchar();\n\t}\n\twhile(isdigit(ch)){\n\t\tx=(x<<3)+(x<<1)+(ch^48);\n\t\tch=getchar();\n\t}\n\treturn tmp*x;\n}\n\ninline void write(ll x){\n\tif(x<0){\n\t\tputchar('-');\n\t\tx=-x;\n\t}\n\tll y=10,len=1;\n\twhile(y<=x){\n\t\ty=(y<<3)+(y<<1);\n\t\tlen++;\n\t}\n\twhile(len--){\n\t\ty/=10;\n\t\tputchar(x/y+48);\n\t\tx%=y;\n\t}\n}\n\nint main(){\n\tn=read(); m=read();\n\tfor(ll i=1; i<=n; i++){\n\t\tll x=read();\n\t\tpq.push(make_pair(-x,-i));\n\t}\n\tll now=0;\n\tfor(ll i=1; i<=n; i++){\n\t\tif(q.empty()&&s.empty()) now=-pq.top().first;\n\t\tnow+=m;\n\t\twhile(!pq.empty()&&-pq.top().first<=now){\n\t\t\tif(q.empty()||-pq.top().second<q.back()) q.push(-pq.top().second);\n\t\t\telse s.insert(-pq.top().second);\n\t\t\tpq.pop();\n\t\t}\n\t\tans[q.front()]=now;\n\t\tq.pop();\n\t\twhile(q.empty()&&!s.empty()){\n\t\t\tq.push(*s.begin());\n\t\t\ts.erase(s.begin());\n\t\t}\n\t}\n\tfor(ll i=1; i<=n; i++){\n\t\twrite(ans[i]);\n\t\tputchar(' ');\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1572873472,
        "uid": 27924,
        "name": "xukuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1239C \u3010Queue in the Train\u3011"
    },
    {
        "content": "[\u5728\u6b64\u4f7f\u7528\u66f4\u4f73\u54e6](https://blog.csdn.net/qq_40032278/article/details/102671368)\n(\uffe3\u25bd\uffe3)~*\n- \u5b9a\u4e49\u4e00\u4e2a\u4e8b\u4ef6\u96c6\u5408 $a$ \u50a8\u5b58$<time,id>$ \u8868\u793a\uff1a\u5728 $time$ \u65f6\u523b\uff0c\u7b2c $id$ \u4e2a\u4eba\u4f1a\u60f3\u63a5\u6c34\uff08\u53ef\u4ee5\u7528\u4f18\u5148\u961f\u5217\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\uff09\n- \u5b9a\u4e49\u4e00\u4e2a $want$ \u96c6\u5408\uff08\u53ef\u4ee5\u7528 $set$\uff09\uff0c\u8868\u793a\u8fdb\u5165\u7b49\u5f85\u72b6\u6001\u7684\u4eba\n- \u5b9a\u4e49\u4e00\u4e2a $q$ \u961f\u5217\uff0c\u8868\u793a\u80fd\u591f\u63a5\u6c34\u7684\u4eba\u3002\n- \u6bcf\u4e00\u6b21\u5904\u7406\u4e8b\u4ef6\u65f6\uff08\u4ee5 $p$ \u4e3a\u68af\u5ea6\u7684\u5904\u7406\uff09\n\t - \u82e5\u961f\u5217\u4e3a\u7a7a\uff0c\u5219 $push$ \u8fdb\u961f\u5217\n\t - \u6216\u8005\u5f53\u524d\u4e8b\u4ef6\u7684 $id$ \u5c0f\u4e8e\u961f\u5217\u672b\u5c3e\u7684\u4eba\u7684 $id$ \uff0c\u5219 $push$ \u8fdb\u961f\u5217\uff08\u7f16\u53f7\u6bd4\u961f\u5217\u672b\u5c3e\u7684\u4eba\u5c0f\uff0c\u8bf4\u660e\u4e0a\u4e00\u6b21\u7b49\u5f85\u72b6\u6001\u7684\u4eba\u5ef6\u7eed\u4e0b\u6765\uff0c\u4ed6\u4eec\u7684\u7f16\u53f7\u4e00\u5b9a\u5c0f\u4e8e\u5f53\u524d\u7f16\u53f7\uff0c\u6240\u4ee5\u5f53\u524d\u7b2c\u4e00\u4e2a\u63a5\u6c34\u7684\u662f\u5f53\u524d\u7f16\u53f7\uff09\n\t - \u5426\u5219 $insert$ \u5230 $want$ \u4e2d\u3002\n- \u51fa\u961f\u540e\uff0c\u82e5\u961f\u5217\u4e3a\u7a7a\u5219\u628a $want$ \u96c6\u5408\u91cc\u7f16\u53f7\u6700\u5c0f\u7684 $push$ \u8fdb\u961f\u5217\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\npriority_queue< pair<int,int> > a; // \u4e8b\u4ef6\u96c6\u5408\nqueue<int> b; // \u5f53\u524d\u5728\u961f\u5217\u4e2d\u7684\u4eba\nset<int> d; // \u60f3\u8fdb\u961f\u5217\u7684\u4eba (\u7b49\u5f85\u72b6\u6001)\nlong long h[1000010];\nint main()\n{\n\tint i,j,n,p,x;\n\tlong long now=0;\n\tscanf(\"%d%d\",&n,&p);\n\tfor(i=1; i<=n; i++) scanf(\"%d\",&x),a.push(make_pair(-x,-i));\n\tfor(i=1; i<=n; i++)\n\t{\n\t\tif(b.empty()&&d.empty()) now=-a.top().first;\n\t\tnow+=p;\n\t\twhile(!a.empty()&&-a.top().first<=now)\n\t\t{\n\t\t\tif(b.empty()||-a.top().second<b.back()) b.push(-a.top().second);\n\t\t\telse d.insert(-a.top().second);\n\t\t\ta.pop();\n\t\t}\n\t\th[b.front()]=now;\n\t\tb.pop();\n\t\tif(b.empty()&&!d.empty()) \n\t\t{\n\t\t\tb.push(*d.begin());\n\t\t\td.erase(d.begin());\n\t\t}\n\t}\n\tfor(i=1; i<=n; i++) printf(\"%lld \",h[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1571725375,
        "uid": 55521,
        "name": "WLHW",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1239C \u3010Queue in the Train\u3011"
    },
    {
        "content": "\u4e2a\u4eba\u8ba4\u4e3a\u8fd9\u9053\u9898\u7684\u4e3b\u8981\u96be\u70b9\u662f\u7406\u89e3\u9898\u610f\u3002\u7406\u89e3\u9898\u610f\u4e4b\u540e\uff0c\u4ee3\u7801\u96be\u5ea6\u5e76\u4e0d\u9ad8\u3002\u4e0b\u9762\u7ed9\u51fa\u51e0\u4e2a\u7b14\u8005\u8ba4\u4e3a\u5bb9\u6613\u51fa\u73b0\u7406\u89e3\u9519\u8bef\u7684\u70b9\u3002  \n\\* \u6ce8\uff1a\u4e0b\u6587\u4ee5\u201c\u559d\u6c34\u70b9\u201d\u4ee3\u6307\u201c\u6253\u7b97\u559d\u6c34\u7684\u65f6\u95f4\u70b9\u201d\u3002\n+ ```\u6ca1\u4eba\u559c\u6b22\u6392\u961f\u3002``` \u4e0d\u610f\u5473\u7740\u4e0d\u4f1a\u6709\u4eba\u6392\u961f\uff0c\u800c\u662f\u53ea\u6709\u4e0d\u77e5\u9053\u6709\u4eba\u6b63\u5728\u63a5\u6c34\u7684\u4eba\u5373**\u7a7a\u4f4d\u5de6\u8fb9\u7684\u4eba**\u4f1a\u53bb\u6392\u961f\u3002  \n\u56e0\u6b64\uff0c\u6211\u4eec\u4e0d\u80fd\u5bf9\u4e8e\u6574\u4e2a\u6570\u5217\u8fdb\u884c $n$ \u8f6e\u7684\u5bfb\u627e\uff0c\u800c\u662f\u8981\u4f18\u5148\u5728**\u5f53\u524d\u63a5\u6c34\u8005\uff08\u6216\u6700\u540e\u4e00\u4e2a\u6392\u961f\u7684\u4eba\uff09\u7684\u524d\u9762**\u627e\u65f6\u95f4\u6700\u5c0f\u7684\u4eba\u3002  \n+ ```\u5982\u679c\u6709\u591a\u4eba\u540c\u65f6\u8981\u53bb\u559d\u6c34\uff0c\u90a3\u4e48\u4f4d\u7f6e\u9760\u5de6\u7684\u4eba\u4f1a\u5148\u8d77\u8eab\u3002``` \u8fd9\u53e5\u8bdd\u7684\u610f\u601d\u662f**\u4ec5\u6709\u6700\u5de6\u4fa7\u7684\u4eba\u4f1a\u53bb\u6392\u961f**\u800c\u975e\u5176\u5728\u961f\u5217\u4e2d\u76f8\u5bf9\u9760\u524d\u3002  \n\u6240\u4ee5\u4e0b\u4e00\u4e2a\u53bb\u5012\u6c34\u7684\u4eba\u4e00\u5b9a\u662f\u201c\u559d\u6c34\u70b9\u201d\u5c0f\u4e8e\u7b49\u4e8e\u5f53\u524d\u5012\u6c34\u8005\u5012\u6c34\u5b8c\u6210\u65f6\u95f4\u4e2d**\u7f16\u53f7\u6700\u5c0f\u8005**\u3002\u5f53\u7136\uff0c\u5982\u679c\u6240\u6709\u4eba\u7684\u201c\u559d\u6c34\u70b9\u201d\u90fd\u5927\u4e8e\u5f53\u524d\u5012\u6c34\u8005\u5012\u6c34\u5b8c\u6210\u65f6\u95f4\uff0c\u90a3\u5c31\u9009\u201c\u559d\u6c34\u70b9\u201d\u6700\u65e9\u7684\u90a3\u4e00\u4e2a\u3002\n\n------------\n\n\u7406\u89e3\u6e05\u695a\u9898\u76ee\u610f\u601d\u540e\uff0c\u5199\u51fa\u6765\u5c31\u4e0d\u96be\u4e86\uff0c\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4**\u533a\u95f4\u4e2d\u5c0f\u4e8e\u7b49\u4e8e $k$ \u7684\u6570\u4e2d\u7684\u6700\u5c0f\u7f16\u53f7**\u548c**\u533a\u95f4\u6700\u5c0f\u503c**\u3002\u4e3a\u907f\u514d\u91cd\u590d\u5012\u6c34\uff0c\u53ef\u4ee5\u5728\u67e5\u8be2\u5230\u70b9\u540e\u76f4\u63a5\u5c06\u5176\u201c\u5012\u6c34\u70b9\u201d\u8d4b\u503c\u4e3a\u65e0\u7a77\u5927\u3002\u8fd9\u6837\u53ef\u4ee5\u5c11\u5199\u4e00\u4e2a update\u3002",
        "postTime": 1666532185,
        "uid": 199220,
        "name": "\u5929\u624d\u9893\u5e9f\u5b66\u5bb6",
        "ccfLevel": 6,
        "title": "CF1239C \u9898\u89e3"
    },
    {
        "content": "Div1.C \u5c45\u7136\u8003\u4e86 STL \u5e94\u7528\uff0c\u6211\u8868\u793a\u5f88\u4e0d\u7406\u89e3\u3002\n\n\u9898\u76ee\u95ee\u7684\u662f\u6bcf\u4e2a\u4eba\u5403\u5230\u6ce1\u9762\u7684\u65f6\u95f4\uff0c\u90a3\u5c31\u53ea\u9700\u6c42\u51fa\u6bcf\u4e2a\u4eba\u63a5\u6c34\u7684\u65f6\u95f4\u5373\u53ef\u3002\n\n\u5f00\u4e24\u4e2a\u4f18\u5148\u961f\u5217\uff0c\u4e00\u4e2a\u5b58\u8fd8\u4e0d\u60f3\u63a5\u6c34\u7684\u4eba\uff0c\u4e00\u4e2a\u5b58\u60f3\u63a5\u6c34\u7684\u4eba\u3002\n\n\u60f3\u63a5\u6c34\u7684\u4f18\u5148\u961f\u5217\u6309\u7167\u4eba\u7684\u7f16\u53f7\u6392\u5e8f\uff0c\u4e0d\u60f3\u63a5\u6c34\u7684\u4f18\u5148\u961f\u5217\u6309\u7167\u63a5\u6c34\u7684\u65f6\u95f4\u6392\u5e8f\u3002\n\n\u6bcf\u6b21\u5904\u7406\u5b8c\u4e00\u4e2a\u63a5\u6c34\u7684\u4eba\u4e4b\u540e\u628a\u4e0d\u60f3\u63a5\u6c34\u7684\u4f18\u5148\u961f\u5217\u4e2d\u5230\u63a5\u6c34\u65f6\u95f4\u7684\u90a3\u4e9b\u4eba\u6254\u8fdb\u8282\u6c34\u4eba\u7684\u961f\u5217\u91cc\u3002\n\n\u5982\u679c\u5f53\u524d\u6ca1\u4eba\u60f3\u63a5\u6c34\uff0c\u76f4\u63a5\u8df3\u5230\u4e0b\u4e00\u4e2a\u60f3\u63a5\u6c34\u7684\u4eba\u3002\n\n\u590d\u6742\u5ea6 $O(n \\log n)$\u3002",
        "postTime": 1661524232,
        "uid": 117771,
        "name": "intel_core",
        "ccfLevel": 7,
        "title": "CF1239C \u9898\u89e3"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://llf0703.com/p/cf-1248.html#equeueinthetrain)\n\n## \u9898\u610f\n\n\u6709 $n(\\le 10^5)$ \u4e2a\u4eba\u5750\u706b\u8f66\uff0c\u6bcf\u4e2a\u4eba\u6709\u4e2a\u60f3\u5403\u6ce1\u9762\u7684\u65f6\u95f4\u70b9 $t_i$ \uff0c\u6240\u6709\u4eba\u63a5\u6c34\u6240\u9700\u7684\u65f6\u95f4\u90fd\u662f $p$ \u3002\n\n\u5728\u67d0\u4e00\u65f6\u523b $T$\uff0c\u5982\u679c\u7b2c $i$ \u4e2a\u4eba\u7684 $t_i\\geq T$ \uff0c\u4e14\u7f16\u53f7 $< i$ \u7684\u4eba\u90fd\u6ca1\u53bb\u63a5\u6c34\uff0c\u90a3\u4e48\u5b83\u5c31\u4f1a\u53bb\u6392\u961f\u3002\u7279\u522b\u7684\uff0c\u5982\u679c\u6709\u591a\u4e2a\u4eba\u540c\u65f6\u60f3\u63a5\u6c34\uff0c\u90a3\u4e48\u7f16\u53f7\u5c0f\u7684\u5148\u53bb\u3002\n\n$\\forall i$ \uff0c\u6c42 $i$ \u63a5\u5b8c\u6c34\u7684\u65f6\u95f4\u3002\n\n## \u9898\u89e3\n\n\u6bcf\u4e00\u6b21\u627e\u5230 $t_i\\geq T$ \u4e14 $i$ \u6700\u5c0f\u7684\u4eba\uff0c\u5047\u8bbe\u4e3a $x$ \uff0c\u8ba9\u5b83\u53bb\u63a5\u6c34\u3002\u66f4\u65b0 $T$ \u540e\uff0c\u5728 $[1,x]$ \u4e2d\u4e0d\u65ad\u627e $t_i\\geq T$ \u4e14 $i$ \u6700\u5c0f\u7684 $x$ \u53bb\u63a5\u6c34\uff0c\u5e76\u66f4\u65b0 $T$ \u3002\n\n\u4e0d\u65ad\u91cd\u590d\u6b64\u8fc7\u7a0b\u76f4\u5230\u6240\u6709\u4eba\u90fd\u63a5\u4e86\u6c34\u3002\u627e\u6700\u5c0f\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define fi first\n#define se second\n#define ll long long\n#define mp make_pair\n#define ha 1000000007\n#define ui unsigned ll\n#define pii pair<ll,ll>\n#define pid pair<ll,double>\n\nusing namespace std;\n\ninline ll read()\n{\n    char ch=getchar(); ll f=1,x=0;\n    while (ch<'0' || ch>'9') { if (ch=='-') f=-1; ch=getchar(); }\n    while (ch>='0' && ch<='9') { x=x*10+ch-'0'; ch=getchar(); }\n    return f*x;\n}\n\nconst int N=100005;\nstruct Tree {\n    ll left,right,mn;\n} tree[N<<2];\nll n,p,t[N],ans[N];\n\ninline void pushup(ll x) { tree[x].mn=min(tree[x<<1].mn,tree[x<<1|1].mn); }\n\nvoid build(ll x,ll l,ll r)\n{\n    tree[x].left=l;\n    tree[x].right=r;\n    tree[x].mn=1e9;\n    if (r-l==1) tree[x].mn=t[l];\n    else\n    {\n        ll mid=(l+r)>>1;\n        build(x<<1,l,mid);\n        build(x<<1|1,mid,r);\n        pushup(x);\n    }\n}\n\nvoid update(ll x,ll l,ll r,ll delta)\n{\n    if (l<=tree[x].left && r>=tree[x].right) tree[x].mn=t[l]=delta;\n    else\n    {\n        ll mid=(tree[x].left+tree[x].right)>>1;\n        if (l<mid) update(x<<1,l,r,delta);\n        if (r>mid) update(x<<1|1,l,r,delta);\n        pushup(x);\n    }\n}\n\nll query(ll x,ll delta) //\u627e <=delta \u7684\u6700\u5c0f\u7f16\u53f7\n{\n    if (tree[x].left+1==tree[x].right) return tree[x].left;\n    if (tree[x<<1].mn<=delta) return query(x<<1,delta);\n    else return query(x<<1|1,delta);\n}\n\nll query2(ll x,ll r) //\u5728 [1,r] \u4e2d\u627e\u6700\u5c0f\u503c\u7684\u7f16\u53f7\n{\n    if (tree[x].left>r) return -1;\n    if (tree[x].left+1==tree[x].right) return tree[x].left;\n    if (tree[x<<1].mn<=tree[x<<1|1].mn) return query2(x<<1,r);\n    ll rt=query2(x<<1|1,r);\n    if (rt==-1 || t[rt]>=tree[x<<1].mn) return query2(x<<1,r);\n    return rt;\n}\n\nsigned main()\n{\n    n=read(); p=read();\n    for (ll i=1;i<=n;i++) t[i]=read();\n    build(1,1,n+1);\n    for (ll i=0,cur=0;i<n;)\n    {\n        cur=max(cur,tree[1].mn); //\u8ba9\u5f53\u524d\u65f6\u523b\u6765\u5230\u6570\u5217\u6700\u5c0f\u503c\n        ll x=query(1,cur);\n        ans[x]=cur+=p; i++; //\u8ba9 x \u53bb\u63a5\u6c34\n        update(1,x,x+1,1e18); //t[x]=inf \uff0c\u9632\u6b62\u91cd\u590d\u9009\u53d6\n        for (;x>0;) //\u4e0d\u65ad\u91cd\u590d\u6b64\u8fc7\u7a0b\n        {\n            x=query2(1,x);\n            if (t[x]>cur) break;\n            ans[x]=cur+=p; i++;\n            update(1,x,x+1,1e18);\n        }\n    }\n    for (ll i=1;i<=n;i++) printf(\"%lld \",ans[i]);\n    return 0;\n}\n```",
        "postTime": 1571627836,
        "uid": 29696,
        "name": "Llf0703",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1239C \u3010Queue in the Train\u3011"
    }
]