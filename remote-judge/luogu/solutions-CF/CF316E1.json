[
    {
        "content": "### \u63a8\u5bfc\u516c\u5f0f\n\u7ebf\u6bb5\u6811\u6bcf\u4e00\u4e2a\u8282\u70b9\u5f53\u4e2d\u7ef4\u62a4\u7684\u662fs0\u3001s1\uff0c\u7528\u4e8e\u540e\u7eed\u7684\u516c\u5f0f\u63a8\u5bfc\uff01\u5176\u4e2df\u4e3a\u6590\u6ce2\u90a3\u5951\u6570\u5217\uff1b\u5176\u4e2dl-r\u4e3a\u7ebf\u6bb5\u6811\u6bcf\u6bb5\u6240\u7ef4\u62a4\u7684\u5de6\u53f3\u533a\u95f4\uff01\n```\ns[0] = a[l]*f[0] + a[l+1]*f[1] + a[l+2]*f[2] + ... + a[r]*f[r-l];\ns[1] = a[l]*f[1] + a[l+1]*f[2] + a[l+2]*f[3] + ... + a[r]*f[r-l+1];\ns[2] = a[l]*f[2] + a[l+1]*f[3] + a[l+2]*f[4] + ... + a[r]*f[r-l+2];\ns[3] = a[l]*f[3] + a[l+1]*f[4] + a[l+2]*f[5] + ... + a[r]*f[r-l+3];\n...\ns[x] = a[l]*f[x] + a[l+1]*f[x+1] + a[l+2]*f[x+2] + ... + a[r]*f[r-l+x];\n```\n\u7531\u4e0a\u8ff0\u516c\u5f0f\u53ef\u4ee5\u63a8\u5bfc\u5f97\u5230\uff1a\n```\ns[2] = s[1]+s[0], s[3] = s[2]+s[1] = 2*s[1]+s[0], s[4] = s[3]+s[2] = 3*s[1]+2*s[0];\n```\n\u7531\u6590\u6ce2\u90a3\u5951\u6570\u5217\u6027\u8d28\u4ee5\u53ca\u4ee5\u4e0a\u63a8\u5bfc\u5f97\u5230\uff1a\n```\ns[x] = f[x-1]*s[1] + f[x-2]*s[0]; \n```\n\u7ef4\u62a4\u7ebf\u6bb5\u6811\u5f53\u4e2d\u7684\u6bcf\u4e00\u6bb5\u7684s0\u3001s1;\n\n### \u4e24\u6bb5\u5408\u5e76\uff1a\n\n\u56e0\u4e3a\u5de6\u5b50\u6811\u6bb5\u4e0b\u6807\u59cb\u7ec8\u5728\u53f3\u5b50\u6811\u6bb5\u524d\u9762\uff0c\u6240\u4ee5\u5408\u5e76\u65f6\u5de6\u6bb5\u7684\u5b50\u6811 (s[0] + \u53f3\u6bb5\u5bf9\u5e94\u7684s[x],\u5de6\u5b50\u6811\u6bb5\u6709\u591a\u5c11\u4e2a\u503c\uff0c\u53f3\u5b50\u6811\u6bb5\u5c31\u4ece\u503c\u7684\u4e2a\u6570\u5f00\u59cb!)\n\u4f8b\u5982\u5de6\u6bb5\u6709k\u4e2a\u503c\u90a3\u4e48\u53f3\u6bb5\u5408\u5e76\u65f6\uff0c\u53f3\u6bb5\u503c\u5c31\u4e3as[k],\u5373\u9700\u8981\u6ee1\u8db3\u7b2c\u4e8c\u4e2a\u6761\u4ef6\uff1b\n\u5bf9\u4e8e\u7b2c\u4e09\u4e2a\u6761\u4ef6\u5c31\u662f\u7528\u61d2\u6807\u8bb0\uff0c\u63a8\u5bfc\u516c\u5f0f\uff1a\n\n\u5e26\u5165s[0] \u5f97\u5230 \n```\nans = (a[l]+d)*f[0] + (a[l+1]+d)*f[1] + (a[l+2]+d)*f[2] + ... + (a[r]+d)*f[r-l];\n```\n\u5316\u7b80\u5f97\u5230 \n```\nans = a[l]*f[0] + a[l+1]*f[1] + a[l+2]*f[2] + ... + a[r]*f[r-l] +   d(f[0]+f[1]+f[2]..+f[r-l]) = s[0] + d(f[0]+f[1]+f[2]..+f[r-l]);\n```\n\u6240\u4ee5\u4fee\u6539\u7ebf\u6bb5\u6811\u6bcf\u4e00\u6bb5\u4fdd\u7559\u503c\uff1a\n```\ns[0] = s[0] + d(f[0]+f[1]+f[2]..+f[r-l]); \ns[1] = s[1] + d(f[1]+f[2]+f[3]..+f[r-l+1]);  s[1]\u540c\u7406 \n```",
        "postTime": 1640786600,
        "uid": 542580,
        "name": "wangzhuoyue2021",
        "ccfLevel": 0,
        "title": "Codeforces 316. E1. Summer Homework"
    },
    {
        "content": "\u9898\u76ee\u7ffb\u8bd1\uff1a\n\n\u6709$n$\u4e2a\u6570\uff0c\u652f\u6301$m$\u6b21\u64cd\u4f5c\u3002\n\n$1$ $x$ $y$ \u5c06\u7b2c$x$\u4e2a\u6570\u4fee\u6539\u4e3a$y$\n\n$2$ $l$ $r$ \u5bf9\u8fd9\u4e2a\u533a\u95f4\u6c42\u51fa$\\sum_{i=0}^{r-l}f_{i}a_{i+l}$\u7684\u548c\n\n$3$ $l$ $r$ $d$ \u7ed9\u533a\u95f4\u7684\u6bcf\u4e2a$a_i$\u52a0\u4e0a\u4e00\u4e2a$d$\n\n\u5176\u4e2d$f_i$\u662f\u6590\u6ce2\u62c9\u5951\u6570\u5217\u3002\u8fd9\u91cc$f_0=1,f_1=1$\n\n$1<=n,m<=200000$\n\n\n-----\n\n----\n----\n\n\n\u6211\u4eec\u9996\u5148\u8981\u77e5\u9053\u4e00\u4e2a\u77e5\u8bc6\uff1a\n\n$f_n= f_{n-m}f_{m+1}+f_{n-m-1}f_m$\n\n\u4f46\u662f\u5728\u8fd9\u4e2a\u5730\u65b9\u6211\u4eec\u8981\u6ce8\u610f\uff0c\u4ed6\u7684$f_0=1$\uff0c\u5728\u4e00\u822c\u7684\u4e0a\u8ff0\u5f0f\u5b50\u53ea\u53ef\u4ee5\u7528\u4e8e\n\n$f_0=0,f_1=1$\n\n\u5176\u5b9e\u4e5f\u5c31\u662f\u5f80\u540e\u63a8\u4e00\u9879\n\n\u6240\u4ee5\u8fd9\u91cc$f_{n-1}=f_{n-m-1}f_{m}+f_{n-m-2}f_{m-1}$\n\n\u8fd9\u91cc\u5bf9\u4e8e\u4e00\u4e2a$f_n=f_{n-m}f_m+f_{n-m-1}f_{m-1}$\n\n\u6211\u4eec\u8003\u8651\u7ebf\u6bb5\u6811\u6bcf\u4e2a\u8282\u70b9\u8bb0\u5f55\n\n$$Sum1=\\sum_{x=0}^{r-l}f_xa_{l+x}$$\n\n$$Sum2=\\sum_{x=0}^{r-l}f_{x+1}a_{l+x}$$\n\n\u4e8e\u662f\u8003\u8651\u5408\u5e76\uff0c\n\n$$Sum1[x]=Sum1[lson]+f_{size[lson]-1}Sum2[rson]+f_{size[lson]-2}Sum1[rson]$$\n\n$$Sum2[x]=Sum2[lson]+f_{size[lson]}Sum2[rson]+f_{size[lson]-1}Sum1[rson]$$\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std ;\n\n#define ls (x<<1)\n#define rs (x<<1|1)\n#define N 300000\n#define Mod 1000000000\n\nint n , m ;\nint f[N] , sum[N] , a[N] , lazy[4*N] ;\n\nstruct node{\n    int Sum1 , Sum2 , siz ;\n}W[4*N];\n\nnode operator + (node a , node b){\n    node c ;\n    c.Sum1 = ( a.Sum1 + 1ll * f[a.siz - 1] * b.Sum2 % Mod + 1ll * (a.siz >= 2 ) * f[max( a.siz - 2 , 0 )] * b.Sum1 % Mod ) % Mod ;\n    c.Sum2 = ( a.Sum2 + 1ll * f[a.siz] * b.Sum2 % Mod + 1ll * f[a.siz - 1] * b.Sum1 % Mod ) % Mod ;\n    c.siz = a.siz + b.siz ;\n    return c ;\n}\n\nvoid Init(){\n    f[0] = 1 , f[1] = 1 ; sum[0] = 1 ;\n    for(int i = 2 ; i <= N - 5 ; i++ ) f[i] = ( f[i - 1] + f[i - 2] ) % Mod ;\n    for(int i = 1 ; i <= N - 5 ; i++ ) sum[i] = ( sum[i - 1] + f[i] ) % Mod ;\n    return ;\n}\n\nvoid pushdown(int x){\n    if( lazy[x] ){\n        lazy[ls] = ( lazy[ls] + lazy[x] ) % Mod ;\n        lazy[rs] = ( lazy[rs] + lazy[x] ) % Mod ;\n        if( W[ls].siz ) W[ls].Sum1 = ( W[ls].Sum1 + 1ll * lazy[x] * ( sum[W[ls].siz - 1] ) % Mod ) % Mod ;\n        W[ls].Sum2 = ( W[ls].Sum2 + 1ll * lazy[x] * ( sum[W[ls].siz] - sum[0] ) % Mod ) % Mod ;\n        if( W[rs].siz ) W[rs].Sum1 = ( W[rs].Sum1 + 1ll * lazy[x] * ( sum[W[rs].siz - 1] ) % Mod ) % Mod ;\n        W[rs].Sum2 = ( W[rs].Sum2 + 1ll * lazy[x] * ( sum[W[rs].siz] - sum[0] ) % Mod ) % Mod ;\n        lazy[x] = 0 ;\n        return ;\n    }\n}\n\nvoid build(int x , int l , int r ){\n    W[x].siz = ( r - l + 1 ) ;\n    if( l == r ){\n        W[x].Sum1 = a[l] * f[0] % Mod ;\n        W[x].Sum2 = a[l] * f[1] % Mod ;\n        return ;\n    }\n    int mid = ( l + r ) >> 1 ;\n    build( ls , l , mid ) ; build( rs , mid + 1 , r ) ;\n    W[x] = W[ls] + W[rs] ;\n    return ;\n}\n\nvoid update(int x , int l , int r , int pos , int k ){\n    if( l == r ){\n        W[x].Sum1 = k * f[0] % Mod ;\n        W[x].Sum2 = k * f[1] % Mod ;\n        return ;\n    }\n    pushdown( x ) ;\n    int mid = ( l + r ) >> 1 ;\n    if( pos <= mid ) update( ls , l , mid , pos , k ) ;\n    else update( rs , mid + 1 , r , pos , k ) ;\n    W[x] = W[ls] + W[rs] ;\n    return ;\n}\n\nvoid modify(int x , int l , int r , int ll , int rr , int k ){\n    if( l == ll && r == rr ){\n        lazy[x] = ( lazy[x] + k ) % Mod ;\n        W[x].Sum1 = ( W[x].Sum1 + lazy[x] * ( sum[W[x].siz - 1] ) % Mod ) % Mod ;\n        W[x].Sum2 = ( W[x].Sum2 + lazy[x] * ( sum[W[x].siz] - sum[0] ) % Mod ) % Mod ;\n        return ;\n    }\n    pushdown( x ) ;\n    int mid = ( l + r ) >> 1 ;\n    if( rr <= mid ) modify( ls , l , mid , ll , rr , k ) ;\n    else if( ll > mid ) modify( rs , mid + 1 , r , ll , rr , k ) ;\n    else modify( ls , l , mid , ll , mid , k ) , modify( rs , mid + 1 , r , mid + 1 , rr , k ) ;\n    W[x] = W[ls] + W[rs] ;\n}\n\nnode query(int x , int l , int r , int ll , int rr ){\n    if( l == ll && r == rr ) return W[x] ;\n    pushdown( x ) ;\n    int mid = ( l + r ) >> 1 ;\n    if( rr <= mid ) return query( ls , l , mid , ll , rr ) ;\n    else if( ll > mid ) return query( rs , mid + 1 , r , ll , rr ) ;\n    else return query( ls , l , mid , ll , mid ) + query( rs , mid + 1 , r , mid + 1 , rr ) ;\n}\n\nint main()\n{\n    scanf(\"%d%d\" , &n , &m ) ;\n\n    Init() ;\n    for(int i = 1 ; i <= n ; i++ ) scanf(\"%d\" , &a[i] ) ;\n    build( 1 , 1 , n ) ;\n    for(int i = 1 ; i <= m ; i++ ){\n        int op , l , r , d ;\n        scanf(\"%d%d%d\" , &op , &l , &r ) ;\n        if( op == 1 ) update( 1 , 1 , n , l , r ) ;\n        if( op == 2 ) printf(\"%d\\n\" , query( 1 , 1 , n , l , r ).Sum1 % Mod ) ;\n        if( op == 3 ){\n            scanf(\"%d\" , &d ) ;\n            modify( 1 , 1 , n , l , r , d ) ;\n        }\n    }\n    return 0 ;\n}\n```\n",
        "postTime": 1565618858,
        "uid": 119610,
        "name": "Regimes",
        "ccfLevel": 7,
        "title": "CF316E1 Summer Homework"
    }
]