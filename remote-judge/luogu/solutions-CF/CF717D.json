[
    {
        "content": "# \u9898\u610f\n\n$n$\u5806\u77f3\u5b50\uff0c\u6bcf\u5806\u77f3\u5b50\u7684\u4e2a\u6570\u5728$[0,x]$\u4e4b\u95f4\u6839\u636e\u7ed9\u51fa\u7684\u6982\u7387\u5206\u5e03$P(X)$\u968f\u673a\uff0c\u95ee\u6700\u540e\u5148\u624b\u83b7\u80dc\u7684\u6982\u7387\u3002\n\n# \u9898\u89e3\n\n\u8fd9\u662f\u4e00\u4e2a\u7ecf\u5178\u7684$Nim$\u6e38\u620f\uff0c\u6709\u5982\u4e0b\u5f15\u7406\uff1a$n$\u5806\u77f3\u5b50\u5148\u624b\u83b7\u80dc\u7684\u5145\u8981\u6761\u4ef6\u662f$\\bigoplus\\limits_{i=1}^na_i\\neq0$\u3002\u53ef\u4ee5\u7528$SG$\u51fd\u6570\u8bc1\u660e\uff0c\u4e0d\u4f1a$SG$\u51fd\u6570\u7684\u8bf7\u51fa\u95e8\u53f3\u8f6c\u6a21\u677f\u533a\u3002\n\n\u4e0d\u8003\u8651$n$\u7684\u8303\u56f4\u9650\u5236\uff0c\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528$DP$\u89e3\u51b3\u8be5\u95ee\u9898\uff0c\u4ee4$f_{i,j}$\u4e3a\u524d$i$\u5806\u77f3\u5b50\u5f02\u6216\u548c\u4e3a$j$\u7684\u6982\u7387\uff0c\u6709\u8f6c\u79fb\u65b9\u7a0b$f_{i,j}=\\sum\\limits_{k=0}^{127}f_{i-1,k}P(j\\oplus k)$\u5728$O(nk)$\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u89e3\u51b3\u8be5\u95ee\u9898\u3002\n\n\u89c2\u5bdf\u5230\u663e\u7136\u5b9e\u9645\u4e0a\u8fd9\u4e2a\u8f6c\u79fb\u65b9\u7a0b\u53ef\u4ee5\u6539\u5199\u4e3a\u4e24\u4e2a\u77e9\u9635\u7684\u4e58\u79ef\uff0c\u5373$F=F'*A$\uff0c\u5176\u4e2d$A$\u77e9\u9635\u4e3a\u8f6c\u79fb\u77e9\u9635\uff0c$F,F'$\u77e9\u9635\u5206\u522b\u4e3a\u76ee\u524d\u7b54\u6848\u77e9\u9635\u548c\u4e0a\u4e00\u6b21\u7b54\u6848\u77e9\u9635\uff0c\u6839\u636e\u77e9\u4e58\u7684\u5b9a\u4e49\u5f0f\u6211\u4eec\u53ef\u4ee5\u63a8\u51fa$\\forall i,j\\in[0,127],A_{i,j}=P(i\\oplus j)$\uff0c\u7136\u540e\u6839\u636e\u77e9\u4e58\u8fd0\u7b97\u7684\u7ed3\u5408\u5f8b$F_{ans}=F_{init}A^n$\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u77e9\u9635\u5feb\u901f\u5e42\u5728$O(127^3logn)$\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u89e3\u51b3\u8be5\u95ee\u9898\u3002\n\n\u603b\u7684\u6765\u8bf4\uff0c\u8fd9\u9898\u8fd8\u662f\u633a\u5957\u8def\u7684\uff0c\u5199\u51fa$DP$\u8f6c\u79fb\u65b9\u7a0b\u7136\u540e\u7528\u77e9\u4e58\u6539\u5199\u5c31\u505a\u5b8c\u4e86\uff0c\u5e94\u8be5\u7b97\u662f\u8fd9\u7c7b\u9898\u76ee\u91cc\u7684\u57fa\u7840\u9898\u5427\u3002\n\n# Code\n\n```c++\n#include <bits/stdc++.h>\nusing namespace std;\nusing db = double;\n\nconst int B = 128; int n, x; db p[130];\nstruct Matrix {\n    db a[130][130];\n    Matrix() { memset(a, 0, sizeof(a)); }\n    void init() { for(int i = 0; i < B; i++) a[i][i] = 1; }\n} A;\nMatrix operator*(const Matrix& a, const Matrix& b) {\n    Matrix res;\n    for(int i = 0; i < B; i++)\n        for(int j = 0; j < B; j++)\n            for(int k = 0; k < B; k++)\n                res.a[i][j] += a.a[i][k] * b.a[k][j];\n    return res;\n}\nMatrix qpow(Matrix a, int b) {\n    Matrix res; res.init();\n    while(b) {\n        if(b & 1) res = res * a;\n        a = a * a, b >>= 1;\n    }\n    return res;\n}\nsigned main() {\n    scanf(\"%d %d\", &n, &x);\n    for(int i = 0; i <= x; i++)\n        scanf(\"%lf\", &p[i]);\n    for(int i = 0; i < B; i++)\n        for(int j = 0; j < B; j++)\n            A.a[i][j] = p[i ^ j];\n    A = qpow(A, n), printf(\"%.10lf\\n\", 1 - A.a[0][0]);\n    return 0;\n}\n```\n\n",
        "postTime": 1602299353,
        "uid": 145566,
        "name": "jhdonghj",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF717D \u3010Dexterina\u2019s Lab\u3011"
    }
]