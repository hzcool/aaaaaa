[
    {
        "content": "\u8003\u8651\u6570\u4e0d\u6ee1\u8db3\u6761\u4ef6\u7684\u4e09\u5143\u7ec4\u4e2a\u6570\u3002\n\n\u90a3\u4e48\u4e09\u5143\u7ec4\u4e2d\u5fc5\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u51fa\u5ea6\u4e3a2\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u82e5\u51fa\u5ea6\u4e3a$x$\u5219\u8d21\u732e\u4e86$\\frac {x(x-1)}{2}$\u3002\n\n\u4ece\u5c0f\u5230\u5927\u626b\u4e00\u904d\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5f53\u524d\u70b9\u548c\u54ea\u4e9b\u70b9\u7684\u8fde\u8fb9\u88ab\u53cd\u8f6c\u5947\u6570\u6b21\u3002\n\n\u6ce8\u610f\u8fd9\u9053\u9898\u7684\u7ebf\u6bb5\u6811\u662f\u53ea\u9700\u8981\u533a\u95f4\u7ffb\u8f6c\uff0c\u5168\u5c40\u6c42\u548c\u7684\u3002\n\n$Code$\n```cpp\n#include<bits/stdc++.h>\n#define maxn 100005\n#define LL long long\n#define lc u<<1\n#define rc lc|1\nusing namespace std;\n\nint n,K,s[maxn];\nint sm[maxn<<2],len[maxn<<2],tg[maxn<<2],cs;\nvector<int>pL[maxn],pR[maxn];\n\nvoid Build(int u,int l,int r){\n\tsm[u] = len[u] = r-l+1;\n\tif(l==r) return;\n\tint m=l+r>>1;\n\tBuild(lc,l,m),Build(rc,m+1,r);\n}\nvoid dtp(int u){ sm[u] = len[u] - sm[u] , tg[u] ^= 1; }\nvoid dt(int u){ if(tg[u]) dtp(lc),dtp(rc),tg[u]=0; }\nvoid ins(int u,int l,int r,int ql,int qr){\n\tif(ql>r||l>qr) return;\n\tif(ql<=l&&r<=qr) return (void)(dtp(u));\n\tint m=l+r>>1;dt(u);\n\tins(lc,l,m,ql,qr),ins(rc,m+1,r,ql,qr);\n\tsm[u] = sm[lc] + sm[rc];\n}\n\nint main(){\n\tscanf(\"%d%d\",&n,&K);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&s[i]);\n\tsort(s+1,s+1+n);\n\tfor(int x,y;K--;){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tx = lower_bound(s+1,s+1+n,x)-s;\n\t\ty = upper_bound(s+1,s+1+n,y)-s-1;\n\t\tpR[x].push_back(y);\n\t\tpL[y+1].push_back(x);\n\t}\n\tLL ans = n * (n-1ll) * (n-2ll) / 6;\n\tBuild(1,1,n);\n\tfor(int i=1;i<=n;i++){\n\t\tins(1,1,n,i,i);\n\t\tfor(int j=0;j<pL[i].size();j++)\n\t\t\tins(1,1,n,pL[i][j],i-1),cs^=1;\n\t\tfor(int j=0;j<pR[i].size();j++)\n\t\t\tins(1,1,n,i,pR[i][j]),cs^=1;\n\t\tint t = sm[1]-cs;\n\t\tans -= 1ll * t * (t-1) / 2;\n\t}\n\tprintf(\"%lld\\n\",ans);\n}\n```\n",
        "postTime": 1588928004,
        "uid": 30037,
        "name": "Freopen",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF283E \u3010Cow Tennis Tournament\u3011"
    },
    {
        "content": "## [\u9898\u76ee\u5927\u610f](https://www.luogu.org/problem/CF283E):\n**\u7ed9\u51fan\u4e2a\u6b63\u6574\u6570\uff0c\u7531\u5927\u5c0f\u786e\u5b9a\u6570\u4e0e\u6570\u4e4b\u95f4\u7684\u6307\u5411\u5173\u7cfb\uff08\u5927\u7684\u6307\u5411\u5c0f\u7684\uff09\uff0c\u5176\u4e2d\u5927\u5c0f\u5904\u5728\u67d0\u4e00\u533a\u95f4\u7684\u6570\u6307\u5411\u5173\u7cfb\u5168\u90e8\u53d6\u53cd\uff0c\u95een\u4e2a\u6570\u4e4b\u95f4\u7684\u4e09\u5143\u73af\u4e2a\u6570**  \n  \n\u6b63\u5728\u505a\u5b66\u957f\u63a8\u8350\u7684\u6570\u636e\u7ed3\u6784\u9898\uff0c\u83ab\u540d\u770b\u5230\u4e86\u8fd9\u9053\u6570\u5b66\uff08\u849f\u84bb\u611f\u89c9\u5bf9\u8fd9\u79cd\u6709\u6570\u5b66\u6210\u5206\u7684\u9898\u76f8\u5f53\u65e0\u529b\u554a\uff09\uff0c\u4e8e\u662f\u672c\u849f\u84bb\u60f3\uff08kan ti jie\uff09\u4e86\u597d\u4e45\u597d\u4e45\uff0c\u7ec8\u4e8e\u53d7\u5230\u5b66\u957f\u6570\u5b66+\u6570\u636e\u7ed3\u6784\u7684\u771f\u4f20\u5207\u4e86\u8fd9\u9898\uff08\u5148orz\u5207\u9898\u7684\u5927\u4f6c\u4e00\u6ce2\uff09  \n# \u5177\u4f53\u601d\u8def\n### first\n  \u4e0d\u7ba1\u600e\u6837\uff0c$s_i$\u6570\u503c\u8303\u56f4\u5f88\u5927\uff0c\u800c\u533a\u95f4\u53d6\u53cd\u4e5f\u662f\u4ece\u6570\u503c\u5165\u624b\uff0c\u65e2\u7136\u5982\u6b64\uff0c\u4e0d\u7ba1\u4e09\u4e03\u4e8c\u5341\u4e00\uff0c\u5148\u628a\u6570\u503c\u79bb\u6563\u5316\u4e00\u6ce2\uff0c\u7528\u6570\u503c\u5927\u5c0f\u7684\u6392\u540d\u4ee3\u66ff\u6570\u503c\uff0c\u5c06\u6570\u503c\u8303\u56f4\u5316\u4e3a$1-n$\uff0c\u7136\u540e\u628a\u8981\u53d6\u53cd\u7684\u533a\u95f4\u4e24\u7aef\u505a\u540c\u6837\u7684\u64cd\u4f5c\u3002\u53c8\u56e0\u4e3a\u53cd\u6b63\u662f\u6570\u503c\u533a\u95f4\u4e0a\u7684\u53d6\u53cd\uff0c\u5e72\u8106\u628a\u6240\u6709\u6570\u518d\u6392\u4e0b\u5e8f,\u8fd9\u6837\u57fa\u672c\u64cd\u4f5c\u5c31\u5b8c\u6210\u4e86\u3002\n### second  \n  \u4e09\u5143\u73af\u4e0d\u597d\u76f4\u63a5\u6c42\uff0c\uff0c\u7ec8\u4e8e\u53d1\u73b0\u53ef\u4ee5 **\u5bb9\u65a5** \u4e00\u6ce2\uff0c\u5148\u6c42\u51fa\u6240\u6709\u65b9\u6848\uff1a  \n$$C_n^3$$  \n    \u7136\u540e\u662f\u4e0d\u7b26\u5408\u9898\u610f\u7684\u65b9\u6848\u6570\uff0c\u672c\u849f\u84bb\u89c9\u5f97\u5206\u4e3a\u4e24\u79cd\uff1a  \n1.  \u4e00\u7fa4\u725b\u4e4b\u95f4\u4e92\u76f8\u90fd\u4e0d\u53ef\u4ee5\u51fb\u8d25\u5bf9\u65b9\uff08\u5373\u4e00\u5806\u76f8\u7b49\u7684\u6b63\u6574\u6570\uff09\uff0c\u8fd9\u6837\u7684\u4e00\u5806\u6570\u4e4b\u95f4\u6ca1\u6709\u6307\u5411\u6027\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u6570\u7ec4$cnt_x$\uff0c\u6765\u8bb0\u5f55\u6570x\u51fa\u73b0\u7684\u4e2a\u6570\uff0c\u800c\u660e\u663e\u770b\u5f97\u51fa\u6765\uff0c\u53ea\u8981\u5728\u6bcf\u5806\u8fd9\u4e9b\u76f8\u7b49\u7684\u6570\u4e2d\u4efb\u610f\u53d62\u4e2a\uff0c\u5219\u65b9\u6848\u4e0d\u5408\u7406\u3002\u7efc\u4e0a\uff0c\u8be5\u60c5\u51b5\u7684\u4e0d\u5408\u7406\u65b9\u6848\u4e3a(\u5f0f\u5b50\u91cc\u7684$s_i$\u4e3a\u79bb\u6563\u5316\u5904\u7406\u8fc7\u7684$s_i$\u6570\u7ec4)\uff1a  \n$$\\sum_{i=s_1}^{s_n}{C_{cnt_{i}}^2}$$  \n2.  \u4e00\u5934\u725b\u5f88\u52c7\uff0c\u53ef\u4ee5\u641e\u5176\u4ed6\u5f88\u591a\u5934\u725b\uff08\u5373\u4e00\u4e2a\u6570\u5f88nb\uff0c\u53ef\u4ee5\u6307\uff08cha\uff09\u5411\u5176\u4ed6\u7684\u5f88\u591a\u4e2a\u6570\uff09\u3002\u800c\u4e00\u4e2a\u6570x\u80fd\u6307\u5411\u7684\u6570\u6709\u4e14\u4ec5\u6709\u4e24\u79cd\u60c5\u51b5\uff08~~\u53c8\u662f\u4e24\u79cd\u2026\u2026~~\uff09  \uff1aa.\u4e00\u4e2a\u6570y\u6bd4x\u5c0f\u4e14\u672a\u88ab\u7ecf\u8fc7x\u7684\u533a\u95f4\u7ecf\u8fc7\u5947\u6570\u6b21\uff08\u5373\u672a\u88ab\u7ecf\u8fc7x\u7684\u533a\u95f4\u7ed9d\u6389\uff09\uff1bb.\u4e00\u4e2a\u6570z\u6bd4x\u5927\u4e14\u88ab\u7ecf\u8fc7x\u7684\u533a\u95f4\u7ecf\u8fc7\u5947\u6570\u6b21\uff08\u5373\u88ab\u7ecf\u8fc7x\u7684\u533a\u95f4\u7ed9d\u6389\uff09\u3002\u8bbe\u7b2c\u4e00\u79cd\u60c5\u51b5\u5b58\u5728\u53ef\u80fd\u7684y\u6709$res_1$\u79cd\uff0c\u7b2c\u4e8c\u79cd\u60c5\u51b5\u5b58\u5728\u53ef\u80fd\u7684z\u6709$res_2$\u79cd\uff0c\u90a3\u4e48\u663e\u7136\uff0c\u5728$res_1$\u548c$res_2$\u4e2d\u53d6\u51fa\u4efb\u4e24\u4e2a\u548cx\u642d\u914d\u90fd\u4f1a\u5bfc\u81f4\u65b9\u6848\u4e0d\u5408\u7406\u3002\u8bbe$res=res_1+res_2$\uff0c\u5219\u4e0d\u5408\u7406\u65b9\u6848\u6570\u4e3a\uff1a  $C_{res}^2$\u3002\u800c\u603b\u7684\u4e0d\u5408\u7406\u65b9\u6848\u4e66\u5982\u4e0b\uff1a\n$$\\sum_{i=s_1}^{s_n}{C_{res_i}^2}$$  \n  \n### third  \n\u7531\u4e0a\u603b\u7ed3\u540e\uff0c\u6c42\u89e3\u7b54\u6848\u7684\u601d\u8def\u6e05\u6670\u5f88\u591a\u4e86\u5462\uff08\u6ca1\u6709\u7684\u8bdd\u522b\u55b7\u849f\u84bb\uff09\u3002\u4f46\u770b\u770b\u4e0a\u9762\u6211\u4eec\u8981\u6c42\u7684\u4e24\u4e2a\u4e1c\u897f\uff0c$C_{cnt_i}^2$\u5f88\u597d\u6c42\uff0c\u4f46\u90a3\u4e2a\u5f88\u52c7\u7684\u725b\u7684\u60c5\u51b5\u5c31\u6709\u70b9%\uffe5&\u2026\u2026  \n  \n\u5173\u952e\u662f\u7ecf\u8fc7x\u7684\u533a\u95f4\u8981\u7b97\u3001\u800c\u6ca1\u7ecf\u8fc7\u7684\u4e0d\u80fd\u7b97\u8fdb\u53bb\u8fd9\u4e2a\u4e0d\u597d\u5904\u7406\uff0c\u83ab\u975e\u4e00\u4e2a\u4e2a\u6570\u503c\u66b4\u529b\u679a\u4e3e\uff1f\uff1f\u8fd9\u6837\u80af\u5b9a\u8d85\u65f6\uff0c\u600e\u4e48\u529e\u5462\uff1f\uff1f  \n  \n\u672c\u849f\u84bb\u8111\u5b50\u8f6c\u5f97\u6162\uff0c\u641e\u4e0d\u61c2\u600e\u4e48\u5904\u7406\uff0c\u53bb\u95ee\u5b66\u957f\uff0c\u5b66\u957f\u8bf4\u8981\u7528\u626b\u63cf\u7ebf\uff0c\u6211\u8bf4\u6211\u4e0d\u4f1a\uff0c\u4e8e\u662f\u5b66\u957f\u8010\u5fc3\u5730\u8ddf\u6211\u8bb2\u4e86\u626b\u63cf\u7ebf\uff0c\u6211\u8ba4\u771f\u6ef4\u542c\uff0c\u7136\u540e\u2026\u2026\u6ca1\u542c\u61c2\u3002  \n    \n\u5173\u4e8e\u5b66\u957f\u8bb2\u7684\u626b\u63cf\u7ebf\uff0c\u6211\u53ea\u8bb0\u5f97\u597d\u50cf\u662f\u5148\u6309\u533a\u95f4\u5de6\u754c$sort$\u4e00\u6ce2\uff0c\u518d\u64cd\u4f5c\u4e00\u6ce2\uff0c\u518d\u6309\u53f3\u754c$sort$\u4e00\u6ce2\uff0c\u518d\u64cd\u4f5c\u4e00\u6ce2\uff0c\u7136\u540e\u5c31\u6709\u7b54\u6848\u4e86\u2026\u2026  \n\n\u4f46\u6211\u4e0d\u4f1a\u64cd\u4f5c\u554a\uff01\uff01  \n    \n\u7b97\u4e86\uff0c\u6309\u7167\u5b66\u957f\u7684\u5de6\u754c$sort$\u5148yy\u4e00\u6ce2\uff0c\u7075\u5149\u4e00\u95ea\uff01\u4ece$s_1$\u5f00\u59cb\u904d\u5386\u5230$s_n$\uff0c\u6bcf\u5faa\u73af\u5230\u4e00\u4e2a\u70b9$i$\u5c31\u628a\u5de6\u754c\u5c0f\u4e8e$i$\u7684\u8fd8\u672a\u53d6\u53cd\u7684\u533a\u95f4\u7ed9\u8fdb\u884c\u53d6\u53cd\uff0c    \n  \n\u7136\u540e\u628a\u533a\u95f4\u5de6\u754c$l$\u538b\u5165\u4ee5\u53f3\u754c$r$\u4e3a\u5173\u952e\u8bcd\u7684\u4e00\u4e2a\u52a8\u6001\u6570\u7ec4\uff08$vector$\uff09$e[r]$\uff0c\u7136\u540e\u518d\u628a$e[i-1]$\u91cc\u7684\u5de6\u754c\u4e00\u4e00\u53d6\u51fa\uff0c\u518d\u8fdb\u884c\u4e00\u6b21\u53d6\u53cd\uff08\u4e24\u6b21\u53d6\u53cd\u4fbf\u4e3a\u8fd8\u539f\uff0c\u5c31\u76f8\u5f53\u4e8e\u628a\u533a\u95f4\u7ed9\u6392\u9664\u4e86\uff09\u3002\n  \n### forth  \n    \n\u5177\u4f53\u7684\u533a\u95f4\u53d6\u53cd\u4f7f\u7528\u7ebf\u6bb5\u6811\u5b9e\u73b0\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u5f88\u6109\u5feb\u5730\u5207\u9898\u4e86  \n    \n\u65f6\u95f4\u590d\u6742\u5ea6$O(L+klogL)$\uff0c$L$\u4e3as\u4e2d\u4e0d\u540c\u6570\u503c\u7684\u4e2a\u6570\uff0c \u611f\u89c9\u5e94\u8be5\u6bd4$O(n+klogn)$\u7684\u671f\u671b\u8981\u597d\u4e9b  \n  \n### fifth  \n\u795d\u5927\u5bb6\u5207\u9898\u6109\u5feb  \n  \n### sixth\n  \n    \n\u9644\u4e0a\u4ee3\u7801     \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<vector>\nusing namespace std;\n#define in read()\n#define fur(i,a,b) for(int i=a;i<=b;i++)\n#define xx 110000\n#define int long long\n#define ll long long\ninline int read()\n{\n    int x=0,f=1;char ch=getchar();\n    for(;!isalnum(ch);ch=getchar()) if(ch=='-') f=-1;\n    for(;isalnum(ch);ch=getchar()) x=x*10+ch-'0';\n    return x*f;\n}\nint s2[xx],s1[xx],s[xx],cnt[xx];    //s\u5b58\u6218\u6597\u529b\uff0cs2\u5b58\u6392\u5e8f\u540e\u7684\uff0cs1\u5b58s2\u53bb\u91cd\u540e\u7684\uff0c\u518d\u5c06s1\u91cc\u7684\u6392\u540d\u8d4b\u5230s\u4e0a\nint n,c[4][xx],all=0;  //c\u5b58\u7ec4\u5408\u6570\uff08\u5f53\u7136\u4e5f\u53ef\u4ee5\u5728\u7ebf\u7b97\uff09\uff0call\u8bb0\u5f55s2\u957f\u5ea6\nstruct prom{int a,b;}t[xx];  //\u5b58\u50a8\u533a\u95f4\nstruct linetree{int l,r,tot,sum;bool tag;}lt[xx<<2];  //tot\u5b58\u50a8\u603b\u6570\uff0csum\u5b58\u50a8\u88ab\u53d6\u53cd\u6570\ninline bool cmp(prom x,prom y){return x.a<y.a;}\nvector<int>e[xx];\ninline int look2(int x)  //\u53d6\u51fas1\u4e2d\u7b2c\u4e00\u4e2a\u5c0f\u4e8e\u7b49\u4e8ex\u7684\u6570\u7684\u4e0b\u6807\uff0c\u5373\u6392\u540d\n{\n    int head=1,tail=all,ans=1;\n    while(head<=tail)\n    {\n        int mid=(head+tail)>>1;\n        if(s1[mid]<=x) ans=mid,head=mid+1;\n        else tail=mid-1;\n    }\n    return ans;\n}\ninline int look1(int x)  //\u53d6\u51fas1\u4e2d\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8ex\u7684\u6570\n{\n    int head=1,tail=all,ans=all;\n    while(head<=tail)\n    {\n        int mid=(head+tail)>>1;\n        if(s1[mid]>=x) ans=mid,tail=mid-1;\n        else head=mid+1;\n    }\n    return ans;\n}\n\n//------------\n\n//\u7ebf\u6bb5\u6811\ninline void up(int k)\n{\n    int q=k<<1;\n    lt[k].sum=lt[q].sum+lt[q+1].sum;\n    lt[k].tot=lt[q].tot+lt[q+1].tot;\n}\ninline void down(int k)\n{\n    if(lt[k].tag)\n    {\n        int q=k<<1;\n        lt[q].sum=lt[q].tot-lt[q].sum;\n        lt[q+1].sum=lt[q+1].tot-lt[q+1].sum;\n        lt[q].tag^=1;\n        lt[q+1].tag^=1;\n        lt[k].tag^=1;\n    }\n}\ninline void build(int k,int i,int j)\n{\n    lt[k].l=i;\n    lt[k].r=j;\n    if(i==j)\n    {\n        lt[k].tot=cnt[i];\n        return;\n    }\n    int q=k<<1,mid=(i+j)>>1;\n    build(q,i,mid);\n    build(q+1,mid+1,j);\n    up(k);\n}\ninline void change(int k,int i,int j)\n{\n    if(i<=lt[k].l&&j>=lt[k].r)\n    {\n        lt[k].sum=lt[k].tot-lt[k].sum;\n        lt[k].tag^=1;\n        return;\n    }\n    down(k);\n    int q=k<<1,mid=lt[q].r;\n    if(i<=mid) change(q,i,j);\n    if(j>mid) change(q+1,i,j);\n    up(k);\n}\ninline int askus(int k,int i,int j) //\u8bbf\u95ee\u533a\u95f4\u4e2d\u6ca1\u6709\u88ab\u53d6\u53cd\u7684\u6570\u7684\u4e2a\u6570\n{\n\tif(i>j) return 0;\n    if(i<=lt[k].l&&j>=lt[k].r) return lt[k].tot-lt[k].sum;\n    down(k);\n    int q=k<<1,mid=lt[q].r,res=0;\n    if(i<=mid) res+=askus(q,i,j);\n    if(j>mid) res+=askus(q+1,i,j);\n    return res;\n}\ninline int askrs(int k,int i,int j) //\u8bbf\u95ee\u533a\u95f4\u4e2d\u88ab\u53d6\u53cd\u7684\u6570\u7684\u4e2a\u6570\n{\n\tif(i>j) return 0;\n    if(i<=lt[k].l&&j>=lt[k].r) return lt[k].sum;\n    down(k);\n    int q=k<<1,mid=lt[q].r,res=0;\n    if(i<=mid) res+=askrs(q,i,j);\n    if(j>mid) res+=askrs(q+1,i,j);\n    return res;\n}\n//\u7ebf\u6bb5\u6811\n\n//------------\n\nsigned main()\n{\n    n=in;\n    fur(i,1,n)\n    {\n        c[0][i]=1;c[1][i]=i;\n        fur(j,2,min(i,3ll)) c[j][i]=c[j-1][i-1]+c[j][i-1];\n    }\n    int k=in;\n    fur(i,1,n) s2[i]=s1[i]=s[i]=in;\n    sort(s2+1,s2+n+1);\n    fur(i,1,n)\n    {\n        while(s2[i]==s2[i+1]) i++;\n        s1[++all]=s2[i];\n    }\n    fur(i,1,n) s[i]=look1(s[i]),cnt[s[i]]++;\n    sort(s+1,s+n+1);\n    build(1,1,s[n]);\n    fur(i,1,k) t[i].a=in,t[i].b=in;\n    fur(i,1,k) t[i].a=look1(t[i].a),t[i].b=look2(t[i].b);\n    sort(t+1,t+k+1,cmp);\n    int ans=c[3][n],tnt=1;\n    fur(i,1,s[n])\n    {\n        while(t[tnt].a<=i&&tnt<=k)  //\u5148\u7b97\u533a\u95f4\u5de6\u754c\u5c0f\u4e8e\u7b49\u4e8e\u5f53\u524di\u7684\n        {\n            change(1,t[tnt].a,t[tnt].b);\n            e[t[tnt].b].push_back(t[tnt].a);\n            tnt++;\n        }\n        fur(j,0,(int)e[i-1].size()-1) change(1,e[i-1][j],i-1ll);  //\u518d\u5220\u533a\u95f4\u53f3\u754c\u5c0f\u4e8e\u5f53\u524di\u7684\n        int res=0;\n        res+=askus(1,1,i-1);\n        res+=askrs(1,i+1,s[n]);\n        ans-=cnt[i]*c[2][res];\n\t\tans-=c[2][cnt[i]];\n\t}\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n\n```",
        "postTime": 1563362261,
        "uid": 212955,
        "name": "wyd_forever",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF283E \u3010Cow Tennis Tournament\u3011"
    },
    {
        "content": "\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u4e09\u5934\u725b\u65e0\u6cd5\u5f62\u6210\u4e00\u4e2a\u5408\u6cd5\u7684\u4e09\u5143\u7ec4\uff0c\u90a3\u4e48\u4e00\u5b9a\u6709\u4e00\u5934\u725b\u53ef\u4ee5\u6253\u8d25\u5176\u4ed6\u4e24\u5934\u725b\u3002\n\n\u6240\u4ee5\uff0c\u5047\u8bbe\u7b2ci\u5934\u725b\u53ef\u4ee5\u6253\u8d25 $d_i$ \u5934\u725b\uff0c\u90a3\u4e48\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u6210\uff1a\n#### \u6240\u6709\u7684\u7ec4\u5408-\u4e0d\u5408\u6cd5\u7684\u7ec4\u5408\n### $=\\binom{n}{3}-\\sum\\limits_{i=1}^{n}{\\binom{d_i}{2}}$\n\n#### 1. \u79bb\u6563\u5316\uff0c\u6309\u7167\u80fd\u529b\u5f3a\u5ea6\u6392\u5e8f\n#### 2. \u5bf9\u4fee\u6539\u533a\u95f4\u5206\u522b\u6309\u7167$l$\u548c$r$\u5206\u522b\u6392\u5e8f\n\n#### 3. \u53cc\u6307\u9488 + \u7ebf\u6bb5\u6811\u5904\u7406\u51fa\u5176\u4ed6\u725b\u4e0e\u5b83\u7684\u80dc\u8d1f\u662f\u5426\u53d6\u53cd\n\u8fd9\u9700\u8981\u5904\u7406\u6240\u6709\u8986\u76d6\u4e86\u8be5\u725b\u7684\u64cd\u4f5c\n\n\u4ece$i$\u79fb\u52a8\u5230$i+1$\u65f6\uff0c\u8003\u8651\u5305\u542b\u4e86\u5f53\u524d\u725b\u7684\u533a\u95f4\u5982\u4f55\u53d8\u5316\u3002\n\n\u9996\u5148\uff0c\u6709\u4e00\u4e9b\u65e7\u7684\u53f3\u7aef\u70b9\u4e3a$S_i$\u7684\u7684\u533a\u95f4\u4e0d\u518d\u8986\u76d6\u5f53\u524d\u725b\uff0c\u540c\u65f6\u4e5f\u6709\u4e00\u4e9b\u65b0\u7684\u5de6\u7aef\u70b9\u4e3a$S_{i-1}$\u7684\u533a\u95f4\u8986\u76d6\u4e86\u5b83\uff0c\u8fd9\u4e24\u4e2a\u4fe1\u606f\u7528\u4e24\u4e2a\u6307\u9488\u5206\u522b\u7ef4\u62a4\u3002\n\n\u52a0\u5165\u548c\u5220\u9664\u4e00\u4e2a\u533a\u95f4\u7b49\u540c\u4e8e\u5bf9\u533a\u95f4\u5185\u5f02\u6216\u4e00\u6b21\uff0c\u8be6\u89c1[P2574](https://www.luogu.org/problemnew/show/P2574)\n\n#### 4. \u7ebf\u6bb5\u6811\u533a\u95f4\u8be2\u95ee\u83b7\u53d6$d_i$\n\u6218\u6597\u529b\u5c0f\u4e8e\u5b83\u7684\u725b\u4e2d\uff0c\u5b83\u80fd\u6218\u80dc\u4e2a\u6570\u7684\u4e3a\uff1a\n\n$(i-1)-Sum(1,i-1)$\n\n\u6218\u6597\u529b\u5927\u4e8e\u5b83\u7684\u725b\u4e2d\uff0c\u4e3a\uff1a\n\n$Sum(i+1,n)$\n\n#### \u4e00\u4e9b\u7ec6\u8282\uff1a\n- \u5bf9\u4e8e\u64cd\u4f5c$[l,r]$\u6709\u53ef\u80fd$l$\u4f1a\u5c0f\u4e8e\u6700\u5c0f\u7684\u6218\u6597\u529b\n\u53ef\u4ee5\u7279\u5224\u6389\u6216\u8005\u628a\u7ebf\u6bb5\u6811\u8303\u56f4\u5f00\u5230$[0,n]$\n- \u7b54\u6848\u8981\u5f00 long long\n\n### AC\u4ee3\u7801:\n```cpp\n#include<iostream>\n#include<algorithm>\n#define N 110000\nusing namespace std;\nstruct D{\n    int l,r;\n}a[N],b[N];\nint L[N*4],R[N*4],len[N*4],tag[N*4],val[N*4],s[N];\nint n,m;\nlong long ans;\ninline void swap(int &a,int &b){\n    int t=a;\n    a=b;\n    b=t;\n}\nvoid build(int x,int l,int r){\n    len[x]=r-l+1;\n    L[x]=l,R[x]=r;\n    if(l>=r)\n        return;\n    int mid=(l+r)>>1;\n    build(x<<1,l,mid);\n    build(x<<1|1,mid+1,r);\n}\nvoid pushdown(int x){\n    if(!tag[x])\n        return;\n    tag[x<<1]^=1;\n    val[x<<1]=len[x<<1]-val[x<<1];\n    tag[x<<1|1]^=1;\n    val[x<<1|1]=len[x<<1|1]-val[x<<1|1];\n    tag[x]=0;\n}\nvoid modify(int x,int l,int r){\n    if(L[x]>=l&&R[x]<=r){\n        val[x]=len[x]-val[x];\n        tag[x]^=1;\n        return;\n    }\n    pushdown(x);\n    int mid=(L[x]+R[x])>>1;\n    if(l<=mid)\n        modify(x<<1,l,r);\n    if(r>mid)\n        modify(x<<1|1,l,r);\n    val[x]=val[x<<1]+val[x<<1|1];\n}\nint query(int x,int l,int r){\n    if(L[x]>=l&&R[x]<=r)\n        return val[x];\n    pushdown(x);\n    int res=0;\n    int mid=(L[x]+R[x])>>1;\n    if(l<=mid)\n        res+=query(x<<1,l,r);\n    if(r>mid)\n        res+=query(x<<1|1,l,r);\n    return res;\n}\nbool cmp(D x,D y){\n    return x.l<y.l;\n}\nbool cmp2(D x,D y){\n    return x.r<y.r;\n}\nint main(){\n    ios::sync_with_stdio(false);\n    cin.tie(NULL);\n    cout.tie(NULL);\n    cin>>n>>m;\n    ans=1LL*n*(n-1)*(n-2)/6;\n    build(1,0,n);\n    for(int i=1;i<=n;i++)\n    \tcin>>s[i];\n    sort(s+1,s+n+1);\n    for(int i=1;i<=m;i++){\n    \tint x,y;\n    \tcin>>x>>y;\n    \tx=lower_bound(s+1,s+n+1,x)-s;\n    \ty=upper_bound(s+1,s+n+1,y)-s-1;\n    \ta[i].l=b[i].l=x;\n    \ta[i].r=b[i].r=y;\n    }\n    sort(a+1,a+m+1,cmp);\n    sort(b+1,b+m+1,cmp2);\n    int p=0,q=0;\n    for(int i=1;i<=n;i++){\n        long long d=0;\n        while(p<m&&a[p+1].l<=i){\n            p++;\n            modify(1,a[p].l,a[p].r);\n        }\n        while(q<m&&b[q+1].r<i){\n            q++;\n            modify(1,b[q].l,b[q].r);\n        }\n        if(i>1)\n            d+=(i-1)-query(1,1,i-1);\n        if(i<n)\n            d+=query(1,i+1,n);\n        ans-=(d*(d-1))/2;\n    }\n    cout<<ans;\n    return 0;\n}\n\n```",
        "postTime": 1540981504,
        "uid": 57592,
        "name": "Cobalt",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF283E \u3010Cow Tennis Tournament\u3011"
    },
    {
        "content": "\u9996\u5148\u6839\u636e\u9898\u76ee\u53ef\u77e5\u8fd9\u662f\u4e00\u4e2a\u5b8c\u5168\u56fe.\n\n\u5982\u679c\u4e0d\u8003\u8651\u8fb9\u7684\u65b9\u5411\uff0c\u90a3\u4efb\u53d6\u4e09\u4e2a\u70b9\u90fd\u80fd\u6784\u6210\u4e00\u4e2a\u73af.\n\n\u73b0\u5728\u9898\u76ee\u7ed9\u4e86\u8fd9\u4e9b\u8fb9\u4e00\u4e2a\u65b9\u5411\uff0c\u6240\u4ee5\u4e00\u4e2a\u73af\u4e0d\u5408\u6cd5\uff0c\u5f53\u4e14\u4ec5\u5f53\u5176\u4e0a\u6709\u4e00\u4e2a\u70b9\u51fa\u5ea6\u4e3a $2$ .\n\n\u4e8e\u662f\u6211\u4eec\u7684\u7b54\u6848\u5c31\u662f $\\binom{n}{3}-\\sum\\binom{d_i}{2}$ \uff0c\u8fd9\u91cc\u7684 $d$ \u8868\u793a\u51fa\u5ea6.\n\n\u8bb0 $0$ \u4e3a\u521d\u59cb\u8fde\u8fb9\u72b6\u6001\uff0c $1$ \u4e3a\u53cd\u8f6c\u8fde\u8fb9\u72b6\u6001\uff0c $p_x$ \u4e3a $x$ \u548c\u73b0\u5728\u8fd9\u4e2a\u70b9**\u5f53\u524d\u7684**\u8fde\u8fb9\u72b6\u6001 .\n\n\u4e8e\u662f\u9898\u76ee\u7684\u64cd\u4f5c\u5c31\u53ef\u4ee5\u8f6c\u5316\u6210\u533a\u95f4\u53cd\u8f6c\u533a\u95f4\u67e5\u8be2\u4e86\uff0c\u4f7f\u7528\u7ebf\u6bb5\u6811\u5373\u53ef.",
        "postTime": 1637102148,
        "uid": 78127,
        "name": "\u964c\u8def\u7684\u82b1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3"
    }
]