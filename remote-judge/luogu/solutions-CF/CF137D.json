[
    {
        "content": "### \u9898\u610f\n\n\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6c42\u6700\u5c11\u6539\u591a\u5c11\u4e2a\u5b57\u7b26\u80fd\u628a\u8fd9\u4e2a\u5b57\u7b26\u4e32\u62c6\u6210 $k$ \u4e2a\u56de\u6587\u4e32\u3002\n\n### \u5206\u6790\n\n\u5148\u66b4\u529b\u6c42\u51fa\u6bcf\u4e00\u6bb5\u6539\u4e3a\u56de\u6587\u4e32\u6240\u9700\u7684\u6700\u5c0f\u4fee\u6539\u6b21\u6570\uff0c\u5c06 $[i,j]$ \u6539\u4e3a\u56de\u6587\u4e32\u6240\u9700\u7684\u6700\u5c0f\u4fee\u6539\u6b21\u6570\u4e3a $f_{i,j}$ \uff0c\u7136\u540e dp \u5373\u53ef\u3002\u5b9a\u4e49 $dp_{i,k}$ \u4e3a\u5c06 $[0,i]$ \u6539\u4e3a\u80fd\u62c6\u6210 $k$ \u4e2a\u56de\u6587\u4e32\u6240\u9700\u7684\u6700\u5c0f\u4fee\u6539\u6b21\u6570\uff0c$dp_{i,k}=\\min(dp_{j \\in [0,i-1],k})$\u3002\u5728 dp \u7684\u65f6\u5019\uff0c\u66f4\u65b0 dp \u503c\u7684\u540c\u65f6\uff0c\u8bb0\u5f55\u8def\u5f84\uff0c$dp1_{i,k}$ \u8868\u793a $dp_{i,k}$ \u662f\u4ece\u54ea\u8f6c\u79fb\u7684\uff0c\u6700\u540e\u4ece\u540e\u5411\u524d\u627e\u5230\u8def\u5f84\uff0c\u4f9d\u7167\u8def\u5f84\u5206\u6bb5\u8f93\u51fa\uff0c\u518d\u4fee\u6539\u4e00\u4e0b\u56de\u6587\u5373\u53ef\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define mem(a,b) memset(a,b,sizeof(a))\nusing namespace std;\nconst int inf=2139062143;\ninline void qread(){}template<class T1,class ...T2>\ninline void qread(T1 &a,T2&... b)\n{\n\tregister T1 x=0;register bool f=false;char ch=getchar();\n\twhile(ch<'0') f|=(ch=='-'),ch=getchar();\n\twhile(ch>='0') x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\n\tx=(f?-x:x);a=x;qread(b...);\n}\ntemplate<class T1,class T2>inline T1 qmax(const T1 &x,const T2 &y){return x>y?x:y;}\ntemplate<class T1,class T2>inline T1 qmin(const T1 &x,const T2 &y){return x<y?x:y;}\nconst int MAXN=507;\nstring s;int n,m,dp[MAXN][MAXN],f[MAXN][MAXN],ans=inf,dp1[MAXN][MAXN];\nvector<int>a;\nint main()\n{\n\tcin>>s;n=s.size();qread(m);int i,j,k;mem(dp,0x7f);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=i+1;j<n;j++)\n\t\t{\n\t\t\tint l=j-i+1;\n\t\t\tfor(k=i;k<i+l/2;k++) if(s[k]!=s[j-(k-i)]) f[i][j]++; //\u5c06[i,j]\u53d8\u6210\u56de\u6587\u4e32\u7684\u6700\u5c0f\u82b1\u8d39\n\t\t}\n\t}\n\tfor(i=0;i<n;i++) dp[i][1]=f[0][i];\n\tfor(i=0;i<n;i++) //\u5f53\u524d\u679a\u4e3e\u5230\u7684\u4f4d\u6570\n\t{\n\t\tfor(j=0;j<i;j++)\n\t\t{\n\t\t\tfor(k=1;k<=m;k++) //\u5206\u6210\u7684\u56de\u6587\u4e32\u6570\n\t\t\t{\n\t\t\t\tif(dp[i][k]>dp[j][k-1]+f[j+1][i])\n\t\t\t\t{\n\t\t\t\t\tdp[i][k]=dp[j][k-1]+f[j+1][i]; //\u66f4\u65b0dp\u503c\n\t\t\t\t\tdp1[i][k]=j;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}int pos=n-1,t=0;\n\tfor(i=1;i<=m;i++)\n\t\tif(ans>dp[n-1][i]) ans=dp[n-1][i],t=i; //\u627e\u51fadp\u6700\u5c0f\u503c\n\twhile(pos>=0&&t>=0)\n\t{\n\t\ta.push_back(pos); //\u52a0\u5165\u8def\u5f84\n\t\tpos=dp1[pos][t--];\n\t}\n\ta.pop_back();\n\treverse(a.begin(),a.end()); //\u7531\u4e8e\u662f\u4ece\u540e\u5f80\u524d\u52a0\u5165\u7684\uff0c\u6240\u4ee5\u9700\u8981\u7ffb\u8f6c\n\tprintf(\"%d\\n\",ans);\n\tint last=-1;\n\tfor(i=0;i<a.size();i++)\n\t{\n\t\tif(i!=0) putchar('+');\n\t\tfor(j=last+1;j<=a[i];j++) \n\t\t{\n\t\t\tif(s[j]==s[a[i]-(j-last-1)]) putchar(s[j]); //\u65e0\u9700\u4fee\u6539\n\t\t\telse if(a[i]-(j-last-1)>j) putchar(s[j]); //\u524d\u534a\u90e8\u5206\u5bf9\u5e94\u7684\u5df2\u4fee\u6539\n\t\t\telse putchar(s[a[i]-(j-last-1)]); //\u9700\u8981\u4fee\u6539\n\t\t}\n\t\tlast=a[i];\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1642492154,
        "uid": 225991,
        "name": "_lxy_",
        "ccfLevel": 6,
        "title": "CF137D Palindromes \u9898\u89e3"
    },
    {
        "content": "## \u9898\u610f\u7b80\u8ff0\n\n\u8f93\u5165\u4e00\u4e2a**\u5305\u542b\u5927\u5c0f\u5199\u5b57\u6bcd**\u7684\u5b57\u7b26\u4e32 $s\\;(|s|\\leq 500)$ \u4e0e\u6574\u6570 $k\\;(1\\leq k\\leq |s|)$ \u3002\n\n\u8be2\u95ee**\u6700\u5c11**\u4fee\u6539\u591a\u5c11\u4e2a\u5b57\u7b26\u80fd\u4f7f\u5f97 $s$ \u53ef\u4ee5\u5206\u5272\u6210**\u4e0d\u8d85\u8fc7** $k$ \u6bb5\u56de\u6587\u4e32\uff08**\u56de\u6587\u4e32\u5224\u5b9a\u533a\u5206\u5927\u5c0f\u5199**\uff09\u3002\n\n\u8f93\u51fa\u7b2c\u4e00\u884c\u8868\u793a\u6700\u5c0f\u4fee\u6539\u6b21\u6570\u3002\n\n\u8f93\u51fa\u7b2c\u4e8c\u884c\u8868\u793a $s$ \u7684\u4fee\u6539\u548c\u5206\u5272\u7684\u7ed3\u679c\uff0c\u76f8\u90bb\u7684\u56de\u6587\u4e32\u4ee5 `+` \u5b57\u7b26\u76f8\u8fde\u3002\n\n## \u601d\u8def\n+ \u7c7b\u4f3c\u533a\u95f4dp\u6c42\u51fa\u4fee\u6539\u533a\u95f4 $[l,r]$ \u4e3a\u56de\u6587\u4e32\u7684\u6700\u5c0f\u4fee\u6539\u6b21\u6570\u3002\n+ \u8bbe\u72b6\u6001 $dp[i][j]$ \uff0c\u5176\u4e2d $i$ \u4e3a\u7ed3\u5c3e\uff0c\u56de\u6587\u4e32\u4e2a\u6570\u4e3a $j$ \u7684\u6700\u5c0f\u4fee\u6539\u6570\u3002\n+ \u72b6\u6001\u8f6c\u79fb $dp[i][j] = \\min(dp[i][j], dp[k][j - 1] + cost[k + 1][i])$ \u3002\n\t+ \u89e3\u91ca\u4e00\u4e0b\u8f6c\u79fb\uff0c\u679a\u4e3e\u5206\u754c\u70b9 $k$ , \u4ece $dp[k][j - 1]$ \u8f6c\u79fb\u5230 $dp[i][j]$ \u5373\u5728 $s[k]$ \u540e\u9762\u63a5\u4e0a $s[k+1,i]$ \u3002\n    + $s[k+1,i]$ \u662f\u4e00\u6bb5\u56de\u6587\u4e32\uff0c\u8f6c\u79fb\u4ee3\u4ef7\u5373\u9884\u5904\u7406\u7684\u4fee\u6539\u6b21\u6570\u4e3a $cost[k+ 1][i]$ \u3002\n+ \u7136\u540e\u9012\u5f52\u8f93\u51fa\u65b9\u6848\u5373\u53ef, \u65f6\u95f4\u590d\u6742\u5ea6 $O(n^3)$ \u3002\n\n## Code\n```c++\n#include<bits/stdc++.h>\nconst int N = 510;\nint cost[N][N];\nint dp[N][N], n;\nstring s;\n// dp[i][j] i \u4e3a\u7ed3\u5c3e\uff0c\u56de\u6587\u4e32\u4e2a\u6570\u4e3a j \u7684\u6700\u5c0f\u4fee\u6539\u6570\u3002\n// dp[i][j] = min(dp[i][j], dp[k][j - 1] + cost[k + 1][i])\nvoid Print(int now, int num) {\n    for (int i = 0; i < now; i++) {\n        if (dp[i][num - 1] + cost[i + 1][now] == dp[now][num]) {\n            Print(i, num - 1);\n            int len = now - (i + 1) + 1;\n            for (int j = i + 1; j <= i + 1 + len / 2 - 1; j++) {\n                s[j] = s[now - (j - (i + 1))];\n            }\n            for (int j = i + 1; j <= now; j++)\n                printf(\"%c\", s[j]);\n            if (now != n)\n                printf(\"+\");\n            break;\n        }\n    }\n}\nint main() {\n    IOS;\n    int K;\n    cin >> s >> K;\n    s = \" \" + s;\n    n = s.size() - 1;\n    for (int len = 2; len <= n; len++) {\n        for (int l = 1; l + len - 1 <= n; l++) {\n            int r = l + len - 1;\n            if (len == 2) {\n                cost[l][r] = !(s[l] == s[r]);\n                continue;\n            }\n            cost[l][r] = cost[l + 1][r - 1] + !(s[l] == s[r]);\n        }\n    }\n    memset(dp, 0x3f, sizeof dp);\n    dp[0][0] = 0;\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= K; j++) {\n            for (int k = 0; k < i; k++) {\n                dp[i][j] = min(dp[i][j], dp[k][j - 1] + cost[k + 1][i]);    // [k + 1, i] \u4e3a\u65b0\u7684\u4e00\u6bb5\u56de\u6587\u4e32\u3002\n            }\n        }\n    }\n    int ans = 1e9;\n    for (int i = 1; i <= K; i++) {\t// \u627e\u51fa\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u5c0f\u4fee\u6539\u6b21\u6570\n        ans = min(ans, dp[n][i]);\n    }\n    int num = n;\n    for (int i = 1; i <= K; i++) {\n        if (dp[n][i] == ans) {\n            num = i;\n            break;\n        }\n    }\n    printf(\"%d\\n\", ans);\n    Print(n, num);\n    return 0;\n}\n```",
        "postTime": 1664021196,
        "uid": 392696,
        "name": "Roshin",
        "ccfLevel": 0,
        "title": "CF137D Palindromes \uff08\u7ebf\u6027dp\uff09"
    }
]