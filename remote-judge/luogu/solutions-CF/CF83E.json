[
    {
        "content": "#### \u9898\u610f\u7b80\u8ff0\uff1a\n\n\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570 $f$\uff1a\n\n1. $f(\\varnothing)=\\text{empty string}$\n\n2. \u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26\u4e32 $s$\uff0c$f(s)=s$ \u3002\n\n3. \u5bf9\u4e8e\u4efb\u610f\u4e24\u4e2a\u5b57\u7b26\u4e32 $s_1,s_2$\uff0c$f(s_1,s_2)$ \u4e3a\u6700\u77ed\u7684\uff0c\u4e14\u957f\u5ea6\u4e3a $|s_1|$ \u7684\u524d\u7f00\u4e3a $s_1$\uff0c\u957f\u5ea6\u4e3a $|s_2|$ \u7684\u540e\u7f00\u4e3a $s_2$ \u7684\u5b57\u7b26\u4e32\u3002\u4f8b\u5982 $f(001,011)=0011$\uff0c $f(111,011)=111011$\n\n4. \u5bf9\u4e8e\u4efb\u610f\u591a\u4e2a\u5b57\u7b26\u4e32 $s_1,s_2...s_n$\uff0c$f(s_1,s_2...s_n)=f(f(s_1,s_2...s_{n-1}),s_n)$\u3002\n\n\u73b0\u5728\u6309\u7167\u987a\u5e8f\u7ed9\u51fa $n$ \u4e2a\u957f\u5ea6\u76f8\u7b49\u7684 $01$ \u4e32 $a_1,a_2...a_n$\uff0c\u4f60\u8981\u628a\u4ed6\u4eec\u5206\u6210\u4e24\u4e2a\u5e8f\u5217 $B,C$\uff0c\u4e14\u8981\u4fdd\u8bc1\u6bcf\u4e2a $a_i$ \u51fa\u73b0\u4e14\u4ec5\u51fa\u73b0\u5728\u4e00\u4e2a\u5e8f\u5217\u4e2d\u3002\u6c42 $|f(B)|+|f(C)|$ \u6700\u5c0f\u503c\u3002**\u7279\u6b8a\u7684\uff0c\u4f60\u9700\u8981\u4fdd\u8bc1\u5728\u540c\u4e00\u4e2a\u5e8f\u5217\u5185\u7684\u5b57\u7b26\u4e32\u7684\u76f8\u5bf9\u4f4d\u7f6e\u4e0d\u80fd\u6539\u53d8\uff0c\u67d0\u4e2a\u5e8f\u5217\u53ef\u4ee5\u4e3a\u7a7a**\u3002\uff08\u5982\u5bf9\u4e8e\u521d\u59cb $01$ \u4e32 $a_1,a_2,a_3$\uff0c\u4f60\u53ef\u4ee5\u628a\u4ed6\u4eec\u5206\u6210 $a_1,a_3$ \u4e0e $a_2$\uff0c\u4f46\u662f\u4e0d\u80fd\u5206\u6210 $a_3,a_1$ \u4e0e $a_2$\uff09\u3002$n\\leq 2\\times 10^5$\uff0c$01$ \u4e32\u957f\u5ea6\u4e0d\u8d85\u8fc7 $20$\u3002\n\n#### \u9898\u89e3\uff1a\n\n\u9996\u5148\u8003\u8651\u600e\u4e48\u6c42 $f(s_1,s_2)$\uff0c\u53ef\u4ee5\u679a\u4e3e $s_2$ \u7684\u6bcf\u4e2a\u524d\u7f00\uff0c\u7136\u540e\u770b\u8fd9\u4e2a\u524d\u7f00\u662f\u4e0d\u662f $s_1$ \u7684\u67d0\u4e2a\u540e\u7f00\uff0c\u5982\u679c\u662f\uff0c\u90a3\u4e48\u8fd9\u4e2a\u524d\u7f00\u548c\u540e\u7f00\u5c31\u53ef\u4ee5\u7f29\u5230\u4e00\u8d77\u3002\u5982 $011$ \u548c $110$\uff0c$110$ \u7684\u524d\u7f00 $11$ \u662f $011$ \u7684\u4e00\u4e2a\u540e\u7f00\uff0c\u6240\u4ee5 $f(011,110)$ \u5c31\u662f\u628a\u8fd9\u4e24\u4e2a\u90e8\u5206\u7f29\u5728\u4e00\u8d77\u5373 $0110$\u3002\u590d\u6742\u5ea6\u662f $\\text{len}^2$ \u7684\u3002\n\n\u5bf9\u4e8e\u6c42\u6700\u5c0f\u503c\u8003\u8651 DP\u3002\n\n\u6709\u4e00\u4e2a\u6bd4\u8f83\u663e\u7136\u7684 DP\uff0c\u8bbe $f[i][j][k]$ \u8868\u793a\u8003\u8651\u5230\u7b2c $i$ \u4e2a\u5b57\u7b26\u4e32\uff0c\u7b2c\u4e00\u4e2a\u5e8f\u5217\u7684\u7ed3\u5c3e\u662f\u5b57\u7b26\u4e32 $a_j$\uff0c\u7b2c\u4e8c\u4e2a\u5e8f\u5217\u7684\u7ed3\u5c3e\u662f\u5b57\u7b26\u4e32 $a_k$ \u7684\u6700\u5c0f\u503c\u3002\u56e0\u4e3a $a_{i-1}$ \u5fc5\u5b9a\u653e\u8fdb\u4e86\u5e8f\u5217\u4e2d\u4e14\u4e00\u5b9a\u5728\u67d0\u4e2a\u5e8f\u5217\u7684\u6700\u540e\u4e00\u4e2a\uff0c\u6240\u4ee5\u72b6\u6001\u53ef\u4ee5\u4f18\u5316\u6210 $f[i][j]$ \u8868\u793a\u8003\u8651\u5230\u7b2c $i$ \u4e2a\u5b57\u7b26\u4e32\uff0c\u4e00\u4e2a\u5e8f\u5217\u7684\u7ed3\u5c3e\u662f $a_{i-1}$\uff0c\u53e6\u4e00\u4e2a\u5e8f\u5217\u7684\u7ed3\u5c3e\u662f $a_j$ \u7684\u6700\u5c0f\u503c\u3002\n\n\u8fd9\u6837\u590d\u6742\u5ea6\u662f $O(n^2\\times \\text{len}^2)$ \u7684\uff0c\u4e0d\u80fd\u901a\u8fc7\u672c\u9898\u3002\u800c\u4e14\u5982\u679c DP \u72b6\u6001\u4e2d\u5e26\u4e00\u4e2a\u5e8f\u5217\u4e2d\u7684\u4f4d\u7f6e\u7684\u8bdd\uff0c\u4f3c\u4e4e\u4e0d\u80fd\u7ee7\u7eed\u4f18\u5316\u4e0b\u53bb\u3002\n\n\u6545\u8003\u8651\u53e6\u4e00\u79cd DP \u72b6\u6001\u3002\u8bbe $f[i][S]$ \u8868\u793a\u8003\u8651\u5230\u7b2c $i$ \u4e2a\u5b57\u7b26\u4e32\uff0c\u4e00\u4e2a\u5e8f\u5217\u7684\u7ed3\u5c3e\u662f\u5b57\u7b26\u4e32 $a_{i-1}$\uff0c\u53e6\u4e00\u4e2a\u5e8f\u5217\u7684\u7ed3\u5c3e\u662f\u5b57\u7b26\u4e32 $S$\u3002\u5355\u770b\u72b6\u6001\u6570\u4f3c\u4e4e\u590d\u6742\u5ea6\u53d8\u9ad8\u4e86\uff0c\u4f46\u662f\u8fd9\u6837\u8bbe\u72b6\u6001\u7684\u597d\u5904\u662f\uff0c\u628a $01$ \u4e32\u653e\u5230\u4e86\u72b6\u6001\u4e2d\uff0c\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u4e2a $S$\uff0c\u5c31\u53ef\u4ee5\u7528 ```01-Trie``` \u53bb\u7ef4\u62a4\u3002\n\n\u6bcf\u6b21\u8f6c\u79fb\u7684\u65f6\u5019\uff0c\u5982\u679c\u628a\u5f53\u524d\u5b57\u7b26\u4e32 $a_i$ \u63a5\u5230 $a_{i-1}$ \u4e0a\uff0c\u90a3\u4e48 $S$ \u7684\u72b6\u6001\u4e0d\u4f1a\u6539\u53d8\uff0c\u76f8\u5f53\u4e8e\u6574\u68f5\u6811\u52a0\u4e0a\u4e86 $|f(a_{i-1},a_i)|$\uff0c\u6240\u4ee5\u53ef\u4ee5\u5728\u5916\u9762\u8bb0\u4e0a\u4e00\u4e2a\u6807\u8bb0\uff0c\u8868\u793a\u6811\u91cc\u9762\u7684\u503c\u9700\u8981\u52a0\u4e0a\u6807\u8bb0\u624d\u662f\u771f\u5b9e\u7b54\u6848\u3002\u5982\u679c\u628a\u5f53\u524d\u5b57\u7b26\u4e32 $a_i$ \u63a5\u5230\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e0a\uff0c\u90a3\u4e48\u5c31\u679a\u4e3e $a_i$ \u7684\u4e00\u4e2a\u524d\u7f00 $T$\uff0c\u5e76\u4e14\u5728 ```01-Tire``` \u4e0a\u67e5\u8be2\u6240\u6709\u540e\u7f00\u4e3a $T$ \u7684\u5b57\u7b26\u4e32\u7684 DP \u503c\u7684\u6700\u5c0f\u503c\uff0c\u7136\u540e\u628a\u5f97\u5230\u7684\u8fd9\u4e2a\u6700\u5c0f\u503c\u66f4\u65b0 $f[i][a_{i-1}]$\u3002\n\n\u8fd9\u6837\u5b50\u590d\u6742\u5ea6\u662f $O(n\\times \\text{len}^2)$ \u7684\uff0c\u8db3\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include <bits/stdc++.h>\n#define RI register int\ntypedef long long LL;\n\n#define FILEIO(name) freopen(name\".in\", \"r\", stdin), freopen(name\".out\", \"w\", stdout);\n\nusing namespace std;\n\nchar s[200005][22];\nint Mn[1 << 22];\nint len;\n\ninline void Reverse(char *s, int l) {\n  for (RI i = 1, j = l; i < j; ++i, --j)\n    swap(s[i], s[j]);\n}\n\nint GetMin(char *s, int l) {\n  int now = 1;\n  for (RI i = 1; i <= l; ++i)\n    if (s[i] == '0') now <<= 1;\n    else now <<= 1, now |= 1;\n  return Mn[now];\n}\nint Query(char *s) {\n  int re = 0x3f3f3f3f;\n  for (RI i = 0; i <= len; ++i) {\n    Reverse(s, i);\n    re = min(re, GetMin(s, i) + len - i);\n    Reverse(s, i);\n  }\n  return re;\n}\nint Solve(char *s, char *t) {\n  int re = 0;\n  for (RI i = len; i; --i) {\n    int flag = 1;\n    for (RI j = len; flag && j > len - i; --j)\n      if (s[j] != t[i - (len - j)])\n        flag = 0;\n    if (flag) { re = i; break; }\n  }\n  return len - re;\n}\nvoid Insert(char *s, int val) {\n  int now = 1;\n  for (RI i = 1; i <= len; ++i) {\n    Mn[now] = min(Mn[now], val);\n    if (s[i] == '0') now <<= 1;\n    else now <<= 1, now |= 1;\n  }\n  Mn[now] = min(Mn[now], val);\n}\n\nint main() {\n  \n#ifdef LOCAL\n  FILEIO(\"a\");\n#endif\n\n  int n; cin >> n;\n  for (RI i = 1; i <= n; ++i)\n    cin >> (s[i] + 1);\n  len = strlen(s[1] + 1);\n  int tag = len;\n  memset(Mn, 0x3f, sizeof(Mn));\n  Mn[1] = 0;\n  for (RI i = 2; i <= n; ++i) {\n    int re = Query(s[i]);\n    re += tag;\n    tag += Solve(s[i - 1], s[i]);\n    Reverse(s[i - 1], len);\n    Insert(s[i - 1], re - tag);\n  }\n  int ans = Mn[1];\n  printf(\"%d\\n\", ans + tag);\n\n  return 0;\n}\n\n// created by Daniel yuan\n/*\n     ________\n    /        \\\n   / /      \\ \\\n  / /        \\ \\\n  \\            /\n   \\  ______  /\n    \\________/\n*/\n\n```",
        "postTime": 1590724788,
        "uid": 71955,
        "name": "Daniel_yuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF83E \u3010Two Subsequences\u3011"
    },
    {
        "content": "\u6240\u6709\u5b57\u7b26\u4e32\u957f\u5ea6\u76f8\u540c\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u6027\u8d28\u3002\n\n\u8003\u8651\u4e00\u4e2a\u66b4\u529b $\\text{dp}$\u3002\u8bbe $f_{i,S_1,S_2}$ \u8868\u793a\u8003\u8651\u5230\u7b2c $i$ \u4e2a\u4e32\uff0c\u62c6\u5206\u51fa\u6765\u7684\u4e24\u4e2a\u96c6\u5408\u5206\u522b\u4e3a $S_1,S_2$\uff0c\u6b64\u65f6\u957f\u5ea6\u548c\u7684\u6700\u5c0f\u503c\u3002\u56e0\u4e3a\u5b57\u7b26\u4e32\u957f\u5ea6\u76f8\u540c\uff0c\u6240\u4ee5\u5f53\u6211\u4eec\u65b0\u63a5\u5165\u4e00\u4e2a\u4e32 $S'$ \u65f6\uff0c\u65b0\u7684\u72b6\u6001\u4e2d\u7684 $S_1$ \u6216 $S_2$ \u4f1a\u88ab\u66ff\u6362\u4e3a $S'$\u3002\n\n\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u5230 $S_1,S_2$ \u4e2d\u5fc5\u5b9a\u6709\u4e00\u7ef4\u662f\u4e0a\u4e00\u6b21\u52a0\u5165\u7684\u5b57\u7b26\u4e32\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u538b\u7f29\u4e00\u7ef4\u72b6\u6001\u3002\u8bbe $f_{i,S}$ \u8868\u793a\u8003\u8651\u5230\u7b2c $i$ \u4e2a\u4e32\uff0c\u62c6\u5206\u51fa\u6765\u7684\u96c6\u5408\u4e00\u4e2a\u4e3a $S$ \u53e6\u4e00\u4e2a\u4e3a\u4e0a\u4e00\u6b21\u4fdd\u7559\u7684\u5b57\u7b26\u4e32\u3002\u8f6c\u79fb\u5206\u4e24\u79cd\u3002\n\n- \u65b0\u5b57\u7b26\u4e32\u5e76\u5165 $S$ \u4e2d\uff0c$f_{i+1,a_{i-1}} \\leftarrow f_{i,S}$\u3002\n- \u65b0\u5b57\u7b26\u4e32\u5e76\u5165\u7b2c $i - 1$ \u4e2a\u5b57\u7b26\u4e32\uff0c$f_{i+1,S} \\leftarrow f_{i,S}$\u3002\n\n\u7ef4\u62a4\u65f6\u53ef\u4ee5\u6253\u5168\u5c40\u52a0\u6807\u8bb0\uff0c\u7edf\u8ba1\u8d21\u732e\u4e00\u4e2a\u540e\u7f00\u7684\u6700\u5c0f\u503c\u3002\u5b9e\u73b0\u53ef\u4ee5\u770b\u4ee3\u7801\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define mp make_pair\n#define inf 1e9\n#define pii pair <int, int>\nconst int mod = 1e9 + 7;\ninline int read () {\n\tint x = 0, f = 1;\n\tchar ch = getchar ();\n\twhile (ch < '0' || ch > '9') f = ((ch == '-') ? -1 : f), ch = getchar ();\n\twhile (ch >= '0' && ch <= '9') x = x * 10 + ch - '0', ch = getchar ();\n\treturn x * f;\n}\ninline void write (int x) {\n\tif (x < 0) x = -x, putchar ('-');\n\tif (x >= 10) write (x / 10);\n\tputchar (x % 10 + '0');\n}\ninline int quickmod (int x, int y) {\n\tint Ans = 1;\n\twhile (y) {\n\t\tif (y & 1) Ans = (1ll * Ans * x) % mod;\n\t\tx = (1ll * x * x) % mod;\n\t\ty >>= 1;\n\t}\n\treturn Ans;\n}\nint n, m, Ad;\nchar ch[25];\nint a[200005], pre[200005];\nint mn[21][(1<<20)+5];\nint f[(1<<20)+5];\ninline int chk(int x, int y, int l) {\n\treturn (y & ((1 << l) - 1)) == (x >> (m - l));\n}\ninline int get_match(int x, int y) {\n\tfor(int i = m; i >= 1; i--) if(chk(x, y, i)) return m - i;\n\treturn m;\n}\nsigned main () {\n//\tfreopen (\".in\", \"r\", stdin);\n//\tfreopen (\".out\", \"w\", stdout);\n\tn = read();\n\tfor(int i = 1; i <= n; i++) {\n\t\tscanf(\"%s\", ch);\n\t\tm = (int)strlen(ch);\n\t\tfor(int j = 0; j < m; j++) if(ch[j] == '1') a[i] |= (1 << j);\n\t}\n\tif(n == 1) return printf(\"%lld\\n\", m) & 0;\n\tif(n == 2) return printf(\"%lld\\n\", m + get_match(a[1], a[2])) & 0;\n\tmemset(f, 0x3f, sizeof f), memset(mn, 0x3f, sizeof mn);\n\tpre[1] = m;\n\tfor(int i = 2; i <= n; i++) pre[i] = pre[i-1] + get_match(a[i-1], a[i]);\n\tfor(int i = 2; i <= n; i++) {\n\t\tint ad = get_match(a[i-1], a[i]);\n\t\tfor(int j = 0; j <= m; j++) f[a[i-1]] = min(f[a[i-1]], mn[j][a[i]&((1<<j)-1)] + (m - j) - ad);\n\t\tAd += ad;\n\t\tf[a[i-1]] = min(f[a[i-1]], m + pre[i-1] - Ad);\n\t\tfor(int j = 0; j <= m; j++) mn[j][a[i-1]>>(m-j)] = min(mn[j][a[i-1]>>(m-j)], f[a[i-1]]);\n\t}\n\tint Ans = pre[n];\n\tfor(int i = 0; i < (1 << m); i++) Ans = min(Ans, f[i] + Ad);\n\twrite(Ans), putchar('\\n');\n\treturn 0;\n}\n/*\n*/\n```",
        "postTime": 1677069785,
        "uid": 161847,
        "name": "Para",
        "ccfLevel": 0,
        "title": "CF83E Two Subsequences"
    }
]