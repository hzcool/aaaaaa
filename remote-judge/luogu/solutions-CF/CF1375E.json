[
    {
        "content": "# \u8fdb\u6765\u770b\u770b\u5427\u2193\n\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/dysyn1314/p/13246526.html)\n\n[\u9898\u76ee\u94fe\u63a5](https://codeforces.com/contest/1375/problem/E)\n\n\u8003\u8651$a$\u662f\u4e00\u4e2a\u6392\u5217\u65f6\u600e\u4e48\u505a\u3002\n\n\u6211\u4eec\u8bbe$\\text{pos}[v]$\u8868\u793a$v$\u8fd9\u4e2a\u6570\u5728$a$\u91cc\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\u4e5f\u5c31\u662f$\\text{pos}[a[i]]=i$\u3002\n\n\u4ece\u8fb9\u754c\u5165\u624b\uff0c\u6211\u4eec\u5148\u5c1d\u8bd5\u628a$n$\u653e\u5230\u6392\u5217\u7684\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u7136\u540e\u8f6c\u5316\u4e3a\u89c4\u6a21\u51cf$1$\u7684\u5b50\u95ee\u9898\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5047\u8bbe\u4e00\u6ce2\u64cd\u4f5c\u540e\uff0c\u6211\u4eec\u5f97\u5230\u7684\u6392\u5217\u4e3a$b$\uff0c\u5219$b$\u9700\u8981\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\uff1a\n\n- $b[n]=n$\u3002\n- $\\forall 1\\leq i,j<n$\uff0c\u5982\u679c$a[i]<a[j]$\uff0c\u5219$b[i]<b[j]$\u3002\n- $\\forall1\\leq i,j<n$\uff0c\u5982\u679c$a[i]>a[j]$\uff0c\u5219$b[i]>b[j]$\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u8981\u4fdd\u8bc1\u524d\u9762\u7684\u6570\u7684**\u76f8\u5bf9\u5927\u5c0f\u5173\u7cfb\u4e0d\u53d8**\uff0c\u8fd9\u6837\u624d\u80fd\u8f6c\u5316\u4e3a\u4e00\u4e2a\u7b49\u4ef7\u7684\u5b50\u95ee\u9898\u3002\n\n\u6211\u4eec\u600e\u4e48\u505a\u5462\uff1f\u53ef\u4ee5\u4f9d\u6b21\u64cd\u4f5c\uff1a$(\\text{pos}[a[n]+1],n)$, $(\\text{pos}[a[n]+2],n)$, $(\\text{pos}[a[n]+3],n)$ ,......, $(\\text{pos}[n],n)$\u3002\u5bb9\u6613\u53d1\u73b0\uff0c\u8fd9\u6837\u4e00\u8f6e\u64cd\u4f5c\u5b8c\u6210\u540e\uff0c\u9996\u5148\uff0c$n$\u88ab\u653e\u5230\u4e86\u6700\u540e\u3002\u540c\u65f6\uff0c\u524d\u9762\u6240\u6709\u5927\u4e8e$a[n]$\u7684\u6570\uff0c\u76f8\u5f53\u4e8e\u96c6\u4f53\u51cf$1$\uff0c\u663e\u7136\u524d\u9762\u6240\u6709\u6570\u7684\u76f8\u5bf9\u5927\u5c0f\u5173\u7cfb\u4e0d\u53d8\u3002\u5e76\u4e14\uff0c\u6211\u4eec\u6070\u597d\u7528\u6389\u4e86\u6240\u6709\u5305\u542b\uff08\u4f4d\u7f6e\uff09$n$\u7684\u9006\u5e8f\u5bf9\u3002\u6240\u4ee5\u5269\u4e0b\u7684\u662f\u4e00\u4e2a\u89c4\u6a21\u51cf$1$\u7684\u5b50\u95ee\u9898\uff0c\u7ee7\u7eed\u505a\uff0c\u76f4\u5230$n=1$\u5373\u53ef\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u89e3\u51b3\u4e86\u6392\u5217\u7684\u60c5\u51b5\u3002\u76f8\u5f53\u4e8e\u6211\u4eec\u7528\u6784\u9020\u7684\u65b9\u6cd5\u8bc1\u660e\u4e86\uff0c$a$\u662f\u4e00\u4e2a\u6392\u5217\u65f6\uff0c\u4e00\u5b9a\u6709\u89e3\u3002\n\n\u518d\u8003\u8651\u4e0d\u662f\u6392\u5217\u7684\u65f6\u5019\u3002\u5bf9\u4e8e\u4e24\u4e2a\u76f8\u7b49\u7684\u6570$a[i]=a[j]$ ($i<j$)\uff0c\u6211\u4eec\u5f3a\u884c\u4ee4$a[i]<a[j]$\uff0c\u4e5f\u5c31\u662f\u4ee5\u6570\u503c\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u4f4d\u7f6e\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\uff0c\u5f3a\u884c\u8f6c\u6210\u4e00\u4e2a\u6392\u5217\u3002\u53d1\u73b0\u8f6c\u6210\u6392\u5217\u540e\uff0c\u5e8f\u5217\u91cc\u7684\u9006\u5e8f\u5bf9\u548c\u539f\u6765\u662f\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u76f4\u63a5\u6309\u6392\u5217\u6c42\u89e3\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n^2)$\u3002\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n//problem:CF1375E\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define pb push_back\n#define mk make_pair\n#define lob lower_bound\n#define upb upper_bound\n#define fi first\n#define se second\n#define SZ(x) ((int)(x).size())\n\ntypedef unsigned int uint;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int,int> pii;\n\nconst int MAXN=1000;\nint n,a[MAXN+5],vals[MAXN+5],cnt_val,p[MAXN+5],pos[MAXN+5];\nvector<pii>ans;\nvoid work(int p1,int p2){\n\tassert(pos[a[p1]]==p1);assert(pos[a[p2]]==p2);\n\tpos[a[p1]]=p2;\n\tpos[a[p2]]=p1;\n\tswap(a[p1],a[p2]);\n\tans.pb(mk(p1,p2));\n}\nint main() {\n\tcin>>n;\n\tfor(int i=1;i<=n;++i)cin>>a[i],vals[++cnt_val]=a[i];\n\tsort(vals+1,vals+cnt_val+1);\n\tcnt_val=unique(vals+1,vals+cnt_val+1)-(vals+1);\n\tint x=0;\n\tfor(int v=1;v<=cnt_val;++v){\n\t\tfor(int i=1;i<=n;++i)\n\t\t\tif(a[i]==vals[v])\n\t\t\t\tp[i]=++x;\n\t}\n\tfor(int i=1;i<=n;++i)a[i]=p[i];\n\tassert(x==n);\n\t//\u4e8e\u662fa\u53d8\u6210\u4e86\u4e00\u4e2a\u6392\u5217\n\tfor(int i=1;i<=n;++i)pos[a[i]]=i;\n\tfor(int i=n;i>=1;--i){\n\t\tfor(int j=a[i]+1;j<=i;++j){\n\t\t\twork(pos[j],i);\n\t\t}\n\t}\n\tcout<<SZ(ans)<<endl;\n\tfor(int i=0;i<SZ(ans);++i)cout<<ans[i].fi<<\" \"<<ans[i].se<<endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1593937484,
        "uid": 100674,
        "name": "duyi",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1375E \u3010Inversion SwapSort\u3011"
    },
    {
        "content": "[$\\Huge\\color{orange}{\\tt Come~to~cnblogs.}$](https://www.cnblogs.com/Wendigo/p/13245888.html)\n\n---\n> [CF1375E Inversion SwapSort](https://www.luogu.com.cn/problem/CF1375E)\n\n> \u7ed9\u5b9a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a_i$\uff0c\u6c42\u4e00\u79cd\u5c06\u6bcf\u4e2a**\u9006\u5e8f\u5bf9**\u4e0b\u6807 $(u,v)$ \u7684\u6392\u5e8f\uff0c\u4f7f\u4f9d\u6b21\u4ea4\u6362\u6bcf\u4e2a $(a_u,a_v)$ \u540e\uff0c$a_i$ \u4e0d\u51cf\u3002\n\n>  \u6570\u636e\u8303\u56f4\uff1a$1\\le n\\le 1000$\uff0c$1\\le a_i\\le 10^9$\u3002\n\n---\n\u5f88\u660e\u663e\u6211\u7684\u8111\u5b50\u88ab\u761f\u5316\u8bfe\u641e\u6b8b\u4e86\uff0c\u8fd9\u6574\u573a\u7684\u601d\u7ef4\u9898\uff0c\u505a\u51fa\u4e09\u9053\u5c31\u8111\u5b50\u7206\u51fa\u5f39\u7c27\u4e86\u3002\u4e8e\u662f\u53ea\u505a\u51fa $3$ \u9898\uff0c\u6263\u4e86 $95$ \u5206\u3002\n\n\u4e8e\u662f\u6211\u594b\u53d1\u56fe\u5f3a\uff0c\u51b3\u5b9a\u5199\u8fd9\u7bc7\u9898\u89e3\uff0c\u5e76\u5168\u9762\u6539\u540d\u4e3a $\\tt CF$ \u8d26\u53f7\u7684\u540d\u5b57 $\\tt George1123$\u3002\u5e9f\u8bdd\u4e0d\u591a\u8bf4\u3002\n\n---\n\u8fd9\u9898\u7684 $a_i$ \u4e0d\u662f\u4e92\u4e0d\u76f8\u540c\u7684\uff0c\u4f46\u662f\u4e3a\u4e86\u7b80\u5316\u95ee\u9898\uff0c\u5c31\u5f53\u5b83\u662f\u4e00\u4e2a\u6392\u5217\u3002\n\n\u56e0\u4e3a\u6700\u540e $a_i$ \u4e0d\u51cf\uff0c\u6240\u4ee5**\u6700\u7ec8\u6bcf\u4e2a\u4e0b\u6807 \u8981\u653e \u73b0\u5728\u54ea\u4e2a\u4e0b\u6807\u7684\u6570 \u662f\u56fa\u5b9a\u7684**\uff0c\u8bbe\u6700\u7ec8 $i$ \u5904\u8981\u653e\u73b0\u5728\u7684 $a_{b_i}$\u3002\n\n\u5982 $n=5$\uff0c$a_i$\uff1a``5 3 4 1 2``\uff0c$b_i$\uff1a``4 5 2 3 1``\u3002\n\n\u4ea4\u6362\u4e86 $a_{b_u}$ \u548c $a_{b_v}$ \u540e\uff0c$b_u$ \u548c $b_v$ \u4ea4\u6362\u3002\u5f53 $a_i$ \u6709\u5e8f\u65f6\uff0c$b_i$ \u4e5f\u6709\u5e8f\uff1b$b_i$ \u6709\u5e8f\u65f6\uff0c$a_i$ \u4e5f\u6709\u5e8f\u3002\n\n\u5bf9\u4e8e $a_i$ \u4e2d\u7684\u9006\u5e8f\u5bf9 $(b_u,b_v)$\uff0c\n\n\u56e0\u4e3a $b_u<b_v$ \u4e14 $a_{b_u}>a_{b_v}$\uff0c\u6240\u4ee5 $b_v>b_u$ \u4e14 $v<u$\u3002\n\n\u8003\u8651\u5bf9 $b_i$ \u505a\u5192\u6ce1\u6392\u5e8f\uff0c\u6240\u4ee5 $b_i>b_{i+1}$ \u7684 $(b_i,b_{i+1})$ \u4f1a\u88ab\u4ea4\u6362\u3002\n\n\u56e0\u4e3a\u6700\u7ec8 $b_i$ \u4f1a\u6709\u5e8f\uff0c\u6240\u4ee5\u6bcf\u4e2a $b_v>b_u$ \u4e14 $v<u$ \u7684 $(b_u,b_v)$ \u90fd\u4f1a\u88ab\u4ea4\u6362\uff0c$a_i$ \u4f1a\u6709\u5e8f\u3002\n\n**\u628a\u6bcf\u4e2a $b_i>b_{i+1}$ \u7684 $(b_{i+1},b_i)$ \u8bb0\u5f55\u4e0b\u6765\u5c31\u662f\u7b54\u6848\u3002**\n\n\u540c\u7406\uff0c\u5728 $a_i$ \u4e92\u6709\u76f8\u540c\u65f6\uff0c\u82e5\u6709 $a_{b_u}=a_{b_v}(u<v)$\uff0c\u4ee4 $b_u<b_v$ \u53ef\u4ee5\u9632\u6b62\u7b54\u6848\u4e2d\u51fa\u73b0\u975e\u9006\u5e8f\u5bf9\u3002\n\n---\n- **\u4ee3\u7801**\n\n```cpp\n//Main\nint main(){\n\tint n; cin>>n;\n\tvector<int> a(n),o(n);\n\tfor(int i=0;i<n;i++) cin>>a[i];\n\tiota(b(o),e(o),0);\n\tsort(b(o),e(o),[&](int p,int q){\n\treturn a[p]==a[q]?p<q:a[p]<a[q];});\n\tvector<pair<int,int>> ans;\n\tfor(int t=0;t<n;t++)\n\t\tfor(int i=0;i<n-1;i++)\n\t\t\tif(o[i]>o[i+1]) ans.pb(mp(o[i+1],o[i])),swap(o[i],o[i+1]);\n\tcout<<sz(ans)<<'\\n';\n\tfor(auto p:ans) cout<<p.x+1<<' '<<p.y+1<<'\\n';\t\n\treturn 0;\n}\n```\n---\n**\u795d\u5927\u5bb6\u5b66\u4e60\u6109\u5feb\uff01**",
        "postTime": 1593928737,
        "uid": 118365,
        "name": "George1123",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1375E \u3010Inversion SwapSort\u3011"
    },
    {
        "content": "\u5192\u6ce1\u6392\u5e8f\u6709\u4e00\u4e2a\u4e0e\u9006\u5e8f\u5bf9\u76f8\u5173\u7684\u6027\u8d28\uff0c\u63d0\u51fa\u5e8f\u5217\u4e2d**\u9006\u5e8f\u6570\u503c\u5bf9**\uff0c\u90a3\u4e48\u5728\u5192\u6ce1\u6392\u5e8f\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u4ea4\u6362\u7684**\u6570\u503c\u5bf9**\uff0c\u6b63\u597d\u5c31\u662f**\u539f\u6570\u7ec4\u9006\u5e8f\u6570\u503c\u5bf9\u7684\u96c6\u5408**\u3002\n\n\u8fd9\u5c31\u76f4\u63a5\u5c06\u8fd9\u4e2a\u5355\u7eaf\u5229\u7528\u9006\u5e8f\u5bf9\u7684\u6392\u5e8f\u4e0e\u5192\u6ce1\u6392\u5e8f\u8054\u7cfb\u5728\u4e00\u8d77\u4e86\uff0c\u4f46\u662f\u4f60\u56fa\u5b9a\u7684\u662f\u6570\u503c\uff0c\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u4ea4\u6362\u7684\u59cb\u7ec8\u662f\u90a3\u51e0\u79cd**\u9006\u5e8f\u4e0b\u6807\u5bf9**\u3002\n\n\u4e3a\u4e86\u4fdd\u8bc1\u4e0b\u6807\u5bf9\u76f8\u540c\uff0c\u6211\u4eec\u8003\u8651\u9009\u62e9\u4e0b\u6807\u3002\u4f46\u662f\u5982\u679c\u8003\u8651\u4e0b\u6807\uff0c\u4e00\u6b21\u4ea4\u6362\u540e\u53c8\u5f88\u53ef\u80fd\u5bf9\u5176\u5b83\u7684\u9006\u5e8f\u4e0b\u6807\u5bf9\u4ea7\u751f\u4e86\u5f71\u54cd\u3002\n\n**\u6211\u4eec\u9700\u8981\u65e2\u8003\u8651\u9006\u5e8f\u4e0b\u6807\u5bf9\uff0c\u53c8\u8003\u8651\u9006\u5e8f\u6570\u503c\u5bf9\u3002**\n\n\u6709\u4e00\u4e2a\u7ecf\u5178\u5957\u8def\uff0c\u6784\u9020\u4e00\u4e2a\u6620\u5c04\u6570\u7ec4 $b[i]$ \u8868\u793a **\u5728\u4f4d\u7f6e $i$ \u4e0a \u6700\u7ec8\u5e94\u8be5\u653e\u7f6e\u5f53\u524d\u4f4d\u7f6e\u662f $b[i]$ \u7684\u6570\u3002** \n\n\u8fd9\u4e2a\u6570\u7ec4\u6709\u4e00\u4e9b\u6027\u8d28\uff1a\n\n- \u4ea4\u6362 $(a[b[u]],a[b[v]])$ \uff0c\u5219 $(b_u,b_v)$ \u4e5f\u4f1a\u4ea4\u6362\u3002\n- $u<v$ \u4e14 $b[u]>b[v]$ \u5fc5\u7136\u5bf9\u5e94\u5f53\u524d\u4e00\u4e2a\u9006\u5e8f\u6570\u503c\u5bf9 $(a[b[u]],a[b[v]])$ \u3002\n- \u82e5$u<v$ \uff0c\u5219 $a[b[u]]<a[b[v]]$ \u3002\n\n**\u4e0d\u65ad\u4ea4\u6362\u5f53\u524d\u7684\u9006\u5e8f\u5bf9\uff0c\u4e00\u5b9a\u6700\u7ec8\u4f1a\u4f7f\u5f97\u6570\u7ec4\u6709\u5e8f\u3002**\n\n\u5192\u6ce1\u6392\u5e8f\u4e00\u5b9a\u4f1a\u7ecf\u8fc7\u6240\u6709\u7684\u9006\u5e8f\u5bf9\uff0c\u90a3\u4e48\u6211\u4eec\u5bf9 $b$ \u8fdb\u884c\u5192\u6ce1\u6392\u5e8f\uff0c$b$ \u6709\u5e8f\u540e\uff0c$a$ \u4e5f\u6709\u5e8f\u4e86\uff0c**\u8fd9\u6837\u6570\u503c\u5bf9\u4e0a\u6709\u4e86\u4fdd\u8bc1**\u3002\n\n**\u800c\u4e14\u6bcf\u6b21\u4ea4\u6362\u76f8\u90bb\u7684 $(b[i],b[i+1])$ \u4e0d\u4f1a\u5f71\u54cd\u5230\u5176\u5b83\u7684\u9006\u5e8f\u4e0b\u6807\u5bf9\uff0c\u56e0\u4e3a $i$ \u548c $i+1$ \u4e2d\u95f4\u6ca1\u6709\u5176\u5b83\u6570\u3002**\n\n\u6211\u4eec\u53ea\u9700\u8981\u8bb0\u5f55\u4e0b\u6765\u6bcf\u6b21\u9700\u8981\u4ea4\u6362\u7684 $(b[i],b[i+1])$ \uff0c\u5c31\u662f\u7b54\u6848\u3002\n\n\u7279\u5224\u4e00\u4e0b\u76f8\u7b49\u60c5\u51b5\u3002\n\n",
        "postTime": 1636880684,
        "uid": 99643,
        "name": "\u9648\u5200\u4ed4",
        "ccfLevel": 7,
        "title": "CF1375E\u9898\u89e3"
    },
    {
        "content": "# \u6784\u9020\n\n## \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u957f\u5ea6\u4e3a $n$ \u7684\u6570\u5217 $a_1,a_2,\u2026\u2026a_n$ \uff0c\u627e\u5230\u5176\u6240\u6709\u9006\u5e8f\u5bf9\u7684\u4e00\u4e2a\u6392\u5217 $(u_i,v_i)$ \uff0c\u4f7f\u5f97\u4f9d\u6b21\u4ea4\u6362 $u_1$ \u548c $v_1$ \u4f4d\u7f6e\u4e0a\u7684\u6570\u3001 $u_2$ \u548c $v_2$ \u4f4d\u7f6e\u4e0a\u7684\u6570\u3001 $\u2026\u2026$ \u6700\u540e\u5f97\u5230\u7684\u6570\u5217**\u4e0d\u51cf**\u3002\n\n## \u5206\u6790\n\n\u7ecf\u8fc7\u4e00\u5b9a\u7684\u601d\u8003\u6211\u4eec\u80fd\u591f\u53d1\u73b0\uff0c\u672c\u9898\u7684\u8fc7\u7a0b\u7c7b\u4f3c\u4e8e**\u5192\u6ce1\u6392\u5e8f**\u7684\u8fc7\u7a0b\uff0c\u6700\u540e\u7684\u76ee\u7684\u662f\u5c06\u5176\u53d8\u6210\u4e00\u4e2a**\u5355\u8c03\u4e0d\u51cf**\u6570\u5217\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u5982\u4f55\u4f7f\u7528\u5192\u6ce1\u6392\u5e8f\u5c06\u5176\u89e3\u51b3\u5462\uff1f\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5192\u6ce1\u6392\u5e8f\u7684\u6bcf\u4e00\u6b21\u64cd\u4f5c\u662f\u4ea4\u6362\u4e24\u4e2a\u76f8\u90bb\u4f4d\u7f6e\u7684\u503c\uff0c\u5f88\u660e\u663e\u672c\u9898\u53ef\u4ee5\u4ea4\u6362\u7684\u6570\u6709\u53ef\u80fd\u662f\u975e\u76f8\u90bb\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5bf9\u539f\u6570\u5217\u8fdb\u884c\u4e00\u5b9a\u7684\u64cd\u4f5c\u3002\n\n\u5982\u4f55\u64cd\u4f5c\u624d\u80fd\u4f7f\uff1a\n\n**\u4ea4\u6362\u4e24\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u6570 $\\iff$ \u4ea4\u6362\u76f8\u90bb\u7684\u4e24\u4e2a\u503c**\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u4e00\u4e2a\u6392\u5217\u7684\u9006\u6392\u5217\u662f\u53ef\u4ee5\u505a\u5230\u7684\u3002\n\n\u56e0\u4e3a\u5bf9\u4e8e\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u6392\u5217 $a[i]$ (\u6ee1\u8db3 $a[i]\\in[1,n]$ \u4e14\u6ca1\u6709\u91cd\u590d\u5143\u7d20)\uff0c\u4ed6\u7684\u9006\u6392\u5217\u7684\u5b9a\u4e49\u662f $b[a[i]]=i$\uff0c\u6df1\u5165\u89e3\u8bfb\u4ed6\u7684\u610f\u601d\u5176\u5b9e\u662f $a[i]$ \u5728\u539f\u6392\u5217\u4e2d\u5904\u4e8e\u7684\u4f4d\u7f6e\uff0c\u4e14\u6211\u4eec\u53d1\u73b0\u82e5\u4e24\u4e2a\u5143\u7d20\u7ec4\u6210\u4e00\u7ec4\u9006\u5e8f\u5bf9\uff0c\u5728\u4ed6\u7684\u9006\u6392\u5217\u4e2d\u4ed6\u4eec\u503c\u7684\u5927\u5c0f**\u4f9d\u7136\u76f8\u53cd**\uff0c\u6240\u4ee5\u6211\u4eec\u53d1\u73b0\uff1a\n\n**\u539f\u95ee\u9898 $\\iff$ \u901a\u8fc7\u5192\u6ce1\u6392\u5e8f\u5c06 $b[i]$ \u6392\u5e8f\u4e3a $1,2,3,4,\u2026\u2026,n$**\n\n\u81f3\u4e8e\u4ea4\u6362\u8def\u5f84\u6211\u4eec\u53ea\u9700\u8981\u628a\u6211\u4eec\u4ea4\u6362\u7684\u503c\u8bb0\u5f55\u4e0b\u6765\u5c31\u53ef\u4ee5\u4e86\u3002\n\n## CODE\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=1e3+10,Time=1e6;\nstruct node{ int val,num,New; }a[N];\nint n;\nint b[N];\nint tot,ansl[Time],ansr[Time];\ninline int read()\n{\n\tint s=0,w=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-') w=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n\treturn s*w;\n}\ninline bool cmp1(node x,node y)\n{\n\tif(x.val==y.val) return x.num<y.num;\n\telse return x.val<y.val;\n}\ninline bool cmp2(node x,node y) { return x.num<y.num; }\ninline void initial() //\u79bb\u6563\u5316 \n{\n\tsort(a+1,a+n+1,cmp1);\n\tfor(register int i=1;i<=n;i++) a[i].New=i;\n\tsort(a+1,a+n+1,cmp2);\n}\nint main()\n{\n\tn=read();\n\tfor(register int i=1;i<=n;i++) a[i].val=read(),a[i].num=i;\n\tinitial(); //\u79bb\u6563\u5316\u9884\u5904\u7406 \n\tfor(register int i=1;i<=n;i++) b[a[i].New]=i;\n\tfor(register int i=1;i<=n;i++){\n\t\tfor(register int j=1;j<=n-i;j++){\n\t\t\tif(b[j]>b[j+1]){\n\t\t\t\tint temp=b[j];\n\t\t\t\tb[j]=b[j+1],b[j+1]=temp;\n\t\t\t\tansl[++tot]=b[j],ansr[tot]=b[j+1];\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",tot);\n\tfor(register int i=1;i<=tot;i++) printf(\"%d %d\\n\",ansl[i],ansr[i]);\n\treturn 0;\n}\n```",
        "postTime": 1613739343,
        "uid": 258460,
        "name": "Booksnow",
        "ccfLevel": 0,
        "title": "CF1375E Inversion SwapSort[\u9898\u89e3]"
    },
    {
        "content": "# \u6392\u5e8f\n\n- \u5bf9\u4e8e\u8fd9\u4e2a\u9898\uff0c\u5b83\u771f\u7684\u5f88\u5999\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u8003\u8651\u4e00\u4e0b(\u5982\u679c $a$ \u662f\u6392\u5217)\u66b4\u529b\u600e\u4e48\u6253\u3002\n\n- \u8003\u8651\u4e24\u4e2a\u6570\uff0c\u4ed6\u4eec\u4e92\u4e3a\u9006\u5e8f\u5bf9\uff0c\u5982\u679c\u4ea4\u6362\u5b83\u4eec\u4e24\u4e2a\uff0c\u5982\u4f55\u8ba9\u5f71\u54cd\u964d\u5230\u6700\u5c0f?\u90a3\u5c31\u662f\u5728\u4ed6\u4fe9\u4ea4\u6362\u4e4b\u540e\uff0c\u4ed6\u4fe9\u672c\u6765\u80fd\u6784\u6210\u7684\u9006\u5e8f\u5bf9\u6570\u662f\u4e0d\u53d8\u7684(\u9664\u53bb\u4ed6\u4fe9\u8fd9\u4e00\u7ec4)\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4e3e\u4e2a\u4f8b\u5b50\u3002\n\n$$ 5 \\ 4 \\ 2 \\ 1 \\ 3 $$\n\n- \u6240\u4ee5\u4e0b\u6807 $1$ \u548c $2,3,4,5$ \u6784\u6210\u9006\u5e8f\u5bf9\uff0c\u4e0b\u6807 $2$ \u548c\u4e0b\u6807 $3,4,5$ \u6784\u6210\u9006\u5e8f\u5bf9\uff0c\u5269\u4e0b\u7684\u4ee5\u6b64\u7c7b\u63a8\u3002\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u524d\u8fb9\u7684\u8bf4\u6cd5\u6a21\u62df\u4e00\u4e0b\uff0c\u4f8b\u5982\uff0c\u5982\u679c\u4ea4\u6362 $4$ \u548c $5$ \u4e4b\u540e\u53ea\u6709\u672c\u6765\u4ed6\u4fe9\u6240\u4ea7\u751f\u7684\u9006\u5e8f\u5bf9\u6d88\u5931\u4e86\uff0c\u5bf9\u4e8e\u540e\u4e09\u4e2a\u6570\uff0c\u4ecd\u7136\u4fdd\u6301\u7740\u9006\u5e8f\u5bf9\u7684\u5173\u7cfb\u3002\n\n- \u5177\u4f53\u5b9e\u73b0\u53ef\u4ee5\u7528\u4e00\u4e2a\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4e00\u4e0b\uff0c\u5982\u679c\u4e00\u7ec4\u9006\u5e8f\u5bf9\u6ee1\u8db3\u5173\u7cfb\uff0c\u5c31\u8bb0\u5f55\u4e0b\u7b54\u6848\uff0c\u66f4\u65b0\u4e00\u4e0b\u5f53\u524d\u4f4d\u7f6e\u7684\u503c\uff0c\u66b4\u529b\u8dd1\u4e0b\u4e00\u4e2a\uff0c\u76f4\u5230\u7528\u591f $tot$ \u6b21\uff0c\u8fd9\u91cc\u6302\u4e00\u4e9b\u6838\u5fc3\u4ee3\u7801\uff0c\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u8f93\u51fa\u4e00\u4e0b\u65b9\u6848\uff0c\u5c31\u53ef\u4ee5\u53d1\u73b0\u5b83\u7684\u4ea4\u6362\u662f\u5f88\u6709\u89c4\u5f8b\u7684\u3002\n\n```cpp\n while(num <= tot){\n        pos = 0;\n        fr(i, 1, tot){\n            if(vis[i]) continue;\n            x = from[i];\n            y = to[i];\n            q1 = query(x - 1,a[x] - 1);\n            q2 = query(y - 1,a[x] - 1);\n            q3 = query(x - 1,a[y] - 1);\n            q4 = query(y - 1,a[y] - 1);\n            if(q2 == q4 && q1 == q3 && a[x] - q1 - 1 == a[y] - q3 && a[x] - q2 - 1 == a[y] - q4){\n                pos = i;\n                break;\n            }\n        }\n        vis[pos] = 1;\n        ans[num][0] = x;\n        ans[num][1] = y;\n        update(x,a[x],-1);\n        update(y,a[y],-1);\n        update(x,a[y],1);\n        update(y,a[x],1);\n        swap(a[x],a[y]);\n        num++;\n    }\n```\n\n- \u5b83\u662f\u4e00\u76f4\u5728\u4ea4\u6362\u503c\u76f8\u5dee $1$ \u7684\u9006\u5e8f\u5bf9\uff0c\u56e0\u4e3a\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u9006\u5e8f\u5bf9\u9664\u4e86\u5c11\u7684\u8fd9\u4e00\u4e2a\u5176\u5b83\u90fd\u4e0d\u53d8\uff0c\u90a3\u4e48\u5728\u6211\u5c06\u6211\u5f53\u524d\u60f3\u653e\u7684\u6570\u5f52\u4f4d\u4e4b\u540e\uff0c\u5176\u4f59\u6570\u7684\u76f8\u5bf9\u6392\u540d\u662f\u4e0d\u53d8\u7684\u3002\n\n- \u4ecd\u7136\u662f\u4e0a\u8fb9\u7684\u4f8b\u5b50\u3002\n\n- \u7b2c\u4e00\u6b21\u4ea4\u6362 $4,5$\u3002\n\n$$4 \\ 5 \\ 2 \\ 1 \\ 3$$\n\n- \u7b2c\u4e8c\u6b21\u4ea4\u6362 $3,4$\u3002\n\n$$3 \\ 5 \\ 2 \\ 1 \\ 4$$\n\n- \u7b2c\u4e09\u6b21\u4ea4\u6362 $2,3$\u3002\n\n$$2 \\ 5 \\ 3 \\ 1 \\ 4$$\n\n- \u7b2c\u56db\u6b21\u4ea4\u6362 $1,2$\u3002\n\n$$1 \\ 5 \\ 3 \\ 2 \\ 4$$\n\n- \u6211\u4eec\u53d1\u73b0\u5728\u5c06 $1$ \u653e\u56de\u539f\u4f4d\u540e\uff0c\u540e\u56db\u4e2a\u6570\u7684\u76f8\u5bf9\u6392\u540d\u672a\u53d8\uff0c\u539f\u6765\u4e0b\u6807 $2$ \u5904\u662f\u56db\u4e2a\u6570\u4e2d\u6700\u5927\u7684\u6570\uff0c\u73b0\u5728\u4ecd\u662f\uff0c\u4e0b\u6807 $5$ \u5904\u662f\u56db\u4e2a\u6570\u4e2d\u6b21\u5927\u7684\u503c\uff0c\u73b0\u5728\u4e5f\u662f\uff0c\u5176\u4f59\u4ee5\u6b64\u7c7b\u63a8\u3002\n\n- \u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5927\u80c6\u5f52\u7eb3\u51fa\u7ed3\u8bba\uff0c\u6211\u4ece\u6700\u5c0f\u7684\u6570\u5f00\u59cb\uff0c\u4ee5\u6b64\u5c06\u4ed6\u653e\u56de\u539f\u4f4d\uff0c\u56e0\u4e3a\u5176\u4f59 $n - 1$ \u4e2a\u6570\u76f8\u5bf9\u6392\u540d\u4e0d\u53d8\uff0c\u6211\u53ef\u4ee5\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b(\u56e0\u4e3a\u6211\u8981\u5c06\u4e00\u4e2a\u5c0f\u6570\u653e\u56de\u539f\u6765\u7684\u4f4d\u7f6e\uff0c\u80af\u5b9a\u662f\u5148\u5c06\u5927\u6570\u6362\u56de\u53bb\uff0c\u518d\u5c06\u5c0f\u6570\u6362\u56de\u6765)\uff0c\u6240\u4ee5\uff0c\u8fd9\u4e2a\u9898\u5c31\u89e3\u51b3\u4e86\u3002\n\n- \u5f53\u7136\uff0c\u8fd9\u4e2a\u9898\u7684 $a$ \u662f\u4e2a\u5e8f\u5217\uff0c\u53ef\u4ee5\u91cd\u590d\uff0c\u90a3\u6211\u4eec\u53ea\u9700\u8981\u518d\u52a0\u4e00\u4e2a\u5224\u65ad\uff0c\u5bf9\u4e8e\u76f8\u540c\u7684\u6570\u5b57\uff0c\u6211\u5f3a\u5236\u5b83\u4ece\u540e\u5411\u524d\u9009\uff0c\u56e0\u4e3a\u8fd9\u6837\u6211\u5728\u5c06\u6570\u6362\u56de\u53bb\u4e4b\u540e\uff0c\u8fd9\u4e9b\u76f8\u540c\u7684\u6570\u5b57\u4ecd\u662f\u6709\u5e8f\u7684\uff0c\u53ea\u4e0d\u8fc7\u76f8\u5f53\u4e8e\u662f\u6574\u4f53\u5e73\u79fb\u800c\u5df2\uff0c\u5982\u679c\u4ece\u524d\u5411\u540e\u9009\uff0c\u663e\u7136\u4f1a\u4e71\u3002\n- \u7136\u540e\u5c31\u53ef\u4ee5\u6253\u51fa\u6211\u4eec\u8d85\u7ea7\u77ed\u7684\u4ee3\u7801\u4e86\u3002\n\n- \u5f53\u7136\uff0c\u6211\u4eec\u6709 $10^{3}$ \u4e2a\u6570\uff0c\u4f1a\u4ea7\u751f $10^{6}$ \u4e2a\u9006\u5e8f\u5bf9\uff0c\u6570\u7ec4\u8bb0\u5f97\u5f00\u591f\u3002\n\n```cpp\n\n\n#include <bits/stdc++.h>\n#define LL long long\n#define Re register int\n#define LD double\n#define mes(x, y) memset(x, y, sizeof(x))\n#define cpt(x, y) memcpy(x, y, sizeof(x))\n#define fuc(x, y) inline x y\n#define fr(x, y, z)for(Re x = y; x <= z; x ++)\n#define fp(x, y, z)for(Re x = y; x >= z; x --)\n#define delfr(x, y, z)for(Re x = y; x < z; x ++)\n#define delfp(x, y, z)for(Re x = y; x > z; x --)\n#define frein(x) freopen(#x \".in\", \"r\", stdin)\n#define freout(x) freopen(#x \".out\", \"w\", stdout)\n#define ki putchar('\\n')\n#define fk putchar(' ')\n#define WMX aiaiaiai~~\n#define pr(x, y) pair<x, y>\n#define mk(x, y) make_pair(x, y)\n#define pb(x) push_back(x)\n#define re(x) return x\n#define sec second\n#define fst first\n\n\nusing namespace std;\nnamespace kiritokazuto{\n    auto read = [](){\n        LL x = 0;\n        int f = 1;\n        char c;\n        while (!isdigit(c = getchar())){ if (c == '-')f = -1; }\n        do{ x = (x << 1) + (x << 3) + (c ^ 48); } while (isdigit(c = getchar()));\n        return x * f;\n    };\n    template  <typename T> fuc(void, write)(T x){\n        if (x < 0)putchar('-'), x = -x;\n        if (x > 9)write(x / 10); putchar(x % 10 | '0');\n    }\n}\n\nusing namespace kiritokazuto;\n\n\n\nconst int maxn = 2000000;\n\nconst LL Inf = 0x7ffffffffffffff;\nint n;\nint a[maxn];\nstruct Node {\n    int from, to;\n    int val;\n    friend bool operator < (Node A, Node B) {\n        if(A.from != B.from)return A.from < B.from;\n        if(A.val != B.val) return A.val > B.val;\n        return A.to > B.to;\n    }\n}q[maxn];\n\nint tot = 0;\nsigned main() {\n    n = read();\n    fr(i, 1, n)a[i] = read();\n    fr(i, 1, n) {\n        fr(j, i + 1, n) {\n            if(a[i] > a[j]) {   \n                q[++tot].from = i;\n                q[tot].to = j;\n                q[tot].val = a[j];\n            }\n        }\n\n    }\n    write(tot);\n    ki;\n    sort(q + 1, q + tot + 1);\n    fr(i ,1 ,tot) {\n        printf(\"%d %d\\n\", q[i].from, q[i].to);\n    }\n\n    re(0); \n\n}\n```\n",
        "postTime": 1664264936,
        "uid": 277777,
        "name": "kiritokazuto",
        "ccfLevel": 0,
        "title": "\u6392\u5e8f"
    },
    {
        "content": "### [\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/CF1375E)\n\n### \u5206\u6790\n\n\u8ba9\u6211\u4eec\u5148\u7b80\u5316\u4e00\u4e0b\uff0c\u5047\u8bbe\u6570\u5217\u662f\u4e00\u4e2a\u6392\u5217\uff0c\u600e\u4e48\u505a\uff1f\n\n\u5bb9\u6613\u53d1\u73b0\u6b64\u65f6\u4ea4\u6362\u4f4d\u7f6e\u5c31\u76f8\u5f53\u4e8e\u4ea4\u6362\u503c\uff08\u6bd5\u7adf\u662f\u4e2a\u6392\u5217\uff0c\u8fd9\u4e24\u4e1c\u897f\u662f\u76f8\u7b49\u7684\uff09\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u6211\u8fd9\u6b21\u79fb\u52a8\u7684\u4e24\u4e2a\u6570\u4e0d\u4f1a\u5bfc\u81f4\u67d0\u4e00\u4e2a\u6ca1\u79fb\u52a8\u8fc7\u7684\u9006\u5e8f\u5bf9\u6d88\u5931\uff0c\u4ee5\u81f3\u5176\u4e0d\u80fd\u79fb\u52a8\uff0c\u6211\u4eec\u663e\u7136\u6bcf\u6b21\u8981\u4ea4\u6362\u4e24\u4e2a\u76f8\u90bb\u7684\u9006\u5e8f\u5bf9\u3002\n\n\u90a3\u8fd9\u4e2a\u600e\u4e48\u505a\u5462\uff0c\u6a21\u62df\u4e00\u4e0b\u4ea4\u6362\u7684\u987a\u5e8f\u53d1\u73b0\u8fd9\u5c31\u662f\u4e00\u4e2a[\u5192\u6ce1\u6392\u5e8f](https://baike.baidu.com/item/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/4602306?fr=aladdin)\u677f\u5b50\uff01\n\n\u73b0\u5728\u9898\u76ee\u62d3\u5c55\u5230\u4e86\u4e00\u4e2a\u5e73\u5e38\u7684\u6570\u5217\uff0c\u8981\u4ea4\u6362\u7684\u53ea\u662f\u4f4d\u7f6e\uff0c\u5f53\u7136\u5bb9\u6613\u60f3\u5230\u6211\u4eec\u4e5f\u53ea\u7528\u4ea4\u6362\u503c\u76f8\u90bb\u7684\u9006\u5e8f\u5bf9\u5c31\u597d\uff0c\u4f46\u662f\u4f1a\u53d1\u73b0\u6b63\u7740\u5f80\u4e0b\u505a\u7684\u65f6\u5019\u6bd4\u8f83\u96be\u52a8\u6001\u7ef4\u62a4\u6211\u4eec\u7684\u503c\u7684\u9006\u5e8f\u5bf9\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u53d8\u6362\u4e00\u4e0b\u601d\u8def\uff0c\u5982\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/xz4yxgyv.png)\n\n\u8bb0\u4e0b\u6807\u4e3a $x$ \u8f74\uff0c\u6570\u5927\u5c0f\u4e3a $y$ \u8f74\u3002\n\n\u6211\u4eec\u627e\u5230 $x$ \u8f74\u6bcf\u4e2a\u70b9\u5728 $y$ \u8f74\u4e0a\u7684\u6295\u5f71\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/39pgm03j.png)\n\n\u7136\u540e\u628a $y$ \u8f74\u548c $x$ \u8f74\u4ea4\u6362\u4e00\u4e0b\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/78tvdgff.png)\n\n\uff01\uff01\uff01\u6b64\u65f6\u6211\u4eec\u5c31\u53d1\u73b0\u4e86\uff0c\u539f\u672c\u9898\u76ee\u8981\u6c42\u7684\u4ea4\u6362\u4f4d\u7f6e\u53d8\u6210\u4e86\u4ea4\u6362\u503c\u4e86\uff01\n\n\u4e8e\u662f\u53ea\u9700\u8981\u8f6c\u6362\u5b8c\u6210\u7136\u540e\u518d\u505a\u4e00\u4e2a\u5192\u6ce1\u5373\u53ef\uff01\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int maxn=1e6+7;\nint read() \n{\n\tint res=0,f=1;\n\tchar c=getchar();\n\twhile(!isdigit(c) && c!='-') c=getchar();\n\tif(c=='-') f=-1,c=getchar();\n\twhile(isdigit(c)) res=(res<<1)+(res<<3)+c-48,c=getchar();\n\treturn res*f;\n}\nstruct node\n{\n    int v,id,nw;  //\u503c\uff0c\u4f4d\u7f6e\uff0c\u548c\u79bb\u6563\u5316\u7684\u4f4d\u7f6e\n}a[maxn];\nstruct Ans { int x,y; }ans[maxn];\nint n,m;\nint b[maxn];\nbool cmp(node a,node b) { return a.v==b.v?a.id<b.id:a.v<b.v; }\nbool cmp2(node a,node b) { return a.id<b.id;}\nint main()\n{\n\tn=read();\n    for(int i=1;i<=n;i++) a[i]=(node){read(),i,0};\n    sort(a+1,a+n+1,cmp);  //\u79bb\u6563\u5316\n    for(int i=1;i<=n;i++) a[i].nw=i;\n    sort(a+1,a+n+1,cmp2);\n    for(int i=1;i<=n;i++) b[a[i].nw]=i;  //\u5f97\u51fa\u8f6c\u6362\u73a9\u540e\u7684\u6570\u7ec4b\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<n;j++)\n            if(b[j]>b[j+1])\n                swap(b[j],b[j+1]),\n                ans[++m]=(Ans){b[j],b[j+1]};\n    printf(\"%d\\n\",m);\n    for(int i=1;i<=m;i++) printf(\"%d %d\\n\",ans[i].x,ans[i].y);\n\treturn 0;\n}\n```\n",
        "postTime": 1635564063,
        "uid": 78331,
        "name": "Melon_Musk",
        "ccfLevel": 5,
        "title": "CF1375E Inversion SwapSort \u9898\u89e3"
    },
    {
        "content": "\u524d\u6392\u63d0\u793a\uff1a\u5efa\u8bae\u624b\u73a9\u7406\u89e3\u3002\n\n\u5148\u6765\u8003\u8651\u4e00\u4e2a\u5f31\u5316\u7248\u7684\u95ee\u9898\uff0c\u5982\u679c $a$ \u662f\u4e00\u4e2a**\u6392\u5217**\u8be5\u600e\u4e48\u505a\u3002\n\n\u81ea\u7136\u60f3\u5230\u628a\u9006\u5e8f\u5bf9\u8fde\u8fb9\uff0c\u6211\u4eec\u5e0c\u671b\u5f53\u4e00\u4e2a\u6570\u5230\u8fbe\u5176\u5e94\u5f53\u5230\u8fbe\u7684\u4f4d\u7f6e\u65f6\uff0c\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u6240\u6709\u8fb9\u5df2\u7ecf\u5168\u90e8\u4ea4\u6362\u8fc7\uff0c\u90a3\u4e48\u76f8\u5f53\u4e8e\u6bcf\u6b21\u628a\u6700\u540e\u4e00\u4f4d\u5220\u53bb\u3002\n\n\u6211\u4eec\u9700\u8981\u6ee1\u8db3\u4ec0\u4e48\u8981\u6c42\u628a\u8fd9\u4e9b\u8fb9\u90fd\u8d70\u5b8c\uff1f\n\n\u8981\u6c42\u5373\u4e3a\u4e4b\u524d\u6709\u9006\u5e8f\u5bf9\u7684\u4f4d\u7f6e\u73b0\u5728\u4ecd\u7136\u6709\u9006\u5e8f\u5bf9\uff0c\u4e5f\u5c31\u662f\u76f8\u5bf9\u7684\u6392\u540d\u4e0d\u53d8\u3002\u6ee1\u8db3\u8fd9\u4e2a\u8981\u6c42\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u8981\u6211\u4eec\u6309\u7167\u4ea4\u6362\u4f4d\u7f6e\u4e0a\u7684\u6570\u5347\u5e8f\u6392\u5e8f\u3002\n\n\u7b80\u5355\u7406\u89e3\u4e00\u4e0b\uff0c\u5047\u8bbe\u73b0\u5728\u5012\u5e8f\u679a\u4e3e\u5230\u4f4d\u7f6e $i$\uff0c$i$ \u4e0a\u7684\u6570\u4e3a $j$\uff0c\u90a3\u4e48 $[j+1,i]$ \u6240\u5728\u7684\u4f4d\u7f6e\u90fd\u5bf9 $i$ \u6709\u8fde\u8fb9\uff0c\u4e00\u6b21\u79fb\u52a8\uff0c\u90a3\u4e48 $j$ \u53bb\u5230\u4e86 $j+1$\uff0c$j+1$ \u7531 $j$ \u8fc7\u6e21\u5230 $j+2$\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u6ee1\u8db3\u4e86\u6211\u4eec\u7684\u8981\u6c42\uff0c\u800c $i$ \u6700\u7ec8\u4e5f\u53bb\u5230\u4e86 $i$ \u8fd9\u4e2a\u4f4d\u7f6e\u3002\n\n\u4ee5\u4e0b\u5efa\u8bae\u7ed3\u5408\u6570\u636e $\\{3,4,3,1,2\\}$ \u7406\u89e3\u3002\n\n\u90a3\u4e48\u5982\u679c\u4e0d\u662f\u6392\u5217\uff0c\u5c31\u4f1a\u51fa\u73b0\u201c\u539f\u6765\u4f4d\u7f6e\u4e0a\u662f\u9006\u5e8f\u5bf9\uff0c\u800c\u73b0\u5728\u7684\u6570\u4f4d\u7f6e\u76f8\u7b49\u201d\u7684\u60c5\u51b5\uff0c\u5c31\u8981\u6c42\u5148\u6362\u5230\u539f\u6765\u6570\u66f4\u5c0f\u7684\u4f4d\u7f6e\u3002\n\n\u4f8b\u5982\u4e0a\u9762\u6570\u636e\u5728\u628a $4$ \u5f52\u4f4d\u4e4b\u540e\uff0c\u5f97\u5230 $\\{2,3,3,1,4\\}$\uff0c\u6b64\u65f6\u4ea4\u6362\u8fc7 $2$ \u540e\uff0c\u5148\u4ea4\u6362\u54ea\u4e2a $3$ \u5b9e\u9645\u4e0a\u51b3\u5b9a\u4e86 $2$ \u5c06\u4f1a\u53bb\u5230\u90a3\u91cc\uff0c\u663e\u7136\u6211\u4eec\u60f3\u8981\u53bb\u5230\u4e00\u4e2a\u539f\u6765\u4f4d\u7f6e\u4e0a\u6570\u5c0f\u7684\u4ee5\u6ee1\u8db3\u9006\u5e8f\u5bf9\u8981\u6c42\uff0c\u4e5f\u5c31\u662f\u9009\u62e9 $(3,4)$\u3002\n\n\u6700\u540e\u5c31\u662f\u9898\u76ee\u8981\u6c42\u4e0d\u4e0b\u964d\uff0c\u56e0\u6b64\u9ed8\u8ba4\u7684\u4e00\u4e2a\u5173\u952e\u5b57\u5c31\u662f\u4e0b\u6807\uff0c\u800c\u5f53\u6211\u4eec\u9047\u5230\u539f\u6765\u548c\u73b0\u5728\u4f4d\u7f6e\u4e0a\u6570\u90fd\u76f8\u7b49\u7684\u60c5\u51b5\uff0c\u5c31\u4f18\u5148\u653e\u5230\u9760\u524d\u7684\u4f4d\u7f6e\u4e0a\u53bb\u3002\n\n\u603b\u7ed3\u4e00\u4e0b\uff1a\u6392\u5217\u6bd4\u8f83\u597d\u7406\u89e3\uff0c\u5e8f\u5217\u548c\u6392\u5217\u6700\u5927\u533a\u522b\u5728\u4e8e\u91cd\u590d\uff0c\u5b9e\u9645\u4e0a\u591a\u4e2a\u91cd\u590d\u7684\u600e\u4e48\u4ea4\u6362\u6700\u91cd\u8981\u7684\u662f\u7b2c\u4e00\u4e2a\u6362\u8c01\uff0c\u8fd9\u51b3\u5b9a\u4e86\u4e0a\u4e00\u4e2a\u8f83\u5c0f\u7684\u6570\u53bb\u5230\u54ea\u91cc\uff0c\u6211\u4eec\u5e0c\u671b\u53bb\u5230\u4e00\u4e2a\u5408\u6cd5\u7684\u4f4d\u7f6e\uff0c\u82e5\u53ef\u4ee5\u53bb\u5230\u539f\u6765\u4f4d\u7f6e\u4e0a\u6570\u66f4\u5c0f\u7684\u5c31\u4f1a\u4f18\u5148\u9009\u8fd9\u4e2a\uff0c\u53cd\u4e4b\u9009\u66f4\u9760\u524d\u7684\u4f4d\u7f6e\u3002\n\n\u5bf9\u4e00\u4e2a\u4f4d\u7f6e\u7684\u5168\u90e8\u4ea4\u6362\u7684\u672c\u8d28\u5c31\u662f\u628a\u5f53\u524d\u8981\u653e\u5230\u8fd9\u91cc\u7684\u6570\u5220\u53bb\uff0c\u5269\u4e0b\u7684\u6570\u987a\u4f4d\u79fb\u52a8\u5230\u76f8\u5e94\u7684\u4f4d\u7f6e\u3002",
        "postTime": 1668592694,
        "uid": 321177,
        "name": "SoyTony",
        "ccfLevel": 6,
        "title": "CF1375E \u9898\u89e3"
    },
    {
        "content": "\u8003\u8651\u6309\u7167\u503c\u57df\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\uff0c\u6bcf\u6b21\u90fd\u8ba9\u8fd9\u4e2a\u503c\u57df\u7684\u524d\u7f00\u6392\u597d\u5e8f\u3002\u8003\u8651\u65b0\u52a0\u5165\u4e00\u4e2a $i$\uff0c\u90a3\u4e48\u7531\u4e8e $1,2,\\dots,i-1$ \u662f\u6392\u597d\u5e8f\u7684\uff0c\u6211\u4eec\u52a0\u5165 $i$ \u540e\u9700\u8981\u5230\u8fd9\u4e2a\u5b50\u5e8f\u5217\u7684\u6700\u540e\uff0c\u800c\u56e0\u4e3a $1,2,\\dots,i-1$ \u90fd $<i$ \u6240\u4ee5\u4ed6\u662f\u968f\u610f\u4ea4\u6362\u7684\uff0c\u4e8e\u662f\u53ef\u4ee5\u5c06 $i$ \u548c\u9006\u5e8f\u5bf9\u4e2d\u6700\u5927\u7684\u4e00\u4e2a\u4f4d\u7f6e\u4ea4\u6362\uff0c\u8fd9\u6837 $i$ \u5b58\u50a8\u7684\u5c31\u662f $i-1$ \u4e86\uff0c\u518d\u5c06 $i$ \u548c\u7b2c\u4e8c\u5927\u7684\u4f4d\u7f6e\u4ea4\u6362\uff0c\u4e00\u76f4\u8fd9\u6837\u8fdb\u884c\u4e0b\u53bb\u3002\u5168\u90e8\u4ea4\u6362\u5b8c\u540e\u5c31\u662f\u6709\u5e8f\u7684\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define N 2001001\n#define MAX 3505\nusing namespace std;\ntypedef long long ll;\ntypedef double db;\nconst ll mod=998244353,inf=1e18;\ninline void read(ll &ret)\n{\n\tret=0;char c=getchar();bool pd=false;\n\twhile(!isdigit(c)){pd|=c=='-';c=getchar();}\n\twhile(isdigit(c)){ret=(ret<<1)+(ret<<3)+(c&15);c=getchar();}\n\tret=pd?-ret:ret;\n\treturn;\n}\nll n,a[N],pos[N];\nvector<pair<ll,ll> >ans;\nll sum[N];\nmap<ll,ll>mp;\nll b[N];\nsigned main()\n{\n\tread(n);\n\tll sum=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tread(a[i]);\n\t\tb[i]=a[i];\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tll res=0;\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tres+=b[j]<b[i];\n\t\ta[i]=res+(++mp[b[i]]);\n\t\tpos[a[i]]=i;\n\t\tfor(int j=1;j<i;j++)\n\t\t\tsum+=a[j]>a[i];\n\t}\n\tprintf(\"%lld\\n\",sum);\n\tfor(int i=2;i<=n;i++) \n\t{\n\t\tvector<ll>now;\n\t\tfor(int j=1;j<i;j++)\n\t\t{\n\t\t\tif(pos[j]>pos[i])\n\t\t\t\tnow.push_back(pos[j]);\n\t\t}\n\t\tsort(now.begin(),now.end());\n\t\tfor(int j=(int)now.size()-1;j+1;j--)\n\t\t\tprintf(\"%lld %lld\\n\",pos[i],now[j]);\n\t}\n\texit(0);\n}\n```",
        "postTime": 1668556951,
        "uid": 176990,
        "name": "Celtic",
        "ccfLevel": 9,
        "title": "CF1375E"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\n>\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a_1,\\dots,a_n$\uff0c\u6c42\u51fa $a$ \u4e2d\u6240\u6709\u9006\u5e8f\u5bf9\u4f4d\u7f6e $(pos1_{1},pos2_1),\\dots,(pos1_n,pos2_n)$ \u7684\u4e00\u4e2a\u6392\u5217\uff0c\u4f7f\u5f97\u6309\u7167\u8fd9\u4e2a\u6392\u5217\u4f9d\u6b21\u4ea4\u6362\u4f4d\u7f6e\u540e\u5e8f\u5217\u5355\u8c03\u4e0d\u964d\u3002\n>\n>$1 \\le n \\le 10^3$\uff0c$1 \\le a_i \\le 10^9$\u3002\n\n### \u89e3\u9898\u601d\u8def\n\n\u53d1\u73b0\u9898\u76ee\u4e2d\u8981\u4ea4\u6362\u7684\u662f\u4f4d\u7f6e\uff0c\u800c\u9006\u5e8f\u5bf9\u662f\u8ddf\u7740\u503c\u8d70\uff0c\u800c\u4e0d\u662f\u4f4d\u7f6e\u8d70\u7684\u3002\n\n\u6240\u4ee5\u8003\u8651\u5982\u679c\u4ea4\u6362\u7684\u4e0d\u662f\u539f\u672c\u9006\u5e8f\u5bf9\u7684\u4f4d\u7f6e\u800c\u662f\u4ea4\u6362\u540e\u5f53\u524d\u9006\u5e8f\u5bf9\u6240\u5728\u4f4d\u7f6e\u600e\u4e48\u505a\u3002\n\n\u6211\u4eec\u53d1\u73b0\u7c7b\u4f3c\u4e8e**\u5192\u6ce1\u6392\u5e8f**\u7684\u505a\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u6bcf\u6b21\u4ea4\u6362\u76f8\u90bb\u4e24\u4e2a\u9006\u5e8f\u5bf9\u3002\n\n\u8fd9\u6837\u505a\uff0c\u524d\u9762\u90e8\u5206\u5185\u90e8\u7684\u8d21\u732e\u4ee5\u53ca\u540e\u9762\u90e8\u5206\u5185\u90e8\u7684\u8d21\u732e\u80af\u5b9a\u4e0d\u4f1a\u53d8\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u5f53\u524d\u90e8\u5206\u5185\u90e8\u8d21\u732e\uff0c\u4ee5\u53ca\u5f53\u524d\u90e8\u5206\u4e0e\u524d\u9762\u540e\u9762\u7684\u8de8\u533a\u95f4\u8d21\u732e\u3002\u90a3\u4e48\u663e\u7136\uff0c\u5185\u90e8\u7684\u4ea4\u6362\u51cf\u5c11\u4e86\u4e00\u4e2a\u9006\u5e8f\u5bf9\uff0c\u524d\u9762\u90e8\u5206\u4e0e\u5f53\u524d\u8fd9\u4e24\u4e2a\u6570\u7684\u8d21\u732e\uff0c\u4ee5\u53ca\u548c\u540e\u9762\u90e8\u5206\u548c\u5f53\u524d\u8fd9\u4e24\u4e2a\u6570\u7684\u8d21\u732e\u662f\u4e0d\u4f1a\u6539\u53d8\u7684\uff08\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u6570\u5728\u76f8\u5bf9\u4e8e\u524d\u540e\u4e24\u4e2a\u90e8\u5206\u7684\u4f4d\u7f6e\u662f\u6ca1\u6709\u53d8\u7684\uff09\uff0c\u90a3\u4e48\u6574\u4e2a\u5e8f\u5217\u7684\u9006\u5e8f\u5bf9\u6570\u5c31\u51cf\u5c11\u4e86 $1$\u3002\n\n\u800c\u6211\u4eec\u6bcf\u6b21\u90fd\u8fd9\u6837\u8c03\u6574\uff0c\u6bcf\u6b21\u53ef\u4ee5\u51cf\u5c11\u4e00\u4e2a\u539f\u5e8f\u5217\u4e2d\u7684\u9006\u5e8f\u5bf9\u3002\u800c\u8fd9\u6837\u7684\u64cd\u4f5c\u53c8\u53ef\u4ee5\u8fdb\u884c\u9006\u5e8f\u5bf9\u6570\u91cf\u6b21\u3002\u6240\u4ee5\u6700\u540e\u4e00\u5b9a\u53ef\u4ee5\u5230\u8fbe\u4e00\u4e2a\u6709\u5e8f\u72b6\u6001\u3002\n\n\u7136\u540e\u8003\u8651\u4ea4\u6362\u7684\u662f\u539f\u672c\u9006\u5e8f\u5bf9\u4f4d\u7f6e\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u4ee4 $b_{a_i}=i$\uff0c\u8fd9\u6837\u8f6c\u5316\u51fa\u7684\u5e8f\u5217 $b_1...b_n$ \u5c31\u6ee1\u8db3\u4ea4\u6362\u7684\u662f\u8ddf\u7740\u503c\u8d70\u7684\u9006\u5e8f\u5bf9\u4f4d\u7f6e\u3002\u800c\u4e14\u6211\u4eec\u53d1\u73b0\u539f\u672c\u5e8f\u5217\u4e2d\u7684\u9006\u5e8f\u5bf9\u9700\u8981\u6ee1\u8db3 $i<j$ \u4e14 $a_i>a_j$\uff0c\u5728 $b$ \u5e8f\u5217\u4e2d\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u6837\u7684\u4e00\u5bf9 $(i,j)$ \u7684\u5173\u7cfb\u53d8\u6210\u4e86 $i>j$ \uff08\u56e0\u4e3a $a_i>a_j$\uff09\u4e14 $b_i<b_j$\uff08\u56e0\u4e3a $i<j$\uff09\uff0c\u4ecd\u7136\u662f\u4e00\u5bf9\u9006\u5e8f\u5bf9\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u539f\u5e8f\u5217\u548c\u8f6c\u5316\u540e\u5e8f\u5217\u7684\u9006\u5e8f\u5bf9\u662f\u5b8c\u5168\u4e0d\u53d8\u7684\u3002\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u4e0a\u9762\u7684\u8ba8\u8bba\u90fd\u662f\u57fa\u4e8e $a$ \u6570\u7ec4\u662f\u4e00\u4e2a\u6392\u5217\u7684\uff08$a \\to b$ \u7684\u8f6c\u5316\u9700\u8981\u7528\u5230\u8fd9\u4e00\u70b9\uff09\uff0c\u800c\u9898\u76ee\u4e2d\u7ed9\u51fa\u7684\u5e8f\u5217\u53ef\u80fd\u5e76\u4e0d\u662f\u4e00\u4e2a\u6392\u5217\uff0c\u600e\u4e48\u529e\u5462\uff1f\n\n\u6ce8\u610f\u5230\u539f\u5e8f\u5217\u4e2d\u53ef\u80fd\u51fa\u73b0\u503c\u76f8\u540c\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u6211\u4eec\u5bf9\u4e8e\u539f\u5e8f\u5217\u4e2d\u7684\u4e00\u4e2a\u6570\uff0c\u503c\u4f5c\u4e3a\u5b83\u7684\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u4eba\u4e3a\u7ed9\u4e88\u5b83\u4e00\u4e2a\u6807\u53f7\u4f5c\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\uff0c\u518d\u8fdb\u884c**\u79bb\u6563\u5316**\uff0c\u4fdd\u8bc1\u6ca1\u6709\u76f8\u540c\u7684\u503c\u3002\u79bb\u6563\u5316\u540e\u518d\u8fdb\u884c\u4e0a\u9762\u7684\u64cd\u4f5c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n### Code\n\n```cpp\n#include<bits/stdc++.h>\n#define mp make_pair\nusing namespace std;\n\ninline int read(){\n\tint x=0,f=1; char ch=getchar();\n\twhile (!isdigit(ch)){ if (ch=='-') f=-1; ch=getchar(); }\n\twhile (isdigit(ch)){ x=x*10+ch-'0'; ch=getchar(); }\n\treturn x*f;\n}\nconst int N=2005;\n\nint n,p[N];\npair<int,int> a[N],b[N];\nvector < pair<int,int> > ans;\n\nint main(){\n\t//freopen(\"CF1375E.in\",\"r\",stdin);\n\t//freopen(\"CF1375E.out\",\"w\",stdout);\n\tn=read();\n\tfor (int i=1;i<=n;++i) a[i]=mp(read(),i),b[i]=a[i];\n\tsort(b+1,b+n+1);\n\tfor (int i=1;i<=n;++i)\n\t\ta[i].first=lower_bound(b+1,b+n+1,a[i])-b;\n\t// printf(\"a: \"); for (int i=1;i<=n;++i) printf(\"%d \",a[i].first); printf(\"\\n\");\n\tfor (int i=1;i<=n;++i) p[a[i].first]=i;\n\t// printf(\"p: \"); for (int i=1;i<=n;++i) printf(\"%d \",p[i]); printf(\"\\n\");\n\tfor (int i=1;i<=n;++i)\n\t\tfor (int j=n;j>=2;--j)\n\t\t\tif (p[j]<p[j-1]){\n\t\t\t\tans.push_back(mp(p[j],p[j-1]));\n\t\t\t\tswap(p[j],p[j-1]);\n\t\t\t}\n\tprintf(\"%d\\n\",(signed)(ans.size()));\n\tfor (auto it : ans)\n\t\tprintf(\"%d %d\\n\",it.first,it.second);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1635563710,
        "uid": 119264,
        "name": "Alkaid_Star",
        "ccfLevel": 0,
        "title": "CF1375E Inversion SwapSort\uff08\u6784\u9020&\u601d\u7ef4\uff09\u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u9898\u76ee\u4e2d\u7684\u6570\u5217\u53ef\u4ee5\u8f6c\u6362\u4e3a\u6392\u5217\u3002\u6211\u4eec\u6309 $a$ \u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c$pos$ \u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u7136\u540e\u79bb\u6563\u5316\u4e00\u4e0b\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u6392\u5217\u3002\u8bbe $q_{p_i}=i$\u3002\n\n\u6211\u4eec\u8003\u8651\u50cf swap sort \u4e00\u6837\uff0c\u6bcf\u6b21\u5b89\u7f6e\u597d\u6700\u5927\u7684\u4e00\u4f4d\u3002\u5047\u8bbe\u6211\u4eec\u73b0\u5728\u6b63\u5728\u5904\u7406\u7b2c $x$ \u4f4d\uff0c\u6211\u4eec\u9700\u8981\u4fdd\u8bc1\u5904\u7406\u5b8c\u540e\uff0c\u524d\u9762 $[1,x]$ \u7684\u5143\u7d20\u7684\u76f8\u5bf9\u5927\u5c0f\u4ecd\u7136\u4e0d\u53d8\uff0c\u8fd9\u6837\u624d\u80fd\u4fdd\u8bc1\u4e4b\u540e\u53ef\u4ee5\u901a\u8fc7\u4ea4\u6362\u9006\u5e8f\u5bf9\u6765\u8fbe\u6210\u7ed3\u679c\u3002\u6709\u4e00\u79cd\u65b9\u6cd5\uff0c\u5c31\u662f\u6309\u6b21\u5e8f swap $(q_{p_x+i},x))$\uff0c\u8fd9\u6837\u4e00\u8f6e\u64cd\u4f5c\u4e0b\u6765\uff0c\u524d\u9762\u6bd4 $p_x$ \u5927\u7684\u6570\u5168\u90e8-1\uff0c\u7136\u540e $p_x=x$\u3002\n\n\u5f88\u5999\uff01!1\n\n```cpp\n#include<bits/stdc++.h>\n#define rep(i,a,b) for(register int i=(a);i<=(b);i++)\n#define per(i,a,b) for(register int i=(a);i>=(b);i--)\nusing namespace std;\nconst int N=1e3+9;\ntypedef pair<int,int> pii;\n\ninline int read() {\n    register int x=0, f=1; register char c=getchar();\n    while(c<'0'||c>'9') {if(c=='-') f=-1; c=getchar();}\n    while(c>='0'&&c<='9') {x=(x<<3)+(x<<1)+c-48,c=getchar();}\n    return x*f;\n}\n\nint n,a[N],q[N];\npii b[N];\n\nvoid swp(int x,int y) {\n\tq[a[x]]=y, q[a[y]]=x, swap(a[x],a[y]);\n\tprintf(\"%d %d\\n\",x,y);\n}\n\nint main() {\n\tn=read();\n\trep(i,1,n) a[i]=read(), b[i]=make_pair(a[i],i);\n\tsort(b+1,b+n+1);\n\trep(i,1,n) a[b[i].second]=i, q[i]=b[i].second;\n\tint cnt=0;\n\trep(i,1,n) rep(j,i+1,n) cnt+=(a[j]<a[i]);\n\tprintf(\"%d\\n\",cnt);\n\tper(i,n,1) {\n\t\trep(j,a[i]+1,i) swp(q[j],i);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1612431564,
        "uid": 180652,
        "name": "_lgswdn",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1375E \u3010Inversion SwapSort\u3011"
    },
    {
        "content": "\u4e3a\u5565\u73b0\u5728\u5047\u505a\u6cd5\u4e00\u76f4\u8fc7\u9898\u554a\uff01\n\n\u6709\u4e00\u4e2a\u4e0d\u77e5\u9053\u5bf9\u4e0d\u5bf9\u7684\u505a\u6cd5\uff0c\u8003\u8651\u5f53\u524d\u5e8f\u5217 $A$ \u4e2d\u82e5\u6ca1\u6709 $i$ \u4f7f\u5f97 $A_i> A_{i+1}$ \u90a3\u4e48\u80af\u5b9a $A$ \u662f\u4e0d\u4e25\u683c\u5355\u8c03\u9012\u589e\u7684\u3002\n\n\u5426\u5219\u6211\u4eec\u5c06 $i$ \u4e0e $i+1$ \u5bf9\u5e94\u7684\u539f $A$ \u7684\u4e0b\u6807\u7ffb\u8f6c\uff0c\u6700\u540e\u5012\u53d9\u8f93\u51fa\u5373\u53ef\u3002\n\n\u6b63\u786e\u6027\u672a\u77e5\uff0c\u4f46\u4ea4\u4e86\u4e00\u53d1\u5c31\u8fc7\u4e86\uff1f\uff1f\uff1f\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<climits>\n#include<algorithm>\n#include<queue>\n#include<vector>\n#define pii pair<int,int>\n#define mp make_pair\n#define pb push_back\n#define fi first\n#define se second\nusing namespace std;\ninline int read(){\n\tint f=1,ans=0; char c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9'){ans=ans*10+c-'0';c=getchar();}\n\treturn f*ans;\n}\nconst int MAXN=1e3+11;\nint N,A[MAXN],id[MAXN]; vector<pii> vec,Ans;\nint main(){\n\tN=read(); for(int i=1;i<=N;i++) A[i]=read(),id[i]=i;\n\tfor(int i=1;i<=N;i++) for(int j=i+1;j<=N;j++) if(A[i]>A[j]) vec.pb(mp(i,j));\n\twhile(1){\n\t\tint ps=-1; for(int i=1;i<N;i++) if(A[i]>A[i+1]){ps=i;break;}\n\t\tif(ps==-1) break; Ans.pb(mp(id[ps],id[ps+1])); swap(A[ps],A[ps+1]); swap(id[ps],id[ps+1]);\n\t}\n\tprintf(\"%ld\\n\",Ans.size()); for(int i=Ans.size()-1;i>=0;i--) printf(\"%d %d\\n\",Ans[i].fi,Ans[i].se);\n\treturn 0;\n\t//for(auto v:Ans) printf(\"%d %d\\n\",v.fi,v.se);return 0;\n}\n```\n",
        "postTime": 1608788760,
        "uid": 293177,
        "name": "sry_",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1375E \u3010Inversion SwapSort\u3011"
    },
    {
        "content": "# \u9898\u76ee\n\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1375E)\n\n# \u9898\u89e3\n\n\u4e00\u9053\u5341\u5206\u5de7\u5999\u7684\u6784\u9020\u9898\u3002\n\n\u6211\u4eec\u8003\u8651\u5148\u5c06\u6240\u6709\u6570\u79bb\u6563\u5316\uff0c\u7136\u540e\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u6570 $i$\uff0c\u5982\u679c\u6211\u4eec\u5df2\u7ecf\u4f7f\u5f97 $1\\sim i-1$ \u6709\u5e8f\uff08\u4f4d\u7f6e\u4e0d\u4e00\u5b9a\u76f8\u90bb\uff09\uff0c\u73b0\u5728\u8981\u5c06 $i$ \u52a0\u5165\u8fdb\u53bb\uff0c\u7ef4\u62a4\u8fd9\u4e2a\u5e8f\u5217\u6709\u5e8f\uff0c\u90a3\u4e48\uff0c\u6211\u4eec\u7684\u6700\u7ec8\u76ee\u7684\u5176\u5b9e\u5c31\u662f\u5c06 $i$ \u653e\u5230\u6700\u540e\u7684\u4f4d\u7f6e\u53bb\n\n\u6211\u4eec\u8003\u8651\u5c06 $i$ \u7684\u4f4d\u7f6e $pos$ \u5c06 $i-1$ \u4ea4\u6362\uff0c\u7136\u540e\u518d\u5c06 $pos$ \u4e0e $i-2$ \u7684\u4f4d\u7f6e\u4ea4\u6362...\u6301\u7eed\u4e0b\u53bb\uff0c\u76f4\u5230 $i-k$ \u7684\u4f4d\u7f6e\u5c0f\u4e8e $pos$ \u505c\u6b62\n\n\u8fd9\u6837\u505a\u53ef\u4ee5\u4f7f\u5f97\u5e8f\u5217\u5408\u6cd5\uff0c\u5e76\u4e14\u539f\u5e8f\u5217\u4e2d\u4ea6\u4e00\u5b9a\u5b58\u5728\u8fd9\u6837\u7684\u9006\u5e8f\u5bf9\uff0c\u56e0\u4e3a\u6211\u4eec $1\\sim i-1$ \u4e2d\uff0c\u65e0\u8bba\u8c01\u5728 $pos$ \u7684\u540e\u9762\uff0c\u90fd\u4e00\u5b9a\u662f\u548c $pos$ \u7684\u539f\u6570 $i$ \u5b58\u5728\u9006\u5e8f\u5173\u7cfb\uff0c\u800c\u6211\u4eec\u662f\u4ece $1$ \u5f00\u59cb\u5f80\u5927\u679a\u4e3e\uff0c\u90a3\u4e48\u6240\u6709\u5728 $i$ \u540e\u9762\u7684\u6570\uff08\u679a\u4e3e\u4fdd\u8bc1\u662f $1\\sim i-1$\uff09\uff0c\u90fd\u548c $i$ \u5b58\u5728\u9006\u5e8f\u5173\u7cfb\uff0c\u6240\u4ee5\u8fd9\u6837\u7684\u65b9\u6848\u4e00\u5b9a\u5b58\u5728\n\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u8fd9\u9053\u9898\u6839\u672c\u6ca1\u6709\u65e0\u89e3\uff0c\u8f93\u51fa `-1` \u662f\u6ca1\u7528\u7684\n\n# \u4ee3\u7801\n\n```cpp\nhttps://www.cnblogs.com/Arextre/p/13343329.html\n```\n\n",
        "postTime": 1595208477,
        "uid": 125355,
        "name": "Vladilena",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1375E \u3010Inversion SwapSort\u3011"
    },
    {
        "content": "CF1375E \u3010Inversion SwapSort\u3011\n\n### \u9898\u610f\u7b80\u8ff0\uff1a\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a$\uff0c\u6c42 $a$ \u4e2d\u7684\u6240\u6709\u9006\u5e8f\u5bf9 $(i_1, j_1), (i_2, j_2), \\cdots, (i_m, j_m)$ \u7684\u4e00\u4e2a\u6392\u5217 $p$\uff0c\n\n\u4f7f\u5f97\u4f9d\u6b21\u4ea4\u6362 $(a_{i_{p_1}}, a_{j_{p_1}}), (a_{i_{p_2}}, a_{j_{p_2}}), \\cdots, (a_{i_{p_m}}, a_{j_{p_m}})$ \u540e\u5e8f\u5217\u5355\u8c03\u4e0d\u964d\u3002\n\n$1 \\le n \\le 10^3$\uff0c$1 \\le a_i \\le 10^9$\u3002\n\n[\u9898\u76ee\u94fe\u63a5](https://codeforces.ml/contest/1375/problem/E)\n\n### \u89e3\u9898\u601d\u8def\uff1a\n\n\u9996\u5148\u6211\u4eec\u8003\u8651\u5bf9\u4e00\u4e2a\u6392\u5217 $q$ \u600e\u4e48\u5904\u7406\uff0c\u4ee4 $\\textrm{pos}[x] = i,\\textrm{s.t. }a_i = x$\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u6bcf\u6b21\u5148\u5c06\u6700\u5927\u7684\u5b89\u6392\u597d\uff0c\u7136\u540e\u5c06\u6b21\u5927\u7684\u5b89\u6392\u597d\u2026\u2026\u4ee5\u6b64\u7c7b\u63a8\u3002\n\n\u7b2c $i$ \u8f6e\u64cd\u4f5c\u6211\u4eec\u5c1d\u8bd5\u7740\u628a\u7b2c $i$ \u5927\u7684\u5143\u7d20\uff08\u4e5f\u5c31\u662f $i$\uff09\u5f52\u4f4d\uff08\u4e5f\u5c31\u662f\u653e\u5230\u7b2c $i$ \u4e2a\u4f4d\u7f6e\uff09\u3002\n\n\u6b64\u65f6\u6211\u4eec\u5df2\u7ecf\u5904\u7406\u5b8c\u4e86$[i + 1, n]$\uff0c\u7b2c $i$ \u4e2a\u4f4d\u7f6e\u4e0a\u7684\u5143\u7d20\u662f $q_i$\uff0c\u4f46\u672c\u6765\u8fd9\u4e2a\u5730\u65b9\u5e94\u8be5\u653e $i$\u3002\n\n\u90a3\u4e48 $q_i + 1, q_i + 2, \\cdots, i$ \u548c $q_i$ \u90fd\u6784\u6210\u9006\u5e8f\u5bf9\uff0c\n\n\u663e\u7136\uff0c\u4f9d\u6b21\u4ea4\u6362 $(\\textrm{pos}[q_i + 1], i), (\\textrm{pos}[q_i + 2], i), \\cdots, (\\textrm{pos}[i], i)$ \u53ef\u4ee5\u5c06 $i$ \u5f52\u4f4d\u3002\n\n\u800c\u4e14\u6211\u4eec\u4ea4\u6362\u7684\u8fd9\u4e9b\u4f4d\u7f6e\uff0c\u90fd\u6784\u6210\u9006\u5e8f\u5bf9\u3002\n\n---\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u5b58\u5728 $i < j, a_i = a_j$ \u7684\u60c5\u51b5\u600e\u4e48\u8f6c\u5316\u4e3a\u4e0a\u9762\u7684\u6392\u5217\u3002\n\n\u6211\u4eec\u5f3a\u884c\u89c4\u5b9a $i < j, a_i = a_j$ \u65f6\u6709 $a_i$ \u6392\u5728 $a_j$ \u524d\u9762\uff0c\u5373 **\u6309\u7167\u503c\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\u3001\u6570\u7ec4\u4e0b\u6807\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57** \u5c06 $a$ \u8fdb\u884c\u91cd\u65b0\u6807\u53f7\u3002\n\n\u8fd9\u6837\u5c31\u5c06 $a$ \u8f6c\u5316\u4e3a\u4e86\u4e00\u4e2a\u6392\u5217\uff1b\u5bb9\u6613\u770b\u51fa\uff0c\u8fd9\u6837\u4fee\u6539\u540e\uff0c\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u5e76\u6ca1\u6709\u6539\u53d8\u3002\n\n\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^2)$\u3002\n\n### \u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define LL long long\n\nconst int N = 1e3 + 5;\n\nint n, cntAns, a[N], pos[N];\n\nstruct PAIR {\n    int ff, ss;\n    bool operator<(const PAIR &rhs) const {\n        if(ff == rhs.ff)\n            return ss < rhs.ss;\n        return ff < rhs.ff;\n    }\n    PAIR(int _f = 0, int _s = 0) {\n        ff = _f, ss = _s;\n    }\n} b[N], ans[N * N];\n\nint32_t main() {\n    scanf(\"%d\", &n);\n    for(int i = 1; i <= n; ++i) {\n        scanf(\"%d\", &a[i]);\n        b[i] = PAIR(a[i], i);\n    }\n    \n    std::sort(b + 1, b + n + 1);\n    for(int i = 1; i <= n; ++i)\n        b[i].ff = b[i - 1].ff + 1;\n    for(int i = 1; i <= n; ++i)\n        a[b[i].ss] = b[i].ff;\n    // turned into a permutation\n    \n    for(int i = 1; i <= n; ++i)\n        pos[ a[i] ] = i;\n    \n    for(int i = n; i >= 1; --i) {\n        for(int j = a[i] + 1; j <= i; ++j) {\n            int p1 = pos[j];\n            int p2 = i;\n            \n            pos[a[p1]] = p2;\n            pos[a[p2]] = p1;\n            \n            std::swap(a[p1], a[p2]);\n            ans[++cntAns] = PAIR(p1, p2);\n        }\n    }\n    \n    printf(\"%d\\n\", cntAns);\n    for(int i = 1; i <= cntAns; ++i)\n        printf(\"%d %d\\n\", ans[i].ff, ans[i].ss);\n    return 0;\n}\n```",
        "postTime": 1594085352,
        "uid": 78407,
        "name": "Clever_Jimmy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1375E \u3010Inversion SwapSort\u3011"
    },
    {
        "content": "**\u4e3a\u4e86\u4fbf\u4e8e\u9605\u8bfb\uff0c\u4ee5\u4e0b\u90e8\u5206\u53d8\u91cf\u7684\u4e0b\u6807\u7528\u4ee3\u7801\u4e2d\u6570\u7ec4\u7684\u5f62\u5f0f\u4ee3\u66ff\u3002**\n\n\u9898\u76ee\u672c\u8d28\u4e0a\u5c31\u662f\u8ba9\u6211\u4eec\u5c06\u6240\u6709\u9006\u5e8f\u5bf9\u7684\u4e0b\u6807 $(u, v)$ \u8fdb\u884c\u4e00\u4e2a\u6392\u5217\uff0c\u4f7f\u5f97\u6211\u4eec\u4f9d\u6b21\u4ea4\u6362 $a_u$ \u548c $a_v$ \u540e\uff0c$a$ \u6210\u4e3a\u4e00\u4e2a\u4e0d\u4e0b\u964d\u5e8f\u5217\u3002\n\n\u9996\u5148\u6211\u4eec\u53d1\u73b0\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u9898\u76ee\u9700\u8981\u7684\u662f\u9006\u5e8f\u5bf9\u7684\u4e0b\u6807\uff0c\u6240\u4ee5\u53ea\u8981\u6211\u4eec\u4fdd\u8bc1\u6211\u4eec\u6ca1\u6709\u66f4\u6539\u539f\u6570\u7ec4\u4e2d\u7684\u9006\u5e8f\u5bf9\u4e0b\u6807\uff0c\u6211\u4eec\u53ef\u4ee5\u4efb\u610f\u4fee\u6539\u6240\u6709\u6570\u7684\u503c\u3002\n\n\u8fd9\u6837\u4e00\u6765\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u4efb\u610f\u6570\u636e\u8f6c\u5316\u4e3a\u4e00\u4e2a\u6392\u5217\u4ee5\u7b80\u5316\u95ee\u9898\u3002\u8f6c\u5316\u7684\u5177\u4f53\u65b9\u5f0f\u53ef\u4ee5\u770b\u4ee3\u7801\u7406\u89e3\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u600e\u4e48\u5c06\u4e00\u4e2a\u6392\u5217\u6309\u7167\u8981\u6c42\u6392\u5e8f\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6b64\u9898\u6570\u636e\u8303\u56f4 $1 \\le n \\le 1000$\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u7528 $O(n^2)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u901a\u8fc7\u672c\u9898\u3002\n\n\u4eff\u6548\u5192\u6ce1\u6392\u5e8f\u548c\u9009\u62e9\u6392\u5e8f\u7684\u601d\u60f3\uff0c\u901a\u8fc7\u4e00\u7cfb\u5217\u6b65\u9aa4\uff0c\u5c06\u533a\u95f4\u6700\u5c0f\u503c\u653e\u5230\u6392\u5e8f\u533a\u95f4\u7684\u5de6\u7aef\uff0c\u6216\u5c06\u533a\u95f4\u6700\u5927\u503c\u653e\u5230\u6392\u5e8f\u533a\u95f4\u7684\u53f3\u7aef\uff0c\u7136\u540e\u5bf9\u4e00\u4e2a\u66f4\u5c0f\u7684\u533a\u95f4\u91cd\u590d\u76f8\u540c\u7684\u64cd\u4f5c\uff0c\u6700\u540e\u8fbe\u5230\u4f7f\u6570\u7ec4\u6709\u5e8f\u7684\u76ee\u7684\u3002\u4e8e\u662f\u6211\u4eec\u4e5f\u8003\u8651\u6bcf\u6b21\u5c06\u533a\u95f4\u6700\u5927\u503c\u653e\u5230\u6392\u5e8f\u533a\u95f4\u7684\u6700\u53f3\u7aef\u3002\n\n\u4f46\u662f\u8981\u60f3\u8fd9\u4e48\u505a\uff0c\u6211\u4eec\u5fc5\u987b\u6ee1\u8db3\u4e00\u4e9b\u89c4\u5219\uff1a  \n\u8bbe\u5f53\u524d\u6392\u5217\u4e3a $a$\uff0c\u8fdb\u884c\u4e00\u6b21\u64cd\u4f5c\u540e\u7684\u6392\u5217\u4e3a $p$\uff0c\u90a3\u4e48\uff1a\n1. $p_n=n$\n2. \u5bf9\u4e8e\u4efb\u610f\u7684 $1 \\le i,j \\lt n$\uff0c$p_i$ \u548c $p_j$ \u7684\u5927\u5c0f\u5173\u7cfb\u4e0e $a_i$ \u548c $a_j$ \u7684\u5927\u5c0f\u5173\u7cfb\u76f8\u540c\n\n\u89c4\u5219 $1$ \u5c31\u662f\u4e3a\u4e86\u6ee1\u8db3\u6211\u4eec\u7684\u76ee\u7684\uff0c\u89c4\u5219 $2$ \u4fdd\u8bc1\u6211\u4eec\u7684\u64cd\u4f5c\u6ee1\u8db3\u9898\u76ee\u6240\u7ed9\u7684\u6761\u4ef6\u2014\u2014\u6211\u4eec\u4ea4\u6362\u7684\u9006\u5e8f\u5bf9\u4e00\u5b9a\u5bf9\u5e94\u539f\u5e8f\u5217\u7684\u4e00\u4e2a\u9006\u5e8f\u5bf9\u3002\n\n\u63a5\u4e0b\u6765\u8fd9\u9898\u53c8\u53d8\u6210\u4e86\u4e00\u4e2a\u6784\u9020\u9898\uff1a\u6784\u9020\u4e00\u4e2a\u7b97\u6cd5\u4f7f\u5f97\u6211\u4eec\u6ee1\u8db3\u4e0a\u8ff0\u89c4\u5219\u5e76\u4e14\u6070\u597d\u7528\u5b8c\u6240\u6709\u7684\u539f\u5e8f\u5217\u4e2d\u7684\u9006\u5e8f\u5bf9\u3002\n\n\u7b97\u6cd5\u662f\u8fd9\u6837\u7684\uff1a  \n\u8bbe $pos[i]$ \u8868\u793a\u6570 $i$ \u6240\u5728\u7684\u4f4d\u7f6e\uff0c\u6211\u4eec\u4f9d\u6b21\u4ea4\u6362 $(pos[a_n+1],n),(pos[a_n+2],n),(pos[a_n+3],n),\\dots,(pos[n],n)$\u3002\uff08\u8fd9\u91cc\u62ec\u53f7\u5185\u7684\u90fd\u662f\u6570\u7ec4\u4e0b\u6807\uff09\n\n\u6267\u884c\u5b8c\u4e00\u6b21\u8be5\u7b97\u6cd5\u540e\uff0c\u6211\u4eec\u6ee1\u8db3\u4e86\u89c4\u5219 $1$\uff0c\u56e0\u4e3a $n$ \u88ab\u6210\u529f\u653e\u5230\u4e86\u6700\u540e\uff1b\u6211\u4eec\u6ee1\u8db3\u4e86\u89c4\u5219 $2$\uff0c\u56e0\u4e3a\u6211\u4eec\u628a $a[pos[a_n+k]](1 \\le k \\lt n-a_n)$ \u5168\u90e8\u51cf\u4e86 $1$\uff0c\u5927\u5c0f\u5173\u7cfb\u81ea\u7136\u4e0d\u53d8\uff1b\u6211\u4eec\u8fd8\u7528\u5b8c\u4e86\u539f\u5e8f\u5217\u4e2d\u6240\u6709\u7b2c\u4e8c\u4e0b\u6807\u4e3a $n$ \u7684\u9006\u5e8f\u5bf9\u3002\n\n\u53cd\u590d\u91cd\u590d\u8fd9\u4e2a\u64cd\u4f5c\u5373\u53ef\u3002\n\nemmm\u2026\u2026\u597d\u50cf\u5e76\u6ca1\u6709\u65e0\u89e3\u7684\u60c5\u51b5\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2)$\u3002\n```cpp\n#include<iostream>\n#include<utility>\n#include<algorithm>\n#include<vector>\nusing namespace std;\nconst int maxn = 1005;\nstruct element\n{\n\tint val;\n\tint idx;\n} p[maxn];\nint a[maxn], pos[maxn];\nvector<pair<int, int> > res;\n\nbool cmp(element x, element y)\n{\n\tif(x.val != y.val)\n\t\treturn x.val < y.val;\n\treturn x.idx < y.idx;  //\u6ce8\u610f\u4e0b\u6807\u7684\u5148\u540e\u987a\u5e8f\n}\n\nint main()\n{\n\tint n;\n\tcin >> n;\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tcin >> p[i].val;\n\t\tp[i].idx = i;\n\t}\n\tsort(p + 1, p + n + 1, cmp);//\u4ee5\u6570\u503c\u548c\u4e0b\u6807\u4e3a\u5173\u952e\u5b57\u6392\u5e8f\n\tfor(int i = 1; i <= n; i++)\n\t\tp[i].val = p[i - 1].val + 1;\n\tfor(int i = 1; i <= n; i++)\n\t\ta[p[i].idx] = p[i].val;//\u6210\u529f\u8f6c\u5316\u6210\u6392\u5217\n\tfor(int i = 1; i <= n; i++)\n\t\tpos[a[i]] = i;\n\tfor(int i = n; i >= 1; i--)\n\t{\n\t\tfor(int j = 1; j <= i - a[i]; j++)\n\t\t{\n\t\t\tres.push_back(make_pair(pos[a[i] + j], i));\n\t\t\ta[pos[a[i] + j]]--;\n\t\t}\n\t\tfor(int j = 0; j < i - a[i]; j++)\n\t\t\tpos[a[i] + j] = pos[a[i] + j + 1];\n\t\tpos[i] = i;\n\t}\n\tcout << res.size() << endl;\n\tfor(pair<int, int> i : res)\n\t\tcout << i.first << ' ' << i.second << endl;\n\treturn 0;\n}\n```",
        "postTime": 1594020744,
        "uid": 286770,
        "name": "Andrewzdm",
        "ccfLevel": 7,
        "title": "CF1375E Inversion Swapsort \u9898\u89e3"
    }
]