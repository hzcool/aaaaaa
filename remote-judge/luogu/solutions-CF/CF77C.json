[
    {
        "content": "*\u7a81\u7136\u53d1\u73b0\uff0c\u901a\u8fc7\u5199\u9898\u89e3\uff0c\u4e0d\u4ec5\u4ee5\u540e\u7684\u8a00\u8bed\u66f4\u52a0\u4e13\u4e1a\uff0c\u601d\u8def\u4e5f\u66f4\u52a0\u6e05\u6670*\n\n\u6b64\u9898\u6211\u89c9\u5f97\u662f\u4e00\u9053\u6bd4\u8f83\u88f8\u7684\u6a21\u677f\uff0c\u5f88\u591a\u9898\u90fd\u4f1a\u5728\u6b64\u57fa\u7840\u4e0a\u53d8\u5f62\u6216\u6539\u53d8\n\n## \u9898\u610f\n\n\u6709\u4e00\u9897\u5e26\u6743\u7684\u6811\uff0c\u521d\u59cb\u6709\u4e00\u4e2a\u673a\u5668\u5728\u6839\u8282\u70b9\uff08\u4e00\u5f00\u59cb\u5e76\u4e0d\u4f1a\u5403\uff09\uff0c\u6bcf\u5230\u4e00\u4e2a\u8282\u70b9\uff0c\u5c31\u4f1a\u628a\u8282\u70b9\u4e0a\u7684\u6743\u503c$-1$\uff08\u524d\u5f80\u7684\u8282\u70b9\u7684\u6743\u503c\u4e0d\u53ef\u4e3a$0$\uff09\uff0c\u8981\u6c42\u6700\u7ec8\u8981\u56de\u5230\u6839\u8282\u70b9\uff0c\u6c42\u51fa\u6700\u591a\u53ef\u4ee5\u51cf\u53bb\u591a\u5c11\u6743\u503c\n\n## \u601d\u8def\n\n### \u6982\u62ec\uff1a\n\n\u7edf\u8ba1\u76ee\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\u7684\u8d21\u732e\u503c\uff0c\u66f4\u65b0\u76ee\u524d\u8282\u70b9\u7684\u8d21\u732e\u503c\uff0c\u540c\u65f6\u7ef4\u62a4\u6bcf\u4e2a\u8282\u70b9\u5269\u4f59\u7684\u6743\u503c\u3002\n\n\u8d2a\u5fc3\uff0c\u5728\u5b50\u8282\u70b9\u7684\u8d21\u732e\u503c\u4e2d\u53d6\u6700\u5927\u7684\u3002\u5982\u679c\u5f53\u524d\u8282\u70b9\u8fd8\u6709\u5269\u4f59\u7684\u6743\u503c\uff0c\u5219\u5728\u5f53\u524d\u8282\u70b9\u548c\u5176\u5b50\u8282\u70b9\u4e2d\u79fb\u52a8\uff08\u56e0\u4e3a\u5b50\u8282\u70b9\u7684\u5b50\u8282\u70b9\u90fd\u904d\u5386\u5b8c\u4e86\uff0c\u65e0\u987b\u518d\u5f80\u4e0b\u904d\u5386\uff09\n\n---\n\n\u4e00\u4e2a\u8282\u70b9\u6240\u4ea7\u751f\u7684\u8d21\u732e\u4e0e\u4e14\u53ea\u4e0e\u5b83\u7684\u5b50\u8282\u70b9\u6709\u5173\n\n\u5047\u8bbe$dfs(x)$\u4e3a\u4ee5$x$\u4e3a\u6839\u7684\u5b50\u6811\u6240\u4ea7\u751f\u7684\u8d21\u732e\n\n\u90a3\u4e48\n\n$$dfs(x)=\\sum_{i\\in son(x)}^{}dfs(i)$$\n\n\u56e0\u4e3a\u6bcf\u6b21\u6362\u4e00\u68f5\u5b50\u6811\u53bb\u904d\u5386\u90fd\u8981\u7ecf\u8fc7$x$\uff0c\u6240\u4ee5$x$\u7684\u6743\u503c\u8981$-1$\u3002\u5982\u679c\u4e0d\u591f\u904d\u5386\u6240\u4ee5\u5b50\u6811\uff0c\u90a3\u4e48\u5148\u5403\u5b50\u8282\u70b9\u8d21\u732e\u5927\u7684\n\n\u5982\u4e0b\u56fe\uff0c$2,3,4$\u90fd\u5df2\u7ecf\u6c42\u51fa\u8d21\u732e\uff0c\u5728\u6c42\u51fa$1$\u7684\u8d21\u732e\u65f6\uff0c\u82e5$1$\u7684\u6743\u503c\u8fd8\u6709\u5269\u4f59\uff0c\u5e76\u6ca1\u6709\u8ba1\u7b97$1$\u5230\u5176\u5b50\u8282\u70b9\u7684\u8d21\u732e\uff08\u8def\u5f84\u4e3a$1$\uff09\n\n![image.png](https://i.loli.net/2019/11/28/gnzxjVRWMwt5HPs.png)\n\n\u6b64\u65f6\u6ce8\u610f\uff0c\u4e0d\u9700\u8981\u518d\u5230\u5b50\u8282\u70b9\u7684\u5b50\u8282\u70b9\u4e86\uff0c\u56e0\u4e3a\u4e4b\u524d\u5df2\u7ecf\u904d\u5386\u8fc7\u4e86\uff0c\u6240\u4ee5\u73b0\u5728\u53ea\u9700\u8981\u5728$x$\u548c\u5b50\u8282\u70b9\u6765\u56de\u79fb\u52a8\uff0c\u770b\u6700\u591a\u53ef\u4ee5\u79fb\u52a8\u591a\u5c11\u6b21\u5373\u53ef\n\n\u90a3\u4e48\u6b64\u65f6$x$\u8282\u70b9\u8fd8\u5269\u4f59$k[x] - 1$\u7684\u6743\u503c\uff08\u56e0\u4e3a\u6bcf\u904d\u5386\u5230\u4e00\u4e2a\u8282\u70b9\uff0c\u90fd\u8981\u5403\u6389\u4e00\u4e2a\uff09,\u8bb0\u4e3a$last[x]$\n\n\u5b50\u8282\u70b9\u5269\u4f59\u7684\u6743\u503c\u548c\u8bb0\u4e3a$sum$\uff0c$sum = \\sum_{i\\in son(x)}^{}last[i]$\n\n\u56e0\u4e3a\u6bcf\u6b21\u79fb\u52a8\u5230\u5b50\u8282\u70b9\u540e\u8981\u56de\u5230\u5176\u7236\u8282\u70b9\uff0c\u6240\u4ee5\u6bcf\u6b21\u79fb\u52a8\u6240\u4ea7\u751f\u7684\u8d21\u732e\u4e3a$2$\n\n\u90a3\u4e48\n\n $$dfs(x)=\\sum_{i\\in son(x)}^{}dfs(i)+ 2 \\times min(last[x],sum)$$\n \n\u4e3a\u4ec0\u4e48\u53d6$min$\u53ef\u4ee5\u81ea\u5df1\u60f3\u4e00\u4e0b\n\n\u7b2c\u4e00\u4e2a\u6c42\u548c\u8bb0\u5f97\u540c\u65f6$last[x]--$\uff0c\u82e5$last[x]=0$\u65f6\u5c31\u6ca1\u6709\u6743\u503c\u8ba9\u5b83\u904d\u5386\u5176\u4ed6\u5b50\u6811\u4e86\uff0c\u5e94\u8be5\u505c\u6b62\n\n\u82e5$x$\u7684\u6743\u503c\u4e0d\u591f\u4e86\u5c31\u540e\u9762\u7684$min$\u5c31\u4e3a\u4e86$0$\u4e86\n\n## \u4ee3\u7801\n\n\n```cpp\n#include <bits/stdc++.h>\n\n#define MAXN 100010\n#define ll long long \n#define P pair<ll, ll>\n\nusing namespace std;\n\nint n, root, tot;\n\nint k[MAXN], head[MAXN];\n\nstruct edge {\n\tint to, next;\n}e[MAXN * 2];\n\nvoid add(int x, int y) {\n\te[++tot].to = y;\n\te[tot].next = head[x];\n\thead[x] = tot;\n}//\u524d\u5411\u661f\u5b58\u56fe\n\nP dfs(int x, int fa) {\n//\u6bcf\u4e2adfs\u8fd4\u56de\u8282\u70b9\u4e2a\u8d21\u732e\u503c\u548c\u5269\u4f59\u6743\u503c\n\n\tvector<ll> v;//\u8bb0\u5f55x\u7684\u5b50\u6811\u53ef\u4ee5\u5403\u6389\u591a\u5c11\u6d77\u72f8 \n\t//\u7528vectoer\u662f\u56e0\u4e3avector\u662f\u52a8\u6001\u7a7a\u95f4\uff0c\u5426\u5219\u7528\u666e\u901a\u6570\u7ec4\u4f1aMLE \n\tll sum = 0, have_son = 0;//\u6709\u6ca1\u6709\u5b50\u8282\u70b9 \n\t\n\tfor (int i = head[x]; i; i = e[i].next) {\n\t\tint vertex = e[i].to;\n\t\tif (vertex == fa) continue;\n\t\thave_son = 1;\n\t\tP son = dfs(vertex, x);//\u904d\u5386\u5b50\u8282\u70b9 \n\t\tsum += son.second;//\u5b50\u8282\u70b9\u5269\u4f59\u6d77\u72f8\u7684\u603b\u548c \n\t\tv.push_back(son.first);//\u628a\u6bcf\u4e2a\u5b50\u8282\u70b9\u53ef\u4ee5\u5403\u5230\u591a\u5c11\u6d77\u72f8\u63a8\u5230\u91cc\u9762 \n\t}\n\t\n\tif (!have_son) return make_pair(0, k[x] - 1);//\u5982\u679c\u662f\u53f6\u8282\u70b9\u5c31\u76f4\u63a5\u56de\u6eaf\n\t//-1\u662f\u56e0\u4e3a\u5b83\u7684\u7236\u8282\u70b9\u4f1a\u52a0\u56de\u6765 \n\t\n\tll eat = 0, last = k[x] - (x == root ? 0 : 1);//\u521d\u59cb\u5728\u6839\u8282\u70b9\u65f6\u4e0d\u4f1a\u5403\uff0c\u904d\u5386\u5230\u5176\u4ed6\u8282\u70b9\u65f6\u4f1a\u5403\u4e00\u4e2a \n\tsort(v.begin(), v.end());//\u6392\u5e8f \n\tfor (int i = v.size() - 1; i >= 0 && last; i--, last--) eat += v[i] + 2;//\u4ece\u5927\u5f80\u5c0f\u7684\u52a0\uff0c\u540c\u65f6x\u8fd8\u6709\u5269\u4f59 \n\teat += 2 * min(last, sum);\n\tlast -= min(last, sum);//\u8fd8\u6709\u5269\u4f59\u5c31\u5728\u8282\u70b9\u548c\u5b50\u8282\u70b9\u79fb\u52a8\n\treturn make_pair(eat, last);\n}\n\nint main() {\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; i++) {\n\t\tscanf(\"%d\", &k[i]);\n\t}\n\tfor (int i = 1, u, v; i < n; i++) {\n\t\tscanf(\"%d%d\", &u, &v);\n\t\tadd(u, v); add(v, u);\n\t}\n\tscanf(\"%d\", &root);\n\t\n\tcout << dfs(root, 0).first << endl;\n\treturn 0;\n} \n```\n\n> \u65e5\u62f1\u4e00\u5352\uff0c\u529f\u4e0d\u5510\u6350\n",
        "postTime": 1574852691,
        "uid": 18673,
        "name": "ctq1999",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF77C Beavermuncher-0xFF"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f\uff1a\u7ed9\u4f60\u4e00\u9897\u6811\uff0c\u544a\u8bc9\u4f60\u6839\u8282\u70b9\u548c\u6bcf\u4e2a\u8282\u70b9\u4e0a\u6709\u591a\u5c11\u4e2a\u6d77\u72f8\uff0c\u8ba9\u4f60\u4ece\u6839\u8282\u70b9\u51fa\u53d1\uff0c\u6bcf\u6b21\u53bb\u5230\u4e00\u4e2a\u8282\u70b9\u90fd\u4f1a\u5403\u6389\u76ee\u6807\u8282\u70b9\u7684\u4e00\u4e2a\u6d77\u72f8\uff0c\u5982\u679c\u76ee\u6807\u8282\u70b9\u6ca1\u6709\u6d77\u72f8\uff0c\u5219\u6ca1\u6cd5\u524d\u5f80\uff0c\u95ee\u4f60\u6700\u591a\u80fd\u5403\u5230\u591a\u5c11\u4e2a\u6d77\u72f8\u3002\n\n\u5927\u81f4\u601d\u8def\uff1a\u7b2c\u4e00\u773c\u770b\u5230\u8fd9\u9053\u9898\uff0c\u7b2c\u4e00\u773c\u662f\u8d2a\u5fc3\uff08\u867d\u7136CF\u7684\u6807\u7b7e\u662fdp\uff09\uff0c\u7136\u540e\u5c31\u6709\u4e86\u4ee5\u4e0b\u601d\u8def\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u90fd\u53ef\u4ee5\u6c42\u51fa\u5f53\u8fd9\u4e2a\u70b9\u4f5c\u6839\u8282\u70b9\u65f6\u5b83\u7684\u5b50\u6811\u7684\u6700\u4f18\u89e3\u662f\u591a\u5c11\uff0c\u7136\u540e\u5c31\u53ea\u8981\u4e00\u6b21\u6b21\u5f80\u4e0a\u626b\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u90fd\u626b\u5b83\u7684\u5b50\u8282\u70b9\u7136\u540e\u5f80\u4f18\u4e86\u53d6\u6700\u540e\u5f97\u5230\u7684\u4e00\u5b9a\u662f\u53ef\u4ee5\u7684\u3002\n\n\u8be6\u7ec6\u8fc7\u7a0b\uff1a\u4e00\u4e2a\u8282\u70b9\u7684eat\u7684\u503c\u5c31\u662f\u628a\u5f53\u524d\u70b9\u770b\u4f5c\u8d77\u70b9\u7136\u540e\u5f80\u4e0b\u8d70\u6700\u591a\u80fd\u5403\u5230\u591a\u5c11\u4e2a\u6d77\u72f8\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\uff0ceat=0\u3002\u4e00\u4e2a\u8282\u70b9\u7684last\u503c\u662f\u5f53\u524d\u8282\u70b9\u5df2\u7ecf\u5f53\u8fc7\u8d77\u70b9\u5e76\u5f80\u4e0b\u626b\u540e\u8fd8\u5269\u4e0b\u591a\u5c11\u4e2a\u6d77\u72f8\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u4e0d\u662f\u53f6\u8282\u70b9\u7684\u8282\u70b9\u6211\u4eec\u4f5c\u5982\u4e0b\u64cd\u4f5c\uff1a\n\n1.\u5148\u904d\u5386\u6240\u6709\u5b83\u7684\u5b57\u8282\u70b9\uff0c\u7b97\u51faeat\u548clast\u3002\n\n2.\u6309\u7167eat\u6392\u5e8f\uff0c\u4ece\u5927\u5f80\u5c0f\u53d6\u3002\uff08\u5148\u53d6eat\u7684\u8bc1\u660e\uff1a\u5982\u679c\u6709\u4e00\u4e2as\u53f7\u70b9\u53ef\u4ee5\u5f80\u4e0b\u5230x\u53f7\u70b9\uff0c\u90a3\u4e48\u81f3\u5c11\u80fd\u5403\u5230x\u7684\u4e00\u4e2a\u548cs\u7684\u4e00\u4e2a\uff0c\u800ceat\u4ee3\u8868\u5f53x\u4f5c\u4e3a\u8d77\u70b9\u7684\u503c\uff0ceat>=0\uff0c\u6240\u4ee5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\u53d6eat\u5c31\u76f8\u5f53\u4e8e\u4e0b\u53bb\u4e0a\u6765\uff09\n\n3.\u5982\u679c\u8fd9\u4e2a\u8282\u70b9\u8fd8\u6709\u5269\u4f59last\u4e2a\u6d77\u72f8\uff0c\u90a3\u4e48\u6211\u4eec\u8fd8\u8981\u7b97\u51fa\u6240\u6709\u5b50\u6811\u7684last\u7684\u548c\uff0c\u4e3asum\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u81f3\u591a\u53ef\u4ee5\u8fdb\u884cmin(last,sum)\u6b21\uff0c\u5f97\u52302*min(sum,last)\u4e2a\u6d77\u72f8\uff0c\u7136\u540e\u6211\u4eec\u518d\u66f4\u65b0last\uff0c\u8fd4\u56de\u503c\u5373\u53ef\u3002\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n,root,val[100010];\nvector <int > con[100010];\n\npair<long long, long long > dfs(int x,int fa)\n{\n    if(con[x].size()==1 && x!=root)\n\t\treturn pair<long long, long long >(0,val[x]-1);\n    vector <pair<long long, long long > > q;\n    long long sum=0,eat=0,last=val[x];\n    for(int i=0;i<con[x].size();++i)\n    {\n        int y=con[x][i];\n        if(y==fa)\n\t\t\tcontinue;\n        pair<long long, long long > tmp=dfs(y,x);\n        sum+=tmp.second;\n        q.push_back(tmp);\n    }\n    if(x!=root)\n    \tlast--;\n    sort(q.begin(),q.end());\n    for(int i=q.size()-1;last>0 && i>=0;--last,--i)\n\t\teat+=q[i].first+2;\n    eat+=2*min(last,sum);\n    last-=min(last,sum);\n    return pair<long long, long long >(eat,last);\n}\n\nint main()\n{\tcin>>n;\n    for(int i=1;i<=n;++i)\n\t\tcin>>val[i];\n    for(int i=1,x,y;i<n;++i)\n    {\n        cin>>x>>y;\n        con[x].push_back(y),con[y].push_back(x);\n    }\n    cin>>root;\n    pair<long long, long long > ans=dfs(root,0);\n    cout<<ans.first<<endl;\n    return 0;\n}\n```\n",
        "postTime": 1574847165,
        "uid": 132290,
        "name": "\u5f00\u59cb\u65b0\u7684\u8bb0\u5fc6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF77C \u3010Beavermuncher-0xFF\u3011"
    },
    {
        "content": "\u4e0d\u96be\u53d1\u73b0\u4ece\u4e00\u4e2a\u8282\u70b9\u51fa\u53d1\uff0c\u6ca1\u524d\u5f80\u5b83\u7684\u4e00\u68f5\u5b50\u6811\uff0c\u90fd\u8981\u82b1\u8d39$1$\u7684\u4ee3\u4ef7\uff08\u5e9f\u8bdd\uff09\u3002\n\n\u56de\u5230\u7236\u4eb2\u53c8\u8981\u82b1\u8d39$1$\u7684\u4ee3\u4ef7\u3002\n\n\u4e00\u4e2a\u663e\u7136\u7684\u8d2a\u5fc3\u7b56\u7565\u5c31\u662f\u5148\u82b1\u8d39$k_{i-1}$\u7684\u4ee3\u4ef7\u201c\u6e38\u5386\u201d\u5404\u4e2a\u513f\u5b50\uff0c\u7136\u540e\u518d\u8fd4\u56de\u7236\u4eb2\u3002\n\n\u4ee4$dp[i]$\u8868\u793a\u4ece$i$\u8282\u70b9\u201c\u6e38\u5386\u201d\u513f\u5b50\u540e\u56de\u5230\u7236\u4eb2\u6700\u5927\u6240\u80fd\u5403\u6389\u7684\u6d77\u72f8\u6570\u3002\u4f46\u6709\u4e9b\u8282\u70b9\u8d70\u5b8c\u6240\u6709\u513f\u5b50\u540e\u6d77\u72f8\u6570\u91cf\u8fd8\u662f\u5927\u4e8e$1$\u3002\u6211\u4eec\u8bb0\u5f55\u4e0b\u6bcf\u4e2a\u513f\u5b50\u8fd4\u56de\u7236\u4eb2\u540e\u4ecd\u7559\u4e0b\u7684\u6d77\u72f8\u6570$kx[i]$\uff0c\u5f53\u7236\u4eb2\u201c\u6e38\u5386\u201d\u5b8c\u6240\u6709\u513f\u5b50\u540e\uff0c\u8003\u8651\u5728\u7236\u4eb2\u4e0e\u513f\u5b50\u4e4b\u95f4\u5f80\u8fd4\u8dd1\uff0c\u5373$i\\to fa[i]\\to i\\to \\cdots$\u3002\u4f46\u6709\u4e9b\u8282\u70b9\u65e0\u6cd5\u201c\u6e38\u5386\u201d\u6240\u6709\u513f\u5b50\uff0c\u90a3\u4e48\u5c31\u628a\u513f\u5b50\u7684$dp$\u503c\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u5373\u53ef\u3002\n\n```cpp\n#include <cctype>\n#include <cstdio>\n\nnamespace IO\n{\n    const int maxl = 23333;\n    char buf[maxl], *sss = buf, *ttt = buf;\n\n    inline char gc()\n    {\n        if(sss == ttt)\n        {\n            ttt = (sss = buf) + fread(buf, 1, maxl, stdin);\n            if(sss == ttt)\n                return EOF;\n        }\n        return *sss++;\n    }\n\n    #define dd c = gc()\n    template <class T>\n    inline bool read(T& x)\n    {\n        x = 0;\n        bool f = false;\n        char dd;\n        for(; !isdigit(c); dd)\n        {\n            if(c == '-')\n                f = true;\n            else if(c == EOF)\n                return false;\n        }\n        for(; isdigit(c); dd)\n            x = (x << 1) + (x << 3) + (c ^ 48);\n        if(f)\n            x = -x;\n        return true;\n    }\n    #undef dd\n}\n\nusing IO::read;\n\n#include <set>\n#include <utility>\n#include <algorithm>\n\nusing namespace std;\n\ntypedef long long LL;\ntypedef pair<LL, int> pii;\n\nconst int maxn = 100005;\n\nint n, k[maxn], kx[maxn], rt;\nLL dp[maxn];\n\nstruct Edge\n{\n    int to, nxt;\n} e[maxn << 1];\n\nint first[maxn];\n\ninline void add_edge(int from, int to)\n{\n    static int cnt = 0;\n    e[++cnt].nxt = first[from];\n    first[from] = cnt;\n    e[cnt].to = to;\n    e[++cnt].nxt = first[to];\n    first[to] = cnt;\n    e[cnt].to = from;\n}\n\ninline void dfs(int now, int fa)\n{\n    set<pii> st;\n    st.clear();\n    dp[now] = (now != rt);\n    k[now] -= (now != rt); // \u76f4\u63a5\u628a\u53bb\u7236\u4eb2\u7684\u4ee3\u4ef7\u51cf\u6389\n    for(int i = first[now]; i; i = e[i].nxt)\n    {\n        int to = e[i].to;\n        if(fa != to)\n        {\n            dfs(to, now);\n            st.insert(make_pair(dp[to], to));\n        }\n    }\n    int tmp = 0; // \u513f\u5b50\u8282\u70b9kx\u7684sum\n    int tmpk = k[now];\n    set<pii>::reverse_iterator it; // \u5012\u5e8f\u904d\u5386set\n    for(it = st.rbegin(); tmpk && it != st.rend(); tmpk--, ++it)\n    {\n        dp[now] += it->first + 1;\n        tmp += kx[it->second];\n    }\n    dp[now] += min(tmpk, tmp) << 1;\n    kx[now] = max(tmpk - tmp, 0);\n}\n\nint main()\n{\n    read(n);\n    for(int i = 1; i <= n; ++i)\n        read(k[i]);\n    for(int i = 1, f, t; i < n; ++i)\n        read(f), read(t), add_edge(f, t);\n    read(rt);\n    dfs(rt, 0);\n    printf(\"%lld\\n\", dp[rt]);\n    return 0;\n}\n```\n\n",
        "postTime": 1545467983,
        "uid": 84088,
        "name": "pufanyi",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF77C \u3010Beavermuncher-0xFF\u3011"
    },
    {
        "content": "# \u9898\u89e3\n\n- \u8fd9\u4e2a\u9898\u770b\u4e0a\u53bb\u633a\u6709\u610f\u601d\uff0c\u50cf\u662f `dp`\uff0c\u4f46\u662f\u60f3\u60f3\u53d1\u73b0\u8d2a\u5fc3\u597d\u50cf\u4e5f\u884c\uff0c\u4f46\u6709\u4e9b\u96be\u7406\u89e3\u3002\n\n- \u6211\u4eec\u53ef\u4ee5\u8003\u8651\u6bcf\u4e2a\u5b50\u6811\u7684\u7b54\u6848\u3002\u7ef4\u62a4\u4e24\u4e2a\u6570 `et` \u548c `lst`\uff0c\u5206\u522b\u8868\u793a\u4ee5\u5f53\u524d\u8282\u70b9\u4e3a\u8d77\u70b9\u548c\u6839\u7684\u5b50\u6811\u7684\u6700\u4f18\u89e3\uff0c\u8fd8\u6709\u626b\u5b8c\u5b50\u6811\u540e\u5f53\u524d\u8282\u70b9\u5269\u4f59\u7684\u6d77\u72f8\u3002\n\n- \u5148\u4ece\u53f6\u5b50\u8282\u70b9\u8003\u8651\uff0c\u663e\u7136\u53f6\u5b50\u8282\u70b9\u7684 `et` \u4e3a $0$\uff0c`lst` \u4e3a\u5f53\u524d\u53f6\u5b50\u8282\u70b9\u7684\u6d77\u72f8\u6570\u91cf $-1$\u3002\n\n- \u5bf9\u4e8e\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\u7684\u8282\u70b9\uff0c\u6211\u4eec\u904d\u5386\u5176\u5b50\u8282\u70b9\uff0c\u8bb0\u5f55\u4e0b `et`\uff0c\u4ece\u5927\u5f80\u5c0f\u53d6\uff0c\u76f4\u5230\u5f53\u524d\u8282\u70b9\u7684 `lst` \u4e0d\u8db3\u4e86\uff0c\u6ce8\u610f\u4e0d\u80fd\u53d6\u5230 $0$\uff0c\u8fd9\u6837\u663e\u7136\u662f\u6700\u4f18\u7684\u3002\n\n- \u5bf9\u4e8e\u8be5\u8282\u70b9\u5269\u4f59\u7684\u8282\u70b9 `lst`\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u548c\u4ed6\u7684\u5b50\u6811\u6765\u56de\u8d70\u6d88\u8017\u6389\u3002\u6211\u4eec\u8bb0\u4e0b\u5176\u5b50\u8282\u70b9\u7684 `lst` \u7684\u548c `sum`\uff0c\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c $\\min(lst,sum)$ \u6b21\u4e0a\u8ff0\u7684\u64cd\u4f5c\uff0c\u8fd9\u6837\u5f97\u5230\u7684\u6d77\u72f8\u6570\u4e3a $2\\times\\min(lst, sum)$\u3002\n\n- \u4e3b\u8981\u662f\u6ce8\u610f\u4e00\u4e9b\u5c0f\u5730\u65b9\uff0c\u6ca1\u6709\u522b\u7684\u96be\u70b9\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint n, rt;\nlong long a[100005];\nvector<int> T[500005];\n\npair<long long, long long> work(int u, int fa)\n{\n\tif (T[u].size() == 1 && u != rt)\n\t{\n\t\treturn make_pair(0, a[u] - 1);\n\t}\n\tlong long sum = 0;\n\tvector<pair<long long, long long> > vec;\n\tfor (int i = 0 ; i < T[u].size() ; i ++)\n\t{\n\t\tint v = T[u][i];\n\t\tif (v != fa)\n\t\t{\n\t\t\tpair<long long, long long> tmp = work(v, u);\n\t\t\tsum += tmp.second;\n\t\t\tvec.push_back(tmp);\n\t\t}\n\t}\n\tlong long lst = a[u];\n\tif (u != rt)\n\t{\n\t\tlst --;\n\t}\n\tsort(vec.begin(), vec.end());\n\tlong long et = 0;\n\tfor (int i = vec.size() - 1 ; i >= 0 && lst > 0 ; i --, lst --)\n\t{\n\t\tet += vec[i].first + 2;\n\t}\n\tet += 2 * min(lst, sum);\n\tlst -= min(lst, sum);\n\treturn make_pair(et, lst);\n}\n\nint main()\n{\n\tcin >> n;\n\tfor (int i = 1 ; i <= n ; i ++)\n\t{\n\t\tcin >> a[i];\n\t}\n\tfor (int i = 1 ; i < n ; i ++)\n\t{\n\t\tint u, v;\n\t\tcin >> u >> v;\n\t\tT[u].push_back(v);\n\t\tT[v].push_back(u);\n\t}\n\tcin >> rt;\n\tcout << work(rt, 0).first;\n}\n```\n",
        "postTime": 1659099580,
        "uid": 342868,
        "name": "Ted_hjl",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF77C\u3010Beavermuncher-0xFF\u3011"
    },
    {
        "content": "\u6211\u4eec\u4ee4 $dp_i$ \u8868\u793a\u4ece\u8282\u70b9 $i$ \u51fa\u53d1\uff08\u51fa\u53d1\u65f6\u8981\u5403\u6389 $i$ \u4e0a\u7684\u4e00\u4e2a\uff09\uff0c\u6700\u7ec8\u56de\u5230 $i$ \uff0c\u6700\u591a\u80fd\u5403\u51e0\u4e2a\u3002\n\n\u7b54\u6848\u5373\u4e3a $dp_s-1$ \u3002\n\n\u4ee4 $a_i$ \u8868\u793a\u5728 $dp$ \u503c\u53d6\u6700\u4f18\u7684\u60c5\u51b5\u4e0b\u8282\u70b9 $i$ \u5269\u4e0b\u591a\u5c11\u6d77\u72f8\u3002\u521d\u59cb\u503c\u4fbf\u662f\u8f93\u5165\u7684\u503c\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9 $u$ \u548c\u5b83\u7684\u4e00\u4e2a\u513f\u5b50 $v$\uff0c\u53ef\u4ee5\u4ece $u$ \u8d70\u5230 $v$ \u518d\u56de\u6765\uff0c\u5219\u6709\u8f6c\u79fb\uff1a$dp_u\\gets dp_u+dp_v+1$ \uff08+1\u662f\u56e0\u4e3a\u56de\u5230 $u$ \u7684\u65f6\u5019\u4f1a\u589e\u52a0\u4e00\u6b21\u8d21\u732e\uff09\n\n\u8f6c\u79fb\u65f6\u9700\u8981\u4fdd\u8bc1 $a_u$ \u4e0d\u4e3a $0$ \uff0c\u8f6c\u79fb\u540e $a_i$ \u81ea\u51cf\u3002\n\n\u5f88\u663e\u7136\uff0c\u6211\u4eec\u8981\u4f18\u5148\u6311\u9009 $dp$ \u503c\u5927\u7684\u513f\u5b50\u9009\uff0c\u7528\u4f18\u5148\u961f\u5217\u7ef4\u62a4\u6bcf\u4e2a\u8282\u70b9\u6240\u6709\u513f\u5b50\u7684 $dp$ \u503c\u5373\u53ef\u3002\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u82e5\u8f6c\u79fb\u540e\u82e5 $a_u$ \u8fd8\u6709\u5269\u4f59\uff0c\u5219\u53ef\u4ee5\u4e0e\u6bcf\u4e2a\u513f\u5b50\u6240\u5269\u4f59\u7684\u503c\uff08\u5373 $a_v$\uff09\u8fdb\u884c\u6765\u56de\u7684\u6298\u8fd4\u3002\u7531\u4e8e\u8fd9\u6837\u64cd\u4f5c\u5bf9\u4e8e\u6240\u6709\u513f\u5b50\u800c\u8a00\u662f\u7b49\u4ef7\u7684\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\u628a\u6240\u6709\u513f\u5b50\u7684 $a$ \u503c\u5408\u5728\u4e00\u8d77\u3002\n\n\u4ee4 $sum_i$ \u8868\u793a\u8282\u70b9 $i$ \u6240\u6709\u513f\u5b50\u7684 $a$ \u503c\u7684\u548c\u3002\u518d\u8ba1\u7b97\u513f\u5b50\u65f6\u8f6c\u79fb\u5373\u53ef\u3002\n\n\u82e5 $a_u\\geq sum_u$\uff0c\u90a3\u4e48\u6700\u591a\u8d21\u732e $sum\\times 2$\uff0c$a_u$ \u51cf\u53bb $sum_u$\u3002\n\n\u82e5 $a_u<sum_u$\uff0c\u90a3\u4e48\u6700\u591a\u8d21\u732e $a_u\\times 2$\uff0c$a_u=0$\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nint n;\nint a[100010];\nint head[100010],to[200010],nxt[200010],tot=0;\nvoid add(int x,int y)\n{\n\tto[++tot]=y;\n\tnxt[tot]=head[x];\n\thead[x]=tot;\n}\nint f[100010];\nvoid dfs(int u,int fa)\n{\n\tf[u]=fa;\n\tfor(int i=head[u];i;i=nxt[i])\n\t{\n\t\tint v=to[i];\n\t\tif(v==fa) continue;\n\t\tdfs(v,u);\n\t}\n\treturn;\n}\nint p[100010];\nint dp[100010];\nint sum[100010];\nqueue<int> q;\npriority_queue<int,vector<int>,less<int> > que[100010];\nsigned main()\n{\n\tscanf(\"%lld\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%lld\",&a[i]);\n\t}\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%lld%lld\",&x,&y);\n\t\tadd(x,y);\n\t\tadd(y,x);\n\t}\n\tint S;\n\tscanf(\"%lld\",&S);\n\tdfs(S,0);//\u6c42\u7236\u4eb2 \n\ta[S]++;//\u7531\u4e8e\u6839\u8282\u70b9\u4e00\u5f00\u59cb\u4e0d\u4f1a\u88ab\u5403\u6389\uff0c\u6240\u4ee5\u8981+1 \n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tp[f[i]]++;//\u6bcf\u4e2a\u70b9\u7684\u513f\u5b50\u6570\u91cf \n\t}\n\tfor(int i=1;i<=n;i++) if(p[i]==0) q.push(i);\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tif(a[u]==0)\n\t\t{\n\t\t\tdp[u]=0;\n\t\t\tcontinue;\n\t\t}\n\t\ta[u]--;//\u4ece\u7236\u4eb2\u5230\u8fbeu\u7684\u65f6\u5019\u4f1a\u5403\u6389\u4e00\u4e2a \n\t\tdp[u]++;\n\t\twhile(a[u] && !que[u].empty())\n\t\t{\n\t\t\tint t=que[u].top();\n\t\t\tque[u].pop();\n\t\t\ta[u]--;\n\t\t\tdp[u]+=t+1;\n\t\t}\n\t\tif(a[u]!=0)\n\t\t{\n\t\t\tif(a[u]>=sum[u])\n\t\t\t{\n\t\t\t\tdp[u]+=sum[u]*2;\n\t\t\t\ta[u]-=sum[u];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdp[u]+=a[u]*2;\n\t\t\t\ta[u]=0;\n\t\t\t}\n\t\t}\n\t\tif(f[u]==0) continue;//\u82e5\u662f\u6839\u8282\u70b9\uff0c\u5219\u4e0d\u8f6c\u79fb \n\t\tp[f[u]]--;\n\t\tque[f[u]].push(dp[u]);\n\t\tsum[f[u]]+=a[u];\n\t\tif(p[f[u]]==0) q.push(f[u]); \n\t}\n\tprintf(\"%lld\",dp[S]-1ll);\n\treturn 0;\n}\n```\n",
        "postTime": 1635471784,
        "uid": 444135,
        "name": "thostever",
        "ccfLevel": 7,
        "title": "CF77C\u9898\u89e3"
    }
]