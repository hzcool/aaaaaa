[
    {
        "content": "# CF245G Suggested Friends\n\n\u8fd9\u662f\u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3 QwQ\uff0c\u5982\u679c\u6709\u8bb2\u5f97\u4e0d\u597d\u7684\u5730\u65b9\u656c\u8bf7\u8c05\u89e3\uff0c\u5e76\u6b22\u8fce\u5927\u4f6c\u5728\u4e0b\u65b9\u8bc4\u8bba\u533a\u63d0\u51fa\u5b9d\u8d35\u7684\u610f\u89c1\u3002\n\n\u9996\u5148\u5462\uff0c\n\n\u6211\u4eec\u6765\u770b\u770b\u8fd9\u9053\u9898\u7684\u9898\u610f\u3002\n\n\u8fd9\u9053\u9898\u8981\u8f93\u5165\u7528\u6237\u7684\u540d\u5b57\u5bf9\uff0c\u5e76\u7edf\u8ba1\u7528\u6237\u7684\u4e2a\u6570\u3002\u4ed4\u7ec6\u60f3\u60f3\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u5982\u679c\u7528\u6734\u7d20\u505a\u6cd5\uff0c\u4f1a\u53d8\u5f97\u5f88\u9ebb\u70e6\uff0c\u6240\u4ee5\u6211\u4eec\u642c\u51fa\u4e86 stl\u3002\u53bb\u91cd\u6211\u4eec\u4e00\u822c\u4f7f\u7528 map\uff0c\u56e0\u4e3a\u64cd\u4f5c\u56fe\u7684\u65f6\u5019\uff0c\u6211\u4eec\u8981\u4f7f\u7528\u4e00\u4e2a\u5e8f\u53f7\u4e0e\u540d\u5b57\u5bf9\u5e94\uff0c\u6240\u4ee5\u6211\u4eec\u5728 map \u91cc\u5b9a\u4e49\u4e24\u4e2a\u7c7b\u578b\uff0cstring \u548c int\uff0c\u5176\u4e2d\uff0c\u53c8\u56e0\u4e3a\u6211\u4eec\u8981\u8fdb\u884c\u641c\u7d22\uff0c\u6240\u4ee5 string \u653e\u5728\u524d\u9762\u7528\u4f5c key\u3002\n\n```cpp\nmap<string,int> name;\nmap<string,int>::iterator iter; // \u64cd\u4f5c\u5bb9\u5668\n\nint ix,it,tot;// tot \u662f\u552f\u4e00\u7528\u6237\u7684\u6570\u91cf\uff0cix\uff0ciy \u4e3a\u5f53\u524d\u7528\u6237\u552f\u4e00 id\nfor(int i=1;i<=m;++i){  \n    cin>>x>>y;// \u8f93\u5165\u7528\u6237\u540d\u5b57\n    iter=name.find(x);// \u67e5\u627e\u662f\u5426\u5df2\u5b58\u5728\n    if(iter!=name.end())  ix=iter->second; // \u64cd\u4f5c\u5bb9\u5668\u7684\u503c\u4e0d\u4e3amap\u7684\u5c3e\u5df4\uff0c\u8bf4\u660e\u5b58\u5728\n    else name.insert(pair<string,int>(x,ix=++tot)); //\u4e0d\u5b58\u5728\uff0c\u63d2\u5165\u5e76\u987a\u624b\u5c06\u5f53\u524d id \u8bbe\u4e3a\u7528\u6237\u6570\u91cf\u81ea\u589e\u540e\u7684\u7ed3\u679c\n    iter=name.find(y);\n    if(iter!=name.end())  iy=iter->second;\n    else name.insert(pair<string,int>(y,iy=++tot));\n}\n```\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c31\u8981\u8fdb\u884c\u56fe\u8bba\u90e8\u5206\u7684\u64cd\u4f5c\u4e86\u3002\n\u8001\u89c4\u77e9\uff0c\u56e0\u4e3a\u8fd9\u9053\u9898\u8003\u67e5\u7684\u662f\u56fe\u4e2d\u5355\u70b9\u5bf9\u5355\u70b9\u7684\u5173\u7cfb\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u4e0d\u4f7f\u7528\u7ed3\u6784\u4f53\u4e86\uff0c\u8f6c\u800c\u4f7f\u7528 stl \u4e2d\u7684 vector\u3002\n\n\u5148\u5b9a\u4e49\u4e00\u4e2a vector\uff1a`vector<int> ship[MAXN<<1];`\u3002\n\n\u6ce8\u610f\uff0c\u7531\u4e8e\u56fe\u662f\u65e0\u5411\u7684\uff0c\u6240\u4ee5\u8981\u6dfb\u52a0\u4e24\u6b21\uff0c\u6545\u5b9a\u4e49\u65f6 `MAXN` \u8981\u4e58 2\uff08\u4e8c\u8fdb\u5236\u5199\u6cd5\u4e3a `<<1`\uff09\u3002\n\n\u7136\u540e\u5728\u4e0a\u9762\u8f93\u5165\u4e2d\uff0c\u52a0\u5165\uff1a\n\n```cpp\nfor(int i=1;i<=m;++i){ \n    // \u6b64\u5904\u7701\u7565\u4e0a\u65b9\u4ee3\u7801\n    ship[ix].push_back(iy);\n    ship[iy].push_back(ix);\n}\n```\n\n\u56fe\u8f93\u5165\u540e\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u8fdb\u884c\u64cd\u4f5c\u4e86\uff0c\u4f7f\u7528\u5faa\u73af\u6765\u5bf9\u6bcf\u4e2a\u7528\u6237\u8fdb\u884c\u5206\u6790\u3002\n\n\u6839\u636e\u9898\u610f\uff0c\u63a8\u8350\u597d\u53cb\u53cc\u65b9\u5fc5\u987b\u4e92\u4e0d\u4e3a\u597d\u53cb\uff0c\u6545\u6211\u4eec\u5148\u8981\u6807\u8bb0\u4e00\u4e0b\u5f53\u524d\u5faa\u73af\u5230\u7684\u7528\u6237 $i$ \u4e0e\u5176\u4ed6\u7528\u6237 $j$ \u662f\u5426\u4e3a\u597d\u53cb\uff08\u522b\u5fd8\u4e86\u5148 `memset` \u4e0b\u5594\uff09\u3002\n\n```cpp\nfor(int i=1;i<=tot;++i){\n    memset(flag,0,sizeof flag);\n    for(int j=0;j<ship[i].size();++j) flag[ship[i][j]]=1;\n}\n```\n\n\u63a5\u7740\uff0c\u6211\u4eec\u6765\u5224\u65ad\u7528\u6237 $i$ \u7684\u63a8\u8350\u597d\u53cb\uff0c\u5982\u679c\u5faa\u73af\u4e24\u65b9 $i$ \u548c $j$ \u76f8\u540c\u6216\u662f\u597d\u53cb\uff0c\u5c31\u8df3\u8fc7\u3002\n\n\u5982\u679c\u4e0a\u65b9\u6761\u4ef6\u90fd\u4e0d\u6ee1\u8db3\uff0c\u90a3\u4e48\u5c31\u7ee7\u7eed\u5224\u65ad\u3002\n\n\u518d\u7528\u4e00\u4e2a\u5b50\u5faa\u73af\u6765\u5224\u65ad $j$ \u7684\u597d\u53cb\u662f\u4e0d\u662f $i$ \u7684\u597d\u53cb\uff0c\u5982\u679c\u662f\uff0c\u5c31\u628a $i$ \u548c $j$ \u7684\u5171\u540c\u597d\u53cb\u6570\u91cf\u52a0 1\n\u627e\u5b8c\u4e4b\u540e\uff0c\u6211\u4eec\u518d\u770b\u770b $i$ \u548c $j$ \u5171\u540c\u597d\u53cb\u7684\u6570\u91cf\u662f\u4e0d\u662f\u5f53\u524d\u7528\u6237 $i$ \u7684\u63a8\u8350\u597d\u53cb\u4e2d\u5171\u540c\u597d\u53cb\u6570\u91cf\u5e76\u5217\u6700\u5927\u7684\uff0c\u5982\u679c\u662f\uff0c\u628a $i$ \u63a8\u8350\u597d\u53cb\u6570\u91cf\u52a0 1\u3002\u5982\u679c $i$ \u548c $j$ \u7684\u5171\u540c\u597d\u53cb\u6570\u91cf\u751a\u81f3\u6bd4\u4e4b\u524d\u627e\u5230\u7684\u8fd8\u8981\u5927\uff0c\u90a3\u4e48\u7528\u6237 $i$ \u7684\u63a8\u8350\u7528\u6237\u5c31\u53d8\u4e3a\u4e86 $j$ \u4e00\u4eba\u3002\n\n\u5e76\u4e14\uff0c\u5728\u8fd9\u4e9b\u64cd\u4f5c\u540e\uff0c\u6211\u4eec\u8981\u628a $i$ \u7684\u5171\u540c\u597d\u53cb\u6570\u91cf\u8bb0\u4e0b\u6765\uff0c\u6545\u5f00\u4e00\u4e2a\u6570\u7ec4 ans\uff08\u5927\u5c0f\u4e5f\u8981\u5f00\u5230`MAXN`\u7684\u4e24\u500d\u5594\uff09\u3002\n\n```cpp\nfor(int i=1;i<=tot;++i){\n    int suggest_friends=0; // \u63a8\u8350\u7528\u6237\u6570\u91cf\n    memset(flag,0,sizeof flag); // \u6e05\u7a7a\u4e00\u4e0b\n    for(int j=0;j<ship[i].size();++j) flag[ship[i][j]]=1; //  \u6807\u8bb0 i \u548c j \u597d\u53cb\n    for(int j=1;j<=tot;++j){\n        if(i==j) continue; // \u540c\u4e00\u4e2a\u4eba\u5c31\u8df3\u8fc7\u5427\n        if(!flag[j]){ // \u4e0d\u4e3a\u597d\u53cb\n            int both_friends=0; // \u5171\u540c\u597d\u53cb\u6570\u91cf\n            for(int k=0;k<ship[j].size();++k){\n                if(flag[ship[j][k]]) both_friends++; // \u67e5\u627e i \u548c j \u7684\u5171\u540c\u597d\u53cb\n            }\n            if(both_friends>ans[i]){ // i \u548c j \u7684\u5171\u540c\u597d\u53cb\u6570\u91cf\u751a\u81f3\u6bd4\u4e4b\u524d\u627e\u5230\u7684\u8fd8\u8981\u5927\n                suggest_friends=1; // i \u7684\u63a8\u8350\u7528\u6237\u5c31\u53d8\u4e3a\u4e86 j \u4e00\u4eba\u3002\n                ans[i]=both_friends;\n            }else if(both_friends==ans[i]) suggest_friends++; // \u63a8\u8350\u597d\u53cb\u6570\u91cf\u52a0 1\n        }\n    }\n    ans[i]=suggest_friends;// \u8bbe\u6210\u6700\u7ec8\u7684\u63a8\u8350\u7528\u6237\u6570\u91cf\n}\n```\n\n\u6700\u540e\uff0c\u6211\u4eec\u628a ans \u7684\u7b2c $i$ \u9879\u8bbe\u6210\u6700\u7ec8\u7684\u63a8\u8350\u7528\u6237\u6570\u91cf\u3002\n\u6700\u540e\u7684\u6700\u540e\uff0c\u6211\u4eec\u5faa\u73af\u8f93\u5165\u7684\u7528\u6237\uff0c\u8f93\u51fa\u540d\u5b57\u548c\u63a8\u8350\u7528\u6237\u6570\u91cf\uff08\u611f\u8c22\u51fa\u9898\u4eba\u6ca1\u6709\u8981\u6c42\u8f93\u51fa\u7684\u987a\u5e8f\uff0c\u5426\u5219\u8fd8\u8981\u9ebb\u70e6\uff09\u3002\n\n\u9644\u4e0a\u5b8c\u6574 AC \u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<string>\n#include<map>\n#include<vector>\n#include<cstring>\n\n#define il inline\n\nconst int MAXN = 5005;\n\nusing namespace std;\n\nmap<string,int> name;\nmap<string,int>::iterator iter;  \nvector<int> ship[MAXN<<1];\nbool flag[MAXN<<1];\nint ans[MAXN];\n\nint m;\nint main(){\n    std::ios::sync_with_stdio(false);\n    cin>>m;\n    string x,y;\n    int ix,iy,tot=0;\n    for(int i=1;i<=m;++i){\n        cin>>x>>y;\n        iter=name.find(x);\n        if(iter!=name.end())  ix=iter->second;\n        else name.insert(pair<string,int>(x,ix=++tot));\n        iter=name.find(y);\n        if(iter!=name.end())  iy=iter->second;\n        else name.insert(pair<string,int>(y,iy=++tot));\n        ship[ix].push_back(iy);\n        ship[iy].push_back(ix);\n    }\n    cout<<tot<<endl;\n    for(int i=1;i<=tot;++i){\n        int suggest_friends=0;\n        memset(flag,0,sizeof flag);\n        for(int j=0;j<ship[i].size();++j) flag[ship[i][j]]=1;\n        for(int j=1;j<=tot;++j){\n            if(i==j) continue;\n            if(!flag[j]){\n                int both_friends=0;\n                for(int k=0;k<ship[j].size();++k){\n                    if(flag[ship[j][k]]) both_friends++;\n                }\n                if(both_friends>ans[i]){\n                    suggest_friends=1;\n                    ans[i]=both_friends;\n                }else if(both_friends==ans[i]) suggest_friends++;\n            }\n        }\n        ans[i]=suggest_friends;\n    }\n    for(iter=name.begin();iter!=name.end();++iter){\n        cout<<iter->first<<\" \"<<ans[iter->second]<<endl;\n    }\n}\n```\n\n",
        "postTime": 1597723323,
        "uid": 193646,
        "name": "\u78b3\u9178\u6c22\u76d0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF245G \u3010Suggested Friends\u3011"
    }
]