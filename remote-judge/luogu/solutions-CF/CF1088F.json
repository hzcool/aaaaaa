[
    {
        "content": "\u76f8\u5f53\u4e8e\u642c\u5b98\u65b9\u9898\u89e3\u4e86\u5427\u2026\u2026\n\n### \u9898\u610f\n\u7ed9\u4f60\u4e00\u68f5\u6811\uff0c\u70b9\u6709\u70b9\u6743\uff0c\u4fdd\u8bc1\u6700\u5c0f\u70b9\u6743\u662f\u552f\u4e00\u7684,\u800c\u4e14\u4fdd\u8bc1\u5bf9\u4e8e\u9664\u6700\u5c0f\u503c\u5916\u7684\u70b9$u$\uff0c\u90fd\u5b58\u5728\u4e00\u4e2a\u4e0e\u5b83\u76f8\u8fde\u7684\u70b9$v$\uff0c\u4f7f\u5f97$v$\u7684\u70b9\u6743$a_v<a_u$\u3002\u4f60\u73b0\u5728\u53ef\u4ee5\u5bf9\u8fd9\u68f5\u6811\u8fdb\u884c\u4efb\u610f\u7684$link-cut$\u91cd\u7ec4\u51fa\u53e6\u5916\u4e00\u68f5\u6811\uff0c\u6362\u53e5\u8bdd\u8bf4\u4f60\u8981\u627e\u51fa\u70b9\u7684\u6807\u53f7\u76f8\u7b49\u5c31\u5bf9\u5e94\u70b9\u6743\u76f8\u7b49\u7684\u53e6\u5916\u4e00\u68f5\u6811\u7684\u4ef7\u503c\u6700\u5c0f\u3002\n\n\u5b9a\u4e49\u91cd\u7ec4\u540e\u7684\u6811\u7684\u4ef7\u503c$w$\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9$u$\uff0c\u5bf9\u4ef7\u503c\u6709$a_u\\cdot deg_u$\u7684\u8d21\u732e\u3002$deg_i$\u8868\u793a\u65b0\u6811\u4e2d$i$\u53f7\u70b9\u7684\u8fde\u8fb9\u7684\u6570\u91cf(\u5ea6\u6570)\u3002\u5bf9\u4e8e\u65b0\u6811\u7684\u6bcf\u6761\u8fb9$\\{u,v\\}$\uff0c\u5bf9\u4ef7\u503c\u6709\n$$\\left\\lceil log_2(dist[u,v])\\right\\rceil\\cdot min(a_u,a_v)$$\n\u7684\u8d21\u732e\u3002\u5176\u4e2d$dist[u,v]$\u8868\u793a\u539f\u6811\u4e0a\u70b9$u$\u5230\u70b9$v$\u7684\u8ddd\u79bb(\u8fb9\u6743\u4e3a1)\u3002\n\n\u9996\u5148\u89c2\u5bdf\u6811\u7684\u4ef7\u503c\u7684\u5b9a\u4e49\uff0c\u53d1\u73b0\u70b9\u6743\u7684\u8d21\u732e\u5176\u5b9e\u4e5f\u4e0e\u8fb9\u6709\u8d21\u732e\uff0c\u90a3\u6211\u4eec\u4e5f\u5c06\u8fd9\u4e2a\u8d21\u732e\u7ed9\u52a0\u5230\u8fb9\u4e0a\u3002\u90a3\u4e48\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u6811\u7684\u4ef7\u503c\u662f\u5bf9\u4e8e\u6bcf\u6761\u8fb9\uff0c\u6709\n$$(\\left\\lceil log_2(dist[u,v])\\right\\rceil)\\cdot min(a_u,a_v)+a_u+a_v$$\n\u7684\u8d21\u732e\u3002\n\n\u9996\u5148\u8981\u4f1a\u5229\u7528\u9898\u76ee\u4e2d\u7ed9\u7684$a_v<a_u$\u7684\u6027\u8d28\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a\u6027\u8d28\u5728\u6811\u4e0a\u52a0\u4e0a\u53ea\u6709\u4e00\u4e2a\u6700\u5c0f\u503c\u7684\u6761\u4ef6\u662f\u53ef\u4ee5\u5f97\u5230\u8fd9\u4e2a\u7ed3\u8bba\u7684\uff1a\u9664\u6700\u5c0f\u503c\u5916\uff0c\u6bcf\u4e2a\u70b9\u90fd\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u4e0e\u4ed6\u76f8\u90bb\u7684\u70b9$v$\u6743\u503c\u5c0f\u4e8e\u5b83\u3002\u56e0\u4e3a\u5bf9\u4e8e\u70b9$u$\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u70b9$v$\u5c0f\u4e8e\u5b83\uff0c\u90a3\u4e48\u5c31\u8981\u9700\u8981\u53e6\u5916\u4e00\u4e2a\u70b9\u53bb\u5c0f\u4e8e$v$\uff0c\u90a3\u8fd9\u79cd\u4f9d\u8d56\u53ea\u4f1a\u5728\u6700\u5c0f\u503c\u7684\u65f6\u5019\u505c\u6b62\uff0c\u4f46\u662f\u6574\u68f5\u6811\u53ea\u6709\u4e00\u4e2a\u6700\u5c0f\u503c\uff0c\u6240\u4ee5\u6bcf\u4e2a\u70b9\u4e5f\u53ea\u80fd\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u70b9\u5c0f\u4e8e\u5b83\u3002\n\n\u4e8e\u662f\u901a\u8fc7\u8fd9\u79cd\u5173\u7cfb\uff0c\u6211\u4eec\u80fd\u5efa\u51fa\u4e00\u4e2a\u4ee5\u6700\u5c0f\u503c\u4e3a\u6839\u7684\u6811\uff0c\u8fd9\u6837\u7684\u8bdd\u6bcf\u4e2a\u70b9\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u5c0f\u4e8e\u5b83\u7684\u90a3\u4e2a\u70b9\u5c31\u662f\u4ed6\u7684father\uff0c\u5e76\u4e14\u8fd9\u6837\u6811\u7684\u70b9\u6743\u5206\u5e03\u6709\u5355\u8c03\u6027\uff0c\u4e00\u4e2a\u70b9\u7684\u70b9\u6743\u4e00\u5b9a\u5927\u4e8e\u81ea\u5df1\u7684\u513f\u5b50\u3002\n\n\n\u7136\u540e\u6211\u4eec\u518d\u6765\u5206\u6790\u4e00\u4e0b\u9898\u76ee\u8981\u6c42\uff0c\u4e0d\u59a8\u5148\u4ece\u6700\u66b4\u529b\u7684\u60f3\u6cd5\u5f00\u59cb\u3002\n\n\u4f60\u8981\u6c42\u4e00\u68f5\u6811\uff0c\u8fb9\u6709\u8fb9\u6743\uff0c\u8981\u6c42\u8fb9\u6743\u548c\u6700\u5c0f\u3002\u3002\u3002\u3002\u3002\n\n\u6700\u5c0f\u751f\u6210\u6811\u8c01\u4e0d\u4f1a\u554a\uff1f\u53ea\u4e0d\u8fc7\u8fb9\u6570\u6709\u70b9\u591a\uff0c$O(n^2)$\u7ea7\u522b\u7684\u3002\n\n\u90a3\u6211\u4eec\u5c31\u8981\u4ece\u8fb9\u6743\u4e0e\u6700\u5c0f\u751f\u6210\u6811\u7684\u6027\u8d28\u4e0b\u624b\u4e86\uff0c\u6211\u4eec\u4e0d\u59a8\u8bbe\u6bcf\u4e00\u6761\u8fb9\u4ece$u$\u51fa\u53d1\u5230\u8fbe$v$\u5e76\u4e14\u6709$a_v<a_u$\uff0c\u7136\u540e\u6c42\u751f\u6210\u6811\u4e2d\uff0c\u6bcf\u4e2a\u70b9\u5411\u5916\u53ea\u4f1a\u4e14\u5fc5\u987b\u8fde\u4e00\u6761\u8fb9\u8fde\u63a5\u5230\u751f\u6210\u6811\u4e2d\u3002\u90a3\u4e48\u6211\u4eec\u6700\u5c0f\u5316\u7684\u53ea\u6709\u4e00\u4e2a\u6761\u4ef6\n\n$$(\\left\\lceil log_2(dist[u,v])\\right\\rceil+1)\\cdot a_v$$\n\n\u4e00\u4e2a\u70b9\u53ea\u4f1a\u5411\u6bd4\u5b83\u70b9\u6743\u5c0f\u7684\u70b9\u8fde\u8fb9\uff0c\u8fd9\u6837\u4e00\u5b9a\u4e0d\u4f1a\u51fa\u73b0\u73af\uff0c\u518d\u4ed4\u7ec6\u7ed3\u5408\u4e4b\u524d\u7684\u6811\u7684\u6027\u8d28\uff0c\u4f60\u53d1\u73b0\u2026\u2026\u6bcf\u4e2a\u70b9\u7684\u6700\u4f18\u7b56\u7565\u662f\u5411\u5b83\u7684\u7b2c$2^k$\u7684\u7956\u5148\u8fde\u8fb9\u3002\uff08\u6bcf\u4e2a\u70b9\u5230\u6839\u7684\u8def\u5f84\u4e0a\u70b9\u6743\u662f\u9012\u51cf\u7684\uff0c\u5230\u53f6\u5b50\u7684\u8def\u5f84\u662f\u9012\u589e\u7684\uff09\u3002\n\n\u4e8e\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u53ea\u9700\u8981\u9009\u62e9\u4ed6$2^k$\u7956\u5148\u4e2d\uff0c\u53d6\u4ee3\u4ef7\u6700\u5c0f\u7684\u8fde\u8fb9\uff0c\u8fd9\u5c31\u662f\u6700\u5c0f\u751f\u6210\u6811\u3002\n\n```cpp\n#include<cstdio>\n#include<iostream>\nusing namespace std;\n#define N 503000\n#define M 1300000\n#define INF 0x3f3f3f3f\n#define ll long long\nstruct node{\n\tint to,next;\n}q[M];\nint head[N],ss,f[21][N],n,a[N],Rt;ll ans=0;\nvoid addedge(int x,int y)\n{\n\tq[++ss]=(node){y,head[x]};head[x]=ss;\n\tq[++ss]=(node){x,head[y]};head[y]=ss;\n}\nvoid dfs(int i,int fa)\n{\n\tf[0][i]=fa;ll mi=a[fa];int j=1;\n\tfor (j=1;j<=20;++j)\n\t{\n\t\tf[j][i]=f[j-1][f[j-1][i]];\n\t\tif (!f[j][i]) break;\n\t\tmi=min(1ll*(j+1)*a[f[j][i]],mi);\n\t}\n\tmi=min(mi,1ll*(j+1)*a[Rt]);\n\tif (fa) ans+=mi+a[i];\n\tfor (int j=head[i];j;j=q[j].next)\n\t\tif (q[j].to^fa)\n\t\t\tdfs(q[j].to,i);\n}\ninline int read(){\n\tint n=0;char a;bool z=false;\n\twhile(a=getchar())\n\t{\n\t\tif (a>'9'||a<'0')\n\t\t\tif (z) break;\n\t\t\telse continue;\n\t\tif (!z) z=true;\n\t\tn=(n<<1)+(n<<3)+(a^48);\n\t}\n\treturn n;\n}\nint main()\n{\n\ta[0]=INF;\n\tn=read();Rt=0;\n\tfor (int i=1;i<=n;++i)\n\t{\n\t\ta[i]=read();\n\t\tif (a[i]<a[Rt]) Rt=i;\n\t}\n\tfor (int i=1;i<n;++i) addedge(read(),read());\n\tdfs(Rt,0);\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1543998281,
        "uid": 45876,
        "name": "\u51c4\u9b49",
        "ccfLevel": 9,
        "title": "CF1088F \u9898\u89e3"
    },
    {
        "content": "\u4e3a\u4e86\u4fbf\u4e8e\u5904\u7406\uff0c\u6211\u4eec\u628a\u70b9\u6743\u5e26\u6765\u7684\u8d21\u732e\u7b97\u5728\u8fb9\u6743\u4e0a\n\n\u90a3\u4e48\u5b9a\u4e49\u5c31\u662f\uff1a\n\n\u5bf9\u4e8e\u6811\u7684\u6bcf\u6761\u8fb9\uff0c\u8d21\u732e\u4e3a \n\n$a_u+a_v+min(a_u,a_v)*\\lceil log_2(dist(u,v))\\rceil$\n\n\u56e0\u4e3a\u9898\u9762\u8981\u6c42\n\n$\\lceil$\u9664\u4e86\u6743\u503c\u6700\u5c0f\u7684\u70b9\u5916\uff0c\u6bcf\u4e2a\u70b9\u81f3\u5c11\u6709\u4e00\u4e2a\u70b9\u6743\u5c0f\u4e8e\u5b83\u7684\u76f8\u90bb\u70b9$\\rfloor$\uff0c\n\n\u6240\u4ee5\u6211\u4eec\u5efa\u7acb\u7684\u6811\u5e94\u8be5\u4ee5\u6700\u5c0f\u503c\u4e3a\u6839\n\n\u7136\u540e\u6bcf\u4e2a\u8282\u70b9\u7684\u7236\u4eb2\u662f\u552f\u4e00\u6743\u503c\u6bd4\u5b83\u5c0f\u7684\n\n\u7ed3\u5408\u4e4b\u524d\u7684\u8d21\u732e\u8ba1\u7b97\uff0c\u6bcf\u4e2a\u70b9\u5411\u5b83\u7684 $2^k$ \u7ea7\u7956\u5148\u4e2d\u6743\u503c\u6700\u5c0f\u7684\u8fde\u8fb9\uff0c\n\n\u56e0\u4e3a\u6bcf\u4e00\u6b21\u90fd\u5f80\u5c0f\u7684\u8fde\u8fb9\uff0c\u6ee1\u8db3\u6811\u7684\u65e0\u73af\u6027\u8d28\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u53ea\u9700\u8981\u500d\u589e\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u8282\u70b9\u7684 $2^k$ \u7ea7\u7956\u5148\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(nlogn)$",
        "postTime": 1574644945,
        "uid": 53807,
        "name": "Erusel",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1088F \u3010Ehab and a weird weight formula\u3011"
    },
    {
        "content": "###CF1088F Ehab and a weird weight formula\n####\u9898\u610f\n\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u70b9\u6709\u70b9\u6743\uff0c\u5176\u4e2d\u8fd9\u68f5\u6811\u6ee1\u8db3\u9664\u4e86\u6743\u503c\u6700\u5c0f\u7684\u70b9\u5916\uff0c\u6bcf\u4e2a\u70b9\u81f3\u5c11\u6709\u4e00\u4e2a\u70b9\u6743\u5c0f\u4e8e\u5b83\u7684\u76f8\u90bb\u70b9\u3002\n\n\u8981\u6c42\u4f60\u91cd\u65b0\u6784\u5efa\u8fd9\u68f5\u6811\uff0c\u4f7f\u5f97\u4ee3\u4ef7\u6700\u5c0f\u3002\u8ba1\u7b97\u4ee3\u4ef7\u7684\u65b9\u6cd5\u5982\u4e0b\uff1a\n\n - \u70b9\u7684\u4ee3\u4ef7\uff1a $deg_xv_x$,\u5176\u4e2d$deg_x$\u8868\u793a\u70b9$x$\u7684\u5ea6\n - \u8fb9$(x, y)$\u7684\u4ee3\u4ef7\uff1a$log_2(dis(x, y)) \\cdot min(v_x, v_y)$,\u5176\u4e2d$dis(x, y)$\u8868\u793a$x$\u548c$y$\u5728\u539f\u6811\u4e2d\u7684\u8ddd\u79bb\u3002\n\n\u6811\u7684\u4ee3\u4ef7\u4e3a\u70b9\u7684\u4ee3\u4ef7\u4e0e\u8fb9\u7684\u4ee3\u4ef7\u4e4b\u548c\u3002\n\n####\u9898\u89e3\n\n\u9996\u5148\u6211\u4eec\u6765\u8bc1\u660e\u4e00\u4e2a\u4e8b\u60c5\uff1a\u4e3a\u4e86\u6ee1\u8db3\u6bcf\u4e2a\u70b9\u81f3\u5c11\u6709\u4e00\u4e2a\u70b9\u6743\u5c0f\u4e8e\u5b83\u7684\u76f8\u90bb\u70b9(\u9664\u4e86\u6743\u503c\u6700\u5c0f\u7684\u70b9\u4e4b\u5916),\u8fd9\u68f5\u6811\u5fc5\u987b\u6ee1\u8db3\uff1a\u6839\u4e3a\u6743\u503c\u6700\u5c0f\u7684\u70b9\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u800c\u8a00\uff0c\u7236\u4eb2\u7684\u6743\u503c\u4e00\u5b9a\u5c0f\u4e8e\u5b83\u3002\n\n\u5982\u679c\u4e00\u4e2a\u70b9x\u8981\u4f9d\u9760\u5b83\u7684\u513f\u5b50y\u6765\u6ee1\u8db3\u8fd9\u4e2a\u6027\u8d28\uff0c\u90a3\u4e48\u5c31\u610f\u5473\u7740\u5b83\u7684\u513f\u5b50y\u4e5f\u9700\u8981\u4f9d\u9760\u5b83\u7684\u67d0\u4e2a\u513f\u5b50z\u6765\u6ee1\u8db3\u8fd9\u4e2a\u6027\u8d28\u3002\n\n\u90a3\u4e48\u8fd9\u6837\u7684\u8bdd\uff0c\u53f6\u8282\u70b9\u5c31\u65e0\u8bba\u5982\u4f55\u90fd\u4e0d\u80fd\u6ee1\u8db3\u8fd9\u4e2a\u6027\u8d28\u4e86\u3002\u5f97\u8bc1\u3002\n\n\u90a3\u4e48\u8fd9\u4e2a\u6027\u8d28\u53ef\u4ee5\u4e3a\u6211\u4eec\u5e26\u6765\u4ec0\u4e48\uff1f\n\n\u9996\u5148\u6211\u4eec\u8003\u8651\u4e0d\u65ad\u63d2\u5165\u8282\u70b9\u6765\u6784\u5efa\u51fa\u8fd9\u68f5\u6811\u3002\u90a3\u4e48\u4e00\u4e2a\u70b9$x$\u9009\u62e9$fa$\u4f5c\u4e3a\u4ed6\u7684\u7236\u4eb2\uff0c\u5e26\u6765\u7684\u8d21\u732e\u4e3a\uff1a\n\n$v_x + v_{fa} + log_2(dis(x, fa)) \\cdot min(v_xv_{fa})$\n\n\u5982\u679c\u4e00\u4e2a\u70b9$x$\u9009\u4e2d\u4e86\u5b83\u5b50\u6811\u4e2d\u7684\u67d0\u4e2a\u70b9\u4f5c\u4e3a\u7236\u4eb2\uff0c\u90a3\u4e48\u5b83\u8fd8\u4e0d\u5982\u9009\u62e9\u8ddd\u79bb\u66f4\u5c0f\u7684\u7956\u5148\uff0c\u4ee3\u4ef7\u66f4\u5c0f\u3002\n\n\u5982\u679c\u4e00\u4e2a\u70b9$x$\u9009\u4e2d\u4e86\u6df1\u5ea6\u5c0f\u4e8e\u5b83\u7684\u975e\u7956\u5148\u8282\u70b9\uff0c\u90a3\u4e48\u5b83\u8fd8\u4e0d\u5982\u4ece\u5b83\u9009\u62e9\u7684\u8fd9\u4e2a\u8282\u70b9\u5f80\u4e0a\u8d70\uff0c\u8d70\u5230\u4e00\u4e2a\u79bb\u5b83\u6700\u8fd1\u7684\uff0c\u662f$x$\u7684\u7956\u5148\u7684\u8282\u70b9\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65b0\u8282\u70b9\u80af\u5b9a\u6bd4\u539f\u6765\u9009\u62e9\u7684\u8282\u70b9\u8ddd\u79bb$x$\u66f4\u8fd1\uff0c\u4e14\u6743\u503c\u66f4\u5c0f\uff0c\u6240\u4ee5\u663e\u7136\u66f4\u4f18\u3002\n\n\u56e0\u6b64\u70b9$x$\u4e00\u5b9a\u4f1a\u9009\u62e9\u5b83\u7684\u67d0\u4e2a\u7956\u5148\uff0c\u56e0\u4e3a$log_2$\u7684\u503c\u53ef\u4ee5\u770b\u505a\u662f\u4e00\u6bb5\u4e00\u6bb5\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u500d\u589e\u6765\u7ef4\u62a4\u6bcf\u4e00\u6bb5\u4e2d\u7684\u6700\u5c0f\u503c.\n\n\u800c\u56e0\u4e3a\u8d8a\u5f80\u4e0a\u8d8a\u5c0f\uff0c\u6240\u4ee5\u8fd9\u4e2a\u6700\u5c0f\u503c\u521a\u597d\u5c31\u662f\u5b83\u7684\u7b2c$2^k$\u7ea7\u7956\u5148\uff0c\u56e0\u6b64\u5bf9\u4e8e\u67d0\u4e2a\u70b9\uff0c\u6211\u4eec\u53ea\u9700\u8981\u500d\u589e\u7684\u8df3\u4e00\u8df3\uff0c\u5728\u8fd9\u4e9b\u53ef\u80fd\u7684\u70b9\u4e2d\u9009\u62e9\u4e00\u4e2a\u6700\u4f18\u7684\u5c31\u53ef\u4ee5\u4e86\u3002\n\u5f53\u7136\u5982\u679c\u7956\u5148\u7684\u4e2a\u6570\u4e0d\u591f$2^k$\u7684\u8bdd\u5c31\u9700\u8981\u53d6root\u4f5c\u4e3afather\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define R register int\n#define LL long long\n#define AC 500100\n#define ac 1000100\n#define inf 100000000000000000LL\n\nint n, rot;\nLL ans;\nint v[AC], fa[AC][20];\nint Head[AC], date[ac], Next[ac], tot;\n\ninline int read()\n{\n    int x = 0;char c = getchar();\n    while(c > '9' || c < '0') c = getchar();\n    while(c >= '0' && c <= '9') x = x * 10 + c - '0', c = getchar();\n    return x;\n}\n\ninline void upmin(LL &a, LL b) {if(b < a) a = b;}\ninline void upmax(LL &a, LL b) {if(b > a) a = b;}\n\ninline void add(int f, int w)\n{\n    date[++ tot] = w, Next[tot] = Head[f], Head[f] = tot;\n    date[++ tot] = f, Next[tot] = Head[w], Head[w] = tot;\n}\n\nvoid pre()\n{\n    n = read(), rot = 1;\n    for(R i = 1; i <= n; i ++) \n    {\n        v[i] = read();\n        if(v[i] < v[rot]) rot = i;\n    }\n    for(R i = 2; i <= n; i ++) add(read(), read());\n}\n\nvoid dfs(int x)\n{\n    LL rnt = inf;\n    if(x != rot)\n    {\t\n        for(R i = 0; i <= 19; i ++) \n        {\t\n            if(i) fa[x][i] = fa[fa[x][i - 1]][i - 1];\n            upmin(rnt, 1LL * (i + 1) * v[fa[x][i]] + v[x]);\n        }\n        ans += rnt;\n    }\n    else for(R i = 0; i <= 19; i ++) fa[x][i] = x;\n    for(R i = Head[x]; i; i = Next[i])\n    {\n        int now = date[i];\n        if(now == fa[x][0]) continue;\n        fa[now][0] = x, dfs(now);\n    }\n}\n\nint main()\n{\n//\tfreopen(\"in.in\", \"r\", stdin);\n    pre();\n    dfs(rot);\n    printf(\"%lld\\n\", ans);\n//\tfclose(stdin);\n    return 0;\n}\n```\n",
        "postTime": 1552891086,
        "uid": 47136,
        "name": "ww3113306",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1088F \u3010Ehab and a weird weight formula\u3011"
    }
]