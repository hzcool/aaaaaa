[
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/CF1665C)\n\n[\u535a\u5ba2](https://ttzytt.com/CF1665C)\u4e2d\u89c2\u770b\u4f53\u9a8c\u66f4\u4f73\n# 1.\u9898\u610f\uff1a\n\u7ed9\u4f60\u4e00\u4e2a\u6709 $n$ \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u4e00\u5f00\u59cb\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u662f\u5065\u5eb7\u7684\u3002\u6bcf\u79d2\u949f\u4f60\u53ef\u4ee5\u8fdb\u884c\u4e0b\u9762\u4e24\u79cd\u64cd\u4f5c\uff1a\n1. \u4f20\u64ad\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9\uff0c\u5982\u679c\u5b83\u7684\u81f3\u5c11\u4e00\u4e2a**\u5b50\u8282\u70b9**\u88ab\u611f\u67d3\u4e86\uff0c\u90a3\u4e48\u53ef\u4ee5\u611f\u67d3\u5b83\u7684\u53e6\u4e00\u4e2a\u5b50\u8282\u70b9\u3002\uff08\u5982\u679c\u6709\u591a\u4e2a\u8282\u70b9\u7b26\u5408\u6761\u4ef6\uff0c\u90a3\u4e00\u79d2\u949f\u5c31\u53ef\u4ee5\u4f20\u64ad\u591a\u4e2a\u8282\u70b9\uff09\n2. \u6ce8\u5c04\uff1a\u4f60\u53ef\u4ee5\u4efb\u9009\u6811\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\u8fdb\u884c\u611f\u67d3\u3002\uff08\u4e00\u79d2\u949f\u53ea\u80fd\u591a\u611f\u67d3\u4e00\u4e2a\u8282\u70b9\uff09\n\n\u73b0\u5728\u95ee\u4f60\u6700\u5c11\u9700\u8981\u591a\u5c11\u79d2\u624d\u80fd\u611f\u67d3\u6574\u4e2a\u6811\u3002\n\n# 2.\u601d\u8def\uff1a\n\u770b\u5b8c\u9898\u6211\u4eec\u8981\u6ce8\u610f\u5230\uff0c\u8fd9\u4e2a\u9898\u8bf4\u7684\u662f\u8282\u70b9\u53ef\u4ee5\u628a\u75c5\u6bd2\u4f20\u64ad\u7ed9\u4ed6\u4eec\u7684\u5144\u5f1f\u8282\u70b9\uff0c\u800c\u4e0d\u662f\u4f20\u64ad\u7ed9\u4ed6\u4eec\u7684\u5b50\u8282\u70b9\uff0c\u6240\u4ee5\u8fd9\u4e2a\u6811\u7684\u6bcf\u4e00\u5c42\u4e4b\u95f4\u662f\u5b8c\u5168\u72ec\u7acb\u7684\uff0c\u4e0d\u53ef\u80fd\u628a\u75c5\u6bd2\u4ece\u4e00\u5c42\u4f20\u64ad\u7ed9\u53e6\u4e00\u5c42\u3002\n\n\u6240\u4ee5\u6211\u4eec\u80af\u5b9a\u9700\u8981\u5728\u4e00\u5f00\u59cb\u7684\u65f6\u5019\u5c31\u7ed9\u6bcf\u4e2a\u8282\u70b9\u7684\u81f3\u5c11\u4e00\u4e2a\u5b50\u8282\u70b9\u6ce8\u5c04\u75c5\u6bd2\uff08\u5177\u4f53\u54ea\u4e2a\u4e0d\u91cd\u8981\uff09\uff0c\u8fd9\u6837\u6bcf\u79d2\u949f\u80fd\u611f\u67d3\u7684\u8282\u70b9\u66f4\u591a\uff08\u6839\u636e\u64cd\u4f5c 1\uff09\u3002\n\n\u90a3\u5148\u7ed9\u8c01\u7684\u5b50\u8282\u70b9\u6ce8\u5c04\u5462\uff1f\u8003\u8651\u5148\u88ab\u6ce8\u5c04\u7684\u5b50\u8282\u70b9\u4f1a\u6709\u66f4\u591a\u7684\u65f6\u95f4\u628a\u75c5\u6bd2\u4f20\u64ad\u7ed9\u66f4\u591a\u7684\u5b50\u8282\u70b9\u3002\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u5148\u7ed9\u5b50\u8282\u70b9\u66f4\u591a\u7684\u8282\u70b9\u6ce8\u5c04\u75c5\u6bd2\u3002\n\n\uff08\u5982\u679c\u5148\u7ed9\u5b50\u8282\u70b9\u5c11\u7684\u8282\u70b9\u6ce8\u5c04\uff0c\u90a3\u5728\u7ed9\u6240\u6709\u8282\u70b9\u6ce8\u5c04\u5b8c\u4e4b\u524d\uff0c\u8fd9\u4e2a\u8282\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9\u53ef\u80fd\u90fd\u88ab\u611f\u67d3\u4e86\uff0c\u4e5f\u5c31\u662f\u6709\u5f88\u591a\u65f6\u95f4\u88ab\u6d6a\u8d39\u4e86\uff09\u3002\n\n\u5728\u786e\u4fdd\u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u81f3\u5c11\u4e00\u4e2a\u5b50\u8282\u70b9\u88ab\u6ce8\u5c04\u540e\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u7ed9\u5b50\u8282\u70b9\u7279\u522b\u591a\u7684\u90a3\u4e9b\u8282\u70b9\u6ce8\u5c04\u75c5\u6bd2\uff0c\u9632\u6b62\u6709\u4e9b\u7279\u522b\u5927\u7684\u8282\u70b9\u9760\u4f20\u64ad\u6765\u4f20\u67d3\u7279\u522b\u6162\u3002\n\n\u5f53\u7136\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u8ddf\u524d\u9762\u4e00\u6837\u76f4\u63a5\u6839\u636e\u5b50\u8282\u70b9\u6570\u91cf\u6765\u6392\u5e8f\uff0c\u5e76\u4e14\u4e00\u76f4\u7ed9\u5b50\u8282\u70b9\u591a\u7684\u8282\u70b9\u6ce8\u5c04\u75c5\u6bd2\uff0c\u56e0\u4e3a\u8fd9\u6837\u53ef\u80fd\u4f1a\u8ba9\u67d0\u4e2a\u8282\u70b9\u4ee5\u53ca\u5b83\u7684\u5b50\u8282\u70b9\u8fc5\u901f\u7684\u88ab\u5b8c\u5168\u611f\u67d3\uff0c\u800c\u5176\u4ed6\u7684\u8282\u70b9\u8fd8\u9700\u8981\u5f88\u957f\u65f6\u95f4\u3002\n\n\u6bd4\u5982\u6709\u4e24\u4e2a\u8282\u70b9\uff0c\u4ed6\u4eec\u5728\u7ecf\u8fc7\u6ce8\u5c04\u540e\u7684\uff0c\u5065\u5eb7\u7684\u5b50\u8282\u70b9\u7684\u6570\u91cf\u5206\u522b\u662f $100$ \u548c $98$\uff0c\u5982\u679c\u6211\u4eec\u76f4\u63a5\u6392\u5e8f\uff0c\u5148\u7ed9\u5927\u7684\u8282\u70b9\u6ce8\u5c04\uff0c\u90a3\u611f\u67d3\u5b8c\u6574\u4e2a\u6811\u5c31\u8fd8\u9700\u8981 $(100\\div2) + \\frac{(98 - (100\\div2))}{2} = 74$ \u79d2\uff08 $\\div 2$ \u662f\u56e0\u4e3a\u6709\u4f20\u64ad\u548c\u6ce8\u5c04\u4e24\u79cd\u611f\u67d3\u65b9\u5f0f\u540c\u65f6\u8fdb\u884c\uff0c\u800c $98 - 50$ \u4e4b\u540e\u518d $\\div 2$ \u662f\u56e0\u4e3a\u6211\u4eec\u5148\u5904\u7406\u5b8c $100$ \u90a3\u4e2a\u8282\u70b9\u624d\u53bb\u7ed9 $98$ \u90a3\u4e2a\u8282\u70b9\u6ce8\u5c04\uff09\u3002\u4f46\u662f\u5982\u679c\u6211\u4eec\u540c\u65f6\u7ed9\u4e24\u4e2a\u8282\u70b9\u6ce8\u5c04\uff0c\u53ea\u9700\u8981 $(100 + 98) \\div 3 = 66$ \u79d2\u7684\u65f6\u95f4\uff08\u56e0\u4e3a\u53ef\u4ee5\u628a\u4e24\u4e2a\u8282\u70b9\u770b\u6210\u4e00\u4e2a\u8282\u70b9\uff0c\u90a3\u6bcf\u79d2\u5c31\u6709\u4e24\u4e2a\u5b50\u8282\u70b9\u56e0\u4e3a\u4f20\u64ad\u800c\u611f\u67d3\uff0c\u4e00\u4e2a\u56e0\u4e3a\u6ce8\u5c04\u800c\u611f\u67d3\uff09\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u5065\u5eb7\u7684\u5b50\u8282\u70b9\u6570\u538b\u5165\u5806\u4e2d\uff0c\u6bcf\u6b21\u6ce8\u5c04\u5b50\u8282\u70b9\u6700\u591a\u7684\u90a3\u4e2a\u3002\n\n# 3.\u4ee3\u7801\uff1a\n\u4e0d\u8fc7\u591a\u89e3\u91ca\uff0c\u4ee3\u7801\u4e2d\u6709\u8be6\u7ec6\u6ce8\u91ca\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 2e5 + 10;\nint n;\nint siz[MAXN], t;\n//siz \u8868\u793a\u8fd9\u4e2a\u8282\u70b9\u7684\u5b50\u8282\u70b9\u7684\u6570\u91cf\n\nint main() {\n    scanf(\"%d\", &t);\n    while (t--) {\n        scanf(\"%d\", &n);\n        memset(siz, 0, sizeof(siz));\n        for (int i = 1; i < n; i++) {\n            int fa;\n            scanf(\"%d\", &fa);\n            siz[fa]++;\n        }\n        siz[0] = 1;  //\u8ba9 0 \u53f7\u8282\u70b9\u8fde\u5230\u6839\u8282\u70b9\uff0c\u6240\u4ee5 0 \u53f7\u8282\u70b9\u7684\u5b50\u8282\u70b9\u6570\u91cf\u662f 1\n        sort(siz, siz + 1 + n);\n        int fir_n_zero = -1;  //\u7b2c\u4e00\u4e2a\u5b50\u8282\u70b9\u6570\u91cf\u4e0d\u662f 0 \u7684\u8282\u70b9\u7684\u4e0b\u6807\n\n        fir_n_zero =\n            find_if(siz, siz + 1 + n, [](int a) { return a != 0; }) - siz;\n\n        priority_queue<int> pq;\n        for (int i = fir_n_zero; i <= n; i++) {\n            //\u5faa\u73af\u4e2d i \u5c0f\u7684\u8282\u70b9\u662f\u540e\u88ab\u6ce8\u5c04\u7684\uff0c\u53ef\u4ee5\u628a i \u7406\u89e3\u4e3a\u5012\u6570\u7b2c i \u4e2a\u88ab\u6ce8\u5c04\n            pq.push(siz[i] - (i - fir_n_zero) - 1);\n            //\u7ed9\u6240\u6709\u8282\u70b9\u7684\u67d0\u4e2a\u5b50\u8282\u70b9\u6ce8\u5c04\u4e00\u904d\uff0c\u4f46\u662f\u5728\u6ce8\u5c04\u7684\u8fc7\u7a0b\u4e2d\u8fd8\u4f1a\u4f20\u64ad\uff0c\u56e0\u4e3a\u4f20\u64ad\u800c\u88ab\u611f\u67d3\u7684\u5b50\u8282\u70b9\u6570\u5c31\u662f\n            // i - fir_n_zero\uff0c\u56e0\u4e3a\u6ce8\u5c04\u800c\u88ab\u611f\u67d3\u7684\u662f 1\uff0c\u6240\u4ee5\u88ab push\n            // \u8fdb\u53bb\u7684\u6570\u5c31\u662f\u7ecf\u8fc7\u8fd9\u4e00\u8f6e\u6ce8\u5c04\u540e\uff0c\u6bcf\u4e2a\u6811\u8fd8\u5269\u4e0b\u51e0\u4e2a\u5b50\u8282\u70b9\u672a\u88ab\u611f\u67d3\u3002\n        }\n\n        int tm_used = n - fir_n_zero + 1; //\u8fd9\u4e00\u8f6e\u6ce8\u5c04\u7528\u6389\u7684\u65f6\u95f4\uff0c\u4e5f\u5c31\u662f\u6709\u5b50\u8282\u70b9\u7684\u8282\u70b9\u7684\u6570\u91cf\n        int spreaded = 0;\n\n        while(pq.top() > spreaded){\n            //\u8fd9\u91cc\u7684 pq \u6ca1\u6709\u51cf\u53bb\u56e0\u4e3a\u4f20\u64ad\u800c\u611f\u67d3\u7684\u6570\u91cf\uff0c\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u4f1a\u6709\u4f20\u64ad\n            spreaded++;\n            //\u6bcf\u6b21\u90fd\u4f1a\u56e0\u4e3a\u4f20\u64ad\u800c\u591a\u611f\u67d3\u4e00\u4e2a\n            int tp = pq.top();\n            pq.pop();\n            pq.push(tp - 1);\n            //\u6bcf\u6b21\u6311\u9009\u6700\u5927\u7684\u8282\u70b9\u6ce8\u5c04\n            tm_used++;\n        }\n        printf(\"%d\\n\", tm_used);\n    }\n}\n```\n\n\u6700\u540e\uff0c\u5e0c\u671b\u8fd9\u7bc7\u9898\u89e3\u5bf9\u4f60\u6709\u5e2e\u52a9\uff0c\u5982\u679c\u6709\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u8bc4\u8bba\u533a\u6216\u8005\u79c1\u4fe1\u8054\u7cfb\u6211\u3002",
        "postTime": 1655155546,
        "uid": 394488,
        "name": "tzyt",
        "ccfLevel": 0,
        "title": "CF1665C Tree Infection \u9898\u89e3"
    },
    {
        "content": "\u5f88\u5947\u602a\u7684\u4e00\u9053\u9898\uff0c\u6211\u53c8\u7528\u7684\u5806\u3002\n\n\u7b80\u8981\u9898\u610f\uff1a\u7ed9\u5b9a\u4e00\u68f5\u6709\u6839\u6811\uff0c\u6839\u8282\u70b9\u4e3a 1\uff0c\u521d\u59cb\u65f6\u6bcf\u4e2a\u8282\u70b9\u4e3a\u5065\u5eb7\u7684\u3002\u6bcf\u6b65\u611f\u67d3\u4e00\u4e2a\u5065\u5eb7\u7684\u8282\u70b9\uff0c\u800c\u4e14\u5982\u679c\u4e00\u4e2a\u70b9\u7684\u88ab\u611f\u67d3\u7684\u513f\u5b50\u8282\u70b9\u7684\u6570\u91cf\u4e0d\u4e3a\u96f6\uff0c\u5219\u611f\u67d3\u8fd9\u4e2a\u70b9\u7684\u4e00\u4e2a\u5065\u5eb7\u7684\u513f\u5b50\u8282\u70b9\uff0c\u4e24\u79cd\u64cd\u4f5c\u540c\u65f6\u8fdb\u884c\u3002\u95ee\u611f\u67d3\u6574\u68f5\u6811\u9700\u8981\u591a\u5c11\u6b65\u3002\n\n\u5f88\u5bb9\u6613\u60f3\u5230\u7edf\u8ba1\u6bcf\u4e2a\u8282\u70b9\u7684\u513f\u5b50\u4e2a\u6570\uff0c\u5e76\u89c4\u5b9a 0 \u53f7\u8282\u70b9\u7684\u513f\u5b50\u8282\u70b9\u4e3a 1\uff0c\u7136\u540e\u628a $n+1$ \u4e2a\u8282\u70b9\u7684\u513f\u5b50\u6570\u91cf\u6392\u5e8f\uff0c\u5e76\u627e\u5230\u6240\u6709\u513f\u5b50\u4e2a\u6570\u4e0d\u4e3a\u96f6\u7684\u3002\n\n\u4e00\u4e2a\u6bd4\u8f83\u663e\u7136\u7684\u60f3\u6cd5\u662f\u4ece\u6700\u5927\u7684\u5411\u6700\u5c0f\u7684\u611f\u67d3\uff0c\u611f\u67d3\u4e00\u8f6e\u4e4b\u540e\u5168\u5f80\u6700\u5927\u7684\u611f\u67d3\uff0c\u4f46\u662f\u8fd9\u4e2a\u505a\u6cd5\u4f1a `wa on 6`\u3002\n\n\u8fd9\u662f\u56e0\u4e3a\u5982\u679c\u4e00\u4e2a\u70b9\u6709 999 \u4e2a\u513f\u5b50\uff0c\u53e6\u5916\u4e00\u4e2a\u70b9\u6709 1000 \u4e2a\u513f\u5b50\uff0c\u6309\u7167\u4e0a\u9762\u7684\u65b9\u6cd5\uff0c\u67d3\u5b8c\u4e00\u8f6e\u5c31\u76f4\u63a5\u5168\u628a\u6700\u591a\u7684\u611f\u67d3\uff0c\u76f4\u63a5\u5ffd\u7565\u4e86\u6b21\u591a\u7684\u8282\u70b9\u3002\n\n\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u662f\u7528\u4e00\u4e2a\u5806\uff0c\u4ece\u6700\u5927\u7684\u5411\u6700\u5c0f\u7684\u611f\u67d3\uff0c\u611f\u67d3\u4e00\u8f6e\u4e4b\u540e\u5168\u5f80\u6254\u5230\u5806\u91cc\u9762\uff0c\u987a\u4fbf\u6574\u4e2a\u8ba1\u6570\u5668\u3002\u6bcf\u6b21\u66b4\u529b\u7ed9\u76ee\u524d\u513f\u5b50\u8282\u70b9\u6570\u6700\u591a\u7684\u611f\u67d3\uff08\u513f\u5b50\u6570\u91cf\u51cf\u4e00\uff09\uff0c\u7136\u540e\u8ba1\u6570\u5668\u52a0\u4e00\u3002\u5982\u679c\u5f53\u524d\u8ba1\u6570\u5668\u4e0d\u5c0f\u4e8e\u513f\u5b50\u8282\u70b9\u6570\uff0c\u611f\u67d3\u5b8c\u6210\u3002\u6b63\u786e\u6027\u663e\u7136\u3002\n\n\u4ee3\u7801\uff1a\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<string>\n#include<cstring>\n#include<algorithm>\n#include<queue>\n#include<bitset>\nusing namespace std;\ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nconst int N=4e5+10;\nint n,m,a[N];\nint main()\n{\n\tint T=read();\n\twhile(T--){\n\t\tint n=read();\n\t\tfor(int i=1;i<n;i++){\n\t\t\tint x=read();\n\t\t\ta[x]++;\n\t\t}\n\t\ta[0]=1;\n\t\tsort(a,a+n+1);\n\t\tfor(int i=0;i<=n;i++){\n\t\t\tif(a[i]!=0){\n\t\t\t\tpriority_queue<int> q;\n\t\t\t\tfor(int j=i;j<=n;j++)\n\t\t\t\t\tq.push(a[j]-(j-i+1));\n\t\t\t\tint ans=n-i+1,top=0;\n\t\t\t\twhile(q.top()>top){\n\t\t\t\t\t//cout<<q.top()<<endl;\n\t\t\t\t\ttop++;\n\t\t\t\t\tint x=q.top();\n\t\t\t\t\tq.pop();\n\t\t\t\t\tq.push(x-1);\n\t\t\t\t\tans++;\n\t\t\t\t}\n\t\t\t\tcout<<ans<<endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tfor(int i=1;i<=n;i++)\n\t\t\ta[i]=0;\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1649490631,
        "uid": 253738,
        "name": "\u542c\u53d6MLE\u58f0\u4e00\u7247",
        "ccfLevel": 7,
        "title": "CF1665C Tree Infection \u9898\u89e3"
    },
    {
        "content": "[\u53ef\u80fd\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/jiangtaizhe001/p/16126094.html)\n\n### \u9898\u76ee\u5927\u610f\n\u7ed9\u5b9a\u4e00\u68f5\u6709\u6839\u6811\uff0c\u6bcf\u79d2\u949f\u53ef\u4ee5\u5b8c\u6210\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\n- \u6ce8\u5165\u4e00\u4e2a\u8282\u70b9\uff0c\u4ece\u800c\u611f\u67d3\u8fd9\u68f5\u6811\u7684\u8fd9\u4e2a\u8282\u70b9\u3002\n- \u5982\u679c\u4e00\u4e2a\u8282\u70b9\u81f3\u5c11\u6709\u4e00\u4e2a\u513f\u5b50\u8282\u70b9\u88ab\u611f\u67d3\uff08\u5728\u4e0a\u4e2a\u64cd\u4f5c\u4e4b\u524d\uff09\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8282\u70b9\u7684\u53e6\u4e00\u4e2a\u513f\u5b50\u8282\u70b9\u4f1a\u88ab\u4f20\u67d3\u3002  \n\n\u73b0\u5728\u6c42\u611f\u67d3\u6240\u6709\u8282\u70b9\u7684\u6700\u5c11\u9700\u8981\u51e0\u79d2\u3002\u6811\u7684\u8282\u70b9\u6570 $n\\le 10^5$\u3002\n\n### \u9898\u76ee\u89e3\u6790\n\u663e\u7136\u7b54\u6848\u53ea\u548c\u6bcf\u4e2a\u8282\u70b9\u7684\u513f\u5b50\u6570\u91cf\u6709\u5173\u3002  \n\u6211\u4eec\u53ef\u4ee5\u5f00\u4e00\u4e2a\u6876\u8bb0\u5f55\u4e0b\u6bcf\u4e2a\u8282\u70b9\u7684\u513f\u5b50\u6570\u91cf\uff0c\u4f46\u662f\u6ce8\u610f\u4e0d\u8981\u5fd8\u8bb0**\u52a0\u4e0a\u6839**\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u6211\u4eec\u9700\u8981\u5148\u4fdd\u8bc1\u6bcf\u4e2a\u8282\u70b9\u7684\u513f\u5b50\u90fd\u6709\u4e00\u4e2a\u88ab\u611f\u67d3\uff0c\u8fd9\u6837\u6bcf\u79d2\u949f\u9664\u4e86\u88ab\u6ce8\u5165\u5c31\u80fd\u611f\u67d3\u66f4\u591a\u7684\u8282\u70b9\u3002\u663e\u7136\u5728\u6ce8\u5165\u7684\u65f6\u5019\u6211\u4eec\u4f18\u5148\u6ce8\u5165\u8282\u70b9\u6570\u66f4\u591a\u7684\u8282\u70b9\uff0c\u8fd9\u6837\u5728\u6ce8\u5165\u7684\u8fc7\u7a0b\u4e2d\u4e5f\u80fd\u4f20\u67d3\u5230\u66f4\u591a\u7684\u8282\u70b9\u3002  \n\u5f53\u6240\u6709\u8282\u70b9\u90fd\u6709\u4e00\u4e2a\u513f\u5b50\u88ab\u611f\u67d3\u4e4b\u540e\uff0c\u663e\u7136\u6211\u4eec\u9700\u8981\u6ce8\u5165\u6ca1\u6709\u88ab\u611f\u67d3\u7684\u513f\u5b50\u8282\u70b9\u6570\u6700\u591a\u7684\u8282\u70b9\u7684\u4e00\u4e2a\u513f\u5b50\u3002\u5e76\u4e14\u4fdd\u6301\u4f20\u67d3\u5176\u4ed6\u8282\u70b9\u3002  \n\n\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u5806\u6765\u7ef4\u62a4\u6700\u5927\u503c\uff0c\u540c\u65f6\u4f20\u67d3\u7684\u8282\u70b9\u6211\u4eec\u53ef\u4ee5\u7528\u61d2\u60f0\u6807\u8bb0\u3002\n\n\u7b97\u6cd5\u590d\u6742\u5ea6 $O(n \\log n)$\n\n\u4ee3\u7801\uff1a\n```cpp\nint n,x,ans,tmp,cnt,son[maxn];\npriority_queue<int> a,b,E;\nvoid work(){\n\tn=read(); int i; for(i=1;i<=n;i++) son[i]=0; for(i=2;i<=n;i++) x=read(),son[x]++;\n\ta=b=E; ans=0; cnt=1; for(i=1;i<=n;i++) if(son[i]) a.push(son[i]),cnt++; a.push(1);//\u52a0\u8fdb\u53bb\u76841\u662f\u6839\n\ttmp=cnt; while(!a.empty()){ cnt--; x=a.top(); a.pop(); b.push(x-cnt-1); }\n\twhile(b.top()>ans){ x=b.top(); b.pop(); b.push(x-1); ans++; }\n\tprint(ans+tmp),pc('\\n'); return;\n}\n```",
        "postTime": 1649575823,
        "uid": 215042,
        "name": "jiangtaizhe001",
        "ccfLevel": 7,
        "title": "CF1665C Tree Infection \u9898\u89e3"
    },
    {
        "content": "### $\\text{Difficulty : 1600}$\n---\n\u65e5\u5e38\u8bfb\u9519\u9898\u3002\n\n---\n### \u89e3\u9898\u601d\u8def\uff1a\n\n\u6ce8\u610f\u9898\u76ee\u8981\u6c42\u7684\u662f\u5b50\u8282\u70b9\u800c\u4e0d\u662f\u5b50\u6811\u3002\u4e5f\u5c31\u662f\u8bf4\u6bcf\u4e00\u4e2a\u70b9\u7684\u5b50\u8282\u70b9\u548c\u5176\u5b83\u7684\u6240\u6709\u70b9\u90fd\u662f\u5272\u88c2\u5f00\u7684\u3002\u53ef\u4ee5\u5148\u5c06\u6240\u6709\u7684\u70b9\u7684\u5b50\u8282\u70b9\u7684\u6570\u91cf\u9884\u5904\u7406\u51fa\u6765\u3002\n\n----\n\u7136\u540e\u95ee\u9898\u4e5f\u5c31\u8f6c\u5316\u6210\u4e00\u4e9b\u4e92\u76f8\u72ec\u7acb\u7684\u96c6\u5408\uff0c\u6bcf\u4e00\u4e2a\u96c6\u5408\u4e2d\u5982\u679c\u5b58\u5728\u88ab\u6807\u8bb0\u7684\u70b9\u5c31\u80fd\u5728\u6bcf\u4e00\u4e2a\u5355\u4f4d\u65f6\u95f4\u5185\u62d3\u5c55\u4e00\u4e2a\u70b9\u3002\u6bcf\u4e00\u4e2a\u5355\u4f4d\u65f6\u95f4\u5185\u53ef\u4ee5\u5bf9\u4e00\u4e2a\u70b9\u8fdb\u884c\u6807\u8bb0\u3002\n\n\u5bf9\u4e8e\u8f6c\u5316\u540e\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u53d1\u73b0\u81f3\u5c11\u8981\u5bf9\u6240\u6709\u7684\u96c6\u5408\u8fdb\u884c\u4e00\u6b21\u6807\u8bb0\uff0c\u53ef\u4ee5\u5148\u5c06\u8fd9\u4e00\u90e8\u5206\u62ff\u51fa\u6765\u3002\u7136\u540e\u8003\u8651\u5bf9\u4e8e\u4e00\u4e9b\u96c6\u5408\u8fdb\u884c\u989d\u5916\u7684\u6807\u8bb0\u4ee5\u5728\u6700\u77ed\u7684\u65f6\u95f4\u5185\u8ba9\u6240\u6709\u7684\u70b9\u88ab\u6807\u8bb0\u3002\n\n---\n\u7136\u540e\u8fdb\u884c\u4e8c\u5206\uff0c\u4e8c\u5206\u51fa\u9700\u8981\u989d\u5916\u8fdb\u884c\u7684\u6807\u8bb0\u6b21\u6570\uff0c\u5728\u8fd9\u4e2a\u65f6\u95f4\u5185\u4f18\u5148\u8fdb\u884c\u8d2a\u5fc3\u3002\u4f18\u5148\u6807\u8bb0\u96c6\u5408\u5185\u5143\u7d20\u8f83\u591a\u7684\u96c6\u5408\uff0c\u8bc1\u660e\u53ef\u4ee5\u76f4\u63a5\u7528\u4ea4\u6362\u7684\u65b9\u6cd5\u3002\n\n\u603b\u590d\u6742\u5ea6\u4e3a $O(n\\log n)$\u3002\n\n---\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<algorithm>\nusing namespace std;\nint T,n,s[200005],x,ans,l,r,mid;\nvector <int> v;\nbool check(int num){\n\tint cnt=0;\n\tfor(int i=0;i<v.size();i++){\n\t\tcnt+=max(0,v[i]-num-1-i);\n\t}\n\tif(cnt>num)return 0;\n\treturn 1;\n}\nint main(){\n\tscanf(\"%d\",&T);\n\twhile(T--){\n\t\tscanf(\"%d\",&n);\n\t\tfor(int i=1;i<=n;i++)s[i]=0;\n\t\tfor(int i=2;i<=n;i++){\n\t\t\tscanf(\"%d\",&x);\n\t\t\ts[x]++;\n\t\t}\n\t\tv.clear();\n\t\tv.push_back(1);\n\t\tfor(int i=1;i<=n;i++)\n\t\tif(s[i]!=0)v.push_back(s[i]);\n\t\t\n\t\tsort(v.begin(),v.end());\n\t\tl=0;r=n+1;ans=0;\n\t\twhile(l<=r){\n\t\t\tmid=l+r>>1;\n\t\t\tif(check(mid))r=mid-1,ans=mid;\n\t\t\telse l=mid+1;\n\t\t}\n\t\tprintf(\"%d\\n\",ans+v.size());\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1651417144,
        "uid": 223559,
        "name": "qxp101",
        "ccfLevel": 6,
        "title": "CF1665C Tree Infection \u9898\u89e3"
    }
]