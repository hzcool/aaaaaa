[
    {
        "content": "\u5eb7\u4e86\u5eb7\u552f\u4e00\u7684\u9898\u89e3\uff0c\u8bf4\u6ca1\u5fc5\u8981\u7528DP\uff0c\u6211\u5c31\u7ed9\u51faDP\u7684\u89e3\u6cd5\u3002\n\n~~\u8fd9\u5176\u5b9e\u662f\u9053\u6c34\u9898~~ \uff0c\u552f\u4e00\u7684\u5751\u662f\u6709\u53ef\u80fd\u697c\u4e0a\u6ca1\u6709\u5f00\u7684\u706f\uff0c\u5751\u4e86\u6211\u4eec\u673a\u623f\u7684\u4e00\u5806\u4eba\uff08 WA on test 4 \uff09\uff0c\u5269\u4e0b\u7684\u5c31\u662fDP\u3002\n\n\u6211\u4eec\u7528 $a[n][0]$,\u8868\u793a\u7b2c $n$ \u5c42\u7684\u7b2c\u4e00\u4e2a\u623f\u95f4\uff0c\u7528 $a[n][1]$\uff0c\u8868\u793a\u7b2c $n$ \u5c42\u7684\u6700\u540e\u4e00\u4e2a\u623f\u95f4\u3002\n\n\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e2a\u6536\u96c6\u578b\u7684\u5199\u6cd5\u3002\n\n\u6240\u4ee5\u53ef\u5f97\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a $dp[i][j] = \\min(dp[i + 1][!j] + m + 2, dp[i + 1][j] + a[i + 1][!j] \\times 2 + 1)$ \u5bf9\u4e8e $j$,\u8868\u793a\u7b2c $i$ \u5c42\u7684\u697c\u68af\u53e3\uff0c\u53ef\u4ee5\u4ece\u4e0b\u5c42\uff08$i+1$ \u5c42\uff09\u7684\u53e6\u4e00\u8fb9\u7684\u697c\u68af\u53e3\u8d70\u6765\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4ece\u540c\u8fb9\u8d70\u4e0a\u6765\uff0c\u6700\u540e\u53d6\u6700\u5c0f\u503c\u3002\n\n\u6700\u540e\u9644\u4e0a\u4ee3\u7801\u3002\n```cpp\n#include <iostream>\nusing namespace std;\nconst int Maxn = 20;\nint a[Maxn][2], dp[Maxn][2], n, m, s;\nchar c;\nint main() {\n  cin >> n >> m;\n  for (int i = 1; i <= n; i++) {\n    for (int j = 0; j <= m + 1; j++) {\n      cin >> c;\n      if (c == '1') {\n        a[i][0] = max(a[i][0], m + 1 - j), a[i][1] = max(a[i][1], j);//\u6c42\u51fa\u6700\u5de6\u8fb9\u548c\u6700\u53f3\u8fb9\n      }\n    }\n  }\n  dp[n][1] = m + 1;//\u521d\u59cb\u5316\uff08\u5e94\u4e3a\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\u4ece\u521d\u59cb\u70b9\u8d70\u5230\u6700\u53f3\u8fb9\u662f $m+1$ \u6b65\uff09\n  for (int i = n - 1; i >= 1; i--) {\n    for (int j = 0; j <= 1; j++) {\n      dp[i][j] = min(dp[i + 1][!j] + m + 2, dp[i + 1][j] + a[i + 1][!j] * 2 + 1);//\u6c42\u503c\n    }\n  }\n  for (s = 1; s < n && !a[s][0]; s++) {\n  }//\u8fc7\u6ee4\u6ca1\u706f\u7684\u90a3\u51e0\u5c42\n  cout << min(dp[s][0] + a[s][1], dp[s][1] + a[s][0]);\n  return 0;\n}\n```",
        "postTime": 1671176709,
        "uid": 661494,
        "name": "mouth_boy",
        "ccfLevel": 4,
        "title": "CF812B\u9898\u89e3"
    },
    {
        "content": "## \u672c\u9898\u4f7f\u7528\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u5373\u53ef\u3002\n\n### \u9898\u5916\u8bdd\uff1a\n\nAC \u540e\u770b\u5230\u5f88\u591a\u4eba\u4f7f\u7528\u4e86 DP \uff0c\u4f46\u5bf9\u4e8e\u8fd9\u4e00\u9898\u6765\u8bf4**\u5b8c\u5168\u6ca1\u6709\u5fc5\u8981**\uff0c\u4e0d\u4ec5\u589e\u52a0\u4e86\u65f6\u95f4\u590d\u6742\u5ea6\u8fd8\u66f4\u96be\u53bb\u60f3\u3002\n\n### \u601d\u8def\uff1a\n\n\u5bf9\u4e8e DFS \u5927\u5bb6\u7b2c\u4e00\u65f6\u95f4\u80af\u5b9a\u4f1a\u60f3\u5230\u6309\u7167\u6bcf\u4e00\u4e2a\u623f\u95f4\uff0c\u679a\u4e3e\u5411\u5de6\u623f\u95f4\u6216\u8005\u5411\u53f3\u623f\u95f4\u904d\u5386\uff0c\u9047\u5230\u68af\u5b50\u5c31\u4e0a\u53bb\uff0c\u4f46\u662f\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u5b8c\u5168\u8fc7\u4e0d\u4e86\u3002\u6240\u4ee5\u6211\u4eec\u8003\u8651**\u679a\u4e3e\u6bcf\u4e00\u5c42**\u3002\u5bf9\u4e8e\u6bcf\u4e00\u5c42\uff0c\u6211\u4eec\u6709\u4e24\u79cd\u9009\u62e9\uff0c\u4e00\u662f\u9009\u62e9\u5173\u95ed\u672c\u5c42\u7684\u6240\u6709\u7684\u706f\u7136\u540e**\u56de\u5230\u539f\u6765\u7684\u697c\u68af**\uff0c\u4e8c\u662f\u5173\u95ed\u672c\u5c42\u7684\u6240\u6709\u706f\u518d**\u5230\u5bf9\u9762\u7684\u697c\u68af**\u3002\u7136\u540e\u518d\u82b1 $1$ \u7684\u5355\u4f4d\u4e0a\u697c\u3002\u4f46\u662f\u5bf9\u4e8e\u8fd9\u4e24\u79cd\u4e0d\u540c\u7684\u60c5\u51b5\uff0c\u8fd8\u9700\u8981\u518d\u5206\u7c7b\u8ba8\u8bba\u8d77\u59cb\u4f4d\u7f6e\uff1a**\u4eba\u5728\u5de6\u8fb9\u697c\u68af\u8fd8\u662f\u5728\u53f3\u8fb9\u697c\u68af**\u3002\n\n### \u7ec6\u8282\n\n\u6b64\u9898\u7740\u91cd\u8003\u5bdf\u7ec6\u8282\uff0c\u56e0\u6b64\uff0c\u4f1a\u6709\u5f88\u591a\u5b9e\u73b0\u7ec6\u8282\u9700\u8981\u6ce8\u610f\u3002\n\n- \u5bf9\u4e8e\u6bcf\u6b21\u5173\u6389\u4e00\u5c42\u7684\u706f\uff0c\u5176\u5b9e\u6c42\u7684\u5c31\u662f\u5173\u6389\u6700\u5de6\u8fb9\uff08\u53f3\u8fb9\uff09\u82b1\u8d39\u7684\u8def\u7a0b\uff08\u81f3\u4e8e\u5de6\u8fb9\u8fd8\u662f\u53f3\u8fb9\u53d6\u51b3\u4e8e\u4f60\u6240\u5728\u7684\u697c\u68af\u4f4d\u7f6e\uff09\u3002\u6240\u4ee5\u9700\u8981\u5728\u8f93\u5165\u7684\u65f6\u5019**\u7edf\u8ba1\u6bcf\u4e00\u5c42\u7684\u6700\u5de6\u8fb9\u548c\u6700\u53f3\u8fb9\u7684\u706f\u7684\u4f4d\u7f6e**\u3002\n\n- \u679a\u4e3e\u6bcf\u79cd\u60c5\u51b5\uff1a\n\n\t- \u5982\u679c\u5904\u4e8e\u5de6\u8fb9\u697c\u68af\u5e76\u56de\u6765\uff0c**\u82b1\u8d39\u5c31\u7b49\u4e8e** $2\\times$ **\u6700\u53f3\u8fb9\u7684\u697c\u68af\u4f4d\u7f6e** $+1$ \u3002\n   - \u5982\u679c\u5904\u4e8e\u5de6\u8fb9\u697c\u68af\u76f4\u63a5\u5230\u53f3\u8fb9\u697c\u68af\uff0c**\u82b1\u8d39\u5c31\u7b49\u4e8e** $m+1$ \u3002\n   \n   - \u5982\u679c\u5904\u4e8e\u53f3\u8fb9\u697c\u68af\u5e76\u56de\u6765\uff0c**\u82b1\u8d39\u5c31\u7b49\u4e8e** $2\\times m-$  **\u6700\u5de6\u8fb9\u7684\u697c\u68af\u4f4d\u7f6e** $+1$ \u3002\n   - \u5982\u679c\u5904\u4e8e\u53f3\u8fb9\u697c\u68af\u76f4\u63a5\u5230\u5de6\u8fb9\u697c\u68af\uff0c**\u82b1\u8d39\u5c31\u7b49\u4e8e** $m+1$ \u3002\n   \n   - \u522b\u5fd8\u4e86 $+1 $ \uff0c\u4e5f\u5c31\u662f**\u4e0a\u697c\u82b1\u8d39\u7684\u65f6\u95f4**\u3002\n   \n- \u6700\u540e\u8003\u8651\u8fb9\u754c\uff0c\u5728\u8f93\u5165\u7684\u65f6\u5019**\u7edf\u8ba1\u6700\u4e0a\u5c42\u7684\u706f\u5728\u7b2c\u51e0\u5c42**\uff0c\u5982\u679c\u6ca1\u6709\u7edf\u8ba1\u5230\u706f\uff0c\u76f4\u63a5\u8f93\u51fa $0$ \u5373\u53ef\u3002\u5bf9\u4e8e\u7edf\u8ba1\u51fa\u6765\u7684\u6700\u9ad8\u5c42\u706f\uff0c\u6211\u4eec**\u53ea\u9700\u8981\u5173\u5230\u6700\u9ad8\u5c42**\uff0c\u65e0\u9700\u518d\u4e0a\u697c\u4e86\uff0c\u8fd9\u65f6\u5019\u5c31\u53ef\u4ee5\u76f4\u63a5\u7edf\u8ba1\u6700\u5c0f\u503c\u3002\n\n- \u8fd8\u6709\u4e00\u79cd\u7279\u6b8a\u7684\u60c5\u51b5\u662f\u67d0\u5c42\uff08**\u4f46\u4e0d\u662f\u6700\u9ad8\u5c42**\uff09\u6ca1\u6709\u706f\u9700\u8981\u5173\uff0c**\u76f4\u63a5\u82b1\u8d39** $ 1 $ **\u5355\u4f4d\u4e0a\u697c\u5373\u53ef**\u3002\n   \n\n## code\uff1a\n\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\ninline int read(){\n   int s=0,w=1;\n   char ch=getchar();\n   while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n   while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n   return s*w;\n}\nstruct node{\n\tint l,r;\n};\nbool a[205][205];\nnode lt[25];//\u7edf\u8ba1\u6bcf\u5c42\u6700\u5de6\uff08\u53f3\uff09\u7684\u697c\u68af\u3002\nint n,m,h=-1,ans=1e9+10;\nvoid dfs(int flr,int stp,bool k){\n\tif(flr==h){//\u5230\u8fbe\u9700\u8981\u5173\u706f\u7684\u6700\u9ad8\u5c42\u3002\n\t\tif(k==0) stp+=lt[flr].r;\n\t\tans=min(ans,stp);\n\t\treturn;\n\t}\n\telse if(lt[flr].l==-1&&lt[flr].r==-1){//\u672c\u5c42\u6ca1\u6709\u706f\u9700\u8981\u5173\u3002\n\t\tdfs(flr-1,stp+1,k);\n\t\treturn;\n\t} \n\telse if(k==0){//\u4eba\u5728\u5de6\u8fb9\u697c\u68af\u3002\n\t\tdfs(flr-1,stp+(2*lt[flr].r)+1,0);\n\t\tdfs(flr-1,stp+m+1,1);\n\t} \n\telse if(k==1){//\u4eba\u5728\u53f3\u8fb9\u697c\u68af\u3002\n\t\tdfs(flr-1,stp+(2*(m-lt[flr].l))+1,1);\n\t\tdfs(flr-1,stp+m+1,0);\n\t} \n}\nint main(){\n\tn=read(),m=read();\n\tm++;\n\tfor(int i=1;i<=20;i++) lt[i].l=lt[i].r=-1;\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=0;j<=m;j++){\n\t\t\tchar c;\n\t\t\tcin>>c;\n\t\t\ta[i][j]=c-'0';\n\t\t}\n\t\tfor(int j=0;j<=m;j++){//\u7edf\u8ba1\u6bcf\u5c42\u6700\u5de6\uff08\u53f3\uff09\u7684\u697c\u68af\u3002\n\t\t\tint k=m-j;\n\t\t\tif(a[i][j]&&lt[i].l==-1) lt[i].l=j;\n\t\t\tif(a[i][k]&&lt[i].r==-1) lt[i].r=k;\n\t\t\tif(lt[i].l!=-1&&lt[i].r!=-1) break;\n\t\t}\n\t\tif(h==-1&&(lt[i].l!=-1||lt[i].r!=-1)) h=i;//\u7edf\u8ba1\u6700\u9ad8\u5c42\u9700\u8981\u5173\u7684\u706f\u3002\n\t}\n\tif(h==-1){\n\t\tcout<<0;\n\t\treturn 0;\n\t} \n\tdfs(n,0,0);//\u521d\u59cb\u4f4d\u7f6e\u4e3a n \uff0c\u6b65\u6570\u4e3a 0 \uff0c\u5728\u5de6\u8fb9\u3002\n\tcout<<ans;\n    return 0;\n}\n```\n",
        "postTime": 1629629877,
        "uid": 247220,
        "name": "StarryWander",
        "ccfLevel": 4,
        "title": "CF812B Sagheer, the Hausmeister"
    }
]