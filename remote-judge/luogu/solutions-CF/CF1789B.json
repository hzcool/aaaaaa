[
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684 01 \u4e32 $s$\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9**\u4e00\u4e2a**\u533a\u95f4\uff0c\u5c06\u533a\u95f4\u5185\u7684\u6240\u6709 0 \u53d8\u6210 1\uff0c\u6240\u6709 1 \u53d8\u6210 0\u3002\u95ee\u80fd\u4e0d\u80fd\u901a\u8fc7\u4ec5\u8fd9\u4e00\u6b21\u7684\u64cd\u4f5c\u5c06 $s$ \u53d8\u4e3a\u4e00\u4e2a\u56de\u6587\u4e32\u3002\n\n------------\n## \u601d\u8def\n\n\u9996\u5148 $s$ \u7684\u957f\u5ea6\u786e\u5b9a\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u77e5\u9053\u4ed6\u7684\u56de\u6587\u4e2d\u5fc3\u3002\u6211\u4eec\u53ea\u8003\u8651\u56de\u6587\u4e2d\u5fc3\u7684\u53f3\u4fa7\uff1a\n\n- \u5982\u679c\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u5b57\u7b26\u4e0e\u5de6\u4fa7\u76f8\u5e94\u4f4d\u7f6e\u4e0a\u7684\u5b57\u7b26\u5339\u914d\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4f4d\u7f6e\u53d6\u53cd\u4e4b\u540e\u4e00\u5b9a\u4e0d\u5339\u914d\uff1b\n\n- \u5982\u679c\u60f3\u8981\u5de6\u4fa7\u4e0e\u53f3\u4fa7\u5b8c\u5168\u5339\u914d\uff0c\u90a3\u4e48\u53f3\u4fa7\u7684\u6240\u6709\u4e0d\u5339\u914d\u5b57\u7b26\u5fc5\u987b\u90fd\u88ab\u53d6\u53cd\u3002\n\n\u7efc\u4e0a\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230 $s$ \u5bf9\u79f0\u4e2d\u5fc3\u53f3\u4fa7\u7684\u4e00\u4e2a\u8fde\u7eed\u533a\u95f4\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u533a\u95f4\u5305\u62ec\u4e86\u6240\u6709\u4e0d\u5339\u914d\u7684\u4f4d\u7f6e\uff0c\u4e0d\u5305\u62ec\u4efb\u4f55\u5df2\u7ecf\u5339\u914d\u7684\u4f4d\u7f6e\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u5224\u65ad\u6240\u6709\u4e0d\u5339\u914d\u7684\u4f4d\u7f6e\u662f\u4e0d\u662f\u8fde\u7eed\u7684\u3002\n\n\u63d0\u4f9b\u4e00\u79cd\u5b9e\u73b0\u601d\u8def\uff1a\u4ece\u6700\u53f3\u4fa7\u5f00\u59cb\uff0c\u627e\u5230\u4e00\u4e2a**\u6781\u957f\u8fde\u7eed\u7684**\u4e0d\u5339\u914d\u7684\u4e32\uff0c\u5c06\u5176\u53d6\u53cd\uff0c\u7136\u540e\u68c0\u67e5\u6574\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u56de\u6587\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nbool pd() {\n\tfor (int i = 1; i <= mid; i++) if (ch[i] != ch[n - i + 1]) return 0;\n\treturn 1;\n}//\u5224\u65ad\u56de\u6587\n\nbool sol() {\n\tn = read(), mid = n >> 1, nowres = n;\n\tscanf(\"%s\", ch + 1);\n\twhile (ch[nowres] == ch[n - nowres + 1] && nowres > mid) nowres--;\n\tif (nowres == mid) return 1;\n\tmxid = nowres;\n\twhile (ch[nowres] != ch[n - nowres + 1] && nowres > mid) nowres--;\n\tfor (int i = nowres + 1; i <= mxid; i++) ch[i] = (ch[i] == '0' ? '1' : '0');\n\treturn pd();\n}\n\nsigned main() {\n\tt = read();\n\twhile (t--) puts(sol() ? \"YES\" : \"NO\");\n\treturn Strelitzia_;\n}\n```",
        "postTime": 1677379883,
        "uid": 676638,
        "name": "Strelitzia_",
        "ccfLevel": 4,
        "title": "CF1789B \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7684\u9898\u610f\u662f\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u53d8\u6210\u4e00\u4e2a\u56de\u6587\u4e32\uff0c\u8fd9\u4e2a\u4e32\u53ea\u6709 0 \u548c  1 \u4e24\u4e2a\u5b57\u7b26\uff0c\u5e76\u4e14\u53ef\u4ee5\u6311\u9009\u4e00\u6bb5\u533a\u95f4\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u533a\u95f4\u91cc\u7684\u6240\u6709\u6570\u5012\u8fc7\u6765\uff0c0 \u53d8\u6210 1\uff0c1 \u53d8\u6210 0\u3002\n\n\u6211\u4eec\u7528\u4e24\u4e2a\u6307\u9488\u4ece\u4e24\u7aef\u5411\u4e2d\u95f4\u626b\uff0c\u5982\u679c\u4e24\u7aef\u4e0d\u540c\uff0c\u8bf4\u660e\u5176\u4e2d\u4e00\u8fb9\u80af\u5b9a\u8981\u6539\uff0c\u56e0\u4e3a\u53ea\u80fd\u6539\u4e00\u6b21\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u4e00\u76f4\u6539\u5de6\u8fb9\u7684\u5c31\u597d\u4e86\u3002\n\n\u5982\u679c\u53d1\u73b0\u6709\u4e24\u4e2a\u8981\u6539\u7684\u5730\u65b9\uff0c\u5e76\u4e14\u8fd9\u4e24\u4e2a\u5730\u65b9\u4e2d\u95f4\u6709\u4e0d\u9700\u8981\u6539\u7684\uff0c\u8bf4\u660e\u533a\u95f4\u65ad\u5f00\u4e86\uff0c\u81f3\u5c11\u8981\u6539\u4e24\u6b21\uff0c\u5c31\u8bf4\u660e\u4e0d\u80fd\u53d8\u6210\u56de\u6587\u4e32\u3002\n\n\u5982\u679c\u533a\u95f4\u6ca1\u6709\u65ad\u5f00\uff0c\u8bf4\u660e\u5b83\u53ef\u4ee5\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$\u3002\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define _cin(i,n) for(int i=0;i<n;i++)\n#define _for(i,a,b) for(int i=a;i<=b;i++)\n#define for_(i,a,b) for(int i=a;i>=b;i--)\n#define cin_(a,n) for(int i=0;i<n;i++){int x;cin>>x;a.push_back(x);}\nconst int inf=~0U>>1;\nconst int linf=~0ULL>>1;\nconst int mod=1e9+7;\nconst int gmod=998244353,g=3,invg=332748118;\nconst int N=2e5+10;\nint _,n,flag1,flag;\nstring a; \nvoid work(){\n\tcin>>n>>a;flag=flag1=0;\n\tfor(int i=0;i<(n>>1);i++){\n\t\tif(a[i]!=a[n-i-1]){\n\t\t\tif(flag&&flag1){\n\t\t\t\tcout<<\"No\"<<endl;\n\t\t\t\treturn ;\n\t\t\t}\n\t\t\tflag=1;\n\t\t}\n\t\telse if(flag) flag1=1;\n\t}\n\tcout<<\"Yes\"<<endl;\n}\nmain(){\n\tcin>>_;\n\twhile(_--) work();\n\treturn 0;\n} \n```\n",
        "postTime": 1677411235,
        "uid": 783170,
        "name": "liaiyang",
        "ccfLevel": 0,
        "title": "CF1789B\u9898\u89e3"
    },
    {
        "content": "## \u7b80\u8981\u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684 01 \u5b57\u7b26\u4e32 $s$\uff0c\u7b2c $i$ \u4e2a\u5b57\u7b26\u4e3a $s_i$\u3002\n\n\u4f60\u53ef\u4ee5\u4f7f\u7528\u4e00\u6b21\u4e14\u4ec5\u53ef\u4ee5\u4f7f\u7528\u4e00\u6b21\u64cd\u4f5c\uff0c\u4f7f\u5f97\u533a\u95f4 $[l,r]$ \u7684\u5b57\u7b26\u53d6\u53cd\uff0c\u5373\u5c06 $\\texttt{0}$ \u53d8\u4e3a $\\texttt{1}$\uff0c$\\texttt{1}$ \u53d8\u4e3a $\\texttt{0}$\u3002\u5982\u679c\u5728\u4f7f\u7528\u64cd\u4f5c\u540e\u53ef\u4ee5\u4f7f\u5f97\u5b57\u7b26\u4e32\u53d8\u4e3a\u56de\u6587\u8f93\u51fa `Yes`\uff0c\u5426\u5219\u8f93\u51fa `No`\u3002\n\n## \u601d\u8def\n\n\u9996\u5148\u5982\u679c $n$ \u4e3a\u5947\u6570\uff0c\u6b63\u4e2d\u95f4\u7684\u5b57\u7b26\u662f\u53ef\u4ee5\u4fee\u6539\u4e5f\u53ef\u4ee5\u4e0d\u4fee\u6539\u7684\u3002\n\n\u5bf9\u4e8e\u4e00\u5bf9\u5bf9\u5e94\u7684\u5b57\u7b26\uff08\u5373\uff0c\u7f16\u53f7\u4e4b\u548c\u4e3a $n+1$\uff09\uff0c\u82e5\u4e0d\u540c\u663e\u7136\u662f\u53ea\u9700\u8981\u4fee\u6539\u4e00\u4e2a\u7684\uff0c\u4e0d\u53ef\u80fd\u4e24\u4e2a\u90fd\u4fee\u6539\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u5f97\u5230\u8fd9\u6837\u4e00\u4e2a\u601d\u8def\uff1a\u5224\u65ad\u524d $\\left\\lfloor\\dfrac{n}{2}\\right\\rfloor$ \u4e2a\u5b57\u7b26\uff0c\u5982\u679c\u8fd9\u4e2a\u5b57\u7b26\u548c\u4e0e\u5b83\u914d\u5bf9\u7684\u5b57\u7b26\u76f8\u540c\u5219\u6254\u6389\u4e0d\u7ba1\uff0c\u4e0d\u540c\u5219\u5c06\u8fd9\u4e2a\u5b57\u7b26\u6807\u8bb0\u4e00\u4e0b\u3002\u6700\u540e\u5224\u65ad\u9700\u8981\u4fee\u6539\u7684\u6807\u8bb0\u662f\u5426\u4e3a\u8fde\u7eed\u7684\u533a\u95f4\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n)$\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<vector>\n#include<algorithm>\nusing namespace std;\n#define ll long long\n#define il inline\n#define N 100005\nil ll read() {\n\tll x=0,f=1;char c=getchar();\n\twhile(c<'0'||c>'9') {if(c=='-') {f=-1;} c=getchar();}\n\twhile(c>='0'&&c<='9') {x=(x<<3)+(x<<1)+(c^48);c=getchar();}\n\treturn x*f;\n}\nint t,n,tag[N];\nchar s[N];\nint main() {\n\tt=read();\n\twhile(t--) {\n\t\tn=read();\n\t\tscanf(\"%s\",s+1);\n\t\tfor(int i=1;i<=n;i++) tag[i]=0;\n\t\tfor(int i=1;i<=n/2;i++) if(s[i]!=s[n-i+1]) tag[i]=1;\n\t\tint cnt=0;\n\t\tfor(int i=2;i<=n;i++) if(tag[i]!=tag[i-1]) cnt++;\n\t\tif(cnt<=2) printf(\"Yes\\n\");\n\t\telse printf(\"No\\n\");\n\t}\n\treturn 0;\n}\n```\n\n[\u8d5b\u65f6 AC \u8bb0\u5f55](https://codeforces.com/contest/1789/submission/195027432)",
        "postTime": 1677398638,
        "uid": 536743,
        "name": "\u79e6\u5c4e\u7687",
        "ccfLevel": 0,
        "title": "CF1789B Serval and Inversion Magic \u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u5efa\u8bae\u6b64\u9898\u8bc4\u6a59\uff0c\u6807\u7b7e\u5e94\u8be5\u662f\u6570\u5b66\u5427\uff0c\u8d5b\u540e\u8865\u7684\u9898\u3002$A$ \u9898\u7adf\u7136\u4e00\u773c\u8ba9\u6211\u6123\u4f4f\u4e86\uff0c\u7136\u540e $B$ \u9898\u4e00\u773c\u8ba9\u6211\u79d2\u4e86......\n\n# solution\n\u7b80\u8981\u9898\u610f\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u95ee\u662f\u5426\u80fd\u901a\u8fc7\u4e00\u6b21\u65cb\u8f6c\u67d0\u4e2a\u533a\u95f4\u7684\u64cd\u4f5c\u4f7f\u5f97\u539f\u4e32\u53d8\u6210\u56de\u6587\u7684\u3002\n\n~~\u6211\u53ea\u80fd\u8bf4\u6837\u4f8b\u592a\u8fc7\u826f\u5fc3\u3002~~ \u5148\u8bf4\u7ed3\u8bba\uff1a\u4ece\u5b57\u7b26\u4e32\u4e2d\u95f4\u90e8\u5206\u5411\u4e24\u7aef\u6269\u5c55\uff0c\u5f53\u4e14\u4ec5\u5f53**\u6709\u8fde\u7eed\u4e00\u6bb5**\u4e24\u8fb9\u4e0d\u76f8\u7b49\u6216\u8005\u5168\u662f\u76f8\u7b49\u7684\u60c5\u51b5\u4e0b\uff0c\u7b54\u6848\u662f\u5408\u6cd5\u7684\u3002\n\n\u8bc1\u660e\u663e\u7136\uff1a\u56e0\u4e3a\u53ea\u6709\u4e00\u6b21\u64cd\u4f5c\u4e14\u7ffb\u8f6c\u7684\u662f\u8fde\u7eed\u533a\u95f4\uff0c\u90a3\u4e48\u4e0d\u540c\u7684\u90a3\u4e00\u6bb5\u5fc5\u987b\u662f\u8fde\u7eed\u7684\u624d\u80fd\u5728\u4e00\u6b21\u64cd\u4f5c\u5185\u4f7f\u5f97\u76f8\u7b49\u3002\u5982\u679c\u5b58\u5728\u67d0\u4e00\u6bb5\u4e0d\u540c\uff0c\u7a81\u7136\u6765\u4e86\u4e2a\u76f8\u540c\u7684\uff0c\u53c8\u6765\u4e86\u4e00\u6bb5\u4e0d\u540c\u7684\u60c5\u51b5\uff0c\u8fd9\u5fc5\u7136\u4e0d\u53ef\u80fd\u5b9e\u73b0\u3002\u6837\u4f8b\u4e09\u662f\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u3002\n\n# code\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define N 200005\nint n,m,i,j,ans,t,flag,la;\nchar s[N];\nint main(){\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tscanf(\"%d\",&n),la=flag=0;\n\t\tscanf(\"%s\",s+1);\n\t\tfor(i=1,j=n;i<=j;i++,j--){\n\t\t\tif(s[i]!=s[j]){\n\t\t\t\tif(la==0) la=i;\n\t\t\t\telse if(i==la+1) la=i;//\u5224\u65ad\u4e0d\u540c\u7684\u662f\u5426\u8fde\u7eed\n\t\t\t\telse{\n\t\t\t\t\tflag=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(flag) printf(\"No\\n\");\n\t\telse printf(\"Yes\\n\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1677397308,
        "uid": 664744,
        "name": "winds888",
        "ccfLevel": 0,
        "title": "CF1789B Serval and Inversion Magic"
    },
    {
        "content": "*[Problem](https://www.luogu.com.cn/problem/CF1789B)*\n\n------------\n## Description\n\n\u6709 $t$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u7ed9\u51fa $n$ \u548c\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684 $\\verb!01!$ \u4e32\uff0c\u8be2\u95ee\u662f\u5426\u53ef\u4ee5\u901a\u8fc7\u4e00\u6b21\u64cd\u4f5c\u4f7f\u5f97\u539f\u4e32\u53d8\u6210\u56de\u6587\u4e32\u3002\n\n\u5b9a\u4e49\u64cd\u4f5c\u5982\u4e0b\uff1a\n\n\u53d6 $[l, r]$ \u533a\u95f4\uff08$1 \\le l, r \\le n$\uff09\uff0c\u4f7f\u5f97\u533a\u95f4\u5185\u6bcf\u4e2a\u5143\u7d20\u53d6\u53cd\u3002\uff08$0$ \u53d8\u6210 $1$\uff0c$1$ \u53d8\u6210 $0$\uff09\n\n------------\n## Solution\n\n\u6570\u636e\u8303\u56f4 $t \\le 10^4, n \\le 10^5$\uff0c\u8003\u8651\u53cc\u6307\u9488\u3002\u4ece\u4e24\u7aef\u5f80\u91cc\u904d\u5386\uff0c\u627e\u4e0d\u540c\u5143\u7d20\u7684\u4e2a\u6570\uff0c\u5b9a\u4e49\u5f53\u524d\u904d\u5386\u5230\u7684\u4e24\u4e2a\u5143\u7d20\u5206\u522b\u4e3a\uff1a$s_i$ \u548c $s_j$\uff0c\u4e0b\u6807\u4ece $1$ \u5f00\u59cb\u3002\n\n- \u5982\u679c $s_i \\neq s_j$\uff0c\u5224\u65ad\u4e4b\u524d\u662f\u5426\u51fa\u73b0\u8fc7\u9700\u8981\u7ffb\u8f6c\u7684\u60c5\u51b5\u3002\u4f8b\u5982\uff1a$\\verb!101110110!$\uff0c\u9996\u5148\u5c06\u533a\u95f4 $[1,2]$ \u7ffb\u8f6c\uff0c\u53d8\u6210 $\\verb!011110110!$\uff0c\u4f46\u662f $s_4$ \u548c $s_6$ \u4e0d\u76f8\u540c\uff0c\u4e5f\u5c31\u662f\u9700\u8981\u7b2c\u4e8c\u6b21\u7ffb\u8f6c\uff0c\u8fd4\u56de $\\verb!No!$\u3002\n\n- \u5982\u679c $s_i = s_j$\uff0c\u7ee7\u7eed\u904d\u5386\u5373\u53ef\u3002\n\n------------\n## Code\n\n**\u8d5b\u65f6 AC \u4ee3\u7801**\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint n;\nstring s;\n\nvoid solve()\n{\n    cin >> n >> s;\n    int len = s.length();\n    bool f = 1;\n    int sum = 0;\n    for (int i = 0, j = len - 1; i < j; i ++, j -- )\n    {\n        if (s[i] != s[j]){if (sum % 2 == 0) sum ++ ;}\n        else {if (sum % 2 == 1)  sum ++ ;}\n        if (sum > 2)   \n        {\n            puts(\"No\");\n            return ;\n        }\n    }\n    puts(\"Yes\");\n    return ;\n}\n\nint main()\n{\n    int T; cin >> T;\n    while (T -- )   solve();\n    return 0;\n}\n```",
        "postTime": 1677378213,
        "uid": 486799,
        "name": "Queue_Hao",
        "ccfLevel": 0,
        "title": "CF1789B \u9898\u89e3"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a $\\text{t}$ \u4e2a\u957f\u5ea6\u4e3a $\\text{n}$ \u7684 $01$ \u4e32\uff0c\u6c42\u5bf9\u4e00\u4e2a\u8fde\u7eed\u533a\u95f4 $\\left[\nl,r \\right]$ \u4e2d\u7684\u4e32\u53cd\u8f6c\u4e00\u6b21\u540e\u7684\uff0c\u8be5 $01$ \u4e32\u662f\u5426\u56de\u6587\u3002\n\n## \u89e3\u9898\u601d\u8def\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u56de\u6587\u4e32\u6ee1\u8db3\u7684\u4e00\u4e2a\u6761\u4ef6\u662f\u5728\u533a\u95f4 $\\left[1,\\left \\lfloor \\frac{n}{2} \\right \\rfloor \\right]$ \u4e2d\u7b2c $i$ \u4f4d\u7f6e\u7684\u5b57\u7b26\u4e0e\u7b2c $n-i+1$ \u4f4d\u7f6e\u7684\u5b57\u7b26\u76f8\u7b49\u5373\u53ef\u3002\n\n\u8981\u60f3\u4e00\u6b21\u53cd\u8f6c\u505a\u5230\u6bcf\u4e00\u4e2a $i$ \u4f4d\u7f6e\u7684\u5b57\u7b26\u4e0e $n-i+1$ \u4f4d\u7f6e\u7684\u5b57\u7b26\u76f8\u7b49\uff0c\u90a3\u539f\u6765\u7684\u4e32\u4e2d $i$ \u4f4d\u7f6e\u7684\u5b57\u7b26\u4e0e $n-i+1$ \u4f4d\u7f6e\u7684\u5b57\u7b26\u4e0d\u76f8\u7b49\u65f6 $i$ \u5fc5\u987b\u662f\u8fde\u7eed\u7684,\u662f\u8fde\u7eed\u7684\u5219\u7b26\u5408\u6761\u4ef6\uff0c\u4e0d\u662f\u8fde\u7eed\u7684\u5c31\u4e0d\u7b26\u5408\u6761\u4ef6\u3002\n\n## code\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e5+5; \nint n,t,sum,ss,flag;\nchar s[N];\nint main()\n{\n\tcin>>t;\n\twhile(t--)\n\t{\n\t\tcin>>n;\n\t\tcin>>s+1;\n\t\tss=sum=0; flag=1;\n\t\tfor(int i=1;i<=(n/2);++i)\n\t\t{\n\t\t\tif(s[i]!=s[n-i+1]) ++sum,ss+=flag;//ss\u8bb0\u5f55\u4e0d\u76f8\u7b49\u65f6\u7684i\u662f\u5426\u662f\u8fde\u7eed\u7684\n\t\t\telse if(ss) flag=0;//\u5982\u679c\u76f8\u7b49\uff0c\u90a3\u4e0d\u76f8\u7b49\u7684i\u5c31\u65ad\u5f00\u4e86\n\t\t}\n\t\tif(ss!=sum) printf(\"No\\n\");\n\t\telse printf(\"Yes\\n\");//\u90fd\u662f\u8fde\u7eed\u7684\u5c31\u7b26\u5408\u6761\u4ef6\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1677369677,
        "uid": 541145,
        "name": "Fleeing_loser",
        "ccfLevel": 0,
        "title": "CF1789B Serval and Inversion Magic\u9898\u89e3"
    }
]