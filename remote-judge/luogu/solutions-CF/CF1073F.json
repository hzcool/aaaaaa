[
    {
        "content": "\u5982\u679c\u662f\u4e00\u6761\u94fe\u6700\u957f\uff0c\u5219\u6c42\u7684\u5c31\u662f\u6811\u7684\u76f4\u5f84\u3002\n\n\u73b0\u5728\u8981\u6c42\u4e24\u6761\u94fe\u7684\u516c\u5171\u90e8\u5206\u6700\u957f\u3002\n\n\u6211\u4eec\u77e5\u9053\uff0c\u4e24\u6761\u94fe\u7684\u516c\u5171\u90e8\u5206\u4e00\u5b9a\u4e5f\u662f\u4e00\u6761\u94fe\uff0c\u4e14\u8fd9\u6761\u94fe\u7684\u4e24\u4e2a\u7aef\u70b9\uff0c\u4e00\u5b9a\u81f3\u5c11\u6709\u4e09\u4e2a\u5206\u53c9\uff08\u4e24\u6761\u94fe\u7684\u7aef\u70b9\u5728\u8fd9\u4e2a\u8282\u70b9\u5904\u5206\u5f00\uff09\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u8981\u627e\u4e24\u4e2a\u7aef\u70b9$u,v$\uff0c\u4f7f\u5f97\u5b83\u4eec\u90fd\u81f3\u5c11\u6709\u4e24\u4e2a\u513f\u5b50\u8282\u70b9\uff08\u4e0d\u5305\u62ec\u4e24\u6761\u94fe\u4e4b\u95f4\u7684\u8def\u5f84\u4e0a\u7684\u90a3\u4e2a\u8282\u70b9\uff09\u3002\n\n\u8fd9\u4e2a\u4e1c\u897f\uff0c\u4e5f\u53ef\u4ee5\u50cf\u6c42\u76f4\u5f84\u4e00\u6837\u4e24\u904ddfs\u3002\n\n\u7136\u540e\u8fd8\u8981\u4f7f\u5f97\u603b\u957f\u5ea6\u5c3d\u53ef\u80fd\u957f\u3002\n\n\u90a3\u6211\u4eec\u5c31\u5728$u$\u548c$v$\u7684\u5b50\u6811\u4e2d\uff0c\u627e\u79bb\u6839\u6700\u8fdc\u548c\u6b21\u8fdc\u7684\u70b9\u5373\u53ef\u3002\n\n\u4e3a\u4e86\u4fdd\u8bc1\u6c42\u51fa\u7684\u4e24\u4e2a\u7aef\u70b9\u7684\u5b50\u6811\u4e2d\uff0c\u201c\u79bb\u6839\u6700\u8fdc\u548c\u6b21\u8fdc\u7684\u70b9\u5230\u6839\u8ddd\u79bb\u4e4b\u548c\u201d\u662f\u6700\u957f\u7684\uff0c\u6240\u4ee5\u5728dfs\u7684\u65f6\u5019\u82e5\u4e24\u4e2a\u70b9\u8ddd\u79bb\u6839\u540c\u6837\u8fdc\uff0c\u5219\u6839\u636e\u5b83\u4eec\u201c\u79bb\u6839\u6700\u8fdc\u548c\u6b21\u8fdc\u7684\u70b9\u5230\u6839\u8ddd\u79bb\u4e4b\u548c\u201d\u7684\u5927\u5c0f\u6765\u5224\u65ad\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n)$\u3002\n\n## Code\uff1a\n```cpp\n#include<cstdio>\n#include<cstring>\n#define N 233333\nint n,head[N],cnt=0,dep[N],mx,_1,_2,tot,li[N];\nstruct edge{\n\tint to,nxt;\n}e[N<<1];\nvoid dfs(int now){\n\tint son=0;\n\tint mx2=0;\n\tfor(int i=head[now];i;i=e[i].nxt)\n\tif(!dep[e[i].to]){\n\t\tdep[e[i].to]=dep[now]+1;\n\t\tdfs(e[i].to);\n\t\tif(dep[li[e[i].to]]>dep[li[now]])mx2=li[now],li[now]=li[e[i].to];else\n\t\tif(dep[li[e[i].to]]>dep[mx2])mx2=li[e[i].to];\n\t\t++son;\n\t}\n\tif(son==0)li[now]=now;\n\tif(son>1&&(dep[now]>dep[mx]||dep[now]==dep[mx]&&dep[li[now]]+dep[mx2]>tot)){\n\t\tmx=now;\n\t\ttot=dep[li[now]]+dep[mx2];\n\t}\n}\nvoid get(int now){\n\tint son=0;\n\tfor(int i=head[now];i;i=e[i].nxt)\n\tif(dep[e[i].to]>dep[now]){\n\t\t++son;\n\t\tget(e[i].to);\n\t}\n\tif(!son){\n\t\tif(dep[_1]<dep[now]){\n\t\t\t_2=_1;_1=now;\n\t\t}else\n\t\tif(dep[_2]<dep[now])_2=now;\n\t}\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<n;++i){\n\t\tint u,v;\n\t\tscanf(\"%d%d\",&u,&v);\n\t\te[++cnt]=(edge){v,head[u]};\n\t\thead[u]=cnt;\n\t\te[++cnt]=(edge){u,head[v]};\n\t\thead[v]=cnt;\n\t}\n\ttot=0;\n\tdfs(dep[1]=1);\n\tint u=mx;\n\t_1=_2=0;\n\tget(u);\n\tint u1=_1,u2=_2;\n\tmemset(dep,0,sizeof dep);\n\tdep[u]=1;mx=tot=0;\n\tdfs(u);\n\tint v=mx;\n\t_1=_2=0;\n\tget(v);\n\tprintf(\"%d %d\\n%d %d\\n\",u1,_1,u2,_2);\n\treturn 0;\n}\n```",
        "postTime": 1543631768,
        "uid": 6813,
        "name": "mrsrz",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1073F \u3010Choosing Two Paths\u3011"
    },
    {
        "content": "[\u6211\u7684\u535a\u5ba2](https://www.cnblogs.com/Memory-of-winter/p/9929795.html)\n\n**\u9898\u76ee\u5927\u610f\uff1a**\u6709\u4e00\u68f5\u6811\uff0c\u4ece\u4e2d\u9009\u53d6$2$\u6761\u94fe\uff0c\u5176\u4e2d\u4efb\u4f55\u4e00\u6761\u94fe\u7684\u7aef\u70b9\u4e0d\u80fd\u88ab\u53e6\u4e00\u6761\u94fe\u5305\u542b\uff0c\u6c42\u8fd9\u4e24\u6761\u94fe\uff0c\u4f7f\u8fd9\u4e24\u6761\u94fe\u7684\u516c\u5171\u7684\u70b9\u7684\u90e8\u5206\u6700\u957f\uff0c\u82e5\u76f8\u540c\uff0c\u4f7f\u5f97\u603b\u957f\u5ea6\u6700\u957f\u3002\n\n**\u9898\u89e3\uff1a**\u6811\u5f62$DP$\uff0c\u56e0\u4e3a\u7aef\u70b9\u4e92\u4e0d\u5305\u542b\uff0c\u6240\u4ee5\u516c\u5171\u7684\u90e8\u5206\u7684\u7aef\u70b9\u4e00\u5b9a\u6709\u4e24\u4e2a\u53ca\u4ee5\u4e0a\u7684\u513f\u5b50\uff0c\u7136\u540e\u53ef\u4ee5\u628a\u8fd9\u6837\u7684\u70b9\u5148\u5168\u90e8\u6c42\u51fa\u6765\u3002\u6c42\u65b0\u6811\u7684\u76f4\u5f84\u5c31\u53ef\u4ee5\u6ee1\u8db3\u7b2c\u4e00\u4e2a\u8981\u6c42\uff08\u6d1b\u8c37\u9898\u610f\u6709\u9505\uff0c\u6ca1\u6709\u5199\u5728\u76f8\u540c\u60c5\u51b5\u4e0b\u8981\u6c42\u603b\u957f\u5ea6\u6700\u957f\uff0c\u5bfc\u81f4\u6211\u6700\u540e\u91cd\u6784\u4ee3\u7801\uff09\u3002\n\n\u90a3\u5982\u4f55\u4f7f\u5f97\u76f8\u540c\u60c5\u51b5\u4e0b\u603b\u957f\u5ea6\u6700\u957f\u5462\uff1f\u53ef\u4ee5\u518d\u7ef4\u62a4\u4e00\u4e2a\u4ee5$i$\u4e3a\u6839\u7684\u5b50\u6811\u5185\u4ee5$i$\u4e3a\u4e00\u4e2a\u7aef\u70b9\u7684\u6700\u957f\u94fe\u548c\u6b21\u957f\u94fe\uff0c$DP$\u65f6\u4ee5\u65b0\u6811\u7684\u6df1\u5ea6\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u4ee5\u6700\u957f\u94fe\u548c\u6b21\u957f\u94fe\u957f\u5ea6\u603b\u548c\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\n\n\n**C++ Code\uff1a**\n\n```cpp\n#include <cstdio>\n#define maxn 200010\ninline int max(int a, int b) {return a > b ? a : b;}\n\nint head[maxn], cnt;\nstruct Edge {\n\tint to, nxt;\n} e[maxn << 1];\ninline void add(int a, int b) {\n\te[++cnt] = (Edge) {b, head[a]}; head[a] = cnt;\n}\nbool choose[maxn];\nint ind[maxn];\nint n, root;\n\nstruct node {//M\u4e3a\u94fe\u7684\u957f\u5ea6\uff0cP\u4e3a\u8be5\u94fe\u7684\u7aef\u70b9\n\tint P, M;\n\tinline node() {}\n\tinline node(int __P, int __M) {M = __M, P = __P;}\n\tinline node operator + (const int &rhs) const {return node(P, M + rhs);}\n\tinline friend operator < (const node &lhs, const node &rhs) {return lhs.M < rhs.M;}\n} V[maxn][2];//0\u4e3a\u6700\u957f\u7684\u94fe\uff0c1\u4e3a\u6b21\u957f\u94fe\nvoid dfs(int u, int fa = 0) {//\u6c42\u51fa\u90a3\u4e9b\u70b9\u53ef\u4ee5\u5c5e\u4e8e\u516c\u5171\u90e8\u5206\n\tif (ind[u] > 1) choose[u] = true;\n\tfor (int i = head[u]; i; i = e[i].nxt) {\n\t\tint v = e[i].to;\n\t\tif (v != fa) {\n\t\t\tdfs(v, u);\n\t\t\tif (ind[u] == 2 && !choose[v]) choose[u] = false;\n\t\t}\n\t}\n}\n\nint f[maxn], F[maxn];\nnode dfs1(int u, int fa = 0) {//\u6c42\u7aef\u70b9\n\tV[u][0] = node(u, 0); V[u][1] = node(0, 0);\n\tf[F[u] = u] = choose[u];\n\tfor (int i = head[u]; i; i = e[i].nxt) {\n\t\tint v = e[i].to;\n\t\tif (v != fa) {\n\t\t\tnode tmp = dfs1(v, u) + 1;\n\t\t\tif (f[v] + choose[u] > f[u]) {\n\t\t\t\tf[u] = f[v] + choose[u];\n\t\t\t\tF[u] = F[v];\n\t\t\t} else if (f[v] + choose[u] == f[u]) {\n\t\t\t\tif (choose[v] && V[F[u]][1].M + V[F[u]][0].M <= V[F[v]][1].M + V[F[v]][0].M) {\n\t\t\t\t\tF[u] = F[v];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (V[u][0] < tmp) {\n\t\t\t\tV[u][1] = V[u][0];\n\t\t\t\tV[u][0] = tmp;\n\t\t\t} else if (V[u][1] < tmp) V[u][1] = tmp;\n\t\t}\n\t}\n\treturn V[u][0];\n}\n\nint main() {\n\tscanf(\"%d\", &n);\n\tfor (int i = 1, a, b; i < n; i++) {\n\t\tscanf(\"%d%d\", &a, &b);\n\t\tadd(a, b);\n\t\tadd(b, a);\n\t\tind[a]++, ind[b]++;\n\t\tif (ind[a] >= 3) root = a;\n\t\tif (ind[b] >= 3) root = b;\n\t}\n\tdfs(root);\n\tint x, a, b, c, d;\n\tdfs1(root);\n\tx = F[root], a = V[F[root]][0].P, c = V[F[root]][1].P;\n\tdfs1(x);\n\tb = V[F[x]][0].P, d = V[F[x]][1].P;\n\tprintf(\"%d %d\\n%d %d\\n\", a, b, c, d);\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1541665461,
        "uid": 22072,
        "name": "Memory_of_winter",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1073F \u3010Choosing Two Paths\u3011"
    },
    {
        "content": "\u6709\u70b9\u610f\u601d\u53c8\u504f\u5411\u5957\u8def\u7684\u7ed3\u8bba\u9898\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u6700\u7ec8\u7b54\u6848\u4e00\u5b9a\u662f\u7c7b\u4f3c\u4e8e\u4e00\u6761\u8def\u5f84 $\\mathrm{Path(u\\to v)}$ \u4e0a\u5ef6\u4f38\u51fa\u4e24\u6761\u8def\u5f84 $\\mathrm{Path(x'\\to x),Path(y'\\to y)}$ \u8fd9\u79cd\u5f62\u5f0f\uff0c\u5176\u4e2d $x',y'$ \u90fd\u5728\u8def\u5f84 $u\\to v$ \u4e0a\u3002\u800c\u6211\u4eec\u8981\u5148\u8ba9 $\\mathrm{dis(x',y')}$ \u6700\u5927\uff08\u5373\u76f8\u4ea4\u90e8\u5206\u6700\u5927\uff09\uff0c\u5176\u6b21\u4ee4\u8def\u5f84 $\\mathrm{Path(u\\to v),Path(x'\\to x),Path(y'\\to y)}$ \u7684\u957f\u5ea6\u4e4b\u548c\u6700\u5927\u3002\n\n\u53ef\u4ee5\u53d1\u73b0 $\\mathrm{Path(u\\to v)}$ \u8fd9\u6761\u8def\u5f84\uff0c\u53ef\u4ee5\u4f7f\u7528\u7c7b\u4f3c\u76f4\u5f84\u7684\u4e24\u6b21 $\\text{dfs}$ \u6c42\u51fa\u3002\u800c\u4e00\u65e6\u8fd9\u6761\u8def\u5f84\u786e\u5b9a\uff0c\u53e6\u5916\u4e24\u6761\u8def\u5f84\u7684 $x',y'$ \u662f\u786e\u5b9a\u7684\uff0c\u5bf9\u5e94\u6c42\u51fa $x',y'$ \u5b50\u6811\u4e2d\u7684\u53f6\u5b50\u8282\u70b9 $x,y$ \u5373\u53ef\u3002\u7b54\u6848\u7684\u94fe\u5bf9\u5c31\u4e3a $\\mathrm{Path(u\\to v),Path(x\\to y)}$\u3002\n\n\u4f46\u662f\u5982\u679c $u\\to v$ \u4e0d\u6ee1\u8db3\u4e00\u4e9b\u6761\u4ef6\uff0c\u4f1a\u5bfc\u81f4\u5bf9\u5e94\u6c42\u51fa\u7684 $x,y$ \u5f62\u6210\u7684\u4ea4\u96c6\u4e0d\u662f\u6700\u5927\u7684\uff0c\u6216\u8005\u8def\u5f84\u957f\u5ea6\u603b\u548c\u4e0d\u662f\u6700\u5927\u7684\uff08~~\u6211\u5728\u8fd9\u4e2a\u5730\u65b9\u53cd\u590d $\\text{Wrong Answer on test 72/57/45}$~~\uff0c\u4e0d\u5f97\u4e0d\u8bf4 $\\text{Codeforces}$ \u7684\u6570\u636e\u8fd8\u662f\u633a\u5f3a\u7684\n\n\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u5728\u4e24\u904d $\\text{dfs}$ \u7684\u65f6\u5019\uff0c\u6309\u7167\u4f18\u5148\u7ea7\u66f4\u65b0\u503c\u5373\u53ef\u3002\u5148\u8003\u8651\u76f8\u4ea4\u90e8\u5206\u6700\u5927\uff0c\u5176\u6b21\u8003\u8651\u8def\u5f84\u957f\u5ea6\u4e4b\u548c\u6700\u5927\u3002\u7531\u4e8e\u9700\u8981\u6c42\u8def\u5f84\u957f\u5ea6\u4e4b\u548c\uff0c\u6211\u4eec\u9700\u8981\u9884\u5904\u7406\u51fa $x$ \u5b50\u6811\u5185\u6700\u5927\u8ddd\u79bb\u548c\u6b21\u5927\u8ddd\u79bb\uff0c\u8fd9\u662f\u4e00\u4e2a\u5957\u8def\u5c31\u4e0d\u7ec6\u8868\u4e86\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728 $O(n)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u4ee3\u7801\u5199\u7684\u6709\u70b9\u51cc\u4e71\u968f\u4fbf\u770b\u770b\u5c31\u597d\uff08\u6211\u624d\u4e0d\u4f1a\u544a\u8bc9\u4f60\u662f\u6211\u6545\u610f\u7684\u5462~\n\n```cpp\n#include<cstdio>\nint pos=0,val=0,val2=0,cnt=0,mx,mn,rex,rey;\nint du[200005],h[200005],to[400005],ver[400005];\nint dis[200005],tag[200005],pre[200005],s[200005],leaf[200005],sec[200005];\ninline int read() {\n\tregister int x=0,f=1;register char s=getchar();\n\twhile(s>'9'||s<'0') {if(s=='-') f=-1;s=getchar();}\n\twhile(s>='0'&&s<='9') {x=x*10+s-'0';s=getchar();}\n\treturn x*f;\n}\ninline void swap(int &x,int &y) {int tmp=y;y=x;x=tmp;}\ninline void add(int x,int y) {to[++cnt]=y;ver[cnt]=h[x];h[x]=cnt;}\ninline void dfs2(int x) { \n\tdu[x]=0;\n\tif(dis[mx]-dis[mn]>val) pos=x,val=dis[mx]-dis[mn],val2=dis[leaf[mn]]+dis[leaf[mx]]+dis[x]; else if(val==dis[mx]-dis[mn]&&dis[leaf[mn]]+dis[leaf[mx]]+dis[x]>val2) pos=x,val2=dis[leaf[mn]]+dis[leaf[mx]]+dis[x];\n\tfor(register int i=h[x],y;i;i=ver[i]) {if(pre[x]==(y=to[i])) continue; ++du[x];}\n\tfor(register int i=h[x],y;i;i=ver[i]) {\n\t\tif(pre[x]==(y=to[i])) continue; \n\t\tpre[y]=x; dis[y]=dis[x]+1; int premx=mx,premn=mn; \n\t\tint flag=0; if(leaf[y]==leaf[x]) {flag=1;swap(leaf[x],sec[x]);} \n\t\tif(du[x]>1) {\n\t\t\tif(dis[x]>dis[mx]) mx=x;\n\t\t\telse if(dis[x]==dis[mx]&&dis[leaf[x]]>dis[leaf[mx]]) mx=x;\n\t\t\tif(dis[x]<dis[mn]) mn=x;\n\t\t\telse if(dis[x]==dis[mn]&&dis[leaf[x]]>dis[leaf[mn]]) mn=x; \n\t\t} \n\t\tdfs2(y); mx=premx; mn=premn;\n\t\tif(flag) swap(leaf[x],sec[x]);\n\t}\n}\ninline void dfs3(int x) {\n\tleaf[x]=x; \n\tfor(register int i=h[x],y;i;i=ver[i]) {\n\t\tif(pre[x]==(y=to[i])||tag[y]) continue; pre[y]=x; dfs3(y); \n\t\tif(dis[leaf[x]]<dis[leaf[y]]) {sec[x]=leaf[x];leaf[x]=leaf[y];}\n\t\telse if(dis[sec[x]]<dis[leaf[y]]) {sec[x]=leaf[y];}\n\t}\n}\nint main() {\n\tint n=read(),top=0,st,ed; dis[0]=mx=0; dis[n+1]=mn=n+1;\n\tfor(register int i=1;i<n;++i) {int x=read(),y=read();add(x,y);add(y,x);}\n\tdis[1]=pos=val=0; dfs2(1); st=pos; pre[st]=-1; dis[st]=pos=val=0; dfs3(st); mx=0,mn=n+1; dfs2(st); ed=pos;\n\tint cur=ed,rex,rey; while(cur!=-1) {s[++top]=cur; tag[cur]=1; cur=pre[cur];} mx=0,mn=n+1;\n\tfor(register int i=top-1;i>=2;--i) {\n\t\tint x=s[i];\n\t\tfor(register int k=h[x],y;k;k=ver[k]) if(!tag[y=to[k]]) mx=(dis[x]>dis[mx]? x:mx),mn=(dis[x]<dis[mn]? x:mn); \n\t}\n\tdfs3(mn); rex=leaf[mn]; dfs3(mx); rey=leaf[mx];\n\tprintf(\"%d %d\\n%d %d\\n\",st,ed,rex,rey);\n\treturn 0;\n}\n```",
        "postTime": 1602855806,
        "uid": 95244,
        "name": "tommymio",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1073F \u3010Choosing Two Paths\u3011"
    },
    {
        "content": "\u6a21\u62df\u8d5b\u8003\u4e86\u8fd9\u9898\uff0c\u82b1\u4e862h\u521a\u4e86\u4e2a\u5f31\u667a\u7684\u70b9\u5206\u6cbb\u505a\u6cd5\u3002\n\n\u5047\u8bbe\u5f53\u524d\u6211\u4eec\u5206\u6cbb\u5230\u7684\u91cd\u5fc3\u662f $x$\uff0c\u90a3\u4e48\u6211\u4eec\u6b64\u65f6\u94a6\u5b9a\u91cd\u5408\u90e8\u5206\u4e00\u5b9a\u8981\u7ecf\u8fc7\u70b9  $x$\u3002\n\n\u8fd9\u65f6\u5019\u5c31\u4f1a\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n1. $x$ \u4e0d\u662f\u4e00\u4e2a\u7aef\u70b9\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5bf9 $x$ \u7684\u6240\u6709\u513f\u5b50\u6392\u5e8f\uff0c\u4ee5 $dep$ \u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff08\u8be5\u6709\u6839\u5b50\u6811\u4e2d\u6700\u6df1\u7684\u6709\u4e24\u4e2a\u53ca\u4ee5\u4e0a\u513f\u5b50\u7684\u8282\u70b9\u7684\u6df1\u5ea6\uff09\uff0c\u4ee5 $sum$ \u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\uff08\u8be5\u6709\u6839\u5b50\u6811\u4e2d\u6ee1\u8db3\u7b2c\u4e00\u5173\u952e\u5b57\u4e0b\u6700\u5927\u7684\u6df1\u5ea6\u7684\u8282\u70b9\u7684\u4e24\u4e2a\u8ddd\u79bb\u8be5\u8282\u70b9\u8ddd\u79bb\u6700\u5927\u7684\u4e24\u4e2a\u70b9\u7684\u8ddd\u79bb\u4e4b\u548c\uff0c\u8bf4\u4eba\u8bdd\u5c31\u662f\u4e24\u4e2a\u5206\u53c9\u7684\u957f\u5ea6\uff09\u8fdb\u884c\u6392\u5e8f\u3002\n\n\u6392\u5e8f\u540e\uff0c\u7531\u4e8e\u53ef\u80fd\u5b58\u5728\u591a\u4e2a\u76f4\u5f84\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230\u6240\u6709\u7ecf\u8fc7\u70b9 $x$ \u7684\u76f4\u5f84\u7684\u7b54\u6848\u3002\u4f46\u662f\uff0c\u6211\u4eec\u6309\u7167\u4e0a\u8ff0\u89c4\u5219\u6392\u5b8c\u5e8f\u540e\uff0c\u76f4\u63a5\u6bd4\u8f83\u524d\u4e24\u5927\u7684\u5373\u53ef\u3002\n\n\u8bc1\u660e\uff1a\n\n+ \u5982\u679c\u6709\u591a\u4e2a\u513f\u5b50\u7684\u6df1\u5ea6\u6700\u5927\uff0c\u90a3\u4e48\u8be5\u65b9\u6cd5\u80af\u5b9a\u53ea\u5728\u4ed6\u4eec\u4e4b\u95f4\u9009\u3002\u800c\u4e14\uff0c\u6839\u636e\u7b2c\u4e8c\u5173\u952e\u5b57\uff0c\u6211\u4eec\u9009\u524d\u4e24\u4e2a\u5c31\u8db3\u4ee5\u51d1\u5230\u5728\u516c\u5171\u90e8\u5206\u6700\u957f\u7684\u60c5\u51b5\u4e0b\u603b\u957f\u5ea6\u6700\u957f\u7684 \u65b9\u6848\u4e86\u3002\n\n+ \u5982\u679c\u53ea\u6709\u4e00\u4e2a\u513f\u5b50\u6df1\u5ea6\u6700\u5927\uff0c\u90a3\u4e48\u6309\u7167\u7b2c\u4e8c\u5173\u952e\u5b57\u8fd8\u662f\u80fd\u628a\u6240\u6709\u6df1\u5ea6\u7b2c\u4e8c\u5927\u7684\u513f\u5b50\u6309\u7167\u5206\u53c9\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u4ecd\u7136\u53ef\u4ee5\u9009\u62e9\u524d\u4e24\u5927\u7684\u914d\u5bf9\u3002\n\n2. $x$ \u662f\u4e00\u4e2a\u76f4\u5f84\u7684\u7aef\u70b9\u3002\n\n\u8fd9\u79cd\u60c5\u51b5\u53ef\u80fd\u5728\u4e00\u4e2a\u84b2\u516c\u82f1\u4e00\u6837\u7684\u56fe\u4e0a\u51fa\u73b0\uff08\u4e00\u4e2a\u83ca\u82b1\u63a5\u4e86\u4e00\u6761\u94fe\u548c\u4e00\u4e2a\u5c0f\u5206\u53c9\uff09\u3002\n\n\u90a3\u4e48 $x$ \u7684\u6240\u6709\u513f\u5b50\u4e2d\u6709\u4e24\u4e2a\u53ca\u4ee5\u4e0a\u53f6\u5b50\u7684\u8282\u70b9\u53ea\u6709\u4e00\u4e2a\uff08\u4f38\u51fa\u53bb\u7684\u90a3\u6761\u94fe\uff09\uff0c\u6211\u4eec\u4e0d\u5f97\u4e0d\u770b $x$ \u7684\u6240\u6709\u5176\u4ed6\u76f4\u63a5\u513f\u5b50\u4f5c\u4e3a\u5206\u53c9\u3002\u5c31\u662f\u8bb0\u5f55\u6bcf\u4e2a\u513f\u5b50\u7684 $lt$ \u8868\u793a\u5176\u6700\u6df1\u7684\u53f6\u5b50\u5230\u5b83\u7684\u8ddd\u79bb\uff0c\u548c $id$ \u8868\u793a $lt$ \u5bf9\u5e94\u7684\u53f6\u5b50\u7684\u7f16\u53f7\u3002\n\n\u7136\u540e\u5957\u4e00\u4e2a\u70b9\u5206\u6cbb\u6a21\u677f\u5c31\u884c\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int mxn=2e5+5;\nvector<int>g[mxn];\nint ban[mxn];\nint root=-1,ma=mxn,totn;\nint sz[mxn],n;\ninline void findroot(int x,int fa=0){\n\tsz[x]=1;int cm=0;\n\tfor(int y:g[x])if(y!=fa and !ban[y]){\n\t\tfindroot(y,x);\n\t\tsz[x]+=sz[y];\n\t\tcm=max(cm,sz[y]);\n\t}\n\tcm=max(cm,totn-sz[x]);\n\tif(cm<ma){\n\t\tma=cm;\n\t\troot=x;\n\t}\n}\nvector<int>v,o;\nint deg[mxn],dt[mxn],lt[mxn],fa[mxn],id[mxn],dep[mxn],sm[mxn],par[mxn];\npair<int,int>ch[mxn];\ninline void dfs(int x,int fa=0){\n\tpar[x]=fa,v.push_back(x),deg[x]=0,lt[x]=0,id[x]=x,sz[x]=1,dep[x]=-mxn;\n\tfor(int y:g[x])if(!ban[y] and y!=fa){\n\t\tdfs(y,x),++deg[x];sz[x]+=sz[y];\n\t\tif(lt[x]<lt[y]+1){\n\t\t\tlt[x]=lt[y]+1;\n\t\t\tid[x]=id[y];\n\t\t}\n\t}\n}\ninline void dfs2(int x,int fa=0){\n\tvector<pair<int,int> >cv;cv.clear();\n\tsm[x]=-mxn;ch[x]={-mxn,-mxn};dep[x]=-mxn;\n\tfor(int y:g[x])if(!ban[y] and y!=fa){\n\t\tdfs2(y,x);\n\t\tif(dep[y]+1>dep[x] and sm[y]>=0){\n\t\t\tsm[x]=sm[y],ch[x]=ch[y];dep[x]=dep[y]+1;\n\t\t}else if(dep[y]+1==dep[x] and sm[y]>=0){\n\t\t\tif(sm[y]>sm[x]){\n\t\t\t\tsm[x]=sm[y];\n\t\t\t\tch[x]=ch[y];\n\t\t\t}\n\t\t}\n\t\tcv.push_back({lt[y],id[y]});\n\t\tsort(cv.rbegin(),cv.rend());\n\t\tif(cv.size()>3)cv.pop_back();\t\t\t\n\t}\n\tif(sm[x]<0 and cv.size()>1){\n\t\tif(cv[0].first+cv[1].first>sm[x]){\n\t\t\tsm[x]=cv[0].first+cv[1].first;\n\t\t\tch[x]={cv[0].second,cv[1].second};\n\t\t\tdep[x]=0;\n\t\t}\n\t}\n}\n#define x1 x114514\n#define y1 y114514\n#define x2 x1919810\n#define y2 y1919810\nint cml,sml,x1,y1,x2,y2,bp[mxn];\nvector<int>ee;bool fd;\nint cnt=0;\ninline void go(int x){\n\tv.clear(),dfs(x);\n\tif(v.size()<=5){\n\t\tfor(int i:v)ban[i]=1;\n\t\treturn;\n\t}\n\tdfs2(x);\n\tvector<pair<int,pair<int,pair<int,int> > > >cv;cv.clear();\n\tfor(int y:g[x])if(!ban[y] and sm[y]>=0 and dep[y]>=0)cv.push_back({dep[y]+1,{sm[y],ch[y]}});\n\tif(cv.size()>1){\n\t\tsort(cv.rbegin(),cv.rend());\n\t\tif(cml<cv[0].first+cv[1].first or (cml==cv[0].first+cv[1].first and sml<cv[0].second.first+cv[1].second.first)){\n\t\t\tcml=cv[0].first+cv[1].first;\n\t\t\tsml=cv[0].second.first+cv[1].second.first;\n\t\t\tx1=cv[0].second.second.first,x2=cv[0].second.second.second;\n\t\t\ty1=cv[1].second.second.first,y2=cv[1].second.second.second;\n\t\t}\n\t}else if(cv.size()==1){\n\t\tvector<pair<int,int> >wr;wr.clear();\n\t\tfor(int y:g[x])if(!ban[y] and dep[y]<0)wr.push_back({lt[y],id[y]});\n\t\tsort(wr.rbegin(),wr.rend());\n\t\tif(wr.size()>1){\n\t\t\tint tc=cv[0].first,ts=cv[0].second.first+wr[0].first+wr[1].first;\n\t\t\tif(tc>cml or (tc==cml and ts>sml)){\n\t\t\t\tcml=tc,sml=ts;\n\t\t\t\tx1=wr[0].second,x2=wr[1].second;\n\t\t\t\ty1=cv[0].second.second.first,y2=cv[0].second.second.second;\n\t\t\t}\n\t\t}\n\t}\n\tban[x]=1;\n\tfor(int y:g[x]){\n\t\tif(ban[y])continue;\n\t\ttotn=sz[y];ma=mxn;\n\t\tfindroot(y);\n\t\tgo(root);\n\t}\n}\nint main(){\n//\tfreopen(\"reveal.in\",\"r\",stdin);\n//\tfreopen(\"reveal.out\",\"w\",stdout);\n\tios_base::sync_with_stdio(false);\n\tcin.tie(0),cout.tie(0);\n\tcin>>n;for(int i=1,u,v;i<n;++i)cin>>u>>v,g[u].push_back(v),g[v].push_back(u);\n\ttotn=n;findroot(1,0);\n\tgo(root);\n\tcout<<x1<<' '<<y1<<'\\n'<<x2<<' '<<y2<<'\\n';\n\treturn 0;\n}\n```",
        "postTime": 1668335057,
        "uid": 226760,
        "name": "RedLycoris",
        "ccfLevel": 7,
        "title": "\u4e3a\u4ec0\u4e48\u6211\u53c8\u60f3\u590d\u6742\u4e86\uff1f\uff1f\uff1f\uff1f\uff1f\uff1f"
    }
]