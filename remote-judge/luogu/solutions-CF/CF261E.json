[
    {
        "content": "\u5206\u6790\uff1a\n\u56e0\u4e3a\u6700\u591a\u64cd\u4f5c$p$\u6b65\uff0c\u6240$b\u2264p$\uff0c\u6240\u4ee5$a$\u4e0d\u4f1a\u6709\u5927\u4e8e$p$\u7684\u7ea6\u6570\uff0c\u90a3\u4e00\u5b9a\u4e0d\u4f1a\u6709\u5927\u4e8e$p$\u7684\u8d28\u56e0\u6570\u3002\n\n\u6211\u4eec\u628a$[1,p]$\u8303\u56f4\u5185\u7684\u6240\u6709\u5c0f\u4e8e\u7b49\u4e8e$p$\u7684\u8d28\u56e0\u6570\u8dd1\u51fa\u6765\uff0c\u7136\u540edfs\u51fa$[1,r]$\u5185\u53ef\u4ee5\u88ab\u8868\u793a\u6210\u5c0f\u4e8e\u7b49\u4e8e$p$\u7684\u8d28\u56e0\u6570\u4e58\u79ef\u7684\u6570\u8dd1\u51fa\u6765\uff0c\u7136\u540e\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n\n\u5f53$p=100,r=10^9$\u65f6\uff0c\u8fd9\u6837\u7684\u6570\u4e0d\u8d85\u8fc7$3*10^6$\u4e2a\uff0c\u4e5f\u5c31\u662f\u53ea\u6709\u8fd9\u4e9b\u6570\u80fd\u88ab\u8868\u793a\u51fa\u6765\u3002\n\n\u540e\u9762\u4f7f\u7528dp\u6c42\u6b65\u6570\uff0c\u8bbe$f[i][j]$\u8868\u793a\u8868\u793a\u4e8c\u5143\u7ec4\u7684\u7b2c\u4e00\u7ef4\u53d8\u4e3a$j$\uff0c\u7b2c\u4e8c\u7ef4\u53d8\u4e3a$i$\u65f6\uff0c\u64cd\u4f5c\u4e8c\u7684\u6b21\u6570(\u4e58\u64cd\u4f5c)\uff0c\u663e\u7136\u6709\n$$f[i][j]=min(f[i][j/i]+1,f[i-1][j])$$\n\u90a3\u4e48\n$$step[j]=\\min_{i=1}^{p}(f[i][j]+i)$$\n\n\u6211\u4eec\u53d1\u73b0\u7b2c\u4e8c\u7ef4\u4e0d\u80fd\u76f4\u63a5\u7528$j$\uff0c\u56e0\u4e3a$j$\u662f$10^9$\u7684\uff0c\u6240\u4ee5\u8981\u628a\u7b2c\u4e8c\u7ef4\u8bbe\u4e3a\u662f\u5728\u7b54\u6848\u6570\u5217\u4e2d\u7684\u7b2c$j$\u4f4d\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u5c31\u4e0d\u80fd\u76f4\u63a5\u7528\u4e0b\u6807\u8868\u793a$j/i$\u4e86\uff0c\u4f46\u662f\u6211\u4eec\u53d1\u73b0\uff0c\u5f53\u6211\u4eec$j$\u5728\u4e0d\u65ad\u589e\u5927\u7684\u65f6\u5019\uff0c$j/i$\u4e5f\u662f\u5355\u8c03\u589e\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5f00\u4e00\u4e2a\u6307\u9488\uff0c\u5f53$j$\u53f3\u79fb\u65f6\u8ddf\u7740\u5c31\u597d\u4e86\u3002\n\n\u8fd9\u6837\u5f00$f$\u6570\u7ec4\u4f1a\u7206\u7a7a\u95f4\uff0c\u8003\u8651\u6eda\u52a8\u6389\u7b2c\u4e8c\u7ef4\uff0c\u8fd9\u6837\u7a7a\u95f4\u5c31\u662f$10^6$\u7ea7\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(p*n)$\u7684\uff0c\u4f46\u662f$n$\u6700\u5927\u53ef\u4ee5\u8fbe\u5230$3*10^6$\uff0c\u8fd8\u662f\u8dd1\u4e0d\u8fc7\u3002\u8003\u8651\u7384\u5b66\u4f18\u5316\u4e00\u4e0b\uff0c\u6211\u4eec\u53d1\u73b0\u53ef\u4ee5\u6539\u4e3a\u679a\u4e3e$k=j/i$\uff0c\u6b64\u65f6\u5982\u679c$k*i$\u5df2\u7ecf\u5927\u4e8e\u6570\u5217\u4e2d\u6700\u5927\u7684\u6570\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5break\u6389\u4e86\uff0c\u5e94\u8be5\u662f\u80fd\u8fc7\u7684\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <algorithm>\n#include <cstring>\n\nconst int maxn=3e6+7;\n\nusing namespace std;\n\nint l,r,p,cnt,tot;\nint not_prime[107],prime[107];\nint a[maxn],f[maxn];\nbool b[maxn];\n\nvoid getprime(int n)\n{\n    for (int i=2;i<=n;i++)\n    {\n        if (!not_prime[i])\n        {\n            prime[++tot]=i;\n        }\n        for (int j=1;j<=tot;j++)\n        {\n            if (i*prime[j]>n) break;\n            not_prime[i*prime[j]]=1;\n            if (i%prime[j]==0) break;\n        }\n    }\n}\n\nvoid dfs(int x,int k)\n{\n    a[++cnt]=k;\n    for (int i=x;i<=tot;i++)\n    {\n        if (prime[i]*(long long)k<=r) dfs(i,k*prime[i]);\n    }\n}\n\nint main()\n{\n    scanf(\"%d%d%d\",&l,&r,&p);\n    getprime(p);    \n    dfs(1,1);\n    sort(a+1,a+cnt+1);      \n    for (int i=1;i<=cnt;i++) f[i]=1156161;\n    f[1]=0; b[1]=1; \n    int ans=0;\n    for (int i=2;i<=p;i++)\n    {       \n        int j=i;            \n        for (int k=1;k<=cnt;k++)\n        {\n            while ((j<=cnt) && (a[j]!=a[k]*i)) j++;\n            if (j>cnt) break;\n            if (f[k]+1<f[j]) f[j]=f[k]+1;\n            if ((a[j]<l) || (b[j])) continue;\n            if (f[j]+i<=p) b[j]=1,ans++;\n        }       \n    }   \n    printf(\"%d\",ans);\n}\n```\n",
        "postTime": 1531652318,
        "uid": 18895,
        "name": "liangzihao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF261E \u3010Maxim and Calculator\u3011"
    },
    {
        "content": "**Description**\n\n\u6709\u4e24\u4e2a\u6570\uff0c$a=1$ \u548c $b=0$\u3002\u6211\u4eec\u53ef\u4ee5\u5bf9\u5b83\u4eec\u8fdb\u884c\u4e24\u79cd\u64cd\u4f5c\u3002\n\n1\u3001\u628a $b$ \u7684\u503c $+1$\u3002\n\n2\u3001\u628a $a$ \u7684\u503c $\\times b$\u3002\n\n\u95ee $a$ \u5728\u8fdb\u884c\u4e0d\u8d85\u8fc7 $p$ \u6b21\u64cd\u4f5c\u540e\uff0c\u5f97\u5230\u7684\u6570\u5728 $l$~$r$ \u8fd9\u4e2a\u533a\u95f4\u7684\u6709\u591a\u5c11\u4e2a\u3002\n\n**Solution**\n\n\u9996\u5148\u5206\u6790\uff0c\u7531\u4e8e\u8fdb\u884c\u4e86\u4e0d\u8d85\u8fc7 $p$ \u6b21\u64cd\u4f5c\uff0c\u800c $b$ \u6bcf\u6b21\u64cd\u4f5c\u6700\u591a\u4f1a $+1$\uff0c\u6240\u4ee5\u6700\u540e $b$ \u7684\u503c\u4e00\u5b9a\u4e0d\u4f1a\u5927\u4e8e $p$\uff0c\u800c $a$ \u7684\u503c\u662f\u7531\u591a\u4e2a $b$ \u7684\u4e58\u79ef\u7ec4\u6210\u7684\uff0c\u6240\u4ee5 $a$ \u4e0d\u4f1a\u6709\u5927\u4e8e $p$ \u7684\u7ea6\u6570\uff0c\u4e5f\u5c31\u4e0d\u4f1a\u6709\u5927\u4e8e $p$ \u7684\u8d28\u56e0\u6570\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a $1$~$r$ \u4e2d\u80fd\u88ab\u4e0d\u5927\u4e8e $p$ \u7684\u8d28\u56e0\u6570\u7ec4\u5408\u8d77\u6765\u7684\u6570\u5148\u7206\u641c\u51fa\u6765\uff0c\u8fd9\u6837\u7684\u6570\u4e0d\u8d85\u8fc7 $3\\times 10^6$ \uff0c\u7136\u540e\u8fdb\u884c $DP$\u3002\n\n\u8bbe $f[i][j]$ \u8868\u793a\u5f53 $b$ \u4e3a $i$ \u65f6\uff0c$a$ \u4e3a $j$ \u65f6\u7684\u64cd\u4f5c $2$ \u7684\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\u3002\n\n\u8f6c\u79fb\uff1a$f[i][j]=min(f[i][j/i]+1,f[i-1][j])$\u3002\n\n\u4f46\u8fd9\u6837\u6570\u7ec4\u5b58\u4e0d\u4e0b\uff0c\u6211\u4eec\u8981\u89e3\u51b3\u4e24\u4e2a\u95ee\u9898\u3002\n\n1\u3001$j$ \u592a\u5927\uff0c\u6570\u7ec4\u5f00\u4e0d\u4e0b\u3002\n\n\u89e3\u51b3\u529e\u6cd5\uff1a\n\n\u53ef\u4ee5\u628a $j$ \u7528\u4f4d\u7f6e\u6765\u8868\u793a\uff0c\u4e5f\u5c31\u662f $f[i][j]$ \u8868\u793a $b$ \u4e3a $i$\uff0c$a$ \u4e3a\u80fd\u88ab\u4e0d\u5927\u4e8e $p$ \u7684\u8d28\u56e0\u6570\u7ec4\u5408\u8d77\u6765\u7684\u6570\u4e2d\u7684\u7b2c $j$ \u4e2a\uff0c\u7136\u540e\u56e0\u4e3a $j$ \u5927\u4e86\uff0c$j/i$ \u4e5f\u4f1a\u5927\uff0c\u6240\u4ee5 $j/i$ \u4e5f\u53ef\u4ee5\u7528\u4e00\u4e2a\u4f4d\u7f6e\u6765\u5b58\uff0c\u8ddf\u7740 $j$ \u52a8\u5373\u53ef\u3002\n\n2\u3001\u4e24\u7ef4\u6570\u7ec4\u5f00\u4e0d\u4e0b\u3002\n\n\u89e3\u51b3\u65b9\u6cd5\uff1a\n\n\u53d1\u73b0\u7b2c\u4e00\u7ef4 $i$ \u53ea\u548c $i-1$ \u548c $i$ \u6709\u5173\uff0c\u53ef\u4ee5\u6eda\u52a8\u6389\u7b2c\u4e00\u7ef4\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u89e3\u51b3\u7a7a\u95f4\u95ee\u9898\u4e86\u3002\n\n\u4f46\u65f6\u95f4\u8fd8\u662f\u6709\u70b9\u7d27\u8feb\uff0c\u6211\u4eec\u4e0d\u59a8\u7528\u4e00\u4e2a\u7384\u5b66\u526a\u679d\uff08\u4e5f\u4e0d\u77e5\u9053\u80fd\u526a\u591a\u5c11\uff09\uff0c\u8bbe $k=j/i$ \u5982\u679c $k\\times i$ \u5927\u4e8e\u80fd\u88ab\u4e0d\u5927\u4e8e $p$ \u7684\u8d28\u56e0\u6570\u7ec4\u5408\u8d77\u6765\u7684\u6570\u4e2d\u6700\u5927\u7684\u6570\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u9000\u51fa\u4e86\u3002\n\n**Code**\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nint l,r,p,ans,a[3000001],f[3000001],prime[101],tot,cnt;\nbool bz[3000001],v[101];\nvoid dfs(int x,int s)\n{\n\ta[++cnt]=s;\n\tfor (int i=x;i<=tot;i++)\n\t\tif (prime[i]*(long long)s<=r) dfs(i,prime[i]*s);\n}\nint main()\n{\n\tscanf(\"%d%d%d\",&l,&r,&p);\n\tfor (int i=2;i<=p;i++)\n\t{\n\t\tif (!v[i]) prime[++tot]=i;\n\t\tfor (int j=1;j<=tot;j++)\n\t\t{\n\t\t\tif (i*prime[j]>p) break;\n\t\t\tv[i*prime[j]]=true;\n\t\t\tif (i%prime[j]==0) break;\n\t\t}\n\t}\n\tdfs(1,1);\n\tfor (int i=1;i<=cnt;i++) f[i]=0x3FFFFFFF;\n\tsort(a+1,a+cnt+1);\n\tf[1]=0;bz[1]=true;\n\tfor (int i=2;i<=p;i++)\n\t{\n\t\tint j=i;\n\t\tfor (int k=1;k<=cnt;k++)\n\t\t{\n\t\t\twhile (j<=cnt&&a[j]!=a[k]*i) j++;\n\t\t\tif (j>cnt) break;\n\t\t\tif (f[k]+1<f[j]) f[j]=f[k]+1;\n\t\t\tif (a[j]<l||bz[j]) continue;\n\t\t\tif (f[j]+i<=p) bz[j]=true,ans++;\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1580970059,
        "uid": 157857,
        "name": "ImmortalWatcher",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF261E \u3010Maxim and Calculator\u3011"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\uff1a\n\n\u6709\u4e24\u4e2a\u521d\u59cb\u53c2\u6570 $ a=1 $ \uff0c $ b=0 $ \uff0c\u4f60\u53ef\u4ee5\u5bf9\u5b83\u4eec\u8fdb\u884c\u4e24\u4e2a\u64cd\u4f5c\uff1a $ b~+=1 $ \u6216 $ a~\\times =b $ \uff0c\u6700\u7ec8\u7684 $ a $ \u624d\u662f\u4f60\u6240\u5f97\u5230\u7684\u6570 \u3002 \u73b0\u5728\u7ed9\u4f60\u4e09\u4e2a\u6570 $ l,r,p $ \uff0c\u8ba9\u4f60\u6c42\u5728\u533a\u95f4 $ [l,r] $ \u5185\u53ef\u4ee5\u7528\u4e0d\u8d85\u8fc7 $ p $ \u6b21\u64cd\u4f5c\u5f97\u5230\u7684\u6570\u7684\u4e2a\u6570\u3002\u6570\u636e\u8303\u56f4\uff1a $ (2<=l<=r<=10^{9},1<=p<=100) $ \n\n\n\n------\n\n------\n\n\n\n## $ solution: $ \n\n\u5f88\u795e\u4ed9\u7684\u4e00\u9053\u9898\uff0c\u5f53\u65f6\u770b\u4e86\u5f88\u4e45\u53ea\u80fd\u60f3\u5230\uff1a\u6bcf\u4e2a\u6211\u6240\u5f97\u5230\u7684\u6570\uff0c\u4e00\u5b9a\u662f\u82e5\u5e72\u4e2a\u53ef\u80fd\u4e0d\u540c\u7684 $ b $ \u7684\u4e58\u79ef,\u3002\u53c8\u56e0\u4e3a $ b $ \u6bcf\u6b21\u53ea\u80fd\u52a01\uff0c\u6240\u4ee5\u6211\u4eec\u5982\u679c\u8981\u7528\u6700\u5c11\u7684\u6b65\u6570\u5f97\u5230\u4e00\u4e2a\u6570 $ a $ \uff0c**\u6700\u7ec8 $ b $ \u7684\u5927\u5c0f\u4e00\u5b9a\u662f $ b $ \u7684\u6700\u5927\u8d28\u56e0\u5b50**\uff01\u540c\u7406\uff0c**\u6700\u5927\u8d28\u56e0\u5b50\u5927\u4e8e $ p $ \u7684\u6570\u4e00\u5b9a\u4e0d\u53ef\u901a\u8fc7\u5c11\u4e8e $ p $ \u7684\u6b21\u6570\u5f97\u5230**\uff01\n\n\u5f53\u65f6\u7684\u60f3\u6cd5\u662f\u7ebf\u6027\u7b5b\u6700\u5927\u8d28\u56e0\u5b50\uff0c\u7136\u540e\u66b4\u529b\u5224\u65ad\uff0c\u590d\u6742\u5ea6 $ O(n) $ \u663e\u7136\u8d85\u65f6\u3002\u7136\u540e\u6b7b\u6d3b\u6ca1\u60f3\u5230\u53ef\u4ee5\u7b5b $ p $ \u4ee5\u4e0b\u8d28\u6570\u6240\u6784\u6210\u7684\u6570\uff08 $ 10^9 $ \u91cc\u9762\u4e0d\u8d85\u8fc7 $ 3\\times 10^6 $ \u4e2a \uff09\uff01\n\n\u597d\u5427\uff0c\u56de\u5f52\u6b63\u9898\u3002\u6839\u636e\u4e0a\u9762\u6211\u4eec\u7684\u5206\u6790\uff0c\u6240\u6709\u6700\u5927\u8d28\u56e0\u5b50\u5927\u4e8e $ p $ \u7684\u6570\u4e00\u5b9a\u4e0d\u53ef\u901a\u8fc7\u5c11\u4e8e $ p $ \u7684\u6b21\u6570\u5f97\u5230\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u627e\u51fa\u6240\u6709\u6700\u5927\u8d28\u56e0\u5b50\u5728 $ p $ \u4ee5\u5185\u7684\u6570\u3002\u600e\u4e48\u6c42\uff1f\u8fd9\u5176\u5b9e\u7b49\u540c\u4e8e\u6c42 $ p $ \u4ee5\u5185\u7684\u6240\u6709\u8d28\u6570\u53ef\u4ee5\u6784\u9020\u7684\u6570\uff08\u6ce8\u610f\u9898\u76ee\u8bf4 $ 2\\leq r $ \uff0c\u6240\u4ee5\u4e0d\u8003\u86511\uff09\uff08\u7136\u540e\u6211\u4eec\u73b0\u7ebf\u6027\u7b5b\u8d28\u6570\uff0c\u518d\u641c\u7d22\u4e00\u4e0b\u5373\u53ef\uff09\u3002\u7136\u540e\u6211\u4eec\u53d1\u73b0\u8fd9\u6837\u7684\u6570\u4e0d\u8d85\u8fc7 $ 3\\times 10^6 $ \u4e2a\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u6570\u7ec4 $ a[] $ \u5b58\u8d77\u6765\u3002\u4e8e\u662f\u6211\u4eec\u8003\u8651\u600e\u4e48\u5224\u65ad $ a[] $ \u91cc\u9762\u7684\u6570\u662f\u5426\u80fd\u5728 $ p $ \u6b21\u64cd\u4f5c\u5185\u5f97\u5230\u3002\n\n\u9996\u5148\u6211\u4eec\u8981\u660e\u767d\u4e00\u4e2a\u70b9\uff1a\u6240\u6709 $ a[] $ \u91cc\u7684\u6570\u90fd\u53ef\u4ee5\u901a\u8fc7 $ a[] $ \u91cc\u6bd4\u5b83\u5c0f\u7684\u6570\u6784\u9020\u51fa\u6765\u3002\u8bc1\u660e\uff1a\u5bf9\u4e8e $ a[] $ \u91cc\u7684\u6570 $ i $  \uff0c\u5982\u679c\u5b83\u7684\u6700\u5927\u8d28\u56e0\u5b50\u4e3a $ k $ \uff0c\u90a3\u4e48 $ i/k $ \u4e00\u5b9a\u5728 $ a[] $ \u4e2d\uff0c\u56e0\u4e3a $ i/k $  \u7684\u6240\u6709\u8d28\u56e0\u5b50\u90fd\u5c0f\u4e8e $ p $ \u3002\u4e8e\u662f\u6211\u4eec\u8003\u8651 $ f[i][j] $ \u8868\u793a $ b $ \u7684\u5927\u5c0f\u4e3a $ i $ \u65f6 $ j $ \u7684\u6700\u5c0f\u6784\u9020\u6b65\u6570\u3002\u6211\u4eec\u4ece\u5c0f\u5230\u8fbe\u679a\u4e3e $ b $ \uff0c\u6bcf\u4e2a $ b $ \u53ef\u4ee5\u9009\u7528\u5f88\u591a\u6b21\uff0c\u8fd9\u4e0d\u5c31\u662f\u4e00\u4e2a\u5b8c\u5168\u80cc\u5305\u5417\uff1f\u4e0d\u8fc7\u662f $ b $ \u8981\u88ab\u4e58\u4e0a\u53bb\u800c\u5df2\uff01\u6ce8\u610f\u6211\u4eec\u7684 $ a[] $ \u6570\u7ec4\u662f\u79bb\u6563\u5316\u7684\uff0c\u6211\u4eec\u5148\u6392\u4e00\u904d\u5e8f\uff0c\u7136\u540e\u7528\u5355\u8c03\u961f\u5217\u627e\u5230 $ a[k]=a[j]*i $  \u5373\u53ef\u505a\u5230 $ O(1) $ \u8f6c\u79fb\uff01  \n\n#### $ f[i][k]=f[i][j]+1 \\quad (~a[j]\\times i=a[k]~) $ \n\n\u590d\u6742\u5ea6\uff1a $ O(p\\times 3 \\times 10^6) $ \uff0c\u5f88\u52c9\u5f3a\n\n\n\n------\n\n------\n\n\n\n## $ code: $ \n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<iomanip>\n#include<algorithm>\n#include<cstring>\n#include<cstdlib>\n#include<ctime>\n#include<cmath>\n#include<vector>\n#include<queue>\n#include<map>\n#include<set>\n\n#define ll long long\n#define db double\n#define rg register int\n\nusing namespace std;\n\nint l,r,p,n; // n\u8868\u793aa\u6570\u7ec4\u7684\u5927\u5c0f\nint ans,tt; // tt\u7d20\u6570\u4e2a\u6570\nint a[3000005]; //\u6700\u5927\u8d28\u56e0\u5b50\u5c0f\u4e8ep\u7684\u6570\u7684\u96c6\u5408\nint f[3000005]; //\u6784\u9020a[i]\u8fd9\u4e2a\u6570\u7684\u6700\u5c11\u6b65\u6570\nbool d[3000005]; //\u662f\u5426\u5df2\u7ecf\u52a0\u5165\u8d21\u732e\nint pr[505]; //\u7d20\u6570\u8868\nbool vis[505]; //\u7b5b\u7d20\u6570\n\ninline int qr(){\n\tregister char ch; register bool sign=0; rg res=0;\n\twhile(!isdigit(ch=getchar()))if(ch=='-')sign=1;\n\twhile(isdigit(ch))res=res*10+(ch^48),ch=getchar();\n\tif(sign)return -res; else return res;\n}\n\ninline void prime(int x){ //\u7ebf\u6027\u7b5b\u7d20\u6570\n    for(rg i=2;i<=x;++i){\n        if(!vis[i])pr[++tt]=i;\n        for(rg j=1;j<=tt;++j){\n            if(i*pr[j]>x)break;\n\t\t\tvis[i*pr[j]]=1;\n            if(!(i%pr[j]))break;\n        }\n    }\n}\n\n//\u627e\u5230\u6700\u5927\u8d28\u56e0\u5b50\u5c0f\u4e8ep\u7684\u6570\n//\u7b49\u6548\u4e8e\u6211\u4eec\u6784\u9020\u5c0f\u4e8ep\u7684\u8d28\u6570\u6240\u80fd\u6784\u9020\u7684\u6570\ninline void dfs(int i,ll v){ //i\u662f\u5f53\u524d\u8f6e\u5230\u7684\u8d28\u6570\n\tif(i>tt)return ; \n\tdfs(i+1,v); //\u4e0d\u7528\u8fd9\u4e2a\u8d28\u6570\n\twhile(1){\n\t\tv*=pr[i]; //\u4e0d\u65ad\u9009\u7528\u8fd9\u4e2a\u8d28\u6570\n\t\tif(v>r)return ; //\u9000\u51fa\n\t\tdfs(i+1,v);\n\t\ta[++n]=v; //\u8bb0\u5f55\u8fd9\u4e2a\u6570\n\t}\n}\n\nint main(){\n\tl=qr(); r=qr(); p=qr();\n\tprime(p); dfs(1,1); a[++n]=1; //\u9884\u5904\u7406\n\tsort(a+1,a+n+1); f[1]=0;\n\tfor(rg i=2;i<=n;++i) f[i]=101; //\u8d4b\u521d\u503c\u65e0\u7a77\u5927\n\tfor(rg i=2;i<=p;++i){\n\t\tfor(rg j=1,k=1;j<=n;++j){\n\t\t\twhile(k<=n&&a[j]*i>a[k])++k; //\u56e0\u4e3aa\u6570\u7ec4\u79bb\u6563\u5316\uff0c\u6240\u4ee5\u5355\u8c03\u961f\u5217\u67e5\u627e\n\t\t\tif(k>n)break; if(a[j]*i!=a[k])continue;\n\t\t\tf[k]=min(f[k],f[j]+1); //\u66f4\u65b0\u6b65\u6570\n\t\t\tif(d[k]||f[k]+i>p||a[k]<l)continue; //\u6ce8\u610f\u7b2c\u4e8c\u4e2a\u5224\u65ad\n\t\t\td[k]=1; ++ans; //\u6b65\u6570\u5728p\u8303\u56f4\u5185\uff0c\u8ba1\u5165\u7b54\u6848\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n\n```",
        "postTime": 1564842275,
        "uid": 111334,
        "name": "\u706f\u82af\u7cd5",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF261E \u3010Maxim and Calculator\u3011"
    },
    {
        "content": "\u6211\u4eec\u53d1\u73b0$b \u2264 p$\uff0c\u6240\u4ee5\u53ef\u4ee5\u5728a\u4e2d\u51fa\u73b0\u7684\u8d28\u56e0\u6570\u4e00\u5b9a\u4e0d\u4f1a\u8d85\u8fc7p\u3002\u641c\u7d22\u540e\u53ef\u4ee5\u53d1\u73b0$10^{9}$\u4e2d\u53ea\u6709\u4e0d\u5230300\u4e07\u4e2a\u6570\u6ee1\u8db3\u8981\u6c42\u3002\u90a3\u4e48\u6211\u4eec\u641c\u51fa\u6240\u6709\u2264R\u7684\u6570\uff0c\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5DP\u4e86\u3002\n\u6211\u4eec\u8bbe$f[i][j]$\u8868\u793ab\u6700\u5c11\u9700\u8981\u591a\u5c11\u6b21$a = a * b$\u7684\u64cd\u4f5c\u4f7f\u5f97$a=j$\uff0c\u90a3\u4e48\u8f6c\u79fb\u65b9\u7a0b\u4e5f\u5c31\u5341\u5206\u663e\u7136\u4e86\uff1a\n\n$f[i][j] = min(f[i-1][j], f[i][j / i])$\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(pn)\n$n\u662f\u72b6\u6001\u6570\n\n**Code**\n```cpp\n#include <cstdio>\n#include <algorithm>\n#define N 500010\n#define ll long long\n#define mem(x, a) memset(x, a, sizeof x)\n#define mpy(x, y) memcpy(x, y, sizeof y)\n#define fo(x, a, b) for (int x = (a); x <= (b); x++)\n#define fd(x, a, b) for (int x = (a); x >= (b); x--)\n#define go(x) for (int p = tail[x], v; p; p = e[p].fr)\nusing namespace std;\nint L, R, p, pri[110], gs = 0, ans = 0;\nint num[N * 6], tot = 0, f[N * 6];\nbool tag[N * 6];\n\ninline int read()\n{\n\tint x = 0, f = 0; char c = getchar();\n\twhile (c < '0' || c > '9') f = (c == '-') ? 1 : f, c = getchar();\n\twhile (c >= '0' && c <= '9') x = (x << 1) + (x << 3) + (c ^ 48), c = getchar();\n\treturn f ? -x : x;\n}\n\nvoid check(int x)\n{\n\tfor (int i = 2; i * i <= x; i++)\n\t\tif (x % i == 0) return;\n\tpri[++gs] = x;\n}\n\nvoid dfs(int x, int s, int fr)\n{\n\tnum[++tot] = s, f[tot] = p + 1;\n\tint yuan = tot;\n\tfo(i, x, gs)\n\t\tif ((ll)s * pri[i] <= R) dfs(i, s * pri[i], yuan);\n}\n\nint main()\n{\n\tL = read(), R = read(), p = read();\n\tfo(i, 2, p) check(i);\n\tdfs(1, 1, 0), f[1] = 0;\n\tsort(num + 1, num + tot + 1);\n\tfo(i, 2, p)\n\t{\n\t\tint now = 1;\n\t\tfo(j, 1, tot)\n\t\t{\n\t\t\tif (f[j] > p) continue;\n\t\t\twhile (now <= tot && num[now] != num[j] * i) now++;\n\t\t\tif (now > tot) break;\n\t\t\tf[now] = min(f[now], f[j] + 1);\n\t\t\tif (f[now] + i <= p && L <= num[now] && num[now] <= R && ! tag[now])\n\t\t\t\ttag[now] = 1, ans++;\n\t\t}\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1583148167,
        "uid": 119633,
        "name": "\u9ebb\u7701\u7406\u5de5\u5b66\u9662",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF261E \u3010Maxim and Calculator\u3011"
    },
    {
        "content": "\n## \u9898\u89e3\uff1a\n\n\u8fd9\u662f2019.10.16\u6a21\u62df\u8d5b\u7684\u4e00\u9053\u9898\u3002\n\n\u4e00\u5f00\u59cb\u6211\u53d1\u73b0\uff0c\u5982\u679c\u6bcf\u6b21\u64cd\u4f5c\u90fd\u52a0\u7684\u8bdd\uff0c\u90a3\u4e48\u64cd\u4f5c\u6570\u5bf9\u5e94\u7684\u7b54\u6848\u90fd\u662f\u53ef\u884c\u7684\uff08\u8fd9\u5f88\u663e\u7136\uff09\u3002\u4f46\u662f\u8fd9\u6837\u80af\u5b9a\u4e0d\u4f1a\u662f\u7b54\u6848\uff0c\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u7ee7\u7eed\u8003\u8651\u4e00\u79cd\u60c5\u51b5\uff1a\u64cd\u4f5c\u4e8c\uff0c\u4e58\u6cd5\u8fd0\u7b97\u3002\n\n\u7136\u540e\u6211\u60f3\u5230\u4e86\u6574\u6570\u7684\u552f\u4e00\u5206\u89e3\u5b9a\u7406\uff1a\u4e00\u4e2a\u6b63\u6574\u6570\u53ef\u4ee5\u88ab\u552f\u4e00\u5206\u89e3\u6210\u82e5\u5e72\u4e2a\u8d28\u6570\u7684\u4e58\u79ef\u3002\n\n\u8fd9\u4e2a\u601d\u8def\u7d27\u7d27\u5730\u6293\u4f4f\u4e86\u6211\u7684\u5fc3//\u90a3\u4e48\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u6570\uff0c\u6211\u4eec\u80af\u5b9a\u53ef\u4ee5\u7528\u7b97\u672f\u57fa\u672c\u5b9a\u7406\u628a\u5b83\u5206\u6210\u82e5\u5e72\u4e2a\u6570\u7684\u4e58\u79ef\uff0c\u90a3\u4e48\uff0c\u5982\u679c\u8fd9\u4e9b\u6570\u6700\u5927\u7684\u90a3\u4e2a\u548c\u8fd9\u4e9b\u6570\u7684\u4e2a\u6570\u7684\u548c\uff08\u6700\u5927\u7684\u6570+\u6570\u7684\u4e2a\u6570\uff09\u6bd4$p$\u5c0f\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u5c31\u662f\u5408\u6cd5\u7684\u3002\n\n\u8bc1\u660e\u662f\u663e\u7136\u7684\uff1a\u6211\u4eec\u64cd\u4f5c\u7684\u8fc7\u7a0b\u662f\u4ece1\u7d2f\u52a0\uff0c\u6bcf\u9022\u5230\u4e86\u8981\u4f5c\u4e3a$a$\u7684\u8d28\u56e0\u5b50\u7684\u6570\uff0c\u5c31\u591a\u7528\u4e00\u6b21\u64cd\u4f5c\u4e58\u8fc7\u53bb\uff0c\u8fd9\u6837\uff0c\u4e00\u76f4\u5230\u4e86\u6700\u540e\u7684\u8d28\u56e0\u5b50\uff08\u4e5f\u662f\u6700\u5927\u7684\uff09\uff0c\u5c31\u80fd\u4e58\u51fa$a$\u3002\n\n\u8fd9\u6837\u5c31\u786e\u5b9a\u4e86\u6211\u4eec\u7684\u5224\u5b9a\u601d\u8def\u3002\u4f46\u662f\u5982\u679c\u66b4\u529b\u679a\u4e3e\u7684\u8bdd\uff0cTLE\u662f\u6ca1\u8dd1\u7684\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u8fdb\u4e00\u6b65\u5f00\u59cb\u7ec6\u7ec6\u5730\u7422\u78e8\u600e\u4e48\u964d\u4f4e\u590d\u6742\u5ea6\u3002\n\n\u901a\u8fc7\u521a\u521a\u7684\u8bb2\u89e3\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u6570\u88ab\u552f\u4e00\u5206\u89e3\u6210\u82e5\u5e72\u4e2a\u8d28\u6570\u7684\u4e58\u79ef\uff0c\u5e76\u4e14\u5176\u6700\u5927\u7684\u8d28\u56e0\u5b50\u8981\u6bd4$p$\u8fd8\u8981\u5927\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u5c31\u6839\u672c\u4e0d\u53ef\u80fd\u5408\u6cd5\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53d1\u73b0\uff0c$b\\le p$\u662f\u5fc5\u987b\u7684\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u7ebf\u6027\u7b5b\u9009\u5904\u7406\u51fa$\\le p$\u7684\u6240\u6709\u8d28\u6570\uff0c\u5e76\u4e14\u901a\u8fc7\u6df1\u641c\u6765\u5904\u7406\u51fa\u6240\u6709\u80fd\u7528\u8fd9\u4e9b\u8d28\u6570\u8868\u793a\u51fa\u6765\uff08\u4e58\u51fa\u6765\uff09\u7684\u6570\u3002\n\n\u8fd9\u91cc\u7b80\u5355\u8bf4\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u8981\u7528\u6df1\u641c\uff1a\u6839\u636e\u7b97\u672f\u57fa\u672c\u5b9a\u7406\uff0c\u6211\u4eec\u4f1a\u6709\u5f88\u591a\u8d28\u6570\u6765\u4e58\u6210\u4e00\u4e2a\u5408\u6570\u3002\u800c\u4e14\uff0c\u8fd9\u4e9b\u8d28\u6570\u662f\u53ef\u4ee5\u91cd\u590d\u7684\uff1a\u4e5f\u5c31\u662f\u8bf4\uff0c\u666e\u901a\u7684\u5faa\u73af\u904d\u5386\u6839\u672c\u4e0d\u4f1a\u6ee1\u8db3\u8fd9\u6837\u7684\u8981\u6c42\uff0c\u6240\u4ee5\u9700\u8981\u901a\u8fc7\u9012\u5f52\u6c42\u89e3\uff08\u5373\u6df1\u641c\uff09\u3002\n\n\u4ee5\u4e0a\u90fd\u662f\u9884\u5904\u7406\u90e8\u5206\uff0c\u73b0\u5728\u6211\u4eec\u8981\u68c0\u9a8c\u8fd9\u4e9b\u6570\u662f\u5426\u80fd\u5728$\\le p $\u7684\u6b21\u6570\u5185\u51fa\u89e3\u3002\n\n~~\uff08\u5230\u8fd9\u4e2a\u5730\u65b9\u672c\u849f\u84bb\u5c31\u4e0d\u4f1a\u4e86\u3002\u6a21\u62df\u8d5b40\u5206*\uffe5%\uff09~~\n\n\u8fd9\u4e2a\u5730\u65b9\u8981\u7528$DP$\u6c42\u89e3......\n\n\u8bbe$f[i] [j]$\u8868\u793a\u628a\u7b2c\u4e00\u5143\u53d8\u6210$i$\uff0c\u7b2c\u4e8c\u5143\u53d8\u6210$j$\u6240\u7528\u7684\u64cd\u4f5c\u4e8c\u7684\u6700\u5c11\u6b21\u6570\u3002\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u8bbe\u7f6e\u5462\uff1f\u56e0\u4e3a\u64cd\u4f5c\u4e00\u4f5c\u4e3a\u52a0\u6cd5\uff0c\u662f\u53ef\u4ee5\u76f4\u63a5\u8ba1\u7b97\u51fa\u6765\u7684\u3002\u800c\u4e14\uff0c\u56e0\u4e3a\u8fd9\u6837\u8bbe\u7f6e\u8f6c\u79fb\u65b9\u7a0b\u4e00\u5b9a\u4f1a\u5bfc\u81f4\u7206\u7a7a\u95f4\uff0c\u7b2c\u4e8c\u7ef4\uff08\u8868\u793a\u7b2c\u4e8c\u5143\uff09\u4e00\u5b9a\u662f\u8981\u88ab\u6eda\u52a8\u6389\u7684\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u5bf9\u6df1\u641c\u5904\u7406\u51fa\u7684\u6570\u5217\u8fdb\u884c\u6392\u5e8f\u3002\u5916\u5c42\u679a\u4e3e$2-p$\uff0c\u5185\u5c42\u679a\u4e3e$1-tot$\uff08$tot$\u8868\u793a\u6570\u5217\u7684\u957f\u5ea6\uff09\uff0c\u5982\u679c$i|a[j]$\uff0c\u5219\u7528\u5355\u8c03\u961f\u5217\u6307\u9488\u5bfb\u627e$i\\times a[k]=a[j]$\uff0c\u8fd9\u65f6\u5c31\u7528$dp[k]$\u66f4\u65b0$dp[j]$\uff0c\u5224\u65ad\u5176\u52a0\u4e0a\u6570\u7684\u4e2a\u6570\uff08$i$\uff09\u662f\u5426\u8d85\u8fc7\u4e86$p$\u3002\n\n\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\uff08\u6ce8\u610f\u7a7a\u95f4\u8303\u56f4\uff0c\u4e0d\u7136\u4f1a\u6b7b\u5f97\u8d85\u7ea7\u60e8\uff09\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#define ll long long\nusing namespace std;\nconst int maxp=3*1e6+1;\nint l,r,p,ans;\nbool v[maxp],vis[maxp];\nint a[maxp],prime[maxp],dp[maxp],tot,cnt;\nvoid euler(int n)\n{\n    cnt=0;\n    for(int i=2;i<=n;i++)\n    {\n        if(!v[i])\n            prime[++cnt]=i;\n        for(int j=1;j<=cnt;j++)\n        {\n            if(i*prime[j]>=p)\n                break;\n            v[i*prime[j]]=1;\n            if(i%prime[j]==0)\n                break;\n        }\n    }\n}\nvoid scan(int x,int step)\n{\n    a[++tot]=x;\n    for(int i=step;i<=cnt;i++)\n    {\n        if(prime[i]*(ll)x<=r)\n            scan(prime[i]*x,i);\n        else\n            return;\n    }\n}\nint main()\n{\n    scanf(\"%d%d%d\",&l,&r,&p);\n    euler(p-1);\n    scan(1,1);\n    sort(a+1,a+tot+1);\n    memset(dp,0x3f,sizeof(dp)); \n    dp[1]=0;\n    for(int i=2;i<=p;i++) \n    {\n        int k=1;\n        for(int j=1;j<=tot;j++) \n            if(a[j]%i==0)\n            {\n                while(a[k]*i<a[j]) \n                    k++;\n                dp[j]=min(dp[j],dp[k]+1);\n                if(dp[j]+i<=p) \n                    vis[j]=1;\n            }\n    }\n    for(int i=1;i<=tot;i++) \n        if(vis[i] && a[i]>=l) \n            ans++;\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1571209167,
        "uid": 175131,
        "name": "\u5085\u601d\u7ef4666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF261E \u3010Maxim and Calculator\u3011"
    }
]