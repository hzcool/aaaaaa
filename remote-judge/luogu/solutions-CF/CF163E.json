[
    {
        "content": "~~\u5148\u6253\u5e7f\u544a~~\uff1a[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\uff01](https://www.cnblogs.com/whale-at-cola/p/solution-cf163e.html)\n\n### \u9898\u610f\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF163E)\n\n\u9898\u76ee\u8981\u6c42\u5728\u4e00\u4e2a\u53ef\u4fee\u6539\u7684\u5b57\u7b26\u4e32\u96c6\u4e2d\u8fdb\u884c\u591a\u6a21\u5339\u914d\uff0c\u6dfb\u52a0\u548c\u5220\u9664\u7684\u5b57\u7b26\u4e32\u5728\u4e00\u5f00\u59cb\u7ed9\u51fa\u3002\n\n### \u601d\u8def\u8fc7\u7a0b\n\n\u770b\u5230\u591a\u6a21\u5339\u914d\uff0c\u9996\u5148\u60f3\u5230 AC \u81ea\u52a8\u673a\uff0c\u4f46\u662f\u8fd9\u9053\u9898\u76ee\u4f1a\u5220\u9664\u539f\u6709\u5b57\u7b26\u4e32\uff0c\u6240\u4ee5\u8003\u8651\u5728 AC \u81ea\u52a8\u673a\u6a21\u677f\u7684\u591a\u6a21\u5339\u914d\u4e0a\u8fdb\u884c\u4fee\u6539\u3002\n\nAC \u81ea\u52a8\u673a\uff08\u666e\u901a\uff09\uff1a\u5efa\u4e00\u68f5 Trie\uff0c\u5728\u6bcf\u4e2a\u5b57\u7b26\u4e32\u7ed3\u5c3e\u8282\u70b9\u6807\u8bb0 $end$ \u4e3a $1$\uff0c\u5efa fail \u6811\u548c Trie \u56fe\uff0c\u5efa fail \u6811\u65f6\u6cbf\u6811\u679d\u8fb9\u4e0b\u4f20 $end$ \u8282\u70b9\u6570\uff0c\u5728 Trie \u56fe\u4e0a\u8dd1\u8282\u70b9\uff0c\u7d2f\u52a0\u8dd1\u5230\u8282\u70b9\u7684 $end$ \u4e3a\u7b54\u6848\u3002\n\n\u90a3\u6b64\u9898\u8981\u600e\u4e48\u505a\u5462\uff1f\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u4e00\u4e2a\u8282\u70b9\u7684 $end$ \u4e3a\u5728\u5b83\u81ea\u8eab\u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32\u6570\u52a0\u4e0a\u5b83\u5728 fail \u6811\u4e0a\u7684\u7956\u5148\u8282\u70b9\u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32\u6811\u3002\n\n\u6240\u4ee5\uff0c\u5220\u53bb\u4e00\u4e2a\u5b57\u7b26\u4e32\u5c31\u662f\u627e\u5230\u5b83\u5c3e\u90e8\u5b57\u7b26\u6240\u5bf9\u5e94\u7684\u8282\u70b9\uff0c\u7136\u540e\u5c06 fail \u6811\u4e2d\u6b64\u8282\u70b9\u7684\u5b50\u6811\u4e0a\u7684\u6bcf\u4e2a\u70b9\uff08\u4e5f\u5c31\u662f\u6bcf\u4e2a\u4ee5\u6b64\u8282\u70b9\u4e3a\u7956\u5148\u7684\u8282\u70b9\uff09\u7684 $end$ \u503c $-1$\u3002\n\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u5220\u9664\u548c\u6dfb\u52a0\u64cd\u4f5c\u5c31\u662f\u5728\u4e00\u9897\u6811\u4e0a\u6bcf\u6b21\u627e\u4e00\u4e2a\u8282\u70b9\uff0c\u5c06\u5b83\u5b50\u6811\u4e2d\u6240\u6709\u70b9\u7684\u6743\u503c\u52a0 $1$ \u6216\u51cf $1$\u3002\n\n\u540c\u7406\uff0c\u8be2\u95ee\u64cd\u4f5c\u5c31\u662f\u5728\u6811\u4e0a\u8be2\u95ee\u4e00\u4e2a\u8282\u70b9\u7684\u6743\u3002\n\n\u5728\u9884\u5904\u7406\u51fa\u8fd9\u68f5\u6811\u7684 dfs \u5e8f\u540e\uff0c\u64cd\u4f5c\u5c31\u53ef\u4ee5\u4e86\u533a\u95f4\u4fee\u6539\u3001\u5355\u70b9\u67e5\u8be2\u7684\u88f8\u7ebf\u6bb5\u6811/\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u3002\n\n\u56e0\u4e3a~~\u5199\u5f97\u66f4\u5c11~~\u5e38\u6570\u5c0f\uff0c\u6211\u9009\u7684\u6811\u72b6\u6570\u7ec4\u3002\n\n### code\n```cpp\n#include<cstdio>\n#include<queue>\nusing std::queue;\n#define re register\n#define fr(k) for(re int k=0;k<26;k++)\n\nconst int N=1e6+9;\nint t,cnt,tot,tr[N][26],fail[N],id[N],xl[N],xr[N],h[N],v[N],ne[N];\nchar s[N];\nbool del[N];\n\nstruct BIT{\n\tint f[N],n;\n\tinline void add(int p,int q,int k){\n\t\tfor(;p<=n;p+=(p&-p)) f[p]+=k;\n\t\tfor(;q<=n;q+=(q&-q)) f[q]-=k;\n\t}\n\tinline int ask(int x){int res=0;for(;x;x^=(x&-x)) res+=f[x];return res;}\n}bit;\n\ninline void addedge(int x,int y){v[++t]=y,ne[t]=h[x],h[x]=t;}\ninline void adds(int k){\n\tint x=0,i=0,p;\n\tscanf(\"%s\",s+1);\n\twhile(s[++i]) p=s[i]-'a',x=tr[x][p]?tr[x][p]:(tr[x][p]=++tot);\n\tid[k]=x;\n}\ninline void buildfail(){\n\tint x;queue<int> q;\n\tfr(k) if(tr[0][k]) addedge(0,tr[0][k]),q.push(tr[0][k]);\n\twhile(!q.empty()){\n\t\tx=q.front(),q.pop();\n\t\tfr(k)\n\t\t\tif(tr[x][k]) fail[tr[x][k]]=tr[fail[x]][k],addedge(fail[tr[x][k]],tr[x][k]),q.push(tr[x][k]);\n\t\t\telse tr[x][k]=tr[fail[x]][k];\n\t}\n}\nvoid dfs(int x){\n\txl[x]=++cnt;\n\tfor(re int i=h[x];i;i=ne[i]) dfs(v[i]);\n\txr[x]=cnt+1;\t\n}\ninline int query(){\n\tint x=0,i=0,ans=0;\n\twhile(s[++i])\n\t\tx=tr[x][s[i]-'a'],ans+=bit.ask(xl[x]);\n\treturn ans;\n}\n\nint main(){\n\tint q,n;scanf(\"%d%d\",&q,&n);\n\tfor(re int i=1;i<=n;i++) adds(i);\n\tbuildfail(),dfs(0);bit.n=cnt;\n\tfor(re int i=1;i<=n;i++) bit.add(xl[id[i]],xr[id[i]],1);\n\tfor(re int i=1,x,j;i<=q;i++){\n\t\tscanf(\"%s\",s);\n\t\tif(s[0]=='?'){printf(\"%d\\n\",query());continue;}\n\t\tj=0,x=0;\n\t\twhile(s[++j]) x=(x<<3)+(x<<1)+(s[j]^48);\n\t\tif(s[0]=='-'){if(!del[x]) del[x]=1,bit.add(xl[id[x]],xr[id[x]],-1);}\n\t\telse {if(del[x])  del[x]=0,bit.add(xl[id[x]],xr[id[x]],1);}\n\t}\n\treturn 0;\n}\n\n```\n\n\u7403\u70b9\u4e2a\u8d5e\uff0c\u8c22\u8c22\uff01",
        "postTime": 1625311560,
        "uid": 232349,
        "name": "WhaleAtCola",
        "ccfLevel": 9,
        "title": "\u3010\u9898\u89e3\u3011CF163E e-Government"
    },
    {
        "content": "\u5230\u849f\u84bb\u6e29\u6696\u7684\u535a\u5ba2\u56ed\u91cc\u770b $\\to$ [$\\tt George1123$](https://www.cnblogs.com/Wendigo/p/13381049.html)\n\n---\n## \u9898\u9762\n\n> [CF163E e-Government](https://www.luogu.com.cn/problem/CF163E)\n\n> \u7ed9 $n$ \u4e2a\u5b57\u7b26\u4e32 $s_i$ \u548c $q$ \u4e2a\u8be2\u95ee\uff0c\u521a\u5f00\u59cb\u5b57\u7b26\u4e32\u90fd\u670d\u5f79\u3002\u6bcf\u6b21\u64cd\u4f5c\u5c06\u96c6\u5408\u4e2d\u7684\u4e00\u4e2a\u5b57\u7b26\u4e32\u8bbe\u4e3a\u9000\u5f79\u6216\u670d\u5f79\uff0c\u6216\u67e5\u8be2\u4e0e\u6587\u672c\u4e32 $S_i$ \u7684\u5339\u914d\u7684\u670d\u5f79\u5b57\u7b26\u4e32\u603b\u6b21\u6570\u3002\n\n> \u6570\u636e\u8303\u56f4\uff1a$1\\le n,q\\le 10^5$\uff0c$1\\le \\sum|s_i|,\\sum|S_i|\\le 10^6$\u3002\n\n---\n## \u849f\u84bb\u8bed\n\n\u8fd9\u662f\u4e2aAC\u81ea\u52a8\u673a\u7684\u5957\u8def\u9898\uff0c\u4f46\u662f\u6bd5\u7adf\u5957\u8def\u5de7\u5999\u800c\u4e14\u4e0d\u5f97\u4e0d\u5b66\uff0c\u6240\u4ee5\u849f\u84bb\u5199\u4e00\u7bc7\u9898\u89e3\u3002\n\n---\n## \u849f\u84bb\u89e3\n\n\u5f53\u8fd9\u9898\u7684\u5b57\u7b26\u4e32\u4e0d\u9000\u5f79\u65f6\uff0c\u8fd9\u5c31\u662fAC\u81ea\u52a8\u673a\u7684\u6a21\u677f\u3002\n\n\u56de\u5fc6\u4e00\u4e0b\u849f\u84bb\u4eec\u662f\u600e\u4e48\u505a\u7684\uff1a\u5148\u5efa\u4e00\u68f5Trie\u6811\uff0c\u5728\u6709\u5b57\u7b26\u4e32\u7ec8\u6b62\u8282\u70b9\u7684\u4f4d\u7f6e $tag=1$\u3002\u7136\u540e\u8003\u8651\u5230\u5305\u542b\u4e00\u4e2a\u5b57\u7b26\u4e32\u5fc5\u7136\u5305\u542b\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u540e\u7f00\uff0c\u5efa\u7acb $fail$ \u94fe\u6210\u4e3aAC\u81ea\u52a8\u673a\uff0c$fail$ \u94fe\u8fde\u63a5\u8282\u70b9\u6210\u4e3a $parent$ \u6811\uff0c\u91cd\u7b97\u4e00\u4e2a\u8282\u70b9\u7684 $tag$ \u4e3a\u5b83\u5728 $parent$ \u6811\u4e0a\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u7684\u8282\u70b9\u7684 $tag$ \u4e4b\u548c\u3002\u6bcf\u6b21\u5339\u914d\u7684\u65f6\u5019\uff0c\u5728AC\u81ea\u52a8\u673a\u4e0a\u8dd1\u4e00\u904d\u6587\u672c\u4e32\uff0c\u7d2f\u8ba1\u4e00\u4e0b $tag$ \u5373\u53ef\u3002\n\n\u8ba9\u4e00\u4e2a\u5b57\u7b26\u4e32\u9000\u5f79\uff0c\u5c31\u76f8\u5f53\u4e8e\u5c06\u8be5\u5b57\u7b26\u4e32\u5728Trie\u6811\u4e0a\u7684\u7ec8\u6b62\u8282\u70b9 $p$ \u7684 $tag=1$ \u53d8\u6210 $tag=0$\u3002\u5efaAC\u81ea\u52a8\u673a\u91cd\u7b97 $tag$ \u7684\u65f6\u5019\uff0c\u6bcf\u4e2a\u5728 $parent$ \u6811\u4e0a\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u5305\u542b $p$ \u7684\u8282\u70b9\u7684 $tag$ \u90fd\u4f1a\u51cf $1$\u3002**\u5bb9\u6613\u53d1\u73b0 $tag$ \u51cf\u4e86 $1$ \u7684\u8282\u70b9\uff0c\u6b63\u597d\u5c31\u662f $parent$ \u6811\u4e0a $p$ \u7684\u5b50\u6811\u3002**\n\n\u8fd9\u65f6\u5019\u5c31\u53ef\u4ee5\u505a\u4e86\uff0c\u5de8\u4f6c\u53ef\u4ee5\u5199\u4e2a\u6811\u94fe\u5256\u5206\u6216LinkCutTree\u3002\u4f46\u662f\u8003\u8651\u5230\u8fd9\u9898\u53ea\u9700\u8981\u64cd\u4f5c\u5b50\u6811\uff0c\u4e0d\u9700\u8981\u64cd\u4f5c\u94fe\uff0c\u6240\u4ee5\u53ef\u4ee5\u4e0d\u5199\u8f7b\u91cd\u94fe\u5256\u5206\uff0c\u6c42\u6bcf\u4e2a\u8282\u70b9\u7684 $dfs$ \u5e8f\u53ca\u5176\u5b50\u6811\u7684 $dfs$ \u5e8f\u533a\u95f4\u5373\u53ef\u3002\u533a\u95f4\u4fee\u6539\u3001\u5355\u70b9\u67e5\u8be2\u53ef\u4ee5\u7528\u5dee\u5206\u52a0\u6811\u72b6\u6570\u7ec4\u3002\n\n\u5f53\u7136\u8fd9\u9898\u6709\u5f88\u591a\u7ec6\u8282\uff0c\u800c\u4e14\u4ee3\u7801\u5f88\u957f\uff0c\u4f30\u8ba1\u80fd\u5199\u5199\u8c03\u8c03\u597d\u4e45\u2026\u2026\u770b\u849f\u84bb\u4ee3\u7801\u5427\u3002\n\n---\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n//Start\ntypedef long long ll;\ntypedef double db;\n#define mp(a,b) make_pair(a,b)\n#define x first\n#define y second\n#define be(a) a.begin()\n#define en(a) a.end()\n#define sz(a) int((a).size())\n#define pb(a) push_back(a)\nconst int inf=0x3f3f3f3f;\nconst ll INF=0x3f3f3f3f3f3f3f3f;\n\n//Data\nconst int N=1e5,M=1e6+1;\nint n,at[N];\nbool vis[N];\n\n//FenwickTree\nint c[M+2];\nvoid add(int x,int v){\n\tfor(int i=x+1;i<M+2;i+=i&-i) c[i]+=v;\n}\nint sum(int x){\n\tint res=0;\n\tfor(int i=x+1;i>=1;i-=i&-i) res+=c[i];\n\treturn res;\n}\n\n//ACAM\nint cnt=1,ch[M][26];\nvoid insert(int x,string&s){\n\tint p=0;\n\tfor(int i=0;i<sz(s);i++){\n\t\tint c=s[i]-'a';\n\t\tif(!~ch[p][c]) ch[p][c]=cnt++;\n\t\tp=ch[p][c];\n\t}\n\tat[x]=p; //\u8bb0\u5f55\u7b2cx\u4e2a\u5b57\u7b26\u4e32\u7684\u7ec8\u6b62\u8282\u70b9\uff0c\u65b9\u4fbf\u67e5\u627edfs\u5e8f\n}\nint fa[M],ind,ld[M],rd[M];//[ld,rd)\u662f\u81ea\u52a8\u673a\u8282\u70b9\u7684\u5b50\u6811dfs\u5e8f\u533a\u95f4\uff0cld\u6b63\u597d\u662f\u8be5\u8282\u70b9\u7684dfs\u5e8f\nvector<int> e[M];\nvoid Dfs(int p){\n\tld[p]=ind++;\n\tfor(int v:e[p]) Dfs(v);\n\trd[p]=ind;\n}\nvoid build(){\n\tqueue<int> q;\n\tfor(int c=0;c<26;c++)\n\t\tif(~ch[0][c]){\n\t\t\tfa[ch[0][c]]=0;\n\t\t\te[0].pb(ch[0][c]); //\u52a0\u8fb9\u5efaparent\u6811\n\t\t\t// cout<<0<<\"->\"<<ch[0][c]<<'\\n';\n\t\t\tq.push(ch[0][c]); \n\t\t} else ch[0][c]=0;\n\twhile(sz(q)){\n\t\tint p=q.front(); q.pop();\n\t\tfor(int c=0;c<26;c++)\n\t\t\tif(~ch[p][c]){\n\t\t\t\tfa[ch[p][c]]=ch[fa[p]][c];\n\t\t\t\te[fa[ch[p][c]]].pb(ch[p][c]); //\u52a0\u8fb9\u5efaparent\u6811\n\t\t\t\t// cout<<fa[ch[p][c]]<<\"->\"<<ch[p][c]<<'\\n';\n\t\t\t\tq.push(ch[p][c]);\n\t\t\t} else ch[p][c]=ch[fa[p]][c];\n\t}\n\tDfs(0);\n}\n\n//Main\nint main(){\n\tios::sync_with_stdio(0);\n\tcin.tie(0),cout.tie(0);\n\tint T; cin>>T>>n;\n\tfor(int p=0;p<M;p++){\n\t\tfa[p]=-1;\n\t\tfor(int c=0;c<26;c++) ch[p][c]=-1;\n\t}\n\tfor(int i=0;i<n;i++){\n\t\tstring s; cin>>s;\n\t\tinsert(i,s);\n\t}\n\tbuild();\n\tfor(int i=0;i<n;i++) //\u521a\u5f00\u59cb\u5b57\u7b26\u4e32\u90fd\u670d\u5f79\n\t\tvis[i]=1,add(ld[at[i]],1),add(rd[at[i]],-1);\n\twhile(T--){\n\t\tchar c;\tcin>>c;\n\t\tif(c=='+'){\n\t\t\tint i; cin>>i,--i;\n\t\t\tif(vis[i]) continue;\n\t\t\tvis[i]=1,add(ld[at[i]],1),add(rd[at[i]],-1);\n\t\t} else if(c=='-'){\n\t\t\tint i; cin>>i,--i;\n\t\t\tif(!vis[i]) continue;\n\t\t\tvis[i]=0,add(ld[at[i]],-1),add(rd[at[i]],1);\n\t\t} else if(c=='?'){\n\t\t\tstring s; cin>>s;\n\t\t\tint res=0,p=0;\n\t\t\tfor(int i=0;i<sz(s);i++){\n\t\t\t\tint c=s[i]-'a';\n\t\t\t\tp=ch[p][c],res+=sum(ld[p]);\n\t\t\t}\n\t\t\tcout<<res<<'\\n';\n\t\t}\n\t}\n\treturn 0;\n}\n```\n---\n**\u795d\u5927\u5bb6\u5b66\u4e60\u6109\u5feb\uff01**",
        "postTime": 1595755495,
        "uid": 118365,
        "name": "George1123",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF163E \u3010e-Government\u3011"
    },
    {
        "content": "> ### VII. [CF163E e-Government](https://www.luogu.com.cn/problem/CF163E)\n> \n> \u9009\u81ea [ACAM \u4e71\u505a](https://www.cnblogs.com/alex-wei/p/ACAM.html) \u9898 7\u3002\n\n\u597d\u4e45\u6ca1\u5199 ACAM\uff0c\u90fd\u5feb\u5fd8\u6389\u4e86\u3002\n\n\u663e\u7136\uff0c\u5bf9\u4e8e\u8fd9\u7c7b\u5b57\u7b26\u4e32\u5339\u914d\u95ee\u9898\uff0c\u6211\u4eec\u6700\u597d\u7684\u9009\u62e9\u662f ~~SAM~~ ACAM\u3002\u5f53\u7136\u8fd9\u9898\u5e94\u8be5\u4e5f\u53ef\u4ee5\u7528\u5e7f\u4e49 SAM \u6765\u505a\uff0c\u5c31\u662f\u628a\u6240\u6709\u8be2\u95ee\u7684\u5b57\u7b26\u4e32\u548c\u539f\u6765\u7684\u5b57\u7b26\u4e32\u5168\u90e8\u62ff\u8fc7\u6765\u641e\u4e00\u4e2a\u5e7f\u4e49 SAM\uff0c\u4fee\u6539\u5c31\u7c7b\u4f3c ACAM \u7528 fail \u6811\u7684 dfs \u5e8f + BIT \u7ef4\u62a4\u4e00\u4e0b\u5373\u53ef\u3002\n\n~~\u4e00\u4e0d\u5c0f\u5fc3\u76f4\u63a5\u8bb2\u5b8c\u4e86\u3002~~\n\n\u9996\u5148\u5bf9\u5b57\u7b26\u4e32\u96c6\u5408 $S$ \u5efa\u51fa ACAM $T_S$\u3002\u8003\u8651\u7528\u67e5\u8be2\u7684\u5b57\u7b26\u4e32 $t$ \u5728 $T_S$ \u4e0a\u9762\u8df3\u3002\u6839\u636e ACAM \u7684\u5b9e\u9645\u610f\u4e49\uff0c\u5047\u8bbe\u5f53\u524d\u901a\u8fc7\u5b57\u7b26 $t_i$ \u8df3\u5230\u4e86\u8282\u70b9 $p$\uff0c\u90a3\u4e48\u5728 fail \u6811\u4e0a\u4ece $p$ \u5230\u6839\u8282\u70b9\u8fd9\u4e00\u6574\u6761\u8def\u5f84\u4e0a\u7684\u6240\u6709\u8282\u70b9\u90fd\u8868\u793a\u4ee5 $t_i$ \u7ed3\u5c3e\u4e14\u4e0e $t_{1\\sim i}$ \u7684\u540e\u7f00\u5339\u914d\u7684 $S$ \u7684\u6240\u6709\u524d\u7f00\u7684**\u5168\u65b0\u7684\u4e00\u6b21\u51fa\u73b0**\u3002\u5bf9\u4e8e $S$ \u7684\u6bcf\u4e2a\u5b57\u7b26\u4e32\u8bb0\u5f55\u5b83\u5728 $T_s$ \u7684\u672b\u8282\u70b9\uff0c\u8fd9\u6837\u5c31\u662f\u5355\u70b9\u4fee\u6539 + \u94fe\u548c\uff0c\u53ef\u4ee5\u7528\u6811\u94fe\u5256\u5206\u7ef4\u62a4\u3002\n\n\u4f46\u662f\uff0c\u56e0\u4e3a**\u94fe\u7684\u9876\u7aef\u662f\u6839\u8282\u70b9**\uff0c\u6240\u4ee5\u6709\u4e00\u4e2a\u7ecf\u5178\u7684**\u5355\u70b9\u4fee\u6539 + \u94fe\u548c \u8f6c \u5b50\u6811\u4fee\u6539 + \u5355\u70b9\u67e5\u8be2**\u7684\u7ecf\u5178\u5957\u8def\uff1a\u5bf9\u4e8e\u6bcf\u6b21\u5355\u70b9\u4fee\u6539\uff0c\u5c06\u5176\u5f71\u54cd\u6269\u5927\u81f3\u8be5\u70b9\u7684\u6574\u4e2a\u5b50\u6811\uff0c\u90a3\u4e48\u6bcf\u6b21\u94fe\u548c\u67e5\u8be2\u53ea\u9700\u8981\u6c42\u94fe\u5e95\u8fd9\u4e00\u70b9\u7684\u503c\u5373\u53ef\u3002\u663e\u7136\uff0c\u540e\u8005\u53ef\u4ee5 dfs \u5e8f + BIT \u8f7b\u677e\u7ef4\u62a4\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(m\\log m)$\uff0c\u5176\u4e2d $m$ \u662f\u5b57\u5178\u5927\u5c0f\u3002\n\n\u4e24\u4e2a\u6ce8\u610f\u70b9\uff1a\n\n- \u591a\u6b21\u91cd\u590d\u6dfb\u52a0\u7b97\u4e00\u6b21\uff0c\u5220\u9664\u4e5f\u662f\u3002\n- BIT \u5faa\u73af\u4e0a\u754c\u4e0d\u662f $n$ \u800c\u662f ACAM \u8282\u70b9\u4e2a\u6570\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N=1e6+5;\n\nint n,k,buc[N];\nint node,ed[N],son[N][26],fa[N];\nvector <int> e[N];\nvoid ins(string s,int id){\n\tint p=0;\n\tfor(char it:s){\n\t\tif(!son[p][it-'a'])son[p][it-'a']=++node;\n\t\tp=son[p][it-'a'];\n\t} ed[id]=p;\n}\nvoid build(){\n\tqueue <int> q;\n\tfor(int i=0;i<26;i++)if(son[0][i])q.push(son[0][i]);\n\twhile(!q.empty()){\n\t\tint t=q.front(); q.pop();\n\t\tfor(int i=0;i<26;i++)\n\t\t\tif(son[t][i])fa[son[t][i]]=son[fa[t]][i],q.push(son[t][i]);\n\t\t\telse son[t][i]=son[fa[t]][i];\n\t\te[fa[t]].push_back(t);\n\t}\n}\n\nint dnum,dfn[N],sz[N],c[N];\nvoid add(int x,int v){while(x<=node)c[x]+=v,x+=x&-x;}\nint query(int x){int s=0; while(x)s+=c[x],x-=x&-x; return s;}\nvoid dfs(int id){\n\tdfn[id]=dnum++,sz[id]=1;\n\tfor(int it:e[id])dfs(it),sz[id]+=sz[it]; \n}\n\nint main(){\n\tcin>>n>>k;\n\tfor(int i=1;i<=k;i++){\n\t\tstring s; cin>>s,ins(s,i);\n\t}\n\tbuild(),dfs(0);\n\tfor(int i=1;i<=k;i++){\n\t\tint id=ed[i];\n\t\tadd(dfn[id],1);\n\t\tadd(dfn[id]+sz[id],-1);\n\t\tbuc[i]=1;\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tchar c; cin>>c;\n\t\tif(c=='?'){\n\t\t\tstring s; cin>>s;\n\t\t\tlong long p=0,ans=0;\n\t\t\tfor(char it:s){\n\t\t\t\tp=son[p][it-'a'];\n\t\t\t\tans+=query(dfn[p]);\n\t\t\t}\n\t\t\tcout<<ans<<endl;\n\t\t}\n\t\telse if(c=='-'){\n\t\t\tint id; cin>>id;\n\t\t\tif(!buc[id])continue;\n\t\t\tbuc[id]=0;\n\t\t\tid=ed[id];\n\t\t\tadd(dfn[id],-1);\n\t\t\tadd(dfn[id]+sz[id],1);\n\t\t}\n\t\telse if(c=='+'){\n\t\t\tint id; cin>>id;\n\t\t\tif(buc[id])continue;\n\t\t\tbuc[id]=1;\n\t\t\tid=ed[id];\n\t\t\tadd(dfn[id],1);\n\t\t\tadd(dfn[id]+sz[id],-1);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1626823886,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "CF163E e-Government"
    },
    {
        "content": "$\\Large\\natural$ **CF163E e-Government \\ [\u539f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/CF163E) \\ [\u66f4\u597d\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/BlankAo/p/14375198.html)**\n\n## \u89e3\u6cd5\n\n\u8fd9\u79cd\u9898\u7b97\u662f\u6bd4\u8f83\u5957\u8def\u7684\u4e86\uff0c\u6211\u4eec\u770b\u89c1\u8fd9\u79cd\u591a\u5b57\u7b26\u4e32\u5339\u914d\uff0c\u4f1a\u60f3\u5230**AC\u81ea\u52a8\u673a**\u3002\n\n\u5982\u679c\u4e0d\u4f1a**AC\u81ea\u52a8\u673a**\u7684\u53ef\u4ee5\u770b\u770b [\u6211\u7684\u535a\u5ba2](https://www.cnblogs.com/BlankAo/p/14373027.html) \uff0c\u5e0c\u671b\u80fd\u7ed9\u60a8\u5e26\u6765\u5e2e\u52a9\u3002\n\n\u90a3\u4e48\u5982\u679c\u6211\u4eec\u5bf9\u4e8e\u6240\u6709\u5b57\u5178\u6811\u8282\u70b9\u8fde\u8fb9 $i-fail_i$\uff08\u6839\u8282\u70b9\u6ca1\u6709 $fail$\uff0c\u4e0d\u8fde\u8fb9\uff09\uff0c\u90a3\u4e48\u5c31\u5f97\u5230\u4e86\u4e00\u68f5 **Fail\u6811**\u3002\n\n\u90a3\u4e48\uff0c\u5982\u679c\u4e00\u53f7\u70b9\u4e3a\u6839\u8282\u70b9\uff0c\u90a3\u6240\u6709 $fail$ \u76f4\u63a5\u6216\u95f4\u63a5\u6307\u5411 $i$ \u53f7\u70b9\u7684\u8282\u70b9\uff0c\u90fd\u5728 $i$ \u7684\u5b50\u6811\u4e2d\u3002\n\n\u6240\u4ee5\u67e5\u8be2\u5b57\u7b26\u4e32 $X$ \u5728\u5b57\u7b26\u4e32 $Y$ \u4e2d\u51fa\u73b0\u51e0\u6b21\uff0c\u7b49\u4ef7\u4e8e\u5efa\u51fa **Trie** \u548c **Fail\u6811** \u540e\uff0c\u5728 **Fail\u6811\u4e2d** \u4ee5 \u201c$X$\u7684\u7ed3\u675f\u8282\u70b9\u201d\uff08\u8bbe\u4e3a $i$\uff09 \u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u6709\u591a\u5c11\u4e2a $Y$ \u5305\u542b\u7684\u8282\u70b9\u3002\n\n\u4e0d\u7406\u89e3\u53ef\u4ee5\u770b\u8fd9\u89e3\u91ca\uff1a\u6bd4\u5982 $j$ \u53f7\u70b9\u662f $Y$ \u6240\u5305\u542b\u7684\uff0c\u662f $Y$ \u7684\u7b2c $id$ \u4e2a\u8282\u70b9\uff0c\u90a3\u4e48\u4ee3\u8868\u5728 $Y$ \u67e5\u8be2\u65f6\uff0c$j$ \u8dd1 $fail$ \u53ef\u4ee5\u8dd1\u51fa $X$\uff0c\u6240\u4ee5 $X$ \u662f $Y$ \u4e2d $1\\sim id$ \u8fd9\u4e2a\u5b50\u4e32\u7684\u540e\u7f00\u3002 \n\n\u5148\u60f3\u60f3\u53ea\u6709\u8be2\u95ee\u600e\u4e48\u505a\uff1a\n\n\u8bbe\u8be2\u95ee\u7684\u5b57\u7b26\u4e32\u4e3a $T$\uff0c\u5219\u663e\u7136\u6709\u8fd9\u6837\u4e00\u4e2a\u65b9\u6cd5\uff1a\u8ba9 $T$ \u5728 **Trie** \u4e0a\u8dd1\uff0c\u7ecf\u8fc7\u7684\u70b9\u5bf9\u4e8e\u7684 **Fail\u6811\u8282\u70b9**\u6743\u503c\u52a0\u4e00\u3002\u8bbe\u4e00\u4e2a\u5b57\u7b26\u4e32\u5728 **Trie** \u7684\u7ed3\u5c3e\u8282\u70b9\u4e3a $G$\uff0c\u7136\u540e\u6211\u4eec\u67e5\u8be2\u96c6\u5408 $S$ \u4e2d\u6bcf\u4e2a\u5b57\u7b26\u4e32\u7684 $G$ \uff0c\u5bf9\u5e94\u7684 **Fail\u6811\u8282\u70b9** \uff0c\u7684\u5b50\u6811\u548c\uff08\u53ef\u80fd\u6709\u70b9\u7ed5\uff09\u3002\u6700\u540e\u6211\u4eec\u518d\u628a\u90a3\u4e9b\u52a0\u4e00\u7684\u70b9\u518d\u51cf\u4e00\uff0c\u590d\u539f\u539f\u6765\u7684\u6811\u3002\n\n\u7136\u800c\u8fd9\u6837\u65f6\u95f4\u663e\u7136\u4f1a\u70b8\u3002\n\n\u4f46\u662f\uff0c\u7ed9 $T$ \u7684\u8def\u5f84\u8d4b\u503c\uff0c\u7136\u540e\u67e5\u8be2\u6bcf\u4e2a $G$ \u7684\u5b50\u6811\u6743\u503c **\u7b49\u4ef7\u4e8e** \u7ed9 $G$ \u7684\u5b50\u6811\u8d4b\u503c\uff0c\u7136\u540e\u67e5\u8be2 $T$ \u7684\u8def\u5f84\u6743\u503c\u3002\n\n\u6240\u4ee5\u6211\u4eec\u4e00\u5f00\u59cb\u7ed9\u6bcf\u4e2a $G$ \u7684\u5b50\u6811\u52a0\u4e00\uff0c\u8be2\u95ee\u65f6 $T$ \u5728 **Trie** \u4e0a\u8dd1\uff0c\u6bcf\u8dd1\u5230\u4e00\u4e2a\u8282\u70b9\uff0c\u5c31\u52a0\u4e0a\u8fd9\u4e2a\u8282\u70b9\u5bf9\u5e94\u7684 **Fail\u6811** \u8282\u70b9\u7684\u6743\u503c\u3002\u8fd9\u4e2a\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u662f $O(|T|)$ \u7684\u3002\n\n\u8fd9\u6837\u4fee\u6539\u64cd\u4f5c\u4e5f\u8fce\u5203\u800c\u89e3\uff0c\u589e\u52a0\u5b57\u7b26\u4e32 $A$ \u5c31\u7ed9 $G_A$ \u5b50\u6811\u52a0\u4e00\uff0c\u5220\u9664\u5c31\u51cf\u4e00\u3002\n\n\u6700\u540e\u4e00\u4e2a\u95ee\u9898\uff1a\u600e\u4e48\u6837\u7ed9\u4e00\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u52a0\u51cf\uff1f\u53ea\u9700\u8981\u5728\u6811\u7684 **DFS\u5e8f** \u4e0a\u64cd\u4f5c\u5373\u53ef\u3002\u56e0\u4e3a\u4e00\u4e2a\u70b9\u7684\u5b50\u6811\u5728 **DFS\u5e8f** \u4e0a\u662f\u8fde\u7eed\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u7528**\u533a\u95f4\u52a0\u503c\uff08\u7ed9\u5b50\u6811\u52a0\u51cf\uff09\u3001\u5355\u70b9\u8be2\u95ee\uff08 $T$ \u5728 Trie \u8dd1\u65f6\u67e5\u8be2\uff09**\u5c31\u884c\u4e86\uff0c\u663e\u7136\u5957\u5206\u5757\u6a21\u677f\u5373\u53ef\u3002\n\n## \u4ee3\u7801\n\n```c++\n#include<bits/stdc++.h>\n#define rep(i,x,y) for(int i=x;i<=y;++i)\n#define mar(o) for(int E=fst[o];E;E=e[E].nxt)\n#define v e[E].to\n#define kwei(x) ((x-1)/B+1)\n#define kl(x) ((x-1)*B+1)\n#define kr(x) (x*B)\nusing namespace std;\nconst int n7=1012345;\nstruct dino{int to,nxt;}e[n7];\nint n,T,B,ecnt,fst[n7],a[n7],blo[n7],cnt=1,tre[n7][26],fail[n7];\nint ned[n7],head,tail,que[n7],t,L[n7],R[n7];\nchar cr[n7];bool exi[n7];\n\nint rd(){\n   int shu=0;char ch=getchar();\n   while(!isdigit(ch))ch=getchar();\n   while(isdigit(ch))shu=(shu<<1)+(shu<<3)+(ch^48),ch=getchar();\n   return shu;\n}\n\nvoid edge(int sta,int edn){\n\tecnt++;\n\te[ecnt]=(dino){edn,fst[sta]};\n\tfst[sta]=ecnt;\n}\n\nvoid insert(int z){\n\tint len=strlen(cr+1),now=1;\n\trep(i,1,len){\n\t\tint ch=cr[i]-'a';\n\t\tif(!tre[now][ch]){\n\t\t\tcnt++,tre[now][ch]=cnt;\n\t\t}\n\t\tnow=tre[now][ch];\n\t}\n\tned[z]=now;\n}\n\nvoid Gfail(){\n\thead=1,tail=1,que[1]=1;\n\trep(i,0,25)tre[0][i]=1;\n\twhile(head<=tail){\n\t\tint now=que[head];\n\t\trep(i,0,25){\n\t\t\tint edn=tre[ fail[now] ][i];\n\t\t\tif(tre[now][i]){\n\t\t\t\tfail[ tre[now][i] ]=edn;\n\t\t\t\tedge(edn,tre[now][i]);\n\t\t\t\ttail++,que[tail]=tre[now][i];\n\t\t\t}\n\t\t\telse tre[now][i]=edn;\n\t\t}\n\t\thead++;\n\t}\n}\n\nvoid dfs(int o){\n\tt++,L[o]=t;\n\tmar(o)dfs(v);\n\tR[o]=t;\n}\n\nvoid updat(int l,int r,int val){\n\tif( kwei(l)==kwei(r) ){\n\t\trep(i,l,r)a[i]+=val;\n\t\treturn;\n\t}\n\trep(i,l,kr( kwei(l) ))a[i]+=val;\n\trep(i,kl( kwei(r) ),r)a[i]+=val;\n\trep(i,kwei(l)+1,kwei(r)-1)blo[i]+=val;\n}\n\nint Tquery(int z){\n\treturn a[z]+blo[ kwei(z) ];\n}\n\nint query(){\n\tint len=strlen(cr+1),now=1,tot=0;\n\trep(i,1,len){\n\t\tnow=tre[now][ cr[i]-'a' ];\n\t\ttot+=Tquery( L[now] );\n\t} \n\treturn tot;\n}\n\nint main(){\n\tT=rd(),n=rd();\n\trep(i,1,n)scanf(\"%s\",cr+1),insert(i);\n\tGfail(),dfs(1);\n\tB=sqrt(cnt*2);//\u4e8b\u5b9e\u8bc1\u660e\uff0c\u5757\u957f\u8fd9\u6837\u8bbe\u4f1a\u7384\u5b66\u5730\u66f4\u5feb\uff0c\u76f4\u63a5\u5361\u5230\u6700\u4f18\u89e31st\n\trep(i,1,n)exi[ ned[i] ]=1,updat(L[ ned[i] ],R[ ned[i] ],1);\n\twhile(T--){\n\t\tchar sys=getchar();\n\t\twhile(sys!='-'&&sys!='+'&&sys!='?')sys=getchar();\n\t\tif(sys=='+'){\n\t\t\tint z=ned[ rd() ];\n\t\t\tif(!exi[z])updat(L[z],R[z],1),exi[z]=1;\n\t\t}\n\t\tif(sys=='-'){\n\t\t\tint z=ned[ rd() ];\n\t\t\tif(exi[z])updat(L[z],R[z],-1),exi[z]=0;\n\t\t}\n\t\tif(sys=='?'){\n\t\t\tscanf(\"%s\",cr+1);\n\t\t\tprintf(\"%d\\n\",query());\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1612447485,
        "uid": 99623,
        "name": "BlankAo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF163E \u3010e-Government\u3011"
    },
    {
        "content": "# Problem\n\n[CF163E e-Government\uff08AC \u81ea\u52a8\u673a+ BIT + dfn \u5e8f + LCA + \u5e8f\u5217\u4e0a\u5dee\u5206\uff09](https://www.luogu.com.cn/problem/CF163E)\n\n\u8fd9\u4e48\u591a\u4e1c\u897f\u641e\u5728\u4e00\u8d77\u5176\u5b9e\u4e5f\u6ca1\u6709\u5f88\u96be\u3002\u3002\n\n\u5176\u5b9e\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u9898\u76ee\u5c31\u662f\u8ba9\u6211\u4eec\u6c42\u6bcf\u4e00\u4e2a\u4e32\u4f5c\u4e3a\u67d0\u4e2a\u4e32\u7684\u5b50\u4e32\u51fa\u73b0\u6b21\u6570\u4e4b\u548c\u3002\uff08\u597d\u50cf\u66f4\u96be\u7406\u89e3\u4e86\u3002\uff09\n\n\u770b\u4e00\u4e0b\u6837\u4f8b\u5c31\u77e5\u9053\u4e86\u3002\n\n```cpp\ninput\uff1a\n1 3\na\naa\nab\n?aaab\n\noutput\uff1a\n6\n```\n\n$6=3+2+1$ \uff0c\u9898\u610f\u5c31\u662f\u8fd9\u4e2a\u3002\n\n# Solution\n\n\u90a3\u5bf9\u5e94\u5230 AC \u81ea\u52a8\u673a\u4e0a\u9762\u53bb\uff0c\u5c31\u662f\u76f8\u5f53\u4e8e\u8be2\u95ee\u4e00\u4e2a\u4e32\u7684\u6bcf\u4e2a\u524d\u7f00\u5bf9\u5e94\u8282\u70b9\uff0cFail \u6811\u4e2d\u4ece\u8fd9\u4e2a\u70b9\u5230\u6839\u8282\u70b9\u8def\u5f84\u4e0a\u7684 $Endpos$ \u6807\u8bb0\u4e4b\u548c\u3002\n\n\u540c\u65f6\u8fd8\u5e26\u4fee\uff0c\u652f\u6301\u628a\u67d0\u4e2a\u70b9\u7684 $Endpos$ \u6807\u8bb0\u51cf\u4e00\u548c\u52a0\u4e00\u3002\n\n\u66b4\u529b\u505a\u5f53\u7136\u662f\u53ef\u4ee5\u7684\uff0c\u76f4\u63a5\u6811\u5256\u6216\u8005 LCT \u5bf9\u7740\u94fe\u4e0a\u548c\u4e00\u987f\u64cd\u4f5c\u5373\u53ef\uff0c\u4f46\u662f\u8fd9\u6837\u505a\u5f88\u9ebb\u70e6\uff08AC \u81ea\u52a8\u673a\u5957\u4e2a LCT \u5c31\u663e\u5f97\u5f88\u70e6\u4e86\u3002\u3002\u867d\u7136\u7801\u91cf\u4e5f\u4e0d\u7b97\u7279\u522b\u5927\u3002\uff09\n\n\u90a3\u4e48\u6839\u636e\u6811\u4e0a\u5dee\u5206\u7684\u601d\u60f3\uff0c\u5176\u5b9e\u6211\u4eec\u53ef\u4ee5\u628a\u539f\u9898\u4ece\uff1a\n\n\u5355\u70b9\u4fee\u6539\uff0c\u94fe\u4e0a\u67e5\u8be2\u3002\n\n\u53d8\u6210\uff1a\u5b50\u6811\u533a\u95f4\u4fee\u6539\uff0c\u5355\u70b9\u67e5\u8be2\u3002\n\n\u7136\u540e\u6211\u4eec\u518d\u5229\u7528\u5e8f\u5217\u5dee\u5206\u53d8\u6210\uff1a\u5355\u70b9\u4fee\u6539\uff0c\u5b50\u6811\u533a\u95f4\u67e5\u8be2\u3002\n\n\u5177\u4f53\u6765\u8bf4\u5c31\u662f\u5229\u7528\u5e8f\u5217\u5dee\u5206\uff0c\u5148\u6253\u4e00\u4e0b dfn \u5e8f\uff0c\u7136\u540e\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u5373\u53ef\u3002\n\n# Code\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntemplate <typename T>\ninline void read(T &x){\n    x=0;char ch=getchar();bool f=false;\n    while(!isdigit(ch)){if(ch=='-'){f=true;}ch=getchar();}\n    while(isdigit(ch)){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n    x=f?-x:x;\n    return ;\n}\ntemplate <typename T>\ninline void write(T x){\n    if(x<0) putchar('-'),x=-x;\n    if(x>9) write(x/10);\n    putchar(x%10^48);\n    return ;\n}\nconst int N=1e6+5;\n#define ll long long\nint n,m;\nint Q;\nchar str[N];\n\nint ch[N][26],val[N],fail[N],rev[N],tot,root;\nint nex[N],head[N],to[N],idx;\nint dep[N],siz[N],son[N],top[N],fa[N],dfn[N],cnt;\nint c[N];\nbool cmp(const int &x,const int &y){return dfn[x]<dfn[y];}\nvoid Insert(string str,int id){\n\tint len=str.size(),p=root;\n\tfor(int i=0;i<len;i++){\n\t\tint c=str[i]-'a';\n\t\tif(!ch[p][c]) ch[p][c]=++tot;\n\t\tp=ch[p][c];\n\t}\n\trev[id]=p;\n\treturn ;\n}\nvoid Modify(int x,int v){\n\tif(!x) return ;\n\tfor(;x<=cnt;x+=(x&(-x))) c[x]+=v;\n\treturn ;\n}\nint Ask(int x){\n\tint res=0;\n\tfor(;x>0;x-=(x&(-x))) res+=c[x];\n\treturn res;\n}\nvoid add(int u,int v){\n\tnex[++idx]=head[u];\n\tto[idx]=v;\n\tfa[v]=u;\n\thead[u]=idx;\n\treturn ;\n}\nvoid dfs1(int x,int f){\n\tsiz[x]=1,dep[x]=dep[f]+1,fa[x]=f;\n\tfor(int i=head[x];i;i=nex[i]){\n\t\tint y=to[i];\n\t\tdfs1(y,x);\n\t\tsiz[x]+=siz[y];\n\t\tif(siz[y]>siz[son[x]]||!son[x]) son[x]=y;\n\t}\n\treturn ;\n}\nvoid dfs2(int x){\n\tif(x==son[fa[x]]) top[x]=top[fa[x]];\n\telse top[x]=x;\n\tdfn[x]=++cnt;\n\tif(son[x]) dfs2(son[x]);\n\tfor(int i=head[x];i;i=nex[i]){\n\t\tint y=to[i];\n\t\tif(y==son[x]) continue;\n\t\tdfs2(y);\n\t}\n\treturn ;\n}\nvoid Build(){\n\tqueue<int> q;\t\n\tfor(int i=0;i<26;i++) if(ch[root][i]) q.push(ch[root][i]);\n\twhile(!q.empty()){\n\t\tint p=q.front();q.pop();\n\t\tfor(int i=0;i<26;i++){\n\t\t\tif(ch[p][i]) fail[ch[p][i]]=ch[fail[p]][i],q.push(ch[p][i]);\n\t\t\telse ch[p][i]=ch[fail[p]][i];\n\t\t}\n\t}\n\treturn ;\n}\nint QueryLca(int x,int y){while(top[x]!=top[y]){if(dep[top[x]]<dep[top[y]]){swap(x,y);}x=fa[top[x]];}return dep[x]<dep[y]?x:y;}\nvoid ADD(){\n\tfor(int i=1;i<=tot;i++) add(fail[i],i);\n\treturn ;\n}\nvoid Into(int x,int tag){\n\tModify(dfn[x],tag),Modify(dfn[x]+siz[x],-tag);\n\treturn ;\n}\nint Query(char *str){\n\tint len=strlen(str),p=root,res=0;\n\tfor(int i=0;i<len;i++) p=ch[p][str[i]-'a'],res+=Ask(dfn[p]);\n\treturn res;\n}\nstring S[N];\nbool vis[N];\nint main(){\n\tread(Q),read(n);\n\tfor(int i=1;i<=n;i++) cin>>S[i],Insert(S[i],i);\n\tBuild();ADD();\n\tdfs1(0,0);dfs2(0);\n\tfor(int i=1;i<=n;i++) Into(rev[i],1),vis[i]=true;\n    while(Q--){\n        char op;int x;op=getchar();\n        while(op!='-'&&op!='+'&&op!='?') op=getchar();\n        if(op=='-'){\n        \tread(x);\n        \tif(!vis[x]) continue;\n        \tvis[x]=false;\n\t\t\tInto(rev[x],-1);\n        }\n        else if(op=='+'){\n        \tread(x);\n        \tif(vis[x]) continue;\n        \tvis[x]=true;\n\t\t\tInto(rev[x],1);\n        }\n        else if(op=='?') scanf(\"%s\",str),printf(\"%d\\n\",Query(str));\n    }\n\treturn 0;\n} \n```\n\n# Ex\uff08\u5ef6\u4f38\uff09\n\n\u603b\u7684\u6765\u8bf4\uff0c\u8fd9\u9053\u9898\u5389\u5bb3\u7684\u662f\u90a3\u4e2a\u9898\u610f\u7684\u8f6c\u5316\uff0c\u4e5f\u5c31\u662f\u76f8\u5f53\u4e8e\u53cd\u5176\u9053\u800c\u884c\uff0c\u5176\u5b9e\u6211\u4eec\u8fd9\u91cc\u7684\u53d8\u5316\uff08\u5c24\u5176\u662f\u4ece\u7b2c\u4e00\u6b65\u5230\u7b2c\u4e8c\u6b65\uff09\uff0c\u5c31\u662f\u4e00\u4e2a\u67e5\u8be2\u548c\u4fee\u6539\u7684\u53d8\u6362\uff0c\u6709\u65f6\u5019\u67e5\u8be2\u597d\u7edf\u8ba1\uff0c\u4fee\u6539\u4e0d\u597d\u6539\uff0c\u6709\u65f6\u5019\u4fee\u6539\u65b9\u4fbf\uff0c\u67e5\u8be2\u5374\u53c8\u4e0d\u5229\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u8981\u5b66\u4f1a\u53d8\u901a\u3002\n\n\u518d\u6bd4\u5982\uff0c\u4e00\u9053\u9898\u4fee\u6539\u67d0\u4e9b\u4e1c\u897f\uff0c\u6211\u4eec\u4f1a\u5148\u8003\u8651\u600e\u4e48\u53bb\u7ef4\u62a4\u8fd9\u4e2a\u4fee\u6539\uff0c\u4f46\u5b9e\u9645\u4e0a\u6211\u4eec\u4e5f\u53ef\u4ee5\u8003\u8651\u6bcf\u6b21\u4fee\u6539\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u8981\u505a\u5230\u7684\u5c31\u662f\u5e73\u8861\uff0c\u60f3\u95ee\u9898\u8981\u89d2\u5ea6\u591a\u4e00\u4e9b\u3002\n\n",
        "postTime": 1614864535,
        "uid": 130387,
        "name": "_Anchor",
        "ccfLevel": 0,
        "title": "\u9898\u89e3CF163E e-Government"
    },
    {
        "content": "\u591c\u4e2d\u4e0d\u80fd\u5bd0\uff0c\u8d77\u5750\u5199\u9898\u89e3qwq\n  \n\u9996\u5148\u770b\u5230\u8fd9\u662f\u5b57\u7b26\u4e32\u9898\uff0c\u8fd8\u662f\u5b57\u7b26\u4e32\u5339\u914d\u3002\u4e8e\u662f\u60f3\u5230AC\u81ea\u52a8\u673a\u3002\u3002\u3002\u7136\u800c\u6211\u89c9\u5f97\u5b83\u4f1aTLE\uff08\uff1f\uff09\uff0c\u4e8e\u662f\u8003\u8651\u540e\u7f00\u6570\u7ec4\u3002\u3002  \n\n\u505a\u6cd5\uff1a  \n1.\u628a\u6240\u6709\u5b57\u7b26\u4e32\uff0c\u5305\u62ec\u6a21\u677f\u4e32\u548c\u67e5\u8be2\u4e32\uff0c\u8fde\u5728\u4e00\u8d77\uff0c\u4e2d\u95f4\u7528\u5947\u602a\u5b57\u7b26\u9694\u5f00\uff08\u5957\u8defqwq\uff09  \n2.\u5bf9\u4e8e\u6bcf\u4e2a\u6a21\u677f\u4e32\uff0c\u5728\u540e\u7f00\u6570\u7ec4\u4e0a\u4e8c\u5206lcp\u627e\u5230\u53ef\u4ee5\u5339\u914d\u5b83\u7684\u540e\u7f00\u6240\u5728\u7684\u533a\u95f4\uff08\u4e5f\u662f\u5957\u8defqwq\uff09  \n3.\u7ef4\u62a4\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\uff0c\u6309\u987a\u5e8f\u679a\u4e3e\u6bcf\u4e00\u4e2a\u64cd\u4f5c\u3002\u5bf9\u4e8e\u2018+\u2019\uff0c\u628a\u76f8\u5e94\u6a21\u677f\u4e32\u5bf9\u5e94\u7684\u53ef\u5339\u914d\u533a\u95f4\u52a01\uff1b\u5bf9\u4e8e\u2018-\u2019\uff0c\u628a\u76f8\u5e94\u6a21\u677f\u4e32\u5bf9\u5e94\u7684\u53ef\u5339\u914d\u533a\u95f4\u51cf1\uff1b\u5bf9\u4e8e\u2018\uff1f\u2019\uff0c\u679a\u4e3e\u76f8\u5e94\u67e5\u8be2\u4e32\u5728\u540e\u7f00\u6570\u7ec4\u4e2d\u5bf9\u5e94\u7684\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u628a\u5b83\u4eec\u5728\u6811\u72b6\u6570\u7ec4\u4e2d\u7684\u503c\u52a0\u8d77\u6765\uff0c\u8fd9\u5c31\u662f\u8be5\u8be2\u95ee\u7684\u7b54\u6848  \n4.\u6ca1\u4e86QwQ  \n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(nlogn)\uff0c\u975e\u5e38\u6b63\u786eqwq",
        "postTime": 1554403331,
        "uid": 64366,
        "name": "ddwqwq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF163E \u3010e-Government\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u770b\u5b8c\u540e\u5c31\u89c9\u5f97\u662f\u4e00\u9053AC\u81ea\u52a8\u673a\u7684\u9898\u76ee\n\n\u7b2c\u4e00\u6b65\uff0c\u5148\u628a\u6240\u6709\u5339\u914d\u4e32\u63d2\u5165\u4e00\u9897AC\u81ea\u52a8\u673a\u91cc\u9762\n\n\u6309\u7167AC\u81ea\u52a8\u673a\u7684\u8ba1\u7b97\u65b9\u6cd5~~\uff08\u5982\u679c\u4e0d\u77e5\u9053\uff0c\u53bb\u770b\u4e00\u4e0bAC\u81ea\u52a8\u673a\u7684\u9898\u89e3\uff09~~\u6211\u4eec\u6bcf\u8d70\u5230\u4e00\u4e2a\u8282\u70b9\uff0c\u5c31\u8981\u628aans\u52a0\u4e0a\u662f\u8fd9\u4e2a\u8282\u70b9\u4ee3\u8868\u7684\u5b57\u7b26\u4e32\u7684\u540e\u7f00\u4e2d\u5355\u8bcd\u7684\u6570\u91cf\n\n\u6240\u4ee5\uff0c\u5f88\u81ea\u7136\u7684\u53ef\u4ee5\u60f3\u5230\u63d2\u5165\u8fd9\u4e2a\u5339\u914d\u4e32\u5c31\u662f\u628a\u8fd9\u4e2a\u70b9\u7684\u6743\u503c\u52a0\u4e00\u5220\u9664\u5219\u51cf\u4e00\n\n\u7136\u540e\u7ecf\u8fc7\u601d\u8003\uff0c\u53d1\u73b0\u8fd9\u6837\u5b50\u662f\u4e0d\u5bf9\u7684\n\n\u4f8b\u5982\u5b57\u7b26\u4e32aba\u548cba\uff0c\u4f60\u63d2\u5165ba\u8fd9\u4e2a\u5b57\u7b26\u4e32\uff0c\u663e\u7136aba\u5904\u7684\u6743\u503c\u4e5f\u8981\u52a0\u4e00\n\n\u5982\u679c\u4e00\u4e2a\u4e00\u4e2a\u8282\u70b9\u5730\u8df3\u8fc7\u53bb\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(\u4e0d\u80fd\u8fc7)\n\n\u600e\u4e48\u529e\uff1f\n\n\u5982\u679c\u6211\u4eec\u5427fail\u6307\u9488\u53cd\u8fc7\u6765\uff0c\u5efa\u6210\u4e00\u9897fail\u6811\uff0c\u90a3\u4e48\u63d2\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\u5c31\u76f8\u5f53\u4e8e\u628a\u8fd9\u68f5\u5b50\u6811\u6240\u6709\u8282\u70b9\u7684\u6743\u503c+1\n\n\u90a3\u4e48\u5c31\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u6216\u8005\u6811\u72b6\u6570\u7ec4\u5728log\u65f6\u95f4\u5185\u7ef4\u62a4\n\n\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(l*logl)\n\ntips:\u5efa\u8bae\u624b\u52a8\u5f00O2~~\u53ef\u80fd\u662f\u6211\u5e38\u6570\u592a\u5927\u4e86~~\n\n\u9644\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#pragma GCC optimize (3)\n#include<bits/stdc++.h>\n#define now c[o].e[k]\n#define go(x) for(int i=head[x];i;i=edge[i].nxt)\nusing namespace std;\nconst int sz=1e6+527;\nint n,m;\nint l,sum,ans;\nint T,cnt,o,rt,k,tot;\nint last[sz],b[sz],f[sz];\nint dfn[sz],r[sz],head[sz];\nchar s[sz];\nstruct wxp{\n    int e[26],fail;\n}c[sz];\nstruct Edge{\n    int v,nxt;\n}edge[sz<<1];\nvoid add(int x,int sum){\n    while(x<=tot){\n        f[x]+=sum;\n        x+=x&(-x);\n    }\n}\nint query(int x){\n    int ret=0;\n    while(x){\n        ret+=f[x];\n        x-=x&-x;\n    }\n    return ret;\n}\nvoid make_edge(int u,int v){\n    edge[++cnt]=(Edge){v,head[u]};\n    head[u]=cnt;\n}\nvoid insert(char s[],int num){\n    l=strlen(s);\n    o=rt;\n    for(int i=0;i<l;i++){\n        k=s[i]-'a';\n        if(!now) now=++tot;\n        o=now;\n    }\n    last[num]=o;\n}\nvoid build(){\n    int j;\n    queue<int>q;\n    o=rt;\n    for(k=0;k<26;k++) \n    if(now){\n        make_edge(rt,now);\n        c[now].fail=rt;\n        q.push(now);\n    }else now=rt;\n    while(q.empty()==0){\n        o=q.front();\n        q.pop();\n        for(k=0;k<26;k++){\n            if(now){\n                c[now].fail=c[c[o].fail].e[k]?c[c[o].fail].e[k]:rt;\n                make_edge(c[now].fail,now);\n                q.push(now);\n            }\n            else now=c[c[o].fail].e[k]?c[c[o].fail].e[k]:rt;\n        }\n    }\n}\nvoid dfs(int x){\n    dfn[x]=++T;\n    go(x) dfs(edge[i].v);\n    r[x]=T;\n}\nint main(){\n    rt=++tot;\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++){\n        scanf(\"%s\",s);\n        insert(s,i);\n    }\n    build();\n    dfs(rt);\n    for(int i=1;i<=m;i++){\n        add(dfn[last[i]],1);\n        add(r[last[i]]+1,-1);\n        b[i]=1;\n    }\n    while(n--){\n        scanf(\"%s\",s);\n        l=strlen(s);\n        if(s[0]=='+'){\n            sum=0;\n            for(int i=1;i<l;i++) sum=sum*10+s[i]-'0';\n            if(b[sum]) continue;\n            add(dfn[last[sum]],1);\n            add(r[last[sum]]+1,-1);\n            b[sum]=1;\n        }\n        else if(s[0]=='-'){\n            sum=0;\n            for(int i=1;i<l;i++) sum=sum*10+s[i]-'0';\n            if(b[sum]==0) continue;\n            add(dfn[last[sum]],-1);\n            add(r[last[sum]]+1,1);\n            b[sum]=0;\n        }\n        else{\n            ans=0;\n            o=rt;\n            for(int i=1;i<l;i++){\n                k=s[i]-'a';\n                ans+=query(dfn[o=now]);\n            }\n            printf(\"%d\\n\",ans);\n        }\n    }\n}\n```",
        "postTime": 1541497823,
        "uid": 76045,
        "name": "\u5f71\u8fb0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF163E \u3010e-Government\u3011"
    },
    {
        "content": "# \u9898\u76ee\n&emsp;&emsp;[\u70b9\u8fd9\u91cc](https://www.luogu.com.cn/problem/CF163E)\u770b\u9898\u76ee\u3002  \n# \u5206\u6790\n&emsp;&emsp;\u9996\u5148\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u771f\u7684\u4ece AC \u81ea\u52a8\u673a\u4e2d\u628a\u4e32\u5220\u6389\u3002\u7531\u4e8e\u6211\u4eec\u8ba1\u7b97\u8d21\u732e\u548c\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728 AC \u81ea\u52a8\u673a\u4e0a\uff0c\u628a\u5df2\u7ecf\u5220\u9664\u7684\u4e32\u7684\u8d21\u732e\u62b9\u6389\u5c31\u53ef\u4ee5\u4e86\u3002  \n&emsp;&emsp;\u63a5\u7740\u8003\u8651\u8be2\u95ee\u3002\u8fd9\u662f\u4e00\u4e2a\u5f88\u57fa\u7840\u7684\u95ee\u9898\uff0c\u4e00\u822c\u6211\u4eec\u4f1a\u5728 AC \u81ea\u52a8\u673a\u4e0a\u9762\u5904\u7406\u51fa\u6bcf\u4e2a\u72b6\u6001\u7684\u8d21\u732e\u548c\uff0c\u5e76\u4e14\u5c06\u8be2\u95ee\u7684\u5b57\u7b26\u4e32\u5728 AC \u81ea\u52a8\u673a\u4e0a\u9762\u8dd1\u4e00\u8dd1\uff0c\u7b54\u6848\u5c31\u662f\u7ecf\u8fc7\u7684\u72b6\u6001\u7684\u8d21\u732e\u548c\u7684\u8d21\u732e\u548c\u3002  \n&emsp;&emsp;\u73b0\u5728\u8d21\u732e\u662f\u52a8\u6001\u7684\uff0c\u6211\u4eec\u7684\u8d21\u732e\u548c\u4e5f\u53d8\u6210\u4e86\u52a8\u6001\u7684\u3002\u4e0d\u8fc7\uff0c\u7531\u4e8e\u8d21\u732e\u548c\u672c\u8d28\u4e0a\u5c31\u662f **fail \u6811\u4e0a\u5230\u6839\u7684\u8def\u5f84\u7684\u8d21\u732e\u548c** \uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5bf9 fail \u6811\u8fdb\u884c\u6811\u94fe\u5256\u5206\uff0c\u4fee\u6539\u5c31\u662f\u5355\u70b9\u4fee\u6539\uff0c\u67e5\u8be2\u5c31\u67e5\u8be2\u5230\u6839\u7684\u8d21\u732e\u548c\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u7528 BIT \u6765\u7ef4\u62a4\u4e00\u4e0b\u533a\u95f4\u548c\u3002  \n&emsp;&emsp;\u53e6\u4e00\u79cd\u66f4\u7b80\u5355\u7684\u65b9\u6cd5\u662f\uff0c\u5728\u4e00\u4e2a\u70b9\u4e0a\u6539\u8d21\u732e\u7684\u65f6\u5019\uff0c**\u6709\u4e14\u4ec5\u6709\u5176\u5b50\u6811\u5185\u7684\u70b9\u4f1a\u88ab\u5f71\u54cd**\uff0c\u56e0\u6b64\u6211\u4eec\u7528 BIT \u7ef4\u62a4\u5dee\u5206\uff0c\u6bcf\u6b21\u4fee\u6539\u5c31\u662f\u5c06\u5b50\u6811\u5185\u7684\u8d21\u732e +1 \uff0c\u67e5\u8be2\u5c31\u76f4\u63a5\u67e5\u8be2\u3002\u8fd9\u6837\u505a\u5c31\u5c11\u4e86\u4e00\u4e2a$\\log_2n$\u3002    \n&emsp;&emsp;\u8fd9\u4e24\u79cd\u65b9\u6cd5\u4f53\u73b0\u4e86\u4e24\u79cd\u4e0d\u540c\u7684\u601d\u60f3\u2014\u2014**\u7edf\u8ba1\u8d21\u732e**\u548c**\u7ef4\u62a4\u8d21\u732e**\uff1b\u4e24\u8005\u9700\u8981\u5177\u4f53\u95ee\u9898\u5177\u4f53\u5206\u6790\u518d\u9009\u62e9\u4f7f\u7528\u3002  \n# \u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <iostream>\nusing namespace std;\n\n#define Tour( c ) for( int c = 0 ; c < 26 ; c ++ )\n#define up( x ) ( x += ( x & ( -x ) ) )\n#define down( x ) ( x -= ( x & ( -x ) ) )\n\ntypedef long long LL;\n\nconst int MAXN = 1e5 + 5, MAXL = 1e6 + 5;\n\ntemplate<typename _T>\nvoid read( _T &x )\n{\n\tx = 0;char s = getchar();int f = 1;\n\twhile( s > '9' || s < '0' ){if( s == '-' ) f = -1; s = getchar();}\n\twhile( s >= '0' && s <= '9' ){x = ( x << 3 ) + ( x << 1 ) + ( s - '0' ), s = getchar();}\n\tx *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x )\n{\n\tif( x < 0 ){ putchar( '-' ); x = ( ~ x ) + 1; }\n\tif( 9 < x ){ write( x / 10 ); }\n\tputchar( x % 10 + '0' );\n}\n\nstruct edge\n{\n\tint to, nxt;\n}Graph[MAXL << 1];\n\nLL BIT[MAXL];\nint head[MAXL], pos[MAXL], siz[MAXL];\nint ch[MAXL][26], fail[MAXL], q[MAXL];\nint ed[MAXN];\nint N, K, tot, cnt, ID;\nchar S[MAXL];\nbool inside[MAXN];\n\nvoid update( int x, const int v ) { for( ; x <= ID ; up( x ) ) BIT[x] += v; }\nLL getSum( int x ) { LL ret = 0; for( ; x ; down( x ) ) ret += BIT[x]; return ret; }\nvoid update( const int x ) { if( ! inside[x] ) inside[x] = true, update( pos[ed[x]], 1 ), update( pos[ed[x]] + siz[ed[x]], -1 ); }\nvoid remove( const int x ) { if( inside[x] ) inside[x] = false, update( pos[ed[x]], -1 ), update( pos[ed[x]] + siz[ed[x]], 1 ); }\n\nvoid addEdge( const int from, const int to )\n{\n\tGraph[++ cnt].to = to, Graph[cnt].nxt = head[from];\n\thead[from] = cnt;\n}\n\nvoid insert( const int rnk )\n{\n\tint p = 0, id;\n\tfor( int i = 1 ; S[i] ; i ++ )\n\t{\n\t\tid = S[i] - 'a';\n\t\tif( ! ch[p][id] ) ch[p][id] = ++ tot;\n\t\tp = ch[p][id];\n\t}\n\ted[rnk] = p;\n}\n\nvoid init()\n{\n\tint h = 1, t = 0, u, v;\n\tTour( i ) if( ch[0][i] ) q[++ t] = ch[0][i];\n\twhile( h <= t )\n\t{\n\t\tu = q[h ++];\n\t\tTour( i )\n\t\t{\n\t\t\tif( v = ch[u][i] ) fail[v] = ch[fail[u]][i], q[++ t] = v;\n\t\t\telse ch[u][i] = ch[fail[u]][i];\n\t\t}\n\t\taddEdge( fail[u], u );\n\t}\n}\n\nvoid DFS( const int u )\n{\n\tsiz[u] = 1, pos[u] = ++ ID;\n\tfor( int i = head[u], v ; i ; i = Graph[i].nxt )\n\t\tDFS( v = Graph[i].to ), siz[u] += siz[v];\n}\n\nint main()\n{\n\tLL ans; int id, p;\n\tread( N ), read( K );\n\tfor( int i = 1 ; i <= K ; i ++ ) scanf( \"%s\", S + 1 ), insert( i );\n\tinit(); \n\tDFS( 0 );\n\tfor( int i = 1 ; i <= K ; i ++ ) update( i );\n\twhile( N -- )\n\t{\n\t\tscanf( \"%s\", S );\n\t\tif( S[0] == '?' )\n\t\t{\n\t\t\tans = p = 0;\n\t\t\tfor( int i = 1 ; S[i] ; i ++ )\n\t\t\t\tp = ch[p][S[i] - 'a'],\n\t\t\t\tans += getSum( pos[p] );\n\t\t\twrite( ans ), putchar( '\\n' );\n\t\t}\n\t\telse if( S[0] == '+' ) sscanf( S + 1, \"%d\", &id ), update( id );\n\t\telse sscanf( S + 1, \"%d\", &id ), remove( id );\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1589868194,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "[CF163E]e-Goverment"
    },
    {
        "content": "\u4e5f\u8bb8\u53ef\u4ee5\u4e8c\u8fdb\u5236\u5206\u7ec4?\u6216\u8005\u5bf9\u65f6\u95f4\u5206\u5757\u4e4b\u7c7b\u7684\u4e1c\u897f,\u76f4\u63a5\u7ef4\u62a4$S$\u4e2d\u5b57\u7b26\u4e32\u6784\u9020\u7684AC\u81ea\u52a8\u673a,\u6216\u8bb8\u641e\u4e2asam on trie\u4e5f\u884c?...\u6ca1\u6709\u4ed4\u7ec6\u60f3...\u641e\u4e2a\u4f20\u7edf\u505a\u6cd5\u5427.  \n\n---\n\n\u8003\u8651AC\u81ea\u52a8\u673a\u5339\u914d\u8fc7\u7a0b,\u6211\u4eec\u9996\u5148\u628aAC\u81ea\u52a8\u673a\u8fd9\u4e2aNFA\u8f6c\u5316\u6210\u4e00\u4e2aDFA,\u4e5f\u5c31\u662f\u53bb\u6389fail\u8fd9\u4e2a\u72b6\u6001\u8f6c\u79fb...\u5177\u4f53\u505a\u6cd5\u5f88\u7b80\u5355,BFS\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u505a\u597d\u4e86,\u5bf9\u4e8e\u4e0d\u5b58\u5728\u7684\u8f6c\u79fb$tr(q,c)$,\u5728$q$\u5904\u52a0\u4e00\u4e2a$c$,\u5e94\u5f53\u8f6c\u79fb\u5230$tr(fail(q),c)$,\u6309\u7167fail\u6811\u4e0a\u7684\u6df1\u5ea6\u6392\u5e8f\u8fdb\u884c\u8f6c\u79fb\u7684\u8bddfail(q)\u7684\u6240\u6709\u8f6c\u79fb\u90fd\u5df2\u7ecf\u8ba1\u7b97\u597d\u4e86,\u6240\u4ee5\u53ef\u4ee5$O(1)$\u8ba1\u7b97\u51fa\u8fd9\u4e2a$tr$...\u5177\u4f53\u770b\u7a0b\u5e8f\u5427,\u611f\u89c9\u633a\u6b63\u5e38\u7684.  \n\n\u4ece$qs$(\u4e5f\u8bb8\u7a0b\u5e8f\u91cc\u9762\u53ebroot)\u4ee3\u8868\u7a7a\u4e32\u7684\u72b6\u6001\u5f00\u59cb,\u6587\u672c\u4e32\u4e0b\u4e00\u4e2a\u5b57\u7b26\u4e3a$c$\u5219\u8f6c\u79fb\u5230$tr(q,c)$,\u5bf9\u4e8e\u4efb\u610f$tr(qs,S)=q$\u7684\u5b57\u7b26\u4e32$S$,\u663e\u7136$fail(q),fail(fail(q))\\dots fail^k(q),qs$\u90fd\u5728$S$\u4e2d\u51fa\u73b0\u4e86.\u4e8e\u662f\u6211\u4eec\u6784\u9020\u81ea\u52a8\u673a\u7684\u65f6\u5019\u8bb0\u5f55\u4e00\u4e0b\u6839\u94fe\u4e0a\u51fa\u73b0\u7684\u63a5\u53d7\u72b6\u6001\u6570\u91cf,\u8f6c\u79fb\u540e\u52a0\u4e0a\u8fd9\u4e2a\u4e1c\u897f\u5c31\u53ef\u4ee5\u505a\u5339\u914d\u4e86.  \n\n\u5927\u6982\u770b\u4e00\u4e0b\u8d21\u732e\u7684\u5f62\u5f0f,\u4e00\u4e2a\u63a5\u53d7\u72b6\u6001\u5bf9\u5b50\u8d70\u5230\u6811\u5185\u7684\u6587\u672c\u4e32\u6709\u8d21\u732e,\u800c\u6587\u672c\u4e32\u7684\u4e00\u4e2a\u524d\u7f00\u7684\u8d21\u732e\u662f\u6839\u94fe\u4e0a\u6240\u6709\u63a5\u53d7\u72b6\u6001\u6570\u91cf.(\u5bf9\u8bf4\u5f97\u5c31\u662f\u4e00\u56de\u4e8b...)\n\n\n---\n\n\u597d\u4e86\u56de\u987e\u5b8c\u4e86,\u56de\u5230\u672c\u9898,\u8003\u8651\u6587\u672c\u4e32$T$\u5339\u914d\u8fc7\u7a0b\u4e2d\u5230\u8fbe\u7684\u72b6\u6001\u4f9d\u6b21\u662f$(q_0=qs,q_1,q_2\\dots q_r)$,$ans=\\sum_{i=1}^m([i\\in S]\\sum_{i=0}^r [q_i\\in subtree(tr(qs,T_i)])$\n\u5176\u4e2d$T$\u662f\u6a21\u5f0f\u4e32,\u800c$S$\u662f\u5f53\u524d\u6709\u6548\u7684\u6a21\u5f0f\u4e32.   \n\n\n\u6211\u4eec\u53ef\u4ee5\u6807\u8bb0\u6240\u6709\u6709\u6548\u6a21\u5f0f\u4e32\u5728\u81ea\u52a8\u673a\u4e0a\u5bf9\u5e94\u7684\u72b6\u6001,\u5339\u914d\u6587\u672c\u4e32,\u7edf\u8ba1\u5230\u8fbe\u72b6\u6001$q$\u65f6\u6839\u94fe\u4e0a\u6709\u6548\u6a21\u5f0f\u4e32\u5bf9\u5e94\u72b6\u6001\u6570\u91cf...\u4e8e\u662f\u95ee\u9898\u8f6c\u5316\u4e3a\u6811\u4e0a\u5355\u70b9\u52a0,\u6839\u94fe\u548c,\u53ef\u4ee5HLD+SGT\u5199\u51fa\u7f8e\u597d\u7684$O(nlog^2n)$(\u6211\u4e5f\u4e0d\u77e5\u9053n\u5728\u8fd9\u4e2a\u9898\u91cc\u9762\u662f\u5565233).  \n\n\u4e0d\u8fc7\u8fd9\u4e2a\u4eba\u7269\u592a\u7279\u6b8a\u4e86,\u7528HLD\u8fd9\u79cd\u901a\u7528\u5de5\u5177\u5e76\u4e0d\u80fd\u8fbe\u5230\u6700\u4f18,\u4e0b\u9762\u6211\u4eec\u626f\u4e00\u626f\u5982\u4f55\u4f18\u5316\u5230$O(nlogn)$\n\n---\n\n\n\n\u7b54\u6848\u5f62\u5f0f\u5927\u6982\u662f$\\sum_u [l_u\\leq l_x\\leq r_u](dep_x-dep_u+1)$\u7684\u5f62\u5f0f,\u5176\u4e2d$u$\u662f\u679a\u4e3e\u6709\u6548\u6a21\u5f0f\u4e32\u5bf9\u5e94\u72b6\u6001\u5728fail\u6811\u4e0a\u7684\u4f4d\u7f6e.x\u662f\u5f53\u524d\u6a21\u5f0f\u4e32\u524d\u7f00\u8d70\u5230\u4e86\u81ea\u52a8\u673a\u4e0a\u7684\u72b6\u6001$x$.(\u753b\u4e2a\u56fe\u5c31\u77e5\u9053\u4e86qwq...)  \n\n\u6211\u4eec\u8fdb\u884c\u62c6\u5206,\u62c6\u6210$\\sum -dep_u$\u4e0e$\\sum dep_x+1$\u4e24\u90e8\u5206...\u6211\u4eec\u5462\u5148\u8003\u8651\u540e\u9762\u90a3\u90e8\u5206\u600e\u4e48\u7b97,\u53ef\u4ee5\u8fd9\u4e48\u60f3,$l_u\\leq x$,$x\\leq r_u$,\u6211\u4eec\u8d70\u5230$l$\u7684\u65f6\u5019\u52a0\u4e0a$u$\u7684\u8d21\u732e,\u8d70\u5230$r_u+1$\u7684\u65f6\u5019\u6263\u6389$u$\u7684\u8d21\u732e\u5373\u53ef,\u4e8e\u662f\u95ee\u9898\u53d8\u6210\u4e86\u5355\u70b9\u52a0,\u524d\u7f00\u548c,\u7528BIT\u53ef\u4ee5\u89e3\u51b3\u5b83.  \n\n\u524d\u4e00\u90e8\u5206\u5462?\u662f\u4e00\u6837\u7684\u5462.btw,\u8fd9\u4e2a\u60f3\u6cd5\u4f3c\u4e4e\u53ef\u4ee5\u7528\u4e8e\u89e3\u51b3BIT\u7ef4\u62a4\u533a\u95f4\u52a0,\u533a\u95f4\u548c.  \n\n\n----\n\n\n\u6574\u7406\u4e00\u4e0b\u601d\u8def,\u5efa\u6240\u6709\u6a21\u5f0f\u4e32\u7684AC\u81ea\u52a8\u673a,\u8f6c\u5316\u6210DFA\u65b9\u4fbf\u5339\u914d.  \n\u7ef4\u62a4\u5f53\u524d\u6709\u6548\u7684\u6a21\u5f0f\u4e32\u96c6\u5408,\u5339\u914d\u6587\u672c\u4e32.  \u8d21\u732e\u7edf\u8ba1\u5728$x\\geq l_u$\u65f6\u52a0\u4e0a$u$\u7684\u8d21\u732e,$x\\gt r_u$\u65f6\u6263\u6389\u8d21\u732e\u5c31\u53ef\u4ee5\u6b63\u786e\u7edf\u8ba1,\u4e8e\u662f\u8d21\u732e\u8ba1\u7b97\u662f\u5355\u70b9\u52a0,\u524d\u7f00\u548cBIT\u7ef4\u62a4\u5b83.\u5f97\u5230\u4f18\u79c0\u76841log\u505a\u6cd5.  \n\n\n\n---\n\n\n```cpp\n#include <bits/stdc++.h>\nconst int N=100000+10;\nconst int M=1000000+10;\nstruct T{\n\tint tr[26],fail;\n\tT(){ fail=0;\n\t\tfor(int i=0;i<26;i++) tr[i]=0;\n\t}\n}t[M];\nint n,m,cnt,root,at[N],in[N];\nint ins(const char *s){\n\tint p=root,j=0;\n\tfor(int i=0;s[i];i++){ j=s[i]-'a';\n\t\tif(t[p].tr[j]==0) t[p].tr[j]=++cnt;\n\t\tp=t[p].tr[j];\n\t}\n \treturn p;\n}\nstd::vector<int> son[M];\nint l[M],r[M],idx,dep[M];\nvoid dfs(int u){\n\tl[u]=++idx;\n\tfor(int v:son[u]) dfs(v);\n\tr[u]=idx;\n}\ntypedef long long Int;\nInt bit[2][M];\ninline int lowbit(int x){ return x&(-x); }\nvoid add(int k,int x,int y){ while(x<=idx){ bit[k][x]+=y; x+=lowbit(x); } }\nInt qry(int k,int x){ Int s=0; while(x){ s+=bit[k][x]; x^=lowbit(x); } return s; }\ninline void ins(int x){\n// \u8fd9\u5c31\u662f\u4e0a\u9762\u8bf4\u7684\u641e\u6210\u5de6\u7aef\u70b9\u52a0\u5165,\u53f3\u7aef\u70b9\u6263\u9664.\n\tadd(0,l[x],-dep[x]); add(0,r[x]+1,dep[x]);\n\tadd(1,l[x],1); add(1,r[x]+1,-1);\n}\ninline void del(int x){\n\tadd(0,l[x],dep[x]); add(0,r[x]+1,-dep[x]);\n\tadd(1,l[x],-1); add(1,r[x]+1,1);\n}\ninline Int get(int x){ return qry(0,l[x])+(dep[x]+1)*qry(1,l[x]); }\n\n\nint q[M],ql,qr;\nvoid init(){ ql=qr=0;\n\tfor(int i=0;i<26;i++){\n\t\tint &v=t[root].tr[i];\n\t\tif(v){ t[v].fail=root; q[qr++]=v; }\n\t\telse v=root;\n\t}\n\twhile(ql<qr){\n\t\tint u=q[ql++];\n\t\tfor(int i=0;i<26;i++){\n\t\t\tint &v=t[u].tr[i];\n\t\t\tif(v){\n\t\t\t\tt[v].fail=t[t[u].fail].tr[i];\n\t\t\t\tq[qr++]=v;\n\t\t\t}else v=t[t[u].fail].tr[i];\n            // \u8fd9\u4e2aelse\u5c31\u662f\u628aNFA\u8f6c\u5316\u6210DFA\u7684\u5173\u952e\u4e86qwq,\n            // \u5728u\u5904,\u6ca1\u6709i\u7684\u8f6c\u79fb,\u4f1a\u5931\u914d\u8d70fail,\n            // \u6211\u4eec\u7684\u5904\u7406\u53ef\u4ee5\u8fd9\u4e48\u7406\u89e3,\u63d0\u524d\u8d70\u4e86fail\u6811\u627e\u5230\u4e86\u53ef\u4ee5\u7ee7\u7eed\u5339\u914d\u7684\u72b6\u6001.\n\t\t}\n\t}\n\tfor(int i=1;i<=cnt;i++) son[t[i].fail].push_back(i);\n\tdfs(root);\n\tfor(int i=1;i<=cnt;i++){ son[i].clear(); son[i].shrink_to_fit(); }\n}\n\nchar str[M];\nint main(){\n\tscanf(\"%d%d\",&n,&m); root=++cnt;\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%s\",str); at[i]=ins(str);\n\t} init(); idx++;\n\n\tfor(int i=1;i<=m;i++){ int j=at[i]; in[i]=1; ins(j); }\n\n\tInt ans=0; while(n--){\n\t\tchar op=getchar();\n\t\twhile(op!='?'&&op!='-'&&op!='+') op=getchar();\n\t\tif(op=='?'){\n\t\t\tscanf(\"%s\",str); ans=0;\n            // \u5c31\u66b4\u529b\u5339\u914d...\n\t\t\tfor(int i=0,q=root;str[i];i++) ans+=get(q=t[q].tr[str[i]-'a']);\n\t\t\tprintf(\"%.0f\\n\",double(ans));\n\t\t}\n\t\tif(op=='+'){\n\t\t\tint id=0; scanf(\"%d\",&id);\n\t\t\tif(in[id]==0){ in[id]=1; ins(at[id]); }\n\t\t}\n\t\tif(op=='-'){\n\t\t\tint id=0; scanf(\"%d\",&id);\n\t\t\tif(in[id]==1){ in[id]=0; del(at[id]); }\n\t\t}\n\t}\n\treturn 0;\n}\n\n```\n\n\n\n\n\n\n\n",
        "postTime": 1579010839,
        "uid": 15295,
        "name": "hehelego",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF163E \u3010e-Government\u3011"
    },
    {
        "content": "[\u9898\u76ee](https://www.luogu.org/problemnew/show/CF163E)\n\n\u4e24\u4e2a$log$\u7684\u6811\u72b6\u6570\u7ec4\u5957\u6811\u5256\uff1f\n\n\u6211\u4eec\u5bf9\u4e8e\u7ed9\u51fa\u7684$n$\u4e2a\u6a21\u5f0f\u4e32\u5efa\u7acb$AC$\u81ea\u52a8\u673a\uff0c\u4e4b\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee\u4e32\u76f4\u63a5\u4e22\u4e0a\u53bb\u5339\u914d\n\n\u5982\u679c\u8fd9\u91cc\u662f\u66b4\u529b\u7684\u8bdd\uff0c\u6211\u4eec\u76f4\u63a5\u4e00\u8def\u8df3$fail$\u7d2f\u52a0\u4f5c\u4e3a\u7ed3\u675f\u4f4d\u7f6e\u8fd8\u6ca1\u6709\u88ab\u5220\u9664\u7684\u70b9\u5c31\u597d\u4e86\n\n\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u5feb\u70b9\u7684\u65b9\u5f0f\uff0c\u6811\u5256\n\n\u628a$fail$\u6811\u5efa\u51fa\u6765\uff0c\u76f4\u63a5\u5728\u4e0a\u9762\u6811\u5256\u7ef4\u62a4\u5c31\u597d\u4e86\n\n\u7531\u4e8e\u53ea\u662f\u5355\u70b9\u4fee\u6539\uff0c\u6211\u4eec\u6811\u72b6\u6570\u7ec4\u5c31\u597d\u4e86\n\n\u5c3d\u7ba1\u662f\u4e24\u4e2a$log$\uff0c\u4f46\u6bd5\u7adf\u6811\u5256\u548c\u6811\u72b6\u6570\u7ec4\u90fd\u662f\u51fa\u4e86\u540d\u7684\u5c0f\u5e38\u6570\uff0c\u8fd8\u662f\u80fd\u8dd1\u8fc7$1e6$\u7684\n\n\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<queue>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define re register\n#define lb(x) ((x)&(-x))\n#define LL long long\n#define max(a,b) ((a)>(b)?(a):(b))\n#define min(a,b) ((a)<(b)?(a):(b))\nconst int maxn=1e6+5;\nstruct E{int v,nxt;}e[maxn];\nint n,m,cnt,__,num;\nchar S[maxn];\nint c[maxn],dfn[maxn],sum[maxn],top[maxn],head[maxn];\nint son[maxn][26],fa[maxn],pos[maxn],val[maxn],s[maxn];\ninline void add_edge(int x,int y) {\n\te[++num].v=y;e[num].nxt=head[x];head[x]=num;\n}\ninline void ins(int o) {\n\tscanf(\"%s\",S+1);int len=strlen(S+1);\n\tint now=0;\n\tfor(re int i=1;i<=len;i++) {\n\t\tif(!son[now][S[i]-'a']) son[now][S[i]-'a']=++cnt;\n\t\tnow=son[now][S[i]-'a'];\n\t}\n\tpos[o]=now;\n}\nvoid dfs1(int x) {\n\tint maxx=-1;s[x]=-1,sum[x]=1;\n\tfor(re int i=head[x];i;i=e[i].nxt) {\n\t\tdfs1(e[i].v);\n\t\tsum[x]+=sum[e[i].v];\n\t\tif(sum[e[i].v]>maxx) maxx=sum[e[i].v],s[x]=e[i].v;\n\t}\n}\nvoid dfs2(int x,int topf) {\n\ttop[x]=topf,dfn[x]=++__;\n\tif(s[x]==-1) return;\n\tdfs2(s[x],topf);\n\tfor(re int i=head[x];i;i=e[i].nxt)\n\tif(s[x]!=e[i].v) dfs2(e[i].v,e[i].v); \n}\ninline void Build() {\n\tstd::queue<int> q;\n\tfor(re int i=0;i<26;i++) if(son[0][i]) q.push(son[0][i]);\n\twhile(!q.empty()) {\n\t\tint k=q.front();q.pop();\n\t\tfor(re int i=0;i<26;i++)\n\t\tif(son[k][i]) fa[son[k][i]]=son[fa[k]][i],q.push(son[k][i]);\n\t\t\telse son[k][i]=son[fa[k]][i];\n\t}\n}\ninline void add(int x,int v) {for(re int i=x;i<=cnt;i+=lb(i)) c[i]+=v;}\ninline int ask(int x) {\n\tint now=0;\n\tfor(re int i=x;i;i-=lb(i)) now+=c[i];\n\treturn now;\n}\ninline int query(int l,int r) {return ask(r)-ask(l-1);}\ninline int Query(int x) {\n\tint tot=0;\n\twhile(top[x]) {\n\t\ttot+=query(dfn[top[x]],dfn[x]);\n\t\tx=fa[top[x]];\n\t}\n\ttot+=query(dfn[0],dfn[x]);\n\treturn tot;\n}\nint main() {\n\tscanf(\"%d%d\",&m,&n);\n\tfor(re int i=1;i<=n;i++) ins(i);\n\tBuild();\n\tfor(re int i=1;i<=cnt;i++) add_edge(fa[i],i);\n\tdfs1(0);dfs2(0,0);cnt++;\n\tfor(re int i=1;i<=n;i++) val[i]=1,add(dfn[pos[i]],1);\n\twhile(m--) {\n\t\tscanf(\"%s\",S);int len=strlen(S);\n\t\tif(S[0]=='+') {\n\t\t\tint x=0;\n\t\t\tfor(re int i=1;i<len;i++) x=(x<<3)+(x<<1)+S[i]-48;\n\t\t\tif(val[x]) continue;\n\t\t\tadd(dfn[pos[x]],1);val[x]=1;\n\t\t}\n\t\tif(S[0]=='-') {\n\t\t\tint x=0;\n\t\t\tfor(re int i=1;i<len;i++) x=(x<<3)+(x<<1)+S[i]-48;\n\t\t\tif(!val[x]) continue;\n\t\t\tadd(dfn[pos[x]],-1);val[x]=0;\n\t\t}\n\t\tif(S[0]=='?') {\n\t\t\tint now=0;int ans=0;\n\t\t\tfor(re int i=1;i<len;i++) {\n\t\t\t\tnow=son[now][S[i]-'a'];\n\t\t\t\tans+=Query(now);\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",ans);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1555543305,
        "uid": 35178,
        "name": "asuldb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 \u3010CF163E \u3011e-Government"
    },
    {
        "content": "\u597d\u4e45\u6ca1\u5199 `AC` \u81ea\u52a8\u673a\u4e86\uff0c\u6765\u4e00\u53d1\u5957\u7ebf\u6bb5\u6811\u7684\u9898\u89e3\u5427\u3002\n\n### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u5305\u542b $k$ \u4e2a\u5b57\u7b26\u4e32\u7684\u96c6\u5408 $S$\uff0c\u6709 $n$ \u4e2a\u64cd\u4f5c\uff0c\u64cd\u4f5c\u6709\u4e09\u79cd\u7c7b\u578b\uff1a\n\n* \u4ee5 `\uff1f` \u5f00\u5934\u7684\u64cd\u4f5c\u4e3a\u8be2\u95ee\u64cd\u4f5c\uff0c\u8be2\u95ee\u5f53\u524d\u5b57\u7b26\u4e32\u96c6S\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5b57\u7b26\u4e32\u5339\u914d\u8be2\u95ee\u5b57\u7b26\u4e32\u7684\u6b21\u6570\u4e4b\u548c\uff1b\n\n* \u4ee5 `+` \u5f00\u5934\u7684\u64cd\u4f5c\u4e3a\u6dfb\u52a0\u64cd\u4f5c\uff0c\u8868\u793a\u5c06\u7f16\u53f7\u4e3a $i$ \u7684\u5b57\u7b26\u4e32\u52a0\u5165\u5230\u96c6\u5408\u4e2d\uff1b\n\n* \u4ee5 `-` \u5f00\u5934\u7684\u64cd\u4f5c\u4e3a\u5220\u9664\u64cd\u4f5c\uff0c\u8868\u793a\u5c06\u7f16\u53f7\u4e3a $i$ \u7684\u5b57\u7b26\u4e32\u4ece\u96c6\u5408\u4e2d\u5220\u9664\u3002\n\n\u6ce8\u610f\u5f53\u7f16\u53f7\u4e3ai\u7684\u5b57\u7b26\u4e32\u5df2\u7ecf\u5728\u96c6\u5408\u4e2d\u65f6\uff0c\u5141\u8bb8\u5b58\u5728\u6dfb\u52a0\u7f16\u53f7\u4e3a $i$ \u7684\u5b57\u7b26\u4e32\uff0c\u5220\u9664\u4ea6\u7136\u3002\n\n### \u89e3\u9898\u601d\u8def\n\n\u8bfb\u9898\uff0c\u53d1\u73b0\u9898\u76ee\u662f\u8981\u6c42\u591a\u6a21\u5f0f\u4e32\u5339\u914d\u6570\u603b\u548c\u3002\n\n\u9700\u8981\u7528\u5230\u4e00\u4e2a\u7ed3\u8bba\uff1a\u8fd9\u4e2a\u6a21\u5f0f\u4e32\u4e00\u5b9a\u4f1a\u88ab\u8fd9\u4e2a\u6a21\u5f0f\u4e32\u672b\u5c3e\u4f4d\u7f6e\u5728 `fail` \u6811\u4e0a\u7684\u5b50\u6811\u4ee3\u8868\u7684\u5b57\u7b26\u4e32\u5339\u914d\u5230\u3002\n\n\u7531\u4e8e\u6240\u6709\u5b57\u7b26\u4e32\u90fd\u5df2\u7ecf\u7ed9\u51fa\uff0c\u90a3\u4e48\u5148\u5efa\u597d `fail` \u6811\uff0c\u6807\u8bb0\u4e0a\u6bcf\u4e2a\u4e32\u7684\u7ed3\u5c3e\u3002\n\n\u6545\u6dfb\u52a0\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u53ea\u9700\u8981\u5728\u8fd9\u4e2a\u4e32\u7684\u7ed3\u5c3e\u5728 `fail` \u6811\u4e0a\u7684\u5b50\u6811\u6807\u8bb0\u90fd\u52a0 $1$\uff0c\u5220\u9664\u5219\u51cf $1$\u3002\n\n\u6807\u8bb0\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u8be2\u95ee\uff0c\u5c06\u4ed6\u653e\u5728 `fail` \u6811\u4e0a\u8dd1\uff0c\u5e76\u7d2f\u52a0\u6807\u8bb0\u5373\u53ef\u3002\n\n\u5177\u4f53\u8bf7\u770b\u4ee3\u7801\u3002\n\n\n### CODE\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ninline int read()\n{\n    int x = 0, f = 1;\n    char c = getchar();\n    while (c < '0' || c > '9')\n    {\n        if (c == '-')\n            f = -1;\n        c = getchar();\n    }\n    while (c >= '0' && c <= '9')\n    {\n        x = x * 10 + c - '0';\n        c = getchar();\n    }\n    return x * f;\n}\n\nint n, m;\n\nchar str[1000007];\n\nint cnt, id[100007], tr[1000007][26], fail[1000007];\n\nint tot, head[1000007], to[1000007], nxt[1000007];\n\nint cnt_node, L[1000007], R[1000007];\n\nint del[100007];\n\nvoid add(int u, int v)\n{\n    to[++tot] = v;\n    nxt[tot] = head[u];\n    head[u] = tot;\n}\n\nvoid insert(int x)\n{\n    scanf(\"%s\", str);\n    int len = strlen(str);\n    int p = 0;\n    for (int i = 0; i < len; ++i)\n    {\n        int v = str[i] - 'a';\n        if (!tr[p][v])\n            tr[p][v] = ++cnt;\n        p = tr[p][v];\n    }\n    id[x] = p;\n}\n\nvoid get_fail()\n{\n    queue<int> q;\n    for (int i = 0; i < 26; ++i)\n        if (tr[0][i])\n        {\n            fail[tr[0][i]] = 0;\n            q.push(tr[0][i]);\n        }\n    while (!q.empty())\n    {\n        int u = q.front();\n        q.pop();\n        for (int i = 0; i < 26; ++i)\n        {\n            if (tr[u][i])\n            {\n                fail[tr[u][i]] = tr[fail[u]][i];\n                q.push(tr[u][i]);\n            }\n            else\n            {\n                tr[u][i] = tr[fail[u]][i];\n            }\n        }\n    }\n    for (int i = 1; i <= cnt; ++i)\n        add(fail[i], i);\n}\n\nvoid dfs(int u, int fa)\n{\n    L[u] = ++cnt_node;\n    for (int i = head[u]; i; i = nxt[i])\n    {\n        int v = to[i];\n        if (v == fa)\n            continue;\n        dfs(v, u);\n    }\n    R[u] = cnt_node;\n}\n\nint t[1000007 << 2], lazy[1000007 << 2];\n\nvoid push_down(int o, int l, int r)\n{\n    if (lazy[o])\n    {\n        int mid = (l + r) >> 1;\n        t[o << 1] += (mid - l + 1) * lazy[o];\n        t[o << 1 | 1] += (r - mid) * lazy[o];\n        lazy[o << 1] += lazy[o];\n        lazy[o << 1 | 1] += lazy[o];\n        lazy[o] = 0;\n    }\n}\n\nvoid update(int o, int l, int r, int L, int R, int k)\n{\n    if (L <= l && r <= R)\n    {\n        t[o] += (r - l + 1) * k;\n        lazy[o] += k;\n        return;\n    }\n    int mid = (l + r) >> 1;\n    push_down(o, l, r);\n    if (L <= mid)\n        update(o << 1, l, mid, L, R, k);\n    if (R > mid)\n        update(o << 1 | 1, mid + 1, r, L, R, k);\n    t[o] = t[o << 1] + t[o << 1 | 1];\n}\n\nint query(int o, int l, int r, int L, int R)\n{\n    if (L <= l && r <= R)\n    {\n        return t[o];\n    }\n    int mid = (l + r) >> 1;\n    int res = 0;\n    push_down(o, l, r);\n    if (L <= mid)\n        res += query(o << 1, l, mid, L, R);\n    if (R > mid)\n        res += query(o << 1 | 1, mid + 1, r, L, R);\n    t[o] = t[o << 1] + t[o << 1 | 1];\n    return res;\n}\n\nint Query()\n{\n    int x = 0, i = 0, ans = 0;\n    for (int i = 1, len = strlen(str); i < len; ++i)\n        x = tr[x][str[i] - 'a'], ans += query(1, 1, cnt, 1, L[id[x]]);\n    return ans;\n}\n\nsigned main()\n{\n    m = read(), n = read();\n    for (int i = 1; i <= n; ++i)\n        insert(i);\n    get_fail();\n    dfs(0, -1);\n    cnt++;\n    for (int i = 1; i <= n; ++i)\n        update(1, 1, cnt, L[id[i]], R[id[i]], 1);\n    while (m--)\n    {\n        char opt;\n        int x = 0;\n        cin >> opt;\n        if (opt == '?')\n        {\n            int ans = 0;\n            scanf(\"%s\", str);\n            // printf(\"%s\\n\", str);\n            for (int i = 0, len = strlen(str); i < len; ++i)\n            {\n                x = tr[x][str[i] - 'a'];\n                if (x)\n                {\n                    ans += query(1, 1, cnt, L[x], L[x]);\n                }\n            }\n            printf(\"%d\\n\", ans);\n            continue;\n        }\n        if (opt == '-')\n        {\n            cin >> x;\n            if (!del[x])\n                del[x] = 1, update(1, 1, cnt, L[id[x]], R[id[x]], -1);\n        }\n        else\n        {\n            cin >> x;\n            if (del[x])\n                del[x] = 0, update(1, 1, cnt, L[id[x]], R[id[x]], 1);\n        }\n    }\n}\n```\n\n",
        "postTime": 1636261321,
        "uid": 257146,
        "name": "orz_z",
        "ccfLevel": 0,
        "title": "CF163E e-Government"
    },
    {
        "content": "[$\\texttt{CF163E e-Government}$](https://www.luogu.com.cn/problem/CF163E)\n\n[$\\texttt{Read in my CnBlogs}$](https://www.cnblogs.com/zeno6174/p/solution-cf163e.html)\n\n## \u5206\u6790\n\n\u8bfb\u9898\uff0c\u53d1\u73b0\u9898\u76ee\u662f\u8981\u6c42\u591a\u6a21\u5f0f\u4e32\u5339\u914d\u6570\u603b\u548c\u3002\u4f46\u662f\u8fd8\u6709\u9644\u52a0\u6761\u4ef6\uff1a\u4e00\u90e8\u5206\u4e32\u7684\u8d21\u732e\u662f\u4e0d\u7b97\u8fdb\u53bb\u7684\u3002\n\n\u505a\u4e00\u505a [AC \u81ea\u52a8\u673a\u4e8c\u6b21\u52a0\u5f3a\u7248](https://www.luogu.com.cn/problem/P5357)\uff0c\u91cc\u9762\u4e5f\u662f\u591a\u6a21\u5f0f\u4e32\u5339\u914d\uff0c\u4f46\u662f\u7531\u4e8e\u65f6\u9650\u5f88\u77ed\uff0c\u9700\u8981\u7528\u5230\u4e00\u4e2a\u7ed3\u8bba\uff1a**\u4e00\u4e2a\u6a21\u5f0f\u4e32\u7684\u7b54\u6848\u7b49\u4e8e\u8fd9\u4e2a\u4e32\u672b\u5c3e\u7684\u4f4d\u7f6e\u7528 $\\textit{\\textbf{fail}}$ \u8fde\u8fb9\u540e $\\textit{\\textbf{p}}$ \u7684\u5b50\u6811 $\\textit{\\textbf{siz}}$ \u548c**\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u6709\u4e86\u4e00\u4e2a\u60f3\u6cd5\uff1a\u4e8b\u5148 $\\texttt{build } fail$\uff0c\u7b97\u51fa\u5b50\u6811 $siz$\uff0c\u62ff\u5230\u6587\u672c\u4e32\u5c31\u76f4\u63a5\u4e00\u4f4d\u4e00\u4f4d\u904d\u5386\u8ba1\u7b97\u5f53\u524d\u4f4d\u7f6e\u7684\u7b54\u6848\u3002\n\n## \u5b9e\u73b0\n\n\u73b0\u5728\u7684\u95ee\u9898\uff1a\n\n+ \u5b50\u6811\u4fee\u6539\n+ \u5355\u70b9\u67e5\u8be2\n\n\u8003\u8651\u8ba1\u7b97 $dfn$ \u5e8f\uff0c\u628a\u5b50\u6811\u8868\u793a\u4e3a\u4e00\u6bb5\u533a\u95f4\u3002\n\n+ $l$\uff1a\u641c\u5230\u8fd9\u4e2a\u70b9\u65f6\u7684 $dfn$\uff0c\n+ $r$\uff1a\u79bb\u5f00\u8fd9\u4e2a\u70b9\u65f6\u7684 $dfn+1$\u3002\n\n\u90a3\u4e48 $i$ \u7684\u5b50\u6811\u5c31\u5e94\u8be5\u662f\u5de6\u95ed\u53f3\u5f00\u533a\u95f4 $[l_i,r_i)$\u3002\n\n\u90a3\u4e48\u4e0d\u96be\u60f3\u5230\u5957\u4e2a\u6811\u72b6\u6570\u7ec4\u5904\u7406\u533a\u95f4\u4fee\u6539\u5355\u70b9\u67e5\u8be2\u3002\n\n\u6ce8\u610f $dfn$ \u7684\u8ba1\u7b97\u9700\u8981\u7528 $fail_i\\to i$ \u8fde\u8fb9\u5c31\u597d\u4e86\u3002\n\n## Code\n\n```cpp\n#include<stdio.h>\n#include<string.h>\n#include<vector>\n#include<queue>\n\ninline int read(){\n    register int x = 0;\n    register char c = getchar();\n    for(;c < '0' || c > '9';c = getchar());\n    for(;c >= '0' && c <= '9';c = getchar())\n        x = x * 10 + (c ^ '0');\n    return x;\n}\n#define rint register int\n\nconst int maxn = 1e5 + 1;\nconst int maxm = 1e6 + 1;\n\nnamespace AC{\n\tint C[maxm][26],E[maxn],cnt = 0;\n\tint fail[maxm];\n\tstd::queue<int> q;\n\tstd::vector<int> G[maxm];\n\tvoid insert(char *s,rint x){\n\t\trint p = 0,l = strlen(s);\n\t\tfor(rint i = 0;i < l;++i){\n\t\t\trint j = s[i] - 'a';\n\t\t\tif(!C[p][j]) C[p][j] = ++cnt;\n\t\t\tp = C[p][j];\n\t\t}\n\t\tE[x] = p;\n\t}\n\tvoid build(){\n\t\tfor(rint i = 0;i < 26;++i)\n\t\t\tif(C[0][i]){\n\t\t\t\tfail[C[0][i]] = 0;\n\t\t\t\tG[0].push_back(C[0][i]);\n\t\t\t\tq.push(C[0][i]);\n\t\t\t}\n\t\twhile(!q.empty()){\n\t\t\trint u = q.front();\n\t\t\tq.pop();\n\t\t\tfor(rint i = 0;i < 26;++i){\n\t\t\t\trint &v = C[u][i],f = C[fail[u]][i];\n\t\t\t\tif(v) fail[v] = f,G[f].push_back(v),q.push(v);\n\t\t\t\telse v = f;\n\t\t\t}\n\t\t}\n\t} \n\tint l[maxm],r[maxm],dfn = 0;\n\tvoid dfs(rint u){\n\t\tl[u] = dfn++;\n\t\tfor(rint v : G[u]) dfs(v);\n\t\tr[u] = dfn;\n\t}\n}\n\nnamespace BIT{\n\tint T[maxm];\n\tvoid add(rint p,rint x){for(++p;p < maxm;p += (p & -p)) T[p] += x;}\n\tvoid upd(rint l,rint r,rint x){add(l,x);add(r,-x);}\n\tint qry(rint p){rint R = 0;for(++p;p;p -= (p & -p)) R += T[p];return R;}\n}\n\nusing namespace AC;\nusing namespace BIT;\n\nchar s[maxm],t[maxm];\nbool inset[maxn];\nsigned main(){\n\tint n,m;\n\tscanf(\"%d%d\",&m,&n);\n\tfor(int i = 1;i <= n;++i){\n\t\tscanf(\"%s\",s);\n\t\tinsert(s,i);\n\t}\n\tbuild();\n\tdfs(0);\n\tfor(int i = 1;i <= n;++i){\n\t\tinset[i] = true;\n\t\tupd(l[E[i]],r[E[i]],1);\n\t}\n\twhile(m--){\n\t\tchar opt;\n\t\tscanf(\"\\n%c\",&opt);\n\t\tif(opt == '+'){\n\t\t\trint x;\n\t\t\tscanf(\"%d\",&x);\n\t\t\tif(inset[x]) continue;\n\t\t\tinset[x] = true;\n\t\t\tupd(l[E[x]],r[E[x]],1);\n\t\t} else if(opt == '-'){\n\t\t\trint x;\n\t\t\tscanf(\"%d\",&x);\n\t\t\tif(!inset[x]) continue;\n\t\t\tinset[x] = false;\n\t\t\tupd(l[E[x]],r[E[x]],-1);\n\t\t} else {\n\t\t\tscanf(\"%s\",t);\n\t\t\trint ln = strlen(t),p = 0,ans = 0;\n\t\t\tfor(int i = 0;i < ln;++i){\n\t\t\t\trint j = t[i] - 'a';\n\t\t\t\tp = C[p][j];\n\t\t\t\tans += qry(l[p]);\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",ans);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1632809186,
        "uid": 368107,
        "name": "xfrvq",
        "ccfLevel": 7,
        "title": "\u9898\u89e3-CF163E"
    }
]