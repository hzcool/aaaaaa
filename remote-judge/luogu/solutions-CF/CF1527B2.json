[
    {
        "content": "\u4e0b\u6587\u7528 A \u8868\u793a Alice\uff0cB \u8868\u793a Bob\u3002\n\n\u5148\u8ba8\u8bba $s$ \u672c\u8eab\u662f\u56de\u6587\u7684\u60c5\u51b5\uff1a\n\n\u4ece $\\texttt{0}$ \u7684\u4e2a\u6570\u7684\u5947\u5076\u6027\u8ba8\u8bba\uff08\u535a\u5f08\u8bba\u5957\u8def\uff09\uff0c\u8bb0 $\\texttt{0}$ \u7684\u4e2a\u6570\u4e3a $c$\u3002\n\n\u82e5 $c$ \u4e3a\u5076\u6570\uff0c\u5219\u65e0\u8bba A \u5728\u54ea\u91cc\u4fee\u6539\uff0cB \u5c31\u5728\u5bf9\u5e94\u7684\u4f4d\u7f6e\u4fee\u6539\uff0c\u4f7f\u5f97 B \u4fee\u6539\u5b8c\u540e $s$ \u4ecd\u7136\u662f\u56de\u6587\u3002\u5982\u6b64\u53cd\u590d\u76f4\u5230\u5269\u4e0b $2$ \u4e2a $\\texttt{0}$ \u65f6\uff0cA \u4fee\u6539\u5b8c\u540e B \u53ef\u4ee5\u7ffb\u8f6c $s$\uff0c\u8fd9\u6837\u5fc5\u7136\u4f1a\u4f7f A \u4fee\u6539\u7684\u6b21\u6570\u6bd4 B \u591a $2$\uff0cB \u83b7\u80dc\u3002\n\n\u82e5 $c$ \u4e3a\u5947\u6570\uff0c\u90a3\u4e48\u5f53 $c=1$ \u65f6 B \u663e\u7136\u5fc5\u80dc\uff1b\u5f53 $c>1$ \u65f6\uff0cA \u53ef\u4ee5\u4fee\u6539 $s$ \u6b63\u4e2d\u95f4\u7684 $\\texttt{0}$\uff0c\u8fd9\u6837\u4e22\u7ed9 B \u7684\u5c40\u9762\u5c31\u662f $c$ \u4e3a\u5076\u6570\u7684\u60c5\u51b5\uff0c\u4ece\u800c\u6700\u7ec8 B \u4fee\u6539\u7684\u6b21\u6570\u6bd4 A \u591a $1$\uff0cA \u83b7\u80dc\u3002\n\n\u56e0\u6b64\u5f53 $c$ \u4e3a\u5947\u6570\u4e14 $c>1$ \u65f6 A \u5fc5\u80dc\uff0c\u5426\u5219 B \u5fc5\u80dc\u3002\n\n\u5982\u679c $s$ \u4e0d\u662f\u56de\u6587\uff0c\u90a3\u4e48\u6839\u636e $n$ \u7684\u5947\u5076\u6027\u6765\u8ba8\u8bba\uff1a\n\n\u82e5 $n$ \u4e3a\u5076\u6570\uff0c\u5219 A \u603b\u662f\u53ef\u4ee5\u5148\u7ffb\u8f6c\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48 B \u5fc5\u7136\u8981\u4f18\u5148\u5c06 $s$ \u8865\u6210\u56de\u6587\u4e32\uff0c\u5426\u5219 A \u53ef\u4ee5\u4e00\u76f4\u6267\u884c\u7ffb\u8f6c\u64cd\u4f5c\u3002A \u53ea\u8981\u8ba9\u81ea\u5df1\u6210\u4e3a\u8865\u6210\u56de\u6587\u4e32\u7684\u6700\u540e\u4e00\u624b\u7684\u4eba\uff0c\u90a3\u4e48\u4e22\u7ed9 B \u7684\u5c40\u9762\u5fc5\u7136\u662f\u4e0a\u9762\u6240\u8ba8\u8bba\u7684 $c$ \u4e3a\u5076\u6570\u7684\u60c5\u51b5\uff0c\u6b64\u65f6 A \u5fc5\u80dc\u3002\n\n\u82e5 $n$ \u4e3a\u5947\u6570\uff0c\u4e14 $s[n/2]$ \u4e3a $\\texttt{1}$\uff0c\u90a3\u4e48\u53ef\u4ee5\u5c06 $s[n/2]$ \u53bb\u6389\uff0c\u5219\u4e0e $n$ \u4e3a\u5076\u6570\u7684\u60c5\u51b5\u662f\u4e00\u6837\u7684\u3002\u82e5 $s[n/2]$ \u4e3a $\\texttt{0}$\uff0c\u4e14 $c=2$\uff0c\u90a3\u4e48\u65e0\u8bba\u5982\u4f55 A \u548c B \u90fd\u8981\u4fee\u6539\u4e00\u6b21\uff0c\u6b64\u65f6\u4e24\u4eba\u6253\u6210\u5e73\u624b\u3002\u82e5 $c>2$\uff0c\u90a3\u4e48 A \u53ef\u4ee5\u4e00\u76f4\u7ffb\u8f6c\u5b57\u7b26\u4e32\uff0c\u7b49\u5f85 B \u5c06 $s$ \u4fee\u6539\u6210\u56de\u6587\u4e32\u65f6\uff0c\u4fee\u6539 $s[n/2]$ \u4e3a $\\texttt{1}$\uff0c\u90a3\u4e48\u4e22\u7ed9 B \u7684\u5c40\u9762\u5fc5\u7136\u662f\u4e0a\u9762\u6240\u8ba8\u8bba\u7684 $c$ \u4e3a\u5076\u6570\u7684\u60c5\u51b5\uff0c\u6b64\u65f6 A \u5fc5\u80dc\u3002\n\n\u56e0\u6b64\uff0c\u5982\u679c $s$ \u4e0d\u662f\u56de\u6587\uff0c\u5219\u5f53\u4e14\u4ec5\u5f53 $n$ \u4e3a\u5947\u6570\u4e14 $s[n/2]$ \u4e3a $\\texttt{0}$ \u4e14 $c=2$ \u65f6\u4e3a\u5e73\u5c40\uff0c\u5426\u5219 A \u5fc5\u80dc\u3002\n\nAC \u4ee3\u7801\uff1a\uff08Golang\uff09\n\n```go\npackage main\nimport(\"bufio\";.\"fmt\";.\"os\";.\"strings\")\n\nfunc main() {\n\tin := bufio.NewReader(Stdin)\n\tvar T, n int\n\tvar s string\n\tfor Fscan(in, &T); T > 0; T-- {\n\t\tFscan(in, &n, &s)\n\t\tisP := true\n\t\tfor i := 0; i < n/2; i++ {\n\t\t\tif s[i] != s[n-1-i] {\n\t\t\t\tisP = false\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tc := Count(s, \"0\")\n\t\tif isP {\n\t\t\tif c&1 > 0 && c > 1 {\n\t\t\t\tPrintln(\"ALICE\")\n\t\t\t} else {\n\t\t\t\tPrintln(\"BOB\")\n\t\t\t}\n\t\t} else if n&1 > 0 && s[n/2] == '0' && c == 2 {\n\t\t\tPrintln(\"DRAW\")\n\t\t} else {\n\t\t\tPrintln(\"ALICE\")\n\t\t}\n\t}\n}\n```",
        "postTime": 1621576751,
        "uid": 266651,
        "name": "\u7075\u8336\u5c71\u827e\u5e9c",
        "ccfLevel": 0,
        "title": "CF1527B2 Palindrome Game (hard version) \u9898\u89e3"
    },
    {
        "content": "# 1.\u524d\u8a00\n[CF\u94fe\u63a5](http://codeforces.com/contest/1527/problem/B2)\n\n\u9898\u76ee\u5927\u610f\uff1a\u8f93\u51fa 1 \u5230 $n$ \u7684\u6574\u6570\u4e2d\uff0c\u6709\u591a\u5c11\u4e2a\u7531\u76f8\u540c\u6570\u5b57\u7ec4\u6210\u7684\u6570\u3002\n# 2.\u9898\u76ee\u89e3\u6790\uff1a\n\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u7b80\u5355\u7b56\u7565\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u56de\u6587\u4e32\uff08\u6700\u4e2d\u95f4\u7684\u6570\u5b57\u4e0d\u4e3a $0$\uff09\uff0c\u90a3\u4e48\u53ef\u4ee5\u91c7\u53d6 A \u586b\u54ea\u4e2a\u4f4d\u7f6e\uff0cB \u5c31\u586b\u56de\u6587\u4e32\u5bf9\u5e94\u7684\u4f4d\u7f6e\uff1b\n\n\u76f4\u5230\u5269\u4e0b 2 \u4e2a $0$ \u7684\u65f6\u5019\uff0cA \u586b\u4efb\u4f55\u4e00\u4e2a\u4f4d\u7f6e\uff0cB \u9009\u62e9 reverse\uff1b\u6b64\u65f6 A \u53ea\u80fd\u518d\u586b\u4e00\u6b21 $0$\uff0cB\u5fc5\u80dc\uff1b\n \u5148\u624b\u8005\uff0c\u9664\u975e\u56de\u6587\u4e32\u4e2d\u95f4\u662f $0$\uff08\u5f53\u6709\u7a7a\u683c\u7684\u90e8\u5206\u5927\u4e8e $1$ \u65f6\uff09\uff0c\u5426\u5219\u5fc5\u8f93\u3002\n \n\u8fd9\u4e2a\u9898\u76ee\u4e2d\u5148\u624b\u662f\u53ef\u4ee5 reverse \u64cd\u4f5c\u7684\uff0c\u8fd9\u662f\u4e00\u4e2a\u6bd4\u8f83\u5927\u7684\u4f18\u52bf\uff1b\n\n\u5982\u679c\u8d77\u624b\u662f\u56de\u6587\u4e32\uff0c\u90a3\u4e48\u53ef\u4ee5\u7528\u4e0a\u9762\u7684\u903b\u8f91\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u70b9\uff0c\u5148\u540e\u624b\u6700\u5927\u7684\u5dee\u8ddd\u662f 2\uff0c\u5c31\u662f $1001$ \u8fd9\u79cd\u60c5\u51b5\uff0c\u56e0\u4e3a\u90fd\u4f1a\u91c7\u7528\u6700\u4f73\u7b56\u7565\u3002\n \n\u4e3a\u4e86\u65b9\u4fbf\u601d\u8003\uff0c\u6211\u4eec\u5f15\u5165\u51fd\u6570 f\uff0c$f(str)$ \u8868\u793a\u56de\u6587\u4e32str\uff0c\u5148\u624b\u4f1a\u8d62\u591a\u5c11\uff1b\n```\nf(1001)=-2;\nf(101)=-1; \uff08\u4ec5\u6709\u4e00\u4e2a 0 \u7684\u60c5\u51b5\u4e0b\uff09\nf(10001)=1;\n ```\n \n\u6ce8\u610f\uff1a\u9664\u4e86\u6ca1\u6709 $0$\uff0c\u5e73\u5c40\u7684\u60c5\u51b5\u662f\u4e0d\u5b58\u5728\u7684\u3002\n\u6211\u4eec\u77e5\u9053\u56de\u6587\u4e32\u7684\u80dc\u8d1f\uff0c\u6709\u4e24\u79cd\u7ed3\u679c\uff1a$-2/-1$ \u548c $1$\u3002\n\n\u5047\u5982\u5b57\u7b26\u4e32\u6ca1\u6709\u4efb\u4f55\u4f4d\u7f6e\u53ef\u4ee5\u64cd\u4f5c 1 \u6b21\uff0c\u4e4b\u540e\u53d8\u6210\u56de\u6587\u4e32\uff0c\u90a3\u4e48\u5148\u624b\u8005 Alice \u53ef\u4ee5 reverse\uff0c\u7b49\u5f85\u540e\u624b\u8005\u64cd\u4f5c\u540e\uff0c\u4f9d\u65e7\u53ef\u4ee5\u6267\u884c reverse\u3002\u8fd9\u79cd\u7b56\u7565\u5c31\u53ef\u4ee5\u5360\u9886 $1$ \u7684\u4f18\u52bf\uff0c\u56e0\u4e3a\u540e\u624b\u5728\u4e00\u76f4\u8865\u9f50\u3002\n\n\u76f4\u5230\u5b58\u5728\u4e00\u4e2a\u64cd\u4f5c\uff0c\u53ef\u4ee5\u5bf9\u67d0\u4e2a\u4f4d\u7f6e k \u8fdb\u884c\u64cd\u4f5c\uff0c\u5e76\u4e14\u64cd\u4f5c\u4e4b\u540e\u5b57\u7b26\u4e32\u53d8\u6210\u56de\u6587\u4e32 strK\uff1b\n\n- \u5047\u5982 $f(strK)=1$\uff0c\u5219 Alice \u53ef\u4ee5\u7ee7\u7eed\u6267\u884c reverse \u64cd\u4f5c\uff0c\u56e0\u4e3a Bob \u5982\u679c\u5c06\u5b57\u7b26\u4e32\u64cd\u4f5c\u4e3a strK\uff0c\u5bf9 Alice \u662f\u6709\u6536\u76ca\u7684\uff1b\n\n- \u5047\u5982 $f(strK)=-1$\uff0c\u5219 Alice \u7ee7\u7eed\u6267\u884c reverse \u4f1a\u5e73\u5c40\uff0c\u56e0\u4e3a Bob \u82b1\u8d39 $1$ \u7684\u4ee3\u4ef7\u8ba9 alice \u9762\u4e34 $-1$ \u7684\u60c5\u51b5\uff1b\uff08\u662f\u5426\u5e73\u5c40\uff0c\u53d6\u51b3\u4e8e\u5728\u8fbe\u5230\u4e0b\u4e00\u6b65\u64cd\u4f5c\u5c31\u80fd\u751f\u6210\u56de\u6587\u4e32\u7684\u64cd\u4f5c\u6b65\u6570\uff09\n\n- \u5047\u5982 $f(strK)=-2$\uff0c\u5219 Alice \u5fc5\u80dc\uff0cAlice \u82b1\u8d39 $1$ \u7684\u4ee3\u4ef7\u53ef\u4ee5\u8ba9\u5bf9\u624b\u9762\u4e34 $-2$ \u7684\u60c5\u51b5\uff1b\n \n\u8fd9\u91cc\u53ef\u4ee5\u63a8\u51fa\u6765\uff0c\u5148\u624b\u8005\u5fc5\u7136\u4e0d\u4f1a\u8f93\u3002\uff08\u6ce8\u610f\uff0c\u8fd9\u4e2a\u524d\u63d0\u662f\u6709 2 \u4e2a $0$ \u4ee5\u4e0a\uff09\n \n\u6240\u4ee5\u95ee\u9898\u662f\u5728\u4e8e\u4e0a\u9762\u7684\u60c5\u51b5 2\uff0c\u600e\u6837\u5feb\u901f\u627e\u5230\u5e73\u5c40\u3002\n \n\u6211\u4eec\u77e5\u9053\u8fd9\u4e2a\u8ffd\u8d76\u7684\u6b65\u6570\uff0c\u5e94\u8be5\u7b49\u4e8e\u5b57\u7b26\u4e32\u4e2d $1$ \u548c $0$ \u6309\u7167\u56de\u6587\u4e32\u8981\u6c42\u4e0d\u5bf9\u5e94\u7684\u6570\u91cf\u3002\n\nFor Example:\n\n10011 $\\to$ \u5176\u4e2d\u7684 $str[1]$ \u548c $str[3]$ \u4e0d\u4e00\u6837\uff0c\u9700\u8981\u8ffd\u8d76\uff0c\u90a3\u4e48\u7edf\u8ba1\u4e00\u4e0b\uff0c\u8fd9\u4e2a\u6570\u91cf\uff0c\u5373\u53ef\u5f97\u5230\u8ffd\u8d76\u7684\u6b65\u6570 $step$\u3002\n\n\u5047\u5982 $step=1$\uff0c\u5219\u521a\u597d\u548c\u6784\u6210\u56de\u6587\u4e32 $strNew$ \u4e4b\u540e\uff0c$f(strNew)$ \u7684 $-1$ \u6536\u76ca\u6301\u5e73\uff0c\u6b64\u65f6\u4f1a\u5e73\u5c40\u3002\n# 3.code\n~~\u5df2\u53bb\u9664\u5934\u6587\u4ef6~~\n```cpp\ntypedef long long lld;\nclass Solution {\n    static const int N = 100010;\npublic:\n    int n, m;\n    string pubStr;\n    bool isPalindrome(string &str) {\n        bool isPalindrome = true;\n        for (int i = 0; i < n / 2; ++i) {\n            isPalindrome = isPalindrome && (str[i] == str[n - i - 1]);\n        }\n        return isPalindrome;\n    }\n    int getCount(string &str) {\n        int ret = 0;\n        int cnt = 0;\n        for (int i = 0; i < n; ++i) {\n            if (str[i] == '0') {\n                ++cnt;\n            }\n        }\n        if (cnt == 0) {\n            ret = cnt;\n        }\n        else if (cnt == 1) {\n            ret= cnt;\n        }\n        else if (cnt % 2) {\n            ret = (str[(n - 1) / 2] == '0' ? -2 : 1);\n        }\n        else {\n            ret = -2;\n        }\n        return ret;\n    }\n    \npublic:\n    void solve() {\n        int t;\n        cin >> t;\n        while (t--) {\n            cin >> n;\n            cin >> pubStr;\n            \n            int cnt = 0, step = 0;\n            for (int i = 0; i < n; ++i) {\n                if (pubStr[i] == '0') {\n                    ++cnt;\n                }\n                if (i < n / 2 && pubStr[i] != pubStr[n - i - 1]) {\n                    ++step;\n                }\n            }\n            if (cnt == 0) {\n                cout << \"DRAW\" << endl;\n            }\n            else if (cnt == 1) {\n                if (isPalindrome(pubStr)) {\n                    cout << \"BOB\" << endl;\n                }\n                else {\n                    cout << \"ALICE\" << endl;\n                }\n            }\n            else {\n                if (isPalindrome(pubStr)) {\n                    if (cnt % 2) {\n                        cout << (pubStr[(n - 1) / 2] == '0' ? \"ALICE\" : \"BOB\") << endl;\n                    }\n                    else {\n                        cout << \"BOB\" << endl;\n                    }\n                }\n                else {\n                    if (step == 1 && cnt == 2) {\n                        cout << \"DRAW\" << endl;\n                    }\n                    else {\n                        cout << \"ALICE\" << endl;\n                    }\n                }\n            }\n            \n        }\n    }\n}\nac;\n\nint main(){\n    ac.solve();\n    return 0;\n}\n```\nDeirdre\uff1aWhen whales fall, everything lives.",
        "postTime": 1634964239,
        "uid": 554872,
        "name": "Deirdre",
        "ccfLevel": 0,
        "title": "[CF1527B2]\u9898\u89e3"
    },
    {
        "content": "\u524d\u7f6e\uff1a[B1](https://www.luogu.com.cn/blog/97304/solution-cf1527b1)\n\n\u8fd9\u4e2a B1 \u8bb2\u6e05\u695a\u4e86\u56de\u6587\u5b50\u4e32\u65f6\u7684\u60c5\u51b5\u3002\n\n\u73b0\u5728\u8bb2\u8bb2\u975e\u56de\u6587\u5b50\u4e32\u65f6\u7684\u60c5\u51b5\u3002\n\n\u9996\u5148\u6211\u4eec\u53d1\u73b0\u5148\u624b\u8981\u8d62\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n- \u8ba9\u81ea\u5df1\u53d8\u6210\u56de\u6587\u5b50\u4e32\u540e\u6210\u4e3a\u540e\u624b\u4e14\u5269\u4e0b\u5076\u6570\u4e2a $0$\uff0c\u7136\u540e\u8d62 $2$ \u5143\u94b1\u3002\n\n- \u8ba9\u81ea\u5df1\u53d8\u6210\u56de\u6587\u5b50\u4e32\u540e\u6210\u4e3a\u5148\u624b\u5e76\u5269\u4e0b\u5947\u6570\u4e2a\u4e14\u4e2a\u6570\u4e0d\u4e3a $1$ \u7684 $0$\uff0c\u7136\u540e\u53ef\u4ee5\u8d62 $1$ \u5143\u94b1\u3002\n\n\u7136\u540e\u5982\u679c\u65f6\u975e\u56de\u6587\u5b50\u4e32\u7684\u65f6\u5019\u5148\u624b\u53ef\u4ee5\u4efb\u610f\u7ffb\u8f6c\uff0c\u6240\u4ee5\u4e3b\u52a8\u6743\u638c\u63e1\u5728\u5148\u624b\u624b\u91cc\u3002\n\n\u8003\u8651\u4ee5\u4e0b\u4e24\u79cd\u60c5\u51b5\uff1a\n\n- \u5982\u679c $n$ \u4e3a\u5076\u6570\u6216\u8005\u4e2d\u95f4\u4e0d\u4e3a $0$\u3002\n\n\u90a3\u4e48\u5728 Alice \u89c6\u89d2\uff0c\u53ef\u4ee5\u65e0\u9650\u7ffb\u8f6c\u3002\u7136\u540e\u5f53 Bob \u4e00\u6b65\u5c31\u53ef\u4ee5\u628a\u539f\u4e32\u53d8\u6210\u56de\u6587\u5b50\u4e32\u7684\u65f6\u5019\u81ea\u5df1\u5148\u53d8\u6389\u3002\u90a3\u5c31\u62ff\u5230\u540e\u624b\u4e86\u3002\u53ef\u4ee5\u8d62 $2$ \u5143\u94b1\u3002\u800c\u524d\u9762\u6700\u591a\u843d\u540e $1$ \u5143\u94b1\uff08\u53ea\u6709\u4e00\u4e2a\u4e0d\u540c\u7684\u5bf9\uff09\uff0c\u6240\u4ee5\u6b64\u65f6\u5fc5\u80dc\u3002\n\n- \u5982\u679c $n$ \u4e3a\u5947\u6570\u4e14\u4e2d\u95f4\u4e3a $0$\u3002\n\n\u90a3\u4e48\u548c\u4e0a\u9762\u7684\u7b56\u7565\u4e00\u5e55\u4e00\u6837\u3002\u4f46\u662f\u5982\u679c\u5f53\u73b0\u5728\u53ea\u6709\u4e24\u4e2a $0$ \u7684\u8bdd\u53ef\u4ee5\u53d1\u73b0\u540e\u9762\u53ea\u80fd\u8d62 $1$ \u5143\u94b1\uff0c\u800c\u524d\u9762\u5374\u8f93\u4e86 $1$ \u5143\u94b1\uff0c\u6240\u4ee5\u6253\u5e73\u3002\n\n\u5177\u4f53\u7ec6\u8282\u53ef\u4ee5\u770b\u4ee3\u7801\u5b9e\u73b0\u3002\n\n```cpp\n//\u7ea2\u592a\u9633zhouakngyang txdy!\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native\")\n#include<bits/stdc++.h>\n#define Macesuted cout<<\"kawaii\"<<endl\n#define MatrixCascade cout<<\"npsl\"<<endl\n#define Karry5307 cout<<\"nmsl\"<<endl\nusing namespace std;\n//#define int long long\ninline int read()\n{\n\tint sum=0,nega=1;char ch=getchar();\n\twhile(ch>'9'||ch<'0'){if(ch=='-')nega=-1;ch=getchar();}\n\twhile(ch<='9'&&ch>='0')sum=sum*10+ch-'0',ch=getchar();\n\treturn sum*nega;\n}\nint n,cnt,flag;\nchar a[1009];\nint main()\n{\n\tint taxi=read();\n\tfor(int ttt=1;ttt<=taxi;ttt++)\n\t{\n\t\tflag=0;\n\t\tn=read();cnt=0;\n\t\tscanf(\"%s\",a+1);\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(a[i]=='0')cnt++;\n\t\t\tif(a[i]!=a[n-i+1])flag=1;\n\t\t}\n\t\tif(!flag)\n\t\t{\n\t\t\tif(cnt==1||cnt%2==0)puts(\"BOB\");\n\t\t\telse puts(\"ALICE\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(cnt==2&&n%2==1&&a[n/2+1]=='0')puts(\"DRAW\");\n\t\t\telse puts(\"ALICE\");\n\t\t}\n\t}\n\treturn 0;\n}\n\n``` ",
        "postTime": 1621671773,
        "uid": 97304,
        "name": "Mophie",
        "ccfLevel": 0,
        "title": "CF1527B2 Palindrome Game (hard version) \u9898\u89e3"
    },
    {
        "content": "### P.S.\n\u6765\u80e1\u4e00\u4e0b\u3002  \n\u53ea\u80fd\u819c\u62dc\u5176\u4ed6\u4eba\u662f\u535a\u5f08\u8bba\u5927\u5e08  \n\u8fd8\u6709\u8fd9\u7bc7\u9898\u89e3\u6709 $\\LaTeX$ \u5417 ![](//xn--9zr.tk/xia)\n\n### Solution.\n\u9996\u5148\uff0c\u6211\u4eec\u53d1\u73b0\u7ffb\u8f6c\u64cd\u4f5c\u4e00\u70b9\u7528\u90fd\u6ca1\u6709\u3002  \n\u7136\u540e\uff0c\u6211\u4eec\u53d1\u73b0\u6bcf\u5bf9\u5bf9\u5e94\u4f4d\u7f6e\u4e0a\u7684\u5b57\u7b26\u987a\u5e8f\u4e5f\u5bf9\u7b54\u6848\u6ca1\u6709\u5f71\u54cd\u3002  \n\u540c\u65f6\uff0c\u5982\u679c\u6709\u4e00\u5bf9\u6570\u5b57\u5df2\u7ecf\u53d8\u6210 1-1 \u4e86\uff0c\u90a3\u5b83\u5c31\u5b8c\u5168\u6ca1\u6709\u4f5c\u7528\u4e86\u3002  \n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u8bbe\u8ba1\u4e00\u4e2a `dp`\u3002  \n`dp[w=0/1][i][j][k=0/1][l=0/1]` \u8868\u793a\u5f53\u524d\u5230\u7b2c $w$ \u4e2a\u4eba\uff0c\u6709 $i$ \u5bf9 `0-1`\uff0c\u6709 $j$ \u5bf9 `0-0`\uff0c\u6700\u4e2d\u95f4\u6570\u5b57\u662f $k$\uff0c\u4e0a\u4e00\u4e2a\u4eba\u6709\u6ca1\u6709\u7ffb\u8f6c\u8fc7\uff08$l$\uff09\u65f6\u7684\u7b54\u6848\u3002  \n\u7136\u540e\u76f4\u63a5\u6a21\u62df\u6bcf\u4e2a\u4eba\u53ef\u4ee5\u505a\u7684\u4e8b\u6765\u8f6c\u79fb\u5373\u53ef\u3002  \n\u540c\u65f6\u8fd9\u4e2a dp \u7684\u7b54\u6848\u6bcf\u6b21\u4e0d\u53d8\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u9884\u5904\u7406\u3002  \n\u590d\u6742\u5ea6 $O(n^2)$",
        "postTime": 1625558557,
        "uid": 44805,
        "name": "Leap_Frog",
        "ccfLevel": 7,
        "title": "CF1527B2 Palindrome Game (hard version)\uff08\u9898\u89e3\uff09"
    },
    {
        "content": "\u5728\u505a\u8fd9\u4e2a\u9898\u4e4b\u524d\u5e94\u8be5\u5148\u641e\u6e05\u695a B1 \u7684\u903b\u8f91\u3002\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u8fd9\u6b21\u8981\u641e\u51fa\u4e00\u4e2a B1 \u4e0e B2 \u7684\u539f\u56e0\u2014\u2014\u4e00\u6b65\u8de8\u5230\u8fd9\u91cc\u6765\u662f\u5f88\u96be\u7684\u3002\n\n\u5982\u679c B1 \u5207\u6389\u7684\u8bdd\uff0c\u5e94\u8be5\u4f1a\u6ce8\u610f\u5230\u8fd9\u4e48\u4e2a\u4e8b\u60c5\uff1a\u9664\u4e86\u5e73\u5c40\uff0c``0`` \u7684\u4e2a\u6570\u4e3a\u5076\u6570\u7684\u65f6\u5019\u540e\u624b\u5fc5\u80dc\uff0c\u5947\u6570\u7684\u65f6\u5019\u5148\u624b\u5fc5\u80dc\u3002\u8003\u8651 ``0`` \u7684\u4e2a\u6570\u6a21 $4$ \u4e3a $0$  \u7684\u60c5\u51b5\u3002\u8fd9\u4e2a\u60c5\u51b5\u4e00\u5f00\u59cb\u5361\u4e86\u6211\u534a\u5929\uff0c\u6211\u4ee5\u4e3a\u90fd\u662f\u5e73\u5c40\uff0c\u5176\u5b9e\u4e0d\u7136\u3002\n\n\u8003\u8651B\u7684\u64cd\u4f5c\uff1aA \u4e00\u5f00\u59cb\u968f\u673a\u6311\u4e00\u4e2a\u5bf9\u79f0\u7684 ```00``` \uff08\u5373$\\cdots 0 \\cdots 0 \\cdots $\uff0c\u4e0b\u79f0 ```00```\uff09\u586b\u4e0a\u4e00\u4e2a ```1```\uff0cB \u4e5f\u8ddf\u7740\u586b\uff0c\u5728**\u5bf9\u79f0\u7684\u5730\u65b9**\u4e5f\u586b\u4e0a ```1```\uff0c\u4f7f\u5f97\u6574\u4e2a\u5f0f\u5b50\u8fd8\u662f\u4e3a\u56de\u6587\u4e32\uff08\u6ce8\u610f\uff0c\u8fd9\u91cc\u4e0d\u8981\u8f6c\uff01\uff09\u3002\u8fd9\u6837\u6a21 $4$ \u4f59 $0$ \u5c31\u53d8\u6210\u4e86\u6a21 $4$ \u4f59 $2$\uff01\u540e\u9762\u8fd9\u4e2a\u60c5\u51b5\u81ea\u7136\u4e0d\u7528\u591a\u8bf4\u80af\u5b9a\u662f B \u8d62\u2014\u2014A \u586b\u4e00\u6b21\u6211\u5c31\u8f6c\u4e00\u6b21\uff0c\u7136\u540e\u5148\u540e\u6613\u624b\uff0c$4$ \u4e2a\u4e00\u5468\u671f\uff0c\u600e\u4e48\u641e\u90fd\u662f A \u8f93\u3002\u5f53\u7136\u4e5f\u53ef\u4ee5\u5c31\u53c2\u7167\u8fd9\u4e2a\u601d\u8def\u2014\u2014\u53ea\u8981\u975e\u5bf9\u79f0\u4e2a\u6570\uff08**\u4e0b\u79f0 ```01```**\uff09\n\n\u5206\u6790\u4e00\u4e0b\u521a\u521a\u8fd9\u4e2a\u64cd\u4f5c\u7684\u672c\u8d28\u2014\u2014**\u4e0d\u8981\u56de\u6587\u4e32\uff01** \u6211\u5c3d\u53ef\u80fd\u5730\u628a\u56de\u6587\u4e32\u4e22\u7ed9\u5bf9\u65b9\uff0c\u8ba9\u5bf9\u65b9\u62ff\u5230\u56de\u6587\u4e32\uff0c\u6211\u5c31\u6709\u53ef\u80fd\u8d62\u3002\u60f3\u60f3\u5947\u6570\uff0c\u5947\u6570\u7684\u65f6\u5019\u4e5f\u662f\u5982\u6b64\u2014\u2014A\u5148\u628a\u4e2d\u95f4\u5835\u4e0a\u5c31\u53d8\u6210\u4e86\u56de\u6587\u4e32\uff0c\u9000\u5316\u5230\u4e4b\u524d\u7684\u5076\u6570\u56de\u6587\uff0c\u800c\u8fd9\u79cd\u60c5\u51b5\u540e\u624b\u5fc5\u80dc\u3002\n\n\uff08\u4e0b\u9762\u7b80\u79f0\uff1a```0``` \u7684\u4e2a\u6570\u4e3a\u5947\u6570\u7684\u56de\u6587\u4e32\uff08\u957f\u5ea6\u4e3a\u5947\u540c\u65f6\u4e2d\u592e\u4e3a ```0```\uff09\u2014\u2014\u5947\u56de\u6587\uff1b```0``` \u7684\u4e2a\u6570\u4e3a\u5076\u6570\u7684\u56de\u6587\u4e32\u2014\u2014\u5076\u56de\u6587\uff09\n\n\u6b63\u6587\u5f00\u59cb\uff1a\n\n\u5148\u8bf4\u7ed3\u8bba\uff1a**\u53ea\u8981\u4e0d\u662f\u5e73\u5c40\uff0c\u5148\u624b\u5fc5\u80dc**\u3002\n\n\u6ce8\u610f\u5230\u591a\u4e2a ```01``` \u548c $1$ \u4e2a ```01``` \u672c\u8d28\u662f\u4e00\u6837\u7684\uff0c\u53ea\u662f\u91cd\u590d\u6b21\u6570\u4e0d\u540c\uff0c\u56e0\u800c\u4e0b\u9762\u53ea\u5206\u6790\u975e\u56de\u6587\u53ea\u542b\u4e00\u4e2a ```01``` \u7684\u60c5\u51b5\u3002\n\n1\u3001\u5dee\u4e00\u4e2a ```01``` \u5947\u56de\u6587\n\n\u8003\u8651\u5148\u624b\u5fc5\u80dc\u64cd\u4f5c\uff1a**\u8f6c**\u3002\u8fd9\u6837\u7559\u7ed9 B \u7684\u5c31\u662f\u548c A \u4e00\u6837\u7684\u5c40\u9762\uff0c\u800c\u4e14 B \u8fd8\u4e0d\u80fd\u8f6c\uff0c\u4ed6\u53ea\u80fd\u9009\u53d6\u975e\u5bf9\u79f0\u7684 ```01``` \u6216\u8005\u4e2d\u592e\u7684 ```0``` \u586b\u4e0a\u3002\u5982\u679c\u9009\u62e9 ```01``` \u4e2d\u7684 ```0``` \u586b\uff0c\u90a3\u4e48\u7559\u7ed9 A \u7684\u5c31\u662f\u5947\u56de\u6587\u2014\u2014A \u5148\u624b\u5fc5\u80dc\uff1b\u5982\u679c\u586b\u4e2d\u592e\u7684 ```0```\uff0c\u6b64\u65f6 A \u5148\u624b\uff0c\u60c5\u51b5\u9000\u5316\u5230\u4e0b\u9762\u7684 2 \u60c5\u51b5\uff1a\n\n2\u3001\u5dee\u4e00\u4e2a ```01``` \u5076\u56de\u6587\n\n\u6b64\u65f6 A \u586b\u4e0a ```01``` \u4e2d\u7684 ```0```\uff0c\u53d8\u6210\u5076\u56de\u6587\uff0cB \u5148\u624b\uff0c\u6b64\u65f6 A \u540e\u624b\u5fc5\u80dc\u3002\n\n\u591a\u4e2a ```01``` \u7684\u60c5\u51b5\u7c7b\u4f3c\u2014\u2014\u53ea\u9700\u8981\u8f6c\uff0c\u8ba9 B \u586b ```01```\uff0cA \u5c31\u4e00\u76f4\u8f6c\u3002\u76f4\u5230\u7559\u4e0b\u6700\u540e\u4e00\u4e2a ```01```\uff0c\u518d\u6267\u884c\u4e0a\u9762\u6240\u8bf4\u7684\u64cd\u4f5c\u5373\u53ef\u3002\n\n\u4f30\u8ba1\u770b\u5230\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u7591\u95ee\uff1aA \u5728\u4e0a\u9762\u7684\u64cd\u4f5c\u4e2d\u8981\u6bd4 B \u591a\u638f\u94b1\uff0c\u600e\u4e48\u4fdd\u8bc1\u56de\u6587\u7ed3\u8bba\u7684\u9002\u7528\u6027\uff1f\n\n\u5bf9\u4e8e 1 \u60c5\u51b5\uff0c\u62e2\u5171\u7684 ```0``` \u4e2a\u6570\u4e3a\u5076\uff0cB \u5fc5\u7136\u6bd4 A \u591a\u638f\u94b1\u3002\n\n\u5bf9\u4e8e 2 \u60c5\u51b5\uff0c```0``` \u4e2a\u6570\u4e3a\u5947\uff0c\u9884\u5904\u7406\u64cd\u4f5c\u4e2d A \u591a\u586b\u4e86\u4e00\u4e2a ```1```\uff0c\u4f46\u662f\u5728\u5076\u56de\u6587\u60c5\u51b5\u4e2d\uff0c\u5148\u624b\u6bd4\u540e\u624b\u638f\u7684\u94b1\u8981\u5927\u4e8e\u7b49\u4e8e ```2```\uff0c\u56e0\u800c A \u5fc5\u80dc\u3002\n\n\u73b0\u5728\u518d\u8ba8\u8bba\u6700\u540e\u4e00\u4e2a\u60c5\u51b5\uff1a\u5e73\u5c40\u3002\n\n\u663e\u7136 ```001``` \u548c ```100``` \u662f\u5e73\u5c40\u3002\u5982\u679c\u6b64\u65f6\u518d\u63d2\u5165\u66f4\u591a\u5bf9\u79f0\u7684 ```11```\uff0c\u4e5f\u4e0d\u5f71\u54cd\u2014\u2014\u6bd4\u5982 ```11010```\u3002\u56e0\u800c\uff0c\u6b64\u7c7b\u60c5\u51b5\u7684\u5224\u5b9a\u662f\uff1a\u957f\u5ea6\u4e3a\u5947\uff0c```01``` \u4ec5\u4e00\u4e2a\uff0c\u6ca1\u6709 ```00```\u3002\n\n\uff08\u9644\u8bb0\uff1a\u6574\u7406\u81eayj\u7684\u60f3\u6cd5\uff0c\u53f6\u8001\u5e08yyds\uff09",
        "postTime": 1621565275,
        "uid": 80026,
        "name": "walk_alone",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 Palindrome Game (hard version)"
    }
]