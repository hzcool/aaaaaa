[
    {
        "content": "# CF1601B \u9898\u89e3\n\n\u770b\u89c1\u5927\u5bb6\u8c8c\u4f3c\u90fd\u7528\u7684 $O(nlogn)$ \u505a\u6cd5\uff0c\u90a3\u6211\u5c31\u6765\u4e00\u53d1 $O(n)$ \u4e14\u5f88\u597d\u5b9e\u73b0\u7684\u505a\u6cd5\u5427.\n\n\u9898\u610f\uff1a\u6709\u4e24\u4e2a\u5e8f\u5217 $a,b$ \uff0c\u82e5\u5728\u4f4d\u7f6e $i$ \uff0c\u5219\u53ef\u4ee5\u8df3\u5230 $x \\in [i,i - a_i]$ \u4e2d\u7684\u6240\u6709\u4f4d\u7f6e\uff0c\n\n\u4f46\u6bcf\u6b21\u8df3\u5230\u4e86\u67d0\u4e2a\u4f4d\u7f6e $j$ \u540e\uff0c\u4f1a\u6ed1\u843d\u5230\u7b2c $j + b_j$ \u4e2a\u4f4d\u7f6e\u3002\n\n\u6c42\u521d\u59cb\u5728\u4f4d\u7f6e $n$ \uff0c\u76ee\u6807\u5728\u4f4d\u7f6e $0$ \u7684\u6700\u5c11\u8df3\u8dc3\u6b21\u6570\uff0c\u5e76\u7ed9\u51fa\u65b9\u6848\u3002\n\n\u505a\u6cd5\uff1a\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u6bcf\u6b21\u8df3\u8dc3\u540e\u6ed1\u843d\u524d\u53ef\u4ee5\u5230\u8fbe\u7684\u4f4d\u7f6e\u96c6\u5408\uff0c\u5fc5\u7136\u662f\u4e00\u4e2a\u53f3\u7aef\u70b9\u4e3a $n$ \u7684\u533a\u95f4\u3002\n\n\u8fd9\u4e2a\u7ed3\u8bba\u53ef\u4ee5\u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\u8bc1\u660e\uff0c\u5373\uff1a\n\n\u82e5\u4e0a\u4e00\u6b21\u6ed1\u843d\u524d\u53ef\u4ee5\u5230\u8fbe\u7684\u4f4d\u7f6e\u96c6\u5408\u662f\u4e00\u4e2a\u533a\u95f4\uff0c\u6211\u4eec\u8bb0\u8fd9\u4e2a\u533a\u95f4\u4e3a $[l,n]$\u3002\u90a3\u4e48\uff1a\n\n\u8fd9\u4e00\u6b21\u8df3\u8dc3\u540e\uff0c\u4e0d\u53ef\u80fd\u51fa\u73b0\u4e24\u4e2a\u53ef\u4ee5\u5230\u8fbe\u7684\u4f4d\u7f6e $x,y$ \uff08\u4e0d\u59a8\u4ee4 $x<y$\uff09\uff0c\u4f7f\u5f97\uff1a\n\n1. $x \\notin [l,n]$\n2. $y \\notin [l,n]$\n3. $y \\neq x + 1$\n\n\u53e3\u5934\u4e0a\u8bf4\u5c31\u662f\uff1a\u8fd9\u6b21\u8df3\u8dc3\u540e\uff0c\u53ef\u4ee5\u5230\u8fbe\u7684\u4e14\u4e0d\u5728\u533a\u95f4 $[l,n]$ \u5185\u7684\u4f4d\u7f6e\uff0c\u5fc5\u7136\u5f62\u6210\u4e00\u6bb5\u8fde\u7eed\u533a\u95f4\u3002\n\n\u800c\u4e0a\u4e00\u6b21\u6ed1\u843d\u524d\u53ef\u4ee5\u5230\u8fbe\u7684\u533a\u95f4\uff0c\u8fd9\u4e00\u6b21\u4e5f\u90fd\u53ef\u4ee5\u5230\u8fbe\u3002\n\n\u81f3\u4e8e\u539f\u56e0\uff0c\u662f\uff1a\u8bbe\u4e0a\u4e00\u6b21\u6ed1\u843d\u524d\uff0c\u6211\u4eec\u5df2\u7ecf\u8df3\u8dc3\u4e86 $s$ \u6b21\uff0c\n\n\u5219\u5bf9\u4e8e $\\forall x \\in [l,n]$\uff0c\u6211\u4eec\u90fd\u6709\u4e00\u79cd\u65b9\u6848\uff0c\u4f7f\u5f97\u4ece\u8d77\u70b9\u8df3\u8dc3 $s$ \u6b21\u540e\u5230\u8fbe\u4f4d\u7f6e $x$ \u3002\n\n\u6211\u4eec\u53ea\u9700\u8981\u5728\u8fd9\u4e2a\u65b9\u6848\u7684\u5f00\u5934\u6dfb\u52a0\u4e00\u6b21\u539f\u5730\u8df3\uff0c\u5c31\u53ef\u4ee5\u6784\u9020\u51fa\u4e00\u79cd\u8df3 $s+1$ \u6b21\u540e\u5230\u8fbe\u4f4d\u7f6e $x$ \u7684\u65b9\u6848\u3002\n\n\u8fd9\u4e00\u5b9a\u53ef\u884c\uff0c\u56e0\u4e3a\u9898\u610f\u4fdd\u8bc1 $b_n = 0$\uff0c\u6211\u4eec\u7b2c\u4e00\u6b21\u8df3 $0$ \u4e2a\u4f4d\u7f6e\uff0c\u539f\u5730\u4e0d\u52a8\u5373\u53ef\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u5c06 $[l,n]$ \u548c\u65b0\u589e\u533a\u95f4\u62fc\u5728\u4e00\u8d77\u540e\uff0c\u5c31\u5f62\u6210\u4e86\u4e00\u4e2a\u66f4\u5927\u7684\u533a\u95f4\uff0c\u4e5f\u8bc1\u660e\u4e86\u4e0a\u9762\u7684\u7ed3\u8bba\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u52a8\u6001\u7684\u7ef4\u62a4\u4e0a\u9762 $[l,n]$ \u91cc\u7684 $l$\uff0c\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u4ee4 $c_i = i + b_i - a_{i + a_i}$\uff0c\u4ee3\u8868\u4e0a\u4e00\u6b21\u6ed1\u843d\u524d\u5230\u8fbe\u4f4d\u7f6e $i$ \uff0c\u8fd9\u6b21\u80fd\u5230\u8fbe\u7684\u6700\u5c0f\u4f4d\u7f6e\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5bf9\u5e8f\u5217 $c$ \u505a\u524d\u7f00\u6700\u5927\u503c\uff0c\u540c\u65f6\u8bb0\u5f55\u6700\u5927\u503c\u6240\u5728\u7684\u4f4d\u7f6e\uff0c\n\n\u5373\u53ef\u6c42\u51fa\uff0c\u5728\u67d0\u6b21\u8df3\u8dc3\u540e\u6ed1\u843d\u524d\uff0c\u53ef\u4ee5\u5230\u8fbe\u7684\u70b9\u96c6\u533a\u95f4\u662f $[l,n]$ \u65f6\uff0c\u4e0b\u4e00\u6b21\u80fd\u8df3\u5230\u54ea\u91cc\u3002\u5373\uff1a\n\n\u8bbe $mx_i = max(mx_{i+1},c_i)$\uff0c$rs_i = p$\uff0c\u5176\u4e2d $c_p = mx_i$\u3002\n\n\u4e8e\u662f\uff0c\u5bf9\u4e8e\u67d0\u6b21\u8df3\u8dc3\u540e\u6ed1\u843d\u524d\uff0c\u53ef\u8fbe\u7684\u70b9\u96c6\u533a\u95f4 $[l,n]$\uff0c\u5176\u4e0b\u4e00\u6b21\u5c31\u53ef\u4ee5\u5230\u8fbe\u533a\u95f4 $[mx_l,n]$\uff0c\n\n\u800c\u5728\u6700\u4f18\u89e3\u4e2d\uff0c\u5f53\u524d\u8fd9\u6b21\u8df3\u8dc3\u6240\u5230\u8fbe\u7684\u4f4d\u7f6e\u5c31\u662f $rs_l$.\n\n\u6211\u4eec\u8fd8\u53ef\u4ee5\u53d1\u73b0\uff0c\u82e5\u4e0a\u9762\u7684 $mx_l \\geq l$ \uff0c\u5219\u6211\u4eec\u4e0d\u53ef\u80fd\u8df3\u5230\u9876\u70b9\uff0c\u56e0\u4e3a\u6211\u4eec\u5c31\u4f1a\u5361\u5728\u8fd9\u91cc\u3002\n\n\u9884\u5904\u7406\u662f $O(n)$ \u7684\uff0c\u800c\u52a8\u6001\u7ef4\u62a4\u533a\u95f4 $[l,n]$ \u65f6\uff0c\u6bcf\u4e00\u6b21 $l$ \u5fc5\u7136\u51cf $1$\uff0c\u76f4\u5230\u51cf\u5230 $0$\uff0c\u5426\u5219\u4f1a\u8f93\u51fa\u65e0\u89e3\uff0c\n\n\u6545\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n)$ \u7684\u3002\n\n\u8fd9\u91cc\u7ed9\u51fa\u4ee3\u7801\u5b9e\u73b0\uff1a\n\n```\n#define rep(i, a, b) for (int i = (a); i <= (b); i++)\n#define per(i, a, b) for (int i = (a); i >= (b); i--)\n\nconst int N (3e5 + 10);\nint n, a[N], b[N], c[N], rs[N], mn[N];\nvector < int > ans;\n \nint main() {\n\tn = read(); rep (i, 1, n) a[i] = read();\n\trep (i, 1, n) b[i] = read(), c[i] = max(0, i + b[i] - a[i + b[i]]);\n\trep (i, 0, n + 1) mn[i] = rs[i] = 1e9;\n\tper (i, n, 1) mn[i] = min (mn[i + 1], min(i, c[i])),\n\t\t\t\t  rs[i] = min (i, c[i]) < mn[i + 1] ? i : rs[i + 1];\n\tint hi = n;\n\trep (i, 1, n) {\n\t\tans.pb(hi = rs[hi]);\n\t\tif (hi <= mn[hi]) break;\n\t\thi = mn[hi]; if (!hi) break;\n\t}\n\tif (hi) return cout << -1, 0;\n\tint sz = ans.size(); cout << sz << endl;\n\trep (i, 1, sz - 1) cout << ans[i] << ' ';\n\treturn cout << 0, 0;\n}\n```\n\n",
        "postTime": 1635765658,
        "uid": 100091,
        "name": "GaryH",
        "ccfLevel": 6,
        "title": "CF1601B \u9898\u89e3"
    },
    {
        "content": "\u8003\u8651\u8d2a\u5fc3\uff0c\u53d1\u73b0\u5bf9\u4e8e\u5f53\u524d\u6df1\u5ea6 $now$\uff0c\u6211\u4eec\u80fd\u8df3\u5230\u7684\u533a\u95f4\u662f $[now-a_{now},now]$\uff0c\u6211\u4eec\u80af\u5b9a\u4f1a\u8df3\u8fd9\u4e2a\u533a\u95f4\u5185\uff0c\u5b9e\u9645\u6df1\u5ea6\u6700\u5c0f\uff08\u9ad8\uff09\u7684\u70b9\uff08\u5b9e\u9645\u6df1\u5ea6\u5b9a\u4e49\u4e3a\u8df3\u4e4b\u540e\u6ed1\u4e0b\u6765\u7684\u6df1\u5ea6\uff09\u3002\n\n\u8bc1\u660e\uff1a\n\n\u611f\u6027\u7406\u89e3\u6cd5\uff1a\u6211\u4eec\u8981\u8df3\u7684\u5c3d\u53ef\u80fd\u9ad8\u4ee5\u8df3\u51fa\u4e95\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u8ba9\u80fd\u8df3\u5230\u7684\u533a\u95f4\u5c3d\u53ef\u80fd\u7684\u5927\uff08\u5de6\u7aef\u70b9\u5c3d\u53ef\u80fd\u5c0f\uff09\uff0c\u8fd9\u6837\u9009\u5230\u80fd\u8df3\u51fa\u53bb\u7684\u5173\u952e\u70b9\u7684\u6982\u7387\u80af\u5b9a\u662f\u66f4\u5927\u7684\u3002\n\n\u53cd\u8bc1\u6cd5\uff08\u7b97\u662f\uff1f\uff09\uff1a\u4e0d\u5408\u6cd5\u5f53\u4e14\u4ec5\u5f53\u6709\u4e00\u4e2a\u5b9e\u9645\u6df1\u5ea6\u66f4\u5927\u7684\u70b9\u80fd\u7ecf\u8fc7\u82e5\u5e72\u6b21\u8df3\u8dc3\u80fd\u8df3\u5230\u5173\u952e\u70b9\u5e76\u8df3\u51fa\u53bb\uff0c\u90a3\u6211\u9009\u5b9e\u9645\u6df1\u5ea6\u66f4\u5c0f\u7684\u4e5f\u4e00\u5b9a\u80fd\u9009\u5230\u8fd9\u4e2a\u5173\u952e\u70b9\u3002\n\n\u8003\u8651\u600e\u4e48\u7ef4\u62a4\uff0c\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e\u4e00\u4e2a\u6df1\u5ea6 $i$ \u9996\u5148\u8981\u6ee1\u8db3 $i+b_i\\ge now-a_{now}$ \u4e14 $i \\ge now-a_{now}$\n\n\u8003\u8651\u7528\u4e3b\u5e2d\u6811\uff0c\u6240\u4ee5\u6211\u4eec\u5bf9 $i+b_i$ \u5efa\u65f6\u95f4\u8f74\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u7ef4\u62a4\u5f53\u524d\u533a\u95f4\u5185\u7684\u5b9e\u9645\u6df1\u5ea6\u6700\u5c0f\u503c\u548c\u5728\u54ea\u4e2a\u70b9\u80fd\u53d6\u5230\u8fd9\u4e2a\u503c\uff0c\u5bf9\u4e8e\u53f6\u5b50\u7ed3\u70b9 $l==r$\uff0c\u5b83\u7684\u5b9e\u9645\u6df1\u5ea6\u8868\u793a\u4e3a $l+b_l-a_{l+b_l}$\uff0c\u5373\u5148\u6ed1\u518d\u8df3\uff0c\u80fd\u53d6\u5230\u8fd9\u4e2a\u503c\u7684\u663e\u7136\u662f $l$\n\n\u7c7b\u4f3c\u4e8e\u4f20\u7edf\u4e3b\u5e2d\u6811\u524d\u7f00\u548c\u5efa\u6811\uff0c\u6211\u4eec\u5bf9\u65f6\u95f4\u8f74\u540e\u7f00\u548c\u5efa\u6811\n\n\u67e5\u8be2\u5c31\u662f\u627e\u5927\u4e8e\u7b49\u4e8e $now-a_{now}$ \u7684 $i+b_i$ \u8fd9\u68f5\u6811\u4e0a\u7684\u533a\u95f4 $[now-a_{now},now]$ \u7684\u5b9e\u9645\u6df1\u5ea6\u6700\u5c0f\u503c\u548c\u53d6\u5230\u8fd9\u4e2a\u503c\u7684 $l$\n\n\u663e\u7136\uff0c\u6bcf\u6b21\u7684 $l$ \u5c31\u662f\u6211\u4eec\u7684\u8def\u5f84\uff0c\u5bf9\u4e8e\u4e0b\u4e00\u4e2a $now$\uff0c\u5b83\u7b49\u4e8e $l+b_l$\n\n\u7279\u522b\u5730\uff0c\u5bf9\u4e8e\u65e0\u89e3\u7684\u5224\u65ad\u5c31\u662f\u4e0b\u4e00\u4e2a $now$ \u548c\u8fd9\u4e2a $now$ \u7684\u503c\u76f8\u540c\uff0c\u5373\u539f\u5730\u4e0d\u52a8\u6ca1\u6cd5\u8df3\u4e86\u3002\n\n\u667a\u5546\u4e0d\u591f Data structures \u6765\u51d1\n\n[code](https://codeforces.com/contest/1602/submission/133111419)",
        "postTime": 1635317026,
        "uid": 186045,
        "name": "itisover",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1601B Frog Traveler"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\n\u6709\u4e00\u53ea\u9752\u86d9\u6389\u5230\u4e86\u4e95\u5e95\uff0c\u8fd9\u53e3\u4e95\u88ab\u5212\u5206\u4e3a $n+1$ \u4e2a\u4f4d\u7f6e\uff0c\u4e95\u53e3\u662f $0$ \uff0c\u4e95\n\u5e95\u662f $n$ \u3002\n\n\u73b0\u5728\u8fd9\u53ea\u9752\u86d9\u60f3\u8df3\u51fa\u8fd9\u53e3\u4e95\uff0c\u5047\u8bbe\u5b83\u5f53\u524d\u5728\u4f4d\u7f6e $i$\uff0c\u5219\u5b83\u53ef\u4ee5\u5411\u4e0a\u8df3 $0$ \u5230 $a_i$ \u7684\u4efb\u610f\u6574\u6570\u8ddd\u79bb\u3002\n\n\u53c8\u56e0\u4e3a\u4e95\u53e3\u5f88\u6ed1\uff0c\u6240\u4ee5\u5982\u679c\u9752\u86d9\u8df3\u5230\u4e86\u4f4d\u7f6e $j$\uff0c\u5219\u5b83\u4f1a\u5f80\u4e0b\u6ed1 $b_j$ \u4e2a\u4f4d\u7f6e\u3002\n\n\u7ed9\u5b9a $n, a, b$\uff0c\u4f60\u9700\u8981\u6c42\u51fa\u9752\u86d9\u6700\u5c11\u8df3\u591a\u5c11\u6b21\u624d\u80fd\u8df3\u51fa\u4e95\uff08\u8df3\u5230\u4f4d\u7f6e $0$ \uff09\uff0c\u5e76\u7ed9\u51fa\u65b9\u6848\u3002\n\n$1 \\leq n \\leq 3 \\times 10^5$ \n\n### \u9898\u76ee\u5206\u6790\n\n\u5982\u679c\u5ffd\u7565\u8df3\u5230\u4f4d\u7f6e $i$ \u4f1a\u5f80\u4e0b\u6ed1 $b_i$ \u8fd9\u4e2a\u9650\u5236\uff0c\u90a3\u4e48\u8fd9\u9898\u53ef\u4ee5\u8f7b\u677e\u4f7f\u7528\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u56fe+\u6700\u77ed\u8def\u89e3\u51b3\u3002\n\n\u8003\u8651\u6dfb\u52a0\u4e86\u8fd9\u4e2a\u9650\u5236\u600e\u4e48\u505a\uff0c\u6211\u4eec\u5efa\u7acb $n+1$ \u4e2a\u865a\u70b9 $[n+1,2n+1]$ \u8868\u793a\u8df3\u5230 $[0, n]$ \u4e14\u8fd8\u6ca1\u5f80\u4e0b\u6ed1\u65f6\u7684\u72b6\u6001\u3002\n\n\u7531\u4e8e $b_i$ \u4e0d\u53d8\uff0c\u90a3\u4e48\u6bcf\u6b21\u5efa\u8fb9\u5c31\u53ef\u4ee5\u62c6\u6210\u4e24\u4e2a\u90e8\u5206\uff1a\n\n1. $i$ \u5230 $[i-a[i],i]$ \u7684\u865a\u70b9\uff0c\u8fb9\u6743\u4e3a $1$\u3002\n2. $[i-a[i],i]$ \u7684\u865a\u70b9 \u5230\u5176\u5404\u81ea\u5bf9\u5e94\u7684\u70b9\uff0c\u8fb9\u6743\u4e3a $0$\u3002\n\n$1$ \u90e8\u5206\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u56fe\u89e3\u51b3\uff0c $2$ \u90e8\u5206\u5219\u53ef\u4ee5\u5728\u521d\u59cb\u5316\u65f6\u5efa\u7acb\u3002\n\n\u6700\u540e\u6211\u4eec\u53d1\u73b0\u6240\u6709\u8fb9\u8fb9\u6743\u4e3a $0,1$\uff0c\u6545\u6211\u4eec\u53ef\u4ee5\u7528\u53cc\u7aef\u961f\u5217 $\\texttt{bfs}$ \u964d\u4f4e\u590d\u6742\u5ea6\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $ \\Theta (n \\log n)$\n\n### \u4ee3\u7801\n\n``` cpp\n#include <bits/stdc++.h>\n\n#define R register\n#define ll long long\n#define sum(a, b, mod) (((a) + (b)) % mod)\n#define meow(cat...) fprintf(stderr, cat)\n\nconst int MaxN = 4e5 + 10;\nconst int Max = MaxN << 5;\nconst int inf = 0x3f3f3f3f;\n\nstruct edge\n{\n    int next, to, dis;\n} e[Max];\n\nint head[Max], a[MaxN], b[MaxN];\nint n, m, cnt, dis[Max], vis[Max], pre[Max];\n\nvoid add_edge(int u, int v, int d)\n{\n    ++cnt;\n    e[cnt].to = v;\n    e[cnt].dis = d;\n    e[cnt].next = head[u];\n    head[u] = cnt;\n};\n\ninline int read()\n{\n    int x = 0;\n    char ch = getchar();\n    while (ch > '9' || ch < '0')\n        ch = getchar();\n    while (ch <= '9' && ch >= '0')\n        x = (x << 1) + (x << 3) + (ch ^ 48), ch = getchar();\n    return x;\n}\n\nstruct SegmentTree\n{\n    int cnt, idx[Max];\n    void build(int id, int l, int r)\n    {\n        if(l == r) \n            return (void) (idx[id] = l + n + 1);\n        idx[id] = ++cnt; int mid = (l + r) >> 1;\n        build(id << 1, l, mid), build(id << 1 | 1, mid + 1, r);\n        if(idx[id << 1]) add_edge(idx[id], idx[id << 1], 0);\n        if(idx[id << 1 | 1]) add_edge(idx[id], idx[id << 1 | 1], 0);\n    }\n    void modify(int id, int l, int r, int ql, int qr, int u)\n    {\n        if(ql > r || l > qr) return;\n        if(ql <= l && r <= qr) \n            return add_edge(u, idx[id], 1);\n        int mid = (l + r) >> 1;\n        modify(id << 1, l, mid, ql, qr, u);\n        modify(id << 1 | 1, mid + 1, r, ql, qr, u);\n    }\n} T;\n\nvoid bfs()\n{\n    std::deque<int> q;\n    dis[n] = 0, q.push_back(n);\n    while(!q.empty())\n    {\n        int u = q.front(); q.pop_front();\n        if(vis[u]) continue; vis[u] = 1;\n        for(int i = head[u]; i; i = e[i].next)\n        {\n            int v = e[i].to;\n            if(dis[v] > dis[u] + e[i].dis)\n            {\n                dis[v] = dis[u] + e[i].dis;\n                if(!vis[v])\n                {\n                    if(e[i].dis) q.push_back(v);\n                    else q.push_front(v); pre[v] = u;\n                }\n            }\n        }\n    }\n}\n\nsigned main()\n{   \n    int now = 0;\n    n = read(), T.cnt = 2 * n + 1, memset(dis, 0x3f, sizeof(dis));\n    for(int i = 1; i <= n; i++) a[i] = read();\n    for(int i = 1; i <= n; i++) b[i] = read();\n    for(int i = 0; i <= n; i++)\n        add_edge(i + n + 1, i + b[i], 0);\n    T.build(1, 0, n);\n    for(int i = 1; i <= n; i++)\n        T.modify(1, 0, n, i - a[i], i, i);\n    bfs(), printf(\"%d\\n\", dis[0] == inf ? -1 : dis[0]);\n    if(dis[0] != inf)\n    {\n        std::vector<int> path;\n        while(now != n) \n        {\n            if(n + 1 <= now && now <= 2 * n + 1) \n                path.push_back(now - n - 1);\n            now = pre[now];\n        }\n        std::reverse(path.begin(), path.end());\n        for(auto x : path) printf(\"%d \", x);\n    }\n    return 0;\n}\n```",
        "postTime": 1635316934,
        "uid": 61966,
        "name": "little_sun",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1601B Frog Traveler"
    },
    {
        "content": "$f[i]$ \u4ee3\u8868\u4ece $n$ \u8df3\u5230 $i$ \u7684\u6700\u5c11\u7684\u6b21\u6570\u3002\u4ece $n$ \u5230 $1$ \u8fdb\u884c $dp$\uff1a\u5982\u679c\u5df2\u6c42\u5f97 $f[i]$\uff0c\u6211\u4eec\u4ee4 $low=i+b[i]$, \u90a3\u4e48\u5c31\u53ef\u4ee5\u7528 $f[i]+1$ \u6765\u66f4\u65b0 $low-a[low] \\leq k \\leq low$ \u7684 $f[k]$ \u503c\u3002\u66f4\u65b0\u8fc7\u7a0b\u4e2d\u4fdd\u5b58\u88ab\u66f4\u65b0\u7684 $k$ \u662f\u7531 $i$ \u8df3\u6765\u7684\u3002\u7531\u4e8e\u8981\u66f4\u65b0\u6574\u4e2a\u533a\u95f4\uff0c\u6240\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\u548c\u533a\u95f4\u6700\u5c0f\u503c\u70b9\u662f\u7531\u54ea\u4e2a\u70b9\u8df3\u8f6c\u800c\u6765\u7684\u3002\n```cpp\n#include <bits/stdc++.h>\n#define L k<<1\n#define R k<<1|1\n#define fi first\n#define se second\n#define int long long\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> pii;\ntypedef pair<ll,ll> pll;\ntypedef vector<int> vi;\nconst int maxn = 3e5+7;\nconst int INF = 1e9;\nstruct Node {\n\tint val,to;\n};\nNode t[maxn<<2];\nNode lazy[maxn<<2];\nint a[maxn];\nint b[maxn];\nNode min(Node a,Node b) {\n\tif (a.val<b.val) return a;\n\treturn b;\n}\nvoid pushDown(int k,int l,int r) {\n\tif (lazy[k].val>=INF||r<l) return;\n\tlazy[L] = min(lazy[L],lazy[k]);\n\tlazy[R] = min(lazy[R],lazy[k]);\n\tt[L] = min(t[L],lazy[k]);\n\tt[R] = min(t[R],lazy[k]);\n\tlazy[k].val = INF; \n}\nNode query(int k,int l,int r,int x) {\n\tif (r==l) {\n\t\treturn t[k];\n\t}\n\telse {\n\t\tpushDown(k,l,r);\n\t\tint mid = (l+r)/2;\n\t\tif (x<=mid) return query(L,l,mid,x);\n\t\telse return query(R,mid+1,r,x);\n\t}\n}\nvoid update(int k,int l,int r,int x,int y,int v,int to) {\n\tif (x<=l&&r<=y) {\n\t\tNode tmp = {v,to};\n\t\tt[k] = min(t[k],tmp);\n\t\tlazy[k] = min(lazy[k],tmp);\n\t}\n\telse {\n\t\tint mid = (l+r)/2;\n\t\tpushDown(k,l,r);\n\t\tif (x<=mid) update(L,l,mid,x,y,v,to);\n\t\tif (y>mid) update(R,mid+1,r,x,y,v,to);\n\t\tt[k] = min(t[L],t[R]);\n\t}\n}\nsigned main() {\n\tint n;\n\tcin>>n;\n\tfor (int i=1;i<=n;i++) {\n\t\tcin>>a[i];\n\t}\n\tfor (int i=1;i<=n;i++) {\n\t\tcin>>b[i];\n\t}\n\tfor (int i=0;i<maxn*4;i++) {\n\t\tlazy[i].val = t[i].val = INF;\n\t}\n\tupdate(1,0,n,n-a[n],n,1,n);\n\tfor (int i=n-1;i>=1;i--) {\n\t\tint low = i+b[i];\n\t\tint f = query(1,0,n,i).val;\n\t\tupdate(1,0,n,low-a[low],low,f+1,i);\n\t}\n\tint ans = query(1,0,n,0).val;\n\tif (ans>=INF) cout<<-1;\n\telse {\n\t\tvi v;\n\t\tint now = 0;\n\t\twhile (1) {\n\t\t\tv.push_back(now);\n\t\t\tif (now==n) break;\n\t\t\tnow = query(1,0,n,now).to;\n\t\t}\n\t\tcout<<ans<<'\\n';\n\t\tfor (int i=v.size()-2;i>=0;i--) {\n\t\t\tcout<<v[i]<<\" \";\n\t\t}\n\t}\n}\n```\n",
        "postTime": 1636471771,
        "uid": 396400,
        "name": "SenriAkane",
        "ccfLevel": 0,
        "title": "\u52a8\u6001\u89c4\u5212 + \u7ebf\u6bb5\u6811"
    },
    {
        "content": "\u5c6f\u7684\u9898\u89e3\u4e0d\u591f\u7528\u4e86\u2026\u2026\n\n\u601d\u8def\u5f88\u660e\u663e\uff0c\u5c06\u9752\u86d9\u6bcf\u6b21\u8df3\u7684\u72b6\u6001\u8868\u793a\u51fa\u6765\uff0c\u6bcf\u4e2a\u6df1\u5ea6 $i$ \u5411 $i+b_i$ \u8fde\u8fb9\uff0c\u957f\u5ea6\u4e3a $0$\uff0c\u4ee3\u8868\u4e0b\u6ed1\u7684\u8fc7\u7a0b\uff1b\u6bcf\u4e2a $i$ \u5982\u679c\u5411\u4e0a\u8df3\u7684\u8bdd\uff0c\u53ef\u4ee5\u8df3\u5230\u6df1\u5ea6 $[i-a_i,i]$\uff0c\u6240\u4ee5\u5bf9\u8fd9\u4e2a\u6df1\u5ea6\u6240\u6709\u7684\u70b9\u8fde\u8fb9\uff0c\u957f\u5ea6\u4e3a $1$\u3002\u5efa\u5b8c\u56fe\u540e\u8dd1\u4e00\u4e2a $01\\ \\mathtt{bfs}$ \u5373\u53ef\u3002\n\n\u7136\u540e\u4f60\u53d1\u73b0\u8fd9\u4e2a\u70b9\u5411\u533a\u95f4\u8fde\u8fb9\u7684\u64cd\u4f5c\u53ef\u4ee5\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u56fe\uff0c\u7136\u540e\u4f60\u641e\u4e0a\u53bb\u5c31\u53d1\u73b0\u8fde\u6837\u4f8b\u90fd\u8fc7\u4e0d\u53bb\u3002\n\n\u56e0\u4e3a\u9898\u76ee\u5f88\u660e\u786e\u5730\u8bf4\u4e86\uff0c\u6bcf\u8df3\u4e00\u6b21\u5c31\u4f1a\u4e0b\u6ed1\u4e00\u6b21\uff0c\u7136\u800c\u6211\u4eec\u5efa\u51fa\u6765\u7684\u56fe\u6709\u53ef\u80fd\u8ba9\u8fd9\u53ea\u53ef\u601c\u7684\u9752\u86d9\u4e00\u76f4\u4e0b\u6ed1\u3002\n\n\u6362\u800c\u8a00\u4e4b\uff0c\u5c31\u662f\u6211\u4eec\u56fe\u5efa\u9519\u4e86\u3002\n\n\u7136\u540e\u4f60\u4ed4\u7ec6\u4e00\u60f3\uff0c\u53d1\u73b0\u6bcf\u6b21\u9752\u86d9\u79fb\u52a8\u5305\u542b\u4e24\u4e2a\u8fc7\u7a0b\uff1a\u5411\u4e0a\u8df3\u548c\u5411\u4e0b\u6ed1\u3002\n\n\u4e8e\u662f\u4f60\u5efa\u4e00\u5806\u70b9\u653e\u5728\u5de6\u8fb9\uff0c\u8868\u793a\u5411\u4e0a\u8df3\u4e4b\u540e\u9752\u86d9\u5904\u5728\u7684\u70b9\u3002\n\n\u7136\u540e\u518d\u6765\u4e00\u5806\u70b9\u6254\u5230\u53f3\u8fb9\uff0c\u8868\u793a\u5411\u4e0b\u6ed1\u4e4b\u540e\u9752\u86d9\u5904\u5728\u7684\u70b9\u3002\n\n\u6bcf\u6b21\u5411\u4e0a\u8df3\uff0c\u53f3\u8fb9\u7684\u70b9\u5f80\u5de6\u8fb9\u4e00\u5806\u70b9\u8fde\u8fb9\u3002\n\n\u6bcf\u6b21\u5411\u4e0b\u6ed1\uff0c\u5de6\u8fb9\u7684\u70b9\u5411\u53f3\u8fb9\u7684\u70b9\u8fde\u8fb9\u3002\n\n\u7136\u540e\u6ca1\u4e86\u3002\n\n```cpp\nconst int maxn = 1e7 + 100;\nconst int inf = 1e9;\nstruct edge { int to, nxt, w; } e[maxn];\nstruct node { int u, w; };\nint n, tot, cnt, rt, len, ans[maxn], a[maxn], b[maxn], head[maxn], id[maxn], ls[maxn], rs[maxn], dis[maxn], pr[maxn];\n\nvoid add_edge(int u, int v, int w) {\n\te[++cnt] = (edge) { v, head[u], w };\n\thead[u] = cnt;\n}\n\nvoid build(int l, int r, int &x) {\n\tx = ++tot;\n\tif (l == r) {\n\t\tadd_edge(x, l, 0);\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tbuild(l, mid, ls[x]);\n\tbuild(mid + 1, r, rs[x]);\n\tadd_edge(x, ls[x], 0), add_edge(x, rs[x], 0);\n}\n\nvoid link(int l, int r, int s, int t, int c, int x) {\n\tif (s <= l && r <= t) {\n\t\tadd_edge(c, x, 1);\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tif (s <= mid) link(l, mid, s, t, c, ls[x]);\n\tif (t > mid) link(mid + 1, r, s, t, c, rs[x]);\n}\n\nint main() {\n\tn = tot = read();\n\tfor (int i = 1; i <= n; i++) a[i] = read();\n\tfor (int i = 1; i <= n; i++) b[i] = read();\n\tfor (int i = 0; i <= n; i++) id[i] = ++tot;\n\tbuild(0, n, rt);\n\tfor (int i = 1; i <= n; i++) add_edge(i, id[i + b[i]], 0);\n\tfor (int i = 1; i <= n; i++) link(0, n, i - a[i], i, id[i], rt);\n\tfill(dis, dis + tot + 1, inf);\n\tdis[id[n]] = 0;\n\tdeque<node> q;\n\tq.push_back((node) { id[n], 0 });\n\twhile (!q.empty()) {\n\t\tnode t = q.front(); q.pop_front();\n\t\tint u = t.u;\n\t\tfor (int i = head[u]; i; i = e[i].nxt) {\n\t\t\tint v = e[i].to;\n\t\t\tif (dis[v] > dis[u] + e[i].w) {\n\t\t\t\tpr[v] = u;\n\t\t\t\tdis[v] = min(dis[v], dis[u] + e[i].w);\n\t\t\t\tif (e[i].w) q.push_back((node) { v, dis[v] });\n\t\t\t\telse q.push_front((node) { v, dis[v] });\n\t\t\t}\n\t\t}\n\t}\n\tif (dis[0] == inf) return puts(\"-1\");\n\twrite(dis[0]), puts(\"\");\n\tint u = 0;\n\twhile (u != id[n]) {\n\t\tif (u <= n) ans[++len] = u;\n\t\tu = pr[u];\n\t}\n\tfor (int i = len; i >= 1; i--) write(ans[i]), putchar(' ');\n\treturn 0; \n}\n\n```",
        "postTime": 1647867554,
        "uid": 306573,
        "name": "Ender32k",
        "ccfLevel": 0,
        "title": "CF1601B Frog Traveler \u9898\u89e3"
    },
    {
        "content": "\n### \u505a\u6cd5\n\n\u53d1\u73b0\u9700\u8981\u8f93\u51fa\u65b9\u6848\uff0c\u8003\u8651\u7528\u5e7f\u641c\u6765\u505a\uff0c\u5982\u679c\u8df3\u5230\u4e86\u4e00\u4e2a\u4f4d\u7f6e $j$ \uff0c\u90a3\u4e48\u6df1\u5ea6\u5c0f\u4e8e $ j$\n  \u7684\u4f4d\u7f6e\u6211\u4eec\u4e00\u5b9a\u90fd\u5df2\u7ecf\u5728\u4e4b\u524d\u7684\u8df3\u8dc3\u8fc7\u7a0b\u4e2d\u679a\u4e3e\u8fc7\uff0c\u4e5f\u5c31\u662f\u5df2\u7ecf\u5165\u961f\u4e86\uff0c\u6240\u4ee5\u6ca1\u6709\u518d\u6b21\u904d\u5386\u4e00\u904d\u7684\u9700\u8981\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u73b0\u5728\u5df2\u7ecf\u679a\u4e3e\u5230\u7684\u6700\u9ad8\u4f4d\u7f6e\uff0c\u7136\u540e\u6bcf\u6b21\u53d6\u51fa\u961f\u9996\u53bb\u6269\u5c55\u4f4d\u7f6e\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ea\u9700\u8981\u679a\u4e3e\u4ece\u4e4b\u524d\u7684\u6700\u9ad8\u4f4d\u7f6e\u5230\u8fd9\u4e2a\u70b9\u80fd\u5230\u7684\u6700\u9ad8\u4f4d\u7f6e\u5373\u53ef\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u6bcf\u4e2a\u5143\u7d20\u6700\u591a\u88ab\u5165\u961f\u4e00\u6b21\uff0c\u4fdd\u8bc1\u4e86\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n)$ \u3002\u7136\u540e\u5bf9\u4e8e\u8f93\u51fa\u65b9\u6848\uff0c\u7528\u4e00\u79cd\u7c7b\u4f3c\u94fe\u8868\u7684\u65b9\u6cd5\u8f93\u51fa\u5373\u53ef\u3002\n\n\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=3e5+10;\nint qu[N*3],hea=1,tal=0;\nint a[N],b[N],ans[N],pre[N],sp[N];\nbool used[N];\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tfor(int j=1;j<=n;j++)\n\t\tscanf(\"%d\",&b[j]);\n\tused[n]=1;\n\tqu[++tal]=n;\n\tint mins=n;\n\tbool flag=0;\n\twhile(hea<=tal){\n\t\tint j=qu[hea++];\n\t\tif(j-a[j]<=0){\n\t\t\tflag =1;\n\t\t\tprintf(\"%d\\n\",ans[j]+1);\n\t\t\tvector<int> otp;\n\t\t\tint now=j;\n\t\t\twhile(now!=n){\n\t\t\t\totp.push_back(pre[now]);\n\t\t\t\tnow=sp[now];\n\t\t\t}\n\t\t\tfor(int i=otp.size()-1;i>=0;i--)\n\t\t\t\tprintf(\"%d \",otp[i]);\n\t\t\tprintf(\"%d\\n\",0);\n\t\t\tbreak;\n\t\t}\n\t\tfor(int i=mins-1;i>=j-a[j];i--){\n\t\t\tif(used[i])\n\t\t\t\tcontinue;\n\t\t\tint dest=i+b[i];\n\t\t\tif(used[dest])\n\t\t\t\tcontinue;\n\t\t\tsp[dest]=j;\n\t\t\tused[dest]=1;\n\t\t\tpre[dest]=i;\n\t\t\tans[dest]=ans[j]+1;\n\t\t\tqu[++tal]=dest;\n\t\t}\n\t\tmins=min(mins,j-a[j]);\n\t}\n\tif(!flag)\n\t\tcout<<\"-1\";\n\treturn 0;\n}\n```\n\n",
        "postTime": 1641298045,
        "uid": 518151,
        "name": "was_my",
        "ccfLevel": 0,
        "title": "CF1601B"
    },
    {
        "content": "## \u601d\u8def\n\u63d0\u4f9b\u4e00\u79cd\u7b80\u5355\u597d\u60f3\u7684 $O(n)$ \u601d\u8def\u3002\n\u9996\u5148\u6b63\u5e38\u7684\u60f3\u6cd5\u679a\u4e3e\u76ee\u524d\u70b9\u6bcf\u4e00\u79cd\u5411\u4e0a\u8df3\u7684\u65b9\u6cd5\uff0c\u90a3\u4e48\u66b4\u529b $BFS$ \u5373\u53ef\uff0c\u4f46\u662f\u8fd9\u6837\u4f1a\u8d85\u65f6\u3002\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u4f18\u5316\uff0c\u5982\u56fe\uff1a\n\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/z3ie7dh7.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u6d45\u84dd\u8272\u65b9\u5757\u662f\u9752\u86d9\u539f\u672c\u7684\u4f4d\u7f6e\uff0c\u4ed6\u80fd\u8df3\u5230\u7eff\u8272\u533a\u95f4\u7684\u70b9\u4e0a\uff0c\u7136\u540e\u8df3\uff0c\u518d\u4e0b\u6ed1\u5230\u6df1\u84dd\u8272\u65b9\u5757\u7684\u5730\u65b9\uff0c\u6b64\u65f6\u4ed6\u80fd\u8df3\u5230\u7d2b\u8272\u7684\u533a\u95f4\u3002\u6211\u4eec\u53d1\u73b0\u9752\u86d9\u7d2b\u8272\u533a\u95f4\u4e0e\u7b2c\u4e00\u6b21\u8df3\u7684\u7eff\u8272\u533a\u95f4\u6709\u5927\u91cf\u91cd\u590d\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u53d8\u91cf\uff0c\u8bb0\u5f55\u4e00\u4e0b\u9752\u86d9\u5386\u53f2\u6700\u9ad8\u8bbf\u95ee\u533a\u95f4\u5728\u54ea\u91cc\uff0c\u6bcf\u6b21\u4ece\u5386\u53f2\u6700\u9ad8\u70b9\u5f00\u59cb\u8bbf\u95ee\uff0c\u540c\u65f6\u7ef4\u62a4\u4e00\u4e0b\u5386\u53f2\u6700\u9ad8\u70b9\u5373\u53ef\u3002\n## code\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=6e5+10;\nint read(){\n\tint x=0,f=1;char c=getchar();\n\twhile(c>'9' || c<'0'){if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0' && c<='9'){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n\treturn x*f;\n}\nint n,a[N],ans,b[N],dis[N],aim[N],from[N];\nint lu[N],tot,rcd[N];\nint main(){\n\tn=read();\n\tfor(int i=1;i<=n;i++)a[i]=read();\n\tfor(int i=1;i<=n;i++)b[i]=read(),aim[i]=i+b[i];\n\tmemset(dis,0x3f,sizeof(dis));\n\tdis[n]=0;int now=n;\n\tqueue<int>q;\n\tq.push(n);\n\twhile(!q.empty()){\n\t\tint u=q.front();q.pop();\n\t\tint l=u-a[u];\n\t\tif(l<=0){ans=dis[u]+1;from[0]=u;break;}\n\t\tfor(int i=now-1;i>=l;i--){//now\u662f\u5386\u53f2\u6700\u9ad8\u70b9 \n\t\t\tif(dis[aim[i]]==0x3f3f3f3f){\n\t\t\t\tdis[aim[i]]=dis[u]+1;\n\t\t\t\tfrom[aim[i]]=u;//\u8bb0\u5f55\u4ed6\u6765\u81ea\u54ea\u91cc \n\t\t\t\trcd[aim[i]]=i;//\u8bb0\u5f55\u4ed6\u6765\u81ea\u7684\u5730\u65b9\u4e0b\u6ed1\u524d\u5728\u54ea\u91cc \n\t\t\t\tq.push(aim[i]);\n\t\t\t}\n\t\t}\n\t\tnow=min(now,l);\n\t}\n\t\n\tif(ans==0){printf(\"-1\");return 0;}\n\telse printf(\"%d\\n\",ans);\n\t//\u8f93\u51fa\u8def\u5f84 \n\ttot=0;\n\tlu[++tot]=0;\n\twhile(lu[tot]!=n){\n\t\tlu[tot+1]=from[lu[tot]];tot++;\n\t}\n\tfor(int i=tot-1;i>=1;i--)printf(\"%d \",rcd[lu[i]]);\n\treturn 0;\n} v\n```",
        "postTime": 1666175046,
        "uid": 234356,
        "name": "\u65b9\u6770123",
        "ccfLevel": 6,
        "title": "CF1601B Frog Traveler"
    },
    {
        "content": "\u53ef\u4ee5\u51b2\u4e00\u53d1 [\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u56fe](https://www.moyujiang.com/982.html) \u83bd\u8fc7\u53bb\uff0c\u4f46\u662f\u592a\u96be\u5199\u4e86\u3002\n\n\u8003\u8651 bfs\uff0c\u6bcf\u4e2a\u70b9 $y$ \u88ab\u8df3\u4e0a\u6765\uff0c\u4e0b\u6ed1 $b_y$ \u7c73\u4e4b\u524d\u7b2c\u4e00\u6b21\u5230\u8fbe\u5c31\u662f\u6700\u4f18\u7684\uff0c\u6240\u4ee5\u6bcf\u4e2a\u70b9\u53ea\u4f1a\u88ab\u641c\u5230\u4e00\u6b21\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u628a $[0,n-1]$ \u585e\u8fdb STL::set\uff0c\u6bcf\u6b21\u628a $[u-a_u,u]$ \u4e2d\u8fd8\u6ca1\u88ab\u8bbf\u95ee\u8fc7\u7684\u70b9\u62c9\u51fa\u6765\u66f4\u65b0\u5e76\u653e\u5165\u4e0b\u6ed1\u540e\u7684\u70b9\u5165\u961f\u5217\uff0c\u7136\u540e\u628a\u5b83\u4eec\u5220\u9664\u6389\uff0c\u6bcf\u4e2a\u70b9\u53ea\u4f1a\u8d21\u732e\u4e00\u6b21\u5220\u9664\u548c\u5165\u961f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n[code](https://codeforces.com/contest/1601/submission/133001541)\u3002",
        "postTime": 1635319950,
        "uid": 173685,
        "name": "\u6478\u9c7c\u9171",
        "ccfLevel": 8,
        "title": "CF1601B"
    },
    {
        "content": "\uff08\u6211\u8ba8\u538c\u4ece $n$ \u8df3\u5230 $0$ \u5c31\u628a\u6574\u4e2a\u6570\u5217\u53cd\u4e86\u4e0b\uff0c\u6240\u4ee5\u4e0b\u9762\u7684\u9898\u89e3\u662f\u4ece $1$ \u8df3\u5230 $n+1$ \u7684\uff0c\u8981\u6ce8\u610f\u8fd9\u70b9\u4e0d\u7136\u53ef\u80fd\u4f1a\u770b\u4e0d\u61c2qwq\uff09\n\n\u9996\u5148\u8003\u8651\u4e00\u4e2a\u6734\u7d20\u7684bfs dp\uff0c\u7528 $fd_i$ \u8868\u793a\u9752\u86d9\u521a\u521a\u8df3\u5b8c\u540e\u5230\u8fbe $i$ \u8df3\u7684\u6700\u5c11\u6b21\u6570\uff0c\u7528 $f_i$ \u8868\u793a\u9752\u86d9\u6ed1\u843d\u5230 $i$ \u8df3\u7684\u6700\u5c11\u6b21\u6570\u3002\n\n\u521d\u59cb\u5316\u8981\u6ce8\u610f\u4e0b\uff0c\u7531\u4e8e\u9752\u86d9\u4ece $1$ \u662f\u5c06\u8981\u8d77\u8df3\uff0c\u4e5f\u5c31\u662f\u53ef\u4ee5\u770b\u4f5c\u662f\u5df2\u7ecf\u843d\u5230\u4e86 $1$ \uff0c\u6240\u4ee5 $f_1=0$ \uff0c\u6b64\u5916\u7531\u4e8e\u9752\u86d9\u8fd8\u6ca1\u6709\u8d77\u8df3\u8fc7\uff0c\u90a3\u4e48\u6240\u6709 $fd_i$ \u90fd\u5148\u8d4b\u503c\u65e0\u7a77\u5927\uff0c\u9664\u4e86 $f_1$ \u4ee5\u5916\u7684 $f_i$ \u4e5f\u5148\u8d4b\u503c\u65e0\u7a77\u5927\u3002\n\n\u5bf9\u4e8e\u9752\u86d9\u5f53\u524d\u5728 $i$ \u70b9\u5c06\u8981\u8d77\u8df3\uff0c\u53ef\u4ee5\u5230\u8fbe $i+1,i+2,\\dots,i+a_i$ \u8fd9\u4e9b\u5730\u65b9\uff0c\u5982\u679c\u4e00\u4e2a\u5730\u65b9 $x$ \u6ca1\u6709\u5230\u8fbe\u8fc7\uff0c\u90a3\u4e48\u5c31\u8ba9 $fd_x=f_i+1$ \uff0c\u4e4b\u540e\u9752\u86d9\u8981\u4e0b\u6ed1\uff0c\u5982\u679c\u4e0b\u6ed1\u540e\u7684\u4f4d\u7f6e $x-b_x$ \u6ca1\u6709\u5230\u8fbe\u8fc7\uff0c\u90a3\u4e48\u5c31\u8ba9 $f_{x-b_x}=fd_x$ \u3002\n\n\u4f46\u662f\u8fd9\u6837\u4f1a\u8df3\u5230\u5f88\u591a\u5df2\u7ecf\u8df3\u5230\u8fc7\u7684\u70b9\uff0c\u6548\u7387\u4e0d\u9ad8\uff0c\u8003\u8651\u4f18\u5316\u627e\u8981\u8df3\u5230\u7684\u70b9\u3002\u6211\u4eec\u53ef\u4ee5\u7528 $b_i=1$ \u8868\u793a $i$ \u8fd8\u6ca1\u88ab\u8df3\u5230\uff0c $b_i=0$ \u8868\u793a $i$ \u5df2\u7ecf\u88ab\u8df3\u5230\uff0c\u7136\u540e\u4e8c\u5206\u627e\u7b2c\u4e00\u4e2a\u53ef\u4ee5\u8df3\u5230\u7684\u70b9\uff0c\u8fd9\u4e2a\u53ea\u8981\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u67e5\u8be2\u4e00\u4e0b $now+1$ \u5230 $mid$ \u533a\u95f4 $b_i$ \u548c\u662f\u5426 $>0$ \u5373\u53ef\uff0c\u8fd9\u6837\u4e0d\u65ad\u53bb\u8df3\u70b9\u76f4\u5230\u8df3\u4e0d\u5230\u4e3a\u6b62\u3002\n\n\u867d\u7136\u8fd9\u6837\u83bd\u7684\u627e\u7b2c\u4e00\u4e2a\u53ef\u8df3\u5230\u7684\u70b9\u590d\u6742\u5ea6\u5f88\u5927\uff0c\u6709 $O(\\log n^2)$ \uff0c\u4f46\u662f\u6211\u4eec\u53ea\u4f1a\u6709 $n$ \u4e2a\u70b9\u53ef\u4ee5\u8df3\u5230\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u662f $O(n\\log n^2)$ \u7684\u3002~~\uff08\u80fd\u8fc7\u5c31\u884c\uff09~~\n\ndp\u8f93\u51fa\u65b9\u6848\u6709\u4e00\u79cd\u5f88\u5e38\u7528\u7684\u5c0f\u6280\u5de7\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u72b6\u6001\u8bb0\u5f55\u4e00\u4e2a\u8f6c\u79fb\u8fc7\u6765\u7684\u72b6\u6001 $pre$ \uff0c\u8f93\u51fa\u65f6\u4ece\u7ec8\u70b9\u72b6\u6001\u5f80\u524d\u8df3\u7136\u540e\u53cd\u8fc7\u6765\u8f93\u51fa\u5373\u53ef\u3002\n\ncode\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nlong long n,a[300002],b[300002],s[300002],fd[300002],f[300002],pre[300002],pred[300002],ans[300002],top;\nqueue<int> q;\ninline void updd(int x){while (x<=n){++s[x];x+=x&-x;}}//+1\u64cd\u4f5c \ninline void upd(int x){while (x<=n){--s[x];x+=x&-x;}}//-1\u64cd\u4f5c \ninline int query(int x){int sum=0;while (x){sum+=s[x];x-=x&-x;}return sum;}//\u533a\u95f4\u67e5\u8be2\u64cd\u4f5c \ninline int ne(int x){//\u67e5\u627e\u4e0b\u4e00\u4e2a\u53ef\u8df3\u5230\u7684\u6570 \n\tif (query(n)-query(x)==0) return n+1;//\u540e\u9762\u90fd\u8df3\u8fc7\u4e86\u5c31\u8fd4\u56de\u4e00\u4e2a\u4e00\u5b9a\u8df3\u4e0d\u5230\u7684\u4f4d\u7f6e \n\tint l=x+1,r=n;\n\twhile (l<r){\n\t\tint mid=(l+r)/2;\n\t\tif (query(mid)-query(x)) r=mid;\n\t\telse l=mid+1;\n\t}\n\treturn l;\n}\nint main(){\n\tios::sync_with_stdio(false);\n\tcin>>n;\n\tfor (int i=n;i;--i) cin>>a[i];\n\tfor (int i=n;i;--i) cin>>b[i];\n\t++n;\n\tb[n]=a[n]=0;//\u53cd\u8f6c\u6210\u4ece1\u8df3\u5230n+1\u7684\u60c5\u51b5 \n\tfor (int i=2;i<=n;++i) f[i]=1e9;\n\tfor (int i=1;i<=n;++i) fd[i]=1e9;\n\tq.push(1);\n\tfor (int i=2;i<=n;++i) updd(i);\n\twhile (!q.empty()){\n\t\tint x=q.front(); q.pop();\n\t\tint yx=x;\n\t\twhile (1){//\u4e0d\u65ad\u8df3\u70b9 \n\t\t\tint nex=ne(x);\n\t\t\tif (nex>yx+a[yx]) break;//\u8df3\u4e0d\u5230\u4e86\u5c31\u505c\u6b62\u8df3\u70b9 \n\t\t\tupd(nex);\n\t\t\tfd[nex]=f[yx]+1; pred[nex]=yx;\n\t\t\tif (f[nex-b[nex]]==1e9){f[nex-b[nex]]=f[yx]+1; q.push(nex-b[nex]); pre[nex-b[nex]]=nex;}\n\t\t\tx=nex;\n\t\t}\n\t}\n\tif (fd[n]==1e9){cout<<-1; return 0;} else cout<<fd[n]<<'\\n';\n\tint x=n;\n\twhile (1){//\u56de\u6eaf\u5f97\u5230\u6240\u6709\u8f6c\u79fb\u8fc7\u6765\u7684\u72b6\u6001 \n\t\tans[++top]=x;\n\t\tx=pred[x];\n\t\tif (x==1) break;\n\t\tx=pre[x];\n\t}\n\tfor (int i=top;i;--i) cout<<n-ans[i]<<' ';\n\treturn 0;\n}\n```\n",
        "postTime": 1660898248,
        "uid": 351749,
        "name": "lanos212",
        "ccfLevel": 0,
        "title": "CF1601B Frog Traveler \u9898\u89e3"
    },
    {
        "content": "## \u9898\u610f\n\u6709\u4e00\u53ea Frog \u6389\u5230\u4e86\u4e95\u5e95\uff0c\u4e95\u5e95\u7684\u6df1\u5ea6\u4e3a $n$\uff0c\u6df1\u5ea6\u4e3a $0$ \u5219\u4e3a\u8df3\u51fa\uff0c\u5c0f\u9752\u86d9\u5728\u6df1\u5ea6\u4e3a $x$ \u7684\u5730\u65b9\u53ef\u4ee5\u5411\u4e0a\u8df3 $[0,a_x]$ \u7684\u8ddd\u79bb\uff0c\u8df3\u8fc7\u4e00\u6b21\u4e4b\u540e\u82e5\u5728\u6df1\u5ea6 $y$ \u4e14\u6ca1\u6709\u8df3\u51fa\u4e95\uff0c\u90a3\u4e48\u5c0f\u9752\u86d9\u4f1a\u4e0b\u6ed1 $b_y$ \u7684\u8ddd\u79bb\uff0c\u95ee\u5c0f\u9752\u86d9\u6700\u5c11\u8df3\u51e0\u6b21\u5e76\u8f93\u51fa\u65b9\u6848\uff0c\u65e0\u89e3\u8f93\u51fa $-1$\u3002\n\n$1\\le n\\le 300\\ 000$\n## \u9898\u89e3\n\u8003\u8651\u73b0\u5728\u662f\u4f4d\u7f6e $x$\uff0c\u8df3\u4e00\u6b65\u53ef\u4ee5\u5230\u90a3\u4e9b\u4f4d\u7f6e\u3002\u5982\u679c\u53ef\u4ee5\u76f4\u63a5\u8df3\u51fa\u53bb\u5c31\u8df3\u51fa\u53bb\uff0c\u5426\u5219\u5148\u8df3\u4e00\u4e0b\u5230 $[x-a_x,x]$ \u518d\u4e0b\u6ed1\u3002\u8fd9\u4e2a\u4e1c\u897f\u76f4\u63a5\u5e7f\u641c\u590d\u6742\u5ea6\u662f $\\mathcal O(n^2)$ \u7684\u3002\n\n\u6240\u4ee5\u6211\u4eec\u4e0d\u8981\u679a\u4e3e\u8df3\u4e00\u6b65\u80fd\u5230\u54ea\u4e9b\u4f4d\u7f6e\uff0c\u800c\u662f\u679a\u4e3e\u8df3\u4e00\u6b65\u518d\u6ed1\u4e0b\u6765\u80fd\u5230\u54ea\u4e9b\u4f4d\u7f6e\u3002\u628a $(x,x+b_x)$ \u5f53\u6210\u4e00\u4e2a\u4e8c\u5143\u7ec4\uff0c\u5c31\u76f8\u5f53\u4e8e\u8be2\u95ee\u4e8c\u5143\u7ec4\u7b2c\u4e00\u7ef4\u5728 $[x-a_x,x]$ \u4e14\u7b2c\u4e8c\u7ef4\u8fd8\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\u7684\u3002\u7528`set`\u7ef4\u62a4\u8fd9\u4e9b\u4e8c\u5143\u7ec4\uff0c\u5982\u679c\u5e7f\u641c\u641c\u5230\u4e86 $x$ \u5c31\u628a\u6240\u6709\u7b2c\u4e8c\u7ef4\u4e3a $x$ \u7684\u7ed9\u5220\u6389\u3002\u56e0\u4e3a\u4e00\u5171 $n$ \u6761\u8fb9\u6bcf\u6761\u8fb9\u6700\u591a\u8bbf\u95ee\u4e00\u6b21\u5c31\u5220\u6389\u6240\u4ee5\u590d\u6742\u5ea6\u662f $\\mathcal O(n\\log n)$\u3002\n\n\u8f93\u51fa\u65b9\u6848\u53ef\u80fd\u7a0d\u5fae\u6709\u70b9\u9ebb\u70e6\uff0c\u56e0\u4e3a\u6211\u4eec\u73b0\u5728\u5e7f\u641c\u641c\u7684\u662f\u6ed1\u4e0b\u6765\u7684\u4f4d\u7f6e\u3002\u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u4f4d\u7f6e\u7ef4\u62a4\u4e24\u4e2a\u503c $from_i$ \u548c $lst_i$\uff0c\u5206\u522b\u8868\u793a\u4ece\u54ea\u4e2a\u4f4d\u7f6e\u6ed1\u4e0b\u6765\u548c\u8f6c\u79fb\u8fc7\u6765\u7684\u70b9\uff0c\u8f93\u51fa\u65b9\u6848\u4e5f\u5c31\u4e0d\u96be\u4e86\u3002\n\n## \u4ee3\u7801\n```cpp\n// Problem: B. Frog Traveler\n// Contest: Codeforces - Codeforces Round #751 (Div. 1)\n// URL: https://codeforces.com/contest/1601/problem/B\n// Memory Limit: 512 MB\n// Time Limit: 2000 ms\n// \n// Powered by CP Editor (https://cpeditor.org)\n\n#include<bits/stdc++.h>\n#define pb push_back\n#define pc putchar\n#define mp make_pair\n#define fi first\n#define se second\n#define chkmx(a,b) ((a)=max((a),(b)))\n#define chkmn(a,b) ((a)=min((a),(b)))\nusing namespace std;\ntemplate<typename T>\ninline void read(T &x){x=0;char c=getchar();bool f=false;for(;!isdigit(c);c=getchar())f|=c=='-';for(;isdigit(c);c=getchar())x=x*10+c-'0';if(f)x=-x;}\ntemplate<typename T ,typename ...Arg>inline void read(T &x,Arg &...args){read(x);read(args...);}\ntemplate<typename T>inline void write(T x){if(x<0)putchar('-'),x=-x;if(x>=10)write(x/10);putchar(x%10+'0');}\n//#define int long long\n#define lc (x<<1)\n#define rc (x<<1|1)\n#define mid (l+r>>1)\ntypedef long long ll;\nconst int N=3e5+100;\nint n,a[N],b[N];\nvector<int>can[N];\nset<pair<int,int>>st;\nvoid add(int u){\n\tfor(auto v:can[u])\n\t\tif(st.find(mp(v,u))!=st.end())\n\t\t\tst.erase(mp(v,u));\n}\nint lst[N],fr[N];\n//lst\u662f\u4e0a\u4e00\u4e2a\u70b9\n//fr\u662f\u4e0a\u4e00\u4e2a\u6ed1\u4e0b\u6765\u7684\u70b9\nsigned main(){\n\tread(n);\n\tfor(int i=1;i<=n;i++)read(a[i]);\n\tfor(int i=1;i<=n;i++)read(b[i]),can[i+b[i]].pb(i),st.insert(mp(i,i+b[i]));\n\tadd(n);queue<int>q;q.push(n);\n\twhile(q.size()){\n\t\tint u=q.front();q.pop();\n\t\tif(u-a[u]<=0){\n\t\t\tvector<int>ans;ans.pb(0);\n\t\t\twhile(u!=n)ans.pb(fr[u]),u=lst[u];\n\t\t\treverse(ans.begin(),ans.end());\n\t\t\twrite(ans.size());pc('\\n');\n\t\t\tfor(auto x:ans)write(x),pc(' ');\n\t\t\treturn 0;\n\t\t}\n\t\tint l=u-a[u],r=u;\n\t\twhile(1){\n\t\t\tauto it=st.lower_bound(mp(l,0));\n\t\t\tif(it==st.end())break;\n\t\t\tif(it->first>r)break;\n\t\t\tfr[it->second]=it->first;\n\t\t\tlst[it->second]=u;q.push(it->second);\n\t\t\tadd(it->second);\n\t\t}\n\t}\n\tputs(\"-1\");\n}\n```",
        "postTime": 1635292248,
        "uid": 174304,
        "name": "jun\u5934\u5409\u5409",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1601B \u3010Frog Traveler\u3011"
    },
    {
        "content": "# \u9898\u76ee\u5927\u610f\n\n\u6709\u4e00\u53ea\u9752\u86d9\u5728 $n$\uff0c\u5728\u70b9 $i$ \u53ef\u4ee5\u5411\u4e0a\u8df3\u6700\u591a $a[i]$ \u7684\u8ddd\u79bb\uff0c\u8df3\u5b8c\u4e4b\u540e\u82e5\u5728 $j$ \u70b9\uff0c\u5f53\u524d\u4f4d\u7f6e\u5219\u4f1a\u53d8\u4e3a $j+b[j]$\n\n\u8fd9\u4e2a\u505a\u6cd5\u662f xmz \u6559\u7ed9\u6211\u7684\n\n# \u9898\u89e3\n\n\u663e\u7136\u53ef\u4ee5\u8f6c\u5316\u4e3a\u4e00\u4e2a\u56fe\u8bba\u95ee\u9898\uff0c\u7136\u540e\u533a\u95f4\u52a0\u8fb9\u6c42\u5355\u6e90\u6700\u77ed\u8def\uff0c\u9700\u8981 DS \u4f18\u5316\u5efa\u56fe\u3002\n\n\u4f46\u8fd9\u4e2a\u4e1c\u897f\u6bd4\u8f83\u590d\u6742\uff0c\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u79cd\u7b80\u5355\u7684\u56fe\u8bba\u505a\u6cd5\u3002\n\n\u6211\u4eec\u8003\u8651\u6211\u4eec\u4e0a\u8ff0\u95ee\u9898\u7684\u590d\u6742\u5ea6\u74f6\u9888\u662f\u4ec0\u4e48\uff0c\u5c31\u662f\u5728\u6bcf\u4e2a\u70b9\u90fd\u4f1a\u626b\u4e00\u904d\u5168\u90e8\u51fa\u8fb9\uff0c\u8fd9\u5f88\u6709\u53ef\u80fd\u8ba9\u590d\u6742\u5ea6\u9000\u5316\u5230 $O(n^2)$\u3002\u4f46\u8003\u8651\u5230\u8fd9\u4e9b\u70b9\u4e2d\u6709\u4e00\u4e9b\u662f\u6211\u4eec\u5df2\u7ecf\u626b\u8fc7\u7684\uff0c\u663e\u7136\u518d\u904d\u5386\u4e00\u904d\u80af\u5b9a\u4e0d\u5982\u4e0a\u4e00\u6b21\u7684\u7b54\u6848\u4f18\u79c0\uff0c\u5982\u679c\u80fd\u591f\u53bb\u6389\u8fd9\u4e9b\u70b9\u590d\u6742\u5ea6\u5c31\u80fd\u964d\u4e0b\u6765\u3002\n\n\u89c2\u5bdf\u53ef\u5f97\uff0c\u5df2\u7ecf\u626b\u8fc7\u7684\u70b9\u80af\u5b9a\u662f\u5448\u73b0\u4e3a\u4e00\u4e2a\u533a\u95f4\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u501f\u7528\u6811\u4e0a\u51b0\u8336\u59ec\u8986\u76d6\u7684\u60f3\u6cd5\u6765\u7ef4\u62a4\u8fd9\u4e2a\u4e1c\u897f\u3002\n\n\u5177\u4f53\u6765\u8bf4\u6bcf\u4e2a\u70b9\u7ef4\u62a4\u4e00\u4e2a\u51b0\u8336\u59ec\uff0c\u5f53\u626b\u8fc7 $i$ \u70b9\u4e4b\u540e\uff0c\u5c31\u5c06\u5b83\u7684\u524d\u9a71 $i+1$ \u548c\u81ea\u5df1 $unite$ \u8d77\u6765\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u7ef4\u62a4\u51fa\u4e0b\u4e00\u4e2a\u672a\u8986\u76d6\u7684\u70b9\u662f\u8c01\u3002\n\n\u6211\u81ea\u5df1\u5b9e\u73b0\u7684\u65f6\u5019\u51b0\u8336\u59ec\u4f3c\u4e4e\u53ea\u80fd\u8def\u5f84\u538b\u7f29\uff0c\u4e0d\u80fd\u6309\u79e9\u5408\u5e76\u3002\u6240\u4ee5\u590d\u6742\u5ea6\u4e5f\u53ea\u80fd\u505a\u5230 $O(n\\log n)$\n\n[\u4ee3\u7801](https://codeforces.com/contest/1601/submission/133240216)\n",
        "postTime": 1635333702,
        "uid": 307042,
        "name": "\u4e00Iris\u4e00",
        "ccfLevel": 7,
        "title": "CF1601B Frog Traveler"
    }
]