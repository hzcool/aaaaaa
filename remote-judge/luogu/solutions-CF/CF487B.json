[
    {
        "content": "\u8bbe $dp_i$ \u4e3a\u5e8f\u5217 $[1,i]$ \u7684\u7b54\u6848\uff0c\u8981\u6c42\u7684\u5c31\u662f $dp_n$\u3002\n\n\u8fd9\u4e2a\u5c31\u662f\u5957\u8def\u7684 1D/1D dp\uff08\u5e8f\u5217\u5206\u6bb5\u7c7b\u7684\u95ee\u9898\u7684\u5957\u8def\uff09\u3002\u5373 $dp_i=\\min_{j=l}^r val(j,i)+dp_{j-1}$\u3002\n\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u9650\u5236\uff0c\u8bbe $w$ \u4e3a\u6ee1\u8db3 $\\max(a[w,i])-\\min(a[w,i])\\le s$ \u7684\u6700\u5c0f\u7684\u6570\uff0c\u53d1\u73b0 $w$ \u968f $i$ \u4e0d\u51cf\uff08\u53cd\u8bc1\u6613\u5f97\uff09\u3002\u90a3\u4e48\u8f6c\u79fb\u533a\u95f4\u4e3a $[w,i]$\u3002\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u9650\u5236\u663e\u7136\u8f6c\u79fb\u533a\u95f4\u662f $[1,i-l+1]$\u3002\u8fd9\u4e2a $val$ \u51fd\u6570\u5c31\u662f\u65b0\u5f00\u4e00\u6bb5\u533a\u95f4\uff0c\u5c31\u662f $1$ \u561b\u3002\u8fd9\u4e24\u4e2a\u533a\u95f4\u7684\u5e76\u96c6\u4e3a $[w,i-l+1]$\u3002\n\n\u5373 $dp_i=\\min_{j=w}^{i-l+1} dp_{j-1}+1$\n\n\u90a3\u4e48\u7ef4\u62a4\u65b9\u5f0f\u5c31\u5f88\u663e\u7136\u4e86\u3002\n\n\u4e09\u4e2a\u91cf\uff08$i,i-l+1,w$\uff09\u90fd\u4e0d\u51cf\u6240\u4ee5\u53ef\u4ee5\u5168\u90e8\u4f7f\u7528\u5355\u8c03\u961f\u5217\u3002\n\n$w$ \u4e0d\u51cf\u6240\u4ee5\u6211\u4eec\u7ef4\u62a4\u5173\u4e8e $a$ \u533a\u95f4 $[w,i]$ \u7684\u7ef4\u62a4\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u7684\u5355\u8c03\u961f\u5217\uff0c\u76f4\u63a5\u626b\u63cf\u8fc7\u53bb\u5373\u53ef\u3002\u518d\u5bf9 $dp$ \u7684 $[w-1,i-l]$ \u533a\u95f4\u7ef4\u62a4\u5355\u8c03\u961f\u5217\u3002$\\Theta(n)$ \u7684\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint dp[100005];\nint a[100005];\ndeque<int> dpmn,mn,mx;\nint main()\n{\n\tmemset(dp,127,sizeof(dp));\n\tint n,l,s,p,i,j,w;\n\tscanf(\"%d%d%d\",&n,&s,&l);\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tw=1;\n\tdp[0]=0;\n\tfor(i=1;i<l;i++)\n\t{\n\t\twhile(mn.size()&&a[mn.back()]>=a[i])\n\t\t\tmn.pop_back();\n\t\tmn.push_back(i);\n\t\twhile(mx.size()&&a[mx.back()]<=a[i])\n\t\t\tmx.pop_back();\n\t\tmx.push_back(i);\n\t}\n\tfor(i=l;i<=n;i++)\n\t{\n\t\twhile(mn.size()&&a[mn.back()]>=a[i])\n\t\t\tmn.pop_back();\n\t\tmn.push_back(i);\n\t\twhile(mx.size()&&a[mx.back()]<=a[i])\n\t\t\tmx.pop_back();\n\t\tmx.push_back(i);\n\t\tfor(;w<=i;w++)\n\t\t{\n\t\t\twhile(mn.front()<w) mn.pop_front();\n\t\t\twhile(mx.front()<w) mx.pop_front();\n\t\t\tif(a[mx.front()]-a[mn.front()]<=s) break;\n\t\t}\n\t\twhile(dpmn.size()&&dp[dpmn.back()]>=dp[i-l]) dpmn.pop_back();\n\t\tdpmn.push_back(i-l);\n\t\twhile(dpmn.size()&&dpmn.front()<w-1) dpmn.pop_front();\n\t\tif(w<=i-l+1&&dpmn.size())\n\t\t\tdp[i]=dp[dpmn.front()]+1;\n\t}\n\tcout<<(dp[n]>1e9?-1:dp[n]);\n}\n```",
        "postTime": 1621505397,
        "uid": 203623,
        "name": "Ntokisq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF487B Strip"
    },
    {
        "content": "[\u6211\u7684\u535a\u5ba2](https://blog.csdn.net/qq_35019468/article/details/102019674)\n\n\u76f4\u63a5RMQ\u5373\u53ef\uff0c\u6700\u540e\u5957\u4e00\u4e2a\u7b80\u5355DP\u3002\n\nRMQ\u6c42\u51fa\u533a\u95f4\u7684\u5143\u7d20\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u3002\n\n\u540e\u9762\u76f4\u63a5\u4e00\u904dDP\u3002\n\ndp[i]\u8868\u793a\u524di\u4e2a\u6570\u6700\u5c11\u8981\u5206\u6210\u591a\u5c11\u4efd\u3002\n\n\u6ee1\u8db3\u6761\u4ef6\u65f6\uff1a\n\n$dp[i]=min(dp[i],dp[ok]+1)$\n\n```cpp\n#include<bits/stdc++.h>\n#define inf 2147483647\n#define N 100010\nusing namespace std;\nint maxn[N][22],minn[N][22],n,s,ll,dp[N],cnt;\nint ask(int l,int r)//\u6c42\u5dee\u7684\u6700\u5927\u503c\n{\n\tint ans=0;\n\twhile((1<<(ans+1))<=r-l+1)\n\t{\n\t\tans++;\n\t}\n\treturn max(maxn[l][ans],maxn[r-(1<<ans)+1][ans])-min(minn[l][ans],minn[r-(1<<ans)+1][ans]);\n}\nint read()\n{\n\tint sum=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9')\n\t{\n\t\tif(ch=='-')\n\t\t{\n\t\t\tf=-1;\n\t\t}\n\t\tch=getchar();\n\t}\n\twhile(ch<='9'&&ch>='0')\n\t{\n\t\tsum=sum*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn sum*f;\n}\nint main()\n{\n\tn=read();\n\ts=read();\n\tll=read();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tmaxn[i][0]=minn[i][0]=read();\n\t}\n\tfor(int i=1;(1<<i)<=n;i++)\n\t{\n\t\tfor(int j=1;j+(1<<i)-1<=n;j++)\n\t\t{\n\t\t\tminn[j][i]=min(minn[j][i-1],minn[j+(1<<(i-1))][i-1]);\n\t\t\tmaxn[j][i]=max(maxn[j][i-1],maxn[j+(1<<(i-1))][i-1]);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tdp[i]=inf;\n\t}\n\tfor(int i=ll;i<=n;i++)//DP\n\t{\n\t\twhile(i-cnt>=ll&&(ask(cnt+1,i)>s||dp[cnt]==inf))\n\t\t{\n\t\t\tcnt++;\n\t\t}\n\t\tif(i-cnt>=ll)\n\t\t{\n\t\t\tdp[i]=min(dp[i],dp[cnt]+1);\n\t\t}\n\t}\n\tif(dp[n]==inf)\n\t{\n\t\tputs(\"-1\");\n\t}else{\n\t\tprintf(\"%d\\n\",dp[n]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1570109545,
        "uid": 103334,
        "name": "Honor\u8a89",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF487B \u3010Strip\u3011"
    },
    {
        "content": "#### Description\n\n> \u7ed9\u5b9a\u4e00\u4e2a\u957f\u4e3a $n$ \u7684\u5e8f\u5217 $a_i$\uff0c\u6c42\u628a $a_i$ \u5206\u6210\u82e5\u5e72\u90e8\u5206\u4f7f\u5f97\uff1a\n>\n> 1. \u6bcf\u4e00\u90e8\u5206\u957f\u5ea6\u81f3\u5c11\u4e3a $l$\u3002\n> 2. \u6bcf\u4e00\u90e8\u5206\u7684\u6781\u5dee\u4e0d\u8d85\u8fc7 $s$\u3002\n>\n> \u6c42\u6700\u5c11\u80fd\u5206\u6210\u591a\u5c11\u4efd\u3002\n\n#### Solution\n\nST \u8868\u4f18\u5316\u52a8\u6001\u89c4\u5212\uff08\u4e0d\u77e5\u9053\u80fd\u4e0d\u80fd\u8fd9\u4e48\u8bf4\uff09\u597d\u73a9\u9898\u3002\n\n\u9996\u5148\u5148 dp\uff0c\u5b9a\u4e49 $dp_i$ \u4e3a\u622a\u6b62\u5230 $a_i$  \u7684\u7b54\u6848\uff0c\u5219\u6709\uff1b\n\n$$dp_i=\\min\\{dp_j\\ (j \\in [1, i - l],\\max\\{a_k\\ (k \\in [j,i])\\}-\\min\\{a_k\\ (k\\in [j,i])\\})\\}+1$$\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u540e\u9762\u8fd9\u4e00\u6bb5\u7ea6\u675f $\\max\\{a_k\\ (k \\in [j,i])\\}-\\min\\{a_k\\ (k\\in [j,i])\\}$\uff08\u5373\u6c42\u6781\u5dee\uff09\u53ef\u4ee5\u7528 ST \u8868\u8fdb\u884c\u4f18\u5316\u3002\n\n\u4f46\u662f\u8fd9\u6837\u76f4\u63a5\u8fd9\u6837 dp \u662f $\\mathcal O(n^2)$ \u7684\uff0c\u6211\u4eec\u9700\u8981\u4f18\u5316\u4e3a $\\mathcal O(n \\log n)$\u3002\n\n\u5047\u8bbe\u6211\u4eec\u73b0\u5728\u5206\u522b\u5728\u82e5\u5e72\u4e2a\u4f4d\u7f6e $c_1,c_2,\\cdots,c_p$ \u5bf9\u8fd9\u4e2a\u5e8f\u5217\u8fdb\u884c\u4e86\u5206\u5272\uff0c\u90a3\u4e48\u8fd9\u65f6\u5982\u679c\u6211\u4eec\u8981\u79fb\u52a8 $c_1$ \u5f80\u53f3\uff0c\u5269\u4e0b\u7684\u5206\u5272\u70b9\u5c31\u4f1a\u9010\u6e10\u7d27\u51d1\u3002\u9898\u76ee\u4e2d\u8981\u6c42\u7684\u662f\u6700\u5c11\u80fd\u5206\u6210\u591a\u5c11\u4efd\uff0c\u5206\u7684\u8d8a\u677e\u6563\u8d8a\u597d\u3002\n\n\u56e0\u6b64\u6211\u4eec\u5728\u4f18\u5316\u7684\u65f6\u5019\u53ef\u4ee5\u4e0d\u8ba9 $j$ \u5728 $[1,i-l]$ \u8be2\u95ee\uff0c\u53ef\u4ee5\u5efa\u7acb\u4e00\u4e2a\u53d8\u91cf $tmp$\uff0c\u5728\u8fd9\u4e00\u8f6e\u7684\u8f6c\u79fb\u5145\u5f53\u7740\u4e0a\u4e00\u8f6e\u7684\u7b54\u6848\uff0c\u7136\u540e\u5f80\u53f3\u627e\uff0c\u76f4\u5230\u6ee1\u8db3\u8981\u6c42\uff0c\u5c31\u8f6c\u79fb\u3002\n\n\u6700\u540e\u5f53\u8f6c\u79fb\u4e0d\u5230 $n$ \u65f6\uff0c\u5c31\u4ee3\u8868\u4e0d\u5b58\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u533a\u95f4\uff0c\u8f93\u51fa $-1$\u3002\n\n\u6ce8\u610f\u6709\u4e00\u4e2a\u6bd4\u8f83\u5c0f\u7684\u7ec6\u8282\uff0c\u5c31\u662f $dp$ \u6570\u7ec4\u6700\u597d\u5168\u90e8\u521d\u59cb\u5316\u4e3a $\\infty$\uff0c\u8fd9\u6837\u6709\u52a9\u4e8e\u8f6c\u79fb\u548c\u7279\u5224\u65e0\u89e3\u3002",
        "postTime": 1612105077,
        "uid": 114914,
        "name": "\u4e00\u53ea\u4e66\u866b\u4ed4",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF487B \u3010Strip\u3011"
    },
    {
        "content": "## Solution\n\n\u6ca1\u60f3\u5230\u8fd9\u9053\u9898\u5c31\u4e2a RMQ + \u7b80\u5355 dp\u3002\u4ece\u5c0f\u5230\u5927\u904d\u5386 $l$ \u5230 $n$\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u786e\u5b9a\u7684\u533a\u95f4\u53f3\u7aef\u70b9 $i$\uff0c\u8bb0 $f_i$ \u8868\u793a $[1,i]$ \u4e2d\u6700\u5c11\u80fd\u5206\u6210\u51e0\u6bb5\u3002\u90a3\u4e48\u663e\u7136\uff0c$f_i = \\min(f_j|j\\in[1,i - l + 1]) + 1$\u3002\u5f53\u7136\uff0c\u524d\u63d0\u662f $f_j$ \u53ef\u88ab\u5206\u4e3a\u82e5\u5e72\u6bb5\u3002\n\n\u4e0b\u9762\u5148\u8d34\u4e0a\u4ee3\u7801\uff0c\u540e\u9762\u4f1a\u8be6\u8bb2\u4f18\u5316\u53ca\u5176\u539f\u56e0\u3002\n   \n   \uff08\u770b\u89c1\u524d\u9762\u51e0\u7bc7\u9898\u89e3\u90fd\u6ca1\u6709\u63d0\u5230\u8fd9\u4e2a\u4f18\u5316\u7684\u5177\u4f53\u539f\u56e0\u3002\uff09\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define rep(i, a, b) for(register int i = a; i <= b; ++i)\n#define per(i, a, b) for(register int i = a; i >= b; --i)\ntypedef long long ll ;\nconst int inf = 2147483647;\ninline int rd(){\n    int x = 1, s = 0; char ch = getchar();\n    while(ch < '0' or ch > '9'){if(ch == '-') x = -1; ch = getchar();}\n    while(ch >= '0' and ch <= '9') s = s * 10 + ch - '0', ch = getchar();\n    return x * s;\n}\ninline void wr(int x){\n    if(x < 0) putchar('-'), x *= -1;\n    if(x > 9) wr(x / 10);\n    putchar(x % 10 + '0');\n}\nconst int maxn = 1e5 + 5;\n//----------------------------------//\nint n, l, s;\nint mn[maxn][30], mx[maxn][30], rec;\nint lg[maxn], f[maxn];\n\ninline void pre(){\n\tfor(int i = 1; (1 << i) <= n; ++i)\n\t\tfor(int j = 1; j + (1 << i) - 1 <= n; ++j)\n\t\t\tmn[j][i] = min(mn[j][i - 1], mn[j + (1 << (i - 1))][i - 1]),\n\t\t\tmx[j][i] = max(mx[j][i - 1], mx[j + (1 << (i - 1))][i - 1]);\n}\n\ninline int chck(int L, int R){\n\tint k = 0;\n\twhile((1 << (k + 1)) <= R - L + 1) k += 1;\n\tint mi = min(mn[L][k], mn[R - (1 << k) + 1][k]);\n\tint ma = max(mx[L][k], mx[R - (1 << k) + 1][k]);\n\treturn ma - mi;\n}\n\t\nint main(){\n\tn = rd(), s = rd(), l = rd();\n\trep(i, 1, n) f[i] = inf, mx[i][0] = mn[i][0] = rd();\n\tpre();\n\trep(i, l, n){\n\t\twhile(i - rec + 1 > l and ((f[rec] == inf) or (chck(rec + 1, i) > s)))\n\t\t\trec += 1;\n\t\tif(i - rec + 1 > l) f[i] = min(f[i], f[rec] + 1);\n\t}\n\tif(f[n] != inf) wr(f[n]);\n\telse wr(-1);\n}\n```\n\n    \n   \n   \u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u53ef\u4ee5\u770b\u5230\u5177\u4f53\u5b9e\u73b0\u3002\u8fd9\u91cc\u6709\u4e2a\u4f18\u5316\uff1a\u4e3a\u4ec0\u4e48\u6bcf\u6b21\u679a\u4e3e\u5230\u4e00\u4e2a\u65b0\u7684\u53f3\u7aef\u70b9\uff0c\u4e0d\u9700\u8981\u4ece\u5934\u518d\u9009\u4e00\u6b21 $f$ \u503c\u6700\u5c0f\u7684\u5de6\u7aef\u70b9 $j$ \u5462\uff1f\u8fd9\u65f6\u5019\u8981\u6ce8\u610f\u5230\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u6027\u8d28\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4 $[p,q]$\uff0c\u82e5\u5c06 $q+1$ \u8fd9\u4e2a\u8282\u70b9\u4e5f\u52a0\u8fdb\u6765\uff0c\u5b83\u8981\u4e48\u5bf9\u8fd9\u4e2a\u533a\u95f4\u7684\u6781\u5dee\u6ca1\u6709\u5f71\u54cd\uff0c\u8981\u4e48\u53ea\u4f1a\u5c06\u8fd9\u4e2a\u6781\u5dee\u53d8\u5f97\u66f4\u5927\u3002\u6240\u4ee5\uff0c\u82e5\u662f\u4e00\u4e2a\u5de6\u7aef\u70b9 $j$\uff0c\u6ee1\u8db3\u533a\u95f4 $[j,i-1]$ \u7684\u6781\u5dee\u5927\u4e8e $s$\uff0c\u90a3\u4e48\u533a\u95f4 $[j,i]$ \u7684\u6781\u5dee\u4e5f\u5fc5\u5b9a\u5927\u4e8e $s$\uff08\u5176\u4ed6\u60c5\u51b5\u540c\u7406\uff09\u3002\u540c\u65f6\uff0c\u5de6\u7aef\u70b9 $j$ \u8d8a\u5f80\u53f3\uff0c$f_j$ \u53ea\u4f1a\u4e0d\u53d8\u6216\u66f4\u5927\u3002\n    \n   \u7efc\u4e0a\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7ee7\u7eed\u4e0a\u4e00\u4e2a\u679a\u4e3e\u7684 $i$ \u7684\u5de6\u7aef\u70b9\u7684\u4f4d\u7f6e\u5f80\u540e\u679a\u4e3e\u65b0\u7684\u5de6\u7aef\u70b9\uff0c\u5e76\u4e14\u53d6\u6700\u5de6\u8fb9\u7684\u5408\u6cd5\u5de6\u7aef\u70b9\u5373\u53ef\u3002\n\n------------\n\u611f\u8c22\u9605\u8bfb\u3002\n\n\u8f9b\u82e6\u7ba1\u7406\u5458\u5ba1\u6838\uff0c\u5982\u6709\u95ee\u9898\u70e6\u8bf7\u6307\u51fa\u3002",
        "postTime": 1656914363,
        "uid": 469672,
        "name": "\u4f0d\u53c1\u58f9",
        "ccfLevel": 7,
        "title": "\u3010CF487B\u3011Strip \u9898\u89e3"
    },
    {
        "content": "\u989d\uff0c\u4e3a\u5565\u6ca1\u6709\u7ebf\u6bb5\u6811\u4f18\u5316 dp \u7684\u9898\u89e3\u554a\u2026\u2026 \u8fd9\u9898\u6211\u7684\u7b2c\u4e00\u53cd\u5e94\u5c31\u662f\u7ebf\u6bb5\u6811\u4f18\u5316  dp\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u63a8\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u3002\u8bbe $f_i$ \u8868\u793a\u524d $i$ \u4e2a\u6570\u81f3\u5c11\u5206\u6210\u51e0\u6bb5\uff1a\n\n$f_i=\\operatorname{min} \\{ f_j\\}+1 \\ \\ \\ (j\\le i-l)$ \n\n\u6ce8\u610f\uff1a\u5176\u4e2d\u533a\u95f4 $[j+1,i]$ \u9700\u8981\u6ee1\u8db3\u6781\u5dee $\\le s$\u3002\n\n\u5bb9\u6613\u77e5\u9053\u6ee1\u8db3\u6761\u4ef6\u7684 $j$ \u662f\u8fde\u7eed\u7684\u4e00\u6bb5\uff0c\u56e0\u4e3a $j$ \u4e0d\u65ad\u5411\u5de6\u79fb\u52a8\uff0c\u6781\u5dee\u53ea\u4f1a\u53d8\u5927\u6216\u4e0d\u53d8\u3002\u6211\u4eec\u53ef\u4ee5\u7528 ST \u8868\u6c42\u533a\u95f4 RMQ\uff0c\u7136\u540e\u4e8c\u5206 $j$ \u7684\u6700\u5c0f\u503c\u3002\u81f3\u4e8e $f_j$ \u7684\u6c42 $\\operatorname{min}$\uff0c\u663e\u7136\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5566\u3002\n\n\u867d\u8bf4\u7ebf\u6bb5\u6811 + ST \u8868\u7801\u91cf\u6709\u4ebf\u70b9\u5927\uff0c\u53ef\u662f\u601d\u8def\u8fd8\u662f\u6bd4\u8f83\u597d\u60f3\u7684\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define Maxn 400010\n#define int long long\nint n,s,l,a[Maxn];\nint f[25][Maxn],g[25][Maxn],p;\nint ls[Maxn],rs[Maxn],val[Maxn],dp[Maxn];\ninline int maxx(int a,int b){return a>b?a:b;}\ninline int minn(int a,int b){return a<b?a:b;}\ninline void startRMQ(){\n\tfor(int i=1;i<=n;i++) f[0][i]=g[0][i]=a[i];\n\tp=log2(n);\n\tfor(int i=1;i<=p;i++)\n\t\tfor(int j=1;j<=(n-(1<<i)+1);j++)\n\t\t\tf[i][j]=maxx(f[i-1][j],f[i-1][j+(1<<(i-1))]);\n\tfor(int i=1;i<=p;i++)\n\t\tfor(int j=1;j<=(n-(1<<i)+1);j++)\n\t\t\tg[i][j]=minn(g[i-1][j],g[i-1][j+(1<<(i-1))]);\n}// ST \u8868\u7684\u9884\u5904\u7406\ninline int RMQmax(int x,int y){\n\tint p2=log2(y-x+1);\n\treturn maxx(f[p2][x],f[p2][y-(1<<p2)+1]);\n}\ninline int RMQmin(int x,int y){\n\tint p2=log2(y-x+1);\n\treturn minn(g[p2][x],g[p2][y-(1<<p2)+1]);\n}// \u67e5\u8be2\ninline void pushup(int pos){\n\tval[pos]=minn(val[pos<<1],val[pos<<1|1]);\n}\ninline void build(int l,int r,int pos){\n\tls[pos]=l,rs[pos]=r;\n\tif(l==r){\n\t\tval[pos]=dp[l];\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tif(l<=mid) build(l,mid,pos<<1);\n\tif(mid<r)  build(mid+1,r,pos<<1|1);\n\tpushup(pos);\n}\ninline void Update(int l,int num,int pos){\n\tif(ls[pos]==rs[pos]){\n\t\tval[pos]=num;\n\t\treturn;\n\t}\n\tint mid=ls[pos]+rs[pos]>>1;\n\tif(l<=mid) Update(l,num,pos<<1);\n\telse Update(l,num,pos<<1|1);\n\tpushup(pos); \n}\ninline int Query(int l,int r,int pos){\n\tif(l<=ls[pos] && rs[pos]<=r) return val[pos];\n\tint mid=ls[pos]+rs[pos]>>1,ans=9e18;\n\tif(l<=mid) ans=Query(l,r,pos<<1);\n\tif(mid<r)  ans=minn(ans,Query(l,r,pos<<1|1));\n\treturn ans;\n} // \u4ee5\u4e0a\u7ebf\u6bb5\u6811\u677f\u5b50\uff08\nsigned main(){\n\tcin>>n>>s>>l;\n\tfor(int i=1;i<=n;i++) cin>>a[i];\n\tmemset(dp,127,sizeof dp); dp[0]=0; // \u521d\u59cb\u5316\n\tstartRMQ(); build(0,n,1); // \u5efa\u6811\u8981\u5e26\u4e0a 0 \u6c42\u503c\u7684\u65f6\u5019\u9700\u8981\u7528\u5230\uff0c\u81ea\u884c\u7406\u89e3\n\tfor(int i=l;i<=n;i++){\n\t\tint lft=1,rht=i,ans=-1;\n\t\twhile(lft<=rht){\n\t\t\tint mid=lft+rht>>1;\n\t\t\tif(RMQmax(mid,i)-RMQmin(mid,i)<=s){\n\t\t\t\tans=mid;\n\t\t\t\trht=mid-1;\n\t\t\t}else lft=mid+1;\n\t\t} // \u4e8c\u5206\u51fa\u5de6\u7aef\u70b9\n\t\tif(ans==-1 || ans>(i-l+1)) continue; // \u6ca1\u6709\u53ef\u4ee5\u8f6c\u79fb\u7684\n\t\tdp[i]=Query(ans-1,i-l,1)+1; // \u8ba1\u7b97\n\t\tUpdate(i,dp[i],1); // \u4fee\u6539\n\t//\tcout<<ans<<\" \"<<i<<\" \"<<dp[i]<<endl;\n\t}\n\tif(dp[n]>1e7) cout<<(-1)<<endl;\n\telse cout<<dp[n]<<endl;\n\treturn 0;\n}\n\n```",
        "postTime": 1630067178,
        "uid": 334727,
        "name": "BreakPlus",
        "ccfLevel": 0,
        "title": "Solution CF487B"
    },
    {
        "content": "\u611f\u89c9\u7b2c\u4e00\u7bc7\u9898\u89e3\u8bb2\u7684\u4e0d\u592a\u8be6\u7ec6\uff0c\u800c\u4e14\u6211\u7684\u5355\u8c03\u961f\u5217\u505a\u6cd5\u66f4\u52a0\u7b80\u5355\uff0c\u6240\u4ee5\u4e5f\u5199\u4e86\u4e00\u4e2a\u9898\u89e3\u3002\n\n\u663e\u7136\uff0c\u672c\u9898\u662f DP \u9898\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u8bbe\u7f6e\u72b6\u6001\u548c\u8f6c\u79fb\u65b9\u7a0b\u3002\n\n\u8bbe $f_i$ \u4e3a $[1,i]$ \u6700\u5c11\u5206\u5f97\u7684\u6bb5\u6570\uff0c\u90a3\u4e48\u663e\u7136 $f_0 = 0$\u3002\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a\n\n$$\nf_i = \\min\\limits_{j=1}^{i-l+1}f_j+1 \\ (\\max\\limits_{k=j+1}^ia_i-\\min\\limits_{k=j+1}^ia_i \\leq s)\n$$\n\n\u5982\u679c\u5c31\u8fd9\u6837DP\u7684\u8bdd\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\mathcal{O}(n^3)$ \u7684\uff0c\u65e0\u6cd5\u901a\u8fc7\u6b64\u9898\u3002\u56e0\u6b64\u6211\u4eec\u9700\u8981\u8003\u8651\u4f18\u5316\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u6211\u4eec\u5176\u5b9e\u53ef\u4ee5\u4e0d\u7528\u6bcf\u6b21\u90fd\u679a\u4e3e $j$\u3002\u56e0\u4e3a\u5982\u679c $[j,i]$ \u7684\u6781\u5dee\u5df2\u7ecf\u8d85\u8fc7\u4e86 $s$\uff0c\u90a3\u4e48 $[j-1,i]$ \u7684\u6781\u5dee\u80af\u5b9a\u4e5f\u8d85\u8fc7\u4e86 $s$\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u8003\u8651\u524d\u9762\u7684 $j$\uff0c\u53ea\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u51b3\u7b56\u70b9 $c$ \u5373\u53ef\u3002\u540c\u65f6\uff0c\u5982\u679c $c$ \u8d8a\u5927\uff0c$f_c$ \u4e5f\u4f1a\u66f4\u5927\u6216\u4e0d\u53d8\uff08\u56e0\u4e3a\u5206\u5f97\u7684\u6bb5\u6570\u4f1a\u66f4\u591a\uff09\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u627e\u6700\u5c0f\u7684\u5408\u6cd5\u7684 $c$ \u5373\u53ef\u3002\n\n\u8fd9\u6837\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u964d\u5230\u4e86 $\\mathcal{O}(n^2)$\u3002\u8fd8\u9700\u8981\u7ee7\u7eed\u4f18\u5316\u3002\n\n\u8003\u8651\u4f18\u5316\u6781\u5dee\u7684\u8ba1\u7b97\u3002\u65e2\u7136 $c$ \u548c $i$ \u90fd\u9012\u589e\uff0c\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u8003\u8651\u7528\u5355\u8c03\u961f\u5217\u6765\u4f18\u5316\u6781\u5dee\u7684\u8ba1\u7b97\u3002\u6211\u4eec\u53ea\u9700\u8981\u5728\u6bcf\u6b21\u904d\u5386 $i$ \u7684\u65f6\u5019\u7ef4\u62a4\u4e00\u4e0b\u5355\u8c03\u6027\uff0c\u7136\u540e\u5728\u67e5\u8be2\u7684\u65f6\u5019\u7ef4\u62a4\u4e00\u4e0b\u533a\u95f4\u8303\u56f4\u5373\u53ef\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u53ef\u4ee5\u964d\u5230 $\\Theta(n)$ \u4e86\u3002\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define MAXN 100005\n#define INF 0x3f3f3f3f\n\nint n, k, s, c;\nint dp[MAXN], b[MAXN];\ndeque<int> minn, maxn;\n\ninline int query(){  // \u67e5\u8be2\u6781\u5dee\n\twhile (!minn.empty() && minn.front() < c+1) minn.pop_front();\n\twhile (!maxn.empty() && maxn.front() < c+1) maxn.pop_front();\n\treturn b[maxn.front()] - b[minn.front()];\n}\n\nint main(){\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\tcout.tie(0);\n\t\n\tmemset(dp, 0x3f, sizeof(dp));\n\tcin >> n >> s >> k;\n\tfor (int i=1; i<=n; i++) cin >> b[i];\n\tdp[0] = 0;  // \u8fb9\u754c\u6761\u4ef6\n\t\n\tfor (int i=1; i<=n; i++){\n\t\twhile (!minn.empty() && b[minn.back()] >= b[i]) minn.pop_back();  // \u7ef4\u62a4\u5355\u8c03\u6027\n\t\tminn.push_back(i);\n\t\twhile (!maxn.empty() && b[maxn.back()] <= b[i]) maxn.pop_back();\n\t\tmaxn.push_back(i);\n\t\tif (i >= k){\n\t\t\twhile ((i-c >= k) && (query() > s || dp[c] == INF)) c++;  // \u7ef4\u62a4\u51b3\u7b56\u70b9\n\t\t\tif (i-c >= k) dp[i] = dp[c]+1;  // \u8f6c\u79fb\n\t\t}\n\t}\n\t\n\tcout << (dp[n] == INF ? -1 : dp[n]);  // \u6ce8\u610f\u8f6c\u79fb\u4e0d\u5230\u7684\u95ee\u9898\n\t\n\treturn 0;\n}\n```\n\n\u5176\u5b83\u7684\u9898\u89e3\u4e5f\u8bb2\u5f97\u5f88\u8be6\u7ec6\uff0c\u53ef\u4ee5\u770b\u4e00\u4e0b\u3002\n\n~~\u7b2c\u4e00\u6b21\u5199\u7d2b\u9898\u9898\u89e3\uff0c\u7ba1\u7406\u5458\u6c42\u8fc7\u3002~~",
        "postTime": 1678549849,
        "uid": 804607,
        "name": "rainygame",
        "ccfLevel": 4,
        "title": "CF487B\u9898\u89e3"
    },
    {
        "content": "# \u9898\u89e3\n\n- $s,l$ \u5982\u9898\uff0c\u8bbe$\\{a_i\\}$ \u4e3a\u539f\u6570\u7ec4\uff0c$dp_i$ \u4e3a\u7b2c $i$ \u4f4d\u65f6\u6700\u5c11\u7684\u5206\u6bb5\u6570\uff0c\u5219 $dp$ \u65b9\u7a0b\u4e3a\uff1a\n\n$$dp_i=\\min\\{dp_j+1\\}(j\\in[1,i-l],\\max\\{a_k(k\\in[j,i])\\}-\\min\\{a_k(k\\in[j,i]\\}\\le s)$$\n\n- \u663e\u7136\u53ef\u4ee5\u53d1\u73b0\uff0c\u540e\u9762\u7684 $\\max\\{a_k(k\\in[j,i])\\}-\\min\\{a_k(k\\in[j,i]\\}$ \u53ef\u4ee5\u7528 $ST$ \u8868\u6765\u7ef4\u62a4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\uff0c\u5341\u5206\u7b80\u5355\u5c31\u4e0d\u8be6\u8bb2\u3002\n\n- \u4f46\u662f\u5373\u4f7f\u7528\u4e86 $ST$ \u8868\uff0c$dp$ \u72b6\u6001\u8f6c\u79fb\u65f6\u95f4\u590d\u6742\u5ea6\u4ecd\u4e3a $O(n^2)$\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u53d8\u91cf\uff0c\u8bb0\u5f55\u4e0b\u6700\u53f3\u4fa7\u7684\u5206\u5272\u70b9\uff0c\u6bcf\u6b21\u4ece\u8fd9\u4e2a\u5206\u5272\u70b9\u7684\u7b54\u6848\u5f80\u53f3\u627e\uff0c\u7531\u4e8e\u8fd9\u4e2a\u5206\u5272\u70b9\u4f1a\u4e0d\u65ad\u5f80\u53f3\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u5f88\u4f4e\uff0c\u63a5\u8fd1 $O(n)$\u3002\n\n- \u6700\u540e\u5f53\u8f6c\u79fb\u4e0d\u5230 $n$ \u65f6\uff0c\u8f93\u51fa $-1$ \u5373\u53ef\u3002\n\n- \u6700\u7ec8\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log n+n)$\u3002",
        "postTime": 1652940556,
        "uid": 342868,
        "name": "Ted_hjl",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF487B\u3010Strip\u3011"
    },
    {
        "content": "\u7ed3\u5408\u6570\u636e\u8303\u56f4\uff0c\u8fd9\u9898\u7684\u601d\u8def\u8f83\u4e3a\u660e\u663e\uff1adp\uff08\u603b\u4e0d\u80fd\u8d2a\u5fc3\u5427\uff09\u3002\n\n\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a $dp$ \u6570\u7ec4\uff0c\u5176\u4e2d $dp_i$ \u8868\u793a\u524d $i$ \u4e2a\u6570\u6700\u5c11\u80fd\u5206\u6210\u7684\u6bb5\u6570\u3002\n\n**\u521d\u503c**\uff1a\u5f88\u663e\u7136\uff0c$dp_0 = 0$\u3002\n\n**\u9012\u63a8**\uff1a\u5982\u4f55\u5f97\u5230 $dp_i$\uff1f\u6211\u4eec\u4ee5\u6700\u540e\u4e00\u6bb5\u7684\u957f\u5ea6\u5206\u7c7b\uff0c\u5faa\u73af\u6bcf\u4e00\u79cd\u957f\u5ea6\uff0c\u5c06\u6240\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u540e\u4e00\u6bb5\uff08\u957f\u5ea6\u4e0d\u5c0f\u4e8e $l$\uff0c\u6781\u5dee\u4e0d\u8d85\u8fc7 $s$\uff09 \u524d\u9762\u4e00\u4e2a\u4f4d\u7f6e\u7684 $dp$ \u503c\u53d6\u6700\u5c0f\u503c\u52a0 $1$\uff0c\u5c31\u662f $dp_i$\u3002\u5373\uff1a\n$$dp_i = \\min dp_j + 1 (i - j \\geq l, \\max_{k=j+1}^ia_i - \\min_{k=j+1}^ia_i \\leq s)$$\n\n\u6bcf\u6b21\u68c0\u67e5\u6781\u5dee\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 ST \u8868 $O(1)$ \u67e5\u8be2\u6781\u5dee\u3002\n\n\u4f46\u662f\u8fd9\u6837\u6574\u4e2a dp \u662f $O(n^2)$ \u7684\uff01\u8fd8\u8981\u600e\u4e48\u4f18\u5316\u5462\uff1f\n\n\u9996\u5148\uff0c\u6211\u4eec\u8981\u77e5\u9053\uff0c\u5728\u4e00\u4e2a\u56fa\u5b9a\u7684\u6570\u5217\u5f53\u4e2d\uff0c\u5047\u5982\u589e\u52a0\u4e00\u4e9b\u6570\uff0c\u6781\u5dee\u53ea\u53ef\u80fd\u4e0d\u53d8\u6216\u589e\u5927\uff0c\u4e00\u5b9a\u4e0d\u53ef\u80fd\u51cf\u5c0f\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\u8fd9\u662f\u56e0\u4e3a\uff0c\u6bcf\u5f53\u52a0\u5165\u4e00\u4e2a\u6570\u65f6\uff0c\u6574\u4e2a\u6570\u5217\u7684\u6700\u5927\u503c\u4e0d\u53ef\u80fd\u53d8\u5c0f\uff0c\u6700\u5c0f\u503c\u4e5f\u4e0d\u4f1a\u53d8\u5927\uff0c\u56e0\u6b64\u6781\u5dee\u4e5f\u4e0d\u4f1a\u53d8\u5c0f\u3002\n\n\u65e2\u7136\u5982\u6b64\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u6307\u9488 $cur$\uff0c\u8868\u793a dp \u4e2d\u6700\u540e\u4e00\u6bb5\u524d\u4e00\u4e2a\u4f4d\u7f6e\u6700\u53f3\u7684\u53ef\u80fd\u503c\u3002\u5728\u5f53\u524d\u67e5\u8be2\u7684\u6700\u540e\u4e00\u6bb5\u6781\u5dee\u8d85\u8fc7 $s$ \u65f6\uff0c$cur$ \u53f3\u79fb\uff08\u56e0\u4e3a\u5728\u540e\u9762\u7684 dp \u8fc7\u7a0b\u4e2d\uff0c\u53ea\u4f1a\u589e\u52a0\u6570\uff0c\u800c $cur$ \u5de6\u79fb\u4e5f\u662f\u589e\u52a0\u6570\u7684\u64cd\u4f5c\uff0c\u8fd9\u6837\u4f1a\u4f7f\u5f97\u6781\u5dee\u66f4\u5927\uff09\u3002\n\n\u8fd8\u6709\u4e00\u70b9\uff1a\u65e2\u7136\u6211\u4eec\u60f3\u8981 $dp$ \u503c\u4e2d\u7684\u6700\u5c0f\u503c\uff0c\u4f55\u4e0d\u7528\u53e6\u4e00\u4e2a ST \u8868\u7ef4\u62a4\u5462\uff1f\u867d\u7136\u8bf4 ST \u8868\u4e0d\u652f\u6301\u63d2\u5165\u64cd\u4f5c\uff0c\u4f46\u662f\u6307\u5411\u672b\u5c3e\u63d2\u5165\u5143\u7d20\u662f\u53ef\u4ee5 $O(\\log n)$ \u89e3\u51b3\u7684\u3002\n\n\u7ecf\u8fc7\u8fd9\u6837\u7684\u4f18\u5316\uff0c\u6574\u4f53\u590d\u6742\u5ea6\u53d8\u4e3a $O(n \\log n)$\u3002\n\n**\u4ee3\u7801**\n```cpp\n#include <cstdio>\nnamespace LJQ {\n\tconst int INF = 0x7fffffff, mINF = 0x3f3f3f3f;\n\tconst long long INFll = 0x7fffffffffffffff, mINFll = 0x3f3f3f3f3f3f3f3f;\n\ttemplate <typename T>\n\tT& read(T& s) {\n\t\ts = 0;\n\t\tT f = 1;\n\t\tchar ch = getchar();\n\t\twhile (ch < '0' || ch > '9') {\n\t\t\tif (ch == '-')\n\t\t\t\tf = -1;\n\t\t\tch = getchar();\n\t\t}\n\t\twhile ('0' <= ch && ch <= '9')\n\t\t\ts = s * 10 + ch - '0', ch = getchar();\n\t\treturn s *= f;\n\t}\n\ttemplate <typename T>\n\tinline T max(T x, T y) {\n\t\treturn x > y ? x : y;\n\t}\n\ttemplate <typename T>\n\tinline T min(T x, T y) {\n\t\treturn x < y ? x : y;\n\t}\n   \ttemplate <typename T>\n\tinline void swap(T& x, T& y) {\n\t\tT tmp = x;\n\t\tx = y;\n\t\ty = tmp;\n\t}\n}\nusing namespace LJQ;\n\nconst int N = 100005;\nint n, s, l, a[N];\nint pw[25], log2[N];\nint st1[N][25], st2[N][25];\nint dp[N], st_dp[N][25], cnt = 0;\n\nvoid initST() {\n\tfor (int i = 1; i <= n; i++)\n\t\tst1[i][0] = st2[i][0] = a[i];\n\tfor (int j = 1; pw[j] <= n; j++)\n\t\tfor (int i = 1; i + pw[j] - 1 <= n; i++) {\n\t\t\tst1[i][j] = max(st1[i][j - 1], st1[i + pw[j - 1]][j - 1]);\n\t\t\tst2[i][j] = min(st2[i][j - 1], st2[i + pw[j - 1]][j - 1]);\n\t\t}\n}\n\nvoid init() {\n\tpw[0] = 1;\n\tfor (int i = 1; i <= 20; i++)\n\t\tpw[i] = pw[i - 1] << 1;\n\tlog2[1] = 0;\n\tfor (int i = 2; i <= n; i++)\n\t\tlog2[i] = log2[i >> 1] + 1;\n\tinitST();\n}\n\nint qry(int a, int b) {\n\tint j = log2[b - a + 1];\n\treturn max(st1[a][j], st1[b - pw[j] + 1][j])\n\t\t - min(st2[a][j], st2[b - pw[j] + 1][j]);\n}\n\n// \u63d2\u5165\u64cd\u4f5c\uff0c\u628a ST \u8868\u6bcf\u4e00\u5c42\u7684\u6700\u540e\u4e00\u6bb5\u66f4\u65b0\u5c31\u597d\u4e86\nvoid ins(int x) {\n\tst_dp[++cnt][0] = x;\n\tfor (int j = 1; pw[j] <= cnt; j++) {\n\t\tint i = cnt - pw[j] + 1;\n\t\tst_dp[i][j] = min(st_dp[i][j - 1], st_dp[i + pw[j - 1]][j - 1]);\n\t}\n}\n\nint qry_dp(int x, int y) {\n\tint j = log2[y - x + 1];\n\treturn min(st_dp[x][j], st_dp[y - pw[j] + 1][j]);\n}\n\nint main()\n{\n\tread(n), read(s), read(l);\n\tfor (int i = 1; i <= n; i++)\n\t\tread(a[i]);\n\tinit();\n\tint cur = 0;\n\tdp[0] = 0; // \u521d\u503c\n\tfor (int i = 1; i <= n; i++) {\n\t\t// \u5f53\u6700\u540e\u4e00\u6bb5\u7684\u957f\u5ea6\u5373\u5c06\u8d85\u8fc7 l \u65f6\uff0c\u5c31\u4e0d\u8981\u518d\u79fb\u52a8 cur \u4e86\n\t\t// \u5426\u5219\uff0c\u5f53\u6700\u540e\u4e00\u6bb5\u6781\u5dee\u8d85\u8fc7 s\uff0c\u6216\u524d\u4e00\u4f4d dp \u503c\u4e3a\u4e0d\u53ef\u80fd\uff0ccur \u53f3\u79fb \n\t\twhile (i - cur >= l && (qry(cur + 1, i) > s || dp[cur] == INF))\n\t\t\tcur++;\n\t\t// \u5982\u679c\u524d i \u4e2a\u6570\u65e0\u6cd5\u5206\u6bb5\uff0c\u5219 dp \u503c\u4e3a\u6b63\u65e0\u7a77\n\t\t// \u8fd9\u6837\u63d2\u5165 ST \u8868\u65f6\u5c31\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u6709\u6548 dp \u503c\u7684\u6700\u5c0f\u503c \n\t\tif (i - cur < l)\n\t\t\tdp[i] = INF;\n\t\telse {\n\t\t\tint res = qry_dp(cur, i - l);\n\t\t\t// \u5f53\u524d\u9762\u7684 dp \u503c\u90fd\u4e3a\u4e0d\u53ef\u80fd\u65f6\uff0c\u8bf4\u660e dp[i] \u4e5f\u65e0\u6548 \n\t\t\tif (res == INF)\n\t\t\t\tdp[i] = INF;\n\t\t\telse \n\t\t\t\tdp[i] = res + 1;\n\t\t}\n\t\tins(dp[i]);\n\t}\n\tif (dp[n] == INF)\n\t\tprintf(\"-1\\n\");\n\telse\n\t\tprintf(\"%d\\n\", dp[n]);\n\treturn 0;\n}\n```",
        "postTime": 1643556723,
        "uid": 267481,
        "name": "\u5218\u5609\u7426",
        "ccfLevel": 7,
        "title": "CF487B Strip"
    },
    {
        "content": "\n\u4e00\u9053\u5e76\u4e0d\u96be\u7684 $dp$ \u9898\u3002\u8f6c\u79fb\u5f0f\u5f88\u597d\u5217\uff1a\n\n$$\ndp[i]=min\\{ dp[j]+1 \\} ~~~~ (0 \\le j \\le i - l~\\&\\&max(j+1,i)-min(j+1,i)<=s)\n$$\n\n\u770b\u5230\u533a\u95f4\u7684\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u4e4b\u5dee\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u7528 $st$ \u8868\u7ef4\u62a4\u3002\u8fd9\u6837\u53ef\u4ee5$\\Theta(n^2)$\u89e3\u51b3\u3002\n\n\u5f88\u663e\u7136\u7684\u4e00\u4e2a\u7ed3\u8bba\u662f\uff0c\u51b3\u7b56\u70b9\u662f\u5355\u8c03\u9012\u589e\u7684\u3002\u56e0\u4e3a $i$ \u4e0d\u65ad\u5411\u53f3\uff0c\u533a\u95f4\u7684\u6700\u503c\u9012\u589e\uff0c\u51b3\u7b56\u70b9\u4e5f\u5fc5\u987b\u5411\u53f3\u8c03\u6574\u3002\n\n\u5e76\u4e14\uff0c\u4e3a\u4e86\u4f7f\u7b54\u6848\u66f4\u4f18\uff0c\u6211\u4eec\u6bcf\u6b21\u4e00\u5b9a\u4f1a\u9009\u62e9\u6700\u9760\u5de6\u7684\u90a3\u4e2a\u51b3\u7b56\u70b9\u3002\n\n\u6240\u4ee5\uff0c\u53ea\u9700\u8981\u7ef4\u62a4\u6700\u5de6\u8fb9\u7684\u51b3\u7b56\u70b9\u5373\u53ef\uff0c\u8f6c\u79fb\u590d\u6742\u5ea6$\\Theta(n)$\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6$\\Theta(nlogn+n)$\n\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\nusing namespace std;\n#define INF 0x3f3f3f3f\n\nconst int MAXN = 100000 , MAXK = 20;\nint n , l , s , a[ MAXN + 5 ] , f[ 2 ][ MAXN + 5 ][ MAXK + 5 ]; //0->max 1->min\nint dp[ MAXN + 5 ];\n\nvoid Init( ) {\n    memset( f[ 1 ] , 0x3f , sizeof( f[ 1 ] ) );\n    \n    for( int i = 1 ; i <= n ; i ++ )\n        f[ 0 ][ i ][ 0 ] = f[ 1 ][ i ][ 0 ] = a[ i ];\n    for( int j = 1 ; ( 1 << j ) <= n ; j ++ )\n        for( int i = 1 ; i + ( 1 << j ) - 1 <= n ; i ++ ) {\n            f[ 0 ][ i ][ j ] = max( f[ 0 ][ i ][ j - 1 ] , f[ 0 ][ i + ( 1 << j - 1 ) ][ j - 1 ] );\n            f[ 1 ][ i ][ j ] = min( f[ 1 ][ i ][ j - 1 ] , f[ 1 ][ i + ( 1 << j - 1 ) ][ j - 1 ] );\n        }\n}\nint Query( int l , int r ) {\n    int k = log2( r - l + 1 );\n    return max( f[ 0 ][ l ][ k ] , f[ 0 ][ r - ( 1 << k ) + 1 ][ k ] ) - min( f[ 1 ][ l ][ k ] , f[ 1 ][ r - ( 1 << k ) + 1 ][ k ] );\n}\n\nint main( ) {\n    scanf(\"%d %d %d\",&n,&s,&l);\n    for( int i = 1 ; i <= n ; i ++ ) \n        scanf(\"%d\",&a[ i ]);\n    Init( );\n\n    memset( dp , 0x3f , sizeof( dp ) ); dp[ 0 ] = 0;\n    int chk = 0;\n    for( int i = l ; i <= n ; i ++ ) {\n        while( ( i - chk >= l && ( Query( chk + 1 , i ) > s ) || dp[ chk ] == INF ) ) chk ++;\n        if( i - chk >= l ) dp[ i ] = dp[ chk ] + 1;\n    }\n    printf(\"%d\", dp[ n ] == INF ? -1 : dp[ n ] );\n    return 0;\n}\n```\n",
        "postTime": 1575083677,
        "uid": 123802,
        "name": "chihik",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF487B \u3010Strip\u3011"
    },
    {
        "content": "# \u9898\u76ee\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[\u70b9\u8fd9\u91cc](https://www.luogu.com.cn/problem/CF487B)\u770b\u9898\u76ee\u3002  \n# \u5206\u6790\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4e0d\u96be\u770b\u51fa\u8fd9\u662f\u4e00\u4e2a$dp$:  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$f(i)$\uff1a\u524d$i$\u4e2a\u6570\u5206\u7ec4\u7684\u6700\u5c11\u6570\u91cf\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8bbe$\\displaystyle mx(i,j)=\\max_{i\\le k\\le j}a_k,mn(i,j)=\\min_{i\\le k\\le j}a_k$\u7136\u540e\u53ef\u4ee5\u770b\u51fa\u8f6c\u79fb\uff1a  \n$$f(i)=\\min_{0<j\\le i,mx(j,i)-mn(j,i)\\le S}\\{f(j)+1\\}$$  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u65f6\u95f4$O(n^2)$\u3002\u8003\u8651\u4f18\u5316\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5047\u5982\u6211\u4eec\u4ece\u5de6\u8fb9\u5f00\u59cb\u5f80\u53f3\u8fb9\u63a8\u3002\u5bf9\u4e8e$f(i)$\uff0c\u7528\u5b83\u53bb\u66f4\u65b0\u540e\u9762\u7684\u90a3\u4e9b$f(j)$\u3002\u53d1\u73b0\u9898\u76ee\u7684\u9650\u5236\u6761\u4ef6\u4e4b\u4e8c\u975e\u5e38\u719f\u6089\u3002\u5982\u679c\u628a\u9650\u5236\u6761\u4ef6\u4e8c\u63d0\u51fa\u6765\uff0c\u8fd9\u4e2a\u5176\u5b9e\u662f\u4e00\u9053\u7ecf\u5178\u7684\u5355\u8c03\u961f\u5217\u7684\u9898\u76ee\u2014\u2014\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5355\u8c03\u961f\u5217\uff0c\u6c42\u51fa\u4ee5\u4e00\u4e2a\u70b9\u4e3a\u5de6\u7aef\u70b9\u7684\u65f6\u5019\uff0c\u53f3\u7aef\u70b9\u7684\u6700\u5927\u503c\u3002\u8fd9\u4e2a\u53ef\u4ee5\u5747\u644a$O(1)$\u3002\u7136\u540e\uff0c\u5047\u5982\u4ee5$i$\u4e3a\u5de6\u7aef\u70b9\u7684\u6700\u5927\u53f3\u7aef\u70b9\u4e3a$r_i$\uff0c\u90a3\u4e48\u7528$i$\u66f4\u65b0\u7684\u65f6\u5019\uff0c\u533a\u95f4$[i+l,r_{i+1}]$\u7684\u90e8\u5206\u90fd\u53ef\u4ee5\u7528$i$\u66f4\u65b0\uff08\u6ce8\u610f\uff0c\u6b64\u65f6\u7684\u4e0b\u4e00\u4e2a\u6bb5\u662f\u4ece$i+1$\u5f00\u59cb\u7684\uff0c\u6240\u4ee5\u53f3\u8fb9\u754c\u662f$r_{i+1}$\uff09\u3002\u533a\u95f4\u4fee\u6539\u5355\u70b9\u67e5\u8be2\u7684\u95ee\u9898\uff0c\u81ea\u7136\u5c31\u60f3\u5230\u4e86\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u8fd9\u4e2a$f$\u3002\u65f6\u95f4\u662f$O(n\\log_2n)$\u3002\n# \u4ee3\u7801\n```cpp\n#include <cstdio>\n\n#define isLeaf( a ) ( segTree[a].l == segTree[a].r )\n\nconst int INF = 0x3f3f3f3f;\nconst int MAXN = 1e5 + 5;\n\ntemplate<typename _T>\nvoid read( _T &x )\n{\n\tx = 0; char s = getchar();int f = 1;\n\twhile( s < '0' || '9' < s ) { f = 1; if( s == '-' ) f = -1; s = getchar(); }\n\twhile( '0' <= s && s <= '9' ) { x = ( x << 3 ) + ( x << 1 ) + s - '0', s = getchar(); }\n\tx *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x )\n{\n\tif( x < 0 ) { putchar( '-' ), x = -x; }\n\tif( 9 < x ) { write( x / 10 ); }\n\tputchar( x % 10 + '0' );\n}\n\ntemplate<typename _T>\n_T MIN( const _T a, const _T b )\n{\n\treturn a < b ? a : b;\n}\n\ntemplate<typename _T>\n_T MAX( const _T a, const _T b )\n{\n\treturn a > b ? a : b;\n}\n\nstruct segmentTreeNode\n{\n\tint l, r;\n\tint mn; bool tag;\n}segTree[MAXN << 2];\n\nint deq1[MAXN], h1, t1;\nint deq2[MAXN], h2, t2;\nint a[MAXN];\nint N, S, L;\n\nvoid build( const int now, const int left, const int right )\n{\n\tsegTree[now].l = left, segTree[now].r = right, segTree[now].mn = INF, segTree[now].tag = false;\n\tif( isLeaf( now ) ) return ;\n\tbuild( now << 1, left, left + right >> 1 ), build( now << 1 | 1, ( left + right >> 1 ) + 1, right );\n}\n\nvoid cover( const int now, const int val ) \n{ \n\tif( val < segTree[now].mn ) segTree[now].mn = val, segTree[now].tag = true;\n}\n\nvoid normalize( const int now )\n{\n\tif( ! segTree[now].tag ) return ;\n\tcover( now << 1, segTree[now].mn ), cover( now << 1 | 1, segTree[now].mn );\n\tsegTree[now].tag = false;\n}\n\nvoid update( const int now, const int segL, const int segR, const int val )\n{\n\tif( segR < segTree[now].l || segTree[now].r < segL ) return ;\n\tif( segL <= segTree[now].l && segTree[now].r <= segR ) { cover( now, val ); return ; }\n\tif( isLeaf( now ) ) return ; normalize( now );\n\tupdate( now << 1, segL, segR, val ), update( now << 1 | 1, segL, segR, val );\n}\n\nint query( const int now, const int indx )\n{\n\tif( indx < segTree[now].l || segTree[now].r < indx ) return INF;\n\tif( indx <= segTree[now].l && segTree[now].r <= indx ) return segTree[now].mn;\n\tif( isLeaf( now ) ) return INF; normalize( now );\n\treturn MIN( query( now << 1, indx ), query( now << 1 | 1, indx ) );\n}\n\nint main()\n{\n\tread( N ), read( S ), read( L );\n\tfor( int i = 1 ; i <= N ; i ++ ) read( a[i] );\n\tbuild( 1, 0, N ), update( 1, 0, 0, 0 );\n\th1 = h2 = 1, t1 = t2 = 0;\n\tfor( int i = 0, r = 0 ; i <= N - L ; i ++ )\n\t{\n\t\twhile( h1 <= t1 && deq1[h1] <= i ) h1 ++;\n\t\twhile( h2 <= t2 && deq2[h2] <= i ) h2 ++;\n\t\twhile( r < N && \n\t\t\t ( h1 > t1 || h2 > t2 || ( MAX( a[r + 1], a[deq2[h2]] ) - MIN( a[r + 1], a[deq1[h1]] ) ) <= S ) )\n\t\t{\n\t\t\tr ++;\n\t\t\twhile( h1 <= t1 && a[deq1[t1]] >= a[r] ) t1 --; deq1[++ t1] = r;\n\t\t\twhile( h2 <= t2 && a[deq2[t2]] <= a[r] ) t2 --; deq2[++ t2] = r;\n\t\t}\n\t\tint f = query( 1, i );\n\t\tupdate( 1, i + L, r, f + 1 );\n\t}\n\tint res = query( 1, N );\n\twrite( res == INF ? -1 : res ), putchar( '\\n' );\n\treturn 0;\n}\n```",
        "postTime": 1575075358,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "[CF487B] Strip"
    }
]