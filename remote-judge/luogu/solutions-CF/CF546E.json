[
    {
        "content": "\u672c\u6587\u9002\u5408\u521d\u5b66\u8005\u9605\u8bfb\u3002~~dalao\u52ff\u55b7~~\n\n\u5bf9\u4e8e\u8fd9\u79cd\u7c7b\u578b\u7684\u9898\u76ee\uff0c\u53c8\u662f\u589e\u52a0\uff0c\u53c8\u662f\u51cf\u5c11\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528[\u7f51\u7edc\u6d41](https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E6%B5%81%E7%90%86%E8%AE%BA)\u8fdb\u884c\u8f6c\u5316\u3002\n\n\u8bf4\u53e5\u5e9f\u8bdd\uff1a\n\n> ~~\u7f51\u7edc\u6d41\u8fd9\u4e2a\u4e1c\u897f\uff0c\u8da3\u5473\u5341\u8db3\uff0c\u4e0a\u53ef\u9876\u66ff\u5308\u7259\u5229\u7b97\u6cd5\uff0c\u4e0b\u53ef\u8f6c\u5316\u52a8\u6001\u89c4\u5212\u3002\u5b83\u4f3c\u6c34\u4e00\u822c\u7075\u6d3b\uff0c\u603b\u662f\u53ef\u4ee5\u51fa\u4e4e\u610f\u6599\u5730\u89e3\u51b3\u95ee\u9898\u3002~~\n\n\n\u800c\u6b64\u9898\u8981\u4f7f\u7528\u5230\u7684\u662f[\u7f51\u7edc\u6700\u5927\u6d41](https://baike.baidu.com/item/%E6%9C%80%E5%A4%A7%E6%B5%81%E9%97%AE%E9%A2%98)\u4e4b[Dinic\u7b97\u6cd5](https://baike.baidu.com/item/Dinic%E7%AE%97%E6%B3%95)\u3002\n\n\u597d\u4e86\uff0c\u8bf4\u56de\u6765\uff0c\u770b\u5230\u8fd9\u79cd\u9898\u76ee\uff0c\u4f60\u6709\u4ec0\u4e48\u7591\u60d1\uff1f\n\n\u8bf4\u8bf4\u6211\u7684\u5427\uff1a\n\n> 1. \u4fe1\u606f\u8fd9\u4e48\u591a($a_i$ \u548c $b_i$)\uff0c\u600e\u4e48\u4fdd\u5b58\uff1f\n> \n> 2. \u8fd9\u4e48\u591a\u7684\u70b9\uff0c\u65e0\u7ec4\u7ec7\uff0c\u65e0\u7eaa\u5f8b\uff0c\u600e\u4e48\u529e\u5462\uff1f\n> \n> 3. \u8fd9\u60c5\u51b5\u4e5f\u592a\u591a\u4e86\u5427\uff0c\u600e\u4e48~~\u66b4\u641c~~\u601d\u8003\u5462\uff1f\n> \n> 4. \u5373\u4f7f\u77e5\u9053\u53ef\u884c\uff0c\u8fd9\u9898\u7684\u8f93\u51fa\u600e\u4e48\u529e\u5462\uff1f~~\u771f\u6076\u5fc3~~\n\n\u6211\u4eec\u4ece\u7f51\u7edc\u6700\u5927\u6d41\u7684\u89d2\u5ea6\u4e00\u4e2a\u4e00\u4e2a\u6765\u601d\u8003\u5427\uff01\n\n> **1. \u4fe1\u606f\u8fd9\u4e48\u591a\uff0c\u600e\u4e48\u4fdd\u5b58\uff1f**\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u4e00\u4e2a\u70b9\u7684\u4fe1\u606f\u4e00\u5206\u4e3a2\uff0c\u8ba9\u4ed6\u4eec\u6574\u9f50\u7f57\u5217\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/42xg5yyy.png)\n\n**\u5343\u4e07\u4e0d\u8981\u8bef\u4ee5\u4e3a $a_i$ \u548c $b_i$ \u4e3a\u8282\u70b9\uff0c\u56fe\u4e2d\u53ea\u662f\u5f62\u8c61\u5316\u5730\u9610\u8ff0\u201c\u628a\u4e00\u4e2a\u70b9\u7684\u4fe1\u606f\u4e00\u5206\u4e3a2\u201d**\n\n> **2. \u8fd9\u4e48\u591a\u7684\u70b9\uff0c\u65e0\u7ec4\u7ec7\uff0c\u65e0\u7eaa\u5f8b\uff0c\u600e\u4e48\u529e\u5462\uff1f**\n\n\u90a3\u5c31\u627e\u4e24\u4e2a\u9886\u5bfc\u628a\u4ed6\u4eec\u6c47\u603b\u8d77\u6765\uff0c\u8fd9\u4e24\u4e2a\u9886\u5bfc\u53eb\u505a**\u6e90\u70b9**\u4ee5\u53ca**\u6c47\u70b9**\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/raudy27b.png)\n\n\u90a3\u6d41\u91cf\u662f\u591a\u5c11\u5462\uff1f\n\n**\u770b\u56fe\uff01**\n\n\u770b\u5de6\u534a\u90e8\u5206\uff0c\u70b9 $i$ \u7684\u6d41\u91cf\u4e3a $a_i$\u3002\n\n\u540c\u7406\uff0c\u53f3\u534a\u90e8\u5206\u6d41\u91cf\u4e3a $b_i$\u3002\n\n~~\u4e2d\u95f4\u90e8\u5206\u6682\u4e0d\u8003\u8651~~\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/1wpaxjiy.png)\n\n\u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\u5e72\u5462\uff1f\n\n\u73b0\u5728\u5047\u8bbe $S$ \u70b9\u6709\u65e0\u7a77\u65e0\u5c3d\u7684\u6c34\u8d44\u6e90\u3002\n\n\u90a3\u4e48\u53ef\u4ee5\u5f80\u6bcf\u4e2a\u5de6\u8fb9\u7684\u6cb3\u9053\u91cc\u585e\u6ee1\u6c34\uff0c\u4e5f\u5c31\u662f\u5bf9\u4e8e\u5de6\u8fb9\u7684\u70b9 $i$\uff08\u56fe\u4e2d\u662f\u9760\u8fd1\u7ea2\u70b9\u7684\u56db\u4e2a\u70b9\uff09\u7684\u521d\u59cb\u503c\u4e3a $a_i$\u3002\n\n\u4e5f\u5c31\u662f\u5bf9\u5e94\u9898\u76ee\u4e2d\u201c\u6bcf\u4e2a\u70b9\u521d\u59cb\u65f6\u6709 $a_i$ \u4e2a\u4eba\u201d\u7684\u6761\u4ef6\u3002\n\n\u540c\u6837\u7684\u9053\u7406\uff0c\u7ecf\u8fc7\u4e2d\u95f4\u4e00\u756a\u4e71\u4e03\u516b\u7cdf\u7684\u5904\u7406\u540e\uff0c\u4ece\u53f3\u8fb9\u6d41\u51fa\u7684\u6c34\u5e94\u4e3a $b_1,b_2,\\dots,b_n$\uff0c\u8868\u793a\u6700\u7ec8\u5904\u7406\u540e\uff0c\u5bf9\u4e8e\u53f3\u8fb9\u7684\u70b9 $i$ \uff08\u56fe\u4e2d\u662f\u9760\u8fd1\u7eff\u70b9\u7684\u56db\u4e2a\u70b9\uff09\u6700\u7ec8\u4e3a $b_i$\u3002\n\n\u4e5f\u5c31\u662f\u5bf9\u5e94\u9898\u76ee\u4e2d\u201c\u6bcf\u4e2a\u70b9\u6700\u7ec8\u6709 $b_i$ \u4e2a\u4eba\u201d\u7684\u6761\u4ef6\u3002\n\n> **3. \u8fd9\u60c5\u51b5\u4e5f\u592a\u591a\u4e86\u5427\uff0c\u600e\u4e48\u601d\u8003\u5462\uff1f**\n\n\u4e5f\u5c31\u662f\u8003\u8651\u4e2d\u95f4\u90e8\u5206\u3002\n\n\u9996\u5148\uff0c\u6709\u4e9b\u4eba\u53ef\u4ee5\u9009\u62e9\u7559\u4e0b\u3002\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u4e9b\u70b9\u7684\u6c34\uff0c\u968f\u5b83\u4eec\u6d41\uff0c\u8fde\u63a5 $n$ \u6761\u8fb9\uff0c\u6d41\u91cf\u4e3a $+\\infin$\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/efft7bzt.png)\n\n\u5f53\u7136\uff0c\u5982\u679c\u6709\u8fb9\u76f8\u8fde\uff0c\u90a3\u4e5f\u968f\u4fbf\u6d41\uff0c\u8fde\u63a5 $m$ \u6761\u8fb9\uff08\u4e0e\u9898\u76ee\u4e2d\u7684 $m$ \u610f\u4e49\u76f8\u540c\uff09\uff0c\u5982\u56fe\uff08\u5047\u8bbe\u6709\u8fd9\u4e9b\u8fb9\uff09\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/vbur743a.png)\n\n\u4e8e\u662f\u4e4e\uff0c\u8dd1\u4e00\u904dDinic\u7b97\u6cd5\u8db3\u77e3\uff01\n\n> 4. \u5373\u4f7f\u77e5\u9053\u53ef\u884c\uff0c\u8fd9\u9898\u7684\u8f93\u51fa\u600e\u4e48\u529e\u5462\uff1f~~\u771f\u6076\u5fc3~~\n\n~~\u4f17\u6240\u5468\u77e5~~\uff0cDinic\u4f1a\u5728\u627e\u5230\u589e\u5e7f\u8def\u65f6\uff0c\u5efa\u7acb\u53cd\u8fb9\uff0c\u4ee5\u4fbf\u53cd\u6094\u3002\n\n\u90a3\u4e48\u8fd9\u4e9b\u53cd\u8fb9\uff0c\u5c31\u662f\u6211\u4eec\u5229\u7528\u7684\u5bf9\u8c61\u3002\n\n\u4e00\u6761\u8fb9\u7684\u53cd\u8fb9\u7684\u6743\u503c\u4e0d\u5c31\u662f\u6d41\u8fc7\u8be5\u8fb9\u7684\u6d41\u91cf\u5417\uff1f\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/us0iewzs.png)\n\n\u628a\u4e2d\u95f4\u90e8\u5206\u7684\u6bcf\u6761\u53cd\u8fb9\u63ea\u51fa\u6765\uff0c\u5728\u4fdd\u5b58\u5230\u4e00\u4e2a\u6570\u7ec4\u91cc\u5373\u53ef\u3002\n\nAC Code\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <numeric>\n\nconst int N = 210, M = 1410, INF = 1e9;\n\nstruct Node\n{\n\tint to;\n\tint next;\n\tint w;\n}e[M];\n\nint head[N], cur[N], idx = 1;\n\nvoid add(int a, int b, int c)           // \u52a0\u8fb9\n{\n\tidx++;\n\te[idx].to = b;\n\te[idx].next = head[a];\n\te[idx].w = c;\n\thead[a] = idx;\n\t\n\tidx++;\n\te[idx].to = a;\n\te[idx].next = head[b];\n\te[idx].w = 0;\n\thead[b] = idx;\n}\n\nint n, m;\nint a[N];\nint b[N];\nint S, T;\nint sum1, sum2;\t\t\t\t// sum1:a sum2:b\n\nint d[N];\n\nbool bfs()\n{\n\tstatic int q[N];        // \u961f\u5217\n\tint hh = 0, tt = 0;\n\tmemset(d, 0, sizeof(d));\n\tq[0] = S;\n\tcur[S] = head[S];\n\td[S] = 1;\n\twhile (hh <= tt)\n\t{\n\t\tint t = q[hh++];\n\t\tfor (int i = head[t]; i; i = e[i].next)\n\t\t{\n\t\t\tint to = e[i].to;\n\t\t\tif (!d[to] && e[i].w)\n\t\t\t{\n\t\t\t\tcur[to] = head[to];\n\t\t\t\td[to] = d[t] + 1;\n\t\t\t\tq[++tt] = to;\n\t\t\t\tif (to == T) return true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\nint dinic(int u, int limit)\n{\n\tif (u == T) return limit;\n\tint rest = limit;\n\tfor (int i = cur[u]; i && rest; i = e[i].next)\n\t{\n\t\tcur[u] = i;\n\t\tint to = e[i].to;\n\t\tif (d[to] == d[u] + 1 && e[i].w)\n\t\t{\n\t\t\tint k = dinic(to, std::min(rest, e[i].w));\n\t\t\tif (!k) d[to] = 0;\n\t\t\trest -= k;\n\t\t\te[i].w -= k;\n\t\t\te[i ^ 1].w += k;\n\t\t}\n\t}\n\treturn limit - rest;\n}\n\nint map[N][N];                  // \u8bb0\u5f55\u53cd\u8fb9\u4fe1\u606f\uff0c\u5373\u7ed3\u679c\n\nint main()\n{\n\tstd::ios::sync_with_stdio(false);\n\tstd::cin.tie(nullptr);\n\tstd::cin >> n >> m;\n\tfor (int i = 1; i <= n; i++)std::cin >> a[i];\n\tfor (int i = 1; i <= n; i++)std::cin >> b[i];\n\tsum1 = std::accumulate(a + 1, a + n + 1, 0);    // \u6c42\u548c\n\tsum2 = std::accumulate(b + 1, b + n + 1, 0);\n\tif(sum1 != sum2)        //\u76f4\u63a5\u6392\u9664\n\t{\n\t\tstd::cout << \"NO\" << '\\n';\n\t\treturn 0;\n\t}\n\tfor (int i = 1; i <= n; i++) add(0, i, a[i]);   // \u5de6\n\tfor (int i = n + 1; i <= n * 2; i++) add(i, n * 2 + 1, b[i - n]);   // \u53f3\n\tfor (int i = 1; i <= n; i++) add(i, i + n, INF);                // \u4e2d1\n\tfor (int i = 1; i <= m; i++)        // \u4e2d2\n\t{\n\t\tint a, b;\n\t\tstd::cin >> a >> b;\n\t\tadd(a, b + n, INF);\n\t\tadd(b, a + n, INF);\n\t}\n\tS = 0, T = n * 2 + 1;\n\t\n\tauto query = [&]()\t\t\t\t\t// Dinic \u6a21\u677f\n\t{\n\t\tint maxflow = 0, flow = 0;\n\t\twhile (bfs())\n\t\t{\n\t\t\twhile (flow = dinic(S, INF))\n\t\t\t{\n\t\t\t\tmaxflow += flow;\n\t\t\t}\n\t\t}\n\t\treturn maxflow;\n\t};\n\t\n\tif (query() != sum1)                // \u76f4\u63a5\u6392\u9664\n\t{\n\t\tstd::cout << \"NO\" << '\\n';\n\t\treturn 0;\n\t}\n\telse                                // \u6263\u53cd\u8fb9\n\t{\n\t\tstd::cout << \"YES\" << '\\n';\n\t\tint t = 4 * n + 2;\n\t\tfor (int i = 1; i <= 2 * m + n; i++)\n\t\t{\n\t\t\tmap[e[t ^ 1].to][e[t].to - n] += e[t ^ 1].w;                        // \u6ce8\u610f\u8981 -n\n\t\t\tt += 2;\n\t\t}\n\t\tfor (int i = 1; i <= n; i++)\n\t\t{\n\t\t\tfor (int j = 1; j <= n; j++)\n\t\t\t{\n\t\t\t\tstd::cout << map[i][j] << ' ';\n\t\t\t}\n\t\t\tstd::cout << '\\n';\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\u7801\u5b57\u4e0d\u6613\uff0c\u70b9\u4e2a\u8d5e\u5427\uff01",
        "postTime": 1667655349,
        "uid": 520333,
        "name": "SmallestRubbish",
        "ccfLevel": 0,
        "title": "CF546E Soldier and Traveling\u9898\u89e3"
    },
    {
        "content": "[\u849f\u84bb\u5ba3\u4f20\u4e00\u4e0b\u81ea\u5df1\u7684blog(qwq)](https://www.cnblogs.com/hhh1109/p/9362553.html)\n\n## \u9898\u89e3\n\n\u9898\u610f\u5927\u6982\u5c31\u662f\u7ed9\u4f60 $n$ \u4e2a\u57ce\u5e02\uff0c$m$ \u6761\u8fb9\u3002\n\u7136\u540e\u4eba\u53ea\u80fd\u4ece\u8d70\u76f8\u90bb\u8fb9\u76f8\u8fde\u7684\u57ce\u5e02\u3002\n\u73b0\u5728\u7ed9\u4f60\u521d\u59cb\u57ce\u5e02\u7684\u6bcf\u4e00\u4e2a\u4eba\u6570\uff0c\u518d\u7ed9\u4e00\u7ec4\u6bcf\u4e2a\u57ce\u5e02\u4eba\u6570\u3002\u8be2\u95ee\u662f\u5426\u53ef\u4ee5\u4ece\u5f53\u524d\u4eba\u6570\u53d8\u6362\u5230\u7ed9\u5b9a\u4eba\u6570\u3002\u5982\u679c\u80fd\uff0c\u8f93\u5165\u201cYES\u201d\u5e76\u8f93\u51fa\u65b9\u6848\uff0c\u4e0d\u80fd\u5219\u8f93\u51fa\u201cNO\u201d\u3002\n\n\u7f51\u7edc\u6d41\u5c31\u662f\u5efa\u56fe\u561b\u3002\u3002\u3002\n\u5efa\u597d\u56fe\u4e00\u822c\u5c31\u6ca1\u6709\u4ec0\u4e48\u96be\u5ea6\u4e86qwq\uff08dalao\u96fe\u603c\uff09\n\u90a3\u4e48\u600e\u4e48\u5efa\u5462\uff1f\n\u6211\u4eec\u8bbe\u4e00\u4e2a\u6e90\u70b9\u548c\u6c47\u70b9\u3002\n\u7136\u540e\u628a\u4e00\u4e2a\u57ce\u5e02\u62c6\u6210\u4e24\u4e2a\u70b9\u3002\n\u5165\u70b9 $i$ \u9650\u5ea6\u8bbe\u4e3a $a_i$ \uff0c\u51fa\u70b9 $i+n$ \u9650\u5ea6\u8bbe\u4e3a $b_{i}$ \u3002\n\u8fd9\u6837\u5c31\u53ea\u8981\u5224\u65ad\u6c47\u70b9\u7684\u6700\u5927\u6d41\u662f\u5426\u4e0e $b_i$ \u76f8\u7b49\u4e86\u3002\nPs: \u539f\u672c\u7684\u4eba\u6570\u548c\u540e\u6765\u65b9\u6848\u7684\u4eba\u6570\u5e94\u8be5\u76f8\u7b49\uff0c\u4e14\u4e00\u5b9a\u8981\u5148\u5224\u5b9a\u3002\n\n\u600e\u4e48\u8f93\u51fa\u65b9\u6848\uff1f\n\u770b\u53cd\u6094\u8def\u5f84\u7684\u6d41\u91cf\u5c31\u597d\u4e86\u3002\n\u6709\u5c31\u6807\u8bb0\u4e00\u4e0b\u5e76\u8f93\u51fa\u3002\n\n---\n\n## \u4ee3\u7801\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<iostream>\n#include<queue>\nusing namespace std;\nconst int N=1001;\nstruct node{\n    int c,to,next;\n}e[N<<1];\nint num=1,head[N<<3],flag;\nint dep[N<<3],n,m,a[N<<3],b[N<<3],sum,tot,s,t;\nint map[N][N];\nint read(){\n    int x=0,w=1;char ch=getchar();\n    while(ch>'9'||ch<'0'){if(ch=='-')w=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9')x=x*10+ch-'0',ch=getchar();\n    return x*w;\n}\n\nvoid add(int from,int to,int c){\n    num++;\n    e[num].to=to;\n    e[num].c=c;\n    e[num].next=head[from];\n    head[from]=num;\n}\n\nbool bfs(){\n    memset(dep,0,sizeof(dep));\n    queue<int>q;q.push(s);dep[s]=1;\n    while(!q.empty()){\n        int u=q.front();q.pop();\n        for(int i=head[u];i;i=e[i].next){\n            int v=e[i].to;\n            if(!dep[v]&&e[i].c){\n                dep[v]=dep[u]+1;q.push(v);\n            }\n        }\n    }\n    return dep[t];\n}\n\nint dfs(int x,int cap){\n    if(x==t)return cap;\n    int addx=0;\n    for(int i=head[x];i;i=e[i].next){\n        int v=e[i].to;\n        if(dep[v]==dep[x]+1&&e[i].c){\n            int tmp=dfs(v,min(cap-addx,e[i].c));\n            e[i].c-=tmp;e[i^1].c+=tmp;addx+=tmp;\n        }\n    }\n    return addx;\n}\n\nint dinic(){\n    int ans=0;\n    while(bfs())ans+=dfs(s,10000000);\n    return ans;\n}\n\nint main()\n{\n    n=read();m=read();s=0,t=n+n+1;\n    for(int i=1;i<=n;i++)a[i]=read(),add(s,i,a[i]),add(i,s,0),tot+=a[i];\n    for(int i=1;i<=n;i++)b[i]=read(),sum+=b[i],add(i+n,t,b[i]),add(t,i+n,0);\n    for(int i=1;i<=n;i++)add(i,i+n,99999999),add(i+n,i,0);\n    for(int i=1;i<=m;i++){\n        int x=read(),y=read();\n    //\tif(x<y)swap(x,y);\n        add(x,y+n,99999999);add(y+n,x,0);\n        add(y,x+n,99999999);add(x+n,y,0);\n    }\n    //cout<<sum<<' '<<dinic();\n    if(tot!=sum){printf(\"NO\");return 0;}\n    int ans=dinic();\n    if(sum==ans){printf(\"YES\\n\");\n        for(int i=1;i<=n;i++){\n            for(int j=head[i];j;j=e[j].next){\n                int v=e[j].to;\n                if(v>n)\n                map[i][v-n]=e[j^1].c;\n            }\n        }\n        for(int i=1;i<=n;i++){\n            for(int j=1;j<=n;j++)\n            cout<<map[i][j]<<' ';\n            cout<<endl;\n        }\n    }\n    else printf(\"NO\");\n    return 0;\n}\n```\n",
        "postTime": 1532437093,
        "uid": 45212,
        "name": "Epiphyllumthief",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF546E \u3010Soldier and Traveling\u3011"
    },
    {
        "content": "### \u524d\u7f6e\u829d\u58eb\uff1a\n\n~~\u7f51\u7edc\u7624~~\n\n### \u9898\u610f\uff1a\n\n\u5c06\u6bcf\u4e2a\u57ce\u5e02\u7684\u519b\u4eba\u8c03\u52a8\u5230\u76f8\u90bb\u57ce\u5e02\u6216\u6309\u5175\u4e0d\u52a8\uff0c\u95ee\u80fd\u5426\u4ece\u521d\u59cb\u72b6\u6001  ( \u6211\u4eec\u8bb0\u4f5c $a$ )  \u8f6c\u79fb\u5230\u76ee\u6807\u72b6\u6001 ( \u8bb0\u4f5c $b$ )\uff0c\u5e76\u8f93\u51fa\u8c03\u52a8\u60c5\u51b5\u3002\n\n\u770b\u5230\u8fd9\u79cd\u4eba\u6570\u8f6c\u79fb\u540e\u4e00\u589e\u4e00\u51cf\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u81ea\u7136\u800c\u7136\u60f3\u5230\u7528\u7f51\u7edc\u6d41\u6765\u89e3\u51b3\u3002\u4ece\u8d85\u7ea7\u6e90\u51fa\u70b9 $s$ \u5411\u6bcf\u4e2a\u8282\u70b9\u7684\u5165\u70b9 $i$ \u4f38\u51fa\u4e00\u6761\u6d41\u91cf\u4e3a $a_i$ \u7684\u8fb9\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u51fa\u70b9 $i + n $ \u50cf\u8d85\u7ea7\u6e90\u6c47\u70b9\u4f38\u51fa\u4e00\u6761\u6d41\u91cf\u4e3a $b_i$ \u7684\u8fb9\uff0c\u81ea\u5df1\u7684\u5165\u70b9\u5411\u81ea\u5df1\u7684\u51fa\u70b9\u548c\u90bb\u70b9\u5165\u70b9\u4f38\u51fa\u6d41\u91cf\u4e3a $inf$ \u7684\u8fb9\uff0c\u8dd1\u4e00\u904d\u6a21\u677f\u5c31\u597d\u4e86\u3002\n\n\u5173\u4e8e YES NO \u7684\u5224\u5b9a\uff0c\u53ea\u9700\u5224\u65ad\u6e90\u6c47\u70b9\u6c47\u5165\u7684\u603b\u91cf $ans$ \u662f\u5426\u7b49\u4e8e\u603b\u4eba\u6570\u5c31 ok \u4e86\u3002\u800c\u5177\u4f53\u7684\u8c03\u52a8\u60c5\u51b5\u5219\u770b\u6bcf\u4e00\u6761\u8fb9\u7684\u53cd\u8fb9\u7684\u6d41\u91cf\uff08\u56e0\u4e3a\u6b63\u8fb9\u51cf\u5c11\u7684\u6d41\u91cf\u7b49\u4e8e\u53cd\u8fb9\u7684\u6d41\u91cf\uff09\u3002\n\n\u76ee\u524d\u6392\u5728\u6700\u4f18\u89e3 rank 1.\n\n### Code $--->$\n\n```\n#include <cstdio>\n#include <cctype>\n#include <algorithm>\n#include <cstring>\n#include <queue>\n#include <cmath>\n#define ll long long\n#define inf 0x3f3f3f3f\n\nusing namespace std;\n\ninline int read(){\n\tint x=0,w=0;char ch=getchar();\n\twhile (!isdigit(ch))w|=ch=='-',ch=getchar();\n\twhile (isdigit(ch))x=(x<<1)+(x<<3)+ch-'0',ch=getchar();\n\treturn w?-x:x;\n}\n\nstruct node{\n\tint from, to, nxt, flow;\n}e[2000005];\n\nint n, m, s, t, head[205], cur[205], dep[205], cnt = 1, ans, res[205][205];\n\nqueue <int> que;\n\ninline void add_edge(int from, int to, int flow){\n\te[++cnt].nxt = head[from];\n\thead[from] = cnt;\n\te[cnt].from = from;\n \te[cnt].flow = flow;\n\te[cnt].to = to;\n}\n\ninline void add(int from, int to, int flow){\n\tadd_edge(from, to, flow);\n\tadd_edge(to, from, 0);\n}\n\ninline int bfs(){\n\tmemset(dep, 0, sizeof(dep));\n\twhile(!que.empty() ) que.pop();\n\tdep[s] = 1;\n\tque.push(s);\n\twhile(!que.empty() ){\n\t\tint u = que.front() ;\n\t\tque.pop() ;\n\t\tfor(int i = head[u]; i; i = e[i].nxt ){\n\t\t\tif(!dep[e[i].to ] && e[i].flow ){\n\t\t\t\tque.push(e[i].to );\n\t\t\t\tdep[e[i].to ] = dep[u] + 1; \n\t\t\t}\n\t\t}\n\t} \n\treturn dep[t] != 0;\n}\n\ninline int dfs(int p, int dis){\n\tif(p == t) return dis;\n\tint flow = 0;\n\tfor(int &i = cur[p]; i; i = e[i].nxt ){\n\t\tif(dep[e[i].to ] == dep[p] + 1 && e[i].flow ){\n\t\t\tint di = dfs(e[i].to , min(dis, e[i].flow ));\n\t\t\tif(di){\n\t\t\t\te[i].flow -= di;\n\t\t\t\te[i ^ 1].flow += di;\n\t\t\t\tflow += di;\n\t\t\t\tdis -= di;\n\t\t\t\tif(!dis) return flow;\n\t\t\t}\n\t\t}\n\t}\n\treturn flow;\n}\n\ninline void dinic(){\n\twhile(bfs()){\n\t\tmemcpy(cur, head, sizeof(cur));\n\t\tans += dfs(s, inf);\n\t}\n}\n\nint main(){\n\tn = read(), m = read();\n\ts = 2 * n + 1;\n\tt = s + 1;\n\tint sum1 = 0, sum2 = 0;\n\tfor(int i = 1; i <= n; i++){\n\t\tint x = read();\n\t\tsum1 += x;\n\t\tadd(s, i, x);\n\t}\n\tfor(int i = 1; i <= n; i++){\n\t\tint x = read();\n\t\tsum2 += x;\n\t\tadd(i + n, t, x);\n\t}\n\tfor(int i = 1; i <= m; i++){\n\t\tint x = read(), y = read();\n\t\tadd(x, y + n, inf);\n\t\tadd(y, x + n, inf);\n\t}\n\tfor(int i = 1; i <= n; i++){\n\t\tadd(i, i + n, inf);\n\t}\n\tif(sum1 != sum2){\n\t\tputs(\"NO\");\n\t\treturn 0;\n\t}\n\tdinic();\n\tif(ans != sum1){\n\t\tputs(\"NO\");\n\t\treturn 0;\n\t}\n\tfor(int i = 4 * n + 2 ; i <= cnt; i += 2){\n\t\tif(e[i ^ 1].flow ){\n\t\t\tres[e[i].from ][e[i].to - n] = e[i ^ 1].flow ;\n\t\t}\n\t}\n\tputs(\"YES\");\n\tfor(int i = 1; i <= n; i++){\n\t\tfor(int j = 1; j <= n; j++)\n\t\tprintf(\"%d \",res[i][j]);\n\t\tputs(\"\");\n\t}\n}\n\n```\n\n\u5b8c\u7ed3\u6492\u82b1 \u273f\u273f\u30fd(\u00b0\u25bd\u00b0)\u30ce\u273f",
        "postTime": 1598532215,
        "uid": 209604,
        "name": "pikabi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF546E \u3010Soldier and Traveling\u3011"
    },
    {
        "content": "\u8003\u8651\u7f51\u7edc\u6d41\u3002\u6bcf\u4e00\u4e2a\u57ce\u5e02\u7684\u4eba\u53ea\u80fd\u53bb\u4e0e\u8be5\u57ce\u5e02\u76f4\u63a5\u76f8\u8fde\u7684\u57ce\u5e02\uff0c\u4f46\u6211\u4eec\u4e0d\u5173\u5fc3\u6700\u7ec8\u57ce\u91cc\u7684\u4eba\u6709\u591a\u5c11\u662f\u539f\u6765\u7684\uff0c\u6240\u4ee5\u6bcf\u4e00\u5ea7\u57ce\u5e02\u7684\u4eba\u53e3\u90fd\u53ef\u4ee5\u4efb\u610f\u6d41\u5411\u4e0e\u5176\u76f8\u90bb\u7684\u57ce\uff0c\u4e0d\u9700\u8981\u8003\u8651\u54ea\u4e9b\u4eba\u8d70\u54ea\u4e9b\u4eba\u7559\uff0c\u53ef\u4ee5\u76f4\u63a5\u8ba9\u6240\u6709\u4eba\u90fd\u79bb\u5f00\u57ce\u5e02\uff0c\u91cd\u65b0\u6392\u5165\u57ce\u5e02\uff0c\u6bcf\u4e2a\u4eba\u53ef\u9009\u57ce\u5e02\u56fa\u5b9a\u3002\u5177\u4f53\u5b9e\u73b0\u53ef\u4ee5\u5efa\u6bcf\u4e2a\u57ce\u5e02\u7684\u526f\u672c\uff0c\u6e90\u70b9\u5411\u57ce\u5e02 $i$ \u8fde $a_i$ \u6d41\u91cf\u9650\u5236\u6bcf\u4e2a\u57ce\u5e02\u539f\u672c\u7684\u4eba\u53e3\uff0c\u57ce\u5e02 $i$ \u7684\u526f\u672c $i'$ \u5411\u6c47\u70b9\u8fde $b_i$ \u6d41\u91cf\u9650\u5236\u76ee\u6807\u7684\u4eba\u53e3\u3002\u82e5 $u$ \u548c $v$ \u4e4b\u95f4\u6709\u8fb9\uff0c\u5219 $u$ \u7684\u4eba\u53e3\u53ef\u4ee5\u4efb\u610f\u5411 $v$ \u6d41\uff0c$v$ \u7684\u4eba\u53e3\u4e5f\u53ef\u4ee5\u4efb\u610f\u5411 $u$ \u6d41\uff0c\u4e5f\u5c31\u662f $u$ \u5411 $v'$ \u8fde $\\infty$ \u6d41\u91cf\uff0c\u4e14 $v$ \u5411 $u'$ \u8fde $\\infty$ \u6d41\u91cf\u3002\n\n\u6c42\u51fa\u7f51\u7edc\u6700\u5927\u6d41 $f$\uff0c\u82e5 $f=\\sum b=\\sum a$\uff0c\u5219\u6709\u65b9\u6848\uff0c\u53cd\u4e4b\u5219\u65e0\u65b9\u6848\u3002\n\n\u6700\u540e\u8fd8\u9700\u8981\u8f93\u51fa\u65b9\u6848\uff0c\u7a0d\u5fae\u60f3\u4e00\u4e0b\uff0c\u53d1\u73b0\u82e5 $u$ \u5411 $v$ \u6d41\u4e86 $k$ \u4eba\uff0c\u5219\u8fb9 $u\\rarr v'$ \u6709\u5927\u5c0f\u4e3a $k$ \u7684\u6d41\u6d41\u8fc7\uff0c\u6240\u4ee5\u76f4\u63a5\u67e5\u8fd9\u4e9b\u8fb9\u7684\u5269\u4f59\u6d41\u91cf\u60c5\u51b5\u8f93\u51fa\u5373\u53ef\u3002\n\n```cpp\n#include<iostream>\n#include<queue>\n#include<cstring>\nusing namespace std;\nconst int N=110,M=210,V=210,E=710,inf=0x3f3f3f3f;\nint n,m,a[N],b[N];\nint edge[N][N];\nint S,T,head[V],to[E<<1],nex[E<<1],flow[E<<1],cnt;\ninline void insert(int u,int v,int f){\n    cnt++;\n    to[cnt<<1]=v;\n    nex[cnt<<1]=head[u];\n    head[u]=cnt<<1;\n    flow[cnt<<1]=f;\n    to[cnt<<1|1]=u;\n    nex[cnt<<1|1]=head[v];\n    head[v]=cnt<<1|1;\n}\nvoid init(){\n    cin>>n>>m;\n    S=2*n+1,T=2*n+2;\n    for(int i=1;i<=n;i++)cin>>a[i];\n    for(int i=1;i<=n;i++)cin>>b[i];\n    for(int i=1;i<=n;i++){\n        insert(S,i,a[i]);\n        insert(i+n,T,b[i]);\n        insert(i,i+n,inf);\n        edge[i][i]=cnt;\n    }\n    for(int i=1;i<=m;i++){\n        int u,v;cin>>u>>v;\n        insert(u,v+n,inf);\n        edge[u][v]=cnt;\n        insert(v,u+n,inf);\n        edge[v][u]=cnt;\n    }\n}\nqueue<int>q;\nbool tag[E<<1];\nint dep[V];\nbool bfs(){//cout<<1<<endl;\n    memset(dep,0,sizeof(dep));\n    memset(tag,0,sizeof(tag));\n    dep[S]=1;\n    q.push(S);\n    bool flg=false;\n    while(!q.empty()){\n        int nd=q.front();\n        q.pop();\n        if(nd==T)flg=true;\n        for(int i=head[nd];i;i=nex[i]){\n            if(!dep[to[i]]&&flow[i]){\n                dep[to[i]]=dep[nd]+1;\n                q.push(to[i]);\n            }\n        }\n    }\n    return flg;\n}\nint dfs(int nd,int mflow){\n    if(nd==T)return mflow;\n    int sum=0;\n    for(int i=head[nd];i;i=nex[i]){\n        if(flow[i]&&dep[nd]+1==dep[to[i]]&&!tag[i]){\n            int f=dfs(to[i],min(mflow,flow[i]));\n            if(!f)tag[i]=true;\n            sum+=f;\n            flow[i^1]+=f;\n            mflow-=f;\n            flow[i]-=f;\n            if(!mflow)break;\n        }\n    }\n    return sum;\n}\nint dinic(){\n    int sum=0;\n    while(bfs())sum+=dfs(S,inf);\n    return sum;\n}\nint main(){\n    // freopen(\"read.in\",\"r\",stdin);\n    init();\n    int sum=0;\n    for(int i=1;i<=n;i++)sum+=a[i]-b[i];\n    if(sum!=0){cout<<\"NO\";return 0;}\n    int f=dinic();\n    // cout<<f<<' ';\n    for(int i=1;i<=n;i++)f-=b[i];\n    if(f!=0){cout<<\"NO\";return 0;}\n    printf(\"YES\\n\");\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=n;j++)cout<<flow[edge[i][j]<<1|1]<<' ';\n        cout<<endl;\n    }\n    return 0;\n}\n```",
        "postTime": 1667658084,
        "uid": 455558,
        "name": "yuanjiabao",
        "ccfLevel": 0,
        "title": "CF546E Soldier and Traveling \u9898\u89e3"
    },
    {
        "content": "[\u535a\u5ba2\u56ed\u67e5\u770b](https://www.cnblogs.com/AIskeleton/p/16323368.html)\n\n## \u9898\u610f\n> [CF546E Soldier and Traveling](https://codeforces.com/problemset/problem/546/E)\n\n> \u6709 $n$ \u4e2a\u70b9\uff0c$m$ \u6761\u65e0\u5411\u8fb9\uff0c\u4eba\u53ea\u80fd\u5728\u6709\u8fb9\u76f8\u8fde\u7684\u70b9\u4e4b\u95f4\u79fb\u52a8\u3002\n\n> \u7ed9\u5b9a\u6bcf\u4e2a\u70b9\u7684\u521d\u59cb\u4eba\u6570 $a_i$ \u548c\u76ee\u6807\u4eba\u6570 $b_i$\uff0c\u8be2\u95ee\u662f\u5426\u53ef\u4ee5\u4f7f\u6bcf\u4e2a\u70b9\u7684\u4eba\u6570\u53d8\u6362\u5230\u76ee\u6807\u4eba\u6570\uff0c\u82e5\u53ef\u884c\u8f93\u51fa\u65b9\u6848\u3002\n\n> $1\\le n\\le 100,0\\le m\\le 200,0\\le a_i,b_i\\le 100$\u3002\n\n## \u9898\u89e3\n### \u601d\u8def\n\u770b\u5230\u4e00\u4e2a\u4eba\u5339\u914d\u4e00\u4e2a\u70b9\uff0c\u53ef\u4ee5\u60f3\u5230\u8fd9\u662f\u4e00\u4e2a\u4e8c\u5206\u56fe\u3002\n\n\u8003\u8651\u62c6\u70b9\uff0c\u6bcf\u4e2a\u70b9\u5206\u6210\u51fa\u5165\u70b9\u6784\u9020\u4e8c\u5206\u56fe\u3002\n### \u5efa\u56fe\n\u4ece\u6e90\u70b9\u5411\u6bcf\u4e2a\u5165\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a $a_i$ \u7684\u8fb9\uff0c\u518d\u4ece\u6bcf\u4e2a\u51fa\u70b9\u5411\u6c47\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a $b_i$ \u7684\u8fb9\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u4ece\u5165\u70b9\u5411\u51fa\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a $\\infty$ \u7684\u8fb9\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u7ecf\u8fc7\u7684\u4eba\u6570\u65e0\u9650\u5236\u3002\n\n\u81f3\u4e8e\u6bcf\u6761\u8fb9\uff0c\u8fb9\u7684\u4e24\u7aef\u70b9\u4e4b\u95f4\u8fde\u5bb9\u91cf\u4e3a $\\infty$ \u7684**\u65e0\u5411\u8fb9**\u3002\n### \u8f93\u51fa\n\u5f88\u660e\u663e\uff0c\u5982\u679c $\\sum_{i=1}^n b_i \\ne \\sum_{i=1}^n a_i$ \u6216\u662f\u6ca1\u6709\u6ee1\u6d41\uff0c\u5c31\u662f\u65e0\u89e3\u7684\u60c5\u51b5\u3002\n\n\u81f3\u4e8e\u8f93\u51fa\u65b9\u6848\uff0c\u5c31\u76f4\u63a5\u904d\u5386\u6bcf\u4e00\u6761\u8fb9\u7684\u53cd\u5411\u8fb9\uff0c\u8bb0\u5f55\u53cd\u5411\u8fb9\u7684\u6d41\u91cf\u5c31\u662f\u4e24\u70b9\u95f4\u8f6c\u79fb\u7684\u4eba\u6570\u3002\n\n\u6700\u540e\u5c31\u662f\u8981\u6ce8\u610f\uff0c\u8fb9\u6570 $m$ \u53ef\u80fd\u4e3a 0\u3002\n## \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=5000,M=2e6,INF=1e9;\nint rd(){\n\tint w=0,v=1;char c=getchar();while(c<'0'||c>'9'){if(c=='-')v=-1;c=getchar();}\n\twhile(c>='0'&&c<='9')w=(w<<1)+(w<<3)+(c&15),c=getchar();return w*v;\n}void wr(int x){if(x<0)putchar('-'),x=-x;if(x>9)wr(x/10);putchar(x%10+'0');}\n\nint fir[M],cnt=1;\nstruct E{int v,w,nt;}e[M];\nvoid I(int u,int v,int w){\n\te[++cnt]=(E){v,w,fir[u]};fir[u]=cnt;\n\te[++cnt]=(E){u,0,fir[v]};fir[v]=cnt;\n}\n\nint cur[N],d[N],st,ed;\nqueue <int>q;\nbool bfs(){\n\tmemset(d,0,sizeof(d));\n\tfor(int i=0;i<=ed;i++)\tcur[i]=fir[i];\n\tq.push(st);d[st]=1;\n\twhile(q.size()){\n\t\tint u=q.front(),V;q.pop();\n\t\tfor(int i=fir[u];i;i=e[i].nt)\n\t\t\tif(e[i].w&&!d[V=e[i].v])\n\t\t\t\tq.push(V),d[V]=d[u]+1;\n\t}return d[ed];\n}int dfs(int u,int fl){\n\tif(u==ed)return fl;int f,V,s=0;\n\tfor(int i=cur[u];i;i=e[i].nt){\n\t\tcur[u]=i;\n\t\tif(e[i].w&&d[V=e[i].v]==d[u]+1){\n\t\t\tf=dfs(V,min(fl,e[i].w));\n\t\t\te[i].w-=f;e[i^1].w+=f;\n\t\t\ts+=f;fl-=f;if(!fl)break;\n\t\t}\n\t}if(!s)d[u]=0;return s;\n}int dinic(){int ans=0;while(bfs())ans+=dfs(st,INF);return ans;}\n\nint n,m,a[N],b[N],s1,s2;\nint out[N][N];\n\nsigned main(){\n    // freopen(\"test.in\",\"r\",stdin);freopen(\"test.out\",\"w\",stdout);\n\tn=rd(),m=rd();\n    ed=n*2+1;\n    for(int i=1;i<=n;i++)a[i]=rd(),s1+=a[i];\n    for(int i=1;i<=n;i++)b[i]=rd(),s2+=b[i];\n\n    for(int i=1;i<=n;i++){\n        I(i,i+n,INF);\n        I(st,i,a[i]);\n        I(i+n,ed,b[i]);\n    }for(int i=1,u,v;i<=m;i++){\n        u=rd(),v=rd();\n        I(u,v+n,INF);I(v,u+n,INF);\n    }\n\n    if(dinic()!=s2||s1!=s2)    puts(\"NO\");\n    else{\n        puts(\"YES\");\n        for(int i=1;i<=n;i++)\n            for(int j=fir[i];j;j=e[j].nt)\n                if(e[j].v>n)\n                    out[i][e[j].v-n]=e[j^1].w;\n        for(int i=1;i<=n;i++){\n            for(int j=1;j<=n;j++){\n                wr(out[i][j]),putchar(' ');\n            }putchar('\\n');\n        }\n    }\n}\n```",
        "postTime": 1653793834,
        "uid": 540715,
        "name": "A_I_Skeleton",
        "ccfLevel": 0,
        "title": "CF546E"
    }
]