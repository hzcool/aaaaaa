[
    {
        "content": "\u5148\u5efa\u7acb`trie`\u6811\uff0c\u95ee\u9898\u53d8\u4e3a\uff1a\n\n\u7ed9\u4e00\u68f5\u6811\uff0c\u6709\u4e00\u4e9b\u9ed1\u70b9\u3002\u53ef\u4ee5\u628a\u9ed1\u70b9\u79fb\u5230\u7956\u5148\u5904\uff0c\u4f46\u4e24\u4e2a\u9ed1\u70b9\u4e0d\u80fd\u5728\u540c\u4e00\u4e2a\u4f4d\u7f6e\u3002\u6c42\u6700\u5c0f\u7684\u9ed1\u70b9\u6df1\u5ea6\u548c\u3002\n\n\u7528\u5806\u7ef4\u62a4\u6bcf\u4e2a\u5b50\u6811\u4e2d\u9ed1\u70b9\u7684\u6df1\u5ea6\uff0c\u5982\u679c\u6839\u4e0a\u6ca1\u7528\u9ed1\u70b9\u5c31\u628a\u6700\u6df1\u7684\u79fb\u5230\u6839\u3002\u4e00\u904d`dfs`\u5373\u53ef\u5b8c\u6210\u3002\n\n\u6bcf\u4e2a\u9ed1\u70b9$x$\u4f1a\u88ab\u8ba1\u7b97$deep_x$\u6b21\uff0c\u800c$\\sum deep_x=n$\uff0c\u518d\u4e58\u4e0a\u5806\u7684\u65f6\u95f4\n\n$\\mathcal O(n\\log n)$\n\n```cpp\n#include<bits/stdc++.h>\nconst int N=100010;\nint n,m,id,ans,tr[N][26];\nbool b[N]; //\u4e32\u7ed3\u675f\u6807\u8bb0\nchar s[N];\nstd::priority_queue<int>q[N]; //\u6bcf\u4e2a\u70b9\u7ef4\u62a4\u5927\u6839\u5806\nvoid dfs(int x,int d){\n    for(int y,i=0;i<26;++i)if(y=tr[x][i]){\n        dfs(y,d+1);\n        while(q[y].size()){\n            q[x].push(q[y].top());\n            q[y].pop();\n        } //\u5408\u5e76\u5b50\u8282\u70b9\u4fe1\u606f\n    }\n    if(x&&!b[x]){\n        ans-=q[x].top()-d;\n        q[x].pop();\n        q[x].push(d);\n    } //\u628a\u6700\u6df1\u7684\u70b9\u79fb\u5230\u6839\n}\nint main(){\n    scanf(\"%d\",&n);\n    for(int x,i=1;i<=n;++i){\n        x=0;\n        scanf(\"%s\",s+1);\n        m=strlen(s+1);\n        for(int j=1;j<=m;++j){\n            if(!tr[x][s[j]-97])tr[x][s[j]-97]=++id;\n            x=tr[x][s[j]-97]; //\u5efatrie\u6811\uff0c97=='a'\n        }\n        b[x]=true;\n        q[x].push(m);\n        ans+=m;\n    }\n    dfs(0,0);\n    printf(\"%d\",ans);\n}\n```\n",
        "postTime": 1580701624,
        "uid": 35406,
        "name": "\u300c\u5df2\u6ce8\u9500\u300d",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF965E \u3010Short Code\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n\u7ed9\u4f60n\u4e2a\u4e0d\u540c\u7684\u4e32\uff0c\u8981\u4f60\u627en\u4e2a\u4e32\u7684\u67d0\u4e2a\u524d\u7f00\u6765\u8868\u793a\u8fd9n\u4e2a\u4e32\uff0c\u5e76\u4e14\u8981\u6c42\u4e92\u4e0d\u76f8\u540c\u3002\n\n## \u9898\u89e3\n\n~~\u4e00\u773c\u9898\uff0c\u76f4\u63a5\u770b\u4e00\u4f4d\u53ef\u4ee5\u4e0d\u53ef\u4ee5\uff0c\u5982\u679c\u4e0d\u53ef\u4ee5\u5c31\u4e24\u4f4d\uff0c\u4ee5\u6b64\u7c7b\u63a8~~\n\n\u8fd9\u6837\u8d2a\u5fc3\u662f\u6b63\u786e\u7684\uff0c\u7136\u540e\u590d\u6742\u5ea6\u662f\u9519\u8bef\u7684\u3002\n\n\u628a\u6240\u6709\u7684\u6570\u5efa\u7acb\u4e2atrie\u3002\u9996\u5148\u6240\u6709\u7684\u4e32\u53d6\u7684\u524d\u7f00\u90fd\u662f\u539f\u4e32\u3002\n\n\u6bcf\u4e00\u4e2a\u70b9\u641e\u4e00\u4e2aset\uff0c\u5b58\u5f53\u524d\u5b50\u6811\uff0c\u6240\u6709\u7684\u4e32\uff0c\u53d6\u7684\u524d\u7f00\u7684\u957f\u5ea6\u3002\n\n\u7136\u540e\u5982\u679c\u4e00\u4e2a\u70b9\u662f\u7a7a\u7684\uff0c\u5c31\u53d6\u51fa\u5f53\u524d\u5b50\u6811\u91cc\u7684\u4e32\u53d6\u7684\u524d\u7f00\u957f\u5ea6\u6700\u5927\u7684\uff0c\u653e\u5230\u5f53\u524d\u70b9\u3002\n\n\u6bcf\u4e2a\u70b9\u5f80\u4e0a\u8f6c\u79fb\u7684\u65f6\u5019\uff0c\u542f\u53d1\u5f0f\u5408\u5e76\u3002\n\n\u56e0\u4e3a\u6709\u91cd\u590d\u7684\uff0c\u6240\u4ee5\u8981\u7528multiset\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u662f$ O(n\\log n^2) $ \n\n```cpp\n/*\n * Author: ylx\n * LANG: c++\n * PROG: 965E\n */\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nvoid qmax(int &x,int y) {if (x<y) x=y;}\nvoid qmin(int &x,int y) {if (x>y) x=y;}\ninline int read()\n{\n    char s;\n    int k=0,base=1;\n    while ((s=getchar())!='-'&&s!=EOF&&!(isdigit(s)));\n    if (s==EOF) exit(0);\n    if (s=='-') base=-1,s=getchar();\n    while (isdigit(s)) k=k*10+(s^'0'),s=getchar();\n    return k*base;\n}\ninline dangqiandianvoid write(int x)\n{\n    static char cnt,num[15];cnt=0;\n    if (!x)\n    {\n        putchar('0');\n        return;\n    }\n    for (;x;x/=10) num[++cnt]=x%10;\n    for (;cnt;putchar(num[cnt--]+48));\n}\nconst int maxn=1e5+100;\nint n,m;\nchar c[maxn];\nint fa[maxn],ch[maxn][26],bj[maxn],dep[maxn],id,root,now;\nmultiset<int> a[maxn];\nll ans;\nvoid add()//\u63d2\u5165\u5230trie\u4e2d\n{\n    m=strlen(c+1);\n    now=root;\n    for (int i=1;i<=m;i++)\n    {\n        if (ch[now][c[i]-'a']==0)\n        {\n            ch[now][c[i]-'a']=++id;\n            fa[id]=now;dep[id]=dep[fa[id]]+1;\n        }\n        now=ch[now][c[i]-'a'];\n    }\n    bj[now]=1;\n}\nmultiset<int>::iterator it;\nvoid hb(int x,int y)//\u542f\u53d1\u5f0f\u5408\u5e76\n{\n    if (a[y].empty()) return;\n    if (a[y].size()>a[x].size()) a[x].swap(a[y]);\n    it=a[y].begin();\n    for (;it!=a[y].end();++it)\n    {\n        a[x].insert(*it);\n    }\n    a[y].clear();\n}\nvoid dfs(int x)\n{\n    int f2=0;\n    for (int i=0;i<26;i++) \n    if (ch[x][i])\n    {\n        f2=1;\n        dfs(ch[x][i]);\n    }//\u904d\u5386\u5b50\u6811\n    for (int i=0;i<26;i++)\n    {\n        if (ch[x][i]) hb(x,ch[x][i]);\n    }\n    if (x==root) return;\n    if (bj[x])\n    {//\u63d2\u5165\u5f53\u524d\u4e32\n        a[x].insert(dep[x]);\n        ans+=dep[x];\n        return;\n    }//\u53d6\u51fa\u6700\u5927\u7684\n    it=a[x].end();--it;\n    ans-=*it;\n    a[x].erase(it);\n    a[x].insert(dep[x]);\n    ans+=dep[x];\n}\nint main()\n{\n#ifdef ylx\n    freopen(\"965e.in\",\"r\",stdin);\n    freopen(\"965e.out\",\"w\",stdout);\n#endif\n    n=read();root=id=1;\n    for (int i=1;i<=n;i++) scanf(\"%s\",c+1),add();\n    dfs(root);\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n//2018\u5e74 05\u6708 24\u65e5 \u661f\u671f\u56db 19:41:52 CST\n```\n\n",
        "postTime": 1527166758,
        "uid": 2674,
        "name": "\u300cQQ\u7ea2\u5305\u300d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF965E \u3010Short Code\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u79cd\u5206\u6cbb+\u8d2a\u5fc3\u7684\u7b97\u6cd5\u3002\n\n\u5148\u628a\u6240\u6709\u5b57\u7b26\u4e32\u6309\u5b57\u5178\u5e8f\u6392\u5e8f\u3002\u6211\u4eec\u53ef\u4ee5\u8d2a\u5fc3\u4e00\u4e0b\uff0c\u5982\u679c\u524di\u4f4d\u5b57\u7b26\u90fd\u76f8\u540c\u7684\u5b57\u7b26\u4e32\u4e2d\u80af\u5b9a\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u4fdd\u7559\u7684\u524d\u7f00\u957f\u5ea6\u4e3ai\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u628a\u5f53\u524d\u6700\u957f\u7684\u90a3\u4e2a\u5b57\u7b26\u4e32\u4fdd\u7559\u524di\u4e2a\u3002\u7136\u540e\u7528\u9012\u5f52\u5b9e\u73b0\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n)$ \uff08\u53ef\u80fdsort\u7684\u590d\u6742\u5ea6\u6709\u70b9\u8ff7\uff09\n\n\u7136\u540e\u697c\u4e0bredbag\u5c0f\u59d0\u59d0\u7684\u7b97\u6cd5\u543c\u50cf\u4e0d\u7528\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u6bcf\u4e2a\u4e32\u7684\u957f\u5ea6\u53ea\u4f1a\u5408\u5e76\u5b83\u7684length\u6b21\uff0c\u800clength\u548c\u662f$O(n)$\u7684\uff0c\u6240\u4ee5\u603b\u64cd\u4f5c\u7684\u6b21\u6570\u5e94\u8be5\u5c31\u662fO(n)\u7684\u3002\n\n```\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<string>\n#define rg register\n#define il inline\n#define vd void\n#define ll long long\n#define N 100010\n#define For(i,x,y) for (rg int i=(x);i<=(y);i++)\n#define Dow(i,x,y) for (rg int i=(x);i>=(y);i--)\n#define cross(i,k) for (rg int i=first[k];i;i=last[i])\nusing namespace std;\nil ll max(ll x,ll y){return x>y?x:y;}\nil ll min(ll x,ll y){return x<y?x:y;}\nil ll read(){\n    ll x=0;int ch=getchar(),f=1;\n    while (!isdigit(ch)&&(ch!='-')&&(ch!=EOF)) ch=getchar();\n    if (ch=='-'){f=-1;ch=getchar();}\n    while (isdigit(ch)){x=(x<<1)+(x<<3)+ch-'0';ch=getchar();}\n    return x*f;\n}\nint n,ans,a[N];\nstring s[N];\n\nil vd solve(int dep,int l,int r){\n\tint L=l,R,Max=0,id;\n\twhile (a[L]<dep&&L<=r) L++;\n\tif (L>r) return;\n\tif (L==r){a[L]=dep;return;}\n\twhile (L<=r){\n\t\tR=L;\n\t\twhile (s[L][dep-1]==s[R][dep-1]&&R<=r) R++;\n\t\tR--,solve(dep+1,L,R);\n\t\tif (a[L]!=dep||L==R){\n\t\t\tMax=0;\n\t\t\tFor(i,L,R)\n\t\t\t\tif (a[i]>Max) Max=a[i],id=i;\n\t\t\tif (Max) a[id]=dep;\n\t\t}\n\t\tL=R+1;\n\t}\n}\n\nint main(){\n\tn=read();\n\tFor(i,1,n) cin>>s[i];\n\tsort(s+1,s+1+n);\n\tFor(i,1,n) a[i]=s[i].length();\n\tsolve(1,1,n);\n\tFor(i,1,n) ans+=a[i];\n\tprintf(\"%d\",ans);\n}\n```",
        "postTime": 1528375287,
        "uid": 25355,
        "name": "\u590f\u8272\u796d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF965E \u3010Short Code\u3011"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\u7ed9\u51fa$n$\u4e2a\u5b57\u7b26\u4e32$s_i$\uff0c\u8981\u6c42\u4e3a\u6bcf\u4e2a\u5b57\u7b26\u4e32\u5206\u914d\u5b83\u7684\u4e00\u4e2a\u975e\u7a7a\u524d\u7f00$pre_i$\uff0c\u4f7f\u5f97\u6240\u6709\u7684$pre_i$\u4e92\u4e0d\u76f8\u540c\uff0c\u4e14\u4f7f\u5f97$pre_i$\u7684\u957f\u5ea6\u548c\u6700\u5c0f\u3002\n### \u9898\u89e3\n- \u9996\u5148\u6211\u4eec\u8981\u5efa\u51fa$n$\u4e2a\u4e32\u7684\u5b57\u5178\u6811\uff0c\u73b0\u5728\u7684\u95ee\u9898\u662f\u7ed9\u5b9a\u4e86\u6811\u4e0a\u7684\u4e00\u4e9b\u70b9\uff0c\u8981\u7ed9\u6bcf\u4e2a\u70b9\u5728\u5b83\u5230\u6839\u7684\u8def\u5f84\u4e0a\u5206\u914d\u4e00\u4e2a\u70b9\u4f7f\u5f97\u8fd9\u4e9b\u70b9\u7684\u6df1\u5ea6\u548c\u6700\u5c0f\u3002\n- \u90a3\u4e48\u9996\u5148\u6bcf\u4e2a\u70b9\u90fd\u53ef\u4ee5\u9009\u81ea\u5df1\u6240\u5728\u7684\u4f4d\u7f6e\u3002\u6211\u4eec\u8bbe$f_i$\u4e3a\u5728$i$\u4e3a\u6839\u7684\u5b50\u6811\u91cc\u7684\u70b9\u90fd\u88ab\u5206\u914d\u4e86\u4e00\u4e2a\u5728\u5b50\u6811\u91cc\u7684\u70b9\u7684\u6700\u5c0f\u65b9\u6848\u3002\n- \u6ce8\u610f\u5230\u5982\u679c$i$\u8fd9\u4e2a\u70b9\u6709\u4e1c\u897f\uff0c\u90a3\u4e48$f_i$\u5c31\u7b49\u4e8e\u6240\u6709\u513f\u5b50\u4e4b\u548c\u3002\u800c\u82e5$i$\u6ca1\u4e1c\u897f,\u90a3\u4e48\u53ef\u4ee5\u4ece\u6240\u6709\u7684\u513f\u5b50\u91cc\u9009\u62e9\u4e00\u4e2a\u6df1\u5ea6\u6700\u6df1\u7684\u70b9\u653e\u5230\u6839\u4e0a\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5bf9\u6bcf\u4e2a$f_i$\u7ef4\u62a4\u4e00\u4e2a\u5806\u3002\u5e76\u6bcf\u6b21\u628a\u6240\u6709\u513f\u5b50\u7684\u5806\u90fd\u5408\u5e76\u8d77\u6765\u3002\n- \u5bf9\u4e8e\u5408\u5e76\uff0c\u6211\u4eec\u53ea\u9700\u8981\u542f\u53d1\u5f0f\u5373\u53ef\uff0c\u5229\u7528priority_queue\u76f8\u5bf9\u6765\u8bf4\u6bd4\u8f83\u65b9\u4fbf\u4e00\u4e9b\u3002\u65f6\u95f4\u590d\u6742\u5ea6$O(nlog^2(n))$.\n```\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <string>\n#include <queue>\nusing namespace std;\nint n, trie[100001][26], dep[100001], tot, ans;\nbool f[100001];\npriority_queue<int> a[100001];\nvoid insert(string s)\n{\n\tint root = 0;\n\tfor (int i = 0; i < (int)s.size(); i++)\n\t{\n\t\tint id = s[i] - 'a';\n\t\tif (!trie[root][id])\n\t\t{\n\t\t\ttrie[root][id] = ++tot;\n\t\t\tdep[tot] = dep[root] + 1;\n\t\t}\n\t\troot = trie[root][id];\n\t}\n\tf[root] = 1;\n}\nvoid merge_heap(int x, int y)\n{\n\tif (a[x].size() < a[y].size())\n\t{\n\t\ta[x].swap(a[y]);\n\t}\n\twhile (!a[y].empty())\n\t{\n\t\ta[x].push(a[y].top());\n\t\ta[y].pop();\n\t}\n}\nvoid dfs(int u)\n{\n\tfor (int i = 0; i < 26; i++)\n\t{\n\t\tif (trie[u][i])\n\t\t{\n\t\t\tdfs(trie[u][i]);\n\t\t}\n\t}\n\tfor (int i = 0; i < 26; i++)\n\t{\n\t\tif (trie[u][i])\n\t\t{\n\t\t\tmerge_heap(u, trie[u][i]);\n\t\t}\n\t}\n\tif (!u)\n\t{\n\t\treturn;\n\t}\n\tif (f[u])\n\t{\n\t\tans += dep[u];\n\t\ta[u].push(dep[u]);\n\t\treturn;\n\t}\n\tans -= a[u].top() - dep[u];\n\ta[u].pop();\n\ta[u].push(dep[u]);\n}\nint main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0);\n\tcout.tie(0);\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tstring s;\n\t\tcin >> s;\n\t\tinsert(s);\n\t}\n\tdfs(0);\n\tprintf(\"%d\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1566041834,
        "uid": 68273,
        "name": "xyf007",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF965E \u3010Short Code\u3011"
    }
]