[
    {
        "content": "# CF1481E Sorting Books\n\n\u9898\u89e3\u6709\u4e00\u4e2a\u5730\u65b9\u6ca1\u8bf4\u6e05\u695a\uff0c\u6211\u4e0b\u9762\u8865\u5145\u3002\n\n\u9884\u5904\u7406\u51fa\u6bcf\u79cd\u989c\u8272\u7684\u6700\u5de6\u6700\u53f3\u4f4d\u7f6e $l_i,r_i$\uff0c\u8003\u8651\u52a8\u6001\u89c4\u5212\u5904\u7406\u9898\u76ee\u7684\u5bf9\u5076\u95ee\u9898\uff0c\u6700\u591a\u80fd\u4fdd\u7559\u51e0\u4e2a\u4e0d\u79fb\u52a8\u3002\u4ee4 $dp_i$ \u4e3a\u540e\u7f00 $suf_i$ \u5373 $a(i,n)$ \u4e2d\u80fd\u4e0d\u52a8\u4e66\u6570\u76ee\u7684\u6700\u5927\u503c\u3002\n\n**\u8f6c\u79fb\uff1a**\n\n\u8003\u8651\u5230\u7b2c $i$ \u4e2a\u4f4d\u7f6e\n\n1. $i$ \u662f\u8fd9\u4e2a\u989c\u8272\u7684\u5de6\u7aef\u70b9\uff0c\u53ef\u4ee5\u628a\u548c\u53f3\u7aef\u70b9\u4e4b\u95f4\u7684\u5f02\u8272\u4e66\u79fb\u8d70\uff0c\u6709\u8f6c\u79fb $dp_i\\leftarrow cnt_{a_i}+dp_{r_{a_i}+1}$\u3002\n2. \u5982\u679c\u4e0d\u662f\uff0c$cnt_{a_i}$ \u4e3a\u540e\u7f00\u4e2d\u989c\u8272\u4e3a $a_i$ \u7684\u6570\u76ee\u3002\u4e0b\u9762\u5c31\u662f\u6211\u8981**\u8865\u5145**\u7684\u5730\u65b9\u3002\u73b0\u5728\u6709\u4e00\u4e2a\u65b9\u6848\u662f\u4fdd\u7559\u540e\u7f00\u4e2d\u989c\u8272\u4e3a $a_i$ \u7684\u4e0d\u52a8\uff0c\u79fb\u52a8\u5176\u4ed6\u7684\uff0c\u90a3\u4e48\u8981\u79fb\u52a8\u591a\u5c11\uff1f\u7531\u4e8e $i$ \u4e0d\u662f\u53f3\u7aef\u70b9\uff0c\u6240\u4ee5\u540e\u7eed\u8fc7\u7a0b\u4e2d\u5728 $i$ \u524d\u9762\u4e14\u8ddf $i$ \u540c\u8272\u7684\u8981\u8ddf $i$ \u76f8\u90bb\u7684\u8bdd\uff0c\u5fc5\u987b\u4e00\u8d77\u79fb\u5230\u540e\u9762\uff0c\u7136\u540e\u518d\u628a $suf_i$ \u4e2d\u6240\u6709\u5f02\u8272\u7684\u518d\u79fb\u51fa\u6765\u3002\u6240\u4ee5\u624d\u6709\u4e86\u8f6c\u79fb $dp_i\\leftarrow cnt_{a_i}$\uff0c\u4e5f\u5c31\u662f\u5176\u5b83\u5168\u90e8\u79fb\u8d70\u7684\u610f\u601d\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u8d39\u7528\u63d0\u524d\u8ba1\u7b97\u7684\u601d\u60f3\u3002\n3. \u5982\u679c\u8981\u79fb\u52a8\u5f53\u524d\u7684\u4e66\uff0c\u8f6c\u79fb $dp_i\\leftarrow dp_{i+1}$\u3002\n\n\u7531\u4e8e\u8981\u79fb\u52a8\u7684\u6700\u5c11\uff0c\u90a3\u4e48\u8981\u4fdd\u7559\u7684\u6700\u591a\uff0c\u6240\u6709\u8f6c\u79fb\u53d6\u4e00\u4e2a\u6700\u5927\u503c\u3002\n\n\u8fd9\u91cc\u518d\u7ed9\u51fa\u4e00\u7ec4\u6837\u4f8b\u4f9b\u7406\u89e3\u7b2c\u4e8c\u70b9\uff0c**2 3 4 5 6 2 2 8**\u7b54\u6848**2**\u3002\n\n### code\n```cpp\nconst int N=1e6;\nint n,m;\nint a[N],dp[N],l[N],r[N],cnt[N];\nsigned main(){\n\tread(n);fs(i,1,n){\n\t\tread(a[i]);if(!l[a[i]])l[a[i]]=i;\n\t\tr[a[i]]=i;\n\t}\n\tfn(i,n,1){\n\t\tdp[i]=dp[i+1];\n\t\t++cnt[a[i]];\n\t\tif(i!=l[a[i]])dp[i]=max(dp[i],cnt[a[i]]);\n\t\telse dp[i]=max(dp[i],cnt[a[i]]+dp[r[a[i]]+1]);\n\t}\n\tprintf(\"%d\",n-dp[1]);\n\treturn 0;\n}\n```",
        "postTime": 1613651867,
        "uid": 45648,
        "name": "\u6d41\u6cab",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1481E Sorting Books"
    },
    {
        "content": "\u8fd9\u4e2a\u5b98\u65b9\u9898\u89e3\u53ea\u8bb2\u4e86\u8f6c\u79fb\u65b9\u7a0b\uff0c\u6839\u672c\u6ca1\u8bb2\u539f\u7406\uff0c\u8fd9\u91cc\u5168\u90e8\u91cd\u65b0\u505a\u4e2a\u89e3\u91ca\u3002\n\n\u6211\u4eec\u5148\u8003\u8651\u7b54\u6848\u7684\u8303\u56f4\u3002\u5982\u679c\u6211\u4eec\u8d2a\u5fc3\uff0c\u90a3\u4e48\u6700\u591a\u64cd\u4f5c\u6b21\u6570\u4e3a $n$ \u6b21\uff0c\u4e14\u4e00\u672c\u4e66\u6700\u591a\u4f1a\u88ab\u79fb\u52a8\u4e00\u6b21\u3002\n\n### \u5b9a\u72b6\u6001\n\n\u6211\u4eec\u4ee4 $l_i,r_i$ \u5206\u522b\u4e3a\u7b2c $i$ \u79cd\u989c\u8272\u4ece\u5de6\u5f80\u53f3\u6570\u6700\u65e9\u51fa\u73b0/\u6700\u665a\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\u4ee4 $f_i$ \u4e3a\u5728\u6700\u540e\u5c06\u6240\u6709\u4e66\u5f52\u597d\u7c7b\u540e\uff0c$[i,n]$ \u5185\u6700\u591a\u6709\u591a\u5c11\u672c\u4e66\u65e0\u9700\u79fb\u52a8\u3002\u660e\u663e\uff0c\u6211\u4eec\u9700\u8981\u5012\u5e8f\u679a\u4e3e\u3002\u6700\u540e\u7684\u7b54\u6848\u4e3a $n-f_1$\u3002\n\n\u6211\u4eec\u8bb0 $tot_{i,j}$ \u4e3a\u5728 $[j,n]$ \u4e2d\uff0c\u989c\u8272\u4e3a $i$ \u7684\u4e66\u672c\u6709\u591a\u5c11\u672c\u3002\n\n### \u5217\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\n\n$$f_i=\\max\\begin{cases}\nf_{i+1}&1\\leq i<n\\\\\ntot_{a_i,i}&i\\neq l_{a_i}\\\\\ntot_{a_i,i}+f_{r_{a_i}+1}&i=l_{a_i}\n\\end{cases}$$\n\n- \u9996\u5148\u6211\u4eec\u8003\u8651\u7684\u662f $i$ \u8fd9\u672c\u4e66\u8981\u79fb\u52a8\uff0c\u90a3\u4e48\u6b64\u65f6\u6700\u591a\u53ef\u4ee5\u4fdd\u7559\u4e0d\u52a8\u7684\u5c31\u662f $f_{i+1}$ \u672c\u3002\n- \u5982\u679c $i$ \u8fd9\u672c\u4e66\u4e0d\u79fb\u52a8\uff0c\u90a3\u4e48\u663e\u7136\u989c\u8272\u4e3a $a_i$ \u7684\u4e66\u90fd\u4e0d\u8981\u52a8\uff0c\u5373 $tot_{a_i,i}$ \u672c\u3002\u90a3\u4e3a\u4ec0\u4e48\u5728 $i\\neq l_{a_i}$\uff0c\u4e0d\u52a0\u4e0a $f_{r_{a_i}+1}$ \u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u91cd\u70b9\u5173\u6ce8\u4e00\u4e0b\u6837\u4f8b\uff1a\n\n```plain\n5\n1 2 2 1 3\n```\n\n\u82e5\u52a0\u4e0a\u4e86\uff0c\u6211\u4eec\u5f97\u5230\u7684 $f$ \u6570\u7ec4\u4e3a $4,4,3,2,1$\uff08\u4e0b\u6807\u4ece $1$ \u5f00\u59cb\uff09\u3002\u660e\u663e\u662f\u9519\u8bef\u7684\uff0c\u5e94\u8be5\u4e3a $3$\u3002\u4e3a\u4ec0\u4e48\u4f1a\u9519\u5462\uff1f\u6211\u4eec\u6765\u5177\u4f53\u5206\u6790\u53d1\u751f\u4e86\u751a\u4e48\u3002\n\n\u4ece\u672c\u8d28\u51fa\u53d1\uff0c\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u4fdd\u6301\u989c\u8272\u4e3a $a_i$ \u7684\u4e66\u4e0d\u79fb\u52a8\uff0c\u5c31\u662f\u56e0\u4e3a\u628a $[i,r_{a_i}]$ \u4e2d\u989c\u8272\u4e0d\u4e3a $a_i$ \u7684\u5168\u90e8\u79fb\u8d70\u3002\u5982\u679c\u8fc7\u65e9\u5730\u8fdb\u884c\u4e86\u4e0e\u6709\u533a\u95f4\u7684\u5408\u5e76\uff0c\u53ef\u80fd\u5c31\u4f1a\u6709\u4e24\u4e2a\u533a\u95f4\u6709\u90e8\u5206\u91cd\u53e0\u3002\u53ea\u6709\u7b49\u6240\u6709\u989c\u8272\u4e3a $a_i$ \u7684\u6570\u90fd\u51fa\u73b0\u8fc7\u4e86\uff0c\u624d\u53ef\u4ee5\u8fdb\u884c\u533a\u95f4\u7684\u5408\u5e76\u3002\n\n\u90a3\u4e0a\u9762\u90a3\u4e2a\u6837\u4f8b\u8bf4\u4e8b\uff0c\u6211\u4eec\u6765\u7406\u6e05\u5173\u7cfb\uff1a\n\n- $f_1=f_2$\n- $f_2=f_4+1$\n- $f_4=f_5+1$\u3002\n\n\u597d\uff0c\u5230\u8fd9\u91cc\uff0c\u5c31\u51fa\u73b0\u4e86\u95ee\u9898\u3002\u6211\u4eec\u5df2\u7ecf\u5c06 $[4,4],[5,5]$ \u5408\u5e76\u4e3a\u4e86 $[4,5]$\u3002\u800c\u5728 $[2,3]$ \u51fa\u73b0\u540e\uff0c\u6211\u4eec\u53c8\u8fdb\u884c\u4e86\u5408\u5e76\uff0c\u6709\u533a\u95f4 $[2,5]$\u3002\u8bf4\u660e\u6211\u4eec\u4e0d\u53ef\u80fd\u5c06 $2$ \u79fb\u8d70\u4e86\u3002\u6211\u997f\u4e48\u60a8\u6b64\u65f6\u4e3a\u4e86\u505a\u51fa\u6700\u4f18\u51b3\u7b56\uff0c\u53ea\u80fd\u5c06\u7b2c\u4e00\u4e2a $1$ \u79fb\u8d70\u3002\u660e\u663e\u662f\u9519\u8bef\u7684\u3002\u56e0\u4e3a\u5728 $[1,4]$ \u533a\u95f4\u53ef\u4ee5\u88ab\u8ba1\u7b97\u65f6\uff0c$[4,4]$ \u5df2\u7ecf\u201c\u540d\u82b1\u6709\u4e3b\u201d\u4e86\u3002\n\n### \u8fb9\u754c&\u521d\u503c\n\n\u65e0\u3002~~\u597d\u5e72\u8106\u554a\u3002~~\n\n```cpp\n//Don't act like a loser.\n//This code is written by huayucaiji\n//You can only use the code for studying or finding mistakes\n//Or,you'll be punished by Sakyamuni!!!\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\n\nint read() {\n\tchar ch=getchar();\n\tint f=1,x=0;\n\twhile(ch<'0'||ch>'9') {\n\t\tif(ch=='-')\n\t\t\tf=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9') {\n\t\tx=x*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn f*x;\n}\n\nconst int MAXN=5e5+10; \n\nint n;\nint a[MAXN],l[MAXN],r[MAXN],f[MAXN],tot[MAXN];\n\nsigned main() {\n\tcin>>n;\n\tfor(int i=1;i<=n;i++) {\n\t\ta[i]=read();\n\t\tif(!l[a[i]]) {\n\t\t\tl[a[i]]=i;\n\t\t}\n\t}\n\tfor(int i=n;i;i--) {\n\t\tif(!r[a[i]]) {\n\t\t\tr[a[i]]=i;\n\t\t}\n\t}\n\t\n\tfor(int i=n;i;i--) {\n\t\ttot[a[i]]++;\n\t\tif(i==l[a[i]]) {\n\t\t\tf[i]=max(tot[a[i]]+f[r[a[i]]+1],f[i+1]);\n\t\t}\n\t\telse {\n\t\t\tf[i]=max(f[i+1],tot[a[i]]);//\u6b63\u786e\n\t\t//\tf[i]=max(tot[a[i]]+f[r[a[i]]+1],f[i+1]\uff1b//\u9519\u8bef\n\t\t}\n\t}\n\t\n\tcout<<n-f[1]<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1613887968,
        "uid": 132976,
        "name": "huayucaiji",
        "ccfLevel": 6,
        "title": "CF1481E"
    },
    {
        "content": "## E - Sorting Books\n\n\u4e00\u6392\u4e66\u67b6\u4e0a\u6709 $n$ \u672c\u4e66\u6392\u6210\u4e00\u6392\uff0c\u6bcf\u672c\u4e66\u4e0a\u6709\u4e00\u4e2a\u989c\u8272 $a_i$\uff0c\u4f60\u53ef\u4ee5\u6bcf\u6b21\u5c06\u4e00\u672c\u4e66\u79fb\u52a8\u5230\u4e66\u67b6\u7684\u6700\u53f3\u7aef\uff0c\u5982\u679c\u4e66\u67b6\u4e0a\u7684\u4e66\uff0c\u989c\u8272\u76f8\u540c\u7684\u4e66\u90fd\u6392\u5230\u4e86\u4e00\u5757\uff0c\u6211\u4eec\u5c31\u8ba4\u4e3a\u4ed6\u662f\u6f02\u4eae\u7684\uff0c\u8bf7\u95ee\u5c06\u8fd9\u4e2a\u4e66\u67b6\u901a\u8fc7\u4e0a\u9762\u7684\u90a3\u4e00\u79cd\u64cd\u4f5c\u6392\u6210\u6f02\u4eae\u7684\u4e66\u67b6\uff0c\u6700\u5c11\u9700\u8981\u51e0\u6b21\u64cd\u4f5c\uff1f\n\n**Solution**\n\n\u5176\u5b9e\u662f\u8d85\u7ea7\u7b80\u5355\u7684\u4e00\u9053\u9898 ~\n\n\n\u9996\u5148\u6839\u636e\u9898\u610f\uff0c\u5148\u4e0d\u8003\u8651\u6700\u4f18\u89e3\uff0c\u6211\u4eec\u76f4\u63a5\u5168\u90e8\u5f80\u53f3\u4e71\u6254\u5c31\u4e00\u5b9a\u80fd\u6ee1\u8db3\uff0c\u4f46\u662f\u4e0d\u4e00\u5b9a\u662f\u6700\u4f18\u89e3\uff0c\u89e3\u51b3\u6700\u4f18\u89e3\u95ee\u9898\uff0c\u5f88\u660e\u663e\u8981\u4e48\u8d2a\u5fc3\uff0c\u8981\u4e48DP\uff0c\u8981\u4e48\u8d2a\u5fc3 + DP\u3002\n\n\u9996\u5148\u8003\u8651\u8d2a\u5fc3\u7b56\u7565\uff0c\u6211\u4eec\u4e00\u4e0a\u6765\u6700\u76f4\u89c2\u7684\u611f\u53d7\u5c31\u662f\uff0c\u5982\u679c\u6709\u4e00\u79cd\u989c\u8272\uff0c\u6ca1\u6709\u5b8c\u5168\u5728\u4e00\u5757\uff0c\u4e2d\u95f4\u53c2\u6742\u7740\u5176\u4ed6\u989c\u8272\u7684\u4e66\uff0c\u4f46\u662f\u8fd9\u79cd\u989c\u8272\u7684\u4e66\u7684\u6570\u91cf\u975e\u5e38\u975e\u5e38\u7684\u591a\uff0c\u5f88\u660e\u663e\u6211\u4eec\u5c31\u53ef\u4ee5\u8d2a\u5fc3\u5730\u628a\u8fd9\u79cd\u989c\u8272\u4e2d\u95f4\u7684\u4e66\u79fb\u8d70\uff0c\u8fd9\u4e9b\u8fd9\u79cd\u989c\u8272\u7684\u4e66\u5c31\u4f1a\u81ea\u52a8\u5408\u5e76\u5230\u4e00\u5757\uff0c\u80af\u5b9a\u6bd4\u628a\u8fd9\u79cd\u989c\u8272\u7684\u5f88\u591a\u5f88\u591a\u7684\u4e66\u4e00\u4e2a\u4e00\u4e2a\u4e22\u5230\u6700\u53f3\u8fb9\u8981\u6765\u7684\u5feb\uff0c\u8fd9\u4e00\u70b9\u5f88\u5bb9\u6613\u60f3\u5230\u3002\n\n\u6240\u4ee5\u6211\u4eec\u6765\u5c1d\u8bd5\u627e\u4e00\u4e0b\uff0c\u6709\u6ca1\u6709\u8fd9\u79cd\u989c\u8272\u7684\u4e66\uff0c\u6216\u8005\u597d\u51e0\u79cd\uff0c\u53ea\u8981\u533a\u95f4\u4e0d\u91cd\u53e0\u5c31\u597d\uff0c\u6570\u91cf\u6bd4\u5b83\u4e2d\u95f4\u5176\u4ed6\u989c\u8272\u7684\u4e66\u7684\u6570\u91cf\u8fd8\u8981\u591a\uff0c\u4e5f\u5c31\u662f\u627e\u5230\u82e5\u5e72\u4e2a\u533a\u95f4\uff0c\u4f46\u662f\u76f4\u63a5\u627e\u533a\u95f4\u6709\u70b9\u56f0\u96be\uff0c\u9898\u76ee\u53ea\u9700\u8981\u6211\u4eec\u8f93\u51fa\u6700\u5c11\u64cd\u4f5c\u6b21\u6570\u5373\u53ef\uff0c\u6240\u4ee5\u5728\u6709\u4e86\u8fd9\u4e2a\u5b8c\u7f8e\u7684\u8d2a\u5fc3\u7b56\u7565\u4ee5\u540e\uff0c\u6211\u4eec\u8003\u8651DP\u6765\u6a21\u62df\u8fd9\u4e2a\u8fc7\u7a0b\u3002\n\n\n\u6211\u4eec\u8bbe $f[i]$ \u8868\u793a $i\\cdots n$ \u533a\u95f4\u91cc\u4e0d\u9700\u8981\u79fb\u52a8\u7684\u4e66\u7684\u6700\u5927\u6570\u91cf\uff0c\u5f88\u663e\u7136\u7b54\u6848\u5c31\u662f $n-f[1]$\u3002\u9664\u53bb\u4e0d\u9700\u8981\u79fb\u52a8\u7684\uff0c\u628a\u5269\u4e0b\u7684\u6309\u7167\u989c\u8272\u7684\u5206\u7c7b\u4e22\u5230\u53f3\u8fb9\u5c31\u884c\u4e86\u3002\n\n\u6211\u4eec\u60f3\u8981\u627e\u5230\u7684\u662f\u533a\u95f4\u91cc\u4e66\u6570\u91cf\u6700\u591a\u7684\u989c\u8272\uff0c\u5e76\u4e14\u53ef\u4ee5\u662f\u5f88\u591a\u79cd\u533a\u95f4\u4e0d\u91cd\u53e0\u7684\u989c\u8272\uff0c\u8981\u5148\u627e\u533a\u95f4\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u5b58\u4e00\u4e0b\u6bcf\u79cd\u989c\u8272\u7684\u51fa\u73b0\u7684\u5de6\u53f3\u533a\u95f4 $l_i$ \u548c $r_i$ \uff0c\u56e0\u4e3a\u8981\u627e\u6570\u91cf\u6700\u591a\u7684\u90a3\u4e00\u79cd\uff0c\u6240\u4ee5\u6211\u4eec\u518d\u4f7f\u7528 $cnt$ \u6570\u7ec4\u5b58\u4e00\u4e0b\u6bcf\u79cd\u989c\u8272\u51fa\u73b0\u7684\u6b21\u6570\u3002\u56e0\u4e3a\u73b0\u5728\u8003\u8651\u7684\u662f\u9006\u5e8f DP\uff0c\u6240\u4ee5\u518d\u5b58\u4e00\u4e0b $\\text cnt\\_post_i$ \uff0c\u8868\u793a\u7684\u662f $i\\cdots n$ \u4e4b\u95f4\u6bcf\u79cd\u989c\u8272\u7684\u4e66\u7684\u6570\u91cf\u3002\n\n\u8003\u8651\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n\uff081\uff09$\\tt f\\ [i] = \\max\\{f\\ [i], f[i + 1]\\}$\n\n\n\uff082\uff09$\\tt  f[i] = \\max\\{f [i], {cnt\\_post} [ a[ i]]\\}$\n\n\u6211\u4eec\u53d6 $i\\cdots n$ \u91cc\u5f53\u524d\u6700\u4f18\u7684\u4e00\u79cd\u989c\u8272\uff0c\u4e5f\u5c31\u662f\u53ea\u9009\u62e9\u4e00\u4e2a\u533a\u95f4\u7684\u60c5\u51b5\u3002\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u5199\u6210  $\\tt  f[i] = \\max\\{f [i], {cnt\\_post} [ a[ i]]+f[r[a[i]]+1]\\}$ \u5462\uff0c\u4e5f\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u4e0d\u80fd\u4e00\u5757\u52a0\u4e0a\u5f53\u524d\u989c\u8272\u533a\u95f4\u53f3\u8fb9\u7684\u6700\u4f18\u89e3\u5462\uff1f\u8fd9\u6837\u770b\u4e0a\u53bb\u597d\u50cf\u6ca1\u4ec0\u4e48\u6bdb\u75c5\u5440\uff1f\n\n\u53c2\u89c1\u6837\u4f8b\uff1a\n\n```cpp\n5\n1 2 2 1 3\n```\n\n```cpp\n2\n```\n\n\u4f1a\u53d1\u73b0\u5982\u679c\u5728\u6ca1\u6709\u5b8c\u5168\u5b8c\u6574\u7684\u533a\u95f4\u7684\u57fa\u7840\u4e4b\u4e0a\u66f4\u65b0\uff0c\u5c31\u4f1a\u5bfc\u81f4\u51e0\u4e2a\u533a\u95f4\u91cd\u53e0\uff0c\u5f97\u5230\u5b9e\u9645\u4e0a\u662f\u9519\u8bef\u7684 \u201c\u6700\u4f18\u89e3\u201d\n\n\uff083\uff09\u5f53 $\\tt l[a[i]]=i$\u65f6\uff0c$\\tt f[i]=max\\{cnt[a[i]]+f[r[a[i]]+1]\\}$\n\n\u8fd9\u91cc\u6211\u4eec\u5df2\u7ecf\u5b8c\u5168\u8d70\u5b8c\u4e86\u989c\u8272 $\\tt a[i]$ \u7684\u6574\u4e2a\u533a\u95f4\uff0c\u53ef\u4ee5\u8ddf\u5176\u4ed6\u533a\u95f4\u5408\u5e76\u4ee5\u627e\u5230\u6700\u4f18\u89e3\uff0c\u4e5f\u4e0d\u4f1a\u5bfc\u81f4\u533a\u95f4\u91cd\u53e0\u3002\n\n\n\u8fd9\u4e2a\u8f6c\u79fb\u65b9\u7a0b\u5b9e\u9645\u4e0a\u5c31\u662f\u9009\u62e9\u533a\u95f4 $[l_{a_i},r_{a_i}]$ \u91cc\uff0c\u989c\u8272 $a_i$ \u4e0d\u79fb\u52a8\uff0c\u56e0\u4e3a $f[i]$ \u5b58\u7684\u662f $i\\cdots n$ \u91cc\u4e0d\u9700\u8981\u79fb\u52a8\u7684\u4e66\u7684\u6700\u5927\u6570\u91cf\uff0c\u6240\u4ee5\u8981\u52a0\u4e0a $r_{a_i}$ \u53f3\u8fb9\u7684 $f$ \uff0c\u5e94\u8be5\u5f88\u597d\u7406\u89e3 ~\n\n\n\n**Code**\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <map>\n#include <vector>\n\nusing namespace std;\nconst int N = 5e5 + 7, mod = 1e9 + 7;\ntypedef long long ll;\ntypedef int itn;\n\nitn a[N], l[N], r[N];\nint cnt[N], cnt_post[N];\nitn n, m;\nint f[N];\n\nint main()\n{\n    scanf(\"%d\", &n);\n    for(int i = 1; i <= n; ++ i) {\n        scanf(\"%d\", &a[i]);\n        if(l[a[i]] == 0) l[a[i]] = i;\n        r[a[i]] = i;\n        cnt[a[i]] ++ ;\n    }\n\n    for(int i = n; i >= 1; -- i) {\n        f[i] = f[i + 1];\n        cnt_post[a[i]] ++ ;\n        if(i == l[a[i]])\n            f[i] = max(f[i], f[r[a[i]] + 1] + cnt[a[i]]);\n        else f[i] = max(f[i], cnt_post[a[i]]);\n    }\n    printf(\"%d\\n\", n - f[1]);\n    return 0;\n}\n\n```\n\n\u5f53\u7136\uff0c\u6211\u4eec\u4e0a\u9762\u4f7f\u7528\u9006\u5e8f\u6765\u6c42\uff0c\u5b9e\u9645\u4e0a\u6b63\u5e8f\u9006\u5e8f\u6ca1\u6709\u4efb\u4f55\u533a\u522b ~ \n\n\n-----------\n\n\u725b\u903c\u7fa4\u53cb\u7528\u7ebf\u6bb5\u6811\u641e\u51fa\u6765\u4e86...\n\nwxyyyds\n\n%%%\n\n~~\u6211\u8fd8\u6ca1\u770b\u61c2\u5565\u610f\u601d~~ \n```cpp\n#include <iostream>\n\nnamespace wxy{\nconst int N = 5e5 + 5,inf = 1e9 + 5;\n#define int long long\nint a[N],f[N],lst[N],fst[N],pre[N],cnt[N],n;\nstruct node{int l,r,add,max;}t[N << 2];\ninline void pushup(int u){t[u].max = std::max(t[u << 1].max,t[u << 1 | 1].max);}\ninline void pushdown(int u){\n    if (t[u].add){\n        t[u << 1].max += t[u].add; t[u << 1 | 1].max += t[u].add;\n        t[u << 1].add = t[u << 1 | 1].add = t[u].add; t[u].add = 0; \n    }\n}\ninline void build(int u,int l,int r){\n    t[u].l = l; t[u].r = r; t[u].add = 0;\n    if (l == r){t[u].max = cnt[l]; return;}\n    int mid = l + r >> 1;\n    build(u << 1,l,mid);\n    build(u << 1 | 1,mid + 1,r);\n    pushup(u);\n}\ninline void cge(int u,int l,int r,int v){\n    if (t[u].l == l && t[u].r == r){\n        t[u].max += v; t[u].add += v;\n        return;\n    }\n    int mid = t[u].l + t[u].r >> 1;\n    pushdown(u);\n    if (r <= mid) cge(u << 1,l,r,v);\n    else if (l > mid) cge(u << 1 | 1,l,r,v);\n    else {cge(u << 1,l,mid,v); cge(u << 1 | 1,mid + 1,r,v);}\n    pushup(u);\n}\ninline int query(int u,int l,int r){\n    if (t[u].l == l && t[u].r == r) return t[u].max;\n    pushdown(u);\n    int mid = t[u].l + t[u].r >> 1;\n    if (r <= mid) return query(u << 1,l,r);\n    else if (l > mid) return query(u << 1 | 1,l,r);\n    else return std::max(query(u << 1,l,mid),query(u << 1 | 1,mid + 1,r));\n}\ninline void main(){\n    std::cin >> n;\n    for (int i = 1; i <= n; i++) std::cin >> a[i];\n    for (int i = 1; i <= n; i++){\n        pre[i] = lst[a[i]];\n        lst[a[i]] = i;\n        cnt[a[i]]++;\n    }\n    int pos = n;\n    for (int i = n; i >= 1; i--){\n        if (a[i] == a[n]) pos = i;\n        else break;\n    }\n    int cr = cnt[a[n]] - (n - pos + 1);\n    for (int i = 1; i <= n; i++)\n        if (i != a[n]) cr += cnt[i];\n    for (int i = 1; i <= n; i++)\n        if (fst[a[i]] == 0) fst[a[i]] = i;\n    int premax = 0;\n    for (int i = 1; i <= n; i++){\n        if (fst[a[i]] == i){\n            f[i] = 1;\n            f[i] = std::max(f[i],premax + 1);\n        }else{\n            f[i] = f[pre[i]] + 1;\n        }\n        if (lst[a[i]] == i) premax = std::max(premax,f[i]);\n    }\n    int ct = 0;\n    int ans = n - f[n];\n    for (int i = 1; i <= n; i++){\n        if (a[i] == a[n]) continue;\n        if (lst[a[i]] == i) ans = std::min(ans,cr - f[i]);\n    }\n    for (int i = 1; i <= n; i++)\n        if (cnt[i] == 0) cnt[i] = -inf;\n    build(1,1,n);  \n    for (int i = 1; i <= n; i++){\n        cge(1,a[i],a[i],-1);\n        if (lst[a[i]] != i) continue;\n        if (a[i]-1>=1)cge(1,1,a[i]-1,f[i]);\n        if (a[i]+1<=n)cge(1,a[i]+1,n,f[i]);\n        ans = std::min(ans,n - query(1,1,n));\n        if (a[i]-1>=1)cge(1,1,a[i]-1,-f[i]);\n        if (a[i]+1<=n)cge(1,a[i]+1,n,-f[i]);\n    }\n   std::cout << ans;\n}\n}signed main(){wxy::main(); return 0;}\n```",
        "postTime": 1613618231,
        "uid": 262605,
        "name": "fanfansann",
        "ccfLevel": 0,
        "title": "CF1481E Sorting Books \u8d85\u9ad8\u8d28\u91cf\u9898\u89e3"
    },
    {
        "content": "[\u535a\u5ba2\u56ed\u67e5\u770b](https://www.cnblogs.com/AIskeleton/p/16838444.html)\n\n$* \\text{Defficult:} \\color{Red}{2500}$\n\n\u4e00\u9053\u5f88\u6709 AT \u98ce\u683c\u7684 DP\u3002\n\n## Description\n\n\u6709 $n$ \u672c\u4e66\uff0c\u6bcf\u672c\u4e66\u6709\u4e00\u4e2a\u989c\u8272\uff0c\u6bcf\u6b21\u64cd\u4f5c\u53ef\u4ee5\u5c06\u4e00\u672c\u4e66\u79fb\u52a8\u5230\u6700\u53f3\u3002\n\n\u6c42\u95ee\u4f7f\u6240\u6709\u76f8\u540c\u989c\u8272\u7684\u4e66\u76f8\u90bb\u7684\u6700\u5c0f\u79fb\u52a8\u6b21\u6570\u3002\n\n$n \\le 5 \\cdot 10^5$\n\n## Solution\n\n\u9996\u5148\u53ef\u4ee5\u60f3\u5230\uff0c\u6700\u5927\u7684\u79fb\u52a8\u6b21\u6570\u4e0d\u4f1a\u8d85\u8fc7 $n$\uff0c\u4e14\u6bcf\u672c\u4e66\u7684\u79fb\u52a8\u6b21\u6570\u4e0d\u4f1a\u8d85\u8fc7\u4e00\u6b21\u3002\n\n\u56e0\u4e3a\u663e\u7136\uff0c\u6240\u6709\u4e66\u6309\u7167\u989c\u8272\u6392\u5e8f\u7136\u540e\u5206\u522b\u79fb\u52a8\u5373\u53ef\u3002\n\n\u53cd\u5411\u8003\u8651\uff0c\u8bbe\u6cd5\u6c42\u51fa\u4e0d\u7528\u79fb\u52a8\u7684\u4e66\u7684\u6700\u5927\u503c\u3002\n\n\u5bf9\u4e8e\u6bcf\u79cd\u989c\u8272\u7684\u6570\uff0c\u8bb0\u5f55\u5176\u6700\u5de6\u8fb9\u51fa\u73b0\u7684\u4f4d\u7f6e $l_i$\uff0c\u548c\u6700\u53f3\u8fb9\u51fa\u73b0\u7684\u4f4d\u7f6e $r_i$\u3002\n\n\u8bbe $f_i$ \u8868\u793a\u4f7f\u4f4d\u7f6e\u5728\u8303\u56f4 $[i,n]$ \u4e4b\u5185\u7684\u4e66\u6309\u7167\u8981\u6c42\u6392\u5217\u7684**\u6700\u5927\u4e0d\u79fb\u52a8\u7684\u4e66\u7684\u6570\u91cf**\u3002\n\n\u8003\u8651\u5982\u4f55\u8f6c\u79fb\uff1a\n\n\u9996\u5148\uff0c\u6240\u6709\u60c5\u51b5\u4e0b\u7684 $i$\uff0c\u90fd\u53ef\u4ee5\u9009\u62e9\u79fb\u52a8\uff0c\u4f7f\u4e4b\u4e0e\u5176\u4ed6\u540c\u989c\u8272\u7684\u4e66\u76f8\u90bb\uff0c\u5373 $f_i =f_{i+1}$\u3002\n\n\u8f6c\u79fb\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8bb0\u5f55\u6b64\u65f6\u6bcf\u79cd\u4e66\u7684\u51fa\u73b0\u6b21\u6570 $cnt_i$\u3002\n\n\u5269\u4e0b\u7684\u8f6c\u79fb\u8981\u5206\u60c5\u51b5\u8ba8\u8bba\u3002\n\n- $i = l_{a_i}$\n\n\u6b64\u65f6\u53ef\u4ee5\u9009\u62e9\u4e0d\u79fb\u52a8\u6240\u6709\u989c\u8272\u4e3a $a_i$ \u7684\u4e66\uff0c\u6709\u8f6c\u79fb $f_{i} = cnt_{a_i} + f_{r_{a_i} +1}$\u3002\n\n- $i \\ne l_i$\n\n\u8ddf\u4e0a\u9762\u4e00\u6837\uff0c\u8003\u8651\u989c\u8272\u4e3a $a_i$ \u7684\u4e66\u4e0d\u79fb\u52a8\u3002\n\n\u6b64\u65f6\u7684\u8f6c\u79fb\u662f $f_i = cnt_{a_i}$\u3002\n\n\u6bd4\u5982\u8003\u8651 $[1,2,2,1,1,3]$\uff0c\u5f53\u524d $i=4$ \u7684\u60c5\u51b5\u3002\n\n\u5982\u679c\u9009\u62e9\u4e0a\u8ff0\u8f6c\u79fb\uff0c\u5b9e\u9645\u4e0a\u7684\u64cd\u4f5c\u662f\uff1a\n\n$[1,2,2,1,1,3] \\implies [2,2,1,1,3,1] \\implies [2,2,1,1,1,3]$\uff0c\u64cd\u4f5c\u6b21\u6570\u4e3a $2$\uff0c\u7b49\u4e8e $cnt_{a_i}$\u3002\n\n\u603b\u7ed3\u4e00\u4e0b\uff0c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5f0f\u662f\uff1a\n$$\nf_i = \\max \\begin{cases}f_{i+1}\\\\cnt_{a_i}&i \\ne l_{a_i}\\\\f_{r_{a_i}+1}&i=l_{a_i}\\end{cases}\n$$\n\u6700\u540e\u7684\u7b54\u6848\u5c31\u662f $n-f_1$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n)$\u3002\n\n## Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define L(i,j,k) for(int (i)=(j);i<=(k);(i)++)\n#define R(i,j,k) for(int (i)=(j);i>=(k);(i)--)\n#define FST ios::sync_with_stdio(0);cin.tie(0);\nconst int N=2e6+100;\nint n,a[N],l[N],r[N],cnt[N],f[N];\nsigned main(){\n  FST;cin>>n;L(i,1,n) cin>>a[i],r[a[i]]=i;\n  L(i,1,n) if(!l[a[i]]) l[a[i]]=i;\n  R(i,n,1){\n    cnt[a[i]]++;if(i==l[a[i]]) \n        f[i]=max(cnt[a[i]]+f[r[a[i]]+1],f[i+1]);\n    else f[i]=max(f[i+1],cnt[a[i]]);\n  }cout<<n-f[1];\n}//CSP-S 2022 RP++\n```\n",
        "postTime": 1667016047,
        "uid": 540715,
        "name": "A_I_Skeleton",
        "ccfLevel": 0,
        "title": "CF1481E"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u989c\u8272\u5e8f\u5217 $a$\uff0c\u6bcf\u6b21\u64cd\u4f5c\u53ef\u4ee5\u628a\u4e00\u4e2a\u5143\u7d20\u653e\u5728\u5e8f\u5217\u7684\u6700\u53f3\u7aef\uff0c\u95ee\u8ba9\u76f8\u540c\u989c\u8272\u7684\u5143\u7d20\u653e\u5728\u4e00\u8d77\u7684\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\u3002\n\n## \u601d\u8def\n\n\u6211\u4eec\u53d1\u73b0\u53ea\u8981\u5c06\u51e0\u4e2a\u989c\u8272\u76f8\u540c\u7684\u5143\u7d20\u4e4b\u95f4\u7684\u5143\u7d20\u5168\u90e8\u64cd\u4f5c\u8d70\uff0c\u90a3\u4e48\u8fd9\u51e0\u4e2a\u76f8\u540c\u989c\u8272\u7684\u5143\u7d20\u5c31\u653e\u5728\u4e86\u4e00\u8d77\uff0c\u800c\u8fd9\u51e0\u4e2a\u5143\u7d20\u4e0d\u9700\u8981\u88ab\u64cd\u4f5c\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5 $dp$ \u4e0d\u9700\u8981\u88ab\u64cd\u4f5c\u7684\u5143\u7d20\u7684\u6700\u5927\u6570\u91cf\u3002\u8bbe $dp_i$ \u8868\u793a\u4ee4\u533a\u95f4 $[i,n]$ \u4e4b\u95f4\u7684\u5143\u7d20\u6ee1\u8db3\u76f8\u540c\u989c\u8272\u7684\u5143\u7d20\u653e\u5728\u4e00\u8d77\u7684\u4e0d\u9700\u8981\u88ab\u64cd\u4f5c\u7684\u5143\u7d20\u7684\u6700\u5927\u6570\u91cf\uff0c$c_i$ \u8bb0\u5f55\u989c\u8272\u4e3a $i$ \u7684\u5143\u7d20\u6570\u91cf,$l_i$ \u8bb0\u5f55\u989c\u8272\u4e3a $i$ \u7684\u5143\u7d20\u6700\u9760\u5de6\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c$r_i$ \u8bb0\u5f55\u989c\u8272\u4e3a $i$ \u7684\u5143\u7d20\u6700\u9760\u53f3\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\u4ece\u5927\u5230\u5c0f\u679a\u4e3e $i$\uff0c\u5f53\u52a0\u8fdb\u6765\u4e00\u4e2a\u5143\u7d20 $a_i$\uff0c\u5148\u4ee4 $c_{a_i}$ \u52a0 $1$\u3002\u5982\u679c\u4e0e\u5b83\u989c\u8272\u76f8\u540c\u7684\u5143\u7d20\u90fd\u5728\u5b83\u53f3\u8fb9\u5373 $l_{a_i}=i$\uff0c\u90a3\u4e48 $dp_i=max(dp_{i+1},c_{a_i}+dp_{r_{a_i}+1})$\uff0c\u5373\u5c1d\u8bd5\u7528\u6240\u6709\u989c\u8272 $a_i$ \u7684\u5143\u7d20\u90fd\u4e0d\u64cd\u4f5c\u6765\u66f4\u65b0\u7b54\u6848\uff1b\u5982\u679c $l_{a_i} \\neq i$\uff0c\u90a3\u4e48\u5c1d\u8bd5\u7528\u989c\u8272\u4e3a $a_i$ \u4e14\u5728 $i$ \u53ca\u5176\u53f3\u8fb9\u7684\u5143\u7d20\u4e0d\u64cd\u4f5c\u6765\u66f4\u65b0\u7b54\u6848\uff0c\u56e0\u4e3a\u5de6\u8fb9\u8fd8\u6709\u989c\u8272\u4e3a $a_i$ \u7684\u5143\u7d20\u9700\u8981\u653e\u5728\u8fd9\uff0c\u6240\u4ee5\u5c31\u4e0d\u80fd\u4ece $dp_{r_{a_i}+1}$ \u8f6c\u79fb\uff0c$dp_i=max(dp_i,c_{a_i})$\u3002\u6700\u540e\uff0c\u8f93\u51fa $n-dp_1$ \u5373\u53ef\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read()\n{\n\tint read_result=0,is_below_0=0;\n\tchar now_ch=0;\n\twhile(!isdigit(now_ch))\n\t{\n\t\tis_below_0|=now_ch=='-';\n\t\tnow_ch=getchar();\n\t}\n\twhile(isdigit(now_ch))\n\t{\n\t\tread_result=(read_result<<3)+(read_result<<1)+(now_ch^48);\n\t\tnow_ch=getchar();\n\t}\n\treturn is_below_0?-read_result:read_result;\n}\ninline void write(int x)\n{\n\tif(x<0)\n\t{\n\t\tputchar('-');\n\t\tx=-x;\n\t}\n\tif(x>9) write(x/10);\n\tputchar(x%10+'0');\n}\nint n,m,a[500005],dp[500005],l[500005],r[500005],c[500005];\nint main()\n{\n\tn=read();\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\ta[i]=read();\n\t\tif(!l[a[i]]) l[a[i]]=i;\n\t\tr[a[i]]=i;\n\t}\n\tfor(int i=n;i;--i)\n\t{\n\t\tdp[i]=dp[i+1];\n\t\t++c[a[i]];\n\t\tif(i!=l[a[i]]) dp[i]=max(dp[i],c[a[i]]);\n\t\telse dp[i]=max(dp[i],c[a[i]]+dp[r[a[i]]+1]);\n\t}\n\twrite(n-dp[1]);\n\treturn 0;\n}\n```\n",
        "postTime": 1662551135,
        "uid": 488734,
        "name": "wrzSama",
        "ccfLevel": 7,
        "title": "CF1481E Sorting Books \u9898\u89e3"
    },
    {
        "content": "# \u9898\u89e3\n\n- \u6b64\u9898 $n$ \u8f83\u5927\uff0c\u8003\u8651 $O(n)$ \u7684\u89e3\u6cd5\u3002\n\n- \u6211\u4eec\u80af\u5b9a\u4f1a\u60f3\u5230\u52a8\u5f52\uff0c\u7531\u4e8e\u79fb\u52a8\u7684\u4e66\u4e0d\u597d\u7528\u4e8e\u8f6c\u79fb\uff0c\u6240\u4ee5\u6211\u4eec\u5b9a\u4e49 $dp_i$ \u4e3a\u4ee5 $i$ \u5f00\u5934\u7684\u540e\u7f00\u4e2d\u4e0d\u79fb\u52a8\u7684\u4e66\u6570\u91cf\u7684\u6700\u5927\u503c\u3002\n\n- \u6211\u4eec\u8fd8\u8981\u8bb0\u5f55\u989c\u8272 $a_i$ \u51fa\u73b0\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u4e0e\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e $st_{a_i},ed_{a_i}$\uff0c\u4ee5\u53ca\u540e\u7f00\u4e2d\u989c\u8272 $a_i$ \u7684\u6570\u91cf $cnt_{a_i}$\u3002\n\n- \u8003\u8651\u5982\u4f55\u8f6c\u79fb\u3002\u9996\u5148\uff0c\u5982\u679c\u8981\u5c06\u8fd9\u672c\u4e66\u4e00\u9053\u672b\u5c3e\uff0c\u90a3\u4e48 $dp_i=dp_{i+1}$\u3002\u7136\u540e\u6211\u4eec\u518d\u5206\u4e24\u79cd\u60c5\u51b5\u8003\u8651\uff1a\n\n1.  \u8fd9\u672c\u4e66\u7684\u989c\u8272 $a_i$ \u662f\u989c\u8272 $a_i$ \u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u5730\u65b9\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u4e0e\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u4e4b\u95f4\u5f02\u8272\u7684\u4e66\u79fb\u8d70\uff0c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a$dp_i=\\max(dp_i,cnt_{a_i}+dp_{ed_{a_i}+1})$\uff1b\n\n1. \u5982\u679c\u4e0d\u662f\uff0c\u90a3\u4e48\u6211\u4eec\u5c06\u540e\u7f00\u4e2d\u7684\u5168\u90e8\u5df2\u5230\u672b\u5c3e\uff0c\u8fd9\u6837\u624d\u662f\u66f4\u4f18\u7684\uff0c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a$dp_i=cnt_{a_i}$\u3002\n\n- \u7531\u4e8e\u662f\u4ece\u540e\u5f80\u524d\u63a8\uff0c\u800c\u4e14\u72b6\u6001\u8bbe\u8ba1\u662f\u4e0d\u52a8\u7684\u4e66\u7684\u6700\u5927\u503c\uff0c\u6240\u4ee5\u6700\u540e\u7684\u7b54\u6848\u4e3a\uff1a$n-dp_1$\u3002\n\n# \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint n, a[500005], st[500005], ed[500005], cnt[500005], dp[500005];\n\nint main()\n{\n\tcin >> n;\n\tfor (int i = 1 ; i <= n ; i ++)\n\t{\n\t\tcin >> a[i];\n\t\tif (!st[a[i]])\n\t\t{\n\t\t\tst[a[i]] = i;\n\t\t}\n\t\ted[a[i]] = i;\n\t}\n\tfor (int i = n ; i >= 1 ; i --)\n\t{\n\t\tdp[i] = dp[i + 1];\n\t\tcnt[a[i]] ++;\n\t\tif (i != st[a[i]])\n\t\t{\n\t\t\tdp[i] = max(dp[i], cnt[a[i]]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdp[i] = max(dp[i], dp[ed[a[i]] + 1] + cnt[a[i]]);\n\t\t}\n\t}\n\tcout << n - dp[1];\n}\n```\n",
        "postTime": 1658318418,
        "uid": 342868,
        "name": "Ted_hjl",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF1481E\u3010Sorting Books\u3011"
    },
    {
        "content": "\u53ef\u4ee5\u628a\u95ee\u9898\u5012\u8fc7\u6765\u60f3\uff0c\u8003\u8651\u53ef\u4ee5\u6709\u591a\u5c11\u79cd\u4e66\u4e0d\u52a8\n\n\u53ef\u4ee5\u8003\u8651\u901a\u8fc7\u901a\u8fc7\u4e00\u4e2adp\u6765\u8bb0\u5f55 $[1,i]$ \u533a\u95f4\u4e2d\u6bcf\u79cd\u4e66\u6240\u5728\u7684\u8303\u56f4\u4e92\u4e0d\u76f8\u4ea4\u53ef\u4ee5\u53d6\u5230\u7684\u6700\u591a\u672c\u4e66\n\n\u5f53\u6240\u5728\u4f4d\u7f6e\u662f\u67d0\u4e00\u79cd\u4e66\u7684\u6700\u540e\u4e00\u672c\u65f6\uff0c\u5c06\u5176\u4e0e\u8fd9\u79cd\u4e66\u7684\u6700\u5de6\u8fb9\u4e00\u672c\u4e66\u7684\u5de6\u8fb9\u7684\u4e66\u7684\u72b6\u6001\u4e0e\u8fd9\u79cd\u4e66\u7684\u672c\u6570\u7684\u548c\u53d6 max\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u8f6c\u79fb\u4e86\n\n\u6700\u591a\u7684\u4e0d\u52a8\u7684\u4e66\u5c31\u662f\u6bcf\u4e2a\u70b9\u5de6\u8fb9\u4e92\u4e0d\u76f8\u4ea4\u53ef\u4ee5\u53d6\u5230\u7684\u6700\u591a\u672c\u4e66\u6570\u76ee\u548c\u53f3\u8fb9\u51fa\u73b0\u6700\u591a\u6b21\u7684\u4e00\u79cd\u4e66\u7684\u6570\u76ee\u4e4b\u548c\u53d6\u4e2a max\n\n\u4ee3\u7801\u5927\u6982\u957f\u8fd9\u6837\uff1a\n```cpp\n#include<bits/stdc++.h>\nint n,a[500010],l[500010],r[500010],dp[500010],mx[500010],cnt[500010],ans;\nint main()\n{\n\tstd::cin>>n;\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",a+i);\n\tfor(int i=1;i<=n;i++) !l[a[i]]&&(l[a[i]]=i),r[a[i]]=i;\n\tfor(int i=n;i>=1;i--) cnt[a[i]]++,mx[i]=std::max(mx[i+1],cnt[a[i]]);\n\tfor(int i=1;i<=n;i++) dp[i]=dp[i-1],r[a[i]]==i&&(dp[i]=std::max(dp[i],dp[l[a[i]]-1]+cnt[a[i]])),ans=std::max(ans,dp[i]+mx[i+1]);\n\tstd::cout<<n-ans<<'\\n';\n\treturn 0;\n}\n```",
        "postTime": 1613646830,
        "uid": 71491,
        "name": "shenmadongdong",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1481E \u3010Sorting Books\u3011"
    }
]