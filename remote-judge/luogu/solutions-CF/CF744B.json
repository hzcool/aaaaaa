[
    {
        "content": "\u56e0\u4e3a\u5bf9\u89d2\u7ebf\u4e0a\u90fd\u662f $0$\uff0c\u6240\u4ee5\u5982\u679c\u8be2\u95ee\u65f6\u5305\u542b\u4e86\u5bf9\u89d2\u7ebf\uff0c\u90a3\u7ed3\u679c\u5fc5\u7136\u662f $0$\uff0c\u4f1a\u5bf9\u5224\u65ad\u9020\u6210\u5e72\u6270  \n\u56e0\u6b64\u6211\u4eec\u5904\u7406\u8be2\u95ee\u7684\u7ed3\u679c\u65f6\uff0c\u5982\u679c\u5f53\u524d\u8fd9\u4e00\u884c\u7684\u5904\u4e8e\u5bf9\u89d2\u7ebf\u4e0a\u7684\u90a3\u4e00\u4f4d\uff0c\u5728\u8be2\u95ee\u65f6\u7ed9\u51fa\u7684 $k$ \u4e2a\u6570\u4e2d\uff0c\u5219\u5e94\u8be5\u5ffd\u7565\u8fd9\u4e00\u884c\u7ed3\u679c\uff08\u56e0\u4e3a\u5b83\u662f $0$\uff09  \n\n\u6240\u4ee5\uff0c\u5c31\u8981\u60f3\u529e\u6cd5\u8ba9\u6bcf\u4e00\u4f4d\u4e0d\u5728\u5bf9\u89d2\u7ebf\u4e0a\u7684\u6570\uff0c\u90fd\u5728\u81f3\u5c11\u4e00\u6b21\u8be2\u95ee\u4e2d\uff0c\u4e0d\u548c\u5b83\u90a3\u4e00\u884c\u7684\u5bf9\u89d2\u7ebf\u4e0a\u7684\u6570\u540c\u65f6\u51fa\u73b0  \n\u7528\u4e8c\u8fdb\u5236\u7684\u60f3\u6cd5\u8003\u8651\uff0c\u56e0\u4e3a\u4efb\u610f\u4e00\u4f4d\u4e0d\u5728\u5bf9\u89d2\u7ebf\u4e0a\u7684\u6570\uff0c\u548c\u90a3\u4e00\u884c\u5728\u5bf9\u89d2\u7ebf\u4e0a\u7684\u6570\u7684\u5217\u53f7\uff0c\u90fd\u81f3\u5c11\u6709\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4e3a\u76f8\u540c  \n\u6240\u4ee5\u5c31\u679a\u4e3e\u6bcf\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\uff0c\u5206\u522b\u8be2\u95ee\u6240\u6709\u7684\u5728\u8fd9\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u4e0a\u662f $0$ \u6216 $1$ \u7684\u5217\u53f7  \n\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e2a\u6570\uff0c\u5c31\u90fd\u4f1a\u5728\u5b83\u548c\u5b83\u90a3\u4e00\u884c\u5bf9\u89d2\u7ebf\u7684\u5217\u53f7\uff0c\u7684\u4e0d\u540c\u7684\u90a3\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u88ab\u679a\u4e3e\u65f6\uff0c\u4ea7\u751f\u6709\u6548\u7684\u8be2\u95ee  \n\n\u8bdd\u8bf4\u8fd9\u79cd\u601d\u8def\u597d\u50cf\u8fd8\u633a\u5e38\u89c1\u7684\uff0c\u4e4b\u524d\u5728 bzoj \u67d0\u56fe\u8bba\u9898\uff08\u5177\u4f53\u54ea\u4e2a\u5fd8\u4e86\uff09\uff0c\u597d\u50cf\u5c31\u662f\u7528\u7c7b\u4f3c\u4e8e XX \u548c XX \u81f3\u5c11\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u4e0d\u540c\uff0c\u6765\u7528\u4e8c\u8fdb\u5236\u7684\u601d\u8def\u4f18\u5316\u7684\u5efa\u8fb9  \n\n```cpp  \n#include<cstdio>\n#include<algorithm>\n#include<iostream>\n#include<cmath>\n#include<map>\n#include<iomanip>\n#include<cstring>\n#define reg register\n#define EN puts(\"\")\ninline int read(){\n\tregister int x=0;register int y=1;\n\tregister char c=std::getchar();\n\twhile(c<'0'||c>'9'){if(c=='-') y=0;c=std::getchar();}\n\twhile(c>='0'&&c<='9'){x=x*10+(c^48);c=std::getchar();}\n\treturn y?x:-x;\n}\nint a[1005];\nint main(){\n\tint n=read();\n\tstd::memset(a,0x3f,sizeof a);\n\tfor(reg int cnt,i=0;i<10;i++){\n\t\tcnt=0;\n\t\tfor(reg int j=1;j<=n;j++)if(j&(1<<i)) cnt++;\n\t\tif(!cnt) goto NEXT;\n\t\tprintf(\"%d\\n\",cnt);\n\t\tfor(reg int j=1;j<=n;j++)if(j&(1<<i)) printf(\"%d \",j);EN;\n\t\tstd::fflush(stdout);\n\t\tfor(reg int j=1;j<=n;j++){\n\t\t\tcnt=read();\n\t\t\tif(j&(1<<i)) continue;\n\t\t\ta[j]=std::min(a[j],cnt);\n\t\t}\n\t\tNEXT:;\n\t\tcnt=0;\n\t\tfor(reg int j=1;j<=n;j++)if(!(j&(1<<i))) cnt++;\n\t\tif(!cnt) continue;\n\t\tprintf(\"%d\\n\",cnt);\n\t\tfor(reg int j=1;j<=n;j++)if(!(j&(1<<i))) printf(\"%d \",j);EN;\n\t\tstd::fflush(stdout);\n\t\tfor(reg int j=1;j<=n;j++){\n\t\t\tcnt=read();\n\t\t\tif(!(j&(1<<i))) continue;\n\t\t\ta[j]=std::min(a[j],cnt);\n\t\t}\n\t}\n\tputs(\"-1\");\n\tfor(reg int i=1;i<=n;i++) printf(\"%d \",a[i]);\n\tstd::fflush(stdout);\n\treturn 0;\n}\n```",
        "postTime": 1600179385,
        "uid": 164432,
        "name": "suxxsfe",
        "ccfLevel": 9,
        "title": "CF744B Hongcow's Game"
    }
]