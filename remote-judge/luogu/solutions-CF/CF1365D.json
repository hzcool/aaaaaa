[
    {
        "content": "## \u6ca1\u4eba\u53d1$DFS$\u7248\u672c\u7684\uff0c\u90a3\u6211\u6765\u4e00\u53d1$DFS$\u7248\u672c\u7684\u9898\u89e3\n---\n\u9996\u5148\u8003\u8651\u8fd9\u6837\u4e00\u4ef6\u4e8b\uff0c**\u5982\u679c$B$\u548c$G$\u90fd\u80fd\u8d70\u5230\u540c\u4e00\u5904\u7684\u683c\u5b50\uff0c\u90a3\u4e48\u4e00\u5b9a\u4e0d\u6ee1\u8db3\u9898\u76ee\u7684\u8981\u6c42\uff0c\u56e0\u4e3a\u4f60\u65e2\u8981\u8ba9\u6240\u6709\u7684$G$\u90fd\u8d70\u5230$(n,m)$,\u53c8\u8981\u8ba9\u6240\u6709\u7684$B$\u90fd\u4e0d\u80fd\u8d70\u5230\uff0c\u4e00\u4f46\u51fa\u73b0\u4e00\u4e2a$B$\u548c$G$\u90fd\u80fd\u8d70\u5230\u7684\u683c\u5b50\uff0c\u81ea\u7136\u662f\u4e0d\u884c\u7684**\n\n\u90a3\u4e48\u6211\u4eec\u518d\u8003\u8651\uff0c\u5982\u4f55\u4fdd\u8bc1\u5c3d\u53ef\u80fd\u7684\u53bb\u6d88\u9664\u8fd9\u6837\u7684\u683c\u5b50\u5462\uff1f\n\n### \u81ea\u7136\u662f\u8d2a\u5fc3\n\n**\u6211\u4eec\u53ef\u4ee5\u8d2a\u5fc3\u7684\u53bb\u628a\u6bcf\u4e00\u4e2a$B$\u5468\u56f4\u7684\u7a7a\u5730\u90fd\u53d8\u4e3a$#$,\u8fd9\u6837\u6211\u4eec\u5c31\u5c3d\u53ef\u80fd\u7684\u5c06\u6bcf\u4e00\u4e2aB\u90fd\u5c01\u95ed\u4e86\u8d77\u6765\uff0c\u90a3\u4f60\u53ef\u80fd\u4f1a\u95ee\u8fd9\u6837\u505a\u7684\u6b63\u786e\u80fd\u4fdd\u8bc1\u5417\uff1f**\n\n\n$Proof:$\n\n**\u6211\u4eec\u8003\u8651\uff0c\u5982\u679c\u53bb\u6389B\u5468\u56f4\u7684\u4e00\u4e2a\u7a7a\u5730\u5bfc\u81f4\u67d0\u4e00\u4e9b$G$\u65e0\u6cd5\u5230\u8fbe$(n,m)$,\u8fd9\u65f6\u5019\u7ed3\u5408\u6211\u4eec\u4e4b\u524d\u5206\u6790\u7684\uff0cB\u5468\u56f4\u7684\u8fd9\u4e2a\u7a7a\u5730\u5c31\u662f\u6211\u4eec\u4e0a\u9762\u8ba8\u8bba\u7684\u683c\u5b50\uff0c\u81ea\u7136\u5c31\u7b97\u8fd9\u6837\u7684\u64cd\u4f5c\u4f7f\u5f97$G$\u5230\u4e0d\u4e86$(n,m)$,\u539f\u6765\u7684\u5730\u56fe\u4e5f\u662f\u65e0\u6cd5\u6ee1\u8db3\u9700\u6c42\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u8d2a\u5fc3\u7684\u6539\u53d8B\u5468\u56f4\u7684\u7a7a\u5730\u5e76\u4e0d\u5f71\u54cd\u7b54\u6848\u7684\u6b63\u786e\u6027\uff0c\u90a3\u4e48\u6211\u4eec\u7684\u505a\u6cd5\u5c31\u662f\u6b63\u786e\u7684\u3002**\n\n\u7136\u540e\u5c31\u662f\u6734\u7d20\u7684$DFS$, \u8bb0\u5f97\u7528\u4e00\u4e2a\u5c0f\u4f18\u5316\uff0c\u5373\u4ece\u7ec8\u70b9$(n,m)$\u5f00\u59cb\u641c\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn = 2e5+50;\nconst int xx[] = {-1,1,0,0};\nconst int yy[] = {0,0,1,-1};\nint T,n,m;\nchar mp[100][100];\nint vis[100][100];\nint tag[100][100];\nvoid dfs(int x, int y) {\n    if(x<1 || x>n || y<1 | y>m) return ;\n    if(mp[x][y]=='#') return ;\n    if(mp[x][y]=='G' || mp[x][y]=='B') tag[x][y]=1;\n    for(int i=0; i<4; i++) {\n        if(!vis[x+xx[i]][y+yy[i]]) {\n            vis[x+xx[i]][y+yy[i]]=1;//\u8bb0\u5f97\u6807\u8bb0\n            dfs(x+xx[i],y+yy[i]);\n        }\n    }\n}\nint main() {\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    cin>>T;\n    while(T--) {\n        cin>>n>>m;\n        memset(vis,0,sizeof(vis));\n        memset(tag,0,sizeof(tag));\n        for(int i=1; i<=n; i++) {\n             for(int j=1; j<=m; j++) {\n                 cin>>mp[i][j];\n             }\n        }\n        bool flag = true;\n        for(int i=1 ;i<=n; i++) {\n            for(int j=1; j<=m; j++) {\n                if(mp[i][j]=='B') {\n                    if(mp[i+1][j]=='.') mp[i+1][j]='#';\n                    if(mp[i-1][j]=='.') mp[i-1][j]='#';\n                    if(mp[i][j+1]=='.') mp[i][j+1]='#';\n                    if(mp[i][j-1]=='.') mp[i][j-1]='#';\n                }\n            }\n        }\n        vis[n][m]=1;\n        dfs(n,m);\n        for(int i=1; i<=n; i++) {\n            for(int j=1; j<=m; j++) {\n                if(mp[i][j]=='G') {\n                    if(tag[i][j]) continue;\n                    else {\n                        flag = false;\n                        break;\n                    }\n                }\n                if(mp[i][j]=='B') {\n                    if(tag[i][j]) {\n                        flag = false;\n                    }//\u5206\u522b\u5224\u65ad\u6bcf\u4e00\u4e2aG\u548cB\n                }\n            }\n            if(!flag) break;\n        }\n        if(flag)  cout<<\"Yes\"<<endl;\n        else cout<<\"No\"<<endl;\n    }\n    return 0;\n}\n```\n$End$\n",
        "postTime": 1592384474,
        "uid": 233252,
        "name": "Ash_Dr",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1365D \u3010Solve The Maze\u3011"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f\uff1a\u80fd\u5426\u5c06\u574f\u4eba\u5305\u56f4\u8d77\u6765\uff0c\u4e0d\u8ba9\u4ed6\u4eec\u8d70\u5230$(n,m).$\n\n$\\text{Solution:}$\n\n\u5bf9\u4e8e\u4e00\u4e2a$\\text{Bad Point.}$\u5982\u679c\u6709\u4e00\u4e2a$\\text{Good Point}$\u53ef\u4ee5\u548c\u4ed6\u8d70\u5230\u4e00\u8d77\u7684\u8bdd\uff0c\u663e\u7136\u8fd9\u4e2a\u6e38\u620f\u662f\u4e0d\u53ef\u80fd\u80dc\u5229\u7684\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u76f4\u63a5\u5c06\u6bcf\u4e00\u4e2a$\\text{Bad Point.}$\u5c01\u9501\u5728\u91cc\u9762\uff0c\u8ba9\u4ed6\u54ea\u91cc\u90fd\u4e0d\u80fd\u53bb\u3002\n\n\u5982\u679c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6709$\\text{Good Point.}$\u5230\u8fbe\u4e0d\u5230\u7ec8\u70b9\uff0c\u90a3\u4e48\u663e\u7136\u7684\u662f\uff0c\u5b83\u4e00\u5b9a\u4f1a\u548c\u4e00\u4e2a$\\text{Bad Point}$\u8d70\u5230\u4e00\u8d77\u3002\n\n\u90a3\u4e48\uff0c\u8fdb\u884c\u8fd9\u6837\u4e00\u6b21\u5168\u65b9\u4f4d\u5c01\u9501\u540e\uff0c\u4ece\u7ec8\u70b9\u5f00\u59cb$bfs$\u8d70\u5230\u6240\u6709\u53ef\u4ee5\u5230\u8fbe\u7684\u70b9\uff0c\u6700\u540e\u5224\u65ad\u4e00\u4e0b\u662f\u4e0d\u662f\u6240\u6709\u7684$\\text{Good Point}$\u90fd\u53ef\u4ee5\u5230\u8fbe\u7ec8\u70b9\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(Tnm).$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint T,n,m,a[60][60],vis[60][60];\nvector<pair<int,int> >v,b;\nchar s[60][60];\nconst int dx[4]={0,1,0,-1};\nconst int dy[4]={1,0,-1,0};\nvoid bfs(int x,int y){\n\tvis[x][y]=1;\n\tfor(int i=0;i<4;++i){\n\t\tint nx=x+dx[i],ny=y+dy[i];\n\t\tif(vis[nx][ny]||nx<1||ny<1||nx>n||ny>m||a[nx][ny]==1)continue;\n\t\tbfs(nx,ny);\n\t}\n}\nint main(){\n\tscanf(\"%d\",&T);\n\twhile(T--){\n\t\tscanf(\"%d%d\",&n,&m);v.clear(),b.clear();\n\t\tfor(int i=1;i<=50;++i)for(int j=1;j<=50;++j)vis[i][j]=a[i][j]=0;\n\t\tfor(int i=1;i<=n;++i){\n\t\t\tfor(int j=1;j<=m;++j){\n\t\t\t\tcin>>s[i][j];\n\t\t\t\tif(s[i][j]=='G')v.push_back(make_pair(i,j)),a[i][j]=2;\n\t\t\t\tif(s[i][j]=='B')b.push_back(make_pair(i,j)),a[i][j]=3;\n\t\t\t\tif(s[i][j]=='#')a[i][j]=1;\n\t\t\t\tif(s[i][j]=='.')a[i][j]=0;\n\t\t\t}\n\t\t}\n\t\tif(!v.size()){\n\t\t\tputs(\"YES\");\n\t\t\tcontinue;\n\t\t}\n\t\tint fg=0;\n\t\tfor(int i=0;i<(int)b.size()&&!fg;++i){\n\t\t\tint x=b[i].first,y=b[i].second;\n\t\t\tfor(int j=0;j<4;++j){\n\t\t\t\tint nx=x+dx[j],ny=y+dy[j];\n\t\t\t\tif(a[nx][ny]==2){\n\t\t\t\t\tfg=1;puts(\"NO\");break;\n\t\t\t\t}\n\t\t\t\tif(a[nx][ny]==3)continue;\n\t\t\t\ta[nx][ny]=1;\n\t\t\t}\n\t\t}\n\t\tif(fg)continue;\n\t\tif(a[n][m]){\n\t\t\tputs(\"NO\");\n\t\t\tcontinue;\n\t\t}\n\t\tbfs(n,m);\n\t\tfor(int i=0;i<(int)v.size();++i){\n\t\t\tif(!vis[v[i].first][v[i].second]){\n\t\t\t\tputs(\"NO\");fg=1;break;\n\t\t\t}\n\t\t}\n\t\tif(!fg)puts(\"YES\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1591763896,
        "uid": 128591,
        "name": "Refined_heart",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1365D \u3010Solve The Maze\u3011"
    },
    {
        "content": "\u8003\u8651\u5230\u5982\u679c\u6709\u89e3\uff0c\u597d\u4eba\u548c\u574f\u4eba\u4e0d\u80fd\u8d70\u5728\u4e00\u8d77\u3002\u5982\u679c\u53ef\u4ee5\u8d70\u5728\u4e00\u8d77\u7684\u8bdd\uff0c\u597d\u4eba\u80fd\u8d70\u5230 $(n,m)$\uff0c\u574f\u4eba\u4e5f\u80fd\u8d70\u5230\u3002\u6240\u4ee5\u6211\u4eec\u8981\u4fdd\u8bc1\u597d\u4eba\u548c\u574f\u4eba\u4e0d\u80fd\u8d70\u5728\u4e00\u8d77\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\u5efa\u5899\u7684\u7b56\u7565\u5c31\u5f88\u6e05\u695a\u4e86\uff0c\u8003\u8651\u8d2a\u5fc3\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u80fd\u8ba9\u597d\u4eba\u548c\u574f\u4eba\u8d70\u5728\u4e00\u8d77\uff0c\u800c\u6211\u4eec\u60f3\u8981\u597d\u4eba\u6709\u66f4\u591a\u7684\u8def\uff08\u4f7f\u5f97\u4ed6\u80fd\u591f\u8d70\u5230 $(n,m)$ \uff09\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8ba9\u574f\u4eba\u8d70\u7684\u8def\u6700\u5c11\u5c31\u884c\u4e86\u3002\u8ba9\u574f\u4eba\u8d70\u7684\u8def\u6700\u5c11\u5373\u4e3a\u628a\u574f\u4eba\u4e0a\u4e0b\u5de6\u53f3\u7684\u56db\u4e2a\u4f4d\u7f6e\u5efa\u5899\u3002\n\n\u7136\u540e\u4ece $(n,m)$ \u5f00\u59cb `bfs` \u6216\u8005 `dfs` \u770b\u662f\u5426\u80fd\u591f\u641c\u5230\u5168\u90e8\u7684\u597d\u4eba\uff0c\u80fd\u641c\u5230\u5373\u4e3a\u6709\u89e3\uff0c\u53cd\u4e4b\u65e0\u89e3\u3002\u5176\u4ed6\u7684`bfs`\u6216\u8005`dfs`\u7684\u65b9\u6cd5\uff0c\u53ea\u8981\u590d\u6742\u5ea6\u6b63\u786e\u4e5f\u662f\u53ef\u4ee5\u8fc7\u7684\u3002\n\n[$\\mathcal{Code}$](https://codeforces.com/contest/1365/submission/83226149)",
        "postTime": 1591714643,
        "uid": 223298,
        "name": "do_while_true",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1365D \u3010Solve The Maze\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8\u3002](https://www.luogu.com.cn/problem/CF1365D)\n\n## \u9898\u76ee\u601d\u8def\n\n\u8003\u8651\u8ba9\u574f\u4eba\u65e0\u6cd5\u79fb\u52a8\u5230 $(n,m)$ \u9700\u8981\u5c06\u574f\u4eba\u7684\u5750\u6807 $(x,y)$ \u5468\u56f4\u7684\u56db\u4e2a\u70b9 $(x-1,y),(x+1,y),(x,y-1),(x,y+1)$ \u5168\u90e8\u8bbe\u4e3a\u969c\u788d\u3002\u4e4b\u540e `BFS` \u8003\u8651\u6bcf\u4e2a\u597d\u4eba\u662f\u5426\u80fd\u591f\u5230\u8fbe\u7ec8\u70b9\u3002\n\n\u6ce8\u610f\uff1a\u8bbe\u4e3a\u969c\u788d\u65f6\u4e0d\u80fd\u8986\u76d6\u539f\u6570\u7ec4\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u8986\u76d6\u539f\u6765\u7684\u597d\u4eba\u548c\u574f\u4eba\u7684\u4fe1\u606f\u3002\n\n\u6bcf\u6b21\u8be2\u95ee\u7684\u56de\u7b54\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(nm)$\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,T;\nchar a[55][55],f[55][55];\nint ans[55][55];\nbool flag;\nstruct edge {\n    int x,y,d;\n};\nvector<int>v;\nvector<int>v2;\nbool check(int x,int y){\n    return (x<=n&&x>=1&&y<=m&&y>=1);\n}\nvoid bfs(){\n    memset(ans,-1,sizeof(ans));\n    queue<edge>Q;\n    if(f[n][m]=='#')return;\n    Q.push((edge){n,m});\n    ans[n][m]=0;\n    while(!Q.empty()){\n        edge now=Q.front();\n        Q.pop();\n        if(check(now.x+1,now.y)&&f[now.x+1][now.y]!='#'&&ans[now.x+1][now.y]==-1){\n            Q.push((edge){now.x+1,now.y,now.d+1});\n            ans[now.x+1][now.y]=now.d+1;\n        }\n        if(check(now.x-1,now.y)&&f[now.x-1][now.y]!='#'&&ans[now.x-1][now.y]==-1){\n            Q.push((edge){now.x-1,now.y,now.d+1});\n            ans[now.x-1][now.y]=now.d+1;\n        }\n        if(check(now.x,now.y+1)&&f[now.x][now.y+1]!='#'&&ans[now.x][now.y+1]==-1){\n            Q.push((edge){now.x,now.y+1,now.d+1});\n            ans[now.x][now.y+1]=now.d+1;\n        }\n        if(check(now.x,now.y-1)&&f[now.x][now.y-1]!='#'&&ans[now.x][now.y-1]==-1){\n            Q.push((edge){now.x,now.y-1,now.d+1});\n            ans[now.x][now.y-1]=now.d+1;\n        }\n    }\n}\nsigned main(){\n    scanf(\"%d\",&T);\n    while(T--){\n        v.clear();\n        v2.clear();\n        flag=0;\n        scanf(\"%d %d\",&n,&m);\n        memset(a,0,sizeof(a));\n        for(int i=1;i<=n;++i){\n            for(int j=1;j<=m;++j){\n                cin>>a[i][j];\n                f[i][j]=a[i][j];\n                if(a[i][j]=='G'){\n                    v.push_back(i);\n                    v2.push_back(j);\n                }\n            }\n        }\n        for(int i=1;i<=n;++i){\n            for(int j=1;j<=m;++j){\n                if(a[i][j]=='B'){\n                    if(check(i-1,j))f[i-1][j]='#';\n                    if(check(i+1,j))f[i+1][j]='#';\n                    if(check(i,j-1))f[i][j-1]='#';\n                    if(check(i,j+1))f[i][j+1]='#';\n                }\n            }\n        }\n        bfs();\n        for(int i=0;i<v.size();++i){\n            if(ans[v[i]][v2[i]]==-1){\n                flag=1;\n                break;\n            }\n        }\n        if(flag)puts(\"No\");\n        else puts(\"Yes\");\n    }\n    return 0;\n}\n```",
        "postTime": 1658725691,
        "uid": 678965,
        "name": "EXCRT",
        "ccfLevel": 0,
        "title": "CF1365D Solve The Maze \u9898\u89e3"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n\u6709\u4e2a\u8ff7\u5bab\uff0c\u4f60\u9700\u8981\u4e00\u5f00\u59cb\u7ed9\u4e00\u4e9b\u7a7a\u683c\u5b50\u53d8\u6210\u969c\u788d\u7269\u4f7f\u5f97\u574f\u4eba\u88ab\u56f0\u4f4f\uff0c\u597d\u4eba\u53ef\u4ee5\u51fa\u9003\uff0c\u5982\u679c\u5b8c\u6210\u4e0d\u4e86\u8f93\u51fa `No`\uff0c\u5426\u5219\u8f93\u51fa `Yes`\u3002\n\n## \u601d\u8def\u5206\u6790\n\n~~\u4e0d\u53ef\u4ee5\uff0c\u603b\u53f8\u4ee4\u662f\u4e0d\u662f\u80fd\u8fc7 $45\\%$ \u7684\u6d4b\u8bd5\u70b9\u5462\u3002~~\n\n\u6211\u4eec\u53ef\u4ee5\u9996\u5148\u5bf9\u574f\u4eba\u5305\u5939\uff08\u5373\u628a\u574f\u4eba\u8fb9\u4e0a\u7684\u7a7a\u683c\u5b50\u6539\u6210\u969c\u788d\u7269\uff09\uff0c\u7136\u540e\u4ece\u51fa\u53e3 $(n,m)$ \u8fdb\u884c `BFS` \u641c\u7d22\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5982\u679c\u6709\u574f\u4eba\u90a3\u4e48\u5219\u8bc1\u660e\u5305\u5939\u5931\u8d25\u3002\u5982\u679c\u6ca1\u6709\u574f\u4eba\u53ef\u4ee5\u51fa\u9003\u90a3\u4e48\u6211\u4eec\u9700\u8981\u770b\u770b\u597d\u4eba\u6709\u6ca1\u6709\u88ab\u56f0\u4f4f\u7684\uff0c\u6700\u540e\u8f93\u51fa\u3002\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\n#include<bits/stdc++.h>\n#define Pair pair<int,int>\n#define st first\n#define nd second\n//\u849f\u84bb\u5f88\u61d2\uff0c\u6240\u4ee5\u7b80\u5199\nusing namespace std;\nint T,n,m;\nchar c[51][51];//\u5b58\nbool u[51][51];//\u5e7f\u641c\u7528\u6765\u6807\u8bb0\u91cd\u590d\nconst int dx[]={1,-1,0,0},dy[]={0,0,1,-1};//\u5e7f\u641c\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\nbool check(int x,int y){\n\treturn 1<=x&&x<=n&&1<=y&&y<=m&&!u[x][y]&&c[x][y]!='#';\n}//\u5224\u65ad\u8fd9\u4e2a\u70b9\u5e7f\u641c\u662f\u5426\u5408\u6cd5\nbool solve(){//\u53ef\u4ee5\u7406\u89e3\u4e3a\u8f93\u5165\u597d\u7684\u4e3b\u51fd\u6570\n\tfor(int i=1,nx,ny;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tif(c[i][j]=='B')\n\t\t\t\tfor(int k=0;k<4;k++)\n\t\t\t\t\tif(check(nx=i+dx[k],ny=j+dy[k])&&c[nx][ny]=='.')\n\t\t\t\t\t\tc[nx][ny]='#';\n\t//\u5305\u5939\u574f\u4eba\n\tqueue<Pair>q;\n\tif(c[n][m]=='.'){\n\t\tq.push({n,m});\n\t\tu[n][m]=1;\n\t\twhile(!q.empty()){\n\t\t\tPair t=q.front();\n\t\t\tq.pop();\n\t\t\tfor(int i=0,nx,ny;i<4;i++){\n\t\t\t\tnx=t.st+dx[i],ny=t.nd+dy[i];\n\t\t\t\tif(check(nx,ny)){\n\t\t\t\t\tif(c[nx][ny]=='B')\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\tif(c[nx][ny]=='G')\n\t\t\t\t\t\tc[nx][ny]='.';//\u5c06\u53ef\u4ee5\u51fa\u6765\u7684\u597d\u4eba\u5ffd\u7565\n\t\t\t\t\tq.push({nx,ny});\n\t\t\t\t\tu[nx][ny]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t//\u5e7f\u641c\u6bcf\u4e00\u4e2a\u53ef\u80fd\u51fa\u9003\u7684\u574f\u4eba\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tif(c[i][j]=='G')\n\t\t\t\treturn 0;\n   //\u9632\u6b62\u597d\u4eba\u88ab\u56f0\n\treturn 1;//\u6210\u529f\n}\nvoid Main(){//\u5355\u7ec4\u6570\u636e\u7684main\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)\n\t\tcin>>c[i]+1;\n\tmemset(u,0,sizeof(u));\n\tbool x=solve();\n\tputs(x?\"Yes\":\"No\");\n}\nint main(){\n\tfor(cin>>T;T;--T)\n\t\tMain();\n\treturn 0;\n}\n```",
        "postTime": 1675342749,
        "uid": 743014,
        "name": "Hebu17",
        "ccfLevel": 0,
        "title": "Solve The Maze"
    }
]