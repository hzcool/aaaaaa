[
    {
        "content": "\u7531\u4e8e\u500d\u6570\u662f\u504f\u5e8f\u5173\u7cfb\uff0c\u6211\u4eec\u8fd8\u662f\u8003\u8651\u5efa\u7acb\u6709\u5411\u56fe\uff0c\u5927\u5411\u5c0f\u8fde\u8fb9\u3002\n\n\u5bb9\u6613\u77e5\u9053\uff0c\u6211\u4eec\u4e00\u65e6\u6709\u4e00\u6761\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e $3$  \u7684\u94fe\u5c31\u76f4\u63a5\u4e0d\u662f\u4e8c\u5206\u56fe\u4e86\uff0c\u4e8e\u662f\u6bcf\u4e2a\u70b9\u6700\u540e\u8981\u4e48\u6709\u5165\u5ea6\u8981\u4e48\u6709\u51fa\u5ea6\u3002\n\n\u6211\u4eec\u8003\u8651\u5bf9\u6bcf\u4e2a\u70b9\u62c6\u70b9\u4e3a $x$ \u548c $x'$\uff0c\u5206\u522b\u8868\u793a\u6700\u7ec8\u6b64\u70b9\u53ea\u6709\u5165\u5ea6\u6216\u53ea\u6709\u51fa\u5ea6\u3002\n\n\u6211\u4eec\u5e0c\u671b\u7ed9\u6240\u6709\u77db\u76fe\u7684\u70b9\u4e4b\u95f4\u8fde\u8fb9\uff0c\u8fd9\u6837\u6700\u5927\u72ec\u7acb\u96c6\u5c31\u662f\u7b54\u6848\u3002\n\n\u5982\u679c\u6211\u4eec\u80fd\u591f\u7528\u5408\u9002\u7684\u65b9\u6cd5\u7ed9\u6bcf\u6761\u8fb9\u5b9a\u5411\u4f7f\u5176\u6210\u4e3a **DAG**\uff0c\u90a3\u4e48\u6700\u957f\u53cd\u94fe\u5373\u4e3a\u7b54\u6848\u3002\n\n\u663e\u7136\u6240\u6709\u7684 $x$ \u548c $x'$ \u90fd\u662f\u77db\u76fe\u7684\u3002\n\n\u5bf9\u4e8e\u4e00\u6761\u8fb9 $x\\to y$\uff0c\u53ea\u6709 $x'$ \u548c $y$ \u662f\u5408\u6cd5\u7684\uff0c\u5176\u4f59\u5747\u77db\u76fe\u3002\n\n\u800c\u7531\u4e8e\u8fd9\u662f\u504f\u5e8f\u96c6\uff0c\u6211\u4eec\u76f4\u63a5\u4ece\u5927\u5f80\u5c0f\u8fde\u5fc5\u7136\u4e0d\u4f1a\u51fa\u73b0\u73af\u3002\n\n\u4e8e\u662f\u6211\u4eec\u8fde\u8fb9 $x\\to x'$\uff0c$x\\to y$\uff0c$x\\to y'$\uff0c$x'\\to y'$\uff0c\u7136\u540e\u8dd1\u4e00\u8fb9\u6700\u5c0f\u94fe\u8986\u76d6\u5c31\u597d\u4e86\u3002\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define inf 1e9\nconst int maxn=5e6+10;\nconst int mod=1e9+7;\ninline int read(){\n\tint x=0,f=1;char c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9'){x=(x<<1)+(x<<3)+c-'0';c=getchar();}\n\treturn x*f;\n}\nconst int B=100;\nconst int M=50000;\nint TT,n,m,a[maxn],S,T,id[maxn];\nint beg[maxn],nex[maxn],to[maxn],w[maxn],e;\ninline void add(int x,int y,int z){\n\tnex[e]=beg[x];beg[x]=e;to[e]=y;w[e]=z;e++;\n\tnex[e]=beg[y];beg[y]=e;to[e]=x;w[e]=0;e++;\n}\nint dep[maxn];queue<int>q;\ninline bool bfs(){\n\tfor(int i=1;i<=T;i++)dep[i]=0;\n\tdep[S]=1;q.push(S);\n\twhile(!q.empty()){\n\t\tint x=q.front();q.pop();\n\t\tfor(int i=beg[x];~i;i=nex[i]){\n\t\t\tint t=to[i];\n\t\t\tif(!dep[t]&&w[i]){\n\t\t\t\tdep[t]=dep[x]+1;\n\t\t\t\tq.push(t);\n\t\t\t}\n\t\t}\n\t}return dep[T]!=0;\n}\ninline int dfs(int x,int lim){\n\tif(x==T||!lim)return lim;\n\tint res=0;\n\tfor(int i=beg[x];~i&&lim;i=nex[i]){\n\t\tint t=to[i];\n\t\tif(dep[t]==dep[x]+1&&w[i]){\n\t\t\tint f=dfs(t,min(w[i],lim));\n\t\t\tif(!f){dep[t]=0;continue;}\n\t\t\tres+=f;lim-=f;\n\t\t\tw[i]-=f;w[i^1]+=f;\n\t\t}\n\t}return res;\n}\ninline void Add(int x,int y){\n\tint px=x,qx=x+n,py=y,qy=y+n,mid=n+n;\n\tadd(px,py+mid,1),add(px,qy+mid,1),add(qx,qy+mid,1);\n}\ninline void solve(){\n\tn=read();\n\tfor(int i=1;i<=n;i++)a[i]=read();\n\tsort(a+1,a+1+n);S=4*n+1,T=S+1;\n\tfor(int i=1;i<=T;i++)beg[i]=-1;e=0;\n\tif(n<=B){\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int j=i+1;j<=n;j++)\n\t\t\t\tif(a[j]%a[i]==0)Add(j,i);\n\t}else{\n\t\tfor(int i=1;i<=n;i++)id[a[i]]=i;\n\t\tfor(int i=1;i<=M;i++)if(id[i])\n\t\t\tfor(int j=i+i;j<=M;j+=i)if(id[j])Add(id[j],id[i]);\n\t}\n\tfor(int i=1;i<=n;i++)add(i,i+n+n+n,1);\n\tfor(int i=1;i<=n+n;i++)add(S,i,1),add(i+n+n,T,1);\n\tint mxflw=0;\n\twhile(bfs())mxflw+=dfs(S,inf);\n\tprintf(\"%d\\n\",mxflw-n);\n\tfor(int i=1;i<=n;i++)id[a[i]]=0;\n}\nint main(){\n\tTT=read();\n\twhile(TT--)solve();\n    return 0;\n}\n```",
        "postTime": 1654567591,
        "uid": 140876,
        "name": "syzf2222",
        "ccfLevel": 9,
        "title": "CF1630F Making It Bipartite"
    },
    {
        "content": "\u8003\u8651\u5efa\u7acb\u6709\u5411\u56fe $G$\uff0c\u6ee1\u8db3\u82e5 $a_i\\mid a_j$\uff0c\u5219\u6709\u8fb9 $j\\rarr i$\uff0c\u5bb9\u6613\u53d1\u73b0\u539f\u9898\u8981\u6c42\u7684\u5373\u4e3a\u5728 $G$ \u4e0a\u81f3\u5c11\u5220\u53bb\u591a\u5c11\u4e2a\u70b9\u4f7f\u5f97\u6bcf\u4e2a\u70b9\u53ea\u6709\u5165\u8fb9\u6216\u8005\u53ea\u6709\u51fa\u8fb9\u3002\n\n\u8bc1\u660e\uff1a\u82e5 $G$ \u4e2d\u5b58\u5728\u8fb9 $y\\rarr x\\rarr z$\uff0c\u5219\u6709\u8fb9 $y\\rarr z$\uff0c\u5728\u539f\u9898\u7684\u56fe\u4e0a\u5b58\u5728\u5947\u73af $(x,y,z)$\u3002\u82e5 $G$ \u4e2d\u4e0d\u5b58\u5728\u70b9\u65e2\u6709\u5165\u8fb9\u53c8\u6709\u51fa\u8fb9\uff0c\u5219\u8be5\u56fe\u663e\u7136\u4e3a\u4e8c\u5206\u56fe\u3002\n\n\u6211\u4eec\u5c06\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42\u89e3\u4fdd\u7559\u6700\u591a\u7684\u70b9\u4f7f\u5f97\u5176\u4e3a\u4e8c\u5206\u56fe\u3002\n\n\u5148\u8003\u8651\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff0c\u5728 $G$ \u4e2d\u9009\u62e9\u6700\u591a\u6570\u91cf\u7684\u70b9\u4f7f\u5f97\u4e92\u76f8\u4e4b\u95f4\u6ca1\u6709\u8fde\u8fb9\u3002\n\n\u8fd9\u662f\u4e00\u4e2a\u7ecf\u5178\u95ee\u9898\uff0c\u56e0\u4e3a $G$ \u662f\u504f\u5e8f\u96c6\uff0c\u6839\u636e Dilworth \u5b9a\u7406\uff0c\u6211\u4eec\u6709\u6700\u957f\u53cd\u94fe\u7b49\u4e8e\u6700\u5c0f\u94fe\u8986\u76d6\uff0c\u6240\u4ee5\u76f4\u63a5\u8dd1\u6700\u5c0f\u94fe\u8986\u76d6\u5c31\u597d\u4e86\u3002\n\n\u8fd9\u7ed9\u4e86\u6211\u4eec\u542f\u53d1\uff0c\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u70b9 $u$ \u5efa\u7acb\u70b9 $u'$\uff0c\u82e5\u5b58\u5728\u8fb9 $u\\rarr v$\uff0c\u5219\u8fde\u63a5 $u'\\rarr v,u'\\rarr v'$\uff0c\u5e76\u8fde\u63a5 $u'\\rarr u$\uff0c\u5bb9\u6613\u53d1\u73b0\u8fd9\u4e5f\u662f\u4e2a\u504f\u5e8f\u96c6\uff0c\u5e76\u4e14\u5176\u6700\u957f\u53cd\u94fe\u5373\u4e3a\u7b54\u6848\u3002\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<string>\n#include<algorithm>\n#include<set>\n#include<numeric>\nusing std::cin;\nusing std::cout;\nint S,T,cnt,cur[200010],head[200010],to[4000010],nxt[4000010],w[4000010],ecnt;\nvoid add(int x,int y){\n\tto[++ecnt]=y,nxt[ecnt]=head[x],head[x]=ecnt,w[ecnt]=1;\n\tto[++ecnt]=x,nxt[ecnt]=head[y],head[y]=ecnt,w[ecnt]=0;\n}\nint d[200010];\nbool bfs(){\n\tfor(int i=1;i<=cnt;i++) d[i]=0;\n\td[S]=1;\n\tstatic int que[200010];\n\tint *hd=que,*tl=que;\n\t*tl++=S;\n\twhile(hd!=tl){\n\t\tint x=*hd++;\n\t\tfor(int i=head[x];i;i=nxt[i]) if(!d[to[i]]&&w[i]) d[to[i]]=d[x]+1,*tl++=to[i];\n\t}\n\treturn d[T];\n}\nint dfs(int x,int flow){\n\tif(x==T) return flow;\n\tint used=0;\n\tfor(int &i=cur[x];i;i=nxt[i])if(w[i]&&d[x]==d[to[i]]-1){\n\t\tint v=dfs(to[i],std::min(w[i],flow-used));\n\t\tw[i]-=v,w[i^1]+=v,used+=v;\n\t\tif(flow==used) return flow;\n\t}\n\treturn used;\n}\nint dinic(){\n\tint ans=0;\n\twhile(bfs()){\n\t\tfor(int i=1;i<=cnt;i++) cur[i]=head[i];\n\t\tans+=dfs(S,1e7);\n\t}\n\treturn ans;\n}\nint n,a[50010],id[50010][2][2],trans[50010];\nvoid solve(){\n\tcin>>n;\n\tfor(int i=1;i<=50000;i++) trans[i]=0;\n\tfor(int i=1;i<=n;i++) cin>>a[i],trans[a[i]]=i;\n\tcnt=0;\n\tS=++cnt,T=++cnt;\n\tfor(int i=1;i<=n;i++) id[i][0][0]=++cnt,id[i][0][1]=++cnt,id[i][1][0]=++cnt,id[i][1][1]=++cnt;\n\tfor(int i=1;i<=cnt;i++) head[i]=0;\n\tecnt=1;\n\tfor(int i=1;i<=n;i++) add(S,id[i][0][0]),add(S,id[i][1][0]),add(id[i][0][1],T),add(id[i][1][1],T),add(id[i][1][0],id[i][0][1]);\n\tfor(int a=1;a<=50000;a++) if(trans[a])\n\t\tfor(int b=a+a;b<=50000;b+=a) if(trans[b]){\n\t\t\tint i=trans[b],j=trans[a];\n\t\t\tadd(id[i][0][0],id[j][0][1]),add(id[i][1][0],id[j][0][1]),add(id[i][1][0],id[j][1][1]);\n\t\t}\n\tcout<<(-n+dinic())<<'\\n';\n}\nint main(){\n\tstd::ios::sync_with_stdio(false),cin.tie(nullptr);\n\tint T;\n\tcin>>T;\n\twhile(T--) solve();\n\treturn 0;\n}\n```\n",
        "postTime": 1644033398,
        "uid": 55707,
        "name": "gxy001",
        "ccfLevel": 9,
        "title": "CF1630F Making It Bipartite"
    }
]