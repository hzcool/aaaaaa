[
    {
        "content": "\u9898\u610f\n\n\u7ed9\u4e00\u4e2a $n*m$ \u5927\u5c0f\u7684\u77e9\u9635\uff0c\u4f4d\u7f6e $(i,j)$ \u4e0a\u7684\u6570\u4e3a $a[i][j]$ \u3002\u73b0\u6709\u4e00\u4e2a\u6574\u6570 $r$ \uff0c\u6c42\u5728\u77e9\u9635\u4e2d\u4e24\u4e2a\u4e0d\u76f8\u4ea4\u7684\u534a\u5f84\u4e3a $r$ \u7684\u5706\u5185\u6240\u6709\u4f4d\u7f6e\u5143\u7d20\u7684\u548c\u7684\u6700\u5927\u503c\u3002\n\n\u611f\u60f3\n\n\u8fd9\u9053\u9898\u771f $^{_T}$ $^{_M}$\u6076\u5fc3\uff0c\u60f3\u6cd5\u4e0d\u96be\uff0c\u7ec6\u8282\u4e00\u5806......\n\n\u601d\u8def\n\n1. \u6c42\u534a\u5f84\u4e3a $r$ \u7684\u5706\u7684\u5f62\u72b6\u3002\n\n\t\u8bbe $h[i]$ \u8868\u793a\u79bb\u5706\u5fc3 $i$ \u884c\u65f6\u8fd9\u4e2a\u5706\u80fd\u5f80\u4e00\u4e2a\u65b9\u5411\u5360 $h[i]$ \u5217\u3002\n    \n1. \u6c42\u6bcf\u4e00\u884c\u7684\u524d\u7f00\u548c \u3002\n\n1. \u8bbe $p[i][j]$ \u4e3a\u4ee5\u4f4d\u7f6e $(i,j)$ \u4e3a\u5706\u5fc3\u7684\u5706\u5185\u5143\u7d20\u7684\u548c\u3002\n\t\n      $mxl[i][j]$ \u4e3a\u7b2c $i$ \u884c\u524d $j$ \u4e2a $p[i][j]$ \u7684\u6700\u5927\u503c\uff0c$mxr[i][j]$ \u4e3a\u7b2c $i$ \u884c\u540e $j$ \u4e2a $p[i][j]$ \u7684\u6700\u5927\u503c\u3002\n      \n      $pol[i][j]$ \u4e3a\u7b2c $i$ \u884c\u524d $j$ \u4e2a $p[i][j]$ \u53d6\u6700\u5927\u503c\u7684\u65b9\u6848\u6570\uff0c$por[i][j]$ \u4e3a\u7b2c $i$ \u884c\u540e $j$ \u4e2a $p[i][j]$ \u53d6\u6700\u5927\u503c\u7684\u65b9\u6848\u6570\u3002\n\n1. \u8bbe $d[i]$ \u4e3a\u4e24\u5706\u5fc3\u76f8\u5dee $i$ \u884c\u65f6\u4e24\u5706\u5fc3\u81f3\u5c11\u76f8\u5dee $d[i]$ \u5217\u3002   $(i<=2r)$\n\n1. \u90a3\u4e48\u679a\u4e3e\u5706\u5fc3\u4f4d\u7f6e $(i,j)$ \uff0c\u518d\u679a\u4e3e\u7b2c\u4e8c\u4e2a\u5706\u5fc3\u7684\u884c\u6570 $k$ \uff0c\u82e5 $|k-i|<=2r$ \u5219\u7528 $d[i]$ \u786e\u5b9a $k$ \u884c\u80fd\u591f\u7528\u4e8e\u66f4\u65b0\u7684\u5217\u6570\u8303\u56f4\u540e\u5229\u7528 $mxl[i][j]$\uff0c$mxr[i][j]$\uff0c$pol[i][j]$\uff0c$por[i][j]$ \u66f4\u65b0\u7b54\u6848\u4e0e\u65b9\u6848\u6570\u3002\u82e5$|k-i|>2r$ \uff0c\u76f4\u63a5\u7528 $k$ \u884c\u7684\u6700\u5927\u503c\u6765\u66f4\u65b0\u7b54\u6848\u4e0e\u65b9\u6848\u6570\u3002\uff08\u56e0\u4e3a\u65e0\u8bba\u5982\u4f55\u4e24\u5706\u90fd\u4e0d\u76f8\u4ea4\uff09\n\n\u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n\nusing namespace std;\n\nint d[510],h[510];\nlong long s[510][510],p[510][510],mxl[510][510],pol[510][510],mxr[510][510],por[510][510];\nint n,m,r,x;\nlong long ans,cnt;\n\nint main()\n{\n    scanf(\"%d%d%d\",&n,&m,&r);\n    for(int i=1;i<=n;i++)\n    for(int j=1;j<=m;j++)\n    {\n        scanf(\"%d\",&x);\n        s[i][j]=s[i][j-1]+x;\n    }\n    h[0]=r;\n    for(int i=1;i<=r;i++)\n    h[i]=(int)sqrt(r*r-i*i);\n    for(int i=0;i<=2*r;i++)\n    for(int j=0;j<=r;j++)\n    if(j>=i-r) d[i]=max(d[i],h[j]+h[abs(i-j)]+1);\n    for(int i=r+1;i<=n-r;i++)\n    for(int j=r+1;j<=m-r;j++)\n    for(int k=-r;k<=r;k++)\n    p[i][j]+=s[i+k][j+h[abs(k)]]-s[i+k][j-h[abs(k)]-1];\n    for(int i=r+1;i<=n-r;i++)\n    for(int j=r+1;j<=m-r;j++)\n    {\n        mxl[i][j]=mxl[i][j-1],pol[i][j]=pol[i][j-1];\n        if(p[i][j]>mxl[i][j]) mxl[i][j]=p[i][j],pol[i][j]=1;\n        else if(p[i][j]==mxl[i][j]) pol[i][j]++;\n    }\n    for(int i=r+1;i<=n-r;i++)\n    for(int j=m-r;j>=r+1;j--)\n    {\n        mxr[i][j]=mxr[i][j+1],por[i][j]=por[i][j+1];\n        if(p[i][j]>mxr[i][j]) mxr[i][j]=p[i][j],por[i][j]=1;\n        else if(p[i][j]==mxr[i][j]) por[i][j]++;\n    }\n    for(int i=r+1;i<=n-r;i++)\n    for(int j=r+1;j<=m-r;j++)\n    {\n        long long res=p[i][j];\n        for(int k=r+1;k<=n-r;k++)\n        {\n            if(abs(k-i)>=2*r+1)\n            {\n                if(res+mxl[k][m-r]>ans) ans=res+mxl[k][m-r],cnt=pol[k][m-r];\n                else if(res+mxl[k][m-r]==ans) cnt+=pol[k][m-r];\n                continue;\n            }\n            if(j-d[abs(k-i)]>=r+1)\n            if(res+mxl[k][j-d[abs(k-i)]]>ans) ans=res+mxl[k][j-d[abs(k-i)]],cnt=pol[k][j-d[abs(k-i)]];\n            else if(res+mxl[k][j-d[abs(k-i)]]==ans) cnt+=pol[k][j-d[abs(k-i)]];\n            if(j+d[abs(k-i)]<=m-r)\n            if(res+mxr[k][j+d[abs(k-i)]]>ans) ans=res+mxr[k][j+d[abs(k-i)]],cnt=por[k][j+d[abs(k-i)]];\n            else if(res+mxr[k][j+d[abs(k-i)]]==ans) cnt+=por[k][j+d[abs(k-i)]];\n        }\n    }\n    printf(\"%lld %lld\",ans,cnt>>1);\n    return 0;\n}\n```\n\n\u540e\u8bb0\n\nWA\u65f6\u7684\u6211\n\n\n\n[![image.png](https://s22.postimg.cc/ealnh7xq9/image.png)](https://postimg.cc/image/653lj29h9/)\n\n\nAC\u4e86\u7684\u6211\n\n\n\n\n[![image.png](https://s22.postimg.cc/yhz39pq4h/image.png)](https://postimg.cc/image/l124qufst/)\n\n\n",
        "postTime": 1534860577,
        "uid": 32944,
        "name": "lotus_grow",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF363E \u3010Two Circles\u3011"
    }
]