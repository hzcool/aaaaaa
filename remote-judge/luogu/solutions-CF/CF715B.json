[
    {
        "content": "\u597d\u50cf\u795e\u4ed9\u4eec\u90fd\u662f\u4e24\u6b21 dijkstra\uff0c\u63d0\u4f9b\u4e00\u4e2a\u4e8c\u5206\u7684\u505a\u6cd5\u3002\n\n\u82e5\u4e0d\u8fde\u901a\u6216\u8005\u672a\u77e5\u8fb9\u6743\u5168\u90e8\u53d6\u6700\u5c0f\u503c\u65f6 $s\\to t$ \u7684\u6700\u77ed\u8def\u8fd8\u662f\u5927\u4e8e $l$\uff0c\u65e0\u89e3\u3002\n\n\u5047\u8bbe\u672a\u77e5\u8fb9\u7f16\u53f7\u5206\u522b\u4e3a $1,2,\\dots,e$\u3002\u8003\u8651\u521d\u59cb\u65f6\u6240\u6709\u8fb9 $i$ \u6743\u503c\u4e3a $x_i=1$\uff0c\u7136\u540e\u91cd\u590d $x_1+=1,x_2+=1,\u2026,x_e+=1,x_1+=1,x_2+=1$,\u2026 \u7684\u64cd\u4f5c\u76f4\u5230\u65e0\u7a77\uff0c\u90a3\u4e48\u6bcf\u6b21\u6700\u77ed\u8def\u7684\u957f\u5ea6\u81f3\u591a\u589e\u52a0 $1$\u3002\n\n\u5bf9\u64cd\u4f5c\u5e8f\u5217\u4e8c\u5206\uff0c\u603b\u590d\u6742\u5ea6 $O(m\\log n\\log(ml))$\u3002\n\n\u6ce8\u610f\u4e8c\u5206\u5b8c\u4e86\u4ee5\u540e\u8fd8\u8981\u518d\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u65e0\u89e3\uff0c\u5426\u5219\u5224\u4e0d\u4e86\u5df2\u7ecf\u5b58\u5728\u4e00\u6761\u8def\u5f84\u5c0f\u4e8e $l$ \u7684\u60c5\u51b5\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst ll N=1005,M=10005,INF=0x3f3f3f3f3f3f3f3f;\nll n,m,L,s,t,tot,hd[N],a[M],b[M],e;\nstruct edge{ll t,w,nxt;}es[M<<1];\nll U[M],V[M],W[M];\nvoid add(ll u,ll v,ll w){es[++tot]=(edge){v,w,hd[u]};hd[u]=tot;}\nll d[N];\nstruct node{ll id,d;bool operator<(const node&x)const{return d>x.d;}};\nvoid dijkstra(ll s){\n\tpriority_queue<node>q;\n\tmemset(d,0x3f,sizeof(d));\n\tq.push((node){s,0});d[s]=0;\n\tfor(node cur;!q.empty();){\n\t\tcur=q.top();q.pop();\n\t\tll u=cur.id;\n\t\tif(cur.d>d[u])continue;\n\t\tfor(ll i=hd[u];i;i=es[i].nxt)\n\t\t\tif(d[es[i].t]>d[u]+es[i].w)\n\t\t\t\td[es[i].t]=d[u]+es[i].w,q.push((node){es[i].t,d[es[i].t]});\n\t}\n}\ninline ll calc(ll x,ll i){\n\tll tms=x/e;\n\tx-=tms*e;\n\tif(x>=i)tms++;\n\treturn tms+1;\n}\nbool ok(ll x){\n\tfor(ll i=1;i<=e;i++)es[a[i]-1].w=es[a[i]].w=calc(x,i);\n\tdijkstra(s);\n\tif(d[t]>=L)return 1;\n\treturn 0;\n}\nint main(){\n\tscanf(\"%lld%lld%lld%lld%lld\",&n,&m,&L,&s,&t);\n\tfor(ll i=1,u,v,w;i<=m;i++){\n\t\tscanf(\"%lld%lld%lld\",&u,&v,&w);\n\t\tU[i]=u,V[i]=v,W[i]=w;\n\t\tif(!w)a[++e]=tot+2,b[e]=i,w++;\n\t\tadd(u,v,w),add(v,u,w);\n\t}\n\tdijkstra(s);\n\tif(d[t]==INF||d[t]>L)return puts(\"NO\"),0;\n\tll l=0,r=L*m,ans=1;\n\twhile(l<=r){\n\t\tll mid=l+r>>1;\n\t\tif(ok(mid))ans=mid,r=mid-1;\n\t\telse l=mid+1;\n\t}\n\tif(!ok(ans))return puts(\"NO\"),0;\n\tputs(\"YES\");\n\tfor(ll i=1;i<=e;i++)W[b[i]]=calc(ans,i);\n\tfor(ll i=1;i<=m;i++)printf(\"%lld %lld %lld\\n\",U[i],V[i],W[i]);\n\treturn 0;\n}\n```",
        "postTime": 1601856296,
        "uid": 121027,
        "name": "Spasmodic",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF715B \u3010Complete The Graph\u3011"
    },
    {
        "content": "## **\u9898\u76ee\u7b80\u8ff0**\n- \uff08\u6e23\u7ffb\uff09\u4e00\u4e2a\u65e0\u5411\u56fe\u5305\u542b\u4ece$0$\u5230 $n$-$1$ \u7684$n$\u4e2a\u9876\u70b9\u4ee5\u53ca$m$\u4e2a\u8fb9\uff0c\u56fe\u7684\u6bcf\u4e2a\u8fb9\u90fd\u6709\u6b63\u6574\u6570\u6743\u503c\u3002\u4f46\u4e00\u4e9b\u8fb9\u6743\u88ab\u6e05\u9664\u4e86\uff01\u56e0\u6b64\u8981\u91cd\u65b0\u5206\u914d\u6b63\u6574\u6570\u8fb9\u6743\u7ed9\u6bcf\u4e00\u4e2a\u8fb9\u6743\u88ab\u6e05\u9664\u7684\u8fb9\uff0c\u4ee5\u4f7f\u5f97\u9876\u70b9$s,t$\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u5f84\u7684\u957f\u5ea6\u662f$L$\u3002\n\n- \u7b2c\u4e00\u884c\u8f93\u5165 $n,m,L,s,t$ \u5206\u522b\u8868\u793a\u56fe\u7684\u70b9\u6570\uff0c\u8fb9\u6570\uff0c\u4fee\u6539\u540e\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u548c\u6700\u77ed\u8def\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\u3002\n\n- \u63a5\u4e0b\u6765m\u884c\u6bcf\u884c\u8f93\u5165$u,v,w$\u3002$u,v$\u8868\u793a\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\uff0cw\u8868\u793a\u8be5\u8fb9\u6743\u503c\u3002\u5982\u679cw=0\u5219\u8868\u793a\u8be5\u8fb9\u8fb9\u6743\u88ab\u6d88\u9664\u4e86\u3002\n\n- \u786e\u4fdd\u6ca1\u6709\u91cd\u8fb9\u3002\n\n- \u8f93\u51fa$\u201cNO\u201d$\u5982\u679c\u65e0\u6cd5\u4f7f\u6700\u77ed\u8def\u957f\u5ea6\u4e3aL\u3002\n\u5982\u679c\u53ef\u4ee5\u5219\u7b2c\u4e00\u884c\u8f93\u51fa$\u201cYES\u201d$\u3002\n\u63a5\u4e0b\u6765\u7684$m$\u884c\u5e94\u5305\u542b\u4fee\u6539\u540e\u56fe\u5f62\u7684\u8fb9\u3002\u6bcf\u884c\u5e94\u8be5\u5305\u542b\u4e09\u4e2a\u6574\u6570$u_i$\uff0c$v_i$\u548c$w_i$\u3002\u672a\u88ab\u6e05\u9664\u7684\u8fb9\u6743\u503c\u5fc5\u987b\u4fdd\u6301\u4e0d\u53d8\uff0c\u800c\u65b0\u7684\u8fb9\u6743\u53ef\u4ee5\u662f\u4e0d\u8d85\u8fc7$10^{18}$\u7684\u4efb\u4f55\u6b63\u6574\u6570\u3002\n\n- \u8f93\u51fa\u4e2d\u8fb9\u7684\u987a\u5e8f\u65e0\u5173\u7d27\u8981\u3002$s,t$\u95f4\u6700\u77ed\u8def\u957f\u5ea6\u5fc5\u987b\u7b49\u4e8e$L$\u3002\n\n- \u5982\u679c\u6709\u591a\u4e2a\u89e3\u51b3\u65b9\u6848\uff0c\u8bf7\u8f93\u51fa\u5176\u4e2d\u4efb\u4f55\u4e00\u4e2a\u3002\n\n## **\u601d\u8def\uff08\u4e24\u904ddj\uff09**\n**1.** \u5148\u5c06\u6240\u6709\u88ab\u6d88\u4e3a $0$ \u7684\u8fb9\u6743\u6539\u4e3a $1$,\u8dd1\u4e00\u8fb9 $dj$,\u5982\u679c $dis[t]\\gt L$\u5219\u65e0\u89e3\u3002\u56e0\u4e3a\u6bcf\u6761\u8fb9\u5fc5\u987b\u8981\u6709\u5927\u4e8e\u7b49\u4e8e $1$ \u7684\u8fb9\u6743\u3002\u8d4b\u4e3a $1$ \u8d85 $L$ \u5c31\u6ca1\u529e\u6cd5\u4e86\u3002\n\n**2.** \u7b2c\u4e00\u904d$dj$\u7684\u6700\u77ed\u8def\u6570\u7ec4\u4e3a $dis[][0]$,\u7b2c\u4e8c\u904d\u4e3a $dis[][1]$\u3002\u8bb0 $dif=L-dist[t][0]$\uff0c\u5373\u4e0e $L$ \u76f8\u5dee\u591a\u5c11\u3002\n\n**3.** \u7b2c\u4e8c\u904d\u8dd1 $dj$ \u65f6\uff0c\u5bf9\u4e8e\u4efb\u610f $x\\rightarrow y$,\u5982\u679c\u6ee1\u8db3 $dis[x][1]+w<dis[y][0]+dif$\uff0c\n\n\u90a3\u4e48\u66f4\u65b0 $w=dis[y][0]+dif-dis[x][1]$\uff0c\u8fd9\u6837\u5c31\u80fd\u4f7f\u66f4\u65b0\u540e\u7684\u6700\u77ed\u8def\u957f\u5ea6\u4e3a $L$\u3002\n\n\n------------\n\n\n**\u6ce8\uff1a**\n\n1.\u849f\u84bb zhenliu\u4e00\u5f00\u59cb\u6ca1\u60f3\u660e\u767d\u4e3a\u4ec0\u4e48\u66f4\u65b0 $w$ \u5c31\u80fd\u4f7f\u66f4\u65b0\u540e\u7684\u6700\u77ed\u8def\u957f\u5ea6\u4e3a $L$\u3002\n\n\u673a\u623f\u5927\u4f6c\u4e00\u8a00\u70b9\u4f1a\uff1a\u201c\u56e0\u4e3a\u4f60**\u6bcf\u4e2a\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u7684**\u90fd\u66f4\u65b0\uff0c\u90a3\u4e48\u6700\u77ed\u8def\u80af\u5b9a\u6700\u540e\u5c31\u662f $L$\u4e86\u5457\uff01\u5982\u679c\u8fd9\u6837\u90fd\u4e0d\u662f $L$\u90a3\u5c31\u8f93\u51fa $NO$\u5457\uff01\u201d\n\n2.\u8fd9\u9898\u4e0d\u7528\u5806\u4f18\u5316\u5c31\u80fd\u8fc7\uff0c\u867d\u7136\u6211\u7528\u4e86\u3002\u3002\u3002\n\n\n------------\n\n\n## **code\uff08\u6709\u6ce8\u91ca\u7248\uff09**\n```c\n#include<bits/stdc++.h>\n#define RI register int\nusing namespace std;\ntypedef pair<int,int> PII;\nconst int maxn=10002,maxm=20002;\nint head[maxn],to[maxm],nxt[maxm],len[maxm],vis[maxn],zero[maxm],from[maxm],dis[maxn][2];\nint n,m,L,s,t,u,v,w,dif,tot=1;\npriority_queue<PII,vector<PII>,greater<PII> >que;\ntemplate<typename T> void Read(T &t){\n\tt=0;char c;int f=1;\n\twhile((c=getchar())<'0'||c>'9')if(c=='-')f=-1;\n\twhile(c>='0'&&c<='9')(t*=10)+=c-'0',c=getchar();\n\tt*=f;\n}\nvoid add_edge(int x,int y,int w,int z){\n\tto[++tot]=y;\n\tzero[tot]=z; \n\tnxt[tot]=head[x];\n\tlen[tot]=w+z;\n\tfrom[tot]=x;\n\thead[x]=tot;\n}\nvoid dijkstra(int k){\n\tmemset(vis,0,sizeof(vis));\n\tfor(RI i=0;i<n;i++){//\u662f0\u5230n-1\u554a\u2026\u2026 \n\t\tdis[i][k]=0x3f3f3f3f;\n\t}\n\tdis[s][k]=0;\n\tque.push(make_pair(0,s));\n\twhile(!que.empty()){\n\t\tint x=que.top().second;\n\t\tque.pop();\n\t\tif(vis[x])continue;\n\t\tvis[x]=1; \n\t\tfor(RI i=head[x];i;i=nxt[i]){\n\t\t\tint y=to[i];\n\t\t\tif(k==1){//\u7b2c\u4e8c\u904ddj\u7279\u6b8a\u5904\u7406 \n\t\t\t\tif(zero[i]&&dis[x][1]+len[i]<dis[y][0]+dif)\n\t\t\t\t\tlen[i^1]=len[i]=dis[y][0]+dif-dis[x][1];\n\t\t\t}\n\t\t\tif(dis[y][k]>dis[x][k]+len[i]){\n\t\t\t\tdis[y][k]=dis[x][k]+len[i];\n\t\t\t\tque.push(make_pair(dis[y][k],y));\n\t\t\t}\n\t\t}\n\t} \n}\nint main(){\n\tRead(n);\n\tRead(m);\n\tRead(L);\n\tRead(s);\n\tRead(t);\n\tfor(RI i=1;i<=m;++i){\n\t\tRead(u);\n\t\tRead(v);\n\t\tRead(w);\n\t\tadd_edge(u,v,w,!w);//!w\u5224\u65adw\u662f\u5426\u4e3a0\uff0c\u4e3a0\u5219\u4f20\u51651 \uff0c\u65b9\u4fbf\u540e\u9762dj\u5224\u65adzero\u6570\u7ec4\u6765\u5224\u65ad\u521d\u59cb\u8fb9\u6743\u662f\u5426\u4e3a0 \n\t\tadd_edge(v,u,w,!w); \n\t}\n\tdijkstra(0);//\u7b2c\u4e00\u6b21\u6b63\u5e38\u7684dijkstra  \n\tif(dis[t][0]>L){//\u56e0\u4e3a\u6bcf\u6761\u8fb9\u5fc5\u987b\u6709\u6743\u503c\uff0c\u5982\u679c\u8fb9\u6743\u8d4b\u4e3a1\u90fd\u8d85L\u4e86\uff0c\u90a3\u4e48\u65e0\u89e3 \n\t\tputs(\"NO\");\n\t\treturn 0;\n\t}\n\tdif=L-dis[t][0];//difference\u8868\u793a\u4e0eL\u5dee\u591a\u5c11 \n\tdijkstra(1);//\u7b2c\u4e8c\u6b21\u5c1d\u8bd5\u52a0\u6743\u503c\u4e3aL\u7684dijkstra\n\tif(dis[t][1]!=L){\n\t\tputs(\"NO\");\n\t} \n\telse{\n\t\tputs(\"YES\");\n\t\tfor(RI i=2;i<=tot;i+=2){\n\t\t\tprintf(\"%d %d %d\\n\",from[i],to[i],len[i]);//\u8f93\u51fa\u7aef\u70b9\u548c\u6743\u503c\uff0c\u56e0\u4e3a\u662f\u65e0\u5411\u56fe\uff0c\u6240\u4ee5i\u6bcf\u6b21+2 \n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\n------------\n\n[\u65e0\u6ce8\u91ca\u6e05\u723d\u7248code](https://www.luogu.com.cn/paste/ueq7netd)\n\n ##### \u7b2c\u4e00\u6b21\u63d0\u4ea4\u9898\u89e3\uff0c\u6709\u9519\u8bef\u6b22\u8fce\u5927\u4f6c\u4eec\u5728\u8bc4\u8bba\u533a\u63d0\u51fa\uff01\uff01\n \n\n------------\n\n\n**TAHANKS FOR WATCHING**\n\n\n\n",
        "postTime": 1601386570,
        "uid": 349333,
        "name": "zhenliu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF715B \u3010Complete The Graph\u3011"
    },
    {
        "content": "\n[CF715B Complete The Graph](https://www.luogu.com.cn/problem/CF715B)\n\n\u6211\u4eec\u7528$dis[i][j]$\u8868\u793a\u5230\u70b9$i$\u7ecf\u8fc7$j$\u6761\u96f6\u8fb9\u7684\u6700\u77ed\u8def\uff0c\u7136\u540e\u627e\u5230\u6700\u5c0f\u7684$j$\u4f7f\u5f97$dis[T][j]+j<=L$\u5e76\u5c06\u8fd9\u6761\u8def\u5f84\u7ed9\u8d4b\u503c\u641e\u6210$L$\uff0c\u7136\u540e\u5c06\u5176\u5b83\u96f6\u8fb9\u8d4b\u503c$L$\u5373\u53ef.\n\n\u5bb9\u6613\u8bc1\u660e\u8fd9\u4e2a\u7b56\u7565\u662f\u6b63\u786e\u7684\n\n```cpp\n\nconst ll N=1.5e3+3, M=2e5+4;\n\nll head[M], to[M<<1], next[M<<1], tot=1, c[M<<1];\ninline void add(ll x, ll y, ll z){\n\tto[++tot]=y; next[tot]=head[x]; head[x]=tot; c[tot]=z;\n}\ninline void Link(ll x, ll y, ll z){\n\tadd(x, y, z); add(y, x, z);\n}\n\nll n, m;\nll L, S, T;\n\nll dis[N][N], pre[N][N];\n\nbool vis[N*N];\n//queue<pair<ll, ll> >q;\npriority_queue<pair<ll, ll>, vector<pair<ll, ll> > ,greater<pair<ll, ll> > > q;\ninline void dijkstra(){\n\tfor (R ll i=1; i<=n; i++)\n\t\tfor (R ll j=0; j<n; j++) dis[i][j]=inf;\n\tdis[S][0]=0;\n\tq.push(make_pair(0, (S-1)*n+1));\n\twhile(!q.empty())\n    {\n        ll now=q.top().second;q.pop();\n        ll x=(now-1)/n+1, y=(now-1)%n;\n        if(vis[now]) continue; vis[now]=true;\n        for (R ll i=head[x], ver; i; i=next[i]){\n        \tver=to[i];\n        \tll ny=y+(c[i]==0), id=(ver-1)*n+ny+1;\n        \tif (dis[ver][ny]>dis[x][y]+c[i]){\n        \t\tdis[ver][ny]=dis[x][y]+c[i];\n        \t\tq.push(make_pair(dis[ver][ny], id));\n        \t\tpre[ver][ny]=i;\n\t\t\t}\n\t\t}\n    }\n}\n\nbool flag;\ninline void dfs(ll x, ll y, ll D){\n\tll i=pre[x][y];\n\tif (x==S) return;\n\tif (c[i]==0){\n\t\t--y;\n\t\tif (!flag){\n\t\t\tflag=true;\n\t\t\tc[i]=c[i^1]=D;\n\t\t}else c[i]=c[i^1]=1;\n\t}\n\tdfs(to[i^1], y, D);\n}\n\ninline bool solve(){\n\tif (dis[T][0]<L) return false;\n\tif (dis[T][0]==L) return true;\n\tfor (R ll i=1; i<n; i++)\n\t\tif (dis[T][i]+i<=L) return dfs(T, i, L-dis[T][i]-i+1), true;\n\treturn false;\n}\n\nint main(){\n\tread(n); read(m); read(L); read(S); read(T); ++S; ++T;\n\tfor (R ll i=1, x, y, z; i<=m; i++){\n\t\tread(x); read(y); read(z);\n\t\t++x; ++y;\n\t\tLink(x, y, z);\n\t}\n//\tspfa();\n\tdijkstra();\n\tif (!solve()) return puts(\"NO\"), 0;\n\tputs(\"YES\");\n\tfor (R ll i=2; i<=tot; i+=2){\n\t\tif (!c[i]) c[i]=L;\n\t\twritesp(to[i^1]-1); writesp(to[i]-1); writeln(c[i]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1606909775,
        "uid": 220285,
        "name": "Saber_Master",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF715B \u3010Complete The Graph\u3011"
    },
    {
        "content": "~~\u9ebb\u4e86\u9ebb\u4e86\uff0c\u5199\u4e86\u597d\u4e45\u3002~~\n\n#### \u4e00. $n$ \u6b21 dijkstra\n\n\u7531\u4e8e\u53ef\u80fd\u5b58\u5728\u5f88\u591a $0$ \u8fb9\uff0c\u6240\u4ee5\u53ea\u628a\u6700\u77ed\u8def\u4e0a\u7684 $0$ \u8fb9\u4fee\u6539\u503c\u662f\u4e0d\u5bf9\u7684\uff0c\u6240\u4ee5\u6253\u7b97\u8dd1 $n$ \u6b21\u6700\u77ed\u8def\u6c42\u89e3\u3002\u663e\u7136\uff0c\u5b83\u6302\u4e86\u3002\n\n#### \u4e8c. \u4e00\u6b21 dijkstra\n\n\u7b2c\u4e00\u6b21\u627e\u5230\u6700\u77ed\u8def\uff0c\u7136\u540e\u628a\u8be5\u8def\u5f84\u4e0a\u7684 $0$ \u8fb9\u6539\u4e3a\u6b63\u786e\u503c\uff0c\u5176\u4ed6\u7684\u5168\u90e8\u8d4b\u503c\u4e3a\u6781\u5927\u503c\u3002\u4f46\u662f\u4ecd\u7136\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e24\u6761\u8def\u5171\u7528 $0$ \u8fb9\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u5b83\u53c8\u6302\u4e86\u3002\n\n#### \u4e09. \u4e24\u6b21 dijkstra\n\n- \u7b2c\u4e00\u904d\u5c06\u6240\u6709\u7684 $0$ \u8fb9\u8d4b\u503c\u4e3a $1$\uff0c\u8dd1\u4e00\u904d dijsktra\uff0c\u5224\u65ad\u6700\u77ed\u8def\u662f\u5426\u5927\u4e8e $l$\uff0c\u5927\u4e8e\u5219\u65e0\u89e3\u3002\n\n- \u7b2c\u4e8c\u904d\u8dd1\u51fa\u6700\u77ed\u8def\u3002\u5e76\u4e14\u53cd\u8fc7\u6765 dfs \u5c06\u4f1a\u4e0e\u5176\u4ed6\u7684\u8def\u5171\u7528\u7684 $0$ \u8fb9\u8d4b\u4e0a\u4e0e $l$ \u5dee\u7684\u5e73\u5747\u503c\u3002\n\n\u7136\u540e\u5f88\u597d\uff0c\u5f88\u5feb\u6211\u5c31\u53d1\u73b0\u8fd9\u6837\u4ecd\u7136\u4e0d\u80fd\u963b\u6321\u6700\u77ed\u8def\u53ef\u80fd\u66f4\u6362\u3002\u4e8e\u662f\u5b83\u53c8\u53cc\u53d2\u53d5\u6302\u4e86......\n\n#### \u56db. \u4e24\u6b21 dijkstra\n\n\u8bf7\u6559\u5927\u4f6c\u540e\uff0c\u7ec8\u4e8e\u660e\u767d\u4e86\u505a\u6cd5\u3002\n\n- \u7b2c\u4e00\u904d\u5c06\u6240\u6709\u7684 $0$ \u8fb9\u8d4b\u503c\u4e3a $1$\uff0c\u8dd1\u4e00\u904d dijsktra\uff0c\u5224\u65ad\u662f\u5426\u65e0\u89e3\uff0c\u8bb0\u5f55 $diss$ \u4e3a\u6700\u77ed\u8def\u957f\u5ea6\u548c $l$ \u7684\u5dee\u503c\u3002\n\n- \u7b2c\u4e8c\u904d\u8dd1\u6700\u77ed\u8def\uff0c\u4e3a\u786e\u4fdd\u6700\u77ed\u8def\u4e3a $l$\uff0c\u6bcf\u6b21\u9047\u5230 $0$ \u8fb9\u65f6\uff0c\u82e5\u6b64\u65f6\u6700\u77ed\u8def\u5c0f\u4e8e $dis[v][0]+diss$\uff0c\u90a3\u4e48\u5c06\u6bcf\u6761\u8def\u81f3\u5c11\u4e0a\u6da8\u81f3 $l$\uff0c\u53c8\u4fdd\u8bc1\u6709\u60c5\u51b5\u5b58\u5728\uff0c\u6700\u540e\u5224\u65ad $dis[t][1]$ \u662f\u5426\u4e3a $l$ \u540e\u8f93\u51fa\u5373\u53ef\u3002\n\n\u4ee3\u7801\u5c31\u4e0d\u653e\u4e86\uff0c\u5176\u4ed6\u5de8\u4f6c\u7684\u7801\u98ce\u597d\u770b\u591a\u4e86\u3002\n\n**\u849f\u84bb\u62d9\u89c1\uff0c\u8bf7\u6307\u6559\u3002**",
        "postTime": 1660145193,
        "uid": 557385,
        "name": "cjlak1o1",
        "ccfLevel": 0,
        "title": "CF715B Complete The Graph \u9898\u89e3"
    },
    {
        "content": "\u53ef\u80fd\u662f\u6700\u6162\u7684\u505a\u6cd5\uff0c\u4f46\u6700\u597d\u7406\u89e3\u3002\n\n\u9996\u5148\u660e\u767d\u4e00\u4e2a\u6027\u8d28\uff1a\u5982\u679c\u65b0\u52a0\u8fd9\u6761\u8fb9\u540e\u6700\u77ed\u8ddd\u79bb\u53d8\u5316\u4e86\uff0c\u8bf4\u660e\u8fd9\u6761\u8fb9\u4e00\u5b9a\u7528\u5230\u4e86\u3002\n\n\u6211\u4eec\u5148\u4e0d\u8003\u8651 $0$ \u8fb9\uff0c\u7528\u6240\u6709\u6709\u8fb9\u6743\u7684\u8fb9\u5efa\u56fe\uff0c\u8dd1\u6700\u77ed\u8def\uff0c\u5982\u679c\u6b64\u65f6\u6700\u77ed\u8ddd\u79bb\u5c0f\u4e8e $L$ \uff0c\u90a3\u4e48\u4e00\u5b9a\u65e0\u89e3\u3002$0$ \u8fb9\u7684\u6570\u503c\u4e0d\u4f1a\u589e\u52a0\u6b64\u65f6\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u4e0d\u7ecf\u8fc7\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5982\u679c\u6b64\u65f6\u6700\u77ed\u8ddd\u79bb\u7b49\u4e8e $L$ \uff0c\u76f4\u63a5\u628a $0$ \u8fb9\u5168\u8bbe\u4e3a\u65e0\u7a77\u5927\u5c31\u884c\u4e86\uff0c\u5f53\u505a\u6ca1\u6709\u3002\n\n\u5982\u679c\u6b64\u65f6\u6700\u77ed\u8ddd\u79bb\u5927\u4e8e $L$\uff0c\u90a3\u4e48\u8003\u8651\u8d2a\u5fc3\uff0c\u4e0d\u65ad\u52a0\u5165 $0$ \u8fb9\u5e76\u4e14\u5c06 $0$ \u8fb9\u7684\u8fb9\u6743\u8bbe\u4e3a $1$ \uff0c\u8fd9\u6837\u53ef\u4ee5\u4f7f\u5f97\u6700\u77ed\u8ddd\u79bb\u5c3d\u53ef\u80fd\u77ed\u3002\u4f46\u5982\u679c\u52a0\u5165\u4e86\u4e00\u6761\u8fb9\u6743\u4e3a $1$ \u7684\u8fb9\u540e\u6700\u77ed\u8ddd\u79bb\u5c0f\u4e8e\u4e86 $L$ \u600e\u4e48\u529e\u5462\uff1f\u5c31\u628a\u8fd9\u6761\u8fb9\u7684\u503c\u589e\u5927 $(L-dis[t])$ \uff0c\u4e5f\u5c31\u662f\u5c11\u51fa\u6765\u7684\u628a\u5b83\u8865\u4e0a\u5c31\u884c\u3002\u5269\u4e0b\u6ca1\u52a0\u5165\u7684 $0$ \u8fb9\u770b\u4f5c\u4e0d\u5b58\u5728\uff0c\u8d4b\u65e0\u7a77\u5927\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(k*mlogn)$ \uff0c$k$ \u4e3a\u5e38\u6570\u3002\n\n```\n#include<bits/stdc++.h>\n#define int long long\nconst int INF=1e18;\nusing namespace std;\nint n,m,L,s,t,idx,p;\nint head[10010],u[10010],v[10010],w[10010];\nint dis[10010],vis[10010];\nstruct node{\n\tint nxt,to,w;\n}edge[200010];\nvector<int> g;\nvoid add(int u,int v,int w)\n{\n\tedge[++idx].nxt=head[u];\n\tedge[idx].to=v;\n\tedge[idx].w=w;\n\thead[u]=idx;\n}\nvoid dijkstra(int s)\n{\n\tfor(int i=0;i<=n;i++)\n\t{\n\t\tdis[i]=INF;\n\t\tvis[i]=0;\n\t}\n\tpriority_queue< pair<int,int> > q;\n\tq.push(make_pair(0,s));\n\tdis[s]=0;\n\twhile(q.size())\n\t{\n\t\tint x=q.top().second;\n\t\tq.pop();\n\t\tif(vis[x])\n\t\tcontinue;\n\t\tvis[x]=1;\n\t\tfor(int i=head[x];i;i=edge[i].nxt)\n\t\t{\n\t\t\tint y=edge[i].to;\n\t\t\tif(dis[x]+edge[i].w<dis[y])\n\t\t\t{\n\t\t\t\tdis[y]=dis[x]+edge[i].w;\n\t\t\t\tq.push(make_pair(-dis[y],y));\n\t\t\t}\n\t\t}\n\t}\n}\nvoid print()\n{\n\tputs(\"YES\");\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tif(w[i]==0)\n\t\t{\n\t\t\tif(i<p)\n\t\t\tprintf(\"%lld %lld %d\\n\",u[i],v[i],1);\n\t\t\tif(i==p)\n\t\t\tprintf(\"%lld %lld %lld\\n\",u[i],v[i],L-dis[t]+1);\n\t\t\tif(i>p)\n\t\t\tprintf(\"%lld %lld %lld\\n\",u[i],v[i],INF);\n\t\t}\n\t\telse printf(\"%lld %lld %lld\\n\",u[i],v[i],w[i]);\n\t}\n}\nsigned main()\n{\n\tcin>>n>>m>>L>>s>>t;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%lld%lld%lld\",&u[i],&v[i],&w[i]);\n\t\tif(w[i]==0)\n\t\t{\n\t\t\tg.push_back(i);//\u8fb9\u6807\u53f7 \n\t\t\tcontinue;\n\t\t}\n\t\tadd(u[i],v[i],w[i]);\n\t\tadd(v[i],u[i],w[i]);\n\t}\n\tdijkstra(s);\n\tif(dis[t]<L)\n\t{\n\t\tputs(\"NO\");\n\t\treturn 0;\n\t}\n\tif(dis[t]==L)\n\t{\n\t\tputs(\"YES\");\n\t\tfor(int i=1;i<=m;i++)\n\t\t{\n\t\t\tif(!w[i])\n\t\t\tprintf(\"%lld %lld %lld\\n\",u[i],v[i],INF);\n\t\t\telse printf(\"%lld %lld %lld\\n\",u[i],v[i],w[i]);\n\t\t} \n\t\treturn 0;\n\t}\n\tif(dis[t]>L)//\n\t{\n\t\tfor(int i=0;i<g.size();i++)\n\t\t{\n\t\t\tadd(u[g[i]],v[g[i]],1);//\u52a01\u8fb9\n\t\t\tadd(v[g[i]],u[g[i]],1);\n\t\t\tdijkstra(s);\n\t\t\tif(dis[t]>L)\n\t\t\tcontinue;\n\t\t\tif(dis[t]<=L)\n\t\t\t{\n\t\t\t\tp=g[i];//\u8fd9\u662f\u7b2c\u51e0\u6761\u8fb9 \n\t\t\t\tprint();\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\tputs(\"NO\");\n\treturn 0;\n}",
        "postTime": 1610522288,
        "uid": 250699,
        "name": "Herkaii",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF715B \u3010Complete The Graph\u3011"
    },
    {
        "content": "## \u9898\u610f\n\u7ed9\u5b9a $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u8bf7\u4f60\u4fee\u6539\u5176\u4e2d\u8fb9\u6743\u4e3a $0$ \u7684\u8fb9\uff0c\u4f7f\u5f97 $s$ \u5230 $t$ \u7684\u6700\u77ed\u8def\u5f84\u957f\u4e3a $l$ \u5176\u4e2d\u8fb9\u6743\u8303\u56f4\u4e3a $1 \\le w \\le 10^{18}$.\n## \u5206\u6790\n\u9996\u5148\uff0c\u5efa\u8fb9\u7684\u987a\u5e8f\u660e\u663e\u5bf9\u7b54\u6848\u6ca1\u6709\u5f71\u54cd\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5148\u628a\u8fb9\u6743\u4e0d\u4e3a $0$ \u7684\u8fb9\u5efa\u51fa\u6765\uff0c\u8dd1\u4e00\u904d\u6700\u77ed\u8def\u3002\u7136\u540e\uff0c\u518d\u8fdb\u884c\u5206\u7c7b\u8ba8\u8bba\u3002\u8bbe $d[i]$ \u4e3a $s$ \u5230 $i$ \u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u3002 \n\n1. $d[t] < l$ \u6b64\u60c5\u51b5\u5fc5\u5b9a\u65e0\u89e3\uff0c\u56e0\u4e3a\u5728\u4e0d\u5efa\u8fb9\u6743\u4e3a $0$ \u7684\u8fb9\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e2a\u70b9\u53ef\u4ee5\u5230\u8fbe\uff0c\u90a3\u5efa\u5b8c\u8fb9\u6743\u4e3a $0$ \u7684\u8fb9\u540e\uff0c\u4f9d\u7136\u53ef\u4ee5\u5230\u8fbe\uff0c\u4e14\u4ecd\u5c0f\u4e8e $l$.\u8fd9\u662f\u5efa\u8fb9\u6743\u4e3a $0$ \u7684\u8fb9\u53ea\u80fd\u5c06\u6700\u77ed\u8def\u51cf\u5c0f\uff0c\u6240\u4ee5\u4e00\u5b9a\u65e0\u89e3\u3002\n\n2. $d[t] == l$ \u5fc5\u5b9a\u6709\u89e3\uff0c\u540c\u6837\u7684 $t$ \u4e00\u5b9a\u5728\u6ca1\u5efa\u8fb9\u6743\u4e3a $0$ \u4e4b\u524d\u7684\u8def\u5f84\u4e2d\uff0c\u53ea\u9700\u8981\u628a\u8fb9\u6743\u4e3a $0$ \u7684\u8bbe\u4e3a\u6b63\u65e0\u7a77\u5373\u53ef\u3002\n\n3. $d[t] == INF$ \u76f8\u5f53\u4e8e $d[t] > l$ \u4e0e\u7b2c\u56db\u79cd\u60c5\u51b5\u4e00\u8d77\u8003\u8651\u3002\n\n4. $d[t] > l$ \u8003\u8651\u6bcf\u6b21\u52a0\u4e00\u6761\u8fb9\uff0c\u56e0\u4e3a\u4e00\u6b21\u6027\u5168\u52a0\u4e0a\uff0c\u5c31\u4e0d\u77e5\u9053\u56fe\u7684\u60c5\u51b5\uff0c\u65e0\u6cd5\u8d4b\u8fb9\u6743\u3002\u6bcf\u6b21\u5efa\u4e00\u6761\u8fb9\u6743\u4e3a $0$ \u7684\u8fb9\uff0c\u628a\u8fb9\u6743\u8d4b\u4e3a $1$ \uff0c\u8dd1\u6700\u77ed\u8def\uff0c\u53d1\u73b0\u5982\u679c $d[t] < l$ \u4e86\uff0c\u8bf4\u660e\u8fd9\u6761\u8fb9\u5728\u901a\u5f80 $t$ \u7684\u8def\u5f84\u4e0a\uff0c\u5c31\u628a\u8fb9\u6743\u91cd\u65b0\u8d4b\u4e3a $l - d[t] + 1$ \u8fd9\u6837\u8dd1\u5230\u8fd9\u4e2a\u70b9\u5c31\u6070\u597d\u4e3a $l$ \u4e86\u3002\u5269\u4e0b\u7684\u8fb9\u8d4b\u4e3a\u6b63\u65e0\u7a77\u5373\u53ef\u3002\n\n\u6700\u540e\u8981\u6ce8\u610f\uff0c\u5f00\u59cb\u662f\u4ece $0$ \u53f7\u70b9\u5f00\u59cb\u7684\uff0c\u5148\u628a\u7f16\u53f7\u52a0 $1$ \u8f93\u51fa\u65f6\u518d\u51cf\u53bb\u5373\u53ef\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int N = 1e5 + 10;\nconst int INF = 1e18 + 1;\nint n,m,l,s,t;\nint id[N],cnt = 0;\nstruct node {\n\tint from,to,w;\n} a[N];\nstruct ndoe {\n\tint to,next,w;\n} tr[N];\nint h[N],k = 0;\nint d[N],vis[N],in[N];\nqueue<int> q;\nvoid add(int from,int to,int w) {\n\ttr[++k].to = to;\n\ttr[k].next = h[from];\n\ttr[k].w = w;\n\th[from] = k;\n}\nvoid spfa() {\n\tfor(int i = 1 ; i <= n ; i ++) d[i] = INF,vis[i] = false,in[i] = 0;\n\tq.push(s),d[s] = 0,vis[s] = true;\n\twhile(!q.empty()) {\n\t\tint u = q.front();\n\t\tq.pop(),vis[u] = false;\n\t\tfor(int i = h[u] ; ~i ; i = tr[i].next) {\n\t\t\tint y = tr[i].to;\n\t\t\tif(d[y] > d[u] + tr[i].w) {\n\t\t\t\td[y] = d[u] + tr[i].w;\n\t\t\t\tif(!vis[y]) {\n\t\t\t\t\tvis[y] = true;\n\t\t\t\t\tq.push(y);\n\t\t\t\t\tif(++ in[y] > N) return;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nsigned main() {\n\tmemset(h,-1,sizeof(h));\n\tcin >> n >> m >> l >> s >> t;\n\ts++,t++;\n\tfor(int i = 1 ; i <= m ; i ++) cin >> a[i].from >> a[i].to  >> a[i].w,a[i].from++,a[i].to++;\n\tfor(int i = 1 ; i <= m ; i ++) {\n\t\tif(a[i].w == 0) {\n\t\t\tid[++cnt] = i;\n\t\t} else add(a[i].from,a[i].to,a[i].w),add(a[i].to,a[i].from,a[i].w);\n\t}\n\tspfa();\n\tif(d[t] < l) {\n\t\tcout << \"No\";\n\t\treturn 0;\n\t} else if(d[t] == l) {\n\t\tcout << \"Yes\"<<endl;\n\t\tfor(int i = 1 ; i <= m ; i ++) {\n\t\t\tcout << a[i].from - 1<<\" \"<< a[i].to - 1<<\" \";\n\t\t\tif(a[i].w == 0) cout << INF - 1 << endl;\n\t\t\telse cout << a[i].w << endl;\n\t\t}\n\t\treturn 0;\n\t} else if(d[t] > l) {\n\t\tfor(int i = 1 ; i <= cnt ; i ++) {\n\t\t\ta[id[i]].w = 1;\n\t\t\tadd(a[id[i]].from,a[id[i]].to,1),add(a[id[i]].to,a[id[i]].from,1);\n\t\t\tspfa();\n\t\t\tif(d[t] > l) continue;\n\t\t\tif(d[t] <= l) {\n\t\t\t\tcout << \"Yes\"<<endl;\n\t\t\t\ta[id[i]].w =  l - d[t] + 1;\n\t\t\t\tfor(int i = 1 ; i <= m ; i ++) {\n\t\t\t\t\tcout << a[i].from - 1<<\" \" <<a[i].to - 1 <<\" \";\n\t\t\t\t\tif(a[i].w == 0) cout <<INF - 1 << endl;\n\t\t\t\t\telse cout << a[i].w << endl;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t}\n\t}\n\n\tcout << \"No\";\n\treturn 0;\n}\n```\n",
        "postTime": 1636273355,
        "uid": 420102,
        "name": "phmaprostrate",
        "ccfLevel": 4,
        "title": "CF715B Complete The Graph"
    },
    {
        "content": "## \u9898\u610f\r\n\u7ed9\u5b9a $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u8bf7\u4f60\u4fee\u6539\u5176\u4e2d\u8fb9\u6743\u4e3a $0$ \u7684\u8fb9\uff0c\u4f7f\u5f97 $s$ \u5230 $t$ \u7684\u6700\u77ed\u8def\u5f84\u957f\u4e3a $l$ \u5176\u4e2d\u8fb9\u6743\u8303\u56f4\u4e3a $1 \\le w \\le 10^{18}$.\r\n## \u5206\u6790\r\n\u9996\u5148\uff0c\u5efa\u8fb9\u7684\u987a\u5e8f\u660e\u663e\u5bf9\u7b54\u6848\u6ca1\u6709\u5f71\u54cd\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5148\u628a\u8fb9\u6743\u4e0d\u4e3a $0$ \u7684\u8fb9\u5efa\u51fa\u6765\uff0c\u8dd1\u4e00\u904d\u6700\u77ed\u8def\u3002\u7136\u540e\uff0c\u518d\u8fdb\u884c\u5206\u7c7b\u8ba8\u8bba\u3002\u8bbe $d[i]$ \u4e3a $s$ \u5230 $i$ \u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u3002 \r\n\r\n1. $d[t] < l$ \u6b64\u60c5\u51b5\u5fc5\u5b9a\u65e0\u89e3\uff0c\u56e0\u4e3a\u5728\u4e0d\u5efa\u8fb9\u6743\u4e3a $0$ \u7684\u8fb9\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e2a\u70b9\u53ef\u4ee5\u5230\u8fbe\uff0c\u90a3\u5efa\u5b8c\u8fb9\u6743\u4e3a $0$ \u7684\u8fb9\u540e\uff0c\u4f9d\u7136\u53ef\u4ee5\u5230\u8fbe\uff0c\u4e14\u4ecd\u5c0f\u4e8e $l$.\u8fd9\u662f\u5efa\u8fb9\u6743\u4e3a $0$ \u7684\u8fb9\u53ea\u80fd\u5c06\u6700\u77ed\u8def\u51cf\u5c0f\uff0c\u6240\u4ee5\u4e00\u5b9a\u65e0\u89e3\u3002\r\n\r\n2. $d[t] == l$ \u5fc5\u5b9a\u6709\u89e3\uff0c\u540c\u6837\u7684 $t$ \u4e00\u5b9a\u5728\u6ca1\u5efa\u8fb9\u6743\u4e3a $0$ \u4e4b\u524d\u7684\u8def\u5f84\u4e2d\uff0c\u53ea\u9700\u8981\u628a\u8fb9\u6743\u4e3a $0$ \u7684\u8bbe\u4e3a\u6b63\u65e0\u7a77\u5373\u53ef\u3002\r\n\r\n3. $d[t] == INF$ \u76f8\u5f53\u4e8e $d[t] > l$ \u4e0e\u7b2c\u56db\u79cd\u60c5\u51b5\u4e00\u8d77\u8003\u8651\u3002\r\n\r\n4. $d[t] > l$ \u8003\u8651\u6bcf\u6b21\u52a0\u4e00\u6761\u8fb9\uff0c\u56e0\u4e3a\u4e00\u6b21\u6027\u5168\u52a0\u4e0a\uff0c\u5c31\u4e0d\u77e5\u9053\u56fe\u7684\u60c5\u51b5\uff0c\u65e0\u6cd5\u8d4b\u8fb9\u6743\u3002\u6bcf\u6b21\u5efa\u4e00\u6761\u8fb9\u6743\u4e3a $0$ \u7684\u8fb9\uff0c\u628a\u8fb9\u6743\u8d4b\u4e3a $1$ \uff0c\u8dd1\u6700\u77ed\u8def\uff0c\u53d1\u73b0\u5982\u679c $d[t] < l$ \u4e86\uff0c\u8bf4\u660e\u8fd9\u6761\u8fb9\u5728\u901a\u5f80 $t$ \u7684\u8def\u5f84\u4e0a\uff0c\u5c31\u628a\u8fb9\u6743\u91cd\u65b0\u8d4b\u4e3a $l - d[t] + 1$ \u8fd9\u6837\u8dd1\u5230\u8fd9\u4e2a\u70b9\u5c31\u6070\u597d\u4e3a $l$ \u4e86\u3002\u5269\u4e0b\u7684\u8fb9\u8d4b\u4e3a\u6b63\u65e0\u7a77\u5373\u53ef\u3002\r\n\r\n\u6700\u540e\u8981\u6ce8\u610f\uff0c\u5f00\u59cb\u662f\u4ece $0$ \u53f7\u70b9\u5f00\u59cb\u7684\uff0c\u5148\u628a\u7f16\u53f7\u52a0 $1$ \u8f93\u51fa\u65f6\u518d\u51cf\u53bb\u5373\u53ef\u3002\r\n\r\n```cpp\r\n#include<bits/stdc++.h>\r\n#define int long long\r\nusing namespace std;\r\nconst int N = 1e5 + 10;\r\nconst int INF = 1e18 + 1;\r\nint n,m,l,s,t;\r\nint id[N],cnt = 0;\r\nstruct node {\r\n\tint from,to,w;\r\n} a[N];\r\nstruct ndoe {\r\n\tint to,next,w;\r\n} tr[N];\r\nint h[N],k = 0;\r\nint d[N],vis[N],in[N];\r\nqueue<int> q;\r\nvoid add(int from,int to,int w) {\r\n\ttr[++k].to = to;\r\n\ttr[k].next = h[from];\r\n\ttr[k].w = w;\r\n\th[from] = k;\r\n}\r\nvoid spfa() {\r\n\tfor(int i = 1 ; i <= n ; i ++) d[i] = INF,vis[i] = false,in[i] = 0;\r\n\tq.push(s),d[s] = 0,vis[s] = true;\r\n\twhile(!q.empty()) {\r\n\t\tint u = q.front();\r\n\t\tq.pop(),vis[u] = false;\r\n\t\tfor(int i = h[u] ; ~i ; i = tr[i].next) {\r\n\t\t\tint y = tr[i].to;\r\n\t\t\tif(d[y] > d[u] + tr[i].w) {\r\n\t\t\t\td[y] = d[u] + tr[i].w;\r\n\t\t\t\tif(!vis[y]) {\r\n\t\t\t\t\tvis[y] = true;\r\n\t\t\t\t\tq.push(y);\r\n\t\t\t\t\tif(++ in[y] > N) return;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nsigned main() {\r\n\tmemset(h,-1,sizeof(h));\r\n\tcin >> n >> m >> l >> s >> t;\r\n\ts++,t++;\r\n\tfor(int i = 1 ; i <= m ; i ++) cin >> a[i].from >> a[i].to  >> a[i].w,a[i].from++,a[i].to++;\r\n\tfor(int i = 1 ; i <= m ; i ++) {\r\n\t\tif(a[i].w == 0) {\r\n\t\t\tid[++cnt] = i;\r\n\t\t} else add(a[i].from,a[i].to,a[i].w),add(a[i].to,a[i].from,a[i].w);\r\n\t}\r\n\tspfa();\r\n\tif(d[t] < l) {\r\n\t\tcout << \"No\";\r\n\t\treturn 0;\r\n\t} else if(d[t] == l) {\r\n\t\tcout << \"Yes\"<<endl;\r\n\t\tfor(int i = 1 ; i <= m ; i ++) {\r\n\t\t\tcout << a[i].from - 1<<\" \"<< a[i].to - 1<<\" \";\r\n\t\t\tif(a[i].w == 0) cout << INF - 1 << endl;\r\n\t\t\telse cout << a[i].w << endl;\r\n\t\t}\r\n\t\treturn 0;\r\n\t} else if(d[t] > l) {\r\n\t\tfor(int i = 1 ; i <= cnt ; i ++) {\r\n\t\t\ta[id[i]].w = 1;\r\n\t\t\tadd(a[id[i]].from,a[id[i]].to,1),add(a[id[i]].to,a[id[i]].from,1);\r\n\t\t\tspfa();\r\n\t\t\tif(d[t] > l) continue;\r\n\t\t\tif(d[t] <= l) {\r\n\t\t\t\tcout << \"Yes\"<<endl;\r\n\t\t\t\ta[id[i]].w =  l - d[t] + 1;\r\n\t\t\t\tfor(int i = 1 ; i <= m ; i ++) {\r\n\t\t\t\t\tcout << a[i].from - 1<<\" \" <<a[i].to - 1 <<\" \";\r\n\t\t\t\t\tif(a[i].w == 0) cout <<INF - 1 << endl;\r\n\t\t\t\t\telse cout << a[i].w << endl;\r\n\t\t\t\t}\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tcout << \"No\";\r\n\treturn 0;\r\n}\r\n```\r\n",
        "postTime": 1635777813,
        "uid": 420102,
        "name": "phmaprostrate",
        "ccfLevel": 4,
        "title": "CF 715B Complete The Graph"
    },
    {
        "content": "\u9898\u610f:https://www.luogu.org/problem/CF715B\n\n\u56e0\u4e3a\u8fb9\u6743[1,1e18],\u56e0\u6b64\u5148\u5c06\u6240\u6709\u672a\u8d4b\u503c\u7684\u8fb9\u6743\u8c03\u4e3a1,\u8dd1\u4e00\u8fb9\u6700\u77ed\u8def,\u5982\u679cdis[t]>L\u5219\u65e0\u89e3,\u56e0\u4e3a\u52a0\u8fb9\u6743\u4e0d\u53ef\u80fd\u4f7f\u6700\u77ed\u8def\u53d8\u5c0f\n\n\u8bb0\u5f55diff=L-dis[t],\u8bb0\u7b2c\u4e8c\u904d\u6700\u77ed\u8def\u7684\u6570\u7ec4\u4e3adiss,\u8003\u8651\u4f7f\u5f97\u66f4\u65b0diss[t]\u7684diss[x]=dis[x]+diff,\u8fd9\u6837\u5c31\u53ef\u4ee5\u66f4\u65b0\u51fadiss[t]=L\n\n\u4e8e\u662f\u8003\u8651\u4f7f\u5f97\u6240\u6709\u7684\u70b9x,diss[x]=dis[x]+diff\n\n\u4e8e\u662f\u5bf9\u4e8ex->y\u8fd9\u6761\u8fb9,\u5982\u679cdis[y]+diff>diss[x]+w\uff08\u8fd9\u662f\u4e3a\u4e86\u8ba9\u8fb9\u6743\u4e0d\u4e3a\u8d1f\u6570\uff09,w=dis[y]+diif-diss[x],\u8fd9\u6837\u5982\u679c\u66f4\u65b0,diss[y]=dis[y]+diff\n\n\u603b\u7ed3:\n\n\u5bf9\u4e8e\u9650\u5236\u6700\u77ed\u8def\u4e3a\u591a\u5c11\u7684\u95ee\u9898:\u8003\u8651\u66f4\u65b0\u5b83\u7684\u70b9\n\ncode:\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define pii pair<int,int>\n#define mp make_pair\n#define fir first\n#define sec second\nconst int maxn=1010;\nconst int maxm=10010;\nint n,m,L,S,T,cnt,diff;\nint head[maxn],u[maxm],v[maxm],w[maxm],dis[maxn],diss[maxn];\nbool check[maxm],vis[maxn];\nstruct edge\n{\n    int to,nxt,id;\n}e[maxm<<1];\ninline int read()\n{\n    char c=getchar();int res=0,f=1;\n    while(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n    while(c>='0'&&c<='9')res=res*10+c-'0',c=getchar();\n    return res*f;\n}\ninline void add(int u,int v,int id)\n{\n    e[++cnt].nxt=head[u];\n    head[u]=cnt;\n    e[cnt].to=v;\n    e[cnt].id=id;\n}\ninline void spfa1()\n{\n\tmemset(dis,0x3f,sizeof(dis));\n\tqueue<int>q;\n\tq.push(S);dis[S]=0;vis[S]=1;\n\twhile(!q.empty())\n\t{\n\t\tint x=q.front();q.pop();vis[x]=0;\n\t\tfor(int i=head[x];i;i=e[i].nxt)\n\t\t{\n\t\t\tint y=e[i].to;\n\t\t\tif(dis[y]>dis[x]+w[e[i].id])\n\t\t\t{\n\t\t\t\tdis[y]=dis[x]+w[e[i].id];\n\t\t\t\tif(!vis[y])vis[y]=1,q.push(y);\n\t\t\t}\n\t\t}\n\t}\n}\ninline void spfa2()\n{\n\tmemset(diss,0x3f,sizeof(diss));\n\tqueue<int>q;\n\tdiss[S]=0;q.push(S);vis[S]=1;\n\twhile(!q.empty())\n\t{\n\t\tint x=q.front();q.pop();vis[x]=0;\n\t\tfor(int i=head[x];i;i=e[i].nxt)\n\t\t{\n\t\t\tint y=e[i].to;\n\t\t\tif(check[e[i].id]&&dis[y]+diff>diss[x]+w[e[i].id])w[e[i].id]=dis[y]+diff-diss[x];\n\t\t\tif(diss[y]>diss[x]+w[e[i].id])\n\t\t\t{\n\t\t\t\tdiss[y]=diss[x]+w[e[i].id];\n\t\t\t\tif(!vis[y])vis[y]=1,q.push(y);\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n    n=read(),m=read();L=read(),S=read(),T=read();\n    for(int i=1;i<=m;i++)\n    {\n        u[i]=read(),v[i]=read(),w[i]=read();\n    \tif(!w[i])w[i]=1,check[i]=1;\n\t    add(u[i],v[i],i);add(v[i],u[i],i);\n    }   \n\tspfa1();\n\tif(dis[T]>L){puts(\"NO\");return 0;}\n\tdiff=L-dis[T];\n\tspfa2();\n\tif(diss[T]!=L){puts(\"NO\");return 0;}\n\telse \n\t{\n\t\tputs(\"YES\");\n\t\tfor(int i=1;i<=m;i++)printf(\"%d %d %d\\n\",u[i],v[i],w[i]);\n\t}\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1567060299,
        "uid": 145441,
        "name": "nofind",
        "ccfLevel": 6,
        "title": "CF715B Complete The Graph(\u6700\u77ed\u8def+\u6784\u9020)"
    },
    {
        "content": "## \u4e24\u6b21Dijstra\n### 1.\u601d\u8def\n\u9996\u5148\u628a\u6240\u6709\u672a\u8d4b\u503c\u7684\u8fb9\u521d\u59cb\u5316\u4e3a1\uff0c\u7136\u540e\u7b2c\u4e00\u6b21dijkstra\u6c42\u51fa\u6bcf\u4e2a\u70b9\u5230s\u7684\u6700\u77ed\u8def\u957f\u5ea6\uff0c\u5982\u679cdist[t]>L\u5219\u65e0\u89e3\uff0c\u5426\u5219\u8bb0\u4e0bdist[t]\u4e0eL\u7684\u5dee\u503cneed\uff0c\u7136\u540e\u7b2c\u4e8c\u6b21dijkstra\uff0c\u5bf9\u4e8e\u672a\u8d4b\u503c\u7684\u8fb9(u,v)\uff0c\u5982\u679c\u80fd\u591f\u7528dist2[u]+\u8fd9\u6761\u8fb9\u6743\u6765\u66f4\u65b0dist2[v]\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u628a\u8fd9\u6761\u8fb9\u7684\u6743\u503c\u8d4b\u4e3a\u539fdist[v]+need-dist2[u]\uff0c\u4f7f\u5f97\u66f4\u65b0\u540e\u7684dist2[v]=dist[v]+need\u3002\u6700\u540e\u5224\u65addist[t]\u7684\u503c\u662f\u5426\u4e3aL \n### 2.\u590d\u6742\u5ea6\n\u65f6\u95f4\u590d\u6742\u5ea6O(n*(logn+logm))\n### 3.\u5b8c\u6574\u4ee3\u7801\n```cpp\n//\u672c\u7a0b\u5e8f\u6709\u53cd\u590d\u5236\u5904\u7406,\u601d\u8def\u6b63\u786e,\u4f46\u590d\u5236\u4e0d\u80fdAC\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\n#define reg register \n#define ll long long\n#define y1 liuifan_y1 \n#define inf 0x3f3f3f3f\n#define iinf 0x3f3f3f3f3f3f3f3f \n#define data liuyifan_data \n#define next liuyifan_next \n#define ture true \n#define flase false \n#define lowbit(x) x&(-x)\nusing namespace std;\nint a[10005],b[10005],vv[10005],to[20005],next[20005],e[20005],f[1005],dis[1005],diss[1005],u[1005],v[10005],n,m,l,s,t,tot,nexted;\npriority_queue<pair<int,int>,vector<pair<int,int> >,greater<pair<int,int> > > q;\n//pair\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u7ed3\u6784\u4f53,\u7531\u4e24\u4e2a\u5143\u7d20first,second\u7ec4\u6210\n//\u6ce8\u610f\u672c\u884c\u4e2d\u7684\u7a7a\u683c\u5199\u6cd5,\u4e0d\u52a0\u7a7a\u683c\u4f1aCE\ninline void add(reg int x,reg int y,reg int z)//\u65b0\u5efa\u4e00\u6761\u4eceX\u5230Y\u957f\u5ea6\u4e3aZ\u7684\u8fb9\n{\n    to[++tot]=y;\n\te[tot]=z;\n\tnext[tot]=f[x];\n\tf[x]=tot;\n}//\u524d\u5411\u661f\u52a0\u8fb9\ninline void dijkstra()//\u7b2c\u4e00\u6b21Dijstra\n{\n    for(reg int i=0;i<n;i++)dis[i]=inf,u[i]=1;\n    dis[s]=0;\n\tq.push(pair<int,int>(0,s));\n    while(!q.empty())\n    {\n        reg int x=q.top().second;\n        q.pop();\n        if(!u[x])continue;\n        u[x]=0;\n        for(reg int i=f[x];i;i=next[i])\n        if(dis[x]+vv[e[i]]<dis[to[i]])\n        {\n            dis[to[i]]=dis[x]+vv[e[i]];\n            q.push(pair<int,int>(dis[to[i]],to[i]));\n        }\n    }\n}\ninline void dijkstra2()//\u7b2c\u4e8c\u6b21Dijstra\n{\n    for(reg int i=0;i<n;i++)diss[i]=inf,u[i]=1;\n    diss[s]=0;\n\tq.push(pair<int,int>(0,s));\n    while(!q.empty())\n    {\n        reg int x=q.top().second;\n        q.pop();\n        if(!u[x])continue;\n        u[x]=0;\n        for(reg int i=f[x];i;i=next[i])\n        {\n            if(v[e[i]]&&diss[x]+vv[e[i]]<dis[to[i]]+nexted)vv[e[i]]=dis[to[i]]+nexted-diss[x];//\u677e\u5f1b\u64cd\u4f5c\n            if (diss[x]+vv[e[i]]<diss[to[i]])\n            {\n                diss[to[i]]=diss[x]+vv[e[i]];\n                q.push(pair<int,int>(diss[to[i]],to[i]));\n            }\n        }\n    }\n}\n//\u5bf9Dijstra\u7b97\u6cd5\u4e0d\u719f\u6089\u7684\u540c\u5b66\u53ef\u4ee5\u53c2\u7167P3371\u548cP4779\u7684\u6709\u5173\u9898\u89e3\n//\u672c\u9898\u7684\u6570\u636e\u8303\u56f4\u4e0d\u9700\u8981\u5806\u4f18\u5316,O(n^2)\u53ef\u4ee5\u4e86\nint main()\n{\n    scanf(\"%d%d%d%d%d\",&n,&m,&l,&s,&t);\n    for(reg int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d%d\",&a[i],&b[i],&vv[i]);\n        if(!vv[i])v[i]=vv[i]=1;\n        add(a[i],b[i],i);\n\t\tadd(b[i],a[i],i);//\u5efa\u8fb9\n    }\n    dijkstra();//\u7b2c\u4e00\u6b21Dijstra\n    if(dis[t]>l)return puts(\"N0\"),0;//\u4e0d\u6ee1\u8db3,\u76f4\u63a5\u9000\u51fa\u7a0b\u5e8f\n    //\u9017\u53f7\u8868\u8fbe\u5f0f\u7684\u8fd4\u56de\u503c\u4ee5\u6700\u540e\u4e00\u4e2a\u8868\u8fbe\u5f0f\u4e3a\u51c6\n    nexted=l-dis[t];\n    dijkstra2();//\u7b2c\u4e8c\u6b21Dijstra\n    if(diss[t]!=l)puts(\"N0\");//\u4e0d\u6ee1\u8db3\n    else\n    {\n        puts(\"YE5\");\n        for(reg int i=1;i<=m;i++)printf(\"%d %d %d\\n\",a[i],b[i],vv[i]);\n    }//\u8f93\u51fa\u5bf9\u5e94\u8fb9\u957f\n    return 0;//\u7ed3\u675f\u7a0b\u5e8f\n}\n```",
        "postTime": 1550395103,
        "uid": 48993,
        "name": "liuyifan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF715B \u3010Complete The Graph\u3011"
    }
]