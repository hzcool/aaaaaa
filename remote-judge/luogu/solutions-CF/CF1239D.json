[
    {
        "content": "### \u9996\u5148\u8981\u8bf4\u7684\uff1a\n\n\u5176\u5b9e\u672c\u9898\u5728\u7b54\u6848\u7684\u7edf\u8ba1\u4e0a\u5e76\u6ca1\u6709\u53e6\u4e24\u7bc7\u9898\u89e3\u8bb2\u7684\u90a3\u4e48\u9ebb\u70e6\n\n\u5982\u679c\u4f60\u771f\u6b63\u641e\u61c2\u4e86tarjan\uff0c\u4f60\u4f1a\u660e\u767d\u5982\u679c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u6709\u51fa\u8fb9\uff0c\u7531\u4e8e\u5b83dfs\u7684\u6027\u8d28\uff0c\u4e00\u5b9a\u4f1a\u7ee7\u7eed\u5411\u4e0b\u904d\u5386\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u6ca1\u6709\u51fa\u5ea6\u7684\u5f3a\u8fde\u901a\u5206\u91cf\n\n**\u56e0\u6b64\uff0c\u7b2c\u4e00\u4e2a\u88ab\u627e\u5230\u7684\u5f3a\u8054\u901a\u5206\u91cf\u4e00\u5b9a\u662f\u6ca1\u6709\u51fa\u5ea6\u7684\uff01**\n\n\u8fd9\u6837\u5176\u4f59\u4e24\u7bc7\u9898\u89e3\u7684\u505a\u6cd5\u5728\u8fc7\u7a0b\u4e0a\u8fd8\u53ef\u4ee5\u88ab\u5927\u5e45\u7b80\u5316\n\n---\n\n### \u9898\u89e3\n\n\u9996\u5148\uff0c\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u95ee\u9898\uff1a\u4e3a\u4ec0\u4e48n\u4e2a\u4e0d\u53ef\u4ee5\u90fd\u662f\u732b\u5462\uff1f\n\n\u56e0\u4e3a\u5fc5\u987b\u81f3\u5c11\u6709\u4e00\u4e2a\u4eba\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u5fc5\u987b\u628a\u8fd9\u4e2a\u4eba\u653e\u5230\u65e0\u6cd5\u4ea7\u751f\u4efb\u4f55\u5f71\u54cd\u7684\u5730\u65b9\u53bb\n\n\u5373\u4e00\u4e2a\u4eba\u7fa4\uff08\u6216\u4ec5\u4e00\u4e2a\u4eba\uff09\n\n\u8fd9\u4e2a\u4eba\u7fa4\u5fc5\u987b\u6ee1\u8db3\u4e0d\u4f1a\u518d\u5bf9\u540e\u7eed\u4ea7\u751f\u5f71\u54cd\uff08\u56e0\u4e3a\u8fde\u732b\u4e0d\u5408\u6cd5\uff0c\u8fde\u4eba\u4e0d\u5982\u6362\u4e2a\u90e8\u5206\u505a\u4eba\u7fa4\uff09\n\n\u5373\u65e0\u51fa\u5ea6\n\n\u540c\u65f6\u4eba\u7fa4\u4e2d\u4e5f\u8981\u4fdd\u6301\u5f3a\u8054\u901a\uff0c\u56e0\u4e3a\u5982\u679c\u6709\u4eba\u4e0d\u5f3a\u8054\u901a\uff0c\u4ed6\u5c31\u53ef\u4ee5\u88ab\u5206\u79bb\u51fa\u770b\u6210\u732b\n\n\u56e0\u6b64\u95ee\u9898\u8f6c\u5316\u4e3a\u5728\u4e00\u4e2a\u6709\u5411\u56fe\u4e2d\u627e\u4e00\u4e2a\u6ca1\u6709\u51fa\u5ea6\u7684\u5f3a\u8fde\u901a\u5206\u91cf\n\n\u5728\u8fd9\u4e2a\u6ca1\u6709\u51fa\u5ea6\u7684\u5f3a\u8054\u901a\u5206\u91cf\u91cc\u7684\u90fd\u662f\u4eba\uff0c\u5426\u5219\u662f\u732b\n\n\u800c\u6211\u4e4b\u524d\u53c8\u8bf4\u8fc7**\u7b2c\u4e00\u4e2a\u88ab\u627e\u5230\u7684\u5f3a\u8054\u901a\u5206\u91cf\u4e00\u5b9a\u662f\u6ca1\u6709\u51fa\u5ea6\u7684**\uff0c\u56e0\u6b64\u7f16\u53f7\u4e3a1\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u5c31\u662f\u6211\u4eec\u8981\u627e\u7684\n\n---\n\n\u53e6\u5916\uff0c\u663e\u7136\u7684\uff0c\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u5c31\u662f\u4e0d\u5408\u6cd5\u7684\n\n---\n\n### \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntemplate<class t> inline t read(t &x){\n\tchar c=getchar();bool f=0;x=0;\n\twhile(!isdigit(c)) f|=c=='-',c=getchar();\n\twhile(isdigit(c)) x=(x<<1)+(x<<3)+(c^48),c=getchar();\n\tif(f) x=-x;return x;\n}\ntemplate<class t> inline void write(t x){\n\tif(x<0) putchar('-'),write(-x);\n\telse{if(x>9) write(x/10);putchar('0'+x%10);}\n}\nconst int N=1e6+5;\nint h[N],st[N],lim,dfn[N],low[N],cnt,en,scc[N],sn,n,m,t,sz[N];\nbool v[N];\nstruct edge{int n,v;}e[N];\ninline void add(int x,int y){e[++en]=(edge){h[x],y};h[x]=en;}\nvoid tarjan(int x){ //tarjan\u6a21\u677f\n\tv[x]=1;\n\tst[++lim]=x;\n\tdfn[x]=low[x]=++cnt;\n\tfor(int i=h[x];i;i=e[i].n){\n\t\tint y=e[i].v;\n\t\tif(!dfn[y]){\n\t\t\ttarjan(y);\n\t\t\tlow[x]=min(low[x],low[y]);\n\t\t}\n\t\telse{\n\t\t\tif(v[y]) low[x]=min(low[x],dfn[y]);\n\t\t}\n\t}\n\tif(dfn[x]==low[x]){\n\t\tint top;\n\t\tsn++;\n\t\tfor(;;){\n\t\t\ttop=st[lim--];\n\t\t\tv[top]=0;\n\t\t\tscc[top]=sn;\n\t\t\tsz[sn]++; //sz[]\u662f\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u5927\u5c0f\n\t\t\tif(top==x) break;\n\t\t}\n\t}\n}\nvoid doit(){\n\tread(n);read(m);\n\tsn=cnt=en=lim=0;\n\tfor(int i=1;i<=n;i++) h[i]=sz[i]=dfn[i]=0;\n\tfor(int i=1,x,y;i<=m;i++){\n\t\tread(x);read(y);\n\t\tif(x==y) continue; //\u81ea\u5df1\u548c\u81ea\u5df1\u7684\u732b\u53ef\u5ffd\u7565\n\t\tadd(x,y);\n\t}\n\tfor(int i=1;i<=n;i++) if(!dfn[i]) tarjan(i);\n\tif(sn==1){ //\u53ea\u6709\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u4e0d\u5408\u6cd5\n\t\tputs(\"No\");\n\t\treturn ;\n\t}\n\tprintf(\"Yes\\n%d %d\\n\",sz[1],n-sz[1]); //sz[1]\u662f\u4eba\u7684\u4e2a\u6570\uff0c\u51cf\u4e00\u51cf\u5f97\u5230\u732b\u6570\n\tfor(int i=1;i<=n;i++) if(scc[i]==1) write(i),putchar(' ');puts(\"\"); //\u7b2c\u4e00\u4e2a\u7684\u90fd\u662f\u4eba\n\tfor(int i=1;i<=n;i++) if(scc[i]!=1) write(i),putchar(' ');puts(\"\"); //\u5426\u5219\u662f\u732b\n}\nsigned main(){\n\tread(t);\n\twhile(t--) doit();\n}\n```\n\n---\n\n**(ps.\u672c\u9898\u6e05\u96f6\u521d\u59cb\u5316\u7528memset\u4f1aT\u5728\u7b2c\u4e09\u4e2a\u70b9\uff0c\u8981\u6539\u7528for)**",
        "postTime": 1572355361,
        "uid": 65735,
        "name": "yuzhechuan",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1239D \u3010Catowice City\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u4e2a\u4e8c\u5206\u56fe\uff0c\u7531\u4e8e\u7b2c $i$ \u53ea\u732b\u548c\u7b2c $i$ \u4e2a\u4eba\u4e0d\u80fd\u90fd\u9009\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u7b2c $i$ \u4e2a\u4eba\u548c\u7b2c $i$ \u53ea\u732b\u7f29\u6210\u4e00\u4e2a\u70b9\n\n\u5bf9\u4e8e\u4e00\u6761\u4ece $u$ \u8fde\u5411 $v$ \u7684\u8fb9\uff0c\u8868\u793a\u5982\u679c $u$ \u9009\u4e86\u4eba\uff0c\u5219 $v$ \u4e0d\u80fd\u9009\u732b\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u7684\u70b9\uff0c\u8981\u4e48\u5168\u9009\u4eba\uff0c\u8981\u4e48\u5168\u9009\u732b\n\n\u5bf9\u4e8e\u51fa\u5ea6\u4e3a $0$ \u7684\u5f3a\u8fde\u901a\u5206\u91cf\uff08\u5373\u7f16\u53f7\u4e3a $1$\uff09\uff0c\u7531\u4e8e\u6ca1\u6709\u51fa\u8fb9\uff0c\u5b83\u4e0d\u53ef\u80fd\u5f71\u54cd\u4efb\u4f55\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u59a8\u4ee4\u5176\u9009\u4eba\uff0c\u5176\u5b83\u6240\u6709\u70b9\u90fd\u9009\u732b\uff08\u9009\u732b\u4e5f\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u70b9\uff09\n\n\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u5219\u65e0\u89e3\n\n```cpp\n//timeuse:20min\nconst int N = 1000010,M = N;\nint n,m;EE(1);\nint dfn[N],low[N],idx;\nint st[N],top,col[N],num,siz[N];\nbool vis[N];\nvoid init()\n{\n\tn = read(),m = read();\n\tfor(int i = 1;i <= n;i++) head[i] = dfn[i] = low[i] = siz[i] = 0;\n\tecnt = 1,num = idx = 0;\n}\nvoid Tarjan(int u)\n{\n\tdfn[u] = low[u] = ++idx,vis[u] = 1,st[++top] = u;\n\tfor(int i = head[u];i;i = e[i].nxt)\n\t{\n\t\tint v = e[i].to;\n\t\tif(!dfn[v]) Tarjan(v),low[u] = min(low[u],low[v]);\n\t\telse if(vis[v]) low[u] = min(low[u],dfn[v]);\n\t}\n\tif(dfn[u] == low[u])\n\t{\n\t\tnum++;\n\t\tint v = st[top--];\n\t\tcol[v] = num,vis[v] = 0,siz[num]++;\n\t\twhile(st[top + 1] != u)\n\t\t{\n\t\t\tint v = st[top--];\n\t\t\tcol[v] = num,vis[v] = 0,siz[num]++;\n\t\t}\n\t}\n}\nvoid solve()\n{\n\tfor(int i = 1;i <= m;i++)\n\t{\n\t\tint x = read(),y = read();\n\t\tif(x != y) add(x,y);\n\t}\n\tfor(int i = 1;i <= n;i++) if(!dfn[i]) Tarjan(i);\n\tif(num == 1) { puts(\"No\");return; }\n\tputs(\"Yes\");pprint(siz[1]),fprint(n - siz[1]);\n\tfor(int i = 1;i <= n;i++) if(col[i] == 1) pprint(i);putchar('\\n');\n\tfor(int i = 1;i <= n;i++) if(col[i] != 1) pprint(i);putchar('\\n');\n}\nint main()\n{\n\tint T = read();\n\twhile(T--) init(),solve();\n}\n```",
        "postTime": 1593245350,
        "uid": 53994,
        "name": "81179332_",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1239D \u3010Catowice City\u3011"
    },
    {
        "content": "[$\\Huge\\color{#50a1a0}{\\texttt{My Cnblogs}}$](https://www.cnblogs.com/Wendigo/p/12916838.html)\n\n---\n> [CF1239D Catowice City](https://www.luogu.com.cn/problem/CF1239D)\n\n> \u6709 $n$ \u4e2a\u4eba\u548c $n$ \u53ea\u732b\u3002\u6709 $m$ \u5bf9\u4eba\u732b\u53cb\u8c0a\uff0c\u5373\u7b2c $u_i$ \u4e2a\u4eba\u8ba4\u8bc6\u7b2c $v_i$ \u53ea\u732b\uff0c**\u4fdd\u8bc1\u7b2c $i$ \u4e2a\u4eba\u548c\u7b2c $i$ \u53ea\u732b\u8ba4\u8bc6**\u3002\u6c42 $j$ \u4e2a\u4eba\u548c $p$ \u53ea\u732b\u4f7f $j+p=n(1\\le j,p<n)$\uff0c\u5e76\u4e14\u8fd9\u4e9b\u4eba\u548c\u732b\u4e92\u4e0d\u8ba4\u8bc6\u3002$t$ \u7ec4\u6d4b\u8bd5\u6570\u636e\u3002\n\n> \u6570\u636e\u8303\u56f4\uff1a $1\\le n\\le m\\le 10^6$\uff0c$1\\le \\sum n,\\sum m\\le 10^6$\u3002\n\n---\n\u9996\u5148\u8fd9\u662f\u4e2a\u4e8c\u5206\u56fe\uff0c\u4eba\u4e00\u5757\uff0c\u732b\u4e00\u5757\u3002\n\n\u5c06\u7b2c $i$ \u4e2a\u4eba\u548c\u7b2c $i$ \u53ea\u732b\u5408\u5e76\u6210\u4e00\u70b9\uff0c\u56e0\u4e3a\u4ed6\u4eec\u4e0d\u80fd\u90fd\u9009\u3002\n\n\u4ece $u_i$ \u5411 $v_i$ \u8fde\u4e00\u6761\u6709\u5411\u8fb9\uff0c\u8868\u793a**\u5982\u679c\u7b2c $u_i$ \u70b9\u9009\u4eba\uff0c$v_i$ \u70b9\u4e5f\u5fc5\u987b\u9009\u4eba**\u3002\n\n\u5982\u679c\u51fa\u73b0\u73af\uff0c\u5219\u8fd9\u4e9b\u70b9**\u8981\u4e48\u5168\u9009\u4eba\u8981\u4e48\u5168\u9009\u732b**\uff0c\u4e0d\u59a8\u4ee4\u9009\u4eba\u3002\n\n\u6240\u4ee5 $\\texttt{Tarjan}$ \u628a**\u5f3a\u8054\u901a\u5206\u91cf**\u5206\u51fa\u6765\u3002\n\n\u5982\u679c\u53ea\u6709**\u4e00\u4e2a**\u5f3a\u8054\u901a\u5206\u91cf\uff0c\u5219\u5fc5\u987b\u5168\u9009\u4eba\uff0c\u4e0e $(1\\le j,p<n)$ \u4e0d\u7b26\uff0c\u8f93\u51fa $\\texttt{No}$\u3002\n\n\u5426\u5219\u9009\u51fa**\u62d3\u6251\u5e8f\u6700\u540e\u7684\u5f3a\u8054\u901a\u5206\u91cf\u5168\u9009\u4eba\uff0c\u5176\u4ed6\u5168\u9009\u732b**\u3002\n\n> $\\texttt{Tarjan}$ \u6709\u4e2a\u6027\u8d28\uff1a\u7f16\u53f7\u4e3a $1$ \u7684\u5f3a\u8054\u901a\u5206\u91cf\u62d3\u6251\u5e8f\u6700\u540e\u3002\n\n**\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(n+m)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $\\Theta(n+m)$\u3002**\n\n---\n- **\u4ee3\u7801\uff1a**\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n//Start\ntypedef long long ll;\ntypedef double db;\n#define mp(a,b) make_pair(a,b)\n#define x(a) a.first\n#define y(a) a.second\n#define b(a) a.begin()\n#define e(a) a.end()\n#define sz(a) int((a).size())\n#define pb(a) push_back(a)\nconst int inf=0x3f3f3f3f;\nconst ll INF=0x3f3f3f3f3f3f3f3f;\n\n//Data\nconst int N=1e6;\nint n,m;\nvector<int> e[N+7];\n\n//Tarjan\nint ic,in[N+7],low[N+7],dfn[N+7],sc,st[N+7],cc,co[N+7],sm[N+7];\nvoid Tarjan(int u){\n\tlow[u]=dfn[u]=++ic,in[u]=1,st[++sc]=u;\n\tfor(int v:e[u])\n\t\tif(!dfn[v]) Tarjan(v),low[u]=min(low[u],low[v]);\n\t\telse if(in[v]) low[u]=min(low[u],dfn[v]);\n\tif(dfn[u]==low[u]) for(int v=0,t=++cc;v!=u;) v=st[sc--],co[v]=t,in[v]=0,sm[t]++;\n}\n\n//KonnyWen\nvoid KonnyWen(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++) e[i].clear();\n\tfor(int i=1;i<=m;i++){\n\t\tint u,v; scanf(\"%d%d\",&u,&v);\n\t\tif(u!=v) e[u].pb(v);\n\t}\n\tfill(dfn+1,dfn+n+1,0),fill(sm+1,sm+n+1,0),ic=sc=cc=0;\n\tfor(int i=1;i<=n;i++)if(!dfn[i]) Tarjan(i);\n\tif(cc==1) return void(puts(\"No\"));\n\tprintf(\"Yes\\n%d %d\\n\",sm[1],n-sm[1]);\n\tfor(int i=1;i<=n;i++)if(co[i]==1) printf(\"%d \",i); puts(\"\");\n\tfor(int i=1;i<=n;i++)if(co[i]!=1) printf(\"%d \",i); puts(\"\");\n}\n\n//Main\nint main(){\n\tint t; scanf(\"%d\",&t);\n\tfor(int ti=1;ti<=t;ti++) KonnyWen();\n\treturn 0;\n}\n```\n---\n**\u795d\u5927\u5bb6\u5b66\u4e60\u6109\u5feb\uff01**",
        "postTime": 1589870616,
        "uid": 118365,
        "name": "George1123",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1239D \u3010Catowice City\u3011"
    },
    {
        "content": "**\u7b97\u6cd5**\n\ntarjan/2-SAT\n\n**\u5efa\u6a21**\n\n\u7528\u4eba\u4e0e\u732b\u7684\u5173\u7cfb\u5efa\u6a21\u3002\u7b2c$u$\u4e2a\u4eba\u8ba4\u8bc6\u7b2c$v$\u53ea\u732b$\\rightarrow$\u8fde\u4e00\u6761$u \\rightarrow v$\u7684\u5355\u5411\u8fb9.\n\n**\u4e00\u4e2a\u91cd\u8981\u7684\u7ed3\u8bba**\n\n\u4fe1\u606f\uff1a\u9009\u4e86\u4eba\u4e4b\u540e\u5c31\u4e0d\u80fd\u9009\u4e0e\u4ed6\u76f8\u8fde\u7684\u732b\n\n\u9996\u5148\u6211\u4eec\u6765\u8bc1\u660e\u4e00\u4e2a\u7ed3\u8bba\uff1a\u5047\u8bbe\u51e0\u4e2a\u70b9\u5728\u540c\u4e00\u4e2a\u73af\u5185\uff0c\u8981\u4e48\u90fd\u9009\u4eba\uff0c\u8981\u4e48\u90fd\u9009\u732b\u3002\n\n\u8fd9\u91cc\u53ef\u4ee5\u53c2\u80032-SAT\u7b97\u6cd5\u7684\u601d\u60f3\n\n\u9009\u4e86\u4eba$i\\rightarrow$\n\n\u4e0d\u80fd\u9009\u732b$j \\rightarrow$\n\n\u9009\u4eba$j \\rightarrow$\n\n$\\dots \\dots$\n\n\u56e0\u4e3a\u8fd9\u4e2a\u56fe\u662f\u4e00\u4e2a\u73af\uff0c\u6240\u4ee5\u603b\u662f\u53ef\u4ee5\u4f20\u9012\u56de\u6765\u7684\n\n\u6240\u4ee5\u7ed3\u8bba\u6210\u7acb\n\n**\u7edf\u8ba1\u7b54\u6848**\n\n\u8fd9\u9898\u7684\u7edf\u8ba1\u7b54\u6848\u5e76\u4e0d\u70e6\u3002\n\n\u9996\u5148\uff0ctarjan\u627e\u5230\u7684\u7b2c\u4e00\u4e2a\u73af\u662f\u6ca1\u6709\u51fa\u8fb9\u7684\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba9\u7b2c\u4e00\u4e2a\u73af\u91cc\u7684\u9009\u4eba\uff0c\u522b\u7684\u9009\u732b\n\nPS\uff1a\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u73af\u5c31\u8f93\u51faNO\n\n**\u4ee3\u7801**\n\n```cpp\n#include<bits/stdc++.h>\n#include<iostream>\n#include<cstdio>\n#define ll long long\nusing namespace std;\n\nconst ll N=1000010;\nll n,m,deep,color,dfn[N],low[N],v[N],colour[N],size[N],indegree[N];\nll ver[N<<1],Next[N<<1],head[N],tot;\nstack<ll> st;\nvector<ll> ans[2];\n\ninline ll read(){\n\tll x=0,tmp=1;\n\tchar ch=getchar();\n\twhile(!isdigit(ch)){\n\t\tif(ch=='-') tmp=-1;\n\t\tch=getchar();\n\t}\n\twhile(isdigit(ch)){\n\t\tx=(x<<3)+(x<<1)+(ch^48);\n\t\tch=getchar();\n\t}\n\treturn tmp*x;\n}\n\ninline void write(ll x){\n\tif(x<0){\n\t\tputchar('-');\n\t\tx=-x;\n\t}\n\tll y=10,len=1;\n\twhile(y<=x){\n\t\ty=(y<<3)+(y<<1);\n\t\tlen++;\n\t}\n\twhile(len--){\n\t\ty/=10;\n\t\tputchar(x/y+48);\n\t\tx%=y;\n\t}\n}\n\ninline void addEdge(ll x,ll y){\n\tver[++tot]=y;\n\tNext[tot]=head[x];\n\thead[x]=tot;\n}\n\nvoid tarjan(ll x){\n\tdfn[x]=low[x]=++deep;\n\tv[x]=1; st.push(x);\n\tfor(ll i=head[x]; i; i=Next[i]){\n\t\tll y=ver[i];\n\t\tif(!dfn[y]){\n\t\t\ttarjan(y);\n\t\t\tlow[x]=min(low[x],low[y]);\n\t\t}\n\t\telse{\n\t\t\tif(v[y]) low[x]=min(low[x],dfn[y]);\n\t\t}\n\t}\n\tif(low[x]==dfn[x]){\n\t\tcolour[x]=++color;\n\t\tv[x]=0;\n\t\twhile(st.top()!=x){\n\t\t\tcolour[st.top()]=color;\n\t\t\tv[st.top()]=0;\n\t\t\tst.pop();\n\t\t\tsize[color]++;\n\t\t}\n\t\tst.pop(); size[color]++;\n\t}\n}\n\ninline void clean(){\n\tfor(ll i=1; i<=n; i++) head[i]=0;\n\tfor(ll i=1; i<=tot; i++) ver[i]=Next[i]=0;\n\twhile(!st.empty()) st.pop();\n\tfor(ll i=1; i<=n; i++) dfn[i]=low[i]=v[i]=colour[i]=size[i]=0;\n\tfor(ll i=1; i<=color; i++) indegree[i]=0;\n\ttot=deep=color=0;\n\tans[0].clear(); ans[1].clear();\n}\n\nint main(){\n\tfor(ll T=read(); T; T--){\n\t\tclean();\n\t\tn=read(); m=read();\n\t\twhile(m--){\n\t\t\tll x=read(),y=read();\n\t\t\taddEdge(x,y);\n\t\t}\n\t\tfor(ll i=1; i<=n; i++){\n\t\t\tif(!dfn[i]) tarjan(i);\n\t\t}\n\t\tfor(ll i=1; i<=n; i++){\n\t\t\tfor(ll j=head[i]; j; j=Next[j]){\n\t\t\t\tll x=ver[j];\n\t\t\t\tif(colour[i]!=colour[x]) indegree[colour[x]]++;\n\t\t\t}\n\t\t}\n\t\tif(size[colour[1]]==n){\n\t\t\tprintf(\"NO\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tbool flag=0;\n\t\tfor(ll i=1; i<=color; i++){\n\t\t\tif(!indegree[i]&&size[i]){\n\t\t\t\tprintf(\"YES\\n\"); flag=1;\n\t\t\t\tfor(ll j=1; j<=n; j++) ans[colour[j]==i].push_back(j);\n\t\t\t\twrite(ans[0].size()); putchar(' ');\n\t\t\t\twrite(ans[1].size()); putchar('\\n');\n\t\t\t\tfor(ll i=0; i<(ll)ans[0].size(); i++){\n\t\t\t\t\twrite(ans[0][i]); putchar(' ');\n\t\t\t\t}\n\t\t\t\tputchar('\\n');\n\t\t\t\tfor(ll i=0; i<(ll)ans[1].size(); i++){\n\t\t\t\t\twrite(ans[1][i]); putchar(' ');\n\t\t\t\t}\n\t\t\t\tputchar('\\n');\n\t\t\t\tbreak;\t\n\t\t\t}\n\t\t}\n\t\tif(!flag) printf(\"NO\\n\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1572877028,
        "uid": 27924,
        "name": "xukuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1239D \u3010Catowice City\u3011"
    },
    {
        "content": "## \u9898\u610f\n\u6709 $n$ \u4e2a\u4eba, \u6bcf\u4e2a\u4eba\u90fd\u6709\u4e00\u53ea\u732b. \u6709 $m$ \u6761\u4eba\u732b\u5173\u7cfb, \u8868\u793a\u67d0\u4e00\u4e2a\u4eba\u8ba4\u8bc6\u67d0\u4e00\u53ea\u732b. \u8981\u4ece\u4e2d\u9009\u51fa\u81f3\u5c11\u4e00\u4e2a\u4eba\u548c\u4e00\u53ea\u732b, \u603b\u548c\u4e3a $n$, \u4f7f\u5f97\u6ca1\u6709\u4e00\u4e2a\u4eba\u8ba4\u8bc6\u4efb\u4f55\u9009\u51fa\u7684\u732b.\n\n## \u5efa\u56fe\n\u53ef\u4ee5\u5c06 $m$ \u6761\u5173\u7cfb\u8f6c\u6362\u6210\u56fe\u4e0a\u7684\u8fb9. \u7b2c $u$ \u4e2a\u4eba\u8ba4\u8bc6\u7b2c $v$ \u53ea\u732b $\\rightarrow$ \u8fde\u4e00\u6761 $u \\rightarrow v$ \u7684\u6709\u5411\u8fb9.  \n\u5982\u679c\u56fe\u4e2d\u51fa\u73b0\u4e86\u73af (\u5f3a\u8fde\u901a\u5206\u91cf), \u90a3\u4e48\u8be5\u73af\u4e2d\u5fc5\u987b\u5168\u90e8\u9009\u4eba\u6216\u8005\u5168\u90e8\u9009\u732b, \u4e0d\u7136\u5c31\u4f1a\u51fa\u73b0\u4eba\u6307\u5411\u732b\u7684\u8fb9, \u4e0d\u6ee1\u8db3\u9898\u610f.\n\n\u5982\u679c\u80fd\u627e\u5230\u7b26\u5408\u9898\u610f\u7684\u7b54\u6848, \u90a3\u4e48\u5fc5\u987b\u6709\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u5165\u5ea6\u4e3a 0. \u8be5\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u6240\u6709\u7684\u70b9\u90fd\u9009\u732b, \u56e0\u4e3a\u5165\u5ea6\u4e3a 0 \u6240\u4ee5\u65e0\u9700\u62c5\u5fc3\u5f3a\u8fde\u901a\u5206\u91cf\u5916\u7684\u70b9\u8fde\u5411\u91cc\u9762\u4ece\u800c\u5bfc\u81f4\u6700\u7ec8\u51fa\u73b0\u4eba\u6307\u5411\u732b\u7684\u8fb9.\n\n\u5f3a\u8054\u901a\u5206\u91cf\u53ef\u4ee5\u7528 Tarjan \u6c42\u51fa\u6765, \u7f29\u70b9\u540e\u518d\u6c42\u51fa\u5165\u5ea6.  \n\u5177\u4f53\u89c1\u4ee3\u7801.\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint ntest;\nint n, m;\nvector<int> adj[1000001];\nint disc[1000001], low[1000001];\nint cnt_v = 0;\nstack<int> stk;\nbool is_in_stack[1000001];\nint scc[1000001], sz[1000001];\nint cnt_scc = 0;\nint in_deg[1000001];\nvector<int> ans[2];\n\ntemplate <typename T>\ninline T read() {\n    T x = 0;\n    T multiplier = 1;\n    char ch = getchar();\n    while (ch < '0' || ch > '9') {\n        if (ch == '-') {\n            multiplier = -1;\n        }\n        ch = getchar();\n    }\n    while (ch >= '0' && ch <= '9') {\n        x = (x << 3) + (x << 1) + (ch & 15);\n        ch = getchar();\n    }\n    return x * multiplier;\n}\n\nvoid tarjan(int u) { // Tarjan \u7b97\u6cd5\n    disc[u] = low[u] = ++cnt_v;\n    stk.push(u);\n    is_in_stack[u] = true;\n\n    for (auto v : adj[u]) {\n        if (!disc[v]) {\n            tarjan(v);\n            low[u] = min(low[u], low[v]);\n        } else if (is_in_stack[v]) {\n            low[u] = min(low[u], disc[v]);\n        }\n    }\n\n    if (disc[u] == low[u]) { // \u627e\u5230\u4e86\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\n        cnt_scc++;\n        int x = 0;\n        while (x ^ u) {\n            x = stk.top();\n            stk.pop();\n            is_in_stack[x] = false;\n            scc[x] = cnt_scc;\n            sz[cnt_scc]++;\n        }\n    }\n}\n\nint main() {\n    ntest = read<int>();\n\n    while (ntest--) {\n        n = read<int>(), m = read<int>();\n\n        // \u521d\u59cb\u5316\n        cnt_v = cnt_scc = 0;\n        for (int i = 1; i <= n; i++) {\n            adj[i].clear();\n            disc[i] = 0, low[i] = 0;\n            is_in_stack[i] = false;\n            scc[i] = 0, sz[i] = 0;\n            in_deg[i] = 0;\n        }\n        while (!stk.empty()) {\n            stk.pop();\n        }\n        ans[0].clear(), ans[1].clear();\n\n        for (int i = 1; i <= m; i++) {\n            int u = read<int>(), v = read<int>();\n            if (u ^ v) { // \u53bb\u6389\u81ea\u73af\n                adj[u].push_back(v);\n            }\n        }\n\n        for (int i = 1; i <= n; i++) {\n            if (!disc[i]) {\n                tarjan(i);\n            }\n        }\n\n        // \u7f29\u70b9\n        for (int u = 1; u <= n; u++) {\n            for (auto v : adj[u]) {\n                if (scc[u] ^ scc[v]) {\n                    // \u6c42\u5165\u5ea6\n                    ++in_deg[scc[v]];\n                }\n            }\n        }\n\n        // \u5982\u679c\u6574\u4e2a\u56fe\u5c31\u662f\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u5219\u9000\u51fa\n        if (sz[scc[1]] == n) {\n            puts(\"NO\");\n            continue;\n        }\n\n        for (int i = 1; i <= cnt_scc; i++) {\n            // \u627e\u5230\u7b26\u5408\u6761\u4ef6\u7684\u975e\u7a7a\u5f3a\u8fde\u901a\u5206\u91cf\n            if (!in_deg[i] && sz[i]) {\n                puts(\"YES\");\n\n                // \u5c5e\u4e8e\u8be5\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u5168\u9009\u732b (1), \u5426\u5219\u9009\u4eba (0)\n                for (int j = 1; j <= n; j++) {\n                    ans[scc[j] == i].push_back(j);\n                }\n\n                printf(\"%d %d\\n\", ans[0].size(), ans[1].size());\n                for (auto x : ans[0]) {\n                    printf(\"%d \", x);\n                }\n                puts(\"\");\n                for (auto x : ans[1]) {\n                    printf(\"%d \", x);\n                }\n                puts(\"\");\n\n                // \u8df3\u5230 puts(\"NO\") \u8bed\u53e5\u540e\u9762\n                goto ans_found;\n            }\n        }\n        puts(\"NO\");\n    ans_found:;\n    }\n\n    return 0;\n}\n```\n",
        "postTime": 1571634655,
        "uid": 22227,
        "name": "mraymes",
        "ccfLevel": 7,
        "title": "Solution for Codeforces Problem 1239D - Catowice City"
    },
    {
        "content": "\u5927\u81f4\u9898\u610f\uff1a\u6709$n$\u4e2a\u4eba\u548c$n$\u53ea\u732b\uff0c\u6bcf\u4e2a\u4eba\u90fd\u8ba4\u8bc6\u7f16\u53f7\u4e0e\u4ed6\u76f8\u540c\u7684\u732b\u548c\u53e6\u5916\u4e00\u4e9b\u732b\uff0c\u73b0\u5728\u9700\u8981\u4ece\u4eba\u548c\u732b\u4e2d\u9009\u51fa\u5171$n$\u4e2a\uff0c\u4f7f\u5f97\u5176\u4e2d\u65e2\u6709\u4eba\uff0c\u4e5f\u6709\u732b\uff0c\u5e76\u4e14\u6240\u6709\u9009\u51fa\u7684\u4eba\u90fd\u4e0d\u8ba4\u8bc6\u4efb\u4f55\u9009\u51fa\u7684\u732b\u3002\n\n\u601d\u8def\uff1a\n\n\u9996\u5148\uff0c\u540c\u4e00\u4e2a\u7f16\u53f7\u7684\u4eba\u548c\u732b\uff0c\u5fc5\u987b\u9009\u4e14\u4ec5\u9009\u4e00\u4e2a\u3002\u4e3a\u4ec0\u4e48\uff1f\u611f\u6027\u8bc1\u660e\u4e00\u4e0b\uff08\u53ef\u80fd\u6709\u8bef\uff09\uff1a\u5047\u8bbe\u9009\u4e86$r$\u4e2a\u4eba\uff0c$n-r$\u4e2a\u732b\uff0c\u5982\u679c\u9009\u4e2d\u7684\u4eba\u548c\u732b\u7684\u7f16\u53f7\u7684\u96c6\u5408\u6709\u4ea4\u96c6\uff0c\u90a3\u4e48\u8fd9\u79cd\u65b9\u6848\u80af\u5b9a\u4e0d\u5408\u6cd5\u3002\u800c\u6240\u6709\u4eba\u548c\u6240\u6709\u732b\u7684\u96c6\u5408\u5927\u5c0f\u90fd\u662f$n$\u4e14\u4eba\u548c\u732b\u7684\u7f16\u53f7\u4e00\u4e00\u5bf9\u5e94\uff0c\u6240\u4ee5\u6ca1\u6709\u88ab\u9009\u4e2d\u7684\u4eba\uff0c\u4ed6\u5bf9\u5e94\u7684\u732b\u4e00\u5b9a\u4f1a\u88ab\u9009\u4e2d\u3002\n\n\u7b80\u800c\u8a00\u4e4b\uff0c\u9009\u51fa\u7684\u4eba\u7684\u96c6\u5408\u4e0e\u9009\u51fa\u7684\u732b\u7684\u96c6\u5408\u4e92\u4e3a\u8865\u96c6\u3002\n\n\u90a3\u4e48\u8003\u8651\u4eba\u8ba4\u8bc6\u732b\u7684\u60c5\u51b5\u3002\u5047\u8bbe\u4eba$R$\u8ba4\u8bc6\u732b$C$,\u5957\u75282-SAT\u7684\u601d\u60f3\uff0c\u90a3\u4e48\u9009\u4e86\u4eba$R$\u5c31\u4e0d\u80fd\u9009\u732b$C$\uff0c\u5219\u6839\u636e\u4e0a\u9762\u7684\u7ed3\u8bba\uff0c\u4e00\u65e6\u9009\u4e86$R$\u5c31\u5fc5\u987b\u9009\u7f16\u53f7\u4e3a$C$\u7684\u4eba\u3002\n\n\u56e0\u6b64\uff0c\u5bf9\u4e8e\u6240\u6709\u7684\u5173\u7cfb\uff0c\u4ece$R$\u5411\u7f16\u53f7\u4e3a$C$\u7684\u4eba\u8fde\u4e00\u6761\u6709\u5411\u8fb9\uff0c\u7f29\u70b9\u540e\u5982\u679c\u6240\u6709\u70b9\u5728\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\u5219\u65e0\u89e3\uff0c\u5426\u5219\u9009\u62e9\u4e00\u4e2a**\u51fa\u5ea6\u4e3a0**\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u5373\u53ef\u3002\n\n\u4ee3\u7801\u662f\u8003\u573a\u4e0a\u5199\u7684\uff0c\u7a0d\u5fae\u6709\u70b9\u4e11:\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2000005;\nint n,m;\nvector<int> e[N];\nint dfn[N],scc_idx[N],low[N],tim,idx,sz[N],deg[N];\nbool vis[N];stack<int> stk;\nvoid tarjan(int pos) //Tarjan\n{\n    dfn[pos] = low[pos] = ++tim;vis[pos] = 1;stk.push(pos);\n    for (auto &i : e[pos])\n        if (!dfn[i]) tarjan(i),low[pos] = min(low[pos],low[i]);\n        else if (vis[i]) low[pos] = min(low[pos],dfn[i]);\n    if (dfn[pos] == low[pos])\n    {\n        ++idx;\n        while (!stk.empty())\n        {\n            int nd = stk.top();stk.pop();\n            vis[nd] = 0;scc_idx[nd] = idx;++sz[idx];\n            if (nd == pos) break;\n        }\n    }\n}\nint main ()\n{\n    ios::sync_with_stdio(false);\n    int T;cin >> T;\n    while (T--)\n    {\n        cin >> n >> m;\n        tim = idx = 0;\n        int t1,t2;\n        for (int i = 1;i <= n;i++) e[i].clear();\n        for (int i = 1;i <= m;i++)\n        {\n            cin >> t1 >> t2;\n            if (t1 != t2) e[t1].push_back(t2);//\u8fde\u8fb9\n        }\n        for (int i = 1;i <= n;i++)\n            scc_idx[i] = sz[i] = dfn[i] = low[i] = deg[i] = vis[i] = 0;//\u8bb0\u5f97\u591a\u7ec4\u6570\u636e\u7684\u9898\u7684\u521d\u59cb\u5316\n        for (int i = 1;i <= n;i++)\n            if (!dfn[i]) tarjan(i);\n        for (int i = 1;i <= n;i++)\n            for (auto &j : e[i])\n                if (scc_idx[i] != scc_idx[j]) ++deg[scc_idx[i]]; //\u8ba1\u7b97\u51fa\u5ea6\n        if (sz[scc_idx[1]] == n) { puts(\"NO\");continue; }//\u65e0\u89e3\u60c5\u51b5\n        bool fl = 0;\n        for (int i = 1;i <= idx;i++)\n            if (!deg[i] && sz[i]) //\u6709\u89e3\n            {\n                puts(\"YES\");fl = 1;\n                vector<int> ans[2];\n                for (int j = 1;j <= n;j++)\n                    ans[scc_idx[j] == i].push_back(j);\n                printf(\"%d %d\\n\",ans[1].size(),ans[0].size());\n                for (auto &i : ans[1]) printf(\"%d \",i);\n                puts(\"\");\n                for (auto &i : ans[0]) printf(\"%d \",i);\n                puts(\"\");\n                break;\n            }\n        if (!fl) puts(\"NO\");\n    }\n    return 0;\n}\n```",
        "postTime": 1571615818,
        "uid": 92602,
        "name": "SIGSEGV",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1239D \u3010Catowice City\u3011"
    },
    {
        "content": "\u91cd\u70b9\u89c2\u5bdf\uff1a\u5bf9\u4e8e\u7f16\u53f7 $i$\uff0c\u8981\u4e48\u9009\u7b2c $i$ \u4eba\uff0c\u8981\u4e48\u9009\u7b2c $i$ \u732b\uff1b\u4e0d\u80fd\u4e00\u4e2a\u90fd\u4e0d\u9009\uff0c\u4e0d\u80fd\u4e24\u4e2a\u90fd\u9009\u3002\n\n\u8bc1\u660e\uff1a\u4e0d\u80fd\u4e24\u4e2a\u540c\u65f6\u9009\u662f\u663e\u7136\u7684\u3002\u5982\u679c\u4e24\u4e2a\u90fd\u4e0d\u9009\u4f1a\u53d1\u751f\u4ec0\u4e48\u95ee\u9898\uff1f\u540e\u9762\u5c31\u53ea\u5269\u4e0b $n-1$ \u5bf9\uff08\u4eba\uff0c\u732b\uff09\uff0c\u5176\u4e2d\u5fc5\u987b\u9009 $n$ \u4e2a\u4e1c\u897f\uff1b\u7531\u4e8e\u9e3d\u5b50\u5b9a\u7406\u4e00\u4e2a\u5bf9\u5fc5\u987b\u5b58\u5728\u4eba\u548c\u732b\u90fd\u9009\uff0c\u8fd9\u6837\u4e0d\u5408\u6cd5\u3002\n\n\u73b0\u5728\uff0c\u53ef\u4ee5\u6784\u9020\u4e00\u4e2a $n$ \u4e2a\u8282\u70b9\u7684\u6709\u5411\u56fe\u3002\u6211\u4eec\u60f3\u628a\u8fd9\u4e9b\u8282\u70b9\u67d3\u8272\uff1b\u7b2c $i$ \u4e2a\u8282\u70b9\u67d3\u4e86 0 \u53f7\u8272\u8868\u793a\u9009\u4e86\u4eba\uff0c\u67d3\u4e86 1 \u53f7\u8272\u8868\u793a\u9009\u4e86\u732b\u3002\n\n\u6839\u636e\u9898\u76ee\u8981\u6c42\uff0c\u4e00\u4e2a\u8282\u70b9 $u$ \u7684\u989c\u8272\u4f1a\u5f71\u54cd\u8282\u70b9 $v$ \u53ef\u4ee5\u67d3\u4ec0\u4e48\u989c\u8272\u5f53\u4e14\u4ec5\u5f53\u4eba $u$ \u8ba4\u8bc6\u732b $v$\u3002\u5728\u8fd9\u4e2a\u65f6\u5019\u5c31\u5728\u6709\u5411\u56fe\u91cc\u9762\u52a0\u5165\u4e00\u4e2a $u$ \u5230 $v$ \u7684\u8fb9\u3002\n\n\u663e\u7136\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u67d3\u4e86 $0$\uff08\u9009\u4eba\uff09\uff0c\u5b83\u76f8\u90bb\u7684\u8282\u70b9\u5fc5\u987b\u67d3 $0$\uff0c\u4e5f\u5c31\u662f\u5b83\u53ef\u4ee5\u5230\u8fbe\u7684\u6240\u6709\u8282\u70b9\u90fd\u9700\u8981\u67d3 $0$\u3002\n\n\u8003\u8651\u8fd9\u4e2a\u95ee\u9898\u600e\u4e48\u5728\u65e0\u73af\u56fe\u91cc\u9762\u505a\u3002\u5982\u679c\u56fe\u4ec5\u4ec5\u6709\u4e00\u4e2a\u8282\u70b9\uff0c\u5219\u4e0d\u53ef\u80fd\u3002\uff08\u6ce8\u610f\u9898\u76ee\u8981\u6c42\u4eba\u7684\u96c6\u5408\u548c\u732b\u7684\u96c6\u5408\u975e\u7a7a\uff01\uff09\u5426\u5219\uff0c\u9009\u62e9\u4efb\u610f\u4e00\u4e2a\u6ca1\u6709\u8fdb\u5165\u7684\u8fb9\u7684\u4e00\u4e2a\u8282\u70b9\uff0c\u8fd9\u4e2a\u8282\u70b9\u67d3 $1$\uff1b\u6240\u6709\u522b\u7684\u8282\u70b9\u67d3 $0$\u3002\n\n\u6839\u636e\u5957\u8def\u628a\u6709\u5411\u56fe\u9000\u5316\u6210 DAG\uff1b\u7528 tarjan \u7f29\u5f3a\u8054\u901a\u5206\u91cf\u3002\u8fd9\u4e2a\u53ef\u4ee5\u56e0\u4e3a\u5728\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u91cc\u9762\u660e\u663e**\u53ef\u4ee5**\u628a\u6240\u6709\u8282\u70b9\u67d3\u4e00\u6837\u989c\u8272\uff1a\u5982\u679c\u67d3 $0$ \u5219\u5168\u67d3 $0$\uff0c\u5982\u679c\u67d3 $1$ \u5168\u67d3 $1$ \u4e00\u70b9\u95ee\u9898\u90fd\u6ca1\u6709\u3002\u5982\u679c\u7f29\u5b8c\u7684\u56fe\u4ec5\u4ec5\u6709\u4e00\u4e2a\u8054\u901a\u5206\u91cf\uff0c\u5219\u6ca1\u6709\u89e3\uff1b\u5426\u5219\u9009\u4e00\u4e2a\u6ca1\u6709\u5165\u8fb9\u7684\u5f3a\u8054\u901a\u5206\u91cf\u5168\u67d3 $1$\uff08\u9009\u732b\uff09\uff0c\u5269\u4e0b\u8282\u70b9\u5168\u67d3 $0$\uff08\u9009\u4eba\uff09\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n// writer: w33z8kqrqk8zzzx33\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define iter(i, a, b) for(int i=(a); i<(b); i++)\n#define rep(i, a) iter(i, 0, a)\n#define rep1(i, a) iter(i, 1, (a)+1)\n#define fi first\n#define se second\n#define pb push_back\n \n#define ll long long\n#define pii pair<int, int>\n#define endl '\\n'\n//#define int ll\nconst int MOD = 1000000007;\n\nnamespace Tarjan {\n\tconst int maxn = 1000006;\n\tstruct graph {\n\t\tint n; vector<int> inc; vector<int> e[maxn];\n\t\tvoid ae(int u, int v) { e[u].pb(v); }\n\t\tvoid clr(int _n) {\n\t\t\tinc.clear();\n\t\t\trep(i,_n+2) e[i].clear();\n\t\t\tn = _n;\n\t\t}\n\t};\n    int tot, color, l[maxn], t[maxn], findSCC[maxn];\n    bool r[maxn]; stack<int> S; graph pre, shr;\n    \n    void DFS(int u) {\n        l[u] = t[u] = ++tot; S.push(u); r[u] = true;\n        for(int& v:pre.e[u]) {\n            if(r[v] && t[v]) l[u] = min(l[u], t[v]);\n            if(!r[v] && !t[v]) { DFS(v); l[u] = min(l[u], l[v]); }\n        }\n        if(l[u] != t[u]) return;\n        color++;\n        while(1) {\n            int c = S.top(); S.pop(); r[c] = false;\n            findSCC[c] = color; if(c == u) return;\n        }\n    }\n    void shrinkSCC() {\n    \trep(i, pre.n+2) { l[i] = t[i] = r[i] = 0; }\n    \tcolor = 0; tot = 0;\n        tot = color = 0; rep1(u, pre.n) { if(t[u]) { continue; } DFS(u); }\n        shr.clr(color+1);\n        shr.n = color; shr.inc.resize(color+1);\n        rep1(u, pre.n) {\n            for(int& v:pre.e[u]) if(findSCC[u] != findSCC[v]) {\n            \tshr.ae(findSCC[u], findSCC[v]);\n            \tshr.inc[findSCC[v]]++;\n            }\n        }\n    }\n}\n\n// using namespace Tarjan;\n\nsigned main() {\n    ios_base::sync_with_stdio(false); cin.tie(0);\n    int t; cin >> t;\n    while(t--) {\n    \tint n, m; cin >> n >> m;\n    \tTarjan::pre.clr(n);\n    \trep(i, m) {\n    \t\tint u, v; cin >> u >> v;\n    \t\tif(u == v) continue;\n    \t\tTarjan::pre.ae(u, v);\n    \t}\n    \tTarjan::shrinkSCC();\n    \tif(Tarjan::color == 1) cout << \"No\" << endl;\n    \telse {\n    \t\tcout << \"Yes\" << endl;\n    \t\tvector<int> a, b;\n    \t\tint start = 0;\n    \t\trep1(i, Tarjan::color) if(!Tarjan::shr.inc[i]) start = i;\n    \t\trep1(i, n) {\n    \t\t\tif(Tarjan::findSCC[i] == start) a.pb(i);\n    \t\t\telse b.pb(i);\n    \t\t}\n    \t\tswap(a, b);\n    \t\tcout << a.size() << ' ' << b.size() << endl;\n    \t\tfor(int& k:a) cout << k << ' ';\n    \t\tcout << endl; for(int& k:b) cout << k << ' ';\n    \t\tcout << endl;\n    \t}\n    }\n}\n\n```",
        "postTime": 1593608438,
        "uid": 220037,
        "name": "w33z8kqrqk8zzzx33",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1239D \u3010Catowice City\u3011"
    }
]