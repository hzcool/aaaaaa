[
    {
        "content": "\u91cd\u8981\u7684\u6761\u4ef6\u662f\u6bcf\u6b21\u52a0\u5165\u7684\u76f4\u7ebf\uff0c\u659c\u7387\u548c\u622a\u8ddd\u5168\u90fd\u662f\u6b63\u6570\u3002\n\n\u54e6\uff0c\u90a3\u4e0d\u5c31\u662f\u6c38\u8fdc\u7b2c\u4e00\u4e2a\u70b9\u6700\u5c0f\u503c\u5417\uff1f\u4e0d\u4e0d\u4e0d\u53ef\u80fd\u524d\u540e\u63d2\u51650\u8fdb\u6765\uff0cemmmm\u3002\n\n\u5982\u679c\u524d\u9762\u63d2\u51650\uff0c\u90a3\u4e48\u540e\u9762\u4e4b\u524d\u7684\u70b9\u4e0d\u5c31\u90fd\u6ca1\u7528\u4e86\u5427\uff0c\u53ef\u662f\u5f53\u540e\u9762\u63d2\u51650\u7684\u65f6\u5019\u4e8b\u60c5\u597d\u50cf\u5c31\u7a0d\u5fae\u590d\u6742\u4e00\u70b9\u2026\u2026\n\n\u76f4\u7ebf\u2026\u2026\u7ebf\u6027\u2026\u2026\u6700\u4f18\u6027\u95ee\u9898\u2026\u2026\u8fd9\u4e00\u7c7b\u7684\u6761\u4ef6\u5f88\u5bb9\u6613\u626f\u5230\u51f8\u5305\u4e0a\u9762\u53bb\uff0c\u6211\u4eec\u6765\u63a8\u5bfc\u4e00\u756a\u3002\n\n\u7ed3\u8bba\uff1a\u4e0d\u5728\u5f53\u524d\u5c40\u9762\u7531\u6240\u6709\u70b9$(x-1,A_x)$\uff08$x$\u4ee3\u8868\u5e8f\u5217\u4e2d\u7b2c$x$\u4e2a\u70b9\uff09\uff08$x-1$\u662f\u56e0\u4e3a\u9898\u76ee\u4e2d\u7684\u76f4\u7ebf\u5c31\u662f$s(i-1)+b$\uff09\u6784\u6210\u7684\u4e0b\u51f8\u58f3\u7684\u90a3\u4e9b\u70b9\uff0c\u6c38\u8fdc\u4e0d\u662f\u6700\u5c0f\u503c\u3002\n\n\u9996\u5148\u4e0d\u5728\u51f8\u58f3\u4e0a\u610f\u5473\u7740\u5728\u5f53\u524d\u5c40\u9762\u5c31\u4e0d\u662f\u6700\u5c0f\u503c\uff0c\u6211\u4eec\u8981\u8bc1\u660e\u7684\u5c31\u662f\u5728\u4e4b\u540e\u52a0\u5165\u4e00\u4e9b\u76f4\u7ebf\u540e\u4ed6\u4e5f\u4e0d\u4f1a\u662f\u6700\u5c0f\u503c\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/53989.png)\n\n\u5982\u56fe\uff0c\u5176\u4e2d1\u53f7\u70b9\u548c3\u53f7\u70b9\u5728\u51f8\u58f3\u4e0a\uff0c2\u53f7\u70b9\u4e0d\u5728\u51f8\u58f3\u4e0a\uff0c\u5e76\u4e14\u6709$A_3<A_2<A_1$\u3002\n\n\u6211\u4eec\u73b0\u5728\u60f3\u8981\u52a0\u5165\u4e00\u6761\u76f4\u7ebf\uff0c\u4f7f\u5f973\u53f7\u70b9\u7684\u503c\u589e\u52a0\uff0c\u5e76\u4e14\u8fd8\u8981\u4f7f2\u53f7\u70b9\u6210\u4e3a\u6700\u5c0f\u503c\u3002$A_3+kx_3+b>A_2+kx_2+b$\uff0c\u90a3\u4e48\n$$k>\\frac {A_2-A_3}{x_3-x_2}$$\n\n\u7531\u4e8e\u51f8\u58f3\u7684\u6027\u8d28\uff0c\u6211\u4eec\u77e5\u90531\u53f7\u70b9\u548c2\u53f7\u70b9\u76f4\u7ebf\u7684\u659c\u7387\u662f\u5927\u4e8e2\u53f7\u70b9\u548c3\u53f7\u70b9\u76f4\u7ebf\u7684\u659c\u7387\u7684\uff0c\u4e5f\u5c31\u662f\n$$\\frac {A_3-A_2}{x_3-x_2}<\\frac {A_2-A_1}{x_2-x_1}$$\n\n\u6362\u4e00\u4e0b\u7b26\u53f7\u53d1\u73b0\n$$k>\\frac {A_2-A_3}{x_3-x_2}>\\frac {A_1-A_2}{x_2-x_1}$$\n\n\u5373$A_2+kx_2>A_1+kx_1$\uff0c\u6240\u4ee5\u6211\u4eec\u53d1\u73b0\u8fd9\u65f6\u50192\u53f7\u70b9\u7684\u503c\u5df2\u7ecf\u5927\u4e8e1\u53f7\u70b9\u4e86\uff0c\u4e0d\u53ef\u80fd\u662f\u6700\u5c0f\u503c\u3002\n(\u4ee5\u540e\u78b0\u5230\u7ebf\u6027\u95ee\u9898\u5c31\u778e\u731c\u51f8\u5305)\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ea\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u4e0b\u51f8\u58f3\u5c31\u884c\u4e86\uff1a\n\n\u64cd\u4f5c1\uff1a\u524d\u9762\u52a0\u5165\u4e00\u4e2a\u70b9\u4e0b\u51f8\u58f3\u6e05\u7a7a\u3002\n\n\u64cd\u4f5c2\uff1a\u540e\u9762\u52a0\u5165\u4e00\u4e2a\u70b9\uff0c\u4e0d\u505c\u5730\u4ece\u51f8\u58f3\u5c3e\u90e8\u5f39\u70b9\u3002\n\n\u64cd\u4f5c3\uff1a\u5168\u4f53\u52a0\u4e0a\u4e00\u6761\u76f4\u7ebf\u2026\u2026\u2026\u597d\u50cf\u6709\u70b9\u9ebb\u70e6\uff1f\u5bf9\u4e8e\u8fd9\u4e2a\u64cd\u4f5c\u6211\u4eec\u5355\u72ec\u7ef4\u62a4\u4e00\u4e2a\u5168\u5c40\u6807\u8bb0$(k,b)$\u8868\u793a\u6bcf\u4e2a\u70b9\u7684\u503c\u5e94\u8be5\u662f\u5b58\u50a8\u7684\u503c\u52a0\u4e0a\u8fd9\u4e2a\u6807\u8bb0\u7684\u503c\u3002\u5982\u5728\u6570\u7ec4\u91cc\u9762\u5b58\u7684\u70b9\u662f$(x,y)$\uff0c\u5b9e\u9645\u4e0a\u5b83\u7684\u503c\u662f$(x,y+kx+b)$\u3002\u90a3\u4e48\u8fdb\u884c\u7b2c3\u4e2a\u64cd\u4f5c\u7684\u65f6\u5019\u5c31\u662f\u589e\u52a0\u6807\u8bb0\u3002\u540c\u65f6\u6ce8\u610f\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u6e05\u7a7a\u51f8\u5305\u4e5f\u6e05\u7a7a\u6807\u8bb0\uff0c\u7b2c2\u4e2a\u64cd\u4f5c\u4e3a\u4e86\u8ba9\u52a0\u5165\u7684\u70b9\u7684\u7eb5\u5750\u6807\u662f0\uff0c\u521d\u59cb\u7684\u6743\u503c\u662f$(x,-(kx+b))$\u3002\n\n\u4ee3\u7801\uff08\u819c\u62dcyybyyb\uff0c\u501f\u9274\u4e86dalao\u7684\u4ee3\u7801\u601d\u8def\uff09\uff1a\n\n```cpp\n#include<cstdio>\n#define N 1023000\n#define ll long long\n#define double long double\nconst double eps=1e-6;\nstruct Point{\n\tll x,y;\n\tPoint (ll _x=0,ll _y=0) : x(_x),y(_y) {}\n\tPoint operator - (const Point &B) const {return Point(x-B.x,y-B.y);}\n\tdouble operator * (const Point &B) const {return (double)x*B.y-(double)y*B.x;}\n}stk[N];\nint top;ll k,b;\nll calc(Point A) {return A.y+k*A.x+b;}\ninline int read(){\n\tint n=0;char a;bool z=false;\n\twhile(a=getchar())\n\t{\n\t\tif (a>'9'||a<'0')\n\t\t\tif (z) break;\n\t\t\telse continue;\n\t\tif (!z) z=true;\n\t\tn=(n<<3)+(n<<1)+(a^48);\n\t}\n\treturn n;\n}\nint main()\n{\n\tll n=read();int Q=read(),opt;Point now;\n\tstk[top=1]=Point();\n\twhile(Q--)\n\t{\n\t\topt=read();\n\t\tswitch(opt)\n\t\t{\n\t\t\tcase 1:stk[top=1]=Point();n+=read();k=b=0;break;\n\t\t\tcase 2:now=Point(n,-(n*k+b));n+=read();\n\t\t\t\twhile(top>1&&(now-stk[top-1])*(stk[top]-stk[top-1])>-eps) --top;\n\t\t\t\tstk[++top]=now;break;\n\t\t\tcase 3:b+=read();k+=read();break;\n\t\t}\n\t\twhile(top>1&&calc(stk[top])>=calc(stk[top-1])) --top;\n\t\tprintf(\"%lld %lld\\n\",stk[top].x+1,calc(stk[top]));\n\t}\n\treturn 0;\n}\n\n//by qlwpc\n```\n",
        "postTime": 1552530194,
        "uid": 45876,
        "name": "\u51c4\u9b49",
        "ccfLevel": 9,
        "title": "CF1137E \u9898\u89e3"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://codeforces.com/problemset/problem/1137/E)   \n\u611f\u89c9[\u5b98\u65b9\u9898\u89e3](https://codeforces.com/blog/entry/65825)\u5df2\u7ecf\u8bb2\u5f97\u5f88\u597d\u4e86\u2026\u2026  \n\u6709\u5f88\u591alog\u7684\u505a\u6cd5\uff0c\u4f46\u5176\u5b9e\u662f\u53ef\u4ee5\u7ebf\u6027\u7684\u3002\uff08\u989d\uff0c\u8c01\u6559\u6559\u6211log\u600e\u4e48\u505a\u554aQAQ)  \n\u4f8b\u884c\u5ba3\u4f20\u4e00\u4e0b\u81ea\u5df1\u7684[\u535a\u5ba2](https://blog.csdn.net/ymzqwq/article/details/88591819)\n\n\u9996\u5148\uff0c\u6211\u4eec\u6ce8\u610f\u5230\uff0c\u6bcf\u6b21\u52a0\u8fdb\u53bb\u7684\u4e00\u7ec40\u90fd\u662f\u4e00\u8d77\u589e\u52a0\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5173\u5fc3\u8fd9\u7ec40\u4e2d\u7684\u7b2c\u4e00\u4e2a\uff08\u56e0\u4e3a\u540e\u9762\u7684\u80af\u5b9a\u4f1a\u6c38\u8fdc\u5927\u4e8e\u7b49\u4e8e\u7b2c\u4e00\u4e2a\uff09\u3002\n\n\u7136\u540e\u6211\u4eec\u53c8\u6ce8\u610f\u5230\uff0c\u5982\u679c\u5728\u6700\u524d\u9762\u52a0\u5165\u4e00\u4e9b0\uff0c\u90a3\u4e48\u9664\u4e86\u7b2c\u4e00\u4e2a\u4ee5\u5916\u7684\u90fd\u6c38\u8fdc\u4e0d\u4f1a\u662f\u6700\u5927\u7684\uff0c\u90a3\u4e48\u5c31\u76f8\u5f53\u4e8e\u8ba9\u6240\u6709$A_i=0$\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5173\u5fc32\u548c3\u4e24\u4e2a\u64cd\u4f5c\u3002\n\n\u6211\u4eec\u628a\u6240\u6709$(x,A_x)$\u8f6c\u5316\u5230\u4e8c\u7ef4\u5e73\u9762\u4e0a\uff0c\u7136\u540e\u7ef4\u62a4\u4e00\u6761\u5411\u5de6\u4e0b\u51f8\u7684\u6298\u7ebf\uff0c\u663e\u7136\u4e0d\u5728\u8fd9\u4e2a\u6298\u7ebf\u4e0a\u7684\u5c31\u6c38\u8fdc\u4e0d\u4f1a\u662f\u7b54\u6848\u4e86\u3002\u5b9e\u9645\u4e0a\u7b54\u6848\u5c31\u662f\u6298\u7ebf\u4e0a\u6700\u540e\u7684\u70b9\uff0c\u5c31\u662f\u53f3\u4e0b\u89d2\u90a3\u4e2a\u3002\n\n\u4e8e\u662f2\u64cd\u4f5c\u5c31\u662f\u52a0\u4e2a\u70b9\uff0c\u7136\u540e\u548c\u6c42\u51f8\u5305\u5dee\u4e0d\u591a\uff0c\u4f1a\u5220\u6389\u672b\u5c3e\u7684\u4e00\u4e9b\u70b9\u3002\n\n3\u64cd\u4f5c\u7684\u8bdd\uff0c\u6211\u4eec\u53d1\u73b0\u7ecf\u8fc7\u64cd\u4f5c\u4e4b\u540e\u6240\u6709\u7ebf\u6bb5\u7684\u659c\u7387\u90fd\u4f1a\u53d8\u5927\uff0c\u6240\u4ee5\u7ecf\u8fc7\u64cd\u4f5c\u540e\u51f8\u6298\u7ebf\u7684\u6700\u540e\u82e5\u5e72\u4e2a\u70b9\u53ef\u80fd\u4f1a\u201c\u7fd8\u8d77\u6765\u201d\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u4ece\u540e\u5f80\u524d\uff0c\u628a\u90a3\u4e9b\u201c\u7fd8\u8d77\u6765\u201d\u7684\u70b9\u5220\u6389\u5c31\u884c\u4e86\u3002\n![Untitled1.png](https://i.loli.net/2019/03/18/5c8f567140255.png)\n\u6709\u4e2a\u5c0f\u6280\u5de7\u3002\u6211\u4eec\u53ef\u4ee5\u8bb0\u5f55\u4e00\u4e0b$b[i],s[i]$\u7684\u524d\u7f00\u548c\uff0c\u518d\u7ed3\u5408\u70b9$(x,A_x)$\u662f\u5728\u7b2c\u51e0\u4e2a\u64cd\u4f5c\u52a0\u8fdb\u6765\u7684\uff0c\u5c31\u53ef\u4ee5O(1)\u7b97\u51fa$A_x$\uff0c\u800c\u4e0d\u7528\u5728\u6bcf\u6b21\u8fdb\u884c3\u64cd\u4f5c\u540e\u7ed9\u6bcf\u4e2a\u51f8\u6298\u7ebf\u4e0a\u7684\u70b9\u90fd\u52a0\u4e00\u6ce2\u3002\n\n\u6211\u8ba1\u7b97\u51e0\u4f55\u5f31\u6e23\uff0c\u6240\u4ee5\u5199\u5f97\u5f88\u4e11QAQ\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define x1 _x1\n#define y1 _y1\n#define x2 _x2\n#define y2 _y2\n#define fr(i,x,y) for(int i=(x);i<=(y);i++)\n#define rf(i,x,y) for(int i=(x);i>=(y);i--)\n#define frl(i,x,y) for(int i=(x);i<(y);i++)\nusing namespace std;\nconst int N=300003;\nint n,m;\nll b[N],s[N];\nstruct data{\n\tint num,x;\n}st[N];  //\u8fd9\u662f\u4e00\u4e2a\u6808\uff0c\u7ef4\u62a4\u51f8\u6298\u7ebf\u4e0a\u7684\u70b9\nint L;\n\ninline int sign(ll &x){\n\tif (x>0) return 1;\n\tif (x<0) return -1;\n\treturn 0;\n}\n\ninline int mul(ll x1,ll y1,ll x2,ll y2){  //\u8fd9\u4e2a\u662f\u5224\u65ad\u53c9\u79ef\u662f\u5426>0\u7684\n\tint w1=sign(x1)*sign(y2),w2=sign(y1)*sign(x2);\n\tif (w1!=w2) return w1>w2;\n\tif (w1==0) return 0;\n\treturn (long double)x1*y2>(long double)y1*x2;\n}\n\nvoid read(int &x){ scanf(\"%d\",&x); }\nvoid read(ll &x){ scanf(\"%lld\",&x); }\n\nvoid chkmin(ll &x,ll y){ if (y<x) x=y; }\n\ninline ll cal(data q,int w){ //\u8ba1\u7b97A[q.x]\n\treturn b[w]-b[q.num]+1ll*(q.x-1)*(s[w]-s[q.num]);\n}\n\nvoid AddPoint(int w,int x){\n\tif (cal(st[L],w)==0) return;\n\tll y=cal((data){w,x},w);\n\twhile(L>=2){\n\t\tif (mul(st[L].x-st[L-1].x,cal(st[L],w)-cal(st[L-1],w),x-st[L].x,y-cal(st[L],w))) break;\n\t\tL--;\n\t}\n\tst[++L]=(data){w,x};\n}\n\nvoid PopBack(int w){\n\twhile(L>=2&&cal(st[L],w)>=cal(st[L-1],w)) L--;\n}\n\nint main(){\n\tread(n);read(m);\n\tint tp;ll x,y;\n\tst[L=1]=(data){0,1};\n\tfr(i,1,m){\n\t\tb[i]=b[i-1];s[i]=s[i-1];\n\t\tread(tp);read(x);\n\t\tif (tp==1){\n\t\t\tb[i]=s[i]=0;\n\t\t\tst[L=1]=(data){i,1};\n\t\t\tn+=x;\n\t\t}else if (tp==2){\n\t\t\tAddPoint(i,n+1);\n\t\t\tn+=x;\n\t\t}else{\n\t\t\tread(y);\n\t\t\tb[i]+=x;s[i]+=y;\n\t\t\tPopBack(i);\n\t\t}\n\t\tprintf(\"%d %lld\\n\",st[L].x,cal(st[L],i));\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1552699281,
        "uid": 6174,
        "name": "\u591c\u732b\u5b50\u9a71\u868a\u5668",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1137E \u3010Train Car Selection\u3011"
    },
    {
        "content": "## \u9898\u9762\n\n\u4e09\u4e2a\u64cd\u4f5c\n\n1.\u5728\u5f53\u524d\u6570\u5217\u6700\u5de6\u7aef\u52a0\u5165$k$\u4e2a\u521d\u59cb\u4e3a$0$\u7684\u6570\n\n2.\u5728\u5f53\u524d\u6570\u5217\u6700\u53f3\u7aef\u52a0\u5165$k$\u4e2a\u521d\u59cb\u4e3a$0$\u7684\u6570\n\n3.\u5c06\u5f53\u524d\u6570\u5217\u4ece\u5de6\u5230\u53f3\u7b2c$i$\u4e2a\u6570\u52a0\u4e0a$b+(i-1)k(b>0,k>0)$\n\n\u8bf7\u5728\u6bcf\u4e00\u6b21\u64cd\u4f5c\u4e4b\u540e\u8f93\u51fa\u5f53\u524d\u6570\u5217\u7684\u6700\u5c0f\u503c\u4ee5\u53ca\u6700\u5c0f\u503c\u6240\u5728\u7684\u4f4d\u7f6e\uff0c\u5982\u679c\u6709\u591a\u4e2a\u76f8\u540c\u7684\u6700\u5c0f\u503c\u53d6\u6700\u5de6\u7aef\u7684\n\n## \u9898\u89e3\n\n\u9996\u5148\u6709\u4e24\u4e2a\u7ed3\u8bba\n\n1.\u5982\u679c\u5728\u5de6\u7aef\u52a0\u5165\u4e00\u4e2a\u6570\uff0c\u90a3\u4e48\u5b83\u540e\u9762\u7684\u6240\u6709\u6570\u90fd\u6ca1\u6709\u7528\u4e86\n\n\u8bc1\u660e\uff1a\u56e0\u4e3a\u6bcf\u4e00\u6b21$3$\u64cd\u4f5c\u540e\u9762\u52a0\u7684\u6c38\u8fdc\u6bd4\u524d\u9762\u7684\u591a\uff0c\u800c\u4e14\u503c\u76f8\u540c\u65f6\u8981\u53d6\u6700\u5de6\u8fb9\u7684\uff0c\u6240\u4ee5\u5de6\u8fb9\u52a0\u5165\u4e00\u4e2a\u4e4b\u540e\u540e\u9762\u7684\u90fd\u6ca1\u7528\u4e86\n\n2.\u4e0d\u7ba1\u662f\u5de6\u7aef\u8fd8\u662f\u53f3\u7aef\uff0c\u52a0\u5165\u7684$k$\u4e2a\u6570\u91cc\u53ea\u6709\u6700\u5de6\u7aef\u7684\u662f\u6709\u7528\u7684\n\n\u8bc1\u660e\u540c$1$\n\n\u90a3\u4e48\u7b80\u5355\u6765\u8bf4\u8fc7\u7a0b\u5c31\u662f\u8fd9\u6837\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u80fd\u591f\u4e0d\u65ad\u5f80\u540e\u6dfb\u52a0\u5143\u7d20\u7684\u4e1c\u897f\uff0c\u6bcf\u4e00\u6b21\u5982\u679c\u524d\u9762\u52a0\u4e86\u503c\u6211\u4eec\u5c31\u628a\u5b83\u66b4\u529b\u91cd\u6784\n\n\u6613\u53d1\u73b0\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u7684\u662f\u4e00\u4e2a\u9012\u51cf\u7684\u5e8f\u5217\uff08\u56e0\u4e3a\u5982\u679c\u6709\u4e00\u4e2a\u5143\u7d20\u5927\u4e8e\u524d\u9762\u7684\u90a3\u4e48\u524d\u9762\u90a3\u4e2a\u5e76\u6ca1\u6709\u4ec0\u4e48\u5375\u7528\uff09\uff0c\u800c\u4e14\u6709\u53ef\u80fd\u52a0\u7740\u52a0\u7740\u67d0\u4e00\u4e2a\u6570\u7a81\u7136\u5927\u4e8e\u524d\u9762\u4e86\uff0c\u5f97\u628a\u5b83\u5220\u53bb\n\n\u90a3\u4e48\u5f88\u660e\u663e\u5c31\u662f\u4e00\u4e2a\u94fe\u8868\u4e86\uff0c\u53ea\u6709\u8fd9\u73a9\u610f\u513f\u8d44\u74f7\u5feb\u901f\u5728\u6570\u5217\u4e2d\u95f4\u5220\u6570\n\n\u4e8e\u662f\u6211\u4eec\u63a5\u4e0b\u6765\u7684\u8fc7\u7a0b\u90fd\u5047\u5b9a\u5de6\u7aef\u70b9\u56fa\u5b9a\uff08\u56e0\u4e3a\u5de6\u7aef\u70b9\u4e00\u53d8\u6211\u4eec\u5c31\u9700\u8981\u76f4\u63a5\u91cd\u6784\uff09\n\n\u8bbe\u5f53\u524d\u5de6\u7aef\u70b9\u4e3a$1$\uff0c\u90a3\u4e48\u540e\u9762\u52a0\u5165\u7684\u6bcf\u4e2a\u6570\u7684\u4f4d\u7f6e\u90fd\u662f\u5df2\u7ecf\u5b9a\u7684\uff0c\u5bf9\u4e8e\u52a0\u7684\u503c\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4$\\sum b$\u548c$\\sum s$\uff0c\u90a3\u4e48\u5230\u65f6\u5019\u9700\u8981\u7528\u7684\u65f6\u5019\u53ef\u4ee5\u4e00\u8d77\u52a0\u4e0a\u53bb\u3002\u5bf9\u4e8e\u4e00\u4e2a\u65b0\u52a0\u5165\u7684\u503c\uff0c\u8bbe\u5f53\u524d$tmpb=\\sum b,tmps=\\sum s$\uff0c\u6211\u4eec\u9700\u8981\u628a\u5b83\u7684\u503c\u51cf\u53bb$tmpb+(id-1)tmps$\uff08\u5176\u4e2d$id$\u4e3a\u5b83\u7684\u4f4d\u7f6e\uff09\uff0c\u8fd9\u6837\u624d\u80fd\u4fdd\u8bc1\u540e\u9762\u52a0\u4e0a\u61d2\u6807\u8bb0\u7684\u65f6\u5019\u5b83\u7684\u503c\u662f\u771f\u7684\n\n\u4f1a\u6539\u53d8\u5e8f\u5217\u4e2d\u6570\u7684\u5927\u5c0f\u5173\u7cfb\u7684\u53ea\u4e0e$s$\u6709\u5173\uff0c\u5bf9\u4e8e\u6570\u5217\u4e2d\u76f8\u90bb\u7684\u4e24\u4e2a\u6570\uff0c\u5982\u679c\u5b83\u4eec\u7684\u4f4d\u7f6e\u4e4b\u5dee\u4e3a$k$\uff0c\u90a3\u4e48\u4e00\u6b21$3$\u64cd\u4f5c\u7684$s$\u4f1a\u4f7f\u5b83\u4eec\u4e4b\u95f4\u7684\u503c\u7684\u5dee\u51cf\u5c11$ks$\uff0c\u8bbe\u5b83\u4eec\u539f\u6765\u7684\u5dee\u4e3a$val$\uff0c\u90a3\u4e48\u53ea\u8981\u4e4b\u540e\u7684$s$\u64cd\u4f5c\u7684\u603b\u548c\u8fbe\u5230\u4e86$val/k$\uff08\u8fd9\u91cc\u662f\u4e0a\u53d6\u6574\uff09\uff0c\u90a3\u4e48\u540e\u9762\u90a3\u4e2a\u6570\u5c31\u5e9f\u4e86\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5220\u4e86\u5b83\n\n\u6211\u4eec\u6bcf\u6b21\u63d2\u5165\u4e00\u4e2a\u6570\u7684\u65f6\u5019\u7b97\u51fa\u5b83\u548c\u524d\u9762\u90a3\u4e2a\u6570\u6b64\u65f6\u76f8\u5dee\u7684\u503c\uff0c\u5e76\u8bb0\u5f55\u4e00\u4e0b\u9700\u8981\u8fbe\u5230\u7684$s$\uff0c\u5e76\u628a\u5b83\u653e\u8fdb\u4e00\u4e2a\u4f18\u5148\u961f\u5217\u91cc\u3002\u6bcf\u4e00\u6b21$3$\u64cd\u4f5c\u7684\u65f6\u5019\u90fd\u4e0d\u65ad\u53d6\u51fa\u6700\u9876\u7aef\u7684\u5143\u7d20\u770b\u770b\u662f\u5426\u9700\u8981\u5220\n\n\u6ce8\u610f\uff0c\u6211\u4eec\u7b97\u51fa\u7684$s$\u662f\u4e4b\u540e\u8fd8\u9700\u8981\u591a\u5c11\uff0c\u4f46\u662f$tmps$\u8bb0\u5f55\u7684\u662f\u4ece\u5f00\u59cb\u5230\u73b0\u5728\u6709\u591a\u5c11\uff0c\u6240\u4ee5\u653e\u8fdb\u961f\u5217\u7684\u65f6\u5019\u8fd8\u9700\u8981\u52a0\u4e0a\u5f53\u524d\u7684$tmps$\n\n\u8fd8\u6709\uff0c\u6bcf\u4e00\u6b21\u5220\u6570\u7684\u65f6\u5019\uff0c\u8bbe\u5f53\u524d\u5220\u7684\u6570\u4e3a$p$\uff0c\u90a3\u4e48\u961f\u5217\u91cc\u8bb0\u5f55\u7684$p$\u53f3\u8fb9\u90a3\u4e2a\u6570\u548c$p$\u7684\u5dee\u5c31\u6ca1\u6709\u610f\u4e49\u4e86\uff0c\u8981\u5220\u6389\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u7684\u662f\u4e00\u4e2a\u53ef\u5220\u5806\n\n\u7136\u540e\u6ca1\u6709\u7136\u540e\u4e86\n\nps\uff1a\u4e3a\u4e86\u597d\u770b\u4e00\u70b9\u7b2c\u4e00\u6b21\u7528\u4e86\u6307\u9488\u2026\u2026\u7ed3\u679c$bug$\u6b7b\u6d3b\u8c03\u4e0d\u51fa\u6765\u2026\u2026\u4ee5\u540e\u518d\u4e5f\u4e0d\u4e71\u641e\u4e86\u2026\u2026$RE\\ on\\ test\\ \\#70$\u4e0d\u77e5\u9053\u6709\u591a\u9178\u723d\u2026\u2026\n\n```cpp\n//minamoto\n#include<bits/stdc++.h>\n#define R register\n#define ll long long\n#define fp(i,a,b) for(R int i=(a),I=(b)+1;i<I;++i)\n#define fd(i,a,b) for(R int i=(a),I=(b)-1;i>I;--i)\n#define go(u) for(int i=head[u],v=e[i].v;i;i=e[i].nx,v=e[i].v)\nusing namespace std;\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline char getc(){return p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++;}\nint read(){\n    R int res,f=1;R char ch;\n    while((ch=getc())>'9'||ch<'0')(ch=='-')&&(f=-1);\n    for(res=ch-'0';(ch=getc())>='0'&&ch<='9';res=res*10+ch-'0');\n    return res*f;\n}\nchar sr[1<<21],z[20];int C=-1,Z=0;\ninline void Ot(){fwrite(sr,1,C+1,stdout),C=-1;}\nvoid print(R ll x){\n    if(C>1<<20)Ot();if(x<0)sr[++C]='-',x=-x;\n    while(z[++Z]=x%10+48,x/=10);\n    while(sr[++C]=z[Z],--Z);sr[++C]='\\n';\n}\nconst int N=5e5+5;\nstruct node{\n\tnode *lc,*rc;int s,id;ll v,c;\n\tinline void init(R int ss,R int Id,R ll vv){s=ss,id=Id,v=vv,lc=rc=NULL;}\n}pool[N],*p[N],*T,*g;\nstruct point{\n\tnode *c;ll v;\n\tpoint(){c=NULL,v=0;}\n\tpoint(node *cc,ll vv):c(cc),v(vv){}\n\tinline bool operator <(const point &b)const{return v>b.v;}\n\tinline bool operator ==(const point &b)const{return c==b.c&&v==b.v;}\n};\nstruct Queue{\n\tpriority_queue<point>A,B;\n\tinline void push(R point x){A.push(x);}\n\tinline void pop(R point x){B.push(x);}\n\tinline void pop(){A.pop();}\n\tinline bool empty(){\n\t\twhile(!B.empty()&&A.top()==B.top())A.pop(),B.pop();\n\t\treturn A.empty();\n\t}\n\tinline point top(){\n\t\twhile(!B.empty()&&A.top()==B.top())A.pop(),B.pop();\n\t\treturn A.top();\n\t}\n}q;\nint n,m,tot,op,b,s,k,sum;ll sumb,sums,tmpb,tmps;\ninline void insh(){p[++tot]->init(sum+k,1,0),T=p[tot],tmpb=tmps=0;while(!q.empty())q.pop();}\ninline ll val(node *it){return tmpb+tmps*(it->id-1)+it->v;}\nvoid inst(){\n\tif(val(T)==0)return T->s+=k,void();\n\tp[++tot]->init(k,sum+1,-tmpb-tmps*sum);\n\tp[tot]->c=(val(T)-val(p[tot])+T->s-1)/T->s+tmps;\n\tp[tot]->lc=T,T->rc=p[tot],q.push(point(p[tot],p[tot]->c));\n\tT=p[tot];\n}\nvoid update(){\n\ttmpb+=b,tmps+=s;\n\twhile(!q.empty()&&q.top().v<=tmps){\n\t\tg=q.top().c,q.pop();\n\t\tif(g==T)T=g->lc,T->s+=g->s,T->rc=NULL;\n\t\telse{\n\t\t\tg->lc->rc=g->rc,g->rc->lc=g->lc,g->lc->s+=g->s;\n\t\t\tq.pop(point(g->rc,g->rc->c));\n\t\t\tg->rc->c=(val(g->lc)-val(g->rc)+g->lc->s-1)/g->lc->s+tmps;\n\t\t\tq.push(point(g->rc,g->rc->c));\n\t\t}\n\t}\n}\nint main(){\n//\tfreopen(\"testdata.in\",\"r\",stdin);\n\tn=read(),m=read();\n\tfp(i,1,N-5)p[i]=&pool[i];\n\tk=n,insh(),sum=k;\n\twhile(m--){\n\t\top=read();\n\t\tswitch(op){\n\t\t\tcase 1:k=read(),insh(),sum+=k;break;\n\t\t\tcase 2:k=read(),inst(),sum+=k;break;\n\t\t\tcase 3:b=read(),s=read(),update();break;\n\t\t}\n\t\tprint(T->id),sr[C]=' ',print(val(T));\n\t}\n\treturn Ot(),0;\n}\n```",
        "postTime": 1552566891,
        "uid": 41781,
        "name": "bztMinamoto",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1137E \u3010Train Car Selection\u3011"
    },
    {
        "content": "\u60f3\u5199\u4e00\u7bc7\u6bd4\u8f83\u7b80\u77ed\u800c\u6e05\u695a\u7684\u9898\u89e3\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u7ebf\u6027\u7684\uff0c\u662f $\\text{CF}$ \u4e0a\u7684\u6700\u4f18\u89e3\u3002\n\n---\n\n\u6027\u8d28 $1$\uff1a\n\n\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e\u4e24\u4e2a\u6570 $x, y$\uff0c\u5982\u679c $A_x > A_y$ \u4e14 $x > y$\uff0c\u90a3\u4e48 $x$ \u8fd9\u4e2a\u4f4d\u7f6e\u80af\u5b9a\u662f\u6ca1\u7528\u4e86\uff0c\u539f\u56e0\u6bd4\u8f83\u663e\u7136\u3002\n\n---\n\n\u6240\u4ee5\u8bf4\u6211\u4eec\u521d\u6b65\u7684\u60f3\u6cd5\u662f\u7ef4\u62a4\u4e00\u4e2a\u4ece\u5927\u5230\u5c0f\u7684\u5355\u8c03\u6808\uff0c\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u4ece\u5927\u5230\u5c0f\u5e76\u4e0d\u80fd\u5f88\u597d\u7684\u5229\u7528\u9898\u76ee\u4e2d\u7684\u6027\u8d28\u3002\n\n\u6027\u8d28 $2$\uff1a\n\n\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e $x, y$\uff0c\u5982\u679c $A_x > A_y$ \u4e14 $x < y$ \u7684\u8bdd $y$ \u8d85\u8fc7 $x$ \u7684\u64cd\u4f5c\u7684 $s$ \u548c $\\geq\\dfrac{A_x-A_y}{y-x}$\uff0c\u7136\u540e\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u5f88\u50cf\u659c\u7387\uff0c\u4e8e\u662f\u5bf9\u4e8e $x, y, z$\uff0c\u82e5 $x>y>z$\uff0c\u90a3\u4e48\u6839\u636e\u6027\u8d28 $1$ \u6709 $A_x<A_y<A_z$\uff0c\u800c\u82e5 $\\dfrac{A_y-A_x}{x-y}\\geq\\dfrac{A_z-A_y}{y-z}$ \u8868\u660e $y$ \u5df2\u7ecf\u6ca1\u6709\u7528\u4e86\uff0c\u56e0\u4e3a\u8fd9\u610f\u5473\u7740\u5728 $x$ \u8d85\u8fc7 $y$ \u524d $y$ \u5c31\u8d85\u8fc7 $z$ \u4e86\uff0c$y$ \u4e0d\u53ef\u80fd\u5728\u67d0\u4e2a\u65f6\u523b\u6210\u4e3a\u6700\u5c0f\u503c\u3002\n\n---\n\n\u8fd9\u6837\u6211\u4eec\u53d1\u73b0\u7ef4\u62a4\u7684\u4e1c\u897f\u5c31\u662f\u4e00\u4e2a\u5750\u6807\u4e3a $(x,A_x)$ \u7684\u51f8\u58f3\u72b6\u7269\uff0c\u6709\u4e86\u8fd9\u4e2a\u51f8\u58f3\u4e4b\u540e\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7528\u4e00\u4e2a\u6808\u6765\u7ef4\u62a4\uff0c\u64cd\u4f5c $1$ \u76f4\u63a5\u6e05\u7a7a\u6808\uff08\u6027\u8d28 $1$\uff09\uff0c\u64cd\u4f5c $2$ \u76f4\u63a5\u7528\u6027\u8d28 $1$ \u548c $2$ \u6765\u7ef4\u62a4\u51f8\u58f3\uff0c\u64cd\u4f5c $3$ \u76f4\u63a5\u4ece\u6808\u9876\u5f00\u59cb\u5f39\u5c31\u884c\u4e86\u3002\n\n\u76f4\u63a5\u7ef4\u62a4\u8fd9\u4e2a\u51f8\u58f3\u4e0a\u7684\u6bcf\u4e2a\u70b9\u4e5f\u662f\u4e0d\u592a\u597d\u76f4\u63a5\u505a\u7684\uff0c\u4f46\u662f\u6211\u4eec\u7ef4\u62a4\u6700\u540e\u4e00\u4e2a\u503c\u548c\u5dee\u5206\u662f\u597d\u505a\u7684\uff0c\u4e8e\u662f\u8fd9\u9898\u5c31\u505a\u5b8c\u4e86\u3002\n\n\u4ee3\u7801\u5199\u7684\u5f88\u4e71\uff0c[\u9700\u8981\u5bf9\u62cd\u7684\u53ef\u4ee5\u5eb7\u5eb7](https://codeforces.com/contest/1137/submission/202470393)\u3002",
        "postTime": 1681728333,
        "uid": 615348,
        "name": "zhouershan",
        "ccfLevel": 7,
        "title": "CF1137E Train Car Selection sol"
    }
]