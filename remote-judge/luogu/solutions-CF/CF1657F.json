[
    {
        "content": "\u6c34\u4e00\u7bc7\u9898\u89e3 qwq\n\n### Descriptipon\n\n\u7ed9\u51fa\u4e00\u68f5 $n$ \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u6709 $m$ \u4e2a\u9650\u5236 $(x,y,s)$\uff0c\u8868\u793a $s$ \u6309\u987a\u5e8f\u51fa\u73b0\u5728\u8def\u5f84 $x\\to y$ \u6216 $y\\to x$ \u4e0a\u3002\n\n\u6c42\u4e00\u7ec4\u6bcf\u4e2a\u8282\u70b9\u4e0a\u586b\u5b57\u6bcd\u7684\u65b9\u6848\uff0c\u6216\u62a5\u544a\u65e0\u89e3\u3002\n\n$2\\leq n\\leq 4\\times 10^5$\uff0c$1\\leq m\\leq 4\\times 10^5$\uff0c$s_i$ \u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\uff0c$\\sum |s_i|\\leq 4\\times 10^5$\u3002\n\n### Solution\n\n\u9996\u5148\u628a\u8def\u5f84\u4e0a\u7684\u70b9\u62ce\u51fa\u6765\uff0c\u90a3\u4e48\u8def\u5f84\u4e0a\u7b2c $i$ \u4e2a\u70b9\u53ea\u80fd\u586b $s_i$ \u6216 $s_{len-i+1}$\uff0c\u5206\u522b\u5bf9\u5e94 $x\\to y$ \u548c $y\\to x$\u3002\n\n\u5f53\u7136\u8fd8\u8981\u8003\u8651\u522b\u7684\u9650\u5236\uff0c\u6211\u4eec\u53ea\u53d6\u67d0\u4e00\u4e2a\u5305\u542b $x$ \u7684\u9650\u5236\u4e2d\uff0c$x$ \u80fd\u586b\u7684\u4e24\u79cd\u5b57\u6bcd $a,b$\uff08$a,b$ \u5206\u522b\u662f\u5bf9\u5e94\u9650\u5236\u7684 $s_i,s_{len-i+1}$\uff09\uff0c\u7136\u540e\u7528\u5176\u4ed6\u7684\u9650\u5236\u6765\u7ea6\u675f\u3002\n\n\u5047\u5982\u53e6\u4e00\u4e2a\u9650\u5236\u662f $t$\uff08\u7b2c $k$ \u4e2a\u9650\u5236\uff09\uff0c$x$ \u662f\u8def\u5f84\u4e0a\u7b2c $j$ \u4e2a\u70b9\u3002\n\n- \u82e5 $a\\neq t_j$\uff0c\u5219\u5982\u679c\u9009\u4e86 $a$\uff0c\u5c31\u53ea\u80fd\u9009\u7b2c $k$ \u4e2a\u9650\u5236\u7684\u8def\u5f84 $y\\to x$ \u6765\u6ee1\u8db3\u9650\u5236\uff1b\u5982\u679c\u9009\u4e86 $x\\to y$\uff0c\u5c31\u53ea\u80fd\u9009 $b$\u3002\n- \u82e5 $b\\neq t_j$\uff0c\u5219\u5982\u679c\u9009\u4e86 $b$ \u5c31\u53ea\u80fd\u9009 $y\\to x$\uff0c\u5982\u679c\u9009\u4e86 $x\\to y$ \u5c31\u53ea\u80fd\u9009 $a$\u3002\n- \u5982\u679c $a\\neq t_{len-j+1}$\uff0c$b\\neq t_{len-j+1}$ \u540c\u7406\u3002\n\n\u7136\u540e\u8dd1\u4e00\u4e0b 2-SAT \u5373\u53ef\u3002\u5177\u4f53\u5730\uff0c\u5efa $2(n+m)$ \u4e2a\u70b9\uff0c\u7b2c $i,i+n$ \u4e2a\u70b9\u5206\u522b\u8868\u793a $i$ \u9009 $a$ \u8fd8\u662f $b$\uff0c\u7b2c $2n+i,2n+i+m$ \u4e2a\u70b9\u5206\u522b\u8868\u793a\u7b2c $i$ \u4e2a\u9650\u5236\u9009 $x\\to y$ \u8fd8\u662f $y\\to x$\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=2e6+5;\nint n,m,x,y,len,p[N],tot,c[N],num,dfn[N],low[N],top,st[N],tmp,dep[N],fa[N],vis[N];\nchar s[N],a[N],b[N];\nvector<int>g[N],v[N];\nvoid dfs(int x){\n\tfor(int y:g[x])\n\t\tif(y!=fa[x]) dep[y]=dep[x]+1,fa[y]=x,dfs(y);\n}\nvoid tarjan(int x){\n\tdfn[x]=low[x]=++num,st[++top]=x;\n\tfor(int y:v[x]){\n\t\tif(!dfn[y]) tarjan(y),low[x]=min(low[x],low[y]);\n\t\telse if(!c[y]) low[x]=min(low[x],dfn[y]);\n\t}\n\tif(low[x]==dfn[x]){\n\t\ttot++;\n\t\tdo{c[tmp=st[top--]]=tot;}while(tmp!=x);\n\t}\n}\nsigned main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<n;i++)\n\t\tscanf(\"%d%d\",&x,&y),g[x].push_back(y),g[y].push_back(x); \n\tdfs(1);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d%s\",&x,&y,s+1),len=strlen(s+1);\n\t\tint l=1,r=len,q=2*n+i,nq=q+m;\n\t\twhile(l<=r){\n\t\t\tif(dep[x]>dep[y]) p[l++]=x,x=fa[x];\n\t\t\telse p[r--]=y,y=fa[y];\n\t\t}\n\t\tfor(int j=1;j<=len;j++){\n\t\t\tint x=p[j];\n\t\t\tif(!vis[x]) vis[x]=1,a[x]=s[j],b[x]=s[len-j+1];\n\t\t\tif(a[x]!=s[j]) v[x].push_back(nq),v[q].push_back(x+n);\n\t\t\tif(b[x]!=s[j]) v[x+n].push_back(nq),v[q].push_back(x);\n\t\t\tif(a[x]!=s[len-j+1]) v[x].push_back(q),v[nq].push_back(x+n);\n\t\t\tif(b[x]!=s[len-j+1]) v[x+n].push_back(q),v[nq].push_back(x);\n\t\t}\n\t}\n\tfor(int i=1;i<=2*(n+m);i++) if(!dfn[i]) tarjan(i);\n\tfor(int i=1;i<=n;i++) if(c[i]==c[i+n]) puts(\"NO\"),exit(0);\n\tfor(int i=1;i<=m;i++) if(c[2*n+i]==c[2*n+i+m]) puts(\"NO\"),exit(0);\n\tputs(\"YES\");\n\tfor(int i=1;i<=n;i++){\n\t\tif(!vis[i]) putchar('a');\n\t\telse putchar(c[i]<c[i+n]?a[i]:b[i]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1648164517,
        "uid": 171807,
        "name": "maoyiting",
        "ccfLevel": 7,
        "title": "CF1657F Words on Tree"
    },
    {
        "content": "~~\u4e00\u773c 2-sat\u3002~~ \u7528 2-sat \u505a\u662f\u56e0\u4e3a $x\\to y,y\\to x$ \u53ea\u6709\u4e24\u79cd\u9009\u6cd5\u3002\n\n\u6211\u4eec\u5efa\u7acb bool \u53d8\u91cf\uff1a\n\n* \u6bcf\u4e00\u4e2a\u9898\u76ee\u7ed9\u7684\u8def\u5f84\u6761\u4ef6\u5efa\u4e00\u4e2a bool\uff0c\u4ee3\u8868\u8fd9\u4e2a\u5b57\u7b26\u4e32\u6b63 / \u53cd\u653e\u3002\n\n* \u6bcf\u4e2a\u6811\u4e0a\u7684\u8282\u70b9\u81f3\u591a\u4e24\u4e2a bool\uff1a\u6bcf\u4e2a\u5979\u53ef\u80fd\u53d6\u7684\u503c\u3002\n\n\u7136\u540e\u6211\u4eec\u5efa\u8fb9\uff08\u8bb0\u5f97\u5efa\u8fd9\u4e9b\u7684\u5bf9\u79f0\u8fb9\uff09\uff1a\n\n* \u8def\u5f84\u4e0a\u5b57\u7b26\u4e32\u6bcf\u4e2a\u6446\u653e\u65b9\u5f0f\u8fde\u5411\u8def\u5f84\u4e0a\u6bcf\u4e2a\u8282\u70b9\u7684\u5bf9\u5e94\u5b57\u7b26\u3002\n\n* \u63a5\u4e0b\u6765\u5bf9\u8282\u70b9\u7684\u8003\u8651\u5c4f\u853d\u6ca1\u6709\u88ab\u8def\u5f84\u8986\u76d6\u8fc7\u7684\u70b9\u3002\n\n* \u5bf9\u4e8e\u5b57\u6bcd\u53ea\u6709\u4e00\u79cd\u9009\u62e9\u7684\u70b9\uff0c\u4e0d\u53ef\u80fd\u4e0d\u9009\u8fd9\u4e2a\u5b57\u6bcd\u3002\n\n* \u5bf9\u4e8e\u5b57\u6bcd\u6709\u4e24\u79cd\u9009\u62e9\u7684\u70b9\uff0c\u4e0d\u9009\u4e00\u4e2a\u5b57\u6bcd\u8fde\u5411\u9009\u53e6\u4e00\u4e2a\uff0c\u9009\u4e00\u4e2a\u8fde\u5411\u4e0d\u9009\u53e6\u4e00\u4e2a\u3002\n\n\u7136\u540e\u8dd1 Tarjan\uff0c\u901a\u8fc7 Tarjan \u7684\u53cd\u62d3\u6251\u5e8f\u6765\u786e\u5b9a\u6bcf\u4e2a\u8282\u70b9\u7684\u6700\u7ec8\u5b57\u6bcd\u3002\n\n\u6ce8\u610f\u6700\u540e\u8003\u8651\u6ca1\u6709\u88ab\u8def\u5f84\u8986\u76d6\u8fc7\u7684\u70b9\uff0c\u968f\u4fbf\u9009\u5b57\u6bcd\u5373\u53ef\u3002\n\n\u5220\u51cf\u4e86 $5$ \u6b21\u8fd8\u662f\u5197\u957f\u7684\u5c51\u4ee3\u7801\uff1a\n\n```cpp\n//We'll be counting stars.\n#pragma GCC optimize(\"Ofast\")\n#include<bits/stdc++.h>\nusing namespace std;\n#define fir first\n#define sec second\n#define mkp make_pair\n#define pb emplace_back\n#define For(i,j,k) for(int i=(j),i##_=(k);i<=i##_;i++)\n#define ckmn(a,b) a=min(a,b)\n#define N 400004\nint n,q,s[N],dep[N],fa[N],tot=0,dfn[6*N],low[6*N],col[6*N],tim=0,st[6*N],stt=0,ct=0;\nvector<int> e[N],g[6*N];\nvector<pair<char,int> > pos[2*N];\nchar c[N];\ninline void adde(int x,int y){ g[x].pb(y); if(x!=(y^1)) g[y^1].pb(x^1); }\nvoid nnd(int x,char y,char z){\n\tif(!pos[x].empty()) return ;\n\tpos[x].pb(mkp(y,tot+=2));\n\tif(y!=z){\n\t\tpos[x].pb(mkp(z,tot+=2));\n\t\tadde(pos[x][0].sec,pos[x][1].sec^1);\n\t\tadde(pos[x][0].sec^1,pos[x][1].sec);\n\t}else if(y!='0'){\n\t\tadde(pos[x][0].sec,1);\n\t}\n}\ninline int num(int x,char y){ for(auto i:pos[x]) if(i.fir==y) return i.sec; return 0; }\nvoid dfs(int rt,int fat){\n\tdep[rt]=dep[fat]+1; fa[rt]=fat;\n\tfor(int i:e[rt]) if(i!=fat) dfs(i,rt);\n}\nvoid path(int x,int y,int len){\n\tif(dep[x]<dep[y]) swap(x,y);\n\tint z=0;\n\twhile(dep[x]>dep[y]) s[z++]=x,x=fa[x];\n\twhile(x!=y) s[--len]=y,s[z++]=x,x=fa[x],y=fa[y];\n\ts[z]=x;\n}\nvoid tar(int x){\n\tdfn[x]=low[x]=++tim;\n\tst[++stt]=x;\n\tfor(int i:g[x]){\n\t\tif(!dfn[i]) tar(i),ckmn(low[x],low[i]);\n\t\telse if(!col[i]) ckmn(low[x],dfn[i]);\n\t}\n\tif(dfn[x]==low[x]){\n\t\tcol[x]=++ct;\n\t\twhile(st[stt]!=x) col[st[stt--]]=ct;\n\t\tstt--;\n\t}\n}\nint main(){\n\tscanf(\"%d%d\",&n,&q);\n\tint x,y,len;\n\tFor(i,1,n-1){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\te[x].pb(y);\n\t\te[y].pb(x);\n\t}\n\tdfs(1,0);\n\tFor(i,1,q){\n\t\tscanf(\"%d%d%s\",&x,&y,c);\n\t\tpath(x,y,len=strlen(c));\n\t\tFor(j,0,(len-1)>>1){\n\t\t\tnnd(s[j],c[j],c[len-1-j]);\n\t\t\tnnd(s[len-1-j],c[j],c[len-1-j]);\n\t\t\tnnd(n+i,'0','0');\n\t\t\tadde(num(n+i,'0')^1,num(s[j],c[j])^1);\n\t\t\tadde(num(n+i,'0'),num(s[j],c[len-1-j])^1);\n\t\t\tadde(num(n+i,'0')^1,num(s[len-1-j],c[len-1-j])^1);\n\t\t\tadde(num(n+i,'0'),num(s[len-1-j],c[j])^1);\n\t\t}\n\t}\n\tadde(1,0);\n\tFor(i,0,tot+1) if(!dfn[i]) tar(i);\n\tfor(int i=0;i<tot+2;i+=2) if(col[i]==col[i^1]){\n\t\tputs(\"NO\");\n\t\treturn 0;\n\t}\n\tputs(\"YES\");\n\tfill(c+1,c+1+n,'a');\n\tFor(i,1,n)\n\t\tfor(auto j:pos[i])\n\t\t\tif(col[j.sec]>col[j.sec^1])\n\t\t\t\tc[i]=j.fir;\n\tc[n+1]='\\0'; \n\tprintf(\"%s\\n\",c+1);\nreturn 0;}\n```",
        "postTime": 1657117972,
        "uid": 101868,
        "name": "I_am_Accepted",
        "ccfLevel": 0,
        "title": "CF1657F Words on Tree\uff082-sat\uff09"
    },
    {
        "content": "\u8003\u8651\u4e00\u6761\u8def\u5f84\u4f1a\u63d0\u4f9b\u600e\u6837\u7684\u4fe1\u606f\u3002\n\n\u7ec6\u5206\u4e0b\u6765\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n- \u4e00\u662f\u65e0\u8bba\u6b63\u53cd\u8bfb\u90fd\u4e00\u6837\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u80af\u5b9a\u662f\u8fd9\u4e2a\u5b57\u7b26\u3002\n\n- \u4e8c\u662f\u6b63\u53cd\u8bfb\u4e0d\u4e00\u6837\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u5c31\u6709\u4e24\u79cd\u9009\u62e9\u3002\n\n\u518d\u8003\u8651\u628a\u591a\u6761\u8def\u5f84\u7684\u4fe1\u606f\u5408\u5e76\u8d77\u6765\u3002\n\n- \u4e00\u4e0e\u4e00\u5408\u5e76\uff0c\u4e0d\u540c\u5373\u65e0\u89e3\u3002\n\n- \u4e00\u4e0e\u4e8c\u5408\u5e76\uff0c\u63d0\u4f9b\u4fe1\u606f\u4e8c\u7684\u8fd9\u6761\u8def\u5f84\u7684\u65b9\u5411\u5c31\u662f\u786e\u5b9a\u7684\uff0c\u5426\u5219\u65e0\u89e3\u3002\n\n\u4e8c\u4e0e\u4e8c\u5408\u5e76\u53c8\u4f1a\u6709\u51e0\u79cd\u5c0f\u60c5\u51b5\uff1a\n\n- \u4e24\u4e24\u9009\u62e9\u6ca1\u6709\u4e00\u4e2a\u76f8\u540c\uff0c\u65e0\u89e3\n\n- \u4e24\u4e24\u9009\u62e9\u76f8\u540c\uff0c\u6ca1\u6709\u83b7\u53d6\u5173\u4e8e\u8fd9\u4e2a\u70b9\u7684\u66f4\u591a\u4fe1\u606f\n\n- \u4e24\u4e24\u9009\u62e9\u662f\u4e0d\u540c\u7684\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u53ea\u6709\u4e00\u79cd\u9009\u62e9 \n\n\u5f53\u4e2d\u9014\u786e\u5b9a\u4e00\u4e2a\u70b9\u7684\u9009\u62e9\uff0c\u90a3\u4e48\u6709\u4e9b\u8def\u5f84\u7684\u65b9\u5411\u5c31\u786e\u5b9a\u4e86\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5728**\u4e24\u4e24\u9009\u62e9\u76f8\u540c**\u65f6\u628a\u8def\u5f84\u7f16\u53f7\u653e\u5230\u8fd9\u4e2a\u70b9\u4e0a\uff0c\u786e\u5b9a\u70b9\u540e\u65b9\u4fbf\u4e8e\u786e\u5b9a\u8def\u5f84\u65b9\u5411\u3002\n\n\u786e\u5b9a\u4e00\u6761\u8def\u5f84\u7684\u65b9\u5411\uff0c\u5c31\u628a\u8fd9\u6761\u8def\u5f84\u5168\u7528\u4fe1\u606f\u4e00\u518d\u6b21\u5408\u5e76\u5373\u53ef\u3002\n\n\u6700\u540e\u4f60\u4f1a\u53d1\u73b0\u6709\u4e9b\u70b9\u7684\u9009\u62e9\u5e76\u6ca1\u6709\u786e\u5b9a\u3002\n\n\u5bb9\u6613\u53d1\u73b0**\u4e24\u4e24\u9009\u62e9\u76f8\u540c**\u8fd9\u79cd\u60c5\u51b5\u4e0b\u8def\u5f84\u4e0e\u8def\u5f84\u7684\u5173\u7cfb\u662f\u65e0\u5411\u8fb9\uff0c\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4efb\u610f\u9009\u4e00\u4e2a\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6ce8\u610f\u6700\u540e\u4efb\u9009\u4e00\u4e2a\u4e5f\u9700\u8981\u628a\u8def\u5f84\u8986\u76d6\u4e00\u904d\u5224\u65ad\u65e0\u89e3\uff0c\u6709\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e24\u4e2a\u70b9\u7684\u4fe1\u606f\u76f8\u6096\u7684\u60c5\u51b5\u3002\n\n\u5206\u6790\u4e0b\u6765\u6211\u4eec\u53ef\u4ee5\u4e0d\u9700\u8981\u4e8c\u5750\uff0c\u6a21\u62df\u5373\u53ef\u3002\n\n```cpp\n#include <bits/stdc++.h> \n#define rg register \n#define fp( i , x , y ) for( rg int i=(x); i<=(y); ++i ) \n#define fq( i , x , y ) for( rg int i=(y); i>=(x); --i ) \n#define fv( i , x ) for( int i=0; i<v[x].size(); ++i ) \n#define i60 long long \n#define IL inline \n#define ls k<<1 \n#define rs k<<1|1 \nusing namespace std ; \nconst int N = 4e5+10 ; \nvector <int> v[N] , ch[N] ;  \nint pre[N] , d[N] , n ; string s[N] ; \nstruct node { int x , y , z ; } a[N] ; \nvoid dfs( int x , int fa ) { \n  int y ; \n  pre[x] = fa ; d[x] = d[fa] + 1 ; \n  fv( i , x ) { \n    y = v[x][i] ; \n    if( y == fa ) continue ; \n    dfs( y , x ) ; \n  } \n} \nint lca( int x , int y ) { \n  while( d[x] > d[y] ) x = pre[x] ; \n  while( d[y] > d[x] ) y = pre[y] ; \n  while( x != y ) x = pre[x] , y = pre[y] ; \n  return x ; \n} \nint is[N] , vis[N] ; char ans[N] , c1[N] , c2[N] ; \nvoid EXI( ) { cout << \"NO\" << '\\n' ; exit(0) ; } \nvoid cov( int id , int ci ) ; \nvoid ADD( int x , char c ) { \n  if( is[x] == -1 ) { is[x] = 1 ; ans[x] = c ; return ; } \n  if( is[x] == 1 ) { if( ans[x] != c ) EXI() ; return ; } \n  if( c != c1[x] && c != c2[x] ) EXI() ; \n  is[x] = 1 ; ans[x] = c ; \n  int xci = (c==c1[x] ? 0 :1) , tx , ci ;  \n  for( auto i : ch[x] ) tx = abs(i) , ci = (i<0) , cov( tx , xci ^ ci ) ; \n  ch[x].clear() ; \n} // \u786e\u5b9a\u67d0\u4e2a\u70b9\u7684\u9009\u62e9  \nvoid cov( int id , int ci ) { \n  if( vis[id] != -1 ) { if( vis[id] != ci ) EXI() ; return ; }  \n  vis[id] = ci ; \n  int x = a[id].x , y = a[id].y , z = a[id].z ;  \n  if( ci ) swap( x , y ) ; \n  int p = 0 ; \n  while( x != z ) ADD( x , s[id][p++] ) , x = pre[x] ; \n  ADD( z , s[id][p++] ) ; \n  p = s[id].length() -1 ; \n  while( y != z ) ADD( y , s[id][p--] ) , y = pre[y] ; \n} // \u8def\u5f84\u8986\u76d6  \nvoid merge( int x , int id , char b1 , char b2 ) { \n  if( b1 == b2 ) { ADD( x , b1 ) ; return ; } \n  if( is[x] == -1 ) { \n    is[x] = 0 ; c1[x] = b1 ; c2[x] = b2 ; \n    ch[x].push_back(id) ; return ; \n  } \n  if( is[x] == 1 ) { \n    if( ans[x] == b1 ) { cov( id , 0 ) ; return ; } \n\telse if( ans[x] == b2 ) { cov( id , 1 ) ; return ; } \n\telse EXI() ; \n  } \n  if( c1[x] == b1 && c2[x] == b2 ) { ch[x].push_back(id) ; return ; } \n  if( c1[x] == b2 && c2[x] == b1 ) { ch[x].push_back(-id) ; return ; } \n  if( b1 == c1[x] || b1 == c2[x] ) { ADD( x , b1 ) ; cov( id , 0 ) ; return ; } \n  if( b2 == c1[x] || b2 == c2[x] ) { ADD( x , b2 ) ; cov( id , 1 ) ; return ; } EXI() ; \n} // \u5408\u5e76\u70b9\u7684\u4fe1\u606f \nvoid path( int id ) { \n  int x = a[id].x , y = a[id].y , z = a[id].z ; \n  char b1 , b2 ; int p = 1 , len = s[id].length() ;   \n  while( x != z ) { \n    b1 = s[id][p-1] ; b2 = s[id][len-p] ; p ++ ; \n    merge( x , id , b1 , b2 ) ; x = pre[x] ; \n  } \n  b1 = s[id][p-1] ; b2 = s[id][len-p] ; \n  merge( z , id , b1 , b2 ) ; p = len ; \n  while( y != z ) { \n    b1 = s[id][p-1] ; b2 = s[id][len-p] ; p -- ; \n    merge( y , id , b1 , b2 ) ; y = pre[y] ; \n  } \n} // \u5408\u5e76\u8def\u5f84\u4fe1\u606f \nsigned main( ) { \n  memset( is , -1 , sizeof(is) ) ; \n  memset( vis , -1 , sizeof(vis) ) ;   \n  ios::sync_with_stdio(false) ; \n  cin.tie(0) ; int q , x , y ;  \n  cin >> n >> q ; \n  fp( i , 1 , n-1 ) { \n    cin >> x >> y ; \n\tv[x].push_back(y) ; v[y].push_back(x) ;  \n  } \n  dfs( 1 , 0 ) ; \n  fp( i , 1 , q ) { \n    cin >> a[i].x >> a[i].y >> s[i] ; \n    a[i].z = lca( a[i].x , a[i].y ) ; \n\tpath(i) ; \n  } \n  fp( i , 1 , n ) if( is[i] == 0 ) ADD( i , c1[i] ) ; \n  fp( i , 1 , n ) if( is[i] == -1 ) ans[i] = 'a' ; \n  cout << \"YES\" << '\\n' ; \n  fp( i , 1 , n ) cout << ans[i] ; cout << '\\n' ;  \n  return 0 ; \n} \n```\n\n",
        "postTime": 1648774688,
        "uid": 100114,
        "name": "hater",
        "ccfLevel": 0,
        "title": "CF1657F Words on Tree"
    },
    {
        "content": "## CF1657F \u9898\u89e3\n~~`whk` \u4eba\u56de\u6765\u6df7\u4e00\u4e2a\u793e\u8d21\u5206~~\n\n\n\u4e00\u4e2a\u60f3\u6cd5\u662f\u66b4\u529b `2-SAT`\uff0c\u5373\u5bf9\u9650\u5236 $i$\uff0c\u8bb0\u5e03\u5c14\u53d8\u91cf $X_i$ \u4ee3\u8868\u6811\u4e0a\u662f $x\\rightarrow y$ \u7684\u5b57\u7b26\u4e32\u7b49\u4e8e $s_i$\uff0c\n\n\u8fd8\u662f $y\\rightarrow x$ \u7684\u5b57\u7b26\u4e32\u7b49\u4e8e $s_i$\uff0c\u8003\u8651\u4e00\u79cd\u66b4\u529b\u7684\u8fde\u8fb9\uff0c\u5373\u679a\u4e3e\u4e24\u4e2a\u9650\u5236\u5e76\u54c8\u5e0c\u6765\u5224\u65ad\u4e24\u8005\u662f\u5426\u80fd\u540c\u65f6\u6210\u7acb\u3002\n\n\u663e\u7136\uff0c\u8fd9\u6837\u5efa\u8fb9\u4f1a\u7206\uff0c\u4f46\u6ce8\u610f\u5230\uff0c\u5bf9\u6bcf\u4e2a\u70b9 $u$\uff0c\u82e5\u6ca1\u6709\u4efb\u4f55\u9650\u5236\u7684\u8def\u5f84\u5305\u542b $u$\uff0c\u5219 $u$ \u663e\u7136\u53ef\u4ee5\u968f\u4fbf\u9009\uff0c\n\n\u5426\u5219\u5b58\u5728\u9650\u5236\u7684\u8def\u5f84\u5305\u542b $u$\uff0c\u5219\u6b64\u65f6 $u$ \u81f3\u591a\u6709\u4e24\u79cd\u5b57\u7b26\u53ef\u9009\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u518d\u8bb0\u5e03\u5c14\u53d8\u91cf $Y_u$ \u4ee3\u8868\uff0c$u$ \u7a76\u7adf\u9009\u4e24\u79cd\u53ef\u9009\u5b57\u7b26\u4e2d\u7684\u54ea\u79cd\uff0c\n\n\u5219\u6211\u4eec\u6bcf\u4e2a\u9650\u5236 $i$ \u4e0e\u6bcf\u4e2a\u70b9 $u$\uff0c\u82e5 $X_i$ \u548c $Y_u$ \u6ee1\u8db3\u67d0\u4e9b\u5173\u7cfb\uff0c\u5f53\u4e14\u4ec5\u5f53 $i$ \u5bf9\u5e94\u7684\u8def\u5f84\u5305\u542b\u70b9 $u$\uff0c\n\n\u6b64\u65f6\u6211\u4eec\u5c31\u7528 `2-SAT` \u6765\u5904\u7406\u8fd9\u4e9b\u5173\u7cfb\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u6837\u8fde\u7684\u8fb9\u6570\u5c31\u662f $O(N)$ \u7684\u4e86\uff0c\n\n\u56e0\u4e3a\u6240\u6709\u9650\u5236\u7684\u8def\u5f84\u5305\u542b\u7684\u603b\u70b9\u6570\u662f $O(N)$ \u7684\u3002\n\n\u8fd8\u6709\u4e00\u79cd\u4e0d\u7528 `2-SAT` \u7684\u505a\u6cd5\uff0c\u5c31\u662f\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u5bf9\u4e8e\u9650\u5236 $i$ \u548c\u88ab\u9650\u5236 $i$ \u7684\u8def\u5f84\u5305\u542b\u7684\u70b9 $u$\uff0c\n\n\u6211\u4eec\u8fde\u4e00\u6761\u65e0\u5411\u8fb9 $i\\leftrightarrow u$\uff0c\u5219\u8fd9\u5f20\u56fe\u7684\u6240\u6709\u8fde\u901a\u5757\u7684\u586b\u5b57\u7b26\u65b9\u6848\u72ec\u7acb\uff0c\u800c\u5bf9\u4e8e\u6bcf\u4e2a\u8fde\u901a\u5757\uff0c\n\n\u53ea\u8981\u786e\u5b9a\u4e86\u5176\u4e2d\u4e00\u4e2a\u70b9\u7684\u65b9\u6848\uff0c\u5219\u6574\u4e2a\u8fde\u901a\u5757\u7684\u65b9\u6848\u5c31\u90fd\u786e\u5b9a\u4e86\uff0c\u6545\u7528 `dfs` \u5904\u7406\u8fde\u901a\u5757\u5373\u53ef\u3002\n\n[\u4ee3\u7801](https://codeforces.com/contest/1657/submission/150590657)\u5199\u7684\u6bd4\u8f83\u62c9\uff0c\u4ec5\u4f9b\u53c2\u8003\u3002",
        "postTime": 1653820839,
        "uid": 100091,
        "name": "GaryH",
        "ccfLevel": 6,
        "title": "CF1657F \u9898\u89e3"
    }
]