[
    {
        "content": "\u4e00\u9053\u770b\u7740\u5f88\u5413\u4eba\u7684\u9898\u76ee\uff0c\u5176\u5b9e\u672c\u8d28\u662f\u2014\u2014\u2014\u2014\u2014\u2014\n\n# \u66b4\u529b\u6253\u8868\n\n~~\u66b4\u529b\u51fa\u5947\u8ff9~~\n\n\u5206\u89e3\u4e00\u4e0b\uff0c\u663e\u7136\u6709\u51e0\u4e2a\u6b65\u9aa4\n\n## 1.\u7d20\u6570\u6253\u8868\n\n\u4e3a\u4e86\u8dd1\u5feb\u70b9\uff0c\u7528\u4e86\u6b27\u62c9\u7b5b O(n)\n\n\u6b27\u62c9\u7b5b\u7b80\u4ecb\uff1a\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u6570\uff0c\u5b83\u7684\u56e0\u6570\u5fc5\u7136\u5c0f\u4e8e\u7b49\u4e8e\u81ea\u5df1\uff0c\u6240\u4ee5\u6bcf\u7b5b\u5230\u4e00\u4e2a\u7d20\u6570\uff08\u4e4b\u524d\u7b5b\u8fc7\u4e00\u904d\uff0c\u6ca1\u5426\u5b9a\u6389\u5b83\uff09\u5c31\u628a\u5b83\u7684\u500d\u6570\u76f4\u63a5pass\u3002\n\nCode\uff1a\n\n```cpp\nfor(int i=2;i<=maxn;i++)\n\t{\n        if(!visit[i])prime[++prime[0]]=i,sum[i]=sum[i-1]+1;    \n        else sum[i]=sum[i-1];\n        for (int j=1;j<=prime[0]&&i*prime[j]<=maxn;j++)\n\t\t{\n            visit[i*prime[j]]=1;\n            if(i%prime[j]==0)break;\n        }\n    }\n```\n\n## 2.\u56de\u6587\u6570\u6253\u8868\n\n\u66b4\u529b\u5373\u53ef\uff0c\u672c\u849f\u84bb\u4e5f\u4e0d\u4f1a\u5176\u4ed6\u7684\u65b9\u6cd5\n\nCode:\n\n```cpp\n    int cnt;\n    for (int i=1;i<=maxn;i++)\n    {\n        cnt=0;\n        int x=i;\n        while(x)\n        {\n            d[cnt++]=x%10;\n            x/=10;\n        }\n        bool flag=1;\n        for(int j=0;j<(cnt+1)/2;j++)\n        \tif(d[j]!=d[cnt-1-j])\n        \t{\n        \t\tflag=0;\n        \t\tbreak;\n\t\t\t}\n        sumsum[i]=sumsum[i-1];\n        if(flag)sumsum[i]++;\n    }\n```\n\n\u6240\u4ee5\uff0c\u8fd9\u9898\u5c31\u53ef\u4ee5\u5b8c\u7f8e\u89e3\u51b3\u4e86:\n\n~~\u6bd2\u7624\u53d8\u91cf\u540d\u8bf7\u52ff\u8c05\u89e3~~\n\nCode:\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 2000000\nusing namespace std;\nint p,q,f;\nint prime[maxn+5],visit[maxn+5],sum[maxn+5],sumsum[maxn+5],d[30];\nvoid suuuuuuuuperforce()\n{\n\tfor(int i=2;i<=maxn;i++)\n\t{\n        if(!visit[i])prime[++prime[0]]=i,sum[i]=sum[i-1]+1;    \n        else sum[i]=sum[i-1];\n        for (int j=1;j<=prime[0]&&i*prime[j]<=maxn;j++)\n\t\t{\n            visit[i*prime[j]]=1;\n            if(i%prime[j]==0)break;\n        }\n    }\n}\nvoid hoooooooollyforce()\n{\n\tint cnt;\n    for (int i=1;i<=maxn;i++)\n    {\n        cnt=0;\n        int x=i;\n        while(x)\n        {\n            d[cnt++]=x%10;\n            x/=10;\n        }\n        bool flag=1;\n        for(int j=0;j<(cnt+1)/2;j++)\n        \tif(d[j]!=d[cnt-1-j])\n        \t{\n        \t\tflag=0;\n        \t\tbreak;\n\t\t\t}\n        sumsum[i]=sumsum[i-1];\n        if(flag)sumsum[i]++;\n    }\n}\nint main()\n{\n\tsuuuuuuuuperforce();\n\thoooooooollyforce();\n\tscanf(\"%d%d\",&p,&q);\n\tint gggcd=__gcd(p,q);\n\tp/=gggcd,q/=gggcd;\n\tfor(int i=maxn;i>=1;i--)\n\t{\n\t\tif(q*sum[i]<=p*sumsum[i])\n\t\t{\n\t\t\tf=i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(f==0)cout<<\"Palindromic tree is better than splay tree\\n\";\n\telse cout<<f<<endl;\n}\n```\n\n## \u5c0ftip\uff1a\n\n~~\u76f8\u4fe1\u9664\u4e86\u6211\u8fd9\u79cd\u849f\u84bb\u6ca1\u4eba\u4f1a\u9519\u7684~~\n\n\u4e00\u5f00\u59cb\u6211\u6240\u6709\u6570\u7ec4\u5f00\u4e86maxn\uff0c\u5904\u7406maxn\u4e2a\uff0c\u7ed3\u679c\u8d8a\u754c\u4e86\uff0c\u6240\u4ee5\u624d\u90fd+5",
        "postTime": 1570195822,
        "uid": 95687,
        "name": "\u5996\u5b7d\u5bd2",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF568A \u3010Primes or Palindromes?\u3011"
    },
    {
        "content": "## \u7b2c\u4e00\u6b65\uff1a\u8bfb\u61c2\u9898\u5e72\u3002\n\n\u672c\u9898\u662f\u4e00\u9053 $CF$ \u7684\u7ffb\u8bd1\u9898\u76ee\uff0c\u9898\u76ee\u63cf\u8ff0\u6709\u4e9b\u542b\u7cca\uff0c\u8bfb\u4e00\u904d\u4e0d\u4e00\u5b9a\u80fd\u770b\u61c2\u3002\n\n\u4e0b\u9762\uff0c\u5c31\u7531\u672c\u849f\u84bb\u8be6\u7ec6\u5206\u6790\u4e00\u4e0b\u672c\u9898\u9898\u76ee\u8981\u6c42\uff1a\n\n\u9996\u5148\uff0c\u8bfb\u5165\u4e24\u4e2a\u6574\u6570 $p$ \u548c $q$\u3002\n\n\u4ece $1$ \u5f00\u59cb\uff0c\u4f9d\u6b21\u9012\u589e $1$\uff0c\u4f9d\u6b21\u679a\u4e3e\u6bcf\u4e2a\u6574\u6570 $n$\uff0c\u8fdb\u884c\u5224\n\u65ad\u3002  \n\n\u627e\u5230\u6700\u5927\u7684\u6b63\u6574\u6570\u6570\u4f7f\u5f97\uff1a\u4e0d\u5927\u4e8e $n$ \u7684\u8d28\u6570\u7684\u4e2a\u6570 \n$\\leq \\frac{p}{q} \\times $\u4e0d\u5927\u4e8en\u7684\u56de\u6587\u6570\u7684\u4e2a\u6570\u3002\n\n\u8f93\u51fa\u7b54\u6848\u3002\n\n\n------------\n\n\n## \u7b2c\u4e8c\u6b65\uff1a\u7406\u6e05\u601d\u8def\u3002\n\n\u4e3a\u4e86\u505a\u51fa\u5982\u4e0a\u6b65\u9aa4\uff0c\u6211\u4eec\u8981\u601d\u8003\u5982\u4f55\u8fdb\u884c\u6a21\u62df\u8ba1\u7b97\u3002\n\n**\u7b2c\u4e00\uff1a\u4f30\u8ba1\u679a\u4e3e\u7684\u5927\u5c0f\u3002** \u89c2\u5bdf\u9898\u5e72\u5f97\u77e5 $\\frac{1}{24} \n\\leq \\frac{p}{q} \\leq 42$ \u4e14 $p,q \\leq 10^4$\u3002\u6240\u4ee5\uff0c\u679a\u4e3e\u7684\n\u6700\u5927\u503c\u8bbe\u4e3a $2 \\times 10^7$ \u5c31\u8db3\u591f\u4e86\u3002\n\n**\u7b2c\u4e8c\uff1a\u8d28\u6570\u5224\u65ad\u7684\u65b9\u5f0f\u3002** \u5982\u679c\u6bcf\u679a\u4e3e\u4e00\u4e2a\u6570\uff0c\u5c31\u4ece $1$ \n\u5224\u65ad\u5230\u8fd9\u4e2a\u6570\u7684\u65b9\u6cd5\uff0c\u90a3\u4e48\u4e00\u5171\u8981\u5224\u65ad $2 \\times 10^{14}$ \u6b21\u4ee5\n\u4e0a\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u660e\u663e\u8d85\u8fc7\u9650\u5236\u3002  \n\u4e8e\u662f\uff0c\u6211\u4eec\u7528\u6570\u7ec4\u8bb0\u5f55\u4e00\u4e2a\u6570\u662f\u5426\u4e3a\u8d28\u6570\uff0c\u679a\u4e3e\u6bcf\u6b21\u65f6\u7d2f\u52a0\u8d28\u6570\u4e2a\n\u6570\u3002\n```cpp\nbool pri[20000005];  //\u4f7f\u7528bool\u578b\u8d28\u6570\u6570\u7ec4\uff0c\u503c\u4e3a1\u8868\u793a\u662f\u8d28\u6570\uff0c0\u8868\u793a\u4e0d\u662f\n```\n**\u7b2c\u4e09\uff1a\u8bb0\u5f55\u7b54\u6848\u3002** \u7528\u4e00\u4e2a\u53d8\u91cf $ans$ \u8bb0\u5f55\u6bcf\u6b21\u7b54\u6848\uff0c\u5e76\n\u5728\u6bcf\u6b21\u679a\u4e3e\u5224\u65ad\u540e\u91cd\u65b0\u8bb0\u5f55\uff0c\u5f97\u5230\u6700\u7ec8\u7b54\u6848\u3002\n\n**\u7b2c\u56db\uff1a\u8d28\u6570\u548c\u56de\u6587\u6570\u7684\u4e2a\u6570\u3002** \u5728\u9898\u76ee\u7684\u8303\u56f4\u5185\uff0c\u8d28\u6570\u7684\u4e2a\u6570\u5927\u4e8e\u56de\u6587\u6570\u7684\u4e2a\u6570\uff0c\u6240\u4ee5\u7b54\u6848\u4e00\u5b9a\u5b58\u5728\u3002\n\n------------\n\n## \u7b2c\u4e09\u6b65\uff1a\u4ee3\u7801\u5b9e\u73b0\u3002\n\n\u5230\u4e86\u8fd9\u4e00\u6b65\uff0c\u5c31\u8981\u5bf9\u5982\u4e0a\u4e00\u4e00\u8fdb\u884c\u4ee3\u7801\u5b9e\u73b0\u3002\n\n**\u7b2c\u4e00\u70b9\uff1a\u5b58\u50a8 $p$ \u4e0e $q$\u3002** \u56e0\u4e3a\u9898\u4e2d\u6709 $\\frac{p}{q}$ \u7684\n\u8ba1\u7b97\uff0c\u6240\u4ee5\u4f7f\u7528 $double$ \u578b\u5b58\u50a8\u3002\u53e6\u5916\uff0c\u8d28\u6570\u548c\u56de\u6587\u6570\u4e2a\u6570\u4e5f\u8981\n\u7528 $double$ \u5b58\u50a8\u3002\n```cpp\ndouble p,q,cpal,cplay;  //cpal\u50a8\u5b58\u56de\u6587\u6570\u4e2a\u6570\uff0ccplay\u50a8\u5b58\u8d28\n\u6570\u4e2a\u6570\u3002\n```\n\n**\u7b2c\u4e8c\u70b9\uff1a\u5904\u7406\u8d28\u6570\u3002** \u9996\u5148\uff0c\u6682\u65f6\u628a\u5927\u4e8e $2$ \u7684\u6570\u5168\u6807\u8bb0\u4e3a\n\u8d28\u6570\uff0c\u7136\u540e\uff0c\u628a\u4ece $2$ \u5f00\u59cb\u6bcf\u4e2a\u6570\u4e58\u4e4b\u524d\u7b5b\u51fa\u7684\u8d28\u6570\uff0c\u5176\u7ed3\u679c\u6807\n\u8bb0\u4e3a\u5408\u6570\u3002\u4e8e\u662f\uff0c\u5f97\u5230\u5982\u4e0b\u4ee3\u7801\uff1a\n```cpp\nvoid prime(){\n    for(int i=2;i<=2000000;i++){\n        if(pri[i]==0)continue;\n        for(int j=2;i*j<=2000000;j++)pri[i*j]=0;\n    }\n}\nint main(){\n    for(int i=2;i<=2000000;i++)pri[i]=1;\n}\n```\n\n**\u7b2c\u4e09\u70b9\uff1a\u5224\u65ad\u56de\u6587\u6570\u3002** \u4ee3\u7801\u673a\u7406\uff1a\u628a\u8fd9\u4e2a\u6570\u5012\u8fc7\u6765\uff0c\u5224\u65ad\u662f\n\u5426\u4e0e\u539f\u6570\u76f8\u7b49\u3002\n```cpp\nbool hw(int x){\n    int all=0;\n    int t=x;\n    while(x!=0){\n        all=all*10+x%10;\n        x/=10;\n    }\n    if(all==t)return 1;\n    return 0;\n}\n```\n**\u7b2c\u56db\u70b9\uff1a\u679a\u4e3e\u3002** \u4ece $1$ \u679a\u4e3e\u5230 $2 \\times 10^7$\u3002\n```cpp\nfor(int i=1;i<=2000000;i++){\n        cplay+=pri[i];\n        cpal+=hw(i);\n        if(cplay<=cpal*p/q)ans=i;\n    }\n```\n\n------------\n\n## \u5b8c\u6574\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ndouble p,q,cpal,cplay;\nlong long ans;\nbool pri[2000005];\nvoid prime(){\n    for(int i=2;i<=2000000;i++){\n        if(pri[i]==0)continue;\n        for(int j=2;i*j<=2000000;j++)pri[i*j]=0;\n    }\n}\nbool hw(int x){\n    int all=0;\n    int t=x;\n    while(x!=0){\n        all=all*10+x%10;\n        x/=10;\n    }\n    if(all==t)return 1;\n    return 0;\n}\nint main(){\n    for(int i=2;i<=2000000;i++)pri[i]=1;\n    cin>>p>>q;\n    prime();\n    for(int i=1;i<=2000000;i++){\n        cplay+=pri[i];\n        cpal+=hw(i);\n        if(cplay<=cpal*p/q)ans=i;\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n```\n",
        "postTime": 1604223974,
        "uid": 345828,
        "name": "\u5f20\u6ce0\u5929\u9752",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF568A \u3010Primes or Palindromes?\u3011"
    },
    {
        "content": "\u9898\u76ee\u4f20\u9001\u95e8\uff1a[CF568A](https://www.luogu.com.cn/problem/CF568A)\n\n# \u9898\u610f\u5206\u6790\uff1a\n\n\u5b9a\u4e49 $\\pi(n)$ \u4e3a $n$ \u4ee5\u5185\u7684\u7d20\u6570\u4e2a\u6570\uff0c$\\text{rub}(n)$ \u4e3a $n$ \u4ee5\u5185\u7684\u56de\u6587\u6570\u4e2a\u6570\uff0c\u5e76\u8f93\u5165\u4e24\u4e2a\u6570 $p$ \u548c $q$\uff0c\u8ba9\u4f60\u6c42\u6700\u5927\u7684 $n$ \u4f7f\u5f97 $\\pi(n)\\le \\frac{p}{q}\\times \\text{rub}(n)$\u3002\n\n# \u601d\u8def\uff1a\n\n\u6211\u4eec\u4e3a\u5f0f\u5b50\u79fb\u4e2a\u9879\uff1a\n\n $$\\pi(n)\\le \\frac{p}{q}\\times \\text{rub}(n) \\Rightarrow q\\times\\pi(n)\\le p\\times \\text{rub}(n)$$\n\n\u6211\u4eec\u53ea\u9700\u8981\u6c42\u51fa\u4e00\u5230N\u4e2d\u6240\u6709\u7684 $\\pi(i)$ \u548c $\\text{rub}(i)$ \u5373\u53ef\u3002\n\n\u53c8\u56e0\u4e3a\u9898\u76ee\u4e2d\u7ed9\u51fa $p,q\\le 10^4,\\frac{1}{42}\\le\\frac{p}{q}\\le42$  ,\u518d\u7ecf\u8fc7\u6253\u8868\u6d4b\u8bd5\u53ef\u77e5\uff0c\u6700\u5927\u8303\u56f4N\u5728 $2e6$ \u5de6\u53f3\u3002\n\n# \u7b97\u6cd5\u5206\u6790\n\n $\\pi(i)$ \u6211\u4eec\u662f\u53ef\u4ee5\u7528\u7ebf\u6027\u7b5b $O(N)$ \u6c42\u51fa\u7684\uff0c\u800c $\\text{rub}(i)$ \u6211\u4eec\u4e4b\u95f4\u66b4\u529b\u679a\u4e3e\u5373\u53ef\uff0c\u590d\u6742\u5ea6 $O( \\log N)$ \u3002\u6240\u4ee5\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O( \\log N)$ \u3002\n\n\u800c $N=2\\times10^6$ \uff0c\u4e14\u8fd9\u4e2a $\\log$ \u662f\u4ee5 $10$ \u4e3a\u5e95\u6570\u7684\uff0c\u6240\u4ee5\u4e0d\u4f1a\u8d85\u65f6\u3002\n\n# AC code:\n\n\u6211\u4eec\u7528 $sum_i$ \u8bb0\u5f55 $\\le i$ \u7684\u8d28\u6570\u6570\u91cf\uff0c$tot_i$ \u8bb0\u5f55 $\\le i$ \u7684\u56de\u6587\u6570\u6570\u91cf\u3002\n\n\u7136\u540e\u9884\u5904\u7406\u51fa $1 \\sim N$ \u4e2d\u6240\u6709\u7684\u56de\u6587\u6570\u6570\u91cf\u548c\u8d28\u6570\u6570\u91cf\uff0c\u7136\u540e\u627e\u51fa\u6700\u5927\u7b54\u6848\u5373\u53ef\u3002\n\n\u82e5\u6ca1\u6709\uff0c\u5219\u8f93\u51fa `Palindromic tree is better than splay tree` \u3002\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=2e6+5;\nint p,q,cnt;\nint prime[N],b[N];\nint sum[N],tot[N];\nvoid primes()\n{\n\tfor(int i=2;i<=N;i++)\n\t{\n\t\tif(!b[i])prime[++cnt]=i,sum[i]=sum[i-1]+1;\t\n\t\telse sum[i]=sum[i-1];\n\t    for(int j=1;j<=cnt&&i*prime[j]<=N;j++)\n\t\t{\n\t\t\tb[i*prime[j]]=1;\n\t\t\tif(i%prime[j]==0)break;\n\t\t}\n\t}\n\treturn;\n}\nvoid hws()\n{\n    for(int i=1;i<=N;i++)\n\t{\n\t    int x=i,x1=0;\n\t\twhile(x)\n\t\t{\n\t\t\tx1=x1*10+x%10;\n\t\t\tx/=10;\n\t\t}\n\t    tot[i]=tot[i-1];\n\t    if(x1==i)tot[i]++;\n\t}\n}\nint main()\n{\n\tprimes();\n\thws();\n\tcin>>p>>q;\n\tfor(int i=N;i>=1;i--)\n\t{\n\t\tif(p*tot[i]>=q*sum[i])\n\t\t{\n\t\t\tcout<<i;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout<<\"Palindromic tree is better than splay tree\";\n\treturn 0;\n}\n```",
        "postTime": 1655037804,
        "uid": 541916,
        "name": "yaoyanfeng",
        "ccfLevel": 5,
        "title": "CF568A"
    },
    {
        "content": "### \u6b27\u62c9\u7b5bO(n)\u5224\u65ad\u7d20\u6570 + \u56de\u6587\u6570\u6253\u8868\n\n\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u6700\u5927\u7684\u65f6\u5019\u5c31\u662f42/1\u7684\u65f6\u5019\uff0c\u56e0\u4e3a\u7d20\u6570\u7684\u51fa\u73b0\u9891\u7387\u4f1a\u6bd4\u56de\u6587\u6811\u51fa\u73b0\u7684\u9891\u7387\u8981\u9ad8\n\n**\u8d28\u6570\u5bc6\u5ea6\u5206\u5e03\uff1a\u8d28\u6570\u5206\u5e03\u7684\u6bd4\u8f83\u5bc6\uff0c\u5728p\u5468\u56f4100\u5185\u5e94\u8be5\u80fd\u9047\u5230\u8d28\u6570\uff0c\u6240\u4ee5q\u53ef\u4ee5\u4ece\u5927\u5230\u5c0f\u679a\u4e3e**\n\n\u8fd9\u6837\u4e00\u6765\u663e\u7136\u662f\u5de6\u8fb9\u589e\u957f\u901f\u5ea6\u6bd4\u53f3\u8fb9\u5feb\uff0c\u5f53A\u6700\u5927\u7684\u65f6\u5019n\u53d6\u5230\u6700\u5927\u503c\uff0c\u542c\u8fc7\u6253\u8868\u6d4b\u8bd5\u4f60\u4f1a\u53d1\u73b0\u5f53\u6253\u52302e6\u5de6\u53f3\u7684\u65f6\u5019\u5c31\u591f\u4e86\n\n**\u600e\u4e48\u6837\u7b97\u591f\u4e86\uff1f\u5c31\u662f\u5230\u8fb9\u754c\u4f4d\u7f6e\u5df2\u7ecf\u4e0d\u4f1a\u518d\u51fa\u73b0\u65b0\u7684\u6ee1\u8db3\u6761\u4ef6\u7684\u503c\u4e86**\n\n## CODE:\n```c\n#include<bits/stdc++.h>\nusing namespace std;\nint a[10],b[2000001];\nconst int maxn=2000000;\nint n;\nint vis[maxn];\nint prime[maxn];//max\u6700\u5927\u53ef\u4ee5\u662f10^8\nvoid isprime(){\n    vis[1]=1;\n    int cnt=0;//cnt\u7528\u6765\u8ba1\u6570\uff0cprime\u6570\u7ec4\u4fdd\u5b58\u7d20\u6570\n    for(int i=2;i<2000000;i++)\n\t\t{\n            if(!vis[i])prime[cnt++]=i;//\u5982\u679c\u672a\u88ab\u6807\u8bb0\u8fc7\uff0c\u5219\u8868\u793a\u4e3a\u7d20\u6570\n            for(int j=0;j<cnt && i*prime[j]<2000000;j++)\n            {\n                vis[i*prime[j]]=1;//\u975e\u7d20\u6570\u4e3a1\uff0c\u7d20\u6570\u4e3a0\n                if(i%prime[j]==0)break;//\u5173\u952e\u6b65\u9aa4\n\t\t\t}\n        }//vis\u91cc\u9762\u5b58\u7684\u624d\u662f\u7d20\u6570\uff0c\u975e\u7d20\u6570\u4e3a1\uff0c\u7d20\u6570\u4e3a0\n               }\nint main()\n{\n    int p,q,i,j,n;\n    cin>>p>>q;\n    n=2000000;\n    isprime();\n    for(int i=1;i<=2000000;i++)\n    {\n        vis[i]=1-vis[i];\n        vis[i]+=vis[i-1];\n        int c=i;\n        int flag=0;\n        while(c!=0)\n        {\n            a[flag]=c%10;\n            c/=10;\n            flag++;\n        }\n        for(j=0;j<=flag;j++)\n            if(a[j]!=a[flag-1-j])\n                break;\n        if(j==flag+1)\n            b[i]=b[i-1]+1;\n        else\n            b[i]=b[i-1];\n    }\n    int flag;\n    for(i=1;i<=2000000;i++)\n        if(vis[i]*q<=p*b[i])\n           flag=i;\n    cout<<flag<<endl;\n    return 0;\n}\n\n```\n",
        "postTime": 1570174991,
        "uid": 133364,
        "name": "xiayucc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF568A \u3010Primes or Palindromes?\u3011"
    },
    {
        "content": "**\u76f4\u63a5\u6253\u7d20\u6570\u8868+\u56de\u6587\u5224\u65ad\u5c31\u884c\u4e86**\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int M = 1179858+3;\ndouble p, q;\nbool prime[M];\nint ans, pri, pal;\nvoid getprime( )\n{   // \u7c7b\u4f3c\u7b5b\u9009\u6cd5\u6c42\u7d20\u6570 \u6253\u8868\n    prime[1] = false;\n    for( int i=2; i<M; i++ )\n    {\n        if( !prime[i] )  continue;\n        prime[i] = true;\n        for( int j=2; j*i<M; j++ )\n            prime[i*j] = false;\n    }\n}\n\nbool palindromic( int n )\n{   // \u5224\u65ad\u56de\u6587\u6570\n    int fn = 0;\n    int aun = n;\n    while( aun )\n    {\n        fn *= 10;\n        fn += aun%10;\n        aun /= 10;\n    }\n    return fn == n ;\n}\nint main()\n{\n    memset( prime, true, sizeof(prime) );\n    getprime( );\n    while( ~scanf(\"%lf%lf\", &p, &q ) )\n    {\n        double A = p/q;\n        pri = pal = 0;\n        for( int i=1; i<M; i++ ) \n        {\n            pri += prime[i];\n            pal += palindromic(i);\n            if( pal*p/q >= pri )\n                ans = i;\n        }\n        printf(\"%d\\n\", ans );\n    }\n    return 0;\n}\n```",
        "postTime": 1541690412,
        "uid": 69036,
        "name": "\u8c26\u8c26\u541b\u5b50",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF568A \u3010Primes or Palindromes?\u3011"
    }
]