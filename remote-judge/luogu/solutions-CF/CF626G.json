[
    {
        "content": "> [CF626G Raffles](https://codeforces.com/contest/626/problem/G)\n\n## \u9898\u610f\n\n- \u6709 $n$ \u4e2a\u5956\u6c60\uff0c\u7b2c $i$ \u4e2a\u5956\u6c60\u7684\u5956\u91d1\u662f $p_i$\uff0c\u5df2\u7ecf\u6709 $l_i$ \u5f20\u5f69\u7968\u62bc\u5728\u4e0a\u9762\u3002\n- \u73b0\u5728\u4f60\u6709 $t$ \u5f20\u5f69\u7968\uff0c\u4f60\u9700\u8981\u5c06\u4f60\u7684\u5f69\u7968\u5206\u914d\u5230\u8fd9\u4e9b\u5956\u6c60\u4e2d\uff0c\u5e76\u4e14\u4fdd\u8bc1\u4f60\u5728\u6bcf\u4e2a\u5956\u6c60\u4e2d\u62bc\u7684\u5f69\u7968\u6570**\u4e0d\u80fd\u8d85\u8fc7\u8be5\u5956\u6c60\u539f\u6709\u7684\u5f69\u7968\u6570**\u3002\n- \u82e5\u4f60\u5728\u7b2c $i$ \u4e2a\u5956\u6c60\u4e2d\u62bc\u4e86 $t_i$ \u5f20\u5f69\u7968\uff0c\u5219\u4f60\u4e2d\u5956\u7684\u6982\u7387\u4e3a $\\frac{t_i}{t_i + l_i}$\uff0c\u82e5\u4f60\u4e2d\u5956\uff0c\u4f60\u53ef\u4ee5\u83b7\u5f97\u8fd9\u4e2a\u5956\u6c60\u7684\u5168\u90e8\u5956\u91d1 $p_i$\u3002\n- \u4e00\u5171\u6709 $q$ \u6b21\u4e8b\u4ef6\uff0c\u6bcf\u6b21\u4e8b\u4ef6\u4f1a\u4f7f\u67d0\u4e2a $l_i$ \u52a0 $1$ \u6216\u51cf $1$\u3002\n- \u4f60\u9700\u8981\u5728\u6bcf\u4e2a\u4e8b\u4ef6\u540e\u6c42\u51fa\u5728\u6700\u4f73\u65b9\u6848\u4e0b\u4f60\u83b7\u5f97\u7684\u5956\u91d1\u603b\u6570\u7684\u6700\u5927\u671f\u671b\u503c\u3002\n- $n,t,q \\le 2 \\times 10^5$\uff0c$p_i,l_i \\le 10^3$\uff0c\u7b54\u6848\u7cbe\u5ea6\u8bef\u5dee $\\le 10^{-6}$\u3002\n\n## \u9898\u89e3\n\n\u9996\u5148\u8003\u8651\u6ca1\u6709\u4fee\u6539\u65f6\u5982\u4f55\u8ba1\u7b97\u3002\n\n\u5047\u8bbe\u6b64\u65f6\u5bf9\u4e8e\u5956\u6c60 $i$\uff0c\u4f60\u5df2\u7ecf\u62bc\u4e86 $c_i$ \u5f20\u5f69\u7968\u4e0a\u53bb\u4e86\uff0c\u82e5 $c_i + 1 \\le l_i$\uff0c\u5219\u4f60\u6b64\u65f6\u8fd8\u53ef\u4ee5\u518d\u62bc\u4e00\u5f20\u5f69\u7968\u4e0a\u53bb\uff0c\u5b83\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a\n\n$$\np_i(\\frac{c_i+1}{c_i+1+l_i} - \\frac{c_i}{c_i+l_i}) = \\frac{p_il_i}{(c_i+1+l_i)(c_i+l_i)}\n$$\n\n\u6ce8\u610f\u5230\u8fd9\u4e2a\u8d21\u732e\u968f\u7740 $c_i$ \u7684\u589e\u5927\u4f1a\u4e0d\u65ad\u53d8\u5c0f\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u8d2a\u5fc3\u505a\u6cd5\uff1a\n\n\u5f00\u4e00\u4e2a\u5806\u5b58\u50a8\u5bf9\u4e8e\u6bcf\u4e2a\u5956\u6c60\u518d\u62bc\u4e00\u5f20\u5f69\u7968\u7684\u8d21\u732e\uff0c\u6bcf\u6b21\u53d6\u51fa\u6700\u5927\u7684\u8d21\u732e\u8ba1\u5165\u7b54\u6848\uff0c\u7136\u540e\u52a0\u5165\u5176\u5bf9\u5e94\u5956\u6c60\u7684\u65b0\u7684\u8d21\u732e\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O((n + t) \\log n)$\u3002\n\n\u518d\u8003\u8651\u6709\u4fee\u6539\u7684\u60c5\u51b5\u4e0b\u5982\u4f55\u7ef4\u62a4\u3002\n\n\u5f53\u6211\u4eec\u4fee\u6539 $l_i$ \u65f6\uff0c\u7b2c $i$ \u4e2a\u5956\u6c60\u7684\u8d21\u732e\u4f1a\u6539\u53d8\uff0c\u56e0\u6b64\u5f53\u524d\u65b9\u6848\u53ef\u80fd\u5c31\u4e0d\u662f\u6700\u4f18\u7684\u4e86\u3002\n\n\u4e00\u4e2a\u7b80\u5355\u7684\u60f3\u6cd5\u662f\uff0c\u5982\u679c\u5f53\u524d\u7684\u65b9\u6848\u4e0d\u662f\u6700\u4f18\u7684\u65b9\u6848\uff0c\u90a3\u4e48\u5c31\u4e0d\u65ad\u627e\u56de\u5f53\u524d\u65b9\u6848\u4e2d\u8d21\u732e\u6700\u5c0f\u7684\u5f69\u7968\uff0c\u6362\u6210\u8d21\u732e\u66f4\u5927\u7684\u5f69\u7968\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u4e2a\u770b\u4f3c\u66b4\u529b\u7684\u505a\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u5374\u662f\u5bf9\u7684\uff0c\u56e0\u4e3a\u6bcf\u6b21\u4fee\u6539\u5b9e\u8d28\u4e0a\u53ea\u4f1a\u6700\u591a\u5f15\u8d77\u4e00\u5f20\u5f69\u7968\u7684\u53d8\u5316\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u4e0a\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u5806\u6362\u6210 multiset\uff0c\u540c\u65f6\u7ef4\u62a4\u5f53\u524d\u65b9\u6848\u5373\u53ef\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O((n + t + q) \\log n)$\u3002\n\n## \u4ee3\u7801\n\n```cpp\nconst int N = 2e5 + 7;\nconst ld inf = 1e18L, eps = 1e-10L;\nint n, t, q, p[N], l[N], c[N];\nld ans;\n\ninline ld f(int x, int c) {\n\tif (!~c) return inf;\n\tif (c >= l[x]) return 0L;\n\treturn 1.0L * p[x] * l[x] / (c + 1 + l[x]) / (c + l[x]);\n}\n\ninline ld g(int x) {\n\treturn 1.0L * p[x] * min(c[x], l[x]) / (min(c[x], l[x]) + l[x]);\n}\n\nstruct P {\n\tld o;\n\tint x, c;\n\tinline P(int x = 0, int c = -1) : x(x), c(c) { o = f(x, c); }\n\tinline bool operator < (const P w) const {\n\t\treturn abs(o - w.o) > eps ? o < w.o : x < w.x;\n\t}\n};\nmultiset<P> s, e;\n\ninline void add() {\n\tauto it = --s.end();\n\tans += it -> o;\n\tint x = it -> x;\n\te.erase(P(x, c[x] - 1)), e.insert(*it);\n\ts.erase(it), s.insert(P(x, ++c[x]));\n}\n\ninline void rmv() {\n\tauto it = e.begin();\n\tans -= it -> o;\n\tint x = it -> x;\n\ts.erase(P(x, c[x])), s.insert(*it);\n\te.erase(it), e.insert(P(x, (--c[x]) - 1));\n}\n\nint main() {\n\trd(n), rd(t), rd(q);\n\tfor (int i = 1; i <= n; i++) rd(p[i]);\n\tfor (int i = 1; i <= n; i++) rd(l[i]), s.insert(P(i, 0)), e.insert(P(i));\n\twhile (t--) add();\n\tfor (int i = 1, o, x; i <= q; i++) {\n\t\trd(o), rd(x);\n\t\ts.erase(P(x, c[x])), e.erase(P(x, c[x] - 1)), ans -= g(x);\n\t\tl[x] += o == 1 ? 1 : -1;\n\t\ts.insert(P(x, c[x])), e.insert(P(x, c[x] - 1)), ans += g(x);\n\t\twhile ((--s.end()) -> o > (e.begin() -> o) + eps) rmv(), add();\n\t\tprintf(\"%.10Lf\\n\", ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1581322095,
        "uid": 100544,
        "name": "xht",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF626G \u3010Raffles\u3011"
    },
    {
        "content": "\u5047\u8bbe\u73b0\u5728\u653e\u4e86 $x$ \u5f20\u5f69\u7968\uff0c\u7136\u540e\u5982\u679c\u8981\u591a\u653e\u4e00\u5f20\uff0c\u90a3\u4e48\u6240\u4ea7\u751f\u7684\u671f\u671b\u53d8\u5316\u91cf\u662f$ \\Delta E(x)=\\dfrac{(x+1)}{x+l_i+1} \\times p_i-\\dfrac{x}{x+l_i} \\times p_i=p_i\\dfrac{l_i}{(x+l_i)(x+l_i+1)}$\r\n\r\n\u663e\u7136 $\\Delta E(x)$ \u4e3a\u5173\u4e8e $x$ \u7684\u51cf\u51fd\u6570\u3002\u90a3\u4e48\u5982\u679c\u4e0d\u505a\u4fee\u6539\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u5806\u5bf9 $\\Delta E(x)$ \u8fdb\u884c\u7ef4\u62a4\uff0c\u65b9\u6cd5\u663e\u7136\u662f\u7ef4\u62a4\u6bcf\u6b21\u65b0\u52a0\u8fdb\u4e00\u5f20\u5f69\u7968\u540e\u7684\u53d8\u5316\u91cf\uff0c\u9009\u62e9\u589e\u52a0\u7684\u6700\u591a\u7684\u8ba1\u5165\u8d21\u732e\uff0c\u653e\u5165\u5806\u4e2d\u5373\u53ef\u3002\r\n\r\n\u5982\u679c\u5e26\u4fee\u6539\uff0c\u5219\u53ef\u4ee5\u8003\u8651\u6bcf\u6b21\u5220\u53bb\u73b0\u5728 $\\forall x,\\Delta E(x)$ \u6700\u5c0f\u7684\uff0c\u7136\u540e\u52a0\u5165\u53ef\u4ee5\u9009\u62e9\u7684 $\\forall x,\\Delta E(x)$ \u6700\u5927\u7684\uff0c\u56e0\u4e3a\u6bcf\u6b21\u53ea\u5bf9\u4e00\u4e2a $l_i$ \u52a0 $1$ \u6216\u8005\u51cf $1$\uff0c\u800c\u8fd9\u4e5f\u53ea\u4f1a\u9020\u6210\u6700\u591a\u4e00\u4e2a\u5f69\u7968\u4f4d\u7f6e\u7684\u53d8\u5316\u3002\r\n\r\n\u53ef\u4ee5\u7528 `multiset` \u7ef4\u62a4\u5f80\u5956\u6c60\u5185\u653e\u5165\u6216\u8005\u79fb\u51fa\u4e00\u5f20\u5f69\u7968\u6240\u4ea7\u751f\u7684\u53d8\u5316\u91cf\u5373\u53ef\u3002\r\n\r\n\u5173\u4e8e\u6b63\u786e\u6027\u8bc1\u660e\u5176\u5b9e\u4e0d\u662f\u5f88\u590d\u6742\u3002\u8fd9\u91cc\u4ee5\u4ee4 $l_i+1$ \u4e3a\u4f8b\u3002\u5728\u4fee\u6539\u524d\u6709\uff1a\r\n\r\n$\\Delta E(x)=p_i\\dfrac{l_i}{(x+l_i)(x+l_i+1)}$\r\n\r\n$\\Delta E(x+1)=p_i\\dfrac{l_i}{(x+1+l_i)(x+l_i+2)}$\r\n\r\n\u5728\u4fee\u6539\u540e\u6709\uff1a\r\n\r\n$\\Delta E(x)'=p_i\\dfrac{l_i+1}{(x+l_i+1)(x+l_i+2)}$\r\n\r\n$\\Delta E(x+1)'=p_i\\dfrac{l_i}{(x+l_i+2)(x+l_i+3)}$\r\n\r\n\u6839\u636e\u4e4b\u524d\u7684\u6027\u8d28\uff0c\u5219\u6709 $\\Delta E(x)>\\Delta E(x+1),\\Delta E(x)'>\\Delta E(x+1)',\\Delta E(x)'>\\Delta E(x+1)$\r\n\r\n\u82e5\u8bb0\u4fee\u6539\u524d\u7684\u6700\u5c0f\u8d21\u732e\u4e3a $\\Delta E_{\\min}$\uff0c\u4fee\u6539\u540e\u7684\u6700\u5c0f\u8d21\u732e\u4e3a $\\Delta E_{\\min}'$\uff0c\u5219\u6839\u636e\u4e0a\u8ff0\u7ed3\u8bba\uff0c\u6709 $\\Delta E_{\\min} > \\Delta E_{\\min}'$\r\n\r\n\u5047\u8bbe $x,x+1$ \u5747\u4ece\u6700\u4f18\u7b56\u7565\u53d8\u6210\u975e\u9009\u9879\uff0c\u90a3\u4e48\u5219\u6709 $\\Delta E(x+1)>\\Delta E_{\\min},\\Delta E(x)'<\\Delta E_{\\min}'$\uff0c\u90a3\u4e48\u4e5f\u5c31\u53ef\u4ee5\u6839\u636e\u4e0d\u7b49\u5f0f\u5173\u7cfb\u63a8\u51fa $\\Delta E(x)'<\\Delta E'_{\\min}<\\Delta E_{\\min}<\\Delta E(x+1)$\r\n\r\n\u4e0e\u65e2\u6709\u4e8b\u5b9e $\\Delta E(x)'>\\Delta E(x+1)$ \u4e0d\u7b26\uff0c\u6545\u77db\u76fe\uff0c\u6545 $x,x+1$ \u4e0d\u53ef\u80fd\u540c\u65f6\u4ece\u6700\u4f18\u7b56\u7565\u53d8\u6210\u975e\u9009\u9879\u3002\u6545\u6bcf\u6b21\u6700\u591a\u9020\u6210\u4e00\u4e2a\u5f69\u7968\u4f4d\u7f6e\u7684\u53d8\u5316\u3002\u82e5 $l_i-1$ \u4e5f\u540c\u7406\u53ef\u8bc1\u3002\r\n\r\n```cpp\r\n#include <iostream>\r\n#include <cstdio>\r\n#include <cstring>\r\n#include <algorithm>\r\n#include <cmath>\r\n#include <cctype>\r\n#include <queue>\r\n#include <vector>\r\n#include <set>\r\n#include <iomanip>\r\n\r\nusing namespace std;\r\n\r\ninline int read()\r\n{\r\n\tint x=0,f=1;char ch=getchar();\r\n\twhile (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\r\n\twhile (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\r\n\treturn x*f;\r\n}\r\n\r\nconst long double eps=1e-12;\r\n\r\nint n,t,q,p[200050],l[200050],c[200050],tk[200050],rk[200050];\r\n\r\nlong double ans=0;\r\n\r\ninline long double calc(int i,int x)\r\n{\r\n\treturn 1.0*p[i]*l[i]/(1.0*(l[i]+c[i])*(l[i]+c[i]+x));\r\n}\r\n\r\ninline int comp(long double x)\r\n{\r\n\tif (x<-eps)\r\n\t\treturn -1;\r\n\telse\r\n\t\treturn x>eps;\r\n}\r\n\r\nstruct node\r\n{\r\n\tlong double ev;\r\n\tint x;\r\n\tbool operator < (const node & rhs) const\r\n\t{\r\n\t\tif (comp(ev-rhs.ev))\r\n\t\t\treturn ev<rhs.ev;\r\n\t\telse\r\n\t\t\treturn x<rhs.x;\r\n\t}\r\n};\r\n\r\nmultiset <node> a,b;\r\n\r\ninline void Add(int u)\r\n{\r\n\tif (c[u]<l[u])\r\n\t\ta.erase({calc(u,1),u});\r\n\tif (c[u])\r\n\t\tb.erase({calc(u,-1),u});\r\n\tans+=calc(u,1);\r\n\tc[u]++;\r\n\tt--;\r\n\tif (c[u]<l[u])\r\n\t\ta.insert({calc(u,1),u});\r\n\tif (c[u])\r\n\t\tb.insert({calc(u,-1),u});\r\n}\r\n\r\ninline void Del(int u)\r\n{\r\n\tif (c[u]<l[u])\r\n\t\ta.erase({calc(u,1),u});\r\n\tif (c[u])\r\n\t\tb.erase({calc(u,-1),u});\r\n\tans-=calc(u,-1);\r\n\tc[u]--;\r\n\tt++;\r\n\tif (c[u]<l[u])\r\n\t\ta.insert({calc(u,1),u});\r\n\tif (c[u])\r\n\t\tb.insert({calc(u,-1),u});\r\n}\r\n\r\nint main()\r\n{\r\n\tn=read(),t=read(),q=read();\r\n\tfor (int i=1;i<=n;i++)\r\n\t\tp[i]=read();\r\n\tfor (int i=1;i<=n;i++)\r\n\t{\r\n\t\tl[i]=read();\r\n\t\tif (c[i]<l[i])\r\n\t\t\ta.insert({calc(i,1),i});\r\n\t\tif (c[i])\r\n\t\t\tb.insert({calc(i,-1),i});\r\n\t}\r\n\twhile (t && a.size())\r\n\t\tAdd(a.rbegin()->x);\r\n\tfor (int i=1;i<=q;i++)\r\n\t{\r\n\t\ttk[i]=read();\r\n\t\trk[i]=read();\r\n\t\t\r\n\t\tif (c[rk[i]]==l[rk[i]] && tk[i]==2)\r\n\t\t\tDel(rk[i]);\t\r\n\t\tif (c[rk[i]]<l[rk[i]])\r\n\t\t\ta.erase({calc(rk[i],1),rk[i]});\r\n\t\tif (c[rk[i]])\r\n\t\t\tb.erase({calc(rk[i],-1),rk[i]});\r\n\t\tans-=1.0*p[rk[i]]*c[rk[i]]/(l[rk[i]]+c[rk[i]]);\r\n\t\tl[rk[i]]+=(tk[i]==1)?1:-1;\r\n\t\tif (c[rk[i]]<l[rk[i]])\r\n\t\t\ta.insert({calc(rk[i],1),rk[i]});\r\n\t\tif (c[rk[i]])\r\n\t\t\tb.insert({calc(rk[i],-1),rk[i]});\r\n\t\tans+=1.0*p[rk[i]]*c[rk[i]]/(l[rk[i]]+c[rk[i]]);\r\n\t\tif (t && a.size())\r\n\t\t\tAdd(a.rbegin()->x);\r\n\t\tif (a.size() && b.size() && comp(a.rbegin()->ev-b.begin()->ev)>0)\r\n\t\t{\r\n\t\t\tint X=b.begin()->x,Y=a.rbegin()->x;\r\n\t\t\tDel(X);\r\n\t\t\tAdd(Y);\r\n\t\t}\r\n\t\tcout << fixed << setprecision(12) << ans << endl;\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\n```\r\n\r\n",
        "postTime": 1586177450,
        "uid": 8457,
        "name": "chen_zhe",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF626G \u3010Raffles\u3011"
    },
    {
        "content": "\u9996\u5148\u8003\u8651\u5bf9\u4e8e\u4e00\u79cd\u5f69\u7968$i$\uff0c\u62bc\u4e00\u5f20\u6240\u589e\u52a0\u7684\u671f\u671b\u662f\u591a\u5c11\u3002\u5047\u8bbe\u5df2\u7ecf\u62bc\u4e86$x$\u5f20\u4e86\uff0c\u73b0\u5728\u8981\u62bc$x+1$\u5f20\uff0c\u90a3\u4e48\u589e\u52a0\u7684\u671f\u671b\u5956\u91d1\u5c31\u4f1a\u662f\uff1a\n$$\n\\frac{(x+1)\\times p_i}{x+l_i+1}-\\frac{x\\times p_i}{x+l_i}=\\frac{l_i\\times p_i}{(x+l_i)(x+l_i+1)}\n$$\n\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u662f\u5173\u4e8e$x$\u7684\u51cf\u51fd\u6570\uff0c\u90a3\u4e48\u5c31\u6709\u4e86\u4e00\u4e2a\u4e0d\u5e26\u4fee\u6539\u7684\u505a\u6cd5\uff1a\n\n\u7ef4\u62a4\u4e00\u4e2a\u4f18\u5148\u961f\u5217\uff0c\u6bcf\u6b21\u53d6\u51fa\u4e00\u79cd\u589e\u52a0\u7684\u671f\u671b\u6700\u5927\u7684\u5f69\u7968\uff0c\u7136\u540e\u52a0\u8fdb\u7b54\u6848\u4e4b\u540e\u518d\u653e\u56de\u53bb\uff0c\u540c\u65f6\u66f4\u65b0\u8fd9\u79cd\u5f69\u7968\u589e\u52a0\u7684\u671f\u671b\u3002\n\n\u7531\u4e8e\u662f\u51cf\u51fd\u6570\uff0c\u6240\u4ee5\u6b63\u786e\u6027\u6709\u4fdd\u8bc1\u3002\n\n\u4f46\u662f\u5e26\u4e0a\u4fee\u6539\u600e\u4e48\u529e\u5462\uff1f\n\n\u8003\u8651\u4fee\u6539\u5bf9\u6c42\u7b54\u6848\u8fc7\u7a0b\u7684\u5f71\u54cd\u3002\u5047\u8bbe\u73b0\u5728\u5c06\u6ca1\u6709\u4fee\u6539\u7684\u64cd\u4f5c\u5168\u90e8\u8fdb\u884c\u5b8c\u4e86\uff0c**\u9996\u5148\u5c06\u5f53\u524d\u4fee\u6539\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\u5148\u7b97\u4e0a\uff0c\u90a3\u4e48\u8fd9\u4e2a\u53ef\u80fd\u4e0d\u662f\u6700\u4f18\u7684\u89e3\uff0c\u8981\u8003\u8651\u8c03\u6574**\u3002\u90a3\u4e48\u8c03\u6574\u5b9e\u9645\u4e0a\u5c31\u662f\u4ece\u540e\u5230\u524d\u6765\u64a4\u9500\uff0c\u5c31\u662f\u5220\u53bb\u4e00\u4e2a\u52a0\u8fdb\u7b54\u6848\u7684\u6700\u5c0f\u7684\u671f\u671b\uff0c\u7136\u540e\u52a0\u4e0a\u672a\u52a0\u8fdb\u7b54\u6848\u7684\u6700\u5927\u7684\u671f\u671b\uff0c\u5982\u679c\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u7ed3\u675f\u4e4b\u540e\u6700\u7ec8\u80fd\u4f7f\u7b54\u6848\u589e\u52a0\u5c31\u64cd\u4f5c\uff0c\u5426\u5219\u4e0d\u64cd\u4f5c\uff0c\u90a3\u4e48\u8fd9\u79cd\u64cd\u4f5c\u8fdb\u884c\u5230\u4e0d\u80fd\u518d\u8fdb\u884c\u4e86\u4e4b\u540e\u6700\u7ec8\u5f97\u5230\u7684\u7b54\u6848\u80af\u5b9a\u662f\u6700\u5927\u7684\u3002\n\n\u90a3\u4e48\u8fd9\u4e2a\u5c31\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u4e86\uff0c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6700\u5c0f\u7684\u5220\u53bb\u7684\u671f\u671b\u548c\u6700\u5927\u7684\u52a0\u5165\u7684\u671f\u671b\uff0c\u6bcf\u6b21\u53ea\u9700\u8981\u4fee\u6539\u8fd9\u4e24\u4e2a\u70b9\u5373\u53ef\u3002\uff08\u4f46\u662f\u9996\u5148\u9700\u8981\u5c06\u5f53\u524d\u4fee\u6539\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\u7b97\u4e0a\u7684\uff09\u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u7ef4\u62a4\u4e86\uff0c\u7531\u4e8e\u6bcf\u6b21\u4fee\u6539\u56e0\u4e3a\u53ea\u6709\u52a0\u4e00\u548c\u51cf\u4e00\uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a\u6700\u591a\u53ea\u4f1a\u5f15\u8d77\u4e00\u5f20\u5f69\u7968\u7684\u53d8\u5316\u3002\n\n\u4e8e\u662f\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u4f1a\u662f$O((n+t+q)\\log n)$\u3002\n\ncode\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define maxn 200010\nusing namespace std;\nint read()\n{\n    int x=0,f=1;\n    char ch=getchar();\n    while(ch-'0'<0||ch-'0'>9){if(ch=='-') f=-1;ch=getchar();}\n    while(ch-'0'>=0&&ch-'0'<=9){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\nconst double inf=1e9;\nint n,T,Q;\nint p[maxn],q[maxn],cnt[maxn];\ndouble calc(int x,int id)\n{\n    return (double)(p[id]*q[id])/(double)(x+q[id])/(double)(x+q[id]-1);\n}\ndouble calcx(int x,int id)\n{\n    return (double)(x*p[id])/(x+q[id]);\n}\ndouble ans;\nstruct Segment_Tree{\n    double mx[maxn*4],mn[maxn*4];\n    void update(int k)\n    {\n        mx[k]=max(mx[k*2],mx[k*2+1]);\n        mn[k]=min(mn[k*2],mn[k*2+1]);\n    }\n    void build(int k,int l,int r)\n    {\n        if(l==r)\n        {\n            cnt[l]=0;\n            mx[k]=calc(1,l);\n            mn[k]=inf;\n            return;\n        }\n        int mid=((l+r)>>1);\n        build(k*2,l,mid);\n        build(k*2+1,mid+1,r);\n        update(k);\n    }\n    void add(int k,int l,int r)\n    {\n        if(l==r)\n        {\n            if(mx[k]!=-inf)   ans+=mx[k];\n            cnt[l]++;\n            if(cnt[l]>q[l])   mn[k]=-inf;\n            else              mn[k]=calc(cnt[l],l);\n            if(cnt[l]>=q[l])  mx[k]=-inf;\n            else              mx[k]=calc(cnt[l]+1,l);\n            return;\n        }\n        int mid=(l+r)/2;\n        if(mx[k*2]>mx[k*2+1])  add(k*2,l,mid);\n        else                   add(k*2+1,mid+1,r);\n        update(k);\n    }\n    void del(int k,int l,int r)\n    {\n        if(l==r)\n        {\n            if(mn[k]!=-inf)   ans-=mn[k];\n            cnt[l]--;\n            if(cnt[l]>q[l])   mn[k]=-inf;\n            else if(!cnt[l])  mn[k]=inf;\n            else              mn[k]=calc(cnt[l],l);\n            if(cnt[l]>=q[l])  mx[k]=-inf;\n            else              mx[k]=calc(cnt[l]+1,l);\n            return;\n        }\n        int mid=(l+r)/2;\n        if(mn[k*2]<mn[k*2+1])  del(k*2,l,mid);\n        else                   del(k*2+1,mid+1,r);\n        update(k);\n    }\n    void upgrade(int k,int l,int r,int x,int y)\n    {\n        if(l==r)\n        {\n            ans-=calcx(min(cnt[l],q[l]),l);\n            q[l]+=y;\n            ans+=calcx(min(cnt[l],q[l]),l);\n            if(cnt[l]==0)         mn[k]=inf;\n            else if(cnt[l]>q[l])  mn[k]=-inf;\n            else                  mn[k]=calc(cnt[l],l);\n            if(cnt[l]>=q[l])      mx[k]=-inf;\n            else                  mx[k]=calc(cnt[l]+1,l);\n            return;\n        }\n        int mid=(l+r)/2;\n        if(mid>=x)  upgrade(k*2,l,mid,x,y);\n        else        upgrade(k*2+1,mid+1,r,x,y);\n        update(k);\n    }\n}S;\nint main()\n{\n    n=read();T=read();Q=read();\n    for(int i=1;i<=n;i++)  p[i]=read();\n    for(int i=1;i<=n;i++)  q[i]=read();\n    S.build(1,1,n);\n    for(int i=1;i<=T;i++)  S.add(1,1,n);\n    while(Q--)\n    {\n        int op=read(),x=read();\n        if(op==1)  S.upgrade(1,1,n,x,1);\n        if(op==2)  S.upgrade(1,1,n,x,-1);\n        while(S.mn[1]<S.mx[1])\n        {\n            S.add(1,1,n);\n            S.del(1,1,n);\n        }\n        printf(\"%.9lf\\n\",ans);\n    }\n    return 0;\n}   \n```",
        "postTime": 1581768549,
        "uid": 46396,
        "name": "justin_cao",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF626G \u3010Raffles\u3011"
    },
    {
        "content": "\u5b89\u5229\u4e2a\u4eba blog\uff1ahttps://www.cnblogs.com/ET2006/\n\n[\u9898\u9762\u4f20\u9001\u95e8](https://codeforces.ml/contest/626/problem/G)\n\n\u8003\u8651\u5bf9\u4e8e\u56fa\u5b9a\u7684\u5f69\u7968\u6c60 $i$\uff0c\u6211\u4eec\u5047\u8bbe\u73b0\u5728\u62bc\u4e86 $x$ \u5f20\u5f69\u7968\u3002\u5229\u7528\u5dee\u5206\u7684\u601d\u60f3\uff0c\u4ece $x$ \u5f20\u5f69\u7968\u53d8\u4e3a $x+1$ \u5f20\u65f6\uff0c\u671f\u671b\u7684\u53d8\u5316\u91cf $\\Delta E=\\dfrac{p_i(x+1)}{l_i+x+1}-\\dfrac{p_ix}{l_i+x}=\\dfrac{p_il_i}{(l_i+x+1)(l_i+x)}$\u3002\u5bb9\u6613\u53d1\u73b0\u8be5\u51fd\u6570\u4e3a\u5173\u4e8e $x$ \u7684\u51cf\u51fd\u6570\uff0c\u6240\u4ee5\u8003\u8651\u76f4\u63a5\u8d2a\u5fc3\u7684\u505a\u6cd5\uff1a\u5efa\u4e00\u4e2a\u5806 $st$\uff0c\u7ef4\u62a4\u6240\u6709\u5f69\u7968\u6c60\u7531\u5f53\u524d\u5f69\u7968\u6570\u91cf\u53d8\u4e3a\u5f53\u524d\u5f69\u7968\u6570\u91cf $+1$\uff0c\u671f\u671b\u7684\u53d8\u5316\u91cf\uff0c\u8d2a\u5fc3 $t$ \u8f6e\u6bcf\u6b21\u8d2a\u5fc3\u5730\u53d6\u51fa\u5806\u4e2d\u6700\u5927\u7684\u5143\u7d20\u5c31\u884c\u4e86\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u6709\u4fee\u6539\u7684\u60c5\u51b5\uff1a\u9996\u5148\u6211\u4eec\u5047\u8bbe\u5bf9\u4e8e\u4fee\u6539\u7684\u5143\u7d20 $x$\uff0c$x$ \u5f69\u7968\u6c60\u62bc\u7684\u5f69\u7968\u4e2a\u6570\u4e0d\u53d8\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u91cd\u65b0\u8ba1\u7b97\u4e00\u904d $x$ \u5f69\u7968\u6c60\u62bc\u4e2d\u7684\u5f69\u7968\u4ef7\u503c\u7684\u671f\u671b\u503c\u3002\u663e\u7136\u8fd9\u6837\u4e0d\u4e00\u5b9a\u662f\u6700\u4f18\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u8003\u8651\u518d\u5efa\u4e00\u4e2a\u5806 $st_2$ \u7ef4\u62a4\u5df2\u7ecf\u62bc\u5165\u5f69\u7968\u6c60\u7684\u5f69\u7968\u7684\u4ef7\u503c\uff0c\u6bcf\u6b21\u8d2a\u5fc3\u5730\u53d6\u51fa $st_2$ \u4e2d\u6700\u5c0f\u7684\u5143\u7d20\u5e76\u52a0\u5165 $st$ \u4e2d\u6700\u5927\u7684\u5143\u7d20\uff08\u7c7b\u4f3c\u4e8e\u53cd\u6094\u8d2a\u5fc3\uff09\uff0c\u76f4\u5230\u4e0d\u80fd\u518d\u64cd\u4f5c\u4e3a\u6b62\u5373\u53ef\u3002\n\n\u7531\u4e8e\u6bcf\u6b21\u64cd\u4f5c\u53ea\u6709\u52a0\u4e00\u548c\u51cf\u4e00\uff0c\u6240\u4ee5\u6700\u591a\u53ea\u4f1a\u5f15\u8d77\u4e00\u5f20\u5f69\u7968\u7684\u53d8\u5316\uff0c\u6545\u590d\u6742\u5ea6\u662f\u6b63\u786e\u7684\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define fi first\n#define se second\n#define fz(i,a,b) for(int i=a;i<=b;i++)\n#define fd(i,a,b) for(int i=a;i>=b;i--)\n#define ffe(it,v) for(__typeof(v.begin()) it=v.begin();it!=v.end();it++)\n#define fill0(a) memset(a,0,sizeof(a))\n#define fill1(a) memset(a,-1,sizeof(a))\n#define fillbig(a) memset(a,63,sizeof(a))\n#define pb push_back\n#define ppb pop_back\n#define mp make_pair\ntemplate<typename T1,typename T2> void chkmin(T1 &x,T2 y){if(x>y) x=y;}\ntemplate<typename T1,typename T2> void chkmax(T1 &x,T2 y){if(x<y) x=y;}\ntypedef pair<int,int> pii;\ntypedef long long ll;\ntemplate<typename T> void read(T &x){\n\tx=0;char c=getchar();T neg=1;\n\twhile(!isdigit(c)){if(c=='-') neg=-1;c=getchar();}\n\twhile(isdigit(c)) x=x*10+c-'0',c=getchar();\n\tx*=neg;\n}\nconst int MAXN=2e5;\nconst double EPS=1e-10;\nconst double INF=1e18;\nconst int MAGIC=15;\nint n,t,qu,p[MAXN+5],l[MAXN+5],c[MAXN+5];\ndouble dif(int x,int c){\n\tif(!c) return INF;if(c>l[x]) return 0;\n\treturn 1.0*p[x]*l[x]/(c+l[x])/(c-1+l[x]);\n}\nstruct node{\n\tdouble val;int x,y;\n\tnode(int _x=0,int _y=0){val=dif(_x,_y);x=_x;y=_y;}\n\tbool operator <(const node &rhs) const{\n\t\treturn (fabs(val-rhs.val)>EPS)?(val<rhs.val):(x<rhs.x);\n\t}\n};\ndouble ans=0;\nset<node> nw,cur;\nvoid ins(){\n\tnode t=*nw.rbegin();int x=t.x;//assert(fabs(t.val-dif(x,c[x]+1))<EPS);\n\tnw.erase(nw.find(node(x,c[x]+1)));cur.erase(cur.find(node(x,c[x])));\n\tans+=t.val;c[x]++;\n\tnw.insert(node(x,c[x]+1));cur.insert(node(x,c[x]));\n}\nvoid del(){\n\tnode t=*cur.begin();int x=t.x;//assert(fabs(t.val-dif(x,c[x]))<EPS);\n\tnw.erase(nw.find(node(x,c[x]+1)));cur.erase(cur.find(node(x,c[x])));\n\tans-=t.val;c[x]--;\n\tnw.insert(node(x,c[x]+1));cur.insert(node(x,c[x]));\n}\nint main(){\n\tscanf(\"%d%d%d\",&n,&t,&qu);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&p[i]);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&l[i]);\n\tfor(int i=1;i<=n;i++) nw.insert(node(i,c[i]+1)),cur.insert(node(i,c[i]));\n\tfor(int i=1;i<=t;i++) ins();\n\twhile(qu--){\n\t\tint opt,x;scanf(\"%d%d\",&opt,&x);\n//\t\tassert(cur.find(node(x,c[x]))!=cur.end());\n\t\tnw.erase(nw.find(node(x,c[x]+1)));cur.erase(cur.find(node(x,c[x])));\n\t\tans-=1.0*p[x]*min(c[x],l[x])/(l[x]+min(c[x],l[x]));\n\t\tl[x]+=((opt==1)?(1):(-1));\n\t\tnw.insert(node(x,c[x]+1));cur.insert(node(x,c[x]));\n\t\tans+=1.0*p[x]*min(c[x],l[x])/(l[x]+min(c[x],l[x]));\n\t\tfor(int i=1;i<=MAGIC;i++) del(),ins();\n\t\tprintf(\"%.15lf\\n\",ans);\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1612880007,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF626G \u3010Raffles\u3011"
    },
    {
        "content": "### CF 626G\n#### Solution\n\u4e0d\u96be\u53d1\u73b0\u5728\u540c\u4e00\u4e2a\u5956\u6c60\u5185\u62bc\u5f69\u7968\u7684\u8d21\u732e\u662f\u9012\u51cf\u7684\uff0c\u5982\u679c\u6ca1\u6709\u4fee\u6539\uff0c\u90a3\u4e48\u6709\u4e00\u4e2a\u975e\u5e38\u663e\u7136\u7684\u505a\u6cd5\uff1a\u62ff\u4e00\u4e2a\u5806\u7ef4\u62a4\u6bcf\u4e00\u4e2a\u5956\u6c60\u4e2d\u65b0\u589e\u4e00\u5f20\u5f69\u7968\u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u6bcf\u6b21\u53d6\u51fa\u671f\u671b\u6536\u76ca\u6700\u5927\u7684\u5f69\u7968\u5373\u53ef\u3002\n\n\u8003\u8651\u4fee\u6539\u64cd\u4f5c\uff0c\u5982\u679c\u5c06$l_i$\u51cf\u5c0f$1$\uff0c\u90a3\u4e48\u62bc\u5728\u7b2c$i$\u4e2a\u5956\u6c60\u7684\u5f69\u7968\u6570\u76ee\u53ef\u80fd\u4e0d\u53d8\uff0c\u53ef\u80fd\u51cf\u5c0f$1$\uff08\u56e0\u4e3a\u539f\u6765\u653e\u4e86$l_i$\u5f20\uff09\uff0c\u6216\u8005\u662f\u589e\u52a0\u82e5\u5e72\u5f20\uff0c\u4e0d\u96be\u53d1\u73b0\u6700\u591a\u53ea\u4f1a\u589e\u52a0$1$\u5f20\u3002\n\n\u8bc1\u660e\uff1a\u5047\u8bbe\u539f\u6765\u62bc\u5728\u7b2c$i$\u4e2a\u5956\u6c60\u4e0a\u7684\u5f69\u7968\u6709$c$\u5f20\uff0c\u73b0\u5728\u82e5\u62bc\u4e86$c+1$\u5f20\u4ee5\u4e0a\uff0c\u90a3\u4e48\u7b2c$c+2$\u5f20\u4e00\u5b9a\u66ff\u6362\u4e86\u62bc\u5728\u5176\u4ed6\u5956\u6c60\u7684\u5f69\u7968\uff0c\u8bbe\u88ab\u66ff\u6362\u6389\u7684\u5f69\u7968\u7684\u8d21\u732e\u4e3a$w$\uff0c\u7531\u4e8e\u539f\u6765\u653e\u7b2c$c+1$\u5f20\u662f\u4e0d\u4f18\u7684\uff0c\u6240\u4ee5$p_i(\\dfrac{c+1}{c+1+l_i}-\\dfrac{c}{c+l_i})\\leq w$\uff0c\u56e0\u6b64\u6709$p_i(\\dfrac{c+2}{c+2+l_i}-\\dfrac{c+1}{c+1+l_i})\\leq p_i(\\dfrac{c+1}{c+1+l_i}-\\dfrac{c}{c+l_i})\\leq w$\uff0c\u6240\u4ee5\u66ff\u6362\u540e\u7b54\u6848\u4f1a\u53d8\u5dee\uff0c\u6545\u6700\u591a\u53ea\u4f1a\u589e\u52a0\u4e00\u5f20\u5f69\u7968\u3002\n\n\u5bf9\u4e8e\u5c06$l_i$\u52a0$1$\u7684\u60c5\u51b5\u540c\u7406\uff0c\u4e8e\u662f\u53ef\u4ee5\u5f97\u51fa\u6bcf\u6b21\u4fee\u6539\u540e\u6700\u591a\u53d8\u5316$1$\u5f20\u5f69\u7968\uff0c\u62ff\u7ebf\u6bb5\u6811\u7ef4\u62a4\u62bc\u54ea\u4e00\u5f20\u83b7\u5f97\u7684\u6700\u5927\u8d21\u732e\u548c\u4e4b\u524d\u62bc\u7684\u5f69\u7968\u4e2d\u8d21\u732e\u6700\u5c0f\u7684\u4e00\u4e2a\uff0c\u6bcf\u6b21\u4fee\u6539\u53ea\u9700\u8981\u5728\u7ebf\u6bb5\u6811\u4e0a\u66f4\u65b0\u8fd9\u4e24\u4e2a\u70b9\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$\\mathcal O(n\\log n)$\n#### Code\n```cpp\nint n,t,Q;\nint a[MAXN],num[MAXN];\ndouble p[MAXN];\n\nstruct SegmentTree{\n    struct Tree{\n        int l,r;\n        int minid,maxid;\n        double ans,min,max;\n    } tree[MAXN << 2];\n\n    #define lson k << 1\n    #define rson k << 1 | 1\n\n    void update(int k){\n        tree[k].ans = tree[lson].ans + tree[rson].ans;\n        if(tree[lson].max > tree[rson].max) tree[k].max = tree[lson].max, tree[k].maxid = tree[lson].maxid;\n        else tree[k].max = tree[rson].max, tree[k].maxid = tree[rson].maxid;\n        if(tree[lson].min < tree[rson].min) tree[k].min = tree[lson].min, tree[k].minid = tree[lson].minid;\n        else tree[k].min = tree[rson].min, tree[k].minid = tree[rson].minid;\n    }\n\n    void calc(int k,int i){\n        tree[k].ans = min(p[i] * num[i] / (1.0 * (num[i] + a[i])),p[i] / 2.0);\n        if(num[i] >= a[i]) tree[k].max = 0;\n        else tree[k].max = p[i] * (num[i] + 1) / (1.0 * (num[i] + a[i] + 1)) - p[i] * num[i] / (1.0 * (num[i] + a[i]));\n        if(num[i] == 0) tree[k].min = INF;\n        else if(num[i] > a[i]) tree[k].min = 0;\n        else tree[k].min = p[i] * num[i] / (1.0 * (num[i] + a[i])) - p[i] * (num[i] - 1) / (1.0 * (num[i] + a[i] - 1));\n        tree[k].maxid = tree[k].minid = i;\n    }\n\n    void build(int k,int l,int r){\n        tree[k].l = l; tree[k].r = r;\n        if(l == r) {calc(k,l); return;}\n        int mid = (l + r) >> 1;\n        build(lson,l,mid); build(rson,mid + 1,r);\n        update(k);\n    }\n\n    void modify(int k,int x){\n        if(tree[k].l == tree[k].r) {calc(k,x); return;}\n        int mid = (tree[k].l + tree[k].r) >> 1;\n        if(x <= mid) modify(lson,x);\n        else modify(rson,x);\n        update(k);\n    }\n\n    double queryans() {return tree[1].ans;}\n    pair<double,int> querymax() {return make_pair(tree[1].max,tree[1].maxid);}\n    pair<double,int> querymin() {return make_pair(tree[1].min,tree[1].minid);}\n} T;\n\nint main(){\n    scanf(\"%d%d%d\",&n,&t,&Q);\n    for(int i = 1;i <= n;i++) scanf(\"%lf\",&p[i]);\n    for(int i = 1;i <= n;i++) scanf(\"%d\",&a[i]);\n    T.build(1,1,n);\n    for(int i = 1;i <= t;i++){\n        int x = T.querymax().second;\n        num[x] += 1; T.modify(1,x);\n    }\n    while(Q--){\n        int op,x; scanf(\"%d%d\",&op,&x);\n        a[x] += (op == 1 ? 1 : -1);\n        T.modify(1,x);\n        while(T.querymax().first > T.querymin().first){\n            int x = T.querymax().second, y = T.querymin().second;\n            num[x] += 1; num[y] -= 1;\n            T.modify(1,x); T.modify(1,y);\n        }\n        printf(\"%.8f\\n\",T.queryans());\n    }\n    return 0;\n}\n```",
        "postTime": 1611819147,
        "uid": 108894,
        "name": "\u5173\u6000\u4ed6\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF626G \u3010Raffles\u3011"
    }
]