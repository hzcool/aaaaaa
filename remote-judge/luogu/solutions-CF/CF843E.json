[
    {
        "content": "### CF843E Maximum Flow\n\n\u8003\u8651\u5230\u6700\u5c0f\u5272\u4e00\u5b9a\u662f\u6ee1\u6d41\uff0c\u6b64\u65f6\u6700\u5c0f\u5272\u8fb9\u6570\u5c31\u662f\u7b54\u6848\u3002\n\n\u5bf9\u4e8e $g_i=0$\uff0c\u8fde\u63a5 $(u_i,v_i,inf)$\uff0c\u6ca1\u6709\u6d41\u91cf\u5219\u4e00\u5b9a\u53ef\u4ee5\u8d70\u5230\uff0c\u8fd8\u9700\u8981\u9632\u6b62\u9694\u65ad\uff1b\u5bf9\u4e8e $g_i=1$\uff0c\u8fde\u63a5 $(u_i,v_i,1),(v_i,u_i,inf)$\uff0c\u8be5\u8fb9\u6709\u6d41\u91cf\u5219\u53cd\u5411\u8fb9\u4e00\u5b9a\u6709\u6b8b\u4f59\u5bb9\u91cf\uff0c\u4e14\u5982\u679c\u6ca1\u6ee1\u6d41\uff0c\u90a3\u4e48 $u_i$ \u53ef\u4ee5\u5230\u8fbe $v_i$\uff0c\u5426\u5219\u5c31\u9009\u62e9\u5b83\u5047\u5982\u6700\u5c0f\u5272\u5e76\u8ba4\u4e3a\u5b83\u6ee1\u6d41\u3002\n\n\u5bf9\u4e8e\u65b9\u6848\uff0c\u76f4\u63a5\u4e0a\u4e0b\u754c\u7f51\u7edc\u6d41\u8dd1\u6709\u6d41\u8fb9\u7684\u65b9\u6848\uff0c\u4e5f\u5c31\u662f\u4e0b\u754c\u4e3a $1$\uff0c\u4e0a\u754c\u4e3a $inf$\uff0c\u6b64\u65f6\u6bcf\u6761\u8fb9\u7684\u6d41\u91cf\u5c31\u662f\u5b83\u6b64\u65f6\u7684\u6d41\u91cf\uff08\u6ce8\u610f\u52a0\u4e0a\u4e0b\u754c\uff09\uff0c\u5982\u679c\u5b83\u662f\u6211\u4eec\u9009\u5b9a\u7684\u6700\u5c0f\u5272\uff0c\u5219\u5bb9\u91cf\u4e3a\u5b83\u6d41\u91cf\uff0c\u5426\u5219\u4e3a $inf$\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,s,t,tot=1,flow,maxflow,es[1001],a[1001],b[1001],g[1001],vis[301],dep[301],head[301],now[301],nex[30001],edge[30001],ver[30001];\nqueue <int> q;\nvoid add(int u,int v,int w){\n    ver[++tot]=v,edge[tot]=w,nex[tot]=head[u],head[u]=tot;\n    ver[++tot]=u,edge[tot]=0,nex[tot]=head[v],head[v]=tot;\n}\nbool bfs(){\n    memset(dep,0,sizeof(dep));\n    while(q.size()) q.pop();\n    q.push(s);\n    dep[s]=1;\n    while(q.size()){\n        int x=q.front();\n        q.pop();\n        for(int i=head[x];i;i=nex[i]){\n            if(edge[i]&&!dep[ver[i]]){\n                q.push(ver[i]);\n                dep[ver[i]]=dep[x]+1;\n                if(ver[i]==t) return true;\n            }\n        }\n    }\n    return false;\n}\nint dinic(int x,int flow){\n    if(x==t) return flow;\n    int rest=flow,k;\n    for(int i=now[x];i&&rest;i=nex[i]){\n        now[x]=i;\n        if(edge[i]&&dep[ver[i]]==dep[x]+1){\n            k=dinic(ver[i],min(edge[i],rest));\n            if(!k) dep[ver[i]]=0;\n            rest-=k;\n            edge[i]-=k;\n            edge[i^1]+=k;\n        }\n    }\n    return flow-rest;\n}\nvoid dfs(int x){\n\tvis[x]=1;\n\tfor(int i=head[x];i;i=nex[i]) if(!vis[ver[i]]&&edge[i]) dfs(ver[i]);\n}\nint main(){\n\tscanf(\"%d%d%d%d\",&n,&m,&s,&t);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d%d\",&a[i],&b[i],&g[i]);\n\t\tif(g[i]) add(a[i],b[i],1),add(b[i],a[i],1e6);\n\t\telse add(a[i],b[i],1e6);\n\t}\n\twhile(bfs()){\n\t\tfor(int i=1;i<=n;i++) now[i]=head[i];\n\t\twhile(flow=dinic(s,1e6)) maxflow+=flow;\n\t}\n\tdfs(s);\n\tprintf(\"%d\\n\",maxflow);\n\tfor(int i=1;i<=n;i++) head[i]=maxflow=0,tot=1;\n\tadd(t,s,1e6);\n\ts=0,t=n+1;\n\tfor(int i=1;i<=m;i++){\n\t\tif(g[i]){\n\t\t\tadd(a[i],b[i],(1e6-1));\n\t\t\tadd(s,b[i],1);\n\t\t\tadd(a[i],t,1);\n\t\t\tes[i]=tot-4;\n\t\t}\n\t}\n\twhile(bfs()){\n\t\tfor(int i=0;i<=n+1;i++) now[i]=head[i];\n\t\twhile(flow=dinic(s,1e6)) maxflow+=flow;\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tif(g[i]){\n\t\t\tif(vis[a[i]]!=vis[b[i]]) printf(\"%d %d\\n\",edge[es[i]]+1,edge[es[i]]+1);\n\t\t\telse printf(\"%d 1000000\\n\",edge[es[i]]+1);\n\t\t}\n\t\telse printf(\"0 1000000\\n\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1681831993,
        "uid": 673294,
        "name": "zyxawa",
        "ccfLevel": 6,
        "title": "CF843E Maximum Flow \u9898\u89e3"
    }
]