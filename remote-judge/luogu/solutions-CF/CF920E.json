[
    {
        "content": "\u5220\u53bb\u7684\u8fb9\u6570\u53ea\u6709m\u6761\uff0c\u6240\u4ee5\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a\u70b9\uff0c\u5220\u53bb\u7684\u4e0e\u5b83\u8fde\u63a5\u7684\u8fb9\u7684\u6761\u6570\u4e0d\u8d85\u8fc7m/n\u3002\n\n\u627e\u51fa\u8fd9\u4e2a\u70b9\uff0c\u7136\u540e\u627e\u51fa\u6240\u6709\u4e0e\u8fd9\u4e2a\u70b9\u6709\u8fb9\u76f8\u90bb\u7684\u70b9\uff0c\u5c06\u5b83\u4eec\u5408\u5e76\u6210\u4e00\u4e2a\u8fde\u901a\u5757\u3002\n\n\u663e\u7136\uff0c\u8fde\u901a\u5757\u5185\u90e8\u7684\u8fb9\u4e0d\u7528\u8003\u8651\uff0c\u9700\u8981\u8003\u8651\u7684\u8fb9\u4e00\u5b9a\u4e0e\u8fde\u901a\u5757\u5916\u7684\u67d0\u4e2a\u70b9\u76f8\u8fde\u3002\n\n\u8fde\u901a\u5757\u5916\u6700\u591a\u53ea\u6709m/n\u4e2a\u70b9\uff0c\u6bcf\u4e2a\u70b9\u6700\u591a\u4e0en\u6761\u8fb9\u76f8\u8fde\uff0c\u6240\u4ee5\u8fd9\u6837\u7684\u8fb9\u6700\u591a\u53ea\u6709m\u6761\uff0c\u66b4\u529b\u5373\u53ef\n\n```cpp\n#include<stdio.h>\n#include<string.h>\n#include<algorithm>\nusing namespace std;\nint head[262144],last[524288],to[524288],cnt=0;\nint fa[262144];\nint deg[262144];\nbool vis[262144];\nbool vis2[262144];\nint sb[262144];\nint sz[262144];\nvoid add(int u,int v)\n{\n    cnt++;\n    last[cnt]=head[u];\n    head[u]=cnt;\n    to[cnt]=v;\n    deg[v]++;\n}\nint findroot(int x)\n{\n    if(fa[x]==x)\n    {\n        return x;\n    }\n    return fa[x]=findroot(fa[x]);\n}\nint main()\n{\n    int n,m;\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n    {\n        fa[i]=i;\n    }\n    while(m--)\n    {\n        int u,v;\n        scanf(\"%d%d\",&u,&v);\n        add(u,v);\n        add(v,u);\n    }\n    int u=0,md=n;\n    for(int i=1;i<=n;i++)\n    {\n        if(deg[i]<md)\n        {\n            md=deg[i];\n            u=i;\n        }\n    }\n    for(int i=head[u];i;i=last[i])\n    {\n        vis[to[i]]=true;\n    }\n    for(int i=1;i<=n;i++)\n    {\n        if(!vis[i])\n        {\n            fa[i]=u;\n        }\n    }\n    for(int i=1;i<=n;i++)\n    {\n        if(!vis[i])\n        {\n            continue;\n        }\n        memset(vis2,0,sizeof(vis2));\n        int x=findroot(i);\n        for(int j=head[i];j;j=last[j])\n        {\n            vis2[to[j]]=true;\n        }\n        for(int j=1;j<=n;j++)\n        {\n            if(vis2[j])\n            {\n                continue;\n            }\n            int y=findroot(j);\n            fa[y]=x;\n        }\n    }\n    int ans=0;\n    for(int i=1;i<=n;i++)\n    {\n        if(fa[i]==i)\n        {\n            sb[i]=ans;\n            ans++;\n        }\n    }\n    for(int i=1;i<=n;i++)\n    {\n        sz[sb[findroot(i)]]++;\n    }\n    sort(sz,sz+ans);\n    printf(\"%d\\n\",ans);\n    for(int i=0;i<ans;i++)\n    {\n        printf(\"%d\",sz[i]);\n        if(i==ans-1)\n        {\n            putchar('\\n');\n        }\n        else\n        {\n            putchar(' ');\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1528552728,
        "uid": 35760,
        "name": "142857cs",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF920E \u3010Connected Components?\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u4e0d\u540c\u7684\u505a\u6cd5\n\n\u8003\u8651\u5230\u6211\u4eec\u8fb9\u5f88\u591a\uff0c\u5c31\u4e0d\u80fd\u591f\u6bcf\u6b21\u62d3\u5c55\u7684\u65f6\u5019\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u53bb\u5224\u65ad\u662f\u5426\u548c\u5f53\u524d\u70b9\u6709\u8fb9\n\n\u90a3\u4e48\u6211\u4eec\u4ece\u5220\u53bb\u7684\u8fb9\u5f88\u5c11\u7684\u89d2\u5ea6\u6765\u8003\u8651\uff0c\u628a\u6c42\u8fde\u901a\u5757\u770b\u4f5c\u67d3\u8272\u62d3\u5c55\n\n\u5f53\u6211\u4eec\u4ee5\u67d0\u4e00\u4e2a\u989c\u8272\u67d3\u8272\u7684\u65f6\u5019\uff0c\u4ed6\u80af\u5b9a\u53ea\u53ef\u80fd\u5411\u8fd8\u6ca1\u67d3\u8272\u7684\u70b9\u67d3\u8272\uff0c\u4e0d\u7136\u5982\u679c\u53ef\u4ee5\u67d3\u5df2\u7ecf\u67d3\u8fc7\u8272\u7684\u70b9\uff0c\u8fd9\u4e2a\u70b9\u5728\u4e4b\u524d\u5c31\u5df2\u7ecf\u88ab\u5176\u4ed6\u5e97\u67d3\u8272\u4e86\n\n\u6211\u4eec\u7528\u4e00\u4e2a `vector` \u6765\u5b58\u50a8\u8fd8\u6ca1\u6709\u88ab\u67d3\u8272\u7684\u70b9\uff0c\u6bcf\u6709\u4e00\u4e2a\u70b9\u88ab\u67d3\u8272\u6211\u4eec\u5c31\u628a\u4ed6\u4ece\u91cc\u9762\u53bb\u9664\uff0c\u56e0\u4e3a\u4ed6\u4e0d\u518d\u53ef\u80fd\u518d\u88ab\u67d3\u8272\n\n\u6bcf\u6b21bfs\u626b `vector` \u5c31\u884c\u4e86\n\n\u4e3a\u5565\u8fd9\u6837 `bfs` \u590d\u6742\u5ea6\u662f\u5bf9\u7684?\n\n\u8003\u8651\u5230\u6211\u4eec\u6bcf\u4e2a\u70b9\u90fd\u53ea\u4f1a\u88ab\u62ff\u6765bfs\u4e00\u6b21\uff0c\u8fd9\u91cc\u7684\u590d\u6742\u5ea6\u662f $O(n)$ \uff0c\u90a3\u4e48\u4e3b\u8981\u8003\u8651\u7684\u662f\u6211\u4eec\u6bcf\u4e2a\u70b9\u51fa\u5165 `vector` \u7684\u6b21\u6570\n\n\u6211\u4eec\u6bcf\u6709\u4e00\u4e2a\u5220\u53bb\u7684\u8fb9\u7684\u65f6\u5019\uff0c\u624d\u4f1a\u4f7f\u5f97\u8fd9\u4e2a\u70b9\u518d\u6b21\u8fdb\u5165 `vector` \uff0c\u663e\u7136\u8fd9\u4e2a\u548c\u5220\u8fb9\u6570\u91cf\u6709\u5173\uff0c\u6574\u4f53\u590d\u6742\u5ea6\u5c31\u662f $O(n+m)$\n\n```cpp\n#include <cstdio>\n#include <unordered_set>\n#include <queue>\n#include <algorithm>\n\nusing namespace std;\n\nunordered_set <int>mp[200010];\n\nqueue <int>vec;\n\nint n,m,cnt;\n\nint ans[200010];\n\nbool vis[200010];\n\nvoid bfs(int x,int cnt)\n{\n  queue <int>q;\n  q.push(x);\n  while(!q.empty())\n  {\n    int x=q.front(),nowsize=vec.size();\n    q.pop();\n    for(int i=1;i<=nowsize;i++)\n    {\n      int now=vec.front();\n      vec.pop();\n      if(vis[now]) continue ;\n      if(mp[x].find(now)!=mp[x].end()||mp[now].find(x)!=mp[now].end()) vec.push(now);\n      else ans[cnt]++,q.push(now),vis[now]=1;\n    }\n  }\n}\n\nint main()\n{\n  scanf(\"%d%d\",&n,&m);\n  for(int i=1;i<=m;i++)\n  {\n    int a,b;\n    scanf(\"%d%d\",&a,&b);\n    mp[a].insert(b);\n  }\n  for(int i=1;i<=n;i++) vec.push(i);\n  for(int i=1;i<=n;i++)\n  {\n    if(!vis[i])\n    {\n      vis[i]=1;\n      bfs(i,++cnt);\n    }\n  }\n  sort(ans+1,ans+cnt+1);\n  printf(\"%d\\n\",cnt);\n  for(int i=1;i<=cnt;i++) printf(\"%d \",ans[i]+1);\n}\n```",
        "postTime": 1602748937,
        "uid": 62573,
        "name": "zzqDeco",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF920E \u3010Connected Components?\u3011"
    },
    {
        "content": "[$\\Large\\texttt{CF920E}$](https://www.luogu.com.cn/problem/CF920E)\n\n[$\\small\\texttt{In my blog}$](https://www.cnblogs.com/RedreamMer/p/13473388.html)\n\n\u601d\u8def\uff1a\u5e76\u67e5\u96c6\u3001~~\u66b4\u529b~~\n\n\u601d\u8def\u548c\u5927\u5bb6\u90fd\u5dee\u4e0d\u591a\uff0c\u4f46\u662f\u60f3\u7ed9\u4e00\u4e2a\u7ec6\u81f4\u4e00\u70b9\u7684\u8bc1\u660e\u3002\n\n$\\large\\texttt{Meaning}$\n\n\u7ed9\u4f60\u4e00\u5f20 $N$ \u4e2a\u70b9 $M$ \u6761\u8fb9\u7684\u56fe\uff0c\u6c42\u8fd9\u4e2a\u56fe\u7684\u8865\u56fe\u7684\u8fde\u901a\u5757\u4e2a\u6570\u4ee5\u53ca\u6bcf\u4e2a\u8fde\u901a\u5757\u7684\u5927\u5c0f\u3002\n\n$\\large\\texttt{Solution}$\n\n\u5728\u8fd9\u4e2a\u56fe\u4e2d\u9009\u4e00\u4e2a\u5ea6\u6570\u6700\u5c0f\u7684\u70b9 $n$\uff0c\u548c\u5b83\u8fde\u901a\uff08\u6307\u8865\u56fe\uff09\u7684\u70b9\u4e2a\u6570\u4e00\u5b9a\u662f\u6240\u6709\u70b9\u4e2d\u6700\u591a\u7684\uff0c\u5c06\u5b83\u4eec\u5e76\u5728\u4e00\u8d77\uff0c\u7136\u540e\u5bf9\u5269\u4e0b\u6ca1\u8054\u901a\u7684\u70b9\u66b4\u529b\u64cd\u4f5c\uff0c\u5bfb\u627e\u8fde\u901a\u5757\u5e76\u5408\u5e76\u3002\n\n\u867d\u7136\u662f\u66b4\u529b\uff0c\u4f46\u662f\u5b83\u7684\u590d\u6742\u5ea6\u4e5f\u4e0d\u662f\u5f88\u5927\u3002\n\n$\\large\\texttt{Prove}$\n\n\u9996\u5148\u8fd9\u6837\u5148\u9009\u4e00\u4e2a\u5ea6\u6700\u5c0f\u7684\u70b9\u5148\u505a\u8054\u901a\u64cd\u4f5c\u80af\u5b9a\u662f\u5176\u4ed6\u65b9\u6848\u4e2d\u6700\u4f18\u7684\uff0c\u56e0\u4e3a\u4e0e\u5b83\u8054\u901a\u7684\u70b9\u4e00\u5b9a\u662f\u6700\u591a\u7684\uff0c\u7701\u53bb\u4e86\u4e0d\u5fc5\u8981\u7684\u8003\u8651\u3002\n\n\u4ee4\u70b9\u6570\u4e3a $n$\uff0c\u8fb9\u6570\u4e3a $m$\u3002\n\n\u5148\u66b4\u529b\u679a\u4e3e\u51fa\u90a3\u4e2a\u5ea6\u6700\u5c0f\u7684\u70b9\uff0c\u5b83**\u6700\u574f\u60c5\u51b5\u6700\u591a**\u6709 $\\frac{m}{n}$ \u6761\u8fb9\u8fde\u63a5 $\\frac{m}{n}$ \u4e2a\u70b9\uff0c\u90a3\u4e48\u5269\u4e0b\u7684$n-\\frac{m}{n}$ \u4e2a\u70b9\u662f\u4e0d\u7528\u8003\u8651\u7684\uff0c\u56e0\u4e3a\u90fd\u5728\u4e00\u4e2a\u8fde\u901a\u5757\u91cc\u9762\uff0c\u8003\u8651\u8fd9 $\\frac{m}{n}$ \u4e2a\u70b9,\u800c\u6211\u4eec\u679a\u4e3e\u8fd9\u4e9b\u70b9\u7684\u51fa\u8fb9\uff0c\u5171 $m-\\frac{m}{n}$ \u6761\uff0c\u663e\u7136\u53ef\u8fc7\u3002\n\n\u5bf9\u6bcf\u4e00\u4e2a\u4e0d\u4e0e\u7b2c\u4e00\u4e2a\u8054\u901a\u7684\u70b9\uff0c\u8fd8\u8981\u679a\u4e3e\u4e00\u904d\u6240\u6709\u7684\u70b9\uff0c\u590d\u6742\u5ea6\u4e3a $\\frac{m}{n}\\times n = m$ \u663e\u7136\u53ef\u8fc7\u3002 \n\n\u590d\u6742\u5ea6\u4e3a $O(n+m)$\uff08\u6700\u574f\u60c5\u51b5\uff09\u3002\n\n$\\large\\texttt{Code}$\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define PB push_back\nconst int N = 200000;\ninline int read()\n{\n    register int s = 0;\n    register bool neg = 0;\n    register char c = getchar();\n    for (; c < '0' || c > '9'; c = getchar())\n        neg |= (c == '-');\n    for (; c >= '0' && c <= '9'; s = s * 10 + (c ^ 48), c = getchar())\n        ;\n    return (neg ? -s : s);\n}\n\nint a, b, in[N + 10], fa[N + 10], scc, bel[N + 10], siz[N + 10];\nbool vis[N + 10], vis1[N + 10];\nvector<int> st[N + 10];\n\ninline int f(int n)//\u5e76\u67e5\u96c6\u6a21\u677f\n{\n    return fa[n] == n ? n : fa[n] = f(fa[n]);\n}\n\nsigned main()\n{\n    a = read();\n    b = read();\n    int x, y;\n    for (int i = 1; i <= b; i++)\n    {\n        x = read();\n        y = read();\n        st[x].PB(y);\n        st[y].PB(x);\n        in[x]++;\n        in[y]++;\n    }\n    int mx = 1;\n    for (int i = 1; i <= a; i++)\n        fa[i] = i;\n    for (int i = 2; i <= a; i++)\n        if (in[i] < in[mx])//\u627e\u5230\u5ea6\u6700\u5c0f\u7684\u70b9\n            mx = i;\n    for (int i = 0; i < st[mx].size(); i++)\n        vis[st[mx][i]] = 1;\n    for (int i = 1; i <= a; i++)\n        if (!vis[i])\n            fa[i] = mx;\n    for (int i = 1; i <= a; i++)\n    {\n        if (!vis[i] || i == mx)//\u5bf9\u5176\u4ed6\u6ca1\u6709\u8054\u901a\u7684\u70b9\u8fdb\u884c\u5408\u5e76\u64cd\u4f5c\n            continue;\n        memset(vis1, 0, sizeof(vis1));\n        int f1 = f(i);\n        for (int j = 0; j < st[i].size(); j++)\n            vis1[st[i][j]] = 1;\n        for (int j = 1; j <= a; j++)//\u66b4\u529b\u5408\u5e76\uff08\uff08\uff08\u5e76\u975e\n            if (!vis1[j])\n                fa[f(j)] = f1;\n    }\n    for (int i = 1; i <= a; i++)\n        if (fa[i] == i)\n            bel[i] = ++scc;\n    for (int i = 1; i <= a; i++)\n        siz[bel[f(i)]]++;\n    sort(siz + 1, siz + scc + 1);\n    printf(\"%d\\n\", scc);\n    for (int i = 1; i <= scc; i++)\n        printf(\"%d \", siz[i]);\n    return 0;\n}\n```",
        "postTime": 1597064557,
        "uid": 184549,
        "name": "RedreamMer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF920E \u3010Connected Components?\u3011"
    },
    {
        "content": "\u5f00set\u8bb0\u5f55\u8fd8\u6ca1\u88ab\u8bbf\u95ee\u7684\u70b9\uff0c\u5728\u5bf9\u6bcf\u4e2a\u70b9\u90fd\u5f001\u4e2aset\u8bb0\u5f55\u88ab\u5220\u7684\u8fb9\u3002\u7136\u540e\u4e00\u904d\u626b\uff0c\u7528bfs\u5f3a\u884c\u641c\u51fa\u8054\u901a\u5757\u3002\u6700\u540e\u8bb0\u5f97\u7ed9\u7b54\u6848\u6392\u5e8f\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define For(i,a,b) for(i=(a);i<=(b);++i)\n#define Forward(i,a,b) for(i=(a);i>=(b);--i)\n#define Rep(i,a,b) for(register int i=(a),i##end=(b);i<=i##end;++i)\n#define Repe(i,a,b) for(register int i=(a),i##end=(b);i>=i##end;--i)\nusing namespace std;\ntemplate<typename T>inline void read(T &x){\n\tT s=0,f=1;char k=getchar();\n\twhile(!isdigit(k)&&k^'-')k=getchar();\n\tif(!isdigit(k)){f=-1;k=getchar();}\n\twhile(isdigit(k)){s=s*10+(k^48);k=getchar();}\n\tx=s*f;\n}\nvoid file(void){\n\t#ifndef ONLINE_JUDGE\n\tfreopen(\"water.in\",\"r\",stdin);\n\tfreopen(\"water.out\",\"w\",stdout);\n\t#endif\n}\nconst int MAXN=2e5+7;\n#define Chkmax(a,b) a=a>b?a:b\nstatic int n,m;\nstatic set<int>K;\nstatic set<int>G[MAXN];\ninline void init()\n{\n    read(n);read(m);\n    static int u,v;\n    Rep(i,1,n)K.insert(i);\n    Rep(i,1,m)read(u),read(v),G[u].insert(v),G[v].insert(u);\n}\nstatic set<int>::iterator it,del;\nstatic int top,ans[MAXN];\nstatic queue<int>R;\nint bfs(int x)\n{\n    static int u,sz,z;sz=0;\n    R.push(x);\n    while(!R.empty())\n    {\n        u=R.front();R.pop();++sz;\n        for(it=K.begin();it!=K.end();)if(!G[u].count(z=*it))\n        {\n            R.push(z);del=it;\n            ++it;K.erase(del);\n        }else ++it;\n    }\n    return sz;\n}\ninline void solve()\n{\n    static int u;\n    while(!K.empty())\n    {\n        u=*K.begin();K.erase(K.begin());\n        ans[++top]=bfs(u);\n    }\n    sort(ans+1,ans+top+1);\n    printf(\"%d\\n\",top);\n    Rep(i,1,top)printf(\"%d \",ans[i]);puts(\"\");\n}\nint main(void){\n\tfile();\n    init();\n    solve();\n\treturn 0;\n}\n\n```",
        "postTime": 1518405749,
        "uid": 7035,
        "name": "Great_Influence",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF920E \u3010Connected Components?\u3011"
    },
    {
        "content": "- $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u6c42\u5176\u8865\u56fe\u7684\u6bcf\u4e2a\u8054\u901a\u5206\u91cf\u5927\u5c0f\u3002\n- $n,m\\leq 10^5$\n\n\u8003\u8651\u539f\u56fe\u4e0e\u8865\u56fe\u7684\u5173\u7cfb\uff1a\n\n\u82e5\u539f\u56fe\u4e2d $(u,v)$ \u6709\u8fb9\uff0c\u5219\u8865\u56fe\u4e2d $(u,v)$ \u65e0\u8fb9\u3002\n\n\u82e5\u539f\u56fe\u4e2d $(u,v)$ \u65e0\u8fb9\uff0c\u5219\u8865\u56fe\u4e2d $(u,v)$ \u6709\u8fb9\u3002\n\n\u5f62\u8c61\u5730\u8bf4\uff0c$(u,v_k)$ \u50cf\u662f\u9694\u677f\u628a\u533a\u95f4 $[1,n]$ \u5206\u6210\u8bb8\u591a\u6bb5\uff0c\u6bcf\u4e00\u6bb5\u4e2d\u7684\u70b9\u5728\u8865\u56fe\u4e2d\u90fd\u4e0e $u$ \u5c5e\u4e8e\u540c\u4e00\u8fde\u901a\u5206\u91cf\u3002\n\n\u6bb5\u5185\u5408\u5e76\uff0c\u5408\u5e76\u591a\u6bb5\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u5e76\u67e5\u96c6\u5408\u5e76\u533a\u95f4\u89e3\u51b3\u3002\n\n\u4f46\u5728\u666e\u901a\u7684\u533a\u95f4\u4e0a\u6211\u4eec\u53ef\u4ee5\u5c06\u5e76\u67e5\u96c6\u5e26\u65b9\u5411\u5904\u7406\uff0c\u8bb0\u6700\u53f3\u7aef\u4e3a\u6839\u8282\u70b9\uff0c\u4f46\u5728\u56fe\u4e2d\uff0c\u65b9\u5411\u6027\u96be\u4ee5\u4fdd\u8bc1\u3002\n\n\u89c2\u5bdf\u533a\u95f4\u4e2d\u7684\u53e6\u4e00\u4e2a\u6027\u8d28\uff1a\u8fde\u7eed\uff01\n\n\u8003\u8651\u5c06\u96c6\u5408\u4e2d\u70b9\u7684\u6700\u5927\u7f16\u53f7\u8bb0\u4e3a\u5e76\u67e5\u96c6\u7684\u6839\u8282\u70b9\uff0c\u5219\u53ea\u9700\u4fdd\u8bc1\u96c6\u5408\u5185\u70b9\u7f16\u53f7\u8fde\u7eed\u5373\u53ef\u3002\n\n\u8fdb\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\n1. \u5c06\u6240\u6709\u5728\u539f\u56fe\u4e0a\u4e0d\u4e0e\u70b9 $u$ \u76f8\u8fde\u7684\u70b9\u7ec4\u6210\u7684\u8fde\u7eed\u533a\u95f4\u5408\u5e76\uff1b\n2. \u6240\u6709\u8fde\u7eed\u533a\u95f4\u5408\u5e76\u5b8c\u4e4b\u540e\u518d\u4e92\u76f8\u5408\u5e76\u4ee5\u53ca\u4e0e $u$ \u5408\u5e76\uff0c\u4fdd\u8bc1\u4e0d\u51fa\u73b0\u6f0f\u8fde\u73b0\u8c61\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/nrxlgadu.png)\n\n\u5982\u4e0a\u56fe\u7ea2\u8272\u8fb9\u4e3a\u539f\u56fe\u4e2d\u7684\u8fde\u8fb9\uff0c\u800c\u7eff\u8272\u533a\u95f4\u4fbf\u662f\u8865\u56fe\u4e2d\u7684\u540c\u4e00\u8054\u901a\u5206\u91cf\u7684\u70b9\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\ninline int read(){\n\tint x=0,f=1;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9'){\n\t\tif(c=='-')f=-1;\n\t\tc=getchar();\n\t}\n\twhile(c<='9'&&c>='0'){\n\t\tx=(x<<1)+(x<<3)+(c^48);\n\t\tc=getchar();\n\t}\n\treturn x*f;\n}\n\nconst int MAXN=2e5+5;\nint n,m,f[MAXN],siz[MAXN],ans[MAXN],num;\nvector<int>e[MAXN];\nbool vis[MAXN];\n\nvoid add(int u,int v){\n\te[u].push_back(v);\n}\n\nvoid init(){\n\tfor(int i=1;i<=n;++i)f[i]=i,siz[i]=1;\n}\n\nint find(int x){\n\tif(x==f[x])return x;\n\treturn f[x]=find(f[x]);\n}\n\nvoid merge(int x,int y){\n\tint fx=find(x),fy=find(y);\n\tif(fx==fy)return;\n\tif(fx>fy)swap(fx,fy);\n\tf[fx]=fy,siz[fy]+=siz[fx];\n}\n\nvoid work(int l,int r){\n\tint fl=find(l),fr;\n\tfor(int i=fl+1;i<=r;++i){\n\t\tfr=find(i);\n\t\tmerge(fl,fr);\n\t\tfl=fr;\n\t}\n}\n\nint main(){\n\tn=read(),m=read();\n\tinit();\n\tfor(int i=1;i<=m;++i){\n\t\tint u=read(),v=read();\n\t\tadd(u,v),add(v,u);\n\t}\n\tfor(int i=1;i<=n;++i){\n\t\tsort(e[i].begin(),e[i].end());\n\t}\n\tint l,r,len,pos;\n\tfor(int i=1;i<=n;++i){\n\t\tif(!e[i].size()){\n\t\t\tif(1<i-1)work(1,i-1);\n\t\t\tif(i+1<n)work(i+1,n);\n\t\t\tbreak;\n\t\t}\n\t\tl=1,r=e[i][0]-1,len=e[i].size();\n\t\tif(l<=i&&i<=r){\n\t\t\tint tmp=r;\n\t\t\tr=i-1;\n\t\t\tif(l<r)work(l,r);\n\t\t\tl=i+1,r=tmp;\n\t\t}\n\t\tif(l<r)work(l,r);\n\t\tfor(int j=1;j<len;++j){\n\t\t\tl=e[i][j-1]+1,r=e[i][j]-1;\n\t\t\tif(l<r)work(l,r);\n\t\t}\n\t\tif(e[i][len-1]==n)l=r=n;\n\t\telse l=e[i][len-1]+1,r=n;\n\t\tif(l<r)work(l,r);\n\t}\n\tfor(int i=1;i<=n;++i){\n\t\tif(!e[i].size()){\n\t\t\tif(i==n)merge(i,i-1);\n\t\t\telse merge(i,i+1);\n\t\t\tcontinue;\n\t\t}\n\t\tif(e[i][0]>1)merge(1,i);\n\t\tfor(int j=1;j<e[i].size();++j){\n\t\t\tif(e[i][j]-e[i][j-1]>1)merge(i,e[i][j]-1);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;++i){\n\t\tint fx=find(i);\n\t\tif(!vis[fx]){\n\t\t\tans[++num]=siz[fx];\n\t\t\tvis[fx]=1;\n\t\t}\n\t}\n\tcout<<num;puts(\"\");\n\tsort(ans+1,ans+num+1);\n\tfor(int i=1;i<=num;++i)cout<<ans[i]<<\" \";\n\treturn 0;\n}\n```",
        "postTime": 1659406064,
        "uid": 271736,
        "name": "Daidly",
        "ccfLevel": 6,
        "title": "CF920E Connected Components? \u9898\u89e3"
    },
    {
        "content": "\u6ca1\u89c1\u8fc7\u5c31\u4e0d\u4f1a\u7cfb\u5217\u3002\u3002\n\n\u6839\u636e\u62bd\u5c49\u539f\u7406\uff0c\u5b58\u5728\u4e00\u4e2a\u70b9\u88ab\u5220\u6389\u7684\u8fb9\u4e0d\u8d85\u8fc7 $\\lfloor \\frac{2m}{n} \\rfloor$ \u6761\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4e2a\u70b9\u6240\u5728\u7684\u8fde\u901a\u5757\u5185\u51e0\u4e4e\u5305\u542b\u4e86\u6240\u6709\u7684\u70b9\u3002\n\n\u628a\u5269\u4e0b\u7684\u70b9\u53d6\u51fa\u6765\u5e76\u67e5\u96c6\u66b4\u529b\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6 $O(n+\\frac{m^2}{n^2})$\uff0c\u56e0\u4e3a $m\\le n^2$ \u6240\u4ee5\u53ef\u4ee5\u7406\u89e3\u4e3a $O(m+n)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int NR=2e5+10;\nconst int MR=610;\nint n,m,cnt[NR],x[NR],y[NR],flag[NR],buc[NR];\nbool lcy[MR][NR];\nint idx[NR],rnk[NR],tot;\n\nint fa[NR],pos=0,minn=1e9;\nvoid init(){\n\tfor(int i=1;i<=n;i++)\n\t\tif(flag[i])fa[i]=i;\n\t\telse fa[i]=pos;\n}\nint get(int x){\n\tif(fa[x]==x)return x;\n\treturn fa[x]=get(fa[x]);\n}\nvoid merge(int x,int y){\n\tx=get(x);y=get(y);\n\tif(x==y)return;\n\tfa[x]=y;\n}\npriority_queue<int,vector<int>,greater<int> >q;\n\nint main(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;i++)\n\t\tscanf(\"%d%d\",&x[i],&y[i]),cnt[x[i]]++,cnt[y[i]]++;\n\tfor(int i=1;i<=n;i++)\n\t\tif(minn>cnt[i])minn=cnt[i],pos=i;\n\tfor(int i=1;i<=m;i++){\n\t\tif(x[i]==pos)flag[y[i]]=1;\n\t\tif(y[i]==pos)flag[x[i]]=1;\n\t}\n\tinit();\n\tfor(int i=1;i<=n;i++)\n\t\tif(flag[i])idx[++tot]=i,rnk[i]=tot;\n\tfor(int i=1;i<=m;i++){\n\t\tif(flag[x[i]])lcy[rnk[x[i]]][y[i]]=1;\n\t\tif(flag[y[i]])lcy[rnk[y[i]]][x[i]]=1;\n\t}\n\tfor(int i=1;i<=tot;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tif(!lcy[i][j])merge(idx[i],j);\n\tfor(int i=1;i<=n;i++)buc[get(i)]++;\n\tfor(int i=1;i<=n;i++)\n\t\tif(buc[i])q.push(buc[i]);\n\tcout<<q.size()<<endl;\n\twhile(!q.empty())printf(\"%d \",q.top()),q.pop();\n\treturn 0;\n}\n```",
        "postTime": 1667820949,
        "uid": 117771,
        "name": "intel_core",
        "ccfLevel": 7,
        "title": "CF920E \u9898\u89e3"
    },
    {
        "content": "\u5e76\u67e5\u96c6\u505a\u6cd5\u3002\n\n# \u9898\u76ee\u5927\u610f\n\n\u7ed9\u4f60\u4e00\u5f20 $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe $G$\uff0c\u6c42\u8fd9\u4e2a\u56fe\u7684\u8865\u56fe $G'$ \u7684\u8fde\u901a\u5757\u4e2a\u6570\u4ee5\u53ca\u6bcf\u4e2a\u8fde\u901a\u5757\u7684\u5927\u5c0f\u3002\n\n# \u9898\u76ee\u5206\u6790\n\n\u9996\u5148\u6211\u4eec\u5728 $G$ \u4e2d\u627e\u5230\u5ea6\u6570\u6700\u5c0f\u7684\u70b9 $minn$\uff0c\u5728 $G$ \u4e2d\u5ea6\u6570\u6700\u5c0f\u5373\u8bf4\u660e\u5728 $G'$ \u4e2d\u5ea6\u6570\u6700\u5927\u3002\u7136\u540e\u5bf9\u4e8e $G$ \u4e2d\u7684\u8fb9 $(minn,v)$\uff0c\u628a $v$ \u6253\u4e0a\u6807\u8bb0\u3002\u5269\u4e0b\u7684\u672a\u6253\u4e0a\u6807\u8bb0\u7684\u70b9\u5c31\u662f $G'$ \u4e2d\u6709\u8fb9\u4e0e $minn$ \u76f8\u8fde\u7684\u70b9\uff0c\u628a\u8fd9\u4e9b\u70b9\u548c $minn$ \u5408\u5e76\u8d77\u6765\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u6240\u6709\u7684\u6253\u4e0a\u6807\u8bb0\u7684\u70b9 $i$\uff0c\u82e5 $G$ \u4e2d\u5b58\u5728 $(i,v)$\uff0c\u90a3\u4e48\u53c8\u5bf9 $v$ \u6253\u4e0a\u6807\u8bb0\u3002\u539f\u56e0\u540c\u4e0a\u3002\u6ce8\u610f\u5bf9\u4e8e\u6bcf\u4e2a\u70b9 $i$\uff0c\u8fd9\u4e9b\u6807\u8bb0\u90fd\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u5bf9\u70b9 $i$ \u8fdb\u884c\u64cd\u4f5c\u65f6\u6253\u7684\u6807\u8bb0\u4e0d\u4f1a\u5bf9\u5176\u4ed6 $i'$ \u6709\u5f71\u54cd\u3002\n\n\u5408\u5e76\u64cd\u4f5c\u4f7f\u7528\u5e76\u67e5\u96c6\u5b8c\u6210\u3002\n\n\u6700\u540e\u7edf\u8ba1\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\n\n# \u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790\n\n\u770b\u8d77\u6765\u590d\u6742\u5ea6\u975e\u5e38\u9ad8\uff0c\u4f3c\u4e4e\u5c31\u662f\u66b4\u529b\uff0c\u4f46\u5b9e\u9645\u4e0a\u6700\u591a\u53ea\u4f1a\u8fdb\u884c $n+m$ \u6b21\u3002\n\n**\uff08\u4e0b\u9762\u4e0d\u8003\u8651\u5e76\u67e5\u96c6\u590d\u6742\u5ea6\u7684 $\\alpha$ \u5e38\u6570\uff09**\n\n\u5148\u66b4\u529b\u679a\u4e3e\u51fa\u90a3\u4e2a\u5ea6\u6700\u5c0f\u7684\u70b9\uff0c\u5b83\u6700\u574f\u60c5\u51b5\u6700\u591a\u8fde\u63a5 $\\dfrac{m}{n}$ \u4e2a\u70b9\uff0c\u5269\u4e0b $n-\\dfrac{m}{n}$ \u4e2a\u70b9\u662f\u4e0d\u7528\u8003\u8651\u7684\uff0c\u56e0\u4e3a\u90fd\u5728\u4e00\u4e2a\u8fde\u901a\u5757\u91cc\u9762\u3002\n\n\u8fd9 $\\dfrac{m}{n}$ \u4e2a\u70b9,\u800c\u6211\u4eec\u679a\u4e3e\u8fd9\u4e9b\u70b9\u7684\u51fa\u8fb9\uff0c\u5171 $m-\\frac{m}{n}$ \u6761\u3002\n\n\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O(n+m)}$\u3002\n\n# \u4ee3\u7801\n\n```cpp\n//2022/5/3\n//2022/5/10\n#define _CRT_SECURE_NO_WARNINGS\n#include <iostream>\n#include <cstdio>\n#include <climits>//need \"INT_MAX\",\"INT_MIN\"\n#include <cstring>//need \"memset\"\n#include <numeric>\n#include <algorithm>\n#define enter putchar(10)\n#define debug(c,que) std::cerr << #c << \" = \" << c << que\n#define cek(c) puts(c)\n#define blow(arr,st,ed,w) for(register int i = (st);i <= (ed); ++ i) std::cout << arr[i] << w;\n#define speed_up() ios::sync_with_stdio(false),cin.tie(0),cout.tie(0)\n#define mst(a,k) memset(a,k,sizeof(a))\n#define Abs(x) ((x) > 0 ? (x) : -(x))\n#define stop return(0)\nconst int mod = 1e9 + 7;\ninline int MOD(int x) {\n\tif(x < 0) x += mod;\n\treturn x % mod;\n}\nnamespace Newstd {\n\tchar buf[1 << 21],*p1 = buf,*p2 = buf;\n\tinline int getc() {\n\t\treturn p1 == p2 && (p2 = (p1 = buf) + fread(buf,1,1 << 21,stdin),p1 == p2) ? EOF : *p1 ++;\n\t}\n\tinline int read() {\n\t\tint ret = 0,f = 0;char ch = getc();\n\t\twhile (!isdigit(ch)) {\n\t\t\tif(ch == '-') f = 1;\n\t\t\tch = getc();\n\t\t}\n\t\twhile (isdigit(ch)) {\n\t\t\tret = (ret << 3) + (ret << 1) + ch - 48;\n\t\t\tch = getc();\n\t\t}\n\t\treturn f ? -ret : ret;\n\t}\n\tinline void write(int x) {\n\t\tif(x < 0) {\n\t\t\tputchar('-');\n\t\t\tx = -x;\n\t\t}\n\t\tif(x > 9) write(x / 10);\n\t\tputchar(x % 10 + '0');\n\t}\n}\nusing namespace Newstd;\n\nconst int N = 2e5 + 5;\nstruct Graph {\n\tint v,nxt;\n} gra[N << 1];\nint head[N],deg[N],fa[N],siz[N],ans[N];\nbool vis[N],st[N];\nint n,m,idx;\ninline int getf(int x) {\n\treturn fa[x] == x ? x : fa[x] = getf(fa[x]);\n}\ninline void merge(int x,int y) {\n\tint f1 = getf(x),f2 = getf(y);\n\tif (f1 != f2) fa[f1] = f2;\n}\ninline void add(int u,int v) {\n\tgra[++ idx].v = v,gra[idx].nxt = head[u],head[u] = idx;\n}\nint main(void) {\n#ifndef ONLINE_JUDGE\n\tfreopen(\"in.txt\",\"r\",stdin);\n#endif\n\tn = read(),m = read();\n\tfor (register int i = 1;i <= m; ++ i) {\n\t\tint u = read(),v = read();\n\t\tadd(u,v),add(v,u);\n\t\tdeg[u] ++,deg[v] ++;\n\t}\n\tint minn = 1;\n\tfor (register int i = 1;i <= n; ++ i) {\n\t\tif (deg[i] < deg[minn]) {\n\t\t\tminn = i;\n\t\t}\n\t}\n\tfor (register int i = head[minn];i;i = gra[i].nxt) {\n\t\tint v = gra[i].v;\n\t\tvis[v] = true;\n\t}\n\tfor (register int i = 1;i <= n; ++ i) {\n\t\tfa[i] = i;\n\t}\n\tfor (register int i = 1;i <= n; ++ i) {\n\t\tif (!vis[i]) {\n\t\t\tmerge(i,minn);\n\t\t}\n\t}\n\tfor (register int i = 1;i <= n; ++ i) {\n\t\tif (vis[i]) {\n\t\t\tmst(st,false);\n\t\t\tfor (register int j = head[i];j;j = gra[j].nxt) {\n\t\t\t\tint v = gra[j].v;\n\t\t\t\tst[v] = true;\n\t\t\t}\n\t\t\tfor (register int j = 1;j <= n; ++ j) {\n\t\t\t\tif (!st[j]) {\n\t\t\t\t\tmerge(j,i);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tint col = 0;\n\tfor (register int i = 1;i <= n; ++ i) {\n\t\tif (fa[i] == i) {\n\t\t\tans[i] = ++ col;\n\t\t}\n\t}\n\tfor (register int i = 1;i <= n; ++ i) {\n\t\tsiz[ans[getf(i)]] ++;\n\t}\n\tstd::sort(siz + 1,siz + col + 1);\n\tprintf(\"%d\\n\",col);\n\tfor (register int i = 1;i <= col; ++ i) {\n\t\tprintf(\"%d \",siz[i]);\n\t}\n\n\treturn 0;\n}\n```",
        "postTime": 1652263134,
        "uid": 430409,
        "name": "Coros_Trusds",
        "ccfLevel": 6,
        "title": "CF920E Connected Components?"
    },
    {
        "content": "\u5bf9\u4e00\u4e2a\u56fe\u505a dfs \u65e2\u53ef\u4ee5\u76f4\u63a5 $O(n+m)$ \u505a\uff0c\u4e5f\u6709 $O(n+(\\binom{n}{2}-m))$ \u7684\u679a\u4e3e\u8865\u8fb9\u7684\u65b9\u6cd5\u3002\u5bf9\u8fd9\u9053\u9898\u76ee\u6765\u8bf4\u6211\u4eec\u60f3\u8981\u7684\u662f\u4e00\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u5173\u4e8e\u8fd9\u4e9b\u8865\u8fb9\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002  \n\u76f4\u63a5\u8dd1 dfs \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n^2-m)$\uff0c\u4f46\u662f\u53ea\u4f1a\u8bbf\u95ee\u5230 $O(n)$ \u4e2a\u8282\u70b9\uff0c\u74f6\u9888\u5728\u4e8e\u9700\u8981\u5224\u65ad\u6bcf\u4e00\u6761\u8fb9\u662f\u5426\u5b58\u5728\u548c\u662f\u5426\u7ed9\u539f\u6765\u904d\u5386\u8fc7\u8fd9\u4e2a\u8282\u70b9\u3002\u4e8e\u662f\u8003\u8651\u5982\u4f55\u4fdd\u8bc1\u6bcf\u4e00\u4e2a\u8282\u70b9\u548c\u8865\u8fb9\u53ea\u4f1a\u679a\u4e3e\u5230\u4e00\u6b21\u3002  \n\u5148\u7ef4\u62a4\u4e00\u4e2a set\uff0c\u8fd9\u4e2a set \u4ec5\u4ec5\u6709\u5f53\u524d\u6ca1\u6709\u904d\u5386\u5230\u7684\u4e1c\u897f\u3002\u6bcf\u4e00\u6b21\u6df1\u641c\u904d\u5386\u5230\u67d0\u4e00\u4e2a\u8282\u70b9\u5220\u9664\u5bf9\u5e94\u5143\u7d20\u3002  \n\u7136\u540e\uff0c\u6bcf\u4e00\u6b21\u5230\u4e00\u4e2a\u8282\u70b9\u904d\u5386\u4e00\u6574\u4e2a set \u6765\u627e\u8fd8\u53ef\u4ee5\u904d\u5386\u5230\u54ea\u91cc\u3002\u7531\u4e8e\u6bcf\u4e00\u6761\u8865\u8fb9\u90fd\u6700\u591a\u7ed9\u7edf\u8ba1\u4e24\u6b21\uff0c\u6240\u6709\u5728 set \u91cc\u8282\u70b9\u5747\u644a\u679a\u4e3e\u5230\u7684\u6b21\u6570\u662f $O(n+m)$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O((n+m)\\log n)$\uff0c\u53ef\u4ee5\u8fc7\u3002\n\n\u6838\u5fc3\u4ee3\u7801\uff1a\n\n```cpp\nset<int> has;\nset<pii> ed;\n\nset<int>::iterator dfs(int u, int& cnt) {\n\thas.erase(u); cnt++;\n\tauto at = has.begin();\n\twhile(at != has.end()) {\n\t\tif(ed.count({u,*at})) ++at;\n\t\telse at=dfs(*at, cnt);\n\t}\n\treturn has.upper_bound(u);\n}\n\nsigned main() {\n    ios_base::sync_with_stdio(false); cin.tie(0);\n    int n, m; gi(n), gi(m);\n\trep1(i, n) has.insert(i);\n\twhile(m--) {\n\t\tint u, v; gi(u), gi(v);\n\t\ted.insert({u, v});\n\t\ted.insert({v, u});\n\t}\n\tmultiset<int> ans;\n\twhile(has.size()) {\n\t\tint cnt = 0;\n\t\tdfs(*has.begin(), cnt);\n\t\tans.insert(cnt);\n\t}\n\tprint(ans.size()), pc('\\n');\n\tfor(int k:ans) print(k), pc(' ');\n}\n```",
        "postTime": 1600334744,
        "uid": 220037,
        "name": "w33z8kqrqk8zzzx33",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF920E \u3010Connected Components?\u3011"
    },
    {
        "content": "[CF920E](http://codeforces.com/contest/920/problem/E) _Connected Components?_ : \u94fe\u8868\u4f18\u5316\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u3002\n\n\u9898\u76ee\u5927\u610f\uff1a\u7ed9\u5b9a\u4e00\u5f20\u65e0\u5411\u56fe $G$ , \u6c42 $G$ \u7684\u8865\u56fe\u7684\u8fde\u901a\u5757\u7684\u4e2a\u6570\u3002\n\n\u8fd9\u91cc\u8865\u56fe\u5c31\u662f\u5b8c\u5168\u56fe $K$ \u53bb\u6389\u6240\u6709 $G$ \u4e2d\u7684\u8fde\u8fb9\uff0c\u4e5f\u5c31\u662f\u65ad\u6389\u6240\u6709\u539f\u672c\u8fde\u7740\u7684\u4e24\u4e2a\u70b9\uff0c\u8fde\u4e0a\u6240\u6709\u539f\u672c\u6ca1\u6709\u8fde\u63a5\u7684\u4e24\u4e2a\u70b9\u3002\u8bb0 $G$ \u7684\u8865\u56fe\u4e3a $T$ \u3002\u5982\u679c\u70b9 $s$ \u548c\u70b9 $t$ \u5904\u4e8e\u540c\u4e00\u4e2a\u8fde\u901a\u5757\u4e2d\uff0c\u90a3\u4e48\u4e00\u5b9a\u6709\u4e00\u6761\u8def\u5f84\u53ef\u4ee5\u4ece $s$ \u5230 $t$ ,\u6240\u6709\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\u7684 $s$ \u548c $t$ \u70b9\u7684\u96c6\u5408\u79f0\u4e3a\u4e00\u4e2a\u8fde\u901a\u5757\u3002\n\n\u6211\u4eec\u5148\u5c06\u6240\u6709\u7684\u8fb9\u8bfb\u5165\u8fdb\u6765\uff0c\u5047\u5b9a\u4e00\u5f00\u59cb\u6240\u6709\u7684\u70b9\u90fd\u4e0d\u5c5e\u4e8e\u4efb\u4f55\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u7136\u540e\u5c06\u6240\u6709\u7684\u70b9\u626b\u4e00\u904d\uff0c\u5982\u679c\u53d1\u73b0\u4e00\u4e2a\u70b9 $s$  \u4e0d\u5c5e\u4e8e\u4efb\u4f55\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u4ee5 $s$ \u4e3a\u8d77\u70b9\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff0c\u679a\u4e3e\u4e00\u4e0b\u70b9 $t$ \uff0c\u5982\u679c $s$ \u548c $t$ \u5728 $G$ \u4e2d\u6ca1\u6709\u8fde\u8fb9\uff0c\u5c31\u5c06 $t$ \u52a0\u5165\u961f\u5217\u4e2d\uff0c\u4e0e\u6b64\u540c\u65f6\u8bb0\u5f55\u4e00\u4e0b\u5f53\u524d\u8fde\u901a\u5757\u7684\u5927\u5c0f\u3002\u8fd9\u4e48\u505a\u662f\u6b63\u786e\u7684\uff0c\u9664\u4e86\u8fd9\u4e2a\u8865\u56fe\u6709\u70b9\u975e\u540c\u5bfb\u5e38\u4ee5\u5916\u51e0\u4e4e\u4e0e\u6b63\u5e38\u5730\u6c42\u8fde\u901a\u5757\u6ca1\u6709\u533a\u522b\uff0c\u4f46\u662f\uff0c\u8fd9\u4e48\u505a\u6bcf\u4e00\u6b21\u679a\u4e3e $t$ \u90fd\u8981\u5c1d\u8bd5\u6240\u6709\u53ef\u80fd\u7684\u70b9\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u9ad8\u8fbe $O(N^2)$\uff0c\u96be\u4ee5\u627f\u53d7\u3002\n\nBFS\u4ee3\u7801\u5982\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u4ee5\u8fd9\u4e2a\u4e3a\u6a21\u578b\u8003\u8651\u4f18\u5316\u7684\u65b9\u6848\u3002\n\n```cpp\nint _count(const int &start) {\n\tqueue<int> que; que.push(start);\n\tvis[start] = true;\n\n\tint nowAt, _cnt = 1, i;\n\twhile (!que.empty()) {\n\t\tnowAt = que.front(); que.pop();\n\t\tsort(G[nowAt].begin(), G[nowAt].end());\n\t\tfor (int to = i = 0; to < totPoints; to++) {\n\t\t\tif (i < G[nowAt].size() && to == G[nowAt][i]) { i++; continue; }\n\t\t\tif (!vis[to]) { vis[to] = true; que.push(to); _cnt++; }\n\t\t}\n\t}\n\treturn _cnt;\n}\n```\n\n\u65f6\u95f4\u8d85\u51fa\u9650\u5236\u7684\u6839\u672c\u539f\u56e0\u5c31\u662f\u679a\u4e3e $t$ \u7684\u65f6\u5019\u6d6a\u8d39\u4e86\u5927\u91cf\u7684\u8ba1\u7b97\u80fd\u529b\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u5927\u90e8\u5206\u7684 $t$ \u90fd\u5df2\u7ecf\u5c5e\u4e8e\u5176\u5b83\u7684\u8fde\u901a\u5757\u4e86\uff0c\u56e0\u6b64\u6c38\u8fdc\u4e0d\u53ef\u80fd\u7528\u5f97\u4e0a\uff0c\u80fd\u4e0d\u80fd\u4e0d\u679a\u4e3e\u8fd9\u4e9b\u70b9\u5462\uff1f\u5176\u5b9e\u662f\u53ef\u4ee5\u7684\uff0c\u5982\u679c\u53d1\u73b0\u4e86\u4e00\u4e2a $t$ \u53ef\u4ee5\u52a0\u5165\u5f53\u524d\u7684\u8fde\u901a\u5757\uff0c\u6211\u4eec\u5c06\u5176\u5220\u6389\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u53ef\u4ee5\u7528\u4e00\u79cd\u6570\u636e\u7ed3\u6784\u5728 $O(1)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u5b8c\u6210\u8fd9\u4e00\u64cd\u4f5c\u3002\n\n\u5957\u4e0a\u4e86\u94fe\u8868\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u7528\u4e00\u4e2a\u96c6\u5408 $S$ \u4fdd\u5b58\u56fe $G$ \u4e2d\u6240\u6709\u7684\u8fde\u8fb9\uff0c\u6700\u540e\u5224\u65ad\u4e00\u4e0b\u5982\u679c $s \\to t$ \u8fd9\u6761\u8fb9\u4e0d\u5728\u96c6\u5408 $S$ \u4e2d\uff0c\u8bf4\u660e\u8fd9\u662f\u4e00\u4e2a\u5408\u6cd5\u7684 $t$. \n\nAC\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n//\u94fe\u8868----------------------------\nstruct Node {\n\tint val; Node *nxt;\n\tvoid DeleteNext() {\t\n\t\tif (this->nxt == nullptr)return;\n\t\tNode *it = this->nxt; this->nxt = it->nxt;\n\t\tit = nullptr;\n\t}\n}*frnt = nullptr;\nNode* newNode() {\n\tNode* ext = (Node*)malloc(sizeof(Node));\n\text->nxt = nullptr; return ext;\n}\nvoid build(size_t siz) { //\u5728\u4e00\u5f00\u59cb\uff0c\u6240\u6709\u7684\u70b9\u90fd\u5728\u94fe\u8868\u4e2d\n\tfrnt = newNode(); frnt->val = 0;\n\tNode *it = frnt, *ext;\n\tfor (int i = 1; i < siz; i++) {\n\t\text = newNode(); ext->val = i;\n\t\tit->nxt = ext; it = ext;\n\t}\n}\n//-------------------------------------\n\n#define MAXPOINTS 200005\nvector<int> cnt;\t//\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\u5305\u542b\u7684\u70b9\u7684\u4e2a\u6570\nint totPoints, totEdges;\nbool vis[MAXPOINTS];\n\nstruct Edge {\n\tint fr, to;\n\tbool operator < (Edge comp) const {\n\t\treturn fr == comp.fr ? to < comp.to : fr < comp.fr;\n\t}\n};\nset<Edge> G;\t//\u56feG\n\nint _count(const int &start) {//\u5e7f\u641c\n\tqueue<int> que; que.push(start);\n\tint nowAt, _cnt = 1;\n\n\twhile (!que.empty()) {\n\t\tnowAt = que.front(); que.pop();\n\t\tfor (Node *it = frnt; it != nullptr && it->nxt != nullptr;) {//\u6211\u4e5f\u4e0d\u77e5\u9053\u8fd9\u91cc\u5230\u5e95\u5faa\u73af\u4e86\u591a\u5c11\u6b21\n\t\t\tif (vis[it->nxt->val]) { it->DeleteNext(); continue; }\n\t\t\tif (G.count({ nowAt,it->nxt->val }) || it->nxt->val == nowAt) { it = it->nxt; continue; }\n\t\t\tvis[it->nxt->val] = true; _cnt++;\n\t\t\tque.push(it->nxt->val);\n\t\t\tit->DeleteNext();\n\t\t}\n\t}\n\treturn _cnt;\n}\n\nint main()\n{\n\tmemset(vis, false, sizeof(vis));\n\tint a, b;\n\n\tcin >> totPoints >> totEdges;\n\tfor (int i = 0; i < totEdges; i++) {\n\t\tscanf(\"%d%d\", &a, &b); --a; --b;\n\t\tG.insert({ a,b }); G.insert({ b,a });\n\t}\n\tbuild(totPoints);\n\n\tfor (Node* it = frnt; it != nullptr; it = it->nxt) {\n\t\tif (vis[it->val])continue;\n\t\tvis[it->val] = true;\n\t\tcnt.push_back(_count(it->val));\n\t}\n\n\tcout << cnt.size() << endl;\n\tsort(cnt.begin(), cnt.end());//\u8f93\u51fa\u65f6\u8981\u662f\u6392\u597d\u5e8f\u4e86\u7684\n\tfor (const auto &it : cnt)\n\t\tprintf(\"%d \", it);\n\tputchar('\\n');\n\n\t//system(\"pause\");\n\treturn 0;\n}\n```\n\n ~~\u5176\u5b9e\uff0c\u5982\u679c\u53bb\u6389\u94fe\u8868\u7684\u90e8\u5206\u4e0d\u770b\uff0c\u4ee3\u7801\u8fd8\u662f\u975e\u5e38\u76f4\u89c2\u7684~~ \n\n\u6709\u4e86\u94fe\u8868\u7684\u4f18\u5316\u53ef\u4ee5\u5c06\u6240\u6709\u679a\u4e3e\u5c06\u4e3a $N$ \u6b21\uff0c\u7531\u4e8e\u6bcf\u6b21\u5224\u65ad\u662f\u5426\u5728\u96c6\u5408\u4e2d\u4e3a $O(logN)$ \uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a ~~O(\u7384\u5b66)~~  $O(NlogN)$ ?",
        "postTime": 1535046676,
        "uid": 78371,
        "name": "Mickey_snow",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF920E \u3010Connected Components?\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u5957\u8def\u5b9e\u5728\u592a\u5e38\u89c1\u4e86...\u800c\u4e14\u76f4\u89c9\u505a\u6cd5\u5c31\u662f\u5bf9\u7684.\n\n\u7528\u5230\u7684\u7b26\u53f7\u4e0e\u610f\u4e49\n- $V,E$\u8fb9\u96c6\u5408,\u70b9\u96c6\u5408.\n- $complete(G),c(G)$\u8865\u56fe,$G=(V,E)\\implies c(G)=(V,E(K_{|V|})\\setminus E)$\u5c31\u662f\u53e6\u4e00\u4e2a\u56fe$G'$\u6ee1\u8db3$G,G'$\u8fb9\u96c6\u4e0d\u76f8\u4ea4,\u5e76\u8d77\u6765\u662f\u5b8c\u5168\u56fe.\n- $adj(u)$\u4e0e$u$\u76f8\u90bb\u7684\u70b9,$v\\in adj(u)\\iff (u,v)\\in E$\n\n------\n\n### staetment\n\u7ed9\u51fa\u65e0\u5411\u56fe$G=(V,E)$\u6c42\u8865\u56fe,\u5728$complete(G)$\u4e0a\u9762BFS.  \n\u5176\u4e2d$|E|\\ll \\binom{|V|}{2}$.  \n\u5927\u6982\u590d\u6742\u5ea6\u5728$O(T\\log T),T=|V|+|E|$\u5c31\u53ef\u4ee5\u8fc7.\n\n### sol\n\u611f\u6027\u7406\u89e3\u4e00\u4e0b,\u8fd9\u4e2a\u56fe\u7684\u8054\u901a\u5206\u91cf\u5e94\u8be5\u975e\u5e38\u5c11.  \n\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5BFS,\u8fd9\u6837\u590d\u6742\u5ea6\u4e0d\u4f4e\u4e8e\u8fb9\u6570,\u8fd9\u91cc\u662f$n^2-m$\u663e\u7136\u8fc7\u4e0d\u53bb.  \n\n\u4f46\u662f\u6211\u4eec\u8fd8\u662f\u5e94\u8be5\u5206\u6790\u4e00\u4e0b\u66b4\u529b\u5728$c(G)$\u4e0a\u9762BFS\u4e3a\u4ec0\u4e48\u6162,\u6bd5\u7adf$O(V+E)$\u5df2\u7ecf\u548c\u56fe\u5927\u5c0f\u540c\u9636\u4e86,\u6ca1\u4ec0\u4e48\u76f4\u63a5\u4f18\u5316\u53ef\u4ee5\u505a\u4e86.  \n\u53ef\u4ee5\u8bf4,\u5bf9\u4e8e\u6bcf\u4e2a\u70b9$v$\u6211\u4eec\u68c0\u67e5\u7684\u8fb9\u6570\u5927\u6982\u90fd\u662f$O(n)$\u7684,\u7136\u800c\u5b9e\u9645\u4e0a\u53ef\u7528\u7684\u8fb9\u6570\u91cf\u751a\u81f3\u662f$O(1)$\u7684(0\u6761\u7684\u6ca1\u6709\u65f6\u95f4\u6d88\u8017,n\u70b9\u53ea\u7528n-1\u8fb9\u5c31\u8054\u901a\u4e86).  \n\u8fd9\u542f\u53d1\u6211\u4eec\u5c1d\u8bd5\u4f18\u5316\u5bfb\u627e**\u672a\u8bbf\u95ee,\u4e0d\u5728**$adj(v)$**\u4e2d\u7684\u70b9**\n\u8fd9\u4e00\u6b65,\u8fd9\u4e00\u6b65\u7684\u603b\u590d\u6742\u5ea6\u4e0b\u754c\u662f$O(n)$\u800c\u4e0d\u662f$O(n^2-m)$  \n\n\u6211\u4eec\u60f3\u4e00\u4e2a\u76f4\u89c9\u66b4\u529b,\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u672a\u8bbf\u95ee\u70b9\u96c6$S$,\u5bf9\u4e8e\u4e00\u4e2a\u70b9$u$,\u679a\u4e3e\u91cc\u9762\u7684\u70b9,\u8df3\u8fc7$adj(u)$\u4e2d\u7684\u70b9.\u663e\u7136\u8fd9\u6837\u4e0d\u4f1a\u91cd\u590d\u8bbf\u95ee\u91cd\u590d\u7684\u70b9.....\u5e76\u4e14,\u6bcf\u4e2a\u539f\u56fe\u4e2d\u7684\u8fb9,\u53ea\u4f1a\u88ab\u8003\u8651\u4e00\u6b21.\u6211\u4eec\u5f97\u5230\u4e86\u60ca\u4eba\u7684$O(Tf(T))$\u5176\u4e2d$T=|V|+|E|$\u800c$f(T)$\u8868\u793a\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u7684\u5355\u6b21\u64cd\u4f5c\u5e73\u5747\u590d\u6742\u5ea6.  \n\u5982\u679c\u662f\u5e73\u8861\u6811,\u90a3\u4e48\u5c31\u662f$O(n\\log n)$\u5982\u679c\u662fhash\u8868,\u751a\u81f3\u94fe\u8868,\u53ef\u4ee5\u771f\u7684\u505a\u5230\u7ebf\u6027.  \n\n\n\u56de\u987e\u4e00\u4e0b,\u66b4\u529b\u7684\u95ee\u9898\u5728\u4e8e$c(G)$\u7684\u8fb9\u96c6\u6bd4\u8d77$G$\u5b9e\u5728\u662f\u592a\u5927\u4e86.\u6211\u4eec\u4e0d\u80fd\u64cd\u4f5c$c(G)$\u800c\u53ea\u80fd\u5728$G$\u4e0a\u9762\u73a9. \u627e\u76f8\u90bb\u70b9,\u7ee7\u7eed\u641c\u7d22,\u5728\u8865\u56fe\u4e0a\u9762\u9700\u8981\u6bcf\u6b21\u679a\u4e3e$O(n)$\u4e2a\u8fb9,\u800c\u5728\u539f\u56fe\u4e0a\u9762,\u5220\u6389\u4e0d\u76f8\u90bb\u7684\u70b9\u5176\u5b9e\u53ea\u6709$\\sum deg(u)=m=O(n)$\u7684\u590d\u6742\u5ea6,\u6240\u4ee5\u7ef4\u62a4\u672a\u8bbf\u95ee\u70b9,\u66b4\u529b\u5728\u96c6\u5408\u91cc\u9762\u67e5\u8be2\u4e0d\u4e0e$u$\u76f8\u90bb\u7684\u70b9,\u628a\u8fd9\u4e9b\u70b9\u90fd\u5220\u6389.  \n\n\n\u81ea\u7136\u8bed\u8a00\u63cf\u8ff0\u4e0b,\u4f3c\u4e4e\u4e0d\u592a\u5bb9\u6613\u770b\u61c2\u5b83\u7684\u590d\u6742\u5ea6,\u4f46\u662f\u5199\u51fa\u7a0b\u5e8f\u6765,\u8fd9\u4e2a\u590d\u6742\u5ea6\u5c31\u6bd4\u8f83\u663e\u7136\u4e86,\u770bsolve(int S);\n\n### code\n```cpp\n#include <bits/stdc++.h>\nint read(){\n\tint x=0,f=1; char c;\n\tdo{c=getchar();if(c=='-')f=-1;}while(!isdigit(c));\n\tdo{x=x*10+c-'0';c=getchar();}while(isdigit(c));\n\treturn x*f;\n}\nconst int N=200000+10;\nint n,m,col[N],cnt[N],qwq;\nint q[N],ql,qr;\nstd::vector<int> g[N];\nstd::set<int> tr;\n\nvoid solve(int S){\n\ttr.erase(S); col[S]=++qwq;\n\tq[ql=0]=S;qr=1;\n\twhile(ql<qr){\n\t\tint u=q[ql++]; std::vector<int> tmp;\n\t\tfor(int v:g[u])if(tr.count(v)) tmp.push_back(v);\n\t\tfor(int v:tmp) tr.erase(v);\n\t\tfor(int v:tr) col[q[qr++]=v]=col[u];\n\t\ttr.clear();\n\t\tfor(int v:tmp) tr.insert(v);\n\t}\n// \u7b2c\u4e00\u4e2a,\u7b2c\u4e8c\u4e2a,\u7b2c\u56db\u4e2afor:\u8fd9\u90e8\u5206\u603b\u590d\u6742\u5ea6$O(m\\log n)$\n//       \u6bcf\u6761\u8fb9\u53ea\u8003\u8651\u4e00\u6b21,\u6bcf\u6b21\u90fd\u662f\u5728\u5927\u5c0f\u4e3a$O(n)$\u7684\u5e73\u8861\u6811\u91cc\u9762\u67e5\u8be2.\n// \u7b2c\u4e09\u4e2afor\u4ee5\u53ca\u4e0b\u9762\u7684clear:\u603b\u590d\u6742\u5ea6\u662f$O(n\\log n)$\n//       \u56e0\u4e3a\u8fd9\u91cc\u6bcf\u4e2a\u70b9\u53ea\u80fd\u88ab\u8003\u8651\u4e00\u6b21,\u7528\u5b8c\u5c31\u5220\u6389\u4e86.\n// \u6700\u597d\u662f\u6574\u4e2awhile\u5faa\u73af,\u6211\u4eec\u5b9e\u9645\u4e0a\u8d70\u7684\u8fb9,\u662f\u8865\u56fe\u6bcf\u4e2a\u8054\u901a\u5757\u7684\u4e00\u4e2a\u751f\u6210\u6811,\u6240\u4ee5\u5176\u5b9e\u53ea\u80fd\u8fdb\u5165while\u90e8\u5206$O(n)$\u6b21.\n}\nint main(){\n\tn=read();m=read();\n\tfor(int i=0,a,b;i<m;i++){\n\t\ta=read();b=read();\n\t\tg[a].push_back(b);\n\t\tg[b].push_back(a);\n\t}\n\tfor(int i=1;i<=n;i++) tr.insert(i);\n\tfor(int i=1;i<=n;i++) if(col[i]==0) solve(i);\n\tfor(int i=1;i<=n;i++) cnt[col[i]-1]++;\n\tstd::sort(cnt,cnt+qwq); printf(\"%d\\n\",qwq);\n\tfor(int i=0;i<qwq;i++) printf(\"%d \",cnt[i]);\n\tprintf(\"\\n\");\n\treturn 0;\n}\n```",
        "postTime": 1584494442,
        "uid": 15295,
        "name": "hehelego",
        "ccfLevel": 0,
        "title": "CF920E Connected Components? sol"
    }
]