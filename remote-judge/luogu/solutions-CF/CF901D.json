[
    {
        "content": "\u8fd9\u9898\u771f\u7684\u662f\u4e2a\u6784\u9020\u597d\u9898\u3002\u9996\u5148\u6211\u4eec\u8981\u77e5\u9053\u8fd9\u79cd\u201c\u70b9\u4e0e\u8ddf\u4ed6\u8fde\u7740\u7684\u6240\u6709\u8fb9\u7684\u5173\u7cfb\u201d\u4ec0\u4e48\u7684\u9898\u7684\u5957\u8def\u5c31\u662f**\u627e\u751f\u6210\u6811**\u3002\n\n\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u60c5\u51b5\uff0c\u5373\u8fd9\u4e2a\u56fe\u662f\u4e00\u68f5\u6811\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\uff0c\u4ed6\u4eec\u4ec5\u8fde\u7740\u4e00\u6761\u8fb9\uff0c\u90a3\u4e48\u8fd9\u6761\u8fb9\u7684\u8fb9\u6743\u5c31\u5fc5\u987b\u662f\u53f6\u5b50\u7684\u70b9\u6743\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5220\u6389\u8fd9\u4e2a\u53f6\u5b50\u4e0e\u8fd9\u6761\u8fb9\uff0c\u628a\u4ed6\u7684\u7236\u4eb2\u7684\u70b9\u6743\u51cf\u53bb\u8fb9\u6743\uff0c\u7136\u540e\u6211\u4eec\u5c31\u7b49\u6548\u8f6c\u5316\u5230\u4e86$n-1$\u4e2a\u70b9\u7684\u6811\u7684\u60c5\u51b5\uff0c\u4e8e\u662f\u5c31\u53ef\u4ee5\u7528\u4e00\u904d$dfs$\u4e0d\u65ad\u5730\u81ea\u4e0b\u800c\u4e0a\u7684\u8fd9\u6837\u5f52\u7eb3\u63a8\u51fa\u6bcf\u4e2a\u8fb9\u7684\u8fb9\u6743\u5e76\u4e14\u4fee\u6539\u70b9\u6743\u3002\u663e\u7136\u5728\u6709\u89e3\u7684\u60c5\u51b5\u4e0b$dfs$\u4e4b\u540e\u6839\u7684\u70b9\u6743\u4e00\u5b9a\u662f0\uff0c\u56e0\u4e3a\u4ed6\u4e0a\u9762\u6ca1\u6709\u8fb9\u4e86\u3002\n\n\u7136\u540e\u6211\u4eec\u63a5\u7740\u5c31\u628a\u8fd9\u79cd\u60c5\u51b5\u6269\u5c55\u5230\u4e00\u822c\u56fe\u4e0a\uff0c\u6211\u4eec\u8981\u77e5\u9053\u6784\u9020\u9898\u6709\u4e2a\u5957\u8def\u5c31\u662f\u5f88\u591a\u4e1c\u897f\u7684\u7b54\u6848\u662f\u5bf9\u5168\u5c40\u53ef\u4ee5\u6ca1\u6709\u7528\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5\u8ba9\u4ed6\u4eec\u662f0\uff0c\u6211\u4eec\u4ec5\u4ec5\u5bf9\u5bf9\u5168\u5c40\u7b54\u6848\u6709\u7528\u7684\u90a3\u4e9b\u5f88\u5c11\u7684\u4e00\u90e8\u5206\u53bb\u6c42\u89e3\uff0c\u8fd9\u6837\u95ee\u9898\u89c4\u6a21\u5c31\u4f1a\u7f29\u51cf\u8bb8\u591a\uff0c\u8fd9\u9898\u7684\u4e3b\u8981\u601d\u60f3\u5927\u6982\u5c31\u662f\u8fd9\u6837\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5148\u6c42\u51fa\u4e00\u68f5\u751f\u6210\u6811\uff0c\u8fd9\u6837\u6811\u8fb9\u7684\u7b54\u6848\uff08\u6682\u65f6\u7684\uff09\u5c31\u975e\u5e38\u597d\u6c42\u4e86\u3002\u7136\u540e\u6211\u4eec\u5c31\u60f3\uff0c\u5982\u679c\u73b0\u5728\u7684\u6839\u7684\u70b9\u6743\u4e3a0\uff0c\u90a3\u4e48\u5176\u4ed6\u975e\u6811\u8fb9\u5c31\u6ca1\u6709\u5fc5\u8981\u6c42\u89e3\u4e86\uff0c\u76f4\u63a5\u4fdd\u7559\u6811\u8fb9\u7684\u7b54\u6848\uff0c\u5e76\u5c06\u6240\u6709\u975e\u6811\u8fb9\u76f4\u63a5\u8bbe\u4e3a0\u90a3\u4e48\u6784\u9020\u51fa\u6765\u7684\u8fd9\u4e2a\u89e3\u5c31\u5df2\u7ecf\u53ef\u884c\u4e86\u3002\u5982\u679c\u6839\u4e0d\u662f0\uff0c\u90a3\u4e48\u8bf4\u660e\u6211\u4eec\u53ea\u7559\u7740\u6811\u8fb9\u8fd8\u662f\u4e0d\u884c\uff0c\u5fc5\u987b\u8981\u4e00\u4e9b\uff08\u771f\u7684\u5c31\u662f\u4e00\u4e9b\u5417\uff1f\uff09\u975e\u6811\u8fb9\u4e5f\u53c2\u4e0e\u8fdb\u6765\uff0c\u5e76\u4e14\u8fd8\u8981\u5bf9\u5f53\u524d\u6811\u8fb9\u7684\u7b54\u6848\u8fdb\u884c\u9002\u5f53\u7684\u8c03\u6574\u3002\n\n\u5230\u8fd9\u91cc\u5148\u660e\u786e\u4e00\u4e0b\u6211\u4eec\u73b0\u5728\u7684\u76ee\u6807\u5c31\u662f\u7ed9\u4e00\u4e9b\u975e\u6811\u8fb9\u8d4b\u4e2a\u8fb9\u6743\u4f7f\u5f97\u6839\u8282\u70b9\u7684\u70b9\u6743\u53d8\u62100\u3002\u663e\u7136\u975e\u6811\u8fb9\u52a0\u8fdb\u6765\u4f1a\u4e0e\u6811\u8fb9\u6784\u6210\u73af\uff0c\u5982\u679c\u8981\u8ba9\u4ed6\u7684\u8fb9\u6743\u589e\u52a01\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u5148\u8003\u8651\u4e00\u4e0b\u70b9\u6743\uff0c\u4ed6\u8fde\u7684\u4e24\u4e2a\u70b9$s,t$\u7684\u70b9\u6743\u5f97-1\uff0c\u7136\u540e\u518d\u6cbf\u7740\u8fd9\u4e24\u4e2a\u70b9\u5f80\u4e0a\u8d70\uff0c\u5230\u4ed6\u7684\u7236\u4eb2\u4f1a\u628a\u7236\u4eb2\u7684\u70b9\u6743+1\uff0c\u518d\u5230\u4ed6\u7237\u7237\u4f1a\u628a\u7237\u7237\u7684\u70b9\u6743-1\uff0c\u7136\u540e\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u548c\u9ed1\u767d\u67d3\u8272\u5f88\u50cf\uff0c\u5c31\u662f\u7ecf\u8fc7\u4e00\u6761\u8fb9\u4e4b\u540e\u5c31\u53d6\u4e2a\u53cd\u3002\u8fd9\u4f1a\u5bf9\u6839\u9020\u6210\u4ec0\u4e48\u5f71\u54cd\u5462\uff1f\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u60f3\u5230\u5bf9\u73af\u7684\u5947\u5076\u6027\u8fdb\u884c\u8ba8\u8bba\uff1a\n\n1.\u5076\u73af\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u8003\u8651\u5bf9\u6839\u7684\u5f71\u54cd\uff0c\u8fd9\u76f8\u5f53\u4e8e\u662f\u6539\u53d8\u91cf\u4e0d\u65ad\u5f80\u4e0a\u79fb\u52a8\uff0c\u8fb9\u79fb\u52a8\u4e00\u6761\u8fb9\u8fb9\u628a\u6539\u53d8\u91cf\u53d6\u4e2a\u53cd\uff0c\u6211\u4eec\u5c31\u8003\u8651$LCA(s,t)$\uff0c\u56e0\u4e3a\u6784\u6210\u7684\u73af\u662f\u5076\u73af\uff0c\u6240\u4ee5$s$\u548c$t$\u5230$LCA$\u7684\u8ddd\u79bb\u7684\u5947\u5076\u6027\u662f\u4e0d\u540c\u7684\uff0c\u800c\u5f00\u59cb\u7684\u65f6\u5019$s$\u548c$t$\u6539\u53d8\u91cf\u662f\u76f8\u540c\u7684\uff0c\u6240\u4ee5\u4ed6\u4eec\u5bf9$LCA$\u7684\u6539\u53d8\u91cf\u4f1a\u4e92\u4e3a\u76f8\u53cd\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\u4ed6\u4eec\u7684\u6539\u53d8\u91cf\u4e0d\u65ad\u540c\u65f6\u5f80\u4e0a\u79fb\u52a8\uff0c\u79fb\u52a8\u5230$LCA$\u76f8\u9047\u5230\u4e00\u5757\u5c31\u6210\u4e860\uff0c\u4e8e\u662f\u518d\u5f80\u4e0a\u5c31\u6ca1\u6709\u4efb\u4f55\u6539\u53d8\u91cf\u4e86\uff0c\u6240\u4ee5\u6784\u6210\u5076\u73af\u7684\u975e\u6811\u8fb9\u5bf9\u6839\u7684\u70b9\u6743\u5b8c\u5168\u6ca1\u6709\u5f71\u54cd\uff0c\u6211\u4eec\u4e0d\u7528\u4e5f\u4e0d\u80fd\u7ba1\u4ed6\u4eec\uff0c\u76f4\u63a5\u628a\u4ed6\u4eec\u7684\u7b54\u6848\u90fd\u8bbe\u4e3a0\u3002\n\n2.\u5947\u73af\uff0c\u6839\u636e\u521a\u624d\u5bf9\u5076\u73af\u7684\u8ba8\u8bba\u6211\u4eec\u53d1\u73b0\u5728\u5947\u73af\u4e2d$s$\u548c$t$\u5bf9$LCA$\u7684\u6539\u53d8\u91cf\u4e5f\u662f\u76f8\u540c\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u6539\u53d8\u91cf\u53d8\u4e3a\u4e862\u500d\uff0c\u90a3\u4e48\u518d\u5f80\u4e0a\u6539\u53d8\u91cf\u7684\u7edd\u5bf9\u503c\u59cb\u7ec8\u4f1a\u662f\u539f\u6765\u6539\u53d8\u91cf\u7edd\u5bf9\u503c\u76842\u500d\uff0c\u4e00\u76f4\u5230\u6839\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53d1\u73b0\u5176\u5b9e\u53ea\u9700\u8981\u6539\u53d8\u4e00\u6761\u6784\u6210\u5947\u73af\u7684\u975e\u6811\u8fb9\u7684\u7b54\u6848\u5c31\u884c\u4e86\uff0c\u6211\u4eec\u5c31\u628a\u4ed6\u8fde\u7684\u4e24\u4e2a\u70b9\u51cf\u53bb\u4ed6\u7684\u8fb9\u6743\u7684\u589e\u91cf\uff0c\u7136\u540e\u91cd\u65b0\u5728\u751f\u6210\u6811\u4e0a\u8fdb\u884c\u4e00\u904d\u8ddf\u7b2c\u4e00\u6b65\u7edf\u8ba1\u6811\u8fb9\u7b54\u6848\u4e00\u6837\u7684$dfs$\u628a\u6811\u8fb9\u7684\u7b54\u6848\u8c03\u6574\u4e00\u4e0b\uff0c\u7136\u540e\u5c31\u884c\u4e86\u3002\n\n\u8fd8\u6709\u53ef\u80fd\u4f1a\u6709\u4eba\u95ee\u90a3\u5982\u4f55\u4fdd\u8bc1\u8fb9\u6743\u7684\u8303\u56f4\u5408\u6cd5\u5462\uff1f\u5176\u5b9e\u9898\u76ee\u91cc\u90a3\u4e2a\u8303\u56f4\u7684\u9650\u5236\u662f\u5413\u552c\u4eba\u7528\u7684\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u7684\u70b9\u6743\u90fd\u5728$[-n,n]$\u5185\uff0c\u6240\u4ee5\u4e0d\u96be\u53d1\u73b0\u6211\u4eec\u7b2c\u4e00\u904d$dfs$\u81f3\u591a\u4f1a\u5bf9\u6811\u8fb9\u4ea7\u751f\u7edd\u5bf9\u503c\u4e3a$n^2$\u7684\u8d21\u732e\uff0c\u6839\u8282\u70b9\u80af\u5b9a\u4e5f\u4e0d\u4f1a\u8d85\u8fc7\u8fd9\u4e2a\u9650\u5236\uff0c\u6240\u4ee5\u90a3\u6761\u5947\u73af\u975e\u6811\u8fb9\u4e5f\u4e0d\u4f1a\u8d85\u9650\uff0c\u7b2c\u4e8c\u904d$dfs$\u8c03\u6574\u7684\u7b54\u6848\u8d21\u732e\u7684\u7edd\u5bf9\u503c\u4e5f\u80af\u5b9a\u4e0d\u4f1a\u8d85\u8fc7$n^2$\uff0c\u6240\u4ee5\u5e76\u4e0d\u4f1a\u8d85\u8fc7\u9650\u5236\u3002\n\n\u54e6\uff0c\u5bf9\u4e86\uff0c\u7b54\u6848\u4f1a\u7206$int$~~\uff08\u624b\u52a8\u6ed1\u7a3d~~\n\n\u4e0a\u4ee3\u7801~\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#define int long long\n#define abs(_o) ((_o<0)?-(_o):_o)\nusing namespace std;\ninline int get() {//\u6211\u7684\u5783\u573e\u5feb\u8bfb \n\tint n=0;\n\tchar c;\n\twhile((c=getchar())||23333) {\n\t\tif(c>='0'&&c<='9')break;\n\t\tif(c=='-')goto s;\n\t}\n\tn=c-'0';\n\twhile((c=getchar())||23333) {\n\t\tif(c>='0'&&c<='9')n=n*10+c-'0';\n\t\telse return(n);\n\t}\ns:\n\twhile((c=getchar())||23333) {\n\t\tif(c>='0'&&c<='9')n=n*10-c+'0';\n\t\telse return(n);\n\t}\n}\ntypedef struct _b {\n\tint dest;\n\tint nxt;\n\tint num;\n} bian;\nbian memchi[200001];//\u8fb9 \nint gn=1;\nint heads[200001],ints[100001]\uff1b //\u5e76\u67e5\u96c6 \nint anss[100001]\uff1b//\u6bcf\u6761\u8fb9\u7684\u7b54\u6848 \nint ss[100001],ts[100001]\uff1b//\u8fb9\u7684\u7aef\u70b9 \nint v[100001];//\u70b9\u6743 \ninline void add(int s,int t,int num) {\n\tmemchi[gn].dest=t;\n\tmemchi[gn].nxt=heads[s];\n\tmemchi[gn].num=num;\n\theads[s]=gn;\n\tgn++;\n}\nunsigned char col[100001];//\u56fe\u7684\u67d3\u8272\uff08\u7528\u6765\u5224\u5947\u5076\u73af\u7684\uff09 \nint que[100001];\nunsigned char istree[100001];//\u662f\u5426\u4e3a\u6811\u8fb9 \nvoid print(int num) {//\u5783\u573e\u5feb\u8f93 \n\tif(num<0)putchar('-'),num=-num;\n\tif(num>=10)print(num/10);\n\tputchar(num%10+'0');\n}\nint find(int n) {//\u5e76\u67e5\u96c6 \n\tif(ints[n]==n)return(n);\n\treturn(ints[n]=find(ints[n]));\n}\nvoid dfs(int pt,int baba) {//\u7edf\u8ba1\u7b54\u6848\u7528\u7684dfs \n\tfor(register int i=heads[pt]; i; i=memchi[i].nxt) {\n\t\tif(memchi[i].dest==baba)continue;\n\t\tdfs(memchi[i].dest,pt);\n\t\tanss[memchi[i].num]+=v[memchi[i].dest];\n\t\tv[pt]-=v[memchi[i].dest];\n\t\tv[memchi[i].dest]=0;\n\t}\n}\nint tmp[100o01];\nvoid efs(int pt,int baba) {//\u8fd9\u4e2a\u4e1c\u897f\uff0c\u521a\u624d\u8bf4\u4e86\u5bf9\u6839\u8282\u70b9\u4f1a\u4ea7\u751f\u7edd\u5bf9\u503c\u4e3a2\u7684\u6539\u53d8\u91cf\uff0c\u4f46\u5177\u4f53\u662f+2\u8fd8\u662f-2\u6211\u5c31\u7528\u4e00\u4e2adfs\u7b97\u4e86\u4e00\u4e0b \n\tfor(register int i=heads[pt]; i; i=memchi[i].nxt) {\n\t\tif(memchi[i].dest==baba)continue;\n\t\tefs(memchi[i].dest,pt);\n\t\ttmp[pt]-=tmp[memchi[i].dest];\n\t}\n}\nsigned main() {\n\tint n=get(),m=get();\n\tfor(register int i=1; i<=n; i++)v[i]=get(),ints[i]=i,col[i]=2;\n\tfor(register int i=1; i<=m; i++) {\n\t\tss[i]=get(),ts[i]=get();\n\t\tint aa=find(ss[i]),ab=find(ts[i]);\n\t\tif(aa!=ab) {//\u6811\u8fb9 \n\t\t\tints[aa]=ab;\n\t\t\tadd(ss[i],ts[i],i);\n\t\t\tadd(ts[i],ss[i],i);\n\t\t\tistree[i]=1;\n\t\t}\n\t}\n\tregister int head=0,tail=1;\n\tque[0]=1;\n\tcol[1]=0;\n\tdo {//\u5bf9\u751f\u6210\u6811\u8fdb\u884c\u9ed1\u767d\u67d3\u8272 \n\t\tint me=que[head];\n\t\thead++;\n\t\tfor(register int i=heads[me]; i; i=memchi[i].nxt) {\n\t\t\tif(col[memchi[i].dest]!=2)continue;\n\t\t\tcol[memchi[i].dest]=col[me]^1;\n\t\t\tque[tail]=memchi[i].dest;\n\t\t\ttail++;\n\t\t}\n\t} while(head<tail);\n\tdfs(1,0);\n\tif(abs(v[1])&1) {//\u6839\u8282\u70b9\u70b9\u6743\u4e0d\u662f\u4e8c\u7684\u500d\u6570\uff0c\u65e0\u89e3 \n\t\tprintf(\"NO\\n\");\n\t\treturn(0);\n\t}\n\tif(v[1]==0) {//\u6839\u8282\u70b9\u70b9\u6743\u5df2\u7ecf\u662f0\uff0c\u76f4\u63a5\u4ee4\u975e\u6811\u8fb9\u4e3a0\uff0c\u8f93\u51fa\u7b54\u6848 \n\t\tprintf(\"YES\\n\");\n\t\tfor(register int i=1; i<=m; i++)print(anss[i]),putchar('\\n');\n\t\treturn(0);\n\t}\n\tfor(register int a=1; a<=m; a++) {//\u627e\u5947\u73af\u975e\u6811\u8fb9 \n\t\tif(istree[a])continue;\n\t\tif(col[ss[a]]!=col[ts[a]])continue;\n\t\tprintf(\"YES\\n\");\n\t\tint val=v[1]/2;\n\t\ttmp[ss[a]]++;\n\t\ttmp[ts[a]]++;\n\t\tefs(1,0);\n\t\tif(tmp[1]==2) {\n\t\t\tv[ss[a]]-=val;\n\t\t\tv[ts[a]]-=val;\n\t\t\tanss[a]=val;\n\t\t} else {\n\t\t\tv[ss[a]]+=val;\n\t\t\tv[ts[a]]+=val;\n\t\t\tanss[a]=-val;\n\t\t}\n\t\tdfs(1,0);//\u5bf9\u6811\u8fb9\u8fdb\u884c\u8c03\u6574 \n\t\tfor(register int i=1; i<=m; i++)print(anss[i]),putchar('\\n');\n\t\treturn(0);\n\t}\n\tprintf(\"NO\\n\");\n\treturn(0);\n}\n```\n",
        "postTime": 1540986774,
        "uid": 125124,
        "name": "ywy_c_asm",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF901D \u3010Weighting a Tree\u3011"
    },
    {
        "content": "\u9996\u5148\u770b\u5230\u56fe\uff0c\u6784\u9020\u65b9\u6848\u5c31\u6839\u636e\u5957\u8def\u60f3\u5230\u751f\u6210\u6811\u3002\u53d1\u73b0\u4ece\u53f6\u5b50\u5f00\u59cb\u786e\u5b9a\uff0c\u4e00\u76f4\u5f80\u4e0a\u63a8\uff0c\u8fd9\u6837\u64cd\u4f5c\u5b8c\u540e\u5c31\u4f1a\u4f7f\u5f97\u9664\u4e86\u6839\u8282\u70b9\u4e4b\u5916\u7684\u6240\u6709\u8282\u70b9\u6ee1\u8db3\u6761\u4ef6\u3002\n\n\u7136\u540e\u8003\u8651\u975e\u6811\u8fb9\u3002\u663e\u7136\u4e00\u6761\u975e\u6811\u8fb9\u5728\u6811\u4e0a\u4f1a\u5f62\u6210\u4e00\u4e2a\u73af\uff0c\u624b\u6a21\u53d1\u73b0\u5982\u679c\u73af\u4e0a\u7684\u70b9\u6709\u5076\u6570\u4e2a\u90a3\u4e48\u5bf9\u6839\u8282\u70b9\u5c31\u4e0d\u4f1a\u6709\u4efb\u4f55\u5f71\u54cd\uff0c\u5982\u679c\u6362\u4e0a\u6709\u5947\u6570\u4e2a\u70b9\uff0c\u90a3\u4e48\u5982\u679c\u7ed9\u8fd9\u6761\u8fb9\u7684\u6743\u503c $+1$ \u5c31\u4f1a\u5bf9\u6839\u4f1a\u4ea7\u751f $-2$ \u6216\u8005 $2$ \u7684\u5f71\u54cd\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u968f\u4fbf\u5f04\u51fa\u4e00\u68f5\u751f\u6210\u6811\uff0c\u8d2a\u5fc3\u628a\u9664\u4e86\u6839\u8282\u70b9\u7684\u6240\u6709\u70b9\u90fd\u5f04\u6210\u6ee1\u8db3\u6761\u4ef6\u540e\uff0c\u5148\u5224\u65ad\u6839\u8282\u70b9\u5f53\u524d\u6743\u503c\u4e0e\u76ee\u6807\u6743\u503c\u7684\u5dee\u662f\u5426\u53ef\u4ee5\u88ab $2$ \u6574\u9664\uff0c\u7136\u540e\u518d\u53bb\u4e00\u4e2a\u4e2a\u5904\u7406\u975e\u6811\u8fb9\u6784\u6210\u7684\u73af\uff0c\u627e\u5230\u5947\u73af\u540e\u5c31\u76f4\u63a5\u53bb\u66f4\u65b0\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u66f4\u65b0\u7b54\u6848\u7684\u7ec6\u8282\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u5047\u8bbe\u8fd9\u4e2a\u8fb9\u7684\u6743\u503c $+1$ \u5bf9\u6839\u7684\u8d21\u732e\u662f $2$\uff0c\u90a3\u4e48\u6309\u7167\u8fd9\u4e2a\u52a0\u5b8c\u6743\u503c\u540e\u518d\u91cd\u65b0\u7b97\u6bcf\u4e2a\u8fb9\u7684\u8fb9\u6743\uff0c\u6765\u66f4\u65b0\u70b9\u6743\uff0c\u5982\u679c\u6b64\u65f6\u6839\u8282\u70b9\u7b54\u6848\u4e0d\u662f\u76ee\u6807\u7b54\u6848\uff0c\u90a3\u4e48\u5c31\u6539\u53d8\u6743\u503c\u7684\u6b63\u8d1f\u53f7\uff0c\u91cd\u65b0\u8dd1\u4e00\u904d\u5373\u53ef\u3002\n\n\u56e0\u4e3a\u627e\u5230\u4e00\u4e2a\u5947\u73af\u540e\u5c31\u76f4\u63a5\u8f93\u51fa\u7b54\u6848\u4e86\uff0c\u56e0\u6b64\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n\u5e76\u4e14\u6bcf\u4e2a\u70b9\u7684\u76ee\u6807\u7b54\u6848\u90fd\u662f $\\in[-n,n]$ \u7684\uff0c\u6240\u4ee5\u80af\u5b9a\u4e0d\u4f1a\u8d85\u51fa\u9650\u5236\u3002\n\n[\u4ee3\u7801](https://codeforces.com/contest/901/submission/160441042)",
        "postTime": 1655133098,
        "uid": 121275,
        "name": "Silviac",
        "ccfLevel": 0,
        "title": "\u600e\u4e48\u4f1a\u662f\u5462"
    },
    {
        "content": "## \u6784\u9020\u9898\uff0c\u4e0d\u8981\u60f3\u7684\u90a3\u4e48\u590d\u6742\uff0c\u5c1d\u8bd5\u7528\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u6784\u9020\u51fa\u5440\u4e00\u4e2a\u63a5\u8fd1\u6b63\u786e\u7684\u7b54\u6848\uff0c\u7136\u540e\u8fdb\u884c\u5c3d\u91cf\u5c0f\u7684\u8c03\u6574\n\n\u5982\u679c\u56fe\u662f\u4e00\u68f5\u6811\uff0c\u90a3\u4e48\u65b9\u6848\u5c31\u662f\u552f\u4e00\u7684\uff0c\u76f4\u63a5\u5224\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5426\u5219\u968f\u4fbf\u641e\u4e00\u68f5\u751f\u6210\u6811\uff0c\u5148\u4e0d\u7ba1\u5176\u4ed6\u8fb9\uff0c\u8dd1\u4e00\u904d\u3002\n\n\u8fd9\u65f6\u6839\u8282\u70b9\u53ef\u80fd\u8fd8\u4e0d\u6ee1\u8db3\u6761\u4ef6\u3002\n\n\u8fd9\u65f6\u8003\u8651\u5176\u4ed6\u7684\u8fb9\uff0c\u4e00\u6761\u975e\u6811\u8fb9\u4f1a\u5f62\u6210\u4e00\u4e2a\u73af\u3002\n\n\u5982\u679c\u662f\u4e00\u4e2a\u5076\u73af\uff0c\u90a3\u4e48\u65e0\u8bba\u8fd9\u6761\u975e\u6811\u8fb9\u600e\u4e48\u53d8\uff0c\u90fd\u4e0d\u4f1a\u5bf9\u6839\u8282\u70b9\u4ea7\u751f\u5f71\u54cd\u3002\n\n\u5426\u5219\u662f\u5947\u73af\uff0c\u90a3\u4e48\u5982\u679c\u7ed9\u8fd9\u6761\u975e\u6811\u8fb9\u589e\u52a0\u6216\u51cf\u5c11\u6743\u503c\uff0c\u6839\u8282\u70b9\u4f1a\u53d1\u751f 2 \u7684\u6743\u503c\u53d8\u5316\u3002\n\n\u90a3\u4e48\u5c31\u53ef\u4ee5\u4e86\u3002\n\n**KEY\uff1a**\n\n\u5177\u4f53\u8fb9\u6743\u7684\u8c03\u6574\uff0c\u53d1\u73b0\u8ba8\u8bba\u7684\u60c5\u51b5\u5f88\u591a\uff0c\u4e8e\u662f\u6211\u7528\u4e86\u4e00\u4e2a\u8ba8\u5de7\u7684\u65b9\u6cd5\uff0c\u9996\u5148\u6839\u8282\u70b9\u7684\u6743\u503c\u53d8\u5316\u4e00\u5b9a\u4e0e\u8fd9\u6761\u8fb9\u7684\u6743\u503c\u6210\u6b63\u6bd4\u4f8b\uff0c\u4e8e\u662f\u5148\u628a\u8fd9\u6761\u8fb9\u7684\u6743\u503c\u8bbe\u4e3a1\uff0c\u8dd1\u4e00\u8fb9\uff0c\u5f97\u5230\u6839\u8282\u70b9\u7684\u53d8\u5316\u91cf\uff0c\u5e76\u7b97\u51fa\u8fd9\u6761\u8fb9\u5e94\u6709\u7684\u6743\u503c\uff1b\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<algorithm>\n#include<vector>\n#include<set>\n#include<queue>\n#include<map>\n#include<cstring>\n#include<string>\n#include<bitset>\n#include<iomanip>\nusing namespace std;\n#define ri register int\n#define il inline\n#define pb push_back\n#define LL long long\n#define pairint pair<int,int>\n#define fi first\n#define se second\n#define mp make_pair\n\nnamespace i207M\n{\n\ntemplate<class T>il void in(T &x)\n{\n    x=0; bool f=0; char c=getchar();\n    while(c<'0'||c>'9')\n    {\n        if(c=='-') f=1;\n        c=getchar();\n    }\n    while(c>='0'&&c<='9') x=x*10+(c^'0'),c=getchar();\n    if(f) x=-x;\n}\n\n#define N 100005\n#define int LL\nint v[N<<1],nx[N<<1];\nint head[N],cnte=1;\nil void adde(int uu,int vv)\n{\n\tv[++cnte]=vv,nx[cnte]=head[uu],head[uu]=cnte;\n}\nint n,m;\nint c[N];\nint d[N];\nint ve[N];\nbool chs[N];\nbool vis[N];\nint dep[N];\nint fa[N][17]; // max 2^16\nbool q=1;\nvoid dfs(int x,int f)\n{\n\tvis[x]=1;\n\tif(q)\n\t{\n\t\tdep[x]=dep[f]+1;\n\t\tfa[x][0]=f;\n\t\tfor(ri i=1;i<=16&&fa[x][i-1];++i)\n\t\t\tfa[x][i]=fa[fa[x][i-1]][i-1];\n\t}\n\tfor(ri i=head[x];i;i=nx[i])\n\t\tif(!vis[v[i]])\n\t\t{\n\t\t\tchs[i>>1]=1;\n\t\t\tdfs(v[i],x);\n\t\t\tif(d[v[i]]!=c[v[i]])\n\t\t\t{\n\t\t\t\tve[i>>1]=c[v[i]]-d[v[i]];\n\t\t\t\td[x]+=ve[i>>1];\n\t\t\t\td[v[i]]+=ve[i>>1];\n\t\t\t}\n\t\t}\n}\nil void gun()\n{\n\tputs(\"NO\");\n\texit(0);\n}\nil void done()\n{\n\tputs(\"YES\");\n\tfor(ri i=1;i<=m;++i) printf(\"%lld\\n\",ve[i]);\n\texit(0);\n}\nint lca(int x,int y)\n{\n\tif(dep[x]<dep[y]) swap(x,y);\n\tfor(ri i=16;i>=0;--i)\n\t\tif(dep[fa[x][i]]>=dep[y]) x=fa[x][i];\n\tif(x==y) return x;\n\tfor(ri i=16;i>=0;--i)\n\t\tif(fa[x][i]!=fa[y][i]) x=fa[x][i],y=fa[y][i];\n\treturn fa[x][0];\n}\nsigned main()\n{\n#ifdef M207\n\tfreopen(\"in.in\",\"r\",stdin);\n#endif\n\tin(n),in(m);\n\tfor(ri i=1;i<=n;++i) in(c[i]);\n\tfor(ri i=1,a,b;i<=m;++i)\n\t{\n\t\tin(a),in(b);\n\t\tadde(a,b);\n\t\tadde(b,a);\n\t}\n\tdfs(1,0);\n\tif(d[1]==c[1]) done();\n\telse if((d[1]-c[1])&1) gun();\n\tfor(ri i=1;i<=m;++i)\n\t\tif(!chs[i])\n\t\t{\n\t\t\tint uu=v[i<<1|1],vv=v[i<<1],f=lca(uu,vv);\n\t\t\tif(dep[uu]<dep[vv]) swap(uu,vv);\n\t\t\tint len=dep[uu]+dep[vv]-(dep[f]<<1)+1;\n\t\t\tif(len&1)\n\t\t\t{\n\t\t\t\tint rem=c[1]-d[1];\n\t\t\t\t--c[uu],--c[vv];\n\t\t\t\tq=0; memset(d,0,sizeof d);\n\t\t\t\tmemset(vis,0,sizeof vis);\n\t\t\t\tdfs(1,0);\n\t\t\t\tint tmp=rem/(c[1]-d[1]-rem);\n\t\t\t\t++c[uu],++c[vv];\n\t\t\t\tve[i]-=tmp;\n\t\t\t\tc[uu]+=tmp,c[vv]+=tmp;\n\t\t\t\tmemset(d,0,sizeof d);\n\t\t\t\tmemset(vis,0,sizeof vis);\n\t\t\t\tdfs(1,0);\n\t\t\t\tdone();\n\t\t\t}\n\t\t}\n\tgun();\n    return 0;\n}\n\n\n\n\n}\n\nsigned main()\n{\n    i207M::main();\n    return 0;\n}\n```",
        "postTime": 1540976044,
        "uid": 58302,
        "name": "i207M",
        "ccfLevel": 0,
        "title": "\u6784\u9020\u56fe-CF901D Weighting a Tree-\u89e3\u9898\u62a5\u544a"
    },
    {
        "content": "### $\\text{Difficulty : 2700}$\n---\n### \u89e3\u9898\u601d\u8def\uff1a\n\n\u9996\u5148\u60f3\u5230\u5982\u679c\u662f\u4e00\u68f5\u6811\u7684\u8bdd\u4f1a\u975e\u5e38\u7b80\u5355\uff0c\u76f4\u63a5\u4ece\u53f6\u5b50\u7ed3\u70b9\u51fa\u53d1\uff0c\u4f9d\u6b21\u5411\u4e0a\u63a8\u5bfc\uff0c\u6700\u540e\u53ea\u9700\u8981\u5224\u65ad\u6839\u8282\u70b9\u662f\u5426\u53ef\u884c\u5c31\u7ed3\u675f\u4e86\u3002\n\n\u7136\u540e\u4e00\u4e2a\u56fe\u7684\u8bdd\u53ef\u4ee5\u7406\u89e3\u4e3a\u5728\u8fd9\u4e2a\u6811\u7684\u57fa\u7840\u4e0a\u52a0\u4e0a\u4e86\u82e5\u5e72\u8fb9\uff0c\u8003\u8651\u5bf9\u4e8e\u8fd9\u4e9b\u4e2a\u8fb9\u52a0\u4e0a\u6743\u503c\u4e4b\u540e\u7684\u5f71\u54cd\u3002\u7531\u4e8e\u4e4b\u524d\u505a\u6cd5\u7684\u9650\u5236\uff0c\u80cc\u79bb\u6839\u7684\u65b9\u5411\u8fdb\u884c\u66f4\u6539\u7684\u8bdd\u4e00\u5b9a\u662f\u4e0d\u4f18\u7684\uff0c\u9664\u4e86\u6839\u8282\u70b9\u4ee5\u5916\u7684\u6240\u6709\u70b9\u90fd\u4e00\u5b9a\u662f\u6ee1\u8db3\u6761\u4ef6\u7684\u4e86\u3002\u53ea\u80fd\u5f80\u4e0a\u53d8\u52a8\u5c31\u7b80\u5355\u591a\u4e86\uff0c\u5bf9\u4e8e\u4e4b\u524d\u7b54\u6848\u7684\u6270\u52a8\u4e00\u5b9a\u662f\u4e00\u6b63\u4e00\u8d1f\u8fd9\u6837\u4ea4\u66ff\uff0c\u5982\u679c\u65b0\u8fb9\u94fe\u63a5\u5230\u4e24\u4e2a\u70b9\u5230\u6700\u8fd1\u516c\u5171\u7956\u5148\u7684\u8ddd\u79bb\u7684\u5947\u5076\u6027\u4e00\u6837\u5219\u8be5\u6270\u52a8\u4f1a\u4ee5\u4e24\u500d\u7684\u5927\u5c0f\u7ee7\u7eed\u5411\u4e0a\u5f71\u54cd\u5230\u6839\u8282\u70b9\uff0c\u5426\u5219\u5c31\u76f4\u63a5\u62b5\u6d88\u4e86\u3002\n\n\u95ee\u9898\u7684\u5173\u952e\u5c31\u5728\u4e8e\u65b0\u52a0\u5165\u7684\u4e00\u4e9b\u5f62\u6210\u5947\u73af\u7684\u8fb9\uff0c\u8fd9\u4e9b\u8fb9\u66f4\u6539\u82e5\u5e72\u6743\u503c\u90fd\u4f1a\u5f71\u54cd\u5230\u6839\u8282\u70b9\u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u9884\u89c1\u7684\u662f\u8fd9\u4e9b\u8fb9\u53ea\u80fd\u9020\u6210\u5076\u6570\u7684\u5f71\u54cd\uff0c\u7531\u6b64\u5c31\u53ef\u4ee5\u5728\u5b8c\u6210\u4efb\u610f\u4e00\u68f5\u751f\u6210\u6811\u4e4b\u540e\u5224\u65ad\u662f\u5426\u53ef\u884c\u3002\n\n\u53e6\u4e00\u4e2a\u4e0d\u4f1a\u5728\u4ee3\u7801\u4e2d\u4f53\u73b0\u4f46\u662f\u9700\u8981\u6ce8\u610f\u5230\u7684\u70b9\u5c31\u662f\u503c\u6743\u503c\u7684\u5927\u5c0f\u95ee\u9898\uff0c\u7531\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u6743\u7edd\u5bf9\u503c\u6700\u5927\u4e3a $n$\uff0c\u6700\u540e\u6839\u8282\u70b9\u548c\u521d\u59cb\u503c\u7684\u504f\u5dee\u4e00\u5b9a\u4e0d\u8d85\u8fc7 $n^2+n$\uff0c$2n^2$ \u7684\u6700\u5927\u6743\u503c\u662f\u7edd\u5bf9\u591f\u7528\u7684\u3002\n\n\u6ce8\u610f\u5f00 $\\text{long long}$\u3002\n\n---\n### \u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\n#define int long long\nconst int MAXN=400005;\nint n,m,c[MAXN],head[MAXN],nxt[MAXN],id[MAXN],num[MAXN],f[MAXN];\nint w[MAXN],dep[MAXN],T[MAXN],v[MAXN],x[MAXN],y[MAXN],tot;\nvoid add(int x,int y,int z){\n\tnxt[++tot]=head[x];\n\thead[x]=tot;\n\tnum[tot]=y;\n\tid[tot]=z;\n}\nvoid dfs(int now,int fa,int deep){\n\tdep[now]=deep;v[now]=1;\n\tint note=-1;f[now]=fa;\n\tfor(int i=head[now];i;i=nxt[i]){\n\t\tif(num[i]==fa)note=i;\n\t\telse {\n\t\t\tif(v[num[i]]==0){\n\t\t\t\tT[id[i]]=1,dfs(num[i],now,deep+1);\n\t\t\t}\n\t\t}\n\t}\n\tif(note!=-1){\n\t\tw[id[note]]+=c[now];\n\t\tc[fa]-=c[now];\n\t\tc[now]=0;\n\t}\n}\nsigned main(){\n\tscanf(\"%lld%lld\",&n,&m);\n\tfor(int i=1;i<=n;i++)scanf(\"%lld\",&c[i]);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%lld%lld\",&x[i],&y[i]);\n\t\tadd(x[i],y[i],i);add(y[i],x[i],i);\n\t}\n\tdfs(1,0,0);\n\tif(c[1]==0){\n\t\tprintf(\"YES\\n\");\n\t\tfor(int i=1;i<=m;i++)printf(\"%lld\\n\",w[i]);\n\t\treturn 0;\n\t}\n\tif(c[1]%2==0){\n\t\tint flag=0;\n\t\tfor(int i=1;i<=m;i++){\n\t\t\tif(T[i]==1)continue;\n\t\t\tif((dep[x[i]]+dep[y[i]])%2==0){\n\t\t\t\tif(dep[x[i]]%2==0)w[i]=c[1]/2;\n\t\t\t\telse w[i]=-c[1]/2;\n\t\t\t\tc[x[i]]-=w[i];c[y[i]]-=w[i];\n\t\t\t\tmemset(v,0,sizeof(v));\n\t\t\t\tdfs(1,0,0);\n\t\t\t\tflag=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flag){\n\t\t\tprintf(\"YES\\n\");\n\t\t\tfor(int i=1;i<=m;i++)printf(\"%lld\\n\",w[i]);\n\t\t}\n\t\telse{\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t}\n\telse printf(\"NO\\n\");\n\treturn 0;\n}\n```\n",
        "postTime": 1666567480,
        "uid": 223559,
        "name": "qxp101",
        "ccfLevel": 6,
        "title": "CF901D  Weighting a Tree \u9898\u89e3"
    }
]