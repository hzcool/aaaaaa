[
    {
        "content": "[$$\\color{darkblue}\\Huge\\texttt{My blog}$$](https://dilute.xyz/2020/02/24/Solutions/Solution-CF1314D/)\n\n> \u5f00\u573a 10 \u5206\u949f\u5c31\u6709\u4eba\u8fc7\u7684 1D \uff0c\u4f60\u503c\u5f97\u62e5\u6709\uff01\n>\n> $\\texttt{swap(B, D)}$ \u8b66\u544a\u3002\n\n\u7cbe\u8bfb\u9898\u9762\uff0c\u53d1\u73b0 $k \\le 10$ \uff0c\u8003\u8651\u4ece\u8fd9\u4e2a\u6027\u8d28\u4e2d\u5bfb\u627e\u89e3\u6cd5\u3002\n\n$k \\le 10$ \u610f\u5473\u7740\u6700\u540e\u771f\u6b63\u5bf9\u7ed3\u679c\u4ea7\u751f\u8d21\u732e\u7684\u8282\u70b9\u53ea\u4f1a\u6709 $10$ \u4e2a\u4ee5\u4e0b\u3002\n\n\u7ed3\u5408\u9898\u9762\u4e2d\u7ed9\u51fa\u7684\u300c\u6ca1\u6709\u5947\u73af\u300d\u6761\u4ef6\uff0c\u5bb9\u6613\u60f3\u5230\u4e8c\u5206\u56fe\u9ed1\u767d\u67d3\u8272\u3002\n\n\u8003\u8651\u5bf9\u6bcf\u4e2a\u70b9\u968f\u673a\u67d3 \u9ed1 / \u767d\u8272\uff0c\u518d\u5f3a\u5236\u8d70\u4e24\u7aef\u989c\u8272 **\u4e0d\u76f8\u540c** \u7684\u8fb9\u3002\n\n\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u7528\u7b80\u5355 dp \uff0c$f_{i, j}$ \u8868\u793a\u8d70\u4e86 $i$ \u6761\u8fb9\uff0c\u5f53\u524d\u5728\u8282\u70b9 $j$ \u7684\u6700\u5c0f\u82b1\u8d39\uff0c$\\Theta(n^2k)$ \u76f4\u63a5\u8f6c\u79fb\u5373\u53ef\u3002\n\n\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\u82e5\u5e72\u904d\u5373\u53ef\u3002\n\n\u6211\u4eec\u7ee7\u7eed\u8003\u8651\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u89e3\u6cd5\u662f\u5927\u6982\u7387\u6b63\u786e\u7684\u3002\n\n\u8003\u8651\u5982\u679c\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\u6700\u7ec8\u7684\u4e00\u6761\u6700\u4f18\u8def\u5f84\uff0c\u8fd9\u4e0a\u9762\u6700\u591a\u6709 $k$ \u4e2a\u70b9\u3002\n\n\u90a3\u4e48\u8fd9 $k$ \u4e2a\u70b9\u5728\u4e00\u79cd\u67d3\u8272\u65b9\u6848\u4e2d\u9ed1\u767d\u76f8\u95f4\u7684\u6982\u7387\u662f $\\frac{1}{2^{k - 1}}$ \uff0c\u5728 $k = 10$ \u7684\u60c5\u51b5\u4e0b\u5c31\u662f $\\frac{1}{512}$\u3002\n\n\u968f\u673a $5000$ \u6b21\u7684\u60c5\u51b5\u4e0b\uff0c\u968f\u4e0d\u51fa\u6b63\u786e\u7b54\u6848\u7684\u6982\u7387\u662f $(\\frac{511}{512})^{5000} \\approx 0.000056845461206$ \uff0c\u975e\u5e38\u5c0f\uff0c\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1\u3002\n\n\u8fd9\u89e3\u6cd5\u5c31 ** \u79bb\u8c31\u3002\n\n```cpp\n#include<bits/stdc++.h>\n\n#define ll long long\n#define INF 2147483647\n\nint inp(){\n    char c = getchar();\n    while(c < '0' || c > '9')\n        c = getchar();\n    int sum = 0;\n    while(c >= '0' && c <= '9'){\n        sum = sum * 10 + c - '0';\n        c = getchar();\n    }\n    return sum;\n}\n\nll f[20][100], dis[100][100];\nint c[100];\n\nint main(){\n    srand((unsigned)time(NULL));\n    int n = inp();\n    int k = inp();\n    int T = 5000;\n    for(int i = 1; i <= n; i++)\n        for(int j = 1; j <= n; j++)\n            dis[i][j] = inp();\n    ll ans = 1e18;\n    while(T--){\n        for(int i = 1; i <= n; i++){\n            c[i] = rand() & 1;\n            f[0][i] = 1e18;\n        }\n        f[0][1] = 0;\n        for(int i = 0; i < k; i++){\n            for(int j = 1; j <= n; j++)\n                f[i + 1][j] = 1e18;\n            for(int j = 1; j <= n; j++)\n                for(int u = 1; u <= n; u++)\n                    if(c[j] != c[u])\n                        f[i + 1][u] = std::min(f[i + 1][u], f[i][j] + dis[j][u]);\n        }\n        ans = std::min(ans, f[k][1]);\n    }\n    printf(\"%lld\\n\", ans);\n}\n```",
        "postTime": 1582939110,
        "uid": 36362,
        "name": "Dilute",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1310D \u3010Tourism\u3011"
    },
    {
        "content": "\u6211\u6765\u5199\u4e00\u4e2a\u4e0d\u662f\u968f\u673a\u7684\u505a\u6cd5\u3002\u8bbe\u7b54\u6848\u8def\u5f84\u4e3a$a_1,a_2,...,a_k,a_{k+1}$,\u5176\u4e2d$a_1=a_{k+1}=1$\u3002\u4e0d\u5b58\u5728\u5947\u73af\u5373\u5bf9\u4e8e\u4efb\u610f\u5947\u5076\u6027\u4e0d\u540c\u7684$i,j$\uff0c\u6ee1\u8db3$a_i\\not=a_j$\n\n\u9996\u5148\u6ca1\u6709\u5947\u73af\u8ba9\u4eba\u60f3\u5230\u4e8c\u5206\u56fe\u3002\u501f\u7528\u4e8c\u5206\u56fe\u7684\u601d\u60f3\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u8def\u5f84\u4e2d\u7684$a_3,a_5,...,a_{k-1}$\uff0c\u73b0\u5728\u6211\u4eec\u9700\u8981\u786e\u5b9a\u4e0b\u6807\u4e3a\u5076\u6570\u7684\u70b9\u3002\u56e0\u4e3a\u4e0d\u80fd\u6709\u5947\u73af\u6761\u4ef6\u7684\u5b58\u5728\uff0c\u5076\u6570\u4e0b\u6807\u7684\u70b9\u4e0d\u80fd\u4e0e\u5947\u6570\u4e0b\u6807\u7684\u70b9\u76f8\u540c\uff0c\u4f46\u662f\u5947\u6570\u4e0b\u6807\u7684\u4e0d\u540c\u7684\u70b9\u6700\u591a\u53ea\u67095\u4e2a\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u5bf9\u4e8e\u6bcf\u4e2a\u6709\u5e8f\u70b9\u5bf9\uff08u,v\uff09\uff0c\u4eceu\u6cbf\u76f8\u90bb\u8fb9\u76f4\u63a5\u8d70\u5230\u67d0\u4e2a\u4e0d\u4e3a1\u7684\u70b9\uff0c\u7136\u540e\u76f4\u63a5\u5230\u8fbev\u7684\u524d4\u77ed\u7684\u8def\u5f84\uff0c\u4ee5\u53ca\u5176\u5bf9\u5e94\u7684\u4e2d\u95f4\u70b9\u7684\u5e8f\u53f7\uff0c\u8fd9\u4e00\u6b65\u64cd\u4f5c\u53ea\u9700\u8981\u679a\u4e3e\u4e2d\u95f4\u70b9\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u5bf9\u662f$O(n)$\u7684\u3002\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u5bf9\u76f8\u90bb\u7684\u5947\u6570\u4e0b\u6807\u7684\u70b9$a_{2t-1},a_{2t+1}$\uff0c\u786e\u5b9a\u4e00\u4e2a\u6700\u4f18\u7684\u5939\u5728\u5b83\u4eec\u4e2d\u95f4\u7684$a_{2t}$\uff0c\u4f7f\u5f97$a_{2t}$\u4e0e\u6240\u6709\u7684\u5947\u6570\u4e0b\u6807\u7684\u70b9\u90fd\u4e0d\u540c\uff0c\u4e14\u8def\u5f84\u957f\u5ea6\u6700\u77ed\uff0c\u76f4\u63a5\u5728\u524d\u9762\u5904\u7406\u51fa\u7684\u56db\u4e2a\u5019\u9009\u89e3\u5f53\u4e2d\u67e5\u627e\u5373\u53ef\u3002\n\n\u9884\u5904\u7406\u590d\u6742\u5ea6$O(n^3)$\uff0c\u679a\u4e3e\u590d\u6742\u5ea6$O((\\frac{k}{2}-1)n^{\\frac{k}{2}-1})$\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002",
        "postTime": 1582766455,
        "uid": 19639,
        "name": "aison",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1310D \u3010Tourism\u3011"
    },
    {
        "content": "\u4e00\u9053\u6709\u8da3\u7684\u9898\u76ee\u3002\n\n## \u601d\u8def\n\n\u4f17\u6240\u5468\u77e5\uff0c\u4e8c\u5206\u56fe\u3001\u67d3\u8272\u6cd5\u6ca1\u6709\u77db\u76fe\uff0c\u56fe\u4e2d\u6ca1\u6709\u5947\u73af\uff0c\u4e09\u8005**\u662f\u7b49\u4ef7\u7684**\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u628a\u5947\u73af\u7684\u6761\u4ef6\u8f6c\u5316\u4e3a**\u4e8c\u5206\u56fe**\u3002\n\n\u4f46\u662f\u6ca1\u6709\u4efb\u4f55\u6709\u5173\u9ed1\u767d\u70b9\u7684\u95ee\u9898\uff0c\u800c\u4e14\u8fd9\u4e2a\u56fe\u4e5f\u663e\u7136\u548c\u4e8c\u5206\u56fe\u6ca1\u6709\u5173\u7cfb\u3002\u8fd9\u600e\u4e48\u529e\u5462\uff1f\n\n\u6ca1\u6709\u6761\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u521b\u9020\uff01\n\n**\u8003\u8651\u968f\u673a\u5316**\u3002\u968f\u4fbf\u4e71\u7ed9\u6bcf\u4e2a\u70b9\u4e00\u4e2a $a_i \\in \\{0, 1\\}$ \u7684\u6743\u503c\u3002\n\n\u6309\u7167\u4e8c\u5206\u56fe\u7684\u5b9a\u4e49\uff0c\u6bcf\u6761\u8fb9\u5e94\u8be5\u53ea\u7ec3\u4e24\u4e2a\u96c6\u5408\u5185\u7684\u70b9\u3002\u6240\u4ee5\u53ea\u80fd\u8fde $a_u \\ne a_v$ \u7684\u8fb9\uff08$u \\to v$\uff09\u3002\n\n\u7136\u540e\u968f\u4fbf DP \u5373\u53ef\u3002\u8bbe $dp_{u, i}$ \u8868\u793a\u5f53\u524d\u662f $u$ \u53f7\u70b9\uff0c\u8d70\u4e86 $i$ \u6b65\uff0c\u6700\u77ed\u8ddd\u79bb\u3002\u90a3\u4e48\u5f88\u5bb9\u6613\u8f6c\u79fb\uff1a\n\n$$dp_{v, i} = \\min\\limits_{a_u \\ne a_v} dp_{u, i - 1} + e_{u, v}$$\n\n\u521d\u59cb\u5316 $\\infty$\uff0c$dp_{1, 0} = 0$\u3002\u7b54\u6848\u5373\u4e3a $dp_{1, k}$\u3002\n\n---\n\n\u6b64\u65f6\u4f60\u8bd5\u4e00\u4e0b\u6837\u4f8b\uff0c\u6709\u65f6\u5019\u8fc7\u6709\u65f6\u5019\u4e0d\u8fc7\u3002\u8fd9\u5f88\u6b63\u5e38\uff0c\u56e0\u4e3a\u662f\u968f\u673a\u5316\u3002\n\n\u6240\u4ee5\u591a\u6765\u51e0\u904d\u5c31\u884c\u3002\u4f60\u53ef\u4ee5\u6709\u4e24\u79cd\u9009\u62e9\uff0c\u90fd\u662f\u5f88\u4fdd\u9669\u7684\u505a\u6cd5\uff1a\n\n\u7b2c\u4e00\u4e2a\u65b9\u6cd5\uff0c\u8bbe\u7f6e\u4e00\u4e2a\u5b9a\u503c $T$\u3002\u8dd1 $T$ \u6b21\u8fd9\u4e2a\u7a0b\u5e8f\u5373\u53ef\u3002\u4f46\u662f\u8fd9\u4e2a $T$ \u9700\u8981\u8db3\u591f\u5927\u3002\n\n```cpp\nint T = 1000;\nwhile (T--) ans = min(ans, solve());\n```\n\u7b2c\u4e8c\u4e2a\u65b9\u6cd5\uff0c\u8fd9\u9898\u65f6\u95f4\u662f $3$ \u79d2\u3002\u6211\u4eec\u5feb\u8d85\u65f6\u4e86\u518d\u8f93\u51fa\u7b54\u6848\uff0c\u975e\u5e38\u7a33\u5b9a\uff01\n\n```cpp\nsrand(time(NULL));\ndouble st = clock();\nwhile ((clock() - st) / CLOCKS_PER_SEC <= 2.8) ans = min(ans, solve());\n```\n\n\u7136\u540e\u8fd9\u9898\u5c31\u505a\u5b8c\u4e86\u3002\u6240\u4ee5\u8fd9\u771f\u66b4\u529b\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <ctime>\n#include <cstring>\nusing namespace std;\nconst int N = 105, K = 15;\nint n, k;\nint e[N][N], a[K], dp[N][K];\nint solve()\n{\n\tfor (int i = 1; i <= n; i++) a[i] = (rand() & 1); //\u968f\u673a\n\tmemset(dp, 0x3f, sizeof dp), dp[1][0] = 0;\n\tfor (int i = 1; i <= k; i++) //\u76f4\u63a5\u8dd1 DP\n\t\tfor (int u = 1; u <= n; u++)\n\t\t\tfor (int v = 1; v <= n; v++)\n\t\t\t\tif (a[u] != a[v])\n\t\t\t\t\tdp[v][i] = min(dp[v][i], dp[u][i - 1] + e[u][v]);\n\treturn dp[1][k];\t\n}\nint main()\n{\n\tscanf(\"%d%d\", &n, &k);\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= n; j++)\n\t\t\tscanf(\"%d\", &e[i][j]);\n\tsrand(time(NULL));\n\tdouble st = clock(); int ans = 2147483647;\n\twhile ((clock() - st) / CLOCKS_PER_SEC <= 2.8) ans = min(ans, solve()); //\u4e5f\u53ef\u4ee5\u91c7\u7528\u7b2c\u4e00\u79cd\u65b9\u6cd5\n\tcout << ans;\n\treturn 0;\n}\n```\n\n\u5e0c\u671b\u80fd\u5e2e\u52a9\u5230\u5927\u5bb6\uff01",
        "postTime": 1673425511,
        "uid": 687698,
        "name": "_dijkstra_",
        "ccfLevel": 0,
        "title": "CF1310D \u9898\u89e3"
    },
    {
        "content": "### **\u5410\u69fd:** \n\u4e3a\u4ec0\u4e48\u8fd9\u573aCF\u2026\u4e0d\u5bfb\u5e38\uff0c1D\u4e0d\u5e94\u8be5\u662f2F\u4e48\u2026[\u60b2]\n\n### **\u9898\u610f:**\n\u7ed9\u5b9a\u4e00\u4e2a\u5b8c\u5168\u56fe\uff0c\u8def\u5f84\u5e26\u6743\u4e14 $dis_{i,j}$ \u4e0d\u4e00\u5b9a\u7b49\u4e8e $dis_{j,i}$\uff0c\u8fb9\u6570\u4e3a$k$\u4e0d\u5b58\u5728\u5947\u73af\u4e14\u8d77\u70b9\u548c\u7ec8\u70b9\u90fd\u662f$1$\u7684\u6700\u5c0f\u8def\u5f84\u3002\n\n\u7531\u4e8e\u8981\u6ee1\u8db3\u4e0d\u5b58\u5728\u5947\u73af\uff0c\u9700\u8981\u5c06\u8fd9\u4e2a\u56fe\u9ed1\u767d\u67d3\u8272\uff0c\u7136\u540e\u6bcf\u6b21\u90fd\u7ecf\u8fc7\u9ed1\u767d\u8fb9\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u6709\u5947\u73af\u3002\u4f46\u662f\u679a\u4e3e\u8fd9\u4e2a\u70b9\u662f\u9ed1\u8fd8\u662f\u767d\u8272\u2026\u590d\u6742\u5ea6\u5c31\u53ef\u4ee5\u5230 $2^n * kn^2$\uff0c\u663e\u7136\u4e0d\u53ef\u4ee5\uff0c\u7136\u540e\u4f1a\u53d1\u73b0\u5b9e\u9645\u4e0a\u4f60\u6700\u591a $k$ \u4e2a\u70b9\u9700\u8981\u67d3\u8272\u6b63\u786e\uff0c\u56e0\u4e3a\u4f60\u7684\u8fb9\u4e0d\u4f1a\u8d85\u8fc7 $k$\uff0c\u6240\u4ee5\u7406\u8bba\u4e0a$2^{k}$\u6b21\u968f\u673a\u5c31\u591f\u7528\u4e86\u3002\n\n### **code:**\n\n```cpp\n#include <bits/stdc++.h>\nint read() {\n\tint x = 0 ;\n\tchar c = getchar() ;\n\twhile(c < 48) c = getchar() ;\n\twhile(c > 47) x = x * 10 + (c - 48) , c = getchar() ;\n\treturn x ;\n}\n\nint n, k;\nconst int maxn = 88 ;\nint dis[maxn][maxn] ;\nint dp[11][maxn] ;\nint main() {\n\tn = read() , k = read() ;\n\tfor(int i = 1 ; i <= n ; i ++)\n\t\tfor(int j = 1 ; j <= n ; j ++)\n\t\t\tdis[i][j] = read() ;\n\tint seed = 0 ;\n\tfor(char c : \"sooketxdy\")\n\t\tseed = seed * 233 + c ;\n\tsrand(seed) ;\n\tint times = 5000 ;\n\tstd :: vector < int > col(n + 1 , 0);\n\tint ans = 1e9 ;\n\twhile(times --) {\n\t\tfor(int i = 1 ; i <= n ; i ++)\n\t\t\tcol[i] = rand() & 1 ;\n\t\tmemset(dp , 0x3f , sizeof(dp)) ;\n\t\tdp[0][1] = 0;\n\t\tfor(int kk = 0 ; kk < k ; kk ++)\n\t\t\tfor(int i = 1 ; i <= n ; i ++)\n\t\t\t\tfor(int j = 1 ; j <= n ; j ++)\n\t\t\t\t\tif(col[i] ^ col[j]) dp[kk + 1][j] = std :: min(dp[kk + 1][j] , dp[kk][i] + dis[i][j]) ;\n\t\tans = std :: min(ans , dp[k][1]) ;\n\t}\n\tprintf(\"%d\" , ans) ;\n\treturn 0 ;\n}\n```",
        "postTime": 1582692253,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1310D \u3010Tourism\u3011"
    }
]