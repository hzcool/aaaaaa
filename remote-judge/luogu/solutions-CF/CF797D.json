[
    {
        "content": "# Broken BST\n\u7ed9\u4e00\u68f5\u4e8c\u53c9\u641c\u7d22\u6811,\u4f46\u662f\u4e0d\u4fdd\u8bc1\u8fd9\u662f\u4e00\u68f5\u6b63\u786e\u7684\u4e8c\u53c9\u641c\u7d22\u6811,\u90a3\u4e48\u6309\u7167\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u641c\u7d22\u7b97\u6cd5(\u5c0f\u5f80\u5de6,\u5927\u5f80\u53f3),\u53ef\u80fd\u627e\u4e0d\u5230\u67d0\u4e9b\u8282\u70b9,\u4f60\u7684\u4efb\u52a1\u662f\u8ba1\u7b97\u6709\u591a\u5c11\u8282\u70b9\u5c06\u4e0d\u4f1a\u88ab\u904d\u5386\u5230\n## \u5e7f\u544a\u63d2\u5165\n\u5728\u6211\u7684\u535a\u5ba2\u91cc\u770b\u9898\u89e3\u4f7f\u7528\u6548\u679c\u66f4\u4f73\u54e6QwQ\n\n[\u6155\u5bb9\u7433\u7684\u540e\u82b1\u56ed](https://muronglin.top/hgoi-20190509/)\n## \u89e3\u6cd5\n\u8fd9\u9053\u9898\u9898\u610f\u6709\u70b9\u96be\u7406\u89e3\u3002\u3002\u3002\u5982\u679c\u6709\u76f8\u540c\u7684\u6570\u5b57\uff0c\u53ea\u8981\u6709\u4e00\u4e2a\u88ab\u904d\u5386\u5230\u4e86\uff0c\u5176\u4ed6\u90fd\u4f1a\u88ab\u904d\u5386\u5230emm\n\n\u5982\u679c\u66b4\u529b\u7684\u53bb\u67e5\u8be2\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684\u8bdd\uff0c\u4e00\u6761\u94fe\u5c31\u88ab\u5361\u6210n\u65b9\u4e86emmm\n\n\u6240\u4ee5\u6362\u4e00\u79cd\u65b9\u6cd5\uff0c\u56e0\u4e3a\u4e8c\u53c9\u641c\u7d22\u6811\u4e0a\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u6709\u4e00\u4e2a\u8303\u56f4l<x<r\uff0c\u5982\u679c\u6ee1\u8db3\uff0c\u8fd9\u4e2a\u70b9\u5c31\u626b\u5f97\u5230\n\n\u7531\u4e8e\u5f88\u5751\u7684\u9898\u610f\uff0c\u7528\u4e2amap\u5b58\u4e00\u4e0b\uff0c\u5c31\u5dee\u4e0d\u591a\u4e86\n## ac\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,rt,a[100010],ls[100010],rs[100010],vis[100010],ans;\nmap<int,bool>mp;\nvoid f(int nw){if(nw==-1)return;vis[nw]=1;}\nvoid dfs(int nw,int l,int r)\n{\n    if(nw==-1)return ;\n    if(a[nw]>l&&a[nw]<r)mp[a[nw]]=1;\n    dfs(ls[nw],l,min(r,a[nw])),dfs(rs[nw],max(l,a[nw]),r);\n}\nvoid get_ans(){for(int i=1;i<=n;i++)if(!mp[a[i]])ans++;}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)scanf(\"%d%d%d\",&a[i],&ls[i],&rs[i]),f(ls[i]),f(rs[i]);\n    for(int i=1;i<=n;i++)if(!vis[i])rt=i;\n    dfs(rt,-1,1e9+1),get_ans(),printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1557378200,
        "uid": 24663,
        "name": "\u6ce0\u5c0f\u6bd2",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF797D \u3010Broken BST\u3011"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/Coros-Trusds/p/15760757.html)\n\n\u987a\u7740\u6811\u5256\u7684\u63a8\u8350\u9898\u76ee\u70b9\u8fdb\u6765\u7684\uff0c\u6ca1\u60f3\u5230\u538b\u6839\u4e0d\u662f\u6811\u5256\uff0c\u4ee3\u7801\u8fd8\u5f88\u77ed $\\verb!qwq!$\u3002\n\n# \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u68f5 $\\rm BST$\uff0c\u4f46\u662f\u4e0d\u4fdd\u8bc1\u8fd9\u662f\u4e00\u68f5\u6b63\u786e\u7684 $\\rm BST$\u3002\n\n\u8bf7\u8ba1\u7b97\u6709\u591a\u5c11\u8282\u70b9\u4e0d\u4f1a\u88ab\u904d\u5386\u5230\u3002\n\n# \u9898\u76ee\u5206\u6790\n\n\u5728 $\\rm BST$ \u4e2d\uff0c\u8282\u70b9 $u$ \u4e00\u5b9a\u6ee1\u8db3 $val[ls(u)]<val[u],val[rs(u)]>val[u]$\uff0c\u6839\u636e\u8fd9\u4e2a\u6027\u8d28\uff0c\u4e00\u4e2a\u6570\u80fd\u591f\u88ab\u627e\u5230\u5f53\u4e14\u4ec5\u5f53 $l<val[u]<r$\u3002\n\n\u5728 $\\rm dfs$ \u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 $map$ \u6765\u6620\u5c04\u6bcf\u4e2a\u8282\u70b9\u662f\u5426\u88ab\u627e\u5230\uff0c\u6700\u540e\u67e5\u627e\u5c31\u5f88\u65b9\u4fbf\u3002\n\n\u4e8e\u662f\u5c31\u505a\u5b8c\u4e86\u3002\n\n# \u4ee3\u7801\n\n\u6ce8\u610f `dfs(rt,-1,1e9+1)`\uff0c\u56e0\u4e3a $\\rm dfs$ \u4e2d\u6211\u4eec\u662f `<` \u548c `>`\uff0c\u6240\u4ee5\u8fd9\u91cc\u5e94\u5f53\u6ee1\u8db3 $l\\ge0-1,r\\le10^9+1$\u3002\n\n```cpp\n//2022/1/3\n\nconst int ma=1e5+5;\n\nint a[ma],ls[ma],rs[ma];\n\nbool have_fa[ma];\n\nint n;\n\nmap<int,bool>mp;\n\ninline void dfs(int now,int l,int r)\n{\n\tif(now==-1)\n\t{\n\t\treturn;\n\t}\n\t\n\tif(a[now]>l && a[now]<r)\n\t{\n\t\tmp[a[now]]=true;\n\t}\n\t\n\tdfs(ls[now],l,min(r,a[now]));\n\t\n\tdfs(rs[now],max(l,a[now]),r);\n}\n\nint main(void)\n{\n\tn=read();\n\t\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\ta[i]=read(),ls[i]=read(),rs[i]=read();\n\t\t\n\t\tif(ls[i]!=-1)\n\t\t{\n\t\t\thave_fa[ls[i]]=true;\n\t\t}\n\t\t\n\t\tif(rs[i]!=-1)\n\t\t{\n\t\t\thave_fa[rs[i]]=true;\n\t\t}\n\t}\n\t\n\tint rt;\n\t\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tif(have_fa[i]==false)\n\t\t{\n\t\t\trt=i;\n\t\t\t\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tdfs(rt,-1,1e9+1);\n\t\n\tint ans=0;\n\t\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tif(mp[a[i]]==false)\n\t\t{\n\t\t\tans++;\n\t\t}\n\t}\n\t\n\tprintf(\"%d\\n\",ans);\n\t\n\treturn 0;\n}\n```",
        "postTime": 1641219289,
        "uid": 430409,
        "name": "Coros_Trusds",
        "ccfLevel": 6,
        "title": "CF797D Broken BST"
    },
    {
        "content": "\u904d\u5386\u8fd9\u9898\u7684\u9898\u610f\u975e\u5e38\u5751\u4eba\uff0c\u82e5\u6709\u591a\u4e2a\u70b9\u6570\u503c\u76f8\u540c\u90a3\u4e48\u53ea\u8981\u4e00\u4e2a\u88ab\u904d\u5386\u5230\u4e86\uff0c\u5176\u4ed6\u5c31\u7b97\u904d\u5386\u88ab\u5230\u4e86\uff0c\u4f46\u5047\u5982\u4efb\u4f55\u4e00\u4e2a\u5e26\u6709\u8fd9\u4e2a\u6570\u503c\u7684\u8282\u70b9\u90fd\u6ca1\u6709\u88ab\u904d\u5386\u5230\u7684\u8bdd\u90a3\u4e48\u6240\u6709\u5e26\u6709\u8fd9\u4e2a\u6570\u503c\u7684\u8282\u70b9\u90fd\u4f1a\u88ab\u7b97\u5728\u7b54\u6848\u91cc\uff08~~\u4ec0\u4e48\u9b3c~~\uff09\n\n\u9898\u610f\u5927\u6982\u8bf4\u6e05\u695a\u4e86\uff0c\u63a5\u4e0b\u6765\u7684\u95ee\u9898\u662f\u8be5\u600e\u4e48\u505a\uff0c\u8003\u8651\u8fd9\u9898\u4e4b\u524d\u6211\u4eec\u5148\u6765\u8003\u8651\u4e00\u4e2a\u95ee\u9898\u2014\u2014\u5728\u4e00\u68f5\u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u4e00\u4e2a\u70b9\u600e\u4e48\u624d\u4f1a\u88ab\u904d\u5386\u5230\uff08~~\u8fd9\u4e0d\u5c31\u662f\u8fd9\u9898\u5417~~\uff09\n\n\u6211\u4eec\u5148\u5047\u5b9a\u8fd9\u6709\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9 a\uff0c\u4ed6\u7684\u5de6\u8282\u70b9\u4e3al\uff0c\u53f3\u8282\u70b9\u4e3ar\uff0c\u90a3\u4e48\u80fd\u904d\u5386\u5230l\u7684\u6761\u4ef6\u5c31\u662fl.val<a.val\uff08~~\u5e9f\u8bdd~~\uff09\uff0c\u540c\u7406\u80fd\u5230r\u7684\u6761\u4ef6\u4fbf\u662fr.val>a.val\u3002\u4e0b\u9762\u4fbf\u6765\u8003\u8651\u4e00\u4e2a\u95ee\u9898\uff0c\u4e3a\u4e86\u65b9\u4fbf\u4fbf\u4ee5 r \u4e3e\u4f8b\uff0c\u90a3\u4e48\u5728\u67e5\u8be2\u65f6\u5982\u4f55\u4fdd\u969c\u5bf9r.val\u7684\u8fd9\u4e2a\u67e5\u8be2\u80fd\u843d\u5230a\u4e0a\u5462\uff1f\u6bd5\u7adf\u67e5\u8be2\u53ea\u6709\u843d\u5230a\u4e0a\u65f6\u624d\u6709\u673a\u4f1a\u63a5\u89e6\u5230r\u6211\u4eec\u5148\u8bber\u7684\u7237\u7237\u8282\u70b9\u4e3afa\uff0c\u5047\u5982a\u662ffa\u7684\u5de6\u8282\u70b9\u65f6\uff0c\u90a3\u4e48\u5fc5\u987b\u5f97\u6709r.val<fa.val\u624d\u884c\u4e0d\u7136\u5c31\u5230\u53f3\u5b50\u6811\u53bb\u4e86\u540c\u7406\u5047\u5982a\u662ffa\u53f3\u8282\u70b9\u65f6\u90a3\u4e48\u5fc5\u987b\u5f97\u6709r.val>fa.val\u3002\n\n\u6240\u4ee5\u73b0\u5728\u80fd\u770b\u51fa\u6765\u4e86\u4e00\u4e2a\u70b9\u80fd\u88ab\u904d\u5386\u5230\u7684\u6761\u4ef6\u662f\u8fd9\u4e2a\u70b9\u7684\u6743\u503c\u6bd4\u6240\u6709\u7684\u53f3\u8f6c\u8282\u70b9\uff08\u4e0b\u4e00\u4e2a\u8d70\u7684\u662f\u53f3\u8fb9\uff09\u7684\u6743\u503c\u8981\u5927\u800c\u6bd4\u6240\u6709\u5de6\u8f6c\u8282\u70b9\u5c0f\uff08\u540c\u7406\uff09\uff0c\u6240\u4ee5\u8fd9\u4e2a\u95ee\u9898\u7528dfs\u89e3\u51b3\u5c31\u884c\u4e86\uff0cdfs\u6709\u4e09\u4e2a\u53c2\u6570\uff0c\u4e00\u4e2a\u662f\u76ee\u524d\u7684\u8282\u70b9\u53f7u\uff0c\u4e00\u4e2a\u662f\u4e00\u8def\u4e0a\u53f3\u8f6c\u8282\u70b9\u7684\u6700\u5927\u503cmaxx\uff0c\u4e00\u4e2a\u662f\u6240\u6709\u5de6\u8f6c\u8282\u70b9\u7684\u6700\u5c0f\u503cminn\uff0c\u800c\u4ed6\u80fd\u88ab\u904d\u5386\u5230\u7684\u6761\u4ef6\u662fmaxx<tree[u].val<minn\u3002\n\n\u5927\u6982\u5c31\u8fd9\u6837\u4e86\uff0c\u7edf\u8ba1\u7b54\u6848\u65f6\u7528\u4e2amap\u5c31\u884c\u4e86\n\n\u628a\u4ee3\u7801\u8d34\u4e0a\uff0c\u7edd\u5bf9\u7eff\u8272\u65e0\u6bd2\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=100005;\nvector<int> v;\nstruct node{\n\tint val,l,r;\n};\nnode a[maxn];\nbool to[maxn];\nint rt,n;\nmap <int,bool> ma;\nvoid dfs(int u,int maxx,int minn){\n\tif (u==-1) return;\n\tif (a[u].val>maxx&&a[u].val<minn) {\n\t\tma[a[u].val]=true;\n\t}\n\tdfs(a[u].l,maxx,min(a[u].val,minn));\n\tdfs(a[u].r,max(a[u].val,maxx),minn);\n\treturn;\n}\nint main(){\n\tcin>>n;\n\tfor (int i=1;i<=n;i++){\n\t\tscanf(\"%d%d%d\",&a[i].val,&a[i].l,&a[i].r);\n\t\tif (a[i].l!=-1)to[a[i].l]=true;\n\t\tif (a[i].r!=-1)to[a[i].r]=true;\n\t}\n\tfor (int i=1;i<=n;i++){\n\t\tif(to[i]==false) {\n\t\t\trt=i;\n\t\t}\n\t}\n\tdfs(rt,-1,1e9+1);\n\tint ans=0;\n\tfor (int i=1;i<=n;i++){\n\t\tif (ma[a[i].val]==false) ans++;\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```\n",
        "postTime": 1563461509,
        "uid": 122077,
        "name": "momo5440",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF797D \u3010Broken BST\u3011"
    }
]