[
    {
        "content": "- \u5206\u6790\n\n  \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5bf9\u4e8e**\u82e5\u5e72\u5806\uff08\u7b2c\u4e00\u5806\u6570\u91cf\u5927\u4e8e $1$ \uff09**\uff0c\u6709\u8fd9\u4e48\u4e00\u4e2a\u8d2a\u5fc3\u7684\u53d6\u6cd5\uff1a\n  \n  \u6bd4\u5982\u7b2c\u4e00\u5806\u5806\u6570\u91cf\u4e3a $n(n>1)$ \u3002**\u5148\u624b\u5148\u53d6 $n-1$ \u4e2a\u3002\u8fd9\u6837\u540e\u624b\u53ea\u80fd\u53d6 $1$ \u4e2a\uff08\u65e0\u6cd5\u4e0d\u53d6\uff09\u3002**\n  \n  \u8fd9\u6837\uff0c\u5148\u624b\u5c31\u53ef\u4ee5**\u5148\u53d6\u7b2c\u4e8c\u5806**\u3002\n  \n  \u540e\u51e0\u5806\u7684\u53d6\u6cd5\u540c\u4e0a\uff0c\u76f4\u5230\u5148\u624b\u53ef\u4ee5\u5148\u53d6\u6700\u540e\u4e00\u5806\u3002\n  \n  **\u5bf9\u4e8e\u6700\u540e\u4e00\u5806\uff0c\u5148\u624b\u76f4\u63a5\u53d6\u5b8c**\u3002\u83b7\u80dc\u3002\n  \n  \u90a3\u5982\u679c**\u4e2d\u95f4\u6709\u4e00\u5806\u6570\u91cf\u4e3a $1$ \uff0c** \u90a3\u4e48\u5bf9\u4e8e\u8fd9\u4e00\u5806\u7684\u524d\u4e00\u5806\uff0c**\u76f4\u63a5\u5168\u90e8\u53d6\u5b8c**\uff0c\u540e\u624b\u53ea\u80fd\u53d6\u5b8c\u8fd9\u5806\u6570\u91cf\u4e3a $1$ \u7684\u5806\u3002**\u7167\u6837\u53ef\u4ee5\u83b7\u5f97\u4e0b\u4e00\u5806\u7684\u5148\u624b**\u3002\n  \n  \u4ee5\u6b64\u7c7b\u63a8\u3002\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5f71\u54cd\u6700\u540e\u7ed3\u679c\u7684\uff0c**\u53ea\u6709\u524d\u7f00 $1$ \u7684\u6570\u91cf\u3002**\n  \n  \u5bb9\u6613\u53d1\u73b0\uff0c\u5982\u679c**\u524d\u7f00 $1$ \u6570\u91cf\u4e3a\u5076\u6570\u4e2a**\uff0c\u5728\u8f6e\u6d41\u53d6\u5b8c\u540e\uff0c\u90a3\u4e48\u7b2c\u4e00\u4e2a\u975e $1$ \u5806\uff0c\u662f**\u5148\u624b**\u5148\u53d6\u3002\u5373\u5148\u624b\u4f1a\u80dc\u5229\u3002\n  \n  \u5982\u679c\u662f**\u5947\u6570**\u4e2a\uff0c\u90a3\u4e48\u7b2c\u4e00\u4e2a\u975e $1$ \u5806\uff0c\u662f**\u540e\u624b**\u5148\u53d6\u3002\u5373\u540e\u624b\u4f1a\u80dc\u5229\u3002\n  \n  \u7279\u6b8a\u7684\uff0c\u5982\u679c\u8fd9\u5806**\u53ea\u6709 $1$ \u3002**\u90a3\u4e48**\u5076\u6570**\u4e2a\u80dc\u5229\u7684\u4e3a**\u540e\u624b**\uff0c**\u5947\u6570**\u4e2a\u80dc\u5229\u7684\u4e3a**\u5148\u624b**\u3002\n  \n  \n\n------------\n\n  \n- \u4ee3\u7801\n\n  ```\n  #include<iostream>\n  #include<cstdio>\n  #include<cstring>\n  using namespace std;\n  const int Maxn=1e5+5;\n  int T,n,a[Maxn];\n  int main()\n  {\t\n      scanf(\"%d\",&T);\n      while(T--)\n      {\t\n          int cnt=0,i;\n          scanf(\"%d\",&n);\n          for(i=1;i<=n;i++)\n              scanf(\"%d\",&a[i]);\n          for(i=1;i<=n;i++)\n              if(a[i]==1)cnt++;\n              else break;\n          if(i==n+1)\n          {\t\n              if(cnt%2==0)printf(\"Second\\n\");\n              else printf(\"First\\n\");\n          }\n          else{\n              if(cnt%2==0)printf(\"First\\n\");\n              else printf(\"Second\\n\");\n          }\n      }\n      return 0;\n  }\n  ```",
        "postTime": 1595383330,
        "uid": 39408,
        "name": "Rainy7",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1382B \u3010Sequential Nim\u3011"
    },
    {
        "content": "~~SG \u51fd\u6570\u5927\u6cd5\u597d\uff01\uff01\uff01~~\n\n\u6211\u4eec\u8bbe $sg_{i,j}$ \u4e3a\u201c\u524d $i-1$ \u5806\u77f3\u5b50\u90fd\u5df2\u88ab\u53d6\u5b8c\uff0c\u7b2c $i$ \u5806\u77f3\u5b50\u8fd8\u5269 $j$ \u4e2a\u6ca1\u53d6\u201d\u8fd9\u4e2a\u72b6\u6001\u7684 SG \u51fd\u6570\u503c\u3002\u8fd9\u4e2a\u72b6\u6001\u7684\u6240\u6709\u540e\u7ee7\u72b6\u6001\u5373\u4e3a\u201c\u524d $i-1$ \u5806\u77f3\u5b50\u90fd\u5df2\u88ab\u53d6\u5b8c\uff0c\u7b2c $i$ \u5806\u77f3\u5b50\u8fd8\u5269 $0,1,2,\\dots,j-1$ \u4e2a\u77f3\u5b50\u6ca1\u53d6\u201d\u7684\u72b6\u6001\uff0c\u6240\u4ee5 $sg_{i,j}=\\operatorname{mex}\\{sg_{i,0},sg_{i,1},sg_{i,2},\\dots,sg_{i,j-1}\\}$\u3002\n\n\u5982\u679c\u76f4\u63a5\u8fd9\u6837\u505a\u662f\u8fc7\u4e0d\u4e86\u7684\uff0c\u6211\u4eec\u8003\u8651\u4f18\u5316\u3002\n\n\u663e\u7136 $sg_{n,j}=j$\u3002\u5bf9\u4e8e $1\\le i<n$\uff0c\u7531\u4e8e $sg_{i,0}$ \u548c $sg_{i+1,a_{i+1}}$ \u5bf9\u5e94\u7684\u662f\u540c\u4e00\u4e2a\u72b6\u6001\uff0c\u6240\u4ee5 $sg_{i,0}=sg_{i+1,a_{i+1}}$\u3002\n\n\u6211\u4eec\u6765\u770b $sg_{i,0}=sg_{i+1,a_{i+1}}=3,a_i=6$ \u7684\u60c5\u51b5\u3002$sg_{i,0},sg_{i,1},sg_{i,2},\\dots,sg_{i,a_i}$ \u7684\u503c\u5206\u522b\u4e3a\uff1a\n\n$$3,0,1,2,4,5,6$$\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u82e5 $a_i\\le sg_{i+1,a_{i+1}}$\uff0c\u5219 $sg_{i,a_i}=a_i-1$\uff08\u56e0\u4e3a $a_i\\ne 0$\uff09\uff0c\u5426\u5219 $sg_{i,a_i}=a_i$\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u628a $j$ \u8fd9\u4e00\u7ef4\u53bb\u6389\uff0c\u53ea\u4fdd\u7559\u7b2c $i$ \u5806\u77f3\u5b50\u8fd8\u5269 $a_i$ \u4e2a\u6ca1\u53d6\uff08\u5373\u8fd8\u6ca1\u5f00\u59cb\u53d6\uff09\u7684\u60c5\u51b5\uff0c\u7136\u540e\u4ee5 $sg_n=a_n$ \u4e3a\u521d\u503c\uff0c\u4ece\u540e\u5f80\u524d\u9012\u63a8\u4e00\u904d\u5373\u53ef\u3002\u6700\u540e\u8981\u770b $sg_1$ \u662f\u5426\u7b49\u4e8e $0$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(\\sum n)$\u3002\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nint T,n,a[100005],sg[100005];\nint main(){\n\tscanf(\"%d\",&T);\n\twhile(T--){\n\t\tscanf(\"%d\",&n);\n\t\tfor(int i=1;i<=n;++i)\n\t\t\tscanf(\"%d\",a+i);\n\t\tsg[n]=a[n];\n\t\tfor(int i=n-1;i;--i)\n\t\t\tsg[i]=a[i]<=sg[i+1]?a[i]-1:a[i];\n\t\tprintf(sg[1]?\"First\\n\":\"Second\\n\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1598694760,
        "uid": 154520,
        "name": "chen_03",
        "ccfLevel": 9,
        "title": "CF1382B Sequential Nim \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9053\u9898\u867d\u7136\u662f nim\u6e38\u620f \u7684\u6539\u7248\uff0c\u4f46\u5b83\u6bd4 nim\u6e38\u620f \u7b80\u5355\u591a\u4e86\uff0c\u6211\u4eec\u77e5\u9053\u7b2c\u4e00\u4f4d\u9009\u624b\u5fc5\u987b\u8981\u5c3d\u53ef\u80fd\u5730\u83b7\u5f97\u4e3b\u52a8\u6743\uff0c\u6240\u4ee5\u6bcf\u5806\u77f3\u5b50\u5b83\u5fc5\u987b\u8981\u53d6\u5230\u5c31\u5269 $1$ \u9897\u6216\u4e00\u9897\u4e0d\u5269\uff08\u8fd9\u662f\u6bcf\u5806\u77f3\u5b50\u6700\u7ec8\u7684\u60c5\u51b5\uff09\u3002\u5982\u679c\u4ed6\u53d6\u5230\u5c31\u5269 $1$ \u9897\uff0c\u90a3\u4e48\u4e0b\u4e00\u5806\u77f3\u5b50\u7684\u4e3b\u52a8\u6743\u8fd8\u5728\u4ed6\u624b\u4e2d\uff0c\u5982\u679c\u4e00\u9897\u4e0d\u5269\uff0c\u90a3\u4e48\u4e3b\u52a8\u6743\u5c31\u8981\u8f6c\u8d60\u7ed9\u7b2c\u4e8c\u4f4d\u9009\u624b\u3002\u4f46\u662f\u6709\u4e00\u79cd\u7279\u6b8a\u7684\u60c5\u51b5\uff0c\u5982\u679c\u4e00\u5806\u77f3\u5b50\u53ea\u6709 $1$ \u9897\u7684\u8bdd\uff0c\u4e3b\u52a8\u6743\u4e00\u5b9a\u4f1a\u88ab\u6539\u53d8\u3002\u5982\u679c\u8fd9\u5806\u77f3\u5b50\u524d\u9762\u6709\u5806\u77f3\u5b50\u591a\u4e8e $1$ \u9897\u7684\u8bdd\uff0c\u90a3\u4e48\u7b2c\u4e00\u4f4d\u9009\u624b\u8fd8\u53ef\u4ee5\u901a\u8fc7\u6539\u53d8\u4e3b\u52a8\u6743\u6765\u5e94\u5bf9\u63a5\u4e0b\u6765\u7684\u8fd9\u5806\u77f3\u5b50\u3002\u4f46\u5982\u679c\u8fd9\u5806\u77f3\u5b50\u6070\u597d\u524d\u9762\u6ca1\u6709\u4e00\u5806\u77f3\u5b50\u591a\u4e8e $1$ \u9897\u7684\u8bdd\u3002\u90a3\u4e48\u7b2c\u4e00\u4f4d\u9009\u624b\u5c31\u65e0\u6cd5\u6539\u53d8\u4e3b\u52a8\u6743\u4e86\u3002\u53ea\u80fd\u5230\u4e00\u5806\u591a\u4e8e $1$ \u9897\u7684\u77f3\u5b50\u624d\u80fd\u6539\u53d8\uff0c\u4f46\u5982\u679c\u524d\u9762\u591a\u5806\u6570\u91cf\u5747\u4e3a $1$ \u7684\u77f3\u5b50\u5168\u90e8\u53d6\u5b8c\u4e14\u4e3b\u52a8\u6743\u5728\u7b2c\u4e00\u4f4d\u9009\u624b\u624b\u4e2d\uff0c\u90a3\u4e48\u63a5\u4e0b\u6765\u4ed6\u5c31\u6709\u5fc5\u80dc\u7b56\u7565\uff0c\u56e0\u4e3a\u5728\u4e0b\u4e00\u5806\u79cd\u5b83\u6709\u4e24\u79cd\u53d6\u77f3\u5b50\u7684\u65b9\u5f0f\uff0c\u8fd9\u4e9b\u65b9\u5f0f\u90fd\u4f1a\u5f71\u54cd\u4e3b\u52a8\u6743\u5728\u8c01\u624b\u4e2d\u4e14\u5f71\u54cd\u7684\u7ed3\u679c\u4e0d\u540c\uff0c\u800c\u5b83\u53ea\u8981\u4fdd\u8bc1\u6700\u540e\u4e00\u5806\u77f3\u5b50\u4e3b\u52a8\u6743\u5728\u4ed6\u624b\u4e2d\u5c31\u884c\u3002\uff08\u540e\u9762\u6709\u82e5\u5e72\u5806\u8fde\u7eed\u7684\u4e14\u53ea\u6709\u4e00\u9897\u7684\u77f3\u5b50\u4e5f\u4e0d\u8981\u7d27\uff0c\u53ea\u8981\u5728\u82e5\u5e72\u5806\u77f3\u5b50\u4e4b\u524d\u6539\u53d8\u4e3b\u52a8\u6743\u4f7f\u5f97\u82e5\u5e72\u5806\u77f3\u5b50\u53d6\u5b8c\u4e4b\u540e\u4e3b\u52a8\u6743\u8fd8\u5728\u4ed6\u624b\u4e2d\u5c31\u53ef\u4ee5\uff09\uff0c\u6240\u4ee5\u7b2c\u4e00\u4f4d\u9009\u624b\u4e00\u5b9a\u6709\u5fc5\u80dc\u7b56\u7565\u3002\u53cd\u4e4b\uff0c\u5c31\u662f\u7b2c\u4e8c\u4f4d\u9009\u624b\u6709\u5fc5\u80dc\u7b56\u7565\u3002\n\n\u6240\u4ee5\uff0c\u5c31\u662f\u770b\u6700\u524d\u9762\u6709\u591a\u5c11\u5806\u8fde\u7eed\u7684\u6570\u91cf\u4e3a $1$ \u9897\u7684\u77f3\u5b50\u3002\u5982\u679c\u662f\u5947\u6570\u5806\uff0c\u5c31\u662f\u7b2c\u4e8c\u4f4d\u9009\u624b\u83b7\u80dc\uff0c\u5982\u679c\u662f\u5076\u6570\u5806\uff0c\u5c31\u662f\u7b2c\u4e00\u4f4d\u9009\u624b\u83b7\u80dc\u3002\u4f46\u5982\u679c\u6240\u6709\u5806\u77f3\u5b50\u90fd\u662f $1$ \u9897\u7684\u8bdd\uff0c\u90a3\u4e48\u5982\u679c\u662f\u5947\u6570\u5806\uff0c\u7b2c\u4e00\u4f4d\u9009\u624b\u83b7\u80dc\uff0c\u5982\u679c\u662f\u5076\u6570\u5806\uff0c\u7b2c\u4e8c\u4f4d\u9009\u624b\u83b7\u80dc\u3002\n\n# code:\n```cpp\n#include<cstdio>\nusing namespace std;\nint a[100005];\nint main(){\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tint n,ans=0,i,xian=1;\n\t\tbool yes=0;\n\t\tscanf(\"%d\",&n);\n\t\tfor(i=1;i<=n;i++){\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t\tif(a[i]==1&&!yes){\n\t\t\t\txian+=1;\n\t\t\t\txian%=2;\n\t\t\t}\n\t\t\telse{\n\t\t\t    yes=1;\t\n\t\t\t}\n\t\t}\n\t\tif(!yes){\n\t\t\tif(n%2==0){\n\t\t\t\tprintf(\"Second\\n\");\n\t\t\t}\n\t\t\telse{\n\t\t\t\tprintf(\"First\\n\");\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(!xian){\n\t\t\t    printf(\"Second\\n\");\n\t\t    }\n\t\t    else{\n\t\t\t    printf(\"First\\n\");\n\t\t    }\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1595390317,
        "uid": 80614,
        "name": "ZCPB",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1382B \u3010Sequential Nim\u3011"
    },
    {
        "content": "**\u9898\u76ee\u5927\u610f**\uff1a\u6709 $n$ \u5806\u77f3\u5b50\uff0c\u4e24\u4e2a\u4eba\u8f6e\u6d41\u53d6\u77f3\u5b50\uff0c\u6bcf\u4e2a\u4eba\u53ef\u4ee5\u53d6\u5e8f\u53f7\u6700\u5c0f\u7684\u5806\u7684\u4efb\u610f\u4e2a\u77f3\u5b50\uff0c\u8c01\u6ca1\u6709\u77f3\u5b50\u53ef\u4ee5\u53d6\uff0c\u8c01\u5c31\u8f93\u4e86\u3002\n\n\u8fd9\u4e2a\u9898\u76ee\u521a\u770b\u65f6\u6ca1\u6709\u4ec0\u4e48\u601d\u8def\uff0c\u53ef\u4ee5\u4ece\u6837\u4f8b\u5165\u624b\u5206\u6790\u3002\n\n\u770b\u5b8c\u6837\u4f8b\u4e4b\u540e\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u6709\u4e9b\u6837\u4f8b\u6709 $1$\uff0c\u6709\u4e9b\u6837\u4f8b\u5168\u662f $1$\uff0c\u6709\u4e9b\u6837\u4f8b\u6ca1\u6709 $1$\u3002\n\n\u8fd9\u53ef\u4ee5\u7ed9\u6211\u4eec\u542f\u53d1\uff1a**\u672c\u9898\u7684\u5173\u952e\u5c31\u662f\u53ea\u6709 $1$ \u4e2a\u77f3\u5b50\u7684\u5806**\u3002\n\n**\u9996\u5148\uff0c\u5982\u679c\u6bcf\u4e00\u5806\u90fd\u53ea\u6709 $1$ \u4e2a\u77f3\u5b50\uff0c\u90a3\u4e48\u6bcf\u4e2a\u4eba\u6bcf\u6b21\u90fd\u53ea\u80fd\u53d6\u4e00\u4e2a\uff0c\u6240\u4ee5\u5982\u679c\u6709\u5947\u6570\u5806\uff0c\u90a3\u4e48\u5148\u624b\u8d62\u3002\u5982\u679c\u6709\u5076\u6570\u5806\uff0c\u90a3\u4e48\u540e\u624b\u8d62\u3002**\n\n**\u5176\u6b21\uff0c\u5982\u679c\u6ca1\u6709\u53ea\u6709 $1$ \u4e2a\u77f3\u5b50\u7684\u5806\uff0c\u90a3\u4e48\u5148\u624b\u4e00\u5b9a\u8d62\u3002**\n\n\u5206\u6790\uff1a\u5047\u5982\u6709\u4e00\u5806\u6709 $a$ \u4e2a\u77f3\u5b50\uff0c\u90a3\u4e48\u5148\u624b\u53ef\u4ee5\u62ff $a-1$ \u4e2a\uff0c\u90a3\u4e48\u540e\u624b\u5c31\u53ea\u80fd\u62ff $1$ \u4e2a\u3002\u4e0b\u4e00\u5806\u4f9d\u7136\u662f\u5148\u624b\u62ff\u3002\n\n\u8fd9\u6837\uff0c\u5148\u624b\u4e00\u76f4\u8fd9\u4e48\u62ff\uff0c\u62ff\u5230\u53ea\u5269\u4e00\u5806\u65f6\uff0c\u628a\u6700\u540e\u4e00\u5806\u5168\u90e8\u62ff\u8d70\u5c31\u53ef\u4ee5\u83b7\u80dc\u3002\n\n**\u7136\u540e\uff0c\u5728\u5206\u6790\u5f00\u5934\u6ca1\u6709\u53ea\u6709 $1$ \u4e2a\u77f3\u5b50\u7684\u5806\u7684\u60c5\u51b5\u3002\u8fd9\u6837\u4f9d\u7136\u662f\u5148\u624b\u5fc5\u80dc\u3002**\n\n\u5047\u8bbe\u6709 $10$ \u4e2a\u5806\uff0c\u6bcf\u4e2a\u5806\u7684\u77f3\u5b50\u6570\u4e3a $a,b,c,1,1,1,1,d,e,f$\u3002\n\n\u90a3\u4e48\uff0c\u5148\u624b\u60f3\u8981\u8d62\uff0c\u5c31\u548c\u4e0a\u4e00\u79cd\u60c5\u51b5\u4e00\u6837\uff0c\u4f7f\u81ea\u5df1\u5148\u62ff\u5230 $d$ \u5806\u77f3\u5b50\u5373\u53ef\u3002\n\n\u6240\u4ee5\uff0c\u53ea\u8981\u63a7\u5236 $d$ \u5806\u524d\u9762 $1$ \u7684\u4e2a\u6570\uff0c\u4f7f $d$ \u524d\u9762\u6709\u5947\u6570\u4e2a $1$ \u5373\u53ef\u3002\n\n\u5982\u679c $d$ \u5806\u524d\u9762\u672c\u6765\u5c31\u6709\u5947\u6570\u4e2a $1$\uff0c\u90a3\u4e48\u5c31\u7528\u7b2c\u4e8c\u79cd\u60c5\u51b5\u7684\u65b9\u6cd5\u62ff\u5230 $1$ \u524d\u9762\u7684\u90a3\u4e00\u5806\u77f3\u5b50\u3002\n\n\u5982\u679c $d$ \u5806\u524d\u9762\u6709\u5076\u6570\u4e2a $1$\uff0c\u90a3\u4e48\u5c31\u7528\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff0c\u4f7f $1$ \u524d\u9762\u7684\u90a3\u4e00\u5806\u53ea\u5269 $1$ \u4e2a\u77f3\u5b50\uff0c\u90a3\u4e48\u5c31\u76f8\u5f53\u4e8e\u6709\u5947\u6570\u4e2a $1$ \u4e86\u3002\n\n**\u6700\u540e\uff0c\u5206\u6790\u5f00\u5934\u6709 $1$ \u7684\u60c5\u51b5\u3002**\n\n\u5047\u8bbe\u6709 $10$ \u4e2a\u5806\uff0c\u6bcf\u4e2a\u5806\u7684\u77f3\u5b50\u6570\u4e3a $1,1,1,a,b,c,d,1,1,1$\u3002\n\n\u901a\u8fc7\u4e0a\u4e00\u79cd\u60c5\u51b5\u7684\u5206\u6790\uff0c\u53ef\u4ee5\u5f97\u51fa\uff1a\u5148\u62ff\u5230\u7b2c $a$ \u5806\u7684\u5fc5\u80dc\u3002\n\n\u4e5f\u5c31\u662f\uff0c\u5148\u62ff\u5230\u975e $1$ \u7684\u5806\u7684\u4eba\u5fc5\u80dc\u3002\n\n\u6240\u4ee5\uff0c\u5982\u679c\u7b2c\u4e00\u4e2a\u975e $1$ \u7684\u5806\u524d\u6709\u5947\u6570\u4e2a\u5806\uff0c\u90a3\u4e48\u540e\u624b\u5fc5\u80dc\uff1b\u5426\u5219\uff0c\u5148\u624b\u5fc5\u80dc\u3002\n\n\u5c06\u4e0a\u9762\u7684\u56db\u79cd\u60c5\u51b5\u7ed3\u5408\u4e00\u4e0b\uff0c\u5c31\u53ef\u4ee5\u53d1\u73b0\u672c\u9898\u7684\u6b63\u89e3\uff1a\n\n**\u5982\u679c\u6240\u6709\u7684\u5806\u90fd\u53ea\u6709 $1$ \u4e2a\u77f3\u5b50\uff0c\u90a3\u4e48\u8f93\u8d62\u4e0e\u5806\u6570\u6709\u5173\uff1b**\n\n**\u5426\u5219\uff0c\u8f93\u8d62\u4e0e\u524d\u7f00 $1$ \u7684\u4e2a\u6570\u6709\u5173\u3002**\n\n\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u5199\u51fa\u4ee3\u7801\u4e86\u3002\n\n**\u4ee3\u7801\uff1a**\n```cpp\n#include<cstdio>\n#include<iostream>\nconst int N=100000;\nint a[N+1];\nint main()\n{\n\tregister int i,n,t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%d\",&n);\n\t\tfor(i=1; i<=n; ++i)\n\t\t\tscanf(\"%d\",&a[i]);\n\t\tfor(i=1; i<=n; ++i)\n\t\t\tif(a[i]!=1)\n\t\t\t\tbreak;//\u627e\u5230\u7b2c\u4e00\u4e2a\u4e0d\u662f1\u7684\u4f4d\u7f6e\n\t\t--i;//\u524d\u7f001\u7684\u4e2a\u6570\u662fi-1\n\t\tif(i<n)//\u5982\u679c\u4e0d\u662f\u5168\u662f1\uff0c\u8f93\u8d62\u4e0e\u524d\u7f001\u7684\u4e2a\u6570\u6709\u5173\n\t\t\tif(i%2)\n\t\t\t\tputs(\"Second\");\n\t\t\telse\n\t\t\t\tputs(\"First\");\n\t\telse//\u5982\u679c\u5168\u662f1\uff0c\u8f93\u8d62\u4e0e\u5806\u6570\u6709\u5173\n\t\t\tif(n%2)\n\t\t\t\tputs(\"First\");\n\t\t\telse\n\t\t\t\tputs(\"Second\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1617421037,
        "uid": 237871,
        "name": "gaozitao1",
        "ccfLevel": 6,
        "title": "CF1382B Sequential Nim \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9898\u6211\u5728\u6bd4\u8d5b\u4e2d\u60f3\u4e8615\u5206\u949f\uff08wtcl\uff09\uff0c~~\u7136\u540e\u7adf\u7136\u4e00\u904da\u4e86~~\u3002\n\n\u672c\u9898\u89e3\u6709\u4e00\u4e9b\u4f8b\u5b50\uff0c\u5df2\u7ecf\u61c2\u4e86\u7684\u540c\u5b66~~\u6216\u8005\u61d2\u5f97\u770b~~\u7684\u540c\u5b66\u53ef\u4ee5\u8df3\u8fc7\uff0c\u76f4\u63a5\u770b\u63a8\u5bfc\u3002\n\n### \u4e00\u3001\u5173\u4e8e\u53d6\u6cd5\n\n\u8bb2\u8bb2\u601d\u8def\uff0c\u5f53\u4f60\u505a\u8fd9\u79cd\u9898\u65f6\u65e0\u4ece\u4e0b\u624b\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u5148\u770b\u770b**\u6837\u4f8b\u548c\u5b83\u7684\u6837\u4f8b\u8bf4\u660e**(\u56e0\u4e3a\u53ea\u7ed9\u4e86\u7b2c\u4e00\u4e2a\u6d4b\u8bd5\u70b9\u7684\u8bf4\u660e\uff0c\u6240\u4ee5\u53ea\u770b\u6837\u4f8b\u4e2d\u7684\u7b2c\u4e00\u4e2a\uff09\uff1a\n\n\u6837\u4f8b\uff1a\n\n3\n\n2 5 4\n\n\u8bf4\u660e\uff08\u5df2\u7ffb\u8bd1\u6210\u4e2d\u6587\uff09\uff1a\n>\u5728\u7b2c\u4e00\u4e2a\u6d4b\u8bd5\u6848\u4f8b\u4e2d\uff0c\u7b2c\u4e00\u4e2a\u73a9\u5bb6\u5c06\u8d62\u5f97\u6bd4\u8d5b\u3002\u4ed6\u7684\u5236\u80dc\u7b56\u7565\u662f\uff1a\n\n>\u7b2c\u4e00\u4e2a\u73a9\u5bb6\u5e94\u8be5\u4ece\u7b2c\u4e00\u5806\u4e2d\u53d6\u51fa\u77f3\u5934\u3002\u4ed6\u4f1a\u5e261\u4e2a\u77f3\u5934\u3002\u77f3\u5934\u5806\u7684\u6570\u91cf\u5c06\u662f[ 1 \uff0c5 \uff0c4 ]\u3002\n\n>\u7b2c\u4e8c\u4e2a\u73a9\u5bb6\u5e94\u8be5\u4ece\u7b2c\u4e00\u5806\u4e2d\u62ff\u8d70\u77f3\u5934\u3002\u4ed6\u4f1a\u5e261\u4e2a\u77f3\u5934\uff0c\u56e0\u4e3a\u4ed6\u4e0d\u80fd\u518d\u62ff\u5176\u4ed6\u6570\u91cf\u7684\u77f3\u5934\u4e86\u3002\u77f3\u5934\u5806\u7684\u6570\u91cf\u5c06\u662f[ 0 \uff0c5 \uff0c4 ]\u3002\n\n>\u56e0\u4e3a\u7b2c\u4e00\u5806\u662f\u7a7a\u7684\uff0c\u6240\u4ee5\u7b2c\u4e00\u4e2a\u73a9\u5bb6\u5e94\u8be5\u4ece\u7b2c\u4e8c\u5806\u4e2d\u53d6\u51fa\u77f3\u5934\u3002\u4ed6\u4f1a\u5e264\u77f3\u5934\u3002\u77f3\u5934\u5806\u7684\u6570\u91cf\u5c06\u662f[ 0 \uff0c1 \uff0c4 ]\u3002\n\n>\u7b2c\u4e8c\u4e2a\u73a9\u5bb6\u5e94\u8be5\u4ece\u7b2c\u4e8c\u4e2a\u6869\u4e2d\u53d6\u51fa\u77f3\u5934\uff0c\u56e0\u4e3a\u7b2c\u4e00\u4e2a\u6869\u662f\u7a7a\u7684\u3002\u4ed6\u4f1a\u5e261\u4e2a\u77f3\u5934\uff0c\u56e0\u4e3a\u4ed6\u4e0d\u80fd\u518d\u62ff\u5176\u4ed6\u6570\u91cf\u7684\u77f3\u5934\u4e86\u3002\u77f3\u5934\u5806\u7684\u6570\u91cf\u5c06\u662f[ 0 \uff0c0 \uff0c4 ]\u3002\n\n>\u7b2c\u4e00\u4e2a\u73a9\u5bb6\u5e94\u8be5\u4ece\u7b2c\u4e09\u5806\u4e2d\u53d6\u51fa\u77f3\u5934\uff0c\u56e0\u4e3a\u7b2c\u4e00\u5806\u548c\u7b2c\u4e8c\u5806\u90fd\u662f\u7a7a\u7684\u3002\u4ed6\u4f1a\u5e26 4\u77f3\u5934\u3002\u77f3\u5934\u5806\u7684\u6570\u91cf\u5c06\u662f[ 0 \uff0c0 \uff0c0 ]\u3002\n\n>\u7b2c\u4e8c\u540d\u73a9\u5bb6\u5c06\u8f93\u6389\u6bd4\u8d5b\uff0c\u56e0\u4e3a\u6240\u6709\u77f3\u5b50\u90fd\u6ca1\u4e86\u3002\n\n\u4ed4\u7ec6\u89c2\u5bdf\uff0c\u4e0d\u96be\u7814\u7a76\u51fa\u53d6\u7684\u89c4\u5f8b\u662f\uff1a\n\n**\u8bbe\u4e00\u5806\u77f3\u5934\u4e3a $x$ ,\u90a3\u4e48\u5148\u624b\u5c31\u5e94\u8be5\u53d6\u8d70 $x-1$, \u8fd9\u65f6\u5c31\u53ea\u5269\u4e0b1\u4e2a\u77f3\u5934\uff0c\u53e6\u4e00\u4e2a\u4eba\u53ea\u80fd\u53d6\u8d70\u8fd9\u4e00\u4e2a\u77f3\u5934\u3002\u4f46\u6ce8\u610f\uff0c\u5230\u6700\u540e\u4e00\u5806\u65f6\u5c31\u5168\u90e8\u53d6\u8d70\u3002**\n\n\u6ce8\uff1a\u5148\u624b\u5c31\u662f\u6700\u540e\u8d62\u7684\u4eba\u3002\n\n------------\n\n\n#### \u63a5\u4e0b\u6765\u662f\u7406\u6027\u7684\u5206\u6790\uff1a\n\n\u4e3a\u5565\u8fd9\u79cd\u65b9\u6cd5\u6700\u4f18\u5462\uff1f**\u56e0\u4e3a\u8fd9\u6837\u6211\u4eec\u5c31\u9650\u5b9a\u4e86\u53e6\u4e00\u4e2a\u4eba\u63a5\u4e0b\u6765\u7684\u52a8\u4f5c**\u3002\n\n\u90a3\u4e07\u4e00\u6ca1\u6709\u6837\u4f8b\uff0c\u6211\u4eec\u600e\u4e48\u77e5\u9053\u5e94\u53d6\u591a\u5c11\u5462\uff1f\u6211\u4eec\u6ce8\u610f\u4e00\u4e0b\u9898\u76ee\u4e2d\u7684\u8fd9\u53e5\u8bdd\uff08\u4e0d\u770b\u4e5f\u6ca1\u4e8b\uff0c\u662f\u5e38\u8bc6\uff09\uff1a\n\n>\u5728\u79fb\u52a8\u4e2d\uff0c\u73a9\u5bb6\u53ef\u4ee5\u4ece\u7b2c\u4e00\u4e2a\u975e\u7a7a\u5806 (\u6570\u91cf\u6700\u5c11\u7684\u5806\u81f3\u5c11\u6709\u4e00\u4e2a\u77f3\u5934)\u4e2d\u9664\u53bb**\u6b63\u6570**\u7684\u77f3\u5934\u3002\n\n\u6240\u4ee5\u9664\u53bb\u77f3\u5934\u7684\u6570\u91cf\u5e94\u8be5\u662f\u6b63\u6574\u6570\uff0c\u6240\u4ee5\u6700\u5c0f\u662f1\uff0c\u4f46\u6700\u5927\u6ca1\u6cd5\u6c42\u3002\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u5c06\u76ee\u5149\u96c6\u4e2d\u5728**\u6700\u5c0f\u503c1**\u4e0a\u3002\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u5e94\u8be5\u4f7f\u53e6\u4e00\u4e2a\u4eba\u62ff1\u4e2a\u77f3\u5934\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5e94\u8be5\u62ff $x-1$ \u4e2a\u77f3\u5934\u3002\n\n------------\n\n\n\n### \u4e8c\u3001\u5173\u4e8e\u7279\u6b8a\u76841\n\n\u6709\u4e00\u79cd\u7279\u6b8a\u7684\u60c5\u51b5\uff1a\n\n**\u90a3\u5c31\u662f 1**\n\n**\u5f53\u8fd9\u5806\u77f3\u5b50\u6570\u4e3a1\u7684\u65f6\u5019\uff0c\u5c31\u6539\u53d8\u4e86\u5148\u624b**\u3002\u56e0\u4e3a\u4f60\u53ea\u80fd\u62ff\u8d70\u8fd9\u4e2a\u77f3\u5b50\u3002\n\n\u6240\u4ee5\u5f53\u9047\u5230**\u524d\u7f001**\u65f6\u6211\u4eec\u5e94\u8be5\u6539\u53d8\u8fd9\u4e2a\u5148\u624b\u3002\u6709\u4eba\u53ef\u80fd\u6ce8\u610f\u5230\u4e86\uff0c\u4e3a\u5565\u662f**\u524d\u7f001**\u5462\uff1f\u96be\u9053\u540e\u9762\u76841\u5c31\u4e0d\u80fd\u6539\u53d8\u4e86\u5417\uff1f\u8ba9\u6211\u4eec\u6765\u4e3e\u4e2a\u4f8b\u5b50\uff08\u53ef\u8df3\u8fc7\uff09\uff1a\n\n4\n\n1 3 1 1\n\n\u8bbe\u91c7\u53d6\u7b2c\u4e00\u6b65\u7684\u662f$A$,\u53e6\u4e00\u4e2a\u4eba\u662f$B$\n\n\u7b2c\u4e00\u5806\uff1a\u5148\u624b\u662f$A,(0,3,1,1);$  **(\u540e\u9762\u7684\u90fd\u662f\u6307\u8fd9\u4e00\u5806\u5148\u624b\u8d70\u4e86\u7b2c\u4e00\u6b65\u540e\u8fd8\u5269\u7684\u77f3\u5b50\u6570\uff09**\n\n\u7b2c\u4e8c\u5806\uff1a\u5148\u624b\u662f$B,(0,0,1,1);$\n\n\u7b2c\u4e09\u5806\uff1a\u5148\u624b\u662f$A,(0,0,0,1);$\n\n\u7b2c\u56db\u5806\uff1a\u5148\u624b\u662f$B,(0,0,0,0);$\n\n\u6240\u4ee5\u4f60\u770b\uff0c\u6700\u540e\u7684\u8d62\u5bb6\u8fd8\u662f$B$,\u548c\u7b2c\u4e8c\u5806\u7684\u5148\u624b\u4e00\u6837\uff0c\u540e\u9762\u76841\u5e76\u6ca1\u8d77\u4f5c\u7528\u3002\n\n\u90a3\u6709\u4eba\u8bf4\u4e86\uff0c\u4e07\u4e00\u662f\u8fd9\u6837\u7684\uff08\u5176\u5b9e\u662f\u6211\u4e00\u5f00\u59cb\u7684\u7591\u95ee\uff09\uff1a\n\n3\n\n1 3 1\n\n\u518d\u6765\u770b\u770b\u7ed3\u679c\uff1a\n\n\u7b2c\u4e00\u5806\uff1a\u5148\u624b\u662f$A,(0,3,1);$  **(\u540e\u9762\u7684\u90fd\u662f\u6307\u8fd9\u4e00\u5806\u5148\u624b\u8d70\u4e86\u7b2c\u4e00\u6b65\u540e\u8fd8\u5269\u7684\u77f3\u5b50\u6570\uff09**\n\n\u7b2c\u4e8c\u5806\uff1a\u5148\u624b\u662f$B,(0,1,1);$\n\n\u7b2c\u4e09\u5806\uff1a\u5148\u624b\u662f$B,(0,0,0);$\n\n\u6240\u4ee5\u4f60\u770b\uff0c\u6700\u540e\u8d62\u7684\u8fd8\u662f$B$,\u548c\u7b2c\u4e8c\u5806\u7684\u5148\u624b\u4e00\u6837\u3002\u90a3\u4e48\u770b\u6765\u540e\u9762\u76841\u786e\u5b9e\u6ca1\u5565\u7528\u3002\n\n\n\n------------\n\u7ec6\u5fc3\u7684\u540c\u5b66\u53ef\u80fd\u5df2\u7ecf\u53d1\u73b0\u4e3a\u4ec0\u4e48\u4e86\uff0c\u56e0\u4e3a\u5982\u679c\u540e\u9762\u6709\u5076\u6570\u4e2a1\u65f6\uff0c\u8fd9\u65f6\u7684\u5148\u624b\u4f1a\u5c06\u8fd9\u4e00\u5806\u5168\u90e8\u62ff\u8d70\uff0c\u5982\u679c\u540e\u9762\u6709\u5947\u6570\u4e2a1\u65f6\uff0c\u8fd9\u65f6\u7684\u5148\u624b\u4f1a\u7559\u4e0b\u4e00\u4e2a\u77f3\u5b50\u3002\u8fd9\u6837\uff0c\u65e0\u8bba\u5982\u4f55\uff0c\u4ed6\u90fd\u4f1a\u53d6\u5f97\u6700\u540e\u7684\u80dc\u5229\u3002**\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u8003\u8651\u524d\u7f001\u3002**\n\n\n------------\n\n### \u4e09\u3001\u5173\u4e8e\u7a0b\u5e8f\n\n**\u4ece\u5934\u5230\u4f4d\u626b\u4e00\u904d\uff0c\u5982\u679c\u9047\u52301\uff0c\u7d2f\u52a0\u5668\u52a01\uff1b\u5982\u679c\u9047\u5230\u4e0d\u662f1\u7684\u6570\uff0c\u5c31\u5148\u52a01\uff0c\u7136\u540e\u8df3\u51fa\u3002**\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u4e0d\u4ec5\u7edf\u8ba1\u4e86\u524d\u7f001\uff0c\u8fd8\u4e0d\u4f1a\u88ab\u8fd9\u79cd\u4f8b\u5b50\u5751\u5230\uff1a\n\n4\n\n1 1 1 1\n\n\u6700\u540e\u5982\u679c\u7d2f\u52a0\u5668\u4e3a\u5947\u6570\uff0c\u5c31\u8f93\u51fa First\uff0c\u5426\u5219\u8f93\u51fa Second\u3002\n\n\u6700\u540e\u4e0a\u4ee3\u7801\uff08\u5f88\u77ed\uff09\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint t,n,m,a[100005];\nint main() {\n    cin>>t;\n    while(t--) {\n        cin>>n;\n        for(int i=1;i<=n;i++)cin>>a[i];\n        int s=0;//\u7d2f\u52a0\u5668\u6e05\u96f6\n        for(int i=1;i<=n;i++) {\n            if(a[i]==1)s++;//\u5982\u679c\u662f1\u5c31\u52a01\n            else {\n                s++;break;\u5426\u5219\u52a01\u8df3\u51fa\n            }\n        }\n        if(s%2==0)cout<<\"Second\"<<endl;//\u662f\u5076\u6570\u5c31\u662f\u540e\u8d70\u7684\u4eba\u8d62\n        else cout<<\"First\"<<endl;//\u662f\u5947\u6570\u5c31\u662f\u5148\u8d70\u7684\u4eba\u8d62\n    }\n}\n```\n\n**\u5404\u4f4d\u5927\u4f6c\u4eec\u70b9\u4e2a\u8d5e\u518d\u8d70\u5427\uff0c\u8c22\u8c22\uff01**\n\n\n\n\n\n\n\n\n",
        "postTime": 1595678399,
        "uid": 57779,
        "name": "LRL65",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1382B \u3010Sequential Nim\u3011"
    },
    {
        "content": "\u663e\u7136\u5f53**\u77f3\u5b50\u6570\u4e3a1**\u65f6\u8fd9\u4e00\u8f6e\u7684\u73a9\u5bb6\u5c31**\u83ab\u5f97\u9009\u62e9** \u7ecf\u7b80\u5355\u63a8\u7406\u5f97\u82e5$a_i > 1$ \u5219\u7b2c$i$\u8f6e\u7684\u73a9\u5bb6\u5fc5\u8d62\n\n\u7b80\u5355\u63a8\u7406\u8fc7\u7a0b\uff1a\n\n\u82e5$i=n$\uff0c\u5373\u8fd9\u5806\u77f3\u5b50\u4e3a\u6700\u540e\u4e00\u5806\uff0c\u90a3\u4e48\u672c\u8f6e\u73a9\u5bb6\u53ef\u4ee5\u76f4\u63a5\u53d6\u8d70\u6240\u6709\u3002\u672c\u8f6e\u73a9\u5bb6\u80dc\uff1b\n\n\u82e5$a_i=1$ \uff0c\u5219\u83ab\u5f97\u9009\u62e9\uff0c\u53d6\u5b8c\u8fd9\u5806\uff0c\u8fdb\u5165\u4e0b\u4e00\u8f6e\uff1b\n\n\u82e5$a_i>1$\u4e14$a_{i+1}=1$\u4e14$i+1\\neq n$\uff0c\u5219\u53d6\u5b8c\u8fd9\u4e00\u5806\uff0c\u8ba9\u5bf9\u65b9\u53d6\u4e0b\u4e00\u5806\u7684\u4e00\u4e2a\uff0c\u518d\u6b21\u8fdb\u5165\u4e0b\u4e00\u8f6e\uff1b\n\n\u82e5$a_i>1$\u4e14$a_{i+1}=1$\u4e14$i+1=n$\uff0c\u5219\u53d6$a_i-1$\u4e2a\u77f3\u5b50\uff0c\u7559\u4e0b\u4e00\u4e2a\u7ed9\u5bf9\u65b9\u53d6\uff0c\u7136\u540e\u53d6\u6389\u6700\u540e\u4e00\u4e2a\u77f3\u5b50\uff0c\u672c\u8f6e\u73a9\u5bb6\u80dc\uff1b\n\n\u82e5$a_i>1$\u4e14$a_{i+1}>1$\uff0c\u5219\u53d6$a_i-1$\u4e2a\u77f3\u5b50\uff0c\u7559\u4e0b\u4e00\u4e2a\u7ed9\u5bf9\u65b9\u53d6\uff0c\u8fdb\u5165\u4e0b\u4e00\u8f6e\uff1b\n\n\u7ecf\u4ee5\u4e0a\u63a8\u7406\u53ef\u4ee5\u53d1\u73b0\uff0c\u624b\u4e2d\u77f3\u5b50\u6570\u5927\u4e8e1\u7684\u4eba\u62e5\u6709\u201c**\u63a7\u5236\u6743**\u201d\uff0c\u53ef\u4ee5\u4f7f\u6bd4\u8d5b\u5fc5\u80dc\n\n\u6700\u540e\u7279\u5224\u4e00\u4e0b\u5168\u662f1\u7684\u60c5\u51b5\u5373\u53ef\n\n$Complexity:O(2n)$\n\n$Code:$\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint T;\nint n,a[100005];\nsigned main(){\n    scanf(\"%d\",&T);\n    \n    while(T--){\n        scanf(\"%d\",&n);\n        register int i;\n        \n        bool flag=true;\n        for(i=1;i<=n;++i) scanf(\"%d\",&a[i]);\n        for(i=1;i<=n;++i) if(a[i]!=1){flag=false;puts(i%2?\"First\":\"Second\");break;}\n        \n        if(flag) puts(n%2?\"First\":\"Second\");\n    }\n    \n    return 0;\n}\n```\n",
        "postTime": 1595427322,
        "uid": 235357,
        "name": "Luisvacson",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1382B \u3010Sequential Nim\u3011"
    },
    {
        "content": "# Main Idea\n\n\u6709 $n$ \u5806\u77f3\u5b50\uff0c\u7b2c $i$ \u5806\u62e5\u6709 $A(i)$ \u4e2a\u77f3\u5b50\u3002\u4e24\u4e2a\u4eba\u8f6e\u6d41\u4ece\u5f53\u524d\u7b2c\u4e00\u4e2a\u4e2a\u6570\u4e0d\u4e3a\u96f6\u7684\u5806\u91cc\u62ff\u51fa\u82e5\u5e72\uff08\u6b63\u6570\uff09\u77f3\u5b50\uff0c\u90a3\u4e2a\u6ca1\u77f3\u5b50\u62ff\u7684\u4eba\u5c31\u8f93\u4e86\u3002\n\n# Analysis\n\n\u5b9a\u4e49 **\u201c\u4e3b\u52a8\u6743\u201d**\uff1a\u4e00\u4e2a\u77f3\u5b50\u5806\u4e2d\u5148\u62ff\u77f3\u5b50\u7684\u4eba\u5177\u6709\u201d\u4e3b\u52a8\u6743\u201c\u3002\u56e0\u4e3a\u5bf9\u4e8e\u7b2c $i \\left(A(i) > 1\\right)$ \u5806\u77f3\u5b50\uff0c\u5148\u62ff\u7684\u4eba\u603b\u662f\u53ef\u4ee5\u63a7\u5236\u62ff\u7684\u77f3\u5b50\u7684\u4e2a\u6570\u3002\u7531\u4e8e\u4ed6\u8db3\u591f\u806a\u660e\uff0c\u4ed6\u6709 $2$ \u79cd\u65b9\u6848\u6765\u9009\u62e9\uff1a\n\n1. \u62ff $A(i)$ \u4e2a\uff0c\u8fd9\u5806\u77f3\u5b50\u88ab\u62ff\u5149\u4e86\uff0c\u5728\u67d0\u4e9b\u7279\u6b8a\u60c5\u51b5\u4e0b\u4ed6\u5e94\u8be5\u91c7\u7528\u8fd9\u79cd\u65b9\u6cd5\uff1b\n2. \u62ff $A(i) - 1$ \u4e2a\uff0c\u8fd9\u5806\u77f3\u5b50\u5269\u4e0b $1$ \u4e2a\uff0c\u5f3a\u5236\u540e\u62ff\u7684\u4eba\u62ff\u8d70\u8fd9\u4e00\u4e2a\uff0c\u4ed6\u5728\u4e0b\u4e00\u5806\u4e2d\u4ecd\u7136\u5177\u6709\u201c\u4e3b\u52a8\u6743\u201d\uff0c\u8fd9\u79cd\u65b9\u6cd5\u9002\u7528\u4e8e\u4e00\u822c\u60c5\u51b5\u3002\n\n\u4e0b\u9762\u5f00\u59cb\u8ba8\u8bba\u3002\n\n- \u5982\u679c $n$ \u5806\u77f3\u5b50\u7684\u4e2a\u6570\u5168\u90e8\u5927\u4e8e $1$\uff0c\u5148\u62ff\u7684\u4eba\u5728\u524d $n - 1$ \u5806\u4e2d\u91c7\u7528\u7b2c $2$ \u79cd\uff0c\u4f7f\u4ed6\u4e00\u76f4\u5177\u6709\u201c\u4e3b\u52a8\u6743\u201d\u3002\u800c\u5728\u6700\u540e\u4e00\u5806\u62ff\u8d70\u5168\u90e8\u77f3\u5b50\uff0c\u4ed6\u5c31\u8d62\u4e86\uff1b\n- \u5982\u679c $n$ \u5806\u77f3\u5b50\u7684\u4e2a\u6570\u5168\u90e8\u7b49\u4e8e $1$\uff0c\u90a3\u4e48\u5148\u62ff\u7684\u4eba\u4e0e\u540e\u62ff\u7684\u4eba\u603b\u662f\u6ca1\u5f97\u9009\uff0c\u6bcf\u6b21\u5168\u62ff\u8d70\uff1a\n  - \u82e5 $2 \\mid n$\uff0c\u5219\u6700\u540e\u4e00\u5806\u540e\u62ff\u7684\u4eba\u5177\u6709\u201c\u4e3b\u52a8\u6743\u201d\uff0c\u540e\u62ff\u7684\u4eba\u5c31\u8d62\u4e86\uff1b\n  - \u82e5 $2 \\nmid n$\uff0c\u5219\u6700\u540e\u4e00\u5806\u5148\u62ff\u7684\u4eba\u5177\u6709\u201c\u4e3b\u52a8\u6743\u201d\uff0c\u5148\u62ff\u7684\u4eba\u5c31\u8d62\u4e86\u3002\n- \u5982\u679c\u662f\u5176\u4ed6\u60c5\u51b5\uff0c\u5373\u6709 $1$ \u4f46\u4e0d\u5168\u662f $1$\uff0c\u90a3\u4e48\u5728\u524d\u7f00 $1$ \uff08\u524d\u51e0\u5806\u8fde\u7eed $1$\uff09\u4e2d\uff0c\u53c2\u7167\u4e0a\u4e00\u79cd\u60c5\u51b5\uff1b\u5bf9\u4e8e\u85cf\u5728\u4e2d\u95f4\u7684 $1$\uff0c\u8db3\u591f\u806a\u660e\u7684\u9009\u624b\u53ef\u4ee5\u901a\u8fc7\u4e0e\u524d\u9762\u7684\u5806\u8c03\u5242\u6765\u4fdd\u6301\u81ea\u5df1\u7684\u201c\u4e3b\u52a8\u6743\u201d\uff0c\u6240\u4ee5\u4e0d\u5fc5\u7ba1\u3002\n\n# Code\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n\nusing namespace std;\n\nconst int N = 1e5 + 10;\nint A[N];                                   // \u6bcf\u5806\u4e2a\u6570\n\nint main() {\n    int T;\n    std::cin >> T;\n    while (T--) {\n        bool all = 1, exist = 0;\n        // all \u8868\u793a\u662f\u5426\u5168\u662f 1\uff0cexist \u8868\u793a\u662f\u5426\u5b58\u5728 1\n        int prefix1 = 0;                    // \u524d\u7f00 1 \u7684\u957f\u5ea6\n        bool first = 0;                     // \u5148\u62ff\u7b2c\u4e00\u5806\u7684\u4eba\u662f\u5426\u5177\u6709\u201c\u4e3b\u52a8\u6743\u201d\n        int n;\n        std::cin >> n;\n        for (int i = 1; i <= n; i++) {\n            std::cin >> A[i];\n            if (A[i] == 1) {                // \u5224\u65ad\u662f\u5426\u5168\u662f 1 \u6216 \u6ca1\u6709 1\n                exist = true;\n            } else {\n                all = false;\n            }\n        }\n        for (int i = 1; A[i] == 1; i++) {   // \u5bfb\u627e\u524d\u7f00 1 \u7684\u957f\u5ea6\n            prefix1++;\n        }\n        if (all) {                          // \u5224\u65ad\n            if (n % 2 == 1) {\n                first = 0;\n            } else {\n                first = 1;\n            }\n        } else if (!exist) {\n            first = 0;\n        } else {\n            if (prefix1 % 2 == 1) {\n                first = 1;\n            } else {\n                first = 0;\n            }\n        }\n        if (!first) {\n            std::cout << \"First\" << std::endl;\n        } else {\n            std::cout << \"Second\" << std::endl;\n        }\n    }\n}\n```",
        "postTime": 1595419799,
        "uid": 84200,
        "name": "xrdrsp",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1382B \u3010Sequential Nim\u3011"
    },
    {
        "content": "**Warning: \u672c\u9898\u89e3\u975e\u6807\u7b97**\n\n\n------------\n\u5148\u7279\u5224\u6240\u6709\u6570\u90fd\u4e3a $1$ \u6216\u90fd\u4e0d\u4e3a $1$ \u7684\u60c5\u51b5\u3002\n\n- \u6240\u6709\u6570\u90fd\u4e3a $1$\uff1a\u5224\u65ad\u5947\u5076\u6027\uff1b\n- \u6240\u6709\u6570\u90fd\u4e0d\u4e3a $1$\uff1a\u5148\u624b\u5fc5\u80dc\uff0c\u539f\u56e0\u7565\u3002\n\n\n------------\n\u5bf9\u4e8e\u5176\u4f59\u60c5\u51b5\uff0c\u6b63\u96be\u5219\u53cd\u3002\n\n\u8bbe $\\text{flag}_i=1/2$ \u4e3a\u53d6\u8d70\u7b2c $i$ \u5806\u4e2d\u7684**\u6700\u540e\u4e00\u4e2a\u77f3\u5934**\u7684\u4eba\uff08**\u53d6\u5b8c**\u77f3\u5934\uff09\u7684\u7f16\u53f7\u3002\n\n>\u4f8b\u5982\uff0c\u82e5\u7b2c $2$ \u5806\u4e2d\u6709 $3$ \u4e2a\u77f3\u5934\uff0c1 \u53d6\u8d70\u524d $2$ \u4e2a\uff0c2 \u53d6\u8d70\u6700\u540e $1$ \u4e2a\uff0c\u5219 $\\text{flag}_2=\\textbf{2}$\u3002\n\n\u5047\u8bbe $\\text{flag}_n=1$\uff0c\u5373 1 \u83b7\u80dc\u3002\n\n\u679a\u4e3e $i=n-1,n-2,\\cdots,1$\u3002\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n- \u82e5 $\\text{flag}_{i+1}=1$\n\n\t- \u82e5 $a_i=1$\uff0c\u5373\u7b2c $i$ \u5806\u4e2d\u6709 $1$ \u4e2a\u77f3\u5934\u4e14\u7b2c $(i+1)$ \u5806\u88ab 1 \u53d6\u5b8c\uff0c\u5219\u7b2c $i$ \u5806\u5fc5\u7136\u88ab 2 \u53d6\u5b8c\u3002\u539f\u56e0\u7565\uff1b\n    - \u82e5 $a_i>1$\uff0c\u5373\u7b2c $i$ \u5806\u4e2d\u6709**\u591a\u4e8e** $1$ \u4e2a\u77f3\u5934\u4e14\u7b2c $(i+1)$ \u5806\u88ab 1 \u53d6\u5b8c\uff0c\u5219\u7b2c $i$ \u5806\u5fc5\u7136\u88ab 1 \u53d6\u5b8c\u3002\u56e0\u4e3a\u82e5\u7b2c $i$ \u5806\u88ab 2 \u53d6\u5b8c\uff0c\u5219 2 \u5728\u53d6\u7b2c $i$ \u5806\u7684\u65f6\u5019\u4f1a\u53d6 $(a_i-1)$ \u4e2a\u77f3\u5934\uff0c\u800c\u7559\u4e0b $1$ \u4e2a\u77f3\u5934\u7ed9 1 \u53d6\u8d70\u3002\u8fd9\u6837**\u5148\u540e\u624b**\u5173\u7cfb\u4fbf\u548c\u5047\u8bbe\u77db\u76fe\uff0c\u80dc\u8d1f\u4e5f\u968f\u4e4b\u9006\u8f6c\u3002\u6240\u4ee5\u7b2c $i$ \u5806\u4e0d\u53ef\u80fd\u88ab 2 \u53d6\u5b8c\u3002\n\n- \u82e5 $\\text{flag}_{i+1}=2$\uff0c\u5373\u7b2c $(i+1)$ \u5806\u88ab 2 \u53d6\u5b8c\uff0c\u5219\u7b2c $i$ \u5806\u5fc5\u7136\u88ab 1 \u53d6\u5b8c\u3002\u56e0\u4e3a\u82e5\u7b2c $i$ \u5806\u88ab 2 \u53d6\u5b8c\uff0c\u5219 2 \u4f1a\u53d6\u8d70 $a_i$ \u4e2a\uff08\u5373\u53d6\u5b8c\u7b2c $i$ \u5806\uff09\uff0c\u8ba9\u5148\u540e\u624b\u5173\u7cfb\u9006\u8f6c\u3002\n\n\u679a\u4e3e\u8fc7\u540e\u68c0\u67e5 $\\text{flag}_1$ \u662f\u5426\u4e3a $1$ \u5373\u5f97\u5230\u7b54\u6848\uff08\u901a\u8fc7\u5224\u65ad\u4e0e\u5047\u8bbe\u662f\u5426\u77db\u76fe\uff0c\u5f97\u5230\u7b54\u6848\uff09\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u7ebf\u6027\u3002\n\nCode:\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxN=100005;\nint flag[maxN];\nint main() {\n\tint t; scanf(\"%d\",&t);\nfor (;t;t--) {\n\tint n; scanf(\"%d\",&n);\n\tvector<int> a(n+1);\n\tint one=0;\n\tfor (int i=1;i<=n;i++) {\n\t\tscanf(\"%d\",&a[i]);\n\t\tif (a[i]==1) one++;\n\t}\n\tif (!one) puts(\"First\");\n\telse if (one==n) puts(n&1?\"First\":\"Second\");\n\telse {\n\t\tflag[n]=1;\n\t\tfor (int i=n-1;i;i--)\n\t\t\tif (flag[i+1]==1)\n\t\t\t\tif (a[i]==1) flag[i]=2;\n\t\t\t\telse flag[i]=1;\n\t\t\telse flag[i]=1;\n\t\tputs(flag[1]==1?\"First\":\"Second\");\n\t}\n}\n}\n```\n",
        "postTime": 1595408963,
        "uid": 46747,
        "name": "Aehnuwx",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1382B \u3010Sequential Nim\u3011"
    },
    {
        "content": "## \u6b63\u6587\n\n\u770b\u8d77\u6765\u50cf\u662f nim \u6e38\u620f\uff0c\u5b9e\u5219\u4e0d\u7136\u3002(\u6211\u4e0d\u4f1a\u544a\u8bc9\u4f60\u6211\u60f3\u628anim\u6e38\u620f\u7684\u677f\u5b50\u5957\u4e0a\u53bb\u7684\u3002\n\n\u7136\u540e\u8bfb\u4e86\u4e0b\u9898\u76ee\uff0c\u53d1\u73b0\u6309\u53ea\u80fd\u4ece\u5f00\u59cb\u7684\u5806\u53d6\u3002\n\n\u90a3\u4e48\uff0c\u8003\u8651\u5f00\u5934\u6ca1\u6709 1 \u7684\u60c5\u51b5\u4e14\u8fd8\u6709\u4e24\u4e2a\u4ee5\u4e0a\u7684\u5806\uff0c\u90a3\u4e48\u5f88\u660e\u663e\u6b64\u65f6\u7684\u8fd9\u4e2a\u4eba\uff0c\u90fd\u53ef\u4ee5\u4e2a\u540e\u624b\u7559\u4e00\u4e2a\u77f3\u5b50\u6570\u4e3a 1 \u7684\u4e00\u4e2a\u5806\uff0c\u8fd9\u6837\u8fd9\u4e2a\u4eba\u4e00\u76f4\u90fd\u53ef\u4ee5\u4fdd\u8bc1\u5148\u624b\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5148\u624b\u662f\u5fc5\u80dc\u7684\u3002\n\n\u56e0\u4e3a\u52a0\u5165\u540e\u8fb9\u8fd8\u6709**\u4e00\u4e2a\u5806**\uff0c\u90a3\u4e48\u5b83\u7ed9\u540e\u624b\u5269\u4e00\u4e2a\uff0c\u7136\u540e\u62ff\u4e00\u5806\u3002\n\n\u8981\u662f\u53ea\u5269\u4e0b\u4e00\u4e2a\u5806\u4e86\uff0c\u90a3\u4e48\u5b83\u76f4\u63a5\u62ff\u8d70\u5c31\u5b8c\u4e86\u3002\n\n\u6240\u4ee5\u53ea\u8981\u7edf\u8ba1\u5f00\u5934\u6709\u591a\u5c11\u4e2a\u8fde\u7eed\u7684\u77f3\u5b50\u6570\u4e3a1\u7684\u5806\u5c31\u597d\u4e86\uff0c\u6ce8\u610f\u6700\u540e\u4e00\u4e2a\u4e0d\u7b97\u3002\u56e0\u4e3a\uff0c\u5148\u624b\u53ef\u4ee5\u76f4\u63a5\u62ff\u5b8c\u3002\n\n\u8fd9\u6837\u5b50\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u3002\n\n- \u5982\u679c\u5f00\u59cb\u6709\u5947\u6570\u4e2a\u5806 \u540e\u624b\u5fc5\u80dc\uff0c\u56e0\u4e3a\u540e\u624b\u53ef\u4ee5\u5728\u53d6\u5b8c\u8fd9\u4e9b\u4e1c\u897f\u4e4b\u540e\u53d8\u6210\u5148\u624b\n- \u5982\u679c\u5f00\u59cb\u6709\u5076\u6570\u4e2a\u5806 \u5148\u624b\u5fc5\u80dc\n\n```cpp\n#include <bits/stdc++.h>\n\n#define gc( ) std::getchar( )\n#define pc( i ) std::putchar( i )\n\ntemplate < typename T >\ninline T read( )\n{\n\tregister T x = 0;\n\tregister char ch = gc( );\n\tregister bool f = 0;\n\twhile( !std::isdigit( ch ) )\n\t{\n\t\tf = ( ch == '-' );\n\t\tch = gc( );\n\t}\n\twhile( std::isdigit( ch ) )\n\t{\n\t\tx = x * 10 + ( ch - '0' );\n\t\tch = gc( );\n\t}\n\treturn f ? -x : x;\n}\n\ntemplate < typename T >\nvoid print( T x )\n{\n\tif( x < 0 )\n\t{\n\t\tx = -x;\n\t\tpc( '-' );\n\t}\n\tif( x < 10 )\n\t{\n\t\tpc( x + 48 );\n\t\treturn;\n\t}\n\tprint < T > ( x / 10 );\n\tpc( x % 10 + 48 );\n\treturn ;\n}\n\nnamespace Solution\n{\n#define IOS std::ios::sync_with_stdio( false ), std::cin.tie( 0 ), std::cout.tie( 0 )\n#define Rep( i, j, k ) for( int i = j; i >= k; --i )\n#define rdi( ) read < int > ( )\n#define rdl( ) read < long long > ( )\n#define pti( i ) print < int > ( i ), putchar( '\\n' )\n#define ptl( i ) print < long long > ( i ), putchar( '\\n' )\n#define For( i, j, k ) for( int i = j; i <= k; ++i )\n\tusing std::cin;\n\tusing std::cout;\n\tusing std::endl;\n\tusing std::vector;\n\tusing std::map;\n\tusing std::queue;\n\tusing std::deque;\n\tusing std::set;\n\tusing std::pair;\n\tconst int Maxn = 204001;\n\tint t, n;\n\tvoid fakemain( )\n\t{\n\t\tIOS;\n\t\tcin >> t;\n\t\twhile( t-- )\n\t\t{\n\t\t\tcin >> n;\n\t\t\tint i, tmp, len = 0;\n\t\t\tfor( i = 1; i <= n - 1; ++i )\n\t\t\t{\n\t\t\t\tcin >> tmp;\n\t\t\t\tlen += tmp == 1;\n\t\t\t\tif( tmp != 1 ) break;\n\t\t\t}\n\t\t\tif( i < n )\n\t\t\t\t++i;\n\t\t\tfor( ; i <= n; ++i )\n\t\t\t cin >> tmp;\n\t\t\tcout << ( ( len & 1 ) ? \"Second\" : \"First\" ) << '\\n';\n\t\t}\n\t\treturn;\n\t}\n\n} // namespace Solution\n\nint main( int argc, char* argv[] )\n{\n\tSolution::fakemain( );\n\treturn 0;\n}\n```",
        "postTime": 1595389373,
        "uid": 232125,
        "name": "SiRiehn_nx",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1382B \u3010Sequential Nim\u3011"
    }
]