[
    {
        "content": "# $Introducer$\n\n\u5176\u5b9e\u8bc4\u9ed1\u7740\u5b9e\u6709\u4e00\u70b9\u70b9\u8fc7\u5206\u4e86 ~~\uff08\u7b2c\u4e00\u9053\u9ed1\u9898\uff09~~\n\n\u4ee3\u7801\u5b9e\u73b0\u7b97\u4e0d\u4e0a\u96be\uff0c\u601d\u7ef4\u8fd8\u662f\u6709\u96be\u5ea6\u6ef4\n\n\u5b66\u6821\u8bb2\u9898\u505a\u4e86Markdown\u987a\u4fbf\u5c31\u5f53\u9898\u89e3\u53d1\u4e86\n\n# $Description$\n\n\u7ed9\u4f60\u4e00\u68f5\u5e26\u6743\u6709\u6839\u6811\uff0c\u5b83\u7684\u6839\u4e3a1\u3002\u4e14\u4fdd\u8bc1\u5bf9\u4e8e\u6bcf\u4e2a\u70b9$i$\uff0c\u5b83\u7684\u7236\u4eb2$Father_i<i$,\u4e14$Father_i  \\rightarrow i$\u7684\u6743\u503c\u4e3a$w_i$\u3002\n\n\u540c\u65f6\uff0c\u8fd9\u68f5\u6811\u6709\u4e00\u4e2a\u6027\u8d28\uff1a\u5982\u679c\u6211\u4eec$DFS$\u8fd9\u4e00\u68f5\u6811\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u90fd\u9012\u589e\u8bbf\u95ee\u5176\u5b50\u8282\u70b9\uff0c\u6bcf\u8bbf\u95ee\u4e00\u4e2a\u8282\u70b9\u5c31\u8bb0\u5f55\u5176\u7f16\u53f7\uff0c\u90a3\u4e48\u5f97\u5230\u7684\u7f16\u53f7\u521a\u597d\u4e3a$1$\u5230$n$.\n\n\u73b0\u5728\u6709$q$\u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u7ed9\u51fa$v_i,l_i,r_i$,\u6c42\u4ece$v_i$\u51fa\u53d1\u5230$[l_i,r_i]$\u4e2d\u7684\u4e00\u4e2a\u53f6\u5b50\u7ed3\u70b9\u7684\u7684\u6700\u77ed\u8ddd\u79bb\uff08\u4fdd\u8bc1$[l_i,r_i]$\u4e4b\u4e2d\u6709\u4e00\u4e2a\u53f6\u5b50\u7ed3\u70b9\uff09\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a\n\n$3 \\leq n \\leq5\\times10^5,1 \\leq q \\leq 5\\times10^5\\;\\;$\n\n$1\\leq Father_i<i ,1\\leq w_i \\leq10^9$\n\n# $Solution$\n\n#### \u4ece\u7279\u6b8a\u6027\u8d28\u5165\u624b\u601d\u8003\n\n$Special\\;1$\n\n\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9\uff0c\u5b83\u7684\u5b50\u8282\u70b9\u5747\u6bd4\u5b83\u5927\u3002\n\n$Special\\;2$\n\n\u4e00\u68f5\u6811\uff0c$DFS$\u7684\u65f6\u5019\uff0c\u6bcf\u4e2a\u70b9\u9012\u589e\u8bbf\u95ee\u5176\u5b50\u8282\u70b9\uff0c\u5f97\u5230\u7f16\u53f7\u521a\u597d\u4e3a$1$\u5230$n$\u7684\u5e8f\u5217\n\n\n$Thinking~ Special ~1 ~and~ Special ~2$\n\n\u8fd9\u4e9b\u7279\u6b8a\u70b9\u53c8\u610f\u5473\u7740\u4ec0\u4e48\u5462\u3002\n\n\u65e2\u7136\u5bf9\u4e8e\u4e00\u4e2a\u70b9\uff0c\u5b50\u8282\u70b9\u90fd\u6bd4\u5b83\u8981\u5927\uff0c\u540c\u65f6\u7684\u5b83\u53c8\u662f\u9012\u589e\u6709\u5e8f\u7684\uff0c\u6240\u4ee5\u8bf4\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u70b9$i$\u5b83\u7684\u5b50\u6811\u7684\u8282\u70b9\u7684\u7f16\u53f7\uff0c\u662f\u4e00\u4e2a$[Min_{son} , Max_{son}]$\u7684\u8fde\u7eed\u7684\u5e8f\u5217\u3002\n\n#### \u6709\u4e86\u8fd9\u4e2a\u7279\u6b8a\u6027\u8d28\u4e4b\u540e\uff0c\u6211\u4eec\u7ee7\u7eed\u601d\u8003\u5982\u4f55\u5904\u7406\u8fd9\u68f5\u7279\u6b8a\u7684\u6811\u3002\n\n\n\u6211\u4eec\u5148\u7279\u6b8a\u5316\u5904\u7406\u4e00\u4e2a\u4f8b\u5b50\u3002\u8bbe\u4e00\u975e\u53f6\u5b50\u7ed3\u70b9$u$\uff0c\u6709\u5176\u4e00\u513f\u5b50$v$\uff0c\u7279\u522b\u7684\u8bbe\u4e00\u6761\u8fb9$(u,v)$\u6743\u503c\u4e3a$w$\u3002\u6211\u4eec\u6bcf\u5f53\u5f80\u4e0b\u8dd1\u8fd9\u4e00\u6761\u8fb9\u7684\u65f6\u5019\uff08\u5373\u5f53\u524d\u7ed3\u70b9$now$\u7531$u \\to v$\uff09\u90a3\u6211\u4eec\u5f53\u524d\u7ed3\u70b9\u5230\u6240\u6709\u53f6\u5b50\u7ed3\u70b9\u7684\u8ddd\u79bb\u4f1a\u6709\u4ec0\u4e48\u53d8\u5316\uff1f\n\n\u663e\u7136\u6709\u4e24\u79cd\u60c5\u51b5\n\n$Case ~1$\n\n\u4e0d\u5728$v$\u7684\u5b50\u6811\u91cc\u7684\u53f6\u5b50\u7ed3\u70b9\u5230$now$\u7684\u8ddd\u79bb\u4f1a$+w$\u3002\n\n$Case ~2$\n\n\u5728$v$\u7684\u5b50\u6811\u91cc\u7684\u53f6\u5b50\u7ed3\u70b9\u5230$now$\u7684\u8ddd\u79bb\u4f1a$-w$\u3002\n\n\n\u90a3\u4e48\u6211\u4eec\u6bcf\u5f53\u8dd1\u4e00\u6761\u8fb9\u7684\u65f6\u5019\u53ea\u8981\u628a\u6240\u6709\u4e0d\u5728\u5b50\u6811\u91cc\u7684\u53f6\u5b50\u7ed3\u70b9$+w$\uff0c\u7136\u540e\u628a\u5b50\u6811\u91cc\u7684\u53f6\u5b50\u7ed3\u70b9$-w$\u5c31\u597d\u4e86\uff0c\u7136\u540e\u53d6\u6240\u6709\u7684\u6700\u5c0f\u503c\u3002\u540c\u6837\u7684\uff0c\u5b50\u6811\u662f$[Min_{son} , Max_{son}]$\u7684\u533a\u95f4\uff0c\u6240\u4ee5\u8bf4\u533a\u95f4\u4fee\u6539+\u67e5\u8be2\uff0c\u663e\u800c\u6613\u89c1\u7ebf\u6bb5\u6811\u53ef\u7ef4\u62a4\u3002\n\n#### \u7b97\u6cd5\u6d41\u7a0b\u5c31\u5904\u6765\u4e86\n\n$Step~1$ $DFS$\u4e00\u904d\uff0c\u627e\u5230\u6bcf\u4e2a\u8282\u70b9\u5176\u5b50\u6811\u7684\u7f16\u53f7\u6700\u5927\u503c\uff0c\u5e76\u4e14\u5904\u7406\u6bcf\u4e2a\u8282\u70b9\u5230\u6839\u7684\u8ddd\u79bb\u3002\n\n$Step~2$ \u628a\u6240\u6709\u8282\u70b9\u52a0\u5165\u7ebf\u6bb5\u6811\uff0c\u628a\u53f6\u5b50\u8282\u70b9\u8d4b\u6210\u5176\u5230\u6839\u7684\u8ddd\u79bb\uff0c\u4e3a\u4e86\u8ba9\u975e\u53f6\u5b50\u8282\u70b9\u4e0d\u5f71\u54cd\u5904\u7406\uff0c\u5168\u90fd\u8d4b\u6210$INF$\u3002\n\n$Step~3$ $DFS$\u7b2c\u4e8c\u904d\uff0c\u6bcf\u8dd1\u4e00\u6761\u8fb9\u7528\u7ebf\u6bb5\u6811\u533a\u95f4\u4fee\u6539\uff0c\u8dd1\u5230\u4e00\u4e2a\u8282\u70b9\u7684\u65f6\u5019\u7ebf\u6bb5\u6811\u67e5\u8be2\u6700\u5c0f\u503c\u3002\n\n## $Tips$\n\n$First$.\u628a$1$\u5230$n$\u7684\u533a\u95f4$+w$\u7136\u540e\u518d\u628a$[Min_{son} , Max_{son}]-2\\times w$\u66f4\u52a0\u4e0d\u5bb9\u6613\u51fa\u9505\u3002\n\n$Second$.\u7b2c\u4e8c\u904d\u5f80\u4e0b$DFS$\u7684\u65f6\u5019\u8bb0\u5f97\u56de\u6eaf\u3002\n\n $Third$.$INF$\u8981\u5f00\u7684\u8db3\u591f\u5927\u3002\n\n# $Code$\n\n```cpp\n#include<bits/stdc++.h>\n#define mid (l+r)/2\n#define ri register int \n#define ll long long \nusing namespace std;\nconst ll INF=LLONG_MAX/2;\nconst ll maxG=500005;\nll n,m;\nll tot;\nll ql[maxG],qr[maxG],siz[maxG],head[maxG],dis[maxG],ans[maxG],laz[maxG<<2],tr[maxG<<2];\nvector<ll> q[maxG];\nstruct node{\n\tll u,v,w,nxt;\n}e[maxG];\n \ntemplate <class T> inline void read(T&x){\n\tbool f;char ch=getchar();\n\tfor(f=false;!isdigit(ch);ch=getchar())if(ch=='-')f=true;\n\tfor(x=0;isdigit(ch);x=(x<<1)+(x<<3)+(ch^48),ch=getchar());\n\tx*=f==1?-1:1;\n}\n\ninline ll ls(ll u){return u<<1;}\ninline ll rs(ll u){return u<<1|1;}\ninline void pushup(ll u){tr[u]=min(tr[ls(u)],tr[rs(u)]);}\n\ninline void lazy(ll num){\n\tif(laz[num]){\n\t\tlaz[ls(num)]+=laz[num];\n\t\tlaz[rs(num)]+=laz[num];\n\t\ttr[ls(num)]+=laz[num];\n\t\ttr[rs(num)]+=laz[num];\n\t\tlaz[num]=0;\n\t}\n}\n\ninline void updata(ll l,ll r,ll x,ll y,ll num,ll k){\n\tif(l>=x&&r<=y) {\n\t\ttr[num]+=k;\n\t\tlaz[num]+=k;\n\t\treturn;\n\t}\n\tlazy(num);\n\tif(mid>=x) updata(l,mid,x,y,ls(num),k);\n\tif(mid<y)  updata(mid+1,r,x,y,rs(num),k);\n\tpushup(num);\n}\n\ninline ll getans(ll l,ll r,ll x,ll y,ll num){\n\tif(l>=x&&r<=y) return tr[num];\n\tll ans=INF;\n\tlazy(num);\n\tif(mid>=x) ans=min(ans,getans(l,mid,x,y,ls(num)));\n\tif(mid<y)  ans=min(ans,getans(mid+1,r,x,y,rs(num)));\n\treturn ans;\n}\n\n\ninline void add(ll u,ll v,ll w){\n\te[++tot]=(node){u,v,w,head[u]};\n\thead[u]=tot;\n}\n\ninline void dfs1(ll u){\n\tsiz[u]=u;\n\tfor(ri i=head[u];i;i=e[i].nxt){\n\t\tll v=e[i].v,w=e[i].w;\n\t\tdis[v]=dis[u]+w;\n\t\tdfs1(v);\n\t\tsiz[u]=max(siz[u],siz[v]);\n\t}\n}\n\ninline void dfs2(ll u){\n\tll len=q[u].size();\n\tfor(ri i=0;i<len;i++) ans[q[u][i]]=getans(1,n,ql[q[u][i]],qr[q[u][i]],1);\n\tfor(ri i=head[u];i;i=e[i].nxt){\n\t\tll v=e[i].v,w=e[i].w;\n\t\tupdata(1,n,1,n,1,w);updata(1,n,v,siz[v],1,-w-w);\n\t\tdfs2(v);\n\t\tupdata(1,n,1,n,1,-w);updata(1,n,v,siz[v],1,w+w);\n\t}\n} \n\nint main(){\n  \tread(n),read(m);\n\tfor(ri x,y,i=2;i<=n;i++){\n  \t\tread(x),read(y);\n  \t\tadd(x,i,y);\n\t}\n\tdfs1(1);\n\tfor(ri i=1;i<=n;i++){\n\t\tif(siz[i]==i) updata(1,n,i,i,1,dis[i]);\n\t\telse updata(1,n,i,i,1,INF);\n\t}\n\tfor(ri x,i=1;i<=m;i++){\n\t\tread(x),read(ql[i]),read(qr[i]);\n\t\tq[x].push_back(i); \n\t}\n\tdfs2(1);\n\tfor(ri i=1;i<=m;i++) scanf(\"%lld\\n\",ans[i]); \n\treturn 0;\n}\n\n```\n\n# $Postscript$\n\n\u9e23\u8c22\uff1a @$Siyuan$\uff08UID\uff1a49725\uff09\u5946\u4f6c\u7684\u9898\u89e3\u5728\u6211\u5b66\u4e60\u4e2d\u5bf9\u6211\u7684\u5e2e\u52a9\n\n\n\u5e0c\u671b\u6211\u7684\u9898\u89e3\u80fd\u7ed9\u5927\u5bb6\u5e26\u6765\u4e00\u70b9\u542f\u53d1\n\n## $C_{S^P}~~2^0_19~~ R_P~ ~P^{L^US}~~ P_{L_US}$\n\n\u987a\u5e26\u6492\u82b1\n",
        "postTime": 1572875407,
        "uid": 134876,
        "name": "Grussg",
        "ccfLevel": 4,
        "title": "CF1110F Nearest Leaf \u9898\u89e3"
    },
    {
        "content": "[$$\\Large\\texttt{My Blog}$$](https://hydingsy.github.io/articles/problem-Codeforces-1110F-Nearest-Leaf/)\n\n---\n\n## Description\n\n> \u9898\u76ee\u94fe\u63a5\uff1a[Codeforces 1110F](https://codeforces.com/contest/1110/problem/F)\n\n\u7ed9\u4f60\u4e00\u68f5\u5e26\u6743\u6709\u6839\u6811\uff0c\u6839\u8282\u70b9\u4e3a $1$\uff0c\u4e14\u4fdd\u8bc1\u6bcf\u4e2a\u70b9\u7684\u7236\u4eb2 $p_i<i$\uff0c\u5176\u4e2d $(p_i,i)$ \u7684\u8fb9\u6743\u4e3a $w_i$\u3002\u8fd9\u68f5\u6811\u6709\u4e2a\u6027\u8d28\uff1a\u5982\u679c\u6211\u4eec $\\text{DFS}$ \u8fd9\u68f5\u6811\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u90fd\u9012\u589e\u679a\u4e3e\u513f\u5b50\u8282\u70b9\uff0c\u6bcf\u8bbf\u95ee\u5230\u4e00\u4e2a\u8282\u70b9\u5c31\u8bb0\u5f55\u5176\u7f16\u53f7\uff0c\u90a3\u4e48\u5f97\u5230\u7684\u5e8f\u5217\u521a\u597d\u4e3a $1$ \u5230 $n$\u3002\n\n\u73b0\u5728\u6709 $q$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u7ed9\u51fa $v_i,l_i,r_i$\uff0c\u6c42\u4ece $v_i$ \u51fa\u53d1\u5230 $[l_i,r_i]$ \u4e2d\u7684\u5176\u4e2d\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\uff08\u4fdd\u8bc1 $[l_i,r_i]$ \u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\uff09\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a$3\\le n\\le 5\\times 10^5$\uff0c$1\\le q\\le 5\\times 10^5$\uff0c$1\\le p_i<i$\uff0c$1\\le w_i\\le 10^9$\n\n------\n\n## Solution\n\n\u8003\u8651\u90fd\u6ca1\u6709\u4fee\u6539\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8be2\u95ee**\u79bb\u7ebf**\u4e0b\u6765\u3002\u6309\u7167\u8be2\u95ee\u7684\u8282\u70b9\u5206\u7c7b\u3002\n\n\u6211\u4eec\u9996\u5148\u89c2\u5bdf\u4e00\u4e2a\u6027\u8d28\uff1a\u7531\u4e8e $\\text{DFS}$ \u5e8f\u5c31\u662f $1$ \u5230 $n$\uff0c\u90a3\u4e48\u610f\u5473\u7740**\u6bcf\u68f5\u5b50\u6811\u5185**\u7684\u7f16\u53f7\u90fd\u662f**\u8fde\u7eed**\u7684\uff0c\u8bb0\u5b50\u6811 $i$ \u5185\u70b9\u7684**\u6700\u5927\u7f16\u53f7**\u4e3a $k_i$\u3002\n\n\u6211\u4eec\u518d\u8003\u8651\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u679c\u4ece $u$ \u5230\u8fbe $v$\uff08\u6211\u4eec\u8bb0\u8fd9\u6761\u8fb9\u4e3a $(u,v,w)$\uff09\uff0c\u5176\u4e2d $v$ \u7684\u6df1\u5ea6\u5927\u4e8e $u$\uff0c\u90a3\u4e48\u5230\u8fbe\u6bcf\u4e2a\u53f6\u5b50\u7684\u8def\u5f84\u957f\u5ea6\u4f1a\u53d1\u751f\u4ec0\u4e48\u53d8\u5316\uff1f\n\n- \u5bf9\u4e8e\u5728 $v$ \u5b50\u6811\u5185\u7684\u53f6\u5b50\uff0c\u5230\u4ed6\u4eec\u7684\u8ddd\u79bb**\u51cf\u5c11** $w$\u3002\n- \u5176\u4f59\u53f6\u5b50\u8282\u70b9\uff0c\u5230\u4ed6\u4eec\u7684\u8ddd\u79bb**\u589e\u52a0** $w$\u3002\n\n\u6839\u636e\u4e4b\u524d\u7684\u6027\u8d28\uff0c\u6211\u4eec\u53d1\u73b0 $v$ \u5b50\u6811\u5185\u7684\u8282\u70b9\u7f16\u53f7\u8fde\u7eed\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528**\u7ebf\u6bb5\u6811\u4fee\u6539**\u3002\u5177\u4f53\u7684\u4fee\u6539\u65b9\u6cd5\u4e3a\uff1a\u6211\u4eec\u5c06\u7ebf\u6bb5\u6811\u5185 $[1,n]$ \u7684\u8282\u70b9\u7684\u503c\u589e\u52a0 $w$\uff0c\u5c06 $[v,k_v]$ \u7684\u8282\u70b9\u7684\u503c\u51cf\u5c11 $2w$\u3002\n\n\u4e3a\u4e86\u9632\u6b62\u5bf9\u7ebf\u6bb5\u6811\u4e2d**\u975e\u53f6\u5b50\u8282\u70b9**\u7684\u5f71\u54cd\uff0c\u6211\u4eec\u5e94\u8be5\u8981\u5c06\u4ed6\u4eec\u7684\u503c\u521d\u59cb\u5316\u4e3a $\\text{INF}$\uff0c\u4f7f\u5f97\u65e0\u8bba\u5982\u4f55\u4fee\u6539\u90fd\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\u3002\n\n\u8fd9\u6837\u4e00\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u7b80\u5355\u7684\u7b97\u6cd5\u6d41\u7a0b\uff1a\n\n1. \u5c06 $1$ \u5230\u6240\u6709\u53f6\u5b50\u8282\u70b9\u7684\u8ddd\u79bb\u653e\u5230\u7ebf\u6bb5\u6811\u4e2d\uff0c\u975e\u53f6\u5b50\u8282\u70b9\u7684\u8ddd\u79bb\u5b9a\u4e49\u4e3a $\\text{INF}$\u3002\n2. \u76f4\u63a5 $\\text{DFS}$ \u6574\u68f5\u6811\uff0c\u5c06\u8be2\u95ee\u8282\u70b9\u4e3a**\u5f53\u524d\u8282\u70b9**\u7684\u8be2\u95ee\u7edf\u8ba1\u7b54\u6848\u3002\n3. \u679a\u4e3e\u5f53\u524d\u8282\u70b9 $u$ \u7684\u513f\u5b50\u8282\u70b9 $v$\uff0c\u5728\u7ebf\u6bb5\u6811\u4e0a\u4fee\u6539 $[v,k_v]$ \u7684\u503c\u5e76\u9012\u5f52\u6c42\u89e3 $v$ \u7684\u503c\uff1b\u9012\u5f52\u540e\u8bb0\u5f97**\u56de\u6eaf**\u6d88\u53bb\u5f71\u54cd\uff01\n\n**\u65f6\u95f4\u590d\u6742\u5ea6**\uff1a$O((n+q)\\log n)$\n\n------\n\n## Code\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <vector>\n#define lson p<<1\n#define rson p<<1|1\n\nconst int N=5e5+5;\nconst long long INF=1LL<<60;\nint n,m,tot,l[N],r[N],mx[N],lnk[N],ter[N],nxt[N],val[N];\nlong long seg[N<<2],tag[N<<2],dis[N],ans[N];\nstd::vector<int> q[N];\n\nvoid pushup(int p) {\n\tseg[p]=std::min(seg[lson],seg[rson]);\n}\nvoid pushdown(int p) {\n\tif(!tag[p]) return;\n\tlong long v=tag[p];\n\tseg[lson]+=v,tag[lson]+=v,seg[rson]+=v,tag[rson]+=v,tag[p]=0;\n}\nvoid modify(int x,int y,int p,int l,int r,long long v) {\n\tif(x<=l&&r<=y) {\n\t\tseg[p]+=v,tag[p]+=v;\n\t\treturn;\n\t}\n\tpushdown(p);\n\tint mid=(l+r)>>1;\n\tif(x<=mid) modify(x,y,lson,l,mid,v);\n\tif(mid<y) modify(x,y,rson,mid+1,r,v);\n\tpushup(p);\n}\nlong long query(int x,int y,int p,int l,int r) {\n\tif(x<=l&&r<=y) return seg[p];\n\tpushdown(p);\n\tint mid=(l+r)>>1;\n\tlong long ans=INF;\n\tif(x<=mid) ans=std::min(ans,query(x,y,lson,l,mid));\n\tif(mid<y) ans=std::min(ans,query(x,y,rson,mid+1,r));\n\treturn ans;\n}\nvoid add(int u,int v,int w) {\n\tter[++tot]=v,nxt[tot]=lnk[u],lnk[u]=tot,val[tot]=w;\n}\nvoid dfs1(int u) {\n\tmx[u]=u;\n\tfor(int i=lnk[u];i;i=nxt[i]) {\n\t\tint v=ter[i];\n\t\tdis[v]=dis[u]+val[i];\n\t\tdfs1(v);\n\t\tmx[u]=std::max(mx[u],mx[v]);\n\t}\n}\nvoid dfs2(int u) {\n\tfor(int i:q[u]) ans[i]=query(l[i],r[i],1,1,n);\n\tfor(int i=lnk[u];i;i=nxt[i]) {\n\t\tint v=ter[i],w=val[i];\n\t\tmodify(1,n,1,1,n,w),modify(v,mx[v],1,1,n,-w-w);\n\t\tdfs2(v);\n\t\tmodify(1,n,1,1,n,-w),modify(v,mx[v],1,1,n,w+w);\n\t}\n}\nint main() {\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=2;i<=n;++i) {\n\t\tint p,w;\n\t\tscanf(\"%d%d\",&p,&w),add(p,i,w);\n\t}\n\tdfs1(1);\n\tfor(int i=1;i<=n;++i) {\n\t\tmodify(i,i,1,1,n,i==mx[i]?dis[i]:INF);\n\t}\n\tfor(int i=1;i<=m;++i) {\n\t\tint v;\n\t\tscanf(\"%d%d%d\",&v,&l[i],&r[i]),q[v].push_back(i);\n\t}\n\tdfs2(1);\n\tfor(int i=1;i<=m;++i) printf(\"%lld\\n\",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1549632964,
        "uid": 49725,
        "name": "Siyuan",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1110F \u3010Nearest Leaf\u3011"
    },
    {
        "content": "\u4f60\u4eca\u5929\u8981\u662f\u80fd\u5361\u6389\u6211 $n\\log^2n$ \u7684\u70b9\u5206\u6811\uff0c\u6211 \u5f53 \u573a \u5c31 \u628a \u8fd9 \u4e2a \u7535 \u8111 \u5c4f \u5e55 \u5403 \u4e0b \u53bb\u3002\n\n~~\uff08cnm\u5361\u4e00\u4e2a\u5c0f\u65f6\u771f\u7d2f\uff0c\u53c8\u88ab\u5361\u7a7a\u95f4\u53c8\u88ab\u5361\u65f6\u95f4\uff0c\u5982\u679c\u60f3\u6284\u4ee3\u7801\u4e0d\u5efa\u8bae\u6765\u6284\u6211\u8fd9\u4e2a\u53c8\u81ed\u53c8\u957f\u7a7a\u95f4\u53c8\u5927\u8dd1\u7684\u53c8\u6162\u7684\u4ee3\u7801\u8c22\u8c22\u5408\u4f5c\u3002\uff09~~\n\n\n\u5efa\u51fa\u6765\u4e00\u4e2a\u6811\u9ad8 $\\log n$ \u7684\u70b9\u5206\u6811\uff0c\u7136\u540e\u5728\u4e0a\u9762\u628a\u53f6\u5b50\u4fe1\u606f\u52a0\u4e0a\u53bb\u3002\n\n\u7136\u540e\u628a\u6240\u6709\u7684\u90e8\u5206\u6254\u5230\u8fd9\u4e2a\u91cd\u5fc3\uff0c\u91cd\u5fc3\u7684\u91cd\u5fc3\uff08\n\n\u5bb9\u6613\u8bc1\u660e\u8fd9\u6837\u662f\u6700\u5c0f\u7684\uff0c\u6700\u5c0f\u7684\u5c31\u4e0d\u7528\u53bb\u6389\u76f8\u540c\u4e00\u6bb5\u7684\u8d21\u732e\u4e86\u3002\n\n\u7136\u540e\u6bcf\u6b21\u679a\u4e3e $father$ \u628a\u90a3\u9897\u5b50\u6811\u7684\u4fe1\u606f\u5e76\u8fc7\u6765\uff0c\u4e5f\u5c31\u662f\u5e76\u8d77\u6765\u4e24\u6bb5\u8def\u5f84\u3002\n\n- \u53e6\u5916\u4e00\u79cd\u505a\u6cd5\u3002\n\n\u6211\u4eec\u628a\u975e\u53f6\u5b50\u8282\u70b9\u8ddd\u79bb\u8bbe\u4e3a $inf$\uff0c\u53f6\u5b50\u8282\u70b9\u6b63\u5e38\u641e\uff0c\u7136\u540e dfs \u4e00\u904d\uff0c\u53ef\u56de\u9000\u6808\u7684\u601d\u60f3\uff0c\u5c31\u505a\u5b8c\u4e86\uff08\u8003\u8651\u4e00\u4e2a\u7c7b\u6362\u6839dp\u7684\u4e1c\u897f\uff0cu -> v \u7ed9\u6240\u6709\u7684\u8d21\u732e\u662f\uff0cv \u5b50\u6811\u4e2d\u8ddd\u79bb\u51cf\u5c11\uff0c\u975e v \u5b50\u6811\u4e2d\u8ddd\u79bb\u589e\u52a0\uff09\u4e8e\u662f\u5c31\u662f\u7ebf\u6bb5\u6811\u6253tag\uff0c\u67e5\u8be2\uff0c\u6253tag\uff0c\u67e5\u8be2\u2026\u2026\u5c31\u5b8c\u4e86\u3002\n\n```cpp\n// powered by c++11\n// by Isaunoya\n\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\n\n#include <bits/stdc++.h>\nusing namespace std;\nchar buf[1 << 21], *p1 = buf, *p2 = buf;\nchar getc(){ return p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 1 << 21, stdin), p1 == p2) ? EOF : *p1++; }\nvoid read(int&x) {\n  char c = getc();\n  for(x = 0; !isdigit(c); c = getc());\n  while(isdigit(c)) x = x * 10 + (c ^ '0'), c = getc();\n}\nvoid put(long long x) { if(x > 9) put(x / 10); putchar(x % 10 + '0'); }\ntemplate <class T>  void cmax(T& x, const T& y) { if (x < y) x = y; }\ntemplate <class T>  void cmin(T& x, const T& y) { if (x > y) x = y; }\nint n, m;\nconst int maxn = 5e5 + 1;\nint rt[maxn];\nstruct SMT {\n  long long val[maxn * 50];\n  int ls[maxn * 50], rs[maxn * 50], cnt;\n  SMT() { cnt = 0, memset(val, 0x3f, sizeof(val)); }\n  void upd(int& p, int l, int r, int x, long long v) {\n    if (!p) p = ++cnt;\n    if (l == r) { cmin(val[p], v); return; }\n    int mid = l + r >> 1;\n    if (x <= mid)\n      upd(ls[p], l, mid, x, v);\n    else\n      upd(rs[p], mid + 1, r, x, v);\n    val[p] = min(val[ls[p]], val[rs[p]]);\n  }\n\n  long long qry(int p, int a, int b, int l, int r) {\n    if (!p) return 1e18;\n    if (a <= l && r <= b) return val[p];\n    int mid = l + r >> 1;\n    long long ans = 1e18;\n    if (a <= mid) cmin(ans, qry(ls[p], a, b, l, mid));\n    if (b > mid) cmin(ans, qry(rs[p], a, b, mid + 1, r));\n    return ans;\n  }\n} smt;\nstruct edge { int v, nxt, w; } e[maxn << 1];\nint cnt = 0, head[maxn];\nvoid add(int u, int v, int w) {\n  e[++cnt] = { v, head[u], w }, head[u] = cnt;\n  e[++cnt] = { u, head[v], w }, head[v] = cnt;\n}\nstruct Tree {\n  int f[maxn][20], fa[maxn], dep[maxn];\n  long long len[maxn];\n\n  void dfs(int u) {\n    dep[u] = dep[fa[u]] + 1;\n    for (int i = head[u]; i; i = e[i].nxt) {\n      int v = e[i].v;\n      if (v ^ fa[u]) {\n        fa[v] = u, len[v] = len[u] + e[i].w;\n        dfs(v);\n      }\n    }\n  }\n\n  void solve() {\n    dfs(1);\n    for (int i = 1; i <= n; i++) f[i][0] = fa[i];\n    for (int j = 1; j < 20; j++) {\n      for (int i = 1; i <= n; i++) f[i][j] = f[f[i][j - 1]][j - 1];\n    }\n  }\n\n  int lca(int x, int y) {\n    if (dep[x] < dep[y]) x ^= y ^= x ^= y;\n    for (int i = 19; ~i; i--)\n      if (dep[f[x][i]] >= dep[y]) x = f[x][i];\n    if (x == y) return x;\n    for (int i = 19; ~i; i--)\n      if (f[x][i] ^ f[y][i]) x = f[x][i], y = f[y][i];\n    return f[x][0];\n  }\n\n  long long dis(int x, int y) { return len[x] + len[y] - (len[lca(x, y)] << 1); }\n} tr;\n\nstruct NewTree {\n  int sz[maxn], mx[maxn], vis[maxn], fa[maxn];\n  int rt, tot;\n\n  NewTree() { mx[rt = 0] = 1e9; }\n\n  void getrt(int u, int fa) {\n    sz[u] = 1, mx[u] = 0;\n    for (int i = head[u]; i; i = e[i].nxt) {\n      int v = e[i].v;\n      if (v ^ fa && !vis[v]) {\n        getrt(v, u);\n        sz[u] += sz[v], cmax(mx[u], sz[v]);\n      }\n    }\n    cmax(mx[u], tot - sz[u]);\n    if (mx[u] < mx[rt]) {\n      rt = u;\n    }\n  }\n\n  void solve(int u) {\n    vis[u] = 1;\n    const int now = tot;\n    for (int i = head[u]; i; i = e[i].nxt) {\n      int v = e[i].v;\n      if (!vis[v]) {\n        rt = 0, tot = (sz[v] > sz[u]) ? (now - sz[u]) : sz[v];\n        getrt(v, u), fa[rt] = u, solve(rt);\n      }\n    }\n  }\n\n  void upd(int x, int val) {\n    int now = x;\n    while (x) {\n      smt.upd(::rt[x], 1, n, val, tr.dis(now, x));\n      x = fa[x];\n    }\n  }\n\n  long long qry(int x, int l, int r) {\n    int now = x;\n    long long ans = 1e18;\n    while (x) {\n      cmin(ans, tr.dis(now, x) + smt.qry(::rt[x], l, r, 1, n));\n      x = fa[x];\n    }\n    return ans;\n  }\n} nt;\n\nsigned main() {\n  read(n), read(m);\n  std::vector<int> deg(n + 1, 0);\n  for (int i = 2; i <= n; i++) {\n    int father, w;\n    read(father), read(w);\n    add(father, i, w);\n    deg[father]++;\n    deg[i]++;\n  }\n  tr.solve(), nt.tot = n, nt.getrt(1, 0), nt.solve(nt.rt);\n  for (int i = 1; i <= n; i++) if(deg[i] == 1) { nt.upd(i, i); }\n  while (m--) {\n    int x, l, r;\n    read(x), read(l), read(r);\n    put(nt.qry(x, l, r)); putchar('\\n');\n  }\n  return 0;\n}\n```",
        "postTime": 1593198329,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1110F \u3010Nearest Leaf\u3011"
    },
    {
        "content": "\u5728 [cnblogs](https://www.cnblogs.com/registergen/p/cf1110f_solution.html) \u4e0a\u67e5\u770b\u3002\n\n## Solution\n\n\u8fd9\u4e2a\u9898\u7684\u6027\u8d28\u4fdd\u8bc1\u4e86\u5bf9\u4e8e\u4efb\u610f\u7684\u7ed3\u70b9\uff0c\u5b83\u7684\u5b50\u6811\u7684\u7ed3\u70b9\u7f16\u53f7\u662f\u8fde\u7eed\u7684\u533a\u95f4\u3002\n\n\u8003\u8651\u79bb\u7ebf\uff0c\u5c06\u6574\u68f5\u6811 DFS \u4e00\u904d\uff0c\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u52a8\u6001\u7ef4\u62a4\u5f53\u524d\u7ed3\u70b9 $u$ \u5230\u6240\u6709\u53f6\u5b50\u7684\u8ddd\u79bb\u3002\n\n\u4e8e\u662f\u95ee\u9898\u6765\u4e86\uff1a\u5f53\u6211\u4eec\u4ece $u$ DFS \u5230\u4ed6\u7684\u513f\u5b50 $v$ \u65f6\uff0c\u5230\u53f6\u5b50\u7684\u8ddd\u79bb\u6709\u4ec0\u4e48\u53d8\u5316\u5462\uff1f\n\n\u7b54\u6848\u662f\uff1a\u4ee5 $v$ \u4e3a\u6839\u7684\u5b50\u6811\u8ddd\u79bb $-w$\uff0c\u5176\u5b83\u7ed3\u70b9\u8ddd\u79bb $+w$\u3002\u7531\u4e8e\u8fd9\u4e24\u4e2a\u90fd\u662f\u8fde\u7eed\u533a\u95f4\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u5177\u4f53\u7ec6\u8282\u89c1\u4ee3\u7801\u3002\n\n## Code\n\n\u8bed\u8a00\u6807\u51c6\uff1aC++17\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<tuple>\n\ntypedef long long ll;\n\nconst int N=5e5;\nconst ll inf=0x3f3f3f3f3f3f3f3f;\n\ntypedef long long ll;\n\nstruct Node{\n\tll v,atag;\n};\n\nint n,m;\nstd::vector<std::pair<int,int>> G[N+10];\nll dis[N+10],a[N+10],ans[N+10];\nint cnt,L[N+10],R[N+10],siz[N+10];\nstd::vector<std::tuple<int,int,int>> q[N+10];\nNode t[N*4+10];\n\n// L[u], R[u] \u8868\u793a\u4ee5 u \u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u7684\u7ed3\u70b9\u7f16\u53f7\u7684 min \u548c max\u3002\nvoid DFS1(int u){\n\tL[u]=++cnt;\n\tsiz[u]=1;\n\tfor(auto [v,w]:G[u]){\n\t\tdis[v]=dis[u]+w;\n\t\tDFS1(v);\n\t\tsiz[u]+=siz[v];\n\t}\n\tR[u]=L[u]+siz[u]-1;\n}\n\n// \u533a\u95f4\u52a0\uff0c\u533a\u95f4\u6700\u5c0f\u503c\n#define ls(x) (x<<1)\n#define rs(x) (x<<1|1)\n\ninline void pushUp(int i){\n\tt[i].v=std::min(t[ls(i)].v,t[rs(i)].v);\n}\n\ninline void pushA(int i,ll atag){\n\tt[i].v+=atag;t[i].atag+=atag;\n}\n\ninline void pushDown(int i){\n\tif(t[i].atag){\n\t\tpushA(ls(i),t[i].atag);\n\t\tpushA(rs(i),t[i].atag);\n\t\tt[i].atag=0;\n\t}\n}\n\nvoid build(int i,int l,int r){\n\tif(l==r)return t[i].v=a[l],void();\n\tint mid=(l+r)>>1;\n\tbuild(ls(i),l,mid);\n\tbuild(rs(i),mid+1,r);\n\tpushUp(i);\n}\n\nvoid modify(int i,int l,int r,int ql,int qr,int x){\n\tif(ql<=l&&r<=qr)return pushA(i,x),void();\n\tint mid=(l+r)>>1;\n\tpushDown(i);\n\tif(ql<=mid)modify(ls(i),l,mid,ql,qr,x);\n\tif(qr>mid) modify(rs(i),mid+1,r,ql,qr,x);\n\tpushUp(i);\n}\n\nll query(int i,int l,int r,int ql,int qr){\n\tif(ql<=l&&r<=qr)return t[i].v;\n\tint mid=(l+r)>>1;\n\tpushDown(i);\n\tll res=inf;\n\tif(ql<=mid)res=std::min(res,query(ls(i),l,mid,ql,qr));\n\tif(qr>mid) res=std::min(res,query(rs(i),mid+1,r,ql,qr));\n\treturn res;\n}\n\n#undef ls\n#undef rs\n\nvoid DFS2(int u){\n\t// \u5904\u7406\u6240\u6709\u5728 u \u7ed3\u70b9\u4e0a\u7684\u8be2\u95ee\n\tfor(auto [l,r,id]:q[u])\n\t\tans[id]=query(1,1,n,l,r);\n\tfor(auto [v,w]:G[u]){\n\t\tmodify(1,1,n,1,n,w);\n\t\tmodify(1,1,n,L[v],R[v],-2*w);\n\t\tDFS2(v);\n\t\tmodify(1,1,n,1,n,-w);\n\t\tmodify(1,1,n,L[v],R[v],2*w);\n\t}\n}\n\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=2;i<=n;i++){\n\t\tint x,y;scanf(\"%d%d\",&x,&y);\n\t\tG[x].push_back({i,y});\n\t}\n\tfor(auto &x:G)std::sort(x.begin(),x.end());\n\tfor(int i=1;i<=m;i++){\n\t\tint v,l,r;scanf(\"%d%d%d\",&v,&l,&r);\n\t\tq[v].push_back({l,r,i});\n\t}\n\tDFS1(1);\n\tfor(int i=1;i<=n;i++){\n\t\tif(siz[i]==1)a[i]=dis[i];\n\t\telse a[i]=inf; // \u5982\u679c\u4e0d\u662f\u53f6\u5b50\u7ed3\u70b9\uff0c\u76f4\u63a5\u8bbe\u4e3a inf\uff0c\u4ee5\u5ffd\u7565\u5b83\u4eec\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\n\t}\n\tbuild(1,1,n);\n\tDFS2(1);\n\tfor(int i=1;i<=m;i++)\n\t\tprintf(\"%lld\\n\",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1636284070,
        "uid": 242702,
        "name": "registerGen",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1110F \u3010Nearest Leaf\u3011"
    },
    {
        "content": "\u52a0\u9ed1\u7684\u90a3\u53e5\u8bdd\uff1a**\u5982\u679c\u6211\u4eec DFS \u8fd9\u68f5\u6811\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u90fd\u9012\u589e\u679a\u4e3e\u513f\u5b50\u8282\u70b9\uff0c\u6bcf\u8bbf\u95ee\u5230\u4e00\u4e2a\u8282\u70b9\u5c31\u8bb0\u5f55\u5176\u7f16\u53f7\uff0c\u90a3\u4e48\u5f97\u5230\u7684\u5e8f\u5217\u521a\u597d\u4e3a 1 \u5230 n**\n\n\u5b66\u8fc7\u6811\u5256\u7684\u540c\u5b66\u5e94\u8be5\u60f3\u5230\uff0c\u6811\u5256\u7684\u65b9\u6cd5\u5c31\u662f\u5bf9\u6bcf\u4e2a\u70b9\u8fdb\u884c\u91cd\u65b0\u7f16\u53f7\uff0c\u8fd9\u6837\u6bcf\u4e2a\u5b50\u6811\u4e2d\u7684\u7f16\u53f7\u5c31\u662f\u8fde\u7eed\u7684\u3002\u518d\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\uff0c\u5f97\u5230\u7ed3\u679c\u3002\n\n\u8fd9\u9898\u4e5f\u53ef\u4ee5\u7528\u7c7b\u4f3c\u7684\u65b9\u6cd5\u3002\n\n\u540c\u65f6\u5bf9\u4e8e\u4ecex\u5230\u8fbey\uff0c\u8bb0\u8fd9\u6761\u8fb9\u4e3a\u7684\u957f\u5ea6\u4e3az\uff0c\u5176\u4e2d$dep_{y} > dep_{x}$\uff0c\u90a3\u4e48\u5230\u8fbe\u6bcf\u4e2a\u53f6\u5b50\u7684\u8def\u5f84\u957f\u5ea6\u4f1a\u53d1\u751f\u4ec0\u4e48\u53d8\u5316\uff1f\n\n\u5982\u8fc7\u8282\u70b9\u662fv\u7684\u5b50\u8282\u70b9\uff0c\u8ddd\u79bb\u51cf\u5c11z\uff0c\u5426\u5219\u589e\u52a0z\n\n\u4ee5\u4e0b\u5185\u5bb9\u6709\u53c2\u8003[\u673a\u623f\u8d85\u7ea7\u5927\u4f6c\u4e01\u601d\u6e90\u7684\u9898\u89e3](http://old.orzsiyuan.com/articles/problem-Codeforces-1110F-Nearest-Leaf)\n\n### \u65b9\u6cd5\uff1a\n1. \u5c06\u6839\u8282\u70b9\u5230\u6240\u6709\u53f6\u5b50\u8282\u70b9\u7684\u8ddd\u79bb\u653e\u5230\u7ebf\u6bb5\u6811\u4e2d\uff0c\u975e\u53f6\u5b50\u8282\u70b9\u7684\u8ddd\u79bb\u5b9a\u4e49\u4e3aINF\n2. \u76f4\u63a5DFS\u6574\u68f5\u6811\uff0c\u5c06\u8be2\u95ee\u8282\u70b9\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u8be2\u95ee\u7edf\u8ba1\u7b54\u6848\u3002\n3. \u679a\u4e3e\u5f53\u524d\u8282\u70b9x\u7684\u513f\u5b50\u8282\u70b9y\uff0c\u5728\u7ebf\u6bb5\u6811\u4e0a\u4fee\u6539\u5e76\u9012\u5f52\u6c42\u89e3y\u7684\u503c\n\n\u7279\u522b\u6ce8\u610fINF\u8981\u5199$2^{60}$,\u50cf$2^{32}-1$\u4e4b\u7c7b\u7684\u8fde\u6837\u4f8b\u90fd\u8fc7\u4e0d\u4e86\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#include<iostream>\n#include<cstdio>\n#define ll long long\nusing namespace std;\n\nconst ll INF=1ll<<60;\nll n,m,Max[500010],d[500010],L[500010],R[500010],ans[500010];\nll ver[1000010],edge[1000010],Next[1000010],head[500010],tot;\nvector<ll> q[500010];\nstruct SegmentTree{\n\tll l,r,Min,lazy;\n}tree[500010<<2];\n\ninline ll read(){\n\tll x=0,tmp=1;\n\tchar ch=getchar();\n\twhile(!isdigit(ch)){\n\t\tif(ch=='-') tmp=-1;\n\t\tch=getchar();\n\t}\n\twhile(isdigit(ch)){\n\t\tx=(x<<3)+(x<<1)+(ch^48);\n\t\tch=getchar();\n\t}\n\treturn tmp*x;\n}\n\ninline void write(ll x){\n\tif(x<0){\n\t\tputchar('-');\n\t\tx=-x;\n\t}\n\tll y=10,len=1;\n\twhile(y<=x){\n\t\ty=(y<<3)+(y<<1);\n\t\tlen++;\n\t}\n\twhile(len--){\n\t\ty/=10;\n\t\tputchar(x/y+48);\n\t\tx%=y;\n\t}\n}\n\ninline void addEdge(ll x,ll y,ll z){\n\tver[++tot]=y;\n\tedge[tot]=z;\n\tNext[tot]=head[x];\n\thead[x]=tot;\n}\n\nvoid dfs1(ll x){\n\tMax[x]=x;\n\tfor(ll i=head[x]; i; i=Next[i]){\n\t\tll y=ver[i],z=edge[i];\n\t\td[y]=d[x]+z;\n\t\tdfs1(y);\n\t\tMax[x]=max(Max[x],Max[y]);\n\t}\n}\n\ninline void pushup(ll p){\n\ttree[p].Min=min(tree[p<<1].Min,tree[p<<1|1].Min);\n}\n\ninline void pushdown(ll p){\n\tif(tree[p].lazy){\n\t\ttree[p<<1].Min+=tree[p].lazy;\n\t\ttree[p<<1].lazy+=tree[p].lazy;\n\t\ttree[p<<1|1].Min+=tree[p].lazy;\n\t\ttree[p<<1|1].lazy+=tree[p].lazy;\n\t\ttree[p].lazy=0;\n\t}\n}\n\nvoid build(ll p,ll l,ll r){\n\ttree[p].l=l; tree[p].r=r;\n\tif(l==r) return;\n\tll mid=(l+r)>>1;\n\tbuild(p<<1,l,mid);\n\tbuild(p<<1|1,mid+1,r);\n}\n\nvoid update(ll p,ll l,ll r,ll val){\n\tif(l<=tree[p].l&&tree[p].r<=r){\n\t\ttree[p].Min+=val;\n\t\ttree[p].lazy+=val;\n\t\treturn;\n\t}\n\tpushdown(p);\n\tll mid=(tree[p].l+tree[p].r)>>1;\n\tif(l<=mid) update(p<<1,l,r,val);\n\tif(r>mid) update(p<<1|1,l,r,val);\n\tpushup(p);\n}\n\nll query(ll p,ll l,ll r){\n\tif(l<=tree[p].l&&tree[p].r<=r) return tree[p].Min;\n\tpushdown(p);\n\tll mid=(tree[p].l+tree[p].r)>>1,ans=INF;\n\tif(l<=mid) ans=min(ans,query(p<<1,l,r));\n\tif(r>mid) ans=min(ans,query(p<<1|1,l,r));\n\treturn ans;\n}\n\nvoid dfs2(ll x){\n\tfor(ll i:q[x]) ans[i]=query(1,L[i],R[i]);\n\tfor(ll i=head[x]; i; i=Next[i]){\n\t\tll y=ver[i],z=edge[i];\n\t\tupdate(1,1,n,z); update(1,y,Max[y],-2*z);\n\t\tdfs2(y);\n\t\tupdate(1,1,n,-z); update(1,y,Max[y],2*z);\n\t}\n}\n\nint main(){\n\tn=read(); m=read();\n\tfor(ll i=2; i<=n; i++){\n\t\tll y=read(),z=read();\n\t\taddEdge(y,i,z);\n\t}\n\tdfs1(1);\n\tbuild(1,1,n);\n\tfor(ll i=1; i<=n; i++) update(1,i,i,i==Max[i]?d[i]:INF);\n\tfor(ll i=1; i<=m; i++){\n\t\tll x=read(); L[i]=read(); R[i]=read();\n\t\tq[x].push_back(i);\n\t}\n\tdfs2(1);\n\tfor(ll i=1; i<=m; i++){\n\t\twrite(ans[i]);\n\t\tputchar('\\n');\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1563542632,
        "uid": 27924,
        "name": "xukuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1110F \u3010Nearest Leaf\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9898\u5e76\u4e0d\u9700\u8981\u7528\u5565\u7279\u6b8a\u6027\u8d28\uff0c\u76f4\u63a5\u65e0\u8111\u70b9\u5206\u6cbb\u5373\u53ef\uff0c\u5728\u5168\u5c40\u5f00\u4e2a\u7ebf\u6bb5\u6811\u7ef4\u62a4dfs\u5e8f\u533a\u95f4\u5185\u6df1\u5ea6\u6700\u5c0f\u7684\u53f6\u5b50\uff0c\u7136\u540e\u628a\u6240\u6709\u8be2\u95ee\u79bb\u7ebf\u4e0b\u6765\u5b58\u5728\u6bcf\u4e2a\u70b9\u4e0a\uff0c\u70b9\u5206\u6cbb\u7684\u65f6\u5019\u5148dfs\u4e00\u904d\u8fde\u901a\u5757\u628a\u6bcf\u4e2a\u53f6\u5b50\u7684deep\u8bb0\u5728\u7ebf\u6bb5\u6811\u4e0a\uff0c\u7136\u540e\u518ddfs\u4e00\u904d\u7206\u626b\u6bcf\u4e2a\u70b9\u7684\u8be2\u95ee\u53bb\u7ebf\u6bb5\u6811\u4e0a\u67e5\u5c31\u884c\u4e86\uff0c\u6ce8\u610f\u56e0\u4e3a\u6c42\u7684\u662f\u6700\u77ed\u8def\u6240\u4ee5\u5e76\u4e0d\u9700\u8981\u8003\u8651\u533a\u95f4\u91cc\u7684\u53f6\u5b50\u548c\u81ea\u5df1\u5728\u540c\u4e00\u68f5\u5b50\u6811\u5185\u7684\u60c5\u51b5\u56e0\u4e3a\u90a3\u6837\u4e00\u5b9a\u4e0d\u4f18\uff0c\u590d\u6742\u5ea6\u663e\u7136$O(n\\log^2n)$\uff0c\u5f00\u4e864s\u6240\u4ee5\u53ef\u8fc7\u2026\u2026\n\n\u4e0a\u4ee3\u7801~\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define ll long long\n#define ls(_o) (_o<<1)\n#define inf 0x3f3f3f3f3f3f3f3f\n#define rs(_o) ((_o<<1)|1)\n#define up(_o) minn[_o]=min(minn[ls(_o)],minn[rs(_o)])\nusing namespace std;\nnamespace ywy{\n\tinline int get(){\n\t\tint n=0;char c;while((c=getchar())||23333){\n\t\t\tif(c>='0'&&c<='9')break;if(c=='-')goto s;\n\t\t}n=c-'0';while((c=getchar())||23333){\n\t\t\tif(c>='0'&&c<='9')n=n*10+c-'0';else return(n);\n\t\t}s:while((c=getchar())||23333){\n\t\t\tif(c>='0'&&c<='9')n=n*10-c+'0';else return(n);\n\t\t}\n\t}\n\tvoid print(ll num){\n\t\tif(num>=10)print(num/10);putchar(num%10+'0');\n\t}\n\ttypedef struct _b{\n\t\tint dest;int nxt;int len;\n\t}bian;\n\tbian memchi[1000001];\n\tint gn=1,heads[500001];\n\tinline void add(int s,int t,int l){\n\t\tmemchi[gn].dest=t;\n\t\tmemchi[gn].len=l;\n\t\tmemchi[gn].nxt=heads[s];\n\t\theads[s]=gn;gn++;\n\t}\n\tint tmp[500001],stk[500001],dfn[500001];\n\tll minn[2000001];\n\tunsigned char leaf[500001];\n\tll query(int rl,int rr,int l,int r,int tree){\n\t\tif(rl==l&&rr==r)return(minn[tree]);\n\t\tint mid=(l+r)>>1;\n\t\tif(rl>mid)return(query(rl,rr,mid+1,r,rs(tree)));\n\t\tif(rr<=mid)return(query(rl,rr,l,mid,ls(tree)));\n\t\treturn(min(query(rl,mid,l,mid,ls(tree)),query(mid+1,rr,mid+1,r,rs(tree))));\n\t}\n\tint nd[500001];int n;\n\tinline void setpt(int pt,ll num){\n\t\tminn[nd[pt]]=num;\n\t\tfor(register int i=nd[pt]>>1;i;i>>=1)up(i);\n\t}\n\tvoid build(int l,int r,int tree){\n\t\tminn[tree]=inf;\n\t\tif(l==r){\n\t\t\tnd[l]=tree;return;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tbuild(l,mid,ls(tree));\n\t\tbuild(mid+1,r,rs(tree));\n\t}\n\tint gdfn=1,sp=0;\n\tvoid dfs(int pt,int baba){\n\t\tdfn[pt]=gdfn;gdfn++;\n\t\tint ptr=0;\n\t\tfor(register int i=heads[pt];i;i=memchi[i].nxt){\n\t\t\tif(memchi[i].dest==baba)continue;\n\t\t\ttmp[ptr]=memchi[i].dest,ptr++;\n\t\t}if(!ptr){\n\t\t\tleaf[pt]=1;return;\n\t\t}\n\t\tsort(tmp,tmp+ptr);reverse(tmp,tmp+ptr);\n\t\tfor(register int i=0;i<ptr;i++)stk[sp]=tmp[i],sp++;\n\t\twhile(ptr){\n\t\t\tptr--;sp--;dfs(stk[sp],pt);\n\t\t}\n\t}\n\tll anss[500001];\n\tint vec[500001];\n\tunsigned char bv[500001];\n\ttypedef struct _n{\n\t\tint nxt;int l;int r;\n\t}node;\n\tnode nodes[500001];\n\tint tot=0,zx;\n\tvoid afs(int pt,int baba){\n\t\ttot++;\n\t\tfor(register int i=heads[pt];i;i=memchi[i].nxt){\n\t\t\tif(bv[memchi[i].dest]||memchi[i].dest==baba)continue;\n\t\t\tafs(memchi[i].dest,pt);\n\t\t}\n\t}\n\tint size[500001];\n\tvoid bfs(int pt,int baba){\n\t\tint mx=0;size[pt]=1;\n\t\tfor(register int i=heads[pt];i;i=memchi[i].nxt){\n\t\t\tif(bv[memchi[i].dest]||memchi[i].dest==baba)continue;\n\t\t\tbfs(memchi[i].dest,pt);\n\t\t\tsize[pt]+=size[memchi[i].dest];\n\t\t\tmx=max(mx,size[memchi[i].dest]);\n\t\t}\n\t\tif(max(mx,tot-size[pt])<=tot/2)zx=pt;\n\t}\n\tll deep[500001];\n\tvoid cfs(int pt,int baba){\n\t\tif(leaf[pt])setpt(dfn[pt],deep[pt]);\n\t\tfor(register int i=heads[pt];i;i=memchi[i].nxt){\n\t\t\tif(bv[memchi[i].dest]||memchi[i].dest==baba)continue;\n\t\t\tdeep[memchi[i].dest]=deep[pt]+memchi[i].len;\n\t\t\tcfs(memchi[i].dest,pt);\n\t\t}\n\t}\n\tvoid efs(int pt,int baba){\n\t\tfor(register int i=vec[pt];i;i=nodes[i].nxt){\n\t\t\tanss[i]=min(anss[i],deep[pt]+query(nodes[i].l,nodes[i].r,1,n,1));\n\t\t}\n\t\tfor(register int i=heads[pt];i;i=memchi[i].nxt){\n\t\t\tif(bv[memchi[i].dest]||memchi[i].dest==baba)continue;\n\t\t\tefs(memchi[i].dest,pt);\n\t\t}\n\t}\n\tvoid ffs(int pt,int baba){\n\t\tif(leaf[pt])setpt(dfn[pt],inf);\n\t\tfor(register int i=heads[pt];i;i=memchi[i].nxt){\n\t\t\tif(bv[memchi[i].dest]||memchi[i].dest==baba)continue;\n\t\t\tffs(memchi[i].dest,pt);\n\t\t}\n\t}\n\tvoid digui(int pt){\n\t\ttot=0;\n\t\tafs(pt,0);\n\t\tbfs(pt,0);\n\t\tint me=zx;\n\t\tdeep[me]=0;\n\t\tcfs(me,0);\n\t\tefs(me,0);\n\t\tffs(me,0);\n\t\tbv[me]=1;\n\t\tfor(register int i=heads[me];i;i=memchi[i].nxt){\n\t\t\tif(bv[memchi[i].dest])continue;\n\t\t\tdigui(memchi[i].dest);\n\t\t}\n\t}\n\tvoid ywymain(){\n\t\tn=get();\n\t\tint q=get();\n\t\tfor(register int i=2;i<=n;i++){\n\t\t\tint s=get(),l=get();\n\t\t\tadd(s,i,l);add(i,s,l);\n\t\t}\n\t\tbuild(1,n,1);\n\t\tdfs(1,0);\n\t\tfor(register int i=1;i<=q;i++){\n\t\t\tint v=get(),l=get(),r=get();\n\t\t\tnodes[i].l=l;\n\t\t\tnodes[i].r=r;\n\t\t\tnodes[i].nxt=vec[v];\n\t\t\tvec[v]=i;\n\t\t}\n\t\tmemset(anss,0x3f,sizeof(anss));\n\t\tdigui(1);\n\t\tfor(register int i=1;i<=q;i++)print(anss[i]),putchar('\\n');\n\t}\n}\nint main(){\n\tywy::ywymain();return(0);\n}\n```",
        "postTime": 1550893318,
        "uid": 125124,
        "name": "ywy_c_asm",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1110F \u3010Nearest Leaf\u3011"
    },
    {
        "content": "### Description \n\n\u7ed9\u4f60\u4e00\u9897\u6ee1\u8db3\u7f16\u53f7 = dfs \u5e8f\u7684\u5e26\u8fb9\u6743\u7684\u6709\u6839\u6811\u3002$m$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u7ed9\u51fa $v,l,r$ \u6c42\u7f16\u53f7\u5728 $[l,r]$ \u4e2d\u7684\u53f6\u5b50\u5230 $v$ \u8282\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\n\n$n,m \\leq 5\\times10^5,w \\leq 10^9$ \n\n\n### Solution \n\n\u5982\u679c\u6211\u4eec\u77e5\u9053 $u$ \u8282\u70b9\u5230\u6240\u6709\u53f6\u5b50\u7684\u6700\u77ed\u8def\uff0c\u5982\u4f55\u6c42\u51fa\u4ed6\u7684\u67d0\u4e00\u4e2a\u513f\u5b50 $v$ \u5230\u6240\u6709\u53f6\u5b50\u7684\u6700\u77ed\u8def\u5462\uff1f\n\n\u4e0d\u59a8\u8bbe $(u,v)$ \u7684\u8fb9\u6743\u662f $w$ \u3002\u90a3\u4e48\u5728 $v$ \u8fd9\u9897\u5b50\u6811\u5185\u7684\u53f6\u5b50\u5230 $v$ \u7684\u8ddd\u79bb\u8f83 $u$ \u8981\u51cf\u5c11 $w$ \uff1b $v$ \u8fd9\u9897\u5b50\u6811\u5916\u7684\u53f6\u5b50\u5230 $v$ \u7684\u8ddd\u79bb\u8f83 $u$ \u8981\u589e\u52a0 $w$ \u3002\n\n\u53c8\u826f\u5fc3\u51fa\u9898\u4eba\u7ed9\u7684\u6811\u662f\u6ee1\u8db3\u90a3\u4e2a\u6027\u8d28\u7684\uff0c\u6240\u4ee5\u5b50\u6811\u5185\u7684\u7f16\u53f7\u662f\u8fde\u7eed\u7684\u3002\n\n\u6240\u4ee5\u6700\u5f00\u59cb dfs \u4e00\u904d\u3002\u6c42\u51fa\u6bcf\u4e2a\u70b9\u5230\u6839\u7684\u8ddd\u79bb\u3002\u628a\u8be2\u95ee\u79bb\u7ebf\uff0c\u8fdb\u884c\u4e00\u6b21\u5148\u5e8f\u904d\u5386\u3002\n\n\u6bcf\u6b21\u8fdb\u5165\u5230\u4e00\u9897\u5b50\u6811\uff0c\u5c31\u7528\u7ebf\u6bb5\u6811\u628a\u8be5\u5b50\u6811\u5185\u7684\u53f6\u5b50\u51cf\u5c11 w \u5916\u9762\u7684\u589e\u52a0 w\n\n\u5f53\u56de\u6eaf\u7684\u7236\u4eb2\u7684\u65f6\u5019\uff0c\u5c31\u7528\u7ebf\u6bb5\u6811\u628a\u8be5\u5b50\u6811\u5185\u7684\u53f6\u5b50\u589e\u52a0 w \u5916\u9762\u7684\u51cf\u5c11 w\n\n\u7136\u540e\u904d\u5386\u5230\u4e00\u4e2a\u8282\u70b9\u5c31\u628a\u548c\u4ed6\u6709\u5173\u7684\u8be2\u95ee\u5168\u90fd\u7528\u7ebf\u6bb5\u6811\u91cc\u7684\u4fe1\u606f\u5904\u7406\u6389\u5c31\u884c\u4e86\n\n### Code\n\n[\u770b\u4ee3\u7801\u6233\u8fd9\u91cc](https://acfunction.github.io/2019/02/09/CF1110F/)",
        "postTime": 1549767673,
        "uid": 54745,
        "name": "Gypsophila",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1110F \u3010Nearest Leaf\u3011"
    }
]