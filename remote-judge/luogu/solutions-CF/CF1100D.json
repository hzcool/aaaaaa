[
    {
        "content": "\u9898\u610f\uff1a\n\n***\u672c\u9898\u4e3a\u4ea4\u4e92\u9898\u3002***\n\n***\u4f60\u6709\u4e00\u4e2a$999*999$\u7684\u68cb\u76d8\uff0c\u5176\u4e2d\u6709$666$\u4e2a\u5c0f\u5175\u548c\u4e00\u4e2a\u56fd\u738b\uff0c\u5c0f\u5175\u548c\u56fd\u738b\u7684\u4f4d\u7f6e\u90fd\u4e0d\u91cd\u590d\u3002***\n\n***\u4f60\u9700\u8981\u64cd\u63a7\u56fd\u738b\uff0c\u6bcf\u6b21\u53ef\u5411\u76f8\u90bb\u7684\u516b\u4e2a\u4f4d\u7f6e\u8d70\u53bb\uff0c\u4f46\u4e0d\u80fd\u8d70\u51fa\u8fb9\u754c\uff0c\u4e0d\u80fd\u8d70\u5728\u5df2\u7ecf\u6709\u5c0f\u5175\u7684\u4f4d\u7f6e\u3002***\n\n***\u5bf9\u65b9\u64cd\u63a7$666$\u4e2a\u5c0f\u5175\u3002\u6bcf\u6b21\u4f60\u64cd\u4f5c\u5b8c\u540e\uff0c\u5bf9\u65b9\u53ef\u4ee5\u9009\u62e9\u4e00\u4e2a\u5c0f\u5175\u5e76\u8ba9\u4ed6\u77ac\u79fb\u81f3\u573a\u4e0a\u67d0\u4e00\u4e2a\u7a7a\u4f4d\u7f6e\uff0c\u5e76\u544a\u8bc9\u4f60\u79fb\u52a8\u7684\u4fe1\u606f\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u4f60\u5c06\u83b7\u5f97$k,a,b$\uff0c\u8868\u793a\u7b2c$k$\u4e2a\u5c0f\u5175\u79fb\u52a8\u5230\u4e86$(a,b)$\u5904\u3002***\n\n***\u4f60\u83b7\u80dc\u7684\u6761\u4ef6\u662f\u67d0\u4e00\u6b21\u5bf9\u65b9\u64cd\u7eb5\u5b8c\u6bd5\u65f6\uff0c\u6709\u5c0f\u5175\u4e0e\u56fd\u738b\u5728\u540c\u4e00\u5217\u6216\u540c\u4e00\u884c\u3002***\n\n***\u4f60\u6700\u591a\u6709$2000$\u6b21\u64cd\u4f5c\u673a\u4f1a\uff0c\u4f60\u4e5f\u53ef\u4ee5\u9009\u62e9\u4e0d\u8d70\uff0c\u6bcf\u4e00\u6b21\uff0c\u4f60\u9700\u8981\u8f93\u51fa\u56fd\u738b\u5f53\u524d\u6240\u5728\u7684\u4f4d\u7f6e\u3002***\n\n***\u5f53\u4f60\u83b7\u80dc\u65f6\uff0c\u5bf9\u65b9\u5c06\u8f93\u51fa\"$-1 -1 -1$\"\uff0c\u8fd9\u65f6\u4f60\u5e94\u8be5\u7ed3\u675f\u4f60\u7684\u7a0b\u5e8f\uff0c\u4e0d\u8f93\u51fa\u4efb\u4f55\u4e1c\u897f\u3002***\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\uff0c\u5bf9\u4e8e\u56fd\u738b\uff0c\u4ed6\u83b7\u80dc\u5f53\u4e14\u4ec5\u5f53\u4ed6\u8d70\u5230\u7684\u4f4d\u7f6e\u6240\u5728\u7684\u884c\u5217\u4e2d\u5b58\u5728\u81f3\u5c11$2$\u4e2a\u5c0f\u5175\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u9996\u5148\u8ba9\u56fd\u738b\u8d70\u5230$(500,500)$\uff0c\u6b64\u65f6\u68cb\u76d8\u88ab\u5212\u5206\u4e3a$4$\u4e2a\u533a\u57df\uff0c\u5373\uff1a\n\n![King(500,500)](https://cdn.luogu.com.cn/upload/pic/48597.png)\n\n\u6211\u4eec\u8003\u8651\u5c0f\u5175\u6570\u91cf\u6700\u591a\u7684\u4e09\u5757\uff0c\u4ed6\u4eec\u7684\u548c\u80af\u5b9a\u5927\u4e8e\u7b49\u4e8e$\\lceil \\frac{3}{4}*666\\rceil=500$\uff0c\u7136\u800c\u56fd\u738b\u4ece$(500,500)$\u8d70\u5230\u67d0\u4e2a\u8fb9\u89d2\u53ea\u9700\u8981$499$\u6b21\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff1a\n\n![King go to (1,1)](https://cdn.luogu.com.cn/upload/pic/48598.png)\n\n\u62ff$(1,1)$\u4e3e\u4f8b\uff0c\u6211\u4eec\u53d1\u73b0\u4ece$(500,500)$\u8d70\u5230$(1,1)$\u80fd\u591f\u8986\u76d6$\\frac{3}{4}$\u7684\u68cb\u76d8\uff0c\u5982\u679c\u8fd9$\\frac{3}{4}$\u7684\u68cb\u76d8\u4e2d\u6709\u5927\u4e8e$499$\u4e2a\u5c0f\u5175\uff0c\u90a3\u4e48\u5bf9\u65b9\u5c31\u662f\u65e0\u6cd5\u5728\u56fd\u738b\u5230\u8fbe\u4e4b\u524d\u628a\u6240\u6709\u7684\u5c0f\u5175\u632a\u8d70\u7684\uff0c\u800c\u6839\u636e\u4e0a\u6587\uff0c\u6211\u4eec\u53ef\u4ee5\u627e\u5230$\\frac{3}{4}$\u7684\u68cb\u76d8\u5305\u542b\u81f3\u5c11$500$\u4e2a\u5c0f\u5175\u3002\u672c\u9898\u89e3\u51b3\u3002\n\n\u6ce8\u610f\u8981\u5224\u65ad\u4e0b\u9762\u7684\u60c5\u51b5\n\n![special](https://cdn.luogu.com.cn/upload/pic/48920.png)\n\n\u6b64\u65f6\u6a59\u8272\u4e3aKing\u6240\u5728\u4f4d\u7f6e\u3002\n\n\u5982\u679cKing\u8981\u5f80\u53f3\u4e0a\u65b9\u8d70\uff0c\u5728$(x+1,y+1)$\u5904\u6709\u5c0f\u5175\u3002\n\n- \u5982\u679c\u67d0\u4e2a\u7eff\u8272\u90e8\u5206\u6709\u4e00\u4e2a\u5c0f\u5175\uff0c\u90a3\u4e48\u76f4\u63a5\u83b7\u80dc\n- \u5426\u5219\uff0c\u76f4\u63a5\u671d\u4e00\u4e2a\u65b9\u5411\u8d70\u53bb\uff0c\u5bf9\u65b9\u80af\u5b9a\u4f1a\u632a\u52a8\u84dd\u8272\u533a\u57df\u7684\u5c0f\u5175\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u8fd8\u80fd\u591a\u4e89\u53d6\u5230\u4e00\u6b65\u3002\n\n\u8fd9\u6837\u8d70\u4e0b\u6765\uff0c\u6700\u574f\u7684\u60c5\u51b5\u4e5f\u6700\u591a\u4e5f\u5c31\u4f1a\u591a\u589e\u52a0\u4e00\u6b65(\u5982\u679c\u6709\u8bb8\u591a$x$\u6216\u8005$y$\u6ee1\u8db3$(x+1,y+1)\u6709\u5c0f\u5175$\uff0c\u90a3\u5c31\u662f\u7b2c\u4e00\u79cd\u60c5\u51b5)\uff0c\u6211\u4eec\u4ecd\u53ef\u63a5\u53d7\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int x=999,y=999,k=666;\nbool vis[1005][1005];\nint cnt[5];\nstruct point\n{\n\tint x,y;\n}king,rook[k+5];\nvoid move(int dx,int dy)\n{\n\tking.x+=dx,king.y+=dy;\n\tif(vis[king.x][king.y]) king.x-=dx;\n\tprintf(\"%d %d\\n\",king.x,king.y);\n\tfflush(stdout);\n\tint a,b,c;\n\tscanf(\"%d%d%d\",&a,&b,&c);\n\tif(a==-1&&b==-1&&c==-1) exit(0);\n\tvis[rook[a].x][rook[a].y]=false;\n\trook[a].x=b,rook[a].y=c;\n\tvis[rook[a].x][rook[a].y]=true;\n}\nint main()\n{\n\tscanf(\"%d%d\",&king.x,&king.y);\n\tfor(int i=1;i<=k;i++)\n\t\tscanf(\"%d%d\",&rook[i].x,&rook[i].y),vis[rook[i].x][rook[i].y]=true;\n\twhile(king.x>500) move(-1,0);\n\twhile(king.x<500) move(1,0);\n\twhile(king.y>500) move(0,-1);\n\twhile(king.y<500) move(0,1);\n\tfor(int i=1;i<=k;i++)\n\t\tcnt[(rook[i].x<500)*2+(rook[i].y<500)]++;\n\tint mini=0x3f3f3f3f,pnt;\n\tfor(int i=0;i<=3;i++)\n\t\tif(mini>cnt[i]) mini=cnt[i],pnt=i;\n\twhile(1) move(pnt/2?1:-1,pnt%2?1:-1);\n\treturn 0;\n}\n```",
        "postTime": 1547478435,
        "uid": 49093,
        "name": "_sys",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1100D \u3010Dasha and Chess\u3011"
    },
    {
        "content": "#### [\u535a\u5ba2](https://a-failure.github.io/2019/01/14/CF1100X-Codeforces-Round-532-(Div.-2)/)\n\n#### \u9898\u89e3\n\n\u5982\u679c\u767d\u738b\u79fb\u52a8\u5230$(500,500)$\u7684\u8bdd\uff0c\u4f1a\u628a\u68cb\u76d8\u5206\u4e3a$4$\u5757\n\n\u6700\u52a3\u60c5\u51b5\u4e0b\uff0c\u4efb\u610f$3$\u5757\u68cb\u76d8\u7684\u548c\u7684\u6700\u5927\u503c\u4e3a$166+167+167=500$\n\n\u8fd9\u6837\u79fb\u52a8\u767d\u738b\u5411\u6700\u5927\u503c\u7684\u65b9\u5411\u79fb\u52a8\uff0c\u76f8\u5f53\u4e8e\u6a2a\u7eb5\u5750\u6807\u90fd\u626b\u4e00\u904d\uff0c\u6700\u52a3\u60c5\u51b5\u4e0b\u4e5f\u4f1a\u6709\u81f3\u5c11\u4e00\u884c/\u5217\u9ed1\u8f66\u7684\u6570\u91cf$>=2$\uff0c\u6240\u4ee5\u8fd9\u6837\u5b58\u5728\u5fc5\u80dc\u7b56\u7565\n\n#### \u4ee3\u7801\n\n```c++\n# include<bits/stdc++.h>\nusing namespace std;\nconst int MAX=1e3+5;\nstruct p{\n\tint x,y;\n}s[MAX];\nint X,Y;\nbool use[MAX][MAX];\nvoid ask(int _x,int _y)\n{\n\tint k,x,y;\n\tif(use[X+_x][Y+_y]) _y=0;\n\tprintf(\"%d %d\\n\",X+=_x,Y+=_y);\n\tfflush(stdout);\n\tscanf(\"%d%d%d\",&k,&x,&y);\n\tif(k==-1) exit(0);\n\tif(!k) exit(0);\n\tuse[s[k].x][s[k].y]=0,use[s[k].x=x][s[k].y=y]=1;\n}\nint main()\n{\n\tscanf(\"%d%d\",&X,&Y);\n\tfor(int i=1;i<=666;++i)\n\t  scanf(\"%d%d\",&s[i].x,&s[i].y),use[s[i].x][s[i].y]=1;\n\twhile(X<500) ask(1,0);\n\twhile(X>500) ask(-1,0);\n\twhile(Y<500) ask(0,1);\n\twhile(Y>500) ask(0,-1);\n\tint cnt1=0,cnt2=0,cnt3=0,cnt4=0;\n\tfor(int i=1;i<=999;++i)\n\t  for(int j=1;j<=999;++j)\n\t    if(use[i][j])\n\t\t{\n\t\t\tif(i<500||j<500) ++cnt1;\n\t\t\tif(i<500||j>500) ++cnt2;\n\t\t\tif(i>500||j<500) ++cnt3;\n\t\t\tif(i>500||j>500) ++cnt4;\n\t\t}\n\tif(cnt1>=500) while(1) ask(-1,-1);\n\tif(cnt2>=500) while(1) ask(-1,1);\n\tif(cnt3>=500) while(1) ask(1,-1);\n\tif(cnt4>=500) while(1) ask(1,1);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1547510706,
        "uid": 49206,
        "name": "Dispwnl",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1100D \u3010Dasha and Chess\u3011"
    }
]