[
    {
        "content": "[MyBlog](https://www.cnblogs.com/Itst/p/10344913.html)\n\n### \u524d\u7f6e\u829d\u58eb\uff1a\u539f\u6839\u3001\u77e9\u9635\u5feb\u901f\u5e42\u3001BSGS\n\n------\n\n\u597d\u4e45\u6ca1\u5199\u6570\u8bba\u9898\u4e86\u5199\u4e00\u6b21\u8c03\u4e861h\n\n\u9996\u5148\u53d1\u73b0\u9012\u63a8\u5f0f\u662f\u4e00\u4e2a\u4e58\u65b9\u7684\u5f62\u5f0f\uff0c\u7ebf\u6027\u9012\u63a8\u548c\u77e9\u9635\u5feb\u901f\u5e42\u4f3c\u4e4e\u90fd\u505a\u4e0d\u4e86\uff0c\u90a3\u4e48\u662f\u5426\u80fd\u591f\u628a\u4e58\u65b9\u8fd0\u7b97\u53d8\u6210\u52a0\u6cd5\u8fd0\u7b97\u548c\u4e58\u6cd5\u8fd0\u7b97\u5462\uff1f\n\n\u4f7f\u7528\u539f\u6839\uff01\u5b66\u8fc7$NTT$\u7684\u90fd\u77e5\u9053$998244353$\u7684\u539f\u6839$G=3$\u3002\n\n\u4f7f\u7528\u539f\u6839\u4e4b\u540e\uff0c\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u7b49\u4ef7\u7684\u65b0\u9012\u63a8\u5f0f\uff1a$G^{g_i} = \\prod\\limits _ {j=1}^k G^{g_{i - j} \\times b_j} \\mod 998244353(G^{g_i} \\equiv f_i\\mod 998244353)$\uff0c\u5b83\u7b49\u4ef7\u4e8e$g_i = \\sum\\limits_{j=1}^k g_{i-j} \\times b_j \\mod 998244352$\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u77e9\u9635\u5feb\u901f\u5e42\u5f97\u51fa\u5f53$f_k$\u7b49\u4e8e\u67d0\u4e2a\u503c$G^p$\u65f6$f_n$\u7684\u503c\u4e86\u3002\n\n\u53ef\u73b0\u5728\u77e5\u9053\u7684\u662f$f_n$\u7684\u503c\uff0c\u4e0d\u77e5\u9053$f_k$\u7684\u503c\u3002\n\n\u8003\u8651\uff1a\u4ee4$G_k=1$\uff0c\u5f97\u5230$G_n$\u7684\u503c$x$\uff0c\u90a3\u4e48\u53ef\u4ee5\u77e5\u9053$f_k^x \\equiv f_n \\mod 998244353$\u3002\n\n\u8fd9\u662f\u4e00\u4e2a\u6a21\u610f\u4e49\u4e0b\u7684\u9ad8\u6b21\u5269\u4f59\u65b9\u7a0b\uff0c\u8981\u600e\u4e48\u6c42\u89e3\u5462\uff1f\n\n\u540c\u6837\u4f7f\u7528\u539f\u6839\u3002\u8bbe$f_{k} = G^b \\mod 998244353$\uff0c\u901a\u8fc7$BSGS$\u6c42\u51fa$f_n = G^y \\mod 998244353$\uff0c\u90a3\u4e48\u539f\u5f0f\u53d8\u6210$G^{bx} \\equiv G^y \\mod 998244353$\uff0c\u5373$bx \\equiv y \\mod 998244352$\u3002\u9006\u5143\u6c42\u89e3\u65b9\u7a0b\u5f97\u5230$b$\uff0c\u4e5f\u5c31\u5f97\u5230\u4e86$f_k$\u3002\n\n\u4e00\u4e9b\u6253\u6bd4\u8d5b\u65f6\u88ab\u5751\u5230\u7684\u70b9\uff1a\n\n\u2460$998244352 = 2^{23} \\times 7 \\times 17$\uff0c\u6c42\u9006\u5143\u8981\u7528\u6b27\u62c9\u5b9a\u7406\u6216\u8005\u62d3\u5c55\u6b27\u51e0\u91cc\u5f97\n\n\u2461$998244351 \\times 998244351 \\times 100 > 2^{63}$\uff0c\u8fd9\u610f\u5473\u7740\u77e9\u9635\u76f8\u4e58\u4e0d\u80fd\u7b97\u5b8c\u518d\u4e00\u8d77\u53d6\u6a21\n\n```c++\n#include<bits/stdc++.h>\n#define int long long\n//This code is written by Itst\nusing namespace std;\n\ninline int read(){\n    int a = 0;\n    char c = getchar();\n    bool f = 0;\n    while(!isdigit(c)){\n\t    if(c == '-')\n\t\t\tf = 1;\n        c = getchar();\n    }\n    while(isdigit(c)){\n\t\ta = (a << 3) + (a << 1) + (c ^ '0');\n\t\tc = getchar();\n\t}\n\treturn f ? -a : a;\n}\n\nconst int MOD = 998244353 , G = 3;\nint K;\nstruct matrix{\n\tint a[100][100];\n\tint* operator [](int x){return a[x];}\n\tmatrix(){memset(a , 0 , sizeof(a));}\n\tmatrix operator *(matrix b){\n\t\tmatrix c;\n\t\tfor(int i = 0 ; i < K ; ++i)\n\t\t\tfor(int j = 0 ; j < K ; ++j)\n\t\t\t\tfor(int k = 0 ; k < K ; ++k)\n\t\t\t\t\tc[i][j] = (c[i][j] + a[i][k] * b[k][j]) % (MOD - 1);\n\t\treturn c;\n\t}\n}S , T;\n\ninline int gcd(int a , int b){\n\tint r = a % b;\n\twhile(r){\n\t\ta = b;\n\t\tb = r;\n\t\tr = a % b;\n\t}\n\treturn b;\n}\n\ninline int poww(int a , int b , int mod = MOD){\n\tint times = 1;\n\twhile(b){\n\t\tif(b & 1)\n\t\t\ttimes = times * a % mod;\n\t\ta = a * a % mod;\n\t\tb >>= 1;\n\t}\n\treturn times;\n}\n\nmap < int , int > Hash;\n\ninline int BSGS(int x){\n\tint t = sqrt(MOD) + 1 , times = x;\n    for(int i = 0 ; i < t ; i++){\n        Hash[times] = i;\n        times = times * G % MOD;\n    }\n    times = poww(G , t);\n    int now = times;\n    for(int i = 1 ; i <= t + 1 ; i++){\n        if(Hash.count(now)){\n            return i * t - Hash[now];\n        }\n        now = now * times % MOD;\n    }\n\treturn -1;\n}\n\nint phi(int x){\n\tint times = x;\n\tfor(int i = 2 ; i * i <= x ; ++i){\n\t\tif(x % i == 0){\n\t\t\ttimes = times / i * (i - 1);\n\t\t\twhile(x % i == 0)\n\t\t\t\tx /= i;\n\t\t}\n\t}\n\tif(x - 1)\n\t\ttimes = times / x * (x - 1);\n\treturn times;\n} \n\nsigned main(){\n\t#ifndef ONLINE_JUDGE\n\t//freopen(\"in\" , \"r\" , stdin);\n\t//freopen(\"out\" , \"w\" , stdout);\n\t#endif\n\tK = read();\n\tfor(int i = 0 ; i < K ; ++i)\n\t\tT[K - i - 1][K - 1] = read() % (MOD - 1);\n\tint N = read() - K;\n\tint t = BSGS(read());\n\tfor(int i = 0 ; i + 1 < K ; ++i)\n\t\tT[i + 1][i] = 1;\n\tS[0][K - 1] = 1;\n\twhile(N){\n\t\tif(N & 1)\n\t\t\tS = S * T;\n\t\tT = T * T;\n\t\tN >>= 1;\n\t}\n\tint cur = S[0][K - 1] , p = gcd(cur , MOD - 1);\n\tif(t % p != 0)\n\t\tputs(\"-1\");\n\telse{\n\t\tt /= p;\n\t\tcur /= p;\n\t\tint mod = (MOD - 1) / p; \n\t\tcout << poww(G , poww(cur , phi(mod) - 1 , mod) * t % mod);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1548987385,
        "uid": 96296,
        "name": "Itst",
        "ccfLevel": 0,
        "title": "CF1106F Lunar New Year and a Recursive Sequence"
    },
    {
        "content": "## CF1106F Lunar New Year and a Recursive Sequence\n> \u5b9a\u4e49\u65e0\u7a77\u6b63\u6574\u6570\u5e8f\u5217 $f_1,f_2,\\cdots$\uff0c\u5bf9\u4e8e\u4efb\u610f\u7684 $i>k$\uff0c$f_i$ \u662f\u5982\u4e0b\u9012\u5f52\u5b9a\u4e49\u7684\uff1a\n> $$f_i=\\prod_{j=1}^k f_{i-j}^{b_j}\\bmod{p}$$\n> \u5176\u4e2d $p=998,244,353$\u3002\u7ed9\u51fa\u5e8f\u5217 $b_1,b_2,\\cdots,b_k$\uff0c\u5df2\u77e5 $f_1=f_2=\\cdots=f_{k-1}=1,f_n=m$\uff0c\u6c42 $f_k$ \u53ef\u80fd\u7684\u503c\uff0c\u6216\u62a5\u544a\u65e0\u89e3\u3002($1\\le k\\le 100,1\\le b_i,m<p,k<n\\le 10^9$\uff0c\u4f60\u9700\u8981\u4fdd\u8bc1 $1\\le f_k<p$)\n\n\u53d1\u73b0 $\\prod$ \u548c\u4e58\u65b9\u8fd9\u79cd\u4e1c\u897f\u975e\u5e38\u4e0d\u597d\u5904\u7406\uff0c\u4f46\u8fd9\u4e2a\u5f62\u5f0f\u548c\u5e38\u7cfb\u6570\u9f50\u6b21\u9012\u63a8\u786e\u5b9e\u5f88\u50cf\u3002\u8bf4\u660e\u8fd9\u9053\u9898\u53ef\u80fd\u8981\u6c42\u6211\u4eec\u628a $\\prod$ \u53d8\u4e3a $\\sum$\uff0c\u4e58\u65b9\u53d8\u4e3a\u4e58\u6cd5\uff0c\u8fd9\u6837\u5c31\u80fd\u51d1\u6210\u5e38\u7cfb\u6570\u9f50\u6b21\u9012\u63a8\u7684\u5f62\u5f0f\u3002\n\n\u8003\u8651\u5728\u5b9e\u6570\u610f\u4e49\u4e0b\uff0c\u8fd9\u79cd\u4e8b\u975e\u5e38\u597d\u529e\uff0c\u76f4\u63a5\u53d6\u5bf9\u6570\u5373\u53ef\u3002\u800c\u5728\u6a21\u610f\u4e49\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u53d6\u79bb\u6563\u5bf9\u6570\u3002\u5177\u4f53\u6765\u8bb2\uff0c\u6211\u4eec\u60f3\u627e\u5230\u4e00\u4e2a $c$\uff0c\u6ee1\u8db3\u5b58\u5728\u4e00\u4e2a $l$\uff0c\u4f7f\u5f97\uff1a\n$$c^l\\equiv a\\pmod{p}$$\n\u5219 $a$ \u7684\u79bb\u6563\u5bf9\u6570\u5c31\u53ef\u4ee5\u5b9a\u4e49\u4e3a $l$\u3002\u53d1\u73b0\u5173\u952e\u5728\u4e8e $c$ \u7684\u9009\u62e9\uff0c\u5408\u9002\u7684 $c$ \u5e94\u8be5\u8ba9\u5c3d\u53ef\u80fd\u591a\u7684\u6570\u62e5\u6709\u79bb\u6563\u5bf9\u6570\u3002\u6ce8\u610f\u5230\u539f\u6839\u7684\u6027\u8d28\u6709\u4e00\u6761\uff1a\n> \u5bf9\u4e8e\u6240\u6709\u7684 $t(t\\bot p)$\uff0c\u5728\u6a21 $p$ \u610f\u4e49\u4e0b\u90fd\u80fd\u88ab $p$ \u7684\u539f\u6839 $g$ \u7684\u5e42\u6b21\u7684\u5f62\u5f0f\u8868\u793a\u3002\n\n\u53c8\u56e0\u4e3a\u6b64\u9898 $p$ \u662f\u8d28\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u9009\u62e9\u5b83\u7684\u539f\u6839 $3$ \u4f5c\u4e3a $c$\uff0c\u5373\u53ef\u4fdd\u8bc1\u6240\u6709\u7684\u6b63\u6574\u6570\u90fd\u5b58\u5728\u79bb\u6563\u5bf9\u6570\u3002\u800c\u6c42\u79bb\u6563\u5bf9\u6570\u7684\u8fc7\u7a0b\u76f8\u5f53\u4e8e\u6c42\u89e3\u8fd9\u6837\u4e00\u4e2a\u540c\u4f59\u65b9\u7a0b\uff1a\n$$a^x\\equiv b\\pmod{p}$$\n\u53ef\u4ee5\u7528 $\\rm BSGS$ \u5728 $\\mathcal{O}(\\sqrt{p})$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u8f7b\u677e\u5b9e\u73b0\u3002\u4f46\u9700\u8981\u6ce8\u610f\uff0c\u6c42\u89e3\u7684 $x$ \u548c\u79bb\u6563\u5bf9\u6570\u662f\u6a21 $\\varphi(p)$ \u540c\u4f59\u7684\u3002\n\n\u8bbe $f_i$ \u7684\u79bb\u6563\u5bf9\u6570\u4e3a $lf_i$\uff0c\u5219\u4e0a\u5f0f\u53ef\u4ee5\u5316\u4e3a\uff1a\n$$lf_i=\\sum_{j=1}^kb_jlf_{i-j}\\bmod{\\varphi(p)}$$\n\u53d1\u73b0\u53ef\u4ee5\u7528\u77e9\u9635\u4e58\u6cd5\u8868\u793a\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u5373\uff1a\n$$\\begin{bmatrix}lf_{i-k}&lf_{i-k+1}&\\ldots&lf_{i-1}\\end{bmatrix}\\begin{bmatrix}0&0&\\ldots&0&b_k\\\\1&0&\\ldots&0&b_{k-1}\\\\\\vdots&\\vdots&\\ddots&\\vdots&\\vdots\\\\0&0&\\ldots&1&b_1\\end{bmatrix}=\\begin{bmatrix}lf_{i-k+1}&lf_{i-k+2}&\\ldots&lf_i\\end{bmatrix}$$\n\u5982\u679c\u8bbe\u8f6c\u79fb\u77e9\u9635\u4e3a $\\mathbf{A}$\uff0c\u5219\u6574\u4e2a\u8fc7\u7a0b\u76f8\u5f53\u4e8e\uff1a\n$$\\begin{bmatrix}0&0&\\ldots&lf_k\\end{bmatrix}\\times\\mathbf{A}^{n-k}=\\begin{bmatrix}\\ldots&\\ldots&\\ldots&lf_n\\end{bmatrix}$$\n\u89c2\u5bdf\u5230 $1$ \u7684\u79bb\u6563\u5bf9\u6570\u662f $0$ \u5373\u53ef\u5f97\u5230\u521d\u59cb\u77e9\u9635\u3002\u6ce8\u610f\u5230\u6211\u4eec\u53ea\u5173\u5fc3 $lf_n$ \u7684\u503c\uff0c\u6240\u4ee5\u6839\u636e\u4e0a\u9762\u7684\u7b49\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u540c\u4f59\u5f0f\uff1a\n$$lf_k(\\mathbf{A}^{n-k})_{k,k}\\equiv lf_n\\pmod{\\varphi(p)}$$\n\u7531\u4e8e\u77e9\u9635\u662f\u5df2\u77e5\u7684\uff0c\u6240\u4ee5\u4e0d\u59a8\u628a $(\\mathbf{A}^{n-k})_{k,k}$ \u8bbe\u4e3a\u4e00\u4e2a\u5e38\u91cf $a$\uff0c\u518d\u628a $lf_k$ \u8bbe\u4e3a $x$\uff0c$lf_n$ \u8bbe\u4e3a $b$\uff0c\u5219\u6211\u4eec\u73b0\u5728\u53ea\u9700\u8981\u89e3\u4e00\u4e2a\u7ebf\u6027\u540c\u4f59\u65b9\u7a0b\u5c31\u591f\u4e86\uff1a\n$$ax\\equiv b\\pmod{\\varphi(p)}$$\n\u53ef\u4ee5\u7528 $\\rm exgcd$ \u8f7b\u677e\u5224\u65e0\u89e3\u548c\u6c42\u51fa\u901a\u89e3\u3002\u6c42\u51fa $x$ \u540e\uff0c$f_k$ \u5373\u4e3a $g^x\\bmod{p}$\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(k^3\\log n+\\sqrt{p})$\u3002\u8ba1\u7b97\u7684\u65f6\u5019\u6ce8\u610f\u6a21\u6570\u5728\u8fd9\u4e00\u6b65\u5230\u5e95\u662f $p$ \u8fd8\u662f $\\varphi(p)$\u3002\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <ext/pb_ds/hash_policy.hpp>\n#include <ext/pb_ds/assoc_container.hpp>\nconst int N = 110, mod = 998244353; typedef long long ll; int b[N];\nint gcd(int a, int b) { return !b ? a : gcd(b, a % b); }\nint exgcd(int a, int b, int& x, int& y)\n{\n\tif (!b) { x = 1; y = 0; return a; }\n\tint r = exgcd(b, a % b, x, y);\n\tint t = x; x = y; y = t - a / b * y;\n\treturn r;\n}\nstruct Matrix\n{\n\tint a[N][N], n, m;\n\tvoid norm(int N)\n\t{\n\t\tn = m = N;\n\t\tfor (int i = 1; i <= n; ++i)\n\t\t\tfor (int j = 1; j <= m; ++j) a[i][j] = (i == j);\n\t}\n\tMatrix operator*(const Matrix& A)\n\t{\n\t\tMatrix ret; ret.n = n; ret.m = A.m;\n\t\tfor (int i = 1; i <= ret.n; ++i)\n\t\t\tfor (int j = 1; j <= ret.m; ++j)\n\t\t\t{\n\t\t\t\tint add = 0;\n\t\t\t\tfor (int k = 1; k <= m; ++k) \n\t\t\t\t\t(add += (ll)a[i][k] * A.a[k][j] % (mod - 1)) %= (mod - 1);\n\t\t\t\tret.a[i][j] = add;\n\t\t\t}\n\t\treturn ret;\n\t}\n}A, I;\ninline Matrix ksm(Matrix A, int b)\n{\n\tMatrix ret = I;\n\twhile (b)\n\t{\n\t\tif (b & 1) ret = ret * A;\n\t\tA = A * A; b >>= 1;\n\t}\n\treturn ret;\n}\ninline int ksm(int a, int b, int mod)\n{\n\tint ret = 1;\n\twhile (b)\n\t{\n\t\tif (b & 1) ret = (ll)ret * a % mod;\n\t\ta = (ll)a * a % mod; b >>= 1;\n\t}\n\treturn ret;\n}\nnamespace BSGS\n{\n\t__gnu_pbds::gp_hash_table<int, int> mp; int mod, sqr;\n\tinline void initMod(int _mod) { mod = _mod; sqr = ceil(sqrt(mod)); }\n\tinline int getSol(int a, int b)\n\t{\n\t\tmp.clear(); int lef = (ll)a * b % mod;\n\t\tfor (int B = 1; B <= sqr; ++B, lef = (ll)lef * a % mod) mp[lef] = B;\n\t\tint rig = ksm(a, sqr, mod), aa = rig;\n\t\tfor (int A = 1; A <= sqr; ++A, rig = (ll)rig * aa % mod)\n\t\t\tif (mp.find(rig) != mp.end()) return A * sqr - mp[rig];\n\t\treturn -1;\n\t}\n}\nint main()\n{\n\tint k; scanf(\"%d\", &k); A.norm(k); I.norm(k);\n\tfor (int i = 1; i <= k; ++i) scanf(\"%d\", b + i);\n\tfor (int j = 1; j < k; ++j)\n\t{\n\t\tfor (int i = 1; i <= k; ++i) A.a[i][j] = 0;\n\t\tA.a[j + 1][j] = 1;\n\t}\n\tfor (int i = 1; i <= k; ++i) A.a[i][k] = b[k - i + 1];\n\tint n, m; scanf(\"%d%d\", &n, &m); A = ksm(A, n - k);\n\tBSGS::initMod(mod); int g = 3; m = BSGS::getSol(g, m);\n\tif (m % gcd(A.a[k][k], mod - 1)) return puts(\"-1\"), 0;\n\tint x, y; exgcd(A.a[k][k], mod - 1, x, y);\n\tx = (ll)m / gcd(A.a[k][k], mod - 1) * x % (mod - 1); \n\t(x += mod - 1) %= (mod - 1);\n\tprintf(\"%d\\n\", ksm(g, x, mod)); \n\treturn 0;\n}\n```\n\u5982\u679c\u672c\u9898\u662f\u4efb\u610f\u8d28\u6570\u4f5c\u4e3a\u6a21\u6570\uff0c\u5219\u6211\u4eec\u5c31\u9700\u8981\u6c42\u51fa\u539f\u6839\u3002\u6839\u636e\u5f15\u7406\uff1a\n> \u4e00\u4e2a\u6570 $n$ \u5982\u679c\u6709\u539f\u6839\uff0c\u5219\u5b83\u7684\u6700\u5c0f\u539f\u6839\u7ea7\u522b\u662f $\\mathcal{O}(n^{0.25})$\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u66b4\u529b\u679a\u4e3e\u539f\u6839\uff0c\u5e76\u5224\u65ad\u662f\u5426\u53ef\u884c\u3002\u5224\u65ad\u6839\u636e\u4ee5\u4e0b\u5f15\u7406\uff1a\n> \u4e00\u4e2a\u6570 $g$ \u662f\u6570 $n$ \u7684\u539f\u6839\u5f53\u4e14\u4ec5\u5f53 $\\gcd(g,n)=1$\uff0c\u4e14\u5bf9\u4e8e $\\varphi(n)$ \u7684\u6240\u6709\u8d28\u56e0\u6570 $p$\uff0c\u90fd\u6709 $g^{\\frac{\\varphi(n)}{p}}\\not\\equiv1\\pmod{n}$\u3002\n\n\u53ef\u4ee5\u5728 $\\mathcal{O}(p^{0.75}\\log p)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u6c42\u89e3\u3002",
        "postTime": 1649809629,
        "uid": 137603,
        "name": "zhiyangfan",
        "ccfLevel": 9,
        "title": "CF1106F Lunar New Year and a Recursive Sequence \u9898\u89e3"
    },
    {
        "content": "### \u5199\u5728\u524d\u9762\n\n$\\ \\ \\ \\ \\ \\ \\,$\u8fd9\u573a\u6bd4\u8d5b\u662fwc2019\u56de\u5bb6\u90a3\u5929\u665a\u4e0a\u4e3e\u529e\u7684\uff0c\u4ece8\u70b9\u523010\u70b9\u521a\u597d\u5728\u52a8\u8f66\u4e0a\uff0c\u9965\u5bd2\u4ea4\u8feb\uff0c\u8fd8\u62c9\u809a\u5b50\uff08\u5403\u4e0d\u60ef\u7ca4\u83dc\uff09\uff0c\u5c31\u6ca1\u6709\u53c2\u52a0\uff0c\u662f\u540e\u9762\u5199\u7684\u3002\n\n$\\ \\ \\ \\ \\ \\ \\,$\u8fd9\u5957\u9898\u5728\u6d1b\u8c37\u4e0a\u9762\u4e94\u989c\u516d\u8272\u7684\uff0c\u5f88\u6709\u610f\u601d\u554a\uff08\u9664\u4e86\u6ca1\u6709\u7ea2\u7684\uff09\uff0c\u9898\u76ee\u4e5f\u7b97\u53ef\u505a\uff0c\u611f\u89c9\u5f88\u8fc7\u5e74\u5f88\u5feb\u4e50\u5462\uff08~~\u5624\u5624~~\n\n$\\ \\ \\ \\ \\ \\ \\,$~~\u987a\u4fbf\u6253\u4e2a\u5168\u5957\u9898\u89e3\u7684\u5e7f\u544a[\u3010Codeforces Round #536 (Div. 2)\u3010\u5df1\u4ea5\u5e74\u519c\u5386\u65b0\u5e74\u8d5b\u3011\u7b80\u7565\u9898\u89e3\u3011](https://blog.csdn.net/weixin_43973966/article/details/87389814)~~\n\n---\n\n$\\ \\ \\ \\ \\ \\ \\,$\u611f\u89c9\u8fd9\u9053\u9898\u64cd\u4f5c\u6bd4E\u9898\u9ebb\u70e6\u4e00\u70b9\uff0c\u4f46\u662f\u786e\u5b9e\u6bd4E\u9898\u597d\u60f3\u5462\u3002\n\n## $\\ \\ \\ \\ \\ \\ \\,$\u524d\u7f6e\u77e5\u8bc6\uff1a\u77e9\u9635\u5feb\u901f\u5e42\uff0c\u6269\u5c55GCD\u6c42\u9006\u5143\uff0cBSGS\uff0c\u6b27\u62c9\u5b9a\u7406\uff0c\u539f\u6839\n\n$\\ \\ \\ \\ \\ \\ \\,$~~\uff08\u672c\u9898\u89e3\u4e0d\u4f1a\u8bb2\u8fd9\u4e9b\u4e1c\u897f\uff0c\u53ea\u662f\u4f1a\u63d0\u5230\u4e3a\u4ec0\u4e48\u7528\u548c\u600e\u4e48\u7528\uff0c\u6e9c\u4e86\u6e9c\u4e86~~\n\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20190215213423624.jpg)\n\n$\\ \\ \\ \\ \\ \\ \\,$\u770b\u5230\u662f\u4e00\u4e2a\u6709 $k$ \u9879\u7684\u9012\u63a8\u5f0f\uff0c\u9a6c\u4e0a\u5c31\u53ef\u4ee5\u60f3\u5230\u77e9\u4e58\uff0c\u800c\u524d $k-1$ \u9879\u5df2\u7ecf\u786e\u5b9a\u4e86\u662f $1$\uff0c\u6211\u4eec\u4e0d\u59a8\u8bbe\u8981\u6c42\u7684 $f_k$ \u4e3a $a$ \u3002\u6839\u636e\u4ed6\u7ed9\u7684\u5f0f\u5b50\u554a\uff0c\u6211\u4eec\u5c31\u5bb9\u6613\u53d1\u73b0\uff0c\u8fd9\u4e2a\u9012\u63a8\u5f0f\u7684\u6bcf\u4e00\u9879\u90fd\u5e94\u8be5\u662f $a^x$ \u7684\u5f62\u5f0f\uff0c\u77e5\u9053\u7b2c $n$ \u9879\u662f $a$ \u7684\u591a\u5c11\u6b21\u65b9\u5c31\u8981\u597d\u5904\u7406\u4e00\u4e9b\u4e86\u3002\n\n$\\ \\ \\ \\ \\ \\ \\,$\u8fd9\u6837\u5b50\u5904\u7406\u4e3a\u6307\u6570\u7684\u5f62\u5f0f\u7684\u8bdd\uff0c\u7a0d\u5fae\u89c2\u5bdf\u4e00\u4e0b\u77e9\u9635\u4e58\u6cd5\u5c31\u5b9a\u4e49\u597d\u4e86\uff1a\n\n$\\ \\ \\ \\ \\ \\ \\,$\u8f6c\u79fb\u77e9\u9635\uff1a$A=$\n\n$$\\begin{bmatrix}0&0&\\cdots&0&b_k\\\\ 1&0&\\cdots&0&b_{k-1}\\\\0&1&\\cdots&0&b_{k-2}\\\\\\vdots&\\vdots&\\ddots&\\vdots&\\vdots\\\\0&0&\\cdots&1&b_1\\end{bmatrix}$$\n\n$\\ \\ \\ \\ \\ \\ \\,$\u521d\u59cb\u77e9\u9635\uff1a$S=$\n\n$$\\begin{bmatrix}0,0,\\cdots,0,1\\end{bmatrix}$$\n\n$\\ \\ \\ \\ \\ \\ \\,$\u90a3\u4e48\u7b2c $n$ \u9879\u7684\u6307\u6570\uff0c\u5c31\u662f $S\\cdot A^{n-k}$ \u7684\u7b2c $k$ \u9879\uff0c\u77e9\u9635\u4e58\u6cd5\u53d6\u6a21\u7684\u65f6\u5019\uff0c\u6839\u636e\u6b27\u62c9\u5b9a\u7406\uff0c\u56e0\u4e3a\u6a21\u6570\u662f\u7d20\u6570\uff0c\u76f4\u63a5\u6bcf\u6b21\u6a21 $mod-1$ \u5c31\u597d\u4e86\u3002\n\n$\\ \\ \\ \\ \\ \\ \\,$\u73b0\u5728\u95ee\u9898\u662f\uff0c\u6211\u4eec\u77e5\u9053 $x$\uff0c$m$\uff0c$mod$\uff0c$a^x\\%mod=m$\uff0c\u5982\u4f55\u6c42 $a$ \u5462\uff1f\n\n$\\ \\ \\ \\ \\ \\ \\,$\u597d\u5728\u4ed6\u7ed9\u6211\u4eec\u7684\u6a21\u6570\u5f88\u7279\u6b8a\uff0c\u6211\u4eec\u5f88\u6e05\u695a\u4ed6\u7684\u539f\u6839\u4e3a $3$ \uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u91cd\u65b0\u628a $a$ \u5b9a\u4e49\u4e3a $3^s\\%mod$\uff0c\u6240\u4ee5\u539f\u5f0f\u5316\u4e3a:\n\n$$3^{sx}\\%mod=m$$\n\n$\\ \\ \\ \\ \\ \\ \\,$\u6211\u4eec\u53ef\u4ee5\u5f88\u8f7b\u677e\u7528 BSGS \u7b97\u6cd5\u77e5\u9053 $sx\\%(mod-1)$\u7684\u53d6\u503c\uff0c\u800c\u6211\u4eec\u53c8\u77e5\u9053 $x\\%(mod-1)$ \u7684\u53d6\u503c\uff0c\u8981\u6c42$s$\u7684\u53d6\u503c\uff0c\u7528\u5230\u9006\u5143\uff0c\u53d1\u73b0\u8fd9\u91cc\u7684\u6a21\u6570\u5e76\u4e0d\u662f\u7d20\u6570\u554a\uff0c\u6269\u5c55GCD\u5904\u7406\u4e00\u4e0b\u5c31\u597d\u54af~\n\n$\\ \\ \\ \\ \\ \\ \\,$\u7136\u540e\u6211\u4eec\u5c31\u77e5\u9053 $s$ \u7684\u53d6\u503c\u4e86\uff08\u4e5f\u6709\u53ef\u80fd\u65e0\u89e3\uff09\uff0c\u90a3\u4e48\u7b54\u6848\u4e5f\u5c31\u51fa\u6765\u4e86\uff1a$f_k=3^s$\u3002\n\n$\\ \\ \\ \\ \\ \\ \\,$\u590d\u6742\u5ea6\u7684\u8bdd\uff0c$O(k^3\\log n+\\sqrt {mod} +\\log n)$ \u8fd9\u4e2a\u6837\u5b50\u3002\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstdlib>\n#include<cstring>\n#include<cctype>\n#include<cstdio>\n#include<vector>\n#include<string>\n#include<queue>\n#include<stack>\n#include<cmath>\n#include<map>\n#include<set>\nusing namespace std;\nconst int inf=0x7fffffff;\nconst double eps=1e-10;\nconst double pi=acos(-1.0);\n//char buf[1<<15],*S=buf,*T=buf;\n//char getch(){return S==T&&(T=(S=buf)+fread(buf,1,1<<15,stdin),S==T)?0:*S++;}\ninline int read(){\n\tint x=0,f=1;char ch;ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-') f=0;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<1)+(x<<3)+(ch&15);ch=getchar();}\n\tif(f)return x;else return -x;\n}\nconst int mod=998244353;\nstruct matrix{\n\tint x,y;\n\tint a[101][101];\n};\nint K,m,n;\nmatrix S,A,T;\nmatrix operator *(matrix m1,matrix m2){\n\tmatrix t;t.x=m1.x;t.y=m2.y;\n\tfor(int i=1;i<=m1.x;i++)\n\tfor(int j=1;j<=m2.y;j++){\n\t  \tt.a[i][j]=0;\n\t  \tfor(int k=1;k<=m1.y;k++)\n\t  \tt.a[i][j]=(1ll*t.a[i][j]+1ll*m1.a[i][k]*m2.a[k][j])%(mod-1);\n\t}\n\treturn t;\n}\nmatrix power(matrix a,int b){\n\tmatrix ans=a;b--;\n\twhile(b){\n\t\tif(b&1ll)ans=ans*a;\n\t\ta=a*a;b>>=1;\n\t}\n\treturn ans;\n}\nint power(int a,int b,int mod){\n\tint ans=1;\n\twhile(b){\n\t\tif(b&1)ans=(1ll*ans*a)%mod;\n\t\ta=(1ll*a*a)%mod;\n\t\tb>>=1;\n\t}\n\treturn ans;\n}\nlong long BSGS(long long a,long long b,long long c){\n  \tmap<int,int>hash;hash.clear();b%=c;\n  \tint t=(int)sqrt(c)+1;\n  \tfor(int j=0;j<t;j++){\n    \tint val=(int)(b*power(a,j,c)%c);\n    \thash[val]=j;\n  \t}\n  \ta=power(a,t,c);\n  \tif(a==0){\n  \t\tif(b==0)return 1;\n    \telse return -1;\n  \t}\n  \tfor(int i=0;i<=t;i++){\n    \tint val=power(a,i,c);\n    \tint j=hash.find(val)==hash.end()?-1:hash[val];\n    \tif(j>=0&&i*t-j>=0)return i*t-j;\n  \t}\n  \treturn -1;\n}\nvoid exgcd(long long a,long long b,long long &d,long long &x,long long &y){\n\tif(!b){d=a;x=1;y=0;return;}\n\texgcd(b,a%b,d,y,x);y-=x*(a/b);\n}\nint main()\n{\n\tK=read();S.x=1;\n\tA.x=A.y=S.y=K;S.a[1][K]=1;\n\tfor(int i=2;i<=K;i++)A.a[i][i-1]=1;\n\tfor(int i=K;i>=1;i--)A.a[i][K]=read();\n\tn=read();m=read();\n\tT=S*power(A,n-K);\n\tlong long t=BSGS(3ll,1ll*m,mod);\n\tlong long g,x,y;\n\texgcd(T.a[1][K],mod-1,g,x,y);\n  \tif(t%g)puts(\"-1\");\n  \telse{\n   \t\tx=(t/g*x%(mod-1)+mod-1)%(mod-1);\n    \tprintf(\"%d\\n\",power(3,x,mod));\n  \t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1550455551,
        "uid": 62758,
        "name": "\u5468\u9053_Althen",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1106F \u3010Lunar New Year and a Recursive Sequence\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\u6709\u4e00\u4e2a\u65e0\u9650\u957f\u7684\u6b63\u6574\u6570\u5e8f\u5217$f_1,f_2\\cdots $\u3002\u5df2\u77e5\u5bf9\u4e8e\u6240\u6709\u7684$i>k$\uff0c\u6ee1\u8db3$f_i = \\prod_{j=1}^k f_{i-j} ^{b_j}\\mod p$\uff0c\u5176\u4e2d$p=998244353$\u3002\u5df2\u77e5\u8fd9\u4e2a\u5e8f\u5217\u7684\u524d$k-1$\u9879\u5747\u4e3a$1$\uff0c\u5e8f\u5217\u7684\u7b2c$n$\u9879\u4e3a$m$\uff0c\u95ee\u5e8f\u5217\u7684\u7b2c$k$\u9879\u662f\u591a\u5c11\u3002\u65e0\u89e3\u8f93\u51fa$-1$\uff0c\u5426\u5219\uff0c\u8f93\u51fa\u4efb\u610f\u4e00\u7ec4\u89e3\u5373\u53ef\u3002\u8f93\u51fa\u7684\u89e3\u5fc5\u987b\u6ee1\u8db3$1\\le f_k< p$\u3002$1\\le k\\le 100,1\\le n_i < p,k<n\\le 10^9,1\\le m<p$\u3002\n\n---\n\n### \u524d\u7f6e\u829d\u58eb\uff1a\u539f\u6839\uff0c\u77e9\u9635\u5feb\u901f\u5e42\uff0cBSGS\u6c42\u89e3\u65b9\u7a0b$a^x\\equiv b\\mod c$\uff0c\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\n\n\u8fd9\u91cc\u8bf4\u4e00\u4e0b\u539f\u6839\u7684\u6027\u8d28\uff1a\n\n1\uff09\u5982\u679c$g$\u662f$p$\u7684\u539f\u6839\uff0c\u90a3\u4e48$g$\u7684\u5e42\u6b21\u53ef\u4ee5\u904d\u5386$p$\u7684\u65e2\u7ea6\u5269\u4f59\u7cfb\u3002\u5373\u5bf9\u4e8e\u4efb\u610f$x< p$\u4e14$gcd(x,p)=1$\uff0c$x$\u4e00\u5b9a\u53ef\u4ee5\u88ab\u8868\u793a\u6210$g^k$\u7684\u5f62\u5f0f\u3002\n\n2\uff09\u8bbe$M$\u4e3a\u5947\u8d28\u6570\uff0c\u53ea\u6709$2,4$\u6216\u8005\u5f62\u5982$M^k,2M^k$\u7684\u6570\u5b58\u5728\u539f\u6839\u3002\u8fd9\u91cc\uff0c\u4f17\u6240\u5468\u77e5$998244353$\u7684\u6700\u5c0f\u6b63\u539f\u6839\u4e3a$3$\u3002\n\n---\n\n\u6211\u4eec\u8003\u8651\u5c06\u6240\u6709\u7684\u6570\u8868\u793a\u4e3a\u539f\u6839\u7684\u5e42\u6b21\u3002\u8bbe$g^{L_i}=f_i$\uff0c\u90a3\u4e48\u53ef\u4ee5\u5f97\u5230$L_i=\\sum b_jL_{i-j}\\mod (p-1)$\uff0c\u8fd9\u662f\u4e00\u4e2a\u7ebf\u6027\u9012\u63a8\u7684\u5f62\u5f0f\uff0c\u53ef\u4ee5\u7528\u77e9\u9635\u5feb\u901f\u5e42\u52a0\u901f\u3002\u6211\u4eec\u8bbe$L_k = x$\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4efb\u610f\u7684$i>k$\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u524d\u9762\u7684\u9012\u63a8\u5f0f\uff0c\u5c06$L_i$\u8868\u793a\u4e3a$k_ix+y_i$\u7684\u5f62\u5f0f\u3002\u5e76\u4e14\uff0c\u7531\u4e8e$L_1=L_2=L_3\\cdots = L_{k-1} =0$\uff0c\u663e\u7136\u5bf9\u4e8e\u4efb\u610f$i>k,y_i=0$\u3002\n\n\u73b0\u5728\u6211\u4eec\u77e5\u9053\u7b2c$n$\u9879\uff0c\u7528$BSGS$\u7b97\u6cd5\u53ef\u4ee5\u5728$\\sqrt p$\u7684\u65f6\u95f4\u5185\u7b97\u51fa$L_n$\u3002\u5e76\u4e14\uff0c\u901a\u8fc7\u77e9\u9635\u4e58\u6cd5\u6211\u4eec\u7b97\u51fa\u4e86$k_i$\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u65b9\u7a0b$k_ix\\equiv L_n\\mod (p-1)$\uff0c\u4e5f\u5c31\u662f$k_ix +r(p-1)=L_n$\u3002\u7528\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u6c42\u89e3\u5373\u53ef\u3002\n\n``` cpp\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <map>\n#include <cmath>\n#define ll long long\nusing namespace std;\ntemplate <class T>\ninline void read(T &x)\n{\n\tx=0; char c=getchar();  int f=1;\n\twhile(!isdigit(c)){if(c=='-')f=-1; c=getchar();}\n\twhile(isdigit(c)) x=x*10-'0'+c,c=getchar(); x*=f;\n}\nconst int mod=998244353;\nint Pow(int x,int y,int mod){int res=1; while(y){if(y&1)res=res*(ll)x%mod; x=x*(ll)x%mod,y>>=1;} return res;}\nmap<int,int> mp;\nint cal(int x,int b) //x ^ a = b %mod \n{\n\tif(b==1) return 0;\n\tint M=ceil(sqrt(mod)),t=b;\n\tmp[t]=0;\n\tfor(int i=1;i<=M;++i) t=t*(ll)x%mod,mp[t]=i;//,cout<<t<<' '<<i<<endl;\n\t//t x^M \n\tt=Pow(x,M,mod); int q=t;\n\tfor(int i=1;i<=M;++i)\n\t{\n\t\tif(mp.count(q)) return i*M-mp[q];\n\t\tq=q*(ll)t%mod;\n\t}\n\treturn -1;\n}\nint len;\nstruct Mat{\n\tint a[110][110];\n\tMat (){memset(a,0,sizeof(a));}\n\tvoid E(){for(int i=1;i<=len;++i) for(int j=1;j<=len;++j) a[i][j]=i==j;}\n}D;\n\nMat Mul(Mat A,Mat B)\n{\n\tMat C;\n\tfor(int i=1;i<=len;++i)\n\tfor(int k=1;k<=len;++k)\n\tif(A.a[i][k])\n\t{\n\t\tfor(int j=1;j<=len;++j)\n\t\t\tC.a[i][j]=(C.a[i][j]+A.a[i][k]*(ll)B.a[k][j])%(mod-1);\n\t}\n\treturn C;\n}\nMat mpow(Mat x,int y)\n{\n\tMat res; res.E();\n\twhile(y){if(y&1) res=Mul(res,x); x=Mul(x,x),y>>=1;} return res;\n}\nint exgcd(int &x,int &y,int a,int b)\n{\n\tif(!b){x=1,y=0; return a;}\n\tint g=exgcd(y,x,b,a%b); y-=a/b*x; return g;\n}\nint b[110];\nint main()\n{\n\tint m,n,X; read(m);\n\tfor(int i=1;i<=m;++i) read(b[i]);\n\tread(n),read(X);\n\tfor(int i=2;i<=m;++i) D.a[i][i-1]=1;\n\tfor(int i=1;i<=m;++i) D.a[i][m]=b[m-i+1];\n\tlen=m;\n\tD=mpow(D,n-m);\n\tint xi=D.a[m][m],y=cal(3,X);\n\t\n\t// xi * x = y mod (mod-1)\n\t// xi * x + k(mod-1) = y\n\t\n\tint x1,y1,g=exgcd(x1,y1,xi,mod-1);\n\tif(y%g){puts(\"-1\");return 0;}\n\t\n\tx1=x1%(mod-1)*(ll)(y/g%(mod-1))%(mod-1);\n\tx1=(x1+mod-1)%(mod-1);\n\tint ans=Pow(3,x1,mod);\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1548996640,
        "uid": 40534,
        "name": "zhongyuwei",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1106F \u3010Lunar New Year and a Recursive Sequence\u3011"
    },
    {
        "content": "# CF1106 Lunar New Year and a Recursive Sequence [\u9898\u89e3]\n\n> ## \u9898\u76ee\n>\n> \u7ed9\u51fa\u5f0f\u5b50$f_i=\\prod\\limits_{j=1}^k f_{i-j}^{b_j} \\pmod {998244353}$\uff0c\u7ed9\u51fa$f_n=m$\uff0c\u6c42$f_k$\u6700\u5c0f\u6b63\u6574\u6570\u503c\uff0c\u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\u6211\u4eec\u5c06$998244353$\u5b9a\u4e49\u4e3a$p$\n>\n> ## \u601d\u8def\n>\n> \u4e00\u773c\u770b\u4e0a\u53bb\u4f3c\u4e4e\u4ece$f_n$\u63a8\u662f\u4e0d\u53ef\u884c\u7684\uff0c\u901a\u8fc7\u624b\u6a21\u51e0\u7ec4\u5c0f\u6837\u4f8b\u53ef\u4ee5\u53d1\u73b0$f_n$\u53ea\u4e0e$f_k$\u7684\u6307\u6570\u7ea7\u6709\u5173\uff0c\u6240\u4ee5\u6211\u4eec\u601d\u8003\u4ece$f_k$\u8f6c\u79fb\u5230$f_n$\uff0c\u7528\u4e00\u4e2a\u51fd\u6570\u6765\u8868\u793a$f_k$\u7684\u6307\u6570\uff0c\u6211\u4eec\u8bbe$g(n)$\u8868\u793a\u7b2c$n$\u9879\u4e3a$f_k^{g_n}$\uff0c\u5219$f_n=f_k^{g_n}$\uff0c$g_n=g_{n-1}b_1+g_{n-2}b_2+\\cdots+g_{n-k}b_k$\uff0c\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\u8fd9\u662f\u4e2a\u9012\u63a8\u5f0f\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u7528\u77e9\u9635\u9012\u63a8\u6765\u4f18\u5316\n>\n> \u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u77e9\u9635$\\begin{bmatrix}g_{n-k},g_{n-k+1},\\cdots ,g_{n}\\end{bmatrix}$\n>\n> $\\begin{bmatrix}g_{n-k},g_{n-k+1},\\cdots ,g_{n}\\end{bmatrix} \\times A= \\begin{bmatrix}g_{n-k+1},g_{n-k+2},\\cdots ,g_{n+1}\\end{bmatrix}$\n>\n> \u8bbe\u540e\u9762\u4e00\u9879\u77e9\u9635\u4e3a$C$\uff0c\u524d\u9762\u4e00\u9879\u77e9\u9635\u4e3a$B$\n>\n> $A$\u662f\u5355\u4f4d\u77e9\u9635\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u6c42\u5355\u4f4d\u77e9\u9635\uff0c\u6839\u636e\u77e9\u9635\u5b9a\u4e49$C_{i,j}=\\sum\\limits_{i=1}^m A_{i,k}B_{k,j}$\uff0c\n>\n> \u6211\u4eec\u60f3\u8981\u5f97\u51fa$g_{n+1}$,\u6211\u4eec\u5fc5\u987b\u8981\u4f7f\u77e9\u9635\u7b2c$k$\u5217\u4e3a\n> $$\n> \\left[\n>  \\begin{matrix}\n>    \\cdots & \\cdots & \\cdots & \\cdots & b_k\\\\\n>    \\vdots & \\vdots & \\vdots & \\vdots & b_{k-1} \\\\\n>    \\vdots & \\vdots& \\vdots & \\vdots & \\vdots \\\\\n>    \\cdots & \\cdots & \\cdots & \\cdots & b_1\n>   \\end{matrix} \n> \\right]\n> $$\n> \u7531\u6b64\u9012\u63a8\u51fa\u5176\u4ed6\u4f4d\u7f6e\u5e94\u8be5\u4e3a\n> $$\n> \\left[\n>  \\begin{matrix}\n>    0 & 0 & \\cdots & 0 & b_k\\\\\n>    1 & 0& \\cdots & 0 & b_{k-1} \\\\\n>    0 & 1& \\cdots & \\cdots & b_{k-2}\\\\\n>    \\vdots & \\vdots & \\ddots & \\cdots & \\vdots\\\\\n>    0 & 0 & \\cdots & 1 & b_1\n>   \\end{matrix} \n> \\right]\n> $$\n> \u7531\u9898\u610f\u53ef\u77e5\uff0c\u521d\u59cb\u77e9\u9635\uff1a$B=\\begin{bmatrix}0,0,\\cdots ,1\\end{bmatrix}$\n>\n> \u90a3\u4e48$ g_n=C_{1,k}=B\\times A^{n-k}$\n>\n> \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u7ed9\u51fa\u7684\u6a21\u6570\u662f\u4e2a\u8d28\u6570\uff0c\u56e0\u6b64\u5728\u8ba1\u7b97\u77e9\u9635\u4e58\u6cd5\u65f6\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6b27\u62c9\u5b9a\u7406\u7ed9\u6bcf\u6b21\u7684\u6570\u6a21$p-1$\u5c31\u884c\u4e86\n>\n> \u73b0\u5728\u6211\u4eec\u77e5\u9053$f_n=m=f_k^{g_n} \\pmod p$\uff0c\u53ef\u4ee5\u8f6c\u5316\u4e3a$x^a\\equiv m \\pmod p$\uff0c\u6211\u4eec\u53ea\u6709$x$\u4e0d\u77e5\u9053\uff0c\u53ef\u4ee5\u770b\u51fa\u8be5\u5f0f\u53ef\u4ee5\u7528\u539f\u6839\u548c$BSGS$\u6765\u6c42\uff0c$p$\u7684\u539f\u6839\u662f$3$\u6211\u4eec\u53ef\u4ee5\u5148\u81ea\u5df1\u5199\u4e2a\u7a0b\u5e8f\u6c42\u51fa\u6765\uff08~~\u5f53\u7136\u67d0\u4e9b\u5927\u4f6c\u5df2\u7ecf\u80cc\u4f4f1e9\u6570\u7684\u539f\u6839\u4e86~~)\uff0c\u53ef\u4ee5\u5c06$x$\u8f6c\u5316\u4e3a$3^{sa} \\equiv m \\pmod p$\uff0c\u56e0\u4e3a$3$\u4e0e$p$\u4e92\u8d28\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u6b27\u62c9\u5b9a\u7406\u5148\u6c42\u51fa$sa \\% (p-1)$\uff0c\u6211\u4eec\u77e5\u9053$a \\% (p-1)$\u7684\u503c\uff0c\u53ea\u8981\u77e5\u9053$s$\u7684\u9006\u5143\u5373\u53ef\uff0c\u6b64\u5904\u6ce8\u610f$p-1$\u5e76\u4e0d\u662f\u8d28\u6570\uff0c\u56e0\u6b64\u8981\u7528$exgcd$\u6765\u6c42\u9006\u5143\uff0c\u8fd9\u6837\u5c31\u77e5\u9053$s$\u7684\u503c\u4e86\n>\n> \u590d\u6742\u5ea6$O(k^3\\log n+\\sqrt {mod} +\\log n)$\n>\n> ## \u4ee3\u7801\n>\n> ```c++\n> #include <bits/stdc++.h>\n> \n> #define re register\n> \n> #define ll long long\n> \n> namespace TNT\n> {\n>  const int mod = 998244353;\n>  const int MAXN = 110;\n> \n>  int k, n, m;\n> \n>  inline int read()\n>  {\n>      int x = 0;\n>      char ch = getchar();\n>      while (ch < '0' || ch > '9')\n>          ch = getchar();\n>      while (ch >= '0' && ch <= '9')\n>      {\n>          x = x * 10 + ch - '0';\n>          ch = getchar();\n>      }\n>      return x;\n>  }\n> \n>  struct array\n>  {\n>      int ar[MAXN][MAXN];\n>      int x, y;\n>  } a, asum, s;\n> \n>  array operator*(array x, array y)\n>  {\n>      array c;\n>      c.x = x.x;\n>      c.y = y.y;\n>      for (re int i = 1; i <= x.x; i++)\n>          for (re int j = 1; j <= y.y; j++)\n>          {\n>              c.ar[i][j] = 0;\n>              for (re int z = 1; z <= x.y; z++)\n>                  c.ar[i][j] = 1ll * (1ll * c.ar[i][j] + 1ll * x.ar[i][z] * y.ar[z][j]) % (mod - 1);\n>          }\n>      return c;\n>  }\n> \n>  inline array qpow(array x, int y)\n>  {\n>      array ans = x;\n>      y--;\n>      while (y)\n>      {\n>          if (y & 1)\n>              ans = ans * x;\n>          x = x * x;\n>          y >>= 1;\n>      }\n>      return ans;\n>  }\n> \n>  inline int power(int x, int y)\n>  {\n>      int ans = 1;\n>      while (y)\n>      {\n>          if (y & 1)\n>              ans = 1ll * ans * x % mod;\n>          x = 1ll * x * x % mod;\n>          y >>= 1;\n>      }\n>      return ans;\n>  }\n> \n>  int exgcd(int a, int b, ll &x, ll &y)\n>  {\n>      if (!b)\n>      {\n>          x = 1, y = 0;\n>          return a;\n>      }\n> \n>      int d = exgcd(b, a % b, x, y);\n>      int g = x;\n>      x = y;\n>      y = g - a / b * y;\n> \n>      return d;\n>  }\n> \n>  std::map<int, int> hs;\n> \n>  inline int BSGS(int G)\n>  {\n>      m %= mod;\n>      int t = sqrt(mod) + 1,tmp = m % mod;\n> \n>      hs[tmp] = 0;\n>      for (int i = 1; i < t; i++)\n>      {\n>          tmp = 1ll * tmp * G % mod;\n>          hs[tmp] = i;\n>      }\n> \n>      G = power(G, t);\n> \n>      if (!G)\n>      {\n>          if (!m)\n>              return 1;\n>          else\n>              return -1;\n>      }\n> \n>      tmp = 1;\n>      if(hs.find(tmp) != hs.end())\n>          return 0;\n> \n>      for (int i = 1; i <= t; i++)\n>      {\n>          tmp = 1ll * tmp * G % mod;\n>          if(hs.find(tmp) != hs.end())\n>              return i * t - hs[tmp];\n>      }\n>      return -1;\n>  }\n> \n>  inline void main()\n>  {\n>      k = read();\n>      s.x = 1;\n>      a.x = a.y = s.y = k;\n>      s.ar[1][k] = 1;\n> \n>      for (re int i = 2; i <= k; i++)\n>          a.ar[i][i - 1] = 1;\n> \n>      for (re int i = k; i >= 1; i--)\n>          a.ar[i][k] = read();\n> \n>      n = read(), m = read();\n> \n>      asum = s * qpow(a, n - k);\n> \n>      int t = BSGS(3);\n> \n>      ll x, y;\n> \n>      int d = exgcd(asum.ar[1][k], mod - 1, x, y);\n> \n>      if (t % d)\n>          puts(\"-1\");\n>      else\n>      {\n>          x = (t / d * x % (mod - 1) + mod - 1) % (mod - 1);\n>          printf(\"%d\\n\", power(3, x));\n>      }\n>      return;\n>  }\n> }\n> \n> int main()\n> {\n>  TNT::main();\n>  return 0;\n> }\n> ```\n>\n> \n\n",
        "postTime": 1599999701,
        "uid": 283889,
        "name": "SuperTNT",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1106F \u3010Lunar New Year and a Recursive Sequence\u3011"
    },
    {
        "content": "\u4e00\u9053\u6570\u8bba\u597d\u9898\u3002\n\n\u9898\u76ee\u7684\u5f0f\u5b50\u5e26\u4e58\u65b9\uff0c\u96be\u4ee5\u8fdb\u884c\u64cd\u4f5c\u3002\u7136\u540e\u53c8\u53d1\u73b0 $f_i<p$\uff0c\u60f3\u5230\u7528\u539f\u6839\u5316\u5e42\u4e3a\u4e58\u3002\n\n> \u5982\u679c $p$ \u6709\u539f\u6839 $g$\uff0c\u5bf9 $\\forall n<p\\land\\gcd(n,p)=1$\uff0c$n$ \u53ef\u4ee5\u8868\u793a\u4e3a $g^k\\bmod p$\u3002\n\n$998244353$ \u662f\u8d28\u6570\uff0c\u539f\u6839\u4e3a $3$\uff0c\u90a3\u4e48\u9898\u76ee\u7684\u5f0f\u5b50\u5c31\u53ef\u4ee5\u5316\u4e3a\n$$\n3^{T_i}\\equiv\\prod_{j=1}^k3^{T_{i-j}b_j}\\pmod p\n$$\n\n\u6839\u636e\u6b27\u62c9\u5b9a\u7406 $a^b\\equiv a^{b\\bmod \\varphi(p)}$\uff0c$p$ \u4e3a\u8d28\u6570\uff0c\u6709\n\n$$\nT_i\\equiv\\sum_{j=1}^kT_{i-j}b_j\\pmod {p-1}\n$$\n\n\u53d1\u73b0\u8fd9\u662f\u4e00\u4e2a\u9012\u63a8\u5f0f\uff0c\u5982\u679c\u77e5\u9053 $T_k$\uff0c\u53ef\u4ee5\u77e9\u9635\u5feb\u901f\u5e42\u5f97\u5230 $T_n$\u3002\n\n$$\n\\begin{bmatrix}\nT_{i-k},T_{i-k+1},\\cdots,T_{i-1}\n\\end{bmatrix}*\n\\begin{bmatrix}\n&0,0,&\\cdots,&0,0,&b_k\\\\\n&1,0,&\\cdots,&0,0,&b_{k-1}\\\\\n&0,1,&\\cdots,&0,0,&b_{k-2}\\\\\n&\\cdots,&\\cdots,&\\cdots,&\\cdots\\\\\n&0,0,&\\cdots,&1,0,&b_2\\\\\n&0,0,&\\cdots,&0,1,&b_1\\\\\n\\end{bmatrix}=\n\\begin{bmatrix}\nT_{i-k+1},T_{i-k+2},\\cdots,T_i\n\\end{bmatrix}\n$$\n\n\u5177\u4f53\u5730\uff0c\u7531\u4e8e\u5df2\u77e5 $f_1=f_2=\\cdots=f_{k-1}=1$\uff0c\u5373 $T_1=T_2=\\cdots=T_{k-1}=0$\uff0c\u5982\u679c\u8bbe\u4e0a\u5f0f\u4e2d\u90a3\u4e2a $k\\times k$ \u5927\u5c0f\u7684\u8f6c\u79fb\u77e9\u9635\u4e3a $R$\uff0c\u6211\u4eec\u6709\n\n$$\n\\begin{bmatrix}\n0,0,\\cdots,0,T_k\n\\end{bmatrix}*\nR^{n-k}=\n\\begin{bmatrix}\nT_{n-k+1},T_{n-k+2},\\cdots,T_{n}\n\\end{bmatrix}\n$$\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u8bbe $R^{n-k}$ \u53f3\u4e0b\u89d2\u7684\u503c\u4e3a $r$\uff0c\n$$\nrT_k\\equiv T_n\\pmod {p-1}\n$$\n$$\n3^{rT_k}\\equiv 3^{T_n}\\equiv m\\pmod p\n$$\n\n\u5c31\u53ef\u4ee5 BSGS \u6c42\u89e3\uff0c\u5f97\u5230 $rT_k\\bmod p-1$ \u7684\u503c\uff0c\u8bb0\u4f5c $X$\u3002\uff08BSGS \u6c42\u7684\u662f $[1,p-1]$ \u7684\u6700\u5c0f\u6574\u6570\u89e3\uff09\n\n$$\nrT_k\\equiv X\\pmod {p-1}\n$$\n\n\u6700\u540e\u4f7f\u7528 exgcd \u6c42\u89e3\u7ebf\u6027\u540c\u4f59\u65b9\u7a0b\uff0c\u5f97\u5230 $T_k$ \u7684\u4e00\u4e2a\u7279\u89e3\uff0c\u4ee5\u53ca $f_k=3^{T_k}$\u3002\n\n\u65e0\u89e3\u7684\u60c5\u51b5\uff1a\n\n- BSGS \u65e0\u89e3\u3002\n\n- exgcd \u65e0\u89e3\u3002\n\nCode\n```cpp\n#include<bits/stdc++.h>\n#define mod 998244353\nusing namespace std;\ntypedef long long ll;\nll n,m,k;\nmap<ll,ll>mp;\nstruct Matrix{\n\tll a[103][103];\n\tfriend Matrix operator *(Matrix a,Matrix b){\n\t\tMatrix c;\n\t\tmemset(c.a,0,sizeof(c.a));\n\t\tfor(ll i=1;i<=k;i++)\n\t\tfor(ll j=1;j<=k;j++)\n\t\tfor(ll p=1;p<=k;p++)c.a[i][j]=(c.a[i][j]+a.a[i][p]*b.a[p][j]%(mod-1))%(mod-1);\n\t\treturn c;\n\t}\n}base;\ninline Matrix Matrix_quickpow(Matrix a,ll b){\n\tMatrix ans;\n\tfor(ll i=1;i<=k;i++)\n\tfor(ll j=1;j<=k;j++)ans.a[i][j]=(i==j);\n\twhile(b){\n\t\tif(b&1)ans=ans*a;\n\t\ta=a*a;b>>=1;\n\t}return ans;\n}\ninline ll quickpow(ll a,ll b){\n\tll ans=1;a%=mod;\n\twhile(b){\n\t\tif(b&1)ans=ans*a%mod;\n\t\ta=a*a%mod;b>>=1;\n\t}return ans;\n}\ninline ll BSGS(){\n\tll len=ceil(sqrt(mod)),res=m;\n\tfor(ll i=0;i<len;i++){\n\t\tmp[res]=i;\n\t\tres=res*3%mod;\n\t}\n\tll ans=res=quickpow(3,len);\n\tfor(ll i=1;i<=len;i++){\n\t\tif(mp[ans])return i*len-mp[ans];\n\t\tans=ans*res%mod;\n\t}return -1;\n}\nll exgcd(ll a,ll b,ll &x,ll &y){\n\tif(!b){x=1,y=0;return a;}\n\tll res=exgcd(b,a%b,y,x);\n\ty-=a/b*x;\n\treturn res;\n}\nint main(){\n\tscanf(\"%lld\",&k);\n\tfor(ll i=1;i<k;i++)base.a[i+1][i]=1;\n\tfor(ll i=1;i<=k;i++)scanf(\"%lld\",&base.a[k-i+1][k]);\n\tscanf(\"%lld%lld\",&n,&m);\n\tll tmp=BSGS(),x,y,d;\n\tif(tmp<0)printf(\"-1\"),exit(0);\n\td=exgcd(Matrix_quickpow(base,n-k).a[k][k],mod-1,x,y);\n\tif(tmp%d)printf(\"-1\"),exit(0);\n\tx=(__int128)x*tmp/d%(mod-1);\n\tprintf(\"%lld\",quickpow(3,(x+mod-1)%(mod-1)));return 0;\n}\n```\n",
        "postTime": 1653981996,
        "uid": 148226,
        "name": "Fan_sheng",
        "ccfLevel": 6,
        "title": "CF1106F Lunar New Year and a Recursive Sequence"
    },
    {
        "content": "\u5c45\u7136\u6ca1\u4eba\u5199\u5e38\u7cfb\u6570\u9f50\u6b21\u7ebf\u6027\u9012\u63a8/jy\n\n\u9898\u610f\u660e\u786e\u3002\n\n\u9996\u5148\u6211\u4eec\u6ce8\u610f\u5230\u8fd9\u4e2a\u7cfb\u6570\u662f\u5728\u5e42\u4e0a\u9762\u7684\uff0c\u8fd9\u9053\u9898\u7684\u5404\u79cd\u4fe1\u606f\u90fd\u662f\u5efa\u7acb\u5728\u4e58\u6cd5\u4e0a\u7684\uff0c\u5341\u5206\u4e0d\u597d\u5904\u7406\uff0c\u8003\u8651\u6c42\u4e00\u4e2a $ \\ln $ \u5c06\u8fd9\u4e9b\u4fe1\u606f\u5efa\u7acb\u5728\u52a0\u6cd5\u4e0a\u3002\n$$ \\ln f[n]=\\sum_{i=1}^kb[i]\\ln f[n-i] $$\n\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a\u95ee\u9898\u53d8\u6210\u4e86\u4e00\u822c\u7684\u5e38\u7cfb\u6570\u9f50\u6b21\u7ebf\u6027\u9012\u63a8\u3002\n\n\u7136\u540e\u53d1\u73b0 $ f_1 \\sim f_{k-1} $ \u5728\u53d6\u4e86 $ \\ln $ \u4e4b\u540e\u5168\u90e8\u90fd\u53d8\u6210\u4e86 $ 0 $\u3002\n\n\u8003\u8651\u4f7f\u7528\u5e38\u7cfb\u6570\u9f50\u6b21\u7ebf\u6027\u9012\u63a8\u7684\u8001\u7b97\u6cd5\uff0c\u56e0\u4e3a\u8001\u7b97\u6cd5\u7b97\u7684\u5b9e\u9645\u4e0a\u662f\u524d $ k $ \u9879\u5bf9\u7b2c $ n $ \u9879\u7684\u8d21\u732e\u3002\n\n\u6240\u4ee5\u8dd1\u4e00\u904d\u8001\u7b97\u6cd5\u5c31\u80fd\u591f\u5f97\u5230\u6709 $ x \\times \\ln f[k] = \\ln f[n] $\uff0c\u4e5f\u5c31\u662f $ f[k]^x = f[n] $\u3002\n\n\u4e8e\u662f\u53ea\u9700\u8981\u5728\u6a21\u8d28\u6570\u7684\u610f\u4e49\u4e0b\u505a $ k $ \u6b21\u5269\u4f59\u5373\u53ef\u3002\n```cpp\n#include<unordered_map>\n#include<cstdio>\ntypedef unsigned ui;\nconst ui M=205,MOD=119<<23,mod=MOD|1;\nui len,n,m,p[M];\ninline ui pow(ui a,ui b=mod-2){\n\tui ans(1);for(;b;b>>=1,a=1ull*a*a%mod)if(b&1)ans=1ull*ans*a%mod;return ans;\n}\ninline ui Ln(const ui&x){\n\tui i,y;const ui X=3,Y=393213064,M=31596;std::unordered_map<ui,ui>hs;\n\tif(hs.empty()){\n\t\tfor(y=1,i=1;i<=M&&(y=1ull*y*X%mod);++i)hs[y]=i;hs[1]=0;\n\t}\n\tfor(y=1,i=1;i<=M&&(y=1ull*y*Y%mod);++i)if(hs.find(1ull*y*x%mod)!=hs.end())return(hs[1ull*y*x%mod]+i*M)%MOD;\n\treturn-1;\n}\ninline void times(ui*f,ui*g,ui*P,const ui&len){\n\tui i,j,t;static ui sav[M];\n\tfor(i=0;i^len;++i)if(f[i])for(j=0;j^len;++j)if(g[j])sav[i+j]=(sav[i+j]+1ull*f[i]*g[j])%MOD;\n\tfor(i=len*2-1;i>=len;--i)if(sav[i])for(t=sav[i],j=len;~j;--j)sav[i-j]=(sav[i-j]+1ull*t*P[j])%MOD;\n\tfor(i=0;i^len;++i)f[i]=sav[i],sav[i]=0;\n}\ninline ui Solve(ui*P,const ui&len,ui n){\n\tstatic ui f[M],sav[M];if(len^1)f[1]=1;else f[0]=p[1];sav[0]=1;\n\tfor(;n;n>>=1,times(f,f,P,len))if(n&1)times(sav,f,P,len);return sav[len-1];\n}\nui gcd(const ui&a,const ui&b){\n\treturn b?gcd(b,a%b):a;\n}\nvoid exgcd(int a,int b,int&x,int&y){\n\tif(!b)return x=1,y=0,void();exgcd(b,a%b,y,x);y-=a/b*x;\n}\nsigned main(){\n\tui i,ans(0);int a,b,x,y;scanf(\"%u\",&len);p[0]=MOD-1;for(i=1;i<=len;++i)scanf(\"%u\",p+i);scanf(\"%u%u\",&n,&m);\n\tif(n<len)return printf(\"-1\"),0;\n\ta=Solve(p,len,n-1);b=Ln(m);i=gcd(a,MOD);\n\tif(b%i)return printf(\"-1\"),0;a/=i;b/=i;exgcd(a,MOD/i,x,y);\n\tprintf(\"%u\",pow(3,1ull*b*(x+MOD/i)%(MOD/i)));\n}\n```",
        "postTime": 1640606267,
        "uid": 160839,
        "name": "Prean",
        "ccfLevel": 7,
        "title": "\u751f\u6210\u51fd\u6570 \u5e38\u7cfb\u6570\u9f50\u6b21\u7ebf\u6027\u9012\u63a8 CF1106F\u9898\u89e3"
    },
    {
        "content": "[\u6211\u7684\u535a\u5ba2](https://www.cnblogs.com/Memory-of-winter/p/10345347.html)\n\n### \u9898\u76ee\u5927\u610f\n\n\u6709\u4e00\u4e32$n(n\\leqslant10^9)$\u4e2a\u6570\u7684\u6570\u5217\uff0c\u7ed9\u4f60$b_1\\sim b_k(k\\leqslant100)$\u3002\u5f53$i>k$\u65f6\uff1a\n$$f_i=(\\prod\\limits_{i=1}^kf_{i-j}^{b_i})\\bmod{998244353}$$\n\u5df2\u77e5$f_1=f_2=\\cdots=f_{k-1}=1,f_n=m$\uff0c\u95ee\u6700\u5c0f\u7684\u6b63\u6574\u6570$f_k$\u53ef\u80fd\u662f\u591a\u5c11\n\n\u8c01\u53ef\u4ee5\u544a\u8bc9\u6211\u4e3a\u4ec0\u4e48\u6211\u4ea4\u7ffb\u8bd1\u7684\u65f6\u5019LATEX\u5168\u90e8\u51fa\u9505\u4e86\uff1f\n\n### \u9898\u89e3\n\n\u5199\u4e00\u4e0b\u5f0f\u5b50\uff0c\u53d1\u73b0\u53ef\u4ee5\u7528\u77e9\u9635\u5feb\u901f\u5e42\u6c42\u51fa$f_n=f_k^x\\bmod{998244353}$\u4e2d\u7684$x$\uff08\u5e78\u597d\u8fd9\u9053\u9898\u4e0d\u9700\u8981\u7ebf\u6027\u9f50\u6b21\u9012\u63a8\uff0c\u4e0d\u7136\u73a9\u5b8c\uff09\uff0c\u590d\u6742\u5ea6$O(k^3\\log_2n)$\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u6c42$f_k^x\\equiv m\\pmod{998244353}$\n$$\\begin{aligned}x\\ln(f_k)\\equiv\\ln(m)\\pmod{\\varphi(998244353)}\\\\\\ln(f_k)\\equiv\\ln(m)x^{-1}\\pmod{998244352}\\\\f_k\\equiv\\exp(\\ln(m)x^{-1})\\pmod{998244353}\\end{aligned}$$\n\n\u4f46\u662f$x$\u5728$\\pmod{998244352}$\u4e0b\u53ef\u80fd\u6ca1\u6709\u9006\u5143\uff0c\u600e\u4e48\u529e\u5462\uff1f\u53ef\u4ee5\u7528$exgcd$\u6c42\u51fa$\\dfrac{\\gcd(x,998244352)}x$\uff0c\u7136\u540e\u628a$\\ln(m)$\u9664\u6389$\\gcd(x,998244352)$\uff0c\u82e5\u6709\u4f59\u6570\u5219\u65e0\u89e3\u3002\n\n### \u5361\u70b9\n\n\u6bd4\u8d5b\u7ed3\u675f\u540e$5min$\u53d1\u73b0\u53ef\u4ee5\u9664\u6389$\\gcd$\u6765\u505a\uff0c\u7136\u540e\u81ea\u95ed\n\n\n\n### C++ Code\uff1a\n\n```cpp\n#include <algorithm>\n#include <cctype>\n#include <cstdio>\n#include <cmath>\n#include <iostream>\n#include <queue>\n#include <vector>\n#include <map>\n#include <set>\nconst int mod = 998244353, __mod = mod - 1;\n#define maxn 105\n\nint Tim, n, m, k;\nint b[maxn];\nstruct Matrix {\n\tint s[maxn][maxn];\n\tinline Matrix operator * (const Matrix &rhs) const {\n\t\tMatrix res;\n\t\tfor (int i = 0; i < k; ++i) {\n\t\t\tfor (int j = 0; j < k; ++j) {\n\t\t\t\tlong long t = 0;\n\t\t\t\tfor (int l = 0; l < k; ++l) (t += static_cast<long long> (s[i][l]) * rhs.s[l][j]) %= __mod;\n\t\t\t\tres.s[i][j] = t;\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n} base, res;\n\nnamespace Math {\n\tstd::map<int, int> mp;\n\tbool init = false;\n\tlong long BSGS(long long y, long long z) {\n\t\ty %= mod, z %= mod;\n\t\tif (!y) return -1;\n\t\tlong long tmp = 1, t = sqrt(mod - 1) + 1;\n\t\tif (!init) {\n\t\t\tmp.clear();\n\t\t\tfor (int i = 0; i <= t; i++) {\n\t\t\t\tmp[tmp * z % mod] = i;\n\t\t\t\tif (i != t) tmp = tmp * y % mod;\n\t\t\t}\n\t\t\tinit = true;\n\t\t}\n\t\tlong long tmp6 = tmp;\n\t\tfor (int i = 1; i <= t; i++) {\n\t\t\tif (mp.count(tmp6)) return i * t - mp[tmp6];\n\t\t\ttmp6 = tmp6 * tmp % mod;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tinline int pw(int base, int p) {\n\t\tstatic int res;\n\t\tfor (res = 1; p; p >>= 1, base = static_cast<long long> (base) * base % mod) if (p & 1) res = static_cast<long long> (res) * base % mod;\n\t\treturn res;\n\t}\n\n\tlong long exgcd(long long a, long long b, long long &x, long long &y) {\n\t\tif (!b) {\n\t\t\tx = 1, y = 0;\n\t\t\treturn a;\n\t\t}\n\t\tlong long t = exgcd(b, a % b, y, x);\n\t\ty -= a / b * x;\n\t\treturn t;\n\t}\n\tlong long retgcd;\n\tlong long inv(long long a) {\n\t\tlong long x, y;\n\t\tretgcd = exgcd(a, __mod, x, y);\n\t\treturn (x % __mod + __mod) % __mod;\n\t}\n}\n\nint main() {\n\tstd::ios::sync_with_stdio(false), std::cin.tie(0), std::cout.tie(0);\n\tstd::cin >> k;\n\tfor (int i = 0; i < k; ++i) std::cin >> base.s[i][0];\n\tfor (int i = 1; i < k; ++i) base.s[i - 1][i] = 1;\n\tres.s[0][0] = 1;\n\tstd::cin >> n >> m;\n\tfor (n -= k; n; n >>= 1, base = base * base) if (n & 1) res = res * base;\n\tconst long long y = res.s[0][0];\n\tlong long lnz = Math::BSGS(3, m);\n\tlong long t = Math::inv(y);\n\tif (lnz % Math::retgcd) {\n\t\tputs(\"-1\");\n\t\treturn 0;\n\t}\n\tlnz = lnz / Math::retgcd * t % __mod;\n\tstd::cout << Math::pw(3, lnz) << '\\n';\n\treturn 0;\n}\n\n```",
        "postTime": 1548993359,
        "uid": 22072,
        "name": "Memory_of_winter",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1106F \u3010Lunar New Year and a Recursive Sequence\u3011"
    }
]