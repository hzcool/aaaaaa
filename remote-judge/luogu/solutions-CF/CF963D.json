[
    {
        "content": "\u9996\u5148\u8003\u8651\u6700\u6734\u7d20\u7684\u66b4\u529b\uff0c\u628a\u6bcf\u4e2a\u4e32\u51fa\u73b0\u8fc7\u7684\u4e0b\u6807\u627e\u51fa\u6765\uff0c\u7136\u540e\u6ed1\u52a8\u533a\u95f4\u8dd1\u4e00\u904d\u7b54\u6848\uff0c\u590d\u6742\u5ea6 $O(n|S|)$\u3002\n\n\u8003\u8651\u6839\u53f7\u5206\u6cbb\u3002\u4ee4 $B=\\sum|m_i|$\uff0c\u957f\u5ea6\u5927\u4e8e $B$ \u7684\u4e32\u4e0d\u8d85\u8fc7 $\\dfrac{\\sum|m_i|}{B}$ \u4e2a\uff0c\u76f4\u63a5\u8dd1\u66b4\u529b\u3002\u590d\u6742\u5ea6 $O\\left(\\dfrac{\\sum|m_i|}{B}|S|\\right)$\n\n\u957f\u5ea6\u4e0d\u5927\u4e8e $B$ \u7684\u4e32\u53ef\u4ee5\u5c06 $S$ \u4e2d\u957f\u5ea6\u4e3a $1\\sim B$ \u7684\u5b50\u4e32\u90fd\u627e\u51fa\u6765\uff0c\u7136\u540e\u4e22\u5230\u5bf9\u5e94\u7684\u8be2\u95ee\u91cc\u9762\uff0c\u5bf9\u6bcf\u4e2a\u8be2\u95ee\u8dd1\u4e00\u904d\u6ed1\u52a8\u533a\u95f4\u3002\u56e0\u4e3a\u8fd9\u4e9b\u5b50\u4e32\u6709 $B|S|$ \u4e2a\uff0c\u6240\u4ee5\u590d\u6742\u5ea6 $O(B|S|)$\u3002\n\n\u603b\u590d\u6742\u5ea6 $O\\left(\\dfrac{\\sum|m_i|}{B}|S|+B|S|\\right)$\uff0c\u5f53 $B=\\sqrt{\\sum|m_i|}$ \u65f6\u6700\u4f18\u3002\n\n[Code](https://www.luogu.com.cn/paste/21vc53ff)",
        "postTime": 1633617457,
        "uid": 150843,
        "name": "\u5510\u4e00\u6587",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF963D \u3010Frequency of String\u3011"
    },
    {
        "content": "## <center>\u3010CF963D\u3011Frequency of String \uff08AC\u81ea\u52a8\u673a\uff09</center>\n\n\u200b\t\t\u524d\u6bb5\u65f6\u95f4\u91cd\u65b0\u5b66\u4e60\u4e86AC\u81ea\u52a8\u673a\uff08\u4ee5\u524d\u542c\u540c\u5b66\u8bb2\uff0c\u53ea\u5199\u4e86\u4e2a\u5047\u6a21\u677f\uff0c\u5c31\u518d\u4e5f\u6ca1\u63a5\u89e6\u8fc7\u4e86\uff09\uff0c\u7ec3\u4e86\u51e0\u9053\u9898\u76ee\uff0c\u7b97\u662f\u638c\u63e1\u4e86AC\u81ea\u52a8\u673a\u7684\u57fa\u7840\u4e86\u3002\u5e76\u4e14\u5199\u4e86\u4e00\u4e2a\u81ea\u5df1\u80fd\u7528\u7684\u6a21\u677f\u3002\n\n\u200b\t\t\u6628\u5929\u5237\u4e86\u8fd9\u9053\u9898\uff0c\u6253\u7b97\u5199\u4e00\u4e2a\u9898\u89e3\u3002\n\n------\n\n##### \u3010\u9898\u76ee\u63cf\u8ff0\u3011\n\n\u200b\t\t\u7ed9\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32$s$ $(|s|\\leq 10^5)$\uff0c\u6709$n$ $(n\\leq10^5)$\u4e2a\u8be2\u95ee\uff0c\u7b2c$i$\u4e2a\u8be2\u95ee\u5305\u542b\u4e00\u4e2a\u6574\u6570$k_i$ $(1 \\leq k_i\\leq |s|)$\u548c\u4e00\u4e2a\u5b57\u7b26\u4e32$m_i$ $(\\sum m_i \\leq 10^5)$\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\uff0c\u8981\u6c42\u627e\u5230\u4e00\u4e2a\u5b57\u7b26\u4e32$t$\uff0c\u6ee1\u8db3$t$\u662f$s$\u7684\u5b57\u4e32\uff0c\u4e14\u5728\u5b57\u7b26\u4e32$t$\u4e2d\uff0c\u4e32$m_i$\u7684\u5168\u5339\u914d\u6070\u597d\u51fa\u73b0\u4e86$k_i$\u6b21\u3002\u4f60\u53ea\u9700\u8981\u5bf9\u6bcf\u4e2a\u8be2\u95ee\u8f93\u51fa\u5bf9\u5e94\u5b57\u7b26\u4e32$t$\u7684\u6700\u5c0f\u957f\u5ea6\u5c31\u53ef\u4ee5\u4e86\u3002\u5982\u679c\u6ca1\u6709\u6ee1\u8db3\u8981\u6c42\u7684\u5b57\u7b26\u4e32$t$\uff0c\u8bf7\u8f93\u51fa$-1$\u3002\uff08\u4fdd\u8bc1$m_i$\u4e92\u4e0d\u76f8\u540c\uff09\n\n\u200b\t\t\u65f6\u9650 1.5s  \u7a7a\u9650 500Mb\n\n------\n\n##### \u3010AC\u81ea\u52a8\u673a\u3011\t\t\n\n\u200b\t\t\u5148\u6765\u62c6\u5206\u4e00\u4e0bAC\u81ea\u52a8\u673a\uff0c\u6574\u7406\u4e00\u4e9b\u7279\u6027\uff1a\u5b57\u5178\u6811\uff0cfail\u503c\uff0cfail\u6811\n\n\n\n\u200b\t\t**\u5b57\u5178\u6811\uff1a**\n\n\u200b\t\tAC\u81ea\u52a8\u673a\u662f\u5efa\u7acb\u5728\u4e00\u68f5\u5b57\u5178\u6811\u4e0a\u7684\u3002\u5b57\u5178\u6811\u4e0a\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u662f\u4e00\u4e2a\u72b6\u6001\uff0c\u4ee3\u8868\u7740\u4e00\u4e2a\u524d\u7f00\uff08\u5373\u4ece\u6839\u8282\u70b9\u4e00\u76f4\u5230\u8fbe\u8be5\u8282\u70b9\u7684\u8def\u5f84\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\uff0c\u8fd9\u4e00\u5b9a\u662f\u5b57\u5178\u6811\u4e2d\u67d0\u4e9b\u5355\u8bcd\u7684\u524d\u7f00\uff09\u3002\n\n\n\n\u200b\t\t**fail\u503c\uff1a**\n\n\u200b\t\t\u6bcf\u4e2a\u8282\u70b9\u90fd\u5177\u6709\u4e00\u4e2afail\u503c\u3002fail\u503c\u5177\u6709\u91cd\u8981\u610f\u4e49\u3002\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\uff0c\u6bcf\u4e2a\u8282\u70b9\u4ee3\u8868\u4e00\u4e2a\u524d\u7f00\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\u800c\u8282\u70b9\u7684fail\u503c\u662f\u53e6\u4e00\u4e2a\u8282\u70b9\u7684\u7f16\u53f7\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6307\u5411\u4e86\u53e6\u4e00\u4e2a\u524d\u7f00\uff0c\u4e5f\u5c31\u662f\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\u4e0d\u59a8\u4ee4\u5f53\u524d\u8282\u70b9\u4ee3\u8868\u7684\u5b57\u7b26\u4e32\u4e3a$s$\uff0c\u5176fail\u6307\u5411\u8282\u70b9\u4ee3\u8868\u7684\u5b57\u7b26\u4e32\u4e3a$t$\uff0c\u6839\u636eAC\u81ea\u52a8\u673a\u7684\u6027\u8d28\uff0c\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u6ee1\u8db3\uff1a\n\n\u200b\t\t\uff081\uff09$t$\u662f$s$\u7684\u540e\u7f00\u3002\n\n\u200b\t\t\uff082\uff09$|t|<|s|$\u3002\n\n\u200b\t\t\uff083\uff09\u5728\u8be5\u81ea\u52a8\u673a\u4e2d\u6240\u6709\u6ee1\u8db3\u524d\u4e24\u4e2a\u6027\u8d28\u5b57\u7b26\u4e32\u4e2d\uff0c$|t|$\u662f\u6700\u5927\u7684\u3002\n\n\u200b\t\t\n\n\u200b\t\t**\u5339\u914d\u8fc7\u7a0b\uff1a**\n\n\u200b\t\t\u5339\u914d\u65f6\uff0c\u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u6839\u636e\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u7684\u5b57\u7b26\u987a\u5e8f\uff0c\u5728AC\u81ea\u52a8\u673a\u4e2d\u5339\u914d\uff0c\u9047\u5230\u65e0\u6cd5\u5339\u914d\u65f6\uff0c\u5219\u5c06\u5f53\u524d\u72b6\u6001\u79fb\u52a8\u5230fail\u503c\u6240\u6307\u72b6\u6001\u4e0a\uff0c\u7ee7\u7eed\u5c1d\u8bd5\u5339\u914d\uff0c\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\u76f4\u5230\u5339\u914d\u6210\u529f\uff08\u5728\u6211\u7684\u6a21\u677f\u4e2d\uff0c\u6839\u8282\u70b9\u662f\u4e00\u4e2a\u4e07\u914d\u70b9\uff0c\u6240\u4ee5\u4e00\u5b9a\u4f1a\u5339\u914d\u6210\u529f\uff09\u3002\n\n\n\n\u200b\t\t**fail\u6811\uff1a**\n\n\u200b\t\t\u7531\u4e8e\u6839\u7684fail\u503c\u662f\u7a7a\uff0c\u5176\u4ed6\u6bcf\u4e2a\u70b9\u5fc5\u6709\u4e00\u4e2afail\u503c\uff0c\u56e0\u6b64\u628afail\u503c\u89c6\u4e3a\u4e00\u6761\u8fb9\uff0cAC\u81ea\u52a8\u673a\u4e0a\u7684\u70b9\u53ef\u4ee5\u6839\u636efail\u503c\u6784\u9020\u51fa\u4e00\u68f5\u6811\uff0c\u79f0\u4e3afail\u6811\u3002fail\u6811\u610f\u4e49\u91cd\u5927\uff0c\u5982\u679c\u6ca1\u6709\u8003\u8651\u5230\u5b83\u7684\u7279\u6027\uff0c\u76f8\u5f53\u4e8e\u662f\u5b66\u4e86\u5047\u7684AC\u81ea\u52a8\u673a\u3002\n\n\u200b\t\tfail\u6811\u4e0a\u7956\u5148\u548c\u5b50\u5b59\u7684\u5173\u7cfb\uff1a\u7956\u5148\u8282\u70b9\u4ee3\u8868\u7684\u4e32\uff0c\u662f\u5b50\u5b59\u8282\u70b9\u4ee3\u8868\u7684\u4e32\u7684\u4e00\u4e2a\u771f\u540e\u7f00\uff0cAC\u81ea\u52a8\u673a\u7684\u4f7f\u7528\u5927\u591a\u57fa\u4e8e\u8fd9\u4e2a\u7279\u6027\u3002\n\n------\n\n##### \u53c2\u8003\u89e3\u9898\u601d\u8def\uff1a\n\n\u200b\t\t\u5982\u679c\u6211\u4eec\u80fd\u591f\u77e5\u9053\u6bcf\u4e2a\u4e32$m_i$\u5728$s$\u4e2d\u5b8c\u6210\u5168\u5339\u914d\u7684\u7ed3\u675f\u4f4d\u7f6e\uff0c\u901a\u8fc7\u94fe\u5f0f\u7ed3\u6784\u5c06\u8fd9\u4e9b\u4f4d\u7f6e\u50a8\u5b58\u8d77\u6765\uff0c\u5c31\u80fd\u591f\u901a\u8fc7\u4e00\u904d\u626b\u63cf\u6c42\u51fa$t$\u7684\u6700\u77ed\u957f\u5ea6\u3002\n\n> \u6bd4\u5982\uff0c$m_i$\u5b8c\u6210\u5168\u5339\u914d\u7684\u4f4d\u7f6e\u4e3a\uff1a2,4,7,8,9,10\uff0c\u4e14$k_i=3$\n>\n> \u90a3\u4e48\u6211\u4eec\u626b\u63cf\u8fc7\u7a0b\u4e2d\u53d1\u73b0\u201c7\uff0c8\uff0c9\u201d\u8fd9\u4e09\u4e2a\u8fde\u7eed\u4f4d\u7f6e\u7684\u957f\u5ea6\u6700\u5c0f\uff0c\u7531\u6b64\u5f97\u5230$t$\u7684\u6700\u77ed\u957f\u5ea6$|t|_{min}=9-7+|m_i|$\n\n\u200b\t\t\u90a3\u4e48\u6211\u4eec\u60f3\u5230\u4e00\u4e2a\u6734\u7d20\u76f4\u63a5\u7684\u65b9\u6cd5\uff0c\u7528AC\u81ea\u52a8\u673a\u8dd1\u51fa\u8fd9\u4e9b\u5168\u5339\u914d\u7684\u4f4d\u7f6e\u3002\n\n\u200b\t\t\u9996\u5148\uff0c\u6839\u636e\u6240\u6709\u7684\u4e32$m_i$\u5efa\u7acbAC\u81ea\u52a8\u673a\uff0c\u7136\u540e\u62ff\u4e32$s$\u53bb\u5339\u914d\uff0c\u5339\u914d\u8fc7\u7a0b\u4e2d\u4f1a\u7ecf\u5386$|s|$\u4e2a\u72b6\u6001\u3002\u5f53\u67d0\u4e2a\u72b6\u6001\u5339\u914d\u6210\u529f\u65f6\uff0c\u5176\u5728fail\u6811\u4e0a\u7684\u6240\u6709\u7956\u5148\u8282\u70b9\u4e5f\u5c06\u5339\u914d\u6210\u529f\u3002\u4f46\u6ce8\u610f\uff0c\u5e76\u4e0d\u662f\u6240\u6709\u7956\u5148\u8282\u70b9\u90fd\u5bf9\u5e94\u4e8e\u67d0\u4e2a\u4e32$m_i$\uff0c\u6709\u7684\u8282\u70b9\u53ea\u4ee3\u8868\u67d0\u4e2a\u524d\u7f00\u3002\u6211\u4eec\u53ef\u4ee5\u904d\u5386\u5f53\u524d\u72b6\u6001\u4ee5\u53ca\u6240\u6709\u7956\u5148\u72b6\u6001\uff0c\u5982\u679c\u904d\u5386\u5230\u7684\u8fd9\u4e2a\u72b6\u6001\u5bf9\u5e94\u4e8e\u67d0\u4e2a\u4e32$m_i$\uff0c\u6211\u4eec\u5c31\u8dd1\u51fa\u4e86\u8fd9\u4e2a\u4e32\u7684\u4e00\u4e2a\u5168\u5339\u914d\u7684\u4f4d\u7f6e\uff0c\u4e8e\u662f\u8bb0\u5f55\u4e0b\u6765\u3002\n\n\u200b\t\t\u8fd9\u4e2a\u7b97\u6cd5\u80fd\u591f\u4e0d\u9057\u6f0f\u7684\u627e\u51fa\u6bcf\u4e2a$m_i$\u7684\u5168\u5339\u914d\u4f4d\u7f6e\uff0c\u6b63\u786e\u6027\u6709\u4fdd\u8bc1\uff0c\u4f46\u662f\u5982\u4f55\u4fdd\u8bc1\u6548\u7387\u5462\uff1f\n\n\u200b\t\t\u6ce8\u610f\uff0cfail\u6811\u4e0a\u53ea\u6709\u90e8\u5206\u8282\u70b9\u662f\u5bf9\u5e94\u4e8e\u67d0\u4e2a\u4e32$m_i$\u7684\uff0c\u6211\u4eec\u79f0\u8fd9\u4e9b\u8282\u70b9\u662f\u6709\u6548\u7684\uff0c\u5176\u4f59\u8282\u70b9\u662f\u65e0\u6548\u7684\uff0c\u5982\u679c\u6211\u4eec\u5728fail\u6811\u4e0a\u63d0\u524ddfs\u4e00\u904d\uff0c\u5c31\u80fd\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u6700\u8fd1\u7684\u4e00\u4e2a\u6709\u6548\u7956\u5148\uff0c\u4ece\u800c\u8df3\u8fc7\u90a3\u4e9b\u65e0\u6548\u7956\u5148\uff0c\u8282\u7701\u65f6\u95f4\u3002\n\n\u200b\t\t\u5b9e\u9645\u4e0a\u52a0\u4e0a\u8fd9\u4e2a\u4f18\u5316\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e86\u3002\u4f46\u662f\u6211\u4eec\u9700\u8981\u660e\u767d\u4e3a\u4ec0\u4e48\u3002\n\n\u200b\t\t\u8be5\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u6027$\\rm O(n\\sqrt n)$\uff0c\u4e0b\u9762\u662f\u5206\u6790\uff1a\n\n\n\n\u200b\t\t**\u7ed3\u8bba**: fail\u6811\u4e0a\uff0c\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u7684\u6709\u6548\u7956\u5148\u6570\u91cf\u6700\u5927\u4e3a$\\rm O( \\sqrt{\\sum m_i})$\n\n\u200b\t\t**\u8bc1\u660e**\uff1a\u5047\u8bbe\u67d0\u4e2a\u8282\u70b9\u7684\u6709\u6548\u7956\u5148\u6570\u91cf\u4e3a$k$\u4e2a\uff0c\u90a3\u4e48\uff0c\u8fd9\u4e9b\u7956\u5148\u8282\u70b9\u4ee3\u8868\u7740$k$\u4e2a\u5b57\u7b26\u4e32\uff0c\u800c\u6839\u636efail\u6811\u7684\u6027\u8d28\uff0c\u6bcf\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u90fd\u4e0d\u76f8\u7b49\uff0c\u56e0\u6b64\u8fd9\u4e9b\u6709\u6548\u4e32\u7684\u957f\u5ea6\u4e4b\u548c\u7684\u4e0b\u754c\u4e3a$\\frac{k(k+1)}{2}$\u3002\u6839\u636e\u9898\u610f\uff0c\u6240\u6709\u6709\u6548\u4e32\u7684\u548c$\\sum m_i\\geq \\frac{k(k+1)}{2}$\uff0c\u56e0\u6b64$k$\u7684\u6570\u91cf\u6700\u5927\u4e3a$\\rm O(\\sqrt {\\sum m_i})$\n\n\u200b\t\t\n\n\u200b\t\t\u6240\u4ee5\u8bf4\uff0c\u5728$|s|$\u4e2a\u72b6\u6001\u4e2d\uff0c\u6bcf\u4e2a\u72b6\u6001\u7684\u6709\u6548\u7956\u5148\u6570\u76ee\u6700\u5927\u4e3a$\\rm O(\\sqrt {\\sum m_i})$\uff0c\u56e0\u6b64\uff0c\u6240\u6709\u76ee\u6807\u4e32\u7684\u5168\u5339\u914d\u7684\u4f4d\u7f6e\u603b\u6570\u76ee\u6700\u5927\u4e3a$\\rm O(|s|\\sqrt {\\sum m_i})$\uff0c\u56e0\u4e3a$|s|,\\sum m_i$\u548c$n$\u540c\u6570\u91cf\u7ea7\uff0c\u6240\u4ee5\u5168\u5339\u914d\u4f4d\u7f6e\u603b\u6570\u76ee\u6700\u5927\u4e3a$\\rm O(n\\sqrt n)$\u3002\n\n\u200b\t\t\n\n\u200b\t\t\u6700\u540e\u626b\u63cf\u94fe\u5f0f\u7ed3\u6784\u590d\u6742\u6027\u4e5f\u662f$\\rm O(n\\sqrt n)$\uff0c\u603b\u590d\u6742\u6027$\\rm O(n\\sqrt n)$\u3002\n\n\n\n\u200b\t\t\u8fd9\u9053\u9898\u8fd8\u6709\u4e00\u4e2a\u5f88\u5751\u7684\u5730\u65b9\uff0c\u56e0\u4e3a$n\\leq 10^5$\uff0c\u6240\u4ee5$n\\sqrt n$\u53ef\u8fbe$3\\times 10^7$\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u94fe\u8868\u6765\u626b\u63cf\uff0c\u53ef\u80fd\u4f1a\u88ab\u5361\u5e38\u6570\u3002\n\n\u200b\t\t\u4e3a\u4ec0\u4e48\u5462\uff1f\u904d\u5386\u94fe\u5f0f\u7ed3\u6784\u6709\u4ec0\u4e48\u6162\u7684\u5462\uff1f\u624b\u5199\u94fe\u8868\u8fd8\u4f1a\u88ab\u5361\u5e38\u5417\uff1f\u7136\u800c\u4eb2\u8eab\u8bd5\u6cd5\uff0c\u7684\u786eTLE\u4e86\u3002\n\n\u200b\t\t\u94fe\u8868\u7ed3\u6784\u7684\u904d\u5386\u5e38\u6570\u6765\u81ea\u4e8e\u5bfb\u5740\uff0c\u5728\u904d\u5386\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4ee5\u4e0d\u786e\u5b9a\u7684\u987a\u5e8f\u53bb\u8bbf\u95ee\u5927\u91cf\u7684\u5730\u5740\uff0c\u8fd9\u662f\u975e\u5e38\u7f13\u6162\u7684\u3002\u6211\u4eec\u9700\u8981\u4f7f\u7528**vector**\u3002vector\u4e2d\u904d\u5386\u7684\u5730\u5740\u662f\u8fde\u7eed\u7684\uff0c\u5728\u8bbf\u95ee\u540c\u6837\u6570\u91cf\u7684\u5730\u5740\u7684\u60c5\u51b5\u4e0b\uff0c\u4f1a\u6bd4\u94fe\u8868\u5feb\u5f88\u591a\u3002\n\n\u200b\t\t\u4f46\u662fvector\u63d2\u5165\u6162\u554a\uff01\uff08\u662f\u7684\u6ca1\u9519\uff0c\u4f46\u662f\u80fd\u8fc7\u8fd9\u9053\u9898\u2026\u2026\u53ef\u80fd\u548c\u6570\u636e\u7279\u5f81\u6709\u5173\uff1f\uff09\n\n\u200b\t\t\u770b\u6765\u8fd9\u9053\u9898\u7684\u74f6\u9888\u5e94\u8be5\u5728\u4e8e\u6700\u540e\u7684\u904d\u5386\u3002\n\n\u200b\t\t\u6700\u540e\u8fd9\u4e2a\u70b9\u5f88\u6709\u610f\u601d\uff0c\u4f46\u662f\u6211\u4e86\u89e3\u7684\u5e76\u4e0d\u591a\uff0c\u8fd8\u6709\u5f85\u6df1\u5165\u6316\u6398\u3002\n\n-------\n\n##### \u3010\u53c2\u8003\u4ee3\u7801\u3011\n\n```cpp\n#define George_Plover\n#include <list>\n#include <queue>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <iostream>\n#include <iomanip>\n#include <algorithm>\n#define MAXM 100101\n#define MAXN 100101\n#define MAXL (100101*430)\n#define LL long long\n#define RG register\nusing namespace std;\nvector<int>vec[MAXN];\nstruct ACM{\n    const static int None = 0;\n    int fail[MAXM];\n    int siz,root;\n    queue<int>q;\n    struct node{\n        int son[26];\n        int cnt;\n        void init(){\n            cnt=0;memset(son,0,sizeof(son));\n        }\n    }tr[MAXM];\n    struct Fail_Tree{\n        int tot,pre[MAXM],to[MAXM],lin[MAXM],top[MAXM];\n        bool vis[MAXM];\n        void init()\n        {\n            tot=0;\n            memset(pre,0,sizeof(pre));\n            memset(vis,0,sizeof(vis));\n        }\n        void add(int x,int y)\n        {\n            tot++;lin[tot]=pre[x];pre[x]=tot;to[tot]=y;\n        }\n        void dfs(int x,int fa)\n        {\n            if(vis[fa])\n                top[x]=fa;\n            else\n                top[x]=top[fa];\n            for(int i=pre[x];i;i=lin[i])\n            {\n                int v=to[i];\n                dfs(v,x);\n            }\n        }\n    }tree;\n    void init()\n    {\n        for(int i=1;i<=siz;i++)\n            tr[i].init();\n        tree.init();\n        siz=1;root=1;fail[root]=None;tree.top[None]=None;\n        for(int i=0;i<26;i++)\n            tr[None].son[i]=root;\n    }\n    ACM(){init();}\n    void add(char *s)\n    {\n        static int CNT=0;\n        int tmp=root;\n        for(int i=0;s[i];i++)\n        {\n            if(!tr[tmp].son[s[i]-'a'])\n                tr[tmp].son[s[i]-'a']=++siz;\n            tmp=tr[tmp].son[s[i]-'a'];\n        }\n        tr[tmp].cnt=++CNT;\n        tree.vis[tmp]=1;\n    }\n    void get_fail()\n    {\n        q.push(root);\n        while(!q.empty())\n        {\n            int u=q.front();q.pop();\n            for(int i=0;i<26;i++)\n            {\n                int v=tr[u].son[i];\n                if(!v)\n                    continue;\n                int tmp=fail[u];\n                while(tmp!=None&&!tr[tmp].son[i])\n                    tmp=fail[tmp];\n                fail[v]=tr[tmp].son[i];\n                tree.add(tr[tmp].son[i], v);\n                q.push(v);\n            }\n        }\n        tree.dfs(root,None);\n    }\n    void work(char *s)\n    {\n        int tmp=root;\n        for(int i=0;s[i];i++)\n        {\n            while(tmp!=None&&!tr[tmp].son[s[i]-'a'])\n                tmp=fail[tmp];\n            tmp=tr[tmp].son[s[i]-'a'];\n            int p=tmp;\n            \n            while(p!=None)\n            {\n                if(tree.vis[p]){\n                    vec[tr[p].cnt].push_back(i);\n                }\n                p=tree.top[p];\n            }\n             \n        }\n    }\n}acm;\nint n,a[MAXN],len[MAXN];\nchar T[MAXM],S[MAXM];\n\nint main()\n{\n    scanf(\"%s\",T);\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d%s\",&a[i],S);\n        acm.add(S);\n        len[i]=(int)strlen(S);\n    }\n    acm.get_fail();\n    acm.work(T);\n    for(int i=1;i<=n;i++)\n    {\n        int ans=MAXL;\n        if(vec[i].size()<a[i])\n            printf(\"-1\\n\");\n        else\n        {\n            for(int j=0;j+a[i]-1<vec[i].size();j++)\n                ans=min(ans,vec[i][j+a[i]-1]-vec[i][j]+len[i]);\n            printf(\"%d\\n\",ans);\n        }\n    }\n    return 0;\n}\n```\n\n\n\n\n\n\n\t\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u200b\t\t",
        "postTime": 1593940419,
        "uid": 34329,
        "name": "George_Plover",
        "ccfLevel": 7,
        "title": "\u3010CF963D\u3011Frequency of String \uff08AC\u81ea\u52a8\u673a\uff09"
    },
    {
        "content": "\u9700\u8981\u53d1\u73b0\u4e00\u4e2a\u91cd\u8981\u6027\u8d28\uff1a\u5bf9\u4e8e $n$ \u4e2a\u4e92\u4e0d\u76f8\u540c\u7684\u6a21\u5f0f\u4e32 $t_i$ \uff0c\u4ed6\u4eec\u5728\u6587\u672c\u4e32 $s$ \u4e2d\u7684\u51fa\u73b0\u6b21\u6570\u4e4b\u548c\uff08\u5373 endpos \u5927\u5c0f\u4e4b\u548c\uff09\u662f $O(|s|\\sqrt {\\sum |t_i|})$  \u7684\u3002\n\n\u8bc1\u660e\u8003\u8651\u628a\u6a21\u5f0f\u4e32\u6309\u957f\u5ea6\u5206\u7c7b\uff0c\u90a3\u4e48\u5bf9\u4e8e\u957f\u5ea6\u4e3a $l_i$ \u7684\u4e00\u4e9b\u6a21\u5f0f\u4e32\uff0c\u4ed6\u4eec\u5728 $s$ \u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u4e4b\u548c\u81f3\u591a\u662f $|s|-l_i+1$ \u3002\u7531\u4e8e $\\sum l_i \\leq \\sum |t_i|$ \u4e14 $l_i$ \u4e92\u4e0d\u76f8\u540c\uff0c\u4e0d\u540c\u7684 $l_i$ \u81f3\u591a\u6709 $\\sqrt{\\sum{|t_i|}}$ \u79cd\uff0c\u6240\u4ee5\u603b\u7684\u4e2a\u6570\u662f $O(|s|\\sqrt {\\sum |t_i|})$\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a\u6a21\u5f0f\u4e32 $t_i$ \u7ef4\u62a4\u51fa\u5b83\u5728 $s$ \u4e2d\u7684 endpos \u96c6\u5408\u5927\u5c0f\u3002\u53ef\u4ee5 SAM+\u7ebf\u6bb5\u6811\u5408\u5e76\uff0c\u8fd9\u91cc\u4f7f\u7528\u7c7b\u4f3c\u4e8e [CF914F](https://www.luogu.com.cn/problem/CF914F) \u7684\u624b\u6cd5\u5229\u7528 `bitset` \u7ef4\u62a4 endpos \u96c6\u5408\u5373\u53ef\u3002\u5373\u5bf9\u4e8e\u5b57\u7b26\u96c6\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5b57\u6bcd\u7528 `bitset` \u7ef4\u62a4\u51fa\u5b83\u5728 $s$ \u4e2d\u7684\u51fa\u73b0\u4f4d\u7f6e\u96c6\u5408\u3002\u5bf9\u4e8e\u4e00\u4e2a\u6a21\u5f0f\u4e32\uff0c\u7ef4\u62a4\u4e00\u4e2a\u521d\u59cb\u5168\u4e3a 1 \u7684 `bitset`\uff0c\u4f9d\u6b21\u5904\u7406\u6a21\u5f0f\u4e32\u4e2d\u7684\u5b57\u7b26\uff0c\u901a\u8fc7\u7b80\u5355\u7684\u5de6\u79fb\u6216\u53f3\u79fb\u51cf\u5c0f\u8fd9\u4e2a `bitset` \u7684\u89c4\u6a21\uff0c\u4ece\u800c\u5f97\u5230\u6700\u540e\u6a21\u5f0f\u4e32\u7684\u6240\u6709 endpos\uff0c\u590d\u6742\u5ea6\u662f $O(\\dfrac {|s|\\sum |t _i| }{ \\omega})$\u3002\n\n\u8fd9\u6837\u6211\u4eec\u83b7\u5f97\u4e86\u4e00\u4e2a\u7528 `bitset` \u7ef4\u62a4\u7684 endpos \u96c6\u5408\uff0c\u90a3\u4e48\u76f4\u63a5\u904d\u5386 `bitset` \u4e2d\u7684\u6bcf\u4e00\u4e2a 1\uff0c\u5bf9\u4e8e\u8fde\u7eed\u7684 $k$ \u4e2a 1 \u4ee3\u8868\u7684\u533a\u95f4\u957f\u5ea6\u6c42\u6700\u5c0f\u503c\u5373\u53ef\uff0c\u904d\u5386\u6bcf\u4e2a 1 \u53ef\u4ee5\u4f7f\u7528\u51fd\u6570 `_Find_first()` \u4ee5\u53ca `_Find_next(x)` \uff0c\u5176\u4f5c\u7528\u5206\u522b\u4e3a\u8fd4\u56de `bitset` \u4e2d\u7684\u7b2c\u4e00\u4e2a 1 \u7684\u4f4d\u7f6e\uff08\u4ee5\u6570\u503c\u8868\u793a\uff09\u4ee5\u53ca\u5f53\u524d\u7684\u4e0b\u4e00\u4e2a 1 \u7684\u4f4d\u7f6e\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728 $O(\\dfrac {n |s|}{ \\omega}+|s|\\sqrt {\\sum |t_i|})$ \u7684\u590d\u6742\u5ea6\u5185\u5b8c\u6210\u7edf\u8ba1\u3002\n\n\u603b\u590d\u6742\u5ea6 $O(\\dfrac {|s|(\\sum |t _i|+n) }{ \\omega} + |s|\\sqrt {\\sum |t_i|})$\u3002\n\n**\u4ee3\u7801**\n\n```cpp\nconst int N=2e5+50;\nint n,m,q,k;\nvector<int> vec;\nbitset<N> bit[26],cur;\nchar s[N],t[N];\nint main(void)\n{\n\tscanf(\"%s\",s+1),n=strlen(s+1),q=read();\n\tfr(i,0,25) bit[i].reset();\n\tfr(i,1,n) bit[s[i]-'a'].flip(i);\n\tfr(i,1,q)\n\t{\n\t\tk=read(),scanf(\"%s\",t+1),m=strlen(t+1),cur.set(),vec.clear();\n\t\tfr(j,1,m) cur&=(bit[t[j]-'a']<<(m-j));\n\t\tfor(int pos=cur._Find_first();pos!=N;pos=cur._Find_next(pos)) vec.emplace_back(pos);\n\t\tint sz=vec.size(),ans=inf;\n\t\tfr(j,k-1,sz-1) ans=min(ans,vec[j]-vec[j-k+1]+m);\n\t\t(ans==inf)?writeln(-1):writeln(ans); \n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1657695326,
        "uid": 104413,
        "name": "L_G_J",
        "ccfLevel": 7,
        "title": "CF963D Frequency of String \u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u6709\u4e2a\u7ed3\u8bba\uff1a$m$\u4e2a\u4e0d\u540c\u7684\uff08\u957f\u5ea6\u4e4b\u548c\u4e3a$n$\u7684\uff09\u4e32\u5728$S(|S| =n)$\u4e2d\u7684$endpos$\u96c6\u5408\u5927\u5c0f\u4e4b\u548c\u4e3a$O(n \\sqrt n)$\n\n\u8bc1\u660e\uff1a\n\n\u5bf9\u4e8e\u6240\u6709\u957f\u5ea6\u90fd\u4e3a$k$\u7684\u4e32\u4ed6\u4eec\u7684$right$\u96c6\u5408\u5927\u5c0f\u4e4b\u548c\u4e3a$O(n)$\u3002\n\u4e32\u4e0d\u76f8\u540c\u4ee3\u8868\u7740\u53ea\u6709$O(\\sqrt n)$\u79cd\u4e0d\u540c\u7684\u957f\u5ea6\u3002\n\n\u5982\u679c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u8be2\u95ee\u7684$m$\u7684$endpos$\u96c6\u5408\uff0c\u53ea\u9700\u8981\u5c06\u8fd9\u4e2a\u96c6\u5408\u6392\u597d\u5e8f\uff0c\u4e2d\u95f4\u8fde\u7eed\u4efb\u610f\u7684$k$\u4e2a\u518d\u5f80\u5de6\u6269\u5c55$|m|$\u7684\u957f\u5ea6\u5373\u4e3a\u6211\u4eec\u53ef\u80fd\u9700\u8981\u7684$t$\uff0c\u6c42$|t|$\u7684\u6700\u5c0f\u503c\u53ef\u4ee5$O(|endpos|)$\u8ba1\u7b97\uff0c\u56e0\u4e3a\u4e0a\u9762\u7684\u7ed3\u8bba\uff0c\u8fd9\u90e8\u5206\u590d\u6742\u5ea6\u4e3a$O(n \\sqrt n)$\n\n\u5173\u4e8e\u6c42\u8fd9$n$\u4e2a\u4e32\u7684$endpos$\u96c6\u5408\u6709\u4e09\u79cd\u601d\u8def\uff1a\n\n1.\u540e\u7f00\u81ea\u52a8\u673a\u4e0a\u7ebf\u6bb5\u6811\u5408\u5e76\uff0c\u4f46\u662f\u8fd9\u6837\u590d\u6742\u5ea6\u4f1a\u53d8\u6210$O(n \\sqrt n \\log n + n \\log n)$\uff0c\u5199$O(n \\log ^2n)$\u7684\u542f\u53d1\u5f0f\u5408\u5e76\u5c31\u8fd8\u662f$O(n \\sqrt n)$\u7684\u3002\n\n2.\u79bb\u7ebf\u5efa\u51fa$m_i$\u7684$AC$\u81ea\u52a8\u673a\uff0c\u62ff$s$\u5728\u81ea\u52a8\u673a\u4e0a\u8dd1\uff0c\u5bf9\u4e8e $s$\u7684\u524d\u7f00\u6240\u5728\u7684\u8282\u70b9\u6211\u4eec\u9700\u8981\u66f4\u65b0\u6240\u6709\u5b83\u7684\u540e\u7f00\u7684$m$\u7684$right$\u96c6\u5408\uff0c\u65b0\u5f00\u4e00\u4e2a\u6570\u7ec4$fa$\u8868\u793a\u6cbf\u7740$fail$\u94fe\u8dd1\u4e0b\u4e00\u4e2a\u662f$m$\u4e2d\u7684\u4e00\u4e2a\u7684\u8282\u70b9\uff0c\u56e0\u4e3a$right$\u96c6\u5408\u5927\u5c0f\u662f$O(n \\sqrt n)$\uff0c\u6bcf\u6b21\u66b4\u529b\u722c$fa$\u4e5f\u662f$O(n \\sqrt n)$\u7684\u3002\n\n3.[\u4f17\u6240\u5468\u77e5\uff0c$bitset$\u53ef\u4ee5\u5728$O(\\frac{ST}{32})$\u7684\u590d\u6742\u5ea6\u5185\u8ba1\u7b97\u51fa$T$\u5728$S$\u4e2d\u51fa\u73b0\u7684$endpos$\u96c6\u5408\u3002](https://www.luogu.com.cn/problem/CF914F)\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define maxn 100005\n#define rep(i,j,k) for(int i=(j),LIM=(k);i<=LIM;i++)\nusing namespace std;\n\nchar s[maxn],m[maxn];\nint n,q,K;\nbitset<maxn>C[26];\n\nint main(){\n\tscanf(\"%s\",s);\n\tn = strlen(s);\n\trep(i,0,n-1) C[s[i] - 'a'][i] = 1;\n\tscanf(\"%d\",&q);\n\tfor(;q--;){\n\t\tscanf(\"%d%s\",&K,m);\n\t\tint L = strlen(m);\n\t\tstatic bitset<maxn>ans;\n\t\tans.set();\n\t\trep(i,0,L-1) ans &= C[m[i] - 'a'] >> i;\n\t\tvector<int>a;\n\t\tfor(int i=ans._Find_first();i!=ans.size();i=ans._Find_next(i))\n\t\t\ta.push_back(i);\n\t\tif(a.size() < K) puts(\"-1\");\n\t\telse{\n\t\t\tint ret = 0x3f3f3f3f;\n\t\t\trep(i,K-1,a.size()-1) ret = min(ret , a[i] - a[i-K+1] + L); \n\t\t\tprintf(\"%d\\n\",ret);\n\t\t}\n\t}\n}\n```\n\n",
        "postTime": 1594086177,
        "uid": 30037,
        "name": "Freopen",
        "ccfLevel": 0,
        "title": "\u5982\u4f55\u4ee5600B\u4ee3\u7801ACCF963D(\u8be6\u7ec6\u63ed\u79d8)"
    },
    {
        "content": "## $\\text{CF963D}$\n\n### \u601d\u8def\uff1a\n\n\u591a\u6a21\u5f0f\u5339\u914d\uff0c\u770b\u5230\u8fd9\u4e2a\u5e94\u8be5\u5148\u60f3\u4e00\u60f3\u5355\u6a21\u5f0f\u600e\u4e48\u505a\u3002\n\n$\\text{KMP}$ \u7684\u8fc7\u7a0b\u4e2d\uff0c\u8bb0\u5f55\u4e00\u4e0b\u6bcf\u4e00\u6b21\u51fa\u73b0\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u7b2c $x$ \u6b21\u51fa\u73b0\u7684\u65f6\u5019\uff0c\u5047\u8bbe\u672b\u5c3e\u4f4d\u7f6e\u4e3a $i$\uff0c\u90a3\u4e48\u7b54\u6848\u5411 $i-pos[x-k]+1$ \u53d6 $\\text{min}$ \uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u8ba9\u5b50\u4e32\u957f\u5ea6\u5c3d\u53ef\u80fd\u5c0f\uff0c\u6240\u4ee5\u4e00\u5b9a\u8ba9\u5b83\u51fa\u73b0\u7684\u6b21\u6570\u6700\u5c0f\u3002\n\n\u8003\u8651\u62d3\u5c55\u5230\u591a\u6a21\u5f0f\u7684\u60c5\u51b5\uff0c\u5728\u5df2\u7ecf\u5efa\u7acb\u7684 $AC$ \u81ea\u52a8\u673a\u4e0a\u8dd1\uff0c\u8dd1\u5230\u4e00\u4e2a\u8282\u70b9\u5219\u68c0\u67e5\u54ea\u4e9b\u4e32\u5df2\u7ecf\u51fa\u73b0\u8fc7\u4e86\uff0c\u66b4\u529b\u8df3 $fail$ \u6811\uff0c\u50cf\u5355\u6a21\u5f0f\u5339\u914d\u4e00\u6837\u5904\u7406\u7b54\u6848 \u3002\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f $O(n^2)$ \u7684\uff0c\u56e0\u4e3a $fail$ \u6811\u7684\u6811\u9ad8\u662f $O(n)$ \u7684\u3002\n\n\u6211\u4eec\u5e0c\u671b\u964d\u4f4e $fail$ \u6811\u7684\u6811\u9ad8\u3002\n\n$fail$ \u6811\u6811\u9ad8\u4e25\u683c\u5c0f\u4e8e\u6700\u957f\u4e32\u7684\u957f\u5ea6\u3002\u56e0\u4e3a\u4fdd\u8bc1\u4e86\u603b\u957f\u5ea6\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5e94\u8be5\u8003\u8651\u8fdb\u884c\u6839\u53f7\u5206\u6cbb\u3002\n\n\u5bf9\u4e8e\u8be2\u95ee\u957f\u5ea6\u5927\u4e8e $\\sqrt n$ \u7684 $\\sqrt{n}$ \u4e2a\u4e32\uff0c\u6211\u4eec\u66b4\u529b\u8fdb\u884c\u5355\u6a21\u5f0f\u5339\u914d\uff0c\u590d\u6742\u5ea6 $O(n * \\sqrt{n})$\u3002\n\n\u5bf9\u4e8e\u5176\u5b83\u7684\u4e32\uff0c\u6211\u4eec\u5c06\u5b83\u4eec\u6254\u8fdb $\\text{AC}$ \u81ea\u52a8\u673a\u91cc\u66b4\u529b\u8dd1\u5c31\u53ef\u4ee5\u4e86\uff0c\u56e0\u4e3a\u6811\u9ad8\u4e0d\u8d85\u8fc7 $\\sqrt{n}$ \u6240\u4ee5\u6bcf\u4e00\u6b21\u8bbf\u95ee\u7684\u590d\u6742\u5ea6\u662f $O(\\sqrt{n})$ \u7684\uff0c\u603b\u590d\u6742\u5ea6 $O(n * \\sqrt{n})$ \u3002\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n\u4f7f\u7528 $\\text{vector}$ \u8bb0\u5f55\u6bcf\u4e2a\u4e32\u7684\u51fa\u73b0\u4f4d\u7f6e\uff0c\u7a7a\u95f4\u662f $O(n * \\sqrt{n})$ \u7684\uff0c\u6ca1\u6709\u95ee\u9898\u3002\n\n\u6ce8\u610f\u9898\u76ee\u4fdd\u8bc1\u4e86\u4e0d\u5b58\u5728\u76f8\u540c\u7684\u4e32\uff0c\u6240\u4ee5\u6ca1\u5fc5\u8981\u7279\u6b8a\u5904\u7406\u3002**AC\u81ea\u52a8\u673a\u7684\u9898\u76ee\u5f80\u5f80\u9700\u8981\u7279\u6b8a\u5904\u7406\u76f8\u540c\u7684\u4e32\u3002**\n\n### \u4ee3\u7801\u5b9e\u73b0\u548c\u7ec6\u8282\n\n\u8fd9\u79cd\u5199\u6cd5\u7684\u4ee3\u7801\u76f8\u5f53\u7b80\u6d01\u3002\n\n\u5176\u5b9e\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\uff0c\u770b\u4ee3\u7801\u5427\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define y1 y3647\n#define LL long long\n#define next nxt\nusing namespace std;\ninline void read(int &x)\n{\n\tx=0;int f=1;char ch=getchar();\n\twhile((ch<'0'||ch>'9')&&ch!='-')ch=getchar();\n\tif(ch=='-'){f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\tx*=f;\n}\nint i,j,k,m,n,s,t,l,cnt,now;\nconst int N=1e5+10,P=300;\nint son[N][26],fail[N],len[N],ans[N],rak[N],next[N],le[N];\nint op[N],pos[N];\nchar ch[N],c[N];\nqueue<int> q;\nvector<int> lst[N];\nvoid add(int x,int u)\n{\n\tif(x==l+1)\n\t{\n\t\trak[u]=i;\n\t\treturn;\n\t}\n\tif(son[u][ch[x]-'a']==0)\n\tson[u][ch[x]-'a']=++t;\n\tadd(x+1,son[u][ch[x]-'a']);\n}\nvoid build()\n{\n\tfor(i=0;i<26;i++)\n\tif(son[0][i])\n\tq.push(son[0][i]);\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();q.pop();\n\t\tfor(i=0;i<26;i++)\n\t\tif(son[u][i])\n\t\tfail[son[u][i]]=son[fail[u]][i],q.push(son[u][i]);\n\t\telse\n\t\tson[u][i]=son[fail[u]][i];\n\t}\n}\nsigned main()\n{\n\t//freopen(\".in\",\"r\",stdin);\n\t//freopen(\".out\",\"w\",stdout);\n\t//freopen(\".ans\",\"w\",stdout);\n\tmemset(ans,1,sizeof(ans));\n\tscanf(\"%s\",c+1);\n\tn=strlen(c+1);\n\tread(m);\n\tfor(i=1;i<=m;i++)\n\t{\t\n\t\tread(op[i]);\n\t\tscanf(\"%s\",ch+1);\n\t\tle[i]=l=strlen(ch+1);\n\t\tif(l<P)\n\t\tadd(1,0);\n\t\telse\n\t\t{\n\t\t\tmemset(next,0,sizeof(next));//\u8bb0\u5f97\u6e05\u7a7a\n\t\t\tk=-1,next[0]=-1;\n\t\t\tfor(j=1;j<=l;j++)\n\t\t\t{\n\t\t\t\twhile(k!=-1&&ch[k+1]!=ch[j])\n\t\t\t\tk=next[k];\n\t\t\t\tk++;\n\t\t\t\tnext[j]=k;\n\t\t\t}\n\t\t\tcnt=k=0;\n\t\t\tfor(j=1;j<=n;j++)\n\t\t\t{\n\t\t\t\twhile(k!=-1&&ch[k+1]!=c[j])\n\t\t\t\tk=next[k];\n\t\t\t\tk++;\n\t\t\t\tif(k==l)\n\t\t\t\t{\n\t\t\t\t\tpos[++cnt]=j-l+1;\n\t\t\t\t\tif(cnt>=op[i])\n\t\t\t\t\tans[i]=min(ans[i],j-pos[cnt-op[i]+1]+1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tbuild(),now=0;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tnow=son[now][c[i]-'a'];\n\t\tint u=now;\n\t\twhile(u)\n\t\t{\n\t\t\tif(rak[u])\n\t\t\t{\n\t\t\t\tint to=rak[u];//\u4f60\u9700\u8981\u7684\u5e76\u4e0d\u662f\u5f53\u524d\u8282\u70b9\u7684\u6807\u53f7\uff0c\u800c\u662f\u5f53\u524d\u8282\u70b9\u5230\u5e95\u662f\u54ea\u4e2a\u8be2\u95ee\n\t\t\t\tlst[to].push_back(i-le[to]+1);\n\t\t\t\tif(lst[to].size()>=op[to])\n\t\t\t\tans[to]=min(ans[to],i-lst[to][lst[to].size()-op[to]]+1);\n\t\t\t}\n\t\t\tu=fail[u];\n\t\t}\n\t}\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tif(ans[i]<1e6)//-1\n\t\tprintf(\"%d\\n\",ans[i]);\n\t\telse\n\t\tputs(\"-1\");\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1619153807,
        "uid": 177535,
        "name": "CDFLS_mao_zx",
        "ccfLevel": 7,
        "title": "\u3010\u9898\u89e3\u3011CF963D"
    },
    {
        "content": "## \u9898\u89e3\n\n\uff08\u6ce8\uff1a\u6587\u4e2d\u9ed8\u8ba4 $|s|,n,\\sum|m_i|$ \u4e3a\u4e00\u4e2a\u91cf\u7ea7\uff0c\u5747\u8868\u793a\u4e3a $n$\uff09\n\n\u9996\u5148\u8003\u8651\u5982\u679c\u53ea\u6709\u4e00\u6b21\u8be2\u95ee\u600e\u4e48\u505a\u3002\n\n\u53ef\u4ee5\u5728 $s$ \u4e32\u4e2d\u627e\u5230\u8fd9\u4e00\u6b21\u8be2\u95ee\u7684\u4e32\u7684\u82e5\u5e72\u51fa\u73b0\u4f4d\u7f6e\uff0c\u6392\u5e8f\u4e4b\u540e\u7b54\u6848\u5373\u4e3a\u6240\u6709\u8fde\u7eed $k$ \u4e2a\u4f4d\u7f6e\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002\n\n\u6709\u4e00\u4e2a\u7ed3\u8bba\uff1a\u5728\u8fd9\u9053\u9898\u5f53\u4e2d\u6240\u6709\u8be2\u95ee\u51fa\u73b0\u4f4d\u7f6e\u7684\u6570\u91cf\u603b\u548c\u4e3a $\\mathcal O(n\\sqrt{n})$ \u91cf\u7ea7\u3002\n\n\u8bc1\u660e\uff1a\u8003\u8651\u4f7f\u7528\u6839\u53f7\u5206\u6cbb\u7684\u601d\u60f3\u3002\n\n* \u5f53\u8be2\u95ee\u7684\u5b57\u7b26\u4e32\u957f\u5ea6 $|m_i| \\le \\sqrt{n}$ \u65f6\uff0c\u8003\u8651\u6bcf\u4e00\u4e2a\u8be2\u95ee\u7684\u5b57\u7b26\u4e32\u5339\u914d\u4e0a\u7684\u4f4d\u7f6e\u4e00\u5b9a\u662f $s$ \u7684\u67d0\u4e2a\u524d\u7f00\u7684\u957f\u5ea6\u4e3a $|m_i|$ \u7684\u540e\u7f00\u3002\u6574\u4f53\u6765\u770b\uff0c\u4e00\u5171\u6709 $n$ \u4e2a\u524d\u7f00\uff0c\u6bcf\u4e2a\u524d\u7f00\u7684\u540e\u7f00\u4e2a\u6570\u6700\u591a\u4e3a $\\sqrt{n}$ \u4e2a\uff08\u56e0\u4e3a $|m_i| \\le \\sqrt{n}$\uff09\uff0c\u6240\u4ee5\u4e00\u5171\u5339\u914d\u4e0a\u7684\u4f4d\u7f6e\u5171\u6709 $\\mathcal O(n\\sqrt{n})$ \u4e2a\u3002\n\n* \u5f53\u8be2\u95ee\u7684\u5b57\u7b26\u4e32\u957f\u5ea6 $|m_i| > \\sqrt{n}$ \u65f6\uff0c\u56e0\u4e3a\u6240\u6709\u8be2\u95ee\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\u603b\u548c\u4e3a $n$\uff0c\u6240\u4ee5\u4e00\u5171\u6700\u591a\u4f1a\u6709 $\\mathcal O(\\sqrt{n})$ \u4e2a\u8fd9\u6837\u7684\u4e32\uff0c\u6bcf\u4e2a\u4e32\u6700\u5dee\u5339\u914d $\\mathcal O(n)$ \u6b21\uff0c\u4e00\u5171\u5339\u914d\u4e0a\u7684\u4f4d\u7f6e\u4e5f\u53ea\u6709 $\\mathcal O(n\\sqrt{n})$ \u4e2a\u3002\n\n\u90a3\u4e48\u6b64\u65f6\u5c31\u6709\u4e86\u4e00\u4e2a\u6839\u53f7\u5206\u6cbb\u7684\u65b9\u6cd5\uff1a\n\n* \u5bf9\u4e8e\u6bcf\u4e00\u4e2a $|m_i| > \\sqrt{n}$ \u7684\u67e5\u8be2\u66b4\u529b\u7528\u54c8\u5e0c\u5339\u914d\u6c42\u51fa\u7b54\u6848\u3002\n\n* \u5bf9\u4e8e\u6240\u6709 $|m_i| \\le \\sqrt{n}$ \u7684\u5b57\u7b26\u4e32\u6784\u5efa ACAM\uff08AC \u81ea\u52a8\u673a\uff09\uff0c\u56e0\u4e3a $|m_i| \\le \\sqrt{n}$\uff0c\u6240\u4ee5\u6811\u9ad8 $\\le \\sqrt{n}$\uff0c\u6bcf\u4e00\u6b21\u8df3 fail \u7684\u65f6\u5019\u6700\u591a\u4f1a\u8df3 $\\mathcal O(\\sqrt{n})$ \u6b21\uff0c\u66b4\u529b\u8df3\u5373\u53ef\u3002\n\n\u4f46\u662f\u53ef\u4ee5\u53d1\u73b0\u8fd9\u6837\u5199\u592a\u9ebb\u70e6\u4e86\uff0c\u6709\u6ca1\u6709\u597d\u5199\u7684\u505a\u6cd5\u5462\uff1f\n\n\u5982\u679c\u6211\u4eec\u5bf9\u6240\u6709\u4e32\u90fd\u5efa ACAM\uff0c\u4f46\u662f\u6bcf\u4e00\u6b21\u8df3 fail \u90fd\u4f1a\u6070\u597d\u66f4\u65b0\u7b54\u6848\uff0c\u5219\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u4f1a\u964d\u4e3a\u6240\u6709\u8be2\u95ee\u51fa\u73b0\u4f4d\u7f6e\u7684\u6570\u91cf\u603b\u548c $\\mathcal O(n\\sqrt{n})$\u3002\n\n\u8003\u8651\u5728\u8df3 fail \u7684\u65f6\u5019\u4e0b\u624b\u811a\uff1a\u6211\u4eec\u5728\u5efa\u6811\u7684\u65f6\u5019\u8bb0\u5f55\u4e00\u4e2a $lst$ \u6570\u7ec4\uff0c$lst_i$ \u8868\u793a\u8df3 fail \u7684\u65f6\u5019\u5728\u5411\u6839\u7684\u8def\u5f84\u4e0a\u7b2c\u4e00\u6b21\u9047\u5230\u9700\u8981\u66f4\u65b0\u5b57\u7b26\u4e32\u7684\u5730\u65b9\u3002\u5982\u679c\u6c42\u51fa\u6765\u4e86\u8fd9\u4e2a\u6570\u7ec4\uff0c\u5219\u6bcf\u4e00\u6b21\u8df3 fail \u7684\u65f6\u5019\u5c31\u4e0d\u518d\u662f `j=fail[j]`\uff0c\u800c\u662f `j=lst[j]` \u4e86\u3002\u663e\u7136\u8fd9\u4e2a\u6570\u7ec4\u53ef\u4ee5\u5728\u6c42 fail \u7684\u65f6\u5019\u5c31\u6c42\u51fa\u6765\uff1a\n\n* \u5982\u679c\u5f53\u524d\u6307\u5411\u7684 fail \u7684\u4f4d\u7f6e\u5c31\u6709\u5b57\u7b26\u4e32\uff0c\u9700\u8981\u66f4\u65b0\u7b54\u6848\uff0c\u5219 $lst_i = fail_i$\u3002\n\n* \u5982\u679c\u5f53\u524d\u6307\u5411\u7684 fail \u7684\u4f4d\u7f6e\u6ca1\u6709\u5b57\u7b26\u4e32\uff0c\u5219 $lst_i=lst_{fail_i}$\u3002\n\n\u6c42\u51fa\u6765\u8fd9\u4e2a $lst$ \u6570\u7ec4\u540e\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4fbf\u964d\u4e0b\u6765\u4e86\u3002\n\n\u5177\u4f53\u7ec6\u8282\u53c2\u8003\u4ee3\u7801\u3002\n\n## \u53c2\u8003\u4ee3\u7801\n\n```cpp\n// \u4ee5\u4e0b\u662f\u5199\u4ee3\u7801\u524d\u5199\u7684\u6ce8\u91ca\uff0c\u53ef\u4ee5\u53c2\u8003\n// \u8003\u8651\u5355\u6b21\u8be2\u95ee\uff0c\u53ef\u4ee5\u627e\u5230\u67e5\u8be2\u7684\u5b57\u7b26\u4e32\u5728\u539f\u4e32\u7684\u51e0\u4e2a\u4f4d\u7f6e\uff0c\u6392\u5e8f\u540e\u7b54\u6848\u5373\u4e3a\u8fde\u7eed\u7684 k \u4e2a\u4f4d\u7f6e\u7684\u53f3-\u5de6\u6700\u5c0f\n// \u53e3\u80e1\u53ef\u77e5\uff0c\u82e5\u5e72\u6b21\u8be2\u95ee\u7684\u4f4d\u7f6e\u6570\u91cf\u603b\u548c <=nsqrt(n)\uff0c\u5177\u4f53\u65b9\u6cd5\u53ef\u4ee5\u7528\u6839\u53f7\u5206\u6cbb\u7684\u601d\u60f3\u8bc1\u660e\n// \u8bc1\u660e\uff1a\u5f53\u67e5\u8be2\u7684\u5b57\u7b26\u4e32\u957f\u5ea6 <=sqrt(n) \u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c06\u8fd9\u4e9b\u4e32\u4e00\u8d77\u5339\u914d\u3002\u8fd9\u4e9b\u4e32\u7684\u4f4d\u7f6e\u80af\u5b9a\u662f\u539f\u4e32\u4e00\u4e2a\u524d\u7f00\u7684\u540e\u7f00\n// \u524d\u7f00\u7684\u4e2a\u6570\u6709 n \u4e2a\uff0c\u540e\u7f00\u7684\u4e2a\u6570\u6709 O(sqrt(n)) \u4e2a\uff0c\u53c8\u56e0\u4e3a\u6bcf\u4e2a\u4e32\u4e92\u4e0d\u76f8\u540c\uff0c\u6240\u4ee5\u6700\u5dee\u628a\u524d\u7f00\u7684 O(sqrt(n)) \u4e2a\u540e\u7f00\u5339\u914d\u6ee1\uff0c\u5171\u6709 O(nsqrt(n)) \u4e2a\n// \u5f53\u67e5\u8be2\u7684\u5b57\u7b26\u4e32\u957f\u5ea6 >sqrt(n) \u7684\u65f6\u5019\uff0c\u901a\u8fc7\u67e5\u8be2\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\u603b\u548c\u53ef\u77e5\u8fd9\u6837\u7684\u5b57\u7b26\u4e32 <=sqrt(n) \u4e2a\uff0c\u66b4\u529b\u5bf9\u4e8e\u6bcf\u4e2a\u4e32\u54c8\u5e0c\u6216\u8005 KMP \u5373\u53ef\n// \u4e8e\u662f\u53ef\u4ee5\u4f7f\u7528\u6839\u53f7\u5206\u6cbb\u505a\uff0c<=sqrt(n) \u7684\u5efa ACAM\uff0c>sqrt(n) \u7684\u66b4\u529b\n// \u4f46\u662f\u5982\u679c\u80fd\u5feb\u901f\u627e\u5230\u7b54\u6848\uff0c\u5c31\u4e0d\u9700\u8981\u6839\u53f7\u5206\u6cbb\uff08\u56e0\u4e3a\u7b54\u6848\u603b\u6570\u5df2\u7ecf\u8bc1\u660e\u4e86\u6700\u591a O(nsqrt(n)) \u4e2a\n// \u8003\u8651\u5bf9\u6240\u6709\u67e5\u8be2\u7684\u5b57\u7b26\u4e32\u5efa ACAM\uff0c\u8bb0\u5f55 lst \u8868\u793a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9 fail \u5411\u6839\u7684\u8def\u5f84\u4e0a\u4e0a\u4e00\u6b21\u6709\u5b57\u7b26\u4e32\u7684\u5730\u65b9\u7684\u4f4d\u7f6e\uff0c\u53ef\u4ee5\u5728\u5efa fail \u8fb9\u7684\u65f6\u5019\u6c42\u51fa\n// \u90a3\u4e48\u6bcf\u4e00\u6b21\u8df3\u5c31\u90fd\u80fd\u627e\u5230\u9700\u8981\u66f4\u65b0\u7b54\u6848\u7684\u5730\u65b9\uff0c\u5373\u53ef O(nsqrt(n)) \u5b8c\u6210\n#include<bits/stdc++.h>\nusing namespace std;\n\nint m;\n\nstring s;\n\nstruct query\n{\n\tstring t;\n\tint k;\n} q[100010];\n\nint now=0,son[100010][26],fail[100010],lst[100010],qwz[100010]; // qwz[i] \u8868\u793a\u5f53\u524d\u4f4d\u7f6e\u662f\u54ea\u4e2a\u67e5\u8be2\u7684\u5b57\u7b26\u4e32\uff08\u5982\u679c\u6ca1\u6709\uff0c=0\uff09\n\nvoid insert(string t,int id)\n{\n\tint wz=0;\n\tfor(int i=0; i<t.size(); ++i)\n\t{\n\t\tif(!son[wz][t[i]-'a']) son[wz][t[i]-'a']=++now;\n\t\twz=son[wz][t[i]-'a'];\n\t}\n\tqwz[wz]=id;\n}\n\nqueue<int> qq;\n\nvoid get_fail()\n{\n\tfor(int i=0; i<26; ++i)\n\t{\n\t\tif(son[0][i])\n\t\t{\n\t\t\tqq.push(son[0][i]);\n\t\t\tfail[son[0][i]]=0;\n\t\t}\n\t}\n\twhile(!qq.empty())\n\t{\n\t\tint frn=qq.front(); qq.pop();\n\t\tfor(int i=0; i<26; ++i)\n\t\t{\n\t\t\tint now=son[frn][i];\n\t\t\tif(now)\n\t\t\t{\n\t\t\t\tqq.push(now);\n\t\t\t\tfail[now]=son[fail[frn]][i];\n\t\t\t\tlst[now]=qwz[fail[now]]?fail[now]:lst[fail[now]]; // \u8fd9\u91cc\u662f\u6c42 lst \u7684\u5730\u65b9\uff0c\u5982\u679c qwz[fail[now]]!=0 \u8bf4\u660e\u90a3\u91cc\u9700\u8981\u66f4\u65b0 vector\n\t\t\t}\n\t\t\telse son[frn][i]=son[fail[frn]][i];\n\t\t}\n\t}\n}\n\nvector<int> twz[100010]; // \u8bb0\u5f55\u6bcf\u4e2a\u67e5\u8be2\u7684\u5339\u914d\u4f4d\u7f6e\u53f3\u7aef\u70b9\n\nint main()\n{\n\tcin>>s;\n\tcin>>m;\n\tfor(int i=1; i<=m; ++i)\n\t{\n\t\tcin>>q[i].k>>q[i].t;\n\t\tinsert(q[i].t,i);\n\t}\n\tget_fail();\n\tint wz=0;\n\tfor(int i=0; i<s.size(); ++i)\n\t{\n\t\twz=son[wz][s[i]-'a'];\n\t\tfor(int j=wz; j; j=lst[j])\n\t\t{\n\t\t\tif(qwz[j]) twz[qwz[j]].push_back(i);\n\t\t}\n\t}\n\tfor(int i=1; i<=m; ++i)\n\t{\n\t\tint ans=1e9;\n\t\tfor(int j=0; j<(int)twz[i].size()-q[i].k+1; ++j)\n\t\t{\n\t\t\tans=min(ans,twz[i][j+q[i].k-1]-twz[i][j]+(int)q[i].t.size());\n\t\t}\n\t\tcout<<(ans==1e9?-1:ans)<<'\\n';\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1655118307,
        "uid": 353688,
        "name": "\u738b\u7199\u6587",
        "ccfLevel": 0,
        "title": "CF963D \u9898\u89e3"
    },
    {
        "content": "\u6211\u770b\u5230\u4e86\u6709\u4e00\u7bc7AC\u81ea\u52a8\u673a\u7684\u9898\u89e3\u4e86\n\u4f46\u662f\u5b57\u7b26\u4e32\u9898\u4e0d\u7528SAM\u771f\u7684\u597d\u5417\uff1f\u660e\u660eSAM\u90a3\u4e48\u7b80\u5355\u7684\u8bf4\u3002\n\n\u9996\u5148\uff0c\u4f60\u53ef\u4ee5\u5efa\u51faSAM\uff0c\u5e76\u9884\u5904\u7406\u6bcf\u4e2a\u8282\u70b9\u7684endpos\u96c6\u5408\u3002\n\uff08\u8fd9\u4e2a\u90e8\u5206\u90fd\u662f\u6a21\u677f\uff0c\u5c31\u4e0d\u591a\u8bf4\u4e86\uff09\n\n\u7136\u540e\u628a\u9700\u8981\u7528\u5230\u7684\u5173\u952e\u70b9\u7684endpos\u96c6\u5408\u6392\u5e8f\u3002\n\u8fd9\u91cc\u5173\u952e\u70b9\u6307\u7684\u662f\u5728\u67d0\u4e2a\u8be2\u95ee\u4e2dendpos\u96c6\u5408\u5305\u542b\u90a3\u4e2a\u4e32\u7684\u70b9\u3002\n\n\u6211\u4eec\u77e5\u9053\u9009\u53d6\u7684\u4e00\u6bb5\u5b50\u4e32\u4e00\u5b9a\u662f\u5728endpos\u96c6\u5408\u4e2d\u8fde\u7eed\u7684\u4e00\u6bb5\u3002\u5426\u5219\u957f\u5ea6\u4e0d\u662f\u6700\u4f18\u3002\u56e0\u6b64\u679a\u4e3e\u9009\u53d6\u7684\u6bb5\u7684\u5de6\u7aef\u70b9\u3002\u533a\u95f4\u957f\u5ea6\u4fbf\u662f\u8be2\u95ee\u4e2d\u7ed9\u7684\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u6240\u6709\u533a\u95f4\u7684\u7b54\u6848\u53d6\u4e2amin\u5c31\u597d\u4e86\u3002\n\n\u5f88\u7b80\u5355\u5427\uff0c~~\u6bd4AC\u81ea\u52a8\u673a\u597d\u60f3\u597d\u5199\u591a\u4e86~~\u3002\n\n\n```cpp\n#include <bits/stdc++.h>\n#define inc(i,a,b) for(register int i=a;i<=b;i++)\nusing namespace std;\nclass node{\n\tpublic:\n\tint ch[27],len;\n\tint link;\n}sam[400010];\nint last=1,sizze=1,judge[400010];\nvoid add(int to,int pos){\n\tint cur=++sizze,u=last; judge[cur]=pos;\n\tsam[cur].len=sam[u].len+1;\n\tfor(;u&&!sam[u].ch[to];u=sam[u].link) sam[u].ch[to]=cur;\n\tif(!u) sam[cur].link=1;\n\telse{\n\t\tint q=sam[u].ch[to];\n\t\tif(sam[q].len==sam[u].len+1) sam[cur].link=q;\n\t\telse{\n\t\t\tint neww=++sizze;\n\t\t\tsam[neww]=sam[q];\n\t\t\tsam[neww].len=sam[u].len+1;\n\t\t\tfor(;u&&sam[u].ch[to]==q;u=sam[u].link) sam[u].ch[to]=neww;\n\t\t\tsam[cur].link=neww; sam[q].link=neww;\n\t\t}\n\t}\n\tlast=cur;\n}\nchar s[100010],t[100010];\nint n,q;\nint head[400010],cnt;\nclass littlestar{\n\tpublic:\n\tint to,nxt;\n\tvoid add(int u,int v){\n\t\tto=v; nxt=head[u];\n\t\thead[u]=cnt;\n\t}\n}star[400010];\nint pos[400010],tot;\nvoid dfs(int u){\n\tif(judge[u]) pos[++tot]=judge[u];\n\tfor(int i=head[u];i;i=star[i].nxt){\n\t\tint v=star[i].to;\n\t\tdfs(v);\n\t}\n}\nint main(){\n\tscanf(\"%s\",s+1);\n\tn=strlen(s+1);\n\tinc(i,1,n) add(s[i]-'a',i);\n\tinc(i,2,sizze) star[++cnt].add(sam[i].link,i);\n\tcin>>q;\n\tinc(i,1,q){\n\t\ttot=0;\n\t\tint x; scanf(\"%d\",&x);\n\t\tscanf(\"%s\",t+1);\n\t\tint u=1,m=strlen(t+1),bo=0;\n\t\tinc(j,1,m){\n\t\t\tint to=t[j]-'a';\n\t\t\tu=sam[u].ch[to];\n\t\t\tif(!u){\n\t\t\t\tbo=1; break;\n\t\t\t}\n\t\t}\n\t\tif(bo){\n\t\t\tprintf(\"-1\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tdfs(u);\n\t\tsort(pos+1,pos+1+tot);\n\t\tint ans=INT_MAX;\n\t\tinc(j,x,tot){\n\t\t\tans=min(ans,pos[j]-(pos[j-x+1]-m+1)+1);\n\t\t}\n\t\tif(ans==INT_MAX){\n\t\t\tprintf(\"-1\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n}\n/*\naaaaa\n5\n3 a\n3 aa\n2 aaa\n3 aaaa\n1 aaaaa\n*/\n```\n",
        "postTime": 1594092408,
        "uid": 119189,
        "name": "\u795e\u4e4b\u53f3\u5927\u81e3",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF963D \u3010Frequency of String\u3011"
    }
]