[
    {
        "content": "# \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a01\u5e8f\u5217\uff0c\u6709 $m$ \u79cd\u957f\u5ea6\uff0c\u6bcf\u6b21\u53ef\u4ee5\u8ba9\u4e00\u6bb5\u957f\u5ea6\u4e3a $a_i$ \u7684\u5b57\u4e32\u7ffb\u8f6c\uff0c\u6c42\u8ba9\u5e8f\u5217\u5f52\u96f6\u7684\u6700\u5c11\u6b21\u6570\u3002\n\n# $\\mathcal{Sol:}$\n\n\u7b2c\u4e00\u773c\u770b\u89c1\u8fd9\u9898\u65f6\u4f1a\u611f\u89c9\u65e0\u4ece\u4e0b\u624b\u5bf9\u5427\uff0c\u5176\u5b9e\u4ece\u6570\u636e\u8303\u56f4\u53ef\u4ee5\u7ed9\u4e88\u4e00\u5b9a\u542f\u53d1\u3002\n\n\u53d1\u73b0\u5230 $k \\le 10$ ,\u8fd9\u4e48\u5c0f\u7684\u8303\u56f4\uff0c\u5f88\u660e\u663e\u5c31\u662f\u72b6\u538bdp\u3002\n\n\u7136\u9e45\u72b6\u538bdp\u8ddf\u6b64\u9898\u6709\u4e2a\u534a\u6bdb\u94b1\u7684\u5173\u7cfb\u554a\uff08\u76ee\u524d\uff09\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u8bd5\u7740\u5c06\u95ee\u9898\u8f6c\u5316\u3002\n\n## \u8f6c\u5316:\n\n\u9898\u76ee\u4e2d\u7684\u4fee\u6539\u64cd\u4f5c\u4e3a\u533a\u95f4\u4fee\u6539\uff0c\u8fd9\u5f88\u5bb9\u6613\u8054\u60f3\u5230\u7ebf\u6bb5\u6811\uff0c\u4f46\u662f\u4ed6\u7684\u5e38\u6570\u5927\uff0c\u4e14\u4ee3\u7801\u5b9e\u73b0\u56f0\u96be~~\u83dc\u662f\u539f\u7f6a~~\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528**\u5dee\u5206**\u3002\n\n\u5982\u679c\u4f60\u5bf9\u5dee\u5206\u5e76\u4e0d\u4e86\u89e3\uff0c\u53ef\u4ee5\u81ea\u884cbfs\uff0c\u5176\u4e2d\u6709\u8be6\u7ec6\u7684\u89e3\u91ca\uff0c\u8fd9\u91cc\u4e0d\u518d\u9610\u8ff0\u3002\n\n\u672c\u9898\u4f7f\u7528\u7684\u662f**\u5f02\u6216\u5dee\u5206**\uff0c\u5176\u4ee3\u7801\u4e3a $a_i=a_i\\ xor\\ a_{i+1}\\ \\ (i\\ge 0)$ \u3002 \n\n\u4ee5\u6837\u4f8b1\u4e3a\u4f8b\uff1a\n\n\u539f\u59cb\u5e8f\u5217\uff1a 01110111110 \uff08\u4e3a\u4e86\u65b9\u4fbf\u5728\u5f00\u5934\u5904\u52a0\u4e86\u4e2a0\uff09\n\n\u5dee\u5206\u5e8f\u5217\uff1a 10011000010  \n\n\u624b\u73a9\u4e00\u4e0b\u53ef\u4ee5\u53d1\u73b0\u5728\u539f\u5e8f\u5217\u4e2d\u7ffb\u8f6c $(l,r)$ \u533a\u95f4\u5c31\u7b49\u4e8e\u5728\u5dee\u5206\u5e8f\u5217\u4e2d\u53d6\u53cd $b_{l-1}, b_r$ \u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u5c06\u4fee\u6539\u64cd\u4f5c\u53d8\u4e3a $\\mathcal{O(1)}$ \u7684\u4e86\uff0c\u4e14\u9898\u76ee\u53d8\u4e3a\uff1a\n\n---\n\n\u7ed9\u5b9a\u4e00\u4e2a01\u4e32,\u6bcf\u6b21\u64cd\u4f5c\u4e3a\uff1a\n\n**\u4ece\u7ed9\u5b9a\u7684 $m$ \u79cd\u957f\u5ea6\u4e2d\u9009\u62e9\u4e00\u79cd\uff0c\u9009\u62e9\u5e8f\u5217\u4e0a\u76f8\u8ddd\u8fd9\u4e2a\u957f\u5ea6\u7684\u4e24\u4e2a\u4f4d\u540c\u65f6\u53d6\u53cd\u3002**\n\n\u6c42\u8ba9\u5e8f\u5217\u5f52\u96f6\u7684\u6700\u5c11\u6b21\u6570\u3002\n\n---\n\n\u5230\u8fd9\u91cc\u4e00\u6b65\u65f6\u6211\u4eec\u7ec8\u4e8e\u53ef\u4ee5\u4f7f\u7528\u5173\u4e8e $k$ \u7684\u72b6\u538bdp\u8fa3\uff01\n\n- Q:  Why?\n\n- A:  \u56e0\u4e3a\u5728\u5dee\u5206\u540e\u7684\u5e8f\u5217\u4e2d\u6211\u4eec\u53ea\u5173\u5fc3\u7684\u662f\u5176\u4e2d\u76841\uff0c\u800c\u5176\u4e2d\u6700\u591a\u4e5f\u53ea\u6709 $2\\times k$ \u4e2a1\uff0c\u6240\u4ee5\u5927\u529b\u72b6\u538b\u5373\u53ef\u3002\n\n\n\u6211\u4eec\u8bbe $dp_i$ \u4e3a\u5f53\u524d\u72b6\u6001\u4e3a $i$ \u4e0b\u6240\u9700\u7684\u6700\u5c0f\u6b21\u6570\uff0c$x$ \u548c $y$ \u4e3a\u5f53\u524d\u72b6\u6001\u4e0b\u672a\u88ab\u9009\u8fc7\u7684\u4f4d\uff0c\u90a3\u4e48\u663e\u800c\u6613\u89c1\uff1a\n$$dp_{i | (1<<x) | (1<<y)} = min(dp_{i | (1<<x) | (1<<y)},dp_i + Cost(x,y)) $$\n\n\u5176\u4e2d $Cost(x,y)$ \u5373\u5c06 $x$ \u548c $y$ \u4f4d\u540c\u65f6\u53d8\u4e3a0\u6240\u9700\u7684\u6700\u5c0f\u6b21\u6570\u3002\n\n\u6bcf\u4e00\u6b21\u5faa\u73af\u90fd\u8ba1\u7b97\u4e00\u6b21\u7684\u8bdd\u80af\u5b9a\u4f1aT,\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5**\u9884\u5904\u7406**\u51fa\u8fd9\u4e2a\u6570\u7ec4\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5bf9\u5dee\u5206\u5e8f\u5217\u4e2d1\u7684\u4f4d\u7f6e\u8fdb\u884c\u4e00\u6b21spfa\uff0c\u8fd9\u6837\u7684\u8bdd\u8fd9\u9898\u5c31\u6109\u5feb\u7684\u89e3\u51b3\u8fa3\uff01\n\n# $Code:$\n\n```cpp\n//Code by Licykoc  2020.11.19 \n#include <bits/stdc++.h>\n#define int long long\n#define Get getchar()\ninline void read (int &x){\n\tchar c=Get; int w=1; x=0;\n\twhile (!isdigit(c)) {if (c=='-') w=-1; c=Get;}\n\twhile (isdigit(c)) {x=(x*10)+(c^48),c=Get;};\n\tx*=w;\n}\nusing namespace std;\ntypedef long long ll;\nint n,m,k,x,y,tot=0;\nint a[100001],b[100001];\nint q[200001][2];\n//q[x][0]\u8868\u793a\u7b2cx\u4e2a1\u5728\u6b64\u5e8f\u5217\u4e2d\u7684\u4f4d\u7f6e\uff0cq[x][1]\u8868\u793a\u7b2cx\u4e2a1\u5728\u539f\u5e8f\u5217\u4e2d\u7684\u4e0b\u6807\nint f[201][100001];\nint Q[100001];\nint dp[10000001];\nsigned main(){\n\tread(n); read(m); read(k);\n\tfor (int i=1;i<=m;++i) read(x),a[x]=1;\n\tfor (int i=1;i<=k;++i) read(b[i]);\n\tfor (int i=0;i<=n;++i) a[i]^=a[i+1]; //\u5dee\u5206\u5e8f\u5217\n\tfor (int i=0;i<=n;++i) if (a[i]) q[tot][0]=tot,q[tot][1]=i,tot++; //\u5c06\u6240\u67091\u7684\u4f4d\u7f6e\u4fdd\u5b58\u5728q\u6570\u7ec4\u4e2d\n\t\n   //---------------------SPFA & START-----------------------\n\t\n\tfor (int i=0;i<tot;++i){ \n\t    //\u8fd9\u91cc\u7684spfa\u6bcf\u6b21\u8f6c\u79fb\u65f6\u7684\u6743\u503c\u4e3a1\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u8bb0\u5f55\u8be5\u70b9\u662f\u5426\u5df2\u5728\u961f\u5217\u5185 \n\t\tfor (int j=0;j<=n;++j) f[q[i][0]][j]=0x7FFFFFFF;\n\t\tf[q[i][0]][q[i][1]]=0;\n\t\tint l=1,r=1;\n\t\tQ[1]=q[i][1];\n\t\twhile (l<=r) {\n\t\t\tint x=Q[l];\n\t\t\tfor (int j=1;j<=k;++j) {\n\t\t\t\tif (x-b[j]>=0&&f[q[i][0]][x]+1<f[q[i][0]][x-b[j]]) {\n\t\t\t\t\tf[q[i][0]][x-b[j]]=f[q[i][0]][x]+1;\n\t\t\t\t\tr++; Q[r]=x-b[j];\n\t\t\t\t}\n\t\t\t\tif (x+b[j]<=n&&f[q[i][0]][x]+1<f[q[i][0]][x+b[j]]) {\n\t\t\t\t\tf[q[i][0]][x+b[j]]=f[q[i][0]][x]+1;\n\t\t\t\t\tr++; Q[r]=x+b[j];\n\t\t\t\t}\n\t\t\t}\n\t\t\tl++;\n\t\t}\n\t}\n\t\n\t//---------------------SPFA & END-----------------------\n    \n\tmemset(dp,127,sizeof(dp));\n\tdp[0]=0;\n\tint Mx=(1ll<<tot)-1;\n\tfor (int i=0;i<=Mx;++i) {\n\t\tx=0; \n\t\twhile ((i>>x)&1ll) x++;\n\t\tfor (y=x+1;y<tot;++y) if (!((i>>y)&1ll))  \n\t\t\tdp[i|(1ll<<x)|(1ll<<y)]=min(dp[i|(1ll<<x)|(1ll<<y)],dp[i]+f[x][q[y][1]]);\n\t}\n\t\n\tprintf(\"%lld\\n\",dp[Mx]>1e9?-1:dp[Mx]); //-1\u5343\u4e07\u4e0d\u8981\u5fd8\u8fa3\uff01 \n}\n```",
        "postTime": 1605790412,
        "uid": 175456,
        "name": "Licykoc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF79D \u3010Password\u3011"
    },
    {
        "content": "51nod\u4e0a\u67d0\u9898\u7684\u5f31\u5316\u7248\u4e2d\u7684\u5f31\u5316\u7248\n\n\u539f\u9898\u9700\u8981\u8dd1\u4e00\u822c\u56fe\u6700\u5c0f\u6743\u5339\u914d\u8fd9\u79cd\u5341\u5206\u4e0d\u53ef\u5199\u7684\u4e1c\u897f\u2026\u2026\n\n\u4e0d\u8fc7\u8fd9\u9898\u56e0\u4e3a\u5c3120\u4e2a\u70b9\uff0c\u5927\u529b\u72b6\u538bdp\u5373\u53ef\u901a\u8fc7\u672c\u9898\n_________________________\n\n\u597d\u4e86\u9898\u76ee\u610f\u601d\u7b80\u5355\u660e\u4e86\u2026\u2026\u7ed9\u5b9a\u4e00\u4e2a\u521d\u59cb\u72b6\u6001\u51680\u7684\u4e32\u7136\u540e\u53ef\u4ee5\u5bf9\u957f\u5ea6\u4e3a\u4e00\u4e9b\u7279\u5b9a\u503c\u7684\u533a\u95f4\u8fdb\u884c01\u7ffb\u8f6c\u64cd\u4f5c\uff0c\u6c42\u5c06\u8fd9\u4e2a\u4e32\u53d8\u6210\u7ed9\u5b9a\u7684\u4e32\u81f3\u5c11\u9700\u8981\u51e0\u6b21\u64cd\u4f5c\n\n\u7279\u6b8a\u9650\u5236\u662f\u76ee\u6807\u4e32\u5f53\u4e2d\u6700\u591a\u670910\u4e2a1\n\n# \u672c\u9898\u9898\u89e3\n\n\u90a3\u4e48\u6211\u4eec\u6765\u770b\uff0c\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e00\u901a\u64cd\u4f5c\u5c06\u539f\u4e32\u7ffb\u8f6c\u6210\u76ee\u6807\u4e32\uff0c\u90a3\u4e48\u6211\u4eec\u5c06\u8fd9\u4e9b\u64cd\u4f5c\u5168\u90e8\u5012\u8fc7\u6765\u505a\u5c31\u4f1a\u628a\u76ee\u6807\u4e32\u7ffb\u8f6c\u6210\u4e00\u4e2a\u51680\u4e32\n\n\u6240\u4ee5\u95ee\u9898\u53d8\u6210\u4e86\u5982\u4f55\u4f7f\u7528\u6700\u5c11\u7684\u64cd\u4f5c\u6b21\u6570\u5c06\u76ee\u6807\u4e32\u53d8\u6210\u51680\u7684\n\n\u90a3\u4e48\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u552f\u4e00\u53ef\u4ee5\u505a\u5230\u7684\u64cd\u4f5c\u5c31\u662f\u533a\u95f4\u53d6\u53cd\u8fd9\u4e2a\u64cd\u4f5c\n\n\u533a\u95f4\u53d6\u53cd\u662f\u7b49\u4e8e\u533a\u95f4\u5f02\u6216\u4e0a1\u7684\u800c\u533a\u95f4\u5f02\u6216\u4e0a1\u76f8\u5f53\u4e8e\u5728\u6a212\u5269\u4f59\u7cfb\u4e0b\u8fdb\u884c\u533a\u95f4+\n\n\u90a3\u4e48\u6211\u4eec\u7684\u76ee\u6807\u662f\u901a\u8fc7\u4e00\u7cfb\u5217\u533a\u95f4+\u5c06\u8fd9\u4e2a\u76ee\u6807\u4e32\u6e050\n\n\u533a\u95f4\u52a0\u592a\u9ebb\u70e6\u4e86\uff0c\u6211\u4eec\u8003\u8651\u628a\u533a\u95f4\u52a0\u53d8\u6210\u5355\u70b9\u4fee\u6539\uff0c\u53d1\u73b0\u597d\u50cf\u7684\u786e\u53ef\u529e\u5230\u2026\u2026\uff0c\u4f17\u6240\u5468\u77e5\uff0c\u533a\u95f4\u52a0\u662f\u7b49\u4e8e\u5728\u5dee\u5206\u6570\u7ec4\u4e0a\u8fdb\u884c\u4e24\u6b21\u5355\u70b9\u4fee\u6539\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u76ee\u6807\u4e32\u5728\u6a212\u5269\u4f59\u7cfb\u4e0b\u5dee\u5206\u4e00\u4e0b\uff0c\u90a3\u4e48\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u6211\u4eec\u53ef\u4ee5\u7ed9\u95f4\u8ddd\u4e3a\u4e00\u4e9b\u7279\u5b9a\u503c\u7684\u4e24\u4e2a\u70b9\u8fdb\u884c\u7ffb\u8f6c\uff0c\u6c42\u6700\u5c0f\u7684\u7ffb\u8f6c\u6b21\u6570\u4f7f\u5f97\u6240\u6709\u70b9\u90fd\u53d8\u62100\uff0c(\u56e0\u4e3a\u5dee\u5206\u51680\u7684\u6570\u7ec4\u4e00\u5b9a\u662f\u51680\u6570\u7ec4\uff0c\u5e76\u4e14\u51680\u6570\u7ec4\u7684\u5dee\u5206\u6570\u7ec4\u90fd\u662f\u5168\u4e3a0\u7684)\n\n\u90a3\u4e48\u8fd9\u4e2a\u95ee\u9898\u8be5\u600e\u4e48\u6c42\u89e3\u5462\uff1f\n\n\u8fd9\u5c31\u662f\u4e00\u4e2a\u7ecf\u5178\u5957\u8def\u4e86\uff0c\u901a\u8fc7\u4e00\u7cfb\u5217\u9a9a\u64cd\u4f5c\u628a\u8fd9\u4e2a\u95ee\u9898\u8f6c\u5316\u6210\u4e00\u822c\u56fe\u7684\u6700\u5c0f\u6743\u5339\u914d\u95ee\u9898\n\n\u6211\u4eec\u8fdb\u884c\u8fd9\u6837\u4e00\u4e2a\u8f6c\u5316\uff0c\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e00\u6b21\u64cd\u4f5c\u5c06$(i,j)$\u7ffb\u8f6c\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u5728$(i,j)$\u4e4b\u95f4\u8fde\u4e0a\u4e00\u6761\u8fb9\uff0c\u90a3\u4e48**\u540c\u65f6\u7ffb\u8f6cu,v\u800c\u4e0d\u5f71\u54cd\u5176\u4ed6\u70b9\u7684\u72b6\u6001**\u8fd9\u4e2a\u64cd\u4f5c\u7684\u4ee3\u4ef7\u5c31\u662f$(u,v)$\u4e4b\u95f4\u7684\u6700\u77ed\u8def\n\n\u8bc1\u660e\u975e\u5e38\u7b80\u5355\uff0c\u9996\u5148\u7531\u4e8e\u6700\u77ed\u8def\u5f84\u4e00\u5b9a\u662f\u4e00\u4e2a\u7b80\u5355\u8def\u5f84\uff0c\u6240\u4ee5\u9664\u4e86u\uff0cv\u4e4b\u5916\u8fd9\u6761\u8def\u5f84\u4e0a\u7684\u70b9\u6070\u597d\u6709\u4e24\u6761\u6700\u77ed\u8def\u4e0a\u7684\u8fb9\u548c\u5b83\u76f8\u8fde\uff0c\u6362\u53e5\u8bdd\u8bf4\u8fd9\u4e2a\u70b9\u88ab\u7ffb\u8f6c\u4e86\u4e24\u6b21\uff0c\u72b6\u6001\u81ea\u7136\u662f\u4e0d\u53d8\u7684\uff0c\u800cu\u548cv\u6070\u597d\u6709\u4e00\u6761\u8fb9\u548c\u4ed6\u4eec\u76f8\u8fde\uff0c\u6240\u4ee5\u6070\u597d\u88ab\u7ffb\u8f6c\u4e86\n\n\u90a3\u4e48\u73b0\u5728\u6211\u4eec\u5c31\u53ef\u4ee5\u5904\u7406\u51fa\u6240\u67091\u4e24\u4e24\u95f4\u7684\u6700\u77ed\u8def\uff0c\u8fd9\u9898\u7531\u4e8e\u6700\u591a20\u4e2a1\u5e76\u4e14\u8fb9\u6743\u5168\u90e8\u662f\u5355\u4f4d\u8fb9\u6743\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5927\u529b\u4ece\u6bcf\u4e2a\u8d77\u70b9\u5f00\u59cbbfs\u4e00\u53d1\u6c42\u51fa\u6240\u67091\u4e4b\u95f4\u7684\u6700\u77ed\u8def\n\n\u8bbe\u7b2ci\u4e2a1\u548c\u7b2cj\u4e2a1\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u4e3a$dis_{i,j}$\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u6700\u4f18\u7684\u65b9\u6848\u4e00\u5b9a\u662f\u628a\u8fd9\u4e9b1\u4e00\u5bf9\u4e00\u5bf9\u7684\u7ffb\u8f6c\u7136\u540e\u6d88\u6389(\u56e0\u4e3a\u501f\u52a9\u522b\u76841\u4f5c\u4e3a\u4e00\u4e2a\u8df3\u677f\u8fdb\u884c\u7ffb\u8f6c\u8fd9\u79cd\u60c5\u51b5\u5df2\u7ecf\u5728\u6700\u77ed\u8def\u4e2d\u88ab\u8003\u8651\u8fc7\u4e86)\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u5728$i,j$\u4e4b\u95f4\u8fde\u4e00\u6761\u957f\u5ea6\u4e3a$dis_{i,j}$\u7684\u8fb9\uff0c\u6765\u5efa\u4e00\u5f20\u65b0\u56fe\u7684\u8bdd\uff0c\u6211\u4eec\u7684\u6700\u5c0f\u4ee3\u4ef7\u5c31\u662f\u8fd9\u5f20\u56fe\u7684**\u6700\u5c0f\u6743\u5b8c\u7f8e\u5339\u914d**\uff0c\u4e4b\u6240\u4ee5\u5f3a\u8c03\u662f\u5b8c\u7f8e\u5339\u914d\u662f\u56e0\u4e3a\u5982\u679c\u8fd9\u5f20\u56fe\u4e0d\u5b58\u5728\u5b8c\u7f8e\u5339\u914d\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u65e0\u6cd5\u901a\u8fc7\u7ffb\u8f6c\u4e00\u5806\u70b9\u5bf9\u7684\u65b9\u5f0f\u6765\u5b8c\u6210\u5c06\u6240\u67091\u6d88\u6389\u4e86(\u6bd4\u5982\u8bf4\u5947\u6570\u4e2a\u70b9\u7684\u8bdd\u5c31\u4e00\u5b9a\u6ca1\u6709\u5b8c\u7f8e\u5339\u914d\u4e86)\n\n\u5f53\u7136\u8fd9\u9053\u9898\u662f\u6ca1\u5fc5\u8981\u53bb\u5199\u9b3c\u755c\u7684\u4e00\u822c\u56fe\u6700\u5c0f\u6743\u5b8c\u7f8e\u5339\u914d\u4e86\uff0c\u56e0\u4e3a\u6211\u4eec\u53d1\u73b0\u6700\u591a\u670920\u4e2a1\n\n\u8fd9\u5c31\u5341\u5206nice\u4e86\uff0c\u8bbe$dp_{S}$\u8868\u793a\u5c06S\u8fd9\u4e2a\u96c6\u5408\u6d88\u62100\u7684\u6700\u5c0f\u6d88\u53bb\u6b65\u6570\uff0c\u5927\u529b\u72b6\u538bdp\u8fdb\u884c\u8f6c\u79fb\u5373\u53ef\n\n\u6700\u540e\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u7ef4\u62a4\u524d\u5411\u5dee\u5206\u4e5f\u597d\u540e\u5411\u5dee\u5206\u4e5f\u7f62\uff0c\u90fd\u4f1a\u51fa\u73b0\u5728\u5904\u7406\u524d\u7f00/\u540e\u7f00\u7ffb\u8f6c\u7684\u65f6\u5019\u53ea\u662f\u6539\u53d8\u4e86\u4e00\u4e2a\u5dee\u5206\u70b9\u7684\u8fa3\u624b\u60c5\u51b5\uff0c\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u4e5f\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u5728\u5e8f\u5217\u7684\u6700\u524d\u7aef/\u672b\u5c3e\u8865\u4e00\u4e2a0\u70b9\u5e26\u7740\u4e00\u8d77\u5dee\u5206\uff0c\u8fd9\u6837\u7684\u8bdd\u5dee\u5206\u6570\u7ec4\u7684\u957f\u5ea6\u53d8\u6210n+1\uff0c\u6b64\u65f6\u6211\u4eec\u8fdb\u884c\u4efb\u610f\u7684\u7ffb\u8f6c\u90fd\u662f\u540c\u65f6\u7ffb\u8f6c\u4e24\u4e2a\u70b9\u4e86\uff0c\u4e5f\u5c31\u53ef\u4ee5\u8fdb\u884c\u72b6\u538bdp\u4e86\n\n\u4e0a\u4ee3\u7801~\n\n```C\n#include<cstdio>\n#include<algorithm>\n#include<queue>\nusing namespace std;const int N=1e4+10;const int P=1048576+10;const int Y=30;typedef long long ll;\nint tr[N];int cnt;int cf[N];int a[N];int n;int m;int k;int cst[Y][Y];int d[N];int dp[P];queue <int> q;\ninline void bfs(int s)//\u5927\u529bbfs\u6c42\u51fa\u6700\u77ed\u8def \n{\n    for(int i=1;i<=n+1;i++)d[i]=0x3f3f3f3f;d[s]=0;int nw;int i=1;\n    for(q.push(s);!q.empty();)\n        for(nw=q.front(),q.pop(),i=1;i<=m;i++)\n        {\n            int v1=nw+a[i];if(v1<=n+1&&d[v1]==0x3f3f3f3f)d[v1]=d[nw]+1,q.push(v1);\n            int v2=nw-a[i];if(v2>=1&&d[v2]==0x3f3f3f3f)d[v2]=d[nw]+1,q.push(v2);\n        }\n    for(int i=1;i<=n+1;i++)if(tr[i]!=-1)cst[tr[s]][tr[i]]=d[i];\n}\nint main()\n{\n    scanf(\"%d%d%d\",&n,&k,&m);\n    for(int i=1,t;i<=k;i++){scanf(\"%d\",&t);cf[t]=1;}\n    for(int i=1;i<=m;i++)scanf(\"%d\",&a[i]);\n    for(int i=n+1;i>=1;i--)cf[i]^=cf[i-1];cnt=-1;//\u6c42\u5dee\u5206\u6570\u7ec4 \n    for(int i=1;i<=n+1;i++)tr[i]=-1;\n    for(int i=1;i<=n+1;i++)if(cf[i])tr[i]=++cnt;\n    for(int i=1;i<=n+1;i++)if(cf[i])bfs(i);\n    for(int i=1;i<(1<<(cnt+1));i++)dp[i]=0x3f3f3f3f;\n    for(int i=0;i<(1<<(cnt+1));i++)//\u5927\u529b\u72b6\u538bdp \n    {\n        if(dp[i]==0x3f3f3f3f)continue;\n        for(int j=0;j<=cnt;j++)\n        {\n            if((i>>j)&1)continue;\n            for(int k=j+1;k<=cnt;k++)\n                if(((i>>k)&1)==0)dp[i+(1<<j)+(1<<k)]=min(dp[i+(1<<j)+(1<<k)],dp[i]+cst[j][k]);\n        }\n    }int ans=dp[(1<<(cnt+1))-1];\n    printf(\"%d\",(ans==0x3f3f3f3f)?-1:ans);return 0;//\u62dc\u62dc\u7a0b\u5e8f~ \n}\n```\n\n\n\n\n\n\n\n",
        "postTime": 1537168884,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF79D \u3010Password\u3011"
    },
    {
        "content": "### [\u53cc\u500d\u7ecf\u9a8c](https://www.luogu.org/problemnew/show/P3943)\n### \u770b\u5230\u533a\u95f4\u53d6\u53cd\u64cd\u4f5c\uff0c\u9664\u4e86\u7ebf\u6bb5\u6811\u4e4b\u5916\uff0c\u8fd8\u80fd\u591f\u60f3\u5230\u4e00\u79cd\u52a0\u901f\u7684\u65b9\u5f0f\uff1a\u5dee\u5206\u3002\u6211\u4eec\u5c06\u65e0\u9700\u70b9\u4eae\u7684\u770b\u505a$0$\uff0c\u9700\u8981\u70b9\u4eae\u7684\u770b\u505a$1$\uff0c\u90a3\u4e48\u539f\u5e8f\u5217\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a$01$\u5e8f\u5217\u3002\u6211\u4eec\u5728\u6700\u540e\u8865\u4e0a\u4e00\u4e2a$0$\uff0c\u7136\u540e\u5bf9\u5176\u8fdb\u884c\u5dee\u5206\uff0c\u8fd9\u6837\u539f\u5e8f\u5217\u7684\u4e00\u6bb5$1$\u5c31\u5bf9\u5e94\u4e86\u5dee\u5206\u6570\u7ec4\u4e0a\u7684\u4e24\u4e2a$1$\uff08\u5982\u679c\u6700\u540e\u4e0d\u8865$0$\u90a3\u4e48\u539f\u4e32\u7ed3\u5c3e\u7684$1$\u5728\u5dee\u5206\u6570\u7ec4\u4e0a\u5c31\u53ea\u4f1a\u6709\u4e00\u4e2a$1$\uff0c\u5bf9\u4e8e\u4e4b\u540e\u7684\u64cd\u4f5c\u5c31\u6bd4\u8f83\u9ebb\u70e6\uff09\n### \u8003\u8651\u6bcf\u4e00\u6b21\u533a\u95f4\u53d6\u53cd\u64cd\u4f5c\u7684\u5b9e\u8d28\uff0c\u957f\u5ea6\u4e3a$K$\u7684\u533a\u95f4\u53d6\u53cd\u64cd\u4f5c\u5728\u5dee\u5206\u6570\u7ec4\u4e0a\u4f53\u73b0\u4e3a\u4e24\u4e2a\u95f4\u9694\u4e3a$K$\u7684\u6570\u53d6\u53cd\u3002\u663e\u7136\u5c06\u4e24\u4e2a$0$\u53d8\u6210$1$\u4e0d\u4f1a\u662f\u6700\u4f18\u60c5\u51b5\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\uff1a\u5728\u5dee\u5206\u6570\u7ec4\u4e0a\u5bf9\u4e8e\u4e00\u4e2a$0$\u548c\u4e00\u4e2a$1$\u7684\u4e00\u6b21\u533a\u95f4\u53d6\u53cd\u64cd\u4f5c\u5c31\u662f$1$\u5411\u65c1\u8fb9\u8d70\u4e86$K$\u683c\uff0c\u800c\u4e24\u4e2a$1$\u7684\u53d6\u53cd\u64cd\u4f5c\u5c31\u662f\u4e24\u4e2a$1$\u8d70\u5230\u4e86\u4e00\u8d77\u7136\u540e\u88ab\u6d88\u9664\u3002\n### \u53d1\u73b0\u9700\u8981\u70b9\u4eae\u7684\u70b9\u6700\u591a\u53ea\u6709$10$\u4e2a\uff0c\u90a3\u4e48\u5dee\u5206\u6570\u7ec4\u4e2d\u7684$1$\u6700\u591a\u53ea\u6709$20$\u4e2a\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6700\u77ed\u8def\u8ba1\u7b97\u5dee\u5206\u6570\u7ec4\u4e0a\u7b2c$i$\u4e2a$1$\u548c\u7b2c$j$\u4e2a$1$\u8d70\u5230\u4e00\u8d77\u7684\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570$f_{i,j}$\uff1b\u7136\u540e\u901a\u8fc7\u72b6\u538b$DP$\u8ba1\u7b97\u6d88\u9664$i$\u96c6\u5408\u4e2d\u7684$1$\u7684\u64cd\u4f5c\u6b21\u6570$g_i$\uff0c\u5927\u529b\u8f6c\u79fb\u5373\u53ef\u3002\n```\n#include<bits/stdc++.h>\nusing namespace std;\nbool vis[40010];\nint N , M , K , num[110] , cnt[20] , minDis[40010] , minN[31][31] , dp[1 << 21 + 1] , cnt1[1 << 21 + 1];\nqueue < int > q;\n\ninline void Dijk(int dir){\n    memset(minDis , 0x3f , sizeof(minDis));\n    minDis[cnt[dir]] = 0;\n    q.push(cnt[dir]);\n    while(!q.empty()){\n        int t = q.front();\n        q.pop();\n        for(int i = 1 ; i <= K ; i++){\n            if(t + num[i] <= N + 1 && minDis[t + num[i]] > minDis[t] + 1){\n                minDis[t + num[i]] = minDis[t] + 1;\n                q.push(t + num[i]);\n            }\n            if(t - num[i] > 0 && minDis[t - num[i]] > minDis[t] + 1){\n                minDis[t - num[i]] = minDis[t] + 1;\n                q.push(t - num[i]);\n            }\n        }\n    }\n    for(int i = 1 ; i <= cnt[0] ; i++)\n        minN[dir][i] = minDis[cnt[i]];\n}\n\nint main(){\n    cin >> N >> M >> K;\n    for(int i = 1 ; i <= M ; i++){\n        int a;\n        cin >> a;\n        vis[a] = 1;\n    }\n    for(int i = 1 ; i <= N + 1 ; i++)\n        if(vis[i] ^ vis[i - 1])\n            cnt[++cnt[0]] = i;\n    if(cnt[0] == 0){\n        cout << 0;\n        return 0;\n    }\n    for(int i = 1 ; i <= K ; i++)\n        cin >> num[i];\n    for(int i = 1 ; i <= cnt[0] ; i++)\n        Dijk(i);\n    for(int i = 1 ; i < 1 << cnt[0] ; i++)\n        cnt1[i] = cnt1[i - (i & -i)] + 1;\n    memset(dp , 0x3f , sizeof(dp));\n    dp[0] = 0;\n    for(int i = 0 ; i < (1 << cnt[0]) ; i++)\n        if(!(cnt1[i] & 1)){\n            int t = ((1 << cnt[0]) - 1) ^ i;\n            if(t == 0){\n                cout << (dp[i] == 0x3f3f3f3f ? -1 : dp[i]);\n                return 0;\n            }\n            t = log2(t & -t) + 1;\n            for(int j = t + 1 ; j <= cnt[0] ; j++)\n                if(!(i & (1 << j - 1)))\n                    dp[i | (1 << t - 1) | (1 << j - 1)] = min(dp[i | (1 << t - 1) | (1 << j - 1)] , dp[i] + minN[t][j]);\n        }\n    return 0;\n}\n```\n",
        "postTime": 1543043097,
        "uid": 96296,
        "name": "Itst",
        "ccfLevel": 0,
        "title": "CF79D Password"
    },
    {
        "content": "\u539f\u95ee\u9898\u5c31\u662f\uff1a\n\n> \u7ed9\u5b9a\u957f\u5ea6\u4e3a $n$ \u7684 $01$ \u5e8f\u5217 $a_{1\\dots n}$ \u6709 $k$ \u4e2a\u4f4d\u7f6e\u4e3a $1$\uff0c\u5176\u4f59\u4e3a $0$\uff0c\u5171\u6709 $m$ \u79cd\u64cd\u4f5c\uff0c\u6bcf\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u53cd\u8f6c\u957f\u5ea6 $l_i$ \u7684\u533a\u95f4\uff0c\u6c42\u5c06 $a$ \u6e05\u96f6\u7684\u6700\u5c0f\u64cd\u4f5c\u6570\u3002\n\n\n\u611f\u89c9\u6bcf\u6b21\u626b\u4e00\u4e0b $\\otimes 1$ \u5f88\u9ebb\u70e6\uff0c\u53ef\u4ee5\u8003\u8651\u4e00\u4e0b\u5dee\u5206\uff0c\u5373\uff1a\n\n$$b_i=a_i\\otimes a_{i+1}$$\n\n\u90a3\u4e48\u5bf9 $a$ \u6570\u7ec4 $[l,r]$ \u533a\u95f4\u53cd\u8f6c\u5c31\u7b49\u4ef7\u4e8e\u8ba9\u5dee\u5206\u6570\u7ec4\u7684 $b_{l-1}\\gets b_{l-1}\\otimes 1,b_r\\gets b_r\\otimes 1$\u3002\n\n\u7531\u4e8e\u6bcf\u6b21\u6291\u6216\u6700\u591a\u4f1a\u751f\u6210\u4e24\u4e2a $1$\uff0c\u6240\u4ee5\u6700\u591a\u4e5f\u5c31\u6709 $2k$ \u4e2a $1$\uff0c\u90a3\u4e48\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u4e86\uff1a\n\n> \u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $2k$ \u7684 $01$ \u5e8f\u5217 $b_{0\\dots 2k-1}$\uff0c\u5176\u4e2d\u6700\u591a\u6709 $2k$ \u4e2a $1$\uff0c\u5171\u6709 $m$ \u4e2a\u64cd\u4f5c\uff0c\u6bcf\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u9009\u62e9\u8ddd\u79bb\u4e3a $l_i$ \u7684\u4e24\u70b9\uff0c\u5c06\u5176\u53cd\u8f6c\uff0c\u6c42\u5c06 $b$ \u6e05\u96f6\u7684\u6700\u5c0f\u64cd\u4f5c\u6570\u3002\n\n\u8bbe\u9009\u62e9\u7684\u4e00\u5bf9\u4f4d\u7f6e\u4e3a $(x,y)$\uff0c\u8fdb\u884c\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n* \u82e5 $b_x=0,b_y=0$\uff0c\u5219\u64cd\u4f5c\u540e $b_x=1,b_y=1$\u3002\n\n* \u82e5 $b_x=1,b_y=1$\uff0c\u5219\u64cd\u4f5c\u540e $b_x=0,b_y=0$\u3002\n\n* \u82e5 $b_x=1,b_y=0$\uff0c\u5219\u64cd\u4f5c\u540e $b_x=0,b_y=1$\u3002\n\n* \u82e5 $b_x=0,b_y=1$\uff0c\u5219\u64cd\u4f5c\u540e $b_x=1,b_y=0$\u3002\n\n\u53d1\u73b0\u60c5\u51b5\u4e00\u4f1a\u4f7f\u7b54\u6848\u66f4\u52a3\uff0c\u60c5\u51b5\u4e8c\u4f1a\u4f7f\u7b54\u6848\u66f4\u4f18\uff0c\u60c5\u51b5\u4e09\u548c\u60c5\u51b5\u56db\u4e0d\u4f1a\u5bf9\u7b54\u6848\u6709\u5f71\u54cd\u3002\n\n\u6240\u4ee5\u53ea\u9700\u8981\u8003\u8651\u60c5\u51b5\u4e8c\u5373\u53ef\u3002\n\n\u53ef\u4ee5\u5bf9\u4efb\u610f $i$ \u548c $i+l_j$ \u8fde\u4e00\u6761\u8fb9\u6743\u4e3a $1$ \u7684\u65e0\u5411\u8fb9\uff0c\u90a3\u4e48\u95ee\u9898\u8f6c\u5316\u4e3a\u4e86\uff1a\n\n> \u7ed9\u5b9a\u4e00\u4e2a\u6709 $n+1$ \u4e2a\u8282\u70b9\u7684\u56fe\uff08\u7f16\u53f7\u4e3a $0\\sim n$\uff09\u5f53 $\\texttt{dis}(x,y)=l_i$ \u65f6\uff0c\u5b58\u5728\u8fb9 $\\texttt{edge}(x,y)$\uff0c\u521d\u59cb\u65f6\u6700\u591a\u6709 $2k$ \u4e2a\u8282\u70b9\u4e0a\u6709\u6807\u8bb0\uff0c\u6bcf\u6b21\u53ef\u4ee5\u6cbf\u8fb9\u79fb\u52a8\u6807\u8bb0\uff0c\u4e24\u4e2a\u6807\u8bb0\u76f8\u9047\u5c31\u4f1a\u6d88\u5931\uff0c\u6c42\u4f7f\u6240\u6709\u6807\u8bb0\u6d88\u5931\u7684\u6700\u5c11\u79fb\u52a8\u6b21\u6570\u3002\n\n\u90a3\u4e48\u5dee\u5206\u6570\u7ec4\u4e2d $b_{l-1}\\gets b_{l-1}\\otimes 1,b_r\\gets b_r\\otimes 1$ \u7684\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\u5c31\u662f\u56fe\u4e2d $l-1$ \u548c $r$ \u4e4b\u95f4\u7684\u6700\u77ed\u8def\uff0c\u8bb0\u505a $\\texttt{cost}(l-1,r)$\u3002\n\n\u5219\u5bf9\u539f\u5e8f\u5217 $[l,r]$ \u8fdb\u884c\u533a\u95f4\u53cd\u8f6c\u7684\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\u5c31\u662f $\\texttt{cost}(l-1,r)$\u3002\n\n\u56e0\u4e3a\u8fb9\u6743\u5168\u662f $1$\uff0c\u6240\u4ee5\u8dd1 $n$ \u904d $bfs$ \u5c31\u53ef\u4ee5\u6c42\u51fa $\\texttt{cost}$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(nmk)$\u3002\n\n\u7136\u540e\u56e0\u4e3a $2k\\leq 16$ \uff0c\u53ef\u4ee5\u8003\u8651\u72b6\u538b $DP$\uff0c\u53ea\u6709\u5dee\u5206\u6570\u7ec4\u4e2d\u7684 $1$ \u4f1a\u5bf9\u7b54\u6848\u6709\u8d21\u732e\u3002\n\n\u8bbe $f_{sta}$ \u4e3a\u6807\u8bb0\u70b9\u72b6\u6001\u4e3a $sta$ \u65f6\u7684\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\uff0c\u4e24\u4e2a\u9700\u8981\u6d88\u9664\u7684\u6807\u8bb0\u4f4d\u7f6e\u5206\u522b\u4e3a $i,j$\uff0c\u6709\uff1a\n\n$$f_{sta}=\\min\\{f_{sta-2^i-2^j}+\\texttt{cost}(i,j)\\}$$\n\n\u8bbe $tot$ \u4e3a\u521d\u59cb\u65f6\u6807\u8bb0\u70b9\u7684\u4e2a\u6570\uff0c\u7b54\u6848\u4e3a $f_{2^{tot}-1}$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(nmk+k2^{2k})$\u3002\n\n$\\texttt{Code:}$\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define ull unsigned long long\n#define rint register int\nusing namespace std;\nnamespace IO{\n\t#define File(x,y) freopen(#x,\"r\",stdin),freopen(#y,\"w\",stdout);\n\tinline int read(){\n\t\tint w=0,f=1; char ch=getchar();\n\t\twhile(ch<'0'||ch>'9'){if(ch=='-') f=-1; ch=getchar();}\n\t\twhile(ch>='0'&&ch<='9'){w=(w<<3)+(w<<1)+(ch^48); ch=getchar();}\n\t\treturn w*f;\n\t}\n\tinline void write(int x){\n  \t\tstatic int sta[35]; int top=0;\n  \t\tdo{sta[++top]=x%10,x/=10;}while(x);\n  \t\twhile(top) putchar(sta[top--]+48); puts(\"\");\n\t}\n}\nusing namespace IO;\nnamespace CL{\n\t#define fill(x,y) memset(x,y,sizeof(x))\n\t#define copy(x,y) memcpy(y,x,sizeof(x))\n\t\n\tconst int maxn=4e4+5,maxk=20,inf=0x3f3f3f3f;\n\t\n\tint n,k,m,tot,ans;\n\tint a[maxn],op[105],dis[maxn],cost[maxk][maxk],id[maxn],f[1<<maxk];\n\tbool vis[maxn];\n\tqueue<int> q;\n\tvoid spfa(int s){\n\t\tfor(int i=0;i<=n;i++) dis[i]=inf,vis[i]=0;\n\t\tdis[s]=0; vis[s]=1;\n\t\tq.push(s);\n\t\twhile(!q.empty()){\n\t\t\tint u=q.front(); q.pop();\n\t\t\tfor(int i=1;i<=m;i++){\n\t\t\t\tint v1=u+op[i],v2=u-op[i];\n\t\t\t\tif(v1<=n && !vis[v1]){\n\t\t\t\t\tdis[v1]=dis[u]+1;\n\t\t\t\t\tvis[v1]=1; q.push(v1);\n\t\t\t\t}\n\t\t\t\tif(v2>=0 && !vis[v2]){\n\t\t\t\t\tdis[v2]=dis[u]+1;\n\t\t\t\t\tvis[v2]=1; q.push(v2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<=n;i++)\n\t\t\tif(a[i]) cost[id[s]][id[i]]=dis[i];\n\t}\n\t\n\tinline int main(){\n\t\tn=read(); k=read(); m=read();\n\t\tfor(int i=1;i<=k;i++) a[read()]=1;\n\t\tfor(int i=1;i<=m;i++) op[i]=read();\n\t\tfor(int i=0;i<=n;i++) a[i]^=a[i+1],id[i]=a[i]?tot++:0;\n\t\tfor(int i=0;i<=n;i++) if(a[i]) spfa(i);\n\t\tfor(int sta=1;sta<(1<<tot);sta++){\n\t\t\tf[sta]=inf;\n\t\t\tfor(int i=0;i<tot;i++){\n\t\t\t\tif(!((sta>>i)&1)) continue;\n\t\t\t\tfor(int j=i+1;j<tot;j++){\n\t\t\t\t\tif(!((sta>>j)&1)) continue;\n\t\t\t\t\tf[sta]=min(f[sta],f[sta-(1<<i)-(1<<j)]+cost[i][j]);\n\t\t\t\t}\t\n\t\t\t}\t\t\n\t\t}\n\t\tprintf(\"%d\\n\",f[(1<<tot)-1]==inf?-1:f[(1<<tot)-1]);\n\t\treturn 0;\n\t}\n}\nsigned main(){return CL::main();}\n```",
        "postTime": 1625284906,
        "uid": 226113,
        "name": "\u706b\u7fbd\u767d\u65e5\u751f",
        "ccfLevel": 0,
        "title": "\u300c\u9898\u89e3\u300dCF79D Password"
    },
    {
        "content": "\u6807\u7b7e\uff1a\u72b6\u538b+bfs+dp\n\n\u867d\u7136\u9898\u76ee\u4e2d\u8bf4\u7684\u7684\u662f\u533a\u95f4\u4fee\u6539\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8003\u8651\u5b83\u7684**\u5dee\u5206**\u5e8f\u5217\uff0c\u4f7f\u5f97\u8981\u4fee\u6539\u7684\u4f4d\u7f6e\u4e2a\u6570\u53d8\u62102\u4e2a\u3002\n\n\u6211\u4eec\u5e94\u8be5\u5f88\u5bb9\u6613\u53d1\u73b0\uff0c\u8fd9\u9898\u53ef\u4ee5\u4f7f\u7528\u9006\u5411\u601d\u7ef4\uff0c\u53ea\u8981\u6c42\u51fa\u6700\u5c11\u7684\u4fee\u6539\uff0c\u4f7f\u5f97\u539f\u5e8f\u5217\u53d8\u6210\u51680\u5c31\u53ef\u4ee5\u4e86\u3002\n\nso\uff0c\u5bf9\u539f\u5e8f\u5217\u8fdb\u884c\u5dee\u5206\uff0c\u90a3\u4e48\u6bcf\u6b21\u4fee\u6539\u5c31\u662f\u8981\u4f60\u5bf9i\u53f7\u4f4d\u7f6e\u548ci+size[]\u6a212\u610f\u4e49\u4e0b\u7684\u52a01\u3002\u5bb9\u6613\u770b\u51fa\uff1a\u5dee\u5206\u540e\u7684\u5e8f\u5217\u4e2d\uff0c\u6570\u503c\u4e3a1\u7684\u4e2a\u6570\u662f\u4e0d\u4f1a\u8d85\u8fc72k\u4e2a\uff0c\u5373\u4e0d\u4f1a\u8d85\u8fc720\u4e2a\u3002\n\n\u8003\u8651\u6bcf\u6b21\u5bf9i\u548ci+x\u6539\u52a8\u7684\u8fc7\u7a0b\uff0c\u5982\u679c\u539f\u5e8f\u5217\u4e2d\uff0ci\u53f7\u4f4d\u7f6e\u548ci+x\u53f7\u4f4d\u7f6e**\u90fd\u662f0**\u7684\u8bdd\uff0c**\u6ca1\u6709\u5fc5\u8981\u8fdb\u884c\u6539\u52a8**\u3002\u6240\u4ee5\u4efb\u610f\u65f6\u523b\uff0c\u6570\u503c\u4e3a**1**\u7684\u4f4d\u7f6e**\u4e2a\u6570**\u662f**\u4e0d\u4f1a\u589e\u52a0**\u7684\u3002so\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e00\u4e2a\u76841\u770b\u6210\u4e00\u4e2a\u7684\u77f3\u5b50\uff0c\u90a3\u4e48\u6bcf\u6b21\u6211\u4eec\u53ef\u4ee5\u628a\u77f3\u5b50\u5f80\u67d0\u4e2a\u65b9\u5411\u79fb\u52a8size[]\u6b65\uff0c\u5982\u679c\u79fb\u52a8\u4e4b\u540e\u7684\u4f4d\u7f6e\u5b58\u5728\u77f3\u5b50\u7684\u8bdd\uff0c\u5c31\u76f8\u4e92\u62b5\u6d88\u6389\u4e86\u3002\n\n\u81f3\u6b64\uff0c\u4e0d\u96be\u770b\u51fa\uff0c\u77f3\u5b50\u4e4b\u95f4\u7684\u5173\u7cfb\u80af\u5b9a\u662f\u4e00\u4e2a\u5339\u914d\u7684\u5173\u7cfb\uff0c\u5426\u5219\u5c31\u6ca1\u6709\u62b5\u6d88\u8fd9\u79cd\u8bf4\u6cd5\u3002\u6211\u4eec\u5148bfs\u4e00\u904d\u6240\u6709\u662f1\u7684\u70b9\uff0c\u6c42\u51faDist[i][j]\u8868\u793a\uff0c\u77f3\u5b50i\u8981\u8d70\u5230\u77f3\u5b50j\u7684\u4f4d\u7f6e\uff0c\u81f3\u5c11\u9700\u8981\u79fb\u52a8\u591a\u5c11\u6b65\uff0c\u8fd9\u4e00\u90e8\u5206\u7684\u590d\u6742\u5ea6\u662fO(2kmn)\u3002\n\n\u73b0\u5728\u95ee\u9898\u8f6c\u5316\u4e3a\u6709\u4e00\u4e2a\u5927\u5c0f\u4e0d\u8d85\u8fc720\u7684\u5b8c\u5168\u56fe\uff0c\u6211\u4eec\u60f3\u8981\u6c42\u5b83\u7684\u6700\u5c0f\u6743\u6700\u5927\u5339\u914d\u3002\n\n\u53ef\u4ee5\u7528\u72b6\u538bDP\uff0c\u8bbef[S]\u8868\u793a\u96c6\u5408S\u7684\u6700\u5c0f\u5212\u5206\u4ee3\u4ef7\uff0c\u6bcf\u6b21\u9009\u51fa\u6700\u5c0f\u7684\u5143\u7d20\u4f5c\u4e3a\u5339\u914d\u5143\u7d20\u4e4b\u4e00\uff0c\u679a\u4e3e\u53e6\u4e00\u4e2a\u5143\u7d20\u5373\u53ef\u3002\n\n\u4e0a\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int M=1e4+5,INF=1<<29;\nint n,k,m,cnt;\nint number[M];\nint a[M],size[M],f[1<<25];\nint dis[M],dist[25][25],visited[M];\nqueue<int> q;\nvoid bfs(int x,int id)\n{\n\tmemset(visited,0,sizeof visited);\n\tmemset(dis,0x3f3f3f3f,sizeof dis);\n\tq.push(x); visited[x]=1;\n\tdis[x]=0;\n\twhile(!q.empty())\n\t{\n\t\tx=q.front(); q.pop();\n\t\tfor(int i=1; i<=m; i++)\n\t\t{\n\t\t\tint tmp=size[i];\n\t\t\tif((x+tmp)<=n && !visited[x+tmp]) \n\t\t\t{\n                visited[x+tmp]=1;\n\t\t\t\tdis[x+tmp]=dis[x]+1;\n\t\t\t\tq.push(x+tmp);\n            }\n            if((x-tmp)>=1 && !visited[x-tmp]) \n\t\t\t{\n                visited[x-tmp]=1;\n\t\t\t\tdis[x-tmp]=dis[x]+1;\n\t\t\t\tq.push(x-tmp);\n            }\n\t\t}\n\t}\n\tfor(int i=1; i<=cnt; i++)\n\t{\n\t\tif(visited[number[i]]) dist[id][i]=dis[number[i]];\n\t\telse dist[id][i]=INF;\n\t}\n}\nvoid dp()\n{\n\tfor(int i=1; i<(1<<cnt); i++) f[i]=INF;\n    for(int i=0,j; i<(1<<cnt); i++)\n\t{\n        for(int k=1; k<=cnt; k++)\n\t\t    if((1<<k-1)&i) \n\t\t\t{\n\t\t\t    j=k;\n\t\t\t\tbreak;\n\t\t\t}\n        for(int k=1; k<=cnt; k++) \n\t\t    if((1<<k-1)&i) \n                f[i]=min(f[i],f[i^(1<<j-1)^(1<<k-1)]+dist[j][k]);\n    }\n}\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&k,&m);\n\tfor(int i=1; i<=k; i++) \n\t{\n\t\tint x; scanf(\"%d\",&x);\n\t\ta[x]=1;\n\t}\n\tfor(int i=1; i<=m; i++) scanf(\"%d\",&size[i]);\n\tn++;//\u8981\u6ce8\u610f\u8fb9\u754c\uff0c\u6240\u4ee5n\u8981++\n\tfor(int i=n; i>=1; i--) a[i]^=a[i-1];//\u5dee\u5206\n\tfor(int i=1; i<=n; i++)\n\t    if(a[i])\n\t    {\n\t    \ta[i]=++cnt;\n\t    \tnumber[cnt]=i;//number\u6570\u7ec4\u8bb0\u5f55\u6240\u6709\u77f3\u5b50\u7684\u4e0b\u6807\n\t\t}\n\tfor(int i=1; i<=n; i++)\n\t    if(a[i]) bfs(i,a[i]);\n\tdp();\n\tif(f[(1<<cnt)-1]==INF) puts(\"-1\");\n    else printf(\"%d\\n\",f[(1<<cnt)-1]);\n    return 0;\n}\n```\n",
        "postTime": 1581664932,
        "uid": 91375,
        "name": "crh1272336175",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF79D \u3010Password\u3011"
    },
    {
        "content": "## \u524d\u7f6e\u77e5\u8bc6\n\n\u72b6\u538b dp\uff0c\u6700\u77ed\u8def / bfs\n\n## \u5206\u6790\n\n\u9996\u5148\u770b\u5230\u6570\u636e\u8303\u56f4\u548c\u5927\u6982\u9898\u610f\u5c31\u80fd\u8054\u60f3\u5230\u72b6\u538b dp\n\n\u4f46\u662f\uff0c\u76f4\u63a5\u72b6\u538b dp \u7684\u8bdd\u4f1a\u53d1\u73b0\u65e0\u4ece\u4e0b\u624b\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u8981\u8f6c\u6362\u8fd9\u4e2a\u8fde\u7eed\u5b50\u5e8f\u5217\u7684\u4fee\u6539\u3002\u53d1\u73b0\u8fde\u7eed\u5b50\u5e8f\u5217\u53d6\u53cd\u53ef\u4ee5\u901a\u8fc7**\u5f02\u6216\u5dee\u5206**\u8f6c\u6362\u4e3a\u4e24\u4e2a\u5355\u70b9\u4fee\u6539\u7684\u5f62\u5f0f\uff0c\u4e8e\u662f\u5c31\u53ef\u4ee5\u5957\u8def\u51fa\u6700\u77ed\u8def\u7684\u505a\u6cd5\uff1a\n\n+ \u901a\u8fc7\u5f02\u6216\u5dee\u5206\u627e\u5230\u7ffb\u8f6c\u4efb\u610f\u4e24\u4e2a\u70b9\u7684\u4ee3\u4ef7\n\n+ \u8dd1\u4e00\u904d bfs \u6700\u77ed\u8def\uff0c\u6b64\u65f6\u7b2c $i$ \u4e2a $1$ \u548c\u7b2c $j$ \u4e2a $1$ \u7684\u8ddd\u79bb\u4e3a $dis_{ij}$\uff0c\u5219\u540c\u65f6\u6d88\u6389\u4e24\u4e2a $1$ \u7684\u6700\u5c11\u4ee3\u4ef7\u65b9\u5f0f\u5c31\u662f\u5728 $i$ \u5230 $j$ \u7684\u6700\u77ed\u8def\u4e0a\u6cbf\u8def\u5f84\u4e00\u4e2a\u4e00\u4e2a\u6d88\u3002\n\n+ \u6700\u540e\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u76f4\u63a5\u72b6\u538b dp\uff0c\u5229\u7528\u6700\u77ed\u8def\u8dd1\u51fa\u7684\u6700\u5c11\u4ee3\u4ef7\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u72b6\u6001 $i$\uff0c\u5c1d\u8bd5\u5229\u7528 $i$ \u4e0a\u6ca1\u6709\u7684\u4e24\u4f4d\u8fdb\u884c\u66f4\u65b0\uff0c\u6700\u540e\u7b97\u51fa\u6765\u7684\u5168\u4e3a $1$ \u7684\u72b6\u6001\u5c31\u662f\u7b54\u6848\u3002\n\n+ \u56e0\u4e3a\u6743\u503c\u90fd\u662f $1$ \u6240\u4ee5\u53ef\u4ee5 bfs\n\n## \u4ee3\u7801\n\n```cpp\n#include <stdio.h>\n#include <queue>\nusing namespace std;\nconst int N = 10010, M = 30, F = 1048586;\nconst int inf = 0x3f3f3f3f;\nint tr[N], cnt;\nint df[N], a[N];\nint n, m, k;\nint cst[M][M];\nint d[N], f[F];\nqueue<int> q;\nvoid bfs(int s) {\n\tfor (int i = 1; i <= n + 1; ++ i) d[i] = inf;\n\td[s] = 0;\n\tint u;\n\tq.push(s);\n\tfor (; !q.empty(); ) {\n\t\tu = q.front(), q.pop();\n\t\tfor (int i = 1, v1, v2; i <= m; ++ i) {\n\t\t\tv1 = u + a[i]; if (v1 <= n + 1 && d[v1] == inf) d[v1] = d[u] + 1, q.push(v1);\n\t\t\tv2 = u - a[i]; if (v1 >= 1 && d[v2] == inf) d[v2] = d[u] + 1, q.push(v2);\n\t\t}\n\t}\n\tfor (int i = 1; i <= n + 1; ++ i) if (~tr[i]) cst[tr[s]][tr[i]] = d[i];\n}\nint main() {\n\tscanf(\"%d%d%d\", &n, &k, &m);\n\tfor (int i = 1, t; i <= k; ++ i) scanf(\"%d\", &t), df[t] = 1;\n\tfor (int i = 1; i <= m; ++ i) scanf(\"%d\", a + i);\n    for (int i = n + 1; i >= 1; -- i) df[i] ^= df[i - 1];\n    cnt = -1;\n\tfor (int i = 1; i <= n + 1; ++ i) tr[i] = -1;\n\tfor (int i = 1; i <= n + 1; ++ i) if (df[i]) tr[i] = ++ cnt;\n\tfor (int i = 1; i <= n + 1; ++ i) if (df[i]) bfs(i);\n\tfor (int i = 1; i < (1 << (cnt + 1)); ++ i) f[i] = inf;\n\tfor (int i = 0; i < (1 << (cnt + 1)); ++ i) {\n\t\tif (f[i] != inf) {\n\t\t\tfor (int j = 0; j <= cnt; ++ j) {\n\t\t\t\tif ((i >> j) & 1) continue;\n\t\t\t\tfor (int k = j + 1; k <= cnt; ++ k)\n\t\t\t\t\tif (!((i >> k) & 1)) f[i + (1 << j) + (1 << k)] = min(f[i + (1 << j) + (1 << k)], f[i] + cst[j][k]);\n\t\t\t}\n\t\t}\n\t}\n\tint ans = f[(1 << cnt + 1) - 1];\n\tprintf(\"%d\\n\", (ans == inf) ? -1 : ans);\n}\n```",
        "postTime": 1648596107,
        "uid": 228486,
        "name": "SunsetSamsara",
        "ccfLevel": 7,
        "title": "CF79D Password \u9898\u89e3"
    },
    {
        "content": "# \u77e5\u8bc6\u70b9: DP\uff0c\u5dee\u5206\uff0cBfs\n\n## [\u539f\u9898\u9762](https://www.luogu.com.cn/problem/CF79D)\n\n\u53cc\u500d\u7ecf\u9a8c [P3943 \u661f\u7a7a](https://www.luogu.com.cn/problem/P3943)\u3002  \n\u5c06\u6b64\u9898\u4ee3\u7801\u4ea4\u8fc7\u53bb\u53ef\u76f4\u63a5 AC\uff0c\u4f46 P3943 \u6570\u636e\u8f83\u5f31\uff0c\u6ca1\u6709\u5361\u6389\u9519\u8bef\u7684\u80cc\u5305\u89e3\u6cd5\u3002  \n\u5b8c\u5168\u80cc\u5305\u89e3\u6cd5\u9519\u8bef\u539f\u56e0 \u8be6\u89c1 [\u9898\u89e3 P3943 \u3010\u661f\u7a7a\u3011 - Epworth \u7684\u535a\u5ba2](https://www.luogu.com.cn/blog/EpworthX/solution-p3943)\u3002\n\n---\n\n## \u9898\u610f\u7b80\u8ff0\n\n>\u7ed9\u5b9a\u4e00\u957f\u5ea6\u4e3a $n$ \u7684 $0$ \u4e32\uff0c\u7ed9\u5b9a $k$ \u4e2a \u4f4d\u7f6e\u3002  \n>\u7ed9\u51fa $m$ \u4e2a\u957f\u5ea6 $b_i$\uff0c\u6bcf\u6b21\u53ef\u9009\u62e9\u4e00\u6bb5\u957f\u5ea6\u4e3a $b_i$ \u7684\u5b50\u5e8f\u5217\u53d6\u53cd\u3002  \n>\u6c42\u4f7f $k$ \u4e2a\u4f4d\u7f6e\u53d8\u4e3a $1$ \uff0c\u5176\u4ed6\u4f4d\u7f6e\u4ecd\u4e3a $0$ \u7684\u6700\u5c0f\u6b65\u6570\u3002  \n>$1\\le n\\le 10^4,\\ 1\\le m\\le 100,\\ 1\\le b_i\\le n,\\ k\\le 10$\u3002  \n\n---\n\n## \u5206\u6790\u9898\u610f\n\n\u53d1\u73b0\u9898\u76ee\u7b49\u4ef7\u4e8e \u4e00\u5f00\u59cb\u53ea\u6709 $k$ \u4e2a\u4f4d\u7f6e\u5f00\u7740\u706f\uff0c\u4f7f\u6240\u6709\u706f\u90fd\u5173\u4e0a\u7684\u6700\u5c0f\u6b65\u6570\u3002  \n**\u8bbe\u5173\u706f\u4e3a $0$\uff0c\u5f00\u706f\u4e3a $1$\uff0c\u4ee5\u4e0b\u5747\u6309\u7167\u4e0a\u8ff0\u7b49\u4ef7\u60c5\u51b5\u5c55\u5f00\u3002**\n\n---\n\n\u770b\u5230\u533a\u95f4\u4fee\u6539\uff0c\u8003\u8651\u5dee\u5206\u3002  \n\u4f46\u6b64\u9898\u4e3a\u533a\u95f4\u53d6\u53cd\uff0c\u4e00\u822c\u7684\u4f5c\u5dee\u5dee\u5206\u65e0\u6cd5\u4f7f\u7528\uff0c\u8003\u8651\u5f02\u6216\u5dee\u5206\u3002  \n\u4ee4 $b_i = a_i\\ \\text{xor}\\ a_{i+1}$\uff0c\u5bf9\u4e8e\u6837\u4f8b 1\uff0c\u6709\uff1a  \n\n|\u5dee\u5206\u524d|$\\ \\ 1 1 1 0 1 1 1 1 1 0$|  \n|-|-|  \n|\u5dee\u5206\u540e|$10011000010$|  \n\n\u5728\u5dee\u5206\u540e\u6570\u7ec4\u524d\u6dfb\u52a0\u4e00\u4e2a $0$ \u4f4d\u7f6e\u3002  \n\u624b\u73a9\u540e\u53d1\u73b0\uff0c\u5dee\u5206\u540e\u5fc5\u7136\u6709\u5076\u6570\u4e2a $1$ \u51fa\u73b0\u3002\n\n\u6b64\u65f6\u82e5\u8fdb\u884c\u533a\u95f4\u53d6\u53cd\uff0c\u53ea\u4f1a\u4f7f\u533a\u95f4\u4e24\u7aef\u4f4d\u7f6e\u6539\u53d8\uff0c\u4e2d\u95f4\u4e0d\u53d8\u3002  \n\u82e5\u5c06\u539f\u5e8f\u5217\u4e2d $1\\sim 3$ \u53d6\u53cd\uff0c\u5219\u6709\uff1a  \n\n|\u5dee\u5206\u524d|$\\ \\ 0 0 0 0 1 1 1 1 1 0$|  \n|-|-|  \n|\u5dee\u5206\u540e|$00001000010$|  \n\n\u53d1\u73b0\u53ea\u6709 $0,3$ \u4e24\u4e2a\u4f4d\u7f6e\u7684 $1$ \u88ab\u6539\u53d8\u3002\n\n---\n\n\u5219\u95ee\u9898\u8f6c\u5316\u4e3a\uff1a  \n>\u7ed9\u5b9a\u4e00\u6709 $2k$ \u4e2a\u4f4d\u7f6e\u4e3a $1$ \u7684 01 \u4e32\u3002  \n>\u6bcf\u6b21\u53ef\u9009\u62e9\u4e00\u5bf9\u8ddd\u79bb\u4e3a $b_i$ \u7684\u4f4d\u7f6e\uff0c\u5c06\u5176\u53d6\u53cd\u3002  \n>\u6c42\u5c06\u5176\u53d8\u4e3a $0$ \u4e32\u7684\u6700\u5c0f\u6b65\u6570\u3002\n\n\u5206\u7c7b\u8ba8\u8bba\uff0c\u8fdb\u884c\u4e0b\u4e00\u6b65\u8f6c\u5316\uff1a  \n1. \u5c06\u4e00\u5bf9 $0$ \u53d6\u53cd\uff0c\u663e\u7136\u4f1a\u4f7f\u7b54\u6848\u66f4\u52a3\uff0c\u4e0d\u53ef\u80fd\u53d1\u751f\u3002  \n2. \u5c06\u4e00\u4e2a $0$ \u4e00\u4e2a $1$ \u53d6\u53cd\uff0c\u53ef\u770b\u505a\u539f\u6709\u7684 $1$ \u79fb\u52a8\u81f3 $0$ \u7684\u4f4d\u7f6e\u3002  \n3. \u5c06\u4e00\u5bf9 $1$ \u53d6\u53cd\uff0c\u53ef\u770b\u505a\u4e00\u4e2a $1$ \u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\u7684\u4f4d\u7f6e\uff0c\u4e24\u4e2a $1$ \u78b0\u649e\u53d8\u6210 $0$\u3002\n\n\u4e00\u5b9a\u4f1a\u53d1\u751f\u5076\u6570\u6b21 \u4e24\u4e2a $1$ \u78b0\u649e\u7684\u60c5\u51b5\u3002  \n\u8003\u8651\u6bcf\u6b21\u4f7f\u4e24\u4e2a $1$ \u78b0\u649e\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002  \n\n\u82e5\u5df2\u77e5\u4e24\u4e2a $1$ \u7684\u4f4d\u7f6e\u4e3a $u,v$\uff0c\u4f7f\u5176\u78b0\u649e\u7684\u4ee3\u4ef7\u5373 \u4f7f\u7528 $b_i$ \u548c $-b_i$ \u51d1\u51fa $v - u$ \u7684\u6b65\u6570\u3002  \n\u663e\u7136\u53ef\u4ee5 bfs \u9884\u5904\u7406\u51fa\u78b0\u649e\u6bcf\u5bf9 $1$ \u7684\u82b1\u8d39\u3002\n\n---\n\n\u95ee\u9898\u8f6c\u5316\u4e3a\uff1a\n>\u7ed9\u5b9a $2k$ \u4e2a\u7269\u54c1\uff0c\u6bcf\u6b21\u53ef\u53d6\u51fa\u4e00\u5bf9\u7269\u54c1\u3002  \n>\u53d6\u51fa\u6bcf\u5bf9\u7269\u54c1\u7684\u82b1\u8d39\u5df2\u77e5\uff0c\u6c42\u5168\u53d6\u51fa\u7684\u6700\u5c0f\u82b1\u8d39\u3002\n\n\u7531\u4e8e $k\\le 10$\uff0c\u663e\u7136\u53ef\u4ee5\u538b\u7f29 $k$ \u4e2a\u7269\u54c1\u9009/\u4e0d\u9009\u7684\u72b6\u6001\u3002  \n\u63a5\u4e0b\u6765\u5c31\u662f\u4e2a\u5f88\u7b80\u5355\u7684\u72b6\u538b\u4e86\u3002  \n\u6bcf\u6b21\u679a\u4e3e\u4e24\u4e2a\u4e0d\u5728\u96c6\u5408\u4e2d\u7684\u7269\u54c1 \u52a0\u5165\u96c6\u5408\u8f6c\u79fb\u5373\u53ef\u3002\n\n---\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n\n```cpp\n//\u77e5\u8bc6\u70b9:DP\uff0c\u5dee\u5206\uff0cBfs\n/*\nBy:Luckyblock\n\u5f02\u6216\u5dee\u5206 + Bfs + \u72b6\u538bDP\n*/\n#include <queue>\n#include <cstdio>\n#include <ctype.h>\n#include <cstring>\n#include <algorithm>\n#define ll long long\nconst int kMaxm = 110;\nconst int kMaxn = 1e4 + 10;\nconst int kInf = 1e9 + 2077;\n//=============================================================\nint n, k, m, cnt;\nint pos[kMaxm], a[kMaxn], b[kMaxm];\nint dis[kMaxn], map[kMaxn], cost[30][30];\nint f[(1 << 21) + 10];\n//=============================================================\ninline int read() {\n  int f = 1, w = 0; char ch = getchar();\n  for (; !isdigit(ch); ch = getchar()) if (ch == '-') f = -1;\n  for (; isdigit(ch); ch = getchar()) w = (w << 3) + (w << 1) + (ch ^ '0');\n  return f * w;\n}\nvoid GetMin(int &fir, int sec) {\n  if (sec < fir) fir = sec;\n}\nvoid Bfs(int s) { //\u9884\u5904\u7406\u51fa\u78b0\u649e\u6bcf\u5bf9 1 \u7684\u82b1\u8d39\u3002\n  std :: queue <int> q;\n  memset(dis, 63, sizeof (dis));\n  dis[s] = 0; \n  q.push(s);\n  \n  while (! q.empty()) {\n    int u = q.front(); q.pop();\n    for (int i = 1; i <= m; ++ i) {\n      int v1 = u + b[i], v2 = u - b[i]; //v1 \u5411\u53f3\u6269\u5f20\uff0cv2 \u5411\u5de6\u3002\n      if (v1 <= n && dis[v1] > kInf) dis[v1] = dis[u] + 1, q.push(v1);\n      if (v2 >= 1 && dis[v2] > kInf) dis[v2] = dis[u] + 1, q.push(v2);\n    }\n  }\n  for (int i = 1; i <= n; ++ i) {\n    if (map[i]) cost[map[s]][map[i]] = dis[i];\n  }\n}\nvoid Prepare() {\n  n = read(), k = read(), m = read();\n  for (int i = 1; i <= k; ++ i) a[read()] = 1;\n  for (int i = 0; i <= n; ++ i) a[i] ^= a[i + 1];\n  for (int i = 1; i <= m; ++ i) b[i] = read();\n  for (int i = 0; i <= n; ++ i) {\n    if (a[i]) map[i] = ++ cnt; //\u5efa\u7acb\u6620\u5c04\u5173\u7cfb\n  }\n  for (int i = 0; i <= n; ++ i ) if (a[i]) Bfs(i);\n}\n//=============================================================\nint main() {\n  Prepare();\n  memset(f, 63, sizeof (f)); f[0] = 0;\n  int all = (1 << cnt) - 1;\n  for (int i = 0; i < all; ++ i) {\n    if (f[i] > kInf) continue ;\n    for (int x = 1; x <= cnt; ++ x) {\n      if ((1 << (x - 1)) & i) continue ;\n      for (int y = x + 1; y <= cnt; ++ y) { //\u6bcf\u6b21\u679a\u4e3e\u4e24\u4e2a 1 \u8f6c\u79fb\n        if ((1 << (y - 1)) & i) continue ;\n        GetMin(f[i | (1 << (x - 1)) | (1 << (y - 1))], \n               f[i] + cost[x][y]);\n      }\n    }\n  }\n  printf(\"%d\", f[all] < kInf ? f[all] : - 1);\n  return 0;\n}\n``` ",
        "postTime": 1594599746,
        "uid": 186186,
        "name": "\u7075\u4e4c\u8def\u7a7a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF79D \u3010Password\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684 $01$ \u5e8f\u5217\uff0c\u521d\u59cb\u5168\u4e3a $0$\u3002\u7ed9\u5b9a $l$ \u4e2a\u64cd\u4f5c\uff0c\u7531\u4e00\u4e2a\u6570 $a$ \u8868\u793a\uff0c\u8868\u793a\u53ef\u4ee5\u5c06\u4e00\u6bb5\u8fde\u7eed\u7684\u957f\u5ea6\u4e3a $a$ \u7684\u6240\u6709\u6570\u5168\u90e8\u53d6\u53cd\u3002\u8981\u6c42\u4ec5\u4f7f\u5f97 $k$ \u4e2a\u4f4d\u7f6e\u4e3a $1$\uff0c\u6c42\u6700\u5c0f\u64cd\u4f5c\u6570\u3002$n \\leq 10^5,l \\leq 100,k \\leq 10$\u3002\n\n\u9996\u5148\u4fee\u6539\u4e00\u6bb5\u663e\u7136\u4e0d\u4f18\u96c5\uff0c\u4e8e\u662f\u5dee\u5206\u3002\u53d6\u53cd $[l,r]$ \u76f8\u5f53\u4e8e\u5728\u5dee\u5206\u6570\u7ec4\u4e0a\u53d6\u53cd $a'_l,a'_{r+1}$\u3002\n\n\u8003\u8651\u6784\u9020\u521d\u59cb\u7684\u5dee\u5206\u6570\u7ec4\u3002\u6ce8\u610f\u5230\u6574\u4e2a\u64cd\u4f5c\u662f\u53ef\u9006\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u6210\u521d\u59cb\u6709 $k$ \u4e2a\u4f4d\u7f6e\u662f $1$\uff0c\u76ee\u6807\u662f\u5168\u90e8\u53d8\u6210 $0$\u3002\u90a3\u4e48\u6709 $k$ \u4e2a\u4f4d\u7f6e\u4e3a $1$\uff0c\u76f8\u5f53\u4e8e\u5bf9 $k$ \u4e2a\u957f\u5ea6\u4e3a $1$ \u7684\u533a\u95f4\u53d6\u53cd\uff0c\u5957\u7528\u4e0a\u9762\u7684\u65b9\u6cd5\u3002\n\n\u6ce8\u610f\u5230 $1$ \u7684\u4e2a\u6570\u4e00\u5b9a\u662f\u5076\u6570\u4e2a\uff0c\u53c8\u663e\u7136\u6700\u4f18\u60c5\u51b5\u4e0b\u6211\u4eec\u4e00\u5b9a\u4f1a\u6bcf\u6b21\u6d88\u6389\u4e24\u4e2a $1$\u3002\u6ce8\u610f\u5230 $k$ \u5f88\u5c0f\uff0c\u4e8e\u662f\u53ef\u4ee5\u76f4\u63a5\u4fdd\u5b58\u4e0b\u6240\u6709\u7684 $1$\uff0c\u76f4\u63a5\u72b6\u538b dp\u3002\u6bcf\u6b21\u679a\u4e3e\u6d88\u6389\u4e24\u4e2a $1$\uff08\u6709\u4e00\u4e2a\u5c0f\u4f18\u5316\u662f\uff0c\u53ea\u679a\u4e3e\u4e00\u4e2a $1$\uff0c\u7136\u540e\u548c\u6700\u4f4e\u4f4d\u4e0a\u7684 $1$ \u6d88\u53bb\uff0c\u53cd\u6b63\u6ca1\u6709\u5f71\u54cd\uff09\u3002\n\n\u8003\u8651 dp \u8fc7\u7a0b\uff0c\u6709\u4e00\u4e2a\u5730\u65b9\u662f\uff0c\u6211\u4eec\u8981\u5c06\u7b2c $i$ \u4e2a $1$ \u539f\u6765\u7684\u4f4d\u7f6e\u548c\u7b2c $j$ \u4e2a $1$ \u539f\u6765\u7684\u4f4d\u7f6e\u53d6\u53cd\u3002\u8003\u8651\u5982\u4f55\u8ba1\u7b97\u8fd9\u4e2a\u4e1c\u897f\u3002\n\n\u663e\u7136\u80cc\u5305\u4e0d\u884c\uff08\u56e0\u4e3a\u80cc\u5305\u4e0a\u9650\u663e\u7136\u4e0d\u5b9a\uff0c\u800c\u4f60\u4e0d\u80fd\u4e00\u8fb9\u52a0\u4e00\u904d\u51cf\u53bb\u6d88\u53bb\u4e0a\u9650\u5f71\u54cd\uff09\u3002\u53ea\u80fd\u8003\u8651\u66b4\u529b\u7684\u505a\u6cd5\u3002\n\n\u6ce8\u610f\u5230\uff0c\u6211\u4eec\u5bf9\u4e00\u4e2a $s$ \u64cd\u4f5c\uff0c\u5c06 $s$ \u4f5c\u4e3a\u8d77\u70b9\u6216\u8005\u7ec8\u70b9\u9009\u62e9\u4e00\u6bb5 $a_i$ \u53d6\u53cd\uff08\u76f8\u5f53\u4e8e\u53d6\u53cd $s$ \u548c $s \u00b1 a_i$\uff09\uff0c\u90a3\u4e48\u76f8\u5f53\u4e8e\u6709\u8fb9\u6743\u4e3a $1$ \u7684\u8fb9 $s \\to s \u00b1 a_i$\uff08\u5982\u679c\u5408\u6cd5\uff09\uff0c\u4e8e\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u53ef\u80fd\u7684\u8d77\u70b9\uff08\u4e5f\u5c31\u662f\u5dee\u5206\u6570\u7ec4\u4e2d $1$ \u7684\u4f4d\u7f6e\uff09\u90fd\u505a\u4e00\u904d $01$ \u6700\u77ed\u8def\u5c31\u884c\u3002\n\n\u4ee3\u7801\u7ec6\u8282\u4e0d\u591a\uff0c\u76f4\u63a5\u5199\u5c31\u884c\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n// s[105], a[25];\nbool vis[40005];\nint n,k,l,a[40005],s[105],p[25],dis[40005],len,f[25][25],dp[(1<<23)];\nvoid bfs()\n{\n\tfor(int i=1;i<=len;++i)\n\t{\n\t\tmemset(dis,63,sizeof dis);\n\t\tmemset(vis,false,sizeof vis);\n\t\tint S=p[i];\n\t\tdis[S]=0,vis[S]=true;\n\t\tqueue<int> Q;\n\t\tQ.push(S);\n\t\twhile(!Q.empty())\n\t\t{\n\t\t\tint now=Q.front();\n\t\t\tQ.pop();\n\t\t\tfor(int j=1;j<=l;++j)\n\t\t\t{\n\t\t\t\tint to;\n\t\t\t\tto=now+s[j];\n\t\t\t\tif(to<=n+1 && !vis[to])\n\t\t\t\t{\n\t\t\t\t\tdis[to]=dis[now]+1;\n\t\t\t\t\tvis[to]=true;\n\t\t\t\t\tQ.push(to);\n\t\t\t\t}\n\t\t\t\tto=now-s[j];\n\t\t\t\tif(to>=1 && !vis[to])\n\t\t\t\t{\n\t\t\t\t\tdis[to]=dis[now]+1;\n\t\t\t\t\tvis[to]=true;\n\t\t\t\t\tQ.push(to);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int j=1;j<=len;++j)\tf[i][j]=dis[p[j]];\n\t}\n}\nint lowbit(int x){return x&(-x);}\nint main(){\n\tscanf(\"%d %d %d\",&n,&k,&l);\n\tfor(int i=1;i<=k;++i)\n\t{\n\t\tint x;\n\t\tscanf(\"%d\",&x);\n\t\ta[x]^=1,a[x+1]^=1;\n\t}\n\tfor(int i=1;i<=l;++i)\tscanf(\"%d\",&s[i]);\n\tfor(int i=1;i<=n+1;++i)\tif(a[i])\tp[++len]=i;\n\tbfs();\n\tmemset(dp,63,sizeof dp);\n\tint U=(1<<len)-1;\n\tdp[U]=0;\n\tint inf=dp[0];\n\tfor(int S=U;S;--S)\n\t{\n\t\tint st=lowbit(S),pos=0;\n\t\twhile(st)\tst>>=1,++pos;\n\t\tfor(int i=pos+1;i<=len;++i)\n\t\t{\n\t\t\tif(!((S>>(i-1))&1))\tcontinue;\n\t\t\tint T=S^(1<<(pos-1))^(1<<(i-1));\n\t\t\tdp[T]=min(dp[T],dp[S]+f[pos][i]);\n\t\t}\n\t}\n\tprintf(\"%d\",dp[0]==inf?-1:dp[0]);\n\treturn 0;\n}\n```",
        "postTime": 1629533767,
        "uid": 184977,
        "name": "pomelo_nene",
        "ccfLevel": 9,
        "title": "\u4f60\u624d\u662f shaya"
    },
    {
        "content": "[Codeforces \u9898\u76ee\u4f20\u9001\u95e8](https://codeforces.com/contest/79/problem/D) & [\u6d1b\u8c37\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF79D)\n\n\u4e00\u4e2a\u8fdc\u53e4\u573a\u7684 *2800\uff0c\u5728\u73b0\u5728\u770b\u6765\u5927\u6982 *2600 \u5de6\u53f3\u7f62\uff08\n\n\u4e0d\u8fc7\u6211\u5199\u8fd9\u7bc7\u9898\u89e3\u7684\u539f\u56e0\u5927\u6982\u662f\u56e0\u4e3a\u8fd9\u9898\u6559\u4f1a\u4e86\u6211\u4e00\u4e2a\u5957\u8def\u7f62\uff08\n\n\u9996\u5148\u6ce8\u610f\u5230\u6bcf\u6b21\u7ffb\u8f6c\u7684\u662f\u4e00\u4e2a**\u533a\u95f4**\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5b83\u7684**\u5dee\u5206\u5e8f\u5217**\uff08\u8fd9\u5c31\u662f\u8fd9\u9898\u6559\u4f1a\u6211\u7684\u5957\u8def\uff0c\u78b0\u5230\u533a\u95f4\u64cd\u4f5c\u6709\u5173\u7684\u95ee\u9898\u4e0d\u59a8\u8003\u8651\u5b83\u7684\u5dee\u5206\u5e8f\u5217\uff0c\u8fd9\u6837\u53ef\u5c06\u5f71\u54cd\u591a\u4e2a\u5143\u7d20\u7684\u533a\u95f4\u64cd\u4f5c\u8f6c\u5316\u4e3a $2$ \u4e2a\u5355\u70b9\u64cd\u4f5c\uff0c\u5176\u5b9e\u7b2c\u4e00\u6b21\u78b0\u89c1\u8fd9\u4e2a\u5957\u8def\u662f\u5728[\u8fd9\u4e2a\u9898](https://www.luogu.com.cn/problem/AT4831)\uff0c\u53ef\u662f\u7531\u4e8e\u5f53\u65f6\u6bd4\u8f83 naive \u6ca1\u80fd\u53ca\u65f6\u8865\u9898\u5e76\u6574\u7406\u8fd9\u4e9b\u65b9\u6cd5\uff09\uff0c\u90a3\u4e48\u6bcf\u6b21\u64cd\u4f5c\u663e\u7136\u662f\u5c06\u5dee\u5206\u5e8f\u5217\u4e0a\u4e24\u4e2a\u5355\u70b9\u8fdb\u884c\u7ffb\u8f6c\uff0c\u800c\u7ffb\u8f6c\u7684\u4e24\u4e2a\u5355\u70b9\u7684\u8ddd\u79bb\u6070\u597d\u7b49\u4e8e\u64cd\u4f5c\u533a\u95f4\u7684\u957f\u5ea6\uff0c\u4e8e\u662f\u73b0\u5728\u95ee\u9898\u8f6c\u5316\u4e3a\uff1a\u4f60\u6709\u4e00\u4e2a\u521d\u59cb\u4e3a $0$ \u7684\u957f\u5ea6\u4e3a $n+1$ \u7684\u5e8f\u5217 $a$\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9\u4e24\u4e2a\u5355\u70b9\u5e76\u5c06\u5b83\u4eec\u7684\u72b6\u6001\u7ffb\u8f6c\uff0c\u6ee1\u8db3\u8fd9\u4e24\u4e2a\u5355\u70b9\u7684\u8ddd\u79bb\u5c5e\u4e8e\u67d0\u4e2a\u96c6\u5408 $S$\uff0c\u8981\u6c42\u6700\u5c11\u591a\u5c11\u6b21\u64cd\u4f5c\u5c06\u5e8f\u5217\u53d8\u4e3a\u7ed9\u5b9a\u5e8f\u5217 $a'$\u3002\n\n\u8003\u8651\u600e\u6837\u89e3\u51b3\u8f6c\u5316\u540e\u7684\u95ee\u9898\uff0c\u9996\u5148\u53d6\u4e24\u4e2a\u5355\u70b9\u5e76\u7ffb\u8f6c\u663e\u7136\u662f\u4e0d\u5f71\u54cd $1$ \u7684\u4e2a\u6570\u7684\u5947\u5076\u6027\u7684\uff0c\u56e0\u6b64\u5982\u679c $1$ \u7684\u4e2a\u6570\u662f\u5947\u6570\u90a3\u76f4\u63a5 $-1$ \u5373\u53ef\uff0c\u5426\u5219\u663e\u7136\u6211\u4eec\u4f1a\u5c06\u8fd9\u4e9b $1$ \u4e24\u4e24\u914d\u5bf9\uff0c\u5bf9\u4e8e\u540c\u4e00\u5bf9\u4e2d\u7684\u4e24\u4e2a\u4f4d\u7f6e $x,y$\uff0c\u6211\u4eec\u4f1a\u4ee5\u5982\u4e0b\u65b9\u5f0f\u8ba9 $x,y$ \u4e0a\u7684\u6570\u90fd\u53d8\u4e3a $0$\uff1a\n\n> \u91cd\u590d\u4ee5\u4e0b\u6b65\u9aa4\u82e5\u5e72\u6b21\uff1a\n>\n> - \u9009\u62e9\u4e00\u4e2a\u957f\u5ea6 $l\\in S$ \u5e76\u5c06 $x$ \u4e0e $x+l$ \u6216 $x-l$ \u540c\u65f6\u7ffb\u8f6c\uff0c\u8fd9\u6837\u5373\u53ef\u5c06 $x$ \u4e0a\u7684 $1$ \u8f6c\u79fb\u5230 $x+l$ \u6216 $x-l$ \u4e0a\u3002\n>\n> \u76f4\u5230 $x+l=y\\lor x-l=y$\n\n\u6211\u4eec\u8bb0 $d_{x,y}$ \u4e3a\u5c06 $x,y$ \u4e0a\u7684\u6570\u53d8\u4e3a $0$ \u7684\u6700\u5c0f\u6b65\u9aa4\uff0c\u90a3\u4e48\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u4ee5\u6bcf\u4e2a $1$ \u4e3a\u8d77\u70b9\u8fdb\u884c\u4e00\u904d BFS \u6c42\u51fa\u6240\u6709 $d_{x,y}$\u3002\u6ce8\u610f\u5230\u6b64\u9898 $k\\le 10$\uff0c\u56e0\u6b64\u5dee\u5206\u5e8f\u5217\u4e0a $1$ \u7684\u4e2a\u6570 $\\le 20$\uff0c\u6545\u8003\u8651\u72b6\u538b $dp$\uff0c$dp_S$ \u8868\u793a\u5c06 $S$ \u4e2d\u7684 $1$ \u53d8\u4e3a $0$ \u7684\u6700\u5c0f\u4ee3\u4ef7\uff0c\u8f6c\u79fb\u5c31\u679a\u4e3e\u4e24\u4e2a $x,y\\notin S$ \u7136\u540e $dp_{S\\cup\\{x\\}\\cup\\{y\\}}\\leftarrow dp_S+d_{x,y}$ \u5373\u53ef\u3002\n\n~~\u636e\u8bf4\u6709\u66f4\u4f18\u79c0\u7684\u4e8c\u5206\u56fe\u6700\u5c0f\u6743\u5b8c\u7f8e\u5339\u914d\u7684\u505a\u6cd5\uff1fi \u4e86 i \u4e86\uff0c\u53ef\u60dc\u6211\u61d2\u764c\u7206\u53d1\u61d2\u5f97\u5199\u4e86~~\n\n\u590d\u6742\u5ea6 $2^kk^2+nmk$\uff0c\u5176\u4e2d $k=20$\u3002\n\n```cpp\nconst int MAXN=1e4;\nconst int MAXM=100;\nconst int MAXK=20;\nconst int MAXP=1<<20;\nconst int INF=0x3f3f3f3f;\nint n,k,m,a[MAXN+5],b[MAXN+5],l[MAXM+5],id[MAXN+5],pos[MAXK+5];\nint dis[MAXN+5],d[MAXK+5][MAXK+5],cnt;\nvoid bfs(int s){\n\tqueue<int> q;memset(dis,-1,sizeof(dis));\n\tdis[s]=d[id[s]][id[s]]=0;q.push(s);\n\twhile(!q.empty()){\n\t\tint x=q.front();q.pop();\n\t\tif(id[x]) d[id[s]][id[x]]=dis[x];\n\t\tfor(int i=1;i<=m;i++){\n\t\t\tif(x+l[i]<=n+1){\n\t\t\t\tif(!~dis[x+l[i]]) dis[x+l[i]]=dis[x]+1,q.push(x+l[i]);\n\t\t\t} if(x-l[i]>=1){\n\t\t\t\tif(!~dis[x-l[i]]) dis[x-l[i]]=dis[x]+1,q.push(x-l[i]);\n\t\t\t}\n\t\t}\n\t}\n}\nint dp[MAXP+5];\nint main(){\n\tscanf(\"%d%d%d\",&n,&k,&m);\n\tfor(int i=1,x;i<=k;i++) scanf(\"%d\",&x),a[x]=1;\n\tfor(int i=1;i<=m;i++) scanf(\"%d\",&l[i]);\n\tfor(int i=1;i<=n+1;i++) b[i]=a[i]^a[i-1];\n\tfor(int i=1;i<=n+1;i++) if(b[i]) id[i]=++cnt,pos[cnt]=i;\n\tmemset(d,63,sizeof(d));\n\tfor(int i=1;i<=n+1;i++) if(id[i]) bfs(i);\n\tmemset(dp,63,sizeof(dp));dp[0]=0;\n//\tprintf(\"%d\\n\",cnt);\n//\tfor(int i=1;i<=cnt;i++) for(int j=1;j<=cnt;j++)\n//\t\tprintf(\"%d%c\",d[i][j],\" \\n\"[j==cnt]);\n\tfor(int i=0;i<(1<<cnt);i++){\n\t\tif(dp[i]>=INF) continue;\n\t\tfor(int j=1;j<=cnt;j++) for(int l=1;l<j;l++)\n\t\t\tif((~i>>j-1&1)&&(~i>>l-1&1))\n\t\t\t\tchkmin(dp[i|(1<<j-1)|(1<<l-1)],dp[i]+d[j][l]);\n\t} printf(\"%d\\n\",(dp[(1<<cnt)-1]>=INF)?-1:dp[(1<<cnt)-1]);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1625238618,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF79D Password"
    }
]