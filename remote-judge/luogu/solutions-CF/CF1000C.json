[
    {
        "content": "## \u5dee\u5206\u601d\u60f3\u592a\u91cd\u8981\u4e86\n\n\u628a\u6bcf\u4e00\u6761\u7ebf\u6bb5\u770b\u6210\u4e24\u4e2a\u7aef\u70b9\uff0c\u5de6\u7aef\u70b9\u4e3a1\u53f3\u7aef\u70b9\u4e3a-1\n\n\u628a\u8fd9\u4e9b\u7ebf\u6bb5\u6309\u5de6\u7aef\u70b9\u6392\u5e8f\uff0c\u7528\u4e00\u4e2acnt\u7ef4\u62a4\u5f53\u524d\u533a\u95f4\u4e0a\u6709\u591a\u5c11\u6761\u7ebf\u6bb5\uff0c\u9047\u5230\u5de6\u7aef\u70b9+1\uff0c\u9047\u5230\u53f3\u7aef\u70b9-1\n\n\u76f4\u63a5\u7528map\u5b58\u50a8\uff0cLambda\u8868\u8fbe\u5f0f\u904d\u5386\u5c31\u597d\u4e86\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <complex>\n#include <algorithm>\n#include <climits>\n#include <queue>\n#include <map>\n#include <set>\n#include <vector>\n#include <iomanip>\n#define A 1000010\n#define B 2010\n\nusing namespace std;\ntypedef long long ll;\nint n;\nll l, r, ans[A], cnt, tmp;\nmap<ll, ll> m;\n\nint main(int argc, char const *argv[]) {\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> l >> r;\n\t\tm[l]++; m[++r]--; //\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48++r\u7684\u53bb\u5b66\u5dee\u5206\n\t}\n\tfor_each(m.begin(), m.end(), [] (const pair<ll, ll> &it) { //\u4e0d\u9700\u8981\u7406\u89e3\uff0c\u77e5\u9053\u662f\u904d\u5386\u5c31\u597d\n\t\tans[cnt] += it.first - tmp;\n\t\ttmp = it.first;\n\t\tcnt += it.second;\n\t});\n\tfor (int i = 1; i <= n; i++) cout << ans[i] << \" \";\n\treturn 0;\n}\n```",
        "postTime": 1545382318,
        "uid": 78064,
        "name": "\u826f\u6708\u6faa\u4e8c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1000C \u3010Covered Points Count\u3011"
    },
    {
        "content": "\u6211\u5728\u505a\u8fd9\u9053\u9898\u65f6\uff0c\u4e4d\u4e00\u770b\uff0c\u8bf6\uff0c\u8fd9\u4e0d\u662f\u4e00\u4e2a\u524d\u7f00\u548c\u626b\u4e00\u904d\u5417\uff1f\u4e8e\u662f\u6211\u5c31\u975e\u5e38\u6109\u5feb\u7684\u6253\u4e86\u4e00\u904d\u3002\u3002\u3002\u7136\u540e\u5c31 GG \u4e86\u3002\n\nRE \u5b8c\u4e4b\u540e\uff0c\u6211\u518d\u53bb\u770b\u4e86\u4e00\u904d\u6570\u636e\u8303\u56f4 -- WOC\uff0c\u4e3a\u4ec0\u4e48 l\uff0cr \u662f 1e18\uff1f\u597d\u5427\uff0c\u90a3\u8fd9\u9053\u9898\u8fd8\u6ca1\u6709\u60f3\u8c61\u4e2d\u7684\u90a3\u4e48\u6c34\u3002\u3002\u3002\n\n\u4e0d\u8fc7\u5f88\u5feb\u5927\u5bb6\u5c31\u80fd\u6ce8\u610f\u5230\uff1an \u53ea\u6709 20 \u4e07\u3002\u8fd9\u8bf4\u660e\u4e86\u4ec0\u4e48\u5462\uff1f\u8bf4\u660e\u524d\u7f00\u548c\u6539\u53d8\u7684\u8282\u70b9\u6700\u591a\u53ea\u6709 40 \u4e07\u4e2a\u3002\u90a3\u4e48\u6211\u4eec\u628a\u8fd9\u4e9b\u8282\u70b9\u5b58\u8d77\u6765\u518d\u4e00\u6392\u5e8f\uff0c\u7136\u540e\u626b\u4e00\u904d\u4e0d\u5c31\u5f97\u4e86\uff1f\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u7528\u4e00\u4e2a now \u8bb0\u5f55\u5f53\u524d\u6bb5\u88ab\u8986\u76d6\u4e86\u51e0\u6b21\uff0c\u7136\u540e\u679a\u4e3e\u6392\u5e8f\u540e\u524d\u7f00\u548c\u6539\u53d8\u7684\u8282\u70b9\uff0c\u628a\u6bcf\u6b21\u6539\u53d8\u4e4b\u524d\u7684\u4e00\u6bb5\u4e2d\u7684\u8282\u70b9\u6570\u52a0\u5165\u8986\u76d6\u6570\u4e3a now \u7684\u7b54\u6848\uff0c\u6700\u540e\u4fee\u6539 now \u7684\u503c\u5373\u53ef\u3002\u8fd8\u8981\u6ce8\u610f\u4e00\u70b9\uff1a\u6bcf\u4e00\u4e2a\u7ebf\u6bb5\u7684\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\u7684\u8282\u70b9\u7c7b\u578b\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u9047\u5230\u5de6\u7aef\u70b9\u8981 now++\uff0c\u53f3\u7aef\u70b9\u5219\u8981 now--\u3002\n\n\u4e0b\u9762\u9644\u4e0a\u4ee3\u7801\u5427\uff1a\n\n```\n#include<iostream>\n#include<algorithm>\n#include<vector>\nusing namespace std;\nint n;long long ans[200005];\nstruct nod{\n\tlong long p;int k;\t//p \u4ee3\u8868\u8282\u70b9\u4e0b\u6807\uff0ck \u4ee3\u8868\u8282\u70b9\u7c7b\u578b\n};\nbool cmp(nod i,nod j){return i.p==j.p?i.k<j.k:i.p<j.p;}\nvector<nod> q;\t//\u7528 vector \u4fdd\u5b58\u8282\u70b9\nint main()\n{\n\tlong long l,r;\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t\tcin>>l>>r,q.push_back((nod){l,1}),q.push_back((nod){r+1,-1});\n\tsort(q.begin(),q.end(),cmp);\n\tlong long last=0,now=0;\n\tfor(int i=0;i<q.size();i++)\n\t{\n\t\tlong long nex=q[i].p;\t//\u679a\u4e3e\u6539\u53d8\u7684\u8282\u70b9\n\t\tans[now]+=q[i].p-last,now+=q[i].k,last=nex;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tcout<<ans[i]<<\" \";\t//\u8f93\u51fa\n}\n```",
        "postTime": 1530611333,
        "uid": 41262,
        "name": "SSHhh",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1000C \u3010Covered Points Count\u3011"
    },
    {
        "content": "\u521a\u521a\u770b\u5230\u8fd9\u9898\u65f6\u611f\u89c9\u7279\u522b\u96be...\u7ecf\u8fc7\u5927\u7ea610\u5206\u949f\u7684\u601d\u8003....\n\u5440 ~~\u6c34\u9898QAQ~~ \u4e0d\u591a\u8bf4\u4e86\u4e0a\u4ee3\u7801\u5440QAQ\n```\n#include<iostream>//\u6807\u51c6\u6a21\u677f\u5440QAQ\n#include<cstdio>\n#include<cmath>\n#include<string.h>\n#include<algorithm>\n#define For(i,f,l) int pd=(f<l)*1+(l<=f)*-1;for(i=f;i!=l+pd;i+=pd)\nusing namespace std;\nvoid read(long long &n)\n{\n  long long x=0;int w=1; char ch=0;\n  while(!isdigit(ch)){if(ch=='-')w=-1;if(ch=='+')w=1;ch=getchar();}\n  while(isdigit(ch))x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\n  n=w*x;\n}\nvoid write(long long x)\n{\n  if(x<0){putchar('-');x=-x;}\n  if(x>9)write(x/10);\n  putchar(x%10+'0');\n}\nstruct Sort//\u5b9a\u4e49\u4e00\u4e2a\u7c7b\n{\n  long long w,a;\n  //w\u4e3a\u4f4d\u7f6e,a\u4e3a\u505a\u7684\u64cd\u4f5c\n}p[1000000];\nbool cmp(Sort &a,Sort &b)\n{\n  return a.w<b.w;//\u6309w\u7684\u5927\u5c0f\u6392\u5e8f\n}\nint i,j,k,sum=0,m;\nlong long ans[1000000],l,r,n,now=0;//\u6ce8\u610f\u5f00long long\nint main()\n{\n  read(n);\n  for(i=1;i<=n;i++)\n  {\n  \tread(l);read(r);\n  \tsum++;\n    p[sum].w=l;\n  \tp[sum].a=1;//\u533a\u95f4\u8d77\u59cb\u4f4d\u7f6e\u4e3a++\n  \tsum++;\n  \tp[sum].w=r+1;//\u7ed3\u675f\u4f4d\u7f6e\u4e3a--\n  \tp[sum].a=-1;\n  }\n  sort(p+1,p+sum+1,cmp);//\u6392\u5e8f\n  l=p[1].w;//\u5f53\u524d\u4f4d\u7f6e\n  now=p[1].a;//\u5f53\u524d\u8986\u76d6\u5c42\u6570\n  for(i=2;i<=sum;i++)\n  {\n  \tans[now]+=p[i].w-l;//\u5f53\u524d\u5c42\u6570\u7684\u4e2a\u6570\u4e3a\u524d\u540e\u64cd\u4f5c\u4f4d\u7f6e\u53ea\u5dee\n  \tl=p[i].w;\n  \tnow+=p[i].a;\n  }\n  for(i=1;i<=n;i++)cout<<ans[i]<<\" \";//\u8f93\u51fa\u5440QAQ\n  return 0;\n}\n```\n\u7b97\u662f\u4e00\u9053\u5927\u6c34\u9898\u5440QAQ...\n\u5efa\u8bae\u53bb\u505a\u4e00\u4e0b[\u501f\u6559\u5ba4](https://www.luogu.org/problemnew/show/P1083),\u7528\u4e86\u5dee\u4e0d\u591a\u7684\u601d\u60f3\u5440...",
        "postTime": 1548722947,
        "uid": 86625,
        "name": "Limit",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1000C \u3010Covered Points Count\u3011"
    },
    {
        "content": "\u5176\u5b9e\u53ea\u8981\u79bb\u6563\u5dee\u5206\u641e\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u2026\u2026\u7136\u800c\u6211\u5728\u770b\u5230\u8fd9\u4e00\u9898\u7684\u65f6\u5019\u7b2c\u4e00\u60f3\u6cd5\u53c8\u662f\u533a\u95f4\u52a0\u4ec0\u4e48\u7684\uff0c\u4e8e\u662f\u5c31\u5927\u529b\u641e\u4e86\u4e2a\u79bb\u6563 + \u7ebf\u6bb5\u6811\uff0c\u505a\u6cd5\u4e5f\u5dee\u4e0d\u591a\uff0c\u53d6\u51fa\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u7d2f\u52a0\u6b21\u6570\uff0c\u7136\u540e\u51cf\u53bb\u8fd9\u4e2a\u4f4d\u7f6e\u4f5c\u4e3a**\u53f3\u7aef\u70b9**\u7684\u6b21\u6570\uff0c\u5f97\u5230\u7684\u5c31\u662f\u4ee5\u5b83\u4e3a\u5de6\u7aef\u70b9\u7684\u53f3\u4fa7\u4e00\u6761\u7ebf\u6bb5\u5bf9\u5e94\u7684\u7d2f\u52a0\u503c\uff0c\u5b58\u4e00\u4e0b\u5c31\u884c\u4e86\u3002  \n\uff08\u5b9e\u5728\u592a\u66b4\u529b\u4e86\uff0c\u6211\u4f5b\u4e86\uff09\n```cpp\n#include<bits/stdc++.h>\n#define MAXN 400005\n#define reg register\n#define inl inline\n#define int long long\nusing namespace std;\nstruct Segment\n{\n\tint x,y;\n}a[MAXN];\nint n,node[MAXN],tot,ans[MAXN],duan[MAXN];\nint t[MAXN<<2],tag[MAXN<<2];\nmap <int,int> mp;\ninl void PushUp(reg int rt)\n{\n\tt[rt]=t[rt<<1]+t[rt<<1|1];\n}\ninl void PushDown(reg int rt,reg int len)\n{\n\tif(tag[rt])\n\t{\n\t\tt[rt<<1]+=tag[rt]*(len-(len>>1));\n\t\tt[rt<<1|1]+=tag[rt]*(len>>1);\n\t\ttag[rt<<1]+=tag[rt];\n\t\ttag[rt<<1|1]+=tag[rt];\n\t\ttag[rt]=0;\n\t}\n}\nvoid Modify(reg int rt,reg int l,reg int r,reg int tl,reg int tr,reg int val)\n{\n\tif(tl<=l && r<=tr)\n\t{\n\t\tt[rt]+=val;\n\t\ttag[rt]+=val;\n\t\treturn;\n\t}\n\treg int mid=(l+r)>>1;\n\tif(tl<=mid) Modify(rt<<1,l,mid,tl,tr,val);\n\tif(tr>mid) Modify(rt<<1|1,mid+1,r,tl,tr,val);\n\tPushUp(rt);\n}\nint Query(reg int rt,reg int l,reg int r,reg int tl,reg int tr)\n{\n\tif(tl<=l && r<=tr) return t[rt];\n\treg int mid=(l+r)>>1,res=0;\n\tPushDown(rt,r-l+1);\n\tif(tl<=mid) res+=Query(rt<<1,l,mid,tl,tr);\n\tif(tr>mid) res+=Query(rt<<1|1,mid+1,r,tl,tr);\n\treturn res;\n}\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin>>n;\n\tfor(reg int i=1;i<=n;i++)\n\t{\n\t\tcin>>a[i].x>>a[i].y;\n\t\tnode[++tot]=a[i].x;\n\t\tnode[++tot]=a[i].y;\n\t}\n\tsort(node+1,node+tot+1);\n\ttot=unique(node+1,node+tot+1)-node-1;\n\tfor(reg int i=1;i<=tot;i++) mp[node[i]]=i;\n\tfor(reg int i=1;i<=n;i++) duan[mp[a[i].y]]++;\n\tfor(reg int i=1;i<=n;i++) Modify(1,1,n*2,mp[a[i].x],mp[a[i].y],1);\n\tfor(reg int i=1;i<tot;i++) ans[Query(1,1,n*2,i,i)-duan[i]]+=node[i+1]-node[i]-1;\n\tfor(reg int i=1;i<=tot;i++) ans[Query(1,1,n*2,mp[node[i]],mp[node[i]])]++;\n\tfor(reg int i=1;i<=n;i++) cout<<ans[i]<<\" \";\n\treturn 0;\n}\n```",
        "postTime": 1587888239,
        "uid": 23243,
        "name": "VenusM1nT",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1000C \u3010Covered Points Count\u3011"
    },
    {
        "content": "## \u9898\u76ee\u610f\u601d\n\n\u7ed9\u4f60 $n$ \u4e2a\u533a\u95f4\uff0c\u6c42\u88ab\u8fd9\u4e9b\u533a\u95f4\u8986\u76d6\u5c42\u6570\u4e3a $k(k<=n)$ \u7684\u70b9\u7684\u4e2a\u6570\n\n\u8f93\u5165\u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570 $n(n<=2\u00d710^5)$ ,\u4ee5\u4e0b $n$ \u884c\uff0c\u6bcf\u884c\u6709\u4e24\u4e2a\u6574\u6570\uff0c\u5373\u8fd9\u4e2a\u533a\u95f4\u7684\u5de6\u53f3\u7aef\u70b9 $l$,$r(0<=l<=r<=10^{18})$\u3002\n\n\u8981\u6c42\u8f93\u51fa $n$ \u4e2a\u6574\u6570\uff0c\u5373\u6bcf\u4e2a\u88ab\u8986\u76d6\u5c42\u6570\u5bf9\u5e94\u7684\u70b9\u7684\u4e2a\u6570\n\n## \u601d\u8def\n\n\u5927\u5bb6\u53ef\u4ee5\u81ea\u884c\u5bf9\u6837\u4f8b\u753b\u4e00\u5f20\u56fe\u6765\u7406\u89e3\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $[l_i,r_i]$\uff0c\u53ef\u4ee5\u8ba9 $[l_i,\u221e)+1$\uff0c\u540c\u65f6 $[r_i +1,\u221e)-1$\u3002\u8fd9\u6837\u6b63\u597d\u4fdd\u8bc1\u4e86\u6bcf\u4e00\u6bb5\u4e2d\u7684\u6bcf\u4e00\u4e2a\u70b9\u90fd\u88ab\u8ba1\u7b97\u4e00\u6b21\u3002\u8fd9\u4e2a\u5de5\u4f5c\u53ef\u4ee5\u5728\u8f93\u5165\u7684\u540c\u65f6\u5b8c\u6210\u3002\u7528\u4e00\u4e2a $pair$ \u6570\u7ec4\u6765\u5b58\u8fd9\u4e9b\u64cd\u4f5c\u3002\n\n\u7136\u540e\u628a $pair$ \u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\uff0c\u4e00\u6bb5\u4e00\u6bb5\u64cd\u4f5c\u3002\u7528\u53d8\u91cf $cnt$ \u6765\u5224\u65ad\u8fd9\u4e2a\u533a\u95f4\u5185\u70b9\u7684\u8986\u76d6\u6b21\u6570\uff1a\u6bcf\u6b21\u52a0\u4e0a\u8fd9\u4e2a $pair$ \u4e2d\u7684\u7b2c\u4e8c\u4e2a\u503c\u5c31\u884c\u3002\u7b54\u6848\u53ef\u4ee5\u7528\u4e00\u4e2a\u6570\u7ec4\u4fdd\u5b58\uff0c\u6ce8\u610f\u6bcf\u6b21\u52a0\u4e0a\u7684\u662f\u533a\u95f4\u90a3\u4e00\u6bb5\u70b9\u7684\u4e2a\u6570\u3002\n\n## \u4ee3\u7801\n\n\u63a5\u4e0b\u6765\u8d34\u65e0\u6ce8\u91ca\u4ee3\u7801\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define pll pair<long long,long long>\npll cl[400010];\nint n,i,c,cnt;\nlong long f[400010];\nint main(){\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    cin>>n;\n    for(i=1;i<=n;i++){\n    \tlong long l,r;\n    \tcin>>l>>r;\n    \tcl[++c]=pll(l,1);\n    \tcl[++c]=pll(r+1,-1);\n    }\n    sort(cl+1,cl+c+1);\n    for(i=1;i<=c;i++){\n    \tf[cnt]+=cl[i].first-cl[i-1].first;\n    \tcnt+=cl[i].second;\n    }\n    for(i=1;i<=n;i++)cout<<f[i]<<\" \";\n    return 0;\n}\n```\n## \u53e6\u89e3\u4ee3\u7801\n\n\u5927\u5bb6\u53ef\u4ee5\u5b66\u4e60\u4e00\u4e0b\u53e6\u4e00\u79cd\u601d\u8def\uff1a\u79bb\u6563\uff0c\u5dee\u5206\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nlong long l[200005],r[200005],x[400010],cnt[400010],res[200005];\nint main(){\n    int n;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++){\n        scanf(\"%lld%lld\",&l[i],&r[i]),r[i]++;\n        x[i*2-1]=l[i],x[i*2]=r[i];\n    }\n    sort(x+1,x+2*n+1);\n    for(int i=1;i<=n;i++){\n        int tl=lower_bound(x+1,x+2*n+1,l[i])-x,tr=lower_bound(x+1,x+2*n+1,r[i])-x;\n        cnt[tl]++,cnt[tr]--;\n    }\n    for(int i=1;i<=2*n;i++)cnt[i]+=cnt[i-1];\n    for(int i=1;i<=2*n;i++)res[cnt[i]]+=x[i+1]-x[i];\n    for(int i=1;i<=n;i++)printf(\"%lld%c\",res[i],\" \\n\"[i==n]);\n    return 0;\n}\n```\n",
        "postTime": 1648296832,
        "uid": 305424,
        "name": "yuheng_wang080904",
        "ccfLevel": 0,
        "title": "CF1000C"
    },
    {
        "content": "**Python \u9898\u89e3**\n\n[CF1000C Covered Points Count](https://www.luogu.com.cn/problem/CF1000C)\n\n~~\u65e2\u7136\u5230\u9ad8\u4e2d\u4e86\uff0c\u5c31\u8981\u597d\u597d\u5b66\u4e60 python~~ \n\n\u8fd9\u9053\u9898\u76f4\u63a5\u7528 Python \u505a\u65f6\u6709\u70b9\u9ebb\uff0c\u6700\u540e\u8fd8\u662f\u7a0d\u5fae\u53c2\u7167\u4e86\u4e00\u4e0b\u522b\u4eba\u7528\u7684\u6570\u636e\u7c7b\u578b\u624d\u89e3\u51b3\u4e00\u4e9b MLE \u548c TLE \u7684\u95ee\u9898\n\n\u9898\u76ee\u4f1a\u7ed9\u51fa\u4e00\u4e9b\u7ebf\u6bb5\u5728\u4e00\u4e2a\u8f83\u957f\u7684\u5750\u6807\u8f74\u4e0a\u8fdb\u884c\u8986\u76d6\u3002\n\n\u7136\u540e\u6211\u4eec\u8981\u7edf\u8ba1\u51fa\u4e0d\u540c\u8986\u76d6\u6b21\u6570\u7684\u70b9\u6570\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u5dee\u5206\uff0c\u56e0\u4e3a\u5750\u6807\u5927\u4f46\u662f\u603b\u5171\u7684\u4fee\u6539\u91cf\u66f4\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u7edf\u8ba1\u7684\u65f6\u5019\u53ef\u4ee5\u6839\u636e\u4fee\u6539\u8fc7\u7684\u70b9\u7684\u5750\u6807\u8fdb\u884c\u679a\u4e3e\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u7528 c++ \u4e2d\u7684 map \u5b58\u5dee\u5206\u6570\u7ec4\uff0c\u7136\u540e\u5bf9\u4e8e\u8f93\u5165\u6392\u5e8f\uff0c\u518d\u904d\u5386\u6392\u5b8c\u5e8f\u7684\u8f93\u5165\u6570\u7ec4\uff0c\u4e0d\u7528\u53bb\u7ba1\u91cd\u590d\u7684\u5750\u6807\uff0c\u4e0a\u4e00\u6b21\u7684\u503c\u52a0\u4e0a\u8fd9\u6b21\u5750\u6807\u5bf9\u5e94\u7684\u5dee\u5206\u6570\u7ec4\u7684\u503c\u53ef\u4ee5\u5f97\u51fa\u540e\u9762\u7684\u503c\u7684\u5927\u5c0f\uff0c\u800c\u8fd9\u6b21\u7684\u5750\u6807\u51cf\u53bb\u4e0a\u4e00\u6b21\u7684\u5750\u6807\u53ef\u4ee5\u5f97\u51fa\u4e24\u8005\u4e4b\u95f4\u503c\u4e0e\u4e0a\u4e00\u4e2a\u5750\u6807\u7684\u503c\u76f8\u540c\u7684\u70b9\u7684\u4e2a\u6570\u3002\n\n\u5982\u679c\u7528 Python \u5199\u8d77\u6765\u77ed\u4f46\u662f\u611f\u89c9\u9ebb\u70e6\uff08\uff1f\uff09\u3002\n\n\u8fd9\u4e2a defaultdict \u7528\u8d77\u6765\u8ddf c++ \u7684 map \u5dee\u4e0d\u591a\u3002\n\n\u8f93\u5165\u65f6\u7528 split \u5206\u5272\u3002\n\n```python\nl,r=map(int,input().split());\n```\n\n\u8fd9\u53e5\u8bdd\u6765\u5b9e\u73b0\u6b63\u5e38\u8bfb\u5165\u3002\n\nc++ \u7248\u7684\u592a\u597d\u5199\u4e86\u5c31\u4e0d\u5199\u4e86\u3002\n\n---\n\n```python\nfrom collections import*\nn=int(input())\nf=[0]*(n+1)\nd=defaultdict(int)\nfor i in range(0,n):\n l,r=map(int,input().split());d[l]+=1;d[r+1]-=1\ns=p=0\nfor k in sorted(d):#range(0,ff+2):\n f[s]+=k-p;s+=d[k];p=k\nfor i in range(1,n+1):\n print(f[i])\n```\n\n---\n\n\u611f\u8c22\u7ba1\u7406\u5458\u7684\u5ba1\u6838\u3002",
        "postTime": 1648110945,
        "uid": 194642,
        "name": "xiaozeyu",
        "ccfLevel": 5,
        "title": "[Python]CF1000C Covered Points Count"
    },
    {
        "content": "\n\u5176\u5b9e\u8fd9\u9053\u9898\u4e0d\u80fd\u76f4\u63a5\u5dee\u5206\u7684\uff0c\u4e0d\u7136\u7b49\u7740\u4f60\u7684\u5c31\u662f\u4e00\u7247\u57fa\u4f6c\u7d2b\uff0c\u56e0\u4e3a\u8fd9\u9898\u7684\u6570\u636e\u4f1a\u60ca\u5230\u4f60\u7684\uff0c$1 \\le l \\le r \\le 10^{18}$!\n\n\u5982\u679c\u4e0d\u80fd\u76f4\u63a5\u6a21\u62df\u5dee\u5206\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u9700\u8981\u8003\u8651\u5b58\u6709\u6548\u533a\u95f4\u7aef\u70b9\u6765\u590d\u76d8\u5dee\u5206\u8fc7\u7a0b\u4e86\u3002\n\n\n\u6211\u4eec\u518d\u6765\u56de\u987e\u4e00\u4e0b\u5dee\u5206\u7684\u5177\u4f53\u64cd\u4f5c\uff08\u9ed8\u8ba4\u533a\u95f4 $ +1 $\uff09\n\n```cpp\ncin >> l >> r;//\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\nsub[l]++; sub[r + 1]--;//\u5728\u5dee\u5206\u6570\u7ec4\u4e2d\u8fdb\u884c\u533a\u95f4\u589e\u52a0\u64cd\u4f5c\n```\n\u5176\u5b9e\u533a\u95f4\u7aef\u70b9\u6700\u91cd\u8981\u7684\u662f\u5b83\u7684\u4f4d\u7f6e\u4fe1\u606f\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u5b58\u6709\u6548\u8282\u70b9\u7684\u65f6\u5019\u53ea\u9700\u8981\u5b58\u5b83\u7684\u4f4d\u7f6e\u548c\u5b83\u662f\u5de6\u7aef\u70b9\u8fd8\u662f\u53f3\u7aef\u70b9\u884c\u4e86\uff08\u8282\u70b9\u7c7b\u578b\uff09\n\n#### \u8fd9\u91cc\u6ce8\u610f\u4e00\u4e0b\uff0c\u5dee\u5206\u65f6\u5728\u5de6\u7aef\u70b9 $+1$\uff0c\u53f3\u7aef\u70b9\u7684\u4e0b\u4e00\u4e2a\u70b9 $-1$\uff0c\u6240\u4ee5\u8bf4\u5de6\u7aef\u70b9\u7684 $type$ \u5b58 $1$\uff0c \u53f3\u7aef\u70b9\u7684\u4e0b\u4e00\u4e2a\u70b9\u7684 $type$ \u5b58 $-1$\uff08\u76f4\u63a5\u5b58\u53f3\u7aef\u70b9$+1$\uff09\uff0c\u8fd9\u6837\u6709\u5229\u4e8e\u4e0b\u4e00\u6b65\u904d\u5386\u3002\n\n#### \u7136\u540e\u628a\u6570\u7ec4\u6309\u4f4d\u7f6e\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5982\u679c\u4f4d\u7f6e\u76f8\u540c\uff0c\u5de6\u7aef\u70b9\u5728\u524d\uff0c\u53f3\u7aef\u70b9\u5728\u540e\u3002\n\n#### \u63a5\u4e0b\u6765\uff0c\u8fdb\u5165\u7b2c\u4e09\u6b65\uff0c\u904d\u5386\n\n\u5728\u904d\u5386\u65f6\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a $cnt$ \u53d8\u91cf\u8bb0\u5f55\u5f53\u524d\u88ab\u8986\u76d6\u7684\u5c42\u6570\uff0c\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u6876\u7684\u6570\u7ec4 $cnt$ \u9047\u5230\u7aef\u70b9\u65f6\u5c31\u52a0\u4e0a $type$\u3002\u5bf9\u4e8e\u6bcf\u4e24\u4e2a\u7aef\u70b9\u7684\u533a\u95f4\uff0c\u53ea\u8981\u6709 $cnt > 0$\uff0c\u5728\u6876\u6570\u7ec4\u6309\u9898\u76ee\u8981\u6c42\u8fdb\u884c\u7edf\u8ba1\uff1a\n\n```cpp\ntong[cnt] = r - l + 1;\n```\n\u968f\u540e\u8f93\u51fa\u6876\u6570\u7ec4\u5373\u53ef\u3002\n\n\u63a5\u4e0b\u6765\u770b\u5b8c\u6574AC\u4ee3\u7801\uff0c\u8fd9\u91cc\u6211\u4f7f\u7528\u7684\u662fvector<struct>\u6765\u5b58\u50a8\u8f93\u5165\u3002\n  \n```cpp\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\nstruct etu{\n\tint x;\n\tint type;\n};\n\nbool cmp(etu a, etu b){\n\tif(a.x == b.x){\n\t\treturn a.type < b.type;\n\t}\n\treturn a.x < b.x;\n}\nvector<etu> urp;\nint n, l, r, tong[200020];\nsigned main (){\n\tcin >> n;\n\tfor(int i = 1; i <= n; i++){\n\t\tcin >> l >> r;\n\t\turp.push_back((etu){l, 1});\n\t\turp.push_back((etu){r + 1, -1});\n\t}\n\tsort(urp.begin(), urp.end(), cmp);\n\tint cnt = 0, last = 0, now = 0;\n\tint len = urp.size();\n\tfor(int i = 0; i < len; i++){\n\t\tnow = urp[i].x;\n\t\ttong[cnt] += now - last;\n\t\tcnt += urp[i].type;\n\t\tlast = now;\n\t}\n\tfor(int i = 1; i <= n; i++){\n\t\tcout << tong[i] << \" \";\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1615372288,
        "uid": 313850,
        "name": "FutureSnow",
        "ccfLevel": 5,
        "title": "CF1000C\u9898\u89e3"
    }
]