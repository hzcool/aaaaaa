[
    {
        "content": "## Description\n\n\n\u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u70b9\u7684\u6811\uff0c\u6811\u4e0a\u6bcf\u6761\u8fb9\u7684\u8fb9\u6743\u90fd\u662f $1$\uff0c\u73b0\u5728\u7ed9\u5b9a $2k$ \u4e2a\u70b9\u9700\u8981\u4e24\u4e24\u914d\u5bf9\uff0c\u914d\u5bf9\u7684\u4ef7\u503c\u4e3a\u4e24\u70b9\u7684\u8ddd\u79bb\uff0c\u6c42\u6700\u5927\u4ef7\u503c\u548c\u3002\n\n------------\n\n## Solution\n\n\u56e0\u4e3a\u8981\u4f7f\u6700\u540e\u4ef7\u503c\u548c\u6700\u5927\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u8d2a\u5fc3\u3002\n![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF700B/d24b24140d15e90d634b3c0f9f8b570ac75746f9.png)\n\n\u5c31\u6837\u4f8b\u800c\u8a00\uff0c\u6211\u4eec\u5f88\u663e\u7136\u53d1\u73b0\u5de6\u8fb9\u7684\u70b9\u4e0e\u53f3\u8fb9\u7684\u70b9\u4e24\u4e24\u914d\u5bf9\u662f\u6700\u4f18\u7684\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u6761\u8fb9\uff0c\u6211\u4eec\u5982\u679c\u7edf\u8ba1\u51fa\u5b83\u5de6\u8fb9\u7684\u5927\u5b66\u6570\u91cf\u4e3a $x$\uff0c\u53f3\u8fb9\u7684\u5927\u5b66\u6570\u91cf\u4e3a $y$\uff0c\u90a3\u4e48\u8be5\u8fb9\u7684\u4ef7\u503c\u5c31\u662f $\\min(x,y)$\uff0c\u5bf9\u6bcf\u6761\u8fb9\u90fd\u5982\u6b64\u5904\u7406\uff0c\u904d\u5386\u4e00\u904d\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n)$\u3002\u5728\u904d\u5386\u7684\u65f6\u5019\uff0c\u5176\u5b9e\u53ea\u9700\u8981\u77e5\u9053\u6bcf\u4e2a\u70b9\u4e00\u8fb9\u5927\u5b66\u7684\u6570\u91cf\uff0c\u53e6\u4e00\u8fb9\u5927\u5b66\u7684\u6570\u91cf\u5c31\u662f **\u5927\u5b66\u603b\u6570-\u4e00\u8fb9\u5927\u5b66\u7684\u6570\u91cf**\uff0c\u6211\u7684\u4ee3\u7801\u4ee5\u6c42\u5de6\u8fb9\u4e3a\u4f8b\u3002\n\n------------\n\n\n## Code\n```cpp\n#include <bits/stdc++.h>\n#define next next_\nusing namespace std;\ntypedef long long LL;\n\ntemplate < class T > inline void read(T &x) {\n    x = 0;\n    char c = getchar();\n    bool f = 0;\n    for (; !isdigit(c); c = getchar()) f ^= c == '-';\n    for (; isdigit(c); c = getchar()) x = (x << 3) + (x << 1) + (c ^ 48);\n    x = f ? -x : x;\n}\n\nconst int maxN = 2e5 + 10;\n\nint n, m, k, u, v, tot, head[maxN], to[maxN << 1], next[maxN << 1];\nLL ans, f[maxN];//\u6700\u5927\u7b54\u6848\u6709\u53ef\u80fd\u7206int\n\ninline void addEdge(int u, int v) {\n\tnext[++tot] = head[u];\n\tto[tot] = v;\n\thead[u] = tot;\n}//\u8fde\u8fb9\n\nvoid dfs(int from, int x) {\n\tfor (int i = head[x]; i; i = next[i]) {\n\t\tint y = to[i];\n\t\tif (y == from) continue;\n\t\tdfs(x, y);\n\t\tf[x] += f[y];\n\t\tans += min(f[y], (LL)(k - f[y]));\n\t}\n}//dfs\u904d\u5386\u6bcf\u4e00\u6761\u8fb9\uff0cfrom\u8868\u793a\u8fb9\u7684\u8d77\u70b9\uff0cx\u8868\u793a\u8fb9\u7684\u7ec8\u70b9\n\nint main() {\n\tread(n), read(k);\n\tk <<= 1;//\u9898\u76ee\u7ed9\u7684\u662f\u5927\u5b66\u6570\u91cf\u7684\u4e00\u534a\n\tfor (int i = 1; i <= k; ++i) { read(m); f[m] = 1; }//f[i]\u8868\u793a\u70b9i\u53ca\u5b83\u5de6\u8fb9\u5927\u5b66\u7684\u6570\u91cf\n\tfor (int i = 1; i < n; ++i) { read(u), read(v); addEdge(u, v), addEdge(v, u); }\n\tdfs(0, 1);\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1550797197,
        "uid": 32139,
        "name": "Heartlessly",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF700B \u3010Connecting Universities\u3011"
    },
    {
        "content": "\u4e0d\u662f\u5b98\u65b9\u9898\u89e3\u7684\u8d2a\u5fc3\u4e3a\u4ec0\u4e48\u4e00\u5b9a\u53ef\u4ee5\u6784\u9020\u51fa\u65b9\u6848\uff0c\u8fd9\u91cc\u4ecb\u7ecd\u53e6\u4e00\u79cd\u8d2a\u5fc3\u65b9\u6cd5\u3002\n\n\u9996\u5148\u4e3a\u6811\u786e\u5b9a\u4e00\u4e2a\u6839\uff0c\u90a3\u4e48\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u5c31\u5e94\u8be5\u662f\u5176\u6df1\u5ea6\u4e4b\u548c\u51cf\u53bb\u5176\u6700\u8fd1\u516c\u5171\u7956\u5148\u7684\u6df1\u5ea6\u3002\u5173\u952e\u70b9\u7684\u6df1\u5ea6\u662f\u786e\u5b9a\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u8981\u6700\u5c0f\u5316\u7684\u5c31\u662f\u6240\u6709\u5339\u914d\u7684\u70b9\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u7684\u6df1\u5ea6\u4e4b\u548c\u3002\n\n\u9996\u5148\u8003\u8651\u6839\u8282\u70b9\uff0c\u6211\u4eec\u6c42\u51fa\u5176\u51fa\u8fb9\u7684\u6240\u6709\u5b50\u6811\u4e2d\u6709\u591a\u5c11\u4e2a\u70b9\uff0c\u5982\u679c\u5173\u952e\u70b9\u6700\u591a\u7684\u5b50\u6811\u4e2d\u5173\u952e\u70b9\u7684\u6570\u91cf\u5c0f\u4e8e\u603b\u6570\u7684\u4e8c\u5206\u4e4b\u4e00\uff0c\u90a3\u4e48\u6211\u4eec\u4e00\u5b9a\u53ef\u4ee5\u5c06\u6240\u6709\u5173\u952e\u70b9\u4e24\u4e24\u914d\u5bf9\uff0c\u4f7f\u5f97\u914d\u5bf9\u70b9\u7684 lca \u90fd\u662f\u6839\u8282\u70b9\uff1b\u5426\u5219\u6700\u5927\u7684\u90a3\u4e2a\u5b50\u6811\u4e2d\u4e00\u5b9a\u4f1a\u6709\u67d0\u4e9b\u70b9\u5fc5\u987b\u5728\u5176\u5185\u90e8\u5339\u914d\uff0c\u8bbe\u8fd9\u4e2a\u5b50\u6811\u4e3a $u$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8bb0\u5f55\u597d\u6709\u591a\u5c11\u4e2a\u5b50\u6811 $u$ \u5916\u7684\u5173\u952e\u70b9\uff0c\u8bbe\u4e3a $d$\uff0c\u6211\u4eec\u9012\u5f52\u8fdb\u5165\u5b50\u6811 $u$\uff0c\u540c\u6837\u5730\u5728\u6c42 $u$ \u7684\u51fa\u8fb9\u7684\u5b50\u6811\u6709\u591a\u5c11\u4e2a\u5173\u952e\u70b9\u3002\u663e\u7136\uff0c\u6211\u4eec\u4f1a\u8ba9\u5173\u952e\u70b9\u6700\u591a\u7684\u90a3\u68f5\u5b50\u6811\u4e2d\u7684\u70b9\u4e0e $u$ \u5916\u7684\u5173\u952e\u70b9\u5339\u914d\u3002\u5982\u679c\u5339\u914d\u540e\uff0c\u5176\u4ecd\u7136\u5927\u4e8e\u603b\u6570\u7684\u4e8c\u5206\u4e4b\u4e00\uff0c\u90a3\u6211\u4eec\u66f4\u65b0 $d$\uff0c\u7ee7\u7eed\u9012\u5f52\uff1b\u5426\u5219\u7ec8\u6b62\u9012\u5f52\u3002\n\n\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u7edf\u8ba1\u51fa\u5728\u6bcf\u4e00\u4e2a\u5b50\u6811\u5339\u914d\u4e86\u591a\u5c11\u5bf9\u5173\u952e\u70b9\uff0c\u4ece\u7b54\u6848\u4e2d\u51cf\u53bb\u5b83\u4eec\u5373\u53ef\u3002\u6ce8\u610f\u8fd9\u65f6\u5019\u6bcf\u4e2a\u5173\u952e\u70b9\u90fd\u4f1a\u88ab\u591a\u51cf\u4e00\u6b21\uff0c\u5411\u7b54\u6848\u4e2d\u52a0\u4e0a $2k$ \u5373\u53ef\u3002\n\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nconst int N=500050;\nusing namespace std;\n\n#define _to e[i].to\n#define fore(k) for(int i=hd[k];i;i=e[i].nx)\nstruct edge{\n    int to,nx;\n}e[N];int hd[N],S;\nvoid add(int fr,int to){\n    e[++S]=(edge){to,hd[fr]},hd[fr]=S;\n}\n\nint sz[N],dp[N],a[N],ans;\nvoid dfs(int k,int fa){\n\tsz[k]=a[k],dp[k]=dp[fa]+1;\n\tans+=dp[k]*a[k];\n\tfore(k)if(_to!=fa)\n\t\tdfs(_to,k),sz[k]+=sz[_to];\n}\n\nvoid solve(int k,int fa,int d){\n\tans-=(sz[k]-d);\n\tint sm=0,mx=0;\n\tfore(k)if(_to!=fa)\n\t\tmx=sz[_to]>sz[mx]?_to:mx;\n\tif(sz[mx]-d>sz[k]-sz[mx])\n\t\tsolve(mx,k,d+sz[k]-sz[mx]);\n}\n\nmain(){\n\tdp[0]=-1;\n\tint n,k;cin>>n>>k;\n\tfor(int i=1;i<=k*2;i++){\n\t\tint x;cin>>x;\n\t\ta[x]=1;\n\t}\n\tfor(int i=1;i<n;i++){\n\t\tint x,y;cin>>x>>y;\n\t\tadd(x,y),add(y,x);\n\t}\n\tdfs(1,0);\n\tsolve(1,0,0);\n\tcout<<ans+2*k<<endl;\n}\n```",
        "postTime": 1636637167,
        "uid": 79067,
        "name": "dottle",
        "ccfLevel": 10,
        "title": "CF700B"
    },
    {
        "content": "$update:$  \u4fee\u6539\u90e8\u5206\u4ee3\u7801\u4ee5\u53ca $Latex$ \u3002\n\n\u8bb0\u5f55\u4e00\u70b9\u60f3\u6cd5\u3002\n\n\u5bf9\u4e8e\u6837\u4f8b\uff0c\u6211\u4eec\u53d1\u73b0\u4e24\u4e24\u914d\u5bf9\u7684\u5927\u5b66\u4e4b\u95f4\u6240\u7ecf\u8fc7\u7684\u8fb9\uff0c\u91cd\u5408\u7684\u8d8a\u591a\uff0c\u7b54\u6848\u5c31\u8d8a\u5927\u3002\n\n\u6240\u4ee5\u8bf4\u5bf9\u4e8e\u4e00\u6761\u8fb9\uff0c\u6211\u4eec\u5c06\u5b83\u5212\u5206\u4e3a\u4e24\u4e2a\u96c6\u5408\uff1a$ x,\\ 2k - x $ \u3002 \n\n\u4e3a\u4e86\u4f7f\u91cd\u5408\u7684\u8fb9\u6570\u66f4\u591a\uff0c\u6211\u4eec\u8003\u8651\u8d2a\u5fc3\u53bb\u914d\u5bf9\u8fb9\u3002\n\n\u7136\u540e\u6839\u636e\u6837\u4f8b\uff0c\u6211\u4eec\u5df2\u7ecf$ yy $\u51fa\u4e86\u6b63\u786e\u7684\u505a\u6cd5\uff1a\u5bf9\u4e8e\u6bcf\u6761\u8fb9\uff0c\u9009\u62e9\u53bb\u5bf9\u9762\u7684\u96c6\u5408\u53bb\u914d\u5bf9\u3002\n\n\u4e5f\u5c31\u662f$ min (dis[x],\\ 2k - dis[x]) $\u3002\n\n\u7136\u540e $dfs$ \u4e00\u904d\uff0c\u7528 $Ans$ \u4e0d\u65ad\u7d2f\u52a0\u5f53\u524d\u6700\u4f18\u7684\u7b54\u6848 \u3002\n$$Ans = \\sum min (dis[x],\\ 2k - dis[x])$$\n\n\u5c31\u505a\u5b8c\u4e86\u3002 \n\n```cpp\n#include<bits/stdc++.h>\n//#include\"Bignum/bignum.h\"\n//#define lll bignum\n#define re register\n#define For(i, j, k) for(re int i = j; i <= k; i++)\n#define foR(i, j, k) for(re int i = j; i >= k; i--)\nusing namespace std;\ntypedef long long ll;\nconst ll N = 200011;\n\nll n, k, cnt, ans, dis[N], head[N];\n\nstruct node {\n\tll to, next;\n} e[N << 1];\n\ninline void add ( ll u, ll v ) { \n\te[++cnt].to = v, e[cnt].next = head[u], head[u] = cnt; \n\te[++cnt].to = u, e[cnt].next = head[v], head[v] = cnt; \n}\n\nnamespace IO {\n\n\t#define dd ch = getchar()\n\tinline ll read() {\n\t\tll x = 0; bool f = 0; char dd;\n\t\tfor (; !isdigit (ch); dd) f ^= (ch == '-');\n\t\tfor (; isdigit (ch); dd)  x = (x << 3) + (x << 1) + (ch ^ 48);\n\t\treturn f? -x: x;\n\t}\n\t#undef dd\n\n\tinline void write( ll x ) {\n\t\tif ( x < 0 ) putchar ('-'), x = -x;\n\t\tif ( x > 9 ) write ( x / 10 ); putchar ( x % 10 | 48 );\n\t}\n\n\tinline void wrn ( ll x ) { write (x); putchar (' '); }\n\n\tinline void wln ( ll x ) { write (x); putchar ('\\n'); }\n\n\tinline void wlnn ( ll x, ll y ) { wrn (x), wln (y); }\n\n}\n\nusing namespace IO;\n\ninline void dfs ( ll x, ll fa ) {\n\tfor (re int i = head[x]; i; i = e[i].next) \n\t\tif ( e[i].to != fa ) dfs ( e[i].to, x ), dis[x] += dis[e[i].to];\n\tfor (re int i = head[x]; i; i = e[i].next) \n\t\tif ( e[i].to != fa ) ans += min ( dis[e[i].to], k - dis[e[i].to] );\n}\n\nll u, v;\n\nint main() {\n//\tfreopen(\".in\", \"r\", stdin);\n//\tfreopen(\".out\", \"w\", stdout);\n\tmemset (head, -1, sizeof (head));\n\tn = read(), k = read() << 1; For ( i, 1, k ) dis[read()] = 1;\n\tFor ( i, 1, n - 1 ) u = read(), v = read(), add (u, v); dfs (1, 0); \n\treturn wln( ans ), 0;\n}\n\n/*\n\n*/\n\n```",
        "postTime": 1550713608,
        "uid": 104379,
        "name": "Cesare",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF700B \u3010Connecting Universities\u3011"
    },
    {
        "content": "# CF700B \u3010Connecting Universities\u3011\n\n\u200b\t~~\u6211\u6700\u559c\u6b22\u7801\u91cf\u4e0d\u5927\u7684\u601d\u7ef4\u9898\u5566\uff01\uff01\uff01~~\n\n\u200b\t\u9996\u5148\uff0c\u56e0\u4e3a\u6709$n$\u4e2a\u70b9\u548c$n-1$\u6761\u8fb9\uff0c\u90a3\u4e48\u8fd9\u663e\u7136\u662f\u4e00\u68f5\u6811\uff0c\u9898\u76ee\u8981\u6c42\u6211\u4eec\u628a\u6811\u4e0a\u7684$2k$\u4e2a\u70b9\u4e24\u4e24\u914d\u5bf9\uff0c\u4f7f\u5f97\u6bcf\u4e00\u5bf9\u70b9\u7684\u8def\u5f84\u8ddd\u79bb\u548c\u6700\u5927\u3002\n\n\u200b\t\u8fd9\u9053\u9898\u5982\u679c\u4ece\u201c\u914d\u5bf9\u201d\u8fd9\u4e2a\u89d2\u5ea6\u601d\u8003\u7684\u8bdd\u5e76\u4e0d\u5bb9\u6613\uff0c\u56e0\u4e3a\u6ca1\u6709\u4e00\u79cd\u663e\u7136\u6b63\u786e\u7684\u8d2a\u5fc3\u65b9\u6cd5\u6765\u8fdb\u884c\u914d\u5bf9\u3002\u4e8e\u662f\u6211\u4eec\u4ece\u8fb9\u7684\u89d2\u5ea6\u6765\u601d\u8003\u3002\n\n\u200b\t\u5bf9\u4e8e\u6bcf\u4e00\u6761\u8fb9\uff0c\u5982\u679c\u60f3\u8ba9\u8ddd\u79bb\u548c\u6700\u5927\uff0c\u90a3\u4e48\u663e\u7136\u8981\u8ba9\u88ab\u8fd9\u4e00\u6761\u8fb9\u9694\u5f00\u7684\u5269\u4f59\u7684\u4e24\u4e2a\u8fde\u901a\u5206\u91cf\u4e2d\u7684\u5927\u5b66\u7a7f\u8fc7\u8fd9\u4e00\u6761\u8fb9\u8fdb\u884c\u914d\u5bf9\u3002\n\n![\u6837\u4f8b](https://cdn.luogu.com.cn/upload/vjudge_pic/CF700B/d24b24140d15e90d634b3c0f9f8b570ac75746f9.png)\n\n\u6bd4\u5982\u6211\u4eec\u770b\u8fd9\u4e2a\u6837\u4f8b\uff0c\u5bf9\u4e8e\u8fb9$(3,4)$\uff0c\u5982\u679c\u8ba91,2\u81ea\u5df1\u914d\u5bf9\uff0c5,6\u81ea\u5df1\u914d\u5bf9\uff0c\u80af\u5b9a\u4e0d\u59821\u7a7f\u8fc7$(3,4)$\u548c6\u914d\u5bf9\uff0c2\u7a7f\u8fc7$(3,4)$\u548c5\u914d\u5bf9\u3002\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u6761\u8fb9\uff0c\u8bbe$u,v$\u5206\u522b\u4e3a\u8fd9\u6761\u8fb9\u9694\u5f00\u7684\u8fde\u901a\u5757\u4e2d\u62e5\u6709\u7684\u5927\u5b66\u6570\u91cf\uff0c\u90a3\u4e48\u663e\u7136\u6700\u591a\u6709$min(u,v)$\u4e2a\u5927\u5b66\u80fd\u591f\u7a7f\u8fc7\u8fd9\u6761\u8fb9\u8fdb\u884c\u914d\u5bf9\uff0c\u4e8e\u662f\u6211\u4eec\u7684$ans$\u7d2f\u52a0\u4e0a\u80fd\u914d\u5bf9\u7684\u6570\u91cf\u5373\u53ef\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define MAX 200005\nusing namespace std;\n\nint n, k, cnt;\nint num[MAX], d[MAX];\nint head[MAX], Next[MAX*2], vet[MAX*2];\n\nvoid add(int x, int y){\n    cnt++;\n    Next[cnt] = head[x];\n    head[x] = cnt;\n    vet[cnt] = y;\n}\n\nvoid dfs(int x, int fa){\n    d[x] = d[fa]+1;\n    for(int i = head[x]; i; i = Next[i]){\n        int v = vet[i];\n        if(v == fa)\tcontinue;\n        dfs(v, x);\n        num[x] += num[v];\n    }\n}\n\nint main()\n{\n    cin >> n >> k;\n    k *= 2;\n    int x, y;\n    for(int i = 1; i <= k; i++){\n        scanf(\"%d\", &x);\n        num[x] = 1;\n    }\n    for(int i = 1; i < n; i++){\n        scanf(\"%d%d\", &x, &y);\n        add(x, y);\n        add(y, x);\n    }\n    dfs(1, 0);\n    long long ans = 0;\n    for(int i = 1; i <= n; i++){\n        for(int j = head[i]; j; j = Next[j]){\n            int v = vet[j];\n            if(d[v] < d[i]){\n                v = i;\n            }\n            ans += (ll)min(k-num[v], num[v]);\n        }\n    }\n    cout << ans/2 << endl;\n    \n    return 0;\n}\n```\n\n",
        "postTime": 1550713979,
        "uid": 22991,
        "name": "fighter",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF700B \u3010Connecting Universities\u3011"
    },
    {
        "content": "## \u601d\u8def\n\n\u8d2a\u5fc3\n\n## \u5206\u6790\n\n\u9996\u5148\u770b\u5230\u8fd9\u9053\u9898\u5c31\u8003\u8651\u8d2a\u5fc3\u3002\n\n\u6211\u4eec\u89c2\u5bdf\u56fe\u4e2d\u6bcf\u4e00\u4e2a\u70b9\uff0c\u6211\u4eec\u8981\u5c1d\u8bd5\u628a\u8fd9\u4e2a\u70b9\u4e0e\u6700\u8fdc\u70b9\u914d\u5bf9\u8d77\u6765\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u5c31\u4f1a\u53d1\u73b0\u914d\u5bf9\u7684\u70b9\u6c38\u8fdc\u662f\u5de6\u8fb9\u3001\u53f3\u8fb9\u914d\u5bf9\u3002\n\n**\u4e0b\u4e00\u6b65\u5c31\u6709\u4e00\u70b9\u601d\u7ef4\u96be\u5ea6\u4e86\uff1a\u5982\u4f55\u5904\u7406\u914d\u5bf9\u7684\u70b9\u8ddd\u79bb\u4e4b\u548c\u5462\uff1f**\n\n\u8003\u8651\u4e3a\u6bcf\u4e00\u6761\u8fb9\u8d4b\u6743\u503c\u3002\u5bf9\u4e8e\u6bcf\u4e00\u6761\u8fb9\uff0c\u5982\u679c\u5b83\u5de6\u8fb9\u7684\u5927\u5b66\u6570\u91cf\u4e3a $x$\uff0c\u53f3\u8fb9\u7684\u5927\u5b66\u6570\u91cf\u4e3a $y$\uff0c\u56e0\u4e3a\u8fd9\u4e00\u6761\u8fb9\u80fd\u4e3a\u5de6\u53f3\u4e24\u8fb9**\u6bcf\u4e00\u5bf9\u80fd\u914d\u5bf9\u7684\u70b9**\u63d0\u4f9b $1$ \u7684\u8d21\u732e\uff0c\u6240\u4ee5\u8be5\u8fb9\u7684\u4ef7\u503c\u5c31\u662f $\\min\\{x, y\\}$\u3002\n\n\u800c\u5bb9\u6613\u53d1\u73b0 $y = 2k-x$\uff0c\u6240\u4ee5 dfs \u4e00\u904d\u5c31\u53ef\u4ee5\u8dd1\u51fa $x$\uff0c\u7b97\u51fa $y$ \u4e86\u3002\n\n\u6700\u540e\u5c06\u6240\u6709\u6743\u503c\u6c42\u548c\u5f97\u5230\u7b54\u6848\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h> \n#define lld long long\nusing namespace std;\nint n, k;\nlld cnt, ans;\nlld dis[200010], head[200010];\nstruct node {\n\tint to, nxt;\n} e[400010];\ninline void addedge(int u, int v) {\n\te[++ cnt].to = v, e[cnt].nxt = head[u], head[u] = cnt;\n\te[++ cnt].to = u, e[cnt].nxt = head[v], head[v] = cnt;\n}\ninline void dfs(int x, int fa) {\n\tfor (int i = head[x]; i; i = e[i].nxt) if (e[i].to != fa) dfs(e[i].to, x), dis[x] += dis[e[i].to];\n\tfor (int i = head[x]; i; i = e[i].nxt) if (e[i].to != fa) ans += min(dis[e[i].to], k - dis[e[i].to]); // \u56e0\u4e3a k \u5df2\u7ecf\u4e58\u4e0a 2 \u4e86\uff0c\u6240\u4ee5\u8fd9\u91cc\u76f8\u5f53\u4e8e ans = min(x, 2k - x)\n}\nint u, v;\nint main() {\n\tscanf(\"%d%d\", &n, &k);\n\tk <<= 1;\n\tint x;\n\tfor (int i = 1; i <= k; ++ i) scanf(\"%d\", &x), dis[x] = 1;\n\tfor (int i = 1; i < n; ++ i) scanf(\"%d%d\", &u, &v), addedge(u, v);\n\tdfs(1, 0);\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1654857711,
        "uid": 228486,
        "name": "SunsetSamsara",
        "ccfLevel": 7,
        "title": "CF700B Connecting Universities \u9898\u89e3"
    },
    {
        "content": "> \u7ed9\u5b9a\u4e00\u68f5\u6811\u548c\u6811\u4e0a\u7684 $2k$ \u4e2a\u70b9\u3002\u5c06 $2k$ \u4e2a\u70b9\u4e24\u4e24\u914d\u5bf9\uff0c\u4f7f\u6bcf\u5bf9\u8ddd\u79bb\u7684\u548c\u6700\u5927\u3002\n\n\u4ee5\u4efb\u610f\u70b9\u4e3a\u6839\uff0c\u8bbe\u7f16\u53f7\u4e3a $i$ \u7684\u8282\u70b9\u7684\u6df1\u5ea6\u4e3a $\\text{dep}_i$\u3002\u5bf9\u4e8e\u914d\u5bf9\u7684\u4e00\u5bf9\u70b9 $i,j$\uff0c\u5b83\u4eec\u7684\u8ddd\u79bb\u662f $\\text{dep}_i+\\text{dep}_j-2\\text{dep}_{\\operatorname{LCA}(i,j)}$\u3002\n\n$\\text{dep}_i$ \u548c $\\text{dep}_j$ \u53ef\u4ee5\u4e8b\u5148\u8ba1\u5165\u7b54\u6848\uff0c\u4e8e\u662f\u6211\u4eec\u7684\u4efb\u52a1\u8f6c\u5316\u4e3a\u6700\u5c0f\u5316 $\\sum\\text{dep}_{\\operatorname{LCA}(i,j)}$\u3002\u6309\u6df1\u5ea6\u4ece\u5c0f\u5230\u5927\u904d\u5386\u8282\u70b9\uff1a\u8bbe\u5f53\u524d\u8282\u70b9\u542b\u6709 $s$ \u4e2a\u5927\u5b66\uff0c\u5f53\u524d\u8282\u70b9\u7684\u5b50\u6811\u4e2d\u542b\u6709\u5927\u5b66\u6570\u6700\u591a\u7684\u542b\u6709 $m$ \u4e2a\u5927\u5b66\uff0c\u82e5 $m\\le s-m$\uff0c\u5219\u8be5\u8282\u70b9\u4e2d\u6240\u6709\u5927\u5b66\u90fd\u53ef\u4ee5\u4ee5\u5f53\u524d\u8282\u70b9\u4f5c\u4e3a\u6700\u8fd1\u516c\u5171\u7956\u5148\u4e24\u4e24\u914d\u5bf9\uff1b\u5426\u5219\u7ee7\u7eed\u904d\u5386\u542b\u6700\u591a\u5927\u5b66\u7684\u90a3\u4e2a\u8282\u70b9\u3002\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n\ntypedef long long ll;\nconst int MAXN = 2e5 + 19;\n\nint n, k;\nstd::vector<int> to[MAXN];\n\nbool isU[MAXN];\nint size[MAXN], dep[MAXN];\nll ans;\n\nvoid dfs(int node, int f){\n\tdep[node] = dep[f] + 1;\n\tif(size[node]) ans += dep[node];\n\tfor(int i : to[node])\n\t\tif(i != f){\n\t\t\tdfs(i, node);\n\t\t\tsize[node] += size[i];\n\t\t}\n}\n\nvoid solve(int node, int f, int del){\n\tint max = 0, nax = 0;\n\tfor(int i : to[node])\n\t\tif(i != f && size[i] > max)\n\t\t\tmax = size[i], nax = i;\n\tmax = max - (size[node] - max);\n\tmax -= del;\n\tif(max > 0){\n\t\tans -= (ll)dep[node] * (size[node] - max - del);\n\t\tsolve(nax, node, size[nax] - max);\n\t}\n\telse ans -= (ll)dep[node] * (size[node] - del);\n}\n\nint main(){\n\tstd::scanf(\"%d%d\", &n, &k);\n\tfor(int i = 1; i <= k * 2; ++i){\n\t\tint tmp; std::scanf(\"%d\", &tmp);\n\t\t++size[tmp], isU[tmp] = 1;\n\t}\n\tfor(int i = 2; i <= n; ++i){\n\t\tint u, v; std::scanf(\"%d%d\", &u, &v);\n\t\tto[u].push_back(v), to[v].push_back(u);\n\t}\n\t\n\tdfs(1, 0);\n\tsolve(1, 0, 0);\n\t\n\tstd::printf(\"%lld\\n\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1601034790,
        "uid": 222441,
        "name": "Flan",
        "ccfLevel": 7,
        "title": "CodeForces 700B Connecting Universities"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\u6709\u4e00\u68f5$n$\u4e2a\u8282\u70b9\u7684\u6811\uff0c\u5176\u4e2d\u6709$2k$\u4e2a\u70b9\u8981\u4e24\u4e24\u914d\u5bf9\uff0c\u6c42\u6bcf\u5bf9\u70b9\u914d\u5bf9\u7684\u8ddd\u79bb\u4e4b\u548c\u7684\u6700\u5927\u503c\n## \u601d\u8def\n\u601d\u8def\u5f88\u5999,\u4f46\u6bd4\u8f83\u96be\u60f3\u3002\n\u663e\u7136\uff0c\u4f7f\u7528\u66b4\u529b\u914d\u5bf9\u65f6\u95f4\u590d\u6742\u5ea6\u4f1a\u7206\u70b8\u3002\u6240\u4ee5\u6211\u4eec\u60f3\u5230\u4e86\u4ec0\u4e48\uff1a\u8d2a\u5fc3\uff01\n\n\u6211\u4eec\u8003\u8651\u8ba1\u7b97\u6bcf\u4e2a\u8fb9\u7684\u8d21\u732e\uff0c\u5e76\u5bf9\u4e4b\u6c42\u548c\u3002\u90a3\u4e48\u5177\u4f53\u600e\u4e48\u8d2a\u5fc3\u53bb\u914d\u5bf9\u8fb9\u5462\uff1f\u778eyy\u4e00\u4e0b\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6bcf\u6761\u8fb9\uff0c\u9009\u62e9\u53bb\u5bf9\u9762\u7684\u96c6\u5408\u53bb\u914d\u5bf9\u5b83\uff0c\u90a3\u4e48\u663e\u7136\u6743\u503c\u4e4b\u548c\u4f1a\u662f\u6700\u5927\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u8bbe\u4e00\u6761\u8fb9\u5de6\u8fb9\u7684\u8981\u914d\u5bf9\u7684\u70b9\u7684\u603b\u6570\u4e3a$p$,\u90a3\u4e48\u663e\u7136\u5b83\u53f3\u8fb9\u7684\u7684\u70b9\u7684\u96c6\u5408\u4e3a$2k-p$,\u90a3\u4e48\u8fd9\u6761\u8fb9\u7684\u8d21\u732e\u5c31\u662f$min(p,2k-p)$\u3002\n\n\u5728\u8fd9\u4e4b\u540e\u6211\u4eec\u5c31\u53ef\u4ee5dfs\u6765\u7d2f\u52a0\u7b54\u6848\u5566qwq$ans=(\\sum{min(p,2k-p)})$\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u628a\u8fd9\u9053\u9898\u76ee\u505a\u5b8c\u4e86\uff01qwq\n\n\n\n\n\u4ee3\u7801\u5f88\u7b80\u6d01\uff0c\u5e94\u8be5\u6bd4\u8f83\u597d\u7406\u89e3\u3002\n```cpp\n\n\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int N=1e5+5;\nstruct e{int  v,w,nxt;}a[500005];int head[500005],cnt=0;int dis[500005];long long maxn=0;\nint n,k;\nint b[500005];\nvoid add(int u,int v){a[++cnt].v=v;a[cnt].nxt=head[u];head[u]=cnt;}\nvoid dfs(int x,int fa){\n\tfor(int i=head[x];i;i=a[i].nxt){\n\t\tif(a[i].v!=fa){\n\t\t\tdfs(a[i].v,x);b[x]+=b[a[i].v];\n\t\t}\n\t}maxn=maxn+min(b[x],2*k-b[x]);\n}\nsigned main()\n{\n\t//freopen(\"ribbon.in\",\"r\",stdin);\n\t//freopen(\"ribbon.out\",\"w\",stdout);\n\tcin>>n>>k;int u,v,lin;\n\tfor(int i=1;i<=2*k;i++){scanf(\"%lld\",&lin);b[lin]++;}\n\tfor(int i=1;i<n;i++){\n\t\tscanf(\"%lld %lld\",&u,&v);add(u,v);add(v,u);\n\t}\n\tdfs(1,0);\n\tcout<<maxn;\n\treturn 0;\n}\n```\n",
        "postTime": 1597819767,
        "uid": 195332,
        "name": "demon_yao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF700B \u3010Connecting Universities\u3011"
    }
]