[
    {
        "content": "# 0.\u95f2\u804a\u51e0\u53e5\n\n\n[--->\u5351\u5fae\u7684\u9898\u9762](https://www.luogu.com.cn/problem/CF733F)\n\n [\u535a\u5ba2\u98df\u7528\u66f4\u4f73>-<](https://www.luogu.com.cn/blog/Silymtics/cf733f-drivers-dissatisfaction-ti-xie)\n\n\n------------\n\n# 1.Solution\n\n\u4e3b\u8981\u601d\u8def\uff1a[\u6700\u5c0f\u751f\u6210\u6811](https://www.luogu.com.cn/problem/P3366) + [$\\text{LCA}$](https://www.luogu.com.cn/problem/P3379) + \uff08\u611f\u89c9\u548c[\u4e25\u683c\u6b21\u5c0f\u751f\u6210\u6811](https://www.luogu.com.cn/problem/P4180)\u6709\u70b9\u50cf\uff09\n\n\u6839\u636e\u9898\u610f\u6211\u4eec\u9700\u8981\u5148\u7528 $\\text{Kruskal}$ \u5efa\u51fa\u4e00\u68f5\u6700\u5c0f\u751f\u6210\u6811\n\n\u6211\u4eec\u8003\u8651\u679a\u4e3e\u6bcf\u4e00\u6761\u8fb9\u6765\u786e\u5b9a\u964d\u4f4e\u90a3\u6761\u8fb9\u7684\u6743\u503c\u66f4\u4f18\u3002\n\n\u4e3a\u4ec0\u4e48\u53ea\u9700\u8981\u679a\u4e3e\u4e00\u6761\u8fb9\uff1f\n\n\u5047\u8bbe\u73b0\u5728\u6709\u4e24\u6761\u8fb9 $e_1,e_2$\uff0c\u5982\u679c $e_1 > e_2$ \u90a3\u4e48\u4e0d\u65ad\u7684\u51cf $e_2$ \u4e00\u5b9a\u66f4\u4f18\uff0c\u8fd9\u6837\u8d5a\u4fbf\u5b9c\u3002\u5982\u679c $e_1 = e_2$ \u90a3\u4e48\u51cf\u90a3\u6761\u8fb9\u90fd\u53ef\u4ee5\uff0c\u65e2\u7136\u90fd\u53ef\u4ee5\uff0c\u628a\u6240\u6709\u7684\u64cd\u4f5c\u90fd\u653e\u5728\u4e00\u4e2a\u8fb9\u4e0a\u5c82\u4e0d\u662f\u66f4\u7b80\u5355\uff1f\n\n\u73b0\u5728\u8ba8\u8bba\u6bcf\u4e00\u6761\u8fb9\uff0c\n\n- \u5982\u679c\u662f\u5728\u6811\u4e0a\u7684\u8fb9\uff1a\n\n\u76f4\u63a5\u628a\u6240\u6709\u94b1\u90fd\u7838\u5728\u8fd9\u6761\u8fb9\u4e0a\uff08~~money \u7684\u529b\u91cf~~\uff09\uff0c\u770b\u770b\u5f97\u5230\u7684\u6700\u5c0f\u751f\u6210\u6811\u6743\u503c\u548c\u662f\u5426\u4f1a\u66f4\u5c0f\n\n- \u5982\u679c\u662f\u975e\u6811\u8fb9\uff1a\n\n\u540c\u6837\u662f\u628a\u6240\u6709\u94b1\u90fd\u7838\u5728\u8fd9\u6761\u8fb9\u4e0a\uff0c\u8fd9\u6761\u8fb9\u5c31\u4f1a\u6709\u4e00\u4e2a\u65b0\u7684\u6743\u503c\u3002\n\n\u56e0\u4e3a\u8fde\u63a5\u8fd9\u6761\u8fb9\u4f1a\u4f7f\u539f\u6765\u7684\u751f\u6210\u6811\u51fa\u73b0\u4e00\u4e2a\u73af\uff0c\u90a3\u4e48\u9700\u8981\u6211\u4eec\u5220\u6389\u73af\u4e0a\u7684\u4e00\u6761\u8fb9\u3002\u6839\u636e\u8d2a\u5fc3\u7684\u7b56\u7565\uff0c\u6211\u4eec\u627e\u5230\u6700\u5927\u7684\u8fb9\u5220\u9664\u3002\u7136\u540e\u5224\u65ad\u6b64\u65f6\u751f\u6210\u6811\u7684\u6743\u503c\u548c\u662f\u5426\u66f4\u5c0f\u3002\u5982\u679c\u66f4\u5c0f\u5c31\u66f4\u65b0\u7b54\u6848\u3002\n\n\u76f4\u63a5\u679a\u4e3e\u8fb9\u505a\u51fa\u5224\u65ad\u662f\u96be\u4ee5\u5b9e\u73b0\u7684,\u8fd9\u5c31\u9700\u8981\u6211\u4eec\u9884\u5904\u7406\u6700\u5927\u503c\u3002\n\n\u500d\u589e\u9884\u5904\u7406\u6216\u8005\u76f4\u63a5\u88f8\u4e0a\u6811\u94fe\u5256\u5206\u90fd\u53ef\u4ee5\u3002\n\n\u518d\u6309\u7167\u4e0a\u9762\u7684\u601d\u8def\u8dd1\u4e00\u904d\u3002\n\n\u6700\u540e\u8f93\u51fa\u7b54\u6848\uff08\u53ef\u80fd\u6709\u591a\u7ec4\u89e3\uff09\u3002\n\n\n### \u63d0\u51e0\u70b9\u6ce8\u610f\u4e8b\u9879\uff08\u611f\u8c22Aliemo\u5b66\u59d0\u4e3a\u6211debug\uff09\uff1a\n\n1\u3001\u4ee3\u7801\u4e2d\u6709\u9664\u6cd5\u65f6\u8981\u4fdd\u8bc1\u9664\u6570\u4e0d\u4e3a\u96f6\uff0c\u5426\u5219\u4f1aRE\uff0c\u5c31\u50cf\u6211\n\n![RE\u4e00\u89c8](https://cdn.luogu.com.cn/upload/image_hosting/45gi1ln0.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n2\u3001\u770b\u597d\u9898\u76ee\u4e2d $ans$ \u6700\u5927\u503c\u53ef\u80fd\u4e3a\u591a\u5c11\uff08 $2 \\times 10^{14}$ !!!\uff09\uff0c\u6240\u4ee5\u7528\u5230 $\\text{INF}$ \u7684\u65f6\u5019\u8981\u5f00\u5927\u4e00\u70b9\uff08\u5f00 $10^{18}$ \u5c31\u8db3\u591f\uff09\n\n3\u3001\u6ce8\u610f\u4e0d\u540c\u56fe\uff08\u6811\uff09\u4e2d\u7684\u8fb9\u53f7\u6240\u5b58\u7684\u8fb9\u53f7\u5230\u5e95\u662f\u6392\u5e8f\u524d\u7684\u8fb9\u53f7\uff0c\u8fd8\u662f\u6392\u5e8f\u540e\u7684\u8fb9\u53f7\n\n\n# 2.\u653e\u4ee3\u7801\n\n\uff08~~~~\u6211\u77e5\u9053\u4f60\u4eec\u53ea\u559c\u6b22\u8fd9\u4e2a~~~~\uff09\n\n## 2.1 \u5173\u4e8e\u53d8\u91cf\u540d\u7684\u89e3\u91ca\uff1a\n```cpp\n/*\nedge{\n\t\u8d77\u70b9\uff0c\u7ec8\u70b9\n\t\u6743\u503cw\uff0c\u82b1\u8d39c\uff0c\u8fb9\u53f7\uff08\u6392\u5e8f\u540e\uff09\uff0c\u4e0b\u4e00\u6761\u8fb9 \n}e[]\uff1a\u751f\u6210\u6811\u7684\u8fb9 \n,a[]\uff1a\u8f93\u5165\u7684\u8fb9 \nnode{\n\t\u8fb9\u53f7\uff0c\u8fb9\u7684\u6743\u503c \n} maxm[][]\uff1a\u7528\u6765\u5b58\u7f16\u53f7\u53ca\u8fb9\u7684\u6743\u503c\uff08\u500d\u589e\u91cc\u5b58\u7684\u6700\u5927\u503c \nn:\u70b9\u6570 \nm:\u8fb9\u6570\nS:\u94b1\u6570\uff08\u82b1\u8d39\nans\uff1a\u5b58\u7b54\u6848 \ncnt\uff1a\u901a\u8fc7kruskal\u5efa\u51fa\u7684\u751f\u6210\u6811\u7684\u6743\u503c\u548c\nflag\uff1a\u6807\u8bb0\u51cf\u90a3\u4e00\u6761\u8fb9\u66f4\u4f18\npre_jia:\u4e0a\u4e00\u6b21\u52a0\u7684\u8fb9 \npre_jian: \u4e0a\u4e00\u6b21\u51cf\u7684\u8fb9\nc[]\uff1a\u6bcf\u6761\u8fb9\u51cf\u6743\u503c\u6240\u9700\u7684\u82b1\u8d39\nw[]\uff1a\u6bcf\u6761\u8fb9\u7684\u6743\u503c\nfa[]\uff1a\u6bcf\u4e2a\u70b9\u7684\u7236\u4eb2\uff08kruskal\u7684\u5e76\u67e5\u96c6\uff09\nf[][]\uff1a\u500d\u589e\u60ef\u7528\u7684\u5c0f\u6284\ndepth[]\uff1a\u6bcf\u4e2a\u70b9\u7684\u6df1\u5ea6\uff08LCA\u60ef\u7528\u6570\u7ec4\uff09\nvise[]:\u6807\u8bb0 \u7528kruskal\u5efa\u5b8c\u6811 \u540e\u6709\u90a3\u51e0\u6761\u8fb9\u88ab\u9009\u4e2d \nvis_new[]: \u6807\u8bb0 \u7528\u8fc7\u51cf\u8fb9\u6743\u7684\u8fb9 \u540e\u6709\u90a3\u51e0\u6761\u8fb9\u88ab\u9009\u4e2d\n*/\n```\n## 2.2 \u771f\u6b63\u7684AC\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#define LL long long\n#define INF 1e18\nusing namespace std;\nconst int MAXN = 2e5+5;\nstruct edge{\n\tint from,to;\n\tLL w,c,bh,nxt;\n\tbool operator < (const edge &b) const {return w < b.w ;}\n}e[MAXN << 2],a[MAXN << 2];\nstruct node{\n\tint bh;LL dis;\n}maxm[MAXN][26];//maxm\u7528\u6765\u5b58\u7f16\u53f7\u53ca\u8fb9\u7684\u6743\u503c \nint head[MAXN << 2], num_edge;\nLL n, m, S, ans, cnt, flag, pre_jia, pre_jian;\nint c[MAXN], w[MAXN]; \nLL fa[MAXN];//\u5e76\u67e5\u96c6 \nLL f[MAXN][26];//\u500d\u589e \nLL depth[MAXN];//\u5b58\u6df1\u5ea6 \nbool vise[MAXN << 1],vis_new[MAXN << 1];//vise\u6807\u8bb0\u5728\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u7684\u8fb9\uff0cvis_new\u6807\u8bb0\u66f4\u6362\u8fc7\u7684\u8fb9 \n\nLL find(LL x) {return fa[x] == x ? x : fa[x] = find(fa[x]); }\nvoid add(int from,int to,LL w,LL c, LL i){\n\te[++num_edge].from = from;\t\te[num_edge].to = to;\n\te[num_edge].w = w;\t\t\t\te[num_edge].c = c;\n\te[num_edge].bh = i;\n\te[num_edge].nxt = head[from];\n//\te[num_edge] = (edge){from, to, w, c, i, head[from]};\n\thead[from] = num_edge;\n}\n\nvoid kruskal(){\n\tfor(int i=1;i<=m;++i){\n\t\tLL uf = find(a[i].from), vf = find(a[i].to);\n\t\tif(uf != vf){\n\t\t\tadd(a[i].from,a[i].to,a[i].w,a[i].c,i);\n\t\t\tadd(a[i].to,a[i].from,a[i].w,a[i].c,i);//\u52a0\u8fb9\u662f\u6392\u5e8f\u540e\u7684\u7f16\u53f7 \n\t\t\tfa[uf] = vf;\n\t\t\tcnt += a[i].w;\n\t\t\tvise[i] = 1;\n\t\t\tvis_new[i] = 1;\n\t\t} \n\t}\n}\n\nvoid dfs(LL u,LL fa){//\u5728\u5efa\u51fa\u7684\u6700\u5c0f\u751f\u6210\u6811\u4e0a\u8dd1DFS\uff0c\u5e76\u5bf9LCA\u8fdb\u884c\u521d\u59cb\u5316 \n\tf[u][0] = fa;\n\t//cout<<u<<\" \"<<fa<<\"lzx\"<<endl;\n\tfor(int i=head[u]; i; i = e[i].nxt){\n\t\tLL v = e[i].to;\n\t\tif(v == fa) continue;\n\t\telse{\n\t\t\tdepth[v] = depth[u] + 1ll;\n\t\t\tmaxm[v][0].dis = e[i].w;\n\t\t\tmaxm[v][0].bh = e[i].bh;//a\u4e2d\u6392\u5e8f\u540e\u7684\u7f16\u53f7 \n\t\t\tdfs(v,u);\n\t\t}\n\t}\n}\n\nvoid init_lca(){\n\tfor(int i=1;i<=25;++i){\n\t\tfor(int j = 1; j <= n; ++j){\n\t\t//cout<<f[j][0]<<\"fjh\"<<endl;\n\t\t\tf[j][i] = f[f[j][i-1]][i-1];//LCA\u521d\u59cb\u5316 \n\t\t\tif(maxm[j][i-1].dis > maxm[f[j][i-1]][i-1].dis){\n\t\t\t\tmaxm[j][i].dis = maxm[j][i-1].dis;//\u5b58\u5411\u4e0a\u8df32^i\u6b65\u7684\u6700\u5927\u503c \n\t\t\t\tmaxm[j][i].bh = maxm[j][i-1].bh;//\u53ca\u7f16\u53f7 \n\t\t\t}\n\t\t\telse{\n\t\t\t\tmaxm[j][i].dis = maxm[f[j][i-1]][i-1].dis;\n\t\t\t\tmaxm[j][i].bh = maxm[f[j][i-1]][i-1].bh;\n\t\t\t}\n\t\t}\n\t}\n}\n\nLL get_lca(LL u,LL v){\n\tif(depth[u] > depth[v]) swap(u,v);//\u4fdd\u8bc1v\u7684\u6df1\u5ea6\u5927\u4e8eu\u7684\u6df1\u5ea6 \n\tfor(int i = 25; i >= 0; --i){//\u628av\u70b9\u8c03\u5230\u548cu\u70b9\u540c\u6837\u7684\u4f4d\u7f6e \n\t\tif(depth[f[v][i]] < depth[u]) continue;\n\t\telse v = f[v][i];\n\t}\n\tif(u == v) return u;//\u5982\u679c\u6b64\u65f6\u662f\u540c\u4e00\u4e2a\u70b9\uff0c\u76f4\u63a5\u8fd4\u56de\u5373\u53ef \n\tfor(int i = 25; i >= 0; --i){//\u4e24\u4e2a\u70b9\u4e00\u8d77\u5411\u4e0a\u8df3\uff0c\u8df3\u5230\u6700\u8fd1\u516c\u5171\u7956\u5148\u7684\u4e0b\u9762 \n\t\tif(f[v][i] != f[u][i]){ \n\t\t\tv = f[v][i];\n\t\t\tu = f[u][i];\n\t\t}\n\t}\n\t//cout<<u<<\"wzd\"<<endl;\n\treturn f[u][0];//\u518d\u8df3\u4e00\u4e0b \n}\n\nnode qmax(LL u, LL v){\n\tnode Ans;\n\tAns.bh = -1;\tAns.dis = -INF;\n\tfor(int i = 25; i >= 0; --i){\n\t\tif(depth[f[u][i]] >= depth[v]){\n\t\t\tif(Ans.dis < maxm[u][i].dis){//\u5982\u679c\u73c2\u8df3\u5230\u6700\u8fd1\u516c\u5171\u7956\u5148\u7684\u4e0b\u9762\uff0c\u5c1d\u8bd5\u66f4\u65b0\u6700\u5927\u503c \n\t\t\t\tAns.dis = maxm[u][i].dis;\n\t\t\t\tAns.bh = maxm[u][i].bh;\n\t\t\t}\n\t\t\tu = f[u][i];//\u5411\u4e0a\u8df3\u4e00\u4e0b \n\t\t}\n\t}\n\treturn Ans;//\u8fd4\u56deAns\u503c \n}\n\nint main()\n{\n   \tscanf(\"%lld%lld\",&n,&m);\n\tfor(int i=1;i<=m;++i)\tscanf(\"%d\",&w[i]);\n\tfor(int i=1;i<=m;++i)\tscanf(\"%d\",&c[i]);\n\tfor(int i=1,u,v;i<=m;++i){//\u5b58\u8fb9 \n\t\tscanf(\"%d%d\",&u,&v);\n\t\ta[i].from = u;\ta[i].to = v;\n\t\ta[i].w = w[i];\ta[i].c = c[i];\n\t\ta[i].bh = i;//a[i].bh\u5b58\u7684\u662f\u4e00\u5f00\u59cb\u7684\u8fb9\u53f7 \n\t}\n\tscanf(\"%lld\",&S);\n\t\n\tfor(int i=1;i<=n;++i) fa[i] = i;\n\tsort(a+1,a+m+1);//i\u4e0ea[i].bh\u5df2\u7ecf\u4e0d\u4e00\u6837\u4e86 \n\tkruskal();\n\t\n\tdepth[1] = 1;\n\t\tmaxm[1][0].dis = -INF;\n\t\tmaxm[1][0].bh = e[1].bh;\n\t\n\tdfs(1,1);//\u6df1\u641c\u521d\u59cb\u5316LCA \n\tinit_lca();//\u521d\u59cb\u5316LCA\n\t\n\t \n\tans = INF;\n\tfor(int i=1;i<=m;++i){\n\t\tLL ww = S / a[i].c;\n\t\tif(vise[i]){//\u5982\u679c\u8fd9\u6761\u8fb9\u662f\u6700\u5c0f\u751f\u6210\u6811\u91cc\u9762\u7684\uff0c\u76f4\u63a5\u51cf\u53bb\u5373\u53ef \n\t\t\tif(ans > cnt - ww){\n\t\t\t\tflag = i; //\u66f4\u65b0\u8981\u51cf\u6743\u503c\u7684bian \n\t\t\t} \n\t\t\tans = min(ans, cnt - ww);\n\t\t}\n\t\telse{\n\t\t\tLL u = a[i].from, v = a[i].to;\n\t\t\tLL lca = get_lca(u,v);//u\uff0cv\u7684LCA \n\t\t\tnode maxu = qmax(u, lca);//\u4e24\u8fb9\u7684\u6700\u5927\u503c\u90fd\u8981\u6c42 \n\t\t\tnode maxv = qmax(v, lca);\n\t\t\tif(maxu.dis > maxv.dis){//\u6311\u6709\u6700\u5927\u8fb9\u6700\u5927\u7684\u90a3\u4e00\u8fb9 \n\t\t\t\tif(ans > cnt - maxu.dis + a[i].w - ww){\n\t\t//\u5220\u6389\u6700\u957f\u7684\u90a3\u4e2a\u8fb9\uff0c\u52a0\u4e0a\u65b0\u6765\u7684\u90a3\u6761\u8fb9\uff0c\u51cf\u53bb\u53ef\u4ee5\u51cf\u5f97\u8fb9\u6743\u503c \n\t\t\t\t\tans = cnt - maxu.dis + a[i].w - ww;\n\t\t\t\t\tvis_new[pre_jia] = 0;\n\t\t\t\t\tvis_new[pre_jian] = 1;\n\t\t\t\t\tvis_new[i] = 1;//\u628a\u65b0\u52a0\u7684\u6807\u8bb0\u4e00\u4e0b \n\t\t\t\t\tvis_new[maxu.bh] = 0;//\u628a\u5220\u6389\u7684\u6807\u8bb0\u4e3a0 \n\t\t\t\t\tpre_jia = i;\n\t\t\t\t\tpre_jian = maxu.bh;//\u8fd9\u91cc\u90fd\u662fa\u4e2d\u6392\u5e8f\u540e\u7684\u8fb9\u53f7 \n\t\t\t\t\tflag = i;//\u66f4\u65b0\u4e00\u4e0b\u6807\u8bb0bian\n\t\t\t\t}\t\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(ans > cnt - maxv.dis + a[i].w - ww){\n\t\t\t\t\tans = cnt - maxv.dis + a[i].w - ww;\n\t\t\t\t\tvis_new[pre_jia] = 0;\n\t\t\t\t\tvis_new[pre_jian] = 1;\n\t\t\t\t\tvis_new[i] = 1;\n\t\t\t\t\tvis_new[maxv.bh] = 0;\n\t\t\t\t\tpre_jia = i;\n\t\t\t\t\tpre_jian = maxv.bh;//\u8fd9\u91cc\u4e5f\u662f\u6392\u5e8f\u540e\u7684\u8fb9\u53f7 \n\t\t\t\t\tflag = i;//\u66f4\u65b0\u4e00\u4e0b\u6807\u8bb0bian\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//if(pre_jian == 1){\n\t//\t\tcout<<\"lkp\"<<endl;\n\t//\t}\n\t//\tif( vis_new[1] == 0){\n\t//\t\tprintf(\"bj\\n\");\n\t//\t}\n\t}\n\tif(flag)//\u9632\u6b62\u9664\u6570\u4e3a0\n\ta[flag].w = a[flag].w - (S / a[flag].c);\n\tprintf(\"%lld\\n\",ans);\n\tfor(int i = 1; i <= m; ++i){\n\t\tif(vis_new[i]){//\u5982\u679c\u8fd9\u6761\u8fb9\u5728\u65b0\u6811\u4e2d\u88ab\u6807\u8bb0\u8fc7\uff0c\u5c31\u8f93\u51fa  \n\t\t\tprintf(\"%lld %lld\\n\", a[i].bh, a[i].w);\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n```\n## 2.3 \u9644\uff1a\u6211\u9047\u5230\u7684\u591a\u7ec4\u89e3\uff1a\n\u6837\u4f8b\u4e00\u9898\u9762\u8f93\u51fa\uff1a\n\n```cpp\n0\n1 1\n3 1\n6 1\n7 2\n8 -5\n```\n\n\u6211\u7684\u8f93\u51fa\uff08\u4e0d\u540c\u4f46\u662f\u8fc7\u4e86\uff09\uff1a\n\n```cpp\n0\n1 1\n4 1\n6 1\n7 2\n8 -5\n```\n\n\u624b\u819c\u6837\u4f8b\u4e4b\u540e\u53d1\u73b0\u5176\u5b9e\u90fd\u662f\u4e00\u7ec4\u5408\u6cd5\u89e3\uff0c\u9700\u8981\u81ea\u5df1\u6ce8\u610f\u4e00\u4e0b\u3002\n\n\uff08~~\u6837\u4f8b\u4e0d\u5bf9\u4e0d\u8981\u614c\uff0c\u4e07\u4e00\u4ea4\u4e0a\u53bbAC\u4e86\u5462~~\uff09\n\n------------\n\n\n# 3.\u5199\u5728\u6700\u540e\n\n\u7b2c\u4e00\u6b21\u5199\u9ed1\u9898\u9898\u89e3\uff08~~\u73b0\u5728\u6389\u7d2b\u4e86~~\uff09\uff0c\u7531\u4e8e\u7ec6\u8282\u592a\u591a\uff0c\u96be\u514d\u6709\u4e9b\u9057\u6f0f\n\n\u5982\u679c\u60a8\u6709\u4ec0\u4e48\u7591\u60d1\uff0c\u6216\u6211\u72af\u4e86\u4ec0\u4e48sb\u9519\u8bef\uff0c\u5c3d\u7ba1\u63d0\u51fa\n\n$\\text{The\\ end.}$",
        "postTime": 1602386965,
        "uid": 230580,
        "name": "Suzt_ilymtics",
        "ccfLevel": 6,
        "title": "CF733F Drivers Dissatisfaction \u9898\u89e3"
    },
    {
        "content": "## \u626f\u5728\u524d\u9762\n\u4eba\u751f\u7b2c\u4e00\u9053\u9ed1\uff08>\u25bd< )\u3002\n\n\u90a3\u5929\u542c\u4e86\u8001\u5e08\u8bb2\u56fe\u8bba\u8bb2\u4e86\u8fd9\u9053\u9898\uff0c~~\u53d1\u73b0\u8fd9\u9053\u9ed1\u9898\u5e76\u4e0d\u662f\u5f88\u9ed1~~\u4e8e\u662f\u5c31\u505a\u4e86\u505a\uff0c\u5728\u540c\u673a\u623fdalao\u7684\u5e2e\u52a9\u4e0b\u4e09\u4e2a\u5c0f\u65f6\u505a\u5b8c\uff08\u592a\u83dc\u4e86\uff09\uff0c\u4e8e\u662f\u6765\u53d1\u7bc7\u9898\u89e3\u3002\n\n\n------------\n# \u6b63\u6587\n## \u9898\u610f\n\u7ed9\u51fa\u4e00\u5f20 n \u4e2a\u70b9 m \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u6bcf\u6761\u8fb9(ai,bi)\u6709\u4e00\u4e2a\u6743\u503c wi \u548c\u8d39\u7528 ci\uff0c\u8868\u793a\u8fd9\u6761\u8fb9 \u6bcf\u964d\u4f4e 1 \u7684\u6743\u503c\u9700\u8981 ci \u7684\u82b1\u8d39\u3002\u73b0\u5728\u4e00\u5171\u6709 S \u8d39\u7528\u53ef\u4ee5\u7528\u6765\u964d\u4f4e\u67d0\u4e9b\u8fb9\u7684\u6743\u503c\uff08\u53ef\u4ee5\u964d\u5230 \u8d1f\u6570\uff09\uff0c\u6c42\u56fe\u4e2d\u7684\u4e00\u68f5\u6743\u503c\u548c\u6700\u5c0f\u7684\u751f\u6210\u6811\u5e76**\u8f93\u51fa\u65b9\u6848**\n\n\n------------\n\n## \u5206\u6790\n\u672c\u9898\u5c31\u662f\u4e00\u4e2a\u6c42\u6700\u5c0f\u751f\u6210\u6811\u52a0\u4e0d\u5b9a\u8fb9\u7684\u9898\u76ee\uff0c\u800c\u4e14\u8f93\u51fa\u591a\u4e86\u4e2a\u65b9\u6848\n\n**\u9898\u76ee\u4e2d\u4fe1\u606f\u5f88\u591a\uff0c\u5728\u8fd9\u91cc\u5148\u603b\u7ed3\u4e00\u4e0b\uff1a**\n1. \u6700\u591a\u964d\u4f4e\u6743\u503c\u4e3a S / ci;\n1. \u65e2\u7136\u4f60\u53ef\u4ee5\u7528 S \u8d39\u7528\u6765\u964d\u4f4e S / ci \u7684\u6743\u503c\uff0c\u800c\u4e14\u53ef\u4ee5\u964d\u5230\u8d1f\u6570\uff0c\u672c\u9898\u53c8\u662f\u6c42\u6700\u5c0f\u751f\u6210\u6811\uff0c\u90a3\u5c31\u4e00\u76f4\u964d\u4e00\u6761\u8fb9\u5c31\u597d\u4e86\uff08\u4fdd\u8bc1\u964d\u5b8c\u540e\u672c\u6761\u8fb9\u662f\u5728\u751f\u6210\u6811\u91cc\u7684\uff09\uff1b\n1. \u4ed6\u8981\u6c42\u8f93\u51fa\u65b9\u6848\uff0c\u5c31\u9700\u8981\u5f00\u6570\u7ec4\u6216\u7ed3\u6784\u4f53\u6765\u5b58\u50a8\u6811\u4e0a\u7684\u662f\u7b2c\u51e0\u6761\u8fb9\u4ee5\u53ca\u4ed6\u7684\u6743\u503c\n\n~~\u597d\u50cf\u5c31\u8fd9\u4e48\u70b9\u4fe1\u606f\u4e5f\u4e0d\u662f\u5f88\u591a~~\n\n**\u90a3\u4e48\u6211\u4eec\u60f3\u60f3\u8be5\u600e\u4e48\u505a**\n\n- \u6211\u4eec\u77e5\u9053\uff0c\u672c\u9898\u80af\u5b9a\u662f\u5148\u6c42\u6700\u5c0f\u751f\u6210\u6811\uff0c\u7136\u540e\u518d\u679a\u4e3e\u8fb9\u770b\u662f\u5426\u66ff\u6362\u5e76\u6bd4\u8f83\u6700\u4f18\u65b9\u6848\uff1b\n- \u679a\u4e3e\u8fb9\u6709\u4e24\u79cd\u60c5\u51b5\uff0c\u7b2c\u4e00\u662f\u5df2\u7ecf\u5728\u751f\u6210\u6811\u4e0a\u7684\u8fb9\uff0c\u65e2\u7136\u5df2\u7ecf\u5728\u6811\u4e0a\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u76f4\u63a5\u628a\u6700\u5c0f\u751f\u6210\u6811\u6743\u503c\u548c\u51cf\u53bb\u964d\u4f4e\u7684\u6743\u503c\u62ff\u6765\u6bd4\u8f83\u5c31\u597d\u4e86\n- \u53e6\u4e00\u65b9\u9762\uff0c\u6700\u591a\u51cf\u4f4e S / ci \u7684\u6743\u503c\uff0c\u90a3 ci \u80af\u5b9a\u8d8a\u5c0f\u8d8a\u597d\uff0c\u6240\u4ee5\u5728\u6811\u5185\u7684\u8fb9\u6211\u4eec\u5c31\u964d\u4f4e c \u6700\u5c0f\u7684\u90a3\u4e00\u6761\n- \u679a\u4e3e\u6570\u5916\u7684\u8fb9\u65f6\uff0c\u6211\u4eec\u8981\u770b\u52a0\u5165\u5f53\u524d\u8fb9\u540e\u662f\u5426\u4e3a\u73af\uff08\u80af\u5b9a\u662f\uff09\uff0c\u628a\u8fd9\u6761\u8fb9\u4e0e\u73af\u4e0a\u6700\u5927\u7684\u6811\u8fb9\u6bd4\u8f83\uff0c\u5982\u679c\u6811\u8fb9\u66f4\u5927\u5c31\u51cf\u53bb\u8fd9\u6761\u6811\u8fb9\uff08\u8fd9\u4e2a\u601d\u8def\u662f\u4e0d\u662f\u6709\u4e9b\u719f\u6089\uff09\n- \u5f53\u4e0d\u7528\u6362\u8fb9\u65f6\uff0c\u5c31\u76f4\u63a5\u8f93\u51fa\u539f\u6811\u7684\u4fe1\u606f\u5c31\u597d\u4e86\n\n\n------------\n## \u8d34\u7801\n\u505a\u7684\u65f6\u5019\u6ca1\u5199\u6ce8\u91ca\uff0c\u4f46\u662f\u5f88\u597d\u7406\u89e3\uff0c\u5c31\u662flca\u677f\u5b50\u52a0\u7f16\u53f7\u548c\u8fb9\u6743\u7684\u5b58\u50a8\uff0c\u6700\u540e\u6253\u4e2a\u6807\u8bb0\u770b\u662f\u5426\u6362\u8fb9\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<iostream>\n#include<cmath>\n#include<queue>\n#include<algorithm>\n#define maxn 200005\n#define INF 1000000000000000000\n\nusing namespace std;\n\nint n,m;\nlong long f[maxn][26],depth[maxn];\nlong long tot,head[maxn*4],fa[maxn],S,ans,num,cnt,sum,flag,lkp,fjh;\nbool vis[maxn*2],v[maxn*2];\n\nstruct node{\n\tlong long dis,c,fr,to,bh,nxt;\n}a[maxn*4],e[maxn*4];\n\nstruct ma{\n\tlong long dis,bh;\n}maxi[maxn][26];\n\ninline void add(long long fr,long long to,long long dis,long long c,long long bh){\n\te[++tot].to=to;\n\te[tot].fr=fr;\n\te[tot].dis=dis;\n\te[tot].bh=bh;\n\te[tot].c=c;\n\te[tot].nxt=head[fr];\n\thead[fr]=tot;\n}\n\n\ninline long long Getf(long long x){\n\tif(fa[x]==x) return x;\n\treturn fa[x]=Getf(fa[x]);\n}\n\ninline void hb(long long x,long long y){\n\tx=Getf(x);\n\ty=Getf(y);\n\tif(x!=y) fa[y]=x;\n}\n\ninline bool pd(long long x,long long y){\n\tx=Getf(x);\n\ty=Getf(y);\n\tif(x==y) return true;\n\treturn false; \n}\n\ninline void dfs(long long now,long long p){ \n\tf[now][0]=p;\n\tfor(long long i=head[now];i;i=e[i].nxt){\n\t\tlong long to=e[i].to;\n\t\tif(to==f[now][0]) continue;\n\t    depth[to]=depth[now]+1ll;\n\t\tmaxi[to][0].dis=e[i].dis;\n\t\tmaxi[to][0].bh=e[i].bh;\n\t\tdfs(to,now);\n\t}\n}\n\ninline void caq(){\n\tfor(int i=1;i<=25;++i)\n\t\tfor(int j=1;j<=n;++j){\n\t\t\tf[j][i]=f[f[j][i-1]][i-1];//\n//\t\t\tmaxi[j][i]=max(maxi[j][i-1],maxi[f[j][i-1]][i-1]);\n//\t\t\tmini[j][i]=max(mini[j][i-1],mini[f[j][i-1]][i-1]);\n\t\t\tif(maxi[j][i-1].dis>maxi[f[j][i-1]][i-1].dis){\n\t\t\t    maxi[j][i].dis=maxi[j][i-1].dis;\n\t\t\t\tmaxi[j][i].bh=maxi[j][i-1].bh;\n\t\t\t}\n            else{\n\t\t\t    maxi[j][i].dis=maxi[f[j][i-1]][i-1].dis;\n            \tmaxi[j][i].bh=maxi[f[j][i-1]][i-1].bh;\n\t\t    }\n\t\t}\n}\n\ninline long long lca(long long x,long long y){\n    if(depth[x]<depth[y]) swap(x,y);\n//    while(depth[x]>depth[y])\n//        x=f[x][lg[depth[x]-depth[y]]-1];\n    for(int i=25;i>=0;--i)\n\t\tif(depth[f[x][i]]>=depth[y])\n\t\t\tx=f[x][i];\n    if(x==y) return x;\n    for(int i=25;i>=0;--i)\n        if(f[x][i]!=f[y][i]){\n            x=f[x][i];\n            y=f[y][i];\n        }\n    return f[x][0];\n}\n\ninline ma get_max(long long u,long long v)\n{\n    ma Ans;\n\tAns.bh=-1;\n\tAns.dis=-INF;\n\tfor(int i=25;i>=0;--i){\n\t\tif(depth[f[u][i]]>=depth[v]){\n\t\t    if(Ans.dis<maxi[u][i].dis){\n\t\t    \tAns.dis=maxi[u][i].dis;\n\t\t    \tAns.bh=maxi[u][i].bh;\n\t\t\t}\n\t\t\tu=f[u][i];\n\t\t}\n\t}\n\treturn Ans;\n}\n\ninline long long cmp(node a,node b){\n\treturn a.dis<b.dis;\n}\n\nint main(){\n\tcin>>n;cin>>m;\n\t\n\tfor(int i=1;i<=m;i++) cin>>a[i].dis;\n\tfor(int i=1;i<=m;i++) cin>>a[i].c;\n\tfor(int i=1;i<=m;i++){\n\t\tcin>>a[i].fr;\n\t\tcin>>a[i].to;\n\t\ta[i].bh=i;\n\t}\n\tcin>>S;\n\t\n\tfor(int i=1;i<=n;i++) fa[i]=i;\n\t\n\tsort(a+1,a+m+1,cmp);\n\t\n\tfor(int i=1;i<=m;i++){\n\t\tif(!pd(a[i].fr,a[i].to)){\n\t\t\thb(a[i].fr,a[i].to);\n\t\t\tadd(a[i].fr,a[i].to,a[i].dis,a[i].c,i);\n\t\t\tadd(a[i].to,a[i].fr,a[i].dis,a[i].c,i);\n\t\t\tsum+=a[i].dis;\n\t\t\tvis[i]=1;\n\t\t\tv[i]=1;\n\t\t}\n\t}\n\t\n//\tsort(e+1,e+m+1,cnp);\n\t\n\tdepth[1] = 1;\n\tmaxi[1][0].dis = -INF;\n\tmaxi[1][0].bh = e[1].bh;\n\t\n\tdfs(1,1);\n\tcaq();\n\n\t\n\tcnt=INF;\n\tfor(long long i=1;i<=m;i++){\n\t\tlong long ww=S/a[i].c;\n\t\tif(vis[i]){\n\t\t\tif(cnt>sum-ww){\n\t\t\t    flag=i;\n\t\t\t}\n\t\t\tcnt=min(sum-ww,cnt);\n\t\t}\n\t\telse{\n\t\t\tlong long fr=a[i].fr;\n\t\t\tlong long to=a[i].to;\n\t\t\tlong long lcaa=lca(fr,to);\n\t\t\tma maxu=get_max(fr,lcaa);\n\t\t\tma maxv=get_max(to,lcaa);\n\t\t\tif(maxu.dis>maxv.dis){\n\t\t\t\tif(cnt>sum-maxu.dis+a[i].dis-ww){\n\t\t\t\t\tcnt=sum-maxu.dis+a[i].dis-ww;\n\t\t\t\t\tv[lkp]=0;\n\t\t\t\t\tv[fjh]=1;\n\t\t\t\t\tv[i]=1;\n\t\t\t\t\tv[maxu.bh]=0;\n\t\t\t\t\tlkp=i;\n\t\t\t\t\tfjh=maxu.bh;\n\t\t\t\t\tflag=i;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(cnt>sum-maxv.dis+a[i].dis-ww){\n\t\t\t\t    cnt=sum-maxv.dis+a[i].dis-ww;\n\t\t\t\t    v[lkp]=0;\n\t\t\t\t    v[fjh]=1;\n\t\t\t\t    v[i]=1;\n\t\t\t\t    v[maxv.bh]=0;\n\t\t\t\t    lkp=i;\n\t\t\t\t    fjh=maxv.bh;\n\t\t\t\t    flag=i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\tcout<<ww<<\"  \";\n\t}\n\tif(flag)\n\t\ta[flag].dis=a[flag].dis-(S/a[flag].c);\n\tprintf(\"%lld\\n\",cnt);\n//\tcout<<flag<<\" \";\n//\tcout<<S/a[flag].c<<endl; \n\tfor(int i=1;i<=m;i++)\n\t\tif(v[i]) printf(\"%lld %lld\\n\",a[i].bh,a[i].dis);\n\treturn 0;\n}\n```\n\n\u7b2c\u4e00\u6b21A\u9ed1\u53ef\u80fd\u6bd4\u8f83\u9e21\u51bb\uff0c\u5982\u679c\u6709\u4ec0\u4e48\u4e0d\u5bf9\u7684\u5730\u65b9\u8bf7\u53ca\u65f6\u544a\u77e5\u6211",
        "postTime": 1602403461,
        "uid": 281497,
        "name": "KEBrantily",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF733F \u3010Drivers Dissatisfaction\u3011"
    },
    {
        "content": "### 0.\u4e00\u4e9b\u60f3\u8bf4\u7684\u4e1c\u897f\n\u8bfe\u4e0a\u8bb2\u4e86\u8fd9\u4e2a\u9898\uff0c\u611f\u89c9\u6ca1\u4ec0\u4e48\u96be\u5ea6\u3002\u5373\u4f7f\u7b97\u4e0a\u4e00\u4e9b\u5b9e\u73b0\u7ec6\u8282\u6211\u611f\u89c9\u6700\u591a\u7d2b\u8272\u4e86\u3002    \n\u53d1\u73b0\u4ec5\u6709\u7684\u4e24\u7bc7\u9898\u89e3\u4ee3\u7801\u6ce8\u91ca\u90fd\u6bd4\u8f83\u5c11\uff08\u81f3\u5c11\u6211\u8fd9\u79cd\u849f\u84bb\u770b\u4e86\u597d\u957f\u65f6\u95f4\uff09\uff0c\u6240\u4ee5\u6211\u53c2\u7167\u7b2c\u4e00\u7bc7\u9898\u89e3\u7684\u4ee3\u7801\uff0c\u53c8\u5199\u4e86\u4e00\u4efd\u66f4\u53ef\u8bfb\u3001\u6ce8\u91ca\u66f4\u5168\u9762\u7684\u3002        \n### 1.\u601d\u8def\n\u697c\u4e0b\u7684\u5404\u4f4d$dalao$\u7684\u601d\u8def\u6bd4\u8f83\u7b80\u77ed\uff0c\u6211\u8fd8\u662f\u6765\u5e26\u7740\u5927\u5bb6\u4e00\u8d77\u770b\u4e00\u770b\u3002      \n\u9996\u5148\uff0c\u6211\u4eec\u6ce8\u610f\u5230\uff0c$c$\u662f\u53ef\u4ee5\u65e0\u9650\u964d\u4f4e\u7684\u3002\u8fd9\u8bf4\u660e\u6211\u4eec\u53ef\u4ee5\u91c7\u53d6\u8d2a\u5fc3\u7684\u624b\u6bb5\uff0c\u628a$S$\u5168\u7528\u5230\u4e00\u6761\u8fb9\u4e0a\uff0c\u8fd9\u6837\u4e00\u5b9a\u662f\u6700\u4f18\u7684\u3002         \n\u73b0\u5728\u6211\u4eec\u7684\u95ee\u9898\uff0c\u4e5f\u662f\u8fd9\u9053\u9898\u7684\u6838\u5fc3\uff0c\u5c31\u662f**\u600e\u4e48\u627e\u8fd9\u6761\u8fb9**\u3002           \n\u6211\u4eec\u53c8\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u53d1\u73b0\uff0c\u8981\u964d\u7684\u8fb9\u672c\u6765\u7684\u8fb9\u6743\u4e5f\u8981\u5c3d\u91cf\u5c0f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6c42\u8fd9\u4e2a\u56fe\u7684**\u6700\u5c0f**\u751f\u6210\u6811\uff0c\u5728\u8fd9\u68f5\u6811\u91cc\u679a\u4e3e$c$\u6700\u5c0f\u7684\u8fb9\u3002             \n\u8fd8\u6709\u4e00\u4e9b\u95ee\u9898\uff1a\u5982\u679c\u6811\u5916\u7684\u8fb9\u66f4\u4f18\u600e\u4e48\u529e\uff1f         \n\u4f8b\u5982\uff1a\u82e5$a_i,a_o$\u4e3a\u4e24\u6761\u5206\u522b\u5728\u6811\u5185\u548c\u6811\u5916\u7684\u8fb9\uff0c$w_i=1,c_i=100,w_o=19,c_o=5,S=100$\uff0c\u6b64\u65f6\uff0c\u9009\u62e9$a_o$\u660e\u663e\u6bd4\u9009\u62e9$a_i$\u66f4\u4f18\u3002\n\u4e8e\u662f\u57fa\u672c\u601d\u8def\u5c31\u51fa\u6765\u4e86\uff1a\u5148\u5efa\u6700\u5c0f\u751f\u6210\u6811\uff0c\u6c42\u51fa\u6811\u91cc$c$\u6700\u5c0f\u7684\u8fb9\uff1b\u518d\u679a\u4e3e\u6811\u5916$c$\u6700\u5c0f\u7684\u8fb9$(u,v)$\uff0c\u7528\u5b83\u66ff\u6362\u539f\u6811\u5185$u,v$\u95f4\u6700\u957f\u8fb9\u3002\n### 2.\u5b9e\u73b0\n\u6700\u5c0f\u751f\u6210\u6811\u7528Kruskal\u5efa\u7acb\uff0c\u7528LCA\u6c42$u,v$\u95f4\u6700\u5927\u8fb9\u6743\u3002         \n\u6c42\u51fa\u6700\u5927\u8fb9\u6743\u540e\u8fd9\u6761\u8fb9\u5c31\u4e0d\u80fd\u8f93\u51fa\u4e86\uff0c\u6240\u4ee5\u5728\u8f93\u51fa\u65f6\u679a\u4e3e\u8fb9\u8fd8\u9700\u8981\u52a0\u4e00\u4e2a\u5224\u65ad\uff1a\u5f53\u524d\u7684\u8fb9\u6ee1\u8db3\u6700\u5927\u8fb9\u6743\u4e14\u5728$u,v$\u4e4b\u95f4\u3002\u9898\u89e3\u4e2d\u7684**\u5728$u,v$\u4e4b\u95f4**\u90a3\u90e8\u5206\u4ee3\u7801\u4e0d\u662f\u5f88\u6e05\u695a\uff0c\u6211\u7ed9\u5927\u5bb6\u6f14\u793a\u4e00\u4e0b\uff1a\n```cpp\ninline bool Check(int a,int b,int c){//Check\u51fd\u6570\u7684\u7528\u9014\u53c2\u7167\u4e0b\u56fe\n\tint ab=LCA_Node(a,b);\n\tint ac=LCA_Node(a,c);\n\tint bc=LCA_Node(b,c);\n\tif(ab==bc&&ac==c)return 1;\n\tif(ab==ac&&bc==c)return 1;\n\treturn 0;\n}\n```\n\uff08\u70b9\u5230LCA\u7684\u8def\u5f84\u88ab\u7701\u7565\u6210\u4e86\u4e00\u6761\u8fb9\uff09      \n![](https://cdn.luogu.com.cn/upload/image_hosting/p8zcz6b3.png)   \n\u6211\u4eec\u6309\u7167\u4ee3\u7801\u91cc\u5199\u7684\u628a\u4e00\u4e9b\u70b9\u91cd\u5408\u770b\u770b\uff1a        \n![](https://cdn.luogu.com.cn/upload/image_hosting/601facto.png)\n![](https://cdn.luogu.com.cn/upload/image_hosting/mi3nyyab.png)    \n\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u5c31\u662f\u7528\u4e8e\u5224\u65ad$c$\u5728$a,b$\u4e4b\u95f4\u7684\u4ee3\u7801\u3002\n### 3.\u4ee3\u7801\n\u7f3a\u7701\u6e90\u592a\u957f\u88ab\u7701\u7565\u4e86\uff0c\u53ef\u4ee5\u53bb[\u6211\u7684\u535a\u5ba2](https://www.cnblogs.com/juruoajh/)\u91cc\u9762\u627e\u3002\n```cpp\n#define N 200010\nint n,m,S;//\u9898\u4e2d\u5b9a\u4e49 \nint fa[N];//\u7528\u4e8e\u5e76\u67e5\u96c6\u7684\u7956\u5148\u6570\u7ec4 \nint dep[N];//\u6df1\u5ea6 \nint f[N][25];//\u7528\u4e8e\u500d\u589e\u7684\u7956\u5148\u6570\u7ec4 \nint mx[N][25];//\u7528\u4e8e\u500d\u589e\u7684\u5f53\u524d\u70b9\u5230\u7956\u5148\u7684\u6700\u5927\u8fb9\u6743\nstruct Edge {\n\tint fr,to,wei,c;//\u8d77\u70b9\uff0c\u7ec8\u70b9\uff0c\u8fb9\u6743\uff0c\u82b1\u8d39\n\tint idx,nxt;//\u7f16\u53f7\uff0c\u4e0b\u4e00\u6761\n\tint st;//\u5f53\u524d\u8fb9\u7684\u72b6\u6001\n\t//st=0\u4e0d\u5728MST\u91cc \n\t//st=1\u5728MST\u91cc \n\t//st=2\u5728MST\u91cc\u4e14\u964d\u4f4e\u4e86\u82b1\u8d39 \n}e[N<<1],t[N<<1];//e\u5b58\u521d\u59cb\u8fb9\uff0ct\u5b58MST\u7684\u8fb9 \nint head[N],cnt;\ninline void ade(int u,int v,int w){\n\tt[++cnt].fr=u,t[cnt].to=v,t[cnt].wei=w;\n\tt[cnt].nxt=head[u],head[u]=cnt;\n}\ninline bool cmp(Edge a,Edge b){\n\treturn a.wei<b.wei;\n}\nint fd(int x){//\u5e76\u67e5\u96c6\u67e5\u627e \n\treturn fa[x]==x?x:fa[x]=fd(fa[x]);\n}\nvoid Union(int u,int v){//\u5e76\u67e5\u96c6\u5408\u5e76 \n\tint fu=fd(u),fv=fd(v);\n\tfa[fu]=fv;\n}\nvoid DFS(int now,int ff,int wei){//\u9884\u5904\u7406 \n\tdep[now]=dep[ff]+1;\n\tf[now][0]=ff;\n\tmx[now][0]=wei;\n\tfor(int i=1;(1<<i)<=n;i++){\n\t\tf[now][i]=f[f[now][i-1]][i-1];//\u666e\u901a\u7684\u500d\u589e\u9884\u5904\u7406 \n\t\tmx[now][i]=max(mx[now][i-1],mx[mx[now][i-1]][i-1]);\n\t}\n\tfor(int i=head[now];i!=-1;i=t[i].nxt){\n\t\tint v=t[i].to;\n\t\tif(v!=ff)DFS(v,now,t[i].wei);\n\t}\n}\ninline int LCA_Node(int u,int v){//\u6b63\u5e38\u7684\u500d\u589e\u6c42LCA \n\tif(dep[u]>dep[v])swap(u,v);\n\tfor(int i=20;i>=0;i--){\n\t\tif(dep[u]<=dep[v]-(1<<i))v=f[v][i];\n\t}\n\tif(u==v)return u;\n\tfor(int i=20;i>=0;i--){\n\t\tif(f[u][i]!=f[v][i]){\n\t\t\tu=f[u][i],v=f[v][i];\n\t\t}\n\t}\n\treturn f[u][0];\n}\ninline int LCA_Max(int u,int v){//\u6b63\u5e38\u7684\u500d\u589e\u6c42u,v\u4e4b\u95f4\u6700\u5927\u8fb9\u6743\n\tint ans=0; \n\tif(dep[u]>dep[v])swap(u,v);\n\tfor(int i=20;i>=0;i--){\n\t\tif(dep[u]<=dep[v]-(1<<i)){\n\t\t\tans=max(ans,mx[v][i]);\n\t\t\tv=f[v][i];\n\t\t}\n\t}\n\tif(u==v)return ans;\n\tfor(int i=20;i>=0;i--){\n\t\tif(f[u][i]!=f[v][i]){\n\t\t\tans=max(ans,max(mx[u][i],mx[v][i]));\n\t\t\tu=f[u][i],v=f[v][i];\n\t\t}\n\t}\n\treturn max(ans,max(mx[u][0],mx[v][0]));\n}\ninline bool Check(int a,int b,int c){//Check\u51fd\u6570\u7684\u7528\u9014\u53c2\u7167\u4e0b\u56fe\n\tint ab=LCA_Node(a,b);\n\tint ac=LCA_Node(a,c);\n\tint bc=LCA_Node(b,c);\n\tif(ab==bc&&ac==c)return 1;\n\tif(ab==ac&&bc==c)return 1;\n\treturn 0;\n}\nsigned main(){\n\t//\u8bfb\u5165+\u9884\u5904\u7406\u90e8\u5206\n\tmemset(head,-1,sizeof(head));\n\tRead(n),Read(m); \n\tfor(int i=1;i<=n;i++)fa[i]=i;\n\tfor(int i=1;i<=m;i++)Read(e[i].wei);\n\tfor(int i=1;i<=m;i++)Read(e[i].c);\n\tfor(int i=1;i<=m;i++){\n\t\tint u,v;\n\t\tRead(u),Read(v);\n\t\te[i].fr=u,e[i].to=v;\n\t\te[i].idx=i,e[i].st=0;\n\t}\n\tRead(S);\n\t//Kruskal\u6c42\u6700\u5c0f\u751f\u6210\u6811(MST)\u90e8\u5206 \n\tsort(e+1,e+m+1,cmp);\n\tint sum=0,minc=INF,lstminc=0;//MST\u4e0a\u8fb9\u6743\u548c\uff0c\u6700\u5c0fc\uff0c\u6700\u5c0fc\u6240\u5728\u8fb9\n\tfor(int i=1;i<=m;i++){//Kruskal\n\t\tint u=e[i].fr,v=e[i].to,w=e[i].wei,c=e[i].c;\n\t\tif(fd(u)!=fd(v)){\n\t\t\tif(c<minc)e[i].st=2,e[lstminc].st=1,minc=c,lstminc=i;\n\t\t\telse e[i].st=1;\n\t\t\tminc=min(minc,c);\n\t\t\tsum+=w;\n\t\t\tUnion(u,v);\n\t\t\tade(u,v,w),ade(v,u,w);\n\t\t}\n\t} \n\t//\u679a\u4e3e\u6811\u5916\u8fb9\u90e8\u5206 \n\tint tans=sum,add=0;//\u6682\u5b58ans\uff0c\u65b0\u52a0\u4e0a\u7684\u975e\u6811\u8fb9 \n\tsum-=S/minc;//\u5148\u4eceMST\u91cc\u9762\u66f4\u65b0\n\tDFS(1,0,0);\n\tfor(int i=1;i<=m;i++){\n\t\tint u=e[i].fr,v=e[i].to,w=e[i].wei,c=e[i].c;\n\t\tif(!e[i].st){//\u9009\u975e\u6811\u8fb9 \n\t\t\tif(c<minc){//\u80af\u5b9a\u8981\u66f4\u4f18\u7684\uff0c\u5426\u5219\u5c31\u76f4\u63a5\u6811\u91cc\u9009\u4e86 \n\t\t\t\tint tmp=tans-LCA_Max(u,v)+w-S/c;//\u8ba1\u7b97\u65b0\u7684\u7b54\u6848 \n\t\t\t\tif(tmp<sum)add=i,sum=tmp;\n\t\t\t}\n\t\t}\n\t} \n\tcout<<sum<<endl;\n\tif(!add){//MST\u5df2\u7ecf\u6700\u4f18\uff0c\u6ca1\u6709\u9009\u6811\u5916\u8fb9 \n\t\tfor(int i=1;i<=m;i++){\n\t\t\tif(e[i].st==1)cout<<e[i].idx<<\" \"<<e[i].wei<<endl;\n\t\t\tif(e[i].st==2)cout<<e[i].idx<<\" \"<<e[i].wei-S/e[i].c<<endl;\n\t\t}\n\t}else {\n\t\tint nu=e[add].fr,nv=e[add].to;\n\t\tbool frog=1;\n\t\tfor(int i=1;i<=m;i++){\n\t\t\tif(i==add)cout<<e[i].idx<<\" \"<<e[i].wei-S/e[i].c<<endl;\n\t\t\tif(e[i].st){\n\t\t\t\t//\u5224\u65ad\u662f\u5426\u88ab\u5220\u9664\u4e86 \n\t\t\t\tif(e[i].wei==LCA_Max(nu,nv)&&Check(nu,nv,e[i].fr)&&Check(nu,nv,e[i].to)&&frog){\n\t\t\t\t\tfrog=0;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tcout<<e[i].idx<<\" \"<<e[i].wei<<endl;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;//\u5b8c\u7ed3\u6492\u82b1 \n}\n```\n### 4.\u7ed3\u675f\u4e86",
        "postTime": 1586735418,
        "uid": 220524,
        "name": "_ajthreac_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF733F \u3010Drivers Dissatisfaction\u3011"
    },
    {
        "content": "## \u6700\u5c0f\u751f\u6210\u6811+LCA\n\n\u7531\u4e8e\u6c42sum(w)\u6700\u5c0f\uff0c\u5f88\u660e\u663e\u6211\u4eec\u627e\u5230\u9009\u4e2d\u7684\u8fb9\u4e2d\u6700\u5c0f\u7684c\u8fdb\u884c\u8ba1\u7b97\n\n\u5148\u6784\u9020\u4e00\u68f5\u6700\u5c0f\u751f\u6210\u6811\uff0c\u5219sum(w)-k/min(c)\u4e3a\u5176\u7b54\u6848\n\n\u53c8\u56e0\u4e3a\u6700\u5c0f\u751f\u6210\u6811\u5916\u7684\u8fb9\u6709\u53ef\u80fd\u88ab\u9009\u4e2d\uff08\u7531\u4e8e\u88ab\u9009\u4e2d\u53ea\u53ef\u80fd\u662fc\u5c0f\u4e8e\u751f\u6210\u6811\u4e2d\u7684min(c)\uff0c\u6240\u4ee5\u6700\u591a\u9009\u4e00\u6761\u6811\u5916\u8fb9\uff09\uff0c\u4f9d\u6b21\u679a\u4e3e\u6bcf\u6761c<min(c)\u7684\u6811\u5916\u8fb9\uff0c\u52a0\u5165\u4e00\u6761\u8fb9\u5219\u9700\u5220\u9664\u4e00\u6761\u8fb9\uff0c\u5e94\u5220\u9664\u8be5\u8fb9u\u3001v\u95f4\u7684\u6700\u957f\u8fb9\uff0c\u53ef\u7528LCA\u8fdb\u884c\u6c42\u89e3\n\n\u6700\u540e\u8bb0\u5f55\u4e0b\u6240\u9009\u7684\u8fb9\u5c31\u884c\u4e86\n\n------------\n\n```\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <queue>\n#include <algorithm>\n#define N 200005\n#define ll long long\n#define inf 1e15\nusing namespace std;\n\nll n,m,k,cnt;\nll head[N],fa[N],p1[N],p2[N];\nll d[N],f[N][25],w[N][25];\n\nstruct node\n{\n\tll u;\n    ll v;\n    ll w;\n    ll c;\n    ll num;\n    ll sig;\n    ll nex;\n}e[2*N],t[2*N];\n\nbool cmp(node x,node y)\n{\n\treturn x.w<y.w;\n}\n\nvoid adde(ll v,ll u,ll w)\n{\n    e[++cnt].u=u;\n    e[cnt].v=v;\n    e[cnt].w=w;\n    e[cnt].nex=head[u];\n    head[u]=cnt;\n}\n\nll finds(ll x)\n{\n\treturn fa[x]==x?x:fa[x]=finds(fa[x]);\n}\n\nvoid joins(ll x,ll y)\n{\n\tll fax=finds(x);\n\tll fay=finds(y);\n\tfa[fax]=fay;\n}\n\nvoid dfs(ll u,ll fau,ll val)\n{\n    d[u]=d[fau]+1;\n    f[u][0]=fau;\n    w[u][0]=val;\n    for(ll i=1;(1<<i)<=n;i++)\n    {\n\t\tf[u][i]=f[f[u][i-1]][i-1];\n    \tw[u][i]=max(w[u][i-1],w[f[u][i-1]][i-1]);\n    }\n    for(ll i=head[u];i!=-1;i=e[i].nex)\n    {\n        ll v=e[i].v;\n        ll w=e[i].w;\n        if(v!=fau) dfs(v,u,w);\n    }\n}\n\nll lca(ll a,ll b)\n{\n\tll ans=0;\n    if(d[a]>d[b]) swap(a,b);\n    for(ll i=20;i>=0;i--)\n    if(d[a]<=d[b]-(1<<i)) ans=max(ans,w[b][i]),b=f[b][i];\n    if(a==b) return ans;\n    for(ll i=20;i>=0;i--)\n    {\n    \tif(f[a][i]==f[b][i]) continue;\n    \tans=max(ans,max(w[a][i],w[b][i]));\n    \ta=f[a][i],b=f[b][i];\n \t}\n    ans=max(ans,max(w[a][0],w[b][0]));\n \treturn ans;\n}\n\nll lcat(ll a,ll b)\n{\n    if(d[a]>d[b]) swap(a,b);\n    for(ll i=20;i>=0;i--)\n    if(d[a]<=d[b]-(1<<i)) b=f[b][i];\n    if(a==b) return a;\n    for(ll i=20;i>=0;i--)\n    {\n    \tif(f[a][i]==f[b][i]) continue;\n    \ta=f[a][i],b=f[b][i];\n \t}\n \treturn f[a][0];\n}\n\nbool pd(ll a,ll b,ll c)\n{\n\tll x1=lcat(a,b);\n\tll x2=lcat(a,c);\n\tll x3=lcat(b,c);\n\tif(x1==x3&&x2==c) return 1;\n\tif(x1==x2&&x3==c) return 1;\n\treturn 0;\n}\n\nint main()\n{\n\tcnt=0;\n    memset(head,-1,sizeof(head));\n    memset(w,0,sizeof(w));\n    memset(f,0,sizeof(f));\n    memset(d,0,sizeof(d));\n\tscanf(\"%lld%lld\",&n,&m);\n    for(ll i=1;i<=n;i++) fa[i]=i;\n    ll a,b;\n    for(ll i=1;i<=m;i++) scanf(\"%lld\",&p1[i]);\n    for(ll i=1;i<=m;i++) scanf(\"%lld\",&p2[i]);\n    for(ll i=1;i<=m;i++)\n    {\n    \tscanf(\"%lld%lld\",&a,&b);\n\t\tt[i].u=a;\n\t\tt[i].v=b;\n\t\tt[i].w=p1[i];\n\t\tt[i].c=p2[i];\n\t\tt[i].num=i;\n\t\tt[i].sig=0;\n\t}\n    sort(t+1,t+m+1,cmp);\n    ll ans=0;\n    ll cmin=inf;\n    ll lastcmin=0;\n    for(ll i=1;i<=m;i++)\n    {\n    \tll u=t[i].u;\n    \tll v=t[i].v;\n    \tll w=t[i].w;\n    \tll c=t[i].c;\n    \tif(finds(u)==finds(v)) continue;\n    \tif(c<cmin) t[i].sig=2,t[lastcmin].sig=1,cmin=c,lastcmin=i;\n    \telse t[i].sig=1;\n    \tcmin=min(cmin,c);\n    \tans+=w;\n    \tjoins(u,v);\n\t\tadde(u,v,w);\n\t\tadde(v,u,w);\n\t}\n    scanf(\"%lld\",&k);\n    ll pre=ans,r=0;\n    ans-=k/cmin;\n    dfs(1,0,0);\n    for(ll i=1;i<=m;i++)\n    {\n    \tll u=t[i].u;\n    \tll v=t[i].v;\n    \tll w=t[i].w;\n    \tll c=t[i].c;\n    \tif(t[i].sig) continue;\n\t\tif(c>=cmin) continue;\n\t\tll tmp=pre+w-lca(u,v);\n\t\ttmp-=k/c;\n\t\tif(tmp<ans) r=i,ans=tmp;\n\t}\n\tprintf(\"%lld\\n\",ans);\n\tif(!r)\n\t{\n\t\tfor(ll i=1;i<=m;i++)\n\t\t{\n\t\t\tif(t[i].sig==1) printf(\"%lld %lld\\n\",t[i].num,t[i].w);\n\t\t\tif(t[i].sig==2) printf(\"%lld %lld\\n\",t[i].num,t[i].w-k/t[i].c);\n\t\t}\n\t}\n\telse\n\t{\n\t\tll u=t[r].u;\n\t\tll v=t[r].v;\n\t\tll xw=lca(u,v);\n\t\tbool flag=1;\n\t\tfor(ll i=1;i<=m;i++)\n\t\t{\n\t\t\tif(i==r) printf(\"%lld %lld\\n\",t[i].num,t[i].w-k/t[i].c);\n\t\t\tif(t[i].sig)\n\t\t\t{\n\t\t\t\tif(xw==t[i].w&&pd(u,v,t[i].u)&&pd(u,v,t[i].v)&&flag) {flag=0;continue;}\n\t\t\t\tprintf(\"%lld %lld\\n\",t[i].num,t[i].w);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1563803439,
        "uid": 71327,
        "name": "piao_A_piao",
        "ccfLevel": 0,
        "title": "CF733F Drivers Dissatisfaction"
    },
    {
        "content": "\u53c8\u662f\u4e00\u9053\u6700\u5c0f\u751f\u6210\u6811\u548clca\u7684CF\u597d\u9898\uff0c~~\u771f\u7684\u5f88\u51c9\u5fc3~~\u3002\n\n\u4e00\u5f00\u59cb\u4ece\u4e25\u683c\u6b21\u5c0f\u751f\u6210\u6811\u70b9\u8fdb\u6765\u7684\u65f6\u5019\uff0c\u6211\u662f\u6ca1\u6709\u4ec0\u4e48\u7075\u611f\u7684\u3002\u4f46\u662f\u6211\u4ece\u9898\u76ee\u91cc\u53cd\u590d\u601d\u8003\uff0c\u8bfb\u61c2\u4e86\u8fd9\u53e5\u8bdd\u3002\n\n>\u539f\u8bdd\uff1a\u73b0\u5728\u4e00\u5171\u6709S\u8d39\u7528\u53ef\u4ee5\u7528\u6765\u964d\u4f4e\u67d0\u4e9b\u8fb9\u7684\u6743\u503c\uff08\u53ef\u4ee5\u964d\u5230\u8d1f\u6570\uff09\n\n\u65e2\u7136\u53ef\u4ee5\u65e0\u9650\u964d\u4f4e\uff0c\u90a3\u6211\u4eec\u4e3a\u4ec0\u4e48\u4e0d\u6311\u51fa$c$\u503c\u6700\u5c0f\u7684\u90a3\u6761\u8fb9\uff0c\u7136\u540e\u628a$S$\u5168\u7528\u5728\u5b83\u4e0a\u9762\u5462\u3002\u663e\u7136\u8fd9\u6837\u662f\u6700\u4f18\u7684\u3002\n\n\u518d\u6df1\u5165\u601d\u8003\u4e00\u4e0b\uff1a\u65e2\u7136\u53ea\u80fd\u964d\u4f4e\u4e00\u6761\u8fb9\u7684\u6743\u503c\u3002\u90a3\u4e48\u6211\u4eec\u6309\u6743\u503c\u6c42\u51fa\u4e86\u4e00\u68f5\u6700\u5c0f\u751f\u6210\u6811\u540e\uff0c\u53ef\u4ee5\u5f97\u5230\u8fd9\u68f5\u6811\u6700\u5c0f\u7684$c$\u503c\uff0c\u79f0\u4e3a$minc$\u3002\n\n\u5982\u679c\u6211\u4eec\u8981\u66f4\u6362\u4e00\u6761\u8fb9\uff0c\u6211\u4eec\u7684\u603b\u6743\u503c\u4e0d\u4f1a\u66f4\u4f18\uff0c\u4f46\u662f\u6700\u5c0f\u7684$c$\u4f1a\u56e0\u6b64\u66f4\u65b0\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u66f4\u6362\u7684\u8fd9\u6761\u8fb9\u53ea\u80fd\u591f\u5c0f\u4e8e$minc$\u3002\n\n\u82e5\u52a0\u5165\u7684\u8fb9\u4e3a$(u,v)$\uff0c\u4e3a\u4e86\u4f7f\u7b54\u6848\u66f4\u4f18\uff0c\u6211\u4eec\u5fc5\u987b\u5220\u53bb$u$\u5230$v$\u7684\u8def\u5f84\u4e0a\u6743\u503c\u6700\u5927\u7684\u8fb9\uff0c~~\u8fd9\u4e0d\u5c31\u662flca\u677f\u5b50\u4e86\u5417~~\u3002\n\n\u7a0b\u5e8f\u6d41\u7a0b\u5c31\u51fa\u6765\u4e86\uff1a\n\n1\u3001\u6309\u6743\u503c\u6c42\u51fa\u6700\u5c0f\u751f\u6210\u6811\u3002\n\n2\u3001\u5728\u8fd9\u9897\u6700\u5c0f\u751f\u6210\u6811\u4e0alca\u9884\u5904\u7406\uff0c\u6c42\u8def\u5f84\u6700\u5927\u503c\u3002\n\n2\u3001\u679a\u4e3e\u672a\u9009\u4e2d\u7684\u8fb9\uff0c\u8003\u8651\u662f\u5426\u52a0\u5165\u3002\u5982\u679c\u7b54\u6848\u66f4\u4f18\uff0c\u90a3\u4e48\u52a0\u5165$q$\u6570\u7ec4\uff0c$q[0]$\u8868\u793a\u8981\u6362\u4e0b\u7684\u8fb9\uff0c$q[1]$\u8868\u793a\u8981\u6362\u4e0a\u7684\u8fb9\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define N 400005\n#define M 400005\nusing namespace std;\nll read() {\n\tll x=0,f=1;\n\tchar ch=getchar();\n\twhile(!isdigit(ch)) {\n\t\tif(ch=='-')f=-1;\n\t\tch=getchar();\n\t}\n\twhile(isdigit(ch)) {\n\t\tx=x*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn f*x;\n}\nstruct edge {\n\tint next,to,id;\n\tll ds;\n} a[N];\nstruct node {\n\tint x,y,id;\n\tll z,c;\n} b[M];\nstruct nod {\n\tll x,d;\n} ans1[M];\nint head[N],cnt,fa1[N],used[M];\nint n,m,fa[N][21],dep[N],A[N][21];\nll ans,dis[N][21],q[2],tot,S;\nint find(int x) {\n\tif(fa1[x]==x)return x;\n\treturn fa1[x]=find(fa1[x]);\n}\nvoid add(int x,int y,int z,int xyz) {\n\ta[++cnt].next=head[x];\n\ta[cnt].to=y;\n\ta[cnt].ds=z;\n\ta[cnt].id=xyz;\n\thead[x]=cnt;\n}\nbool cmp(node a,node b) {\n\tif(a.z!=b.z)return a.z<b.z;\n\treturn a.c<b.c;\n}\nbool kmp(nod a,nod b) {\n\treturn a.x<b.x;\n}\nvoid dfs(int x,int f,int deep) {\n\tdep[x]=deep;\n\tfa[x][0]=f;\n\tfor(int i=1; i<=20; ++i) {\n\t\tfa[x][i]=fa[fa[x][i-1]][i-1];\n\t\tif(dis[x][i-1]>dis[fa[x][i-1]][i-1])dis[x][i]=dis[x][i-1],A[x][i]=A[x][i-1];\n\t\telse dis[x][i]=dis[fa[x][i-1]][i-1],A[x][i]=A[fa[x][i-1]][i-1];\n\t}\n\tfor(int i=head[x]; i; i=a[i].next) {\n\t\tint y=a[i].to;\n\t\tif(y==f)continue;\n\t\tdis[y][0]=a[i].ds;\n\t\tA[y][0]=a[i].id;\n\t\tdfs(y,x,deep+1);\n\t}\n}\nnod ldis(int x,int y) {\n\tll res=0,yyb;\n\tif(dep[x]<dep[y])swap(x,y);\n\tfor(int i=20; i>=0; --i) {\n\t\tif(dep[x]-(1<<i)>=dep[y]) {\n\t\t\tif(res<dis[x][i])res=dis[x][i],yyb=A[x][i];\n\t\t\tx=fa[x][i];\n\t\t}\n\t}\n\tif(x==y)return (nod) {\n\t\tyyb,res\n\t};\n\tfor(int i=20; i>=0; --i) {\n\t\tif(fa[x][i]!=fa[y][i]) {\n\t\t\tif(res<dis[x][i])res=dis[x][i],yyb=A[x][i];\n\t\t\tif(res<dis[y][i])res=dis[y][i],yyb=A[y][i];\n\t\t\tx=fa[x][i];\n\t\t\ty=fa[y][i];\n\t\t}\n\t}\n\tif(res<dis[x][0])res=dis[x][0],yyb=A[x][0];\n\tif(res<dis[y][0])res=dis[y][0],yyb=A[y][0];\n\treturn (nod) {\n\t\tyyb,res\n\t};\n}\nint main() {\n\tn=read();\n\tm=read();\n\tfor(int i=1; i<=m; ++i)b[i].z=read();\n\tfor(int i=1; i<=m; ++i)b[i].c=read();\n\tfor(int i=1; i<=m; ++i)b[i].x=read(),b[i].y=read(),b[i].id=i;\n\tS=read();\n\tsort(b+1,b+m+1,cmp);\n\tfor(int i=1; i<=n; ++i)fa1[i]=i;\n\tll minn=1e9+1,sum=0,biao;//minn\u7684\u521d\u503c\u75281e9\u4f1aWA96\u90a3\u4e2a\u70b9\uff0c\u4eb2\u6d4b(\u6bd4S\u5927\u5373\u53ef)\n\tfor(int i=1; i<=m; ++i) {\n\t\tint xzz=find(b[i].x),yyb=find(b[i].y);\n\t\tif(xzz!=yyb) {\n\t\t\tfa1[xzz]=yyb;\n\t\t\tsum+=b[i].z;\n\t\t\tused[i]=1;\n\t\t\tif(b[i].c<minn)minn=b[i].c,biao=i;\n\t\t\tadd(b[i].x,b[i].y,b[i].z,i);\n\t\t\tadd(b[i].y,b[i].x,b[i].z,i);\n\t\t}\n\t}\n\tans=sum-S/minn;\n\tdfs(1,0,1);\n\tfor(int i=1; i<=m; ++i) {\n\t\tif(used[i]||minn<=b[i].c)continue;\n\t\tnod xzz=ldis(b[i].x,b[i].y);\n\t\tll yyb=sum-xzz.d+b[i].z-S/b[i].c;\n\t\tif(yyb<ans) {\n\t\t\tq[0]=xzz.x;\n\t\t\tq[1]=i;\n\t\t\tans=yyb;\n\t\t}\n\t}\n\tcout<<ans<<endl;\n\tif(!q[0]) {//\u4e00\u5f00\u59cb\u6c42\u51fa\u7684\u6700\u5c0f\u751f\u6210\u6811\u5c31\u662f\u7b54\u6848\n\t\tfor(int i=1; i<=m; ++i) {\n\t\t\tif(used[i]) {\n\t\t\t\tans1[++tot].x=b[i].id;\n\t\t\t\tif(biao==i)ans1[tot].d=b[i].z-S/b[i].c;\n\t\t\t\telse ans1[tot].d=b[i].z;\n\t\t\t}\n\t\t}\n\t} else {//\u9700\u8981\u6362\u4e00\u6761\u8fb9\n\t\tfor(int i=1; i<=m; ++i) {\n\t\t\tif(used[i]&&q[0]!=i) {\n\t\t\t\tans1[++tot].x=b[i].id;\n\t\t\t\tans1[tot].d=b[i].z;\n\t\t\t} else if(q[1]==i) {\n\t\t\t\tans1[++tot].x=b[i].id;\n\t\t\t\tans1[tot].d=b[i].z-S/b[i].c;\n\t\t\t}\n\t\t}\n\t}\n\tsort(ans1+1,ans1+tot+1,kmp);\n\tfor(int i=1; i<=tot; ++i)printf(\"%lld %lld\\n\",ans1[i].x,ans1[i].d);\n\treturn 0;\n}\n```",
        "postTime": 1571905766,
        "uid": 113510,
        "name": "\u98ce\u534e\u6b63\u8302",
        "ccfLevel": 0,
        "title": "CF733F Drivers Dissatisfaction"
    },
    {
        "content": "[$\\tt Link$](/problem/CF733F)\u3002\n\n**\u6211\u4eec\u6240\u6709\u7684\u4ee3\u4ef7\u53ea\u4f1a\u7528\u5728\u4e00\u6761\u8fb9\u4e0a**\u3002\u56e0\u4e3a\u5982\u679c\u4ee3\u4ef7\u88ab\u7528\u5728\u591a\u4e2a\u8fb9\u4e0a\uff0c\u90a3\u4e48\u627e\u5230\u5176\u4e2d $c$ \u6700\u5c0f\u7684\u4e00\u6761\uff0c\u4ee3\u4ef7\u5168\u7528\u5728\u4e0a\u9762\u5c06\u4f1a\u66f4\u4f18\u3002\n\n\u4e8e\u662f\u6211\u4eec\u679a\u4e3e\u6bcf\u4e00\u6761\u8fb9\u4f5c\u4e3a\u8fd9\u4e2a *\u7279\u6b8a\u8fb9*\uff0c\u8ba1\u7b97\u51fa\u5982\u679c\u9009\u7528\u5b83\u5c06\u4f1a\u5e26\u6765\u7684\u4f18\u60e0 $v$\u3002\u7136\u540e\u8ba1\u7b97 **\u56fa\u5b9a\u6b64\u8fb9\u5fc5\u9009** \u65f6\u7684 **\u6700\u5c0f\u751f\u6210\u6811\u603b\u8fb9\u6743**\uff0c\u5728\u7ed3\u5408\u4f18\u60e0\uff0c\u770b\u770b\u603b\u548c\u662f\u5426\u66f4\u4f18\u3002\n\n\u56fa\u5b9a\u4e00\u6761\u8fb9\u5fc5\u9009\u7684 $\\tt MST$ \u662f\u4e2a\u7ecf\u5178\u95ee\u9898\u3002\u53c2\u7167 [\u4e25\u683c\u6b21\u5c0f\u751f\u6210\u6811](/problem/P4180)\u3002\n\n\u505a\u6cd5\u662f\u8003\u8651\u52a0\u5165\u8fd9\u4e00\u6761\u8fb9\uff0c\u8bbe\u5176 $\\{x,y\\}$\uff0c\u7136\u540e\u4f1a\u5f62\u6210\u4e00\u4e2a\u73af\uff0c\u6211\u4eec\u5220\u53bb\u73af\u4e0a\u7684\u975e $\\{x,y\\}$ \u7684\u6700\u5927\u8fb9\u3002\n\n\u597d\u5427\u5176\u5b9e\u5c31\u662f\u82e5\u5e72\u6b21\u94fe\u6700\u5927\u503c\u8be2\u95ee\u3002\n\n\u8fd9\u975e\u5e38\u7684\u5e73\u51e1\u3002\u6811\u5256\u5957 $\\tt ST$ \u8868\u5373\u53ef\u7b80\u5355\u505a\u5230 $O(1)$\u3002\n\n\u4f46\u662f\u8fd9\u9898\u8981\u8f93\u51fa\u65b9\u6848\uff0c\u5c5e\u4e8e\u662f\u6076\u5fc3\u3002\u5bf9\u5e94\u7684 $\\tt ST$ \u8868\u9700\u8981\u652f\u6301\u6c42\u6700\u5927\u503c\u7684\u4f4d\u7f6e\u3002\n\n\u6574\u4f53\u5176\u5b9e\u5e76\u4e0d\u7b97\u96be\uff0c\u4f46\u6211\u89c9\u5f97\u4e0d\u6b62 $\\tt^\\ast2200$ \u3002\n\n```cpp\n#import<stdio.h>\n#import<vector>\n#import<tuple>\n#import<numeric>\n\nusing namespace std;\n\nusing ll = long long;\n\nconst int N = 2e5 + 5;\n\nint n,m,s,tc[N],tw[N],pa[N];\nll res = 0;\nvector<pair<int,int>> G[N];\npair<int,int> st[22][N];\nint lg2[N];\nint dep[N],siz[N],son[N],fa[N],wei[N];\nint dfn[N],adfn[N],top[N],tot = 0;\ntuple<int,int,int,int,int,bool> E[N];\n\nint fnd(int i){ return i == pa[i] ? i : pa[i] = fnd(pa[i]); }\n\nvoid dfs1(int u = 1,int ft = 0){\n\tdep[u] = dep[fa[u] = ft] + 1;\n\tsiz[u] = 1;\n\tfor(auto[v,w] : G[u]) if(v != ft){\n\t\tdfs1(v,u); wei[v] = w;\n\t\tsiz[u] += siz[v];\n\t\tif(siz[v] > siz[son[u]]) son[u] = v;\n\t}\n}\n\nvoid dfs2(int u = 1,int tp = 1){\n\tadfn[dfn[u] = ++tot] = u; top[u] = tp;\n\tif(son[u]) dfs2(son[u],tp);\n\tfor(auto[v,w] : G[u]) if(!top[v]) dfs2(v,v);\n}\n\nvoid build(){\n\tfor(int i = 2;i <= n;++i) lg2[i] = lg2[i >> 1] + 1;\n\tfor(int i = 1;i <= n;++i) st[0][i] = make_pair(wei[adfn[i]],adfn[i]);\n\tfor(int j = 1;(1 << j) <= n;++j)\n\t\tfor(int i = 1;i + (1 << j) - 1 <= n;++i)\n\t\t\tst[j][i] = max(st[j - 1][i],st[j - 1][i + (1 << j - 1)]);\n}\n\nauto query(int l,int r){\n\tint k = lg2[r - l + 1];\n\treturn max(st[k][l],st[k][r - (1 << k) + 1]);\n}\n\nauto qry(int x,int y){\n\tauto res = make_pair(0,0);\n\twhile(top[x] != top[y]){\n\t\tif(dep[top[x]] < dep[top[y]]) swap(x,y);\n\t\tres = max(res,query(dfn[top[x]],dfn[x]));\n\t\tx = fa[top[x]];\n\t}\n\tif(dep[x] > dep[y]) swap(x,y);\n\treturn max(res,query(dfn[x] + 1,dfn[y]));\n}\n\nvoid MST(){\n\tiota(pa,pa + n + 1,0);\n\tsort(E + 1,E + m + 1);\n\tfor(int i = 1;i <= m;++i){\n\t\tauto&[w,u,v,c,I,f] = E[i];\n\t\tint fu = fnd(u),fv = fnd(v);\n\t\tif(fu == fv) continue;\n\t\tG[u].emplace_back(v,w);\n\t\tG[v].emplace_back(u,w);\n\t\tpa[fu] = fv; res += w; f = true;\n\t}\n}\n\nvoid solve(){\n\tll ans = res; int id1,id2;\n\tfor(int i = 1;i <= m;++i){\n\t\tauto[w,u,v,c,I,f] = E[i];\n\t\tauto[x,y] = qry(u,v);\n\t\tll cur = res - (s / c);\n\t\tif(!f) cur += w - x;\n\t\tif(cur < ans){\n\t\t\tans = cur,id1 = i;\n\t\t\tif(!f) id2 = y;\n\t\t}\n\t}\n\tprintf(\"%lld\\n\",ans);\n\tfor(int i = 1;i <= m;++i){\n\t\tauto[w,u,v,c,I,f] = E[i];\n\t\tif(i == id1) printf(\"%d %d\\n\",I,w - (s / c));\n\t\telse if(f){\n\t\t\tint p = fa[u] == v ? u : v;\n\t\t\tif(id2 != p) printf(\"%d %d\\n\",I,w);\n\t\t}\n\t}\n}\n\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i = 1;i <= m;++i) scanf(\"%d\",tw + i);\n\tfor(int i = 1;i <= m;++i) scanf(\"%d\",tc + i);\n\tfor(int i = 1;i <= m;++i){\n\t\tint a,b;\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tE[i] = make_tuple(tw[i],a,b,tc[i],i,false);\n\t}\n\tMST(); dfs1(); dfs2(); build();\n\tscanf(\"%d\",&s); solve();\n\treturn 0;\n}\n```",
        "postTime": 1661244304,
        "uid": 368107,
        "name": "xfrvq",
        "ccfLevel": 7,
        "title": "CF733F MST+\u6811\u5256+RMQ"
    },
    {
        "content": "## CF733F\n\n### \u5e9f\u8bdd\uff1a\n\n\u5f88\u4e45\u6ca1\u5199\u9898\u89e3\u4e86\uff0c\u8fd9\u9053\u9898\u6bd4\u8f83\u6c34\uff0c\u6765\u6c34\u4e00\u6ce2\u9898\u89e3\u3002\uff08\u5c45\u7136\u6ca1\u4eba\u5199\u6811\u94fe\u5256\u5206\uff1f\uff01\uff09\n\n### \u9898\u610f\uff1a\n\n\u7ed9\u5b9a\u4e00\u5f20\u65e0\u5411\u56fe\uff0c\u8fb9\u6709\u8fb9\u6743\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4e0d\u8d85\u8fc7 $s$ \u7684\u4ee3\u4ef7\u964d\u4f4e\u4e00\u4e9b\u8fb9\u7684\u8fb9\u6743\uff0c\u5176\u4e2d\u7b2c $i$ \u6761\u8fb9\u964d\u4f4e $\\text{1}$ \u8fb9\u6743\u7684\u4ee3\u4ef7\u4e3a $c_i$ \u3002\uff08\u8fb9\u6743\u53ef\u4ee5\u4e3a\u8d1f\u6570\uff09\uff0c\u4f60\u9700\u8981\u4f7f\u5f97\u964d\u4f4e\u8fb9\u6743\u540e\u7684\u56fe\u7684 $\\text{MST}$ \u8fb9\u6743\u548c\u6700\u5c0f\u3002\n\n### \u601d\u8def\uff1a\n\n#### MST=\u6700\u5c0f\u751f\u6210\u6811\n\n\u7ed3\u8bba\u4e00\uff1a\u6211\u4eec\u5fc5\u7136\u4f1a\u9009\u964d\u4f4e\u4e86\u8fb9\u6743\u7684\u8fb9\uff0c\u8fd9\u4e2a\u662f\u663e\u7136\u7684\uff0c\u4e0d\u7136\u8fd8\u4e0d\u5982\u4e0d\u964d\u3002\n\n\u7ed3\u8bba\u4e8c\uff1a\u4e00\u5b9a\u53ea\u4f1a\u964d\u4f4e\u4e00\u6761\u8fb9\u7684\u8fb9\u6743\uff0c\u8fd9\u4e2a\u4e5f\u662f\u663e\u7136\u7684\uff0c\u4f46\u4ee5\u4e0b\u7ed9\u51fa\u8bc1\u660e\uff1a\u5047\u8bbe\u964d\u4f4e\u4e86\u591a\u6761\u8fb9\u7684\u8fb9\u6743\uff0c\u90a3\u4e48\u8fd9\u4e9b\u8fb9\u90fd\u4f1a\u9009\uff08\u53c2\u7167\u7b2c\u4e00\u4e2a\u7ed3\u8bba\uff09\uff0c\u90a3\u4e3a\u4ec0\u4e48\u6211\u4eec\u4e0d\u53ea\u964d\u4f4e\u5b83\u4eec\u4e2d $c_i$ \u6700\u5c0f\u7684\u90a3\u4e00\u6761\u8fb9\u6765\u83b7\u5f97\u4e00\u4e2a\u66f4\u4f18\u7684 $\\text{MST}$ \u5462\uff1f\n\n\u63a5\u4e0b\u6765\u600e\u4e48\u641e\uff1f\u679a\u4e3e\u964d\u4f4e\u6743\u503c\u7684\u8fb9\u6c42 $\\text{MST}$ \uff1f\uff0c\u590d\u6742\u5ea6\u4e0d\u5bf9\uff0c\u4f46\u6b63\u786e\u6027\u663e\u7136\u3002\n\n\u5176\u5b9e\u6211\u4eec\u53d1\u73b0\u5b83\u5c31\u76f8\u5f53\u4e8e\u5f3a\u5236\u8981\u6c42\u9009\u5b9a\u4e00\u6761\u8fb9\uff0c\u7136\u540e\u518d\u6c42 $\\text{MST}$ \u3002\n\n\u719f\u6089\u4e00\u70b9\u7684\u540c\u5b66\u9a6c\u4e0a\u5c31\u53ef\u4ee5\u77e5\u9053\u53ea\u9700\u8981\u6c42\u51fa $\\text{MST}$ \u518d\u66ff\u6362\u8fb9\u5c31\u53ef\u4ee5\u4e86\uff0c\u4f46\u662f\u4e3a\u4ec0\u4e48\u8fd9\u6837\u662f\u5bf9\u7684\u5462\uff0c\u4e0b\u9762\u5c06\u7ed9\u51fa\u8bc1\u660e\uff1a\n\n\u8003\u8651 $\\text{Kruscal}$ \u7684\u8fc7\u7a0b\uff0c\u5982\u679c\u4e00\u6761\u8fb9 $u,v$ \u4f1a\u4f7f\u5f97\u6700\u7ec8\u7684\u7b54\u6848\u53d8\u5c0f\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u7684\u8981\u66ff\u6362\u7684\u8fb9 $u,v$ \u5c31\u662f\u5728\u6392\u5e8f\u7684\u8fc7\u7a0b\u4e2d\u5728 $u,v$ \u76f8\u8fde\u4e4b\u524d\u88ab\u8003\u8651\u4e86\u8fdb\u53bb\uff0c\u5728\u9009 $u,v$ \u4e4b\u524d\u7684\u6240\u6709\u8fb9\u548c\u539f\u6765\u7684 $\\text{MST}$ \u662f\u4e00\u81f4\u7684\uff0c\u5728\u9009\u4e86 $u,v$ \u4e4b\u540e\uff0c\u56e0\u4e3a $u,v$ \u5df2\u7ecf\u76f8\u8fde\u4e86\uff0c\u6240\u4ee5\u539f\u6765\u7684 $\\text{Kruscal}$ \u8fc7\u7a0b\u4e2d\u628a $u,v$ \u8fde\u8d77\u6765\u7684\u6700\u540e\u4e00\u6761\u8fb9\u5c31\u4e0d\u4f1a\u88ab\u9009\u62e9\uff0c\u4f46\u5176\u4ed6\u7684\u8fb9\u4f9d\u7136\u6309\u987a\u5e8f\u6392\u5217\uff0c\u6240\u4ee5\u8fd8\u662f\u4f1a\u9009\u62e9\u539f\u5148\u9009\u62e9\u7684\u8fb9\u3002\n\n\u6240\u4ee5\u6211\u4eec\u968f\u4fbf\u6c42\u51fa\u4e00\u9897 $\\text{MST}$ \uff0c\u7136\u540e\u8003\u8651\u66ff\u6362\u8fb9\uff0c\u8bbe\u66ff\u6362\u7684\u8fb9\u662f $u,v$ \u6bcf\u6b21\u53ea\u9700\u8981\u6c42\u51fa $\\text{MST}$ \u4e0a\u8def\u5f84 $u,v$ \u4e0a\u8fb9\u6743\u6700\u5927\u7684\u8fb9\u5e76\u5220\u6389\u5b83\u66ff\u6362\u6210 $u,v$ \u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u6837\u7684\u8bdd\u4fdd\u8bc1\u4e86\u56fe\u8fd8\u662f\u4e00\u9897\u6811\u3002\n\n\u8fd9\u91cc\u53ef\u80fd\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u4e3a\u4ec0\u4e48\u968f\u4fbf\u4e00\u9897 $\\text{MST}$ \u90fd\u53ef\u4ee5\uff0c\u56e0\u4e3a\u4efb\u610f\u4e00\u4e2a $\\text{MST}$ \u4e2d\uff0c\u53d1\u6325\u8fde\u63a5\u6700\u7ec8\u4e24\u4e2a\u56fa\u5b9a\u7684\u70b9 $u,v$ \u7684\u8fb9\u7684\u6743\u503c\u4e00\u5b9a\u90fd\u662f\u4e00\u6837\u7684\uff0c\u53ef\u4ee5\u611f\u6027\u7406\u89e3\u4e00\u4e0b\uff0c\u6240\u4ee5 $u,v$ \u8def\u5f84\u4e0a\u6700\u5927\u8fb9\u7684\u6743\u503c\u4e00\u5b9a\u662f\u4e00\u6837\u7684\u3002\n\n\u4f7f\u7528\u6811\u94fe\u5256\u5206\u7ef4\u62a4\u6811\u4e0a\u8def\u5f84\u8fb9\u6743\u6700\u5927\u7684\u8fb9\u3002\u679a\u4e3e\u6bcf\u6761\u8fb9\uff0c\u5982\u679c\u662f\u6811\u8fb9\uff0c\u76f4\u63a5\u6263\u6389\u6743\u503c\uff0c\u5982\u679c\u662f\u975e\u6811\u8fb9\uff0c\u6263\u6389\u6743\u503c\u540e\u52a0\u8fdb\u53bb\uff0c\u7136\u540e\u51cf\u6389\u8def\u5f84 $u,v$ \u4e0a\u8fb9\u6743\u6700\u5927\u7684\u8fb9\u5373\u53ef\u3002\n\n### \u5173\u4e8e\u6811\u94fe\u5256\u5206 \uff1a\n\n\u5176\u5b9e\u8fd9\u9053\u9898\u5b8c\u5168\u53ef\u4ee5\u7528\u6811\u4e0a\u500d\u589e\u505a\uff0c\u4f46\u4e3b\u8981\u662f\u4e3a\u4e86\u7ec3\u4e00\u4e0b\u7801\u529b\uff0c\u6240\u4ee5\u849f\u84bb\u6bc5\u7136\u9009\u62e9\u4e86 4Kb \u7684\u6811\u94fe\u5256\u5206\uff0c\u7ec6\u8282\u5c06\u5728\u4ee3\u7801\u4e2d\u4f53\u73b0\u3002\n\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long//\u663e\u7136\u9700\u8981\u5f00long long \u4f46\u6211\u5f88\u61d2\nusing namespace std;\ninline void read(int &x)\n{\n\tx=0;int f=1;\n\tchar ch=getchar();\n\twhile((ch<'0'||ch>'9')&&ch!='-')ch=getchar();\n\tif(ch=='-'){f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\tx*=f;\n}\nconst int N=2e5+10;\nint i,j,k,m,n,s,t,cnt;\nstruct fu{\n\tint next,p,val,c,u,v,rk;\n    //val,c\u540c\u9898\u610f\n    //p\u8bb0\u5f55\u8be5\u8fb9\u662f\u5426\u5728mst\u4e2d\n    //rk\u8bb0\u5f55\u8be5\u8fb9\u7684\u539f\u5148\u7f16\u53f7\n}a[N<<1];//\u53cc\u5411\u8fb92\u500d\nstruct Tree{\n\tint max,rk;\n}T[N<<2],val[N];//\u7ebf\u6bb5\u68114\u500d\nint head[N],fa[N],tdv[N],tdc[N];\nint rak[N],dfn[N],top[N],son[N],size[N],dep[N];\nvoid work(int aa,int bb,int cc,int dd)\n{\n\ta[++k].next=head[aa];\n\thead[aa]=k;\n\ta[k].v=bb;\n\ta[k].u=aa;\n\ta[k].val=cc;\n\ta[k].c=dd;\n\ta[k].rk=k;\n}\nint find(int x)\n{\n\treturn fa[x]==x?x:fa[x]=find(fa[x]);\n}\nbool cmp(fu aa,fu bb)\n{\n\tif(aa.val!=bb.val)\n\treturn aa.val<bb.val;\n\treturn aa.rk<bb.rk;//\u4e3a\u4e86\u9632\u6b62\u4e00\u4e9b\u5947\u5947\u602a\u602a\u7684\u95ee\u9898\n}\nbool cmp2(fu aa,fu bb)\n{\n\treturn aa.rk<bb.rk;\n}\nint kru()\n{\n\tsort(a+1,a+k+1,cmp);\n\tint ret=0;\n\tint rt[N<<2];//\u56e0\u4e3a\u8fdb\u884c\u4e86\u6392\u5e8f\uff0c\u6240\u6709head\u548cnext\u88ab\u6253\u4e71\u4e86\uff0c\u9700\u8981\u91cd\u65b0\u8ba1\u7b97\n\tmemset(rt,0,sizeof(rt));\n\tfor(i=1;i<=k;i++)\n\trt[a[i].rk]=i;\n\tfor(i=1;i<=n;i++)\n\thead[i]=rt[head[i]];\n\tfor(i=1;i<=k;i++)\n\ta[i].next=rt[a[i].next];\n\tfor(i=1;i<=k;i+=2)\n\t{\n\t\tint u=find(a[i].u);int v=find(a[i].v);\n\t\tif(u==v)\n\t\tcontinue;\n\t\tret+=a[i].val;\n\t\tfa[u]=v;\n\t\ta[i].p=a[i+1].p=1;\n\t\tcnt++;//Kruscal\n\t}\n\tfor(i=1;i<=k;i++)\n\ta[i].rk=(a[i].rk-1)/2+1;//\u91cd\u7b97\u7f16\u53f7\n\treturn ret;\n}\nvoid dfs1(int u)\n{\n\tsize[u]=1;\n\tfor(int i=head[u];i;i=a[i].next)\n\t{\n\t\tint v=a[i].v;\n\t\tif(fa[u]==v||a[i].p==0)//\u975e\u6811\u8fb9\u8981\u5ffd\u7565\n\t\tcontinue;\n\t\tfa[v]=u;\n\t\tval[v].max=a[i].val;//\u6ce8\u610f\u9700\u8981\u8bb0\u5f55\u8fb9\u7684\u7f16\u53f7\n\t\tval[v].rk=a[i].rk;//\u6211\u4eec\u7528\u4e00\u4e2a\u70b9\u7684\u503c\u4ee3\u8868\u8fde\u5411\u5b83\u7236\u4eb2\u7684\u8fb9\u7684\u6743\u503c\n\t\tdep[v]=dep[u]+1;\n\t\tdfs1(v);\n\t\tsize[u]+=size[v];\n\t\tif(size[v]>size[son[u]])\n\t\tson[u]=v;\n\t}\n}\nvoid dfs2(int u)\n{\n\tdfn[u]=++t;rak[t]=u;\n\tif(son[fa[u]]==u)\n\ttop[u]=top[fa[u]];\n\telse\n\ttop[u]=u;\n\tif(son[u])\n\tdfs2(son[u]);\n\tfor(int i=head[u];i;i=a[i].next)\n\t{\n\t\tint v=a[i].v;\n\t\tif(son[u]==v||a[i].p==0||fa[u]==v)\n\t\tcontinue;\n\t\tdfs2(v);\n\t}//\u6811\u5256\u57fa\u7840\n}\nTree push_up(Tree aa,Tree bb)\n{\n\tTree ret;\n\tif(aa.max>bb.max)\n\t{\n\t\tret.max=aa.max;\n\t\tret.rk=aa.rk;\n\t}\n\telse\n\t{\n\t\tret.max=bb.max;\n\t\tret.rk=bb.rk;\n\t}\n\treturn ret;//\u5408\u5e76\u7b54\u6848\n}\nvoid build(int l,int r,int rt)\n{\n\tif(l==r)\n\t{\n\t\tT[rt]=val[rak[l]];\n\t\treturn;\n\t}\n\tint mid=(l+r)/2;\n\tbuild(l,mid,rt<<1);\n\tbuild(mid+1,r,rt<<1|1);\n\tT[rt]=push_up(T[rt<<1],T[rt<<1|1]);\n}\nTree quert(int l,int r,int rt,int x,int y)\n{\n\tif(x<=l&&y>=r)\n\treturn T[rt];\n\tTree ret;ret.max=0;\n\tif(x>y)return ret; //\u8bb0\u5f97\u9000\u51fa\uff0c\u4e0d\u7136\u4f1a\u6b7b\u6389\n\tint mid=(l+r)/2;\n\tif(x<=mid)\n\tret=quert(l,mid,rt<<1,x,y);\n\tif(y>mid)\n\tret=push_up(quert(mid+1,r,rt<<1|1,x,y),ret);\n\treturn ret;\n}\nTree query(int u,int v)\n{\n\tif(top[u]==top[v])\n\t{\n\t\tif(dep[u]>dep[v])//\u8bb0\u5f97\u4ea4\u6362\u4f4d\u7f6e\n\t\tswap(u,v);\n\t\treturn quert(1,n,1,dfn[u]+1,dfn[v]);//LCA\u4e0d\u8981\u7b97\u8fdb\u53bb\u4e86\uff0c\u5b83\u4e0d\u5bf9\u7b54\u6848\u8d21\u732e\n\t}\n\tif(dep[top[u]]<dep[top[v]])//\u6811\u5256\u6700\u5bb9\u6613\u51fa\u95ee\u9898\u7684\u5730\u65b9\u4e4b\u4e00\uff08\u4e00\u5b9a\u662ftop[u]\u548ctop[v]\u6bd4\u6df1\u5ea6\uff09\n\tswap(u,v);\n\tTree ret1,ret2;\n\tret1=quert(1,n,1,dfn[top[u]],dfn[u]);//\n\tret2=query(fa[top[u]],v);\n\treturn push_up(ret1,ret2);\n}\nsigned main()\n{\n\t//freopen(\".in\",\"r\",stdin);\n\t//freopen(\".out\",\"w\",stdout);\n\t//freopen(\".ans\",\"w\",stdout);\n\tread(n),read(m);\n\tfor(i=1;i<=m;i++)\n\tread(tdv[i]);\n\tfor(i=1;i<=m;i++)\n\tread(tdc[i]);\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tint x,y;\n\t\tread(x),read(y);\n\t\twork(x,y,tdv[i],tdc[i]);\n\t\twork(y,x,tdv[i],tdc[i]);\n\t}\n\tread(s);\n\tfor(i=1;i<=n;i++)\n\tfa[i]=i;\n\tint all=kru();\n\tmemset(fa,0,sizeof(fa));\n\tdfs1(1);\n\tdfs2(1);\n\tbuild(1,n,1);\n\tint ans=all,max1=0,max2=0;\n\t{\n\t\tfor(i=1;i<=k;i+=2)\n\t\t{\n\t\t\tif(a[i].p)\n\t\t\t{\n\t\t\t\tint tmp=all-s/a[i].c;\n\t\t\t\tif(ans>tmp)\n\t\t\t\t{\n\t\t\t\t\tans=tmp;\n\t\t\t\t\tmax1=max2=a[i].rk;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tint u=a[i].u,v=a[i].v;\n\t\t\tTree sum=query(u,v);\n\t\t\tint tmp=all+a[i].val-sum.max-s/a[i].c;\n\t\t\tif(tmp<ans)\n\t\t\t{\n\t\t\t\tmax1=a[i].rk;\n\t\t\t\tmax2=sum.rk;\n\t\t\t\tans=tmp;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%lld\\n\",ans);\n\tsort(a+1,a+k+1,cmp2);\n\tfor(i=1;i<=k;i+=2)\n\t{\n\t\tif((a[i].p&&max2!=a[i].rk)||max1==a[i].rk)\n\t\t{\n\t\t\tprintf(\"%d \",a[i].rk);\n\t\t\tint x=a[i].val;\n\t\t\tif(max1==a[i].rk)\n\t\t\tx-=s/a[i].c;\n\t\t\tprintf(\"%d\\n\",x);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\n\n \n\n",
        "postTime": 1617768766,
        "uid": 177535,
        "name": "CDFLS_mao_zx",
        "ccfLevel": 7,
        "title": "CF733F\u9898\u89e3"
    },
    {
        "content": "## CF733F Drivers Dissatisfaction\n\n> \u7ed9\u51fa\u4e00\u5f20 $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u6bcf\u6761\u8fb9 $(a_i,b_i)$ \u6709\u4e00\u4e2a\u6743\u503c $w_i$ \u548c\u8d39\u7528 $c_i$\u8868\u793a\u8fd9\u6761\u8fb9 \u6bcf\u964d\u4f4e $1$ \u7684\u6743\u503c\u9700\u8981 $c_i$ \u7684\u82b1\u8d39\u3002\u73b0\u5728\u4e00\u5171\u6709 $S$ \u8d39\u7528\u53ef\u4ee5\u7528\u6765\u964d\u4f4e\u67d0\u4e9b\u8fb9\u7684\u6743\u503c\uff08\u53ef\u4ee5\u964d\u5230\u8d1f\u6570\uff09\uff0c\u6c42\u56fe\u4e2d\u7684\u4e00\u68f5\u6743\u503c\u548c\u6700\u5c0f\u7684\u751f\u6210\u6811\u5e76\u8f93\u51fa\u65b9\u6848\n\n**solution**\n\n\u56e0\u4e3a\u53ef\u4ee5\u51cf\u5230\u8d1f\u6570\uff0c\u90a3\u4e48\u80af\u5b9a\u5c31\u5168\u90e8\u628a\u94b1\u82b1\u5728\u4e00\u6761\u8fb9\u4e0a\uff08~~\u902e\u4e00\u6761\u82b1\u8d39\u6700\u5c11\u7684\u72c2\u51cf~~\uff09\n\n\u4f46\u8fd9\u6761\u8fb9\u5206\u4e24\u79cd\u60c5\u51b5\n\n- \u6811\u8fb9\uff0c\u80af\u5b9a\u8981\u627e\u4e00\u4e2a\u82b1\u8d39\u5c11\u7684\u6811\u8fb9\n- \u975e\u6811\u8fb9\uff0c\u5c31\u8981\u4ece\u6811\u4e0a\u5408\u6cd5\u7684\u8fb9\u4e2d\u627e\u4e00\u6761\u6743\u503c\u6700\u5927\u7684\u4e2d\u88ab\u5b83\u4ee3\u66ff\n\n\u5408\u6cd5\u7684\u8fb9\uff1a\u4ece\u8fd9\u6761\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u5411\u4e0a\u627e $LCA$ \uff0c\u4e24\u4e2a\u70b9\u5230 $LCA$ \u8def\u5f84\u4e0a\u7684\u6240\u6709\u8fb9\uff08\u56e0\u4e3a\u4f60\u8981\u4fdd\u8bc1\u66ff\u6362\u5b8c\u4e4b\u540e\uff0c\u8fd8\u80fd\u548c\u539f\u6765\u6700\u5c0f\u751f\u6210\u6811\u4e0a\u7684\u8fb9\u6784\u6210\u4e00\u68f5\u6811\uff09\n\n\u627e $LCA$ \u7684\u65f6\u5019\u662f\u5728\u6700\u5c0f\u751f\u6210\u6811\u4e0a\u8dd1\n\n**\u7b2c\u4e00\u79cd\u60c5\u51b5\uff1a**\n\n\u6c42\u6700\u5c0f\u751f\u6210\u6811\u7684\u65f6\u5019\u987a\u4fbf\u8bb0\u5f55\u4e00\u4e2a\u82b1\u8d39\u6700\u5c0f\u7684\u8fb9\u4ee5\u53ca\u6700\u5c0f\u751f\u6210\u6811\u7684\u603b\u6743\u503c\uff0c\u6700\u540e\u628a\u94b1\u90fd\u82b1\u5728\u5b83\u4e0a\u9762\u5c31\u597d\u4e86\n\n**\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff1a**\n\n\u679a\u4e3e\u6bcf\u4e00\u6761\u975e\u6811\u8fb9\uff0c\u627e\u51fa\u5408\u6cd5\u7684\u6743\u503c\u6700\u5927\u7684\u8fb9\u6765\u4ee3\u66ff\uff0c\u770b\u662f\u5426\u66f4\u4f18\n\n**\u5b9e\u73b0\uff1a** \u7528\u6811\u5256\u89e3\u51b3\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u7ef4\u62a4\u94fe\u4e0a\u6743\u503c\u6700\u5927\u7684\u8fb9\n\n\u4e0b\u9762\u7684\u4ee3\u7801\u5728\u7b2c75\u4e2a\u70b9\u7684\u65f6\u5019wa\u4e2a\uff0c\u5fd8dalao\u76f8\u6551\n\n\uff08\u53c2\u8003[Wans_ovo](https://www.cnblogs.com/wans-caesar-02111007/p/9911336.html)\u7684AC\u4ee3\u7801\uff1a\uff09\n\n**code**\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define lson rt << 1\n#define rson rt << 1|1\n#define int long long \nusing namespace std;\nconst int M = 1e6 + 5;\nint n, m, s;\nint read(){\n   int x = 0,f = 1;char c = getchar();\n   while(c < '0'||c > '9'){if(c == '-')f = -1;c = getchar();}\n   while(c >= '0'&&c <= '9'){x = x*10 + c - '0';c = getchar();}\n   return f*x;\n}\nint fa[M], dep[M], siz[M], son[M];\nint top[M], idw[M], idnum[M], dfn[M], jlw[M], jlnum[M];\n//\u4e24\u4e2a\u56fe\uff0c\u539f\u56fe\uff0c\u548c\u6700\u5c0f\u751f\u6210\u6811 \nstruct edge{\n    int u, v, w, num, vis, nxt;\n}E[M], e[M]; \nbool cmp(edge a, edge b){return a.w < b.w;}\nint head[M], Ecnt;\nvoid add(int u, int v, int w, int num) {\n    E[++Ecnt] = (edge) {u, v, w, num, 0, head[u]};\n    head[u] = Ecnt;\n}\nint etot;\nvoid add_inv(int u, int v, int w, int num) {\n    e[++etot] = (edge) {u, v, w, num, 0, 0};\n}\n\nnamespace Seg{\n   struct Tree {\n       int w, num;\n         Tree operator + (const Tree &a) const {\n            Tree c;\n            if(a.w > w)    c.w = a.w, c.num = a.num;\n            else        c.w = w, c.num = num;\n            return c;\n       }\n   }tree[M];\n   void update(int rt) {\n        tree[rt] = tree[lson] + tree[rson];\n   }\n   void build(int rt, int l, int r) {\n       if(l == r) {\n           tree[rt].w = idw[l];\n           tree[rt].num = idnum[l];\n           return ;\n        }\n       int mid = (l + r) >> 1;\n       build(lson, l, mid);    \n\t   build(rson, mid + 1, r);\n       update(rt);\n    }\n   Tree query(int rt, int l, int r, int L, int R) {\n       if(l >= L && r <= R)    return tree[rt];\n       int mid = (l + r) >> 1; Tree ans;    \n\t     ans.w = -0x3f3f3f3f, ans.num = 0;\n       if(L <= mid)ans = ans + query(lson, l, mid, L, R);\n       if(R > mid)ans = ans + query(rson, mid + 1, r, L, R);\n       return ans;\n    }\n}\nnamespace Cut{\n\t//\u5927\u6cd5\u5e08 1 \n    void dfs(int u, int f) {\n        fa[u] = f, dep[u] = dep[f] + 1, siz[u] = 1;\n        for(int i = head[u]; i; i = E[i].nxt) {\n            int v = E[i].v;\n            if(v == f) continue;\n            dfs(v, u);\n            siz[u] += siz[v];\n            if(siz[v] > siz[son[u]])    \n\t\t    son[u] = v, jlw[u] = E[i].w, jlnum[u] = E[i].num; \n        }\n    }\n    //\u5927\u6cd5\u5e08 2 (\u8981\u8bb0\u5f55\u6bcf\u6761\u8fb9\u5728\u539f\u56fe\u4e2d\u7684\u4fe1\u606f)\n\tint cnt = 0;\n    void dfs2(int u, int t, int w, int num) {\n        top[u] = t, idw[++cnt] = w, idnum[cnt] = num, dfn[u] = cnt;//\u5f88\u5bb9\u6613\u4ee5\u5199\u9519\uff0c\u8981\u5206\u6e05\u539f\u56fe\u7684\u6807\u53f7\u8fd8\u662f\u5228\u5b8c\u4e4b\u540e\u7684\u7f16\u53f7 \n        if(son[u])    dfs2(son[u], t, jlw[u], jlw[u]);\n        for(int i = head[u]; i; i = E[i].nxt) {\n            int v = E[i].v;\n            if(v == fa[u] || v == son[u]) continue;\n            dfs2(v, v, E[i].w, E[i].num);\n        }\n    }\n   Seg::Tree query(int u, int v) {\n        Seg::Tree ans; \n\t\tans.w = -0x3f3f3f3f, ans.num = 0;\n        while(top[u] != top[v]) {\n             if(dep[top[u]] < dep[top[v]])    swap(u, v);\n             ans = ans + Seg::query(1, 1, n, dfn[top[u]], dfn[u]);\n             u = fa[top[u]];\n        }\n        if(dep[u] < dep[v])    swap(u, v);\n        ans = ans + Seg::query(1, 1, n, dfn[v] + 1, dfn[u]);\n        return ans;\n    }\n}\n//\u5e76\u67e5\u96c6 \nint f[M];\nint find(int x) {return f[x] == x ? x : f[x] = find(f[x]); }\nint w[M], c[M] = {0x3f3f3f3f}, tot, ans1, ans2;\nvoid Kruskal() {\n    sort(e + 1, e + 1 + m, cmp);\n    for(int i = 1; i <= n; i ++)    f[i] = i;\n    for(int i = 1; i <= m; i ++) {\n        int u = e[i].u, v = e[i].v, num = e[i].num;\n        int x = find(u), y = find(v);\n        if(x != y) {\n            e[i].vis = 1;//\u6811\u8fb9 \n            f[x] = y;\n            add(u, v, w[num], num);    add(v, u, w[num], num);\n            tot += w[num];\n            if(c[num] < c[ans1])    ans1 = num;//\u7edf\u8ba1\u6811\u4e0a\u7684\u6700\u5c0f\u82b1\u8d39\u8fb9\u7684\u7f16\u53f7 \n        }\n    }\n}\n\nsigned main() {\n\t//freopen(\"data.in\",\"r\",stdin);\n\t//freopen(\"data.out\",\"w\",stdout);\n    n = read(), m = read();\n    for(int i = 1; i <= m; i ++) w[i] = read();\n    for(int i = 1; i <= m; i ++) c[i] = read();\n    for(int i = 1; i <= m; i ++) {\n        int u, v;\n        u = read(), v = read();\n        add_inv(u, v, w[i], i);\n    }\n    s = read();\n    Kruskal();    \n\tans2 = tot - s / c[ans1];\n    Cut::dfs(1, 0);    \n\tCut::dfs2(1, 0, -0x3f3f3f3f, 0);    \n\tSeg::build(1, 1, n);\n    int flag = 0;\n    for(int i = 1; i <= m; i ++) {\n        if(!e[i].vis) {\n            int u = e[i].u, v = e[i].v, num = e[i].num;\n            Seg::Tree a = Cut::query(u, v);\n            int tmp = tot - a.w + w[num] - s / c[num];\n            if(tmp < ans2)    ans1 = num, ans2 = tmp, flag = a.num;\n        }\n    }\n    printf(\"%lld\\n\", ans2);\n    for(int i = 1; i <= m; i ++) {\n        int num = e[i].num;\n        if(ans1 == num) {\n            printf(\"%lld %lld\\n\", num, w[num] - s / c[num]);//\u51cf\u5c11\u6743\u503c\u7684\u8fb9     \n        } \n\t\telse if(e[i].vis) {\n            if(flag != num) {//\u5176\u4ed6\u7684\u6811\u8fb9 \n                printf(\"%lld %lld\\n\", num, w[num]);\n            }\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1613986421,
        "uid": 285235,
        "name": "Dita",
        "ccfLevel": 0,
        "title": "CF733F Drivers Dissatisfaction"
    },
    {
        "content": "# \u9898\u76ee\n\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF733F)\n\n# \u9898\u89e3\n\n**\u6211\u4eec\u5e94\u8be5\u660e\u767d\u7684\u7b2c\u4e00\u4ef6\u4e8b\u2014\u2014\u6240\u6709\u7684\u82b1\u8d39\u53ea\u4f1a\u5168\u90e8\u82b1\u5728\u4e00\u6761\u8fb9\u4e0a**\uff0c\u8fd9\u662f\u8fd9\u9053\u9898\u7684\u57fa\u7840 ~~\u867d\u7136\u6211\u77e5\u9053\u4e5f\u6ca1\u7b2c\u4e00\u65f6\u95f4\u505a\u51fa\u6765~~\n\n\u4e0b\u6587\u79f0\u8fd9\u6761\u8fb9\u4e3a\u201c$JZM$\u201d.\n\n\u7136\u540e\uff0c\u968f\u4fbf\u627e\u4e00\u4e2a $MST$\uff0c\u7136\u540e\u6211\u4eec\u5bf9\u4e8e\u8fd9\u6761 $JZM$ \u5e94\u8be5\u4f1a\u51fa\u73b0\u5728\u54ea\u91cc\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n1. \u51fa\u73b0\u5728\u6811\u8fb9\u4e0a\uff0c\u663e\u7136 $JZM$ \u5e94\u8be5\u662f $c$ \u6700\u5c0f\u7684\u90a3\u6761\u8fb9\uff0c\u53ea\u6709\u8fd9\u6837\u624d\u80fd\u6700\u5927\u5730\u51cf\u5c11\u6574\u68f5\u6811\u7684\u82b1\u8d39\uff1b\n2. \u51fa\u73b0\u5728\u975e\u6811\u8fb9\u4e0a\uff0c\u5bf9\u4e8e\u4e00\u6761\u8fb9 $(u,v)$\uff0c\u5982\u679c\u6211\u4eec\u8981\u9009\u62e9\u5b83\u6210\u4e3a $JZM$\uff0c\u65e0\u7591\u4f1a\u7834\u574f\u6811\u7ed3\u6784\uff0c\u8003\u8651\u5728 $u,v$ \u6811\u4e0a\u8def\u5f84\u53bb\u6389\u4e00\u6761\u8fb9\u4ee5\u7ef4\u6301\u6811\u7ed3\u6784\uff0c\u663e\u7136\u53bb\u6389\u7684\u8fb9\u5e94\u8be5\u662f\u6743\u503c\u6700\u5927\u7684\uff0c\u7136\u540e\uff0c\u6211\u4eec\u518d\u5168\u90e8\u628a\u82b1\u8d39\u7838\u5728\u6211\u4eec\u52a0\u8fdb\u6765\u8fd9\u6761\u8fb9\uff0c\u548c\u7b54\u6848\u8fdb\u884c\u6bd4\u8f83\u5373\u53ef\uff1b\n\n\u7531\u4e8e\u7b54\u6848\u8981\u8f93\u51fa\u5177\u4f53\u65b9\u6848\uff0c\u9700\u8981\u4fdd\u5b58\u54ea\u6761\u8fb9\u662f $JZM$.\n\n# \u4ee3\u7801\n\n```cpp\nhttps://www.cnblogs.com/Arextre/p/13553032.html\n```\n\n",
        "postTime": 1598241243,
        "uid": 125355,
        "name": "Vladilena",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF733F \u3010Drivers Dissatisfaction\u3011"
    }
]