[
    {
        "content": "\u7136\u800c\u4f3c\u4e4e\u53e6\u4e00\u7bc7\u9898\u89e3\u662f\u4e24\u53ea $\\log$ \u7684\uff0c\u8fd9\u4e2a\u5730\u65b9\u8bf4\u4e00\u79cd\u4e00\u4e2a $\\log$ \u7684\u505a\u6cd5\uff1a\u5584\u7528 $\\rm BIT$ .\n\n\u53d1\u73b0\u4f3c\u4e4e\u6700\u7ec8 $1\\sim k$ \u80af\u5b9a\u4f1a\u88ab\u5408\u5e76\u5230\u4e00\u8d77\uff0c\u6240\u4ee5\u628a\u4ee3\u4ef7\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff0c\u6c42\u9006\u5e8f\u5bf9\u7684 $\\&$ \u5408\u5e76\u7684\u3002\u8003\u8651\u5408\u5e76\u7684\u4ee3\u4ef7\u3002\u53d1\u73b0\u5bf9\u4e8e\u6bcf\u4e2a\u5927\u4e8e $k$ \u7684\u4f4d\u7f6e\uff0c\u8981\u4e48\u628a\u5b83\u5411\u524d\u79fb\uff0c\u8981\u4e48\u628a\u5b83\u5411\u540e\u79fb\uff0c\u6240\u4ee5\u7b54\u6848\u5c31\u662f $\\min(s_i,k-s_i)$\uff0c\u5176\u4e2d $s_i$ \u8868\u793a $i-$\u524d\u7f00 \u4e2d $\\leq k$ \u7684\u6570\u7684\u4e2a\u6570\u3002\n\n\u4e8e\u662f\u5c31\u5f97\u5230\u4e00\u4e2a $n^2$ \u7684\u505a\u6cd5\u3002\u4f46\u8003\u8651\u5176\u5b9e $\\min(s_i,k-s_i)$ \u8fd9\u4e1c\u897f\u67d0\u4e2a\u4e34\u754c\u70b9\u7684\u5de6\u53f3\u5206\u522b\u5355\u8c03\uff0c\u6240\u4ee5\u8003\u8651\u4e8c\u5206\u51fa\u8fd9\u4e2a\u4e2d\u95f4\u70b9\uff0c\u7136\u540e\u76f4\u63a5\u62ff\u7b49\u5dee\u6570\u5217\u6c42\u548c\u516c\u5f0f\u505a\u3002\n\n\u90a3\u4e48\u663e\u7136\u8fd9\u4e1c\u897f\u53ea\u9700\u8981\u6c42\u4e00\u4e2a\u4e2d\u4f4d\u6570\u5373\u53ef\u3002\u800c $\\rm BIT$ \u672c\u8eab\u652f\u6301\u4e8c\u5206\uff0c\u6240\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u53ef\u4ee5\u505a\u5230\u5c0f\u5e38\u6570\u7684 $n\\log n$\uff0c\u6bd4\u7ebf\u6bb5\u6811\u4e0d\u77e5\u9053\u8981\u5feb\u5230\u54ea\u91cc\u53bb\u4e86.jpg\n\n```cpp\n    LL ans1, ans2 ;\n    int N, base[MAXN], pos[MAXN] ;\n    struct BIT{\n        LL _bit[MAXN] ;\n        void ins(int x, int v){\n            for ( ; x <= N ; x += (x & -x)) _bit[x] += v ;\n        }\n        LL ask(int x){\n            LL res = 0 ;\n            for ( ; x ; x -= (x & -x)) res += _bit[x] ;\n            return res ;\n        }\n        int find_k(int k){\n            int res = 0 ;\n            for (int j = 20 ; j >= 0 ; -- j)\n                if ((res | 1 << j) <= N)\n                    if (_bit[res | (1 << j)] <= k)\n                        res |= (1 << j), k -= _bit[res] ;\n            return res ;\n        }\n    }A, B ;\n     \n     \n    int main(){\n        cin >> N ; int i, j ;\n        for (int i = 1 ; i <= N ; ++ i)\n            scanf(\"%d\", &base[i]), pos[base[i]] = i ;\n        for (int i = 1 ; i <= N ; ++ i){\n            A.ins(pos[i], 1), B.ins(pos[i], pos[i]) ;\n            ans1 += i - A.ask(pos[i]), j = A.find_k(i / 2) + 1 ;\n            int median1 = i >> 1, median2 = i - 1 - median1 ;\n            ans2 = 1ll * median1 * j - B.ask(j - 1) - (1ll * median1 * (median1 + 1) >> 1) ;\n            ans2 += B.ask(N) - B.ask(j) - 1ll * median2 * j - (1ll * median2 * (median2 + 1) >> 1) ;\n            printf(\"%lld\\n\", ans1 + ans2), ans2 = 0 ;\n        }\n    }\n```",
        "postTime": 1577236827,
        "uid": 28313,
        "name": "\u768e\u6708\u534a\u6d12\u82b1",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1268C \u3010K Integers\u3011"
    },
    {
        "content": "~~\u88ab\u8fd9\u9053\u9898\u6c14\u5230\u4e86\uff0c\u4eba\u751f\u76ee\u524d\u552f\u4e00\u4e00\u6b21\u53ef\u80fd\u7684 div2 \u7684 AK \u673a\u4f1a\u6ca1\u4e86~~\n\n\u8bb2\u4e00\u4e0b\u672c\u9898\u505a\u6cd5\n\n\u5bb9\u6613\u53d1\u73b0\u5206\u5f00\u4ea4\u6362\u548c\u8fde\u7eed\u4ea4\u6362\u7b49\u4ef7\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u59a8\u5148\u8fdb\u884c\u8fde\u7eed\u7684\u4ea4\u6362\u5728\u4ea4\u6362\u522b\u7684\n\n\u8003\u8651\u8fde\u7eed\u7684\u4ea4\u6362\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fde\u7eed\u7684\u4ea4\u6362 $i$ \u548c $i+1$\uff0c\u4ece $x$ \u4ea4\u6362\u5230 $y$\uff0c\u53ef\u4ee5\u770b\u4f5c\u5c06 $x$ \u79fb\u52a8\u5230 $y$ \uff0c\u4ee3\u4ef7\u4e3a $|y-x|$\n\n\u8003\u8651\u79fb\u52a8\uff0c\u6211\u4eec\u663e\u7136\u53ef\u4ee5\u5206\u6210\u4e24\u6b65\uff1a\n\n\u8003\u8651\u6392\u5217$1,2,...x$\uff0c\u6211\u4eec\u5148\u628a\u8fd9\u6bb5\u533a\u95f4\u5185\u7684\u5176\u4ed6\u6570\u79fb\u51fa\u53bb\uff0c\u4f7f\u5176\u5185\u90e8\u5f62\u6210$1\\to x$\u7684\u67d0\u4e2a\u6392\u5217\n\n\u7b2c\u4e8c\u6b65\u5219\u662f\u628a$1\\to x$\u7684\u8fd9\u4e2a\u65e0\u5e8f\u7ec4\u5408\u632a\u6210$1,2...x$\u7684\u6392\u5217\n\n\u8003\u8651\u7b2c\u4e8c\u6b65\uff0c\u5176\u79fb\u52a8\u6b21\u6570\u53ef\u4ee5\u901a\u8fc7\u6a21\u62df/\u624b\u73a9\u53d1\u73b0\u5176\u79fb\u52a8\u6b21\u6570\u4e3a\u8fd9\u4e2a\u5e8f\u5217\u7684\u9006\u5e8f\u5bf9\u6570\n\n\u7b2c\u4e00\u6b65\u5219\u5e94\u5f53\u4e3a\uff0c\u5c06$1\\to x$\u8fd9\u6bb5\u5e8f\u5217\u4e2d\u4e0d\u5c5e\u4e8e$1\\to x$\u4e2d\u7684\u6570\u79fb\u51fa\u53bb\n\n\u5047\u8bbe\u8fd9\u4e2a\u533a\u95f4\u5728$1\\to x$\u8fd9\u6bb5\u533a\u95f4\u5185\u7684\u6570\u4e3a$0$\uff0c\u4e0d\u4e3a\u7684\u662f$1$\n\n\u5219\u53ef\u4ee5\u770b\u4f5c\u533a\u95f4$[L,R]$\u5f62\u5982\uff1a\n\n$$0,1,0,0,0,1,0,0...,0$$\n\n\u8003\u8651\u4e00\u4e2a$1$\u5f80\u5de6\u632a\uff0c\u5176\u5f80\u5de6\u632a\u5219\u5176\u5de6\u8fb9\u7684\u6570\u5fc5\u7136\u5747\u5f80\u5de6\u632a\uff0c\u5047\u8bbe\u5176\u5f80\u53f3\u632a\uff0c\u5219\u5176\u53f3\u8fb9\u7684\u6570\u5747\u5f80\u53f3\u632a\n\n\u4e8e\u662f\u4e00\u4e2a\u6570\u5f80\u5de6\u632a\u7684\u4ee3\u4ef7\u4e3a\u5176\u4e0b\u6807$i$\u51cf\u53bb\u533a\u95f4\u7684\u5de6\u7aef\u70b9$L$\uff0c\u51cf\u53bb\u5176\u5de6\u8fb9\u7684$1$\u6570\u91cf\n\n\u5373\uff1a$i-L-pre_i$\n\n\u5f80\u53f3\u7684\u4ee3\u4ef7\u5219\u4e3a\uff1a$R-i-nxt_i$\n\n\u663e\u7136\u5f80\u5de6\u7684\u4ee3\u4ef7\u5355\u8c03\u589e\uff0c\u5f80\u53f3\u7684\u4ee3\u4ef7\u5355\u8c03\u51cf\uff0c\u6240\u4ee5\u5fc5\u7136\u5b58\u5728\u4e00\u4e2a\u5206\u754c\u70b9\u6ee1\u8db3\u5176\u5de6\u8fb9\u7684\u5f80\u5de6\uff0c\u53f3\u8fb9\u7684\u5f80\u53f3\uff0c\u5982\u679c\u77e5\u9053\u6b64\u70b9\u4e3a\u8c01\uff0c\u5219\u7b54\u6848\u663e\u7136\u5f88\u5bb9\u6613\u7edf\u8ba1\n\n\u5373$[L,x]$\u533a\u95f4\u7684\u4e0b\u6807\u548c$-[L,x]$\u7684\u6570\u91cf$\\times L-pre_i$\u4e4b\u548c\n\n\u53f3\u8fb9\u7684\u7c7b\u4f3c\n\n\u5982\u4f55\u6c42\u6b64\u70b9\uff1f\u663e\u7136\u53ef\u4ee5\u4e8c\u5206\u5176\u4f4d\u7f6e\u3002\u3002\u3002\n\n$Code:$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std ;\n#define rep( i, s, t ) for( register int i = s; i <= t; ++ i )\n#define re register\n#define int long long \nint gi() {\n\tchar cc = getchar() ; int cn = 0, flus = 1 ;\n\twhile( cc < '0' || cc > '9' ) {  if( cc == '-' ) flus = - flus ; cc = getchar() ; }\n\twhile( cc >= '0' && cc <= '9' )  cn = cn * 10 + cc - '0', cc = getchar() ;\n\treturn cn * flus ;\n}\nconst int N = 3e5 + 5 ; \nint n, a[N], g[N], sum[N], f[N], tree[N], tree2[N], vis[N] ; \nint lowbit( int x ) {\n\treturn x & ( -x ) ;\n}\nint query( int x ) {\n\tint sum = 0 ;\n\tfor( re int i = x; i; i -= lowbit(i) ) sum += tree[i] ;\n\treturn sum ; \n}\nvoid Add( int x, int k ) {\n\tfor( re int i = x; i <= n; i += lowbit(i) ) tree[i] += k ;\n}\nint query2( int x ) {\n\tint sum = 0 ;\n\tfor( re int i = x; i; i -= lowbit(i) ) sum += tree2[i] ;\n\treturn sum ; \n}\nvoid Add2( int x, int k ) {\n\tfor( re int i = x; i <= n; i += lowbit(i) ) tree2[i] += k ;\n}\nint Get( int l, int r, int L, int R ) {\n\tint ans = l, m = query( r ) - query( l ) ; \n\twhile( l <= r ) {\n\t\tint mid = ( l + r ) >> 1 ; \n\t\tint lkid = query( mid - 1 ) - query(L) ;\n\t\tint rkid = query(R) - query(mid) ;\n\t\tlkid = mid - L - lkid, rkid = R - mid - rkid ; \n\t\tif( lkid <= rkid ) ans = mid, l = mid + 1 ;\n\t\telse r = mid - 1 ; \n\t}\n\treturn ans ; \n}\nsigned main()\n{\n\tn = gi() ; rep( i, 1, n ) a[i] = gi(), g[a[i]] = i ; \n\tfor( re int i = 1; i <= n; ++ i ) {\n\t\tint u = i - 1 - query( g[i] ) ;\n\t\tf[i] = f[i - 1] + u, Add( g[i], 1 ) ; \n\t}\n\tmemset( tree, 0, sizeof(tree) ) ;\n\tint L = n, R = 1 ;\n\tfor( re int i = 1; i <= n; ++ i ) Add( i, 1 ), Add2( i, i ), vis[i] = 1 ;\n\tfor( re int i = 1; i <= n; ++ i ) {\n\t\tL = min( L, g[i] ), R = max( R, g[i] ) ;\n\t\tAdd( g[i], -1 ), Add2( g[i], -g[i] ), vis[g[i]] = 0 ;\n\t\tint mid = Get( L, R, L, R ) ; \n\t\tint k1 = query2( mid ) - query2( L ), kk1 = query( mid ) - query( L ) ;\n\t\tint k2 = query2( R ) - query2( mid ), kk2 = query( R ) - query( mid ) ;\n\t\tsum[i] = ( k1 - kk1 * L - ( kk1 * ( kk1 - 1 ) ) / 2 ) + ( kk2 * R - k2 - ( kk2 * ( kk2 - 1 ) ) / 2 ) ;\n\t}\n\trep( i, 1, n ) printf(\"%I64d \", sum[i] + f[i] ) ;\n\treturn 0 ;\n}\n```",
        "postTime": 1576997315,
        "uid": 30036,
        "name": "Soulist",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1268C \u3010K Integers\u3011"
    },
    {
        "content": "# \u9898\u89e3 CF1268C \u3010K Integers\u3011\n\n\u8be5\u573a\u6bd4\u8d5b\u7684\u9898\u89e3\uff1a[\u6211\u7684\u535a\u5ba2\u6c42\u56f4\u89c2](https://www.cnblogs.com/nblyz2003/p/12177652.html)\n\n\u9898\u89e3\u6211\u90fd\u770b\u4e0d\u61c2\uff0c\u6765\u4e00\u7bc7\u8be6\u7ec6\u4e00\u70b9\u7684\n\n\u9898\u76ee\u5927\u610f\uff1a\u6709\u4e00\u6570\u5217p\uff0c\u957f\u5ea6\u4e3an\u3002\u6c42\u6700\u5c11\u7684\u4ea4\u6362\u4e24\u4e2a\u76f8\u90bb\u6570\u5b57\u7684\u64cd\u4f5c\uff0c\u4f7f\u5f97\u6570\u5217$p$\u4e2d\u5b58\u5728\u8fde\u7eed\u5b50\u5e8f\u5217$1$,$2$,$...$, $i$ \u3002\u5176\u4e2d$i$\u4e3a$1$,$2$,...,$n$\u3002\n\n\u8fd9\u9898\u5927\u6982\u4e00\u770b\u5c31\u548c\u9006\u5e8f\u5bf9\u6709\u5173\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u4ea4\u6362\u76f8\u90bb\u64cd\u4f5c\u548c\u5192\u6ce1\u6392\u5e8f\u4e00\u6a21\u4e00\u6837\uff0c\u800c\u5192\u6ce1\u9700\u8981\u7684\u64cd\u4f5c\u5c31\u662f\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u3002\n\n\u4e0d\u96be\u5f97\u51fa\uff0c\u5f53 $i$ = $n$ \u65f6\uff0c\u7b54\u6848\u5c31\u662f\u9006\u5e8f\u5bf9\u4e2a\u6570\u3002\n\n\u5bf9\u4e8e\u5176\u5b83\u7684 $i$ \u6765\u8bf4\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5f97\u5230\u8fd9\u6837\u4e00\u4e2a\u8d2a\u5fc3\u601d\u60f3\uff0c\u5148\u5c061..i \u653e\u5230\u4e00\u8d77\uff0c\u7136\u540e\u518d\u5c06\u5b83\u4eec\u53d8\u6210\u6709\u5e8f\u7684\u3002\n\n\u53d8\u6210\u6709\u5e8f\u7684\u9700\u8981\u7684\u64cd\u4f5c\u5f88\u663e\u7136\u4e5f\u53ef\u4ee5\u6309\u7167 $i$ = $n$ \u6765\u505a\uff0c\u4f46\u662f\u5c06$1$..$i$ \u8981\u653e\u5230\u54ea\u91cc\u53bb\u5462\uff1f\n\n\u6839\u636e\u521d\u4e2d\u5b66\u4e60\u7684\u96f6\u70b9\u5206\u6bb5\u6cd5\uff0c\u4e0d\u77e5\u9053\u7684\u53ef\u4ee5\u53bb\u770b\u767e\u5ea6\u767e\u79d1\uff08\u4f20\u9001\u95e8\uff09\u4e86\u89e3\u4e00\u4e0b\u3002\n\n\u6700\u540e\u5c06\u5b83\u4eec\u79fb\u5230$1$..$n$\u5728\u539f\u6570\u5217\u4e2d\u7684\u4e2d\u95f4\u4e00\u4e2a\u4f4d\u7f6e\uff08\u4e3a\u4e86\u65b9\u4fbf\uff0c\u540e\u6587\u7528 $mid$ \u8868\u793a\uff09\uff0c\u4e00\u5b9a\u662f\u6700\u4f18\u7684\uff0c\u8fd9\u53ef\u4ee5\u7528\u4e8c\u5206\u67e5\u627e\u6765\u5b9e\u73b0\u3002\n\n\u81f3\u4e8e\u5b83\u4eec\u9700\u8981\u79fb\u52a8\u591a\u5c11\u5462\uff1f\u8fd9\u8981\u5206\u6210\u5de6\u53f3\u4e24\u6bb5\u6765\u7b97\u3002\n\n\u9996\u5148 mid \u5de6\u8fb9\u7684\u5168\u90e8\u79fb\u5230\u4e2d\u70b9\uff0c\u6211\u4eec\u5047\u8bbe\u5b83\u4eec\u4e00\u5171\u6709 $x$ \u4e2a\uff0c\u90a3\u4e48\u5b83\u4eec\u5206\u522b\u4f1a\u88ab\u79fb\u5230 $mid - x$ \uff0c $mid - x + 1$ \uff0c...\uff0c $mid - 1$ \u3002\u9700\u8981\u79fb\u52a8\u7684\u64cd\u4f5c\u4e2a\u6570\u5206\u522b\u8981\u51cf\u53bb\u5b83\u4eec\u5728\u6570\u5217\u4e2d\u7684\u4f4d\u7f6e\uff0c\u603b\u7b54\u6848\u5c31\u662f\u8981\u51cf\u53bb\u5b83\u4eec\u7684\u603b\u548c $sum$ \uff0c\u8fd9\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u6216\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u3002\u5f97\u51fa\u4ee5\u4e0b\u7684\u5f0f\u5b50\u3002\n\n$ans = mid - x + mid - x + 1 + ... + mid - 1 - sum = mid \u00b7 x - sum - x \u00b7 (x + 1) / 2$\n\n\u6ce8\u610f\uff0c\u5728\u4ee3\u7801\u4e2d\u4e3a\u4e86\u65b9\u4fbfx\u5305\u542b\u4e86\u5728 mid \u70b9\u4e0a\u7684\u70b9\uff0c\u6240\u4ee5\u53d8\u6210\u4e86 $mid\u00b7 x - sum - x \u00b7 (x - 1) / 2 $\u3002\n\n\u53e6\u5916\u5728\u53f3\u8fb9\u4e5f\u662f\u5dee\u4e0d\u591a\uff0c\u5f97\u51fa\u5f0f\u5b50\u4e3a $ans = sum - mid \u00b7 x - x \u00b7 (x + 1) / 2 $\u3002\n\n\u4ee3\u7801\u4e2d\u8fd8\u6709\u4ee5\u4e0b\u51e0\u4e2a\u6ce8\u610f\u70b9\uff1a\n1.\u5176\u5b9e\u5f53 $i$ = $n$ \u7684\u65f6\u5019\u4e5f\u662f\u53ef\u4ee5\u7528\u4e0a\u4e00\u4e2a\u5f0f\u5b50\u7b97\u7684\uff0c\u540e\u9762\u4e24\u4e2a\u503c\u90fd\u4e3a$0$\uff0c\u4f60\u53ef\u4ee5\u624b\u7b97\u4e00\u4e0b\u3002\n\n2.\u9700\u8981\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\uff0c\u4e00\u4e2a\u7ef4\u62a4\u524d\u7f00\u548c\uff08\u5f53\u7136\u4e5f\u53ef\u4ee5\u7528\u5f52\u5e76\u6392\u5e8f\u5e76\u52a0\u4e00\u4e9b\u8bb0\u5f55\uff0c\u4f46\u662f\u6bd4\u8f83\u957f\uff09\uff0c\u4e00\u4e2a\u7ef4\u62a4\u4e0a\u8ff0\u7684 $sum$ \u3002\n\n3.\u8981\u5f00longlong\uff01\u8981\u5f00longlong\uff01\uff01\u8981\u5f00longlong\uff01\uff01\uff01\u91cd\u8981\u7684\u4e8b\u60c5\u8bf4\u4e09\u904d\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <vector>\n#define rep(x, l, r) for(int x = l; x <= r; x++)\n#define repd(x, r, l) for(int x = r; x >= l; x--)\n#define clr(x, y) memset(x, y, sizeof(x))\n#define all(x) x.begin(), x.end()\n#define pb push_back\n#define mp make_pair\n#define MAXN 200005\n#define fi first\n#define se second\n#define SZ(x) ((int)x.size())\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef pair<int, int> pii;\nconst int INF = 1 << 30;\nconst int p = 1000000009;\nint lowbit(int x){ return x & (-x);}\nint fast_power(int a, int b){ int x; for(x = 1; b; b >>= 1){ if(b & 1) x = 1ll * x * a % p; a = 1ll * a * a % p;} return x % p;}\n\nint n;\nint a[MAXN], pos[MAXN];\nll tree0[MAXN], tree1[MAXN];\n\nvoid update0(int x, int y){\n\tfor(int i = x; i <= n; i += lowbit(i)) tree0[i] += y;\n}\n\nvoid update1(int x, int y){\n\tfor(int i = x; i <= n; i += lowbit(i)) tree1[i] += y;\n}\n\nll query0(int x){\n\tll res = 0;\n\tfor(int i = x; i > 0; i -= lowbit(i)) res += tree0[i];\n\treturn res;\n}\n\nll query1(int x){\n\tll res = 0;\n\tfor(int i = x; i > 0; i -= lowbit(i)) res += tree1[i];\n\treturn res;\n}\n\nint main(){\n\tscanf(\"%d\", &n);\n\trep(i, 1, n){\n\t\tscanf(\"%d\", &a[i]);\n\t\tpos[a[i]] = i;\n\t}\n\tll res0 = 0;\n\trep(i, 1, n){\n\t\tres0 += i - 1 - query0(pos[i]);\n\t\tupdate0(pos[i], 1);\n\t\tupdate1(pos[i], pos[i]);\n\t\tint l = 1, r = n, s;\n\t\twhile(l <= r){\n\t\t\tint mid = (l + r) >> 1;\n\t\t\tif(query0(mid - 1) * 2 <= i){\n\t\t\t\ts = mid;\n\t\t\t\tl = mid + 1;\n\t\t\t}\n\t\t\telse r = mid - 1;\n\t\t}\n\t\tll left_sum0 = query0(s), left_sum1 = query1(s);\n\t\tll res1 = left_sum0 * s - left_sum1 - left_sum0 * (left_sum0 - 1) / 2;\n\t\tll right_sum0 = i - left_sum0, right_sum1 = query1(n) - left_sum1;\n\t\tres1 += right_sum1 - right_sum0 * s - right_sum0 * (right_sum0 + 1) / 2;\n\t\tprintf(\"%lld \", res0 + res1);\n\t}\n\tputs(\"\");\n    return 0;\n}\n```",
        "postTime": 1578697901,
        "uid": 149312,
        "name": "wze\u63cd\u6241\u4e86nm",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1268C \u3010K Integers\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u8bf4\u8981\u6c42\u51fa\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $k$\uff0c\u5728\u6570\u5217\u4e2d\u5f97\u5230 $1-k$ \u7684\u8fde\u7eed\u6392\u5217\u7684\u6700\u5c0f\u4ea4\u6362\u6b21\u6570\u3002\n\n\u60f3\u8981\u5f97\u5230\u8fd9\u6837\u4e00\u4e2a\u6392\u5217\uff0c\u6211\u4eec\u80af\u5b9a\u662f\u628a\u5b83\u5206\u6210\u4e24\u6b65\u3002\u9996\u5148\u5148\u8ba9 $1-k$ \u8fd9 $k$ \u4e2a\u6570\u79fb\u5230\u8fde\u7eed\u7684\u4e00\u6bb5\uff0c\u7136\u540e\u518d\u8fdb\u884c\u6392\u5e8f\u3002\n\n\u5bf9\u4e8e\u6392\u5e8f\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6c42\u51fa\u9006\u5e8f\u5bf9\u5373\u53ef\u3002\u56e0\u4e3a\u5192\u6ce1\u6392\u5e8f\u544a\u8bc9\u6211\u4eec\uff0c\u6bcf\u6b21\u4ea4\u6362\u4e24\u4e2a\u6570\uff0c\u9006\u5e8f\u5bf9\u4e2a\u6570\u90fd\u4f1a\u51cf\u4e00\u3002\n\n\u6240\u4ee5\u5173\u952e\u95ee\u9898\u662f\u5982\u4f55\u628a\u5b83\u4eec\u5e76\u5728\u4e00\u8d77\u3002\u6211\u4eec\u5927\u5bb6\u5e94\u8be5\u90fd\u5bb9\u6613\u60f3\u5230\uff0c\u56fa\u5b9a\u6700\u4e2d\u95f4\u4e00\u4e2a\u6570\u4e0d\u52a8\uff0c\u8ba9\u5de6\u53f3\u4e24\u8fb9\u7684\u6570\u671d\u4e2d\u95f4\u9760\u62e2\uff0c\u8fd9\u79cd\u65b9\u6cd5\u80af\u5b9a\u662f\u6700\u4f18\u7684\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5148\u7528\u4e8c\u5206\u627e\u51fa\u6700\u4e2d\u95f4\u90a3\u4e2a\u4e0d\u52a8\u70b9 $pos$\uff0c\u7136\u540e\u5de6\u53f3\u5206\u522b\u8ba1\u7b97\u3002\n\n\u6211\u4eec\u5148\u6765\u770b\u5de6\u8fb9\uff0c\u5047\u8bbe\u5305\u542b\u4e0a $pos$ \u7684\u4f4d\u7f6e\uff0c\u5171\u6709 $s$ \u4e2a\u6570\uff0c\u90a3\u4e48\u79fb\u5230\u6700\u540e\uff0c\u4f4d\u7f6e\u80af\u5b9a\u662f $pos-s+1,pos-s+2\\ ...\\ pos$\u3002\u79fb\u52a8\u7684\u8ddd\u79bb\u5c31\u662f\u6700\u7ec8\u4f4d\u7f6e\u7684\u548c\u51cf\u53bb\u521d\u59cb\u4f4d\u7f6e\u7684\u548c\u7684\u5dee\u3002\u6700\u7ec8\u4f4d\u7f6e\u7684\u548c\u53ef\u4ee5\u7528\u7b49\u5dee\u6570\u5217\u6c42\u51fa\uff0c\u5373 $pos\\times s-s(s+1)/2$\uff0c\u521d\u59cb\u4f4d\u7f6e\u7684\u548c\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5f97\u5230\u3002\n\n\u5bf9\u4e8e\u53f3\u8fb9\u4e5f\u662f\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u662f\u7528\u521d\u59cb\u4f4d\u7f6e\u548c\u51cf\u53bb\u6700\u7ec8\u4f4d\u7f6e\u7684\u548c\u7f62\u4e86\u3002\n\n\u6700\u540e\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $f(k)$\uff0c\u5c31\u662f\u628a\u4e0a\u8ff0\u4e09\u4e2a\u503c\u76f8\u52a0\u8d77\u6765\u5c31\u884c\u4e86\u3002\n\n\u4e0b\u9762\u662f AC \u4ee3\u7801\n\n```cpp\n/*\nCodeforces 1268C\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define int long long\n#define lowbit(x) (x&-x)\n\nint n,a[200005],p[200005];\nint c1[200005],c2[200005];\nint siv;\n\nvoid fix1(int x,int v)\n{\n\tfor(int i=x;i<=n;i+=lowbit(i))\n\t\tc1[i] += v;\n}\n\nint ask1(int x)\n{\n\tint res=0;\n\tfor(int i=x;i>=1;i-=lowbit(i))\n\t\tres += c1[i];\n\treturn res;\n}\n\nvoid fix2(int x,int v)\n{\n\tfor(int i=x;i<=n;i+=lowbit(i))\n\t\tc2[i] += v;\n}\n\nint ask2(int x)\n{\n\tint res=0;\n\tfor(int i=x;i>=1;i-=lowbit(i))\n\t\tres += c2[i];\n\treturn res;\n}\n\nsigned main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n&&cin>>a[i];i++)\n\t\tp[a[i]] = i;\n\tfor(int k=1;k<=n;k++)\n\t{\n\t\tsiv += k-ask1(p[k])-1;\n\t\tfix1(p[k],1), fix2(p[k],p[k]);\n\t\tint l=1,r=n,pos=0;\n\t\twhile(l<=r)\n\t\t{\n\t\t\tint mid=l+r>>1;\n\t\t\tif(ask1(mid-1)<=k/2)\n\t\t\t\tpos = mid, l = mid+1;\n\t\t\telse\n\t\t\t\tr = mid-1;\n\t\t}\n\t\tint ls1=ask1(pos),ls2=ask2(pos);\n\t\tint rs1=k-ls1,rs2=ask2(n)-ls2;\n\t\tint resl=pos*ls1-ls2-ls1*(ls1-1)/2;\n\t\tint resr=rs2-pos*rs1-rs1*(rs1+1)/2;\n\t\tcout<<siv+resl+resr<<' ';\n\t}\n\t\n\treturn puts(\"\"), 0;\n}\n```\n\n\u795d\u5927\u5bb6 AC \u6109\u5feb\uff01",
        "postTime": 1618678462,
        "uid": 123298,
        "name": "kouylty",
        "ccfLevel": 7,
        "title": "\u9898\u89e3\u3010CF1268C K Integers\u3011"
    },
    {
        "content": "\u95f2\u8bdd\uff1a@wz20201136 \u597d\u5f3a\u554a\uff0c\u79d2\u4e86\u8fd9\u9053\u9898Orz\u3002\n\nupd\uff1a\u6709\u4e00\u4e2a\u5730\u65b9\u7b49\u5dee\u6570\u5217\u6c42\u548c\u516c\u5f0f\u5fd8\u4e86\u9664 2 \u4e86\uff0c\u4e22\u4eba\uff08\n\n---\n\n\n\n\u770b\u8d77\u6765\u975e\u5e38\u68d8\u624b\uff0c\u4e0d\u662f\u5417\uff1f\n\n\u9996\u5148\u6211\u4eec\u53d1\u73b0\u8fd9 $1\\sim k$ \u5171 $k$ \u4e2a\u6570\u53ea\u8981\u76f8\u5bf9\u4f4d\u7f6e\u4e0d\u53d8\u90a3\u4e48\u5f71\u54cd\u7ed3\u679c\u7684\u5c31\u53ea\u6709\u5b83\u4eec\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002\u56e0\u6b64\u8003\u8651\u628a\u8fd9\u4e2a\u64cd\u4f5c\u5206\u6210\u4e24\u6b65\uff0c\u7b2c\u4e00\u6b65\u662f\u628a\u6240\u6709 $1 \\sim k$ \u7684\u5f52\u5230\u4e2d\u95f4\uff0c\u7b2c\u4e8c\u6b65\u662f\u628a\u8fd9\u4e2a\u6392\u5217\u53d8\u6210\u6709\u5e8f\u7684\u3002\n\n\u7b2c\u4e8c\u6b65\u5f88\u660e\u663e\u662f\u4e00\u4e2a\u5178\u9898\uff0c\u7b54\u6848\u7b49\u4e8e\u6392\u5217\u7684\u9006\u5e8f\u5bf9\u6570\u3002\n\n\u4e8e\u662f\u5c31\u5269\u4e0b\u600e\u4e48\u5904\u7406\u7b2c\u4e00\u6b65\u4e86\u3002\u9996\u5148\u6839\u636e\u521d\u4e2d\u7684\u6570\u5b66\u77e5\u8bc6\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5728\u5947\u6570\u7684\u65f6\u5019\u5f52\u5e76\u5230\u4e2d\u4f4d\u6570\u3001\u5076\u6570\u7684\u65f6\u5019\u5f52\u5e76\u5230\u6700\u4e2d\u95f4\u4e24\u4e2a\u70b9\u7684\u65f6\u5019\u6700\u4f18\u3002\n\n\u4e3a\u4e86\u4fbf\u4e8e\u5199\u7a0b\u5e8f\u6211\u4eec\u80af\u5b9a\u4e0d\u4f1a\u5206\u8ba8\uff0c\u6240\u4ee5\u5bf9\u4e8e $k$ \u4e2a\u6570\uff0c\u6211\u4eec\u76f4\u63a5\u9009\u5b9a $mid=\\left\\lfloor \\dfrac{k}{2} \\right\\rfloor$ \u8fd9\u4e2a\u4f4d\u7f6e\u4f5c\u4e3a\u5f52\u5e76\u7684\u70b9\u3002\u5047\u8bbe\u8fd9\u4e2a\u70b9\u662f $y$\uff0c\u90a3\u4e48\u6211\u4eec\u7684\u8303\u56f4\u5c31\u662f $y-\\left\\lfloor \\dfrac{k}{2} \\right\\rfloor+1$ \u5230 $y+\\left\\lceil \\dfrac{k}{2} \\right\\rceil$ \u8fd9\u6bb5\u8303\u56f4\u3002\n\n\u4e8e\u662f\u6211\u4eec\u9700\u8981\u6c42\u51fa\u6bcf\u4e2a\u70b9\u5230\u8fd9\u4e9b\u5bf9\u5e94\u4f4d\u7f6e\u7684\u8ddd\u79bb\u3002\u5bb9\u6613\u53d1\u73b0\uff0c\u5047\u8bbe\u8fd9\u4e9b\u70b9\u5750\u6807\u662f $p_1,p_2,\\dots,p_k$\u3002\u7531\u4e8e\u7edd\u5bf9\u503c\u5f88\u70e6\uff0c\u6211\u4eec\u53ef\u4ee5\u5de6\u53f3\u62c6\u5f00\u6765\uff0c\u7edd\u5bf9\u503c\u5c31\u6ca1\u6709\u4e86\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8981\u6c42\u7684\u7b54\u6848\u5373\u4e24\u90e8\u5206\uff1a\n\n$$\\begin{cases}y-mid+1-p_1+y-mid+2-p_2+\\dots+y-p_{mid}\\\\p_{mid+1}-\\left(y+1\\right)+p_{mid+2}-\\left(y+2\\right)+\\dots+p_k-(y+k-mid)\\end{cases}$$\n\n\u5316\u7b80\u5f97\u5230\uff1a\n\n$$\\begin{cases}\\dfrac{mid\\left(2y-mid\\right)}{2}-\\sum\\limits_{i=1}^{mid}p_i\\\\\\sum\\limits_{i=mid+1}^kp_i-\\dfrac{(k-mid)\\left(2y+k-mid+1\\right)}{2}\\end{cases}$$\n\n\u53ef\u80fd\u4e0d\u591f\u7b80\u6d01\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u62c6\u5f00\uff1a\n\n$$\\begin{cases}mid \\cdot (y-mid)+\\dfrac{mid \\cdot (mid-1)}{2}-\\sum\\limits_{i=1}^{mid} p_i\\\\\\sum\\limits_{i=mid+1}^{k}p_i-(k-mid)\\cdot y-\\dfrac{(k-mid)(k-mid+1)}{2}\\end{cases}$$\n\n~~\u4f46\u662f\u6709\u4e00\u8bf4\u4e00\u611f\u89c9\u8fd9\u4fe9\u6ca1\u5565\u533a\u522b\uff0c\u90fd\u633a\u590d\u6742\u3002~~\n\n\u5bb9\u6613\u53d1\u73b0\u7528\u6811\u72b6\u6570\u7ec4\u6216\u8005\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u4e0b\u4e24\u4e2a $p$ \u7684\u548c\uff0c\u6bcf\u6b21\u63d2\u5165\u5355\u70b9\u7136\u540e\u533a\u95f4\u6c42\u548c\uff0c\u5355\u6b21\u590d\u6742\u5ea6 $\\mathcal{O}(\\log n)$\u3002\n\n\u7136\u540e\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053 $mid$ \u548c $y$\uff0c\u5bb9\u6613\u53d1\u73b0\u8fd9\u4e2a\u7528\u4e00\u4e2a\u7ebf\u6bb5\u6811\u6216\u8005\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4e00\u4e0b\u5c31\u80fd\u5f97\u5230\u4e2d\u4f4d\u6570\uff08\u4e8c\u5206\u67e5\u627e\u597d\u50cf\u4e5f\u53ef\u4ee5\u5427\uff09\uff0c\u5c31\u53ef\u4ee5\u77e5\u9053 $mid$ \u4ee5\u53ca $y$ \u4e86\uff0c\u5355\u6b21\u590d\u6742\u5ea6 $\\mathcal{O}(\\log n)$\u3002\n\n\u7136\u540e\u8003\u8651\u600e\u4e48\u5f04\u9006\u5e8f\u5bf9\u7684\u95ee\u9898\uff0c\u5bb9\u6613\u53d1\u73b0\u8fd9\u5c31\u662f\u4e00\u4e2a\u4e8c\u7ef4\u504f\u5e8f\u677f\u5b50\u9898\uff0c\u5f04\u4e00\u4e2a\u7ebf\u6bb5\u6811\u6bcf\u6b21\u63d2\u8fdb\u6765\u65b0\u7684\u6570\u5c31\u66f4\u65b0\u4e00\u4e0b\u7b54\u6848\u5373\u53ef\uff0c\u7136\u540e\u5168\u5c40\u6c42\u4e2a\u548c\uff0c\u5355\u6b21\u590d\u6742\u5ea6 $\\mathcal{O}(\\log n)$\u3002\n\n\u7531\u4e8e\u8981\u6c42 $n$ \u6b21\uff0c\u6700\u540e\u590d\u6742\u5ea6\u5373 $\\mathcal{O}(n \\log n)$\u3002",
        "postTime": 1675172027,
        "uid": 195198,
        "name": "E1_de5truct0r",
        "ccfLevel": 7,
        "title": "CF1268C"
    },
    {
        "content": "\u5bf9\u4e8e $f(k)$ \u7684\u8ba1\u7b97\uff0c\u5148\u8ba1\u7b97\u628a $1\\sim k$ \u79fb\u6210\u8fde\u7eed\u6bb5\uff0c\u7136\u540e\u518d\u8ba1\u7b97\u9006\u5e8f\u5bf9\u6570\uff08\u6700\u5c0f\u4ea4\u6362\u6b21\u6570\u4f7f\u5f97\u4e00\u4e2a\u6392\u5217\u6392\u597d\u5e8f\uff09\u3002\n\n\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u662f\u5bf9\u7684\uff1f\u611f\u6027\u7406\u89e3\u4e00\u4e0b\uff0c\u9996\u5148\u6392\u597d\u5e8f\u4e00\u5b9a\u8981\u6709\u4e2a\u9006\u5e8f\u5bf9\u7684\u4ee3\u4ef7\uff0c\u5047\u5982\u4e24\u4e2a\u6570\u4e4b\u95f4\u6ca1\u6709\u76f8\u90bb\uff0c\u5219\u4ea4\u6362\u5b83\u4eec\u9700\u8981\u4e00\u6b65\u4e00\u6b65\u8d70\u8fc7\u53bb\uff0c\u8fd9\u6837\u7684\u82b1\u8d39\u5c31\u9ad8\u4e86\u3002\n\n\u8003\u8651 $f(k-1)\\to f(k)$ \u65b0\u589e\u7684\u4ee3\u4ef7\uff0c\u8ba1\u7b97\u9006\u5e8f\u5bf9\u6570\u662f\u5bb9\u6613\u7684\uff0c$k$ \u53ea\u53ef\u80fd\u4f5c\u4e3a\u9006\u5e8f\u5bf9\u7684\u7b2c\u4e00\u4e2a\u6570\uff0c\u800c\u7b2c\u4e8c\u4e2a\u6570\u53ef\u80fd\u7684\u53d6\u503c $[1,k-1]$ \u90fd\u5df2\u7ecf\u51fa\u73b0\u8fc7\uff0c\u6240\u4ee5\u76f4\u63a5\u8ba1\u7b97\u5168\u5c40\u4e2d\u4ee5 $k$ \u4e3a\u5f00\u5934\u7684\u9006\u5e8f\u5bf9\u6570\uff0c\u6811\u72b6\u6570\u7ec4\u6613\u505a\u5230\u3002\n\n\u8ba1\u7b97\u628a $1\\sim k$ \u79fb\u6210\u8fde\u7eed\u6bb5\u7684\u4ee3\u4ef7\uff0c\u6709\u4e2a\u7ecf\u5178\u7ed3\u8bba\u5c31\u662f\u79fb\u5230\u4e2d\u4f4d\u6570\u5904\uff0c\u5982\u679c\u957f\u5ea6\u4e3a\u5076\u6570\uff0c\u79fb\u5230\u4e2d\u95f4\u4e24\u4e2a\u7684\u54ea\u4e2a\u90fd\u884c\u3002\n\n\u56e0\u4e3a\u6bcf\u4e2a\u6570\u4e0d\u80fd\u79fb\u52a8\u5230\u540c\u4e00\u4f4d\u7f6e\uff0c\u6240\u4ee5\u4ee3\u4ef7\u8ba1\u7b97\u4f1a\u5f88\u9ebb\u70e6\uff0c\u90a3\u5c31\u94a6\u70b9\u8ba9\u6bcf\u4e2a\u6570\u53ef\u4ee5\u79fb\u52a8\u5230\u540c\u4e00\u4f4d\u7f6e\uff0c\u6700\u540e\u518d\u51cf\u53bb\u591a\u4f59\u4ee3\u4ef7\u4e5f\u5c31\u662f\u4e24\u4e2a\u7b49\u5dee\u6570\u5217\u5373\u53ef\u3002\n\n\u73b0\u5728\u8ba1\u7b97\u6bcf\u4e2a\u6570\u79fb\u52a8\u5230\u4e2d\u4f4d\u6570\u5904\u7684\u8ddd\u79bb\uff0c\u6ce8\u610f\u5230\u6bcf\u52a0\u5165\u4e00\u4e2a $k$ \u4e4b\u540e\u4e2d\u4f4d\u6570\u7684\u6700\u591a\u4f1a\u79fb\u52a8 $1$ \u4e2a\u4f4d\u7f6e\uff0c\u4e14\u79fb\u52a8\u4e4b\u540e\u9664\u4e86 $k$ \u4ee5\u5916\u7684\u503c\u5bf9\u603b\u4ee3\u4ef7\u7684\u8d21\u732e\u4e0d\u53d8\uff0c\u76f4\u63a5\u7528 `set` \u7ef4\u62a4 $1\\sim k$ \u51fa\u73b0\u7684\u4f4d\u7f6e\u7136\u540e\u79fb\u52a8\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5176\u5b9e\u53ef\u4ee5\u4e0d\u7528\u7ef4\u62a4\u4e2d\u4f4d\u6570\uff0c\u76f4\u63a5\u7528\u6811\u72b6\u6570\u7ec4\u8bb0\u5f55\u54ea\u4e9b\u4f4d\u7f6e\u51fa\u73b0\u4e86\u6570\u7136\u540e\u500d\u589e\u627e\u4e2d\u4f4d\u6570\u4e5f\u53ef\u4ee5\uff0c\u5e38\u6570\u66f4\u5c0f\u3002\n\n\u4ee3\u7801\u53ef\u80fd\u4e0d\u5927\u50cf\u8bf4\u4eba\u8bdd\u7684\u6837\u5b50\uff0c\u770b\u770b\u601d\u8def\u5c31\u597d\u4e86\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<set>\n#define pb push_back\n#define mp std::make_pair\n#define fir first\n#define sec second\ntypedef std::pair<int, int> pii;\ntypedef std::vector<int> veci;\ntypedef std::vector<pii> vecpii;\ntypedef long long ll;\nll Abs(ll x) { return x < 0 ? -x : x; }\ntemplate <typename T>\nT& read(T& r) {\n\tr = 0; bool w = 0; char ch = getchar();\n\twhile(ch < '0' || ch > '9') w = ch == '-' ? 1 : 0, ch = getchar();\n\twhile(ch >= '0' && ch <= '9') r = r * 10 + (ch ^ 48), ch = getchar();\n\treturn r = w ? -r : r;\n}\ninline int lowbit(int x) { return x & (-x); }\nconst int N = 2000100;\nint n, a[N], pos[N];\nstruct BIT {\n\tint tree[N];\n\tint sumq(int x) { int sum = 0; for(; x; x -= lowbit(x)) sum += tree[x]; return sum; }\n\tvoid modify(int x, int v) { for(; x <= n; x += lowbit(x)) tree[x] += v; }\n}tr;\nll ans[N], c[N];\nstd::set<int>st;\nll calc(ll x) { return x * (x + 1) / 2; } \nsigned main() {\n\tread(n);\n\tfor(int i = 1; i <= n; ++i) read(a[i]), pos[a[i]] = i;\n\tfor(int i = n; i; --i) {\n\t\tc[a[i]] = tr.sumq(a[i]);\n\t\ttr.modify(a[i], 1);\n\t}\n\tint p = 1, num = 1; st.insert(pos[1]);\n\tfor(int i = 2; i <= n; ++i) {\n\t\tans[i] = ans[i-1] + c[i];\n\t\tif(!(i&1)) {\n\t\t\tans[i] += Abs(pos[num] - pos[i]);\n\t\t\tif(pos[i] < pos[num]) ++p;\n\t\t\tst.insert(pos[i]);\n\t\t\tcontinue ;\n\t\t}\n\t\tst.insert(pos[i]);\n\t\tif(pos[i] < pos[num]) ++p;\n\t\tif(p != (i+1)/2) {\n\t\t\tauto it = st.lower_bound(pos[num]);\n\t\t\tif(pos[i] < pos[num]) --it, --p;\n\t\t\telse ++it, ++p;\n\t\t\tnum = a[*it];\n\t\t}\n\t\tans[i] += Abs(pos[num] - pos[i]);\n\t}\n\tfor(int i = 1; i <= n; ++i) printf(\"%lld \", ans[i] - calc((i-1)/2) - calc(i/2));\n\treturn 0;\n}\n```",
        "postTime": 1629990460,
        "uid": 223298,
        "name": "do_while_true",
        "ccfLevel": 8,
        "title": "\u300c\u9898\u89e3\u300dCodeforces 1268C K Integers"
    }
]