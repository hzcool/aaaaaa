[
    {
        "content": "\u597d\u8ff7\u2026\u2026\n\n\u6211\u4eec\u5148\u8003\u8651\u5b8c\u5168\u6ca1\u6709\u7c89\u8272\u8fb9\u7684\u60c5\u51b5\n\n\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a$top$\u96c6\u5408\uff0c\u96c6\u5408\u91cc\u662f\u6240\u6709\u53ef\u80fd\u6210\u4e3a\u7b54\u6848\u7684\u70b9\uff0c\u5e76\u4e14\u7ef4\u62a4\u4e00\u4e2a$gg$\u96c6\u5408\uff0c\u91cc\u9762\u662f\u6240\u6709\u4e0d\u53ef\u80fd\u6210\u4e3a\u7b54\u6848\u7684\u70b9\uff08\u4e25\u683c\u6765\u8bf4\u8fd8\u662f\u6709\u53ef\u80fd\u6210\u4e3a\u7b54\u6848\u7684\uff0c\u53ea\u4e0d\u8fc7\u6211\u4eec\u4e0d\u9700\u8981\u4e86\uff09\n\n\u7136\u540e\u6211\u4eec\u6bcf\u6b21\u4ece$top$\u96c6\u5408\u91cc\u53d6\u51fa\u4e24\u4e2a\u70b9\uff0c\u8be2\u95ee\u5b83\u4eec\u4e4b\u95f4\u7684\u8fb9\u7684\u65b9\u5411\uff0c\u5982\u679c\u8fb9\u5f62\u5982$(u,v)$\uff0c\u5c31\u628a$v$\u4ece$top$\u96c6\u5408\u91cc\u53d6\u51fa\uff0c\u52a0\u5165$gg$\u96c6\u5408\n\n\u90a3\u4e48\u6700\u540e$top$\u96c6\u5408\u91cc\u53ea\u5269\u4e00\u4e2a\u70b9\u7684\u65f6\u5019\u8fd9\u4e2a\u70b9\u663e\u7136\u53ef\u4ee5\u6210\u4e3a\u7b54\u6848\n\n\u7136\u800c\u7c89\u8272\u8fb9\u7684\u53c2\u6218\u5bfc\u81f4\u4e8b\u60c5\u53d8\u5f97\u8fa3\u624b\u4e86\u8d77\u6765\n\n\u5927\u4f53\u601d\u8def\u8fd8\u662f\u548c\u4e4b\u524d\u4e00\u6837\u7684\uff0c\u53ea\u4e0d\u8fc7\u6211\u4eec\u4e00\u5f00\u59cb\u5e76\u4e0d\u80fd\u628a\u6240\u6709\u70b9\u90fd\u52a0\u5165$top$\u96c6\u5408\u91cc\u4e0d\u7136\u8ddf\u4e00\u5f00\u59cb\u7684\u60c5\u51b5\u6709\u4ec0\u4e48\u533a\u522b\u2026\u2026\n\n\u6211\u4eec\u5148\u628a\u6240\u6709\u7684\u7c89\u8fb9\u6784\u6210\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u641e\u51fa\u6765\uff0c\u7136\u540e\u6bcf\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\u53d6\u51fa\u4e00\u4e2a\u70b9\u52a0\u5165$top$\u96c6\u5408\n\n\u7136\u540e\u7167\u4f8b\u6bcf\u6b21\u4ece$top$\u96c6\u5408\u91cc\u53d6\u51fa\u4e24\u4e2a\u70b9\uff0c\u5047\u8bbe\u8fb9\u7684\u65b9\u5411\u4e3a$(u,v)$\uff0c\u90a3\u4e48\u7167\u4f8b\u628a$v$\u5220\u6389\u5c31\u4e07\u4e8b\u5927\u5409\u2026\u2026\n\n\u7b49\u4f1a\u513f$(u,v)$\u662f\u7eff\u8272\u7684\u5427\uff1f$v$\u5230\u5b83\u6240\u5728\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u7684\u70b9\u7684\u8fb9\u662f\u7c89\u8272\u7684\u5427\uff1f\u8fd9\u663e\u7136\u989c\u8272\u4e0d\u540c\u554a\uff1f\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ea\u6709$v$\u662f\u9700\u8981\u52a0\u5165$gg$\u96c6\u5408\u7684\uff0c\u800c$v$\u6240\u5728\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u5176\u5b83\u7684\u70b9\u53ef\u80fd\u8fd8\u662f\u9700\u8981\u52a0\u5165$top$\u96c6\u5408\u7684\n\n\u90a3\u4e48\u6211\u4eec\u628a\u6bcf\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u5220\u6389\u4e00\u4e9b\u8fb9\u4f7f\u4e4b\u6210\u4e3a\u4e00\u4e2a$DAG$\uff0c\u6bcf\u6b21\u628a\u5ea6\u6570\u4e3a$0$\u7684\u70b9\u52a0\u5165$top$\u96c6\u5408\uff0c\u7136\u540e\u8be2\u95ee\u5b8c\u4e4b\u540e\u628a$v$\u4ee5\u53ca$v$\u8fde\u51fa\u53bb\u7684\u6240\u6709\u8fb9\u90fd\u5220\u6389\uff0c\u518d\u770b\u770b\u6709\u6ca1\u6709\u5ea6\u6570\u4e3a$0$\u7684\u70b9\u5c31\u662f\u4e86\uff0c\u9700\u4e0d\u9700\u8981\u52a0\u5165$top$\u5c31\u662f\u4e86\u3002\u76f4\u5230$top$\u96c6\u5408\u53ea\u5269\u4e0b\u4e00\u4e2a\u5143\u7d20\u4e3a\u6b62\n\n\u6b63\u786e\u6027\uff1f\u663e\u7136\u6240\u6709$gg$\u96c6\u5408\u91cc\u7684\u5143\u7d20\u90fd\u80fd\u901a\u8fc7\u7eff\u8272\u8fb9\u8d70\u5230\uff0c\u65e2\u4e0d\u5728$top$\u4e5f\u4e0d\u5728$gg$\u91cc\u7684\u5143\u7d20\u90fd\u53ef\u4ee5\u901a\u8fc7\u7c89\u8272\u8fb9\u5230\u8fbe\uff0c\u90a3\u4e48\u6b63\u786e\u6027\u5c31\u6ca1\u95ee\u9898\u4e86\n\n```cpp\n//minamoto\n#include<bits/stdc++.h>\n#define R register\n#define fp(i,a,b) for(R int i=(a),I=(b)+1;i<I;++i)\n#define fd(i,a,b) for(R int i=(a),I=(b)-1;i>I;--i)\n#define go(u) for(int i=head[u],v=e[i].v;i;i=e[i].nx,v=e[i].v)\ntemplate<class T>inline bool cmin(T&a,const T&b){return a>b?a=b,1:0;}\nusing namespace std;\nint read(){\n    R int res,f=1;R char ch;\n    while((ch=getchar())>'9'||ch<'0')(ch=='-')&&(f=-1);\n    for(res=ch-'0';(ch=getchar())>='0'&&ch<='9';res=res*10+ch-'0');\n    return res*f;\n}\ninline int get(){R char ch;while((ch=getchar())>'1'||ch<'0');return ch-'0';}\nconst int N=1e5+5;\nstruct eg{int v,nx;}e[N<<1];int head[N],tot;\ninline void add(R int u,R int v){e[++tot]={v,head[u]},head[u]=tot;}\ninline bool query(R int u,R int v){printf(\"? %d %d\\n\",u,v),fflush(stdout);return read();}\nint vis[N],ins[N],deg[N];vector<int>to[N],now;\nint n,m;\nvoid tarjan(int u){\n\tvis[u]=ins[u]=1;\n\tgo(u){\n\t\tif(!ins[v])to[u].push_back(v),++deg[v];\n\t\tif(!vis[v])tarjan(v);\n\t}\n\tins[u]=0;\n}\nint main(){\n\tn=read(),m=read();\n\tfor(R int i=1,u,v;i<=m;++i)u=read(),v=read(),add(u,v);\n\tfp(i,1,n)if(!vis[i])tarjan(i);\n\tfp(i,1,n)if(!deg[i])now.push_back(i);\n\twhile(now.size()>1){\n\t\tint u=now.back();now.pop_back();\n\t\tint v=now.back();now.pop_back();\n\t\tif(!query(u,v))swap(u,v);now.push_back(u);\n\t\tfp(i,0,to[v].size()-1)if(!--deg[to[v][i]])now.push_back(to[v][i]);\n\t}\n\tprintf(\"! %d\\n\",now.front());\n\treturn 0;\n}\n```",
        "postTime": 1554198599,
        "uid": 41781,
        "name": "bztMinamoto",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1142E \u3010Pink Floyd\u3011"
    },
    {
        "content": "\u5148\u8003\u8651\u6ca1\u6709\u7c89\u8272\u8fb9\u7684\u60c5\u51b5\u3002\u6ce8\u610f\u5230\u7ade\u8d5b\u56fe\u7f29\u70b9\u540e\u5f62\u6210\u4e00\u6761\u94fe\uff0c\u524d\u9762\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u5411\u6240\u6709\u7684\u540e\u9762\u8fde\u8fb9\u3002\u90a3\u4e48\u6709\u4e00\u4e2a\u505a\u6cd5\u662f\uff0c\u6bcf\u6b21\u5728\u9884\u5b9a\u7684\u7b54\u6848\u96c6\u5408\u4e2d\u62bd\u51fa\u4e24\u4e2a\u70b9 $u,v$\uff0c\u5982\u679c\u8fb9\u7684\u65b9\u5411\u662f $u \\to v$ \u5c31\u9664\u6389 $v$\uff0c\u5426\u5219\u9664\u6389 $u$\uff0c\u521d\u59cb\u7684\u9884\u5b9a\u7b54\u6848\u96c6\u5408\u5c31\u662f\u5168\u96c6\u3002\n\n\u8003\u8651\u8fd9\u4e2a\u505a\u6cd5\u7684\u6b63\u786e\u6027\uff0c\u5982\u679c $u,v$ \u95f4\u7684\u8fb9\u662f $u \\to v$\uff0c\u4e14 $u,v$ \u4e0d\u5c5e\u4e8e\u540c\u4e00\u4e2a\u8fde\u901a\u5206\u91cf\uff0c\u90a3\u4e48\u8bf4\u660e\u94fe\u4e0a $u$ \u6240\u5728\u7684\u8fde\u901a\u5206\u91cf\u5728 $v$ \u524d\u9762\uff1b\u5982\u679c\u5c5e\u4e8e\u540c\u4e00\u4e2a\u8fde\u901a\u5206\u91cf\uff0c\u968f\u673a\u4fdd\u7559\u4e00\u4e2a\u5c31\u597d\u4e86\u3002\n\n\u90a3\u4e48\u73b0\u5728\u6709\u7c89\u8272\u8fb9\u3002\u6211\u4eec\u8981\u786e\u5b9a\u4e00\u4e2a\u53ef\u80fd\u7684\u7b54\u6848\u96c6\u5408\u3002\u8fd9\u4e2a\u96c6\u5408\u8981\u6ee1\u8db3\u4e24\u4e24\u4e4b\u95f4\u6ca1\u6709\u7c89\u8272\u8fb9\uff0c\u5e76\u4e14\u4ece\u96c6\u5408\u4e2d\u5220\u9664\u7684\u70b9\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u65b9\u6cd5\u548c\u5f53\u524d\u4ecd\u5728\u96c6\u5408\u5185\u7684\u70b9\u6784\u6210\u82e5\u5e72\u5916\u5411\u6811\uff0c\u6700\u7ec8\u7559\u4e0b\u7684\u70b9\u53ef\u4ee5\u5230\u8fbe\u6ca1\u6709\u52a0\u5165\u8fc7\u96c6\u5408\u7684\u70b9\u3002\u90a3\u4e48\u95ee\u9898\u5c31\u7b80\u5355\u4e86\uff0c\u6211\u4eec\u628a\u6bcf\u4e00\u4e2a\u7c89\u8272\u8fde\u901a\u5757\u5316\u6210\u4e00\u4e2a DAG\uff0c\u7136\u540e\u4e00\u5f00\u59cb\u7684\u96c6\u5408\u5c31\u662f\u6240\u6709\u5ea6\u6570\u4e3a $0$ \u7684\u70b9\u3002\u5220\u9664\u70b9\u7684\u65f6\u5019\u628a\u540e\u7ee7\u4e2d\u5ea6\u6570\u4e3a $0$ \u7684\u70b9\u52a0\u8fdb\u7b54\u6848\u96c6\u5408\u5c31\u597d\u4e86\u3002\n\n```cpp\nvector<int> P[100005],G[100005];\nint n,m,deg[100005];\nbool vis[100005],inq[100005];\nvoid dfs(int u)\n{\n\tvis[u]=inq[u]=true;\n\tfor(auto v:P[u])\n\t{\n\t\tif(!inq[v])\tG[u].push_back(v),++deg[v];\n\t\tif(!vis[v])\tdfs(v);\n\t}\n\tinq[u]=false;\n}\nint main(){\n\tscanf(\"%d %d\",&n,&m);\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tint u,v;\n\t\tscanf(\"%d %d\",&u,&v);\n\t\tP[u].push_back(v);\n\t}\n\tfor(int i=1;i<=n;++i)\tif(!vis[i])\tdfs(i);\n\tvector<int> S;\n\tfor(int i=1;i<=n;++i)\tif(!deg[i])\tS.push_back(i);\n\treverse(S.begin(),S.end());\n\twhile(int(S.size())>1)\n\t{\n\t\tint u=S.back();\n\t\tS.pop_back();\n\t\tint v=S.back();\n\t\tS.pop_back();\n\t\tprintf(\"? %d %d\\n\",u,v),F;\n\t\tint x;\n\t\tscanf(\"%d\",&x);\n\t\tif(!x)\tswap(u,v);\n\t\tS.push_back(u);\n\t\tfor(auto st:G[v])\tif(!--deg[st])\tS.push_back(st);\n\t}\n\tint ans=S.back();\n\tprintf(\"! %d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1652933763,
        "uid": 184977,
        "name": "pomelo_nene",
        "ccfLevel": 9,
        "title": "\u4e0d\u61c2\uff0c\u4e0d\u61c2\uff0c\u4e0d\u61c2\uff0c\u4e0d\u61c2\uff0c\u4e0d\u61c2\uff0c\u4e0d\u61c2"
    },
    {
        "content": "## \u89e3\u6790\n\n\u6211\u4eec\u9010\u7ea7\u8003\u8651\u8fd9\u4e2a\u95ee\u9898\n\n### \u6ca1\u6709\u7c89\u8272\u8fb9\u7684\u60c5\u51b5\n\n\u5148\u7ef4\u62a4\u4e00\u4e2a\u5217\u8868 $\\text{top}$\uff0c\u91cc\u9762\u7684\u6bcf\u4e2a\u7ed3\u70b9\u90fd\u662f\u4e00\u9897**\u4ec5\u7531\u7eff\u8272\u8fb9**\u7ec4\u6210\u7684\u6811\u7684\u6839\uff0c\u4e14\u6839\u53ef\u4ee5\u5230\u8fbe\u6811\u4e2d\u7684\u6bcf\u4e2a\u7ed3\u70b9\n\n\u518d\u8bb0\u5f55\u4e00\u4e2a\u5217\u8868 $\\text{delete}$\uff0c\u91cc\u9762\u7684\u6bcf\u4e2a\u7ed3\u70b9\u90fd\u662f\u53ef\u4ee5\u88ab $\\text{top}$ \u5217\u8868\u4e2d\u7684\u67d0\u4e2a\u7ed3\u70b9\u5230\u8fbe\u7684\n\n\u4e00\u5f00\u59cb\uff0c\u663e\u7136\u6240\u6709\u70b9\u90fd\u5e94\u8be5\u5728 $\\text{top}$ \u91cc\u3002\u6bcf\u6b21\u6211\u4eec\u4ece $\\text{top}$ \u4e2d\u53d6\u4efb\u610f\u4e24\u4e2a\u70b9 $u, v$ \u8be2\u95ee\u7eff\u8272\u8fb9\u7684\u65b9\u5411\u3002\u5982\u679c\u8fb9\u662f $(u, v)$\uff0c\u90a3\u4e48\u5c31\u628a $v$ \u653e\u5165 $\\text{delete}$\uff0c$u$ \u7ee7\u7eed\u7559\u5728 $\\text{top}$\uff1b\u53cd\u4e4b\u4ea6\u7136\u3002\u5982\u6b64\u76f4\u5230 $\\text{top}$ \u4e2d\u53ea\u5269\u4e0b\u4e00\u4e2a\u7ed3\u70b9\uff0c\u663e\u7136\u8fd9\u4e2a\u7ed3\u70b9\u5c31\u662f\u7b54\u6848\uff1b\u4e14\u8be2\u95ee\u6b21\u6570\u662f\u4e25\u683c $n-1$ \u6b21\u7684\n\n\uff08\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u8be5\u7b97\u6cd5\u7ed9\u51fa\u7684\u662f\u6700\u4f18\uff08**\u8be2\u95ee\u6700\u5c11**\uff09\u7684\u65b9\u6848\uff09\n\n### \u7c89\u8272\u8fb9\u7ec4\u6210 DAG \u7684\u60c5\u51b5\n\n\u540c\u6837\u7ef4\u62a4\u5217\u8868 $\\text{top}$ \u5e76\u8bb0\u5f55\u5217\u8868 $\\text{delete}$\u3002\u4f46\u6211\u4eec\u4e00\u5f00\u59cb\u4e0d\u80fd\u5c06\u6240\u6709\u7ed3\u70b9\u90fd\u653e\u5165 $\\text{top}$ \u4e86\uff0c\u5426\u5219\u6211\u4eec\u8be2\u95ee\u7684\u4e24\u4e2a\u7ed3\u70b9\u95f4\u53ef\u80fd\u4f1a**\u5df2\u7ecf\u6709**\u7c89\u8272\u8fb9\u4e86\n\n\u8003\u8651\u8fd9\u6837\u4e00\u79cd\u505a\u6cd5\uff1a\u521d\u59cb\u4ec5\u5c06 DAG \u4e2d\u5165\u5ea6\u4e3a $0$ \u7684\u7ed3\u70b9\u653e\u5165 $\\text{top}$\uff1b\u6bcf\u6b21\u5c06\u7ed3\u70b9\u653e\u5165 $\\text{delete}$ \u65f6\uff0c\u5c31\u5728 DAG \u4e2d \u201c\u5220\u53bb\u201d \u8fd9\u4e2a\u7ed3\u70b9\uff0c\u5e76\u68c0\u6d4b\u662f\u5426\u6709\u65b0\u7684\u5165\u5ea6\u4e3a $0$ \u7684\u7ed3\u70b9\uff0c\u6709\u5c31\u5c06\u5176\u653e\u5165 $\\text{top}$\n\n\u5982\u6b64\u76f4\u5230 $\\text{top}$ \u4e2d\u53ea\u5269\u4e0b\u4e00\u4e2a\u7ed3\u70b9\u65f6\uff0c\u5176\u4f59\u7684\u7ed3\u70b9\u8981\u4e48\u5728 $\\text{delete}$ \u91cc\uff0c\u90a3\u4e48\u5b83\u4eec\u53ef\u4ee5\u88ab $\\text{top}$ \u4e2d\u7684\u7ed3\u70b9\u901a\u8fc7\u7eff\u8272\u8def\u5f84\u5230\u8fbe\uff1b\u8981\u4e48\u5c31\u5728 DAG \u672a\u88ab\u5220\u9664\u7684\u90e8\u5206\u4e2d\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e9b\u7ed3\u70b9\u4e00\u5b9a\u80fd\u88ab $\\text{top}$ \u4e2d\u5269\u4e0b\u7684\u90a3\u4e2a\u7ed3\u70b9\u901a\u8fc7\u7c89\u8272\u8def\u5f84\u5230\u8fbe\uff08\u8bc1\u660e\u8003\u8651 DAG \u7684\u62d3\u6251\u6392\u5e8f\u6027\u8d28\uff1b\u6b63\u662f $\\text{top}$ \u4e2d\u5269\u4e0b\u7684\u90a3\u4e2a\u7ed3\u70b9\u8fde\u51fa\u7684\u8fb9\u624d\u4f7f\u8fd9\u4e9b\u7ed3\u70b9\u4e0d\u88ab\u5220\u9664\uff09\u3002\u4e8e\u662f $\\text{top}$ \u4e2d\u5269\u4e0b\u7684\u8fd9\u4e2a\u7ed3\u70b9\u5c31\u662f\u7b54\u6848\uff1b\u4e14\u5728\u6700\u591a $n-1$ \u6b21\u8be2\u95ee\u540e\u6211\u4eec\u5c31\u80fd\u7ed9\u51fa\u7b54\u6848\n\n\uff08\u8fd9\u79cd\u60c5\u51b5\u4e0b\u8be5\u7b97\u6cd5\u7ed9\u51fa\u7684\u4e0d\u4e00\u5b9a\u662f\u6700\u4f18\u7684\u65b9\u6848\uff09\n\n### \u4efb\u610f\u7684\u60c5\u51b5\n\n\u8fd9\u91cc\u7684\u505a\u6cd5\u53ef\u80fd\u4f1a\u5f88\u591a\uff08\u4e3b\u8981\u662f\u5728\u4e00\u4e9b\u7ec6\u8282\u4e0a\u7684\u5dee\u5f02\uff09\uff0c\u4f46\u5927\u4f53\u90fd\u662f\u5f3a\u8054\u901a\u5206\u91cf\uff08SCC\uff09\u7f29 DAG \u7136\u540e\u518d\u5904\u7406\u3002\u8fd9\u91cc\u5c31\u53ea\u8bb2\u4e0b\u6211\u5b9e\u73b0\u7684\u505a\u6cd5\n\n\u4e00\u5f00\u59cb\u6211\u4eec\u5c06\u56fe\u4e2d\u6240\u6709\u7684 SCC \u6c42\u51fa\uff0c\u5e76\u628a\u6bcf\u4e2a SCC \u5bfc\u51fa\u5b50\u56fe\u4e2d\u6240\u6709\u7684\u8fb9\uff08\u4e5f\u5c31\u662f\u8fd9\u4e9b SCC \u201c\u5185\u90e8\u201d \u7684\u8fb9\uff09\u90fd\u5220\u6389\uff0c\u8fd9\u6837\u539f\u56fe\u5c31\u8f6c\u5316\u4e3a\u4e86 DAG\u3002\u6211\u4eec\u4ecd\u6309\u7167 DAG \u7684\u65b9\u5f0f\u505a\uff0c\u4f46\u5bf9\u4e8e\u6bcf\u4e2a SCC\uff0c\u6211\u4eec\u81f3\u591a\u5141\u8bb8\u5176\u4e2d\u7684**\u4e00\u4e2a**\u7ed3\u70b9\u51fa\u73b0\u5728 $\\text{top}$ \u5217\u8868\u4e2d\uff08\u4e3a\u4e86\u505a\u5230\u8fd9\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5bf9\u6bcf\u4e2a SCC \u7ef4\u62a4\u4e00\u4e2a\u5217\u8868 `scc_list`\uff0c\u5176\u4e2d\u662f\u8be5 SCC \u4e2d\u5165\u5ea6\u5df2\u7ecf\u4e3a $0$\uff0c\u4f46\u56e0\u4e3a\u9650\u5236\u65e0\u6cd5\u653e\u5165 $\\text{top}$ \u7684\u7ed3\u70b9\uff09\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u4fdd\u8bc1\u4e86\u6bcf\u6b21\u8be2\u95ee\u7684\u4e24\u4e2a\u7ed3\u70b9\u95f4\u4e0d\u4f1a\u6709\u7c89\u8272\u8fb9\n\n\u5f53 $\\text{top}$ \u4e2d\u53ea\u5269\u4e0b\u4e00\u4e2a\u7ed3\u70b9\u65f6\uff0c\u8bbe\u5176\u4e3a $u$\uff0c\u5176\u4f59\u7684\u7ed3\u70b9\u8981\u4e48\u5728 $\\text{delete}$ \u91cc\uff0c\u90a3\u4e48\u5b83\u4eec\u53ef\u4ee5\u88ab $u$ \u901a\u8fc7\u7eff\u8272\u8def\u5f84\u5230\u8fbe\uff1b\u8981\u4e48\u5c31\u5728 DAG \u672a\u88ab\u5220\u9664\u7684\u90e8\u5206\u4e2d\uff0c\u6216\u4e3a $u$ \u5f3a\u8054\u901a\u5206\u91cf\u4e2d\u7684\u7ed3\u70b9\uff08\u6ce8\u610f $u$ \u5f3a\u8054\u901a\u5206\u91cf\u4e2d\u7684\u90e8\u5206\u7ed3\u70b9\u4e5f\u53ef\u80fd\u5728 $\\text{delete}$ \u4e2d\uff0c\u4e0d\u8fc7\u5176\u5b9e\u5e76\u4e0d\u9700\u8981\u8003\u8651\u8fd9\u4e2a\u95ee\u9898\uff09\uff0c\u524d\u8005\u4e00\u5b9a\u53ef\u4ee5\u88ab $u$ \u7684**\u5f3a\u8054\u901a\u5206\u91cf**\u901a\u8fc7\u7c89\u8272\u8def\u5f84\u5230\u8fbe\uff0c\u800c\u540e\u8005\u5c31\u5728 $u$ \u7684\u5f3a\u8054\u901a\u5206\u91cf\u4e2d\uff0c\u663e\u7136\u4e5f\u53ef\u88ab $u$ \u901a\u8fc7\u7c89\u8272\u8def\u5f84\u5230\u8fbe\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5728\u81f3\u591a $n-1$ \u6b21\u8be2\u95ee\u540e\u5c31\u80fd\u7ed9\u51fa\u7b54\u6848\u3002\u6ce8\u610f\u5f97\u51fa\u7684\u65b9\u6848**\u5e76\u4e0d\u4e00\u5b9a**\u662f\u6700\u4f18\u7684\uff0c\u4e0d\u8fc7\u9898\u76ee\u5e76\u6ca1\u6709\u8981\u6c42\u65b9\u6848\u7684\u6700\u4f18\u6027\n\n## CODE\n\n$\\text{delete}$ \u5176\u5b9e\u5e76\u4e0d\u9700\u8981\u5728\u5b9e\u73b0\u4e2d\u771f\u7684\u8bb0\u5f55\uff1b\u4f46\u5206\u6790\u65f6\u6709\u8fd9\u4e2a\u4e1c\u897f\u4f1a\u66f4\u597d\u8bf4\u660e\u4e9b\n\n\u53e6\u5916\u6ce8\u610f\u8be2\u95ee\u8981\u6362\u884c\uff0c\u4e14\u8981**\u5148\u5237\u65b0\u5c4f\u5e55**\u518d\u8bfb\u53d6\u56de\u7b54 \\fad\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <vector>\nusing std::vector;\nusing std::min;\n\nconst int MAXN =1e5+20;\n\n/*------------------------------Map------------------------------*/\n\nint first[MAXN], tote;\nstruct edge{\n\tint to, net;\n}e[MAXN];\n\ninline void clear_map(){\n\ttote =0;\n\tmemset(first, 0, sizeof(first));\n}\n\ninline void addedge(const int &u, const int &v){\n\t++tote;\n\te[tote].to =v, e[tote].net =first[u];\n\tfirst[u] =tote;\n}\n\n/*------------------------------Scc------------------------------*/\n\nvector<int> scc_list[MAXN];\nint scc_id[MAXN], in[MAXN];\n\n/*------------------------------Tarjan------------------------------*/\n\nint dfn[MAXN], low[MAXN], cnt;\nint stk[MAXN], stk_top;\nbool instk[MAXN];\n\nvoid tarjan(int u){\n\tlow[u] =dfn[u] =++cnt;\n\tstk[stk_top++] =u;\n\tinstk[u] =1;\n\tfor(int l =first[u]; l; l =e[l].net){\n\t\tif(!dfn[e[l].to]){\n\t\t\ttarjan(e[l].to);\n\t\t\tlow[u] =min(low[u], low[e[l].to]);\n\t\t}\n\t\telse if(instk[e[l].to])\n\t\t\tlow[u] =min(low[u], dfn[e[l].to]);\n\t}\n\tif(low[u] == dfn[u])\n\t\twhile(stk[stk_top] != u){\n\t\t\tscc_id[stk[stk_top-1]] =u;/*\u59d1\u4e14\u5c31\u4ee5 u \u4f5c\u4e3a SCC \u989c\u8272*/\n\t\t\tinstk[stk[stk_top-1]] =0;\n\t\t\t--stk_top;\n\t\t}\n}\n\nint tmp_e_u[MAXN], tmp_e_v[MAXN], tmp_e_tot;/*\u4e34\u65f6\u5b58\u8fb9*/\n\nvoid rebuild_DAG(int n){\n\tfor(int i =1; i <= n; ++i)\n\t\tfor(int l =first[i]; l; l =e[l].net)\n\t\t\tif(scc_id[e[l].to] != scc_id[i]){\n\t\t\t\ttmp_e_u[tmp_e_tot] =i;\n\t\t\t\ttmp_e_v[tmp_e_tot] =e[l].to;\n\t\t\t\t++tmp_e_tot;\n\t\t\t}\n\tclear_map();\n\tfor(int i =0; i < tmp_e_tot; ++i){\n\t\taddedge(tmp_e_u[i], tmp_e_v[i]);\n\t\t++in[tmp_e_v[i]];\n\t}\n}\n\n/*------------------------------Main------------------------------*/\n\ninline int read(){\n\tint x =0; char c =getchar();\n\twhile(c < '0' || c > '9') c =getchar();\n\twhile(c >= '0' && c <= '9') x = (x<<3) + (x<<1) + (48^c), c =getchar();\n\treturn x;\n}\n\nint top[MAXN], head, tail;\nbool in_top[MAXN];\n\nint main(){\n\tint n =read(), m =read();\n\tfor(int i =0; i < m; ++i){\n\t\tint u =read(), v =read();\n\t\taddedge(u, v);\n\t}\n\t\n\tfor(int i =1; i <= n; ++i)\n\t\tif(!dfn[i])\n\t\t\ttarjan(i);\n\trebuild_DAG(n);\n\tfor(int i =1; i <= n; ++i)\n\t\tif(in[i] == 0){\n\t\t\tif(!in_top[scc_id[i]]){\n\t\t\t\ttop[tail++] =i;\n\t\t\t\tin_top[scc_id[i]] =1;\n\t\t\t}\n\t\t\telse\n\t\t\t\tscc_list[scc_id[i]].push_back(i);\n\t\t}\n\t\n\twhile(tail-head > 1){\n\t\tint u =top[head], v =top[head+1];\n\t\thead +=2;\n\t\t\n\t\tprintf(\"? %d %d\\n\", u, v);\n\t\tfflush(stdout);\n\t\tif(read() == 0)\n\t\t\tu ^=v ^=u ^=v;\n\t\t\n\t\ttop[--head] =u;/*\u5c06 u \u653e\u56de\uff0c\u4ece head \u52a0\u5165\u6ca1\u6709\u7279\u6b8a\u542b\u4e49*/\n\t\t\n\t\tin_top[scc_id[v]] =0;\n\t\tfor(int l =first[v]; l; l =e[l].net){\n\t\t\t--in[e[l].to];\n\t\t\tif(in[e[l].to] == 0){\n\t\t\t\tif(!in_top[scc_id[e[l].to]]){\n\t\t\t\t\ttop[tail++] =e[l].to;\n\t\t\t\t\tin_top[scc_id[e[l].to]] =1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tscc_list[scc_id[e[l].to]].push_back(e[l].to);\n\t\t\t}\n\t\t}\n\t\tif((int)scc_list[scc_id[v]].size() > 0){\n\t\t\ttop[tail++] =scc_list[scc_id[v]][scc_list[scc_id[v]].size()-1];\n\t\t\tscc_list[scc_id[v]].pop_back();\n\t\t\tin_top[scc_id[v]] =1;\n\t\t}\n\t}\n\t\n\tprintf(\"! %d\", top[head]);\n}\n```",
        "postTime": 1602891372,
        "uid": 105254,
        "name": "Piwry",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1142E \u3010Pink Floyd\u3011"
    },
    {
        "content": "[CF1142E Pink Floyd](https://www.luogu.com.cn/problem/CF1142E)\u89e3\u9898\u62a5\u544a\uff1a\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://zybuluo.com/xiaoziyao/note/1815455)\n\n## \u9898\u610f\n\n- \u7ed9\u5b9a\u4e00\u4e2a $n$ \u4e2a\u70b9\u7684\u7ade\u8d5b\u56fe\uff0c\u8fb9\u5206\u4e3a\u7c89\u8272\u548c\u7eff\u8272\uff0c\u4f60\u77e5\u9053\u7c89\u8272\u8fb9\u7684\u65b9\u5411\uff0c\u4f46\u662f\u4e0d\u77e5\u9053\u7eff\u8272\u8fb9\u7684\u65b9\u5411\u3002\n- \u4f60\u53ef\u4ee5\u8fdb\u884c\u82e5\u5e72\u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u4f60\u53ef\u4ee5\u83b7\u5f97\u4e00\u6761\u7eff\u8272\u8fb9\u7684\u65b9\u5411\uff0c\u4f60\u9700\u8981\u5728 $2n$ \u6b21\u8be2\u95ee\u5185\u627e\u5230\u4e00\u4e2a\u70b9 $u$ \u4f7f\u5f97\u5bf9\u4e8e\u6bcf\u4e2a\u70b9 $v$\uff0c\u90fd\u6709\u4e00\u6761 $u$ \u5230 $v$ \u7684\u8def\u5f84\uff0c\u4e14\u8def\u5f84\u4e0a\u6bcf\u6761\u8fb9\u989c\u8272\u76f8\u540c\u3002\uff08\u6ce8\u610f\uff0c\u4f60\u53ea\u80fd\u901a\u8fc7\u7c89\u8272\u8fb9\u4e0e\u4f60\u8be2\u95ee\u7684\u7eff\u8272\u8fb9\uff09\n- $1\\leqslant n\\leqslant 10^5$\u3002\n\n## \u5206\u6790\n\n\u6bd4\u8f83\u8ba9\u4eba\u8ff7\u60d1\u7684\u9898\u3002\n\n\u8003\u8651\u6ca1\u6709\u7c89\u8272\u8fb9\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u7ef4\u62a4\u82e5\u5e72\u4e2a\u7eff\u8272\u53f6\u5411\u6811\uff0c\u6bcf\u6b21\u5408\u5e76\u4e24\u4e2a\u6839\u7ed3\u70b9\u5c31\u597d\u4e86\uff0c\u8be2\u95ee\u6b21\u6570 $n-1$\u3002\n\n\u7136\u540e\u662f\u7c89\u8272\u8fb9\u5f62\u6210\u4e00\u4e2a DAG \u7684\u60c5\u51b5\uff0c\u6211\u4eec\u8003\u8651\u5bf9\u7c89\u8272\u8fb9\u7684\u56fe\u62d3\u6251\u6392\u5e8f\uff0c\u540c\u65f6\u7ef4\u62a4\u4e00\u4e2a\u96c6\u5408 $A$\u3002\u4e00\u5f00\u59cb\u628a\u6240\u6709\u5165\u5ea6\u4e3a $0$ \u7684\u7ed3\u70b9\u653e\u5230 $A$ \u4e2d\uff0c\u6bcf\u6b21\u53d6\u5176\u4e2d\u4e24\u4e2a\u7ed3\u70b9\u5408\u5e76\uff0c\u627e\u5230\u5220\u9664\u7684\u90a3\u4e2a\u7ed3\u70b9\u5b83\u6240\u6709\u7684\u51fa\u8fb9\u5230\u8fbe\u7684\u7ed3\u70b9\u653e\u5165 $A$ \u4e2d\uff0c\u76f4\u5230 $|A|=1$\u3002\n\n\u90a3\u4e48\u6700\u540e\u7684\u70b9\u8981\u4e48\u5728\u5269\u4e0b\u7684\u90a3\u4e2a\u7ed3\u70b9\u7684\u7eff\u8272\u53f6\u5411\u6811\u4e2d\uff0c\u8981\u4e48\u53ef\u4ee5\u88ab\u5269\u4e0b\u7684\u90a3\u4e2a\u7ed3\u70b9\u7ecf\u8fc7\u7c89\u8272\u7684\u8fb9\u5230\u8fbe\u3002\n\n\u6700\u540e\u662f\u539f\u9898\u7684\u60c5\u51b5\uff0c\u663e\u7136\u6211\u4eec\u8981\u5bf9\u7c89\u8272\u56fe\u8fdb\u884c\u7f29\u70b9\uff0c\u5220\u9664\u540c\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u4e4b\u95f4\u7684\u8fb9\uff0c\u5f62\u6210\u4e00\u4e2a DAG\u3002\u8003\u8651\u5c06\u5165\u5ea6\u4e3a $0$ \u7684 scc \u4e2d\u4efb\u53d6\u4e00\u4e2a\u70b9\u653e\u5165 $A$ \u4e2d\uff0c\u6bcf\u6b21\u53d6 $A$ \u4e2d\u4e24\u4e2a\u7ed3\u70b9\u5408\u5e76\uff0c\u8bbe\u5220\u9664\u7684\u7ed3\u70b9\u4e3a $x$\uff0c\u6211\u4eec\u8ba9 $x$ \u7684 scc \u4e2d\u6ca1\u6709\u5220\u9664\u8fc7\u4e14\u5f53\u524d\u5165\u5ea6\u4e3a $0$ \u7684\u7684\u4efb\u4e00\u7ed3\u70b9\u653e\u5165 $A$ \u4e2d\uff0c\u7136\u540e\u518d\u628a $x$ \u6240\u6709\u5230\u8fbe\u7684\u4e14\u5f53\u524d scc \u6ca1\u6709\u70b9\u5728 $A$ \u4e2d\u7684\u7ed3\u70b9\u653e\u5165 $A$ \u4e2d\u3002\u4e0d\u65ad\u91cd\u590d\u4e0a\u8ff0\u6b65\u9aa4\u76f4\u5230 $|A|=1$\u3002\n\n\u8bbe\u5269\u4e0b\u7684\u4f4d\u7f6e\u4e3a $s$\uff0c\u90a3\u4e48\u88ab\u5220\u9664\u7684\u7ed3\u70b9\u4e00\u5b9a\u662f $s$ \u7eff\u8272\u53f6\u5411\u6811\u5185\u7684\u3002\u5982\u679c\u6ca1\u6709\u88ab\u5220\u9664\uff0c\u90a3\u4e48 $s$ \u6240\u5728\u8fde\u901a\u5757\uff08\u6ce8\u610f\uff0c\u4e0d\u662f\u5f3a\u8054\u901a\u5757\uff09\u4e4b\u5916\u7684\u8fde\u901a\u5757\u7684\u7ed3\u70b9\u4e00\u5b9a\u5220\u5b8c\u4e86\uff0c\u4e14 $s$ \u6240\u5728\u8fde\u901a\u5757\u5176\u4ed6\u7ed3\u70b9\u4e00\u5b9a\u53ef\u4ee5\u88ab $s$ \u901a\u8fc7\u7c89\u8272\u8fb9\u5230\u8fbe\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n+m)$\u3002\n\n## \u4ee3\u7801\n\n```\n#include<stdio.h>\n#include<vector>\n#include<queue>\nusing namespace std;\nconst int maxn=100005;\nint n,m,top,dfns,tot;\nint dfn[maxn],low[maxn],stk[maxn],vis[maxn],bel[maxn],deg[maxn],inque[maxn];\nvector<int>g[maxn],v[maxn],ok[maxn];\nqueue<int>q;\nvoid tarjan(int x){\n\tdfn[x]=low[x]=++dfns,stk[++top]=x,vis[x]=1;\n\tfor(int i=0;i<g[x].size();i++){\n\t\tint y=g[x][i];\n\t\tif(dfn[y]==0)\n\t\t\ttarjan(y),low[x]=min(low[x],low[y]);\n\t\telse if(vis[y])\n\t\t\tlow[x]=min(low[x],dfn[y]);\n\t}\n\tif(dfn[x]==low[x]){\n\t\tint y=0;\n\t\ttot++;\n\t\twhile(y!=x)\n\t\t\ty=stk[top--],bel[y]=tot,vis[y]=0;\n\t}\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++){\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tg[x].push_back(y);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(dfn[i]==0)\n\t\t\ttarjan(i);\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=0;j<g[i].size();j++){\n\t\t\tint k=g[i][j];\n\t\t\tif(bel[i]!=bel[k])\n\t\t\t\tv[i].push_back(k),deg[k]++;\n\t\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(deg[i]==0){\n\t\t\tif(inque[bel[i]]==0)\n\t\t\t\tq.push(i),inque[bel[i]]=1;\n\t\t\telse ok[bel[i]].push_back(i);\n\t\t}\n\twhile(q.size()>1){\n\t\tint x=q.front();\n\t\tq.pop();\n\t\tint y=q.front();\n\t\tq.pop();\n\t\tprintf(\"? %d %d\\n\",x,y),fflush(stdout);\n\t\tint z;\n\t\tscanf(\"%d\",&z);\n\t\tif(z==1)\n\t\t\tswap(x,y);\n\t\tq.push(y);\n\t\tfor(int i=0;i<v[x].size();i++){\n\t\t\tint y=v[x][i];\n\t\t\tdeg[y]--;\n\t\t\tif(deg[y]==0){\n\t\t\t\tif(inque[bel[y]]==0)\n\t\t\t\t\tq.push(y),inque[bel[y]]=1;\n\t\t\t\telse ok[bel[y]].push_back(y);\n\t\t\t}\n\t\t}\n\t\tinque[bel[x]]=0;\n\t\tif(ok[bel[x]].size())\n\t\t\tinque[bel[x]]=1,q.push(ok[bel[x]].back()),ok[bel[x]].pop_back();\n\t}\n\tprintf(\"! %d\\n\",q.front()),fflush(stdout);\n\treturn 0;\n}\n```",
        "postTime": 1628861768,
        "uid": 35754,
        "name": "Verdandi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1142E\u3010Pink Floyd\u3011"
    }
]