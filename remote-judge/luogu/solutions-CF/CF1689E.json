[
    {
        "content": "## \u601d\u8def\n\u9996\u5148\u5148\u628a\u6240\u6709 $0$ \u53d8\u6210 $1$\u3002\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u7b54\u6848\u4e0d\u5927\u4e8e $2$\uff0c\u4e00\u79cd\u5177\u4f53\u65b9\u5f0f\u5982\u4e0b\uff1a\n\n- \u8003\u8651\u6240\u6709 $\\text{lowbit}$ \u6700\u9ad8\u7684\u6570\u3002\n  \n- \u5982\u679c\u53ea\u6709\u4e00\u4e2a\uff0c\u5c06\u5b83 $-1$\u3002\n  \n- \u5982\u679c\u4e0d\u6b62\u4e00\u4e2a\uff0c\u968f\u4fbf\u627e\u4e00\u4e2a $+1$\uff0c\u968f\u4fbf\u627e\u4e00\u4e2a $-1$\u3002\n  \n\n\u4e8e\u662f\u679a\u4e3e\u6240\u6709\u4e00\u6b65\u64cd\u4f5c\u7684\u60c5\u51b5\u4e00\u4e00\u68c0\u9a8c\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 Soft $O(n^2)$\uff0c\u5177\u4f53\u770b\u5b9e\u73b0\u3002\n## \u4ee3\u7801\n```cpp\n// Problem: E. ANDfinity\n// Contest: Codeforces - Codeforces Round #798 (Div. 2)\n// URL: https://codeforces.com/problemset/problem/1689/E\n// Memory Limit: 256 MB\n// Time Limit: 4000 ms\n// \n// Powered by CP Editor (https://cpeditor.org)\n\n//\u56de\u5bb6\uff1f\u6211\u6ca1\u6709\u5bb6\u53ef\u4ee5\u56de\uff0c\u6211\u6ca1\u6709\u9000\u8def\u3002\n#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native\")\nusing namespace std;\ninline int read(){\n   int s=0,w=1;\n   char ch=getchar();\n   while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n   while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n   return s*w;\n}\nint a[2003],n,ans,x,s;\nbool vis[2003];\nint fa[2003];\nvoid dfs(int x)\n{\n\tvis[x]=1,++s;\n\tfor(int i=1; i<=n; ++i) \n\t\tif((a[i]&a[x])&&!vis[i])\n\t\t\tdfs(i);\n\treturn ;\n}\nint L(int x){return x&(-x);}\nint find(int x){return fa[x]==x?x:(fa[x]=find(fa[x]));}\nbool chk()\n{\n\tfor(int i=1; i<=n; ++i) fa[i]=i;\n\tfor(int s=1; s<=536870912; s<<=1)\n\t{\n\t\tint fir=n;\n\t\tfor(int i=1; fir==n&&i<n; ++i) if(a[i]&s) fir=i;\n\t\tint A=find(fir);\n\t\tfor(int i=fir+1; i<=n; ++i) if(a[i]&s) fa[find(i)]=A;\n\t}\n\tfor(int i=2; i<=n; ++i) if(find(i)!=find(1)) return 0;\n\treturn 1;\n}\nsigned main()\n{\n\tfor(int T=read();T--;)\n\t{\n\t\tn=read(),ans=x=s=0;\n\t\tfor(int i=1; i<=n; ++i) vis[i]=0;\n\t\tfor(int i=1; i<=n; ++i)\n\t\t\t(!(a[i]=read()))&&(++ans,a[i]=1),\n\t\t\tx=max(x,L(a[i]));\n\t\tdfs(1);\n\t\tif(s==n) \n\t\t{\n\t\t\tprintf(\"%d\\n\",ans);\n\t\t\tfor(int i=1; i<=n; ++i) printf(\"%d \",a[i]);\n\t\t\tputs(\"\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint ovo=1;\n\t\t\tfor(int i=1; i<=n; ++i)\n\t\t\t{\n\t\t\t\t//check: --a[i]\n\t\t\t\t--a[i];\n\t\t\t\tif(chk()){ovo=0;break;}\n\t\t\t\t//check: ++a[i]\n\t\t\t\t++a[i],++a[i];\n\t\t\t\tif(chk()){ovo=0;break;}\n\t\t\t\t--a[i];\n\t\t\t}\n\t\t\tif(!ovo)\n\t\t\t{\n\t\t\t\tprintf(\"%d\\n\",ans+1);\n\t\t\t\tfor(int i=1; i<=n; ++i) printf(\"%d \",a[i]);\n\t\t\t\tputs(\"\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfor(int i=1; i<=n; ++i) \n\t\t\t\tif(L(a[i])==x)\n\t\t\t\t{\n\t\t\t\t\tif(ovo) \n\t\t\t\t\t\t--a[i],ovo=0;\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t++a[i];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tprintf(\"%d\\n\",ans+2);\n\t\t\tfor(int i=1; i<=n; ++i) printf(\"%d \",a[i]);\n\t\t\tputs(\"\");\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1656340101,
        "uid": 111055,
        "name": "dead_X",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1689E"
    },
    {
        "content": "\u6628\u5929\u6559\u7ec3\u7528\u8fd9\u73a9\u610f\u51fa\u4e86\u6a21\u62df\u8d5b\n\n\u8003\u573a\u4e0a\u5269\u4e0b\u4e09\u5206\u949f\u7684\u65f6\u5019\u53d1\u73b0\u4e86\u795e\u79d8\u6027\u8d28\u5207\u6389\u4e86\n\n\u5207\u5b8c\u76f4\u63a5\u51b2\u5230\u673a\u623f\u5916\u5f00\u9a82\uff1a\u4ec0\u4e48\u8be1\u5f02\u6027\u8d28\uff08\n\n\n------------\n\n\u9996\u5148\u6211\u4eec\u5206\u6790\u6837\u4f8b\n\n\u5bf9\u4e8e\u7b2c\u4e00\u7ec4\u6837\u4f8b\uff0c ` 1 2 3 4 5 `\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5b83\u5176\u5b9e\u672c\u8eab\u5c31\u662f\u8054\u901a\u7684\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u64cd\u4f5c\n\n\u7136\u540e\u770b\u7b2c\u4e94\u7ec4\u6837\u4f8b\uff0c ` 3 0 0 0 `\n\n\u8f93\u51fa\u662f ` 3 1 1 1 ` \uff0c\u8bf4\u660e\u5b83\u628a\u6240\u6709\u7684 0 \u90fd\u52a0\u4e86\u4e00\n\n\u90a3\u4e48\u6211\u4eec\u81ea\u7136\u53ef\u4ee5\u60f3\u5230\u5148\u628a\u6240\u6709 0 \u52a0\u4e00\u518d\u53bb\u5224\u65ad\u662f\u5426\u8fde\u901a\n\n\n------------\n\n\n\u63a5\u7740\u770b\u5230\u7b2c\u4e8c\u7ec4\u6837\u4f8b\uff0c ` 0 2 `\n\n\u5c06 0 \u53d8\u6210 1 \u540e\u53ea\u9700\u8981\u5c06 2 \u51cf\u53bb\u4e00\u6216\u8005\u5c06 1 \u52a0\u4e0a\u4e00\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u8fde\u901a\n\n\u7b2c\u4e09\u7ec4\u6837\u4f8b\u540c\u7406\uff0c\u628a 12 \u51cf\u53bb\u4e00\u5373\u53ef\n\n\u4e00\u822c\u5730\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\uff0c\u5bf9\u4e8e\u4e00\u7ec4\u8d77\u521d\u4e0d\u8fde\u901a\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u627e\u51fa\u62e5\u6709\u6700\u5927\u7684 $\\operatorname{lowbit}$ \u7684\u6570\u5b57\uff0c\u5c06\u8fd9\u4e2a\u6570\u5b57\u51cf\u4e00\n\n\u5b83\u51cf\u4e00\u540e\u6240\u6709\u7684\u4f4e\u4e8e\u5b83\u7684 $\\operatorname{lowbit}$ \u7684\u6570\u4f4d\u90fd\u4f1a\u53d8\u6210 1\n\n\u8fd9\u6837\uff0c\u56e0\u4e3a\u5b83\u7684 $\\operatorname{lowbit}$ \u662f\u6700\u5927\u7684\uff0c\u5b83\u51cf\u4e00\u540e\u7684\u6570\u5b57\u5fc5\u7136\u6709\u4e00\u4f4d\u4e0e\u5176\u5b83\u6570\u5b57\u4e2d\u7684\u67d0\u4e00\u4f4d\u505a\u4e0e\u8fd0\u7b97\u540e\u4e0d\u4e3a 0\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5bf9\u4e8e ` 8 4 2 3 ` \uff0c\u663e\u7136\u7684\uff0c8 \u7684 $\\operatorname{lowbit}$ \u503c\u662f\u6700\u5927\u7684\n\n\u6211\u4eec\u8ba9 8 \u51cf\u53bb\u4e00\uff0c\u7136\u540e $ ( 1000 )_2 $ \u53d8\u6210\u4e86 $ (111)_2 $\n\n\u5b83\u4e0e $ 4 = (100)_2$\uff0c$ 2 = (10)_2 $\uff0c$ 3 = (11)_2 $ \u90fd\u6709\u5171\u540c\u7684\u4e00\u4f4d\u4e3a 1\n\n\u6574\u5f20\u56fe\u4fbf\u8fde\u901a\u4e86\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u5206\u6790\u5b8c\u4e86\u6837\u4f8b\uff0cAC \u4f3c\u4e4e\u5c31\u5728\u773c\u524d\u2026\u2026\u5417\uff1f\n\n\n------------\n\n\n\u7136\u9e45\u5c31\u8fd9\u6837\u5199\u662f\u4f1a\u6302\u7684\n\n\u4e0d\u59a8\u8003\u8651\u5982\u4e0b\u7684\u4e00\u7ec4\u6570\u636e ` 8 8 1 `\n\n\u5982\u679c\u5c06\u7b2c\u4e00\u4e2a 8 \u51cf\u4e00\uff0c\u6570\u636e\u53d8\u4e3a $(111)_2$\uff0c$(1000)_2$\uff0c$(1)_2$\n\n\u8fd9\u6837\u56fe\u662f\u4e0d\u8fde\u901a\u7684\uff0c\u5982\u679c\u518d\u5c06\u7b2c\u4e8c\u4e2a 8 \u51cf\u4e00\u5c31\u9519\u4e86\n\n\u56e0\u4e3a\u6211\u4eec\u5f88\u5bb9\u6613\u53d1\u73b0\u5c06\u67d0\u4e2a 8 \u52a0\u4e00\u5c31\u53ef\u4ee5\u53d8\u6210 $(1001)_2$\uff0c$(1000)_2$\uff0c$(1)_2$ \uff0c\u8fd9\u6837\u56fe\u662f\u8fde\u901a\u7684\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u7ed3\u8bba\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u628a\u67d0\u4e2a\u70b9\u52a0\u4e00\u6216\u8005\u51cf\u4e00\uff0c\u7136\u540e\u5224\u65ad\u8fde\u901a\u6027\n\n\n------------\n\n\n\u4f46\u662f\u8fd9\u6837\u8fd8\u662f\u4e0d\u5b8c\u7f8e\uff0c\u8003\u8651\u4e0b\u4e00\u7ec4\u6570\u636e `2 4 12` \uff0c\u4e5f\u5c31\u662f $(10)_2$\uff0c$(100)_2$\uff0c$(1100)_2$\n\n4 \u548c 12 \u7684 $\\operatorname{lowbit}$ \u503c\u90fd\u662f 4\n\n\u663e\u7136\u7684\u8ba9\u67d0\u4e2a\u6570\u52a0\u4e00\u6216\u8005\u8ba9\u67d0\u4e2a\u6570\u51cf\u4e00\u90fd\u65e0\u6cd5\u4fdd\u8bc1\u8fde\u901a\uff08 \u53ef\u4ee5\u81ea\u5df1\u8bd5\u4e00\u8bd5 \uff09\n\n\u6240\u4ee5\u6211\u4eec\u8ba9\u4e00\u4e2a\u6570\u52a0\u4e00\uff0c\u53e6\u4e00\u4e2a\u6570\u51cf\u4e00\uff0c\u6570\u636e\u53d8\u4e3a $(10)_2$\uff0c$(11)_2$\uff0c$(1101)_2$\n\n\u8fd9\u6837\u7ec8\u4e8e\u53ef\u4ee5\u4fdd\u8bc1\u8fde\u901a\u4e86\n\n\u7136\u540e\u6ce8\u610f\u64cd\u4f5c\u6570\u8981\u52a0\u4e0a\u4e00\u5f00\u59cb\u521d\u59cb\u5316 0 \u4e3a 1 \u7684\u64cd\u4f5c\u6570\n\n\n\n------------\n\n\u5173\u4e8e\u5982\u4f55\u5224\u65ad\u8fde\u901a\u6027\uff0c\u53ef\u4ee5\u8003\u8651\u7ef4\u62a4\u4e00\u4e9b\u8fb9\uff0c\u6bcf\u6b21\u627e\u5230\u4e24\u4e2a\u76f8\u90bb\u7684\u4e3a 1 \u7684\u4f4d\u8fde\u8fb9\n\n\u6bd4\u5982 $(101100)_2$\uff0c\u6211\u4eec\u8003\u8651\u7ed9\u7b2c\u4e00\u4f4d\u548c\u7b2c\u4e09\u4f4d\uff0c\u7b2c\u4e09\u4f4d\u548c\u7b2c\u56db\u4f4d\u8fde\u53cc\u5411\u8fb9\n\n\u8fd9\u6837\u53ea\u8981\u904d\u5386\u51fa\u8fb9\u5c31\u53ef\u4ee5\u627e\u5230\u6240\u6709 \u201c\u8fd9\u4e00\u4f4d\u662f\u4e00\u7684\u6570\u201d \u7684\u6240\u6709\u4e3a 1 \u7684\u6570\u4f4d\uff0c\u518d\u53bb\u626b\u8fd9\u51e0\u4f4d\u7684\u51fa\u8fb9\n\n\u8fd9\u6837\u53ef\u4ee5\u4e00\u76f4\u9012\u5f52\u4e0b\u53bb\u6253\u4e0b\u6807\u8bb0\uff0c\u6700\u540e\u518d\u5224\u65ad\u662f\u5426\u8fde\u901a\u5373\u53ef\n\n\u8bf4\u8d77\u6765\u5f88\u8270\u96be\uff0c\u5177\u4f53\u89c1\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<string>\n#include<iostream>\n#include<algorithm>\n#define int long long\n#define WR WinterRain\nusing namespace std;\nconst int WR=5010,mod=1e9+7;\nint t;\nint n,ans,a[WR];\nint bit[WR/50][WR];\nbool flag[WR/50];\nint read(){\n    int s=0,w=1;\n    char ch=getchar();\n    while(ch>'9'||ch<'0'){\n        if(ch=='-') w=-1;\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9'){\n        s=(s<<3)+(s<<1)+ch-48;\n        ch=getchar();\n    }\n    return s*w;\n}\nvoid tag(int u){\n    if(flag[u]) return;\n    flag[u]=true;\n    for(int i=1;i<=bit[u][0];i++){\n        tag(bit[u][i]);\n    }\n}\nbool judge(){\n    int s=0;\n    memset(flag,false,sizeof(flag));\n    memset(bit,0,sizeof(bit));\n    for(int i=1;i<=n;i++){\n        if(!a[i]) return false;\n        s|=a[i];//\u5b58\u4e00\u4e0b\u51fa\u73b0\u8fc7\u7684\u4f4d\u6570\n    }\n    for(int i=1;i<=n;i++){\n        int pre=-1;\n        for(int j=0;j<=30;j++){\n            if(a[i]&(1<<j)){\n                if(pre!=-1){\n                    bit[pre][0]++,bit[j][0]++;\n                    bit[pre][bit[pre][0]]=j,bit[j][bit[j][0]]=pre;//\u8fd9\u91cc\u6211\u4eec\u7528\u90bb\u63a5\u77e9\u9635\u5b58\u51fa\u8fb9\n                }\n                pre=j;\n            }\n        }\n    }\n    for(int i=0;i<=30;i++){\n        if(s&(1<<i)){\n            tag(i);//\u626b\u4e00\u904d\u5c31\u591f\u4e86\n            break;\n        }\n    }\n    for(int i=0;i<=30;i++){\n        if((s&(1<<i))&&!flag[i]) return false;\n        //\u5982\u679c\u53d1\u73b0\u8fd9\u4e00\u4f4d\u5e76\u4e0d\u8fde\u901a\u4f46\u662f\u51fa\u73b0\u4e86\u8fd9\u4e00\u4f4d\uff0c\u90a3\u4e48\u56fe\u5c31\u4e0d\u8fde\u901a\n    }\n    return true;\n}\nint lowbit(int x){\n    return x&(-x);\n}\nsigned main(){\n    t=read();\n    while(t--){\n        n=read();\n        bool tag=false;\n        for(int i=1;i<=n;i++) a[i]=read();\n        ans=0;\n        for(int i=1;i<=n;i++){\n            if(!a[i]) ans++,a[i]++;\n        }\n        if(judge()){\n            printf(\"%lld\\n\",ans);\n            for(int i=1;i<=n;i++){\n                printf(\"%lld \",a[i]);\n            }\n            printf(\"\\n\");\n            continue;\n        }\n        for(int i=1;i<=n;i++){\n            a[i]--;\n            if(judge()){\n                printf(\"%lld\\n\",ans+1);\n                for(int j=1;j<=n;j++){\n                    printf(\"%lld \",a[j]);\n                }\n                printf(\"\\n\");\n                tag=true;\n                break;\n            }\n            a[i]++;\n        }\n        if(tag) continue;\n        for(int i=1;i<=n;i++){\n            a[i]++;\n            if(judge()){\n                printf(\"%lld\\n\",ans+1);\n                for(int j=1;j<=n;j++){\n                    printf(\"%lld \",a[j]);\n                }\n                printf(\"\\n\");\n                tag=true;\n                break;\n            }\n            a[i]--;\n        }\n        if(tag) continue;\n        int low=0;\n        for(int i=1;i<=n;i++) low=max(low,lowbit(a[i]));\n        for(int i=1;i<=n;i++){\n            if(lowbit(a[i])==low){\n                a[i]--;\n                break;\n            }\n        }\n        for(int i=1;i<=n;i++){\n            if(lowbit(a[i])==low){\n                a[i]++;\n                break;\n            }\n        }\n        printf(\"%lld\\n\",ans+2);\n        for(int i=1;i<=n;i++){\n            printf(\"%lld \",a[i]);\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n```\n",
        "postTime": 1655284224,
        "uid": 130125,
        "name": "\u51ac\u5929\u7684\u96e8",
        "ccfLevel": 0,
        "title": "CF1689E ANDfinity"
    },
    {
        "content": "$O(30n)$\uff08$30$ \u4e3a\u4e8c\u8fdb\u5236\u4f4d\u6570\uff09\u66b4\u8650\u6807\u7b97\uff0c\u559c\u63d0 CF \u6700\u4f18\u89e3 15 ms\uff08\uff08\uff08\n\n\u663e\u7136\u5730\uff0c\u6211\u4eec\u628a $\\{a\\}$ \u4e2d\u6240\u6709 $0$ \u5168\u90fd $+1$ \u53d8\u6210 $1$\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u53ea\u8003\u8651\u65e0 $0$ \u4e32\u7684\u7b54\u6848\u3002\n\n\u6211\u4eec\u8bbe\u503c\u7684 $\\text{lowbit}$ \u6700\u5927\u7684\u90a3\u4e9b\u5143\u7d20\u96c6\u5408\u4e3a $S$\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u4fdd\u8bc1\u7b54\u6848 $\\le 2$\uff0c\u8bc1\u660e\u5982\u4e0b\uff1a\n\n* \u82e5 $|S|=1$\uff0c\u5219\u5c06\u8fd9\u4e2a\u5143\u7d20 $-1$ \u540e\u5fc5\u7136\u5168\u8fde\u901a\u3002\n\n* \u82e5 $|S|>1$\uff0c\u5219\u5c06\u5176\u4e2d\u4e00\u4e2a $-1$\uff0c\u53e6\u4e00\u4e2a $+1$\uff0c\u5fc5\u7136\u8fde\u901a\u3002\n\n\uff08\u8fd9\u91cc\u6bd4\u8f83\u7b80\u7565\uff0c\u5177\u4f53\u8bf7\u79fb\u6b65\u522b\u7684\u9898\u89e3\uff09\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u7b97\u6cd5\u6d41\u7a0b\uff1a\n\n1. \u5148\u901a\u8fc7\u679a\u4e3e\u6bcf\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u6765 $O(30n)$ \u5224\u65ad\u662f\u5426\u5df2\u7ecf\u8fde\u901a\u3002\n\n2. \u5426\u5219\uff0c\u6211\u4eec\u904d\u5386 $S$ \u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\uff0c\u5c1d\u8bd5 $+1$ \u548c $-1$ \u662f\u5426\u80fd\u8fde\u901a\u3002\n\n3. \u5426\u5219\uff0c\u6211\u4eec\u786e\u5b9a\u7b54\u6848 $=2$\uff0c\u968f\u4fbf\u5728 $S$ \u4e2d\u4e00\u4e2a $+1$\uff0c\u4e00\u4e2a $-1$ \u5373\u53ef\u3002\n\n\u518d\u5177\u4f53\u4e00\u70b9\uff1a\n\n\u7b2c\u4e00\u6b65\u65f6\uff0c\u6211\u4eec\u679a\u4e3e\u4e8c\u8fdb\u5236\u7684\u6bcf\u4e00\u4f4d\uff0c\u7136\u540e\u5e76\u67e5\u96c6\u5408\u5e76\u8fd9\u4e00\u4f4d\u4e3a $1$ \u7684\u5143\u7d20\u3002\n\n\u7b2c\u4e8c\u6b65\u524d\u534a\u90e8\u5206\uff0c\u6211\u4eec\u5224\u65ad\u7b2c\u4e00\u6b65\u7ed3\u675f\u540e\u7684\u5e76\u67e5\u96c6\u6570\u91cf\u3002\u82e5 $=2$\uff0c\u5219\u6709\u53ef\u80fd $+1$ \u540e\u8fde\u901a\u3002\u6211\u4eec\u5224\u65ad\u662f\u5426\u6709\u5947\u6570\u51fa\u73b0\u5728\u975e $|S|$ \u51fa\u73b0\u7684\u5e76\u67e5\u96c6\u91cc\u5373\u53ef\u3002\n\n\u7b2c\u4e8c\u6b65\u540e\u534a\u90e8\u5206\uff0c\u7531\u4e8e\u8fd9\u4e2a $S$ \u4e2d $-1$ \u7684\u5143\u7d20\u80fd\u96c6\u7ed3\u6240\u6709\u4e0d\u5728 $S$ \u4e2d\u7684\u5143\u7d20\uff0c\u6211\u4eec\u53ea\u8981\u5224\u65ad\u8fd9\u4e2a\u5143\u7d20 $-1$ \u540e\u662f\u5426\u80fd\u8fde\u901a $S$ \u4e2d\u5176\u4ed6\u5143\u7d20\u3002\u6211\u4eec\u5c06\u975e $S$ \u5143\u7d20 $\\text{bitwise or}$ \u8d77\u6765\uff0c\u4ee5\u53ca $S$ \u4e2d\uff08\u6309\u4e0b\u6807\uff09\u524d\u7f00\u4e0e\u540e\u7f00\u4e5f $\\text{or}$ \u8d77\u6765\u3002\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $S$ \u4e2d\u5143\u7d20 $-1$ \u662f\u5426\u53ef\u884c\u5c31\u53ef\u4ee5 $O(1)$ \u5224\u65ad\u4e86\uff0c\u5177\u4f53\u770b\u4ee3\u7801\u3002\n\n\u7cbe\u7b80\u4f46\u4e0d\u53ef\u89c2\u7684\u4ee3\u7801\uff1a\n\n```cpp\n//We'll be counting stars.\n#pragma GCC optimize(\"Ofast\")\n#include<bits/stdc++.h>\nusing namespace std;\n#define For(i,j,k) for(int i=(j),i##_=(k);i<=i##_;i++)\n#define Rof(i,j,k) for(int i=(j),i##_=(k);i>=i##_;i--)\n#define N 2022\nint n,a[N],ans,f[N],cnt,mx,qwq;\nint pre[N],suf[N],pos[N],tot;\ninline int low(int x){ return x&(-x); }\ninline int gf(int x){ return x==f[x]?x:f[x]=gf(f[x]); }\ninline void merge(int x,int y){\n\tx=gf(x),y=gf(y);\n\tif(x!=y) cnt--,f[x]=y;\n}\nvoid work(){\n\tint x;\n\tans=0;\n\tFor(i,1,n) if(a[i]==0) a[i]=1,ans++;\n\tcnt=n;\n\tFor(i,1,n) f[i]=i;\n\tFor(j,0,29){\n\t\tx=0;\n\t\tFor(i,1,n) if(a[i]&(1<<j)){\n\t\t\tif(x==0) x=i;\n\t\t\telse merge(x,i);\n\t\t}\n\t}\n\tif(cnt==1) return ;\n\tans++;\n\tmx=tot=qwq=0;\n\tFor(i,1,n) mx=max(mx,low(a[i]));\n\tFor(i,1,n) if(low(a[i])==mx) pos[++tot]=i; else qwq|=a[i];\n\tif(cnt==2){\n\t\tx=gf(pos[1]);\n\t\tFor(i,1,n) if(gf(i)!=x && a[i]&1){\n\t\t\ta[pos[1]]++;\n\t\t\treturn ;\n\t\t}\n\t}\n\tif(tot==1){\n\t\ta[pos[1]]--;\n\t\treturn ;\n\t}\n\tpre[0]=suf[tot+1]=0;\n\tFor(i,1,tot) pre[i]=pre[i-1]|a[pos[i]];\n\tRof(i,tot,1) suf[i]=suf[i+1]|a[pos[i]];\n\tFor(i,1,tot) if((pre[i-1]|suf[i+1])&((a[pos[i]]^mx)|qwq)){\n\t\ta[pos[i]]--;\n\t\treturn ;\n\t}\n\tans++;\n\ta[pos[2]]++;\n\ta[pos[1]]--;\n}\nint main(){\n\tint T;scanf(\"%d\",&T);\n\twhile(T--){\n\t\tscanf(\"%d\",&n);\n\t\tFor(i,1,n) scanf(\"%d\",a+i);\n\t\twork();\n\t\tprintf(\"%d\\n\",ans);\n\t\tFor(i,1,n) printf(\"%d \",a[i]); puts(\"\");\n\t}\nreturn 0;}\n```",
        "postTime": 1657173609,
        "uid": 101868,
        "name": "I_am_Accepted",
        "ccfLevel": 0,
        "title": "CF1689E ANDfinity"
    },
    {
        "content": "## CF1689E ANDfinity \u9898\u89e3\n\n[luogu](https://www.luogu.com.cn/problem/CF1689E)\n\n[\u66f4\u5dee\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/muel-imj/p/16379149.html)\n\n\u5bf9\u4e8e\u56fe\u7684\u8fde\u901a\u6027\uff0c\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\uff08\u5408\u5e76\u6210\u529f $n-1$ \u6b21\uff0c\u6216\u8005\u4e00\u4e2a\u96c6\u5408\u5927\u5c0f\u4e3a $n$\uff0c\u5219\u6574\u5f20\u56fe\u5df2\u7ecf\u8fde\u901a\uff09\u3002\n\n\u9996\u5148\u6709\u5f88\u663e\u7136\uff1a\u6240\u6709\u7684 $0$ \u90fd\u8981\u53d8\u6210 $1$\uff0c\u56e0\u4e3a $0$ \u548c\u4efb\u4f55\u6570\u6309\u4f4d\u4e0e\u90fd\u662f $0$\u3002\n\n\u6b64\u65f6\u5982\u679c\u6574\u5f20\u56fe\u5df2\u7ecf\u8fde\u901a\uff0c\u90a3\u4e48\u76f4\u63a5\u7ed3\u675f\u3002\n\n\u4e0d\u8fde\u901a\u7684\u8bdd\u5462\uff1f\u6709\u4e2a\u6027\u8d28\uff1a**\u53ea\u901a\u8fc7\u5bf9\u5076\u6570\u7684\u6700\u591a\u4e24\u6b21\u64cd\u4f5c\uff0c\u4fbf\u4e00\u5b9a\u8fbe\u6210\u6574\u5f20\u56fe\u8fde\u901a**\u3002\n\n\u90a3\u4e48\u4e3a\u4e86\u7b54\u6848\u6700\u4f18\uff0c\u5bf9\u4e8e\u4e00\u6b21\u64cd\u4f5c\uff0c\u66b4\u529b\u626b\u5c31\u53ef\u4ee5\u3002\u4e24\u6b21\u64cd\u4f5c\u7684\u6784\u9020\u65b9\u5f0f\u5982\u4e0b\u3002\n\n### \u65b9\u6cd5\u4e0e\u8bc1\u660e\uff1a\n\n\u9996\u5148\u6240\u6709\u5947\u6570\u80af\u5b9a\u5728\u540c\u4e00\u4e2a\u8fde\u901a\u5757\u91cc\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e8c\u8fdb\u5236\u5f62\u5f0f\u7684\u672b\u5c3e\u662f $1$\u3002\u8fd9\u4e2a\u8fde\u901a\u5757\u5185\u4e5f\u53ef\u80fd\u6709\u5076\u6570\u3002\n\n\u6240\u4ee5**\u9664\u5f00\u5305\u542b\u5947\u6570\u7684\u8fde\u901a\u5757\uff0c\u5176\u5b83\u96f6\u6563\u7684\u8fde\u901a\u5757\u80af\u5b9a\u5168\u662f\u5076\u6570**\u3002\n\n\u8003\u8651\u52a0\u4e00\u548c\u51cf\u4e00\u64cd\u4f5c\u5bf9\u4e00\u4e2a\u5076\u6570\u4e8c\u8fdb\u5236\u5f62\u5f0f\u7684\u5f71\u54cd\uff1a\n\n1. \u52a0\u4e00\u5219\u628a\u5076\u6570\u7684\u672b\u5c3e\u7684 $0$ \u53d8\u6210 $1$\uff1b\n2. \u51cf\u4e00\u4f1a\u628a\u5b83\u7684 `lowbit` \u53d8\u6210 $0$\uff0c\u540e\u9762\u7684\u90fd\u53d8\u6210 $1$\u3002\n\n\u53ef\u4ee5\u770b\u5230\uff0c\u52a0\u4e00**\u53ea\u4f1a\u52a0\u8fb9\u4e0d\u4f1a\u5220\u8fb9**\uff0c\u800c\u51cf\u4e00\u52a0\u7684\u8fb9\u53ef\u80fd\u66f4\u591a\u4f46\u662f**\u53ef\u80fd\u5220\u8fb9**\u3002\n\n\u6ce8\u610f\u7b2c\u4e8c\u6761\uff0c\u8d2a\u5fc3\u7684\u60f3\uff0c\u53ef\u4ee5\u628a\u6700\u5927\u7684 `lowbit` \u5bf9\u5e94\u7684\u6570\u51cf\u4e00\uff0c\u8fd9\u6837 `lowbit` \u5c0f\u4e8e\u5b83\u7684\u5176\u5b83\u6570\u90fd\u4f1a\u4e0e\u5b83\u8fde\u901a\uff0c\u5e76\u4e14\u5b83\u4eec\u90fd\u548c\u5947\u6570\u8fde\u901a\u5757\u8fde\u901a\u4e86\u3002\u6b64\u65f6\u573a\u4e0a\u6700\u591a\u4e24\u4e2a\u8fde\u901a\u5757\uff0c\u5e76\u4e14\u4e00\u4e2a\u662f\u5305\u542b\u5947\u6570\u7684\u8fde\u901a\u5757\uff0c\u53e6\u4e00\u4e2a\u662f `lowbit` \u5168\u90fd\u662f\u6700\u5927\u503c\u7684\u8fde\u901a\u5757\uff0c\u64cd\u4f5c\u7684\u6570\u548c\u6b64\u5757\u53ef\u80fd\u65ad\u7edd\u4e86\u8054\u7cfb\u3002\n\n\u540c\u65f6\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u6700\u5927\u7684 `lowbit` \u53ea\u6709\u4e00\u4e2a\uff0c\u90a3\u4e48\u5df2\u7ecf\u8fde\u901a\uff1b\u5982\u679c\u4e0d\u542b\u5947\u6570\u7684\u8fde\u901a\u5757\u53ea\u6709\u4e00\u4e2a\uff0c\u901a\u8fc7\u52a0\u4e00\u64cd\u4f5c\u5c31\u53ef\u4ee5\u8fbe\u6210\u8fde\u901a\u3002\u8fd9\u4e9b\u5728\u4e4b\u524d\u66b4\u529b\u679a\u4e3e\u4e2d\u5df2\u7ecf\u89e3\u51b3\u3002\n\n\u5982\u679c\u6b64\u65f6\u8fd8\u672a\u6574\u4e2a\u8fde\u901a\uff0c\u5269\u4e0b\u4e00\u4e2a\u65e0\u5947\u6570\u8fde\u901a\u5757\u53ea\u8981\u52a0\u4e00\uff0c\u6839\u636e\u524d\u9762\u7684\u8ba8\u8bba\uff0c\u8fd9\u6837**\u53ea\u4f1a\u52a0\u8fb9**\uff0c\u800c\u4e14\u5b83\u4f1a\u5e26\u7740\u8fd9\u4e2a\u8fde\u901a\u5757\u548c\u90a3\u4e2a\u5947\u6570\u8fde\u901a\u5757\u8fde\u901a\uff0c\u90a3\u4e48\u6b64\u65f6\u5c31\u8fbe\u6210\u4e86\u76ee\u6807\u3002\n\n\u4e00\u6b21\u64cd\u4f5c\u7684\u5df2\u7ecf\u66b4\u529b\u5b9e\u73b0\uff0c\u4e24\u6b21\u64cd\u4f5c\u7684\u8fd9\u6837\u4e00\u5b9a\u53ef\u4ee5\u6784\u9020\u51fa\u6765\u3002\n\n\u4e8e\u662f\u5c31\u8bc1\u660e\u5b8c\u4e86\u3002\n\n\u4e11\u964b\u7684\u4ee3\u7801 qwq\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define EL puts(\"Elaina\")\n#define reg register int\ntypedef long long ll;\nusing namespace std;\ninline char gc(){\n    static char buf[1<<20],*p1,*p2;\n    if(p1==p2){p1=buf,p2=buf+fread(buf,1,1<<20,stdin);if(p1==p2)return EOF;}\n    return *p1++;\n}\ninline int read(){\n    int x=0,f=1;char ch=gc();\n    while(!isdigit(ch)){if(ch=='-')f=-1;ch=gc();}\n    while(isdigit(ch))x=(x<<1)+(x<<3)+(ch^48),ch=gc();\n    return x;\n}\nconst int maxn=2e3+3;\ninline int lowbit(int x){return x&(-x);}\nint n,a[maxn],ans,cnt;\nstruct dsu{\n    int fa[maxn],rk[maxn],val[maxn];\n    inline void init(int n){\n        for(reg i=1;i<=n;++i)fa[i]=i,rk[i]=0,val[i]=a[i];\n    }\n    inline int find(int x){\n        return fa[x]^x?fa[x]=find(fa[x]):x;\n    }\n    inline bool merge(int x,int y){\n        x=find(x),y=find(y);\n        if(x==y)return 0;\n        if(rk[x]<rk[y])fa[x]=y,rk[y]=max(rk[y],rk[x]+1),val[y]|=val[x];\n        else fa[y]=x,rk[x]=max(rk[x],rk[y]+1),val[x]|=val[y];\n        return 1;\n    }\n    inline int value(int x){\n        return val[find(x)];\n    }\n}S;\ninline bool link(){\n    cnt=0,S.init(n);\n    for(reg i=1;i<=n;++i)\n        for(reg j=1;j<i;++j)\n            if(a[i]&a[j]){\n                cnt+=S.merge(i,j);\n                if(cnt==n-1)return 1;\n            }\n    return 0;\n}\ninline void overdesu(){\n    printf(\"%d\\n\",ans);\n    for(reg i=1;i<=n;++i)\n        printf(\"%d \",a[i]);\n    printf(\"\\n\");\n}\ninline void MyDearMomonts(){\n    n=read(),ans=0,cnt=0;\n    for(reg i=1;i<=n;++i){\n        a[i]=read();\n        if(!a[i])ans+=++a[i];\n    }\n    S.init(n);\n    if(link()){overdesu();return;}\n    for(reg i=1;i<=n;++i){\n        a[i]++,ans++;\n        if(link()){overdesu();return;}\n        a[i]-=2;\n        if(link()){overdesu();return;}\n        a[i]++,ans--;\n    }\n    int hib=0;\n    for(reg i=1;i<=n;++i)\n        hib=max(hib,lowbit(a[i]));\n    for(reg i=1;i<=n;++i)\n        if(lowbit(a[i])==hib){\n            a[i]--,ans++;\n            if(link()){overdesu();return;}\n            break;\n        }\n    for(reg i=1;i<=n;++i)\n        if(!(S.value(i)&1)){\n            a[i]++,ans++,overdesu();\n            return;\n        }\n}\nint main(){\n    int T=read();\n\twhile(T--)MyDearMomonts();\n    return (0^0);\n}\n```",
        "postTime": 1655284335,
        "uid": 280633,
        "name": "Muel_imj",
        "ccfLevel": 7,
        "title": "CF1689E ANDfinity \u9898\u89e3"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n$t$ \u7ec4\u6570\u636e\uff0c\u6bcf\u7ec4\u6570\u636e\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684 **\u975e\u8d1f** \u6570\u5217 $a_i$ \uff0c\u6bcf\u6b21\u64cd\u4f5c\u53ef\u4ee5\u5c06\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u503c\u589e\u52a0\u6216\u51cf\u5c11 1 \uff08\u4e0d\u53ef\u51cf\u81f3\u8d1f\u6570\uff09\u3002\u82e5 $a_i \\& a_j> 0$ \u5219 $i,j$ \u4e24\u70b9\u95f4\u8fde\u4e00\u6761\u8fb9\u3002\u6c42\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\u4f7f\u5f97 $1,2,\\ldots,n$ \u5168\u90e8\u8fde\u901a\uff0c\u5e76\u8f93\u51fa\u6700\u7ec8\u6570\u5217\u3002\n\n\u82e5\u6709\u591a\u79cd\u65b9\u6848\uff0c\u8f93\u51fa\u4efb\u610f\u4e00\u79cd\u5373\u53ef\u3002\n\n$1\\le t\\le 1000,2\\le n\\le 2000,0\\le a_i<2^{30}$\n\n## \u89e3\u9898\u601d\u8def\n\n\u82e5 $a_i=0$ \uff0c\u5219 $i$ \u4e0d\u53ef\u80fd\u4e0e\u4efb\u4f55\u70b9\u8fde\u901a\u3002\u6240\u4ee5\u6211\u4eec\u5148\u628a\u6240\u6709 0 \u53d8\u6210 1 \u3002\n\n\u5bf9\u6b63\u6570\u6570\u5217 $a_i$ \uff0c\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u53ef\u4ee5\u7528 **\u4e24\u6b65** \u64cd\u4f5c\u6784\u9020\u51fa\u4e00\u79cd\u53ef\u884c\u7684\u65b9\u6848\uff1a\u5148\u5c06 `lowbit` **\u6700\u5927** \u7684\u4e00\u4e2a $a_i$ \u51cf 1 \uff0c\u8fd9\u6837\u76f4\u63a5\u4f7f\u8be5\u70b9\u4e0e\u5176\u4ed6 `lowbit` \u66f4\u5c0f\u7684\u70b9\u7684\u8fde\u901a\u3002\u4f46\u8fd9\u6837\u53ef\u80fd\u51fa\u73b0\u4e00\u4e2a\u95ee\u9898\uff1a\u53ef\u80fd\u6709\u5176\u4ed6 `lowbit` \u76f8\u540c\u7684\u70b9\u64cd\u4f5c\u540e\u53d8\u5f97\u4e0d\u4e0e\u8be5\u70b9\u8fde\u901a\u4e86\u3002\u8fd9\u4e2a\u95ee\u9898\u5f88\u5bb9\u6613\u89e3\u51b3\uff0c\u627e\u5230\u53e6\u4e00\u4e2a `lowbit` \u76f8\u540c\u7684\u70b9\uff0c\u5c06\u5176\u589e\u52a0 1 \uff0c\u8fd9\u6837\u6062\u590d\u4e86\u8be5\u70b9\u539f\u5148\u7684\u8fde\u63a5\uff0c\u6240\u6709\u70b9\u90fd\u8fde\u901a\u4e86\u3002\n\n\u4e8e\u662f\u6211\u4eec\u89e3\u9898\u7684\u601d\u8def\u53d8\u5f97\u5f88\u7b80\u5355\uff1a\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u96f6\u6b65\uff08\u539f\u56fe\u5df2\u7ecf\u8fde\u901a\uff09\uff0c\u662f\u5426\u53ef\u4ee5\u4e00\u6b65\uff0c\u82e5\u90fd\u4e0d\u884c\u5c31\u4e24\u6b65\u3002\n\n### \u96f6\u6b65\n\n\u53ef\u7528 $O(n\\log a_i)$ \u5224\u65ad\u6570\u5217 $a_i$ \u662f\u5426\u8fde\u901a\uff1a\u679a\u4e3e\u6bcf\u4e2a\u4e8c\u8fdb\u5236\u4f4d\uff0c\u5c06\u8be5\u4f4d\u4e0a\u6709 1 \u7684\u70b9\u8fde\u6210\u4e00\u4e2a\u8fde\u901a\u5757\uff08\u6bcf\u4e2a\u70b9\u5747\u4e0e\u4e00\u4e2a\u70b9\u76f8\u8fde\uff09\uff0c\u8fd9\u6837\u6700\u591a\u6709 $O(n\\log a_i)$ \u6761\u8fb9\uff0c\u518d\u5224\u65ad\u56fe\u662f\u5426\u8fde\u901a\u3002\n\n### \u4e00\u6b65\n\n\u6709\u4e24\u79cd\u53ef\u80fd\uff0c\u589e\u52a0 1 \u6216\u51cf\u5c11 1 \u3002\n\n\u51cf\u5c11 1 \uff1a\u9274\u4e8e\u672c\u9898 $n$ \u7684\u8303\u56f4\uff0c\u53ef\u4ee5\u679a\u4e3e\u51cf\u5c11\u7684\u6570\uff0c\u518d\u5224\u65ad\u662f\u5426\u8fde\u901a\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2\\log a_i)$ \u3002\u5f53\u7136\u5e94\u8be5\u4f1a\u6709\u66f4\u4f18\u7684\u56fe\u8bba\u505a\u6cd5\u3002\n\n\u589e\u52a0 1 \uff1a\u4ee5\u4e0a\u5224\u65ad\u552f\u4e00\u8003\u8651\u4e0d\u5230\u7684\u5c31\u662f\u539f\u5148\u6709\u4e24\u4e2a\u8fde\u901a\u5757\uff0c\u4e00\u4e2a\u542b\u6709\u5947\u6570\u4e00\u4e2a\u5168\u4e3a\u5076\u6570\u3002\u53ea\u9700\u5c06\u5076\u6570\u8fde\u901a\u5757\u4e2d\u7684\u4e00\u4e2a\u6570\u589e\u52a0 1 \u5373\u53ef\u3002\n\n### \u4e24\u6b65\n\n\u65b9\u6cd5\u540c\u4e0a\u3002\n\n\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\sum n^2loga_i)$ \u3002\n\n## \u53c2\u8003\u4ee3\u7801\n\n\u8fd9\u4efd\u4ee3\u7801\u7528\u7684\u662f\u5e76\u67e5\u96c6\u5224\u65ad\u662f\u5426\u8fde\u901a\uff0c\u800c\u4e14\u6709\u70b9\u4e11\uff08\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int maxn=2010;\nint lowbit(int x){return x&(-x);}\nint T,n,a[maxn],ans,b[maxn],f[maxn],lst,maxx,t,cur,q[40];\nbool tf0,tf1;\nint findp(int x){return f[x]?f[x]=findp(f[x]):x;}\nvoid merge(int x,int y){x=findp(x);y=findp(y);if(x!=y)f[x]=y;}\nint main()\n{\n\tscanf(\"%d\",&T);\n\twhile(T--)\n\t{\n\t\tscanf(\"%d\",&n);ans=0;tf0=tf1=false;\n\t\tfor(int i=1;i<=n;i++){scanf(\"%d\",a+i);if(!a[i])a[i]=1,ans++;{if(a[i]&1)tf1=true;else tf0=true;}}\n\t\tfor(int i=1;i<=n;i++)f[i]=0;\n\t\tfor(int i=1;i<=30;i++)//2^(i-1)\n\t\t{\n\t\t\tlst=0;\n\t\t\tfor(int j=1;j<=n;j++)if(a[j]&(1<<(i-1))){if(lst)merge(lst,j);else lst=j;}\n\t\t}\n\t\tint cnt=0;\n\t\tfor(int i=1;i<=n;i++)if(!f[i])cnt++;\n\t\tif(cnt==1){printf(\"%d\\n\",ans);for(int i=1;i<=n;i++)printf(\"%d \",a[i]);printf(\"\\n\");continue;}\n\t\tif(cnt==2){if(tf0&&tf1)\n\t\t{\n\t\t\tprintf(\"%d\\n\",ans+1);\n\t\t\tint mq=0;for(int i=1;i<=n;i++)if(a[i]&1)mq=i;\n\t\t\tfor(int i=1;i<=n;i++)if(findp(mq)!=findp(i)){a[i]++;break;}\n\t\t\tfor(int i=1;i<=n;i++)printf(\"%d \",a[i]);printf(\"\\n\");\n\t\t\tcontinue;\n\t\t}}\n\t\tbool tf=false;\n\t\tfor(int p=1;p<=n;p++)\n\t\t{\n\t\t\ta[p]--;\n\t\t\tfor(int i=1;i<=n;i++)f[i]=0;\n\t\t\tfor(int i=1;i<=30;i++)//2^(i-1)\n\t\t\t{\n\t\t\t\tlst=0;\n\t\t\t\tfor(int j=1;j<=n;j++)if(a[j]&(1<<(i-1))){if(lst)merge(lst,j);else lst=j;}\n\t\t\t}\n\t\t\tint cnt=0;\n\t\t\tfor(int i=1;i<=n;i++)if(!f[i])cnt++;\n\t\t\tif(cnt==1){tf=true;break;}\n\t\t\ta[p]++;\n\t\t}\n\t\tif(tf){printf(\"%d\\n\",ans+1);for(int i=1;i<=n;i++)printf(\"%d \",a[i]);printf(\"\\n\");continue;}\n\t\tmaxx=1;t=lowbit(a[1]);\n\t\tfor(int i=2;i<=n;i++)if(lowbit(a[i])>lowbit(a[maxx]))maxx=i,t=lowbit(a[i]);\n\t\ta[maxx]--;\n\t\tfor(int i=1;i<=n;i++)f[i]=0;\n\t\tfor(int i=1;i<=30;i++)//2^(i-1)\n\t\t{\n\t\t\tlst=0;\n\t\t\tfor(int j=1;j<=n;j++)if(a[j]&(1<<(i-1))){if(lst)merge(lst,j);else lst=j;}\n\t\t}\n\t\tcnt=0;\n\t\tfor(int i=1;i<=n;i++)if(!f[i])cnt++;\n\t\tfor(int i=1;i<=n;i++)if(i!=maxx&&lowbit(a[i])==t){a[i]++;break;}\n\t\tprintf(\"%d\\n\",ans+2);for(int i=1;i<=n;i++)printf(\"%d \",a[i]);printf(\"\\n\");continue;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1655214688,
        "uid": 43486,
        "name": "hsfzLZH1",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1689E \u3010ANDfinity\u3011"
    },
    {
        "content": "\u9996\u5148\u5f88\u8822\u7684\u662f\u8981\u5148\u5c06\u6240\u6709\u7684 $0$ \u53d8\u4e3a $1$\u3002\n\n\u7136\u540e\u6211\u4eec\u5224\u65ad\u4e00\u4e0b\u539f\u56fe\u662f\u5426\u8fde\u901a\u3002\n\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5c06\u6bcf\u4e2a $a_i$ \u8fdb\u884c $+1 / -1$\uff0c\u5224\u65ad\u56fe\u662f\u5426\u8fde\u901a\u3002\n\n\u5982\u679c\u56fe\u8fd8\u662f\u4e0d\u8fde\u901a\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f $2$\uff0c\u8bc1\u660e\u5982\u4e0b\uff1a\n\n\u8003\u8651\u539f\u56fe\u7684\u8fde\u901a\u5757\uff0c\u6240\u6709\u5947\u6570\u5fc5\u5b9a\u5728\u4e00\u4e2a\u8fde\u901a\u5757\u91cc\uff0c\u5269\u4e0b\u7684\u8fde\u901a\u5757\u4e2d\u4e00\u5b9a\u5168\u90fd\u662f\u5076\u6570\u3002\n\n\u6211\u4eec\u628a\u4e00\u4e2a\u5076\u6570\u52a0 $1$\uff0c\u5c06\u5b83\u7684\u6700\u540e\u4e00\u4f4d\u53d8\u4e3a $1$\uff0c\u800c\u628a\u4e00\u4e2a\u5076\u6570\u51cf $1$ \u5219\u8ba9\u5b83\u7684 $\\text{lowbit}$ \u4f4d\u53d8\u4e3a $0$\uff0c\u8fd9\u4e4b\u540e\u7684\u4f4d\u90fd\u53d8\u4e3a $1$\u3002\n\n\u6211\u4eec\u9009\u51fa $\\text{lowbit}$ \u6700\u5927\u7684\u90a3\u4e00\u4f4d\u51cf $1$\uff0c\u5b9e\u9645\u4e0a\u5c31\u8ba9\u6240\u6709\u5947\u6570\u548c $\\text{lowbit}$ \u6bd4\u5b83\u5c0f\u7684\u6570\u8fde\u901a\u4e86\uff0c\u4e0d\u96be\u53d1\u73b0\u8fd9\u6837\u4e00\u5b9a\u662f\u6700\u4f18\u7684\u3002\n\n\u5982\u679c\u628a $\\text{lowbit}$ \u6700\u5927\u7684\u8fd9\u4e2a\u6570\u51cf $1$ \u540e\u56fe\u4ecd\u7136\u4e0d\u8fde\u901a\uff0c\u8bf4\u660e\u6709\u591a\u4e2a $\\text{lowbit}$ \u76f8\u540c\u7684\u6570\uff0c\u8fd9\u4e9b\u6570\u5fc5\u7136\u5728\u4e00\u4e2a\u8fde\u901a\u5757\u91cc\uff0c\u4efb\u53d6\u4e00\u4e2a\u6570\u52a0 $1$ \u5c31\u80fd\u8ba9\u8fd9\u4e9b\u6570\u548c\u5947\u6570\u8fde\u901a\u3002\n\n\u6700\u540e\u7684\u95ee\u9898\u5c31\u662f\u5982\u4f55\u5224\u65ad\u56fe\u662f\u5426\u8fde\u901a\uff0c\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u505a\u6cd5\u662f\u76f4\u63a5\u679a\u4e3e\u70b9\u5bf9\uff0c\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u8fde\u901a\u6027\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^3 \\log n)$\uff08\u53ea\u6709\u8def\u5f84\u538b\u7f29\uff09\u3002\u770b\u4f3c\u8fc7\u4e0d\u4e86\uff0c\u6ca1\u60f3\u5230 CF \u795e\u673a\u76f4\u63a5\u8fc7\u4e86...",
        "postTime": 1655822419,
        "uid": 124152,
        "name": "AmamiyaYuuko",
        "ccfLevel": 0,
        "title": "CF1689E ANDfinity"
    }
]