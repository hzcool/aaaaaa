[
    {
        "content": "### \u4fee\u6539\u65e5\u5fd7\n\n$2022/12/16\\text{ }\\text{ }22:42$\uff1a\u4fee\u6539\u4e86\u90e8\u5206\u53d8\u91cf\u7684\u540d\u79f0\u3002\n\n### \u601d\u8def\n\n**\u66b4\u529b+\u5e76\u67e5\u96c6\uff0c\u52a0\u4e00\u70b9\u70b9\u7684\u4f18\u5316\u5373\u53ef\u3002**\n\n\u8fd9\u9898\u7684\u6709\u70b9\u66b4\u529b\u7684\u6837\u5b50\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9 $i$\uff0c\u521d\u59cb $f_i=i$\uff08\u5e38\u89c4\u7684\u5e76\u67e5\u96c6\u521d\u503c\uff09\u3002\u552f\u4e00\u4e0d\u540c\u7684\u662f\uff0c\u6bcf\u4e2a\u4ee3\u8868\u5143\u8fd8\u8981\u8bb0\u4e24\u4e2a\u53d8\u91cf $X_i,Y_i$\uff0c\u5176\u4e2d $X_i$ \u8868\u793a\u4ee5 $i$ \u4e3a\u4ee3\u8868\u5143\u7684\u8fde\u901a\u5757\u7684\u8282\u70b9\u7f16\u53f7\u7684\u6700\u5927\u503c\uff0c$Y_i$ \u8868\u793a\u4ee5 $i$ \u4e3a\u4ee3\u8868\u5143\u7684\u8fde\u901a\u5757\u7684\u8282\u70b9\u7f16\u53f7\u7684\u6700\u5c0f\u503c\u3002\n\n\u8f93\u5165\u4e00\u6761\u8fb9\u5c31\u5408\u5e76\u4e00\u6b21\u8fde\u901a\u5757\n\n```\nvoid H(int k1,int k2){//\u5408\u5e76\u64cd\u4f5c\n\tint x=Find(k1),y=Find(k2);\n\tfa[x]=y;\n\tmn[y]=min(mn[x],mn[y]);\n\tmx[y]=max(mx[x],mx[y]);\n}\n```\n\n**\u63a5\u4e0b\u6765\u5c31\u662f\u66b4\u529b+\u4f18\u5316**\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9 $i$\uff0c\u67e5\u627e\u4ed6\u7684\u4ee3\u8868\u5143 $p$\uff0c\u66b4\u529b\u641c\u4e00\u904d $Y_p\\sim X_p$\uff0c\u67e5\u627e\u5176\uff08\u6307\u7684\u662f\u7f16\u53f7\u4e3a $Y_p\\sim X_p$ \u7684\u8282\u70b9\uff09\u7684\u4ee3\u8868\u5143\u662f\u4e0d\u662f $p$\uff0c\u5982\u679c\u4e0d\u662f\uff0c\u5408\u5e76\u8fd9\u4e24\u4e2a\u5e76\u67e5\u96c6\u3002\n\n\u8fd9\u91cc\u6709\u4e2a\u5c0f\u7ec6\u8282\uff1a\u5c31\u662f\u5408\u5e76\u7684\u5e76\u67e5\u96c6\u7684\u4ee3\u8868\u5143\u5fc5\u987b\u662f $p$\u3002\n\n#### \u5c31\u8fd9\u4e48\u66b4\u529b\uff1f\u8fd9\u9898\u8fd9\u4e48\u6c34\uff1f\n\n\u5176\u5b9e\u5e76\u4e0d\u662f\u8fd9\u6837\u7684\uff0c\u7167\u8fd9\u6837\u66b4\u529b\u80af\u5b9a\u4f1a\u8d85\u65f6\u3002\n\n#### \u4f18\u5316\uff1f\n\n\u67e5\u627e\u5230\u7684\u4ee3\u8868\u5143 $p$ \u4ee5\u540e\uff0c\u770b\u770b\u4e4b\u524d\u6709\u6ca1\u6709\u8bbf\u95ee\u5230\u8fd9\u4e2a\u7b80\u5355 $p$\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u6807\u8bb0\u4e3a\u8bbf\u95ee\uff0c\u53bb\u66b4\u529b\u641c\u3002\n\n#### \u590d\u6742\u5ea6\uff1a\n\n\u7384\u5b66\u590d\u6742\u5ea6\uff0c\u4f46\u662f\u53ef\u4ee5\u8fc7\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,num,si[200010],ans;\nint fa[200010],mx[200010],mn[200010];\nbool v[200010];\nint Find(int k){\n\tif(fa[k]==k) return k;\n\treturn fa[k]=Find(fa[k]);\n}\nvoid H(int k1,int k2){\n\tint x=Find(k1),y=Find(k2);\n\tfa[x]=y;\n\tmn[y]=min(mn[x],mn[y]);\n\tmx[y]=max(mx[x],mx[y]);\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t\tfa[i]=mx[i]=mn[i]=i;\n\tfor(int i=1;i<=m;i++){\n\t\tint x1,x2;\n\t\tscanf(\"%d%d\",&x1,&x2);\n\t\tH(x1,x2);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tint f=Find(i);\n\t\tif(v[f]) continue;\n\t\tv[f]=1;\n\t\tfor(int j=mn[f]+1;j<mx[f];j++){\n\t\t\tint fj=Find(j);\n\t\t\tif(fj!=f) H(fj,f),ans++;\n\t\t}\n\t}\n\treturn !printf(\"%d\",ans);\n}\n```\n",
        "postTime": 1669514547,
        "uid": 528325,
        "name": "fengxiaoyi",
        "ccfLevel": 0,
        "title": "CF1253D\u9898\u89e3"
    },
    {
        "content": "\u5bf9\u6bcf\u4e2a\u70b9\uff0c\u8ba1\u7b97\u51fa\u5176\u6240\u5728\u8fde\u901a\u5206\u91cf\u7684\u6700\u5927\u7684\u70b9\u3002\u7136\u540e\u4ece\u5c0f\u5230\u5927\u904d\u5386\u6bcf\u4e2a\u70b9\uff0c\u540c\u65f6\u7ef4\u62a4\u5f53\u524d\u80fd\u8bbf\u95ee\u5230\u7684\u6700\u5927\u7684\u70b9 $max$\uff0c\u82e5\u5f53\u524d\u70b9\u6240\u5728\u8fde\u901a\u5206\u91cf\u7684\u6700\u5927\u7684\u70b9\u4e0d\u7b49\u4e8e $max$\uff0c\u5219\u9700\u8981\u4ece\u5f53\u524d\u8fde\u901a\u5206\u91cf\u8fde\u4e00\u6761\u8fb9\u5230\u6700\u5927\u7684\u70b9\u6240\u5728\u7684\u8fde\u901a\u5206\u91cf\u3002\n\n\u5e76\u67e5\u96c6\u53ef\u4ee5\u5b8c\u6210\u4e0a\u8ff0\u64cd\u4f5c\uff0c\u6ce8\u610f\u5728\u5408\u5e76\u7684\u65f6\u5019\uff0c\u603b\u662f\u628a\u5c0f\u7684\u5408\u5e76\u5230\u5927\u7684\u4e0a\u3002\n\n\nAC \u4ee3\u7801\uff08Golang\uff09\uff1a\n\n```go\npackage main\n\nimport (\n\t\"bufio\"\n\t. \"fmt\"\n\t\"os\"\n)\n\nfunc main() {\n\tin := bufio.NewReader(os.Stdin)\n\tvar n, m, v, w, ans int\n\tFscan(in, &n, &m)\n\n\t// \u521d\u59cb\u5316\u5e76\u67e5\u96c6\n\tfa := make([]int, n+1)\n\tfor i := range fa {\n\t\tfa[i] = i\n\t}\n\tvar find func(int) int\n\tfind = func(x int) int {\n\t\tif fa[x] != x {\n\t\t\tfa[x] = find(fa[x])\n\t\t}\n\t\treturn fa[x]\n\t}\n\tmerge := func(from, to int) int {\n\t\t// \u628a\u5c0f\u7684\u5408\u5e76\u5230\u5927\u7684\u4e0a\uff0c\u5e76\u8fd4\u56de\u5927\u7684\n\t\tff, ft := find(from), find(to)\n\t\tif ff > ft {\n\t\t\tff, ft = ft, ff\n\t\t}\n\t\tfa[ff] = ft\n\t\treturn ft\n\t}\n\n\tfor ; m > 0; m-- {\n\t\tFscan(in, &v, &w)\n\t\tmerge(v, w)\n\t}\n\tmax := -1\n\tfor i := range fa {\n\t\tif i > max {\n\t\t\tmax = find(i)\n\t\t} else if find(i) != max {\n\t\t\tmax = merge(i, max)\n\t\t\tans++\n\t\t}\n\t}\n\tPrint(ans)\n}\n```\n",
        "postTime": 1592483620,
        "uid": 266651,
        "name": "\u7075\u8336\u5c71\u827e\u5e9c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1253D \u3010Harmonious Graph\u3011"
    },
    {
        "content": "# \u9898\u76ee\n#### n\u4e2a\u70b9\uff08\u7f16\u53f71-n\uff09\n\n#### m\u6761\u8fb9\n\n#### \u65e0\u81ea\u73af\uff0c\u65e0\u91cd\u8fb9\n\n#### \u5bf9\u4e8e\u7ed9\u51fa\u7684\u56fe\u4e2d\uff0c**\u4efb\u610f**\u53ef\u8fbe\u7684\u4e24\u70b9\uff081<=u<=v<=n) \n\n#### \u5982\u679cu\u4e5f\u5230{u+1\uff0cu+2\uff0c......\uff0cv-1}\u8fd9\u4e9b\u70b9\n\n####  \u90a3\u4e48\u79f0\u8fd9\u4e2a\u56fe\u4e3a \u548c\u8c10\u56fe \u3002\n\n#### \u539f\u56fe\u53ef\u80fd\u4e0d\u662f\u548c\u8c10\u56fe\uff0c\u6c42\u8981\u4f7f\u5b83\u53d8\u6210\u548c\u8c10\u56fe\u6700\u5c11\u8981\u52a0\u5165\u7684\u8fb9\u7684\u6761\u6570\u3002\n\n\n# \u601d\u8def\n#### \u901a\u8fc7\u628a\u7b2c\u4e00\u4e2a\u6837\u4f8b\u753b\u51fa\u6765\u53ef\u4ee5\u5f88\u770b\u51fa\uff0c\u539f\u56fe\u53ef\u4ee5\u5206\u62103\u4e2a\u8fde\u901a\u5757\u3002\n\n#### \u65e2\u7136\u662f\u8054\u901a\u5757\uff0c\u90a3\u4e48\u662f\u4e0d\u662f\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u53bb\u505a\u554a\uff1f\n\n#### \u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\u4e2d\uff0c\u5982\u679c\u6700\u5c0f\u503c\u5230\u6700\u5927\u503c\u4e4b\u95f4\u4e0d\u8fde\u7eed\uff0c\n\n#### \u90a3\u4e48\u5c31\u9700\u8981\u65b0\u52a0\u5165\u7f3a\u5c11\u7684\u90a3\u4e2a\u70b9\uff08\u6216\u8005\u662f\u53e6\u5916\u4e00\u4e2a\u8fde\u901a\u5757\uff09\u3002\n\n#### \u8fd9\u4e48\u4e00\u60f3\u5e76\u67e5\u96c6\u8fd8\u633a\u7b80\u5355\u7684\u5bf9\u4e0d\u5bf9\u3002\n\n#### ~~\u5148\u5904\u7406\u6bcf\u4e2a\u8fde\u901a\u5757\u7684\u6700\u5927\u503c\uff0c\u6700\u5c0f\u503c\uff0c\u7136\u540efor(1,n)~~\uff0c\n\n#### ~~\u5224\u65adi\u70b9\u6240\u5728\u7684\u8fde\u901a\u5757\u662f\u5426\u548c\u8c10~~\uff0c\n\n#### ~~\u4e0d\u548c\u8c10\u7684\u8bdd\uff0c\u4ece\u5757\u7684\u6700\u5c0f\u503c-\u6700\u5927\u503c\u4e4b\u95f4\u904d\u5386\u627e\u51fa\u5e94\u8be5\u52a0\u5165\u7684\u70b9\uff08\u6216\u8005\u8fde\u901a\u5757\uff09~~\u3002\n\n#### \u5f00\u5f00\u5fc3\u5fc3\u7684\u6572\u5b8c\uff0c\u6837\u4f8b\u90fd\u8fc7\u4e86\uff0c\u4ea4\uff0cWA\uff0c\u81ea\u95ed\uff0c\u6539\uff01\n\n#### \u95ee\u9898\u51fa\u5728\u6bcf\u6b21\u65b0\u52a0\u5165\u8fde\u901a\u5757\u65f6\uff0c\n\n#### \u5f53\u524d\u8fde\u901a\u5757\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u90fd\u53ef\u80fd\u4f1a\u53d1\u751f\u6539\u53d8\u3002\n\n#### \u53e6\u5916\uff0c\u548c\u8c10\u4e86\u7684\u8fde\u901a\u5757\u8981\u6807\u8bb0\uff0c\u4e0d\u8981\u518d\u627e\u5757\u4e2d\u7684\u70b9\u4e86\uff0c\u5426\u5219\u4f1aT\n\n```cpp\n//#include <bits/stdc++.h>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nconst int maxn=2e5+5;\nconst int inf=0x7fffffff/2;\nint n,m;\nint fa[maxn];\nint vis[maxn];\nstruct edge// point set\n{\n    int u;\n    int v;\n    int w;\n}e[maxn];\nstruct ex// to record every collection's extreme\n{\n    int mi;\n    int mx;\n    int sum;\n}ex[maxn];\nint father(int x)//find the collection's boss\n{\n    if(x!=fa[x])\n        fa[x]=father(fa[x]);\n    return fa[x];\n}\nvoid join(int x,int y)//D ans S,join them.And update every collection's extreme\n{\n    ex[father(y)].mi=min(ex[father(y)].mi,ex[father(x)].mi);\n    ex[father(y)].mx=max(ex[father(y)].mx,ex[father(x)].mx);\n    ex[father(y)].sum+=ex[father(x)].sum;\n    fa[father(x)]=father(y);\n}\nint judge_node(int x)\n{\n    x=father(x);\n    int mi=ex[x].mi;\n    int mx=ex[x].mx;\n    int sum=ex[x].sum;\n    if(mi==-inf)// the point of haven't form edge\n        return 1;\n    mi=((mi-1)*mi)/2;\n    mx=((mx+1)*mx)/2;\n    if((mx-mi)!=sum)\n        return 1;\n    else return 0;\n}\nvoid init(int u,int v)// to calculate max and min ,init it at first\n{\n    ex[u].sum=u;\n    ex[v].sum=v;\n    ex[u].mx=u;\n    ex[u].mi=u;\n    ex[v].mx=v;\n    ex[v].mi=v;\n}\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)\n    {\n        fa[i]=i;\n        ex[i].mi=inf;\n        ex[i].mx=-inf;\n        ex[i].sum=0;\n    }\n    for(int i=1;i<=m;i++)\n    {\n        cin>>e[i].u>>e[i].v;\n        init(e[i].u,e[i].v);\n    }\n    for(int i=1;i<=m;i++)\n    {\n        if(father(e[i].u)!=father(e[i].v))\n        {\n            join(e[i].u,e[i].v);\n        }\n    }\n    int ans=0;\n    int mxx=-inf,last;\n    for(int i=1;i<=n;i++)\n    {\n        if(judge_node(i)&&vis[father(i)]==0)\n        {\n            int l=ex[father(i)].mi;\n            int r=ex[father(i)].mx;\n            for(int j=l;j<r;j++)\n            {\n                if(father(j)!=father(i))\n                {\n                    join(i,j);\n                    ans++;\n                    last=j;\n                }\n                l=ex[father(i)].mi;\n                r=ex[father(i)].mx;\n            }\n            vis[father(last)]=1;\n        }\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n\n```\n//\u6ca1\u6709\u5f69\u86cb\n",
        "postTime": 1576577393,
        "uid": 147268,
        "name": "\u674e\u4f1f\u4e1a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1253D \u3010Harmonious Graph\u3011"
    }
]