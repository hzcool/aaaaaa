[
    {
        "content": "### \u9898\u610f\n\n\u4f60\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u4efb\u52a1\u5217\u8868\uff0c\u6709 $q$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u5f62\u5982\u4ee5\u4e0b\u56db\u79cd\uff1a\n\n- `set a x`\uff1a\u8bbe\u7f6e\u4efb\u52a1 $a$ \u7684\u4f18\u5148\u7ea7\u4e3a $x$\uff0c\u5982\u679c\u4efb\u52a1\u5217\u8868\u4e2d\u6ca1\u6709 $a$ \u5219\u52a0\u8fdb\u6765\u3002\n\n- `remove a`\uff1a\u5c06\u4efb\u52a1 $a$ \u79fb\u9664\u5217\u8868\u3002\n\n- `query a`\uff1a\u6c42\u51fa\u6709\u591a\u5c11\u4e2a\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u6bd4 $a$ \u7684\u5c0f\uff0c\u5982\u679c $a$ \u4e0d\u5728\u5217\u8868\u91cc\u8f93\u51fa $-1$\u3002\n\n- `undo d`\uff1a\u64a4\u9500\u8fd9\u6b21\u64cd\u4f5c\u4e4b\u524d\u7684 $d$ \u4e2a\u64cd\u4f5c\u3002\n\n**\u6ce8\u610f\u64a4\u9500\u64cd\u4f5c\u53ef\u4ee5\u64a4\u9500\u4e4b\u524d\u7684\u64a4\u9500\u64cd\u4f5c**\u3002\n\n$\\texttt{Data Range:}1\\leq q\\leq 10^5,1\\leq x\\leq 10^9,1\\leq\\vert a\\vert\\leq 15$\n\n### \u9898\u89e3\n\n[\u4e0d\u4e00\u5b9a\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/Karry5307/p/13586246.html)\n\n\u6211\u53c8\u662f\u4e00\u4e2a\u4e0d\u770b\u6570\u636e\u8303\u56f4\u7684\u5c51 >_<\n\n~~\u4e3a\u4ec0\u4e48\u8fd9\u573a\u7684 D \u6bd4 E \u8fd8\u96be\u5199\u554a~~\n\n\u597d\u4e45\u6ca1\u5199\u53ef\u6301\u4e45\u5316\u6570\u636e\u7ed3\u6784\u4e86\uff0c\u6765\u5199\u4e2a\u9898\u89e3\u590d\u4e60\u4e00\u4e0b\u3002\n\n\u4e00\u770b\u5230\u4ec0\u4e48\u64a4\u9500\u64cd\u4f5c\u4f30\u8ba1\u8ddf\u53ef\u6301\u4e45\u5316\u6570\u636e\u7ed3\u6784\u5206\u4e0d\u5f00\u4e86\u3002\n\n\u770b\u5230 `query` \u64cd\u4f5c\u5176\u5b9e\u53ef\u4ee5\u5f00\u4e00\u68f5\u53ef\u6301\u4e45\u5316\u6743\u503c\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u4e00\u4e0b\uff0c\u7136\u540e `set` \u7684\u8bdd\u9700\u8981\u4e00\u4e2a\u53ef\u6301\u4e45\u5316\u6570\u7ec4\u6765\u7ef4\u62a4\u6bcf\u4e2a\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u3002\n\n\u7136\u540e\u6309\u7167\u9898\u610f\u6a21\u62df\u5c31\u5f97\u4e86\uff0c\u56e0\u4e3a\u8fd9\u9898\u7684 $x\\leq 10^9$ \u6240\u4ee5\u4e0d\u5199\u7ed3\u6784\u4f53\u5f0f\u7ebf\u6bb5\u6811\u53ef\u4ee5\u514d\u53bb\u5efa\u6811\u7684\u7a7a\u95f4\u5f00\u9500\u3002\n\n\u6ce8\u610f\u4e00\u4e0b\u7a7a\u95f4\u95ee\u9898\u5373\u53ef\u901a\u8fc7\uff0c\u8fd9\u91cc\u53ef\u80fd\u8981\u6839\u636e\u6570\u636e\u8303\u56f4\u4f30\u7b97\u4e00\u4e0b\u7a7a\u95f4\u5f00\u9500\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef int ll;\ntypedef long long int li;\nconst ll MAXN=2e5+51; \nmap<string,ll>mp;\nll n,totn,totid,x,id,p,limit=1e9;\nstring op,str;\nll rt[MAXN<<2],rt2[MAXN<<2],sm[MAXN<<6],ls[MAXN<<6],rs[MAXN<<6];\ninline ll read()\n{\n    register ll num=0,neg=1;\n    register char ch=getchar();\n    while(!isdigit(ch)&&ch!='-')\n    {\n        ch=getchar();\n    }\n    if(ch=='-')\n    {\n        neg=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch))\n    {\n        num=(num<<3)+(num<<1)+(ch-'0');\n        ch=getchar();\n    }\n    return num*neg;\n}\ninline ll getId(string s)\n{\n\treturn mp.find(s)==mp.end()?mp[s]=++totid:mp[s];\n}\ninline void update(ll node)\n{\n\tsm[node]=sm[ls[node]]+sm[rs[node]];\n}\ninline ll add(ll l,ll r,ll pos,ll val,ll node)\n{\n\tll cur=++totn;\n\tls[cur]=ls[node],rs[cur]=rs[node];\n\tif(l==r)\n\t{\n\t\treturn sm[cur]=sm[node]+val,cur;\n\t}\n\tll mid=(l+r)>>1;\n\tif(pos<=mid)\n\t{\n\t\tls[cur]=add(l,mid,pos,val,ls[node]);\n\t}\n\telse\n\t{\n\t\trs[cur]=add(mid+1,r,pos,val,rs[node]);\n\t}\n\treturn update(cur),cur;\n}\ninline ll query(ll l,ll r,ll ql,ll qr,ll node)\n{\n\tif(ql<=l&&qr>=r)\n\t{\n\t\treturn sm[node];\n\t}\n\tll mid=(l+r)>>1,res=0;\n\tres+=ql<=mid?query(l,mid,ql,qr,ls[node]):0;\n\tres+=qr>mid?query(mid+1,r,ql,qr,rs[node]):0;\n\treturn res;\n}\nint main()\n{\n\tn=read();\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tcin>>op,rt[i]=rt[i-1],rt2[i]=rt2[i-1];\n\t\tif(op==\"set\")\n\t\t{\n\t\t\tcin>>str,x=read(),id=getId(str),p=query(1,limit,id,id,rt2[i]);\n\t\t\tp?rt[i]=add(1,limit,p,-1,rt[i]):1;\t\n\t\t\trt[i]=add(1,limit,x,1,rt[i]),rt2[i]=add(1,limit,id,x-p,rt2[i]);\n\t\t}\n\t\tif(op==\"remove\")\n\t\t{\n\t\t\tcin>>str,id=getId(str),p=query(1,limit,id,id,rt2[i]);\n\t\t\tp?rt[i]=add(1,limit,p,-1,rt[i]):1,rt2[i]=add(1,limit,id,-p,rt2[i]);\n\t\t}\n\t\tif(op==\"undo\")\n\t\t{\n\t\t\tx=read(),rt[i]=rt[i-x-1],rt2[i]=rt2[i-x-1];\n\t\t}\n\t\tif(op==\"query\")\n\t\t{\n\t\t\tcin>>str,id=getId(str),p=query(1,limit,id,id,rt2[i]);\n\t\t\tcout<<(p==0||p==1?p-1:query(1,limit,1,p-1,rt[i]))<<endl;\n\t\t}\n\t}\n}\n```",
        "postTime": 1598785228,
        "uid": 60990,
        "name": "Karry5307",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF916D \u3010Jamie and To-do List\u3011"
    },
    {
        "content": "u1s1\u8fd9\u9898\u633a\u677f\u5b50\u7684\n\n\u9996\u5148\uff0c\u8fd9\u9898\u8981\u56de\u5230\u4e4b\u524d\u7684\u72b6\u6001\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u8981\u7528\u53ef\u6301\u4e45\u5316\u6570\u636e\u7ed3\u6784\uff0c\u7136\u540e\u518d\u770b\u5230\u8fd9\u4e2a\u9898\u8981\u7ef4\u62a4\u63d2\u5165\u5220\u9664\u4ee5\u53ca $rank$\uff0c\u6240\u4ee5\u8981\u7528\u5e73\u8861\u6811\u3002\u4f46\u662f\u5f88\u660e\u663e\u53ef\u6301\u4e45\u5316\u5e73\u8861\u6811\u4e0d\u592a\u53ef\u5199\uff0c\u4e8e\u662f\u6211\u4eec\u8003\u8651\u53ef\u6301\u4e45\u5316\u503c\u57df\u7ebf\u6bb5\u6811\u3002\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u6ca1\u6709\u529e\u6cd5\u8bb0\u5f55\u4e00\u4e2a $a_i$ \u7684\u5927\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u5f00\u4e24\u68f5\u4e3b\u5e2d\u6811\uff0c\u4e00\u68f5\u8bb0\u5f55\u5f53\u524d\u70b9\u7684\u7d27\u6025\u5ea6\uff0c\u53e6\u4e00\u68f5\u7ef4\u62a4 $rank$\u3002\n\n\u91cd\u70b9\u8bf4\u4e00\u4e0b\u7ef4\u62a4 $rank$ \u7684\u90a3\u68f5\uff0c\u5047\u8bbe\u4e00\u4e2a\u8282\u70b9\u5bf9\u5e94\u7684 $[L,R]$\uff0c\u90a3\u8fd9\u4e2a\u8282\u70b9\u8282\u70b9\u7ef4\u62a4\u7684\u662f\u7d27\u6025\u5ea6\u5728 $[L,R]$ \u4e4b\u95f4\u7684\u70b9\u7684\u4e2a\u6570\u3002\u7136\u540e\u67e5\u627e\u7684\u65f6\u5019\u76f4\u63a5\u67e5\u627e $<$ \u5f53\u524d\u70b9\u7684\u7d27\u6025\u5ea6\u7684\u70b9\u7684\u4e2a\u6570\u5373\u53ef\u3002\n\n\u6ce8\u610f\uff1a\n\n1.\u5f53\u5f53\u524d\u70b9\u7d27\u6025\u5ea6\u4e3a $1$ \u7684\u65f6\u5019\uff0c\u4f60\u5982\u679c\u76f4\u63a5\u51cf $1$ \u5e76 $query$ \u7684\u8bdd\uff0c\u4f1a\u76f4\u63a5\u6b7b\u9012\u5f52\uff0c\u6240\u4ee5\u8981\u7279\u5224\u4e00\u4e0b\u3002\n\n2.\u7a7a\u95f4\u4e00\u5b9a\u8981\u5f00\u591f\uff0c\u56e0\u4e3a\u6709\u4e24\u68f5\u6811\u3002\u5efa\u8bae\u5f00\u5230 $\\text{NR<<7}$\u3002\n\n\u7136\u540e\u5c31\u6ca1\u6709\u5565\u4e86\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```\n#include<cstdio>\n#include<cstring>\n#include<iostream> \n#include<cmath>\n#include<algorithm>\n#include<queue>\n#include<map>\nusing namespace std;\nconst int NR=1e5+10;\nconst int MAX=1e9;\nint n;\nint tot,cnt;\nint root1[NR],root2[NR];\nmap<string,int>mp;\nstruct Nd{int l,r,sum;}tr[NR<<7];\nvoid update(int rt){tr[rt].sum=tr[tr[rt].l].sum+tr[tr[rt].r].sum;}\nvoid change(int &rt,int l,int r,int x,int val)\n{\n\tint la=rt;rt=++tot;tr[rt]=tr[la];\n\tif(l==r){tr[rt].sum+=val;return;}\n\tint mid=(l+r>>1);\n\tif(x<=mid)change(tr[rt].l,l,mid,x,val);\n\telse change(tr[rt].r,mid+1,r,x,val);\n\tupdate(rt);\n}\nint query(int rt,int l,int r,int L,int R)\n{\n\tif(l==L&&r==R)return tr[rt].sum;int mid=(l+r>>1);\n\tif(R<=mid)return query(tr[rt].l,l,mid,L,R);\n\telse if(L>mid)return query(tr[rt].r,mid+1,r,L,R);\n\telse return query(tr[rt].l,l,mid,L,mid)+query(tr[rt].r,mid+1,r,mid+1,R);\n}\nint getnum(string str){return mp[str]?mp[str]:mp[str]=++cnt;}\nint read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}\n\treturn x*f;\n}\nint main()\n{\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\"1.out\",\"w\",stdout);\n\tn=read();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tstring op;cin>>op;\n\t\troot1[i]=root1[i-1],root2[i]=root2[i-1];\n\t\tif(op==\"set\")\n\t\t{\n\t\t\tstring str;cin>>str;int x=getnum(str),y=read();\n\t\t\tint p=query(root1[i],1,MAX,x,x);\n\t\t\tif(p)change(root2[i],1,MAX,p,-1);\n\t\t\tchange(root2[i],1,MAX,y,1);\n\t\t\tchange(root1[i],1,MAX,x,y-p);\n\t\t}\n\t\telse if(op==\"remove\")\n\t\t{\n\t\t\tstring str;cin>>str;int x=getnum(str);\n\t\t\tint p=query(root1[i],1,MAX,x,x);\n\t\t\tif(!p)continue;\n\t\t\tchange(root1[i],1,MAX,x,-p);\n\t\t\tchange(root2[i],1,MAX,p,-1);\n\t\t}\n\t\telse if(op==\"query\")\n\t\t{\n\t\t\t\n\t\t\tstring str;cin>>str;int x=getnum(str);\n\t\t\tint p=query(root1[i],1,MAX,x,x);\n\t\t\tif(!p){puts(\"-1\");continue;}\n\t\t\tif(p==1){puts(\"0\");continue;}\n\t\t\tprintf(\"%d\\n\",query(root2[i],1,MAX,1,p-1));\n\t\t}\n\t\telse{int x=read();root1[i]=root1[i-x-1],root2[i]=root2[i-x-1];}\n\t}\n\treturn 0;\n}",
        "postTime": 1610454327,
        "uid": 97136,
        "name": "chenzida",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF916D \u3010Jamie and To-do List\u3011"
    },
    {
        "content": "\u8fd9\u9898\u662f\u6211\u4e3b\u5e2d\u6811\u7b2c\u4e00\u9898~~\u5b9e\u9645\u5c31\u662f\u4e00\u4e2a\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811~~\u3002\u6211\u4e00\u5f00\u59cb\u505a\u7684\u65f6\u5019~~\u5341\u5206naive\u5730~~\u6ca1\u6709\u5199\u53ef\u6301\u4e45\u5316\uff0c\u76f4\u63a5\u7528STLmap\u6765\u8bb0\u5f55\uff0c\u7136\u540e\u5c31...\n![pic](http://xz-cnyali.com/wp-content/uploads/2018/02/916D.png)\n\n\u7528\u4e24\u4e2a\u6570\u7ec4\u5206\u522b\u8bb0\u5f55\u6743\u503c\u7ebf\u6bb5\u6811\u548c\u6bcf\u4e2a\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\uff0c\u8bb0\u5f55\u4ed6\u4eec\u4e0d\u540c\u7248\u672c\u6839\u7684\u7f16\u53f7\uff0c\u7136\u540e\u5c31\u662f\u4e00\u4e2a\u677f\u5b50+\u64cd\u4f5c\u4e86\u3002\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<string>\n#include<map>\n#define debug(...) printf(__VA_ARGS__),fflush(stdout)\n#define inf 1000000000\n#define maxn 100010\nusing namespace std;\nmap<string,int> f;\nint root[maxn],wt[maxn],cnt=0,top=0;\nstring s,t;\nstruct node{\n\tint ls,rs,w;\n}A[10000010];\n//\u83b7\u53d6\u5b57\u7b26\u4e32\u7684ID\nint get_ID(string s){\n\tif (f.count(s)) return f[s];\n\treturn f[s]=++top;\n}\n//\u4e3b\u5e2d\u6811\u677f\u5b50\nvoid update(int x,int y,int v){\n\t//\u6307\u5411\u4e0a\u4e00\u4e2a\u72b6\u6001\uff0c\u8282\u7ea6\u5185\u5b58\n\tA[x].ls=A[y].ls;\n\tA[x].rs=A[y].rs;\n\tA[x].w=A[y].w+v;\n}\nvoid change(int &nrt,int rt,int l,int r,int x,int v){\n\tnrt=++cnt; update(nrt,rt,v);\n\tif (l==r) return;\n\tint mid=(l+r)>>1;\n\tif (x<=mid) change(A[nrt].ls,A[rt].ls,l,mid,x,v);\n\telse change(A[nrt].rs,A[rt].rs,mid+1,r,x,v);\n}\nint query(int rt,int l,int r,int L,int R){\n\tif (l>=L && r<=R) return A[rt].w;\n\tint mid=(l+r)>>1;\n\tint sum=0;\n\tif (L<=mid) sum+=query(A[rt].ls,l,mid,L,R);\n\tif (R>mid) sum+=query(A[rt].rs,mid+1,r,L,R);\n\treturn sum;\n}\nint main(){\n#ifdef xunzhen\n\tfreopen(\"D.in\",\"r\",stdin);\n\tfreopen(\"D.out\",\"w\",stdout);\n#endif\n\tint q;\n\tcin>>q;\n\tfor (int i=1;i<=q;i++){\n\t\tint k;\n\t\tcin>>t;\n\t\t//\u7ee7\u627f\u4e0a\u4e00\u72b6\u6001\n\t\troot[i]=root[i-1]; wt[i]=wt[i-1];\n\t\t//4\u4e2a\u64cd\u4f5c\n\t\tif (t[0]=='s'){\n\t\t\tcin>>s>>k;\n\t\t\tint id=get_ID(s);\n\t\t\tint p=query(wt[i],1,inf,id,id);\n\t\t\tif (p) change(root[i],root[i],1,inf,p,-1);\n\t\t\tchange(root[i],root[i],1,inf,k,1);\n\t\t\tchange(wt[i],wt[i],1,inf,id,k-p);\n\t\t}\n\t\tif (t[0]=='r'){\n\t\t\tcin>>s;\n\t\t\tint id=get_ID(s);\n\t\t\tint p=query(wt[i],1,inf,id,id);\n\t\t\tif (p) change(root[i],root[i],1,inf,p,-1);\n\t\t\tchange(wt[i],wt[i],1,inf,id,-p);\n\t\t}\n\t\tif (t[0]=='q'){\n\t\t\tcin>>s;\n\t\t\tint id=get_ID(s);\n\t\t\tint p=query(wt[i],1,inf,id,id);\n\t\t\tif (!p) printf(\"-1\\n\");\n\t\t\telse if (p==1) printf(\"0\\n\");\n\t\t\telse printf(\"%d\\n\",query(root[i],1,inf,1,p-1));\n\t\t\tfflush(stdout);\n\t\t}\n\t\tif (t[0]=='u'){\n\t\t\tcin>>k;\n\t\t\troot[i]=root[i-k-1];\n\t\t\twt[i]=wt[i-k-1];\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1517814255,
        "uid": 9612,
        "name": "xunzhen",
        "ccfLevel": 0,
        "title": "CF916D Jamie and To-do List"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n\u7ef4\u62a4\u4e00\u4e2a\u4efb\u52a1\u5b57\u7b26\u96c6\uff0c\u56db\u79cd\u64cd\u4f5c\u3002\n\n1. \u5c06\u4efb\u52a1 $a_i$ \u4f18\u5148\u5ea6\u8bbe\u4e3a $x_i$\uff0c\u82e5\u5b57\u7b26\u96c6\u4e2d\u65e0 $a$ \u5219\uff0c\u5c06\u5176\u52a0\u5165\u5b57\u7b26\u96c6\u3002\n\n2. \u5220\u9664\u4efb\u52a1 $a_i$\u3002\n\n3. \u6c42\u6240\u6709\u4f18\u5148\u5ea6\u5c0f\u4e8e\u5b57\u7b26 $a_i$ \u7684\u5b57\u7b26\u6570\uff0c\u82e5 $a_i$ \u4e0d\u5728\u96c6\u5408\u4e2d\u8f93\u51fa `-1`\u3002\n\n4. \u64a4\u9500\u4e4b\u524d\u7684 $x_i$ \u6b21\u64cd\u4f5c\u3002\n\n\u4e2a\u4eba\u611f\u89c9\u9898\u9762\u7ffb\u8bd1\u7684\u6709\u70b9\u6b67\u4e49\uff0c\u5c31\u6539\u4e86\u6539\u5199\u4e0a\u53bb\u3002\n\n$1 \\leq n,q \\leq 10^5,1\\leq x_i \\leq 10^5$\u3002\n\n## \u9898\u76ee\u5206\u6790\n\n\u64a4\u9500\u64cd\u4f5c\u4e0d\u96be\u60f3\u5230\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u56de\u6eaf\u5230\u5386\u53f2\u7248\u672c\u3002\n\n\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u6bcf\u4e2a\u5b57\u7b26\u4e32\u7684\u4f18\u5148\u5ea6\uff0c\u4ee5\u53ca\u6bcf\u4e2a\u4f18\u5148\u5ea6\u7684\u4e32\u6570\u91cf\uff0c\u4ee5\u4fbf\u4e8e\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u67e5\u627e\u5c0f\u4e8e $k$ \u7684\u6570\u7684\u603b\u6570\u3002\n\n\u7136\u800c\u8fd9\u4e1c\u897f\u5e76\u4e0d\u80fd\u53ea\u7528\u4e00\u68f5\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u5f00\u4e24\u68f5\uff0c\u4e00\u68f5\u7ef4\u62a4\u5b57\u7b26\u4e32\u7d22\u5f15\u503c\u4e3a $i$ \u7684\u5b57\u7b26\u4e32\u7684\u4f18\u5148\u5ea6\uff0c\u53e6\u4e00\u68f5\u7ef4\u62a4\u4f18\u5148\u5ea6\u4e3a $x$ \u7684\u5b57\u7b26\u4e32\u6570\u91cf\u3002\n\n\u5b57\u7b26\u4e32\u7684\u7d22\u5f15\u503c\u7528 $\\texttt{map}$ \u7ef4\u62a4\u5373\u53ef\u3002\n\n\u7531\u4e8e $x_i \\geq 1$\uff0c\u6211\u4eec\u4ee4\u4e00\u4e2a\u5b57\u7b26\u4e32\u4f18\u5148\u5ea6\u4e3a $0$ \u8868\u793a\u8be5\u5b57\u7b26\u4e32\u672a\u51fa\u73b0\u6216\u8005\u88ab\u5220\u9664\u3002\u6bcf\u6b21\u64cd\u4f5c $1$\uff0c\u82e5\u8be5\u5b57\u7b26\u4e32\u539f\u672c\u4f18\u5148\u5ea6\u4e3a $0$\uff0c\u5219\u6211\u4eec\u76f4\u63a5\u5c06\u65b0\u7684\u4f18\u5148\u5ea6\u63d2\u5165\u65b0\u7248\u672c\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u4e0a\u5373\u53ef\u3002\u5e76\u5728\u7b2c\u4e00\u68f5\u7ebf\u6bb5\u6811\u4e0a\u4fee\u6539\u5b57\u7b26\u4e32\u7684\u4f18\u5148\u5ea6\u3002\n\n\u82e5\u4e0d\u4e3a $0$\uff0c\u6211\u4eec\u8981\u5148\u628a\u539f\u4f18\u5148\u5ea6\u7684\u8d21\u732e\u5220\u6389\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5c06\u5f53\u524d\u7248\u672c\u4e0b\u6807\u4e3a\u539f\u4f18\u5148\u5ea6\u7684\u6570\u503c\u76f4\u63a5\u51cf\u4e00\uff0c\u76f8\u5f53\u4e8e\u6d88\u53bb\u8d21\u732e\uff0c\u5e76\u5728\u65b0\u4f18\u5148\u5ea6\u52a0\u4e00\u3002\n\n\u79fb\u9664\u64cd\u4f5c\u76f4\u63a5\u5728\u7b2c\u4e00\u68f5\u7ebf\u6bb5\u6811\u4e0a\uff0c\u5c06\u5b57\u7b26\u4e32\u4f18\u5148\u5ea6\u4fee\u6539\u5373\u53ef\u3002\n\n\u67e5\u8be2\u64cd\u4f5c\uff0c\u82e5 $a_i$ \u7684\u4f18\u5148\u5ea6\u4e3a $x_i$ \uff0c\u5219\u6211\u4eec\u5728\u7b2c\u4e8c\u68f5\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u67e5\u627e\u4e0b\u6807\u5728 $[1,x_i-1]$ \u7684\u533a\u95f4\u548c\u5373\u53ef\u3002\n\n\u56de\u6eaf\u64cd\u4f5c\u76f4\u63a5\u66f4\u6539\u5f53\u524d\u7248\u672c $rt_i$ \u4e3a $rt_i-x_i+1$ \u5373\u53ef\u3002\n\n\u5c0f\u7ec6\u8282\uff0c\u5982\u679c\u5220\u9664\u64cd\u4f5c\u5220\u7684\u662f\u4e00\u4e2a\u4f18\u5148\u5ea6\u4e3a $0$ \u7684\u8282\u70b9\uff0c\u867d\u7136\u4e0d\u7528\u4fee\u6539\uff0c\u4f46\u662f\u8981\u7528\u4e0a\u4e00\u4e2a\u7248\u672c\u7684 $rt$ \u8986\u76d6\u5f53\u524d\u7248\u672c\u7684 $rt$ \uff08\u8fd9\u4e2a\u4f1e\u5175\u7ec6\u8282\u8ba9\u6211\u8c03\u4e86\u597d\u4e45\uff09\u3002\n\n## Code\n\n\u5199\u7684\u6709\u70b9\u5197\u957f\uff0c\u671b\u8c05\u89e3\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <queue>\n#include <cmath>\n#include <map>\nusing namespace std;\nint read(){\n\tint x=0,f=1;char ch = getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-'){f=-1;}ch = getchar();}\n\twhile(ch>='0'&&ch<='9'){x = x*10+ch-'0';ch = getchar();}\n\treturn x*f;\n}\nconst int N = 1e5+5;\nconst int M = 100*N;\nmap<string,int>mp;\nint top;\nint rk(string s){\n\tif(mp[s]==0){\n\t\treturn mp[s]=++top;\n\t}else{\n\t\treturn mp[s];\n\t}\n}\nstruct aa{\n\tint lc,rc,num;\n}node1[M],node2[M];//1\u8868\u793a\u4ee5\u4f18\u5148\u7ea7\u4e3a\u4e0b\u6807\uff0c\u51fa\u73b0\u6b21\u6570\u4e3a\u6743\u503c\uff0c2\u8868\u793a\u4ee5\u5b57\u7b26\u4e32rnk\u4e3a\u4e0b\u6807\uff0c\u4f18\u5148\u7ea7\u4e3a\u6743\u503c\u3002 \nint tot1,tot2;\nint rt1[N],rt2[N];\nvoid pushup1(int u){\n\tnode1[u].num = node1[node1[u].lc].num+node1[node1[u].rc].num;\n}\nvoid ins1(int &u,int v,int l,int r,int x,int z){\n\tu = ++tot1;\n\tnode1[u] = node1[v];\n\tif(l==r){\n\t\tnode1[u].num+=z;\n\t\treturn;\n\t}\n\tint mid = (l+r)/2;\n\tif(x<=mid){\n\t\tins1(node1[u].lc,node1[v].lc,l,mid,x,z);\n\t}else{\n\t\tins1(node1[u].rc,node1[v].rc,mid+1,r,x,z);\n\t}\n\tpushup1(u);\n}\nint query1(int u,int l,int r,int x){\n\tif((!u)||(l>x)){\n\t\treturn 0;\n\t}\n\tif(l==r){\n\t\treturn node1[u].num;\n\t}\n\tint mid = (l+r)/2;\n\tif(mid>x){\n\t\treturn query1(node1[u].lc,l,mid,x);\n\t}else{\n\t\treturn node1[node1[u].lc].num+query1(node1[u].rc,mid+1,r,x);\n\t}\n}\nvoid ins2(int &u,int v,int l,int r,int x,int z){\n\tu = ++tot2;\n\tnode2[u] = node2[v];\n\tif(l==r){\n\t\tnode2[u].num = z;\n\t\treturn;\n\t}\n\tint mid = (l+r)/2;\n\tif(x<=mid){\n\t\tins2(node2[u].lc,node2[v].lc,l,mid,x,z);\n\t}else{\n\t\tins2(node2[u].rc,node2[v].rc,mid+1,r,x,z);\n\t}\n}\nint query2(int u,int l,int r,int x){\n\tif(!u){\n\t\treturn 0;\n\t}\n\tif(l==r){\n\t\treturn node2[u].num;\n\t}\n\tint mid = (l+r)/2;\n\tif(x<=mid){\n\t\treturn query2(node2[u].lc,l,mid,x);\n\t}else{\n\t\treturn query2(node2[u].rc,mid+1,r,x);\n\t}\n}\nint main(){\n\tint m;\n\tm = read();\n\tstring opt,x;int v;\n\tfor(int i=1;i<=m;i++){\n\t\tcin>>opt; \n\t\tif(opt[0]=='s'){\n\t\t\tcin>>x;\n\t\t\tv = read();\n\t\t\tint a = query2(rt2[i-1],1,m,rk(x));\n\t\t\tif(a==0){\n\t\t\t\tins2(rt2[i],rt2[i-1],1,m,rk(x),v);\n\t\t\t\tins1(rt1[i],rt1[i-1],1,1e9,v,1);\n\t\t\t\t\n\t\t\t}else{\n\t\t\t\tins2(rt2[i],rt2[i-1],1,m,rk(x),v);\n\t\t\t\tins1(rt1[i],rt1[i-1],1,1e9,a,-1);\n\t\t\t\tins1(rt1[i],rt1[i],1,1e9,v,1);\n\t\t\t}\n\t\t}else if(opt[0]=='r'){\n\t\t\tcin>>x;\n\t\t\tint a = query2(rt2[i-1],1,m,rk(x));\n\t\t\tif(a!=0){\n\t\t\t\tins2(rt2[i],rt2[i-1],1,m,rk(x),0);\n\t\t\t\tins1(rt1[i],rt1[i-1],1,1e9,a,-1);\n\t\t\t}else{\n\t\t\t\trt2[i] = rt2[i-1];rt1[i] = rt1[i-1];\n\t\t\t}\n\t\t}else if(opt[0]=='q'){\n\t\t\tcin>>x;\n\t\t\trt2[i] = rt2[i-1];rt1[i] = rt1[i-1];\n\t\t\tint a = query2(rt2[i],1,m,rk(x));\n\t\t\tif(a==0){\n\t\t\t\tcout<<-1<<\"\\n\";\n\t\t\t}else{\n\t\t\t\tcout<<query1(rt1[i],1,1e9,a-1)<<\"\\n\";\n\t\t\t}\n\t\t}else{\n\t\t\tv = read();\n\t\t\trt1[i] = rt1[max(0,i-v-1)];\n\t\t\trt2[i] = rt2[max(0,i-v-1)];\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1665219263,
        "uid": 369399,
        "name": "yizhiming",
        "ccfLevel": 0,
        "title": "\u9898\u89e3CF916D \u3010Jamie and To-do List\u3011"
    },
    {
        "content": "\u600e\u4e48\u9898\u89e3\u533a\u6ca1\u6709\u6307\u9488\u5199\u6cd5\u554a\uff08\u607c\uff09\n\n\u9898\u610f\uff1a\u7ef4\u62a4\u5e26\u6743\u5b57\u7b26\u4e32\u96c6\u5408\u7684\u6743\u503c\u4fee\u6539\uff0c\u5220\u9664\u5143\u7d20\uff0c\u6c42\u6743\u503c\u610f\u4e49\u4e0b\u7684\u6392\u540d\u3002\u5e26\u64a4\u9500\u3002\u5f3a\u5236\u5728\u7ebf\u3002\n\nTip\uff1a\u5173\u4e8e\u4e3a\u4ec0\u4e48\u662f\u5f3a\u5236\u5728\u7ebf\uff0c\u8fd9\u662f\u4e00\u9053\u4ea4\u4e92\u9898\u3002\n# \u601d\u8def\n\u6ce8\u610f\u5230\u4e0d\u5e26\u64a4\u9500\u7684\u8bdd\u5e73\u8861\u6811\u53ef\u4ee5\u8f7b\u677e\u7ef4\u62a4\uff0c\u4f46\u5e26\u64a4\u9500\u5c31\u8981\u53ef\u6301\u4e45\u5316\u3002\n\n\u8003\u8651\u600e\u4e48\u4e0d\u5199\u53ef\u6301\u4e45\u5316\u5e73\u8861\u6811\uff0c\u7528\u53ef\u6301\u4e45\u5316\u52a8\u6001\u5f00\u70b9\u6743\u503c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e4b\u3002\n\n\u5b57\u7b26\u4e32\u4f5c\u4e0b\u6807\u4e0d\u592a\u597d\u7ef4\u62a4\uff0c\u7528 `std::map` \u8f6c\u6362\u6210\u7f16\u53f7\u3002\n\n\u5efa\u4e24\u68f5\u6811\uff0c$x_i$ \u8868\u793a\u7f16\u53f7\u4e3a $i$ \u7684\u5b57\u7b26\u4e32\u7684\u6743\u503c\uff0c$y_i$ \u8868\u793a\u6743\u503c\u4e3a $i$ \u7684\u5b57\u7b26\u4e32\u7684\u6570\u91cf\u3002\n\n\u6a21\u62df\u5373\u53ef\u3002\u6ce8\u610f\u7279\u5224\u8be2\u95ee\u5b57\u7b26\u4e32\u4e0d\u5b58\u5728\u6216\u6743\u503c\u4e3a $1$ \u7684\u60c5\u51b5\u3002\n# \u4ee3\u7801\n```cpp\n#include <map>\n#include <string>\n#include <cstdio>\n#define G int m = s + t >> 1\n#define D if(u) M(u, -1, 1, 1e9, y[i])\n#define S(v) M(a, v - u, 1, 1e5, x[i])\n#define I a = F();u = Q(a, a, 1, 1e5, x[i])\n#define U(v) x[i] = x[i - v - 1];y[i] = y[i - v - 1]\nusing namespace std;\ninline int R()\n{\n    int r = 0;char c = getchar();while(!isdigit(c)) c = getchar();\n    while(isdigit(c)) r = r * 10 + c - '0', c = getchar();return r;\n}\nint n, c, a, u, v;char o[7], s[16];map<string, int> m;\nint F() {scanf(\"%s\", s);return m[s] ? m[s] : m[s] = ++c;}\nstruct T{T *l = 0, *r = 0;int v = 0;void u() {v = 0;if\n(l) v += l->v;if(r) v += r->v;}}*x[100050], *y[100050];\nvoid M(int l, int x, int s, int t, T *&p)\n{\n    p = p ? new T(*p) : new T;if(s == t) {p->v += x;return;}G;if\n    (l <= m) M(l, x, s, m, p->l);else M(l, x, m + 1, t, p->r);p->u();\n}\nint Q(int l, int r, int s, int t, T *p)\n{\n    if(!p) return 0;if(l <= s && t <= r) return p->v;G;int q = 0;if(l <= m)\n    q += Q(l, r, s, m, p->l);if(r > m) q += Q(l, r, m + 1, t, p->r);return q;\n}\nint main()\n{\n    n = R();for(int i = 1;i <= n;++i)\n    {\n        scanf(\"%s\", o);U(0);switch(o[0])\n        {\n            case 's': I;D;M(v = R(), 1, 1, 1e9, y[i]);S(v);break;case 'r':\n            I;D;S(0);break;case 'q': I;printf(\"%d\\n\", --u <= 0 ? u : Q(1, u,\n            1, 1e9, y[i]));fflush(stdout);break;case 'u': a = R();U(a);break;\n        }\n    }\n    return 0;\n}\n```\n",
        "postTime": 1664367105,
        "uid": 388651,
        "name": "5k_sync_closer",
        "ccfLevel": 7,
        "title": "CF916D Jamie and To-do List"
    },
    {
        "content": "\u5bf9\u4e8e\u4e3b\u5e2d\u6811\u521d\u5b66\u8005\u6765\u8bf4\u662f\u4e2a\u4e0d\u9519\u7684\u9898\u3002\u6211\u4eec\u7ef4\u62a4\u4e24\u4e2a\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\uff0c\u4e00\u4e2a\u8868\u793a\u4f18\u5148\u7ea7\u4e0a\u7684\u6570\u91cf\u7684\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u8fd8\u6709\u662f\u4e00\u4e2a\u7ef4\u62a4\u6bcf\u4e2a\u65f6\u523b\u4e0a\u6bcf\u4e2a\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u7684\u53ef\u6301\u4e45\u5316\u6570\u7ec4\u3002\n\n\u5f88\u660e\u663e\uff0c\u5982\u679c\u6211\u4eec\u4f7f\u7528\u52a8\u6001\u5f00\u70b9\uff0c\u662f\u53ef\u4ee5\u5f00\u4e0b\u7684\u3002\u5168\u5267\u7ec8\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=100005;\nint n,m,b[N],c[N],d[N],e[N],cnt[2],root[N][2];\nstring opt[N],s[N];\nmap<string,int>k;//\u5904\u7406\u5b57\u7b26\u4e32\nstruct segment_tree {\n    int lc,rc,val;\n}tr[N*155][2];//\u5f00\u5927\u4e00\u70b9\u30020\u662f\u6743\u503c\u7ebf\u6bb5\u6811\uff0c1\u662f\u53ef\u6301\u4e45\u5316\u6570\u7ec4\nint upd1(int now,int l,int r,int x,int d) {\n    int p=++cnt[0];\n    tr[p][0]=tr[now][0];\n    if (l==r) {\n        tr[p][0].val+=d;\n        return p;\n    }\n    int mid=l+r>>1;\n    if (x<=mid) tr[p][0].lc=upd1(tr[now][0].lc,l,mid,x,d);\n    else tr[p][0].rc=upd1(tr[now][0].rc,mid+1,r,x,d);\n    tr[p][0].val=tr[tr[p][0].lc][0].val+tr[tr[p][0].rc][0].val;\n    return p;\n}\nint upd2(int now,int l,int r,int x,int d) {\n    int p=++cnt[1];\n    tr[p][1]=tr[now][1];\n    if (l==r) {\n        tr[p][1].val=d;\n        return p;\n    }\n    int mid=l+r>>1;\n    if (x<=mid) tr[p][1].lc=upd2(tr[now][1].lc,l,mid,x,d);\n    else tr[p][1].rc=upd2(tr[now][1].rc,mid+1,r,x,d);\n    return p;\n}\nint get(int p,int l,int r,int L,int R,int t) {\n    if (L>R) return 0;\n    if (L<=l&&r<=R) return tr[p][t].val;\n    int mid=l+r>>1,res=0;\n    if (L<=mid) res+=get(tr[p][t].lc,l,mid,L,R,t);\n    if (R>mid) res+=get(tr[p][t].rc,mid+1,r,L,R,t);\n    return res;\n}\nint main() {\n    int CNT=0;\n    scanf(\"%d\",&m);\n    for (int i=1;i<=m;i++) {\n        cin>>opt[i];\n        if (opt[i]==\"set\") {\n            cin>>s[i]>>b[i];\n            if (k[s[i]]) d[i]=k[s[i]];\n            else d[i]=k[s[i]]=++CNT;\n            int p=get(root[i-1][1],1,1e9,d[i],d[i],1);//\u6ce8\u610f\u4e0a\u754c\u662fmax_xi\n            if (!p) root[i][0]=upd1(root[i-1][0],1,1e9,b[i],1);\n            else {\n                int x=upd1(root[i-1][0],1,1e9,p,-1);\n                root[i][0]=upd1(x,1,1e9,b[i],1);\n            }\n            root[i][1]=upd2(root[i-1][1],1,1e9,d[i],b[i]);\n        } else if (opt[i]==\"remove\") {\n            cin>>s[i];\n            if (k[s[i]]) d[i]=k[s[i]];\n            else d[i]=k[s[i]]=++CNT;\n            int p=get(root[i-1][1],1,1e9,d[i],d[i],1);\n            if (p) root[i][0]=upd1(root[i-1][0],1,1e9,p,-1),root[i][1]=upd2(root[i-1][1],1,1e9,d[i],0);//\u4ebf\u4e9b\u7ec6\u8282\n            else root[i][0]=root[i-1][0],root[i][1]=root[i-1][1];\n        } else if (opt[i]==\"query\") {\n            cin>>s[i];\n            if (k[s[i]]) d[i]=k[s[i]];\n            else d[i]=k[s[i]]=++CNT;\n            root[i][0]=root[i-1][0];//\u6ce8\u610f\u590d\u5236\u7248\u672c\n            root[i][1]=root[i-1][1];\n            int p=get(root[i][1],1,1e9,d[i],d[i],1);\n            if (!p) {\n                cout<<-1<<endl;\n                continue;\n            }\n            int res=get(root[i][0],1,1e9,1,p-1,0);\n            cout<<res<<endl;\n        } else {\n            cin>>e[i];\n            root[i][0]=root[i-e[i]-1][0];\n            root[i][1]=root[i-e[i]-1][1];\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1641183329,
        "uid": 407223,
        "name": "TulipeNoire",
        "ccfLevel": 7,
        "title": "Jamie and To-do List"
    },
    {
        "content": "### [\u3010\u539f\u9898\u94fe\u63a5\u3011](https://www.luogu.com.cn/problem/CF916D)\n\n\u9898\u89e3\u533a\u597d\u50cf\u6ca1\u6709\u53ef\u6301\u4e45\u5316 $\\text{Trie}+\\text{FHQ-Treap}$ \u7684\u9898\u89e3\u3002\u3002\n\n## \u9898\u76ee\u5206\u6790\n\n\u6bcf\u4e2a\u5b57\u7b26\u4e32\u5bf9\u5e94\u4e00\u4e2a\u6743\u503c\u3002\u6709\u6dfb\u52a0/\u4fee\u6539\u64cd\u4f5c\u3001\u67e5\u8be2\u6392\u540d\u3001\u64a4\u9500\u64cd\u4f5c\u3002\n\n\u5b57\u7b26\u4e32\u67e5\u627e\uff1f\u4f7f\u7528 $\\text{Trie}$\u3002\u67e5\u8be2\u6392\u540d\uff1f\u5927\u529b\u5e73\u8861\u6811\u3002\n\n\u56e0\u4e3a\u6709\u64a4\u9500\u64cd\u4f5c\uff0c\u6240\u4ee5\u8981\u53ef\u6301\u4e45\u5316\u5904\u7406\u3002\u5047\u8bbe\u5f53\u524d\u4e3a\u7248\u672c $i$\uff0c\u64a4\u9500\u6389 $sum$ \u6b21\u64cd\u4f5c\u5c31\u662f\u56de\u9000\u5230\u7248\u672c $i-sum-1$\u3002\n\n$\\text{Trie}$ \u7684\u53ef\u6301\u4e45\u5316\u662f\u5f88\u5bb9\u6613\u7684\uff0c\u4f46\u662f\u5e73\u8861\u6811\u5462\uff1f\n\n\u5f88\u591a\u5e73\u8861\u6811\u50cf $\\text{Splay, AVL}$ \u90fd\u662f\u901a\u8fc7\u65cb\u8f6c\u6765\u4fdd\u8bc1\u5e73\u8861\u7684\uff0c\u4f46\u8fd9\u6837\u4e5f\u4f7f\u5f97\u5927\u591a\u6570\u5e73\u8861\u6811\u4e0d\u652f\u6301\u53ef\u6301\u4e45\u5316\u64cd\u4f5c\u3002\n\n\u4f46\u662f\u6709\u4e00\u79cd\u5e73\u8861\u6811\u53eb\u505a $\\text{FHQ-Treap}$\uff0c\u5b83\u4f7f\u7528\u4e86\u5206\u88c2\u548c\u5408\u5e76\uff0c\u800c\u4e0d\u662f\u65cb\u8f6c\u6765\u4fdd\u8bc1\u5e73\u8861\u3002\u4e8e\u662f\u5b83\u652f\u6301\u53ef\u6301\u4e45\u5316\u3002\n\n## \u53ef\u6301\u4e45\u5316 $\\text{FHQ-Treap}$\n\n\u9996\u5148\u60a8\u5f97\u4e86\u89e3\u4e00\u4e0b $\\text{Treap}$\u3002$\\text{FHQ-Treap}$ \u5229\u7528\u5806\u7684\u6027\u8d28\u4ee5\u53ca\u968f\u673a\u9644\u52a0\u6743\u503c\u4fdd\u8bc1\u4e86\u590d\u6742\u5ea6\uff0c\u4f46\u662f\u64cd\u4f5c\u4e0d\u50cf\u4f20\u7edf\u7684\u4e8c\u53c9\u67e5\u627e\u6811\u4e00\u6837\uff0c\u800c\u662f\u501f\u52a9 split \u548c merge \u5b9e\u73b0\u3002\n\n### \u8282\u70b9\u7684\u50a8\u5b58\n\n```cpp\nstruct TreapNode\n{\n\tint val; //\u4fdd\u5b58\u7684\u503c\n\tint pri,cnt,siz; //\u9644\u52a0\u6743\u503c\u3001\u91cd\u590d\u8ba1\u6570\u5668\u3001\u5b50\u6811\u5927\u5c0f\n\tTreapNode *lc,*rc; //\u5de6\u53f3\u513f\u5b50\n\tTreapNode(int v): val(v),cnt(1),siz(1) // \u6784\u9020\u51fd\u6570\n\t\t{ pri=rand(),lc=rc=nullptr; }\n}*rt;\ntypedef TreapNode *pNode\n```\n\n\n### \u5206\u88c2\uff1asplit\n\n\u4e00\u822c\u662f\u5c06\u5c0f\u4e8e\u7b49\u4e8e $k$ \u7684\u5206\u5230\u4e00\u68f5\u6811\u4e2d\uff0c\u5927\u4e8e $k$ \u7684\u5206\u5230\u53e6\u4e00\u68f5\u6811\u4e2d\u3002\u5f53\u7136\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6392\u540d\u5206\u88c2\uff08\u4e00\u822c\u662f\u5728\u7ef4\u62a4\u5e8f\u5217\u65f6\uff09\uff0c\u4f46\u8fd9\u91cc\u4e0d\u7ed9\u51fa\u4ee3\u7801\u3002\n\n```cpp\nvoid split(pNode i,int k,pNode &x,pNode &y)\n{\n\tif(!i)\tx=y=nullptr; //\u8282\u70b9\u4e0d\u5b58\u5728\n\telse if(i->val<=k) //\u82e5\u5c0f\u4e8e\u7b49\u4e8ek\uff0c\u8be5\u8282\u70b9\u5c5e\u4e8ex\n\t\tx=i,split(i->rc,k,x->rc,y),pushup(x);\n\telse // \u5426\u5219\uff0c\u8be5\u8282\u70b9\u5c5e\u4e8ey\n\t\ty=i,split(i->lc,k,x,y->lc),pushup(y);\n}\n```\n\n### \u5408\u5e76\uff1amerge\n\n\u5c06\u4e24\u68f5\u6811 $x,\\ y$ \u5408\u5e76\u4e3a\u4e00\u68f5\uff0c\u8fd4\u56de\u65b0\u6811\u7684\u6839\u3002\u5408\u5e76\u8981\u6c42 $x$ \u4e2d\u5143\u7d20\u5168\u90e8\u5c0f\u4e8e\u7b49\u4e8e $y$ \u4e2d\u5143\u7d20\u3002\u5408\u5e76\u540e\u7684\u6811\u7684\u9644\u52a0\u6743\u503c\u6ee1\u8db3\u5806\u7684\u6027\u8d28\uff0c\u6b63\u662f\u8fd9\u91cc\u4fdd\u8bc1\u4e86\u590d\u6742\u5ea6\u3002\n\n\u8fd9\u91cc\u7684\u5b9e\u73b0\u7528\u4e86\u5c0f\u6839\u5806\uff0c\u5f53\u7136\u5927\u8ddf\u5806\u4e5f\u6ca1\u95ee\u9898\u7684\u3002\n\n```cpp\npNode merge(pNode x,pNode y)\n{\n\tif(!x || !y)\treturn x?x:(y?y:nullptr); //\u6709\u4e00\u68f5\u4e3a\u7a7a\u6216\u90fd\u4e3a\u7a7a\uff0c\u76f4\u63a5\u8fd4\u56de\n\telse if(x->pri<y->pri) //x\u9644\u52a0\u6743\u503c\u5c0f\uff0cx\u4f5c\u4e3a\u6839\n\t\treturn x->rc=merge(x->rc,y),pushup(x),x;\n\telse //\u5426\u5219y\u4f5c\u4e3a\u6839\n\t\treturn y->lc=merge(x,y->lc),pushup(y),y;\n}\n```\n\n### \u63d2\u5165\u4e0e\u5220\u9664\uff1ainsert & remove\n\n\u8981\u627e\u5230\u6743\u503c\u4e3a $v$ \u7684\u8282\u70b9\uff0c\u57fa\u672c\u65b9\u6cd5\u662f\u5148 $split(rt,v,x,z)$\uff0c\u518d $split(x,v-1,x,y)$\uff0c\u5f97\u5230\u7684 $y$ \u7684\u6743\u503c\u5c31\u662f $v$\u3002\n\n\u5b8c\u6210\u64cd\u4f5c\u540e\u8bb0\u5f97\u628a\u5b83\u4eec\u5408\u5e76\u56de\u53bb\uff1a$rt\\gets merge(merge(x,y),z)$\u3002\n\n```cpp\nvoid insert(int v)\n{\n\tpNode x,y,z;split(rt,v,x,z),split(x,v-1,x,y);\n\tif(y)\ty->cnt++,y->siz++; //\u5982\u679c\u5b58\u5728\uff0c\u6570\u91cf+1\n\telse\ty=new TreapNode(v); //\u5426\u5219\u65b0\u5efa\u8282\u70b9\n\trt=merge(merge(x,y),z);\n}\nvoid remove(int v)\n{\n\tpNode x,y,z;split(rt,v,x,z),split(x,v-1,x,y);\n\tif(y)\n\t{\n\t\ty->cnt--,y->siz--; //\u6570\u91cf-1\n\t\tif(!y->cnt)\t{ delete y;y=nullptr; }\n\t\t//\u5220\u9664\u6389\u7a7a\u7684\u8282\u70b9\n\t}\n\trt=merge(merge(x,y),z);\n}\n```\n\u5176\u5b83\u7684\u64cd\u4f5c\u5982\u6839\u636e\u6570\u503c\u67e5\u6392\u540d\u3001\u6839\u636e\u6392\u540d\u67e5\u6570\u503c\u3001\u524d\u9a71\u540e\u7ee7\u7b49\uff0c\u64cd\u4f5c\u548c\u666e\u901a\u4e8c\u53c9\u641c\u7d22\u6811\u4e00\u6837\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002\n\n### \u652f\u6301\u53ef\u6301\u4e45\u5316\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u771f\u6b63\u4fee\u6539\u7684\u53ea\u6709\u5728 split \u64cd\u4f5c\u4e2d\uff0c\u800c\u4e14\u4fee\u6539\u7684\u53ea\u6709\u4e00\u6761\u94fe\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u590d\u5236\u539f\u8282\u70b9\n\n\u6211\u4eec\u5c06 split \u51fd\u6570\u5185\u7684 `x=i`\u3001`y=i`\uff0c\u6539\u4e3a `x=new TreapNode(*i)`\u3001`y=new TreapNode(*i)` \u5373\u53ef\u3002\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n**\u8bf7\u6ce8\u610f\u672c\u9898\u6bcf\u8f93\u51fa\u4e00\u884c\u540e\u8981 `fflush(stdout)` \u6e05\u7a7a\u8f93\u51fa\u7f13\u5b58\u533a\uff0c\u5426\u5219\u4f1a Idleness Limit Exceeded\u3002**\n\n\u8fd9\u9053\u9898\u8fd8\u662f\u76f8\u5f53\u6a21\u677f\u7684\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n/*\n  \u7701\u7565100\u591a\u884c\u7684\u5feb\u8bfb\u5feb\u5199\u6a21\u677f\n  \u5373\u4e0b\u9762\u7684qin\u3001qout\n*/\n\nint n;\n\nclass Trie\n{\n private:\n\tstruct TrieNode\n\t{\n\t\tint val;\n\t\tTrieNode *ch[26];\n\t\tTrieNode(): val(0)\n\t\t\t{ memset(ch,0,sizeof(ch)); }\n\t}*rt;\n\ttypedef TrieNode *pNode;\n public:\n\tTrie(): rt(nullptr){}\n\tinline void copy(const Trie &t)\t{ rt=t.rt; }\n\tvoid insert(const char *s,int x)\n\t{\n\t\tif(!rt)\trt=new TrieNode;\n\t\telse\trt=new TrieNode(*rt);\n\t\tpNode i=rt;char c;\n\t\twhile(*s)\n\t\t{\n\t\t\tc=*(s++)-'a';\n\t\t\tif(!i->ch[c])\ti->ch[c]=new TrieNode;\n\t\t\telse\ti->ch[c]=new TrieNode(*i->ch[c]);\n\t\t\ti=i->ch[c];\n\t\t}\n\t\ti->val=x;\n\t}\n\tint query(const char *s)\n\t{\n\t\tpNode i=rt;\n\t\twhile(*s)\n\t\t{\n\t\t\tif(!i)\treturn 0;\n\t\t\ti=i->ch[*(s++)-'a'];\n\t\t}\n\t\treturn i?i->val:0;\n\t}\n}tri[100005];\n\nclass Treap\n{\n private:\n\tstruct TreapNode\n\t{\n\t\tint val;\n\t\tint pri,cnt,siz;\n\t\tTreapNode *lc,*rc;\n\t\tTreapNode(int v): val(v),cnt(1),siz(1)\n\t\t\t{ pri=rand(),lc=rc=nullptr; }\n\t}*rt;\n\ttypedef TreapNode *pNode;\n\tinline void pushup(pNode i)\n\t{\n\t\ti->siz=i->cnt;\n\t\tif(i->lc)\ti->siz+=i->lc->siz;\n\t\tif(i->rc)\ti->siz+=i->rc->siz;\n\t}\n\tvoid split(pNode i,int k,pNode &x,pNode &y)\n\t{\n\t\tif(!i)\tx=y=nullptr;\n\t\telse if(i->val<=k)\n\t\t\tx=new TreapNode(*i),split(i->rc,k,x->rc,y),pushup(x);\n\t\telse\n\t\t\ty=new TreapNode(*i),split(i->lc,k,x,y->lc),pushup(y);\n\t}\n\tpNode merge(pNode x,pNode y)\n\t{\n\t\tif(!x || !y)\treturn x?x:(y?y:nullptr);\n\t\telse if(x->pri<y->pri)\n\t\t\treturn x->rc=merge(x->rc,y),pushup(x),x;\n\t\telse\n\t\t\treturn y->lc=merge(x,y->lc),pushup(y),y;\n\t}\n public:\n\tTreap(): rt(nullptr){}\n\tinline void copy(const Treap &t)\t{ rt=t.rt; }\n\tvoid insert(int v)\n\t{\n\t\tpNode x,y,z;split(rt,v,x,z),split(x,v-1,x,y);\n\t\tif(y)\ty->cnt++,y->siz++;\n\t\telse\ty=new TreapNode(v);\n\t\trt=merge(merge(x,y),z);\n\t}\n\tvoid remove(int v)\n\t{\n\t\tpNode x,y,z;split(rt,v,x,z),split(x,v-1,x,y);\n\t\tif(y)\n\t\t{\n\t\t\ty->cnt--,y->siz--;\n\t\t\tif(!y->cnt)\t{ delete y;y=nullptr; }\n\t\t}\n\t\trt=merge(merge(x,y),z);\n\t}\n\tint getRank(int v)\n\t{\n\t\tpNode i=rt;\n\t\tint res=1;\n\t\twhile(i)\n\t\t\tif(v<=i->val)\ti=i->lc;\n\t\t\telse\tres+=(i->lc?i->lc->siz:0)+i->cnt,i=i->rc;\n\t\treturn res;\n\t}\n}trp[100005];\n\nint main()\n{\n\tsrand(19491001);\n\tqin>>n;\n\tchar opt[10],s[30];\n\tint x,y;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\ttri[i].copy(tri[i-1]),trp[i].copy(trp[i-1]);\n\t\tqin>>opt;\n\t\tif(opt[0]=='s')\n\t\t{\n\t\t\tqin>>s>>x;\n\t\t\ttrp[i].remove(tri[i].query(s));\n\t\t\ttri[i].insert(s,x),trp[i].insert(x);\n\t\t}\n\t\telse if(opt[0]=='r')\n\t\t{\n\t\t\tqin>>s;\n\t\t\ttrp[i].remove(tri[i].query(s));\n\t\t\ttri[i].insert(s,0);\n\t\t}\n\t\telse if(opt[0]=='q')\n\t\t{\n\t\t\tqin>>s,y=tri[i].query(s);\n\t\t\tqout.writeln(y?(trp[i].getRank(y)-1):-1);\n\t\t}\n\t\telse\n\t\t\tqin>>x,tri[i].copy(tri[i-x-1]),trp[i].copy(trp[i-x-1]);\n\t\tfflush(stdout);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1632483988,
        "uid": 279800,
        "name": "ExplodingKonjac",
        "ccfLevel": 7,
        "title": "\u3010\u9898\u89e3\u3011CF916D Jamie and To-do List"
    },
    {
        "content": "# \u9898\u76ee\u5927\u610f\n\n\u60a8\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\n- `set s x`  \u5c06\u5b57\u7b26\u4e32 $s$ \u7684\u6743\u503c\u8bbe\u4e3a $x$ \uff0c\u5982\u679c\u6ca1\u6709\u5219\u52a0\u5165 $s$ \u3002\n- `remove s`  \u5220\u9664 $s$ \u3002\n- `query s `  \u67e5\u8be2\u6709\u591a\u5c11\u4e2a\u5b57\u7b26\u4e32\u7684\u6743\u503c\u5c0f\u4e8e $s$ \u3002\u5982\u679c $s$ \u4e0d\u5b58\u5728\u5219\u8f93\u51fa `-1`\u3002\n- `undo x` \u64a4\u9500\u4e4b\u524d\u7684 $x$ \u6b21\u64cd\u4f5c\u3002\n\n# \u9898\u89e3\n\n\u4e00\u770b\u5230\u64a4\u9500\u5c31\u77e5\u9053\u8981\u53ef\u6301\u4e45\u5316\u3002\n\n\u9996\u5148\u7528`map`\u5c06\u5b57\u7b26\u4e32\u6620\u5c04\u4e3a\u6574\u6570\u3002\n\n\u5728\u6ca1\u6709`undo`\u64cd\u4f5c\u7684\u60c5\u51b5\u4e0b\uff0c\u7528\u6570\u7ec4\u7ef4\u62a4\u6743\u503c\uff0c\u6743\u503c\u7ebf\u6bb5\u6811\u8fdb\u884c\u67e5\u8be2\u5373\u53ef\u3002\n\n\u52a0\u5165`undo`\u540e\u5c31\u5c06\u4e0a\u9762\u4e24\u4e2a\u4e1c\u897f\u53ef\u6301\u4e45\u5316\u5c31\u53ef\u4ee5\u4e86\u3002\n\ntips\uff1a\u4e0d\u8981\u6df7\u7528`cin`\u548c`puts`\uff0c\u4f1a`ILE`\u3002\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <map>\n#include <string>\nusing namespace std;\n#define int long long\nconst int N = 1e5 + 5, INF = 1e9;\nint n, id;\nmap<string, int> mp;\nint getid(string s) {\n    if (mp.count(s)) return mp[s];\n    else return mp[s] = ++id;\n}\nstruct node {\n    int ls, rs;\n    int sum;\n} t[N<<7];\nint rt1[N<<1], rt2[N<<1], tot;\n#define ls(k) t[k].ls\n#define rs(k) t[k].rs\nvoid pushup(int k) { t[k].sum = t[ls(k)].sum + t[rs(k)].sum; }\nint update(int k, int l, int r, int x, int v) {\n    int p = ++tot, mid = l + r >> 1;\n    t[p] = t[k];\n    if (l == r) {\n        t[p].sum += v;\n        return p;\n    }\n    if (x <= mid) ls(p) = update(ls(k), l, mid, x, v);\n    else rs(p) = update(rs(k), mid+1, r, x, v);\n    pushup(p);\n    return p;\n}\nint query(int k, int l, int r, int ql, int qr) {\n    if (l >= ql && r <= qr) return t[k].sum;\n    int mid = l + r >> 1, res = 0;\n    if (ql <= mid) res += query(ls(k), l, mid, ql, qr);\n    if (qr > mid) res += query(rs(k), mid+1, r, ql, qr);\n    // printf(\"rres=%d\\n\", res);\n    return res;\n}\nstring s, op;\nsigned main(void) {\n    ios::sync_with_stdio(false);\n    cin.tie(NULL), cout.tie(NULL);\n    cin>>n;\n    for (int i=1, num, x; i<=n; i++) {\n        cin>>op;\n        rt1[i] = rt1[i-1], rt2[i] = rt2[i-1];\n        if (op[0] == 's') {\n            cin>>s>>num;\n            x = getid(s);\n            int res = query(rt1[i], 1, INF, x, x);\n            if (res) rt2[i] = update(rt2[i], 1, INF, res, -1);\n            rt2[i] = update(rt2[i], 1, INF, num, 1);\n            rt1[i] = update(rt1[i], 1, INF, x, num-res);\n        } else if (op[0] == 'r') {\n            cin>>s;\n            x = getid(s);\n            int res = query(rt1[i], 1, INF, x, x);\n            rt1[i] = update(rt1[i], 1, INF, x, -res);\n            if (res) rt2[i] = update(rt2[i], 1, INF, res, -1);\n        } else if (op[0] == 'q') {\n            cin>>s;\n            x = getid(s);\n            int res = query(rt1[i], 1, INF, x, x);\n            if (res == 0) cout<<\"-1\"<<endl;\n            else if (res == 1) cout<<\"0\"<<endl;\n            else cout<<query(rt2[i], 1, INF, 1, res-1)<<endl;\n        } else {\n            cin>>num;\n            rt1[i] = rt1[i-num-1], rt2[i] = rt2[i-num-1];\n        }\n        cout<<flush;\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1614480952,
        "uid": 255095,
        "name": "PragmaGCC",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF916D\u3010Jamie and To-do List\u3011"
    },
    {
        "content": "#### CF916D\n\n\u5199\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u652f\u6301\u4e00\u4e0b\u51e0\u79cd\u64cd\u4f5c\n\n1\u3001$set\\space a\\space  x$:\u5c06\u5b57\u7b26\u4e32$a$\u63d2\u5165\u96c6\u5408\uff0c\u5c06\u5176\u6743\u503c\u7f6e\u4e3a$x$\u3002\n\n2\u3001$remove$ $a$:\u5c06\u5b57\u7b26\u4e32$a$\u79fb\u51fa\u96c6\u5408\n\n3\u3001$query \\space a$:\u8be2\u95ee\u96c6\u5408\u4e2d\u6709\u51e0\u4e2a\u5b57\u7b26\u4e32\u6743\u503c\u5c0f\u4e8e$a$\u7684\u6743\u503c\n\n4\u3001$Undo \\space x$\u64a4\u9500\u524d$x$\u6b65\u64cd\u4f5c\u3002\n\n\u770b\u5230$Undo$\u64cd\u4f5c\uff0c\u8003\u8651\u62ff\u4e3b\u5e2d\u6811\u7ef4\u62a4\u3002\n\n\u5b57\u7b26\u4e32\u5b9e\u9645\u4e0a\u662f\u6ca1\u7528\u7684\uff0c\u53ea\u9700\u8981\u62ff$map$\u641e\u4e2a\u6620\u5c04\u5c31\u53ef\u4ee5\u628a\u5b57\u7b26\u4e32\u8f6c\u5316\u6210\u6574\u6570\u7684\u3002\n\n\u8003\u8651\u6ca1\u6709$Undo$\u64cd\u4f5c\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5b57\u7b26\u4e32$a$\uff0c\u6211\u4eec\u53ea\u9700\u62ff\u4e00\u4e2a\u6570\u7ec4\u7ef4\u62a4\u6bcf\u4e2a\u5b57\u7b26\u4e32\u7684\u6743\u503c\uff0c\u5e76\u4e14\u7528\u4e00\u68f5\u6743\u503c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6bcf\u4e2a\u6743\u503c\u6709\u591a\u5c11\u4e2a\u5b57\u7b26\u4e32\u5373\u53ef\u3002\n\n\u8003\u8651\u6709$Undo$\u64cd\u4f5c\uff0c\u5bb9\u6613\u60f3\u5230\u628a\u6743\u503c\u7ebf\u6bb5\u6811\u6539\u4e3a\u4e3b\u5e2d\u6811\u3002\n\n\u4f46\u6211\u4eec\u53d1\u73b0\u5b57\u7b26\u4e32\u6743\u503c\u4e5f\u9700\u8981\u652f\u6301\u53ef\u6301\u4e45\u5316\uff0c\u56e0\u6b64\u62ff\u53e6\u5916\u4e00\u68f5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6bcf\u4e2a\u65f6\u523b\u6bcf\u4e2a\u5b57\u7b26\u4e32\u6743\u503c\u5373\u53ef\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<map>\n#define N 10000005\n#define MAXN 100005\n#define MAXS 1000000005\nusing namespace std;\nint read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}\n\treturn x*f;\n}\nstruct Trump_Tree\n{\n\tint rt[N],lc[N],rc[N],cnt,sum[N];\n\tint modify(int l,int r,int k,int x,int val)\n\t{\n\t\tint u=++cnt,mid=(l+r)>>1;lc[u]=lc[k];rc[u]=rc[k];\n\t\tif(l==r){sum[u]=max(0,sum[k]+val);return u;}\n\t\tif(x<=mid)lc[u]=modify(l,mid,lc[k],x,val);\n\t\telse rc[u]=modify(mid+1,r,rc[k],x,val);\n\t\tsum[u]=sum[lc[u]]+sum[rc[u]];\n\t\treturn u;\n\t}\n\tint query(int l,int r,int k,int x,int y)\n\t{\n\t\tif(l>=x&&r<=y)return sum[k];\n\t\tint mid=(l+r)>>1,res=0;\n\t\tif(x<=mid)res+=query(l,mid,lc[k],x,y);\n\t\tif(y>mid)res+=query(mid+1,r,rc[k],x,y);\n\t\treturn res;\n\t}\n\tvoid Undo(int now,int lst){rt[now]=rt[lst];}\n}S;\nstruct node\n{\n\tint rt[N],lc[N],rc[N],v[N],cnt;\n\tint modify(int l,int r,int k,int x,int val)\n\t{\n\t\tint u=++cnt,mid=(l+r)>>1;lc[u]=lc[k];rc[u]=rc[k];\n\t\tif(l==r){v[u]=val;return u;}\n\t\tif(x<=mid)lc[u]=modify(l,mid,lc[k],x,val);\n\t\telse rc[u]=modify(mid+1,r,rc[k],x,val);\n\t\treturn u;\n\t}\n\tint query(int l,int r,int k,int x)\n\t{\n\t\tif(l==r)return v[k];\n\t\tint mid=(l+r)>>1;\n\t\tif(x<=mid)return query(l,mid,lc[k],x);\n\t\telse return query(mid+1,r,rc[k],x);\n\t}\n\tvoid Undo(int now,int lst){rt[now]=rt[lst];}\n}T;\nmap<string,int>mp;\nstring opt,x;\nint tot,beS[N],beT[N],allS,allT;\nint main()\n{\n\t//freopen(\"A.out\",\"w\",stdout);\n\tint q;cin>>q;\n\tfor(int i=1;i<=q;i++)\n\t{\n\t\tint tmp;cin>>opt;\n\t\tbeS[i]=allS;beT[i]=allT;\n\t\tif(opt[0]=='u')\n\t\t{\n\t\t\tcin>>tmp;allS++;allT++;\n\t\t\tT.Undo(allT,beT[i-tmp]);\n\t\t\tS.Undo(allS,beS[i-tmp]);\n\t\t\tcontinue;\n\t\t}\n\t\tcin>>x;\n\t\tif(mp[x]==0)mp[x]=++tot;\n\t\tint pos=mp[x];\n\t\tif(opt[0]=='s')\n\t\t{\n\t\t\tcin>>tmp;\n\t\t\tint xx=T.query(1,MAXN,T.rt[allT],pos);\n\t\t\tif(xx){allS++;S.rt[allS]=S.modify(1,MAXS,S.rt[allS-1],xx,-1);}\n\t\t\tallS++;S.rt[allS]=S.modify(1,MAXS,S.rt[allS-1],tmp,1);\n\t\t\tallT++;T.rt[allT]=T.modify(1,MAXN,T.rt[allT-1],pos,tmp);\n\t\t}\n\t\telse if(opt[0]=='q')\n\t\t{\n\t\t\tint xx=T.query(1,MAXN,T.rt[allT],pos);\n\t\t\tif(xx==1){puts(\"0\");continue;}\n\t\t\tprintf(\"%d\\n\",xx==0?-1:S.query(1,MAXS,S.rt[allS],1,xx-1));\n\t\t}\n\t\telse if(opt[0]=='r')\n\t\t{\n\t\t\tint xx=T.query(1,MAXN,T.rt[allT],pos);\n\t\t\tif(!xx)continue;\n\t\t\tallT++;T.rt[allT]=T.modify(1,MAXN,T.rt[allT-1],pos,0);\n\t\t\tallS++;S.rt[allS]=S.modify(1,MAXS,S.rt[allS-1],xx,-1);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1610453652,
        "uid": 179600,
        "name": "shao0320",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF916D \u3010Jamie and To-do List\u3011"
    }
]