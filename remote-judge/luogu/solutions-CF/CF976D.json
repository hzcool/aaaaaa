[
    {
        "content": "[My blog](https://taoist-yu.github.io/2019/01/20/Codeforces-976D%20Degree%20Set/)\n\n# \u4e24\u4e2a\u7ed3\u8bba\n1. \u5bf9\u4e8e\u4e00\u4e2a\u9876\u70b9\u6570\u4e3an\u7684\u5b8c\u5168\u56fe\uff0c\u5ea6\u6570\u96c6\u5408\u4e3a{n-1}\n~~~\n    \u8bc1\u660e\uff1a\n    n\u5b8c\u5168\u56fe\u4e2d\u6bcf\u4e2a\u9876\u70b9\u90fd\u4e0e\u53e6\u5916n-1\u4e2a\u70b9\u6709\u8fde\u8fb9\n    \u5373\uff0cn\u5b8c\u5168\u56fe\u4e2d\u6709n\u4e2a\u5ea6\u6570\u4e3an-1\u7684\u9876\u70b9\n    \u5ea6\u6570\u96c6\u5408\u4e3a{n-1}\n~~~\n2. \u5bf9\u4e8e\u4e00\u4e2a\u9876\u70b9\u6570\u4e3an\u4e2a\u9876\u70b9\u7684\u56fe\uff0c\u53d6k\u2208[1,n]\uff0c\u4ee4[1,k]\u4e2d\u6240\u6709\u9876\u70b9\u4e0e\u56fe\u4e2d\u6240\u6709\u9876\u70b9\u8fde\u8fb9\uff0c\u5219[1,k]\u4e2d\u6240\u6709\u9876\u70b9\u5ea6\u6570\u4e3an-1\uff0c[k+1,n]\u4e2d\u6240\u6709\u9876\u70b9\u5ea6\u6570\u4e3ak\u3002\n~~~\n    \u8bc1\u660e\uff1a\n    1.\u5bf9\u4e8e\u9876\u70b9v\u2208[1,k]\n    v\u4e0e\u56fe\u4e2d\u9664\u81ea\u8eab\u5916\u6240\u6709n-1\u4e2a\u9876\u70b9\u90fd\u6709\u8fde\u8fb9\uff0c\u5ea6\u6570\u4e3an-1.\n    2.\u5bf9\u4e8e\u9876\u70b9v\u2208[k+1,n]\n    v\u4e0e[1,k]\u4e2d\u6240\u6709\u9876\u70b9\u8fde\u8fb9\uff0c\u5ea6\u6570\u4e3ak\n    \u5ea6\u6570\u96c6\u5408\u4e3a{k,n-1}\n~~~\n\u5176\u4e2d\u7ed3\u8bba1\u662f\u7ed3\u8bba2\u7684\u7279\u4f8b\uff08\u53d6k = n\uff09\n\n# \u9898\u76ee\u5206\u6790\n&emsp;&emsp;\n\u6211\u4eec\u73b0\u5728d[n]+1\u4e2a\u9876\u70b9\uff0c\u9700\u8981\u5c06\u5176\u6784\u9020\u6210\u4e00\u4e2a\u5ea6\u6570\u96c6\u4e3a{d[1],d[2]....d[n]\u7684\u65e0\u5411\u56fe}\n<br>&emsp;&emsp;\n\u8003\u8651\u7ed3\u8bba2\uff0c\u6211\u4eec\u4ee4[ 1\uff0cd[1] ]\u4e2d\u6240\u6709\u9876\u70b9\u4e0e\u56fe\u4e0a\u6240\u6709\u9876\u70b9\u8fde\u8fb9\uff0c\u5219\u53ef\u5f97[ 1, d[1] ]\u4e2d\u6240\u6709\u9876\u70b9\u5ea6\u6570\u4e3ad[n]\uff0c\u5269\u4e0b\u6240\u6709\u9876\u70b9\u5ea6\u6570\u4e3ad[1]\u3002\u6211\u4eec\u5c06\u56fe\u4e2d\u9876\u70b9\u5212\u5206\u4e3a3\u4e2a\u90e8\u5206\n~~~\n1. [ 1, d[1] ]\u4e2d\u6240\u6709\u9876\u70b9\u5ea6\u6570\u4e3ad[n]\u3002\n2. [ d[1]+1, d[n-1]+1 ]\u4e2d\u6240\u6709\u9876\u70b9\u5ea6\u6570\u4e3ad[1]\u3002\n3. [ d[n-1]+2, d[n] ]\u4e2d\u6240\u6709\u9876\u70b9\u5ea6\u6570\u4e3ad[1]\u3002\n~~~\n&emsp;&emsp;\u6b64\u65f6\u6211\u4eec\u7684\u5ea6\u6570\u96c6\u5408\u4e3a{d[1], d[n]}, \u63a5\u4e0b\u6765\u53ea\u9700\u8981\u5728\u7b2c2\u90e8\u5206\u4e2d\u8fde\u8fb9\uff0c\u4f7f\u5f97\u5ea6\u6570\u96c6\u5408\u4e2d\u51fa\u73b0d[2],d[3]...d[n-1]\u5373\u53ef\u3002\n<br>&emsp;&emsp;\n\u95ee\u9898\u8f6c\u5316\u4e3a\uff1a\u6784\u9020\u4e00\u4e2a\u9876\u70b9\u6570\u4e3ad[n-1]-d[1]+1\u7684\u65e0\u5411\u56fe\uff0c\u4f7f\u5176\u5ea6\u6570\u96c6\u4e3a{d[2]-d[1]\uff0cd[3]-d[1]\uff0c....d[n-1]-d[1]},\u8fd9\u662f\u4e00\u4e2a\u4e0e\u539f\u95ee\u9898\u7c7b\u4f3c\u7684\u89c4\u6a21\u66f4\u5c0f\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u91cd\u590d\u4e0a\u8ff0\u64cd\u4f5c\u3002\n\n# \u6838\u5fc3\u4ee3\u7801\n\u6211\u4eec\u6bcf\u6b21\u90fd\u5c061~d[1]\u4e2d\u9876\u70b9\u4e0e\u56fe\u4e0a\u6240\u6709\u9876\u70b9\u8fde\u8fb9\uff0c\u7136\u540e\u5ffd\u75651~d[1]\u4e0ed[n-1]+2~d[n]+1,\u5728\u533a\u95f4d[2]~d[n-1]+1\u4e0a\u91cd\u590d\u540c\u6837\u7684\u64cd\u4f5c\u3002\n~~~cpp\n    //\u5f53\u524d\u7684\u6700\u5de6\u7aef\u533a\u95f4\u4e0e\u6700\u53f3\u7aef\u533a\u95f4\n    int left = 1, right = n;\n    //\u8bb0\u5f55\u8fb9\u6570\n    int cot = 0;\n    while (left <= right)\n    {\n        for (int i = d[left - 1] + 1; i <= d[left]; i++)\n            for (int j = i+1; j <= d[right] + 1; j++)\n            {\n                ans.push_back(edge(i,j));\n                cot++;\n            }\n        left++;\n        right--;\n    }\n~~~\n\n# \u5b8c\u6574\u4ee3\u7801\n~~~cpp\n#include <iostream>\n#include <algorithm>\n#include <string>\n#include <queue>\n#include <list>\n#include <string.h>\nusing namespace std;\n\nint d[310] = {};\n\nstruct edge\n{\n    int u;\n    int v;\n    edge(int u, int v)\n    {\n        this->u = u;\n        this->v = v;\n    }\n};\nlist<edge> ans;\n\nint main()\n{\n    int n;\n    cin >> n;\n    for (int i = 1; i <= n; i++)\n        cin >> d[i];\n\n    int l = 1, r = n;\n    int cot = 0;\n    while (l <= r)\n    {\n        for (int i = d[l - 1] + 1; i <= d[l]; i++)\n            for (int j = i+1; j <= d[r] + 1; j++)\n            {\n                ans.push_back(edge(i,j));\n                cot++;\n            }\n        l++;\n        r--;\n    }\n\n    cout<<cot;\n    for(edge a : ans)\n    {\n        cout<<endl<<a.u<<' '<<a.v;\n    }\n    return 0;\n}\n~~~\n",
        "postTime": 1547973188,
        "uid": 14084,
        "name": "\u5b87\u9053\u4eba",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF976D \u3010Degree Set\u3011(\u5947\u5999\u9012\u63a8)"
    }
]