[
    {
        "content": "CF223E Planar Graph \u9898\u89e3\u3002\n\n\u7b80\u5355\u63d0\u4e00\u4e0b\u5b98\u65b9\u9898\u89e3\u7684 tricky \u505a\u6cd5\u3002\n\n\u9996\u5148\u62ff\u5230\u9898\u76ee\u7684\u7b2c\u4e00\u53cd\u5e94\u80af\u5b9a\u662f\u5e73\u9762\u56fe\u6b27\u62c9\u5b9a\u7406\u3002\u7136\u540e\u8003\u8651\u6c42\u51fa $F$\u3001$E$ \u5c31\u53ef\u4ee5\u5f97\u5230 $V$\u3002@\u6ed1\u5927\u7a3d \u641e\u51fa\u4e86\u4e00\u4e2a\u57fa\u4e8e [HNOI2016] \u77ff\u533a \u7684\u505a\u6cd5\uff0c\u53ef\u4ee5\u819c\u5979\u3002\u8fd9\u91cc\u662f\u4e0d\u662f\u5e94\u8be5\u7528\u611f\u53f9\u53f7\u3002\n\n\u4e0a\u8ff0\u505a\u6cd5\u662f\u57fa\u4e8e\u5e73\u9762\u56fe\u5bf9\u5076\u7684\u3002\u4f46\u7531\u4e8e\u6b64\u9898\u8be2\u95ee\u7684\u826f\u597d\u6027\u8d28\uff0c\u6240\u4ee5\u5e76\u4e0d\u9700\u8981\u5bf9\u5076\u3002\n\n\u5177\u4f53\u5730\uff0c\u6bcf\u4e00\u6b21\u8be2\u95ee\u90fd\u662f\u4e00\u4e2a\u73af\u72b6\u7ed3\u6784\u3002\u8fd9\u4f7f\u5f97\u9700\u8981\u88ab\u7edf\u8ba1\u7684\u70b9\uff08\u73af\u5185\u70b9\uff09\u5fc5\u987b\u7ecf\u8fc7\u73af\u4e0a\u70b9\u624d\u80fd\u591f\u5230\u8fbe\u73af\u5916\u3002\u8003\u8651\u5229\u7528\u8fd9\u4e2a\u6027\u8d28\u8ba1\u6570\u3002\n\n\u6784\u9020\u4e00\u4e2a\u6d41\u6a21\u578b\uff1a\u4ee5\u67d0\u4e2a\u70b9\u4f5c\u4e3a\u6c47\u70b9\uff0c\u4e3a\u6bcf\u4e2a\u70b9\u8d4b\u4e88 $1$ \u7684\u989d\u5916\u6d41\u91cf\uff0c\u8ba9\u6240\u6709\u70b9\u90fd\u5411\u7740\u6c47\u70b9\u6d41\u53bb\u3002\u6bcf\u6b21\u8be2\u95ee\uff0c\u8ba1\u6570 \u6d41\u51fa\u73af \u548c \u6d41\u5165\u73af \u7684\u6d41\u6570\u91cf\u4e4b\u5dee\uff0c\u5373\u4e3a\u6240\u6c42\u3002\n\n\u6b63\u786e\u6027\u8bc1\u660e\uff0c\u8003\u8651\u73af\u5185\u70b9\u6d41\u51fa\u5fc5\u987b\u7ecf\u8fc7\u73af\uff0c\u73af\u5916\u70b9\u82e5\u6709\u6d41\u7ecf\u73af\u5185\uff0c\u5219\u5fc5\u5b9a\u4f1a\u6d41\u51fa\u73af\u3002\n\n\u5982\u4f55\u7edf\u8ba1\u8fd9\u6837\u7684\u6d41\u7684\u6570\u91cf\u5462\uff1f\u9996\u5148\u56fe\u4e0a\u7edf\u8ba1\u663e\u7136\u662f\u52a3\u7684\uff0c\u8003\u8651\u6784\u5efa\u4e00\u9897\u539f\u56fe\u7684\u751f\u6210\u6811\u3002\u82e5\u6b64\u65f6\u6211\u4eec\u5c06\u6d41\u7f51\u7edc\u7684\u6c47\u70b9\u8bbe\u4e3a\u4e00\u4e2a\u6781\u503c\u70b9\uff08\u6bd4\u5982\u56fe\u7684\u6700\u5de6\u4fa7\u3001\u6700\u53f3\u4fa7\u70b9\u6216\u65b0\u5efa\u4e00\u4e2a\u6781\u8fdc\u70b9\uff09\uff0c\u5e76\u5c06\u6c47\u70b9\u4f5c\u4e3a\u751f\u6210\u6811\u7684\u6839\uff0c\u90a3\u4e48\u6240\u6709\u73af\u8fb9\u754c\u4e0a\u70b9\u7684\u90bb\u8fb9\u4e2d\u4ea7\u751f\u73af\u5185\u6d41\u5411\u7684\u5fc5\u5b9a\u4f1a\u5f62\u6210\u4e00\u6bb5\u503e\u659c\u89d2\u8fde\u7eed\u7684\u533a\u95f4\uff0c\u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u70b9\u7684\u51fa\u8fb9\u505a\u6781\u89d2\u6392\u5e8f\u5e76\u5904\u7406\u524d\u7f00\u548c\uff0c\u8fd9\u6837\u6bcf\u6b21\u8be2\u95ee\u5c31\u53ef\u4ee5\u5feb\u901f\u7edf\u8ba1\u7b54\u6848\u3002\n\n\u505a\u6cd5\u57fa\u672c\u5c31\u8fd9\u6837\uff0c\u4f46\u6709\u51e0\u4e2a\u5c0f\u7684\u5b9e\u73b0\u7ec6\u8282\u3002\n\n1. \u6ce8\u610f\u5230\u8d21\u732e\u6709\u6b63\u6709\u8d1f\uff0c\u53ef\u4ee5\u5728\u751f\u6210\u6811\u4e0a\u5c06\u7236\u8fb9\u8d21\u732e\u8bbe\u4e3a\u8d1f\u6743\uff0c\u5b50\u8fb9\u8d21\u732e\u8bbe\u4e3a\u6b63\u6743\uff0c\u8fd9\u6837\u53ef\u4ee5\u4e00\u8d77\u7edf\u8ba1\u3002\n2. \u56e0\u4e3a\u9700\u8981\u53d6\u7684\u662f\u6781\u89d2\u6392\u5e8f\u540e\u7684\u4e00\u6bb5\u8fde\u7eed\u533a\u95f4\uff0c\u6240\u4ee5\u73af\u4e0a\u70b9\u5fc5\u987b\u56fa\u5b9a\u987a/\u9006\u65f6\u9488\u3002\u9898\u7ed9\u70b9\u5e76\u672a\u4fdd\u8bc1\u987a\u9006\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u53c9\u79ef\u6c42\u9762\u79ef\u540e\u7684\u6b63\u8d1f\u6027\u6765\u5224\u65ad\uff0c\u4ece\u800c\u4fdd\u8bc1\u987a\u5e8f\u3002",
        "postTime": 1663720455,
        "uid": 106182,
        "name": "KaisuoShutong",
        "ccfLevel": 0,
        "title": "\u4e0b\u96e8\u5929\u4e86\u600e\u4e48\u529e  \u6211\u597d\u60f3\u4f60"
    },
    {
        "content": "\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u79cd\u5e73\u9762\u56fe\u6b27\u62c9\u5b9a\u7406\u7684\u505a\u6cd5\uff0c\u5b98\u65b9\u9898\u89e3\u8fc7\u4e8e\u601d\u7ef4\u3002\u611f\u89c9\u8fd9\u79cd\u601d\u8def\u4f1a\u597d\u60f3\u4e00\u4e9b\uff1f\n\n\u9996\u5148\u6211\u4eec\u8003\u8651\uff0c\u8fd9\u9898\u662f\u8be2\u95ee\u4e00\u4e2a\u5e73\u9762\u56fe\u7684\u4e00\u4e2a\u73af\u5185\u6709\u591a\u5c11\u70b9\u3002\u90a3\u4e48\u70b9\u6570\u6211\u4eec\u4e0d\u597d\u6c42\uff0c\u4f46\u662f\u73af\u53bb\u5272\u5e73\u9762\u56fe\uff0c\u5f97\u5230\u7684\u5b50\u56fe\u4e00\u5b9a\u662f\u8054\u901a\u7684\u3002\u5e76\u4e14\u9762\u6570\u6211\u4eec\u4e5f\u5f88\u597d\u6c42\u3002\u90a3\u4e48\u8003\u8651\u6c42\u51fa\u8fb9\u6570\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u70b9\u6570\u4e86\u3002\n\n\u8fb9\u6570\u6211\u4eec\u76f4\u63a5\u7d2f\u52a0\u6bcf\u4e2a\u73af\u5185\u90e8\u9762\u7684\u76f8\u90bb\u7684\u8fb9\u6570\u91cf\u3002\u90a3\u4e48\u53d1\u73b0\u6211\u4eec\u9700\u8981\u7684\u8fb9\u4e2d\uff0c\u9664\u4e86\u8fb9\u754c\u7684\u8fb9\u53ea\u88ab\u8ba1\u6570\u4e86\u4e00\u6b21\uff0c\u5176\u5b83\u90fd\u88ab\u8ba1\u6570\u4e86\u4e24\u6b21\u3002\u901a\u8fc7\u8fd9\u4e2a\u6211\u4eec\u5bb9\u6613\u7b97\u51fa\u6b63\u786e\u7684\u8fb9\u6570\u3002\n\n\u81f3\u4e8e\u5982\u4f55\u627e\u5230\u6211\u4eec\u9700\u8981\u7684\u9762\uff0c\u53ef\u4ee5\u4f7f\u7528\u77ff\u533a\u90a3\u9898\u7684\u505a\u6cd5\u3002\u6ce8\u610f\u4e00\u5b9a\u662f\u8981\u5916\u90e8\u9762\u4f5c\u4e3a\u6839\uff0c\u5426\u5219\u7edf\u8ba1\u4e0d\u5bf9\u3002\u627e\u5916\u90e8\u9762\u8fd8\u662f\u9700\u8981\u7b97\u7b97\u9762\u79ef\u3002\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#define ll long long\nusing namespace std;\nnamespace shik{\n\tconst int N=2e5+5;\n\tstruct infor{\n\t\tint x,rev,bel,id;\n\t};\n\tvector<infor>g[N];\n\tstruct vec{\n\t\tint x,y;\n\t\tvec operator-(const vec b)const{return (vec){x-b.x,y-b.y};}\n\t\tll operator*(const vec b)const{return 1ll*x*b.y-1ll*y*b.x;}\n\t}p[N],p0;\n\tstruct edge{\n\t\tint x,y,z;\n\t}e[N];\n\tint k[N],val[N],fa[N],si[N],a[N];\n\tint tot=0,su=0,root,cnt,E,tot2=0;\n\tbool usd[N];\n\tinline char gc()\n\t{\n\t\tstatic char buf[1<<16],*S,*T;\n\t\tif(S==T)\n\t\t{\n\t\t\tT=(S=buf)+fread(buf,1,1<<16,stdin);\n\t\t\tif(S==T)return EOF;\n\t\t}\n\t\treturn *(S++);\n\t}\n\t#define getchar gc\n\tinline ll read()\n\t{\n\t\tchar h=getchar();\n\t\tll y=0;int q=1;\n\t\twhile(h<'0'||h>'9'){if(h=='-')q=-1;h=getchar();}\n\t\twhile(h>='0'&&h<='9')y=y*10+h-'0',h=getchar();\n\t\treturn y*q;\n\t}\n\tbool cmp(infor x,infor y)\n\t{\n\t\tvec a=p[x.x]-p0,b=p[y.x]-p0;\n\t\tif((a.y>=0)!=(b.y>=0))return a.y>=0;\n\t\tif(a.y==0&&b.y==0)return a.x>b.x;\n\t\treturn a*b>0;\n\t}\n\tinline void work(int st,infor &v)\n\t{\n\t\tv.bel=++tot;val[tot]++;\n\t\tint x=v.x,res;ll s=0;infor *la=&v;\n\t\twhile(x!=st)\n\t\t{\n\t\t\tla=&g[x][(la->rev==g[x].size()-1)?0:la->rev+1];\n\t\t\tres=x,x=la->x;la->bel=tot;val[tot]++;s+=(p[x]-p[st])*(p[res]-p[st]);\n\t\t}\n\t\tif(s<0)root=tot;\n\t}\n\tinline void add(int a,int b,int c){e[++su]=(edge){k[a],b,c};k[a]=su;}\n\tvoid dfs(int x)\n\t{\n\t\tsi[x]=1;\n\t\tfor(int i=k[x];i;i=e[i].x)if(!si[e[i].y])fa[e[i].y]=x,dfs(e[i].y),val[x]+=val[e[i].y],si[x]+=si[e[i].y],usd[e[i].z]=1;\n\t}\n\tinline void calc(int x,int y)\n\t{\n\t\tp0=p[x];\n\t\tinfor res=g[x][lower_bound(g[x].begin(),g[x].end(),(infor){y},cmp)-g[x].begin()],res2=g[y][res.rev];\n\t\tif(!usd[res.id]&&!usd[res2.id])return;\n\t\tint a=res.bel,b=res2.bel;\n\t\tif(a==fa[b])cnt+=si[b],E+=val[b];\n\t\telse cnt-=si[a],E-=val[a];\n\t}\n\tint main()\n\t{\n\t\tint n=read(),m=read();\n\t\tfor(int a,b,i=1;i<=m;i++)a=read(),b=read(),g[a].push_back((infor){b}),g[b].push_back((infor){a});\n\t\tfor(int i=1;i<=n;i++)p[i].x=read(),p[i].y=read();\n\t\tfor(int i=1;i<=n;i++)p0=p[i],sort(g[i].begin(),g[i].end(),cmp);\n\t\tfor(int i=1;i<=n;i++)\n\t\tfor(int res,j=0;j<g[i].size();j++)res=g[i][j].x,p0=p[res],g[i][j].rev=lower_bound(g[res].begin(),g[res].end(),(infor){i},cmp)-g[res].begin();\n\t\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=0;j<g[i].size();j++)if(!g[i][j].bel)work(i,g[i][j]);\n\t\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=0;j<g[i].size();j++)add(g[i][j].bel,g[g[i][j].x][g[i][j].rev].bel,(g[i][j].id=++tot2));\n\t\tdfs(root);\n\t\tint t=read();\n\t\twhile(t--)\n\t\t{\n\t\t\tint s=read();cnt=E=0;\n\t\t\tfor(int i=1;i<=s;i++)a[i]=read();\n\t\t\tfor(int i=1;i<s;i++)calc(a[i],a[i+1]);\n\t\t\tcalc(a[s],a[1]);\n\t\t\tif(cnt<0)cnt=-cnt,E=-E;\n\t\t\tE+=s;E>>=1;\n\t\t\tcout<<(E-cnt+1)<<\"\\n\"; \n\t\t}\n\t\treturn 0;\n\t}\n}\nint main(){return shik::main();}\n```",
        "postTime": 1663728666,
        "uid": 203743,
        "name": "\u6ed1\u5927\u7a3d",
        "ccfLevel": 7,
        "title": "CF223E Planar Graph\u9898\u89e3"
    }
]