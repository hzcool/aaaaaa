[
    {
        "content": "### $Solution$\n\u8fd8\u662f\u770b\u4ee3\u7801\u6700\u597d\u7406\u89e3\u5427\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u5c06x\u5750\u6807\u5de6\u53f3\u53cd\u8f6c\uff0c\u518d\u5c06\u6240\u6709\u9ad8\u5ea6\u53d6\u53cd\uff0c\u8fd9\u6837\u4f9d\u7136\u662f\u7ef4\u62a4\u4ece\u5de6\u5230\u53f3\u7684LIS\uff0c\u4f46\u662f\u6bcf\u6b21\u662f\u5728\u53f3\u8fb9\u5220\u9664\u5143\u7d20\u3002\n\n\u8fd9\u6837\u5bf9\u4e8e\u5728p\u521a\u79cd\u7684\u6811\uff0c\u6700\u591a\u53ea\u67099\u68f5\u6811\u6bd4\u5b83\u9ad8\uff0c\u5373\u5b83\u53ea\u4f1a\u8f6c\u79fb\u5230\u8fd99\u68f5\u6811\uff0c\u9664\u8fd99\u68f5\u6811\u5916\uff0c\u5b83\u53ef\u4ee5\u4ece1~p-1\u7684\u4efb\u4f55\u6811\u8f6c\u79fb\uff08\u5176\u5b839\u68f5\u6811\u9664\u6bd4\u5b83\u9ad8\u7684\u5916 \u540c\u6837\u53ef\u4ee5\u4ece\u5b83\u524d\u9762\u4efb\u4f55\u6811\u8f6c\u79fb\uff09\u3002\n\n\u6211\u4eec\u628a\u8fd99\u68f5\u6811\u7684DP\u503c\u66b4\u529b\u5220\u6389\uff0c\u7136\u540e\u4ece\u4f4e\u5230\u9ad8 \u4ece1~pos[h]-1\u8f6c\u79fb\u5e76\u66f4\u65b0\u3002\u6309\u9ad8\u5ea6\u66f4\u65b0\u5c31\u53ea\u9700\u8981\u8003\u8651\u4f4d\u7f6e\u5408\u4e0d\u5408\u6cd5\u4e86\u3002\n\n\u6211\u4eec\u5bf9\u4f4d\u7f6e\u5efa\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6bcf\u4e2a\u4f4d\u7f6e\u7684DP\u503c\uff0c\u5c31\u53ea\u6709\u5355\u70b9\u4fee\u6539\u3001\u533a\u95f4max\u3002\n\n\u5bf9\u4e8e\u780d\u6389\u53f3\u6570\u7b2ck\u68f5\u6811\uff0c\u8bbe\u4f4d\u7f6e\u4e3ap\uff0c\u56e0\u4e3a\u53ea\u6709\u53f3\u8fb9\u6700\u591a9\u68f5\u6811\u4ece\u5b83\u8f6c\u79fb\uff0c\u540c\u6837\u5c06\u5b83\u4eec\u7684DP\u503c\u66b4\u529b\u5220\u6389\uff0c\u7136\u540e\u5220\u6389\u4f4d\u7f6ep\u7684DP\u503c\u3002\n\n\u4f46\u662f\u53f3\u8fb910\u68f5\u6811\u4e0d\u4e00\u5b9a\u662f\u6700\u9ad8\u7684\uff0c\u867d\u7136\u5b83\u4eec\u53ef\u4ee5\u4ece\u524d\u9762\u6240\u6709\u6811\u8f6c\u79fb\uff0c\u4f46\u8fd8\u8981\u6ee1\u8db3\u9ad8\u5ea6\u5c0f\u4e8e\u5b83\u4eec\u3002\n\n\u8fd9\u53ef\u4ee5\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u3002\u4f46\u662f\u6211\u4eec\u53ea\u9700\u8981\u7528\u53e6\u4e00\u68f5\u7ebf\u6bb5\u6811\u5bf9\u6bcf\u4e2a\u9ad8\u5ea6\u7ef4\u62a4\u540c\u6837\u7684DP\u503c\uff08\u4e0d\u540c\u4f4d\u7f6e\u9ad8\u5ea6\u4e0d\u540c\uff09\uff0c\u5c31\u53ef\u4ee5\u4ece\u5de6\u5230\u53f3\uff0c\u76f4\u63a5\u7528\u7ebf\u6bb5\u6811\u67e5\u8be2\u5e76\u66f4\u65b0\u4e86\u3002\n\n\u8fd9\u6837\u5728\u4e00\u68f5\u7ebf\u6bb5\u6811\u4e0a\u66f4\u65b0\u5b8cDP\u503c\u540e\u5728\u53e6\u4e00\u68f5\u4e0a\u6539\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6$O(10n\\log n)$\u3002\n\n\u603b\u7ed3\uff1a\u662f\u6700\u9ad8\u768410\u68f5\u5c31\u5728\u7ef4\u62a4\u4f4d\u7f6eDP\u503c\u7684\u7ebf\u6bb5\u6811\u4e0a\u8f6c\u79fb\uff0c\u662f\u6700\u9760\u53f3\u768410\u68f5\u5c31\u5728\u7ef4\u62a4\u9ad8\u5ea6DP\u503c\u7684\u7ebf\u6bb5\u6811\u4e0a\u8f6c\u79fb\u3002\u6700\u540e\u66f4\u65b0\u4e00\u4e0b\u53e6\u4e00\u68f5\u7684DP\u503c\uff08\u7ef4\u62a4\u7684\u90fd\u662f\u4e00\u6837\u7684\uff09\u3002\n\n```cpp\n#include <set>\n#include <cstdio>\n#include <cctype>\n#include <algorithm>\n#define gc() getchar()\ntypedef long long LL;\nconst int N=2e5+15;\n\nint pos[N],h[N];\nstd::set<int> st;\nstruct Segment_Tree\n{\n\t#define ls rt<<1\n\t#define rs rt<<1|1\n\t#define lson l,m,ls\n\t#define rson m+1,r,rs\n\t#define S N<<2\n\tint f[N],mx[S];\n\t#undef S\n\n\t#define Update(rt) mx[rt]=std::max(mx[ls],mx[rs])\n\tvoid Modify(int l,int r,int rt,int p,int v)\n\t{\n\t\tif(l==r) {mx[rt]=v; return;}\n\t\tint m=l+r>>1;\n\t\tif(p<=m) Modify(lson,p,v);\n\t\telse Modify(rson,p,v);\n\t\tUpdate(rt);\n\t}\n\tint Query(int l,int r,int rt,int R)\n\t{\n\t\tif(r<=R) return mx[rt];\n\t\tint m=l+r>>1;\n\t\tif(m<R) return std::max(Query(lson,R),Query(rson,R));\n\t\treturn Query(lson,R);\n\t}\n\tvoid Insert(int p,int n)//\u5bf9\u4e8e\u65b0\u63d2\u5165\u7684p\u67e5\u8be2DP\u503c\u5e76\u66f4\u65b0 \n\t{\n\t\tModify(0,n,1,p,f[p]=Query(0,n,1,p-1)+1);\n\t}\n}Tp,Th.\n\ninline int read()\n{\n\tint now=0;register char c=gc();\n\tfor(;!isdigit(c);c=gc());\n\tfor(;isdigit(c);now=now*10+c-'0',c=gc());\n\treturn now;\n}\n\nint main()\n{\n\t#define Sp 0,n,1\n\t#define Sh 0,m+10,1\n\tint n=read(),m=read();//pos[i]:\u9ad8i\u7684\u6811\u7684\u4f4d\u7f6e h[i]:i\u4f4d\u7f6e\u7684\u6811\u7684\u9ad8\u5ea6 \n\tfor(int t=1; t<=m; ++t)\n\t\tif(read()==1)//plant\n\t\t{\n\t\t\tint p=n-read()+1,ht=t+10-read();\n\t\t\tpos[ht]=p, h[p]=ht, st.insert(p);\n\t\t\tfor(int i=ht+1; i<=ht+9; ++i)\n\t\t\t\tif(pos[i]) Tp.Modify(Sp,pos[i],0);\n\t\t\tfor(int i=ht; i<=ht+9; ++i)\n\t\t\t\tif(pos[i])\n\t\t\t\t{\n\t\t\t\t\tTp.Insert(pos[i],n);\n\t\t\t\t\tTh.f[i]=Tp.f[pos[i]];\n\t\t\t\t\tTh.Modify(Sh,i,Th.f[i]);\n\t\t\t\t}\n\t\t\tprintf(\"%d\\n\",Tp.mx[1]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint k=read();\n\t\t\tstd::set<int>::iterator it=st.end();\n\t\t\twhile(k--) --it, Th.Modify(Sh,h[*it],0);\n\t\t\tTp.Modify(Sp,*it,0), pos[h[*it]]=0;\n\t\t\tfor(st.erase(it++); it!=st.end(); ++it)\n\t\t\t{\n\t\t\t\tTh.Insert(h[*it],m+10);\n\t\t\t\tTp.f[*it]=Th.f[h[*it]];\n\t\t\t\tTp.Modify(Sp,*it,Tp.f[*it]);\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",Tp.mx[1]);\n\t\t}\n\n\treturn 0;\n}\n```",
        "postTime": 1544270417,
        "uid": 39887,
        "name": "SovietPower\u2728",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF264E \u3010Roadside Trees\u3011"
    },
    {
        "content": "## [CF264E](https://www.luogu.com.cn/problem/CF264E)   \r\n~~\u5927\u53f7\u793e\u8d21\u6ee1\u4e86\u6765\u7ed9\u5c0f\u53f7\u5300\u70b9\u3002~~    \r\n\r\n\u8fd9\u9898\u6709\u51e0\u4e2a\u975e\u5e38\u597d\u7684\u6027\u8d28\u3002   \r\n\r\n\u9996\u5148\uff0c\u6bcf\u68f5\u6811\u79cd\u4e0b\u7684\u65f6\u5019\u9ad8\u5ea6\u4e0d\u4f1a\u8d85\u8fc7 $10$\uff0c\u5e76\u4e14\u6ca1\u6709\u6811\u7684\u9ad8\u5ea6\u662f\u76f8\u540c\u7684\uff0c\u6240\u4ee5\u79cd\u6811\u7684\u65f6\u5019\u6700\u591a\u6709 $9$ \u68f5\u6811\u6bd4\u5b83\u77ee\u3002  \r\n\r\n\u5176\u6b21\uff0c\u780d\u6811\u53ea\u4f1a\u780d\u6389\u524d $10$ \u68f5\uff0c\u540e\u9762\u7684\u90fd\u4e0d\u780d\uff0c\u6240\u4ee5\u780d\u6811\u7684\u65f6\u5019\u524d\u9762\u6700\u591a\u6709 $9$ \u68f5\u6811\u3002   \r\n\r\n\u8fd9\u4e24\u4e2a\u6761\u4ef6\u5728\u503c\u57df\u548c\u4e0b\u6807\u4e0a\u662f\u76f8\u540c\u7684\u3002\u6211\u4eec\u8003\u8651\u8bb0\u5f55\u4ee5 $i$ \u4e3a\u5f00\u5934\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6\uff0c\u5f53\u79cd\u6811\u6216\u780d\u6811\u7684\u65f6\u5019\uff0c\u5c31\u6700\u591a\u4f1a\u6709 $10$ \u4e2a\u503c\u53d8\u5316\u4e86\u3002\u4e00\u68f5\u6811\u7684\u9ad8\u5ea6\u53ef\u4ee5\u8868\u8fbe\u4e3a $h_i-t_i+T$\uff0c$t_i$ \u662f\u79cd\u4e0b\u7684\u65f6\u95f4\uff0c$h_i$ \u662f\u521d\u59cb\u9ad8\u5ea6\uff0c$T$ \u662f\u73b0\u5728\u65f6\u95f4\uff0c\u56e0\u4e3a\u6211\u4eec\u90fd\u57fa\u4e8e\u76f8\u540c\u65f6\u95f4\u6bd4\u8f83\uff0c\u6240\u4ee5\u53ef\u4ee5\u7b80\u5316\u4e3a $h_i-t_i$\u3002   \r\n\r\n\u5bf9\u4e8e\u4e0b\u6807\u5f00\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u7ef4\u62a4\u4e0b\u6807\u5728 $[l,r]$ \u5185\u7684\u6700\u5927 dp \u503c\u3002\u5bf9\u4e8e $h_i-t_i$ \u5f00\u4e00\u68f5\u7ebf\u6bb5\u6811\uff08\u4e3a\u4e86\u907f\u514d\u8d1f\u6570\u4e0b\u6807\uff0c\u5e94\u9002\u5f53\u5e73\u79fb\uff09\uff0c\u7ef4\u62a4 $h_i-t_i$ \u5728 $[l,r]$ \u5185\u7684\u6700\u5927 dp \u503c\uff0c\u90a3\u4e48\u8003\u8651\u4fee\u6539\u64cd\u4f5c\u3002    \r\n\r\n\u79cd\u6811\u65f6\uff0c\u968f\u4fbf\u9009\u4e00\u4e2a\u4e1c\u897f\u6765\u7ef4\u62a4\u9ad8\u5ea6\u4e3a $1 \\sim 10$ \u7684\u6811\u7684\u4f4d\u7f6e\uff08\u8fd9\u91cc\u7684\u9ad8\u5ea6\u662f\u771f\u5b9e\u9ad8\u5ea6\u800c\u975e\u8f6c\u5316\u540e\u7684\u9ad8\u5ea6\uff09\uff0c\u5c06\u9ad8\u5ea6\u5c0f\u4e8e\u5f53\u524d\u79cd\u4e0b\u6811\u7684\u6811\u6240\u5bf9\u5e94\u7684 dp \u503c\u5728\u7ebf\u6bb5\u6811\u4e0a\u5220\u6389\uff0c\u7136\u540e\u6309\u4e0b\u6807\u8ba1\u7b97\u65b0\u52a0\u5165\u7684\u6811\u7684 dp \u503c\uff0c\u5e76\u9006\u5e8f\u63d2\u56de\u6765\uff08\u63d2\u56de\u6765\u7684\u65f6\u5019\u8981\u91cd\u65b0\u8ba1\u7b97\uff09\u3002\u780d\u6811\u65f6\uff0c\u7528 set \u7ef4\u62a4\u524d $10$ \u68f5\u6811\uff0c\u540c\u6837\u7684\u505a\u6cd5\uff0c\u5220\u53bb\u524d\u9762\u7684\u6811\uff0c\u6309\u503c\u57df\u8ba1\u7b97\u65b0\u6811\u7684 dp \u503c\uff0c\u518d\u5012\u7740\u63d2\u56de\u6765\u3002\u603b\u590d\u6742\u5ea6 $\\Theta(n\\log n)$\u3002     \r\n\r\n~~\u5947\u4e11\u65e0\u6bd4\u7684~~\u4ee3\u7801\uff1a   \r\n\r\n```cpp\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nint n,m,k1,k2,k3,k4,k5,k6,k7,k8,k9;\r\nclass SegTree{\r\n\tpublic: \r\n\t\tint st[2000003],ed[2000003],val[2000003];\r\n\t\tvoid build(int now,int l,int r){\r\n\t\t\tst[now]=l;\r\n\t\t\ted[now]=r;\r\n\t\t\tval[now]=0;\r\n\t\t\tif(l==r)return;\r\n\t\t\tbuild(now*2,l,((l+r)>>1));\r\n\t\t\tbuild(now*2+1,((l+r)>>1)+1,r);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvoid modify(int now,int wz,int Val){\r\n\t\t\tif(st[now]>wz||ed[now]<wz)return;\r\n\t\t\tif(st[now]==ed[now]){\r\n\t\t\t\tval[now]=Val;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tmodify(now*2,wz,Val);\r\n\t\t\tmodify(now*2+1,wz,Val);\r\n\t\t\tval[now]=max(val[now*2],val[now*2+1]);\r\n\t\t}\r\n\t\tint Query(int now,int l,int r){\r\n\t\t\tif(st[now]>r||ed[now]<l)return 0;\r\n\t\t\tif(st[now]>=l&&ed[now]<=r)return val[now];\r\n\t\t\treturn max(Query(now*2,l,r),Query(now*2+1,l,r));\r\n\t\t}\r\n}T1,T2;\r\nint les_Tre[1003][2];\r\nint tot;\r\nint apr[300003];\r\nset<int>r;\r\nstruct pr{\r\n\tint v1;\r\n\tint v2;\r\n}stk[1003];\r\nbool comp(pr X,pr Y){\r\n\treturn X.v1<Y.v1;\r\n}\r\nint hs(int X){return X+240000;}\r\nint main(){\r\n\tscanf(\"%d%d\",&n,&m);\r\n\tT1.build(1,1,300000);\r\n\tT2.build(1,1,300000);\r\n\tfor(int u=1;u<=m;u++){\r\n\t\tfor(int j=11;j;j--)les_Tre[j][0]=les_Tre[j-1][0];\r\n\t\tscanf(\"%d%d\",&k1,&k2);\r\n\t\tif(k1==1){\r\n\t\t\tscanf(\"%d\",&k3);\r\n\t\t\tapr[k2]=k3-u;\r\n\t\t\tr.insert(k2);\r\n\t\t\tfor(int j=1;j<k3;j++){\r\n\t\t\t\tif(les_Tre[j][0]==0)continue;\r\n\t\t\t\tT1.modify(1,les_Tre[j][0],0);\r\n\t\t\t}\r\n\t\t\tk4=T1.Query(1,k2+1,300000)+1;\r\n\t\t\tT1.modify(1,k2,k4);\r\n\t\t\tT2.modify(1,hs(apr[k2]),k4);\r\n\t\t\tles_Tre[k3][0]=k2;\r\n\t\t\tfor(int j=k3-1;j;j--){\r\n\t\t\t\tif(les_Tre[j][0]==0)continue;\r\n\t\t\t\tk3=T1.Query(1,les_Tre[j][0]+1,300000)+1;\r\n\t\t\t\tT1.modify(1,les_Tre[j][0],k3);\r\n\t\t\t\tT2.modify(1,hs(apr[les_Tre[j][0]]),k3);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tk1=1;\r\n\t\t\ttot=0;\r\n\t\t\tfor(auto i:r){\r\n\t\t\t\tif(k1>k2)break;\r\n\t\t\t\tstk[++tot].v2=i;\r\n\t\t\t\tstk[tot].v1=apr[i];\r\n\t\t\t\tk1++;\r\n\t\t\t\tT1.modify(1,i,0);\r\n\t\t\t\tT2.modify(1,hs(stk[tot].v1),0);\r\n\t\t\t}\r\n\t\t\tT1.modify(1,stk[tot].v2,0);\r\n\t\t\tT2.modify(1,hs(stk[tot].v1),0);\r\n\t\t\tfor(int j=1;j<=10;j++){\r\n\t\t\t\tif(les_Tre[j][0]==stk[tot].v2)les_Tre[j][0]=0;\r\n\t\t\t}\r\n\t\t\tr.erase(stk[tot].v2);\r\n\t\t\tapr[stk[tot].v2]=0;\r\n\t\t\tfor(int i=tot-1;i>0;i--){\r\n\t\t\t\tk4=T2.Query(1,hs(stk[i].v1+1),300000)+1;\r\n\t\t\t\tT1.modify(1,stk[i].v2,k4);\r\n\t\t\t\tT2.modify(1,hs(stk[i].v1),k4);\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",T1.val[1]);\r\n\t}\r\n\treturn 0;\r\n}\r\n```\r\n",
        "postTime": 1685174597,
        "uid": 932169,
        "name": "Caiest_Oier",
        "ccfLevel": 0,
        "title": "CF264E"
    }
]