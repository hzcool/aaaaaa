[
    {
        "content": "## [CF884F.Anti-Palindromize](https://codeforces.ml/contest/884/problem/F)\n\n**\u9898\u610f\uff1a**\n\n\u5b9a\u4e49\u4e00\u4e2a\u957f\u5ea6\u4e3a $x$ \u7684\u5b57\u7b26\u4e32 $t$ \u662f **\u53cd\u56de\u6587\u4e32** \uff0c\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a\n\n- $x$ \u662f\u5076\u6570\u3002\n- \u5bf9\u4e8e\u4efb\u610f\u7684\u6574\u6570 $i\\in [1,x]$ \uff0c$t_{i} \\neq t_{x-i+1}$ \u3002\n\n\u73b0\u5728\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5b57\u7b26\u4e32 $s$ \u548c\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $b$ \uff0c\u4fdd\u8bc1 $n$ \u4e3a\u5076\u6570\u3002\n\n\u8981\u6c42\u5c06 $s$ \u7684\u5b57\u7b26\u91cd\u65b0\u6392\u5217\u5f97\u5230\u5b57\u7b26\u4e32 $t$ \uff0c\u4f7f\u5f97 $t$ \u662f\u53cd\u56de\u6587\u4e32\uff0c\u5b9a\u4e49 $t$ \u7684\u4ef7\u503c\u4e3a $\\sum_{i=1}^{n} b_i[s_i=t_i]$ \u3002\n\n\u6c42\u5b57\u7b26\u4e32 $t$ \u7684\u6700\u5927\u4ef7\u503c\u3002\n\n**\u6570\u636e\u8303\u56f4\uff1a**\n\n$1\\le n \\le 100 , 1\\le b_i \\le 100$ \u3002\n\n## \u89e3\u6cd5\u4e00\uff1a\u8d39\u7528\u6d41\n\n\u8003\u8651\u628a\u5b57\u7b26\u4e32 $s$ \u91cd\u65b0\u6392\u5217\u4e0d\u597d\u60f3\uff0c\u4e0d\u5982\u76f4\u63a5\u628a\u5b57\u7b26\u5168\u90fd\u62ff\u51fa\u6765\u91cd\u65b0\u653e\u3002\n\n\u6211\u4eec\u5148\u6765\u5206\u6790\u4ee5\u4e0b\u628a\u5b57\u7b26\u62ff\u51fa\u6765\u518d\u91cd\u65b0\u653e\u56de\u53bb\u9700\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\uff1a\n\n1. \u653e\u56de\u53bb\u4e4b\u540e\uff0c\u6bcf\u4e2a\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\u5fc5\u987b\u8ddf $s$ \u4e2d\u7684\u4e00\u6837\u3002\n2. \u653e\u56de\u53bb\u4e4b\u540e $t_i \\neq t_{x-i+1}$ \u3002\n3. \u6bcf\u4e2a\u4f4d\u7f6e\u80fd\u4e14\u4ec5\u80fd\u653e\u4e00\u4e2a\u5b57\u7b26\u3002\n4. \u4ef7\u503c\u6700\u5927\u3002\n\n\u90a3\u4e48\u73b0\u5728\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6761\u4ef6\u8003\u8651\u4e00\u4e0b\u5efa\u56fe\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u7ea6\u5b9a $(x,y)$ \u4ee3\u8868\u5bb9\u91cf\u4e3a $x$ \uff0c\u8d39\u7528 $y$ \u7684\u8fb9\uff1a\n\n1. \u56e0\u4e3a\u51fa\u73b0\u6b21\u6570\u5fc5\u987b\u4e00\u6837\uff0c\u53ef\u4ee5\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5b57\u7b26\u5efa\u4e00\u4e2a\u70b9\uff0c\u4ece\u6e90\u70b9\u5411\u6bcf\u4e2a\u5b57\u7b26\u8fde\u4e00\u6761 $(cnt_x,0)$ \u7684\u8fb9\uff0c$cnt_x$ \u4e3a\u5b57\u7b26 $x$ \u51fa\u73b0\u7684\u6b21\u6570\u3002\n2. \u56e0\u4e3a\u5bf9\u5e94\u4f4d\u7f6e\u4e0d\u80fd\u653e\u76f8\u540c\u7684\u5b57\u7b26\uff0c\u53ef\u4ee5\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5b57\u7b26\uff0c\u65b0\u5efa $\\frac{n}{2}$ \u4e2a\u70b9\uff0c\u8fd9 $\\frac{n}{2}$ \u4e2a\u70b9\u8054\u7cfb\u7740 $\\frac{n}{2}$ \u4e2a\u5bf9\u5e94\u4f4d\u7f6e\uff0c\u6bcf\u4e2a\u70b9\u90fd\u5411\u5bf9\u5e94\u4f4d\u7f6e\u5206\u522b\u8fde\u4e00\u6761 $(1,0)$ \u7684\u8fb9\uff0c\u7136\u540e\u518d\u4ece\u8fd9\u4e2a\u5b57\u7b26\u7684\u70b9\u5411\u65b0\u5efa\u7684 $\\frac{n}{2}$ \u4e2a\u70b9\u8fde $(1,0)$ \u7684\u8fb9\uff0c\u8fd9\u6837\u5c31\u4fdd\u8bc1\u4e86\u5bf9\u5e94\u4f4d\u7f6e\u6700\u591a\u53ea\u653e\u4e00\u4e2a\u76f8\u540c\u5b57\u7b26\u3002\n3. \u628a\u6bcf\u4e2a\u4f4d\u7f6e\u4ee3\u8868\u7684\u70b9\u5411\u6c47\u70b9\u8fde $(1,0)$ \u7684\u8fb9\uff0c\u8fd9\u6837\u53ea\u8981\u8dd1\u6700\u5927\u6d41\u4fdd\u8bc1\u6ee1\u6d41\uff0c\u5c31\u80fd\u4fdd\u8bc1\u6bcf\u4e2a\u4f4d\u7f6e\u653e\u4e14\u4ec5\u80fd\u653e $1$ \u4e2a\u5b57\u7b26\u3002\n4. \u8003\u8651\u4ec0\u4e48\u65f6\u5019\u5b57\u7b26\u7684\u653e\u7f6e\u4f1a\u5bf9\u4ef7\u503c\u4ea7\u751f\u8d21\u732e\uff0c\u5c31\u662f\u4e0e\u539f\u5b57\u7b26\u4e32 $s$ \u5728\u76f8\u540c\u4f4d\u7f6e\u5b57\u7b26\u76f8\u540c\u7684\u65f6\u5019\u4f1a\u4ea7\u751f\u8d21\u732e\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5bf9\u7b2c $2$ \u64cd\u4f5c\u9b54\u6539\u4e00\u4e0b\uff0c\u5728\u653e\u7684\u5b57\u7b26\u4e0e $s$ \u7684\u76f8\u540c\u4f4d\u7f6e\u4e0a\u7684\u5b57\u7b26\u76f8\u540c\u65f6\uff0c\u8d39\u7528\u6539\u6210 $b_{pos}$ \uff0c$pos$ \u4e3a\u8be5\u4f4d\u7f6e\u3002\n\n\u7136\u540e\u6211\u4eec\u8dd1\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u5373\u53ef\u7b97\u51fa\u6700\u5927\u4ef7\u503c\uff0c\u4f46\u8fd9\u4e48\u8dd1\u53ef\u80fd\u5728 $\\text{spfa}$ \u7684\u65f6\u5019\u51fa\u73b0\u6b63\u6743\u73af\u6302\u6389\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5148\u628a\u6240\u6709\u4f4d\u7f6e\u7684\u8d21\u732e\u52a0\u8d77\u6765\uff0c\u7136\u540e\u5728\u64cd\u4f5c $4$ \u7684\u65f6\u5019\u8003\u8651\u51cf\u6389\u653e\u7f6e\u7684\u5b57\u7b26\u4e0e $s$ \u7684\u76f8\u540c\u4f4d\u7f6e\u4e0a\u7684\u5b57\u7b26\u4e0d\u76f8\u540c\u65f6\uff0c\u6263\u9664\u7684\u8d21\u732e\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u8dd1\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\uff0c\u7b97\u51cf\u6389\u7684\u6700\u5c0f\u7684\u8d21\u732e\u3002\n\n$\\text{Source} : $\n\n```cpp\n#include <bits/stdc++.h> // \u5b57\u5178\u6811\u4e0a\u5b57\u5178\u6e38 , \u5b57\u53bb\u6811\u7a7a\u7f51\u7edc\u6d41 \n\nusing namespace std;\n\n#define SZ(x) ((int)((x).size()))\n#define lb(x) ((x)&(-(x)))\n#define mkp make_pair\n#define pb push_back\n#define fi first\n#define se second\ntypedef long long ll;\ntypedef pair<int,int> pii;\n\nconst int MAXN=1e2+10;\nconst int MAXS=1e5+10;\nconst int inf=1e9;\n\nstruct Edge{ int to,nxt,w,c; };\n\nint n,cnt_e=1,cnt_d,S,T;\nchar s[MAXN];\nint b[MAXN];\nint head[MAXS],curh[MAXS];\nint dis[MAXS];\nbool inq[MAXS];\nEdge e[MAXS];\n\ninline void addedge(int u,int v,int w,int c,bool fg)\n{\n\te[++cnt_e].to=v; e[cnt_e].w=w;\n\te[cnt_e].nxt=head[u]; e[cnt_e].c=c;\n\thead[u]=cnt_e;\n\tif(fg) addedge(v,u,0,-c,false);\n}\n\ninline bool spfa()\n{\n\tfor(int i=1;i<=cnt_d;i++)\n\t\tcurh[i]=head[i],\n\t\tdis[i]=inf;\n\t\t\n\tqueue<int> q;\n\tdis[S]=0; q.push(S);\n\tinq[S]=true;\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tinq[u]=false;\n\t\t\n\t\tfor(int i=head[u];i;i=e[i].nxt)\n\t\t{\n\t\t\tint v=e[i].to,w=e[i].w,c=e[i].c;\n\t\t\tif(!w || dis[u]+c>=dis[v]) continue;\n\t\t\tdis[v]=dis[u]+c;\n\t\t\tif(!inq[v]) q.push(v),inq[v]=true;\n\t\t}\n\t}\t\n\treturn dis[T]!=inf;\n}\n\nint cost=0;\ninline int dfs(int u,int flow)\n{\n\tif(!flow || u==T) return flow;\n\t\n\tint res=0;\n\tinq[u]=true;\n\tfor(int &i=curh[u];i;i=e[i].nxt)\n\t{\n\t\tint v=e[i].to,w=e[i].w,c=e[i].c;\n\t\tif(!w || dis[v]!=dis[u]+c || inq[v]) continue;\n\t\tint kkk=dfs(v,min(flow,w));\n\t\t\n\t\te[i].w-=kkk; e[i^1].w+=kkk;\n\t\tflow-=kkk; res+=kkk;\n\t\tcost+=kkk*c;\n\t\tif(!flow) break;\n\t}\n\tinq[u]=false;\n\t\n\treturn res;\n}\n\ninline int dinic()\n{\n\tint res=0;\n\twhile(spfa()) res+=dfs(S,inf);\n\treturn res; \n}\n\nint main()\n{\n\tscanf(\"%d\\n%s\",&n,s+1);\n\tint ans=0;\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&b[i]),ans+=b[i];\n\t\n\tstatic int tot[26];\n\tfor(int i=1;i<=n;i++) tot[s[i]-'a']++;\n\t\n\tcnt_d=n;\n\tS=n+26*n/2+26+1; T=S+1;\n\tstatic int dian[26];\n\tfor(int i=0;i<26;i++)\n\t{\n\t\tdian[i]=++cnt_d;\n\t\taddedge(S,dian[i],tot[i],0,true);\n\t\tfor(int j=1;j<=n/2;j++)\n\t\t\taddedge(++cnt_d,j,1,(s[j]-'a'==i ? 0 : b[j]),true),\n\t\t\taddedge(cnt_d,n-j+1,1,(s[n-j+1]-'a'==i ? 0 : b[n-j+1]),true),\n\t\t\taddedge(dian[i],cnt_d,1,0,true);\n\t}\n\tfor(int i=1;i<=n;i++) addedge(i,T,1,0,true);\n\tcnt_d+=2; assert(cnt_d==n+26*n/2+26+2);\n\t\n\tdinic();\n\tprintf(\"%d\\n\",ans-cost);\n\t \n\treturn 0;\n}\n```\n\n\n\n## \u89e3\u6cd5\u4e8c\uff1a\u8d2a\u5fc3\uff08\u53c2\u8003\u4e8e[\u5b98\u65b9\u9898\u89e3](https://codeforces.ml/blog/entry/55470)\uff09\n\n\u8003\u8651\u5148\u4ee4 $t = s$ \uff0c\u6b64\u65f6\u6211\u4eec\u7684\u4ef7\u503c\u4e3a\u80fd\u53d6\u5230\u7684\u6700\u5927\u503c $\\sum_{i=1}^{n}b_i$ \u3002\u8fd9\u65f6\u5019\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u4ece\u91cc\u9762\u6263\u6389\u6700\u5c11\u7684\u8d21\u732e\uff0c\u5c31\u80fd\u6c42\u51fa\u6700\u5927\u4ef7\u503c\u4e86\u3002\u90a3\u4e48\u6211\u4eec\u600e\u4e48\u6263\u6389\u6700\u5c11\u7684\u8d21\u732e\u5462\uff1f\n\n\u663e\u7136\uff0c\u6211\u4eec\u4ea4\u6362\u4e00\u4e9b\u6ee1\u8db3 $s_i=s_{n-i+1}$ \u7684\u4f4d\u7f6e $i$ \uff0c\u5047\u8bbe\u6ee1\u8db3\u8fd9\u4e00\u6761\u4ef6\u7684 $(i,n-i+1)$ \u7684\u6570\u5bf9\u6709 $m$ \u5bf9\uff0c\u73b0\u5728\u6211\u4eec\u60f3\u8981\u6700\u5c0f\u5316\u4ea4\u6362\u5b57\u7b26\u51cf\u5c11\u7684\u8d21\u732e\u3002\u5047\u8bbe\u9700\u8981\u4ea4\u6362\u7684\u5b57\u7b26 $x$ \u6709 $cnt_x$ \u4e2a\uff0c\u6211\u4eec\u53ef\u4ee5\u5206\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\uff1a\n\n- $\\forall x , 2\\cdot x \\le m $ \u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u8fd9\u4e9b\u6210\u5bf9\u4e2d\u7684\u5176\u4e2d\u4e00\u4e2a\u5b57\u7b26\u4e92\u76f8\u6362\u6389\uff0c\u51cf\u53bb\u6210\u5bf9\u4e2d\u7684\u8d21\u732e\u8f83\u5c0f\u7684\u4e00\u4e2a\u5b57\u7b26\u7684\u8d21\u732e\uff0c\u5373\u53ef\u7b97\u51fa\u7b54\u6848\u3002\n- $\\exist x,2\\cdot x > m$ \u3002\u663e\u7136\uff0c\u5982\u679c\u5b58\u5728\uff0c\u90a3\u4e48\u6700\u591a\u53ea\u6709\u4e00\u4e2a $x$ \u3002\u8fd9\u65f6\u5019\uff0c\u6210\u5bf9\u7684\u5b57\u7b26\u4e92\u6362\u4e0d\u8db3\u4ee5\u628a\u5b57\u7b26 $x$ \u5168\u90fd\u6362\u8d70\uff0c\u6211\u4eec\u9700\u8981\u627e\u4e0d\u6210\u5bf9\u7684\u5b57\u7b26\u53bb\u8ddf\u6362\u4e0d\u8d70\u7684 $x$ \u4ea4\u6362\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u53ea\u8981\u628a\u6240\u6709\u7684\u6ee1\u8db3 $s_i\\neq x , s_{n-i+1}\\neq x ,s_i\\neq s_{n-i+1}$ \u7684 $(i,n-i+1)$ \u7684\u4f4d\u7f6e\u7684\u8d21\u732e\u4ece\u5c0f\u5230\u5927\u6392\u4e00\u4e0b\u5e8f\uff0c\u7136\u540e\u6328\u4e2a\u53d6\u8d70\u8d21\u732e\u5c0f\u7684\u8ddf $x$ \u4ea4\u6362\u5373\u53ef\u3002\n\n$\\text{Source} : $\n\n```cpp\n#include <bits/stdc++.h> // \u603b\u4e3a\u7f29\u70b9\u80fd AC , \u8d2a\u5fc3\u6ee1\u5206\u4f7f\u4eba\u6101 \n\nusing namespace std;\n\n#define SZ(x) ((int)((x).size()))\n#define lb(x) ((x)&(-(x)))\n#define mkp make_pair\n#define pb push_back\n#define fi first\n#define se second\ntypedef long long ll;\ntypedef pair<int,int> pii;\n\nconst int MAXN=1e2+10;\n\nint n;\nint b[MAXN];\nchar s[MAXN];\n\nint main()\n{\n\tscanf(\"%d\\n%s\",&n,s+1);\n\tint sum=0;\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&b[i]),sum+=b[i];\n\t\n\tint m=0;\n\tstatic int tong[26];\n\tvector<int> vec;\n\tfor(int i=1;i<=n/2;i++)\n\t\tif(s[i]==s[n-i+1])\n\t\t{\n\t\t\tm++;\n\t\t\ttong[s[i]-'a']++;\n\t\t\tvec.pb(min(b[i],b[n-i+1]));\n\t\t}\n\t\n\tbool fg=false;\n\tint ch=-1;\n\tfor(int i=0;i<26;i++)\n\t\tif(2*tong[i]>m)\n\t\t\tch=i,fg=true;\n\t\n\tint tot=0;\n\tfor(int i=0;i<m;i++) tot+=vec[i];\n\tint ans=sum-tot;\n\tif(!fg)\n\t{\n\t\tprintf(\"%d\\n\",ans);\n\t\treturn 0;\n\t}\n\t\n\tvector<int> vec2;\n\tfor(int i=1;i<=n/2;i++)\n\t\tif(s[i]!=s[n-i+1] && (s[i]-'a')!=ch && (s[n-i+1]-'a')!=ch)\n\t\t\tvec2.pb(min(b[i],b[n-i+1]));\n\tsort(vec2.begin(),vec2.end());\n\t\n\tfor(int i=0;i<tong[ch]-(m-tong[ch]);i++)\n\t\tans-=vec2[i];\n\tprintf(\"%d\\n\",ans);\n\t\n\treturn 0;\n}\n```\n\n\n\n\n\n",
        "postTime": 1626679165,
        "uid": 116060,
        "name": "TLE_Automat",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF884F\u3010Anti-Palindromize\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u4e2a\u4e0d\u540c\u7684\u5efa\u56fe\u65b9\u6cd5\n\n---\n\n### \u9898\u89e3\uff1a\n\n\u5efa\u56fe\u76ee\u7684\u662f\u5c0626\u4e2a\u5b57\u6bcd\u5206\u522b\u5339\u914d\u5230\u6bcf\u4e2a\u4f4d\u7f6e\u4e0a\u6c42\u8d21\u732e\n\n\u5bf9\u4e8e\u5b57\u6bcd\u6570\u91cf\u7684\u9650\u5236\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u79cd\u5b57\u6bcd\u5efa\u4e00\u4e2a\u70b9\uff0c\u4ece\u6e90\u70b9\u5411\u5b83\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a\u8be5\u79cd\u5b57\u6bcd\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u65e0\u8d39\u7528\uff0c\u8868\u793a\u6e90\u70b9\u80fd\u63d0\u4f9b\u7684\u5b57\u6bcd\u7684\u4e2a\u6570\n\n\u6bcf\u79cd\u5b57\u6bcd\u5728\u76ee\u6807\u4e32\u7684$i$\u548c$n-i+1$\u4e0a\u53ea\u80fd\u586b\u4e00\u4e2a\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u6027\u8d28\uff0c\u6211\u4eec\u5efa$\\frac{n}{2}$\u4e2a\u70b9\uff0c\u7b2c$i$\u4e2a\u70b9\u4ee3\u8868\u4f4d\u7f6e$i$\u548c$n-i+1$\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u8ba9\u6bcf\u4e2a\u5b57\u6bcd\u70b9\u5411\u4f4d\u7f6e\u70b9\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a1\uff08\u56e0\u4e3a\u53ea\u80fd\u64461\u4e2a\uff09\uff0c\u8d39\u7528\u4e3a\u53ef\u4ee5\u586b\u7684\u539f\u5b57\u6bcd\u7684\u8f83\u5927\u4ef7\u503c\n\n\u56e0\u4e3a\u4e00\u4e2a\u4f4d\u7f6e\u70b9\u4ee3\u8868\u4e86\u4e24\u4e2a\u4f4d\u7f6e\uff0c\u6240\u4ee5\u8981\u4ece\u6bcf\u4e2a\u4f4d\u7f6e\u70b9\u5411\u6c47\u70b9\u8fde\u5bb9\u91cf\u4e3a2\uff0c\u65e0\u8d39\u7528\u7684\u8fb9\n\n\u6700\u540e\u8dd1\u4e00\u904d\u8d39\u7528\u6d41\u5c31\u597d\u5566\n\n---\n\n### \u4ee3\u7801\uff1a\n\n```cpp\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#pragma GCC target(\"avx\")\n#include <bits/stdc++.h>\nusing namespace std;\ntemplate<class t> inline t read(t &x){\n    char c=getchar();bool f=0;x=0;\n    while(!isdigit(c)) f|=c=='-',c=getchar();\n    while(isdigit(c)) x=(x<<1)+(x<<3)+(c^48),c=getchar();\n    if(f) x=-x;return x;\n}\ntemplate<class t> inline void write(t x){\n    if(x<0) putchar('-'),write(-x);\n    else{if(x>9) write(x/10);putchar('0'+x%10);}\n}\n\nconst int N=2005,M=5e5+5;\nint en=1,h[N],dis[N],mc,mf,n,cnt[30],a[N];\nchar s[N];\nbool v[N];\n\nstruct edge{\n\tint n,v,f,w;\n}e[M<<1];\n\nstruct fafafa{\n\tint fa,id;\n}pre[N];\n\nvoid add(int x,int y,int f,int w){\n\te[++en]=(edge){h[x],y,f,w};\n\th[x]=en;\n}\n\nbool spfa(int s,int t){\n\tmemset(v,0,sizeof v);\n\tmemset(pre,0,sizeof pre);\n\tmemset(dis,0x3f,sizeof dis);\n\tqueue<int> q;\n\tq.push(s);\n\tv[s]=1;\n\tdis[s]=0;\n\twhile(!q.empty()){\n\t\tint x=q.front();\n\t\tq.pop();\n\t\tfor(int i=h[x];i;i=e[i].n){\n\t\t\tint y=e[i].v;\n\t\t\tif(e[i].f&&dis[x]+e[i].w<dis[y]){\n\t\t\t\tdis[y]=dis[x]+e[i].w;\n\t\t\t\tpre[y]=(fafafa){x,i};\n\t\t\t\tif(!v[y]){\n\t\t\t\t\tv[y]=1;\n\t\t\t\t\tq.push(y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tv[x]=0;\n\t}\n\treturn dis[t]^0x3f3f3f3f;\n}\n\nvoid mcmf(int s,int t){\n\twhile(spfa(s,t)){\n\t\tint flow=INT_MAX;\n\t\tfor(int i=t;i^s;i=pre[i].fa)\n\t\t\tflow=min(flow,e[pre[i].id].f);\n\t\tfor(int i=t;i^s;i=pre[i].fa){\n\t\t\te[pre[i].id].f-=flow;\n\t\t\te[pre[i].id^1].f+=flow;\n\t\t}\n\t\tmf+=flow;\n\t\tmc+=flow*dis[t];\n\t}\n}\n\nvoid exadd(int x,int y,int f,int w){\n\tadd(x,y,f,w);\n\tadd(y,x,0,-w);\n}\n\nsigned main(){\n\tread(n);\n\tscanf(\"%s\",s+1);\n\tfor(int i=1;i<=n;i++) cnt[s[i]-'a'+1]++;\n\tfor(int i=1;i<=n;i++) read(a[i]);\n\tfor(int i=1;i<=26;i++) exadd(0,i,cnt[i],0);\n\tfor(int i=1;i<=26;i++)\n\t\tfor(int j=1;j<=n/2;j++){\n\t\t\tint val=0;\n\t\t\tif(s[j]-'a'+1==i) val=max(val,a[j]);\n\t\t\tif(s[n-j+1]-'a'+1==i) val=max(val,a[n-j+1]);\n\t\t\texadd(i,26+j,1,-val);\n\t\t}\n\tfor(int i=1;i<=n/2;i++) exadd(26+i,27+n/2,2,0);\n\tmcmf(0,27+n/2);\n\twrite(-mc);\n}\n```",
        "postTime": 1590652728,
        "uid": 65735,
        "name": "yuzhechuan",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF884F \u3010Anti-Palindromize\u3011"
    },
    {
        "content": "### \u3010\u9898\u610f\u3011\n\n\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u6253\u4e71\u540e\u653e\u56de\uff0c\u6ee1\u8db3\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u5b57\u7b26\u548c\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u5b57\u7b26\u4e0d\u76f8\u540c\uff0c\u7b2c\u4e8c\u4e2a\u7684\u4f4d\u7f6e\u4e0a\u7684\u5b57\u7b26\u548c\u5012\u6570\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u5b57\u7b26\u4e0d\u76f8\u540c...\u4ee5\u6b64\u7c7b\u63a8\u3002\u6bcf\u4e2a\u4f4d\u7f6e\u6709\u4e00\u4e2a\u6743\u503c\uff0c\u5982\u679c\u539f\u4e32\u548c\u65b0\u4e32\u7684\u4f4d\u7f6e\u4e0a\u7684\u5b57\u7b26\u76f8\u540c\uff0c\u5c31\u83b7\u5f97\u8fd9\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u6743\u503c\u3002\u6c42\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u5927\u7684\u6743\u503c\u548c\u3002\n\n### \u3010\u89e3\u3011\n\n~~\u663e\u7136\u6211\u4eec\u8981\u5c3d\u53ef\u80fd\u5730\u4fdd\u8bc1\u539f\u5b57\u7b26\u4e32\u4e2d\u5c3d\u53ef\u80fd\u591a\u7684\u5b57\u7b26\u5728\u539f\u4f4d\u4e0a\uff0c\u90a3\u4e48\u5982\u679c\u4e24\u4e2a\u5bf9\u5e94\u4f4d\u7f6e\u76f8\u540c\uff0c\u6211\u4eec\u53ef\u4ee5\u89c6\u4f5c\u5c06\u6743\u503c\u5c0f\u7684\u63d0\u5230\u524d\u9762\uff0c\u7136\u540e\u4f18\u5148\u8003\u8651\u4ea4\u6362\u5b83\u4eec\u7684\u4f4d\u7f6e\u548c\u987a\u5e8f\uff0c\u4e8e\u662f\u53ef\u4ee5\u7528dp\u7b49\u65b9\u6cd5\u6c42\u51fa\u3002~~\n\n\u4e0a\u9762\u7684\u662f\u6211\u6700\u5f00\u59cb\u7684\u601d\u8def\uff0c\u4f46\u662f\u72b6\u6001\u7684\u8bbe\u8ba1\u548c\u8f6c\u79fb\u90fd\u6bd4\u8f83\u96be\u3002\u6211\u4eec\u53ef\u4ee5\u6362\u4e00\u79cd\u601d\u60f3\u8003\u8651\uff0c\u6211\u4eec\u5148\u628a\u6240\u6709\u7684\u5b57\u7b26\u5168\u90e8\u62ff\u51fa\u6765\uff0c\u7136\u540e\u518d\u4e00\u4e2a\u4e2a\u5730\u653e\u56de\u53bb\u3002\u90a3\u4e48\u6211\u4eec\u8003\u8651\u653e\u56de\u53bb\u7684\u65f6\u5019\u7684\u7ea6\u675f\u6709\u54ea\u4e9b\uff1a\n\n1.\u653e\u56de\u53bb\u7684\u65f6\u5019\u6bcf\u4e2a\u5b57\u7b26\u7684\u603b\u4e2a\u6570\u8981\u548c\u539f\u4e32\u4e2d\u6bcf\u4e2a\u5b57\u7b26\u7684\u603b\u4e2a\u6570\u76f8\u540c\u3002\n\n2.\u653e\u56de\u53bb\u4e4b\u540e\u524d\u540e\u4e24\u4e2a\u5bf9\u5e94\u7684\u4f4d\u7f6e\u4e0a\u4e0d\u80fd\u51fa\u73b0\u91cd\u590d\u7684\u5b57\u7b26\u3002(\u4e5f\u5c31\u662f\u8bf4\u540c\u79cd\u5b57\u7b26\u53ea\u80fd\u653e\u5728\u4e24\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u5176\u4e2d\u4e00\u4e2a)\n\n3.\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u90fd\u5fc5\u987b\u653e\u4e00\u4e2a\u5b57\u7b26\u3002\n\n\u4ece\u8fd9\u91cc\u5c31\u770b\u51fa\u4e86\u53ef\u4ee5\u7528\u7f51\u7edc\u6d41\u76f8\u5173\u77e5\u8bc6\u6765\u6c42\u89e3\u4e86\u3002\u90a3\u4e48\u73b0\u5728\u6765\u8003\u8651\u5982\u4f55\u4fdd\u8bc1\u6743\u503c\u6700\u5927\u3002\n\n\u540c\u6837\u6211\u4eec\u53ef\u4ee5\u53ea\u8003\u8651\u54ea\u4e9b\u5b57\u7b26\u4e0d\u5728\u539f\u6765\u7684\u4f4d\u7f6e\u4e0a\u5373\u53ef\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6c42\u51fa\u4e0d\u5728\u539f\u6765\u4f4d\u7f6e\u4e0a\u7684\u6743\u503c\u548c\uff0c\u7528\u603b\u6743\u503c-\u8fd9\u4e9b\u503c\u5c31\u662f\u7b54\u6848\u3002\n\n### \u3010\u5b9e\u73b0\u3011\n\n\u7b97\u6cd5\uff1a\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\n\n\u9996\u5148\u5efa\u7acb\u6e90\u70b9S\u548c\u6c47\u70b9T\n\n\u8003\u8651\u7ea6\u675f\u6761\u4ef61\uff0c\u6211\u4eec\u5148\u6c42\u51fa\u6bcf\u4e2a\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570cnt[i]\uff0c\u7136\u540e\u4eceS\u5411\u6bcf\u4e2a\u5b57\u7b26(\u8bbe\u70b9\u7684\u7c7b\u578b\u4e3aA)\u8fde\u6d41\u91cf\u4e3acnt[i]\uff0c\u8d39\u7528\u4e3a0\u7684\u8fb9\uff0c\u8fd9\u6837\u5c31\u4fdd\u8bc1\u4e86\u6bcf\u4e2a\u5b57\u7b26\u53ea\u80fd\u9009\u6700\u591acnt[i]\u6b21\u3002\n\n\u8003\u8651\u7ea6\u675f\u6761\u4ef62\uff0c\u7531\u4e8e\u540c\u6837\u7684\u5b57\u7b26\u5728\u6bcf\u4e24\u4e2a\u5bf9\u5e94\u4f4d\u7f6e\u4e0a\u53ea\u80fd\u653e\u4e00\u4e2a\uff0c\u90a3\u6211\u4eec\u6bcf\u4e2a\u5b57\u7b26\u6700\u591a\u53ea\u80fd\u653en/2\u6b21\uff0c\u90a3\u4e48\u6211\u4eec\u6bcf\u4e2a\u5b57\u7b26\u7684\u70b9\u518d\u65b0\u5efan/2\u4e2a\u70b9(\u8bbe\u70b9\u7684\u7c7b\u578b\u4e3aB)\uff0c\u7b2ci\u4e2a\u70b9\u5206\u522b\u5bf9\u5e94\u4f4d\u7f6ei\u548c\u4f4d\u7f6en-i+1\uff0c\u90a3\u4e48\u6211\u4eec\u4ece\u6bcf\u4e2aA\u7c7b\u578b\u7684\u70b9\u5411\u5bf9\u5e94\u7684B\u7c7b\u578b\u7684\u70b9\u8fde\u6d41\u91cf\u4e3a1\uff0c\u8d39\u7528\u4e3a0\u7684\u70b9\uff0c\u5c31\u9650\u5236\u4e86\u5bf9\u4e8e\u6bcf\u4e2a\u5b57\u7b26\uff0c\u5bf9\u5e94\u7684\u4e24\u4e2a\u4f4d\u7f6e\u53ea\u80fd\u9009\u4e00\u4e2a\u6765\u653e\u3002\n\n\u8003\u8651\u7ea6\u675f\u6761\u4ef63\uff0c\u6211\u4eec\u5bf9\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u5efa\u4e00\u4e2a\u70b9(\u8bbe\u70b9\u7684\u7c7b\u578b\u4e3aC)\uff0c\u90a3\u4e48\u6211\u4eec\u5bf9\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u90fd\u5efa\u4e00\u6761\u5230\u6c47\u70b9T\u6d41\u91cf\u4e3a1\uff0c\u8d39\u7528\u4e3a0\u7684\u70b9\uff0c\u5c31\u4fdd\u8bc1\u4e86\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u6700\u591a\u6709\u4e00\u4e2a\u5b57\u7b26\u3002\u7136\u540e\u6211\u4eec\u4eceB\u7c7b\u578b\u7684\u70b9\u5411C\u7c7b\u578b\u7684\u70b9\u8fde\u8fb9\uff0c\u8fd9\u91cc\u662f\u5173\u952e\u7684\u4e00\u6b65\uff0c\u7531\u4e0a\u4e00\u4e2a\u7ea6\u675f\u6761\u4ef6\u7684\u8003\u8651\u5f97\u51fa\u7b2ci\u4e2a\u70b9\u5206\u522b\u5411i\u548cn-i+1\u8fde\u6d41\u91cf\u4e3a1\u7684\u8fb9\u5373\u53ef\u3002\u8003\u8651\u8d39\u7528\uff1a\u5982\u679cB\u7c7b\u578b\u7684\u70b9\u7684\u5b57\u7b26\u548c\u8fde\u7684\u4f4d\u7f6e\u5bf9\u5e94\u7684\u539f\u4e32\u7684\u5b57\u7b26\u76f8\u7b49\uff0c\u5219\u8d39\u7528\u4e3a0\uff0c\u5426\u5219\u8d39\u7528\u4e3a\u5bf9\u5e94\u7684\u6743\u503c\u3002\n\n\u663e\u7136\uff0c\u5728\u9898\u610f\u7ed9\u5b9a\u4e00\u5b9a\u5408\u6cd5\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e2a\u7f51\u7edc\u4e00\u5b9a\u6ee1\u6d41\u3002\u90a3\u6211\u4eec\u5c31\u5f97\u51fa\u4e86\u4fee\u6539\u6240\u9700\u8981\u7684\u4ee3\u4ef7\uff0c\u6700\u540e\u7b54\u6848\u5c31\u662f\u6240\u6709\u6743\u503c\u548c-\u6700\u5c0f\u8d39\u7528\u3002\n\n\u53ef\u80fd\u8bed\u8a00\u7ec4\u7ec7\u6709\u4e9b\u6df7\u4e71\uff0c~~\u6bd5\u7adf\u5f88\u4e45\u6ca1\u6709\u4e0a\u5e38\u89c4\u8bfe\u4e86~~\uff0c\u5982\u6709\u758f\u6f0f\u548c\u9519\u8bef\u4e4b\u5904\u8bf7\u63d0\u51fa\u548c\u89c1\u8c05\u3002~~\u4f30\u8ba1\u63d0\u51fa\u4e5f\u6ca1\u7528\u4e86\uff0c\u8fd8\u6709\u4e24\u5929\u5c31\u7701\u9009\u4e86\uff0c\u9a6c\u4e0a\u5c31\u9000\u5f79\u4e86233333~~\n\n\u8c28\u4ee5\u6b64\u9898\u89e3\u7eaa\u5ff5\u5373\u5c06\u7ed3\u675f\u7684\u7f8e\u597d\u7684OI\u751f\u6daf\u3002\n\n\u9644\u4e0a\u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nconst int maxn=1000005;\nconst int inf=0x7f7f7f7f;\nstruct node\n{\n\tint to,next,cost,flow;\n} edge[maxn<<1];\nint head[maxn],dist[10005],k=1,tot_cost=0,ans=0,s,t;\nbool visit[10005];\nvoid add(int u,int v,int w,int c)\n{\n\tedge[++k].to=v;edge[k].next=head[u];edge[k].flow=w;edge[k].cost=c;head[u]=k;\n\tswap(u,v);\n\tedge[++k].to=v;edge[k].next=head[u];edge[k].flow=0;edge[k].cost=-c;head[u]=k;\n}\nbool spfa()\n{\n\tmemset(dist,inf,sizeof(dist));\n\tmemset(visit,false,sizeof(visit));\n\tdist[t]=0;visit[t]=true;deque<int> q;q.push_back(t);\n\twhile(!q.empty())\n\t{\n\t\tint x=q.front();q.pop_front();visit[x]=false;\n\t\tfor(int i=head[x];i;i=edge[i].next)\n\t\t{\n\t\t\tif(dist[edge[i].to]>dist[x]-edge[i].cost&&edge[i^1].flow)\n\t\t\t{\n\t\t\t\tdist[edge[i].to]=dist[x]-edge[i].cost;\n\t\t\t\tif(!visit[edge[i].to])\n\t\t\t\t{\n\t\t\t\t\tvisit[edge[i].to]=true;\n\t\t\t\t\tif(!q.empty()&&dist[q.front()]>dist[edge[i].to]) q.push_front(edge[i].to);\n\t\t\t\t\telse q.push_back(edge[i].to);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn dist[s]!=inf;\n}\nint dfs(int x,int f)\n{\n\tvisit[x]=true;\n\tif(x==t||!f) return f;\n\tint flow=0;\n\tfor(int i=head[x];i;i=edge[i].next)\n\t{\n\t\tif(visit[edge[i].to]) continue;\n\t\tif(dist[edge[i].to]!=dist[x]-edge[i].cost||!edge[i].flow) continue;\n\t\tint temp=dfs(edge[i].to,min(f-flow,edge[i].flow));\n\t\tedge[i].flow-=temp;\n\t\tedge[i^1].flow+=temp;\n\t\tflow+=temp;\n\t\ttot_cost+=temp*edge[i].cost;\n\t\tif(f==flow) break;\n\t}\n\treturn flow;\n}\nvoid zkw()\n{\n\twhile(spfa())\n\t{\n\t\tvisit[t]=true;\n\t\twhile(visit[t])\n\t\t{\n\t\t\tmemset(visit,false,sizeof(visit));\n\t\t\tdfs(s,inf);\n\t\t}\n\t}\n}\nint cnt[maxn],n,b[maxn],alp[maxn];\nchar str[maxn];\nint main()\n{\n\t#ifdef lemon\n\tfreopen(\"844f.in\",\"r\",stdin);\n\t#endif\n\tscanf(\"%d\",&n);s=0;t=4000;\n\tscanf(\"%s\",str+1);\n\tfor(int i=1;i<=n;i++) alp[i]=str[i]-'a'+1;\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&b[i]),ans+=b[i];\n\t//s:0\n\t//alp:1-26\n\t//alp_split:100-2700(100*alp+num(n/2))\n\t//point:3000-3100\n\t//t:4000\n\tfor(int i=1;i<=n;i++) cnt[alp[i]]++;\n\tfor(int i=1;i<=26;i++)\n\t{\n\t\tadd(s,i,cnt[i],0);\n\t\tfor(int j=1;j<=(n>>1);j++)\n\t\t{\n\t\t\tadd(i,100*i+j,1,0);\n\t\t\tif(alp[j]==i) add(100*i+j,3000+j,1,0);\n\t\t\telse add(100*i+j,3000+j,1,b[j]);\n\t\t\tif(alp[n-j+1]==i) add(100*i+j,3000+n-j+1,1,0);\n\t\t\telse add(100*i+j,3000+n-j+1,1,b[n-j+1]);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++) add(3000+i,t,1,0);\n\tzkw();\n\tprintf(\"%d\",ans-tot_cost);\n\treturn 0;\n}\n```",
        "postTime": 1522756594,
        "uid": 26229,
        "name": "lemonaaaaa",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF884F \u3010Anti-Palindromize\u3011"
    },
    {
        "content": "#### \u89e3\u6cd5\u4e00\uff1a\u8d39\u7528\u6d41\n\n> \u82e5 $s_i$ \u5728 $i$ \u4e0a\u5219\u589e\u52a0 $b_i$ \u7684\u8d21\u732e\u3002\n\n\u8003\u8651\u5206\u914d\u5b57\u7b26\uff0c\u4ece $s$ \u5411\u4ee3\u8868 $a\\sim z$ \u7684 $26$ \u4e2a\u70b9\u8fde\u4ee5\u5b57\u7b26\u4e2a\u6570\u4e3a\u6d41\u91cf\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\u3002\n\n\u518d\u4ece\u4ee3\u8868\u5b57\u7b26\u7684\u70b9\u5411\u4e0b\u6807\u8fde\u3002\u5982\u4f55\u6ee1\u8db3 $s_i\\ne s_{n-i+1}$ \u7684\u9650\u5236\uff1f\u5c06\u4e0b\u6807\u6298\u534a\uff0c\u5efa $\\frac{n}{2}$ \u4e2a\u70b9\uff0c\u4ee5\u4e00\u4e2a\u70b9\u8868\u793a $s_i$ \u548c $s_{n-i+1}$\u3002\n\n\u5b57\u7b26 $c$ \u5411 $i$ \u70b9\u8fde\u8fb9\u6ee1\u8db3\uff1a\n\n- \u82e5 $c=s_{i}$ \u4e14 $c=s_{n-i+1}$\uff0c\u5219\u8d39\u7528\u4e3a $\\max(b_i,b_{n-i+1})$\uff0c\u6d41\u91cf\u4e3a $1$\uff1b\n- \u82e5 $c=s_{i}$ \u6216 $c=s_{n-i+1}$\uff0c\u5219\u8d39\u7528\u4e3a $b_i$ \u6216 $b_{n-i+1}$\uff0c\u6d41\u91cf\u4e3a $1$\uff1b\n- \u82e5 $c\\ne s_i$ \u4e14 $c\\ne s_{n-i+1}$\uff0c\u5219\u8d39\u7528\u4e3a $0$\uff0c\u6d41\u91cf\u4e3a $1$\u3002\n\n\u5bf9\u4e8e $\\frac{n}{2}$ \u4e2a\u70b9\uff0c\u5411 $t$ \u8fde\u8d39\u7528\u4e3a $0$\uff0c\u6d41\u91cf\u4e3a $2$ \u7684\u8fb9\u3002\n\n\u8dd1\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u5373\u53ef\uff0c[My Submission](https://codeforces.com/contest/884/submission/196755810)\u3002\n\n#### \u89e3\u6cd5\u4e8c\uff1a\u8d2a\u5fc3\n\n\u5bf9\u4e8e\u6240\u6709\u56de\u6587\u6570\u5bf9\uff0c\u6309\u5b57\u7b26\u5206\u7ec4\uff0c\u82e5\u6240\u6709\u7ec4\u5185\u4e2a\u6570\u4e0d\u8d85\u8fc7\u603b\u6570\u7684\u4e00\u534a\uff0c\u53ef\u4ee5\u5185\u90e8\u6d88\u5316\uff0c\u6bcf\u4e00\u5bf9\u5171\u4eab\u4e3a\u503c\u53d6 $\\max$\u3002\n\n\u5426\u5219\u6bd4\u8f83\u9ebb\u70e6\uff0c\u663e\u7136\u5185\u90e8\u9700\u8981\u6d88\u8017\u6389\u5171\u4eab\u4e3a $\\min$ \u7684\u3002\n\n\u8003\u8651\u6700\u591a\u4e2a\u6570\u7684\u5b57\u7b26\uff0c\u53ea\u6709\u4e00\u4e2a\uff0c\u4ece\u5269\u4f59\u4e2d\u9009\u51fa\u4e00\u4e9b\u53ef\u4ea4\u6362\u7684\u6392\u5e8f\uff0c\u4ece\u5c0f\u5f80\u5927\u53d6\u5373\u53ef\u3002\n\n\u5047\u8bbe\u6700\u591a\u4e2a\u6570\u7684\u5b57\u7b26\u4e3a $c$\uff0c\u5219\u9700\u8981\u6ee1\u8db3 $s_i\\ne s_{n-i+1},s_i\\ne c,s_{n-i+1}\\ne c$ \u6216 $s_i=s_{n-i+1},s_i\\ne c$\u3002\n\n\u4ee3\u7801\uff1a[My Submission](https://codeforces.com/contest/884/submission/196759486)\u3002\n\n",
        "postTime": 1678440529,
        "uid": 271736,
        "name": "Daidly",
        "ccfLevel": 6,
        "title": "CF884F Anti-Palindromize \u9898\u89e3"
    },
    {
        "content": "\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u9898\u7684\u6570\u636e\u8303\u56f4\u3001\u201c\u5b57\u7b26\u548c\u4f4d\u7f6e\u5339\u914d\u201d\u518d\u52a0\u4e0a\u4e00\u6761\u5947\u602a\u7684\u9650\u5236\uff0c\u957f\u5f97\u5c31\u5f88\u7f51\u7edc\u6d41\uff0c\u90a3\u4e48\u5c31\u8003\u8651\u5982\u4f55\u7528\u7f51\u7edc\u6d41\u505a\u3002\n\n\u8003\u8651\u91cd\u65b0\u89e3\u91ca\u4e00\u4e0b\u8fd9\u4e2a\u9898\u9762\uff0c\u5176\u5b9e\u5c31\u662f\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u96c6\u548c $n$ \u4e2a\u4f4d\u7f6e\u8fdb\u884c\u5339\u914d\uff0c\u5176\u4e2d\uff0c\u5b57\u7b26 $ch$ \u5230\u4f4d\u7f6e $i$ \u7684\u8fb9\u548c\u5b57\u7b26 $ch$ \u5230\u4f4d\u7f6e $n-i+1$ \u7684\u8fb9\u53ea\u80fd\u9009\u4e00\u4e2a\u3002\u5bf9\u4e8e\u4e00\u4e2a\u5339\u914d\u53ef\u80fd\u4f1a\u6709\u8fb9\u6743\uff0c\u5177\u4f53\u800c\u8a00\uff0c\u4f4d\u7f6e $i$ \u548c\u5b57\u7b26 $ch$ \u5339\u914d\u8fb9\u7684\u6743\u503c\u662f $b_i\\cdot[s_i=ch]$\u3002\u6c42\u4e00\u4e2a\u6700\u5927\u6743\u503c\u7684\u5339\u914d\u3002\n\n\u6211\u4eec\u5df2\u7ecf\u5c06\u9898\u610f\u8f6c\u5316\u6210\u5f88\u8d34\u8fd1\u8d39\u7528\u6d41\u7684\u6837\u5b50\u4e86\uff0c\u552f\u4e00\u7684\u95ee\u9898\u5728\u4e8e\u201c\u5b57\u7b26 $ch$ \u5230 $i$ \u7684\u8fb9\u548c\u5b57\u7b26 $ch$ \u5230 $n-i+1$ \u7684\u8fb9\u53ea\u80fd\u9009\u4e00\u4e2a\u201d\u5f88\u96be\u641e\u3002\n\n\u8003\u8651\u589e\u52a0\u4e00\u7ec4\u70b9\u7528\u4e8e\u9650\u5236\uff0c\u9650\u5236\u70b9 $(ch,i)(i\\le \\dfrac{n}{2})$ \u662f\u4e00\u4e2a\u4ece $ch$ \u8fde\u5230 $i$ \u548c $n-i+1$ \u5fc5\u987b\u7ecf\u8fc7\u7684\u70b9\u3002\u800c\u4ece $ch$ \u5230 $i$ \u548c $n-i+1$ \u6700\u591a\u6709\u4e00\u4e2a\u6d41\u91cf\uff0c\u6240\u4ee5\u70b9 $ch$ \u5230 $(ch,i)$ \u7684\u6d41\u91cf\u662f $1$\uff0c\u5c31\u89e3\u51b3\u4e86\u4e24\u6761\u8fb9\u53ea\u80fd\u9009\u4e00\u4e2a\u7684\u95ee\u9898\u3002\u518d\u4ece $(ch,i)$ \u8fde\u5230 $i$ \u548c $n-i+1$\uff0c\u8fb9\u6743\u8fd8\u662f\u4e00\u6837\u8ba1\u7b97\uff0c\u552f\u4e00\u7684\u4e0d\u540c\u5c31\u662f $ch$ \u51fa\u53d1\u7684\u6d41\u91cf\u53ea\u80fd\u5230\u8fbe $i$ \u548c $n-i+1$ \u5176\u4e2d\u4e4b\u4e00\u3002\n\n\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u7684\u95ee\u9898\uff0c\u628a\u8fb9\u6743\u8bbe\u6210\u8d1f\u7684\u5c31\u53d8\u6210\u666e\u901a\u7684\u8d39\u7528\u6d41\u3002\u8bbe $\\sigma=26$\uff0c\u70b9\u6570\u662f $2+\\sigma+n+\\dfrac{\\sigma n}{2}$\uff0c\u8fb9\u6570\u662f $\\sigma+n+\\dfrac{3\\sigma n}{2}$\uff0c\u6d41\u91cf\u662f $n$\uff0c\u603b\u7684\u590d\u6742\u5ea6\u662f $O(\\sigma^2n^3)$\uff0c\u4f46\u662f\u7f51\u7edc\u6d41\u4e00\u822c\u8dd1\u4e0d\u6ee1\uff0c\u5b9e\u9645\u8868\u73b0\u53ea\u8dd1\u4e86 `31ms` \u3002\n\n```cpp\n//\u56e0\u4e3a\u672c\u4eba\u7684\u4e60\u60ef\uff0c\u8d39\u7528\u6d41\u662f\u5c01\u7684\u677f\u5b50\uff0c\u89e3\u91ca\u4e00\u4e0b\u4e3b\u51fd\u6570\u4e2d\u8c03\u7528\u7684\u90e8\u5206\uff1a\n//Juc::ptt(i)\u662f\u5728\u56fe\u4e2d\u52a0\u4e0a\u7f16\u53f7\u4e3ai\u7684\u70b9\n//Juc::add(a,b,c,d)\u662f\u5728\u56fe\u4e2d\u52a0\u4e0a\u4ecea\u5230b\uff0c\u6d41\u91cf\u4e3ac\uff0c\u8d39\u7528\u4e3ad\u7684\u8fb9\u548c\u53cd\u5411\u8fb9\n//Juc::s\u662f\u6e90\u70b9\n//Juc::t\u662f\u6c47\u70b9\n//Juc::MCMF()\u662f\u8dd1\u8d39\u7528\u6d41\n//Juc::cost\u662f\u8fd0\u884c\u51fa\u6765\u7684\u8d39\u7528\n\n#define rd(i,n) for(int i=0;i<n;i++)\n#define rp(i,n) for(int i=1;i<=n;i++)\n#define rep(i,a,b) for(int i=a;i<=b;i++)\n#define per(i,a,b) for(int i=b;i>=a;i--)\n#define st string\n#define vt vector\n#define pb push_back\ntypedef long long ll;\nnamespace Juc{\n\tint n,m,s,t,a,b,c,d;\n\tvt<int>pnts;\n\tint dep[200005],vis[200005],cur[200005],dist[200005],vist[200005];\n\tstruct edge{\n\t\tint a,b,f,c;\n\t\tedge(int _a,int _b,int _f,int _c){\n\t\t\ta=_a,b=_b,f=_f,c=_c;\n\t\t};\n\t};\n\tvt<edge>ve;\n\tvt<int>vv[200005];\n\tinline void add(int a,int b,int c,int d){\n\t\tve.pb(edge(a,b,c,d));\n\t\tve.pb(edge(b,a,0,-d));\n\t\tvv[a].pb(ve.size()-2);\n\t\tvv[b].pb(ve.size()-1);\n\t}\n\tinline void ptt(int a){\n\t\tpnts.pb(a);\n\t}\n\tinline bool SPFA(){\n\t\tfor(auto i:pnts)dist[i]=1e9,vist[i]=0,vis[i]=0,cur[i]=0;\n\t\tqueue<int>q;\n\t\tq.push(s),vist[s]=1,dist[s]=0;\n\t\twhile(q.size()){\n\t\t\tint i=q.front();\n\t\t\tq.pop();\n\t\t\tvist[i]=0;\n\t\t\tfor(auto g:vv[i]){\n\t\t\t\tauto &e=ve[g];\n\t\t\t\tif(e.f&&dist[i]+e.c<dist[e.b]){\n\t\t\t\t\tdist[e.b]=dist[i]+e.c;\n\t\t\t\t\tif(!vist[e.b]){\n\t\t\t\t\t\tvist[e.b]=1;\n\t\t\t\t\t\tq.push(e.b);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn dist[t]!=1e9;\n\t}\n\tint cost=0;\n\tinline int DFS(int i,int f){\n\t\tif(i==t||f==0)return f;\n\t\tvis[i]=1;\n\t\tint res=0;\n\t\tfor(int j=cur[i];j<vv[i].size();j++){\n\t\t\tedge& e=ve[vv[i][j]];\n\t\t\tcur[i]=j;\n\t\t\tif(!vis[e.b]&&dist[e.b]==dist[i]+e.c&&e.f){\n\t\t\t\tll flow=DFS(e.b,min(e.f,f));\n\t\t\t\tve[vv[i][j]].f-=flow,ve[vv[i][j]^1].f+=flow;\n\t\t\t\tf-=flow,res+=flow;\n\t\t\t\tcost+=flow*e.c;\n\t\t\t}\n\t\t\tif(!f)break;\n\t\t}\n\t\tvis[i]=0;\n\t\treturn res;\n\t}\n\tinline int MCMF(){\n\t\tint ans=0;\n\t\twhile(SPFA()){\n\t\t\tans+=DFS(s,1e9);\n\t\t}\n\t\treturn ans;\n\t}\n}\nint n,b[105],cnt[26];\nst s;\nsigned main(){\n\tios::sync_with_stdio(false);\n\tcin.tie(0);cout.tie(0);\n\tcin>>n>>s;s='$'+s;\n\trp(i,n)cin>>b[i];\n\trp(i,n)cnt[s[i]-'a']++;\n    //\u5efa\u7acb\u6e90\u70b9\n\tJuc::ptt(0);Juc::s=0;\n    //\u5efa\u7acb\u5b57\u7b26\u70b9\u548c\u521d\u59cb\u6d41\u91cf\n\trd(i,26)Juc::ptt(i+1),Juc::add(0,i+1,cnt[i],0);\n    //\u5efa\u7acb\u4f4d\u7f6e\u70b9\n\trp(i,n)Juc::ptt(26+i);\n    //\u5efa\u7acb\u9650\u5236\u70b9\n\trp(i,n/2)rd(j,26){\n\t\tint cur=26+n+(i-1)*26+j+1;\n\t\tJuc::ptt(cur);\n       //\u901a\u8fc7\u6d41\u91cf\u4e3a1\u8fdb\u884c\u9650\u5236\n\t\tJuc::add(j+1,cur,1,0);\n       //\u8fde\u8d21\u732e\u8fb9\n\t\tJuc::add(cur,26+i,1,-b[i]*(j+'a'==s[i]));\n\t\tJuc::add(cur,26+n-i+1,1,-b[n-i+1]*(j+'a'==s[n-i+1]));\n\t}\n    //\u5efa\u7acb\u6c47\u70b9\u548c\u6700\u7ec8\u6d41\u91cf\n\tint tot=26+n+n*26+1;\n\tJuc::t=tot;Juc::ptt(tot);\n\trp(i,n)Juc::add(26+i,tot,1,0);\n\tJuc::MCMF();\n\tcout<<-Juc::cost<<endl;\n\treturn 0;\n}\n//Crayan_r\n```",
        "postTime": 1675846968,
        "uid": 304222,
        "name": "jucason_xu",
        "ccfLevel": 0,
        "title": "CF884F\u9898\u89e3"
    }
]