[
    {
        "content": "\n## \u9898\u89e3\uff1a\n\n\u4e00\u773cDP\uff0c\u770b\u5230\u8fd9\u4e2a\u6570\u636e\u8303\u56f4\u89c9\u5f97\u5e94\u8be5\u662f\u591a\u7ef4\u72b6\u6001\u3002\n\n\u6240\u4ee5\u76f4\u63a5\u6309\u9898\u610f\u8bbe\uff1a\n\n$dp[i][j][k]$\u8868\u793a\u4ecei\u5230j\u4e00\u5171\u4f7f\u7528\u7684\u8f66\u6b21\u4e0d\u8d85\u8fc7k\u7684\u6700\u77ed\u65f6\u95f4\n\n\u90a3\u4e48\u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u4e2a\u8f6c\u79fb\u548c\u4e2d\u8f6c\u70b9\u6709\u5173\u7cfb\u3002\u4e5f\u5c31\u662f\u679a\u4e3e\u65ad\u70b9\uff0c\u7c7b\u4f3c$Floyd$\u7684\u8f6c\u79fb\u3002\u4f46\u662f\u8fd8\u6709\u8fd9\u4e2a\u6362\u8f66\u7684\u4e00\u7ef4\u6bd4\u8f83\u96be\u641e\u3002\n\n\u7a0d\u52a0\u601d\u7d22\uff0c\u89c9\u5f97\u8f6c\u79fb\u5e94\u8be5\u662f\u8fd9\u6837\u7684\uff1a\n$$\ndp[i][j][k]=\\min(dp[i][l][k-1]+dp[l][j][0])\\quad(l\\in (1,n))\n$$\n\u4e5f\u5c31\u662f\uff0c\u5148\u6362\u4e0d\u8d85\u8fc7k-1\u6b21\u8f66\uff0c\u6700\u540e\u4e0d\u6362\u8f66\u76f4\u63a5\u5230\u8fbe\uff0c\u56e0\u4e3a\u65ad\u70b9\u5904\u5fc5\u7136\u6362\u4e00\u6b21\u8f66\u3002\n\n\u90a3\u4e48\u521d\u503c\u4e5f\u5c31\u662f\u4e0d\u6362\u8f66\u76f4\u8fbe\u7684\u65f6\u95f4\u3002\u8fd9\u4e2a\u9700\u8981\u5f00\u59cb\u5c31\u505a\u4e00\u904d\u677e\u5f1b\u3002\n\n\u7136\u540e\u5c31\u770b\u4ee3\u7801\u5427\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nconst int maxq=1e5+5;\nint n,m,r,maxx;\nint dp[62][62][62];\n//dp[i][j][k]\u8868\u793ai->j\u6362k\u6b21\u8f66\u7684\u6700\u5c0f\u65f6\u95f4\nint a[62][62][62];\n//a[k][i][j]\u8868\u793ai->j\u7684\u539f\u59cb\u65f6\u95f4\nint q[maxq][3];\nint main()\n{\n    scanf(\"%d%d%d\",&n,&m,&r);\n    for(int k=1;k<=m;k++)\n        for(int i=1;i<=n;i++)\n            for(int j=1;j<=n;j++)\n                scanf(\"%d\",&a[k][i][j]);\n    for(int i=1;i<=r;i++)\n    {\n        scanf(\"%d%d%d\",&q[i][0],&q[i][1],&q[i][2]);\n        maxx=max(maxx,q[i][2]);\n    }\n    maxx=min(maxx,n);\n    for(int op=1;op<=m;op++)\n        for(int k=1;k<=n;k++)\n            for(int i=1;i<=n;i++)\n                for(int j=1;j<=n;j++)\n                    a[op][i][j]=min(a[op][i][j],a[op][i][k]+a[op][k][j]);\n    memset(dp,127,sizeof(dp));\n    for(int op=1;op<=m;op++)\n        for(int i=1;i<=n;i++)\n            for(int j=1;j<=n;j++)\n                dp[i][j][0]=min(dp[i][j][0],a[op][i][j]);\n    for(int k=1;k<=maxx+1;k++)\n    {\n        for(int i=1;i<=n;i++)\n            for(int j=1;j<=n;j++)\n                dp[i][j][k]=dp[i][j][k-1];\n        for(int l=1;l<=n;l++)\n            for(int i=1;i<=n;i++)\n                for(int j=1;j<=n;j++)\n                    dp[i][j][k]=min(dp[i][j][k],dp[i][l][k-1]+dp[l][j][0]);\n    }\n    for(int i=1;i<=r;i++)\n    {\n        q[i][2]=min(q[i][2],maxx);\n        printf(\"%d\\n\",dp[q[i][0]][q[i][1]][q[i][2]]);\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1606698842,
        "uid": 175131,
        "name": "\u5085\u601d\u7ef4666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF187B \u3010AlgoRace\u3011"
    },
    {
        "content": "\u6211\u4eec\u8003\u8651\u52a8\u6001\u89c4\u5212\u3002\n\n------------\n\n\n\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\n* $i\\to j$\u53ea\u7528\u7b2c$k$\u90e8\u8f66\u7684\u6700\u77ed\u65f6\u95f4\u4e3a$g_{i,j,k}$\uff1b\n* \u5e76\u4e14\u8bbe$f_{i,j,p}$\u8868\u793a$(i,j)$**\u6362$p$\u6b21\u8f66**\u7684\u6700\u77ed\u65f6\u95f4\u3002\n\n\u4e8e\u662f\u6211\u4eec\u8003\u8651\u4f7f\u7528`Floyd`\u7b97\u6cd5\uff0c\u53ef\u4ee5\u5f97\u5230\u8f6c\u79fb\u65b9\u7a0b\uff1a\n### $$f_{i,j,p}=\\displaystyle\\min_{k}^{k\\in V}\\{f_{i,k,p-1}+f_{k,j,0}\\}$$\n\u8fd9\u662f\u4ec0\u4e48\u610f\u601d\u5462\uff1f\u4e00\u822c\u7684`Floyd`\u5728\u8fdb\u884c\u677e\u5f1b\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u5e76\u4e0d\u9700\u8981\u8003\u8651\u8fd9\u91cc\u7684$p$\uff0c\u800c\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u53d1\u73b0\u6bcf\u6b21\u677e\u5f1b\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u90fd\u9700\u8981\u201c\u6362\u4e00\u6b21\u8f66\u201d\u3002\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\uff0c\u5982\u679c\u6211\u4eec\u8981\u6c42\u6362$p$\u6b21\u8f66\u7684\u6700\u5c0f\u503c\uff0c\u4e00\u5b9a\u662f\u6362$p-1$\u6b21\u8f66\u4e4b\u540e\uff0c\u518d\u6362\u4e00\u6b21\u8f66\u3002\u800c\u524d$p-1$\u6b21\u6362\u8f66\u5bf9\u5e94\u7684\u5c31\u662f$i\\to k$\uff0c\u800c\u6700\u540e\u518d\u6362\u4e00\u6b21\u8f66$k\\to j$\u3002\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u901a\u8fc7$1000$\u6b21\uff08\u8be2\u95ee\u4e2d$k$\u7684\u6700\u5927\u503c\uff09`Floyd`\u5c31\u53ef\u4ee5\u6c42\u51fa\u7b54\u6848\u4e86\u3002\u90a3\u4e48$g_{i,j,k}$\u600e\u4e48\u6c42\u5462\uff1f\u5f88\u7b80\u5355\uff0c\u8bfb\u5165\u4e4b\u540e\u505a$m$\u6b21`Floyd`\u5373\u53ef\u3002\u8fd9\u6837\u8fd9\u4e2a\u7b97\u6cd5\u5c31\u7ed3\u675f\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(k_{\\max}\\cdot n^3)=2.16\\times 10^8$\uff0c\u770b\u8d77\u6765\u52c9\u5f3a\u53ef\u4ee5\u901a\u8fc72000ms\u7684\u5b9e\u73b0\uff0c\u7136\u540e\u6700\u540e\u6211`TLE 36`\u4e86\uff08\u52a0\u4e0a\u4f18\u5316\u4e4b\u540e\u4ecd\u7136`TLE 53`\uff09.\u6240\u4ee5\u6211\u4eec\u6709\u6ca1\u6709\u4ec0\u4e48\u597d\u7684\u529e\u6cd5\u8fdb\u4e00\u6b65\u4f18\u5316\u5462\uff1f\n\n------------\n\n\u5176\u5b9e\u7b97\u6cd5\u4e0a\u5e76\u4e0d\u9700\u8981\u4f18\u5316\uff01\n\u6211\u4eec\u6ce8\u610f\u5230\u56e0\u4e3a\u53ea\u6709$60$\u4e2a\u57ce\u5e02\uff0c\u6240\u4ee5\u6362\u8f66\u6b21\u6570\u4e0d\u4f1a\u8d85\u8fc7$60$\uff0c\u90a3\u4e48\u6211\u4eec\u628a$k_{\\max}$\u5c31\u53ef\u4ee5\u53ef\u770b\u505a\u662f$60$\uff0c\u4e8e\u662f$O(k_{\\max}\\cdot n^3)=60^4=1.296\\times 10^7$.\u4e8e\u662f\u5c31\u5f88\u6109\u5feb\u5730\u901a\u8fc7\u4e86\u3002\n\n------------\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<assert.h>\n#define NDEBUG\nconst int MAXN=65,MAXK=1010;\nconst int MAXQ=100010;\nint n,m,r,max_k=1<<31;\nint f[MAXN][MAXN][MAXK],g[MAXN][MAXN][MAXN];\nint q[MAXQ][3];\n//f_{i,j,k}=(i,j)\u6362k\u6b21\u8f66. g_{k,i,j}=(i,j)\u7528\u7b2ck\u79cd\u8f66\u76f4\u63a5\u8dd1.\n\ninline int max(int x,int y){\n    return x>y?x:y;\n}\ninline int min(int x,int y){\n    return x<y?x:y;\n}\nint main(){\n//\tfreopen(\"test.in\",\"r\",stdin);\n    scanf(\"%d%d%d\",&n,&m,&r);\n    for(int k=1;k<=m;k++)\n        for(int i=1;i<=n;i++)\n            for(int j=1;j<=n;j++)\n                scanf(\"%d\",&g[k][i][j]);\n    for(int i=1;i<=r;i++){\n        scanf(\"%d%d%d\",&q[i][0],&q[i][1],&q[i][2]);\n        max_k=max(max_k,q[i][2]);\n    }\n    max_k=min(max_k,n);\n                \n    //floyd O(m* n^3)=O(n^4)=1.296e+7;\n    for(int p=1;p<=m;p++)\n        for(int k=1;k<=n;k++)\n            for(int i=1;i<=n;i++)\n                for(int j=1;j<=n;j++)\n                    g[p][i][j]=min(g[p][i][j],g[p][i][k]+g[p][k][j]);\n                \n    for(int i=1;i<=n;i++)\n   \t\tfor(int j=1;j<=n;j++)\n   \t\t\tf[i][j][0]=~(1<<31);\n    for(int k=1;k<=m;k++)//\u521d\u503c\uff1a\u4e0d\u6362\u8f66\uff0c\u4ece\u5934\u8dd1\u5230\u5c3e.\n       \tfor(int i=1;i<=n;i++)\n       \t\tfor(int j=1;j<=n;j++)\n                f[i][j][0]=min(f[i][j][0],g[k][i][j]);\n                \n    for(int p=1;p<=max_k+1;p++){\n        for(int i=1;i<=n;i++)\n        \tfor(int j=1;j<=n;j++)\n                f[i][j][p]=f[i][j][p-1];\n        for(int k=1;k<=n;k++)\n        \tfor(int i=1;i<=n;i++)\n        \t\tfor(int j=1;j<=n;j++)\n        \t\t\tf[i][j][p]=min(f[i][j][p],f[i][k][p-1]+f[k][j][0]);\n    }\n       \n    for(int i=1;i<=r;i++){\n        q[i][2]=min(q[i][2],max_k);\n        printf(\"%d\\n\",f[q[i][0]][q[i][1]][q[i][2]]);\n    }\n    return 0;\n}\n```",
        "postTime": 1523000242,
        "uid": 23398,
        "name": "frankchenfu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF187B \u3010AlgoRace\u3011"
    }
]