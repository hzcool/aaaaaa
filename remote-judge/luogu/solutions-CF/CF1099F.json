[
    {
        "content": "\u672c\u9898\u89e3\u540c\u6b65\u53d1\u5e03\u4e8e[\u672c\u573a$\\mathrm{CF}$\u603b\u9898\u89e3](https://www.luogu.org/blog/kaiming/CF530Div2)\uff0c\u6b22\u8fce\u6765\u8e29\u3002\n\n## F - Cookies\n\n\u8fd9\u9898\u5728\u8003\u8bd5\u65f6\u95f4\u5185\u6709\u4e86\u6b63\u786e\u7684\u601d\u8def\u4f46\u6ca1\u6709\u5199\u5b8c\u3002\u3002\u3002\n\n### $\\mathrm{Vasya}$\u7684\u7b56\u7565\n\n\u9898\u76ee\u7684\u8868\u8ff0\u4e2d\uff0c$\\mathrm{Vasya}$\u662f\u53ef\u4ee5\u968f\u4fbf\u526a\u65ad\u5f53\u524d\u6807\u8bb0\u6240\u5728\u7ed3\u70b9$x$\u5230\u4efb\u610f\u4e00\u68f5\u5b50\u6811\u7684\u3002\n\n\u4f46\u662f\u9898\u76ee\u8981\u6c42\u6211\u4eec\u6c42\u7684\u662f\u6700\u574f\u60c5\u51b5\u4e0b\u7684\u6700\u5c0f\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u53ea\u8003\u8651$\\mathrm{Vasya}$\u521b\u9020\u4e86\u6700\u574f\u7684\u6761\u4ef6\uff0c\u5373\u526a\u6389\u4e86\u672c\u6765\u53ef\u4ee5\u53d6\u5230\u6700\u4f18\u89e3\u7684\u5b50\u6811\u3002\n\n### \u6811\u5f62$\\mathrm{DP}$\n\n\u9996\u5148\u505a\u4e00\u6b21$\\mathrm{DP}$\uff0c\u6c42\u51fa$\\mathrm{Vasya}$\u4e0d\u526a\u65f6\u7684\u6700\u4f18\u89e3\uff0c\u540c\u65f6\u8bb0\u5f55\u53d6\u5230\u6700\u4f18\u89e3\u7684\u4f4d\u7f6e\u3002\n\n\u63a5\u4e0b\u6765\u6807\u8bb0\u4e0d\u5f97\u8fdb\u5165\u4e4b\u524d\u6700\u4f18\u89e3\u7684\u4f4d\u7f6e\uff0c\u518d\u505a\u4e00\u6b21$\\mathrm{DP}$\u3002\n\n\u8fd9\u4e24\u6b21$\\mathrm{DP}$\u7b49\u4ef7\u4e8e\u7ef4\u62a4\u4e86\u6bcf\u4e2a\u7ed3\u70b9\u7684\u6700\u4f18\u89e3\u548c\u6b21\u4f18\u89e3\u3002\n\n\u5728$\\mathrm{DP}$\u7684\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u4e86\u8d2a\u5fc3\u7684\u601d\u60f3\uff0c\u663e\u7136\u4ece\u6839\u5230$x$\u7684\u8def\u5f84\u4e0a\uff0c\u5c3d\u91cf\u5403\u82b1\u8d39\u65f6\u95f4\u5c11\u7684\u997c\u5e72\u3002\n\n### \u7ef4\u62a4\u997c\u5e72\n\n\u6211\u4e00\u5f00\u59cb\u662f\u60f3\u901a\u8fc7$\\mathrm{vector}$\u6216\u8005$\\mathrm{Heap}$\u6765\u7ef4\u62a4\u7684\uff0c\u53ef\u662f\u53d1\u73b0\u8fd9\u6837\u4e0d\u592a\u597d\u5b9e\u73b0\uff0c\u5e76\u4e14\u5728\u94fe\u7684\u60c5\u51b5\u4e0b\u590d\u6742\u5ea6\u4f1a\u9000\u5316\u4e3a$O(n^2)$\u3002\n\n\u6211$\\color{purple} \\text{\u592a\u83dc\u4e86}$\u5e76\u4e0d\u4f1a\u591a\u5c11\u6570\u636e\u7ed3\u6784\uff0c\u4e8e\u662f\u81ea\u7136\u800c\u7136\u60f3\u5230\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u6765\u7ef4\u62a4\uff0c\u6811\u72b6\u6570\u7ec4\u7684\u4e0b\u6807\u4e3a$t$\uff0c\u63d2\u5165\u7684\u503c\u4e3a\u997c\u5e72\u6570\u76ee\u3002\n\n\u7136\u540e\u4e8c\u5206$t$\u5c31\u884c\u4e86\u3002\n\ncode:\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define int long long\n#define maxn 100003\nint n,T;\nint x[maxn],t[maxn];\nint Head[maxn],tot,Next[maxn],to[maxn],w[maxn];\nint aa,bb;\nint ans[maxn];\nint fake;\ntemplate<typename Tp>\nvoid read(Tp &x){\n\tx=0;char ch=1;int fh;\n\twhile(ch!='-'&&(ch>'9'||ch<'0')) ch=getchar();\n\tif(ch=='-'){\n\t\tch=getchar();fh=-1;\n\t}\n\telse fh=1;\n\twhile(ch>='0'&&ch<='9'){\n\t\tx=(x<<1)+(x<<3)+ch-'0';\n\t\tch=getchar();\n\t}\n\tx*=fh;\n}\n\nstruct BIT{\n\t#define lowbit(x) (x&(-x))\n\tint c[1001003];\n\tvoid add(int x,int k){\n\t\twhile(x<=1001000){\n\t\t\tc[x]+=k;x+=lowbit(x);\n\t\t}\n\t}\n\tint query(int x){\n\t\tint re=0;\n\t\twhile(x){\n\t\t\tre+=c[x];x-=lowbit(x);\n\t\t}\n\t\treturn re;\n\t}\n}a,b;\n\nvoid add(int x,int y,int z){\n\tto[++tot]=y,Next[tot]=Head[x],Head[x]=tot,w[tot]=z;\n}\n\nint erfen(int fa){\n\tint l=0,r=1000000,mid,re=0;\n\twhile(l<=r){\n\t\tmid=(l+r)>>1;\n\t\tif(a.query(mid)<=fa) re=mid,l=mid+1;\n\t\telse r=mid-1;\n\t}\n\tfake=l;\n\treturn re;\n}\n\nint find(int node){\n\tint l=fake,r=1000000,re=0,mid;\n\twhile(l<=r){\n\t\tmid=(l+r)>>1;\n\t\tif(b.query(mid)!=ans[node]) re=mid,r=mid-1;\n\t\telse l=mid+1;\n\t}\n\treturn re;\n}\n\nvoid dfs(int node,int dis){\n    int rest=T-2*dis;\n    a.add(t[node],x[node]*t[node]);\n    b.add(t[node],x[node]);\n    int flag=erfen(rest);\n    if(flag) ans[node]=b.query(flag),rest-=a.query(flag);\n    flag=find(node);\n    if(flag) ans[node]+=rest/flag;\n    for(int i=Head[node];i;i=Next[i]){\n    \tdfs(to[i],dis+w[i]);\n\t}\n    a.add(t[node],-x[node]*t[node]);\n    b.add(t[node],-x[node]);\n    int mx=0,del=0;\n    for(int i=Head[node];i;i=Next[i]){\n    \tif(ans[to[i]]>mx){\n    \t\tmx=ans[to[i]],del=to[i];\n    \t}\n    }\n    if(node==1){\n\t\tans[node]=max(ans[node],mx);\n\t\treturn;\n\t}\n    for(int i=Head[node];i;i=Next[i]){\n    \tif(to[i]==del) continue;\n    \tans[node]=max(ans[node],ans[to[i]]);\n    }\n}\n\nint main(){\n\tread(n);read(T);\n\tfor(register int i=1;i<=n;i++){\n\t\tread(x[i]);\n\t}\n\tfor(register int i=1;i<=n;i++){\n\t\tread(t[i]);\n\t}\n\tfor(register int i=2;i<=n;i++){\n\t\tread(aa);read(bb);\n\t\tadd(aa,i,bb);\n\t}\n\tdfs(1,0);\n\tprintf(\"%I64d\\n\",ans[1]);\n\treturn 0;\n}\n```",
        "postTime": 1566052736,
        "uid": 28910,
        "name": "\u89c8\u904d\u5343\u79cb",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1099F \u3010Cookies\u3011"
    },
    {
        "content": "[\u6d1b\u8c37\u9898\u9762](https://www.luogu.com.cn/problem/CF1099F)\n[CF\u9898\u9762](https://codeforces.com/problemset/problem/1099/F)\n\n# $Description:$\n\u7ea2\u9ec4\u997c\u5e72\u73a9\u6e38\u620f\u3002\n\n\u6709\u4e00\u68f5\u4ee5 $1$ \u53f7\u8282\u70b9\u4e3a\u6839\u7684\u6811\uff0c\u8282\u70b9 $i$ \u4e0a\u6709 $x_i$ \u4e2a\u997c\u5e72\uff0c\u5728\u8282\u70b9 $i$ \u4e0a\u5403\u4e00\u4e2a\u997c\u5e72\u8981\u82b1 $t_i$ \u65f6\u95f4\u3002\n\n\u5bf9\u4e8e $i$ \u53f7\u8282\u70b9 $(i > 2)$\uff0c\u4ed6\u7684\u7236\u4eb2\u4e3a $p_i$ \u4e14\u5230\u8fbe\u4ed6\u7684\u7236\u4eb2\u9700\u8981\u82b1 $l_i$ \u65f6\u95f4\u3002\n\n\u9ec4\u997c\u5e72\u4e00\u5f00\u59cb\u5728 $1$ \u53f7\u8282\u70b9\u3002\u9ec4\u997c\u5e72\u548c\u7ea2\u997c\u5e72\u8f6e\u6d41\u64cd\u4f5c\u3002\u5728\u6bcf\u56de\u5408\uff1a\n\n- \u9ec4\u997c\u5e72\u53ef\u4ee5\u8d70\u5230\u81ea\u5df1\u6240\u5728\u8282\u70b9\u7684\u4efb\u610f\u4e00\u4e2a\u513f\u5b50\n- \u9ec4\u997c\u5e72\u8d70\u5b8c\u540e\uff0c\u7ea2\u997c\u5e72\u53ef\u4ee5\u5272\u6389\u9ec4\u997c\u5e72\u6240\u5728\u8282\u70b9\u7684\u4efb\u610f\u4e00\u4e2a\u8fde\u63a5\u513f\u5b50\u7684\u8fb9\uff0c\u5f53\u7136\u4ed6\u53ef\u4ee5\u4e0d\u5272\u6389\u4efb\u4f55\u8fb9\u3002\n\n\u9ec4\u997c\u5e72\u53ef\u4ee5\u5728\u4efb\u610f\u4ed6\u7684\u56de\u5408\u7ed3\u675f\u6e38\u620f\uff0c\u7ed3\u675f\u6e38\u620f\u540e\u4ed6\u8981\u8fd4\u56de\u5230\u6839\u8282\u70b9\uff0c\u53ef\u4ee5\u987a\u8def\u5403\u70b9\u997c\u5e72\uff0c\u4e14\u9ec4\u997c\u5e72\u8d76\u8def\u548c\u5403\u997c\u5e72\u7684\u603b\u65f6\u95f4\u4e0d\u80fd\u8d85\u8fc7 $T$\u3002\n\n\u90a3\u4e48\u8bf7\u95ee\uff0c\u5728\u7ea2\u997c\u5e72\u64cd\u4f5c\u6700\u4f18\u65f6\uff0c\u9ec4\u997c\u5e72\u6700\u591a\u80fd\u5403\u5230\u591a\u5c11\u997c\u5e72\uff1f\n\n# $Solution:$\n\n\u6211\u4eec\u5148\u601d\u8003\u7ea2\u997c\u5e72\u4e0d\u5272\u8fb9\u65f6\u9ec4\u997c\u5e72\u6700\u591a\u80fd\u5403\u5230\u591a\u5c11\u997c\u5e72\u3002\u8003\u8651\u9ec4\u997c\u5e72\u5728\u8282\u70b9 $x$ \u7ed3\u675f\u6e38\u620f\u65f6\u80fd\u5403\u5230\u591a\u5c11\u997c\u5e72\u3002\n\n\u8d76\u8def\u65f6\u95f4\u662f\u4e00\u5b9a\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u591a\u5403\u65f6\u95f4\u5c11\u7684\u997c\u5e72\u3002\u6309\u65f6\u95f4\u6392\u5e8f\u997c\u5e72\u592a\u6c60\u6cbc\u4e86\uff0c\u6211\u4eec\u8003\u8651\u53e6\u4e00\u4e2a\u7b56\u7565\uff1a\u627e\u5230\u4e00\u4e2a $t$\uff0c\u6211\u4eec\u628a\u65f6\u95f4\u5c0f\u4e8e $t$ \u7684\u997c\u5e72\u5168\u5403\u5b8c\uff0c\u800c\u4e14\u8fd9\u6837\u53ef\u4ee5\u5403\u5230\u6700\u591a\u7684\u997c\u5e72\u3002\u7136\u540e\uff0c\u6211\u4eec\u627e\u5230\u5403\u65f6\u95f4\u5927\u4e8e $t$ \u7684\u7b2c\u4e00\u4e2a\u997c\u5e72\uff0c\u5c3d\u53ef\u80fd\u5403\u8fd9\u79cd\u997c\u5e72\u3002\u4ec0\u4e48\uff1f\u4f60\u95ee\u6700\u540e\u4e00\u79cd\u997c\u5e72\u4e0d\u591f\u5403\u600e\u4e48\u529e\uff1f\u6700\u540e\u4e00\u79cd\u997c\u5e72\u4e0d\u591f\u5403\u5c31\u4ee3\u8868\u4f60\u5403\u5b8c\u4e86\u6700\u540e\u4e00\u79cd\u997c\u5e72\uff0c\u90a3\u4e48\u5728 $t$ \u7b49\u4e8e\u6700\u540e\u4e00\u79cd\u997c\u5e72\u7684\u65f6\u95f4\u65f6\uff0c\u5c31\u53ef\u4ee5\u5403\u5230\u66f4\u591a\u7684\u997c\u5e72\uff0c\u4e0e\u524d\u9762\u8bf4\u7684\u4e0d\u7b26\uff0c\u6240\u4ee5\u6700\u540e\u4e00\u79cd\u997c\u5e72\u662f\u5403\u4e0d\u5b8c\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u6811\u72b6\u6570\u7ec4\u4e8c\u5206 $t$ \u6765\u5b9e\u73b0\u8fd9\u79cd\u7b56\u7565\u2014\u2014\u4e5f\u5c31\u662f\u7528\u6811\u72b6\u6570\u7ec4\u8bb0\u5f55\u997c\u5e72\u7684\u603b\u5171\u5403\u65f6\u95f4\u548c\u6570\u91cf\u3002\u5177\u4f53\u7684\u53ef\u4ee5\u53c2\u8003\u4ee3\u7801\u3002\n\n\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u8ba9\u7ea2\u997c\u5e72\u5272\u8fb9\u4e86\u3002\u7ea2\u997c\u5e72\u7684\u7b56\u7565\u80af\u5b9a\u662f\u8ba9\u9ec4\u997c\u5e72\u4e0d\u80fd\u8fbe\u5230\u8fd9\u4e9b\u513f\u5b50\u91cc\u7684\u6700\u4f18\u89e3\u3002\u5982\u679c\u6211\u4eec\u8bb0\u5f55\u4e86\u94a6\u5b9a\u5728\u54ea\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u8282\u70b9\u91cc\u8fd4\u56de\u6700\u591a\u80fd\u5403\u591a\u5c11\u997c\u5e72\uff0c\u90a3\u4e48\u7ea2\u997c\u5e72\u4e00\u5b9a\u4f1a\u5272\u6389\u8fde\u63a5\u80fd\u5403\u6700\u591a\u7684\u5b50\u6811\u8282\u70b9\u7684\u8fb9\u3002\u4e3a\u4ec0\u4e48\u5462\uff1f\u56e0\u4e3a\u8981\u5403\u5230\u8fd9\u4e9b\u997c\u5e72\uff0c\u8fd9\u6761\u8fb9\u662f\u5fc5\u7ecf\u4e4b\u8def\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u987a\u4fbf\u8bb0\u5f55\u4e00\u4e0b\u5728\u9ec4\u997c\u5e72\u76ee\u524d\u5b50\u6811\u91cc\u6700\u591a\u53ef\u4ee5\u5403\u5230\u591a\u5c11\u997c\u5e72\u3002\u4e0d\u8fc7\u8981\u6ce8\u610f\u5230\u5982\u679c\u9ec4\u997c\u5e72\u5728 $1$ \u53f7\u8282\u70b9\u7684\u8bdd\u7ea2\u997c\u5e72\u5c31\u65e0\u53ef\u5948\u4f55\u4e86\uff0c\u56e0\u4e3a\u662f\u9ec4\u997c\u5e72\u5148\u8d70\uff0c\u7136\u540e\u624d\u662f\u7ea2\u997c\u5e72\u3002\u5f53\u7136\uff0c\u6211\u4eec\u6700\u540e\u7684\u7b54\u6848\u5c31\u662f $1$ \u53f7\u8282\u70b9\u5b50\u6811\u7684\u7b54\u6848\u2014\u2014\u56e0\u4e3a\u8fd9\u5c31\u662f\u6574\u4e2a\u6811\u7684\u7b54\u6848 QwQ\n\n\u597d\u7684\uff0c\u8bdd\u5df2\u81f3\u6b64\uff0c$[\\text{SHOW YOU THE CODE}]$\uff01\uff01\uff01\uff01\uff01\uff01\n\n$Code:$\n```cpp\n#include <iostream>\nusing namespace std;\n#define int long long\nint n,T;\nint t[114514],len[114514],x[114514],qwq[114514];\nint head[114514],to[114514],nxt[114514],cnt = 0;\nvoid add(int u,int v) {\n\tcnt++;\n\tto[cnt] = v;\n\tnxt[cnt] = head[u];\n\thead[u] = cnt;\n}\nstruct tree {\n\tint a[16919810];\n\tinline int lowbit(int u) {return u&(-u);}\n\tvoid add(int u,int v) {\n\t\tfor(int i = u; i <= 1000001; i += lowbit(i)) {\n\t\t\ta[i] += v;\n\t\t}\n\t}\n\tint query(int u) {\n\t\tint ans = 0;\n\t\tfor(int i = u; i; i -= lowbit(i)) {\n\t\t\tans += a[i];\n\t\t}\n\t\treturn ans;\n\t}\n}timi,coky;\nvoid dfs(int now,int dis) {\n\tint tim = T-(dis<<1);\n\ttimi.add(t[now],t[now]*x[now]);\n\tcoky.add(t[now],x[now]);\n\tint l = 0,r = 1000001,ans = -1;\n\twhile(l <= r) {\n\t\tint mid = (l+r)>>1;\n\t\tif(timi.query(mid) <= tim) {\n\t\t\tans = mid;\n\t\t\tl = mid+1;\n\t\t} else {\n\t\t\tr = mid-1;\n\t\t}\n\t}\n\tif(ans != -1) {\n\t\tqwq[now] = coky.query(ans);\n\t\ttim -= timi.query(ans);\n\t}\n\tr = 1000001,ans = -1;\n\twhile(l <= r) {\n\t\tint mid = (l+r)>>1;\n\t\tif(coky.query(mid) != qwq[now]) {\n\t\t\tans = mid;\n\t\t\tr = mid-1;\n\t\t} else l = mid+1;\n\t}\n\tif(ans != -1) {\n\t\tqwq[now] += tim/ans;\n\t}\n\tfor(int i = head[now]; i; i = nxt[i]) {\n\t\tdfs(to[i],dis+len[to[i]]);\n\t}\n\tint son = 0,mx = 0;\n\tfor(int i = head[now]; i; i = nxt[i]) {\n\t\tif(qwq[to[i]] > mx) {\n\t\t\tson = to[i],mx = qwq[to[i]];\n\t\t}\n\t}\n\tif(now == 1) {qwq[now] = max(qwq[now],mx);}\n\telse {\n\t\tmx = 0;\n\t\tfor(int i = head[now]; i; i = nxt[i]) {\n\t\t\tif(to[i] != son && qwq[to[i]] > mx) {\n\t\t\t\tmx = qwq[to[i]];\n\t\t\t}\n\t\t}\n\t\tqwq[now] = max(qwq[now],mx);\n\t}\n\ttimi.add(t[now],-t[now]*x[now]);\n\tcoky.add(t[now],-x[now]);\n}\n\nsigned main() {\n\tios::sync_with_stdio(false);\n\tcin >> n >> T;\n\tfor(int i = 1; i <= n; i++) {\n\t\tcin >> x[i];\n\t}\n\tfor(int i = 1; i <= n; i++) {\n\t\tcin >> t[i];\n\t}\n\tfor(int i = 2; i <= n; i++) {\n\t\tint k;\n\t\tcin >> k >> len[i];\n\t\tadd(k,i);\n\t}\n\tdfs(1,0);\n\tcout << qwq[1];\n\treturn 0;\n}\n```",
        "postTime": 1672372002,
        "uid": 676055,
        "name": "eggegg185",
        "ccfLevel": 0,
        "title": "Cookies"
    },
    {
        "content": "### [Description](https://codeforces.com/contest/1099/problem/F)\n\nMitya \u548c Vasya \u5728\u73a9\u4e00\u4e2a\u6709\u8da3\u7684\u6e38\u620f\u3002\u4ed6\u4eec\u6709\u4e00\u9897 $n$ \u4e2a\u8282\u70b9\uff0c\u4ee5 $1$ \u4e3a\u6839\u7684\u6811\u3002\u9664\u4e86\u6839\u4e4b\u5916\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9 $i$\uff0c$p_i$ \u662f\u5b83\u7236\u4eb2\u7684\u7f16\u53f7\u3002\n\n\u5bf9\u4e8e\u6811\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9 $i$\uff0c\u5b83\u5305\u542b $x_i$ \u4e2a\u66f2\u5947\uff0cMitya \u9700\u8981 $t_i$ \u7684\u65f6\u95f4\u5403\u6389\u4e00\u5757\u66f2\u5947\uff1b\u5728\u6839\u8282\u70b9\u6709\u4e00\u5757\u82af\u7247\uff0cMitya \u53ef\u4ee5\u82b1\u4e0a $l_i$ \u7684\u65f6\u95f4\u5c06\u5b83\u79fb\u81f3\u5f53\u524d\u8282\u70b9\u7684\u4efb\u610f\u4e00\u4e2a\u513f\u5b50 $i$ \u5904\u3002\n\nMitya \u548c Vasya \u5c06\u8f6e\u6d41\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c\uff08Mitya \u5148\u5f00\u59cb\uff09\uff1a\n\n- Mitya \u5c06\u82af\u7247\u5411\u5f53\u524d\u8282\u70b9\u7684\u513f\u5b50\u79fb\u52a8\uff1b\n- Vasya \u5207\u65ad\u5f53\u524d\u8282\u70b9\u5230\u4e00\u4e2a\u513f\u5b50\u7684\u8fde\u63a5\u3002\n\nMitya \u53ef\u4ee5\u5728\u8f6e\u5230\u4ed6\u7684\u65f6\u5019\u7ed3\u675f\u6e38\u620f\uff0c\u7136\u540e\u82b1\u65f6\u95f4\u5c06\u82af\u7247\u79fb\u56de\u6839\u8282\u70b9\uff0c\u5e76\u4e14\u987a\u8def\u9009\u62e9\u6027\u5730\u5403\u6389\u4e00\u4e9b\u997c\u5e72\u3002\u6211\u4eec\u89c4\u5b9a\uff0c\u6574\u4e2a\u6d41\u7a0b\uff08\u6e38\u620f\u5f00\u59cb\u5230\u82af\u7247\u56de\u5230\u6839\u8282\u70b9\uff09\u7684\u9650\u65f6\u4e3a $T$\u3002\n\n\u6c42\u51fa\u5728\u9650\u5b9a\u65f6\u95f4\u5185\uff0c\u6700\u574f\u60c5\u51b5\u4e0b\uff0cMitya \u80fd\u5403\u6389\u66f2\u5947\u7684\u6700\u5927\u6570\u91cf\u3002\n\n### Idea\n\n\u6211\u4eec\u4ece\u6839\u5f00\u59cb $DP$\uff0c\u6700\u574f\u60c5\u51b5\u5c31\u662f Vasya \u5207\u65ad\u4e86\u6700\u4f18\u7684\u90a3\u4e2a\u513f\u5b50\uff0c\u6211\u4eec\u4ece\u6b21\u4f18\u7684\u513f\u5b50\u5904\u8f6c\u79fb\u7b54\u6848\u5373\u53ef\uff0c\u8ba1\u7b97\u7b54\u6848\u53ea\u8981\u8003\u8651\u662f\u5426\u5728\u5f53\u524d\u8282\u70b9\u6298\u8fd4\u3002\n\n\u6211\u4eec\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u6cbf\u8def\u4e0a\u6240\u6709\u66f2\u5947\u7684\u6d88\u8017\u65f6\u95f4\u548c\u6570\u91cf\uff0c\u5982\u679c\u9009\u62e9\u5728\u5f53\u524d\u8282\u70b9\u6298\u8fd4\uff0c\u8d2a\u5fc3\u5730\u9009\u62e9\u8017\u65f6\u6700\u5c0f\u7684\u66f2\u5947\u5403\u6389\u5373\u53ef\uff0c\u8fd9\u4e00\u6b65\u9aa4\u53ef\u4ee5\u4e8c\u5206\u5b8c\u6210\u3002\n\n### Code\n\n```cpp\n#include <bits/stdc++.h>\n#define mid ((l+r)>>1)\n#define ll long long\n#define maxn 100001\n#define maxt 1000100\nusing namespace std;\nint t[maxn],p[maxn];\nint d[maxn],x[maxn];\nvector<int> g[maxn];\nll ans[maxn];\nll T;int n;\nstruct BT{\n\tll t[maxn<<4];\n\tvoid add(int x,ll v){while(x<maxt)t[x]+=v,x+=(x&-x);}\n\tll sum(int x){ll r=0;while(x) r+=t[x],x-=(x&-x);return r;}\n}st,pt;\nvoid Dfs(int u,ll dis){\n\tll cur=T-2*dis;\n\tst.add(t[u],1ll*x[u]*t[u]);\n\tpt.add(t[u],x[u]);\n\tint l=0,r=maxt-1,res=0;\n\twhile(l<=r){\n\t\tif (st.sum(mid)<=cur)\n\t\t\tres=mid,l=mid+1;\n\t\telse r=mid-1;\n\t}\n\tif (res)\n\tans[u]=pt.sum(res),\n\tcur-=st.sum(res);\n\tr=maxt-1,res=0;\n\twhile(l<=r){\n\t\tif (pt.sum(mid)!=ans[u])\n\t\t\tres=mid,r=mid-1;\n\t\telse l=mid+1;\n\t}\n\tif (res) ans[u]+=cur/res;\n\tfor (auto v:g[u])\n\t\tDfs(v,dis+d[v]);\n\tst.add(t[u],-1ll*x[u]*t[u]);\n\tpt.add(t[u],-x[u]);\n\tll mx=0;int nxt=0;\n\tfor (auto v:g[u])\n\t\tif (ans[v]>mx) mx=ans[v],nxt=v;\n\tif (u==1) {ans[u]=max(ans[u],mx);return;}\n\tmx=0;\n\tfor (auto v:g[u])\n\t\tif (ans[v]>mx&&v!=nxt)\n\t\t\tmx=max(mx,ans[v]);\n\tans[u]=max(ans[u],mx);\n}\nint main(){\n\tcin>>n>>T;\n\tfor (int i=1;i<=n;++i)\n\t\tcin>>x[i];\n\tfor (int i=1;i<=n;++i)\n\t\tcin>>t[i];\n\tfor (int i=2;i<=n;++i)\n\t\tcin>>p[i]>>d[i],\n\t\tg[p[i]].push_back(i);\n\tDfs(1,0);\n\tcout<<ans[1]<<endl;\n\treturn 0;\n}\n```\n\n",
        "postTime": 1547129344,
        "uid": 37158,
        "name": "XG_Zepto",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1099F \u3010Cookies\u3011"
    }
]