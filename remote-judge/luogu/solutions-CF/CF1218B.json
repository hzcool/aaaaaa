[
    {
        "content": "\u5455\u3002\n\n\u6211\u4eec\u8003\u8651\u5728\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\u600e\u4e48\u505a\u3002\u5373\uff1a\u7ed9\u4f60\u4e00\u5806\u7ebf\u6bb5\uff0c\u4ed6\u4eec\u90fd\u5728\u4e00\u4e8c\u8c61\u9650\uff0c\u4ed6\u4eec\u9664\u4e86\u9876\u70b9\u4e0d\u4ea4\u3002\u4f60\u9700\u8981\u6c42\u51fa\u4ece $x$ \u8f74\u5f00\u59cb\uff0c\u7ecf\u8fc7\u6070\u597d\u4e00\u6761\u7ebf\u6bb5\u5230\u8fbe\u7684\u70b9\u96c6\u7684\u9762\u79ef\u3002\n\n\u663e\u7136\u5730\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u626b\u63cf\u7ebf\u89e3\u51b3\u3002\u7531\u4e8e\u76f4\u7ebf\u4e0d\u4ea4\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 set \u7ef4\u62a4\u7ebf\u6bb5\u7684\u524d\u540e\u987a\u5e8f\u3002\u8fd9\u6837\u6bcf\u6b21\u662f\u4e24\u4e2a\u68af\u5f62\u7684\u9762\u79ef\u5dee\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/wc9bv6jf.png)\n\n\u5982\u56fe\uff0c\u7c89\u8272\u662f\u6211\u4eec\u8981\u6c42\u7684\u9762\u79ef\u3002\n\n\u90a3\u8f6c\u5230\u6781\u5750\u6807\u7cfb\uff0c\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u8fd8\u662f\u53ef\u4ee5\u7528 set \u7ef4\u62a4\u7ebf\u6bb5\u7684\u524d\u540e\u987a\u5e8f\u3002\u6bcf\u6b21\u53d8\u6210\u4e86\u4e24\u4e2a\u4e09\u89d2\u5f62\u7684\u9762\u79ef\u5dee\u3002\n\n\u5b9e\u73b0\u7ec6\u8282\uff1a\n\n* \u6781\u89d2\u6392\u5e8f\u65f6\u6ce8\u610f\u8de8\u8d8a $y$ \u8f74\u8d1f\u534a\u8f74\u7684\u7ebf\u6bb5\uff0c\u53ef\u4ee5\u628a\u4ed6\u4eec\u62c6\u6210\u4e24\u6761\u76f4\u7ebf\u3002\n\n* set \u7ef4\u62a4\u65f6\u7531\u4e8e\u6392\u5e8f\u51fd\u6570\u662f `pair <double, int>`\uff0c\u76f4\u63a5 `erase` \u53ef\u80fd\u7531\u4e8e\u7cbe\u5ea6\u8bef\u5dee\u627e\u4e0d\u5230\uff0c\u800c\u4e14\u7531\u4e8e\u6709\u7b2c\u4e8c\u5173\u952e\u5b57\uff0c\u4e5f\u4e0d\u80fd\u901a\u8fc7 `-eps`\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e2a\u5143\u7d20\u5bf9\u5e94\u7684\u8fed\u4ee3\u5668\u4f4d\u7f6e\u8bb0\u4e0b\u6765\uff0c\u8fd9\u6837\u5220\u9664\u5c31\u4e0d\u4f1a\u6709\u8bef\u5dee\u4e86\u3002\n\n* \u7ebf\u6bb5\u4f1a\u5728\u4ea4\u70b9\u5904\u76f8\u4ea4\uff0c\u5982\u679c\u4e24\u6761\u90fd\u662f\u63d2\u5165\uff0c\u6211\u4eec\u65e0\u6cd5\u5728\u8fd9\u4e2a\u70b9\u5224\u65ad\u4ed6\u4eec\u4fe9\u7684\u987a\u5e8f\u3002\u6240\u4ee5\u8981\u628a\u6392\u5e8f\u70b9\u5411\u540e\u8f6c `eps` \u5ea6\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#define y1 yy1\n#include <bits/stdc++.h>\n#undef y1\nusing namespace std;\n \nconst int Maxn = 200005;\nint n, m, ct, line_ct, ord[Maxn];\nvector <int> Start[Maxn], End[Maxn];\ndouble ans, x[Maxn], y[Maxn];\nvector <pair <double, double > > tmp_Ve;\npair <double, double> P;\nstruct line\n{\n\tdouble x1, y1, x2, y2;\n} L[Maxn];\ndouble get_dis(int a, int b)\n{\n\treturn sqrt((x[a] - x[b]) * (x[a] - x[b]) + (y[a] - y[b]) * (y[a] - y[b]));\n}\ndouble get_dis(pair <double, double> p1, pair <double, double> p2 = make_pair(0, 0))\n{\n\treturn sqrt((p1.first - p2.first) * (p1.first - p2.first) + (p1.second - p2.second) * (p1.second - p2.second));\n}\ndouble S(pair <pair <double, double>, pair <double, double> > l)\n{\n\treturn fabs(l.first.first * l.second.second - l.first.second * l.second.first) / 2;\n}\npair <double, double> cross(int a, pair <double, double> point = P)\n{\n\tif (L[a].x1 == L[a].x2) return make_pair(L[a].x1, point.second / (double) point.first * L[a].x1);\n\tpair <double, double> l1, l2, result;\n\tl1.first = (L[a].y2 - L[a].y1) / (double) (L[a].x2 - L[a].x1);\n\tl1.second = L[a].y1 - l1.first * L[a].x1;\n\tif (!point.first) return make_pair(0, l1.second);\n\tl2.first = point.second / (double) point.first;\n\tl2.second = point.second - l2.first * point.first;\n\tif (abs(l1.first - l2.first) <= 1e-14) return min(make_pair(L[a].x1, L[a].y1), make_pair(L[a].x2, L[a].y2));\n\tresult.first = (l2.second - l1.second) / (l1.first - l2.first);\n\tresult.second = l1.second + result.first * l1.first;\n\treturn result;\n}\nstruct cmp\n{\n\tbool operator () (const int a, const int b) const\n\t{\n\t\treturn make_pair(get_dis(cross(a)), a) < make_pair(get_dis(cross(b)), b);\n\t}\n};\nset <int, cmp> Se;\nset <int, cmp> :: iterator It[Maxn];\nint main()\n{\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tscanf(\"%d\", &m);\n\t\tfor (int j = 1; j <= m; j++)\n\t\t\tct++, scanf(\"%lf%lf\", &x[ct], &y[ct]), ord[ct] = ct;\n\t\tx[ct + 1] = x[ct - m + 1], y[ct + 1] = y[ct - m + 1];\n\t\tfor (int j = ct - m + 1; j <= ct; j++)\n\t\t{\n\t\t\tint k = j == ct ? ct - m + 1 : j + 1;\n\t\t\ttmp_Ve.push_back(make_pair(x[j], y[j]));\n\t\t\tL[0] = (line){x[j], y[j], x[k], y[k]};\n\t\t\tpair <double, double> p = cross(0, make_pair(-1, 0));\n\t\t\tif (p.first < 0)\n\t\t\t{\n\t\t\t\tif (y[j] <= 0 && y[k] >= 0)\n\t\t\t\t{\n\t\t\t\t\ttmp_Ve.push_back(make_pair(p.first, -1e-14));\n\t\t\t\t\ttmp_Ve.push_back(make_pair(p.first, 1e-14));\n\t\t\t\t}\n\t\t\t\telse if (y[j] >= 0 && y[k] <= 0)\n\t\t\t\t{\n\t\t\t\t\ttmp_Ve.push_back(make_pair(p.first, 1e-14));\n\t\t\t\t\ttmp_Ve.push_back(make_pair(p.first, -1e-14));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tct -= m;\n\t\tm = tmp_Ve.size();\n\t\tfor (auto now : tmp_Ve)\n\t\t\tx[++ct] = now.first, y[ct] = now.second, ord[ct] = ct;\n\t\ttmp_Ve.clear();\n\t\tfor (int j = ct; j >= ct - m + 1; j--)\n\t\t{\n\t\t\tint k = j == ct ? ct - m + 1 : j + 1;\n\t\t\tif (abs(y[j]) + abs(y[k]) <= 1e-13)\n\t\t\t\tcontinue;\n\t\t\tif (abs(x[j]) + abs(x[k]) <= 1e-13)\n\t\t\t\tcontinue;\n\t\t\tL[++line_ct] = (line){x[j], y[j], x[k], y[k]};\n\t\t\tif (make_pair(atan2(y[j], x[j]), get_dis(j, 0)) < make_pair(atan2(y[k], x[k]), get_dis(k, 0)))\n\t\t\t{\n\t\t\t\tStart[j].push_back(line_ct);\n\t\t\t\tEnd[k].push_back(line_ct);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tStart[k].push_back(line_ct);\n\t\t\t\tEnd[j].push_back(line_ct);\n\t\t\t}\n\t\t}\n\t}\n\tsort(ord + 1, ord + 1 + ct, [](int a, int b){return make_pair(atan2(y[a], x[a]), get_dis(a, 0)) < make_pair(atan2(y[b], x[b]), get_dis(b, 0));});\n\tfor (int i = 1; i <= ct; i++)\n\t{\n\t\tP = make_pair(x[ord[i]], y[ord[i]]);\n\t\tif (!P.second) P.second += P.first < 0 ? -1e-11 : 1e-11;\n\t\tif (P.second < 0) P.first += 1e-11;\n\t\tif (P.second > 0) P.first -= 1e-11;\n\t\tfor (auto now : Start[ord[i]])\n\t\t\tIt[now] = Se.insert(now).first;\n\t\tfor (auto now : End[ord[i]])\n\t\t\tSe.erase(It[now]);\n\t\tif (Se.size() > 1)\n\t\t{\n\t\t\tint l1 = *Se.begin(), l2 = *(++Se.begin());\n\t\t\tpair <double, double> tmp1 = cross(l2), tmp2 = cross(l1);\n\t\t\tpair <double, double> tmp_P = make_pair(x[ord[i + 1]], y[ord[i + 1]]);\n\t\t\tif (S(make_pair(tmp1, cross(l2, tmp_P))) - S(make_pair(tmp2, cross(l1, tmp_P))) < -1e-9)\n\t\t\t{\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tans += S(make_pair(tmp1, cross(l2, tmp_P))) - S(make_pair(tmp2, cross(l1, tmp_P)));\n\t\t}\n\t}\n\tprintf(\"%.15lf\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1623036376,
        "uid": 49093,
        "name": "_sys",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1218B \u3010Guarding warehouses\u3011"
    }
]