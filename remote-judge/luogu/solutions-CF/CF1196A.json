[
    {
        "content": "# \u505a\u9898\u7ecf\u5386\n\u8fd9\u662f\u7a9d\u7684\u7b2c\u4e00\u9053\u672a\u77e5\u9898\n\n\u4e5f\u662f\u975e\u5e38\u7684\u6c34\n\n~~\u4f30\u8ba1\u6559\u7ec3\u77e5\u9053\u7a9d\u71ac\u591c\u505a\u8fd9\u79cd\u6c34\u9898\u8981\u6572\u7a9d\u4e86~~\n\n# \u9898\u76ee\u5927\u610f\n\n\u6709T\u7ec4\u6570\u636e\n\n\u6bcf\u6b21\u7ed9\u51faa,b,c\uff0c\u6c42\u8f93\u51fa $ floor((a+b+c)/2) $\n\n# \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n\nusing namespace std;\n#define ll long long\n\nll T,A,B,C;\n\nint main()\n{\n\tscanf(\"%lld\",&T);//\u8f93\u5165\u4e0d\u591a\u8bf4 \n\twhile(T--)\n\t{\n\t\tscanf(\"%lld%lld%lld\",&A,&B,&C);\n\t\tprintf(\"%lld\\n\",(A+B+C)/2);//C++\u6574\u9664\u81ea\u5e26\u53d6\u4e0b\u6574,\u522b\u5fd8\u8f93\u51fa\u56de\u8f66 \n\t}\n\treturn 0;//\u5b8c\u7f8e\u7ed3\u675f(\u6492\u82b1~~~~)\n}\n```\n\n# \u6ce8\u610f\u70b9\n(1\u2264a,b,c\u226410^16)\n\n\u6240\u4ee5\u6b64\u9898\u8981\u5f00long long\n\n# \u795dAC",
        "postTime": 1564745555,
        "uid": 133509,
        "name": "KazamiHina",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1196A \u3010Three Piles of Candies\u3011"
    },
    {
        "content": "## \u505a\u9898\u7ecf\u5386\n\u5927\u534a\u591c\u7684\u770b\u5230Alice and Bob\uff0c\u6211\u987f\u65f6\u5c31\u61f5\u4e86\u3002\u3002\u3002\u3002\n\u8bfb\u5b8c\u9898\u53d1\u73b0\u8fd9\u662f\u4e00\u9053~~\u6bd2\u7624~~\u6c34\u9898\u3002\n\n## \u9898\u76ee\u5206\u6790\n\nAlice\u548cBob\u5148\u628a\u8f83\u5c0f\u7684\u4e24\u5806\u53d6\u8d70\uff0c\u7136\u540e\u53bb\u53d6\u7b2c\u4e09\u5806\uff0c\u4f7f\u4e24\u4eba\u5c3d\u53ef\u80fd\u76f8\u7b49\u3002\n\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u5f53\u4e09\u5806\u52a0\u8d77\u6765\u4e3a\u5076\u6570\u65f6\uff0c\u9664\u4ee52\u8f93\u51fa\u3002\u5f53\u4e09\u5806\u52a0\u8d77\u6765\u4e3a\u5947\u6570\u65f6\uff0c\u591a\u62ff\u7684\u7684\u90a3\u4e2a\u4eba(\u53ef\u4ee5\u662fAlice\u4e5f\u53ef\u4ee5\u662fBob)\u8981\u4e22\u63891\uff0c\u56e0\u6b64\u4e5f\u662f\u9664\u4ee52\uff0c\u8f93\u51fa\u3002\n\n## \u4ee3\u7801\u9644\u4e0a\n```cpp\n/*by G_M_H*/\n#include<cmath>\n#include<cstdio>\n#include<vector>\n#include<cstring>\n#include<utility>\n#include<iostream>\n#include<algorithm>\n#define LL long long\nusing namespace std;\nint n;\nint main(){\n\tscanf(\"%d\",&n);\n\twhile(n--){\n\t\tLL a,b,c;\n\t\tscanf(\"%lld%lld%lld\",&a,&b,&c);\n\t\tprintf(\"%lld\\n\",(a+b+c)/2);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1564061570,
        "uid": 130029,
        "name": "G_M_H",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF1196A \u3010Three Piles of Candies\u3011"
    },
    {
        "content": "~~\u6b64\u9898\u8003\u67e5for\u5faa\u73af\u7684\u7528\u6cd5~~\n\n\u771f\u5b9e\u7ffb\u8bd1\uff1a\n\n>Alice\u548cBob\u5206\u4e09\u888b\u7cd6\uff0cAlice\u548cBob\u5148\u5404\u81ea\u62ff\u8d70\u4e00\u888b\uff0c\u6700\u540e\u4e00\u888b\u4efb\u610f\u5206\uff0c\u5982\u679cAlice\u7cd6\u591a\u7684\u8bdd\uff0c\u5979\u5c06\u628a\u591a\u7684\u4e00\u90e8\u5206\u4e22\u6389\uff0c\u4f7f\u4ed6\u4eec\u4e24\u4e2a\u7684\u7cd6\u6570\u76f8\u7b49\uff0cBob\u4e5f\u662f\u5982\u6b64\uff0c\u6c42Alice\u6700\u591a\u62ff\u5230\u591a\u5c11\u7cd6\u3002\n\n\u8981\u60f3\u62ff\u7684\u7cd6\u6700\u591a\uff0c\u5c31\u8981\u4f7f\u4e22\u6389\u7684\u7cd6d\u6700\u5c11\u3002($ans=\\frac{a+b+c-d}{2}$)\n\n\u53ef\u4ee5\u77e5\u9053$0<=d<=1$\u3002(\u5982\u679cd\u5927\u4e8e1\u4e0d\u5982\u4e00\u4eba\u591a\u62ff$\\lfloor \\frac{d}{2}\\rfloor$\u5757)\n\n\u4e8e\u662f$ans=\\lfloor \\frac{a+b+c}{2} \\rfloor$\n\n\u6ce8\u610f\u4e00\u4e0b\u624d\u662f\u672c\u9898\u89e3\u7cbe\u9ad3: ~~for\u5faa\u73af\u7684\u7528\u6cd5~~ \u538b\u884c\n\n(\u4e3b\u4f53\u4ee3\u7801)\u4e00\u884c\u89e3\u51b3\u8f93\u5165\u8f93\u51fa:\n```\nfor(scanf(\"%lld\",&N);scanf(\"%lld%lld%lld\",&a,&b,&c)!=EOF;printf(\"%lld\\n\",(a+b+c)>>1));\n//scanf(\"%lld%lld%lld\",&a,&b,&c)!=EOF\u4ee3\u8868\u8bfb\u53d6\u5230\u6587\u4ef6\u672b\u5c3e(EOF:End Of File)\n```\n\n~~\u538b\u884c\u4f7f\u6211\u5feb\u4e50~~",
        "postTime": 1564061513,
        "uid": 118040,
        "name": "\u4ec0\u4e48\u53eb\u4e2d\u4e8c\u5440",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1196A \u3010Three Piles of Candies\u3011"
    },
    {
        "content": "## \u9898\u76ee\u7ffb\u8bd1\n\u67093\u5806\u7cd6,\u6570\u91cf\u5df2\u77e5,\u73b0\u5728alice\u62ff\u8d70\u4efb\u610f\u4e00\u5806,bob\u62ff\u8d70\u4efb\u610f\u4e00\u5806,\u5269\u4e0b\u4e00\u5806\u7531\u4ed6\u4eec\u4efb\u610f\u5206\u914d\u3002\u5982\u679c\u4e24\u4eba\u7cd6\u7684\u6570\u91cf\u4e0d\u76f8\u7b49,\u591a\u7684\u90a3\u4e2a\u4eba\u5c31\u4f1a\u4e22\u5f03\u4e00\u4e9b,\u76f4\u5230\u4ed6\u4eec\u7684\u7cd6\u679c\u76f8\u7b49\u3002\u95ee\u5176\u4e2d\u4e00\u4e2a\u4eba\u7684\u7cd6\u679c\u6700\u591a\u591a\u5c11\u3002\n## \u9898\u76ee\u5206\u6790\n\u7ffb\u8bd1\u8005\u5df2\u7ecf\u544a\u8bc9\u4e86\u6211\u4eec\u662f$\\frac{a+b+c}{2}$\u53ef\u4e3a\u4ec0\u4e48\u662f\u8fd9\u4e2a\u7ed3\u679c\u5462?\n\n\u8bbea<=b<=c,alice \u62ff\u8d70a,bob\u62ff\u8d70b,alice\u518d\u4ecec\u5806\u91cc\u62ff\u8d70b-a(c>b,c>b-a),\u63a5\u4e0b\u6765\u7684\u5e73\u5206,\u5c31\u662fb+$\\frac{c-b+a}{2}$\n### \u8ba1\u7b97\n=$\\frac{2b}{2}+\\frac{c-b+a}{2}$ (\u901a\u5206)\n\n=$\\frac{2b+c-b+a}{2}$ (\u540c\u5206\u6bcd\u76f8\u52a0)\n\n=$\\frac{a+b+c}{2}$ (\u5408\u5e76\u540c\u7c7b\u9879,\u5f97\u51fa\u7ed3\u679c\u3002)\n## AC\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n\tint t,i;\n\tlong long a,b,c;\n\tcin>>t;\n\tfor(i=1;i<=t;i++){\n\t\tscanf(\"%lld %lld %lld\",&a,&b,&c); //scanf,printf\u6bd4cin,cout\u5feb\u3002\n\t\tprintf(\"%lld\\n\",(long long)(a+b+c)>>1); //<<1\u8868\u793a\u518d\u4e8c\u8fdb\u5236\u4e0b\u5de6\u79fb1,\u4e5f\u5c31\u662f\u628a\u6570\u00d72\u3002\n\t}\n}\n```\n\n## \u6e29\u99a8\u63d0\u793a\n\u6ce8\u610f\u770b\u6e05\u695aa,b,c<=$10^{16}$,\u8ba1\u7b97\u65f6\u8981\u8f6c\u4e3along long\u8ba1\u7b97\u3002",
        "postTime": 1564040525,
        "uid": 87799,
        "name": "xh39",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1196A \u3010Three Piles of Candies\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\u7ed9\u4f60\u4e09\u4e2a\u6570\uff0c\u8ba9\u4f60\u8f93\u51fa\u8fd9\u4e09\u4e2a\u6570\u7684\u548c\u9664\u4ee5\u4e8c\uff08\u8bdd\u8bf4\u82f1\u6587\u63cf\u8ff0\u4e00\u5927\u5806\uff0c\u7ffb\u8bd1\u76f4\u63a5\u5c31\u544a\u8bc9\u4f60\u8981\u5e72\u4ec0\u4e48\u4e86......\uff09\u3002\n\n\u5f88\u6c34\uff0c\u4e0d\u8fc7\u6709\u70b9\u5751\uff0c\u6ce8\u610f\u8981\u5f00long long\uff08\u4e5f\u53ea\u6709\u4e00\u70b9\u597d\u63d0\u9192\u7684\u4e86qwq\uff09\n\n\u4ee3\u7801\u5440\uff1a\n```cpp\n#include<iostream>\nusing namespace std;\nint main(){\n    int n;\n    long long a,b,c;//\u6ce8\u610flong long \n    cin>>n;\n    for(int i=1;i<=n;i++){\n        cin>>a>>b>>c;\n        cout<<(a+b+c)/2<<endl;//\u6ce8\u610f\u6362\u884c\n    }\n    return 0;\n}\n```\n\n~~\u7ed3\u675f\u5566\uff1f\u597d\u5427\uff0c\u7ba1\u7406\u5458\u5927\u5927\u6c42\u8fc7\u554aqwq~~\n\n\n",
        "postTime": 1570977529,
        "uid": 214148,
        "name": "_Camille_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1196A \u3010Three Piles of Candies\u3011"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f \u7ed9\u4f60\u4e09\u4e2a\u6570\u8ba9\u4f60\u8ba1\u7b97\u4e09\u4e2a\u6570\u76f8\u52a0\u9664\u4ee5\u4e8c\u3002\n\n$$\\large\\color{red}\\text{\u9ad8\u7cbe\u5ea6}$$\n\u524d\u65b9\u9ad8\u80fd\u9884\u8b66\n\u3002\n\n\u3002\n\n\u3002\n\n\u3002\n\n\u3002\n\n\u3002\n\n\u3002\n\n\u3002\n\n\u3002\n\n\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define MAXN 501\ninline int read(){\n    int x=0;bool f=0;char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-')f=!f;c=getchar();}\n    while(c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();}\n    return f?-x:x;\n}//\u5feb\u8bfb\n/*\u4ece\u8fd9\u4ee5\u4e0b\u662f\u4e00\u4e2aInt\u7c7b\u578b\uff0c\u9ad8\u7cbe\u5ea6\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5\u5b9a\u4e49\u4e5f\u53ef\u4ee5\u548cint\u7c7b\u578b\u4e00\u6837\u4f7f\u7528\uff0c\u81f3\u5c11\u5927\u90e8\u5206\u53ef\u4ee5\u3002*/\nconst int Big_B = 10; const int Big_L = 1;\ninline int intcmp_ (int a, int b) { if (a > b) return 1; return a < b ? -1 : 0; }\nstruct Int \n{\n#define rg register\n    inline int max (int a, int b) { return a > b ? a : b; }\n    inline int min (int a, int b) { return a < b ? a : b; }\n    std :: vector <int> c; Int () {} typedef long long LL; \n    Int (int x) { for (; x > 0; c.push_back (x % Big_B), x /= Big_B); }\n    Int (LL x) { for (; x > 0; c.push_back (x % Big_B), x /= Big_B); }\n    inline void CrZ () { for (; !c.empty () && c.back () == 0; c.pop_back ()); }\n    inline Int &operator += (const Int &rhs){\n        c.resize (max (c.size (), rhs.c.size ())); rg int i, t = 0, S;\n        for (i = 0, S = rhs.c.size (); i < S; ++ i)\n            c[i] += rhs.c[i] + t, t = c[i] >= Big_B, c[i] -= Big_B & (-t);\n        for (i = rhs.c.size (), S = c.size (); t && i < S; ++ i)\n            c[i] += t, t = c[i] >= Big_B, c[i] -= Big_B & (-t);\n        if (t) c.push_back (t); return *this;\n    }\n    inline Int &operator -= (const Int &rhs){\n        c.resize (max (c.size (), rhs.c.size ())); rg int i, t = 0, S;\n        for (i = 0, S = rhs.c.size (); i < S; ++ i)\n            c[i] -= rhs.c[i] + t, t = c[i] < 0, c[i] += Big_B & (-t);\n        for (i = rhs.c.size (), S = c.size (); t && i < S; ++ i)\n            c[i] -= t, t = c[i] < 0, c[i] += Big_B & (-t);\n        CrZ (); return *this;\n    }\n    inline Int &operator *= (const Int &rhs){\n        rg int na = c.size (), i, j, S, ai; \n        c.resize (na + rhs.c.size ()); LL t;\n        for (i = na - 1; i >= 0; -- i){\n            ai = c[i], t = 0, c[i] = 0;\n            for (j = 0, S = rhs.c.size (); j < S; ++ j){\n                t += c[i + j] + (LL) ai * rhs.c[j];\n                c[i + j] = t % Big_B, t /= Big_B;\n            }\n            for (j = rhs.c.size (), S = c.size (); t != 0 && i + j < S; ++ j)\n                t += c[i + j], c[i + j] = t % Big_B, t /= Big_B;\n            assert (t == 0);\n        }\n        CrZ (); return *this;\n    }\n    inline Int &operator /= (const Int &rhs) { return *this = div (rhs); }\n    inline Int &operator %= (const Int &rhs) { return div (rhs), *this; }\n    inline Int &shlb (int l = 1){\n        if (c.empty ()) return *this; c.resize (c.size () + l);rg int i;\n        for (i = c.size () - 1; i >= l; -- i) c[i] = c[i - l];\n        for (i = 0; i < l; ++ i) c[i] = 0;\n        return *this;\n    }\n    inline Int &shrb (int l = 1){\n        for (rg int i = 0; i < c.size () - l; ++ i) c[i] = c[i + l];\n        c.resize (max (c.size () - l, 0)); return *this;\n    }\n    inline Int div (const Int &rhs){\n        assert (!rhs.c.empty ()); Int q, r; rg int i; if (rhs > *this) return 0;\n        q.c.resize (c.size () - rhs.c.size () + 1); rg int _l, _r, mid;\n        for (i = c.size () - 1; i > c.size () - rhs.c.size (); -- i) r.shlb (), r += c[i];\n        for (i = c.size () - rhs.c.size (); i >= 0; -- i){\n            r.shlb (); r += c[i]; \n            if (r.Comp (rhs) < 0) q.c[i] = 0;\n            else {\n                _l = 0, _r = Big_B;\n                for (; _l != _r; ){\n                    mid = _l + _r >> 1;\n                    if ((rhs * mid).Comp (r) <= 0) _l = mid + 1; else _r = mid;\n                }\n                q.c[i] = _l - 1, r -= rhs * q.c[i];\n            }\n        }\n        q.CrZ (), *this = r; return q;\n    }\n    inline int Comp (const Int &rhs) const {\n        if (c.size () != rhs.c.size ()) return intcmp_ (c.size (), rhs.c.size ());\n        for (rg int i = c.size () - 1; i >= 0; -- i) \n            if (c[i] != rhs.c[i]) return intcmp_ (c[i], rhs.c[i]);\n        return 0;\n    }\n    friend inline Int operator + (const Int &lhs, const Int &rhs)\n    { Int res = lhs; return res += rhs; }\n    inline friend Int operator - (const Int &lhs, const Int &rhs){ \n        if (lhs < rhs){\n            putchar ('-'); \n            Int res = rhs; return res -= lhs;\n        }\n        else { Int res = lhs; return res -= rhs; }\n    }\n    friend inline Int operator * (const Int &lhs, const Int &rhs)\n    { Int res = lhs; return res *= rhs; }\n    friend inline Int operator / (const Int &lhs, const Int &rhs)\n    { Int res = lhs; return res.div (rhs); }\n    friend inline Int operator % (const Int &lhs, const Int &rhs)\n    { Int res = lhs; return res.div (rhs), res; }\n    friend inline std :: ostream &operator << (std :: ostream &out, const Int &rhs){ \n        if (rhs.c.size () == 0) out << \"0\";\n        else {\n            out << rhs.c.back ();\n            for (rg int i = rhs.c.size () - 2; i >= 0; -- i)\n                out << std :: setfill ('0') << std :: setw (Big_L) << rhs.c[i];\n        }\n        return out;\n    } \n    friend inline std :: istream &operator >> (std :: istream &in, Int &rhs){\n        static char s[100000];\n        in >> s + 1; int Len = strlen (s + 1);\n        int v = 0; LL r = 0, p = 1;\n        for (rg int i = Len; i >= 1; -- i){\n            ++ v; r = r + (s[i] - '0') * p, p *= 10;\n            if (v == Big_L) rhs.c.push_back (r), r = 0, v = 0, p = 1;\n        }\n        if (v != 0) rhs.c.push_back (r); return in;\n    }\n    friend inline bool operator < (const Int &lhs, const Int &rhs)\n    { return lhs.Comp (rhs) < 0; }\n    friend inline bool operator <= (const Int &lhs, const Int &rhs)\n    { return lhs.Comp (rhs) <= 0; }\n    friend inline bool operator > (const Int &lhs, const Int &rhs)\n    { return lhs.Comp (rhs) > 0; }\n    friend inline bool operator >= (const Int &lhs, const Int &rhs)\n    { return lhs.Comp (rhs) >= 0; }\n    friend inline bool operator == (const Int &lhs, const Int &rhs)\n    { return lhs.Comp (rhs) == 0; }\n    friend inline bool operator != (const Int &lhs, const Int &rhs)\n    { return lhs.Comp (rhs) != 0; }\n#undef rg    \n};\n/*\u4ece\u8fd9\u4ee5\u4e0a\u662f\u4e00\u4e2aInt\u7c7b\u578b\uff0c\u9ad8\u7cbe\u5ea6\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5\u5b9a\u4e49\u4e5f\u53ef\u4ee5\u548cint\u7c7b\u578b\u4e00\u6837\u4f7f\u7528\uff0c\u81f3\u5c11\u5927\u90e8\u5206\u53ef\u4ee5\u3002*/\nint Main (){\n    int t;\n    t=read();\n    while(t--){\n        Int a,b,c;//\u8fd9\u4e2a\u7c7b\u578b\u6bcf\u6b21\u4f7f\u7528\u5fc5\u987b\u91cd\u65b0\u5b9a\u4e49\u3002\n        std::cin>>a>>b>>c;\n        Int bz=a+b+c;\n        std::cout<<bz/2<<std::endl;\n    }\n    return 0;\n}\nint ZlycerQan = Main ();\nint main (int argc, char *argv[]) {;}\n```",
        "postTime": 1564784382,
        "uid": 142110,
        "name": "yu__xuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1196A \u3010Three Piles of Candies\u3011"
    },
    {
        "content": "\u597d\u5427\u8fd9\u662f\u6211\u7b2c\u4e00\u9053\u672a\u77e5\u9898\n\n\u5165\u95e8\u9898 \u4e0d\u591a\u8bf4 \u5361long long\n\nC++\u9664\u6cd5\u5728\u6574\u6570\u4e2d\u81ea\u52a8\u5411\u4e0b\u53d6\u6574\n\n~~\u8001\u5e08\u770b\u5230\u4e86\u8981\u6253\u6211~~\n\n~~\u8ba9\u4f60\u53bb\u65e0\u804a \u5237\u6c34\u9898 \u8be5\u6253\uff01\uff01\uff01~~\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n\tlong long T,a,b,c;\n\tcin>>T;\n\twhile(T--) \n\t{\n\t\tcin>>a>>b>>c;\n\t\tcout<<(a+b+c)/2<<endl;\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1564062316,
        "uid": 100114,
        "name": "hater",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1196A \u3010Three Piles of Candies\u3011"
    }
]