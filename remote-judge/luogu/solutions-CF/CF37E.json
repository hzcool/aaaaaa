[
    {
        "content": "## \u9898\u89e3\uff1aCF37E Trial for Chief\n\n\u770b\u5b8c\u7b2c\u4e00\u773c\u624b\u75d2\u60f3\u76f4\u63a5\u7206\u641c\u505a\uff0c\u51b7\u9759\u4e0b\u6765\u53d1\u73b0\u4e0d\u53ef\uff0c\u5f97T\u98de\uff0c\u4e8e\u662f\u5c31\u60f3\u5230\u4e86\u5efa\u56fe\u8dd1\u6700\u77ed\u8def\u3002\n\n\u4f30\u8bb0\u5f88\u591a\u4eba\u95ee\u4e3a\u5565\u8981\u5efa\u56fe\u554a\uff0c\u548b\u770b\u51fa\u6765\u7684\uff1f~~\uff08\u5176\u5b9e\u6700\u4e3b\u8981\u8fd8\u662f\u591a\u505a\u9898\u3002\u3002\u3002\uff09~~\n\n\u5bf9\u4e8e\u76f8\u90bb\u7684\u4f4d\u7f6e\u6765\u8bf4\uff0c\u5982\u679c\u76f8\u90bb\u7684\u989c\u8272\u4e0d\u4e00\u6837\uff0c\u90a3\u4e48\u663e\u7136\u9700\u8981\u4e00\u6b21\u6d82\u8272\u4ece\u800c\u4ea7\u751f\u8d21\u732e\u3002\n\n\u6211\u4eec\u901a\u8fc7\u904d\u5386\u8fd9\u4e2a\u77e9\u9635\uff0c\u53ef\u4ee5\u5224\u65ad\u51fa\u5f53\u524d$s[i][j]$\u7684\u4e0a\u3001\u4e0b\u3001\u5de6\u3001\u53f3\u56db\u4e2a\u65b9\u5411\u7684\u989c\u8272\u662f\u5426\u4e0e\u5b83\u76f8\u540c\uff0c\n\n\u5982\u679c\u989c\u8272\u76f8\u540c\uff0c\u8fb9\u6743\u4e3a0\uff1b\u5982\u679c\u989c\u8272\u4e0d\u540c\uff0c\u8fb9\u6743\u4e3a1\u3002\n\n### \u6ce8\u610f\uff1a\n\n\n\n1.\u7528$SPFA$\u4e0d\u8981\u7528$Dijkstra$\uff0c\u5426\u5219\u4f1a$TLE$\uff0c\u8fb9\u6743\u4e0d\u662f1\u5c31\u662f0\uff1b\n\n2.\u6ce8\u610f\u521d\u59cb\u65f6$dis[x]$\u4e3a1\uff0c\u56e0\u4e3a\u9700\u8981\u4e00\u6b21\u67d3\u8272\uff1b\n\n3.\u6570\u7ec4\u5f00\u7684\u5927\u4e00\u70b9\uff0c\u4e0d\u8981\u5361\u7740\u9898\u7ed9\u7684\u90a3\u4e2a\u8303\u56f4\u3002\n\n```\n//#pragma GCC optimize(3, \"Ofast\", \"inline\")\n#include <bits/stdc++.h>\n\nconst int MAXN = 7200;\nconst int INF = 0x3f3f3f3f;\nbool vis[MAXN];\nchar s[55][55];\nstruct Edge {\n\tint x, y, z, nxt;\n} e[MAXN << 1];\nint dx[5] = {0, 0, 1, -1};\nint dy[5] = {1, -1, 0, 0};\nint n, m, cnt, tot, ans = INF, head[MAXN], dis[MAXN], NUM[55][55];\n\ninline void add_edge(int x, int y, int z) {\n\te[++cnt].x = x, e[cnt].y = y, e[cnt].z = z;\n\te[cnt].nxt = head[x], head[x] = cnt;\n}\n\ninline void spfa(int nowx) {\n\tfor (register int i = 1; i <= tot; i++)\n\t\tdis[i] = INF, vis[i] = false;\n\tstd::queue< int > q;\n\tdis[nowx] = 1, vis[nowx] = true, q.push(nowx);\n\twhile (!q.empty()) {\n\t\tint x = q.front();\n\t\tq.pop();\n\t\tfor (register int i = head[x]; i; i = e[i].nxt) {\n\t\t\tint to = e[i].y;\n\t\t\tif (dis[to] > dis[x] + e[i].z) {\n\t\t\t\tdis[to] = dis[x] + e[i].z;\n\t\t\t\tif (!vis[to])\n\t\t\t\t\tq.push(to), vis[to] = true;\n\t\t\t}\n\t\t}\n\t\tvis[x] = false;\n\t}\n\tint res = 0;\n\tfor (register int i = 1; i <= n; i++)\n\t\tfor (register int j = 1; j <= m; j++)\n\t\t\tif (s[i][j] == 'B')\n\t\t\t\tres = std::max(res, dis[NUM[i][j]]);\n\tans = std::min(ans, res);\n}\n\nsigned main() {\n#ifndef ONLINE_JUDGE\n#ifdef LOCAL\n\tfreopen(\"testdata.in\", \"r\", stdin);\n\tfreopen(\"testdata.out\", \"w\", stdout);\n#endif\n#ifndef LOCAL\n\tfreopen(\"CF37E.in\", \"r\", stdin);\n\tfreopen(\"CF37E.out\", \"w\", stdout);\n#endif\n#endif\n\tscanf(\"%d %d\", &n, &m);\n\tfor (register int i = 1; i <= n; i++)\n\t\tscanf(\"%s\", s[i] + 1);\n\tfor (register int i = 1; i <= n; i++)\n\t\tfor (register int j = 1; j <= m; j++)\n\t\t\tNUM[i][j] = ++tot;\n\tfor (register int i = 1; i <= n; i++) {\n\t\tfor (register int j = 1; j <= m; j++) {\n\t\t\tfor (register int k = 0; k < 4; k++) {\n\t\t\t\tint nowx = i + dx[k], nowy = j + dy[k];\n\t\t\t\tnowx = i + dx[k], nowy = j + dy[k];\n\t\t\t\tif (nowx < 1 or nowx > n or nowy < 1 or nowy > m)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (s[i][j] == s[nowx][nowy])\n\t\t\t\t\tadd_edge(NUM[i][j], NUM[nowx][nowy], 0);\n\t\t\t\tif (s[i][j] != s[nowx][nowy])\n\t\t\t\t\tadd_edge(NUM[i][j], NUM[nowx][nowy], 1);\n\t\t\t}\n\t\t}\n\t}\n\tfor (register int i = 1; i <= tot; i++)\n\t\tspfa(i);\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1595921225,
        "uid": 84897,
        "name": "Hercules",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF37E \u3010Trial for Chief\u3011"
    },
    {
        "content": "~~\u6b64\u9898\u7adf\u7136\u6ca1\u6709\u9898\u89e3\uff0c\u8d76\u5feb\u6765\u4e00\u53d1~~\n\n\u9898\u610f\u662f\u7ed9\u4f60\u4e00\u5f20$NM$\u7684\u56fe\uff0c\u6bcf\u4e2a\u70b9\u6709\u9ed1\u8272\u548c\u767d\u8272\uff0c\u521d\u59cb\u5168\u4e3a\u767d\u8272\uff0c\u6bcf\u6b21\u53ef\u4ee5\u628a\u4e00\u4e2a\u76f8\u540c\u989c\u8272\u7684\u8fde\u7eed\u533a\u57df\u67d3\u8272\uff0c\u6c42\u6700\u5c11\u7684\u67d3\u8272\u6b21\u6570\uff1b\n\n\u9996\u5148\u662f\u7ed3\u8bba\uff1a\u6bcf\u4e2a\u70b9\u5411\u56db\u4e2a\u65b9\u5411\u5efa\u8fb9\uff0c\u5982\u679c\u989c\u8272\u4e00\u6837\u8fb9\u6743\u4e3a0\uff0c\u5426\u5219\u4e3a1\uff0c\u4ece\u6bcf\u4e2a\u70b9\u51fa\u53d1\uff0c\u8dd1\u4e00\u904d\u6700\u77ed\u8def\uff0c\u7b54\u6848\u5373\u4e3a$min(maxDistoBlackPoint)+1$\uff1b\uff08\u7279\u5224\u5168\u767d\uff09\n\n\u8bc1\u660e\u53ef\u4ee5\u8fd9\u4e48\u60f3\uff1a\n\n\u6bcf\u7ecf\u8fc7\u4e00\u4e2a\u4e0d\u540c\u7684\u989c\u8272\uff0c\u5c31\u8981\u591a\u67d3\u4e00\u6b21\u8272\uff0c\u4e8e\u662f\u56fe\u4e0a\u7684\u70b9\u5230\u6700\u8fdc\u7684\u9ed1\u70b9\u7684\u8ddd\u79bb+1\u5c31\u662f\u81f3\u5c11\u67d3\u8272\u7684\u6b21\u6570\uff1b\n\n\u67d3\u8272\u8fd9\u6837\uff0c\u5148\u67d3\u8ddd\u79bb<=mx\u7684\uff0c\u518d\u67d3<=ans-1...<=0\u7684\uff0c\u4e00\u5171mx+1\u6b21\uff1b\n\n\u4e3a\u5565\u662f\u9ed1\u8272\uff1f\u56e0\u4e3a\u521d\u59cb\u662f\u767d\u7684\uff1b\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<cstring>\n#include<string>\n#include<algorithm>\n#include<vector>\n#include<map>\n#include<set>\n#include<list>\n#include<queue>\n#include<stack>\n#include<bitset>\n#include<deque>\nusing namespace std;\n#define ll long long\n#define inf 0x3f3f3f3f\n#define ri register int\n#define il inline\n#define fi first\n#define se second\n#define mp make_pair\n#define pi pair<int,int>\n#define mem0(x) memset((x),0,sizeof (x))\n#define mem1(x) memset((x),0x3f,sizeof (x))\n#define gc getchar\ntemplate<class T>void in(T &x) {\n    x = 0; bool f = 0; char c = gc();\n    while (c < '0' || c > '9') {if (c == '-') f = 1; c = gc();}\n    while ('0' <= c && c <= '9') {x = (x << 3) + (x << 1) + (c ^ 48); c = gc();}\n    if (f) x = -x;\n}\n#undef gc\n#define N 10000\n#define M N<<3\nint n, m;\nbool hvb;\nbool p[N][N];\nint ans = inf;\nint xx[] = { -1, 0, 1, 0}, yy[] = {0, 1, 0, -1};\nil getn(int x, int y) {\n    return m * (x - 1) + y;\n}\nint v[M], u[M], w[M], nx[M];\nint cnt, head[N];\nil void add(int uu, int vv, int ww) {\n    u[++cnt] = uu, v[cnt] = vv, w[cnt] = ww, nx[cnt] = head[uu];\n    head[uu] = cnt;\n}\nint d[N];\nint vis[N];\nvoid spfa(int s) {\n    mem1(d);\n    mem0(vis);\n    queue<int>q;\n    d[s] = 0;\n    vis[s] = 1;\n    q.push(s);\n    while (!q.empty()) {\n        int x = q.front(); q.pop();\n        for (ri i = head[x]; i; i = nx[i]) {\n            if (d[v[i]] > d[x] + w[i]) {\n                d[v[i]] = d[x] + w[i];\n                if (!vis[v[i]]) {\n                    vis[v[i]] = 1;\n                    q.push(v[i]);\n                }\n            }\n        }\n        vis[x] = 0;\n    }\n}\nvector<int> bl;\nsigned main() {\n    in(n), in(m);\n    char tc[3];\n    for (ri i = 1; i <= n; ++i) {\n        for (ri j = 1; j <= m; ++j) {\n            scanf(\"%1s\", tc);\n            p[i][j] = (tc[0] == 'B');\n            hvb |= p[i][j];\n            if (p[i][j]) bl.push_back(getn(i, j));\n        }\n    }\n    if (!hvb) {\n        puts(\"0\");\n        return 0;\n    }\n    for (ri i = 1; i <= n; ++i) {\n        for (ri j = 1; j <= m; ++j) {\n            for (ri k = 0; k < 4; ++k) {\n                int tx = i + xx[k], ty = j + yy[k];\n                if (tx < 1 || tx > n || ty < 1 || ty > m) continue;\n                add(getn(i, j), getn(tx, ty), p[i][j] != p[tx][ty]);\n            }\n        }\n    }\n    for (ri i = 1; i <= n; ++i) {\n        for (ri j = 1; j <= m; ++j) {\n            int k = getn(i, j);\n            spfa(k);\n            int tmp = 0;\n            for (ri h = 0, hi = bl.size(); h < hi; ++h) {\n                tmp = max(tmp, d[bl[h]]);\n            }\n            ans = min(ans, tmp);\n        }\n    }\n    printf(\"%d\", ans + 1);\n    return 0;\n}\n```",
        "postTime": 1530964496,
        "uid": 58302,
        "name": "i207M",
        "ccfLevel": 0,
        "title": "\u8f6c\u5316\u56fe\u8bba-CF37E-\u89e3\u9898\u62a5\u544a"
    },
    {
        "content": "### \u9898\u610f\uff1a\n\n\u7ed9\u4e00\u5f20\u5168\u767d\u7684\u56fe\uff0c\u6bcf\u4e00\u6b21\u53ef\u4ee5\u9009\u4e00\u5757\u8fde\u7eed\u7684\u67d3\u6210\u9ed1\u8272\u6216\u767d\u8272\uff0c\u6c42\u5230\u7ed9\u5b9a\u7684\u6700\u7ec8\u7ed3\u679c\u7684\u6700\u5c11\u67d3\u8272\u6b21\u6570\u3002\n\n---\n### \u89e3\u9898\u601d\u8def\uff1a\n\n\u63d0\u4f9b\u4e00\u79cd\u4e0d\u4e00\u6837\u7684\u7406\u89e3\u65b9\u5f0f\u3002\n\n\u7531\u4e8e\u539f\u95ee\u9898\u4e2d\u662f\u6bcf\u4e00\u6b21\u662f\u5c06\u4e00\u7247\u67d3\u6210\u4e00\u6837\u7684\u989c\u8272\uff0c\u90a3\u4e48\u6211\u4eec\u8003\u8651\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u9006\u8fc7\u7a0b\uff0c\u4e5f\u5c31\u662f\u5c06\u6700\u7ec8\u72b6\u6001\u8fd8\u539f\u5230\u767d\u8272\u7684\uff0c\u5bb9\u6613\u53d1\u73b0\u6bcf\u4e00\u4e2a\u6b63\u64cd\u4f5c\u90fd\u6709\u552f\u4e00\u7684\u9006\u64cd\u4f5c\u4e0e\u4e4b\u5bf9\u5e94\uff08\u4e5f\u5c31\u662f\u6bcf\u4e00\u79cd\u6d82\u8272\u90fd\u53ef\u4ee5\u8fd8\u539f\uff09\u3002\n\n\u663e\u7136\u6bcf\u4e00\u6b21\u6d82\u8272\uff08\u8fd8\u539f\uff09\u4e00\u5b9a\u662f\u6d82\u8fde\u7eed\u7684\u4e00\u6574\u5757\uff0c\u5426\u5219\u6709\u53ef\u80fd\u4f1a\u5728\u540e\u9762\u8981\u6c42\u91cd\u65b0\u8865\u4e0a\uff0c\u65b9\u6848\u6570\u4e00\u5b9a\u4e0d\u4f1a\u66f4\u4f18\u3002\n\n\u90a3\u4e48\u6bcf\u4e00\u6b21\u6d82\u8272\u5c31\u662f\u5c06\u4e00\u4e2a\u8fde\u7eed\u7684\u5757\u548c\u4e24\u8fb9\u7684\u4e0d\u4e00\u6837\u7684\u989c\u8272\u8fde\u5728\u4e86\u4e00\u8d77\uff08\u6ce8\u610f\u8fd9\u91cc\u53ef\u4ee5\u91cd\u590d\u5728\u4e00\u5757\u4e0a\u64cd\u4f5c\uff0c\u4e5f\u5c31\u662f\u6837\u4f8b\u4e00\u7684\u90a3\u4e00\u79cd\u64cd\u4f5c\u65b9\u5f0f\uff09\uff0c\u8003\u8651\u5c06\u6240\u6709\u7684\u8054\u901a\u5757\u8fde\u5230\u4e00\u8d77\uff0c\u7136\u540e\u5728\u6bcf\u4e24\u4e2a\u4e4b\u95f4\u5efa\u7acb\u4e00\u6761\u8fb9\u6743\u4e3a $1$ \u7684\u8fb9\uff0c\u6700\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u8dd1\u4e00\u904d\u6700\u77ed\u8def\u5230\u6700\u8fdc\u7684\u8054\u901a\u5757\u7684\u8ddd\u79bb\u5c31\u662f\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u7b2c\u4e00\u6b21\u67d3\u8272\u9700\u8981\u7528\u7684\u6700\u5c11\u67d3\u8272\u6b21\u6570\u3002\n\n\u968f\u540e\u53d1\u73b0\uff0c\u5176\u5b9e\u6ca1\u6709\u5fc5\u8981\u90a3\u4e48\u590d\u6742\uff0c\u6c42\u51fa\u8054\u901a\u5757\u5e76\u5c06\u5176\u8fde\u5230\u4e00\u8d77\u5176\u5b9e\u53ef\u4ee5\u76f4\u63a5\u7528\u5efa\u7acb\u8fb9\u6743\u4e3a $0$ \u7684\u8fb9\u6765\u4ee3\u66ff\u3002  \n\n\u672c\u9898\u6570\u636e\u8303\u56f4\u5f88\u5c0f\uff0c\u6ca1\u6709\u5fc5\u8981\u7528\u5806\u4f18\u5316\u3002\n\n---\n\n\u6ce8\u610f\u4e0d\u8981\u7528 next \u4f5c\u4e3a\u53d8\u91cf\u540d\u3002\n\n---\n### \u4ee3\u7801\uff1a\n```cpp\n#include<queue>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int MAXN=500005;\nint n,m,f[55][55],head[MAXN],next_[MAXN],num[MAXN],w[MAXN],d[MAXN],B,dx[5]={1,-1,0,0},dy[5]={0,0,1,-1},tot,ans=2147483647;\nbool v[MAXN];\nqueue<int> q;\nchar c;\nchar get(){\n\tchar c1=getchar();\n\twhile(c1==' '||c1=='\\n'||c1=='\\r')c1=getchar();\n\treturn c1;\n}\nint id(int x,int y){return (x-1)*m+y;}\nvoid add(int x,int y,int z){\n\tnext_[++tot]=head[x];head[x]=tot;num[tot]=y;w[tot]=z;\n\tnext_[++tot]=head[y];head[y]=tot;num[tot]=x;w[tot]=z;\n}\nvoid SPFA(int s){\n\tfor(int i=1;i<=n*m;i++)d[i]=1e9;\n\tq.push(s);\n\td[s]=1;v[s]=1;\n\twhile(!q.empty()){\n\t\tint now=q.front();\n\t\tq.pop();\n\t\tv[now]=0;\n\t\tfor(int i=head[now];i;i=next_[i]){\n\t\t\tif(d[now]+w[i]<d[num[i]]){\n\t\t\t\td[num[i]]=d[now]+w[i];\n\t\t\t\tif(v[num[i]]==0){\n\t\t\t\t\tq.push(num[i]);\n\t\t\t\t\tv[num[i]]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tint now_ans=0;\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=m;j++)\n\tif(f[i][j]==0)\n\tnow_ans=max(now_ans,d[id(i,j)]);\n\tans=min(ans,now_ans);\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=m;j++){\n\t\tc=get();\n\t\tif(c=='W')f[i][j]=1;\n\t\telse f[i][j]=0,B=1;\n\t}\n\tif(B==0)return 0&printf(\"0\\n\");\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=m;j++)\n\tfor(int k=0;k<=3;k++)\n\tif(i+dx[k]<=n&&i+dx[k]>=1&&j+dy[k]<=m&&j+dy[k]>=1)\n\tadd(id(i,j),id(i+dx[k],j+dy[k]),(f[i][j]==f[i+dx[k]][j+dy[k]]?0:1));\n\tfor(int i=1;i<=n*m;i++)SPFA(i);\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1636358279,
        "uid": 223559,
        "name": "qxp101",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF37E Trial for Chief"
    },
    {
        "content": "[CF37E Trial for Chief](https://www.luogu.com.cn/problem/CF37E)\n\n\u672c\u9898\u505a\u6cd5\u4e3a\u6700\u77ed\u8def\u8fde\u8fb9\u65b9\u5f0f\u4e3a\u6bcf\u4e2a\u70b9\u5411\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u70b9\u8fdb\u884c\u8fde\u8fb9\uff0c\u5982\u679c\u989c\u8272\u76f8\u540c\u5219\u4e3a0\uff0c\u4e0d\u540c\u5219\u4e3a1.\n\n\u539f\u56e0\uff1a\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\u8fb9\u6743\u7684\u542b\u4e49\u662f\u5df2\u7ecf\u5c06\u5f53\u524d\u8282\u70b9\u67d3\u6210\u76ee\u6807\u989c\u8272\uff0c\u5c06\u5176\u76f8\u90bb\u683c\u5b50\u4e5f\u67d3\u6210\u76ee\u6807\u989c\u8272\u7684\u6240\u9700\u4ee3\u4ef7\uff0c\u90a3\u4e48\u76f8\u540c\u989c\u8272\u7684\u6211\u4eec\u5c31\u4e00\u8d77\u67d3\u4e86\u4e0d\u5c31\u597d\u4e86\n\n\u6240\u4ee5\u6211\u4eec\u679a\u4e3e\u6700\u540e\u4e00\u4e2a\u67d3\u8272\u7684\u683c\u5b50\uff0c\u8dd1\u4e00\u904d\u5355\u6e90\u6700\u77ed\u8def\n\n### \u5176\u4e2d\u6bcf\u8dd1\u4e00\u904d\u8981\u8bb0\u5f55\u4e00\u4e9b\u6700\u8fdc\u7684\u9ed1\u8272\u683c\u70b9\u7684\u8ddd\u79bb\uff0c\u5e76\u5bf9\u6bcf\u6b21\u679a\u4e3e\u51fa\u6765\u7684\u7ed3\u679c\u53d6\u6700\u5c0f\u503c\u3002\n\n\n\n------------\n\n## \u6bcf\u6b21\u8dd1\u4e00\u8fb9\u8bb0\u5f55\u6700\u8fdc\u9ed1\u8272\u683c\u70b9\u662f\u4e3a\u4e86\u5e72\u5565\u5462\uff1f\n\n\u4e3a\u4e86\u770b\u4e00\u4e0b\u5f53\u6211\u6700\u540e\u4e00\u6b21\u67d3\u8272\u4e3a\uff08i \uff0c j\uff09\u65f6\uff0c\u6240\u9700\u8981\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\n\n## \u800c\u5bf9\u8fd9\u4e9b\u6700\u8fdc\u9ed1\u8272\u683c\u70b9\u7684\u8ddd\u79bb\u53d6min\u5e72\u5565\uff1f\n\n\u4e3a\u4e86\u627e\u5230\u6700\u4f18\u89e3\n\n\u4f46\u662f\u6700\u540e\u522b\u5fd8\u4e86\u52a01\uff0c\u56e0\u4e3a\u6211\u4eec\u679a\u4e3e\u7684\u90a3\u4e2a\u70b9\u5176\u5b9e\u4e5f\u662f\u9700\u8981\u88ab\u67d3\u4e0a\u8272\u7684\n\n\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5\uff1a\n\n\u7b2c\u4e00\u79cd\u662f\u6700\u540e\u67d3\u4e0a\u9ed1\u8272\uff0c\u90a3\u80af\u5b9a\u6700\u540e\u4e5f\u662f\u9700\u8981\u67d3\u8272\u7684\n\n\u7b2c\u4e8c\u79cd\u662f\u6700\u540e\u67d3\u6210\u4e86\u767d\u8272\uff0c\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u65f6\u5019\u53ef\u80fd\u6210\u4e3a\u6700\u4f18\u89e3\u5462\uff0c\u6211\u4eec\u770b\u7b2c\u4e00\u4e2a\u6837\u4f8b\u5373\u53ef\n\n### \u8fd9\u4e2a\u6837\u4f8b\u4e5f\u5c31\u5145\u5206\u8bc1\u660e\u4e86\u4e3a\u5565\u4e0d\u662f\u6c42\u8fde\u901a\u5757\u4e2a\u6570\n\n\u6240\u4ee5\u6700\u540e\u4e00\u4e2a\u679a\u4e3e\u5230\u7684\u4e00\u5b9a\u4f1a\u67d3\u8272\uff0c\u6240\u4ee5\u8981ans + 1\n\n# \u4f46\u662f\u5168\u767d\u5c31\u7279\u5224\u62100\u5c31\u597d\u4e86\n\n\n$$Code$$\n\n```\n#include<cstdio>\n#include<cctype>\n#include<algorithm>\n#include<queue>\n#include<cstring>\n#include<map>\n#include<vector>\nusing namespace std;\ninline int read()\n{\n\tint res = 0;\n\tchar c;\n\tbool flag = true;\n\tc = getchar();\n\twhile(!isdigit(c))\n\t{\n\t\tif(c == '-')\tflag = false;\n\t\tc = getchar();\n\t}\n\twhile(isdigit(c))\n\t{\n\t\tres = res * 10 + (c ^ 48);\n\t\tc = getchar();\n\t}\n\treturn flag ? res : -res;\n}\nconst int Max_n = 55;\nchar c[Max_n][Max_n];\nint n , m , tmp , ans = 0x3f3f3f3f, dx[4] = {0 , 0 , 1 , -1} , dy[4] = {1 , -1 , 0 , 0} , dis[Max_n][Max_n];\nint con[Max_n][Max_n][Max_n][Max_n];\nstruct node{\n\tint x , y;\n\tnode(int a , int b)\n\t{\n\t\tx = a , y = b;\n\t}\n\tnode()\n\t{\n\t}\n};\nvector<node> v[Max_n][Max_n];\nbool vis[Max_n][Max_n];\nint main()\n{\n\tn = read() , m = read();\n\tfor(int i = 0 ; i < n ; ++ i)\n\t\tscanf(\"%s\" , c[i]);\n\tfor(int i = 0 ; i < n ; ++ i)\n\t\tfor(int j = 0 ; j < m ; ++ j)\n\t\t\tfor(int k = 0 ; k < 4; ++ k)\n\t\t\t{\n\t\t\t\tint nexi = i + dx[k] , nexj = j + dy[k];\n\t\t\t\tif(nexi < 0 || nexi >= n || nexj < 0 || nexj >= m)\tcontinue;\n\t\t\t\tv[i][j].push_back((node){nexi , nexj});\n\t\t\t}\n\tfor(int i = 0 ; i < n ; ++ i)\n\t\tfor(int j = 0 ; j < m ; ++ j)\n\t\t{\n\t\t\tmemset(dis , 0x3f3f3f3f , sizeof(dis));\n\t\t\tmemset(vis , false , sizeof(vis));\n\t\t\ttmp = 0;\n\t\t\tdis[i][j] = 1;\n\t\t\tdeque<node> q;\n\t\t\tq.push_front(node(i , j));\n\t\t\twhile(!q.empty())\n\t\t\t{\n\t\t\t\tnode now = q.front();\n\t\t\t\tq.pop_front();\n\t\t\t\tif(vis[now.x][now.y])\tcontinue;\n\t\t\t\tvis[now.x][now.y] = true;\n\t\t\t\tif(c[now.x][now.y] == 'B')\ttmp = max(tmp , dis[now.x][now.y]);\n\t\t\t\tint sz = v[now.x][now.y].size();\n\t\t\t\tfor(int i = 0 ; i < sz ; ++ i)\n\t\t\t\t{\n\t\t\t\t\tnode nex = v[now.x][now.y][i];\n\t\t\t\t\tif(vis[nex.x][nex.y])\tcontinue;\n\t\t\t\t\tdis[nex.x][nex.y] = min(dis[nex.x][nex.y] , dis[now.x][now.y] + (c[now.x][now.y] != c[nex.x][nex.y]));\n\t\t\t\t\tc[now.x][now.y] != c[nex.x][nex.y] ? q.push_back(nex) : q.push_front(nex);\n\t\t\t\t}\n\t\t\t}\n\t\t\tans = min(ans , tmp);\n\t\t}\n\tprintf(\"%d\" , ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1595903243,
        "uid": 247650,
        "name": "thecold",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF37E \u3010Trial for Chief\u3011"
    }
]