[
    {
        "content": "[\u6d1b\u8c37\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF346B)\t[CF\u4f20\u9001\u95e8](http://codeforces.com/problemset/problem/346/B)\n\n### Solution\n\n\u8fd9\u5176\u5b9e\u5c31\u662f\u52a0\u5f3a\u7248\u7684LCS\u95ee\u9898\u3002\n\n\u539f\u6765\u7684dp\u6570\u7ec4\u662f $f_{i,j}$ \uff0c\u4ee3\u8868\u7b2c\u4e00\u4e2a\u4e32\u5339\u914d\u5230 $i$ \u4f4d\uff0c\u7b2c\u4e8c\u4e2a\u4e32\u5339\u914d\u5230 $j$ \u4f4d\u7684\u6700\u5927\u957f\u5ea6\u3002\n\n\u73b0\u5728\u52a0\u5165\u4e86\u7b2c\u4e09\u4e2a\u4e32\uff0c\u6240\u4ee5dp\u6570\u7ec4\u4e5f\u8981\u6539\u4e3a $f_{i,j,k}$ \uff0c\u591a\u4e86\u4e00\u4e2a\u7b2c\u4e09\u4e2a\u4e32\u5339\u914d\u5230 $k$ \u4f4d\u3002\n\n\u6240\u4ee5\u8981\u7528KMP\u5c06\u7b2c\u4e09\u4e2a\u4e32\u7684\u80fd\u5339\u914d\u60c5\u51b5\u7b97\u51fa\u6765\u3002\n\n\u8bbe\u5f53\u7b2c\u4e00\u4e2a\u4e32\u5339\u914d\u5230 $i$ \u4f4d\uff0c\u7b2c\u4e8c\u4e2a\u4e32\u5339\u914d\u5230 $j$ \u4f4d\u65f6\uff0c\u80fd\u5339\u914d\u5230\u7b2c\u4e09\u4e2a\u4e32\u7684 $t$ \u4f4d\uff0c\u53ef\u5f97\u8f6c\u79fb\u65b9\u7a0b\uff1a\n$$\nf_{i,j,t}=\\max\\{f_{i,j,t},f_{i-1,j-1,k}\\}\\\\f_{i,j,k}=\\max\\{f_{i-1,j,k},f_{i,j-1,k},f_{i,j,k}\\}\n$$\n\u4f46\u662f\uff0c\u4e3a\u4e86~~\u5077\u61d2~~\u8ffd\u6c42\u6700\u4f18\uff0c\u6211\u7684 $f$ \u6570\u7ec4\u662f\u7528 $\\operatorname{string}$ \u8868\u793a\u7684\uff0c\u8f6c\u79fb\u65f6\u76f4\u63a5\u6bd4\u8f83 $\\operatorname{size}$ \u5373\u53ef\u3002\n\n### Code\n\n```c++\n#include<bits/stdc++.h>\n\nusing namespace std;\nstring a,b,c,dp[111][111][111],ans;\nint f[111];\ninline void change(string &a,string b){\n    if(a.size()<b.size()) a=b;\n}\n\nint main(){\n    cin>>a>>b>>c;\n    int la=a.size(),lb=b.size(),lc=c.size();\n    int j=0;\n    for(int i=1;i<lc;i++){\n        while(j>0&&c[i]!=c[j]) j=f[j-1];\n        if(c[i]==c[j]) f[i]=++j;\n    }\n    for(int i=1;i<=la;i++)\n        for(int j=1;j<=lb;j++)\n            for(int k=0;k<lc;k++){\n                if(a[i-1]==b[j-1]){\n                    char tmp=a[i-1];\n                    int t=k;\n                    while(t>0&&tmp!=c[t]) t=f[t-1];\n                    if(tmp==c[t]) t++;\n                    change(dp[i][j][t],dp[i-1][j-1][k]+tmp);\n                }\n                change(dp[i][j][k],dp[i-1][j][k]);\n                change(dp[i][j][k],dp[i][j-1][k]);\n            }\n    for(int i=0;i<lc;i++) change(ans,dp[la][lb][i]);\n    if(ans.size()==0) puts(\"0\");\n    else printf(\"%s\\n\",ans.c_str());\n    return 0;\n}\n```\n\n",
        "postTime": 1604066770,
        "uid": 272143,
        "name": "\u662f\u4e2a\u6c49\u5b50",
        "ccfLevel": 4,
        "title": "CF346B Lucky Common Subsequence"
    },
    {
        "content": "# CF346B - Lucky Common Subsequence\n>- \u94fe\u63a5\uff1ahttps://codeforces.com/problemset/problem/346/B\n>- \u77e5\u8bc6\u70b9\uff1aDP\u3001KMP\n>- \u96be\u5ea6\uff1a\u7d2b\uff08*2000\uff09\n\n## \u9898\u610f\n- \u7ed9\u51fa\u4e24\u4e2a\u5b57\u7b26\u4e32 $A$ \u548c $B$\uff0c\u518d\u7ed9\u51fa\u4e00\u4e2a\u6a21\u5f0f\u4e32 $S$\u3002\n- \u6c42 $A$ \u548c $B$ \u7684\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\uff0c\u8981\u6c42\u4e0d\u5305\u542b\u5b50\u4e32 $S$\u3002\n- \u82e5\u6709\u591a\u4e2a\u7b54\u6848\uff0c\u8f93\u51fa\u4efb\u610f\u3002\n\n## \u601d\u8def\n- \u6211\u4eec\u5148\u8003\u8651\u600e\u4e48\u6c42\u6700\u957f\u7684\u957f\u5ea6\u3002\n- \u4ee4 $dp[i][j][k]$ \u4e3a $A$ \u7684\u524d $i$ \u4f4d\u548c $B$ \u7684\u524d $j$ \u4f4d\u5f62\u6210\u7684\u6700\u957f\u5b50\u5e8f\u5217\u4e2d\uff0c\u4e0e $S$ \u4e32\u5339\u914d\u957f\u5ea6\u4e3a $k$ \u7684\u6700\u957f\u7684\u957f\u5ea6\u3002\n### \u9519\u8bef\u601d\u8def\n- \n### \u6b63\u786e\u601d\u8def\n- \u4f7f\u7528 KMP \u9884\u5904\u7406\u51fa $S$ \u4e32\u7684 $\\text{nxt}$ \u6570\u7ec4\n- \u6211\u4eec\u77e5\u9053\uff0c$nxt[i]$ \u8868\u793a $S$ \u4e32\u7684**\u524d $i$ \u4e2a\u5b57\u7b26**\u7684**\u6700\u957f\u524d\u540e\u7f00**\u957f\u5ea6\u3002\n- \u6839\u636e $\\text{nxt}$ \u6570\u7ec4\uff0c\u7528 KMP \u5904\u7406\u51fa $arr[i][ch]$\uff0c\u4ee3\u8868\u76ee\u524d\u5df2\u7ecf\u548c $S$ \u4e32\u5339\u914d\u4e86 $i$ \u4f4d\uff0c\u5982\u679c\u4e0b\u4e00\u4e2a\u5b57\u7b26\u662f $ch$\uff0c\u90a3\u4e48\u52a0\u4e0a\u8fd9\u4e2a\u5b57\u7b26\u540e\uff0c\u5c06\u4f1a\u548c $S$ \u4e32\u5339\u914d\u591a\u5c11\u4f4d\u3002\n- \u8f6c\u79fb\uff1a\n    - \u82e5 $A_i=B_j$\uff0c$dp[i][j][tmp] \\leftarrow dp[i-1][j-1][k]+1$\uff0c\u5176\u4e2d $tmp=arr[k][A_i]$\n    - \u82e5 $A_i\\neq B_j$\uff0c$dp[i][j][k] \\leftarrow \\max(dp[i-1][j][k],dp[i][j-1][k])$\n## \u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cstring>\nconst int N\t\t= 110;\nconst int INF\t= 1e9;\nusing namespace std;\n\nstruct PRE{int x,y,z;} pre[N][N][N];\nbool flag[N][N][N];\n\nint nxt[N];\nint nxt2[N][26];\nstring A,B,S;\n\nvoid GetNxt()\n{\n\tint l=0;\n\tfor(int r=2; r<S.length(); r++)\n\t{\n\t\twhile(l>0 && S[r]!=S[l+1]) \n\t\t{\n\t\t\tl = nxt[l];\n\t\t}\n\t\tif(S[r] == S[l+1]) \n\t\t{\n\t\t\tl++;\n\t\t}\n\t\tnxt[r] = l;\n\t}\n\t\n\tfor (int i=0; i<S.length()-1; i++)\n\t{\n\t\tfor (int ch=0; ch<26; ch++)\n\t\t{\n\t\t\tint cur = i;\n\t\t\twhile(cur && S[cur+1]-'A'!=ch)\n\t\t\t{\n\t\t\t\tcur = nxt[cur];\n\t\t\t}\n\t\t\tcur += (S[cur+1]-'A'==ch);\n\t\t\t\n\t\t\tnxt2[i][ch] = cur;\n\t\t}\n\t}\n\t\n\tfor (int ch=0; ch<26; ch++)\n\t{\n\t\tnxt2[ S.length()-1 ][ch] = S.length()-1;\n\t}\n}\n\nint dp[N][N][N];\nint n,m;\n\nvoid Find(int x,int y,int z)\n{\n\tif(x==0 || y==0)return;\n\tFind(pre[x][y][z].x, pre[x][y][z].y, pre[x][y][z].z);\n\tprintf(\"%c\",A[x]);\n}\n\nvoid Sol()\n{\n\tGetNxt();\n\tmemset(dp, -1, sizeof(dp));\n\t\n\tdp[0][0][0] = 0;\n\t\n\tfor (int i=0; i<=n; i++)\n\t{\n\t\tfor (int j=0; j<=m; j++)\n\t\t{\n\t\t\tif(i>=1 && j>=1 && A[i] == B[j])\n\t\t\t{\n\t\t\t\tfor (int k=0; k<S.length(); k++)\n\t\t\t\t{\n\t\t\t\t\tif(dp[i-1][j-1][k] != -1)\n\t\t\t\t\t{\n\t\t\t\t\t\tint tmp = nxt2[k][ A[i]-'A' ];\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(dp[i-1][j-1][k]+1 > dp[i][j][tmp])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdp[i][j][tmp] = dp[i-1][j-1][k] + 1;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tflag[i][j][tmp] = true;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(flag[i-1][j-1][k])\tpre[i][j][tmp] = {i-1,j-1,k};\n\t\t\t\t\t\t\telse pre[i][j][tmp] = pre[i-1][j-1][k];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (int k=0; k<S.length(); k++)\n\t\t\t{\n\t\t\t\tif(i>=1)\n\t\t\t\t{\n\t\t\t\t\tif(dp[i-1][j][k] > dp[i][j][k])\n\t\t\t\t\t{\n\t\t\t\t\t\tdp[i][j][k] = dp[i-1][j][k];\n\t\t\t\t\t\tif(flag[i-1][j][k]) pre[i][j][k] = {i-1,j,k};\n\t\t\t\t\t\telse pre[i][j][k] = pre[i-1][j][k];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(j>=1)\n\t\t\t\t{\n\t\t\t\t\tif(dp[i][j-1][k] > dp[i][j][k])\n\t\t\t\t\t{\n\t\t\t\t\t\tdp[i][j][k] = dp[i][j-1][k];\n\t\t\t\t\t\tif(flag[i][j-1][k]) pre[i][j][k] = {i,j-1,k};\n\t\t\t\t\t\telse pre[i][j][k] = pre[i][j-1][k];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tint ans = 0;\n\tPRE ans_pre;\n\tfor (int i=0; i<S.length()-1; i++)\n\t{\n\t\tif(dp[n][m][i] >= ans)\n\t\t{\n\t\t\tans = dp[n][m][i];\n\t\t\tif(flag[n][m][i]) ans_pre = {n,m,i};\n\t\t\telse ans_pre = pre[n][m][i];\n\t\t}\n\t}\n\tif(ans==0)\n\t{\n\t\tprintf(\"%d\\n\",ans);\n\t\treturn;\n\t}\n\tFind(ans_pre.x, ans_pre.y, ans_pre.z);\n}\n\n\nint main()\n{\n\tcin>>A>>B>>S;\n\tA = ' '+A;\n\tB = ' '+B;\n\tS = ' '+S;\n\t\n\tn = A.length()-1;\n\tm = B.length()-1;\n\t\n\tSol();\n\t\n\treturn 0;\n}\n```",
        "postTime": 1659610372,
        "uid": 36285,
        "name": "\u6c27\u5c11Kevin",
        "ccfLevel": 4,
        "title": "CF346B - Lucky Common Subsequence"
    },
    {
        "content": "[\u535a\u5ba2\u8fde\u63a5](https://blog.csdn.net/qq_43804974/article/details/106583837)\n\n\u8fd9\u9053\u9898\u5e94\u8be5\u662f\u6bd4\u8f83\u5178\u578b\u7684\u5229\u7528kmp\u53bbdp\u7684\u9898\u76ee\u3002\n\n\u6211\u4eec\u601d\u8003\u9898\u610f\u4ed6\u8981\u6c42\u6211\u4eec\u7684\u5b50\u5e8f\u5217\u4e0d\u80fd\u591f\u548cvirus\u4e32\u5b8c\u5168\u5339\u914d\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u539f\u5148\u6c42\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\u7684\u57fa\u7840\u4e0a\u5728\u52a0\u4e00\u4e2a\u7ef4\u5ea6\u3002\n\n\u5c31\u662f\nf[i][j][z]\uff0c\u7b2c\u4e00\u4e2a\u4e32\u679a\u4e3e\u5230i\uff0c\u7b2c\u4e8c\u4e2a\u4e32\u679a\u4e3e\u5230j\uff0c\u7136\u540e\u4ed6\u4eec\u4e0evirus\u4e32\u5339\u914d\u7684\u957f\u5ea6\u662fz\u3002\n\n\u63a5\u4e0b\u6765\u601d\u8003\u8f6c\u79fb\u3002\n\n\u7b2c\u4e00\u4e2a\u4e32\u5f53\u505aA\u6570\u7ec4\uff0c\u7b2c\u4e8c\u4e2a\u4e32\u5f53\u505aB\u6570\u7ec4\n\n\u5373\u5f53(A[i] == B[j])\u7684\u65f6\u5019\u53ef\u4ee5\u5728\u539f\u5148\u5df2\u7ecf\u6709\u7684\u5b50\u5e8f\u5217\u57fa\u7840\u4e0a\u52a0\u4e0a\u5b57\u7b26A[i],\u8fd9\u4e2a\u65f6\u5019\u4e0evirus\u5339\u914d\u5230\u7684\u957f\u5ea6\u662fz\u3002\n\n\n\n\u90a3\u4e48\u8fd9\u4e2a\u957f\u5ea6z\u662f\u7531\u8c01\u8f6c\u79fb\u6765\u7684\uff1f\u8fd9\u4e2a\u5730\u65b9\u9700\u8981kmp\u53bb\u9884\u5904\u7406\u3002\n\n\u6211\u4eec\u679a\u4e3evirus\u4e32\u7684\u957f\u5ea6\uff0c\u7136\u540e\u5c31\u5047\u8bbe\u5f53\u524d\u957f\u5ea6\u4e3atemplen\uff0c\u7136\u540e\u679a\u4e3e\u4e0b\u4e00\u4e2a\u5b57\u7b26\u662f\u8c01\u2018A'-'Z',\u5229\u7528next\u6570\u7ec4\u5c31\u53ef\u4ee5\u5f97\u5230\u52a0\u4e0a\u4e0b\u4e00\u4e2a\u5b57\u7b26\u540e\uff0c\u4e0evirus\u4e32\u5339\u914d\u4e0a\u7684\u957f\u5ea6\uff0c\uff08\u8fd9\u4e2a\u90e8\u5206\u5c31\u662fkmp\u7684\u6700\u57fa\u7840\u5e94\u7528\uff09.\n\n\u9884\u5904\u7406\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u77e5\u9053\u6709\u54ea\u4e9b\u72b6\u6001\u52a0\u4e0aA[i]\u8fd9\u4e2a\u5b57\u7b26\u53ef\u4ee5\u5230\u8fbez\u72b6\u6001\uff0c\u8fd9\u5c31\u53ef\u4ee5\u8fdb\u884c\u8f6c\u79fb\u4e86\u3002\n\n\u552f\u4e00\u4e0e\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\u6709\u533a\u522b\u5c31\u662f(A[i] == B[j])\uff0c\u5176\u4ed6\u662f\u4e00\u6837\u7684\u3002\n\n\u590d\u6742\u5ea6\u5c31\u662fO( | s1 | * | s2 | * | virus|)\n\n\u5728\u8f93\u51fa\u8def\u5f84\u65b9\u9762\u5c31\u662f\u548c\u5927\u90e8\u5206\u8f93\u51fa\u8def\u5f84\u4e00\u6837\u5012\u63a8\u56de\u53bb\u5c31\u597d\u4e86\n\n```cpp\nchar A[max_], B[max_], S[max_];\nint next_[max_],lenS,lenA,lenB;\nil void getnext() {\n\tlenS = strlen(S + 1);\n\tint j = 0;\n\tfor (int i = 2; i <= lenS; i++) {\n\t\twhile (j&&S[j + 1] != S[i]){\n\t\t\tj = next_[j];\n\t\t}\n\t\tif (S[j + 1] == S[i])j++;\n\t\tnext_[i] = j;\n\t}\n}\nvector<int> to[max_][30];\nint f[max_][max_][max_];\nvoid dfs(int i, int j, int z) {\n\tif (A[i] == B[j]) {\n\t\tfor (auto qian : to[z][A[i] - 'A']) {\n\t\t\tif (f[i][j][z] == f[i - 1][j - 1][qian] + 1) {\n\t\t\t\tdfs(i - 1, j - 1, qian);\n\t\t\t\tcout << A[i];\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\tif (f[i][j][z] == f[i - 1][j][z]) {\n\t\tdfs(i - 1, j, z); return;\n\t}\n\tif (f[i][j][z] == f[i][j - 1][z]) {\n\t\tdfs(i, j - 1, z); return;\n\t}\n}\nsigned main() {\t\n\tcin >> (A + 1) >> (B + 1) >> (S + 1);\n\tlenA = strlen(A + 1);\n\tlenB = strlen(B + 1);\n\tgetnext();\n\tfor (int i = 0; i <= lenS; i++) {\n\t\tfor (int j = 0; j <= 25; j++) {\n\t\t\tint now = i;\n\t\t\twhile (now && S[now + 1]!='A'+j){\n\t\t\t\tnow = next_[now];\n\t\t\t}\n\t\t\tif (S[now + 1] == 'A' + j)now++;\n\t\t\tto[now][j].push_back(i);\n\t\t}\n\t}\n\tfor (int i = 1; i <= lenA; i++) {\n\t\tfor (int j = 1; j <= lenB; j++) {\n\t\t\tfor (int z = 0; z < lenS; z++) {\n\t\t\t\tif (A[i] == B[j]) {\n\t\t\t\t\tfor (auto qian : to[z][A[i] - 'A']) {\n\t\t\t\t\t\tf[i][j][z] = max(f[i][j][z], f[i - 1][j - 1][qian] + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tf[i][j][z] = max(f[i][j][z], f[i - 1][j][z]);\n\t\t\t\tf[i][j][z] = max(f[i][j][z], f[i][j - 1][z]);\n\t\t\t}\n\t\t}\n\t}\n\tint ans = 0,stu;\n\tfor (int i = 0; i < lenS; i++) {\n\t\tif (ans < f[lenA][lenB][i]) {\n\t\t\tans = f[lenA][lenB][i];\n\t\t\tstu = i;\n\t\t}\n\t}\n\tif (ans == 0) { cout << 0; return 0; }\n\tdfs(lenA, lenB, stu);\n\treturn 0;\n}\n```\n",
        "postTime": 1591410403,
        "uid": 156874,
        "name": "Boxxxxxx",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF346B \u3010Lucky Common Subsequence\u3011"
    }
]