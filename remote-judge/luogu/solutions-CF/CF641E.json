[
    {
        "content": "\u5b8c\u5168\u4e0d\u9700\u8981CDQ\uff0c\u53ea\u9700\u8981\u6734\u7d20\u7684\u6811\u72b6\u6570\u7ec4\u5c31\u884c\u4e86\u3002\n\n\u63d0\u4f9b\u4e00\u79cd\u7eaf\u6811\u72b6\u6570\u7ec4\u7684\u505a\u6cd5\uff0c\u76ee\u524d\u4f3c\u4e4e\u662f\u6d1b\u8c37\u6700\u4f18\u89e3\u3002\n\n## \u3010\u601d\u8def\u3011\n\u9996\u5148\u6211\u4eec\u4e0d\u96be\u5224\u65ad\uff0c\u8fd9\u9053\u9898\u4e2d\u7684\u65f6\u95f4\u6233\u5176\u5b9e\u53ef\u4ee5\u770b\u6210\u4e00\u4e2a\u5e8f\u5217\uff0c\u4f60\u4fee\u6539\u4e00\u4e2a\u70b9\u4f1a\u5bf9\u5176\u540e\u9762\u6240\u6709\u70b9\u4ea7\u751f\u5f71\u54cd\u3002\n\n\u8fd9\u542f\u793a\u6211\u4eec\u8981\u7528\u6811\u72b6\u6570\u7ec4\u3002\n\n\u7136\u540e\u6211\u4eec\u53c8\u53d1\u73b0\uff0c\u6bcf\u4e00\u4e2a $x$ \u90fd\u662f\u4e92\u76f8\u72ec\u7acb\u7684\u3002\n\n\u4e00\u79cd\u5f88\u66b4\u529b\u7684\u601d\u8def\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $x$ \u5f00\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\uff0c\u4f46\u662f\u5fc5\u7136\u4f1a\u70b8\u7a7a\u95f4\u3002\n\n\u4e8e\u662f\u6211\u4eec\u8003\u8651\u53ea\u7528\u4e00\u4e2a\u6570\u7ec4\u5b8c\u6210\u6240\u6709\u5904\u7406\u3002\n\n\u9700\u8981\u79bb\u7ebf\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u8fd9\u4e48\u505a\uff1a\n\n\u8bbe $id$ \u8868\u793a\u4e00\u4e2a\u8be2\u95ee\u662f\u7b2c\u51e0\u4e2a\u8be2\u95ee\u3002\n\n\u6211\u4eec\u4ee5 $x$ \u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c$id$ \u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u5bf9\u6240\u6709\u8be2\u95ee\u6392\u5e8f\u3002\u6700\u540e\u6240\u6709\u76f8\u540c\u7684 $x$ \u90fd\u6392\u5728\u4e86\u4e00\u8d77\uff0c\u800c\u4e14\u5bf9\u4e8e **\u540c\u4e00\u4e2a** $x$ \uff0c\u5176\u64cd\u4f5c\u987a\u5e8f\u5148\u540e\u662f\u4e0d\u53d8\u7684\u3002\n\n\u800c\u4e0d\u540c\u7684 $x$ \u663e\u7136\u4e92\u4e0d\u5f71\u54cd\uff0c\u6240\u4ee5\u6253\u4e71\u4e86\u4e5f\u6ca1\u5173\u7cfb\u3002\n\n\u7136\u540e\u6211\u4eec\u5c31\u6210\u529f\u7684\u628a\u8be2\u95ee\u6309 $x$ \u5206\u7ec4\u4e86\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u7ec4\u76f4\u63a5\u8dd1\u6734\u7d20\u7684\u6811\u72b6\u6570\u7ec4\u5c31\u884c\u3002\n\n\u552f\u4e00\u7684\u7ec6\u8282\u5c31\u662f\u6e05\u7a7a\u6811\u72b6\u6570\u7ec4\u65f6\uff0c\u9700\u8981\u628a\u521a\u521a\u8fdb\u884c\u8fc7\u7684\u64cd\u4f5c\u5168\u90e8\u64a4\u9500\u800c\u4e0d\u662f\u76f4\u63a5\u4f7f\u7528 `memset` \uff0c\u56e0\u4e3a\u4e00\u904d `memset` \u662f $O(n)$ \u7684\uff0c\u590d\u6742\u5ea6\u4f1a\u70b8\u3002\n\n\u7531\u4e8e\u65f6\u95f4\u6233\u503c\u57df\u4e3a $10^9$ \uff0c\u628a\u65f6\u95f4\u6233\u79bb\u6563\u5316\u4e00\u4e0b\u5c31\u884c\u4e86\u3002\uff08\u6211\u8111\u6b8b\u4e00\u5f00\u59cb\u6ca1\u770b\u5230\u8fd9\u4e2a\u3002\u3002\u3002\uff09\n\n\u6700\u7ec8\u590d\u6742\u5ea6\u662f $O(nlogn)$ \u7684\u3002\n\n## \u3010\u4ee3\u7801\u3011\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define getchar() printf(\"I am a cheater!I AK IOI!%c\", 10)\ntemplate <typename T>\ninline void read(T &x){\n    x = 0;int fu = 1;\n    char c = getchar();\n    while(c > 57 || c < 48){\n        if(c == 45) fu = -1;\n        c = getchar();\n    }\n    while(c <= 57 && c >= 48){\n        x = (x << 3) + (x << 1) + c - 48;\n        c = getchar();\n    }\n    x *= fu;\n}\ntemplate <typename T>\ninline void fprint(T x){\n    if(x < 0) putchar(45), x = -x;\n    if(x > 9) fprint(x / 10);\n    putchar(x % 10 + 48);\n}\ntemplate <typename T>\ninline void fprint(T x, char ch){\n    fprint(x);putchar(ch);\n}\ninline char next_char(){\n    char ch = getchar();\n    while(ch == 9 || ch == 10 || ch == 32) ch = getchar();\n    return ch;\n}\n\n#define MAXN 100005\n\nint n;\nstruct Quest{\n    int x, t, opt, id;\n    inline bool operator < (const Quest &tmp) const{//\u6392\u5e8f\u7684\u4e24\u4e2a\u5173\u952e\u5b57\n        return x < tmp.x || (x == tmp.x && id < tmp.id);\n    }\n}q[MAXN];\nint c[MAXN];\ninline int lowbit(int x){return x & -x;}\ninline int query(int x){int ret = 0;for (;x;x -= lowbit(x)) ret += c[x];return ret;}\ninline void modify(int x, int y){for (;x <= n;x += lowbit(x)) c[x] += y;}\nint ans[MAXN], b[MAXN];\nint main(){\n    read(n);\n    memset(ans, -1, sizeof(ans));\n    for (register int i = 1;i <= n;i ++){\n        read(q[i].opt);read(q[i].t);read(q[i].x);\n        b[i] = q[i].t;\n        q[i].id = i;\n    }\n    sort(b + 1, b + n + 1);//\u79bb\u6563\u5316\n    int tot = unique(b + 1, b + n + 1) - b - 1;\n    for (register int i = 1;i <= n;i ++) q[i].t = lower_bound(b + 1, b + tot + 1, q[i].t) - b;\n    sort(q + 1, q + n + 1);\n    int it = 1;//\u5bf9\u4e8e\u6bcf\u4e00\u7ec4\u8be2\u95ee\u8dd1\u6811\u72b6\u6570\u7ec4\n    while(it <= n){\n        int mem = it;\n        while(q[it].x == q[mem].x){\n            if(q[it].opt == 1) modify(q[it].t, 1);\n            if(q[it].opt == 2) modify(q[it].t, -1);\n            if(q[it].opt == 3) ans[q[it].id] = query(q[it].t);\n            it ++;\n        }\n        it = mem;\n        while(q[it].x == q[mem].x){\n            if(q[it].opt == 1) modify(q[it].t, -1);\n            if(q[it].opt == 2) modify(q[it].t, 1);\n            it ++;\n        }\n    }\n    for (register int i = 1;i <= n;i ++){//\u7531\u4e8e\u79bb\u7ebf\u4e86\uff0c\u8981\u8fd9\u4e48\u8f93\u51fa\u7b54\u6848\n        if(~ans[i]) fprint(ans[i], 10);\n    }\n}\n```",
        "postTime": 1605326083,
        "uid": 66511,
        "name": "DPair",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF641E \u3010Little Artem and Time Machine\u3011"
    },
    {
        "content": "# CF641E Little Artem and Time Machine\n\n## \u9898\u76ee\u5927\u610f\n\n\u76f4\u63a5\u770b\u7ffb\u8bd1\u8fd8\u662f\u80fd\u770b\u61c2\u7684\u5427 QwQ\n\n## \u4e2a\u4eba\u611f\u89c9\n\nCDQ \u5206\u6cbb\u5165\u95e8\u9898\u76ee\n\n## \u89e3\u9898\u62a5\u544a\n\n\u5176\u4ed6\u9898\u89e3\u4e5f\u6709 CDQ \u5206\u6cbb\u7684\u505a\u6cd5\uff0c\u4e0d\u8fc7\u4f3c\u4e4e\u53ca\u5176\u6982\u62ec\uff0c\u8fd9\u91cc\u7a0d\u5fae\u8865\u5145\u4e00\u4e0b\u3002\n\n\u9996\u5148\uff0c\u8fd9\u9053\u9898\u6709\u4e09\u7ef4 \uff1a \u64cd\u4f5c\u7684\u987a\u5e8f\uff0c\u65f6\u95f4\u8f74\uff0c\u4ee5\u53ca x \u7684\u503c\u3002\n\n\u7531\u4e8e\u7b2c\u4e00\u7ef4\u672c\u8eab\u6709\u5e8f\uff0c\u6240\u4ee5\u6682\u65f6\u4e0d\u8003\u8651\u53bb\u52a8\u5b83\uff0c\u9009\u62e9\u5bf9\u7b2c\u4e8c\u7ef4\u8fdb\u884c CDQ \u5206\u6cbb\u3002\n\n\u8003\u8651\u5982\u4f55\u7edf\u8ba1\u5de6\u533a\u95f4\u5bf9\u53f3\u533a\u95f4\u7684\u5f71\u54cd\uff0c\u5047\u8bbe $a[i]$ \u5728\u5de6\u533a\u95f4\uff0c $a[j]$ \u5728\u6709\u533a\u95f4\uff0c\u53d1\u73b0\u53ea\u6709\u5f53 $a[i].t <= a[j].t$, \u4e14 $a[i].x == a[j].x$ \u7684\u65f6\u5019\uff0c $a[i]$ \u5bf9 $a[j]$ \u624d\u4f1a\u4ea7\u751f\u8d21\u732e\uff0c\u6240\u4ee5\u5728 CDQ \u5206\u6cbb\u7684\u65f6\u5019\u53ea\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u6876\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u56e0\u4e3a $x$ \u53ef\u80fd\u4f1a\u6bd4\u8f83\u5927\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528 unordered_map \u6216\u8005\u5148\u79bb\u6563\u5316\u4e00\u4e0b\u3002\n\n\u590d\u6742\u5ea6 : $O(n\\log n)$\n\n\u5b9e\u6d4b\u7ed3\u679c(\u65f6\u95f4\u5e38\u6570\u5927\u5c0f) \uff1a\n[\u79bb\u6563\u5316 + \u6876](https://www.luogu.org/recordnew/show/18350392) < [un_map + \u9010\u4e2a\u5220\u9664](https://www.luogu.org/recordnew/show/18350482) << [un_map + un_map::clear()](https://www.luogu.org/recordnew/show/18349711)\n\n\u9644\u4e0a\u4f7f\u7528\u79bb\u6563\u5316\u7684 Code \uff1a\n```cpp\n#include<cstdio>\n#include<algorithm>\n\nclass Solution{\nprivate :\n    static const int maxn = 1e5 + 7;\n\n    struct Oper{\n        int op, t, x, id;\n    };\n\n    int n, cnt, b[maxn], ct, ans[maxn];\n    Oper p[maxn];\n\n    void CDQ(int l, int r) {\n        if (l == r) {\n            return;\n        }\n        int mid = (l + r) >> 1;\n        CDQ(l, mid), CDQ(mid + 1, r);\n\n        static Oper tmp[maxn];\n        static int tot[maxn];\n\n        int i = l, j = mid + 1, tp = l;\n        while (i <= mid && j <= r) {\n            if (p[i].t <= p[j].t) {\n                if (p[i].op == 1) {\n                    tot[p[i].x]++;\n                } else if (p[i].op == 2) {\n                    tot[p[i].x]--;\n                }\n                tmp[tp++] = p[i++];\n            } else {\n                if (p[j].op == 3) {\n                    ans[p[j].id] += tot[p[j].x];\n                }\n                tmp[tp++] = p[j++];\n            }\n        }\n\n        while (i <= mid) {\n            tmp[tp++] = p[i++];\n        }\n        while (j <= r) {\n            if (p[j].op == 3) {\n                ans[p[j].id] += tot[p[j].x];\n            }\n            tmp[tp++] = p[j++];\n        }\n        for (register int i = l; i <= mid; i++) {\n            tot[p[i].x] = 0;\n        }\n        for (register int i = l; i <= r; i++) {\n            p[i] = tmp[i];\n        }\n    }\n    \npublic :\n    Solution() {\n        get();\n        solve();\n    }\n\n    void get() {\n        scanf(\"%d\", &n);\n        for (register int i = 1; i <= n; i++) {\n            scanf(\"%d %d %d\", &p[i].op, &p[i].t, &p[i].x);\n            b[i] = p[i].x;\n            if (p[i].op == 3) {\n                p[i].id = ++cnt;\n            }\n        }\n    }\n\n    void solve() {\n        std::sort(b + 1, b + 1 + n);\n        ct = std::unique(b + 1, b + 1 + n) - b + 1;\n        for (register int i = 1; i <= n; i++) {\n            p[i].x = std::lower_bound(b + 1, b + 1 + ct, p[i].x) - b;\n        }\n        CDQ(1, n);\n        for (register int i = 1; i <= cnt; i++) {\n            printf(\"%d\\n\", ans[i]);\n        }\n    }\n};\nSolution sol;\n\nint main() {}\n\n```",
        "postTime": 1555668007,
        "uid": 49866,
        "name": "\u9f99\u4e4b\u543b\u2014\u6c34\u8d27",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF641E \u3010Little Artem and Time Machine\u3011"
    },
    {
        "content": "\u6839\u636e\u9898\u610f\uff0c\u76f4\u63a5\u4f7f\u7528\u79bb\u6563\u5316\u6811\u72b6\u6570\u7ec4\u6309\u9898\u610f\u64cd\u4f5c\u5373\u53ef\n\n\u6811\u72b6\u6570\u7ec4\u8981\u5f00 map\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\ninline ll read(){\n\tchar ch=getchar();ll x=0,f=1;\n    while(ch<'0' || ch>'9') {\n       if(ch=='-') f=-1;\n\t  \t  ch=getchar();\n\t}\n    while(ch<='9' && ch>='0') {\n\t   x=x*10+ch-'0';\n\t   ch=getchar();\n\t}\n    return x*f;\n}\n\n\nmap<int,int> s[1010011],vis;\n\nint lowbit(int x){\n\treturn x&-x;\n}\n\nvoid add(int k,int x,int v){\n\twhile(k<1e9+7){\n\t\ts[x][k]+=v;\n\t\tk+=lowbit(k);\n\t}\n}\n\nint ans(int k,int x){\n\tint res=0;\n\twhile(k){\n\t\tres+=s[x][k];\n\t\tk-=lowbit(k);\n\t}\n\treturn res;\n}\n\nint cnt=0;\n\nint q[2002002],t[2020002],x[2020022];\nint y[2020022];\nint main(){\n\tint n=read();\n\tfor(int i=1;i<=n;i++){\n\t\tq[i]=read(),t[i]=read(),x[i]=read();\n\t\ty[i]=x[i];\n\t}\n\tsort(y+1,y+n+1);\n\tfor(int i=1;i<=n;i++){\n\t\tif(y[i]!=y[i-1]){\n\t\t\tcnt++;\n\t\t\tvis[y[i]]=cnt;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(q[i]==1){\n\t\t\tadd(t[i],vis[x[i]],1);\n\t\t}\n\t\tif(q[i]==2){\n\t\t\tadd(t[i],vis[x[i]],-1);\n\t\t}\n\t\tif(q[i]==3){\n\t\t\tcout<<ans(t[i],vis[x[i]])<<endl;\n\t\t}\n\t}\n\n\treturn 0;\n}\n```\n\n\u8fd8\u6709\u4e00\u79cd cdq \u7684\u505a\u6cd5\n\n\u7b2c\u4e00\u7ef4\u662f\u7ed9\u7684\u987a\u5e8f\uff0c\u7b2c\u4e8c\u7ef4\u662f\u65f6\u95f4\u987a\u5e8f\uff0c\u5f00\u4e2a map \u6876\u8bb0\u5f55\u7b54\u6848\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\ninline ll read(){\n\tchar ch=getchar();ll x=0,f=1;\n    while(ch<'0' || ch>'9') {\n       if(ch=='-') f=-1;\n\t  \t  ch=getchar();\n\t}\n    while(ch<='9' && ch>='0') {\n\t   x=x*10+ch-'0';\n\t   ch=getchar();\n\t}\n    return x*f;\n}\n\n\nstruct node{\n\tint t,x,id,q;\n}t[4040045];\n\nint v[2020022];\nint ans[2020022];\n\nbool cmp1(node a,node b){\n\treturn a.t<b.t;\n}\n\nbool cmp(node a,node b){\n\treturn a.id<b.id;\n}\n\nmap<int,int> s;\n\nvoid cdq(int l,int r){\n\tif(l==r) return;\n\tint mid=l+r>>1;\n\tcdq(l,mid);cdq(mid+1,r);\n\tsort(t+l,t+r+1,cmp1);\n\tfor(int i=l;i<=r;i++){\n\t\tnode x=t[i];\n\t\tif(x.id<=mid){\n\t\t\tif(x.q==1) s[x.x]++;\n\t\t\tif(x.q==2) s[x.x]--;\n\t\t}\n\t\telse if(x.q==3){\n\t\t\tans[x.id]+=s[x.x];\n\t\t}\n\t}\n\tfor(int i=l;i<=r;i++){\n\t\tnode x=t[i];\n\t\tif(x.id<=mid){\n\t\t\tif(x.q==1) s[x.x]--;\n\t\t\tif(x.q==2) s[x.x]++;\n\t\t}\n\t}\n\tsort(t+l,t+r+1,cmp);\n}\n\nint main(){\n\tint n=read();\n\tfor(int i=1;i<=n;i++){\n\t\tt[i].q=read();\n\t\tt[i].t=read();\n\t\tt[i].x=read();\n\t\tt[i].id=i;\n\t\tif(t[i].q==3) v[i]=1;\n\t}\n\tcdq(1,n);\n\tfor(int i=1;i<=n;i++){\n\t\tif(v[i]){\n\t\t\tcout<<ans[i]<<endl;\n\t\t}\n\t} \n\treturn 0;\n}\n\n\n\n\n```",
        "postTime": 1547946099,
        "uid": 60136,
        "name": "chengni",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF641E \u3010Little Artem and Time Machine\u3011"
    },
    {
        "content": "~~\u5199\u5230\u4e00\u534a\u8111\u5b50\u77ed\u8def\uff0c\u4ee5\u4e3a\u9519\u4e86\uff0c\u5b9e\u9645\u4e0a\u662f\u5bf9\u7684\u3002~~\n\n- \u9898\u610f\n\n\u7ef4\u62a4\u4e00\u4e2a\u5f85\u65f6\u95f4\u6233\u7684 `multiset`\uff0c\u8fdb\u884c $n$ \u6b64\u64cd\u4f5c\u3002\n1. `1 t x`\uff0c\u5728\u65f6\u95f4 $t$ \u52a0\u5165\u4e00\u4e2a\u6570 $x$\u3002\n2. `2 t x`\uff0c\u5728\u65f6\u95f4 $t$ \u5220\u9664\u4e00\u4e2a\u6570 $x$\u3002\n3. `3 t x`\uff0c\u67e5\u8be2\u65f6\u95f4\u4e3a $t$ \u65f6\uff0c`multiset` \u4e2d $x$ \u7684\u6570\u91cf\u3002\n\n- \u5206\u6790\n\n\u8003\u8651\u4e00\u4e2a\u4fee\u6539 $i$ \u5bf9\u8be2\u95ee $j$ \u6709\u8d21\u732e\u5f53\u4e14\u4ec5\u5f53 $i<j,t_i<t_j,x_i=x_j$\uff0c\u53d1\u73b0\u597d\u68d2\u8036\uff0c\u8fd9\u662f\u4e2a\u4e8c\u7ef4\u504f\u5e8f\uff0c\u76f4\u63a5 cdq \u5206\u6cbb\u5c31\u884c\u4e86\uff0c\u56e0\u4e3a\u4e0d\u9700\u8981\u6811\u72b6\u6570\u7ec4\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n\\log n)$\uff0c\u4e0d\u4f1a cdq \u5206\u6cbb\u7684\u51fa\u95e8\u53f3\u8f6c\u6211\u7684\u535a\u5ba2 [CDQ \u5206\u6cbb\u7b14\u8bb0](https://www.luogu.com.cn/blog/BingAD/cdq-fen-zhi-bi-ji)\u3002\n\n- code\n\n```cpp\n#include <bits/stdc++.h>\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2\")\n#define LL long long\nusing namespace std;\n\nnamespace IO {\n    char ibuf[(1 << 20) + 1], *iS, *iT;\n#if ONLINE_JUDGE\n#define gh() (iS == iT ? iT = (iS = ibuf) + fread(ibuf, 1, (1 << 20) + 1, stdin), (iS == iT ? EOF : *iS++) : *iS++)\n#else\n#define gh() getchar()\n#endif\n    inline long long read () {\n        char ch = gh();\n        long long x = 0;\n        bool t = 0;\n        while (ch < '0' || ch > '9') t |= ch == '-', ch = gh();\n        while (ch >= '0' && ch <= '9') x = (x << 1) + (x << 3) + (ch ^ 48), ch = gh();\n        return t ? ~(x - 1) : x;\n    }\n    inline void write(long long x) {\n        if (x < 0) {\n            x = ~(x - 1);\n            putchar('-');\n        }\n        if (x > 9)\n            write(x / 10);\n        putchar(x % 10 + '0');\n    }\n}\n\nusing IO::read;\nusing IO::write;\n\nconst int maxn(1e5 + 500);\nint n, dsp[maxn], len, sum[maxn], ans[maxn], tot;\n\nstruct Node {\n    int t, x, v, id;\n} q[maxn];\n\ninline void cdq (int l, int r) {\n    if (l == r) return;\n    const int mid = (l + r) >> 1;\n    cdq(l, mid), cdq(mid + 1, r);\n    int i = l, j = mid + 1;\n    for (; j <= r; j++) {\n        for (; i <= mid && q[i].t < q[j].t; i++) \n            if (!q[i].id) sum[q[i].x] += q[i].v;\n        if (q[j].id) ans[q[j].id] += sum[q[j].x];\n    }\n    for (int k = l; k < i; k++) if (!q[k].id) sum[q[k].x] -= q[k].v;\n    inplace_merge(q + l, q + mid + 1, q + r + 1, [] (const Node &x, const Node &y) -> bool { return x.t < y.t; });\n}\n\nint main () {\n    n = read();\n    for (int i = 1, opt, t, x; i <= n; i++) {\n        opt = read(), t = read(), x = read();\n        if (opt == 1) q[i] = {t, x, 1, 0};\n        else if (opt == 2) q[i] = {t, x, -1, 0};\n        else q[i] = {t, x, 0, ++tot};\n        dsp[++len] = x;\n    }\n    sort(dsp + 1, dsp + len + 1);\n    len = unique(dsp + 1, dsp + len + 1) - dsp - 1;\n    for (int i = 1; i <= n; i++) q[i].x = lower_bound(dsp + 1, dsp + len + 1, q[i].x) - dsp;\n    cdq(1, n);\n    for (int i = 1; i <= tot; i++) write(ans[i]), putchar('\\n');\n}\n// I love WHQ!\n```",
        "postTime": 1676035044,
        "uid": 317495,
        "name": "JWRuixi",
        "ccfLevel": 7,
        "title": "CF641E Little Artem and Time Machine"
    },
    {
        "content": "cdq \u5206\u6cbb\u3002\n\n\u5c06 $x$ \u79bb\u6563\u5316\u3002\n\n\u53ea\u8981 $p_i.time \\le p_j.time$ \u5373\u53ef\u7edf\u8ba1\u3002\n\n\u5c0f\u4e8e\u65f6\u770b $p_i.op = 1$ \u4e0e $2$ \u7684\u60c5\u51b5\uff0c\u5927\u4e8e\u65f6\u7edf\u8ba1 $p_i.op = 3$ \u7684\u7b54\u6848\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff0c\u7801\u98ce\u975e\u4e3b\u6d41\uff0c\u51d1\u5408\u7740\u770b\u770b\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nstruct Data {\n\tint o, t, v, i;\n} a[100010], t[100010];\nint cnt[100010], ans[100010];\nvoid cdq(int l, int r) {\n\tif (l >= r) {\n\t\treturn;\n\t}\n\tint mid = (l + r) / 2;\n\tcdq(l, mid), cdq(mid + 1, r);\n\tint L = l, R = mid + 1, tot = 0;\n\twhile (L <= mid && R <= r)\n\t\tif (a[L].t <= a[R].t) {\n\t\t\tif (a[L].o == 1) {\n\t\t\t\tcnt[a[L].v]++;\n\t\t\t}\n\t\t\tif (a[L].o == 2) {\n\t\t\t\tcnt[a[L].v]--;\n\t\t\t}\n\t\t\ttot++, t[tot] = a[L], L++;\n\t\t} else {\n\t\t\tif (a[R].o == 3) {\n\t\t\t\tans[a[R].i] += cnt[a[R].v];\n\t\t\t}\n\t\t\ttot++, t[tot] = a[R], R++;\n\t\t}\n\twhile (L <= mid) {\n\t\ttot++, t[tot] = a[L], L++;\n\t}\n\twhile (R <= r) {\n\t\tif (a[R].o == 3) {\n\t\t\tans[a[R].i] += cnt[a[R].v];\n\t\t}\n\t\ttot++, t[tot] = a[R], R++;\n\t}\n\tfor (int i = l; i <= mid; i++) {\n\t\tcnt[a[i].v] = 0;\n\t}\n\tfor (int i = l, j = 1; j <= tot; i++, j++) {\n\t\ta[i] = t[j];\n\t}\n}\nint A[100010];\nint main() {\n\tint n, r = 0;\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; i++) {\n\t\tscanf(\"%d%d%d\", &a[i].o, &a[i].t, &a[i].v);\n\t\tA[i] = a[i].v;\n\t\tif (a[i].o == 3) {\n\t\t\tr++, a[i].i = r;\n\t\t}\n\t}\n\tsort(A + 1, A + n + 1);\n\tint aaaa = unique(A + 1, A + n + 1) - A + 1;\n\tfor (int i = 1; i <= n; i++) {\n\t\ta[i].v = lower_bound(A + 1, A + aaaa + 1, a[i].v) - A;\n\t}\n\tcdq(1, n);\n\tfor (int i = 1; i <= r; i++) {\n\t\tprintf(\"%d\\n\", ans[i]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1666187522,
        "uid": 687698,
        "name": "_dijkstra_",
        "ccfLevel": 0,
        "title": "CF641E \u9898\u89e3"
    },
    {
        "content": "# \u3010\u6c34\u9898\u89e3\u8bb0\u5f55\u3011CF641E Little Artem and Time Machine\n\n## \u9898\u610f\n\n\u7ed9\u4f60\u4e00\u4e2a\u5e26\u65f6\u95f4\u6233\u7684\u53ef\u91cd\u96c6\uff0c\u8fdb\u884c $n$ \u6b21\u64cd\u4f5c\uff1a\n\n1. \u5728 $t$ \u65f6\u523b\u63d2\u5165\u4e00\u4e2a $x$\n2. \u5728 $t$ \u65f6\u523b\u5220\u9664\u4e00\u4e2a $x$\n3. \u8be2\u95ee\u5728 $t$ \u65f6\u523b\u6709\u51e0\u4e2a $x$\n\n\u5728 $t$ \u65f6\u523b\u64cd\u4f5c\u4f1a\u5bf9\u4e4b\u540e\u7684\u53ef\u91cd\u96c6\u5f71\u54cd\u3002\n\n\u64cd\u4f5c\u6309\u7167\u7ed9\u5b9a\u7684\u987a\u5e8f\u8fdb\u884c\u3002\n\n$1\\le n\\le 10^5$\n\n## \u9898\u89e3\n\n\u5bf9\u4e8e\u4e0d\u540c\u7684 $x$ \uff0c\u5176\u64cd\u4f5c\u662f\u72ec\u7acb\u7684\u3002\u6240\u4ee5\u6211\u4eec\u4ee5 $x$ \u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u7ed9\u5b9a\u987a\u5e8f\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u8fdb\u884c\u6392\u5e8f\u3002\n\n\u5728\u76f8\u540c\u7684 $x$ \u4e0b\uff0c\u5bf9\u4e8e\u65f6\u523b $t$ \uff0c\u4f1a\u5f71\u54cd\u4e4b\u540e\u7684\u65f6\u523b\u3002\u66b4\u529b\u662f\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u6c42\u548c\u3002\u7528\u6811\u72b6\u6570\u7ec4\u4f18\u5316\u5373\u53ef\u3002\u6ce8\u610f\u8981\u79bb\u6563\u5316\u3002\n\n\u6700\u540e\u6309\u7167\u987a\u5e8f\u8f93\u51fa\u3002\n\n\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n## Code\n\n```cpp\n#define maxn 100005\nstruct node{int op,id,x,cur;}f[maxn];\ninline bool cmp(node x,node y){\n\tif (x.x^y.x) return x.x<y.x;\n\treturn x.cur<y.cur;\n}\nint g[maxn],n,ans[maxn];\nstruct BIT{\n\t#define lowbit(x) ((x)&(-x))\n\tint f[maxn];\n\tinline void add(int x,int y){rg int i;for (i=x;i<=n;i+=lowbit(i)) f[i]+=y;}\n\tinline int query(int x){rg int i,sum=0;for (i=x;i;i-=lowbit(i)) sum+=f[i];return sum;}\n}t;//\u6811\u72b6\u6570\u7ec4\nsigned main(){\n\trg int i,j,l,r,mid,pus;\n\tmemset(ans,-1,sizeof(ans));\n\tread(n);\n\tfor (i=1;i<=n;i++) read(f[i].op),read(f[i].id),read(f[i].x),f[i].cur=i,g[i]=f[i].id;\n\tsort(g+1,g+1+n);\n\tint tot=unique(g+1,g+1+n)-g-1;\n\tfor (i=1;i<=n;i++){\n\t\tl=0;r=tot+1;\n\t\twhile (l+1<r){\n\t\t\tmid=l+r>>1;\n\t\t\tif (g[mid]<=f[i].id) l=mid;\n\t\t\telse r=mid;\n\t\t}\n\t\tf[i].id=l;\n\t}//\u79bb\u6563\u5316\n\tsort(f+1,f+1+n,cmp);\n\tfor (i=1;i<=n;i++){\n\t\tfor (j=i;j<=n+1;j++) if (f[i].x^f[j+1].x) break;pus=j;\n\t\tfor (j=i;j<=pus;j++){\n\t\t\tif (f[j].op==1) t.add(f[j].id,1);\n\t\t\telse if (f[j].op==2) t.add(f[j].id,-1);\n\t\t\telse ans[f[j].cur]=t.query(f[j].id);\n\t\t}\n\t\tfor (j=i;j<=pus;j++){\n\t\t\tif (f[j].op==1) t.add(f[j].id,-1);\n\t\t\telse if (f[j].op==2) t.add(f[j].id,1);\n\t\t}\n\t\ti=pus;\n\t}\n\tfor (i=1;i<=n;i++) if (ans[i]!=-1) printf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```\n\n\n\n",
        "postTime": 1622547879,
        "uid": 51569,
        "name": "\u8fdd\u89c4\u7528\u6237\u540dFkZyA0!2",
        "ccfLevel": 0,
        "title": "\u3010\u6c34\u9898\u89e3\u8bb0\u5f55\u3011CF641E Little Artem and Time Machine"
    },
    {
        "content": "[\u535a\u5ba2\u5ba3\u4f20](https://www.luogu.com.cn/blog/zimindaada/)\n\n[CF641E \u9898\u9762](https://www.luogu.com.cn/problem/CF641E)\n\n\u8fd9\u4e00\u9053\u9898\u662f\u4e00\u9053\u5f88\u597d\u7684```CDQ```\u7684\u7ec3\u624b\u9898\u3002\u6211\u4eec\u6839\u636e[\u6a21\u677f\u9898](https://www.luogu.com.cn/problem/P3810)\u7684\u601d\u8def\uff0c\u53ef\u4ee5\u60f3\u51fa\u6765\u8fd9\u4e00\u9053\u9898\u7684\u4e09\u4e2a\u503c\u6309\u987a\u5e8f\u5206\u522b\u4e3a $a$ : \u8f93\u5165\u987a\u5e8f\uff0c $b$ : \u8f93\u5165\u4e2d\u7684\u65f6\u95f4\u987a\u5e8f\uff08\u5373$t$)\uff0c $c$ :\u8f93\u5165\u4e2d\u7684\u503c$x$\u3002\u6211\u4eec\u6240\u9700\u7684\u5de6\u534a\u533a\u95f4\u5bf9\u53f3\u534a\u533a\u95f4\u7684\u8d21\u732e\u4e3a\uff1a\u82e5\u5de6\u534a\u533a\u95f4\u6709$a_i$\uff0c\u53f3\u534a\u533a\u95f4\u6709$a_j$\uff0c\u5219\u5f53$a_i.a < a_j.a, \\space a_i.b \\leq a_i.b, \\space a_i.c=a_j.c$\u7684\u65f6\u5019\uff0c$a_i$\u5bf9$a_j$\u6709\u8d21\u732e\u3002\u7531\u4e8e\u521d\u59cb\u8f93\u5165\u51b3\u5b9a\u4e86$a$\u6709\u5e8f\uff0c\u6240\u4ee5\u53ea\u9700\u5bf9\u7b2c\u4e8c\u7ef4\u6392\u5e8f\uff0c\u7528\u6876\u7ef4\u62a4\u7b2c\u4e09\u7ef4\u5373\u53ef\u3002\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nnamespace ztd{\n    using namespace std;\n    #define reg register\n    #define ms(a) memset(a,0,sizeof(a))\n    typedef long long ll;\n    typedef unsigned long long ull;\n    typedef unsigned int uint;\n    typedef double db;\n    //basic I/O\n    template<typename T> inline T read(T& t) {//fast read\n        t=0;short f=1;char ch=getchar();double d = 0.1;\n        while (ch<'0'||ch>'9') {if (ch=='-') f=-f;ch=getchar();}\n        while (ch>='0'&&ch<='9') t=t*10+ch-'0',ch=getchar();\n        if(ch=='.'){ch=getchar();while(ch<='9'&&ch>='0') t+=d*(ch^48),d*=0.1,ch=getchar();}\n        t*=f;\n        return t;\n    }\n}\nusing namespace ztd;\nconst int maxn = 2e5+7;\nint n, m, len;\n\nstruct node{int a, b, c, opt;}a[maxn];\nint ac[maxn], ab[maxn], b[maxn], tmp[maxn], ans[maxn], opt[maxn];\nbool cmp(node x, node y){\n\treturn x.a<y.a;\n}\nbool cmp2(node x, node y){\n\treturn x.b<y.b;\n}\n\nint lsh(int *a, int n){\n//\u79bb\u6563\u5316\uff0c\u7531\u4e8e\u503c\u592a\u5927\uff0cn\u6bd4\u8f83\u5c0f\uff0c\u6240\u4ee5\u9002\u5408\u7528\u6876+\u79bb\u6563\u5316\uff0c\u6bd4map\u8981\u5feb\u3002\n\tfor(int i = 1; i <= n; ++i) tmp[i] = a[i];\n\tsort(tmp+1,tmp+n+1);\n\tint l = unique(tmp+1,tmp+n+1) - tmp - 1;\n\tfor(int i = 1; i <= n; ++i) a[i] = lower_bound(tmp+1, tmp+l+1, a[i]) - tmp;\n\treturn l;\n}\n\nvoid CDQ(int l, int r){\n\tif(l == r) return;\n\tint mid = (l+r)>>1;\n\tCDQ(l, mid); CDQ(mid+1, r);\n\tsort(a+l, a+r+1, cmp2);\n\tfor(int i = l; i <= r; ++i){\n        if(a[i].a <= mid){\n            if(a[i].opt ^ 3)\n\t\t\t    b[a[i].c] += ((a[i].opt == 1) ? 1 : -1);\n\t\t}else if(a[i].opt == 3) {\n            ans[a[i].a] += b[a[i].c];\n        }\n\t}\n\t\n    //\u628a\u6876\u5e26\u6765\u7684\u4fee\u6539\u5220\u6389\n\tfor(int i = l; i <= r; ++i){\n\t\tif(a[i].a <= mid && a[i].opt ^ 3){\n\t\t\tb[a[i].c] += ((a[i].opt == 1) ? -1 : 1);\n\t\t}\n\t}\n\tsort(a+l,a+r+1, cmp);\n}\nsigned main(){\n\tread(n);\n\tfor(int i = 1; i <= n; ++i){ \n\t\topt[i] = read(a[i].opt); \n\t\ta[i].a = i;//id\n\t\tread(ab[i]);/*t*/ read(ac[i]); /*value or \"x\" */\n\t}\n\tlsh(ab,n); lsh(ac, n);\n\tfor(int i = 1; i <= n; ++i) {\n\t\ta[i].b = ab[i], a[i].c = ac[i];\n\t}\n\tCDQ(1,n);\n\tfor(int i = 1; i <= n; ++i){\n    \t//\u6ce8\u610f\uff01\u56e0\u4e3a\u53ea\u8981\u64cd\u4f5c3\u624d\u8981\u8f93\u51fa\uff0c\u4e14cdq\u4f1a\u6253\u4e71\u987a\u5e8f\uff0c\u6240\u4ee5\u8981\u8bb0\u5f55opt\u987a\u5e8f\n\t\tif(opt[i] == 3) printf(\"%d\\n\", ans[i]);\n\t}\n\treturn 0;\n}\n/*\n\u81ea\u5df1\u7f16\u7684\u6570\u636e\ninput 1:\n6\n1 4 6\n1 2 8\n1 3 8\n2 3 8\n2 2 8\n3 7 8\noutput 1:\n0\n\ninput 2:\n4\n1 4 6\n1 2 8\n2 2 8\n3 7 8\n\noutput 2:\n0\n\n*/\n\n```\n\n# \u8fd9\u5c31\u5b8c\u4e86\uff1f\u5c31\u8fd9\uff1f\n\n\u5176\u5b9e\u8fd9\u4e00\u9053\u9898\u8fd8\u6709\u53e6\u5916\u4e00\u79cd\u505a\u6cd5\uff0c\u5c31\u662f\u79bb\u6563\u5316\u52a0\u6811\u72b6\u6570\u7ec4\u3002\u8fd9\u91cc\u7528\u7684\u662f```map```\uff0c\u9632\u6b62\u5185\u5b58\u7206\u70b8\u3002\u5f88\u597d\u7406\u89e3\uff0c\u5c31\u662f\u6240\u6709\u7684\u8f93\u5165\u585e\u5230\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\uff0c\u7ef4\u62a4\u540e\u7f00\u548c\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <map>\n#include <algorithm>\nusing namespace std;\ntemplate<typename T> inline T read(T& t) {//fast read\n    t=0;short f=1;char ch=getchar();double d = 0.1;\n    while (ch<'0'||ch>'9') {if (ch=='-') f=-f;ch=getchar();}\n    while (ch>='0'&&ch<='9') t=t*10+ch-'0',ch=getchar();\n    if(ch=='.'){ch=getchar();while(ch<='9'&&ch>='0') t+=d*(ch^48),d*=0.1,ch=getchar();}\n    t*=f;\n    return t;\n}\ntypedef map<int,int> mii;\nconst int maxn = 1e5+7;\nint n, opt[maxn], t[maxn], a[maxn], tmp[maxn+5], len;\nint lsh(int *a, int n){\n\tfor(int i = 1; i <= n; ++i) tmp[i] = a[i];\n\tsort(tmp+1,tmp+n+1);\n\tint l = unique(tmp+1,tmp+n+1) - tmp - 1;\n\tfor(int i = 1; i <= n; ++i) a[i] = lower_bound(tmp+1, tmp+l+1, a[i]) - tmp;\n\treturn l;\n}\n\n\nmii T[maxn];\ninline int lowbit(int x){return x & -x;}\nvoid add(int c, int x, int k){\n\twhile(x <= len){\n\t\tT[c][x] += k;\n\t\tx += lowbit(x);\n\t}\n}\nint ask(int c, int x){\n    int ans = 0;\n    while(x){\n    \tans += T[c][x];\n        x -= lowbit(x);\n    }\n    return ans;\n}\n\n\nint main(){\n\tread(n);\n\tfor(int i = 1; i <= n; ++i){ read(opt[i]); read(t[i]); read(a[i]); }\n\tlsh(a,n); len = lsh(t,n);\n\tfor(int i = 1; i <= n; ++i){\n\t\tif(opt[i] == 1) add(a[i], t[i], 1);\n\t\telse if(opt[i] == 2) add(a[i], t[i], -1);\n\t\telse printf(\"%d\\n\", ask(a[i], t[i]));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1594996491,
        "uid": 134635,
        "name": "zimindaada",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 - CF641E Little Artem and Time Machine"
    },
    {
        "content": "[\u9898\u9762](https://www.luogu.com.cn/problem/CF641E)\u3002\n\n- \u9898\u610f \uff1a\n\n\u7ed9\u5b9a\u4e00\u4e2a \u5e26 **\u65f6\u95f4\u6233** \u7684 **\u53ef\u91cd\u96c6** \uff08\u4e00\u5f00\u59cb\u4e3a **\u7a7a\u96c6**\uff09\uff0c \u6bcf\u6b21\u8fdb\u884c\u4ee5\u4e0b\u51e0\u79cd\u64cd\u4f5c\u3002\n\n1. \u5728\u65f6\u523b $t$ \u52a0\u5165\u4e00\u4e2a\u6570 $x$\n\n1. \u5728\u65f6\u523b $t$ \u5220\u9664\u4e00\u4e2a\u6570 $x$\n\n1. \u5728\u65f6\u523b $t$ \u67e5\u8be2\u4e00\u4e2a\u6570 $x$ \u7684\u51fa\u73b0\u6b21\u6570\n\n- \u601d\u8def :\n\n\u5728\u7ebf\u5f88\u68d8\u624b\uff0c\u8003\u8651\u79bb\u7ebf\u4e0b\u6765\u505a\u3002\u7528\u4e00\u4e2a\u72b6\u6001\u56db\u5143\u7ec4 $(tim, b,c, d)$ \u53bb\u8868\u793a\u4e00\u4e2a\u64cd\u4f5c\u3002\n\n\u5206\u522b\u8868\u793a\u4e3a \u7b2c $tim$ \u4e2a\u64cd\u4f5c\uff0c\u7b2c $op$ \u79cd\u64cd\u4f5c\uff0c \u7b2c $b$ \u53f7\u65f6\u95f4\uff0c\u5143\u7d20\u4e3a $c$, \u5bf9\u4e8e\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570\u5f71\u54cd\u4e3a $d$ (\u82e5\u4e3a\u67e5\u8be2\u5219\u4e3a $0$ ).\n\n\u7136\u540e\u5bf9\u4e8e\u4e00\u4e2a \u7b2c $tim$ \u4e2a\u64cd\u4f5c\u4e3a\u8be2\u95ee \u7684\u7b54\u6848\u5c31\u662f :\n\n$$\\sum_{i < tim} \\sum_{a[i].b \\leq b,a[i].c = c}a[i].d$$\n\n\u663e\u7136\uff0c\u8fd9\u53d8\u6210\u4e86\u4e00\u4e2a\u4e09\u7ef4\u504f\u5e8f\u95ee\u9898\uff0c\u505a $CDQ$ \u5206\u6cbb\u5373\u53ef\u3002\n\u53ef\u4ee5\u8003\u8651\u5bb9\u65a5, \u4e5f\u53ef\u4ee5\u5f00\u4e2a\u6876\u53bb\u89e3\u51b3\uff0c\u540e\u8005\u52a0\u4e2a\u79bb\u6563\u5316\u548c\u524d\u8005\u4e00\u6837\u3002\n\n- \u4ee3\u7801 :\n\n\u6876\u4f7f\u7528 $map$ \u6765\u5b9e\u73b0\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log^2n)$ \u3002\n\n```cpp\n// Coding by Custlo\n\n// Tag : CDQ Method \n\n// Time : 2022 - 3 - 26\n\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <string>\n#include <cstdio>\n#include <cmath>\n#include <map>\n\nusing namespace std;\n\nconst int N = 2e5 + 5;\n\ninline int read () {\n    int ans = 0; char c = getchar(), last = ' ';\n    while(c < '0' || c > '9') last = c,c = getchar();\n    while(c >= '0' && c <= '9') ans = (ans << 1) + (ans << 3) + c - '0',c = getchar();\n    return last == '-' ? - ans : ans;\n}\n\nmap <int, int> exists; \n\nstruct NODE {\n\tint a, b, c, op;\n} a[N];\n// \u72b6\u6001\ninline bool cmp (NODE a, NODE b) { return a.a < b.a; }\ninline bool cmp2 (NODE a, NODE b) { return a.b < b.b; }\n\nint n, op[N], res[N];\ninline void CdqMethod (int l, int r) {\n\tif (l == r) return ;\n\tint mid = (l + r) >> 1;\n\tCdqMethod(l, mid), CdqMethod(mid + 1, r);\n\tsort(a + l, a + r + 1, cmp2);\n\tfor (int i = l; i <= r; i ++) {\n\t\tif (a[i].a <= mid ) {\n            if (a[i].op != 3) exists[a[i].c] += (a[i].op == 1 ? 1 : -1); // \u8ba1\u7b97\u8d21\u732e\n        }\n        else if (a[i].op == 3) res[a[i].a] += exists[a[i].c]; // \u6c42\u7b54\u6848\n\t}\n\tfor (int i = l; i <= r; i ++)\n\t\tif (a[i].a <= mid && a[i].op != 3) exists[a[i].c] -= (a[i].op == 1 ? 1 : -1); // \u64a4\u9500\u8d21\u732e\n\tsort(a + l, a + r + 1, cmp);\n} // cdq \u5206\u6cbb\nint main () {\n\tn = read();\n\tfor (int i = 1; i <= n; i ++) {\n\t\top[i] = a[i].op = read(), a[i].a = i, a[i].b = read(), a[i].c = read(); \n\t}\n\tCdqMethod(1, n);\n\tfor (int i = 1; i <= n; i ++) if (op[i] == 3) printf(\"%d\\n\", res[i]); // \u8f93\u51fa\u7b54\u6848\n\treturn 0;\n}\n```\n\n",
        "postTime": 1648309850,
        "uid": 307535,
        "name": "Cust10",
        "ccfLevel": 6,
        "title": "\u3010CDQ\u5206\u6cbb\u3011 CF641E"
    }
]