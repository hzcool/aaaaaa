[
    {
        "content": "\u4f60\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5143\u7d20\u5904\u7406\u5904\u4e00\u4e2al\u4e00\u4e2ar\uff0c\u663e\u7136\u5982\u679c\u4e24\u4e2a\u5143\u7d20lr\u6240\u4ee3\u8868\u7684\u533a\u95f4\u6709\u4ea4\u70b9\uff0c\u90a3\u4e48\u5fc5\u7136\u8fd9\u4e24\u4e2a\u5143\u7d20\u5728\u6700\u540e\u4e0d\u80fd\u5171\u5b58\u3002\n\n\u90a3\u4e48\u4f60\u53ea\u8981\u7528set\u7ef4\u62a4\u4e00\u4e2a\u5143\u7d20\u7684\u4e2a\u6570\u4ece\u5c0f\u5230\u5927\uff0c\u6bcf\u6b21\u5c06\u4e00\u4e2a\u51fa\u73b0\u6b21\u6570\u6700\u5c0f\u7684\u5143\u7d20\uff0c\u5e76\u4e14\u4ed6\u4eeclr\u6709\u4ea4\uff0c\u628a\u5c0f\u7684\u5e76 \u4e0a\u53bb\u5c31\u884c\u4e86\uff0c\u5e76\u5b8c\u4e4b\u540e\u540c\u65f6\u66f4\u65b0set\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define N 200005\nusing namespace std;\nint n,q,dis[N],m,ans=0;\nint a[N];\nstruct zero {\n\tint l,r,x;\n\tbool operator < (const zero& a) const {\n\t\treturn l<a.l;\n\t}\n} lib[N];\nset<int> st[N];\nset<int>::iterator it;\nint main() {\n\tscanf(\"%d%d\",&n,&q);\n\tfor(int i=1; i<=n; i++) {\n\t\tscanf(\"%d\",a+i);\n\t\tdis[++m]=a[i];\n\t}\n\tsort(dis+1,dis+m+1);\n\tm=unique(dis+1,dis+m+1)-dis-1;\n\tfor(int i=1; i<=n; i++) {\n\t\ta[i]=lower_bound(dis+1,dis+m+1,a[i])-dis;\n\t\tst[a[i]].insert(i);\n\t}\n\tfor(int i=1; i<=m; i++) {\n\t\tlib[i].l=*st[i].begin();\n\t\tit=st[i].end();\n\t\t--it;\n\t\tlib[i].r=*it,lib[i].x=st[i].size();\n\t}\n\tsort(lib+1,lib+m+1);\n\tint maxn=0,pos=0;\n\tfor(int i=1; i<=m; i++) {\n\t\tmaxn=max(maxn,lib[i].r);\n\t\tif(i==m||lib[i+1].l>maxn) {\n\t\t\tint tmp=0;\n\t\t\tfor(int r=pos+1; r<=i; r++) {\n\t\t\t\ttmp=max(tmp,lib[r].x);\n\t\t\t\tans+=lib[r].x;\n\t\t\t}\n\t\t\tans-=tmp,pos=i,maxn=0;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n}\n\n```\n",
        "postTime": 1568534317,
        "uid": 26937,
        "name": "_soul_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1209G1 \u3010Into Blocks (easy version)\u3011"
    },
    {
        "content": "\u611f\u89c9\u8fd9\u4e2a G1 \u8fd8\u662f\u6bd4\u8f83 naive \u7684\uff1f\u627e\u4e2a\u6027\u8d28\u8fd9\u9898\u5c31\u6ca1\u4e86\u3002\n\n\u5927\u6982\u505a\u9898\u65f6\u6709\u8fd9\u4e48\u51e0\u4e2a Observation\uff0c\u5f53\u65f6\u62ff\u7b14\u5199\u4e86\u4e0b\u6765\uff0c\u611f\u89c9\u5e94\u8be5\u662f\u6bd4\u8f83\u6b63\u5e38\u601d\u8def\uff1a\n\n1\u3001\u7b54\u6848\u4e0a\u754c\u4e00\u5b9a\u662f $n-\\max \\{col{\\rm num}\\}$ .\n\n2\u3001\u5982\u679c\u4e00\u4e2a\u989c\u8272\u5b58\u5728\u4e0d\u76f8\u90bb\uff0c\u90a3\u4e48\u8981\u4e48\u4f1a\u88ab\u5168\u90e8\u6d82\u6210\u522b\u7684\u989c\u8272\uff0c\u8981\u4e48\u4f1a\u88ab\u4fdd\u7559\u3002\n\n3\u3001\u6839\u636e $2$ \u4e0d\u96be\u53d1\u73b0\uff0c\u4e00\u6bb5\u4ea4\u9519\u6392\u5e03\u7684\u5143\u7d20\u6700\u540e\u5fc5\u7136\u53ea\u4f1a\u4fdd\u7559\u4e00\u79cd\u989c\u8272\u3002\n\n4\u3001\u6839\u636e $3$ \u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u8d2a\u5fc3\uff1a\u5c06\u6240\u6709\u989c\u8272\u6309\u7167\u51fa\u73b0\u6b21\u6570\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u3002\u4e00\u5f00\u59cb\u9884\u5904\u7406\u51fa\u6240\u6709\u989c\u8272\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e $s_i$ \u548c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e $t_i$\uff0c\u90a3\u4e48\u4e0d\u96be\u770b\u51fa\u8981\u628a $[s_i,t_i]$ \u4e4b\u95f4\u7684\u5143\u7d20\u90fd\u6d82\u6210\u5f53\u524d\u989c\u8272\u3002\u4e0d\u96be\u77e5\u9053\u8fd9\u6837\u662f\u6700\u4f18\u7684\u3002\n\n\u7136\u540e\u5b9e\u73b0\u4e0a\u9047\u4e0a\u4e86\u4e00\u70b9\u5c0f\u963b\u788d\u3002\u5927\u6982\u5c31\u662f\u8bf4\u968f\u7740\u4e0d\u505c\u5730\u67d3\u8272\uff0c\u53ef\u80fd\u4f1a\u6709\u4e00\u4e9b\u522b\u7684\u989c\u8272\u88ab\u67d3\u6210\u5f53\u524d\u989c\u8272\uff0c\u8fd9\u6837\u5c31\u8981\u52a8\u6001\u66f4\u65b0\u5f53\u524d\u989c\u8272\u7684 $s_i$ \u548c $t_i$ \u3002\u7136\u540e\u5c31\u56e0\u4e3a\u89c9\u5f97\u8fd9\u4e2a\u4e0d\u597d\u7ef4\u62a4\u5c31\u6478\u4e86\u4e00\u4f1a\u513f\u2026\u7ed3\u679c\u53d1\u73b0\u5176\u5b9e\u662f\u5f88\u597d\u7ef4\u62a4\u7684\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u4ece\u5927\u5230\u5c0f\u505a\u4e00\u5b9a\u53ef\u4ee5\u8ba9\u6bcf\u4e2a\u70b9\u81f3\u591a\u88ab\u67d3\u4e00\u6b21\u8272\uff0c\u590d\u6742\u5ea6\u53ef\u4ee5\u4fdd\u8bc1\uff1b\u540c\u65f6\u53d1\u73b0 $[s_i,t_i]$ \u5206\u522b\u6ee1\u8db3\u5355\u8c03\u6027\uff0c\u5c31\u53ef\u4ee5\u66b4\u529b `while` \u505a\u4e86\u3002\n\n\u6700\u540e\u590d\u6742\u5ea6\u663e\u7136\u6392\u5e8f\u5916\u7ebf\u6027\u3002\n\n```cpp\n \nint ans ;\nint cnt ;\nint n, q ;\nint buc[N] ;\nint fst[N] ;\nint lst[N] ;\nint vis[N] ;\nint base[N] ;\npint ord[N] ;\nvint pos[N] ;\n \n#define m_k make_pair\n \nbool comp(pint a, pint b){\n    return a.fr == b.fr ? a.sc < b.sc : a.fr > b.fr ;\n}\n \nint main(){\n    cin >> n >> q ; int x, y ;\n    for (int i = 1 ; i <= n ; ++ i)\n        base[i] = qr(), buc[base[i]] ++ ;\n    for (int i = 1 ; i <= n ; ++ i)\n        pos[base[i]].push_back(i) ;\n    for (int i = 1 ; i <= n ; ++ i)\n        if (!fst[base[i]]) fst[base[i]] = i ;\n    for (int i = n ; i >= 1 ; -- i)\n        if (!lst[base[i]]) lst[base[i]] = i ;\n    for (int i = 1 ; i <= 200000 ; ++ i)\n        if (buc[i]) ord[++ cnt] = m_k(buc[i], i) ;\n    sort(ord + 1, ord + cnt + 1, comp) ;\n    for (int i = 1 ; i <= cnt ; ++ i){\n        x = ord[i].fr ; y = ord[i].sc ;\n        if (vis[y]) continue ; vis[y] = 1 ;\n        if (x == lst[y] - fst[y] + 1) continue ;\n        int l = fst[y], r = lst[y] ;\n        for (int p = fst[y] ; p <= lst[y] ; ++ p){\n//            printf(\"%d \", p) ;\n            if (base[p] != y && !vis[base[p]]){\n                vis[base[p]] = 1 ;\n//                printf(\"%d \", base[p]) ;\n                for (auto k : pos[base[p]]){\n                    chkmin(l, k) ;\n                    chkmax(r, k) ;\n                    base[k] = y, ++ ans ;\n                }\n            }\n//            puts(\"\") ;\n        }\n//        printf(\"%d %d\\n\", l, r) ;\n        while (1){\n            int tl, tr ;\n//            printf(\"%d %d\\n\", l, r) ;\n            tl = fst[y], tr = lst[y] ;\n            if (l == fst[y] && r == lst[y]) break ;\n            fst[y] = l, lst[y] = r ;\n            for (int p = tl - 1 ; p >= l ; -- p){\n//                printf(\"(%d %d %d)\", p, base[p], vis[base[p]]) ;\n                if (base[p] != y && !vis[base[p]]){\n                    vis[base[p]] = 1 ;\n//                    printf(\"%d \", base[p]) ;\n                    for (auto k : pos[base[p]]){\n                        chkmin(l, k) ;\n                        chkmax(r, k) ;\n                        base[k] = y, ++ ans ;\n                    }\n                }\n//                puts(\"\") ;\n            }\n            for (int p = tr + 1 ; p <= r ; ++ p){\n                if (base[p] != y && !vis[base[p]]){\n                    vis[base[p]] = 1 ;\n                    for (auto k : pos[base[p]]){\n                        chkmin(l, k) ;\n                        chkmax(r, k) ;\n                        base[k] = y, ++ ans ;\n                    }\n                }\n            }\n        }\n//        debug(base, 1, n) ;\n//        printf(\"%d %d %d %d %d\\n\", x, y, fst[y], lst[y], ans) ;\n    }\n    printf(\"%d\\n\", ans) ;\n    return 0 ;\n}\n```\n\n\u628a\u6700\u540e\u4e00\u4e2a for \u91cc if \u7684 `y` \u5199\u6210\u4e86 `x` \u5bfc\u81f4 `Wa On 7` \u545c\u545c\u545c\u3002\n\n# ",
        "postTime": 1592314126,
        "uid": 28313,
        "name": "\u768e\u6708\u534a\u6d12\u82b1",
        "ccfLevel": 7,
        "title": "\u300c\u627e\u6027\u8d28\u300d [Codeforces 1209G1] Into Blocks (easy version)"
    }
]