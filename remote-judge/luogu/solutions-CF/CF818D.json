[
    {
        "content": "\u4e60\u60ef\u6027\u5730\u5199\u4e86\u7ffb\u8bd1\u5c31\u6765\u5199\u9898\u89e3\u3002\n\n\u770b\u5230\u7f51\u4e0a\u4e00\u5806\u7ebf\u6bb5\u6811\u7684\u9898\u89e3\uff0c\u6211\u89c9\u5f97\u5f88\u5947\u602a\uff0c\u8fd9\u9898\u8ddf\u7ebf\u6bb5\u6811\u4f3c\u4e4e\u6ca1\u4efb\u4f55\u5173\u7cfb\u3002\n\n\u663e\u7136\u6211\u4eec\u8bb0\u5f55\u5f53\u524d\u65f6\u523b$m$\u7684\u4e2a\u6570\u4e3a$now$\uff0c\u5982\u679c\u67d0\u4e2a$x$\u51fa\u73b0\u5728$m$\u7684\u540e\u9762\uff0c\u800c\u4e14$cnt_{x}$<$now$\uff0c\u8bf4\u660e$x$\u4e0d\u5408\u6cd5\uff0c\u90a3\u5c31\u6ca1\u5fc5\u8981\u7d2f\u52a0\u4e86\uff0c\u5982\u679c$x$\u5728\u8fd9\u4e4b\u524d\u90fd\u662f\u5408\u6cd5\u7684\uff0c\u6211\u4eec\u5c31\u7d2f\u52a0\u4e00\u6b21\u3002\n\n$\\mathcal\\textcolor{SpringGreen}{Code:}$\n\n```\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int N=1000005;\nint maxn,a[N],m,n,x,now; \nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\twhile(n--)\n\t{\n\t\tscanf(\"%d\",&x);\n\t\tmaxn=max(x,maxn);\n\t\tif(x==m) \n\t\t\t++now;\n\t\telse\n\t\t\tif(a[x]>=now) \n\t\t\t\t++a[x];\n\t}\n\tfor(int i=1;i<=maxn;++i)\n\t\tif(a[i]>=now&&i!=m)\n\t\t{\n\t\t\tprintf(\"%d\",i);\n\t\t\treturn 0;\n\t\t}\n\tprintf(\"-1\");\n\treturn 0;\n}\n\n```",
        "postTime": 1572348683,
        "uid": 87724,
        "name": "\u58a8\u821e\u7075\u7eaf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF818D \u3010Multicolored Cars\u3011"
    },
    {
        "content": "## \u9898\u610f\n\n\u5b9a\u4e49 $cnt_x(i)$ \u8868\u793a\u5230 $i$ \u65f6\u523b $x$ \u51fa\u73b0\u8fc7\u7684\u4e2a\u6570\u3002\n\n\u73b0\u5728\u7ed9\u51fa $n$ \u4e2a\u6570 $a_1,a_2,\\cdots,a_n$\uff0c$a_i$ \u8868\u793a\u65f6\u523b $i$ \u51fa\u73b0\u7684\u6570\u3002Alice \u9009\u62e9\u4e86\u4e00\u4e2a\u6570 $m$\uff0c\u8bf7\u5e2e\u52a9 Bob \u9009\u62e9\u4e00\u4e2a\u6570 $k$\uff0c\u4f7f\u5f97\u5bf9\u4efb\u610f\u65f6\u523b $i$\uff0c\u90fd\u6709 $cnt_k(i)\\ge cnt_m(i)$\u3002\u82e5\u4e0d\u5b58\u5728\u8fd9\u6837\u7684 $k$ \u8bf7\u8f93\u51fa -1\u3002\n\n## \u601d\u8def1\n\n\u4ee4 $count_x$ \u8868\u793a $x$ \u5b9e\u65f6\u51fa\u73b0\u6b21\u6570\u3002\n\n\u6839\u636e\u8f93\u5165\u505a\uff0c\u5982\u679c\u8f93\u5165\u7684\u662f $m$\uff0c\u90a3\u4e48\u76f4\u63a5\u628a $count_m$ \u52a0\u4e00\u3002\u5982\u679c\u8f93\u5165\u7684\u662f\u5176\u5b83\u7684\u6570 $i$\uff0c\u5148\u68c0\u67e5 $count_i\\ge count_m$\uff0c\u5982\u679c\u6210\u7acb\uff0c$count_i$ \u52a0\u4e00\uff0c\u5426\u5219 `bool` \u6570\u7ec4\u6807\u8bb0\u4e3a\u4e0d\u80fd\u53d6\u8fd9\u4e2a\u6570\u3002\n\n\u6ce8\u610f\u6700\u540e\u8f93\u51fa\u7b54\u6848\u65f6\uff0c\u8981\u5224\u65ad\u90a3\u4e2a\u6570 $i$ \u6700\u7ec8\u662f\u5426 $count_i>count_m$\uff0c\u56e0\u4e3a\u6709\u65f6\u5019\u8fd9\u4e2a\u6570\u6700\u540e\u6ca1\u6709\u51fa\u73b0\uff0c\u56e0\u6b64\u6ca1\u6709\u88ab\u68c0\u67e5\u5230\u3002\n\n## \u4ee3\u78011\n\n\u6839\u636e\u601d\u8def\uff0c\u4ee3\u7801\u5c31\u5f88\u7b80\u5355\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,cnt[1000005];\nbool b[1000005];\nint main(){\n\tios::sync_with_stdio(0);\n\tcin.tie(0);\n\tcin>>n>>m;\n\tfor(int i=1;i<=1e6;i++)b[i]=(i!=m);\n\t//\u6ce8\u610f\u521d\u59cb\u5316\uff0c\u4e0d\u80fd\u4e0eAlice\u9009\u7684\u6570\u76f8\u540c\uff01\n\tfor(int i=1;i<=n;i++){\n\t\tint x;\n\t\tcin>>x;\n\t\tif(x==m)cnt[m]++;\n\t\telse{\n\t\t\tif(cnt[x]>=cnt[m])cnt[x]++;\n\t\t\telse b[x]=0;\n\t\t}\n\t}\n\tfor(int i=1;i<=1e6;i++){\n\t\tif(b[i]&&cnt[i]>=cnt[m]){//\u6ce8\u610f\u5224\u65ad\u6700\u540e\u662f\u5426\u4ecd\u5927\u4e8e\u6216\u7b49\u4e8e\n\t\t\tcout<<i<<endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout<<-1<<endl;\n\treturn 0;\n}\n```\n\n\n## \u601d\u8def2\n\n\u548c\u4e0a\u4e00\u4e2a\u601d\u8def\u8f83\u4e3a\u7c7b\u4f3c\uff0c\u4f9d\u7136\u8fd8\u662f\u6a21\u62df\u3002\n\n\u4ee4 $count_x$ \u8868\u793a $x$ \u5b9e\u65f6\u51fa\u73b0\u6b21\u6570\u3002\u4e00\u5f00\u59cb\u7b54\u6848\u4e3a\u9664 $m$ \u4ee5\u5916\u7684\u4efb\u610f $x \\in [1,10^6]$\u3002\n\n\u6839\u636e\u8f93\u5165\u505a\uff0c\u5982\u679c\u8f93\u5165\u7684\u662f $m$\uff0c\u90a3\u4e48 $count_m$ \u52a0\u4e00\u3002\u7136\u540e\u68c0\u67e5\u6ca1\u6709\u88ab\u53bb\u9664\u7684\u6570\u4e2d\uff0c\u5bf9\u4e8e $count_i<count_m$\uff0c\u5c06\u5b83\u4eec\u5220\u53bb\u3002\u5982\u679c\u8f93\u5165\u7684\u662f\u5176\u5b83\u7684\u6570 $i$\uff0c\u90a3\u4e48\u76f4\u63a5\u628a $count_i$ \u52a0\u4e00\u3002\n\n\u53ef\u4ee5\u7528\u4e00\u4e2a `multimap` \u505a $count$ \u5230 $x$ \u7684\u4e00\u4e2a\u6620\u5c04\u3002\u6700\u540e\u76f4\u63a5\u627e\u672a\u88ab\u5220\u9664\u7684\u8f93\u51fa\u5373\u53ef\u3002\n\n\u8fd9\u91cc\u5c31\u4e0d\u653e\u4ee3\u7801\u4e86\uff0c\u8bf7\u8bfb\u8005\u81ea\u884c\u5c1d\u8bd5\u4e00\u4e0b\u3002",
        "postTime": 1664512685,
        "uid": 305424,
        "name": "yuheng_wang080904",
        "ccfLevel": 0,
        "title": "CF818D"
    },
    {
        "content": "## \u89e3\u9898\u601d\u8def\uff1a\n\n\u6709\u4e2a\u5947\u602a\u7684\u505a\u6cd5\u3002\n\n\u4e00\u5f00\u59cb\u5c1d\u8bd5\u6b63\u5411\u60f3\uff0c\u7ed9\u5b9a\u9009\u7684\u6570\u540e\u6709\u591a\u5c11\u4e2a\u4f1a\u88ab\u6dd8\u6c70\uff0c\u5168\u90e8\u6dd8\u6c70\u4e4b\u540e\u54ea\u4e9b\u662f\u53ef\u884c\u7684\u3002\n\n\u60f3\u4e86\u4e00\u4f1a\u4e0d\u592a\u884c\uff0c\u53d1\u73b0\u503c\u57df\u6bd4\u8f83\u5c0f\uff08\u5176\u5b9e\u503c\u57df\u6bd4\u8f83\u5927\u4e5f\u80fd\u79bb\u6563\u5316\uff09\uff0c\u4e8e\u662f\u6211\u4eec\u53cd\u5411\u8003\u8651\uff0c\u5bf9\u4e8e $i$ \uff0c\u662f\u5426\u53ef\u884c\u3002\n\n\u5982\u4f55\u5224\u65ad\u53ef\u884c\u5462\uff1f\u5047\u8bbe\u5f53\u524d\u9009\u5b9a\u7684\u662f $i$\uff0c\u5982\u679c\u5728\u7b2c $j$ \u4e2a\u4f4d\u7f6e\u51fa\u73b0\u4e86 $i$\uff0c\u5219\u79bb $j$ \u6700\u8fd1\u7684\uff0c\u4f4d\u7f6e\u5927\u4e8e $j$\uff0c\u4e14\u503c\u662f $m$ \u7684\u5c31\u65e0\u6548\u4e86\u3002\n\n\u56e0\u4e3a\u8fd9\u9898\u8981\u6c42\u4efb\u610f\u4f4d\u7f6e $cnt_i$ \u90fd\u5927\u4e8e $cnt_m$\uff0c\u6240\u4ee5\u6bcf\u51fa\u73b0\u4e00\u6b21 $i$\uff0c\u5c31\u80fd\u62b5\u6d88\u4e00\u6b21 $m$\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u5c0f\u4f18\u5316\uff0c\u5982\u679c\u5230\u6700\u540e $cnt_i$ \u8fd8\u662f\u5c0f\u4e8e $cnt_m$\uff0c\u90a3\u4e48\u81f3\u5c11\u5728 $n$ \u8fd9\u4e2a\u4f4d\u7f6e\u662f\u4e0d\u6ee1\u8db3\u6761\u4ef6\u7684\uff0c\u4e8e\u662f\u76f4\u63a5\u8df3\u8fc7\u5c31\u597d\u4e86\u3002\n\n## AC\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<vector>\n#include<set>\nusing namespace std;\nint n,m,val[1000005],del[1000005],cnt;\nvector<int> e[1000005];\nset<int> beg;\nint main()\n{\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>val[i];\n\t\tif(val[i]==m)\n\t\t\tbeg.insert(i);//\u6211\u4eec\u7528set\u5b58\u4e0b\u7ed9\u5b9a\u989c\u8272\u7684\u4f4d\u7f6e\u3002\n\t\telse\n\t\t\te[val[i]].push_back(i);//\u7528\u4e00\u4e2avector\u5b58\u4e0b\u6240\u6709\u503c\u4e3ai\u7684\u4f4d\u7f6e\u3002\n\t}\n\tfor(int i=1;i<=1e6;i++)\n\t{\n\t\tif(i==m || e[i].size()<beg.size())\tcontinue;//\u5c0f\u4f18\u5316\n\t\tcnt=0;\n\t\tfor(int j=0;j<e[i].size();j++)\n\t\t{\n\t\t\tset<int>::iterator it=beg.lower_bound(e[i][j]);\n\t\t\tif(it!=beg.end())\n\t\t\t\tbeg.erase(it),del[++cnt]=(*it);\n\t\t}\n\t\tif(beg.empty())//\u5220\u9664\u7a7a\u4e86\u4ee3\u8868\u5f53\u524d\u679a\u4e3e\u7684 i \u53ef\u884c\u3002\n\t\t{\n\t\t\tcout<<i;\n\t\t\treturn 0;\n\t\t}\n\t\tfor(int j=1;j<=cnt;j++)//set\u590d\u5236\u6709\u70b9\u6162\uff0c\u53ea\u80fd\u5220\u9664\u51e0\u4e2a\u653e\u8fdb\u53bb\u51e0\u4e2a\u3002\n\t\t\tbeg.insert(del[j]);\n\t}\n\tcout<<-1;\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1655081029,
        "uid": 355640,
        "name": "_HMZ_",
        "ccfLevel": 7,
        "title": "CF818D Multicolored Cars \u9898\u89e3"
    }
]