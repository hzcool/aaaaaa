[
    {
        "content": "~~\u5237\u6dfc\u9898~~\n\n\u8fd9\u9898\u83ab\u961f\u4e0d\u591f\u4f18\u79c0\uff0c\u9700\u8981\u79bb\u7ebf\u8fd8\u7a0d\u5fae\u96be\u5199\u70b9\u3002\n\n\u6ce8\u610f\u5230\u4e00\u4e2a\u6570 x \u53ef\u80fd\u5bf9\u4e00\u4e2a\u8be2\u95ee\u4ea7\u751f\u8d21\u732e\u7684\u5fc5\u8981\u6761\u4ef6\u7684\u662f\u5176\u51fa\u73b0\u8fc7\u81f3\u5c11 x \u6b21\uff0c\u8fd9\u6837\u7684\u6570\u4e0d\u8d85\u8fc7 $O(\\sqrt{n})$ \u4e2a\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8fd9\u6837\u7684\u6570\u8bb0\u51fa\u73b0\u6b21\u6570\u7684\u524d\u7f00\u548c\uff0c\u5bf9\u4e8e\u8be2\u95ee\u66b4\u529b\u679a\u4e3e\u6240\u6709\u8fd9\u6837\u7684\u6570\u5e76\u901a\u8fc7\u524d\u7f00\u548c\u67e5\u8be2\u8be5\u6570\u7684\u51fa\u73b0\u6b21\u6570\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6 $O((n+q)\\sqrt{n})$ \uff0c\u4ee3\u7801\u5341\u5206\u7b80\u5355\uff1a\n\n```cpp\n#include <cstdio>\n\nstruct { inline operator int () { int x; return scanf(\"%d\", &x), x; } } read;\n\nconst int maxn = 100005, maxb = 500;\nint a[maxn], tot[maxn];\nint t[maxb][maxn], val[maxb];\n\nint main () {\n\tint n = read, q = read;\n\tfor (int i = 1; i <= n; i ++)\n\t\tif ((a[i] = read) <= n)\n\t\t\t++ tot[a[i]];\n\tint p = 0;\n\tfor (int x = 1; x <= n; x ++)\n\t\tif (tot[x] >= x) {\n\t\t\tval[++ p] = x;\n\t\t\tfor (int i = 1; i <= n; i ++)\n\t\t\t\tt[p][i] = t[p][i - 1] + (a[i] == x);\n\t\t}\n\twhile (q --) {\n\t\tint l = read, r = read, ans = 0;\n\t\tfor (int i = 1; i <= p; i ++)\n\t\t\tif (t[i][r] - t[i][l - 1] == val[i])\n\t\t\t\t++ ans;\n\t\tprintf(\"%d\\n\", ans);\n\t}\n}\n```",
        "postTime": 1588926343,
        "uid": 52232,
        "name": "Kewth",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF220B \u3010Little Elephant and Array\u3011"
    },
    {
        "content": "\u7b2c\u4e00\u6b21\u624b\u5207\u7684\u7d2b\u9898\n\n\u89c2\u5bdf\u9898\u76ee\uff0c\u503c\u57df\u662f$1e9$,\u53ef\u662f$n$\u53ea\u6709$1e6$\n\n\u8bf4\u660e\u5927\u4e8en\u7684\u6570\u5168\u90e8\u5bf9\u7b54\u6848\u6ca1\u6709\u8d21\u732e\n\n\u5047\u82e51\u67091\u4e2a\uff0c2\u6709\u4e24\u4e2a\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u7ea6500\u4e2a\u624d\u5230$1e5$\u4e0a\u9650\n\n\u56fa\u8bb0\u5f55\u540c\u4e00\u6570\u5b57\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u5bf9\u4e8el\uff0cr\u4e8c\u5206\n\n\u590d\u6742\u5ea6$O(500 nlogn)$\n\n```cpp\n#include<bits/stdc++.h>\n#define dbg(x) cout<<#x \"=\" <<x<<endl;\nusing namespace std;\nconst int maxn=1e6+5;\ninline int read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-f;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\n#define __ read()//\u5feb\u8bfb\nvector<int> g[maxn];//\u7528\u4e8e\u5b58\u50a8\u67d0\u4e00\u6570\u5b57\u7684\u51fa\u73b0\u4f4d\u7f6e\nvector<int> pending;//\u6709\u53ef\u80fd\u7b26\u5408\u6761\u4ef6\u7684\u6570\u5b57\nint q,n,m,bloc[maxn];\nint main()\n{\n\tn=__,q=__;\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tbloc[i]=__;\n\t\tif(bloc[i]<=n)\n\t\t\tg[bloc[i]].push_back(i);\n\t}\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tif(g[i].size()>=i)\n\t\t\tpending.push_back(i);//\u5982\u679c\u7b26\u5408\u6761\u4ef6\n\t}\n\twhile(q--)\n\t{\n\t\tint l=__,r=__,ans=0;\n\t\tfor(auto block:pending)\n\t\t{\n\t\t\tint cur=block;\n\t\t\tint ll=lower_bound(g[cur].begin(),g[cur].end(),l)-g[cur].begin();//\u4e8c\u5206\u5de6\u8fb9\u754c\n\t\t\tint rr=upper_bound(g[cur].begin(),g[cur].end(),r)-g[cur].begin();//\u4e8c\u5206\u53f3\u8fb9\u754c\n\t\t\tif(rr-ll==cur)++ans;\n\t\t} \n\t\tcout<<ans<<endl;\n\t}\n}\n```\n",
        "postTime": 1606981113,
        "uid": 88686,
        "name": "Shir\u03bf",
        "ccfLevel": 5,
        "title": "\u9898\u89e3forCF220B"
    },
    {
        "content": "\u4f3c\u4e4e\u83ab\u961f\u7684\u601d\u8def\u66f4\u597d\u60f3\u4e00\u4e9b\uff1f\n\n---\n\n### $Solution:$\n\n\u9996\u5148\uff0c$a_i> n$ \u7684 $a_i$ \u80af\u5b9a\u6ca1\u6709\u8d21\u732e\uff0c\u56e0\u4e3a\u4e00\u5171\u5c31\u53ea\u6709 $n$ \u4e2a\u6570\u3002\u6240\u4ee5 $a_i > n$ \u7684\u90fd\u53ef\u4ee5\u76f4\u63a5\u820d\u6389\uff0c\u8fd9\u6837\u5b50\u503c\u57df\u5c31\u4e5f\u662f $10^5$ \u4e86\uff0c\u65e0\u9700\u79bb\u6563\u5316\u3002\n\n\u7531\u4e8e\u5728\u6b64\u9898\u662f\u8981\u6070\u597d\u4e3a $a_i$ \u6b21\uff0c\u6240\u4ee5 `Insert` \u548c `Delete` \u4e5f\u8981\u6ce8\u610f\uff0c\u4e00\u65e6\u4e0d\u662f $a_i$ \u5c31\u8981\u628a\u8d21\u732e $-1$\u3002\n\n\u6bd4\u5982\u8bf4\uff0c\u5728 `Insert` \u7684\u65f6\u5019\uff0c\u5f53 `cnt[a[x]] == a[x] + 1` \u65f6\uff0c\u8d21\u732e\u8981\u51cf\u56de\u6765\u3002`Delete` \u4e5f\u540c\u7406\u3002\n\n\u540e\u9762\u5c31\u662f\u83ab\u961f\u57fa\u7840\u64cd\u4f5c\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(m\\log m+n\\sqrt{n})$\u3002\n\n---\n\n### $Code:$\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <queue>\n#include <vector>\n#include <cmath>\nusing namespace std;\n#define ll long long\n#define fi first\n#define se second\n#define x1 x_csyakioi_1\n#define x2 x_csyakioi_2\n#define y1 y_csyakioi_1\n#define y2 y_csyakioi_2\n#define y0 y_csyakioi_0\n#define dingyi int mid = l + r >> 1, ls = p << 1, rs = p << 1 | 1;\ninline int read(){\n\tint x = 0, f = 1; char ch = getchar();\n\twhile(ch < '0' || ch > '9'){ if(ch == '-') f = -1; ch = getchar(); }\n\twhile(ch >= '0' && ch <= '9'){ x = x * 10 + (ch ^ 48); ch = getchar(); }\n\treturn x * f;\n}\nconst int N = 100010;\nint n, m, k, a[N], pos[N], cnt[N], ans[N], res;\nstruct ask{\n\tint l, r, idx;\n\tbool operator < (const ask&rhs)const{\n\t\treturn pos[l] ^ pos[rhs.l] ? l < rhs.l : pos[l] & 1 ? r < rhs.r : r > rhs.r;\n\t}\n}q[N];\ninline void Insert(int x){\n\tif(a[x] > n) return;\n\t++cnt[a[x]];\n\tif(cnt[a[x]] == a[x]) ++res;\n\tif(cnt[a[x]] == a[x] + 1) --res;\n}\ninline void Delete(int x){\n\tif(a[x] > n) return;\n\tif(cnt[a[x]] == a[x] + 1) ++res;\n\tif(cnt[a[x]] == a[x]) --res;\n\t--cnt[a[x]];\n}\nint main(){\n\tn = read(); m = read(); k = sqrt(n);\n\tfor(int i = 1; i <= n; ++i) a[i] = read();\n\tfor(int i = 1; i <= n; ++i) pos[i] = (i - 1) / k + 1;\n\tfor(int i = 1; i <= m; ++i) q[i].l = read(), q[i].r = read(), q[i].idx = i;\n\tsort(q + 1, q + m + 1); int L = 1, R = 0;\n\tfor(int i = 1; i <= m; ++i){\n\t\tint x = q[i].l, y = q[i].r, idx = q[i].idx;\n\t\twhile(R < y) Insert(++R);\n\t\twhile(L > x) Insert(--L);\n\t\twhile(R > y) Delete(R--);\n\t\twhile(L < x) Delete(L++);\n\t\tans[idx] = res;\n\t}\n\tfor(int i = 1; i <= m; ++i) printf(\"%d\\n\", ans[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1607046038,
        "uid": 147999,
        "name": "Warriors_Cat",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF220B \u3010Little Elephant and Array\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u79cd\u4e0d\u4e00\u6837\u7684 $\\mathcal{O(nlog_n)}$ \u89e3\u6cd5\n\n# \u9898\u610f\n\n\u79bb\u7ebf\u8be2\u95ee\u5728\u533a\u95f4 $[ l,r ]$ \u4e2d\u6709\u591a\u5c11\u4e2a\u6570$x$\uff0c\u5176\u51fa\u73b0\u6b21\u6570\u4e5f\u4e3a$x$\n\n# Sol\n\n\n## \u601d\u8def\n\n\u4e00\u770b\u5230\u8fd9\u9898\u9a6c\u4e0a\u4f1a\u8054\u60f3\u5230 [P1972 HH\u7684\u9879\u94fe](https://www.luogu.com.cn/problem/P1972)\n\n\u5efa\u8bae\u5148\u505a P1972\uff0c\u672c\u9898\u53ef\u4ee5\u501f\u9274 P1972 \u7684\u60f3\u6cd5\u5b8c\u6210\n\n\u5148\u628a\u8be2\u95ee\u79bb\u7ebf\u4e0b\u6765\uff0c\n\n\u6211\u4eec\u8003\u8651\u533a\u95f4\u5185\u4e00\u4e2a\u6570 $x$ \u662f\u5426\u80fd\u9020\u6210\u8d21\u732e\uff0c\u6211\u4eec\u5148\u770b\u533a\u95f4\u5185\u6700\u53f3\u7684\u90a3\u4e2a $x$\uff0c\u5982\u679c\u8fd9\u4e2a $x$ \u7684\u7b2c\u5f80\u5de6 $x - 1$ \u4e2a $x$ \u5728\u533a\u95f4\u5185\uff0c\u4e14\u8fd9\u4e2a $x$ \u7684\u7b2c\u5f80\u5de6 $x$ \u4e2a $x$ \u4e0d\u5728\u533a\u95f4\u5185\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7ed9\u7b54\u6848\u52a0 $1$\u3002\n\n\u6240\u4ee5\u6211\u4eec\u628a\u533a\u95f4\u6309\u5de6\u7aef\u70b9\u6392\u5e8f\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u6216\u8005\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u4e0b\u3002\n\n\u5177\u4f53\u7ef4\u62a4\u4ec0\u4e48\u5462\uff1f\n\n\u4e0b\u9762\u53ef\u80fd\u6709\u4e00\u70b9\u70b9\u96be\u7406\u89e3\uff0c\u53ef\u4ee5\u62ff\u5c0f\u6570\u636e\u6a21\u62df\u4e00\u4e0b\u4e0b\u9762\u7684\u8fc7\u7a0b\u597d\u597d\u60f3\u60f3\u3002\n\n\u8003\u8651\u5f53\u524d\u7684\u6570\u4e3a $x$\uff0c\n\n- \u82e5 $x$ \u5f80\u5de6\u7b2c $ x - 1$ \u4e2a\u6570\u5b58\u5728\uff0c\u4e14\u5b83\u7684\u4f4d\u7f6e\u4e3a $p_1$\uff0c\u90a3\u6211\u4eec\u5c31\u7ed9\u6570\u636e\u7ed3\u6784\u4e0a\u4f4d\u7f6e $p_1$ \u7684\u8d21\u732e\u7531 $ 0 $ \u6539\u4e3a  $ 1$\uff1b\n\n- \u82e5 $x$ \u5f80\u5de6\u7b2c $x$ \u4e2a\u6570\u5b58\u5728\uff0c\u4e14\u5b83\u7684\u4f4d\u7f6e\u4e3a $p_2$\uff0c\u6211\u4eec\u5728\u5904\u7406\u4e0a\u4e00\u4e2a $x$ \u65f6\u5c31\u628a\u5b83\u7684\u8d21\u732e\u6539\u4e3a $1$ \u4e86\uff0c\u4f46\u6b64\u65f6\u5b83\u5df2\u7ecf\u4e0d\u7b26\u5408\u6761\u4ef6\uff08\u56e0\u4e3a\u7b97\u4e0a\u5b83\u7684\u533a\u95f4\u5c31\u4f1a\u5305\u542b $x + 1$ \u4e2a $x$ \u4e86\uff09\uff0c\u6240\u4ee5\u628a\u5b83\u7684\u8d21\u732e\u7531 $1$ \u6539\u4e3a\u4e3a $-1$\uff0c\u4e3a\u4ec0\u4e48\u662f $-1$ \u800c\u4e0d\u662f $ 0 $\u5462\uff0c\u56e0\u4e3a\u8fd9\u91cc\u5176\u5b9e\u662f\u4e00\u4e2a\u5dee\u5206\uff0c\u4ed4\u7ec6\u6a21\u62df\u4e00\u4e0b\u5c31\u80fd\u7406\u89e3\n- \u82e5 $x$ \u5f80\u5de6\u7b2c $x + 1$ \u4e2a\u6570\u5b58\u5728\uff0c\u4e14\u5b83\u7684\u4f4d\u7f6e\u4e3a $p_3$\uff0c\u4f60\u4f1a\u53d1\u73b0\u6211\u4eec\u5728\u4e0a\u4e00\u4e2a $x$ \u5904\u628a\u5b83\u6539\u6210\u4e86 $-1$\uff0c\u4f46\u662f\u6b64\u65f6\u6211\u4eec\u5df2\u7ecf\u628a $p_2$ \u4f4d\u7f6e\u6539\u6210\u4e86 $-1$\uff0c\u6240\u4ee5\u5b83\u7684\u5dee\u5206\u8d21\u732e\u5df2\u7ecf\u4e0d\u662f $-1$ \u4e86\uff0c\u800c\u662f $0$ \uff0c\u6240\u4ee5\u628a $p_3$ \u4f4d\u7f6e\u7531 $-1$ \u6539\u6210 $0$\u3002\n\n## \u7ec6\u8282\n\n1. $a_i$ \u6700\u5927\u6709 $1e9$\uff0c\u9700\u79bb\u6563\u5316\u4e00\u4e0b\uff0c\n2. \u6bcf\u4e2a $x$ \u7684\u4f4d\u7f6e\u6211\u4eec\u53ef\u4ee5\u7528 vector \u6765\u8bb0\u5f55\u3002\n\n## \u4ee3\u7801\n\n~~\u6211\u4e60\u60ef\u7ebf\u6bb5\u6811\u6240\u4ee5\u8fd9\u91cc\u63d0\u4f9b\u7684\u662f\u7ebf\u6bb5\u6811\u7684\u4ee3\u7801~~\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n\nconst int N = 1e5 + 30;\n\nstd::vector < int > v[N];\n\n\nint n, m;\nint a[N], ans[N], pos[N], s[N], b[N];\n\nstruct NODE\n{\n    int l, r, id;\n}q[N];\nstruct SEGMENTTREE\n{\n    int l, r, s;\n}t[N << 2];\n\nint read()\n{\n    int s = 0; char ch = getchar();\n    while (ch < '0' || ch > '9') ch = getchar();\n    while (ch >= '0' && ch <= '9') s = (s << 3) + (s << 1) + ch - '0', ch = getchar();\n    return s;\n}\n\nint cmp(NODE x, NODE y)\n{\n    return x.r < y.r;\n}\n\nvoid build(int p, int l, int r)\n{\n    t[p].l = l, t[p].r = r;\n    if (t[p].l == t[p].r) return ;\n    int mid = l + r >> 1;\n    build(p << 1, l, mid), build(p << 1 | 1, mid + 1, r);\n}\n\nvoid change(int p, int pos, int val)\n{\n    if (t[p].l == t[p].r) {t[p].s = val; return ; }\n    int mid = t[p].l + t[p].r >> 1;\n    if (pos <= mid) change(p << 1, pos, val);\n    else change(p << 1 | 1, pos, val);\n    t[p].s = t[p << 1].s + t[p << 1 | 1].s;\n}\n\nint ask(int p, int l, int r)\n{\n    if (t[p].l >= l && t[p].r <= r) return t[p].s;\n    int mid = t[p].l + t[p].r >> 1, tot = 0;\n    if (l <= mid) tot += ask(p << 1, l, r);\n    if (mid < r) tot += ask(p << 1 | 1, l, r);\n    return tot;\n}\n\nint main()\n{\n    n = read(), m = read();\n    for (int i = 1; i <= n; ++ i) s[i] = read(), b[i] = s[i];\n    std::sort(s + 1, s + n + 1); int len = std::unique(s + 1, s + n + 1) - s - 1;\n    for (int i = 1; i <= n; ++ i) a[i] = std::lower_bound(s + 1, s + len + 1, b[i]) - s;\n    for (int i = 1; i <= n; ++ i) v[a[i]].push_back(i), pos[i] = v[a[i]].size() - 1;\n    for (int i = 1; i <= m; ++ i) q[i].l = read(), q[i].r = read(), q[i].id = i;\n    std::sort(q + 1, q + m + 1, cmp); build(1, 1, n);\n    for (int i = 1; i <= m; ++ i)\n    {\n        int last = q[i - 1].r + 1;\n        for (int j = last; j <= q[i].r; ++ j)\n        {\n            if (pos[j] - b[j] + 1 >= 0)\n            {\n                if (pos[j] - b[j] >= 0) change(1, v[a[j]][pos[j] - b[j]], -1);\n                if (pos[j] - b[j] - 1 >= 0) change(1, v[a[j]][pos[j] - b[j] - 1], 0);\n                change(1, v[a[j]][pos[j] - b[j] + 1], 1);\n            }\n        }\n        ans[q[i].id] = ask(1, q[i].l, q[i].r);\n    }\n    for (int i = 1; i <= m; ++ i) printf (\"%d\\n\", ans[i]);\n    return 0;\n}\n```\n\n",
        "postTime": 1606986133,
        "uid": 69495,
        "name": "marTixx",
        "ccfLevel": 0,
        "title": "CF220B Little Elephant and Array"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6709\u4e00\u4e2a\u590d\u6742\u5ea6\u4e3a$O(nlogn)$\u7684\u505a\u6cd5\uff0c\u5c31\u662f\u79bb\u7ebf+\u7ebf\u6bb5\u6811\u3002\n\n\u8fd9\u4e2a\u505a\u6cd5\uff0c\u9700\u8981\u628a\u6240\u6709\u7684\u8be2\u95ee\u4ee5\u53f3\u7aef\u70b9\u5199\u4e00\u4e2a\u94fe\u8868\u5b58\u50a8\u8d77\u6765\uff0c\u7136\u540e\u8003\u8651\u6bcf\u4e2a\u53f3\u7aef\u70b9\u6765\u56de\u7b54\u8be2\u95ee\u3002\n\n\u6ce8\u610f\u5230\u5bf9\u4e8e\u4e00\u4e2a\u53f3\u7aef\u70b9\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u6570$x$\u4f7f\u5f97\uff0c\u51fa\u73b0\u6b21\u6570\u4e5f\u4e3a$x$\u7684\u5de6\u7aef\u70b9\u53ea\u4f1a\u5728\u4e00\u4e2a\u533a\u95f4\u91cc\uff0c\u5e76\u4e14\u8fd9\u4e2a\u533a\u95f4\u662f\u4ece\u4e00\u4e2a\u503c\u4e3a$x$\u70b9\u7684\u4e0b\u4e00\u4e2a\u70b9\uff0c\u5230\u4e0b\u4e00\u4e2a\u503c\u4e3a$x$\u7684\u70b9\u3002\n\n\u8fd9\u6837\u53ef\u4ee5\u5148\u6c42\u51fa\u4e00\u4e2a\u6570\u7ec4$Next[i]$\u8868\u793a\u8ddf$s[i]$\u76f8\u540c\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\u4e0b\u6807\uff0c\u7136\u540e\u4ee4\u6570\u7ec4$Rid[i]$\u8868\u793a\u8fd9\u6bb5\u533a\u95f4\u7684\u53f3\u7aef\u70b9\uff0c$Lid[i]+1$\u8868\u793a\u8fd9\u6bb5\u533a\u95f4\u5de6\u7aef\u70b9\uff0c\u8fd9\u6837\u5728\u8fd9\u4e24\u4e2a\u6570\u7ec4\u66f4\u65b0\u7684\u65f6\u5019$Lid[i]$\u5c31\u7b49\u4e8e\u4e0a\u4e00\u4e2a$Rid[i]$\uff0c\u7279\u522b\u7684\uff0c\u521d\u59cb\u65f6\u5019\u8fd9\u4e2a$Rid[i]$\u8868\u793a\u7b2c\u4e00\u4e2a\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u3002\n\n\u8fd9\u6837\u5c31\u4ece\u5de6\u5230\u53f3\u626b\u63cf\u53f3\u7aef\u70b9\uff0c\u5f53\u626b\u63cf\u5230$i$\u7684\u65f6\u5019\uff0c\u82e5\u4ece$1$\u5230$i$\u4e2d$s[i]$\u51fa\u73b0\u6b21\u6570\u7b49\u4e8e$s[i]$\uff0c\u90a3\u4e48\u5c31\u8df3\u5230$s[i]$\u7684\u7b2c\u4e00\u4e2a\u533a\u95f4\uff0c\u82e5\u51fa\u73b0\u6b21\u6570\u5927\u4e8e$s[i]$\uff0c\u90a3\u4e2a\u5c31\u8df3\u5230\u4e0b\u4e00\u4e2a\u533a\u95f4\uff0c\u8fd9\u6837\u5bf9\u4e8e\u5de6\u7aef\u70b9\uff0c\u5c31\u662f\u67e5\u8be2\u8fd9\u4e2a\u5de6\u7aef\u70b9\u88ab\u591a\u5c11\u4e2a\u533a\u95f4\u5305\u542b\uff0c\u8fd9\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u3002\n\n\u7279\u522b\u7684\uff0c\u5982\u679c\u4e00\u4e2a\u5143\u7d20$x$\u5927\u4e8e$n$\uff0c\u90a3\u4e48\u4e00\u5171$n$\u4e2a\u6570\uff0c\u4e00\u5b9a\u4e0d\u4f1a\u51fa\u73b0$x$\u6b21\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u76f4\u63a5\u5ffd\u7565\u6389\u4ed6\uff0c\u8fd9\u91cc\u53ef\u4ee5\u5c06\u5b83\u6539\u4e3a$n+1$\uff0c\u8fd9\u6837\u65e2\u4e0d\u4f1a\u5bf9\u7edf\u8ba1\u8fc7\u7a0b\u9020\u6210\u5f71\u54cd\uff0c\u4e5f\u4e0d\u4f1a\u6570\u7ec4\u8d8a\u754c\u3002\n\ncode:\n\n```c\n#include<stdio.h>\n#include<string.h>\nstruct node{\n\tlong long s,Flag;\n}a[4000010];//\u7ebf\u6bb5\u6811 \nstruct node2{\n\tint y,Next,s;\n}b[2000010];int Lenb,Sta[1000010];//\u94fe\u8868 \nint Sl[1000010];//\u5b58\u50a8\u6570\u5217 \nint Js[1000010];//i\u7684\u51fa\u73b0\u6b21\u6570 \nlong long Anss[1000010];//\u8be2\u95ee\u7684\u7b54\u6848 \nint n,m;\nint Last[1000010];\nint Next[1000010];//\u4e0b\u4e00\u4e2a\u503c\u4e3as[i]\u7684\u4e0b\u6807 \nint Rid[1000010],Lid[1000010];//\u533a\u95f4\u5de6\u53f3\u7aef\u70b9 \nint Read(){//\u5feb\u8bfb \n\tint res=0,zf=1;char ch;\n\twhile((ch=getchar())<48||ch>57)if(ch=='-')zf=!zf;res=(ch^48);\n\twhile((ch=getchar())>=48&&ch<=57)res=(res<<3)+(res<<1)+(ch^48);\n\treturn zf?res:(-res);\n}\nint Merge(int x,int y,int s){//\u94fe\u8868\u63d2\u5165\u5143\u7d20 \n\tb[++Lenb].y=y;\n\tb[Lenb].Next=Sta[x];\n\tSta[x]=Lenb;\n\tb[Lenb].s=s;\n\treturn 0;\n}\nint Add(int k,int l,int r,int x,int y,long long s){//\u7ebf\u6bb5\u6811\u533a\u95f4\u52a0s\n\tif(x>y||x>r||y<l)return 0;\n\tif(x<=l&&y>=r){\n\t\ta[k].s+=(r-l+1)*s;\n\t\ta[k].Flag+=s;\n\t\treturn 0;\n\t}\n\tint Mid=(l+r)>>1;\n\tif(a[k].Flag){\n\t\tAdd(k<<1,l,Mid,l,Mid,a[k].Flag);\n\t\tAdd(k<<1|1,Mid+1,r,Mid+1,r,a[k].Flag);\n\t\ta[k].Flag=0;\n\t}\n\tAdd(k<<1,l,Mid,x,y,s);\n\tAdd(k<<1|1,Mid+1,r,x,y,s);\n\ta[k].s=a[k<<1].s+a[k<<1|1].s;\n\treturn 0;\n}\nlong long Find(int k,int l,int r,int x,int y){//\u7ebf\u6bb5\u6811\u67e5\u8be2\u533a\u95f4\u548c \n\tif(x>y||x>r||y<l)return 0ll;\n\tif(x<=l&&y>=r)return a[k].s;\n\tint Mid=(l+r)>>1;\n\tif(a[k].Flag){\n\t\tAdd(k<<1,l,Mid,l,Mid,a[k].Flag);\n\t\tAdd(k<<1|1,Mid+1,r,Mid+1,r,a[k].Flag);\n\t\ta[k].Flag=0;\n\t\ta[k].s=a[k<<1].s+a[k<<1|1].s;\n\t}\n\treturn Find(k<<1,l,Mid,x,y)+Find(k<<1|1,Mid+1,r,x,y);\n}\n\nint main(){\n\tn=Read();m=Read();\n\tfor(int i=1;i<=n;i++){\n\t\tSl[i]=Read();\n\t\tif(Sl[i]>n)Sl[i]=n+1;\n\t}\n\tfor(int i=n;i>=1;i--){//\u9884\u5904\u7406Next,\u548c\u7b2c\u4e00\u4e2a\u533a\u95f4\u7684Rid \n\t\tNext[i]=Last[Sl[i]];\n\t\tLast[Sl[i]]=i;\n\t\tRid[Sl[i]]=i;\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tint x=Read();int y=Read();\n\t\tMerge(y,x,i);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tJs[Sl[i]]++;\n\t\tif(Js[Sl[i]]==Sl[i]){//\u5c06\u533a\u95f4\u52a0\u5165 \n\t\t\tAdd(1,1,n,1,Rid[Sl[i]],1);\n\t\t}else if(Js[Sl[i]]>Sl[i]){//\u533a\u95f4\u8df3\u5230\u4e0b\u4e00\u4e2a \n\t\t\tAdd(1,1,n,Lid[Sl[i]]+1,Rid[Sl[i]],-1);//\u5148\u5220\u9664\u73b0\u6709\u533a\u95f4 \n\t\t\tLid[Sl[i]]=Rid[Sl[i]];\n\t\t\tRid[Sl[i]]=Next[Rid[Sl[i]]];\n\t\t\tAdd(1,1,n,Lid[Sl[i]]+1,Rid[Sl[i]],1);//\u518d\u52a0\u5165\u65b0\u533a\u95f4 \n\t\t}\n\t\tfor(int j=Sta[i];j;j=b[j].Next){\n\t\t\tAnss[b[j].s]=Find(1,1,n,b[j].y,b[j].y);//\u8be2\u95ee \n\t\t}\n\t}\n\tfor(int i=1;i<=m;i++)printf(\"%lld\\n\",Anss[i]);//\u8f93\u51fa\u7ed3\u679c \n\treturn 0;\n}\n```\n\n\n\n\n",
        "postTime": 1606983449,
        "uid": 260748,
        "name": "suyue1098765432",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF220B \u3010Little Elephant and Array\u3011"
    },
    {
        "content": "## \u83ab\u961f\n\n\u83ab\u961f\u7684\u677f\u5b50\u9898\u3002\n\n\u4f46\u662f $ 1 <= ai <= 10^9 $\uff0c\u6240\u4ee5\u5c06 $ai$ \u4f5c\u4e3a\u4e0b\u6807\u663e\u7136\u662f\u4e0d\u884c\u7684\uff0c\u5e38\u89c4\u529e\u6cd5\u5c31\u662f\u79bb\u6563\u5316\uff0c\u4f46\u662f\u672c\u4eba~~\u61d2\u5f97\u5199~~\u79bb\u6563\u5316\u2026\u2026\n\n\u7136\u800c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u672c\u9898\u7edf\u8ba1\u7684\u4fe1\u606f\u4e3a\u6709\u591a\u5c11\u4e2a\u6570 $x$\uff0c\u5176\u51fa\u73b0\u6b21\u6570\u4e5f\u4e3a $x$\uff0c\u5e76\u4e14$ 1 <= n <= 10^5 $\uff0c\u663e\u7136\u4e00\u4e2a\u6570\u6700\u591a\u51fa\u73b0 $x$ \u6b21\uff0c\u6240\u4ee5 $if(ai > n) $ $return;$ \u5c31\u884c\u4e86\u3002\n\n\u5176\u4ed6\u8be6\u89c1\u4ee3\u7801\u6ce8\u91ca\u2014\u2014\n\n## \u4ee3\u7801\u5982\u4e0b\uff1a\n\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int N = 1e6 + 5;\n\n#define ms(a) memset(a, 0, sizeof(a))\n\ntemplate<class T> void read(T &x) {\n\tx = 0; ll f = 0; char ch = getchar();\n\twhile (ch < '0' || ch > '9') {f |= (ch == '-'); ch = getchar();}\n\twhile (ch >= '0' && ch <= '9') {x = (x << 1) + (x << 3) + (ch ^ 48); ch = getchar();}\n\tx = f ? -x : x;\n\treturn;\n}\n\nll n, m, siz, a[N], pos[N];\n\nstruct query {ll l, r, num;} q[N];\n\nbool cmp(query a, query b) {\n\treturn pos[a.l] == pos[b.l] ? a.r < b.r : pos[a.l] < pos[b.l];\n}\n\nll ans[N], now, cnt[N];//ans[]\u7edf\u8ba1\u7b54\u6848\uff0ccnt[]\u7edf\u8ba1\u6b21\u6570\uff0cnow\u8ba1\u6570\u5668\n\nvoid add(ll x) {\n\tif (a[x] > n) return; //\u76f4\u63a5return\uff0c\u9632\u6b62\u6570\u7ec4\u8d8a\u754c\n\tif(cnt[a[x]] == a[x]) now--; //\u5982\u679c\u52a0\u5165\u8fd9\u4e2a\u6570\u4e4b\u524d\u7b26\u5408\u6761\u4ef6\uff0c\u90a3\u4e48\u52a0\u5165\u540e\u7edd\u5bf9\u4e0d\u7b26\u5408\uff0c\u76f4\u63a5\u51cf\u53bb\n \tcnt[a[x]]++;//\u6b21\u6570++\n\tif (cnt[a[x]] == a[x]) now++;//\u5982\u679c\u52a0\u5165\u540e\u7b26\u5408\u6761\u4ef6\uff0c\u8ba1\u6570\u5668++\uff1b\n}\n\nvoid del(ll x) {\n\tif (a[x] > n) return; //\u540c\u4e0a\n\tif(cnt[a[x]] == a[x]) now--;\n\tcnt[a[x]] --;\n\tif(cnt[a[x]] == a[x])\n\tnow++;\n}\n\nint main() {\n\tread(n), read(m);\n\t//\u5206\u5757\uff0c\u51cf\u5c11\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n\tsiz = sqrt(n);\n\tfor (ll i = 1; i <= n; i++) {\n\t\tread(a[i]);\n\t\tpos[i] = i / siz;\n\t}\n\tfor (ll i = 1; i <= m; i++) {\n\t\tread(q[i].l), read(q[i].r);\n\t\tq[i].num = i;\n\t}\n\tsort(q + 1, q + 1 + m, cmp);\n\t//\u83ab\u961f\u677f\u5b50\n\tll l = 1, r = 0;\n\tfor (ll i = 1; i <= m; i++) {\n\t\twhile (q[i].l < l) add(--l);\n\t\twhile (q[i].r > r) add(++r);\n\t\twhile (q[i].l > l) del(l++);\n\t\twhile (q[i].r < r) del(r--);\n\t\tans[q[i].num] = now;\n\t}\n\tfor (ll i = 1; i <= m; i++) cout << ans[i] << \"\\n\";\n\treturn 0;\n}\n```\n\n### \u611f\u8c22\u9605\u8bfb\uff01\n",
        "postTime": 1571973416,
        "uid": 127608,
        "name": "My_666",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF220B \u3010Little Elephant and Array\u3011"
    },
    {
        "content": "#### \u524d\u8a00\n\n\u8868\u793a\u8fd9\u9053\u9898\u76ee\uff0c\u5927\u5bb6\u90fd\u6ca1\u6709\u5229\u7528\u597d\u90a3256MB\u7684\u7a7a\u95f4 ~~(\u53ea\u662f\u6211\u7684\u505a\u6cd5\u6bd4\u8f83\u8fa3\u9e21\uff0c\u9700\u8981\u5f88\u591a\u7a7a\u95f4)~~\n\n#### \u601d\u8def\n\n\u8fd9\u9053\u9898\u672a\u5fc5\u9700\u8981\u4ec0\u4e48**\u83ab\u961f**,**\u6811\u72b6\u6570\u7ec4**,**\u7ebf\u6bb5\u6811**,**\u5206\u5757**\u3002\n\n(\u7528\u4eca\u5929\u6bd4\u8d5b\u7684\u65f6\u5019YY\u51fa\u6765\u7684\u9898\u76ee\u7684\u6027\u8d28\u8fc7\u7684\uff0c\u8c8c\u4f3c\u8ddfKewth\u662f\u4e00\u4e2a\u601d\u8def\u6b38\uff0c\u591a\u4e86\u4e9b\u89e3\u91ca\uff0c\u6c42\u8fc7)\n\n\u76f4\u63a5\u89c2\u5bdf\u9898\u76ee\u6027\u8d28\u5e76\u4e14\u5229\u7528\u597d256MB\u7a7a\u95f4\uff0c\u7136\u540e\u7528\u524d\u7f00\u548c\u7528 O($(q+n)\\sqrt{2 * n}$)\u7684\u65f6\u95f4 \u83bd\u8fc7\u53bb\u5c31\u884c\u4e86\u3002\n\n\u8fd9\u9053\u9898\u76ee\u6709\u4e00\u4e2a\u4f18\u79c0\u7684\u6027\u8d28\uff1a\n\n\u867d\u7136\u7ed9\u5b9a\u7684\u6570\u7684\u5927\u5c0f\u53ef\u80fd\u4e3a $10 ^ 9$\u3002\u4f46\u662f\uff0c\u5e76\u975e\u6240\u6709\u6570\u90fd\u662f\u6709\u7528\u7684\uff0c\u66f4\u52a0\u786e\u5207\u7684\u8bf4\uff0c\u5b9e\u9645\u4e0a\u6709\u7528\u7684\u6570\u4e0d\u8d85\u8fc7 $\\sqrt{2 * n}$  \u79cd\u3002\n\n\u6b64\u8bdd\u600e\u8bb2\uff08\u770b\u8d77\u6765\u6211\u5728\u641e\u7384\u5b66\uff09\uff1f\u542c\u6211\u7ec6\u7ec6\u9053\u6765\u3002\n\n\u9996\u5148\uff0c\u5982\u679c\u4e00\u79cd\u6570\uff0c\uff08\u5728\u6574\u4e2a\u533a\u95f4\u4e2d\uff09\u5176\u51fa\u73b0\u6b21\u6570\u5c0f\u4e8e\u7b49\u4e8e\u81ea\u5df1\u7684\u5927\u5c0f\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u94c1\u5b9a\u201c\u6ca1\u7528\u201d\u4e86\uff0c\u5176\u65e0\u8bba\u5982\u4f55\u4e5f\u65e0\u6cd5\u5728\u7b54\u6848\u4e2d\u505a\u51fa\u8d21\u732e\uff0c\u8fd9\u6837\u5b50\u7684\u6570\uff0c\u662f\u80af\u5b9a\u53ef\u4ee5\u5220\u6389\u7684\u3002\n\n\u4ec0\u4e48\u60c5\u51b5\u4e0b\u88ab\u7559\u4e0b\u6765\u7684\u6570\u6700\u591a\uff1f \u4e0d\u96be\u53d1\u73b0\uff0c\u5f53\u6bcf\u4e2a\u6570\u7684\u5927\u5c0f\u5c3d\u91cf\u5c0f\u7684\u65f6\u5019\u624d\u80fd\u7559\u4e0b\u6765\u7684\u6570\u6700\u591a\uff0c\u5018\u82e5\u60f3\u7559\u4e0b\u5c3d\u53ef\u80fd\u591a\u7684\u6570\uff0c\u5176\u4e2d\u7684\u6700\u4f18\u60c5\u51b5\u5c31\u662f\u7559\u4e0b\u4e86$1$ \uff0c $2$ \uff0c $3$ , ... , $k$ \uff0c\u6839\u636e\u7b49\u5dee\u6570\u5217\u6c42\u548c\u516c\u5f0f\uff0c\u90a3\u4e48 $\\frac{k*(k + 1)}{2} <= n$\n\n\u8fd9\u6837\u5b50\uff0c\u7559\u4e0b\u6765\u7684 $k$ \u4e2a\u6570\u6700\u5927\u5c31\u53ea\u80fd\u662f $\\sqrt{2 * n}$  \u79cd\u4e86\u3002\u8fd9\u4e5f\u662f\u672c\u4eba\u7528\u7684\u7b97\u6cd5\u7684\u6700\u574f\u60c5\u51b5\u3002\n\n\u4ed4\u7ec6\u8ba1\u7b97\uff0c\u53d1\u73b0 $\\sqrt{2 * n}$ \u6700\u5927\u4e0d\u4f1a\u8d85\u8fc7 $450$ \uff0c \u7136\u540e $450$ * $10 ^ 5$ \u7684\u7a7a\u95f4\u6d88\u8017\u5927\u6982\u662f $170MB$ \u3002 \u4e8e\u662f\u6211\u6d6a\u5f97\u98de\u8d77\uff0c\u76f4\u63a5\u5f00\u4e0a $500 * 10^5$ \u7684\u524d\u7f00\u548c\u6570\u7ec4\u3002\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u67e5\u8be2\uff0c\u53ea\u9700\u8981\u679a\u4e3e\u6709\u591a\u5c11\u79cd\u6570\u88ab\u5305\u542b\u5728\u8fd9\u4e2a\u533a\u95f4\u5185\u7684\u6570\u91cf**\u6070\u597d**\u7b49\u4e8e\u5176\u5927\u5c0f\u5373\u53ef\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u7528\u7a7a\u95f4\u590d\u6742\u5ea6: O($n\\sqrt{2 * n}$) \u65f6\u95f4\u590d\u6742\u5ea6: O($(q+n)\\sqrt{2 * n}$) \u7684 ~~\u4f18\u79c0~~ \u4e71\u641e\u505a\u6cd5\u8fc7\u4e86\u8fd9\u4e00\u9898\u3002\n\n\u4eba\u83dc\u8bdd\u591a\uff0c\u5199\u5f97\u5f88\u957f\u3002\u5c31\u5570\u55e6\u5230\u8fd9\u91cc\u4e86\u3002\n\n### Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint sum[505][100005];//\u66b4\u529b\u5f00\u6570\u7ec4\nconst int MAXN = 100005;\nint n,q;\nint a[MAXN];\nmap <int ,int > book,vis;//\u8fd9\u91cc\u662f\u8bb0\u5f55\u4fe1\u606f\u7528\u7684\u4e24\u4e2amap\nint New[MAXN],tot = 0;\n\ninline int read()//\u8fd9\u91cc\u662f\u5feb\u8bfb\n{\n    int x = 0 , flag = 1;\n    char ch = getchar();\n    for( ; ch > '9' || ch < '0' ; ch = getchar());\n    for( ; ch >= '0' && ch <= '9' ; ch = getchar()) x = (x << 3) + (x << 1) + ch - '0';\n    return x * flag;\n}\n\nsigned main()\n{\n    n = read(), q = read();\n    for(int i = 1 ; i <= n;  i ++) \n    a[i] = read(),book[a[i]] ++,vis[a[i]] = 1;//\u8fd9\u91cc\u662f\u5728\u7edf\u8ba1\u4fe1\u606f\n    \n    for(int i = 1 ; i <= n ; i ++)\n        if(book[a[i]] < a[i])\n        vis[a[i]] = 0,a[i] = 0;//\u8fd9\u91cc\u662f\u5728\u5220\u53bb\u65e0\u7528\u7684\u6570\n \n    for(int i = 1 ; i <= n ; i ++)\n        if(vis[a[i]] == 1) \n        tot ++ , New[tot] = a[i] , vis[a[i]] ++;//\u8fd9\u91cc\u662f\u5728\u7edf\u8ba1\u6709\u7528\u7684\u6570\n        \n    for(int i = 1 ; i <= n ; i ++)\n        for(int j = 1 ; j <= tot ; j ++){\n            sum[j][i] = sum[j][i - 1] ;\n            if(New[j] == a[i])sum[j][i] ++;//\u7edf\u8ba1\u524d\u7f00\u548c\n        }\n\n    for(int i = 1 ; i <= q ; i ++){\n        int l = read() , r = read();\n        int Ans = 0;\n        for(int j = 1 ; j <= tot ; j ++)\n            if(sum[j][r] - sum[j][l - 1] == New[j])Ans ++;//\u66b4\u529b\u7edf\u8ba1\u7b54\u6848\n        printf(\"%d\\n\",Ans);\n    }\n    return 0;\n}\n```\n\n### \u540e\u8bdd\n\n\u6211\u5f97\u627f\u8ba4\u6211\u7684\u505a\u6cd5\u6bd4\u8f83\u52a3(\u8fc7\u4e0d\u4e86\u4eca\u5929\u7684\u6bd4\u8d5b\u9898\uff0c\u6bd4\u8d5b\u7684\u65f6\u5019\u8fd8\u662f\u8001\u8001\u5b9e\u5b9e\u5199\u4e86\u83ab\u961f)\uff0c\u4f46\u662f\u8c8c\u4f3c\u8fd9\u4e2a\u9898\u76ee\u662f\u53ef\u4ee5\u89c2\u5bdf\u6027\u8d28\u7b80\u5355\u7684\u8fc7\u6389\u7684\uff0c\u4ee3\u7801\u6bd4\u8f83\u77ed\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u6027\u8d28\uff0c\u4e0d\u77e5\u9053\u600e\u4e48\u7528\u3002\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4\u7684\u8be2\u95ee\uff0c\u5176\u7b54\u6848\u5c0f\u4e8e\u7b49\u4e8e$\\sqrt{2 * len}$\u7684\uff0c\u8fd9\u4e2a\u4e1c\u897f\u6211\u4e0d\u5927\u77e5\u9053\u600e\u4e48\u7528\uff0c\u4f46\u662f\u76f8\u4fe1\u806a\u660e\u7684\u4f60\u67d0\u5929\u8def\u8fc7\u770b\u5230\u7684\u65f6\u5019\uff0c\u8bf4\u4e0d\u5b9a\u5c31\u80fd\u7528\u4e0a\u8fd9\u4e2a\u6027\u8d28\u4e86\u3002\n\n(\u4ee3\u7801\u4fee\u6b63\u4e86\u4e00\u4e0b\uff0c\u6c42\u7ba1\u7406\u901a\u8fc7)",
        "postTime": 1607001941,
        "uid": 67817,
        "name": "MuYC",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF220B \u3010Little Elephant and Array\u3011"
    },
    {
        "content": "#### \u524d\u8a00\n\n- \u8fd9\u9053\u9898\u662f\u6253\u6bd4\u8d5b\u7684\u65f6\u5019\u7684\u4e00\u9053\u9898\u76ee\uff0c\u56e0\u4e3a\u9898\u76ee\u91cd\u4e86\u53ea\u597d\u542b\u6cea\u5207\u6389\u8fd9\u9053\u9898\u3002\uff08\u6709\u51e0\u4e2a\u5751\u70b9QWQ\uff09\n\n#### \u9898\u76ee\u63cf\u8ff0\n\n- \u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a$n$\u7684\u5e8f\u5217$a$\n\n- \u6709$q$\u6b21\u8be2\u95ee\uff0c\u6bcf\u4e00\u6b21\u8be2\u95ee\u8fd9\u5176\u4e2d\u7b26\u5408\u6761\u4ef6\u7684\u6570\u5b57\u79cd\u7c7b\u6709\u591a\u5c11\uff08\u5c31\u662f\u6ca1\u6709\u91cd\u7740\u7684\u6570\u5b57\uff09\n\n- \u6761\u4ef6\u4e3a:\u533a\u95f4\u5185$a_i$\u8fd9\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\u6b63\u597d\u7b49\u4e8e$a_i$\u81ea\u8eab\u7684\u503c\n\n#### \u601d\u8def\u5206\u6790\n\n- \u5947\u5947\u602a\u602a\u7684\u601d\u8def\n\n-  \u9996\u5148\uff0c\u6211\u4eec\u8fdb\u884c\u79bb\u7ebf\u64cd\u4f5c\uff0c\u5148\u628a\u8be2\u95ee\u7684\u533a\u95f4\u7ed9\u8bb0\u5f55\u4e0b\u6765\uff0c\u7136\u540e\u6839\u636e\u5de6\u533a\u95f4\u7684\u5e8f\u53f7\u6309\u7167\u5347\u5e8f\u6392\u5217\uff08\u4ee5\u4e0b\u5168\u4e3a\u6392\u597d\u5e8f\u540e\u7684\u533a\u95f4\uff09\n\n- \u5176\u6b21\uff0c\u6211\u4eec\u5148\u5904\u7406\u597d\u7b2c\u4e00\u4e2a\u533a\u95f4\u5185\u7684\u503c\uff0c\u5c06\u8fd9\u4e2a\u4f5c\u4e3a\u521d\u59cb\u503c\u8fdb\u884c\u5904\u7406\n\n- \u7136\u540e\uff0c\u6211\u4eec\u5c31\u5f00\u59cb\u5bf9$2-n$\u4e2a\u533a\u95f4\u5f00\u59cb\u64cd\u4f5c\n\n- \u6bcf\u6b21\u5904\u7406\u662f\uff0c\u90fd\u662f\u4ece\u524d\u4e00\u4e2a\u533a\u95f4\u5411\u7740\u5f53\u524d\u533a\u95f4\u9760\u62e2\uff0c\u7136\u540e\u5728\u8fd9\u4e2a\u5904\u7406\u7684\u8fc7\u7a0b\u4e2d\uff0c\u76f4\u63a5\u5224\u65ad\u662f\u5426\u5f53\u524d\u7684\u6570\u7b26\u5408\u6761\u4ef6\uff0c\u6700\u540e\u533a\u95f4\u8f6c\u79fb\u5b8c\uff0c\u7b54\u6848\u4e5f\u5c31\u51fa\u6765\u4e86\n\n#### \u6b63\u786e\u6027\n\n- \u90a3\u4e48\u8fd9\u4e2a\u65b9\u6cd5\u5982\u4f55\u8bc1\u660e\u6b63\u786e\u6027\u5462\uff0c\u6211\u4eec\u60f3\u8c61\u4e00\u4e0b\uff0c\u9996\u5148\u6211\u4eec\u8fdb\u884c\u5728\u4e00\u4e2a\u533a\u95f4\u5185\u8fdb\u884c\u64cd\u4f5c\uff08\u4e3a\u4e86\u65b9\u4fbf\u9009\u62e9\u7b2c\u4e00\u4e2a\u533a\u95f4\u6765\u505a\u8bf4\u660eOVO\uff09\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/lpvftgp5.png)\n\n- \u6765\u770b\u8fd9\u4e2a\u5e8f\u5217\uff0c\u6a21\u62df\u4e00\u4e0b\u8fc7\u7a0b\u3002\n\n- \u9996\u5148\u5728\u8fd9\u4e2a\u5e8f\u5217\u4e2d\uff0c\u5728\u7b2c$1$\u4f4d\u7684\u65f6\u5019\uff0c$1$\u7684\u4e2a\u6570\u88ab\u8bb0\u5f55\u4e0b\u6765\u4e86\uff0c\u5f53\u524d\u7684\u6570\u91cf\u7b26\u5408\u6761\u4ef6\uff0c\u90a3\u4e48\u73b0\u5728\u7684$ans=1$\uff0c\u518d\u770b\u8d70\u5230\u7b2c$3$\u4f4d\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u60c5\u51b5\u5c31\u662f$2$\u7684\u4e2a\u6570\u6b63\u597d\u7b26\u5408\u6761\u4ef6\u4e86\uff0c\u90a3\u4e48\u628a\u5b83\u7ed9\u8bb0\u5f55\u4e0b\u6765\uff0c\u6b64\u65f6\u7684$ans=2$,\u7136\u540e\u6700\u7ec6\u8282\u7684\u5730\u65b9\u5c31\u662f\u5230\u4e86$4$\u7684\u4f4d\u7f6e\u7684\u65f6\u5019\uff0c\u5c31\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u4e2a\u65f6\u5019$2$\u7684\u6570\u91cf\u8d85\u4e86\uff0c\u5e76\u4e14\u8fd9\u4e2a\u6570\u7684\u7b54\u6848\u8bb0\u5f55\u8fc7\uff0c\u90a3\u4e48\u5c31\u5728\u51cf\u53bb\uff0c\u5e76\u4e14\u628a\u6807\u8bb0\u5220\u9664\u5373\u53ef\u3002\n\n#### \u5751\u70b9\u5206\u6790\n\n- \u7b2c\u4e00\u4e2a\u5751\u70b9\u5c31\u662f\u5982\u679c\u4f60\u4e0d\u770b\u9898\u76ee\u7684\u8bdd\uff0c\u4f60\u5f00\u4e86\u4e00\u4e2a$1e6$\u7684\u6570\u7ec4\uff0c\u90a3\u4e48\u4f60\u5c31\u4f1a\u70b8\u6389\u4e86\uff0c\u56e0\u4e3a\u6700\u5927\u4e3a$1e9$\uff0c\u56e0\u4e3a\u957f\u5ea6\u6700\u5927\u5c31\u662f\u4e00\u767e\u4e07\uff0c\u90a3\u4e48\u6211\u4eec\u5728\u5904\u7406\u7684\u8fc7\u7a0b\u4e2d\u5c31\u628a\u6240\u6709\u7684\u5927\u4e8e\u4e00\u767e\u4e07\u7684\u6570\u90fd\u7ed9\u8d4b\u503c\u62100\u5373\u53ef\uff0c\u8fd9\u6837\u5c31\u907f\u514d\u4e86RE\u7684\u60c5\u51b5\n\n- \u7b2c\u4e8c\u4e2a\u5751\u70b9\u5c31\u662f\u6211\u8fd9\u4e2a\u7b97\u6cd5\u7684\u5751\u70b9\uff0c\u5f53\u8fdb\u884c\u4e00\u4e2a\u533a\u95f4\u79fb\u52a8\u7684\u65f6\u5019\uff0c\u4e5f\u5c31\u662f\u5f53\u53f3\u533a\u95f4\u6bd4\u539f\u6765\u533a\u95f4\u5927\u7684\u65f6\u5019\uff0c\u6700\u540e\u4e24\u4e2a\u503c\u5408\u5e76\u7684\u65f6\u5019\u8981\u8bb0\u5f97\u7279\u5224\u4e00\u4e0b\uff0c\u4e0d\u7136\u4e5f\u4f1a\u6302\u6389QWQ\n\n#### \u4ee3\u7801\u5b9e\u73b0\n\n```\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<stack>\n#include<map>\n#include<algorithm>\n#include<cmath>\n#include<cstring>\nusing namespace std;\nconst int N=1e6+9;\nstruct node{\n\tint l;\n\tint r;\n\tint num;//\u7f16\u53f7 \n}q[N];\nint lal=0,lar=0;//\u8868\u793a\u4e0a\u6b21\u7684\u533a\u95f4\u957f\u5ea6\nint Q;//\u8be2\u95ee \nint n;//\u5e8f\u5217\u957f\u5ea6 \nint ans[N];//\u7b54\u6848 \nint vis[N];//\u6807\u8bb0 \nint cnt[N];//\u8ba1\u6570 \nint a[N];\nint read()\n{\n\tint s = 0, w = 1;\n\tchar ch = getchar();\n\twhile(ch < '0' || ch > '9') { if(ch == '-') w = -1; ch = getchar(); }\n\twhile(ch >= '0' && ch <= '9') s = (s << 1) + (s << 3) + ch - '0', ch = getchar();\n\treturn s * w;\n}\nbool cmp(node a,node b)\n{\n\tif(a.l!=b.l)\n\treturn a.l<b.l;\n\telse return a.r<b.r;\n}\nvoid work(int x)\n{\n\t//cout<<\" No.\"<<x<<\" l= \"<<lal<<\" r= \"<<lar<<endl; \n\tint l=q[x].l;\n\tint r=q[x].r;\n\twhile(lal<l)//\u5c06\u539f\u5148\u5de6\u8fb9\u7684\u533a\u95f4\u5168\u90e8\u8f6c\u79fb\u5230\u73b0\u5728\u7684\u4f4d\u7f6e \n\t{\n\t\tcnt[a[lal]]--;//\u628a\u4e4b\u524d\u7684\u5168\u90e8\u51cf\u6389\n\t\tif(cnt[a[lal]]==a[lal])\n\t\t{\n\t\t\tif(vis[a[lal]]==0)\n\t\t\t{\n\t\t\t\tans[q[x].num]++;\n\t\t\t\tvis[a[lal]]=1;//\u5728\u7ebf\u67e5\u627e\uff0c\u5982\u679c\u6709\u76f8\u540c\u7684\uff0c\u90a3\u4e48\u5c31\u76f4\u63a5\u52a0\u4e0a \n\t\t\t}\n\t\t}\n\t\telse if(cnt[a[lal]]!=a[lal])\n\t\t{\n\t\t\tif(vis[a[lal]]==1)//\u5982\u679c\u8fd9\u4e2a\u4ee5\u524d\u5df2\u7ecf\u52a0\u4e0a\u8fc7\u4e86\u8d21\u732e\uff0c\n\t\t\t//\u4f46\u662f\u73b0\u5728\u4ed6\u7684\u7b54\u6848\u5df2\u7ecf\u4e0d\u7b26\u5408\u6761\u4ef6\u4e86\uff0c\u90a3\u4e48\u5c31\u76f4\u63a5\u6254\u6389 \n\t\t\t{\n\t\t\t\tans[q[x].num]--;\n\t\t\t\tvis[a[lal]]=0;\n\t\t\t}\n\t\t}\n\t\tlal++;//\u4e0d\u9700\u8981\u51cf\u53bb\u6700\u540e\u4e00\u4e2a\uff0c\u8fd9\u4e2a\u6ca1\u95ee\u9898 \n\t}\n\tif(lar>r)\n\twhile(lar>r)//\u5982\u679c\u4e0a\u4e2a\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u6bd4\u5f53\u524d\u7684\u8981\u5927\uff0c\u90a3\u4e48\u5c31\u7f29\u5c0f \n\t{\n\t\tcnt[a[lar]]--;//\u628a\u4e4b\u524d\u7684\u5168\u90e8\u51cf\u6389\n\t\tif(cnt[a[lar]]==a[lar])\n\t\t{\n\t\t\tif(vis[a[lar]]==0)\n\t\t\t{\n\t\t\t\tans[q[x].num]++;\n\t\t\t\tvis[a[lar]]=1;//\u5728\u7ebf\u67e5\u627e\uff0c\u5982\u679c\u6709\u76f8\u540c\u7684\uff0c\u90a3\u4e48\u5c31\u76f4\u63a5\u52a0\u4e0a \n\t\t\t}\n\t\t}\n\t\telse if(cnt[a[lar]]!=a[lar])\n\t\t{\n\t\t\tif(vis[a[lar]]==1)//\u5982\u679c\u8fd9\u4e2a\u4ee5\u524d\u5df2\u7ecf\u52a0\u4e0a\u8fc7\u4e86\u8d21\u732e\uff0c\n\t\t\t//\u4f46\u662f\u73b0\u5728\u4ed6\u7684\u7b54\u6848\u5df2\u7ecf\u4e0d\u7b26\u5408\u6761\u4ef6\u4e86\uff0c\u90a3\u4e48\u5c31\u76f4\u63a5\u6254\u6389 \n\t\t\t{\n\t\t\t\tans[q[x].num]--;\n\t\t\t\tvis[a[lar]]=0;\n\t\t\t}\n\t\t}\n\t\tlar--;//\u6700\u540e\u4e00\u4e2a\u4e0d\u9700\u8981\u51cf\u53bb \n\t}\n\tif(lar<r)//\u5982\u679c\u539f\u5148\u7684\u53f3\u533a\u95f4\u6bd4\u73b0\u5728\u7684\u8981\u5c0f \n\t{\n\t\tlar++;//\u8f6c\u79fb\u5230\u53f3\u8fb9\u4e00\u70b9\uff0c\u56e0\u4e3a\u539f\u5148\u7684r\u70b9\u5df2\u7ecf\u8bb0\u5f55\u8fc7\u4e86 \n\t\twhile(lar<r)\n\t\t{\n\t\t\tcnt[a[lar]]++;//\u628a\u73b0\u5728\u7684\u5168\u90e8\u52a0\u4e0a \n\t\t\tif(cnt[a[lar]]==a[lar])\n\t\t\t{\n\t\t\t\tif(vis[a[lar]]==0)\n\t\t\t\t{\n\t\t\t\t\tans[q[x].num]++;\n\t\t\t\t\tvis[a[lar]]=1;//\u5728\u7ebf\u67e5\u627e\uff0c\u5982\u679c\u6709\u76f8\u540c\u7684\uff0c\u90a3\u4e48\u5c31\u76f4\u63a5\u52a0\u4e0a \n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(cnt[a[lar]]!=a[lar])\n\t\t\t{\n\t\t\t\tif(vis[a[lar]]==1)//\u5982\u679c\u8fd9\u4e2a\u4ee5\u524d\u5df2\u7ecf\u52a0\u4e0a\u8fc7\u4e86\u8d21\u732e\uff0c\n\t\t\t\t//\u4f46\u662f\u73b0\u5728\u4ed6\u7684\u7b54\u6848\u5df2\u7ecf\u4e0d\u7b26\u5408\u6761\u4ef6\u4e86\uff0c\u90a3\u4e48\u5c31\u76f4\u63a5\u6254\u6389 \n\t\t\t\t{\n\t\t\t\t\tans[q[x].num]--;\n\t\t\t\t\tvis[a[lar]]=0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlar++;\n\t\t}\n\t\tcnt[a[lar]]++;//\u628a\u73b0\u5728\u7684\u5168\u90e8\u52a0\u4e0a \n\t\tif(cnt[a[lar]]==a[lar])\n\t\t{\n\t\t\tif(vis[a[lar]]==0)\n\t\t\t{\n\t\t\t\tans[q[x].num]++;\n\t\t\t\tvis[a[lar]]=1;//\u5728\u7ebf\u67e5\u627e\uff0c\u5982\u679c\u6709\u76f8\u540c\u7684\uff0c\u90a3\u4e48\u5c31\u76f4\u63a5\u52a0\u4e0a \n\t\t\t}\n\t\t}\n\t\telse if(cnt[a[lar]]!=a[lar])\n\t\t{\n\t\t\tif(vis[a[lar]]==1)//\u5982\u679c\u8fd9\u4e2a\u4ee5\u524d\u5df2\u7ecf\u52a0\u4e0a\u8fc7\u4e86\u8d21\u732e\uff0c\n\t\t\t//\u4f46\u662f\u73b0\u5728\u4ed6\u7684\u7b54\u6848\u5df2\u7ecf\u4e0d\u7b26\u5408\u6761\u4ef6\u4e86\uff0c\u90a3\u4e48\u5c31\u76f4\u63a5\u6254\u6389 \n\t\t\t{\n\t\t\t\tans[q[x].num]--;\n\t\t\t\tvis[a[lar]]=0;\n\t\t\t}\n\t\t}\n\t}\n} \nint main()\n{\n\tn=read();\n\tQ=read();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\ta[i]=read();\n\t\tif(a[i]>100000)\n\t\ta[i]=0;\n\t}\n\tfor(int i=1;i<=Q;i++)\n\t{\n\t\tq[i].l=read();\n\t\tq[i].r=read();\n\t\tq[i].num=i;\n\t}\n\tsort(q+1,q+1+Q,cmp); \n//\tfor(int i=1;i<=n;i++)\n//\t{\n//\t\tcout<<\"l= \"<<q[i].l<<\" r= \"<<q[i].r<<\" num= \"<<q[i].num<<endl;\n//\t}\n\tfor(int i=q[1].l;i<=q[1].r;i++)\n\t{\n\t\tcnt[a[i]]++; \n\t\tif(cnt[a[i]]==a[i])//\u8bf4\u660e\u5f53\u524d\u5df2\u7ecf\u6ee1\u8db3\u6761\u4ef6\u4e86\n\t\t{\n\t\t\tif(vis[a[i]]==0)//\u5982\u679c\u8fd9\u4e2a\u7b54\u6848\u8fd8\u6ca1\u6709\u7edf\u8ba1\u8fc7\u90a3\u4e48\u4e45\u8bb0\u5f55\u4e0b\u6765 \n\t\t\t{\n\t\t\t\tans[q[1].num]++;\n\t\t\t\tvis[a[i]]=1;//\u5728\u7ebf\u67e5\u627e\uff0c\u5982\u679c\u6709\u76f8\u540c\u7684\uff0c\u90a3\u4e48\u5c31\u76f4\u63a5\u52a0\u4e0a \n\t\t\t}\n\t\t}\n\t\telse if(cnt[a[i]]!=a[i])\n\t\t{\n\t\t\tif(vis[a[i]]==1)//\u5982\u679c\u8fd9\u4e2a\u4ee5\u524d\u5df2\u7ecf\u52a0\u4e0a\u8fc7\u4e86\u8d21\u732e\uff0c\n\t\t\t//\u4f46\u662f\u73b0\u5728\u4ed6\u7684\u7b54\u6848\u5df2\u7ecf\u4e0d\u7b26\u5408\u6761\u4ef6\u4e86\uff0c\u90a3\u4e48\u5c31\u76f4\u63a5\u6254\u6389 \n\t\t\t{\n\t\t\t\tans[q[1].num]--;\n\t\t\t\tvis[a[i]]=0;\n\t\t\t}\n\t\t} \n\t}\n\tlal=q[1].l;\n\tlar=q[1].r;\n\tfor(int i=2;i<=Q;i++) \n\t{\n\t\tans[q[i].num]=ans[q[i-1].num];//\u8f6c\u6362\u4e00\u4e0b \n\t\twork(i); \n\t}\t\n\tfor(int i=1;i<=Q;i++)\n\tcout<<ans[i]<<endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1606987775,
        "uid": 230804,
        "name": "Durancer",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF220B \u3010Little Elephant and Array\u3011"
    },
    {
        "content": "## \uff08\u3007\uff09\u5199\u5728\u524d\u9762\u7684\u8bdd\n\n~~\u611f\u8c22\u516c\u5f00\u8d5b\u8ba9\u6211\u53d1\u73b0\u4e86\u4e00\u9053\u8fd9\u4e48\u597d\u7684\u9898\u3002~~\n\n## \uff08\u4e00\uff09\u8003\u573a\u601d\u8def\n\n\u7b2c\u4e00\u773c\u770b\u5230\u9898\uff1a\u597d\u96be\u5440\uff0c\u600e\u4e48\u505a\uff1f\n\n\u7b2c\u4e8c\u773c\u770b\u5230\u9898\uff1a\u8c8c\u4f3c\u79bb\u7ebf\u4e0b\u6765\u53ef\u4ee5\u83ab\u961f\u6c34\u8fc7\uff1f\n\n\u7b2c\u4e09\u773c\u770b\u5230\u9898\uff1a$10^6$\u7684\u6570\u636e\u8303\u56f4\u83ab\u961f\u76f4\u63a5\u66b4\u6bd9\uff08\u6307\u7b97\u6cd5\uff09\u3002\n\n\u5148\u8bb2\u4e00\u4e0b\u83ab\u961f\u7684\u601d\u8def\u3002\u9996\u5148\u6309\u7167\u5957\u8def\uff0c\u5c06\u6240\u6709\u8be2\u95ee\u79bb\u7ebf\u4e0b\u6765\uff0c\u5206\u5757\u3002\u7136\u540e\u5c31\u662f\u83ab\u961f\u7684\u6a21\u677f\u9898\u4e86\uff0c\u5de6\u53f3\u6307\u9488\u5404\u79cd\u79fb\u52a8\uff0c\u5bf9\u7b54\u6848\u52a0\u52a0\u51cf\u51cf\u5373\u53ef\u3002\n\n\u7406\u8bba\u65f6\u95f4\u590d\u6742\u5ea6$\\Theta(N\\sqrt N)$\n\n\u7ed9\u51fa\u4ee3\u7801\uff08\u6210\u529f\u5361\u8fc7\u4e86$10^6$\u7684\u6570\u636e\uff09\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read(){\n\tint w = 0, f = 1; char ch = getchar();\n\twhile(ch < '0' or ch > '9') {if(ch == '-') f = -f; ch = getchar();}\n\twhile(ch >= '0' and ch <= '9') w = w*10 + ch - '0', ch = getchar();\n\treturn w*f;\n}\nconst int maxn = 1e6 + 5;\nint N, M, a[maxn], belong[maxn], ans[maxn], sum, cnt[maxn];\nstruct Question{\n\tint l, r, id;\n}q[maxn];\nbool cmp(Question x, Question y){\n\treturn (belong[x.l]^belong[y.l])?belong[x.l]<belong[y.l]:(belong[x.l]%2?x.r<y.r:x.r>y.r);\n}\ninline void add(int x){\n\tif(x > N) return ;\n\tif(!(cnt[x]^x)) sum --;\n\tcnt[x] ++;\n\tif(!(cnt[x]^x)) sum ++;\n}\ninline void del(int x){\n\tif(x > N) return ;\n\tif(!(cnt[x]^x)) sum --;\n\tcnt[x] --;\n\tif(!(cnt[x]^x)) sum ++;\n}\nint main(){\n\tN = read(), M = read();\n\tfor(int i=1; i<=N; i++) a[i] = read();\n\tfor(int i=1; i<=M; i++){\n\t\tint l = read(), r = read();\n\t\tq[i] = (Question){l, r, i};\n\t}\n\tint len = 1620, bnum = ceil((double)N/len);\n\tfor(int i=1; i<=bnum; i++) for(int j=(i-1)*len+1; j<=min(i*len, N); j++) belong[j] = i;\n\tsort(q+1, q+M+1, cmp);\n\tint l = 1, r = 0;\n\tfor(int i=1; i<=M; i++){\n\t\tint ql = q[i].l, qr = q[i].r;\n\t\twhile(l > ql) add(a[--l]);\n\t\twhile(l < ql) del(a[l++]);\n\t\twhile(r > qr) del(a[r--]);\n\t\twhile(r < qr) add(a[++r]);\n\t\tans[q[i].id] = sum;\n\t}\n\tfor(int i=1; i<=M; i++) printf(\"%d\\n\", ans[i]);\n\treturn 0;\n}\n```\n\n\u5176\u5b9e\u5728\u8003\u573a\u4e0a\u5e76\u6ca1\u6709\u5199\u83ab\u961f\uff0c\u7406\u667a\u544a\u8bc9\u6211\uff0c$10^6$\u83ab\u961f\u662f\u4e0d\u53ef\u80fd\u5361\u8fc7\u53bb\u7684\u3002\u4e8e\u662f\u5f00\u59cb\u60f3$\\Theta(N\\log N)$\u7684\u7b97\u6cd5\u3002\n\n\u7136\u540e\u3002\u3002\u3002T2\u5c31\u88ab\u7206\u7834\u4e86\u3002\u3002\u3002\u6211\u7684\u83ab\u961f!!!\n\n## \uff08\u4e8c\uff09\u7206\u7834\u540e\u601d\u8def\n\n\u5373\u4f7f\u88ab\u7206\u7834\u4e86\uff0c\u9898\u8fd8\u662f\u8981\u505a\u7684\u3002\u4e8e\u662f\u5f00\u59cb\u7528\u5404\u79cd$\\log $\u6570\u636e\u7ed3\u6784yy\u3002\n\n\u5148\u5c06\u8be2\u95ee\u79bb\u7ebf\uff0c\u6309\u7167\u5de6\u7aef\u70b9\u6392\u5e8f\uff0c\u56fa\u5b9a\u5de6\u7aef\u70b9\uff0c\u8003\u8651\u5982\u4f55\u8ba1\u7b97\u53f3\u7aef\u70b9\u9020\u6210\u7684\u8d21\u732e\u3002\n\n\u5982\u679c\u5de6\u7aef\u70b9\u56fa\u5b9a\u4e86\uff0c\u90a3\u4e48\u533a\u95f4\u5185\u67d0\u4e2a\u6570\u7684\u6570\u91cf\u53ea\u4e0e\u53f3\u7aef\u70b9\u7684\u4f4d\u7f6e\u6709\u5173\u3002\u53ea\u9700\u8981\u5224\u65ad\u53f3\u7aef\u70b9\u4e4b\u524d\u6709\u591a\u5c11\u4e2a\u5408\u6cd5\u7684\u6570\u5c31\u884c\u4e86\u3002\n\n\u5982\u4f55\u7edf\u8ba1\u6709\u591a\u5c11\u4e2a\u5408\u6cd5\u7684\u6570\u5462\uff1f\u8003\u8651\u4e00\u4e2a\u5408\u6cd5\u7684\u6570\u5bf9\u53f3\u7aef\u70b9\u9020\u6210\u7684\u8d21\u732e\u3002\n\n\u5047\u8bbe$x$\u51fa\u73b0\u7684\u4f4d\u7f6e\u5206\u522b\u4e3a$d_1,d_2,...,d_n$\uff0c\u90a3\u4e48\u5982\u679c\u56fa\u5b9a\u4e86\u5de6\u7aef\u70b9\u5728$(d_{l-1},d_l]$\uff0c\u90a3\u4e48\uff0c$x$\u53ef\u4ee5\u5bf9\u5728$[d_{l+x-1},d_{l+x})$\u7684\u53f3\u7aef\u70b9\u9020\u6210\u8d21\u732e\u3002\u6240\u4ee5\u7528\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u5bf9$[d_{l+x-1},d_{l+x})$\u6267\u884c\u533a\u95f4\u52a0\u64cd\u4f5c\u5373\u53ef\u3002\n\n\u540c\u6837\u7684\uff0c\u5f53\u5de6\u7aef\u70b9\u79fb\u52a8\u7684\u65f6\u5019\uff0c\u53ea\u9700\u8981\u5220\u9664$[d_{l+x-1},d_{l+x})$\u7684\u8d21\u732e\uff0c\u7136\u540e\u5728\u589e\u52a0\u65b0\u7684\u8d21\u732e\u5373\u53ef\u3002\n\n\u5b9e\u9645\u4e0a\uff0c\u4e0a\u8ff0\u64cd\u4f5c\u8ddf\u626b\u63cf\u7ebf\u6709\u76f8\u4f3c\u7684\u5730\u65b9\u3002\n\n\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6$\\Theta(N\\log N)$\n\n\u4ee3\u7801\uff08\u8f7b\u677e\u8dd1\u8fc7$10^6$\uff09\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read(){\n\tint w = 0, f = 1; char ch = getchar();\n\twhile(ch < '0' or ch > '9') {if(ch == '-') f = -f; ch = getchar();}\n\twhile(ch >= '0' and ch <= '9') w = w*10 + ch - '0', ch = getchar();\n\treturn w*f;\n}\nconst int maxn = 1e6 + 5;\nstruct Question{\n\tint l, r, id;\n}q[maxn];\nint N, a[maxn], c[maxn], Q;\nbool cmp(Question x, Question y){\n\treturn x.l < y.l;\n}\nvoid add(int x, int y){\n\tfor(; x<=N+1; x += x&-x) c[x] += y;\n}\nint ask(int x){\n\tint ans = 0;\n\tfor(; x; x -= x&-x) ans += c[x];\n\treturn ans;\n}\nint ans[maxn], pointer[maxn], sum[maxn];\nvector<int> head[maxn];\nint main(){\n\tN = read(), Q = read();\n\tfor(int i=1; i<=N; i++){\n\t\ta[i] = read();\n\t\tif(a[i] > N) continue;\n\t\tsum[a[i]] ++;\n\t\tif(sum[a[i]] == a[i]) add(i, 1), head[a[i]].push_back(i);\n\t\telse if(sum[a[i]] == a[i] + 1) add(i, -1), head[a[i]].push_back(i);\n\t\telse if(sum[a[i]] > a[i]) head[a[i]].push_back(i);\n\t}\n\t\n\tfor(int i=1; i<=Q; i++){\n\t\tint l = read(), r = read(), id = i;\n\t\tq[i] = (Question){l, r, id};\n\t}\n\tsort(q+1, q+Q+1, cmp);\n\tint j = 1, tmp = 0;\n\tfor(int i=1; i<=Q; i++){\n\t\tfor(; j<q[i].l; j++){\n\t\t\tif(a[j] > N) continue;\n\t\t\tif(pointer[a[j]] < head[a[j]].size()){\n\t\t\t\tadd(head[a[j]][pointer[a[j]] ++], -1);\n\t\t\t\tif(pointer[a[j]] < head[a[j]].size()) add(head[a[j]][pointer[a[j]]], 1);\n\t\t\t}\n\t\t\tif(pointer[a[j]] < head[a[j]].size()){\n\t\t\t\tadd(head[a[j]][pointer[a[j]]], 1);\n\t\t\t\tif(pointer[a[j]]+1 < head[a[j]].size()) add(head[a[j]][pointer[a[j]]+1], -1);\n\t\t\t}\n\t\t}\n\t\tans[q[i].id] = ask(q[i].r);\n\t}\n\tfor(int i=1; i<=Q; i++) printf(\"%d\\n\", ans[i]);\n\treturn 0;\n}\n```\n\n## \uff08\u4e09\uff09\u603b\u7ed3\n\n\u518d\u6b21\u611f\u8c22\u826f\u5fc3\u51fa\u9898\u4eba\u7ed9\u4e86\u4e00\u9053\u8fd9\u4e48\u597d\u7684\u9898\u3002",
        "postTime": 1606995229,
        "uid": 76228,
        "name": "God\u306efather",
        "ccfLevel": 7,
        "title": "\u9898\u89e3-T157500 Chino \u7684\u8bd5\u5377/CF220B Little Elephant and Array"
    },
    {
        "content": "\u4e00\u79cd\u5947\u602a\u7684\u66b4\u529b\uff0c\u590d\u6742\u5ea6\u8fd1\u4f3c$O(n\\sqrt n)$\uff1fn=1e6\u53ef\u4ee5\u78be\u8fc7\u53bb\u7684\u90a3\u79cd\u3002\n\n\u9996\u5148a[i]\u53ea\u6709\u5c0f\u4e8e\u7b49\u4e8en\u7684\u65f6\u5019\u624d\u53ef\u80fd\u6709\u8d21\u732e\u3002\u5176\u6b21\uff0ca[i]\u8d8a\u5927\uff0c\u8d8a\u96be\u505a\u51fa\u8d21\u732e\uff0c\u4e5f\u5c31\u662f\u8bf4\u5047\u5982\u6211\u79bb\u7ebf\u8be2\u95ee\uff0c\u679a\u4e3e\u53f3\u7aef\u70b9r\uff0c\u90a3\u4e48\u4ece1~r\u5176\u5b9e\u6ca1\u591a\u5c11a[i]\u662f\u6709\u53ef\u80fd\u7ed9\u51fa\u8d21\u732e\u7684\u3002\u6240\u4ee5\u2014\u2014\u7ef4\u62a4\u5230\u5f53\u524d\u4f4d\u7f6e\u6709\u54ea\u4e9ba[i]\u53ef\u80fd\u505a\u51fa\u8d21\u732e\uff0c\u7ef4\u62a4\u5230\u5f53\u524d\u4f4d\u7f6e\u6709a[i]\u4e2aa[i]\u7684\u533a\u95f4\u7684\u5de6\u53f3\u7aef\u70b9\uff0c\u5bf9\u6bcf\u4e2a\u8be2\u95ee\u5224\u65ad\u662f\u5426\u521a\u597d\u5361\u7740a[i]\u7684\u8fd9\u4e2a\u533a\u95f4\u5373\u53ef\u3002\n\n\u5173\u4e8e\u590d\u6742\u5ea6\u7684\u8bdd\uff0c\u5047\u5982\u6253\u6ee1\u4ece1\u5f00\u59cb\u7684\u503c\u80fd\u7ed9\u51fa\u8d21\u732e\uff0c\u90a3\u4e48\u6700\u591a\u653e$\\sqrt n$\u4e2a\u3002\u52a0\u4e0a\u5982\u679c\u6570\u636e\u968f\u673a\u7684\u8bdd\uff0c\u5927\u7684a[i]\u5c31\u4f1a\u6bd4\u8f83\u591a\uff0c\u4e0d\u4ea7\u751f\u8d21\u732e\u7684a[i]\u4e5f\u5c31\u76f8\u5e94\u591a\u3002\n\n\u4e0a\u4ee3\u7801\u2014\u2014\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstring>\n#include<vector>\n#include<cstdio>\n#include<cmath>\n#include<queue>\n#define maxn 1000006\nusing namespace std;\ntypedef long long ll;\nint read() {\n\tint x = 0, f = 1, ch = getchar();\n\twhile(!isdigit(ch)) {if(ch == '-') f = -1; ch = getchar();}\n\twhile(isdigit(ch)) x = (x << 1) + (x << 3) + ch - '0', ch = getchar();\n\treturn x * f;\n}\n\nint n, Q, a[maxn], cnt[maxn], ans[maxn], st[maxn], tot = 0, nxt[maxn], lst[maxn], pre[maxn], lim[maxn], fst[maxn];\nstruct node {int l, id;};\nvector<node> q[maxn];\nsigned main() {\n\tn = read(), Q = read();\n\tfor(int i = 1; i <= n; i++) a[i] = read();\n\tfor(int i = 1, l, r; i <= Q; i++) l = read(), r = read(), q[r].push_back({l, i});\n\tfor(int i = 1; i <= n; i++) {\n\t\tif(a[i] <= n) {//\u8fc7\u6ee4\u6389\u4e00\u90e8\u5206\n\t\t\tif(!cnt[a[i]]) fst[a[i]] = i;\n\t\t\tnxt[lst[a[i]]] = i; pre[i] = lst[a[i]]; lst[a[i]] = i; cnt[a[i]]++;\n\t\t\tif(cnt[a[i]] == a[i]) st[++tot] = a[i], lim[a[i]] = fst[a[i]];\n\t\t\telse lim[a[i]] = nxt[lim[a[i]]];\n\t\t}//pre\u548cnxt\u662f\u524d\u540e\u6307\u9488\uff0clim\u662f\u5de6\u7aef\u70b9\uff0cst\u653e\u5408\u6cd5\u7684a[i]\n\t\tfor(int j = 0; j < q[i].size(); j++) {\n\t\t\tregister int l = q[i][j].l, id = q[i][j].id, res = 0;\n\t\t\tfor(int k = 1; k <= tot; k++) if(lim[st[k]] >= l && pre[lim[st[k]]] < l) res++;\n\t\t\tans[id] = res;\n\t\t}\n\t}\n\tfor(int i = 1; i <= Q; i++) printf(\"%d\\n\", ans[i]);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1606981364,
        "uid": 116824,
        "name": "YingLi",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF220B \u3010Little Elephant and Array\u3011"
    },
    {
        "content": " \u6765\u4e00\u53d1\u83ab\u961fQWQ \n \n [\u9898\u76ee\u6233\u6211](https://www.luogu.com.cn/problem/CF220B)\n \n \u672c\u9898\u601d\u8def\u5982\u4e0b\n1. \u957f\u5ea6\u4e3an\u7684\u5e8f\u5217\u5206\u6210sqrt(n)+1\u5757\uff0c\n1. \u628a\u6240\u6709\u8be2\u95ee[l,r]\u8bfb\u5165\uff0c\u7136\u540e\u4ee5\u5de6\u7aef\u70b9l\u7684\u5757\u53f7\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n1. \u540c\u4e00\u5757\u5185\u7684\u8be2\u95ee\u6309\u7167\u53f3\u7aef\u70b9r\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u5177\u4f53\u505a\u7684\u65f6\u5019\uff0c\u7b2c\u4e00\u4e2a\u67e5\u8be2\u65f6\u66b4\u529b\u67e5\u8be2\uff0c\u5f97\u5230\u7b54\u6848t\n1. \u7136\u540el\u5728\u540c\u5757\u5185\u7684\u67e5\u8be2r\u53ea\u589e\u4e0d\u51cf,l\u7684\u53d8\u5316\u6700\u591asqrt(n)\uff0c\u6240\u4ee5\u540c\u5757\u5185\u7684\u67e5\u8be2\u65f6\u95f4\u590d\u6742\u5ea6\u57fa\u672c\u4e0a\u4e3aO(n)\u3002\n\n1. \u67e5\u8be2\u5230\u4e0b\u4e00\u5757\u65f6,r\u624d\u53ef\u80fd\u51cf\u5c0f\uff0c\u7136\u540e\u540c\u5757\u5185\u53c8\u53ea\u589e\u4e0d\u51cf\uff0cl\u53d8\u5316\u6700\u591asqrt(n)\u3002 \u5219\u6574\u4f53\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO((n+m)sqrt(n))\n\n\u522b\u7684\u8bdd\u4fbf\u4e0d\u591a\u8bf4\u4e86\uff0cAC\u4ee3\u7801\u5982\u4e0b\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int M=100005;\nint n,m,sz,a[M],cnt[M],t,ans[M];\nstruct node\n{\n    int le,ri,b,id;\n}p[M];\nbool cmp(node u,node v)\n{\n    if(u.b!=v.b) return u.b<v.b;\n    return u.ri<v.ri;\n}\nvoid add(int x)\n{\n    if(a[x]>n)\n    \treturn; //\u503c\u5927\u4e8en\u7684\u4e0d\u53ef\u80fd\u662f\u7b54\u6848\uff0c\u5ffd\u7565\n    if(cnt[a[x]]==a[x]) \n    \tt--; //\u52a0\u5165a[x]\u65f6a[x]\u5df2\u7ecf\u662f\u7b54\u6848\uff0c\u52a0\u5165a[x]\u540ea[x]\u5c31\u4e0d\u53ef\u80fd\u662f\u7b54\u6848\u4e86\n    cnt[a[x]]++; //\u52a0\u5165a[x]\n    if(cnt[a[x]]==a[x]) \n    \tt++; //\u52a0\u5165a[x]\u540e\u5224\u65ada[x]\u7684\u6b21\u6570cnt[a[x]]\u662f\u5426\u7b49\u4e8ea[x]\n}\nvoid del(int x)\n{\n    if(a[x]>n) \n    \treturn; //\u503c\u5927\u4e8en\u7684\u4e0d\u53ef\u80fd\u662f\u7b54\u6848\uff0c\u5ffd\u7565\n    if(cnt[a[x]]==a[x]) \n    \tt--;\n    cnt[a[x]]--;\n    if(cnt[a[x]]==a[x]) \n    \tt++;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    sz=int(sqrt(n)); //\u5206\u5757\u5927\u5c0f\n    for(int i=1; i<=n; i++) \n    \tscanf(\"%d\",&a[i]);\n    for(int i=1; i<=m; i++)\n    {\n        scanf(\"%d%d\",&p[i].le,&p[i].ri);\n        p[i].b=p[i].le/sz; //\u5206\u5757\u7f16\u53f7,\u5de6\u7aef\u70b9\u5728\u5757\u5185\u66b4\u529b\u67e5\u627e\n        p[i].id=i;\n    }\n    sort(p+1,p+1+m,cmp);\n    int l=0, r=0;\n    for(int i=1; i<=m; i++)//\u8c03\u6574l,r\uff0c\u4f7f\u5f97l\u5230p[i].le-1,r\u5230p[i].ri\n    { \n        while(r<p[i].ri) add(++r); //\u6dfb\u52a0a[r+1]\n        while(r>p[i].ri) del(r--); //\u53bb\u6389a[r]\n        while(l>p[i].le-1) add(l--); //\u6dfb\u52a0a[l]\n        while(l<p[i].le-1) del(++l); //\u53bb\u6389a[l+1]\n        ans[p[i].id]=t;\n    }\n    for(int i=1; i<=m; i++) \n    \tprintf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```\n",
        "postTime": 1605358547,
        "uid": 427452,
        "name": "dsaykc233",
        "ccfLevel": 6,
        "title": "CF220B Little Elephant and Array \u9898\u89e3"
    },
    {
        "content": "\u533a\u95f4\u95ee\u9898\uff0c\u52a0\u4e0a\u53ef\u4ee5\u7528 $O(1)$ \u7edf\u8ba1\u7b54\u6848\u65b9\u6cd5\uff0c\u800c\u4e14 $n,m\\le 10^5$\uff0c\u5c31\u53ef\u4ee5\u6109\u5feb\u4f7f\u7528\u83ab\u961f\u4e86\u3002\n\n$a_i\\le 10^9$\uff0c\u53ef\u4ee5\u53d1\u73b0\u53ea\u6709 $a_i\\le n$ \u7684 $a_i$ \u624d\u5bf9\u7b54\u6848\u6709\u8d21\u732e\u3002\u6240\u4ee5\u76f4\u63a5\u83ab\u961f\u3002\n\n\u6bcf\u6b21\u6dfb\u52a0/\u51cf\u5c11\u4e00\u4e2a\u6570\u7684\u65f6\u5019\u76f4\u63a5\u5224\u65ad\u539f\u5148\u8fd9\u4e2a\u6570\u662f\u4e0d\u662f\u7b54\u6848\u91cc\u7684\uff0c\u548c\u4e4b\u540e\u53ef\u4e0d\u53ef\u4ee5\u5bf9\u7b54\u6848\u4ea7\u751f\u8d21\u732e\u5373\u53ef\u3002\n\n\u88f8\u7684\u83ab\u961f\u590d\u6742\u5ea6 $O(n\\sqrt{n})$\u3002\n\ncode:\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define rint regester int\nconst int maxn = 1e5 + 10;\nconst int INF = 1e9;\nusing namespace std;\nint read(){int x = 0,f = 1; char ch = getchar(); while(ch < '0' || ch > '9'){if(ch == '-')f = -1; ch = getchar();}while(ch >= '0' && ch <= '9'){x = (x << 1) + (x << 3) + (ch ^ 48); ch = getchar();} return x * f;}\nint cnt[maxn], n, m, belongs[maxn], now, l = 1, r, num[maxn], bnum, len, ans[maxn];\nstruct node{int l, r, id;}q[maxn];\nint cmp(node a, node b){return (belongs[a.l] ^ belongs[b.l]) ? belongs[a.l] < belongs[b.l] : a.r < b.r;}\nvoid add(int x){\n    if(num[x] > n)return;\n\tif(cnt[num[x]]++ == num[x])--now;\n\tif(cnt[num[x]] == num[x])++now;\n}//\u6dfb\u52a0\u65f6\u4fee\u6539\u7b54\u6848\nvoid del(int x){\n    if(num[x] > n)return;\n\tif(cnt[num[x]]-- == num[x])--now;\n\tif(cnt[num[x]] == num[x])++now;\n}//\u5220\u9664\u65f6\u4fee\u6539\u7b54\u6848\nsigned main(){//\u6734\u7d20\u83ab\u961f\n\tn = read(), m = read();\n\tfor(int i = 1; i <= n; i++)num[i] = read();\n\tfor(int i = 1; i <= m; i++)q[i].l = read(), q[i].r = read(), q[i].id = i;\n\tlen = sqrt(n);\n\tbnum = (int)((double)n / len + 0.5);\n\tfor(int i = 1; i <= bnum; i++)for(int j = (i - 1) * len + 1; j <= i * len; j++)belongs[j] = i;\n\tsort(q + 1, q + 1 + m, cmp);\n\tfor(int i = 1; i <= m; i++){\n\t\tint ql = q[i].l, qr = q[i].r;\n\t\twhile(l > ql)add(--l);\n\t\twhile(l < ql)del(l++);\n\t\twhile(r < qr)add(++r);\n\t\twhile(r > qr)del(r--);\n\t\tans[q[i].id] = now;\n\t}\n\tfor(int i = 1; i <= m; i++)cout << ans[i] << \"\\n\";\n}\n```",
        "postTime": 1598966066,
        "uid": 209547,
        "name": "infinities",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF220B \u3010Little Elephant and Array\u3011"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://xiaohuang888.github.io/2019/08/05/%E3%80%8E%E9%A2%98%E8%A7%A3%E3%80%8FCodeforces220B%20Little%20Elephant%20and%20Array)\n\n### Solution\n\n\u6211\u4eec\u5148\u770b\u9898\u76ee\uff0c\u53d1\u73b0\u53ea\u6709\u67e5\u8be2\uff0c\u6ca1\u6709\u4fee\u6539\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u666e\u901a\u7684\u83ab\u961f\u89e3\u51b3\u3002\n\n\u9898\u76ee\u4e2d\u7684$a_i$\u7684\u8303\u56f4\u662f$\\in [1, 10^9]$\uff0c\u800c\u6570\u7684\u603b\u6570\u7684\u8303\u56f4\u662f$\\in [1, 10^5]$\uff0c\u6240\u4ee5\u5f53\u8fd9\u4e2a\u6570\u5927\u4e8e$10^5$\u4e86\uff0c\u8fd9\u4e2a\u6570\u5c31\u4e0d\u53ef\u80fd\u4e3a\u6240\u6c42\u7684$x$\u5ffd\u7565\u8fd9\u4e2a\u6570\u540e\u5c31\u4e0d\u7528\u8fdb\u884c\u79bb\u6563\u5316\u4e86\u3002\n\n### Code\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n\nusing namespace std;\n\nconst int MAXN = 100005;\nint n, m, nowans, a[MAXN], bl[MAXN], ans[MAXN], cnt[MAXN];\nstruct node {\n    int l, r, id;\n    bool operator < (const node &x) const {//\u6392\u5e8f\u7684\u89c4\u5219\n        return bl[l] == bl[x.l] ? r < x.r : bl[l] < bl[x.l];\n    }\n} info[MAXN];\ninline void add(int x) {\n    if (a[x] > n) return ;//\u5982\u679c\u6570\u503c\u8d85\u4e86n\u7684\u8303\u56f4\u5c31\u9000\u51fa\n    if (cnt[a[x]] == a[x]) nowans--;\n    cnt[a[x]]++;\n    if (cnt[a[x]] == a[x]) nowans++;\n}\ninline void dec(int x) {\n    if (a[x] > n) return ;\n    if (cnt[a[x]] == a[x]) nowans--;\n    cnt[a[x]]--;\n    if (cnt[a[x]] == a[x]) nowans++;\n}\nint main() {\n    scanf(\"%d%d\", &n, &m);\n    int block = (int)sqrt(n);\n    for (int i = 1; i <= n; i++) {\n        scanf(\"%d\", &a[i]);\n        bl[i] = i / block;\n    }\n    for (int i = 1; i <= m; i++) {\n        scanf(\"%d%d\", &info[i].l, &info[i].r);//\u83ab\u961f\u662f\u79bb\u7ebf\u7b97\u6cd5\uff0c\u9700\u8981\u8bb0\u5f55\u8be2\u95ee\u7684\u5de6\u53f3\u7aef\u70b9\n        info[i].id = i;//\u8bb0\u5f55\u6bcf\u4e2a\u8be2\u95ee\u7684\u7f16\u53f7\n    }\n    sort(info + 1, info + m + 1);\n    memset(cnt, 0, sizeof(cnt));\n    int    l = 1, r = 0;\n    for (int i = 1; i <= m; i++) {//\u83ab\u961f\n        while (l < info[i].l) dec(l++);\n        while (l > info[i].l) add(--l);\n        while (r < info[i].r) add(++r);\n        while (r > info[i].r) dec(r--);\n        ans[info[i].id] = nowans;\n    }\n    for (int i = 1; i <= m; i++)\n        printf(\"%d\\n\", ans[i]);\n    return 0;\n}\n```",
        "postTime": 1564973921,
        "uid": 19729,
        "name": "xiaohuang",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF220B \u3010Little Elephant and Array\u3011"
    },
    {
        "content": "**CF220B Little Elephant and Array**      \n~~\u5c0f\u5c0f\u83ab\u961f~~    \n`        \n\u9898\u76ee\u63cf\u8ff0    \n\u5c0f\u8c61\u559c\u6b22\u548c\u6570\u7ec4\u73a9\u3002\u73b0\u5728\u6709\u4e00\u4e2a\u6570\u7ec4a\uff0c\u542b\u6709n\u4e2a\u6b63\u6574\u6570\uff0c\u8bb0\u7b2ci\u4e2a\u6570\u4e3aai      \n\u73b0\u5728\u6709m\u4e2a\u8be2\u95ee\uff0c\u6bcf\u4e2a\u8be2\u95ee\u5305\u542b\u4e24\u4e2a\u6b63\u6574\u6570lj\u548crj(1<=lj<=rj<=n)\uff0c\u5c0f\u8c61\u60f3\u77e5\u9053\u5728Alj\u5230Arj\u4e4b\u4e2d\u6709\u591a\u5c11\u4e2a\u6570x\uff0c\u5176\u51fa\u73b0\u6b21\u6570\u4e5f\u4e3ax     \n\u8f93\u5165\u683c\u5f0f    \n\u7b2c\u4e00\u884cn\u548cm\uff0cn\u8868\u793a\u6570\u7ec4\u5927\u5c0f\uff0cm\u8868\u793a\u8be2\u95ee\u4e2a\u6570\uff0c\u4e0b\u4e00\u884c\u4e3a\u6570\u7ec4\u7684\u503c\uff0c\u518d\u4e0bm\u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6570lj\u548crj\uff0c\u63cf\u8ff0\u5982\u9898\u9762    \n\u8f93\u51fa\u683c\u5f0f     \n\u5171m\u884c\uff0c\u6bcf\u884c\u4e00\u4e2a\u6570\uff0c\u8868\u793a\u7b54\u6848    \n`    \neasy or not?        \n\u5176\u5b9e\u5f88\u7b80\u5355        \n\u5bf9\u4e8eadd\u64cd\u4f5c\uff0c\u5982\u679c\u539f\u672c\u5b83\u662f\u7b26\u5408\u7684\uff0c\u90a3\u4e48ans--\uff1b\u5982\u679c\u73b0\u5728\u7b26\u5408\u4e86\uff0c\u90a3\u4e48ans++     \n\u5bf9\u4e8edel\u64cd\u4f5c\uff0c\u5982\u679c\u539f\u672c\u5b83\u662f\u7b26\u5408\u7684\uff0c\u90a3\u4e48ans--\uff1b\u5982\u679c\u73b0\u5728\u7b26\u5408\u4e86\uff0c\u90a3\u4e48ans++     \n\u7136\u540e\u5c31\u662f\u666e\u901a\u7684\u83ab\u961f     \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=100005;\nstruct node{\n    int l,r;\n    int Rk;\n}s[N];\nint n,m;\nint col[N];\nint happen[N];\nint b[N];\nint l,r;\nint u;\nint ans=0;\nint anw[N];\nbool cmp(node x,node y){\n    if(b[x.l]==b[y.l]) return x.r<y.r;\n    return x.l<y.l;\n}\nint main(){\n    while(~scanf(\"%d%d\",&n,&m)){\n        memset(anw,0,sizeof(anw));\n        memset(happen,0,sizeof(happen));\n        ans=0;\n        u=sqrt(n);\n        for(int i=1;i<=n;i++) b[i]=(i/u)+1;\n        for(int i=1;i<=n;i++){\n            scanf(\"%d\",&col[i]);\n            if(col[i]>n) col[i]=-1;//\u5982\u679c\u5927\u4e8en\u4e86\u5c31\u80af\u5b9a\u4e0d\u80fd\u6210\u4e3a\u7b54\u6848 \n        }\n        for(int i=1;i<=m;i++){\n            scanf(\"%d%d\",&s[i].l,&s[i].r);\n            s[i].Rk=i;\n        }\n        sort(s+1,s+m+1,cmp);\n        for(int i=1;i<=m;i++){\n            if(i==1){\n                for(int j=s[i].l;j<=s[i].r;j++){\n                    happen[col[j]]++;\n                    if(happen[col[j]]==col[j]) ans++;\n                    if(happen[col[j]]==col[j]+1) ans--;\n                }\n                l=s[i].l;\n                r=s[i].r;\n            }\n            else{\n                while(l<s[i].l){\n                    l++;\n                    happen[col[l-1]]--;\n                    if(happen[col[l-1]]==col[l-1]) ans++;\n                    if(happen[col[l-1]]==col[l-1]-1) ans--;\n                }\n                while(l>s[i].l){\n                    l--;\n                    happen[col[l]]++;\n                    if(happen[col[l]]==col[l]) ans++;\n                    if(happen[col[l]]==col[l]+1) ans--;\n                }\n                while(r<s[i].r){\n                    r++;\n                    happen[col[r]]++;\n                    if(happen[col[r]]==col[r]) ans++;\n                    if(happen[col[r]]==col[r]+1) ans--;\n                }\n                while(r>s[i].r){\n                    r--;\n                    happen[col[r+1]]--;\n                    if(happen[col[r+1]]==col[r+1]) ans++;\n                    if(happen[col[r+1]]==col[r+1]-1) ans--;\n                }\n            }\n            anw[s[i].Rk]=ans;\n        }\n        for(int i=1;i<=m;i++){\n            printf(\"%d\\n\",anw[i]);\n        }\n    }\n    return 0;\n} \n```\n\n\n\n\n",
        "postTime": 1548989983,
        "uid": 61757,
        "name": "Seanq",
        "ccfLevel": 0,
        "title": "CF220B Little Elephant and Array"
    }
]