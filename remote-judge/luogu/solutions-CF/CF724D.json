[
    {
        "content": "\u8fd9\u9898\u9700\u8981\u4ece\u539f\u5e8f\u5217\u4e2d\u9009\u82e5\u5e72\u4e2a\u5b57\u7b26\uff0c\u4e14\u6bcf\u4e2a\u5b57\u7b26\u4e4b\u95f4\u7684\u95f4\u9694\u4e0d\u80fd\u8d85\u8fc7 m \uff0c\u8981\u4f7f**\u6392\u5217\u540e**\u9009\u4e2d\u5b57\u7b26\u5b57\u5178\u5e8f\u6700\u5c0f\u3002\n\n\u663e\u7136\uff0c\u60f3\u8981\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u5982\u679c\u6709 a \uff0c\u90a3\u6211\u4eec\u4e00\u5b9a\u8981\u9009\u4e0a\uff0c\u56e0\u4e3a\u6392\u5217\u540e a \u80af\u5b9a\u5728\u6700\u524d\u9762\u4f7f\u5b57\u5178\u5e8f\u5c0f\u3002\u540c\u6837\u5730\uff0c\u5982\u679c\u539f\u5e8f\u5217\u4e2d\u6ca1\u6709 a ,\u6211\u4eec\u5c31\u8981\u53bb\u627e b \uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\n\n\u5982\u679c\u539f\u5e8f\u5217\u4e2d\u6709 a ,\u4f46\u9009\u4e0a\u6240\u6709\u7684 a \u540e\u9009\u4e2d\u5b57\u7b26\u6700\u5927\u95f4\u9694\u4ecd\u5927\u4e8e m ,\u6211\u4eec\u5e94\u8be5\u9009\u4e0a\u6240\u6709\u7684 a \u540e\u53bb\u627e b ,\u56e0\u4e3a\u5b57\u7b26\u4e32\" $aaabb..b..$ \"\u7684\u5b57\u5178\u5e8f\u4e00\u5b9a\u5c0f\u4e8e\"$aabb..b..$\" ,\u540c\u7406\uff0c\u5728\u627e\u5b8c\u4e00\u4e2a\u5b57\u6bcd\u540e\u95f4\u9694\u5927\u4e8e m ,\u5c31\u5e94\u8be5\u628a\u5f53\u524d\u5b57\u6bcd\u5168\u90e8\u9009\u4e0a\u3002\n\n\u5f53\u4e00\u79cd\u5b57\u6bcd\u9009\u5b8c\u540e\u53d1\u73b0\u6700\u5927\u95f4\u9694\u5c0f\u4e8e\u7b49\u4e8e m ,\u6211\u4eec\u5e94\u8be5\u5728\u4fdd\u8bc1\u6700\u5927\u95f4\u9694\u5c0f\u4e8e\u7b49\u4e8e m \u7684\u60c5\u51b5\u4e0b\u5c3d\u91cf\u5220\u9664\u5b57\u6bcd\u3002\u56e0\u4e3a $abbb$ \u7684\u5b57\u5178\u5e8f\u5927\u4e8e $abb$ \u3002\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u4f9d\u6b21\u641c\u7d22\u6bcf\u4e2a\u5b57\u6bcd\uff0c\u5982\u679c\u5168\u9009\u4e0a\u8fd8\u662f\u4e0d\u884c\uff0c\u90a3\u5c31\u5168\u9009\u4e0a\u5e76\u627e\u4e0b\u4e00\u4e2a\u5b57\u6bcd\u3002\u5426\u5219\u5c3d\u91cf\u5220\u9664\u3002\u6700\u540e\u8f93\u51fa\u9009\u4e2d\u5e8f\u5217\u3002",
        "postTime": 1582939425,
        "uid": 235658,
        "name": "llzzxx712",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF724D \u3010Dense Subsequence\u3011"
    },
    {
        "content": "\u8981\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u663e\u7136\u8d2a\u5fc3\u3002\n\n\u9996\u5148\u6211\u4eec\u628a\u5b57\u7b26\u4e32 `a` \u5168\u9009\u4e0a\u3002\u5982\u679c\u6709\u4e24\u4e2a `a` \u76f8\u8ddd\u8d85\u8fc7 $n$\uff0c\u90a3\u4e48\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u7ee7\u7eed\u9009 `b`\u3002\u76f4\u5230\u7b26\u5408\u6761\u4ef6\u4e3a\u6b62\u3002\n\n\u6700\u540e\u6211\u4eec\u5f97\u5230\u7684\u4e1c\u897f\u91cc\u9762\u53ef\u80fd\u6709\u591a\u4f59\u7684\u3002\u6211\u4eec\u679a\u4e3e\u4e00\u904d\uff0c\u80fd\u5220\u6389\u5c31\u5220\u6389\uff0c\u4e0d\u80fd\u5220\u6389\u5c31\u522b\u5220\u3002\n\n\u5177\u4f53\u53ef\u4ee5\u7528 `vector` \u5b9e\u73b0\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int maxn = 1e5 + 10;\nconst int maxd = 26;\ntypedef vector<int>::iterator it;\n\nint n, m;\nchar s[maxn];\nchar t[maxn];\nint ind[maxd][maxn];\nvector<int> vec;\nint ed;\n\nint main() {\n    cin >> m;\n    cin >> (s + 1);\n    n = strlen(s + 1);\n    for (int i = 1; i <= n; i++) ind[s[i] - 'a'][++ind[s[i] - 'a'][0]] = i;\n    for (int i = 0; i < maxd; i++) {\n        for (int j = 1; j <= ind[i][0]; j++) {\n            it pos = lower_bound(vec.begin(), vec.end(), ind[i][j]);\n            vec.insert(pos, ind[i][j]);\n        }\n        bool flag = true;\n        for (int j = 1; j < vec.size(); j++) {\n            if (vec[j] - vec[j - 1] > m) {\n                flag = false;\n                break;\n            }\n        }\n        if (!vec.size()) {\n            if (n + 1 > m) continue;\n            else {\n                ed = i;\n                break;\n            }\n        }\n        if (vec[0] > m || n + 1 - vec[vec.size() - 1] > m) continue;\n        if (flag) {\n            ed = i;\n            break;\n        }\n    }\n    for (int i = vec.size() - 1; i >= 0; i--) {\n        it pos = vec.begin() + i;\n        int val = vec[i];\n        if (s[val] != 'a' + ed) continue;\n        vec.erase(pos);\n        bool flag = true;\n        for (int j = 1; j < vec.size(); j++) {\n            if (vec[j] - vec[j - 1] > m) {\n                flag = false;\n                break;\n            }\n        }\n        if (!vec.size()) {\n            if (n + 1 > m) {\n                vec.insert(pos, val);\n                continue;\n            } else {\n                cout << val << endl;\n                continue;\n            }\n        }\n        if (vec[0] > m || n + 1 - vec[vec.size() - 1] > m) {\n            flag = false;\n        }\n        if (!flag) {\n            vec.insert(pos, val);\n            continue;\n        }\n    }\n    for (int i = 0; i < vec.size(); i++) {\n        t[i + 1] = s[vec[i]];\n    }\n    sort(t + 1, t + 1 + vec.size());\n    for (int i = 0; i < vec.size(); i++) {\n        cout << t[i + 1];\n    }\n    return 0;\n}\n\n```",
        "postTime": 1671503567,
        "uid": 362750,
        "name": "TernaryTree",
        "ccfLevel": 0,
        "title": "CF724D Dense Subsequence \u9898\u89e3"
    },
    {
        "content": "2021.12.11:\u6700\u8fd1\u5495\u503c\u7206\u8dcc\uff0c\u8d76\u5feb\u6765\u6c34\u4e00\u7bc7\u9898\u89e3\u6da8\u6da8\u5495\u503c......\n\n## CF724D \u9898\u89e3\n\n\u4e00\u9053\u4e0d\u9519\u7684\u601d\u8def\u9898\u3002\n#### \u9898\u76ee\u5927\u610f\uff1a\n\n\u7ed9\u5b9a\u4e00\u4e2a\u4ec5\u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u7684\u5b57\u7b26\u4e32 $s$ \u548c\u4e00\u4e2a\u6574\u6570 $m$\uff0c\u8981\u6c42\u4f60\u4ece $s$ \u4e2d\u9009\u51fa\u4e00\u4e9b\u5b57\u7b26\uff0c\u6ee1\u8db3\u9009\u51fa\u7684\u8fd9\u4e9b\u5b57\u7b26\u5728\u539f\u4e32\u4e2d\u4e24\u4e24\u95f4\u9694\u4e0d\u8d85\u8fc7 $m$\uff0c\u4e14\u5c06\u9009\u51fa\u7684\u5b57\u7b26\u6392\u5e8f\u540e\uff0c**\u5b57\u5178\u5e8f\u6700\u5c0f**\u3002\u8f93\u51fa\u6392\u5217\u540e\u7684\u9009\u51fa\u7684\u5b57\u7b26\u4e32\u3002\n\n#### \u5927\u4f53\u601d\u8def\uff1a\n\n\u8003\u8651\u8d2a\u5fc3\uff1a\u4ece $\\texttt{a}$ \u4f9d\u6b21\u904d\u5386\u5230 $\\texttt{z}$\uff0c\u6bcf\u6b21\u904d\u5386\u5230\u4e00\u4e2a\u5b57\u6bcd\uff0c\u5c31\u628a\u539f\u4e32\u4e2d\u6240\u6709\u8be5\u5b57\u6bcd\u6807\u8bb0\u4e0a\uff0c\u7136\u540e\u5224\u65ad\u662f\u5426\u53ef\u884c\uff1a\u5982\u679c\u4e0d\u53ef\u884c\u5c31\u7ee7\u7eed\u627e\u4e0b\u4e00\u4e2a\u5b57\u6bcd\uff0c\u5426\u5219\u5c3d\u91cf\u5220\u9664\u8be5\u5b57\u6bcd\uff0c\u5220\u5b8c\u540e\u8f93\u51fa\u5373\u53ef\u3002\n\n#### \u6b63\u786e\u6027\u8bc1\u660e\uff1a\n\n~~\u611f\u6027\u7406\u89e3~~\n\n\u7531\u4e8e $\\texttt{aab}$ \u6bd4 $\\texttt{abb}$ \u5b57\u5178\u5e8f\u5c0f\uff0c\u6240\u4ee5\u5e94\u5c3d\u91cf\u591a\u9009\u5b57\u5178\u5e8f\u5c0f\u7684\u5b57\u6bcd\u3002\n\n\u7531\u4e8e $\\texttt{abc}$ \u6bd4 $\\texttt{abcc}$ \u5b57\u5178\u5e8f\u5c0f\uff0c\u6240\u4ee5\u5e94\u5c3d\u91cf\u5220\u9664\u6700\u540e\u9009\u4e2d\u7684\u5b57\u6bcd\u3002\n\n------------\n#### \u4ee3\u7801\u7ec6\u8282\uff1a\n\n1. \u52a0\u5b8c\u4e00\u4e2a\u5b57\u6bcd\u540e\u5224\u65ad\u662f\u5426\u53ef\u884c\uff1a\n\n\u7531\u4e8e\u8be5\u64cd\u4f5c\u6700\u591a\u4f1a\u8fdb\u884c $26$ \u6b21\uff0c\u6240\u4ee5 $O(n)$ \u7684\u590d\u6742\u5ea6\u662f\u5b8c\u5168\u53ef\u4ee5\u63a5\u53d7\u7684\u3002\u6240\u4ee5\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u626b\u4e00\u904d\u539f\u4e32\uff0c\u5982\u679c\u6709\u5927\u4e8e\u7b49\u4e8e $m$ \u4e2a\u8fde\u7eed\u7684\u5b57\u7b26\u672a\u88ab\u6807\u8bb0\uff0c\u5c31\u662f\u4e0d\u53ef\u884c\u7684\u3002\n\n2. \u53ef\u884c\u4e4b\u540e\u5982\u4f55\u5c3d\u91cf\u5220\u9664\uff1a\n\n\u5bf9\u4e8e\u5df2\u6807\u8bb0\u7684\u6570\u5efa\u7acb\u4e00\u4e2a\u53cc\u7aef\u94fe\u8868\u3002\u5982\u679c\u8be5\u5b57\u7b26\u662f\u4f60\u60f3\u5220\u9664\u7684\uff08\u6b63\u5728\u904d\u5386\uff09\u90a3\u4e2a\u5b57\u7b26\uff0c\u4e14 $nex_i-lst_i\\leq m$\uff0c\u90a3\u5c31\u628a\u5b83\u5220\u6389\u5373\u53ef\uff1b\u76f8\u4fe1\u505a\u5230\u8fd9\u4e2a\u9898\u7684\u4eba\uff0c\u94fe\u8868\u7684\u5220\u9664\u64cd\u4f5c\u5565\u7684\u5e94\u8be5\u90fd\u4f1a\u4e86\u5427\uff01\n\n----------\n#### \u4ee3\u7801\u5b9e\u73b0\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst ll N=1e5+10;\nchar s[N];\nll m,n,bj[N],t[27],k=-1,nex[N],las[N];\nbool pd(){\n\tll lx=0;\n\tfor(int i=0;i<n;i++){\n\t\tif(bj[i])\tlx=0;\n\t\telse lx++;\n\t\tif(lx>=m)\treturn false;\n\t}\n\treturn true;\n}\nsigned main(){\n\tscanf(\"%lld %s\",&m,s);\n\tn=strlen(s);\n\tfor(char c='a';c<='z';c++){\n\t\tfor(int i=0;i<n;i++){\n\t\t\tif(s[i]==c)\tbj[i]=1;\n\t\t}\n\t\tif(pd()){\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tif(bj[i]==1){\n\t\t\t\t\tnex[k]=i;\n\t\t\t\t\tnex[i]=n;\n\t\t\t\t\tlas[i]=k;\n\t\t\t\t\tk=i;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tif(s[i]==c&&bj[i]==1){\n\t\t\t\t\tif(nex[i]-las[i]<=m){\n\t\t\t\t\t\tnex[las[i]]=nex[i];\n\t\t\t\t\t\tlas[nex[i]]=las[i];\n\t\t\t\t\t\tbj[i]=0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(char c='a';c<='z';c++){\n\t\tfor(int i=0;i<n;i++){\n\t\t\tif(s[i]==c&&bj[i]==1)\tcout<<c;\n\t\t}\n\t}\n\treturn 0;\n}\n\n```\n-----------\n#### \u4f20\u9001\u95e8\uff1a\n\n[\u6211\u7684\u9898\u4ea4\u8bb0\u5f55](https://www.luogu.com.cn/record/64781246)|[\u6d1b\u8c37\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/CF724D)|[CF \u9898\u76ee\u94fe\u63a5](http://codeforces.com/problemset/problem/724/D)\n\n-----------\n\u611f\u8c22\u9605\u8bfb\uff01\u849f\u84bb\u6587\u7b14\u4e0d\u597d\uff0c\u5927\u4f6c\u8f7b\u55b7\uff01\uff01\uff01\n",
        "postTime": 1639210508,
        "uid": 310801,
        "name": "Spouter_27",
        "ccfLevel": 7,
        "title": "CF724D Dense Subsequence\u9898\u89e3"
    }
]