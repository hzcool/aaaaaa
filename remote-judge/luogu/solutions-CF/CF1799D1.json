[
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n\u4f60\u6709\u4e24\u4e2a CPU\uff0c$n$ \u4e2a\u7a0b\u5e8f\u8981\u8fd0\u884c\uff0c\u603b\u5171 $k$ \u79cd\u7a0b\u5e8f\u9700\u8981\u8fd0\u884c\u3002\u5728\u4e0d\u540c\u6761\u4ef6\u4e0b\u7a0b\u5e8f\u8fd0\u884c\u7684\u65f6\u95f4\u4e0d\u540c\uff0c\u4f46\u8fde\u7eed\u8fd0\u884c\u7684\u65f6\u95f4\u6ee1\u8db3\u5c0f\u4e8e\u7b49\u4e8e\u5728\u4e0d\u8fde\u7eed\u72b6\u6001\u4e0b\u8fd0\u884c\u7684\u65f6\u95f4\u3002\n\n## \u7b80\u8981\u5206\u6790\n\n\u5f88\u5bb9\u6613\u60f3\u5230 dp\u3002\n\n\u6700\u5bb9\u6613\u60f3\u5230\u7684\u72b6\u6001\u662f $dp_{i,j,k}$ \u8868\u793a\u5f53\u524d\u5904\u7406\u5230\u7b2c $i$ \u4e2a\u7a0b\u5e8f\uff0cCPU1 \u6267\u884c\u7684\u6700\u540e\u4e00\u4e2a\u7a0b\u5e8f\u79cd\u7c7b\u4e3a $j$\uff0cCPU2 \u6267\u884c\u7684\u6700\u540e\u4e00\u4e2a\u7a0b\u5e8f\u79cd\u7c7b\u4e3a $k$\u3002\n\n\u663e\u7136\u590d\u6742\u5ea6\u70b8\u4e86\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u4e00\u5b9a\u4f1a\u6709\u4e00\u4e2a CPU \u6267\u884c\u7684\u6700\u540e\u4e00\u4e2a\u7a0b\u5e8f\u7684\u79cd\u7c7b\u4e3a $a_{i-1}$\uff0c\u4e8e\u662f\u53ef\u4ee5\u4f18\u5316\u6389\u4e00\u7ef4\u3002\n\n\u8f6c\u79fb\u6309\u7167\u5b9a\u4e49\u8f6c\u79fb\u5373\u53ef\u3002\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n```c++\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n\nusing namespace std;\n\ntypedef long long ll;\nconst ll maxn = 5e3 + 7;\nconst ll INF = 1e9 + 7, MOD = 998244353;\n\ninline ll read() {\n    char cCc;\n    ll xXx = 0, wWw = 1;\n    while (cCc < '0' || cCc > '9')\n        (cCc == '-') && (wWw = -wWw), cCc = getchar();\n    while (cCc >= '0' && cCc <= '9')\n        xXx = (xXx << 1) + (xXx << 3) + (cCc ^ '0'), cCc = getchar();\n    xXx *= wWw;\n    return xXx;\n}\n\ninline void write(ll xXx) {\n    if (xXx < 0)\n        putchar('-'), xXx = -xXx;\n    if (xXx > 9)\n        write(xXx / 10);\n    putchar(xXx % 10 + '0');\n}\n\nll A[maxn], cold[maxn], hot[maxn], dp[maxn][maxn];\n\nvoid solve() {\n    ll n = read(), k = read();\n    for (ll i = 1; i <= n; i++)A[i] = read();\n    for (ll i = 1; i <= k; i++)cold[i] = read();\n    for (ll i = 1; i <= k; i++)hot[i] = read();\n    A[0] = -1;\n    for (ll i = 0; i <= n; i++)\n        for (ll j = 0; j <= k; j++)\n            dp[i][j] = 1e18;\n    dp[1][0] = cold[A[1]];\n    for (ll i = 2; i <= n; i++) {\n        ll first = A[i - 1];\n        for (ll j = 0; j <= k; j++) {\n            dp[i][j] = min(dp[i][j], dp[i - 1][j] + (A[i] == first ? hot[A[i]] : cold[A[i]]));\n            dp[i][first] = min(dp[i][first], dp[i - 1][j] + (A[i] == j ? hot[A[i]] : cold[A[i]]));\n        }\n    }\n    ll ans = 1e18;\n    for (ll i = 0; i <= k; i++)\n        ans = min(ans, dp[n][i]);\n    cout << ans << '\\n';\n}\n\nsigned main() {\n//    freopen(\"code.in\",\"r\",stdin);\n//    freopen(\"code.out\",\"w\",stdout);\n    ll T = read();\n    while (T--)solve();\n    return 0;\n}\n```\n\n\n",
        "postTime": 1677555640,
        "uid": 378222,
        "name": "fakestd",
        "ccfLevel": 0,
        "title": "[CF1799D1] Hot Start Up (easy version) \u9898\u89e3"
    }
]