[
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.org/problem/CF1105D)\n\n\u8fd9\u9898\u601d\u8def\u4e0d\u96be\u60f3\uff0c\u76f4\u63a5\u6309\u7167\u9898\u610f\u6a21\u62df\uff0c\u6bcf\u4e2a\u56de\u5408\u627e\u51fa\u6bcf\u4e2a\u73a9\u5bb6\u80fd\u5230\u8fbe\u7684\u6240\u6709\u7a7a\u683c\uff0c\u628a\u8fd9\u4e9b\u7a7a\u683c\u5168\u90e8\u6807\u8bb0\u4e3a\u4ed6\u7684\u57ce\u5821\u3002\n\n\u7136\u540e\u5c31\u662f\u600e\u4e48\u627e\u7684\u95ee\u9898\u4e86\uff0c\u8fd9\u91cc\u6211\u7528\u7684\u662fBFS\uff0c\u7ed9\u6bcf\u4e2a\u73a9\u5bb6\u5f00\u4e24\u4e2a\u961f\u5217\uff0c\u961f\u52172\u8bb0\u5f55\u8fd9\u4e00\u56de\u5408\u5230\u8fbe\u7684\u6700\u8fdc\u7684\u70b9\uff0c\u4f5c\u4e3a\u4e0b\u4e00\u56de\u5408\u7684\u8d77\u70b9\uff0c\u961f\u52171\u8bb0\u5f55\u5c06\u8981\u904d\u5386\u7684\u70b9\uff0c\u6bcf\u4e2a\u56de\u5408\u5f00\u59cb\u65f6\u53ea\u9700\u5c06\u961f\u52172\u4e2d\u7684\u70b9\u4e22\u5165\u961f\u52171\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,p,a[1005][1005],v[10],cas[10],s,l;//a[i][j]\u8bb0\u5f55i\u884cj\u5217\u7684\u70b9\u7684\u72b6\u6001\uff0cv[i]\u8bb0\u5f55\u73a9\u5bb6i\u6bcf\u56de\u5408\u53ef\u4ee5\u79fb\u52a8\u7684\u8def\u7a0b\uff0ccas[i]\u8bb0\u5f55\u73a9\u5bb6i\u5f53\u524d\u62e5\u6709\u7684\u57ce\u5821\uff0cs\u8bb0\u5f55\u5269\u4f59\u7684\u7a7a\u683c\u6570\uff0cl\u8bb0\u5f55\u5faa\u73af\u6b21\u6570\uff08\u9632\u8d85\u65f6\uff09\nstruct sb//\u8bb0\u5f55\u70b9\u7684\u72b6\u6001\n{\n\tint a,b,s;//a\uff0cb\u8bb0\u5f55\u5750\u6807\uff0cs\u8bb0\u5f55\u5269\u4f59\u79fb\u52a8\u6b21\u6570\n};\nqueue<sb>q1[10],q2[10];//q1\u5373\u63cf\u8ff0\u4e2d\u7684\u961f\u52171\uff0cq2\u7ea7\u63cf\u8ff0\u4e2d\u7684\u961f\u52172\nint main()\n{\n\t//freopen(\"sb.in\",\"r\",stdin);\n\tscanf(\"%d%d%d\",&n,&m,&p);\n\tfor(int i=1;i<=p;i++)scanf(\"%d\",&v[i]);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tchar c[m];\n\t\tscanf(\"%s\",c);\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tif(c[j-1]=='.'){a[i][j]=-2;s++;}//\u5982\u679c\u662f\u7a7a\u683c\u5c31\u5c06\u7a7a\u683c\u6570+1\uff0c\u5c06a[i][j]\u6807\u4e3a-2\n\t\t\telse if(c[j-1]=='#')a[i][j]=-1;//\u5982\u679c\u662f\u5899\u5c31\u5c06a[i][j]\u6807\u4e3a-1\n\t\t\telse {cas[c[j-1]-'0']++;a[i][j]=c[j-1]-'0';q2[c[j-1]-'0'].push(sb{i,j,v[c[j-1]-'0']});}//\u5982\u679c\u662f\u57ce\u5821\u5c31\u5c06a[i][j]\u6807\u4e3a\u8be5\u73a9\u5bb6\uff0c\u5c06\u8be5\u73a9\u5bb6\u7684\u57ce\u5821\u6570+1\uff0c\u5c06\u8be5\u70b9\u63a8\u5165\u961f\u52172\n\t\t}\n\t}\n\tint i=1;//i\u8868\u793a\u5f53\u524d\u662f\u73a9\u5bb6i\u7684\u56de\u5408\n\twhile(1)//\u5f00\u59cb\u6a21\u62df\n\t{\n\t\tq1[i]=q2[i];//\u6bcf\u4e2a\u56de\u5408\u5f00\u59cb\u65f6\u5c06\u961f\u52172\u4e2d\u7684\u70b9\u4e22\u5165\u961f\u52171\n\t\twhile(!q2[i].empty())q2[i].pop();//\u6e05\u7a7a\u961f\u52172\n\t\twhile(!q1[i].empty())//\u5f00\u59cb\u5e7f\u641c\n\t\t{\n\t\t\tsb kkk=q1[i].front();\n\t\t\tq1[i].pop();\n\t\t\tif(kkk.s==0){q2[i].push(sb{kkk.a,kkk.b,v[i]});continue;}//\u5982\u679c\u79fb\u52a8\u4e0d\u4e86\u4e86\u5c31\u5c06\u8be5\u70b9\u63a8\u5165\u961f\u52172\uff0c\u4f5c\u4e3a\u4e0b\u4e00\u56de\u5408\u7684\u8d77\u70b9\n\t\t\tif(a[kkk.a-1][kkk.b]==-2){cas[i]++;s--;if(s==0)break;q1[i].push(sb{kkk.a-1,kkk.b,kkk.s-1});a[kkk.a-1][kkk.b]=i;}//\u5982\u679c\u4e0a\u4e0b\u5de6\u53f3\u8fd8\u672a\u904d\u5386\u5c31\u904d\u5386,\u5e76\u5c06\u7a7a\u683c\u6570\u51cf\u4e00\uff0c\u5c06\u8be5\u73a9\u5bb6\u7684\u57ce\u5821\u6570+1\n\t\t\tif(a[kkk.a][kkk.b-1]==-2){cas[i]++;s--;if(s==0)break;q1[i].push(sb{kkk.a,kkk.b-1,kkk.s-1});a[kkk.a][kkk.b-1]=i;}\n\t\t\tif(a[kkk.a+1][kkk.b]==-2){cas[i]++;s--;if(s==0)break;q1[i].push(sb{kkk.a+1,kkk.b,kkk.s-1});a[kkk.a+1][kkk.b]=i;}\n\t\t\tif(a[kkk.a][kkk.b+1]==-2){cas[i]++;s--;if(s==0)break;q1[i].push(sb{kkk.a,kkk.b+1,kkk.s-1});a[kkk.a][kkk.b+1]=i;}\n\t\t}\n\t\tif(s==0)break;//\u5982\u679c\u6ca1\u6709\u7a7a\u683c\u4e86\u5c31\u9000\u51fa\n\t\ti=i%p+1;//\u6362\u6210\u4e0b\u4e00\u4e2a\u73a9\u5bb6\n\t\tl++;//\u5faa\u73af\u6b21\u6570+1\n\t\tif(l==10000000)break;//\u6e38\u620f\u6b21\u6570\u4e0d\u53ef\u80fd\u8d85\u8fc710000000\uff0c\u56e0\u6b64\u5982\u679c\u8d85\u51fa\u5c31\u8bf4\u660e\u662f\u73a9\u5bb6\u88ab\u5899\u5361\u4f4f\u4e86\uff0c\u76f4\u63a5\u9000\u51fa\u9632TLE\n\t}\n\tfor(int i=1;i<=p;i++)printf(\"%d \",cas[i]);//\u8f93\u51fa\n}\n```\n![](https://www.luogu.org/images/congratulation.png)",
        "postTime": 1565183433,
        "uid": 60075,
        "name": "pzc2004",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1105D \u3010Kilani and the Game\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n\u7ed9\u51fa\u4e00\u4e2a $n\\times m$ \u7684\u5730\u56fe\uff0c\u5e76\u7ed9\u51fa\u73a9\u5bb6\u4e2a\u6570 $p$ \uff0c\u6bcf\u4e2a\u73a9\u5bb6\u6709\u4e00\u4e2a\u901f\u5ea6 $s_i$\u3002\u5730\u56fe\u4e0a\u7684\u4e00\u70b9\u82e5\u662f `#` \uff0c\u4ee3\u8868\u6709\u969c\u788d\uff1b\u82e5\u662f `.` \uff0c\u4ee3\u8868\u662f\u7a7a\u5730\uff1b\u82e5\u662f\u6570\u5b57\uff0c\u5219\u4ee3\u8868\u662f\u4e00\u540d\u73a9\u5bb6\u7684\u57ce\u5821\uff0c\u6570\u5b57\u5373\u662f\u8be5\u73a9\u5bb6\u7684\u7f16\u53f7\u3002\u6bcf\u4e2a\u73a9\u5bb6\u6309\u7167\u987a\u5e8f\u8f6e\u6d41\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u627e\u5230\u6240\u6709\u4ece\u6240\u6709\u81ea\u5df1\u7684\u57ce\u5821\u5f00\u59cb\uff0c\u80fd\u5728 $s_i$ \u6b65\u53ca\u4e4b\u5185\uff0c\u53ea\u5f80\u4e0a\u4e0b\u5de6\u53f3\u65b9\u5411\u8d70\uff0c\u4e0d\u7ecf\u8fc7\u548c\u5230\u8fbe\u969c\u788d\u548c\u5176\u4ed6\u73a9\u5bb6\u7684\u57ce\u5821\u6240\u80fd\u5230\u8fbe\u7684\u70b9\uff0c\u6240\u80fd\u5230\u8fbe\u7684\u70b9\uff0c\u5e76\u5728\u8fd9\u4e9b\u70b9\u4e0a\u653e\u4e0a\u81ea\u5df1\u7684\u57ce\u5821\u3002\u76f4\u5230\u6ca1\u6709\u73a9\u5bb6\u80fd\u518d\u6269\u5f20\u81ea\u5df1\u7684\u9886\u571f\u4e3a\u6b62\u3002\u8f93\u51fa\u6bcf\u540d\u73a9\u5bb6\u57ce\u5821\u7684\u4e2a\u6570\u3002\n\n$1\\le n,m\\le 1000,1\\le p\\le 9,1\\le s_i\\le 10^9$\n\n## \u89e3\u9898\u601d\u8def\n\n\u8fd9\u662f\u4e00\u9053\u5f88\u88f8\u7684 BFS \u9898\u3002\u552f\u4e00\u7684\u95ee\u9898\u5c31\u662f\u4fdd\u8bc1\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n\n\u9996\u5148\uff0c\u5982\u679c\u4e00\u4e2a\u4eba\u7684\u9886\u5730\u65e0\u6cd5\u7ee7\u7eed\u6269\u5c55\uff0c\u5219\u505c\u6b62\u6269\u5c55\uff08\u4e0d\u7ba1 $s_i$ \u6709\u591a\u5927\uff09\u3002\n\n\u5176\u6b21\uff0c\u5982\u679c\u4ece\u8fd9\u4e2a\u70b9\u5f00\u59cb\u5df2\u7ecf\u88ab\u6269\u5c55\u8fc7\uff0c\u5219\u4e0d\u518d\u4ece\u8fd9\u4e2a\u70b9\u5f00\u59cb\u6269\u5c55\u3002\u56e0\u4e3a\u518d\u6b21\u6269\u5c55\u6ca1\u6709\u610f\u4e49\uff0c\u8fd9\u6837\u505a\u4e5f\u4fdd\u8bc1\u4e86\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n\n\u53ea\u9700\u5f00 $9$ \u4e2a `queue` \uff0c\u8f6e\u6d41 BFS \uff0c\u5171\u7528\u4e00\u4e2a\u5730\u56fe\uff0c\u4fdd\u8bc1\u4e0d\u91cd\u590d\u5728\u8282\u70b9\u4e0a\u5efa\u57ce\u5821\uff0c\u6a21\u62df\u6269\u5c55\u5c31\u884c\u4e86\u3002\n\n\u5728\u5177\u4f53\u7684\u4ee3\u7801\u5b9e\u73b0\u4e2d\uff0c\u53ef\u4ee5\u6bcf\u6b21\u6309\u7167\u901f\u5ea6\u4e3a $1$ \u7684\u6269\u5c55\uff0c\u901f\u5ea6\u4e3a $s_i$ \u5c31\u6269\u5c55 $s_i$ \u6b21\uff0c\u5982\u679c\u4e2d\u95f4\u4e0d\u80fd\u7ee7\u7eed\u6269\u5c55\u5219\u505c\u6b62\u3002\n\n\u7531\u4e8e\u6bcf\u4e2a\u70b9\u90fd\u53ea\u4f1a\u88ab\u6269\u5c55\u5e76\u8bbf\u95ee\u5230\u4e00\u6b21\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(nm)$ \u7684\u3002\u7a7a\u95f4\u590d\u6742\u5ea6\u4e5f\u662f $O(nm)$ \u7684\u3002\n\n## \u4ee3\u7801\u5c55\u793a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nconst int maxn=1010;\nconst int dx[4]={1,-1,0,0},dy[4]={0,0,1,-1};\ntypedef long long ll;\nint n,m,p,s[maxn],ans[maxn];\nchar mp[maxn][maxn];\nstruct node{int x,y,t;}x;\nqueue<node>q[10];\nint main()\n{\n\tmemset(s,'#',sizeof s);\n\tscanf(\"%d%d%d\",&n,&m,&p);\n\tfor(int i=1;i<=p;i++)scanf(\"%d\",s+i);\n\tfor(int i=1;i<=n;i++)for(int j=1;j<=m;j++)\n\t{\n\t\tscanf(\" %c\",mp[i]+j);\n\t\tif(mp[i][j]>='1'&&mp[i][j]<='9')\n\t\t{\n\t\t\tq[mp[i][j]-'0'].push((node){i,j,0});\n\t\t\tans[mp[i][j]-'0']++;\n\t\t}\n\t}\n\twhile(1)\n\t{\n\t\tbool tf=true;\n\t\tfor(int i=1;i<=p;i++)if(!q[i].empty())tf=false;\n\t\tif(tf)break;\n\t\t//for(int i=1;i<=n;i++){for(int j=1;j<=m;j++)printf(\"%c\",mp[i][j]);printf(\"\\n\");}\n\t\t//getchar();\n\t\tfor(int i=1;i<=p;i++)if(!q[i].empty())\n\t\t{\n\t\t\tint t=s[i];\n\t\t\twhile(t--)\n\t\t\t{\n\t\t\tif(q[i].empty())break;\n\t\t\tint col=q[i].front().t;\n\t\t\twhile(!q[i].empty())\n\t\t\t{\n\t\t\t\tx=q[i].front();\n\t\t\t\tif(x.t!=col)break;\n\t\t\t\tq[i].pop();\n\t\t\t\tfor(int j=0;j<4;j++)\n\t\t\t\t{\n\t\t\t\t\tint tx=x.x+dx[j],ty=x.y+dy[j];\n\t\t\t\t\tif(mp[tx][ty]=='.')\n\t\t\t\t\t{\n\t\t\t\t\t\tmp[tx][ty]=i+'0';\n\t\t\t\t\t\tans[i]++;\n\t\t\t\t\t\tq[i].push((node){tx,ty,col+1});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=p;i++)printf(\"%d \",ans[i]);printf(\"\\n\");\n\treturn 0;\n}\n```",
        "postTime": 1548073545,
        "uid": 43486,
        "name": "hsfzLZH1",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1105D \u3010Kilani and the Game\u3011"
    },
    {
        "content": "[\u539f\u9898\u94fe\u63a5](https://codeforces.com/contest/1105/problem/D)\n\n#### \u89e3\u9898\u601d\u8def\n\u633a\u88f8\u7684BFS+\u6a21\u62df\uff0c\u53ea\u53ef\u60dc\u6211\u5728\u8003\u573a\u4e0a\u90fd\u6ca1\u6765\u5f97\u53ca\u770b\u8fd9\u9053\u9898\u4e00\u773c\u3002\n\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u5f00p\u4e2a\u961f\u5217\u5206\u522b\u8fdb\u884cBFS\uff0c\u6bcf\u6b21BFS\u52a0\u5165\u4e00\u5c42\u70b9\uff0cBFS $s[i]$\u6b21\uff0c\u4e00\u8f6e\u4e0b\u6765\u5982\u679c\u8fd8\u6709\u961f\u5217\u975e\u7a7a\u5c31\u518d\u6765\u4e00\u8f6e\uff0c\u4e0d\u65adBFS\u76f4\u5230\u6240\u6709\u7684\u961f\u5217\u90fd\u7a7a\u4e86\u4e3a\u6b62\u3002\n\n\u6ce8\u610f\u5c0f\u5751\uff1a\n1. \u4e00\u4e2a\u73a9\u5bb6\u4e0d\u6b62\u53c8\u4e00\u4e2a\u57ce\u5821\uff08\u82f1\u8bed\u592a\u5dee\uff0c\u8bfb\u82f1\u6587\u9898\u9762\u603b\u662f\u51fa\u9505\uff09\n2. \u4e00\u65e6\u6709\u4e00\u4e2a\u961f\u5217\u7a7a\u4e86\uff0c\u5c31\u6807\u8bb0\u4e0b\u6765\u8fd9\u4e2a\u73a9\u5bb6\uff0c\u4ee5\u540e\u4e0d\u8981\u6269\u5c55\uff0c\u5426\u5219\u5373\u4f7f\u4f60\u6269\u5c55\u65f6\u5728\u8df3\u8fc7\u7684\u8bdd\uff0c\u5faa\u73af$s[i]$\u6b21\u4e5f\u8db3\u4ee5\u4ee4\u4ebaTLE\uff08\u4e5f\u884c\u53ea\u6709\u6211\u4f1a\u72af\u8fd9\u4e482\u7684\u9519\u8bef\u5427\uff09\u3002\n\n#### AC\u4ee3\u7801\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <queue>\n\nusing namespace std;\n\nconst int N = 1010;\n\nint n, m, p, cnt;\nint dx[4] = {0, 0, 1, -1};\nint dy[4] = {1, -1, 0, 0};\nint s[11], us[11], vis[N][N], ns[N], f[N][N], ans[N];\nchar in[N];\n\nstruct Node\n{\n\tint lev, x, y;\n}u;\n\nqueue <Node> Q[11];\n\ninline void BFS(int now, int ste)\n{\n\tif (us[now]) return;\n\tif (Q[now].empty()) ++cnt, us[now] = 1;\n\twhile (!Q[now].empty())\n\t{\n\t\tu = Q[now].front();\n\t\tif (u.lev != ste) return;\n\t\tQ[now].pop();\n\t\tfor (int i = 0; i < 4; ++i)\n\t\t{\n\t\t\tint nx = u.x + dx[i];\n\t\t\tint ny = u.y + dy[i];\n\t\t\tif (vis[nx][ny]) continue;\n\t\t\tvis[nx][ny] = 1, f[nx][ny] = now, \n\t\t\tQ[now].push((Node){ste + 1, nx, ny});\n\t\t}\n\t}\n}\n\nint main()\n{\n\tcin >> n >> m >> p;\n\tfill(ns + 1, ns + p + 1, 1);\n\tfor (int i = 1; i <= p; ++i)\n\t\tcin >> s[i];\n\tfor (int i = 1; i <= n; ++i)\n\t{\n\t\tscanf(\"%s\", in + 1);\n\t\tfor (int j = 1; j <= m; ++j)\n\t\t\tif (in[j] == '.');\n\t\t\telse if (in[j] == '#') vis[i][j] = -1;\n\t\t\telse vis[i][j] = 1, f[i][j] = int(in[j] - '0'), Q[f[i][j]].push((Node){1, i, j});\n\t}\n\tfor (int i = 0; i <= n + 1; ++i) vis[i][0] = vis[i][m + 1] = 1;\n\tfor (int i = 0; i <= m + 1; ++i) vis[0][i] = vis[n + 1][i] = 1;\n\tfor (; cnt < p;)\n\t{\n\t\tfor (int col = 1; col <= p; ++col)\n\t\t\tfor (int i = 1; i <= s[col]; ++i)\n\t\t\t\tif (us[col]) break;\n\t\t\t\telse BFS(col, ns[col]), ++ns[col];\n\t}\n\tfor (int i = 1; i <= n; ++i)\n\t\tfor (int j = 1; j <= m; ++j)\n\t\t\t++ans[f[i][j]];\n\tfor (int i = 1; i <= p; ++i)\n\t\tcout << ans[i] << \" \";\n\treturn 0;\n}\n```",
        "postTime": 1548060467,
        "uid": 26512,
        "name": "Christopher_Yan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1105D \u3010Kilani and the Game\u3011"
    },
    {
        "content": "\u5c0f\u53f7\u4e0d\u5199\u9898\u89e3\u5c31\u8981\u6389\u5c41\u7528\u6ca1\u6709\u7684\u5495\u503c\u4e86\u3002\n\n## \u601d\u8def\n\n\u9996\u5148\u5f88\u663e\u7136\uff0c\u8fd9\u9898\u76f4\u63a5\u6a21\u62df\u5c31\u53ef\u4ee5\u4e86\u3002\u6211\u4eec\u53ef\u4ee5\u91c7\u53d6 bfs\u3002\n\n\u4f46\u662f\uff0c\u5982\u679c\u53ea\u7528\u4e00\u4e2a\u961f\u5217\u6765\u8bb0\u5f55\u7684\u8bdd\u5e76\u4e0d\u5bb9\u6613\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5**\u5bf9\u6bcf\u4e2a\u73a9\u5bb6\u5f00\u4e00\u4e2a\u961f\u5217**\u3002\n\n\u8fd9\u6837\u5c31\u6bd4\u8f83\u5bb9\u6613\u4e86\uff0c\u53ea\u8981\u5168\u90e8\u961f\u5217\u4e0d\u4e3a\u7a7a\uff0c\u76f4\u63a5\u6bcf\u4e2a\u961f\u5217\u5f80\u5916\u540c\u65f6\u6269\u5f20\u4e00\u683c\u7684\u5730\u76d8\u5373\u53ef\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <queue>\nusing namespace std;\nconst int N = 1005, K = 15, dict[4][2] = {{0, 1}, {0, -1}, {1, 0}, {-1, 0}};\nstruct Node {int x, y;}; queue <Node> q[K];\nint n, m, k;\nint a[K], ans[K];\nchar map[N][N]; int dis[N][N];\nbool not_empty() //\u5168\u90e8\u961f\u5217\u662f\u5426\u4e3a\u7a7a\n{\n    for (int i = 1; i <= k; i++)\n        if (!q[i].empty())\n            return true;\n    return false;\n}\nvoid bfs() //\u7206\u641c\n{\n    while (not_empty())\n    {\n        for (int i = 1; i <= k; i++)\n            for (int _ = 1; !q[i].empty() && _ <= a[i]; _++)\n            {\n                int nowx = q[i].front().x, nowy = q[i].front().y;\n                while (!q[i].empty())\n                {\n                    int x = q[i].front().x, y = q[i].front().y;\n                    if (dis[nowx][nowy] != dis[x][y]) break;\n                    q[i].pop();\n                    for (int k = 0; k < 4; k++)\n                    {\n                        int dx = x + dict[k][0], dy = y + dict[k][1];\n                        if (dx < 1 || dx > n || dy < 1 || dy > m) continue;\n                        if (map[dx][dy] != '.' || dis[dx][dy]) continue;\n\n                        map[dx][dy] = (i + '0'), ans[i]++;\n                        q[i].push((Node){dx, dy}), dis[dx][dy] = dis[x][y] + 1;\n                    }\n                }\n            }\n    }\n}\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin >> n >> m >> k;\n    for (int i = 1; i <= k; i++) cin >> a[i];\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= m; j++)\n        {\n            cin >> map[i][j];\n            if ('1' <= map[i][j] && map[i][j] <= '9')\n            {\n                int pos = map[i][j] - '0';\n                q[pos].push((Node){i, j}), ans[pos]++;\n            }\n        }\n    bfs();\n    for (int i = 1; i <= k; i++) cout << ans[i] << ' ';\n    return 0;\n}\n```",
        "postTime": 1673263963,
        "uid": 687698,
        "name": "_dijkstra_",
        "ccfLevel": 0,
        "title": "CF1105D"
    },
    {
        "content": "# \u9898\u76ee\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[\u70b9\u8fd9\u91cc](https://www.luogu.org/problem/CF1105D)\u770b\u9898\u76ee\u3002\n# \u5206\u6790\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u867d\u7136\u662f\u7d2b\u8272\u7684\uff0c\u4f46\u662f\u5e76\u4e0d\u96be\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5982\u679c\u6bcf\u6b21\u4e00\u4e2a\u4eba\u8d70\u7684\u65f6\u5019\uff0c\u90fd\u4ece\u4ed6\u7684\u6bcf\u4e2a\u57ce\u5821\u5f00\u59cb\u6269\u5c55\uff0c\u90a3\u4e48\u8fd9\u4e2a\u901f\u5ea6\u663e\u7136\u662f\u6781\u5176\u6162\u7684\u3002\u6211\u4eec\u9700\u8981\u4e22\u5f03\u90a3\u4e9b\u5373\u4f7f\u4e0d\u4f5c\u4e3a\u8d77\u70b9\u5f00\u59cb\u6269\u5c55\uff0c\u4e5f\u4e0d\u4f1a\u4f7f\u65b0\u4e00\u6b21\u6269\u5c55\u7684\u589e\u52a0\u57ce\u5821\u6570\u91cf\u51cf\u5c0f\u7684\u90a3\u4e9b\u57ce\u5821\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8be5\u7559\u4e0b\u54ea\u4e9b\u5462\uff1f\u4e0d\u96be\u60f3\u5230\uff0c\u5e94\u8be5\u662f\u4e0a\u4e00\u6b21\u6269\u5c55\u5b8c\u6210\u540e\u6700\u5916\u9762\u7684\u90a3\u4e00\u5708\u57ce\u5821\u3002\u5185\u90e8\u7684\u57ce\u5821\u6240\u80fd\u6269\u5c55\u7684\u663e\u7136\u90fd\u4e5f\u80fd\u88ab\u5916\u90e8\u57ce\u5821\u6269\u5c55\u5230\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5728\u4e0a\u4e00\u6b21\u7684\u6269\u5c55\u5b8c\u6210\u540e\uff0c\u5c06\u6700\u5916\u5c42\u7684\u4e00\u5708\u65b0\u57ce\u5821\u5b58\u4e0b\u6765\uff0c\u4e0b\u4e00\u6b21\u5c31\u76f4\u63a5\u4ece\u8fd9\u4e9b\u57ce\u5821\u5f00\u59cb\u7ee7\u7eed\u6269\u5c55\u5c31\u53ef\u4ee5\u4e86\u3002\u7531\u4e8e\u6e38\u620f\u7684\u8fc7\u7a0b\u53ea\u4f1a\u5bfc\u81f4\u6574\u4e2a\u5730\u56fe\u5168\u90e8\u88ab\u904d\u5386\u4e00\u6b21\uff0c\u6240\u4ee5\u65f6\u95f4\u4e3a$O(nm)$\u3002\n# \u4ee3\u7801\n```cpp\n#include <queue>\n#include <cstdio>\n#include <utility>\nusing namespace std;\n\ntypedef pair<int, int> pos;\n#define xx first\n#define yy second\n\nconst int MAXN = 1005, MAXM = 1005, MAXP = 10;\n\ntemplate<typename _T>\nvoid read( _T &x )\n{\n\tx = 0;char s = getchar(); int f = 1;\n\twhile( s < '0' || '9' < s ){ f = 1; if( s == '-' ) f = -1; s = getchar(); }\n\twhile( '0' <= s && s <= '9' ){ x = ( x << 3 ) + ( x << 1 ) + s - '0', s = getchar(); }\n\tx *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x )\n{\n\tif( x < 0 ){ putchar( '-' ), x = -x; }\n\tif( 9 < x ){ write( x / 10 ); }\n\tputchar( x % 10 + '0' );\n}\n\nqueue<pos> q[10], las[10];\n\nint dir[4][2] = { { -1, 0 }, { 1, 0 }, { 0, -1 }, { 0, 1 } };\nint ans[MAXP];\nchar str[MAXM];\nint s[MAXP];\nint N, M, P;\nint col[MAXN][MAXM], dist[MAXN][MAXM];\n\nbool chk( const int x, const int y )\n{\n\treturn 1 <= x && x <= N && 1 <= y && y <= M && ! col[x][y];\n}\n\nbool expand( const int indx )\n{\n\tbool flag = false; \n\tpos head; int tx, ty;\n\twhile( ! las[indx].empty() )\n\t{\n\t\thead = las[indx].front(); las[indx].pop();\n\t\tfor( int i = 0 ; i < 4 ; i ++ )\n\t\t{\n\t\t\ttx = head.xx + dir[i][0], ty = head.yy + dir[i][1];\n\t\t\tif( chk( tx, ty ) ) q[indx].push( pos( tx, ty ) ), col[tx][ty] = indx, dist[tx][ty] = 1, flag = true;\n\t\t}\n\t}\n\twhile( ! q[indx].empty() )\n\t{\n\t\thead = q[indx].front(); q[indx].pop();\n\t\tif( dist[head.xx][head.yy] == s[indx] ) { las[indx].push( head ); continue; }\n\t\tfor( int i = 0 ; i < 4 ; i ++ )\n\t\t{\n\t\t\ttx = head.xx + dir[i][0], ty = head.yy + dir[i][1];\n\t\t\tif( chk( tx, ty ) ) \n\t\t\t\tq[indx].push( pos( tx, ty ) ), col[tx][ty] = indx, dist[tx][ty] = dist[head.xx][head.yy] + 1, flag = true;\n\t\t}\n\t}\n\treturn flag;\n}\n\nint main()\n{\n\tread( N ), read( M ), read( P );\n\tfor( int i = 1 ; i <= P ; i ++ ) read( s[i] );\n\tfor( int i = 1 ; i <= N ; i ++ )\n\t{\n\t\tscanf( \"%s\", str + 1 );\n\t\tfor( int j = 1 ; j <= M ; j ++ )\n\t\t{\n\t\t\tif( str[j] == '#' ) col[i][j] = -1;\n\t\t\telse if( str[j] ^ '.' ) \n\t\t\t\tcol[i][j] = str[j] - '0', las[col[i][j]].push( pos( i, j ) ), dist[i][j] = 1;\n\t\t}\n\t}\n\tfor( bool flag = false ; ; flag = false )\n\t{\n\t\tfor( int i = 1 ; i <= P ; i ++ ) flag |= expand( i );\n\t\tif( ! flag ) break;\n\t}\n\tfor( int i = 1 ; i <= N ; i ++ )\n\t\tfor( int j = 1 ; j <= M ; j ++ ) \n\t\t\tans[col[i][j]] ++;\n\tfor( int i = 1 ; i <= P ; i ++ ) \n\t\twrite( ans[i] ), putchar( i == P ? '\\n' : ' ' );\n\treturn 0;\n}\n```",
        "postTime": 1573534825,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "[CF1105D]Kilani and the Game"
    },
    {
        "content": "\u8fd9\u9898\u6ca1\u4ec0\u4e48\u65b9\u6cd5...\u7eaf\u7cb9\u6309\u7167\u9898\u610f\u6a21\u62df  \r\np\u4e2a\u4eba\uff0c\u6211\u4eec\u5c31\u7528p\u4e2a\u961f\u5217bfs\uff0cbfs\u7684\u8fc7\u7a0b\u4e2d\u6269\u5c55\u7684\u65f6\u5019\u6211\u7528\u7684\u662fdfs\uff0c\u6700\u540e\u7edf\u8ba1\u5730\u56fe\u4e0a\u6bcf\u4e2a\u4eba\u6709\u591a\u5c11\u68cb\u5b50\u5c31\u884c\u4e86  \r\n\u5173\u952e\u662f\u8981\u8bfb\u61c2\u9898\uff0c\u9898\u76ee\u7ed9\u51fa\u7684s\u6307\u7684\u662f\u66fc\u54c8\u987f\u8ddd\u79bb\uff0c\u53ea\u8981\u662f\u8ddd\u79bb\u5f53\u524d\u5730\u56fe\u4e0a\u67d0\u73a9\u5bb6\u7684\u68cb\u5b50\u5c0f\u4e8e\u7b49\u4e8es\u7684\u7a7a\u683c\u5b50\u90fd\u53ef\u4ee5\u6269\u5c55\r\n```cpp\r\n#include <bits/stdc++.h>\r\n#define jh(x,y) x^=y^=x^=y\r\n#define rg register\r\n#define inl inline\r\ntypedef long long ll;\r\nconst int N = 1e3 + 5, mod = 1e9 + 7;\r\nusing namespace std;\r\nnamespace fast_IO {\r\n    inl ll read()\r\n    {\r\n        rg ll num = 0;\r\n        rg char ch;\r\n        rg bool flag = false;\r\n        while ((ch = getchar()) == ' ' || ch == '\\n' || ch == '\\r');\r\n        if (ch == EOF)return ch; if (ch == '-')flag = true; else num = ch ^ 48;\r\n        while ((ch = getchar()) != ' '&&ch != '\\n'&&ch != '\\r'&&~ch)\r\n            num = (num << 1) + (num << 3) + (ch ^ 48);\r\n        if (flag)return -num; return num;\r\n    }\r\n    inl ll max(rg ll a, rg ll b) { if (a > b)return a; return b; }\r\n    inl ll min(rg ll a, rg ll b) { if (a < b)return a; return b; }\r\n    void write(rg long long x) { if (x < 0)putchar('-'), x = -x; if (x >= 10)write(x / 10); putchar(x % 10 ^ 48); }\r\n};\r\nbool flag[N][N];\r\nchar mp[N][N];\r\nint p, n, m, s[N], head[10], tail[10], ans[10];\r\nint dx[5] = { 0,0,0,1,-1 };\r\nint dy[5] = { 0,1,-1,0,0 };\r\nstruct Node {\r\n    int x, y;\r\n    Node() {}\r\n    Node(rg int x, rg int y) :x(x), y(y) {}\r\n}q[10][N*N], fa;\r\nvoid dfs(rg int p, rg int x, rg int y, rg int len)\r\n{\r\n    if (abs(x - fa.x) + abs(y - fa.y) >= len)return;\r\n    for (rg int i = 1; i <= 4; ++i)\r\n    {\r\n        rg int fx = x + dx[i], fy = y + dy[i];\r\n        if (fx<1 || fy<1 || fx>n || fy>m || flag[fx][fy] || mp[fx][fy] != '.')continue;\r\n        q[p][++head[p]] = Node(fx, fy);\r\n        flag[fx][fy] = true;\r\n        mp[fx][fy] = p + '0';\r\n        dfs(p, fx, fy, len);\r\n    }\r\n}\r\ninl void bfs()\r\n{\r\n    while (1)\r\n    {\r\n        rg bool con = true;\r\n        for (rg int i = 1; i <= p; ++i)if (head[i] >= tail[i]) { con = false; break; }\r\n        if (con)break;\r\n        for (rg int i = 1; i <= p; ++i)\r\n        {\r\n            if (head[i] < tail[i])continue;\r\n            rg int last = head[i];\r\n            while (tail[i] <= last)\r\n            {\r\n                rg Node k = q[i][tail[i]++]; fa = k;\r\n                dfs(i, k.x, k.y, s[i]);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nint main(void)\r\n{\r\n    n = fast_IO::read(); m = fast_IO::read(); p = fast_IO::read();\r\n    for (rg int i = 1; i <= p; ++i)s[i] = fast_IO::read(), tail[i] = 1;\r\n    for (rg int i = 1; i <= n; ++i)\r\n    {\r\n        scanf(\"%s\", mp[i] + 1);\r\n        for (rg int j = 1; j <= m; ++j)\r\n            if (mp[i][j] >= '1'&&mp[i][j] <= '9')\r\n                q[mp[i][j] - '0'][++head[mp[i][j] - '0']] = Node(i, j), flag[i][j] = true;\r\n    }\r\n    bfs();\r\n    for (rg int i = 1; i <= n; ++i)\r\n        for (rg int j = 1; j <= m; ++j)\r\n            if (mp[i][j] >= '1'&&mp[i][j] <= '9')\r\n                ++ans[mp[i][j] ^ 48];\r\n    for (rg int i = 1; i <= p; ++i)printf(\"%d \", ans[i]);\r\n    return 0;\r\n}\r\n\r\n```",
        "postTime": 1548078781,
        "uid": 87283,
        "name": "Zechariah",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1105D \u3010Kilani and the Game\u3011"
    }
]