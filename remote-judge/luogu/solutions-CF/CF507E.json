[
    {
        "content": "## SPFA\n\n\u5bf9\u4e8e\u60f3\u8981\u8fdb\u4e00\u6b65\u5b66\u4e60SPFA\u7684\u540c\u5b66\u6709\u6bd4\u8f83\u597d\u7684\u4f5c\u7528\u3002\n\n\u9898\u76ee\u8f83\u957f\uff0c\u5bf9\u63d0\u5347\u5feb\u901f\u63d0\u53d6\u9898\u76ee\u4fe1\u606f\u7684\u80fd\u529b\u4e5f\u5f88\u6709\u6548\u3002\n\n\u4e5f\u8b66\u793a\u6211\u4eec\uff1a\u5982\u679c\u6beb\u65e0\u601d\u8def\uff0c\u4e0d\u5982\u56de\u5934\u518d\u591a\u770b\u4e00\u773c\u9898\u9762\uff0c\u4ece\u4e2d\u627e\u5230\u89e3\u51b3\u95ee\u9898\u7684\u7a81\u7834\u53e3\uff01\n\n## \u8fdb\u5165\u6b63\u9898\uff1a\n\n\u89c2\u5bdf\u9898\u76ee\uff1a\u4ed6\u4eec\u5c06\u5728\u4ece\u57ce\u5e021\u8fd4\u56de\u9014\u4e2d\u4f7f\u7528\u7684\u8def\u5f84\u603b\u957f\u5ea6\u5fc5\u987b\u5c3d\u53ef\u80fd\u77ed\n\n\u7b2c\u4e00\u773c\u770b\u5230\uff0c\u5c31\u60f3\u5230SPFA\u8dd1\u6700\u77ed\u8def\uff0c\u4f46\u662f\u5462\uff1f\u9898\u76ee\u91cc\u8fd8\u6709\u4e00\u53e5\u8bdd\uff1a\n\n#### \u4f7f\u53d7\u5f71\u54cd\u9053\u8def\u7684\u603b\u6570\u6700\u5c0f\u5316\n\n\u600e\u4e48\u529e\u5462\uff1f\n\n\u8fd8\u662f\u5012\u56de\u9898\u9762\uff1a\n\n1\u3001\u70b8\u6bc1\u4e0d\u5728\u6700\u77ed\u8def\u4e0a\u7684\u53ef\u901a\u884c\u9053\u8def\u3002\n\n2\u3001\u4fee\u590d\u5728\u6700\u77ed\u8def\u4e0a\u7684\u4e0d\u53ef\u901a\u884c\u9053\u8def\u3002\n\n\n------------\n\n\n\u5982\u4f55\u505a\u5230\u5f71\u54cd\u9053\u8def\u6700\u5c0f\u5316\uff1f\n\n\u76f8\u4fe1\u591a\u8bfb\u51e0\u904d\u9898\u76ee\u7684\u4f60\u5df2\u7ecf\u77e5\u9053\u4e86\uff1a\n\n\u8ba9\u6700\u77ed\u8def\u4e0a\u4e0d\u53ef\u901a\u884c\u9053\u8def\u5c3d\u91cf\u7684\u5c11\uff0c\n\n\u4e5f\u5c31\u662f\u8bf4\u8ba9\u53ef\u901a\u884c\u9053\u8def\u5c3d\u91cf\u5728\u6700\u77ed\u8def\u4e0a\uff0c\u8ba9\u4ed6\u4eec\u4e0d\u8981\u88ab\u70b8\u3002\n\n\u8ba9\u4e0d\u53ef\u901a\u884c\u9053\u8def\u5c3d\u91cf\u4e0d\u5728\u6700\u77ed\u8def\u4e0a\uff0c\u8ba9\u4ed6\u4eec\u4e0d\u8981\u88ab\u4fee\u590d\u3002\n\n\uff08\u62d7\u53e3\u6ca1\u5173\u7cfb\uff0c\u591a\u8bfb\u51e0\u904d\uff09\n\n------------\n\n### \u7ed3\u5408\u4e24\u4e2a\u6761\u4ef6\n\n\u8fd9\u5c31\u9700\u8981\u6211\u4eec\u5728\u8dd1\u6700\u77ed\u8def\u7684\u65f6\u5019\n\n\u5c06\u8def\u5f84\u957f\u5ea6\u4f5c\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\n\n\u5c06\u4e0d\u53ef\u901a\u884c\u9053\u8def\u6570\u91cf\u4f5c\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\n\n\u8dd1\u6700\u77ed\u8def\u7684\u65f6\u5019\uff1a\n\n\u5b9a\u4e49\uff1a\u8def\u5f84\u957f\u5ea6\u6570\u7ec4 $d[i]$ \u548c\u4e0d\u53ef\u901a\u884c\u9053\u8def\u6570\u91cf\u6570\u7ec4 $num[i]$\u3002\n\n\u5982\u679c $d[y]>d[x]+z$ \u5c31\u66f4\u65b0 $y$ \u7684 $d$ \u6570\u7ec4\u548c $num$ \u6570\u7ec4\n\n\u5f53\u7136\uff0c\u8fd8\u8981\u8bb0\u5f55\u5728\u6700\u77ed\u8def\u4e0a\u7684\u8fb9\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a $pre$ \u6570\u7ec4\u3002\n\n\u8dd1\u5b8c\u6700\u77ed\u8def\u540e\uff0c\u5c31\u8bb0\u5f55\u4e0d\u5728\u6700\u77ed\u8def\u4e0a\u7684\u53ef\u901a\u884c\u9053\u8def\n\n\u8bb0\u5f55\u5728\u6700\u77ed\u8def\u4e0a\u7684\u4e0d\u53ef\u901a\u884c\u9053\u8def\n\n\u6309\u7167\u9898\u610f\u8f93\u51fa\u5c31\u884c\u4e86\u3002\n\n\u5177\u4f53\u8fd8\u53ef\u4ee5\u53c2\u7167\u4ee3\u7801\u3002\n\n\u4e0a\u4ee3\u7801~\n\n```cpp\n#include<cstdio>\n#include<queue>\n#include<cstring>\nusing namespace std;\ntypedef long long LL;\nLL read()\n{\n\tLL w=0;bool f=true;char c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-')f=false;c=getchar();}\n\twhile(c>='0'&&c<='9')w=(w<<1)+(w<<3)+(c^48),c=getchar();\n\treturn f?w:~w+1;\n}\n\nconst int N=1e5+5;\n\nstruct edge\n{\n\tint x,y,nxt,flag;\n}e[N*2];int tot=-1,fir[N];//\u8fd9\u91cc\u90bb\u63a5\u8868\u7684\u5efa\u7acb\u4e0d\u540c\uff08tot=-1\uff09\uff0c\u610f\u5728\u65b9\u4fbf\u67e5\u627e\u53cd\u5411\u8fb9\u3002 \nvoid Add(int x,int y,int flag)\n{\n\te[++tot]=(edge){x,y,fir[x],flag};fir[x]=tot;\n}\n\nint n,m;\n\nint d[N],num[N],b[N];\nint pre[N][2];\nqueue<int>Q;\nbool g1[N*2],g2[N*2];\n\nvoid spfa()\n{\n\tmemset(d,0x3f,sizeof(d));\n\tmemset(num,0x3f,sizeof(num));\n\td[1]=0;num[1]=0;\n\tQ.push(1);b[1]=1;\n\twhile(Q.size())\n\t{\n\t\tint x=Q.front();Q.pop();b[x]=0;\n\t\tfor(int k=fir[x];k>=0;k=e[k].nxt)\n\t\t{\n\t\t\tint y=e[k].y,z=e[k].flag^1;      //\u5982\u679cflag\u4e3a1\uff0c\u5219\u901a\u8fc7\u65f6\u4e0d\u52a0num \n\t\t\tif(d[y]==d[x]+1&&num[y]>num[x]+z)  //\u5728\u6700\u77ed\u8def\u5f84\u76f8\u540c\u7684\u60c5\u51b5\u4e0b\uff0c\u4fdd\u8bc1\u901a\u8fc7\u4e0d\u53ef\u901a\u884c\u9053\u8def\u6700\u5c11 \n\t\t\t{\n\t\t\t\tnum[y]=num[x]+z; \n\t\t\t\tpre[y][0]=x;pre[y][1]=k;      //pre[i][0]\u8868\u793a\u5230y\u7684\u662f\u54ea\u4e2a\u70b9,pre[i][0]\u8868\u793a\u5230y\u7684\u662f\u54ea\u6761\u8fb9 \n\t\t\t\tif(!b[y]) b[y]=1,Q.push(y);\n\t\t\t}\n\t\t\telse if(d[y]>d[x]+1)      //\u5982\u679c\u8def\u5f84\u66f4\u77ed\uff0c\u4e0d\u7ba1\u4e0d\u53ef\u901a\u884c\u9053\u8def\u591a\u5c11\uff0c\u90fd\u8981\u66f4\u65b0\n\t\t\t                          //\u8fd9\u5c31\u662f\u7b2c\u4e00\u5173\u952e\u5b57\u548c\u7b2c\u4e8c\u5173\u952e\u5b57\u7684\u533a\u522b \n\t\t\t{\n\t\t\t\td[y]=d[x]+1;\n\t\t\t\tnum[y]=num[x]+z;\n\t\t\t\tpre[y][0]=x;pre[y][1]=k;\n\t\t\t\tif(!b[y]) b[y]=1,Q.push(y);\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main()\n{\n\tn=read();m=read();\n\tmemset(fir,-1,sizeof(fir));    //\u8fd9\u91cc\u90bb\u63a5\u8868\u7684\u5efa\u7acb\u4e0d\u540c\uff0c\u610f\u5728\u65b9\u4fbf\u67e5\u627e\u53cd\u5411\u8fb9\u3002 \n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tint x=read(),y=read(),flag=read();\n\t\tAdd(x,y,flag);Add(y,x,flag);\n\t}\n\tspfa();\n\tint now=n;\n\twhile(now!=1)\n\t{\n\t\tg1[pre[now][1]]=g1[pre[now][1]^1]=true;    //\u5c06\u5728\u6700\u77ed\u8def\u4e0a\u7684\u8fb9\u6807\u8bb0\u597d\uff0ci^\u67e5\u627e\u7b2ci\u6761\u8fb9\u7684\u53cd\u5411\u8fb9\n\t\t                                           //\u56e0\u4e3a\u524d\u9762\u4ece0\u5f00\u59cb\u8bb0\u5f55\u8fb9\uff0c\u52190\u5bf9\u5e941    2\u5bf9\u5e943 \n\t\t                                           //1\u8981\u8f6c\u5316\u4e3a0\u53ea\u9700\u8981xor1\u5c31\u884c\u4e86\uff0c0\u4e5f\u662f\u3002 \n\t\tif(!e[pre[now][1]].flag) g2[pre[now][1]]=g2[pre[now][1]^1]=true;//\u5c06\u5728\u6700\u77ed\u8def\u4e0a\u7684\u4e0d\u53ef\u901a\u884c\u9053\u8def\u6807\u8bb0\u597d \n\t\tnow=pre[now][0];\n\t}\n\tint Ans[N][4],nn=0;\n\tfor(int i=0;i<=tot;i+=2)\n\t{\n\t\tif((!g1[i]||!g1[i^1])&&e[i].flag)     //\u5982\u679c\u4ed6\u4e0d\u662f\u6700\u77ed\u8def\u4e0a\u7684\u8fb9\uff0c\u5e76\u4e14\u53ef\u901a\u884c\uff0c\u70b8\u6bc1 \n\t\t{\n\t\t\tAns[++nn][1]=e[i].x;\n\t\t\tAns[nn][2]=e[i].y;\n\t\t\tAns[nn][3]=0;\n\t\t}\n\t\tif(g2[i]||g2[i^1])                    //\u5982\u679c\u4ed6\u662f\u6700\u77ed\u8def\u4e0a\u8fb9\uff0c\u5e76\u4e14\u4e0d\u53ef\u901a\u884c\uff0c\u4fee\u590d \n\t\t{\n\t\t\tAns[++nn][1]=e[i].x;\n\t\t\tAns[nn][2]=e[i].y;\n\t\t\tAns[nn][3]=1;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",nn);\n\tfor(int i=1;i<=nn;++i)\n\t  printf(\"%d %d %d\\n\",Ans[i][1],Ans[i][2],Ans[i][3]);\n\treturn 0;\n}\n```\n\n\n\u849f\u84bb\u7b2c\u4e8c\u6b21\u5199\u9898\u89e3\uff0c\u5982\u6709\u9519\u8bef\u4e0d\u6ee1\u6b22\u8fce\u6279\u8bc4\u6307\u51fa\u3002\n\n\u5728\u8ddd\u79bb\u8003\u8bd5\u8fd8\u670910\u5929\u7684\u8fd9\u65f6\uff0c\u6211\u5fe0\u5fc3\u5730\u8bf4\u4e00\u53e5\uff1a\n\n# \u795d\u5927\u5bb6CSP RP++\uff01",
        "postTime": 1572940720,
        "uid": 49468,
        "name": "\u5bfb\u65e7",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF507E \u3010Breaking Good\u3011"
    },
    {
        "content": "## \u5343\u4e07\u8981\u770b\u6e05\u9898\u76ee\uff01\n~~\u7531\u4e8e\u770b\u9519\u9898\u76ee\u800c\u62b1\u7075n\u6b21~~\n\n\u8f93\u51fa\u7684\u7b2c\u4e00\u884c\u4e3a\u6700\u5c11\u7684\u4fee\u6539\u8def\u5f84\uff0c\u4e0d\u662f\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u8def\u5f84\uff01\n\n\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u6709\u4e9b\u9ebb\u70e6\u4f46\u662f\u597d\u60f3\u4e5f\u597d\u5199\u7684\u65b9\u6cd5QAQ\n\n------------\n\u7b2c\u4e00\u6b65\uff1a\u7528spfa\u627e\u51fa\u6240\u6709\u6761\u6700\u77ed\u8def\n\n\u7b2c\u4e8c\u6b65\uff1a\u7528dfs\u627e\u51fa\u6700\u77ed\u8def\u4e2d\u9700\u8981\u4fee\u6539\u6700\u5c11\u7684\u8def\n\n\u7b2c\u4e09\u6b65\uff1a\u5c06\u7b2c\u4e8c\u6b65\u8d70\u7684\u8def0\u6539\u4e3a1\uff0c\u4e0d\u8d70\u7684\u8def1\u65390\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define nnn 100300\n\nint get(){             //\u5feb\u8bfb\n\tint ss=1;\n\tchar c;\n\twhile((c=getchar())<'0'||c>'9'){\n\t\tif(c=='-')ss=-1;\n\t}\n\tint res=c-'0';\n\twhile((c=getchar())>='0'&&c<='9'){\n\t\tres=res*10+c-'0';\n\t}\n\treturn res*ss;\n}\n\nint go[nnn*2],nex[nnn*2],head[nnn*2],jz[nnn*2],tot;\nint m,n;\nbool vv[nnn];\nint lu[nnn];\nvector<int>fa[nnn];\nvector<int>zhi[nnn];\nqueue<int>q;\n\nvoid add(int p,int q,int o){      //\u524d\u5411\u661f\u5b58\u56fe\n\tgo[++tot]=q;nex[tot]=head[p];head[p]=tot;jz[tot]=o;\n}\n\n\nvoid spfa(){           //\u8dd1\u7b2c\u4e00\u904d\u6700\u77ed\u8def\uff0c\u627e\u6240\u6709\u7684\u53ef\u80fd\u8def\u5f84\n\tmemset(lu,0x3f3f3f,sizeof(lu));\n\tq.push(1);\n\tvv[1]=true;\n\tlu[1]=0;\n\tint tem,tt;\n\twhile(!q.empty()){\n\t\ttem=q.front();\n\t\tq.pop();\n\t\tvv[tem]=false;\n\t\tfor(int i=head[tem];i;i=nex[i]){\n\t\t\ttt=go[i];\n\t\t\tif(lu[tt]==1+lu[tem]){\n\t\t\t\tfa[tt].push_back(tem);   //\u5b58\u53ef\u80fd\u8def\u5f84\n\t\t\t\tzhi[tt].push_back(jz[i]);\n\t\t\t\tif(!vv[tt]){\n\t\t\t\t\tvv[tt]=true;\n\t\t\t\t\tq.push(tt);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(lu[tt]>lu[tem]+1){\n\t\t\t\tlu[tt]=lu[tem]+1;\n\t\t\t\twhile(!fa[tt].empty()){\n\t\t\t\t\tfa[tt].clear();\n\t\t\t\t\tzhi[tt].clear();\n\t\t\t\t}\n\t\t\t\tfa[tt].push_back(tem);\n\t\t\t\tzhi[tt].push_back(jz[i]);\n\t\t\t\tif(!vv[tt]){\n\t\t\t\t\tvv[tt]=true;\n\t\t\t\t\tq.push(tt);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nint ans[nnn],lo[nnn],last;\n\nvoid dfs(int u,int dep){\n\tif(u==1){\n\t\tif(dep>=last){   //\u62e5\u6709\u6700\u5c11\u4e0d\u7528\u4fee\u6539\u7684\u8def\n\t\t\tlast=dep;\n\t\t\tfor(int i=1;i<=n;i++){\n\t\t\t\tans[i]=lo[i];\n\t\t\t}\n\t\t}\n\t\treturn ;\n\t}\n\tfor(int i=0;i<fa[u].size();i++){ \n\t\tlo[fa[u][i]]=u;\n\t\tdfs(fa[u][i],dep+zhi[u][i]);\n\t\tlo[fa[u][i]]=0;\n\t}\n}\n\nbool zoul[nnn];\nint z1[nnn],z2[nnn],z3[nnn],qwq;\n\nvoid dfs2(int u,int fa){   //\u627e\u8f93\u51fa\u8def\u5f84\n\tint tem;\n\tfor(int i=head[u];i;i=nex[i]){\n\t\ttem=go[i];\n\t\tif(zoul[(1+i)/2]==true)continue;\n\t\tif(ans[tem]==u||ans[u]==tem){\n\t\t\tif(jz[i]==0){\n\t\t\t    z1[++qwq]=u;\n\t\t\t    z2[qwq]=tem;\n\t\t\t    z3[qwq]=1;\n\t\t\t}\n\t\t}else{\n\t\t\tif(jz[i]==1){\n\t\t\t    z1[++qwq]=u;\n\t\t\t    z2[qwq]=tem;\n\t\t\t    z3[qwq]=0;\n\t\t\t}\n\t\t}\n\t\tzoul[(i+1)/2]=true;\n\t\tdfs2(tem,u);\n\t}\n}\n\nint main(){\n\tn=get(),m=get();\n\tint x,y,z;\n\tfor(int i=1;i<=m;i++){\n\t\tx=get();y=get();z=get();\n\t\tadd(x,y,z);\n\t\tadd(y,x,z);\n\t}\n\tspfa();               //\u7b2c\u4e00\u6b65\n\tmemset(lo,0,sizeof(lo));\n\tmemset(zoul,0,sizeof(zoul));\n\tlast=0;\n\tdfs(n,0);             //\u7b2c\u4e8c\u6b65\n\tdfs2(1,0);            //\u7b2c\u4e09\u6b65\n\tcout<<qwq<<endl;\n\tfor(int i=1;i<=qwq;i++){\n\t\tcout<<z1[i]<<\" \"<<z2[i]<<\" \"<<z3[i]<<endl;\n\t}\n\treturn 0;\n} \n```\n\n\u6c42\u5927\u4f6c\u653e\u8fc7QAQ\n\nCSP RP++",
        "postTime": 1573620673,
        "uid": 97763,
        "name": "453xzz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF507E \u3010Breaking Good\u3011"
    },
    {
        "content": "~~\u95f2\u6765\u65e0\u4e8b\uff0c\u5199\u7bc7\u9898\u89e3\u3002~~\n\n\u5199\u5b8c\u4e4b\u540e\u770b\u4e86\u770b\u9898\u89e3\uff0c\u53d1\u73b0\u5199\u7684\u5927\u591a\u662f SPFA \u3002\n\n\u8fd9\u91cc\u5949\u4e0a\u4e00\u4efd\u7528 Dijkstra \u7684\u5199\u6cd5(\u5176\u5b9e\u5dee\u4e0d\u591a)\u3002\n\n\n------------\n\n# \u9898\u76ee\u5927\u610f\n\u7ed9\u5b9a $n$ \u4e2a\u70b9\uff0c$m$ \u6761\u8fb9\uff08\u8fb9\u6743\u90fd\u4e3a1\uff09\u7684\u65e0\u5411\u56fe\uff0c\u521d\u59cb\u65f6\u6bcf\u6761\u9053\u8def\u6709\u4e24\u79cd\u72b6\u6001\uff08$0$ \u4ee3\u8868\u662f\u574f\u7684\uff0c$1$ \u4ee3\u8868\u662f\u597d\u7684\uff09\u3002\n\n\u627e\u4e00\u6761 $1-n$ \u7684\u6700\u77ed\u8def\uff0c\u5c06\u9009\u7684\u8def\u5f84\u4e0a\u7684\u574f\u7684\u9053\u8def\u4fee\u597d\uff0c\u5c06\u4e0d\u5728\u9009\u7684\u8def\u5f84\u4e0a\u7684\u5176\u4ed6\u597d\u8fb9\u70b8\u6389\uff01\u4f7f\u53d7\u5f71\u54cd\u7684\u9053\u8def\u7684\u603b\u91cf\u6700\u5c0f\uff0c\u5e76\u8f93\u51fa\u53d7\u5f71\u54cd\u7684\u9053\u8def\u7684\u64cd\u4f5c\uff08\u4fee\u597d\u6216\u70b8\u6389\uff09\u3002\n\n# \u5206\u6790\n### \u9996\u5148\uff1a\n\n> \u9996\u5148\uff0c\u4ed6\u4eec\u5c06\u5728\u4ece\u57ce\u5e021\u8fd4\u56de\u9014\u4e2d\u4f7f\u7528\u7684\u8def\u5f84\u603b\u957f\u5ea6\u5fc5\u987b\u5c3d\u53ef\u80fd\u77ed\u3002\n\n\u9898\u76ee\u4e2d\u8fd9\u53e5\u8bdd\u662f\u7a81\u7834\u53e3\uff0c\u8fd9\u53e5\u8bdd\u544a\u8bc9\u6211\u4eec\u9009\u7684\u8def\u5f84\u5fc5\u987b\u662f\u6700\u77ed\u8def\u3002\n\n\n------------\n\n### \u5176\u6b21\uff1a\n\n\u4e8e\u662f\u6211\u4eec\u4e0d\u7ba1\u9053\u8def\u7684\u7ef4\u4fee\u60c5\u51b5\uff0c\u5148\u6c42\u51fa\u4ece $1-n$ \u7684\u6700\u77ed\u8def\uff0c\u8fd9\u91cc\u76f4\u63a5 Dijkstra \u6c42\u6700\u77ed\u8def\u5c31\u597d\u4e86\u3002\u53ef\u80fd\u6709\u5f88\u591a\u6761\u4ece $1-n$ \u7684\u6700\u77ed\u8def\u3002\u7136\u540e\u6211\u4eec\u5c31\u9700\u8981\u7b5b\u9009\u51fa\u6211\u4eec\u60f3\u8981\u7684\u90a3\u6761\u6700\u77ed\u8def\u3002\n\n\u8bbe $dis$ \u8868\u793a\u4ece $1-n$ \u7684\u6700\u77ed\u8def\u4e0a\u8fb9\u7684\u6570\u91cf\uff0c$cnt$ \u8868\u793a\u6700\u77ed\u8def\u4e0a\u597d\u7684\u8fb9\u7684\u6570\u91cf\uff0c$huai$ \u8868\u793a\u6700\u77ed\u8def\u4e0a\u574f\u7684\u8fb9\u7684\u6570\u91cf\uff0c$tot$ \u8868\u793a\u6574\u5f20\u56fe\u597d\u7684\u8fb9\u7684\u6570\u91cf\u3002\n\n\u6211\u4eec\u53d1\u73b0\u53d7\u5f71\u54cd\u7684\u9053\u8def $ans=tot-cnt+huai$\u3002\u540c\u65f6\u53ef\u4ee5\u53d1\u73b0 $huai=dis-cnt$\u3002\n\n\u6240\u4ee5 $ans=tot+dis-2\\times cnt$\uff0c$dis$ \u662f $1-n$ \u7684\u6700\u77ed\u8def\uff0c\u662f\u786e\u5b9a\u7684\uff0c\u6240\u4ee5 $ans$ \u968f\u7740 $cnt$ \u7684\u589e\u5927\u800c\u51cf\u5c0f\uff0c\u8981\u6c42 $ans$ \u7684\u6700\u5c0f\u503c\uff0c\u6211\u4eec\u5c31\u8ba9 $cnt$ \u5c3d\u91cf\u5927\u5457\u3002\u4e8e\u662f\u6211\u4eec\u8981\u53bb\u627e\u8def\u5f84\u4e0a\u597d\u8fb9\u6700\u591a\u7684\u4e00\u6761\u6700\u77ed\u8def\u3002\n\n\n------------\n\n### \u7136\u540e\uff1a\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u6700\u7ec8\u6c42\u5f97\u7684\u6240\u6709\u6700\u77ed\u8def\u7ec4\u6210\u7684\u56fe\u662f\u4e00\u5f20\u62d3\u6251\u56fe\uff0c\u56e0\u4e3a\u4e00\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u4ece\u4e0a\u4e00\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u8fc7\u6765\uff0c\u6240\u4ee5\u53ef\u4ee5\u5c06\u6240\u6709\u5728\u6700\u77ed\u8def\u4e0a\u7684\u8def\u5f84\u65b0\u5efa\u4e00\u5f20\u56fe\uff0c\u8bbe $cnt_i$ \u8868\u793a\u4ece $1$ \u5230 $i$ \u7684\u8def\u5f84\u4e0a\u597d\u8fb9\u7684\u6570\u91cf\uff0c\u62d3\u6251\u5e8f\u4e00\u76f4\u6c42\u51fa $cnt_n$\u3002\n\n\u5173\u4e8e\u5982\u4f55\u5c06\u6240\u6709\u5728\u6700\u77ed\u8def\u4e0a\u7684\u8def\u5f84\u65b0\u5efa\u4e00\u5f20\u56fe\uff1a\n\n\u679a\u4e3e\u6240\u6709\u8fb9\uff0c\u5982\u679c $dis_v+w=dis_u$ \u6216 $dis_u+w=dis_v$\uff0c\u8bf4\u660e\u8be5\u8fb9\u662f\u4e00\u6761\u6700\u77ed\u8def\uff0c\u7136\u540e\u5c31\u8fde\u8fb9\u3002\n\n\u7b2c\u4e00\u95ee\u5c31\u6c42\u51fa\u6765\u4e86\u3002\n\n\n------------\n\n### \u518d\u5176\u6b21:\n\u7136\u540e\u8fd8\u8981\u8f93\u51fa\u53d7\u5f71\u54cd\u7684\u8fb9\u7684\u64cd\u4f5c\uff0c\u9700\u8981\u7ef4\u4fee\u5219\u8f93\u51fa `u v 1`\uff1b\u9700\u8981\u70b8\u6bc1\u5219\u8f93\u51fa `u v 0`\u3002\u8fd9\u5c31\u9700\u8981\u6211\u4eec\u8fdb\u4e00\u6b65\u7684\u6c42\u51fa\u5177\u4f53\u662f\u54ea\u4e00\u6761\u6700\u77ed\u8def\u4e86\u3002\n\n\u5982\u4f55\u6c42\u5462\uff1f\n\n\u6211\u4eec\u91c7\u7528\u4e0a\u9762\u65b0\u5efa\u56fe\u7c7b\u4f3c\u7684\u505a\u6cd5\uff0c\u8bbe $w$ \u4e3a\u9053\u8def\u7684\u597d\u574f\u60c5\u51b5\uff0c\u4ece $n$ \u5f80\u56de\u8d70\uff0c\u5982\u679c $cnt_v+w=cnt_u$\uff0c\u8bf4\u660e $u$ \u662f\u4ece $v$ \u8d70\u8fc7\u6765\u7684\uff0c\u6211\u4eec\u5c31\u8d70\u8fde\u5411 $v$ \u7684\u8def\u5f84\uff0c\u5c06\u8def\u5f84\u4e0a\u7684\u8fb9\u6807\u8bb0\uff0c\u5176\u5b9e\u4e5f\u662f\u4e00\u4e2a\u62d3\u6251\u5e8f\uff0c\u53ea\u4e0d\u8fc7\u662f\u4ece $n-1$ \u7684\uff0c\u4e8e\u662f\u5177\u4f53\u54ea\u6761\u8def\u5f84\u5c31\u6c42\u51fa\u6765\u4e86\u3002\n\n### \u6700\u540e\uff1a\n\u679a\u4e3e\u6bcf\u6761\u8fb9\uff0c\u5982\u679c\u8fd9\u6761\u8fb9\u88ab\u6807\u8bb0\u4e86\uff0c\u8bf4\u660e\u5728\u88ab\u9009\u7684\u8def\u5f84\u4e0a\uff0c\u540c\u65f6\u8fd9\u6761\u8fb9\u5982\u679c\u662f\u574f\u7684\uff08\u9700\u8981\u4fee\u597d\uff09\uff0c\u8f93\u51fa\u3002\n\u5982\u679c\u8fd9\u6761\u8fb9\u6ca1\u6709\u88ab\u6807\u8bb0\uff0c\u8bf4\u660e\u4e0d\u5728\u88ab\u9009\u7684\u8def\u5f84\u4e0a\uff0c\u540c\u65f6\u8fd9\u6761\u8fb9\u662f\u597d\u7684\uff08\u9700\u8981\u70b8\u6389\uff09\uff0c\u8f93\u51fa\u3002\n\n\u8fd9\u9053\u9898\u5c31\u7ed3\u675f\u4e86\u3002\n### \u540e\u8bb0\uff1a\n\n\u5176\u5b9e\u4e0e SPFA \u5199\u6cd5\u601d\u8def\u662f\u4e00\u6837\u7684\uff0c\u53ea\u4e0d\u8fc7 SPFA \u5728\u6c42\u6700\u77ed\u8def\u7684\u65f6\u5019\u53ef\u4ee5\u8fdb\u884c\u591a\u6b21\u677e\u5f1b\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u6c42\u51fa\u8def\u5f84\uff0c\u800c Dij \u57fa\u4e8e\u8d2a\u5fc3\uff0c\u4e00\u4e2a\u70b9\u4e00\u65e6\u88ab\u786e\u5b9a\uff0c\u5c31\u65e0\u6cd5\u518d\u88ab\u5176\u4ed6\u70b9\u66f4\u65b0\uff0c\u6240\u4ee5\u6b65\u9aa4\u9ebb\u70e6\u4e00\u4e9b\u3002\n\n\n# Code\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<queue>\n#include<cstring>\nusing namespace std;\ninline long long read(){\n\tlong long w=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){\n\t\tif(ch=='-') f=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9'){\n\t\tw=w*10+ch-'0';\n\t\tch=getchar(); \n\t}\n\treturn w*f;\n}\nint n,m,dis[100005],ind[100005],cnt[100005],tot;\nbool vis[100005];\nvector<int> g[100005];\nvector<pair<int,int> > g1[100005];\nvector<pair<int,pair<int,int> > > g2[100005];\nbool mark[100005];\nstruct edge{\n\tint u;\n\tint v;\n\tint w;\n}e[100005];\nvoid dij(){\n\tpriority_queue<pair<int,int>,vector<pair<int,int> >,greater<pair<int,int> > > q;\n\tmemset(dis,0x3f,sizeof(dis));\n\tdis[1]=0,q.push(make_pair(0,1));\n\twhile(!q.empty()){\n\t\tint u=q.top().second;\n\t\tq.pop();\n\t\tif(vis[u]) continue;\n\t\tvis[u]=1;\n\t\tfor(int i=0;i<g[u].size();i++){\n\t\t\tint v=g[u][i];\n\t\t\tif(dis[v]>dis[u]+1){\n\t\t\t\tdis[v]=dis[u]+1;\n\t\t\t\tq.push(make_pair(dis[v],v));\n\t\t\t}\n\t\t}\n\t} \n}\nvoid select(){\n\tfor(int i=1;i<=m;i++){\n\t\tint u=e[i].u,v=e[i].v,w=e[i].w;\n\t\tif(dis[u]+1==dis[v]){\n\t\t\tg1[u].push_back(make_pair(w,v));\n\t\t\tind[v]++;\n\t\t\tg2[v].push_back(make_pair(w,make_pair(i,u)));\n\t\t}else if(dis[v]+1==dis[u]){\n\t\t\tg1[v].push_back(make_pair(w,u));\n\t\t\tind[u]++;\n\t\t\tg2[u].push_back(make_pair(w,make_pair(i,v))); \n\t\t}\n\t}\n}\nvoid topo1(){\n\tqueue<int> q;\n\tq.push(1),cnt[1]=0;\n\twhile(!q.empty()){\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tfor(int i=0;i<g1[u].size();i++){\n\t\t\tint v=g1[u][i].second;\n\t\t\tint w=g1[u][i].first;\n\t\t\tcnt[v]=max(cnt[v],cnt[u]+w);\n\t\t\tind[v]--;\n\t\t\tif(!ind[v]) q.push(v);\n\t\t}\n\t}\n}\nvoid topo2(){\n\tqueue<int> q;\n\tq.push(n);\n\twhile(!q.empty()){\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tfor(int i=0;i<g2[u].size();i++){\n\t\t\tint v=g2[u][i].second.second;\n\t\t\tint w=g2[u][i].first;\n\t\t\tint id=g2[u][i].second.first;\n\t\t\tif(cnt[u]-w==cnt[v]){\n\t\t\t\tq.push(v);\n\t\t\t\tmark[id]=1;\n\t\t\t\tbreak; \n\t\t\t}\n\t\t} \n\t}\n}\nint main(){\n    n=read(),m=read();\n    for(int i=1;i<=m;i++){\n    \tint u=read(),v=read(),w=read();\n    \tif(w) tot++;\n    \te[i].u=u,e[i].v=v,e[i].w=w;\n    \tg[u].push_back(v);\n    \tg[v].push_back(u);\n\t}\n\tdij();\n\tselect();\n\ttopo1();\n\ttopo2();\n\tcout<<tot+dis[n]-2*cnt[n]<<endl;\n\tfor(int i=1;i<=m;i++){\n\t\tif(mark[i]&&!e[i].w) cout<<e[i].u<<\" \"<<e[i].v<<\" \"<<1<<endl;\n\t\telse if(!mark[i]&&e[i].w) cout<<e[i].u<<\" \"<<e[i].v<<\" \"<<0<<endl;\n\t}\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1666618070,
        "uid": 306545,
        "name": "Travller",
        "ccfLevel": 4,
        "title": "Breaking Good"
    },
    {
        "content": "\u8fd9\u9053\u9898\u76ee\u76f4\u63a5 bfs \u5373\u53ef\uff0c\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u8981\u7528 SPFA\u3002\n\n\u5b58\u8fb9\u7684\u65f6\u5019\uff0c\u9700\u8981\u591a\u5b58\u4e00\u4e2a\u6709\u5173\u4e8e\u8be5\u9053\u8def\u72b6\u6001\u7684\u4fe1\u606f\u3002\u7136\u540e\uff0c\u8fb9 bfs \u8fb9 dp\u3002\n\n\u8bb0 $f_i$ \u4e3a\u4ece $1$ \u5f00\u59cb\uff0c\u8d70\u5230 $i$ \u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\uff0c$g_i$ \u4e3a\u8fbe\u5230 $f_i$ \u6240\u9700\u8981\u4fee\u6539\u9053\u8def\u72b6\u6001\u7684\u6700\u5c0f\u6b21\u6570\u3002\u82e5 $f_v>f_u+1$\uff0c\u90a3\u4e48\u76f4\u63a5\u66f4\u65b0\uff0c\u5426\u5219\u5982\u679c $f_v=f_u+1$\uff0c\u90a3\u4e48\u5c31\u4ee5\u4fee\u6539\u6b21\u6570\u66f4\u65b0\u7b54\u6848\u3002\n\n\u8fd9\u6837\u4e3a\u4ec0\u4e48\u662f\u6b63\u786e\u7684\u5462\uff1f\u56e0\u4e3a\u6b63\u5e38\u7684\u9053\u8def\u548c\u5f02\u5e38\u7684\u9053\u8def\u7684\u6570\u91cf\u662f\u4e00\u5b9a\u7684\uff0c\u800c $g_n$ \u662f\u4fee\u6539\u7684\u6700\u5c0f\u6b21\u6570\uff0c\u6240\u4ee5\u9700\u8981\u70b8\u6bc1\u7684\u9053\u8def\u4e5f\u662f\u6700\u5c11\u7684\u3002\n\n\u6700\u540e\uff0c\u56e0\u4e3a\u8981\u8f93\u51fa\u65b9\u6848\uff0c\u6240\u4ee5\u8981\u8bb0\u5f55\u4e00\u4e2a $pre$ \u6570\u7ec4\u4e3a\u7ecf\u8fc7\u7684\u8fb9\u3002\n\n```cpp\n#include<ctime>\n#include<queue>\n#include<cctype>\n#include<cstdio>\nconst int N = 1e5 + 10;\nusing namespace std;\ninline int read() {\n\tint x = 0, f = 1; char c;\n\twhile (!isdigit(c = getchar())) f -= (c == '-') * 2;\n\twhile (isdigit(c)) x = x * 10 + f * (c - 48), c = getchar();\n\treturn x;\n}\nstruct Edge {\n\tint to, st, nxt; Edge(int to = 0, int st = 0, int nxt = 0): to(to), st(st), nxt(nxt){}\n} e[N * 2];\nstruct node {\n\tint u, v, w; node(int u = 0, int v = 0, int w = 0): u(u), v(v), w(w){}\n} a[N];\nint n, m, x, y, z, tot, ans, head[N], f[N], g[N], vis[N], pre[N];\nvoid out(int p, int st) {//st\u4ee3\u8868\u8fd9\u6b21\u662f\u5426\u8981\u8f93\u51fa\uff0c\u7b2c\u4e00\u6b21\u4e0d\u8f93\u51fa\uff0c\u56e0\u4e3a\u8fd8\u4e0d\u77e5\u9053\u6700\u5c11\u4fee\u6539\u6b21\u6570\n\tif (p == 1) return;\n\tint u = a[pre[p]].u, v = a[pre[p]].v, w = a[pre[p]].w;\n\tvis[pre[p]] = 1, out(u == p ? v : u, st);\n\tif (!st) return;\n\tif (!w) printf(\"%d %d 1\\n\", u, v);\n}\nvoid add(int u, int v, int w) {\n\te[++tot] = Edge(v, w, head[u]);\n\thead[u] = tot;\n}\nvoid bfs() {\n\tqueue<int> q; q.push(1);\n\tfor (int i = 2; i <= n; ++i) f[i] = n;\n\twhile (!q.empty()) {\n\t\tint u = q.front(); q.pop();\n\t\tfor (int i = head[u]; i; i = e[i].nxt) {\n\t\t\tint v = e[i].to, id = (i + 1) / 2, w = e[i].st;\n\t\t\tif (f[v] > f[u] + 1)\n\t\t\t\tf[v] = f[u] + 1, g[v] = g[u] + (w ^ 1), pre[v] = id, q.push(v);\n\t\t\telse if (f[v] == f[u] + 1 && g[v] > g[u] + (w ^ 1))\n\t\t\t\tg[v] = g[u] + (w ^ 1), pre[v] = id;\n\t\t}\n\t}\n}\nint main() {\n\tn = read(), m = read();\n\tfor (int i = 1; i <= m; ++i) {\n\t\tx = read(), y = read(), z = read();\n\t\tadd(x, y, z), add(y, x, z);\n\t\ta[i] = node(x, y, z);\n\t}\n\tbfs();\n\tans = g[n];\n\tout(n, 0);\n\tfor (int i = 1; i <= m; ++i) if (!vis[i] && a[i].w) ++ans;\n\tprintf(\"%d\\n\", ans);\n\tout(n, 1);\n\tfor (int i = 1; i <= m; ++i) {\n\t\tif (!vis[i] && a[i].w)\n\t\tprintf(\"%d %d 0\\n\", a[i].u, a[i].v);\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1609990946,
        "uid": 181378,
        "name": "Alarm5854",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF507E \u3010Breaking Good\u3011"
    },
    {
        "content": "\u9898\u89e3\u5168\u90fd\u662f$SPFA$\u662f\u600e\u4e48\u56de\u4e8b\u554a\u3002\u3002\n\n\u9996\u5148\u5206\u6790\u9898\u76ee\u53d1\u73b0\u9898\u76ee\u5b9e\u9645\u4e0a\u5c31\u662f\u8981\u6c42\u9009\u7684\u6700\u77ed\u8def\u4e0a\u7684\u4e0d\u80fd\u901a\u884c\u7684\u9053\u8def\u5c3d\u91cf\u7684\u5c11\uff0c\u56e0\u4e3a\u6700\u77ed\u8def\u662f\u56fa\u5b9a\u7684\u3002\n\n\u7136\u540e\u8003\u8651\u6c42\u6700\u77ed\u8def\uff0c\u53d1\u73b0\u8fb9\u957f\u90fd\u662f$1$\u76f4\u63a5\u8dd1\u4e00\u4e2a$bfs$\u5373\u53ef\u3002\n\n\u628a\u6700\u77ed\u8def\u6c42\u51fa\u6765\u4e4b\u540e\u8003\u8651\u628a\u6700\u77ed\u8def\u56fe\u7ed9\u5f04\u51fa\u6765\uff0c\u7136\u540e\u8003\u8651\u5728\u4e0a\u9762$dp$\uff0c\u8bbe$f[i]$\u4e3a\u4ece$1$\u5230$i$\u5728\u6700\u77ed\u8def\u56fe\u7684\u8def\u4e0a\u6700\u5c11\u7684\u4e0d\u80fd\u901a\u884c\u7684\u9053\u8def\uff0c\u62d3\u6251\u6392\u5e8f\u8f6c\u79fb\u5373\u53ef\u3002\n\n\u8fd9\u6837\u5c31\u505a\u5b8c\u4e86\uff0c\u590d\u6742\u5ea6$O(n)$\u3002\n\ncode\uff1a\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#include<iostream>\n#include<set>\n#include<vector>\n#include<queue>\n#include<stack>\n#include<bitset>\n#define eps 1e-15\n#define maxn 100010\n#define maxm 410\n#define inf 1000000007\n#define mod 1000000007\n#define mp(x,y) make_pair(x,y)\n#define fi first\n#define se second\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned int uint;\ntypedef pair<int,int> pii;\nint read()\n{\n    int x=0,f=1;\n    char ch=getchar();\n    while(ch-'0'<0||ch-'0'>9){if(ch=='-') f=-1;ch=getchar();}\n    while(ch-'0'>=0&&ch-'0'<=9){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\nint n,m;\nstruct P{\n    int u,v,w;\n}e[maxn];\nint head[maxn],nxt[maxn*2],to[maxn*2],c[maxn*2],id[maxn*2],tot;\nvoid add(int u,int v,int x,int y)\n{\n    tot++;\n    nxt[tot]=head[u];\n    head[u]=tot;\n    to[tot]=v;\n    c[tot]=x;\n    id[tot]=y;\n}\nint dis[maxn];\nqueue<int>q;\nvoid get_dis()\n{\n    for(int i=2;i<=n;i++)  dis[i]=-1;\n    q.push(1);\n    while(q.size())\n    {\n        int now=q.front();\n        q.pop();\n        for(int i=head[now];i;i=nxt[i])\n        {\n            if(dis[to[i]]<0)\n            {\n                dis[to[i]]=dis[now]+1;\n                q.push(to[i]);\n            }\n        }\n    }\n}\nint f[maxn],las[maxn],las_id[maxn],deg[maxn];\nvoid DP()\n{\n    for(int i=1;i<=n;i++)  f[i]=inf;f[1]=0;\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=head[i];j;j=nxt[j])\n        {\n            if(dis[to[j]]==dis[i]+1)  deg[to[j]]++;\n        }\n    }\n    q.push(1);\n    while(q.size())\n    {\n        int now=q.front();\n        q.pop();\n        for(int i=head[now];i;i=nxt[i])\n        {\n            if(dis[to[i]]==dis[now]+1)\n            {\n                deg[to[i]]--;\n                if(f[to[i]]>f[now]+(c[i]^1))\n                {\n                    f[to[i]]=f[now]+(c[i]^1);\n                    las[to[i]]=now;\n                    las_id[to[i]]=id[i];\n                }\n                if(!deg[to[i]])  q.push(to[i]);    \n            }\n        }\n    }\n}\nint ans[maxn],res;\nint main()\n{\n    n=read();m=read();\n    for(int i=1;i<=m;i++)\n    {\n        e[i].u=read();e[i].v=read();e[i].w=read();\n        add(e[i].u,e[i].v,e[i].w,i);\n        add(e[i].v,e[i].u,e[i].w,i);\n    }\n    get_dis();\n    DP();\n    for(int i=n;i!=1;i=las[i])  ans[las_id[i]]=1;\n    for(int i=1;i<=m;i++)\n      if(e[i].w^ans[i])  res++;\n    printf(\"%d\\n\",res);\n    for(int i=1;i<=m;i++)\n    {\n        if(e[i].w^ans[i])  printf(\"%d %d %d\\n\",e[i].u,e[i].v,ans[i]);\n    }\n    return 0;\n}\n```",
        "postTime": 1580788134,
        "uid": 46396,
        "name": "justin_cao",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF507E \u3010Breaking Good\u3011"
    },
    {
        "content": "### \u5206\u6790\n\u9996\u5148\uff0c\u6211\u4eec\u8981\u9009\u62e9\u4e00\u6761\u6700\u77ed\u7684\u8def\u5f84\n\n\u5728\u8def\u5f84\u6700\u77ed\u7684\u57fa\u7840\u4e0a\uff0c\u6211\u4eec\u8981\u5c3d\u91cf\u4f7f\u53d7\u5f71\u54cd\u7684\u9053\u8def\u6570\u66f4\u5c11\n\n\u56e0\u6b64\u6211\u4eec\u8981\u5728\u8dd1$Dij$\u7684\u7ed3\u6784\u4f53\u91cc\u5b58\u50a8\u4e09\u4e2a\u4e1c\u897f\n\n\u5373\u5f53\u524d\u8282\u70b9\u7684\u7f16\u53f7\uff0c\u5f53\u524d\u8282\u70b9\u8ddd\u79bb\u8d77\u70b9\u7684\u6700\u77ed\u8def\u5f84\uff0c\u5f53\u524d\u8def\u5f84\u4e0b\u66f4\u6539\u7684\u9053\u8def\u6761\u6570\n\n\u5728\u8fdb\u884c\u677e\u5f1b\u64cd\u4f5c\u65f6\uff0c\u5982\u679c$dis[u]>dis[now]+b[i].val$\n\n\u90a3\u4e48\u6211\u4eec\u50cf\u4e4b\u524d\u90a3\u6837\u66f4\u65b0$dis$\u503c\u5373\u53ef\n\n\u5982\u679c$dis[u]=dis[now]+b[i].val$\u4f46\u662f\u65b0\u7684\u8def\u5f84\u66f4\u6539\u7684\u9053\u8def\u6761\u6570\u66f4\u5c11\n\n\u6b64\u65f6\u6211\u4eec\u4e5f\u9700\u8981\u66f4\u65b0\n### \u4ee3\u7801\n``` cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=1e6+5;\nint head[maxn],tot=1;\nstruct asd{\n    int from,to,next,val,jud;\n}b[maxn];\nvoid ad(int aa,int bb,int cc,int dd){\n    b[tot].from=aa;\n    b[tot].to=bb;\n    b[tot].next=head[aa];\n    b[tot].val=cc;\n    b[tot].jud=dd;\n    head[aa]=tot++;\n}\nstruct jie{\n    int num,jl,hf;\n    jie(int aa,int bb,int cc){\n        num=aa,jl=bb,hf=cc;\n    }\n    bool operator < (const jie& A) const{\n        if(jl==A.jl) return hf>A.hf;\n        return jl>A.jl;\n    }\n};\npriority_queue<jie> q;\nbool viss[maxn];\nint dis[maxn],jl[maxn],hf[maxn];\nvoid dij(){\n    memset(dis,0x3f,sizeof(dis));\n    memset(hf,0x3f,sizeof(hf));\n    dis[1]=0;\n    hf[1]=0;\n    q.push(jie(1,0,0));\n    while(!q.empty()){\n        int now=q.top().num;\n        int nhf=q.top().hf;\n        q.pop();\n        if(viss[now]) continue;\n        viss[now]=1;\n        for(int i=head[now];i!=-1;i=b[i].next){\n            int u=b[i].to;\n            if(dis[u]>dis[now]+b[i].val){\n                dis[u]=dis[now]+b[i].val;\n                jl[u]=i;\n                hf[u]=nhf+b[i].jud;\n                q.push(jie(u,dis[u],hf[u]));\n            } else if(dis[u]==dis[now]+b[i].val){\n                if(hf[u]>nhf+b[i].jud){\n                    jl[u]=i;\n                    hf[u]=nhf+b[i].jud;\n                    q.push(jie(u,dis[u],hf[u]));\n                }\n            }\n        }\n    }\n}\nvector<int> g;\nbool vis[maxn];\nint main(){\n    memset(head,-1,sizeof(head));\n    int n,m;\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++){\n        int aa,bb,cc;\n        scanf(\"%d%d%d\",&aa,&bb,&cc);\n        ad(aa,bb,1,cc^1);\n        ad(bb,aa,1,cc^1);\n    }\n    dij();\n    int ans=0;\n    int now=n;\n    while(jl[now]){\n        if(jl[now]%2==0) g.push_back(jl[now]-1);\n        else g.push_back(jl[now]);\n        now=b[jl[now]].from;\n    }\n    for(int i=0;i<g.size();i++){\n        vis[g[i]]=1;\n    }\n    for(int i=1;i<tot;i+=2){\n        if(vis[i]){\n            if(b[i].jud==1){\n                ans++;\n            }\n        } else {\n            if(b[i].jud==0){\n                ans++;\n            }\n        }\n    }\n    printf(\"%d\\n\",ans);\n    for(int i=1;i<tot;i+=2){\n        if(vis[i]){\n            if(b[i].jud==1){\n                printf(\"%d %d %d\\n\",b[i].from,b[i].to,1);\n            } \n        } else {\n            if(b[i].jud==0){\n                ans++;\n                printf(\"%d %d %d\\n\",b[i].from,b[i].to,0);\n            }\n        }\n    }\n    return 0;\n}\n```\n",
        "postTime": 1596406968,
        "uid": 316322,
        "name": "hzoi_liuchang",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF507E \u3010Breaking Good\u3011"
    },
    {
        "content": "## SPFA\n\n\n------------\n### \u8fd9\u9053\u9898\u5927\u610f\n\u5728\u4e00\u4e2a\u6709n\u4e2a\u57ce\u5e02m\u6761\u9053\u8def\u7684\u56fd\u5bb6\uff0c\u6709\u4e00\u4e2a\u72af\u7f6a\u56e2\u4f19\u8981\u53bb\u62a2\u52ab\u94f6\u884c\uff0c\u94f6\u884c\u5728\u57ce\u5e021\uff0c\u72af\u7f6a\u56e2\u4f19\u5728\u57ce\u5e02n\uff0c\nwalter\u7684\u4efb\u52a1\u662f\u5728\u57ce\u5e021\u548c\u57ce\u5e02n\u4e4b\u95f4\u9009\u62e9\u4e00\u4e2a\u6700\u77ed\u8def\u5f84\uff0c\u5f53\u6709\u591a\u4e2a\u6700\u77ed\u8def\u5f84\u7684\u65f6\u5019\u9009\u62e9\u5f71\u54cd\u503c\u6700\u5c0f\u7684 \uff0c\n\u4e3a0\u7684\u9053\u8def\u662f\u6307\u672a\u5de5\u4f5c\u7684\uff0c\u4e3a1\u7684\u9053\u8def\u662f\u6307\u4fee\u597d\u7684\uff0cwalter\u5728\u9009\u62e9\u597d\u6700\u77ed\u8def\u5f84\u540e\uff0c\u8981\u4fee\u590d\u597d\u6700\u77ed\u8def\u5f84\u4e0a\n\u672a\u5de5\u4f5c\u7684\u8def\uff0c\u7834\u574f\u5176\u4ed6\u8def\u5f84\u4e0a\u5de5\u4f5c\u7684\u8def\u5f84\u3002\n\n**\u5f71\u54cd\u503c= \u4fee\u590d+\u7834\u574f\u7684\u9053\u8def**   \n**\u4fee\u590d\u7684\u9053\u8def=\u6700\u77ed\u8def\u5f84\u6570-\u6700\u77ed\u8def\u5f84\u4e0a\u5de5\u4f5c\u7684\u8def\u5f84**  \n**\u7834\u574f\u7684\u9053\u8def=\u5de5\u4f5c\u7684\u603b\u9053\u8def-\u6700\u77ed\u8def\u5f84\u4e0a\u5de5\u4f5c\u7684\u9053\u8def** \n#### ~~\u6240\u4ee5\u8981\u4f7f\u5f71\u54cd\u503c\u6700\u5c0f\u5e94\u8be5\u4f7f\u5f97~~\n### **\u6700\u77ed\u8def\u5f84\u4e0a\u9762\u5de5\u4f5c\u7684\u9053\u8def\u6700\u591a**\n\n```cpp\n#include<cstdio>\n#include<queue>\n#include<vector>\n#include<cstring>\n#define NN 100001\n#define inf 0x7fffffff\nusing namespace std;\nint N,M,sum,ok,x;\nstruct ss{\n    int to,c,fl;\n    bool operator < (const ss &r)const{return r.c<c;}\n};\nint dis[NN],used[NN],s[NN],val[NN],A[NN],B[NN],C[NN];\nvector<ss>q[NN],ans[NN];\nint main()\n{\n    scanf(\"%d%d\",&N,&M);\n    for(int i=1;i<=M;i++)\n    {\n        scanf(\"%d%d%d\",&A[i],&B[i],&C[i]);\n        //C\u8868\u793a\u8def\u5f84\u7684\u72b6\u51b5\uff0c\u662f\u5de5\u4f5c\u8fd8\u662f\u672a\u5de5\u4f5c \n        q[A[i]].push_back((ss){B[i],0,C[i]});\n        q[B[i]].push_back((ss){A[i],0,C[i]});\n        sum+=C[i];//\u8bb0\u5f55\u6574\u4e2a\u56fe\u7684\u5de5\u4f5c\u7684\u8def\u5f84\u7684\u4e2a\u6570\n    }\n    for(int i=2;i<=N;i++)dis[i]=inf;\n    priority_queue<ss>que;\n    que.push((ss){1,0});\n    while(!que.empty())\n    {\n        ss t=que.top();que.pop();\n        int u=t.to;\n        used[u]=0;\n        for(int i=0;i<q[u].size();i++)\n        {\n            int v=q[u][i].to;\n            int fl=q[u][i].fl;\n            if(dis[v]>dis[u]+1||((dis[v]==dis[u]+1)&&(val[v]<val[u]+fl)))\n            {\n                dis[v]=dis[u]+1;\n                val[v]=val[u]+fl;\n                s[v]=u;//\u8bb0\u5f55\u524d\u9a71\u7ed3\u70b9\n                if(!used[v])\n                {\n                    que.push((ss){v,dis[v]});\n                    used[v]=1;\n                }\n            }\n        }\n    }\n    memset(used,0,sizeof(used));used[1]=1;\n    ok=dis[N]-val[N]*2+sum;\n    //\u5f71\u54cd\u503c=\u6700\u77ed\u8def\u5f84\u4e2d\u7684\u672a\u5de5\u4f5c\u7684\u8def\u5f84+\u5176\u4ed6\u8def\u5f84\u4e2d\u5de5\u4f5c\u7684\u8def\u5f84   \n    x=N;\n    while(x!=1)\n    {\n        used[x]=1;\n        x=s[x];\n    }\n    printf(\"%d\\n\",ok);\n    for(int i=1;i<=M;i++)\n    {\n        if(used[A[i]]&&used[B[i]]&&C[i]==0)\n         printf(\"%d %d 1\\n\",A[i],B[i]);//\u6700\u77ed\u8def\u5f84\u8f93\u51fa\u672a\u5de5\u4f5c\u7684\u8def\u5f84\n        if((!used[A[i]]||!used[B[i]])&&C[i]==1)\n         printf(\"%d %d 0\\n\",A[i],B[i]);//\u5176\u4ed6\u8def\u5f84\u8f93\u51fa\u5de5\u4f5c\u7684\u8def\u5f84\n    }\n    return 0;\n}\n```",
        "postTime": 1525853875,
        "uid": 57146,
        "name": "ifyml",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF507E \u3010Breaking Good\u3011"
    },
    {
        "content": "## [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF507E)\n\n---\n\n### \u9898\u610f\u5206\u6790\uff1a\n\n\u8fd9\u9898\u6700\u91cd\u8981\u7684\u662f\u8981\u770b\u61c2\u9898\u76ee\u610f\u601d\uff1a\n\n- \u7ed9\u51fa n \u4e2a\u57ce\u5e02\u548c m \u6761\u8fb9\uff0c\u5176\u4e2d z \u8868\u793a\u6b64\u8fb9\u662f\u5426\u80fd\u901a\u884c\u3002\n- \u6c42\u4e00\u6761\u4ece\u57ce\u5e02 $ 1 $ \u5230 n \u5c3d\u53ef\u80fd\u77ed\u4e14\u5bf9\u9053\u8def\u7684\u5f71\u54cd\uff08\u5373\u70b8\u6bc1\u6216\u4fee\u590d\uff09\u5c3d\u53ef\u80fd\u5c0f\u7684\u8def\u3002\n\n**\u90a3\u4e48\u5982\u4f55\u4f7f\u9009\u51fa\u7684\u8def\u5bf9\u9053\u8def\u7684\u5f71\u54cd\u5c0f\u5462\uff1f**\n\n\u591a\u8bfb\u51e0\u904d\u9898\u53ef\u77e5\uff1a\n\n1. \u5bf9\u4e8e\u5728\u6240\u9009\u8def\u5f84\u4e0a\u7684\u8def\uff0c\u6240\u8981\u4fee\u590d\uff08\u5373\u4e0d\u53ef\u901a\u884c\uff09\u7684\u8def\u8981\u5c3d\u53ef\u80fd\u5c11\u3002\n2. \u5bf9\u4e8e\u975e\u6240\u9009\u8def\u5f84\u4e0a\u7684\u8def\uff0c\u6240\u8981\u70b8\u6bc1\uff08\u5373\u53ef\u901a\u884c\uff09\u7684\u8def\u8981\u5c3d\u53ef\u80fd\u5c11\u3002\n\n## \u89e3\uff1a\n\n\u8fd9\u9898\u7528\u6700\u77ed\u8def\u505a\uff08~~\u5173\u4e8e SPFA \uff0c\u5b83\u6b7b\u4e86\u3002~~\uff09\uff0c\u4e8e\u662f\u6211\u7528 Dijkstra \u505a\u3002\n\n---\n\n\u6839\u636e\u521a\u624d\u7684\u5206\u6790\uff0c\n\n\u6211\u4eec\u7528 $ dis_{ i } $ \u8868\u793a\u4ece\u57ce\u5e02 $ 1 $ \u5230 i \u7684\u6700\u77ed\u8def\u957f\u5ea6\uff0c\n\n$ path_{ i } $ \u8868\u793a\u6240\u9009\u6700\u77ed\u8def\u4e2d\u4ece\u57ce\u5e02 1 \u5230 i \u7684\u4e0d\u53ef\u901a\u884c\u8def\u7684\u6570\u91cf\uff0c\n\n\u66f4\u65b0\u65f6\u8003\u8651\u627e\u8def\u5f84\u6700\u77ed\uff0c\u4e14\u8def\u5f84\u4e2d\u4e0d\u53ef\u901a\u884c\u8def\u6570\u91cf\u5c11\uff1a\n\n```cpp\n//it.nxt\u8868\u793a\u4e0b\u4e00\u4e2a\u57ce\u5e02\uff0cnow\u8868\u793a\u73b0\u5728\u7684\u57ce\u5e02\uff0c\n//it.w\u8868\u793a\u8fd9\u6761\u8def\u80fd\u5426\u901a\u884c\uff08\u56e0\u4e3a 0 \u8868\u793a\u4e0d\u53ef\u901a\u884c\uff0c\u6240\u4ee5\u52a0 !it.w\uff0c\u5373\u52a0 1\uff09\u3002\nif((dis[it.nxt]==dis[now]+1&&path[it.nxt]>path[now]+!it.w)||dis[it.nxt]>dis[now]+1)\n{\n    \u66f4\u65b0...\n}\n```\n\n---\n\n#### \u8f93\u51fa\uff1a\n\n\u8fd9\u9898\u7684\u8f93\u51fa\u4e5f\u662f\u6709\u70b9\u9ebb\u70e6\u3002\n\n\u6211\u4eec\u5148\u7528 $ pre_{ v } = u $ \u8868\u793a\u524d\u9a71\uff0c\u5373\u8def\u5f84\u4e2d\u57ce\u5e02 v \u7684\u4e0a\u4e00\u4e2a\u662f\u57ce\u5e02 u\uff0c\n\n\u8dd1\u5b8c Dijkstra \u540e\u4ece n \u70b9\u9012\u5f52\u6807\u8bb0\u9009\u51fa\u7684\u6700\u77ed\u8def\uff1a\n\n```cpp\nvoid Print(int x)\n{\n    vis[x]=1;\n    if(pre[x])\n        Print(pre[x]);\n}\nint main()\n{\n    ...\n    memset(vis,0,sizeof(vis));\n    Print(n);\n    ...\n}\n```\n\n\u7136\u540e\u5bf9\u4e8e\u6240\u6709\u8fb9\u6309\u9898\u610f\u6a21\u62df\u4e00\u904d\u8f93\u51fa\u5373\u53ef\u3002\uff08\u5177\u4f53\u89c1\u4ee3\u7801\uff09\n\n---\n\n### Code\uff1a\n\n**\u6ce8\uff1a**\n\n\u672c\u4ee3\u7801\u4e2d\u6709\u5173 **auto** \u7684\u7528\u6cd5\u6700\u597d\u7528 C++17 \u63d0\u4ea4\uff0c\n\n\u4e0d\u8fc7\u5176\u5b9e\u8fd9\u4e2a\u5728 C++14 \u5c31\u80fd\u7528\uff08\u53ea\u662f\u4f1a\u8b66\u544a\uff0c\u6211\u5e73\u65f6\u90fd\u7528 C++14 \u4ea4\u7684\uff09\uff0c\n\n\u4f46\u8fd9\u9898\u7528 C++14 \u5728 CF \u4e0a\u4ea4\u4f1a CE\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct Node{\n    int nxt;bool w;\n};\nint n,m;\nvector<Node>a[100001];//\u672c\u4eba\u8f83\u61d2\uff0c\u5c31\u7528vector\u5b58\u8fb9\u4e86\n\nint dis[100001],vis[100001],path[100001],pre[100001];\ntypedef pair<int,int> Pii;\npriority_queue<Pii,vector<Pii>,greater<Pii> >q;//\u5c0f\u6839\u5806\n\nvoid Dijkstra(int s)//\u5806\u4f18\u5316 Dijkstra\n{\n    memset(dis,0x3f,sizeof(dis));//\u521d\u59cb\u5316\n    memset(path,0x3f,sizeof(path));//\u522b\u5fd8\u8bb0\u521d\u59cb\u5316 path \n    dis[s]=0;path[s]=0;q.emplace(0,s);\n    while(!q.empty())\n    {\n        auto [w,now]=q.top();q.pop();\n        if(vis[now])continue;\n        vis[now]=1;\n        for(auto it:a[now])//\u904d\u5386\u4e0e\u57ce\u5e02 now \u76f8\u8fde\u7684\u57ce\u5e02\uff0c\u7528 auto \u53ef\u4ee5\u7701\u5f88\u591a\u7801\u3002\n        {\n            if((dis[it.nxt]==dis[now]+1&&path[it.nxt]>path[now]+!it.w)||dis[it.nxt]>dis[now]+1)\n            {\n                //\u66f4\u65b0\n                dis[it.nxt]=dis[now]+1;\n                path[it.nxt]=path[now]+!it.w;\n                pre[it.nxt]=now;\n                q.emplace(dis[it.nxt],it.nxt);\n            }\n        }\n    }\n}\nvoid Print(int x)//\u9012\u5f52\u6807\u8bb0\u9009\u51fa\u7684\u8def\u5f84\n{\n    vis[x]=1;\n    if(pre[x])\n        Print(pre[x]);\n}\nint ans[100001][3],sum;//\u7528\u6765\u5b58\u7b54\u6848\nsigned main()\n{\n\tios::sync_with_stdio(0);\n    cin.tie(0),cout.tie(0);\n    cin>>n>>m;\n    for(int i=1,u,v,w;i<=m;i++)//\u65e0\u5411\u56fe\u5b58\u8fb9\n        cin>>u>>v>>w,a[u].emplace_back((Node){v,w}),a[v].emplace_back((Node){u,w});\n    Dijkstra(1);\n    memset(vis,0,sizeof(vis));\n    Print(n);\n    for(int i=1;i<=n;i++)\n    {\n        for(auto it:a[i])\n        {\n            if((vis[i]&&vis[it.nxt]&&it.w==1)||(!(vis[i]&&vis[it.nxt])&&it.w==0))continue;//\u6309\u9898\u610f\u6a21\u62df\n            else if(i<it.nxt)//\u65e0\u5411\u56fe\u9632\u6b62\u91cd\u590d\u8f93\u51fa\n            {\n                sum++;\n                ans[++ans[0][0]][0]=i,ans[ans[0][0]][1]=it.nxt,ans[ans[0][0]][2]=!it.w;//\u8bb0\u5f55\u7b54\u6848\uff0c\u4fee\u590d\u548c\u70b8\u6bc1\u548c\u539f\u5148\u53cd\u4e00\u4e0b\uff0c\u6240\u4ee5\u5b58 !it.w\n            }\n        }\n    }\n    cout<<sum<<'\\n';//\u8f93\u51fa\n    for(int i=1;i<=ans[0][0];i++)\n        cout<<ans[i][0]<<' '<<ans[i][1]<<' '<<ans[i][2]<<'\\n';\n\treturn 0;\n}\n\n```",
        "postTime": 1645945183,
        "uid": 371984,
        "name": "RC\u00b7\u963f\u67d2",
        "ccfLevel": 0,
        "title": "CF507E Breaking Good\u9898\u89e3"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9898\u76f4\u63a5\u6a21\u62df\u9898\u610f\u5373\u53ef\u3002\n\n- \u5148\u628a\u6240\u6709\u7684\u6700\u77ed\u8def\u6c42\u51fa\u6765\uff08\u6211\u7528\u4e86dijkstra\uff09\uff0c\u987a\u4fbf\u8bb0\u5f55\u6700\u77ed\u8def\u4e0a\u6bcf\u4e2a\u70b9\u7684\u7236\u4eb2\uff08\u540e\u9762\u904d\u5386\u8981\u7528\uff09\u3002\n\n- \u7136\u540e\u4ece $n$ \u53f7\u70b9\u5f00\u59cbdfs\uff0c\u904d\u5386\u6bcf\u4e00\u6761\u6700\u77ed\u8def\uff0c\u8bb0\u5f55\u8fd9\u6761\u6700\u77ed\u8def\u4e0a\u7684\u574f\u6389\u7684\u8def\uff08sum\uff09\u3002\u5f53\u8d70\u5230 $1$ \u53f7\u70b9\u65f6\uff0c\u628a\u7b54\u6848\u548c\u8fd9\u6761\u6700\u77ed\u8def\u8981\u4fee\u6539\u8def\u5f84\u7684\u6761\u6570\u53d6 $min$ \u5373\u53ef\uff0c\u987a\u4fbf\u8bb0\u5f55\u8def\u5f84\u3002\n\n- \u679a\u4e3e\u6bcf\u4e00\u6761\u8fb9\uff0c\u5982\u679c\u5b83\u4e0d\u5728\u7b54\u6848\u7684\u6700\u77ed\u8def\u4e0a\u4e14\u5b83\u662f\u597d\u7684\uff0c\u5c31\u8981\u628a\u5b83\u70b8\u6389\u3002\u5982\u679c\u5b83\u5728\u7b54\u6848\u7684\u6700\u77ed\u8def\u4e0a\u4e14\u5b83\u662f\u574f\u7684\uff0c\u5c31\u8981\u628a\u5b83\u4fee\u597d\u3002\n\n\u7136\u540e\u5c31\u662f\u4ee3\u7801\u5b9e\u73b0\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=100005;\nint n,m,edgenum,tot,ans,ans2=2e9,head[N],Next[N*2],vet[N*2],d[N],p[N],ans3[N],X[N],Y[N],Z[N];\nbool vis[N];\npriority_queue<pair<int,int> >q;\nvector<int> fa[N];\nmap<int,int> mp[N],flag[N];\nvoid add(int u,int v){\n\tedgenum++;\n\tNext[edgenum]=head[u];\n\tvet[edgenum]=v;\n\thead[u]=edgenum;\n}\nvoid dij(int s){\n    for(int i=1;i<=n;i++)d[i]=2e9;\n\td[s]=0;\n\tq.push(make_pair(0,s));\n\twhile(!q.empty()){\n\t\tint u=q.top().second;\n\t\tq.pop();\n        if(vis[u])continue;\n\t\tvis[u]=1;\n\t\tfor(int e=head[u];e;e=Next[e]){\n\t\t\tint v=vet[e];\n\t\t\tif(d[v]>d[u]+1){\n\t\t\t\td[v]=d[u]+1;\n\t\t\t\tfa[v].clear();\n\t\t\t\tfa[v].push_back(u);\n\t\t\t\tif(!vis[v])q.push(make_pair(-d[v],v));\n\t\t\t}\n\t\t\telse if(d[v]==d[u]+1)fa[v].push_back(u);\n\t\t}\n\t}\n}\nvoid dfs(int u,int sum,int l){\n\tif(u==1){\n\t\tif(sum+tot-(ans-sum)<ans2){\n\t\t\tfor(int i=1;i<=ans+1;i++)ans3[i]=p[i];\n\t\t\tans2=sum+tot-(ans-sum);\n\t\t}\n\t\treturn;\n\t}\n\tfor(int i=0;i<fa[u].size();i++){\n\t\tint v=fa[u][i];\n\t\tif(vis[v])continue;\n\t\tp[l]=v;\n\t\tint sum2=sum;\n\t\tif(mp[u][v]==0)sum2++;\n\t\tvis[v]=1;\n\t\tdfs(v,sum2,l+1);\n\t\tvis[v]=0;\n\t}\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++){\n\t\tint u,v,w;\n\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\tadd(u,v);\n\t\tadd(v,u);\n\t\tif(w==1)tot++;\n\t\tX[i]=u,Y[i]=v,Z[i]=w;\n\t\tmp[u][v]=mp[v][u]=w;\n\t}\n\tdij(1);\n\tans=d[n];\n\tp[1]=n;\n\tmemset(vis,0,sizeof(vis));\n\tdfs(n,0,2);\n\tfor(int i=1;i<=ans;i++){\n\t\tflag[ans3[i]][ans3[i+1]]=flag[ans3[i+1]][ans3[i]]=1;\n\t\t// cout<<ans3[i]<<\"O\";\n\t}\n\tputs(\"\");\n\tprintf(\"%d\\n\",ans2);\n\tfor(int i=1;i<=m;i++){\n\t\tif(Z[i]==0){\n\t\t\tif(flag[X[i]][Y[i]]==1)printf(\"%d %d %d\\n\",X[i],Y[i],1);\n\t\t}\n\t\telse{\n\t\t\tif(flag[X[i]][Y[i]]==0)printf(\"%d %d %d\\n\",X[i],Y[i],0);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1617703664,
        "uid": 188389,
        "name": "QQH08",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF507E Breaking Good"
    },
    {
        "content": "## \u601d\u8def\n\u4e3a\u5565\u8981\u7528 $\\verb!SPFA!$\uff0c\u660e\u660e\u5c31\u662f\u4e2a $\\verb!dij!$ \u7684\u6a21\u677f\u3002\u53ea\u4e0d\u8fc7\u6211\u4eec\u5728\u8bb0\u5f55\u6700\u77ed\u8def\u7684\u65f6\u5019\u8fd8\u8981\u8bb0\u5f55\u4e00\u4e2a\u53d8\u91cf\u4e3a\u5f53\u524d\u8def\u9014\u4e0a\u53ef\u4ee5\u901a\u884c\u7684\u8def\u7684\u6761\u6570\u3002\u663e\u7136\u8fd9\u4e2a\u6761\u6570\u8d8a\u591a\u8d8a\u597d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c11\u4fee\u51e0\u6761\u3002\n\n\u81f3\u4e8e\u65b9\u6848\uff0c\u6211\u4eec\u5728\u8dd1 $\\verb!dij!$ \u7684\u65f6\u5019\u8bb0\u5f55 $\\verb!pre!$\uff0c\u4ee3\u8868\u5b83\u662f\u4ece\u54ea\u91cc\u8f6c\u79fb\u8fc7\u6765\u7684\u3002\u6700\u540e\u8f93\u51fa\u65b9\u6848\u7684\u8fc7\u7a0b\u7565\u663e\u7e41\u7410\uff0c\u6211\u4f7f\u7528\u4e86\u4e00\u4e2a $\\verb!set!$ \u8bb0\u5f55\u4e0d\u9700\u8981\u53d8\u52a8\u7684\u8fb9\uff0c\u6bcf\u6b21\u626b\u5230\u4e00\u4e2a\u8fb9\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u5df2\u7ecf\u4e0d\u9700\u53d8\u52a8\u5373\u53ef\u3002\n## \u5197\u957f\u7684\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define rint register int\n#define F first\n#define S second\n#define mp make_pair\nint const N=1e5+10;\nint f[N],f1[N],pre[N];\nvector<int>a[N],b[N];\nset< pair<int,int> >finish;\nvector< pair<int,int> >xiu,ans;\npriority_queue< pair<int,int>,deque< pair<int,int> >,greater< pair<int,int> > >q;\ninline void dijkstra(int st){\n\tmemset(f,0x3f,sizeof(f));\n\tmemset(f1,0x3f,sizeof(f1));\n\tf[st]=f1[st]=0;\n\tq.push(mp(0,st));\n\twhile (!q.empty()){\n\t\tint now=q.top().second,dis=q.top().first;\n\t    q.pop();\n\t\tfor (rint j=0;j<a[now].size();++j){\n\t    \tint to=a[now][j],cost=1-b[now][j];\n\t        if (f[now]+1<f[to]) f[to]=f[now]+1,f1[to]=f1[now]+cost,pre[to]=now,q.push(mp(f[to],to));\n\t\t    if (f[now]+1==f[to] && f1[now]+cost<f1[to]) f1[to]=f1[now]+cost,pre[to]=now,q.push(mp(f[to],to));//\u8fd9\u662f\u9700\u8981\u4fee\u6539\u7684\u8def\u7684\u6570\u91cf\n\t\t}\n\t}\n}\nsigned main(){\n\tios::sync_with_stdio(false);\n\tcin.tie(0),cout.tie(0);\n\tint n,m;cin>>n>>m;\n\tfor (rint i=1;i<=m;++i){\n\t\tint x,y,z;cin>>x>>y>>z;\n\t\ta[x].push_back(y);\n\t\ta[y].push_back(x);\n\t\tb[x].push_back(z);\n\t\tb[y].push_back(z);\n\t}\n\tdijkstra(1);\n\tint now=n;\n\twhile (now!=1){\n\t\tint to=pre[now],x=now;\n\t\tfor (rint i=0;i<a[x].size();++i)\n\t\t    if (a[x][i]==to){\n\t\t\t\tif (b[x][i]==0) xiu.push_back(mp(x,a[x][i]));\n\t\t\t\tfinish.insert(mp(x,a[x][i]));\n\t\t\t\tbreak;\n\t\t\t}\n\t\tnow=pre[now];\n\t}\n\tfor (rint i=1;i<=n;++i)\n\t\tfor (rint j=0;j<a[i].size();++j){\n\t\t\tint to=a[i][j];\n\t\t    if (finish.find(mp(i,to))!=finish.end() || finish.find(mp(to,i))!=finish.end()) continue;//\u67e5\u8be2\u662f\u5426\u5df2\u7ecf\u5220\u8fc7\u4e86\n\t        finish.insert(mp(i,to));\n\t        if (b[i][j]==1) ans.push_back(mp(i,to));\n\t\t}\n\tcout<<xiu.size()+ans.size()<<'\\n';\n\tfor (auto j:xiu) cout<<j.F<<' '<<j.S<<\" 1\\n\";\n\tfor (auto j:ans) cout<<j.F<<' '<<j.S<<\" 0\\n\";\n\treturn 0;\n}\n```\n",
        "postTime": 1658984156,
        "uid": 253608,
        "name": "Tx_Lcy",
        "ccfLevel": 7,
        "title": "CF507E Breaking Good"
    }
]