[
    {
        "content": "# **\u3010\u9898\u89e3\u3011\u9b54\u6cd5\u6811 Magic Tree [CEOI2019] [CF1193B] [Loj3166]**\n\n[$\\mathcal{My}\\ \\mathcal{Blog}$](https://www.cnblogs.com/Xing-Ling/p/12931590.html)\n\n\u4f20\u9001\u95e8\uff1a[\u9b54\u6cd5\u6811 $\\text{Magic Tree}$](https://www.luogu.com.cn/problem/CF1193B) [$\\text{[CEOI2019]}$](https://ceoi.sk/static/statements/magictree-ENG.pdf) [$\\text{[CF1193B]}$](http://codeforces.com/problemset/problem/1193/B) [$\\text{[Loj3166]}$](https://loj.ac/problem/3166)\n\n## **\u3010\u9898\u76ee\u63cf\u8ff0\u3011**\n\n\u7ed9\u51fa\u4e00\u9897 $n$ \u4e2a\u8282\u70b9\u7684\u6811\uff08\u6839\u4e3a $1$\uff09\uff0c\u6bcf\u4e2a\u8282\u70b9 $i$ \u4f1a\u5728\u7b2c $d_i$ \u5929\u65f6\u653e\u51fa\u91cf\u4e3a $w_i$ \u7684\u59b9\u6c41\u3002\u5728\u6bcf\u4e00\u5929 $j$ \u60a8\u53ef\u4ee5\u780d\u6389\u6811\u4e0a\u7684\u4efb\u610f\u4e00\u4e9b\u8fb9\uff0c\u82e5\u5f53\u5929\u4e0e\u8282\u70b9 $1$ \u4e0d\u518d\u8054\u901a\u7684\u70b9\u7684 $d_i$ \u6070\u597d\u7b49\u4e8e $j$\uff0c\u60a8\u53ef\u4ee5\u83b7\u5f97\u8fd9\u4e9b\u59b9\u6c41\u3002\n\n\u6c42\u603b\u5171\u6700\u591a\u80fd\u6536\u83b7\u591a\u5c11\u59b9\u6c41\u3002\n\n## **\u3010\u5206\u6790\u3011**\n\n\u5148\u8003\u8651\u66b4\u529b $dp$\uff0c\u8bbe $f(x,j)$ \u8868\u793a\u5728\u65f6\u95f4 $j$ \u65f6\u4ee5 $x$ \u4e3a\u6839\u7684\u5b50\u6811\u53ef\u83b7\u5f97\u7684\u6700\u5927\u59b9\u6c41\u91cf\uff0c\u5219\u6709\uff1a\n\n$f(x,j)=\\max\\{f(x,j-1),g(x,j)\\}$\uff0c\u5176\u4e2d $g(x,j)=w(x)*[j=d(x)]+\\sum_{to\\in son(x)}f(to,j)$\n\n\u590d\u6742\u5ea6 $O(nk)$\uff0c\u53ef\u4ee5\u8fc7 $\\text{Subtask 1,4,5}$\uff0c\u6709 $34pts$ \u3002\n\n\u7528\u4e2a\u5c0f $trick$ \u4f18\u5316\u8f6c\u79fb\u3002\n\n\u6ce8\u610f\u5230 $f$ \u5b9e\u9645\u4e0a\u662f $g$ \u7684\u524d\u7f00\u6700\u5927\u503c\uff0c\u7ed9\u6bcf\u4e2a\u70b9\u5f00\u4e2a $map$ \u8bb0\u5f55 $j$ \u548c $f(x,j)-f(x,k)$ $(k<j,f(x,k)\\neq f(x,j))$\uff08\u76f8\u90bb\u4e24\u4e2a\u4e0d\u540c\u524d\u7f00\u6700\u5927\u503c\u7684\u5dee\uff09\uff0c\u90a3\u5768\u5b50\u6811\u7d2f\u52a0\u76f4\u63a5\u542f\u53d1\u5f0f\u5408\u5e76\u3002\n\n\u6bcf\u6b21\u7ed9 $g(x,d(x))$ \u52a0\u4e0a $w(x)$ \u540e\u90fd\u4f1a\u4f7f\u4ece $d(x)$ \u5f00\u59cb\u7684\u8fde\u7eed\u4e00\u6bb5\u53d1\u751f\u6539\u53d8\uff0c\u5148 $\\text{upperbound}$ \u627e\u5230 $d(x)$ \u4f4d\u7f6e\u540e\u9762\u7684\u7b2c\u4e00\u4e2a\u6307\u9488\uff0c\u7136\u540e\u4f9d\u6b21\u5f80\u540e\u79fb\u52a8\u5e76\u5220\u53bb\u88ab\u66f4\u65b0\u6389\u7684\u4f4d\u7f6e\uff0c\u65e0\u6cd5\u7ee7\u7eed\u66f4\u65b0\u65f6\u5c31\u505c\u6b62\uff08\u5229\u7528\u5dee\u5206\u7684\u826f\u597d\u6027\u8d28\uff09\u3002\n\n## **\u3010Code\u3011**\n\n```cpp\n#include<algorithm>\n#include<cstring>\n#include<cstdio>\n#include<map>\n#define LL long long\n#define Re register int\n#define IT map<int,LL>::iterator\nusing namespace std;\nconst int N=1e5+3;\nint n,m,x,y,o,T,K,t[N],v[N],head[N];\nstruct QAQ{int to,next;}a[N];\ninline void add(Re x,Re y){a[++o].to=y,a[o].next=head[x],head[x]=o;}\ninline void in(Re &x){\n    int f=0;x=0;char c=getchar();\n    while(c<'0'||c>'9')f|=c=='-',c=getchar();\n    while(c>='0'&&c<='9')x=(x<<1)+(x<<3)+(c^48),c=getchar();\n    x=f?-x:x;\n}\nstruct Sakura1{//\u66b4\u529b\n    LL ans,dp[N][23];\n    inline void dfs(Re x){\n        for(Re i=head[x],to;i;i=a[i].next){\n            dfs(to=a[i].to);\n            for(Re j=0;j<=K;++j)dp[x][j]+=dp[to][j];\n        }\n        dp[x][t[x]]+=v[x];\n        for(Re j=t[x]+1;j<=K;++j)dp[x][j]=max(dp[x][j],dp[x][j-1]);\n    }\n    inline void sakura(){dfs(1),printf(\"%lld\\n\",dp[1][K]);}\n}T1;\nstruct Sakura2{//\u6b63\u89e3\n    int id[N];LL ans;map<int,LL>s[N];\n    inline void dfs(Re x){\n        id[x]=x;\n        for(Re i=head[x],to;i;i=a[i].next){\n            dfs(to=a[i].to);\n            if(s[id[x]].size()<s[id[to]].size())swap(id[x],id[to]);\n            for(IT it=s[id[to]].begin();it!=s[id[to]].end();++it)\n                s[id[x]][it->first]+=it->second;\n        }\n        s[id[x]][t[x]]+=v[x];LL dlt=v[x];IT it=s[id[x]].upper_bound(t[x]),tmp;\n        while(it!=s[id[x]].end())\n            if(dlt>=it->second)dlt-=it->second,tmp=it++,s[id[x]].erase(tmp);//f(x,d(x))\u66f4\u4f18\uff0c\u5220\u6389\u8fd9\u4e2a\u70b9\n            else{it->second-=dlt;break;}//\u8fd9\u4e2a\u70b9\u66f4\u4f18\uff0c\u7ed3\u675f\u679a\u4e3e\n    }\n    inline void sakura(){\n        dfs(1);\n        for(IT it=s[id[1]].begin();it!=s[id[1]].end();++it)ans+=it->second;//\u5dee\u5206\u56de\u6536\n        printf(\"%lld\\n\",ans);\n    }\n}T2;\nint main(){\n//    freopen(\"magic.in\",\"r\",stdin);\n//    freopen(\"magic.out\",\"w\",stdout);\n    in(n),in(T),in(K),m=n-1;\n    for(Re i=2;i<=n;++i)in(x),add(x,i);\n    while(T--)in(x),in(t[x]),in(v[x]);\n//    if(K<=20)T1.sakura();else\n    T2.sakura();\n}\n```\n",
        "postTime": 1590049871,
        "uid": 110985,
        "name": "\u8fb0\u661f\u51cc",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1193B \u3010Magic Tree\u3011"
    }
]