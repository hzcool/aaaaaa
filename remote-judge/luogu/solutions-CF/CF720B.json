[
    {
        "content": "\u4e00\u79cd\u4e25\u683c $O(n)$ \u7684\u975e\u7f51\u7edc\u6d41\u89e3\u6cd5\u3002\u4e00\u79cd $O(n)$ \u7684\u975e\u7f51\u7edc\u6d41\u89e3\u6cd5\u3002\n\n------\n\nObservation 1. \u6211\u4eec\u660e\u663e\u53ef\u4ee5\u7528\u70b9\u53cc\u6216\u7c7b\u4f3c\u79d1\u6280\u628a\u6bcf\u4e2a\u73af\u6252\u51fa\u6765\u5206\u5f00\u5904\u7406\u2014\u2014\u663e\u7136\u5b83\u4eec\u662f\u4e92\u76f8\u72ec\u7acb\u7684\u3002\u4e8e\u662f\u95ee\u9898\u7b49\u4ef7\u4e8e\u6bcf\u4e2a\u73af\u5220\u6389\u4e00\u6761\u8fb9\u3002\n\nObservation 2. \u82e5\u4e00\u6761\u8fb9\u4e0d\u5728\u4efb\u4f55\u73af\u4e0a\uff0c\u5219\u65e0\u8bba\u6700\u540e\u600e\u4e48\u5220\u4e1c\u897f\uff0c\u8fd9\u6761\u8fb9\u90fd\u4f1a\u7559\u4e0b\uff0c\u4e5f\u5373\u6b64\u79cd\u989c\u8272\u4e00\u5b9a\u4f1a\u7559\u4e0b\u3002\u4e8e\u662f\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5305\u542b\u6b64\u79cd\u989c\u8272\u7684\u73af\uff0c\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u5220\u6389\u73af\u4e0a\u6b64\u79cd\u989c\u8272\u7684\u8fb9\u4f7f\u5176\u7b26\u5408\u8981\u6c42\uff0c\u5e76\u4fdd\u7559\u4e86\u73af\u4e0a\u5176\u5b83\u6240\u6709\u989c\u8272\u2014\u2014\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4f7f\u5f97\u73af\u4e0a\u5176\u5b83\u6240\u6709\u989c\u8272\u4e5f\u53d8\u5f97\u4e00\u5b9a\u4f1a\u7559\u4e0b\u4e86\u3002\u660e\u663e\u8fd9\u4e9b\u65b0\u589e\u52a0\u7684\u4e00\u5b9a\u4f1a\u7559\u4e0b\u7684\u989c\u8272\u8fd8\u53ef\u4ee5\u53bb\u7ee7\u7eed\u628a\u5176\u5b83\u73af\u53d8\u5f97\u4e00\u5b9a\u4f1a\u7559\u4e0b\uff0c\u4e8e\u662f\u53d1\u73b0\u8fd9\u4f1a\u5f62\u6210\u4e00\u6ce2\u8fde\u9501\u53cd\u5e94\u3002\u81f3\u4e8e\u8fde\u9501\u53cd\u5e94\u5e94\u8be5\u5982\u4f55\u5728\u4fdd\u8bc1\u590d\u6742\u5ea6\u7684\u524d\u63d0\u4e0b\u6a21\u62df\uff0c\u6211\u4eec\u5f85\u4f1a\u518d\u8bf4\u3002\n\nObservation 3. \u82e5\u4e00\u4e2a\u73af\u4e0a\u67d0\u79cd\u989c\u8272\u51fa\u73b0\u4e86\u81f3\u5c11\u4e24\u6b21\uff0c\u660e\u663e\u53ef\u4ee5\u5220\u6389\u5176\u4e2d\u4e00\u4e2a\u800c\u4f7f\u8be5\u989c\u8272\u4ecd\u7136\u5b58\u5728\uff0c\u4e14\u6b64\u73af\u5c31\u7b26\u5408\u4e86\u8981\u6c42\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6b64\u79cd\u60c5\u5f62\u4e0b\uff0c\u8be5\u73af\u4e0a\u6240\u6709\u989c\u8272\u4e5f\u662f\u4e00\u5b9a\u4f1a\u7559\u4e0b\u7684\u3002\u660e\u663e\u8fd9\u4e9b\u4e00\u5b9a\u7559\u4e0b\u7684\u989c\u8272\u4e5f\u53ef\u4ee5\u4fc3\u751f Observation 2 \u4e2d\u7684\u8fde\u9501\u53cd\u5e94\u3002\n\nObservation 4. \u5728\u4e0a\u8ff0\u4e09\u4e2a Observation \u5168\u90e8\u6267\u884c\u5b8c\u6bd5\u65f6\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u5806\u4e00\u5b9a\u7559\u4e0b\u7684\u989c\u8272\uff0c\u4ee5\u53ca\u4e00\u5806\u5185\u90e8\u4e0d\u51fa\u73b0\u91cd\u590d\u989c\u8272\u6216\u662f\u5fc5\u7559\u4e0b\u7684\u989c\u8272\u7684\u73af\u3002\n\nObservation 5. \u53c2\u7167\u6837\u4f8b2\uff0c\u6211\u4eec\u53d1\u73b0\u82e5\u6709\u6570\u79cd\u989c\u8272\u5728\u591a\u4e2a\u73af\u4e2d\u540c\u65f6\u51fa\u73b0\uff0c\u4e14\u8fd9\u79cd\u201c\u540c\u65f6\u51fa\u73b0\u201d\u7684\u5173\u7cfb\u6210\u73af\uff0c\u5219\u6240\u6709\u6d89\u53ca\u5230\u7684\u73af\u4e0a\u989c\u8272\u540c\u65f6\u53ef\u4ee5\u7559\u4e0b\u3002\u66f4\u5f62\u5f0f\u5316\u5730\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u5efa\u4e00\u5f20\u65b0\u56fe\uff0c\u56fe\u4e0a\u6bcf\u4e2a\u70b9\u5bf9\u5e94\u7740 Observation 4 \u5f97\u5230\u7684\u73af\uff0c\u4e14\u5bf9\u4e8e\u62e5\u6709\u76f8\u540c\u989c\u8272\u7684\u4e24\u4e2a\u73af\uff0c\u5728\u5b83\u4eec\u5728\u65b0\u56fe\u4e0a\u5bf9\u5e94\u7684\u70b9\u95f4\u8fde\u4e00\u6761\u8fb9\uff08\u5982\u679c\u5982\u679c\u6709\u591a\u79cd\u989c\u8272\u90fd\u540c\u65f6\u51fa\u73b0\uff0c\u8981\u8fde\u91cd\u8fb9\uff09\u3002\u8fd9\u6837\u5f97\u5230\u7684\u65b0\u56fe\u4e0a\u82e5\u51fa\u73b0\u4e86**\u4e0d\u5168\u7531\u4e00\u79cd\u989c\u8272\u4ea7\u751f**\u7684\u73af\uff08\u91cd\u8fb9\u4e5f\u7b97\u73af\uff09\uff0c\u5219\u73af\u6240\u5728\u7684\u6574\u4e2a\u8fde\u901a\u5757\u4e0a\u7684\u70b9\u6240\u5bf9\u5e94\u7684\u73af\u90fd\u662f\u4e00\u5b9a\u7559\u4e0b\u7684\u3002\u800c\u76f8\u53cd\uff0c\u5bf9\u4e8e\u65b0\u56fe\u4e0a\u6ca1\u6709\u6210\u73af\u7684\u8fde\u901a\u5757\uff0c\u4f1a\u4e14\u53ea\u4f1a\u5220\u6389\u4e00\u79cd\u989c\u8272\uff0c\u56e0\u4e3a\u627e\u4e0d\u5230\u4e00\u79cd\u5220\u8fb9\u7684\u65b9\u5f0f\u4f7f\u5f97\u88ab\u5220\u6389\u7684\u6240\u6709\u8fb9\u6240\u5bf9\u5e94\u7684\u989c\u8272\u90fd\u5728\u5176\u5b83\u73af\u4e0a\u6709\u5907\u4efd\u3002\n\nObservation 6. \u56e0\u4e3a\u4e0d\u540c\u7684\u73af\u95f4\u62e5\u6709\u76f8\u540c\u989c\u8272\u7684\u5173\u7cfb\u662f\u6709\u4f20\u9012\u6027\u7684\uff0c\u6545\u7531\u540c\u4e00\u79cd\u989c\u8272\u5728\u65b0\u56fe\u4e2d\u4ea7\u751f\u7684\u8fb9\u662f\u6210\u56e2\u7684\uff0c\u53ef\u4ee5\u8fbe\u5230 $n^2$ \u7ea7\u522b\u3002\u4e3a\u4e86\u6d88\u51cf\u8fb9\u6570\uff0c\u6211\u4eec\u989d\u5916\u5f00\u70b9\u8868\u793a\u6bcf\u79cd\u989c\u8272\uff0c\u7136\u540e\u4ece\u6bcf\u4e2a\u73af\u5230\u5176\u6240\u5305\u542b\u7684\u989c\u8272\u8fde\u65e0\u5411\u8fb9\u3002\u660e\u663e\u5728\u8fde\u901a\u6027\u4e0a\uff0c\u8fd9\u4e2a\u56fe\u4e0e Observation 5 \u4e2d\u5efa\u7acb\u7684\u56fe\u76f8\u540c\uff0c\u5e76\u4e14\u4e5f\u6392\u9664\u4e86\u90a3\u4e9b\u5168\u7531\u540c\u4e00\u79cd\u989c\u8272\u6784\u6210\u7684\u73af\uff0c\u540c\u65f6\u4fdd\u7559\u4e86\u7531\u4e0d\u540c\u79cd\u989c\u8272\u5f62\u6210\u7684\u73af\u3002\u56e0\u6b64\uff0c\u8be5\u56fe\u4e0e Observation 5 \u4e2d\u56fe\u7b49\u4ef7\uff0c\u4e14\u70b9\u3001\u8fb9\u6570\u7686\u4e3a $O(n)$ \u7ea7\u522b\u3002\u4f7f\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u8fde\u901a\u6027\u548c\u5224\u65ad\u662f\u5426\u6210\u73af\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\alpha)$\uff0c\u53ef\u88ab\u770b\u4f5c $O(n)$\u3002\n\nObservation 7. \u6211\u4eec\u56de\u5230 Observation 2 \u4e2d\u63d0\u51fa\u7684\u201c\u7ef4\u62a4\u8fde\u9501\u53cd\u5e94\u201d\u7684\u6a21\u62df\u3002\u8003\u8651\u5728\u6267\u884c\u5b8c Observation 3 \u7684\u64cd\u4f5c\u5f97\u5230\u5168\u90e8\u521d\u59cb\u7684\u4e00\u5b9a\u7559\u4e0b\u989c\u8272\u540e\uff0c\u76f4\u63a5\u5efa\u51fa Observation 6 \u7684\u56fe\u3002\u6b64\u65f6\uff0c\u6240\u6709\u4e00\u5b9a\u7559\u4e0b\u7684\u989c\u8272\u6240\u5728\u8fde\u901a\u5757\u91cc\u7684\u989c\u8272\uff0c\u4e5f\u662f\u4e00\u5b9a\u7559\u4e0b\u7684\u2014\u2014\u56e0\u4e3a\u6211\u4eec\u53d1\u73b0\u8fde\u9501\u53cd\u5e94\u603b\u662f\u6cbf\u7740\u4e0d\u540c\u73af\u95f4\u51fa\u73b0\u7684\u76f8\u540c\u989c\u8272\u7684\u5173\u7cfb\u4f20\u64ad\u7684\uff0c\u4e5f\u5373\u56fe\u4e0a\u8fde\u7684\u8fb9\u3002\n\nConclusion: \u4e8e\u662f\u6211\u4eec\u53ea\u9700\u6267\u884c Observation 3&6\uff0c\u5efa\u51fa\u56fe\u540e\uff0c\u820d\u53bb\u90a3\u4e9b\u4e00\u5b9a\u7559\u4e0b\u989c\u8272\u6240\u5728\u7684\u8fde\u901a\u5757\uff0c\u7136\u540e\u627e\u5230\u6240\u6709\u65e0\u73af\u7684\u8fde\u901a\u5757\uff0c\u7528\u603b\u989c\u8272\u6570\u51cf\u53bb\u5176\u6570\u91cf\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\alpha)$\u3002\n\n\u5f53\u7136\uff0c\u672c\u4eba\u7684\u5b9e\u73b0\u4e0d\u5f88\u7cbe\u7ec6\uff0c\u5728\u6252\u73af\u7684\u65f6\u5019\u4f7f\u7528\u4e86 `map`\uff0c\u56e0\u6b64\u5e26\u4e0a\u4e86 $\\log$\u3002\u5f53\u7136\uff0c\u6252\u73af\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5728\u6c42\u70b9\u53cc\u7684\u8fc7\u7a0b\u4e2d\u8fd9\u641e\u641e\u90a3\u641e\u641e\u5728\u7ebf\u6027\u65f6\u95f4\u5185\u5904\u7406\u51fa\u6765\uff0c\u5077\u61d2\u4e0d\u60f3\u7528\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,dfn[10100],low[10100],tot;\nvector<int>v[10100];\nmap<pair<int,int>,int>mp;\nvector<vector<int> >circ;\nstack<int>s;\nbool sub[101000];//colours that have substitudes.\nvoid Tarjan(int x){\n\tdfn[x]=low[x]=++tot,s.push(x);\n\tfor(auto y:v[x]){\n\t\tif(!dfn[y]){\n\t\t\tTarjan(y),low[x]=min(low[x],low[y]);\n\t\t\tif(low[y]>=dfn[x]){\n\t\t\t\tvector<int>u;\n\t\t\t\twhile(s.top()!=y)u.push_back(s.top()),s.pop();u.push_back(s.top()),s.pop();\n\t\t\t\tu.push_back(x);\n\t\t\t\tif(u.size()<3)continue;//not a circle.\n\t\t\t\tvector<int>ed;\n\t\t\t\tfor(int i=0;i<u.size();i++){\n\t\t\t\t\tauto tmp=make_pair(min(u[i],u[(i+1)%u.size()]),max(u[i],u[(i+1)%u.size()]));\n\t\t\t\t\ted.push_back(mp[tmp]),mp.erase(tmp);\n\t\t\t\t}\n\t\t\t\tint tmp=ed.size();\n\t\t\t\tsort(ed.begin(),ed.end()),ed.resize(unique(ed.begin(),ed.end())-ed.begin());\n\t\t\t\tif(ed.size()!=tmp)for(auto i:ed)sub[i]=true;\n\t\t\t\telse circ.push_back(ed);\n\t\t\t}\n\t\t}else low[x]=min(low[x],dfn[y]);\n\t}\n}\nint dsu[20100],res;\nbool sp[20100];\nint find(int x){return dsu[x]==x?x:dsu[x]=find(dsu[x]);}\nbool merge(int x,int y){x=find(x),y=find(y);if(x==y)return true;dsu[y]=x;return false;}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1,x,y,z;i<=m;i++){\n\t\tscanf(\"%d%d%d\",&x,&y,&z),v[x].push_back(y),v[y].push_back(x);\n\t\tif(x>y)swap(x,y);mp[make_pair(x,y)]=z;\n\t}\n\tTarjan(1);\n\tfor(auto i:mp)sub[i.second]=true;\n//\tfor(int i=1;i<=m;i++)printf(\"%d \",sub[i]);puts(\"\");puts(\"\");\n//\tfor(auto i:circ){for(auto j:i)printf(\"%d \",j);puts(\"\");}\n\tint N=circ.size();\n\tfor(int i=1;i<=m+N;i++)dsu[i]=i;\n\tfor(int i=0;i<N;i++)for(auto j:circ[i])if(merge(m+i+1,j))sub[j]=true;\n\tfor(int i=1;i<=m;i++)if(sub[i])sp[find(i)]=true;else if(sp[find(i)])sub[i]=true;\n\tres=m;\n\tfor(int i=1;i<=m+N;i++)if(dsu[i]==i&&!sp[i])res--;\n\tprintf(\"%d\\n\",res);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1613044426,
        "uid": 123369,
        "name": "xtx1092515503",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF720B \u3010Cactusophobia\u3011"
    },
    {
        "content": "$\\texttt{codeforces}$ \u8bc4\u5206 $2400$\n\n\u6211\u4eec\u5c06\u95ee\u9898\u5206\u4e3a\u4e24\u6b65\uff1a\n\n\u7b2c\u4e00\u6b65\uff0c\u6211\u4eec\u8981\u5c06\u4e00\u9897\u4ed9\u4eba\u638c\u5220\u6210\u6811\uff0c\u8fb9\u9700\u8981\u5206\u4e24\u79cd\u60c5\u51b5\uff1a\n\n+ **\u5728\u73af\u4e2d\uff0c\u6b64\u65f6\u8fd9\u4e2a\u73af\u5185\u9700\u8981\u5220\u9664\u4e00\u6761\u8fb9\u3002**\n\n+ **\u4e0d\u5728\u73af\u4e2d\uff0c\u6240\u6709\u8fb9\u90fd\u53ef\u4ee5\u7559\u4e0b\u3002**\n\n\u7b2c\u4e8c\u6b65\uff0c\u6211\u4eec\u5efa\u7acb\u4e00\u4e2a\u7f51\u7edc\u6d41\u56fe\uff0c\u5b83\u6709\u4e00\u4e2a\u6e90\u70b9 $s$\uff0c\u4e00\u4e2a\u6c47\u70b9 $t$\uff0c\u8fd8\u6709\u4e24\u90e8\u5206\u70b9\uff1a\n\n1. \u4e00\u90e8\u5206\u662f\u56fe\u4e2d\u7684\u8fb9\u96c6\u5408\uff08\u73af\u6216\u8005\u5355\u72ec\u8fb9\uff09\uff0c\u7528 $i$ \u8868\u793a\u3002\n\n2. \u4e00\u90e8\u5206\u662f\u989c\u8272\uff0c\u7528 $i'$ \u8868\u793a\u3002\n\n+ \u8fde\u63a5 $(s,i)$ \u5bb9\u91cf\u4e3a\u7b2c $i$ \u53f7\u8fb9\u96c6\u5408\u80fd\u4fdd\u7559\u7684\u8fb9\u6570\u3002\n\n+ \u8fde\u63a5 $(i,j')$ \u5bb9\u91cf\u4e3a\u7b2c $i$ \u53f7\u8fb9\u96c6\u5408\u5185\u989c\u8272\u4e3a $j$ \u7684\u8fb9\u7684\u6570\u91cf\u3002\n\n+ \u8fde\u63a5 $(j',t)$ \u5bb9\u91cf\u4e3a $1$\u3002\n\n\u4ece $s$ \u5230 $t$ \u7684\u6700\u5927\u6d41\u5c31\u662f\u7b54\u6848\u3002\n\n\u53e6\u5916\uff0c\u6839\u636e[\u5b98\u65b9\u9898\u89e3](https://codeforces.ml/blog/entry/47183)\u7b2c\u4e8c\u6b65\u6709\u4e00\u79cd $O(n)$ \u7684\u505a\u6cd5\uff0c\u5f88\u62b1\u6b49\uff0c\u6211\u4e0d\u4f1a\u3002[\u5b98\u65b9\u9898\u89e3](https://codeforces.ml/blog/entry/47183)\u4e5f\u6ca1\u6709\u7ed9\u51fa\u3002\n\n\u8bf7\u4e0d\u8981\u5728\u610f\u4ee3\u7801\u4e2d graph2 \u4e2d\u7684 $\\texttt{dinic}$ \u5199\u6cd5\uff0c\u8fd9\u662f\u4ece loj127 \u62c9\u7684\u6211\u7684 $\\text{92pts}$ \u677f\u5b50\uff0c\u4e4b\u524d\u5bb3\u6015\u672c\u9898 $n=10^4$ \u5361\u4e0d\u8fc7\u53bb\u3002\n\n\u4ee3\u7801\u7a0d\u957f\uff1a\n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<queue>\n#include<stack>\n#include<cstdlib>\n#include<utility>\nint n,m,p,x[20005],y[20005],cnt,f[20005],col[50005],sz[50005];\nstruct graph1\n{\n\tstruct edge\n\t{\n\t\tint to,id;\n\t};\n\tstd::vector<edge> a[300005];\n\tstd::vector<int> cyc[300005];\n\tint n,m,cnt,p[300005],dep[300005],used[300005],x[300005],y[300005];\n\tvoid add(int x,int y,int v)\n\t{\n\t\ta[x].push_back(edge{y,v});\n\t\ta[y].push_back(edge{x,v});\n\t}\n\tvoid dfs(int v,int fa,int d,int lst)\n\t{\n\t\tp[d]=lst;dep[v]=d;\n\t\tfor (int i=0;i<a[v].size();i++)\n\t\t{\n\t\t\tint u=a[v][i].to,now=a[v][i].id;\n\t\t\tif (u==fa) continue;\n\t\t\tif (!dep[u]) dfs(u,v,d+1,now);\n\t\t\telse if (dep[u]<dep[v])\n\t\t\t{\n\t\t\t\tint x=++cnt;\n\t\t\t\tfor (int j=dep[u]+1;j<=dep[v];j++) cyc[x].push_back(p[j]),used[p[j]]=1;\n\t\t\t\tcyc[x].push_back(now);used[now]=1;\n\t\t\t}\n\t\t}\n\t}\n\tvoid add_edge()\n\t{\n\t\tfor (int i=1;i<=m;i++) add(x[i],y[i],i);\n\t}\n\tvoid solve()\n\t{\n\t\tadd_edge();\n\t\tcnt=0;\n\t\tfor (int i=1;i<=n;i++) if (!dep[i]) dfs(i,-1,1,-1);\n\t\tfor (int i=1;i<=m;i++) if (!used[i]) cyc[++cnt].push_back(i);\n\t}\n};\nstruct graph2\n{\n#define maximum_flow 1000000000\n#define maximum_cap 16777216\n\tstruct edge\n\t{\n\t\tint to,cap,opp,id;\n\t};\n\tstd::vector<edge> a[20005];\n\tint n,s,t,dep[20005],nxt[20005],can[20005];\n\tvoid add(int x,int y,int v)\n\t{\n\t\tint p=a[x].size(),q=a[y].size();\n\t\ta[x].push_back(edge{y,v,q,1});\n\t\ta[y].push_back(edge{x,0,p,-1});\n\t}\n\tvoid pre()\n\t{\n\t\tfor (int i=1;i<=n;i++) nxt[i]=1,can[i]=0;\n\t}\n\tint bfs(int lim,int opt)\n\t{\n\t\tstd::queue<int> q;\n\t\tfor (int i=1;i<=n;i++) dep[i]=0;\n\t\tq.push(s);dep[s]=1;\n\t\twhile (!q.empty())\n\t\t{\n\t\t\tint v=q.front();q.pop();\n\t\t\tfor (int i=0;i<a[v].size();i++)\n            {\n                int u=a[v][i].to;\n                if (!dep[u]&&a[v][i].cap>=lim&&a[v][i].id>=opt) dep[u]=dep[v]+1,q.push(u);\n\t\t\t}\n\t    }\n\t    return dep[t];\n\t}\n\tint dfs(int v,int now,int lim,int opt)\n\t{\n\t\tif (!nxt[v]) now=0;\n\t\tif (v==t||!now) return now;\n\t\tint ss=0;\n\t\tfor (int i=can[v];i<a[v].size();i++,can[v]++)\n\t\t{\n\t\t\tint u=a[v][i].to;\n\t\t\tif (dep[v]+1!=dep[u]||a[v][i].cap<lim||a[v][i].id<opt) continue;\n\t\t\tint k=dfs(u,std::min(now,a[v][i].cap),lim,opt);\n\t\t\tif (!k) continue;\n\t\t\ta[v][i].cap=a[v][i].cap-k,a[u][a[v][i].opp].cap=a[u][a[v][i].opp].cap+k;\n\t\t\tss=ss+k,now=now-k;\n\t\t\tif (!now) break;\n\t\t}\n\t\tif (!ss) nxt[v]=0;\n\t\treturn ss;\n\t}\n\tint dinic(int ss,int tt)\n\t{\n\t\ts=ss,t=tt;\n\t\tint ans=0;\n\t\tfor (int i=maximum_cap;i;i=i/2) while (bfs(i,1)) pre(),ans=ans+dfs(s,maximum_flow,i,1);\n\t\tfor (int i=maximum_cap;i;i=i/2) while (bfs(i,-1)) pre(),ans=ans+dfs(s,maximum_flow,i,-1);\n\t\treturn ans;\n\t}\n#undef maximum_flow\n#undef maximum_cap\n};\ngraph1 g1;\ngraph2 g2;\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);g1.n=n;g1.m=m;\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&g1.x[i],&g1.y[i],&col[i]);\n\t\tp=std::max(p,col[i]);\n\t}\n\tg1.solve();\n\tint cnt=g1.cnt;\n\tint s=p+cnt+1,t=p+cnt+2;\n\tfor (int i=1;i<=cnt;i++)\n\t{\n\t\tg2.add(s,i,std::max(1,(int)g1.cyc[i].size()-1));\n\t\tfor (int j=0;j<g1.cyc[i].size();j++)\n\t\t{\n\t\t\tint xx=g1.cyc[i][j];\n\t\t\tg2.add(i,cnt+col[xx],1);\n\t\t}\n\t}\n    for (int i=1;i<=p;i++) g2.add(i+cnt,t,1);\n    g2.n=p+cnt+2;\n    int ans=g2.dinic(s,t);\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```\n\n\u65f6\u95f4\u6548\u7387\u826f\u597d",
        "postTime": 1601814668,
        "uid": 36957,
        "name": "RainFestival",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF720B \u3010Cactusophobia\u3011"
    }
]