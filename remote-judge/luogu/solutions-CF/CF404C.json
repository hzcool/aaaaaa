[
    {
        "content": "## \u601d\u8def\n\n\u8fd9\u9053\u9898\u4ece\u6700\u77ed\u8def\u7684\u89d2\u5ea6\u53bb\u8003\u8651\u53ef\u80fd\u4e0d\u662f\u5f88\u597d\u60f3\uff0c\u53ef\u4ee5\u8003\u8651\u4ece\u6784\u9020\u7684\u89d2\u5ea6\uff0c\u53ea\u8981\u786e\u5b9a\u4e86\u8d77\u70b9\uff0c\u90a3\u4e48\u56fe\u7684\u6846\u67b6\u5c31\u53ef\u4ee5\u987a\u5229\u6210\u7ae0\u7684\u6784\u9020\u51fa\u6765\u3002\n\n\u6700\u77ed\u8def\u53ef\u4ee5\u4e0d\u8003\u8651\uff0c\u8003\u8651\u6700\u77ed\u8def\u53ea\u4f1a\u4f7f\u7b54\u6848\u590d\u6742\u5316\uff0c\u5efa\u51fa\u4e00\u9897\u6811\uff0c\u8def\u5f84\u552f\u4e00\uff0c\u5c31\u4e0d\u9700\u8981\u8003\u8651\u6700\u77ed\u8def\u4e86;\u5176\u6b21\uff0c\u6709\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570\u4e0d\u53ef\u4ee5\u5927\u4e8ek\uff0c\u6240\u4ee5\u6ca1\u5fc5\u8981\u8fde\u7684\u8fb9\u5c31\u5c3d\u91cf\u4e0d\u8fde\u3002\n\n\u8003\u8651\u5ea6\u6570\uff0c\u9664\u4e86\u8ddd\u79bb\u4e3a 0 \u7684\u8282\u70b9\u7684\u8fb9\u90fd\u662f\u8fde\u7684\u513f\u5b50\u8282\u70b9\uff0c\u5176\u4ed6\u8282\u70b9\u5728\u6dfb\u52a0\u7236\u8282\u70b9\u65f6\u4e00\u5b9a\u6709\u4e00\u6761\u8fb9\u8fde\u5411\u4e86\u7236\u8282\u70b9\uff0c\u5373\u53ea\u80fd\u6dfb\u52a0 $k-1$ \u4e2a\u513f\u5b50\uff0c\u800c\u8ddd\u79bb\u4e3a 0 \u7684\u70b9\u5c31\u53ef\u4ee5\u8fde$k$\u4e2a\u513f\u5b50\u3002\n\n\u9996\u5148\u901a\u8fc7\u5224\u65ad\u8ddd\u79bb\u4e3ax\u548c\u8ddd\u79bb\u4e3a$x+1$\u7684\u70b9\u7684\u4e2a\u6570\u5173\u7cfb\uff0c\u5373\uff08\u8ddd\u79bb\u4e3a$x$\u7684\u70b9\u7684\u4e2a\u6570 $\\times (k - 1)$  > \u8ddd\u79bb\u4e3a$x+1$\u7684\u70b9\u7684\u4e2a\u6570\uff09\uff0c\u8ddd\u79bb\u4e3a 0 \u7684\u70b9\u7279\u6b8a\u5904\u7406\u4e00\u4e0b\uff0c\u540c\u65f6\u5224\u65ad\u4e00\u4e0b\uff0c\u6709\u53ef\u80fd\u4e0d\u5b58\u5728\u8ddd\u79bb\u4e3a 0 \u7684\u70b9\u6216\u8005\u5b58\u5728\u591a\u4e2a\u8ddd\u79bb\u4e3a 0 \u7684\u70b9\u90fd\u662f\u4e0d\u5408\u6cd5\u7684\uff0c\u5efa\u8fb9\u5c31\u4ece\u8ddd\u79bb\u4e3a $x$ \u7684\u70b9\u8fde\u5411\u8ddd\u79bb\u4e3a $x+1$ \u7684\u70b9\u5c31\u53ef\u4ee5\u3002\n\n\u4ee3\u7801\u5b9e\u73b0 ~~(\u64cd\u4f5c\u6709\u70b9\u7d2f\u8d58)~~\n```c++\n#include <cstdio>\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <vector>\nusing namespace std;\nconst int maxn = 1e6 + 50;\ninline int read () {\n\tint x = 0, f = 1; char ch = getchar();\n\tfor (;!isdigit(ch); ch = getchar()) if (ch == '-') f = -1;\n\tfor (; isdigit(ch); ch = getchar()) x = x * 10 + ch - '0';\n\treturn x * f;\n}\nint n, k;\nstruct Node {\n\tint d, id;\n} node[maxn];\nint cnt[maxn];\nvector <int> vec[maxn];\nstruct Ans {\n\tint from, to;\n} ans[maxn];\nbool cmp (Node A, Node B) { return A.d < B.d;}\nint Max;\nsigned main () {\n\tn = read(), k = read();\n\tfor (int i = 1; i <= n; i++) {\n\t\tnode[i].d = read();\n\t\tnode[i].id = i;\n\t\tMax = max (node[i].d, Max);\n\t}\n\tint cnt = 0;\n\tsort (node + 1, node + 1 + n, cmp);\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (node[i].d == 0) {\n\t\t\tif (cnt != 0) {\n\t\t\t\treturn puts(\"-1\"), 0;\n\t\t\t}\n\t\t\tcnt++;\n\t\t}\n\t\tvec[node[i].d].push_back(node[i].id);\n\t}\n\tfor (int i = 1; i < Max; i++) {\n\t\tif ((long long)vec[i].size() * (k - 1) < vec[i + 1].size()) return puts(\"-1\"), 0;//\u8bb0\u5f97\u5f00long long\uff0c\u4e0d\u7136\u4f1a\u7206\n\t}\n\tif (cnt == 0) return puts(\"-1\"), 0;\n\tif (k < vec[1].size()) return puts(\"-1\"), 0;\n\tint oper = 0, js = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (node[i].d == 0) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (node[i].d - node[i - 1].d == 0) {\n\t\t\tif (js == k) {\n\t\t\t\tjs = 1, ++oper;\n\t\t\t\tans[i].from = vec[node[i].d - 1][oper], ans[i].to = node[i].id;\n\t\t\t} else if (js == k - 1 && node[i].d != 1) {\n\t\t\t\tjs = 1, ++oper;\n\t\t\t\tans[i].from = vec[node[i].d - 1][oper], ans[i].to = node[i].id;\n\t\t\t} else if (js == k - 1 && node[i].d == 1) {\n\t\t\t\tjs ++;\n\t\t\t\tans[i].from = vec[node[i].d - 1][oper], ans[i].to = node[i].id;\n\t\t\t}else {\n\t\t\t\tjs++;\n\t\t\t\tans[i].from = vec[node[i].d - 1][oper], ans[i].to = node[i].id;\n\t\t\t}\n\t\t} else if (node[i].d - node[i - 1].d == 1) {\n\t\t\toper = 0, js = 1;\n\t\t\tans[i].from = vec[node[i].d - 1][oper], ans[i].to = node[i].id;\n\t\t}\n\t}\n\tprintf (\"%d\\n\", n - 1);\n\tfor (int i = 2; i <= n; i++) {\n\t\tprintf (\"%d %d\\n\", ans[i].from, ans[i].to);\n\t}\n\treturn 0;\n}\n\n\n```",
        "postTime": 1604218679,
        "uid": 359685,
        "name": "Blanc\u0430",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF404C \u3010Restore Graph\u3011"
    },
    {
        "content": "\u6839\u636e\u6700\u77ed\u8def\u7684\u6027\u8d28\uff0c\u8fb9\u6743\u4e3a1\u7684\u60c5\u51b5\u4e0b\uff0c\u5230\u70b9\u8ddd\u79bb\u4e3a$a_i$\u7684\u70b9\u8fd1\u80fd\u7531\u5230\u70b9\u8ddd\u79bb\u4e3a$a_i-1$\u94fe\u63a5\u800c\u6765    \n\u6211\u4eec\u53ef\u4ee5\u4ece\u5230\u70b9\u8ddd\u79bb\u4e3a0\u7684\u70b9\u4f9d\u6b21\u9012\u589e\u8fde\u8fb9     \n\n\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u6700\u591a\u6709$k$\u5ea6  \n\u9664\u8d77\u59cb\u70b9\u5916\uff0c\u6bcf\u4e2a\u70b9$a_i$ \u7531 $a_i-1$ \u94fe\u63a5\u800c\u6765\uff0c\u6240\u4ee5\u6bcf\u4e2a\u70b9\u4ec5\u80fd\u8fde$k-1$\u4e2a\u70b9\uff0c\u5982\u679c $size[a_{i-1}]*(k-1) < size[a_i] $ \u90a3\u4e48\u65e0\u89e3\n\n\u8fd8\u6709\u8d77\u59cb\u70b9\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\n\n```cpp\n#include <cstdio>\n#include <queue>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nconst int maxd = 1e5+10;\nint n,k,s,arr[maxd],flag,mx;\nqueue<int> que[maxd];\nint main()\n{\n    // freopen(\"a.in\",\"r\",stdin);\n    // freopen(\"k.out\",\"w\",stdout);\n    scanf(\"%d %d\",&n,&k);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&s);\n        arr[s]++;\n        que[s].push(i);\n        mx = max(s,mx);\n    }\n    if(arr[0]!=1) flag=1;\n    if(k < arr[1]) flag=1;\n    for(int i=2;i<=mx;i++)\n        if((long long)arr[i-1]*(k-1)<arr[i]) flag=1;\n    if(flag)printf(\"-1\");\n    else\n    {\n        printf(\"%d\\n\",n-1);\n        for(int i=0;i<mx;i++)\n        {\n            while(arr[i+1])\n            {\n                int x = que[i].front();que[i].pop();\n                for(int j=1;arr[i+1]&&j<=k-1+(i==0);j++)\n                {\n                    int y = que[i+1].front();que[i+1].pop();\n                    que[i+1].push(y); arr[i+1]--;\n                    printf(\"%d %d\\n\",x,y);\n                }\n            }\n        }\n    }\n\n    return 0;\n}\n```\n",
        "postTime": 1552452689,
        "uid": 62401,
        "name": "DinnerHunt",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF404C \u3010Restore Graph\u3011"
    },
    {
        "content": "> \u6784\u9020\u4e00\u4e2a $n$ \u4e2a\u70b9\u7684\u56fe\uff0c\u4e00\u4e2a\u9876\u70b9\u7684\u5ea6\u4e0d\u5927\u4e8e $k$\uff0c\u5e76\u6ee1\u8db3\u4ece\u67d0\u4e00\u70b9\u5230 $i$ \u7684\u6700\u77ed\u8def\u4e0d\u8d85\u8fc7 $d_i$\u3002\n> \n> \u65e0\u89e3\u8f93\u51fa $\\texttt{-1}$\u3002\n\n\u53d1\u73b0\u6700\u77ed\u8def\u6bd4\u8f83\u96be\u5904\u7406\uff0c\u56e0\u6b64\u5047\u8bbe\u6211\u4eec\u5efa\u51fa\u4e86\u8fd9\u4e2a\u56fe\u7684\u6700\u77ed\u8def\u6811\u3002\n\n\u663e\u7136\u4e0d\u5728\u6700\u77ed\u8def\u4e0a\u7684\u8fb9\u5c31\u6ca1\u7528\u4e86\uff08\u56e0\u4e3a\u4e0d\u4f1a\u66f4\u65b0\u7b54\u6848\uff09\u3002\n\n\u90a3\u4e48\u5176\u5b9e\u6211\u4eec\u5c31\u662f\u8981\u6784\u9020\u4ee5\u90a3\u4e2a\u6700\u77ed\u8def\u4e3a $0$ \u7684\u70b9\u4e3a\u6839\u7684\u4e00\u68f5\u6811\uff0c\u8981\u6c42\u6bcf\u4e2a\u8282\u70b9\u7684\u6df1\u5ea6\u4e3a $d_i$ \u4e14\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\u7684\u5ea6\u6570\u4e0d\u5927\u4e8e $k$\u3002\n\n\u8003\u8651\u6811\u4e0a\u4e00\u4e2a\u8282\u70b9\uff08\u9664\u4e86\u6839\u8282\u70b9\uff09\u7684\u5ea6\u4e00\u5b9a\u662f $1+\u5b83\u7684\u5b50\u8282\u70b9\u6570$\u3002\n\n\u5ea6\u6570\u4e0d\u5927\u4e8e $k$ \uff0c\u90a3\u5c31\u662f\u8bf4\u5b50\u8282\u70b9\u7684\u4e2a\u6570\u4e0d\u8d85\u8fc7 $k-1$\u3002\n\n\u5bf9\u4e8e\u6839\u8282\u70b9\uff0c\u5b83\u7684\u5b50\u8282\u70b9\u6570\uff08\u5373\u6df1\u5ea6\u4e3a $1$ \u7684\u8282\u70b9\u6570\uff09\u4e0d\u8d85\u8fc7 $k$ \u4e2a\u3002\n\n\u6df1\u5ea6\u4e3a $i+1$ \u7684\u70b9\u4e0d\u8d85\u8fc7\u6df1\u5ea6\u4e3a $i$ \u7684\u70b9\u7684 $k-1$ \u500d\uff0c\u8fd9\u91cc $i\\ge 1$\u3002\n\n\u8fd9\u5c31\u662f\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u8d2a\u5fc3\u4e86\u3002\n\n\u53ef\u4ee5\u5f00 $n$ \u4e2a `vector` \u6765\u5b58\u50a8\u6df1\u5ea6\u4e3a $i$ \u7684\u8282\u70b9\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nvector<int> v[100005];\nint d[100005],fa[100005];\nint n,k;\nint root,num;\nint main(){\n\tscanf(\"%d%d\",&n,&k);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&d[i]);\n\t\tif(d[i]==0){//\u8bb0\u5f55\u6839\u8282\u70b9\n\t\t\troot=i;\n\t\t\tnum++;\n\t\t}\n\t\tv[d[i]].push_back(i);//\u7528vector\u5b58\u50a8\n\t}\n\tif(num!=1){//\u6709\u591a\u4e2a\u6839\n\t\tputs(\"-1\");\n\t\treturn 0;\n\t}\n\tif(n==1){//\u7279\u5224\n\t\tputs(\"0\");\n\t\treturn 0;\n\t}\n\tif(v[1].size()>k){//\u7279\u5224\u6df1\u5ea6\u4e3a1\u7684\u70b9\u4e2a\u6570\n\t\tputs(\"-1\");\n\t\treturn 0;\n\t}\n\tfor(int i=0;i<v[1].size();i++)fa[v[1][i]]=root;\n\tfor(int i=2;i<n;i++){\n\t\tif(v[i].size()>(long long)(k-1)*(v[i-1].size())){//\u8fd9\u91cc\u5bb9\u6613\u7206int\n\t\t\tputs(\"-1\");\n\t\t\treturn 0;\n\t\t}\n\t\tfor(int j=0;j<v[i].size();j++)fa[v[i][j]]=v[i-1][j/(k-1)];//\u8bbe\u7f6efa\u6570\u7ec4\n\t}//\u7528fa\u6570\u7ec4\u8bb0\u5f55\u4e00\u4e2a\u8282\u70b9\u7684\u7236\u4eb2\uff0c\u65b9\u4fbf\u8f93\u51fa\u3002\n\tprintf(\"%d\\n\",n-1);\n\tfor(int i=1;i<=n;i++)if(i!=root)printf(\"%d %d\\n\",i,fa[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1614222395,
        "uid": 233462,
        "name": "Umbrella_Leaf",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF404C \u3010Restore Graph\u3011"
    },
    {
        "content": "## Description\n\n\u7ed9\u5b9a $n$ \u4e2a\u70b9\u548c\u9876\u70b9\u7684\u5ea6 $k$ \u4ee5\u53ca\u6bcf\u4e2a\u70b9\u5230\u70b9 $i$ \u7684\u6700\u77ed\u8def\u957f\u5ea6 $dis_i$\uff0c\u6253\u5370\u8fd9\u4e2a\u56fe\u3002\n\n## Solution\n\n\u82e5\u76f4\u63a5\u4ece\u56fe\u7684\u89d2\u5ea6\u8003\u8651\uff0c\u5219\u60c5\u51b5\u592a\u591a\u592a\u4e71\uff0c\u653e\u5f03\u3002\n\n\u8fd8\u8bb0\u5f97\u6811\u7684\u67d0\u4e2a\u6027\u8d28\u5417\uff1f\u6bcf\u4e24\u70b9\u4e4b\u95f4\u53ea\u6709\u552f\u4e00\u7684\u4e00\u6761\u8def\u5f84\uff01\u6070\u597d\u7b26\u5408\u9898\u76ee\u4e2d\u7ed9\u5b9a\u7684\u6761\u4ef6\u3002\u5047\u8bbe\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u8ddd\u79bb\u4e3a $0$ \u7684\u70b9\uff0c\u5c31\u628a\u8fd9\u4e2a\u70b9\u79f0\u5f53\u505a\u6574\u4e2a\u6811\u4e2d\u7684\u6839\u8282\u70b9\uff0c\u90a3\u4e48 $dis_i$ \u5c31\u76f8\u5f53\u4e8e\u6811\u4e2d\u8fd9\u4e2a\u70b9\u7684\u6df1\u5ea6\u3002\n\n\u5bf9\u4e8e\u6839\u8282\u70b9\uff0c\u5b83\u7684\u5165\u5ea6\u4e3a $0$\uff0c\u6700\u591a\u5c31\u53ef\u4ee5\u6709 $k$ \u4e2a\u5b69\u5b50\u8282\u70b9\uff1b\u5bf9\u4e8e\u5176\u4ed6\u5c42\u7684\u8282\u70b9\uff0c\u56e0\u4e3a\u5b83\u6709\u4e00\u4e2a\u7236\u4eb2\u8282\u70b9\uff0c\u6240\u4ee5\u5b83\u53ea\u80fd\u6709 $k-1$ \u4e2a\u5b69\u5b50\u8282\u70b9\u3002\n\n### \u5bf9\u4e8e\u65e0\u89e3\u60c5\u51b5\n\n- \u5982\u679c\u6ca1\u6709 $dis$ \u4e3a $0$ \u7684\u8282\u70b9\uff0c\u65e0\u89e3\u3002\n- \u5982\u679c $dis$ \u4e3a $0$ \u7684\u8282\u70b9\u4e2a\u6570\u8d85\u8fc7 $1$\uff0c\u65e0\u89e3\u3002\n- \u5982\u679c\u6839\u8282\u70b9\u7684\u5b69\u5b50\u8282\u70b9\u6570\u91cf\u8d85\u8fc7 $k$\uff0c\u65e0\u89e3\uff08\u4e0a\u6587\u5df2\u8bf4\u660e\uff09\u3002\n- \u5982\u679c\u975e\u6839\u8282\u70b9\u7684\u5b69\u5b50\u8282\u70b9\u6570\u91cf\u8d85\u8fc7 $k-1$\uff0c\u65e0\u89e3\uff08\u4e0a\u6587\u5df2\u8bf4\u660e\uff09\u3002\n\n## Code\n```cpp\n#include<cstdio>\n#include<vector>\n#include<cstdlib>\nusing namespace std;\n\nconst int N=1e5+5;\n\nint n,k,MaxDep;\nint dis[N];\nvector<int> v[N];\nvector<pair<int,int> > ans;\n\nvoid Exit(int num){\n\tprintf(\"%d\\n\",num);\n\texit(0);\n}\n\nint main(){\n\tscanf(\"%d%d\",&n,&k);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&dis[i]);\n\t\tv[dis[i]].push_back(i);\n\t\tMaxDep=max(dis[i],MaxDep);\n\t}\n\tif(v[0].size()!=1 || v[0].size()*k<v[1].size()) Exit(-1);\n\tif(n==1) Exit(0);\n\tfor(int i=0;i<v[1].size();i++) ans.push_back(make_pair(v[0][0],v[1][i]));\n\tfor(int i=2;i<=MaxDep;i++){\n\t\tif(v[i].size()==0) Exit(-1);\n\t\tif((v[i-1].size()*(long long)(k-1)<v[i].size() && i!=1)) Exit(-1);\n\t\tfor(int j=0;j<v[i].size();j++)\n\t\t\tans.push_back(make_pair(v[i-1][j/(k-1)],v[i][j]));\n\t}\n\tprintf(\"%d\\n\",ans.size());\n\tfor(int i=0;i<ans.size();i++)\n\t\tprintf(\"%d %d\\n\",ans[i].first,ans[i].second);\n\treturn 0;\n}\n```",
        "postTime": 1644580015,
        "uid": 501865,
        "name": "TheSky233",
        "ccfLevel": 4,
        "title": "CF404C Restore Graph \u9898\u89e3"
    }
]