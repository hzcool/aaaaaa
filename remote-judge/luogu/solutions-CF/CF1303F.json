[
    {
        "content": "~~\u665a\u4e0a\u6253\u6bd4\u8d5b\u6709\u70b9\u56f0\uff0c\u6ca1\u770b\u5230 $c_i\\le c_{i+1}$\uff0c\u70b8\u4e86\u3002~~\n\n\u8fdb\u5165\u6b63\u9898\uff1a\n\n\u53d1\u73b0\u6bcf\u4e00\u6b21\u64cd\u4f5c\u6709\u53ef\u80fd\u4f1a\u628a\u4e24\u4e2a\u8fde\u901a\u5757\u8fde\u8d77\u6765\uff0c\u5408\u4e3a\u4e00\u4e2a\u3002\n\n\u6211\u4eec\u8003\u8651\u4e0e\u5f53\u524d\u64cd\u4f5c\u4fee\u6539\u7684\u683c\u5b50\u76f8\u90bb\u7684\u56db\u4e2a\u683c\u5b50\uff0c\u5e76\u5c06\u8fd9\u56db\u4e2a\u683c\u5b50\u6240\u5728\u7684\u53ef\u4ee5\u4e0e\u5f53\u524d\u683c\u5b50\u5408\u5e76\u7684\u8fde\u901a\u5757\u90fd\u5408\u5e76\u8d77\u6765\uff0c\u7136\u540e\u7edf\u8ba1\u7b54\u6848\u3002\n\n\u53d1\u73b0\u8fd9\u5c31\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u5e76\u67e5\u96c6\u5e94\u7528\uff0c\u4e8e\u662f\u76f4\u63a5\u5957\u4e0a\u6a21\u677f\uff0c\u5f00\u5fc3\u5730\u53d1\u73b0\u6837\u4f8b\u90fd\u8fc7\u4e0d\u53bb..........\n\n\u90a3\u8fd9\u4e2a\u505a\u6cd5\u9519\u5728\u54ea\u91cc\u5462\uff1f\u76f8\u4fe1\u5f88\u591a\u4eba\u90fd\u5df2\u7ecf\u53d1\u73b0\u4e86\u3002\n\n\u6709\u4e00\u4e9b\u4fee\u6539\u64cd\u4f5c\u53ef\u80fd\u4f1a\u628a\u4e00\u4e2a\u8fde\u901a\u5757\u62c6\u6210\u591a\u4e2a\u8fde\u901a\u5757\uff0c\u4f46\u662f\u4e0a\u8ff0\u505a\u6cd5\u5e76\u6ca1\u6709\u8003\u8651\u8fd9\u79cd\u60c5\u51b5\u3002\n\n\u4f46\u662f\u5e76\u67e5\u96c6\u4e0d\u80fd\u5206\u88c2\uff0c\u53ea\u80fd\u5408\u5e76\u3002\n\n\u8003\u8651\u5c06\u539f\u77e9\u9635 $A$ \u4e2d\u7684\u67d0\u4e00\u70b9 $A_{i,j}$ \u4ece $x$ \u53d8\u4e3a $y$\uff0c\u8bb0\u65b0\u7684\u77e9\u9635\u4e3a $B$\uff0c\u6211\u4eec\u53d1\u73b0\uff1a\n\n$A\\rightarrow B$ \u5bf9\u8fde\u901a\u5757\u603b\u6570\u4ea7\u751f\u7684\u8d21\u732e\u7b49\u4e8e $B\\rightarrow A$ \u5bf9\u8fde\u901a\u5757\u603b\u6570\u4ea7\u751f\u7684\u8d21\u732e\u7684\u76f8\u53cd\u6570\u3002\uff08\u5e9f\u8bdd\uff09\n\n\u4f46\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8fd9\u53e5\u5e9f\u8bdd\uff0c\u5c06\u5206\u88c2\u64cd\u4f5c\u53d8\u4e3a\u5408\u5e76\u64cd\u4f5c\u3002\n\n\u6211\u4eec\u8003\u8651\u4ee5\u6700\u7ec8\u7684\u77e9\u9635\u4e3a\u8d77\u70b9\uff0c\u5012\u7740\u64a4\u9500\u4fee\u6539\u64cd\u4f5c\u3002\u5982\u679c\u5f53\u524d\u4fee\u6539\u64cd\u4f5c\u662f\u5c06 $x$ \u53d8\u4e3a $y$\uff0c\u90a3\u6211\u4eec\u5728\u64a4\u9500\u5b83\u7684\u65f6\u5019\u5c31\u662f\u5c06 $y$ \u53d8\u4e3a $x$\u3002\u7edf\u8ba1\u8d21\u732e\u65f6\u5c31\u53ea\u9700\u8981\u51cf\u53bb\u5f53\u524d\u8d21\u732e\u5c31\u597d\u4e86\uff08\u7531\u5e9f\u8bdd\uff09\u3002\n\n\u6211\u4eec\u8fd9\u6837\u5c31\u628a\u5206\u88c2\u64cd\u4f5c\u8f6c\u53d8\u4e3a\u4e86\u5408\u5e76\u64cd\u4f5c\u3002\n\n\u6b64\u65f6\u6709\u4eba\u53ef\u80fd\u4f1a\u95ee\uff0c\u6211\u4eec\u5230\u5e95\u5728\u54ea\u91cc\u7528\u5230\u4e86 $c_i\\le c_{i+1}$\uff1f\n\n\u6ce8\u610f\uff0c\u5982\u679c\u6bcf\u4e00\u79cd\u6570\u5b57\u7684\u4fee\u6539\u64cd\u4f5c\u4e0d\u662f\u5168\u90e8\u5e76\u5728\u4e00\u8d77\uff0c\u6b64\u65f6\u5982\u679c\u6211\u4eec\u6309\u7167\u6570\u5b57\u6765\u7ed9\u64cd\u4f5c\u6392\u5e8f\uff0c\u5c31\u4e0d\u80fd\u4fdd\u8bc1\u64cd\u4f5c\u987a\u5e8f\u7684\u6b63\u786e\u6027\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define N 305\n#define Q 2000005\n#define set(a,v) memset(a,v,sizeof(a))\nconst int X[]={1,-1,0,0},Y[]={0,0,1,-1};\nint n,m,q,lim,ans[Q],fa[N*N],nw[N][N];struct Query {int id,x,y;};\nvector<Query> q1[Q],q2[Q];\nint f(int x,int y) {return (x-1)*m+y;}\nbool chk(int x,int y) {return x>0 && x<=n && y>0 && y<=m;}\nvoid clear(int n) {for(int i=1;i<=n;++i) fa[i]=i;}\nint rt(int x) {return x==fa[x]?x:fa[x]=rt(fa[x]);}\nbool merge(int x,int y) {x=rt(x);y=rt(y);if(x==y) return 0;fa[x]=y;return 1;}\nint main()\n{\n\tscanf(\"%d %d %d\",&n,&m,&q);\n\tfor(int i=1,x,y,c;i<=q;++i)\n\t{\n\t\tscanf(\"%d %d %d\",&x,&y,&c);lim=c;\n\t\tq2[nw[x][y]].push_back((Query) {i,x,y});\n\t\tq1[nw[x][y]=c].push_back((Query) {i,x,y});\n\t}\n\tfor(int i=1;i<=n;++i) for(int j=1;j<=m;++j)\n\t\tq2[nw[i][j]].push_back((Query) {0,i,j});set(nw,-1);\n\tfor(int i=0,sz,id,x,y;i<=lim;++i)\n\t{\n\t\tsz=q1[i].size();if(!sz) continue;clear(n*m);\n\t\tfor(int j=0;j<sz;++j)\n\t\t{\n\t\t\tid=q1[i][j].id;x=q1[i][j].x;y=q1[i][j].y;nw[x][y]=i;++ans[id];\n\t\t\tfor(int k=0,gX,gY;k<4;++k)\n\t\t\t{\n\t\t\t\tgX=x+X[k];gY=y+Y[k];\n\t\t\t\tif(chk(gX,gY) && nw[gX][gY]==i) ans[id]-=merge(f(x,y),f(gX,gY));\n\t\t\t}\n\t\t}\n\t}set(nw,-1);\n\tfor(int i=0,sz,x,y,id;i<=lim;++i)\n\t{\n\t\tsz=q2[i].size();if(!sz) continue;clear(n*m);\n\t\tfor(int j=sz-1;j>=0;--j)\n\t\t{\n\t\t\tx=q2[i][j].x;y=q2[i][j].y;id=q2[i][j].id;nw[x][y]=i;--ans[id];\n\t\t\tfor(int k=0,gX,gY;k<4;++k)\n\t\t\t{\n\t\t\t\tgX=x+X[k];gY=y+Y[k];\n\t\t\t\tif(chk(gX,gY) && nw[gX][gY]==i) ans[id]+=merge(f(x,y),f(gX,gY));\n\t\t\t}\n\t\t}\n\t}ans[0]=1;for(int i=1;i<=q;++i) printf(\"%d\\n\",ans[i]+=ans[i-1]);return 0;\n}\n```",
        "postTime": 1581566821,
        "uid": 119621,
        "name": "Kubic",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1303F \u3010Number of Components\u3011"
    },
    {
        "content": "\u56e0\u4e3a\u6211\u5b9e\u5728\u592a\u83dc\uff0c\u8fd9\u7bc7\u9898\u89e3\u4f1a\u5728 #33 MLE\uff0c\u4f46\u662f\u6b63\u786e\u6027\u662f\u5bf9\u7684\u3002\n\n\u53d1\u73b0\u9898\u76ee\u8981\u7ef4\u62a4\u8fde\u901a\u5757\u7684\u4e2a\u6570\uff0c\u800c\u4e14\u6539\u53d8\u989c\u8272\u5176\u5b9e\u5c31\u662f\u652f\u6301\u52a0\u8fb9\u548c\u5220\u8fb9\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u52a8\u6001\u56fe\u3002\n\n\u5148\u5efa\u8fb9\uff0c\u6700\u540e\u6765\u4e00\u6ce2\u7ebf\u6bb5\u6811\u5206\u6cbb+\u5e76\u67e5\u96c6\u5373\u53ef\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN=2000010,MAXT=310;\nint n,m,q,hd,x,y,z,f[MAXT*MAXT],d[MAXT*MAXT],ans[MAXN];\nint dir[4][2]={{0,1},{0,-1},{1,0},{-1,0}},col[MAXT][MAXT];\nmap < pair<int,int>,int > mp;\nvector < pair<int,int> > v[MAXN*4];\npair <int,int> st[MAXN];\nvoid modify (int p,int l,int r,int xl,int xr,pair<int,int> val) {\n\tif (xl>xr) {return;}\n\tif (xr<l||r<xl) {return;}\n\tif (xl<=l&&r<=xr) {v[p].push_back(val);return;}\n\tint mid=(l+r)>>1;\n\tmodify(p<<1,l,mid,xl,xr,val),modify((p<<1)|1,mid+1,r,xl,xr,val);\n\treturn;\n}\nint findr (int x) {return (x==f[x]?x:findr(f[x]));}\nvoid dfs (int p,int l,int r,int siz) {\n\tint sz=v[p].size(),nw=hd;\n\tfor (int i=0;i<sz;i++) {\n\t\tint x=findr(v[p][i].first),y=findr(v[p][i].second);\n\t\tif (x==y) {continue;}\n\t\tif (d[x]>d[y]) {swap(x,y);}\n\t\tst[++hd]=make_pair(x,d[y]);\n\t\tf[x]=y,d[y]=max(d[y],d[x]+1),siz--;\n\t}\n\tif (l==r) {\n\t\tans[l]=siz;\n\t} else {\n\t\tint mid=(l+r)>>1;\n\t\tdfs(p<<1,l,mid,siz),dfs((p<<1)|1,mid+1,r,siz);\n\t}\n\twhile (hd>nw) {\n\t\tint x=st[hd].first,z=st[hd].second;\n\t\td[f[x]]=z;\n\t\tf[x]=x,hd--;\n\t}\n\treturn;\n}\nint hs (int x,int y) {return (x-1)*m+y;}\nint chk (int x,int y) {\n\tif (x<1||y<1||x>n||y>m) {return 0;}\n\treturn 1;\n}\nint main () {\n\tscanf(\"%d%d%d\",&n,&m,&q);\n\tfor (int i=1;i<=n*m;i++) {f[i]=i;}\n\tfor (int i=1;i<=n;i++) {\n\t\tfor (int j=1;j<=m;j++) {\n\t\t\tfor (int k=0;k<=3;k++) {\n\t\t\t\tint x=i,y=j;\n\t\t\t\tint dx=x+dir[k][0],dy=y+dir[k][1];\n\t\t\t\tif (chk(dx,dy)) {\n\t\t\t\t\tint hs1=hs(dx,dy),hs2=hs(x,y);\n\t\t\t\t\tif (hs1<hs2) {swap(hs1,hs2);}\n\t\t\t\t\tmp[make_pair(hs1,hs2)]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i=1;i<=q;i++) {\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tif (col[x][y]==z) {continue;}\n\t\tfor (int j=0;j<=3;j++) {\n\t\t\tint dx=x+dir[j][0],dy=y+dir[j][1];\n\t\t\tif (chk(dx,dy)) {\n\t\t\t\tint hs1=hs(dx,dy),hs2=hs(x,y);\n\t\t\t\tif (hs1<hs2) {swap(hs1,hs2);}\n\t\t\t\tif (col[dx][dy]==col[x][y]) {\n\t\t\t\t\tint tmp=mp[make_pair(hs1,hs2)];\n\t\t\t\t\tmodify(1,1,q,tmp,i-1,make_pair(hs1,hs2));\n\t\t\t\t}\n\t\t\t\tif (col[dx][dy]==z) {\n\t\t\t\t\tmp[make_pair(hs1,hs2)]=i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcol[x][y]=z;\n\t}\n\tfor (int i=1;i<=n;i++) {\n\t\tfor (int j=1;j<=m;j++) {\n\t\t\tfor (int k=0;k<=3;k++) {\n\t\t\t\tint x=i,y=j;\n\t\t\t\tint dx=x+dir[k][0],dy=y+dir[k][1];\n\t\t\t\tif (chk(dx,dy)) {\n\t\t\t\t\tint hs1=hs(dx,dy),hs2=hs(x,y);\n\t\t\t\t\tif (hs1<hs2) {swap(hs1,hs2);}\n\t\t\t\t\tif (col[x][y]==col[dx][dy]) {\n\t\t\t\t\t\tmodify(1,1,q,mp[make_pair(hs1,hs2)],q,make_pair(hs1,hs2));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tdfs(1,1,q,n*m);\n\tfor (int i=1;i<=q;i++) {\n\t\tprintf(\"%d\\n\",ans[i]);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1581555419,
        "uid": 113546,
        "name": "ix35",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1303F \u3010Number of Components\u3011"
    },
    {
        "content": "\u8fd9\u79cd\u9898\u76ee\u7b2c\u4e00\u773c\u60f3\u5230\u7684\u5c31\u662f\u5e76\u67e5\u96c6\u3002     \n\u672c\u8d28\u4e0a\u5c31\u662f\u52a0\u8fb9/\u5220\u8fb9\u540e\u7684\u8054\u901a\u5757\u4e2a\u6570\u95ee\u9898\u3002     \n\u53ef\u4ee5\u628a\u589e\u52a0\u7684\u8054\u901a\u5757\u548c\u51cf\u5c11\u7684\u8054\u901a\u5757\u5206\u5f00\u6765\u7b97\u3002  \n\u4e00\u4e2a\u5c0f\u7ed3\u8bba\uff1a$A$ \u56fe\u53d8\u4e3a $B$ \u56fe\u540e\u589e\u52a0\u7684\u8054\u901a\u5757\u4e2a\u6570\u7b49\u4e8e $B$ \u56fe\u53d8\u4e3a $A$ \u56fe\u540e\u589e\u52a0\u7684\u8054\u901a\u5757\u4e2a\u6570\u7684\u76f8\u53cd\u6570\u3002\uff08\u663e\u7136\uff09\u3002  \n\u6240\u4ee5\u867d\u7136\u5e76\u67e5\u96c6\u4e0d\u652f\u6301\u5206\u88c2\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u9006\u5e8f\u6765\u505a\uff0c\u4ece\u6700\u7ec8\u72b6\u6001\u63a8\u5230\u539f\u59cb\u72b6\u6001\uff0c\u6bcf\u6b21\u7684\u5220\u8fb9\u4e5f\u5c31\u53d8\u6210\u4e86\u52a0\u8fb9\u3002   \n\u6240\u4ee5\u6211\u4eec\u76f8\u5f53\u4e8e\u53ea\u7528\u5904\u7406\u52a0\u8fb9\u7684\u95ee\u9898\uff0c\u5bb9\u6613\u53d1\u73b0\u67d0\u4e00\u70b9\u53d8\u4e3a\u65b0\u7684\u989c\u8272\u540e\uff0c\u589e\u52a0\u7684\u8054\u901a\u5757\u4e2a\u6570\u5c31\u662f $1-M$\uff0c$M$ \u8868\u793a\u548c\u76f8\u90bb\u70b9\u7684\u5e76\u67e5\u96c6\u5408\u5e76\u6b21\u6570\u3002\uff08\u56e0\u4e3a $\\forall c_i \\leq c_{i+1}$ \u6240\u4ee5\u4e00\u5b9a\u6b63\u786e\uff09\u3002     \n\u6700\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u7b97\u51fa\u6765 $\\Delta_{ans}$($ans(i)$\u8868\u793a\u7b2c $i$ \u65f6\u523b\u7684\u7b54\u6848)\uff0c\u8fd9\u9898\u5c31\u505a\u5b8c\u4e86\u3002    \n```cpp\n#include <bits/stdc++.h>    \n\nconst int N = 305;\nconst int C = 2e6 + 10;\nconst int Q = 2e6 + 5;  \nconst int dir[4][2] = {{0, -1}, {0, 1}, {-1, 0}, {1, 0}};  \ntypedef std::pair<int, int> pii;\n\nint n, m, i, j, k, lim, q;\nstd::vector<pii> add[C], del[C];\nbool vst[N][N];\nint a[N][N], pnt[N * N], ans[Q];\n\ninline int ind(int x, int y) {\n  return (x - 1) * m + y;  \n}\ninline pii unid(int z) {\n  int y = z % m == 0 ? m : z % m;\n  int x = (z - y) / m + 1;\n  return std::make_pair(x, y);   \n}\nint find(int x) {\n  return x == pnt[x] ? x : pnt[x] = find(pnt[x]);  \n}\nint merge(int x, int y) {\n  int rx = find(x), ry = find(y);\n  if (rx == ry) {\n    return 0;\n  }\n  pnt[rx] = ry;\n  return 1;  \n}\nvoid solve(std::vector<pii> &V, int sym) {\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= m; j++) {\n      vst[i][j] = 0;\n      pnt[ind(i, j)] = ind(i, j);   \n    }\n  }\n  for (auto p : V) {\n    int loc = p.first, id = p.second;\n    pii P = unid(loc);\n    int x = P.first, y = P.second, conb = 1;    \n    vst[x][y] = 1;    \n    for (int i = 0; i < 4; i++) {\n      int nx = x + dir[i][0], ny = y + dir[i][1];\n      if (nx >= 1 && nx <= n && ny >= 1 && ny <= m && vst[nx][ny]) {\n        conb -= merge(loc, ind(nx, ny));\n      }\n    }\n    ans[id] += sym * conb;  \n  }\n}\n\nint main() {\n  scanf(\"%d %d %d\", &n, &m, &q);\n  for (int i = 1, x, y, c; i <= q; i++) {\n    scanf(\"%d %d %d\", &x, &y, &c); \n    if (i == q) {\n      lim = c;\n    }\n    if (a[x][y] == c) {\n      continue;\n    }\n    del[a[x][y]].push_back(std::make_pair(ind(x, y), i));\n    add[a[x][y] = c].push_back(std::make_pair(ind(x, y), i));    \n  }\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= m; j++) {\n      del[a[i][j]].push_back(std::make_pair(ind(i, j), 0));  \n    }\n  }\n  for (int i = 0; i <= lim; i++) {\n    std::reverse(del[i].begin(), del[i].end());\n  }\n  for (int i = 0; i <= lim; i++) {   \n    solve(add[i], 1);\n    solve(del[i], -1);  \n  }\n  ans[0] = 1;\n  for (int i = 1; i <= q; i++) {\n    ans[i] += ans[i - 1];\n    printf(\"%d\\n\", ans[i]);\n  }\n  return 0;  \n}\n```",
        "postTime": 1595657961,
        "uid": 114320,
        "name": "\u843d\u6c50",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1303F \u3010Number of Components\u3011"
    }
]