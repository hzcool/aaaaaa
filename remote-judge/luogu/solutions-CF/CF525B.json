[
    {
        "content": "\u901b\u4e86\u4e0b\u9898\u89e3\u53d1\u73b0\u6709\u8bb8\u591a\u5927\u4f6c\u7528\u5dee\u5206\u505a\uff0c\u4f46\u672c\u849f\u84bb\u60f3\u4e0d\u5230\u5dee\u5206\uff0c\u4e8e\u662f\u53ea\u80fd\u7eaf\u6a21\u62df\u4e86 qwq\n\n## \u9898\u76ee\u5927\u610f\uff1a\n\n\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 $s$\uff0c\u5bf9\u5176\u8fdb\u884c $m$ \u6b21\u64cd\u4f5c\uff0c\u7b2c $i$ \u6b21\u64cd\u4f5c\u7ed9\u4e00\u4e2a\u6570\u5b57 $a_i$\uff0c\u8868\u793a\u5c06\u5b57\u7b26\u4e32 $s$ \u7684\u7b2c $x$ \u4e2a\u4f4d\u7f6e\u5230\u7b2c $len - x + 1$ \u8fd9\u6bb5\u5b57\u7ffb\u8f6c\uff0c\u6c42 $m$ \u6b21\u64cd\u4f5c\u540e\u7684\u7ed3\u679c\u3002\n\n## \u601d\u8def\u4e0e\u5b9e\u73b0\uff1a\n\n\u672c\u9898\u8981\u6c42\u4ece $x$ \u5230 $len - x + 1$ \u7684\u4f4d\u7f6e\u8c03\u6362\uff0c\u90a3\u6211\u4eec\u53ef\u4ee5\u5206\u522b\u5904\u7406\u524d\u534a\u90e8\u5206\u548c\u540e\u534a\u90e8\u5206\uff1a\u6bcf\u8bfb\u5165\u4e00\u4e2a $a_i$ \u5c31\u5224\u65ad\u8fd9\u4e2a $a_i$ \u662f\u5728\u5b57\u7b26\u4e32\u7684\u524d\u534a\u90e8\u5206\u8fd8\u662f\u540e\u534a\u90e8\u5206\uff0c\u5982\u679c\u662f\u540e\u534a\u90e8\u5206\u5c31\u4ece\u5b57\u7b26\u4e32\u7684\u4e00\u534a\u5f00\u59cb\u6a21\u62df\uff0c\u5426\u5219\u5c31\u4ece\u5b57\u7b26\u4e32\u7684\u5f00\u5934\u5f00\u59cb\u6a21\u62df\uff0c\u6bcf\u6b21\u5224\u65ad\u5982\u679c $a_i > j$ \u5c31\u4ea4\u6362 $a_i$ \u548c $a_{len-i+1}$ \u7684\u4f4d\u7f6e\uff0c\u6700\u540e\u8f93\u51fa\u5f97\u5230\u7684\u5b57\u7b26\u4e32\u5373\u53ef\u3002\n\n\u5177\u4f53\u800c\u8a00\uff0c\u5b9e\u73b0\u65f6\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u8fdb\u884c\uff1a\n\n\u8bfb\u5165\u5b57\u7b26\u4e32 $s$ \u548c\u64cd\u4f5c\u6b21\u6570 $m$\uff1b\n\n\u5bf9\u4e8e\u6bcf\u6b21\u64cd\u4f5c\uff0c\u8bfb\u5165\u6570\u5b57 $a_i$\uff0c\u5e76\u6839\u636e\u5176\u5728\u524d\u534a\u90e8\u5206\u8fd8\u662f\u540e\u534a\u90e8\u5206\u8fdb\u884c\u6a21\u62df\uff1b\n \n\u5bf9\u4e8e\u6bcf\u6b21\u6a21\u62df\uff0c\u4ece\u5934\u6216\u5c3e\u5f00\u59cb\u904d\u5386\u5b57\u7b26\u4e32 $s$\uff0c\u5bf9\u4e8e\u4f4d\u7f6e $i$\uff0c\u5982\u679c $i \\le j$\uff0c\u5219\u76f4\u63a5\u8df3\u8fc7\uff1b\n\n\u5426\u5219\uff0c\u4ea4\u6362 $s_i$ \u548c $s_{len-i+1}$ \u7684\u4f4d\u7f6e\uff1b\u91cd\u590d\u6b65\u9aa4 $2$-$3$\uff0c\u76f4\u5230\u8fdb\u884c\u5b8c $m$ \u6b21\u64cd\u4f5c\uff1b\u8f93\u51fa\u6700\u7ec8\u5f97\u5230\u7684\u5b57\u7b26\u4e32\u3002\n\n\u8fd9\u91cc\u5c31\u4e0d\u653e\u5168\u90e8\u4ee3\u7801\u4e86\uff0c\u53ea\u653e\u6a21\u62df\u524d\u534a\u90e8\u5206\u7684\u51fd\u6570\u4e86\uff1a\n\n## \u90e8\u5206\u4ee3\u7801\n```cpp\nvoid str_ans1(){\n\tfor(int i=0;i<b;i++){\n\t\tfor(int j=0;j<=c;j++){\n\t\t\tif(a[i]-1<=j){//\u56e0\u4e3a\u9898\u76ee\u4e2d\u662f\u6309\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u662fa[1]\u6765\u4f5c\u4e3a\u8f93\u5165\u53c2\u7167\u7684\uff0c\u4f46\u5b57\u7b26\u4e32\u8f93\u5165\u9ed8\u8ba4\u662f\u4ecea[0]\u5f00\u59cb\uff0c\u6240\u4ee5\u5224\u65ad\u65f6\u8981-1\n\t\t\t\tswap(q[j],q[d-j+1]);\n\t\t\t}\n\t\t}\n\t}\n\treturn;\n}\n//\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff1aq\u662f\u8f93\u5165\u4e5f\u662f\u76ee\u6807\u5b57\u7b26\u4e32\uff0cb\u4e3a\u64cd\u4f5c\u6b21\u6570\uff0ca[i]\u4e3a\u6bcf\u4e00\u6b21\u64cd\u4f5c\u9700\u8981\u7ffb\u8f6c\u7684\u4f4d\u7f6e\uff0cd\u662f\u5b57\u7b26\u4e32q\u7684\u957f\u5ea6\uff0cc=d/2\n```\n",
        "postTime": 1685023167,
        "uid": 926430,
        "name": "luoguwyc12345",
        "ccfLevel": 0,
        "title": "# CF525B \u9898\u89e3"
    },
    {
        "content": "\u7a0d\u5fae\u770b\u770b\u8fd9\u9053\u9898\u7684\u9898\u610f\uff0c\u53ef\u4ee5\u603b\u7ed3\u4e00\u4e0b\uff1a\n\n> \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 $s$ \uff0c\u6bcf\u6b21\u64cd\u4f5c\u7ffb\u8f6c\u533a\u95f4 $[l,len-l+1]$ \uff0c\u6c42\u51fa\u6700\u540e\u7684\u5b57\u7b26\u4e32\u3002\n\n\u7136\u540e\u663e\u7136\u5730\uff0c\u5c31\u53d1\u73b0\uff0c\u8fd9\u4e0d\u5c31\u6587\u827a\u5e73\u8861\u6811\u54a9\u3002\n\n~~\u76f4\u63a5\u8d3a\u8fc7\u6765\u6a21\u677f~~\u3002\n\n\u7ed3\u679c\u8fd9\u662f\u9053 B \u9898\uff0c\u901b\u4e86\u5708\u9898\u89e3\u533a\u4e5f\u53d1\u73b0\u4f3c\u4e4e\u6709\u4e00\u79cd\u7b80\u5355\u7684\u5dee\u5206\u505a\u6cd5\uff0c\u53ef\u60dc\u849f\u84bb\u53ea\u4f1a\u7b80\u7b80\u5355\u5355\u7684\u6570\u636e\u7ed3\u6784\uff0c\u60f3\u4e0d\u5230\u9ad8\u6df1\u7684\u5dee\u5206\uff0c\u5c31\u66b4\u529b\u5e73\u8861\u6811\u603c\u8fc7\u53bb\u60f9\u3002qwq\n\n\u4ecb\u7ecd\u7b80\u5355\u7684 Fhq-Treap \uff0c\u901a\u8fc7 Treap \u7684\u601d\u8def\uff0c\u7ef4\u62a4\u968f\u673a\u503c\u7684\u5806\u6027\u8d28\u4ee5\u8fbe\u5230\u968f\u673a\u5e73\u8861\uff0c\u5e76\u7528\u5206\u88c2\u5408\u5e76\u64cd\u4f5c\u7ef4\u62a4\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6027\u8d28\u4ee5\u8fbe\u5230\u5de6\u53f3\u5e73\u8861\u3002\u5bb9\u6613\u7406\u89e3\uff0c\u800c\u4e14\u677f\u5b50\u6bd4 Splay \u597d\u80cc\uff0c\u5f3a\u70c8\u63a8\u8350\u3002\n\n\u5bf9\u4e8e Fhq-Treap \u7684\u533a\u95f4\u64cd\u4f5c\uff0c\u9700\u8981\u5728\u5206\u88c2\u65f6\u6309\u6392\u540d\u5206\u88c2\u3002\u6bcf\u4e00\u6b21\u5c06\u6574\u68f5\u5e73\u8861\u6811\u6309\u7167\u6392\u540d $[1,l-1],[l,r],[r+1,len]$ \u5206\u4e3a\u4e09\u6bb5\uff0c\u7136\u540e\u628a\u4e2d\u95f4\u7684\u533a\u95f4\u6253\u4e0a\u7ffb\u8f6c\u6807\u8bb0\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u5e8f\u5217\u7ffb\u8f6c\u95ee\u9898\u7684\u89e3\u6cd5\uff0c\u5de6\u8f6c[\u6587\u827a\u5e73\u8861\u6811](https://www.luogu.com.cn/problem/P3391)\uff0c\u5176\u4ed6\u7684\u8bdd\uff0c\u5c31\u6ca1\u6709\u4ec0\u4e48\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\u4e86\u3002\n\n\u63a8\u8350\u4e00\u4e0b\u849f\u84bb\u7684\u535a\u5ba2\uff0c[\u4e09\u79cd\u5e38\u89c1\u5e73\u8861\u6811\u4e0d\u592a\u8be6\u89e3](https://violeteternal.github.io/Eternity/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/OI/balanced-tree/)\n\nAC Code:\n\n``` c++\nconst int MAXN=2e5+10;\nchar Str[MAXN];\nint N,Q;\nstruct BT\n{\n    int Idx=0,Rt=0,x,y,z;\n    struct Fhq\n    {\n        int siz,val,rd,rev,chi[2];\n    }Tr[MAXN];\n    #define ls(p) Tr[p].chi[0]\n    #define rs(p) Tr[p].chi[1]\n    inline void upDate(int p)\n    {\n        Tr[p].siz=Tr[ls(p)].siz+Tr[rs(p)].siz+1;\n    }\n    inline int newNode(int v)\n    {\n        Tr[++Idx]={0,v,rand()};\n        return Idx;\n    }\n    inline void reverse(int p)\n    {\n        if(!Tr[p].rev) return ;\n        std::swap(ls(p),rs(p));\n        if(ls(p)) Tr[ls(p)].rev^=1;\n        if(rs(p)) Tr[rs(p)].rev^=1;\n        Tr[p].rev=0;\n    }\n    void split(int p,int k,int &u,int &v)\n    {\n        if(!p) u=v=0;\n        else\n        {\n            if(Tr[p].rev) reverse(p);\n            if(Tr[ls(p)].siz<k) u=p,split(rs(u),k-Tr[ls(p)].siz-1,rs(u),v);\n            else v=p,split(ls(v),k,u,ls(v));\n            upDate(p);\n        }\n        return ;\n    }\n    int merge(int u,int v)\n    {\n        if(!u||!v) return u+v;\n        if(Tr[u].rd<Tr[v].rd)\n        {\n            if(Tr[u].rev) reverse(u);\n            rs(u)=merge(rs(u),v);\n            upDate(u);return u;\n        }\n        else\n        {\n            if(Tr[v].rev) reverse(v);\n            ls(v)=merge(u,ls(v));\n            upDate(v);return v;\n        }\n    }\n    inline void insert(int v)\n    {\n        split(Rt,v-1,x,y);\n        Rt=merge(merge(x,newNode(v)),y);\n    }\n    inline void reverse(int l,int r)\n    {\n        split(Rt,l-1,x,y),split(y,r-l+1,y,z);\n        Tr[y].rev^=1;\n        Rt=merge(merge(x,y),z);\n    }\n    inline void print(int p)\n    {\n        if(!p) return ;\n        if(Tr[p].rev) reverse(p);\n        print(ls(p));\n        write(Str[Tr[p].val]);\n        print(rs(p));\n    }\n}Tree;\nint main()\n{\n    // freopen(\".in\",\"r\",stdin);\n    // freopen(\".out\",\"w\",stdout);\n    scanf(\"%s\",Str+1);\n    N=strlen(Str+1);\n    for(int i=1;i<=N;++i) Tree.insert(i);\n    read(Q);\n    for(int ql;Q--;)\n    {\n        read(ql);int qr=N-ql+1;\n        Tree.reverse(ql,qr);\n    }\n    Tree.print(Tree.Rt);\n    return 0;\n}\n/*\nabcdef\n1\n2\n*/\n```",
        "postTime": 1661998150,
        "uid": 444040,
        "name": "_Eternal_",
        "ccfLevel": 0,
        "title": "CF525B Pasha and String \u9898\u89e3"
    },
    {
        "content": "### \u89e3\u9898\u601d\u8def\uff1a\n\n\u672c\u9898\u7684\u4e00\u79cd\u8f83\u4e3a\u7b80\u5355\u5b9e\u73b0\u65b9\u6cd5\u662f\u5dee\u5206\uff0c\u4f46\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u7ffb\u8f6c\u95ee\u9898\u662f\u4f7f\u7528\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\uff08\u5982\u5e73\u8861\u6811\uff09\u6765\u6c42\u89e3\u7684\uff0c\u672c\u9898\u80fd\u591f\u5dee\u5206\u5b9e\u73b0\u662f\u6709\u5176\u7279\u6b8a\u6027\u7684\u3002\n\n\u7531\u4e8e\u6bcf\u4e00\u6b21\u7684\u7ffb\u8f6c\u90fd\u662f\u4ee5\u6700\u4e2d\u95f4\u7684\u90a3\u4e00\u4e2a\u70b9\u4e3a\u4e2d\u5fc3\u7684\uff0c\u6240\u4ee5\u5c06\u6574\u4e2a\u5b57\u7b26\u4e32\u780d\u6389\u4e00\u534a\uff0c\u5bf9\u4e8e\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u82e5\u5de6\u8fb9\u82e5\u9700\u8981\u7ffb\u5219\u53f3\u8fb9\u4e00\u5b9a\u8981\u7ffb\u3002\n\n\u8fd9\u6837\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u5728\u5de6\u8fb9\uff08\u6216\u8005\u53f3\u8fb9\uff09\u6bcf\u4e00\u6b21\u7ffb\u8f6c\u4ece\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u4e00\u76f4\u5230\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u7ffb\u8f6c\uff0c\u663e\u7136\u53ef\u4ee5\u6839\u636e\u5947\u5076\u6027\u5dee\u5206\u3002\n\n---\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\nusing namespace std;\nchar s[200005];\nint n,m,l,r,d[200005],now;\nint main(){\n\tcin>>s+1;\n\tn=strlen(s+1);\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d\",&l);\n\t\td[l]^=1;d[n-l+2]^=1;\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tnow^=d[i];\n\t\tif(now==0)printf(\"%c\",s[i]);\n\t\telse printf(\"%c\",s[n-i+1]);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1638677221,
        "uid": 223559,
        "name": "qxp101",
        "ccfLevel": 6,
        "title": "CF525B Pasha and String \u9898\u89e3"
    },
    {
        "content": "~~\u5dee\u5206yyds\uff01~~\n\n\u505a\u8fd9\u9053\u9898\u5c31\u9700\u8981\u5b66\u4f1a\u5dee\u5206\u3002\n\n\n\u6240\u4ee5\u6211\u4eec\u5148\u8981\u4e86\u89e3\u4ee5\u4e0b[\u5dee\u5206\u548c\u524d\u7f00\u548c](https://oi-wiki.org/basic/prefix-sum/)\u3002\n\n\n\u6ce8\uff1a\u4fee\u6539\u533a\u95f4\u7528\u5dee\u5206\uff0c\u67e5\u8be2\u533a\u95f4\u7528\u524d\u7f00\u548c\u3002\n\n\u800c\u8fd9\u9053\u9898\u7528\u5230\u4e86\u4fee\u6539\u64cd\u4f5c\uff0c\u6240\u4ee5\u4f7f\u7528\u5dee\u5206\u3002\n\n#### \u6b65\u9aa4\uff1a\n\n\uff08\u7528\u6837\u4f8b $1$ \u4e3e\u4f8b\uff09\n\n\u9996\u5148\u5c06\u5b57\u7b26\u4e32\u4ece\u4e2d\u95f4\u4e00\u5206\u4e3a\u4e8c\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/l9v145a4.png?x-oss-process=image)\n\n\u63a5\u4e0b\u6765\u5c06\u7b2c\u4e00\u4e2a\u8981\u65cb\u8f6c\u7684\u5b57\u7b26\u7684\u540e\u9762\u7684\u6240\u6709\u5b57\u7b26\u7684\u65cb\u8f6c\u6b21\u6570\u52a0 $1$\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/9eyhbrsm.png?x-oss-process=image)\n\n\u6700\u540e\u904d\u5386\u524d\u534a\u90e8\u5206\u7684\u65cb\u8f6c\u6b21\u6570\uff0c\u5982\u679c\u4e3a\u5076\u6570\u4e0d\u53d8\uff0c\u5982\u679c\u4e3a\u5947\u6570\u4ea4\u6362\u3002\n\n\u6ce8\u610f\uff1a\u4e0d\u7528\u50cf\u666e\u901a\u7684\u5dee\u5206\u5904\u7406\u540e\u9762\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u7528\u904d\u5386\u524d\u534a\u90e8\u5206\uff0c\u8fd9\u4e3a\u7a0b\u5e8f\u7701\u4e86\u65f6\u95f4\u3002\n\n\u6240\u4ee5\u4ee3\u7801\u5c31\u6bd4\u8f83\u7b80\u5355\u4e86\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nchar s[200001];\nint n, x;\nint a[200001];\n\nint main() {\n\tcin >> s + 1;\n\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> x;\n\t\ta[x]++;\n\t}\n\tint len = strlen(s + 1);\n\tfor (int i = 1; i <= len / 2; i++) {\n\t\ta[i] += a[i - 1];\n\t\tif (a[i] % 2 == 1)\n\t\t\tswap(s[i], s[len - i + 1]);\n\t}\n\tfor (int i = 1; i <= len; i++)\n\t\tcout << s[i];\n\treturn 0;\n}\n```\n",
        "postTime": 1628918338,
        "uid": 326452,
        "name": "Fearliciz",
        "ccfLevel": 0,
        "title": "CF525B"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f\uff1a\u7ed9\u4f60\u4e00\u4e32\u5b57\u7b26\u4e32\uff0c\u6709m\u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u4e00\u4e2a\u6570ai\uff0c\u7ffb\u8f6c\u4f4d\u7f6eai\u5230s-ai+1\u4e4b\u95f4\u7684\u5b57\u7b26\u4e32\uff0c\u8f93\u51fa\u6700\u540e\u7684\u5b57\u7b26\u4e32\u3002\n\n\u601d\u8def\uff1a\u6bd4\u8f83\u7384\u5b66\uff0c\u5c31\u662f\u5148\u7528\u4e00\u4e2ahh\u6570\u7ec4\u8bb0\u5f55\u6bcf\u6bb5\uff08\u7c7b\u4f3c\u5dee\u5206\uff0c\u8bb0\u5f55\u5728\u4e24\u5934\uff09\u7684\u53d8\u6362\u60c5\u51b5\uff0c\u7136\u540e\u4ece\u5934\u5f80\u540e\u626b\uff0c\u6bcf\u6b21\u5f53\u4e00\u4e2a\u4f4d\u7f6e\u4ea4\u6362\u4e86\u5947\u6570\u6b21\u5c31\u6539\u53d8f\uff0c\u4e00\u65e6\u4ea4\u6362\u4e86\u5947\u6570\u6b21\uff08f==1\uff09\u5c31\u4e0e\u5bf9\u5e94\u4f4d\u7f6e\u7684\u5b57\u7b26\u4ea4\u6362\uff0c\u53cd\u4e4b\u5219\u4e0d\u53d8\u3002\n\n\n```cpp\n#include<cstdio>\n#include<string>\n#include<iostream>\nusing namespace std;\nstring ss;\nbool hh[100010]={0},f=false;\nint main()\n{\n    int c,cc,stl,t,t1;\n    cin>>ss;\n    cin>>c;\n    t=ss.size()/2;\n    stl=ss.size();\n    for(int i=1;i<=c;i++)\n    {\n        cin>>cc;\n        cc--;\n        if(hh[cc])\n            hh[cc]=0;\n        else\n            hh[cc]=1;\n    }\n    for(int i=0;i<t;i++)\n    {\n        if(hh[i])\n        {\n            if(!f)\n                f=1;\n            else\n                f=0;\n        }\n        if(f)\n            swap(ss[i],ss[stl-i-1]);\n    }\n    cout<<ss;\n    return 0;\n}\n\n```\n",
        "postTime": 1566123166,
        "uid": 132290,
        "name": "\u5f00\u59cb\u65b0\u7684\u8bb0\u5fc6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF525B \u3010Pasha and String\u3011"
    },
    {
        "content": "[\u539f\u9898\u94fe\u63a5](http://codeforces.com/problemset/problem/525/B)\n\n\u6837\u4f8b\uff1a\ninput\uff1a\nabcdef \n1 \n2 \n\noutput\uff1a\naedcbf \n\ninput\uff1a\nvwxyz \n2 \n2 2 \n\noutput\uff1a\nvwxyz \n\ninput\uff1a\nabcdef \n3 \n1 2 3 \n\noutput\uff1a\nfbdcea\n\n\u9898\u610f\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u4e32\uff0c\u6bcf\u6b21\u7ffb\u8f6c\u533a\u95f4[L, |s| - L + 1]\u7684\u5b57\u7b26\u3002\u95ee\u4f60\u6700\u540e\u7684\u5b57\u7b26\u4e32\u3002\n\n\u601d\u8def\uff1a\n\u663e\u7136\u5f53\u67d0\u4e2a\u4f4d\u7f6e\u5904\u7406\u6b21\u6570\u4e3a\u5947\u6570\u65f6\u624d\u9700\u8981\u53d8\u5316\uff0c\u6211\u4eec\u4ece\u5de6\u5411\u53f3\u626b\u63cf\u4e00\u904d\uff0c\u53d1\u73b0\u5947\u6570\u5219\u5c06\u53d8\u5316\u52a0\u5230\u53f3\u8fb9\uff0c\u6700\u540e\u53ea\u9700\u5224\u65ad\u67d0\u4e2a\u4f4d\u7f6e\u53d8\u5316\u6b21\u6570\u7684\u5947\u5076\u6027\u3002\n\n\u4ee3\u7801\uff1a\n```\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <map>\n#include <iostream>\n#include <cmath>\n#include <queue>\n#include <stack>\n#define ll o<<1\n#define rr o<<1|1\n#define CLR(a, b) memset(a, (b), sizeof(a))\nusing namespace std;\ntypedef long long LL;\ntypedef pair<int, int> pii;\nconst int INF = 0x3f3f3f3f;\nconst int MAXN = 1e6 + 10;\nchar str[MAXN];\nint use[MAXN];\nint main()\n{\n    while(scanf(\"%s\", str+1) != EOF) {\n        int len = strlen(str+1);\n        CLR(use, 0);\n        int m; scanf(\"%d\", &m);\n        for(int i = 1; i <= m; i++) {\n            int p; scanf(\"%d\", &p);\n            use[p]++;\n        }\n        for(int i = 2; i <= len/2; i++) {\n            if(use[i-1] & 1) use[i]++;\n        }\n        for(int i = 1; i <= len; i++) {\n            //cout << use[i] << endl;\n            if(use[i] & 1) {\n                swap(str[i], str[len-i+1]);\n                //use[i+1]++;\n            }\n        }\n        printf(\"%s\\n\", str+1);\n    }\n    return 0;\n}\n```",
        "postTime": 1540610326,
        "uid": 43664,
        "name": "Oscar12345",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF525B \u3010Pasha and String\u3011"
    },
    {
        "content": "$$\\large\\text{\u7ebf\u6bb5\u6811\u7f62\u3002\u3002\u867d\u7136\u5e94\u8be5\u8fd8\u6709\u66f4\u7b80\u6d01\u7684\u65b9\u6cd5}$$~~\u6bd5\u7adf\u662fB\u9898~~\n\n$\\small\\text{\u7136\u540e\u5c31\u53d1\u73b0\u8fd9\u5c31\u662f\u7ebf\u6bb5\u6811\u533a\u95f4\u7ffb\u8f6c\u7684\u4e00\u9053\u7248\u9898\u3002\u3002\u4e0a\u4ee3\u7801}$\n\n```\n#include<bits/stdc++.h>\n#define maxn 200005 \nusing namespace std; \nint L[maxn],R[maxn],S[maxn],K[maxn],IP; \nbool Turn[maxn];\nint ANS[maxn],ANSIP;\nvoid PushDown(int rt){\n\tif(Turn[rt]){\n\t\tTurn[L[rt]]^=1;Turn[R[rt]]^=1;\n\t\tswap(L[rt],R[rt]);\n\t\tTurn[rt]=0;\n\t}\n}\nvoid zig(int &rt){\n\tPushDown(rt);PushDown(R[rt]);\n\tint t=R[rt];R[rt]=L[t];L[t]=rt;\n\tS[t]=S[rt];S[rt]=1+S[L[rt]]+S[R[rt]];rt=t; \n}\nvoid zag(int &rt){\n\tPushDown(rt);PushDown(L[rt]);\n\tint t=L[rt];L[rt]=R[t];R[t]=rt;\n\tS[t]=S[rt];S[rt]=1+S[L[rt]]+S[R[rt]];rt=t;\n}\nint n,m;\nvoid Build(int &rt,int A,int B){\n\tint M=(A+B)>>1;\n\trt=++IP;\n\tL[rt]=R[rt]=0;\n\tS[rt]=B-A+1;\n\tK[rt]=ANS[M];\n\tif(A < M) Build(L[rt],A,M-1);\n\tif(B > M) Build(R[rt],M+1,B);\n}\nvoid Show(int &rt){\n\tPushDown(rt);\n\tif(L[rt]) Show(L[rt]);\n\tANS[ANSIP++]=K[rt];\n\tif(R[rt]) Show(R[rt]);\n}\nvoid SetRootTo(int &rt,int k){\n\tPushDown(rt);\n\tif(S[L[rt]]+1==k) return;\n\tif(S[L[rt]]>=k){SetRootTo(L[rt],k);zag(rt);return;}\n\telse {SetRootTo(R[rt],k-S[L[rt]]-1);zig(rt);return;}\n}\nvoid Reverse(int &rt,int Left,int Right){\n\tSetRootTo(rt,Right+2);SetRootTo(L[rt],Left);\n\tTurn[R[L[rt]]]^=1;\n}\nint main(){\n\tstring s;\n\tcin>>s;\n\tn=s.size();\n\tfor(int i=1;i<=n;++i) ANS[i]=s[i-1];\n\tint rt=0;IP=0;\n\tBuild(rt,0,n+1);\n\tscanf(\"%d\",&m);\n\tfor(int i=0;i<m;++i){\n\t \tint Left,Right;scanf(\"%d\",&Left);\n\t \tRight=n-Left+1;\n\t \tReverse(rt,Left,Right);\n\t }\n\t ANSIP=0;\n\t Show(rt);\n\t for(int i=1;i<=n;++i){\n\t \tprintf(\"%c\",ANS[i]);\n\t }\n    return 0;\n}\n```",
        "postTime": 1540609912,
        "uid": 119553,
        "name": "rEdWhitE_uMbrElla",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF525B \u3010Pasha and String\u3011"
    }
]