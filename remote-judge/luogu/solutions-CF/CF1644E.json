[
    {
        "content": "\u611f\u89c9\u8fd9\u9898\u8981\u6bd4 D \u7b80\u5355\u4e00\u4e9b\uff0c\u5957\u8def\u4e5f\u662f\u975e\u5e38\u7ecf\u5178\u7684\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u7b97\u8d21\u732e\u3002\u597d\u4e86\uff0c\u505a\u5b8c\u4e86\uff08\n\n### \u9898\u610f\n\n\u7ed9\u4f60\u4e00\u4e2a $n\\times m$ \u7684\u7f51\u683c\u548c\u4e00\u4e2a\u64cd\u4f5c\u5e8f\u5217\uff0c\u521d\u59cb\u4f60\u5728 $(1,1)$\uff0c\u4f60\u8981\u6309\u7167\u64cd\u4f5c\u5e8f\u5217\u64cd\u4f5c\uff1a\u6bcf\u6b21\u53f3\u79fb\u6216\u4e0b\u79fb\u4e00\u683c\u3002\u7136\u540e\u4f60\u53ef\u4ee5\u628a\u4e00\u6b21\u64cd\u4f5c\u53d8\u4e3a\u76f8\u540c\u7684\u4e24\u6b21\uff0c\u95ee\u4f60\u6240\u6709\u53ef\u80fd\u7684\u64cd\u4f5c\u5e8f\u5217\u4e00\u5171\u53ef\u4ee5\u5230\u8fbe\u591a\u5c11\u683c\u5b50\u3002\n\n### \u5206\u6790\n\n\u9996\u5148\u8003\u8651\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\uff1a\u5047\u5982\u64cd\u4f5c\u5e8f\u5217\u53ea\u6709\u4e00\u4e2a\u65b9\u5411\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f $n$ \u6216 $m$\u3002\n\n\u9996\u5148\u6211\u4eec\u6309\u7167\u7ed9\u51fa\u7684\u64cd\u4f5c\u5e8f\u5217\u8d70\u4e00\u904d\u5230\u90a3\u4e2a\u683c\u5b50\uff0c\u7136\u540e\u6c42\u51fa\u6765\u8fd9\u4e2a\u4f4d\u7f6e\u6700\u591a\u53ef\u4ee5\u5728\u6a2a\u6216\u7eb5\u65b9\u5411\u4e0a\u8d70\u51e0\u683c\u5230\u8fbe $(n,m)$\uff0c\u8bb0\u9700\u8981\u53f3\u79fb $x$ \u683c\uff0c\u4e0b\u79fb $y$ \u683c\u3002\n\n\u5728\u63a5\u4e0b\u6765\u7684\u5206\u6790\u4e2d\uff0c\u4e3a\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u4eec\u628a\u683c\u5b50\u4e0e\u683c\u5b50\u4e4b\u95f4\u7684\u64cd\u4f5c\u6539\u6210\u683c\u5b50\u5185\u90e8\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\u8bf4\u5f53\u524d\u5728 $(1,1)$ \u7136\u540e\u8981\u5411\u53f3\u79fb\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u628a\u8fd9\u4e2a\u683c\u5b50\u6807\u8bb0\u4e00\u4e2a\u53f3\u79fb\u3002\u5f53\u7136\u8fd9\u4e48\u505a\u4f1a\u6f0f\u4e00\u4e2a\u683c\u5b50\uff0c\u540e\u9762\u4f1a\u52a0\u4e0a\u7684\u3002\n\n\u8003\u8651\u8ba1\u7b97\u7b54\u6848\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u683c\u5b50\uff0c\u6211\u4eec\u6700\u591a\u53ef\u4ee5\u5411**\u8fd9\u4e2a\u683c\u5b50\u76f8\u5bf9\u7684\u65b9\u5411**\uff08\u6bd4\u5982\u683c\u5b50\u662f\u5411\u53f3\u7684\uff0c\u5c31\u8003\u8651\u5411\u4e0b\u8fd9\u4e2a\u65b9\u5411\uff09\u79fb\u52a8 $x$ \u6216 $y$ \u683c\u3002\u56e0\u4e3a\u79fb\u52a8\u4e00\u5b9a\u662f\u5411\u53f3\u5411\u4e0b\u7684\uff0c\u4f60\u65e0\u8bba\u600e\u4e48\u6269\u5c55\u4e00\u5b9a\u4e0d\u4f1a\u8d85\u51fa\u8fb9\u754c\u6216\u8005\u548c\u522b\u7684\u91cd\u5408\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u628a\u8fd9\u4e9b\u8d21\u732e\u5230\u7b54\u6848\u91cc\u9762\u3002\n\n\u6ce8\u610f\u4e00\u70b9\uff0c\u53ea\u6709\u5728\u7b2c\u4e00\u6b21\u8f6c\u5411\u53ca\u4ee5\u540e\u624d\u80fd\u8fdb\u884c\u8fd9\u6837\u7684\u64cd\u4f5c\uff08\u60f3\u4e00\u60f3\uff0c\u4e3a\u4ec0\u4e48\uff09\u3002\n\n\u7136\u540e\u8003\u8651\u6700\u540e\u4e00\u4e2a\u683c\u5b50\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u4ece\u53f3\u4e0b\u89d2\u5f00\u59cb\u7684 $x\\times y$ \u7684\u6240\u6709\u683c\u5b50\u90fd\u80fd\u8d70\u5230\uff0c\u6211\u4eec\u76f4\u63a5\u52a0\u4e0a\u53bb\u3002\n\n### Code \n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nnamespace GGMZ\n{\n\tconst int N = 2e5 + 5;\n\tchar s[N];\n\tint x, y, n, ans;\n\tvoid work()\n\t{\n\t\tbool flag = 1;\n\t\tstd::cin >> n >> s + 1;\n\t\tx = 1, y = 1;\n\t\tfor (int i = 1;s[i];i++)\n\t\t{\n\t\t\tif (s[i] == 'R')x++;\n\t\t\telse y++;\n\t\t\tif (s[i] != s[i - 1] && i != 1)flag = 0;\n\t\t}\n\t\tif (flag == 1)\n\t\t{\n\t\t\tstd::cout << n << '\\n';\n\t\t\treturn;\n\t\t}\n\t\tx = n - x, y = n - y;\n\t\tint i = 2;\n\t\tans = 1;\n\t\twhile (s[i] == s[i - 1])ans++, i++;\n\t\tfor (i;s[i];i++)\n\t\t{\n\t\t\tans++;\n\t\t\tif (s[i] == 'R')ans += y;\n\t\t\telse ans += x;\n\t\t\tif (s[i + 1] == 0)ans += (x + 1)*(y + 1);\n\t\t}\n\t\tstd::cout << ans << '\\n';\n\t}\n}\n#undef int\nint main()\n{\n\tint t;\n\tstd::cin >> t;\n\twhile (t--)GGMZ::work();\n\treturn 0;\n}\n```",
        "postTime": 1645576494,
        "uid": 400781,
        "name": "Troubadour",
        "ccfLevel": 0,
        "title": "CF1644E Expand the Path \u9898\u89e3"
    },
    {
        "content": "## \u9898\u610f\n\n\u5728\u4e00\u4e2a $n*n$ \u7684\u7f51\u683c\u4e2d\uff0c\u4ee5\u6700\u5de6\u4e0a\u89d2\u7684\u683c\u5b50\u4e3a\u8d77\u70b9\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 $s$ \u8868\u793a\u79fb\u52a8\u5e8f\u5217\uff0c$R$ \u8868\u793a\u5411\u53f3\u8d70\u4e00\u683c\uff0c$D$ \u8868\u793a\u5411\u4e0b\u8d70\u4e00\u683c\u3002\n\n\u4f60\u53ef\u4ee5\u5728\u4e00\u4e2a $R$ \u5b57\u7b26\u540e\u63d2\u5165\u4e00\u4e2a $R$\uff0c\u4e5f\u53ef\u4ee5\u5728\u4e00\u4e2a $D$ \u5b57\u7b26\u540e\u63d2\u5165\u4e00\u4e2a $D$\uff0c\u5f62\u6210\u4e00\u4e2a\u65b0\u7684\u79fb\u52a8\u5e8f\u5217\u3002\u8be5\u64cd\u4f5c\u6b21\u6570\u4e0d\u9650\uff0c\u4f46\u5f62\u6210\u7684\u79fb\u52a8\u5e8f\u5217\u4e0d\u80fd\u79fb\u52a8\u5230\u7f51\u683c\u5916\u3002\n\n\u5728\u6240\u6709\u80fd\u5f62\u6210\u7684\u5408\u6cd5\u5e8f\u5217\u4e2d\uff0c\u95ee\u6709\u591a\u5c11\u4e2a\u683c\u5b50\u80fd\u88ab\u81f3\u5c11\u4e00\u4e2a\u5408\u6cd5\u7684\u79fb\u52a8\u5e8f\u5217\u904d\u5386\u5230\u3002\n\n## \u9898\u89e3\n~~\u8fd9\u9898\u6bd4D\u7b80\u5355\u591a\u4e86\u597d\u561b~~\n\n\u5982\u4e0b\u56fe\uff08\u56fe\u4e0d\u4e25\u8c28\uff0c\u610f\u4f1a\u5373\u53ef\uff09\uff1a\n\n![](https://i.bmp.ovh/imgs/2022/02/5a6681ad719fcbe2.png)\n\n\u7eff\u8272\u4e3a\u539f\u79fb\u52a8\u5e8f\u5217\u5f62\u6210\u7684\u8def\u5f84\uff0c\u539f\u8def\u5f84\u8d70\u5b8c\u540e\u5230\u8fbe\u7684\u683c\u5b50\u4e3a $(x,y)$\uff0c\u90a3\u4e48\u6700\u591a\u590d\u5236 $n-x$ \u4e2a $D$\uff0c$n-y$ \u4e2a $R$\u3002\u624b\u73a9\u4e00\u4e0b\u6837\u4f8b\u80fd\u53d1\u73b0\uff0c\u79fb\u52a8\u5e8f\u5217\u7684\u7ec8\u70b9\u7684\u4f4d\u7f6e\u4f1a\u51fa\u73b0\u5728\u7ea2\u8272\u65b9\u6846\u7684\u6240\u6709\u4f4d\u7f6e\u3002\u6b64\u65f6\u6211\u4eec\u628a\u6700\u540e\u4e00\u6b65\u5220\u6389\u540c\u65f6\u628a\u7f51\u683c\u7f29\u5c0f\u4e00\u5217\uff0c\u53d8\u6210\u4e0b\u56fe\u3002\n\n![](https://i.bmp.ovh/imgs/2022/02/0c45be13335f3eae.png)\n\n\u6b64\u65f6\u91cd\u590d\u4e0a\u9762\u601d\u8def\u4f1a\u53d1\u73b0\u7ec8\u70b9\u4f9d\u7136\u5728\u7ea2\u8272\u65b9\u6846\u533a\u57df\uff0c\u4f9d\u6b21\u5f80\u4e0b\u63a8\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u6240\u6709\u683c\u5b50\u90fd\u4f1a\u8986\u76d6\u4ee5\u5176\u4e3a\u5de6\u4e0a\u89d2\u7684\u5927\u5c0f\u4e3a $(n-x) * (n-y)$ \u7684\u65b9\u683c\u3002\n\n\u4f46\u662f\u5f53\u8def\u5f84\u4e3a\u4e00\u6761\u76f4\u7ebf\u7684\u65f6\u5019\uff0c\u6839\u636e\u9898\u610f\u6211\u4eec\u53ea\u80fd\u4e00\u76f4\u5f80\u4e0b\u6216\u8005\u5f80\u53f3\u8d70\u3002\u6240\u4ee5\u5728\u539f\u8def\u5f84\u51fa\u73b0\u201c\u62d0\u5f2f\u201d\u524d\u7684\u683c\u5b50\u662f\u4e0d\u80fd\u8986\u76d6\u8303\u56f4\u4e3a\u65b9\u6846\u7684\u683c\u5b50\u7684\u3002\n\n\u4e8e\u662f\uff0c\u7b54\u6848\u4fbf\u5f88\u5bb9\u6613\u6c42\u51fa\u4e86\uff0c\u539f\u8def\u5f84\u8986\u76d6\u7684\u683c\u5b50\u548c\u4ee5\u539f\u8def\u5f84\u51fa\u73b0\u7b2c\u4e00\u6b21\u62d0\u5f2f\u540e\u7684\u6240\u6709\u683c\u5b50\u4e3a\u5de6\u4e0a\u89d2\u7684\u5927\u5c0f\u4e3a $(n-x) * (n-y)$ \u7684\u77e9\u5f62\u6240\u8986\u76d6\u7684\u683c\u5b50\u7684\u4e2a\u6570\u5373\u4e3a\u7b54\u6848\u3002\u7b80\u5355\u904d\u5386\u4e00\u904d\u539f\u8def\u5f84\u540e\u5bb9\u65a5\u4e00\u4e0b\u5373\u53ef\u3002",
        "postTime": 1645707448,
        "uid": 99908,
        "name": "ArrogHie",
        "ccfLevel": 8,
        "title": "\u9898\u89e3CF1644E\u3010Expand the Path\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\u7ed9\u5b9a $n\\times n$ \u7684\u7f51\u683c\uff0c\u4e00\u4e2a\u673a\u5668\u4eba\u521d\u59cb\u5728 $(1,1)$\uff0c\u7ed9\u5b9a\u5176\u7531\u82e5\u5e72\u4e2a `R` \u548c `D` \u6784\u6210\u7684\u64cd\u4f5c\u5e8f\u5217\uff0c\u4e24\u79cd\u5b57\u6bcd\u5206\u522b\u4ee3\u8868\u53f3\u79fb\u4e00\u683c\u548c\u4e0b\u79fb\u4e00\u683c\u3002\u4f60\u53ef\u4ee5\u4ee5\u4efb\u610f\u6b21\u6570\u5c06\u64cd\u4f5c\u5e8f\u5217\u4e2d\u7684\u67d0\u4e2a\u64cd\u4f5c\u590d\u5236\u4e00\u904d\uff0c\u4f8b\u5982 `RDR` \u53ef\u4ee5\u53d8\u6210 `RDDR` \u4e5f\u53ef\u4ee5\u53d8\u6210 `RRDR`\uff0c\u4f46\u8981\u6c42\u673a\u5668\u4eba\u4e0d\u80fd\u8d70\u51fa\u7f51\u683c\u3002\u95ee\u673a\u5668\u4eba\u6709\u53ef\u80fd\u7ecf\u8fc7\u7684\u683c\u5b50\u6570\u91cf\u3002$1\\le T\\le 10^4$\uff0c$2\\le n\\le 10^8$\uff0c\u64cd\u4f5c\u5e8f\u5217\u603b\u957f $\\le 2\\times 10^5$\u3002\n\n\u9996\u5148\u5bf9\u4e8e\u5168\u662f `R` \u6216\u5168\u662f `D` \u7684\u64cd\u4f5c\u5e8f\u5217\uff0c\u7b54\u6848\u663e\u7136\u4e3a $n$\uff0c\u7279\u5224\u6389\u5373\u53ef\u3002\n\n\u5426\u5219\u4ee4 `R` \u7684\u4e2a\u6570\u4e3a $\\mathrm{cnt}_R$\uff0c`D` \u7684\u4e2a\u6570\u4e3a $\\mathrm{cnt}_D$\uff0c\u5219\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e\u7b2c\u4e00\u4e2a `RD` \u6216\u8005 `DR` \u4e4b\u540e\u7684\u6bcf\u4e2a\u683c\u5b50\uff0c\u5176\u90fd\u53ef\u4ee5\u8986\u76d6\u4ee5\u5176\u4e3a\u5de6\u4e0a\u89d2\u7684 $(n - \\mathrm{cnt}_R + 1)\\times (n - \\mathrm{cnt}_D  + 1)$ \u7684\u77e9\u5f62\uff0c\u56e0\u4e3a\u53ef\u4ee5\u901a\u8fc7\u4efb\u610f\u500d\u589e `R` \u6216\u8005 `D` \u6765\u5b9e\u73b0\u3002\n\n\u73b0\u5728\u7684\u95ee\u9898\u5c31\u662f\u6570\u51fa\u8fd9\u4e9b\u683c\u5b50\u7684\u6570\u91cf\u3002\u753b\u56fe\u4e4b\u540e\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u53ef\u4ee5\u884c\u5217\u5206\u5f00\u8003\u8651\u3002\u5bf9\u4e8e\u6bcf\u884c\u7684\u8d21\u732e\u52a0\u4e0a\u5bf9\u4e8e\u6bcf\u5217\u7684\u8d21\u732e\u518d\u52a0\u4e0a\u53f3\u4e0b\u89d2\u7684\u77e9\u5f62\u5373\u4e3a\u7b54\u6848\uff0c\u5f53\u7136\u9700\u8981\u7edf\u8ba1\u4e00\u4e0b\u672c\u8eab\u8d70\u8fc7\u7684\u8def\u5f84\uff0c\u8be6\u89c1\u4ee3\u7801\u3002\n\n```cpp\nusing ll = long long;\nconst int maxn = 2e5 + 5;\nchar s[maxn];\n\nint main() {\n    int T; read(T);\n    while (T--) {\n        ll n, cntr = 0, cntd = 0;\n        read(n);\n        read(s + 1);\n        int len = strlen(s + 1);\n        ll nowx = 1, nowy = 1;\n        FOR(i, 1, len) {\n            if (s[i] == 'D') {\n                ++cntd;\n            } else {\n                ++cntr;\n            }\n        }\n        if (cntr == 0 || cntd == 0) {\n            print(n);\n        } else {\n            ll cntr2 = 0, cntd2 = 0, ans = len + 1; // \u9996\u5148\u4f1a\u8986\u76d6 len + (1,1) \u4e2a\u683c\u5b50\n            if (s[1] == 'R') { // \u5206\u7c7b\u8ba8\u8bba\n                ans += (cntd + 1) * (n - cntr - 1); // \u8fd9\u662f\u5173\u4e8e\u6bcf\u884c\u7684\u8d21\u732e\n                FOR(i, 1, len) {\n                    if (s[i] == 'D') break;\n                    ++cntr2; // \u7edf\u8ba1\u5f00\u5934\u7684 R \u64cd\u4f5c\u7684\u4e2a\u6570\n                }\n                ans += (cntr - cntr2 + 1) * (n - cntd - 1); // \u7edf\u8ba1\u5173\u4e8e\u6bcf\u5217\u7684\u8d21\u732e\uff0c\u9700\u8981\u53bb\u9664\u5f00\u5934\u7684\u8fde\u7eed\u7684\u4e0d\u4f1a\u4ea7\u751f\u8d21\u732e\u7684 R\n            } else { // \u4e0b\u9762\u7684\u60c5\u51b5\u540c\u7406\n                ans += (cntr + 1) * (n - cntd - 1);\n                FOR(i, 1, len) {\n                    if (s[i] == 'R') break;\n                    ++cntd2;\n                }\n                ans += (cntd - cntd2 + 1) * (n - cntr - 1);\n            }\n            ans += (n - cntr - 1) * (n - cntd - 1); // \u6700\u540e\u9700\u8981\u8ba1\u7b97\u53f3\u4e0b\u89d2\u7684\u77e9\u5f62\n            print(ans);\n        }\n        FOR(i, 1, len) s[i] = 0;\n    }\n    return output(), 0;\n}\n```\n\n",
        "postTime": 1645599065,
        "uid": 212488,
        "name": "\u6e05\u70db",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1644E Expand the Path"
    }
]