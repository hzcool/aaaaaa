[
    {
        "content": "###  \u65e2\u7136\u8fd8\u6ca1\u6709\u9898\u89e3\uff0c\u90a3\u6211\u5c31\u6ecb\u78c1\u4e00\u4e0bQwQ \n\u5927\u4f6c\u4eec\u90fd\u5fd9\u7740\u5237\u96be\u9898\uff0c\u6211\u592a\u849f\u4e86\u90fd\u4e0d\u4f1a\uff0c\u53ea\u80fd\u5728\u8fd9\u6084\u6084\u5199\u7bc7\u9898\u89e3\uff08\u5c0f\u58f0bb\uff09\n\n\u7531\u4e8e\u4e00\u4e9b\u5947\u602a\u7684\u539f\u56e0\uff0c\u6211\u5c31\u4e0d\u76ae\u4e86\uff0c\u4e0b\u9762\u6211\u4eec\u76f4\u63a5\u8fdb\u5165\u6b63\u9898\u30fd(\uffe3\u25bd\uffe3)\u0648\n\n\u9996\u5148\u6211\u4eec\u6765\u89e3\u6790\u9898\u610f\uff0c\u8fd9\u9053\u9898\u5176\u5b9e\u5c31\u662f\u8981\u5c06\u4e00\u9897\u6811\u7684\u8fb9\u5206\u6210\u4e09\u68f5\u5b50\u6811\uff0c\u4f7f\u6bcf\u4e00\u9897\u5b50\u6811\u7684\u6743\u503c\u548c\u5927\u5c0f\u76f8\u7b49\uff0c\u8f93\u51fa\u8981\u65ad\u5f00\u7684\u8fb9\u7684\u7f16\u53f7\uff0c\u5982\u679c\u4e0d\u80fd\u6784\u9020\u51fa\u5408\u6cd5\u7684\u5b50\u6811\uff0c\u5c31\u8f93\u51fa-1\u3002\n\n**\u4e00\u53e5\u8bdd\u9898\u610f\uff1a\u4f7f\u62c6\u5206\u51fa\u7684\u4e09\u68f5\u5b50\u6811\u7684\u548c\u5206\u522b\u76f8\u7b49**\n\n\u90a3\u4e48\u7ecf\u8fc7\u6211\u4eec\u7684\u80e1\u4e71\u5206\u6790\uff08\u96fe\uff0c\u8fd9\u9898\u663e\u7136\u5c31\u662f\u4e00\u9053\u6811\u5f62\u52a8\u89c4~~\u6c34~~\u9898\u561b\uff08\u9003\n\n\u597d\uff0c\u638c\u63e1\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u6765\u770b\u4e00\u770b\u4ee3\u7801\u7684\u5b9e\u73b0\n\n\u5148\u5c06\u6574\u68f5\u6811\u8bfb\u5165\uff0c\u5728\u8bfb\u5165\u7684\u65f6\u5019\u6211\u4eec\u53d1\u73b0\uff0c\u6839\u636e\u9898\u610f\uff0c\u5728\u8fd9\u68f5\u6811\u4e2d\u4f1a\u6709\u4e00\u4e2a\u70b9\u4e0d\u5b58\u5728\uff0c\u90a3\u8fd9\u4e2a\u70b9\u5e94\u8be5\u5c31\u662f\u4ed6\u62ff\u7740\u7684\u90a3\u4e2a\u706f\u6ce1\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u5c06\u5176\u7406\u89e3\u4e3a\u6811\u7684\u6839\u8282\u70b9\uff08\u8111\u8865\u4e00\u4e0b\uff09\u3002\n\n\u8fd9\u65f6\u6211\u4eec\u7684\u57fa\u672c\u601d\u8def\u662f\uff1a\u6bcf\u4e2a\u8282\u70b9\u7684\u521d\u59cb\u503c\u4e3a\u706f\u6ce1\u4eae\u5ea6\uff0c\u4ece\u53f6\u5b50\u7ed3\u70b9\u5f00\u59cb\u5411\u4e0a\u8ba1\u7b97\uff0c\u5229\u7528\u6811\u7684\u4e00\u4e9b\u4f18\u7f8e\u6027\u8d28\uff0c\u6bcf\u6b21\u66f4\u65b0\u5176\u7236\u4eb2\u7ed3\u70b9\u7684\u6743\u503c\u5373\u4e3a\u5176\u672c\u8eab\u7684\u503c\u4e0e\u5176\u6240\u6709\u5b69\u5b50\u7684\u503c\uff0c\uff0c\u8fd9\u662f\u6211\u4eec\u53ef\u63a5\u53d7\u7684\uff0c\u8fd9\u65f6\u4e00\u65e6\u51fa\u73b0\u6709\u7b26\u5408\u6574\u68f5\u6811\u7684\u4e09\u5206\u4e4b\u4e00\u7684\u6811\u5c31\u5148\u628a\u4ed6\u5272\u4e0b\u6765\uff0c\u5b58\u50a8\u7b54\u6848\u548c\u7b54\u6848\u4e2a\u6570\uff0c\u5f53\u5272\u6210\u7684\u6811\u7684\u4e2a\u6570\u4e0d\u4e3a3\u65f6\u8bf4\u660e\u8fd9\u662f\u4e00\u6761\u94fe\uff0c\u53ea\u6709\u4e24\u90e8\u5206\uff08\u81ea\u5df1\u753b\u56fe\u4f53\u4f1a\u4e0b\uff09\u6240\u4ee5\u5f53cnt<=2\u65f6\u90fd\u4e0d\u7b26\u5408\u6761\u4ef6\n\n\n\u597d\u7684\uff0c\u4e0a\u4ee3\u7801\u30fd(\uffe3\u25bd\uffe3)\u0648\n```\n#include<iostream>\n#include<cstdlib>\n#include<cstdio>\n#include<cmath>\nusing namespace std;\nconst int maxn=1000010;\nint n,t[maxn],root,cnt,sum,ans[5];\nint ver[2*maxn],head[maxn*2],next[maxn*2],tem[maxn],tot;\nvoid add(int x,int y){\n\ttot++;\n\tver[tot]=y;\n\tnext[tot]=head[x];\n\thead[x]=tot;\n}\nvoid dfs(int x,int y){\n\ttem[x]=t[x];\n\tfor(int i=head[x];i;i=next[i]){\n\t\tint v=ver[i];\n\t\tif(v!=y){\n\t\t\tdfs(v,x);\n\t\t\ttem[x]+=tem[v];\n\t\t}\n\t}\n\tif(tem[x]==sum) ans[++cnt]=x,tem[x]=0;\n}\nint main(){\n\tint a;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++) {\n\t\tscanf(\"%d %d\",&a,&t[i]);\n\t\tif(a) add(a,i),add(i,a);\n\t\telse root=i;\n\t\tsum+=t[i];\n\t}\n\tif(sum%3){\n\t\tputs(\"-1\");\n\t\treturn 0;\n\t}\n\tsum/=3;\n\tdfs(root,0);\n\tif(cnt<=2) puts(\"-1\");\n\telse printf(\"%d %d\\n\",ans[1],ans[2]);\n\treturn 0;\n}\n```\n\u5176\u5b9e\u5199\u5b8c\u540e\u4f1a\u53d1\u73b0\u5b9e\u9645\u4e0a\u8fd9\u9053\u9898\u5e76\u6ca1\u6709\u4ec0\u4e48\u52a8\u89c4\u7684\u5473\u9053\uff0c\u66f4\u591a\u7684\u662f\u4e00\u79cd\u5de7\u5999\u7684\u60f3\u6cd5\uff0c\u4e0d\u8fc7\u56e0\u4e3a\u5b50\u6811\u548c\u95ee\u9898\u5e38\u5e38\u4ee5\u52a8\u89c4\u7684\u5f62\u5f0f\u51fa\u73b0\uff0c\u6240\u4ee5\u7a9d\u5c31\u5148\u8fd9\u4e48\u80e1\u4e71\u7684\u5206\u6790\u6210\u4e86\u6811p\uff0c\u5728\u5b9e\u73b0\u4ee3\u7801\u540e\u624d\u771f\u6b63\u7406\u89e3\uff08\u5927\u5bb6\u4e0d\u8981\u5411\u6211\u5b66\u4e60\uff09\n###### \u543c\u7684 \u5927\u5bb6\u4eca\u5929\u4e5f\u8981\u52a0\u6cb9\u9e2dQwQ",
        "postTime": 1533816423,
        "uid": 61185,
        "name": "maniac\uff01",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF767C \u3010Garland\u3011"
    },
    {
        "content": "## \u9898\u89e3\u7d22\u5f15\n1. **\u9898\u76ee\u5927\u610f**\n2. **Solution**\n3. **AC code**\n4. **\u7c7b\u4f3c\u9898\u578b**\n\n\u4ee3\u7801\u7c7b\u578b\uff1a C++\uff08cpp\uff09\n\n\u662f\u5426\u5438\u6c27\uff1a\u5426\n\n\u4e0d\u538b\u884c\u4ee3\u7801\u957f\u5ea6\uff1a44\n\n------------\n\n## \u9898\u76ee\u5927\u610f\n\u9898\u9762\uff1a [<\u4f20\u9001\u95e8>](https://www.luogu.com.cn/problem/CF767C)\n\n\u9898\u610f\uff1a\u7ed9\u68f5\u6709\u6839\u6811\uff0c\u6709\u70b9\u6743\uff0c\u6309\u6743\u4e09\u5206\u6b64\u6811\uff0c\u8f93\u51fa\u526a\u6389\u7684\u8fb9\u7684\u6307\u5411\u70b9\u3002\n\n~~\u672f\u8bed\u7406\u89e3\uff1a\u6811\u5f62 DP \u677f\u5b50\u9898\u3002~~\n\n## Solution\n\n~~\u867d\u7136\u662f\u6811\u5f62 DP\uff0c\u4f46\u65e0\u9650\u63a5\u8fd1\u4e8e\u66b4\u529b\uff01~~\n\n\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u6570\u7ec4 `treesum[]`\uff0c\u7528\u4e8e\u8bb0\u5f55\u6743\u503c\u548c\uff08`treesum[i]` \u8868\u793a\u4ee5\u8282\u70b9 $i$ \u4e3a\u6839\u7684\u5b50\u6811\u6743\u503c\u548c\uff09\u3002\n\n\u81f3\u4e8e\u600e\u4e48\u7b97\u2026\u2026\u8fd9\u5c31\u4e0d\u9700\u8981\u6211\u8bf4\u4e86\u5427\uff0c\u4e0e\u8ba1\u7b97\u5b50\u6811\u5927\u5c0f\u4e00\u6837\u2026\u2026\n\n\u73b0\u5728\u6211\u4eec\u8003\u8651\u4e0b\u5982\u4f55\u201c\u526a\u679d\u201d\u3002\u9996\u5148\uff0c\u6211\u4eec\u5982\u679c\u8981\u6309\u6743\u5206\u4e09\u4efd\uff0c\u90a3\u6211\u4eec\u4e00\u5b9a\u8981\u77e5\u9053\u5206\u5b8c\u540e\u6bcf\u68f5\u6811\u7684\u6743\u503c\u548c\u3002\u4e8e\u662f\uff0c\u6211\u4eec\u9700\u8981\u5728\u8bfb\u5165\u65f6\u7d2f\u52a0 $sum$\uff0c\u90a3\u4e48\u5206\u5b8c\u4e4b\u540e\u7684\u6bcf\u68f5\u6811\u6743\u503c\u548c\u5c31\u4e00\u5b9a\u662f $\\frac{3}{sum}$ \u4e86\uff08\u901a\u8fc7\u6b64\u5904\u53ef\u4ee5\u77e5\u9053\uff0c\u5982\u679c $sum\\bmod 3\\ne 0$ \u5219\u65e0\u89e3\uff09\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u526a\u5b8c\u540e\u7684\u6811\u4e00\u5b9a\u662f\u539f\u6765\u6811\u7684\u5b50\u6811\u3002\u66f4\u4e25\u8c28\u5730\u8bf4\uff0c\u5f53\u524d\u526a\u4e0b\u6765\u7684\u6811\u4e00\u5b9a\u662f\u526a\u4e4b\u524d\u7684\u6811\u7684\u5b50\u6811\uff08\u56e0\u4e3a\u4e00\u5200\u4e0d\u53ef\u80fd\u53ea\u526a\u4e2d\u95f4\u7684\u4e00\u6761\u94fe\uff09\u3002**\u6ce8\u610f\uff01\u526a\u6389\u4e00\u4e2a\u5b50\u6811\u540e\uff0c\u4e00\u5b9a\u8981\u51cf\u53bb\u5b83\u7684\u6743\u503c\uff01\u56e0\u4e3a\u5b83\u5df2\u7ecf\u4e0d\u5b58\u5728\u4e8e\u8fd9\u68f5\u6811\u4e86\uff01**\n\n\u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u5728\u6c42\u5b8c\u6743\u503c\u548c\u540e\u76f4\u63a5\u5224\u80fd\u4e0d\u80fd\u5206\u4e0d\u5c31\u884c\u4e86\uff1f\u5982\u679c\u526a\u7684\u6b21\u6570 $>2$ \uff08\u56e0\u4e3a\u4f1a\u526a\u4e09\u6b21\uff0c\u5224\u7684\u662f\u4e09\u5206\uff09\u5c31\u8f93\u51fa\uff0cCF \u81ea\u5e26 SPJ \uff0c\u5927\u80c6\u505a\u5c31\u884c\u3002\u5982\u679c\u526a\u7684\u6b21\u6570 $<2$ \u90a3\u6ca1\u529e\u6cd5\uff0c\u65e0\u89e3\uff0c\u8f93\u51fa $-1$ \u3002\n\n\u5565\uff1f\u4f60\u95ee\u6211\u4e3a\u5565\u662f\u6811\u5f62 DP\uff1f~~\u56e0\u4e3a\u9898\u76ee\u6807\u7b7e\u6709~~\n\n\u7ed9\u4f60\u65b9\u7a0b\uff08\u5176\u5b9e\u5c31\u662f\u8fd9\u4e2a\u9898\uff09\uff1a\n\n\u8bbe $T$ \u4e3a $i$ \u70b9\u7684\u513f\u5b50\u96c6\u5408\uff0c\u957f\u5ea6\u4e3a $n$ \u3002\n\n$$f_i=a_i+\\sum^n_{j=0}f_{T_j}$$\n\n\u5bf9\u4e8e\u4efb\u610f $f_{u_1},f_{u_2},f_{u_3}$ \uff0c\u82e5\u5b58\u5728 $f_{u_1}=f_{u_2}=f_{u_3}=\\frac{3}{sum}$\uff0c\u5219\u6709\u89e3\uff08\u524d\u63d0\u662f\u6bcf\u7b5b\u9009\u51fa\u4e00\u4e2a\u70b9 $x$ \u4f7f\u5f97 $f_x=\\frac{3}{sum}$ \u65f6\uff0c\u5176\u7236\u4eb2 $y$ \u8981 $f_y-f_x$\uff09\n\n## AC code\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\nusing namespace std;\nconst int MAXM=2e6+9,MAXN=1145140;\nstruct Edge{\n    int nxt,to;\n}edge[MAXM];\nint num_edge=0,head[MAXM];\nint sum=0,a[MAXN],root;\nint ans[5],num_ans=0;\nint treesum[MAXN];\nvoid add_edge(int from,int to){\n    edge[++num_edge]=(Edge){head[from],to};\n    head[from]=num_edge;\n}void dfs(int now,int fa){\n    treesum[now]=a[now];\n    for(int i=head[now];i;i=edge[i].nxt){\n        int to=edge[i].to;\n        if(to==fa)continue;\n        dfs(to,now);\n        treesum[now]+=treesum[to];\n    }if(treesum[now]==sum/3)ans[++num_ans]=now,treesum[now]=0;\n}int n;\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++){\n        int u;\n        scanf(\"%d %d\",&u,&a[i]);\n        if(u!=0){\n            add_edge(u,i);\n            add_edge(i,u);\n        }else root=i;\n        sum+=a[i];\n    }if(sum%3!=0){\n        printf(\"-1\\n\");\n        return 0;\n    }else{\n        dfs(root,0);\n        if(num_ans>2)printf(\"%d %d\",ans[1],ans[2]);\n        else printf(\"-1\\n\");\n    }\n    return 0;\n}\n```\n\nAC \u8bb0\u5f55 [<\u4f20\u9001\u95e8>](https://www.luogu.com.cn/record/56723406)\n\n## \u7c7b\u4f3c\u9898\u76ee\n\n\u6811\u5f62 DP [P2014 [CTSC1997]\u9009\u8bfe](https://www.luogu.com.cn/problem/P2014)\n\n",
        "postTime": 1629764823,
        "uid": 359422,
        "name": "\u65e0\u5495_",
        "ccfLevel": 4,
        "title": "CF767C Garland \u9898\u89e3"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u4e2a\u9898\u7684\u9898\u89e3\u5f88\u591a\u5427\uff1f\u601d\u8def\u4e5f\u5927\u6982\u5dee\u4e0d\u591a\u3002\u90a3\u6211\u8bf4\u4e00\u4e0b\u6211\u7684\u597d\u4e86\u3002\n\u540c\u65f6\uff0c\u672c\u6587\u4e5f\u53d1\u5728\u4e86\u6211\u7684cnblogs\u535a\u5ba2\u4e0a\uff0c\uff08\u4e0d\u8981\u4ee5\u4e3a\u6211\u662fcopy\u7684\uff09\n\n\u8003\u8651\u5b58\u5728\u8fd9\u4e48\u4e09\u4e2a\u5b50\u6811\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6811\u80af\u5b9a\u5c31\u80fd\u5206\u6210\u8fd9\u4e48\u4e09\u4e2a\u5b50\u6811\uff0c\u800c\u8fd9\u4e2a\u6811\u7684\u70b9\u6743\u4e4b\u548c\u80af\u5b9a\u80fd\u5e73\u5747\u5206\u6210\u4e09\u4e2a\u5b50\u6811\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6811\u7684\u70b9\u6743 mod 3 \u80af\u5b9a\u4e3a0.\n\n\u8fd9\u662f\u4e00\u4e2a\u663e\u7136\u7684\u526a\u679d\u3002\n\n\u8a00\u5f52\u6b63\u4f20\uff0c\u6211\u4eec\u6765\u8bf4\u8bf4\u6b63\u89e3\u3002\u9996\u5148\u8fd9\u4e2a\u9898\u7684\u89e3\u6cd5\u5f53\u7136\u662f\u6811\u5f62DP\u4e00\u8d2f\u7684\u89e3\u6cd5\uff1a\n\n# \u63a8\u3002\n\n### \u6211\u4eec\u4ece\u4e0b\u5f80\u4e0a\u66f4\u65b0\uff0c\u5c31\u53ef\u4ee5\u66f4\u65b0\u5230\u8fd9\u4e2a\u5b50\u6811\u4e86\u3002\u5982\u679c\u6211\u4eec\u4ece\u4e0b\u5f80\u4e0a\u83b7\u5f97\u4e86\u4e00\u4e2a\u5b50\u6811\uff0c\u5e76\u4e14\u8fd9\u4e2a\u5b50\u6811\u7684\u6743\u503c\u662f\u6811\u7684\u6743\u503c\u76841/3\uff0c\u90a3\u4e48\u663e\u7136\u8fd9\u4e2a\u5b50\u6811\u662f\u7b26\u5408\u6761\u4ef6\u7684\uff0c\u5207\u4e00\u5200\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u5b50\u6811\u3002\u4ee3\u7801\u4e2dcnt\u662f\u5207\u7684\u6b21\u6570\u3002\n\nksum\u8fd9\u4e2a\u6570\u7ec4\u5c31\u662f\u5b50\u6811\u7684\u5927\u5c0f\u3002\n\n\u90a3\u4e48\u672c\u9898\u7684\u89e3\u6cd5\u5df2\u7ecf\u5f88\u663e\u7136\u4e86\uff0c\u5c31\u90a3\u4e48\u904d\u5386\u5c31\u5b8c\u4e8b\u4e86\u3002\n\n\u4ee3\u7801\u6709\u6ce8\u91ca\uff0c\u65b9\u4fbf\u5404\u4f4d\u7406\u89e3\u3002\n\nC++\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#define LL long long\n#define maxn 1000001\nusing namespace std;\nstruct Edge{\n\tint nxt,to,from;\n}edge[maxn*2];//\u56e0\u4e3a\u8fd9\u662f\u4e2a\u6811 \nint num_edge,head[maxn],a[maxn],n,fa,total,sum,cnt,ans[maxn],ksum[maxn];\ninline int qread(){\n    char ch=getchar();\n    int f=1,x=0;\n    while(ch>'9'||ch<'0'){if(ch=='-') f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\ninline void addedge(int from,int to){ //\u52a0\u4e0afrom\u7684\u539f\u56e0\u662f\u6211\u4eec\u8981\u8f93\u51fa\u4ed6\u7684from \n\tedge[++num_edge].nxt=head[from];\n\tedge[num_edge].from=from;\n\tedge[num_edge].to=to;\n\thead[from]=num_edge;\n} \nint dfs(int x,int fath){\n\tksum[x]=a[x];\n\tfor(int i=head[x];i;i=edge[i].nxt){//\u627e\u7956\u5148 \n\t\tint y=edge[i].to;\n\t\tif(y!=fath){\n\t\t\tdfs(y,x);\n\t\t\tksum[x]+=ksum[y];\n\t\t}\n\t}\n\tif(ksum[x]==sum){ //\u5f53\u6ee1\u8db3\u4e86\u4e4b\u540e \n\t\tcnt++;\n\t\tans[cnt]=x;\n\t\tksum[x]=0;\n\t}\n}\nint main(){\n\tn=qread();//\u5feb\u8bfb\uff0c\u5426\u5219\u7684\u8bdd\u5927\u6570\u636e\u5361\u6b7b \n\tfor(int i=1;i<=n;i++){\n\t\tint x;\n\t\tx=qread();\n\t\ta[i]=qread();\n\t\tif(x!=0) {\n\t\t\taddedge(i,x);\n\t\t\taddedge(x,i);\n\t\t}\n\t\telse fa=i;\n\t\ttotal+=a[i];\n\t}\n\tif(total%3!=0) printf(\"-1\\n\");\n\telse{\n\t\tsum=total/3;\n\t\tdfs(fa,0);\n\t\tif(cnt>=3) printf(\"%d %d\\n\",ans[2],ans[1]);\n\t\telse printf(\"-1\\n\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1548689769,
        "uid": 58424,
        "name": "kenlig",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF767C \u3010Garland\u3011"
    },
    {
        "content": "\u9996\u5148\u53ef\u4ee5\u786e\u5b9a\u7684\u662f\uff0c\u5982\u679c\u70b9\u6743\u548c\u4e0d\u4e3a3\u7684\u500d\u6570\uff0c\u4e00\u5b9a\u4e0d\u5b58\u5728\u5408\u6cd5\u65b9\u6848\u3002\n\n\u8bb0\u6240\u6709\u70b9\u6743\u548c\u4e3a$sum$\u3002\n\n\u5bb9\u6613\u60f3\u5230\uff0c\u4ee4 $dp[u]$ \u8868\u793a\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\u7684\u70b9\u6743\u548c \uff0c \u5219\u6709\u8f6c\u79fb\uff1a\n\n$$dp[u]=a[u]+\\sum_{v \\in son_u}dp[v]$$\n\n\u7136\u540e\u5bf9\u4e8e\u70b9 $u$ , \u6709\u4e00\u4e2a\u513f\u5b50 $v$ \u4f7f\u5f97 $dp[v]=\\frac{sum}{3}$,\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5c06 $v$ \u5207\u5f00\uff0c\u7136\u540e $dp[u]=dp[u]-dp[v]$ \u3002\n\n\u6700\u540e\u770b\u662f\u5426\u6709\u4e24\u4e2a\u5207\u70b9\u5373\u53ef\u3002\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <iostream>\nusing namespace std;\n\nconst int MAXN = 1000000;\nint n , root , sum , a[ MAXN + 5 ] , dp[ MAXN + 5 ];\nint v1 , v2;\nvector< int > Graph[ MAXN + 5 ]; \n\nvoid dfs( int u , int fa ) {\n\tdp[ u ] = a[ u ];\n\tfor( int i = 0 ; i < Graph[ u ].size( ) ; i ++ ) {\n\t\tint v = Graph[ u ][ i ];\n\t\tif( v == fa ) continue;\n\t\tdfs( v , u ); dp[ u ] += dp[ v ]; \n\t\t\n\t\tif( dp[ v ] == sum / 3 ) {\n\t\t\tif( !v1 ) v1 = v;\n\t\t\telse if( !v2 ) v2 = v;\n\t\t\tdp[ u ] -= dp[ v ];\n\t\t} \n\t} \n}\n\nint main( ) {\n\tscanf(\"%d\",&n);\n\tfor( int i = 1 , v ; i <= n ; i ++ ) {\n\t\tscanf(\"%d %d\",&v,&a[ i ]); sum += a[ i ];\n\t\tif( !v ) root = i;\n\t\telse {\n\t\t\tGraph[ i ].push_back( v );\n\t\t\tGraph[ v ].push_back( i );\n\t\t}\n\t}\n\tif( sum % 3 ) {\n\t\tprintf(\"-1\");\n\t\treturn 0;\n\t}\n\t\n\tdfs( root , 0 );\n\tif( !v1 || !v2 ) \n\t\tprintf(\"-1\");\n\telse \n\t\tprintf(\"%d %d\\n\",v1,v2);\n\treturn 0;\n}\n```\n",
        "postTime": 1577940897,
        "uid": 123802,
        "name": "chihik",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF767C \u3010Garland\u3011"
    },
    {
        "content": "### 0.\u9898\u76ee\u94fe\u63a5\n\n[Luogu_CF767C](https://www.luogu.com.cn/problem/CF767C)\n\n### 1.\u7ffb\u8bd1\n\u8fd9\u4e2a\u7ffb\u8bd1\u4e5f\u592a\u7b80\u7565\u4e86\u5427\uff0c\u7b80\u76f4\u5c31\u662f\u4ec0\u4e48\u90fd\u6ca1\u8bf4\uff08~~\u5bf9\u4e8e\u6211\u849f\u84bb\u6765\u7f29~~\uff09\n\n\u4e0d\u8fc7\u5927\u4f6c\u4eec\u4e00\u5b9a\u80fd\u4ece\u6837\u4f8b\u91cc\u770b\u51fa\u6765\uff0c\u7b2ci\u884c\u7684\u7b2c\u4e00\u4e2a\u6570\u5b57\u4e3a\u7236\u4eb2\uff0c\u7b2c\u4e8c\u4e2a\u6570\u5b57\u4e3a\u6743\u503c\uff0c\u7236\u4eb2\u4e3a0\u7684\u70b9\u4e3a\u6839\u8282\u70b9\n\n### 2.\u601d\u8def\n\n\u8fd9\u9898\u662f\u542cLYD\u8001\u5e08\u8bb2\u7684\uff0c\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u57fa\u672c\u7684\u6811\u4e0aDP\u6c42\u5b50\u6811\u91cd\u91cf+\u8d2a\u5fc3\n\n\u4e00\u4e2a\u9898\u773c\u5728\u4e8e\uff1a\u65e2\u7136\u8981\u5206\u4e3a\u4e09\u4efd\uff0c\u5219\u6bcf\u4e00\u4efd\u5747\u4e3asum/3\n\n\u82e5sum%3!=0\u5219\u53ef\u7acb\u5373\u8f93\u51fa-1\n\n\u5373\uff0c\u4ece\u53f6\u5230\u6839DP\u6c42\u91cd\u91cf\uff0c\u6bcf\u4e00\u5230sum/3\u65f6\uff0c\u5c31\u7acb\u5373\u6807\u8bb0\u5e76\u8ba1\u6570\uff0c\n\n\u540c\u65f6\u628a\u8be5\u5b50\u6811\u201c\u526a\u6389\u201d\uff0c\u5373\u628a\u91cd\u91cf\u5f52\u96f6\n\n\u6700\u540e\u5224\u65ad\u4e00\u4e0b\u526a\u4e86\u51e0\u6b21\uff0c\u82e5\u5927\u4e8e\u7b49\u4e8e3\uff0c\u5373\u53ef\u5747\u5206\u3002\n\n### 3.\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<stdio.h>\n\n#define MAXN 1000000\nusing namespace std;\n\nint n;\n\nint cnt;\nint ans[4];\t\t\t//\u7b54\u6848\u76f8\u5173 \n\nlong long sum;\nint val[MAXN+10];\t//\u5404\u70b9\u6743\u503c \n\n\nstruct ed{\n\tint nxt,to;\n}edge[MAXN*2+10];\n\nint edge_cnt=0;\nint head[MAXN+10];\nint weight[MAXN+10];\n\nvoid add(int ff,int tt){\n\tedge_cnt++;\n\tedge[edge_cnt].to=tt;\n\tedge[edge_cnt].nxt=head[ff];\n\thead[ff]=edge_cnt;\n}\t\t\t\t\t\t\t\t//\u90bb\u63a5\u94fe\u8868\u4e0d\u89e3\u91ca \n\nvoid get(int s,int fa){\n\tweight[s]=val[s];\n\tfor(int i=head[s];i;i=edge[i].nxt){\n\t\tint e=edge[i].to;\n\t\tif(e==fa){\n\t\t\tcontinue;\n\t\t}\n\t\tget(e,s);\n\t\tweight[s]+=weight[e];\n\t}\n\tif(weight[s]==sum){\n\t\tans[cnt++]=s;weight[s]=0;\n\t}\n}\t\t\t\t\t\t\t\t//DP\u6c42\u91cd\u91cf \n\nint main(){\n\tint root;\n\tscanf(\"%d\",&n);\n\tfor(int a,i=1;i<=n;i++){\n\t\tscanf(\"%d %d\",&a,&val[i]);\n\t\tsum+=val[i];\n\t\tif(a)add(i,a),add(a,i);\n\t\telse root=i;\t\t\t//\u6c42\u6839\uff0c\u6839\u4e0d\u4e00\u5b9a\u4e3a1 \n\t}\t\n\tif(sum%3){\t\t\t\t\t//\u63d0\u524d\u5224\u65ad \n\t\tprintf(\"-1\\n\");\n\t\treturn 0;\n\t}\t\n\tsum/=3;\t\t\t\t\t\t//sum\u5373\u4e3a\u5e94\u5f97\u7684\u91cd\u91cf \n\tget(root,0);\n\tif(cnt>=3){\n\t\tprintf(\"%d %d\\n\",ans[0],ans[1]);\n\t\treturn 0;\n\t}\n\tprintf(\"-1\\n\");\n\treturn 0;\t\t\t\t\t//\u543c\u4e60\u60ef\u554a \n}\t\n```\n\n",
        "postTime": 1579266689,
        "uid": 112898,
        "name": "\u5fa1\u524d\u5e26\u5200\u4f8d\u536b",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF767C \u3010Garland\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u6211\u662f\u770b\u7740\u7ffb\u8bd1\u505a\u7684\uff0c\u611f\u89c9\u4e0d\u662f\u5f88\u96be\uff0c\u5f88\u666e\u901a\u7684\u4e00\u4e2a\u6811\u5f62dp\n\n**\u9898\u76ee\u5927\u610f\uff1a**\n\n\u5728\u4e00\u68f5\u6811\u4e0a\u5206\u79bb\u51fa\u4e09\u4e2a\u5b50\u6811\uff0c\u4f7f\u8fd9\u4e09\u4e2a\u5b50\u6811\u7684\u70b9\u6743\u548c\u76f8\u7b49\u3002\n\n\u660e\u786e\u9898\u76ee\u610f\u601d\u8fd9\u4e2a\u9898\u5c31\u7b80\u5355\u591a\u4e86\u5427\u3002\n\n\u6211\u4eec\u4f1a\u53d1\u73b0\u6bcf\u4e00\u68f5\u5b50\u6811\u7684\u70b9\u6743\u662f\u56fa\u5b9a\u7684\uff0c\u56e0\u4e3a\u70b9\u6743\u603b\u548c\u56fa\u5b9a\uff0c\u8bbe\u6bcf\u4e00\u90e8\u5206\u7684\u5927\u5c0f\u4e3aW\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u4ece\u4e0b\u5f80\u4e0a\u66f4\u65b0\uff08**\u56e0\u4e3a\u6811\u5f62dp\u7684\u57fa\u672c\u505a\u6cd5\u5c31\u662f\u4ece\u4e0b\u5411\u4e0a\u66f4\u65b0\uff0c\u7528\u513f\u5b50\u66f4\u65b0\u7238\u7238**\uff09\uff0c\u9047\u5230\u7b49\u4e8eW\u7684\u5b50\u6811\u5c31\u5207\u4e00\u5200\uff0csz\u91cd\u7f6e\u62100\uff0c\u8fd9\u5c31\u53ef\u4ee5\u4e00\u8fb9\u904d\u5386\u5b50\u6811\uff0c\u4e00\u8fb9\u7b97sz.\n\n\u526a\u679d\uff08\u989d\u3002\u3002\u597d\u50cf\u4e0d\u80fd\u53eb\u526a\u679d\uff09\u4e5f\u633a\u5bb9\u6613\u60f3\uff0c\u5982\u679c\u70b9\u6743\u603b\u548c\u4e0d\u662f3\u7684\u500d\u6570\uff0c\u90a3\u4e48\u80af\u5b9a\u4e0d\u884c\uff08\u5206\u4e0d\u51fa\u4e09\u4e2a\u76f8\u7b49\uff09\n\n\u8fd9\u9898\u7ec6\u8282\u633a\u591a\u7684\uff0c\u9700\u8981\u6ce8\u610f\u4e00\u6761\u94fe\u7684\u60c5\u51b5\u548c\u548c\u662f\u4e09\u7684\u500d\u6570\u4f46\u4e0d\u80fd\u5206\u6210\u51e0\u4e2a\u76f8\u7b49\u7684\u90e8\u5206\u7684\u60c5\u51b5\u3002\n\n\u6700\u540e\u7684\u90a3\u4e2a\u5730\u65b9$cnt >= 3$\u5c31\u662f\u60f3,\u5982\u679c\u5206\u6210\u4e86\u5927\u4e8e\u7b49\u4e8e3\u4e2a\u5b50\u6811\uff0c\u5c31\u76f4\u63a5\u8f93\u51fa\u4e24\u4e2a\u5c31\u884c\u4e86\uff0c\u5426\u5219\u7684\u8bdd\u5c31\u8f93\u51fa-1\uff0c\u8bc1\u660e\u6211\u4eec\u6700\u591a\u53ea\u80fd\u627e\u5230\u4e24\u4e2a\u5b50\u6811\u6743\u503c\u662f\u6574\u68f5\u6811\u7684 $\\frac{1}{3}$\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nconst int maxn = 1000100;\n\ninline int read(){\n\tchar ch = getchar();\n\tint f = 1 , x = 0;\n\twhile(ch > '9' || ch < '0'){if(ch == '-') f = -1; ch = getchar();}\n\twhile(ch >= '0' && ch <= '9'){x = x * 10 + ch - '0';ch = getchar();}\n\treturn x * f;\n}\n\nint w[maxn],x,y;\nint head[maxn],tot;\nstruct Edge{\n\tint from,to,val,next;\n}edge[maxn<<1];\nint n,root,sum,sz[maxn],cnt,ans[10];\n\nvoid add(int u,int v){\n\tedge[++tot].from = u;\n\tedge[tot].to = v;\n\tedge[tot].next = head[u];\n\thead[u] = tot;\n}\n\nint dfs(int x,int fa){\n\tsz[x] = w[x];\n\tfor(int i=head[x];i;i=edge[i].next){\n\t\tint v = edge[i].to;\n\t\tif(v != fa){\n\t\t\tdfs(v , x);\n\t\t\tsz[x] += sz[v];\n\t\t}\n\t}\n\tif(sz[x] == sum){\n\t   ans[++cnt] = x;\n\t   sz[x] = 0;\n\t}\n}\n\nint main(){\n\tn = read();\n\tfor(int i=1;i<=n;i++){\n\t\tx = read(); y = read();\n\t\tif(x != 0)  add(i , x), add(x , i);\n\t\telse root = i;\n\t\tw[i] = y;\n\t\tsum += y;\n\t}\n\tif(sum % 3 != 0)  printf(\"-1\\n\");\n\telse {\n\t\tsum /= 3;\n\t\tdfs(root , 0);\n\t\tif(cnt >= 3)  printf(\"%d %d\\n\",ans[2],ans[1]);\n\t\telse printf(\"-1\\n\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1540283544,
        "uid": 54635,
        "name": "Kevin_F",
        "ccfLevel": 0,
        "title": "\u3010CF767C\u3011Garland"
    },
    {
        "content": "\u4e00\u9053\u60f3\u4e00\u4e0b\u5c31\u5927\u6982\u77e5\u9053\u600e\u4e48\u505a\u7684\u9898\u3002\n\n## \u9898\u610f\u7b80\u8ff0\n\n\u7ed9\u5b9a\u4e00\u9897\u6709\u6839\u70b9\u5e26\u6743\u7684\u6811\uff0c\u6c42\u4e24\u4e2a\u8282\u70b9 $v_1$\uff0c$v_2$\uff0c\u4f7f\u6811\u5220\u9664 $(u_1,v_1)$ \u548c $(u_2,v_2)$ \u8fd9\u4e24\u6761\u8fb9\u540e\uff0c\u6811\u88ab\u5206\u6210\u4e09\u4e2a\u6743\u503c\u76f8\u7b49\u7684\u5b50\u6811\uff08$u_1$ \u548c $u_2$ \u7684\u6df1\u5ea6\u5206\u522b\u6bd4 $v_1$ \u548c $v_2$ \u7684\u6df1\u5ea6\u5c0f\uff09\u3002\n\n## \u601d\u8def\n\n\u6211\u770b\u5230\u8fd9\u9898\u65f6\uff0c\u60f3\u4e86\u4e00\u4f1a\uff0c\u5c31\u60f3\u5230\u4e86\u4e00\u4e2a\u6bd4\u8f83\u66b4\u529b\u7684\u601d\u8def\u3002\n\n\u904d\u5386\u4e00\u904d\u6811\uff0c\u5f53\u4ee5\u5f53\u524d\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u7684\u6743\u503c\u548c\u7684\u4e09\u500d\u662f\u6811\u7684\u603b\u6743\u503c\u65f6\uff0c\u8bb0\u5f55\u4e0b\u8fd9\u4e2a\u8282\u70b9\uff0c\u7136\u540e $O(n^2)$ \u904d\u5386\u8bb0\u5f55\u7684\u8282\u70b9\uff0c\u6c42\u51fa\u4e24\u4e2a\u5408\u9002\u7684\u8282\u70b9\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2)$\u3002\u8fd9\u89e3\u6cd5\u5728 #28 TLE \u4e86\u3002\n\n\u7136\u540e\u6211\u8bd5\u7740\u5728\u904d\u5386\u7684\u65f6\u5019\u5c31\u76f4\u63a5\u8f93\u51fa\u3002\u56e0\u4e3a\u6240\u6c42\u7684\u4e24\u4e2a\u8282\u70b9\u7684\u53d6\u6cd5\u53ea\u6709\u4e24\u79cd\u53ef\u80fd\uff1a\n\n- \u5728\u540c\u4e00\u9897\u5b50\u6811\u5185\uff0c\u5373\u4e24\u4e2a\u70b9\u7684 LCA \u662f\u4ed6\u4eec\u5176\u4e2d\u4e00\u4e2a\u70b9\u3002\n\n- \u5728\u4e00\u4e2a\u8282\u70b9\u7684\u4e24\u9897\u5b50\u6811\u5185\u3002\n\n\u7136\u540e\u6211\u5728 #8 WA \u4e86\uff0c\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u3002\n\n\u7136\u540e\u5c31\u7784\u4e86\u4e00\u773c\u9898\u89e3\uff0c\u5c31\u61c2\u4e86\u8fd9\u4e2a\u89e3\u6cd5\u3002\n\n\u904d\u5386\u8fd9\u68f5\u6811\uff0c\u5f53\u4ee5\u5f53\u524d\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u7684\u4e09\u500d\u662f\u603b\u6743\u503c\u65f6\uff0c\u8bb0\u5f55\u8fd9\u4e2a\u70b9\uff0c**\u5e76\u628a\u8fd9\u4e2a\u5b50\u6811\u4ece\u6811\u79cd\u5207\u6389**\u3002\n\n\u7136\u540e\u5c31\u6709\u4e00\u4e2a\u6027\u8d28\uff1a\u5f53\u904d\u5386\u5b8c\u540e\uff0c\u5982\u679c\u8bb0\u5f55\u4e86\u8d85\u8fc7 $3$ \u4e2a\u8282\u70b9\uff0c\u90a3\u4e48\u5c31\u8bf4\u660e\u5fc5\u5b9a\u6709\u89e3\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u76ee\u524d\u6070\u597d\u8bb0\u5f55\u4e86 $3$ \u4e2a\u8282\u70b9\uff0c\u90a3\u4e48\u5176\u4e2d\u4efb\u610f\u4e24\u4e2a\u8282\u70b9\u90fd\u662f\u89e3\uff0c\u76f4\u63a5\u8f93\u51fa\u5373\u53ef\u3002\n\n\u518d\u8bf4\u4e5f\u6ca1\u4ec0\u4e48\u610f\u601d\u4e86\uff0c\u81ea\u5df1\u60f3\u60f3\u5427\u3002\n\n\u904d\u5386\u5b8c\u540e\u8bb0\u5f55\u7684\u8282\u70b9\u5c0f\u4e8e\u7b49\u4e8e $3$\uff0c\u90a3\u4e48\u5c31\u662f\u65e0\u89e3\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$\u3002\n\n## \u4ee3\u7801\n\n```\n#include<bits/stdc++.h>\n\n#define ll long long\n#define y1 caibictq\n#define P pair<int, int>\n#define fi first\n#define se second\n\nusing namespace std;\n\nconst int MAXN = 2000010;\nconst int MAXM = 100010;\nconst int mod = 1e9 + 7;\nconst int INF = 0x3f3f3f3f;\n\nint n, m, k;\nint sum, v, rt, ok;\nint tot, cnt, ans;\n\nint read() {\n\tint f = 1, s = 0;\n\tchar ch = getchar();\n\twhile ('0' > ch || ch > '9') {if (ch == '-') f = -1; ch = getchar();}\n\twhile ('0' <= ch && ch <= '9') {s = (s << 1) + (s << 3) + ((int)ch ^ 48); ch = getchar();}\n\treturn s * f;\n}\n\nint a[MAXN], head[MAXN];\n\nvector<int> ver;\n\nstruct edge {\n\tint to, next;\n}e[MAXN << 1];\n\nvoid add_edge(int x, int y) {\n\te[++tot].next = head[x];\n\te[tot].to = y;\n\thead[x] = tot;\n\treturn;\n}\n\nstring s;\n\nint dfs(int x, int fa) {\n\tint tmp = a[x];\n\tfor (int i = head[x]; i; i = e[i].next) {\n\t\tint y = e[i].to;\n\t\tif (y == fa) continue;\n\t\ttmp += dfs(y, x);\n\t}\n\tif (tmp * 3 == sum) {\n\t\tver.push_back(x);\n\t\ttmp = 0;\n\t}\n\tif (ver.size() == 3) {\n\t\tfor (int i = 0; i < ver.size() - 1; i++) {\n\t\t\tprintf(\"%d \", ver[i]);\n\t\t}\n\t\tputs(\"\"); exit(0);\n\t}\n\treturn tmp;\n}\n\nint main() {\n\tint T;\n\tscanf(\"%d\", &n);\n\tfor (int i = 1, fa; i <= n; i++) {\n\t\tscanf(\"%d%d\", &fa, &a[i]);\n\t\tsum += a[i];\n\t\tadd_edge(i, fa); add_edge(fa, i);\n\t\tif (!fa) rt = i;\n\t}\n\tdfs(rt, 0);\n\tputs(\"-1\");\n\treturn 0;\n}\n\n/*\n6\n2 4\n0 -1\n4 2\n2 3\n1 2\n4 5\n*/ \n```\n\n\n",
        "postTime": 1599875400,
        "uid": 18673,
        "name": "ctq1999",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF767C Garland"
    },
    {
        "content": "### Part.1\n\n\u4e00\u5f00\u59cb\u5b8c\u5168\u6ca1\u6709\u601d\u8def,\u60f3\u4e86\u4e00\u4e0b\uff0c\u5982\u679c\u662f\u5206\u6210\u4e24\u68f5\u6811\uff0c\u90a3\u5c31\u597d\u505a\u591a\u4e86\uff0c\u9996\u5148\u60f3\u5230\u7684\u662f\u7edf\u8ba1\u4e00\u4e0b\u4ee5\u5f53\u524d\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u7684\u6743\u503c\u548c\uff0c\u5982\u679c\u548c\u4e3a$sum\\times\\frac{1}{2}$\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u627e\u5230\u4e86\u4e00\u4e2a\u89e3\u3002\u8003\u8651\u6211\u4eec\u4e5f\u7c7b\u4f3c\u5730\u8bb0\u5f55\u4e00\u4e2a$siz$\u8868\u793a\u4ee5\u5f53\u524d\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u7684\u6743\u503c\u548c\uff0c\u53ea\u8981\u4e3a$sum\\times\\frac{1}{3}$\uff0c\u5b83\u5c31\u53ef\u80fd\u662f\u89e3\u7684\u4e00\u4e2a\u3002\n\n### Part.2\n\n\u6211\u4eec\u5728\u4e00\u904d$dfs$\u540e\u53ef\u4ee5\u627e\u51fa\u53ef\u80fd\u5f88\u591a\u662f$sum\\times\\frac{1}{3}$\u7684\u89e3\uff0c\u90a3\u4e48\u6211\u4eec\u5e94\u8be5\u600e\u4e48\u9009\u62e9\u5462\uff1f\u5f88\u5bb9\u6613\u60f3\u5230\uff0c\u6211\u4eec\u5e94\u8be5\u627e\u5230$LCA$\u4e0d\u540c\u7684\u4e24\u4e2a\u70b9\uff0c\u6211\u4eec\u5c31\u627e\u5230\u4e86\u4e00\u7ec4\u89e3\u3002\n\n### Part.3\n\n\u4e0a\u8ff0\u89e3\u6cd5\u5b9e\u9645\u4e0a\u662f\u5b58\u5728\u95ee\u9898\u7684\uff08~~\u60f3\u4e00\u60f3\uff0c\u4e3a\u4ec0\u4e48~~\uff09\n\n\u6211\u4eec\u8003\u8651\u7c7b\u4f3c\u4e0b\u9762\u7684\u4e00\u68f5\u6811\uff1a\n\n![luoguCF767C\u56fe.png](https://i.loli.net/2020/06/06/AbLO9F7wlznCeuf.png)\n\n\u5f88\u663e\u7136\u8fd9\u68f5\u6811\u4e0a\u5b50\u6811\u6743\u503c\u548c\u4e3a$sum\\times\\frac{1}{3}$\u53ea\u6709\u4e09\u53f7\u8282\u70b9\uff0c\u4f46\u6211\u4eec\u80fd\u4e0d\u80fd\u628a\u4ed6\u5206\u6210\u4e09\u68f5\u6811\u5462\uff1f\u5f88\u663e\u7136\u662f\u53ef\u4ee5\u7684\uff08\u6bcf\u4e2a\u8282\u70b9\u90fd\u5206\u6210\u4e00\u68f5\u6811\uff09\uff0c\u6211\u4eec\u7684\u89e3\u6cd5\u5e94\u8fdb\u4e00\u6b65\u8003\u8651\u3002\u8003\u8651\u4e8c\u53f7\u8282\u70b9\uff0c\u5b83\u7684\u6743\u503c\u548c\u662f$sum\\times\\frac{2}{3}$\uff0c\u90a3\u6211\u4eec\u600e\u4e48\u5904\u7406\u5462\uff1f\u96be\u9053\u8981\u628a\u6240\u6709\u7684$sum\\times\\frac{1}{3}$\u4e0e$sum\\times\\frac{2}{3}$\u7b97\u51fa\u6765\uff0c\u7136\u540e\u518d\u4e00\u4e00\u5339\u914d\u5417\uff1f\n\n\u6211\u4eec\u8003\u8651\u53e6\u4e00\u79cd\u89e3\u6cd5\u3002$dfs$\u7684\u7279\u70b9\u662f\u8981\u5728\u5904\u7406\u5b8c\u513f\u5b50\u540e\u624d\u4f1a\u5904\u7406\u5f53\u524d\u8282\u70b9\uff0c\u8003\u8651\u513f\u5b50\u4e2d\u6709\u4e00\u4e2a$sum\\times\\frac{1}{3}$\uff0c\u5982\u679c\u6211\u4eec\u5427\u513f\u5b50\u7684$sum\\times\\frac{1}{3}$\u53d8\u6210$0$\uff0c\u90a3\u4e48\u5b83\u81ea\u8eab\u4e5f\u53d8\u6210\u4e86$sum\\times\\frac{1}{3}$\uff0c\u6211\u4eec\u6b64\u65f6\u53ea\u7528\u4e00\u4e2a\u6570\u7ec4\u7edf\u8ba1\u4e3a$sum\\times\\frac{1}{3}$\u7684\u8282\u70b9\u5c31ok\u4e86\uff0c\u90a3\u4e48\u5982\u679c\u6709\u4e24\u4e2a\u513f\u5b50\u90fd\u662f$sum\\times\\frac{1}{3}$\u5462\uff1f\u6211\u4eec\u4e00\u5b9a\u4f1a\u5148\u5904\u7406\u513f\u5b50\uff0c\u90a3\u4e48\u513f\u5b50\u90fd\u88ab\u7edf\u8ba1\u4e86\uff0c\u81ea\u7136\u5c31\u627e\u5230\u7b54\u6848\u4e86\u3002\n\n\u6211\u4eec\u53ea\u7528\u8f93\u51fa\u627e\u5230\u7684\u524d\u4e24\u4e2a\u7b54\u6848\u5373\u53ef\u3002\uff08\u8fd9\u4e24\u4e2a\u7b54\u6848\u4e00\u5b9a\u662f\u6211\u4eec\u4e0a\u8ff0\u63d0\u5230\u7684\u4e24\u79cd\u5173\u7cfb\uff09\n\n\u6700\u540e\u5949\u4e0a\u9ad8\u6e05~~\u65e0\u7801~~\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <iostream>\nusing namespace std;\nconst int maxn=1e6+5;\n\nstruct edge\n{\n    int v,nxt;\n}e[maxn<<1];\nint head[maxn],kt;\nint t[maxn],rt,n;\nint ans[10],tot;\nint sum;\ntemplate<typename T>\ninline void read(T &x)\n{\n    char c;int f=1;\n    while(!isdigit(c=getchar())) (c=='-')&&(f=-1);\n    x=c^48;\n    while(isdigit(c=getchar())) x=(x<<1)+(x<<3)+(c^48);\n    x*=f;\n}\n\ninline void add(int u,int v) {e[++kt]=(edge){v,head[u]};head[u]=kt;}\n\nvoid dfs(int u,int f)\n{\n    for(int i=head[u];i;i=e[i].nxt)\n    if(e[i].v!=f)\n    {\n        dfs(e[i].v,u);\n        t[u]+=t[e[i].v]; \n    }\n    if(t[u]==sum/3)\n        ans[++tot]=u,t[u]=0;\n}\n\nint main()\n{\n    int x;\n    read(n);\n    for(int i=1;i<=n;i++)\n    {\n        read(x);read(t[i]);\n        sum+=t[i];\n        if(x) add(x,i),add(i,x);\n        else rt=i;\n    }\n    if(sum%3)\n    {\n        puts(\"-1\");\n        return 0;\n    }\n    dfs(rt,0);\n    if(tot<=2) puts(\"-1\");\n    else printf(\"%d %d\\n\",ans[1],ans[2]);\n    return 0;\n}\n```",
        "postTime": 1591434097,
        "uid": 199750,
        "name": "\u8bd5\u8bd5\u4e8b\u5b9e\u4e0a\u5417",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF767C \u3010Garland\u3011"
    },
    {
        "content": "\u4e3a\u5565\u6240\u6709\u9898\u89e3\u90fd\u5efa\u7684\u65e0\u5411\u56fe\uff0c\u597d\u602a\u54e6\u3002\n\n\u8fd9\u9053\u9898\u7684\u505a\u6cd5\u6709\u70b9\u5947\u602a\uff0c\u9700\u8981\u5206\u6790(luan gao)\u4e00\u4e0b\n\n\u628a\u8fd9\u68f5\u6811\u6743\u503c\u5206\u6210\u4e09\u4e2a\uff0c\u5f88\u663e\u7136\u9700\u8981\u5bf9\u6811\u4e0a\u70b9\u7684\u6743\u503c\u548c\u6765\u5224\u65ad\uff0c\u5982\u679c\u4e0d\u662f\u500d\u6570\u5c31\u8981\u8f93\u51fa$-1$\n\n\u7136\u540e\u6211\u4eec\u5c31\u7528$dfs$\u6c42\u503c\u6765\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u7684\u5b50\u6811\uff0c\u6c42\u5b50\u6811\u7684\u5927\u5c0f\u76f8\u4fe1\u5927\u5bb6\u90fd\u4f1a\uff0c\u4e0d\u8fc7\u6211\u4eec\u8fd8\u662f\u8981\u6765\u4e00\u4e2a\u5904\u7406\uff0c\u5c31\u662f\u8fd9\u4e2a\u5b50\u6811\u5982\u679c\u6ee1\u8db3\u7684\u5427\uff0c\u6211\u4eec\u5f97\u628a\u8fd9\u4e2a\u5b50\u6811\u5927\u5c0f\u770b\u505a$0$\u4e0a\u4f20\uff0c\u4e0d\u7136\u540e\u9762\u5c31\u5f88\u9ebb\u70e6\n\n\u6211\u4eec\u628a\u7b26\u5408\u6761\u4ef6\u7684\u70b9\u653e\u8fdb\u4e00\u4e2a\u6570\u7ec4\u91cc\u9762\uff0c\u4e0d\u96be\u53d1\u73b0\u7531\u4e8e\u6211\u4eec\u5904\u7406\u4e86\u540e\u8fd9\u4e9b\u70b9\u9009\u4e0d\u9009\u90fd\u4e92\u4e0d\u5e72\u6270\uff0c\u6240\u4ee5\u6211\u4eec\u627e\u4e24\u4e2a\u51fa\u6765\u5c31\u884c\u4e86\u3002\n\n```cpp\n#include<touwenjian.h>\n\nusing namespace std;\n\nconst int maxn=1001000;\n\nstruct edge{\n\tint next,to;\n}e[maxn];\n\nint head[maxn],size,n,a[maxn],m,tot;\nint ind[maxn],st,sz[maxn];\nint p[maxn],c;\n\ninline void addedge(int next,int to)\n{\n\te[++size].to=to;\n\te[size].next=head[next];\n\thead[next]=size;\n}\n\nvoid dfs(int t)\n{\n\tint i,j;\n\tsz[t]=a[t];\n\tfor(i=head[t];i;i=e[i].next)\n\t{\n\t\tj=e[i].to;\n\t\tdfs(j);\n\t\tsz[t]+=sz[j];\n\t}\n\tif(sz[t]==tot/3) p[++c]=t,sz[t]=0;\n}\n\nint main()\n{\n\tios::sync_with_stdio(false);\n\tregister int i;\n\tcin>>n;\n\tint t1;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tcin>>t1>>a[i];\n\t\ttot+=a[i];\n\t\tif(t1==0) continue;\n\t\taddedge(t1,i);\n\t\tind[i]++;\n\t}\n\tif(tot%3!=0)\n\t{\n\t\tcout<<-1<<endl;\n\t\treturn 0;\n\t}\n\tfor(i=1;i<=n;i++) if(!ind[i]) st=i;\n\tdfs(st);\n\tif(c<=2)\n\t{\n\t\tcout<<-1<<endl;\n\t\treturn 0;\n\t}\n\tcout<<p[1]<<\" \"<<p[2];\n\t\n}\n```\n",
        "postTime": 1591430040,
        "uid": 38636,
        "name": "\u5bd2\u51b0\u5927\u5927",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF767C \u3010Garland\u3011"
    },
    {
        "content": "\u6ca1\u6709\u7528$vector$\u7684\u4e48\n\u8be6\u7ec6\u89e3\u91ca\u5728\u4ee3\u7801\n```c\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <complex>\n#include <algorithm>\n#include <climits>\n#include <queue>\n#include <map>\n#include <vector>\n#include <iomanip>\n#define A 1000010\n#define B 2010\n#define ll long long\n\nusing namespace std;\nint n, a, b, root, cnt, sum, rem;\nint pre[A], size[A], w[A], ans[3], cans;\nvector<int> v[A]; //vector\u5b58\u56fe\nvoid dfs(int fr) {\n\tsize[fr] = w[fr]; //\u5b50\u6811\u6743\u503c\u4e00\u5f00\u59cb\u662f\u8fd9\u4e2a\u70b9\u7684\u6743\u503c\n\tfor (int i = 0; i < v[fr].size(); i++) //\u904d\u5386\u76f8\u90bb\u7684\u6bcf\u4e2a\u70b9\n\t  if (v[fr][i] != pre[fr]) { //\u4e0d\u662f\u540c\u4e00\u4e2a\u7ed3\u70b9\n          dfs(v[fr][i]); //\u7ee7\u7eed\u5f80\u4e0b\u641c\n          size[fr] += size[v[fr][i]]; //\u7b97\u4e0a\u5b50\u6811\u5927\u5c0f\n\t  }\n\tif (size[fr] == (sum / 3) and pre[fr])\n\t  ans[++cans] = fr, size[fr] = 0; //\u7b97\u8fdb\u7b54\u6848\u4e2d\u4e86\u5c31\u53bb\u6389\u8fd9\u9897\u5b50\u6811\n}\n\nint main() {\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; i++) {\n\t\tcnt++;\n\t\tscanf(\"%d%d\", &a, &b);\n\t\tif (!a) {\n\t\t\troot = cnt; //\u8bb0\u5f55\u4e0b\u6839\u8282\u70b9\n\t\t\tw[cnt] = b; //\u70b9\u7684\u6743\u503c\n\t\t\tpre[cnt] = a; //\u8bb0\u5f55\u4e0b\u524d\u9a71\n\t\t\tsum += b; //\u8fd9\u9897\u6811\u7684\u70b9\u6743\u548c\n\t\t}\n\t\telse {\n\t\t\tw[cnt] = b;\n\t\t\tpre[cnt] = a;\n\t\t\tv[cnt].push_back(a); //\u53cc\u5411\u5b58\u56fe\n\t\t\tv[a].push_back(cnt);\n\t\t\tsum += b;\n\t\t}\n\t}\n\tif (sum % 3) return puts(\"-1\") & 0; //\u600e\u4e48\u4e5f\u5206\u4e0d\u6210\u4e09\u4efd\n\tdfs(root);\n\tif (cans >= 2) printf(\"%d %d\\n\", ans[1], ans[2]);\n\telse puts(\"-1\");\n}\n```",
        "postTime": 1544176470,
        "uid": 78064,
        "name": "\u826f\u6708\u6faa\u4e8c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF767C \u3010Garland\u3011"
    }
]