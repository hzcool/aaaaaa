[
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u9e21](https://www.luogu.org/problemnew/show/CF767D)\n\n~~\u4e4b\u524d\u7684\u683c\u5f0f\u592a\u4e11\u4e86~~\n### \u9898\u76ee\u601d\u8def\n------------\n- \u8fd9\u5e94\u8be5\u662f\u4e00\u7bc7\u6b63\u89e3\u5566\u3002\n- \u9996\u5148\uff0c\u6211\u8981\u5f00\u4e00\u4e2ahome\u6570\u7ec4\u8bb0\u5f55\u6bcf\u4e00\u5929**\u5bb6\u91cc**\u6709\u54ea\u4e9b\u725b\u5976\u5230\u671f\n\n- \u63a5\u7740\u6211\u4eec\u8981\u4ece\u540e\u5f80\u524d\u904d\u5386\uff0c\u6bd4\u8f83\u7b2ci\u5929**\u5bb6\u91cc**\u5230\u671f\u725b\u5976\u6570\u91cf\u4e0ek\uff0c\u5982\u679c\u6570\u91cf\u5927\u4e8ek\uff0c\u90a3\u4e48\u5c31\u8981\u628a\u8fd9home[i]-k\u653e\u5230\u524d\u4e00\u5929\u53bb\u559d\u6389\uff0c\u5982\u679c\u6570\u91cf\u5c0f\u4e8ek \u90a3\u4e48\u8fd9\u4e00\u5929\u5c31\u4f1a\u6709k-home[i]\u4e2a\u5269\u4f59\u53ef\u4ee5\u7528\u6765\u4e70\u8d85\u5e02\u725b\u5976\uff0c\u5f00\u4e00\u4e2aspare\u6570\u7ec4\u8bb0\u5f55\u8fd9\u4e00\u5929\u8fd8\u53ef\u4ee5\u559d\u591a\u5c11\u725b\u5976\n- \u5982\u679c\u5230\u4e86\u7b2c0\u5929\u4ecd\u6709\u8d85\u8fc7k\u7684\u725b\u5976\u8981\u559d\u5b8c\uff0c\u90a3\u4e48\u60c5\u51b5\u5c31\u4e0d\u6210\u7acb\uff0c\u76f4\u63a5\u8f93\u51fa-1\n\n- \u90a3\u4e48\u4e3a\u4ec0\u4e48\u8981\u4ece\u540e\u5f80\u524d\u904d\u5386\u5462\uff1f\u4ece\u524d\u5f80\u540e\u904d\u5386\u7684\u8bdd\uff0c\u662f\u4e0d\u77e5\u9053\u540e\u9762\u6709\u591a\u5c11\u725b\u5976\u662f\u8981\u63d0\u524d\u559d\u6389\u7684\u3002\u800c\u4ece\u540e\u5f80\u524d\u904d\u5386\u7684\u8bdd\uff0c\u56e0\u4e3a\u524d\u9762\u725b\u5976\u5df2\u7ecf\u5230\u4e86\u4fdd\u8d28\u671f\uff0c\u6240\u4ee5\u524d\u9762\u7684\u725b\u5976\u4e0d\u4f1a\u5bf9\u540e\u9762\u9020\u6210\u5f71\u54cd\u3002\n\n- \u6700\u540e\u6211\u4eec\u8981\u5904\u7406\u8d85\u5e02\u725b\u5976\uff0c\u9996\u5148\u5c06**\u8d85\u5e02**\u725b\u5976\u6309\u4ece\u5c0f\u5230\u5927\u7684\u4fdd\u8d28\u671f\u6392\u5e8f\uff0c\u63a5\u7740\u4ece\u524d\u5f80\u540e\u904d\u5386spare\u6570\u7ec4\uff0c\u5982\u679c\u7b2ci\u5929\u6709\u7a7a\u4f59\uff0c\u90a3\u4e48\u7b5b\u53bb**\u8d85\u5e02**\u5df2\u8fc7\u671f\u7684\u725b\u5976\uff0c\u628a\u80fd\u559d\u7684\u725b\u5976\u52a0\u5165answer\u4e2d\u6700\u540e\u8f93\u51fa\u5c31\u597d\u5566\n### \u4ee5\u4e0b\u4ee3\u7801\n------------\n```cpp\n#include<cstdio>//\u7801\u98ce\u51d1\u5408\u770b\u5427QAQ\n#include<iostream>\n#include<algorithm>\n#define N 10000050\nusing namespace std;\nstruct node\n{\n\tint num;//\u5728\u8f93\u5165\u4e2d\u662f\u7b2c\u51e0\u4e2a\n\tint t;//\u5230\u671f\u65e5\n\t}market[N];//\u8d85\u5e02\u725b\u5976\nint cmp(struct node a,struct node b)\n{\n\tif(a.t!=b.t)\n\treturn a.t<b.t;\n\telse\n\treturn a.num<b.num;\n\t}//\u6bd4\u8f83\u51fd\u6570\nint home[N],answer[N],spare[N];//\u89c1\u89e3\u6790\nint main()\n{\n\tint i,t,n,m,k,maxt=0,sum=0,now=1,q=0;\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&t);\n\t\tmaxt=max(maxt,t);//maxt\u8bb0\u5f55\u4fdd\u8d28\u671f\u6700\u5927\u662f\u591a\u5c11\u5929\n        home[t]++;//\u5bb6\u91cc\u6709\u591a\u5c11\u725b\u5976\u8fd9\u4e00\u5929\u5230\u671f\t\t\n\t\t}\n\tfor(i=1;i<=m;i++)\n    {\n\t\tscanf(\"%d\",&market[i].t);\n\t\tmarket[i].num=i;\n\t\tmaxt=max(maxt,market[i].t);\n\t\t}\n\tsort(market+1,market+m+1,cmp);\n\tfor(i=maxt;i>=0;i--)//\u6ce8\u610f\u4ece\u540e\u5f80\u524d\u904d\u5386\n\t{\n\t\tif(home[i]<=k)//\u5982\u679c\u8fd9\u4e00\u5929\u5bb6\u91cc\u8981\u89e3\u51b3\u7684\u6570\u91cf\u5c0f\u4e8ek\n\t\tspare[i]=k-home[i];//\u8fd9\u4e00\u5929\u8fd8\u53ef\u4ee5\u559d\u591a\u5c11\u74f6\n\t\telse\n\t\t{\n\t    if(i==0)//\u5230\u4e86\u7b2c0\u5929\u8fd8\u6709\u8d85\u8fc7k\u7684\u725b\u5976\u8981\u89e3\u51b3\n\t    {\n\t\tprintf(\"-1\");\n        return 0;\n\t \t}\n\t \thome[i-1]+=home[i]-k;//\u524d\u4e00\u5929\u8981\u89e3\u51b3\u7684\u6570\u91cf\u8981\u52a0\u4e0a\u4eca\u5929\u6ca1\u89e3\u51b3\u5b8c\u7684\u6570\u91cf\n\t\t}\n\t\t}\n\t\tfor(i=0;i<=maxt;i++)\n\t\t{\n\t\tif(spare[i]>0)//\u5982\u679c\u53ef\u4ee5\u4e70\n\t\t{\n\t\twhile(market[now].t<i&&now<=m)\n\t\tnow++;//\u7b5b\u53bb\u5df2\u7ecf\u5230\u4fdd\u8d28\u671f\u7684\n\t\twhile(spare[i]>0&&now<=m)//\u5c06\u80fd\u52a0\u7684\u90fd\u52a0\u4e0a\n\t\t{\n\t\tanswer[++q]=market[now].num;\n\t\tspare[i]--;\n\t\tnow++;\n\t\t}\n\t\t} \n\t\t}\n\t\tsort(answer+1,answer+1+q);//\u628a\u7b54\u6848\u6309\u7167\u8f93\u5165\u6570\u636e\u6392\u5e8f\n\t\tprintf(\"%d\\n\",q); \n\t\tfor(i=1;i<=q;i++)\n\t\tprintf(\"%d \",answer[i]); \n\t}\n```",
        "postTime": 1544024896,
        "uid": 37345,
        "name": "Serve",
        "ccfLevel": 0,
        "title": "CF767D Cartons of milk"
    },
    {
        "content": "# 1.\u524d\u8a00\n- \u9898\u76ee\u94fe\u63a5\uff1ahttp://codeforces.com/contest/767/problem/D\n\n- \u9898\u76ee\u5927\u610f\uff1a\n\n\u5c0f\u7ea2\u5f88\u559c\u6b22\u559d\u725b\u5976\uff0c\u6bcf\u5929\u6700\u591a\u80fd\u559d $k$ \u74f6\u725b\u5976\uff1b\n\u5c0f\u7ea2\u6709 $n$ \u74f6\u725b\u5976\uff0c\u6bcf\u74f6\u725b\u5976\u90fd\u6709\u4e00\u4e2a\u6709\u6548\u65f6\u95f4 $f[i]$\uff0c\u8868\u793a\u9700\u8981\u5728 $f[i]$ \u5929\u5185\u559d\u5b8c\u3002\n\n\u540c\u65f6\u5546\u5e97\u91cc\u6709 $m$ \u74f6\u725b\u5976\uff0c\u6bcf\u74f6\u725b\u5976\u7684\u6709\u6548\u65f6\u95f4\u662f $g[i]$\u3002\n\n\u5c0f\u7ea2\u5f88\u8ba8\u538c\u6d6a\u8d39\uff0c\u6240\u4ee5\u5979\u5e0c\u671b\u80fd\u5168\u90e8\u559d\u5b8c\u81ea\u5df1\u7684\u725b\u5976\uff1b\u540c\u65f6\u5c0f\u7ea2\u5f88\u559c\u6b22\u725b\u5976\uff0c\u5979\u5e0c\u671b\u5c3d\u53ef\u80fd\u559d\u66f4\u591a\u7684\u725b\u5976\u3002\n\n\u95ee\u5c0f\u7ea2\u6700\u591a\u80fd\u4e70\u591a\u5c11\u74f6\u725b\u5976\uff0c\u4fdd\u8bc1\u725b\u5976\u90fd\u5728\u4fdd\u8d28\u671f\u5185\u559d\u5b8c\u3002\n \n# 2.\u89e3\u6790\uff1a\n\u5c0f\u7ea2\u5fc5\u987b\u662f\u5148\u6ee1\u8db3\u559d\u5b8c\u81ea\u5df1\u7684\u725b\u5976\uff0c\u518d\u53bb\u559d\u5546\u5e97\u91cc\u7684\u725b\u5976\u3002\u5c0f\u7ea2\u5e94\u8be5\u6bcf\u5929\u5c3d\u53ef\u80fd\u559d\u6709\u6548\u65f6\u95f4\u6700\u77ed\u7684\u725b\u5976\uff0c\u5e76\u4e14\u6bcf\u5929\u90fd\u559d $k$ \u74f6\u3002\n\n### \u505a\u6cd5\uff1a\n\u628a\u5c0f\u7ea2\u6240\u6709\u7684\u725b\u5976\u6392\u5e8f\uff0c\u6309\u7167\u6709\u6548\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u904d\u5386\u6bcf\u74f6\u725b\u5976\uff0c\u53ef\u4ee5\u5bb9\u6613\u5224\u65ad\u5c0f\u7ea2\u81ea\u5df1\u7684\u725b\u5976\u662f\u5426\u80fd\u5168\u90e8\u559d\u5b8c\u3002\n \n\u518d\u6765\u8003\u8651\u5546\u5e97\u91cc\u7684\u725b\u5976\uff1a\u5047\u5982\u5c0f\u7ea2\u80fd\u559d\u5b8c\u6570\u91cf\u4e3a $i+1$ \u74f6\u7684\u725b\u5976\uff0c\u90a3\u4e48\u5fc5\u7136\u80fd\u559d\u5b8c $i$ \u74f6\u725b\u5976\uff0c\u5177\u6709\u5355\u8c03\u6027\u3002\n\n\u4e8c\u5206 $mid$\uff0c\u8868\u793a\u5c0f\u7ea2\u80fd\u559d\u5b8c $mid$ \u74f6\u5546\u5e97\u91cc\u7684\u725b\u5976\uff1b\n\u518d\u7528\u8d2a\u5fc3\uff0c\u4ece\u5546\u5e97\u91cc\u9009\u62e9 $mid$ \u74f6\u6709\u6548\u65f6\u95f4\u6700\u957f\u7684\u725b\u5976\uff0c\u6df7\u5165\u5c0f\u7ea2\u5fc5\u987b\u559d\u5b8c\u7684\u5217\u8868\uff0c\u7136\u540e\u6392\u5e8f\u3002\n \n\u603b\u5f97\u590d\u6742\u5ea6 $O(\\log MN\\log N)$\uff0c\u4f46\u56e0\u4e3a $N=10^6$\uff0c\u52a0\u4e0a $\\log M$ \u548c $\\log N$\uff0c\u5927\u6982\u6709 $4\\times 10^8$\u7684\u590d\u6742\u5ea6\uff1b\n \n\u4e8e\u662f\u5728\u4e8c\u5206\u5b8c $mid$ \u4e4b\u540e\uff0c\u4e0d\u4e0e\u5c0f\u7ea2\u5df2\u6709\u7684\u725b\u5976\u6df7\u5408\u6392\u5e8f\uff0c\u7528 two pointers \u7684\u65b9\u6cd5\u8fdb\u884c\u5224\u65ad\u3002\n \n \n# 3.\u6838\u5fc3\u4ee3\u7801\n~~\u4f60\u53ef\u4ee5\u9009\u62e9\u52a0\u4e0a\u5934\u6587\u4ef6\u5565\u7684\u6765\u6284\u9898\u89e3~~\n\n```cpp\nstruct Node {\n    int first, second;\n\n    bool operator<(const Node &tmp) const\n    {\n        if (first != tmp.first) return first > tmp.first;\n        else return second < tmp.second;\n    };\n    Node(int first, int second):first(first), second(second){};\n    Node(){};\n}f[N], g[N];\nint a[N];\nint main(){\n    lld n, m, k;\n    cin >> n >> m >> k;\n    for (int i = 1; i <= n; ++i) {\n        scanf(\"%d\", &f[i].first);\n        f[i].second = i;\n    }\n    for (int i = 1; i <= m; ++i) {\n        scanf(\"%d\", &g[i].first);\n        g[i].second = i;\n    }\n    sort(f + 1, f + 1 + n);\n    sort(g + 1, g + 1 + m);\n    \n    int left = 0, right = m + 1, ans = -1;\n    while (left < right) {\n        int mid = (left + right) / 2;\n        int ok = 1;\n        int sum = 0, x = n, y = mid;\n        while (x > 0 || y > 0) {\n            ++sum;\n            int day = 0;\n            if (x == 0) { // left y\n                day = g[y].first;\n                --y;\n            }\n            else if (y == 0) {\n                day = f[x].first;\n                --x;\n            }\n            else {\n                if (f[x].first < g[y].first) {\n                    day = f[x].first;\n                    --x;\n                }\n                else {\n                    day = g[y].first;\n                    --y;\n                }\n            }\n            if (sum > (day + 1) * k) {\n                ok = 0;\n                break;\n            }\n        }\n        \n        if (ok) {\n            ans = mid;\n            left = mid + 1;\n        }\n        else {\n            right = mid;\n        }\n    }\n    \n    cout << ans << endl;\n    for (int i = 1; i <= ans; ++i) printf(\"%d \", g[i].second);\n    \n    \n    return 0;\n}\n```\n\n\u53c2\u8003\u8d44\u6599\uff1a\u7a0b\u5e8f\u5458\u8fdb\u9636\u7ec3\u4e60",
        "postTime": 1632102979,
        "uid": 554872,
        "name": "Deirdre",
        "ccfLevel": 0,
        "title": "[CF767D]\u9898\u89e3"
    },
    {
        "content": "```cpp\n/*\n\u5148\u8bf4\u4e00\u53e5\u5427.\u8fd9\u4e2a\u7b97\u6cd5\u867d\u7136\u80fdA\u8fd9\u9053\u9898,\u4f46\u662f\u5b9e\u9645\u4e0a\u968f\u4fbf\u627e\u51e0\u4e2a\u6570\u636e\u5c31\u53ef\u4ee5hack\u6389\u5b83.\n\u9996\u5148\u5efa\u4e00\u4e2a\u6876\u5b58\u653e\u4fdd\u8d28\u671f\u5230\u7b2ci\u5929\u7684\u725b\u5976\u7684\u74f6\u6570.\u7136\u540e\u628a`tong[i]=k-tong[i]`,\u6c42\u51fa\u6bcf\u4e00\u5929\u8fd8\u80fd\u518d\u559d\u591a\u5c11\u74f6\u725b\u5976.\u8fd9\u91cc\u5c31\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u7b97\u6cd5\u7684\u95ee\u9898\u6240\u5728,\u5b83\u6ca1\u6709\u8003\u8651\u4eca\u5929\u628a\u660e\u5929\u7684\u4efd\u559d\u6389,\u800c\u5728\u770b\u5230\u8d1f\u6570\u4e4b\u540e\u76f4\u63a5\u8f93\u51fa\u4e86-1.\u4f46\u662f\u8fd9\u4e48\u660e\u663e\u7684\u9519\u8bef\u5c45\u7136\u6ca1\u6709\u6570\u636e\u80fd\u591fhack\u6389\u5b83,\u6211\u4e5f\u662f\u89c9\u5f97\u4e0d\u53ef\u601d\u8bae.\n\u63a5\u4e0b\u6765\u628a\u8d85\u5e02\u91cc\u7684\u725b\u5976\u7684\u4fdd\u8d28\u671f\u548c\u7f16\u53f7\u653e\u5728\u4e00\u4e2apair\u91cc\u5e76\u6392\u5e8f.\n\u7136\u540e\u8fdb\u884c\u66b4\u529b.\u6ce8\u610fp\u8fd9\u4e2a\u53d8\u91cf\u5728\u4ee3\u7801\u5f53\u4e2d\u7684\u8fd0\u7528,\u5982\u679c\u76f4\u63a5\u66b4\u529b\u5c31gg\u4e86.\n\u7531\u4e8e\u6211\u5f88\u4e45\u4ee5\u524d\u5199\u7684\u4ee3\u7801\u5b9e\u5728\u662f\u592a\u4e11\u4e86,\u6240\u4ee5\u6211\u6539\u4e86\u4e00\u4e0b,\u597d\u770b\u591a\u4e86.\n\u91cd\u8981\u7684\u4e8b\u60c5\u8981\u8bf4\u4e09\u904d!!!\u8fd9\u4e2a\u4ee3\u7801\u867d\u7136A\u6389\u4e86,\u4f46\u4e0d\u662f\u6b63\u89e3!\n*/\n#include<bits/stdc++.h>\nusing namespace std;\nconst int boss=1e6;\npair<int,int> sm[boss+10];\nint n,m,k,tong[boss*10+10],sc[boss+10];\nint main()\n{\nint a,i,j,t=0,p=0;//t\u662fans,p\u662f\u76ee\u524d\u679a\u4e3e\u5230\u7684\u7b2c\u4e00\u4e2a\u4e0d\u662f0\u7684\u65e5\u5b50(\u524d\u9762\u7684\u65e5\u5b50\u5df2\u7ecf\u5168\u90e8\u5206\u7ed9\u4e86\u4e00\u4e9b\u725b\u5976,\u5373\u5bf9\u4e8e\u4efb\u4f55\u5c0f\u4e8ep\u7684\u81ea\u7136\u6570x\u6765\u8bf4,\u90fd\u6709tong[x]=0).\nscanf(\"%d%d%d\",&n,&m,&k);\nfor (i=1;i<=n;i++) scanf(\"%d\",&a),tong[a]++;\nfor (i=0;i<=boss*10;i++) if ((tong[i]=k-tong[i])<0) return puts(\"-1\"),0;//\u5f53\u5929\u559d\u5f53\u5929\u7684\u725b\u5976,\u5982\u679c\u4e0d\u80fd\u76f4\u63a5\u8f93\u51fa-1.\nfor (i=1;i<=m;i++) scanf(\"%d\",&sm[i].first),sm[i].second=i;//\u6784\u9020pair\u5e76\u6392\u5e8f\nsort(sm+1,sm+m+1);\nfor (i=1;i<=m;i++)//\u679a\u4e3e\u6bcf\u4e00\u74f6\u8d85\u5e02\u91cc\u7684\u725b\u5976\n  {\n  for (j=p;j<=sm[i].first;j++) if (tong[j])//\u8d2a\u5fc3\u4ece\u65e9\u5f00\u59cb\u9009\u62e9,\u5982\u679c\u80fd\u4e70\u7684\u8bdd\u5c31\u4e70,\u53ef\u4ee5\u5728\u7b2cj\u5929\u559d\u6389\u5b83\n    {\n    if (--tong[j]==0) for (;!tong[p];++p);//\u5982\u679c\u8fd9\u4e00\u5929\u7684k\u74f6\u5df2\u7ecf\u9884\u5b9a\u5b8c\u4e86,\u5c06p\u5f80\u540e\u626b,\u76f4\u5230tong[p]>0,\u53ef\u4ee5\u4fdd\u8bc1\u4e4b\u524d\u4e0d\u53ef\u80fd\u518d\u8d2d\u4e70\u4efb\u4f55\u4e00\u74f6\u725b\u5976.\n    sc[++t]=sm[i].second;\n    break;\n    }\n  }\nprintf(\"%d\\n\",t);\nfor (i=1;i<=t;i++) printf(\"%d \",sc[i]);\n}\n```",
        "postTime": 1519101254,
        "uid": 49371,
        "name": "Fuko_Ibuki",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF767D \u3010Cartons of milk\u3011"
    }
]