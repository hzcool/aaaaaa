[
    {
        "content": "\u770b\u5230\u524d\u9762\u4e00\u5806\u795e\u4ed9\u7528\u5404\u79cdSTL\u7206\u5207\u6b64\u9898\uff0c\u6211\u5219\u8868\u793a\u6211STL\u6ca1\u5b66\u597d\uff0c\u7528\u4e0d\u6765\u3002\n\n\u9996\u5148\uff0c\u9898\u76ee\u8bf4\u8fd9\u5757\u5de7\u514b\u529b\u5448\u4e09\u89d2\u5f62\uff0c\u5927\u6982\u5c31\u662f\u8fd9\u4e2a\u6837\u5b50\uff1a\n\n![](https://s2.ax1x.com/2020/02/05/1seQQ1.png)\n\n\u7136\u540e\uff0c\u6211\u4eec\u4f1a\u9009\u62e9\u5bf9\u89d2\u7ebf\u4e0a\u7684\u67d0\u4e00\u5757\uff0c\u5411\u4e0a\u6216\u5411\u5de6\u4e00\u76f4\u5403\uff0c\u76f4\u5230\u67d0\u4e00\u5757\u88ab\u5403\u8fc7\u4e86\u3002\n\n\u663e\u7136\uff0c\u7b2c\u4e00\u53e3\u53ef\u4ee5\u76f4\u63a5\u5403\u5230\u5e95\uff0c\u90a3\u4e48\u4ee5\u540e\u5462\uff1f\u4f1a\u53d7\u5230\u4e4b\u524d\u7684\u5f71\u54cd\u3002\n\n\u5047\u8bbe\u524d\u9762\u5df2\u7ecf\u5403\u6389\u4e86\u7ea2\u8272\u4e0e\u6a59\u8272\u4e24\u90e8\u5206\uff0c\u9ec4\u8272\u4e3a\u8fd9\u4e00\u6b21\u5403\u6389\u7684\u90e8\u5206\u3002\u4e0d\u96be\u770b\u51fa\uff0c\u9ec4\u8272\u5728\u5411\u4e0a\u5ef6\u4f38\u7684\u8fc7\u7a0b\u4e2d\u906d\u5230\u4e86\u6a59\u8272\u7684\u963b\u62e6\u3002\u90a3\u4e48\u5982\u4f55\u8fc5\u901f\u627e\u51fa\u9ec4\u8272\u5728\u54ea\u91cc\u88ab\u5403\u6389\u4e86\u5462\uff1f\n\n![](https://s2.ax1x.com/2020/02/05/1sm7ut.png)\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u4e4b\u524d\u4e0e\u672c\u6b21\u98df\u7528\u65b9\u5411\u76f8\u540c\u7684\u98df\u7528\u6240\u51cf\u5c11\u7684\u5de7\u514b\u529b\u5757\u4e00\u5b9a\u4e0d\u4f1a\u5f71\u54cd\u5230\u5f53\u524d\u98df\u7528\uff08\u4ece\u540c\u4e00\u5757\u5f00\u59cb\u5403\u9664\u5916\uff09\u3002\u540c\u65f6\uff0c\u6211\u4eec\u8fd8\u6709\u4e4b\u524d\u6240\u5403\u7684\u4e0d\u540c\u5411\u7684\u98df\u7528\u540e\u679c\u3002\u4ee5\u56fe\u4e2d\u4e3a\u4f8b\uff0c\u6a59\u8272\u5403\u6389\u4e86\u540e\u76f8\u5f53\u4e8e\u628a\u4e0a\u8fb9\u754c\u5411\u4e0b\u79fb\u52a8\u4e86\u4e09\u683c\u3002\u6a59\u8272\u6240\u5f71\u54cd\u7684\u662f\u4e00\u4e2a\u8303\u56f4\u7684\u4e0a\u8fb9\u754c\uff0c\u67e5\u8be2\u9700\u8981\u7684\u662f\u67e5\u627e\u5355\u5217\u6216\u5355\u884c\u7684\u6700\u8fd1\u8fb9\u754c\u3002\u4e8e\u662f\u95ee\u9898\u5c31\u8f6c\u5316\u6210\u4e86\u6bcf\u6b21\u98df\u7528\u540e\u662f\u533a\u95f4\u4fee\u6539\uff0c\u628a\u6574\u4e2a\u533a\u95f4\u5185\u66f4\u8fdc\u7684\u8fb9\u754c\u66f4\u65b0\u6210\u4e3a\u66f4\u8fd1\u7684\u8fb9\u754c\uff1b\u6bcf\u6b21\u98df\u7528\u524d\u662f\u5355\u70b9\u67e5\u8be2\uff0c\u67e5\u627e\u5355\u884c\u6216\u5355\u5217\u7684\u6700\u8fd1\u8fb9\u754c\u3002\u800c\u8fd9\u6b63\u597d\u662f\u7ebf\u6bb5\u6811\u6240\u64c5\u957f\u7684\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0c\u6211\u4eec\u8981\u7ef4\u62a4\u5728\u4e24\u4e2a\u65b9\u5411\u4e0a\u7684\u98df\u7528\u4fe1\u606f\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4e24\u9897\u7ebf\u6bb5\u6811\u3002\u53e6\u5916\uff0c$n$\u6700\u5927\u53ef\u4ee5\u53d6\u5230$10^9$\uff0c\u9700\u8981\u52a8\u6001\u5f00\u70b9\u3002\n\ncode:\n```cpp\n#include<stdio.h>\nint n, ans;\nint q;\nstruct SegTree{\n\tint l, r, lazy;\n\tint ls, rs;\n\t#define l(p, i) tree[i][p].l//\u6211\u559c\u6b22\u5b8f\u5b9a\u4e49\u6389\uff0c\u8001\u8001\u5b9e\u5b9e\u5199\u53d8\u91cf\u540d\u592a\u957f\u4e86\n\t#define r(p, i) tree[i][p].r\n\t#define lazy(p, i) tree[i][p].lazy\n\t#define ls(p, i) tree[i][p].ls\n\t#define rs(p, i) tree[i][p].rs\n}tree[2][6000005];\nint tot[2];\nint mid;\n#define max(p, q) (p > q ? p : q)\ninline void spread(int p, int id) {\n\tmid = (l(p, id) + r(p, id)) >> 1;\n\tif (ls(p, id) == 0) {//\u5982\u679c\u6ca1\u6709\u513f\u5b50\u5c31\u521b\u9020\u513f\u5b50\n\t\tls(p, id) = ++tot[id];\n\t\tl(ls(p, id), id) = l(p, id);\n\t\tr(ls(p, id), id) = mid;\n\t\tlazy(ls(p, id), id) = 0;\n\t}\n\tif (rs(p, id) == 0) {\n\t\trs(p, id) = ++tot[id];\n\t\tl(rs(p, id), id) = mid + 1;\n\t\tr(rs(p, id), id) = r(p, id);\n\t\tlazy(rs(p, id), id) = 0;\n\t}\n\tif (lazy(p, id)) {\n\t\tlazy(ls(p, id), id) = max(lazy(ls(p, id), id), lazy(p, id));\n\t\tlazy(rs(p, id), id) = max(lazy(rs(p, id), id), lazy(p, id));\n\t\tlazy(p, id) = 0;\n\t}\n}\nvoid change(int p, int l, int r, int d, int id) {\n\tif (lazy(p, id) >= d)\n\t\treturn;\n\tif (l <= l(p, id) && r(p, id) <= r) {\n\t\tlazy(p, id) = max(lazy(p, id), d);//\u628a\u6743\u503c\u6539\u4e3a\u8f83\u5927\u503c\n\t\treturn;\n\t}\n\tspread(p, id);\n\tif (l <= r(ls(p, id), id))\n\t\tchange(ls(p, id), l, r, d, id);\n\tif (l(rs(p, id), id) <= r)\n\t\tchange(rs(p, id), l, r, d, id);\n\treturn;\n}\nint ask(int p, int k, int id) {\n\tif (l(p, id) == r(p, id))\n\t\treturn lazy(p, id);//\u6839\u7ed3\u70b9\u7684lazy\u4e0d\u53ef\u80fd\u4e0b\u653e\uff0c\u4e00\u5b9a\u4ee3\u8868\u81ea\u8eab\u6743\u503c\n\tspread(p, id);\n\tif (k <= r(ls(p, id), id))\n\t\treturn ask(ls(p, id), k, id);\n\telse\n\t\treturn ask(rs(p, id), k, id);\n}\nint main() {\n\tscanf(\"%d %d\", &n, &q);\n\ttree[0][++tot[0]] = SegTree{1, n, 0, 0};//\u5b9a\u4e49\u4e24\u4e2a\u6839\u7ed3\u70b9\n\ttree[1][++tot[1]] = SegTree{1, n, 0, 0};\n\tint i, j;\n\tchar opt;\n\twhile (q--) {\n\t\tscanf(\"%d %d %c\", &i, &j, &opt);\n\t\tif (opt == 'U') {\n\t\t\tans = ask(1, i, 0);//\u67e5\u8be2\u8fb9\u754c\n\t\t\tchange(1, ans + 1, j, i, 1);//\u5904\u7406\u672c\u6b21\u9020\u6210\u7684\u5f71\u54cd\n\t\t\tchange(1, i, i, j, 0);//\u6ce8\u610f\uff0c\u5373\u4f7f\u65b9\u5411\u76f8\u540c\uff0c\u540c\u4e00\u4e2a\u4f4d\u7f6e\u5403\u4e24\u6b21\u4e5f\u8981\u8bb0\u5f55\n\t\t\tprintf(\"%d\\n\", j - ans);\n\t\t} else {\n\t\t\tans = ask(1, j, 1);//\u540c\u4e0a\n\t\t\tchange(1, ans + 1, i, j, 0);\n\t\t\tchange(1, j, j, i, 1);\n\t\t\tprintf(\"%d\\n\", i - ans);\n\t\t}\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1580897028,
        "uid": 124683,
        "name": "Krystallos",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF555C \u3010Case of Chocolate\u3011"
    },
    {
        "content": "### \u89e3\u9898\u601d\u8def\r\n\r\n> \u5f15\u7406: \u4e0d\u7ba1\u600e\u4e48\u5206\u5272\uff0c\u4efb\u610f\u4e00\u5757\u4e00\u5b9a\u5f62\u5982\uff1a\r\n>\r\n> ![](https://i.loli.net/2019/04/01/5ca1af553b983.png)\r\n>\r\n> \u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u9898\u76ee\u91cc\u7684\u9636\u68af\u72b6\u7269\uff0c\u53f3\u3001\u4e0b\u53ef\u80fd\u88ab\u5207\u8fc7\u4e00\u5200\u3002\r\n\r\n\u77aa\u773c\u89c2\u5bdf\u6cd5\u3001\u663e\u7136\u6cd5\u3001\u5f52\u7eb3\u6cd5\u7686\u53ef\u8bc1\u660e\u3002\r\n\r\n\u600e\u4e48\u4f18\u7f8e\u5730\u5229\u7528\u8fd9\u4e2a\u6027\u8d28\u5462\uff1f\u6211\u4eec\u7ed9\u5b83\u6807\u4e9b\u6709\u7528\u7684\u4fe1\u606f\u3002\r\n\r\n![](https://i.loli.net/2019/04/01/5ca1b12802e43.png)\r\n\r\n\u5728\u4e0a\u56fe\u4e2d\uff0c\u5f15\u7528\u4e86 $l,\\,r,\\,x,\\,y$ \u56db\u4e2a\u503c\uff0c\u8fd9\u8868\u660e\u4e86\u8fd9\u4e00\u5757\u5de6\u4e0a\u89d2\u5728 $(x,\\,y)$ \u5904\uff0c\u53f3\u4e0b\u89d2\u7684\u9636\u68af\u5c5e\u4e8e\u7b2c $[l,\\,r]$ \u884c\u3002\r\n\r\n**\u6ce8\u610f\uff0c\u539f\u9898\u7684\u5750\u6807\u7cfb\u6709\u70b9\u5947\u602a\uff0c\u6545\u6b64\u5904\u4f7f\u7528 OI \u6700\u5e38\u7528\u7684\u5750\u6807\u7cfb\u89c4\u5219\uff0c\u8bf7\u8bfb\u8005\u81ea\u884c\u8f6c\u6362\u3002**\r\n\r\n\u8fd9\u6837\u8868\u793a\u6709\u4ec0\u4e48\u597d\u5904\uff1f\u5c1d\u8bd5\u8bc1\u660e\uff1a\r\n\r\n> \u4efb\u610f\u4e00\u5757\u7684 $[l,\\,r]$ \u4e92\u4e0d\u4ea4\u3002\r\n\r\n\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u7c7b\u4f3c ODT \u7684\u5e73\u8861\u6811\uff08\u4e3a\u4e86\u65b9\u4fbf\uff0cstd::set \u662f\u4e0d\u4e8c\u4e4b\u9009\uff09\u6765\u7ef4\u62a4\u6bcf\u4e00\u5757\u3002\r\n\r\n\u5269\u4e0b\u7684\u5c31\u975e\u5e38\u7b80\u5355\u4e86\uff0c\u6bcf\u6b21\u5206\u5272\uff0clowerbound \u627e\u5230\u6240\u5c5e\u5757\uff0c\u5982\u679c\u5c5e\u4e8e\u5176\u533a\u95f4\uff0c\u66b4\u529b\u5206\u7c7b\u8ba8\u8bba\u5e76\u5206\u88c2\uff0c\u5426\u5219\u7b54\u6848\u4e3a 0\u3002\r\n\r\n---\r\n\r\n### \u4ee3\u7801\u5b9e\u73b0\r\n\r\n```cpp\r\n#include <cstdio>\r\n#include <set>\r\n\r\nstruct Element { int l, r, x, y; } e, u, v;\r\n\r\nbool operator <(const Element &u, const Element &v) { return u.l == v.l ? u.r < v.r : u.l < v.l; }\r\n\r\nint n, m, x, y, ans;\r\nstd::set<Element> set;\r\n\r\nint main() {\r\n    scanf(\"%d %d\", &n, &m);\r\n    set.insert((Element) {0, 0, 1, 1});\r\n    set.insert((Element) {1, n, 1, 1});\r\n    for (char opt; m; m--) {\r\n        scanf(\"%d %d %c\", &x, &y, &opt);\r\n        e = *--set.lower_bound((Element) {x, n + 1, 1, 1});\r\n        if (e.l <= x && x <= e.r) {\r\n            set.erase(e);\r\n            if (opt == 'L') {\r\n                ans = x - e.x + 1;\r\n                set.insert((Element) {e.l, x - 1, e.x, y + 1});\r\n                set.insert((Element) {x + 1, e.r, e.x, e.y});\r\n            } else {\r\n                ans = y - e.y + 1;\r\n                set.insert((Element) {e.l, x - 1, e.x, e.y});\r\n                set.insert((Element) {x + 1, e.r, x + 1, e.y});\r\n            }\r\n        } else { ans = 0; }\r\n        printf(\"%d\\n\", ans);\r\n    }\r\n    return 0;\r\n}\r\n```",
        "postTime": 1554100087,
        "uid": 26673,
        "name": "Sooke",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF555C \u3010Case of Chocolate\u3011"
    },
    {
        "content": "##### \u63d0\u4f9b\u4e00\u79cd\u79bb\u7ebf\u7b97\u6cd5\n\n\u5148\u6309x\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u6709\u987a\u5e8f\u7684\u4ece\u4e0b\u81ea\u4e0a\u5904\u7406\u3002\n\n\u5bf9\u4e8e\u5f80\u4e0a\u5403\u7684\u76f4\u63a5\u52a0\u5165\u53e6\u4e00\u4e2a\u961f\u5217\u3002\u5f53\u9047\u5230\u5411\u53f3\u5403\u7684\u65f6\uff0c\u66f4\u65b0\u5403\u7684\u987a\u5e8f\u6bd4\u5b83\u5927\u7684\uff0c\u5f39\u51fa\uff0c\u66f4\u65b0\u672c\u8eab\u3002\n\n#### \u65f6\u95f4:O(qlogq)\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <cstdlib>\n#include <iomanip>\nusing namespace std;\nconst int N=2e5+10;\nint n,Q,tp=0,ans[N];\nstruct A{int x,y,type,d;}a[N],sta[N];\ninline int cmp(A x,A y){return (x.x==y.x)?x.type<y.type:x.x<y.x;}\ninline int read()\n{\n\tint x=0,minus=0; char ch;\n\twhile (!isdigit(ch=getchar())) minus|=(ch=='-');\n\twhile (isdigit(ch)) x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\n\treturn minus?-x:x;\n}\ninline int gc()\n{\n\tchar ch=getchar();\n\twhile (ch!='U'&&ch!='L') ch=getchar();\n\tif (ch=='U') return 1;\n\treturn 0;\n}\nsigned main()\n{\n\tn=read(),Q=read();\n\tfor (register int i=1,x,y,z;i<=Q;++i) x=read(),y=read(),z=gc(),a[i]=(A){x,y,i,z};\n\tsort(a+1,a+1+Q,cmp);\n\tsta[0]=(A){0,n+1,0,0};\n\ta[Q+1]=(A){n+1,0,0,0};\n\tfor (register int i=1;i<=Q+1;++i)\n\t{\n\t\tif (a[i].x==a[i-1].x&&a[i].y==a[i-1].y) continue;\n\t\tif (a[i].d) sta[++tp]=a[i];\n\t\telse {\n\t\t\twhile (sta[tp].type>a[i].type) ans[sta[tp].type]=sta[tp].y-a[i].y,tp--;\n\t\t\tans[a[i].type]=a[i].x-sta[tp].x;\n\t\t}\n\t}\n\tfor (register int i=1;i<=Q;++i) printf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1605535480,
        "uid": 109212,
        "name": "slzs",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF555C \u3010Case of Chocolate\u3011"
    },
    {
        "content": "### Description.\n\u7ed9\u5b9a\u4e00\u4e2a\u5982\u9898\u56fe\u6240\u793a\u7684\u659c\u4e09\u89d2\uff0c\u5927\u5c0f\u4e3a $10^9\\times10^9$ \u7ea7\u522b\u3002  \n\u6bcf\u6b21\u4ece\u4e00\u4e2a\u70b9\u5f80 \u4e0a/\u53f3 \u5220\u683c\u5b50\uff0c\u78b0\u5230\u6ca1\u683c\u5b50\u7684\u5730\u65b9\u5c31\u505c\u6b62\u3002  \n\u95ee\u7b2c $i$ \u6b21\u64cd\u4f5c\u4f1a\u5220\u6389\u51e0\u4e2a\u683c\u5b50\u3002  \n\n### Solution.\n\u6211\u4eec\u53ea\u8003\u8651\u6a2a\u7ebf\u64cd\u4f5c\uff0c\u7ad6\u7ebf\u540c\u7406\u3002  \n\u9996\u5148\uff0c\u6bcf\u4e2a\u6a2a\u7ebf\u64cd\u4f5c\u53ea\u4f1a\u548c\u5de6\u8fb9\u7684\u7ad6\u7ebf\u64cd\u4f5c\u6709\u5173  \n\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u6a2a\u7ebf\uff0c\u627e\u5230\u4e4b\u524d\u7684\u6700\u8fd1\u7684\u7ad6\u7ebf\u3002  \n\u90a3\u6bcf\u4e2a\u7ad6\u7ebf\u80fd\u5f71\u54cd\u7684\u8303\u56f4\u662f\u4e00\u4e2a\u533a\u95f4\u3002  \n\u5de6\u7aef\u70b9\u662f\u7ad6\u7ebf\u5f53\u524d\u6240\u5728\u7684\u503c\uff0c\u53f3\u7aef\u70b9\u662f\u5b83\u649e\u5230\u7684\u6a2a\u7ebf\u6240\u5728\u7684\u4f4d\u7f6e\u3002  \n\u540c\u65f6\uff0c\u6bd4\u5982 5U 3U \u8fd9\u6837\uff0c\u5b83\u5f71\u54cd\u662f\u53d6 max\uff0c\u6240\u4ee5\u4e0d\u4e00\u5b9a\u80fd\u6709\u4e00\u6574\u4e2a\u533a\u95f4  \n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u76f4\u63a5\u7528\u533a\u95f4\u53d6 max \u7684\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u3002  \n\u5409\u53f8\u673a\uff1f\u56e0\u4e3a\u662f\u5355\u70b9\u67e5\u8be2\u597d\u50cf\u5e76\u4e0d\u9700\u8981\uff0c\u76f4\u63a5\u6807\u8bb0\u6c38\u4e45\u5316\u5373\u53ef\u3002  \n\u7136\u540e\u5c31\u505a\u5b8c\u4e86  \n\n### Coding.\n```cpp\n//\u662f\u554a\u2026\u2026\u4f60\u5c31\u662f\u90a3\u53ea\u9b3c\u4e86\u2026\u2026\u6240\u4ee5\u88ab\u4f60\u78b0\u5230\u4ee5\u540e\uff0c\u5c31\u8f6e\u5230\u6211\u53d8\u6210\u9b3c\u4e86\u2026\u2026{{{\n#include<bits/stdc++.h>\nusing namespace std;typedef long long ll;\ntemplate<typename T>inline void read(T &x)\n{\n\tx=0;char c=getchar(),f=0;\n\tfor(;c<'0'||c>'9';c=getchar()) if(c=='-') f=1;\n\tfor(;c>='0'&&c<='9';c=getchar()) x=(x<<1)+(x<<3)+(c^48);\n\tif(f) x=-x;\n}/*}}}*/\nstruct SegmentTree\n{\n\tstruct node{int ls,rs,tg;}T[10000005];int tt,rt;SegmentTree() {rt=tt=1;}\n\tinline node& New(int &x) {return x?T[x]:(x=++tt,T[x]=(node){0,0,0});}\n\tinline void allc(int &x,int dc) {New(x),T[x].tg=max(T[x].tg,dc);}\n\tinline void pushdw(int x) {allc(T[x].ls,T[x].tg),allc(T[x].rs,T[x].tg);}\n\tinline void modif(int &x,int l,int r,int dl,int dr,int dc)\n\t{\n\t\tif(l>dr||dl>r) return;else if(dl<=l&&r<=dr) return allc(x,dc);else pushdw(x);\n\t\tmodif(T[x].ls,l,(l+r)>>1,dl,dr,dc),modif(T[x].rs,((l+r)>>1)+1,r,dl,dr,dc);\n\t}\n\tinline int query(int x,int l,int r,int dw)\n\t{\n\t\tif(!x) return 0;else if(l==r) return T[x].tg;\n\t\tif(dw<=((l+r)>>1)) return max(T[x].tg,query(T[x].ls,l,(l+r)>>1,dw));\n\t\telse return max(T[x].tg,query(T[x].rs,((l+r)>>1)+1,r,dw));\n\t}\n}L,U;int n,m;\nint main()\n{\n\tset<int>st;for(read(n),read(m);m--;)\n\t{\n\t\tint x,y;char ch[5];read(y),read(x),scanf(\"%s\",ch);\n\t\tif(st.count(x)) {puts(\"0\");continue;}else st.insert(x);\n\t\tif(*ch=='U')\n\t\t{\n\t\t\tint rs=L.query(L.rt,1,n,y);printf(\"%d\\n\",x-rs);\n\t\t\tU.modif(U.rt,1,n,rs,x,y);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint rs=U.query(U.rt,1,n,x);printf(\"%d\\n\",y-rs);\n\t\t\tL.modif(L.rt,1,n,rs,y,x);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1627710010,
        "uid": 44805,
        "name": "Leap_Frog",
        "ccfLevel": 7,
        "title": "CF555C Case of Chocolate \u9898\u89e3"
    },
    {
        "content": "### \u601d\u8def\uff1a\n\n$\\quad$\u8bf4\u5b9e\u8bdd\uff0c\u7b2c\u4e00\u773c\u770b\u8fd9\u9898\u60f3\u5230\u7684\u662f\u7ebf\u6bb5\u6811\uff0c\u4f46\u65e0\u5948 $1<=n<=10^\n9$ \uff0c\u79bb\u6563\u5316\u6709\u70b9\u590d\u6742\uff0c\u52a8\u6001\u5f00\u70b9\u53c8\u4e0d\u4f1a\uff0c\u6240\u4ee5\u4f7f\u7528\u4e86\u4e00\u79cd\u79bb\u7ebf\u505a\u6cd5\uff0c\u8dd1\u7684\u8fd8\u8d3c\u5feb(\u5927\u96fe\n\n$\\quad$\u73b0\u5c06\u6240\u6709\u64cd\u4f5c\u5b58\u8d77\u6765\uff0c $dir$ \u8868\u793a\u65b9\u5411\uff0c $1$ \u4e3a\u4e0a\uff0c $0$ \u4e3a\u5de6\uff0c\u7136\u540e\u6309 $x$ \u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c $t$ (\u65f6\u95f4)\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f(\u6211\u7b2c\u4e00\u6b21 $WA$ \u5c31\u662f\u8fd9\u4e2a\u539f\u56e0)\n\n```cpp\nstruct node{\n  int x,y,t,dir;\n}a[N],b[N];\nil bool cmp(node a1,node a2){return a1.x==a2.x?a1.t<a2.t:a1.x<a2.x;}\n\n  for(re i=1,x,y;i<=m;i++)\n    {\n      x=read(),y=read();ch=getchar();\n      if(ch=='U')a[i]=(node){x,y,i,1};\n      else a[i]=(node){x,y,i,0};\n     }\n  sort(a+1,a+m+1,cmp);\n```\n$\\quad$\u7136\u540e\u8003\u8651\u6bcf\u4e00\u79cd\u60c5\u51b5\uff0c\u663e\u7136\uff0c\u5411\u5de6\u7684\u64cd\u4f5c\u4f1a\u88ab\u524d\u9762\u7684\u5411\u4e0a\u7684\u64cd\u4f5c\u5f71\u54cd(\u524d\u9762\u7684\u6307 $x$ \u5c0f\u4e8e $TA$ \uff0c\u4e14\u65f6\u95f4 $t$ \u4e5f\u5c0f\u4e8e $TA$ \u7684)\uff0c\u5411\u4e0a\u7684\u64cd\u4f5c\u4f1a\u88ab\u540e\u9762\u7684\u5411\u5de6\u7684\u64cd\u4f5c\u5f71\u54cd(\u540e\u9762\u6307 $x$ \u5927\u4e8e $TA$ \uff0c\u4f46\u65f6\u95f4 $t$ \u5c0f\u4e8e $TA$ \u7684)\uff0c\u6240\u4ee5\u53ef\u4ee5\u53d1\u73b0\u76f8\u90bb\u7684\u5411\u4e0a\u7684\u64cd\u4f5c\u548c\u5411\u5de6\u7684\u64cd\u4f5c\u4f1a\u4e92\u76f8\u5f71\u54cd(\u76f8\u90bb\u662f\u6307x\u76f8\u90bb)\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u5c31\u8981\u5224\u65ad\u5b83\u4eec\u7684\u65f6\u95f4\u5148\u540e\u4e86\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/aryy231z.png)\n![](https://cdn.luogu.com.cn/upload/image_hosting/8h36goah.png)\n\n$\\quad$\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u53d1\u73b0\u53ea\u6709\u5411\u4e0a\u7684\u64cd\u4f5c\u5728\u524d\uff0c\u624d\u6709\u53ef\u80fd\u5bf9\u540e\u9762\u7684\u5411\u5de6\u7684\u64cd\u4f5c\u4ea7\u751f\u5f71\u54cd(\u5148\u4e0d\u8003\u8651\u65f6\u95f4)\uff0c\u53e6\u5916\u5411\u4e0a\u7684\u4e5f\u53ea\u88ab\u540e\u9762\u7684\u7b2c\u4e00\u4e2a\u5411\u5de6\u7684\u6240\u5f71\u54cd\uff0c\u6240\u4ee5\u5411\u4e0a\u7684\u6682\u65f6\u65e0\u6cd5\u5f97\u51fa\u7b54\u6848\uff0c\u5148\u653e\u8fdb\u4e00\u4e2a\u6808\u4e2d\u5b58\u50a8\uff0c\u53ea\u6709\u9047\u5230\u5411\u5de6\u7684\u5c31\u628a\u6808\u4e2d\u7684\u65f6\u95f4\u5927\u4e8e $TA$ \u7684\u66f4\u65b0\u7b54\u6848\uff0c\u9047\u5230\u4e00\u4e2a\u65f6\u95f4\u5c0f\u4e8e $TA$ \u7684\u5c31\u88ab\u5835\u4f4f\u4e86\uff0c\u8fd9\u65f6\u5019\u5c31\u66f4\u65b0\u5b83\u81ea\u5df1\u7684\u7b54\u6848\u3002(\u8fd9\u91cc\u7684 $TA$ \u6307\u7684\u662f\u5411\u5de6\u7684\u64cd\u4f5c)\n\n$\\quad$\u73b0\u5728\u6765\u6a21\u62df\u4e00\u4e2a\u6570\u636e\u6765\u7406\u89e3\u4e00\u4e0b\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/yvb790ad.png)\n\n$\\quad$\u5148\u6392\u5e8f\uff0c\u5bf9\u4e8e\u64cd\u4f5c $4$ \uff0c\u6b64\u65f6\u6808\u662f\u7a7a\u7684\uff0c\u76f4\u63a5\u66f4\u65b0\u7b54\u6848\uff0c\u5bf9\u4e8e\u64cd\u4f5c $6$ \u3001\u64cd\u4f5c $1$ \u548c\u64cd\u4f5c $5$ \uff0c\u76f4\u63a5\u5b58\u8fdb\u6808\u91cc\uff0c\u7b49\u5230\u64cd\u4f5c $3$ \u65f6\u5f00\u59cb\u9000\u6808\uff0c\u5148\u6bd4\u8f83\u6808\u9876\u7684\u65f6\u95f4\uff0c\u66f4\u65b0\u64cd\u4f5c $5$ \u7684\u65f6\u95f4\uff0c\u5c06 $5$ \u9000\u51fa\uff0c\u7136\u540e\u548c\u64cd\u4f5c $1$ \u6bd4\u8f83\uff0c\u505c\u6b62\u9000\u6808\uff0c\u66f4\u65b0\u64cd\u4f5c $3$ \u672c\u8eab\u7684\u7b54\u6848\uff0c\u6700\u540e\u5c06\u64cd\u4f5c $2$ \u538b\u8fdb\u6808\u4e2d\uff0c\u5faa\u73af\u7ed3\u675f\uff0c\u5c06\u6808\u4e2d\u5143\u7d20\u5168\u90e8\u9000\u51fa\uff0c\u8fd9\u4e9b\u628a\u4e00\u5217\u7684\u5de7\u514b\u529b\u90fd\u5403\u5149\u4e86\u3002\n\n$\\quad$\u5982\u679c\u8fd8\u4e0d\u7406\u89e3\u5c31\u770b\u770b\u5b8c\u6574\u4ee3\u7801\u5427\uff0c\u9644\u5e26\u6ce8\u91ca\u3002\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\n#define re register int\n#define int long long\n#define il inline\nil int read()\n{\n  int x=0,f=1;char ch=getchar();\n  while(!isdigit(ch)&&ch!='-')ch=getchar();\n  if(ch=='-')f=-1,ch=getchar();\n  while(isdigit(ch))x=(x<<1)+(x<<3)+ch-'0',ch=getchar();\n  return x*f;\n}\nil void print(int x)\n{\n  if(x<0)putchar('-'),x=-x;\n  if(x/10)print(x/10);\n  putchar(x%10+'0');\n}\nconst int N=2e5+5;\nint n,m,ans[N],tot;\nstruct node{\n  int x,y,t,dir;\n}a[N],b[N];\nil bool cmp(node a1,node a2){return a1.x==a2.x?a1.t<a2.t:a1.x<a2.x;}//\u6ce8\u610f\nsigned main()\n{\n  n=read();m=read();char ch;\n  for(re i=1,x,y;i<=m;i++)\n    {\n      x=read(),y=read();ch=getchar();\n      if(ch=='U')a[i]=(node){x,y,i,1};//dir=1\u8868\u793a\u5411\u4e0a\uff0cUp\n      else a[i]=(node){x,y,i,0};//dir=0\u8868\u793a\u5411\u5de6\uff0cLeft\n    }\n  sort(a+1,a+m+1,cmp);//\u6392\u5e8f\n  b[0]=(node){0,n+1,0,1};//\u5904\u7406\u8fb9\u754c\n  for(re i=1;i<=m;i++)\n    {\n      if(a[i].x==a[i-1].x&&a[i].y==a[i-1].y)continue;//\u5982\u679c\u9047\u5230\u76f8\u540c\u7684\u5c31\u8df3\u8fc7\uff0c\u540e\u9762\u7684\u4e00\u4e2a\u5de7\u514b\u529b\u90fd\u5403\u4e0d\u5230\n      if(a[i].dir)b[++tot]=a[i];\n      else {\n\twhile(b[tot].t>a[i].t){//\u6761\u4ef6\uff1a\u65f6\u95f4\u66f4\u5927\n\t  ans[b[tot].t]=b[tot].y-a[i].y;//\u66f4\u65b0\u7b54\u6848\n\t  tot--;//\u9000\u6808\n\t}\n\tans[a[i].t]=a[i].x-b[tot].x;//\u4e0d\u80fd\u518d\u9000\u6808\u65f6\uff0c\u66f4\u65b0\u81ea\u5df1\u7684\u7b54\u6848\n      }\n    }\n  while(tot){\n    ans[b[tot].t]=b[tot].y;//\u5c06\u8fd8\u5728\u6808\u91cc\u7684\u9000\u51fa\u6765\n    tot--;\n  }\n  for(re i=1;i<=m;i++)print(ans[i]),putchar('\\n');\n  return 0;\n}\n```",
        "postTime": 1605613613,
        "uid": 109220,
        "name": "Farkas_W",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF555C \u3010Case of Chocolate\u3011"
    },
    {
        "content": "\u89c2\u5bdf\u6837\u4f8b\uff0c\u53d1\u73b0\u683c\u5b50\u88ab\u5403\u4e4b\u540e\u4f1a\u88ab\u5206\u5272\u6210\u8fd9\u6837\u51e0\u79cd\u5f62\u72b6\uff1a\n```cpp\n1. \u8ddf\u539f\u6765\u957f\u5f97\u4e00\u6837\n# # # # #\n# # # # \n# # #\n# #\n#\n-----------\n\n2.1 \u6bd4\u539f\u6765\u591a\u51fa\u4e00\u5757\uff08\u524d\u51e0\u884c\uff09\uff1a\n# # # # #\n# # # # #\n# # # # #\n# # # #\n# # #\n# #\n#\n-----------\n\n2.2 \u6bd4\u539f\u6765\u591a\u51fa\u4e00\u5757\uff08\u524d\u51e0\u5217\uff09\uff1a\n\n# # # # # #\n# # # # #\n# # # #\n# # #\n-----------\n\n3. \u6bd4\u539f\u6765\u591a\u51fa\u4e24\u5757\uff1a\n# # # # # # #\n# # # # # # #\n# # # # # # #\n# # # # # #\n# # # # #\n# # # #\n# # #\n-----------\n\n4. \u67d0\u4e9b\u77e9\u5f62\uff0c\u80af\u5b9a\u4e0d\u4f1a\u518d\u88ab\u5403\u5230\n```\n\n\u8fd9\u6837\u4e00\u6765\uff0c\u4e00\u5757\u533a\u57df\u5c31\u53ef\u4ee5\u7528\u56db\u4e2a\u91cf\u6765\u8868\u793a\uff1a\u5de6\u53f3\u8fb9\u754c\uff0c\u5411\u4e0a\u548c\u5411\u5de6\u5ef6\u4f38\u7684\u957f\u5ea6\n\n\u7528set\u7ef4\u62a4\u5373\u53ef\uff1a\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <set>\n\nusing namespace std;\n\nint n, m, ans;\n\nclass Squares\n{\npublic:\n    int l, r;\n    int len_l, len_u;\n    Squares()\n    {\n        l = r = 0;\n        len_l = len_u = 0;\n    }\n    Squares(int _l, int _r, int _len_l, int _len_u)\n    {\n        l = _l, r = _r;\n        len_l = _len_l, len_u = _len_u;\n    }\n    bool operator < (const Squares &b)const\n    {\n        return r < b.r;\n    }\n} a, res, nxt;\n\nset<Squares> s;\nset<Squares>::iterator it;\n\ninline int read()\n{\n    char ch = getchar();\n    int ret = 0, f = 1;\n    while (ch > '9' || ch < '0')\n    {\n        if (ch == '-')\n            f = -f;\n        ch = getchar();\n    }\n    while (ch >= '0' && ch <= '9')\n        ret = ret * 10 + ch - '0', ch = getchar();\n    return ret * f;\n}\n\nint main()\n{\n    // freopen(\"test.in\", \"r\", stdin);\n    // freopen(\"test.out\", \"w\", stdout);\n    n = read(), m = read();\n    res = Squares(1, n, 0, 0);\n    s.insert(res);\n    while (m--)\n    {\n        int x = read(), y = read();\n        char ch = getchar();\n        while (ch != 'U' && ch != 'L')\n            ch = getchar();\n        a = Squares(x, x, 0, 0);\n        it = s.lower_bound(a);\n        if (it == s.end() || it->l > x || it->r < x)\n        {\n            printf(\"0\\n\");\n            continue;\n        }\n        res = *it;\n        s.erase(it);\n        if (ch == 'U')\n        {\n            ans = res.r - x + 1 + res.len_u;\n            printf(\"%d\\n\", ans);\n            if (x != res.l)\n            {\n                nxt = Squares(res.l, x - 1, res.len_l, ans);\n                s.insert(nxt);\n            }\n            if (x != res.r)\n            {\n                nxt = Squares(x + 1, res.r, 0, res.len_u);\n                s.insert(nxt);\n            }\n        }\n        else\n        {\n            ans = x - res.l + 1 + res.len_l;\n            printf(\"%d\\n\", ans);\n            if (x != res.l)\n            {\n                nxt = Squares(res.l, x - 1, res.len_l, 0);\n                s.insert(nxt);\n            }\n            if (x != res.r)\n            {\n                nxt = Squares(x + 1, res.r, ans, res.len_u);\n                s.insert(nxt);\n            }\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1553909884,
        "uid": 32831,
        "name": "\u5439\u96ea\u5439\u96ea\u5439",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF555C \u3010Case of Chocolate\u3011"
    },
    {
        "content": "\u6ce8\u610f\u5230\u8fd9\u73a9\u610f\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u4e2a\u7c7b\u4f3c\u533a\u95f4\u67d3\u8272\u7684\u4e1c\u897f\uff0c\u8003\u8651\u7528\u4e00\u68f5 ODT \u72b6\u7269\u7ef4\u62a4\u82e5\u5e72\u6b21\u64cd\u4f5c\u540e\u6bcf\u4e2a\u8fd8\u53ef\u4ee5\u586b\u7684\u5757\u7684\u60c5\u51b5\u3002\n\n\u6ce8\u610f\u5230\u6bcf\u4e2a\u5757\u90fd\u662f\u9636\u68af\u72b6\u7269\uff0c\u5373\uff1a\n\n- \u5de6\u4e0a\u89d2\u662f\u4e00\u4e2a\u5750\u6807 $(x, y)$\u3002\n- \u53f3\u4e0b\u89d2\u4f1a\u51fa\u73b0\u4e00\u4e9b\u5b8c\u6574\u7684\u9636\u68af\uff0c\u8bbe\u5176\u533a\u95f4\u4e3a $[l, r]$\u3002\n- \u4e0d\u96be\u53d1\u73b0\u6240\u6709 $[l, r]$ \u4e0d\u4ea4\u3002\n\n\u73b0\u5728\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u56db\u5143\u7ec4 $(l, r, x, y)$ \u63cf\u8ff0\u8fd9\u4e2a\u53ef\u4ee5\u8bbf\u95ee\u5230\u7684\u8fde\u7eed\u6bb5\u3002\n\n\u521d\u59cb\u6211\u4eec\u653e\u5165\u4e00\u4e2a\u8fde\u7eed\u6bb5 $(1, n, 1, 1)$\u3002\u6bcf\u6b21\u64cd\u4f5c\u65f6\u6211\u4eec\u5148\u627e\u51fa\u4e00\u4e2a\u6700\u5927\u7684 $(l, r, x, y)$ \u4f7f\u5f97 $l \\leq x_i \\leq r$\u3002\u6b64\u65f6\u6211\u4eec\u5206\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\uff1a\n\n1. \u5411\u5de6\u8d70\n\n\u6b64\u65f6\u7b54\u6848\u4e3a $x_i - x + 1$\uff0c\u653e\u5165 $(l, x_i - 1, x, y_i + 1), (x_i + 1, r, x, y)$\u3002\n\n2. \u5411\u4e0a\u8d70\n\n\u6b64\u65f6\u7b54\u6848\u4e3a $y_i - y + 1$\uff0c\u653e\u5165 $(l, x_i - 1, x, y), (x_i + 1, r, x_i + 1, y)$\u3002\n\nset \u7ef4\u62a4\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(q \\log q)$\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <set>\n#include <cstdio>\n\nusing namespace std;\n\ntypedef struct Node_tag {\n\tint l;\n\tint r;\n\tint x;\n\tint y;\n\tNode_tag(){}\n\tNode_tag(int l_, int r_, int x_, int y_){\n\t\tl = l_;\n\t\tr = r_;\n\t\tx = x_;\n\t\ty = y_;\n\t}\n} Node;\n\nchar op[7];\nset<Node> s;\n\nbool operator <(const Node a, const Node b){\n\tif (a.l != b.l) return a.l < b.l;\n\tif (a.r != b.r) return a.r < b.r;\n\tif (a.x != b.x) return a.x < b.x;\n\treturn a.y < b.y;\n}\n\ninline void insert(Node x){\n\tif (x.l <= x.r) s.insert(x);\n}\n\nint main(){\n\tint n, q;\n\tscanf(\"%d %d\", &n, &q);\n\ts.insert(Node(1, n, 1, 1));\n\tfor (int i = 1; i <= q; i++){\n\t\tint x, y, ans;\n\t\tscanf(\"%d %d %s\", &x, &y, &op[1]);\n\t\tif (s.empty()){\n\t\t\tans = 0;\n\t\t} else {\n\t\t\tset<Node>::iterator it = --s.upper_bound(Node(x, 0x7fffffff, 0, 0));\n\t\t\tif (it == s.end()){\n\t\t\t\tans = 0;\n\t\t\t} else {\n\t\t\t\tNode cur = *it;\n\t\t\t\tif (cur.l <= x && x <= cur.r){\n\t\t\t\t\ts.erase(cur);\n\t\t\t\t\tif (op[1] == 'L'){\n\t\t\t\t\t\tans = x - cur.x + 1;\n\t\t\t\t\t\tinsert(Node(cur.l, x - 1, cur.x, y + 1));\n\t\t\t\t\t\tinsert(Node(x + 1, cur.r, cur.x, cur.y));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tans = y - cur.y + 1;\n\t\t\t\t\t\tinsert(Node(cur.l, x - 1, cur.x, cur.y));\n\t\t\t\t\t\tinsert(Node(x + 1, cur.r, x + 1, cur.y));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tans = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1678093832,
        "uid": 201007,
        "name": "Leasier",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF555C \u3010Case of Chocolate\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF555C)\n## \u601d\u8def\n\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u5165\u95e8\u9898\u3002\n\n\u9996\u5148\uff0c\u8fd9\u4e2a\u9898\u663e\u7136\u9700\u8981\u7ebf\u6bb5\u6811\u505a\uff0c\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u6bcf\u4e2a\u884c\u548c\u5217\u6700\u53f3\u8fb9/\u6700\u4e0b\u8fb9\u80fd\u8fde\u7eed\u5403\u7684\u70b9\u3002\u6bcf\u5403\u4e00\u6b21\u4fee\u6539\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u4f46\u662f $n \\le 10^9$\uff0c\u7528\u4f20\u7edf\u7684\u7ebf\u6bb5\u6811\u6765\u505a\u7a7a\u95f4\u7206\u70b8\uff0c\u5927\u7ea6\u9700\u8981 $4 \\times 10^9$ \u7684\u7a7a\u95f4\uff0c\u6240\u4ee5\u6211\u4eec\u9009\u62e9\u52a8\u6001\u5f00\u70b9\u3002\n\n\u52a8\u6001\u5f00\u70b9\u7684\u539f\u7406\u5c31\u662f\u6bcf\u6b21\u7ebf\u6bb5\u6811\u4fee\u6539\u7684\u65f6\u5019\u81f3\u591a\u8bbf\u95ee $2 \\times \\log n$ \u4e2a\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u8bb0\u5f55\u5171 $n \\log n$ \u4e2a\u70b9\u5373\u53ef\u3002\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint const N=1e7+5e6+10;\n#define lls long long\nunordered_map< int,unordered_map<int,int> >map1,map2;//map \u7528\u6765\u8bb0\u5f55\u8fd9\u4e2a\u70b9\u662f\u5426\u88ab\u5403\u8fc7\nint cnt=1;\nstruct node{int l,r,x;};\nstruct Segment_Tree{\n\t#define mid ((l+r)>>1)\n\tnode c[N];int lazy[N];\n\tinline void pushdown(int x){\n\t\tif (!c[x].l) c[x].l=++cnt;//\u5de6\u513f\u5b50\u6ca1\u6709\uff0c\u5f00\u4e00\u4e2a\u65b0\u70b9\n\t\tif (!c[x].r) c[x].r=++cnt;//\u53f3\u513f\u5b50\u6ca1\u6709\uff0c\u5f00\u4e00\u4e2a\u65b0\u70b9\n\t\tc[c[x].l].x=max(c[c[x].l].x,lazy[x]);\n\t\tc[c[x].r].x=max(c[c[x].r].x,lazy[x]);\n\t\tlazy[c[x].l]=max(lazy[c[x].l],lazy[x]);\n\t\tlazy[c[x].r]=max(lazy[c[x].r],lazy[x]);\n\t\tlazy[x]=0;\n\t}\n\tinline void update(int x,lls l,lls r,lls ll,lls rr,int v){\n\t\tif (ll<=l && r<=rr){c[x].x=max(c[x].x,v);lazy[x]=max(lazy[x],v);return;}\n\t\tpushdown(x);\n\t\tif (ll<=mid){\n\t\t\tif (!c[x].l) c[x].l=++cnt;\n\t\t\tupdate(c[x].l,l,mid,ll,rr,v);\n\t\t\tc[x].x=max(c[x].x,c[c[x].l].x);\n\t\t}\n\t\tif (mid<rr){\n\t\t\tif (!c[x].r) c[x].r=++cnt;\n\t\t\tupdate(c[x].r,mid+1,r,ll,rr,v);\n\t\t\tc[x].x=max(c[x].x,c[c[x].r].x);\n\t\t}\n\t}\n\tinline int query(int x,lls l,lls r,int k){\n\t\tif (l==r) return c[x].x;\n\t\tpushdown(x);\n\t\tif (k<=mid){\n\t\t\tif (c[x].l) return query(c[x].l,l,mid,k);\n\t\t\telse return 0;\n\t\t}\n\t\telse{\n\t\t \tif (c[x].r) return query(c[x].r,mid+1,r,k);\n\t\t\telse return 0;\n\t\t}\n\t}\n}T;\nsigned main(){\n    ios::sync_with_stdio(false);\n    cin.tie(0),cout.tie(0);\n    lls n,q;cin>>n>>q;\n    while (q--){\n    \tint x,y;cin>>x>>y;int z;swap(x,y);\n    \tchar opt;cin>>opt;\n    \tif (opt=='U'){\n    \t\tif (map1[x][y]){cout<<\"0\\n\";continue;}\n    \t\tmap1[x][y]=1;\n\t\t\tz=x-T.query(1,1,2*n,y);\n\t\t\tcout<<z<<'\\n';if (!z) continue;\n\t\t\tT.update(1,1,2*n,x-z+1+n,x+n,y);\n\t\t}else{\n\t\t\tif (map2[x][y]){cout<<\"0\\n\";continue;}\n    \t\tmap2[x][y]=1;\n\t\t\tz=y-T.query(1,1,2*n,x+n);\n\t\t\tcout<<z<<'\\n';if (!z) continue;\n\t\t\tT.update(1,1,2*n,y-z+1,y,x);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1663571500,
        "uid": 253608,
        "name": "Tx_Lcy",
        "ccfLevel": 7,
        "title": "CF555C Case of Chocolate"
    },
    {
        "content": "n\u5f88\u5927\uff0c\u6211\u4eec\u9700\u8981\u79bb\u6563\u5316\n\n\u7136\u540e\u6211\u4eec\u7ef4\u62a4\u6bcf\u4e00\u884c\u548c\u6bcf\u4e00\u5217\u7684\u6700\u53f3\u8fb9\uff08\u5bf9\u4e8e\u884c\u7684\u60c5\u51b5\uff09\uff0c\u6216\u6700\u53f3\u8fb9\uff08\u5bf9\u4e8e\u5217\u7684\u60c5\u51b5\uff09\u7684\u88ab\u5403\u7684\u5de7\u514b\u529b\n\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u8f6c\u6362\u4e3a\u533a\u95f4\u4fee\u6539\uff0c\u5355\u70b9\u6c42\u503c\u95ee\u9898\u4e86\n\n\u5f00\u4e24\u73c2\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\n\n\u5177\u4f53\u6765\u8bf4\u5982\u4e0b\n\n\uff08\u4ee5U\u64cd\u4f5c\u4e3a\u4f8b\uff0cL\u64cd\u4f5c\u540c\u7406\uff09\n\n\u627e\u5230\u5728x\u5217\u7684\u6700\u5927\u884c\u53f7\u88ab\u5403\u5de7\u514b\u529b\u7684\u884c\u53f7p\n\n\u5c06\u7b2cp+1\uff5ey\u7684\u884c \u5bf9x\u53d6max\n\n\u540c\u65f6\u5c06\u7b2cx\u5217\u8d4b\u503c\u4e3ay // \u6700\u521d\u6211\u5fd8\u8bb0\u5199\u8fd9\u4e2a\u4e86WA on 4\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define MAXN 400005\n#define lc(i) (i<<1)\n#define rc(i) ((i<<1)|1)\n\nint n,m;\nstruct wen {\n\tint x,y,opt;\n}a[MAXN];\nint u[MAXN];\n\nstruct aa {\n\tint l,r,x;\n}c[MAXN<<2],d[MAXN<<2];\n\nvoid jianshu(aa *c,int i,int l,int r) {\n\tint mid = (l+r)>>1;\n\tc[i].l = l;\n\tc[i].r = r;\n\tif(l == r) {\n\t\treturn;\n\t}\n\tjianshu(c,lc(i),l,mid);\n\tjianshu(c,rc(i),mid+1,r);\n}\n\nnamespace lsh//\u79bb\u6563\u5316\n{\n\tmap<int,int>p;\n\tint t[MAXN],f[MAXN];\n\tvoid QAQ()\n\t{\n\t\tint nn = 0;\n\t\tfor(int i = 1; i <= m; i ++) {\n\t\t\tnn ++; t[nn] = a[i].x;\n\t\t\tnn ++; t[nn] = a[i].y;\n\t\t}\n\t\tsort(t+1,t+nn+1);\n\t\tfor(int i = 1; i <= nn; i ++)\n\t\tif(t[i] == t[i-1]) f[i] = f[i-1];\n\t\telse f[i] = f[i-1]+1;\n\t\tfor(int i = 1; i <= nn; i ++) {\n\t\t\tp[t[i]] = f[i];\n\t\t\tu[f[i]] = t[i];\n\t\t}\n\t\tn = f[nn];\n\t\tint i = 1;\n\t\tfor(i = 1; i <= m; i ++) {\n\t\t\ta[i].x = p[a[i].x];\n\t\t\ta[i].y = p[a[i].y];\n\t\t}\n\t}\n}\n\nvoid rd()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i = 1; i <= m; i ++) {\n\t\tint x,y;\n\t\tstring opt;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tcin >> opt;\n\t\ta[i].x = x;\n\t\ta[i].y = y;\n\t\tif(opt == \"U\") a[i].opt = 1;\n\t\telse a[i].opt = 2;\n\t}\n\tlsh::QAQ();\n}\n\nvoid gai(aa *c,int i,int l,int r,int x)\n{\n\tif(l <= c[i].l && c[i].r <= r) {\n\t\tc[i].x = max(c[i].x,x);\n\t\treturn;\n\t}\n\tif(l > c[i].r || r < c[i].l) return;\n\tgai(c,lc(i),l,r,x);\n\tgai(c,rc(i),l,r,x);\n}\n\nint qiu(aa *c,int i,int l) {\n\tif(c[i].l == c[i].r) return c[i].x;\n\tint mid = (c[i].l + c[i].r)>>1;\n\tif(l > mid) return max(c[i].x , qiu(c,rc(i),l));\n\telse  return max(c[i].x , qiu(c,lc(i),l));\n}\n\nint main()\n{\n\trd();\n\tjianshu(c,1,1,n);\n\tjianshu(d,1,1,n);\n\tfor(int i = 1; i <= m; i ++)\n\t{\n\t\tif(a[i].opt == 1) {\n\t\t\tint p = qiu(d,1,a[i].x);\n\t\t\tprintf(\"%d\\n\",u[a[i].y] - u[p]);\n\t\t\tgai(c,1,p+1,a[i].y,a[i].x);\n\t\t\tgai(d,1,a[i].x,a[i].x,a[i].y);\n\t\t} else {\n\t\t\tint p = qiu(c,1,a[i].y);\n\t\t\tprintf(\"%d\\n\",u[a[i].x] - u[p]);\n\t\t\tgai(d,1,p+1,a[i].x,a[i].y);\n\t\t\tgai(c,1,a[i].y,a[i].y,a[i].x);\n\t\t}\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1553928048,
        "uid": 88256,
        "name": "LJC00753",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF555C \u3010Case of Chocolate\u3011"
    },
    {
        "content": "\u770b\u5230\u6ca1\u6709\u4eba\u7528map\u6765\u5199 \u90a3\u672c**\u849f\u84bb**\u6765\u5199\u4e00\u4e2a\n\nmap\u7684\u601d\u8def\u5176\u5b9e\u7b80\u5355\u7c97\u66b4\uff1a\n\n\u6211\u4eec\u770b\u4e00\u4e0b\u6837\u4f8b\u56fe\u7247\uff1a\n\n![lg](https://cdn.luogu.com.cn/upload/vjudge_pic/CF555C/68417759be7789b5dc33e557d3b01b391502988d.png)\n\n- ### \u7eb5\u5411\u64cd\u4f5c\n\n\u73b0\u5728\u76ef\u7262\u53f3\u8fb9\u90a3\u4e2a\u56fe\u76843\u53f7\u64cd\u4f5c\u770b\uff0c\u4f60\u4f1a\u53d1\u73b0\uff0c3\u53f7\u64cd\u4f5c\u4e0e1\u53f7\u64cd\u4f5c\u6240\u53ef\u4ee5\u5230\u8fbe\u7684\u9ad8\u5ea6\u4e00\u6837\u3002\n\n\u518d\u76ef\u72626\u53f7\u64cd\u4f5c\u770b\uff0c\u53c8\u4f1a\u53d1\u73b0\uff0c6\u53f7\u6536\u5230\u6a2a\u7740\u8fc7\u6765\u76844\u53f7\u64cd\u4f5c\u7684\u9650\u5236\uff0c\u53ea\u80fd\u57284\u53f7\u8bf4\u6a2a\u5411\u8fc7\u6765\u7684\u9ad8\u5ea6\u4e4b\u4e0b\u3002\n\n\u7136\u540e\uff0c\u4f60\u4f1a\u60ca\u5947\u7684\u53d1\u73b0\uff0c\u6bcf\u4e00\u6b21\u9650\u5236\u4e00\u6b21\u7eb5\u5411\u64cd\u4f5c\u5403\u6389\u5de7\u514b\u529b\u7684\u70b9\uff0c\u5176\u5b9e\u5728\u5b83\u4e0a\u9762\u7684\u4e00\u4e2a\u4f4d\u7f6e\u6700\u63a5\u8fd1\u5b83\u7684\u64cd\u4f5c\uff0c\u65e0\u8bba\u662f\u4ec0\u4e48\u64cd\u4f5c\u3002\u5982\u679c\u9650\u5236\u5b83\u7684\u662f\u4e00\u4e2a\u6a2a\u5411\u64cd\u4f5c\uff0c\u90a3\u4e48\u4ed6\u7684\u6700\u9ad8\u80fd\u5230\u8fbe\u7684\u5730\u65b9\u4e3a\u5176\u4e4b\u4e0b\u7684\u4e00\u683c\uff1b\u5982\u679c\u4e3a\u7eb5\u5411\u64cd\u4f5c\uff0c\u90a3\u4e48\u4ed6\u7684\u6700\u9ad8\u80fd\u5230\u8fbe\u7684\u5730\u65b9\u5c31\u4e0e\u5b83\u4e00\u6837\u9ad8\u3002\n\n\u8bc1\u660e\u4f5c\u8005\u5c31\u53e3\u80e1\u4e86qwq \u5176\u5b9e\u8fd9\u4e00\u4e2a\u5f88\u597d\u8bc1\u660e\u7684\uff0c\u53ef\u4ee5\u8bf4\u662f\u57fa\u672c\u4e0d\u9700\u8981\u8bc1\u660e\u3002\uff08\u65f6\u95f4\u7d27\u5f20\u5c31\u522b\u770b\u4e86\n\n![lg](https://s2.ax1x.com/2019/06/23/ZCusJI.png)\n\n\u770b\u8fd9\u4e9b\u64cd\u4f5c\uff08\u7f16\u53f7\u4e0d\u662f\u987a\u5e8f \u53ea\u662f\u4f5c\u8005\u65b9\u4fbf\u8bb2\u4e00\u70b9\uff09\n\n\u5982\u679c\u4e00\u6b21\u7eb5\u5411\u64cd\u4f5c\u7684\u4e0a\u9762\u8fd8\u662f\u7eb5\u5411\u64cd\u4f5c\uff0c\u90a3\u4e48\u5c31\u6210\u4e86\u4e00\u4e2a\u7c7b\u4f3c\u9012\u5f52\u7684\u8fc7\u7a0b\u3002\u7eb5\u5411\u64cd\u4f5c\u4e0d\u65ad\u5730\u5bfb\u627e\u6a2a\u5411\u64cd\u4f5c\uff0c\u6bd4\u59822->3\uff0c3->4,\u7136\u540e\u53d1\u73b04\u662f\u4e00\u4e2a\u6a2a\u5411\u64cd\u4f5c\uff0c3\u7684\u9ad8\u5ea6\u5c31\u5b9a\u4e86\uff0c\u7136\u540e2\u4e5f\u968f\u4e4b\u5b9a\u4e86\u3002\u90a3\u4e48\u6211\u4eec\u7b80\u5316\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u76f4\u63a5\u8ba92\u53bb\u7ee7\u627f3\u7684\u9ad8\u5ea6\uff0c\u4e5f\u672a\u5c1d\u4e0d\u53ef\u3002\n\n\u90a3\u5982\u679c\u662f\u6a2a\u5411\u64cd\u4f5c\uff0c\u90a3\u5c31\u76f4\u63a5\u5b9a\u4e86\uff0c\u56e0\u4e3a\u4e00\u4e2a\u6a2a\u5411\u64cd\u4f5c\u4e0a\u9762\u7684\u6a2a\u5411\u64cd\u4f5c\u7edd\u5bf9\u4f1a\u7b14\u4e0b\u9762\u7684\u90a3\u4e2a\u8981\u9ad8\u4e00\u4e9b\uff08\u8df3\u6b65\u8bc1\u660eqwq\uff09\n\n- ### \u6a2a\u5411\u64cd\u4f5c\n\n\u8fd9\u4e2a\u6211\u4e0d\u591a\u8bb2\u4e86 \u4f60\u628a\u56fe\u7247\u8f6c\u4e2a90\u00b0\uff0c\u8fd9\u5c31\u8ddf\u7eb5\u5411\u64cd\u4f5c\u4e00\u6a21\u4e00\u6837\u4e86\u3002\n\n- ### \u7b80\u8ff0\u4e00\u4e0b\u5927\u4f53\u6846\u67b6\n\n1.\u5b9a\u4e49\u4e24\u4e2amap\uff0c\u5206\u522b\u4ee3\u8868l\uff0cu\uff08\u5411\u5de6\u548c\u5411\u4e0a\uff0cleft\uff06up\uff09\n\n2.\u6bcf\u4e00\u6b21\u627e\u5230\u4e00\u4e2a\u64cd\u4f5c\u4e0a\u9762\u7684\u6700\u8fd1\u7684\u4e00\u6b21\u64cd\u4f5c\uff08lower_bound\uff09,\u8fdb\u884c\u64cd\u4f5c\n\n3.\u522b\u5fd8\u4e86\u7279\u5224\u4e00\u4e2a\u5de7\u514b\u529b\u4e5f\u5403\u4e0d\u5230\u7684\u60c5\u51b5\n\n\u4ee3\u7801\u4e0d\u5199\u6ce8\u91ca\u4e86\u89c1\u8c05qwq\n\n\u5e94\u8be5\u597d\u7406\u89e3\u7684~\n\n```cpp\n#include<bits/stdc++.h>\n#define iter map<int,int>::iterator it\n#define lb lower_bound\nusing namespace std;\nmap<int,int> l,u;\nint n,q,ans,x,y;\nchar opt;\nvoid up(){\n    ans=0;\n    iter=u.lb(x);\n\n    if(it==u.end()) ans=y;\n    else ans=y-(it->second);\n\n    printf(\"%d\\n\",ans);\n\n    l[y]=x,u[x]=y-ans;\n}\nvoid left(){\n    ans=0;\n    iter=l.lb(y);\n\n    if(it==l.end()) ans=x;\n    else ans=x-(it->second);\n\n    printf(\"%d\\n\",ans);\n\n    l[y]=x-ans,u[x]=y;\n}\nvoid read(){scanf(\"%d%d\",&x,&y),cin>>opt;}\nvoid out(){puts(\"0\");return;}\nint main(){\n    while(scanf(\"%d%d\",&n,&q)!=EOF){\n        l.clear(),u.clear();\n        while(q--){\n            read();\n            if(opt=='U') u.count(x)?out():up();\n            else l.count(y)?out():left();\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1561254882,
        "uid": 60560,
        "name": "\u9003\u8bfe\u5c0f\u59d0MS",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF555C \u3010Case of Chocolate\u3011"
    }
]