[
    {
        "content": "\u4e00\u5b9a\u4e0d\u662f\u6700\u4f18\uff0c\u4f46\u53ef\u80fd\u662f\u6700\u6e05\u6670\u7684\u89e3\u6cd5\u3002\n\n------\n\n\u9996\u5148\uff0c\u6211\u4eec\u89c9\u5f97\u65cb\u8f6c\u592a\u5947\u602a\u7684\u73af\u6ca1\u6709\u610f\u4e49\u3002\u4e0d\u59a8\u8003\u8651\u53ea\u65cb\u8f6c $2\\times2$ \u77e9\u5f62\uff0c\u8fd9\u6837\u6765\u6784\u9020\u65b9\u6848\u3002\n\n\u7136\u540e\u8003\u8651\u7528\u53ea\u65cb\u8f6c $2\\times2$ \u77e9\u5f62\u7684\u7b56\u7565\u6765\u5904\u7406 $3\\times3$ \u77e9\u9635\u7684\u6392\u5e8f\u3002\n\n\u6392\u5e8f\u7684\u5355\u4f4d\u64cd\u4f5c\u662f\u4ea4\u6362\u4e24\u4e2a\u4f4d\u7f6e\u7684\u503c\u800c\u4e0d\u6539\u53d8\u5176\u5b83\u4f4d\u7f6e\u7684\u503c\u3002\u4e8e\u662f\u6211\u4eec\u8003\u8651\u7528 $2\\times2$ \u77e9\u5f62\u5b9e\u73b0\u4e0a\u8ff0\u4ea4\u6362\u64cd\u4f5c\u3002\n\n\u90a3\u5c31\u641c\u5427\u3002\u641c\u5b8c\u53d1\u73b0\u4ea4\u6362 $3\\times3$ \u77e9\u9635\u4e2d\u4efb\u610f\u4e24\u4e2a\u4f4d\u7f6e\u800c\u4e0d\u6539\u53d8\u5176\u5b83\u4f4d\u7f6e\u7684\u503c\u6700\u591a\u53ea\u9700\u8981\u65cb\u8f6c $5$ \u6b21 $2\\times2$ \u7684\u6b63\u65b9\u5f62\u3002\n\n\u53ea\u8981\u80fd\u505a\u5230\u4ea4\u6362 $3\\times3$ \u4e2d\u4e24\u4e2a\u4f4d\u7f6e\u7684\u503c\uff0c\u90a3\u5c31\u4e00\u5b9a\u80fd\u5904\u7406 $n\\times m$ \u7684\u60c5\u5f62\uff0c\u4e5f\u5373\u53ea\u65cb\u8f6c $2\\times2$ \u77e9\u5f62\u7684\u7b56\u7565\u662f\u53ef\u884c\u7684\u3002\n\n\u73b0\u5728\u8003\u8651\u6b63\u89e3\u3002\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u4ece\u4e0a\u5230\u4e0b\u3001\u4ece\u5de6\u5f80\u53f3\u4f9d\u6b21\u628a\u6bcf\u4e2a\u4f4d\u7f6e\u586b\u5165\u5b83\u5e94\u8be5\u586b\u7684\u6570\u3002\n\n\u5047\u5982\u6bcf\u6b21\u4ea4\u6362\u90fd\u91c7\u53d6 $3\\times3$ \u77e9\u9635\u4e2d\u7684\u65b9\u6cd5\u7684\u8bdd\uff0c\u603b\u6b21\u6570\u662f $20\\times20\\times40\\times5\\times4=320000$ \u7684\u3002\u8d85\u51fa\u592a\u591a\u4e86\uff0c\u6211\u4eec\u9700\u8981\u8d2a\u6c61\u4e00\u4e9b\u3002\n\n\u5047\u8bbe\u6211\u4eec\u73b0\u5728\u8003\u8651\u5230\u4e86\u4f4d\u7f6e $(x,y)$\uff0c\u4e14\u5e94\u8be5\u586b\u5165\u6b64\u4f4d\u7f6e\u7684\u5143\u7d20\u4f4d\u4e8e $(X,Y)$\u3002\u5219\u5e94\u6709\uff08$X>x$\uff09\u6216\uff08$X=x$ \u4f46 $Y>y$\uff09\uff0c\u56e0\u4e3a $(x,y)$ \u524d\u7684\u4f4d\u7f6e\u90fd\u5df2\u7ecf\u5f52\u4f4d\u4e86\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u4e00\u8def\u4e0a\u5927\u90e8\u5206\u4f4d\u7f6e\u90fd\u662f\u6ca1\u6709\u5fc5\u8981\u4f7f\u7528 $3\\times3$ \u77e9\u9635\u7684\uff0c\u76f4\u63a5\u8f6c $2\\times2$ \u5373\u53ef\u3002\u4f46\u8fd9\u9700\u8981\u4fdd\u8bc1\u8be5 $2\\times2$ \u77e9\u9635\u6240\u6709\u5143\u7d20\u90fd\u4e0d\u5728\u5df2\u7ecf\u6392\u597d\u5e8f\u7684\u4f4d\u7f6e\u5185\uff0c\u4e0d\u7136\u4f1a\u6253\u4e71\u5df2\u7ecf\u6392\u597d\u7684\u4f4d\u7f6e\u3002\n\n\u6211\u4eec\u8003\u8651\u9996\u5148\u5c06 $Y$ \u79fb\u5230 $y$\u3002\n\n\u663e\u7136\uff0c\u82e5 $X$ \u4e0d\u5728\u6700\u540e\u4e00\u884c\uff0c\u6211\u4eec\u4e00\u5b9a\u53ef\u4ee5\u901a\u8fc7\u65cb\u8f6c $\\begin{bmatrix}(X,Y)&(X,Y+1)\\\\(X+1,Y)&(X+1,Y+1)\\end{bmatrix}$ \u5b50\u77e9\u9635\u505a\u5230 $Y$ \u53f3\u79fb\u4e00\u4f4d\u3002$Y$ \u5de6\u79fb\u7c7b\u4f3c\u3002\n\n\u82e5 $X$ \u5728\u6700\u540e\u4e00\u884c\uff0c\u4f46 $x$ \u4e0d\u5728\u6700\u540e\u6216\u5012\u6570\u7b2c\u4e8c\u884c\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u5c06 $(X,Y)$ \u5411\u4e0a\u79fb\u52a8\u4e00\u683c\uff0c\u7136\u540e\u4e5f\u7c7b\u4f3c\u5730\u5de6\u79fb\u53f3\u79fb\u5373\u53ef\u3002\n\n\u82e5\u4e0a\u8ff0\u6761\u4ef6\u90fd\u4e0d\u6ee1\u8db3\uff0c\u5373 $X$ \u5728\u6700\u540e\u4e00\u884c\u4e14 $x$ \u5728\u6700\u540e\u6216\u5012\u6570\u7b2c\u4e8c\u884c\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7528\u6700\u4e0a\u9762\u641c\u51fa\u6765\u7684\u201d\u4ea4\u6362 $3\\times3$ \u77e9\u9635\u4e2d\u4efb\u610f\u4e24\u4e2a\u4f4d\u7f6e\u800c\u4e0d\u6539\u53d8\u5176\u5b83\u4f4d\u7f6e\u7684\u503c\u201c\u7684\u7b56\u7565\u6765\u8fdb\u884c\u79fb\u52a8\u3002\n\n\u91cd\u590d\u6267\u884c\u4e0a\u8ff0\u7b56\u7565\uff0c\u663e\u7136\u6700\u540e $Y$ \u4e00\u5b9a\u4f1a\u88ab\u79fb\u5230 $y$\u3002\n\n\u7136\u540e\u8003\u8651\u5c06 $X$ \u79fb\u5230 $x$\u3002\u4e5f\u53ef\u4ee5\u7c7b\u4f3c\u5f97\u5230\u2014\u2014\u8fd9\u91cc\u662f\u5206 $Y$ \u662f\u5426\u5728\u6700\u540e\u4e00\u5217\uff0c\u5982\u679c\u662f\u5219\u91c7\u53d6 $3\\times3$ \u77e9\u9635\u7684\u65b9\u6cd5\uff0c\u4e0d\u662f\u5219\u8f6c $\\begin{bmatrix}(X,Y-1)&(X,Y)\\\\(X+1,Y-1)&(X+1,Y)\\end{bmatrix}$\u3002\n\n\u663e\u7136\u8fd9\u4e48\u64cd\u4f5c\u8fc7\u540e\uff0c\u4e00\u5b9a\u79fb\u5230\u4e86\u5176\u76ee\u6807\u4f4d\u7f6e\u3002\n\n\u4e0b\u9762\u8003\u8651\u5206\u6790\u6b21\u6570\u3002\u663e\u7136\uff0c\u5bf9\u4e8e\u5927\u90e8\u5206\u4f4d\u7f6e\uff0c\u6700\u591a\u53ea\u9700\u8981\u5e38\u89c4\u65cb\u8f6c $40$ \u6b21\uff08\u6a2a\u5411 $20$ \u6b21\uff0c\u7eb5\u5411 $20$ \u6b21\uff09\u5373\u53ef\u5230\u8fbe\u76ee\u6807\u4f4d\u7f6e\u3002$20\\times20\\times40\\times4=64000$\uff0c\u7ef0\u7ef0\u6709\u4f59\u3002\n\n\u5bf9\u4e8e\u6700\u540e\u4e00\u884c\u548c\u6700\u540e\u4e00\u5217\u7684\u4f4d\u7f6e\uff0c\u5176\u53ef\u80fd\u9700\u8981\u8c03\u7528 $3\\times3$ \u77e9\u9635\uff0c\u6bcf\u6b21 $5$ \u6b21\u65cb\u8f6c\u3002\u4f46\u662f\u8fd9\u79cd\u4f4d\u7f6e\u4e0d\u4f1a\u8d85\u8fc7 $40$ \u4e2a\uff0c$40\\times5\\times40\\times 4=32000$\u3002\n\n\u4e8c\u8005\u52a0\u8d77\u6765 $96000$\u3002\u521a\u597d\u6ee1\u8db3 $10^5$ \u7684\u9650\u5236\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define all(x) x.begin(),x.end()\nint dis[362880];\nint rex[8][4]={\n{0,0,1,1},\n{0,0,1,1},\n{1,1,2,2},\n{1,1,2,2},\n{0,1,1,0},\n{0,1,1,0},\n{1,2,2,1},\n{1,2,2,1}\n},rey[8][4]={\n{0,1,1,0},\n{1,2,2,1},\n{0,1,1,0},\n{1,2,2,1},\n{0,0,1,1},\n{1,1,2,2},\n{0,0,1,1},\n{1,1,2,2},\n};\nint appr[362880],las[362880];\nvector<int>trans[3][3][3][3];\nint code(int*a){\n\tint ret=0;\n\tfor(int i=0;i<9;i++){\n\t\tret=1ll*ret*(9-i);\n\t\tfor(int j=i+1;j<9;j++)ret+=(a[i]>a[j]);\n\t}\n\treturn ret;\n}\nvoid deco(int val,int*a){\n\tstatic bool cho[9];\n\tfor(int i=8;i>=0;i--)a[i]=val%(9-i),val/=9-i,cho[i]=false;\n\tfor(int i=0;i<9;i++)for(int j=0;j<9;j++)if(!cho[j]&&!a[i]--){a[i]=j,cho[j]=true;break;}\n}\nvoid print(int*a){for(int i=0;i<3;i++){for(int j=0;j<3;j++)printf(\"%d\",a[i*3+j]);puts(\"\");}puts(\"\");}\nvoid mo(int*a,int id){\n\tint tmp=a[rex[id][3]*3+rey[id][3]];\n\tfor(int i=2;i>=0;i--)a[rex[id][i+1]*3+rey[id][i+1]]=a[rex[id][i]*3+rey[id][i]];\n\ta[rex[id][0]*3+rey[id][0]]=tmp;\n}\nint a[9];\nqueue<int>q;\nvoid bfs(){\n\tmemset(dis,-1,sizeof(dis)),dis[0]=0,q.push(0);\n//\tfor(int i=0;i<8;i++){for(int j=0;j<4;j++)printf(\"(%d,%d)\",rex[i][j],rey[i][j]);puts(\"\");}\n\twhile(!q.empty()){\n\t\tint x=q.front(),y;q.pop();\n//\t\tprintf(\"%d\\n\",x);\n\t\tdeco(x,a);\n//\t\tprint(a);\n\t\tfor(int i=0;i<8;i++){\n\t\t\tmo(a,i);\n\t\t\ty=code(a);\n\t\t\tif(dis[y]==-1)dis[y]=dis[x]+1,las[y]=x,appr[y]=i,q.push(y);\n\t\t\tmo(a,i^4);\n\t\t}\n\t}\n\tfor(int i=0;i<3;i++)for(int j=0;j<3;j++)for(int I=0;I<3;I++)for(int J=0;J<3;J++){\n\t\tif(i==I&&j==J)continue;\n\t\tfor(int k=0;k<9;k++)a[k]=k;\n\t\tswap(a[i*3+j],a[I*3+J]);\n\t\tint x=code(a);\n\t\twhile(x)trans[i][j][I][J].push_back(appr[x]),x=las[x];\n\t\treverse(all(trans[i][j][I][J]));\n//\t\tprintf(\"(%d,%d)->(%d,%d)\",i,j,I,J);for(auto k:trans[i][j][I][J])printf(\"%d \",k);puts(\"\");\n\t}\n}\nint n,m,b[1000];\nvector<vector<int> >v;\nvoid MOVE(vector<int>x,vector<int>y){\n\tvector<int>u;\n\tfor(int i=0;i<4;i++)u.push_back(b[x[i]*m+y[i]]);\n\tv.push_back(u);\n\tint tmp=b[x[3]*m+y[3]];\n\tfor(int i=2;i>=0;i--)b[x[i+1]*m+y[i+1]]=b[x[i]*m+y[i]];\n\tb[x[0]*m+y[0]]=tmp;\n}\nvoid MOVE(int x,int y,int id){\n\tvector<int>X(4),Y(4);\n\tfor(int i=0;i<4;i++)X[i]=rex[id][i]+x,Y[i]=rey[id][i]+y;\n\tMOVE(X,Y);\n}\nvoid MOVE(int x,int y,int X,int Y){\n\tint xx=max(0,max(x,X)-2);\n\tint yy=max(0,max(y,Y)-2);\n\tx-=xx,y-=yy,X-=xx,Y-=yy;\n\tfor(auto i:trans[x][y][X][Y])MOVE(xx,yy,i); \n}\nvoid Rightward(int&x,int&y){\n\tif(x==n-1)MOVE(x,y,x,y+1);\n\telse MOVE({x,x,x+1,x+1},{y,y+1,y+1,y});\n\ty++;\n}\nvoid Leftward(int&x,int&y){\n\tif(x==n-1)MOVE(x,y,x,y-1);\n\telse MOVE({x,x,x+1,x+1},{y,y-1,y-1,y});\n\ty--;\n}\nvoid Upward(int&x,int&y){\n\tif(y==m-1)MOVE(x,y,x-1,y);\n\telse MOVE({x-1,x-1,x,x},{y,y+1,y+1,y});\n\tx--;\n}\nint main(){\n\tbfs();\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=0;i<n;i++)for(int j=0;j<m;j++)scanf(\"%d\",&b[i*m+j]);\n\tfor(int i=0;i<n*m;i++){\n\t\tint x=i/m,y=i%m,X,Y;\n\t\tfor(int j=i;j<n*m;j++)if(b[j]==i+1)X=j/m,Y=j%m;\n\t\tif(x==X&&y==Y)continue;\n\t\tif(X==n-1&&x<n-2)Upward(X,Y);\n\t\twhile(Y<y)Rightward(X,Y);\n\t\twhile(Y>y)Leftward(X,Y);\n\t\twhile(X>x)Upward(X,Y);\n//\t\tfor(int i=0;i<n;i++){for(int j=0;j<m;j++)printf(\"%d \",b[i*m+j]);puts(\"\");}\n\t}\n\tprintf(\"%d\\n\",v.size()); \n\tfor(auto i:v){printf(\"%d \",i.size());for(auto j:i)printf(\"%d \",j);puts(\"\");}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1620550454,
        "uid": 123369,
        "name": "xtx1092515503",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1044E\u3010Grid Sort\u3011"
    },
    {
        "content": "[Codeforces \u9898\u9762\u4f20\u9001\u95e8](https://codeforces.ml/contest/1044/problem/E) & [\u6d1b\u8c37\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1044E)\n\n114514 \u5e74\u524d\u67d0\u57f9\u8bad\u673a\u6784\u8bb2\u7684\u9898\u3002\u6700\u8fd1\u7ec8\u4e8e\u62bd\u7740\u661f\u671f\u5929\u7684\u7a7a\u8865\u6389\u4e86\uff08\n\n\u9996\u5148\u78b0\u5230\u8fd9\u7c7b\u9898\u76ee\u6211\u4eec\u53ef\u4ee5\u5957\u8def\u5316\u5730\u60f3\u5230**\u5f52\u7eb3\u6784\u9020**\uff0c\u5177\u4f53\u6765\u8bf4\u6211\u4eec\u8003\u8651\u9010\u6b65\u5c06\u4e00\u884c / \u4e00\u5217\u4e0a\u7684\u5143\u7d20\u5f52\u4f4d\uff0c\u65b9\u4fbf\u8d77\u89c1\u5982\u679c $n>m$ \u5c31\u5c06\u6700\u540e\u4e00\u884c\u590d\u539f\u6210 $(n-1)m+1,(n-1)m+2,\\cdots,nm$\uff0c\u5426\u5219\u5c06\u6700\u540e\u4e00\u5217\u590d\u539f\u6210 $m,2m,3m,\\cdots,nm$\u3002\n\n\u5982\u4f55\u590d\u539f\u4e00\u884c\u5462\uff1f\u6211\u4eec\u5f88\u660e\u663e\u53ef\u4ee5\u60f3\u5230\u8fd9\u6837\u7684\u7b56\u7565**\u5148\u4e24\u4e2a\u6570\u914d\u5bf9\u4e24\u4e24\u590d\u539f\uff0c\u5982\u679c $m$ \u662f\u5947\u6570\u90a3\u5c31\u6700\u540e\u4e09\u4e2a\u6279\u91cf\u590d\u539f**\uff0c\u5373\uff0c\u6211\u4eec\u5148\u5c06 $(n-1)m+1$ \u653e\u5230 $(1,1)$ \u7684\u4f4d\u7f6e\uff0c\u518d\u5c06 $(n-1)m+2$ \u653e\u5230 $(2,1)$ \u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u7ed5\u4e00\u4e2a\u5927\u5708\u5c06\u5b83\u4eec\u7ed5\u5230 $(n,1)$ \u548c $(n,2)$\uff0c\u7136\u540e\u518d\u5bf9 $(n-1)m+3$ \u548c $(n-1)m+4$ \u505a\u540c\u6837\u7684\u64cd\u4f5c\u5373\u53ef\u3002\u7ed5\u5708\u5708\u8fd9\u4e00\u90e8\u5206\u6700\u65e0\u8111\u7684\u529e\u6cd5\u662f\u5c06\u5305\u542b $(1,1),(2,1),(n,1),(n,2)$ \u7684\u56db\u4e2a\u683c\u5b50\u7684\u6700\u5c0f\u73af\u627e\u5230\u7136\u540e\u4e0d\u65ad\u7ed5\u76f4\u5230 $(n,1),(n,2)$ \u7684\u4f4d\u7f6e\uff0c\u4f46\u8fd9\u6837 $\\sum |S|$ \u662f\u56db\u65b9\u7684\u3002\u66f4\u4f18\u7684\u529e\u6cd5\u662f\u53ea\u7ed5 $2\\times 2$ \u7684\u73af\uff0c\u8fd9\u6837 $\\sum |S|$ \u5c31\u53d8\u6210\u4e09\u65b9\u4e86\uff0c\u4e0d\u52a0\u5361\u5e38\u901a\u8fc7\u6b64\u9898\u7684\u9650\u5236\u65e0\u538b\u529b\u3002\n\n\u6ce8\u610f\u5230\u6211\u4eec\u4e0a\u9762\u7684\u5f52\u7eb3\u5bf9\u4e8e $n\\le 3,m\\le 3$ \u662f\u884c\u4e0d\u901a\u7684\uff0c\u800c\u6b64\u9898 $n,m$ \u4e0b\u754c\u521a\u597d\u662f $3$\uff0c\u56e0\u6b64\u6211\u4eec\u8fd8\u9700\u8981\u89e3\u51b3 $n=3,m=3$ \u7684\u95ee\u9898\uff0c\u8fd9\u79cd\u60c5\u51b5\u60f3\u600e\u4e48\u505a\u5c31\u600e\u4e48\u505a\uff0c\u611f\u89c9\u4e0a DFS/BFS \u90fd\u662f\u53ef\u4ee5\u7684\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $9!\u00b79^2$\uff0c\u4f46\u662f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u6211\u7684 DFS \u8981 4w \u591a\u6b65\u6240\u4ee5\u5c31\u5199\u4e86 BFS\u3002\n\n\u8dd1\u5f97\u5de8\u6162\u4e14\u5199\u5f97\u5de8\u5783\u573e\u7684\u4ee3\u7801\uff0c\u771f\u5fc3\u4e0d\u5efa\u8bae\u770b\uff1a\n\n```cpp\nconst int MAXN = 20;\nvector<vector<int> > ans;\nint n, m, a[MAXN + 2][MAXN + 2], ought[MAXN + 2][MAXN + 2];\nvoid rotate() {\n\tstatic int tmp_a[MAXN + 2][MAXN + 2], tmp_ought[MAXN + 2][MAXN + 2];\n\tmemset(tmp_a, 0, sizeof(tmp_a)); memset(tmp_ought, 0, sizeof(tmp_ought));\n\tfor (int i = 1; i <= n; i++) for (int j = 1; j <= m; j++)\n\t\ttmp_a[j][i] = a[i][j], tmp_ought[j][i] = ought[i][j];\n\tswap(n, m);\n\tmemset(a, 0, sizeof(a)); memset(ought, 0, sizeof(ought));\n\tfor (int i = 1; i <= n; i++) for (int j = 1; j <= m; j++)\n\t\ta[i][j] = tmp_a[i][j], ought[i][j] = tmp_ought[i][j];\n}\nvoid opt(vector<pii> vec) {\n\tvector<int> A; for (pii p : vec) A.pb(a[p.fi][p.se]); ans.pb(A);\n\tstatic int b[MAXN + 2][MAXN + 2];\n\tfor (int i = 1; i <= n; i++) for (int j = 1; j <= m; j++) b[i][j] = a[i][j];\n\tfor (int i = 0; i < vec.size(); i++) b[vec[(i + 1) % vec.size()].fi][vec[(i + 1) % vec.size()].se] = a[vec[i].fi][vec[i].se];\n\tfor (int i = 1; i <= n; i++) for (int j = 1; j <= m; j++) a[i][j] = b[i][j];\n}\nvoid work(int v, int x, int y) {\n\tint nx = 0, ny = 0;\n\tfor (int i = 1; i <= n; i++) for (int j = 1; j <= m; j++) if (a[i][j] == v) nx = i, ny = j;\n\twhile (nx > x) {\n\t\tif (ny != m) opt(vector<pii>{mp(nx, ny), mp(nx - 1, ny), mp(nx - 1, ny + 1), mp(nx, ny + 1)});\n\t\telse opt(vector<pii>{mp(nx, ny), mp(nx - 1, ny), mp(nx - 1, ny - 1), mp(nx, ny - 1)});\n\t\tnx--;\n\t}\n\twhile (nx < x) {\n\t\tif (ny != m) opt(vector<pii>{mp(nx, ny), mp(nx + 1, ny), mp(nx + 1, ny + 1), mp(nx, ny + 1)});\n\t\telse opt(vector<pii>{mp(nx, ny), mp(nx + 1, ny), mp(nx + 1, ny - 1), mp(nx, ny - 1)});\n\t\tnx++;\n\t}\n\twhile (ny > y) opt(vector<pii>{mp(nx, ny), mp(nx, ny - 1), mp(nx + 1, ny - 1), mp(nx + 1, ny)}), ny--;\n}\nnamespace Three_Times_Three {\n\tconst int MAXC = 362880;\n\tvector<int> CYC[12] = {\n\tvector<int>{0, 1, 4, 3},\n\tvector<int>{3, 4, 7, 6},\n\tvector<int>{1, 2, 5, 4},\n\tvector<int>{4, 5, 8, 7},\n\tvector<int>{0, 1, 4, 7, 6, 3},\n\tvector<int>{1, 2, 5, 8, 7, 4},\n\tvector<int>{0, 1, 2, 5, 4, 3},\n\tvector<int>{3, 4, 5, 8, 7, 6},\n\tvector<int>{0, 1, 4, 5, 8, 7, 6, 3},\n\tvector<int>{0, 1, 2, 5, 8, 7, 4, 3},\n\tvector<int>{0, 1, 2, 5, 4, 7, 6, 3},\n\tvector<int>{1, 2, 5, 8, 7, 6, 3, 4}\n\t};\n\tbool vis[MAXC + 5];\n\tvector<vector<int> > pth[MAXC + 5];\n\tint calc(vector<int> vec) {\n\t\tint prd = 1, res = 0;\n\t\tfor (int i = 8; ~i; i--) {\n\t\t\tint sum = 0;\n\t\t\tfor (int j = i + 1; j < 9; j++) sum += vec[j] < vec[i];\n\t\t\tres += sum * prd; prd *= (9 - i);\n\t\t}\n\t\treturn res;\n\t}\n\tvoid solve33() {\n\t\tqueue<vector<int> > q; vector<int> st, ed;\n\t\tfor (int i = 1; i <= 3; i++) for (int j = 1; j <= 3; j++) st.pb(a[i][j]), ed.pb(ought[i][j]);\n\t\tq.push(st);\n\t\twhile (!q.empty()) {\n\t\t\tvector<int> vec = q.front(); q.pop(); int ID = calc(vec);\n\t\t\tif (vec == ed) {for (auto v : pth[ID]) ans.pb(v); break;}\n\t\t\tfor (int i = 0; i < 12; i++) {\n\t\t\t\tvector<int> tmp = vec;\n\t\t\t\tfor (int j = 0; j < CYC[i].size(); j++) tmp[CYC[i][(j + 1) % CYC[i].size()]] = vec[CYC[i][j]];\n\t\t\t\tint nID = calc(tmp);\n\t\t\t\tif (!vis[nID]) {\n\t\t\t\t\tpth[nID] = pth[ID]; vector<int> trs;\n\t\t\t\t\tfor (int x : CYC[i]) trs.pb(vec[x]);\n\t\t\t\t\tpth[nID].pb(trs); vis[nID] = 1;\n\t\t\t\t\tq.push(tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n} using namespace Three_Times_Three;\nint main() {\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i <= n; i++) for (int j = 1; j <= m; j++)\n\t\tscanf(\"%d\", &a[i][j]), ought[i][j] = (i - 1) * m + j;\n\twhile (n > 3 || m > 3) {\n\t\tif (n < m) rotate();\n\t\tauto deal2 = [&](int id) {\n\t\t\twork(ought[n][id + 1], 1, 1); work(ought[n][id], 2, 1);\n\t\t\tfor (int i = 1; i <= n - 3; i++) opt(vector<pii>{mp(i, 1), mp(i + 1, 1), mp(i + 2, 1), mp(i + 2, 2), mp(i + 1, 2), mp(i, 2)});\n\t\t\topt(vector<pii>{mp(n - 2, 1), mp(n - 1, 1), mp(n - 1, 2), mp(n - 2, 2)});\n\t\t\tfor (int i = 1; i < id; i++) opt(vector<pii>{mp(n - 1, i), mp(n - 1, i + 1), mp(n - 1, i + 2), mp(n - 2, i + 2), mp(n - 2, i + 1), mp(n - 2, i)});\n\t\t\topt(vector<pii>{mp(n - 1, id), mp(n - 1, id + 1), mp(n, id + 1), mp(n, id)});\n\t\t\topt(vector<pii>{mp(n - 1, id), mp(n - 1, id + 1), mp(n, id + 1), mp(n, id)});\n\t\t};\n\t\tauto deal3 = [&](int id) {\n\t\t\twork(ought[n][id + 2], 1, 1); work(ought[n][id + 1], 2, 1); work(ought[n][id], 3, 1);\n\t\t\tfor (int i = 1; i <= n - 4; i++) opt(vector<pii>{mp(i, 1), mp(i + 1, 1), mp(i + 2, 1), mp(i + 3, 1), mp(i + 3, 2), mp(i + 2, 2), mp(i + 1, 2), mp(i, 2)});\n\t\t\topt(vector<pii>{mp(n - 3, 1), mp(n - 2, 1), mp(n - 1, 1), mp(n - 1, 2), mp(n - 2, 2), mp(n - 3, 2)});\n\t\t\topt(vector<pii>{mp(n - 2, 1), mp(n - 1, 1), mp(n - 1, 2), mp(n - 1, 3), mp(n - 2, 3), mp(n - 2, 2)});\n\t\t\tfor (int i = 1; i < id; i++) opt(vector<pii>{mp(n - 1, i), mp(n - 1, i + 1), mp(n - 1, i + 2), mp(n - 1, i + 3), mp(n - 2, i + 3), mp(n - 2, i + 2), mp(n - 2, i + 1), mp(n - 2, i)});\n\t\t\topt(vector<pii>{mp(n - 1, id), mp(n - 1, id + 1), mp(n - 1, id + 2), mp(n, id + 2), mp(n, id + 1), mp(n, id)});\n\t\t\topt(vector<pii>{mp(n - 1, id), mp(n - 1, id + 1), mp(n - 1, id + 2), mp(n, id + 2), mp(n, id + 1), mp(n, id)});\n\t\t\topt(vector<pii>{mp(n - 1, id), mp(n - 1, id + 1), mp(n - 1, id + 2), mp(n, id + 2), mp(n, id + 1), mp(n, id)});\n\t\t};\n\t\tif (m % 2 == 0) {\n\t\t\tfor (int i = 1; i <= m; i += 2) deal2(i);\n\t\t} else {\n\t\t\tfor (int i = 1; i <= m - 3; i += 2) deal2(i);\n\t\t\tdeal3(m - 2);\n\t\t}\n\t\tn--;\n\t}\n\tsolve33();\n\tprintf(\"%d\\n\", (int)ans.size());\n\tfor (auto v : ans) {\n\t\tprintf(\"%d\", (int)v.size());\n\t\tfor (int x : v) printf(\" %d\", x);\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n/*\n4 4\n9 5 8 11\n2 13 7 4\n15 1 3 6\n10 16 12 14\n*/\n```\n\n",
        "postTime": 1657190024,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1044E Grid Sort"
    }
]