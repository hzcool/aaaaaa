[
    {
        "content": "\u4ed4\u7ec6\u89c2\u5bdf\u9898\u9762\u53d1\u73b0\uff0c$k$\u7684\u53d6\u503c\u8fdc\u5927\u4e8e$n$\uff0c\u663e\u7136\u5728\u64cd\u4f5c\u7684\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u4e86\u5faa\u73af\uff0c\u5426\u5219\u5c31\u662f\u65e0\u6548\u64cd\u4f5c\n\u8003\u8651\u4f55\u65f6\u51fa\u73b0\u5faa\u73af\uff0c\u5f53\u51fa\u73b0\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684$x$\u65f6\n\n- \u5f53$x\\mod2==1$\u65f6\uff0c\u4f7f$d_{x+1}=4$\uff0c\u663e\u7136\uff0c\u82e5\u6b64\u65f6\u5b58\u5728$d_{x+2}==7$\uff0c\u7531\u4e8e$x\\mod2==1$\uff0c\u6240\u4ee5$x+1\\mod2==0$\uff0c\u6240\u4ee5\u4f7f$d_{x+1}=7$\uff0c\u7136\u800c\u6b64\u65f6$d_x=4$\uff0c\u6240\u4ee5$x$\u53c8\u53ef\u4ee5\u5bf9\u7b54\u6848\u9020\u6210\u4e00\u6b21\u8d21\u732e\n\n- \u5f53$x\\mod2==0$\u65f6\uff0c\u4f7f$d_{x}=7$\uff0c\u82e5\u5b58\u5728$d_{x-1}==4$\uff0c\u7531\u4e8e$x\\mod2==0$\uff0c\u6240\u4ee5$x-1\\mod==1$\uff0c\u6240\u4ee5\u53c8\u53ef\u4ee5\u8f6c\u53d8\u6210\u4e0a\u9762\u90a3\u79cd\u60c5\u51b5\n\n\u5f53\u5b58\u5728\u4e0a\u4e0b\u4e24\u79cd\u60c5\u51b5\u4e92\u76f8\u8f6c\u6362\u65f6\uff0c\u5c31\u51fa\u73b0\u5faa\u73af\uff0c\u6b64\u65f6\u6211\u4eec\u53ea\u9700\u8003\u8651$k$\u7684\u5947\u5076\u6027$O(1)$\u53d8\u6362\u5373\u53ef\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n\nconst int N = 100009;\n\nint n, k, flag;\nint d[N];\n\nint main() {\n    scanf(\"%d%d\", &n, &k);\n    flag = 0;\n    char c = getchar();\n    while (c < '0' || c > '9') c = getchar();\n    for (int i = 1; i <= n; i++) d[i] = c - '0', c = getchar(); \n    for (int i = 1; i <= n && k; i++) {\n        if (d[i] == 4 && d[i + 1] == 7 && d[i + 2] == 7 && (i & 1)) k %= 2;\n        if (d[i] == 4 && d[i + 1] == 7 && k) {\n            if (i & 1) d[i + 1] = 4;\n            else d[i] = 7;\n            i -= 2, k--;\n        }\n    }\n    for (int i = 1; i <= n; i++) putchar(d[i] + '0');\n    return 0;\n}\n```\n\n~~\u9898\u76ee\u8fd9\u4e48\u7b80\u5355\u4e0d\u8981\u95ee\u6211\u4e3a\u4ec0\u4e48\u662f\u9ed1\u7684~~",
        "postTime": 1540020967,
        "uid": 25715,
        "name": "\u8bba\u4e4b\u94ed",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF121B \u3010Lucky Transformation\u3011"
    },
    {
        "content": "# \u8fd9\u9898\u6709\u70b9\u6c34\n\n\u8fd9\u9053\u9898\u7684\u5927\u81f4\u610f\u601d\u5c31\u662f\u627e\u4e00\u4e2ax\u6700\u5c0f\u7684d[x]==4\uff0cd[x+1]==7,\u7136\u540e\u5982\u679cx\u4e3a\u5947\u6570,\u5219\u4ee4d[x+1]=4,\u53cd\u4e4b\u5219\u4ee4d[x]=7\u3002\n\n\u663e\u7136\uff0c\u66b4\u529b\u7684\u6bcf\u6b21\u53bb\u627e\u8fd9\u4e2ax\u57281e9\u8fd9\u4e48\u5927\u7684\u6570\u636e\u4e0b\u80af\u5b9a\u4f1a\u7206\u3002\n\n## \u90a3\u600e\u4e48\u529e\u5462\uff1f\n\n\u5728\u6bcf\u6b21\u66f4\u6539\u5b8c\u6210\u540e\uff0c\u4f1a\u53d1\u73b0\u9700\u8981\u91cd\u65b0\u5224\u65ad\u7684\u53ea\u6709d[x-1]\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4e0d\u7528\u6bcf\u6b21\u90fd\u627e\u51fax\uff0c\u800c\u53ef\u4ee5\u987a\u5e8f\u7684\u67e5\u627e\u4e00\u904d\uff0c\u6bcf\u6b21\u66f4\u6539\u5b8c\u540e\u9000\u4e00\u683c\u91cd\u65b0\u5224\u65ad\u5373\u53ef\u3002\n\n\u8003\u8651\u5230\u6709\u5f00\u5934\u5e8f\u53f7\u4e3a\u5947\u6570\u7684477\uff0c\u6b64\u9898\u4f1a\u8ba9\u5b83\u5728477\u4e0e447\u4e2d\u4e0d\u65ad\u8f6c\u6362\uff0c\u5219\u53ea\u9700\u8003\u8651\u5269\u4e0b\u8f6c\u6362\u7684\u60c5\u51b5\u5373\u53ef\u3002\n\n\u90a3\u4e48\u8d34\u4e0a\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,k;\nchar m[1000001];\nint main(){\n    scanf(\"%d\",&n);\n    scanf(\"%d%s\",&k,m);\n    for(int i=0;i<n&&k;i++)\n    {\n        if(m[i]=='4'&&m[i+1]=='7'&&m[i+2]=='7'&&!(i&1))\tk=k%2;//\u627e477\n        if(k&&m[i]=='4'&&m[i+1]=='7'){\n            if(i&1) m[i]=m[i+1];\n            else m[i+1]=m[i];\n            i-=2;\n            k--;//\u5269\u4e0b\u7684\u5c31\u666e\u901a\u64cd\u4f5c\n        }\n    }\t\n    printf(\"%s\",m);\n    return 0;\n}\n    \n\n```",
        "postTime": 1532563812,
        "uid": 64037,
        "name": "\u971c\u6708\u3081\u304f\u308a",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF121B \u3010Lucky Transformation\u3011"
    }
]