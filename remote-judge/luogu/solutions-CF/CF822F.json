[
    {
        "content": "\u8d2a\u5fc3\u9898\u3002\n\n\u9996\u5148\u53ef\u4ee5\u60f3\u5230\uff0c\u8ba9\u6bcf\u4e2a\u70b9\u88ab\u7ecf\u8fc7\u7684\u6b21\u6570\u5c3d\u53ef\u80fd\u591a\uff0c\u5c31\u662f\u8ba9\u6bcf\u6761\u8def\u5f84\u7684\u957f\u5ea6\u5c3d\u53ef\u80fd\u77ed\u3002\u89c2\u5bdf\u5230\u5728\u4e00\u6761\u8def\u5f84\u4e0a\u53ea\u653e\u7f6e\u4e00\u4e2a\u70b9\uff0c\u4e00\u5b9a\u4e0d\u4f18\u4e8e\u5728\u8fd9\u6761\u8def\u5f84\u4e0a\u7684\u6bcf\u6761\u8fb9\u653e\u4e00\u4e2a\u70b9\u3002\u90a3\u4e48\u5c31\u53ef\u4ee5\u628a\u6bcf\u6761\u8fb9\u5355\u72ec\u5212\u5206\u4e3a\u4e00\u6761\u8def\u5f84\u3002\n\n\u8fd9\u6837\u5212\u5206\uff0c\u6811\u4e0a\u72b6\u6001\u7684\u53d8\u5316\u5468\u671f\u4e3a $2s$\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u8fd9 $2s$ \u5185\u8ba1\u65f6\u5668\u7684\u6700\u5927\u503c\u3002\n\n\u8bbe\u4e00\u4e2a\u70b9 $u$ \u7684\u5ea6\u6570\u4e3a $deg_u$\uff0c\u90a3\u4e48\u5c31\u4f1a\u6709 $deg_u$ \u4e2a\u70b9\u5728\u5468\u671f\u5185\u7ecf\u8fc7\u70b9 $u$\u3002\u4f7f\u6bcf\u4e2a\u70b9\u5230\u8fbe\u65f6\u95f4\u95f4\u9694\u7684\u6700\u5927\u503c\u6700\u5c0f\uff0c\u5c31\u662f\u8ba9\u5b83\u4eec\u95f4\u9694\u65f6\u95f4\u5168\u90e8\u76f8\u7b49\uff0c\u4e3a $\\frac{2}{deg_u}$\u3002\n\n\u81ea\u4e0a\u800c\u4e0b\u8d2a\u5fc3\uff0c\u6839\u636e\u7236\u4eb2\u8fb9\u4e0a\u70b9\u5230\u8fbe\u7684\u65f6\u95f4\u548c\u5df2\u77e5\u65f6\u95f4\u95f4\u9694 $\\frac{2}{deg_u}$\uff0c\u4e00\u5b9a\u53ef\u4ee5\u6784\u9020\u51fa\u67d0\u79cd\u53ef\u884c\u89e3\u3002\n\n\u6b64\u65f6\u6ee1\u8db3\u6bcf\u4e2a\u8ba1\u65f6\u5668\u7684\u6700\u5927\u503c\u6700\u5c0f\uff0c\u5373\u5b57\u5178\u5e8f\u4e5f\u6700\u5c0f\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read()\n{\n\tint xr=0,F=1;char cr=getchar();\n\twhile(cr<'0'||cr>'9') {if(cr=='-') F=-1;cr=getchar();}\n\twhile(cr>='0'&&cr<='9')\n\t    xr=(xr<<3)+(xr<<1)+(cr^48),cr=getchar();\n\treturn xr*F;\n}\ntypedef double db;\nconst int N=505;\nint n,head[N],deg[N],cnt;\nstruct node{\n\tint nxt,to,id;\n}e[N<<1];\nvoid add(int u,int v,int id){\n\te[++cnt]={head[u],v,id};head[u]=cnt;\n}\ndb lst[N];\nvoid dfs(int now,int fa)\n{\n\tfor(int i=head[now];i;i=e[i].nxt)\n\t{\n\t\tint v=e[i].to;\n\t\tif(v==fa) continue;\n\t\tlst[now]+=(2.0/(db)deg[now]);\n\t\tif(lst[now]>2) lst[now]-=2;\n\t\tif(lst[now]<1)\n\t\t{\n\t\t\tprintf(\"1 %d %d %d %.6lf\\n\",e[i].id,v,now,lst[now]);\n\t\t\tlst[v]=lst[now]+1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"1 %d %d %d %.6lf\\n\",e[i].id,now,v,lst[now]-1);\n\t\t\tlst[v]=lst[now]-1;\n\t\t}\n\t\tdfs(v,now);\n\t}\n}\nint main()\n{\n\tn=read();printf(\"%d\\n\",n-1);\n\tfor(int i=1,u,v;i<n;i++) \n\t{\n\t\tu=read(),v=read();\n\t\tadd(u,v,i),add(v,u,i);\n\t\tdeg[u]++,deg[v]++;\n\t}\n\tdfs(1,0);\n\treturn 0;\n}\n```",
        "postTime": 1670204829,
        "uid": 234074,
        "name": "\u6a31\u96ea\u55b5",
        "ccfLevel": 7,
        "title": "CF822F Madness"
    },
    {
        "content": "### CF822F Madness\n\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u6bcf\u4e2a\u8def\u5f84\u53ea\u9009\u62e9\u4e00\u6761\u8fb9\u5c31\u662f\u6700\u4f18\u7684\n\n\u53ef\u4ee5\u8fd9\u6837\u7406\u89e3\u4e00\u4e0b\uff0c\u56e0\u4e3a\u5982\u679c\u4e00\u4e2a\u8def\u5f84\u5305\u542b\u591a\u4e2a\u8fb9\uff0c\u90a3\u4e48\u8fd9\u5185\u90e8\u7684\u4e00\u4e2a\u7aef\u70b9\u4e0a\u7684\u8ba1\u65f6\u5668\u80af\u5b9a\u4e0d\u4f18\u4e8e\u5728\u8fd9\u4e2a\u7aef\u70b9\u4e0a\u5728\u52a0\u4e00\u4e2a\u65b0\u7684\u52a8\u70b9\n\n\u56e0\u4e3a\u4e00\u4e2a\u70b9\u6765\u56de\u8dd1\u9700\u8981$2s$\u6240\u4ee5\u6bcf\u4e2a\u70b9\u6700\u5927\u663e\u793a\u5b9e\u73b0\u6700\u5c0f\u5c31\u662f$\\dfrac{2}{deg}$\uff0c$deg$\u662f\u8fd9\u4e2a\u70b9\u7684\u5ea6\u6570\n\n\u7136\u540e\u6211\u4eec\u53ea\u8981\u6df1\u641c\u8d2a\u5fc3\u7684\u6784\u9020\u4e00\u4e0b\u6700\u5c0f\u503c\u5c31\u597d\u4e86\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 105;\nint n, u[N], v[N], head[N], deg[N], ecnt, To[N];\ndouble ans[N];\nstruct Edge {\n    int v, nxt;\n} edge[N * 2];\nvoid add(int x, int y) {\n    edge[++ecnt].v = y;\n    edge[ecnt].nxt = head[x];\n    head[x]        = ecnt;\n}\nvoid dfs(int x, int fa, double lst) {\n    double time = 2.0 / deg[x];\n    for (int i = head[x]; i; i = edge[i].nxt) {\n        if (edge[i].v != fa) {\n            lst += time;\n            while (lst > 2) {\n                lst -= 2;\n            }\n            int id = (i + 1) / 2;\n            if (lst <= 1) {\n                To[id] = x, ans[id] = lst;\n            } else {\n                To[id] = edge[i].v, ans[id] = lst - 1;\n            }\n            dfs(edge[i].v, x, lst + 1);\n        }\n    }\n}\nint main() {\n    cin >> n;\n    for (int i = 1; i < n; i++) {\n        cin >> u[i] >> v[i];\n        add(u[i], v[i]);\n        add(v[i], u[i]);\n        deg[u[i]]++;\n        deg[v[i]]++;\n    }\n    dfs(1, -1, 0);\n    cout << n - 1 << endl;\n    for (int i = 1; i < n; i++) {\n        printf(\"1 %d %d %d %.8lf\\n\", i, u[i] + v[i] - To[i], To[i], ans[i]);\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1610367424,
        "uid": 46099,
        "name": "YCS_GG",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF822F \u3010Madness\u3011"
    }
]